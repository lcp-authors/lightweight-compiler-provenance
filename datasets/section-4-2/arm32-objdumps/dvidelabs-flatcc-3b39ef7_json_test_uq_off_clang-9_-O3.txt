
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf32-littlearm


Disassembly of section .init:

00014e0c <.init>:
   14e0c:	push	{r3, lr}
   14e10:	bl	14f8c <_start@@Base+0x3c>
   14e14:	pop	{r3, pc}

Disassembly of section .plt:

00014e18 <raise@plt-0x14>:
   14e18:	push	{lr}		; (str lr, [sp, #-4]!)
   14e1c:	ldr	lr, [pc, #4]	; 14e28 <raise@plt-0x4>
   14e20:	add	lr, pc, lr
   14e24:	ldr	pc, [lr, #8]!
   14e28:	ldrdeq	r8, [r4], -r8	; <UNPREDICTABLE>

00014e2c <raise@plt>:
   14e2c:	add	ip, pc, #0, 12
   14e30:	add	ip, ip, #72, 20	; 0x48000
   14e34:	ldr	pc, [ip, #472]!	; 0x1d8

00014e38 <strcmp@plt>:
   14e38:	add	ip, pc, #0, 12
   14e3c:	add	ip, ip, #72, 20	; 0x48000
   14e40:	ldr	pc, [ip, #464]!	; 0x1d0

00014e44 <memmove@plt>:
   14e44:	add	ip, pc, #0, 12
   14e48:	add	ip, ip, #72, 20	; 0x48000
   14e4c:	ldr	pc, [ip, #456]!	; 0x1c8

00014e50 <free@plt>:
   14e50:	add	ip, pc, #0, 12
   14e54:	add	ip, ip, #72, 20	; 0x48000
   14e58:	ldr	pc, [ip, #448]!	; 0x1c0

00014e5c <memcpy@plt>:
   14e5c:	add	ip, pc, #0, 12
   14e60:	add	ip, ip, #72, 20	; 0x48000
   14e64:	ldr	pc, [ip, #440]!	; 0x1b8

00014e68 <__isinff@plt>:
   14e68:	add	ip, pc, #0, 12
   14e6c:	add	ip, ip, #72, 20	; 0x48000
   14e70:	ldr	pc, [ip, #432]!	; 0x1b0

00014e74 <__isinf@plt>:
   14e74:	add	ip, pc, #0, 12
   14e78:	add	ip, ip, #72, 20	; 0x48000
   14e7c:	ldr	pc, [ip, #424]!	; 0x1a8

00014e80 <realloc@plt>:
   14e80:	add	ip, pc, #0, 12
   14e84:	add	ip, ip, #72, 20	; 0x48000
   14e88:	ldr	pc, [ip, #416]!	; 0x1a0

00014e8c <fwrite@plt>:
   14e8c:	add	ip, pc, #0, 12
   14e90:	add	ip, ip, #72, 20	; 0x48000
   14e94:	ldr	pc, [ip, #408]!	; 0x198

00014e98 <malloc@plt>:
   14e98:	add	ip, pc, #0, 12
   14e9c:	add	ip, ip, #72, 20	; 0x48000
   14ea0:	ldr	pc, [ip, #400]!	; 0x190

00014ea4 <__libc_start_main@plt>:
   14ea4:	add	ip, pc, #0, 12
   14ea8:	add	ip, ip, #72, 20	; 0x48000
   14eac:	ldr	pc, [ip, #392]!	; 0x188

00014eb0 <__gmon_start__@plt>:
   14eb0:	add	ip, pc, #0, 12
   14eb4:	add	ip, ip, #72, 20	; 0x48000
   14eb8:	ldr	pc, [ip, #384]!	; 0x180

00014ebc <bcmp@plt>:
   14ebc:	add	ip, pc, #0, 12
   14ec0:	add	ip, ip, #72, 20	; 0x48000
   14ec4:	ldr	pc, [ip, #376]!	; 0x178

00014ec8 <strlen@plt>:
   14ec8:	add	ip, pc, #0, 12
   14ecc:	add	ip, ip, #72, 20	; 0x48000
   14ed0:	ldr	pc, [ip, #368]!	; 0x170

00014ed4 <fprintf@plt>:
   14ed4:	add	ip, pc, #0, 12
   14ed8:	add	ip, ip, #72, 20	; 0x48000
   14edc:	ldr	pc, [ip, #360]!	; 0x168

00014ee0 <posix_memalign@plt>:
   14ee0:	add	ip, pc, #0, 12
   14ee4:	add	ip, ip, #72, 20	; 0x48000
   14ee8:	ldr	pc, [ip, #352]!	; 0x160

00014eec <memset@plt>:
   14eec:	add	ip, pc, #0, 12
   14ef0:	add	ip, ip, #72, 20	; 0x48000
   14ef4:	ldr	pc, [ip, #344]!	; 0x158

00014ef8 <strncpy@plt>:
   14ef8:	add	ip, pc, #0, 12
   14efc:	add	ip, ip, #72, 20	; 0x48000
   14f00:	ldr	pc, [ip, #336]!	; 0x150

00014f04 <strtod@plt>:
   14f04:	add	ip, pc, #0, 12
   14f08:	add	ip, ip, #72, 20	; 0x48000
   14f0c:	ldr	pc, [ip, #328]!	; 0x148

00014f10 <memchr@plt>:
   14f10:	add	ip, pc, #0, 12
   14f14:	add	ip, ip, #72, 20	; 0x48000
   14f18:	ldr	pc, [ip, #320]!	; 0x140

00014f1c <fputc@plt>:
   14f1c:	add	ip, pc, #0, 12
   14f20:	add	ip, ip, #72, 20	; 0x48000
   14f24:	ldr	pc, [ip, #312]!	; 0x138

00014f28 <sprintf@plt>:
   14f28:	add	ip, pc, #0, 12
   14f2c:	add	ip, ip, #72, 20	; 0x48000
   14f30:	ldr	pc, [ip, #304]!	; 0x130

00014f34 <abort@plt>:
   14f34:	add	ip, pc, #0, 12
   14f38:	add	ip, ip, #72, 20	; 0x48000
   14f3c:	ldr	pc, [ip, #296]!	; 0x128

00014f40 <__assert_fail@plt>:
   14f40:	add	ip, pc, #0, 12
   14f44:	add	ip, ip, #72, 20	; 0x48000
   14f48:	ldr	pc, [ip, #288]!	; 0x120

Disassembly of section .text:

00014f50 <_start@@Base>:
   14f50:	mov	fp, #0
   14f54:	mov	lr, #0
   14f58:	pop	{r1}		; (ldr r1, [sp], #4)
   14f5c:	mov	r2, sp
   14f60:	push	{r2}		; (str r2, [sp, #-4]!)
   14f64:	push	{r0}		; (str r0, [sp, #-4]!)
   14f68:	ldr	ip, [pc, #16]	; 14f80 <_start@@Base+0x30>
   14f6c:	push	{ip}		; (str ip, [sp, #-4]!)
   14f70:	ldr	r0, [pc, #12]	; 14f84 <_start@@Base+0x34>
   14f74:	ldr	r3, [pc, #12]	; 14f88 <_start@@Base+0x38>
   14f78:	bl	14ea4 <__libc_start_main@plt>
   14f7c:	bl	14f34 <abort@plt>
   14f80:	andeq	r6, r4, r8, asr #5
   14f84:	andeq	r5, r1, r0, asr sp
   14f88:	andeq	r6, r4, r8, ror #4
   14f8c:	ldr	r3, [pc, #20]	; 14fa8 <_start@@Base+0x58>
   14f90:	ldr	r2, [pc, #20]	; 14fac <_start@@Base+0x5c>
   14f94:	add	r3, pc, r3
   14f98:	ldr	r2, [r3, r2]
   14f9c:	cmp	r2, #0
   14fa0:	bxeq	lr
   14fa4:	b	14eb0 <__gmon_start__@plt>
   14fa8:	andeq	r8, r4, r4, rrx
   14fac:	andeq	r0, r0, ip, rrx
   14fb0:	ldr	r0, [pc, #24]	; 14fd0 <_start@@Base+0x80>
   14fb4:	ldr	r3, [pc, #24]	; 14fd4 <_start@@Base+0x84>
   14fb8:	cmp	r3, r0
   14fbc:	bxeq	lr
   14fc0:	ldr	r3, [pc, #16]	; 14fd8 <_start@@Base+0x88>
   14fc4:	cmp	r3, #0
   14fc8:	bxeq	lr
   14fcc:	bx	r3
   14fd0:	andeq	sp, r5, r4, asr #6
   14fd4:	andeq	sp, r5, r4, asr #6
   14fd8:	andeq	r0, r0, r0
   14fdc:	ldr	r0, [pc, #36]	; 15008 <_start@@Base+0xb8>
   14fe0:	ldr	r1, [pc, #36]	; 1500c <_start@@Base+0xbc>
   14fe4:	sub	r1, r1, r0
   14fe8:	asr	r1, r1, #2
   14fec:	add	r1, r1, r1, lsr #31
   14ff0:	asrs	r1, r1, #1
   14ff4:	bxeq	lr
   14ff8:	ldr	r3, [pc, #16]	; 15010 <_start@@Base+0xc0>
   14ffc:	cmp	r3, #0
   15000:	bxeq	lr
   15004:	bx	r3
   15008:	andeq	sp, r5, r4, asr #6
   1500c:	andeq	sp, r5, r4, asr #6
   15010:	andeq	r0, r0, r0
   15014:	push	{r4, lr}
   15018:	ldr	r4, [pc, #24]	; 15038 <_start@@Base+0xe8>
   1501c:	ldrb	r3, [r4]
   15020:	cmp	r3, #0
   15024:	popne	{r4, pc}
   15028:	bl	14fb0 <_start@@Base+0x60>
   1502c:	mov	r3, #1
   15030:	strb	r3, [r4]
   15034:	pop	{r4, pc}
   15038:	andeq	sp, r5, r0, asr r3
   1503c:	b	14fdc <_start@@Base+0x8c>

00015040 <test_json@@Base>:
   15040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15044:	add	fp, sp, #28
   15048:	sub	sp, sp, #364	; 0x16c
   1504c:	mov	r6, r0
   15050:	add	r0, sp, #100	; 0x64
   15054:	mov	r7, r3
   15058:	mov	r9, r2
   1505c:	mov	r4, r1
   15060:	bl	2d544 <flatcc_builder_init@@Base>
   15064:	add	r0, sp, #12
   15068:	mov	r1, #0
   1506c:	bl	45784 <flatcc_json_printer_init_dynamic_buffer@@Base>
   15070:	ldr	r0, [fp, #12]
   15074:	ldr	r5, [fp, #8]
   15078:	ldr	r8, [fp, #16]
   1507c:	uxtb	r1, r0
   15080:	tst	r0, #16
   15084:	ubfx	r2, r1, #3, #1
   15088:	strb	r2, [sp, #41]	; 0x29
   1508c:	ubfx	r2, r1, #2, #1
   15090:	strb	r2, [sp, #40]	; 0x28
   15094:	ubfx	r1, r1, #1, #1
   15098:	strb	r1, [sp, #39]	; 0x27
   1509c:	and	r1, r0, #1
   150a0:	strb	r1, [sp, #38]	; 0x26
   150a4:	movne	r1, #2
   150a8:	strbne	r1, [sp, #37]	; 0x25
   150ac:	tst	r0, #32
   150b0:	movne	r0, #0
   150b4:	strbne	r0, [sp, #39]	; 0x27
   150b8:	movwne	r0, #258	; 0x102
   150bc:	strhne	r0, [sp, #37]	; 0x25
   150c0:	mov	r0, r4
   150c4:	bl	14ec8 <strlen@plt>
   150c8:	mov	r3, r0
   150cc:	ldm	r6, {r0, r1}
   150d0:	str	r5, [sp]
   150d4:	mov	r2, r4
   150d8:	stmib	sp, {r0, r1}
   150dc:	add	r0, sp, #100	; 0x64
   150e0:	add	r1, sp, #60	; 0x3c
   150e4:	bl	389b8 <flatcc_json_parser_table_as_root@@Base>
   150e8:	cmp	r0, r7
   150ec:	bne	1519c <test_json@@Base+0x15c>
   150f0:	mov	r5, #0
   150f4:	cmp	r7, #0
   150f8:	beq	15104 <test_json@@Base+0xc4>
   150fc:	mov	r4, #0
   15100:	b	15178 <test_json@@Base+0x138>
   15104:	add	r0, sp, #100	; 0x64
   15108:	sub	r1, fp, #56	; 0x38
   1510c:	bl	31fe4 <flatcc_builder_finalize_aligned_buffer@@Base>
   15110:	ldr	r2, [r6]
   15114:	ldr	r3, [r6, #12]
   15118:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1511c:	mov	r4, r0
   15120:	bl	33320 <flatcc_verify_table_as_root@@Base>
   15124:	cmp	r0, #0
   15128:	bne	15260 <test_json@@Base+0x220>
   1512c:	ldr	r0, [r6, #8]
   15130:	ldr	r3, [r6]
   15134:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15138:	add	r6, sp, #12
   1513c:	mov	r1, r4
   15140:	str	r0, [sp]
   15144:	mov	r0, r6
   15148:	bl	44e20 <flatcc_json_printer_table_as_root@@Base>
   1514c:	sub	r1, fp, #60	; 0x3c
   15150:	mov	r0, r6
   15154:	bl	458b0 <flatcc_json_printer_get_buffer@@Base>
   15158:	mov	r6, r0
   1515c:	cmp	r0, #0
   15160:	beq	151d0 <test_json@@Base+0x190>
   15164:	mov	r0, r9
   15168:	mov	r1, r6
   1516c:	bl	14e38 <strcmp@plt>
   15170:	cmp	r0, #0
   15174:	bne	151d0 <test_json@@Base+0x190>
   15178:	mov	r0, r4
   1517c:	bl	32124 <flatcc_builder_aligned_free@@Base>
   15180:	add	r0, sp, #100	; 0x64
   15184:	bl	2daec <flatcc_builder_clear@@Base>
   15188:	add	r0, sp, #12
   1518c:	bl	45948 <flatcc_json_printer_clear@@Base>
   15190:	mov	r0, r5
   15194:	sub	sp, fp, #28
   15198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1519c:	movw	r6, #54088	; 0xd348
   151a0:	cmp	r7, #0
   151a4:	movt	r6, #5
   151a8:	beq	1523c <test_json@@Base+0x1fc>
   151ac:	ldr	r5, [r6]
   151b0:	cmp	r0, #0
   151b4:	bne	152e0 <test_json@@Base+0x2a0>
   151b8:	mov	r0, r7
   151bc:	bl	3452c <flatcc_json_parser_error_string@@Base>
   151c0:	movw	r1, #25346	; 0x6302
   151c4:	mov	r3, r0
   151c8:	movt	r1, #4
   151cc:	b	15250 <test_json@@Base+0x210>
   151d0:	movw	r7, #54088	; 0xd348
   151d4:	movw	r1, #25560	; 0x63d8
   151d8:	mov	r2, r8
   151dc:	movt	r7, #5
   151e0:	movt	r1, #4
   151e4:	ldr	r0, [r7]
   151e8:	bl	14ed4 <fprintf@plt>
   151ec:	movw	r5, #36385	; 0x8e21
   151f0:	ldr	r0, [r7]
   151f4:	mov	r2, r6
   151f8:	movt	r5, #4
   151fc:	mov	r1, r5
   15200:	bl	14ed4 <fprintf@plt>
   15204:	ldr	r3, [r7]
   15208:	movw	r0, #25613	; 0x640d
   1520c:	mov	r1, #10
   15210:	mov	r2, #1
   15214:	movt	r0, #4
   15218:	bl	14e8c <fwrite@plt>
   1521c:	ldr	r0, [r7]
   15220:	mov	r1, r5
   15224:	mov	r2, r9
   15228:	bl	14ed4 <fprintf@plt>
   1522c:	mvn	r5, #0
   15230:	cmp	r4, #0
   15234:	beq	150fc <test_json@@Base+0xbc>
   15238:	b	1529c <test_json@@Base+0x25c>
   1523c:	ldr	r5, [r6]
   15240:	bl	3452c <flatcc_json_parser_error_string@@Base>
   15244:	movw	r1, #25410	; 0x6342
   15248:	mov	r3, r0
   1524c:	movt	r1, #4
   15250:	mov	r0, r5
   15254:	mov	r2, r8
   15258:	bl	14ed4 <fprintf@plt>
   1525c:	b	1531c <test_json@@Base+0x2dc>
   15260:	movw	r1, #54088	; 0xd348
   15264:	movt	r1, #5
   15268:	ldr	r5, [r1]
   1526c:	bl	326dc <flatcc_verify_error_string@@Base>
   15270:	movw	r1, #25446	; 0x6366
   15274:	movw	r2, #25485	; 0x638d
   15278:	str	r0, [sp]
   1527c:	mov	r0, r5
   15280:	mov	r3, r8
   15284:	movt	r1, #4
   15288:	movt	r2, #4
   1528c:	bl	14ed4 <fprintf@plt>
   15290:	mvn	r5, #0
   15294:	cmp	r4, #0
   15298:	beq	150fc <test_json@@Base+0xbc>
   1529c:	movw	r0, #54088	; 0xd348
   152a0:	movw	r1, #36378	; 0x8e1a
   152a4:	movw	r2, #25624	; 0x6418
   152a8:	ldr	r9, [fp, #-56]	; 0xffffffc8
   152ac:	movt	r0, #5
   152b0:	movt	r1, #4
   152b4:	movt	r2, #4
   152b8:	ldr	r6, [r0]
   152bc:	mov	r0, r6
   152c0:	bl	14ed4 <fprintf@plt>
   152c4:	cmp	r9, #0
   152c8:	beq	15454 <test_json@@Base+0x414>
   152cc:	sub	r7, fp, #49	; 0x31
   152d0:	mov	r8, #0
   152d4:	ands	sl, r8, #15
   152d8:	bne	15404 <test_json@@Base+0x3c4>
   152dc:	b	153e4 <test_json@@Base+0x3a4>
   152e0:	bl	3452c <flatcc_json_parser_error_string@@Base>
   152e4:	movw	r1, #25308	; 0x62dc
   152e8:	mov	r3, r0
   152ec:	mov	r0, r5
   152f0:	mov	r2, r8
   152f4:	movt	r1, #4
   152f8:	bl	14ed4 <fprintf@plt>
   152fc:	ldr	r5, [r6]
   15300:	mov	r0, r7
   15304:	bl	3452c <flatcc_json_parser_error_string@@Base>
   15308:	movw	r1, #25379	; 0x6323
   1530c:	mov	r2, r0
   15310:	mov	r0, r5
   15314:	movt	r1, #4
   15318:	bl	14ed4 <fprintf@plt>
   1531c:	ldr	r0, [r6]
   15320:	movw	r1, #36385	; 0x8e21
   15324:	mov	r2, r4
   15328:	movt	r1, #4
   1532c:	bl	14ed4 <fprintf@plt>
   15330:	ldr	r0, [sp, #76]	; 0x4c
   15334:	ldr	r3, [r6]
   15338:	cmp	r0, #2
   1533c:	blt	15368 <test_json@@Base+0x328>
   15340:	mov	r4, #0
   15344:	mov	r0, #32
   15348:	mov	r1, r3
   1534c:	bl	14f1c <fputc@plt>
   15350:	ldr	r0, [sp, #76]	; 0x4c
   15354:	ldr	r3, [r6]
   15358:	add	r4, r4, #1
   1535c:	sub	r0, r0, #1
   15360:	cmp	r4, r0
   15364:	blt	15344 <test_json@@Base+0x304>
   15368:	movw	r0, #25443	; 0x6363
   1536c:	mov	r1, #2
   15370:	mov	r2, #1
   15374:	movt	r0, #4
   15378:	bl	14e8c <fwrite@plt>
   1537c:	mvn	r5, #0
   15380:	b	150fc <test_json@@Base+0xbc>
   15384:	movw	r1, #36389	; 0x8e25
   15388:	mov	r0, r6
   1538c:	mov	r2, r8
   15390:	movt	r1, #4
   15394:	bl	14ed4 <fprintf@plt>
   15398:	ldrb	r2, [r4, r8]
   1539c:	movw	r1, #36397	; 0x8e2d
   153a0:	mov	r0, r6
   153a4:	movt	r1, #4
   153a8:	bl	14ed4 <fprintf@plt>
   153ac:	ldrb	r0, [r4, r8]
   153b0:	add	r8, r8, #1
   153b4:	sub	r1, r0, #32
   153b8:	uxtb	r1, r1
   153bc:	cmp	r1, #94	; 0x5e
   153c0:	mov	r1, #0
   153c4:	movwhi	r0, #46	; 0x2e
   153c8:	cmp	r9, r8
   153cc:	strb	r0, [r7, sl]
   153d0:	add	r0, r7, sl
   153d4:	strb	r1, [r0, #1]
   153d8:	beq	1541c <test_json@@Base+0x3dc>
   153dc:	ands	sl, r8, #15
   153e0:	bne	15404 <test_json@@Base+0x3c4>
   153e4:	cmp	r8, #0
   153e8:	beq	15384 <test_json@@Base+0x344>
   153ec:	movw	r1, #36383	; 0x8e1f
   153f0:	mov	r0, r6
   153f4:	mov	r2, r7
   153f8:	movt	r1, #4
   153fc:	bl	14ed4 <fprintf@plt>
   15400:	b	15384 <test_json@@Base+0x344>
   15404:	tst	r8, #7
   15408:	bne	15398 <test_json@@Base+0x358>
   1540c:	mov	r0, #32
   15410:	mov	r1, r6
   15414:	bl	14f1c <fputc@plt>
   15418:	b	15398 <test_json@@Base+0x358>
   1541c:	tst	r9, #15
   15420:	beq	15454 <test_json@@Base+0x414>
   15424:	movw	r8, #36403	; 0x8e33
   15428:	add	r7, r9, #1
   1542c:	movt	r8, #4
   15430:	mov	r0, r8
   15434:	mov	r1, #3
   15438:	mov	r2, #1
   1543c:	mov	r3, r6
   15440:	bl	14e8c <fwrite@plt>
   15444:	add	r0, r7, #1
   15448:	tst	r7, #15
   1544c:	mov	r7, r0
   15450:	bne	15430 <test_json@@Base+0x3f0>
   15454:	movw	r1, #36383	; 0x8e1f
   15458:	sub	r2, fp, #49	; 0x31
   1545c:	mov	r0, r6
   15460:	movt	r1, #4
   15464:	bl	14ed4 <fprintf@plt>
   15468:	b	15178 <test_json@@Base+0x138>

0001546c <edge_case_tests@@Base>:
   1546c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15470:	add	fp, sp, #28
   15474:	sub	sp, sp, #28
   15478:	movw	r4, #37332	; 0x91d4
   1547c:	movw	r1, #25638	; 0x6426
   15480:	movw	r2, #25691	; 0x645b
   15484:	mov	r0, #158	; 0x9e
   15488:	mov	r9, #0
   1548c:	mov	r3, #0
   15490:	movt	r4, #4
   15494:	movt	r1, #4
   15498:	movt	r2, #4
   1549c:	str	r0, [sp, #8]
   154a0:	str	r9, [sp]
   154a4:	str	r9, [sp, #4]
   154a8:	mov	r0, r4
   154ac:	bl	15040 <test_json@@Base>
   154b0:	movw	r5, #25721	; 0x6479
   154b4:	movw	sl, #25754	; 0x649a
   154b8:	str	r0, [sp, #24]
   154bc:	mov	r7, #2
   154c0:	mov	r0, #168	; 0xa8
   154c4:	mov	r3, #0
   154c8:	movt	r5, #4
   154cc:	movt	sl, #4
   154d0:	stm	sp, {r7, r9}
   154d4:	str	r0, [sp, #8]
   154d8:	mov	r0, r4
   154dc:	mov	r1, r5
   154e0:	mov	r2, sl
   154e4:	bl	15040 <test_json@@Base>
   154e8:	movw	r1, #25788	; 0x64bc
   154ec:	movw	r2, #25827	; 0x64e3
   154f0:	str	r0, [sp, #20]
   154f4:	mov	r0, #172	; 0xac
   154f8:	mov	r3, #0
   154fc:	str	r9, [sp]
   15500:	str	r7, [sp, #4]
   15504:	movt	r1, #4
   15508:	movt	r2, #4
   1550c:	str	r0, [sp, #8]
   15510:	mov	r0, r4
   15514:	bl	15040 <test_json@@Base>
   15518:	movw	r2, #25856	; 0x6500
   1551c:	str	r0, [sp, #16]
   15520:	mov	r0, #176	; 0xb0
   15524:	mov	r1, #4
   15528:	mov	r3, #0
   1552c:	str	r7, [sp]
   15530:	movt	r2, #4
   15534:	str	r1, [sp, #4]
   15538:	str	r0, [sp, #8]
   1553c:	mov	r0, r4
   15540:	mov	r1, r5
   15544:	bl	15040 <test_json@@Base>
   15548:	mov	r1, #8
   1554c:	movw	r2, #25909	; 0x6535
   15550:	str	r0, [sp, #12]
   15554:	mov	r0, #180	; 0xb4
   15558:	mov	r3, #0
   1555c:	str	r9, [sp]
   15560:	str	r1, [sp, #4]
   15564:	movw	r1, #25875	; 0x6513
   15568:	movt	r2, #4
   1556c:	str	r0, [sp, #8]
   15570:	mov	r0, r4
   15574:	movt	r1, #4
   15578:	bl	15040 <test_json@@Base>
   1557c:	movw	r1, #26183	; 0x6647
   15580:	mov	r6, r0
   15584:	mov	r0, #195	; 0xc3
   15588:	stm	sp, {r7, r9}
   1558c:	mov	r2, sl
   15590:	mov	r3, #0
   15594:	movt	r1, #4
   15598:	str	r0, [sp, #8]
   1559c:	mov	r0, r4
   155a0:	bl	15040 <test_json@@Base>
   155a4:	movw	r5, #26221	; 0x666d
   155a8:	movw	r2, #26271	; 0x669f
   155ac:	mov	r7, r0
   155b0:	mov	r0, #199	; 0xc7
   155b4:	mov	sl, #1
   155b8:	mov	r3, #0
   155bc:	str	r9, [sp, #4]
   155c0:	movt	r5, #4
   155c4:	movt	r2, #4
   155c8:	str	r0, [sp, #8]
   155cc:	mov	r0, r4
   155d0:	str	sl, [sp]
   155d4:	mov	r1, r5
   155d8:	bl	15040 <test_json@@Base>
   155dc:	movw	r2, #26298	; 0x66ba
   155e0:	mov	r8, r0
   155e4:	mov	r0, #203	; 0xcb
   155e8:	mov	r1, r5
   155ec:	mov	r3, #0
   155f0:	str	sl, [sp]
   155f4:	str	sl, [sp, #4]
   155f8:	movt	r2, #4
   155fc:	str	r0, [sp, #8]
   15600:	mov	r0, r4
   15604:	bl	15040 <test_json@@Base>
   15608:	mov	r1, #209	; 0xd1
   1560c:	ldr	r2, [sp, #20]
   15610:	mov	r3, #0
   15614:	str	sl, [sp]
   15618:	str	r9, [sp, #4]
   1561c:	str	r1, [sp, #8]
   15620:	ldr	r1, [sp, #24]
   15624:	orr	r1, r2, r1
   15628:	ldr	r2, [sp, #16]
   1562c:	orr	r1, r1, r2
   15630:	ldr	r2, [sp, #12]
   15634:	orr	r1, r1, r2
   15638:	movw	r2, #26271	; 0x669f
   1563c:	orr	r1, r1, r6
   15640:	movt	r2, #4
   15644:	orr	r1, r1, r7
   15648:	orr	r1, r1, r8
   1564c:	orr	r5, r1, r0
   15650:	movw	r1, #26321	; 0x66d1
   15654:	mov	r0, r4
   15658:	movt	r1, #4
   1565c:	bl	15040 <test_json@@Base>
   15660:	orr	r0, r5, r0
   15664:	sub	sp, fp, #28
   15668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001566c <error_case_tests@@Base>:
   1566c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15670:	add	fp, sp, #28
   15674:	sub	sp, sp, #36	; 0x24
   15678:	movw	r4, #37332	; 0x91d4
   1567c:	movw	r1, #26434	; 0x6742
   15680:	movw	r0, #285	; 0x11d
   15684:	mov	r6, #0
   15688:	mov	r2, #0
   1568c:	mov	r3, #13
   15690:	movt	r4, #4
   15694:	movt	r1, #4
   15698:	str	r0, [sp, #8]
   1569c:	str	r6, [sp]
   156a0:	str	r6, [sp, #4]
   156a4:	mov	r0, r4
   156a8:	bl	15040 <test_json@@Base>
   156ac:	movw	r1, #26460	; 0x675c
   156b0:	str	r0, [sp, #32]
   156b4:	movw	r0, #287	; 0x11f
   156b8:	mov	r2, #0
   156bc:	mov	r3, #13
   156c0:	str	r6, [sp]
   156c4:	str	r6, [sp, #4]
   156c8:	movt	r1, #4
   156cc:	str	r0, [sp, #8]
   156d0:	mov	r0, r4
   156d4:	bl	15040 <test_json@@Base>
   156d8:	movw	r1, #26557	; 0x67bd
   156dc:	str	r0, [sp, #28]
   156e0:	movw	r0, #289	; 0x121
   156e4:	mov	r2, #0
   156e8:	mov	r3, #13
   156ec:	str	r6, [sp]
   156f0:	str	r6, [sp, #4]
   156f4:	movt	r1, #4
   156f8:	str	r0, [sp, #8]
   156fc:	mov	r0, r4
   15700:	bl	15040 <test_json@@Base>
   15704:	movw	r1, #26651	; 0x681b
   15708:	str	r0, [sp, #24]
   1570c:	movw	r0, #291	; 0x123
   15710:	mov	r2, #0
   15714:	mov	r3, #13
   15718:	str	r6, [sp]
   1571c:	str	r6, [sp, #4]
   15720:	movt	r1, #4
   15724:	str	r0, [sp, #8]
   15728:	mov	r0, r4
   1572c:	bl	15040 <test_json@@Base>
   15730:	movw	r1, #26739	; 0x6873
   15734:	str	r0, [sp, #20]
   15738:	movw	r0, #293	; 0x125
   1573c:	mov	r2, #0
   15740:	mov	r3, #13
   15744:	str	r6, [sp]
   15748:	str	r6, [sp, #4]
   1574c:	movt	r1, #4
   15750:	str	r0, [sp, #8]
   15754:	mov	r0, r4
   15758:	bl	15040 <test_json@@Base>
   1575c:	movw	r1, #26824	; 0x68c8
   15760:	str	r0, [sp, #16]
   15764:	mov	r0, #296	; 0x128
   15768:	mov	r2, #0
   1576c:	mov	r3, #13
   15770:	str	r6, [sp]
   15774:	str	r6, [sp, #4]
   15778:	movt	r1, #4
   1577c:	str	r0, [sp, #8]
   15780:	mov	r0, r4
   15784:	bl	15040 <test_json@@Base>
   15788:	movw	r1, #26982	; 0x6966
   1578c:	mov	r7, r0
   15790:	movw	r0, #299	; 0x12b
   15794:	mov	r2, #0
   15798:	mov	r3, #13
   1579c:	str	r6, [sp]
   157a0:	str	r6, [sp, #4]
   157a4:	movt	r1, #4
   157a8:	str	r0, [sp, #8]
   157ac:	mov	r0, r4
   157b0:	bl	15040 <test_json@@Base>
   157b4:	movw	r1, #27137	; 0x6a01
   157b8:	mov	r8, r0
   157bc:	movw	r0, #303	; 0x12f
   157c0:	mov	r2, #0
   157c4:	mov	r3, #13
   157c8:	str	r6, [sp]
   157cc:	str	r6, [sp, #4]
   157d0:	movt	r1, #4
   157d4:	str	r0, [sp, #8]
   157d8:	mov	r0, r4
   157dc:	bl	15040 <test_json@@Base>
   157e0:	movw	r1, #27336	; 0x6ac8
   157e4:	mov	r9, r0
   157e8:	movw	r0, #307	; 0x133
   157ec:	mov	r2, #0
   157f0:	mov	r3, #13
   157f4:	str	r6, [sp]
   157f8:	str	r6, [sp, #4]
   157fc:	movt	r1, #4
   15800:	str	r0, [sp, #8]
   15804:	mov	r0, r4
   15808:	bl	15040 <test_json@@Base>
   1580c:	movw	r1, #27535	; 0x6b8f
   15810:	mov	sl, r0
   15814:	movw	r0, #311	; 0x137
   15818:	mov	r2, #0
   1581c:	mov	r3, #5
   15820:	str	r6, [sp]
   15824:	str	r6, [sp, #4]
   15828:	movt	r1, #4
   1582c:	str	r0, [sp, #8]
   15830:	mov	r0, r4
   15834:	bl	15040 <test_json@@Base>
   15838:	movw	r1, #27559	; 0x6ba7
   1583c:	mov	r5, r0
   15840:	movw	r0, #314	; 0x13a
   15844:	mov	r2, #0
   15848:	mov	r3, #5
   1584c:	str	r6, [sp]
   15850:	str	r6, [sp, #4]
   15854:	movt	r1, #4
   15858:	str	r0, [sp, #8]
   1585c:	mov	r0, r4
   15860:	bl	15040 <test_json@@Base>
   15864:	movw	r1, #317	; 0x13d
   15868:	ldr	r2, [sp, #28]
   1586c:	mov	r3, #5
   15870:	str	r6, [sp]
   15874:	str	r6, [sp, #4]
   15878:	str	r1, [sp, #8]
   1587c:	ldr	r1, [sp, #32]
   15880:	orr	r1, r2, r1
   15884:	ldr	r2, [sp, #24]
   15888:	orr	r1, r1, r2
   1588c:	ldr	r2, [sp, #20]
   15890:	orr	r1, r1, r2
   15894:	ldr	r2, [sp, #16]
   15898:	orr	r1, r1, r2
   1589c:	mov	r2, #0
   158a0:	orr	r1, r1, r7
   158a4:	orr	r1, r1, r8
   158a8:	orr	r1, r1, r9
   158ac:	orr	r1, r1, sl
   158b0:	orr	r1, r1, r5
   158b4:	orr	r5, r1, r0
   158b8:	movw	r1, #27597	; 0x6bcd
   158bc:	mov	r0, r4
   158c0:	movt	r1, #4
   158c4:	bl	15040 <test_json@@Base>
   158c8:	orr	r0, r5, r0
   158cc:	sub	sp, fp, #28
   158d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000158d4 <base64_tests@@Base>:
   158d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158d8:	add	fp, sp, #28
   158dc:	sub	sp, sp, #20
   158e0:	movw	r4, #37332	; 0x91d4
   158e4:	movw	r1, #27653	; 0x6c05
   158e8:	movw	r2, #25856	; 0x6500
   158ec:	movw	r0, #369	; 0x171
   158f0:	mov	r8, #0
   158f4:	mov	r3, #0
   158f8:	movt	r4, #4
   158fc:	movt	r1, #4
   15900:	movt	r2, #4
   15904:	str	r0, [sp, #8]
   15908:	str	r8, [sp]
   1590c:	str	r8, [sp, #4]
   15910:	mov	r0, r4
   15914:	bl	15040 <test_json@@Base>
   15918:	movw	r1, #27675	; 0x6c1b
   1591c:	movw	r2, #27714	; 0x6c42
   15920:	str	r0, [sp, #16]
   15924:	mov	r0, #372	; 0x174
   15928:	mov	r3, #0
   1592c:	str	r8, [sp]
   15930:	str	r8, [sp, #4]
   15934:	movt	r1, #4
   15938:	movt	r2, #4
   1593c:	str	r0, [sp, #8]
   15940:	mov	r0, r4
   15944:	bl	15040 <test_json@@Base>
   15948:	movw	r6, #27934	; 0x6d1e
   1594c:	movw	r1, #27749	; 0x6c65
   15950:	mov	r9, r0
   15954:	mov	r0, #376	; 0x178
   15958:	mov	r3, #0
   1595c:	str	r8, [sp]
   15960:	str	r8, [sp, #4]
   15964:	movt	r6, #4
   15968:	movt	r1, #4
   1596c:	str	r0, [sp, #8]
   15970:	mov	r0, r4
   15974:	mov	r2, r6
   15978:	bl	15040 <test_json@@Base>
   1597c:	movw	r7, #28302	; 0x6e8e
   15980:	movw	r1, #28114	; 0x6dd2
   15984:	mov	sl, r0
   15988:	movw	r0, #379	; 0x17b
   1598c:	mov	r3, #0
   15990:	str	r8, [sp]
   15994:	str	r8, [sp, #4]
   15998:	movt	r7, #4
   1599c:	movt	r1, #4
   159a0:	str	r0, [sp, #8]
   159a4:	mov	r0, r4
   159a8:	mov	r2, r7
   159ac:	bl	15040 <test_json@@Base>
   159b0:	movw	r1, #28485	; 0x6f45
   159b4:	mov	r5, r0
   159b8:	movw	r0, #382	; 0x17e
   159bc:	mov	r2, r6
   159c0:	mov	r3, #0
   159c4:	str	r8, [sp]
   159c8:	str	r8, [sp, #4]
   159cc:	movt	r1, #4
   159d0:	str	r0, [sp, #8]
   159d4:	mov	r0, r4
   159d8:	bl	15040 <test_json@@Base>
   159dc:	movw	r1, #28668	; 0x6ffc
   159e0:	mov	r6, r0
   159e4:	movw	r0, #385	; 0x181
   159e8:	mov	r2, r7
   159ec:	mov	r3, #0
   159f0:	str	r8, [sp]
   159f4:	str	r8, [sp, #4]
   159f8:	movt	r1, #4
   159fc:	str	r0, [sp, #8]
   15a00:	mov	r0, r4
   15a04:	bl	15040 <test_json@@Base>
   15a08:	movw	r1, #28854	; 0x70b6
   15a0c:	mov	r7, r0
   15a10:	mov	r0, #388	; 0x184
   15a14:	mov	r2, #0
   15a18:	mov	r3, #31
   15a1c:	str	r8, [sp]
   15a20:	str	r8, [sp, #4]
   15a24:	movt	r1, #4
   15a28:	str	r0, [sp, #8]
   15a2c:	mov	r0, r4
   15a30:	bl	15040 <test_json@@Base>
   15a34:	movw	r1, #391	; 0x187
   15a38:	mov	r2, #0
   15a3c:	mov	r3, #32
   15a40:	str	r8, [sp]
   15a44:	str	r8, [sp, #4]
   15a48:	str	r1, [sp, #8]
   15a4c:	ldr	r1, [sp, #16]
   15a50:	orr	r1, r9, r1
   15a54:	orr	r1, r1, sl
   15a58:	orr	r1, r1, r5
   15a5c:	orr	r1, r1, r6
   15a60:	orr	r1, r1, r7
   15a64:	orr	r5, r1, r0
   15a68:	movw	r1, #29039	; 0x716f
   15a6c:	mov	r0, r4
   15a70:	movt	r1, #4
   15a74:	bl	15040 <test_json@@Base>
   15a78:	orr	r0, r5, r0
   15a7c:	sub	sp, fp, #28
   15a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015a84 <mixed_type_union_tests@@Base>:
   15a84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a88:	add	fp, sp, #28
   15a8c:	sub	sp, sp, #20
   15a90:	movw	r4, #37348	; 0x91e4
   15a94:	movw	r1, #29227	; 0x722b
   15a98:	movw	r2, #29306	; 0x727a
   15a9c:	mov	r0, #432	; 0x1b0
   15aa0:	mov	r8, #0
   15aa4:	mov	r3, #0
   15aa8:	movt	r4, #4
   15aac:	movt	r1, #4
   15ab0:	movt	r2, #4
   15ab4:	str	r0, [sp, #8]
   15ab8:	str	r8, [sp]
   15abc:	str	r8, [sp, #4]
   15ac0:	mov	r0, r4
   15ac4:	bl	15040 <test_json@@Base>
   15ac8:	movw	r9, #29508	; 0x7344
   15acc:	movw	r1, #29377	; 0x72c1
   15ad0:	str	r0, [sp, #16]
   15ad4:	movw	r0, #437	; 0x1b5
   15ad8:	mov	r3, #0
   15adc:	str	r8, [sp]
   15ae0:	str	r8, [sp, #4]
   15ae4:	movt	r9, #4
   15ae8:	movt	r1, #4
   15aec:	str	r0, [sp, #8]
   15af0:	mov	r0, r4
   15af4:	mov	r2, r9
   15af8:	bl	15040 <test_json@@Base>
   15afc:	movw	r1, #29627	; 0x73bb
   15b00:	mov	sl, r0
   15b04:	movw	r0, #442	; 0x1ba
   15b08:	mov	r2, r9
   15b0c:	mov	r3, #0
   15b10:	str	r8, [sp]
   15b14:	str	r8, [sp, #4]
   15b18:	movt	r1, #4
   15b1c:	str	r0, [sp, #8]
   15b20:	mov	r0, r4
   15b24:	bl	15040 <test_json@@Base>
   15b28:	movw	r1, #29777	; 0x7451
   15b2c:	movw	r2, #29998	; 0x752e
   15b30:	mov	r5, r0
   15b34:	movw	r0, #449	; 0x1c1
   15b38:	mov	r3, #0
   15b3c:	str	r8, [sp]
   15b40:	str	r8, [sp, #4]
   15b44:	movt	r1, #4
   15b48:	movt	r2, #4
   15b4c:	str	r0, [sp, #8]
   15b50:	mov	r0, r4
   15b54:	bl	15040 <test_json@@Base>
   15b58:	movw	r1, #30183	; 0x75e7
   15b5c:	movw	r2, #30445	; 0x76ed
   15b60:	mov	r6, r0
   15b64:	movw	r0, #458	; 0x1ca
   15b68:	mov	r3, #0
   15b6c:	str	r8, [sp]
   15b70:	str	r8, [sp, #4]
   15b74:	movt	r1, #4
   15b78:	movt	r2, #4
   15b7c:	str	r0, [sp, #8]
   15b80:	mov	r0, r4
   15b84:	bl	15040 <test_json@@Base>
   15b88:	movw	r1, #30667	; 0x77cb
   15b8c:	movw	r2, #31052	; 0x794c
   15b90:	mov	r7, r0
   15b94:	movw	r0, #469	; 0x1d5
   15b98:	mov	r3, #0
   15b9c:	str	r8, [sp]
   15ba0:	str	r8, [sp, #4]
   15ba4:	movt	r1, #4
   15ba8:	movt	r2, #4
   15bac:	str	r0, [sp, #8]
   15bb0:	mov	r0, r4
   15bb4:	bl	15040 <test_json@@Base>
   15bb8:	movw	r1, #474	; 0x1da
   15bbc:	mov	r2, r9
   15bc0:	mov	r3, #0
   15bc4:	str	r8, [sp]
   15bc8:	str	r8, [sp, #4]
   15bcc:	str	r1, [sp, #8]
   15bd0:	ldr	r1, [sp, #16]
   15bd4:	orr	r1, sl, r1
   15bd8:	orr	r1, r1, r5
   15bdc:	orr	r1, r1, r6
   15be0:	orr	r1, r1, r7
   15be4:	orr	r5, r1, r0
   15be8:	movw	r1, #31378	; 0x7a92
   15bec:	mov	r0, r4
   15bf0:	movt	r1, #4
   15bf4:	bl	15040 <test_json@@Base>
   15bf8:	orr	r0, r5, r0
   15bfc:	sub	sp, fp, #28
   15c00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015c04 <union_vector_tests@@Base>:
   15c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c08:	add	fp, sp, #28
   15c0c:	sub	sp, sp, #12
   15c10:	movw	r4, #37364	; 0x91f4
   15c14:	movw	r8, #31583	; 0x7b5f
   15c18:	movw	r1, #31519	; 0x7b1f
   15c1c:	movw	r0, #485	; 0x1e5
   15c20:	mov	r7, #0
   15c24:	mov	r3, #0
   15c28:	movt	r8, #4
   15c2c:	movt	r4, #4
   15c30:	movt	r1, #4
   15c34:	str	r0, [sp, #8]
   15c38:	str	r7, [sp]
   15c3c:	str	r7, [sp, #4]
   15c40:	mov	r0, r4
   15c44:	mov	r2, r8
   15c48:	bl	15040 <test_json@@Base>
   15c4c:	movw	r1, #31639	; 0x7b97
   15c50:	movw	r2, #31690	; 0x7bca
   15c54:	mov	r9, r0
   15c58:	mov	r0, #488	; 0x1e8
   15c5c:	mov	r3, #0
   15c60:	str	r7, [sp]
   15c64:	str	r7, [sp, #4]
   15c68:	movt	r1, #4
   15c6c:	movt	r2, #4
   15c70:	str	r0, [sp, #8]
   15c74:	mov	r0, r4
   15c78:	bl	15040 <test_json@@Base>
   15c7c:	movw	r1, #31733	; 0x7bf5
   15c80:	movw	r2, #31810	; 0x7c42
   15c84:	mov	sl, r0
   15c88:	movw	r0, #491	; 0x1eb
   15c8c:	mov	r3, #0
   15c90:	str	r7, [sp]
   15c94:	str	r7, [sp, #4]
   15c98:	movt	r1, #4
   15c9c:	movt	r2, #4
   15ca0:	str	r0, [sp, #8]
   15ca4:	mov	r0, r4
   15ca8:	bl	15040 <test_json@@Base>
   15cac:	movw	r1, #31878	; 0x7c86
   15cb0:	movw	r2, #32003	; 0x7d03
   15cb4:	mov	r6, r0
   15cb8:	movw	r0, #494	; 0x1ee
   15cbc:	mov	r3, #0
   15cc0:	str	r7, [sp]
   15cc4:	str	r7, [sp, #4]
   15cc8:	movt	r1, #4
   15ccc:	movt	r2, #4
   15cd0:	str	r0, [sp, #8]
   15cd4:	mov	r0, r4
   15cd8:	bl	15040 <test_json@@Base>
   15cdc:	movw	r1, #32111	; 0x7d6f
   15ce0:	mov	r5, r0
   15ce4:	movw	r0, #497	; 0x1f1
   15ce8:	mov	r2, r8
   15cec:	mov	r3, #0
   15cf0:	str	r7, [sp]
   15cf4:	str	r7, [sp, #4]
   15cf8:	movt	r1, #4
   15cfc:	str	r0, [sp, #8]
   15d00:	mov	r0, r4
   15d04:	bl	15040 <test_json@@Base>
   15d08:	mov	r1, #500	; 0x1f4
   15d0c:	movw	r2, #32276	; 0x7e14
   15d10:	mov	r3, #0
   15d14:	str	r7, [sp]
   15d18:	str	r7, [sp, #4]
   15d1c:	str	r1, [sp, #8]
   15d20:	orr	r1, sl, r9
   15d24:	movt	r2, #4
   15d28:	orr	r1, r1, r6
   15d2c:	orr	r1, r1, r5
   15d30:	orr	r5, r1, r0
   15d34:	movw	r1, #32174	; 0x7dae
   15d38:	mov	r0, r4
   15d3c:	movt	r1, #4
   15d40:	bl	15040 <test_json@@Base>
   15d44:	orr	r0, r5, r0
   15d48:	sub	sp, fp, #28
   15d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015d50 <main@@Base>:
   15d50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d54:	add	fp, sp, #28
   15d58:	sub	sp, sp, #164	; 0xa4
   15d5c:	bl	1546c <edge_case_tests@@Base>
   15d60:	str	r0, [fp, #-32]	; 0xffffffe0
   15d64:	bl	1566c <error_case_tests@@Base>
   15d68:	str	r0, [fp, #-36]	; 0xffffffdc
   15d6c:	bl	15c04 <union_vector_tests@@Base>
   15d70:	str	r0, [fp, #-40]	; 0xffffffd8
   15d74:	bl	158d4 <base64_tests@@Base>
   15d78:	str	r0, [fp, #-44]	; 0xffffffd4
   15d7c:	bl	15a84 <mixed_type_union_tests@@Base>
   15d80:	movw	r4, #37332	; 0x91d4
   15d84:	movw	r9, #25856	; 0x6500
   15d88:	movw	r1, #32368	; 0x7e70
   15d8c:	str	r0, [fp, #-48]	; 0xffffffd0
   15d90:	movw	r0, #525	; 0x20d
   15d94:	mov	r8, #0
   15d98:	mov	r3, #0
   15d9c:	movt	r9, #4
   15da0:	movt	r4, #4
   15da4:	movt	r1, #4
   15da8:	str	r0, [sp, #8]
   15dac:	str	r8, [sp]
   15db0:	str	r8, [sp, #4]
   15db4:	mov	r0, r4
   15db8:	mov	r2, r9
   15dbc:	bl	15040 <test_json@@Base>
   15dc0:	movw	r5, #32430	; 0x7eae
   15dc4:	movw	r1, #32391	; 0x7e87
   15dc8:	str	r0, [fp, #-52]	; 0xffffffcc
   15dcc:	mov	r0, #528	; 0x210
   15dd0:	mov	r3, #0
   15dd4:	str	r8, [sp]
   15dd8:	str	r8, [sp, #4]
   15ddc:	movt	r5, #4
   15de0:	movt	r1, #4
   15de4:	str	r0, [sp, #8]
   15de8:	mov	r0, r4
   15dec:	mov	r2, r5
   15df0:	bl	15040 <test_json@@Base>
   15df4:	movw	r7, #32503	; 0x7ef7
   15df8:	movw	r1, #32463	; 0x7ecf
   15dfc:	str	r0, [fp, #-56]	; 0xffffffc8
   15e00:	movw	r0, #531	; 0x213
   15e04:	mov	r3, #0
   15e08:	str	r8, [sp]
   15e0c:	str	r8, [sp, #4]
   15e10:	movt	r7, #4
   15e14:	movt	r1, #4
   15e18:	str	r0, [sp, #8]
   15e1c:	mov	r0, r4
   15e20:	mov	r2, r7
   15e24:	bl	15040 <test_json@@Base>
   15e28:	movw	r6, #32587	; 0x7f4b
   15e2c:	movw	r1, #32538	; 0x7f1a
   15e30:	str	r0, [fp, #-60]	; 0xffffffc4
   15e34:	movw	r0, #534	; 0x216
   15e38:	mov	r3, #0
   15e3c:	str	r8, [sp]
   15e40:	str	r8, [sp, #4]
   15e44:	movt	r6, #4
   15e48:	movt	r1, #4
   15e4c:	str	r0, [sp, #8]
   15e50:	mov	r0, r4
   15e54:	mov	r2, r6
   15e58:	bl	15040 <test_json@@Base>
   15e5c:	movw	r1, #32631	; 0x7f77
   15e60:	str	r0, [fp, #-64]	; 0xffffffc0
   15e64:	movw	r0, #537	; 0x219
   15e68:	mov	r2, r6
   15e6c:	mov	r3, #0
   15e70:	str	r8, [sp]
   15e74:	str	r8, [sp, #4]
   15e78:	movt	r1, #4
   15e7c:	str	r0, [sp, #8]
   15e80:	mov	r0, r4
   15e84:	bl	15040 <test_json@@Base>
   15e88:	movw	r1, #32689	; 0x7fb1
   15e8c:	str	r0, [fp, #-68]	; 0xffffffbc
   15e90:	mov	r0, #540	; 0x21c
   15e94:	mov	r2, r5
   15e98:	mov	r3, #0
   15e9c:	str	r8, [sp]
   15ea0:	str	r8, [sp, #4]
   15ea4:	movt	r1, #4
   15ea8:	str	r0, [sp, #8]
   15eac:	mov	r0, r4
   15eb0:	bl	15040 <test_json@@Base>
   15eb4:	movw	r1, #32727	; 0x7fd7
   15eb8:	str	r0, [fp, #-72]	; 0xffffffb8
   15ebc:	movw	r0, #543	; 0x21f
   15ec0:	mov	r2, r7
   15ec4:	mov	r3, #0
   15ec8:	str	r8, [sp]
   15ecc:	str	r8, [sp, #4]
   15ed0:	movt	r1, #4
   15ed4:	str	r0, [sp, #8]
   15ed8:	mov	r0, r4
   15edc:	bl	15040 <test_json@@Base>
   15ee0:	movw	r1, #32768	; 0x8000
   15ee4:	str	r0, [fp, #-76]	; 0xffffffb4
   15ee8:	movw	r0, #547	; 0x223
   15eec:	mov	r2, r9
   15ef0:	mov	r3, #0
   15ef4:	str	r8, [sp]
   15ef8:	str	r8, [sp, #4]
   15efc:	movt	r1, #4
   15f00:	str	r0, [sp, #8]
   15f04:	mov	r0, r4
   15f08:	bl	15040 <test_json@@Base>
   15f0c:	movw	r1, #25721	; 0x6479
   15f10:	str	r0, [fp, #-80]	; 0xffffffb0
   15f14:	movw	r0, #551	; 0x227
   15f18:	mov	r2, r9
   15f1c:	mov	r3, #0
   15f20:	str	r8, [sp]
   15f24:	str	r8, [sp, #4]
   15f28:	movt	r1, #4
   15f2c:	str	r0, [sp, #8]
   15f30:	mov	r0, r4
   15f34:	bl	15040 <test_json@@Base>
   15f38:	movw	r1, #32807	; 0x8027
   15f3c:	str	r0, [fp, #-84]	; 0xffffffac
   15f40:	movw	r0, #601	; 0x259
   15f44:	mov	r2, r5
   15f48:	mov	r3, #0
   15f4c:	str	r8, [sp]
   15f50:	str	r8, [sp, #4]
   15f54:	movt	r1, #4
   15f58:	str	r0, [sp, #8]
   15f5c:	mov	r0, r4
   15f60:	bl	15040 <test_json@@Base>
   15f64:	movw	r1, #32840	; 0x8048
   15f68:	str	r0, [fp, #-88]	; 0xffffffa8
   15f6c:	mov	r0, #604	; 0x25c
   15f70:	mov	r2, r7
   15f74:	mov	r3, #0
   15f78:	str	r8, [sp]
   15f7c:	str	r8, [sp, #4]
   15f80:	movt	r1, #4
   15f84:	str	r0, [sp, #8]
   15f88:	mov	r0, r4
   15f8c:	bl	15040 <test_json@@Base>
   15f90:	movw	r1, #32873	; 0x8069
   15f94:	movw	r2, #32906	; 0x808a
   15f98:	str	r0, [fp, #-92]	; 0xffffffa4
   15f9c:	movw	r0, #607	; 0x25f
   15fa0:	mov	r3, #0
   15fa4:	str	r8, [sp]
   15fa8:	str	r8, [sp, #4]
   15fac:	movt	r1, #4
   15fb0:	movt	r2, #4
   15fb4:	str	r0, [sp, #8]
   15fb8:	mov	r0, r4
   15fbc:	bl	15040 <test_json@@Base>
   15fc0:	movw	r1, #32944	; 0x80b0
   15fc4:	str	r0, [sp, #96]	; 0x60
   15fc8:	movw	r0, #610	; 0x262
   15fcc:	mov	r2, r6
   15fd0:	mov	r3, #0
   15fd4:	str	r8, [sp]
   15fd8:	str	r8, [sp, #4]
   15fdc:	movt	r1, #4
   15fe0:	str	r0, [sp, #8]
   15fe4:	mov	r0, r4
   15fe8:	bl	15040 <test_json@@Base>
   15fec:	movw	r1, #32978	; 0x80d2
   15ff0:	movw	r2, #33012	; 0x80f4
   15ff4:	str	r0, [sp, #92]	; 0x5c
   15ff8:	movw	r0, #613	; 0x265
   15ffc:	mov	r3, #0
   16000:	str	r8, [sp]
   16004:	str	r8, [sp, #4]
   16008:	movt	r1, #4
   1600c:	movt	r2, #4
   16010:	str	r0, [sp, #8]
   16014:	mov	r0, r4
   16018:	bl	15040 <test_json@@Base>
   1601c:	movw	r1, #33042	; 0x8112
   16020:	movw	r2, #33076	; 0x8134
   16024:	str	r0, [sp, #88]	; 0x58
   16028:	mov	r0, #616	; 0x268
   1602c:	mov	r3, #0
   16030:	str	r8, [sp]
   16034:	str	r8, [sp, #4]
   16038:	movt	r1, #4
   1603c:	movt	r2, #4
   16040:	str	r0, [sp, #8]
   16044:	mov	r0, r4
   16048:	bl	15040 <test_json@@Base>
   1604c:	movw	r1, #33106	; 0x8152
   16050:	movw	r2, #33139	; 0x8173
   16054:	str	r0, [sp, #84]	; 0x54
   16058:	movw	r0, #619	; 0x26b
   1605c:	mov	r3, #0
   16060:	str	r8, [sp]
   16064:	str	r8, [sp, #4]
   16068:	movt	r1, #4
   1606c:	movt	r2, #4
   16070:	str	r0, [sp, #8]
   16074:	mov	r0, r4
   16078:	bl	15040 <test_json@@Base>
   1607c:	movw	r1, #33168	; 0x8190
   16080:	str	r0, [sp, #80]	; 0x50
   16084:	movw	r0, #622	; 0x26e
   16088:	mov	r2, r5
   1608c:	mov	r3, #0
   16090:	str	r8, [sp]
   16094:	str	r8, [sp, #4]
   16098:	movt	r1, #4
   1609c:	str	r0, [sp, #8]
   160a0:	mov	r0, r4
   160a4:	bl	15040 <test_json@@Base>
   160a8:	movw	r1, #33211	; 0x81bb
   160ac:	str	r0, [sp, #76]	; 0x4c
   160b0:	movw	r0, #625	; 0x271
   160b4:	mov	r2, r5
   160b8:	mov	r3, #0
   160bc:	str	r8, [sp]
   160c0:	str	r8, [sp, #4]
   160c4:	movt	r1, #4
   160c8:	str	r0, [sp, #8]
   160cc:	mov	r0, r4
   160d0:	bl	15040 <test_json@@Base>
   160d4:	movw	r5, #33269	; 0x81f5
   160d8:	movw	r6, #33311	; 0x821f
   160dc:	str	r0, [sp, #72]	; 0x48
   160e0:	mov	r0, #628	; 0x274
   160e4:	mov	r3, #0
   160e8:	str	r8, [sp]
   160ec:	str	r8, [sp, #4]
   160f0:	movt	r5, #4
   160f4:	movt	r6, #4
   160f8:	str	r0, [sp, #8]
   160fc:	mov	r0, r4
   16100:	mov	r1, r5
   16104:	mov	r2, r6
   16108:	bl	15040 <test_json@@Base>
   1610c:	str	r0, [sp, #68]	; 0x44
   16110:	movw	r0, #631	; 0x277
   16114:	mov	r1, r5
   16118:	mov	r2, r6
   1611c:	mov	r3, #0
   16120:	str	r8, [sp]
   16124:	str	r8, [sp, #4]
   16128:	str	r0, [sp, #8]
   1612c:	mov	r0, r4
   16130:	bl	15040 <test_json@@Base>
   16134:	movw	r1, #33337	; 0x8239
   16138:	movw	r2, #33418	; 0x828a
   1613c:	str	r0, [sp, #64]	; 0x40
   16140:	movw	r0, #634	; 0x27a
   16144:	mov	r3, #0
   16148:	str	r8, [sp]
   1614c:	str	r8, [sp, #4]
   16150:	movt	r1, #4
   16154:	movt	r2, #4
   16158:	str	r0, [sp, #8]
   1615c:	mov	r0, r4
   16160:	bl	15040 <test_json@@Base>
   16164:	movw	r1, #33489	; 0x82d1
   16168:	movw	r2, #33574	; 0x8326
   1616c:	str	r0, [sp, #60]	; 0x3c
   16170:	movw	r0, #638	; 0x27e
   16174:	mov	r3, #0
   16178:	str	r8, [sp]
   1617c:	str	r8, [sp, #4]
   16180:	movt	r1, #4
   16184:	movt	r2, #4
   16188:	str	r0, [sp, #8]
   1618c:	mov	r0, r4
   16190:	bl	15040 <test_json@@Base>
   16194:	movw	r1, #33648	; 0x8370
   16198:	movw	r2, #33759	; 0x83df
   1619c:	str	r0, [sp, #56]	; 0x38
   161a0:	movw	r0, #642	; 0x282
   161a4:	mov	r3, #0
   161a8:	str	r8, [sp]
   161ac:	str	r8, [sp, #4]
   161b0:	movt	r1, #4
   161b4:	movt	r2, #4
   161b8:	str	r0, [sp, #8]
   161bc:	mov	r0, r4
   161c0:	bl	15040 <test_json@@Base>
   161c4:	movw	r1, #33857	; 0x8441
   161c8:	str	r0, [sp, #52]	; 0x34
   161cc:	movw	r0, #646	; 0x286
   161d0:	mov	r2, r9
   161d4:	mov	r3, #0
   161d8:	str	r8, [sp]
   161dc:	str	r8, [sp, #4]
   161e0:	movt	r1, #4
   161e4:	str	r0, [sp, #8]
   161e8:	mov	r0, r4
   161ec:	bl	15040 <test_json@@Base>
   161f0:	movw	r1, #33900	; 0x846c
   161f4:	str	r0, [sp, #48]	; 0x30
   161f8:	movw	r0, #649	; 0x289
   161fc:	mov	r2, r9
   16200:	mov	r3, #0
   16204:	str	r8, [sp]
   16208:	str	r8, [sp, #4]
   1620c:	movt	r1, #4
   16210:	str	r0, [sp, #8]
   16214:	mov	r0, r4
   16218:	bl	15040 <test_json@@Base>
   1621c:	movw	r1, #33938	; 0x8492
   16220:	movw	r2, #34047	; 0x84ff
   16224:	str	r0, [sp, #44]	; 0x2c
   16228:	mov	r0, #716	; 0x2cc
   1622c:	mov	r3, #0
   16230:	str	r8, [sp]
   16234:	str	r8, [sp, #4]
   16238:	movt	r1, #4
   1623c:	movt	r2, #4
   16240:	str	r0, [sp, #8]
   16244:	mov	r0, r4
   16248:	bl	15040 <test_json@@Base>
   1624c:	movw	r1, #34141	; 0x855d
   16250:	movw	r2, #34202	; 0x859a
   16254:	str	r0, [sp, #40]	; 0x28
   16258:	movw	r0, #731	; 0x2db
   1625c:	mov	r3, #0
   16260:	str	r8, [sp]
   16264:	str	r8, [sp, #4]
   16268:	movt	r1, #4
   1626c:	movt	r2, #4
   16270:	str	r0, [sp, #8]
   16274:	mov	r0, r4
   16278:	bl	15040 <test_json@@Base>
   1627c:	movw	r1, #34250	; 0x85ca
   16280:	movw	r2, #34276	; 0x85e4
   16284:	str	r0, [sp, #36]	; 0x24
   16288:	movw	r0, #734	; 0x2de
   1628c:	mov	r3, #0
   16290:	str	r8, [sp]
   16294:	str	r8, [sp, #4]
   16298:	movt	r1, #4
   1629c:	movt	r2, #4
   162a0:	str	r0, [sp, #8]
   162a4:	mov	r0, r4
   162a8:	bl	15040 <test_json@@Base>
   162ac:	movw	r5, #34366	; 0x863e
   162b0:	movw	r1, #34294	; 0x85f6
   162b4:	str	r0, [sp, #32]
   162b8:	movw	r0, #738	; 0x2e2
   162bc:	mov	r3, #0
   162c0:	str	r8, [sp]
   162c4:	str	r8, [sp, #4]
   162c8:	movt	r5, #4
   162cc:	movt	r1, #4
   162d0:	str	r0, [sp, #8]
   162d4:	mov	r0, r4
   162d8:	mov	r2, r5
   162dc:	bl	15040 <test_json@@Base>
   162e0:	movw	r1, #34431	; 0x867f
   162e4:	str	r0, [sp, #28]
   162e8:	movw	r0, #750	; 0x2ee
   162ec:	mov	r2, r5
   162f0:	mov	r3, #0
   162f4:	str	r8, [sp]
   162f8:	str	r8, [sp, #4]
   162fc:	movt	r1, #4
   16300:	str	r0, [sp, #8]
   16304:	mov	r0, r4
   16308:	bl	15040 <test_json@@Base>
   1630c:	movw	r1, #34588	; 0x871c
   16310:	movw	r2, #34627	; 0x8743
   16314:	str	r0, [sp, #24]
   16318:	movw	r0, #766	; 0x2fe
   1631c:	mov	r3, #0
   16320:	str	r8, [sp]
   16324:	str	r8, [sp, #4]
   16328:	movt	r1, #4
   1632c:	movt	r2, #4
   16330:	str	r0, [sp, #8]
   16334:	mov	r0, r4
   16338:	bl	15040 <test_json@@Base>
   1633c:	movw	r1, #34661	; 0x8765
   16340:	movw	r2, #34708	; 0x8794
   16344:	str	r0, [sp, #20]
   16348:	movw	r0, #770	; 0x302
   1634c:	mov	r3, #0
   16350:	str	r8, [sp]
   16354:	str	r8, [sp, #4]
   16358:	movt	r1, #4
   1635c:	movt	r2, #4
   16360:	str	r0, [sp, #8]
   16364:	mov	r0, r4
   16368:	bl	15040 <test_json@@Base>
   1636c:	movw	r1, #34750	; 0x87be
   16370:	movw	r2, #34873	; 0x8839
   16374:	str	r0, [sp, #16]
   16378:	mov	r0, #776	; 0x308
   1637c:	mov	r3, #0
   16380:	str	r8, [sp]
   16384:	str	r8, [sp, #4]
   16388:	movt	r1, #4
   1638c:	movt	r2, #4
   16390:	str	r0, [sp, #8]
   16394:	mov	r0, r4
   16398:	bl	15040 <test_json@@Base>
   1639c:	movw	r1, #34985	; 0x88a9
   163a0:	mov	r7, r0
   163a4:	movw	r0, #781	; 0x30d
   163a8:	mov	r2, r9
   163ac:	mov	r3, #0
   163b0:	str	r8, [sp]
   163b4:	str	r8, [sp, #4]
   163b8:	movt	r1, #4
   163bc:	str	r0, [sp, #8]
   163c0:	mov	r0, r4
   163c4:	bl	15040 <test_json@@Base>
   163c8:	movw	r1, #35105	; 0x8921
   163cc:	movw	r2, #35227	; 0x899b
   163d0:	mov	r6, r0
   163d4:	movw	r0, #786	; 0x312
   163d8:	mov	r3, #0
   163dc:	str	r8, [sp]
   163e0:	str	r8, [sp, #4]
   163e4:	movt	r1, #4
   163e8:	movt	r2, #4
   163ec:	str	r0, [sp, #8]
   163f0:	mov	r0, r4
   163f4:	bl	15040 <test_json@@Base>
   163f8:	movw	r1, #35338	; 0x8a0a
   163fc:	movw	r2, #35477	; 0x8a95
   16400:	mov	r9, r0
   16404:	movw	r0, #791	; 0x317
   16408:	mov	r3, #0
   1640c:	str	r8, [sp]
   16410:	str	r8, [sp, #4]
   16414:	movt	r1, #4
   16418:	movt	r2, #4
   1641c:	str	r0, [sp, #8]
   16420:	mov	r0, r4
   16424:	bl	15040 <test_json@@Base>
   16428:	movw	r1, #35603	; 0x8b13
   1642c:	movw	r2, #35726	; 0x8b8e
   16430:	mov	sl, r0
   16434:	mov	r0, #796	; 0x31c
   16438:	mov	r3, #0
   1643c:	str	r8, [sp]
   16440:	str	r8, [sp, #4]
   16444:	movt	r1, #4
   16448:	movt	r2, #4
   1644c:	str	r0, [sp, #8]
   16450:	mov	r0, r4
   16454:	bl	15040 <test_json@@Base>
   16458:	movw	r1, #35838	; 0x8bfe
   1645c:	movw	r2, #35976	; 0x8c88
   16460:	mov	r5, r0
   16464:	movw	r0, #801	; 0x321
   16468:	mov	r3, #0
   1646c:	str	r8, [sp]
   16470:	str	r8, [sp, #4]
   16474:	movt	r1, #4
   16478:	movt	r2, #4
   1647c:	str	r0, [sp, #8]
   16480:	mov	r0, r4
   16484:	bl	15040 <test_json@@Base>
   16488:	movw	r1, #806	; 0x326
   1648c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16490:	mov	r3, #0
   16494:	str	r8, [sp]
   16498:	str	r8, [sp, #4]
   1649c:	str	r1, [sp, #8]
   164a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   164a4:	orr	r1, r2, r1
   164a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   164ac:	orr	r1, r1, r2
   164b0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   164b4:	orr	r1, r1, r2
   164b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   164bc:	orr	r1, r1, r2
   164c0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   164c4:	orr	r1, r1, r2
   164c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   164cc:	orr	r1, r1, r2
   164d0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   164d4:	orr	r1, r1, r2
   164d8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   164dc:	orr	r1, r1, r2
   164e0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   164e4:	orr	r1, r1, r2
   164e8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   164ec:	orr	r1, r1, r2
   164f0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   164f4:	orr	r1, r1, r2
   164f8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   164fc:	orr	r1, r1, r2
   16500:	ldr	r2, [fp, #-84]	; 0xffffffac
   16504:	orr	r1, r1, r2
   16508:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1650c:	orr	r1, r1, r2
   16510:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16514:	orr	r1, r1, r2
   16518:	ldr	r2, [sp, #96]	; 0x60
   1651c:	orr	r1, r1, r2
   16520:	ldr	r2, [sp, #92]	; 0x5c
   16524:	orr	r1, r1, r2
   16528:	ldr	r2, [sp, #88]	; 0x58
   1652c:	orr	r1, r1, r2
   16530:	ldr	r2, [sp, #84]	; 0x54
   16534:	orr	r1, r1, r2
   16538:	ldr	r2, [sp, #80]	; 0x50
   1653c:	orr	r1, r1, r2
   16540:	ldr	r2, [sp, #76]	; 0x4c
   16544:	orr	r1, r1, r2
   16548:	ldr	r2, [sp, #72]	; 0x48
   1654c:	orr	r1, r1, r2
   16550:	ldr	r2, [sp, #68]	; 0x44
   16554:	orr	r1, r1, r2
   16558:	ldr	r2, [sp, #64]	; 0x40
   1655c:	orr	r1, r1, r2
   16560:	ldr	r2, [sp, #60]	; 0x3c
   16564:	orr	r1, r1, r2
   16568:	ldr	r2, [sp, #56]	; 0x38
   1656c:	orr	r1, r1, r2
   16570:	ldr	r2, [sp, #52]	; 0x34
   16574:	orr	r1, r1, r2
   16578:	ldr	r2, [sp, #48]	; 0x30
   1657c:	orr	r1, r1, r2
   16580:	ldr	r2, [sp, #44]	; 0x2c
   16584:	orr	r1, r1, r2
   16588:	ldr	r2, [sp, #40]	; 0x28
   1658c:	orr	r1, r1, r2
   16590:	ldr	r2, [sp, #36]	; 0x24
   16594:	orr	r1, r1, r2
   16598:	ldr	r2, [sp, #32]
   1659c:	orr	r1, r1, r2
   165a0:	ldr	r2, [sp, #28]
   165a4:	orr	r1, r1, r2
   165a8:	ldr	r2, [sp, #24]
   165ac:	orr	r1, r1, r2
   165b0:	ldr	r2, [sp, #20]
   165b4:	orr	r1, r1, r2
   165b8:	ldr	r2, [sp, #16]
   165bc:	orr	r1, r1, r2
   165c0:	movw	r2, #36246	; 0x8d96
   165c4:	orr	r1, r1, r7
   165c8:	movt	r2, #4
   165cc:	orr	r1, r1, r6
   165d0:	orr	r1, r1, r9
   165d4:	orr	r1, r1, sl
   165d8:	orr	r1, r1, r5
   165dc:	orr	r5, r1, r0
   165e0:	movw	r1, #36103	; 0x8d07
   165e4:	mov	r0, r4
   165e8:	movt	r1, #4
   165ec:	bl	15040 <test_json@@Base>
   165f0:	orrs	r0, r5, r0
   165f4:	mvnne	r0, #0
   165f8:	sub	sp, fp, #28
   165fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16604:	add	fp, sp, #28
   16608:	sub	sp, sp, #4
   1660c:	vpush	{d8-d9}
   16610:	sub	sp, sp, #72	; 0x48
   16614:	mov	r9, r0
   16618:	mov	r0, #0
   1661c:	mov	sl, r1
   16620:	mov	r1, #36	; 0x24
   16624:	mov	r5, r3
   16628:	mov	r6, r2
   1662c:	str	r0, [r3]
   16630:	ldr	r0, [r9]
   16634:	bl	2fa58 <flatcc_builder_start_table@@Base>
   16638:	cmp	r0, #0
   1663c:	beq	1666c <main@@Base+0x91c>
   16640:	mov	r0, r9
   16644:	mov	r1, sl
   16648:	mov	r2, r6
   1664c:	mov	r3, #33	; 0x21
   16650:	bl	3454c <flatcc_json_parser_set_error@@Base>
   16654:	mov	r7, r0
   16658:	mov	r0, r7
   1665c:	sub	sp, fp, #48	; 0x30
   16660:	vpop	{d8-d9}
   16664:	add	sp, sp, #4
   16668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1666c:	add	r0, sp, #40	; 0x28
   16670:	mov	r1, sl
   16674:	mov	r2, r6
   16678:	mov	r3, #1
   1667c:	str	r0, [sp]
   16680:	mov	r0, r9
   16684:	bl	374b8 <flatcc_json_parser_prepare_unions@@Base>
   16688:	cmp	r0, r6
   1668c:	beq	16640 <main@@Base+0x8f0>
   16690:	cmp	sl, r6
   16694:	beq	166d4 <main@@Base+0x984>
   16698:	ldrb	r0, [sl]
   1669c:	cmp	r0, #123	; 0x7b
   166a0:	bne	166d4 <main@@Base+0x984>
   166a4:	add	r1, sl, #1
   166a8:	sub	r0, r6, r1
   166ac:	cmp	r0, #2
   166b0:	blt	1676c <main@@Base+0xa1c>
   166b4:	ldrb	r0, [r1]
   166b8:	cmp	r0, #32
   166bc:	bls	1675c <main@@Base+0xa0c>
   166c0:	mov	sl, r1
   166c4:	cmp	sl, r6
   166c8:	mov	r2, r6
   166cc:	bne	16788 <main@@Base+0xa38>
   166d0:	b	167c8 <main@@Base+0xa78>
   166d4:	mov	r0, r9
   166d8:	mov	r1, sl
   166dc:	mov	r2, r6
   166e0:	mov	r3, #21
   166e4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   166e8:	mov	sl, r0
   166ec:	ldr	r0, [r9, #20]
   166f0:	cmp	r0, #0
   166f4:	bne	16640 <main@@Base+0x8f0>
   166f8:	ldr	r0, [r9]
   166fc:	mov	r1, #3
   16700:	bl	30284 <flatcc_builder_check_required_field@@Base>
   16704:	cmp	r0, #0
   16708:	beq	16740 <main@@Base+0x9f0>
   1670c:	ldr	r3, [sp, #40]	; 0x28
   16710:	mov	r0, r9
   16714:	mov	r1, sl
   16718:	mov	r2, r6
   1671c:	bl	37548 <flatcc_json_parser_finalize_unions@@Base>
   16720:	mov	r7, r0
   16724:	ldr	r0, [r9]
   16728:	bl	30400 <flatcc_builder_end_table@@Base>
   1672c:	cmp	r0, #0
   16730:	mov	sl, r7
   16734:	str	r0, [r5]
   16738:	bne	16658 <main@@Base+0x908>
   1673c:	b	16640 <main@@Base+0x8f0>
   16740:	mov	r0, r9
   16744:	mov	r1, sl
   16748:	mov	r2, r6
   1674c:	mov	r3, #29
   16750:	bl	3454c <flatcc_json_parser_set_error@@Base>
   16754:	mov	sl, r0
   16758:	b	16640 <main@@Base+0x8f0>
   1675c:	bne	1676c <main@@Base+0xa1c>
   16760:	ldrb	r0, [sl, #2]!
   16764:	cmp	r0, #32
   16768:	bhi	1677c <main@@Base+0xa2c>
   1676c:	mov	r0, r9
   16770:	mov	r2, r6
   16774:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   16778:	mov	sl, r0
   1677c:	cmp	sl, r6
   16780:	mov	r2, r6
   16784:	beq	167c8 <main@@Base+0xa78>
   16788:	ldrb	r0, [sl]
   1678c:	cmp	r0, #125	; 0x7d
   16790:	bne	167c4 <main@@Base+0xa74>
   16794:	add	r1, sl, #1
   16798:	sub	r0, r6, r1
   1679c:	cmp	r0, #2
   167a0:	blt	1fe84 <main@@Base+0xa134>
   167a4:	ldrb	r0, [r1]
   167a8:	cmp	r0, #32
   167ac:	bhi	1fe3c <main@@Base+0xa0ec>
   167b0:	bne	1fe84 <main@@Base+0xa134>
   167b4:	ldrb	r0, [sl, #2]!
   167b8:	cmp	r0, #32
   167bc:	bhi	166ec <main@@Base+0x99c>
   167c0:	b	1fe84 <main@@Base+0xa134>
   167c4:	mov	r2, sl
   167c8:	movw	r0, #53876	; 0xd274
   167cc:	vldr	s18, [pc, #996]	; 16bb8 <main@@Base+0xe68>
   167d0:	vmov.f32	s16, #8	; 0x40400000  3.0
   167d4:	add	r1, sp, #24
   167d8:	str	r6, [sp, #36]	; 0x24
   167dc:	movt	r0, #5
   167e0:	add	r0, r0, #48	; 0x30
   167e4:	str	r0, [sp, #20]
   167e8:	movw	r0, #13407	; 0x345f
   167ec:	movt	r0, #29494	; 0x7336
   167f0:	sub	r0, r0, #512	; 0x200
   167f4:	sub	r0, r0, #196608	; 0x30000
   167f8:	stm	r1, {r0, r5, r9}
   167fc:	cmp	r2, r6
   16800:	mov	sl, r6
   16804:	beq	16834 <main@@Base+0xae4>
   16808:	ldrb	r0, [r2]
   1680c:	cmp	r0, #34	; 0x22
   16810:	bne	1681c <main@@Base+0xacc>
   16814:	add	sl, r2, #1
   16818:	b	16834 <main@@Base+0xae4>
   1681c:	mov	r1, r2
   16820:	mov	r0, r9
   16824:	mov	r2, r6
   16828:	mov	r3, #5
   1682c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   16830:	mov	sl, r0
   16834:	sub	r8, r6, sl
   16838:	mov	r0, #8
   1683c:	cmp	r8, #8
   16840:	movcc	r0, r8
   16844:	sub	r2, r0, #1
   16848:	cmp	r2, #7
   1684c:	bhi	1921c <main@@Base+0x34cc>
   16850:	add	r0, pc, #32
   16854:	mov	r9, #0
   16858:	mov	ip, #0
   1685c:	mov	r7, #0
   16860:	mov	r1, #0
   16864:	mov	r3, #0
   16868:	mov	r5, #0
   1686c:	mov	r4, #0
   16870:	mov	r6, #0
   16874:	ldr	pc, [r0, r2, lsl #2]
   16878:	ldrdeq	r6, [r1], -ip
   1687c:	ldrdeq	r6, [r1], -r4
   16880:	andeq	r6, r1, ip, asr #17
   16884:	andeq	r6, r1, r4, asr #17
   16888:			; <UNDEFINED> instruction: 0x000168b8
   1688c:	andeq	r6, r1, ip, lsr #17
   16890:	muleq	r1, ip, r8
   16894:	muleq	r1, r8, r8
   16898:	ldrb	ip, [sl, #7]
   1689c:	ldrb	r0, [sl, #6]
   168a0:	mov	r7, r9
   168a4:	orr	r0, ip, r0, lsl #8
   168a8:	mov	r9, r0
   168ac:	ldrb	r0, [sl, #5]
   168b0:	mov	r1, r7
   168b4:	orr	r9, r9, r0, lsl #16
   168b8:	ldrb	r0, [sl, #4]
   168bc:	mov	r3, r1
   168c0:	orr	r9, r9, r0, lsl #24
   168c4:	ldrb	r0, [sl, #3]
   168c8:	orr	r5, r0, r3
   168cc:	ldrb	r0, [sl, #2]
   168d0:	orr	r4, r5, r0, lsl #8
   168d4:	ldrb	r0, [sl, #1]
   168d8:	orr	r6, r4, r0, lsl #16
   168dc:	ldrb	r0, [sl]
   168e0:	movw	r1, #29281	; 0x7261
   168e4:	movw	r4, #29556	; 0x7374
   168e8:	movt	r1, #24946	; 0x6172
   168ec:	movt	r4, #29797	; 0x7465
   168f0:	subs	r1, r9, r1
   168f4:	orr	r0, r6, r0, lsl #24
   168f8:	sbcs	r1, r0, r4
   168fc:	bcs	169ac <main@@Base+0xc5c>
   16900:	movw	r1, #28004	; 0x6d64
   16904:	movw	r2, #30309	; 0x7665
   16908:	movt	r1, #28257	; 0x6e61
   1690c:	movt	r2, #26990	; 0x696e
   16910:	cmp	r0, r1
   16914:	bhi	16b2c <main@@Base+0xddc>
   16918:	movw	r1, #25975	; 0x6577
   1691c:	ldr	r6, [sp, #36]	; 0x24
   16920:	movt	r1, #26220	; 0x666c
   16924:	cmp	r0, r1
   16928:	bhi	16c3c <main@@Base+0xeec>
   1692c:	movw	r1, #27759	; 0x6c6f
   16930:	movt	r1, #25455	; 0x636f
   16934:	eor	r2, r0, r1
   16938:	and	r1, r9, #-16777216	; 0xff000000
   1693c:	eor	r3, r1, #1912602624	; 0x72000000
   16940:	orrs	r2, r3, r2
   16944:	beq	174c4 <main@@Base+0x1774>
   16948:	movw	r2, #25965	; 0x656d
   1694c:	ldr	r9, [sp, #32]
   16950:	eor	r1, r1, #2030043136	; 0x79000000
   16954:	movt	r2, #25966	; 0x656e
   16958:	eor	r0, r0, r2
   1695c:	orrs	r0, r1, r0
   16960:	bne	1921c <main@@Base+0x34cc>
   16964:	cmp	r8, #6
   16968:	mov	r1, sl
   1696c:	blt	18794 <main@@Base+0x2a44>
   16970:	ldrb	r0, [sl, #5]
   16974:	mov	r1, sl
   16978:	cmp	r0, #34	; 0x22
   1697c:	bne	18794 <main@@Base+0x2a44>
   16980:	add	r2, sl, #6
   16984:	sub	r0, r6, r2
   16988:	cmp	r0, #2
   1698c:	blt	17d94 <main@@Base+0x2044>
   16990:	ldrb	r0, [r2]
   16994:	cmp	r0, #32
   16998:	bls	17d80 <main@@Base+0x2030>
   1699c:	mov	r1, r2
   169a0:	cmp	r1, r6
   169a4:	bne	17db0 <main@@Base+0x2060>
   169a8:	b	17de8 <main@@Base+0x2098>
   169ac:	movw	r1, #0
   169b0:	movt	r1, #26163	; 0x6633
   169b4:	subs	r1, r9, r1
   169b8:	sbcs	r1, r0, r4
   169bc:	bcs	16bbc <main@@Base+0xe6c>
   169c0:	movw	r1, #29281	; 0x7261
   169c4:	ldr	r6, [sp, #36]	; 0x24
   169c8:	movt	r1, #24946	; 0x6172
   169cc:	eor	r2, r9, r1
   169d0:	eor	r1, r0, r4
   169d4:	orrs	r2, r2, r1
   169d8:	bne	16cb0 <main@@Base+0xf60>
   169dc:	add	r8, sl, #8
   169e0:	mov	r0, #8
   169e4:	sub	ip, r6, r8
   169e8:	cmp	ip, #8
   169ec:	movcc	r0, ip
   169f0:	sub	r6, r0, #1
   169f4:	cmp	r6, #7
   169f8:	bhi	184e0 <main@@Base+0x2790>
   169fc:	add	r4, pc, #32
   16a00:	mov	r1, #0
   16a04:	mov	lr, #0
   16a08:	mov	r9, #0
   16a0c:	mov	r5, #0
   16a10:	mov	r3, #0
   16a14:	mov	r7, #0
   16a18:	mov	r0, #0
   16a1c:	mov	r2, #0
   16a20:	ldr	pc, [r4, r6, lsl #2]
   16a24:	andeq	r6, r1, r8, lsl #21
   16a28:	andeq	r6, r1, r0, lsl #21
   16a2c:	andeq	r6, r1, r8, ror sl
   16a30:	andeq	r6, r1, r0, ror sl
   16a34:	andeq	r6, r1, r4, ror #20
   16a38:	andeq	r6, r1, r8, asr sl
   16a3c:	andeq	r6, r1, r8, asr #20
   16a40:	andeq	r6, r1, r4, asr #20
   16a44:	ldrb	lr, [sl, #15]
   16a48:	ldrb	r0, [sl, #14]
   16a4c:	mov	r9, r1
   16a50:	orr	r0, lr, r0, lsl #8
   16a54:	mov	r1, r0
   16a58:	ldrb	r0, [sl, #13]
   16a5c:	mov	r5, r9
   16a60:	orr	r1, r1, r0, lsl #16
   16a64:	ldrb	r0, [sl, #12]
   16a68:	mov	r3, r5
   16a6c:	orr	r1, r1, r0, lsl #24
   16a70:	ldrb	r0, [sl, #11]
   16a74:	orr	r7, r0, r3
   16a78:	ldrb	r0, [sl, #10]
   16a7c:	orr	r0, r7, r0, lsl #8
   16a80:	ldrb	r2, [sl, #9]
   16a84:	orr	r2, r0, r2, lsl #16
   16a88:	ldrb	r0, [r8]
   16a8c:	movw	r7, #26227	; 0x6673
   16a90:	movt	r7, #31087	; 0x796f
   16a94:	orr	r2, r2, r0, lsl #24
   16a98:	movw	r0, #26989	; 0x696d
   16a9c:	movt	r0, #29810	; 0x7472
   16aa0:	subs	r0, r0, r1
   16aa4:	sbcs	r0, r7, r2
   16aa8:	bcc	173fc <main@@Base+0x16ac>
   16aac:	movw	r0, #29797	; 0x7465
   16ab0:	eor	r3, r2, r7
   16ab4:	movt	r0, #28530	; 0x6f72
   16ab8:	eor	r0, r1, r0
   16abc:	orrs	r0, r0, r3
   16ac0:	beq	17894 <main@@Base+0x1b44>
   16ac4:	movw	r0, #27763	; 0x6c73
   16ac8:	movt	r0, #28527	; 0x6f6f
   16acc:	eor	r0, r1, r0
   16ad0:	movw	r1, #26210	; 0x6662
   16ad4:	movt	r1, #31087	; 0x796f
   16ad8:	eor	r1, r2, r1
   16adc:	orrs	r0, r0, r1
   16ae0:	bne	184e0 <main@@Base+0x2790>
   16ae4:	cmp	ip, #9
   16ae8:	blt	184e0 <main@@Base+0x2790>
   16aec:	ldrb	r0, [sl, #16]
   16af0:	cmp	r0, #34	; 0x22
   16af4:	bne	184e0 <main@@Base+0x2790>
   16af8:	ldr	r4, [sp, #36]	; 0x24
   16afc:	ldr	r5, [sp, #32]
   16b00:	add	r1, sl, #17
   16b04:	sub	r0, r4, r1
   16b08:	cmp	r0, #2
   16b0c:	blt	18494 <main@@Base+0x2744>
   16b10:	ldrb	r0, [r1]
   16b14:	cmp	r0, #32
   16b18:	bls	18484 <main@@Base+0x2734>
   16b1c:	mov	sl, r1
   16b20:	cmp	sl, r4
   16b24:	bne	184ac <main@@Base+0x275c>
   16b28:	b	184f4 <main@@Base+0x27a4>
   16b2c:	movw	r1, #29555	; 0x7373
   16b30:	ldr	r6, [sp, #36]	; 0x24
   16b34:	movt	r1, #29797	; 0x7465
   16b38:	cmp	r0, r1
   16b3c:	bhi	16d78 <main@@Base+0x1028>
   16b40:	movw	r3, #24430	; 0x5f6e
   16b44:	movw	r2, #29285	; 0x7265
   16b48:	movt	r3, #28276	; 0x6e74
   16b4c:	movt	r2, #28769	; 0x7061
   16b50:	subs	r1, r9, r3
   16b54:	sbcs	r1, r0, r2
   16b58:	bcs	16f14 <main@@Base+0x11c4>
   16b5c:	movw	r1, #28005	; 0x6d65
   16b60:	movt	r1, #28257	; 0x6e61
   16b64:	teq	r0, r1
   16b68:	bne	19218 <main@@Base+0x34c8>
   16b6c:	ldr	r9, [sp, #32]
   16b70:	cmp	r8, #5
   16b74:	mov	r1, sl
   16b78:	blt	18978 <main@@Base+0x2c28>
   16b7c:	ldrb	r0, [sl, #4]
   16b80:	mov	r1, sl
   16b84:	cmp	r0, #34	; 0x22
   16b88:	bne	18978 <main@@Base+0x2c28>
   16b8c:	add	r2, sl, #5
   16b90:	sub	r0, r6, r2
   16b94:	cmp	r0, #2
   16b98:	blt	17e8c <main@@Base+0x213c>
   16b9c:	ldrb	r0, [r2]
   16ba0:	cmp	r0, #32
   16ba4:	bls	17e78 <main@@Base+0x2128>
   16ba8:	mov	r1, r2
   16bac:	cmp	r1, r6
   16bb0:	bne	17ea8 <main@@Base+0x2158>
   16bb4:	b	17ee0 <main@@Base+0x2190>
   16bb8:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   16bbc:	movw	r2, #29544	; 0x7368
   16bc0:	ldr	r6, [sp, #36]	; 0x24
   16bc4:	movt	r2, #26721	; 0x6861
   16bc8:	subs	r1, r9, r2
   16bcc:	sbcs	r1, r0, r4
   16bd0:	bcs	16dd4 <main@@Base+0x1084>
   16bd4:	movw	r1, #0
   16bd8:	bfc	r9, #0, #16
   16bdc:	eor	r0, r0, r4
   16be0:	movt	r1, #26163	; 0x6633
   16be4:	eor	r1, r9, r1
   16be8:	orrs	r0, r1, r0
   16bec:	bne	19218 <main@@Base+0x34c8>
   16bf0:	ldr	r9, [sp, #32]
   16bf4:	cmp	r8, #7
   16bf8:	mov	r7, sl
   16bfc:	blt	18154 <main@@Base+0x2404>
   16c00:	ldrb	r0, [sl, #6]
   16c04:	mov	r7, sl
   16c08:	cmp	r0, #34	; 0x22
   16c0c:	bne	18154 <main@@Base+0x2404>
   16c10:	add	r1, sl, #7
   16c14:	sub	r0, r6, r1
   16c18:	cmp	r0, #2
   16c1c:	blt	17c9c <main@@Base+0x1f4c>
   16c20:	ldrb	r0, [r1]
   16c24:	cmp	r0, #32
   16c28:	bls	17c88 <main@@Base+0x1f38>
   16c2c:	mov	r7, r1
   16c30:	cmp	r7, r6
   16c34:	bne	17cb4 <main@@Base+0x1f64>
   16c38:	b	17cec <main@@Base+0x1f9c>
   16c3c:	movw	r1, #65535	; 0xffff
   16c40:	movw	r3, #28530	; 0x6f72
   16c44:	movt	r1, #26735	; 0x686f
   16c48:	movt	r3, #28276	; 0x6e74
   16c4c:	cmp	r0, r1
   16c50:	bhi	170e8 <main@@Base+0x1398>
   16c54:	movw	r1, #25976	; 0x6578
   16c58:	movt	r1, #26220	; 0x666c
   16c5c:	teq	r0, r1
   16c60:	bne	19218 <main@@Base+0x34c8>
   16c64:	ldr	r9, [sp, #32]
   16c68:	cmp	r8, #5
   16c6c:	mov	r8, sl
   16c70:	blt	189d8 <main@@Base+0x2c88>
   16c74:	ldrb	r0, [sl, #4]
   16c78:	mov	r8, sl
   16c7c:	cmp	r0, #34	; 0x22
   16c80:	bne	189d8 <main@@Base+0x2c88>
   16c84:	add	r1, sl, #5
   16c88:	sub	r0, r6, r1
   16c8c:	cmp	r0, #2
   16c90:	blt	17f08 <main@@Base+0x21b8>
   16c94:	ldrb	r0, [r1]
   16c98:	cmp	r0, #32
   16c9c:	bls	17ef4 <main@@Base+0x21a4>
   16ca0:	mov	r8, r1
   16ca4:	cmp	r8, r6
   16ca8:	bne	17f20 <main@@Base+0x21d0>
   16cac:	b	17f58 <main@@Base+0x2208>
   16cb0:	movw	r2, #28788	; 0x7074
   16cb4:	movt	r2, #25965	; 0x656d
   16cb8:	subs	r2, r9, r2
   16cbc:	sbcs	r2, r0, r4
   16cc0:	bcs	17154 <main@@Base+0x1404>
   16cc4:	movw	r0, #28524	; 0x6f6c
   16cc8:	movt	r0, #25199	; 0x626f
   16ccc:	eor	r0, r9, r0
   16cd0:	orrs	r0, r0, r1
   16cd4:	beq	17848 <main@@Base+0x1af8>
   16cd8:	movw	r0, #29541	; 0x7365
   16cdc:	movt	r0, #25185	; 0x6261
   16ce0:	eor	r0, r9, r0
   16ce4:	orrs	r0, r0, r1
   16ce8:	bne	19218 <main@@Base+0x34c8>
   16cec:	add	r7, sl, #8
   16cf0:	ldr	r9, [sp, #32]
   16cf4:	mov	r2, #8
   16cf8:	sub	r0, r6, r7
   16cfc:	cmp	r0, #8
   16d00:	movcc	r2, r0
   16d04:	sub	r1, r2, #2
   16d08:	cmp	r1, #7
   16d0c:	bcs	17c18 <main@@Base+0x1ec8>
   16d10:	ldrb	r1, [sl, #9]
   16d14:	lsl	r2, r1, #16
   16d18:	mov	r1, #0
   16d1c:	ldrb	r3, [r7]
   16d20:	orr	r2, r2, r3, lsl #24
   16d24:	movw	r3, #0
   16d28:	movt	r3, #13876	; 0x3634
   16d2c:	eor	r2, r2, r3
   16d30:	orrs	r1, r1, r2
   16d34:	bne	1eb94 <main@@Base+0x8e44>
   16d38:	cmp	r0, #3
   16d3c:	blt	1eb94 <main@@Base+0x8e44>
   16d40:	ldrb	r0, [sl, #10]
   16d44:	cmp	r0, #34	; 0x22
   16d48:	bne	1eb94 <main@@Base+0x8e44>
   16d4c:	add	r1, sl, #11
   16d50:	sub	r0, r6, r1
   16d54:	cmp	r0, #2
   16d58:	blt	18dc8 <main@@Base+0x3078>
   16d5c:	ldrb	r0, [r1]
   16d60:	cmp	r0, #32
   16d64:	bls	18db8 <main@@Base+0x3068>
   16d68:	mov	sl, r1
   16d6c:	cmp	sl, r6
   16d70:	bne	18de0 <main@@Base+0x3090>
   16d74:	b	18e18 <main@@Base+0x30c8>
   16d78:	and	r5, r9, #-16777216	; 0xff000000
   16d7c:	eor	r7, r0, r4
   16d80:	eor	r1, r5, #872415232	; 0x34000000
   16d84:	orrs	r1, r1, r7
   16d88:	bne	171e8 <main@@Base+0x1498>
   16d8c:	cmp	r8, #6
   16d90:	mov	r8, sl
   16d94:	blt	18228 <main@@Base+0x24d8>
   16d98:	ldrb	r0, [sl, #5]
   16d9c:	mov	r8, sl
   16da0:	cmp	r0, #34	; 0x22
   16da4:	bne	18228 <main@@Base+0x24d8>
   16da8:	add	r1, sl, #6
   16dac:	sub	r0, r6, r1
   16db0:	cmp	r0, #2
   16db4:	blt	17d18 <main@@Base+0x1fc8>
   16db8:	ldrb	r0, [r1]
   16dbc:	cmp	r0, #32
   16dc0:	bls	17d04 <main@@Base+0x1fb4>
   16dc4:	mov	r8, r1
   16dc8:	cmp	r8, r6
   16dcc:	bne	17d30 <main@@Base+0x1fe0>
   16dd0:	b	17d68 <main@@Base+0x2018>
   16dd4:	eor	r2, r9, r2
   16dd8:	eor	r1, r0, r4
   16ddc:	orrs	r2, r2, r1
   16de0:	bne	17238 <main@@Base+0x14e8>
   16de4:	add	r8, sl, #8
   16de8:	mov	r0, #8
   16dec:	sub	ip, r6, r8
   16df0:	cmp	ip, #8
   16df4:	movcc	r0, ip
   16df8:	sub	r6, r0, #1
   16dfc:	cmp	r6, #7
   16e00:	bhi	184e0 <main@@Base+0x2790>
   16e04:	add	r4, pc, #32
   16e08:	mov	r1, #0
   16e0c:	mov	lr, #0
   16e10:	mov	r9, #0
   16e14:	mov	r5, #0
   16e18:	mov	r3, #0
   16e1c:	mov	r7, #0
   16e20:	mov	r0, #0
   16e24:	mov	r2, #0
   16e28:	ldr	pc, [r4, r6, lsl #2]
   16e2c:	muleq	r1, r0, lr
   16e30:	andeq	r6, r1, r8, lsl #29
   16e34:	andeq	r6, r1, r0, lsl #29
   16e38:	andeq	r6, r1, r8, ror lr
   16e3c:	andeq	r6, r1, ip, ror #28
   16e40:	andeq	r6, r1, r0, ror #28
   16e44:	andeq	r6, r1, r0, asr lr
   16e48:	andeq	r6, r1, ip, asr #28
   16e4c:	ldrb	lr, [sl, #15]
   16e50:	ldrb	r0, [sl, #14]
   16e54:	mov	r9, r1
   16e58:	orr	r0, lr, r0, lsl #8
   16e5c:	mov	r1, r0
   16e60:	ldrb	r0, [sl, #13]
   16e64:	mov	r5, r9
   16e68:	orr	r1, r1, r0, lsl #16
   16e6c:	ldrb	r0, [sl, #12]
   16e70:	mov	r3, r5
   16e74:	orr	r1, r1, r0, lsl #24
   16e78:	ldrb	r0, [sl, #11]
   16e7c:	orr	r7, r0, r3
   16e80:	ldrb	r0, [sl, #10]
   16e84:	orr	r0, r7, r0, lsl #8
   16e88:	ldrb	r2, [sl, #9]
   16e8c:	orr	r2, r0, r2, lsl #16
   16e90:	ldrb	r0, [r8]
   16e94:	movw	r3, #30257	; 0x7631
   16e98:	movt	r3, #26222	; 0x666e
   16e9c:	orr	r2, r2, r0, lsl #24
   16ea0:	subs	r0, r1, r3
   16ea4:	movw	r0, #13407	; 0x345f
   16ea8:	movt	r0, #29494	; 0x7336
   16eac:	sbcs	r0, r2, r0
   16eb0:	bcs	177bc <main@@Base+0x1a6c>
   16eb4:	eor	r0, r1, r3
   16eb8:	ldr	r1, [sp, #24]
   16ebc:	eor	r1, r2, r1
   16ec0:	orrs	r0, r0, r1
   16ec4:	bne	184e0 <main@@Base+0x2790>
   16ec8:	ldr	r9, [sp, #32]
   16ecc:	cmp	ip, #9
   16ed0:	blt	186e8 <main@@Base+0x2998>
   16ed4:	ldrb	r0, [sl, #16]
   16ed8:	cmp	r0, #34	; 0x22
   16edc:	bne	186e8 <main@@Base+0x2998>
   16ee0:	ldr	r4, [sp, #36]	; 0x24
   16ee4:	add	r1, sl, #17
   16ee8:	sub	r0, r4, r1
   16eec:	cmp	r0, #2
   16ef0:	blt	18698 <main@@Base+0x2948>
   16ef4:	ldrb	r0, [r1]
   16ef8:	cmp	r0, #32
   16efc:	bls	18680 <main@@Base+0x2930>
   16f00:	ldr	r4, [sp, #36]	; 0x24
   16f04:	mov	r6, r1
   16f08:	cmp	r6, r4
   16f0c:	bne	186b0 <main@@Base+0x2960>
   16f10:	b	18758 <main@@Base+0x2a08>
   16f14:	eor	r1, r9, r3
   16f18:	eor	r2, r0, r2
   16f1c:	orrs	r1, r1, r2
   16f20:	bne	17510 <main@@Base+0x17c0>
   16f24:	add	r1, sl, #8
   16f28:	mov	r2, #8
   16f2c:	ldr	r9, [sp, #32]
   16f30:	sub	r0, r6, r1
   16f34:	cmp	r0, #8
   16f38:	movcs	r0, r2
   16f3c:	sub	r7, r0, #1
   16f40:	cmp	r7, #7
   16f44:	bhi	17840 <main@@Base+0x1af0>
   16f48:	add	r0, pc, #32
   16f4c:	mov	r8, #0
   16f50:	mov	ip, #0
   16f54:	mov	lr, #0
   16f58:	mov	r6, #0
   16f5c:	mov	r3, #0
   16f60:	mov	r5, #0
   16f64:	mov	r4, #0
   16f68:	mov	r2, #0
   16f6c:	ldr	pc, [r0, r7, lsl #2]
   16f70:	ldrdeq	r6, [r1], -r4
   16f74:	andeq	r6, r1, ip, asr #31
   16f78:	andeq	r6, r1, r4, asr #31
   16f7c:			; <UNDEFINED> instruction: 0x00016fbc
   16f80:			; <UNDEFINED> instruction: 0x00016fb0
   16f84:	andeq	r6, r1, r4, lsr #31
   16f88:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   16f8c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   16f90:	ldrb	ip, [sl, #15]
   16f94:	ldrb	r0, [sl, #14]
   16f98:	mov	lr, r8
   16f9c:	orr	r0, ip, r0, lsl #8
   16fa0:	mov	r8, r0
   16fa4:	ldrb	r0, [sl, #13]
   16fa8:	mov	r6, lr
   16fac:	orr	r8, r8, r0, lsl #16
   16fb0:	ldrb	r0, [sl, #12]
   16fb4:	mov	r3, r6
   16fb8:	orr	r8, r8, r0, lsl #24
   16fbc:	ldrb	r0, [sl, #11]
   16fc0:	orr	r5, r0, r3
   16fc4:	ldrb	r0, [sl, #10]
   16fc8:	orr	r4, r5, r0, lsl #8
   16fcc:	ldrb	r0, [sl, #9]
   16fd0:	orr	r2, r4, r0, lsl #16
   16fd4:	ldrb	r3, [r1]
   16fd8:	movw	r0, #25445	; 0x6365
   16fdc:	ldr	r6, [sp, #36]	; 0x24
   16fe0:	movt	r0, #28769	; 0x7061
   16fe4:	eor	r0, r8, r0
   16fe8:	orr	r2, r2, r3, lsl #24
   16fec:	movw	r3, #25971	; 0x6573
   16ff0:	movt	r3, #24941	; 0x616d
   16ff4:	eor	r2, r2, r3
   16ff8:	orrs	r0, r0, r2
   16ffc:	bne	17840 <main@@Base+0x1af0>
   17000:	add	r8, sl, #16
   17004:	mov	r1, #8
   17008:	sub	r0, r6, r8
   1700c:	cmp	r0, #8
   17010:	movcc	r1, r0
   17014:	sub	r3, r1, #1
   17018:	cmp	r3, #7
   1701c:	bhi	1b8a0 <main@@Base+0x5b50>
   17020:	add	r7, pc, #20
   17024:	mov	r1, #0
   17028:	mov	r2, #0
   1702c:	mov	r6, #0
   17030:	mov	r5, #0
   17034:	mov	r4, #0
   17038:	ldr	pc, [r7, r3, lsl #2]
   1703c:	andeq	r7, r1, r0, lsl #1
   17040:	andeq	r7, r1, r8, ror r0
   17044:	andeq	r7, r1, r0, ror r0
   17048:	andeq	r7, r1, r4, rrx
   1704c:	andeq	r7, r1, ip, asr r0
   17050:	andeq	r7, r1, ip, asr r0
   17054:	andeq	r7, r1, ip, asr r0
   17058:	andeq	r7, r1, ip, asr r0
   1705c:	ldrb	r2, [sl, #20]
   17060:	lsl	r2, r2, #24
   17064:	ldrb	r3, [sl, #19]
   17068:	orr	r6, r3, r1
   1706c:	mov	r1, r2
   17070:	ldrb	r2, [sl, #18]
   17074:	orr	r5, r6, r2, lsl #8
   17078:	ldrb	r2, [sl, #17]
   1707c:	orr	r4, r5, r2, lsl #16
   17080:	ldrb	r2, [r8]
   17084:	movw	r3, #25971	; 0x6573
   17088:	ldr	r6, [sp, #36]	; 0x24
   1708c:	and	r1, r1, #-16777216	; 0xff000000
   17090:	movt	r3, #24436	; 0x5f74
   17094:	eor	r1, r1, #1946157056	; 0x74000000
   17098:	orr	r2, r4, r2, lsl #24
   1709c:	eor	r2, r2, r3
   170a0:	orrs	r1, r1, r2
   170a4:	bne	1b8a0 <main@@Base+0x5b50>
   170a8:	cmp	r0, #6
   170ac:	blt	1b8a0 <main@@Base+0x5b50>
   170b0:	ldrb	r0, [sl, #21]
   170b4:	cmp	r0, #34	; 0x22
   170b8:	bne	1b8a0 <main@@Base+0x5b50>
   170bc:	add	r1, sl, #22
   170c0:	sub	r0, r6, r1
   170c4:	cmp	r0, #2
   170c8:	blt	196b4 <main@@Base+0x3964>
   170cc:	ldrb	r0, [r1]
   170d0:	cmp	r0, #32
   170d4:	bls	196a4 <main@@Base+0x3954>
   170d8:	mov	sl, r1
   170dc:	cmp	sl, r6
   170e0:	bne	196cc <main@@Base+0x397c>
   170e4:	b	19704 <main@@Base+0x39b4>
   170e8:	subs	r1, r9, r3
   170ec:	sbcs	r1, r0, r2
   170f0:	bcs	17570 <main@@Base+0x1820>
   170f4:	movw	r1, #0
   170f8:	bfc	r0, #0, #16
   170fc:	movt	r1, #26736	; 0x6870
   17100:	teq	r0, r1
   17104:	bne	19218 <main@@Base+0x34c8>
   17108:	ldr	r9, [sp, #32]
   1710c:	cmp	r8, #3
   17110:	mov	r7, sl
   17114:	blt	19824 <main@@Base+0x3ad4>
   17118:	ldrb	r0, [sl, #2]
   1711c:	mov	r7, sl
   17120:	cmp	r0, #34	; 0x22
   17124:	bne	19824 <main@@Base+0x3ad4>
   17128:	add	r1, sl, #3
   1712c:	sub	r0, r6, r1
   17130:	cmp	r0, #2
   17134:	blt	18520 <main@@Base+0x27d0>
   17138:	ldrb	r0, [r1]
   1713c:	cmp	r0, #32
   17140:	bls	1850c <main@@Base+0x27bc>
   17144:	mov	r7, r1
   17148:	cmp	r7, r6
   1714c:	bne	18538 <main@@Base+0x27e8>
   17150:	b	18570 <main@@Base+0x2820>
   17154:	mvn	r2, #-1711276032	; 0x9a000000
   17158:	subs	r2, r2, r9
   1715c:	sbcs	r2, r4, r0
   17160:	bcc	175f0 <main@@Base+0x18a0>
   17164:	movw	r0, #28788	; 0x7074
   17168:	movt	r0, #25965	; 0x656d
   1716c:	eor	r0, r9, r0
   17170:	orrs	r0, r0, r1
   17174:	bne	19218 <main@@Base+0x34c8>
   17178:	add	r7, sl, #8
   1717c:	ldr	r9, [sp, #32]
   17180:	mov	r1, #8
   17184:	sub	r0, r6, r7
   17188:	cmp	r0, #8
   1718c:	movcc	r1, r0
   17190:	sub	r1, r1, #1
   17194:	cmp	r1, #7
   17198:	bhi	1eb94 <main@@Base+0x8e44>
   1719c:	ldrb	r1, [r7]
   171a0:	cmp	r1, #121	; 0x79
   171a4:	bne	1eb94 <main@@Base+0x8e44>
   171a8:	cmp	r0, #2
   171ac:	blt	1eb94 <main@@Base+0x8e44>
   171b0:	ldrb	r0, [sl, #9]
   171b4:	cmp	r0, #34	; 0x22
   171b8:	bne	1eb94 <main@@Base+0x8e44>
   171bc:	add	r1, sl, #10
   171c0:	sub	r0, r6, r1
   171c4:	cmp	r0, #2
   171c8:	blt	1ab80 <main@@Base+0x4e30>
   171cc:	ldrb	r0, [r1]
   171d0:	cmp	r0, #32
   171d4:	bls	1ab70 <main@@Base+0x4e20>
   171d8:	mov	sl, r1
   171dc:	cmp	sl, r6
   171e0:	bne	1ab98 <main@@Base+0x4e48>
   171e4:	b	1abd8 <main@@Base+0x4e88>
   171e8:	teq	r0, r4
   171ec:	bne	17fd4 <main@@Base+0x2284>
   171f0:	cmp	r8, #5
   171f4:	mov	r1, sl
   171f8:	blt	18d58 <main@@Base+0x3008>
   171fc:	ldrb	r0, [sl, #4]
   17200:	mov	r1, sl
   17204:	cmp	r0, #34	; 0x22
   17208:	bne	18d58 <main@@Base+0x3008>
   1720c:	add	r2, sl, #5
   17210:	sub	r0, r6, r2
   17214:	cmp	r0, #2
   17218:	blt	17f84 <main@@Base+0x2234>
   1721c:	ldrb	r0, [r2]
   17220:	cmp	r0, #32
   17224:	bls	17f70 <main@@Base+0x2220>
   17228:	mov	r1, r2
   1722c:	cmp	r1, r6
   17230:	bne	17fa0 <main@@Base+0x2250>
   17234:	b	18028 <main@@Base+0x22d8>
   17238:	movw	r7, #24431	; 0x5f6f
   1723c:	movw	r3, #25460	; 0x6374
   17240:	movt	r7, #28530	; 0x6f72
   17244:	movt	r3, #30309	; 0x7665
   17248:	subs	r2, r9, r7
   1724c:	sbcs	r2, r0, r3
   17250:	bcs	17664 <main@@Base+0x1914>
   17254:	movw	r0, #29556	; 0x7374
   17258:	movt	r0, #28261	; 0x6e65
   1725c:	eor	r0, r9, r0
   17260:	orrs	r0, r0, r1
   17264:	bne	19218 <main@@Base+0x34c8>
   17268:	add	r1, sl, #8
   1726c:	mov	r2, #8
   17270:	ldr	r9, [sp, #32]
   17274:	sub	r0, r6, r1
   17278:	cmp	r0, #8
   1727c:	movcs	r0, r2
   17280:	sub	r7, r0, #1
   17284:	cmp	r7, #7
   17288:	bhi	17840 <main@@Base+0x1af0>
   1728c:	add	r0, pc, #32
   17290:	mov	r8, #0
   17294:	mov	ip, #0
   17298:	mov	lr, #0
   1729c:	mov	r6, #0
   172a0:	mov	r3, #0
   172a4:	mov	r5, #0
   172a8:	mov	r2, #0
   172ac:	mov	r4, #0
   172b0:	ldr	pc, [r0, r7, lsl #2]
   172b4:	andeq	r7, r1, r8, lsl r3
   172b8:	andeq	r7, r1, r0, lsl r3
   172bc:	andeq	r7, r1, r8, lsl #6
   172c0:	andeq	r7, r1, r0, lsl #6
   172c4:	strdeq	r7, [r1], -r4
   172c8:	andeq	r7, r1, r8, ror #5
   172cc:	ldrdeq	r7, [r1], -r8
   172d0:	ldrdeq	r7, [r1], -r4
   172d4:	ldrb	ip, [sl, #15]
   172d8:	ldrb	r0, [sl, #14]
   172dc:	mov	lr, r8
   172e0:	orr	r0, ip, r0, lsl #8
   172e4:	mov	r8, r0
   172e8:	ldrb	r0, [sl, #13]
   172ec:	mov	r6, lr
   172f0:	orr	r8, r8, r0, lsl #16
   172f4:	ldrb	r0, [sl, #12]
   172f8:	mov	r3, r6
   172fc:	orr	r8, r8, r0, lsl #24
   17300:	ldrb	r0, [sl, #11]
   17304:	orr	r5, r0, r3
   17308:	ldrb	r0, [sl, #10]
   1730c:	orr	r2, r5, r0, lsl #8
   17310:	ldrb	r0, [sl, #9]
   17314:	orr	r4, r2, r0, lsl #16
   17318:	ldrb	r2, [r1]
   1731c:	movw	r0, #25205	; 0x6275
   17320:	movw	r3, #26220	; 0x666c
   17324:	ldr	r6, [sp, #36]	; 0x24
   17328:	movt	r0, #24948	; 0x6174
   1732c:	movt	r3, #25956	; 0x6564
   17330:	eor	r0, r8, r0
   17334:	orr	r2, r4, r2, lsl #24
   17338:	eor	r2, r2, r3
   1733c:	orrs	r0, r0, r2
   17340:	bne	17840 <main@@Base+0x1af0>
   17344:	add	r7, sl, #16
   17348:	mov	r1, #8
   1734c:	sub	r0, r6, r7
   17350:	cmp	r0, #8
   17354:	movcc	r1, r0
   17358:	sub	r2, r1, #1
   1735c:	cmp	r2, #7
   17360:	bhi	1eb94 <main@@Base+0x8e44>
   17364:	add	r3, pc, #4
   17368:	mov	r1, #0
   1736c:	ldr	pc, [r3, r2, lsl #2]
   17370:	andeq	r7, r1, r4, lsr #7
   17374:	muleq	r1, ip, r3
   17378:	muleq	r1, r4, r3
   1737c:	muleq	r1, r0, r3
   17380:	muleq	r1, r0, r3
   17384:	muleq	r1, r0, r3
   17388:	muleq	r1, r0, r3
   1738c:	muleq	r1, r0, r3
   17390:	ldrb	r1, [sl, #19]
   17394:	ldrb	r2, [sl, #18]
   17398:	orr	r1, r1, r2, lsl #8
   1739c:	ldrb	r2, [sl, #17]
   173a0:	orr	r1, r1, r2, lsl #16
   173a4:	ldrb	r2, [r7]
   173a8:	orr	r1, r1, r2, lsl #24
   173ac:	movw	r2, #25970	; 0x6572
   173b0:	movt	r2, #26214	; 0x6666
   173b4:	teq	r1, r2
   173b8:	bne	1eb94 <main@@Base+0x8e44>
   173bc:	cmp	r0, #5
   173c0:	blt	1eb94 <main@@Base+0x8e44>
   173c4:	ldrb	r0, [sl, #20]
   173c8:	cmp	r0, #34	; 0x22
   173cc:	bne	1eb94 <main@@Base+0x8e44>
   173d0:	add	r1, sl, #21
   173d4:	sub	r0, r6, r1
   173d8:	cmp	r0, #2
   173dc:	blt	1aff0 <main@@Base+0x52a0>
   173e0:	ldrb	r0, [r1]
   173e4:	cmp	r0, #32
   173e8:	bls	1afdc <main@@Base+0x528c>
   173ec:	mov	r8, r1
   173f0:	cmp	r8, r6
   173f4:	bne	1b008 <main@@Base+0x52b8>
   173f8:	b	1b048 <main@@Base+0x52f8>
   173fc:	movw	r0, #27749	; 0x6c65
   17400:	movw	r3, #26228	; 0x6674
   17404:	ldr	r6, [sp, #36]	; 0x24
   17408:	ldr	r9, [sp, #32]
   1740c:	movt	r0, #24930	; 0x6162
   17410:	movt	r3, #31087	; 0x796f
   17414:	eor	r0, r1, r0
   17418:	eor	r3, r2, r3
   1741c:	orrs	r0, r0, r3
   17420:	beq	179ac <main@@Base+0x1c5c>
   17424:	movw	r0, #26990	; 0x696e
   17428:	movt	r0, #29810	; 0x7472
   1742c:	eor	r0, r1, r0
   17430:	eor	r1, r2, r7
   17434:	orrs	r0, r0, r1
   17438:	bne	1b8a0 <main@@Base+0x5b50>
   1743c:	add	r7, sl, #16
   17440:	mov	r2, #8
   17444:	sub	r0, r6, r7
   17448:	cmp	r0, #8
   1744c:	movcc	r2, r0
   17450:	sub	r1, r2, #2
   17454:	cmp	r1, #7
   17458:	bcs	17c74 <main@@Base+0x1f24>
   1745c:	ldrb	r1, [sl, #17]
   17460:	lsl	r2, r1, #16
   17464:	mov	r1, #0
   17468:	ldrb	r3, [r7]
   1746c:	orr	r2, r2, r3, lsl #24
   17470:	movw	r3, #0
   17474:	movt	r3, #26418	; 0x6732
   17478:	eor	r3, r2, r3
   1747c:	orrs	r1, r1, r3
   17480:	bne	17b44 <main@@Base+0x1df4>
   17484:	cmp	r0, #3
   17488:	blt	1eb94 <main@@Base+0x8e44>
   1748c:	ldrb	r0, [sl, #18]
   17490:	cmp	r0, #34	; 0x22
   17494:	bne	1eb94 <main@@Base+0x8e44>
   17498:	add	r1, sl, #19
   1749c:	sub	r0, r6, r1
   174a0:	cmp	r0, #2
   174a4:	blt	18e40 <main@@Base+0x30f0>
   174a8:	ldrb	r0, [r1]
   174ac:	cmp	r0, #32
   174b0:	bls	18e30 <main@@Base+0x30e0>
   174b4:	mov	sl, r1
   174b8:	cmp	sl, r6
   174bc:	bne	18e58 <main@@Base+0x3108>
   174c0:	b	18e90 <main@@Base+0x3140>
   174c4:	ldr	r9, [sp, #32]
   174c8:	cmp	r8, #6
   174cc:	mov	r7, sl
   174d0:	blt	187f4 <main@@Base+0x2aa4>
   174d4:	ldrb	r0, [sl, #5]
   174d8:	mov	r7, sl
   174dc:	cmp	r0, #34	; 0x22
   174e0:	bne	187f4 <main@@Base+0x2aa4>
   174e4:	add	r1, sl, #6
   174e8:	sub	r0, r6, r1
   174ec:	cmp	r0, #2
   174f0:	blt	17e10 <main@@Base+0x20c0>
   174f4:	ldrb	r0, [r1]
   174f8:	cmp	r0, #32
   174fc:	bls	17dfc <main@@Base+0x20ac>
   17500:	mov	r7, r1
   17504:	cmp	r7, r6
   17508:	bne	17e28 <main@@Base+0x20d8>
   1750c:	b	17e60 <main@@Base+0x2110>
   17510:	movw	r1, #29440	; 0x7300
   17514:	ldr	r9, [sp, #32]
   17518:	bic	r0, r0, #255	; 0xff
   1751c:	movt	r1, #28783	; 0x706f
   17520:	teq	r0, r1
   17524:	bne	1921c <main@@Base+0x34cc>
   17528:	cmp	r8, #4
   1752c:	mov	r8, sl
   17530:	blt	199b0 <main@@Base+0x3c60>
   17534:	ldrb	r0, [sl, #3]
   17538:	mov	r8, sl
   1753c:	cmp	r0, #34	; 0x22
   17540:	bne	199b0 <main@@Base+0x3c60>
   17544:	add	r1, sl, #4
   17548:	sub	r0, r6, r1
   1754c:	cmp	r0, #2
   17550:	blt	1859c <main@@Base+0x284c>
   17554:	ldrb	r0, [r1]
   17558:	cmp	r0, #32
   1755c:	bls	18588 <main@@Base+0x2838>
   17560:	mov	r8, r1
   17564:	cmp	r8, r6
   17568:	bne	185b4 <main@@Base+0x2864>
   1756c:	b	185ec <main@@Base+0x289c>
   17570:	eor	r1, r9, r3
   17574:	eor	r2, r0, r2
   17578:	orrs	r1, r1, r2
   1757c:	bne	17a18 <main@@Base+0x1cc8>
   17580:	add	r7, sl, #8
   17584:	ldr	r9, [sp, #32]
   17588:	mov	r1, #8
   1758c:	sub	r0, r6, r7
   17590:	cmp	r0, #8
   17594:	movcc	r1, r0
   17598:	sub	r1, r1, #1
   1759c:	cmp	r1, #7
   175a0:	bhi	1eb94 <main@@Base+0x8e44>
   175a4:	ldrb	r1, [r7]
   175a8:	cmp	r1, #121	; 0x79
   175ac:	bne	1eb94 <main@@Base+0x8e44>
   175b0:	cmp	r0, #2
   175b4:	blt	1eb94 <main@@Base+0x8e44>
   175b8:	ldrb	r0, [sl, #9]
   175bc:	cmp	r0, #34	; 0x22
   175c0:	bne	1eb94 <main@@Base+0x8e44>
   175c4:	add	r1, sl, #10
   175c8:	sub	r0, r6, r1
   175cc:	cmp	r0, #2
   175d0:	blt	1ac00 <main@@Base+0x4eb0>
   175d4:	ldrb	r0, [r1]
   175d8:	cmp	r0, #32
   175dc:	bls	1abf0 <main@@Base+0x4ea0>
   175e0:	mov	sl, r1
   175e4:	cmp	sl, r6
   175e8:	bne	1ac18 <main@@Base+0x4ec8>
   175ec:	b	1ac58 <main@@Base+0x4f08>
   175f0:	movw	r3, #0
   175f4:	mov	r2, r9
   175f8:	movt	r3, #26163	; 0x6633
   175fc:	bfc	r2, #0, #16
   17600:	subs	r3, r3, #65536	; 0x10000
   17604:	eor	r2, r2, r3
   17608:	sbc	r3, r4, #0
   1760c:	eor	r0, r0, r3
   17610:	orrs	r0, r2, r0
   17614:	bne	17a74 <main@@Base+0x1d24>
   17618:	ldr	r9, [sp, #32]
   1761c:	cmp	r8, #7
   17620:	mov	r7, sl
   17624:	blt	1a6d4 <main@@Base+0x4984>
   17628:	ldrb	r0, [sl, #6]
   1762c:	mov	r7, sl
   17630:	cmp	r0, #34	; 0x22
   17634:	bne	1a6d4 <main@@Base+0x4984>
   17638:	add	r1, sl, #7
   1763c:	sub	r0, r6, r1
   17640:	cmp	r0, #2
   17644:	blt	18618 <main@@Base+0x28c8>
   17648:	ldrb	r0, [r1]
   1764c:	cmp	r0, #32
   17650:	bls	18604 <main@@Base+0x28b4>
   17654:	mov	r7, r1
   17658:	cmp	r7, r6
   1765c:	bne	18630 <main@@Base+0x28e0>
   17660:	b	18668 <main@@Base+0x2918>
   17664:	eor	r1, r9, r7
   17668:	eor	r0, r0, r3
   1766c:	orrs	r0, r1, r0
   17670:	bne	19218 <main@@Base+0x34c8>
   17674:	add	r9, sl, #8
   17678:	mov	r0, #8
   1767c:	sub	lr, r6, r9
   17680:	cmp	lr, #8
   17684:	movcc	r0, lr
   17688:	sub	r6, r0, #1
   1768c:	cmp	r6, #7
   17690:	bhi	17c04 <main@@Base+0x1eb4>
   17694:	add	r4, pc, #32
   17698:	mov	r1, #0
   1769c:	mov	ip, #0
   176a0:	mov	r8, #0
   176a4:	mov	r5, #0
   176a8:	mov	r3, #0
   176ac:	mov	r7, #0
   176b0:	mov	r2, #0
   176b4:	mov	r0, #0
   176b8:	ldr	pc, [r4, r6, lsl #2]
   176bc:	andeq	r7, r1, r0, lsr #14
   176c0:	andeq	r7, r1, r8, lsl r7
   176c4:	andeq	r7, r1, r0, lsl r7
   176c8:	andeq	r7, r1, r8, lsl #14
   176cc:	strdeq	r7, [r1], -ip
   176d0:	strdeq	r7, [r1], -r0
   176d4:	andeq	r7, r1, r0, ror #13
   176d8:	ldrdeq	r7, [r1], -ip
   176dc:	ldrb	ip, [sl, #15]
   176e0:	ldrb	r0, [sl, #14]
   176e4:	mov	r8, r1
   176e8:	orr	r0, ip, r0, lsl #8
   176ec:	mov	r1, r0
   176f0:	ldrb	r0, [sl, #13]
   176f4:	mov	r5, r8
   176f8:	orr	r1, r1, r0, lsl #16
   176fc:	ldrb	r0, [sl, #12]
   17700:	mov	r3, r5
   17704:	orr	r1, r1, r0, lsl #24
   17708:	ldrb	r0, [sl, #11]
   1770c:	orr	r7, r0, r3
   17710:	ldrb	r0, [sl, #10]
   17714:	orr	r2, r7, r0, lsl #8
   17718:	ldrb	r0, [sl, #9]
   1771c:	orr	r0, r2, r0, lsl #16
   17720:	ldrb	r3, [r9]
   17724:	movw	r2, #27749	; 0x6c65
   17728:	movt	r2, #30050	; 0x7562
   1772c:	eor	r2, r1, r2
   17730:	orr	r0, r0, r3, lsl #24
   17734:	movw	r3, #25711	; 0x646f
   17738:	movt	r3, #26207	; 0x665f
   1773c:	eor	r3, r0, r3
   17740:	orrs	r2, r2, r3
   17744:	bne	17b90 <main@@Base+0x1e40>
   17748:	ldr	r6, [sp, #36]	; 0x24
   1774c:	add	r7, sl, #16
   17750:	mov	r1, #8
   17754:	sub	r0, r6, r7
   17758:	cmp	r0, #8
   1775c:	movcc	r1, r0
   17760:	sub	r1, r1, #1
   17764:	cmp	r1, #7
   17768:	bhi	17bfc <main@@Base+0x1eac>
   1776c:	ldrb	r1, [r7]
   17770:	cmp	r1, #115	; 0x73
   17774:	bne	17bfc <main@@Base+0x1eac>
   17778:	ldr	r9, [sp, #32]
   1777c:	cmp	r0, #2
   17780:	blt	1eb94 <main@@Base+0x8e44>
   17784:	ldrb	r0, [sl, #17]
   17788:	cmp	r0, #34	; 0x22
   1778c:	bne	1eb94 <main@@Base+0x8e44>
   17790:	add	r1, sl, #18
   17794:	sub	r0, r6, r1
   17798:	cmp	r0, #2
   1779c:	blt	1b94c <main@@Base+0x5bfc>
   177a0:	ldrb	r0, [r1]
   177a4:	cmp	r0, #32
   177a8:	bls	1b938 <main@@Base+0x5be8>
   177ac:	mov	r8, r1
   177b0:	cmp	r8, r6
   177b4:	bne	1b964 <main@@Base+0x5c14>
   177b8:	b	1b9a4 <main@@Base+0x5c54>
   177bc:	movw	r0, #30256	; 0x7630
   177c0:	ldr	r6, [sp, #36]	; 0x24
   177c4:	movt	r0, #26222	; 0x666e
   177c8:	subs	r0, r0, r1
   177cc:	movw	r0, #12895	; 0x325f
   177d0:	movt	r0, #30003	; 0x7533
   177d4:	sbcs	r0, r0, r2
   177d8:	eor	r0, r1, r3
   177dc:	bcc	17ad0 <main@@Base+0x1d80>
   177e0:	movw	r1, #13407	; 0x345f
   177e4:	ldr	r9, [sp, #32]
   177e8:	movt	r1, #29494	; 0x7336
   177ec:	eor	r1, r2, r1
   177f0:	orrs	r0, r0, r1
   177f4:	bne	1b8a0 <main@@Base+0x5b50>
   177f8:	cmp	ip, #9
   177fc:	blt	19080 <main@@Base+0x3330>
   17800:	ldrb	r0, [sl, #16]
   17804:	cmp	r0, #34	; 0x22
   17808:	bne	19080 <main@@Base+0x3330>
   1780c:	ldr	r4, [sp, #36]	; 0x24
   17810:	add	r1, sl, #17
   17814:	sub	r0, r4, r1
   17818:	cmp	r0, #2
   1781c:	blt	19030 <main@@Base+0x32e0>
   17820:	ldrb	r0, [r1]
   17824:	cmp	r0, #32
   17828:	bls	19018 <main@@Base+0x32c8>
   1782c:	ldr	r4, [sp, #36]	; 0x24
   17830:	mov	r6, r1
   17834:	cmp	r6, r4
   17838:	bne	19048 <main@@Base+0x32f8>
   1783c:	b	190f0 <main@@Base+0x33a0>
   17840:	mov	r0, r9
   17844:	b	1eb9c <main@@Base+0x8e4c>
   17848:	ldr	r9, [sp, #32]
   1784c:	cmp	r8, #9
   17850:	mov	r7, sl
   17854:	blt	194dc <main@@Base+0x378c>
   17858:	ldrb	r0, [sl, #8]
   1785c:	mov	r7, sl
   17860:	cmp	r0, #34	; 0x22
   17864:	bne	194dc <main@@Base+0x378c>
   17868:	add	r1, sl, #9
   1786c:	sub	r0, r6, r1
   17870:	cmp	r0, #2
   17874:	blt	180cc <main@@Base+0x237c>
   17878:	ldrb	r0, [r1]
   1787c:	cmp	r0, #32
   17880:	bls	180b8 <main@@Base+0x2368>
   17884:	mov	r7, r1
   17888:	cmp	r7, r6
   1788c:	bne	180e4 <main@@Base+0x2394>
   17890:	b	1811c <main@@Base+0x23cc>
   17894:	ldr	r0, [sp, #36]	; 0x24
   17898:	add	r8, sl, #16
   1789c:	ldr	r9, [sp, #32]
   178a0:	mov	r1, #8
   178a4:	sub	lr, r0, r8
   178a8:	cmp	lr, #8
   178ac:	movcc	r1, lr
   178b0:	sub	r6, r1, #1
   178b4:	cmp	r6, #7
   178b8:	bhi	184e4 <main@@Base+0x2794>
   178bc:	add	r0, pc, #28
   178c0:	mov	r1, #0
   178c4:	mov	ip, #0
   178c8:	mov	r4, #0
   178cc:	mov	r3, #0
   178d0:	mov	r5, #0
   178d4:	mov	r7, #0
   178d8:	mov	r2, #0
   178dc:	ldr	pc, [r0, r6, lsl #2]
   178e0:	andeq	r7, r1, ip, lsr r9
   178e4:	andeq	r7, r1, r4, lsr r9
   178e8:	andeq	r7, r1, ip, lsr #18
   178ec:	andeq	r7, r1, r4, lsr #18
   178f0:	andeq	r7, r1, r8, lsl r9
   178f4:	andeq	r7, r1, r8, lsl #18
   178f8:	andeq	r7, r1, r0, lsl #18
   178fc:	andeq	r7, r1, r0, lsl #18
   17900:	ldrb	r0, [sl, #22]
   17904:	lsl	ip, r0, #8
   17908:	ldrb	r0, [sl, #21]
   1790c:	mov	r4, r1
   17910:	orr	r0, ip, r0, lsl #16
   17914:	mov	r1, r0
   17918:	ldrb	r0, [sl, #20]
   1791c:	mov	r3, r4
   17920:	orr	r1, r1, r0, lsl #24
   17924:	ldrb	r0, [sl, #19]
   17928:	orr	r5, r0, r3
   1792c:	ldrb	r0, [sl, #18]
   17930:	orr	r7, r5, r0, lsl #8
   17934:	ldrb	r0, [sl, #17]
   17938:	orr	r2, r7, r0, lsl #16
   1793c:	bic	r0, r1, #255	; 0xff
   17940:	movw	r1, #29696	; 0x7400
   17944:	movt	r1, #30051	; 0x7563
   17948:	eor	r0, r0, r1
   1794c:	ldrb	r1, [r8]
   17950:	orr	r1, r2, r1, lsl #24
   17954:	movw	r2, #29810	; 0x7472
   17958:	movt	r2, #25715	; 0x6473
   1795c:	eor	r1, r1, r2
   17960:	orrs	r0, r0, r1
   17964:	bne	184e4 <main@@Base+0x2794>
   17968:	ldr	r6, [sp, #36]	; 0x24
   1796c:	cmp	lr, #8
   17970:	blt	1b8a0 <main@@Base+0x5b50>
   17974:	ldrb	r0, [sl, #23]
   17978:	cmp	r0, #34	; 0x22
   1797c:	bne	1b8a0 <main@@Base+0x5b50>
   17980:	add	r1, sl, #24
   17984:	sub	r0, r6, r1
   17988:	cmp	r0, #2
   1798c:	blt	18eb8 <main@@Base+0x3168>
   17990:	ldrb	r0, [r1]
   17994:	cmp	r0, #32
   17998:	bls	18ea8 <main@@Base+0x3158>
   1799c:	mov	sl, r1
   179a0:	cmp	sl, r6
   179a4:	bne	18ed0 <main@@Base+0x3180>
   179a8:	b	18f08 <main@@Base+0x31b8>
   179ac:	add	r7, sl, #16
   179b0:	mov	r1, #8
   179b4:	sub	r0, r6, r7
   179b8:	cmp	r0, #8
   179bc:	movcc	r1, r0
   179c0:	sub	r1, r1, #1
   179c4:	cmp	r1, #7
   179c8:	bhi	1eb94 <main@@Base+0x8e44>
   179cc:	ldrb	r1, [r7]
   179d0:	cmp	r1, #115	; 0x73
   179d4:	bne	1eb94 <main@@Base+0x8e44>
   179d8:	cmp	r0, #2
   179dc:	blt	1eb94 <main@@Base+0x8e44>
   179e0:	ldrb	r0, [sl, #17]
   179e4:	cmp	r0, #34	; 0x22
   179e8:	bne	1eb94 <main@@Base+0x8e44>
   179ec:	add	r1, sl, #18
   179f0:	sub	r0, r6, r1
   179f4:	cmp	r0, #2
   179f8:	blt	1a770 <main@@Base+0x4a20>
   179fc:	ldrb	r0, [r1]
   17a00:	cmp	r0, #32
   17a04:	bls	1a760 <main@@Base+0x4a10>
   17a08:	mov	sl, r1
   17a0c:	cmp	sl, r6
   17a10:	bne	1a788 <main@@Base+0x4a38>
   17a14:	b	1a7c8 <main@@Base+0x4a78>
   17a18:	movw	r1, #28257	; 0x6e61
   17a1c:	ldr	r9, [sp, #32]
   17a20:	movt	r1, #28001	; 0x6d61
   17a24:	teq	r0, r1
   17a28:	bne	1921c <main@@Base+0x34cc>
   17a2c:	cmp	r8, #5
   17a30:	mov	r7, sl
   17a34:	blt	1b400 <main@@Base+0x56b0>
   17a38:	ldrb	r0, [sl, #4]
   17a3c:	mov	r7, sl
   17a40:	cmp	r0, #34	; 0x22
   17a44:	bne	1b400 <main@@Base+0x56b0>
   17a48:	add	r1, sl, #5
   17a4c:	sub	r0, r6, r1
   17a50:	cmp	r0, #2
   17a54:	blt	18f34 <main@@Base+0x31e4>
   17a58:	ldrb	r0, [r1]
   17a5c:	cmp	r0, #32
   17a60:	bls	18f20 <main@@Base+0x31d0>
   17a64:	mov	r7, r1
   17a68:	cmp	r7, r6
   17a6c:	bne	18f4c <main@@Base+0x31fc>
   17a70:	b	18f84 <main@@Base+0x3234>
   17a74:	and	r0, r9, #-16777216	; 0xff000000
   17a78:	eor	r0, r0, #1711276032	; 0x66000000
   17a7c:	orrs	r0, r0, r1
   17a80:	bne	19218 <main@@Base+0x34c8>
   17a84:	ldr	r9, [sp, #32]
   17a88:	cmp	r8, #6
   17a8c:	mov	r7, sl
   17a90:	blt	1b598 <main@@Base+0x5848>
   17a94:	ldrb	r0, [sl, #5]
   17a98:	mov	r7, sl
   17a9c:	cmp	r0, #34	; 0x22
   17aa0:	bne	1b598 <main@@Base+0x5848>
   17aa4:	add	r1, sl, #6
   17aa8:	sub	r0, r6, r1
   17aac:	cmp	r0, #2
   17ab0:	blt	18fb0 <main@@Base+0x3260>
   17ab4:	ldrb	r0, [r1]
   17ab8:	cmp	r0, #32
   17abc:	bls	18f9c <main@@Base+0x324c>
   17ac0:	mov	r7, r1
   17ac4:	cmp	r7, r6
   17ac8:	bne	18fc8 <main@@Base+0x3278>
   17acc:	b	19000 <main@@Base+0x32b0>
   17ad0:	movw	r1, #13407	; 0x345f
   17ad4:	ldr	r9, [sp, #32]
   17ad8:	movt	r1, #30006	; 0x7536
   17adc:	eor	r1, r2, r1
   17ae0:	orrs	r1, r0, r1
   17ae4:	beq	17c2c <main@@Base+0x1edc>
   17ae8:	movw	r1, #12895	; 0x325f
   17aec:	movt	r1, #30003	; 0x7533
   17af0:	eor	r1, r2, r1
   17af4:	orrs	r0, r0, r1
   17af8:	bne	1b8a0 <main@@Base+0x5b50>
   17afc:	cmp	ip, #9
   17b00:	blt	1a84c <main@@Base+0x4afc>
   17b04:	ldrb	r0, [sl, #16]
   17b08:	cmp	r0, #34	; 0x22
   17b0c:	bne	1a84c <main@@Base+0x4afc>
   17b10:	ldr	r4, [sp, #36]	; 0x24
   17b14:	add	r1, sl, #17
   17b18:	sub	r0, r4, r1
   17b1c:	cmp	r0, #2
   17b20:	blt	1a7f8 <main@@Base+0x4aa8>
   17b24:	ldrb	r0, [r1]
   17b28:	cmp	r0, #32
   17b2c:	bls	1a7e0 <main@@Base+0x4a90>
   17b30:	ldr	r4, [sp, #36]	; 0x24
   17b34:	mov	r6, r1
   17b38:	cmp	r6, r4
   17b3c:	bne	1a810 <main@@Base+0x4ac0>
   17b40:	b	1a8c4 <main@@Base+0x4b74>
   17b44:	and	r1, r2, #-16777216	; 0xff000000
   17b48:	teq	r1, #1728053248	; 0x67000000
   17b4c:	bne	1eb94 <main@@Base+0x8e44>
   17b50:	cmp	r0, #2
   17b54:	blt	1eb94 <main@@Base+0x8e44>
   17b58:	ldrb	r0, [sl, #17]
   17b5c:	cmp	r0, #34	; 0x22
   17b60:	bne	1eb94 <main@@Base+0x8e44>
   17b64:	add	r1, sl, #18
   17b68:	sub	r0, r6, r1
   17b6c:	cmp	r0, #2
   17b70:	blt	1ab00 <main@@Base+0x4db0>
   17b74:	ldrb	r0, [r1]
   17b78:	cmp	r0, #32
   17b7c:	bls	1aaf0 <main@@Base+0x4da0>
   17b80:	mov	sl, r1
   17b84:	cmp	sl, r6
   17b88:	bne	1ab18 <main@@Base+0x4dc8>
   17b8c:	b	1ab58 <main@@Base+0x4e08>
   17b90:	movw	r2, #24428	; 0x5f6c
   17b94:	lsr	r1, r1, #8
   17b98:	movt	r2, #102	; 0x66
   17b9c:	eor	r2, r2, r0, lsr #8
   17ba0:	orr	r0, r1, r0, lsl #24
   17ba4:	movw	r1, #26483	; 0x6773
   17ba8:	movt	r1, #28526	; 0x6f6e
   17bac:	eor	r0, r0, r1
   17bb0:	orrs	r0, r0, r2
   17bb4:	bne	17c04 <main@@Base+0x1eb4>
   17bb8:	ldr	r6, [sp, #36]	; 0x24
   17bbc:	cmp	lr, #8
   17bc0:	blt	1afb4 <main@@Base+0x5264>
   17bc4:	ldrb	r0, [sl, #15]
   17bc8:	cmp	r0, #34	; 0x22
   17bcc:	bne	1afb4 <main@@Base+0x5264>
   17bd0:	add	r1, sl, #16
   17bd4:	sub	r0, r6, r1
   17bd8:	cmp	r0, #2
   17bdc:	blt	1af64 <main@@Base+0x5214>
   17be0:	ldrb	r0, [r1]
   17be4:	cmp	r0, #32
   17be8:	bls	1af50 <main@@Base+0x5200>
   17bec:	mov	r8, r1
   17bf0:	cmp	r8, r6
   17bf4:	bne	1af7c <main@@Base+0x522c>
   17bf8:	b	1afc4 <main@@Base+0x5274>
   17bfc:	ldr	r9, [sp, #32]
   17c00:	b	1eb94 <main@@Base+0x8e44>
   17c04:	ldr	r0, [sp, #32]
   17c08:	ldr	r6, [sp, #36]	; 0x24
   17c0c:	mov	r1, r9
   17c10:	mov	r9, r0
   17c14:	b	1eb9c <main@@Base+0x8e4c>
   17c18:	cmp	r2, #1
   17c1c:	mov	r1, #0
   17c20:	mov	r2, #0
   17c24:	beq	16d1c <main@@Base+0xfcc>
   17c28:	b	1eb94 <main@@Base+0x8e44>
   17c2c:	cmp	ip, #9
   17c30:	blt	1a948 <main@@Base+0x4bf8>
   17c34:	ldrb	r0, [sl, #16]
   17c38:	cmp	r0, #34	; 0x22
   17c3c:	bne	1a948 <main@@Base+0x4bf8>
   17c40:	ldr	r4, [sp, #36]	; 0x24
   17c44:	add	r1, sl, #17
   17c48:	sub	r0, r4, r1
   17c4c:	cmp	r0, #2
   17c50:	blt	1a8f4 <main@@Base+0x4ba4>
   17c54:	ldrb	r0, [r1]
   17c58:	cmp	r0, #32
   17c5c:	bls	1a8dc <main@@Base+0x4b8c>
   17c60:	ldr	r4, [sp, #36]	; 0x24
   17c64:	mov	r6, r1
   17c68:	cmp	r6, r4
   17c6c:	bne	1a90c <main@@Base+0x4bbc>
   17c70:	b	1a9c0 <main@@Base+0x4c70>
   17c74:	cmp	r2, #1
   17c78:	mov	r1, #0
   17c7c:	mov	r2, #0
   17c80:	beq	17468 <main@@Base+0x1718>
   17c84:	b	1eb94 <main@@Base+0x8e44>
   17c88:	bne	17c9c <main@@Base+0x1f4c>
   17c8c:	mov	r7, sl
   17c90:	ldrb	r0, [r7, #8]!
   17c94:	cmp	r0, #32
   17c98:	bhi	17cac <main@@Base+0x1f5c>
   17c9c:	mov	r0, r9
   17ca0:	mov	r2, r6
   17ca4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   17ca8:	mov	r7, r0
   17cac:	cmp	r7, r6
   17cb0:	beq	17cec <main@@Base+0x1f9c>
   17cb4:	ldrb	r0, [r7]
   17cb8:	cmp	r0, #58	; 0x3a
   17cbc:	bne	17cec <main@@Base+0x1f9c>
   17cc0:	add	r1, r7, #1
   17cc4:	sub	r0, r6, r1
   17cc8:	cmp	r0, #2
   17ccc:	blt	18144 <main@@Base+0x23f4>
   17cd0:	ldrb	r0, [r1]
   17cd4:	cmp	r0, #32
   17cd8:	bls	18134 <main@@Base+0x23e4>
   17cdc:	mov	r7, r1
   17ce0:	cmp	sl, r7
   17ce4:	bne	1815c <main@@Base+0x240c>
   17ce8:	b	1921c <main@@Base+0x34cc>
   17cec:	mov	r0, r9
   17cf0:	mov	r1, r7
   17cf4:	mov	r2, r6
   17cf8:	mov	r3, #4
   17cfc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   17d00:	b	18150 <main@@Base+0x2400>
   17d04:	bne	17d18 <main@@Base+0x1fc8>
   17d08:	mov	r8, sl
   17d0c:	ldrb	r0, [r8, #7]!
   17d10:	cmp	r0, #32
   17d14:	bhi	17d28 <main@@Base+0x1fd8>
   17d18:	ldr	r0, [sp, #32]
   17d1c:	mov	r2, r6
   17d20:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   17d24:	mov	r8, r0
   17d28:	cmp	r8, r6
   17d2c:	beq	17d68 <main@@Base+0x2018>
   17d30:	ldrb	r0, [r8]
   17d34:	cmp	r0, #58	; 0x3a
   17d38:	bne	17d68 <main@@Base+0x2018>
   17d3c:	add	r1, r8, #1
   17d40:	sub	r0, r6, r1
   17d44:	cmp	r0, #2
   17d48:	blt	18218 <main@@Base+0x24c8>
   17d4c:	ldrb	r0, [r1]
   17d50:	cmp	r0, #32
   17d54:	bls	18208 <main@@Base+0x24b8>
   17d58:	mov	r8, r1
   17d5c:	cmp	sl, r8
   17d60:	bne	18230 <main@@Base+0x24e0>
   17d64:	b	19194 <main@@Base+0x3444>
   17d68:	ldr	r0, [sp, #32]
   17d6c:	mov	r1, r8
   17d70:	mov	r2, r6
   17d74:	mov	r3, #4
   17d78:	bl	3454c <flatcc_json_parser_set_error@@Base>
   17d7c:	b	18224 <main@@Base+0x24d4>
   17d80:	bne	17d94 <main@@Base+0x2044>
   17d84:	mov	r1, sl
   17d88:	ldrb	r0, [r1, #7]!
   17d8c:	cmp	r0, #32
   17d90:	bhi	17da8 <main@@Base+0x2058>
   17d94:	mov	r1, r2
   17d98:	mov	r0, r9
   17d9c:	mov	r2, r6
   17da0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   17da4:	mov	r1, r0
   17da8:	cmp	r1, r6
   17dac:	beq	17de8 <main@@Base+0x2098>
   17db0:	ldrb	r0, [r1]
   17db4:	cmp	r0, #58	; 0x3a
   17db8:	bne	17de8 <main@@Base+0x2098>
   17dbc:	add	r2, r1, #1
   17dc0:	sub	r0, r6, r2
   17dc4:	cmp	r0, #2
   17dc8:	blt	18780 <main@@Base+0x2a30>
   17dcc:	ldrb	r0, [r2]
   17dd0:	cmp	r0, #32
   17dd4:	bls	18770 <main@@Base+0x2a20>
   17dd8:	mov	r1, r2
   17ddc:	cmp	sl, r1
   17de0:	bne	1879c <main@@Base+0x2a4c>
   17de4:	b	1921c <main@@Base+0x34cc>
   17de8:	mov	r0, r9
   17dec:	mov	r2, r6
   17df0:	mov	r3, #4
   17df4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   17df8:	b	18790 <main@@Base+0x2a40>
   17dfc:	bne	17e10 <main@@Base+0x20c0>
   17e00:	mov	r7, sl
   17e04:	ldrb	r0, [r7, #7]!
   17e08:	cmp	r0, #32
   17e0c:	bhi	17e20 <main@@Base+0x20d0>
   17e10:	mov	r0, r9
   17e14:	mov	r2, r6
   17e18:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   17e1c:	mov	r7, r0
   17e20:	cmp	r7, r6
   17e24:	beq	17e60 <main@@Base+0x2110>
   17e28:	ldrb	r0, [r7]
   17e2c:	cmp	r0, #58	; 0x3a
   17e30:	bne	17e60 <main@@Base+0x2110>
   17e34:	add	r1, r7, #1
   17e38:	sub	r0, r6, r1
   17e3c:	cmp	r0, #2
   17e40:	blt	187e4 <main@@Base+0x2a94>
   17e44:	ldrb	r0, [r1]
   17e48:	cmp	r0, #32
   17e4c:	bls	187d4 <main@@Base+0x2a84>
   17e50:	mov	r7, r1
   17e54:	cmp	sl, r7
   17e58:	bne	187fc <main@@Base+0x2aac>
   17e5c:	b	1921c <main@@Base+0x34cc>
   17e60:	mov	r0, r9
   17e64:	mov	r1, r7
   17e68:	mov	r2, r6
   17e6c:	mov	r3, #4
   17e70:	bl	3454c <flatcc_json_parser_set_error@@Base>
   17e74:	b	187f0 <main@@Base+0x2aa0>
   17e78:	bne	17e8c <main@@Base+0x213c>
   17e7c:	mov	r1, sl
   17e80:	ldrb	r0, [r1, #6]!
   17e84:	cmp	r0, #32
   17e88:	bhi	17ea0 <main@@Base+0x2150>
   17e8c:	mov	r1, r2
   17e90:	mov	r0, r9
   17e94:	mov	r2, r6
   17e98:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   17e9c:	mov	r1, r0
   17ea0:	cmp	r1, r6
   17ea4:	beq	17ee0 <main@@Base+0x2190>
   17ea8:	ldrb	r0, [r1]
   17eac:	cmp	r0, #58	; 0x3a
   17eb0:	bne	17ee0 <main@@Base+0x2190>
   17eb4:	add	r2, r1, #1
   17eb8:	sub	r0, r6, r2
   17ebc:	cmp	r0, #2
   17ec0:	blt	18964 <main@@Base+0x2c14>
   17ec4:	ldrb	r0, [r2]
   17ec8:	cmp	r0, #32
   17ecc:	bls	18954 <main@@Base+0x2c04>
   17ed0:	mov	r1, r2
   17ed4:	cmp	sl, r1
   17ed8:	bne	18980 <main@@Base+0x2c30>
   17edc:	b	1921c <main@@Base+0x34cc>
   17ee0:	mov	r0, r9
   17ee4:	mov	r2, r6
   17ee8:	mov	r3, #4
   17eec:	bl	3454c <flatcc_json_parser_set_error@@Base>
   17ef0:	b	18974 <main@@Base+0x2c24>
   17ef4:	bne	17f08 <main@@Base+0x21b8>
   17ef8:	mov	r8, sl
   17efc:	ldrb	r0, [r8, #6]!
   17f00:	cmp	r0, #32
   17f04:	bhi	17f18 <main@@Base+0x21c8>
   17f08:	mov	r0, r9
   17f0c:	mov	r2, r6
   17f10:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   17f14:	mov	r8, r0
   17f18:	cmp	r8, r6
   17f1c:	beq	17f58 <main@@Base+0x2208>
   17f20:	ldrb	r0, [r8]
   17f24:	cmp	r0, #58	; 0x3a
   17f28:	bne	17f58 <main@@Base+0x2208>
   17f2c:	add	r1, r8, #1
   17f30:	sub	r0, r6, r1
   17f34:	cmp	r0, #2
   17f38:	blt	189c8 <main@@Base+0x2c78>
   17f3c:	ldrb	r0, [r1]
   17f40:	cmp	r0, #32
   17f44:	bls	189b8 <main@@Base+0x2c68>
   17f48:	mov	r8, r1
   17f4c:	cmp	sl, r8
   17f50:	bne	189e0 <main@@Base+0x2c90>
   17f54:	b	1921c <main@@Base+0x34cc>
   17f58:	mov	r0, r9
   17f5c:	mov	r1, r8
   17f60:	mov	r2, r6
   17f64:	mov	r3, #4
   17f68:	bl	3454c <flatcc_json_parser_set_error@@Base>
   17f6c:	b	189d4 <main@@Base+0x2c84>
   17f70:	bne	17f84 <main@@Base+0x2234>
   17f74:	mov	r1, sl
   17f78:	ldrb	r0, [r1, #6]!
   17f7c:	cmp	r0, #32
   17f80:	bhi	17f98 <main@@Base+0x2248>
   17f84:	ldr	r0, [sp, #32]
   17f88:	mov	r1, r2
   17f8c:	mov	r2, r6
   17f90:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   17f94:	mov	r1, r0
   17f98:	cmp	r1, r6
   17f9c:	beq	18028 <main@@Base+0x22d8>
   17fa0:	ldrb	r0, [r1]
   17fa4:	cmp	r0, #58	; 0x3a
   17fa8:	bne	18028 <main@@Base+0x22d8>
   17fac:	add	r2, r1, #1
   17fb0:	sub	r0, r6, r2
   17fb4:	cmp	r0, #2
   17fb8:	blt	18d44 <main@@Base+0x2ff4>
   17fbc:	ldrb	r0, [r2]
   17fc0:	cmp	r0, #32
   17fc4:	bls	18d34 <main@@Base+0x2fe4>
   17fc8:	mov	r1, r2
   17fcc:	cmp	sl, r1
   17fd0:	bne	18d60 <main@@Base+0x3010>
   17fd4:	eor	r0, r5, #889192448	; 0x35000000
   17fd8:	orrs	r0, r0, r7
   17fdc:	bne	19194 <main@@Base+0x3444>
   17fe0:	cmp	r8, #6
   17fe4:	mov	r8, sl
   17fe8:	blt	19128 <main@@Base+0x33d8>
   17fec:	ldrb	r0, [sl, #5]
   17ff0:	mov	r8, sl
   17ff4:	cmp	r0, #34	; 0x22
   17ff8:	bne	19128 <main@@Base+0x33d8>
   17ffc:	add	r1, sl, #6
   18000:	sub	r0, r6, r1
   18004:	cmp	r0, #2
   18008:	blt	18050 <main@@Base+0x2300>
   1800c:	ldrb	r0, [r1]
   18010:	cmp	r0, #32
   18014:	bls	1803c <main@@Base+0x22ec>
   18018:	mov	r8, r1
   1801c:	cmp	r8, r6
   18020:	bne	18068 <main@@Base+0x2318>
   18024:	b	180a0 <main@@Base+0x2350>
   18028:	ldr	r0, [sp, #32]
   1802c:	mov	r2, r6
   18030:	mov	r3, #4
   18034:	bl	3454c <flatcc_json_parser_set_error@@Base>
   18038:	b	18d54 <main@@Base+0x3004>
   1803c:	bne	18050 <main@@Base+0x2300>
   18040:	mov	r8, sl
   18044:	ldrb	r0, [r8, #7]!
   18048:	cmp	r0, #32
   1804c:	bhi	18060 <main@@Base+0x2310>
   18050:	ldr	r0, [sp, #32]
   18054:	mov	r2, r6
   18058:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1805c:	mov	r8, r0
   18060:	cmp	r8, r6
   18064:	beq	180a0 <main@@Base+0x2350>
   18068:	ldrb	r0, [r8]
   1806c:	cmp	r0, #58	; 0x3a
   18070:	bne	180a0 <main@@Base+0x2350>
   18074:	add	r1, r8, #1
   18078:	sub	r0, r6, r1
   1807c:	cmp	r0, #2
   18080:	blt	19118 <main@@Base+0x33c8>
   18084:	ldrb	r0, [r1]
   18088:	cmp	r0, #32
   1808c:	bls	19108 <main@@Base+0x33b8>
   18090:	mov	r8, r1
   18094:	cmp	sl, r8
   18098:	bne	19130 <main@@Base+0x33e0>
   1809c:	b	19194 <main@@Base+0x3444>
   180a0:	ldr	r0, [sp, #32]
   180a4:	mov	r1, r8
   180a8:	mov	r2, r6
   180ac:	mov	r3, #4
   180b0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   180b4:	b	19124 <main@@Base+0x33d4>
   180b8:	bne	180cc <main@@Base+0x237c>
   180bc:	mov	r7, sl
   180c0:	ldrb	r0, [r7, #10]!
   180c4:	cmp	r0, #32
   180c8:	bhi	180dc <main@@Base+0x238c>
   180cc:	mov	r0, r9
   180d0:	mov	r2, r6
   180d4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   180d8:	mov	r7, r0
   180dc:	cmp	r7, r6
   180e0:	beq	1811c <main@@Base+0x23cc>
   180e4:	ldrb	r0, [r7]
   180e8:	cmp	r0, #58	; 0x3a
   180ec:	bne	1811c <main@@Base+0x23cc>
   180f0:	add	r1, r7, #1
   180f4:	sub	r0, r6, r1
   180f8:	cmp	r0, #2
   180fc:	blt	194cc <main@@Base+0x377c>
   18100:	ldrb	r0, [r1]
   18104:	cmp	r0, #32
   18108:	bls	194bc <main@@Base+0x376c>
   1810c:	mov	r7, r1
   18110:	cmp	sl, r7
   18114:	bne	194e4 <main@@Base+0x3794>
   18118:	b	1921c <main@@Base+0x34cc>
   1811c:	mov	r0, r9
   18120:	mov	r1, r7
   18124:	mov	r2, r6
   18128:	mov	r3, #4
   1812c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   18130:	b	194d8 <main@@Base+0x3788>
   18134:	bne	18144 <main@@Base+0x23f4>
   18138:	ldrb	r0, [r7, #2]!
   1813c:	cmp	r0, #32
   18140:	bhi	18154 <main@@Base+0x2404>
   18144:	mov	r0, r9
   18148:	mov	r2, r6
   1814c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18150:	mov	r7, r0
   18154:	cmp	sl, r7
   18158:	beq	1921c <main@@Base+0x34cc>
   1815c:	mov	r0, #0
   18160:	mov	r1, r7
   18164:	mov	r2, r6
   18168:	sub	r3, fp, #56	; 0x38
   1816c:	str	r0, [fp, #-56]	; 0xffffffc8
   18170:	mov	r0, r9
   18174:	bl	36a70 <flatcc_json_parser_float@@Base>
   18178:	mov	r8, r0
   1817c:	cmp	r7, r0
   18180:	bne	181b8 <main@@Base+0x2468>
   18184:	sub	r0, fp, #56	; 0x38
   18188:	mov	r1, r7
   1818c:	mov	r2, r6
   18190:	str	r0, [sp]
   18194:	movw	r0, #53396	; 0xd094
   18198:	movt	r0, #5
   1819c:	add	r3, r0, #96	; 0x60
   181a0:	mov	r0, r9
   181a4:	bl	241d8 <main@@Base+0xe488>
   181a8:	mov	r8, r0
   181ac:	cmp	r0, r7
   181b0:	cmpne	r8, r6
   181b4:	beq	1fee4 <main@@Base+0xa194>
   181b8:	vldr	s0, [fp, #-56]	; 0xffffffc8
   181bc:	vcmp.f32	s0, #0.0
   181c0:	vmrs	APSR_nzcv, fpscr
   181c4:	bne	181d4 <main@@Base+0x2484>
   181c8:	ldrb	r0, [r9, #8]
   181cc:	tst	r0, #2
   181d0:	beq	1eba8 <main@@Base+0x8e58>
   181d4:	ldr	r0, [r9]
   181d8:	mov	r1, #27
   181dc:	mov	r2, #4
   181e0:	mov	r3, #4
   181e4:	bl	30dac <flatcc_builder_table_add@@Base>
   181e8:	cmp	r0, #0
   181ec:	beq	1fee4 <main@@Base+0xa194>
   181f0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   181f4:	str	r1, [r0]
   181f8:	sub	r0, r6, r8
   181fc:	cmp	r0, #2
   18200:	bge	1ebb4 <main@@Base+0x8e64>
   18204:	b	1ec28 <main@@Base+0x8ed8>
   18208:	bne	18218 <main@@Base+0x24c8>
   1820c:	ldrb	r0, [r8, #2]!
   18210:	cmp	r0, #32
   18214:	bhi	18228 <main@@Base+0x24d8>
   18218:	ldr	r0, [sp, #32]
   1821c:	mov	r2, r6
   18220:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18224:	mov	r8, r0
   18228:	cmp	sl, r8
   1822c:	beq	19194 <main@@Base+0x3444>
   18230:	ldr	r9, [sp, #32]
   18234:	mov	r1, #4
   18238:	mov	r2, #2
   1823c:	mvn	r3, #-1073741824	; 0xc0000000
   18240:	ldr	r0, [r9]
   18244:	bl	2f49c <flatcc_builder_start_vector@@Base>
   18248:	cmp	r0, #0
   1824c:	bne	1fee4 <main@@Base+0xa194>
   18250:	cmp	r8, r6
   18254:	beq	18294 <main@@Base+0x2544>
   18258:	ldrb	r0, [r8]
   1825c:	cmp	r0, #91	; 0x5b
   18260:	bne	18294 <main@@Base+0x2544>
   18264:	add	r1, r8, #1
   18268:	sub	r0, r6, r1
   1826c:	cmp	r0, #2
   18270:	blt	182e8 <main@@Base+0x2598>
   18274:	ldrb	r0, [r1]
   18278:	cmp	r0, #32
   1827c:	bls	182d8 <main@@Base+0x2588>
   18280:	mov	r8, r1
   18284:	cmp	r8, r6
   18288:	mov	sl, r6
   1828c:	bne	18304 <main@@Base+0x25b4>
   18290:	b	18344 <main@@Base+0x25f4>
   18294:	mov	r0, r9
   18298:	mov	r1, r8
   1829c:	mov	r2, r6
   182a0:	mov	r3, #22
   182a4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   182a8:	mov	r8, r0
   182ac:	ldr	r0, [r9]
   182b0:	bl	30714 <flatcc_builder_end_vector@@Base>
   182b4:	cmp	r0, #0
   182b8:	str	r0, [sp, #44]	; 0x2c
   182bc:	beq	1fee4 <main@@Base+0xa194>
   182c0:	ldr	r0, [r9]
   182c4:	mov	r1, #9
   182c8:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   182cc:	cmp	r0, #0
   182d0:	bne	19268 <main@@Base+0x3518>
   182d4:	b	1fee4 <main@@Base+0xa194>
   182d8:	bne	182e8 <main@@Base+0x2598>
   182dc:	ldrb	r0, [r8, #2]!
   182e0:	cmp	r0, #32
   182e4:	bhi	182f8 <main@@Base+0x25a8>
   182e8:	mov	r0, r9
   182ec:	mov	r2, r6
   182f0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   182f4:	mov	r8, r0
   182f8:	cmp	r8, r6
   182fc:	mov	sl, r6
   18300:	beq	18344 <main@@Base+0x25f4>
   18304:	ldrb	r0, [r8]
   18308:	cmp	r0, #93	; 0x5d
   1830c:	bne	18340 <main@@Base+0x25f0>
   18310:	add	r1, r8, #1
   18314:	sub	r0, r6, r1
   18318:	cmp	r0, #2
   1831c:	blt	18da8 <main@@Base+0x3058>
   18320:	ldrb	r0, [r1]
   18324:	cmp	r0, #32
   18328:	bhi	18470 <main@@Base+0x2720>
   1832c:	bne	18da8 <main@@Base+0x3058>
   18330:	ldrb	r0, [r8, #2]!
   18334:	cmp	r0, #32
   18338:	bhi	182ac <main@@Base+0x255c>
   1833c:	b	18da8 <main@@Base+0x3058>
   18340:	mov	sl, r8
   18344:	ldr	r0, [r9]
   18348:	mov	r1, #1
   1834c:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   18350:	mov	r3, r0
   18354:	cmp	r0, #0
   18358:	beq	16640 <main@@Base+0x8f0>
   1835c:	mov	r0, r9
   18360:	mov	r1, sl
   18364:	mov	r2, r6
   18368:	bl	223b0 <main@@Base+0xc660>
   1836c:	mov	r1, r0
   18370:	sub	r0, r6, r0
   18374:	cmp	r0, #2
   18378:	blt	183ac <main@@Base+0x265c>
   1837c:	ldrb	r0, [r1]
   18380:	cmp	r0, #32
   18384:	bls	18398 <main@@Base+0x2648>
   18388:	mov	sl, r1
   1838c:	cmp	sl, r6
   18390:	bne	183c4 <main@@Base+0x2674>
   18394:	b	18444 <main@@Base+0x26f4>
   18398:	bne	183ac <main@@Base+0x265c>
   1839c:	mov	sl, r1
   183a0:	ldrb	r0, [sl, #1]!
   183a4:	cmp	r0, #32
   183a8:	bhi	183bc <main@@Base+0x266c>
   183ac:	mov	r0, r9
   183b0:	mov	r2, r6
   183b4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   183b8:	mov	sl, r0
   183bc:	cmp	sl, r6
   183c0:	beq	18444 <main@@Base+0x26f4>
   183c4:	ldrb	r0, [sl]
   183c8:	cmp	r0, #44	; 0x2c
   183cc:	bne	1844c <main@@Base+0x26fc>
   183d0:	add	r1, sl, #1
   183d4:	sub	r0, r6, r1
   183d8:	cmp	r0, #2
   183dc:	blt	1840c <main@@Base+0x26bc>
   183e0:	ldrb	r0, [r1]
   183e4:	cmp	r0, #32
   183e8:	bls	183fc <main@@Base+0x26ac>
   183ec:	mov	sl, r1
   183f0:	cmp	sl, r6
   183f4:	bne	18424 <main@@Base+0x26d4>
   183f8:	b	18478 <main@@Base+0x2728>
   183fc:	bne	1840c <main@@Base+0x26bc>
   18400:	ldrb	r0, [sl, #2]!
   18404:	cmp	r0, #32
   18408:	bhi	1841c <main@@Base+0x26cc>
   1840c:	mov	r0, r9
   18410:	mov	r2, r6
   18414:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18418:	mov	sl, r0
   1841c:	cmp	sl, r6
   18420:	beq	18478 <main@@Base+0x2728>
   18424:	ldrb	r0, [sl]
   18428:	cmp	r0, #93	; 0x5d
   1842c:	bne	18344 <main@@Base+0x25f4>
   18430:	add	r1, sl, #1
   18434:	sub	r0, r6, r1
   18438:	cmp	r0, #2
   1843c:	blt	18da8 <main@@Base+0x3058>
   18440:	b	18464 <main@@Base+0x2714>
   18444:	mov	r8, r6
   18448:	b	182ac <main@@Base+0x255c>
   1844c:	cmp	r0, #93	; 0x5d
   18450:	bne	18940 <main@@Base+0x2bf0>
   18454:	add	r1, sl, #1
   18458:	sub	r0, r6, r1
   1845c:	cmp	r0, #2
   18460:	blt	18da8 <main@@Base+0x3058>
   18464:	ldrb	r0, [r1]
   18468:	cmp	r0, #32
   1846c:	bls	18d94 <main@@Base+0x3044>
   18470:	mov	r8, r1
   18474:	b	182ac <main@@Base+0x255c>
   18478:	mov	r0, r9
   1847c:	mov	r1, r6
   18480:	b	18948 <main@@Base+0x2bf8>
   18484:	bne	18494 <main@@Base+0x2744>
   18488:	ldrb	r0, [sl, #18]!
   1848c:	cmp	r0, #32
   18490:	bhi	184a4 <main@@Base+0x2754>
   18494:	mov	r0, r5
   18498:	mov	r2, r4
   1849c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   184a0:	mov	sl, r0
   184a4:	cmp	sl, r4
   184a8:	beq	184f4 <main@@Base+0x27a4>
   184ac:	ldrb	r0, [sl]
   184b0:	cmp	r0, #58	; 0x3a
   184b4:	bne	184f4 <main@@Base+0x27a4>
   184b8:	add	r1, sl, #1
   184bc:	sub	r0, r4, r1
   184c0:	cmp	r0, #2
   184c4:	blt	19740 <main@@Base+0x39f0>
   184c8:	ldrb	r0, [r1]
   184cc:	cmp	r0, #32
   184d0:	bls	19730 <main@@Base+0x39e0>
   184d4:	mov	sl, r1
   184d8:	cmp	r8, sl
   184dc:	bne	19758 <main@@Base+0x3a08>
   184e0:	ldr	r9, [sp, #32]
   184e4:	ldr	r6, [sp, #36]	; 0x24
   184e8:	mov	r0, r9
   184ec:	mov	r1, r8
   184f0:	b	1eb9c <main@@Base+0x8e4c>
   184f4:	mov	r0, r5
   184f8:	mov	r1, sl
   184fc:	mov	r2, r4
   18500:	mov	r3, #4
   18504:	bl	3454c <flatcc_json_parser_set_error@@Base>
   18508:	b	1974c <main@@Base+0x39fc>
   1850c:	bne	18520 <main@@Base+0x27d0>
   18510:	mov	r7, sl
   18514:	ldrb	r0, [r7, #4]!
   18518:	cmp	r0, #32
   1851c:	bhi	18530 <main@@Base+0x27e0>
   18520:	mov	r0, r9
   18524:	mov	r2, r6
   18528:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1852c:	mov	r7, r0
   18530:	cmp	r7, r6
   18534:	beq	18570 <main@@Base+0x2820>
   18538:	ldrb	r0, [r7]
   1853c:	cmp	r0, #58	; 0x3a
   18540:	bne	18570 <main@@Base+0x2820>
   18544:	add	r1, r7, #1
   18548:	sub	r0, r6, r1
   1854c:	cmp	r0, #2
   18550:	blt	19814 <main@@Base+0x3ac4>
   18554:	ldrb	r0, [r1]
   18558:	cmp	r0, #32
   1855c:	bls	19804 <main@@Base+0x3ab4>
   18560:	mov	r7, r1
   18564:	cmp	sl, r7
   18568:	bne	1982c <main@@Base+0x3adc>
   1856c:	b	1921c <main@@Base+0x34cc>
   18570:	mov	r0, r9
   18574:	mov	r1, r7
   18578:	mov	r2, r6
   1857c:	mov	r3, #4
   18580:	bl	3454c <flatcc_json_parser_set_error@@Base>
   18584:	b	19820 <main@@Base+0x3ad0>
   18588:	bne	1859c <main@@Base+0x284c>
   1858c:	mov	r8, sl
   18590:	ldrb	r0, [r8, #5]!
   18594:	cmp	r0, #32
   18598:	bhi	185ac <main@@Base+0x285c>
   1859c:	mov	r0, r9
   185a0:	mov	r2, r6
   185a4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   185a8:	mov	r8, r0
   185ac:	cmp	r8, r6
   185b0:	beq	185ec <main@@Base+0x289c>
   185b4:	ldrb	r0, [r8]
   185b8:	cmp	r0, #58	; 0x3a
   185bc:	bne	185ec <main@@Base+0x289c>
   185c0:	add	r1, r8, #1
   185c4:	sub	r0, r6, r1
   185c8:	cmp	r0, #2
   185cc:	blt	199a0 <main@@Base+0x3c50>
   185d0:	ldrb	r0, [r1]
   185d4:	cmp	r0, #32
   185d8:	bls	19990 <main@@Base+0x3c40>
   185dc:	mov	r8, r1
   185e0:	cmp	sl, r8
   185e4:	bne	199b8 <main@@Base+0x3c68>
   185e8:	b	1921c <main@@Base+0x34cc>
   185ec:	mov	r0, r9
   185f0:	mov	r1, r8
   185f4:	mov	r2, r6
   185f8:	mov	r3, #4
   185fc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   18600:	b	199ac <main@@Base+0x3c5c>
   18604:	bne	18618 <main@@Base+0x28c8>
   18608:	mov	r7, sl
   1860c:	ldrb	r0, [r7, #8]!
   18610:	cmp	r0, #32
   18614:	bhi	18628 <main@@Base+0x28d8>
   18618:	mov	r0, r9
   1861c:	mov	r2, r6
   18620:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18624:	mov	r7, r0
   18628:	cmp	r7, r6
   1862c:	beq	18668 <main@@Base+0x2918>
   18630:	ldrb	r0, [r7]
   18634:	cmp	r0, #58	; 0x3a
   18638:	bne	18668 <main@@Base+0x2918>
   1863c:	add	r1, r7, #1
   18640:	sub	r0, r6, r1
   18644:	cmp	r0, #2
   18648:	blt	1a6c4 <main@@Base+0x4974>
   1864c:	ldrb	r0, [r1]
   18650:	cmp	r0, #32
   18654:	bls	1a6b4 <main@@Base+0x4964>
   18658:	mov	r7, r1
   1865c:	cmp	sl, r7
   18660:	bne	1a6dc <main@@Base+0x498c>
   18664:	b	1921c <main@@Base+0x34cc>
   18668:	mov	r0, r9
   1866c:	mov	r1, r7
   18670:	mov	r2, r6
   18674:	mov	r3, #4
   18678:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1867c:	b	1a6d0 <main@@Base+0x4980>
   18680:	ldr	r4, [sp, #36]	; 0x24
   18684:	bne	18698 <main@@Base+0x2948>
   18688:	mov	r6, sl
   1868c:	ldrb	r0, [r6, #18]!
   18690:	cmp	r0, #32
   18694:	bhi	186a8 <main@@Base+0x2958>
   18698:	mov	r0, r9
   1869c:	mov	r2, r4
   186a0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   186a4:	mov	r6, r0
   186a8:	cmp	r6, r4
   186ac:	beq	18758 <main@@Base+0x2a08>
   186b0:	ldrb	r0, [r6]
   186b4:	cmp	r0, #58	; 0x3a
   186b8:	bne	18758 <main@@Base+0x2a08>
   186bc:	ldr	r0, [sp, #36]	; 0x24
   186c0:	add	r1, r6, #1
   186c4:	sub	r0, r0, r1
   186c8:	cmp	r0, #2
   186cc:	blt	1a9fc <main@@Base+0x4cac>
   186d0:	ldrb	r0, [r1]
   186d4:	cmp	r0, #32
   186d8:	bls	1a9ec <main@@Base+0x4c9c>
   186dc:	mov	r6, r1
   186e0:	cmp	r8, r6
   186e4:	bne	1aa14 <main@@Base+0x4cc4>
   186e8:	ldr	r6, [sp, #36]	; 0x24
   186ec:	add	r7, sl, #16
   186f0:	mov	r1, #8
   186f4:	sub	r0, r6, r7
   186f8:	cmp	r0, #8
   186fc:	movcc	r1, r0
   18700:	sub	r1, r1, #1
   18704:	cmp	r1, #7
   18708:	bhi	1eb94 <main@@Base+0x8e44>
   1870c:	ldrb	r1, [r7]
   18710:	cmp	r1, #97	; 0x61
   18714:	bne	1eb94 <main@@Base+0x8e44>
   18718:	cmp	r0, #2
   1871c:	blt	1eb94 <main@@Base+0x8e44>
   18720:	ldrb	r0, [sl, #17]
   18724:	cmp	r0, #34	; 0x22
   18728:	bne	1eb94 <main@@Base+0x8e44>
   1872c:	add	r1, sl, #18
   18730:	sub	r0, r6, r1
   18734:	cmp	r0, #2
   18738:	blt	1b070 <main@@Base+0x5320>
   1873c:	ldrb	r0, [r1]
   18740:	cmp	r0, #32
   18744:	bls	1b060 <main@@Base+0x5310>
   18748:	mov	sl, r1
   1874c:	cmp	sl, r6
   18750:	bne	1b088 <main@@Base+0x5338>
   18754:	b	1b0c8 <main@@Base+0x5378>
   18758:	ldr	r2, [sp, #36]	; 0x24
   1875c:	mov	r0, r9
   18760:	mov	r1, r6
   18764:	mov	r3, #4
   18768:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1876c:	b	1aa08 <main@@Base+0x4cb8>
   18770:	bne	18780 <main@@Base+0x2a30>
   18774:	ldrb	r0, [r1, #2]!
   18778:	cmp	r0, #32
   1877c:	bhi	18794 <main@@Base+0x2a44>
   18780:	mov	r1, r2
   18784:	mov	r0, r9
   18788:	mov	r2, r6
   1878c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18790:	mov	r1, r0
   18794:	cmp	sl, r1
   18798:	beq	1921c <main@@Base+0x34cc>
   1879c:	mov	r0, r9
   187a0:	mov	r2, r6
   187a4:	add	r3, sp, #44	; 0x2c
   187a8:	bl	16600 <main@@Base+0x8b0>
   187ac:	mov	r8, r0
   187b0:	ldr	r0, [sp, #44]	; 0x2c
   187b4:	cmp	r0, #0
   187b8:	beq	1fee4 <main@@Base+0xa194>
   187bc:	ldr	r0, [r9]
   187c0:	mov	r1, #12
   187c4:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   187c8:	cmp	r0, #0
   187cc:	bne	19268 <main@@Base+0x3518>
   187d0:	b	1fee4 <main@@Base+0xa194>
   187d4:	bne	187e4 <main@@Base+0x2a94>
   187d8:	ldrb	r0, [r7, #2]!
   187dc:	cmp	r0, #32
   187e0:	bhi	187f4 <main@@Base+0x2aa4>
   187e4:	mov	r0, r9
   187e8:	mov	r2, r6
   187ec:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   187f0:	mov	r7, r0
   187f4:	cmp	sl, r7
   187f8:	beq	1921c <main@@Base+0x34cc>
   187fc:	mov	r4, #0
   18800:	cmp	r7, r6
   18804:	str	r4, [fp, #-52]	; 0xffffffcc
   18808:	str	r4, [fp, #-56]	; 0xffffffc8
   1880c:	strb	r4, [sp, #60]	; 0x3c
   18810:	str	r4, [sp, #48]	; 0x30
   18814:	beq	18874 <main@@Base+0x2b24>
   18818:	sub	r0, fp, #56	; 0x38
   1881c:	mov	r1, r7
   18820:	mov	r2, r6
   18824:	add	r3, sp, #48	; 0x30
   18828:	str	r0, [sp]
   1882c:	mov	r0, r9
   18830:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   18834:	cmp	r0, r7
   18838:	beq	18884 <main@@Base+0x2b34>
   1883c:	ldr	r2, [sp, #48]	; 0x30
   18840:	mov	r8, r0
   18844:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18848:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1884c:	cmp	r2, #0
   18850:	beq	18894 <main@@Base+0x2b44>
   18854:	subs	r2, r0, #129	; 0x81
   18858:	sbcs	r1, r1, #0
   1885c:	bcc	188c4 <main@@Base+0x2b74>
   18860:	mov	r0, r9
   18864:	mov	r1, r8
   18868:	mov	r2, r6
   1886c:	mov	r3, #8
   18870:	b	188b0 <main@@Base+0x2b60>
   18874:	mov	r8, r6
   18878:	cmp	r7, r8
   1887c:	bne	1891c <main@@Base+0x2bcc>
   18880:	b	188e8 <main@@Base+0x2b98>
   18884:	mov	r8, r7
   18888:	cmp	r7, r8
   1888c:	bne	1891c <main@@Base+0x2bcc>
   18890:	b	188e8 <main@@Base+0x2b98>
   18894:	subs	r2, r0, #128	; 0x80
   18898:	sbcs	r1, r1, #0
   1889c:	bcc	188d8 <main@@Base+0x2b88>
   188a0:	mov	r0, r9
   188a4:	mov	r1, r8
   188a8:	mov	r2, r6
   188ac:	mov	r3, #7
   188b0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   188b4:	mov	r8, r0
   188b8:	cmp	r7, r8
   188bc:	bne	1891c <main@@Base+0x2bcc>
   188c0:	b	188e8 <main@@Base+0x2b98>
   188c4:	rsb	r4, r0, #0
   188c8:	strb	r4, [sp, #60]	; 0x3c
   188cc:	cmp	r7, r8
   188d0:	bne	1891c <main@@Base+0x2bcc>
   188d4:	b	188e8 <main@@Base+0x2b98>
   188d8:	mov	r4, r0
   188dc:	strb	r4, [sp, #60]	; 0x3c
   188e0:	cmp	r7, r8
   188e4:	bne	1891c <main@@Base+0x2bcc>
   188e8:	ldr	r3, [sp, #20]
   188ec:	add	r0, sp, #60	; 0x3c
   188f0:	mov	r1, r7
   188f4:	mov	r2, r6
   188f8:	str	r0, [sp]
   188fc:	mov	r0, r9
   18900:	bl	21d78 <main@@Base+0xc028>
   18904:	mov	r8, r0
   18908:	cmp	r0, r7
   1890c:	beq	1fee4 <main@@Base+0xa194>
   18910:	cmp	r8, r6
   18914:	beq	1fee4 <main@@Base+0xa194>
   18918:	ldrb	r4, [sp, #60]	; 0x3c
   1891c:	uxtb	r0, r4
   18920:	cmp	r0, #8
   18924:	bne	18934 <main@@Base+0x2be4>
   18928:	ldrb	r0, [r9, #8]
   1892c:	tst	r0, #2
   18930:	beq	1eba8 <main@@Base+0x8e58>
   18934:	ldr	r0, [r9]
   18938:	mov	r1, #6
   1893c:	b	1965c <main@@Base+0x390c>
   18940:	mov	r0, r9
   18944:	mov	r1, sl
   18948:	mov	r2, r6
   1894c:	mov	r3, #9
   18950:	b	182a4 <main@@Base+0x2554>
   18954:	bne	18964 <main@@Base+0x2c14>
   18958:	ldrb	r0, [r1, #2]!
   1895c:	cmp	r0, #32
   18960:	bhi	18978 <main@@Base+0x2c28>
   18964:	mov	r1, r2
   18968:	mov	r0, r9
   1896c:	mov	r2, r6
   18970:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18974:	mov	r1, r0
   18978:	cmp	sl, r1
   1897c:	beq	1921c <main@@Base+0x34cc>
   18980:	mov	r0, r9
   18984:	mov	r2, r6
   18988:	add	r3, sp, #44	; 0x2c
   1898c:	bl	37198 <flatcc_json_parser_build_string@@Base>
   18990:	mov	r8, r0
   18994:	ldr	r0, [sp, #44]	; 0x2c
   18998:	cmp	r0, #0
   1899c:	beq	1fee4 <main@@Base+0xa194>
   189a0:	ldr	r0, [r9]
   189a4:	mov	r1, #3
   189a8:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   189ac:	cmp	r0, #0
   189b0:	bne	19268 <main@@Base+0x3518>
   189b4:	b	1fee4 <main@@Base+0xa194>
   189b8:	bne	189c8 <main@@Base+0x2c78>
   189bc:	ldrb	r0, [r8, #2]!
   189c0:	cmp	r0, #32
   189c4:	bhi	189d8 <main@@Base+0x2c88>
   189c8:	mov	r0, r9
   189cc:	mov	r2, r6
   189d0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   189d4:	mov	r8, r0
   189d8:	cmp	sl, r8
   189dc:	beq	1921c <main@@Base+0x34cc>
   189e0:	ldr	r0, [r9]
   189e4:	mov	r1, #1
   189e8:	mov	r2, #1
   189ec:	mvn	r3, #0
   189f0:	bl	2f49c <flatcc_builder_start_vector@@Base>
   189f4:	cmp	r0, #0
   189f8:	bne	1fee4 <main@@Base+0xa194>
   189fc:	cmp	r8, r6
   18a00:	beq	18a40 <main@@Base+0x2cf0>
   18a04:	ldrb	r0, [r8]
   18a08:	cmp	r0, #91	; 0x5b
   18a0c:	bne	18a40 <main@@Base+0x2cf0>
   18a10:	add	r1, r8, #1
   18a14:	sub	r0, r6, r1
   18a18:	cmp	r0, #2
   18a1c:	blt	18a94 <main@@Base+0x2d44>
   18a20:	ldrb	r0, [r1]
   18a24:	cmp	r0, #32
   18a28:	bls	18a84 <main@@Base+0x2d34>
   18a2c:	mov	r8, r1
   18a30:	cmp	r8, r6
   18a34:	mov	r5, r6
   18a38:	bne	18ab0 <main@@Base+0x2d60>
   18a3c:	b	18ac0 <main@@Base+0x2d70>
   18a40:	mov	r0, r9
   18a44:	mov	r1, r8
   18a48:	mov	r2, r6
   18a4c:	mov	r3, #22
   18a50:	bl	3454c <flatcc_json_parser_set_error@@Base>
   18a54:	mov	r8, r0
   18a58:	ldr	r0, [r9]
   18a5c:	bl	30714 <flatcc_builder_end_vector@@Base>
   18a60:	cmp	r0, #0
   18a64:	str	r0, [sp, #44]	; 0x2c
   18a68:	beq	1fee4 <main@@Base+0xa194>
   18a6c:	ldr	r0, [r9]
   18a70:	mov	r1, #30
   18a74:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   18a78:	cmp	r0, #0
   18a7c:	bne	19268 <main@@Base+0x3518>
   18a80:	b	1fee4 <main@@Base+0xa194>
   18a84:	bne	18a94 <main@@Base+0x2d44>
   18a88:	ldrb	r0, [r8, #2]!
   18a8c:	cmp	r0, #32
   18a90:	bhi	18aa4 <main@@Base+0x2d54>
   18a94:	mov	r0, r9
   18a98:	mov	r2, r6
   18a9c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18aa0:	mov	r8, r0
   18aa4:	cmp	r8, r6
   18aa8:	mov	r5, r6
   18aac:	beq	18ac0 <main@@Base+0x2d70>
   18ab0:	ldrb	r0, [r8]
   18ab4:	cmp	r0, #93	; 0x5d
   18ab8:	beq	18ce4 <main@@Base+0x2f94>
   18abc:	mov	r5, r8
   18ac0:	mov	r0, #0
   18ac4:	mov	r1, #1
   18ac8:	strb	r0, [sp, #60]	; 0x3c
   18acc:	ldr	r0, [r9]
   18ad0:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   18ad4:	cmp	r0, #0
   18ad8:	beq	1febc <main@@Base+0xa16c>
   18adc:	mov	r4, r0
   18ae0:	mov	r8, r5
   18ae4:	mov	r5, #0
   18ae8:	cmp	r8, r6
   18aec:	str	r5, [fp, #-52]	; 0xffffffcc
   18af0:	str	r5, [fp, #-56]	; 0xffffffc8
   18af4:	strb	r5, [sp, #60]	; 0x3c
   18af8:	str	r5, [sp, #48]	; 0x30
   18afc:	beq	18b54 <main@@Base+0x2e04>
   18b00:	sub	r0, fp, #56	; 0x38
   18b04:	mov	r1, r8
   18b08:	mov	r2, r6
   18b0c:	add	r3, sp, #48	; 0x30
   18b10:	str	r0, [sp]
   18b14:	mov	r0, r9
   18b18:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   18b1c:	cmp	r0, r8
   18b20:	beq	18b64 <main@@Base+0x2e14>
   18b24:	mov	r1, r0
   18b28:	ldr	r0, [sp, #48]	; 0x30
   18b2c:	cmp	r0, #0
   18b30:	beq	18b74 <main@@Base+0x2e24>
   18b34:	mov	r0, r9
   18b38:	mov	r2, r6
   18b3c:	mov	r3, #8
   18b40:	bl	3454c <flatcc_json_parser_set_error@@Base>
   18b44:	mov	r1, r0
   18b48:	cmp	r8, r1
   18b4c:	bne	18bec <main@@Base+0x2e9c>
   18b50:	b	18bb8 <main@@Base+0x2e68>
   18b54:	mov	r1, r6
   18b58:	cmp	r8, r1
   18b5c:	bne	18bec <main@@Base+0x2e9c>
   18b60:	b	18bb8 <main@@Base+0x2e68>
   18b64:	mov	r1, r8
   18b68:	cmp	r8, r1
   18b6c:	bne	18bec <main@@Base+0x2e9c>
   18b70:	b	18bb8 <main@@Base+0x2e68>
   18b74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18b78:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18b7c:	subs	r3, r0, #256	; 0x100
   18b80:	sbcs	r2, r2, #0
   18b84:	bcc	18ba8 <main@@Base+0x2e58>
   18b88:	mov	r0, r9
   18b8c:	mov	r2, r6
   18b90:	mov	r3, #7
   18b94:	bl	3454c <flatcc_json_parser_set_error@@Base>
   18b98:	mov	r1, r0
   18b9c:	cmp	r8, r1
   18ba0:	bne	18bec <main@@Base+0x2e9c>
   18ba4:	b	18bb8 <main@@Base+0x2e68>
   18ba8:	mov	r5, r0
   18bac:	strb	r0, [sp, #60]	; 0x3c
   18bb0:	cmp	r8, r1
   18bb4:	bne	18bec <main@@Base+0x2e9c>
   18bb8:	movw	r3, #53396	; 0xd094
   18bbc:	add	r0, sp, #60	; 0x3c
   18bc0:	mov	r1, r8
   18bc4:	mov	r2, r6
   18bc8:	movt	r3, #5
   18bcc:	str	r0, [sp]
   18bd0:	mov	r0, r9
   18bd4:	bl	21f90 <main@@Base+0xc240>
   18bd8:	mov	r1, r0
   18bdc:	cmp	r0, r8
   18be0:	cmpne	r1, r6
   18be4:	beq	1feb0 <main@@Base+0xa160>
   18be8:	ldrb	r5, [sp, #60]	; 0x3c
   18bec:	sub	r0, r6, r1
   18bf0:	strb	r5, [r4]
   18bf4:	cmp	r0, #2
   18bf8:	blt	18c2c <main@@Base+0x2edc>
   18bfc:	ldrb	r0, [r1]
   18c00:	cmp	r0, #32
   18c04:	bls	18c18 <main@@Base+0x2ec8>
   18c08:	mov	r8, r1
   18c0c:	cmp	r8, r6
   18c10:	bne	18c44 <main@@Base+0x2ef4>
   18c14:	b	18cd4 <main@@Base+0x2f84>
   18c18:	bne	18c2c <main@@Base+0x2edc>
   18c1c:	mov	r8, r1
   18c20:	ldrb	r0, [r8, #1]!
   18c24:	cmp	r0, #32
   18c28:	bhi	18c3c <main@@Base+0x2eec>
   18c2c:	mov	r0, r9
   18c30:	mov	r2, r6
   18c34:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18c38:	mov	r8, r0
   18c3c:	cmp	r8, r6
   18c40:	beq	18cd4 <main@@Base+0x2f84>
   18c44:	ldrb	r0, [r8]
   18c48:	cmp	r0, #44	; 0x2c
   18c4c:	bne	18cdc <main@@Base+0x2f8c>
   18c50:	add	r1, r8, #1
   18c54:	sub	r0, r6, r1
   18c58:	cmp	r0, #2
   18c5c:	blt	18c8c <main@@Base+0x2f3c>
   18c60:	ldrb	r0, [r1]
   18c64:	cmp	r0, #32
   18c68:	bls	18c7c <main@@Base+0x2f2c>
   18c6c:	mov	r8, r1
   18c70:	cmp	r8, r6
   18c74:	bne	18ca4 <main@@Base+0x2f54>
   18c78:	b	18d28 <main@@Base+0x2fd8>
   18c7c:	bne	18c8c <main@@Base+0x2f3c>
   18c80:	ldrb	r0, [r8, #2]!
   18c84:	cmp	r0, #32
   18c88:	bhi	18c9c <main@@Base+0x2f4c>
   18c8c:	mov	r0, r9
   18c90:	mov	r2, r6
   18c94:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18c98:	mov	r8, r0
   18c9c:	cmp	r8, r6
   18ca0:	beq	18d28 <main@@Base+0x2fd8>
   18ca4:	ldrb	r0, [r8]
   18ca8:	cmp	r0, #93	; 0x5d
   18cac:	beq	18ce4 <main@@Base+0x2f94>
   18cb0:	mov	r0, #0
   18cb4:	mov	r1, #1
   18cb8:	strb	r0, [sp, #60]	; 0x3c
   18cbc:	ldr	r0, [r9]
   18cc0:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   18cc4:	mov	r4, r0
   18cc8:	cmp	r0, #0
   18ccc:	bne	18ae4 <main@@Base+0x2d94>
   18cd0:	b	1fee4 <main@@Base+0xa194>
   18cd4:	mov	r8, r6
   18cd8:	b	18a58 <main@@Base+0x2d08>
   18cdc:	cmp	r0, #93	; 0x5d
   18ce0:	bne	1971c <main@@Base+0x39cc>
   18ce4:	add	r1, r8, #1
   18ce8:	sub	r0, r6, r1
   18cec:	cmp	r0, #2
   18cf0:	blt	18d18 <main@@Base+0x2fc8>
   18cf4:	ldrb	r0, [r1]
   18cf8:	cmp	r0, #32
   18cfc:	bls	18d08 <main@@Base+0x2fb8>
   18d00:	mov	r8, r1
   18d04:	b	18a58 <main@@Base+0x2d08>
   18d08:	bne	18d18 <main@@Base+0x2fc8>
   18d0c:	ldrb	r0, [r8, #2]!
   18d10:	cmp	r0, #32
   18d14:	bhi	18a58 <main@@Base+0x2d08>
   18d18:	mov	r0, r9
   18d1c:	mov	r2, r6
   18d20:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18d24:	b	18a54 <main@@Base+0x2d04>
   18d28:	mov	r0, r9
   18d2c:	mov	r1, r6
   18d30:	b	19724 <main@@Base+0x39d4>
   18d34:	bne	18d44 <main@@Base+0x2ff4>
   18d38:	ldrb	r0, [r1, #2]!
   18d3c:	cmp	r0, #32
   18d40:	bhi	18d58 <main@@Base+0x3008>
   18d44:	ldr	r0, [sp, #32]
   18d48:	mov	r1, r2
   18d4c:	mov	r2, r6
   18d50:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18d54:	mov	r1, r0
   18d58:	cmp	sl, r1
   18d5c:	beq	17fd4 <main@@Base+0x2284>
   18d60:	ldr	r0, [sp, #40]	; 0x28
   18d64:	ldr	r9, [sp, #32]
   18d68:	mov	r2, #8
   18d6c:	mov	r3, #0
   18d70:	str	r2, [sp]
   18d74:	mov	r2, r6
   18d78:	str	r0, [sp, #4]
   18d7c:	movw	r0, #11104	; 0x2b60
   18d80:	movt	r0, #2
   18d84:	str	r0, [sp, #8]
   18d88:	mov	r0, r9
   18d8c:	bl	375bc <flatcc_json_parser_union@@Base>
   18d90:	b	1eba4 <main@@Base+0x8e54>
   18d94:	bne	18da8 <main@@Base+0x3058>
   18d98:	ldrb	r0, [sl, #2]!
   18d9c:	mov	r8, sl
   18da0:	cmp	r0, #32
   18da4:	bhi	182ac <main@@Base+0x255c>
   18da8:	mov	r0, r9
   18dac:	mov	r2, r6
   18db0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18db4:	b	182a8 <main@@Base+0x2558>
   18db8:	bne	18dc8 <main@@Base+0x3078>
   18dbc:	ldrb	r0, [sl, #12]!
   18dc0:	cmp	r0, #32
   18dc4:	bhi	18dd8 <main@@Base+0x3088>
   18dc8:	mov	r0, r9
   18dcc:	mov	r2, r6
   18dd0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18dd4:	mov	sl, r0
   18dd8:	cmp	sl, r6
   18ddc:	beq	18e18 <main@@Base+0x30c8>
   18de0:	ldrb	r0, [sl]
   18de4:	cmp	r0, #58	; 0x3a
   18de8:	bne	18e18 <main@@Base+0x30c8>
   18dec:	add	r1, sl, #1
   18df0:	sub	r0, r6, r1
   18df4:	cmp	r0, #2
   18df8:	blt	1b0f0 <main@@Base+0x53a0>
   18dfc:	ldrb	r0, [r1]
   18e00:	cmp	r0, #32
   18e04:	bls	1b0e0 <main@@Base+0x5390>
   18e08:	mov	sl, r1
   18e0c:	cmp	r7, sl
   18e10:	bne	1b108 <main@@Base+0x53b8>
   18e14:	b	1eb94 <main@@Base+0x8e44>
   18e18:	mov	r0, r9
   18e1c:	mov	r1, sl
   18e20:	mov	r2, r6
   18e24:	mov	r3, #4
   18e28:	bl	3454c <flatcc_json_parser_set_error@@Base>
   18e2c:	b	1b0fc <main@@Base+0x53ac>
   18e30:	bne	18e40 <main@@Base+0x30f0>
   18e34:	ldrb	r0, [sl, #20]!
   18e38:	cmp	r0, #32
   18e3c:	bhi	18e50 <main@@Base+0x3100>
   18e40:	mov	r0, r9
   18e44:	mov	r2, r6
   18e48:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18e4c:	mov	sl, r0
   18e50:	cmp	sl, r6
   18e54:	beq	18e90 <main@@Base+0x3140>
   18e58:	ldrb	r0, [sl]
   18e5c:	cmp	r0, #58	; 0x3a
   18e60:	bne	18e90 <main@@Base+0x3140>
   18e64:	add	r1, sl, #1
   18e68:	sub	r0, r6, r1
   18e6c:	cmp	r0, #2
   18e70:	blt	1b1f4 <main@@Base+0x54a4>
   18e74:	ldrb	r0, [r1]
   18e78:	cmp	r0, #32
   18e7c:	bls	1b1e4 <main@@Base+0x5494>
   18e80:	mov	sl, r1
   18e84:	cmp	r7, sl
   18e88:	bne	1b20c <main@@Base+0x54bc>
   18e8c:	b	1eb94 <main@@Base+0x8e44>
   18e90:	mov	r0, r9
   18e94:	mov	r1, sl
   18e98:	mov	r2, r6
   18e9c:	mov	r3, #4
   18ea0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   18ea4:	b	1b200 <main@@Base+0x54b0>
   18ea8:	bne	18eb8 <main@@Base+0x3168>
   18eac:	ldrb	r0, [sl, #25]!
   18eb0:	cmp	r0, #32
   18eb4:	bhi	18ec8 <main@@Base+0x3178>
   18eb8:	mov	r0, r9
   18ebc:	mov	r2, r6
   18ec0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18ec4:	mov	sl, r0
   18ec8:	cmp	sl, r6
   18ecc:	beq	18f08 <main@@Base+0x31b8>
   18ed0:	ldrb	r0, [sl]
   18ed4:	cmp	r0, #58	; 0x3a
   18ed8:	bne	18f08 <main@@Base+0x31b8>
   18edc:	add	r1, sl, #1
   18ee0:	sub	r0, r6, r1
   18ee4:	cmp	r0, #2
   18ee8:	blt	1b2b4 <main@@Base+0x5564>
   18eec:	ldrb	r0, [r1]
   18ef0:	cmp	r0, #32
   18ef4:	bls	1b2a4 <main@@Base+0x5554>
   18ef8:	mov	sl, r1
   18efc:	cmp	r8, sl
   18f00:	bne	1b2cc <main@@Base+0x557c>
   18f04:	b	1b8a0 <main@@Base+0x5b50>
   18f08:	mov	r0, r9
   18f0c:	mov	r1, sl
   18f10:	mov	r2, r6
   18f14:	mov	r3, #4
   18f18:	bl	3454c <flatcc_json_parser_set_error@@Base>
   18f1c:	b	1b2c0 <main@@Base+0x5570>
   18f20:	bne	18f34 <main@@Base+0x31e4>
   18f24:	mov	r7, sl
   18f28:	ldrb	r0, [r7, #6]!
   18f2c:	cmp	r0, #32
   18f30:	bhi	18f44 <main@@Base+0x31f4>
   18f34:	mov	r0, r9
   18f38:	mov	r2, r6
   18f3c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18f40:	mov	r7, r0
   18f44:	cmp	r7, r6
   18f48:	beq	18f84 <main@@Base+0x3234>
   18f4c:	ldrb	r0, [r7]
   18f50:	cmp	r0, #58	; 0x3a
   18f54:	bne	18f84 <main@@Base+0x3234>
   18f58:	add	r1, r7, #1
   18f5c:	sub	r0, r6, r1
   18f60:	cmp	r0, #2
   18f64:	blt	1b3f0 <main@@Base+0x56a0>
   18f68:	ldrb	r0, [r1]
   18f6c:	cmp	r0, #32
   18f70:	bls	1b3e0 <main@@Base+0x5690>
   18f74:	mov	r7, r1
   18f78:	cmp	sl, r7
   18f7c:	bne	1b408 <main@@Base+0x56b8>
   18f80:	b	1921c <main@@Base+0x34cc>
   18f84:	mov	r0, r9
   18f88:	mov	r1, r7
   18f8c:	mov	r2, r6
   18f90:	mov	r3, #4
   18f94:	bl	3454c <flatcc_json_parser_set_error@@Base>
   18f98:	b	1b3fc <main@@Base+0x56ac>
   18f9c:	bne	18fb0 <main@@Base+0x3260>
   18fa0:	mov	r7, sl
   18fa4:	ldrb	r0, [r7, #7]!
   18fa8:	cmp	r0, #32
   18fac:	bhi	18fc0 <main@@Base+0x3270>
   18fb0:	mov	r0, r9
   18fb4:	mov	r2, r6
   18fb8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   18fbc:	mov	r7, r0
   18fc0:	cmp	r7, r6
   18fc4:	beq	19000 <main@@Base+0x32b0>
   18fc8:	ldrb	r0, [r7]
   18fcc:	cmp	r0, #58	; 0x3a
   18fd0:	bne	19000 <main@@Base+0x32b0>
   18fd4:	add	r1, r7, #1
   18fd8:	sub	r0, r6, r1
   18fdc:	cmp	r0, #2
   18fe0:	blt	1b588 <main@@Base+0x5838>
   18fe4:	ldrb	r0, [r1]
   18fe8:	cmp	r0, #32
   18fec:	bls	1b578 <main@@Base+0x5828>
   18ff0:	mov	r7, r1
   18ff4:	cmp	sl, r7
   18ff8:	bne	1b5a0 <main@@Base+0x5850>
   18ffc:	b	1921c <main@@Base+0x34cc>
   19000:	mov	r0, r9
   19004:	mov	r1, r7
   19008:	mov	r2, r6
   1900c:	mov	r3, #4
   19010:	bl	3454c <flatcc_json_parser_set_error@@Base>
   19014:	b	1b594 <main@@Base+0x5844>
   19018:	ldr	r4, [sp, #36]	; 0x24
   1901c:	bne	19030 <main@@Base+0x32e0>
   19020:	mov	r6, sl
   19024:	ldrb	r0, [r6, #18]!
   19028:	cmp	r0, #32
   1902c:	bhi	19040 <main@@Base+0x32f0>
   19030:	mov	r0, r9
   19034:	mov	r2, r4
   19038:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1903c:	mov	r6, r0
   19040:	cmp	r6, r4
   19044:	beq	190f0 <main@@Base+0x33a0>
   19048:	ldrb	r0, [r6]
   1904c:	cmp	r0, #58	; 0x3a
   19050:	bne	190f0 <main@@Base+0x33a0>
   19054:	ldr	r0, [sp, #36]	; 0x24
   19058:	add	r1, r6, #1
   1905c:	sub	r0, r0, r1
   19060:	cmp	r0, #2
   19064:	blt	1b634 <main@@Base+0x58e4>
   19068:	ldrb	r0, [r1]
   1906c:	cmp	r0, #32
   19070:	bls	1b624 <main@@Base+0x58d4>
   19074:	mov	r6, r1
   19078:	cmp	r8, r6
   1907c:	bne	1b64c <main@@Base+0x58fc>
   19080:	ldr	r6, [sp, #36]	; 0x24
   19084:	add	r7, sl, #16
   19088:	mov	r1, #8
   1908c:	sub	r0, r6, r7
   19090:	cmp	r0, #8
   19094:	movcc	r1, r0
   19098:	sub	r1, r1, #1
   1909c:	cmp	r1, #7
   190a0:	bhi	1eb94 <main@@Base+0x8e44>
   190a4:	ldrb	r1, [r7]
   190a8:	cmp	r1, #97	; 0x61
   190ac:	bne	1eb94 <main@@Base+0x8e44>
   190b0:	cmp	r0, #2
   190b4:	blt	1eb94 <main@@Base+0x8e44>
   190b8:	ldrb	r0, [sl, #17]
   190bc:	cmp	r0, #34	; 0x22
   190c0:	bne	1eb94 <main@@Base+0x8e44>
   190c4:	add	r1, sl, #18
   190c8:	sub	r0, r6, r1
   190cc:	cmp	r0, #2
   190d0:	blt	1c4e0 <main@@Base+0x6790>
   190d4:	ldrb	r0, [r1]
   190d8:	cmp	r0, #32
   190dc:	bls	1c4d0 <main@@Base+0x6780>
   190e0:	mov	sl, r1
   190e4:	cmp	sl, r6
   190e8:	bne	1c4f8 <main@@Base+0x67a8>
   190ec:	b	1c538 <main@@Base+0x67e8>
   190f0:	ldr	r2, [sp, #36]	; 0x24
   190f4:	mov	r0, r9
   190f8:	mov	r1, r6
   190fc:	mov	r3, #4
   19100:	bl	3454c <flatcc_json_parser_set_error@@Base>
   19104:	b	1b640 <main@@Base+0x58f0>
   19108:	bne	19118 <main@@Base+0x33c8>
   1910c:	ldrb	r0, [r8, #2]!
   19110:	cmp	r0, #32
   19114:	bhi	19128 <main@@Base+0x33d8>
   19118:	ldr	r0, [sp, #32]
   1911c:	mov	r2, r6
   19120:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   19124:	mov	r8, r0
   19128:	cmp	sl, r8
   1912c:	beq	19194 <main@@Base+0x3444>
   19130:	ldr	r9, [sp, #32]
   19134:	mov	r1, #4
   19138:	mov	r2, #2
   1913c:	mvn	r3, #-1073741824	; 0xc0000000
   19140:	ldr	r0, [r9]
   19144:	bl	2f49c <flatcc_builder_start_vector@@Base>
   19148:	cmp	r0, #0
   1914c:	bne	1fee4 <main@@Base+0xa194>
   19150:	cmp	r8, r6
   19154:	beq	19228 <main@@Base+0x34d8>
   19158:	ldrb	r0, [r8]
   1915c:	cmp	r0, #91	; 0x5b
   19160:	bne	19228 <main@@Base+0x34d8>
   19164:	add	r1, r8, #1
   19168:	sub	r0, r6, r1
   1916c:	cmp	r0, #2
   19170:	blt	19290 <main@@Base+0x3540>
   19174:	ldrb	r0, [r1]
   19178:	cmp	r0, #32
   1917c:	bls	19280 <main@@Base+0x3530>
   19180:	mov	r8, r1
   19184:	cmp	r8, r6
   19188:	mov	sl, r6
   1918c:	bne	192ac <main@@Base+0x355c>
   19190:	b	192ec <main@@Base+0x359c>
   19194:	movw	r0, #31088	; 0x7970
   19198:	movt	r0, #24436	; 0x5f74
   1919c:	eor	r0, r9, r0
   191a0:	orrs	r0, r0, r7
   191a4:	bne	19218 <main@@Base+0x34c8>
   191a8:	add	r7, sl, #8
   191ac:	ldr	r9, [sp, #32]
   191b0:	mov	r1, #8
   191b4:	sub	r0, r6, r7
   191b8:	cmp	r0, #8
   191bc:	movcc	r1, r0
   191c0:	sub	r1, r1, #1
   191c4:	cmp	r1, #7
   191c8:	bhi	1eb94 <main@@Base+0x8e44>
   191cc:	ldrb	r1, [r7]
   191d0:	cmp	r1, #101	; 0x65
   191d4:	bne	1eb94 <main@@Base+0x8e44>
   191d8:	cmp	r0, #2
   191dc:	blt	1eb94 <main@@Base+0x8e44>
   191e0:	ldrb	r0, [sl, #9]
   191e4:	cmp	r0, #34	; 0x22
   191e8:	bne	1eb94 <main@@Base+0x8e44>
   191ec:	add	r1, sl, #10
   191f0:	sub	r0, r6, r1
   191f4:	cmp	r0, #2
   191f8:	blt	19454 <main@@Base+0x3704>
   191fc:	ldrb	r0, [r1]
   19200:	cmp	r0, #32
   19204:	bls	19444 <main@@Base+0x36f4>
   19208:	mov	sl, r1
   1920c:	cmp	sl, r6
   19210:	bne	1946c <main@@Base+0x371c>
   19214:	b	194a4 <main@@Base+0x3754>
   19218:	ldr	r9, [sp, #32]
   1921c:	mov	r0, r9
   19220:	mov	r1, sl
   19224:	b	1eb9c <main@@Base+0x8e4c>
   19228:	mov	r0, r9
   1922c:	mov	r1, r8
   19230:	mov	r2, r6
   19234:	mov	r3, #22
   19238:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1923c:	mov	r8, r0
   19240:	ldr	r0, [r9]
   19244:	bl	30714 <flatcc_builder_end_vector@@Base>
   19248:	cmp	r0, #0
   1924c:	str	r0, [sp, #44]	; 0x2c
   19250:	beq	1fee4 <main@@Base+0xa194>
   19254:	ldr	r0, [r9]
   19258:	mov	r1, #31
   1925c:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   19260:	cmp	r0, #0
   19264:	beq	1fee4 <main@@Base+0xa194>
   19268:	ldr	r1, [sp, #44]	; 0x2c
   1926c:	str	r1, [r0]
   19270:	sub	r0, r6, r8
   19274:	cmp	r0, #2
   19278:	bge	1ebb4 <main@@Base+0x8e64>
   1927c:	b	1ec28 <main@@Base+0x8ed8>
   19280:	bne	19290 <main@@Base+0x3540>
   19284:	ldrb	r0, [r8, #2]!
   19288:	cmp	r0, #32
   1928c:	bhi	192a0 <main@@Base+0x3550>
   19290:	mov	r0, r9
   19294:	mov	r2, r6
   19298:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1929c:	mov	r8, r0
   192a0:	cmp	r8, r6
   192a4:	mov	sl, r6
   192a8:	beq	192ec <main@@Base+0x359c>
   192ac:	ldrb	r0, [r8]
   192b0:	cmp	r0, #93	; 0x5d
   192b4:	bne	192e8 <main@@Base+0x3598>
   192b8:	add	r1, r8, #1
   192bc:	sub	r0, r6, r1
   192c0:	cmp	r0, #2
   192c4:	blt	1cb0c <main@@Base+0x6dbc>
   192c8:	ldrb	r0, [r1]
   192cc:	cmp	r0, #32
   192d0:	bhi	193f4 <main@@Base+0x36a4>
   192d4:	bne	1cb0c <main@@Base+0x6dbc>
   192d8:	ldrb	r0, [r8, #2]!
   192dc:	cmp	r0, #32
   192e0:	bhi	19240 <main@@Base+0x34f0>
   192e4:	b	1cb0c <main@@Base+0x6dbc>
   192e8:	mov	sl, r8
   192ec:	ldr	r0, [r9]
   192f0:	mov	r1, #1
   192f4:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   192f8:	mov	r3, r0
   192fc:	cmp	r0, #0
   19300:	beq	16640 <main@@Base+0x8f0>
   19304:	mov	r0, r9
   19308:	mov	r1, sl
   1930c:	mov	r2, r6
   19310:	bl	223b0 <main@@Base+0xc660>
   19314:	mov	r1, r0
   19318:	sub	r0, r6, r0
   1931c:	cmp	r0, #2
   19320:	blt	19354 <main@@Base+0x3604>
   19324:	ldrb	r0, [r1]
   19328:	cmp	r0, #32
   1932c:	bls	19340 <main@@Base+0x35f0>
   19330:	mov	sl, r1
   19334:	cmp	sl, r6
   19338:	bne	1936c <main@@Base+0x361c>
   1933c:	b	193fc <main@@Base+0x36ac>
   19340:	bne	19354 <main@@Base+0x3604>
   19344:	mov	sl, r1
   19348:	ldrb	r0, [sl, #1]!
   1934c:	cmp	r0, #32
   19350:	bhi	19364 <main@@Base+0x3614>
   19354:	mov	r0, r9
   19358:	mov	r2, r6
   1935c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   19360:	mov	sl, r0
   19364:	cmp	sl, r6
   19368:	beq	193fc <main@@Base+0x36ac>
   1936c:	ldrb	r0, [sl]
   19370:	cmp	r0, #44	; 0x2c
   19374:	bne	19404 <main@@Base+0x36b4>
   19378:	add	r1, sl, #1
   1937c:	sub	r0, r6, r1
   19380:	cmp	r0, #2
   19384:	blt	193b4 <main@@Base+0x3664>
   19388:	ldrb	r0, [r1]
   1938c:	cmp	r0, #32
   19390:	bls	193a4 <main@@Base+0x3654>
   19394:	mov	sl, r1
   19398:	cmp	sl, r6
   1939c:	bne	193cc <main@@Base+0x367c>
   193a0:	b	19438 <main@@Base+0x36e8>
   193a4:	bne	193b4 <main@@Base+0x3664>
   193a8:	ldrb	r0, [sl, #2]!
   193ac:	cmp	r0, #32
   193b0:	bhi	193c4 <main@@Base+0x3674>
   193b4:	mov	r0, r9
   193b8:	mov	r2, r6
   193bc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   193c0:	mov	sl, r0
   193c4:	cmp	sl, r6
   193c8:	beq	19438 <main@@Base+0x36e8>
   193cc:	ldrb	r0, [sl]
   193d0:	cmp	r0, #93	; 0x5d
   193d4:	bne	192ec <main@@Base+0x359c>
   193d8:	add	r1, sl, #1
   193dc:	sub	r0, r6, r1
   193e0:	cmp	r0, #2
   193e4:	blt	1cb0c <main@@Base+0x6dbc>
   193e8:	ldrb	r0, [r1]
   193ec:	cmp	r0, #32
   193f0:	bls	1b7a4 <main@@Base+0x5a54>
   193f4:	mov	r8, r1
   193f8:	b	19240 <main@@Base+0x34f0>
   193fc:	mov	r8, r6
   19400:	b	19240 <main@@Base+0x34f0>
   19404:	cmp	r0, #93	; 0x5d
   19408:	bne	1a9d8 <main@@Base+0x4c88>
   1940c:	add	r1, sl, #1
   19410:	sub	r0, r6, r1
   19414:	cmp	r0, #2
   19418:	blt	1cb0c <main@@Base+0x6dbc>
   1941c:	ldrb	r0, [r1]
   19420:	cmp	r0, #32
   19424:	bls	1caf0 <main@@Base+0x6da0>
   19428:	ldr	r6, [sp, #36]	; 0x24
   1942c:	ldr	r9, [sp, #32]
   19430:	mov	r8, r1
   19434:	b	19240 <main@@Base+0x34f0>
   19438:	mov	r0, r9
   1943c:	mov	r1, r6
   19440:	b	1a9e0 <main@@Base+0x4c90>
   19444:	bne	19454 <main@@Base+0x3704>
   19448:	ldrb	r0, [sl, #11]!
   1944c:	cmp	r0, #32
   19450:	bhi	19464 <main@@Base+0x3714>
   19454:	mov	r0, r9
   19458:	mov	r2, r6
   1945c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   19460:	mov	sl, r0
   19464:	cmp	sl, r6
   19468:	beq	194a4 <main@@Base+0x3754>
   1946c:	ldrb	r0, [sl]
   19470:	cmp	r0, #58	; 0x3a
   19474:	bne	194a4 <main@@Base+0x3754>
   19478:	add	r1, sl, #1
   1947c:	sub	r0, r6, r1
   19480:	cmp	r0, #2
   19484:	blt	1b7bc <main@@Base+0x5a6c>
   19488:	ldrb	r0, [r1]
   1948c:	cmp	r0, #32
   19490:	bls	1b7ac <main@@Base+0x5a5c>
   19494:	mov	sl, r1
   19498:	cmp	r7, sl
   1949c:	bne	1b7d4 <main@@Base+0x5a84>
   194a0:	b	1eb94 <main@@Base+0x8e44>
   194a4:	mov	r0, r9
   194a8:	mov	r1, sl
   194ac:	mov	r2, r6
   194b0:	mov	r3, #4
   194b4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   194b8:	b	1b7c8 <main@@Base+0x5a78>
   194bc:	bne	194cc <main@@Base+0x377c>
   194c0:	ldrb	r0, [r7, #2]!
   194c4:	cmp	r0, #32
   194c8:	bhi	194dc <main@@Base+0x378c>
   194cc:	mov	r0, r9
   194d0:	mov	r2, r6
   194d4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   194d8:	mov	r7, r0
   194dc:	cmp	sl, r7
   194e0:	beq	1921c <main@@Base+0x34cc>
   194e4:	sub	r4, r6, r7
   194e8:	mov	r0, #0
   194ec:	cmp	r4, #4
   194f0:	strb	r0, [sp, #60]	; 0x3c
   194f4:	blt	19538 <main@@Base+0x37e8>
   194f8:	movw	r1, #36412	; 0x8e3c
   194fc:	mov	r0, r7
   19500:	mov	r2, #4
   19504:	movt	r1, #4
   19508:	bl	14ebc <bcmp@plt>
   1950c:	cmp	r0, #0
   19510:	beq	195a0 <main@@Base+0x3850>
   19514:	cmp	r4, #5
   19518:	blt	19538 <main@@Base+0x37e8>
   1951c:	movw	r1, #36417	; 0x8e41
   19520:	mov	r0, r7
   19524:	mov	r2, #5
   19528:	movt	r1, #4
   1952c:	bl	14ebc <bcmp@plt>
   19530:	cmp	r0, #0
   19534:	beq	19684 <main@@Base+0x3934>
   19538:	mov	r4, #0
   1953c:	cmp	r7, r6
   19540:	str	r4, [fp, #-52]	; 0xffffffcc
   19544:	str	r4, [fp, #-56]	; 0xffffffc8
   19548:	str	r4, [sp, #48]	; 0x30
   1954c:	beq	19598 <main@@Base+0x3848>
   19550:	sub	r0, fp, #56	; 0x38
   19554:	mov	r1, r7
   19558:	mov	r2, r6
   1955c:	add	r3, sp, #48	; 0x30
   19560:	str	r0, [sp]
   19564:	mov	r0, r9
   19568:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1956c:	cmp	r0, r7
   19570:	beq	195b8 <main@@Base+0x3868>
   19574:	mov	r8, r0
   19578:	ldr	r0, [sp, #48]	; 0x30
   1957c:	cmp	r0, #0
   19580:	beq	195c0 <main@@Base+0x3870>
   19584:	mov	r0, r9
   19588:	mov	r1, r8
   1958c:	mov	r2, r6
   19590:	mov	r3, #8
   19594:	b	195e4 <main@@Base+0x3894>
   19598:	mov	r8, r6
   1959c:	b	195ec <main@@Base+0x389c>
   195a0:	mov	r4, #1
   195a4:	add	r8, r7, #4
   195a8:	strb	r4, [sp, #60]	; 0x3c
   195ac:	cmp	r7, r8
   195b0:	bne	19640 <main@@Base+0x38f0>
   195b4:	b	19604 <main@@Base+0x38b4>
   195b8:	mov	r8, r7
   195bc:	b	195ec <main@@Base+0x389c>
   195c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   195c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   195c8:	subs	r2, r0, #256	; 0x100
   195cc:	sbcs	r1, r1, #0
   195d0:	bcc	1969c <main@@Base+0x394c>
   195d4:	mov	r0, r9
   195d8:	mov	r1, r8
   195dc:	mov	r2, r6
   195e0:	mov	r3, #7
   195e4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   195e8:	mov	r8, r0
   195ec:	uxtb	r4, r4
   195f0:	cmp	r4, #0
   195f4:	movwne	r4, #1
   195f8:	strb	r4, [sp, #60]	; 0x3c
   195fc:	cmp	r7, r8
   19600:	bne	19640 <main@@Base+0x38f0>
   19604:	add	r0, sp, #60	; 0x3c
   19608:	mov	r1, r7
   1960c:	mov	r2, r6
   19610:	str	r0, [sp]
   19614:	movw	r0, #53396	; 0xd094
   19618:	movt	r0, #5
   1961c:	add	r3, r0, #60	; 0x3c
   19620:	mov	r0, r9
   19624:	bl	23ff8 <main@@Base+0xe2a8>
   19628:	mov	r8, r0
   1962c:	cmp	r0, r7
   19630:	beq	1fee4 <main@@Base+0xa194>
   19634:	cmp	r8, r6
   19638:	beq	1fee4 <main@@Base+0xa194>
   1963c:	ldrb	r4, [sp, #60]	; 0x3c
   19640:	cmp	r4, #1
   19644:	bne	19654 <main@@Base+0x3904>
   19648:	ldrb	r0, [r9, #8]
   1964c:	tst	r0, #2
   19650:	beq	1eba8 <main@@Base+0x8e58>
   19654:	ldr	r0, [r9]
   19658:	mov	r1, #15
   1965c:	mov	r2, #1
   19660:	mov	r3, #1
   19664:	bl	30dac <flatcc_builder_table_add@@Base>
   19668:	cmp	r0, #0
   1966c:	beq	1fee4 <main@@Base+0xa194>
   19670:	strb	r4, [r0]
   19674:	sub	r0, r6, r8
   19678:	cmp	r0, #2
   1967c:	bge	1ebb4 <main@@Base+0x8e64>
   19680:	b	1ec28 <main@@Base+0x8ed8>
   19684:	mov	r4, #0
   19688:	add	r8, r7, #5
   1968c:	strb	r4, [sp, #60]	; 0x3c
   19690:	cmp	r7, r8
   19694:	bne	19640 <main@@Base+0x38f0>
   19698:	b	19604 <main@@Base+0x38b4>
   1969c:	mov	r4, r0
   196a0:	b	195ec <main@@Base+0x389c>
   196a4:	bne	196b4 <main@@Base+0x3964>
   196a8:	ldrb	r0, [sl, #23]!
   196ac:	cmp	r0, #32
   196b0:	bhi	196c4 <main@@Base+0x3974>
   196b4:	mov	r0, r9
   196b8:	mov	r2, r6
   196bc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   196c0:	mov	sl, r0
   196c4:	cmp	sl, r6
   196c8:	beq	19704 <main@@Base+0x39b4>
   196cc:	ldrb	r0, [sl]
   196d0:	cmp	r0, #58	; 0x3a
   196d4:	bne	19704 <main@@Base+0x39b4>
   196d8:	add	r1, sl, #1
   196dc:	sub	r0, r6, r1
   196e0:	cmp	r0, #2
   196e4:	blt	1b824 <main@@Base+0x5ad4>
   196e8:	ldrb	r0, [r1]
   196ec:	cmp	r0, #32
   196f0:	bls	1b814 <main@@Base+0x5ac4>
   196f4:	mov	sl, r1
   196f8:	cmp	r8, sl
   196fc:	bne	1b83c <main@@Base+0x5aec>
   19700:	b	1b8a0 <main@@Base+0x5b50>
   19704:	mov	r0, r9
   19708:	mov	r1, sl
   1970c:	mov	r2, r6
   19710:	mov	r3, #4
   19714:	bl	3454c <flatcc_json_parser_set_error@@Base>
   19718:	b	1b830 <main@@Base+0x5ae0>
   1971c:	mov	r0, r9
   19720:	mov	r1, r8
   19724:	mov	r2, r6
   19728:	mov	r3, #9
   1972c:	b	18a50 <main@@Base+0x2d00>
   19730:	bne	19740 <main@@Base+0x39f0>
   19734:	ldrb	r0, [sl, #2]!
   19738:	cmp	r0, #32
   1973c:	bhi	19750 <main@@Base+0x3a00>
   19740:	mov	r0, r5
   19744:	mov	r2, r4
   19748:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1974c:	mov	sl, r0
   19750:	cmp	r8, sl
   19754:	beq	184e0 <main@@Base+0x2790>
   19758:	ldr	r9, [sp, #32]
   1975c:	mov	r1, #1
   19760:	mov	r2, #1
   19764:	mvn	r3, #0
   19768:	ldr	r0, [r9]
   1976c:	bl	2f49c <flatcc_builder_start_vector@@Base>
   19770:	cmp	r0, #0
   19774:	bne	1fec8 <main@@Base+0xa178>
   19778:	ldr	r6, [sp, #36]	; 0x24
   1977c:	cmp	sl, r6
   19780:	beq	197c0 <main@@Base+0x3a70>
   19784:	ldrb	r0, [sl]
   19788:	cmp	r0, #91	; 0x5b
   1978c:	bne	197c0 <main@@Base+0x3a70>
   19790:	add	r1, sl, #1
   19794:	sub	r0, r6, r1
   19798:	cmp	r0, #2
   1979c:	blt	1ac80 <main@@Base+0x4f30>
   197a0:	ldrb	r0, [r1]
   197a4:	cmp	r0, #32
   197a8:	bls	1ac70 <main@@Base+0x4f20>
   197ac:	mov	sl, r1
   197b0:	cmp	sl, r6
   197b4:	mov	r5, r6
   197b8:	bne	1ac9c <main@@Base+0x4f4c>
   197bc:	b	1acac <main@@Base+0x4f5c>
   197c0:	mov	r0, r9
   197c4:	mov	r1, sl
   197c8:	mov	r2, r6
   197cc:	mov	r3, #22
   197d0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   197d4:	mov	sl, r0
   197d8:	ldr	r0, [r9]
   197dc:	bl	30714 <flatcc_builder_end_vector@@Base>
   197e0:	cmp	r0, #0
   197e4:	str	r0, [sp, #44]	; 0x2c
   197e8:	beq	16640 <main@@Base+0x8f0>
   197ec:	ldr	r0, [r9]
   197f0:	mov	r1, #24
   197f4:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   197f8:	cmp	r0, #0
   197fc:	bne	1fde4 <main@@Base+0xa094>
   19800:	b	16640 <main@@Base+0x8f0>
   19804:	bne	19814 <main@@Base+0x3ac4>
   19808:	ldrb	r0, [r7, #2]!
   1980c:	cmp	r0, #32
   19810:	bhi	19824 <main@@Base+0x3ad4>
   19814:	mov	r0, r9
   19818:	mov	r2, r6
   1981c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   19820:	mov	r7, r0
   19824:	cmp	sl, r7
   19828:	beq	1921c <main@@Base+0x34cc>
   1982c:	mov	r4, #0
   19830:	cmp	r7, r6
   19834:	str	r4, [fp, #-52]	; 0xffffffcc
   19838:	str	r4, [fp, #-56]	; 0xffffffc8
   1983c:	strh	r4, [sp, #60]	; 0x3c
   19840:	str	r4, [sp, #48]	; 0x30
   19844:	beq	198a8 <main@@Base+0x3b58>
   19848:	sub	r0, fp, #56	; 0x38
   1984c:	mov	r1, r7
   19850:	mov	r2, r6
   19854:	add	r3, sp, #48	; 0x30
   19858:	str	r0, [sp]
   1985c:	mov	r0, r9
   19860:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   19864:	cmp	r0, r7
   19868:	beq	198b8 <main@@Base+0x3b68>
   1986c:	ldr	r2, [sp, #48]	; 0x30
   19870:	mov	r8, r0
   19874:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19878:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1987c:	cmp	r2, #0
   19880:	beq	198c8 <main@@Base+0x3b78>
   19884:	movw	r2, #32769	; 0x8001
   19888:	subs	r2, r0, r2
   1988c:	sbcs	r1, r1, #0
   19890:	bcc	198f8 <main@@Base+0x3ba8>
   19894:	mov	r0, r9
   19898:	mov	r1, r8
   1989c:	mov	r2, r6
   198a0:	mov	r3, #8
   198a4:	b	198e4 <main@@Base+0x3b94>
   198a8:	mov	r8, r6
   198ac:	cmp	r7, r8
   198b0:	bne	19958 <main@@Base+0x3c08>
   198b4:	b	1991c <main@@Base+0x3bcc>
   198b8:	mov	r8, r7
   198bc:	cmp	r7, r8
   198c0:	bne	19958 <main@@Base+0x3c08>
   198c4:	b	1991c <main@@Base+0x3bcc>
   198c8:	subs	r2, r0, #32768	; 0x8000
   198cc:	sbcs	r1, r1, #0
   198d0:	bcc	1990c <main@@Base+0x3bbc>
   198d4:	mov	r0, r9
   198d8:	mov	r1, r8
   198dc:	mov	r2, r6
   198e0:	mov	r3, #7
   198e4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   198e8:	mov	r8, r0
   198ec:	cmp	r7, r8
   198f0:	bne	19958 <main@@Base+0x3c08>
   198f4:	b	1991c <main@@Base+0x3bcc>
   198f8:	rsb	r4, r0, #0
   198fc:	strh	r4, [sp, #60]	; 0x3c
   19900:	cmp	r7, r8
   19904:	bne	19958 <main@@Base+0x3c08>
   19908:	b	1991c <main@@Base+0x3bcc>
   1990c:	mov	r4, r0
   19910:	strh	r4, [sp, #60]	; 0x3c
   19914:	cmp	r7, r8
   19918:	bne	19958 <main@@Base+0x3c08>
   1991c:	add	r0, sp, #60	; 0x3c
   19920:	mov	r1, r7
   19924:	mov	r2, r6
   19928:	str	r0, [sp]
   1992c:	movw	r0, #53396	; 0xd094
   19930:	movt	r0, #5
   19934:	add	r3, r0, #12
   19938:	mov	r0, r9
   1993c:	bl	22194 <main@@Base+0xc444>
   19940:	mov	r8, r0
   19944:	cmp	r0, r7
   19948:	beq	1fee4 <main@@Base+0xa194>
   1994c:	cmp	r8, r6
   19950:	beq	1fee4 <main@@Base+0xa194>
   19954:	ldrh	r4, [sp, #60]	; 0x3c
   19958:	uxth	r0, r4
   1995c:	cmp	r0, #100	; 0x64
   19960:	bne	19970 <main@@Base+0x3c20>
   19964:	ldrb	r0, [r9, #8]
   19968:	tst	r0, #2
   1996c:	beq	1eba8 <main@@Base+0x8e58>
   19970:	ldr	r0, [r9]
   19974:	mov	r1, #2
   19978:	mov	r2, #2
   1997c:	mov	r3, #2
   19980:	bl	30dac <flatcc_builder_table_add@@Base>
   19984:	cmp	r0, #0
   19988:	bne	1b564 <main@@Base+0x5814>
   1998c:	b	1fee4 <main@@Base+0xa194>
   19990:	bne	199a0 <main@@Base+0x3c50>
   19994:	ldrb	r0, [r8, #2]!
   19998:	cmp	r0, #32
   1999c:	bhi	199b0 <main@@Base+0x3c60>
   199a0:	mov	r0, r9
   199a4:	mov	r2, r6
   199a8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   199ac:	mov	r8, r0
   199b0:	cmp	sl, r8
   199b4:	beq	1921c <main@@Base+0x34cc>
   199b8:	ldr	r0, [r9]
   199bc:	mov	r1, #0
   199c0:	mov	r2, #32
   199c4:	mov	r3, #16
   199c8:	bl	30dac <flatcc_builder_table_add@@Base>
   199cc:	cmp	r0, #0
   199d0:	beq	1fea4 <main@@Base+0xa154>
   199d4:	cmp	r8, r6
   199d8:	beq	19a1c <main@@Base+0x3ccc>
   199dc:	mov	r9, r0
   199e0:	ldrb	r0, [r8]
   199e4:	cmp	r0, #123	; 0x7b
   199e8:	bne	19a1c <main@@Base+0x3ccc>
   199ec:	add	r1, r8, #1
   199f0:	sub	r0, r6, r1
   199f4:	cmp	r0, #2
   199f8:	blt	19a48 <main@@Base+0x3cf8>
   199fc:	ldrb	r0, [r1]
   19a00:	cmp	r0, #32
   19a04:	bls	19a38 <main@@Base+0x3ce8>
   19a08:	mov	r8, r1
   19a0c:	cmp	r8, r6
   19a10:	mov	r2, r6
   19a14:	bne	19a64 <main@@Base+0x3d14>
   19a18:	b	19aa8 <main@@Base+0x3d58>
   19a1c:	ldr	r9, [sp, #32]
   19a20:	mov	r1, r8
   19a24:	mov	r2, r6
   19a28:	mov	r3, #21
   19a2c:	mov	r0, r9
   19a30:	bl	3454c <flatcc_json_parser_set_error@@Base>
   19a34:	b	1eba4 <main@@Base+0x8e54>
   19a38:	bne	19a48 <main@@Base+0x3cf8>
   19a3c:	ldrb	r0, [r8, #2]!
   19a40:	cmp	r0, #32
   19a44:	bhi	19a58 <main@@Base+0x3d08>
   19a48:	ldr	r0, [sp, #32]
   19a4c:	mov	r2, r6
   19a50:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   19a54:	mov	r8, r0
   19a58:	cmp	r8, r6
   19a5c:	mov	r2, r6
   19a60:	beq	19aa8 <main@@Base+0x3d58>
   19a64:	ldrb	r0, [r8]
   19a68:	cmp	r0, #125	; 0x7d
   19a6c:	bne	19aa4 <main@@Base+0x3d54>
   19a70:	ldr	r9, [sp, #32]
   19a74:	add	r1, r8, #1
   19a78:	sub	r0, r6, r1
   19a7c:	cmp	r0, #2
   19a80:	blt	1d674 <main@@Base+0x7924>
   19a84:	ldrb	r0, [r1]
   19a88:	cmp	r0, #32
   19a8c:	bhi	1a618 <main@@Base+0x48c8>
   19a90:	bne	1d674 <main@@Base+0x7924>
   19a94:	ldrb	r0, [r8, #2]!
   19a98:	cmp	r0, #32
   19a9c:	bls	1d674 <main@@Base+0x7924>
   19aa0:	b	1eba8 <main@@Base+0x8e58>
   19aa4:	mov	r2, r8
   19aa8:	add	r0, r9, #26
   19aac:	str	r0, [sp, #16]
   19ab0:	cmp	r2, r6
   19ab4:	mov	r8, r6
   19ab8:	beq	19ae8 <main@@Base+0x3d98>
   19abc:	ldrb	r0, [r2]
   19ac0:	cmp	r0, #34	; 0x22
   19ac4:	bne	19ad0 <main@@Base+0x3d80>
   19ac8:	add	r8, r2, #1
   19acc:	b	19ae8 <main@@Base+0x3d98>
   19ad0:	ldr	r0, [sp, #32]
   19ad4:	mov	r1, r2
   19ad8:	mov	r2, r6
   19adc:	mov	r3, #5
   19ae0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   19ae4:	mov	r8, r0
   19ae8:	sub	ip, r6, r8
   19aec:	mov	r0, #8
   19af0:	cmp	ip, #8
   19af4:	movcc	r0, ip
   19af8:	sub	r7, r0, #1
   19afc:	cmp	r7, #7
   19b00:	bhi	1a524 <main@@Base+0x47d4>
   19b04:	add	r4, pc, #32
   19b08:	mov	r1, #0
   19b0c:	mov	lr, #0
   19b10:	mov	sl, #0
   19b14:	mov	r6, #0
   19b18:	mov	r3, #0
   19b1c:	mov	r5, #0
   19b20:	mov	r0, #0
   19b24:	mov	r2, #0
   19b28:	ldr	pc, [r4, r7, lsl #2]
   19b2c:	muleq	r1, r0, fp
   19b30:	andeq	r9, r1, r8, lsl #23
   19b34:	andeq	r9, r1, r0, lsl #23
   19b38:	andeq	r9, r1, r8, ror fp
   19b3c:	andeq	r9, r1, ip, ror #22
   19b40:	andeq	r9, r1, r0, ror #22
   19b44:	andeq	r9, r1, r0, asr fp
   19b48:	andeq	r9, r1, ip, asr #22
   19b4c:	ldrb	lr, [r8, #7]
   19b50:	ldrb	r0, [r8, #6]
   19b54:	mov	sl, r1
   19b58:	orr	r0, lr, r0, lsl #8
   19b5c:	mov	r1, r0
   19b60:	ldrb	r0, [r8, #5]
   19b64:	mov	r6, sl
   19b68:	orr	r1, r1, r0, lsl #16
   19b6c:	ldrb	r0, [r8, #4]
   19b70:	mov	r3, r6
   19b74:	orr	r1, r1, r0, lsl #24
   19b78:	ldrb	r0, [r8, #3]
   19b7c:	orr	r5, r0, r3
   19b80:	ldrb	r0, [r8, #2]
   19b84:	orr	r0, r5, r0, lsl #8
   19b88:	ldrb	r2, [r8, #1]
   19b8c:	orr	r2, r0, r2, lsl #16
   19b90:	ldrb	r0, [r8]
   19b94:	movw	r3, #29556	; 0x7374
   19b98:	movt	r3, #29797	; 0x7465
   19b9c:	orr	r2, r2, r0, lsl #24
   19ba0:	mvn	r0, #-855638016	; 0xcd000000
   19ba4:	subs	r0, r0, r1
   19ba8:	sbcs	r0, r3, r2
   19bac:	bcc	19c1c <main@@Base+0x3ecc>
   19bb0:	ldr	r6, [sp, #36]	; 0x24
   19bb4:	and	r1, r1, #-16777216	; 0xff000000
   19bb8:	eor	r0, r2, r3
   19bbc:	eor	r2, r1, #822083584	; 0x31000000
   19bc0:	orrs	r2, r2, r0
   19bc4:	beq	19ce8 <main@@Base+0x3f98>
   19bc8:	eor	r1, r1, #838860800	; 0x32000000
   19bcc:	orrs	r0, r1, r0
   19bd0:	bne	1a524 <main@@Base+0x47d4>
   19bd4:	cmp	ip, #6
   19bd8:	mov	r7, r8
   19bdc:	blt	1a000 <main@@Base+0x42b0>
   19be0:	ldrb	r0, [r8, #5]
   19be4:	mov	r7, r8
   19be8:	cmp	r0, #34	; 0x22
   19bec:	bne	1a000 <main@@Base+0x42b0>
   19bf0:	add	r1, r8, #6
   19bf4:	sub	r0, r6, r1
   19bf8:	cmp	r0, #2
   19bfc:	blt	19dec <main@@Base+0x409c>
   19c00:	ldrb	r0, [r1]
   19c04:	cmp	r0, #32
   19c08:	bls	19dd8 <main@@Base+0x4088>
   19c0c:	mov	r7, r1
   19c10:	cmp	r7, r6
   19c14:	bne	19e04 <main@@Base+0x40b4>
   19c18:	b	19e40 <main@@Base+0x40f0>
   19c1c:	ldr	r6, [sp, #36]	; 0x24
   19c20:	cmn	r2, #-2013265919	; 0x88000001
   19c24:	bhi	19c84 <main@@Base+0x3f34>
   19c28:	and	r1, r1, #-16777216	; 0xff000000
   19c2c:	eor	r0, r2, r3
   19c30:	eor	r1, r1, #855638016	; 0x33000000
   19c34:	orrs	r0, r1, r0
   19c38:	bne	1a524 <main@@Base+0x47d4>
   19c3c:	cmp	ip, #6
   19c40:	mov	r1, r8
   19c44:	blt	1a318 <main@@Base+0x45c8>
   19c48:	ldrb	r0, [r8, #5]
   19c4c:	mov	r1, r8
   19c50:	cmp	r0, #34	; 0x22
   19c54:	bne	1a318 <main@@Base+0x45c8>
   19c58:	add	r2, r8, #6
   19c5c:	sub	r0, r6, r2
   19c60:	cmp	r0, #2
   19c64:	blt	19eec <main@@Base+0x419c>
   19c68:	ldrb	r0, [r2]
   19c6c:	cmp	r0, #32
   19c70:	bls	19ed8 <main@@Base+0x4188>
   19c74:	mov	r1, r2
   19c78:	cmp	r1, r6
   19c7c:	bne	19f08 <main@@Base+0x41b8>
   19c80:	b	19f44 <main@@Base+0x41f4>
   19c84:	lsr	r1, r2, #24
   19c88:	and	r0, r2, #-16777216	; 0xff000000
   19c8c:	cmp	r1, #120	; 0x78
   19c90:	bhi	19d30 <main@@Base+0x3fe0>
   19c94:	teq	r0, #2013265920	; 0x78000000
   19c98:	bne	1a524 <main@@Base+0x47d4>
   19c9c:	cmp	ip, #2
   19ca0:	mov	r7, r8
   19ca4:	blt	1a368 <main@@Base+0x4618>
   19ca8:	ldrb	r0, [r8, #1]
   19cac:	mov	r7, r8
   19cb0:	cmp	r0, #34	; 0x22
   19cb4:	bne	1a368 <main@@Base+0x4618>
   19cb8:	add	r1, r8, #2
   19cbc:	sub	r0, r6, r1
   19cc0:	cmp	r0, #2
   19cc4:	blt	19f70 <main@@Base+0x4220>
   19cc8:	ldrb	r0, [r1]
   19ccc:	cmp	r0, #32
   19cd0:	bls	19f58 <main@@Base+0x4208>
   19cd4:	ldr	r6, [sp, #36]	; 0x24
   19cd8:	mov	r7, r1
   19cdc:	cmp	r7, r6
   19ce0:	bne	19f88 <main@@Base+0x4238>
   19ce4:	b	19fc4 <main@@Base+0x4274>
   19ce8:	cmp	ip, #6
   19cec:	mov	r7, r8
   19cf0:	blt	1a15c <main@@Base+0x440c>
   19cf4:	ldrb	r0, [r8, #5]
   19cf8:	mov	r7, r8
   19cfc:	cmp	r0, #34	; 0x22
   19d00:	bne	1a15c <main@@Base+0x440c>
   19d04:	add	r1, r8, #6
   19d08:	sub	r0, r6, r1
   19d0c:	cmp	r0, #2
   19d10:	blt	19e6c <main@@Base+0x411c>
   19d14:	ldrb	r0, [r1]
   19d18:	cmp	r0, #32
   19d1c:	bls	19e58 <main@@Base+0x4108>
   19d20:	mov	r7, r1
   19d24:	cmp	r7, r6
   19d28:	bne	19e84 <main@@Base+0x4134>
   19d2c:	b	19ec0 <main@@Base+0x4170>
   19d30:	teq	r0, #2030043136	; 0x79000000
   19d34:	beq	19d8c <main@@Base+0x403c>
   19d38:	teq	r0, #2046820352	; 0x7a000000
   19d3c:	bne	1a524 <main@@Base+0x47d4>
   19d40:	cmp	ip, #2
   19d44:	mov	r7, r8
   19d48:	blt	1a408 <main@@Base+0x46b8>
   19d4c:	ldrb	r0, [r8, #1]
   19d50:	mov	r7, r8
   19d54:	cmp	r0, #34	; 0x22
   19d58:	bne	1a408 <main@@Base+0x46b8>
   19d5c:	add	r1, r8, #2
   19d60:	sub	r0, r6, r1
   19d64:	cmp	r0, #2
   19d68:	blt	1a1f0 <main@@Base+0x44a0>
   19d6c:	ldrb	r0, [r1]
   19d70:	cmp	r0, #32
   19d74:	bls	1a1d8 <main@@Base+0x4488>
   19d78:	ldr	r6, [sp, #36]	; 0x24
   19d7c:	mov	r7, r1
   19d80:	cmp	r7, r6
   19d84:	bne	1a208 <main@@Base+0x44b8>
   19d88:	b	1a248 <main@@Base+0x44f8>
   19d8c:	cmp	ip, #2
   19d90:	mov	r7, r8
   19d94:	blt	1a4a8 <main@@Base+0x4758>
   19d98:	ldrb	r0, [r8, #1]
   19d9c:	mov	r7, r8
   19da0:	cmp	r0, #34	; 0x22
   19da4:	bne	1a4a8 <main@@Base+0x4758>
   19da8:	add	r1, r8, #2
   19dac:	sub	r0, r6, r1
   19db0:	cmp	r0, #2
   19db4:	blt	1a27c <main@@Base+0x452c>
   19db8:	ldrb	r0, [r1]
   19dbc:	cmp	r0, #32
   19dc0:	bls	1a264 <main@@Base+0x4514>
   19dc4:	ldr	r6, [sp, #36]	; 0x24
   19dc8:	mov	r7, r1
   19dcc:	cmp	r7, r6
   19dd0:	bne	1a294 <main@@Base+0x4544>
   19dd4:	b	1a2d4 <main@@Base+0x4584>
   19dd8:	bne	19dec <main@@Base+0x409c>
   19ddc:	mov	r7, r8
   19de0:	ldrb	r0, [r7, #7]!
   19de4:	cmp	r0, #32
   19de8:	bhi	19dfc <main@@Base+0x40ac>
   19dec:	ldr	r0, [sp, #32]
   19df0:	mov	r2, r6
   19df4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   19df8:	mov	r7, r0
   19dfc:	cmp	r7, r6
   19e00:	beq	19e40 <main@@Base+0x40f0>
   19e04:	ldrb	r0, [r7]
   19e08:	cmp	r0, #58	; 0x3a
   19e0c:	bne	19e40 <main@@Base+0x40f0>
   19e10:	add	r1, r7, #1
   19e14:	sub	r0, r6, r1
   19e18:	cmp	r0, #2
   19e1c:	blt	19ff0 <main@@Base+0x42a0>
   19e20:	ldrb	r0, [r1]
   19e24:	cmp	r0, #32
   19e28:	bls	19fdc <main@@Base+0x428c>
   19e2c:	ldr	r6, [sp, #36]	; 0x24
   19e30:	mov	r7, r1
   19e34:	cmp	r8, r7
   19e38:	bne	1a008 <main@@Base+0x42b8>
   19e3c:	b	1a524 <main@@Base+0x47d4>
   19e40:	ldr	r0, [sp, #32]
   19e44:	mov	r1, r7
   19e48:	mov	r2, r6
   19e4c:	mov	r3, #4
   19e50:	bl	3454c <flatcc_json_parser_set_error@@Base>
   19e54:	b	19ffc <main@@Base+0x42ac>
   19e58:	bne	19e6c <main@@Base+0x411c>
   19e5c:	mov	r7, r8
   19e60:	ldrb	r0, [r7, #7]!
   19e64:	cmp	r0, #32
   19e68:	bhi	19e7c <main@@Base+0x412c>
   19e6c:	ldr	r0, [sp, #32]
   19e70:	mov	r2, r6
   19e74:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   19e78:	mov	r7, r0
   19e7c:	cmp	r7, r6
   19e80:	beq	19ec0 <main@@Base+0x4170>
   19e84:	ldrb	r0, [r7]
   19e88:	cmp	r0, #58	; 0x3a
   19e8c:	bne	19ec0 <main@@Base+0x4170>
   19e90:	add	r1, r7, #1
   19e94:	sub	r0, r6, r1
   19e98:	cmp	r0, #2
   19e9c:	blt	1a14c <main@@Base+0x43fc>
   19ea0:	ldrb	r0, [r1]
   19ea4:	cmp	r0, #32
   19ea8:	bls	1a138 <main@@Base+0x43e8>
   19eac:	ldr	r6, [sp, #36]	; 0x24
   19eb0:	mov	r7, r1
   19eb4:	cmp	r8, r7
   19eb8:	bne	1a164 <main@@Base+0x4414>
   19ebc:	b	1a524 <main@@Base+0x47d4>
   19ec0:	ldr	r0, [sp, #32]
   19ec4:	mov	r1, r7
   19ec8:	mov	r2, r6
   19ecc:	mov	r3, #4
   19ed0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   19ed4:	b	1a158 <main@@Base+0x4408>
   19ed8:	bne	19eec <main@@Base+0x419c>
   19edc:	mov	r1, r8
   19ee0:	ldrb	r0, [r1, #7]!
   19ee4:	cmp	r0, #32
   19ee8:	bhi	19f00 <main@@Base+0x41b0>
   19eec:	ldr	r0, [sp, #32]
   19ef0:	mov	r1, r2
   19ef4:	mov	r2, r6
   19ef8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   19efc:	mov	r1, r0
   19f00:	cmp	r1, r6
   19f04:	beq	19f44 <main@@Base+0x41f4>
   19f08:	ldrb	r0, [r1]
   19f0c:	cmp	r0, #58	; 0x3a
   19f10:	bne	19f44 <main@@Base+0x41f4>
   19f14:	add	r2, r1, #1
   19f18:	sub	r0, r6, r2
   19f1c:	cmp	r0, #2
   19f20:	blt	1a304 <main@@Base+0x45b4>
   19f24:	ldrb	r0, [r2]
   19f28:	cmp	r0, #32
   19f2c:	bls	1a2f0 <main@@Base+0x45a0>
   19f30:	ldr	r6, [sp, #36]	; 0x24
   19f34:	mov	r1, r2
   19f38:	cmp	r8, r1
   19f3c:	bne	1a320 <main@@Base+0x45d0>
   19f40:	b	1a524 <main@@Base+0x47d4>
   19f44:	ldr	r0, [sp, #32]
   19f48:	mov	r2, r6
   19f4c:	mov	r3, #4
   19f50:	bl	3454c <flatcc_json_parser_set_error@@Base>
   19f54:	b	1a314 <main@@Base+0x45c4>
   19f58:	ldr	r6, [sp, #36]	; 0x24
   19f5c:	bne	19f70 <main@@Base+0x4220>
   19f60:	mov	r7, r8
   19f64:	ldrb	r0, [r7, #3]!
   19f68:	cmp	r0, #32
   19f6c:	bhi	19f80 <main@@Base+0x4230>
   19f70:	ldr	r0, [sp, #32]
   19f74:	mov	r2, r6
   19f78:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   19f7c:	mov	r7, r0
   19f80:	cmp	r7, r6
   19f84:	beq	19fc4 <main@@Base+0x4274>
   19f88:	ldrb	r0, [r7]
   19f8c:	cmp	r0, #58	; 0x3a
   19f90:	bne	19fc4 <main@@Base+0x4274>
   19f94:	add	r1, r7, #1
   19f98:	sub	r0, r6, r1
   19f9c:	cmp	r0, #2
   19fa0:	blt	1a358 <main@@Base+0x4608>
   19fa4:	ldrb	r0, [r1]
   19fa8:	cmp	r0, #32
   19fac:	bls	1a344 <main@@Base+0x45f4>
   19fb0:	ldr	r6, [sp, #36]	; 0x24
   19fb4:	mov	r7, r1
   19fb8:	cmp	r8, r7
   19fbc:	bne	1a370 <main@@Base+0x4620>
   19fc0:	b	1a524 <main@@Base+0x47d4>
   19fc4:	ldr	r0, [sp, #32]
   19fc8:	mov	r1, r7
   19fcc:	mov	r2, r6
   19fd0:	mov	r3, #4
   19fd4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   19fd8:	b	1a364 <main@@Base+0x4614>
   19fdc:	ldr	r6, [sp, #36]	; 0x24
   19fe0:	bne	19ff0 <main@@Base+0x42a0>
   19fe4:	ldrb	r0, [r7, #2]!
   19fe8:	cmp	r0, #32
   19fec:	bhi	1a000 <main@@Base+0x42b0>
   19ff0:	ldr	r0, [sp, #32]
   19ff4:	mov	r2, r6
   19ff8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   19ffc:	mov	r7, r0
   1a000:	cmp	r8, r7
   1a004:	beq	1a524 <main@@Base+0x47d4>
   1a008:	mov	r5, #0
   1a00c:	cmp	r7, r6
   1a010:	str	r5, [fp, #-52]	; 0xffffffcc
   1a014:	str	r5, [fp, #-56]	; 0xffffffc8
   1a018:	strb	r5, [sp, #60]	; 0x3c
   1a01c:	str	r5, [sp, #48]	; 0x30
   1a020:	beq	1a07c <main@@Base+0x432c>
   1a024:	sub	r0, fp, #56	; 0x38
   1a028:	mov	r1, r7
   1a02c:	mov	r2, r6
   1a030:	add	r3, sp, #48	; 0x30
   1a034:	str	r0, [sp]
   1a038:	ldr	r0, [sp, #32]
   1a03c:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1a040:	cmp	r0, r7
   1a044:	beq	1a08c <main@@Base+0x433c>
   1a048:	ldr	r3, [sp, #48]	; 0x30
   1a04c:	mov	r1, r0
   1a050:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a054:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a058:	cmp	r3, #0
   1a05c:	beq	1a09c <main@@Base+0x434c>
   1a060:	subs	r3, r0, #129	; 0x81
   1a064:	sbcs	r2, r2, #0
   1a068:	bcc	1a0c8 <main@@Base+0x4378>
   1a06c:	ldr	r0, [sp, #32]
   1a070:	mov	r2, r6
   1a074:	mov	r3, #8
   1a078:	b	1a0b4 <main@@Base+0x4364>
   1a07c:	mov	r1, r6
   1a080:	cmp	r7, r1
   1a084:	bne	1a124 <main@@Base+0x43d4>
   1a088:	b	1a0ec <main@@Base+0x439c>
   1a08c:	mov	r1, r7
   1a090:	cmp	r7, r1
   1a094:	bne	1a124 <main@@Base+0x43d4>
   1a098:	b	1a0ec <main@@Base+0x439c>
   1a09c:	subs	r3, r0, #128	; 0x80
   1a0a0:	sbcs	r2, r2, #0
   1a0a4:	bcc	1a0dc <main@@Base+0x438c>
   1a0a8:	ldr	r0, [sp, #32]
   1a0ac:	mov	r2, r6
   1a0b0:	mov	r3, #7
   1a0b4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1a0b8:	mov	r1, r0
   1a0bc:	cmp	r7, r1
   1a0c0:	bne	1a124 <main@@Base+0x43d4>
   1a0c4:	b	1a0ec <main@@Base+0x439c>
   1a0c8:	rsb	r5, r0, #0
   1a0cc:	strb	r5, [sp, #60]	; 0x3c
   1a0d0:	cmp	r7, r1
   1a0d4:	bne	1a124 <main@@Base+0x43d4>
   1a0d8:	b	1a0ec <main@@Base+0x439c>
   1a0dc:	mov	r5, r0
   1a0e0:	strb	r5, [sp, #60]	; 0x3c
   1a0e4:	cmp	r7, r1
   1a0e8:	bne	1a124 <main@@Base+0x43d4>
   1a0ec:	add	r0, sp, #60	; 0x3c
   1a0f0:	mov	r1, r7
   1a0f4:	mov	r2, r6
   1a0f8:	str	r0, [sp]
   1a0fc:	movw	r0, #53876	; 0xd274
   1a100:	movt	r0, #5
   1a104:	add	r3, r0, #80	; 0x50
   1a108:	ldr	r0, [sp, #32]
   1a10c:	bl	21d78 <main@@Base+0xc028>
   1a110:	mov	r1, r0
   1a114:	cmp	r0, r7
   1a118:	cmpne	r1, r6
   1a11c:	beq	1a62c <main@@Base+0x48dc>
   1a120:	ldrb	r5, [sp, #60]	; 0x3c
   1a124:	strb	r5, [r9, #24]
   1a128:	sub	r0, r6, r1
   1a12c:	cmp	r0, #2
   1a130:	bge	1a544 <main@@Base+0x47f4>
   1a134:	b	1a574 <main@@Base+0x4824>
   1a138:	ldr	r6, [sp, #36]	; 0x24
   1a13c:	bne	1a14c <main@@Base+0x43fc>
   1a140:	ldrb	r0, [r7, #2]!
   1a144:	cmp	r0, #32
   1a148:	bhi	1a15c <main@@Base+0x440c>
   1a14c:	ldr	r0, [sp, #32]
   1a150:	mov	r2, r6
   1a154:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1a158:	mov	r7, r0
   1a15c:	cmp	r8, r7
   1a160:	beq	1a524 <main@@Base+0x47d4>
   1a164:	mov	r0, #0
   1a168:	mov	r1, r7
   1a16c:	mov	r2, r6
   1a170:	sub	r3, fp, #56	; 0x38
   1a174:	str	r0, [fp, #-52]	; 0xffffffcc
   1a178:	str	r0, [fp, #-56]	; 0xffffffc8
   1a17c:	ldr	r0, [sp, #32]
   1a180:	bl	3604c <flatcc_json_parser_double@@Base>
   1a184:	mov	r1, r0
   1a188:	cmp	r7, r0
   1a18c:	bne	1a1c0 <main@@Base+0x4470>
   1a190:	sub	r0, fp, #56	; 0x38
   1a194:	movw	r3, #53636	; 0xd184
   1a198:	mov	r1, r7
   1a19c:	mov	r2, r6
   1a1a0:	str	r0, [sp]
   1a1a4:	ldr	r0, [sp, #32]
   1a1a8:	movt	r3, #5
   1a1ac:	bl	24b9c <main@@Base+0xee4c>
   1a1b0:	mov	r1, r0
   1a1b4:	cmp	r0, r7
   1a1b8:	cmpne	r1, r6
   1a1bc:	beq	1a62c <main@@Base+0x48dc>
   1a1c0:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1a1c4:	vstr	d16, [r9, #16]
   1a1c8:	sub	r0, r6, r1
   1a1cc:	cmp	r0, #2
   1a1d0:	bge	1a544 <main@@Base+0x47f4>
   1a1d4:	b	1a574 <main@@Base+0x4824>
   1a1d8:	ldr	r6, [sp, #36]	; 0x24
   1a1dc:	bne	1a1f0 <main@@Base+0x44a0>
   1a1e0:	mov	r7, r8
   1a1e4:	ldrb	r0, [r7, #3]!
   1a1e8:	cmp	r0, #32
   1a1ec:	bhi	1a200 <main@@Base+0x44b0>
   1a1f0:	ldr	r0, [sp, #32]
   1a1f4:	mov	r2, r6
   1a1f8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1a1fc:	mov	r7, r0
   1a200:	cmp	r7, r6
   1a204:	beq	1a248 <main@@Base+0x44f8>
   1a208:	ldrb	r0, [r7]
   1a20c:	cmp	r0, #58	; 0x3a
   1a210:	bne	1a248 <main@@Base+0x44f8>
   1a214:	ldr	r6, [sp, #36]	; 0x24
   1a218:	add	r1, r7, #1
   1a21c:	sub	r0, r6, r1
   1a220:	cmp	r0, #2
   1a224:	blt	1a3f8 <main@@Base+0x46a8>
   1a228:	ldrb	r0, [r1]
   1a22c:	cmp	r0, #32
   1a230:	bls	1a3e4 <main@@Base+0x4694>
   1a234:	ldr	r6, [sp, #36]	; 0x24
   1a238:	mov	r7, r1
   1a23c:	cmp	r8, r7
   1a240:	bne	1a410 <main@@Base+0x46c0>
   1a244:	b	1a524 <main@@Base+0x47d4>
   1a248:	ldr	r6, [sp, #36]	; 0x24
   1a24c:	ldr	r0, [sp, #32]
   1a250:	mov	r1, r7
   1a254:	mov	r3, #4
   1a258:	mov	r2, r6
   1a25c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1a260:	b	1a404 <main@@Base+0x46b4>
   1a264:	ldr	r6, [sp, #36]	; 0x24
   1a268:	bne	1a27c <main@@Base+0x452c>
   1a26c:	mov	r7, r8
   1a270:	ldrb	r0, [r7, #3]!
   1a274:	cmp	r0, #32
   1a278:	bhi	1a28c <main@@Base+0x453c>
   1a27c:	ldr	r0, [sp, #32]
   1a280:	mov	r2, r6
   1a284:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1a288:	mov	r7, r0
   1a28c:	cmp	r7, r6
   1a290:	beq	1a2d4 <main@@Base+0x4584>
   1a294:	ldrb	r0, [r7]
   1a298:	cmp	r0, #58	; 0x3a
   1a29c:	bne	1a2d4 <main@@Base+0x4584>
   1a2a0:	ldr	r6, [sp, #36]	; 0x24
   1a2a4:	add	r1, r7, #1
   1a2a8:	sub	r0, r6, r1
   1a2ac:	cmp	r0, #2
   1a2b0:	blt	1a498 <main@@Base+0x4748>
   1a2b4:	ldrb	r0, [r1]
   1a2b8:	cmp	r0, #32
   1a2bc:	bls	1a484 <main@@Base+0x4734>
   1a2c0:	ldr	r6, [sp, #36]	; 0x24
   1a2c4:	mov	r7, r1
   1a2c8:	cmp	r8, r7
   1a2cc:	bne	1a4b0 <main@@Base+0x4760>
   1a2d0:	b	1a524 <main@@Base+0x47d4>
   1a2d4:	ldr	r6, [sp, #36]	; 0x24
   1a2d8:	ldr	r0, [sp, #32]
   1a2dc:	mov	r1, r7
   1a2e0:	mov	r3, #4
   1a2e4:	mov	r2, r6
   1a2e8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1a2ec:	b	1a4a4 <main@@Base+0x4754>
   1a2f0:	ldr	r6, [sp, #36]	; 0x24
   1a2f4:	bne	1a304 <main@@Base+0x45b4>
   1a2f8:	ldrb	r0, [r1, #2]!
   1a2fc:	cmp	r0, #32
   1a300:	bhi	1a318 <main@@Base+0x45c8>
   1a304:	ldr	r0, [sp, #32]
   1a308:	mov	r1, r2
   1a30c:	mov	r2, r6
   1a310:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1a314:	mov	r1, r0
   1a318:	cmp	r8, r1
   1a31c:	beq	1a524 <main@@Base+0x47d4>
   1a320:	ldr	r0, [sp, #32]
   1a324:	ldr	r3, [sp, #16]
   1a328:	mov	r2, r6
   1a32c:	bl	223b0 <main@@Base+0xc660>
   1a330:	mov	r1, r0
   1a334:	sub	r0, r6, r1
   1a338:	cmp	r0, #2
   1a33c:	bge	1a544 <main@@Base+0x47f4>
   1a340:	b	1a574 <main@@Base+0x4824>
   1a344:	ldr	r6, [sp, #36]	; 0x24
   1a348:	bne	1a358 <main@@Base+0x4608>
   1a34c:	ldrb	r0, [r7, #2]!
   1a350:	cmp	r0, #32
   1a354:	bhi	1a368 <main@@Base+0x4618>
   1a358:	ldr	r0, [sp, #32]
   1a35c:	mov	r2, r6
   1a360:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1a364:	mov	r7, r0
   1a368:	cmp	r8, r7
   1a36c:	beq	1a524 <main@@Base+0x47d4>
   1a370:	mov	r0, #0
   1a374:	mov	r1, r7
   1a378:	mov	r2, r6
   1a37c:	sub	r3, fp, #56	; 0x38
   1a380:	str	r0, [fp, #-56]	; 0xffffffc8
   1a384:	ldr	r0, [sp, #32]
   1a388:	bl	36a70 <flatcc_json_parser_float@@Base>
   1a38c:	mov	r1, r0
   1a390:	cmp	r7, r0
   1a394:	bne	1a3cc <main@@Base+0x467c>
   1a398:	sub	r0, fp, #56	; 0x38
   1a39c:	mov	r1, r7
   1a3a0:	mov	r2, r6
   1a3a4:	str	r0, [sp]
   1a3a8:	movw	r0, #53636	; 0xd184
   1a3ac:	movt	r0, #5
   1a3b0:	add	r3, r0, #12
   1a3b4:	ldr	r0, [sp, #32]
   1a3b8:	bl	241d8 <main@@Base+0xe488>
   1a3bc:	mov	r1, r0
   1a3c0:	cmp	r0, r7
   1a3c4:	cmpne	r1, r6
   1a3c8:	beq	1a62c <main@@Base+0x48dc>
   1a3cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a3d0:	str	r0, [r9]
   1a3d4:	sub	r0, r6, r1
   1a3d8:	cmp	r0, #2
   1a3dc:	bge	1a544 <main@@Base+0x47f4>
   1a3e0:	b	1a574 <main@@Base+0x4824>
   1a3e4:	ldr	r6, [sp, #36]	; 0x24
   1a3e8:	bne	1a3f8 <main@@Base+0x46a8>
   1a3ec:	ldrb	r0, [r7, #2]!
   1a3f0:	cmp	r0, #32
   1a3f4:	bhi	1a408 <main@@Base+0x46b8>
   1a3f8:	ldr	r0, [sp, #32]
   1a3fc:	mov	r2, r6
   1a400:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1a404:	mov	r7, r0
   1a408:	cmp	r8, r7
   1a40c:	beq	1a524 <main@@Base+0x47d4>
   1a410:	mov	r0, #0
   1a414:	mov	r1, r7
   1a418:	mov	r2, r6
   1a41c:	sub	r3, fp, #56	; 0x38
   1a420:	str	r0, [fp, #-56]	; 0xffffffc8
   1a424:	ldr	r0, [sp, #32]
   1a428:	bl	36a70 <flatcc_json_parser_float@@Base>
   1a42c:	mov	r1, r0
   1a430:	cmp	r7, r0
   1a434:	bne	1a46c <main@@Base+0x471c>
   1a438:	sub	r0, fp, #56	; 0x38
   1a43c:	mov	r1, r7
   1a440:	mov	r2, r6
   1a444:	str	r0, [sp]
   1a448:	movw	r0, #53636	; 0xd184
   1a44c:	movt	r0, #5
   1a450:	add	r3, r0, #24
   1a454:	ldr	r0, [sp, #32]
   1a458:	bl	241d8 <main@@Base+0xe488>
   1a45c:	mov	r1, r0
   1a460:	cmp	r0, r7
   1a464:	cmpne	r1, r6
   1a468:	beq	1a62c <main@@Base+0x48dc>
   1a46c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a470:	str	r0, [r9, #8]
   1a474:	sub	r0, r6, r1
   1a478:	cmp	r0, #2
   1a47c:	bge	1a544 <main@@Base+0x47f4>
   1a480:	b	1a574 <main@@Base+0x4824>
   1a484:	ldr	r6, [sp, #36]	; 0x24
   1a488:	bne	1a498 <main@@Base+0x4748>
   1a48c:	ldrb	r0, [r7, #2]!
   1a490:	cmp	r0, #32
   1a494:	bhi	1a4a8 <main@@Base+0x4758>
   1a498:	ldr	r0, [sp, #32]
   1a49c:	mov	r2, r6
   1a4a0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1a4a4:	mov	r7, r0
   1a4a8:	cmp	r8, r7
   1a4ac:	beq	1a524 <main@@Base+0x47d4>
   1a4b0:	mov	r0, #0
   1a4b4:	mov	r1, r7
   1a4b8:	mov	r2, r6
   1a4bc:	sub	r3, fp, #56	; 0x38
   1a4c0:	str	r0, [fp, #-56]	; 0xffffffc8
   1a4c4:	ldr	r0, [sp, #32]
   1a4c8:	bl	36a70 <flatcc_json_parser_float@@Base>
   1a4cc:	mov	r1, r0
   1a4d0:	cmp	r7, r0
   1a4d4:	bne	1a50c <main@@Base+0x47bc>
   1a4d8:	sub	r0, fp, #56	; 0x38
   1a4dc:	mov	r1, r7
   1a4e0:	mov	r2, r6
   1a4e4:	str	r0, [sp]
   1a4e8:	movw	r0, #53636	; 0xd184
   1a4ec:	movt	r0, #5
   1a4f0:	add	r3, r0, #36	; 0x24
   1a4f4:	ldr	r0, [sp, #32]
   1a4f8:	bl	241d8 <main@@Base+0xe488>
   1a4fc:	mov	r1, r0
   1a500:	cmp	r0, r7
   1a504:	cmpne	r1, r6
   1a508:	beq	1a62c <main@@Base+0x48dc>
   1a50c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a510:	str	r0, [r9, #4]
   1a514:	sub	r0, r6, r1
   1a518:	cmp	r0, #2
   1a51c:	blt	1a574 <main@@Base+0x4824>
   1a520:	b	1a544 <main@@Base+0x47f4>
   1a524:	ldr	r0, [sp, #32]
   1a528:	mov	r1, r8
   1a52c:	mov	r2, r6
   1a530:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   1a534:	mov	r1, r0
   1a538:	sub	r0, r6, r1
   1a53c:	cmp	r0, #2
   1a540:	blt	1a574 <main@@Base+0x4824>
   1a544:	ldrb	r0, [r1]
   1a548:	cmp	r0, #32
   1a54c:	bls	1a560 <main@@Base+0x4810>
   1a550:	mov	r2, r1
   1a554:	cmp	r2, r6
   1a558:	bne	1a58c <main@@Base+0x483c>
   1a55c:	b	1a648 <main@@Base+0x48f8>
   1a560:	bne	1a574 <main@@Base+0x4824>
   1a564:	mov	r2, r1
   1a568:	ldrb	r0, [r2, #1]!
   1a56c:	cmp	r0, #32
   1a570:	bhi	1a584 <main@@Base+0x4834>
   1a574:	ldr	r0, [sp, #32]
   1a578:	mov	r2, r6
   1a57c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1a580:	mov	r2, r0
   1a584:	cmp	r2, r6
   1a588:	beq	1a648 <main@@Base+0x48f8>
   1a58c:	ldrb	r0, [r2]
   1a590:	cmp	r0, #44	; 0x2c
   1a594:	bne	1a660 <main@@Base+0x4910>
   1a598:	add	r1, r2, #1
   1a59c:	sub	r0, r6, r1
   1a5a0:	cmp	r0, #2
   1a5a4:	blt	1a5d4 <main@@Base+0x4884>
   1a5a8:	ldrb	r0, [r1]
   1a5ac:	cmp	r0, #32
   1a5b0:	bls	1a5c4 <main@@Base+0x4874>
   1a5b4:	mov	r2, r1
   1a5b8:	cmp	r2, r6
   1a5bc:	bne	1a5ec <main@@Base+0x489c>
   1a5c0:	b	1a6a4 <main@@Base+0x4954>
   1a5c4:	bne	1a5d4 <main@@Base+0x4884>
   1a5c8:	ldrb	r0, [r2, #2]!
   1a5cc:	cmp	r0, #32
   1a5d0:	bhi	1a5e4 <main@@Base+0x4894>
   1a5d4:	ldr	r0, [sp, #32]
   1a5d8:	mov	r2, r6
   1a5dc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1a5e0:	mov	r2, r0
   1a5e4:	cmp	r2, r6
   1a5e8:	beq	1a6a4 <main@@Base+0x4954>
   1a5ec:	ldrb	r0, [r2]
   1a5f0:	cmp	r0, #125	; 0x7d
   1a5f4:	bne	19ab0 <main@@Base+0x3d60>
   1a5f8:	ldr	r9, [sp, #32]
   1a5fc:	add	r1, r2, #1
   1a600:	sub	r0, r6, r1
   1a604:	cmp	r0, #2
   1a608:	blt	1d674 <main@@Base+0x7924>
   1a60c:	ldrb	r0, [r1]
   1a610:	cmp	r0, #32
   1a614:	bls	1c888 <main@@Base+0x6b38>
   1a618:	mov	r8, r1
   1a61c:	sub	r0, r6, r8
   1a620:	cmp	r0, #2
   1a624:	bge	1ebb4 <main@@Base+0x8e64>
   1a628:	b	1ec28 <main@@Base+0x8ed8>
   1a62c:	ldr	r9, [sp, #32]
   1a630:	ldr	r6, [sp, #36]	; 0x24
   1a634:	mov	r3, #33	; 0x21
   1a638:	mov	r0, r9
   1a63c:	mov	r2, r6
   1a640:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1a644:	b	1eba4 <main@@Base+0x8e54>
   1a648:	ldr	r9, [sp, #32]
   1a64c:	mov	r8, r6
   1a650:	sub	r0, r6, r8
   1a654:	cmp	r0, #2
   1a658:	bge	1ebb4 <main@@Base+0x8e64>
   1a65c:	b	1ec28 <main@@Base+0x8ed8>
   1a660:	ldr	r9, [sp, #32]
   1a664:	cmp	r0, #125	; 0x7d
   1a668:	bne	1b1cc <main@@Base+0x547c>
   1a66c:	add	r1, r2, #1
   1a670:	sub	r0, r6, r1
   1a674:	cmp	r0, #2
   1a678:	blt	1d674 <main@@Base+0x7924>
   1a67c:	ldrb	r0, [r1]
   1a680:	cmp	r0, #32
   1a684:	bls	1d658 <main@@Base+0x7908>
   1a688:	ldr	r6, [sp, #36]	; 0x24
   1a68c:	ldr	r9, [sp, #32]
   1a690:	mov	r8, r1
   1a694:	sub	r0, r6, r8
   1a698:	cmp	r0, #2
   1a69c:	bge	1ebb4 <main@@Base+0x8e64>
   1a6a0:	b	1ec28 <main@@Base+0x8ed8>
   1a6a4:	ldr	r9, [sp, #32]
   1a6a8:	mov	r1, r6
   1a6ac:	mov	r0, r9
   1a6b0:	b	1b1d4 <main@@Base+0x5484>
   1a6b4:	bne	1a6c4 <main@@Base+0x4974>
   1a6b8:	ldrb	r0, [r7, #2]!
   1a6bc:	cmp	r0, #32
   1a6c0:	bhi	1a6d4 <main@@Base+0x4984>
   1a6c4:	mov	r0, r9
   1a6c8:	mov	r2, r6
   1a6cc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1a6d0:	mov	r7, r0
   1a6d4:	cmp	sl, r7
   1a6d8:	beq	1921c <main@@Base+0x34cc>
   1a6dc:	mov	r0, #0
   1a6e0:	mov	r1, r7
   1a6e4:	mov	r2, r6
   1a6e8:	sub	r3, fp, #56	; 0x38
   1a6ec:	str	r0, [fp, #-56]	; 0xffffffc8
   1a6f0:	mov	r0, r9
   1a6f4:	bl	36a70 <flatcc_json_parser_float@@Base>
   1a6f8:	mov	r8, r0
   1a6fc:	cmp	r7, r0
   1a700:	bne	1a738 <main@@Base+0x49e8>
   1a704:	sub	r0, fp, #56	; 0x38
   1a708:	mov	r1, r7
   1a70c:	mov	r2, r6
   1a710:	str	r0, [sp]
   1a714:	movw	r0, #53396	; 0xd094
   1a718:	movt	r0, #5
   1a71c:	add	r3, r0, #72	; 0x48
   1a720:	mov	r0, r9
   1a724:	bl	241d8 <main@@Base+0xe488>
   1a728:	mov	r8, r0
   1a72c:	cmp	r0, r7
   1a730:	cmpne	r8, r6
   1a734:	beq	1fee4 <main@@Base+0xa194>
   1a738:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1a73c:	vcmp.f32	s0, s16
   1a740:	vmrs	APSR_nzcv, fpscr
   1a744:	bne	1a754 <main@@Base+0x4a04>
   1a748:	ldrb	r0, [r9, #8]
   1a74c:	tst	r0, #2
   1a750:	beq	1eba8 <main@@Base+0x8e58>
   1a754:	ldr	r0, [r9]
   1a758:	mov	r1, #26
   1a75c:	b	181dc <main@@Base+0x248c>
   1a760:	bne	1a770 <main@@Base+0x4a20>
   1a764:	ldrb	r0, [sl, #19]!
   1a768:	cmp	r0, #32
   1a76c:	bhi	1a780 <main@@Base+0x4a30>
   1a770:	mov	r0, r9
   1a774:	mov	r2, r6
   1a778:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1a77c:	mov	sl, r0
   1a780:	cmp	sl, r6
   1a784:	beq	1a7c8 <main@@Base+0x4a78>
   1a788:	ldrb	r0, [sl]
   1a78c:	cmp	r0, #58	; 0x3a
   1a790:	bne	1a7c8 <main@@Base+0x4a78>
   1a794:	add	r1, sl, #1
   1a798:	sub	r0, r6, r1
   1a79c:	cmp	r0, #2
   1a7a0:	blt	1c568 <main@@Base+0x6818>
   1a7a4:	ldrb	r0, [r1]
   1a7a8:	cmp	r0, #32
   1a7ac:	bls	1c550 <main@@Base+0x6800>
   1a7b0:	ldr	r6, [sp, #36]	; 0x24
   1a7b4:	ldr	r9, [sp, #32]
   1a7b8:	mov	sl, r1
   1a7bc:	cmp	r7, sl
   1a7c0:	bne	1c580 <main@@Base+0x6830>
   1a7c4:	b	1eb94 <main@@Base+0x8e44>
   1a7c8:	mov	r0, r9
   1a7cc:	mov	r1, sl
   1a7d0:	mov	r2, r6
   1a7d4:	mov	r3, #4
   1a7d8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1a7dc:	b	1c574 <main@@Base+0x6824>
   1a7e0:	ldr	r4, [sp, #36]	; 0x24
   1a7e4:	bne	1a7f8 <main@@Base+0x4aa8>
   1a7e8:	mov	r6, sl
   1a7ec:	ldrb	r0, [r6, #18]!
   1a7f0:	cmp	r0, #32
   1a7f4:	bhi	1a808 <main@@Base+0x4ab8>
   1a7f8:	mov	r0, r9
   1a7fc:	mov	r2, r4
   1a800:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1a804:	mov	r6, r0
   1a808:	cmp	r6, r4
   1a80c:	beq	1a8c4 <main@@Base+0x4b74>
   1a810:	ldrb	r0, [r6]
   1a814:	cmp	r0, #58	; 0x3a
   1a818:	bne	1a8c4 <main@@Base+0x4b74>
   1a81c:	ldr	r0, [sp, #36]	; 0x24
   1a820:	add	r1, r6, #1
   1a824:	sub	r0, r0, r1
   1a828:	cmp	r0, #2
   1a82c:	blt	1c634 <main@@Base+0x68e4>
   1a830:	ldrb	r0, [r1]
   1a834:	cmp	r0, #32
   1a838:	bls	1c620 <main@@Base+0x68d0>
   1a83c:	ldr	r9, [sp, #32]
   1a840:	mov	r6, r1
   1a844:	cmp	r8, r6
   1a848:	bne	1c64c <main@@Base+0x68fc>
   1a84c:	ldr	r6, [sp, #36]	; 0x24
   1a850:	add	r7, sl, #16
   1a854:	mov	r1, #8
   1a858:	sub	r0, r6, r7
   1a85c:	cmp	r0, #8
   1a860:	movcc	r1, r0
   1a864:	sub	r1, r1, #1
   1a868:	cmp	r1, #7
   1a86c:	bhi	1eb94 <main@@Base+0x8e44>
   1a870:	ldrb	r1, [r7]
   1a874:	cmp	r1, #97	; 0x61
   1a878:	bne	1eb94 <main@@Base+0x8e44>
   1a87c:	cmp	r0, #2
   1a880:	blt	1eb94 <main@@Base+0x8e44>
   1a884:	ldrb	r0, [sl, #17]
   1a888:	cmp	r0, #34	; 0x22
   1a88c:	bne	1eb94 <main@@Base+0x8e44>
   1a890:	add	r1, sl, #18
   1a894:	sub	r0, r6, r1
   1a898:	cmp	r0, #2
   1a89c:	blt	1cc08 <main@@Base+0x6eb8>
   1a8a0:	ldrb	r0, [r1]
   1a8a4:	cmp	r0, #32
   1a8a8:	bls	1cbf0 <main@@Base+0x6ea0>
   1a8ac:	ldr	r6, [sp, #36]	; 0x24
   1a8b0:	ldr	r9, [sp, #32]
   1a8b4:	mov	sl, r1
   1a8b8:	cmp	sl, r6
   1a8bc:	bne	1cc20 <main@@Base+0x6ed0>
   1a8c0:	b	1cc60 <main@@Base+0x6f10>
   1a8c4:	ldr	r2, [sp, #36]	; 0x24
   1a8c8:	mov	r0, r9
   1a8cc:	mov	r1, r6
   1a8d0:	mov	r3, #4
   1a8d4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1a8d8:	b	1c640 <main@@Base+0x68f0>
   1a8dc:	ldr	r4, [sp, #36]	; 0x24
   1a8e0:	bne	1a8f4 <main@@Base+0x4ba4>
   1a8e4:	mov	r6, sl
   1a8e8:	ldrb	r0, [r6, #18]!
   1a8ec:	cmp	r0, #32
   1a8f0:	bhi	1a904 <main@@Base+0x4bb4>
   1a8f4:	mov	r0, r9
   1a8f8:	mov	r2, r4
   1a8fc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1a900:	mov	r6, r0
   1a904:	cmp	r6, r4
   1a908:	beq	1a9c0 <main@@Base+0x4c70>
   1a90c:	ldrb	r0, [r6]
   1a910:	cmp	r0, #58	; 0x3a
   1a914:	bne	1a9c0 <main@@Base+0x4c70>
   1a918:	ldr	r0, [sp, #36]	; 0x24
   1a91c:	add	r1, r6, #1
   1a920:	sub	r0, r0, r1
   1a924:	cmp	r0, #2
   1a928:	blt	1c720 <main@@Base+0x69d0>
   1a92c:	ldrb	r0, [r1]
   1a930:	cmp	r0, #32
   1a934:	bls	1c70c <main@@Base+0x69bc>
   1a938:	ldr	r9, [sp, #32]
   1a93c:	mov	r6, r1
   1a940:	cmp	r8, r6
   1a944:	bne	1c738 <main@@Base+0x69e8>
   1a948:	ldr	r6, [sp, #36]	; 0x24
   1a94c:	add	r7, sl, #16
   1a950:	mov	r1, #8
   1a954:	sub	r0, r6, r7
   1a958:	cmp	r0, #8
   1a95c:	movcc	r1, r0
   1a960:	sub	r1, r1, #1
   1a964:	cmp	r1, #7
   1a968:	bhi	1eb94 <main@@Base+0x8e44>
   1a96c:	ldrb	r1, [r7]
   1a970:	cmp	r1, #97	; 0x61
   1a974:	bne	1eb94 <main@@Base+0x8e44>
   1a978:	cmp	r0, #2
   1a97c:	blt	1eb94 <main@@Base+0x8e44>
   1a980:	ldrb	r0, [sl, #17]
   1a984:	cmp	r0, #34	; 0x22
   1a988:	bne	1eb94 <main@@Base+0x8e44>
   1a98c:	add	r1, sl, #18
   1a990:	sub	r0, r6, r1
   1a994:	cmp	r0, #2
   1a998:	blt	1cc90 <main@@Base+0x6f40>
   1a99c:	ldrb	r0, [r1]
   1a9a0:	cmp	r0, #32
   1a9a4:	bls	1cc78 <main@@Base+0x6f28>
   1a9a8:	ldr	r6, [sp, #36]	; 0x24
   1a9ac:	ldr	r9, [sp, #32]
   1a9b0:	mov	sl, r1
   1a9b4:	cmp	sl, r6
   1a9b8:	bne	1cca8 <main@@Base+0x6f58>
   1a9bc:	b	1cce8 <main@@Base+0x6f98>
   1a9c0:	ldr	r2, [sp, #36]	; 0x24
   1a9c4:	mov	r0, r9
   1a9c8:	mov	r1, r6
   1a9cc:	mov	r3, #4
   1a9d0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1a9d4:	b	1c72c <main@@Base+0x69dc>
   1a9d8:	mov	r0, r9
   1a9dc:	mov	r1, sl
   1a9e0:	mov	r2, r6
   1a9e4:	mov	r3, #9
   1a9e8:	b	19238 <main@@Base+0x34e8>
   1a9ec:	bne	1a9fc <main@@Base+0x4cac>
   1a9f0:	ldrb	r0, [r6, #2]!
   1a9f4:	cmp	r0, #32
   1a9f8:	bhi	1aa0c <main@@Base+0x4cbc>
   1a9fc:	ldr	r2, [sp, #36]	; 0x24
   1aa00:	mov	r0, r9
   1aa04:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1aa08:	mov	r6, r0
   1aa0c:	cmp	r8, r6
   1aa10:	beq	186e8 <main@@Base+0x2998>
   1aa14:	ldr	r2, [sp, #36]	; 0x24
   1aa18:	mov	r4, #0
   1aa1c:	str	r4, [fp, #-52]	; 0xffffffcc
   1aa20:	str	r4, [fp, #-56]	; 0xffffffc8
   1aa24:	str	r4, [sp, #60]	; 0x3c
   1aa28:	str	r4, [sp, #48]	; 0x30
   1aa2c:	cmp	r6, r2
   1aa30:	beq	1aa8c <main@@Base+0x4d3c>
   1aa34:	sub	r0, fp, #56	; 0x38
   1aa38:	mov	r1, r6
   1aa3c:	add	r3, sp, #48	; 0x30
   1aa40:	str	r0, [sp]
   1aa44:	mov	r0, r9
   1aa48:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1aa4c:	cmp	r0, r6
   1aa50:	beq	1aa9c <main@@Base+0x4d4c>
   1aa54:	ldr	r2, [sp, #48]	; 0x30
   1aa58:	mov	r8, r0
   1aa5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1aa60:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1aa64:	cmp	r2, #0
   1aa68:	beq	1aaac <main@@Base+0x4d5c>
   1aa6c:	subs	r2, r0, #-2147483647	; 0x80000001
   1aa70:	sbcs	r1, r1, #0
   1aa74:	bcc	1aadc <main@@Base+0x4d8c>
   1aa78:	ldr	r2, [sp, #36]	; 0x24
   1aa7c:	mov	r0, r9
   1aa80:	mov	r1, r8
   1aa84:	mov	r3, #8
   1aa88:	b	1aac8 <main@@Base+0x4d78>
   1aa8c:	mov	r8, r2
   1aa90:	cmp	r6, r8
   1aa94:	bne	1b3bc <main@@Base+0x566c>
   1aa98:	b	1b380 <main@@Base+0x5630>
   1aa9c:	mov	r8, r6
   1aaa0:	cmp	r6, r8
   1aaa4:	bne	1b3bc <main@@Base+0x566c>
   1aaa8:	b	1b380 <main@@Base+0x5630>
   1aaac:	subs	r2, r0, #-2147483648	; 0x80000000
   1aab0:	sbcs	r1, r1, #0
   1aab4:	bcc	1b370 <main@@Base+0x5620>
   1aab8:	ldr	r2, [sp, #36]	; 0x24
   1aabc:	mov	r0, r9
   1aac0:	mov	r1, r8
   1aac4:	mov	r3, #7
   1aac8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1aacc:	mov	r8, r0
   1aad0:	cmp	r6, r8
   1aad4:	bne	1b3bc <main@@Base+0x566c>
   1aad8:	b	1b380 <main@@Base+0x5630>
   1aadc:	rsb	r4, r0, #0
   1aae0:	str	r4, [sp, #60]	; 0x3c
   1aae4:	cmp	r6, r8
   1aae8:	bne	1b3bc <main@@Base+0x566c>
   1aaec:	b	1b380 <main@@Base+0x5630>
   1aaf0:	bne	1ab00 <main@@Base+0x4db0>
   1aaf4:	ldrb	r0, [sl, #19]!
   1aaf8:	cmp	r0, #32
   1aafc:	bhi	1ab10 <main@@Base+0x4dc0>
   1ab00:	mov	r0, r9
   1ab04:	mov	r2, r6
   1ab08:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ab0c:	mov	sl, r0
   1ab10:	cmp	sl, r6
   1ab14:	beq	1ab58 <main@@Base+0x4e08>
   1ab18:	ldrb	r0, [sl]
   1ab1c:	cmp	r0, #58	; 0x3a
   1ab20:	bne	1ab58 <main@@Base+0x4e08>
   1ab24:	add	r1, sl, #1
   1ab28:	sub	r0, r6, r1
   1ab2c:	cmp	r0, #2
   1ab30:	blt	1c8a8 <main@@Base+0x6b58>
   1ab34:	ldrb	r0, [r1]
   1ab38:	cmp	r0, #32
   1ab3c:	bls	1c890 <main@@Base+0x6b40>
   1ab40:	ldr	r6, [sp, #36]	; 0x24
   1ab44:	ldr	r9, [sp, #32]
   1ab48:	mov	sl, r1
   1ab4c:	cmp	r7, sl
   1ab50:	bne	1c8c0 <main@@Base+0x6b70>
   1ab54:	b	1eb94 <main@@Base+0x8e44>
   1ab58:	mov	r0, r9
   1ab5c:	mov	r1, sl
   1ab60:	mov	r2, r6
   1ab64:	mov	r3, #4
   1ab68:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1ab6c:	b	1c8b4 <main@@Base+0x6b64>
   1ab70:	bne	1ab80 <main@@Base+0x4e30>
   1ab74:	ldrb	r0, [sl, #11]!
   1ab78:	cmp	r0, #32
   1ab7c:	bhi	1ab90 <main@@Base+0x4e40>
   1ab80:	mov	r0, r9
   1ab84:	mov	r2, r6
   1ab88:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ab8c:	mov	sl, r0
   1ab90:	cmp	sl, r6
   1ab94:	beq	1abd8 <main@@Base+0x4e88>
   1ab98:	ldrb	r0, [sl]
   1ab9c:	cmp	r0, #58	; 0x3a
   1aba0:	bne	1abd8 <main@@Base+0x4e88>
   1aba4:	add	r1, sl, #1
   1aba8:	sub	r0, r6, r1
   1abac:	cmp	r0, #2
   1abb0:	blt	1c974 <main@@Base+0x6c24>
   1abb4:	ldrb	r0, [r1]
   1abb8:	cmp	r0, #32
   1abbc:	bls	1c95c <main@@Base+0x6c0c>
   1abc0:	ldr	r6, [sp, #36]	; 0x24
   1abc4:	ldr	r9, [sp, #32]
   1abc8:	mov	sl, r1
   1abcc:	cmp	r7, sl
   1abd0:	bne	1c98c <main@@Base+0x6c3c>
   1abd4:	b	1eb94 <main@@Base+0x8e44>
   1abd8:	mov	r0, r9
   1abdc:	mov	r1, sl
   1abe0:	mov	r2, r6
   1abe4:	mov	r3, #4
   1abe8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1abec:	b	1c980 <main@@Base+0x6c30>
   1abf0:	bne	1ac00 <main@@Base+0x4eb0>
   1abf4:	ldrb	r0, [sl, #11]!
   1abf8:	cmp	r0, #32
   1abfc:	bhi	1ac10 <main@@Base+0x4ec0>
   1ac00:	mov	r0, r9
   1ac04:	mov	r2, r6
   1ac08:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ac0c:	mov	sl, r0
   1ac10:	cmp	sl, r6
   1ac14:	beq	1ac58 <main@@Base+0x4f08>
   1ac18:	ldrb	r0, [sl]
   1ac1c:	cmp	r0, #58	; 0x3a
   1ac20:	bne	1ac58 <main@@Base+0x4f08>
   1ac24:	add	r1, sl, #1
   1ac28:	sub	r0, r6, r1
   1ac2c:	cmp	r0, #2
   1ac30:	blt	1ca34 <main@@Base+0x6ce4>
   1ac34:	ldrb	r0, [r1]
   1ac38:	cmp	r0, #32
   1ac3c:	bls	1ca1c <main@@Base+0x6ccc>
   1ac40:	ldr	r6, [sp, #36]	; 0x24
   1ac44:	ldr	r9, [sp, #32]
   1ac48:	mov	sl, r1
   1ac4c:	cmp	r7, sl
   1ac50:	bne	1ca4c <main@@Base+0x6cfc>
   1ac54:	b	1eb94 <main@@Base+0x8e44>
   1ac58:	mov	r0, r9
   1ac5c:	mov	r1, sl
   1ac60:	mov	r2, r6
   1ac64:	mov	r3, #4
   1ac68:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1ac6c:	b	1ca40 <main@@Base+0x6cf0>
   1ac70:	bne	1ac80 <main@@Base+0x4f30>
   1ac74:	ldrb	r0, [sl, #2]!
   1ac78:	cmp	r0, #32
   1ac7c:	bhi	1ac90 <main@@Base+0x4f40>
   1ac80:	mov	r0, r9
   1ac84:	mov	r2, r6
   1ac88:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ac8c:	mov	sl, r0
   1ac90:	cmp	sl, r6
   1ac94:	mov	r5, r6
   1ac98:	beq	1acac <main@@Base+0x4f5c>
   1ac9c:	ldrb	r0, [sl]
   1aca0:	cmp	r0, #93	; 0x5d
   1aca4:	beq	1af24 <main@@Base+0x51d4>
   1aca8:	mov	r5, sl
   1acac:	mov	r0, #0
   1acb0:	mov	r1, #1
   1acb4:	strb	r0, [sp, #60]	; 0x3c
   1acb8:	ldr	r0, [r9]
   1acbc:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   1acc0:	cmp	r0, #0
   1acc4:	beq	1fed8 <main@@Base+0xa188>
   1acc8:	mov	r7, r0
   1accc:	mov	sl, r5
   1acd0:	sub	r5, r6, sl
   1acd4:	cmp	r5, #4
   1acd8:	blt	1ad1c <main@@Base+0x4fcc>
   1acdc:	movw	r1, #36412	; 0x8e3c
   1ace0:	mov	r0, sl
   1ace4:	mov	r2, #4
   1ace8:	movt	r1, #4
   1acec:	bl	14ebc <bcmp@plt>
   1acf0:	cmp	r0, #0
   1acf4:	beq	1ad80 <main@@Base+0x5030>
   1acf8:	cmp	r5, #5
   1acfc:	blt	1ad1c <main@@Base+0x4fcc>
   1ad00:	movw	r1, #36417	; 0x8e41
   1ad04:	mov	r0, sl
   1ad08:	mov	r2, #5
   1ad0c:	movt	r1, #4
   1ad10:	bl	14ebc <bcmp@plt>
   1ad14:	cmp	r0, #0
   1ad18:	beq	1af04 <main@@Base+0x51b4>
   1ad1c:	mov	r5, #0
   1ad20:	cmp	sl, r6
   1ad24:	str	r5, [fp, #-52]	; 0xffffffcc
   1ad28:	str	r5, [fp, #-56]	; 0xffffffc8
   1ad2c:	str	r5, [sp, #48]	; 0x30
   1ad30:	beq	1ad78 <main@@Base+0x5028>
   1ad34:	sub	r0, fp, #56	; 0x38
   1ad38:	mov	r1, sl
   1ad3c:	mov	r2, r6
   1ad40:	add	r3, sp, #48	; 0x30
   1ad44:	str	r0, [sp]
   1ad48:	mov	r0, r9
   1ad4c:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1ad50:	cmp	r0, sl
   1ad54:	beq	1ad98 <main@@Base+0x5048>
   1ad58:	mov	r1, r0
   1ad5c:	ldr	r0, [sp, #48]	; 0x30
   1ad60:	cmp	r0, #0
   1ad64:	beq	1ada0 <main@@Base+0x5050>
   1ad68:	mov	r0, r9
   1ad6c:	mov	r2, r6
   1ad70:	mov	r3, #8
   1ad74:	b	1adc0 <main@@Base+0x5070>
   1ad78:	mov	r1, r6
   1ad7c:	b	1adc8 <main@@Base+0x5078>
   1ad80:	mov	r0, #1
   1ad84:	add	r1, sl, #4
   1ad88:	strb	r0, [sp, #60]	; 0x3c
   1ad8c:	cmp	sl, r1
   1ad90:	bne	1ae1c <main@@Base+0x50cc>
   1ad94:	b	1ade0 <main@@Base+0x5090>
   1ad98:	mov	r1, sl
   1ad9c:	b	1adc8 <main@@Base+0x5078>
   1ada0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ada4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ada8:	subs	r3, r0, #256	; 0x100
   1adac:	sbcs	r2, r2, #0
   1adb0:	bcc	1af1c <main@@Base+0x51cc>
   1adb4:	mov	r0, r9
   1adb8:	mov	r2, r6
   1adbc:	mov	r3, #7
   1adc0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1adc4:	mov	r1, r0
   1adc8:	uxtb	r0, r5
   1adcc:	cmp	r0, #0
   1add0:	movwne	r0, #1
   1add4:	strb	r0, [sp, #60]	; 0x3c
   1add8:	cmp	sl, r1
   1addc:	bne	1ae1c <main@@Base+0x50cc>
   1ade0:	add	r0, sp, #60	; 0x3c
   1ade4:	mov	r1, sl
   1ade8:	mov	r2, r6
   1adec:	str	r0, [sp]
   1adf0:	movw	r0, #53396	; 0xd094
   1adf4:	movt	r0, #5
   1adf8:	add	r3, r0, #48	; 0x30
   1adfc:	mov	r0, r9
   1ae00:	bl	23ff8 <main@@Base+0xe2a8>
   1ae04:	mov	r1, r0
   1ae08:	cmp	r0, sl
   1ae0c:	beq	1fed0 <main@@Base+0xa180>
   1ae10:	cmp	r1, r6
   1ae14:	beq	1fed0 <main@@Base+0xa180>
   1ae18:	ldrb	r0, [sp, #60]	; 0x3c
   1ae1c:	strb	r0, [r7]
   1ae20:	sub	r0, r6, r1
   1ae24:	cmp	r0, #2
   1ae28:	blt	1ae5c <main@@Base+0x510c>
   1ae2c:	ldrb	r0, [r1]
   1ae30:	cmp	r0, #32
   1ae34:	bls	1ae48 <main@@Base+0x50f8>
   1ae38:	mov	sl, r1
   1ae3c:	cmp	sl, r6
   1ae40:	bne	1ae74 <main@@Base+0x5124>
   1ae44:	b	1b90c <main@@Base+0x5bbc>
   1ae48:	bne	1ae5c <main@@Base+0x510c>
   1ae4c:	mov	sl, r1
   1ae50:	ldrb	r0, [sl, #1]!
   1ae54:	cmp	r0, #32
   1ae58:	bhi	1ae6c <main@@Base+0x511c>
   1ae5c:	mov	r0, r9
   1ae60:	mov	r2, r6
   1ae64:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ae68:	mov	sl, r0
   1ae6c:	cmp	sl, r6
   1ae70:	beq	1b90c <main@@Base+0x5bbc>
   1ae74:	ldrb	r0, [sl]
   1ae78:	cmp	r0, #44	; 0x2c
   1ae7c:	bne	1b914 <main@@Base+0x5bc4>
   1ae80:	add	r1, sl, #1
   1ae84:	sub	r0, r6, r1
   1ae88:	cmp	r0, #2
   1ae8c:	blt	1aebc <main@@Base+0x516c>
   1ae90:	ldrb	r0, [r1]
   1ae94:	cmp	r0, #32
   1ae98:	bls	1aeac <main@@Base+0x515c>
   1ae9c:	mov	sl, r1
   1aea0:	cmp	sl, r6
   1aea4:	bne	1aed4 <main@@Base+0x5184>
   1aea8:	b	1b9e4 <main@@Base+0x5c94>
   1aeac:	bne	1aebc <main@@Base+0x516c>
   1aeb0:	ldrb	r0, [sl, #2]!
   1aeb4:	cmp	r0, #32
   1aeb8:	bhi	1aecc <main@@Base+0x517c>
   1aebc:	mov	r0, r9
   1aec0:	mov	r2, r6
   1aec4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1aec8:	mov	sl, r0
   1aecc:	cmp	sl, r6
   1aed0:	beq	1b9e4 <main@@Base+0x5c94>
   1aed4:	ldrb	r0, [sl]
   1aed8:	cmp	r0, #93	; 0x5d
   1aedc:	beq	1af24 <main@@Base+0x51d4>
   1aee0:	mov	r0, #0
   1aee4:	mov	r1, #1
   1aee8:	strb	r0, [sp, #60]	; 0x3c
   1aeec:	ldr	r0, [r9]
   1aef0:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   1aef4:	mov	r7, r0
   1aef8:	cmp	r0, #0
   1aefc:	bne	1acd0 <main@@Base+0x4f80>
   1af00:	b	16640 <main@@Base+0x8f0>
   1af04:	mov	r0, #0
   1af08:	add	r1, sl, #5
   1af0c:	strb	r0, [sp, #60]	; 0x3c
   1af10:	cmp	sl, r1
   1af14:	bne	1ae1c <main@@Base+0x50cc>
   1af18:	b	1ade0 <main@@Base+0x5090>
   1af1c:	mov	r5, r0
   1af20:	b	1adc8 <main@@Base+0x5078>
   1af24:	add	r1, sl, #1
   1af28:	sub	r0, r6, r1
   1af2c:	cmp	r0, #2
   1af30:	blt	1b9d4 <main@@Base+0x5c84>
   1af34:	ldrb	r0, [r1]
   1af38:	cmp	r0, #32
   1af3c:	bls	1b9bc <main@@Base+0x5c6c>
   1af40:	ldr	r6, [sp, #36]	; 0x24
   1af44:	ldr	r9, [sp, #32]
   1af48:	mov	sl, r1
   1af4c:	b	197d8 <main@@Base+0x3a88>
   1af50:	bne	1af64 <main@@Base+0x5214>
   1af54:	mov	r8, sl
   1af58:	ldrb	r0, [r8, #17]!
   1af5c:	cmp	r0, #32
   1af60:	bhi	1af74 <main@@Base+0x5224>
   1af64:	ldr	r0, [sp, #32]
   1af68:	mov	r2, r6
   1af6c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1af70:	mov	r8, r0
   1af74:	cmp	r8, r6
   1af78:	beq	1afc4 <main@@Base+0x5274>
   1af7c:	ldrb	r0, [r8]
   1af80:	cmp	r0, #58	; 0x3a
   1af84:	bne	1afc4 <main@@Base+0x5274>
   1af88:	add	r1, r8, #1
   1af8c:	sub	r0, r6, r1
   1af90:	cmp	r0, #2
   1af94:	blt	1cb30 <main@@Base+0x6de0>
   1af98:	ldrb	r0, [r1]
   1af9c:	cmp	r0, #32
   1afa0:	bls	1cb1c <main@@Base+0x6dcc>
   1afa4:	ldr	r6, [sp, #36]	; 0x24
   1afa8:	mov	r8, r1
   1afac:	cmp	r9, r8
   1afb0:	bne	1cb48 <main@@Base+0x6df8>
   1afb4:	ldr	r0, [sp, #32]
   1afb8:	mov	r1, r9
   1afbc:	mov	r9, r0
   1afc0:	b	1eb9c <main@@Base+0x8e4c>
   1afc4:	ldr	r0, [sp, #32]
   1afc8:	mov	r1, r8
   1afcc:	mov	r2, r6
   1afd0:	mov	r3, #4
   1afd4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1afd8:	b	1cb3c <main@@Base+0x6dec>
   1afdc:	bne	1aff0 <main@@Base+0x52a0>
   1afe0:	mov	r8, sl
   1afe4:	ldrb	r0, [r8, #22]!
   1afe8:	cmp	r0, #32
   1afec:	bhi	1b000 <main@@Base+0x52b0>
   1aff0:	mov	r0, r9
   1aff4:	mov	r2, r6
   1aff8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1affc:	mov	r8, r0
   1b000:	cmp	r8, r6
   1b004:	beq	1b048 <main@@Base+0x52f8>
   1b008:	ldrb	r0, [r8]
   1b00c:	cmp	r0, #58	; 0x3a
   1b010:	bne	1b048 <main@@Base+0x52f8>
   1b014:	add	r1, r8, #1
   1b018:	sub	r0, r6, r1
   1b01c:	cmp	r0, #2
   1b020:	blt	1cd18 <main@@Base+0x6fc8>
   1b024:	ldrb	r0, [r1]
   1b028:	cmp	r0, #32
   1b02c:	bls	1cd00 <main@@Base+0x6fb0>
   1b030:	ldr	r6, [sp, #36]	; 0x24
   1b034:	ldr	r9, [sp, #32]
   1b038:	mov	r8, r1
   1b03c:	cmp	r7, r8
   1b040:	bne	1cd30 <main@@Base+0x6fe0>
   1b044:	b	1eb94 <main@@Base+0x8e44>
   1b048:	mov	r0, r9
   1b04c:	mov	r1, r8
   1b050:	mov	r2, r6
   1b054:	mov	r3, #4
   1b058:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1b05c:	b	1cd24 <main@@Base+0x6fd4>
   1b060:	bne	1b070 <main@@Base+0x5320>
   1b064:	ldrb	r0, [sl, #19]!
   1b068:	cmp	r0, #32
   1b06c:	bhi	1b080 <main@@Base+0x5330>
   1b070:	mov	r0, r9
   1b074:	mov	r2, r6
   1b078:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1b07c:	mov	sl, r0
   1b080:	cmp	sl, r6
   1b084:	beq	1b0c8 <main@@Base+0x5378>
   1b088:	ldrb	r0, [sl]
   1b08c:	cmp	r0, #58	; 0x3a
   1b090:	bne	1b0c8 <main@@Base+0x5378>
   1b094:	add	r1, sl, #1
   1b098:	sub	r0, r6, r1
   1b09c:	cmp	r0, #2
   1b0a0:	blt	1ce28 <main@@Base+0x70d8>
   1b0a4:	ldrb	r0, [r1]
   1b0a8:	cmp	r0, #32
   1b0ac:	bls	1ce10 <main@@Base+0x70c0>
   1b0b0:	ldr	r6, [sp, #36]	; 0x24
   1b0b4:	ldr	r9, [sp, #32]
   1b0b8:	mov	sl, r1
   1b0bc:	cmp	r7, sl
   1b0c0:	bne	1ce40 <main@@Base+0x70f0>
   1b0c4:	b	1eb94 <main@@Base+0x8e44>
   1b0c8:	mov	r0, r9
   1b0cc:	mov	r1, sl
   1b0d0:	mov	r2, r6
   1b0d4:	mov	r3, #4
   1b0d8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1b0dc:	b	1ce34 <main@@Base+0x70e4>
   1b0e0:	bne	1b0f0 <main@@Base+0x53a0>
   1b0e4:	ldrb	r0, [sl, #2]!
   1b0e8:	cmp	r0, #32
   1b0ec:	bhi	1b100 <main@@Base+0x53b0>
   1b0f0:	mov	r0, r9
   1b0f4:	mov	r2, r6
   1b0f8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1b0fc:	mov	sl, r0
   1b100:	cmp	r7, sl
   1b104:	beq	1eb94 <main@@Base+0x8e44>
   1b108:	mov	r0, #0
   1b10c:	mov	r1, #3
   1b110:	str	r0, [sp, #44]	; 0x2c
   1b114:	ldr	r0, [r9]
   1b118:	bl	2fa58 <flatcc_builder_start_table@@Base>
   1b11c:	cmp	r0, #0
   1b120:	bne	1b190 <main@@Base+0x5440>
   1b124:	cmp	sl, r6
   1b128:	beq	1b16c <main@@Base+0x541c>
   1b12c:	ldrb	r0, [sl]
   1b130:	cmp	r0, #123	; 0x7b
   1b134:	bne	1b16c <main@@Base+0x541c>
   1b138:	add	r1, sl, #1
   1b13c:	sub	r0, r6, r1
   1b140:	cmp	r0, #2
   1b144:	blt	1d6e4 <main@@Base+0x7994>
   1b148:	ldrb	r0, [r1]
   1b14c:	cmp	r0, #32
   1b150:	bls	1d6cc <main@@Base+0x797c>
   1b154:	ldr	r6, [sp, #36]	; 0x24
   1b158:	mov	sl, r1
   1b15c:	cmp	sl, r6
   1b160:	mov	r2, r6
   1b164:	bne	1d700 <main@@Base+0x79b0>
   1b168:	b	1d750 <main@@Base+0x7a00>
   1b16c:	mov	r0, r9
   1b170:	mov	r1, sl
   1b174:	mov	r2, r6
   1b178:	mov	r3, #21
   1b17c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1b180:	mov	sl, r0
   1b184:	ldr	r0, [r9, #20]
   1b188:	cmp	r0, #0
   1b18c:	beq	1e5b8 <main@@Base+0x8868>
   1b190:	mov	r0, r9
   1b194:	mov	r1, sl
   1b198:	mov	r2, r6
   1b19c:	mov	r3, #33	; 0x21
   1b1a0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1b1a4:	mov	sl, r0
   1b1a8:	ldr	r0, [sp, #44]	; 0x2c
   1b1ac:	cmp	r0, #0
   1b1b0:	beq	16640 <main@@Base+0x8f0>
   1b1b4:	ldr	r0, [r9]
   1b1b8:	mov	r1, #35	; 0x23
   1b1bc:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1b1c0:	cmp	r0, #0
   1b1c4:	bne	1fde4 <main@@Base+0xa094>
   1b1c8:	b	16640 <main@@Base+0x8f0>
   1b1cc:	mov	r0, r9
   1b1d0:	mov	r1, r2
   1b1d4:	mov	r2, r6
   1b1d8:	mov	r3, #10
   1b1dc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1b1e0:	b	1eba4 <main@@Base+0x8e54>
   1b1e4:	bne	1b1f4 <main@@Base+0x54a4>
   1b1e8:	ldrb	r0, [sl, #2]!
   1b1ec:	cmp	r0, #32
   1b1f0:	bhi	1b204 <main@@Base+0x54b4>
   1b1f4:	mov	r0, r9
   1b1f8:	mov	r2, r6
   1b1fc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1b200:	mov	sl, r0
   1b204:	cmp	r7, sl
   1b208:	beq	1eb94 <main@@Base+0x8e44>
   1b20c:	ldr	r0, [r9]
   1b210:	bl	2f528 <flatcc_builder_start_offset_vector@@Base>
   1b214:	cmp	r0, #0
   1b218:	bne	16640 <main@@Base+0x8f0>
   1b21c:	cmp	sl, r6
   1b220:	beq	1b260 <main@@Base+0x5510>
   1b224:	ldrb	r0, [sl]
   1b228:	cmp	r0, #91	; 0x5b
   1b22c:	bne	1b260 <main@@Base+0x5510>
   1b230:	add	r1, sl, #1
   1b234:	sub	r0, r6, r1
   1b238:	cmp	r0, #2
   1b23c:	blt	1ba00 <main@@Base+0x5cb0>
   1b240:	ldrb	r0, [r1]
   1b244:	cmp	r0, #32
   1b248:	bls	1b9f0 <main@@Base+0x5ca0>
   1b24c:	mov	sl, r1
   1b250:	cmp	sl, r6
   1b254:	mov	r2, r6
   1b258:	bne	1ba1c <main@@Base+0x5ccc>
   1b25c:	b	1ba64 <main@@Base+0x5d14>
   1b260:	mov	r0, r9
   1b264:	mov	r1, sl
   1b268:	mov	r2, r6
   1b26c:	mov	r3, #22
   1b270:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1b274:	mov	sl, r0
   1b278:	ldr	r0, [r9]
   1b27c:	bl	2f7e0 <flatcc_builder_end_offset_vector@@Base>
   1b280:	cmp	r0, #0
   1b284:	str	r0, [sp, #44]	; 0x2c
   1b288:	beq	16640 <main@@Base+0x8f0>
   1b28c:	ldr	r0, [r9]
   1b290:	mov	r1, #28
   1b294:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1b298:	cmp	r0, #0
   1b29c:	bne	1fde4 <main@@Base+0xa094>
   1b2a0:	b	16640 <main@@Base+0x8f0>
   1b2a4:	bne	1b2b4 <main@@Base+0x5564>
   1b2a8:	ldrb	r0, [sl, #2]!
   1b2ac:	cmp	r0, #32
   1b2b0:	bhi	1b2c4 <main@@Base+0x5574>
   1b2b4:	mov	r0, r9
   1b2b8:	mov	r2, r6
   1b2bc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1b2c0:	mov	sl, r0
   1b2c4:	cmp	r8, sl
   1b2c8:	beq	1b8a0 <main@@Base+0x5b50>
   1b2cc:	ldr	r0, [r9]
   1b2d0:	mov	r1, #8
   1b2d4:	mov	r2, #4
   1b2d8:	mvn	r3, #-536870912	; 0xe0000000
   1b2dc:	bl	2f49c <flatcc_builder_start_vector@@Base>
   1b2e0:	cmp	r0, #0
   1b2e4:	bne	16640 <main@@Base+0x8f0>
   1b2e8:	cmp	sl, r6
   1b2ec:	beq	1b32c <main@@Base+0x55dc>
   1b2f0:	ldrb	r0, [sl]
   1b2f4:	cmp	r0, #91	; 0x5b
   1b2f8:	bne	1b32c <main@@Base+0x55dc>
   1b2fc:	add	r1, sl, #1
   1b300:	sub	r0, r6, r1
   1b304:	cmp	r0, #2
   1b308:	blt	1bb90 <main@@Base+0x5e40>
   1b30c:	ldrb	r0, [r1]
   1b310:	cmp	r0, #32
   1b314:	bls	1bb7c <main@@Base+0x5e2c>
   1b318:	mov	r8, r1
   1b31c:	cmp	r8, r6
   1b320:	mov	sl, r6
   1b324:	bne	1bbac <main@@Base+0x5e5c>
   1b328:	b	1bbf4 <main@@Base+0x5ea4>
   1b32c:	mov	r0, r9
   1b330:	mov	r1, sl
   1b334:	mov	r2, r6
   1b338:	mov	r3, #22
   1b33c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1b340:	mov	r8, r0
   1b344:	ldr	r0, [r9]
   1b348:	bl	30714 <flatcc_builder_end_vector@@Base>
   1b34c:	cmp	r0, #0
   1b350:	str	r0, [sp, #44]	; 0x2c
   1b354:	beq	1fee4 <main@@Base+0xa194>
   1b358:	ldr	r0, [r9]
   1b35c:	mov	r1, #29
   1b360:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1b364:	cmp	r0, #0
   1b368:	bne	19268 <main@@Base+0x3518>
   1b36c:	b	1fee4 <main@@Base+0xa194>
   1b370:	mov	r4, r0
   1b374:	str	r4, [sp, #60]	; 0x3c
   1b378:	cmp	r6, r8
   1b37c:	bne	1b3bc <main@@Base+0x566c>
   1b380:	add	r0, sp, #60	; 0x3c
   1b384:	ldr	r4, [sp, #36]	; 0x24
   1b388:	mov	r1, r6
   1b38c:	str	r0, [sp]
   1b390:	movw	r0, #53396	; 0xd094
   1b394:	movt	r0, #5
   1b398:	add	r3, r0, #108	; 0x6c
   1b39c:	mov	r0, r9
   1b3a0:	mov	r2, r4
   1b3a4:	bl	2437c <main@@Base+0xe62c>
   1b3a8:	mov	r8, r0
   1b3ac:	cmp	r0, r6
   1b3b0:	cmpne	r8, r4
   1b3b4:	beq	1fe94 <main@@Base+0xa144>
   1b3b8:	ldr	r4, [sp, #60]	; 0x3c
   1b3bc:	ldr	r6, [sp, #36]	; 0x24
   1b3c0:	cmp	r4, #0
   1b3c4:	bne	1b3d4 <main@@Base+0x5684>
   1b3c8:	ldrb	r0, [r9, #8]
   1b3cc:	tst	r0, #2
   1b3d0:	beq	1eba8 <main@@Base+0x8e58>
   1b3d4:	ldr	r0, [r9]
   1b3d8:	mov	r1, #16
   1b3dc:	b	1d188 <main@@Base+0x7438>
   1b3e0:	bne	1b3f0 <main@@Base+0x56a0>
   1b3e4:	ldrb	r0, [r7, #2]!
   1b3e8:	cmp	r0, #32
   1b3ec:	bhi	1b400 <main@@Base+0x56b0>
   1b3f0:	mov	r0, r9
   1b3f4:	mov	r2, r6
   1b3f8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1b3fc:	mov	r7, r0
   1b400:	cmp	sl, r7
   1b404:	beq	1921c <main@@Base+0x34cc>
   1b408:	mov	r4, #0
   1b40c:	cmp	r7, r6
   1b410:	str	r4, [fp, #-52]	; 0xffffffcc
   1b414:	str	r4, [fp, #-56]	; 0xffffffc8
   1b418:	strh	r4, [sp, #60]	; 0x3c
   1b41c:	str	r4, [sp, #48]	; 0x30
   1b420:	beq	1b484 <main@@Base+0x5734>
   1b424:	sub	r0, fp, #56	; 0x38
   1b428:	mov	r1, r7
   1b42c:	mov	r2, r6
   1b430:	add	r3, sp, #48	; 0x30
   1b434:	str	r0, [sp]
   1b438:	mov	r0, r9
   1b43c:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1b440:	cmp	r0, r7
   1b444:	beq	1b494 <main@@Base+0x5744>
   1b448:	ldr	r2, [sp, #48]	; 0x30
   1b44c:	mov	r8, r0
   1b450:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b454:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1b458:	cmp	r2, #0
   1b45c:	beq	1b4a4 <main@@Base+0x5754>
   1b460:	movw	r2, #32769	; 0x8001
   1b464:	subs	r2, r0, r2
   1b468:	sbcs	r1, r1, #0
   1b46c:	bcc	1b4d4 <main@@Base+0x5784>
   1b470:	mov	r0, r9
   1b474:	mov	r1, r8
   1b478:	mov	r2, r6
   1b47c:	mov	r3, #8
   1b480:	b	1b4c0 <main@@Base+0x5770>
   1b484:	mov	r8, r6
   1b488:	cmp	r7, r8
   1b48c:	bne	1b530 <main@@Base+0x57e0>
   1b490:	b	1b4f8 <main@@Base+0x57a8>
   1b494:	mov	r8, r7
   1b498:	cmp	r7, r8
   1b49c:	bne	1b530 <main@@Base+0x57e0>
   1b4a0:	b	1b4f8 <main@@Base+0x57a8>
   1b4a4:	subs	r2, r0, #32768	; 0x8000
   1b4a8:	sbcs	r1, r1, #0
   1b4ac:	bcc	1b4e8 <main@@Base+0x5798>
   1b4b0:	mov	r0, r9
   1b4b4:	mov	r1, r8
   1b4b8:	mov	r2, r6
   1b4bc:	mov	r3, #7
   1b4c0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1b4c4:	mov	r8, r0
   1b4c8:	cmp	r7, r8
   1b4cc:	bne	1b530 <main@@Base+0x57e0>
   1b4d0:	b	1b4f8 <main@@Base+0x57a8>
   1b4d4:	rsb	r4, r0, #0
   1b4d8:	strh	r4, [sp, #60]	; 0x3c
   1b4dc:	cmp	r7, r8
   1b4e0:	bne	1b530 <main@@Base+0x57e0>
   1b4e4:	b	1b4f8 <main@@Base+0x57a8>
   1b4e8:	mov	r4, r0
   1b4ec:	strh	r4, [sp, #60]	; 0x3c
   1b4f0:	cmp	r7, r8
   1b4f4:	bne	1b530 <main@@Base+0x57e0>
   1b4f8:	add	r0, sp, #60	; 0x3c
   1b4fc:	mov	r1, r7
   1b500:	mov	r2, r6
   1b504:	str	r0, [sp]
   1b508:	movw	r0, #53396	; 0xd094
   1b50c:	movt	r0, #5
   1b510:	add	r3, r0, #36	; 0x24
   1b514:	mov	r0, r9
   1b518:	bl	22194 <main@@Base+0xc444>
   1b51c:	mov	r8, r0
   1b520:	cmp	r0, r7
   1b524:	cmpne	r8, r6
   1b528:	beq	1fe94 <main@@Base+0xa144>
   1b52c:	ldrh	r4, [sp, #60]	; 0x3c
   1b530:	uxth	r0, r4
   1b534:	cmp	r0, #150	; 0x96
   1b538:	bne	1b548 <main@@Base+0x57f8>
   1b53c:	ldrb	r0, [r9, #8]
   1b540:	tst	r0, #2
   1b544:	beq	1eba8 <main@@Base+0x8e58>
   1b548:	ldr	r0, [r9]
   1b54c:	mov	r1, #1
   1b550:	mov	r2, #2
   1b554:	mov	r3, #2
   1b558:	bl	30dac <flatcc_builder_table_add@@Base>
   1b55c:	cmp	r0, #0
   1b560:	beq	1fe94 <main@@Base+0xa144>
   1b564:	strh	r4, [r0]
   1b568:	sub	r0, r6, r8
   1b56c:	cmp	r0, #2
   1b570:	bge	1ebb4 <main@@Base+0x8e64>
   1b574:	b	1ec28 <main@@Base+0x8ed8>
   1b578:	bne	1b588 <main@@Base+0x5838>
   1b57c:	ldrb	r0, [r7, #2]!
   1b580:	cmp	r0, #32
   1b584:	bhi	1b598 <main@@Base+0x5848>
   1b588:	mov	r0, r9
   1b58c:	mov	r2, r6
   1b590:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1b594:	mov	r7, r0
   1b598:	cmp	sl, r7
   1b59c:	beq	1921c <main@@Base+0x34cc>
   1b5a0:	mov	r0, #0
   1b5a4:	mov	r1, r7
   1b5a8:	mov	r2, r6
   1b5ac:	sub	r3, fp, #56	; 0x38
   1b5b0:	str	r0, [fp, #-56]	; 0xffffffc8
   1b5b4:	mov	r0, r9
   1b5b8:	bl	36a70 <flatcc_json_parser_float@@Base>
   1b5bc:	mov	r8, r0
   1b5c0:	cmp	r7, r0
   1b5c4:	bne	1b5fc <main@@Base+0x58ac>
   1b5c8:	sub	r0, fp, #56	; 0x38
   1b5cc:	mov	r1, r7
   1b5d0:	mov	r2, r6
   1b5d4:	str	r0, [sp]
   1b5d8:	movw	r0, #53396	; 0xd094
   1b5dc:	movt	r0, #5
   1b5e0:	add	r3, r0, #84	; 0x54
   1b5e4:	mov	r0, r9
   1b5e8:	bl	241d8 <main@@Base+0xe488>
   1b5ec:	mov	r8, r0
   1b5f0:	cmp	r0, r7
   1b5f4:	cmpne	r8, r6
   1b5f8:	beq	1fee4 <main@@Base+0xa194>
   1b5fc:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1b600:	vcmp.f32	s0, s18
   1b604:	vmrs	APSR_nzcv, fpscr
   1b608:	bne	1b618 <main@@Base+0x58c8>
   1b60c:	ldrb	r0, [r9, #8]
   1b610:	tst	r0, #2
   1b614:	beq	1eba8 <main@@Base+0x8e58>
   1b618:	ldr	r0, [r9]
   1b61c:	mov	r1, #25
   1b620:	b	181dc <main@@Base+0x248c>
   1b624:	bne	1b634 <main@@Base+0x58e4>
   1b628:	ldrb	r0, [r6, #2]!
   1b62c:	cmp	r0, #32
   1b630:	bhi	1b644 <main@@Base+0x58f4>
   1b634:	ldr	r2, [sp, #36]	; 0x24
   1b638:	mov	r0, r9
   1b63c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1b640:	mov	r6, r0
   1b644:	cmp	r8, r6
   1b648:	beq	19080 <main@@Base+0x3330>
   1b64c:	ldr	r2, [sp, #36]	; 0x24
   1b650:	mov	r4, #0
   1b654:	str	r4, [fp, #-52]	; 0xffffffcc
   1b658:	str	r4, [fp, #-56]	; 0xffffffc8
   1b65c:	str	r4, [sp, #52]	; 0x34
   1b660:	str	r4, [sp, #48]	; 0x30
   1b664:	str	r4, [sp, #60]	; 0x3c
   1b668:	cmp	r6, r2
   1b66c:	beq	1b6c8 <main@@Base+0x5978>
   1b670:	sub	r0, fp, #56	; 0x38
   1b674:	mov	r1, r6
   1b678:	add	r3, sp, #60	; 0x3c
   1b67c:	str	r0, [sp]
   1b680:	mov	r0, r9
   1b684:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1b688:	cmp	r0, r6
   1b68c:	beq	1b6dc <main@@Base+0x598c>
   1b690:	mov	r8, r0
   1b694:	ldr	r0, [sp, #60]	; 0x3c
   1b698:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1b69c:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1b6a0:	cmp	r0, #0
   1b6a4:	beq	1b6f4 <main@@Base+0x59a4>
   1b6a8:	subs	r0, r4, #1
   1b6ac:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1b6b0:	bcc	1b728 <main@@Base+0x59d8>
   1b6b4:	ldr	r2, [sp, #36]	; 0x24
   1b6b8:	mov	r0, r9
   1b6bc:	mov	r1, r8
   1b6c0:	mov	r3, #8
   1b6c4:	b	1b70c <main@@Base+0x59bc>
   1b6c8:	mov	r5, #0
   1b6cc:	mov	r8, r2
   1b6d0:	cmp	r6, r8
   1b6d4:	bne	1b780 <main@@Base+0x5a30>
   1b6d8:	b	1b740 <main@@Base+0x59f0>
   1b6dc:	mov	r4, #0
   1b6e0:	mov	r5, #0
   1b6e4:	mov	r8, r6
   1b6e8:	cmp	r6, r8
   1b6ec:	bne	1b780 <main@@Base+0x5a30>
   1b6f0:	b	1b740 <main@@Base+0x59f0>
   1b6f4:	cmn	r5, #1
   1b6f8:	bgt	1b730 <main@@Base+0x59e0>
   1b6fc:	ldr	r2, [sp, #36]	; 0x24
   1b700:	mov	r0, r9
   1b704:	mov	r1, r8
   1b708:	mov	r3, #7
   1b70c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1b710:	mov	r8, r0
   1b714:	mov	r4, #0
   1b718:	mov	r5, #0
   1b71c:	cmp	r6, r8
   1b720:	bne	1b780 <main@@Base+0x5a30>
   1b724:	b	1b740 <main@@Base+0x59f0>
   1b728:	rsbs	r4, r4, #0
   1b72c:	rsc	r5, r5, #0
   1b730:	str	r4, [sp, #48]	; 0x30
   1b734:	str	r5, [sp, #52]	; 0x34
   1b738:	cmp	r6, r8
   1b73c:	bne	1b780 <main@@Base+0x5a30>
   1b740:	add	r0, sp, #48	; 0x30
   1b744:	ldr	r4, [sp, #36]	; 0x24
   1b748:	mov	r1, r6
   1b74c:	str	r0, [sp]
   1b750:	movw	r0, #53516	; 0xd10c
   1b754:	movt	r0, #5
   1b758:	add	r3, r0, #12
   1b75c:	mov	r0, r9
   1b760:	mov	r2, r4
   1b764:	bl	24594 <main@@Base+0xe844>
   1b768:	mov	r8, r0
   1b76c:	cmp	r0, r6
   1b770:	cmpne	r8, r4
   1b774:	beq	1fe94 <main@@Base+0xa144>
   1b778:	ldr	r4, [sp, #48]	; 0x30
   1b77c:	ldr	r5, [sp, #52]	; 0x34
   1b780:	ldr	r6, [sp, #36]	; 0x24
   1b784:	orrs	r0, r4, r5
   1b788:	bne	1b798 <main@@Base+0x5a48>
   1b78c:	ldrb	r0, [r9, #8]
   1b790:	tst	r0, #2
   1b794:	beq	1eba8 <main@@Base+0x8e58>
   1b798:	ldr	r0, [r9]
   1b79c:	mov	r1, #18
   1b7a0:	b	1c860 <main@@Base+0x6b10>
   1b7a4:	beq	1cafc <main@@Base+0x6dac>
   1b7a8:	b	1cb0c <main@@Base+0x6dbc>
   1b7ac:	bne	1b7bc <main@@Base+0x5a6c>
   1b7b0:	ldrb	r0, [sl, #2]!
   1b7b4:	cmp	r0, #32
   1b7b8:	bhi	1b7cc <main@@Base+0x5a7c>
   1b7bc:	mov	r0, r9
   1b7c0:	mov	r2, r6
   1b7c4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1b7c8:	mov	sl, r0
   1b7cc:	cmp	r7, sl
   1b7d0:	beq	1eb94 <main@@Base+0x8e44>
   1b7d4:	ldr	r0, [sp, #40]	; 0x28
   1b7d8:	movw	r1, #53876	; 0xd274
   1b7dc:	mov	r2, #8
   1b7e0:	mov	r3, #0
   1b7e4:	movt	r1, #5
   1b7e8:	str	r2, [sp]
   1b7ec:	mov	r2, r6
   1b7f0:	add	r1, r1, #64	; 0x40
   1b7f4:	stmib	sp, {r0, r1}
   1b7f8:	movw	r0, #11104	; 0x2b60
   1b7fc:	mov	r1, sl
   1b800:	movt	r0, #2
   1b804:	str	r0, [sp, #12]
   1b808:	mov	r0, r9
   1b80c:	bl	37714 <flatcc_json_parser_union_type@@Base>
   1b810:	b	1eba4 <main@@Base+0x8e54>
   1b814:	bne	1b824 <main@@Base+0x5ad4>
   1b818:	ldrb	r0, [sl, #2]!
   1b81c:	cmp	r0, #32
   1b820:	bhi	1b834 <main@@Base+0x5ae4>
   1b824:	mov	r0, r9
   1b828:	mov	r2, r6
   1b82c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1b830:	mov	sl, r0
   1b834:	cmp	r8, sl
   1b838:	beq	1b8a0 <main@@Base+0x5b50>
   1b83c:	mov	r0, #0
   1b840:	mov	r1, #0
   1b844:	str	r0, [sp, #44]	; 0x2c
   1b848:	ldr	r0, [r9]
   1b84c:	bl	2fa58 <flatcc_builder_start_table@@Base>
   1b850:	cmp	r0, #0
   1b854:	bne	1b8d0 <main@@Base+0x5b80>
   1b858:	cmp	sl, r6
   1b85c:	beq	1b8ac <main@@Base+0x5b5c>
   1b860:	ldrb	r0, [sl]
   1b864:	cmp	r0, #123	; 0x7b
   1b868:	bne	1b8ac <main@@Base+0x5b5c>
   1b86c:	add	r1, sl, #1
   1b870:	sub	r0, r6, r1
   1b874:	cmp	r0, #2
   1b878:	blt	1e32c <main@@Base+0x85dc>
   1b87c:	ldrb	r0, [r1]
   1b880:	cmp	r0, #32
   1b884:	bls	1e318 <main@@Base+0x85c8>
   1b888:	ldr	r6, [sp, #36]	; 0x24
   1b88c:	mov	sl, r1
   1b890:	cmp	sl, r6
   1b894:	mov	r3, r6
   1b898:	bne	1e348 <main@@Base+0x85f8>
   1b89c:	b	1e398 <main@@Base+0x8648>
   1b8a0:	mov	r0, r9
   1b8a4:	mov	r1, r8
   1b8a8:	b	1eb9c <main@@Base+0x8e4c>
   1b8ac:	mov	r0, r9
   1b8b0:	mov	r1, sl
   1b8b4:	mov	r2, r6
   1b8b8:	mov	r3, #21
   1b8bc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1b8c0:	mov	sl, r0
   1b8c4:	ldr	r0, [r9, #20]
   1b8c8:	cmp	r0, #0
   1b8cc:	beq	1e9b0 <main@@Base+0x8c60>
   1b8d0:	mov	r0, r9
   1b8d4:	mov	r1, sl
   1b8d8:	mov	r2, r6
   1b8dc:	mov	r3, #33	; 0x21
   1b8e0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1b8e4:	mov	sl, r0
   1b8e8:	ldr	r0, [sp, #44]	; 0x2c
   1b8ec:	cmp	r0, #0
   1b8f0:	beq	16640 <main@@Base+0x8f0>
   1b8f4:	ldr	r0, [r9]
   1b8f8:	mov	r1, #34	; 0x22
   1b8fc:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1b900:	cmp	r0, #0
   1b904:	bne	1fde4 <main@@Base+0xa094>
   1b908:	b	16640 <main@@Base+0x8f0>
   1b90c:	mov	sl, r6
   1b910:	b	197d8 <main@@Base+0x3a88>
   1b914:	cmp	r0, #93	; 0x5d
   1b918:	bne	1cf24 <main@@Base+0x71d4>
   1b91c:	ldr	r6, [sp, #36]	; 0x24
   1b920:	ldr	r9, [sp, #32]
   1b924:	add	r1, sl, #1
   1b928:	sub	r0, r6, r1
   1b92c:	cmp	r0, #2
   1b930:	bge	1af34 <main@@Base+0x51e4>
   1b934:	b	1b9d4 <main@@Base+0x5c84>
   1b938:	bne	1b94c <main@@Base+0x5bfc>
   1b93c:	mov	r8, sl
   1b940:	ldrb	r0, [r8, #19]!
   1b944:	cmp	r0, #32
   1b948:	bhi	1b95c <main@@Base+0x5c0c>
   1b94c:	mov	r0, r9
   1b950:	mov	r2, r6
   1b954:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1b958:	mov	r8, r0
   1b95c:	cmp	r8, r6
   1b960:	beq	1b9a4 <main@@Base+0x5c54>
   1b964:	ldrb	r0, [r8]
   1b968:	cmp	r0, #58	; 0x3a
   1b96c:	bne	1b9a4 <main@@Base+0x5c54>
   1b970:	add	r1, r8, #1
   1b974:	sub	r0, r6, r1
   1b978:	cmp	r0, #2
   1b97c:	blt	1e0ac <main@@Base+0x835c>
   1b980:	ldrb	r0, [r1]
   1b984:	cmp	r0, #32
   1b988:	bls	1e094 <main@@Base+0x8344>
   1b98c:	ldr	r6, [sp, #36]	; 0x24
   1b990:	ldr	r9, [sp, #32]
   1b994:	mov	r8, r1
   1b998:	cmp	r7, r8
   1b99c:	bne	1e0c4 <main@@Base+0x8374>
   1b9a0:	b	1eb94 <main@@Base+0x8e44>
   1b9a4:	mov	r0, r9
   1b9a8:	mov	r1, r8
   1b9ac:	mov	r2, r6
   1b9b0:	mov	r3, #4
   1b9b4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1b9b8:	b	1e0b8 <main@@Base+0x8368>
   1b9bc:	ldr	r6, [sp, #36]	; 0x24
   1b9c0:	ldr	r9, [sp, #32]
   1b9c4:	bne	1b9d4 <main@@Base+0x5c84>
   1b9c8:	ldrb	r0, [sl, #2]!
   1b9cc:	cmp	r0, #32
   1b9d0:	bhi	197d8 <main@@Base+0x3a88>
   1b9d4:	mov	r0, r9
   1b9d8:	mov	r2, r6
   1b9dc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1b9e0:	b	197d4 <main@@Base+0x3a84>
   1b9e4:	mov	r0, r9
   1b9e8:	mov	r1, r6
   1b9ec:	b	1cf34 <main@@Base+0x71e4>
   1b9f0:	bne	1ba00 <main@@Base+0x5cb0>
   1b9f4:	ldrb	r0, [sl, #2]!
   1b9f8:	cmp	r0, #32
   1b9fc:	bhi	1ba10 <main@@Base+0x5cc0>
   1ba00:	mov	r0, r9
   1ba04:	mov	r2, r6
   1ba08:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ba0c:	mov	sl, r0
   1ba10:	cmp	sl, r6
   1ba14:	mov	r2, r6
   1ba18:	beq	1ba64 <main@@Base+0x5d14>
   1ba1c:	ldrb	r0, [sl]
   1ba20:	cmp	r0, #93	; 0x5d
   1ba24:	bne	1ba60 <main@@Base+0x5d10>
   1ba28:	add	r1, sl, #1
   1ba2c:	sub	r0, r6, r1
   1ba30:	cmp	r0, #2
   1ba34:	blt	1f8e4 <main@@Base+0x9b94>
   1ba38:	ldrb	r0, [r1]
   1ba3c:	cmp	r0, #32
   1ba40:	bhi	1d6b0 <main@@Base+0x7960>
   1ba44:	ldr	r6, [sp, #36]	; 0x24
   1ba48:	ldr	r9, [sp, #32]
   1ba4c:	bne	1f8e4 <main@@Base+0x9b94>
   1ba50:	ldrb	r0, [sl, #2]!
   1ba54:	cmp	r0, #32
   1ba58:	bhi	1b278 <main@@Base+0x5528>
   1ba5c:	b	1f8e4 <main@@Base+0x9b94>
   1ba60:	mov	r2, sl
   1ba64:	mov	r1, r2
   1ba68:	mov	r0, r9
   1ba6c:	mov	r2, r6
   1ba70:	add	r3, sp, #44	; 0x2c
   1ba74:	bl	37198 <flatcc_json_parser_build_string@@Base>
   1ba78:	mov	sl, r0
   1ba7c:	ldr	r0, [sp, #44]	; 0x2c
   1ba80:	cmp	r0, #0
   1ba84:	beq	16640 <main@@Base+0x8f0>
   1ba88:	ldr	r0, [r9]
   1ba8c:	mov	r1, #1
   1ba90:	bl	2ece4 <flatcc_builder_extend_offset_vector@@Base>
   1ba94:	cmp	r0, #0
   1ba98:	beq	16640 <main@@Base+0x8f0>
   1ba9c:	ldr	r1, [sp, #44]	; 0x2c
   1baa0:	str	r1, [r0]
   1baa4:	sub	r0, r6, sl
   1baa8:	cmp	r0, #2
   1baac:	blt	1bae0 <main@@Base+0x5d90>
   1bab0:	ldrb	r0, [sl]
   1bab4:	cmp	r0, #32
   1bab8:	bls	1bacc <main@@Base+0x5d7c>
   1babc:	mov	r2, sl
   1bac0:	cmp	r2, r6
   1bac4:	bne	1bafc <main@@Base+0x5dac>
   1bac8:	b	1d650 <main@@Base+0x7900>
   1bacc:	bne	1bae0 <main@@Base+0x5d90>
   1bad0:	mov	r2, sl
   1bad4:	ldrb	r0, [r2, #1]!
   1bad8:	cmp	r0, #32
   1badc:	bhi	1baf4 <main@@Base+0x5da4>
   1bae0:	mov	r0, r9
   1bae4:	mov	r1, sl
   1bae8:	mov	r2, r6
   1baec:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1baf0:	mov	r2, r0
   1baf4:	cmp	r2, r6
   1baf8:	beq	1d650 <main@@Base+0x7900>
   1bafc:	ldrb	r0, [r2]
   1bb00:	cmp	r0, #44	; 0x2c
   1bb04:	bne	1d684 <main@@Base+0x7934>
   1bb08:	add	r1, r2, #1
   1bb0c:	sub	r0, r6, r1
   1bb10:	cmp	r0, #2
   1bb14:	blt	1bb44 <main@@Base+0x5df4>
   1bb18:	ldrb	r0, [r1]
   1bb1c:	cmp	r0, #32
   1bb20:	bls	1bb34 <main@@Base+0x5de4>
   1bb24:	mov	r2, r1
   1bb28:	cmp	r2, r6
   1bb2c:	bne	1bb5c <main@@Base+0x5e0c>
   1bb30:	b	1d6c0 <main@@Base+0x7970>
   1bb34:	bne	1bb44 <main@@Base+0x5df4>
   1bb38:	ldrb	r0, [r2, #2]!
   1bb3c:	cmp	r0, #32
   1bb40:	bhi	1bb54 <main@@Base+0x5e04>
   1bb44:	mov	r0, r9
   1bb48:	mov	r2, r6
   1bb4c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1bb50:	mov	r2, r0
   1bb54:	cmp	r2, r6
   1bb58:	beq	1d6c0 <main@@Base+0x7970>
   1bb5c:	ldrb	r0, [r2]
   1bb60:	cmp	r0, #93	; 0x5d
   1bb64:	bne	1ba64 <main@@Base+0x5d14>
   1bb68:	add	r1, r2, #1
   1bb6c:	sub	r0, r6, r1
   1bb70:	cmp	r0, #2
   1bb74:	bge	1d6a4 <main@@Base+0x7954>
   1bb78:	b	1f8e4 <main@@Base+0x9b94>
   1bb7c:	bne	1bb90 <main@@Base+0x5e40>
   1bb80:	ldrb	r0, [sl, #2]!
   1bb84:	mov	r8, sl
   1bb88:	cmp	r0, #32
   1bb8c:	bhi	1bba0 <main@@Base+0x5e50>
   1bb90:	mov	r0, r9
   1bb94:	mov	r2, r6
   1bb98:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1bb9c:	mov	r8, r0
   1bba0:	cmp	r8, r6
   1bba4:	mov	sl, r6
   1bba8:	beq	1bbf4 <main@@Base+0x5ea4>
   1bbac:	ldrb	r0, [r8]
   1bbb0:	cmp	r0, #93	; 0x5d
   1bbb4:	bne	1bbf0 <main@@Base+0x5ea0>
   1bbb8:	add	r1, r8, #1
   1bbbc:	sub	r0, r6, r1
   1bbc0:	cmp	r0, #2
   1bbc4:	blt	1f910 <main@@Base+0x9bc0>
   1bbc8:	ldrb	r0, [r1]
   1bbcc:	cmp	r0, #32
   1bbd0:	bhi	1d1d8 <main@@Base+0x7488>
   1bbd4:	ldr	r6, [sp, #36]	; 0x24
   1bbd8:	ldr	r9, [sp, #32]
   1bbdc:	bne	1f910 <main@@Base+0x9bc0>
   1bbe0:	ldrb	r0, [r8, #2]!
   1bbe4:	cmp	r0, #32
   1bbe8:	bhi	1b344 <main@@Base+0x55f4>
   1bbec:	b	1f910 <main@@Base+0x9bc0>
   1bbf0:	mov	sl, r8
   1bbf4:	ldr	r0, [r9]
   1bbf8:	mov	r1, #1
   1bbfc:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   1bc00:	mov	r8, r0
   1bc04:	cmp	r0, #0
   1bc08:	beq	16640 <main@@Base+0x8f0>
   1bc0c:	cmp	sl, r6
   1bc10:	beq	1bc50 <main@@Base+0x5f00>
   1bc14:	ldrb	r0, [sl]
   1bc18:	cmp	r0, #123	; 0x7b
   1bc1c:	bne	1bc50 <main@@Base+0x5f00>
   1bc20:	add	r1, sl, #1
   1bc24:	sub	r0, r6, r1
   1bc28:	cmp	r0, #2
   1bc2c:	blt	1bcb8 <main@@Base+0x5f68>
   1bc30:	ldrb	r0, [r1]
   1bc34:	cmp	r0, #32
   1bc38:	bls	1bca8 <main@@Base+0x5f58>
   1bc3c:	mov	sl, r1
   1bc40:	cmp	sl, r6
   1bc44:	mov	r2, r6
   1bc48:	bne	1bcd4 <main@@Base+0x5f84>
   1bc4c:	b	1bd1c <main@@Base+0x5fcc>
   1bc50:	mov	r0, r9
   1bc54:	mov	r1, sl
   1bc58:	mov	r2, r6
   1bc5c:	mov	r3, #21
   1bc60:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1bc64:	mov	sl, r0
   1bc68:	sub	r0, r6, sl
   1bc6c:	cmp	r0, #2
   1bc70:	blt	1c3ec <main@@Base+0x669c>
   1bc74:	ldrb	r0, [sl]
   1bc78:	cmp	r0, #32
   1bc7c:	bls	1bc90 <main@@Base+0x5f40>
   1bc80:	mov	r8, sl
   1bc84:	cmp	r8, r6
   1bc88:	bne	1c408 <main@@Base+0x66b8>
   1bc8c:	b	1cf40 <main@@Base+0x71f0>
   1bc90:	bne	1c3ec <main@@Base+0x669c>
   1bc94:	mov	r8, sl
   1bc98:	ldrb	r0, [r8, #1]!
   1bc9c:	cmp	r0, #32
   1bca0:	bls	1c3ec <main@@Base+0x669c>
   1bca4:	b	1c400 <main@@Base+0x66b0>
   1bca8:	bne	1bcb8 <main@@Base+0x5f68>
   1bcac:	ldrb	r0, [sl, #2]!
   1bcb0:	cmp	r0, #32
   1bcb4:	bhi	1bcc8 <main@@Base+0x5f78>
   1bcb8:	mov	r0, r9
   1bcbc:	mov	r2, r6
   1bcc0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1bcc4:	mov	sl, r0
   1bcc8:	cmp	sl, r6
   1bccc:	mov	r2, r6
   1bcd0:	beq	1bd1c <main@@Base+0x5fcc>
   1bcd4:	ldrb	r0, [sl]
   1bcd8:	cmp	r0, #125	; 0x7d
   1bcdc:	bne	1bd18 <main@@Base+0x5fc8>
   1bce0:	add	r1, sl, #1
   1bce4:	sub	r0, r6, r1
   1bce8:	cmp	r0, #2
   1bcec:	blt	1c4c0 <main@@Base+0x6770>
   1bcf0:	ldrb	r0, [r1]
   1bcf4:	cmp	r0, #32
   1bcf8:	bhi	1c3d4 <main@@Base+0x6684>
   1bcfc:	ldr	r6, [sp, #36]	; 0x24
   1bd00:	ldr	r9, [sp, #32]
   1bd04:	bne	1c4c0 <main@@Base+0x6770>
   1bd08:	ldrb	r0, [sl, #2]!
   1bd0c:	cmp	r0, #32
   1bd10:	bhi	1bc68 <main@@Base+0x5f18>
   1bd14:	b	1c4c0 <main@@Base+0x6770>
   1bd18:	mov	r2, sl
   1bd1c:	cmp	r2, r6
   1bd20:	mov	r9, r6
   1bd24:	beq	1bd54 <main@@Base+0x6004>
   1bd28:	ldrb	r0, [r2]
   1bd2c:	cmp	r0, #34	; 0x22
   1bd30:	bne	1bd3c <main@@Base+0x5fec>
   1bd34:	add	r9, r2, #1
   1bd38:	b	1bd54 <main@@Base+0x6004>
   1bd3c:	ldr	r0, [sp, #32]
   1bd40:	mov	r1, r2
   1bd44:	mov	r2, r6
   1bd48:	mov	r3, #5
   1bd4c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1bd50:	mov	r9, r0
   1bd54:	sub	lr, r6, r9
   1bd58:	mov	r0, #8
   1bd5c:	cmp	lr, #8
   1bd60:	movcc	r0, lr
   1bd64:	sub	r7, r0, #1
   1bd68:	cmp	r7, #7
   1bd6c:	bhi	1c1d8 <main@@Base+0x6488>
   1bd70:	add	r2, pc, #32
   1bd74:	mov	r1, #0
   1bd78:	mov	ip, #0
   1bd7c:	mov	sl, #0
   1bd80:	mov	r6, #0
   1bd84:	mov	r3, #0
   1bd88:	mov	r5, #0
   1bd8c:	mov	r4, #0
   1bd90:	mov	r0, #0
   1bd94:	ldr	pc, [r2, r7, lsl #2]
   1bd98:	strdeq	fp, [r1], -ip
   1bd9c:	strdeq	fp, [r1], -r4
   1bda0:	andeq	fp, r1, ip, ror #27
   1bda4:	andeq	fp, r1, r4, ror #27
   1bda8:	ldrdeq	fp, [r1], -r8
   1bdac:	andeq	fp, r1, ip, asr #27
   1bdb0:			; <UNDEFINED> instruction: 0x0001bdbc
   1bdb4:			; <UNDEFINED> instruction: 0x0001bdb8
   1bdb8:	ldrb	ip, [r9, #7]
   1bdbc:	ldrb	r0, [r9, #6]
   1bdc0:	mov	sl, r1
   1bdc4:	orr	r0, ip, r0, lsl #8
   1bdc8:	mov	r1, r0
   1bdcc:	ldrb	r0, [r9, #5]
   1bdd0:	mov	r6, sl
   1bdd4:	orr	r1, r1, r0, lsl #16
   1bdd8:	ldrb	r0, [r9, #4]
   1bddc:	mov	r3, r6
   1bde0:	orr	r1, r1, r0, lsl #24
   1bde4:	ldrb	r0, [r9, #3]
   1bde8:	orr	r5, r0, r3
   1bdec:	ldrb	r0, [r9, #2]
   1bdf0:	orr	r4, r5, r0, lsl #8
   1bdf4:	ldrb	r0, [r9, #1]
   1bdf8:	orr	r0, r4, r0, lsl #16
   1bdfc:	ldrb	r2, [r9]
   1be00:	movw	r3, #0
   1be04:	movt	r3, #26980	; 0x6964
   1be08:	orr	r0, r0, r2, lsl #24
   1be0c:	mov	r2, r0
   1be10:	bfc	r2, #0, #16
   1be14:	teq	r2, r3
   1be18:	bne	1be6c <main@@Base+0x611c>
   1be1c:	ldr	r6, [sp, #36]	; 0x24
   1be20:	cmp	lr, #3
   1be24:	mov	r7, r9
   1be28:	blt	1c010 <main@@Base+0x62c0>
   1be2c:	ldrb	r0, [r9, #2]
   1be30:	mov	r7, r9
   1be34:	cmp	r0, #34	; 0x22
   1be38:	bne	1c010 <main@@Base+0x62c0>
   1be3c:	add	r1, r9, #3
   1be40:	sub	r0, r6, r1
   1be44:	cmp	r0, #2
   1be48:	blt	1bef4 <main@@Base+0x61a4>
   1be4c:	ldrb	r0, [r1]
   1be50:	cmp	r0, #32
   1be54:	bls	1bedc <main@@Base+0x618c>
   1be58:	ldr	r6, [sp, #36]	; 0x24
   1be5c:	mov	r7, r1
   1be60:	cmp	r7, r6
   1be64:	bne	1bf0c <main@@Base+0x61bc>
   1be68:	b	1bf48 <main@@Base+0x61f8>
   1be6c:	movw	r2, #25445	; 0x6365
   1be70:	ldr	r6, [sp, #36]	; 0x24
   1be74:	movt	r2, #24942	; 0x616e
   1be78:	eor	r1, r1, r2
   1be7c:	movw	r2, #29556	; 0x7374
   1be80:	movt	r2, #25705	; 0x6469
   1be84:	eor	r0, r0, r2
   1be88:	orrs	r0, r1, r0
   1be8c:	bne	1c1d8 <main@@Base+0x6488>
   1be90:	cmp	lr, #9
   1be94:	mov	r7, r9
   1be98:	blt	1c16c <main@@Base+0x641c>
   1be9c:	ldrb	r0, [r9, #8]
   1bea0:	mov	r7, r9
   1bea4:	cmp	r0, #34	; 0x22
   1bea8:	bne	1c16c <main@@Base+0x641c>
   1beac:	add	r1, r9, #9
   1beb0:	sub	r0, r6, r1
   1beb4:	cmp	r0, #2
   1beb8:	blt	1bf78 <main@@Base+0x6228>
   1bebc:	ldrb	r0, [r1]
   1bec0:	cmp	r0, #32
   1bec4:	bls	1bf60 <main@@Base+0x6210>
   1bec8:	ldr	r6, [sp, #36]	; 0x24
   1becc:	mov	r7, r1
   1bed0:	cmp	r7, r6
   1bed4:	bne	1bf90 <main@@Base+0x6240>
   1bed8:	b	1bfd0 <main@@Base+0x6280>
   1bedc:	ldr	r6, [sp, #36]	; 0x24
   1bee0:	bne	1bef4 <main@@Base+0x61a4>
   1bee4:	mov	r7, r9
   1bee8:	ldrb	r0, [r7, #4]!
   1beec:	cmp	r0, #32
   1bef0:	bhi	1bf04 <main@@Base+0x61b4>
   1bef4:	ldr	r0, [sp, #32]
   1bef8:	mov	r2, r6
   1befc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1bf00:	mov	r7, r0
   1bf04:	cmp	r7, r6
   1bf08:	beq	1bf48 <main@@Base+0x61f8>
   1bf0c:	ldrb	r0, [r7]
   1bf10:	cmp	r0, #58	; 0x3a
   1bf14:	bne	1bf48 <main@@Base+0x61f8>
   1bf18:	add	r1, r7, #1
   1bf1c:	sub	r0, r6, r1
   1bf20:	cmp	r0, #2
   1bf24:	blt	1c000 <main@@Base+0x62b0>
   1bf28:	ldrb	r0, [r1]
   1bf2c:	cmp	r0, #32
   1bf30:	bls	1bfec <main@@Base+0x629c>
   1bf34:	ldr	r6, [sp, #36]	; 0x24
   1bf38:	mov	r7, r1
   1bf3c:	cmp	r9, r7
   1bf40:	bne	1c018 <main@@Base+0x62c8>
   1bf44:	b	1c1d8 <main@@Base+0x6488>
   1bf48:	ldr	r0, [sp, #32]
   1bf4c:	mov	r1, r7
   1bf50:	mov	r2, r6
   1bf54:	mov	r3, #4
   1bf58:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1bf5c:	b	1c00c <main@@Base+0x62bc>
   1bf60:	ldr	r6, [sp, #36]	; 0x24
   1bf64:	bne	1bf78 <main@@Base+0x6228>
   1bf68:	mov	r7, r9
   1bf6c:	ldrb	r0, [r7, #10]!
   1bf70:	cmp	r0, #32
   1bf74:	bhi	1bf88 <main@@Base+0x6238>
   1bf78:	ldr	r0, [sp, #32]
   1bf7c:	mov	r2, r6
   1bf80:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1bf84:	mov	r7, r0
   1bf88:	cmp	r7, r6
   1bf8c:	beq	1bfd0 <main@@Base+0x6280>
   1bf90:	ldrb	r0, [r7]
   1bf94:	cmp	r0, #58	; 0x3a
   1bf98:	bne	1bfd0 <main@@Base+0x6280>
   1bf9c:	ldr	r6, [sp, #36]	; 0x24
   1bfa0:	add	r1, r7, #1
   1bfa4:	sub	r0, r6, r1
   1bfa8:	cmp	r0, #2
   1bfac:	blt	1c15c <main@@Base+0x640c>
   1bfb0:	ldrb	r0, [r1]
   1bfb4:	cmp	r0, #32
   1bfb8:	bls	1c148 <main@@Base+0x63f8>
   1bfbc:	ldr	r6, [sp, #36]	; 0x24
   1bfc0:	mov	r7, r1
   1bfc4:	cmp	r9, r7
   1bfc8:	bne	1c174 <main@@Base+0x6424>
   1bfcc:	b	1c1d8 <main@@Base+0x6488>
   1bfd0:	ldr	r6, [sp, #36]	; 0x24
   1bfd4:	ldr	r0, [sp, #32]
   1bfd8:	mov	r1, r7
   1bfdc:	mov	r3, #4
   1bfe0:	mov	r2, r6
   1bfe4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1bfe8:	b	1c168 <main@@Base+0x6418>
   1bfec:	ldr	r6, [sp, #36]	; 0x24
   1bff0:	bne	1c000 <main@@Base+0x62b0>
   1bff4:	ldrb	r0, [r7, #2]!
   1bff8:	cmp	r0, #32
   1bffc:	bhi	1c010 <main@@Base+0x62c0>
   1c000:	ldr	r0, [sp, #32]
   1c004:	mov	r2, r6
   1c008:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1c00c:	mov	r7, r0
   1c010:	cmp	r9, r7
   1c014:	beq	1c1d8 <main@@Base+0x6488>
   1c018:	mov	r4, #0
   1c01c:	cmp	r7, r6
   1c020:	str	r4, [fp, #-52]	; 0xffffffcc
   1c024:	str	r4, [fp, #-56]	; 0xffffffc8
   1c028:	str	r4, [sp, #60]	; 0x3c
   1c02c:	str	r4, [sp, #48]	; 0x30
   1c030:	beq	1c08c <main@@Base+0x633c>
   1c034:	ldr	r9, [sp, #32]
   1c038:	sub	r0, fp, #56	; 0x38
   1c03c:	mov	r1, r7
   1c040:	mov	r2, r6
   1c044:	add	r3, sp, #48	; 0x30
   1c048:	str	r0, [sp]
   1c04c:	mov	r0, r9
   1c050:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1c054:	cmp	r0, r7
   1c058:	beq	1c0a0 <main@@Base+0x6350>
   1c05c:	mov	r1, r0
   1c060:	ldr	r0, [sp, #48]	; 0x30
   1c064:	cmp	r0, #0
   1c068:	beq	1c0b0 <main@@Base+0x6360>
   1c06c:	mov	r0, r9
   1c070:	mov	r2, r6
   1c074:	mov	r3, #8
   1c078:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1c07c:	mov	r1, r0
   1c080:	cmp	r7, r1
   1c084:	bne	1c134 <main@@Base+0x63e4>
   1c088:	b	1c0fc <main@@Base+0x63ac>
   1c08c:	mov	r1, r6
   1c090:	ldr	r9, [sp, #32]
   1c094:	cmp	r7, r1
   1c098:	bne	1c134 <main@@Base+0x63e4>
   1c09c:	b	1c0fc <main@@Base+0x63ac>
   1c0a0:	mov	r1, r7
   1c0a4:	cmp	r7, r1
   1c0a8:	bne	1c134 <main@@Base+0x63e4>
   1c0ac:	b	1c0fc <main@@Base+0x63ac>
   1c0b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c0b4:	cmp	r0, #0
   1c0b8:	beq	1c0e4 <main@@Base+0x6394>
   1c0bc:	ldr	r9, [sp, #32]
   1c0c0:	ldr	r6, [sp, #36]	; 0x24
   1c0c4:	mov	r3, #7
   1c0c8:	mov	r0, r9
   1c0cc:	mov	r2, r6
   1c0d0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1c0d4:	mov	r1, r0
   1c0d8:	cmp	r7, r1
   1c0dc:	bne	1c134 <main@@Base+0x63e4>
   1c0e0:	b	1c0fc <main@@Base+0x63ac>
   1c0e4:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1c0e8:	ldr	r6, [sp, #36]	; 0x24
   1c0ec:	str	r4, [sp, #60]	; 0x3c
   1c0f0:	ldr	r9, [sp, #32]
   1c0f4:	cmp	r7, r1
   1c0f8:	bne	1c134 <main@@Base+0x63e4>
   1c0fc:	movw	r3, #53876	; 0xd274
   1c100:	add	r0, sp, #60	; 0x3c
   1c104:	mov	r1, r7
   1c108:	mov	r2, r6
   1c10c:	movt	r3, #5
   1c110:	str	r0, [sp]
   1c114:	mov	r0, r9
   1c118:	bl	247ac <main@@Base+0xea5c>
   1c11c:	mov	r1, r0
   1c120:	cmp	r0, r7
   1c124:	cmpne	r1, r6
   1c128:	beq	1c37c <main@@Base+0x662c>
   1c12c:	ldr	r4, [sp, #60]	; 0x3c
   1c130:	ldr	r9, [sp, #32]
   1c134:	str	r4, [r8]
   1c138:	sub	r0, r6, r1
   1c13c:	cmp	r0, #2
   1c140:	blt	1c2d8 <main@@Base+0x6588>
   1c144:	b	1c1fc <main@@Base+0x64ac>
   1c148:	ldr	r6, [sp, #36]	; 0x24
   1c14c:	bne	1c15c <main@@Base+0x640c>
   1c150:	ldrb	r0, [r7, #2]!
   1c154:	cmp	r0, #32
   1c158:	bhi	1c16c <main@@Base+0x641c>
   1c15c:	ldr	r0, [sp, #32]
   1c160:	mov	r2, r6
   1c164:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1c168:	mov	r7, r0
   1c16c:	cmp	r9, r7
   1c170:	beq	1c1d8 <main@@Base+0x6488>
   1c174:	mov	r4, #0
   1c178:	cmp	r7, r6
   1c17c:	str	r4, [fp, #-52]	; 0xffffffcc
   1c180:	str	r4, [fp, #-56]	; 0xffffffc8
   1c184:	str	r4, [sp, #60]	; 0x3c
   1c188:	str	r4, [sp, #48]	; 0x30
   1c18c:	beq	1c230 <main@@Base+0x64e0>
   1c190:	ldr	r9, [sp, #32]
   1c194:	sub	r0, fp, #56	; 0x38
   1c198:	mov	r1, r7
   1c19c:	mov	r2, r6
   1c1a0:	add	r3, sp, #48	; 0x30
   1c1a4:	str	r0, [sp]
   1c1a8:	mov	r0, r9
   1c1ac:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1c1b0:	cmp	r0, r7
   1c1b4:	beq	1c244 <main@@Base+0x64f4>
   1c1b8:	mov	r1, r0
   1c1bc:	ldr	r0, [sp, #48]	; 0x30
   1c1c0:	cmp	r0, #0
   1c1c4:	beq	1c254 <main@@Base+0x6504>
   1c1c8:	ldr	r9, [sp, #32]
   1c1cc:	ldr	r6, [sp, #36]	; 0x24
   1c1d0:	mov	r3, #8
   1c1d4:	b	1c26c <main@@Base+0x651c>
   1c1d8:	ldr	r0, [sp, #32]
   1c1dc:	mov	r1, r9
   1c1e0:	mov	r2, r6
   1c1e4:	mov	r9, r0
   1c1e8:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   1c1ec:	mov	r1, r0
   1c1f0:	sub	r0, r6, r1
   1c1f4:	cmp	r0, #2
   1c1f8:	blt	1c2d8 <main@@Base+0x6588>
   1c1fc:	ldrb	r0, [r1]
   1c200:	cmp	r0, #32
   1c204:	bls	1c218 <main@@Base+0x64c8>
   1c208:	mov	r2, r1
   1c20c:	cmp	r2, r6
   1c210:	bne	1c2f0 <main@@Base+0x65a0>
   1c214:	b	1c394 <main@@Base+0x6644>
   1c218:	bne	1c2d8 <main@@Base+0x6588>
   1c21c:	mov	r2, r1
   1c220:	ldrb	r0, [r2, #1]!
   1c224:	cmp	r0, #32
   1c228:	bls	1c2d8 <main@@Base+0x6588>
   1c22c:	b	1c2e8 <main@@Base+0x6598>
   1c230:	mov	r1, r6
   1c234:	ldr	r9, [sp, #32]
   1c238:	cmp	r7, r1
   1c23c:	bne	1c2c8 <main@@Base+0x6578>
   1c240:	b	1c284 <main@@Base+0x6534>
   1c244:	mov	r1, r7
   1c248:	cmp	r7, r1
   1c24c:	bne	1c2c8 <main@@Base+0x6578>
   1c250:	b	1c284 <main@@Base+0x6534>
   1c254:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c258:	cmp	r0, #0
   1c25c:	beq	1c360 <main@@Base+0x6610>
   1c260:	ldr	r9, [sp, #32]
   1c264:	ldr	r6, [sp, #36]	; 0x24
   1c268:	mov	r3, #7
   1c26c:	mov	r0, r9
   1c270:	mov	r2, r6
   1c274:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1c278:	mov	r1, r0
   1c27c:	cmp	r7, r1
   1c280:	bne	1c2c8 <main@@Base+0x6578>
   1c284:	add	r0, sp, #60	; 0x3c
   1c288:	mov	r1, r7
   1c28c:	mov	r2, r6
   1c290:	str	r0, [sp]
   1c294:	movw	r0, #53876	; 0xd274
   1c298:	movt	r0, #5
   1c29c:	add	r3, r0, #12
   1c2a0:	mov	r0, r9
   1c2a4:	bl	247ac <main@@Base+0xea5c>
   1c2a8:	cmp	r0, r7
   1c2ac:	mov	r1, r0
   1c2b0:	ldrne	r0, [sp, #36]	; 0x24
   1c2b4:	cmpne	r1, r0
   1c2b8:	beq	1c37c <main@@Base+0x662c>
   1c2bc:	ldr	r4, [sp, #60]	; 0x3c
   1c2c0:	ldr	r6, [sp, #36]	; 0x24
   1c2c4:	ldr	r9, [sp, #32]
   1c2c8:	str	r4, [r8, #4]
   1c2cc:	sub	r0, r6, r1
   1c2d0:	cmp	r0, #2
   1c2d4:	bge	1c1fc <main@@Base+0x64ac>
   1c2d8:	mov	r0, r9
   1c2dc:	mov	r2, r6
   1c2e0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1c2e4:	mov	r2, r0
   1c2e8:	cmp	r2, r6
   1c2ec:	beq	1c394 <main@@Base+0x6644>
   1c2f0:	ldrb	r0, [r2]
   1c2f4:	cmp	r0, #44	; 0x2c
   1c2f8:	bne	1c3a8 <main@@Base+0x6658>
   1c2fc:	add	r1, r2, #1
   1c300:	sub	r0, r6, r1
   1c304:	cmp	r0, #2
   1c308:	blt	1c338 <main@@Base+0x65e8>
   1c30c:	ldrb	r0, [r1]
   1c310:	cmp	r0, #32
   1c314:	bls	1c328 <main@@Base+0x65d8>
   1c318:	mov	r2, r1
   1c31c:	cmp	r2, r6
   1c320:	bne	1c350 <main@@Base+0x6600>
   1c324:	b	1c47c <main@@Base+0x672c>
   1c328:	bne	1c338 <main@@Base+0x65e8>
   1c32c:	ldrb	r0, [r2, #2]!
   1c330:	cmp	r0, #32
   1c334:	bhi	1c348 <main@@Base+0x65f8>
   1c338:	mov	r0, r9
   1c33c:	mov	r2, r6
   1c340:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1c344:	mov	r2, r0
   1c348:	cmp	r2, r6
   1c34c:	beq	1c47c <main@@Base+0x672c>
   1c350:	ldrb	r0, [r2]
   1c354:	cmp	r0, #125	; 0x7d
   1c358:	bne	1bd1c <main@@Base+0x5fcc>
   1c35c:	b	1c3b4 <main@@Base+0x6664>
   1c360:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1c364:	ldr	r6, [sp, #36]	; 0x24
   1c368:	str	r4, [sp, #60]	; 0x3c
   1c36c:	ldr	r9, [sp, #32]
   1c370:	cmp	r7, r1
   1c374:	bne	1c2c8 <main@@Base+0x6578>
   1c378:	b	1c284 <main@@Base+0x6534>
   1c37c:	ldr	r9, [sp, #32]
   1c380:	ldr	r6, [sp, #36]	; 0x24
   1c384:	mov	r3, #33	; 0x21
   1c388:	mov	r0, r9
   1c38c:	mov	r2, r6
   1c390:	b	1bc60 <main@@Base+0x5f10>
   1c394:	mov	sl, r6
   1c398:	sub	r0, r6, sl
   1c39c:	cmp	r0, #2
   1c3a0:	bge	1bc74 <main@@Base+0x5f24>
   1c3a4:	b	1c3ec <main@@Base+0x669c>
   1c3a8:	cmp	r0, #125	; 0x7d
   1c3ac:	bne	1c488 <main@@Base+0x6738>
   1c3b0:	ldr	r6, [sp, #36]	; 0x24
   1c3b4:	add	r1, r2, #1
   1c3b8:	ldr	r9, [sp, #32]
   1c3bc:	sub	r0, r6, r1
   1c3c0:	cmp	r0, #2
   1c3c4:	blt	1c4c0 <main@@Base+0x6770>
   1c3c8:	ldrb	r0, [r1]
   1c3cc:	cmp	r0, #32
   1c3d0:	bls	1c4a4 <main@@Base+0x6754>
   1c3d4:	ldr	r6, [sp, #36]	; 0x24
   1c3d8:	ldr	r9, [sp, #32]
   1c3dc:	mov	sl, r1
   1c3e0:	sub	r0, r6, sl
   1c3e4:	cmp	r0, #2
   1c3e8:	bge	1bc74 <main@@Base+0x5f24>
   1c3ec:	mov	r0, r9
   1c3f0:	mov	r1, sl
   1c3f4:	mov	r2, r6
   1c3f8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1c3fc:	mov	r8, r0
   1c400:	cmp	r8, r6
   1c404:	beq	1cf40 <main@@Base+0x71f0>
   1c408:	ldrb	r0, [r8]
   1c40c:	cmp	r0, #44	; 0x2c
   1c410:	bne	1d0ec <main@@Base+0x739c>
   1c414:	add	r1, r8, #1
   1c418:	sub	r0, r6, r1
   1c41c:	cmp	r0, #2
   1c420:	blt	1c454 <main@@Base+0x6704>
   1c424:	ldrb	r0, [r1]
   1c428:	cmp	r0, #32
   1c42c:	bls	1c440 <main@@Base+0x66f0>
   1c430:	mov	sl, r1
   1c434:	cmp	sl, r6
   1c438:	bne	1c46c <main@@Base+0x671c>
   1c43c:	b	1d1b0 <main@@Base+0x7460>
   1c440:	bne	1c454 <main@@Base+0x6704>
   1c444:	ldrb	r0, [r8, #2]!
   1c448:	mov	sl, r8
   1c44c:	cmp	r0, #32
   1c450:	bhi	1c464 <main@@Base+0x6714>
   1c454:	mov	r0, r9
   1c458:	mov	r2, r6
   1c45c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1c460:	mov	sl, r0
   1c464:	cmp	sl, r6
   1c468:	beq	1d1b0 <main@@Base+0x7460>
   1c46c:	ldrb	r0, [sl]
   1c470:	cmp	r0, #93	; 0x5d
   1c474:	bne	1bbf4 <main@@Base+0x5ea4>
   1c478:	b	1d1bc <main@@Base+0x746c>
   1c47c:	mov	r0, r9
   1c480:	mov	r1, r6
   1c484:	b	1c498 <main@@Base+0x6748>
   1c488:	ldr	r9, [sp, #32]
   1c48c:	ldr	r6, [sp, #36]	; 0x24
   1c490:	mov	r1, r2
   1c494:	mov	r0, r9
   1c498:	mov	r2, r6
   1c49c:	mov	r3, #10
   1c4a0:	b	1bc60 <main@@Base+0x5f10>
   1c4a4:	ldr	r6, [sp, #36]	; 0x24
   1c4a8:	ldr	r9, [sp, #32]
   1c4ac:	bne	1c4c0 <main@@Base+0x6770>
   1c4b0:	ldrb	r0, [r2, #2]!
   1c4b4:	mov	sl, r2
   1c4b8:	cmp	r0, #32
   1c4bc:	bhi	1bc68 <main@@Base+0x5f18>
   1c4c0:	mov	r0, r9
   1c4c4:	mov	r2, r6
   1c4c8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1c4cc:	b	1bc64 <main@@Base+0x5f14>
   1c4d0:	bne	1c4e0 <main@@Base+0x6790>
   1c4d4:	ldrb	r0, [sl, #19]!
   1c4d8:	cmp	r0, #32
   1c4dc:	bhi	1c4f0 <main@@Base+0x67a0>
   1c4e0:	mov	r0, r9
   1c4e4:	mov	r2, r6
   1c4e8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1c4ec:	mov	sl, r0
   1c4f0:	cmp	sl, r6
   1c4f4:	beq	1c538 <main@@Base+0x67e8>
   1c4f8:	ldrb	r0, [sl]
   1c4fc:	cmp	r0, #58	; 0x3a
   1c500:	bne	1c538 <main@@Base+0x67e8>
   1c504:	add	r1, sl, #1
   1c508:	sub	r0, r6, r1
   1c50c:	cmp	r0, #2
   1c510:	blt	1e224 <main@@Base+0x84d4>
   1c514:	ldrb	r0, [r1]
   1c518:	cmp	r0, #32
   1c51c:	bls	1e20c <main@@Base+0x84bc>
   1c520:	ldr	r6, [sp, #36]	; 0x24
   1c524:	ldr	r9, [sp, #32]
   1c528:	mov	sl, r1
   1c52c:	cmp	r7, sl
   1c530:	bne	1e23c <main@@Base+0x84ec>
   1c534:	b	1eb94 <main@@Base+0x8e44>
   1c538:	mov	r0, r9
   1c53c:	mov	r1, sl
   1c540:	mov	r2, r6
   1c544:	mov	r3, #4
   1c548:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1c54c:	b	1e230 <main@@Base+0x84e0>
   1c550:	ldr	r6, [sp, #36]	; 0x24
   1c554:	ldr	r9, [sp, #32]
   1c558:	bne	1c568 <main@@Base+0x6818>
   1c55c:	ldrb	r0, [sl, #2]!
   1c560:	cmp	r0, #32
   1c564:	bhi	1c578 <main@@Base+0x6828>
   1c568:	mov	r0, r9
   1c56c:	mov	r2, r6
   1c570:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1c574:	mov	sl, r0
   1c578:	cmp	r7, sl
   1c57c:	beq	1eb94 <main@@Base+0x8e44>
   1c580:	ldr	r0, [r9]
   1c584:	bl	2f528 <flatcc_builder_start_offset_vector@@Base>
   1c588:	cmp	r0, #0
   1c58c:	bne	16640 <main@@Base+0x8f0>
   1c590:	cmp	sl, r6
   1c594:	beq	1c5dc <main@@Base+0x688c>
   1c598:	ldrb	r0, [sl]
   1c59c:	cmp	r0, #91	; 0x5b
   1c5a0:	bne	1c5dc <main@@Base+0x688c>
   1c5a4:	add	r1, sl, #1
   1c5a8:	sub	r0, r6, r1
   1c5ac:	cmp	r0, #2
   1c5b0:	blt	1cf60 <main@@Base+0x7210>
   1c5b4:	ldrb	r0, [r1]
   1c5b8:	cmp	r0, #32
   1c5bc:	bls	1cf48 <main@@Base+0x71f8>
   1c5c0:	ldr	r6, [sp, #36]	; 0x24
   1c5c4:	ldr	r9, [sp, #32]
   1c5c8:	mov	sl, r1
   1c5cc:	cmp	sl, r6
   1c5d0:	mov	r2, r6
   1c5d4:	bne	1cf7c <main@@Base+0x722c>
   1c5d8:	b	1cfd4 <main@@Base+0x7284>
   1c5dc:	mov	r0, r9
   1c5e0:	mov	r1, sl
   1c5e4:	mov	r2, r6
   1c5e8:	mov	r3, #22
   1c5ec:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1c5f0:	mov	sl, r0
   1c5f4:	ldr	r0, [r9]
   1c5f8:	bl	2f7e0 <flatcc_builder_end_offset_vector@@Base>
   1c5fc:	cmp	r0, #0
   1c600:	str	r0, [sp, #44]	; 0x2c
   1c604:	beq	16640 <main@@Base+0x8f0>
   1c608:	ldr	r0, [r9]
   1c60c:	mov	r1, #11
   1c610:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1c614:	cmp	r0, #0
   1c618:	bne	1fde4 <main@@Base+0xa094>
   1c61c:	b	16640 <main@@Base+0x8f0>
   1c620:	ldr	r9, [sp, #32]
   1c624:	bne	1c634 <main@@Base+0x68e4>
   1c628:	ldrb	r0, [r6, #2]!
   1c62c:	cmp	r0, #32
   1c630:	bhi	1c644 <main@@Base+0x68f4>
   1c634:	ldr	r2, [sp, #36]	; 0x24
   1c638:	mov	r0, r9
   1c63c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1c640:	mov	r6, r0
   1c644:	cmp	r8, r6
   1c648:	beq	1a84c <main@@Base+0x4afc>
   1c64c:	ldr	r2, [sp, #36]	; 0x24
   1c650:	mov	r4, #0
   1c654:	str	r4, [fp, #-52]	; 0xffffffcc
   1c658:	str	r4, [fp, #-56]	; 0xffffffc8
   1c65c:	str	r4, [sp, #60]	; 0x3c
   1c660:	str	r4, [sp, #48]	; 0x30
   1c664:	cmp	r6, r2
   1c668:	beq	1c6bc <main@@Base+0x696c>
   1c66c:	sub	r0, fp, #56	; 0x38
   1c670:	mov	r1, r6
   1c674:	add	r3, sp, #48	; 0x30
   1c678:	str	r0, [sp]
   1c67c:	mov	r0, r9
   1c680:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1c684:	cmp	r0, r6
   1c688:	beq	1c6cc <main@@Base+0x697c>
   1c68c:	mov	r1, r0
   1c690:	ldr	r0, [sp, #48]	; 0x30
   1c694:	cmp	r0, #0
   1c698:	beq	1c6dc <main@@Base+0x698c>
   1c69c:	ldr	r2, [sp, #36]	; 0x24
   1c6a0:	mov	r0, r9
   1c6a4:	mov	r3, #8
   1c6a8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1c6ac:	mov	r8, r0
   1c6b0:	cmp	r6, r8
   1c6b4:	bne	1d168 <main@@Base+0x7418>
   1c6b8:	b	1d128 <main@@Base+0x73d8>
   1c6bc:	mov	r8, r2
   1c6c0:	cmp	r6, r8
   1c6c4:	bne	1d168 <main@@Base+0x7418>
   1c6c8:	b	1d128 <main@@Base+0x73d8>
   1c6cc:	mov	r8, r6
   1c6d0:	cmp	r6, r8
   1c6d4:	bne	1d168 <main@@Base+0x7418>
   1c6d8:	b	1d128 <main@@Base+0x73d8>
   1c6dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c6e0:	cmp	r0, #0
   1c6e4:	beq	1d110 <main@@Base+0x73c0>
   1c6e8:	ldr	r9, [sp, #32]
   1c6ec:	ldr	r2, [sp, #36]	; 0x24
   1c6f0:	mov	r3, #7
   1c6f4:	mov	r0, r9
   1c6f8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1c6fc:	mov	r8, r0
   1c700:	cmp	r6, r8
   1c704:	bne	1d168 <main@@Base+0x7418>
   1c708:	b	1d128 <main@@Base+0x73d8>
   1c70c:	ldr	r9, [sp, #32]
   1c710:	bne	1c720 <main@@Base+0x69d0>
   1c714:	ldrb	r0, [r6, #2]!
   1c718:	cmp	r0, #32
   1c71c:	bhi	1c730 <main@@Base+0x69e0>
   1c720:	ldr	r2, [sp, #36]	; 0x24
   1c724:	mov	r0, r9
   1c728:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1c72c:	mov	r6, r0
   1c730:	cmp	r8, r6
   1c734:	beq	1a948 <main@@Base+0x4bf8>
   1c738:	ldr	r2, [sp, #36]	; 0x24
   1c73c:	mov	r4, #0
   1c740:	str	r4, [fp, #-52]	; 0xffffffcc
   1c744:	str	r4, [fp, #-56]	; 0xffffffc8
   1c748:	str	r4, [sp, #52]	; 0x34
   1c74c:	str	r4, [sp, #48]	; 0x30
   1c750:	str	r4, [sp, #60]	; 0x3c
   1c754:	cmp	r6, r2
   1c758:	beq	1c7b4 <main@@Base+0x6a64>
   1c75c:	sub	r0, fp, #56	; 0x38
   1c760:	mov	r1, r6
   1c764:	add	r3, sp, #60	; 0x3c
   1c768:	str	r0, [sp]
   1c76c:	mov	r0, r9
   1c770:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1c774:	cmp	r0, r6
   1c778:	beq	1c7c8 <main@@Base+0x6a78>
   1c77c:	mov	r1, r0
   1c780:	ldr	r0, [sp, #60]	; 0x3c
   1c784:	cmp	r0, #0
   1c788:	beq	1c7e0 <main@@Base+0x6a90>
   1c78c:	ldr	r2, [sp, #36]	; 0x24
   1c790:	mov	r0, r9
   1c794:	mov	r3, #8
   1c798:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1c79c:	mov	r8, r0
   1c7a0:	mov	r4, #0
   1c7a4:	mov	r5, #0
   1c7a8:	cmp	r6, r8
   1c7ac:	bne	1c840 <main@@Base+0x6af0>
   1c7b0:	b	1c7fc <main@@Base+0x6aac>
   1c7b4:	mov	r5, #0
   1c7b8:	mov	r8, r2
   1c7bc:	cmp	r6, r8
   1c7c0:	bne	1c840 <main@@Base+0x6af0>
   1c7c4:	b	1c7fc <main@@Base+0x6aac>
   1c7c8:	mov	r4, #0
   1c7cc:	mov	r5, #0
   1c7d0:	mov	r8, r6
   1c7d4:	cmp	r6, r8
   1c7d8:	bne	1c840 <main@@Base+0x6af0>
   1c7dc:	b	1c7fc <main@@Base+0x6aac>
   1c7e0:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1c7e4:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1c7e8:	mov	r8, r1
   1c7ec:	str	r5, [sp, #52]	; 0x34
   1c7f0:	str	r4, [sp, #48]	; 0x30
   1c7f4:	cmp	r6, r8
   1c7f8:	bne	1c840 <main@@Base+0x6af0>
   1c7fc:	add	r0, sp, #48	; 0x30
   1c800:	ldr	r4, [sp, #36]	; 0x24
   1c804:	mov	r1, r6
   1c808:	str	r0, [sp]
   1c80c:	movw	r0, #53516	; 0xd10c
   1c810:	movt	r0, #5
   1c814:	add	r3, r0, #60	; 0x3c
   1c818:	mov	r0, r9
   1c81c:	mov	r2, r4
   1c820:	bl	249ac <main@@Base+0xec5c>
   1c824:	mov	r8, r0
   1c828:	cmp	r0, r6
   1c82c:	cmpne	r8, r4
   1c830:	beq	1fe94 <main@@Base+0xa144>
   1c834:	ldr	r4, [sp, #48]	; 0x30
   1c838:	ldr	r5, [sp, #52]	; 0x34
   1c83c:	ldr	r9, [sp, #32]
   1c840:	ldr	r6, [sp, #36]	; 0x24
   1c844:	orrs	r0, r4, r5
   1c848:	bne	1c858 <main@@Base+0x6b08>
   1c84c:	ldrb	r0, [r9, #8]
   1c850:	tst	r0, #2
   1c854:	beq	1eba8 <main@@Base+0x8e58>
   1c858:	ldr	r0, [r9]
   1c85c:	mov	r1, #19
   1c860:	mov	r2, #8
   1c864:	mov	r3, #8
   1c868:	bl	30dac <flatcc_builder_table_add@@Base>
   1c86c:	cmp	r0, #0
   1c870:	beq	1fe94 <main@@Base+0xa144>
   1c874:	strd	r4, [r0]
   1c878:	sub	r0, r6, r8
   1c87c:	cmp	r0, #2
   1c880:	bge	1ebb4 <main@@Base+0x8e64>
   1c884:	b	1ec28 <main@@Base+0x8ed8>
   1c888:	beq	1d664 <main@@Base+0x7914>
   1c88c:	b	1d674 <main@@Base+0x7924>
   1c890:	ldr	r6, [sp, #36]	; 0x24
   1c894:	ldr	r9, [sp, #32]
   1c898:	bne	1c8a8 <main@@Base+0x6b58>
   1c89c:	ldrb	r0, [sl, #2]!
   1c8a0:	cmp	r0, #32
   1c8a4:	bhi	1c8b8 <main@@Base+0x6b68>
   1c8a8:	mov	r0, r9
   1c8ac:	mov	r2, r6
   1c8b0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1c8b4:	mov	sl, r0
   1c8b8:	cmp	r7, sl
   1c8bc:	beq	1eb94 <main@@Base+0x8e44>
   1c8c0:	ldr	r0, [r9]
   1c8c4:	bl	2f528 <flatcc_builder_start_offset_vector@@Base>
   1c8c8:	cmp	r0, #0
   1c8cc:	bne	16640 <main@@Base+0x8f0>
   1c8d0:	cmp	sl, r6
   1c8d4:	beq	1c918 <main@@Base+0x6bc8>
   1c8d8:	ldrb	r0, [sl]
   1c8dc:	cmp	r0, #91	; 0x5b
   1c8e0:	bne	1c918 <main@@Base+0x6bc8>
   1c8e4:	add	r1, sl, #1
   1c8e8:	sub	r0, r6, r1
   1c8ec:	cmp	r0, #2
   1c8f0:	blt	1d200 <main@@Base+0x74b0>
   1c8f4:	ldrb	r0, [r1]
   1c8f8:	cmp	r0, #32
   1c8fc:	bls	1d1e8 <main@@Base+0x7498>
   1c900:	ldr	r6, [sp, #36]	; 0x24
   1c904:	mov	sl, r1
   1c908:	cmp	sl, r6
   1c90c:	mov	r2, r6
   1c910:	bne	1d21c <main@@Base+0x74cc>
   1c914:	b	1d26c <main@@Base+0x751c>
   1c918:	mov	r0, r9
   1c91c:	mov	r1, sl
   1c920:	mov	r2, r6
   1c924:	mov	r3, #22
   1c928:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1c92c:	mov	sl, r0
   1c930:	ldr	r0, [r9]
   1c934:	bl	2f7e0 <flatcc_builder_end_offset_vector@@Base>
   1c938:	cmp	r0, #0
   1c93c:	str	r0, [sp, #44]	; 0x2c
   1c940:	beq	16640 <main@@Base+0x8f0>
   1c944:	ldr	r0, [r9]
   1c948:	mov	r1, #10
   1c94c:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1c950:	cmp	r0, #0
   1c954:	bne	1fde4 <main@@Base+0xa094>
   1c958:	b	16640 <main@@Base+0x8f0>
   1c95c:	ldr	r6, [sp, #36]	; 0x24
   1c960:	ldr	r9, [sp, #32]
   1c964:	bne	1c974 <main@@Base+0x6c24>
   1c968:	ldrb	r0, [sl, #2]!
   1c96c:	cmp	r0, #32
   1c970:	bhi	1c984 <main@@Base+0x6c34>
   1c974:	mov	r0, r9
   1c978:	mov	r2, r6
   1c97c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1c980:	mov	sl, r0
   1c984:	cmp	r7, sl
   1c988:	beq	1eb94 <main@@Base+0x8e44>
   1c98c:	mov	r0, #0
   1c990:	mov	r1, #3
   1c994:	str	r0, [sp, #44]	; 0x2c
   1c998:	ldr	r0, [r9]
   1c99c:	bl	2fa58 <flatcc_builder_start_table@@Base>
   1c9a0:	cmp	r0, #0
   1c9a4:	bne	1fdac <main@@Base+0xa05c>
   1c9a8:	cmp	sl, r6
   1c9ac:	beq	1c9ec <main@@Base+0x6c9c>
   1c9b0:	ldrb	r0, [sl]
   1c9b4:	cmp	r0, #123	; 0x7b
   1c9b8:	bne	1c9ec <main@@Base+0x6c9c>
   1c9bc:	add	r1, sl, #1
   1c9c0:	sub	r0, r6, r1
   1c9c4:	cmp	r0, #2
   1c9c8:	blt	1efec <main@@Base+0x929c>
   1c9cc:	ldrb	r0, [r1]
   1c9d0:	cmp	r0, #32
   1c9d4:	bls	1efdc <main@@Base+0x928c>
   1c9d8:	mov	sl, r1
   1c9dc:	ldr	r7, [sp, #36]	; 0x24
   1c9e0:	cmp	sl, r7
   1c9e4:	bne	1f008 <main@@Base+0x92b8>
   1c9e8:	b	1f058 <main@@Base+0x9308>
   1c9ec:	mov	r0, r9
   1c9f0:	mov	r1, sl
   1c9f4:	mov	r2, r6
   1c9f8:	mov	r3, #21
   1c9fc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1ca00:	mov	r7, r0
   1ca04:	ldr	r0, [r9, #20]
   1ca08:	cmp	r0, #0
   1ca0c:	beq	1fd80 <main@@Base+0xa030>
   1ca10:	ldr	r6, [sp, #36]	; 0x24
   1ca14:	mov	sl, r7
   1ca18:	b	1fdac <main@@Base+0xa05c>
   1ca1c:	ldr	r6, [sp, #36]	; 0x24
   1ca20:	ldr	r9, [sp, #32]
   1ca24:	bne	1ca34 <main@@Base+0x6ce4>
   1ca28:	ldrb	r0, [sl, #2]!
   1ca2c:	cmp	r0, #32
   1ca30:	bhi	1ca44 <main@@Base+0x6cf4>
   1ca34:	mov	r0, r9
   1ca38:	mov	r2, r6
   1ca3c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ca40:	mov	sl, r0
   1ca44:	cmp	r7, sl
   1ca48:	beq	1eb94 <main@@Base+0x8e44>
   1ca4c:	ldr	r0, [r9]
   1ca50:	mov	r1, #1
   1ca54:	mov	r2, #1
   1ca58:	mvn	r3, #0
   1ca5c:	bl	2f49c <flatcc_builder_start_vector@@Base>
   1ca60:	cmp	r0, #0
   1ca64:	bne	16640 <main@@Base+0x8f0>
   1ca68:	cmp	sl, r6
   1ca6c:	beq	1caac <main@@Base+0x6d5c>
   1ca70:	ldrb	r0, [sl]
   1ca74:	cmp	r0, #91	; 0x5b
   1ca78:	bne	1caac <main@@Base+0x6d5c>
   1ca7c:	add	r1, sl, #1
   1ca80:	sub	r0, r6, r1
   1ca84:	cmp	r0, #2
   1ca88:	blt	1d3a4 <main@@Base+0x7654>
   1ca8c:	ldrb	r0, [r1]
   1ca90:	cmp	r0, #32
   1ca94:	bls	1d38c <main@@Base+0x763c>
   1ca98:	ldr	r6, [sp, #36]	; 0x24
   1ca9c:	mov	sl, r1
   1caa0:	cmp	sl, r6
   1caa4:	bne	1d3bc <main@@Base+0x766c>
   1caa8:	b	1d418 <main@@Base+0x76c8>
   1caac:	mov	r0, r9
   1cab0:	mov	r1, sl
   1cab4:	mov	r2, r6
   1cab8:	mov	r3, #22
   1cabc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1cac0:	mov	sl, r0
   1cac4:	ldr	r0, [r9]
   1cac8:	bl	30714 <flatcc_builder_end_vector@@Base>
   1cacc:	cmp	r0, #0
   1cad0:	str	r0, [sp, #44]	; 0x2c
   1cad4:	beq	16640 <main@@Base+0x8f0>
   1cad8:	ldr	r0, [r9]
   1cadc:	mov	r1, #5
   1cae0:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1cae4:	cmp	r0, #0
   1cae8:	bne	1fde4 <main@@Base+0xa094>
   1caec:	b	16640 <main@@Base+0x8f0>
   1caf0:	ldr	r6, [sp, #36]	; 0x24
   1caf4:	ldr	r9, [sp, #32]
   1caf8:	bne	1cb0c <main@@Base+0x6dbc>
   1cafc:	ldrb	r0, [sl, #2]!
   1cb00:	mov	r8, sl
   1cb04:	cmp	r0, #32
   1cb08:	bhi	19240 <main@@Base+0x34f0>
   1cb0c:	mov	r0, r9
   1cb10:	mov	r2, r6
   1cb14:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1cb18:	b	1923c <main@@Base+0x34ec>
   1cb1c:	ldr	r6, [sp, #36]	; 0x24
   1cb20:	bne	1cb30 <main@@Base+0x6de0>
   1cb24:	ldrb	r0, [r8, #2]!
   1cb28:	cmp	r0, #32
   1cb2c:	bhi	1cb40 <main@@Base+0x6df0>
   1cb30:	ldr	r0, [sp, #32]
   1cb34:	mov	r2, r6
   1cb38:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1cb3c:	mov	r8, r0
   1cb40:	cmp	r9, r8
   1cb44:	beq	1afb4 <main@@Base+0x5264>
   1cb48:	ldr	r9, [sp, #32]
   1cb4c:	mov	r1, #8
   1cb50:	mov	r2, #8
   1cb54:	mvn	r3, #-536870912	; 0xe0000000
   1cb58:	ldr	r0, [r9]
   1cb5c:	bl	2f49c <flatcc_builder_start_vector@@Base>
   1cb60:	cmp	r0, #0
   1cb64:	bne	1fee4 <main@@Base+0xa194>
   1cb68:	cmp	r8, r6
   1cb6c:	beq	1cbac <main@@Base+0x6e5c>
   1cb70:	ldrb	r0, [r8]
   1cb74:	cmp	r0, #91	; 0x5b
   1cb78:	bne	1cbac <main@@Base+0x6e5c>
   1cb7c:	add	r1, r8, #1
   1cb80:	sub	r0, r6, r1
   1cb84:	cmp	r0, #2
   1cb88:	blt	1ddc0 <main@@Base+0x8070>
   1cb8c:	ldrb	r0, [r1]
   1cb90:	cmp	r0, #32
   1cb94:	bls	1dda8 <main@@Base+0x8058>
   1cb98:	ldr	r6, [sp, #36]	; 0x24
   1cb9c:	mov	r8, r1
   1cba0:	cmp	r8, r6
   1cba4:	bne	1ddd8 <main@@Base+0x8088>
   1cba8:	b	1de34 <main@@Base+0x80e4>
   1cbac:	mov	r0, r9
   1cbb0:	mov	r1, r8
   1cbb4:	mov	r2, r6
   1cbb8:	mov	r3, #22
   1cbbc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1cbc0:	mov	r8, r0
   1cbc4:	ldr	r0, [r9]
   1cbc8:	bl	30714 <flatcc_builder_end_vector@@Base>
   1cbcc:	cmp	r0, #0
   1cbd0:	str	r0, [sp, #44]	; 0x2c
   1cbd4:	beq	1fee4 <main@@Base+0xa194>
   1cbd8:	ldr	r0, [r9]
   1cbdc:	mov	r1, #32
   1cbe0:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1cbe4:	cmp	r0, #0
   1cbe8:	bne	19268 <main@@Base+0x3518>
   1cbec:	b	1fee4 <main@@Base+0xa194>
   1cbf0:	ldr	r6, [sp, #36]	; 0x24
   1cbf4:	ldr	r9, [sp, #32]
   1cbf8:	bne	1cc08 <main@@Base+0x6eb8>
   1cbfc:	ldrb	r0, [sl, #19]!
   1cc00:	cmp	r0, #32
   1cc04:	bhi	1cc18 <main@@Base+0x6ec8>
   1cc08:	mov	r0, r9
   1cc0c:	mov	r2, r6
   1cc10:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1cc14:	mov	sl, r0
   1cc18:	cmp	sl, r6
   1cc1c:	beq	1cc60 <main@@Base+0x6f10>
   1cc20:	ldrb	r0, [sl]
   1cc24:	cmp	r0, #58	; 0x3a
   1cc28:	bne	1cc60 <main@@Base+0x6f10>
   1cc2c:	add	r1, sl, #1
   1cc30:	sub	r0, r6, r1
   1cc34:	cmp	r0, #2
   1cc38:	blt	1ea10 <main@@Base+0x8cc0>
   1cc3c:	ldrb	r0, [r1]
   1cc40:	cmp	r0, #32
   1cc44:	bls	1e9f8 <main@@Base+0x8ca8>
   1cc48:	ldr	r6, [sp, #36]	; 0x24
   1cc4c:	ldr	r9, [sp, #32]
   1cc50:	mov	sl, r1
   1cc54:	cmp	r7, sl
   1cc58:	bne	1ea28 <main@@Base+0x8cd8>
   1cc5c:	b	1eb94 <main@@Base+0x8e44>
   1cc60:	mov	r0, r9
   1cc64:	mov	r1, sl
   1cc68:	mov	r2, r6
   1cc6c:	mov	r3, #4
   1cc70:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1cc74:	b	1ea1c <main@@Base+0x8ccc>
   1cc78:	ldr	r6, [sp, #36]	; 0x24
   1cc7c:	ldr	r9, [sp, #32]
   1cc80:	bne	1cc90 <main@@Base+0x6f40>
   1cc84:	ldrb	r0, [sl, #19]!
   1cc88:	cmp	r0, #32
   1cc8c:	bhi	1cca0 <main@@Base+0x6f50>
   1cc90:	mov	r0, r9
   1cc94:	mov	r2, r6
   1cc98:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1cc9c:	mov	sl, r0
   1cca0:	cmp	sl, r6
   1cca4:	beq	1cce8 <main@@Base+0x6f98>
   1cca8:	ldrb	r0, [sl]
   1ccac:	cmp	r0, #58	; 0x3a
   1ccb0:	bne	1cce8 <main@@Base+0x6f98>
   1ccb4:	add	r1, sl, #1
   1ccb8:	sub	r0, r6, r1
   1ccbc:	cmp	r0, #2
   1ccc0:	blt	1eafc <main@@Base+0x8dac>
   1ccc4:	ldrb	r0, [r1]
   1ccc8:	cmp	r0, #32
   1cccc:	bls	1eae4 <main@@Base+0x8d94>
   1ccd0:	ldr	r6, [sp, #36]	; 0x24
   1ccd4:	ldr	r9, [sp, #32]
   1ccd8:	mov	sl, r1
   1ccdc:	cmp	r7, sl
   1cce0:	bne	1eb14 <main@@Base+0x8dc4>
   1cce4:	b	1eb94 <main@@Base+0x8e44>
   1cce8:	mov	r0, r9
   1ccec:	mov	r1, sl
   1ccf0:	mov	r2, r6
   1ccf4:	mov	r3, #4
   1ccf8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1ccfc:	b	1eb08 <main@@Base+0x8db8>
   1cd00:	ldr	r6, [sp, #36]	; 0x24
   1cd04:	ldr	r9, [sp, #32]
   1cd08:	bne	1cd18 <main@@Base+0x6fc8>
   1cd0c:	ldrb	r0, [r8, #2]!
   1cd10:	cmp	r0, #32
   1cd14:	bhi	1cd28 <main@@Base+0x6fd8>
   1cd18:	mov	r0, r9
   1cd1c:	mov	r2, r6
   1cd20:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1cd24:	mov	r8, r0
   1cd28:	cmp	r7, r8
   1cd2c:	beq	1eb94 <main@@Base+0x8e44>
   1cd30:	cmp	r8, r6
   1cd34:	beq	1cda0 <main@@Base+0x7050>
   1cd38:	ldrb	r0, [r8]
   1cd3c:	cmp	r0, #91	; 0x5b
   1cd40:	bne	1cda0 <main@@Base+0x7050>
   1cd44:	ldr	r0, [r9]
   1cd48:	mov	r1, #1
   1cd4c:	mov	r2, #1
   1cd50:	mvn	r3, #0
   1cd54:	bl	2f49c <flatcc_builder_start_vector@@Base>
   1cd58:	cmp	r0, #0
   1cd5c:	bne	1fe94 <main@@Base+0xa144>
   1cd60:	ldrb	r0, [r8]
   1cd64:	cmp	r0, #91	; 0x5b
   1cd68:	bne	1cdf8 <main@@Base+0x70a8>
   1cd6c:	ldr	r0, [sp, #36]	; 0x24
   1cd70:	add	r1, r8, #1
   1cd74:	sub	r0, r0, r1
   1cd78:	cmp	r0, #2
   1cd7c:	blt	1ed4c <main@@Base+0x8ffc>
   1cd80:	ldrb	r0, [r1]
   1cd84:	cmp	r0, #32
   1cd88:	bls	1ed3c <main@@Base+0x8fec>
   1cd8c:	mov	r8, r1
   1cd90:	ldr	r5, [sp, #36]	; 0x24
   1cd94:	cmp	r8, r5
   1cd98:	bne	1ed68 <main@@Base+0x9018>
   1cd9c:	b	1ed78 <main@@Base+0x9028>
   1cda0:	ldr	r0, [r9]
   1cda4:	mov	r1, #0
   1cda8:	mov	r2, #0
   1cdac:	mov	r3, #0
   1cdb0:	bl	2e45c <flatcc_builder_start_buffer@@Base>
   1cdb4:	cmp	r0, #0
   1cdb8:	bne	1fee4 <main@@Base+0xa194>
   1cdbc:	mov	r0, r9
   1cdc0:	mov	r1, r8
   1cdc4:	mov	r2, r6
   1cdc8:	add	r3, sp, #44	; 0x2c
   1cdcc:	bl	16600 <main@@Base+0x8b0>
   1cdd0:	ldr	r1, [sp, #44]	; 0x2c
   1cdd4:	mov	r8, r0
   1cdd8:	cmp	r1, #0
   1cddc:	beq	1fee4 <main@@Base+0xa194>
   1cde0:	ldr	r0, [r9]
   1cde4:	bl	2e64c <flatcc_builder_end_buffer@@Base>
   1cde8:	cmp	r0, #0
   1cdec:	str	r0, [sp, #44]	; 0x2c
   1cdf0:	bne	1fd20 <main@@Base+0x9fd0>
   1cdf4:	b	1fee4 <main@@Base+0xa194>
   1cdf8:	ldr	r0, [sp, #32]
   1cdfc:	ldr	r2, [sp, #36]	; 0x24
   1ce00:	mov	r1, r8
   1ce04:	mov	r3, #22
   1ce08:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1ce0c:	b	1fd00 <main@@Base+0x9fb0>
   1ce10:	ldr	r6, [sp, #36]	; 0x24
   1ce14:	ldr	r9, [sp, #32]
   1ce18:	bne	1ce28 <main@@Base+0x70d8>
   1ce1c:	ldrb	r0, [sl, #2]!
   1ce20:	cmp	r0, #32
   1ce24:	bhi	1ce38 <main@@Base+0x70e8>
   1ce28:	mov	r0, r9
   1ce2c:	mov	r2, r6
   1ce30:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ce34:	mov	sl, r0
   1ce38:	cmp	r7, sl
   1ce3c:	beq	1eb94 <main@@Base+0x8e44>
   1ce40:	mov	r2, r6
   1ce44:	mov	r6, #0
   1ce48:	cmp	sl, r2
   1ce4c:	str	r6, [fp, #-52]	; 0xffffffcc
   1ce50:	str	r6, [fp, #-56]	; 0xffffffc8
   1ce54:	str	r6, [sp, #60]	; 0x3c
   1ce58:	str	r6, [sp, #48]	; 0x30
   1ce5c:	beq	1ceb8 <main@@Base+0x7168>
   1ce60:	sub	r0, fp, #56	; 0x38
   1ce64:	mov	r1, sl
   1ce68:	add	r3, sp, #48	; 0x30
   1ce6c:	str	r0, [sp]
   1ce70:	mov	r0, r9
   1ce74:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1ce78:	cmp	r0, sl
   1ce7c:	beq	1cec8 <main@@Base+0x7178>
   1ce80:	ldr	r2, [sp, #48]	; 0x30
   1ce84:	mov	r8, r0
   1ce88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ce8c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ce90:	cmp	r2, #0
   1ce94:	beq	1ced8 <main@@Base+0x7188>
   1ce98:	subs	r2, r0, #-2147483647	; 0x80000001
   1ce9c:	sbcs	r1, r1, #0
   1cea0:	bcc	1cf0c <main@@Base+0x71bc>
   1cea4:	ldr	r9, [sp, #32]
   1cea8:	ldr	r2, [sp, #36]	; 0x24
   1ceac:	mov	r1, r8
   1ceb0:	mov	r3, #8
   1ceb4:	b	1cef4 <main@@Base+0x71a4>
   1ceb8:	mov	r8, r2
   1cebc:	cmp	sl, r8
   1cec0:	bne	1e1d4 <main@@Base+0x8484>
   1cec4:	b	1e198 <main@@Base+0x8448>
   1cec8:	mov	r8, sl
   1cecc:	cmp	sl, r8
   1ced0:	bne	1e1d4 <main@@Base+0x8484>
   1ced4:	b	1e198 <main@@Base+0x8448>
   1ced8:	subs	r2, r0, #-2147483648	; 0x80000000
   1cedc:	sbcs	r1, r1, #0
   1cee0:	bcc	1e184 <main@@Base+0x8434>
   1cee4:	ldr	r9, [sp, #32]
   1cee8:	ldr	r2, [sp, #36]	; 0x24
   1ceec:	mov	r1, r8
   1cef0:	mov	r3, #7
   1cef4:	mov	r0, r9
   1cef8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1cefc:	mov	r8, r0
   1cf00:	cmp	sl, r8
   1cf04:	bne	1e1d4 <main@@Base+0x8484>
   1cf08:	b	1e198 <main@@Base+0x8448>
   1cf0c:	rsb	r6, r0, #0
   1cf10:	ldr	r9, [sp, #32]
   1cf14:	str	r6, [sp, #60]	; 0x3c
   1cf18:	cmp	sl, r8
   1cf1c:	bne	1e1d4 <main@@Base+0x8484>
   1cf20:	b	1e198 <main@@Base+0x8448>
   1cf24:	ldr	r9, [sp, #32]
   1cf28:	ldr	r6, [sp, #36]	; 0x24
   1cf2c:	mov	r1, sl
   1cf30:	mov	r0, r9
   1cf34:	mov	r2, r6
   1cf38:	mov	r3, #9
   1cf3c:	b	197d0 <main@@Base+0x3a80>
   1cf40:	mov	r8, r6
   1cf44:	b	1b344 <main@@Base+0x55f4>
   1cf48:	ldr	r6, [sp, #36]	; 0x24
   1cf4c:	ldr	r9, [sp, #32]
   1cf50:	bne	1cf60 <main@@Base+0x7210>
   1cf54:	ldrb	r0, [sl, #2]!
   1cf58:	cmp	r0, #32
   1cf5c:	bhi	1cf70 <main@@Base+0x7220>
   1cf60:	mov	r0, r9
   1cf64:	mov	r2, r6
   1cf68:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1cf6c:	mov	sl, r0
   1cf70:	cmp	sl, r6
   1cf74:	mov	r2, r6
   1cf78:	beq	1cfd4 <main@@Base+0x7284>
   1cf7c:	ldrb	r0, [sl]
   1cf80:	cmp	r0, #93	; 0x5d
   1cf84:	bne	1cfc8 <main@@Base+0x7278>
   1cf88:	ldr	r6, [sp, #36]	; 0x24
   1cf8c:	ldr	r9, [sp, #32]
   1cf90:	add	r1, sl, #1
   1cf94:	sub	r0, r6, r1
   1cf98:	cmp	r0, #2
   1cf9c:	blt	1fba4 <main@@Base+0x9e54>
   1cfa0:	ldrb	r0, [r1]
   1cfa4:	cmp	r0, #32
   1cfa8:	bhi	1e5fc <main@@Base+0x88ac>
   1cfac:	ldr	r6, [sp, #36]	; 0x24
   1cfb0:	ldr	r9, [sp, #32]
   1cfb4:	bne	1fba4 <main@@Base+0x9e54>
   1cfb8:	ldrb	r0, [sl, #2]!
   1cfbc:	cmp	r0, #32
   1cfc0:	bhi	1c5f4 <main@@Base+0x68a4>
   1cfc4:	b	1fba4 <main@@Base+0x9e54>
   1cfc8:	ldr	r6, [sp, #36]	; 0x24
   1cfcc:	ldr	r9, [sp, #32]
   1cfd0:	mov	r2, sl
   1cfd4:	mov	r1, r2
   1cfd8:	mov	r0, r9
   1cfdc:	mov	r2, r6
   1cfe0:	add	r3, sp, #44	; 0x2c
   1cfe4:	bl	16600 <main@@Base+0x8b0>
   1cfe8:	mov	sl, r0
   1cfec:	ldr	r0, [sp, #44]	; 0x2c
   1cff0:	cmp	r0, #0
   1cff4:	beq	16640 <main@@Base+0x8f0>
   1cff8:	ldr	r0, [r9]
   1cffc:	mov	r1, #1
   1d000:	bl	2ece4 <flatcc_builder_extend_offset_vector@@Base>
   1d004:	cmp	r0, #0
   1d008:	beq	16640 <main@@Base+0x8f0>
   1d00c:	ldr	r1, [sp, #44]	; 0x2c
   1d010:	str	r1, [r0]
   1d014:	sub	r0, r6, sl
   1d018:	cmp	r0, #2
   1d01c:	blt	1d050 <main@@Base+0x7300>
   1d020:	ldrb	r0, [sl]
   1d024:	cmp	r0, #32
   1d028:	bls	1d03c <main@@Base+0x72ec>
   1d02c:	mov	r2, sl
   1d030:	cmp	r2, r6
   1d034:	bne	1d06c <main@@Base+0x731c>
   1d038:	b	1e56c <main@@Base+0x881c>
   1d03c:	bne	1d050 <main@@Base+0x7300>
   1d040:	mov	r2, sl
   1d044:	ldrb	r0, [r2, #1]!
   1d048:	cmp	r0, #32
   1d04c:	bhi	1d064 <main@@Base+0x7314>
   1d050:	mov	r0, r9
   1d054:	mov	r1, sl
   1d058:	mov	r2, r6
   1d05c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1d060:	mov	r2, r0
   1d064:	cmp	r2, r6
   1d068:	beq	1e56c <main@@Base+0x881c>
   1d06c:	ldrb	r0, [r2]
   1d070:	cmp	r0, #44	; 0x2c
   1d074:	bne	1e5d0 <main@@Base+0x8880>
   1d078:	add	r1, r2, #1
   1d07c:	sub	r0, r6, r1
   1d080:	cmp	r0, #2
   1d084:	blt	1d0b4 <main@@Base+0x7364>
   1d088:	ldrb	r0, [r1]
   1d08c:	cmp	r0, #32
   1d090:	bls	1d0a4 <main@@Base+0x7354>
   1d094:	mov	r2, r1
   1d098:	cmp	r2, r6
   1d09c:	bne	1d0cc <main@@Base+0x737c>
   1d0a0:	b	1e620 <main@@Base+0x88d0>
   1d0a4:	bne	1d0b4 <main@@Base+0x7364>
   1d0a8:	ldrb	r0, [r2, #2]!
   1d0ac:	cmp	r0, #32
   1d0b0:	bhi	1d0c4 <main@@Base+0x7374>
   1d0b4:	mov	r0, r9
   1d0b8:	mov	r2, r6
   1d0bc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1d0c0:	mov	r2, r0
   1d0c4:	cmp	r2, r6
   1d0c8:	beq	1e620 <main@@Base+0x88d0>
   1d0cc:	ldrb	r0, [r2]
   1d0d0:	cmp	r0, #93	; 0x5d
   1d0d4:	bne	1cfd4 <main@@Base+0x7284>
   1d0d8:	add	r1, r2, #1
   1d0dc:	sub	r0, r6, r1
   1d0e0:	cmp	r0, #2
   1d0e4:	bge	1e5f0 <main@@Base+0x88a0>
   1d0e8:	b	1fba4 <main@@Base+0x9e54>
   1d0ec:	cmp	r0, #93	; 0x5d
   1d0f0:	bne	1e53c <main@@Base+0x87ec>
   1d0f4:	ldr	r6, [sp, #36]	; 0x24
   1d0f8:	ldr	r9, [sp, #32]
   1d0fc:	add	r1, r8, #1
   1d100:	sub	r0, r6, r1
   1d104:	cmp	r0, #2
   1d108:	bge	1bbc8 <main@@Base+0x5e78>
   1d10c:	b	1f910 <main@@Base+0x9bc0>
   1d110:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1d114:	ldr	r9, [sp, #32]
   1d118:	mov	r8, r1
   1d11c:	str	r4, [sp, #60]	; 0x3c
   1d120:	cmp	r6, r8
   1d124:	bne	1d168 <main@@Base+0x7418>
   1d128:	add	r0, sp, #60	; 0x3c
   1d12c:	ldr	r4, [sp, #36]	; 0x24
   1d130:	mov	r1, r6
   1d134:	str	r0, [sp]
   1d138:	movw	r0, #53516	; 0xd10c
   1d13c:	movt	r0, #5
   1d140:	add	r3, r0, #36	; 0x24
   1d144:	mov	r0, r9
   1d148:	mov	r2, r4
   1d14c:	bl	247ac <main@@Base+0xea5c>
   1d150:	mov	r8, r0
   1d154:	cmp	r0, r6
   1d158:	cmpne	r8, r4
   1d15c:	beq	1fe94 <main@@Base+0xa144>
   1d160:	ldr	r4, [sp, #60]	; 0x3c
   1d164:	ldr	r9, [sp, #32]
   1d168:	ldr	r6, [sp, #36]	; 0x24
   1d16c:	cmp	r4, #0
   1d170:	bne	1d180 <main@@Base+0x7430>
   1d174:	ldrb	r0, [r9, #8]
   1d178:	tst	r0, #2
   1d17c:	beq	1eba8 <main@@Base+0x8e58>
   1d180:	ldr	r0, [r9]
   1d184:	mov	r1, #17
   1d188:	mov	r2, #4
   1d18c:	mov	r3, #4
   1d190:	bl	30dac <flatcc_builder_table_add@@Base>
   1d194:	cmp	r0, #0
   1d198:	beq	1fe94 <main@@Base+0xa144>
   1d19c:	str	r4, [r0]
   1d1a0:	sub	r0, r6, r8
   1d1a4:	cmp	r0, #2
   1d1a8:	bge	1ebb4 <main@@Base+0x8e64>
   1d1ac:	b	1ec28 <main@@Base+0x8ed8>
   1d1b0:	mov	r0, r9
   1d1b4:	mov	r1, r6
   1d1b8:	b	1e54c <main@@Base+0x87fc>
   1d1bc:	add	r1, sl, #1
   1d1c0:	sub	r0, r6, r1
   1d1c4:	cmp	r0, #2
   1d1c8:	blt	1f910 <main@@Base+0x9bc0>
   1d1cc:	ldrb	r0, [r1]
   1d1d0:	cmp	r0, #32
   1d1d4:	bls	1f8f4 <main@@Base+0x9ba4>
   1d1d8:	ldr	r6, [sp, #36]	; 0x24
   1d1dc:	ldr	r9, [sp, #32]
   1d1e0:	mov	r8, r1
   1d1e4:	b	1b344 <main@@Base+0x55f4>
   1d1e8:	ldr	r6, [sp, #36]	; 0x24
   1d1ec:	ldr	r9, [sp, #32]
   1d1f0:	bne	1d200 <main@@Base+0x74b0>
   1d1f4:	ldrb	r0, [sl, #2]!
   1d1f8:	cmp	r0, #32
   1d1fc:	bhi	1d210 <main@@Base+0x74c0>
   1d200:	mov	r0, r9
   1d204:	mov	r2, r6
   1d208:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1d20c:	mov	sl, r0
   1d210:	cmp	sl, r6
   1d214:	mov	r2, r6
   1d218:	beq	1d26c <main@@Base+0x751c>
   1d21c:	ldrb	r0, [sl]
   1d220:	cmp	r0, #93	; 0x5d
   1d224:	bne	1d268 <main@@Base+0x7518>
   1d228:	ldr	r6, [sp, #36]	; 0x24
   1d22c:	ldr	r9, [sp, #32]
   1d230:	add	r1, sl, #1
   1d234:	sub	r0, r6, r1
   1d238:	cmp	r0, #2
   1d23c:	blt	1fc54 <main@@Base+0x9f04>
   1d240:	ldrb	r0, [r1]
   1d244:	cmp	r0, #32
   1d248:	bhi	1e6b4 <main@@Base+0x8964>
   1d24c:	ldr	r6, [sp, #36]	; 0x24
   1d250:	ldr	r9, [sp, #32]
   1d254:	bne	1fc54 <main@@Base+0x9f04>
   1d258:	ldrb	r0, [sl, #2]!
   1d25c:	cmp	r0, #32
   1d260:	bhi	1c930 <main@@Base+0x6be0>
   1d264:	b	1fc54 <main@@Base+0x9f04>
   1d268:	mov	r2, sl
   1d26c:	ldr	r6, [sp, #36]	; 0x24
   1d270:	ldr	r9, [sp, #32]
   1d274:	mov	r1, r2
   1d278:	mov	r0, r9
   1d27c:	mov	r2, r6
   1d280:	add	r3, sp, #44	; 0x2c
   1d284:	bl	37198 <flatcc_json_parser_build_string@@Base>
   1d288:	mov	sl, r0
   1d28c:	ldr	r0, [sp, #44]	; 0x2c
   1d290:	cmp	r0, #0
   1d294:	beq	16640 <main@@Base+0x8f0>
   1d298:	ldr	r0, [r9]
   1d29c:	mov	r1, #1
   1d2a0:	bl	2ece4 <flatcc_builder_extend_offset_vector@@Base>
   1d2a4:	cmp	r0, #0
   1d2a8:	beq	16640 <main@@Base+0x8f0>
   1d2ac:	ldr	r1, [sp, #44]	; 0x2c
   1d2b0:	str	r1, [r0]
   1d2b4:	sub	r0, r6, sl
   1d2b8:	cmp	r0, #2
   1d2bc:	blt	1d2f0 <main@@Base+0x75a0>
   1d2c0:	ldrb	r0, [sl]
   1d2c4:	cmp	r0, #32
   1d2c8:	bls	1d2dc <main@@Base+0x758c>
   1d2cc:	mov	r2, sl
   1d2d0:	cmp	r2, r6
   1d2d4:	bne	1d30c <main@@Base+0x75bc>
   1d2d8:	b	1e65c <main@@Base+0x890c>
   1d2dc:	bne	1d2f0 <main@@Base+0x75a0>
   1d2e0:	mov	r2, sl
   1d2e4:	ldrb	r0, [r2, #1]!
   1d2e8:	cmp	r0, #32
   1d2ec:	bhi	1d304 <main@@Base+0x75b4>
   1d2f0:	mov	r0, r9
   1d2f4:	mov	r1, sl
   1d2f8:	mov	r2, r6
   1d2fc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1d300:	mov	r2, r0
   1d304:	cmp	r2, r6
   1d308:	beq	1e65c <main@@Base+0x890c>
   1d30c:	ldrb	r0, [r2]
   1d310:	cmp	r0, #44	; 0x2c
   1d314:	bne	1e688 <main@@Base+0x8938>
   1d318:	add	r1, r2, #1
   1d31c:	sub	r0, r6, r1
   1d320:	cmp	r0, #2
   1d324:	blt	1d354 <main@@Base+0x7604>
   1d328:	ldrb	r0, [r1]
   1d32c:	cmp	r0, #32
   1d330:	bls	1d344 <main@@Base+0x75f4>
   1d334:	mov	r2, r1
   1d338:	cmp	r2, r6
   1d33c:	bne	1d36c <main@@Base+0x761c>
   1d340:	b	1e6e8 <main@@Base+0x8998>
   1d344:	bne	1d354 <main@@Base+0x7604>
   1d348:	ldrb	r0, [r2, #2]!
   1d34c:	cmp	r0, #32
   1d350:	bhi	1d364 <main@@Base+0x7614>
   1d354:	mov	r0, r9
   1d358:	mov	r2, r6
   1d35c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1d360:	mov	r2, r0
   1d364:	cmp	r2, r6
   1d368:	beq	1e6e8 <main@@Base+0x8998>
   1d36c:	ldrb	r0, [r2]
   1d370:	cmp	r0, #93	; 0x5d
   1d374:	bne	1d274 <main@@Base+0x7524>
   1d378:	add	r1, r2, #1
   1d37c:	sub	r0, r6, r1
   1d380:	cmp	r0, #2
   1d384:	bge	1e6a8 <main@@Base+0x8958>
   1d388:	b	1fc54 <main@@Base+0x9f04>
   1d38c:	ldr	r6, [sp, #36]	; 0x24
   1d390:	ldr	r9, [sp, #32]
   1d394:	bne	1d3a4 <main@@Base+0x7654>
   1d398:	ldrb	r0, [sl, #2]!
   1d39c:	cmp	r0, #32
   1d3a0:	bhi	1d3b4 <main@@Base+0x7664>
   1d3a4:	mov	r0, r9
   1d3a8:	mov	r2, r6
   1d3ac:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1d3b0:	mov	sl, r0
   1d3b4:	cmp	sl, r6
   1d3b8:	beq	1d418 <main@@Base+0x76c8>
   1d3bc:	ldrb	r0, [sl]
   1d3c0:	cmp	r0, #93	; 0x5d
   1d3c4:	bne	1d414 <main@@Base+0x76c4>
   1d3c8:	ldr	r6, [sp, #36]	; 0x24
   1d3cc:	ldr	r9, [sp, #32]
   1d3d0:	add	r1, sl, #1
   1d3d4:	sub	r0, r6, r1
   1d3d8:	cmp	r0, #2
   1d3dc:	blt	1d404 <main@@Base+0x76b4>
   1d3e0:	ldrb	r0, [r1]
   1d3e4:	cmp	r0, #32
   1d3e8:	bhi	1e680 <main@@Base+0x8930>
   1d3ec:	ldr	r6, [sp, #36]	; 0x24
   1d3f0:	ldr	r9, [sp, #32]
   1d3f4:	bne	1d404 <main@@Base+0x76b4>
   1d3f8:	ldrb	r0, [sl, #2]!
   1d3fc:	cmp	r0, #32
   1d400:	bhi	1cac4 <main@@Base+0x6d74>
   1d404:	mov	r0, r9
   1d408:	mov	r2, r6
   1d40c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1d410:	b	1cac0 <main@@Base+0x6d70>
   1d414:	mov	r6, sl
   1d418:	mov	r0, #0
   1d41c:	mov	r1, #1
   1d420:	strb	r0, [sp, #60]	; 0x3c
   1d424:	ldr	r0, [sp, #32]
   1d428:	ldr	r0, [r0]
   1d42c:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   1d430:	cmp	r0, #0
   1d434:	beq	1ff10 <main@@Base+0xa1c0>
   1d438:	mov	sl, r6
   1d43c:	ldr	r6, [sp, #36]	; 0x24
   1d440:	ldr	r9, [sp, #32]
   1d444:	mov	r7, r0
   1d448:	mov	r5, #0
   1d44c:	cmp	sl, r6
   1d450:	str	r5, [fp, #-52]	; 0xffffffcc
   1d454:	str	r5, [fp, #-56]	; 0xffffffc8
   1d458:	strb	r5, [sp, #60]	; 0x3c
   1d45c:	str	r5, [sp, #48]	; 0x30
   1d460:	beq	1d4b8 <main@@Base+0x7768>
   1d464:	sub	r0, fp, #56	; 0x38
   1d468:	mov	r1, sl
   1d46c:	mov	r2, r6
   1d470:	add	r3, sp, #48	; 0x30
   1d474:	str	r0, [sp]
   1d478:	mov	r0, r9
   1d47c:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1d480:	cmp	r0, sl
   1d484:	beq	1d4c8 <main@@Base+0x7778>
   1d488:	mov	r1, r0
   1d48c:	ldr	r0, [sp, #48]	; 0x30
   1d490:	cmp	r0, #0
   1d494:	beq	1d4d8 <main@@Base+0x7788>
   1d498:	mov	r0, r9
   1d49c:	mov	r2, r6
   1d4a0:	mov	r3, #8
   1d4a4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1d4a8:	mov	r1, r0
   1d4ac:	cmp	sl, r1
   1d4b0:	bne	1d568 <main@@Base+0x7818>
   1d4b4:	b	1d52c <main@@Base+0x77dc>
   1d4b8:	mov	r1, r6
   1d4bc:	cmp	sl, r1
   1d4c0:	bne	1d568 <main@@Base+0x7818>
   1d4c4:	b	1d52c <main@@Base+0x77dc>
   1d4c8:	mov	r1, sl
   1d4cc:	cmp	sl, r1
   1d4d0:	bne	1d568 <main@@Base+0x7818>
   1d4d4:	b	1d52c <main@@Base+0x77dc>
   1d4d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d4dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d4e0:	subs	r3, r0, #256	; 0x100
   1d4e4:	sbcs	r2, r2, #0
   1d4e8:	bcc	1d514 <main@@Base+0x77c4>
   1d4ec:	ldr	r9, [sp, #32]
   1d4f0:	ldr	r6, [sp, #36]	; 0x24
   1d4f4:	mov	r3, #7
   1d4f8:	mov	r0, r9
   1d4fc:	mov	r2, r6
   1d500:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1d504:	mov	r1, r0
   1d508:	cmp	sl, r1
   1d50c:	bne	1d568 <main@@Base+0x7818>
   1d510:	b	1d52c <main@@Base+0x77dc>
   1d514:	ldr	r6, [sp, #36]	; 0x24
   1d518:	ldr	r9, [sp, #32]
   1d51c:	mov	r5, r0
   1d520:	strb	r0, [sp, #60]	; 0x3c
   1d524:	cmp	sl, r1
   1d528:	bne	1d568 <main@@Base+0x7818>
   1d52c:	add	r0, sp, #60	; 0x3c
   1d530:	mov	r1, sl
   1d534:	mov	r2, r6
   1d538:	str	r0, [sp]
   1d53c:	movw	r0, #53396	; 0xd094
   1d540:	movt	r0, #5
   1d544:	add	r3, r0, #24
   1d548:	mov	r0, r9
   1d54c:	bl	21f90 <main@@Base+0xc240>
   1d550:	mov	r1, r0
   1d554:	cmp	r0, sl
   1d558:	cmpne	r1, r6
   1d55c:	beq	1fef4 <main@@Base+0xa1a4>
   1d560:	ldrb	r5, [sp, #60]	; 0x3c
   1d564:	ldr	r9, [sp, #32]
   1d568:	sub	r0, r6, r1
   1d56c:	strb	r5, [r7]
   1d570:	cmp	r0, #2
   1d574:	blt	1d5a8 <main@@Base+0x7858>
   1d578:	ldrb	r0, [r1]
   1d57c:	cmp	r0, #32
   1d580:	bls	1d594 <main@@Base+0x7844>
   1d584:	mov	sl, r1
   1d588:	cmp	sl, r6
   1d58c:	bne	1d5c0 <main@@Base+0x7870>
   1d590:	b	1e60c <main@@Base+0x88bc>
   1d594:	bne	1d5a8 <main@@Base+0x7858>
   1d598:	mov	sl, r1
   1d59c:	ldrb	r0, [sl, #1]!
   1d5a0:	cmp	r0, #32
   1d5a4:	bhi	1d5b8 <main@@Base+0x7868>
   1d5a8:	mov	r0, r9
   1d5ac:	mov	r2, r6
   1d5b0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1d5b4:	mov	sl, r0
   1d5b8:	cmp	sl, r6
   1d5bc:	beq	1e60c <main@@Base+0x88bc>
   1d5c0:	ldrb	r0, [sl]
   1d5c4:	cmp	r0, #44	; 0x2c
   1d5c8:	bne	1e62c <main@@Base+0x88dc>
   1d5cc:	add	r1, sl, #1
   1d5d0:	sub	r0, r6, r1
   1d5d4:	cmp	r0, #2
   1d5d8:	blt	1d608 <main@@Base+0x78b8>
   1d5dc:	ldrb	r0, [r1]
   1d5e0:	cmp	r0, #32
   1d5e4:	bls	1d5f8 <main@@Base+0x78a8>
   1d5e8:	mov	sl, r1
   1d5ec:	cmp	sl, r6
   1d5f0:	bne	1d620 <main@@Base+0x78d0>
   1d5f4:	b	1e64c <main@@Base+0x88fc>
   1d5f8:	bne	1d608 <main@@Base+0x78b8>
   1d5fc:	ldrb	r0, [sl, #2]!
   1d600:	cmp	r0, #32
   1d604:	bhi	1d618 <main@@Base+0x78c8>
   1d608:	mov	r0, r9
   1d60c:	mov	r2, r6
   1d610:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1d614:	mov	sl, r0
   1d618:	cmp	sl, r6
   1d61c:	beq	1e64c <main@@Base+0x88fc>
   1d620:	ldrb	r0, [sl]
   1d624:	cmp	r0, #93	; 0x5d
   1d628:	beq	1e664 <main@@Base+0x8914>
   1d62c:	mov	r0, #0
   1d630:	mov	r1, #1
   1d634:	strb	r0, [sp, #60]	; 0x3c
   1d638:	ldr	r0, [r9]
   1d63c:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   1d640:	mov	r7, r0
   1d644:	cmp	r0, #0
   1d648:	bne	1d448 <main@@Base+0x76f8>
   1d64c:	b	16640 <main@@Base+0x8f0>
   1d650:	mov	sl, r6
   1d654:	b	1b278 <main@@Base+0x5528>
   1d658:	ldr	r6, [sp, #36]	; 0x24
   1d65c:	ldr	r9, [sp, #32]
   1d660:	bne	1d674 <main@@Base+0x7924>
   1d664:	ldrb	r0, [r2, #2]!
   1d668:	mov	r8, r2
   1d66c:	cmp	r0, #32
   1d670:	bhi	1eba8 <main@@Base+0x8e58>
   1d674:	mov	r0, r9
   1d678:	mov	r2, r6
   1d67c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1d680:	b	1eba4 <main@@Base+0x8e54>
   1d684:	cmp	r0, #93	; 0x5d
   1d688:	bne	1e6c4 <main@@Base+0x8974>
   1d68c:	ldr	r6, [sp, #36]	; 0x24
   1d690:	ldr	r9, [sp, #32]
   1d694:	add	r1, r2, #1
   1d698:	sub	r0, r6, r1
   1d69c:	cmp	r0, #2
   1d6a0:	blt	1f8e4 <main@@Base+0x9b94>
   1d6a4:	ldrb	r0, [r1]
   1d6a8:	cmp	r0, #32
   1d6ac:	bls	1f8c8 <main@@Base+0x9b78>
   1d6b0:	ldr	r6, [sp, #36]	; 0x24
   1d6b4:	ldr	r9, [sp, #32]
   1d6b8:	mov	sl, r1
   1d6bc:	b	1b278 <main@@Base+0x5528>
   1d6c0:	mov	r0, r9
   1d6c4:	mov	r1, r6
   1d6c8:	b	1e6d4 <main@@Base+0x8984>
   1d6cc:	ldr	r6, [sp, #36]	; 0x24
   1d6d0:	ldr	r9, [sp, #32]
   1d6d4:	bne	1d6e4 <main@@Base+0x7994>
   1d6d8:	ldrb	r0, [sl, #2]!
   1d6dc:	cmp	r0, #32
   1d6e0:	bhi	1d6f4 <main@@Base+0x79a4>
   1d6e4:	mov	r0, r9
   1d6e8:	mov	r2, r6
   1d6ec:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1d6f0:	mov	sl, r0
   1d6f4:	cmp	sl, r6
   1d6f8:	mov	r2, r6
   1d6fc:	beq	1d750 <main@@Base+0x7a00>
   1d700:	ldrb	r0, [sl]
   1d704:	cmp	r0, #125	; 0x7d
   1d708:	bne	1d74c <main@@Base+0x79fc>
   1d70c:	ldr	r6, [sp, #36]	; 0x24
   1d710:	ldr	r9, [sp, #32]
   1d714:	add	r1, sl, #1
   1d718:	sub	r0, r6, r1
   1d71c:	cmp	r0, #2
   1d720:	blt	1fb48 <main@@Base+0x9df8>
   1d724:	ldrb	r0, [r1]
   1d728:	cmp	r0, #32
   1d72c:	bhi	1e5a0 <main@@Base+0x8850>
   1d730:	ldr	r6, [sp, #36]	; 0x24
   1d734:	ldr	r9, [sp, #32]
   1d738:	bne	1fb48 <main@@Base+0x9df8>
   1d73c:	ldrb	r0, [sl, #2]!
   1d740:	cmp	r0, #32
   1d744:	bhi	1b184 <main@@Base+0x5434>
   1d748:	b	1fb48 <main@@Base+0x9df8>
   1d74c:	mov	r2, sl
   1d750:	ldr	r6, [sp, #36]	; 0x24
   1d754:	ldr	r9, [sp, #32]
   1d758:	cmp	r2, r6
   1d75c:	mov	r8, r6
   1d760:	beq	1d790 <main@@Base+0x7a40>
   1d764:	ldrb	r0, [r2]
   1d768:	cmp	r0, #34	; 0x22
   1d76c:	bne	1d778 <main@@Base+0x7a28>
   1d770:	add	r8, r2, #1
   1d774:	b	1d790 <main@@Base+0x7a40>
   1d778:	mov	r1, r2
   1d77c:	mov	r0, r9
   1d780:	mov	r2, r6
   1d784:	mov	r3, #5
   1d788:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1d78c:	mov	r8, r0
   1d790:	sub	lr, r6, r8
   1d794:	mov	r0, #8
   1d798:	cmp	lr, #8
   1d79c:	movcc	r0, lr
   1d7a0:	sub	r7, r0, #1
   1d7a4:	cmp	r7, #7
   1d7a8:	bhi	1d93c <main@@Base+0x7bec>
   1d7ac:	add	r4, pc, #32
   1d7b0:	mov	r1, #0
   1d7b4:	mov	ip, #0
   1d7b8:	mov	r9, #0
   1d7bc:	mov	r6, #0
   1d7c0:	mov	r3, #0
   1d7c4:	mov	r5, #0
   1d7c8:	mov	r2, #0
   1d7cc:	mov	r0, #0
   1d7d0:	ldr	pc, [r4, r7, lsl #2]
   1d7d4:	andeq	sp, r1, r8, lsr r8
   1d7d8:	andeq	sp, r1, r0, lsr r8
   1d7dc:	andeq	sp, r1, r8, lsr #16
   1d7e0:	andeq	sp, r1, r0, lsr #16
   1d7e4:	andeq	sp, r1, r4, lsl r8
   1d7e8:	andeq	sp, r1, r8, lsl #16
   1d7ec:	strdeq	sp, [r1], -r8
   1d7f0:	strdeq	sp, [r1], -r4
   1d7f4:	ldrb	ip, [r8, #7]
   1d7f8:	ldrb	r0, [r8, #6]
   1d7fc:	mov	r9, r1
   1d800:	orr	r0, ip, r0, lsl #8
   1d804:	mov	r1, r0
   1d808:	ldrb	r0, [r8, #5]
   1d80c:	mov	r6, r9
   1d810:	orr	r1, r1, r0, lsl #16
   1d814:	ldrb	r0, [r8, #4]
   1d818:	mov	r3, r6
   1d81c:	orr	r1, r1, r0, lsl #24
   1d820:	ldrb	r0, [r8, #3]
   1d824:	orr	r5, r0, r3
   1d828:	ldrb	r0, [r8, #2]
   1d82c:	orr	r2, r5, r0, lsl #8
   1d830:	ldrb	r0, [r8, #1]
   1d834:	orr	r0, r2, r0, lsl #16
   1d838:	ldrb	r2, [r8]
   1d83c:	orr	r2, r0, r2, lsl #24
   1d840:	movw	r0, #0
   1d844:	movt	r0, #25956	; 0x6564
   1d848:	subs	r0, r1, r0
   1d84c:	movw	r0, #29556	; 0x7374
   1d850:	movt	r0, #28261	; 0x6e65
   1d854:	sbcs	r0, r2, r0
   1d858:	bcs	1d8c4 <main@@Base+0x7b74>
   1d85c:	movw	r0, #29793	; 0x7461
   1d860:	ldr	r6, [sp, #36]	; 0x24
   1d864:	ldr	r9, [sp, #32]
   1d868:	movt	r0, #25697	; 0x6461
   1d86c:	teq	r2, r0
   1d870:	bne	1d93c <main@@Base+0x7bec>
   1d874:	cmp	lr, #5
   1d878:	mov	r1, r8
   1d87c:	blt	1db6c <main@@Base+0x7e1c>
   1d880:	ldrb	r0, [r8, #4]
   1d884:	mov	r1, r8
   1d888:	cmp	r0, #34	; 0x22
   1d88c:	bne	1db6c <main@@Base+0x7e1c>
   1d890:	ldr	r0, [sp, #36]	; 0x24
   1d894:	add	r2, r8, #5
   1d898:	sub	r0, r0, r2
   1d89c:	cmp	r0, #2
   1d8a0:	blt	1d9d0 <main@@Base+0x7c80>
   1d8a4:	ldrb	r0, [r2]
   1d8a8:	cmp	r0, #32
   1d8ac:	bls	1d9bc <main@@Base+0x7c6c>
   1d8b0:	mov	r1, r2
   1d8b4:	ldr	r0, [sp, #36]	; 0x24
   1d8b8:	cmp	r1, r0
   1d8bc:	bne	1d9f0 <main@@Base+0x7ca0>
   1d8c0:	b	1da2c <main@@Base+0x7cdc>
   1d8c4:	movw	r0, #29292	; 0x726c
   1d8c8:	lsr	r3, r1, #8
   1d8cc:	movw	r7, #29793	; 0x7461
   1d8d0:	movt	r0, #117	; 0x75
   1d8d4:	orr	r3, r3, r2, lsl #24
   1d8d8:	movt	r7, #25697	; 0x6461
   1d8dc:	eor	r0, r0, r2, lsr #8
   1d8e0:	eor	r3, r3, r7
   1d8e4:	orrs	r0, r3, r0
   1d8e8:	bne	1d948 <main@@Base+0x7bf8>
   1d8ec:	cmp	lr, #8
   1d8f0:	mov	r1, r8
   1d8f4:	blt	1dbdc <main@@Base+0x7e8c>
   1d8f8:	ldrb	r0, [r8, #7]
   1d8fc:	mov	r1, r8
   1d900:	cmp	r0, #34	; 0x22
   1d904:	bne	1dbdc <main@@Base+0x7e8c>
   1d908:	ldr	r0, [sp, #36]	; 0x24
   1d90c:	add	r2, r8, #8
   1d910:	sub	r0, r0, r2
   1d914:	cmp	r0, #2
   1d918:	blt	1da54 <main@@Base+0x7d04>
   1d91c:	ldrb	r0, [r2]
   1d920:	cmp	r0, #32
   1d924:	bls	1da40 <main@@Base+0x7cf0>
   1d928:	mov	r1, r2
   1d92c:	ldr	r0, [sp, #36]	; 0x24
   1d930:	cmp	r1, r0
   1d934:	bne	1da74 <main@@Base+0x7d24>
   1d938:	b	1dab0 <main@@Base+0x7d60>
   1d93c:	mov	r0, r9
   1d940:	mov	r1, r8
   1d944:	b	1dcc4 <main@@Base+0x7f74>
   1d948:	movw	r0, #29556	; 0x7374
   1d94c:	bfc	r1, #0, #16
   1d950:	movt	r0, #28261	; 0x6e65
   1d954:	eor	r0, r2, r0
   1d958:	movw	r2, #0
   1d95c:	movt	r2, #25956	; 0x6564
   1d960:	eor	r1, r1, r2
   1d964:	orrs	r0, r1, r0
   1d968:	bne	1dcb4 <main@@Base+0x7f64>
   1d96c:	cmp	lr, #7
   1d970:	mov	r1, r8
   1d974:	blt	1dc4c <main@@Base+0x7efc>
   1d978:	ldrb	r0, [r8, #6]
   1d97c:	mov	r1, r8
   1d980:	cmp	r0, #34	; 0x22
   1d984:	bne	1dc4c <main@@Base+0x7efc>
   1d988:	ldr	r0, [sp, #36]	; 0x24
   1d98c:	add	r2, r8, #7
   1d990:	sub	r0, r0, r2
   1d994:	cmp	r0, #2
   1d998:	blt	1dad8 <main@@Base+0x7d88>
   1d99c:	ldrb	r0, [r2]
   1d9a0:	cmp	r0, #32
   1d9a4:	bls	1dac4 <main@@Base+0x7d74>
   1d9a8:	mov	r1, r2
   1d9ac:	ldr	r0, [sp, #36]	; 0x24
   1d9b0:	cmp	r1, r0
   1d9b4:	bne	1daf8 <main@@Base+0x7da8>
   1d9b8:	b	1db34 <main@@Base+0x7de4>
   1d9bc:	bne	1d9d0 <main@@Base+0x7c80>
   1d9c0:	mov	r1, r8
   1d9c4:	ldrb	r0, [r1, #6]!
   1d9c8:	cmp	r0, #32
   1d9cc:	bhi	1d9e4 <main@@Base+0x7c94>
   1d9d0:	mov	r1, r2
   1d9d4:	ldr	r0, [sp, #32]
   1d9d8:	ldr	r2, [sp, #36]	; 0x24
   1d9dc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1d9e0:	mov	r1, r0
   1d9e4:	ldr	r0, [sp, #36]	; 0x24
   1d9e8:	cmp	r1, r0
   1d9ec:	beq	1da2c <main@@Base+0x7cdc>
   1d9f0:	ldrb	r0, [r1]
   1d9f4:	cmp	r0, #58	; 0x3a
   1d9f8:	bne	1da2c <main@@Base+0x7cdc>
   1d9fc:	ldr	r0, [sp, #36]	; 0x24
   1da00:	add	r2, r1, #1
   1da04:	sub	r0, r0, r2
   1da08:	cmp	r0, #2
   1da0c:	blt	1db58 <main@@Base+0x7e08>
   1da10:	ldrb	r0, [r2]
   1da14:	cmp	r0, #32
   1da18:	bls	1db48 <main@@Base+0x7df8>
   1da1c:	mov	r1, r2
   1da20:	cmp	r8, r1
   1da24:	bne	1db74 <main@@Base+0x7e24>
   1da28:	b	1dcb4 <main@@Base+0x7f64>
   1da2c:	ldr	r0, [sp, #32]
   1da30:	ldr	r2, [sp, #36]	; 0x24
   1da34:	mov	r3, #4
   1da38:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1da3c:	b	1db68 <main@@Base+0x7e18>
   1da40:	bne	1da54 <main@@Base+0x7d04>
   1da44:	mov	r1, r8
   1da48:	ldrb	r0, [r1, #9]!
   1da4c:	cmp	r0, #32
   1da50:	bhi	1da68 <main@@Base+0x7d18>
   1da54:	mov	r1, r2
   1da58:	ldr	r0, [sp, #32]
   1da5c:	ldr	r2, [sp, #36]	; 0x24
   1da60:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1da64:	mov	r1, r0
   1da68:	ldr	r0, [sp, #36]	; 0x24
   1da6c:	cmp	r1, r0
   1da70:	beq	1dab0 <main@@Base+0x7d60>
   1da74:	ldrb	r0, [r1]
   1da78:	cmp	r0, #58	; 0x3a
   1da7c:	bne	1dab0 <main@@Base+0x7d60>
   1da80:	ldr	r0, [sp, #36]	; 0x24
   1da84:	add	r2, r1, #1
   1da88:	sub	r0, r0, r2
   1da8c:	cmp	r0, #2
   1da90:	blt	1dbc8 <main@@Base+0x7e78>
   1da94:	ldrb	r0, [r2]
   1da98:	cmp	r0, #32
   1da9c:	bls	1dbb8 <main@@Base+0x7e68>
   1daa0:	mov	r1, r2
   1daa4:	cmp	r8, r1
   1daa8:	bne	1dbe4 <main@@Base+0x7e94>
   1daac:	b	1dcb4 <main@@Base+0x7f64>
   1dab0:	ldr	r0, [sp, #32]
   1dab4:	ldr	r2, [sp, #36]	; 0x24
   1dab8:	mov	r3, #4
   1dabc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1dac0:	b	1dbd8 <main@@Base+0x7e88>
   1dac4:	bne	1dad8 <main@@Base+0x7d88>
   1dac8:	mov	r1, r8
   1dacc:	ldrb	r0, [r1, #8]!
   1dad0:	cmp	r0, #32
   1dad4:	bhi	1daec <main@@Base+0x7d9c>
   1dad8:	mov	r1, r2
   1dadc:	ldr	r0, [sp, #32]
   1dae0:	ldr	r2, [sp, #36]	; 0x24
   1dae4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1dae8:	mov	r1, r0
   1daec:	ldr	r0, [sp, #36]	; 0x24
   1daf0:	cmp	r1, r0
   1daf4:	beq	1db34 <main@@Base+0x7de4>
   1daf8:	ldrb	r0, [r1]
   1dafc:	cmp	r0, #58	; 0x3a
   1db00:	bne	1db34 <main@@Base+0x7de4>
   1db04:	ldr	r0, [sp, #36]	; 0x24
   1db08:	add	r2, r1, #1
   1db0c:	sub	r0, r0, r2
   1db10:	cmp	r0, #2
   1db14:	blt	1dc38 <main@@Base+0x7ee8>
   1db18:	ldrb	r0, [r2]
   1db1c:	cmp	r0, #32
   1db20:	bls	1dc28 <main@@Base+0x7ed8>
   1db24:	mov	r1, r2
   1db28:	cmp	r8, r1
   1db2c:	bne	1dc54 <main@@Base+0x7f04>
   1db30:	b	1dcb4 <main@@Base+0x7f64>
   1db34:	ldr	r0, [sp, #32]
   1db38:	ldr	r2, [sp, #36]	; 0x24
   1db3c:	mov	r3, #4
   1db40:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1db44:	b	1dc48 <main@@Base+0x7ef8>
   1db48:	bne	1db58 <main@@Base+0x7e08>
   1db4c:	ldrb	r0, [r1, #2]!
   1db50:	cmp	r0, #32
   1db54:	bhi	1db6c <main@@Base+0x7e1c>
   1db58:	mov	r1, r2
   1db5c:	ldr	r0, [sp, #32]
   1db60:	ldr	r2, [sp, #36]	; 0x24
   1db64:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1db68:	mov	r1, r0
   1db6c:	cmp	r8, r1
   1db70:	beq	1dcb4 <main@@Base+0x7f64>
   1db74:	mov	r0, #0
   1db78:	ldr	r2, [sp, #36]	; 0x24
   1db7c:	sub	r3, fp, #56	; 0x38
   1db80:	str	r0, [sp]
   1db84:	ldr	r0, [sp, #32]
   1db88:	bl	36d30 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1db8c:	mov	sl, r0
   1db90:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1db94:	cmp	r0, #0
   1db98:	beq	1efd0 <main@@Base+0x9280>
   1db9c:	ldr	r0, [sp, #32]
   1dba0:	mov	r1, #0
   1dba4:	ldr	r0, [r0]
   1dba8:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1dbac:	cmp	r0, #0
   1dbb0:	bne	1dc94 <main@@Base+0x7f44>
   1dbb4:	b	1efd0 <main@@Base+0x9280>
   1dbb8:	bne	1dbc8 <main@@Base+0x7e78>
   1dbbc:	ldrb	r0, [r1, #2]!
   1dbc0:	cmp	r0, #32
   1dbc4:	bhi	1dbdc <main@@Base+0x7e8c>
   1dbc8:	mov	r1, r2
   1dbcc:	ldr	r0, [sp, #32]
   1dbd0:	ldr	r2, [sp, #36]	; 0x24
   1dbd4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1dbd8:	mov	r1, r0
   1dbdc:	cmp	r8, r1
   1dbe0:	beq	1dcb4 <main@@Base+0x7f64>
   1dbe4:	mov	r0, #1
   1dbe8:	ldr	r2, [sp, #36]	; 0x24
   1dbec:	sub	r3, fp, #56	; 0x38
   1dbf0:	str	r0, [sp]
   1dbf4:	ldr	r0, [sp, #32]
   1dbf8:	bl	36d30 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1dbfc:	mov	sl, r0
   1dc00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dc04:	cmp	r0, #0
   1dc08:	beq	1efd0 <main@@Base+0x9280>
   1dc0c:	ldr	r0, [sp, #32]
   1dc10:	mov	r1, #1
   1dc14:	ldr	r0, [r0]
   1dc18:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1dc1c:	cmp	r0, #0
   1dc20:	bne	1dc94 <main@@Base+0x7f44>
   1dc24:	b	1efd0 <main@@Base+0x9280>
   1dc28:	bne	1dc38 <main@@Base+0x7ee8>
   1dc2c:	ldrb	r0, [r1, #2]!
   1dc30:	cmp	r0, #32
   1dc34:	bhi	1dc4c <main@@Base+0x7efc>
   1dc38:	mov	r1, r2
   1dc3c:	ldr	r0, [sp, #32]
   1dc40:	ldr	r2, [sp, #36]	; 0x24
   1dc44:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1dc48:	mov	r1, r0
   1dc4c:	cmp	r8, r1
   1dc50:	beq	1dcb4 <main@@Base+0x7f64>
   1dc54:	mov	r0, #0
   1dc58:	ldr	r2, [sp, #36]	; 0x24
   1dc5c:	sub	r3, fp, #56	; 0x38
   1dc60:	str	r0, [sp]
   1dc64:	ldr	r0, [sp, #32]
   1dc68:	bl	36d30 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1dc6c:	mov	sl, r0
   1dc70:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dc74:	cmp	r0, #0
   1dc78:	beq	1efd0 <main@@Base+0x9280>
   1dc7c:	ldr	r0, [sp, #32]
   1dc80:	mov	r1, #2
   1dc84:	ldr	r0, [r0]
   1dc88:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1dc8c:	cmp	r0, #0
   1dc90:	beq	1efd0 <main@@Base+0x9280>
   1dc94:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1dc98:	str	r1, [r0]
   1dc9c:	ldr	r6, [sp, #36]	; 0x24
   1dca0:	ldr	r9, [sp, #32]
   1dca4:	sub	r0, r6, sl
   1dca8:	cmp	r0, #2
   1dcac:	blt	1dd0c <main@@Base+0x7fbc>
   1dcb0:	b	1dcdc <main@@Base+0x7f8c>
   1dcb4:	ldr	r9, [sp, #32]
   1dcb8:	ldr	r6, [sp, #36]	; 0x24
   1dcbc:	mov	r1, r8
   1dcc0:	mov	r0, r9
   1dcc4:	mov	r2, r6
   1dcc8:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   1dccc:	mov	sl, r0
   1dcd0:	sub	r0, r6, sl
   1dcd4:	cmp	r0, #2
   1dcd8:	blt	1dd0c <main@@Base+0x7fbc>
   1dcdc:	ldrb	r0, [sl]
   1dce0:	cmp	r0, #32
   1dce4:	bls	1dcf8 <main@@Base+0x7fa8>
   1dce8:	mov	r2, sl
   1dcec:	cmp	r2, r6
   1dcf0:	bne	1dd28 <main@@Base+0x7fd8>
   1dcf4:	b	1e558 <main@@Base+0x8808>
   1dcf8:	bne	1dd0c <main@@Base+0x7fbc>
   1dcfc:	mov	r2, sl
   1dd00:	ldrb	r0, [r2, #1]!
   1dd04:	cmp	r0, #32
   1dd08:	bhi	1dd20 <main@@Base+0x7fd0>
   1dd0c:	mov	r0, r9
   1dd10:	mov	r1, sl
   1dd14:	mov	r2, r6
   1dd18:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1dd1c:	mov	r2, r0
   1dd20:	cmp	r2, r6
   1dd24:	beq	1e558 <main@@Base+0x8808>
   1dd28:	ldrb	r0, [r2]
   1dd2c:	cmp	r0, #44	; 0x2c
   1dd30:	bne	1e574 <main@@Base+0x8824>
   1dd34:	add	r1, r2, #1
   1dd38:	sub	r0, r6, r1
   1dd3c:	cmp	r0, #2
   1dd40:	blt	1dd70 <main@@Base+0x8020>
   1dd44:	ldrb	r0, [r1]
   1dd48:	cmp	r0, #32
   1dd4c:	bls	1dd60 <main@@Base+0x8010>
   1dd50:	mov	r2, r1
   1dd54:	cmp	r2, r6
   1dd58:	bne	1dd88 <main@@Base+0x8038>
   1dd5c:	b	1e614 <main@@Base+0x88c4>
   1dd60:	bne	1dd70 <main@@Base+0x8020>
   1dd64:	ldrb	r0, [r2, #2]!
   1dd68:	cmp	r0, #32
   1dd6c:	bhi	1dd80 <main@@Base+0x8030>
   1dd70:	mov	r0, r9
   1dd74:	mov	r2, r6
   1dd78:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1dd7c:	mov	r2, r0
   1dd80:	cmp	r2, r6
   1dd84:	beq	1e614 <main@@Base+0x88c4>
   1dd88:	ldrb	r0, [r2]
   1dd8c:	cmp	r0, #125	; 0x7d
   1dd90:	bne	1d758 <main@@Base+0x7a08>
   1dd94:	add	r1, r2, #1
   1dd98:	sub	r0, r6, r1
   1dd9c:	cmp	r0, #2
   1dda0:	bge	1e594 <main@@Base+0x8844>
   1dda4:	b	1fb48 <main@@Base+0x9df8>
   1dda8:	ldr	r6, [sp, #36]	; 0x24
   1ddac:	ldr	r9, [sp, #32]
   1ddb0:	bne	1ddc0 <main@@Base+0x8070>
   1ddb4:	ldrb	r0, [r8, #2]!
   1ddb8:	cmp	r0, #32
   1ddbc:	bhi	1ddd0 <main@@Base+0x8080>
   1ddc0:	mov	r0, r9
   1ddc4:	mov	r2, r6
   1ddc8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ddcc:	mov	r8, r0
   1ddd0:	cmp	r8, r6
   1ddd4:	beq	1de34 <main@@Base+0x80e4>
   1ddd8:	ldrb	r0, [r8]
   1dddc:	cmp	r0, #93	; 0x5d
   1dde0:	bne	1de30 <main@@Base+0x80e0>
   1dde4:	ldr	r6, [sp, #36]	; 0x24
   1dde8:	ldr	r9, [sp, #32]
   1ddec:	add	r1, r8, #1
   1ddf0:	sub	r0, r6, r1
   1ddf4:	cmp	r0, #2
   1ddf8:	blt	1de20 <main@@Base+0x80d0>
   1ddfc:	ldrb	r0, [r1]
   1de00:	cmp	r0, #32
   1de04:	bhi	1e9e4 <main@@Base+0x8c94>
   1de08:	ldr	r6, [sp, #36]	; 0x24
   1de0c:	ldr	r9, [sp, #32]
   1de10:	bne	1de20 <main@@Base+0x80d0>
   1de14:	ldrb	r0, [r8, #2]!
   1de18:	cmp	r0, #32
   1de1c:	bhi	1cbc4 <main@@Base+0x6e74>
   1de20:	mov	r0, r9
   1de24:	mov	r2, r6
   1de28:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1de2c:	b	1cbc0 <main@@Base+0x6e70>
   1de30:	mov	r6, r8
   1de34:	mov	r0, #0
   1de38:	mov	r1, #1
   1de3c:	str	r0, [sp, #52]	; 0x34
   1de40:	str	r0, [sp, #48]	; 0x30
   1de44:	ldr	r0, [sp, #32]
   1de48:	ldr	r0, [r0]
   1de4c:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   1de50:	cmp	r0, #0
   1de54:	beq	1ff34 <main@@Base+0xa1e4>
   1de58:	mov	r8, r6
   1de5c:	ldr	r6, [sp, #36]	; 0x24
   1de60:	ldr	r9, [sp, #32]
   1de64:	mov	r4, r0
   1de68:	mov	r0, #0
   1de6c:	cmp	r8, r6
   1de70:	str	r0, [fp, #-52]	; 0xffffffcc
   1de74:	str	r0, [fp, #-56]	; 0xffffffc8
   1de78:	str	r0, [sp, #52]	; 0x34
   1de7c:	str	r0, [sp, #48]	; 0x30
   1de80:	str	r0, [sp, #60]	; 0x3c
   1de84:	beq	1dee4 <main@@Base+0x8194>
   1de88:	sub	r0, fp, #56	; 0x38
   1de8c:	mov	r1, r8
   1de90:	mov	r2, r6
   1de94:	add	r3, sp, #60	; 0x3c
   1de98:	str	r0, [sp]
   1de9c:	mov	r0, r9
   1dea0:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1dea4:	cmp	r0, r8
   1dea8:	beq	1def8 <main@@Base+0x81a8>
   1deac:	ldr	r2, [sp, #60]	; 0x3c
   1deb0:	mov	r1, r0
   1deb4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1deb8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1debc:	cmp	r2, #0
   1dec0:	beq	1df10 <main@@Base+0x81c0>
   1dec4:	rsbs	r2, r0, #0
   1dec8:	mov	r2, #-2147483648	; 0x80000000
   1decc:	sbcs	r2, r2, r3
   1ded0:	bcs	1df48 <main@@Base+0x81f8>
   1ded4:	ldr	r9, [sp, #32]
   1ded8:	ldr	r6, [sp, #36]	; 0x24
   1dedc:	mov	r3, #8
   1dee0:	b	1df24 <main@@Base+0x81d4>
   1dee4:	mov	r3, #0
   1dee8:	mov	r1, r6
   1deec:	cmp	r8, r1
   1def0:	bne	1dfa8 <main@@Base+0x8258>
   1def4:	b	1df68 <main@@Base+0x8218>
   1def8:	mov	r0, #0
   1defc:	mov	r3, #0
   1df00:	mov	r1, r8
   1df04:	cmp	r8, r1
   1df08:	bne	1dfa8 <main@@Base+0x8258>
   1df0c:	b	1df68 <main@@Base+0x8218>
   1df10:	cmn	r3, #1
   1df14:	bgt	1df50 <main@@Base+0x8200>
   1df18:	ldr	r9, [sp, #32]
   1df1c:	ldr	r6, [sp, #36]	; 0x24
   1df20:	mov	r3, #7
   1df24:	mov	r0, r9
   1df28:	mov	r2, r6
   1df2c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1df30:	mov	r1, r0
   1df34:	mov	r0, #0
   1df38:	mov	r3, #0
   1df3c:	cmp	r8, r1
   1df40:	bne	1dfa8 <main@@Base+0x8258>
   1df44:	b	1df68 <main@@Base+0x8218>
   1df48:	rsbs	r0, r0, #0
   1df4c:	rsc	r3, r3, #0
   1df50:	ldr	r6, [sp, #36]	; 0x24
   1df54:	ldr	r9, [sp, #32]
   1df58:	str	r0, [sp, #48]	; 0x30
   1df5c:	str	r3, [sp, #52]	; 0x34
   1df60:	cmp	r8, r1
   1df64:	bne	1dfa8 <main@@Base+0x8258>
   1df68:	add	r0, sp, #48	; 0x30
   1df6c:	mov	r1, r8
   1df70:	mov	r2, r6
   1df74:	str	r0, [sp]
   1df78:	movw	r0, #53516	; 0xd10c
   1df7c:	movt	r0, #5
   1df80:	add	r3, r0, #108	; 0x6c
   1df84:	mov	r0, r9
   1df88:	bl	24594 <main@@Base+0xe844>
   1df8c:	mov	r1, r0
   1df90:	cmp	r0, r8
   1df94:	cmpne	r1, r6
   1df98:	beq	1ff00 <main@@Base+0xa1b0>
   1df9c:	ldr	r0, [sp, #48]	; 0x30
   1dfa0:	ldr	r3, [sp, #52]	; 0x34
   1dfa4:	ldr	r9, [sp, #32]
   1dfa8:	stm	r4, {r0, r3}
   1dfac:	sub	r0, r6, r1
   1dfb0:	cmp	r0, #2
   1dfb4:	blt	1dfe8 <main@@Base+0x8298>
   1dfb8:	ldrb	r0, [r1]
   1dfbc:	cmp	r0, #32
   1dfc0:	bls	1dfd4 <main@@Base+0x8284>
   1dfc4:	mov	r8, r1
   1dfc8:	cmp	r8, r6
   1dfcc:	bne	1e000 <main@@Base+0x82b0>
   1dfd0:	b	1e6e0 <main@@Base+0x8990>
   1dfd4:	bne	1dfe8 <main@@Base+0x8298>
   1dfd8:	mov	r8, r1
   1dfdc:	ldrb	r0, [r8, #1]!
   1dfe0:	cmp	r0, #32
   1dfe4:	bhi	1dff8 <main@@Base+0x82a8>
   1dfe8:	mov	r0, r9
   1dfec:	mov	r2, r6
   1dff0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1dff4:	mov	r8, r0
   1dff8:	cmp	r8, r6
   1dffc:	beq	1e6e0 <main@@Base+0x8990>
   1e000:	ldrb	r0, [r8]
   1e004:	cmp	r0, #44	; 0x2c
   1e008:	bne	1e6f4 <main@@Base+0x89a4>
   1e00c:	add	r1, r8, #1
   1e010:	sub	r0, r6, r1
   1e014:	cmp	r0, #2
   1e018:	blt	1e048 <main@@Base+0x82f8>
   1e01c:	ldrb	r0, [r1]
   1e020:	cmp	r0, #32
   1e024:	bls	1e038 <main@@Base+0x82e8>
   1e028:	mov	r8, r1
   1e02c:	cmp	r8, r6
   1e030:	bne	1e060 <main@@Base+0x8310>
   1e034:	b	1e95c <main@@Base+0x8c0c>
   1e038:	bne	1e048 <main@@Base+0x82f8>
   1e03c:	ldrb	r0, [r8, #2]!
   1e040:	cmp	r0, #32
   1e044:	bhi	1e058 <main@@Base+0x8308>
   1e048:	mov	r0, r9
   1e04c:	mov	r2, r6
   1e050:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1e054:	mov	r8, r0
   1e058:	cmp	r8, r6
   1e05c:	beq	1e95c <main@@Base+0x8c0c>
   1e060:	ldrb	r0, [r8]
   1e064:	cmp	r0, #93	; 0x5d
   1e068:	beq	1e9c8 <main@@Base+0x8c78>
   1e06c:	mov	r0, #0
   1e070:	mov	r1, #1
   1e074:	str	r0, [sp, #52]	; 0x34
   1e078:	str	r0, [sp, #48]	; 0x30
   1e07c:	ldr	r0, [r9]
   1e080:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   1e084:	mov	r4, r0
   1e088:	cmp	r0, #0
   1e08c:	bne	1de68 <main@@Base+0x8118>
   1e090:	b	1fee4 <main@@Base+0xa194>
   1e094:	ldr	r6, [sp, #36]	; 0x24
   1e098:	ldr	r9, [sp, #32]
   1e09c:	bne	1e0ac <main@@Base+0x835c>
   1e0a0:	ldrb	r0, [r8, #2]!
   1e0a4:	cmp	r0, #32
   1e0a8:	bhi	1e0bc <main@@Base+0x836c>
   1e0ac:	mov	r0, r9
   1e0b0:	mov	r2, r6
   1e0b4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1e0b8:	mov	r8, r0
   1e0bc:	cmp	r7, r8
   1e0c0:	beq	1eb94 <main@@Base+0x8e44>
   1e0c4:	ldr	r0, [r9]
   1e0c8:	mov	r1, #8
   1e0cc:	mov	r2, #8
   1e0d0:	mvn	r3, #-536870912	; 0xe0000000
   1e0d4:	bl	2f49c <flatcc_builder_start_vector@@Base>
   1e0d8:	cmp	r0, #0
   1e0dc:	bne	1fea4 <main@@Base+0xa154>
   1e0e0:	cmp	r8, r6
   1e0e4:	beq	1e124 <main@@Base+0x83d4>
   1e0e8:	ldrb	r0, [r8]
   1e0ec:	cmp	r0, #91	; 0x5b
   1e0f0:	bne	1e124 <main@@Base+0x83d4>
   1e0f4:	add	r1, r8, #1
   1e0f8:	sub	r0, r6, r1
   1e0fc:	cmp	r0, #2
   1e100:	blt	1e724 <main@@Base+0x89d4>
   1e104:	ldrb	r0, [r1]
   1e108:	cmp	r0, #32
   1e10c:	bls	1e714 <main@@Base+0x89c4>
   1e110:	mov	r8, r1
   1e114:	ldr	r4, [sp, #36]	; 0x24
   1e118:	cmp	r8, r4
   1e11c:	bne	1e740 <main@@Base+0x89f0>
   1e120:	b	1e798 <main@@Base+0x8a48>
   1e124:	ldr	r9, [sp, #32]
   1e128:	mov	r1, r8
   1e12c:	mov	r2, r6
   1e130:	mov	r3, #22
   1e134:	mov	r0, r9
   1e138:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1e13c:	mov	r8, r0
   1e140:	ldr	r0, [r9]
   1e144:	bl	30714 <flatcc_builder_end_vector@@Base>
   1e148:	cmp	r0, #0
   1e14c:	str	r0, [sp, #44]	; 0x2c
   1e150:	beq	1fee0 <main@@Base+0xa190>
   1e154:	ldr	r0, [r9]
   1e158:	mov	r1, #33	; 0x21
   1e15c:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1e160:	cmp	r0, #0
   1e164:	beq	1fee0 <main@@Base+0xa190>
   1e168:	ldr	r1, [sp, #44]	; 0x2c
   1e16c:	ldr	r6, [sp, #36]	; 0x24
   1e170:	str	r1, [r0]
   1e174:	sub	r0, r6, r8
   1e178:	cmp	r0, #2
   1e17c:	bge	1ebb4 <main@@Base+0x8e64>
   1e180:	b	1ec28 <main@@Base+0x8ed8>
   1e184:	mov	r6, r0
   1e188:	ldr	r9, [sp, #32]
   1e18c:	str	r6, [sp, #60]	; 0x3c
   1e190:	cmp	sl, r8
   1e194:	bne	1e1d4 <main@@Base+0x8484>
   1e198:	ldr	r2, [sp, #36]	; 0x24
   1e19c:	movw	r3, #53516	; 0xd10c
   1e1a0:	add	r0, sp, #60	; 0x3c
   1e1a4:	mov	r1, sl
   1e1a8:	movt	r3, #5
   1e1ac:	str	r0, [sp]
   1e1b0:	mov	r0, r9
   1e1b4:	bl	2437c <main@@Base+0xe62c>
   1e1b8:	cmp	r0, sl
   1e1bc:	mov	r8, r0
   1e1c0:	ldrne	r1, [sp, #36]	; 0x24
   1e1c4:	cmpne	r8, r1
   1e1c8:	beq	1fe94 <main@@Base+0xa144>
   1e1cc:	ldr	r6, [sp, #60]	; 0x3c
   1e1d0:	ldr	r9, [sp, #32]
   1e1d4:	cmp	r6, #0
   1e1d8:	bne	1e1e8 <main@@Base+0x8498>
   1e1dc:	ldrb	r0, [r9, #8]
   1e1e0:	tst	r0, #2
   1e1e4:	beq	1f9fc <main@@Base+0x9cac>
   1e1e8:	ldr	r0, [r9]
   1e1ec:	mov	r1, #20
   1e1f0:	mov	r2, #4
   1e1f4:	mov	r3, #4
   1e1f8:	bl	30dac <flatcc_builder_table_add@@Base>
   1e1fc:	cmp	r0, #0
   1e200:	beq	1fe94 <main@@Base+0xa144>
   1e204:	str	r6, [r0]
   1e208:	b	1f9fc <main@@Base+0x9cac>
   1e20c:	ldr	r6, [sp, #36]	; 0x24
   1e210:	ldr	r9, [sp, #32]
   1e214:	bne	1e224 <main@@Base+0x84d4>
   1e218:	ldrb	r0, [sl, #2]!
   1e21c:	cmp	r0, #32
   1e220:	bhi	1e234 <main@@Base+0x84e4>
   1e224:	mov	r0, r9
   1e228:	mov	r2, r6
   1e22c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1e230:	mov	sl, r0
   1e234:	cmp	r7, sl
   1e238:	beq	1eb94 <main@@Base+0x8e44>
   1e23c:	mov	r2, r6
   1e240:	mov	r6, #0
   1e244:	cmp	sl, r2
   1e248:	str	r6, [fp, #-52]	; 0xffffffcc
   1e24c:	str	r6, [fp, #-56]	; 0xffffffc8
   1e250:	str	r6, [sp, #52]	; 0x34
   1e254:	str	r6, [sp, #48]	; 0x30
   1e258:	str	r6, [sp, #60]	; 0x3c
   1e25c:	beq	1e2b8 <main@@Base+0x8568>
   1e260:	sub	r0, fp, #56	; 0x38
   1e264:	mov	r1, sl
   1e268:	add	r3, sp, #60	; 0x3c
   1e26c:	str	r0, [sp]
   1e270:	mov	r0, r9
   1e274:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1e278:	cmp	r0, sl
   1e27c:	beq	1e2cc <main@@Base+0x857c>
   1e280:	mov	r8, r0
   1e284:	ldr	r0, [sp, #60]	; 0x3c
   1e288:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1e28c:	ldr	r7, [fp, #-52]	; 0xffffffcc
   1e290:	cmp	r0, #0
   1e294:	beq	1e2e4 <main@@Base+0x8594>
   1e298:	subs	r0, r6, #1
   1e29c:	sbcs	r0, r7, #-2147483648	; 0x80000000
   1e2a0:	bcc	1e4c0 <main@@Base+0x8770>
   1e2a4:	ldr	r0, [sp, #32]
   1e2a8:	ldr	r2, [sp, #36]	; 0x24
   1e2ac:	mov	r1, r8
   1e2b0:	mov	r3, #8
   1e2b4:	b	1e2fc <main@@Base+0x85ac>
   1e2b8:	mov	r7, #0
   1e2bc:	mov	r8, r2
   1e2c0:	cmp	sl, r8
   1e2c4:	bne	1e518 <main@@Base+0x87c8>
   1e2c8:	b	1e4d8 <main@@Base+0x8788>
   1e2cc:	mov	r6, #0
   1e2d0:	mov	r7, #0
   1e2d4:	mov	r8, sl
   1e2d8:	cmp	sl, r8
   1e2dc:	bne	1e518 <main@@Base+0x87c8>
   1e2e0:	b	1e4d8 <main@@Base+0x8788>
   1e2e4:	cmn	r7, #1
   1e2e8:	bgt	1e4c8 <main@@Base+0x8778>
   1e2ec:	ldr	r0, [sp, #32]
   1e2f0:	ldr	r2, [sp, #36]	; 0x24
   1e2f4:	mov	r1, r8
   1e2f8:	mov	r3, #7
   1e2fc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1e300:	mov	r8, r0
   1e304:	mov	r6, #0
   1e308:	mov	r7, #0
   1e30c:	cmp	sl, r8
   1e310:	bne	1e518 <main@@Base+0x87c8>
   1e314:	b	1e4d8 <main@@Base+0x8788>
   1e318:	ldr	r6, [sp, #36]	; 0x24
   1e31c:	bne	1e32c <main@@Base+0x85dc>
   1e320:	ldrb	r0, [sl, #2]!
   1e324:	cmp	r0, #32
   1e328:	bhi	1e33c <main@@Base+0x85ec>
   1e32c:	ldr	r0, [sp, #32]
   1e330:	mov	r2, r6
   1e334:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1e338:	mov	sl, r0
   1e33c:	cmp	sl, r6
   1e340:	mov	r3, r6
   1e344:	beq	1e398 <main@@Base+0x8648>
   1e348:	ldrb	r0, [sl]
   1e34c:	cmp	r0, #125	; 0x7d
   1e350:	bne	1e394 <main@@Base+0x8644>
   1e354:	ldr	r6, [sp, #36]	; 0x24
   1e358:	ldr	r9, [sp, #32]
   1e35c:	add	r1, sl, #1
   1e360:	sub	r0, r6, r1
   1e364:	cmp	r0, #2
   1e368:	blt	1fcbc <main@@Base+0x9f6c>
   1e36c:	ldrb	r0, [r1]
   1e370:	cmp	r0, #32
   1e374:	bhi	1e998 <main@@Base+0x8c48>
   1e378:	ldr	r6, [sp, #36]	; 0x24
   1e37c:	ldr	r9, [sp, #32]
   1e380:	bne	1fcbc <main@@Base+0x9f6c>
   1e384:	ldrb	r0, [sl, #2]!
   1e388:	cmp	r0, #32
   1e38c:	bhi	1b8c4 <main@@Base+0x5b74>
   1e390:	b	1fcbc <main@@Base+0x9f6c>
   1e394:	mov	r3, sl
   1e398:	ldr	r6, [sp, #36]	; 0x24
   1e39c:	ldr	r9, [sp, #32]
   1e3a0:	cmp	r3, r6
   1e3a4:	mov	r1, r6
   1e3a8:	beq	1e3d8 <main@@Base+0x8688>
   1e3ac:	ldrb	r0, [r3]
   1e3b0:	cmp	r0, #34	; 0x22
   1e3b4:	bne	1e3c0 <main@@Base+0x8670>
   1e3b8:	add	r1, r3, #1
   1e3bc:	b	1e3d8 <main@@Base+0x8688>
   1e3c0:	mov	r1, r3
   1e3c4:	mov	r0, r9
   1e3c8:	mov	r2, r6
   1e3cc:	mov	r3, #5
   1e3d0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1e3d4:	mov	r1, r0
   1e3d8:	mov	r0, r9
   1e3dc:	mov	r2, r6
   1e3e0:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   1e3e4:	mov	r2, r0
   1e3e8:	sub	r0, r6, r0
   1e3ec:	cmp	r0, #2
   1e3f0:	blt	1e424 <main@@Base+0x86d4>
   1e3f4:	ldrb	r0, [r2]
   1e3f8:	cmp	r0, #32
   1e3fc:	bls	1e410 <main@@Base+0x86c0>
   1e400:	mov	r3, r2
   1e404:	cmp	r3, r6
   1e408:	bne	1e440 <main@@Base+0x86f0>
   1e40c:	b	1e948 <main@@Base+0x8bf8>
   1e410:	bne	1e424 <main@@Base+0x86d4>
   1e414:	mov	r3, r2
   1e418:	ldrb	r0, [r3, #1]!
   1e41c:	cmp	r0, #32
   1e420:	bhi	1e438 <main@@Base+0x86e8>
   1e424:	mov	r1, r2
   1e428:	mov	r0, r9
   1e42c:	mov	r2, r6
   1e430:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1e434:	mov	r3, r0
   1e438:	cmp	r3, r6
   1e43c:	beq	1e948 <main@@Base+0x8bf8>
   1e440:	ldrb	r0, [r3]
   1e444:	cmp	r0, #44	; 0x2c
   1e448:	bne	1e96c <main@@Base+0x8c1c>
   1e44c:	add	r1, r3, #1
   1e450:	sub	r0, r6, r1
   1e454:	cmp	r0, #2
   1e458:	blt	1e488 <main@@Base+0x8738>
   1e45c:	ldrb	r0, [r1]
   1e460:	cmp	r0, #32
   1e464:	bls	1e478 <main@@Base+0x8728>
   1e468:	mov	r3, r1
   1e46c:	cmp	r3, r6
   1e470:	bne	1e4a0 <main@@Base+0x8750>
   1e474:	b	1e9ec <main@@Base+0x8c9c>
   1e478:	bne	1e488 <main@@Base+0x8738>
   1e47c:	ldrb	r0, [r3, #2]!
   1e480:	cmp	r0, #32
   1e484:	bhi	1e498 <main@@Base+0x8748>
   1e488:	mov	r0, r9
   1e48c:	mov	r2, r6
   1e490:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1e494:	mov	r3, r0
   1e498:	cmp	r3, r6
   1e49c:	beq	1e9ec <main@@Base+0x8c9c>
   1e4a0:	ldrb	r0, [r3]
   1e4a4:	cmp	r0, #125	; 0x7d
   1e4a8:	bne	1e3a0 <main@@Base+0x8650>
   1e4ac:	add	r1, r3, #1
   1e4b0:	sub	r0, r6, r1
   1e4b4:	cmp	r0, #2
   1e4b8:	bge	1e98c <main@@Base+0x8c3c>
   1e4bc:	b	1fcbc <main@@Base+0x9f6c>
   1e4c0:	rsbs	r6, r6, #0
   1e4c4:	rsc	r7, r7, #0
   1e4c8:	str	r6, [sp, #48]	; 0x30
   1e4cc:	str	r7, [sp, #52]	; 0x34
   1e4d0:	cmp	sl, r8
   1e4d4:	bne	1e518 <main@@Base+0x87c8>
   1e4d8:	add	r0, sp, #48	; 0x30
   1e4dc:	ldr	r2, [sp, #36]	; 0x24
   1e4e0:	mov	r1, sl
   1e4e4:	str	r0, [sp]
   1e4e8:	movw	r0, #53516	; 0xd10c
   1e4ec:	movt	r0, #5
   1e4f0:	add	r3, r0, #24
   1e4f4:	ldr	r0, [sp, #32]
   1e4f8:	bl	24594 <main@@Base+0xe844>
   1e4fc:	cmp	r0, sl
   1e500:	mov	r8, r0
   1e504:	ldrne	r1, [sp, #36]	; 0x24
   1e508:	cmpne	r8, r1
   1e50c:	beq	1fe94 <main@@Base+0xa144>
   1e510:	ldr	r6, [sp, #48]	; 0x30
   1e514:	ldr	r7, [sp, #52]	; 0x34
   1e518:	ldr	r9, [sp, #32]
   1e51c:	orrs	r0, r6, r7
   1e520:	bne	1e530 <main@@Base+0x87e0>
   1e524:	ldrb	r0, [r9, #8]
   1e528:	tst	r0, #2
   1e52c:	beq	1f9fc <main@@Base+0x9cac>
   1e530:	ldr	r0, [r9]
   1e534:	mov	r1, #22
   1e538:	b	1ed1c <main@@Base+0x8fcc>
   1e53c:	ldr	r9, [sp, #32]
   1e540:	ldr	r6, [sp, #36]	; 0x24
   1e544:	mov	r1, r8
   1e548:	mov	r0, r9
   1e54c:	mov	r2, r6
   1e550:	mov	r3, #9
   1e554:	b	1b33c <main@@Base+0x55ec>
   1e558:	mov	sl, r6
   1e55c:	ldr	r0, [r9, #20]
   1e560:	cmp	r0, #0
   1e564:	bne	1b190 <main@@Base+0x5440>
   1e568:	b	1e5b8 <main@@Base+0x8868>
   1e56c:	mov	sl, r6
   1e570:	b	1c5f4 <main@@Base+0x68a4>
   1e574:	cmp	r0, #125	; 0x7d
   1e578:	bne	1f920 <main@@Base+0x9bd0>
   1e57c:	ldr	r6, [sp, #36]	; 0x24
   1e580:	ldr	r9, [sp, #32]
   1e584:	add	r1, r2, #1
   1e588:	sub	r0, r6, r1
   1e58c:	cmp	r0, #2
   1e590:	blt	1fb48 <main@@Base+0x9df8>
   1e594:	ldrb	r0, [r1]
   1e598:	cmp	r0, #32
   1e59c:	bls	1fb2c <main@@Base+0x9ddc>
   1e5a0:	ldr	r6, [sp, #36]	; 0x24
   1e5a4:	ldr	r9, [sp, #32]
   1e5a8:	mov	sl, r1
   1e5ac:	ldr	r0, [r9, #20]
   1e5b0:	cmp	r0, #0
   1e5b4:	bne	1b190 <main@@Base+0x5440>
   1e5b8:	ldr	r0, [r9]
   1e5bc:	bl	30400 <flatcc_builder_end_table@@Base>
   1e5c0:	cmp	r0, #0
   1e5c4:	str	r0, [sp, #44]	; 0x2c
   1e5c8:	bne	1b1b4 <main@@Base+0x5464>
   1e5cc:	b	1b190 <main@@Base+0x5440>
   1e5d0:	cmp	r0, #93	; 0x5d
   1e5d4:	bne	1f93c <main@@Base+0x9bec>
   1e5d8:	ldr	r6, [sp, #36]	; 0x24
   1e5dc:	ldr	r9, [sp, #32]
   1e5e0:	add	r1, r2, #1
   1e5e4:	sub	r0, r6, r1
   1e5e8:	cmp	r0, #2
   1e5ec:	blt	1fba4 <main@@Base+0x9e54>
   1e5f0:	ldrb	r0, [r1]
   1e5f4:	cmp	r0, #32
   1e5f8:	bls	1fb88 <main@@Base+0x9e38>
   1e5fc:	ldr	r6, [sp, #36]	; 0x24
   1e600:	ldr	r9, [sp, #32]
   1e604:	mov	sl, r1
   1e608:	b	1c5f4 <main@@Base+0x68a4>
   1e60c:	mov	sl, r6
   1e610:	b	1fbd4 <main@@Base+0x9e84>
   1e614:	mov	r0, r9
   1e618:	mov	r1, r6
   1e61c:	b	1f930 <main@@Base+0x9be0>
   1e620:	mov	r0, r9
   1e624:	mov	r1, r6
   1e628:	b	1f94c <main@@Base+0x9bfc>
   1e62c:	cmp	r0, #93	; 0x5d
   1e630:	bne	1f958 <main@@Base+0x9c08>
   1e634:	ldr	r0, [sp, #36]	; 0x24
   1e638:	add	r1, sl, #1
   1e63c:	sub	r0, r0, r1
   1e640:	cmp	r0, #2
   1e644:	blt	1fbc4 <main@@Base+0x9e74>
   1e648:	b	1e674 <main@@Base+0x8924>
   1e64c:	mov	r0, r9
   1e650:	mov	r1, r6
   1e654:	mov	r2, r6
   1e658:	b	1f964 <main@@Base+0x9c14>
   1e65c:	mov	sl, r6
   1e660:	b	1c930 <main@@Base+0x6be0>
   1e664:	add	r1, sl, #1
   1e668:	sub	r0, r6, r1
   1e66c:	cmp	r0, #2
   1e670:	blt	1fbc4 <main@@Base+0x9e74>
   1e674:	ldrb	r0, [r1]
   1e678:	cmp	r0, #32
   1e67c:	bls	1fbb4 <main@@Base+0x9e64>
   1e680:	mov	sl, r1
   1e684:	b	1fbd4 <main@@Base+0x9e84>
   1e688:	cmp	r0, #93	; 0x5d
   1e68c:	bne	1fa10 <main@@Base+0x9cc0>
   1e690:	ldr	r6, [sp, #36]	; 0x24
   1e694:	ldr	r9, [sp, #32]
   1e698:	add	r1, r2, #1
   1e69c:	sub	r0, r6, r1
   1e6a0:	cmp	r0, #2
   1e6a4:	blt	1fc54 <main@@Base+0x9f04>
   1e6a8:	ldrb	r0, [r1]
   1e6ac:	cmp	r0, #32
   1e6b0:	bls	1fc38 <main@@Base+0x9ee8>
   1e6b4:	ldr	r6, [sp, #36]	; 0x24
   1e6b8:	ldr	r9, [sp, #32]
   1e6bc:	mov	sl, r1
   1e6c0:	b	1c930 <main@@Base+0x6be0>
   1e6c4:	ldr	r9, [sp, #32]
   1e6c8:	ldr	r6, [sp, #36]	; 0x24
   1e6cc:	mov	r1, r2
   1e6d0:	mov	r0, r9
   1e6d4:	mov	r2, r6
   1e6d8:	mov	r3, #9
   1e6dc:	b	1b270 <main@@Base+0x5520>
   1e6e0:	mov	r8, r6
   1e6e4:	b	1fc94 <main@@Base+0x9f44>
   1e6e8:	mov	r0, r9
   1e6ec:	mov	r1, r6
   1e6f0:	b	1fa20 <main@@Base+0x9cd0>
   1e6f4:	cmp	r0, #93	; 0x5d
   1e6f8:	bne	1fa38 <main@@Base+0x9ce8>
   1e6fc:	ldr	r0, [sp, #36]	; 0x24
   1e700:	add	r1, r8, #1
   1e704:	sub	r0, r0, r1
   1e708:	cmp	r0, #2
   1e70c:	blt	1fc84 <main@@Base+0x9f34>
   1e710:	b	1e9d8 <main@@Base+0x8c88>
   1e714:	bne	1e724 <main@@Base+0x89d4>
   1e718:	ldrb	r0, [r8, #2]!
   1e71c:	cmp	r0, #32
   1e720:	bhi	1e734 <main@@Base+0x89e4>
   1e724:	ldr	r0, [sp, #32]
   1e728:	ldr	r2, [sp, #36]	; 0x24
   1e72c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1e730:	mov	r8, r0
   1e734:	ldr	r4, [sp, #36]	; 0x24
   1e738:	cmp	r8, r4
   1e73c:	beq	1e798 <main@@Base+0x8a48>
   1e740:	ldrb	r0, [r8]
   1e744:	cmp	r0, #93	; 0x5d
   1e748:	bne	1e794 <main@@Base+0x8a44>
   1e74c:	ldr	r0, [sp, #36]	; 0x24
   1e750:	ldr	r9, [sp, #32]
   1e754:	add	r1, r8, #1
   1e758:	sub	r0, r0, r1
   1e75c:	cmp	r0, #2
   1e760:	blt	1e784 <main@@Base+0x8a34>
   1e764:	ldrb	r0, [r1]
   1e768:	cmp	r0, #32
   1e76c:	bhi	1fad8 <main@@Base+0x9d88>
   1e770:	ldr	r9, [sp, #32]
   1e774:	bne	1e784 <main@@Base+0x8a34>
   1e778:	ldrb	r0, [r8, #2]!
   1e77c:	cmp	r0, #32
   1e780:	bhi	1e140 <main@@Base+0x83f0>
   1e784:	ldr	r2, [sp, #36]	; 0x24
   1e788:	mov	r0, r9
   1e78c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1e790:	b	1e13c <main@@Base+0x83ec>
   1e794:	mov	r4, r8
   1e798:	mov	r0, #0
   1e79c:	mov	r1, #1
   1e7a0:	str	r0, [fp, #-52]	; 0xffffffcc
   1e7a4:	str	r0, [fp, #-56]	; 0xffffffc8
   1e7a8:	ldr	r0, [sp, #32]
   1e7ac:	ldr	r0, [r0]
   1e7b0:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   1e7b4:	cmp	r0, #0
   1e7b8:	beq	1ff18 <main@@Base+0xa1c8>
   1e7bc:	ldr	r6, [sp, #36]	; 0x24
   1e7c0:	ldr	r9, [sp, #32]
   1e7c4:	mov	r7, r0
   1e7c8:	mov	r8, r4
   1e7cc:	mov	r0, r9
   1e7d0:	mov	r1, r8
   1e7d4:	mov	r2, r6
   1e7d8:	sub	r3, fp, #56	; 0x38
   1e7dc:	bl	3604c <flatcc_json_parser_double@@Base>
   1e7e0:	mov	r4, r0
   1e7e4:	cmp	r8, r0
   1e7e8:	bne	1e82c <main@@Base+0x8adc>
   1e7ec:	sub	r0, fp, #56	; 0x38
   1e7f0:	mov	r1, r8
   1e7f4:	mov	r2, r6
   1e7f8:	str	r0, [sp]
   1e7fc:	movw	r0, #53516	; 0xd10c
   1e800:	movt	r0, #5
   1e804:	add	r3, r0, #96	; 0x60
   1e808:	mov	r0, r9
   1e80c:	bl	24b9c <main@@Base+0xee4c>
   1e810:	mov	r4, r0
   1e814:	cmp	r0, r8
   1e818:	beq	1ff18 <main@@Base+0xa1c8>
   1e81c:	ldr	r6, [sp, #36]	; 0x24
   1e820:	ldr	r9, [sp, #32]
   1e824:	cmp	r4, r6
   1e828:	beq	1feec <main@@Base+0xa19c>
   1e82c:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1e830:	sub	r0, r6, r4
   1e834:	cmp	r0, #2
   1e838:	vstr	d16, [r7]
   1e83c:	blt	1e87c <main@@Base+0x8b2c>
   1e840:	ldrb	r0, [r4]
   1e844:	cmp	r0, #32
   1e848:	bls	1e860 <main@@Base+0x8b10>
   1e84c:	ldr	r6, [sp, #36]	; 0x24
   1e850:	mov	r8, r4
   1e854:	cmp	r8, r6
   1e858:	bne	1e898 <main@@Base+0x8b48>
   1e85c:	b	1fa2c <main@@Base+0x9cdc>
   1e860:	ldr	r6, [sp, #36]	; 0x24
   1e864:	ldr	r9, [sp, #32]
   1e868:	bne	1e87c <main@@Base+0x8b2c>
   1e86c:	mov	r8, r4
   1e870:	ldrb	r0, [r8, #1]!
   1e874:	cmp	r0, #32
   1e878:	bhi	1e890 <main@@Base+0x8b40>
   1e87c:	mov	r0, r9
   1e880:	mov	r1, r4
   1e884:	mov	r2, r6
   1e888:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1e88c:	mov	r8, r0
   1e890:	cmp	r8, r6
   1e894:	beq	1fa2c <main@@Base+0x9cdc>
   1e898:	ldrb	r0, [r8]
   1e89c:	cmp	r0, #44	; 0x2c
   1e8a0:	bne	1fa50 <main@@Base+0x9d00>
   1e8a4:	ldr	r4, [sp, #36]	; 0x24
   1e8a8:	add	r1, r8, #1
   1e8ac:	sub	r0, r4, r1
   1e8b0:	cmp	r0, #2
   1e8b4:	ldr	r0, [sp, #32]
   1e8b8:	blt	1e8f4 <main@@Base+0x8ba4>
   1e8bc:	ldrb	r0, [r1]
   1e8c0:	cmp	r0, #32
   1e8c4:	bls	1e8dc <main@@Base+0x8b8c>
   1e8c8:	ldr	r4, [sp, #36]	; 0x24
   1e8cc:	mov	r8, r1
   1e8d0:	cmp	r8, r4
   1e8d4:	bne	1e908 <main@@Base+0x8bb8>
   1e8d8:	b	1fa8c <main@@Base+0x9d3c>
   1e8dc:	ldr	r4, [sp, #36]	; 0x24
   1e8e0:	ldr	r0, [sp, #32]
   1e8e4:	bne	1e8f4 <main@@Base+0x8ba4>
   1e8e8:	ldrb	r2, [r8, #2]!
   1e8ec:	cmp	r2, #32
   1e8f0:	bhi	1e900 <main@@Base+0x8bb0>
   1e8f4:	mov	r2, r4
   1e8f8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1e8fc:	mov	r8, r0
   1e900:	cmp	r8, r4
   1e904:	beq	1fa8c <main@@Base+0x9d3c>
   1e908:	ldrb	r0, [r8]
   1e90c:	cmp	r0, #93	; 0x5d
   1e910:	beq	1fab8 <main@@Base+0x9d68>
   1e914:	ldr	r9, [sp, #32]
   1e918:	mov	r0, #0
   1e91c:	mov	r1, #1
   1e920:	str	r0, [fp, #-52]	; 0xffffffcc
   1e924:	str	r0, [fp, #-56]	; 0xffffffc8
   1e928:	ldr	r0, [r9]
   1e92c:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   1e930:	ldr	r6, [sp, #36]	; 0x24
   1e934:	mov	r7, r0
   1e938:	cmp	r0, #0
   1e93c:	mov	r4, r8
   1e940:	bne	1e7cc <main@@Base+0x8a7c>
   1e944:	b	1feec <main@@Base+0xa19c>
   1e948:	mov	sl, r6
   1e94c:	ldr	r0, [r9, #20]
   1e950:	cmp	r0, #0
   1e954:	bne	1b8d0 <main@@Base+0x5b80>
   1e958:	b	1e9b0 <main@@Base+0x8c60>
   1e95c:	mov	r0, r9
   1e960:	mov	r1, r6
   1e964:	mov	r2, r6
   1e968:	b	1fa44 <main@@Base+0x9cf4>
   1e96c:	cmp	r0, #125	; 0x7d
   1e970:	bne	1fa9c <main@@Base+0x9d4c>
   1e974:	ldr	r6, [sp, #36]	; 0x24
   1e978:	ldr	r9, [sp, #32]
   1e97c:	add	r1, r3, #1
   1e980:	sub	r0, r6, r1
   1e984:	cmp	r0, #2
   1e988:	blt	1fcbc <main@@Base+0x9f6c>
   1e98c:	ldrb	r0, [r1]
   1e990:	cmp	r0, #32
   1e994:	bls	1fca0 <main@@Base+0x9f50>
   1e998:	ldr	r6, [sp, #36]	; 0x24
   1e99c:	ldr	r9, [sp, #32]
   1e9a0:	mov	sl, r1
   1e9a4:	ldr	r0, [r9, #20]
   1e9a8:	cmp	r0, #0
   1e9ac:	bne	1b8d0 <main@@Base+0x5b80>
   1e9b0:	ldr	r0, [r9]
   1e9b4:	bl	30400 <flatcc_builder_end_table@@Base>
   1e9b8:	cmp	r0, #0
   1e9bc:	str	r0, [sp, #44]	; 0x2c
   1e9c0:	bne	1b8f4 <main@@Base+0x5ba4>
   1e9c4:	b	1b8d0 <main@@Base+0x5b80>
   1e9c8:	add	r1, r8, #1
   1e9cc:	sub	r0, r6, r1
   1e9d0:	cmp	r0, #2
   1e9d4:	blt	1fc84 <main@@Base+0x9f34>
   1e9d8:	ldrb	r0, [r1]
   1e9dc:	cmp	r0, #32
   1e9e0:	bls	1fc74 <main@@Base+0x9f24>
   1e9e4:	mov	r8, r1
   1e9e8:	b	1fc94 <main@@Base+0x9f44>
   1e9ec:	mov	r0, r9
   1e9f0:	mov	r1, r6
   1e9f4:	b	1faac <main@@Base+0x9d5c>
   1e9f8:	ldr	r6, [sp, #36]	; 0x24
   1e9fc:	ldr	r9, [sp, #32]
   1ea00:	bne	1ea10 <main@@Base+0x8cc0>
   1ea04:	ldrb	r0, [sl, #2]!
   1ea08:	cmp	r0, #32
   1ea0c:	bhi	1ea20 <main@@Base+0x8cd0>
   1ea10:	mov	r0, r9
   1ea14:	mov	r2, r6
   1ea18:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ea1c:	mov	sl, r0
   1ea20:	cmp	r7, sl
   1ea24:	beq	1eb94 <main@@Base+0x8e44>
   1ea28:	mov	r5, #0
   1ea2c:	cmp	sl, r6
   1ea30:	str	r5, [fp, #-52]	; 0xffffffcc
   1ea34:	str	r5, [fp, #-56]	; 0xffffffc8
   1ea38:	str	r5, [sp, #60]	; 0x3c
   1ea3c:	str	r5, [sp, #48]	; 0x30
   1ea40:	beq	1ea98 <main@@Base+0x8d48>
   1ea44:	sub	r0, fp, #56	; 0x38
   1ea48:	ldr	r2, [sp, #36]	; 0x24
   1ea4c:	mov	r1, sl
   1ea50:	add	r3, sp, #48	; 0x30
   1ea54:	str	r0, [sp]
   1ea58:	ldr	r0, [sp, #32]
   1ea5c:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1ea60:	cmp	r0, sl
   1ea64:	beq	1eaa8 <main@@Base+0x8d58>
   1ea68:	mov	r1, r0
   1ea6c:	ldr	r0, [sp, #48]	; 0x30
   1ea70:	cmp	r0, #0
   1ea74:	beq	1eab8 <main@@Base+0x8d68>
   1ea78:	ldr	r0, [sp, #32]
   1ea7c:	ldr	r2, [sp, #36]	; 0x24
   1ea80:	mov	r3, #8
   1ea84:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1ea88:	mov	r8, r0
   1ea8c:	cmp	sl, r8
   1ea90:	bne	1f9c0 <main@@Base+0x9c70>
   1ea94:	b	1f984 <main@@Base+0x9c34>
   1ea98:	ldr	r8, [sp, #36]	; 0x24
   1ea9c:	cmp	sl, r8
   1eaa0:	bne	1f9c0 <main@@Base+0x9c70>
   1eaa4:	b	1f984 <main@@Base+0x9c34>
   1eaa8:	mov	r8, sl
   1eaac:	cmp	sl, r8
   1eab0:	bne	1f9c0 <main@@Base+0x9c70>
   1eab4:	b	1f984 <main@@Base+0x9c34>
   1eab8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1eabc:	cmp	r0, #0
   1eac0:	beq	1f970 <main@@Base+0x9c20>
   1eac4:	ldr	r0, [sp, #32]
   1eac8:	ldr	r2, [sp, #36]	; 0x24
   1eacc:	mov	r3, #7
   1ead0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1ead4:	mov	r8, r0
   1ead8:	cmp	sl, r8
   1eadc:	bne	1f9c0 <main@@Base+0x9c70>
   1eae0:	b	1f984 <main@@Base+0x9c34>
   1eae4:	ldr	r6, [sp, #36]	; 0x24
   1eae8:	ldr	r9, [sp, #32]
   1eaec:	bne	1eafc <main@@Base+0x8dac>
   1eaf0:	ldrb	r0, [sl, #2]!
   1eaf4:	cmp	r0, #32
   1eaf8:	bhi	1eb0c <main@@Base+0x8dbc>
   1eafc:	mov	r0, r9
   1eb00:	mov	r2, r6
   1eb04:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1eb08:	mov	sl, r0
   1eb0c:	cmp	r7, sl
   1eb10:	beq	1eb94 <main@@Base+0x8e44>
   1eb14:	mov	r0, r6
   1eb18:	mov	r6, #0
   1eb1c:	cmp	sl, r0
   1eb20:	str	r6, [fp, #-52]	; 0xffffffcc
   1eb24:	str	r6, [fp, #-56]	; 0xffffffc8
   1eb28:	str	r6, [sp, #52]	; 0x34
   1eb2c:	str	r6, [sp, #48]	; 0x30
   1eb30:	str	r6, [sp, #60]	; 0x3c
   1eb34:	beq	1ec74 <main@@Base+0x8f24>
   1eb38:	sub	r0, fp, #56	; 0x38
   1eb3c:	ldr	r2, [sp, #36]	; 0x24
   1eb40:	mov	r1, sl
   1eb44:	add	r3, sp, #60	; 0x3c
   1eb48:	str	r0, [sp]
   1eb4c:	ldr	r0, [sp, #32]
   1eb50:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1eb54:	cmp	r0, sl
   1eb58:	beq	1ec88 <main@@Base+0x8f38>
   1eb5c:	mov	r1, r0
   1eb60:	ldr	r0, [sp, #60]	; 0x3c
   1eb64:	cmp	r0, #0
   1eb68:	beq	1eca0 <main@@Base+0x8f50>
   1eb6c:	ldr	r0, [sp, #32]
   1eb70:	ldr	r2, [sp, #36]	; 0x24
   1eb74:	mov	r3, #8
   1eb78:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1eb7c:	mov	r8, r0
   1eb80:	mov	r6, #0
   1eb84:	mov	r7, #0
   1eb88:	cmp	sl, r8
   1eb8c:	bne	1ecfc <main@@Base+0x8fac>
   1eb90:	b	1ecbc <main@@Base+0x8f6c>
   1eb94:	mov	r0, r9
   1eb98:	mov	r1, r7
   1eb9c:	mov	r2, r6
   1eba0:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   1eba4:	mov	r8, r0
   1eba8:	sub	r0, r6, r8
   1ebac:	cmp	r0, #2
   1ebb0:	blt	1ec28 <main@@Base+0x8ed8>
   1ebb4:	ldrb	r0, [r8]
   1ebb8:	cmp	r0, #32
   1ebbc:	bls	1ec14 <main@@Base+0x8ec4>
   1ebc0:	mov	r2, r8
   1ebc4:	cmp	r2, r6
   1ebc8:	beq	1fe00 <main@@Base+0xa0b0>
   1ebcc:	ldrb	r0, [r2]
   1ebd0:	ldr	r5, [sp, #28]
   1ebd4:	cmp	r0, #44	; 0x2c
   1ebd8:	bne	1fe18 <main@@Base+0xa0c8>
   1ebdc:	add	r1, r2, #1
   1ebe0:	sub	r0, r6, r1
   1ebe4:	cmp	r0, #2
   1ebe8:	blt	1ec58 <main@@Base+0x8f08>
   1ebec:	ldrb	r0, [r1]
   1ebf0:	cmp	r0, #32
   1ebf4:	bls	1ec48 <main@@Base+0x8ef8>
   1ebf8:	mov	r2, r1
   1ebfc:	cmp	r2, r6
   1ec00:	beq	1fe50 <main@@Base+0xa100>
   1ec04:	ldrb	r0, [r2]
   1ec08:	cmp	r0, #125	; 0x7d
   1ec0c:	bne	167fc <main@@Base+0xaac>
   1ec10:	b	1fe20 <main@@Base+0xa0d0>
   1ec14:	bne	1ec28 <main@@Base+0x8ed8>
   1ec18:	mov	r2, r8
   1ec1c:	ldrb	r0, [r2, #1]!
   1ec20:	cmp	r0, #32
   1ec24:	bhi	1ec3c <main@@Base+0x8eec>
   1ec28:	mov	r0, r9
   1ec2c:	mov	r1, r8
   1ec30:	mov	r2, r6
   1ec34:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ec38:	mov	r2, r0
   1ec3c:	cmp	r2, r6
   1ec40:	bne	1ebcc <main@@Base+0x8e7c>
   1ec44:	b	1fe00 <main@@Base+0xa0b0>
   1ec48:	bne	1ec58 <main@@Base+0x8f08>
   1ec4c:	ldrb	r0, [r2, #2]!
   1ec50:	cmp	r0, #32
   1ec54:	bhi	1ec68 <main@@Base+0x8f18>
   1ec58:	mov	r0, r9
   1ec5c:	mov	r2, r6
   1ec60:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ec64:	mov	r2, r0
   1ec68:	cmp	r2, r6
   1ec6c:	bne	1ec04 <main@@Base+0x8eb4>
   1ec70:	b	1fe50 <main@@Base+0xa100>
   1ec74:	ldr	r8, [sp, #36]	; 0x24
   1ec78:	mov	r7, #0
   1ec7c:	cmp	sl, r8
   1ec80:	bne	1ecfc <main@@Base+0x8fac>
   1ec84:	b	1ecbc <main@@Base+0x8f6c>
   1ec88:	mov	r6, #0
   1ec8c:	mov	r7, #0
   1ec90:	mov	r8, sl
   1ec94:	cmp	sl, r8
   1ec98:	bne	1ecfc <main@@Base+0x8fac>
   1ec9c:	b	1ecbc <main@@Base+0x8f6c>
   1eca0:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1eca4:	ldr	r7, [fp, #-52]	; 0xffffffcc
   1eca8:	mov	r8, r1
   1ecac:	str	r7, [sp, #52]	; 0x34
   1ecb0:	str	r6, [sp, #48]	; 0x30
   1ecb4:	cmp	sl, r8
   1ecb8:	bne	1ecfc <main@@Base+0x8fac>
   1ecbc:	add	r0, sp, #48	; 0x30
   1ecc0:	ldr	r2, [sp, #36]	; 0x24
   1ecc4:	mov	r1, sl
   1ecc8:	str	r0, [sp]
   1eccc:	movw	r0, #53516	; 0xd10c
   1ecd0:	movt	r0, #5
   1ecd4:	add	r3, r0, #72	; 0x48
   1ecd8:	ldr	r0, [sp, #32]
   1ecdc:	bl	249ac <main@@Base+0xec5c>
   1ece0:	cmp	r0, sl
   1ece4:	mov	r8, r0
   1ece8:	ldrne	r1, [sp, #36]	; 0x24
   1ecec:	cmpne	r8, r1
   1ecf0:	beq	1fe94 <main@@Base+0xa144>
   1ecf4:	ldr	r6, [sp, #48]	; 0x30
   1ecf8:	ldr	r7, [sp, #52]	; 0x34
   1ecfc:	ldr	r9, [sp, #32]
   1ed00:	orrs	r0, r6, r7
   1ed04:	bne	1ed14 <main@@Base+0x8fc4>
   1ed08:	ldrb	r0, [r9, #8]
   1ed0c:	tst	r0, #2
   1ed10:	beq	1f9fc <main@@Base+0x9cac>
   1ed14:	ldr	r0, [r9]
   1ed18:	mov	r1, #23
   1ed1c:	mov	r2, #8
   1ed20:	mov	r3, #8
   1ed24:	bl	30dac <flatcc_builder_table_add@@Base>
   1ed28:	cmp	r0, #0
   1ed2c:	beq	1fe94 <main@@Base+0xa144>
   1ed30:	strd	r6, [r0]
   1ed34:	ldr	r9, [sp, #32]
   1ed38:	b	1f9fc <main@@Base+0x9cac>
   1ed3c:	bne	1ed4c <main@@Base+0x8ffc>
   1ed40:	ldrb	r0, [r8, #2]!
   1ed44:	cmp	r0, #32
   1ed48:	bhi	1ed5c <main@@Base+0x900c>
   1ed4c:	ldr	r0, [sp, #32]
   1ed50:	ldr	r2, [sp, #36]	; 0x24
   1ed54:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ed58:	mov	r8, r0
   1ed5c:	ldr	r5, [sp, #36]	; 0x24
   1ed60:	cmp	r8, r5
   1ed64:	beq	1ed78 <main@@Base+0x9028>
   1ed68:	ldrb	r0, [r8]
   1ed6c:	cmp	r0, #93	; 0x5d
   1ed70:	beq	1fb04 <main@@Base+0x9db4>
   1ed74:	mov	r5, r8
   1ed78:	mov	r0, #0
   1ed7c:	mov	r1, #1
   1ed80:	strb	r0, [sp, #60]	; 0x3c
   1ed84:	ldr	r0, [sp, #32]
   1ed88:	ldr	r0, [r0]
   1ed8c:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   1ed90:	cmp	r0, #0
   1ed94:	beq	1ff48 <main@@Base+0xa1f8>
   1ed98:	mov	r4, r0
   1ed9c:	mov	r8, r5
   1eda0:	ldr	r6, [sp, #36]	; 0x24
   1eda4:	mov	r5, #0
   1eda8:	str	r5, [fp, #-52]	; 0xffffffcc
   1edac:	str	r5, [fp, #-56]	; 0xffffffc8
   1edb0:	strb	r5, [sp, #60]	; 0x3c
   1edb4:	str	r5, [sp, #48]	; 0x30
   1edb8:	cmp	r8, r6
   1edbc:	beq	1ee04 <main@@Base+0x90b4>
   1edc0:	sub	r0, fp, #56	; 0x38
   1edc4:	mov	r1, r8
   1edc8:	mov	r2, r6
   1edcc:	add	r3, sp, #48	; 0x30
   1edd0:	str	r0, [sp]
   1edd4:	ldr	r0, [sp, #32]
   1edd8:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1eddc:	cmp	r0, r8
   1ede0:	beq	1ee18 <main@@Base+0x90c8>
   1ede4:	mov	r1, r0
   1ede8:	ldr	r0, [sp, #48]	; 0x30
   1edec:	cmp	r0, #0
   1edf0:	beq	1ee30 <main@@Base+0x90e0>
   1edf4:	ldr	r7, [sp, #32]
   1edf8:	ldr	r6, [sp, #36]	; 0x24
   1edfc:	mov	r3, #8
   1ee00:	b	1ee50 <main@@Base+0x9100>
   1ee04:	mov	r1, r6
   1ee08:	ldr	r7, [sp, #32]
   1ee0c:	cmp	r8, r1
   1ee10:	bne	1eeac <main@@Base+0x915c>
   1ee14:	b	1ee68 <main@@Base+0x9118>
   1ee18:	mov	r1, r8
   1ee1c:	ldr	r6, [sp, #36]	; 0x24
   1ee20:	ldr	r7, [sp, #32]
   1ee24:	cmp	r8, r1
   1ee28:	bne	1eeac <main@@Base+0x915c>
   1ee2c:	b	1ee68 <main@@Base+0x9118>
   1ee30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ee34:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ee38:	subs	r3, r0, #256	; 0x100
   1ee3c:	sbcs	r2, r2, #0
   1ee40:	bcc	1efb4 <main@@Base+0x9264>
   1ee44:	ldr	r7, [sp, #32]
   1ee48:	ldr	r6, [sp, #36]	; 0x24
   1ee4c:	mov	r3, #7
   1ee50:	mov	r0, r7
   1ee54:	mov	r2, r6
   1ee58:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1ee5c:	mov	r1, r0
   1ee60:	cmp	r8, r1
   1ee64:	bne	1eeac <main@@Base+0x915c>
   1ee68:	add	r0, sp, #60	; 0x3c
   1ee6c:	mov	r1, r8
   1ee70:	mov	r2, r6
   1ee74:	str	r0, [sp]
   1ee78:	movw	r0, #53516	; 0xd10c
   1ee7c:	movt	r0, #5
   1ee80:	add	r3, r0, #84	; 0x54
   1ee84:	mov	r0, r7
   1ee88:	bl	21f90 <main@@Base+0xc240>
   1ee8c:	cmp	r0, r8
   1ee90:	mov	r1, r0
   1ee94:	ldrne	r0, [sp, #36]	; 0x24
   1ee98:	cmpne	r1, r0
   1ee9c:	beq	1ff28 <main@@Base+0xa1d8>
   1eea0:	ldrb	r5, [sp, #60]	; 0x3c
   1eea4:	ldr	r6, [sp, #36]	; 0x24
   1eea8:	ldr	r7, [sp, #32]
   1eeac:	sub	r0, r6, r1
   1eeb0:	strb	r5, [r4]
   1eeb4:	cmp	r0, #2
   1eeb8:	blt	1eef8 <main@@Base+0x91a8>
   1eebc:	ldrb	r0, [r1]
   1eec0:	cmp	r0, #32
   1eec4:	bls	1eedc <main@@Base+0x918c>
   1eec8:	ldr	r6, [sp, #36]	; 0x24
   1eecc:	mov	r8, r1
   1eed0:	cmp	r8, r6
   1eed4:	bne	1ef10 <main@@Base+0x91c0>
   1eed8:	b	1faf4 <main@@Base+0x9da4>
   1eedc:	ldr	r6, [sp, #36]	; 0x24
   1eee0:	ldr	r7, [sp, #32]
   1eee4:	bne	1eef8 <main@@Base+0x91a8>
   1eee8:	mov	r8, r1
   1eeec:	ldrb	r0, [r8, #1]!
   1eef0:	cmp	r0, #32
   1eef4:	bhi	1ef08 <main@@Base+0x91b8>
   1eef8:	mov	r0, r7
   1eefc:	mov	r2, r6
   1ef00:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ef04:	mov	r8, r0
   1ef08:	cmp	r8, r6
   1ef0c:	beq	1faf4 <main@@Base+0x9da4>
   1ef10:	ldrb	r0, [r8]
   1ef14:	cmp	r0, #44	; 0x2c
   1ef18:	bne	1fafc <main@@Base+0x9dac>
   1ef1c:	ldr	r4, [sp, #36]	; 0x24
   1ef20:	add	r1, r8, #1
   1ef24:	sub	r0, r4, r1
   1ef28:	cmp	r0, #2
   1ef2c:	ldr	r0, [sp, #32]
   1ef30:	blt	1ef6c <main@@Base+0x921c>
   1ef34:	ldrb	r0, [r1]
   1ef38:	cmp	r0, #32
   1ef3c:	bls	1ef54 <main@@Base+0x9204>
   1ef40:	ldr	r4, [sp, #36]	; 0x24
   1ef44:	mov	r8, r1
   1ef48:	cmp	r8, r4
   1ef4c:	bne	1ef80 <main@@Base+0x9230>
   1ef50:	b	1fb58 <main@@Base+0x9e08>
   1ef54:	ldr	r4, [sp, #36]	; 0x24
   1ef58:	ldr	r0, [sp, #32]
   1ef5c:	bne	1ef6c <main@@Base+0x921c>
   1ef60:	ldrb	r2, [r8, #2]!
   1ef64:	cmp	r2, #32
   1ef68:	bhi	1ef78 <main@@Base+0x9228>
   1ef6c:	mov	r2, r4
   1ef70:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1ef74:	mov	r8, r0
   1ef78:	cmp	r8, r4
   1ef7c:	beq	1fb58 <main@@Base+0x9e08>
   1ef80:	ldrb	r0, [r8]
   1ef84:	cmp	r0, #93	; 0x5d
   1ef88:	beq	1fb04 <main@@Base+0x9db4>
   1ef8c:	mov	r0, #0
   1ef90:	mov	r1, #1
   1ef94:	strb	r0, [sp, #60]	; 0x3c
   1ef98:	ldr	r0, [sp, #32]
   1ef9c:	ldr	r0, [r0]
   1efa0:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   1efa4:	mov	r4, r0
   1efa8:	cmp	r0, #0
   1efac:	bne	1eda0 <main@@Base+0x9050>
   1efb0:	b	1fe94 <main@@Base+0xa144>
   1efb4:	mov	r5, r0
   1efb8:	strb	r0, [sp, #60]	; 0x3c
   1efbc:	ldr	r6, [sp, #36]	; 0x24
   1efc0:	ldr	r7, [sp, #32]
   1efc4:	cmp	r8, r1
   1efc8:	bne	1eeac <main@@Base+0x915c>
   1efcc:	b	1ee68 <main@@Base+0x9118>
   1efd0:	ldr	r6, [sp, #36]	; 0x24
   1efd4:	ldr	r9, [sp, #32]
   1efd8:	b	1b190 <main@@Base+0x5440>
   1efdc:	bne	1efec <main@@Base+0x929c>
   1efe0:	ldrb	r0, [sl, #2]!
   1efe4:	cmp	r0, #32
   1efe8:	bhi	1effc <main@@Base+0x92ac>
   1efec:	ldr	r0, [sp, #32]
   1eff0:	ldr	r2, [sp, #36]	; 0x24
   1eff4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1eff8:	mov	sl, r0
   1effc:	ldr	r7, [sp, #36]	; 0x24
   1f000:	cmp	sl, r7
   1f004:	beq	1f058 <main@@Base+0x9308>
   1f008:	ldrb	r0, [sl]
   1f00c:	cmp	r0, #125	; 0x7d
   1f010:	bne	1f054 <main@@Base+0x9304>
   1f014:	ldr	r0, [sp, #36]	; 0x24
   1f018:	ldr	r9, [sp, #32]
   1f01c:	add	r1, sl, #1
   1f020:	sub	r0, r0, r1
   1f024:	cmp	r0, #2
   1f028:	blt	1fd64 <main@@Base+0xa014>
   1f02c:	ldrb	r0, [r1]
   1f030:	cmp	r0, #32
   1f034:	bhi	1fc20 <main@@Base+0x9ed0>
   1f038:	ldr	r9, [sp, #32]
   1f03c:	bne	1fd64 <main@@Base+0xa014>
   1f040:	ldrb	r0, [sl, #2]!
   1f044:	mov	r7, sl
   1f048:	cmp	r0, #32
   1f04c:	bhi	1ca04 <main@@Base+0x6cb4>
   1f050:	b	1fd64 <main@@Base+0xa014>
   1f054:	mov	r7, sl
   1f058:	ldr	r5, [sp, #36]	; 0x24
   1f05c:	cmp	r7, r5
   1f060:	mov	r8, r5
   1f064:	beq	1f094 <main@@Base+0x9344>
   1f068:	ldrb	r0, [r7]
   1f06c:	cmp	r0, #34	; 0x22
   1f070:	bne	1f07c <main@@Base+0x932c>
   1f074:	add	r8, r7, #1
   1f078:	b	1f094 <main@@Base+0x9344>
   1f07c:	ldr	r0, [sp, #32]
   1f080:	mov	r1, r7
   1f084:	mov	r2, r5
   1f088:	mov	r3, #5
   1f08c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1f090:	mov	r8, r0
   1f094:	sub	lr, r5, r8
   1f098:	mov	r0, #8
   1f09c:	cmp	lr, #8
   1f0a0:	movcc	r0, lr
   1f0a4:	sub	r7, r0, #1
   1f0a8:	cmp	r7, #7
   1f0ac:	bhi	1f7c4 <main@@Base+0x9a74>
   1f0b0:	add	r4, pc, #32
   1f0b4:	mov	r1, #0
   1f0b8:	mov	ip, #0
   1f0bc:	mov	r9, #0
   1f0c0:	mov	r6, #0
   1f0c4:	mov	r3, #0
   1f0c8:	mov	r5, #0
   1f0cc:	mov	r2, #0
   1f0d0:	mov	r0, #0
   1f0d4:	ldr	pc, [r4, r7, lsl #2]
   1f0d8:	andeq	pc, r1, ip, lsr r1	; <UNPREDICTABLE>
   1f0dc:	andeq	pc, r1, r4, lsr r1	; <UNPREDICTABLE>
   1f0e0:	andeq	pc, r1, ip, lsr #2
   1f0e4:	andeq	pc, r1, r4, lsr #2
   1f0e8:	andeq	pc, r1, r8, lsl r1	; <UNPREDICTABLE>
   1f0ec:	andeq	pc, r1, ip, lsl #2
   1f0f0:	strdeq	pc, [r1], -ip
   1f0f4:	strdeq	pc, [r1], -r8
   1f0f8:	ldrb	ip, [r8, #7]
   1f0fc:	ldrb	r0, [r8, #6]
   1f100:	mov	r9, r1
   1f104:	orr	r0, ip, r0, lsl #8
   1f108:	mov	r1, r0
   1f10c:	ldrb	r0, [r8, #5]
   1f110:	mov	r6, r9
   1f114:	orr	r1, r1, r0, lsl #16
   1f118:	ldrb	r0, [r8, #4]
   1f11c:	mov	r3, r6
   1f120:	orr	r1, r1, r0, lsl #24
   1f124:	ldrb	r0, [r8, #3]
   1f128:	orr	r5, r0, r3
   1f12c:	ldrb	r0, [r8, #2]
   1f130:	orr	r2, r5, r0, lsl #8
   1f134:	ldrb	r0, [r8, #1]
   1f138:	orr	r0, r2, r0, lsl #16
   1f13c:	ldrb	r2, [r8]
   1f140:	orr	r2, r0, r2, lsl #24
   1f144:	movw	r0, #65535	; 0xffff
   1f148:	movt	r0, #26979	; 0x6963
   1f14c:	cmp	r2, r0
   1f150:	bhi	1f1c0 <main@@Base+0x9470>
   1f154:	movw	r0, #30062	; 0x756e
   1f158:	and	r1, r1, #-16777216	; 0xff000000
   1f15c:	movt	r0, #25455	; 0x636f
   1f160:	eor	r1, r1, #1946157056	; 0x74000000
   1f164:	eor	r0, r2, r0
   1f168:	orrs	r0, r1, r0
   1f16c:	bne	1f7c4 <main@@Base+0x9a74>
   1f170:	cmp	lr, #6
   1f174:	mov	r7, r8
   1f178:	blt	1f434 <main@@Base+0x96e4>
   1f17c:	ldrb	r0, [r8, #5]
   1f180:	mov	r7, r8
   1f184:	cmp	r0, #34	; 0x22
   1f188:	bne	1f434 <main@@Base+0x96e4>
   1f18c:	ldr	r0, [sp, #36]	; 0x24
   1f190:	add	r1, r8, #6
   1f194:	sub	r0, r0, r1
   1f198:	cmp	r0, #2
   1f19c:	blt	1f29c <main@@Base+0x954c>
   1f1a0:	ldrb	r0, [r1]
   1f1a4:	cmp	r0, #32
   1f1a8:	bls	1f288 <main@@Base+0x9538>
   1f1ac:	mov	r7, r1
   1f1b0:	ldr	r0, [sp, #36]	; 0x24
   1f1b4:	cmp	r7, r0
   1f1b8:	bne	1f2b8 <main@@Base+0x9568>
   1f1bc:	b	1f2f4 <main@@Base+0x95a4>
   1f1c0:	movw	r1, #27648	; 0x6c00
   1f1c4:	bic	r0, r2, #255	; 0xff
   1f1c8:	movt	r1, #30305	; 0x7661
   1f1cc:	teq	r0, r1
   1f1d0:	bne	1f224 <main@@Base+0x94d4>
   1f1d4:	cmp	lr, #4
   1f1d8:	mov	r7, r8
   1f1dc:	blt	1f5bc <main@@Base+0x986c>
   1f1e0:	ldrb	r0, [r8, #3]
   1f1e4:	mov	r7, r8
   1f1e8:	cmp	r0, #34	; 0x22
   1f1ec:	bne	1f5bc <main@@Base+0x986c>
   1f1f0:	ldr	r0, [sp, #36]	; 0x24
   1f1f4:	add	r1, r8, #4
   1f1f8:	sub	r0, r0, r1
   1f1fc:	cmp	r0, #2
   1f200:	blt	1f320 <main@@Base+0x95d0>
   1f204:	ldrb	r0, [r1]
   1f208:	cmp	r0, #32
   1f20c:	bls	1f30c <main@@Base+0x95bc>
   1f210:	mov	r7, r1
   1f214:	ldr	r0, [sp, #36]	; 0x24
   1f218:	cmp	r7, r0
   1f21c:	bne	1f33c <main@@Base+0x95ec>
   1f220:	b	1f378 <main@@Base+0x9628>
   1f224:	movw	r0, #0
   1f228:	bfc	r2, #0, #16
   1f22c:	movt	r0, #26980	; 0x6964
   1f230:	teq	r2, r0
   1f234:	bne	1f7c4 <main@@Base+0x9a74>
   1f238:	cmp	lr, #3
   1f23c:	mov	r1, r8
   1f240:	blt	1f764 <main@@Base+0x9a14>
   1f244:	ldrb	r0, [r8, #2]
   1f248:	mov	r1, r8
   1f24c:	cmp	r0, #34	; 0x22
   1f250:	bne	1f764 <main@@Base+0x9a14>
   1f254:	ldr	r0, [sp, #36]	; 0x24
   1f258:	add	r2, r8, #3
   1f25c:	sub	r0, r0, r2
   1f260:	cmp	r0, #2
   1f264:	blt	1f3a4 <main@@Base+0x9654>
   1f268:	ldrb	r0, [r2]
   1f26c:	cmp	r0, #32
   1f270:	bls	1f390 <main@@Base+0x9640>
   1f274:	mov	r1, r2
   1f278:	ldr	r0, [sp, #36]	; 0x24
   1f27c:	cmp	r1, r0
   1f280:	bne	1f3c4 <main@@Base+0x9674>
   1f284:	b	1f400 <main@@Base+0x96b0>
   1f288:	bne	1f29c <main@@Base+0x954c>
   1f28c:	mov	r7, r8
   1f290:	ldrb	r0, [r7, #7]!
   1f294:	cmp	r0, #32
   1f298:	bhi	1f2ac <main@@Base+0x955c>
   1f29c:	ldr	r0, [sp, #32]
   1f2a0:	ldr	r2, [sp, #36]	; 0x24
   1f2a4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1f2a8:	mov	r7, r0
   1f2ac:	ldr	r0, [sp, #36]	; 0x24
   1f2b0:	cmp	r7, r0
   1f2b4:	beq	1f2f4 <main@@Base+0x95a4>
   1f2b8:	ldrb	r0, [r7]
   1f2bc:	cmp	r0, #58	; 0x3a
   1f2c0:	bne	1f2f4 <main@@Base+0x95a4>
   1f2c4:	ldr	r0, [sp, #36]	; 0x24
   1f2c8:	add	r1, r7, #1
   1f2cc:	sub	r0, r0, r1
   1f2d0:	cmp	r0, #2
   1f2d4:	blt	1f424 <main@@Base+0x96d4>
   1f2d8:	ldrb	r0, [r1]
   1f2dc:	cmp	r0, #32
   1f2e0:	bls	1f414 <main@@Base+0x96c4>
   1f2e4:	mov	r7, r1
   1f2e8:	cmp	r8, r7
   1f2ec:	bne	1f43c <main@@Base+0x96ec>
   1f2f0:	b	1f7c4 <main@@Base+0x9a74>
   1f2f4:	ldr	r0, [sp, #32]
   1f2f8:	ldr	r2, [sp, #36]	; 0x24
   1f2fc:	mov	r1, r7
   1f300:	mov	r3, #4
   1f304:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1f308:	b	1f430 <main@@Base+0x96e0>
   1f30c:	bne	1f320 <main@@Base+0x95d0>
   1f310:	mov	r7, r8
   1f314:	ldrb	r0, [r7, #5]!
   1f318:	cmp	r0, #32
   1f31c:	bhi	1f330 <main@@Base+0x95e0>
   1f320:	ldr	r0, [sp, #32]
   1f324:	ldr	r2, [sp, #36]	; 0x24
   1f328:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1f32c:	mov	r7, r0
   1f330:	ldr	r0, [sp, #36]	; 0x24
   1f334:	cmp	r7, r0
   1f338:	beq	1f378 <main@@Base+0x9628>
   1f33c:	ldrb	r0, [r7]
   1f340:	cmp	r0, #58	; 0x3a
   1f344:	bne	1f378 <main@@Base+0x9628>
   1f348:	ldr	r0, [sp, #36]	; 0x24
   1f34c:	add	r1, r7, #1
   1f350:	sub	r0, r0, r1
   1f354:	cmp	r0, #2
   1f358:	blt	1f5ac <main@@Base+0x985c>
   1f35c:	ldrb	r0, [r1]
   1f360:	cmp	r0, #32
   1f364:	bls	1f59c <main@@Base+0x984c>
   1f368:	mov	r7, r1
   1f36c:	cmp	r8, r7
   1f370:	bne	1f5c4 <main@@Base+0x9874>
   1f374:	b	1f7c4 <main@@Base+0x9a74>
   1f378:	ldr	r0, [sp, #32]
   1f37c:	ldr	r2, [sp, #36]	; 0x24
   1f380:	mov	r1, r7
   1f384:	mov	r3, #4
   1f388:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1f38c:	b	1f5b8 <main@@Base+0x9868>
   1f390:	bne	1f3a4 <main@@Base+0x9654>
   1f394:	mov	r1, r8
   1f398:	ldrb	r0, [r1, #4]!
   1f39c:	cmp	r0, #32
   1f3a0:	bhi	1f3b8 <main@@Base+0x9668>
   1f3a4:	mov	r1, r2
   1f3a8:	ldr	r0, [sp, #32]
   1f3ac:	ldr	r2, [sp, #36]	; 0x24
   1f3b0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1f3b4:	mov	r1, r0
   1f3b8:	ldr	r0, [sp, #36]	; 0x24
   1f3bc:	cmp	r1, r0
   1f3c0:	beq	1f400 <main@@Base+0x96b0>
   1f3c4:	ldrb	r0, [r1]
   1f3c8:	cmp	r0, #58	; 0x3a
   1f3cc:	bne	1f400 <main@@Base+0x96b0>
   1f3d0:	ldr	r0, [sp, #36]	; 0x24
   1f3d4:	add	r2, r1, #1
   1f3d8:	sub	r0, r0, r2
   1f3dc:	cmp	r0, #2
   1f3e0:	blt	1f750 <main@@Base+0x9a00>
   1f3e4:	ldrb	r0, [r2]
   1f3e8:	cmp	r0, #32
   1f3ec:	bls	1f740 <main@@Base+0x99f0>
   1f3f0:	mov	r1, r2
   1f3f4:	cmp	r8, r1
   1f3f8:	bne	1f76c <main@@Base+0x9a1c>
   1f3fc:	b	1f7c4 <main@@Base+0x9a74>
   1f400:	ldr	r0, [sp, #32]
   1f404:	ldr	r2, [sp, #36]	; 0x24
   1f408:	mov	r3, #4
   1f40c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1f410:	b	1f760 <main@@Base+0x9a10>
   1f414:	bne	1f424 <main@@Base+0x96d4>
   1f418:	ldrb	r0, [r7, #2]!
   1f41c:	cmp	r0, #32
   1f420:	bhi	1f434 <main@@Base+0x96e4>
   1f424:	ldr	r0, [sp, #32]
   1f428:	ldr	r2, [sp, #36]	; 0x24
   1f42c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1f430:	mov	r7, r0
   1f434:	cmp	r8, r7
   1f438:	beq	1f7c4 <main@@Base+0x9a74>
   1f43c:	ldr	r0, [sp, #36]	; 0x24
   1f440:	mov	r5, #0
   1f444:	str	r5, [fp, #-52]	; 0xffffffcc
   1f448:	str	r5, [fp, #-56]	; 0xffffffc8
   1f44c:	strh	r5, [sp, #60]	; 0x3c
   1f450:	str	r5, [sp, #48]	; 0x30
   1f454:	cmp	r7, r0
   1f458:	beq	1f4b4 <main@@Base+0x9764>
   1f45c:	sub	r0, fp, #56	; 0x38
   1f460:	ldr	r2, [sp, #36]	; 0x24
   1f464:	mov	r1, r7
   1f468:	add	r3, sp, #48	; 0x30
   1f46c:	str	r0, [sp]
   1f470:	ldr	r0, [sp, #32]
   1f474:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1f478:	cmp	r0, r7
   1f47c:	beq	1f4c4 <main@@Base+0x9774>
   1f480:	mov	sl, r0
   1f484:	ldr	r0, [sp, #48]	; 0x30
   1f488:	cmp	r0, #0
   1f48c:	beq	1f4d4 <main@@Base+0x9784>
   1f490:	ldr	r0, [sp, #32]
   1f494:	ldr	r2, [sp, #36]	; 0x24
   1f498:	mov	r1, sl
   1f49c:	mov	r3, #8
   1f4a0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1f4a4:	mov	sl, r0
   1f4a8:	cmp	r7, sl
   1f4ac:	bne	1f558 <main@@Base+0x9808>
   1f4b0:	b	1f51c <main@@Base+0x97cc>
   1f4b4:	ldr	sl, [sp, #36]	; 0x24
   1f4b8:	cmp	r7, sl
   1f4bc:	bne	1f558 <main@@Base+0x9808>
   1f4c0:	b	1f51c <main@@Base+0x97cc>
   1f4c4:	mov	sl, r7
   1f4c8:	cmp	r7, sl
   1f4cc:	bne	1f558 <main@@Base+0x9808>
   1f4d0:	b	1f51c <main@@Base+0x97cc>
   1f4d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f4d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1f4dc:	subs	r2, r0, #65536	; 0x10000
   1f4e0:	sbcs	r1, r1, #0
   1f4e4:	bcc	1f50c <main@@Base+0x97bc>
   1f4e8:	ldr	r0, [sp, #32]
   1f4ec:	ldr	r2, [sp, #36]	; 0x24
   1f4f0:	mov	r1, sl
   1f4f4:	mov	r3, #7
   1f4f8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1f4fc:	mov	sl, r0
   1f500:	cmp	r7, sl
   1f504:	bne	1f558 <main@@Base+0x9808>
   1f508:	b	1f51c <main@@Base+0x97cc>
   1f50c:	mov	r5, r0
   1f510:	strh	r0, [sp, #60]	; 0x3c
   1f514:	cmp	r7, sl
   1f518:	bne	1f558 <main@@Base+0x9808>
   1f51c:	add	r0, sp, #60	; 0x3c
   1f520:	ldr	r2, [sp, #36]	; 0x24
   1f524:	mov	r1, r7
   1f528:	str	r0, [sp]
   1f52c:	movw	r0, #53876	; 0xd274
   1f530:	movt	r0, #5
   1f534:	add	r3, r0, #24
   1f538:	ldr	r0, [sp, #32]
   1f53c:	bl	2c170 <main@@Base+0x16420>
   1f540:	cmp	r0, r7
   1f544:	mov	sl, r0
   1f548:	ldrne	r0, [sp, #36]	; 0x24
   1f54c:	cmpne	sl, r0
   1f550:	beq	1fda4 <main@@Base+0xa054>
   1f554:	ldrh	r5, [sp, #60]	; 0x3c
   1f558:	movw	r0, #65535	; 0xffff
   1f55c:	tst	r5, r0
   1f560:	bne	1f574 <main@@Base+0x9824>
   1f564:	ldr	r0, [sp, #32]
   1f568:	ldrb	r0, [r0, #8]
   1f56c:	tst	r0, #2
   1f570:	beq	1f7ac <main@@Base+0x9a5c>
   1f574:	ldr	r0, [sp, #32]
   1f578:	mov	r1, #2
   1f57c:	mov	r2, #2
   1f580:	mov	r3, #2
   1f584:	ldr	r0, [r0]
   1f588:	bl	30dac <flatcc_builder_table_add@@Base>
   1f58c:	cmp	r0, #0
   1f590:	beq	1fda4 <main@@Base+0xa054>
   1f594:	strh	r5, [r0]
   1f598:	b	1f7ac <main@@Base+0x9a5c>
   1f59c:	bne	1f5ac <main@@Base+0x985c>
   1f5a0:	ldrb	r0, [r7, #2]!
   1f5a4:	cmp	r0, #32
   1f5a8:	bhi	1f5bc <main@@Base+0x986c>
   1f5ac:	ldr	r0, [sp, #32]
   1f5b0:	ldr	r2, [sp, #36]	; 0x24
   1f5b4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1f5b8:	mov	r7, r0
   1f5bc:	cmp	r8, r7
   1f5c0:	beq	1f7c4 <main@@Base+0x9a74>
   1f5c4:	ldr	r0, [sp, #36]	; 0x24
   1f5c8:	mov	r6, #0
   1f5cc:	str	r6, [fp, #-52]	; 0xffffffcc
   1f5d0:	str	r6, [fp, #-56]	; 0xffffffc8
   1f5d4:	str	r6, [sp, #52]	; 0x34
   1f5d8:	str	r6, [sp, #48]	; 0x30
   1f5dc:	str	r6, [sp, #60]	; 0x3c
   1f5e0:	cmp	r7, r0
   1f5e4:	beq	1f644 <main@@Base+0x98f4>
   1f5e8:	sub	r0, fp, #56	; 0x38
   1f5ec:	ldr	r2, [sp, #36]	; 0x24
   1f5f0:	mov	r1, r7
   1f5f4:	add	r3, sp, #60	; 0x3c
   1f5f8:	str	r0, [sp]
   1f5fc:	ldr	r0, [sp, #32]
   1f600:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   1f604:	cmp	r0, r7
   1f608:	beq	1f658 <main@@Base+0x9908>
   1f60c:	mov	sl, r0
   1f610:	ldr	r0, [sp, #60]	; 0x3c
   1f614:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1f618:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1f61c:	cmp	r0, #0
   1f620:	beq	1f670 <main@@Base+0x9920>
   1f624:	subs	r0, r6, #1
   1f628:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1f62c:	bcc	1f6a4 <main@@Base+0x9954>
   1f630:	ldr	r0, [sp, #32]
   1f634:	ldr	r2, [sp, #36]	; 0x24
   1f638:	mov	r1, sl
   1f63c:	mov	r3, #8
   1f640:	b	1f688 <main@@Base+0x9938>
   1f644:	ldr	sl, [sp, #36]	; 0x24
   1f648:	mov	r5, #0
   1f64c:	cmp	r7, sl
   1f650:	bne	1f6fc <main@@Base+0x99ac>
   1f654:	b	1f6bc <main@@Base+0x996c>
   1f658:	mov	r6, #0
   1f65c:	mov	r5, #0
   1f660:	mov	sl, r7
   1f664:	cmp	r7, sl
   1f668:	bne	1f6fc <main@@Base+0x99ac>
   1f66c:	b	1f6bc <main@@Base+0x996c>
   1f670:	cmn	r5, #1
   1f674:	bgt	1f6ac <main@@Base+0x995c>
   1f678:	ldr	r0, [sp, #32]
   1f67c:	ldr	r2, [sp, #36]	; 0x24
   1f680:	mov	r1, sl
   1f684:	mov	r3, #7
   1f688:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1f68c:	mov	sl, r0
   1f690:	mov	r6, #0
   1f694:	mov	r5, #0
   1f698:	cmp	r7, sl
   1f69c:	bne	1f6fc <main@@Base+0x99ac>
   1f6a0:	b	1f6bc <main@@Base+0x996c>
   1f6a4:	rsbs	r6, r6, #0
   1f6a8:	rsc	r5, r5, #0
   1f6ac:	str	r6, [sp, #48]	; 0x30
   1f6b0:	str	r5, [sp, #52]	; 0x34
   1f6b4:	cmp	r7, sl
   1f6b8:	bne	1f6fc <main@@Base+0x99ac>
   1f6bc:	add	r0, sp, #48	; 0x30
   1f6c0:	ldr	r2, [sp, #36]	; 0x24
   1f6c4:	mov	r1, r7
   1f6c8:	str	r0, [sp]
   1f6cc:	movw	r0, #53876	; 0xd274
   1f6d0:	movt	r0, #5
   1f6d4:	add	r3, r0, #36	; 0x24
   1f6d8:	ldr	r0, [sp, #32]
   1f6dc:	bl	24594 <main@@Base+0xe844>
   1f6e0:	cmp	r0, r7
   1f6e4:	mov	sl, r0
   1f6e8:	ldrne	r0, [sp, #36]	; 0x24
   1f6ec:	cmpne	sl, r0
   1f6f0:	beq	1fda4 <main@@Base+0xa054>
   1f6f4:	ldr	r6, [sp, #48]	; 0x30
   1f6f8:	ldr	r5, [sp, #52]	; 0x34
   1f6fc:	orrs	r0, r6, r5
   1f700:	bne	1f714 <main@@Base+0x99c4>
   1f704:	ldr	r0, [sp, #32]
   1f708:	ldrb	r0, [r0, #8]
   1f70c:	tst	r0, #2
   1f710:	beq	1f7ac <main@@Base+0x9a5c>
   1f714:	ldr	r0, [sp, #32]
   1f718:	mov	r1, #1
   1f71c:	mov	r2, #8
   1f720:	mov	r3, #8
   1f724:	ldr	r0, [r0]
   1f728:	bl	30dac <flatcc_builder_table_add@@Base>
   1f72c:	cmp	r0, #0
   1f730:	beq	1fda4 <main@@Base+0xa054>
   1f734:	str	r6, [r0]
   1f738:	str	r5, [r0, #4]
   1f73c:	b	1f7ac <main@@Base+0x9a5c>
   1f740:	bne	1f750 <main@@Base+0x9a00>
   1f744:	ldrb	r0, [r1, #2]!
   1f748:	cmp	r0, #32
   1f74c:	bhi	1f764 <main@@Base+0x9a14>
   1f750:	mov	r1, r2
   1f754:	ldr	r0, [sp, #32]
   1f758:	ldr	r2, [sp, #36]	; 0x24
   1f75c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1f760:	mov	r1, r0
   1f764:	cmp	r8, r1
   1f768:	beq	1f7c4 <main@@Base+0x9a74>
   1f76c:	ldr	r0, [sp, #32]
   1f770:	ldr	r2, [sp, #36]	; 0x24
   1f774:	add	r3, sp, #56	; 0x38
   1f778:	bl	37198 <flatcc_json_parser_build_string@@Base>
   1f77c:	mov	sl, r0
   1f780:	ldr	r0, [sp, #56]	; 0x38
   1f784:	cmp	r0, #0
   1f788:	beq	1fda4 <main@@Base+0xa054>
   1f78c:	ldr	r0, [sp, #32]
   1f790:	mov	r1, #0
   1f794:	ldr	r0, [r0]
   1f798:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1f79c:	cmp	r0, #0
   1f7a0:	beq	1fda4 <main@@Base+0xa054>
   1f7a4:	ldr	r1, [sp, #56]	; 0x38
   1f7a8:	str	r1, [r0]
   1f7ac:	ldr	r5, [sp, #36]	; 0x24
   1f7b0:	ldr	r9, [sp, #32]
   1f7b4:	sub	r0, r5, sl
   1f7b8:	cmp	r0, #2
   1f7bc:	blt	1f81c <main@@Base+0x9acc>
   1f7c0:	b	1f7ec <main@@Base+0x9a9c>
   1f7c4:	ldr	r9, [sp, #32]
   1f7c8:	ldr	r5, [sp, #36]	; 0x24
   1f7cc:	mov	r1, r8
   1f7d0:	mov	r0, r9
   1f7d4:	mov	r2, r5
   1f7d8:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   1f7dc:	mov	sl, r0
   1f7e0:	sub	r0, r5, sl
   1f7e4:	cmp	r0, #2
   1f7e8:	blt	1f81c <main@@Base+0x9acc>
   1f7ec:	ldrb	r0, [sl]
   1f7f0:	cmp	r0, #32
   1f7f4:	bls	1f808 <main@@Base+0x9ab8>
   1f7f8:	mov	r7, sl
   1f7fc:	cmp	r7, r5
   1f800:	bne	1f838 <main@@Base+0x9ae8>
   1f804:	b	1fbe0 <main@@Base+0x9e90>
   1f808:	bne	1f81c <main@@Base+0x9acc>
   1f80c:	mov	r7, sl
   1f810:	ldrb	r0, [r7, #1]!
   1f814:	cmp	r0, #32
   1f818:	bhi	1f830 <main@@Base+0x9ae0>
   1f81c:	mov	r0, r9
   1f820:	mov	r1, sl
   1f824:	mov	r2, r5
   1f828:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1f82c:	mov	r7, r0
   1f830:	cmp	r7, r5
   1f834:	beq	1fbe0 <main@@Base+0x9e90>
   1f838:	ldrb	r0, [r7]
   1f83c:	cmp	r0, #44	; 0x2c
   1f840:	bne	1fbf4 <main@@Base+0x9ea4>
   1f844:	add	r1, r7, #1
   1f848:	sub	r0, r5, r1
   1f84c:	cmp	r0, #2
   1f850:	blt	1f88c <main@@Base+0x9b3c>
   1f854:	ldrb	r0, [r1]
   1f858:	cmp	r0, #32
   1f85c:	bls	1f874 <main@@Base+0x9b24>
   1f860:	ldr	r5, [sp, #36]	; 0x24
   1f864:	mov	r7, r1
   1f868:	cmp	r7, r5
   1f86c:	bne	1f8a4 <main@@Base+0x9b54>
   1f870:	b	1fc64 <main@@Base+0x9f14>
   1f874:	ldr	r5, [sp, #36]	; 0x24
   1f878:	ldr	r9, [sp, #32]
   1f87c:	bne	1f88c <main@@Base+0x9b3c>
   1f880:	ldrb	r0, [r7, #2]!
   1f884:	cmp	r0, #32
   1f888:	bhi	1f89c <main@@Base+0x9b4c>
   1f88c:	mov	r0, r9
   1f890:	mov	r2, r5
   1f894:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1f898:	mov	r7, r0
   1f89c:	cmp	r7, r5
   1f8a0:	beq	1fc64 <main@@Base+0x9f14>
   1f8a4:	ldrb	r0, [r7]
   1f8a8:	cmp	r0, #125	; 0x7d
   1f8ac:	bne	1f05c <main@@Base+0x930c>
   1f8b0:	add	r1, r7, #1
   1f8b4:	sub	r0, r5, r1
   1f8b8:	ldr	r9, [sp, #32]
   1f8bc:	cmp	r0, #2
   1f8c0:	bge	1fc14 <main@@Base+0x9ec4>
   1f8c4:	b	1fd64 <main@@Base+0xa014>
   1f8c8:	ldr	r6, [sp, #36]	; 0x24
   1f8cc:	ldr	r9, [sp, #32]
   1f8d0:	bne	1f8e4 <main@@Base+0x9b94>
   1f8d4:	ldrb	r0, [r2, #2]!
   1f8d8:	mov	sl, r2
   1f8dc:	cmp	r0, #32
   1f8e0:	bhi	1b278 <main@@Base+0x5528>
   1f8e4:	mov	r0, r9
   1f8e8:	mov	r2, r6
   1f8ec:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1f8f0:	b	1b274 <main@@Base+0x5524>
   1f8f4:	ldr	r6, [sp, #36]	; 0x24
   1f8f8:	ldr	r9, [sp, #32]
   1f8fc:	bne	1f910 <main@@Base+0x9bc0>
   1f900:	ldrb	r0, [sl, #2]!
   1f904:	mov	r8, sl
   1f908:	cmp	r0, #32
   1f90c:	bhi	1b344 <main@@Base+0x55f4>
   1f910:	mov	r0, r9
   1f914:	mov	r2, r6
   1f918:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1f91c:	b	1b340 <main@@Base+0x55f0>
   1f920:	ldr	r9, [sp, #32]
   1f924:	ldr	r6, [sp, #36]	; 0x24
   1f928:	mov	r1, r2
   1f92c:	mov	r0, r9
   1f930:	mov	r2, r6
   1f934:	mov	r3, #10
   1f938:	b	1b17c <main@@Base+0x542c>
   1f93c:	ldr	r9, [sp, #32]
   1f940:	ldr	r6, [sp, #36]	; 0x24
   1f944:	mov	r1, r2
   1f948:	mov	r0, r9
   1f94c:	mov	r2, r6
   1f950:	mov	r3, #9
   1f954:	b	1c5ec <main@@Base+0x689c>
   1f958:	ldr	r0, [sp, #32]
   1f95c:	ldr	r2, [sp, #36]	; 0x24
   1f960:	mov	r1, sl
   1f964:	mov	r3, #9
   1f968:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1f96c:	b	1fbd0 <main@@Base+0x9e80>
   1f970:	ldr	r5, [fp, #-56]	; 0xffffffc8
   1f974:	mov	r8, r1
   1f978:	str	r5, [sp, #60]	; 0x3c
   1f97c:	cmp	sl, r8
   1f980:	bne	1f9c0 <main@@Base+0x9c70>
   1f984:	add	r0, sp, #60	; 0x3c
   1f988:	ldr	r2, [sp, #36]	; 0x24
   1f98c:	mov	r1, sl
   1f990:	str	r0, [sp]
   1f994:	movw	r0, #53516	; 0xd10c
   1f998:	movt	r0, #5
   1f99c:	add	r3, r0, #48	; 0x30
   1f9a0:	ldr	r0, [sp, #32]
   1f9a4:	bl	247ac <main@@Base+0xea5c>
   1f9a8:	cmp	r0, sl
   1f9ac:	mov	r8, r0
   1f9b0:	ldrne	r1, [sp, #36]	; 0x24
   1f9b4:	cmpne	r8, r1
   1f9b8:	beq	1fe94 <main@@Base+0xa144>
   1f9bc:	ldr	r5, [sp, #60]	; 0x3c
   1f9c0:	ldr	r9, [sp, #32]
   1f9c4:	cmp	r5, #0
   1f9c8:	bne	1f9d8 <main@@Base+0x9c88>
   1f9cc:	ldrb	r0, [r9, #8]
   1f9d0:	tst	r0, #2
   1f9d4:	beq	1f9fc <main@@Base+0x9cac>
   1f9d8:	ldr	r0, [r9]
   1f9dc:	mov	r1, #21
   1f9e0:	mov	r2, #4
   1f9e4:	mov	r3, #4
   1f9e8:	bl	30dac <flatcc_builder_table_add@@Base>
   1f9ec:	cmp	r0, #0
   1f9f0:	beq	1fe94 <main@@Base+0xa144>
   1f9f4:	ldr	r9, [sp, #32]
   1f9f8:	str	r5, [r0]
   1f9fc:	ldr	r6, [sp, #36]	; 0x24
   1fa00:	sub	r0, r6, r8
   1fa04:	cmp	r0, #2
   1fa08:	bge	1ebb4 <main@@Base+0x8e64>
   1fa0c:	b	1ec28 <main@@Base+0x8ed8>
   1fa10:	ldr	r9, [sp, #32]
   1fa14:	ldr	r6, [sp, #36]	; 0x24
   1fa18:	mov	r1, r2
   1fa1c:	mov	r0, r9
   1fa20:	mov	r2, r6
   1fa24:	mov	r3, #9
   1fa28:	b	1c928 <main@@Base+0x6bd8>
   1fa2c:	ldr	r8, [sp, #36]	; 0x24
   1fa30:	ldr	r9, [sp, #32]
   1fa34:	b	1e140 <main@@Base+0x83f0>
   1fa38:	ldr	r0, [sp, #32]
   1fa3c:	ldr	r2, [sp, #36]	; 0x24
   1fa40:	mov	r1, r8
   1fa44:	mov	r3, #9
   1fa48:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1fa4c:	b	1fc90 <main@@Base+0x9f40>
   1fa50:	cmp	r0, #93	; 0x5d
   1fa54:	bne	1fccc <main@@Base+0x9f7c>
   1fa58:	ldr	r0, [sp, #36]	; 0x24
   1fa5c:	add	r1, r8, #1
   1fa60:	sub	r0, r0, r1
   1fa64:	cmp	r0, #2
   1fa68:	blt	1fae4 <main@@Base+0x9d94>
   1fa6c:	ldrb	r0, [r1]
   1fa70:	cmp	r0, #32
   1fa74:	bhi	1fad8 <main@@Base+0x9d88>
   1fa78:	bne	1fae4 <main@@Base+0x9d94>
   1fa7c:	ldrb	r0, [r8, #2]!
   1fa80:	cmp	r0, #32
   1fa84:	bhi	1fce4 <main@@Base+0x9f94>
   1fa88:	b	1fae4 <main@@Base+0x9d94>
   1fa8c:	ldr	r1, [sp, #36]	; 0x24
   1fa90:	ldr	r0, [sp, #32]
   1fa94:	mov	r2, r1
   1fa98:	b	1fcd8 <main@@Base+0x9f88>
   1fa9c:	ldr	r9, [sp, #32]
   1faa0:	ldr	r6, [sp, #36]	; 0x24
   1faa4:	mov	r1, r3
   1faa8:	mov	r0, r9
   1faac:	mov	r2, r6
   1fab0:	mov	r3, #10
   1fab4:	b	1b8bc <main@@Base+0x5b6c>
   1fab8:	ldr	r0, [sp, #36]	; 0x24
   1fabc:	add	r1, r8, #1
   1fac0:	sub	r0, r0, r1
   1fac4:	cmp	r0, #2
   1fac8:	blt	1fae4 <main@@Base+0x9d94>
   1facc:	ldrb	r0, [r1]
   1fad0:	cmp	r0, #32
   1fad4:	bls	1fa78 <main@@Base+0x9d28>
   1fad8:	ldr	r9, [sp, #32]
   1fadc:	mov	r8, r1
   1fae0:	b	1e140 <main@@Base+0x83f0>
   1fae4:	ldr	r0, [sp, #32]
   1fae8:	ldr	r2, [sp, #36]	; 0x24
   1faec:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1faf0:	b	1fce0 <main@@Base+0x9f90>
   1faf4:	ldr	r8, [sp, #36]	; 0x24
   1faf8:	b	1fd04 <main@@Base+0x9fb4>
   1fafc:	cmp	r0, #93	; 0x5d
   1fb00:	bne	1fcec <main@@Base+0x9f9c>
   1fb04:	ldr	r0, [sp, #36]	; 0x24
   1fb08:	add	r1, r8, #1
   1fb0c:	sub	r0, r0, r1
   1fb10:	cmp	r0, #2
   1fb14:	blt	1fb78 <main@@Base+0x9e28>
   1fb18:	ldrb	r0, [r1]
   1fb1c:	cmp	r0, #32
   1fb20:	bls	1fb68 <main@@Base+0x9e18>
   1fb24:	mov	r8, r1
   1fb28:	b	1fd04 <main@@Base+0x9fb4>
   1fb2c:	ldr	r6, [sp, #36]	; 0x24
   1fb30:	ldr	r9, [sp, #32]
   1fb34:	bne	1fb48 <main@@Base+0x9df8>
   1fb38:	ldrb	r0, [r2, #2]!
   1fb3c:	mov	sl, r2
   1fb40:	cmp	r0, #32
   1fb44:	bhi	1b184 <main@@Base+0x5434>
   1fb48:	mov	r0, r9
   1fb4c:	mov	r2, r6
   1fb50:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1fb54:	b	1b180 <main@@Base+0x5430>
   1fb58:	ldr	r1, [sp, #36]	; 0x24
   1fb5c:	ldr	r0, [sp, #32]
   1fb60:	mov	r2, r1
   1fb64:	b	1fcf8 <main@@Base+0x9fa8>
   1fb68:	bne	1fb78 <main@@Base+0x9e28>
   1fb6c:	ldrb	r0, [r8, #2]!
   1fb70:	cmp	r0, #32
   1fb74:	bhi	1fd04 <main@@Base+0x9fb4>
   1fb78:	ldr	r0, [sp, #32]
   1fb7c:	ldr	r2, [sp, #36]	; 0x24
   1fb80:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1fb84:	b	1fd00 <main@@Base+0x9fb0>
   1fb88:	ldr	r6, [sp, #36]	; 0x24
   1fb8c:	ldr	r9, [sp, #32]
   1fb90:	bne	1fba4 <main@@Base+0x9e54>
   1fb94:	ldrb	r0, [r2, #2]!
   1fb98:	mov	sl, r2
   1fb9c:	cmp	r0, #32
   1fba0:	bhi	1c5f4 <main@@Base+0x68a4>
   1fba4:	mov	r0, r9
   1fba8:	mov	r2, r6
   1fbac:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1fbb0:	b	1c5f0 <main@@Base+0x68a0>
   1fbb4:	bne	1fbc4 <main@@Base+0x9e74>
   1fbb8:	ldrb	r0, [sl, #2]!
   1fbbc:	cmp	r0, #32
   1fbc0:	bhi	1fbd4 <main@@Base+0x9e84>
   1fbc4:	ldr	r0, [sp, #32]
   1fbc8:	ldr	r2, [sp, #36]	; 0x24
   1fbcc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1fbd0:	mov	sl, r0
   1fbd4:	ldr	r6, [sp, #36]	; 0x24
   1fbd8:	ldr	r9, [sp, #32]
   1fbdc:	b	1cac4 <main@@Base+0x6d74>
   1fbe0:	mov	r7, r5
   1fbe4:	ldr	r0, [r9, #20]
   1fbe8:	cmp	r0, #0
   1fbec:	bne	1ca10 <main@@Base+0x6cc0>
   1fbf0:	b	1fd80 <main@@Base+0xa030>
   1fbf4:	cmp	r0, #125	; 0x7d
   1fbf8:	bne	1fd38 <main@@Base+0x9fe8>
   1fbfc:	ldr	r0, [sp, #36]	; 0x24
   1fc00:	add	r1, r7, #1
   1fc04:	sub	r0, r0, r1
   1fc08:	ldr	r9, [sp, #32]
   1fc0c:	cmp	r0, #2
   1fc10:	blt	1fd64 <main@@Base+0xa014>
   1fc14:	ldrb	r0, [r1]
   1fc18:	cmp	r0, #32
   1fc1c:	bls	1fd50 <main@@Base+0xa000>
   1fc20:	ldr	r9, [sp, #32]
   1fc24:	mov	r7, r1
   1fc28:	ldr	r0, [r9, #20]
   1fc2c:	cmp	r0, #0
   1fc30:	bne	1ca10 <main@@Base+0x6cc0>
   1fc34:	b	1fd80 <main@@Base+0xa030>
   1fc38:	ldr	r6, [sp, #36]	; 0x24
   1fc3c:	ldr	r9, [sp, #32]
   1fc40:	bne	1fc54 <main@@Base+0x9f04>
   1fc44:	ldrb	r0, [r2, #2]!
   1fc48:	mov	sl, r2
   1fc4c:	cmp	r0, #32
   1fc50:	bhi	1c930 <main@@Base+0x6be0>
   1fc54:	mov	r0, r9
   1fc58:	mov	r2, r6
   1fc5c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1fc60:	b	1c92c <main@@Base+0x6bdc>
   1fc64:	ldr	r9, [sp, #32]
   1fc68:	mov	r1, r5
   1fc6c:	mov	r2, r5
   1fc70:	b	1fd44 <main@@Base+0x9ff4>
   1fc74:	bne	1fc84 <main@@Base+0x9f34>
   1fc78:	ldrb	r0, [r8, #2]!
   1fc7c:	cmp	r0, #32
   1fc80:	bhi	1fc94 <main@@Base+0x9f44>
   1fc84:	ldr	r0, [sp, #32]
   1fc88:	ldr	r2, [sp, #36]	; 0x24
   1fc8c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1fc90:	mov	r8, r0
   1fc94:	ldr	r6, [sp, #36]	; 0x24
   1fc98:	ldr	r9, [sp, #32]
   1fc9c:	b	1cbc4 <main@@Base+0x6e74>
   1fca0:	ldr	r6, [sp, #36]	; 0x24
   1fca4:	ldr	r9, [sp, #32]
   1fca8:	bne	1fcbc <main@@Base+0x9f6c>
   1fcac:	ldrb	r0, [r3, #2]!
   1fcb0:	mov	sl, r3
   1fcb4:	cmp	r0, #32
   1fcb8:	bhi	1b8c4 <main@@Base+0x5b74>
   1fcbc:	mov	r0, r9
   1fcc0:	mov	r2, r6
   1fcc4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1fcc8:	b	1b8c0 <main@@Base+0x5b70>
   1fccc:	ldr	r0, [sp, #32]
   1fcd0:	ldr	r2, [sp, #36]	; 0x24
   1fcd4:	mov	r1, r8
   1fcd8:	mov	r3, #9
   1fcdc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1fce0:	mov	r8, r0
   1fce4:	ldr	r9, [sp, #32]
   1fce8:	b	1e140 <main@@Base+0x83f0>
   1fcec:	ldr	r0, [sp, #32]
   1fcf0:	ldr	r2, [sp, #36]	; 0x24
   1fcf4:	mov	r1, r8
   1fcf8:	mov	r3, #9
   1fcfc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1fd00:	mov	r8, r0
   1fd04:	ldr	r9, [sp, #32]
   1fd08:	ldr	r0, [r9]
   1fd0c:	bl	30714 <flatcc_builder_end_vector@@Base>
   1fd10:	ldr	r6, [sp, #36]	; 0x24
   1fd14:	cmp	r0, #0
   1fd18:	str	r0, [sp, #44]	; 0x2c
   1fd1c:	beq	1fee4 <main@@Base+0xa194>
   1fd20:	ldr	r0, [r9]
   1fd24:	mov	r1, #13
   1fd28:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1fd2c:	cmp	r0, #0
   1fd30:	bne	19268 <main@@Base+0x3518>
   1fd34:	b	1fee4 <main@@Base+0xa194>
   1fd38:	ldr	r9, [sp, #32]
   1fd3c:	ldr	r2, [sp, #36]	; 0x24
   1fd40:	mov	r1, r7
   1fd44:	mov	r0, r9
   1fd48:	mov	r3, #10
   1fd4c:	b	1c9fc <main@@Base+0x6cac>
   1fd50:	ldr	r9, [sp, #32]
   1fd54:	bne	1fd64 <main@@Base+0xa014>
   1fd58:	ldrb	r0, [r7, #2]!
   1fd5c:	cmp	r0, #32
   1fd60:	bhi	1ca04 <main@@Base+0x6cb4>
   1fd64:	ldr	r2, [sp, #36]	; 0x24
   1fd68:	mov	r0, r9
   1fd6c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1fd70:	mov	r7, r0
   1fd74:	ldr	r0, [r9, #20]
   1fd78:	cmp	r0, #0
   1fd7c:	bne	1ca10 <main@@Base+0x6cc0>
   1fd80:	ldr	r0, [r9]
   1fd84:	bl	30400 <flatcc_builder_end_table@@Base>
   1fd88:	mov	sl, r7
   1fd8c:	cmp	r0, #0
   1fd90:	str	r0, [sp, #44]	; 0x2c
   1fd94:	beq	1fda4 <main@@Base+0xa054>
   1fd98:	ldr	r6, [sp, #36]	; 0x24
   1fd9c:	ldr	r9, [sp, #32]
   1fda0:	b	1fdd0 <main@@Base+0xa080>
   1fda4:	ldr	r6, [sp, #36]	; 0x24
   1fda8:	ldr	r9, [sp, #32]
   1fdac:	mov	r0, r9
   1fdb0:	mov	r1, sl
   1fdb4:	mov	r2, r6
   1fdb8:	mov	r3, #33	; 0x21
   1fdbc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   1fdc0:	mov	sl, r0
   1fdc4:	ldr	r0, [sp, #44]	; 0x2c
   1fdc8:	cmp	r0, #0
   1fdcc:	beq	16640 <main@@Base+0x8f0>
   1fdd0:	ldr	r0, [r9]
   1fdd4:	mov	r1, #14
   1fdd8:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   1fddc:	cmp	r0, #0
   1fde0:	beq	16640 <main@@Base+0x8f0>
   1fde4:	ldr	r1, [sp, #44]	; 0x2c
   1fde8:	mov	r8, sl
   1fdec:	str	r1, [r0]
   1fdf0:	sub	r0, r6, r8
   1fdf4:	cmp	r0, #2
   1fdf8:	bge	1ebb4 <main@@Base+0x8e64>
   1fdfc:	b	1ec28 <main@@Base+0x8ed8>
   1fe00:	ldr	r5, [sp, #28]
   1fe04:	mov	sl, r6
   1fe08:	ldr	r0, [r9, #20]
   1fe0c:	cmp	r0, #0
   1fe10:	bne	16640 <main@@Base+0x8f0>
   1fe14:	b	166f8 <main@@Base+0x9a8>
   1fe18:	cmp	r0, #125	; 0x7d
   1fe1c:	bne	1fe5c <main@@Base+0xa10c>
   1fe20:	add	r1, r2, #1
   1fe24:	sub	r0, r6, r1
   1fe28:	cmp	r0, #2
   1fe2c:	blt	1fe84 <main@@Base+0xa134>
   1fe30:	ldrb	r0, [r1]
   1fe34:	cmp	r0, #32
   1fe38:	bls	1fe70 <main@@Base+0xa120>
   1fe3c:	mov	sl, r1
   1fe40:	ldr	r0, [r9, #20]
   1fe44:	cmp	r0, #0
   1fe48:	bne	16640 <main@@Base+0x8f0>
   1fe4c:	b	166f8 <main@@Base+0x9a8>
   1fe50:	mov	r0, r9
   1fe54:	mov	r1, r6
   1fe58:	b	1fe64 <main@@Base+0xa114>
   1fe5c:	mov	r0, r9
   1fe60:	mov	r1, r2
   1fe64:	mov	r2, r6
   1fe68:	mov	r3, #10
   1fe6c:	b	166e4 <main@@Base+0x994>
   1fe70:	bne	1fe84 <main@@Base+0xa134>
   1fe74:	ldrb	r0, [r2, #2]!
   1fe78:	mov	sl, r2
   1fe7c:	cmp	r0, #32
   1fe80:	bhi	166ec <main@@Base+0x99c>
   1fe84:	mov	r0, r9
   1fe88:	mov	r2, r6
   1fe8c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   1fe90:	b	166e8 <main@@Base+0x998>
   1fe94:	mov	sl, r8
   1fe98:	ldr	r6, [sp, #36]	; 0x24
   1fe9c:	ldr	r9, [sp, #32]
   1fea0:	b	16640 <main@@Base+0x8f0>
   1fea4:	ldr	r9, [sp, #32]
   1fea8:	mov	sl, r8
   1feac:	b	16640 <main@@Base+0x8f0>
   1feb0:	mov	r8, r1
   1feb4:	mov	sl, r1
   1feb8:	b	16640 <main@@Base+0x8f0>
   1febc:	mov	r8, r5
   1fec0:	mov	sl, r5
   1fec4:	b	16640 <main@@Base+0x8f0>
   1fec8:	ldr	r6, [sp, #36]	; 0x24
   1fecc:	b	16640 <main@@Base+0x8f0>
   1fed0:	mov	sl, r1
   1fed4:	b	16640 <main@@Base+0x8f0>
   1fed8:	mov	sl, r5
   1fedc:	b	16640 <main@@Base+0x8f0>
   1fee0:	ldr	r6, [sp, #36]	; 0x24
   1fee4:	mov	sl, r8
   1fee8:	b	16640 <main@@Base+0x8f0>
   1feec:	mov	sl, r4
   1fef0:	b	16640 <main@@Base+0x8f0>
   1fef4:	ldr	r9, [sp, #32]
   1fef8:	mov	sl, r1
   1fefc:	b	16640 <main@@Base+0x8f0>
   1ff00:	ldr	r9, [sp, #32]
   1ff04:	mov	r8, r1
   1ff08:	mov	sl, r1
   1ff0c:	b	16640 <main@@Base+0x8f0>
   1ff10:	mov	sl, r6
   1ff14:	b	1fe98 <main@@Base+0xa148>
   1ff18:	ldr	r6, [sp, #36]	; 0x24
   1ff1c:	ldr	r9, [sp, #32]
   1ff20:	mov	sl, r4
   1ff24:	b	16640 <main@@Base+0x8f0>
   1ff28:	mov	r8, r1
   1ff2c:	mov	sl, r1
   1ff30:	b	1fe98 <main@@Base+0xa148>
   1ff34:	mov	r8, r6
   1ff38:	ldr	r6, [sp, #36]	; 0x24
   1ff3c:	ldr	r9, [sp, #32]
   1ff40:	mov	sl, r8
   1ff44:	b	16640 <main@@Base+0x8f0>
   1ff48:	mov	r8, r5
   1ff4c:	mov	sl, r5
   1ff50:	b	1fe98 <main@@Base+0xa148>
   1ff54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ff58:	add	fp, sp, #28
   1ff5c:	sub	sp, sp, #20
   1ff60:	mov	r5, r0
   1ff64:	movw	r0, #50036	; 0xc374
   1ff68:	movw	r3, #36423	; 0x8e47
   1ff6c:	mov	r4, r1
   1ff70:	mov	r1, #3
   1ff74:	mov	r2, #0
   1ff78:	mov	r8, #0
   1ff7c:	movt	r0, #2
   1ff80:	movt	r3, #4
   1ff84:	str	r1, [sp]
   1ff88:	mov	r1, r4
   1ff8c:	str	r0, [sp, #4]
   1ff90:	mov	r0, r5
   1ff94:	bl	44a60 <flatcc_json_printer_struct_field@@Base>
   1ff98:	movw	r3, #36427	; 0x8e4b
   1ff9c:	mov	r0, #150	; 0x96
   1ffa0:	mov	r1, #4
   1ffa4:	mov	r2, #1
   1ffa8:	mov	r6, #4
   1ffac:	movt	r3, #4
   1ffb0:	str	r1, [sp]
   1ffb4:	str	r0, [sp, #4]
   1ffb8:	mov	r0, r5
   1ffbc:	mov	r1, r4
   1ffc0:	bl	3b898 <flatcc_json_printer_int16_field@@Base>
   1ffc4:	movw	r3, #36432	; 0x8e50
   1ffc8:	mov	r0, #100	; 0x64
   1ffcc:	mov	r1, #2
   1ffd0:	mov	r2, #2
   1ffd4:	movt	r3, #4
   1ffd8:	str	r1, [sp]
   1ffdc:	str	r0, [sp, #4]
   1ffe0:	mov	r0, r5
   1ffe4:	mov	r1, r4
   1ffe8:	bl	3b898 <flatcc_json_printer_int16_field@@Base>
   1ffec:	movw	r3, #36435	; 0x8e53
   1fff0:	mov	r0, r5
   1fff4:	mov	r1, r4
   1fff8:	mov	r2, #3
   1fffc:	str	r6, [sp]
   20000:	movt	r3, #4
   20004:	bl	3aecc <flatcc_json_printer_string_field@@Base>
   20008:	movw	r3, #36440	; 0x8e58
   2000c:	mov	r0, #9
   20010:	mov	r1, r4
   20014:	mov	r2, #5
   20018:	mov	r7, #5
   2001c:	movt	r3, #4
   20020:	str	r0, [sp]
   20024:	mov	r0, r5
   20028:	bl	3da48 <flatcc_json_printer_uint8_vector_field@@Base>
   2002c:	movw	r0, #50288	; 0xc470
   20030:	movw	r3, #36450	; 0x8e62
   20034:	mov	r1, #8
   20038:	mov	r2, #6
   2003c:	str	r7, [sp]
   20040:	mov	r7, #5
   20044:	movt	r0, #2
   20048:	movt	r3, #4
   2004c:	str	r1, [sp, #4]
   20050:	mov	r1, r4
   20054:	str	r0, [sp, #8]
   20058:	mov	r0, r5
   2005c:	bl	3c258 <flatcc_json_printer_int8_enum_field@@Base>
   20060:	movw	r0, #50632	; 0xc5c8
   20064:	movw	r1, #50516	; 0xc554
   20068:	movw	r3, #36826	; 0x8fda
   2006c:	mov	r2, #8
   20070:	str	r6, [sp]
   20074:	movt	r0, #2
   20078:	movt	r1, #2
   2007c:	movt	r3, #4
   20080:	str	r1, [sp, #4]
   20084:	str	r0, [sp, #8]
   20088:	mov	r0, r5
   2008c:	mov	r1, r4
   20090:	bl	44164 <flatcc_json_printer_union_field@@Base>
   20094:	movw	r0, #50672	; 0xc5f0
   20098:	movw	r3, #36456	; 0x8e68
   2009c:	mov	r1, r4
   200a0:	mov	r2, #9
   200a4:	str	r7, [sp]
   200a8:	mov	sl, #5
   200ac:	str	r6, [sp, #4]
   200b0:	movt	r0, #2
   200b4:	movt	r3, #4
   200b8:	str	r0, [sp, #8]
   200bc:	mov	r0, r5
   200c0:	bl	42da0 <flatcc_json_printer_struct_vector_field@@Base>
   200c4:	movw	r3, #36462	; 0x8e6e
   200c8:	mov	r7, #17
   200cc:	mov	r0, r5
   200d0:	mov	r1, r4
   200d4:	mov	r2, #10
   200d8:	movt	r3, #4
   200dc:	str	r7, [sp]
   200e0:	bl	43348 <flatcc_json_printer_string_vector_field@@Base>
   200e4:	movw	r3, #36480	; 0x8e80
   200e8:	movw	r9, #65364	; 0xff54
   200ec:	mov	r0, r5
   200f0:	mov	r1, r4
   200f4:	mov	r2, #11
   200f8:	movt	r3, #4
   200fc:	movt	r9, #1
   20100:	stm	sp, {r7, r9}
   20104:	bl	4370c <flatcc_json_printer_table_vector_field@@Base>
   20108:	movw	r3, #36498	; 0x8e92
   2010c:	mov	r0, r5
   20110:	mov	r1, r4
   20114:	mov	r2, #12
   20118:	str	sl, [sp]
   2011c:	mov	sl, #5
   20120:	str	r9, [sp, #4]
   20124:	movt	r3, #4
   20128:	bl	43f78 <flatcc_json_printer_table_field@@Base>
   2012c:	movw	r3, #36504	; 0x8e98
   20130:	mov	r0, #20
   20134:	mov	r1, r4
   20138:	mov	r2, #13
   2013c:	movt	r3, #4
   20140:	stm	sp, {r0, r8, r9}
   20144:	mov	r0, r5
   20148:	bl	452d0 <flatcc_json_printer_table_as_nested_root@@Base>
   2014c:	movw	r0, #50768	; 0xc650
   20150:	movw	r3, #36525	; 0x8ead
   20154:	mov	r1, #9
   20158:	mov	r2, #14
   2015c:	movt	r0, #2
   20160:	movt	r3, #4
   20164:	str	r1, [sp]
   20168:	mov	r1, r4
   2016c:	str	r0, [sp, #4]
   20170:	mov	r0, r5
   20174:	bl	43f78 <flatcc_json_printer_table_field@@Base>
   20178:	movw	r3, #36535	; 0x8eb7
   2017c:	mov	r0, #1
   20180:	mov	r9, #8
   20184:	mov	r1, r4
   20188:	mov	r2, #15
   2018c:	movt	r3, #4
   20190:	str	r0, [sp, #4]
   20194:	mov	r0, r5
   20198:	str	r9, [sp]
   2019c:	bl	3bb58 <flatcc_json_printer_bool_field@@Base>
   201a0:	movw	r3, #36544	; 0x8ec0
   201a4:	mov	r6, #16
   201a8:	mov	r0, r5
   201ac:	mov	r1, r4
   201b0:	mov	r2, #16
   201b4:	movt	r3, #4
   201b8:	stm	sp, {r6, r8}
   201bc:	bl	3b980 <flatcc_json_printer_int32_field@@Base>
   201c0:	movw	r3, #36561	; 0x8ed1
   201c4:	mov	r0, r5
   201c8:	mov	r1, r4
   201cc:	mov	r2, #17
   201d0:	stm	sp, {r6, r8}
   201d4:	movt	r3, #4
   201d8:	bl	3b564 <flatcc_json_printer_uint32_field@@Base>
   201dc:	movw	r3, #36578	; 0x8ee2
   201e0:	mov	r0, r5
   201e4:	mov	r1, r4
   201e8:	mov	r2, #18
   201ec:	str	r8, [sp, #8]
   201f0:	str	r8, [sp, #12]
   201f4:	str	r6, [sp]
   201f8:	movt	r3, #4
   201fc:	bl	3ba5c <flatcc_json_printer_int64_field@@Base>
   20200:	movw	r3, #36595	; 0x8ef3
   20204:	mov	r0, r5
   20208:	mov	r1, r4
   2020c:	mov	r2, #19
   20210:	str	r8, [sp, #8]
   20214:	str	r8, [sp, #12]
   20218:	str	r6, [sp]
   2021c:	movt	r3, #4
   20220:	bl	3b628 <flatcc_json_printer_uint64_field@@Base>
   20224:	movw	r3, #36612	; 0x8f04
   20228:	mov	r0, r5
   2022c:	mov	r1, r4
   20230:	mov	r2, #20
   20234:	stm	sp, {r7, r8}
   20238:	movt	r3, #4
   2023c:	bl	3b980 <flatcc_json_printer_int32_field@@Base>
   20240:	movw	r3, #36630	; 0x8f16
   20244:	mov	r0, r5
   20248:	mov	r1, r4
   2024c:	mov	r2, #21
   20250:	stm	sp, {r7, r8}
   20254:	movt	r3, #4
   20258:	bl	3b564 <flatcc_json_printer_uint32_field@@Base>
   2025c:	movw	r3, #36648	; 0x8f28
   20260:	mov	r0, r5
   20264:	mov	r1, r4
   20268:	mov	r2, #22
   2026c:	str	r8, [sp, #8]
   20270:	str	r8, [sp, #12]
   20274:	str	r7, [sp]
   20278:	movt	r3, #4
   2027c:	bl	3ba5c <flatcc_json_printer_int64_field@@Base>
   20280:	movw	r3, #36666	; 0x8f3a
   20284:	mov	r0, r5
   20288:	mov	r1, r4
   2028c:	mov	r2, #23
   20290:	str	r8, [sp, #8]
   20294:	str	r8, [sp, #12]
   20298:	str	r7, [sp]
   2029c:	mov	r8, #23
   202a0:	movt	r3, #4
   202a4:	bl	3b628 <flatcc_json_printer_uint64_field@@Base>
   202a8:	movw	r3, #36684	; 0x8f4c
   202ac:	mov	r0, r5
   202b0:	mov	r1, r4
   202b4:	mov	r2, #24
   202b8:	str	r6, [sp]
   202bc:	movt	r3, #4
   202c0:	bl	3fc00 <flatcc_json_printer_bool_vector_field@@Base>
   202c4:	vldr	s0, [pc, #396]	; 20458 <main@@Base+0xa708>
   202c8:	movw	r3, #36701	; 0x8f5d
   202cc:	mov	r0, r5
   202d0:	mov	r1, r4
   202d4:	mov	r2, #25
   202d8:	str	sl, [sp]
   202dc:	movt	r3, #4
   202e0:	bl	3bc50 <flatcc_json_printer_float_field@@Base>
   202e4:	movw	r3, #36707	; 0x8f63
   202e8:	vmov.f32	s0, #8	; 0x40400000  3.0
   202ec:	mov	r6, #6
   202f0:	mov	r0, r5
   202f4:	mov	r1, r4
   202f8:	mov	r2, #26
   202fc:	movt	r3, #4
   20300:	str	r6, [sp]
   20304:	bl	3bc50 <flatcc_json_printer_float_field@@Base>
   20308:	vldr	s0, [pc, #332]	; 2045c <main@@Base+0xa70c>
   2030c:	movw	r3, #36714	; 0x8f6a
   20310:	mov	r0, r5
   20314:	mov	r1, r4
   20318:	mov	r2, #27
   2031c:	str	r6, [sp]
   20320:	movt	r3, #4
   20324:	bl	3bc50 <flatcc_json_printer_float_field@@Base>
   20328:	movw	r3, #36721	; 0x8f71
   2032c:	mov	r0, #18
   20330:	mov	r1, r4
   20334:	mov	r2, #28
   20338:	movt	r3, #4
   2033c:	str	r0, [sp]
   20340:	mov	r0, r5
   20344:	bl	43348 <flatcc_json_printer_string_vector_field@@Base>
   20348:	movw	r0, #50900	; 0xc6d4
   2034c:	movw	r3, #36740	; 0x8f84
   20350:	stm	sp, {r8, r9}
   20354:	mov	r1, r4
   20358:	mov	r2, #29
   2035c:	movt	r0, #2
   20360:	movt	r3, #4
   20364:	str	r0, [sp, #8]
   20368:	mov	r0, r5
   2036c:	bl	42da0 <flatcc_json_printer_struct_vector_field@@Base>
   20370:	movw	r3, #36764	; 0x8f9c
   20374:	mov	r6, #4
   20378:	mov	r0, r5
   2037c:	mov	r1, r4
   20380:	mov	r2, #30
   20384:	movt	r3, #4
   20388:	str	r6, [sp]
   2038c:	bl	3da48 <flatcc_json_printer_uint8_vector_field@@Base>
   20390:	movw	r0, #50672	; 0xc5f0
   20394:	movw	r3, #36769	; 0x8fa1
   20398:	mov	r1, r4
   2039c:	mov	r2, #31
   203a0:	str	sl, [sp]
   203a4:	str	r6, [sp, #4]
   203a8:	movt	r0, #2
   203ac:	movt	r3, #4
   203b0:	str	r0, [sp, #8]
   203b4:	mov	r0, r5
   203b8:	bl	42da0 <flatcc_json_printer_struct_vector_field@@Base>
   203bc:	movw	r3, #36775	; 0x8fa7
   203c0:	mov	r0, #15
   203c4:	mov	r1, r4
   203c8:	mov	r2, #32
   203cc:	movt	r3, #4
   203d0:	str	r0, [sp]
   203d4:	mov	r0, r5
   203d8:	bl	3f7ec <flatcc_json_printer_int64_vector_field@@Base>
   203dc:	movw	r3, #36791	; 0x8fb7
   203e0:	mov	r0, r5
   203e4:	mov	r1, r4
   203e8:	mov	r2, #33	; 0x21
   203ec:	str	r7, [sp]
   203f0:	movt	r3, #4
   203f4:	bl	40404 <flatcc_json_printer_double_vector_field@@Base>
   203f8:	movw	r0, #51008	; 0xc740
   203fc:	movw	r3, #36809	; 0x8fc9
   20400:	mov	r1, #21
   20404:	mov	r2, #34	; 0x22
   20408:	movt	r0, #2
   2040c:	movt	r3, #4
   20410:	str	r1, [sp]
   20414:	mov	r1, r4
   20418:	str	r0, [sp, #4]
   2041c:	mov	r0, r5
   20420:	bl	43f78 <flatcc_json_printer_table_field@@Base>
   20424:	movw	r0, #51012	; 0xc744
   20428:	movw	r3, #36831	; 0x8fdf
   2042c:	mov	r1, #10
   20430:	mov	r2, #35	; 0x23
   20434:	movt	r0, #2
   20438:	movt	r3, #4
   2043c:	str	r1, [sp]
   20440:	mov	r1, r4
   20444:	str	r0, [sp, #4]
   20448:	mov	r0, r5
   2044c:	bl	43f78 <flatcc_json_printer_table_field@@Base>
   20450:	sub	sp, fp, #28
   20454:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20458:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   2045c:	andeq	r0, r0, r0
   20460:	push	{r4, r5, r6, r7, fp, lr}
   20464:	add	fp, sp, #16
   20468:	sub	sp, sp, #8
   2046c:	mov	r1, #0
   20470:	mov	r2, #32
   20474:	mov	r3, #16
   20478:	mov	r4, r0
   2047c:	bl	326fc <flatcc_verify_field@@Base>
   20480:	cmp	r0, #0
   20484:	bne	2088c <main@@Base+0xab3c>
   20488:	mov	r0, r4
   2048c:	mov	r1, #2
   20490:	mov	r2, #2
   20494:	mov	r3, #2
   20498:	bl	326fc <flatcc_verify_field@@Base>
   2049c:	cmp	r0, #0
   204a0:	bne	2088c <main@@Base+0xab3c>
   204a4:	mov	r0, r4
   204a8:	mov	r1, #1
   204ac:	mov	r2, #2
   204b0:	mov	r3, #2
   204b4:	bl	326fc <flatcc_verify_field@@Base>
   204b8:	cmp	r0, #0
   204bc:	bne	2088c <main@@Base+0xab3c>
   204c0:	mov	r0, r4
   204c4:	mov	r1, #3
   204c8:	mov	r2, #1
   204cc:	bl	32780 <flatcc_verify_string_field@@Base>
   204d0:	cmp	r0, #0
   204d4:	bne	2088c <main@@Base+0xab3c>
   204d8:	mov	r0, r4
   204dc:	mov	r1, #6
   204e0:	mov	r2, #1
   204e4:	mov	r3, #1
   204e8:	mov	r5, #1
   204ec:	bl	326fc <flatcc_verify_field@@Base>
   204f0:	cmp	r0, #0
   204f4:	bne	2088c <main@@Base+0xab3c>
   204f8:	mvn	r0, #0
   204fc:	mov	r1, #5
   20500:	mov	r2, #0
   20504:	mov	r3, #1
   20508:	str	r5, [sp]
   2050c:	str	r0, [sp, #4]
   20510:	mov	r0, r4
   20514:	bl	32860 <flatcc_verify_vector_field@@Base>
   20518:	cmp	r0, #0
   2051c:	bne	2088c <main@@Base+0xab3c>
   20520:	movw	r3, #1120	; 0x460
   20524:	mov	r0, r4
   20528:	mov	r1, #11
   2052c:	mov	r2, #0
   20530:	movt	r3, #2
   20534:	bl	32c48 <flatcc_verify_table_vector_field@@Base>
   20538:	cmp	r0, #0
   2053c:	bne	2088c <main@@Base+0xab3c>
   20540:	mov	r0, r4
   20544:	mov	r1, #10
   20548:	mov	r2, #0
   2054c:	bl	32958 <flatcc_verify_string_vector_field@@Base>
   20550:	cmp	r0, #0
   20554:	bne	2088c <main@@Base+0xab3c>
   20558:	mov	r0, r4
   2055c:	mov	r1, #28
   20560:	mov	r2, #0
   20564:	bl	32958 <flatcc_verify_string_vector_field@@Base>
   20568:	cmp	r0, #0
   2056c:	bne	2088c <main@@Base+0xab3c>
   20570:	mvn	r0, #0
   20574:	mov	r1, #1
   20578:	mov	r2, #0
   2057c:	mov	r3, #1
   20580:	str	r1, [sp]
   20584:	str	r0, [sp, #4]
   20588:	mov	r0, r4
   2058c:	mov	r1, #24
   20590:	bl	32860 <flatcc_verify_vector_field@@Base>
   20594:	cmp	r0, #0
   20598:	bne	2088c <main@@Base+0xab3c>
   2059c:	mvn	r0, #-536870912	; 0xe0000000
   205a0:	mov	r1, #4
   205a4:	mov	r2, #0
   205a8:	mov	r3, #8
   205ac:	str	r1, [sp]
   205b0:	str	r0, [sp, #4]
   205b4:	mov	r0, r4
   205b8:	mov	r1, #29
   205bc:	bl	32860 <flatcc_verify_vector_field@@Base>
   205c0:	cmp	r0, #0
   205c4:	bne	2088c <main@@Base+0xab3c>
   205c8:	movw	r5, #1120	; 0x460
   205cc:	mov	r0, r4
   205d0:	mov	r1, #12
   205d4:	mov	r2, #0
   205d8:	movt	r5, #2
   205dc:	mov	r3, r5
   205e0:	bl	32ae0 <flatcc_verify_table_field@@Base>
   205e4:	cmp	r0, #0
   205e8:	bne	2088c <main@@Base+0xab3c>
   205ec:	movw	r3, #52852	; 0xce74
   205f0:	mov	r0, r4
   205f4:	mov	r1, #8
   205f8:	mov	r2, #0
   205fc:	movt	r3, #2
   20600:	bl	33b50 <flatcc_verify_union_field@@Base>
   20604:	cmp	r0, #0
   20608:	bne	2088c <main@@Base+0xab3c>
   2060c:	mvn	r6, #-1073741824	; 0xc0000000
   20610:	mov	r7, #2
   20614:	mov	r0, r4
   20618:	mov	r1, #9
   2061c:	mov	r2, #0
   20620:	mov	r3, #4
   20624:	str	r7, [sp]
   20628:	str	r6, [sp, #4]
   2062c:	bl	32860 <flatcc_verify_vector_field@@Base>
   20630:	cmp	r0, #0
   20634:	bne	2088c <main@@Base+0xab3c>
   20638:	mov	r0, r4
   2063c:	mov	r1, #31
   20640:	mov	r2, #0
   20644:	mov	r3, #4
   20648:	str	r7, [sp]
   2064c:	str	r6, [sp, #4]
   20650:	bl	32860 <flatcc_verify_vector_field@@Base>
   20654:	cmp	r0, #0
   20658:	bne	2088c <main@@Base+0xab3c>
   2065c:	mov	r0, #1
   20660:	mov	r1, #13
   20664:	mov	r2, #0
   20668:	mov	r3, #0
   2066c:	stm	sp, {r0, r5}
   20670:	mov	r0, r4
   20674:	bl	33830 <flatcc_verify_table_as_nested_root@@Base>
   20678:	cmp	r0, #0
   2067c:	bne	2088c <main@@Base+0xab3c>
   20680:	movw	r3, #52896	; 0xcea0
   20684:	mov	r0, r4
   20688:	mov	r1, #14
   2068c:	mov	r2, #0
   20690:	movt	r3, #2
   20694:	bl	32ae0 <flatcc_verify_table_field@@Base>
   20698:	cmp	r0, #0
   2069c:	bne	2088c <main@@Base+0xab3c>
   206a0:	mov	r0, r4
   206a4:	mov	r1, #15
   206a8:	mov	r2, #1
   206ac:	mov	r3, #1
   206b0:	bl	326fc <flatcc_verify_field@@Base>
   206b4:	cmp	r0, #0
   206b8:	bne	2088c <main@@Base+0xab3c>
   206bc:	mov	r0, r4
   206c0:	mov	r1, #16
   206c4:	mov	r2, #4
   206c8:	mov	r3, #4
   206cc:	bl	326fc <flatcc_verify_field@@Base>
   206d0:	cmp	r0, #0
   206d4:	bne	2088c <main@@Base+0xab3c>
   206d8:	mov	r0, r4
   206dc:	mov	r1, #17
   206e0:	mov	r2, #4
   206e4:	mov	r3, #4
   206e8:	bl	326fc <flatcc_verify_field@@Base>
   206ec:	cmp	r0, #0
   206f0:	bne	2088c <main@@Base+0xab3c>
   206f4:	mov	r0, r4
   206f8:	mov	r1, #18
   206fc:	mov	r2, #8
   20700:	mov	r3, #8
   20704:	bl	326fc <flatcc_verify_field@@Base>
   20708:	cmp	r0, #0
   2070c:	bne	2088c <main@@Base+0xab3c>
   20710:	mov	r0, r4
   20714:	mov	r1, #19
   20718:	mov	r2, #8
   2071c:	mov	r3, #8
   20720:	bl	326fc <flatcc_verify_field@@Base>
   20724:	cmp	r0, #0
   20728:	bne	2088c <main@@Base+0xab3c>
   2072c:	mov	r0, r4
   20730:	mov	r1, #20
   20734:	mov	r2, #4
   20738:	mov	r3, #4
   2073c:	bl	326fc <flatcc_verify_field@@Base>
   20740:	cmp	r0, #0
   20744:	bne	2088c <main@@Base+0xab3c>
   20748:	mov	r0, r4
   2074c:	mov	r1, #21
   20750:	mov	r2, #4
   20754:	mov	r3, #4
   20758:	bl	326fc <flatcc_verify_field@@Base>
   2075c:	cmp	r0, #0
   20760:	bne	2088c <main@@Base+0xab3c>
   20764:	mov	r0, r4
   20768:	mov	r1, #22
   2076c:	mov	r2, #8
   20770:	mov	r3, #8
   20774:	bl	326fc <flatcc_verify_field@@Base>
   20778:	cmp	r0, #0
   2077c:	bne	2088c <main@@Base+0xab3c>
   20780:	mov	r0, r4
   20784:	mov	r1, #23
   20788:	mov	r2, #8
   2078c:	mov	r3, #8
   20790:	bl	326fc <flatcc_verify_field@@Base>
   20794:	cmp	r0, #0
   20798:	bne	2088c <main@@Base+0xab3c>
   2079c:	mov	r0, r4
   207a0:	mov	r1, #25
   207a4:	mov	r2, #4
   207a8:	mov	r3, #4
   207ac:	bl	326fc <flatcc_verify_field@@Base>
   207b0:	cmp	r0, #0
   207b4:	bne	2088c <main@@Base+0xab3c>
   207b8:	mov	r0, r4
   207bc:	mov	r1, #26
   207c0:	mov	r2, #4
   207c4:	mov	r3, #4
   207c8:	bl	326fc <flatcc_verify_field@@Base>
   207cc:	cmp	r0, #0
   207d0:	bne	2088c <main@@Base+0xab3c>
   207d4:	mov	r0, r4
   207d8:	mov	r1, #27
   207dc:	mov	r2, #4
   207e0:	mov	r3, #4
   207e4:	bl	326fc <flatcc_verify_field@@Base>
   207e8:	cmp	r0, #0
   207ec:	bne	2088c <main@@Base+0xab3c>
   207f0:	mvn	r0, #0
   207f4:	mov	r1, #1
   207f8:	mov	r2, #0
   207fc:	mov	r3, #1
   20800:	str	r1, [sp]
   20804:	str	r0, [sp, #4]
   20808:	mov	r0, r4
   2080c:	mov	r1, #30
   20810:	bl	32860 <flatcc_verify_vector_field@@Base>
   20814:	cmp	r0, #0
   20818:	bne	2088c <main@@Base+0xab3c>
   2081c:	mvn	r5, #-536870912	; 0xe0000000
   20820:	mov	r6, #8
   20824:	mov	r0, r4
   20828:	mov	r1, #32
   2082c:	mov	r2, #0
   20830:	mov	r3, #8
   20834:	str	r6, [sp]
   20838:	str	r5, [sp, #4]
   2083c:	bl	32860 <flatcc_verify_vector_field@@Base>
   20840:	cmp	r0, #0
   20844:	bne	2088c <main@@Base+0xab3c>
   20848:	mov	r0, r4
   2084c:	mov	r1, #33	; 0x21
   20850:	mov	r2, #0
   20854:	mov	r3, #8
   20858:	str	r6, [sp]
   2085c:	str	r5, [sp, #4]
   20860:	bl	32860 <flatcc_verify_vector_field@@Base>
   20864:	cmp	r0, #0
   20868:	bne	2088c <main@@Base+0xab3c>
   2086c:	movw	r3, #52984	; 0xcef8
   20870:	mov	r0, r4
   20874:	mov	r1, #34	; 0x22
   20878:	mov	r2, #0
   2087c:	movt	r3, #2
   20880:	bl	32ae0 <flatcc_verify_table_field@@Base>
   20884:	cmp	r0, #0
   20888:	beq	20894 <main@@Base+0xab44>
   2088c:	sub	sp, fp, #16
   20890:	pop	{r4, r5, r6, r7, fp, pc}
   20894:	movw	r3, #52992	; 0xcf00
   20898:	mov	r0, r4
   2089c:	mov	r1, #35	; 0x23
   208a0:	mov	r2, #0
   208a4:	movt	r3, #2
   208a8:	sub	sp, fp, #16
   208ac:	pop	{r4, r5, r6, r7, fp, lr}
   208b0:	b	32ae0 <flatcc_verify_table_field@@Base>
   208b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   208b8:	add	fp, sp, #28
   208bc:	sub	sp, sp, #12
   208c0:	mov	r5, r1
   208c4:	sub	r1, r2, r1
   208c8:	cmp	r1, #8
   208cc:	movcs	r1, #8
   208d0:	sub	r4, r1, #1
   208d4:	cmp	r4, #7
   208d8:	bhi	20a48 <main@@Base+0xacf8>
   208dc:	str	r3, [sp, #8]
   208e0:	add	r8, pc, #32
   208e4:	mov	r9, #0
   208e8:	mov	ip, #0
   208ec:	mov	lr, #0
   208f0:	mov	sl, #0
   208f4:	mov	r6, #0
   208f8:	mov	r3, #0
   208fc:	mov	r1, #0
   20900:	mov	r7, #0
   20904:	ldr	pc, [r8, r4, lsl #2]
   20908:	andeq	r0, r2, ip, ror #18
   2090c:	andeq	r0, r2, r4, ror #18
   20910:	andeq	r0, r2, ip, asr r9
   20914:	andeq	r0, r2, r4, asr r9
   20918:	andeq	r0, r2, r8, asr #18
   2091c:	andeq	r0, r2, ip, lsr r9
   20920:	andeq	r0, r2, ip, lsr #18
   20924:	andeq	r0, r2, r8, lsr #18
   20928:	ldrb	ip, [r5, #7]
   2092c:	ldrb	r1, [r5, #6]
   20930:	mov	lr, r9
   20934:	orr	r1, ip, r1, lsl #8
   20938:	mov	r9, r1
   2093c:	ldrb	r1, [r5, #5]
   20940:	mov	sl, lr
   20944:	orr	r9, r9, r1, lsl #16
   20948:	ldrb	r1, [r5, #4]
   2094c:	mov	r6, sl
   20950:	orr	r9, r9, r1, lsl #24
   20954:	ldrb	r1, [r5, #3]
   20958:	orr	r3, r1, r6
   2095c:	ldrb	r1, [r5, #2]
   20960:	orr	r1, r3, r1, lsl #8
   20964:	ldrb	r3, [r5, #1]
   20968:	orr	r7, r1, r3, lsl #16
   2096c:	ldrb	r1, [r5]
   20970:	movw	r4, #25957	; 0x6565
   20974:	ldr	r3, [fp, #12]
   20978:	ldr	r8, [fp, #8]
   2097c:	movt	r4, #18290	; 0x4772
   20980:	orr	r7, r7, r1, lsl #24
   20984:	mvn	r1, #-1845493760	; 0x92000000
   20988:	subs	r1, r1, r9
   2098c:	sbcs	r1, r4, r7
   20990:	bcc	209c8 <main@@Base+0xac78>
   20994:	movw	r1, #30053	; 0x7565
   20998:	movt	r1, #17004	; 0x426c
   2099c:	teq	r7, r1
   209a0:	bne	20a48 <main@@Base+0xacf8>
   209a4:	str	r3, [sp]
   209a8:	mov	r1, r5
   209ac:	mov	r3, #4
   209b0:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   209b4:	cmp	r0, r5
   209b8:	beq	20a48 <main@@Base+0xacf8>
   209bc:	mov	r1, #0
   209c0:	mov	r2, #8
   209c4:	b	20a34 <main@@Base+0xace4>
   209c8:	movw	r6, #25600	; 0x6400
   209cc:	bic	r1, r7, #255	; 0xff
   209d0:	movt	r6, #21093	; 0x5265
   209d4:	teq	r1, r6
   209d8:	bne	20a00 <main@@Base+0xacb0>
   209dc:	str	r3, [sp]
   209e0:	mov	r1, r5
   209e4:	mov	r3, #3
   209e8:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   209ec:	cmp	r0, r5
   209f0:	beq	20a48 <main@@Base+0xacf8>
   209f4:	mov	r1, #0
   209f8:	mov	r2, #1
   209fc:	b	20a34 <main@@Base+0xace4>
   20a00:	eor	r1, r7, r4
   20a04:	and	r7, r9, #-16777216	; 0xff000000
   20a08:	eor	r7, r7, #1845493760	; 0x6e000000
   20a0c:	orrs	r1, r7, r1
   20a10:	bne	20a48 <main@@Base+0xacf8>
   20a14:	str	r3, [sp]
   20a18:	mov	r1, r5
   20a1c:	mov	r3, #5
   20a20:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   20a24:	cmp	r0, r5
   20a28:	beq	20a48 <main@@Base+0xacf8>
   20a2c:	mov	r1, #0
   20a30:	mov	r2, #2
   20a34:	str	r2, [r8]
   20a38:	str	r1, [r8, #4]
   20a3c:	mov	r5, r0
   20a40:	ldr	r2, [sp, #8]
   20a44:	str	r1, [r2]
   20a48:	mov	r0, r5
   20a4c:	sub	sp, fp, #28
   20a50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20a54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20a58:	add	fp, sp, #28
   20a5c:	sub	sp, sp, #20
   20a60:	sub	lr, r2, r1
   20a64:	cmp	lr, #8
   20a68:	mov	r7, lr
   20a6c:	movcs	r7, #8
   20a70:	sub	r7, r7, #1
   20a74:	cmp	r7, #7
   20a78:	bhi	20e8c <main@@Base+0xb13c>
   20a7c:	str	r0, [sp, #16]
   20a80:	str	r3, [sp, #12]
   20a84:	mov	r4, #0
   20a88:	mov	sl, #0
   20a8c:	mov	r8, #0
   20a90:	mov	r5, #0
   20a94:	mov	r3, #0
   20a98:	mov	r6, #0
   20a9c:	mov	r9, #0
   20aa0:	mov	ip, #0
   20aa4:	ldr	r0, [fp, #12]
   20aa8:	str	r0, [sp, #8]
   20aac:	ldr	r0, [fp, #8]
   20ab0:	str	r0, [sp, #4]
   20ab4:	add	r0, pc, #0
   20ab8:	ldr	pc, [r0, r7, lsl #2]
   20abc:	andeq	r0, r2, r0, lsr #22
   20ac0:	andeq	r0, r2, r8, lsl fp
   20ac4:	andeq	r0, r2, r0, lsl fp
   20ac8:	andeq	r0, r2, r8, lsl #22
   20acc:	strdeq	r0, [r2], -ip
   20ad0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20ad4:	andeq	r0, r2, r0, ror #21
   20ad8:	ldrdeq	r0, [r2], -ip
   20adc:	ldrb	sl, [r1, #7]
   20ae0:	ldrb	r0, [r1, #6]
   20ae4:	mov	r8, r4
   20ae8:	orr	r0, sl, r0, lsl #8
   20aec:	mov	r4, r0
   20af0:	ldrb	r0, [r1, #5]
   20af4:	mov	r5, r8
   20af8:	orr	r4, r4, r0, lsl #16
   20afc:	ldrb	r0, [r1, #4]
   20b00:	mov	r3, r5
   20b04:	orr	r4, r4, r0, lsl #24
   20b08:	ldrb	r0, [r1, #3]
   20b0c:	orr	r6, r0, r3
   20b10:	ldrb	r0, [r1, #2]
   20b14:	orr	r9, r6, r0, lsl #8
   20b18:	ldrb	r0, [r1, #1]
   20b1c:	orr	ip, r9, r0, lsl #16
   20b20:	ldrb	r0, [r1]
   20b24:	movw	r7, #30061	; 0x756d
   20b28:	movw	r3, #30815	; 0x785f
   20b2c:	movt	r7, #25966	; 0x656e
   20b30:	movt	r3, #26725	; 0x6865
   20b34:	orr	r6, ip, r0, lsl #24
   20b38:	subs	r0, r4, r7
   20b3c:	sbcs	r0, r6, r3
   20b40:	bcs	20ba8 <main@@Base+0xae58>
   20b44:	movw	r3, #27759	; 0x6c6f
   20b48:	mvn	r0, #-1912602624	; 0x8e000000
   20b4c:	bic	r7, r6, #255	; 0xff
   20b50:	movt	r3, #17263	; 0x436f
   20b54:	subs	r0, r0, r4
   20b58:	sbcs	r0, r3, r6
   20b5c:	bcc	20c04 <main@@Base+0xaeb4>
   20b60:	cmp	lr, #4
   20b64:	blt	20e8c <main@@Base+0xb13c>
   20b68:	movw	r0, #30976	; 0x7900
   20b6c:	movt	r0, #16750	; 0x416e
   20b70:	teq	r7, r0
   20b74:	bne	20e8c <main@@Base+0xb13c>
   20b78:	ldrb	r0, [r1, #3]
   20b7c:	mov	r3, r1
   20b80:	cmp	r0, #46	; 0x2e
   20b84:	addeq	r3, r3, #4
   20b88:	cmp	r3, r1
   20b8c:	beq	20e8c <main@@Base+0xb13c>
   20b90:	mov	r1, r3
   20b94:	ldr	r0, [sp, #16]
   20b98:	ldr	r3, [sp, #12]
   20b9c:	sub	sp, fp, #28
   20ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ba4:	b	23bc8 <main@@Base+0xde78>
   20ba8:	add	r0, r3, #64512	; 0xfc00
   20bac:	add	r5, r0, #17301504	; 0x1080000
   20bb0:	subs	r0, r4, r7
   20bb4:	sbcs	r0, r6, r5
   20bb8:	bcs	20c4c <main@@Base+0xaefc>
   20bbc:	cmp	lr, #9
   20bc0:	blt	20e8c <main@@Base+0xb13c>
   20bc4:	eor	r0, r4, r7
   20bc8:	eor	r3, r6, r3
   20bcc:	orrs	r0, r0, r3
   20bd0:	bne	20e8c <main@@Base+0xb13c>
   20bd4:	ldrb	r0, [r1, #8]
   20bd8:	mov	r3, r1
   20bdc:	cmp	r0, #46	; 0x2e
   20be0:	addeq	r3, r3, #9
   20be4:	cmp	r3, r1
   20be8:	beq	20e8c <main@@Base+0xb13c>
   20bec:	mov	r1, r3
   20bf0:	ldr	r0, [sp, #16]
   20bf4:	ldr	r3, [sp, #12]
   20bf8:	sub	sp, fp, #28
   20bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c00:	b	24fac <main@@Base+0xf25c>
   20c04:	movw	r0, #28416	; 0x6f00
   20c08:	movt	r0, #18031	; 0x466f
   20c0c:	teq	r7, r0
   20c10:	bne	20ca8 <main@@Base+0xaf58>
   20c14:	cmp	lr, #4
   20c18:	blt	20e8c <main@@Base+0xb13c>
   20c1c:	ldrb	r0, [r1, #3]
   20c20:	mov	r3, r1
   20c24:	cmp	r0, #46	; 0x2e
   20c28:	addeq	r3, r3, #4
   20c2c:	cmp	r3, r1
   20c30:	beq	20e8c <main@@Base+0xb13c>
   20c34:	mov	r1, r3
   20c38:	ldr	r0, [sp, #16]
   20c3c:	ldr	r3, [sp, #12]
   20c40:	sub	sp, fp, #28
   20c44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c48:	b	24d4c <main@@Base+0xeffc>
   20c4c:	sub	r0, r3, #4352	; 0x1100
   20c50:	subs	r3, r4, r7
   20c54:	sub	r0, r0, #-100663296	; 0xfa000000
   20c58:	sbcs	r0, r6, r0
   20c5c:	bcs	20cf4 <main@@Base+0xafa4>
   20c60:	cmp	lr, #9
   20c64:	blt	20e8c <main@@Base+0xb13c>
   20c68:	eor	r0, r4, r7
   20c6c:	eor	r3, r6, r5
   20c70:	orrs	r0, r0, r3
   20c74:	bne	20e8c <main@@Base+0xb13c>
   20c78:	ldrb	r0, [r1, #8]
   20c7c:	mov	r3, r1
   20c80:	cmp	r0, #46	; 0x2e
   20c84:	addeq	r3, r3, #9
   20c88:	cmp	r3, r1
   20c8c:	beq	20e8c <main@@Base+0xb13c>
   20c90:	mov	r1, r3
   20c94:	ldr	r0, [sp, #16]
   20c98:	ldr	r3, [sp, #12]
   20c9c:	sub	sp, fp, #28
   20ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ca4:	b	25158 <main@@Base+0xf408>
   20ca8:	cmp	lr, #6
   20cac:	blt	20e8c <main@@Base+0xb13c>
   20cb0:	and	r0, r4, #-16777216	; 0xff000000
   20cb4:	eor	r3, r6, r3
   20cb8:	eor	r0, r0, #1912602624	; 0x72000000
   20cbc:	orrs	r0, r0, r3
   20cc0:	bne	20e8c <main@@Base+0xb13c>
   20cc4:	ldrb	r0, [r1, #5]
   20cc8:	mov	r3, r1
   20ccc:	cmp	r0, #46	; 0x2e
   20cd0:	addeq	r3, r3, #6
   20cd4:	cmp	r3, r1
   20cd8:	beq	20e8c <main@@Base+0xb13c>
   20cdc:	mov	r1, r3
   20ce0:	ldr	r0, [sp, #16]
   20ce4:	ldr	r3, [sp, #12]
   20ce8:	sub	sp, fp, #28
   20cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20cf0:	b	208b4 <main@@Base+0xab64>
   20cf4:	movw	r0, #29817	; 0x7479
   20cf8:	movw	r3, #29797	; 0x7465
   20cfc:	movt	r0, #28016	; 0x6d70
   20d00:	movt	r3, #28271	; 0x6e6f
   20d04:	eor	r0, r4, r0
   20d08:	eor	r3, r6, r3
   20d0c:	orrs	r0, r0, r3
   20d10:	beq	20d64 <main@@Base+0xb014>
   20d14:	movw	r3, #26463	; 0x675f
   20d18:	eor	r0, r4, r7
   20d1c:	movt	r3, #28261	; 0x6e65
   20d20:	eor	r3, r6, r3
   20d24:	orrs	r0, r0, r3
   20d28:	bne	20e8c <main@@Base+0xb13c>
   20d2c:	cmp	lr, #9
   20d30:	blt	20e8c <main@@Base+0xb13c>
   20d34:	ldrb	r0, [r1, #8]
   20d38:	mov	r3, r1
   20d3c:	cmp	r0, #46	; 0x2e
   20d40:	addeq	r3, r3, #9
   20d44:	cmp	r3, r1
   20d48:	beq	20e8c <main@@Base+0xb13c>
   20d4c:	mov	r1, r3
   20d50:	ldr	r0, [sp, #16]
   20d54:	ldr	r3, [sp, #12]
   20d58:	sub	sp, fp, #28
   20d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20d60:	b	25348 <main@@Base+0xf5f8>
   20d64:	add	r8, r1, #8
   20d68:	sub	r5, r2, r8
   20d6c:	cmp	r5, #8
   20d70:	mov	r0, r5
   20d74:	movcs	r0, #8
   20d78:	sub	r4, r0, #1
   20d7c:	cmp	r4, #7
   20d80:	bhi	20e8c <main@@Base+0xb13c>
   20d84:	add	r0, pc, #16
   20d88:	mov	lr, #0
   20d8c:	mov	r9, #0
   20d90:	mov	r3, #0
   20d94:	mov	r6, #0
   20d98:	ldr	pc, [r0, r4, lsl #2]
   20d9c:	ldrdeq	r0, [r2], -r4
   20da0:	andeq	r0, r2, ip, asr #27
   20da4:	andeq	r0, r2, r4, asr #27
   20da8:			; <UNDEFINED> instruction: 0x00020dbc
   20dac:			; <UNDEFINED> instruction: 0x00020dbc
   20db0:			; <UNDEFINED> instruction: 0x00020dbc
   20db4:			; <UNDEFINED> instruction: 0x00020dbc
   20db8:			; <UNDEFINED> instruction: 0x00020dbc
   20dbc:	ldrb	r9, [r1, #11]
   20dc0:	mov	lr, #0
   20dc4:	ldrb	r0, [r1, #10]
   20dc8:	orr	r3, r9, r0, lsl #8
   20dcc:	ldrb	r0, [r1, #9]
   20dd0:	orr	r6, r3, r0, lsl #16
   20dd4:	cmp	r5, #5
   20dd8:	blt	20e8c <main@@Base+0xb13c>
   20ddc:	ldrb	r0, [r8]
   20de0:	orr	r0, r6, r0, lsl #24
   20de4:	eor	r0, r0, r7
   20de8:	orrs	r0, lr, r0
   20dec:	bne	20e8c <main@@Base+0xb13c>
   20df0:	ldrb	r0, [r1, #12]
   20df4:	mov	r5, r8
   20df8:	cmp	r0, #46	; 0x2e
   20dfc:	addeq	r5, r1, #13
   20e00:	cmp	r5, r8
   20e04:	beq	20e8c <main@@Base+0xb13c>
   20e08:	sub	r0, r2, r5
   20e0c:	cmp	r0, #8
   20e10:	movcs	r0, #8
   20e14:	sub	r0, r0, #1
   20e18:	cmp	r0, #7
   20e1c:	bhi	20e78 <main@@Base+0xb128>
   20e20:	ldrb	r0, [r5]
   20e24:	cmp	r0, #120	; 0x78
   20e28:	bne	20e88 <main@@Base+0xb138>
   20e2c:	ldr	r0, [sp, #8]
   20e30:	mov	r1, r5
   20e34:	mov	r3, #1
   20e38:	str	r0, [sp]
   20e3c:	ldr	r0, [sp, #16]
   20e40:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   20e44:	cmp	r0, r5
   20e48:	mov	r1, r5
   20e4c:	beq	20e8c <main@@Base+0xb13c>
   20e50:	ldr	r2, [sp, #4]
   20e54:	mov	r1, #0
   20e58:	str	r1, [r2]
   20e5c:	str	r1, [r2, #4]
   20e60:	ldr	r2, [sp, #12]
   20e64:	str	r1, [r2]
   20e68:	mov	r1, r0
   20e6c:	mov	r0, r1
   20e70:	sub	sp, fp, #28
   20e74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e78:	mov	r1, r5
   20e7c:	mov	r0, r1
   20e80:	sub	sp, fp, #28
   20e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e88:	mov	r1, r5
   20e8c:	mov	r0, r1
   20e90:	sub	sp, fp, #28
   20e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20e9c:	add	fp, sp, #28
   20ea0:	sub	sp, sp, #28
   20ea4:	mov	r8, r2
   20ea8:	sub	r2, r2, r1
   20eac:	cmp	r2, #8
   20eb0:	movcs	r2, #8
   20eb4:	sub	r2, r2, #1
   20eb8:	cmp	r2, #7
   20ebc:	bhi	21c4c <main@@Base+0xbefc>
   20ec0:	str	r0, [sp, #24]
   20ec4:	mov	sl, #0
   20ec8:	mov	ip, #0
   20ecc:	mov	lr, #0
   20ed0:	mov	r9, #0
   20ed4:	mov	r6, #0
   20ed8:	mov	r4, #0
   20edc:	mov	r5, #0
   20ee0:	ldr	r0, [fp, #12]
   20ee4:	str	r0, [sp, #20]
   20ee8:	ldr	r0, [fp, #8]
   20eec:	str	r0, [sp, #16]
   20ef0:	add	r7, pc, #4
   20ef4:	mov	r0, #0
   20ef8:	ldr	pc, [r7, r2, lsl #2]
   20efc:	andeq	r0, r2, r0, ror #30
   20f00:	andeq	r0, r2, r8, asr pc
   20f04:	andeq	r0, r2, r0, asr pc
   20f08:	andeq	r0, r2, r8, asr #30
   20f0c:	andeq	r0, r2, ip, lsr pc
   20f10:	andeq	r0, r2, r0, lsr pc
   20f14:	andeq	r0, r2, r0, lsr #30
   20f18:	andeq	r0, r2, ip, lsl pc
   20f1c:	ldrb	ip, [r1, #7]
   20f20:	ldrb	r2, [r1, #6]
   20f24:	mov	lr, sl
   20f28:	orr	r2, ip, r2, lsl #8
   20f2c:	mov	sl, r2
   20f30:	ldrb	r2, [r1, #5]
   20f34:	mov	r9, lr
   20f38:	orr	sl, sl, r2, lsl #16
   20f3c:	ldrb	r2, [r1, #4]
   20f40:	mov	r6, r9
   20f44:	orr	sl, sl, r2, lsl #24
   20f48:	ldrb	r2, [r1, #3]
   20f4c:	orr	r4, r2, r6
   20f50:	ldrb	r2, [r1, #2]
   20f54:	orr	r0, r4, r2, lsl #8
   20f58:	ldrb	r2, [r1, #1]
   20f5c:	orr	r5, r0, r2, lsl #16
   20f60:	ldrb	r2, [r1]
   20f64:	movw	r7, #11844	; 0x2e44
   20f68:	movw	r0, #18273	; 0x4761
   20f6c:	movt	r7, #28005	; 0x6d65
   20f70:	movt	r0, #19833	; 0x4d79
   20f74:	subs	r7, r7, sl
   20f78:	orr	r2, r5, r2, lsl #24
   20f7c:	sbcs	r7, r0, r2
   20f80:	bcc	210e0 <main@@Base+0xb390>
   20f84:	movw	r0, #31022	; 0x792e
   20f88:	movw	r7, #28276	; 0x6e74
   20f8c:	movt	r0, #24947	; 0x6173
   20f90:	movt	r7, #18017	; 0x4661
   20f94:	eor	r0, sl, r0
   20f98:	eor	r2, r2, r7
   20f9c:	orrs	r0, r0, r2
   20fa0:	bne	21c4c <main@@Base+0xbefc>
   20fa4:	add	lr, r1, #8
   20fa8:	sub	r0, r8, lr
   20fac:	cmp	r0, #8
   20fb0:	movcs	r0, #8
   20fb4:	sub	r6, r0, #1
   20fb8:	cmp	r6, #7
   20fbc:	bhi	21c4c <main@@Base+0xbefc>
   20fc0:	str	r3, [sp, #12]
   20fc4:	add	r2, pc, #32
   20fc8:	mov	sl, #0
   20fcc:	mov	ip, #0
   20fd0:	mov	r9, #0
   20fd4:	mov	r4, #0
   20fd8:	mov	r7, #0
   20fdc:	mov	r5, #0
   20fe0:	mov	r0, #0
   20fe4:	mov	r3, #0
   20fe8:	ldr	pc, [r2, r6, lsl #2]
   20fec:	andeq	r1, r2, r0, asr r0
   20ff0:	andeq	r1, r2, r8, asr #32
   20ff4:	andeq	r1, r2, r0, asr #32
   20ff8:	andeq	r1, r2, r8, lsr r0
   20ffc:	andeq	r1, r2, ip, lsr #32
   21000:	andeq	r1, r2, r0, lsr #32
   21004:	andeq	r1, r2, r0, lsl r0
   21008:	andeq	r1, r2, ip
   2100c:	ldrb	ip, [r1, #15]
   21010:	ldrb	r0, [r1, #14]
   21014:	mov	r9, sl
   21018:	orr	r0, ip, r0, lsl #8
   2101c:	mov	sl, r0
   21020:	ldrb	r0, [r1, #13]
   21024:	mov	r4, r9
   21028:	orr	sl, sl, r0, lsl #16
   2102c:	ldrb	r0, [r1, #12]
   21030:	mov	r7, r4
   21034:	orr	sl, sl, r0, lsl #24
   21038:	ldrb	r0, [r1, #11]
   2103c:	orr	r5, r0, r7
   21040:	ldrb	r0, [r1, #10]
   21044:	orr	r0, r5, r0, lsl #8
   21048:	ldrb	r2, [r1, #9]
   2104c:	orr	r3, r0, r2, lsl #16
   21050:	ldrb	r2, [lr]
   21054:	movw	r0, #29797	; 0x7465
   21058:	movt	r0, #24931	; 0x6163
   2105c:	eor	r0, sl, r0
   21060:	orr	r2, r3, r2, lsl #24
   21064:	movw	r3, #24946	; 0x6172
   21068:	movt	r3, #17256	; 0x4368
   2106c:	eor	r2, r2, r3
   21070:	orrs	r0, r0, r2
   21074:	bne	21c4c <main@@Base+0xbefc>
   21078:	add	r0, r1, #16
   2107c:	sub	r2, r8, r0
   21080:	cmp	r2, #8
   21084:	mov	r3, r2
   21088:	movcs	r3, #8
   2108c:	sub	r3, r3, #1
   21090:	cmp	r3, #7
   21094:	bhi	21c4c <main@@Base+0xbefc>
   21098:	cmp	r2, #2
   2109c:	blt	21c4c <main@@Base+0xbefc>
   210a0:	ldrb	r2, [r0]
   210a4:	cmp	r2, #114	; 0x72
   210a8:	bne	21c4c <main@@Base+0xbefc>
   210ac:	ldrb	r2, [r1, #17]
   210b0:	ldr	r3, [sp, #12]
   210b4:	cmp	r2, #46	; 0x2e
   210b8:	mov	r2, r0
   210bc:	addeq	r2, r1, #18
   210c0:	cmp	r2, r0
   210c4:	beq	21c4c <main@@Base+0xbefc>
   210c8:	ldr	r0, [sp, #24]
   210cc:	mov	r1, r2
   210d0:	mov	r2, r8
   210d4:	sub	sp, fp, #28
   210d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   210dc:	b	25490 <main@@Base+0xf740>
   210e0:	movw	r7, #11855	; 0x2e4f
   210e4:	eor	r2, r2, r0
   210e8:	movt	r7, #28005	; 0x6d65
   210ec:	eor	r7, sl, r7
   210f0:	orrs	r0, r7, r2
   210f4:	beq	2128c <main@@Base+0xb53c>
   210f8:	movw	r0, #11845	; 0x2e45
   210fc:	movt	r0, #28005	; 0x6d65
   21100:	eor	r0, sl, r0
   21104:	orrs	r0, r0, r2
   21108:	bne	21c4c <main@@Base+0xbefc>
   2110c:	add	lr, r1, #8
   21110:	sub	r0, r8, lr
   21114:	cmp	r0, #8
   21118:	movcs	r0, #8
   2111c:	sub	r7, r0, #1
   21120:	cmp	r7, #7
   21124:	bhi	21c4c <main@@Base+0xbefc>
   21128:	str	r3, [sp, #12]
   2112c:	add	sl, pc, #32
   21130:	mov	r0, #0
   21134:	mov	ip, #0
   21138:	mov	r9, #0
   2113c:	mov	r4, #0
   21140:	mov	r6, #0
   21144:	mov	r5, #0
   21148:	mov	r2, #0
   2114c:	mov	r3, #0
   21150:	ldr	pc, [sl, r7, lsl #2]
   21154:			; <UNDEFINED> instruction: 0x000211b8
   21158:			; <UNDEFINED> instruction: 0x000211b0
   2115c:	andeq	r1, r2, r8, lsr #3
   21160:	andeq	r1, r2, r0, lsr #3
   21164:	muleq	r2, r4, r1
   21168:	andeq	r1, r2, r8, lsl #3
   2116c:	andeq	r1, r2, r8, ror r1
   21170:	andeq	r1, r2, r4, ror r1
   21174:	ldrb	ip, [r1, #15]
   21178:	ldrb	r2, [r1, #14]
   2117c:	mov	r9, r0
   21180:	orr	r2, ip, r2, lsl #8
   21184:	mov	r0, r2
   21188:	ldrb	r2, [r1, #13]
   2118c:	mov	r4, r9
   21190:	orr	r0, r0, r2, lsl #16
   21194:	ldrb	r2, [r1, #12]
   21198:	mov	r6, r4
   2119c:	orr	r0, r0, r2, lsl #24
   211a0:	ldrb	r2, [r1, #11]
   211a4:	orr	r5, r2, r6
   211a8:	ldrb	r2, [r1, #10]
   211ac:	orr	r2, r5, r2, lsl #8
   211b0:	ldrb	r3, [r1, #9]
   211b4:	orr	r3, r2, r3, lsl #16
   211b8:	ldrb	r2, [lr]
   211bc:	movw	r6, #11880	; 0x2e68
   211c0:	movt	r6, #27749	; 0x6c65
   211c4:	subs	r7, r0, r6
   211c8:	orr	r2, r3, r2, lsl #24
   211cc:	movw	r3, #28016	; 0x6d70
   211d0:	movt	r3, #30817	; 0x7861
   211d4:	sbcs	r7, r2, r3
   211d8:	bcs	21648 <main@@Base+0xb8f8>
   211dc:	ldr	lr, [sp, #12]
   211e0:	subs	r7, r6, #37	; 0x25
   211e4:	sbc	r5, r3, #0
   211e8:	subs	r7, r0, r7
   211ec:	sbcs	r7, r2, r5
   211f0:	bcs	21760 <main@@Base+0xba10>
   211f4:	subs	r7, r6, #39	; 0x27
   211f8:	sbc	r3, r3, #0
   211fc:	eor	r0, r0, r7
   21200:	eor	r2, r2, r3
   21204:	orrs	r0, r0, r2
   21208:	bne	21c4c <main@@Base+0xbefc>
   2120c:	add	r0, r1, #16
   21210:	sub	r6, r8, r0
   21214:	cmp	r6, #8
   21218:	mov	r2, r6
   2121c:	movcs	r2, #8
   21220:	sub	r3, r2, #2
   21224:	cmp	r3, #7
   21228:	bcs	21c28 <main@@Base+0xbed8>
   2122c:	ldrb	r2, [r1, #17]
   21230:	mov	r3, #0
   21234:	lsl	r7, r2, #16
   21238:	cmp	r6, #3
   2123c:	blt	21c4c <main@@Base+0xbefc>
   21240:	ldrb	r2, [r0]
   21244:	orr	r2, r7, r2, lsl #24
   21248:	eor	r2, r2, #7929856	; 0x790000
   2124c:	eor	r2, r2, #1845493760	; 0x6e000000
   21250:	orrs	r2, r3, r2
   21254:	bne	21c4c <main@@Base+0xbefc>
   21258:	ldrb	r2, [r1, #18]
   2125c:	cmp	r2, #46	; 0x2e
   21260:	mov	r2, r0
   21264:	addeq	r2, r1, #19
   21268:	cmp	r2, r0
   2126c:	beq	21c4c <main@@Base+0xbefc>
   21270:	ldr	r0, [sp, #24]
   21274:	mov	r1, r2
   21278:	mov	r2, r8
   2127c:	mov	r3, lr
   21280:	sub	sp, fp, #28
   21284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21288:	b	23bc8 <main@@Base+0xde78>
   2128c:	add	lr, r1, #8
   21290:	sub	r0, r8, lr
   21294:	cmp	r0, #8
   21298:	movcs	r0, #8
   2129c:	sub	r7, r0, #1
   212a0:	cmp	r7, #7
   212a4:	bhi	21c4c <main@@Base+0xbefc>
   212a8:	str	r3, [sp, #12]
   212ac:	add	r3, pc, #32
   212b0:	mov	r2, #0
   212b4:	mov	ip, #0
   212b8:	mov	sl, #0
   212bc:	mov	r4, #0
   212c0:	mov	r6, #0
   212c4:	mov	r5, #0
   212c8:	mov	r0, #0
   212cc:	mov	r9, #0
   212d0:	ldr	pc, [r3, r7, lsl #2]
   212d4:	andeq	r1, r2, r8, lsr r3
   212d8:	andeq	r1, r2, r0, lsr r3
   212dc:	andeq	r1, r2, r8, lsr #6
   212e0:	andeq	r1, r2, r0, lsr #6
   212e4:	andeq	r1, r2, r4, lsl r3
   212e8:	andeq	r1, r2, r8, lsl #6
   212ec:	strdeq	r1, [r2], -r8
   212f0:	strdeq	r1, [r2], -r4
   212f4:	ldrb	ip, [r1, #15]
   212f8:	ldrb	r0, [r1, #14]
   212fc:	mov	sl, r2
   21300:	orr	r0, ip, r0, lsl #8
   21304:	mov	r2, r0
   21308:	ldrb	r0, [r1, #13]
   2130c:	mov	r4, sl
   21310:	orr	r2, r2, r0, lsl #16
   21314:	ldrb	r0, [r1, #12]
   21318:	mov	r6, r4
   2131c:	orr	r2, r2, r0, lsl #24
   21320:	ldrb	r0, [r1, #11]
   21324:	orr	r5, r0, r6
   21328:	ldrb	r0, [r1, #10]
   2132c:	orr	r0, r5, r0, lsl #8
   21330:	ldrb	r3, [r1, #9]
   21334:	orr	r9, r0, r3, lsl #16
   21338:	movw	r0, #28005	; 0x6d65
   2133c:	movw	r3, #25970	; 0x6572
   21340:	movt	r0, #20065	; 0x4e61
   21344:	movt	r3, #29800	; 0x7468
   21348:	eor	r0, r2, r0
   2134c:	ldrb	r2, [lr]
   21350:	orr	r2, r9, r2, lsl #24
   21354:	eor	r2, r2, r3
   21358:	orrs	r0, r0, r2
   2135c:	bne	21c4c <main@@Base+0xbefc>
   21360:	add	lr, r1, #16
   21364:	sub	r0, r8, lr
   21368:	cmp	r0, #8
   2136c:	movcs	r0, #8
   21370:	sub	r7, r0, #1
   21374:	cmp	r7, #7
   21378:	bhi	21c4c <main@@Base+0xbefc>
   2137c:	add	r2, pc, #32
   21380:	mov	sl, #0
   21384:	mov	ip, #0
   21388:	mov	r9, #0
   2138c:	mov	r4, #0
   21390:	mov	r6, #0
   21394:	mov	r5, #0
   21398:	mov	r0, #0
   2139c:	mov	r3, #0
   213a0:	ldr	pc, [r2, r7, lsl #2]
   213a4:	andeq	r1, r2, r8, lsl #8
   213a8:	andeq	r1, r2, r0, lsl #8
   213ac:	strdeq	r1, [r2], -r8
   213b0:	strdeq	r1, [r2], -r0
   213b4:	andeq	r1, r2, r4, ror #7
   213b8:	ldrdeq	r1, [r2], -r8
   213bc:	andeq	r1, r2, r8, asr #7
   213c0:	andeq	r1, r2, r4, asr #7
   213c4:	ldrb	ip, [r1, #23]
   213c8:	ldrb	r0, [r1, #22]
   213cc:	mov	r9, sl
   213d0:	orr	r0, ip, r0, lsl #8
   213d4:	mov	sl, r0
   213d8:	ldrb	r0, [r1, #21]
   213dc:	mov	r4, r9
   213e0:	orr	sl, sl, r0, lsl #16
   213e4:	ldrb	r0, [r1, #20]
   213e8:	mov	r6, r4
   213ec:	orr	sl, sl, r0, lsl #24
   213f0:	ldrb	r0, [r1, #19]
   213f4:	orr	r5, r0, r6
   213f8:	ldrb	r0, [r1, #18]
   213fc:	orr	r0, r5, r0, lsl #8
   21400:	ldrb	r2, [r1, #17]
   21404:	orr	r3, r0, r2, lsl #16
   21408:	ldrb	r2, [lr]
   2140c:	movw	r0, #18034	; 0x4672
   21410:	movt	r0, #25902	; 0x652e
   21414:	eor	r0, sl, r0
   21418:	orr	r2, r3, r2, lsl #24
   2141c:	movw	r3, #24931	; 0x6163
   21420:	movt	r3, #21360	; 0x5370
   21424:	eor	r2, r2, r3
   21428:	orrs	r0, r0, r2
   2142c:	bne	21c4c <main@@Base+0xbefc>
   21430:	add	lr, r1, #24
   21434:	sub	r0, r8, lr
   21438:	cmp	r0, #8
   2143c:	movcs	r0, #8
   21440:	sub	r7, r0, #1
   21444:	cmp	r7, #7
   21448:	bhi	21c4c <main@@Base+0xbefc>
   2144c:	add	r2, pc, #32
   21450:	mov	sl, #0
   21454:	mov	ip, #0
   21458:	mov	r9, #0
   2145c:	mov	r4, #0
   21460:	mov	r6, #0
   21464:	mov	r5, #0
   21468:	mov	r0, #0
   2146c:	mov	r3, #0
   21470:	ldr	pc, [r2, r7, lsl #2]
   21474:	ldrdeq	r1, [r2], -r8
   21478:	ldrdeq	r1, [r2], -r0
   2147c:	andeq	r1, r2, r8, asr #9
   21480:	andeq	r1, r2, r0, asr #9
   21484:			; <UNDEFINED> instruction: 0x000214b4
   21488:	andeq	r1, r2, r8, lsr #9
   2148c:	muleq	r2, r8, r4
   21490:	muleq	r2, r4, r4
   21494:	ldrb	ip, [r1, #31]
   21498:	ldrb	r0, [r1, #30]
   2149c:	mov	r9, sl
   214a0:	orr	r0, ip, r0, lsl #8
   214a4:	mov	sl, r0
   214a8:	ldrb	r0, [r1, #29]
   214ac:	mov	r4, r9
   214b0:	orr	sl, sl, r0, lsl #16
   214b4:	ldrb	r0, [r1, #28]
   214b8:	mov	r6, r4
   214bc:	orr	sl, sl, r0, lsl #24
   214c0:	ldrb	r0, [r1, #27]
   214c4:	orr	r5, r0, r6
   214c8:	ldrb	r0, [r1, #26]
   214cc:	orr	r0, r5, r0, lsl #8
   214d0:	ldrb	r2, [r1, #25]
   214d4:	orr	r3, r0, r2, lsl #16
   214d8:	ldrb	r2, [lr]
   214dc:	movw	r0, #30052	; 0x7564
   214e0:	movt	r0, #25452	; 0x636c
   214e4:	eor	r0, sl, r0
   214e8:	orr	r2, r3, r2, lsl #24
   214ec:	movw	r3, #18798	; 0x496e
   214f0:	movt	r3, #28525	; 0x6f6d
   214f4:	eor	r2, r2, r3
   214f8:	orrs	r0, r0, r2
   214fc:	bne	21c4c <main@@Base+0xbefc>
   21500:	add	r0, r1, #32
   21504:	sub	r2, r8, r0
   21508:	cmp	r2, #8
   2150c:	mov	r3, r2
   21510:	movcs	r3, #8
   21514:	sub	r3, r3, #1
   21518:	cmp	r3, #7
   2151c:	bhi	21c4c <main@@Base+0xbefc>
   21520:	cmp	r2, #2
   21524:	blt	21c4c <main@@Base+0xbefc>
   21528:	ldrb	r2, [r0]
   2152c:	cmp	r2, #101	; 0x65
   21530:	bne	21c4c <main@@Base+0xbefc>
   21534:	ldrb	r2, [r1, #33]	; 0x21
   21538:	ldr	r9, [sp, #12]
   2153c:	mov	r7, r0
   21540:	cmp	r2, #46	; 0x2e
   21544:	addeq	r7, r1, #34	; 0x22
   21548:	cmp	r7, r0
   2154c:	beq	21c4c <main@@Base+0xbefc>
   21550:	sub	r0, r8, r7
   21554:	cmp	r0, #8
   21558:	movcs	r0, #8
   2155c:	sub	r2, r0, #1
   21560:	cmp	r2, #7
   21564:	bhi	21d08 <main@@Base+0xbfb8>
   21568:	add	r5, pc, #32
   2156c:	mov	sl, #0
   21570:	mov	ip, #0
   21574:	mov	lr, #0
   21578:	mov	r1, #0
   2157c:	mov	r3, #0
   21580:	mov	r6, #0
   21584:	mov	r4, #0
   21588:	mov	r0, #0
   2158c:	ldr	pc, [r5, r2, lsl #2]
   21590:	strdeq	r1, [r2], -r4
   21594:	andeq	r1, r2, ip, ror #11
   21598:	andeq	r1, r2, r4, ror #11
   2159c:	ldrdeq	r1, [r2], -ip
   215a0:	ldrdeq	r1, [r2], -r0
   215a4:	andeq	r1, r2, r4, asr #11
   215a8:			; <UNDEFINED> instruction: 0x000215b4
   215ac:			; <UNDEFINED> instruction: 0x000215b0
   215b0:	ldrb	ip, [r7, #7]
   215b4:	ldrb	r0, [r7, #6]
   215b8:	mov	lr, sl
   215bc:	orr	r0, ip, r0, lsl #8
   215c0:	mov	sl, r0
   215c4:	ldrb	r0, [r7, #5]
   215c8:	mov	r1, lr
   215cc:	orr	sl, sl, r0, lsl #16
   215d0:	ldrb	r0, [r7, #4]
   215d4:	mov	r3, r1
   215d8:	orr	sl, sl, r0, lsl #24
   215dc:	ldrb	r0, [r7, #3]
   215e0:	orr	r6, r0, r3
   215e4:	ldrb	r0, [r7, #2]
   215e8:	orr	r4, r6, r0, lsl #8
   215ec:	ldrb	r0, [r7, #1]
   215f0:	orr	r0, r4, r0, lsl #16
   215f4:	ldrb	r1, [r7]
   215f8:	ldr	r4, [sp, #24]
   215fc:	orr	r6, r0, r1, lsl #24
   21600:	movw	r1, #28416	; 0x6f00
   21604:	movt	r1, #18031	; 0x466f
   21608:	bic	r0, r6, #255	; 0xff
   2160c:	teq	r0, r1
   21610:	bne	21c58 <main@@Base+0xbf08>
   21614:	ldr	r0, [sp, #20]
   21618:	mov	r1, r7
   2161c:	mov	r2, r8
   21620:	mov	r3, #3
   21624:	str	r0, [sp]
   21628:	mov	r0, r4
   2162c:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   21630:	cmp	r0, r7
   21634:	beq	21c58 <main@@Base+0xbf08>
   21638:	mov	r1, r0
   2163c:	mov	r3, #0
   21640:	mov	r2, #17
   21644:	b	21cec <main@@Base+0xbf9c>
   21648:	eor	r5, r0, r6
   2164c:	eor	r7, r2, r3
   21650:	orrs	r5, r5, r7
   21654:	bne	21854 <main@@Base+0xbb04>
   21658:	add	ip, r1, #16
   2165c:	sub	r2, r8, ip
   21660:	cmp	r2, #8
   21664:	mov	r0, r2
   21668:	movcs	r0, #8
   2166c:	sub	r4, r0, #1
   21670:	cmp	r4, #7
   21674:	bhi	21c4c <main@@Base+0xbefc>
   21678:	add	r6, pc, #28
   2167c:	mov	r9, #0
   21680:	mov	lr, #0
   21684:	mov	sl, #0
   21688:	mov	r3, #0
   2168c:	mov	r5, #0
   21690:	mov	r0, #0
   21694:	mov	r7, #0
   21698:	ldr	pc, [r6, r4, lsl #2]
   2169c:	strdeq	r1, [r2], -r8
   216a0:	strdeq	r1, [r2], -r0
   216a4:	andeq	r1, r2, r8, ror #13
   216a8:	andeq	r1, r2, r0, ror #13
   216ac:	ldrdeq	r1, [r2], -r4
   216b0:	andeq	r1, r2, r4, asr #13
   216b4:			; <UNDEFINED> instruction: 0x000216bc
   216b8:			; <UNDEFINED> instruction: 0x000216bc
   216bc:	ldrb	r0, [r1, #22]
   216c0:	lsl	lr, r0, #8
   216c4:	ldrb	r0, [r1, #21]
   216c8:	mov	sl, r9
   216cc:	orr	r0, lr, r0, lsl #16
   216d0:	mov	r9, r0
   216d4:	ldrb	r0, [r1, #20]
   216d8:	mov	r3, sl
   216dc:	orr	r9, r9, r0, lsl #24
   216e0:	ldrb	r0, [r1, #19]
   216e4:	orr	r5, r0, r3
   216e8:	ldrb	r0, [r1, #18]
   216ec:	orr	r0, r5, r0, lsl #8
   216f0:	ldrb	r3, [r1, #17]
   216f4:	orr	r7, r0, r3, lsl #16
   216f8:	cmp	r2, #8
   216fc:	blt	21c4c <main@@Base+0xbefc>
   21700:	ldrb	r0, [ip]
   21704:	movw	r2, #24421	; 0x5f65
   21708:	movw	r3, #27904	; 0x6d00
   2170c:	movt	r2, #25959	; 0x6567
   21710:	movt	r3, #28277	; 0x6e75
   21714:	add	r2, r2, #1114112	; 0x110000
   21718:	eor	r3, r9, r3
   2171c:	orr	r0, r7, r0, lsl #24
   21720:	eor	r0, r0, r2
   21724:	orrs	r0, r3, r0
   21728:	bne	21c4c <main@@Base+0xbefc>
   2172c:	ldrb	r0, [r1, #23]
   21730:	ldr	r3, [sp, #12]
   21734:	mov	r2, ip
   21738:	cmp	r0, #46	; 0x2e
   2173c:	addeq	r2, r1, #24
   21740:	cmp	r2, ip
   21744:	beq	21c4c <main@@Base+0xbefc>
   21748:	ldr	r0, [sp, #24]
   2174c:	mov	r1, r2
   21750:	mov	r2, r8
   21754:	sub	sp, fp, #28
   21758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2175c:	b	24fac <main@@Base+0xf25c>
   21760:	movw	r7, #11846	; 0x2e46
   21764:	eor	r2, r2, r3
   21768:	movt	r7, #27749	; 0x6c65
   2176c:	eor	r7, r0, r7
   21770:	orrs	r3, r7, r2
   21774:	beq	21aac <main@@Base+0xbd5c>
   21778:	movw	r3, #11843	; 0x2e43
   2177c:	movt	r3, #27749	; 0x6c65
   21780:	eor	r0, r0, r3
   21784:	orrs	r0, r0, r2
   21788:	bne	21c4c <main@@Base+0xbefc>
   2178c:	add	r0, r1, #16
   21790:	sub	r2, r8, r0
   21794:	cmp	r2, #8
   21798:	mov	r3, r2
   2179c:	movcs	r3, #8
   217a0:	sub	r6, r3, #1
   217a4:	cmp	r6, #7
   217a8:	bhi	21c4c <main@@Base+0xbefc>
   217ac:	add	r3, pc, #16
   217b0:	mov	ip, #0
   217b4:	mov	r7, #0
   217b8:	mov	r4, #0
   217bc:	mov	r5, #0
   217c0:	ldr	pc, [r3, r6, lsl #2]
   217c4:	strdeq	r1, [r2], -ip
   217c8:	strdeq	r1, [r2], -r4
   217cc:	andeq	r1, r2, ip, ror #15
   217d0:	andeq	r1, r2, r4, ror #15
   217d4:	andeq	r1, r2, r4, ror #15
   217d8:	andeq	r1, r2, r4, ror #15
   217dc:	andeq	r1, r2, r4, ror #15
   217e0:	andeq	r1, r2, r4, ror #15
   217e4:	ldrb	r7, [r1, #19]
   217e8:	mov	ip, #0
   217ec:	ldrb	r3, [r1, #18]
   217f0:	orr	r4, r7, r3, lsl #8
   217f4:	ldrb	r3, [r1, #17]
   217f8:	orr	r5, r4, r3, lsl #16
   217fc:	cmp	r2, #5
   21800:	blt	21c4c <main@@Base+0xbefc>
   21804:	ldrb	r2, [r0]
   21808:	movw	r3, #28530	; 0x6f72
   2180c:	movt	r3, #28524	; 0x6f6c
   21810:	orr	r2, r5, r2, lsl #24
   21814:	eor	r2, r2, r3
   21818:	orrs	r2, ip, r2
   2181c:	bne	21c4c <main@@Base+0xbefc>
   21820:	ldrb	r2, [r1, #20]
   21824:	cmp	r2, #46	; 0x2e
   21828:	mov	r2, r0
   2182c:	addeq	r2, r1, #21
   21830:	cmp	r2, r0
   21834:	beq	21c4c <main@@Base+0xbefc>
   21838:	ldr	r0, [sp, #24]
   2183c:	mov	r1, r2
   21840:	mov	r2, r8
   21844:	mov	r3, lr
   21848:	sub	sp, fp, #28
   2184c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21850:	b	208b4 <main@@Base+0xab64>
   21854:	add	r5, r6, #6
   21858:	subs	r4, r0, r5
   2185c:	sbcs	r2, r2, r3
   21860:	bcs	21980 <main@@Base+0xbc30>
   21864:	add	r2, r6, #1
   21868:	eor	r0, r0, r2
   2186c:	orrs	r0, r0, r7
   21870:	bne	21c4c <main@@Base+0xbefc>
   21874:	add	ip, r1, #16
   21878:	sub	r2, r8, ip
   2187c:	cmp	r2, #8
   21880:	mov	r0, r2
   21884:	movcs	r0, #8
   21888:	sub	r4, r0, #1
   2188c:	cmp	r4, #7
   21890:	bhi	21c4c <main@@Base+0xbefc>
   21894:	add	r6, pc, #28
   21898:	mov	r9, #0
   2189c:	mov	lr, #0
   218a0:	mov	sl, #0
   218a4:	mov	r3, #0
   218a8:	mov	r5, #0
   218ac:	mov	r7, #0
   218b0:	mov	r0, #0
   218b4:	ldr	pc, [r6, r4, lsl #2]
   218b8:	andeq	r1, r2, r4, lsl r9
   218bc:	andeq	r1, r2, ip, lsl #18
   218c0:	andeq	r1, r2, r4, lsl #18
   218c4:	strdeq	r1, [r2], -ip
   218c8:	strdeq	r1, [r2], -r0
   218cc:	andeq	r1, r2, r0, ror #17
   218d0:	ldrdeq	r1, [r2], -r8
   218d4:	ldrdeq	r1, [r2], -r8
   218d8:	ldrb	r0, [r1, #22]
   218dc:	lsl	lr, r0, #8
   218e0:	ldrb	r0, [r1, #21]
   218e4:	mov	sl, r9
   218e8:	orr	r0, lr, r0, lsl #16
   218ec:	mov	r9, r0
   218f0:	ldrb	r0, [r1, #20]
   218f4:	mov	r3, sl
   218f8:	orr	r9, r9, r0, lsl #24
   218fc:	ldrb	r0, [r1, #19]
   21900:	orr	r5, r0, r3
   21904:	ldrb	r0, [r1, #18]
   21908:	orr	r7, r5, r0, lsl #8
   2190c:	ldrb	r0, [r1, #17]
   21910:	orr	r0, r7, r0, lsl #16
   21914:	cmp	r2, #8
   21918:	blt	21c4c <main@@Base+0xbefc>
   2191c:	ldrb	r3, [ip]
   21920:	movw	r2, #24421	; 0x5f65
   21924:	movt	r2, #25959	; 0x6567
   21928:	add	r2, r2, #851968	; 0xd0000
   2192c:	orr	r0, r0, r3, lsl #24
   21930:	movw	r3, #27904	; 0x6d00
   21934:	add	r2, r2, #150994944	; 0x9000000
   21938:	movt	r3, #28277	; 0x6e75
   2193c:	eor	r0, r0, r2
   21940:	eor	r3, r9, r3
   21944:	orrs	r0, r3, r0
   21948:	bne	21c4c <main@@Base+0xbefc>
   2194c:	ldrb	r0, [r1, #23]
   21950:	ldr	r3, [sp, #12]
   21954:	mov	r2, ip
   21958:	cmp	r0, #46	; 0x2e
   2195c:	addeq	r2, r1, #24
   21960:	cmp	r2, ip
   21964:	beq	21c4c <main@@Base+0xbefc>
   21968:	ldr	r0, [sp, #24]
   2196c:	mov	r1, r2
   21970:	mov	r2, r8
   21974:	sub	sp, fp, #28
   21978:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2197c:	b	25158 <main@@Base+0xf408>
   21980:	eor	r0, r0, r5
   21984:	orrs	r0, r0, r7
   21988:	bne	21c4c <main@@Base+0xbefc>
   2198c:	add	lr, r1, #16
   21990:	sub	r2, r8, lr
   21994:	cmp	r2, #8
   21998:	mov	r0, r2
   2199c:	movcs	r0, #8
   219a0:	sub	r7, r0, #1
   219a4:	cmp	r7, #7
   219a8:	bhi	21c4c <main@@Base+0xbefc>
   219ac:	add	r3, pc, #36	; 0x24
   219b0:	mov	r0, #0
   219b4:	mov	sl, #0
   219b8:	mov	r9, #0
   219bc:	mov	r4, #0
   219c0:	mov	r6, #0
   219c4:	mov	r5, #0
   219c8:	mov	ip, #0
   219cc:	str	r0, [sp, #8]
   219d0:	mov	r0, #0
   219d4:	ldr	pc, [r3, r7, lsl #2]
   219d8:	andeq	r1, r2, r4, asr #20
   219dc:	andeq	r1, r2, ip, lsr sl
   219e0:	andeq	r1, r2, r4, lsr sl
   219e4:	andeq	r1, r2, ip, lsr #20
   219e8:	andeq	r1, r2, r0, lsr #20
   219ec:	andeq	r1, r2, r4, lsl sl
   219f0:	andeq	r1, r2, r0, lsl #20
   219f4:	strdeq	r1, [r2], -r8
   219f8:	ldrb	r0, [r1, #23]
   219fc:	str	r0, [sp, #8]
   21a00:	ldrb	r0, [r1, #22]
   21a04:	ldr	r3, [sp, #8]
   21a08:	mov	r9, sl
   21a0c:	orr	r0, r3, r0, lsl #8
   21a10:	mov	sl, r0
   21a14:	ldrb	r0, [r1, #21]
   21a18:	mov	r4, r9
   21a1c:	orr	sl, sl, r0, lsl #16
   21a20:	ldrb	r0, [r1, #20]
   21a24:	mov	r6, r4
   21a28:	orr	sl, sl, r0, lsl #24
   21a2c:	ldrb	r0, [r1, #19]
   21a30:	orr	r5, r0, r6
   21a34:	ldrb	r0, [r1, #18]
   21a38:	orr	ip, r5, r0, lsl #8
   21a3c:	ldrb	r0, [r1, #17]
   21a40:	orr	r0, ip, r0, lsl #16
   21a44:	ldrb	r3, [lr]
   21a48:	movw	ip, #27904	; 0x6d00
   21a4c:	cmp	r2, #8
   21a50:	movt	ip, #28277	; 0x6e75
   21a54:	orr	r6, r0, r3, lsl #24
   21a58:	blt	21b2c <main@@Base+0xbddc>
   21a5c:	movw	r2, #24421	; 0x5f65
   21a60:	bic	r0, sl, #255	; 0xff
   21a64:	movt	r2, #25959	; 0x6567
   21a68:	eor	r0, r0, ip
   21a6c:	eor	r2, r6, r2
   21a70:	orrs	r0, r0, r2
   21a74:	bne	21b2c <main@@Base+0xbddc>
   21a78:	ldrb	r0, [r1, #23]
   21a7c:	mov	r2, lr
   21a80:	cmp	r0, #46	; 0x2e
   21a84:	addeq	r2, r1, #24
   21a88:	cmp	r2, lr
   21a8c:	beq	21b2c <main@@Base+0xbddc>
   21a90:	ldr	r0, [sp, #24]
   21a94:	ldr	r3, [sp, #12]
   21a98:	mov	r1, r2
   21a9c:	mov	r2, r8
   21aa0:	sub	sp, fp, #28
   21aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21aa8:	b	25348 <main@@Base+0xf5f8>
   21aac:	add	r0, r1, #16
   21ab0:	sub	r6, r8, r0
   21ab4:	cmp	r6, #8
   21ab8:	mov	r2, r6
   21abc:	movcs	r2, #8
   21ac0:	sub	r3, r2, #2
   21ac4:	cmp	r3, #7
   21ac8:	bcs	21c3c <main@@Base+0xbeec>
   21acc:	ldrb	r2, [r1, #17]
   21ad0:	mov	r3, #0
   21ad4:	lsl	r7, r2, #16
   21ad8:	cmp	r6, #3
   21adc:	blt	21c4c <main@@Base+0xbefc>
   21ae0:	ldrb	r2, [r0]
   21ae4:	orr	r2, r7, r2, lsl #24
   21ae8:	eor	r2, r2, #7274496	; 0x6f0000
   21aec:	eor	r2, r2, #1862270976	; 0x6f000000
   21af0:	orrs	r2, r3, r2
   21af4:	bne	21c4c <main@@Base+0xbefc>
   21af8:	ldrb	r2, [r1, #18]
   21afc:	cmp	r2, #46	; 0x2e
   21b00:	mov	r2, r0
   21b04:	addeq	r2, r1, #19
   21b08:	cmp	r2, r0
   21b0c:	beq	21c4c <main@@Base+0xbefc>
   21b10:	ldr	r0, [sp, #24]
   21b14:	mov	r1, r2
   21b18:	mov	r2, r8
   21b1c:	mov	r3, lr
   21b20:	sub	sp, fp, #28
   21b24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21b28:	b	24d4c <main@@Base+0xeffc>
   21b2c:	movw	r0, #31077	; 0x7965
   21b30:	movw	r2, #25965	; 0x656d
   21b34:	movt	r0, #28788	; 0x7074
   21b38:	movt	r2, #28532	; 0x6f74
   21b3c:	eor	r0, sl, r0
   21b40:	eor	r2, r6, r2
   21b44:	orrs	r0, r0, r2
   21b48:	bne	21c4c <main@@Base+0xbefc>
   21b4c:	add	r0, r1, #24
   21b50:	sub	r6, r8, r0
   21b54:	cmp	r6, #8
   21b58:	mov	r2, r6
   21b5c:	movcs	r2, #8
   21b60:	sub	r3, r2, #3
   21b64:	cmp	r3, #6
   21b68:	bcs	21d18 <main@@Base+0xbfc8>
   21b6c:	ldrb	r2, [r1, #26]
   21b70:	ldr	r4, [sp, #12]
   21b74:	mov	r3, #0
   21b78:	lsl	r2, r2, #8
   21b7c:	ldrb	r7, [r1, #25]
   21b80:	orr	r7, r2, r7, lsl #16
   21b84:	cmp	r6, #4
   21b88:	blt	21c4c <main@@Base+0xbefc>
   21b8c:	ldrb	r2, [r0]
   21b90:	orr	r2, r7, r2, lsl #24
   21b94:	eor	r2, r2, ip
   21b98:	orrs	r2, r3, r2
   21b9c:	bne	21c4c <main@@Base+0xbefc>
   21ba0:	ldrb	r2, [r1, #27]
   21ba4:	mov	r6, r0
   21ba8:	cmp	r2, #46	; 0x2e
   21bac:	addeq	r6, r1, #28
   21bb0:	cmp	r6, r0
   21bb4:	beq	21c4c <main@@Base+0xbefc>
   21bb8:	sub	r0, r8, r6
   21bbc:	cmp	r0, #8
   21bc0:	movcs	r0, #8
   21bc4:	sub	r0, r0, #1
   21bc8:	cmp	r0, #7
   21bcc:	bhi	21d38 <main@@Base+0xbfe8>
   21bd0:	ldrb	r0, [r6]
   21bd4:	cmp	r0, #120	; 0x78
   21bd8:	bne	21d38 <main@@Base+0xbfe8>
   21bdc:	ldr	r0, [sp, #20]
   21be0:	mov	r1, r6
   21be4:	mov	r2, r8
   21be8:	mov	r3, #1
   21bec:	str	r0, [sp]
   21bf0:	ldr	r0, [sp, #24]
   21bf4:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   21bf8:	cmp	r0, r6
   21bfc:	mov	r1, r6
   21c00:	beq	21c4c <main@@Base+0xbefc>
   21c04:	ldr	r2, [sp, #16]
   21c08:	mov	r1, #0
   21c0c:	str	r1, [r2]
   21c10:	str	r1, [r2, #4]
   21c14:	str	r1, [r4]
   21c18:	mov	r1, r0
   21c1c:	mov	r0, r1
   21c20:	sub	sp, fp, #28
   21c24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21c28:	mov	r3, #0
   21c2c:	cmp	r2, #1
   21c30:	mov	r7, #0
   21c34:	beq	21238 <main@@Base+0xb4e8>
   21c38:	b	21c4c <main@@Base+0xbefc>
   21c3c:	mov	r3, #0
   21c40:	cmp	r2, #1
   21c44:	mov	r7, #0
   21c48:	beq	21ad8 <main@@Base+0xbd88>
   21c4c:	mov	r0, r1
   21c50:	sub	sp, fp, #28
   21c54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21c58:	movw	r0, #25942	; 0x6556
   21c5c:	movw	r1, #25452	; 0x636c
   21c60:	movt	r0, #30052	; 0x7564
   21c64:	movt	r1, #18798	; 0x496e
   21c68:	eor	r0, sl, r0
   21c6c:	eor	r1, r6, r1
   21c70:	orrs	r0, r0, r1
   21c74:	bne	21d08 <main@@Base+0xbfb8>
   21c78:	add	r6, r7, #8
   21c7c:	sub	r1, r8, r6
   21c80:	cmp	r1, #8
   21c84:	movcs	r1, #8
   21c88:	sub	r0, r1, #2
   21c8c:	cmp	r0, #7
   21c90:	bcs	21d58 <main@@Base+0xc008>
   21c94:	ldrb	r0, [r7, #9]
   21c98:	lsl	r1, r0, #16
   21c9c:	mov	r0, #0
   21ca0:	ldrb	r2, [r6]
   21ca4:	orr	r1, r1, r2, lsl #24
   21ca8:	eor	r1, r1, #23855104	; 0x16c0000
   21cac:	eor	r1, r1, #1610612736	; 0x60000000
   21cb0:	orrs	r0, r0, r1
   21cb4:	bne	21d08 <main@@Base+0xbfb8>
   21cb8:	ldr	r0, [sp, #20]
   21cbc:	mov	r1, r6
   21cc0:	mov	r2, r8
   21cc4:	mov	r3, #2
   21cc8:	str	r0, [sp]
   21ccc:	mov	r0, r4
   21cd0:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   21cd4:	cmp	r0, r6
   21cd8:	mov	r1, r7
   21cdc:	beq	21c4c <main@@Base+0xbefc>
   21ce0:	mov	r2, #0
   21ce4:	mov	r3, #0
   21ce8:	mov	r1, r0
   21cec:	ldr	r0, [sp, #16]
   21cf0:	strd	r2, [r0]
   21cf4:	mov	r0, #0
   21cf8:	str	r0, [r9]
   21cfc:	mov	r0, r1
   21d00:	sub	sp, fp, #28
   21d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d08:	mov	r1, r7
   21d0c:	mov	r0, r1
   21d10:	sub	sp, fp, #28
   21d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d18:	ldr	r4, [sp, #12]
   21d1c:	mov	r3, #0
   21d20:	cmp	r2, #1
   21d24:	beq	21d48 <main@@Base+0xbff8>
   21d28:	cmp	r2, #2
   21d2c:	mov	r2, #0
   21d30:	beq	21b7c <main@@Base+0xbe2c>
   21d34:	b	21c4c <main@@Base+0xbefc>
   21d38:	mov	r1, r6
   21d3c:	mov	r0, r1
   21d40:	sub	sp, fp, #28
   21d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d48:	mov	r7, #0
   21d4c:	cmp	r6, #4
   21d50:	bge	21b8c <main@@Base+0xbe3c>
   21d54:	b	21c4c <main@@Base+0xbefc>
   21d58:	cmp	r1, #1
   21d5c:	mov	r0, #0
   21d60:	mov	r1, #0
   21d64:	beq	21ca0 <main@@Base+0xbf50>
   21d68:	mov	r1, r7
   21d6c:	mov	r0, r1
   21d70:	sub	sp, fp, #28
   21d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d7c:	add	fp, sp, #28
   21d80:	sub	sp, sp, #44	; 0x2c
   21d84:	mov	r6, r2
   21d88:	ldr	r2, [fp, #8]
   21d8c:	mov	r5, r0
   21d90:	mov	r0, #0
   21d94:	mov	sl, r3
   21d98:	cmp	r1, r6
   21d9c:	strb	r0, [r2]
   21da0:	beq	21db4 <main@@Base+0xc064>
   21da4:	ldrb	r0, [r1]
   21da8:	cmp	r0, #34	; 0x22
   21dac:	bne	21de8 <main@@Base+0xc098>
   21db0:	add	r1, r1, #1
   21db4:	sub	r0, r6, r1
   21db8:	cmp	r0, #2
   21dbc:	blt	21e20 <main@@Base+0xc0d0>
   21dc0:	ldrb	r0, [r1]
   21dc4:	cmp	r0, #32
   21dc8:	bls	21e0c <main@@Base+0xc0bc>
   21dcc:	mov	r7, r1
   21dd0:	cmp	r7, r6
   21dd4:	bne	21e38 <main@@Base+0xc0e8>
   21dd8:	mov	r4, r6
   21ddc:	mov	r0, r4
   21de0:	sub	sp, fp, #28
   21de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21de8:	mov	r0, r5
   21dec:	mov	r2, r6
   21df0:	mov	r3, #5
   21df4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   21df8:	mov	r1, r0
   21dfc:	sub	r0, r6, r1
   21e00:	cmp	r0, #2
   21e04:	bge	21dc0 <main@@Base+0xc070>
   21e08:	b	21e20 <main@@Base+0xc0d0>
   21e0c:	bne	21e20 <main@@Base+0xc0d0>
   21e10:	mov	r7, r1
   21e14:	ldrb	r0, [r7, #1]!
   21e18:	cmp	r0, #32
   21e1c:	bhi	21e30 <main@@Base+0xc0e0>
   21e20:	mov	r0, r5
   21e24:	mov	r2, r6
   21e28:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   21e2c:	mov	r7, r0
   21e30:	cmp	r7, r6
   21e34:	beq	21dd8 <main@@Base+0xc088>
   21e38:	add	r0, sl, #4
   21e3c:	mov	r2, #0
   21e40:	add	r8, sp, #32
   21e44:	add	r9, sp, #28
   21e48:	str	sl, [sp, #16]
   21e4c:	str	r0, [sp, #12]
   21e50:	ldr	r4, [sl]
   21e54:	mov	sl, r0
   21e58:	str	r2, [sp, #20]
   21e5c:	add	r0, sp, #24
   21e60:	mov	r1, r7
   21e64:	mov	r2, r6
   21e68:	mov	r3, r9
   21e6c:	str	r8, [sp]
   21e70:	str	r0, [sp, #4]
   21e74:	mov	r0, r5
   21e78:	blx	r4
   21e7c:	cmp	r0, r6
   21e80:	beq	21f5c <main@@Base+0xc20c>
   21e84:	mov	r4, r0
   21e88:	cmp	r0, r7
   21e8c:	bne	21ea0 <main@@Base+0xc150>
   21e90:	ldr	r4, [sl], #4
   21e94:	cmp	r4, #0
   21e98:	bne	21e5c <main@@Base+0xc10c>
   21e9c:	b	21f6c <main@@Base+0xc21c>
   21ea0:	ldr	r2, [sp, #28]
   21ea4:	ldr	r0, [sp, #32]
   21ea8:	ldr	r1, [sp, #36]	; 0x24
   21eac:	cmp	r2, #0
   21eb0:	beq	21ed8 <main@@Base+0xc188>
   21eb4:	ldr	sl, [sp, #16]
   21eb8:	subs	r2, r0, #129	; 0x81
   21ebc:	sbcs	r1, r1, #0
   21ec0:	bcc	21f0c <main@@Base+0xc1bc>
   21ec4:	mov	r0, r5
   21ec8:	mov	r1, r4
   21ecc:	mov	r2, r6
   21ed0:	mov	r3, #8
   21ed4:	b	21ef8 <main@@Base+0xc1a8>
   21ed8:	ldr	sl, [sp, #16]
   21edc:	subs	r2, r0, #128	; 0x80
   21ee0:	sbcs	r1, r1, #0
   21ee4:	bcc	21f20 <main@@Base+0xc1d0>
   21ee8:	mov	r0, r5
   21eec:	mov	r1, r4
   21ef0:	mov	r2, r6
   21ef4:	mov	r3, #7
   21ef8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   21efc:	ldr	r2, [sp, #20]
   21f00:	cmp	r0, r6
   21f04:	bne	21f30 <main@@Base+0xc1e0>
   21f08:	b	21f5c <main@@Base+0xc20c>
   21f0c:	rsb	r2, r0, #0
   21f10:	mov	r0, r4
   21f14:	cmp	r0, r6
   21f18:	bne	21f30 <main@@Base+0xc1e0>
   21f1c:	b	21f5c <main@@Base+0xc20c>
   21f20:	mov	r2, r0
   21f24:	mov	r0, r4
   21f28:	cmp	r0, r6
   21f2c:	beq	21f5c <main@@Base+0xc20c>
   21f30:	ldr	r0, [fp, #8]
   21f34:	mov	r7, r4
   21f38:	mov	r1, r0
   21f3c:	ldrb	r0, [r0]
   21f40:	add	r0, r0, r2
   21f44:	strb	r0, [r1]
   21f48:	ldr	r0, [sp, #24]
   21f4c:	cmp	r0, #0
   21f50:	ldr	r0, [sp, #12]
   21f54:	bne	21e50 <main@@Base+0xc100>
   21f58:	b	21ddc <main@@Base+0xc08c>
   21f5c:	mov	r4, r6
   21f60:	mov	r0, r4
   21f64:	sub	sp, fp, #28
   21f68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21f6c:	mov	r0, r5
   21f70:	mov	r1, r7
   21f74:	mov	r2, r6
   21f78:	mov	r3, #23
   21f7c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   21f80:	mov	r4, r0
   21f84:	mov	r0, r4
   21f88:	sub	sp, fp, #28
   21f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21f90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21f94:	add	fp, sp, #28
   21f98:	sub	sp, sp, #44	; 0x2c
   21f9c:	mov	r6, r2
   21fa0:	ldr	r2, [fp, #8]
   21fa4:	mov	r5, r0
   21fa8:	mov	r0, #0
   21fac:	mov	sl, r3
   21fb0:	cmp	r1, r6
   21fb4:	strb	r0, [r2]
   21fb8:	beq	21fcc <main@@Base+0xc27c>
   21fbc:	ldrb	r0, [r1]
   21fc0:	cmp	r0, #34	; 0x22
   21fc4:	bne	22000 <main@@Base+0xc2b0>
   21fc8:	add	r1, r1, #1
   21fcc:	sub	r0, r6, r1
   21fd0:	cmp	r0, #2
   21fd4:	blt	22038 <main@@Base+0xc2e8>
   21fd8:	ldrb	r0, [r1]
   21fdc:	cmp	r0, #32
   21fe0:	bls	22024 <main@@Base+0xc2d4>
   21fe4:	mov	r7, r1
   21fe8:	cmp	r7, r6
   21fec:	bne	22050 <main@@Base+0xc300>
   21ff0:	mov	r4, r6
   21ff4:	mov	r0, r4
   21ff8:	sub	sp, fp, #28
   21ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22000:	mov	r0, r5
   22004:	mov	r2, r6
   22008:	mov	r3, #5
   2200c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22010:	mov	r1, r0
   22014:	sub	r0, r6, r1
   22018:	cmp	r0, #2
   2201c:	bge	21fd8 <main@@Base+0xc288>
   22020:	b	22038 <main@@Base+0xc2e8>
   22024:	bne	22038 <main@@Base+0xc2e8>
   22028:	mov	r7, r1
   2202c:	ldrb	r0, [r7, #1]!
   22030:	cmp	r0, #32
   22034:	bhi	22048 <main@@Base+0xc2f8>
   22038:	mov	r0, r5
   2203c:	mov	r2, r6
   22040:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   22044:	mov	r7, r0
   22048:	cmp	r7, r6
   2204c:	beq	21ff0 <main@@Base+0xc2a0>
   22050:	add	r0, sl, #4
   22054:	mov	r1, #0
   22058:	add	r8, sp, #32
   2205c:	add	r9, sp, #28
   22060:	str	sl, [sp, #16]
   22064:	str	r1, [sp, #20]
   22068:	str	r0, [sp, #12]
   2206c:	ldr	r4, [sl]
   22070:	mov	sl, r0
   22074:	add	r0, sp, #24
   22078:	mov	r1, r7
   2207c:	mov	r2, r6
   22080:	mov	r3, r9
   22084:	str	r8, [sp]
   22088:	str	r0, [sp, #4]
   2208c:	mov	r0, r5
   22090:	blx	r4
   22094:	cmp	r0, r6
   22098:	beq	22160 <main@@Base+0xc410>
   2209c:	mov	r4, r0
   220a0:	cmp	r0, r7
   220a4:	bne	220b8 <main@@Base+0xc368>
   220a8:	ldr	r4, [sl], #4
   220ac:	cmp	r4, #0
   220b0:	bne	22074 <main@@Base+0xc324>
   220b4:	b	22170 <main@@Base+0xc420>
   220b8:	ldr	r0, [sp, #28]
   220bc:	cmp	r0, #0
   220c0:	beq	220e8 <main@@Base+0xc398>
   220c4:	mov	r0, r5
   220c8:	mov	r1, r4
   220cc:	mov	r2, r6
   220d0:	mov	r3, #8
   220d4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   220d8:	ldr	sl, [sp, #16]
   220dc:	cmp	r0, r6
   220e0:	bne	22130 <main@@Base+0xc3e0>
   220e4:	b	22160 <main@@Base+0xc410>
   220e8:	ldr	r0, [sp, #32]
   220ec:	ldr	r1, [sp, #36]	; 0x24
   220f0:	ldr	sl, [sp, #16]
   220f4:	subs	r2, r0, #256	; 0x100
   220f8:	sbcs	r1, r1, #0
   220fc:	bcc	22120 <main@@Base+0xc3d0>
   22100:	mov	r0, r5
   22104:	mov	r1, r4
   22108:	mov	r2, r6
   2210c:	mov	r3, #7
   22110:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22114:	cmp	r0, r6
   22118:	bne	22130 <main@@Base+0xc3e0>
   2211c:	b	22160 <main@@Base+0xc410>
   22120:	str	r0, [sp, #20]
   22124:	mov	r0, r4
   22128:	cmp	r0, r6
   2212c:	beq	22160 <main@@Base+0xc410>
   22130:	ldr	r0, [fp, #8]
   22134:	ldr	r2, [sp, #20]
   22138:	mov	r7, r4
   2213c:	mov	r1, r0
   22140:	ldrb	r0, [r0]
   22144:	add	r0, r0, r2
   22148:	strb	r0, [r1]
   2214c:	ldr	r0, [sp, #24]
   22150:	cmp	r0, #0
   22154:	ldr	r0, [sp, #12]
   22158:	bne	2206c <main@@Base+0xc31c>
   2215c:	b	21ff4 <main@@Base+0xc2a4>
   22160:	mov	r4, r6
   22164:	mov	r0, r4
   22168:	sub	sp, fp, #28
   2216c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22170:	mov	r0, r5
   22174:	mov	r1, r7
   22178:	mov	r2, r6
   2217c:	mov	r3, #23
   22180:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22184:	mov	r4, r0
   22188:	mov	r0, r4
   2218c:	sub	sp, fp, #28
   22190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22198:	add	fp, sp, #28
   2219c:	sub	sp, sp, #44	; 0x2c
   221a0:	mov	r6, r2
   221a4:	ldr	r2, [fp, #8]
   221a8:	mov	r5, r0
   221ac:	mov	r0, #0
   221b0:	mov	sl, r3
   221b4:	cmp	r1, r6
   221b8:	strh	r0, [r2]
   221bc:	beq	221d0 <main@@Base+0xc480>
   221c0:	ldrb	r0, [r1]
   221c4:	cmp	r0, #34	; 0x22
   221c8:	bne	22204 <main@@Base+0xc4b4>
   221cc:	add	r1, r1, #1
   221d0:	sub	r0, r6, r1
   221d4:	cmp	r0, #2
   221d8:	blt	2223c <main@@Base+0xc4ec>
   221dc:	ldrb	r0, [r1]
   221e0:	cmp	r0, #32
   221e4:	bls	22228 <main@@Base+0xc4d8>
   221e8:	mov	r7, r1
   221ec:	cmp	r7, r6
   221f0:	bne	22254 <main@@Base+0xc504>
   221f4:	mov	r4, r6
   221f8:	mov	r0, r4
   221fc:	sub	sp, fp, #28
   22200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22204:	mov	r0, r5
   22208:	mov	r2, r6
   2220c:	mov	r3, #5
   22210:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22214:	mov	r1, r0
   22218:	sub	r0, r6, r1
   2221c:	cmp	r0, #2
   22220:	bge	221dc <main@@Base+0xc48c>
   22224:	b	2223c <main@@Base+0xc4ec>
   22228:	bne	2223c <main@@Base+0xc4ec>
   2222c:	mov	r7, r1
   22230:	ldrb	r0, [r7, #1]!
   22234:	cmp	r0, #32
   22238:	bhi	2224c <main@@Base+0xc4fc>
   2223c:	mov	r0, r5
   22240:	mov	r2, r6
   22244:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   22248:	mov	r7, r0
   2224c:	cmp	r7, r6
   22250:	beq	221f4 <main@@Base+0xc4a4>
   22254:	add	r0, sl, #4
   22258:	mov	r2, #0
   2225c:	add	r8, sp, #32
   22260:	add	r9, sp, #28
   22264:	str	sl, [sp, #16]
   22268:	str	r0, [sp, #12]
   2226c:	ldr	r4, [sl]
   22270:	mov	sl, r0
   22274:	str	r2, [sp, #20]
   22278:	add	r0, sp, #24
   2227c:	mov	r1, r7
   22280:	mov	r2, r6
   22284:	mov	r3, r9
   22288:	str	r8, [sp]
   2228c:	str	r0, [sp, #4]
   22290:	mov	r0, r5
   22294:	blx	r4
   22298:	cmp	r0, r6
   2229c:	beq	2237c <main@@Base+0xc62c>
   222a0:	mov	r4, r0
   222a4:	cmp	r0, r7
   222a8:	bne	222bc <main@@Base+0xc56c>
   222ac:	ldr	r4, [sl], #4
   222b0:	cmp	r4, #0
   222b4:	bne	22278 <main@@Base+0xc528>
   222b8:	b	2238c <main@@Base+0xc63c>
   222bc:	ldr	r2, [sp, #28]
   222c0:	ldr	r0, [sp, #32]
   222c4:	ldr	r1, [sp, #36]	; 0x24
   222c8:	cmp	r2, #0
   222cc:	beq	222f8 <main@@Base+0xc5a8>
   222d0:	ldr	sl, [sp, #16]
   222d4:	movw	r2, #32769	; 0x8001
   222d8:	subs	r2, r0, r2
   222dc:	sbcs	r1, r1, #0
   222e0:	bcc	2232c <main@@Base+0xc5dc>
   222e4:	mov	r0, r5
   222e8:	mov	r1, r4
   222ec:	mov	r2, r6
   222f0:	mov	r3, #8
   222f4:	b	22318 <main@@Base+0xc5c8>
   222f8:	ldr	sl, [sp, #16]
   222fc:	subs	r2, r0, #32768	; 0x8000
   22300:	sbcs	r1, r1, #0
   22304:	bcc	22340 <main@@Base+0xc5f0>
   22308:	mov	r0, r5
   2230c:	mov	r1, r4
   22310:	mov	r2, r6
   22314:	mov	r3, #7
   22318:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2231c:	ldr	r2, [sp, #20]
   22320:	cmp	r0, r6
   22324:	bne	22350 <main@@Base+0xc600>
   22328:	b	2237c <main@@Base+0xc62c>
   2232c:	rsb	r2, r0, #0
   22330:	mov	r0, r4
   22334:	cmp	r0, r6
   22338:	bne	22350 <main@@Base+0xc600>
   2233c:	b	2237c <main@@Base+0xc62c>
   22340:	mov	r2, r0
   22344:	mov	r0, r4
   22348:	cmp	r0, r6
   2234c:	beq	2237c <main@@Base+0xc62c>
   22350:	ldr	r0, [fp, #8]
   22354:	mov	r7, r4
   22358:	mov	r1, r0
   2235c:	ldrh	r0, [r0]
   22360:	add	r0, r0, r2
   22364:	strh	r0, [r1]
   22368:	ldr	r0, [sp, #24]
   2236c:	cmp	r0, #0
   22370:	ldr	r0, [sp, #12]
   22374:	bne	2226c <main@@Base+0xc51c>
   22378:	b	221f8 <main@@Base+0xc4a8>
   2237c:	mov	r4, r6
   22380:	mov	r0, r4
   22384:	sub	sp, fp, #28
   22388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2238c:	mov	r0, r5
   22390:	mov	r1, r7
   22394:	mov	r2, r6
   22398:	mov	r3, #23
   2239c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   223a0:	mov	r4, r0
   223a4:	mov	r0, r4
   223a8:	sub	sp, fp, #28
   223ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   223b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   223b4:	add	fp, sp, #28
   223b8:	sub	sp, sp, #28
   223bc:	mov	r7, r2
   223c0:	mov	r5, r0
   223c4:	cmp	r1, r2
   223c8:	beq	22440 <main@@Base+0xc6f0>
   223cc:	ldrb	r0, [r1]
   223d0:	cmp	r0, #123	; 0x7b
   223d4:	bne	22440 <main@@Base+0xc6f0>
   223d8:	add	r2, r1, #1
   223dc:	mov	sl, r3
   223e0:	sub	r0, r7, r2
   223e4:	cmp	r0, #2
   223e8:	blt	22470 <main@@Base+0xc720>
   223ec:	ldrb	r0, [r2]
   223f0:	cmp	r0, #32
   223f4:	bls	22460 <main@@Base+0xc710>
   223f8:	mov	r1, r2
   223fc:	cmp	r1, r7
   22400:	mov	r2, r7
   22404:	beq	22490 <main@@Base+0xc740>
   22408:	ldrb	r0, [r1]
   2240c:	cmp	r0, #125	; 0x7d
   22410:	bne	22458 <main@@Base+0xc708>
   22414:	add	r2, r1, #1
   22418:	sub	r0, r7, r2
   2241c:	cmp	r0, #2
   22420:	blt	22afc <main@@Base+0xcdac>
   22424:	ldrb	r0, [r2]
   22428:	cmp	r0, #32
   2242c:	bls	22aec <main@@Base+0xcd9c>
   22430:	mov	r1, r2
   22434:	mov	r0, r1
   22438:	sub	sp, fp, #28
   2243c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22440:	mov	r0, r5
   22444:	mov	r2, r7
   22448:	mov	r3, #21
   2244c:	sub	sp, fp, #28
   22450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22454:	b	3454c <flatcc_json_parser_set_error@@Base>
   22458:	mov	r2, r1
   2245c:	b	22490 <main@@Base+0xc740>
   22460:	bne	22470 <main@@Base+0xc720>
   22464:	ldrb	r0, [r1, #2]!
   22468:	cmp	r0, #32
   2246c:	bhi	22484 <main@@Base+0xc734>
   22470:	mov	r1, r2
   22474:	mov	r0, r5
   22478:	mov	r2, r7
   2247c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   22480:	mov	r1, r0
   22484:	cmp	r1, r7
   22488:	mov	r2, r7
   2248c:	bne	22408 <main@@Base+0xc6b8>
   22490:	movw	r0, #53636	; 0xd184
   22494:	mov	r8, #1627389952	; 0x61000000
   22498:	movt	r0, #5
   2249c:	add	r9, r0, #60	; 0x3c
   224a0:	cmp	r2, r7
   224a4:	mov	r4, r7
   224a8:	beq	224d8 <main@@Base+0xc788>
   224ac:	ldrb	r0, [r2]
   224b0:	cmp	r0, #34	; 0x22
   224b4:	bne	224c0 <main@@Base+0xc770>
   224b8:	add	r4, r2, #1
   224bc:	b	224d8 <main@@Base+0xc788>
   224c0:	mov	r1, r2
   224c4:	mov	r0, r5
   224c8:	mov	r2, r7
   224cc:	mov	r3, #5
   224d0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   224d4:	mov	r4, r0
   224d8:	sub	r0, r7, r4
   224dc:	mov	r1, #8
   224e0:	cmp	r0, #8
   224e4:	movcc	r1, r0
   224e8:	sub	r1, r1, #1
   224ec:	cmp	r1, #7
   224f0:	bhi	22960 <main@@Base+0xcc10>
   224f4:	ldrb	r1, [r4]
   224f8:	teq	r8, r1, lsl #24
   224fc:	beq	22554 <main@@Base+0xc804>
   22500:	lsl	r1, r1, #24
   22504:	teq	r1, #1644167168	; 0x62000000
   22508:	bne	22960 <main@@Base+0xcc10>
   2250c:	cmp	r0, #2
   22510:	mov	r6, r4
   22514:	blt	226b4 <main@@Base+0xc964>
   22518:	ldrb	r0, [r4, #1]
   2251c:	mov	r6, r4
   22520:	cmp	r0, #34	; 0x22
   22524:	bne	226b4 <main@@Base+0xc964>
   22528:	add	r1, r4, #2
   2252c:	sub	r0, r7, r1
   22530:	cmp	r0, #2
   22534:	blt	225b0 <main@@Base+0xc860>
   22538:	ldrb	r0, [r1]
   2253c:	cmp	r0, #32
   22540:	bls	2259c <main@@Base+0xc84c>
   22544:	mov	r6, r1
   22548:	cmp	r6, r7
   2254c:	bne	225c8 <main@@Base+0xc878>
   22550:	b	22600 <main@@Base+0xc8b0>
   22554:	cmp	r0, #2
   22558:	mov	r6, r4
   2255c:	blt	228d0 <main@@Base+0xcb80>
   22560:	ldrb	r0, [r4, #1]
   22564:	mov	r6, r4
   22568:	cmp	r0, #34	; 0x22
   2256c:	bne	228d0 <main@@Base+0xcb80>
   22570:	add	r1, r4, #2
   22574:	sub	r0, r7, r1
   22578:	cmp	r0, #2
   2257c:	blt	2262c <main@@Base+0xc8dc>
   22580:	ldrb	r0, [r1]
   22584:	cmp	r0, #32
   22588:	bls	22618 <main@@Base+0xc8c8>
   2258c:	mov	r6, r1
   22590:	cmp	r6, r7
   22594:	bne	22644 <main@@Base+0xc8f4>
   22598:	b	2267c <main@@Base+0xc92c>
   2259c:	bne	225b0 <main@@Base+0xc860>
   225a0:	mov	r6, r4
   225a4:	ldrb	r0, [r6, #3]!
   225a8:	cmp	r0, #32
   225ac:	bhi	225c0 <main@@Base+0xc870>
   225b0:	mov	r0, r5
   225b4:	mov	r2, r7
   225b8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   225bc:	mov	r6, r0
   225c0:	cmp	r6, r7
   225c4:	beq	22600 <main@@Base+0xc8b0>
   225c8:	ldrb	r0, [r6]
   225cc:	cmp	r0, #58	; 0x3a
   225d0:	bne	22600 <main@@Base+0xc8b0>
   225d4:	add	r1, r6, #1
   225d8:	sub	r0, r7, r1
   225dc:	cmp	r0, #2
   225e0:	blt	226a4 <main@@Base+0xc954>
   225e4:	ldrb	r0, [r1]
   225e8:	cmp	r0, #32
   225ec:	bls	22694 <main@@Base+0xc944>
   225f0:	mov	r6, r1
   225f4:	cmp	r4, r6
   225f8:	bne	226bc <main@@Base+0xc96c>
   225fc:	b	22960 <main@@Base+0xcc10>
   22600:	mov	r0, r5
   22604:	mov	r1, r6
   22608:	mov	r2, r7
   2260c:	mov	r3, #4
   22610:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22614:	b	226b0 <main@@Base+0xc960>
   22618:	bne	2262c <main@@Base+0xc8dc>
   2261c:	mov	r6, r4
   22620:	ldrb	r0, [r6, #3]!
   22624:	cmp	r0, #32
   22628:	bhi	2263c <main@@Base+0xc8ec>
   2262c:	mov	r0, r5
   22630:	mov	r2, r7
   22634:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   22638:	mov	r6, r0
   2263c:	cmp	r6, r7
   22640:	beq	2267c <main@@Base+0xc92c>
   22644:	ldrb	r0, [r6]
   22648:	cmp	r0, #58	; 0x3a
   2264c:	bne	2267c <main@@Base+0xc92c>
   22650:	add	r1, r6, #1
   22654:	sub	r0, r7, r1
   22658:	cmp	r0, #2
   2265c:	blt	228c0 <main@@Base+0xcb70>
   22660:	ldrb	r0, [r1]
   22664:	cmp	r0, #32
   22668:	bls	228b0 <main@@Base+0xcb60>
   2266c:	mov	r6, r1
   22670:	cmp	r4, r6
   22674:	bne	228d8 <main@@Base+0xcb88>
   22678:	b	22960 <main@@Base+0xcc10>
   2267c:	mov	r0, r5
   22680:	mov	r1, r6
   22684:	mov	r2, r7
   22688:	mov	r3, #4
   2268c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22690:	b	228cc <main@@Base+0xcb7c>
   22694:	bne	226a4 <main@@Base+0xc954>
   22698:	ldrb	r0, [r6, #2]!
   2269c:	cmp	r0, #32
   226a0:	bhi	226b4 <main@@Base+0xc964>
   226a4:	mov	r0, r5
   226a8:	mov	r2, r7
   226ac:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   226b0:	mov	r6, r0
   226b4:	cmp	r4, r6
   226b8:	beq	22960 <main@@Base+0xcc10>
   226bc:	mov	r4, #0
   226c0:	cmp	r6, r7
   226c4:	str	r4, [sp, #20]
   226c8:	str	r4, [sp, #16]
   226cc:	strb	r4, [sp, #10]
   226d0:	str	r4, [sp, #12]
   226d4:	beq	22740 <main@@Base+0xc9f0>
   226d8:	add	r0, sp, #16
   226dc:	mov	r1, r6
   226e0:	mov	r2, r7
   226e4:	add	r3, sp, #12
   226e8:	str	r0, [sp]
   226ec:	mov	r0, r5
   226f0:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   226f4:	cmp	r0, r6
   226f8:	beq	22804 <main@@Base+0xcab4>
   226fc:	ldr	r3, [sp, #12]
   22700:	mov	r1, r0
   22704:	ldr	r0, [sp, #16]
   22708:	ldr	r2, [sp, #20]
   2270c:	cmp	r3, #0
   22710:	beq	22814 <main@@Base+0xcac4>
   22714:	subs	r3, r0, #129	; 0x81
   22718:	sbcs	r2, r2, #0
   2271c:	bcc	22840 <main@@Base+0xcaf0>
   22720:	mov	r0, r5
   22724:	mov	r2, r7
   22728:	mov	r3, #8
   2272c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22730:	mov	r1, r0
   22734:	cmp	r6, r1
   22738:	bne	2274c <main@@Base+0xc9fc>
   2273c:	b	22864 <main@@Base+0xcb14>
   22740:	mov	r1, r7
   22744:	cmp	r6, r1
   22748:	beq	22864 <main@@Base+0xcb14>
   2274c:	strb	r4, [sl, #2]
   22750:	sub	r0, r7, r1
   22754:	cmp	r0, #2
   22758:	blt	22980 <main@@Base+0xcc30>
   2275c:	ldrb	r0, [r1]
   22760:	cmp	r0, #32
   22764:	bls	227b8 <main@@Base+0xca68>
   22768:	mov	r2, r1
   2276c:	cmp	r2, r7
   22770:	beq	22a70 <main@@Base+0xcd20>
   22774:	ldrb	r0, [r2]
   22778:	cmp	r0, #44	; 0x2c
   2277c:	bne	22a80 <main@@Base+0xcd30>
   22780:	add	r1, r2, #1
   22784:	sub	r0, r7, r1
   22788:	cmp	r0, #2
   2278c:	blt	227e8 <main@@Base+0xca98>
   22790:	ldrb	r0, [r1]
   22794:	cmp	r0, #32
   22798:	bls	227d8 <main@@Base+0xca88>
   2279c:	mov	r2, r1
   227a0:	cmp	r2, r7
   227a4:	beq	22ab4 <main@@Base+0xcd64>
   227a8:	ldrb	r0, [r2]
   227ac:	cmp	r0, #125	; 0x7d
   227b0:	bne	224a0 <main@@Base+0xc750>
   227b4:	b	22ac0 <main@@Base+0xcd70>
   227b8:	bne	22980 <main@@Base+0xcc30>
   227bc:	mov	r2, r1
   227c0:	ldrb	r0, [r2, #1]!
   227c4:	cmp	r0, #32
   227c8:	bls	22980 <main@@Base+0xcc30>
   227cc:	cmp	r2, r7
   227d0:	bne	22774 <main@@Base+0xca24>
   227d4:	b	22a70 <main@@Base+0xcd20>
   227d8:	bne	227e8 <main@@Base+0xca98>
   227dc:	ldrb	r0, [r2, #2]!
   227e0:	cmp	r0, #32
   227e4:	bhi	227f8 <main@@Base+0xcaa8>
   227e8:	mov	r0, r5
   227ec:	mov	r2, r7
   227f0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   227f4:	mov	r2, r0
   227f8:	cmp	r2, r7
   227fc:	bne	227a8 <main@@Base+0xca58>
   22800:	b	22ab4 <main@@Base+0xcd64>
   22804:	mov	r1, r6
   22808:	cmp	r6, r1
   2280c:	bne	2274c <main@@Base+0xc9fc>
   22810:	b	22864 <main@@Base+0xcb14>
   22814:	subs	r3, r0, #128	; 0x80
   22818:	sbcs	r2, r2, #0
   2281c:	bcc	22854 <main@@Base+0xcb04>
   22820:	mov	r0, r5
   22824:	mov	r2, r7
   22828:	mov	r3, #7
   2282c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22830:	mov	r1, r0
   22834:	cmp	r6, r1
   22838:	bne	2274c <main@@Base+0xc9fc>
   2283c:	b	22864 <main@@Base+0xcb14>
   22840:	rsb	r4, r0, #0
   22844:	strb	r4, [sp, #10]
   22848:	cmp	r6, r1
   2284c:	bne	2274c <main@@Base+0xc9fc>
   22850:	b	22864 <main@@Base+0xcb14>
   22854:	mov	r4, r0
   22858:	strb	r4, [sp, #10]
   2285c:	cmp	r6, r1
   22860:	bne	2274c <main@@Base+0xc9fc>
   22864:	add	r0, sp, #10
   22868:	mov	r1, r6
   2286c:	mov	r2, r7
   22870:	str	r0, [sp]
   22874:	movw	r0, #53636	; 0xd184
   22878:	movt	r0, #5
   2287c:	add	r3, r0, #48	; 0x30
   22880:	mov	r0, r5
   22884:	bl	21d78 <main@@Base+0xc028>
   22888:	mov	r1, r0
   2288c:	cmp	r0, r6
   22890:	cmpne	r1, r7
   22894:	beq	22a60 <main@@Base+0xcd10>
   22898:	ldrb	r4, [sp, #10]
   2289c:	strb	r4, [sl, #2]
   228a0:	sub	r0, r7, r1
   228a4:	cmp	r0, #2
   228a8:	blt	22980 <main@@Base+0xcc30>
   228ac:	b	2275c <main@@Base+0xca0c>
   228b0:	bne	228c0 <main@@Base+0xcb70>
   228b4:	ldrb	r0, [r6, #2]!
   228b8:	cmp	r0, #32
   228bc:	bhi	228d0 <main@@Base+0xcb80>
   228c0:	mov	r0, r5
   228c4:	mov	r2, r7
   228c8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   228cc:	mov	r6, r0
   228d0:	cmp	r4, r6
   228d4:	beq	22960 <main@@Base+0xcc10>
   228d8:	mov	r4, #0
   228dc:	cmp	r6, r7
   228e0:	str	r4, [sp, #20]
   228e4:	str	r4, [sp, #16]
   228e8:	strh	r4, [sp, #10]
   228ec:	str	r4, [sp, #12]
   228f0:	beq	2299c <main@@Base+0xcc4c>
   228f4:	add	r0, sp, #16
   228f8:	mov	r1, r6
   228fc:	mov	r2, r7
   22900:	add	r3, sp, #12
   22904:	str	r0, [sp]
   22908:	mov	r0, r5
   2290c:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   22910:	cmp	r0, r6
   22914:	beq	229bc <main@@Base+0xcc6c>
   22918:	ldr	r3, [sp, #12]
   2291c:	mov	r1, r0
   22920:	ldr	r0, [sp, #16]
   22924:	ldr	r2, [sp, #20]
   22928:	cmp	r3, #0
   2292c:	beq	22a0c <main@@Base+0xccbc>
   22930:	movw	r3, #32769	; 0x8001
   22934:	subs	r3, r0, r3
   22938:	sbcs	r2, r2, #0
   2293c:	bcc	22a38 <main@@Base+0xcce8>
   22940:	mov	r0, r5
   22944:	mov	r2, r7
   22948:	mov	r3, #8
   2294c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22950:	mov	r1, r0
   22954:	cmp	r6, r1
   22958:	bne	229a8 <main@@Base+0xcc58>
   2295c:	b	229c8 <main@@Base+0xcc78>
   22960:	mov	r0, r5
   22964:	mov	r1, r4
   22968:	mov	r2, r7
   2296c:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   22970:	mov	r1, r0
   22974:	sub	r0, r7, r1
   22978:	cmp	r0, #2
   2297c:	bge	2275c <main@@Base+0xca0c>
   22980:	mov	r0, r5
   22984:	mov	r2, r7
   22988:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2298c:	mov	r2, r0
   22990:	cmp	r2, r7
   22994:	bne	22774 <main@@Base+0xca24>
   22998:	b	22a70 <main@@Base+0xcd20>
   2299c:	mov	r1, r7
   229a0:	cmp	r6, r1
   229a4:	beq	229c8 <main@@Base+0xcc78>
   229a8:	strh	r4, [sl]
   229ac:	sub	r0, r7, r1
   229b0:	cmp	r0, #2
   229b4:	bge	2275c <main@@Base+0xca0c>
   229b8:	b	22980 <main@@Base+0xcc30>
   229bc:	mov	r1, r6
   229c0:	cmp	r6, r1
   229c4:	bne	229a8 <main@@Base+0xcc58>
   229c8:	add	r0, sp, #10
   229cc:	mov	r1, r6
   229d0:	mov	r2, r7
   229d4:	mov	r3, r9
   229d8:	str	r0, [sp]
   229dc:	mov	r0, r5
   229e0:	bl	22194 <main@@Base+0xc444>
   229e4:	mov	r1, r0
   229e8:	cmp	r0, r6
   229ec:	cmpne	r1, r7
   229f0:	beq	22a60 <main@@Base+0xcd10>
   229f4:	ldrh	r4, [sp, #10]
   229f8:	strh	r4, [sl]
   229fc:	sub	r0, r7, r1
   22a00:	cmp	r0, #2
   22a04:	bge	2275c <main@@Base+0xca0c>
   22a08:	b	22980 <main@@Base+0xcc30>
   22a0c:	subs	r3, r0, #32768	; 0x8000
   22a10:	sbcs	r2, r2, #0
   22a14:	bcc	22a4c <main@@Base+0xccfc>
   22a18:	mov	r0, r5
   22a1c:	mov	r2, r7
   22a20:	mov	r3, #7
   22a24:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22a28:	mov	r1, r0
   22a2c:	cmp	r6, r1
   22a30:	bne	229a8 <main@@Base+0xcc58>
   22a34:	b	229c8 <main@@Base+0xcc78>
   22a38:	rsb	r4, r0, #0
   22a3c:	strh	r4, [sp, #10]
   22a40:	cmp	r6, r1
   22a44:	bne	229a8 <main@@Base+0xcc58>
   22a48:	b	229c8 <main@@Base+0xcc78>
   22a4c:	mov	r4, r0
   22a50:	strh	r4, [sp, #10]
   22a54:	cmp	r6, r1
   22a58:	bne	229a8 <main@@Base+0xcc58>
   22a5c:	b	229c8 <main@@Base+0xcc78>
   22a60:	mov	r0, r5
   22a64:	mov	r2, r7
   22a68:	mov	r3, #33	; 0x21
   22a6c:	b	22b24 <main@@Base+0xcdd4>
   22a70:	mov	r1, r7
   22a74:	mov	r0, r1
   22a78:	sub	sp, fp, #28
   22a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22a80:	cmp	r0, #125	; 0x7d
   22a84:	bne	22b14 <main@@Base+0xcdc4>
   22a88:	add	r3, r2, #1
   22a8c:	sub	r0, r7, r3
   22a90:	cmp	r0, #2
   22a94:	blt	22b40 <main@@Base+0xcdf0>
   22a98:	ldrb	r0, [r3]
   22a9c:	cmp	r0, #32
   22aa0:	bls	22b2c <main@@Base+0xcddc>
   22aa4:	mov	r1, r3
   22aa8:	mov	r0, r1
   22aac:	sub	sp, fp, #28
   22ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22ab4:	mov	r0, r5
   22ab8:	mov	r1, r7
   22abc:	b	22b1c <main@@Base+0xcdcc>
   22ac0:	add	r3, r2, #1
   22ac4:	sub	r0, r7, r3
   22ac8:	cmp	r0, #2
   22acc:	blt	22b40 <main@@Base+0xcdf0>
   22ad0:	ldrb	r0, [r3]
   22ad4:	cmp	r0, #32
   22ad8:	bls	22b2c <main@@Base+0xcddc>
   22adc:	mov	r1, r3
   22ae0:	mov	r0, r1
   22ae4:	sub	sp, fp, #28
   22ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22aec:	bne	22afc <main@@Base+0xcdac>
   22af0:	ldrb	r0, [r1, #2]!
   22af4:	cmp	r0, #32
   22af8:	bhi	22b54 <main@@Base+0xce04>
   22afc:	mov	r1, r2
   22b00:	mov	r0, r5
   22b04:	mov	r2, r7
   22b08:	sub	sp, fp, #28
   22b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b10:	b	345fc <flatcc_json_parser_space_ext@@Base>
   22b14:	mov	r0, r5
   22b18:	mov	r1, r2
   22b1c:	mov	r2, r7
   22b20:	mov	r3, #10
   22b24:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22b28:	b	22b50 <main@@Base+0xce00>
   22b2c:	bne	22b40 <main@@Base+0xcdf0>
   22b30:	ldrb	r0, [r2, #2]!
   22b34:	mov	r1, r2
   22b38:	cmp	r0, #32
   22b3c:	bhi	22b54 <main@@Base+0xce04>
   22b40:	mov	r0, r5
   22b44:	mov	r1, r3
   22b48:	mov	r2, r7
   22b4c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   22b50:	mov	r1, r0
   22b54:	mov	r0, r1
   22b58:	sub	sp, fp, #28
   22b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b64:	add	fp, sp, #28
   22b68:	sub	sp, sp, #36	; 0x24
   22b6c:	ldr	r5, [fp, #8]
   22b70:	mov	r8, r0
   22b74:	mov	r0, #0
   22b78:	mov	sl, r2
   22b7c:	mov	r4, r1
   22b80:	cmp	r3, #4
   22b84:	str	r0, [r5]
   22b88:	bhi	22bec <main@@Base+0xce9c>
   22b8c:	add	r0, pc, #0
   22b90:	ldr	pc, [r0, r3, lsl #2]
   22b94:	andeq	r2, r2, r8, lsr #23
   22b98:	andeq	r2, r2, r4, lsl ip
   22b9c:	andeq	r2, r2, ip, lsr #24
   22ba0:	andeq	r2, r2, ip, lsl #25
   22ba4:	andeq	r2, r2, ip, ror #25
   22ba8:	sub	r0, sl, r4
   22bac:	cmp	r0, #4
   22bb0:	blt	22bd0 <main@@Base+0xce80>
   22bb4:	movw	r1, #46670	; 0xb64e
   22bb8:	mov	r0, r4
   22bbc:	mov	r2, #4
   22bc0:	movt	r1, #4
   22bc4:	bl	14ebc <bcmp@plt>
   22bc8:	cmp	r0, #0
   22bcc:	beq	22da0 <main@@Base+0xd050>
   22bd0:	mov	r0, r8
   22bd4:	mov	r1, r4
   22bd8:	mov	r2, sl
   22bdc:	mov	r3, #26
   22be0:	sub	sp, fp, #28
   22be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22be8:	b	3454c <flatcc_json_parser_set_error@@Base>
   22bec:	ldrb	r0, [r8, #8]
   22bf0:	tst	r0, #1
   22bf4:	bne	22d88 <main@@Base+0xd038>
   22bf8:	mov	r0, r8
   22bfc:	mov	r1, r4
   22c00:	mov	r2, sl
   22c04:	mov	r3, #15
   22c08:	sub	sp, fp, #28
   22c0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22c10:	b	3454c <flatcc_json_parser_set_error@@Base>
   22c14:	mov	r0, r8
   22c18:	mov	r1, r4
   22c1c:	mov	r2, sl
   22c20:	mov	r3, r5
   22c24:	bl	16600 <main@@Base+0x8b0>
   22c28:	b	22d3c <main@@Base+0xcfec>
   22c2c:	mov	r0, #0
   22c30:	mov	r1, #4
   22c34:	str	r0, [r5]
   22c38:	ldr	r0, [r8]
   22c3c:	bl	2fa58 <flatcc_builder_start_table@@Base>
   22c40:	cmp	r0, #0
   22c44:	bne	22d28 <main@@Base+0xcfd8>
   22c48:	cmp	r4, sl
   22c4c:	beq	22d04 <main@@Base+0xcfb4>
   22c50:	ldrb	r0, [r4]
   22c54:	cmp	r0, #123	; 0x7b
   22c58:	bne	22d04 <main@@Base+0xcfb4>
   22c5c:	add	r1, r4, #1
   22c60:	sub	r0, sl, r1
   22c64:	cmp	r0, #2
   22c68:	blt	22dc0 <main@@Base+0xd070>
   22c6c:	ldrb	r0, [r1]
   22c70:	cmp	r0, #32
   22c74:	bls	22db0 <main@@Base+0xd060>
   22c78:	mov	r4, r1
   22c7c:	cmp	r4, sl
   22c80:	mov	r2, sl
   22c84:	bne	22ddc <main@@Base+0xd08c>
   22c88:	b	22e0c <main@@Base+0xd0bc>
   22c8c:	mov	r0, #0
   22c90:	mov	r1, #0
   22c94:	str	r0, [r5]
   22c98:	ldr	r0, [r8]
   22c9c:	bl	2fa58 <flatcc_builder_start_table@@Base>
   22ca0:	cmp	r0, #0
   22ca4:	bne	22d28 <main@@Base+0xcfd8>
   22ca8:	cmp	r4, sl
   22cac:	beq	22d04 <main@@Base+0xcfb4>
   22cb0:	ldrb	r0, [r4]
   22cb4:	cmp	r0, #123	; 0x7b
   22cb8:	bne	22d04 <main@@Base+0xcfb4>
   22cbc:	add	r1, r4, #1
   22cc0:	sub	r0, sl, r1
   22cc4:	cmp	r0, #2
   22cc8:	blt	23974 <main@@Base+0xdc24>
   22ccc:	ldrb	r0, [r1]
   22cd0:	cmp	r0, #32
   22cd4:	bls	23964 <main@@Base+0xdc14>
   22cd8:	mov	r4, r1
   22cdc:	cmp	r4, sl
   22ce0:	mov	r3, sl
   22ce4:	bne	23990 <main@@Base+0xdc40>
   22ce8:	b	239d0 <main@@Base+0xdc80>
   22cec:	mov	r0, r8
   22cf0:	mov	r1, r4
   22cf4:	mov	r2, sl
   22cf8:	mov	r3, r5
   22cfc:	bl	2577c <main@@Base+0xfa2c>
   22d00:	b	22d3c <main@@Base+0xcfec>
   22d04:	mov	r0, r8
   22d08:	mov	r1, r4
   22d0c:	mov	r2, sl
   22d10:	mov	r3, #21
   22d14:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22d18:	mov	r4, r0
   22d1c:	ldr	r0, [r8, #20]
   22d20:	cmp	r0, #0
   22d24:	beq	23b78 <main@@Base+0xde28>
   22d28:	mov	r0, r8
   22d2c:	mov	r1, r4
   22d30:	mov	r2, sl
   22d34:	mov	r3, #33	; 0x21
   22d38:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22d3c:	mov	r4, r0
   22d40:	ldr	r0, [r8, #20]
   22d44:	cmp	r0, #0
   22d48:	bne	22d58 <main@@Base+0xd008>
   22d4c:	ldr	r0, [r5]
   22d50:	cmp	r0, #0
   22d54:	beq	22d64 <main@@Base+0xd014>
   22d58:	mov	r0, r4
   22d5c:	sub	sp, fp, #28
   22d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d64:	mov	r0, r8
   22d68:	mov	r1, r4
   22d6c:	mov	r2, sl
   22d70:	mov	r3, #33	; 0x21
   22d74:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22d78:	mov	r4, r0
   22d7c:	mov	r0, r4
   22d80:	sub	sp, fp, #28
   22d84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d88:	mov	r0, r8
   22d8c:	mov	r1, r4
   22d90:	mov	r2, sl
   22d94:	sub	sp, fp, #28
   22d98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22d9c:	b	34f78 <flatcc_json_parser_generic_json@@Base>
   22da0:	add	r4, r4, #4
   22da4:	mov	r0, r4
   22da8:	sub	sp, fp, #28
   22dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22db0:	bne	22dc0 <main@@Base+0xd070>
   22db4:	ldrb	r0, [r4, #2]!
   22db8:	cmp	r0, #32
   22dbc:	bhi	22dd0 <main@@Base+0xd080>
   22dc0:	mov	r0, r8
   22dc4:	mov	r2, sl
   22dc8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   22dcc:	mov	r4, r0
   22dd0:	cmp	r4, sl
   22dd4:	mov	r2, sl
   22dd8:	beq	22e0c <main@@Base+0xd0bc>
   22ddc:	ldrb	r0, [r4]
   22de0:	cmp	r0, #125	; 0x7d
   22de4:	bne	22e08 <main@@Base+0xd0b8>
   22de8:	add	r1, r4, #1
   22dec:	sub	r0, sl, r1
   22df0:	cmp	r0, #2
   22df4:	blt	23bb8 <main@@Base+0xde68>
   22df8:	ldrb	r0, [r1]
   22dfc:	cmp	r0, #32
   22e00:	bls	239b8 <main@@Base+0xdc68>
   22e04:	b	23b68 <main@@Base+0xde18>
   22e08:	mov	r2, r4
   22e0c:	movw	r0, #53876	; 0xd274
   22e10:	movt	r0, #5
   22e14:	add	r0, r0, #96	; 0x60
   22e18:	str	r0, [sp, #12]
   22e1c:	movw	r0, #53636	; 0xd184
   22e20:	movt	r0, #5
   22e24:	add	r0, r0, #72	; 0x48
   22e28:	str	r0, [sp, #8]
   22e2c:	cmp	r2, sl
   22e30:	mov	r9, sl
   22e34:	beq	22e64 <main@@Base+0xd114>
   22e38:	ldrb	r0, [r2]
   22e3c:	cmp	r0, #34	; 0x22
   22e40:	bne	22e4c <main@@Base+0xd0fc>
   22e44:	add	r9, r2, #1
   22e48:	b	22e64 <main@@Base+0xd114>
   22e4c:	mov	r1, r2
   22e50:	mov	r0, r8
   22e54:	mov	r2, sl
   22e58:	mov	r3, #5
   22e5c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   22e60:	mov	r9, r0
   22e64:	sub	lr, sl, r9
   22e68:	mov	r0, #8
   22e6c:	cmp	lr, #8
   22e70:	movcc	r0, lr
   22e74:	sub	r2, r0, #1
   22e78:	cmp	r2, #7
   22e7c:	bhi	23790 <main@@Base+0xda40>
   22e80:	mov	ip, r5
   22e84:	add	r5, pc, #24
   22e88:	mov	r0, #0
   22e8c:	mov	r1, #0
   22e90:	mov	r3, #0
   22e94:	mov	r7, #0
   22e98:	mov	r6, #0
   22e9c:	mov	r4, #0
   22ea0:	ldr	pc, [r5, r2, lsl #2]
   22ea4:	strdeq	r2, [r2], -r4
   22ea8:	andeq	r2, r2, ip, ror #29
   22eac:	andeq	r2, r2, r4, ror #29
   22eb0:	ldrdeq	r2, [r2], -ip
   22eb4:	andeq	r2, r2, ip, asr #29
   22eb8:	andeq	r2, r2, r4, asr #29
   22ebc:	andeq	r2, r2, r4, asr #29
   22ec0:	andeq	r2, r2, r4, asr #29
   22ec4:	ldrb	r1, [r9, #5]
   22ec8:	lsl	r1, r1, #16
   22ecc:	ldrb	r2, [r9, #4]
   22ed0:	mov	r3, r0
   22ed4:	orr	r1, r1, r2, lsl #24
   22ed8:	mov	r0, r1
   22edc:	ldrb	r1, [r9, #3]
   22ee0:	orr	r7, r1, r3
   22ee4:	ldrb	r1, [r9, #2]
   22ee8:	orr	r6, r7, r1, lsl #8
   22eec:	ldrb	r1, [r9, #1]
   22ef0:	orr	r4, r6, r1, lsl #16
   22ef4:	ldrb	r1, [r9]
   22ef8:	movw	r3, #29234	; 0x7232
   22efc:	lsr	r2, r0, #16
   22f00:	movt	r3, #27759	; 0x6c6f
   22f04:	orr	r7, r4, r1, lsl #24
   22f08:	movw	r1, #25455	; 0x636f
   22f0c:	orr	r2, r2, r7, lsl #16
   22f10:	eor	r1, r1, r7, lsr #16
   22f14:	eor	r2, r2, r3
   22f18:	orrs	r1, r2, r1
   22f1c:	bne	22f6c <main@@Base+0xd21c>
   22f20:	cmp	lr, #7
   22f24:	mov	r6, r9
   22f28:	mov	r5, ip
   22f2c:	blt	2310c <main@@Base+0xd3bc>
   22f30:	ldrb	r0, [r9, #6]
   22f34:	mov	r6, r9
   22f38:	cmp	r0, #34	; 0x22
   22f3c:	bne	2310c <main@@Base+0xd3bc>
   22f40:	add	r1, r9, #7
   22f44:	sub	r0, sl, r1
   22f48:	cmp	r0, #2
   22f4c:	blt	22fe8 <main@@Base+0xd298>
   22f50:	ldrb	r0, [r1]
   22f54:	cmp	r0, #32
   22f58:	bls	22fd4 <main@@Base+0xd284>
   22f5c:	mov	r6, r1
   22f60:	cmp	r6, sl
   22f64:	bne	23008 <main@@Base+0xd2b8>
   22f68:	b	23040 <main@@Base+0xd2f0>
   22f6c:	movw	r1, #27759	; 0x6c6f
   22f70:	and	r0, r0, #-16777216	; 0xff000000
   22f74:	mov	r5, ip
   22f78:	movt	r1, #25455	; 0x636f
   22f7c:	eor	r0, r0, #1912602624	; 0x72000000
   22f80:	eor	r1, r7, r1
   22f84:	orrs	r0, r0, r1
   22f88:	bne	232fc <main@@Base+0xd5ac>
   22f8c:	cmp	lr, #6
   22f90:	mov	r6, r9
   22f94:	blt	2327c <main@@Base+0xd52c>
   22f98:	ldrb	r0, [r9, #5]
   22f9c:	mov	r6, r9
   22fa0:	cmp	r0, #34	; 0x22
   22fa4:	bne	2327c <main@@Base+0xd52c>
   22fa8:	add	r1, r9, #6
   22fac:	sub	r0, sl, r1
   22fb0:	cmp	r0, #2
   22fb4:	blt	23070 <main@@Base+0xd320>
   22fb8:	ldrb	r0, [r1]
   22fbc:	cmp	r0, #32
   22fc0:	bls	2305c <main@@Base+0xd30c>
   22fc4:	mov	r6, r1
   22fc8:	cmp	r6, sl
   22fcc:	bne	23090 <main@@Base+0xd340>
   22fd0:	b	230c8 <main@@Base+0xd378>
   22fd4:	bne	22fe8 <main@@Base+0xd298>
   22fd8:	mov	r6, r9
   22fdc:	ldrb	r0, [r6, #8]!
   22fe0:	cmp	r0, #32
   22fe4:	bhi	23000 <main@@Base+0xd2b0>
   22fe8:	mov	r0, r8
   22fec:	mov	r2, sl
   22ff0:	mov	r4, lr
   22ff4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   22ff8:	mov	lr, r4
   22ffc:	mov	r6, r0
   23000:	cmp	r6, sl
   23004:	beq	23040 <main@@Base+0xd2f0>
   23008:	ldrb	r0, [r6]
   2300c:	cmp	r0, #58	; 0x3a
   23010:	bne	23040 <main@@Base+0xd2f0>
   23014:	add	r1, r6, #1
   23018:	sub	r0, sl, r1
   2301c:	cmp	r0, #2
   23020:	blt	230f4 <main@@Base+0xd3a4>
   23024:	ldrb	r0, [r1]
   23028:	cmp	r0, #32
   2302c:	bls	230e4 <main@@Base+0xd394>
   23030:	mov	r6, r1
   23034:	cmp	r9, r6
   23038:	bne	23114 <main@@Base+0xd3c4>
   2303c:	b	232fc <main@@Base+0xd5ac>
   23040:	mov	r0, r8
   23044:	mov	r1, r6
   23048:	mov	r2, sl
   2304c:	mov	r3, #4
   23050:	mov	r4, lr
   23054:	bl	3454c <flatcc_json_parser_set_error@@Base>
   23058:	b	23104 <main@@Base+0xd3b4>
   2305c:	bne	23070 <main@@Base+0xd320>
   23060:	mov	r6, r9
   23064:	ldrb	r0, [r6, #7]!
   23068:	cmp	r0, #32
   2306c:	bhi	23088 <main@@Base+0xd338>
   23070:	mov	r0, r8
   23074:	mov	r2, sl
   23078:	mov	r4, lr
   2307c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   23080:	mov	lr, r4
   23084:	mov	r6, r0
   23088:	cmp	r6, sl
   2308c:	beq	230c8 <main@@Base+0xd378>
   23090:	ldrb	r0, [r6]
   23094:	cmp	r0, #58	; 0x3a
   23098:	bne	230c8 <main@@Base+0xd378>
   2309c:	add	r1, r6, #1
   230a0:	sub	r0, sl, r1
   230a4:	cmp	r0, #2
   230a8:	blt	23264 <main@@Base+0xd514>
   230ac:	ldrb	r0, [r1]
   230b0:	cmp	r0, #32
   230b4:	bls	23254 <main@@Base+0xd504>
   230b8:	mov	r6, r1
   230bc:	cmp	r9, r6
   230c0:	bne	23284 <main@@Base+0xd534>
   230c4:	b	232fc <main@@Base+0xd5ac>
   230c8:	mov	r0, r8
   230cc:	mov	r1, r6
   230d0:	mov	r2, sl
   230d4:	mov	r3, #4
   230d8:	mov	r4, lr
   230dc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   230e0:	b	23274 <main@@Base+0xd524>
   230e4:	bne	230f4 <main@@Base+0xd3a4>
   230e8:	ldrb	r0, [r6, #2]!
   230ec:	cmp	r0, #32
   230f0:	bhi	2310c <main@@Base+0xd3bc>
   230f4:	mov	r0, r8
   230f8:	mov	r2, sl
   230fc:	mov	r4, lr
   23100:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   23104:	mov	lr, r4
   23108:	mov	r6, r0
   2310c:	cmp	r9, r6
   23110:	beq	232fc <main@@Base+0xd5ac>
   23114:	mov	r7, #0
   23118:	cmp	r6, sl
   2311c:	str	r7, [sp, #28]
   23120:	str	r7, [sp, #24]
   23124:	strb	r7, [sp, #19]
   23128:	str	r7, [sp, #20]
   2312c:	beq	2318c <main@@Base+0xd43c>
   23130:	add	r0, sp, #24
   23134:	mov	r1, r6
   23138:	mov	r2, sl
   2313c:	add	r3, sp, #20
   23140:	str	r0, [sp]
   23144:	mov	r0, r8
   23148:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   2314c:	cmp	r0, r6
   23150:	beq	2319c <main@@Base+0xd44c>
   23154:	ldr	r2, [sp, #20]
   23158:	mov	r4, r0
   2315c:	ldr	r0, [sp, #24]
   23160:	ldr	r1, [sp, #28]
   23164:	cmp	r2, #0
   23168:	beq	231ac <main@@Base+0xd45c>
   2316c:	subs	r2, r0, #129	; 0x81
   23170:	sbcs	r1, r1, #0
   23174:	bcc	231dc <main@@Base+0xd48c>
   23178:	mov	r0, r8
   2317c:	mov	r1, r4
   23180:	mov	r2, sl
   23184:	mov	r3, #8
   23188:	b	231c8 <main@@Base+0xd478>
   2318c:	mov	r4, sl
   23190:	cmp	r6, r4
   23194:	bne	23230 <main@@Base+0xd4e0>
   23198:	b	23200 <main@@Base+0xd4b0>
   2319c:	mov	r4, r6
   231a0:	cmp	r6, r4
   231a4:	bne	23230 <main@@Base+0xd4e0>
   231a8:	b	23200 <main@@Base+0xd4b0>
   231ac:	subs	r2, r0, #128	; 0x80
   231b0:	sbcs	r1, r1, #0
   231b4:	bcc	231f0 <main@@Base+0xd4a0>
   231b8:	mov	r0, r8
   231bc:	mov	r1, r4
   231c0:	mov	r2, sl
   231c4:	mov	r3, #7
   231c8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   231cc:	mov	r4, r0
   231d0:	cmp	r6, r4
   231d4:	bne	23230 <main@@Base+0xd4e0>
   231d8:	b	23200 <main@@Base+0xd4b0>
   231dc:	rsb	r7, r0, #0
   231e0:	strb	r7, [sp, #19]
   231e4:	cmp	r6, r4
   231e8:	bne	23230 <main@@Base+0xd4e0>
   231ec:	b	23200 <main@@Base+0xd4b0>
   231f0:	mov	r7, r0
   231f4:	strb	r7, [sp, #19]
   231f8:	cmp	r6, r4
   231fc:	bne	23230 <main@@Base+0xd4e0>
   23200:	add	r0, sp, #19
   23204:	mov	r1, r6
   23208:	mov	r2, sl
   2320c:	str	r0, [sp]
   23210:	mov	r0, r8
   23214:	ldr	r3, [sp, #12]
   23218:	bl	21d78 <main@@Base+0xc028>
   2321c:	mov	r4, r0
   23220:	cmp	r0, r6
   23224:	cmpne	r4, sl
   23228:	beq	22d28 <main@@Base+0xcfd8>
   2322c:	ldrb	r7, [sp, #19]
   23230:	uxtb	r0, r7
   23234:	cmp	r0, #2
   23238:	bne	23248 <main@@Base+0xd4f8>
   2323c:	ldrb	r0, [r8, #8]
   23240:	tst	r0, #2
   23244:	beq	237a4 <main@@Base+0xda54>
   23248:	ldr	r0, [r8]
   2324c:	mov	r1, #1
   23250:	b	234f8 <main@@Base+0xd7a8>
   23254:	bne	23264 <main@@Base+0xd514>
   23258:	ldrb	r0, [r6, #2]!
   2325c:	cmp	r0, #32
   23260:	bhi	2327c <main@@Base+0xd52c>
   23264:	mov	r0, r8
   23268:	mov	r2, sl
   2326c:	mov	r4, lr
   23270:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   23274:	mov	lr, r4
   23278:	mov	r6, r0
   2327c:	cmp	r9, r6
   23280:	beq	232fc <main@@Base+0xd5ac>
   23284:	mov	r7, #0
   23288:	cmp	r6, sl
   2328c:	str	r7, [sp, #28]
   23290:	str	r7, [sp, #24]
   23294:	strb	r7, [sp, #19]
   23298:	str	r7, [sp, #20]
   2329c:	beq	233b4 <main@@Base+0xd664>
   232a0:	add	r0, sp, #24
   232a4:	mov	r1, r6
   232a8:	mov	r2, sl
   232ac:	add	r3, sp, #20
   232b0:	str	r0, [sp]
   232b4:	mov	r0, r8
   232b8:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   232bc:	cmp	r0, r6
   232c0:	beq	233c4 <main@@Base+0xd674>
   232c4:	ldr	r2, [sp, #20]
   232c8:	mov	r4, r0
   232cc:	ldr	r0, [sp, #24]
   232d0:	ldr	r1, [sp, #28]
   232d4:	cmp	r2, #0
   232d8:	beq	233d4 <main@@Base+0xd684>
   232dc:	subs	r2, r0, #129	; 0x81
   232e0:	sbcs	r1, r1, #0
   232e4:	bcc	23404 <main@@Base+0xd6b4>
   232e8:	mov	r0, r8
   232ec:	mov	r1, r4
   232f0:	mov	r2, sl
   232f4:	mov	r3, #8
   232f8:	b	233f0 <main@@Base+0xd6a0>
   232fc:	movw	r1, #12800	; 0x3200
   23300:	bic	r0, r7, #255	; 0xff
   23304:	movt	r1, #30051	; 0x7563
   23308:	teq	r0, r1
   2330c:	bne	23358 <main@@Base+0xd608>
   23310:	cmp	lr, #4
   23314:	mov	r7, r9
   23318:	blt	235bc <main@@Base+0xd86c>
   2331c:	ldrb	r0, [r9, #3]
   23320:	mov	r7, r9
   23324:	cmp	r0, #34	; 0x22
   23328:	bne	235bc <main@@Base+0xd86c>
   2332c:	add	r1, r9, #4
   23330:	sub	r0, sl, r1
   23334:	cmp	r0, #2
   23338:	blt	2342c <main@@Base+0xd6dc>
   2333c:	ldrb	r0, [r1]
   23340:	cmp	r0, #32
   23344:	bls	23418 <main@@Base+0xd6c8>
   23348:	mov	r7, r1
   2334c:	cmp	r7, sl
   23350:	bne	23444 <main@@Base+0xd6f4>
   23354:	b	2347c <main@@Base+0xd72c>
   23358:	movw	r0, #0
   2335c:	bfc	r7, #0, #16
   23360:	movt	r0, #30051	; 0x7563
   23364:	teq	r7, r0
   23368:	bne	23790 <main@@Base+0xda40>
   2336c:	cmp	lr, #3
   23370:	mov	r7, r9
   23374:	blt	23714 <main@@Base+0xd9c4>
   23378:	ldrb	r0, [r9, #2]
   2337c:	mov	r7, r9
   23380:	cmp	r0, #34	; 0x22
   23384:	bne	23714 <main@@Base+0xd9c4>
   23388:	add	r1, r9, #3
   2338c:	sub	r0, sl, r1
   23390:	cmp	r0, #2
   23394:	blt	23534 <main@@Base+0xd7e4>
   23398:	ldrb	r0, [r1]
   2339c:	cmp	r0, #32
   233a0:	bls	23520 <main@@Base+0xd7d0>
   233a4:	mov	r7, r1
   233a8:	cmp	r7, sl
   233ac:	bne	2354c <main@@Base+0xd7fc>
   233b0:	b	23584 <main@@Base+0xd834>
   233b4:	mov	r4, sl
   233b8:	cmp	r6, r4
   233bc:	bne	234d8 <main@@Base+0xd788>
   233c0:	b	234a4 <main@@Base+0xd754>
   233c4:	mov	r4, r6
   233c8:	cmp	r6, r4
   233cc:	bne	234d8 <main@@Base+0xd788>
   233d0:	b	234a4 <main@@Base+0xd754>
   233d4:	subs	r2, r0, #128	; 0x80
   233d8:	sbcs	r1, r1, #0
   233dc:	bcc	23494 <main@@Base+0xd744>
   233e0:	mov	r0, r8
   233e4:	mov	r1, r4
   233e8:	mov	r2, sl
   233ec:	mov	r3, #7
   233f0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   233f4:	mov	r4, r0
   233f8:	cmp	r6, r4
   233fc:	bne	234d8 <main@@Base+0xd788>
   23400:	b	234a4 <main@@Base+0xd754>
   23404:	rsb	r7, r0, #0
   23408:	strb	r7, [sp, #19]
   2340c:	cmp	r6, r4
   23410:	bne	234d8 <main@@Base+0xd788>
   23414:	b	234a4 <main@@Base+0xd754>
   23418:	bne	2342c <main@@Base+0xd6dc>
   2341c:	mov	r7, r9
   23420:	ldrb	r0, [r7, #5]!
   23424:	cmp	r0, #32
   23428:	bhi	2343c <main@@Base+0xd6ec>
   2342c:	mov	r0, r8
   23430:	mov	r2, sl
   23434:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   23438:	mov	r7, r0
   2343c:	cmp	r7, sl
   23440:	beq	2347c <main@@Base+0xd72c>
   23444:	ldrb	r0, [r7]
   23448:	cmp	r0, #58	; 0x3a
   2344c:	bne	2347c <main@@Base+0xd72c>
   23450:	add	r1, r7, #1
   23454:	sub	r0, sl, r1
   23458:	cmp	r0, #2
   2345c:	blt	235ac <main@@Base+0xd85c>
   23460:	ldrb	r0, [r1]
   23464:	cmp	r0, #32
   23468:	bls	2359c <main@@Base+0xd84c>
   2346c:	mov	r7, r1
   23470:	cmp	r9, r7
   23474:	bne	235c4 <main@@Base+0xd874>
   23478:	b	23790 <main@@Base+0xda40>
   2347c:	mov	r0, r8
   23480:	mov	r1, r7
   23484:	mov	r2, sl
   23488:	mov	r3, #4
   2348c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   23490:	b	235b8 <main@@Base+0xd868>
   23494:	mov	r7, r0
   23498:	strb	r7, [sp, #19]
   2349c:	cmp	r6, r4
   234a0:	bne	234d8 <main@@Base+0xd788>
   234a4:	movw	r3, #53988	; 0xd2e4
   234a8:	add	r0, sp, #19
   234ac:	mov	r1, r6
   234b0:	mov	r2, sl
   234b4:	movt	r3, #5
   234b8:	str	r0, [sp]
   234bc:	mov	r0, r8
   234c0:	bl	21d78 <main@@Base+0xc028>
   234c4:	mov	r4, r0
   234c8:	cmp	r0, r6
   234cc:	cmpne	r4, sl
   234d0:	beq	22d28 <main@@Base+0xcfd8>
   234d4:	ldrb	r7, [sp, #19]
   234d8:	uxtb	r0, r7
   234dc:	cmp	r0, #2
   234e0:	bne	234f0 <main@@Base+0xd7a0>
   234e4:	ldrb	r0, [r8, #8]
   234e8:	tst	r0, #2
   234ec:	beq	237a4 <main@@Base+0xda54>
   234f0:	ldr	r0, [r8]
   234f4:	mov	r1, #0
   234f8:	mov	r2, #1
   234fc:	mov	r3, #1
   23500:	bl	30dac <flatcc_builder_table_add@@Base>
   23504:	cmp	r0, #0
   23508:	beq	22d28 <main@@Base+0xcfd8>
   2350c:	strb	r7, [r0]
   23510:	sub	r0, sl, r4
   23514:	cmp	r0, #2
   23518:	bge	237b0 <main@@Base+0xda60>
   2351c:	b	238c8 <main@@Base+0xdb78>
   23520:	bne	23534 <main@@Base+0xd7e4>
   23524:	mov	r7, r9
   23528:	ldrb	r0, [r7, #4]!
   2352c:	cmp	r0, #32
   23530:	bhi	23544 <main@@Base+0xd7f4>
   23534:	mov	r0, r8
   23538:	mov	r2, sl
   2353c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   23540:	mov	r7, r0
   23544:	cmp	r7, sl
   23548:	beq	23584 <main@@Base+0xd834>
   2354c:	ldrb	r0, [r7]
   23550:	cmp	r0, #58	; 0x3a
   23554:	bne	23584 <main@@Base+0xd834>
   23558:	add	r1, r7, #1
   2355c:	sub	r0, sl, r1
   23560:	cmp	r0, #2
   23564:	blt	23704 <main@@Base+0xd9b4>
   23568:	ldrb	r0, [r1]
   2356c:	cmp	r0, #32
   23570:	bls	236f4 <main@@Base+0xd9a4>
   23574:	mov	r7, r1
   23578:	cmp	r9, r7
   2357c:	bne	2371c <main@@Base+0xd9cc>
   23580:	b	23790 <main@@Base+0xda40>
   23584:	mov	r0, r8
   23588:	mov	r1, r7
   2358c:	mov	r2, sl
   23590:	mov	r3, #4
   23594:	bl	3454c <flatcc_json_parser_set_error@@Base>
   23598:	b	23710 <main@@Base+0xd9c0>
   2359c:	bne	235ac <main@@Base+0xd85c>
   235a0:	ldrb	r0, [r7, #2]!
   235a4:	cmp	r0, #32
   235a8:	bhi	235bc <main@@Base+0xd86c>
   235ac:	mov	r0, r8
   235b0:	mov	r2, sl
   235b4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   235b8:	mov	r7, r0
   235bc:	cmp	r9, r7
   235c0:	beq	23790 <main@@Base+0xda40>
   235c4:	mov	r6, #0
   235c8:	cmp	r7, sl
   235cc:	str	r6, [sp, #28]
   235d0:	str	r6, [sp, #24]
   235d4:	strb	r6, [sp, #19]
   235d8:	str	r6, [sp, #20]
   235dc:	beq	23638 <main@@Base+0xd8e8>
   235e0:	add	r0, sp, #24
   235e4:	mov	r1, r7
   235e8:	mov	r2, sl
   235ec:	add	r3, sp, #20
   235f0:	str	r0, [sp]
   235f4:	mov	r0, r8
   235f8:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   235fc:	cmp	r0, r7
   23600:	beq	23648 <main@@Base+0xd8f8>
   23604:	mov	r4, r0
   23608:	ldr	r0, [sp, #20]
   2360c:	cmp	r0, #0
   23610:	beq	23658 <main@@Base+0xd908>
   23614:	mov	r0, r8
   23618:	mov	r1, r4
   2361c:	mov	r2, sl
   23620:	mov	r3, #8
   23624:	bl	3454c <flatcc_json_parser_set_error@@Base>
   23628:	mov	r4, r0
   2362c:	cmp	r7, r4
   23630:	bne	236d0 <main@@Base+0xd980>
   23634:	b	236a0 <main@@Base+0xd950>
   23638:	mov	r4, sl
   2363c:	cmp	r7, r4
   23640:	bne	236d0 <main@@Base+0xd980>
   23644:	b	236a0 <main@@Base+0xd950>
   23648:	mov	r4, r7
   2364c:	cmp	r7, r4
   23650:	bne	236d0 <main@@Base+0xd980>
   23654:	b	236a0 <main@@Base+0xd950>
   23658:	ldr	r0, [sp, #24]
   2365c:	ldr	r1, [sp, #28]
   23660:	subs	r2, r0, #256	; 0x100
   23664:	sbcs	r1, r1, #0
   23668:	bcc	23690 <main@@Base+0xd940>
   2366c:	mov	r0, r8
   23670:	mov	r1, r4
   23674:	mov	r2, sl
   23678:	mov	r3, #7
   2367c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   23680:	mov	r4, r0
   23684:	cmp	r7, r4
   23688:	bne	236d0 <main@@Base+0xd980>
   2368c:	b	236a0 <main@@Base+0xd950>
   23690:	mov	r6, r0
   23694:	strb	r0, [sp, #19]
   23698:	cmp	r7, r4
   2369c:	bne	236d0 <main@@Base+0xd980>
   236a0:	add	r0, sp, #19
   236a4:	mov	r1, r7
   236a8:	mov	r2, sl
   236ac:	str	r0, [sp]
   236b0:	mov	r0, r8
   236b4:	ldr	r3, [sp, #8]
   236b8:	bl	21f90 <main@@Base+0xc240>
   236bc:	mov	r4, r0
   236c0:	cmp	r0, r7
   236c4:	cmpne	r4, sl
   236c8:	beq	22d28 <main@@Base+0xcfd8>
   236cc:	ldrb	r6, [sp, #19]
   236d0:	uxtb	r0, r6
   236d4:	cmp	r0, #2
   236d8:	bne	236e8 <main@@Base+0xd998>
   236dc:	ldrb	r0, [r8, #8]
   236e0:	tst	r0, #2
   236e4:	beq	237a4 <main@@Base+0xda54>
   236e8:	ldr	r0, [r8]
   236ec:	mov	r1, #3
   236f0:	b	238a4 <main@@Base+0xdb54>
   236f4:	bne	23704 <main@@Base+0xd9b4>
   236f8:	ldrb	r0, [r7, #2]!
   236fc:	cmp	r0, #32
   23700:	bhi	23714 <main@@Base+0xd9c4>
   23704:	mov	r0, r8
   23708:	mov	r2, sl
   2370c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   23710:	mov	r7, r0
   23714:	cmp	r9, r7
   23718:	beq	23790 <main@@Base+0xda40>
   2371c:	mov	r6, #0
   23720:	cmp	r7, sl
   23724:	str	r6, [sp, #28]
   23728:	str	r6, [sp, #24]
   2372c:	strb	r6, [sp, #19]
   23730:	str	r6, [sp, #20]
   23734:	beq	237e4 <main@@Base+0xda94>
   23738:	add	r0, sp, #24
   2373c:	mov	r1, r7
   23740:	mov	r2, sl
   23744:	add	r3, sp, #20
   23748:	str	r0, [sp]
   2374c:	mov	r0, r8
   23750:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   23754:	cmp	r0, r7
   23758:	beq	237f4 <main@@Base+0xdaa4>
   2375c:	mov	r4, r0
   23760:	ldr	r0, [sp, #20]
   23764:	cmp	r0, #0
   23768:	beq	23804 <main@@Base+0xdab4>
   2376c:	mov	r0, r8
   23770:	mov	r1, r4
   23774:	mov	r2, sl
   23778:	mov	r3, #8
   2377c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   23780:	mov	r4, r0
   23784:	cmp	r7, r4
   23788:	bne	23884 <main@@Base+0xdb34>
   2378c:	b	2384c <main@@Base+0xdafc>
   23790:	mov	r0, r8
   23794:	mov	r1, r9
   23798:	mov	r2, sl
   2379c:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   237a0:	mov	r4, r0
   237a4:	sub	r0, sl, r4
   237a8:	cmp	r0, #2
   237ac:	blt	238c8 <main@@Base+0xdb78>
   237b0:	ldrb	r0, [r4]
   237b4:	cmp	r0, #32
   237b8:	bls	237cc <main@@Base+0xda7c>
   237bc:	mov	r2, r4
   237c0:	cmp	r2, sl
   237c4:	bne	238e4 <main@@Base+0xdb94>
   237c8:	b	23ae8 <main@@Base+0xdd98>
   237cc:	bne	238c8 <main@@Base+0xdb78>
   237d0:	mov	r2, r4
   237d4:	ldrb	r0, [r2, #1]!
   237d8:	cmp	r0, #32
   237dc:	bhi	238dc <main@@Base+0xdb8c>
   237e0:	b	238c8 <main@@Base+0xdb78>
   237e4:	mov	r4, sl
   237e8:	cmp	r7, r4
   237ec:	bne	23884 <main@@Base+0xdb34>
   237f0:	b	2384c <main@@Base+0xdafc>
   237f4:	mov	r4, r7
   237f8:	cmp	r7, r4
   237fc:	bne	23884 <main@@Base+0xdb34>
   23800:	b	2384c <main@@Base+0xdafc>
   23804:	ldr	r0, [sp, #24]
   23808:	ldr	r1, [sp, #28]
   2380c:	subs	r2, r0, #256	; 0x100
   23810:	sbcs	r1, r1, #0
   23814:	bcc	2383c <main@@Base+0xdaec>
   23818:	mov	r0, r8
   2381c:	mov	r1, r4
   23820:	mov	r2, sl
   23824:	mov	r3, #7
   23828:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2382c:	mov	r4, r0
   23830:	cmp	r7, r4
   23834:	bne	23884 <main@@Base+0xdb34>
   23838:	b	2384c <main@@Base+0xdafc>
   2383c:	mov	r6, r0
   23840:	strb	r0, [sp, #19]
   23844:	cmp	r7, r4
   23848:	bne	23884 <main@@Base+0xdb34>
   2384c:	add	r0, sp, #19
   23850:	mov	r1, r7
   23854:	mov	r2, sl
   23858:	str	r0, [sp]
   2385c:	movw	r0, #53636	; 0xd184
   23860:	movt	r0, #5
   23864:	add	r3, r0, #84	; 0x54
   23868:	mov	r0, r8
   2386c:	bl	21f90 <main@@Base+0xc240>
   23870:	mov	r4, r0
   23874:	cmp	r0, r7
   23878:	cmpne	r4, sl
   2387c:	beq	22d28 <main@@Base+0xcfd8>
   23880:	ldrb	r6, [sp, #19]
   23884:	uxtb	r0, r6
   23888:	cmp	r0, #2
   2388c:	bne	2389c <main@@Base+0xdb4c>
   23890:	ldrb	r0, [r8, #8]
   23894:	tst	r0, #2
   23898:	beq	237a4 <main@@Base+0xda54>
   2389c:	ldr	r0, [r8]
   238a0:	mov	r1, #2
   238a4:	mov	r2, #1
   238a8:	mov	r3, #1
   238ac:	bl	30dac <flatcc_builder_table_add@@Base>
   238b0:	cmp	r0, #0
   238b4:	beq	22d28 <main@@Base+0xcfd8>
   238b8:	strb	r6, [r0]
   238bc:	sub	r0, sl, r4
   238c0:	cmp	r0, #2
   238c4:	bge	237b0 <main@@Base+0xda60>
   238c8:	mov	r0, r8
   238cc:	mov	r1, r4
   238d0:	mov	r2, sl
   238d4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   238d8:	mov	r2, r0
   238dc:	cmp	r2, sl
   238e0:	beq	23ae8 <main@@Base+0xdd98>
   238e4:	ldrb	r0, [r2]
   238e8:	cmp	r0, #44	; 0x2c
   238ec:	bne	23b44 <main@@Base+0xddf4>
   238f0:	add	r1, r2, #1
   238f4:	sub	r0, sl, r1
   238f8:	cmp	r0, #2
   238fc:	blt	2392c <main@@Base+0xdbdc>
   23900:	ldrb	r0, [r1]
   23904:	cmp	r0, #32
   23908:	bls	2391c <main@@Base+0xdbcc>
   2390c:	mov	r2, r1
   23910:	cmp	r2, sl
   23914:	bne	23944 <main@@Base+0xdbf4>
   23918:	b	23adc <main@@Base+0xdd8c>
   2391c:	bne	2392c <main@@Base+0xdbdc>
   23920:	ldrb	r0, [r2, #2]!
   23924:	cmp	r0, #32
   23928:	bhi	2393c <main@@Base+0xdbec>
   2392c:	mov	r0, r8
   23930:	mov	r2, sl
   23934:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   23938:	mov	r2, r0
   2393c:	cmp	r2, sl
   23940:	beq	23adc <main@@Base+0xdd8c>
   23944:	ldrb	r0, [r2]
   23948:	cmp	r0, #125	; 0x7d
   2394c:	bne	22e2c <main@@Base+0xd0dc>
   23950:	add	r1, r2, #1
   23954:	sub	r0, sl, r1
   23958:	cmp	r0, #2
   2395c:	blt	23bb8 <main@@Base+0xde68>
   23960:	b	23b5c <main@@Base+0xde0c>
   23964:	bne	23974 <main@@Base+0xdc24>
   23968:	ldrb	r0, [r4, #2]!
   2396c:	cmp	r0, #32
   23970:	bhi	23984 <main@@Base+0xdc34>
   23974:	mov	r0, r8
   23978:	mov	r2, sl
   2397c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   23980:	mov	r4, r0
   23984:	cmp	r4, sl
   23988:	mov	r3, sl
   2398c:	beq	239d0 <main@@Base+0xdc80>
   23990:	ldrb	r0, [r4]
   23994:	cmp	r0, #125	; 0x7d
   23998:	bne	239cc <main@@Base+0xdc7c>
   2399c:	add	r1, r4, #1
   239a0:	sub	r0, sl, r1
   239a4:	cmp	r0, #2
   239a8:	blt	23bb8 <main@@Base+0xde68>
   239ac:	ldrb	r0, [r1]
   239b0:	cmp	r0, #32
   239b4:	bhi	23b68 <main@@Base+0xde18>
   239b8:	bne	23bb8 <main@@Base+0xde68>
   239bc:	ldrb	r0, [r4, #2]!
   239c0:	cmp	r0, #32
   239c4:	bhi	22d1c <main@@Base+0xcfcc>
   239c8:	b	23bb8 <main@@Base+0xde68>
   239cc:	mov	r3, r4
   239d0:	cmp	r3, sl
   239d4:	mov	r1, sl
   239d8:	beq	23a08 <main@@Base+0xdcb8>
   239dc:	ldrb	r0, [r3]
   239e0:	cmp	r0, #34	; 0x22
   239e4:	bne	239f0 <main@@Base+0xdca0>
   239e8:	add	r1, r3, #1
   239ec:	b	23a08 <main@@Base+0xdcb8>
   239f0:	mov	r1, r3
   239f4:	mov	r0, r8
   239f8:	mov	r2, sl
   239fc:	mov	r3, #5
   23a00:	bl	3454c <flatcc_json_parser_set_error@@Base>
   23a04:	mov	r1, r0
   23a08:	mov	r0, r8
   23a0c:	mov	r2, sl
   23a10:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   23a14:	mov	r2, r0
   23a18:	sub	r0, sl, r0
   23a1c:	cmp	r0, #2
   23a20:	blt	23a94 <main@@Base+0xdd44>
   23a24:	ldrb	r0, [r2]
   23a28:	cmp	r0, #32
   23a2c:	bls	23a80 <main@@Base+0xdd30>
   23a30:	mov	r3, r2
   23a34:	cmp	r3, sl
   23a38:	beq	23ae8 <main@@Base+0xdd98>
   23a3c:	ldrb	r0, [r3]
   23a40:	cmp	r0, #44	; 0x2c
   23a44:	bne	23afc <main@@Base+0xddac>
   23a48:	add	r1, r3, #1
   23a4c:	sub	r0, sl, r1
   23a50:	cmp	r0, #2
   23a54:	blt	23ac4 <main@@Base+0xdd74>
   23a58:	ldrb	r0, [r1]
   23a5c:	cmp	r0, #32
   23a60:	bls	23ab4 <main@@Base+0xdd64>
   23a64:	mov	r3, r1
   23a68:	cmp	r3, sl
   23a6c:	beq	23adc <main@@Base+0xdd8c>
   23a70:	ldrb	r0, [r3]
   23a74:	cmp	r0, #125	; 0x7d
   23a78:	bne	239d0 <main@@Base+0xdc80>
   23a7c:	b	23b04 <main@@Base+0xddb4>
   23a80:	bne	23a94 <main@@Base+0xdd44>
   23a84:	mov	r3, r2
   23a88:	ldrb	r0, [r3, #1]!
   23a8c:	cmp	r0, #32
   23a90:	bhi	23aa8 <main@@Base+0xdd58>
   23a94:	mov	r1, r2
   23a98:	mov	r0, r8
   23a9c:	mov	r2, sl
   23aa0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   23aa4:	mov	r3, r0
   23aa8:	cmp	r3, sl
   23aac:	bne	23a3c <main@@Base+0xdcec>
   23ab0:	b	23ae8 <main@@Base+0xdd98>
   23ab4:	bne	23ac4 <main@@Base+0xdd74>
   23ab8:	ldrb	r0, [r3, #2]!
   23abc:	cmp	r0, #32
   23ac0:	bhi	23ad4 <main@@Base+0xdd84>
   23ac4:	mov	r0, r8
   23ac8:	mov	r2, sl
   23acc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   23ad0:	mov	r3, r0
   23ad4:	cmp	r3, sl
   23ad8:	bne	23a70 <main@@Base+0xdd20>
   23adc:	mov	r0, r8
   23ae0:	mov	r1, sl
   23ae4:	b	23b98 <main@@Base+0xde48>
   23ae8:	mov	r4, sl
   23aec:	ldr	r0, [r8, #20]
   23af0:	cmp	r0, #0
   23af4:	bne	22d28 <main@@Base+0xcfd8>
   23af8:	b	23b78 <main@@Base+0xde28>
   23afc:	cmp	r0, #125	; 0x7d
   23b00:	bne	23b38 <main@@Base+0xdde8>
   23b04:	add	r1, r3, #1
   23b08:	sub	r0, sl, r1
   23b0c:	cmp	r0, #2
   23b10:	blt	23bb8 <main@@Base+0xde68>
   23b14:	ldrb	r0, [r1]
   23b18:	cmp	r0, #32
   23b1c:	bhi	23b68 <main@@Base+0xde18>
   23b20:	bne	23bb8 <main@@Base+0xde68>
   23b24:	ldrb	r0, [r3, #2]!
   23b28:	mov	r4, r3
   23b2c:	cmp	r0, #32
   23b30:	bhi	22d1c <main@@Base+0xcfcc>
   23b34:	b	23bb8 <main@@Base+0xde68>
   23b38:	mov	r0, r8
   23b3c:	mov	r1, r3
   23b40:	b	23b98 <main@@Base+0xde48>
   23b44:	cmp	r0, #125	; 0x7d
   23b48:	bne	23b90 <main@@Base+0xde40>
   23b4c:	add	r1, r2, #1
   23b50:	sub	r0, sl, r1
   23b54:	cmp	r0, #2
   23b58:	blt	23bb8 <main@@Base+0xde68>
   23b5c:	ldrb	r0, [r1]
   23b60:	cmp	r0, #32
   23b64:	bls	23ba4 <main@@Base+0xde54>
   23b68:	mov	r4, r1
   23b6c:	ldr	r0, [r8, #20]
   23b70:	cmp	r0, #0
   23b74:	bne	22d28 <main@@Base+0xcfd8>
   23b78:	ldr	r0, [r8]
   23b7c:	bl	30400 <flatcc_builder_end_table@@Base>
   23b80:	cmp	r0, #0
   23b84:	str	r0, [r5]
   23b88:	bne	22d40 <main@@Base+0xcff0>
   23b8c:	b	22d28 <main@@Base+0xcfd8>
   23b90:	mov	r0, r8
   23b94:	mov	r1, r2
   23b98:	mov	r2, sl
   23b9c:	mov	r3, #10
   23ba0:	b	22d14 <main@@Base+0xcfc4>
   23ba4:	bne	23bb8 <main@@Base+0xde68>
   23ba8:	ldrb	r0, [r2, #2]!
   23bac:	mov	r4, r2
   23bb0:	cmp	r0, #32
   23bb4:	bhi	22d1c <main@@Base+0xcfcc>
   23bb8:	mov	r0, r8
   23bbc:	mov	r2, sl
   23bc0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   23bc4:	b	22d18 <main@@Base+0xcfc8>
   23bc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23bcc:	add	fp, sp, #28
   23bd0:	sub	sp, sp, #20
   23bd4:	mov	sl, r1
   23bd8:	sub	r1, r2, r1
   23bdc:	cmp	r1, #8
   23be0:	movcs	r1, #8
   23be4:	sub	r5, r1, #1
   23be8:	cmp	r5, #7
   23bec:	bhi	23df0 <main@@Base+0xe0a0>
   23bf0:	str	r2, [sp, #16]
   23bf4:	str	r0, [sp, #12]
   23bf8:	add	r0, pc, #36	; 0x24
   23bfc:	mov	lr, r3
   23c00:	mov	r8, #0
   23c04:	mov	ip, #0
   23c08:	mov	r2, #0
   23c0c:	mov	r1, #0
   23c10:	mov	r3, #0
   23c14:	mov	r7, #0
   23c18:	mov	r6, #0
   23c1c:	mov	r4, #0
   23c20:	ldr	pc, [r0, r5, lsl #2]
   23c24:	andeq	r3, r2, r8, lsl #25
   23c28:	andeq	r3, r2, r0, lsl #25
   23c2c:	andeq	r3, r2, r8, ror ip
   23c30:	andeq	r3, r2, r0, ror ip
   23c34:	andeq	r3, r2, r4, ror #24
   23c38:	andeq	r3, r2, r8, asr ip
   23c3c:	andeq	r3, r2, r8, asr #24
   23c40:	andeq	r3, r2, r4, asr #24
   23c44:	ldrb	ip, [sl, #7]
   23c48:	ldrb	r0, [sl, #6]
   23c4c:	mov	r2, r8
   23c50:	orr	r0, ip, r0, lsl #8
   23c54:	mov	r8, r0
   23c58:	ldrb	r0, [sl, #5]
   23c5c:	mov	r1, r2
   23c60:	orr	r8, r8, r0, lsl #16
   23c64:	ldrb	r0, [sl, #4]
   23c68:	mov	r3, r1
   23c6c:	orr	r8, r8, r0, lsl #24
   23c70:	ldrb	r0, [sl, #3]
   23c74:	orr	r7, r0, r3
   23c78:	ldrb	r0, [sl, #2]
   23c7c:	orr	r6, r7, r0, lsl #8
   23c80:	ldrb	r0, [sl, #1]
   23c84:	orr	r4, r6, r0, lsl #16
   23c88:	ldrb	r0, [sl]
   23c8c:	movw	r1, #28275	; 0x6e73
   23c90:	ldr	r7, [fp, #12]
   23c94:	ldr	r5, [fp, #8]
   23c98:	movt	r1, #19823	; 0x4d6f
   23c9c:	orr	r9, r4, r0, lsl #24
   23ca0:	movw	r0, #29184	; 0x7200
   23ca4:	movt	r0, #29797	; 0x7465
   23ca8:	subs	r2, r8, r0
   23cac:	sbcs	r2, r9, r1
   23cb0:	bcs	23cf8 <main@@Base+0xdfa8>
   23cb4:	movw	r1, #29696	; 0x7400
   23cb8:	bic	r0, r9, #255	; 0xff
   23cbc:	movt	r1, #16748	; 0x416c
   23cc0:	teq	r0, r1
   23cc4:	bne	23df0 <main@@Base+0xe0a0>
   23cc8:	ldr	r0, [sp, #12]
   23ccc:	ldr	r2, [sp, #16]
   23cd0:	mov	r1, sl
   23cd4:	mov	r3, #3
   23cd8:	mov	r4, lr
   23cdc:	str	r7, [sp]
   23ce0:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   23ce4:	cmp	r0, sl
   23ce8:	beq	23df0 <main@@Base+0xe0a0>
   23cec:	mov	r1, #0
   23cf0:	mov	r2, #4
   23cf4:	b	23d38 <main@@Base+0xdfe8>
   23cf8:	add	r2, r0, #50	; 0x32
   23cfc:	eor	r1, r9, r1
   23d00:	eor	r2, r8, r2
   23d04:	orrs	r2, r2, r1
   23d08:	bne	23d48 <main@@Base+0xdff8>
   23d0c:	ldr	r0, [sp, #12]
   23d10:	ldr	r2, [sp, #16]
   23d14:	mov	r1, sl
   23d18:	mov	r3, #8
   23d1c:	mov	r4, lr
   23d20:	str	r7, [sp]
   23d24:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   23d28:	cmp	r0, sl
   23d2c:	beq	23df0 <main@@Base+0xe0a0>
   23d30:	mov	r1, #0
   23d34:	mov	r2, #3
   23d38:	str	r2, [r5]
   23d3c:	str	r1, [r5, #4]
   23d40:	str	r1, [r4]
   23d44:	b	23dec <main@@Base+0xe09c>
   23d48:	ldr	r5, [sp, #16]
   23d4c:	ldr	r6, [sp, #12]
   23d50:	bic	r2, r8, #255	; 0xff
   23d54:	eor	r0, r2, r0
   23d58:	orrs	r0, r0, r1
   23d5c:	bne	23da0 <main@@Base+0xe050>
   23d60:	mov	r0, r6
   23d64:	mov	r1, sl
   23d68:	mov	r2, r5
   23d6c:	mov	r3, #7
   23d70:	str	r7, [sp]
   23d74:	mov	r4, lr
   23d78:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   23d7c:	mov	lr, r4
   23d80:	cmp	r0, sl
   23d84:	beq	23da0 <main@@Base+0xe050>
   23d88:	ldr	r3, [fp, #8]
   23d8c:	mov	r2, #1
   23d90:	mov	r1, #0
   23d94:	str	r2, [r3]
   23d98:	str	r1, [r3, #4]
   23d9c:	b	23de8 <main@@Base+0xe098>
   23da0:	movw	r0, #20037	; 0x4e45
   23da4:	movt	r0, #20047	; 0x4e4f
   23da8:	teq	r9, r0
   23dac:	bne	23dfc <main@@Base+0xe0ac>
   23db0:	mov	r0, r6
   23db4:	mov	r1, sl
   23db8:	mov	r2, r5
   23dbc:	mov	r3, #4
   23dc0:	str	r7, [sp]
   23dc4:	mov	r4, lr
   23dc8:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   23dcc:	mov	lr, r4
   23dd0:	cmp	r0, sl
   23dd4:	beq	23dfc <main@@Base+0xe0ac>
   23dd8:	ldr	r2, [fp, #8]
   23ddc:	mov	r1, #0
   23de0:	str	r1, [r2]
   23de4:	str	r1, [r2, #4]
   23de8:	str	r1, [lr]
   23dec:	mov	sl, r0
   23df0:	mov	r0, sl
   23df4:	sub	sp, fp, #28
   23df8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23dfc:	movw	r0, #28016	; 0x6d70
   23e00:	movw	r1, #29556	; 0x7374
   23e04:	movt	r0, #21353	; 0x5369
   23e08:	movt	r1, #21605	; 0x5465
   23e0c:	eor	r0, r8, r0
   23e10:	eor	r1, r9, r1
   23e14:	orrs	r0, r0, r1
   23e18:	bne	23df0 <main@@Base+0xe0a0>
   23e1c:	str	lr, [sp, #8]
   23e20:	add	lr, sl, #8
   23e24:	sub	r0, r5, lr
   23e28:	cmp	r0, #8
   23e2c:	movcs	r0, #8
   23e30:	sub	r5, r0, #1
   23e34:	cmp	r5, #7
   23e38:	bhi	23df0 <main@@Base+0xe0a0>
   23e3c:	add	r1, pc, #32
   23e40:	mov	r9, #0
   23e44:	mov	ip, #0
   23e48:	mov	r8, #0
   23e4c:	mov	r2, #0
   23e50:	mov	r3, #0
   23e54:	mov	r0, #0
   23e58:	mov	r4, #0
   23e5c:	mov	r6, #0
   23e60:	ldr	pc, [r1, r5, lsl #2]
   23e64:	andeq	r3, r2, r8, asr #29
   23e68:	andeq	r3, r2, r0, asr #29
   23e6c:			; <UNDEFINED> instruction: 0x00023eb8
   23e70:			; <UNDEFINED> instruction: 0x00023eb0
   23e74:	andeq	r3, r2, r4, lsr #29
   23e78:	muleq	r2, r8, lr
   23e7c:	andeq	r3, r2, r8, lsl #29
   23e80:	andeq	r3, r2, r4, lsl #29
   23e84:	ldrb	ip, [sl, #15]
   23e88:	ldrb	r0, [sl, #14]
   23e8c:	mov	r8, r9
   23e90:	orr	r0, ip, r0, lsl #8
   23e94:	mov	r9, r0
   23e98:	ldrb	r0, [sl, #13]
   23e9c:	mov	r2, r8
   23ea0:	orr	r9, r9, r0, lsl #16
   23ea4:	ldrb	r0, [sl, #12]
   23ea8:	mov	r3, r2
   23eac:	orr	r9, r9, r0, lsl #24
   23eb0:	ldrb	r0, [sl, #11]
   23eb4:	orr	r0, r0, r3
   23eb8:	ldrb	r1, [sl, #10]
   23ebc:	orr	r4, r0, r1, lsl #8
   23ec0:	ldrb	r0, [sl, #9]
   23ec4:	orr	r6, r4, r0, lsl #16
   23ec8:	ldrb	r1, [lr]
   23ecc:	movw	r0, #25943	; 0x6557
   23ed0:	movw	r2, #21601	; 0x5461
   23ed4:	movt	r0, #25196	; 0x626c
   23ed8:	movt	r2, #27749	; 0x6c65
   23edc:	eor	r0, r9, r0
   23ee0:	orr	r1, r6, r1, lsl #24
   23ee4:	eor	r1, r1, r2
   23ee8:	orrs	r0, r0, r1
   23eec:	bne	23df0 <main@@Base+0xe0a0>
   23ef0:	ldr	r0, [sp, #16]
   23ef4:	add	r8, sl, #16
   23ef8:	sub	r0, r0, r8
   23efc:	cmp	r0, #8
   23f00:	movcs	r0, #8
   23f04:	sub	r3, r0, #1
   23f08:	cmp	r3, #7
   23f0c:	bhi	23df0 <main@@Base+0xe0a0>
   23f10:	add	r5, pc, #28
   23f14:	mov	r0, #0
   23f18:	mov	ip, #0
   23f1c:	mov	lr, #0
   23f20:	mov	r2, #0
   23f24:	mov	r1, #0
   23f28:	mov	r6, #0
   23f2c:	mov	r4, #0
   23f30:	ldr	pc, [r5, r3, lsl #2]
   23f34:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   23f38:	andeq	r3, r2, r8, lsl #31
   23f3c:	andeq	r3, r2, r0, lsl #31
   23f40:	andeq	r3, r2, r8, ror pc
   23f44:	andeq	r3, r2, ip, ror #30
   23f48:	andeq	r3, r2, ip, asr pc
   23f4c:	andeq	r3, r2, r4, asr pc
   23f50:	andeq	r3, r2, r4, asr pc
   23f54:	ldrb	r1, [sl, #22]
   23f58:	lsl	ip, r1, #8
   23f5c:	ldrb	r1, [sl, #21]
   23f60:	mov	lr, r0
   23f64:	orr	r1, ip, r1, lsl #16
   23f68:	mov	r0, r1
   23f6c:	ldrb	r1, [sl, #20]
   23f70:	mov	r2, lr
   23f74:	orr	r0, r0, r1, lsl #24
   23f78:	ldrb	r1, [sl, #19]
   23f7c:	orr	r1, r1, r2
   23f80:	ldrb	r2, [sl, #18]
   23f84:	orr	r6, r1, r2, lsl #8
   23f88:	ldrb	r1, [sl, #17]
   23f8c:	orr	r4, r6, r1, lsl #16
   23f90:	movw	r1, #27904	; 0x6d00
   23f94:	movw	r2, #26693	; 0x6845
   23f98:	movt	r1, #28277	; 0x6e75
   23f9c:	movt	r2, #26996	; 0x6974
   23fa0:	eor	r0, r0, r1
   23fa4:	ldrb	r1, [r8]
   23fa8:	orr	r1, r4, r1, lsl #24
   23fac:	eor	r1, r1, r2
   23fb0:	orrs	r0, r0, r1
   23fb4:	bne	23df0 <main@@Base+0xe0a0>
   23fb8:	ldr	r0, [sp, #12]
   23fbc:	ldr	r2, [sp, #16]
   23fc0:	mov	r1, r8
   23fc4:	mov	r3, #7
   23fc8:	str	r7, [sp]
   23fcc:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   23fd0:	ldr	r3, [fp, #8]
   23fd4:	cmp	r0, r8
   23fd8:	beq	23df0 <main@@Base+0xe0a0>
   23fdc:	mov	r2, #2
   23fe0:	mov	r1, #0
   23fe4:	str	r2, [r3]
   23fe8:	str	r1, [r3, #4]
   23fec:	ldr	r2, [sp, #8]
   23ff0:	str	r1, [r2]
   23ff4:	b	23dec <main@@Base+0xe09c>
   23ff8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23ffc:	add	fp, sp, #28
   24000:	sub	sp, sp, #44	; 0x2c
   24004:	mov	r7, r2
   24008:	ldr	r2, [fp, #8]
   2400c:	mov	r5, r0
   24010:	mov	r0, #0
   24014:	mov	sl, r3
   24018:	cmp	r1, r7
   2401c:	strb	r0, [r2]
   24020:	beq	24034 <main@@Base+0xe2e4>
   24024:	ldrb	r0, [r1]
   24028:	cmp	r0, #34	; 0x22
   2402c:	bne	24068 <main@@Base+0xe318>
   24030:	add	r1, r1, #1
   24034:	sub	r0, r7, r1
   24038:	cmp	r0, #2
   2403c:	blt	240a0 <main@@Base+0xe350>
   24040:	ldrb	r0, [r1]
   24044:	cmp	r0, #32
   24048:	bls	2408c <main@@Base+0xe33c>
   2404c:	mov	r6, r1
   24050:	cmp	r6, r7
   24054:	bne	240b8 <main@@Base+0xe368>
   24058:	mov	r4, r7
   2405c:	mov	r0, r4
   24060:	sub	sp, fp, #28
   24064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24068:	mov	r0, r5
   2406c:	mov	r2, r7
   24070:	mov	r3, #5
   24074:	bl	3454c <flatcc_json_parser_set_error@@Base>
   24078:	mov	r1, r0
   2407c:	sub	r0, r7, r1
   24080:	cmp	r0, #2
   24084:	bge	24040 <main@@Base+0xe2f0>
   24088:	b	240a0 <main@@Base+0xe350>
   2408c:	bne	240a0 <main@@Base+0xe350>
   24090:	mov	r6, r1
   24094:	ldrb	r0, [r6, #1]!
   24098:	cmp	r0, #32
   2409c:	bhi	240b0 <main@@Base+0xe360>
   240a0:	mov	r0, r5
   240a4:	mov	r2, r7
   240a8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   240ac:	mov	r6, r0
   240b0:	cmp	r6, r7
   240b4:	beq	24058 <main@@Base+0xe308>
   240b8:	add	r0, sl, #4
   240bc:	mov	r1, #0
   240c0:	add	r8, sp, #32
   240c4:	add	r9, sp, #28
   240c8:	str	sl, [sp, #16]
   240cc:	str	r1, [sp, #20]
   240d0:	str	r0, [sp, #12]
   240d4:	ldr	r4, [sl]
   240d8:	mov	sl, r0
   240dc:	add	r0, sp, #24
   240e0:	mov	r1, r6
   240e4:	mov	r2, r7
   240e8:	mov	r3, r9
   240ec:	str	r8, [sp]
   240f0:	str	r0, [sp, #4]
   240f4:	mov	r0, r5
   240f8:	blx	r4
   240fc:	cmp	r0, r7
   24100:	beq	241a4 <main@@Base+0xe454>
   24104:	mov	r4, r0
   24108:	cmp	r0, r6
   2410c:	bne	24120 <main@@Base+0xe3d0>
   24110:	ldr	r4, [sl], #4
   24114:	cmp	r4, #0
   24118:	bne	240dc <main@@Base+0xe38c>
   2411c:	b	241b4 <main@@Base+0xe464>
   24120:	ldr	r0, [sp, #28]
   24124:	cmp	r0, #0
   24128:	beq	24150 <main@@Base+0xe400>
   2412c:	mov	r0, r5
   24130:	mov	r1, r4
   24134:	mov	r2, r7
   24138:	mov	r3, #8
   2413c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   24140:	ldr	sl, [sp, #16]
   24144:	cmp	r0, r7
   24148:	bne	24174 <main@@Base+0xe424>
   2414c:	b	241a4 <main@@Base+0xe454>
   24150:	ldr	r0, [sp, #32]
   24154:	ldr	r1, [sp, #36]	; 0x24
   24158:	orrs	r0, r0, r1
   2415c:	movwne	r0, #1
   24160:	str	r0, [sp, #20]
   24164:	mov	r0, r4
   24168:	ldr	sl, [sp, #16]
   2416c:	cmp	r0, r7
   24170:	beq	241a4 <main@@Base+0xe454>
   24174:	ldr	r0, [fp, #8]
   24178:	ldr	r2, [sp, #20]
   2417c:	mov	r6, r4
   24180:	mov	r1, r0
   24184:	ldrb	r0, [r0]
   24188:	add	r0, r0, r2
   2418c:	strb	r0, [r1]
   24190:	ldr	r0, [sp, #24]
   24194:	cmp	r0, #0
   24198:	ldr	r0, [sp, #12]
   2419c:	bne	240d4 <main@@Base+0xe384>
   241a0:	b	2405c <main@@Base+0xe30c>
   241a4:	mov	r4, r7
   241a8:	mov	r0, r4
   241ac:	sub	sp, fp, #28
   241b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   241b4:	mov	r0, r5
   241b8:	mov	r1, r6
   241bc:	mov	r2, r7
   241c0:	mov	r3, #23
   241c4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   241c8:	mov	r4, r0
   241cc:	mov	r0, r4
   241d0:	sub	sp, fp, #28
   241d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   241d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   241dc:	add	fp, sp, #28
   241e0:	sub	sp, sp, #36	; 0x24
   241e4:	mov	r6, r2
   241e8:	ldr	r2, [fp, #8]
   241ec:	mov	r5, r0
   241f0:	mov	r0, #0
   241f4:	mov	r8, r3
   241f8:	cmp	r1, r6
   241fc:	str	r0, [r2]
   24200:	beq	24214 <main@@Base+0xe4c4>
   24204:	ldrb	r0, [r1]
   24208:	cmp	r0, #34	; 0x22
   2420c:	bne	2423c <main@@Base+0xe4ec>
   24210:	add	r1, r1, #1
   24214:	sub	r0, r6, r1
   24218:	cmp	r0, #2
   2421c:	blt	24274 <main@@Base+0xe524>
   24220:	ldrb	r0, [r1]
   24224:	cmp	r0, #32
   24228:	bls	24260 <main@@Base+0xe510>
   2422c:	mov	r7, r1
   24230:	cmp	r7, r6
   24234:	bne	2428c <main@@Base+0xe53c>
   24238:	b	24338 <main@@Base+0xe5e8>
   2423c:	mov	r0, r5
   24240:	mov	r2, r6
   24244:	mov	r3, #5
   24248:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2424c:	mov	r1, r0
   24250:	sub	r0, r6, r1
   24254:	cmp	r0, #2
   24258:	bge	24220 <main@@Base+0xe4d0>
   2425c:	b	24274 <main@@Base+0xe524>
   24260:	bne	24274 <main@@Base+0xe524>
   24264:	mov	r7, r1
   24268:	ldrb	r0, [r7, #1]!
   2426c:	cmp	r0, #32
   24270:	bhi	24284 <main@@Base+0xe534>
   24274:	mov	r0, r5
   24278:	mov	r2, r6
   2427c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   24280:	mov	r7, r0
   24284:	cmp	r7, r6
   24288:	beq	24338 <main@@Base+0xe5e8>
   2428c:	add	r0, r8, #4
   24290:	add	sl, sp, #24
   24294:	add	r9, sp, #20
   24298:	str	r8, [sp, #12]
   2429c:	str	r0, [sp, #8]
   242a0:	ldr	r4, [r8]
   242a4:	mov	r8, r0
   242a8:	add	r0, sp, #16
   242ac:	mov	r1, r7
   242b0:	mov	r2, r6
   242b4:	mov	r3, r9
   242b8:	str	sl, [sp]
   242bc:	str	r0, [sp, #4]
   242c0:	mov	r0, r5
   242c4:	blx	r4
   242c8:	cmp	r0, r6
   242cc:	beq	24348 <main@@Base+0xe5f8>
   242d0:	mov	r4, r0
   242d4:	cmp	r0, r7
   242d8:	bne	242ec <main@@Base+0xe59c>
   242dc:	ldr	r4, [r8], #4
   242e0:	cmp	r4, #0
   242e4:	bne	242a8 <main@@Base+0xe558>
   242e8:	b	24358 <main@@Base+0xe608>
   242ec:	ldr	r0, [sp, #24]
   242f0:	ldr	r1, [sp, #28]
   242f4:	bl	46068 <flatcc_json_printer_clear@@Base+0x720>
   242f8:	vmov	s2, r0
   242fc:	ldr	r2, [fp, #8]
   24300:	ldr	r1, [sp, #20]
   24304:	ldr	r8, [sp, #12]
   24308:	mov	r7, r4
   2430c:	vldr	s0, [r2]
   24310:	cmp	r1, #0
   24314:	vneg.f32	s4, s2
   24318:	vseleq.f32	s2, s2, s4
   2431c:	vadd.f32	s0, s0, s2
   24320:	vstr	s0, [r2]
   24324:	ldr	r0, [sp, #16]
   24328:	cmp	r0, #0
   2432c:	ldr	r0, [sp, #8]
   24330:	bne	242a0 <main@@Base+0xe550>
   24334:	b	2433c <main@@Base+0xe5ec>
   24338:	mov	r4, r6
   2433c:	mov	r0, r4
   24340:	sub	sp, fp, #28
   24344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24348:	mov	r4, r6
   2434c:	mov	r0, r4
   24350:	sub	sp, fp, #28
   24354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24358:	mov	r0, r5
   2435c:	mov	r1, r7
   24360:	mov	r2, r6
   24364:	mov	r3, #23
   24368:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2436c:	mov	r4, r0
   24370:	mov	r0, r4
   24374:	sub	sp, fp, #28
   24378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2437c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24380:	add	fp, sp, #28
   24384:	sub	sp, sp, #44	; 0x2c
   24388:	mov	r6, r2
   2438c:	ldr	r2, [fp, #8]
   24390:	mov	r5, r0
   24394:	mov	r0, #0
   24398:	mov	sl, r3
   2439c:	cmp	r1, r6
   243a0:	str	r0, [r2]
   243a4:	beq	243b8 <main@@Base+0xe668>
   243a8:	ldrb	r0, [r1]
   243ac:	cmp	r0, #34	; 0x22
   243b0:	bne	243ec <main@@Base+0xe69c>
   243b4:	add	r1, r1, #1
   243b8:	sub	r0, r6, r1
   243bc:	cmp	r0, #2
   243c0:	blt	24424 <main@@Base+0xe6d4>
   243c4:	ldrb	r0, [r1]
   243c8:	cmp	r0, #32
   243cc:	bls	24410 <main@@Base+0xe6c0>
   243d0:	mov	r7, r1
   243d4:	cmp	r7, r6
   243d8:	bne	2443c <main@@Base+0xe6ec>
   243dc:	mov	r4, r6
   243e0:	mov	r0, r4
   243e4:	sub	sp, fp, #28
   243e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   243ec:	mov	r0, r5
   243f0:	mov	r2, r6
   243f4:	mov	r3, #5
   243f8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   243fc:	mov	r1, r0
   24400:	sub	r0, r6, r1
   24404:	cmp	r0, #2
   24408:	bge	243c4 <main@@Base+0xe674>
   2440c:	b	24424 <main@@Base+0xe6d4>
   24410:	bne	24424 <main@@Base+0xe6d4>
   24414:	mov	r7, r1
   24418:	ldrb	r0, [r7, #1]!
   2441c:	cmp	r0, #32
   24420:	bhi	24434 <main@@Base+0xe6e4>
   24424:	mov	r0, r5
   24428:	mov	r2, r6
   2442c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   24430:	mov	r7, r0
   24434:	cmp	r7, r6
   24438:	beq	243dc <main@@Base+0xe68c>
   2443c:	add	r0, sl, #4
   24440:	mov	r2, #0
   24444:	add	r8, sp, #32
   24448:	add	r9, sp, #28
   2444c:	str	sl, [sp, #16]
   24450:	str	r0, [sp, #12]
   24454:	ldr	r4, [sl]
   24458:	mov	sl, r0
   2445c:	str	r2, [sp, #20]
   24460:	add	r0, sp, #24
   24464:	mov	r1, r7
   24468:	mov	r2, r6
   2446c:	mov	r3, r9
   24470:	str	r8, [sp]
   24474:	str	r0, [sp, #4]
   24478:	mov	r0, r5
   2447c:	blx	r4
   24480:	cmp	r0, r6
   24484:	beq	24560 <main@@Base+0xe810>
   24488:	mov	r4, r0
   2448c:	cmp	r0, r7
   24490:	bne	244a4 <main@@Base+0xe754>
   24494:	ldr	r4, [sl], #4
   24498:	cmp	r4, #0
   2449c:	bne	24460 <main@@Base+0xe710>
   244a0:	b	24570 <main@@Base+0xe820>
   244a4:	ldr	r2, [sp, #28]
   244a8:	ldr	r0, [sp, #32]
   244ac:	ldr	r1, [sp, #36]	; 0x24
   244b0:	cmp	r2, #0
   244b4:	beq	244dc <main@@Base+0xe78c>
   244b8:	ldr	sl, [sp, #16]
   244bc:	subs	r2, r0, #-2147483647	; 0x80000001
   244c0:	sbcs	r1, r1, #0
   244c4:	bcc	24510 <main@@Base+0xe7c0>
   244c8:	mov	r0, r5
   244cc:	mov	r1, r4
   244d0:	mov	r2, r6
   244d4:	mov	r3, #8
   244d8:	b	244fc <main@@Base+0xe7ac>
   244dc:	ldr	sl, [sp, #16]
   244e0:	subs	r2, r0, #-2147483648	; 0x80000000
   244e4:	sbcs	r1, r1, #0
   244e8:	bcc	24524 <main@@Base+0xe7d4>
   244ec:	mov	r0, r5
   244f0:	mov	r1, r4
   244f4:	mov	r2, r6
   244f8:	mov	r3, #7
   244fc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   24500:	ldr	r2, [sp, #20]
   24504:	cmp	r0, r6
   24508:	bne	24534 <main@@Base+0xe7e4>
   2450c:	b	24560 <main@@Base+0xe810>
   24510:	rsb	r2, r0, #0
   24514:	mov	r0, r4
   24518:	cmp	r0, r6
   2451c:	bne	24534 <main@@Base+0xe7e4>
   24520:	b	24560 <main@@Base+0xe810>
   24524:	mov	r2, r0
   24528:	mov	r0, r4
   2452c:	cmp	r0, r6
   24530:	beq	24560 <main@@Base+0xe810>
   24534:	ldr	r0, [fp, #8]
   24538:	mov	r7, r4
   2453c:	mov	r1, r0
   24540:	ldr	r0, [r0]
   24544:	add	r0, r0, r2
   24548:	str	r0, [r1]
   2454c:	ldr	r0, [sp, #24]
   24550:	cmp	r0, #0
   24554:	ldr	r0, [sp, #12]
   24558:	bne	24454 <main@@Base+0xe704>
   2455c:	b	243e0 <main@@Base+0xe690>
   24560:	mov	r4, r6
   24564:	mov	r0, r4
   24568:	sub	sp, fp, #28
   2456c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24570:	mov	r0, r5
   24574:	mov	r1, r7
   24578:	mov	r2, r6
   2457c:	mov	r3, #23
   24580:	bl	3454c <flatcc_json_parser_set_error@@Base>
   24584:	mov	r4, r0
   24588:	mov	r0, r4
   2458c:	sub	sp, fp, #28
   24590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24598:	add	fp, sp, #28
   2459c:	sub	sp, sp, #44	; 0x2c
   245a0:	mov	r6, r2
   245a4:	ldr	r2, [fp, #8]
   245a8:	mov	r5, r0
   245ac:	mov	r0, #0
   245b0:	mov	sl, r3
   245b4:	cmp	r1, r6
   245b8:	str	r0, [r2]
   245bc:	str	r0, [r2, #4]
   245c0:	beq	245d4 <main@@Base+0xe884>
   245c4:	ldrb	r0, [r1]
   245c8:	cmp	r0, #34	; 0x22
   245cc:	bne	24608 <main@@Base+0xe8b8>
   245d0:	add	r1, r1, #1
   245d4:	sub	r0, r6, r1
   245d8:	cmp	r0, #2
   245dc:	blt	24640 <main@@Base+0xe8f0>
   245e0:	ldrb	r0, [r1]
   245e4:	cmp	r0, #32
   245e8:	bls	2462c <main@@Base+0xe8dc>
   245ec:	mov	r7, r1
   245f0:	cmp	r7, r6
   245f4:	bne	24658 <main@@Base+0xe908>
   245f8:	mov	r4, r6
   245fc:	mov	r0, r4
   24600:	sub	sp, fp, #28
   24604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24608:	mov	r0, r5
   2460c:	mov	r2, r6
   24610:	mov	r3, #5
   24614:	bl	3454c <flatcc_json_parser_set_error@@Base>
   24618:	mov	r1, r0
   2461c:	sub	r0, r6, r1
   24620:	cmp	r0, #2
   24624:	bge	245e0 <main@@Base+0xe890>
   24628:	b	24640 <main@@Base+0xe8f0>
   2462c:	bne	24640 <main@@Base+0xe8f0>
   24630:	mov	r7, r1
   24634:	ldrb	r0, [r7, #1]!
   24638:	cmp	r0, #32
   2463c:	bhi	24650 <main@@Base+0xe900>
   24640:	mov	r0, r5
   24644:	mov	r2, r6
   24648:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2464c:	mov	r7, r0
   24650:	cmp	r7, r6
   24654:	beq	245f8 <main@@Base+0xe8a8>
   24658:	add	r0, sl, #4
   2465c:	mov	r1, #0
   24660:	add	r8, sp, #32
   24664:	add	r9, sp, #28
   24668:	mov	r2, #0
   2466c:	str	sl, [sp, #12]
   24670:	str	r0, [sp, #8]
   24674:	ldr	r4, [sl]
   24678:	mov	sl, r0
   2467c:	str	r2, [sp, #16]
   24680:	str	r1, [sp, #20]
   24684:	add	r0, sp, #24
   24688:	mov	r1, r7
   2468c:	mov	r2, r6
   24690:	mov	r3, r9
   24694:	str	r8, [sp]
   24698:	str	r0, [sp, #4]
   2469c:	mov	r0, r5
   246a0:	blx	r4
   246a4:	cmp	r0, r6
   246a8:	beq	24778 <main@@Base+0xea28>
   246ac:	mov	r4, r0
   246b0:	cmp	r0, r7
   246b4:	bne	246c8 <main@@Base+0xe978>
   246b8:	ldr	r4, [sl], #4
   246bc:	cmp	r4, #0
   246c0:	bne	24684 <main@@Base+0xe934>
   246c4:	b	24788 <main@@Base+0xea38>
   246c8:	add	r2, sp, #28
   246cc:	ldm	r2, {r0, r1, r2}
   246d0:	cmp	r0, #0
   246d4:	beq	246fc <main@@Base+0xe9ac>
   246d8:	ldr	sl, [sp, #12]
   246dc:	subs	r0, r1, #1
   246e0:	sbcs	r0, r2, #-2147483648	; 0x80000000
   246e4:	bcc	24734 <main@@Base+0xe9e4>
   246e8:	mov	r0, r5
   246ec:	mov	r1, r4
   246f0:	mov	r2, r6
   246f4:	mov	r3, #8
   246f8:	b	2471c <main@@Base+0xe9cc>
   246fc:	ldr	sl, [sp, #12]
   24700:	cmn	r2, #1
   24704:	mov	r0, r4
   24708:	bgt	24728 <main@@Base+0xe9d8>
   2470c:	mov	r0, r5
   24710:	mov	r1, r4
   24714:	mov	r2, r6
   24718:	mov	r3, #7
   2471c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   24720:	ldr	r1, [sp, #20]
   24724:	ldr	r2, [sp, #16]
   24728:	cmp	r0, r6
   2472c:	bne	24748 <main@@Base+0xe9f8>
   24730:	b	24778 <main@@Base+0xea28>
   24734:	rsbs	r1, r1, #0
   24738:	mov	r0, r4
   2473c:	rsc	r2, r2, #0
   24740:	cmp	r0, r6
   24744:	beq	24778 <main@@Base+0xea28>
   24748:	ldr	r0, [fp, #8]
   2474c:	mov	r7, r0
   24750:	ldm	r0, {r0, r3}
   24754:	adds	r0, r0, r1
   24758:	adc	r3, r3, r2
   2475c:	stm	r7, {r0, r3}
   24760:	mov	r7, r4
   24764:	ldr	r0, [sp, #24]
   24768:	cmp	r0, #0
   2476c:	ldr	r0, [sp, #8]
   24770:	bne	24674 <main@@Base+0xe924>
   24774:	b	245fc <main@@Base+0xe8ac>
   24778:	mov	r4, r6
   2477c:	mov	r0, r4
   24780:	sub	sp, fp, #28
   24784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24788:	mov	r0, r5
   2478c:	mov	r1, r7
   24790:	mov	r2, r6
   24794:	mov	r3, #23
   24798:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2479c:	mov	r4, r0
   247a0:	mov	r0, r4
   247a4:	sub	sp, fp, #28
   247a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   247ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   247b0:	add	fp, sp, #28
   247b4:	sub	sp, sp, #44	; 0x2c
   247b8:	mov	r6, r2
   247bc:	ldr	r2, [fp, #8]
   247c0:	mov	r5, r0
   247c4:	mov	r0, #0
   247c8:	mov	sl, r3
   247cc:	cmp	r1, r6
   247d0:	str	r0, [r2]
   247d4:	beq	247e8 <main@@Base+0xea98>
   247d8:	ldrb	r0, [r1]
   247dc:	cmp	r0, #34	; 0x22
   247e0:	bne	2481c <main@@Base+0xeacc>
   247e4:	add	r1, r1, #1
   247e8:	sub	r0, r6, r1
   247ec:	cmp	r0, #2
   247f0:	blt	24854 <main@@Base+0xeb04>
   247f4:	ldrb	r0, [r1]
   247f8:	cmp	r0, #32
   247fc:	bls	24840 <main@@Base+0xeaf0>
   24800:	mov	r7, r1
   24804:	cmp	r7, r6
   24808:	bne	2486c <main@@Base+0xeb1c>
   2480c:	mov	r4, r6
   24810:	mov	r0, r4
   24814:	sub	sp, fp, #28
   24818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2481c:	mov	r0, r5
   24820:	mov	r2, r6
   24824:	mov	r3, #5
   24828:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2482c:	mov	r1, r0
   24830:	sub	r0, r6, r1
   24834:	cmp	r0, #2
   24838:	bge	247f4 <main@@Base+0xeaa4>
   2483c:	b	24854 <main@@Base+0xeb04>
   24840:	bne	24854 <main@@Base+0xeb04>
   24844:	mov	r7, r1
   24848:	ldrb	r0, [r7, #1]!
   2484c:	cmp	r0, #32
   24850:	bhi	24864 <main@@Base+0xeb14>
   24854:	mov	r0, r5
   24858:	mov	r2, r6
   2485c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   24860:	mov	r7, r0
   24864:	cmp	r7, r6
   24868:	beq	2480c <main@@Base+0xeabc>
   2486c:	add	r0, sl, #4
   24870:	mov	r1, #0
   24874:	add	r8, sp, #32
   24878:	add	r9, sp, #28
   2487c:	str	sl, [sp, #16]
   24880:	str	r1, [sp, #20]
   24884:	str	r0, [sp, #12]
   24888:	ldr	r4, [sl]
   2488c:	mov	sl, r0
   24890:	add	r0, sp, #24
   24894:	mov	r1, r7
   24898:	mov	r2, r6
   2489c:	mov	r3, r9
   248a0:	str	r8, [sp]
   248a4:	str	r0, [sp, #4]
   248a8:	mov	r0, r5
   248ac:	blx	r4
   248b0:	cmp	r0, r6
   248b4:	beq	24978 <main@@Base+0xec28>
   248b8:	mov	r4, r0
   248bc:	cmp	r0, r7
   248c0:	bne	248d4 <main@@Base+0xeb84>
   248c4:	ldr	r4, [sl], #4
   248c8:	cmp	r4, #0
   248cc:	bne	24890 <main@@Base+0xeb40>
   248d0:	b	24988 <main@@Base+0xec38>
   248d4:	ldr	r0, [sp, #28]
   248d8:	cmp	r0, #0
   248dc:	beq	24904 <main@@Base+0xebb4>
   248e0:	mov	r0, r5
   248e4:	mov	r1, r4
   248e8:	mov	r2, r6
   248ec:	mov	r3, #8
   248f0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   248f4:	ldr	sl, [sp, #16]
   248f8:	cmp	r0, r6
   248fc:	bne	24948 <main@@Base+0xebf8>
   24900:	b	24978 <main@@Base+0xec28>
   24904:	ldr	r0, [sp, #36]	; 0x24
   24908:	ldr	sl, [sp, #16]
   2490c:	cmp	r0, #0
   24910:	beq	24934 <main@@Base+0xebe4>
   24914:	mov	r0, r5
   24918:	mov	r1, r4
   2491c:	mov	r2, r6
   24920:	mov	r3, #7
   24924:	bl	3454c <flatcc_json_parser_set_error@@Base>
   24928:	cmp	r0, r6
   2492c:	bne	24948 <main@@Base+0xebf8>
   24930:	b	24978 <main@@Base+0xec28>
   24934:	ldr	r0, [sp, #32]
   24938:	str	r0, [sp, #20]
   2493c:	mov	r0, r4
   24940:	cmp	r0, r6
   24944:	beq	24978 <main@@Base+0xec28>
   24948:	ldr	r0, [fp, #8]
   2494c:	ldr	r2, [sp, #20]
   24950:	mov	r7, r4
   24954:	mov	r1, r0
   24958:	ldr	r0, [r0]
   2495c:	add	r0, r0, r2
   24960:	str	r0, [r1]
   24964:	ldr	r0, [sp, #24]
   24968:	cmp	r0, #0
   2496c:	ldr	r0, [sp, #12]
   24970:	bne	24888 <main@@Base+0xeb38>
   24974:	b	24810 <main@@Base+0xeac0>
   24978:	mov	r4, r6
   2497c:	mov	r0, r4
   24980:	sub	sp, fp, #28
   24984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24988:	mov	r0, r5
   2498c:	mov	r1, r7
   24990:	mov	r2, r6
   24994:	mov	r3, #23
   24998:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2499c:	mov	r4, r0
   249a0:	mov	r0, r4
   249a4:	sub	sp, fp, #28
   249a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   249ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   249b0:	add	fp, sp, #28
   249b4:	sub	sp, sp, #44	; 0x2c
   249b8:	mov	r7, r2
   249bc:	ldr	r2, [fp, #8]
   249c0:	mov	r5, r0
   249c4:	mov	r0, #0
   249c8:	mov	sl, r3
   249cc:	cmp	r1, r7
   249d0:	str	r0, [r2]
   249d4:	str	r0, [r2, #4]
   249d8:	beq	249ec <main@@Base+0xec9c>
   249dc:	ldrb	r0, [r1]
   249e0:	cmp	r0, #34	; 0x22
   249e4:	bne	24a20 <main@@Base+0xecd0>
   249e8:	add	r1, r1, #1
   249ec:	sub	r0, r7, r1
   249f0:	cmp	r0, #2
   249f4:	blt	24a58 <main@@Base+0xed08>
   249f8:	ldrb	r0, [r1]
   249fc:	cmp	r0, #32
   24a00:	bls	24a44 <main@@Base+0xecf4>
   24a04:	mov	r6, r1
   24a08:	cmp	r6, r7
   24a0c:	bne	24a70 <main@@Base+0xed20>
   24a10:	mov	r4, r7
   24a14:	mov	r0, r4
   24a18:	sub	sp, fp, #28
   24a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24a20:	mov	r0, r5
   24a24:	mov	r2, r7
   24a28:	mov	r3, #5
   24a2c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   24a30:	mov	r1, r0
   24a34:	sub	r0, r7, r1
   24a38:	cmp	r0, #2
   24a3c:	bge	249f8 <main@@Base+0xeca8>
   24a40:	b	24a58 <main@@Base+0xed08>
   24a44:	bne	24a58 <main@@Base+0xed08>
   24a48:	mov	r6, r1
   24a4c:	ldrb	r0, [r6, #1]!
   24a50:	cmp	r0, #32
   24a54:	bhi	24a68 <main@@Base+0xed18>
   24a58:	mov	r0, r5
   24a5c:	mov	r2, r7
   24a60:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   24a64:	mov	r6, r0
   24a68:	cmp	r6, r7
   24a6c:	beq	24a10 <main@@Base+0xecc0>
   24a70:	mov	r1, #0
   24a74:	add	r0, sl, #4
   24a78:	add	r8, sp, #32
   24a7c:	add	r9, sp, #28
   24a80:	str	sl, [sp, #12]
   24a84:	str	r1, [sp, #20]
   24a88:	mov	r1, #0
   24a8c:	str	r0, [sp, #8]
   24a90:	str	r1, [sp, #16]
   24a94:	ldr	r4, [sl]
   24a98:	mov	sl, r0
   24a9c:	add	r0, sp, #24
   24aa0:	mov	r1, r6
   24aa4:	mov	r2, r7
   24aa8:	mov	r3, r9
   24aac:	str	r8, [sp]
   24ab0:	str	r0, [sp, #4]
   24ab4:	mov	r0, r5
   24ab8:	blx	r4
   24abc:	cmp	r0, r7
   24ac0:	beq	24b68 <main@@Base+0xee18>
   24ac4:	mov	r4, r0
   24ac8:	cmp	r0, r6
   24acc:	bne	24ae0 <main@@Base+0xed90>
   24ad0:	ldr	r4, [sl], #4
   24ad4:	cmp	r4, #0
   24ad8:	bne	24a9c <main@@Base+0xed4c>
   24adc:	b	24b78 <main@@Base+0xee28>
   24ae0:	ldr	r0, [sp, #28]
   24ae4:	cmp	r0, #0
   24ae8:	beq	24b10 <main@@Base+0xedc0>
   24aec:	mov	r0, r5
   24af0:	mov	r1, r4
   24af4:	mov	r2, r7
   24af8:	mov	r3, #8
   24afc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   24b00:	ldr	sl, [sp, #12]
   24b04:	cmp	r0, r7
   24b08:	bne	24b30 <main@@Base+0xede0>
   24b0c:	b	24b68 <main@@Base+0xee18>
   24b10:	ldr	r0, [sp, #32]
   24b14:	str	r0, [sp, #20]
   24b18:	ldr	r0, [sp, #36]	; 0x24
   24b1c:	str	r0, [sp, #16]
   24b20:	mov	r0, r4
   24b24:	ldr	sl, [sp, #12]
   24b28:	cmp	r0, r7
   24b2c:	beq	24b68 <main@@Base+0xee18>
   24b30:	ldr	r0, [fp, #8]
   24b34:	ldr	r3, [sp, #20]
   24b38:	mov	r6, r4
   24b3c:	mov	r2, r0
   24b40:	ldrd	r0, [r0]
   24b44:	adds	r0, r0, r3
   24b48:	ldr	r3, [sp, #16]
   24b4c:	adc	r1, r1, r3
   24b50:	strd	r0, [r2]
   24b54:	ldr	r0, [sp, #24]
   24b58:	cmp	r0, #0
   24b5c:	ldr	r0, [sp, #8]
   24b60:	bne	24a94 <main@@Base+0xed44>
   24b64:	b	24a14 <main@@Base+0xecc4>
   24b68:	mov	r4, r7
   24b6c:	mov	r0, r4
   24b70:	sub	sp, fp, #28
   24b74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24b78:	mov	r0, r5
   24b7c:	mov	r1, r6
   24b80:	mov	r2, r7
   24b84:	mov	r3, #23
   24b88:	bl	3454c <flatcc_json_parser_set_error@@Base>
   24b8c:	mov	r4, r0
   24b90:	mov	r0, r4
   24b94:	sub	sp, fp, #28
   24b98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24b9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24ba0:	add	fp, sp, #28
   24ba4:	sub	sp, sp, #36	; 0x24
   24ba8:	mov	r6, r2
   24bac:	ldr	r2, [fp, #8]
   24bb0:	mov	r5, r0
   24bb4:	mov	r0, #0
   24bb8:	mov	r8, r3
   24bbc:	cmp	r1, r6
   24bc0:	str	r0, [r2]
   24bc4:	str	r0, [r2, #4]
   24bc8:	beq	24bdc <main@@Base+0xee8c>
   24bcc:	ldrb	r0, [r1]
   24bd0:	cmp	r0, #34	; 0x22
   24bd4:	bne	24c04 <main@@Base+0xeeb4>
   24bd8:	add	r1, r1, #1
   24bdc:	sub	r0, r6, r1
   24be0:	cmp	r0, #2
   24be4:	blt	24c3c <main@@Base+0xeeec>
   24be8:	ldrb	r0, [r1]
   24bec:	cmp	r0, #32
   24bf0:	bls	24c28 <main@@Base+0xeed8>
   24bf4:	mov	r7, r1
   24bf8:	cmp	r7, r6
   24bfc:	bne	24c54 <main@@Base+0xef04>
   24c00:	b	24d08 <main@@Base+0xefb8>
   24c04:	mov	r0, r5
   24c08:	mov	r2, r6
   24c0c:	mov	r3, #5
   24c10:	bl	3454c <flatcc_json_parser_set_error@@Base>
   24c14:	mov	r1, r0
   24c18:	sub	r0, r6, r1
   24c1c:	cmp	r0, #2
   24c20:	bge	24be8 <main@@Base+0xee98>
   24c24:	b	24c3c <main@@Base+0xeeec>
   24c28:	bne	24c3c <main@@Base+0xeeec>
   24c2c:	mov	r7, r1
   24c30:	ldrb	r0, [r7, #1]!
   24c34:	cmp	r0, #32
   24c38:	bhi	24c4c <main@@Base+0xeefc>
   24c3c:	mov	r0, r5
   24c40:	mov	r2, r6
   24c44:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   24c48:	mov	r7, r0
   24c4c:	cmp	r7, r6
   24c50:	beq	24d08 <main@@Base+0xefb8>
   24c54:	add	r0, r8, #4
   24c58:	add	sl, sp, #24
   24c5c:	add	r9, sp, #20
   24c60:	str	r8, [sp, #12]
   24c64:	str	r0, [sp, #8]
   24c68:	ldr	r4, [r8]
   24c6c:	mov	r8, r0
   24c70:	add	r0, sp, #16
   24c74:	mov	r1, r7
   24c78:	mov	r2, r6
   24c7c:	mov	r3, r9
   24c80:	str	sl, [sp]
   24c84:	str	r0, [sp, #4]
   24c88:	mov	r0, r5
   24c8c:	blx	r4
   24c90:	cmp	r0, r6
   24c94:	beq	24d18 <main@@Base+0xefc8>
   24c98:	mov	r4, r0
   24c9c:	cmp	r0, r7
   24ca0:	bne	24cb4 <main@@Base+0xef64>
   24ca4:	ldr	r4, [r8], #4
   24ca8:	cmp	r4, #0
   24cac:	bne	24c70 <main@@Base+0xef20>
   24cb0:	b	24d28 <main@@Base+0xefd8>
   24cb4:	ldr	r0, [sp, #24]
   24cb8:	ldr	r1, [sp, #28]
   24cbc:	bl	45e30 <flatcc_json_printer_clear@@Base+0x4e8>
   24cc0:	ldr	r2, [fp, #8]
   24cc4:	vmov	d17, r0, r1
   24cc8:	ldr	r3, [sp, #20]
   24ccc:	ldr	r8, [sp, #12]
   24cd0:	mov	r7, r2
   24cd4:	vldr	d16, [r2]
   24cd8:	eor	r2, r1, #-2147483648	; 0x80000000
   24cdc:	cmp	r3, #0
   24ce0:	vmov	d18, r0, r2
   24ce4:	vseleq.f64	d17, d17, d18
   24ce8:	vadd.f64	d16, d16, d17
   24cec:	vstr	d16, [r7]
   24cf0:	mov	r7, r4
   24cf4:	ldr	r0, [sp, #16]
   24cf8:	cmp	r0, #0
   24cfc:	ldr	r0, [sp, #8]
   24d00:	bne	24c68 <main@@Base+0xef18>
   24d04:	b	24d0c <main@@Base+0xefbc>
   24d08:	mov	r4, r6
   24d0c:	mov	r0, r4
   24d10:	sub	sp, fp, #28
   24d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24d18:	mov	r4, r6
   24d1c:	mov	r0, r4
   24d20:	sub	sp, fp, #28
   24d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24d28:	mov	r0, r5
   24d2c:	mov	r1, r7
   24d30:	mov	r2, r6
   24d34:	mov	r3, #23
   24d38:	bl	3454c <flatcc_json_parser_set_error@@Base>
   24d3c:	mov	r4, r0
   24d40:	mov	r0, r4
   24d44:	sub	sp, fp, #28
   24d48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24d4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24d50:	add	fp, sp, #28
   24d54:	sub	sp, sp, #12
   24d58:	mov	sl, r1
   24d5c:	sub	r1, r2, r1
   24d60:	cmp	r1, #8
   24d64:	movcs	r1, #8
   24d68:	sub	r5, r1, #1
   24d6c:	cmp	r5, #7
   24d70:	bhi	24fa0 <main@@Base+0xf250>
   24d74:	str	r3, [sp, #8]
   24d78:	add	r7, pc, #32
   24d7c:	mov	r8, #0
   24d80:	mov	ip, #0
   24d84:	mov	lr, #0
   24d88:	mov	r9, #0
   24d8c:	mov	r6, #0
   24d90:	mov	r1, #0
   24d94:	mov	r3, #0
   24d98:	mov	r4, #0
   24d9c:	ldr	pc, [r7, r5, lsl #2]
   24da0:	andeq	r4, r2, r4, lsl #28
   24da4:	strdeq	r4, [r2], -ip
   24da8:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   24dac:	andeq	r4, r2, ip, ror #27
   24db0:	andeq	r4, r2, r0, ror #27
   24db4:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   24db8:	andeq	r4, r2, r4, asr #27
   24dbc:	andeq	r4, r2, r0, asr #27
   24dc0:	ldrb	ip, [sl, #7]
   24dc4:	ldrb	r1, [sl, #6]
   24dc8:	mov	lr, r8
   24dcc:	orr	r1, ip, r1, lsl #8
   24dd0:	mov	r8, r1
   24dd4:	ldrb	r1, [sl, #5]
   24dd8:	mov	r9, lr
   24ddc:	orr	r8, r8, r1, lsl #16
   24de0:	ldrb	r1, [sl, #4]
   24de4:	mov	r6, r9
   24de8:	orr	r8, r8, r1, lsl #24
   24dec:	ldrb	r1, [sl, #3]
   24df0:	orr	r1, r1, r6
   24df4:	ldrb	r3, [sl, #2]
   24df8:	orr	r3, r1, r3, lsl #8
   24dfc:	ldrb	r1, [sl, #1]
   24e00:	orr	r4, r3, r1, lsl #16
   24e04:	movw	r1, #28276	; 0x6e74
   24e08:	movw	r7, #20577	; 0x5061
   24e0c:	ldr	r6, [fp, #12]
   24e10:	movt	r1, #29285	; 0x7265
   24e14:	movt	r7, #18798	; 0x496e
   24e18:	eor	r3, r8, r1
   24e1c:	ldrb	r1, [sl]
   24e20:	orr	r1, r4, r1, lsl #24
   24e24:	eor	r7, r1, r7
   24e28:	orrs	r3, r3, r7
   24e2c:	bne	24f54 <main@@Base+0xf204>
   24e30:	add	r8, sl, #8
   24e34:	sub	r1, r2, r8
   24e38:	cmp	r1, #8
   24e3c:	movcs	r1, #8
   24e40:	sub	r7, r1, #1
   24e44:	cmp	r7, #7
   24e48:	bhi	24fa0 <main@@Base+0xf250>
   24e4c:	str	r0, [sp, #4]
   24e50:	add	lr, pc, #32
   24e54:	mov	r6, #0
   24e58:	mov	r0, #0
   24e5c:	mov	r1, #0
   24e60:	mov	r5, #0
   24e64:	mov	r4, #0
   24e68:	mov	r3, #0
   24e6c:	mov	ip, #0
   24e70:	mov	r9, #0
   24e74:	ldr	pc, [lr, r7, lsl #2]
   24e78:	ldrdeq	r4, [r2], -ip
   24e7c:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   24e80:	andeq	r4, r2, ip, asr #29
   24e84:	andeq	r4, r2, r4, asr #29
   24e88:			; <UNDEFINED> instruction: 0x00024eb8
   24e8c:	andeq	r4, r2, ip, lsr #29
   24e90:	muleq	r2, ip, lr
   24e94:	muleq	r2, r8, lr
   24e98:	ldrb	r0, [sl, #15]
   24e9c:	ldrb	r1, [sl, #14]
   24ea0:	orr	r0, r0, r1, lsl #8
   24ea4:	mov	r1, r6
   24ea8:	mov	r6, r0
   24eac:	ldrb	r0, [sl, #13]
   24eb0:	mov	r5, r1
   24eb4:	orr	r6, r6, r0, lsl #16
   24eb8:	ldrb	r0, [sl, #12]
   24ebc:	mov	r4, r5
   24ec0:	orr	r6, r6, r0, lsl #24
   24ec4:	ldrb	r0, [sl, #11]
   24ec8:	orr	r3, r0, r4
   24ecc:	ldrb	r0, [sl, #10]
   24ed0:	orr	ip, r3, r0, lsl #8
   24ed4:	ldrb	r0, [sl, #9]
   24ed8:	orr	r9, ip, r0, lsl #16
   24edc:	ldrb	r1, [r8]
   24ee0:	movw	r0, #24931	; 0x6163
   24ee4:	movw	r3, #28005	; 0x6d65
   24ee8:	movt	r0, #29552	; 0x7370
   24eec:	movt	r3, #20065	; 0x4e61
   24ef0:	eor	r0, r6, r0
   24ef4:	orr	r1, r9, r1, lsl #24
   24ef8:	eor	r1, r1, r3
   24efc:	orrs	r0, r0, r1
   24f00:	bne	24fa0 <main@@Base+0xf250>
   24f04:	add	r6, sl, #16
   24f08:	sub	r0, r2, r6
   24f0c:	cmp	r0, #8
   24f10:	movcs	r0, #8
   24f14:	sub	r0, r0, #1
   24f18:	cmp	r0, #7
   24f1c:	bhi	24fa0 <main@@Base+0xf250>
   24f20:	ldrb	r0, [r6]
   24f24:	cmp	r0, #101	; 0x65
   24f28:	bne	24fa0 <main@@Base+0xf250>
   24f2c:	ldr	r0, [fp, #12]
   24f30:	mov	r1, r6
   24f34:	mov	r3, #1
   24f38:	mov	r8, #1
   24f3c:	str	r0, [sp]
   24f40:	ldr	r0, [sp, #4]
   24f44:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   24f48:	cmp	r0, r6
   24f4c:	bne	24f80 <main@@Base+0xf230>
   24f50:	b	24fa0 <main@@Base+0xf250>
   24f54:	movw	r3, #20037	; 0x4e45
   24f58:	movt	r3, #20047	; 0x4e4f
   24f5c:	teq	r1, r3
   24f60:	bne	24fa0 <main@@Base+0xf250>
   24f64:	mov	r1, sl
   24f68:	mov	r3, #4
   24f6c:	str	r6, [sp]
   24f70:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   24f74:	cmp	r0, sl
   24f78:	beq	24fa0 <main@@Base+0xf250>
   24f7c:	mov	r8, #0
   24f80:	mov	sl, r0
   24f84:	ldr	r0, [fp, #8]
   24f88:	mov	r1, #0
   24f8c:	str	r8, [r0]
   24f90:	str	r1, [r0, #4]
   24f94:	mov	r0, #0
   24f98:	ldr	r1, [sp, #8]
   24f9c:	str	r0, [r1]
   24fa0:	mov	r0, sl
   24fa4:	sub	sp, fp, #28
   24fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24fac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24fb0:	add	fp, sp, #28
   24fb4:	sub	sp, sp, #12
   24fb8:	mov	r5, r1
   24fbc:	sub	r1, r2, r1
   24fc0:	cmp	r1, #8
   24fc4:	movcs	r1, #8
   24fc8:	sub	r7, r1, #1
   24fcc:	cmp	r7, #7
   24fd0:	bhi	2514c <main@@Base+0xf3fc>
   24fd4:	str	r3, [sp, #8]
   24fd8:	add	r8, pc, #32
   24fdc:	mov	lr, #0
   24fe0:	mov	ip, #0
   24fe4:	mov	r9, #0
   24fe8:	mov	sl, #0
   24fec:	mov	r1, #0
   24ff0:	mov	r3, #0
   24ff4:	mov	r4, #0
   24ff8:	mov	r6, #0
   24ffc:	ldr	pc, [r8, r7, lsl #2]
   25000:	andeq	r5, r2, r4, rrx
   25004:	andeq	r5, r2, ip, asr r0
   25008:	andeq	r5, r2, r4, asr r0
   2500c:	andeq	r5, r2, ip, asr #32
   25010:	andeq	r5, r2, r0, asr #32
   25014:	andeq	r5, r2, r4, lsr r0
   25018:	andeq	r5, r2, r4, lsr #32
   2501c:	andeq	r5, r2, r0, lsr #32
   25020:	ldrb	ip, [r5, #7]
   25024:	ldrb	r1, [r5, #6]
   25028:	mov	r9, lr
   2502c:	orr	r1, ip, r1, lsl #8
   25030:	mov	lr, r1
   25034:	ldrb	r1, [r5, #5]
   25038:	mov	sl, r9
   2503c:	orr	lr, lr, r1, lsl #16
   25040:	ldrb	r1, [r5, #4]
   25044:	orr	lr, lr, r1, lsl #24
   25048:	mov	r1, sl
   2504c:	ldrb	r3, [r5, #3]
   25050:	orr	r3, r3, r1
   25054:	ldrb	r1, [r5, #2]
   25058:	orr	r4, r3, r1, lsl #8
   2505c:	ldrb	r1, [r5, #1]
   25060:	orr	r6, r4, r1, lsl #16
   25064:	ldrb	r1, [r5]
   25068:	ldr	r3, [fp, #12]
   2506c:	ldr	r8, [fp, #8]
   25070:	orr	r1, r6, r1, lsl #24
   25074:	movw	r6, #30769	; 0x7831
   25078:	movt	r6, #26725	; 0x6865
   2507c:	cmp	r1, r6
   25080:	bhi	250b0 <main@@Base+0xf360>
   25084:	teq	r1, r6
   25088:	bne	2514c <main@@Base+0xf3fc>
   2508c:	str	r3, [sp]
   25090:	mov	r1, r5
   25094:	mov	r3, #4
   25098:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   2509c:	cmp	r0, r5
   250a0:	beq	2514c <main@@Base+0xf3fc>
   250a4:	mov	r1, #0
   250a8:	mov	r2, #3
   250ac:	b	25138 <main@@Base+0xf3e8>
   250b0:	lsr	r4, lr, #16
   250b4:	movw	r7, #25959	; 0x6567
   250b8:	movw	r6, #26725	; 0x6865
   250bc:	orr	r4, r4, r1, lsl #16
   250c0:	movt	r7, #30830	; 0x786e
   250c4:	eor	r6, r6, r1, lsr #16
   250c8:	eor	r7, r4, r7
   250cc:	orrs	r7, r7, r6
   250d0:	bne	25104 <main@@Base+0xf3b4>
   250d4:	str	r3, [sp]
   250d8:	mov	r1, r5
   250dc:	mov	r3, #6
   250e0:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   250e4:	cmp	r0, r5
   250e8:	beq	2514c <main@@Base+0xf3fc>
   250ec:	mvn	r2, #1
   250f0:	mvn	r1, #0
   250f4:	str	r2, [r8]
   250f8:	str	r1, [r8, #4]
   250fc:	mov	r1, #1
   25100:	b	25140 <main@@Base+0xf3f0>
   25104:	movw	r7, #30770	; 0x7832
   25108:	movt	r7, #26725	; 0x6865
   2510c:	teq	r1, r7
   25110:	bne	2514c <main@@Base+0xf3fc>
   25114:	str	r3, [sp]
   25118:	mov	r1, r5
   2511c:	mov	r3, #4
   25120:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   25124:	cmp	r0, r5
   25128:	beq	2514c <main@@Base+0xf3fc>
   2512c:	movw	r2, #48815	; 0xbeaf
   25130:	mov	r1, #0
   25134:	movt	r2, #32431	; 0x7eaf
   25138:	str	r2, [r8]
   2513c:	str	r1, [r8, #4]
   25140:	ldr	r2, [sp, #8]
   25144:	mov	r5, r0
   25148:	str	r1, [r2]
   2514c:	mov	r0, r5
   25150:	sub	sp, fp, #28
   25154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25158:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2515c:	add	fp, sp, #28
   25160:	sub	sp, sp, #12
   25164:	mov	sl, r1
   25168:	sub	r1, r2, r1
   2516c:	cmp	r1, #8
   25170:	movcs	r1, #8
   25174:	sub	r4, r1, #1
   25178:	cmp	r4, #7
   2517c:	bhi	2533c <main@@Base+0xf5ec>
   25180:	str	r3, [sp, #8]
   25184:	add	r8, pc, #32
   25188:	mov	r9, #0
   2518c:	mov	ip, #0
   25190:	mov	lr, #0
   25194:	mov	r7, #0
   25198:	mov	r6, #0
   2519c:	mov	r3, #0
   251a0:	mov	r1, #0
   251a4:	mov	r5, #0
   251a8:	ldr	pc, [r8, r4, lsl #2]
   251ac:	andeq	r5, r2, r0, lsl r2
   251b0:	andeq	r5, r2, r8, lsl #4
   251b4:	andeq	r5, r2, r0, lsl #4
   251b8:	strdeq	r5, [r2], -r8
   251bc:	andeq	r5, r2, ip, ror #3
   251c0:	andeq	r5, r2, r0, ror #3
   251c4:	ldrdeq	r5, [r2], -r0
   251c8:	andeq	r5, r2, ip, asr #3
   251cc:	ldrb	ip, [sl, #7]
   251d0:	ldrb	r1, [sl, #6]
   251d4:	mov	lr, r9
   251d8:	orr	r1, ip, r1, lsl #8
   251dc:	mov	r9, r1
   251e0:	ldrb	r1, [sl, #5]
   251e4:	mov	r7, lr
   251e8:	orr	r9, r9, r1, lsl #16
   251ec:	ldrb	r1, [sl, #4]
   251f0:	mov	r6, r7
   251f4:	orr	r9, r9, r1, lsl #24
   251f8:	ldrb	r1, [sl, #3]
   251fc:	orr	r3, r1, r6
   25200:	ldrb	r1, [sl, #2]
   25204:	orr	r1, r3, r1, lsl #8
   25208:	ldrb	r3, [sl, #1]
   2520c:	orr	r5, r1, r3, lsl #16
   25210:	ldrb	r1, [sl]
   25214:	ldr	r3, [fp, #12]
   25218:	ldr	r6, [fp, #8]
   2521c:	orr	r7, r5, r1, lsl #24
   25220:	movw	r1, #29745	; 0x7431
   25224:	movt	r1, #26990	; 0x696e
   25228:	cmp	r7, r1
   2522c:	bhi	2525c <main@@Base+0xf50c>
   25230:	teq	r7, r1
   25234:	bne	2533c <main@@Base+0xf5ec>
   25238:	str	r3, [sp]
   2523c:	mov	r1, sl
   25240:	mov	r3, #4
   25244:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   25248:	cmp	r0, sl
   2524c:	beq	2533c <main@@Base+0xf5ec>
   25250:	mov	r1, #0
   25254:	mov	r2, #2
   25258:	b	252a8 <main@@Base+0xf558>
   2525c:	movw	r4, #0
   25260:	movw	r1, #29806	; 0x746e
   25264:	movt	r4, #25959	; 0x6567
   25268:	movt	r1, #26990	; 0x696e
   2526c:	subs	r5, r9, r4
   25270:	sbcs	r5, r7, r1
   25274:	bcs	252b4 <main@@Base+0xf564>
   25278:	movw	r1, #29746	; 0x7432
   2527c:	movt	r1, #26990	; 0x696e
   25280:	teq	r7, r1
   25284:	bne	2533c <main@@Base+0xf5ec>
   25288:	str	r3, [sp]
   2528c:	mov	r1, sl
   25290:	mov	r3, #4
   25294:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   25298:	cmp	r0, sl
   2529c:	beq	2533c <main@@Base+0xf5ec>
   252a0:	mov	r1, #0
   252a4:	mov	r2, #42	; 0x2a
   252a8:	str	r2, [r6]
   252ac:	str	r1, [r6, #4]
   252b0:	b	25330 <main@@Base+0xf5e0>
   252b4:	eor	r1, r7, r1
   252b8:	add	r7, r4, #12800	; 0x3200
   252bc:	bic	r5, r9, #255	; 0xff
   252c0:	eor	r7, r5, r7
   252c4:	orrs	r7, r7, r1
   252c8:	bne	252f4 <main@@Base+0xf5a4>
   252cc:	str	r3, [sp]
   252d0:	mov	r1, sl
   252d4:	mov	r3, #7
   252d8:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   252dc:	cmp	r0, sl
   252e0:	beq	2533c <main@@Base+0xf5ec>
   252e4:	mvn	r2, #1
   252e8:	mvn	r1, #0
   252ec:	orr	r2, r2, #1
   252f0:	b	25324 <main@@Base+0xf5d4>
   252f4:	bfc	r9, #0, #16
   252f8:	eor	r7, r9, r4
   252fc:	orrs	r1, r7, r1
   25300:	bne	2533c <main@@Base+0xf5ec>
   25304:	str	r3, [sp]
   25308:	mov	r1, sl
   2530c:	mov	r3, #6
   25310:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   25314:	cmp	r0, sl
   25318:	beq	2533c <main@@Base+0xf5ec>
   2531c:	mvn	r1, #0
   25320:	mvn	r2, #1
   25324:	str	r2, [r6]
   25328:	str	r1, [r6, #4]
   2532c:	mov	r1, #1
   25330:	ldr	r2, [sp, #8]
   25334:	mov	sl, r0
   25338:	str	r1, [r2]
   2533c:	mov	r0, sl
   25340:	sub	sp, fp, #28
   25344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25348:	push	{r4, r5, r6, r7, fp, lr}
   2534c:	add	fp, sp, #16
   25350:	sub	sp, sp, #8
   25354:	mov	r5, r1
   25358:	sub	r1, r2, r1
   2535c:	mov	r4, r3
   25360:	cmp	r1, #8
   25364:	movcs	r1, #8
   25368:	sub	r3, r1, #1
   2536c:	cmp	r3, #7
   25370:	bhi	25484 <main@@Base+0xf734>
   25374:	add	r7, pc, #4
   25378:	mov	r1, #0
   2537c:	ldr	pc, [r7, r3, lsl #2]
   25380:			; <UNDEFINED> instruction: 0x000253b8
   25384:			; <UNDEFINED> instruction: 0x000253b0
   25388:	andeq	r5, r2, r8, lsr #7
   2538c:	andeq	r5, r2, r0, lsr #7
   25390:	andeq	r5, r2, r0, lsr #7
   25394:	andeq	r5, r2, r0, lsr #7
   25398:	andeq	r5, r2, r0, lsr #7
   2539c:	andeq	r5, r2, r0, lsr #7
   253a0:	ldrb	r3, [r5, #3]
   253a4:	orr	r1, r3, r1
   253a8:	ldrb	r3, [r5, #2]
   253ac:	orr	r1, r1, r3, lsl #8
   253b0:	ldrb	r3, [r5, #1]
   253b4:	orr	r1, r1, r3, lsl #16
   253b8:	ldrb	r6, [r5]
   253bc:	ldr	r3, [fp, #12]
   253c0:	ldr	r7, [fp, #8]
   253c4:	orr	r1, r1, r6, lsl #24
   253c8:	movw	r6, #26417	; 0x6731
   253cc:	movt	r6, #28261	; 0x6e65
   253d0:	cmp	r1, r6
   253d4:	bhi	25404 <main@@Base+0xf6b4>
   253d8:	teq	r1, r6
   253dc:	bne	25484 <main@@Base+0xf734>
   253e0:	str	r3, [sp]
   253e4:	mov	r1, r5
   253e8:	mov	r3, #4
   253ec:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   253f0:	cmp	r0, r5
   253f4:	beq	25484 <main@@Base+0xf734>
   253f8:	mvn	r1, #0
   253fc:	mvn	r2, #11
   25400:	b	25470 <main@@Base+0xf720>
   25404:	movw	r6, #26418	; 0x6732
   25408:	movt	r6, #28261	; 0x6e65
   2540c:	teq	r1, r6
   25410:	beq	2544c <main@@Base+0xf6fc>
   25414:	movw	r6, #26419	; 0x6733
   25418:	movt	r6, #28261	; 0x6e65
   2541c:	teq	r1, r6
   25420:	bne	25484 <main@@Base+0xf734>
   25424:	str	r3, [sp]
   25428:	mov	r1, r5
   2542c:	mov	r3, #4
   25430:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   25434:	cmp	r0, r5
   25438:	beq	25484 <main@@Base+0xf734>
   2543c:	mvn	r2, #11
   25440:	mvn	r1, #0
   25444:	orr	r2, r2, #2
   25448:	b	25470 <main@@Base+0xf720>
   2544c:	str	r3, [sp]
   25450:	mov	r1, r5
   25454:	mov	r3, #4
   25458:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   2545c:	cmp	r0, r5
   25460:	beq	25484 <main@@Base+0xf734>
   25464:	mvn	r2, #11
   25468:	mvn	r1, #0
   2546c:	orr	r2, r2, #1
   25470:	str	r2, [r7]
   25474:	str	r1, [r7, #4]
   25478:	mov	r1, #1
   2547c:	mov	r5, r0
   25480:	str	r1, [r4]
   25484:	mov	r0, r5
   25488:	sub	sp, fp, #16
   2548c:	pop	{r4, r5, r6, r7, fp, pc}
   25490:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25494:	add	fp, sp, #28
   25498:	sub	sp, sp, #12
   2549c:	mov	sl, r1
   254a0:	sub	r1, r2, r1
   254a4:	cmp	r1, #8
   254a8:	movcs	r1, #8
   254ac:	sub	r6, r1, #1
   254b0:	cmp	r6, #7
   254b4:	bhi	25730 <main@@Base+0xf9e0>
   254b8:	str	r3, [sp, #8]
   254bc:	add	r9, pc, #32
   254c0:	mov	r1, #0
   254c4:	mov	ip, #0
   254c8:	mov	lr, #0
   254cc:	mov	r4, #0
   254d0:	mov	r7, #0
   254d4:	mov	r3, #0
   254d8:	mov	r5, #0
   254dc:	mov	r8, #0
   254e0:	ldr	pc, [r9, r6, lsl #2]
   254e4:	andeq	r5, r2, r8, asr #10
   254e8:	andeq	r5, r2, r0, asr #10
   254ec:	andeq	r5, r2, r8, lsr r5
   254f0:	andeq	r5, r2, r0, lsr r5
   254f4:	andeq	r5, r2, r4, lsr #10
   254f8:	andeq	r5, r2, r8, lsl r5
   254fc:	andeq	r5, r2, r8, lsl #10
   25500:	andeq	r5, r2, r4, lsl #10
   25504:	ldrb	ip, [sl, #7]
   25508:	ldrb	r3, [sl, #6]
   2550c:	mov	lr, r1
   25510:	orr	r3, ip, r3, lsl #8
   25514:	mov	r1, r3
   25518:	ldrb	r3, [sl, #5]
   2551c:	mov	r4, lr
   25520:	orr	r1, r1, r3, lsl #16
   25524:	ldrb	r3, [sl, #4]
   25528:	mov	r7, r4
   2552c:	orr	r1, r1, r3, lsl #24
   25530:	ldrb	r3, [sl, #3]
   25534:	orr	r3, r3, r7
   25538:	ldrb	r7, [sl, #2]
   2553c:	orr	r5, r3, r7, lsl #8
   25540:	ldrb	r3, [sl, #1]
   25544:	orr	r8, r5, r3, lsl #16
   25548:	ldrb	r3, [sl]
   2554c:	ldr	lr, [fp, #12]
   25550:	ldr	r9, [fp, #8]
   25554:	orr	r6, r8, r3, lsl #24
   25558:	movw	r3, #20036	; 0x4e44
   2555c:	movt	r3, #20047	; 0x4e4f
   25560:	cmp	r6, r3
   25564:	bhi	255c4 <main@@Base+0xf874>
   25568:	movw	r7, #28160	; 0x6e00
   2556c:	movw	r4, #28523	; 0x6f6b
   25570:	and	r3, r1, #-16777216	; 0xff000000
   25574:	movt	r7, #18017	; 0x4661
   25578:	movt	r4, #17007	; 0x426f
   2557c:	subs	r5, r1, r7
   25580:	sbcs	r5, r6, r4
   25584:	bcs	25610 <main@@Base+0xf8c0>
   25588:	movw	r1, #27756	; 0x6c6c
   2558c:	eor	r3, r3, #1694498816	; 0x65000000
   25590:	movt	r1, #16997	; 0x4265
   25594:	eor	r1, r6, r1
   25598:	orrs	r1, r3, r1
   2559c:	bne	25730 <main@@Base+0xf9e0>
   255a0:	mov	r1, sl
   255a4:	mov	r3, #5
   255a8:	str	lr, [sp]
   255ac:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   255b0:	cmp	r0, sl
   255b4:	beq	25730 <main@@Base+0xf9e0>
   255b8:	mov	r1, #0
   255bc:	mov	r2, #9
   255c0:	b	2571c <main@@Base+0xf9cc>
   255c4:	movw	r7, #26725	; 0x6865
   255c8:	mvn	r3, #-1912602624	; 0x8e000000
   255cc:	movt	r7, #20340	; 0x4f74
   255d0:	subs	r3, r3, r1
   255d4:	sbcs	r3, r7, r6
   255d8:	bcc	2564c <main@@Base+0xf8fc>
   255dc:	movw	r1, #20037	; 0x4e45
   255e0:	movt	r1, #20047	; 0x4e4f
   255e4:	teq	r6, r1
   255e8:	bne	25730 <main@@Base+0xf9e0>
   255ec:	mov	r1, sl
   255f0:	mov	r3, #4
   255f4:	str	lr, [sp]
   255f8:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   255fc:	cmp	r0, sl
   25600:	beq	25730 <main@@Base+0xf9e0>
   25604:	mov	r1, #0
   25608:	str	r1, [r9]
   2560c:	b	25720 <main@@Base+0xf9d0>
   25610:	movw	r5, #19553	; 0x4c61
   25614:	eor	r3, r3, #1845493760	; 0x6e000000
   25618:	movt	r5, #19829	; 0x4d75
   2561c:	eor	r5, r6, r5
   25620:	orrs	r3, r3, r5
   25624:	bne	256a0 <main@@Base+0xf950>
   25628:	mov	r1, sl
   2562c:	mov	r3, #5
   25630:	str	lr, [sp]
   25634:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   25638:	cmp	r0, sl
   2563c:	beq	25730 <main@@Base+0xf9e0>
   25640:	mov	r1, #0
   25644:	mov	r2, #2
   25648:	b	2571c <main@@Base+0xf9cc>
   2564c:	movw	r4, #25964	; 0x656c
   25650:	movw	ip, #28789	; 0x7075
   25654:	movt	r4, #28282	; 0x6e7a
   25658:	movt	ip, #21089	; 0x5261
   2565c:	subs	r3, r1, r4
   25660:	sbcs	r3, r6, ip
   25664:	bcs	256d8 <main@@Base+0xf988>
   25668:	and	r1, r1, #-16777216	; 0xff000000
   2566c:	eor	r3, r6, r7
   25670:	eor	r1, r1, #1912602624	; 0x72000000
   25674:	orrs	r1, r1, r3
   25678:	bne	25730 <main@@Base+0xf9e0>
   2567c:	mov	r1, sl
   25680:	mov	r3, #5
   25684:	str	lr, [sp]
   25688:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   2568c:	cmp	r0, sl
   25690:	beq	25730 <main@@Base+0xf9e0>
   25694:	mov	r1, #0
   25698:	mov	r2, #11
   2569c:	b	2571c <main@@Base+0xf9cc>
   256a0:	bic	r1, r1, #255	; 0xff
   256a4:	eor	r3, r6, r4
   256a8:	eor	r1, r1, r7
   256ac:	orrs	r1, r1, r3
   256b0:	bne	25730 <main@@Base+0xf9e0>
   256b4:	mov	r1, sl
   256b8:	mov	r3, #7
   256bc:	str	lr, [sp]
   256c0:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   256c4:	cmp	r0, sl
   256c8:	beq	25730 <main@@Base+0xf9e0>
   256cc:	mov	r1, #0
   256d0:	mov	r2, #10
   256d4:	b	2571c <main@@Base+0xf9cc>
   256d8:	lsr	r5, r1, #16
   256dc:	movw	r7, #25956	; 0x6564
   256e0:	movw	r3, #21870	; 0x556e
   256e4:	orr	r5, r5, r6, lsl #16
   256e8:	movt	r7, #30067	; 0x7573
   256ec:	eor	r3, r3, r6, lsr #16
   256f0:	eor	r5, r5, r7
   256f4:	orrs	r3, r5, r3
   256f8:	bne	2573c <main@@Base+0xf9ec>
   256fc:	mov	r1, sl
   25700:	mov	r3, #6
   25704:	str	lr, [sp]
   25708:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   2570c:	cmp	r0, sl
   25710:	beq	25730 <main@@Base+0xf9e0>
   25714:	mov	r1, #0
   25718:	mov	r2, #255	; 0xff
   2571c:	str	r2, [r9]
   25720:	str	r1, [r9, #4]
   25724:	ldr	r2, [sp, #8]
   25728:	str	r1, [r2]
   2572c:	mov	sl, r0
   25730:	mov	r0, sl
   25734:	sub	sp, fp, #28
   25738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2573c:	eor	r1, r1, r4
   25740:	eor	r3, r6, ip
   25744:	orrs	r1, r1, r3
   25748:	bne	25730 <main@@Base+0xf9e0>
   2574c:	mov	r1, sl
   25750:	mov	r3, #8
   25754:	str	lr, [sp]
   25758:	mov	r4, #8
   2575c:	bl	34c78 <flatcc_json_parser_match_constant@@Base>
   25760:	cmp	r0, sl
   25764:	beq	25730 <main@@Base+0xf9e0>
   25768:	mov	r5, #0
   2576c:	strd	r4, [r9]
   25770:	ldr	r1, [sp, #8]
   25774:	str	r5, [r1]
   25778:	b	2572c <main@@Base+0xf9dc>
   2577c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25780:	add	fp, sp, #28
   25784:	sub	sp, sp, #36	; 0x24
   25788:	mov	r5, r0
   2578c:	mov	r0, #0
   25790:	mov	r4, r1
   25794:	mov	r1, #4
   25798:	mov	r7, r3
   2579c:	mov	r8, r2
   257a0:	str	r0, [r3]
   257a4:	ldr	r0, [r5]
   257a8:	bl	2fa58 <flatcc_builder_start_table@@Base>
   257ac:	cmp	r0, #0
   257b0:	beq	257d8 <main@@Base+0xfa88>
   257b4:	mov	r0, r5
   257b8:	mov	r1, r4
   257bc:	mov	r2, r8
   257c0:	mov	r3, #33	; 0x21
   257c4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   257c8:	mov	r4, r0
   257cc:	mov	r0, r4
   257d0:	sub	sp, fp, #28
   257d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   257d8:	add	r0, sp, #28
   257dc:	mov	r1, r4
   257e0:	mov	r2, r8
   257e4:	mov	r3, #1
   257e8:	str	r0, [sp]
   257ec:	mov	r0, r5
   257f0:	bl	374b8 <flatcc_json_parser_prepare_unions@@Base>
   257f4:	cmp	r0, r8
   257f8:	beq	257b4 <main@@Base+0xfa64>
   257fc:	cmp	r4, r8
   25800:	beq	25840 <main@@Base+0xfaf0>
   25804:	ldrb	r0, [r4]
   25808:	cmp	r0, #123	; 0x7b
   2580c:	bne	25840 <main@@Base+0xfaf0>
   25810:	add	r1, r4, #1
   25814:	sub	r0, r8, r1
   25818:	cmp	r0, #2
   2581c:	blt	258a4 <main@@Base+0xfb54>
   25820:	ldrb	r0, [r1]
   25824:	cmp	r0, #32
   25828:	bls	25894 <main@@Base+0xfb44>
   2582c:	mov	r4, r1
   25830:	cmp	r4, r8
   25834:	mov	r2, r8
   25838:	bne	258c0 <main@@Base+0xfb70>
   2583c:	b	25900 <main@@Base+0xfbb0>
   25840:	mov	r0, r5
   25844:	mov	r1, r4
   25848:	mov	r2, r8
   2584c:	mov	r3, #21
   25850:	bl	3454c <flatcc_json_parser_set_error@@Base>
   25854:	mov	r4, r0
   25858:	ldr	r0, [r5, #20]
   2585c:	cmp	r0, #0
   25860:	bne	257b4 <main@@Base+0xfa64>
   25864:	ldr	r3, [sp, #28]
   25868:	mov	r0, r5
   2586c:	mov	r1, r4
   25870:	mov	r2, r8
   25874:	bl	37548 <flatcc_json_parser_finalize_unions@@Base>
   25878:	mov	r4, r0
   2587c:	ldr	r0, [r5]
   25880:	bl	30400 <flatcc_builder_end_table@@Base>
   25884:	cmp	r0, #0
   25888:	str	r0, [r7]
   2588c:	bne	257cc <main@@Base+0xfa7c>
   25890:	b	257b4 <main@@Base+0xfa64>
   25894:	bne	258a4 <main@@Base+0xfb54>
   25898:	ldrb	r0, [r4, #2]!
   2589c:	cmp	r0, #32
   258a0:	bhi	258b4 <main@@Base+0xfb64>
   258a4:	mov	r0, r5
   258a8:	mov	r2, r8
   258ac:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   258b0:	mov	r4, r0
   258b4:	cmp	r4, r8
   258b8:	mov	r2, r8
   258bc:	beq	25900 <main@@Base+0xfbb0>
   258c0:	ldrb	r0, [r4]
   258c4:	cmp	r0, #125	; 0x7d
   258c8:	bne	258fc <main@@Base+0xfbac>
   258cc:	add	r1, r4, #1
   258d0:	sub	r0, r8, r1
   258d4:	cmp	r0, #2
   258d8:	blt	2612c <main@@Base+0x103dc>
   258dc:	ldrb	r0, [r1]
   258e0:	cmp	r0, #32
   258e4:	bhi	260e4 <main@@Base+0x10394>
   258e8:	bne	2612c <main@@Base+0x103dc>
   258ec:	ldrb	r0, [r4, #2]!
   258f0:	cmp	r0, #32
   258f4:	bhi	25858 <main@@Base+0xfb08>
   258f8:	b	2612c <main@@Base+0x103dc>
   258fc:	mov	r2, r4
   25900:	str	r7, [sp, #20]
   25904:	cmp	r2, r8
   25908:	mov	r9, r8
   2590c:	beq	2593c <main@@Base+0xfbec>
   25910:	ldrb	r0, [r2]
   25914:	cmp	r0, #34	; 0x22
   25918:	bne	25924 <main@@Base+0xfbd4>
   2591c:	add	r9, r2, #1
   25920:	b	2593c <main@@Base+0xfbec>
   25924:	mov	r1, r2
   25928:	mov	r0, r5
   2592c:	mov	r2, r8
   25930:	mov	r3, #5
   25934:	bl	3454c <flatcc_json_parser_set_error@@Base>
   25938:	mov	r9, r0
   2593c:	sub	r1, r8, r9
   25940:	mov	r0, #8
   25944:	cmp	r1, #8
   25948:	movcc	r0, r1
   2594c:	sub	r2, r0, #1
   25950:	cmp	r2, #7
   25954:	bhi	26070 <main@@Base+0x10320>
   25958:	str	r1, [sp, #24]
   2595c:	add	r0, pc, #36	; 0x24
   25960:	mov	lr, r5
   25964:	mov	sl, #0
   25968:	mov	ip, #0
   2596c:	mov	r6, #0
   25970:	mov	r1, #0
   25974:	mov	r3, #0
   25978:	mov	r5, #0
   2597c:	mov	r7, #0
   25980:	mov	r4, #0
   25984:	ldr	pc, [r0, r2, lsl #2]
   25988:	andeq	r5, r2, ip, ror #19
   2598c:	andeq	r5, r2, r4, ror #19
   25990:	ldrdeq	r5, [r2], -ip
   25994:	ldrdeq	r5, [r2], -r4
   25998:	andeq	r5, r2, r8, asr #19
   2599c:			; <UNDEFINED> instruction: 0x000259bc
   259a0:	andeq	r5, r2, ip, lsr #19
   259a4:	andeq	r5, r2, r8, lsr #19
   259a8:	ldrb	ip, [r9, #7]
   259ac:	ldrb	r0, [r9, #6]
   259b0:	mov	r6, sl
   259b4:	orr	r0, ip, r0, lsl #8
   259b8:	mov	sl, r0
   259bc:	ldrb	r0, [r9, #5]
   259c0:	mov	r1, r6
   259c4:	orr	sl, sl, r0, lsl #16
   259c8:	ldrb	r0, [r9, #4]
   259cc:	mov	r3, r1
   259d0:	orr	sl, sl, r0, lsl #24
   259d4:	ldrb	r0, [r9, #3]
   259d8:	orr	r5, r0, r3
   259dc:	ldrb	r0, [r9, #2]
   259e0:	orr	r7, r5, r0, lsl #8
   259e4:	ldrb	r0, [r9, #1]
   259e8:	orr	r4, r7, r0, lsl #16
   259ec:	movw	r2, #30976	; 0x7900
   259f0:	movt	r2, #24942	; 0x616e
   259f4:	add	r0, r2, #95	; 0x5f
   259f8:	eor	r1, sl, r0
   259fc:	ldrb	r0, [r9]
   25a00:	orr	r4, r4, r0, lsl #24
   25a04:	movw	r0, #28281	; 0x6e79
   25a08:	movt	r0, #28001	; 0x6d61
   25a0c:	eor	r0, r4, r0
   25a10:	orrs	r1, r1, r0
   25a14:	bne	25ad8 <main@@Base+0xfd88>
   25a18:	add	r6, r9, #8
   25a1c:	ldr	r7, [sp, #20]
   25a20:	mov	r1, #8
   25a24:	mov	r5, lr
   25a28:	sub	r0, r8, r6
   25a2c:	cmp	r0, #8
   25a30:	movcc	r1, r0
   25a34:	sub	r2, r1, #1
   25a38:	cmp	r2, #7
   25a3c:	bhi	25ce4 <main@@Base+0xff94>
   25a40:	add	r3, pc, #4
   25a44:	mov	r1, #0
   25a48:	ldr	pc, [r3, r2, lsl #2]
   25a4c:	andeq	r5, r2, r0, lsl #21
   25a50:	andeq	r5, r2, r8, ror sl
   25a54:	andeq	r5, r2, r0, ror sl
   25a58:	andeq	r5, r2, ip, ror #20
   25a5c:	andeq	r5, r2, ip, ror #20
   25a60:	andeq	r5, r2, ip, ror #20
   25a64:	andeq	r5, r2, ip, ror #20
   25a68:	andeq	r5, r2, ip, ror #20
   25a6c:	ldrb	r1, [r9, #11]
   25a70:	ldrb	r2, [r9, #10]
   25a74:	orr	r1, r1, r2, lsl #8
   25a78:	ldrb	r2, [r9, #9]
   25a7c:	orr	r1, r1, r2, lsl #16
   25a80:	ldrb	r2, [r6]
   25a84:	orr	r1, r1, r2, lsl #24
   25a88:	movw	r2, #28773	; 0x7065
   25a8c:	movt	r2, #29817	; 0x7479
   25a90:	teq	r1, r2
   25a94:	bne	25ce4 <main@@Base+0xff94>
   25a98:	cmp	r0, #5
   25a9c:	blt	25ce4 <main@@Base+0xff94>
   25aa0:	ldrb	r0, [r9, #12]
   25aa4:	cmp	r0, #34	; 0x22
   25aa8:	bne	25ce4 <main@@Base+0xff94>
   25aac:	add	r1, r9, #13
   25ab0:	sub	r0, r8, r1
   25ab4:	cmp	r0, #2
   25ab8:	blt	25c98 <main@@Base+0xff48>
   25abc:	ldrb	r0, [r1]
   25ac0:	cmp	r0, #32
   25ac4:	bls	25c88 <main@@Base+0xff38>
   25ac8:	mov	r9, r1
   25acc:	cmp	r9, r8
   25ad0:	bne	25cb0 <main@@Base+0xff60>
   25ad4:	b	25cf0 <main@@Base+0xffa0>
   25ad8:	ldr	r6, [sp, #24]
   25adc:	bic	r1, sl, #255	; 0xff
   25ae0:	mov	r5, lr
   25ae4:	eor	r1, r1, r2
   25ae8:	orrs	r0, r1, r0
   25aec:	bne	25b9c <main@@Base+0xfe4c>
   25af0:	cmp	r6, #8
   25af4:	mov	r1, r9
   25af8:	blt	25e24 <main@@Base+0x100d4>
   25afc:	ldrb	r0, [r9, #7]
   25b00:	mov	r1, r9
   25b04:	cmp	r0, #34	; 0x22
   25b08:	bne	25e24 <main@@Base+0x100d4>
   25b0c:	add	r2, r9, #8
   25b10:	sub	r0, r8, r2
   25b14:	cmp	r0, #2
   25b18:	blt	25b4c <main@@Base+0xfdfc>
   25b1c:	ldrb	r0, [r2]
   25b20:	cmp	r0, #32
   25b24:	bls	25b38 <main@@Base+0xfde8>
   25b28:	mov	r1, r2
   25b2c:	cmp	r1, r8
   25b30:	bne	25b68 <main@@Base+0xfe18>
   25b34:	b	25c74 <main@@Base+0xff24>
   25b38:	bne	25b4c <main@@Base+0xfdfc>
   25b3c:	mov	r1, r9
   25b40:	ldrb	r0, [r1, #9]!
   25b44:	cmp	r0, #32
   25b48:	bhi	25b60 <main@@Base+0xfe10>
   25b4c:	mov	r1, r2
   25b50:	mov	r0, r5
   25b54:	mov	r2, r8
   25b58:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   25b5c:	mov	r1, r0
   25b60:	cmp	r1, r8
   25b64:	beq	25c74 <main@@Base+0xff24>
   25b68:	ldrb	r0, [r1]
   25b6c:	cmp	r0, #58	; 0x3a
   25b70:	bne	25c74 <main@@Base+0xff24>
   25b74:	add	r2, r1, #1
   25b78:	sub	r0, r8, r2
   25b7c:	cmp	r0, #2
   25b80:	blt	25e10 <main@@Base+0x100c0>
   25b84:	ldrb	r0, [r2]
   25b88:	cmp	r0, #32
   25b8c:	bls	25e00 <main@@Base+0x100b0>
   25b90:	mov	r1, r2
   25b94:	cmp	r9, r1
   25b98:	bne	25e2c <main@@Base+0x100dc>
   25b9c:	lsr	r1, sl, #16
   25ba0:	movw	r2, #27000	; 0x6978
   25ba4:	movw	r0, #28786	; 0x7072
   25ba8:	orr	r1, r1, r4, lsl #16
   25bac:	movt	r2, #25958	; 0x6566
   25bb0:	eor	r0, r0, r4, lsr #16
   25bb4:	eor	r1, r1, r2
   25bb8:	orrs	r0, r1, r0
   25bbc:	bne	25c0c <main@@Base+0xfebc>
   25bc0:	ldr	r7, [sp, #20]
   25bc4:	cmp	r6, #7
   25bc8:	mov	r1, r9
   25bcc:	blt	25fbc <main@@Base+0x1026c>
   25bd0:	ldrb	r0, [r9, #6]
   25bd4:	mov	r1, r9
   25bd8:	cmp	r0, #34	; 0x22
   25bdc:	bne	25fbc <main@@Base+0x1026c>
   25be0:	add	r2, r9, #7
   25be4:	sub	r0, r8, r2
   25be8:	cmp	r0, #2
   25bec:	blt	25d1c <main@@Base+0xffcc>
   25bf0:	ldrb	r0, [r2]
   25bf4:	cmp	r0, #32
   25bf8:	bls	25d08 <main@@Base+0xffb8>
   25bfc:	mov	r1, r2
   25c00:	cmp	r1, r8
   25c04:	bne	25d38 <main@@Base+0xffe8>
   25c08:	b	25d70 <main@@Base+0x10020>
   25c0c:	movw	r0, #30313	; 0x7669
   25c10:	ldr	r7, [sp, #20]
   25c14:	and	r1, sl, #-16777216	; 0xff000000
   25c18:	movt	r0, #28015	; 0x6d6f
   25c1c:	eor	r1, r1, #1694498816	; 0x65000000
   25c20:	eor	r0, r4, r0
   25c24:	orrs	r0, r1, r0
   25c28:	bne	26070 <main@@Base+0x10320>
   25c2c:	cmp	r6, #6
   25c30:	mov	r1, r9
   25c34:	blt	26020 <main@@Base+0x102d0>
   25c38:	ldrb	r0, [r9, #5]
   25c3c:	mov	r1, r9
   25c40:	cmp	r0, #34	; 0x22
   25c44:	bne	26020 <main@@Base+0x102d0>
   25c48:	add	r2, r9, #6
   25c4c:	sub	r0, r8, r2
   25c50:	cmp	r0, #2
   25c54:	blt	25d98 <main@@Base+0x10048>
   25c58:	ldrb	r0, [r2]
   25c5c:	cmp	r0, #32
   25c60:	bls	25d84 <main@@Base+0x10034>
   25c64:	mov	r1, r2
   25c68:	cmp	r1, r8
   25c6c:	bne	25db4 <main@@Base+0x10064>
   25c70:	b	25dec <main@@Base+0x1009c>
   25c74:	mov	r0, r5
   25c78:	mov	r2, r8
   25c7c:	mov	r3, #4
   25c80:	bl	3454c <flatcc_json_parser_set_error@@Base>
   25c84:	b	25e20 <main@@Base+0x100d0>
   25c88:	bne	25c98 <main@@Base+0xff48>
   25c8c:	ldrb	r0, [r9, #14]!
   25c90:	cmp	r0, #32
   25c94:	bhi	25ca8 <main@@Base+0xff58>
   25c98:	mov	r0, r5
   25c9c:	mov	r2, r8
   25ca0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   25ca4:	mov	r9, r0
   25ca8:	cmp	r9, r8
   25cac:	beq	25cf0 <main@@Base+0xffa0>
   25cb0:	ldrb	r0, [r9]
   25cb4:	cmp	r0, #58	; 0x3a
   25cb8:	bne	25cf0 <main@@Base+0xffa0>
   25cbc:	add	r1, r9, #1
   25cc0:	sub	r0, r8, r1
   25cc4:	cmp	r0, #2
   25cc8:	blt	25f24 <main@@Base+0x101d4>
   25ccc:	ldrb	r0, [r1]
   25cd0:	cmp	r0, #32
   25cd4:	bls	25f14 <main@@Base+0x101c4>
   25cd8:	mov	r9, r1
   25cdc:	cmp	r6, r9
   25ce0:	bne	25f3c <main@@Base+0x101ec>
   25ce4:	mov	r0, r5
   25ce8:	mov	r1, r6
   25cec:	b	26078 <main@@Base+0x10328>
   25cf0:	mov	r0, r5
   25cf4:	mov	r1, r9
   25cf8:	mov	r2, r8
   25cfc:	mov	r3, #4
   25d00:	bl	3454c <flatcc_json_parser_set_error@@Base>
   25d04:	b	25f30 <main@@Base+0x101e0>
   25d08:	bne	25d1c <main@@Base+0xffcc>
   25d0c:	mov	r1, r9
   25d10:	ldrb	r0, [r1, #8]!
   25d14:	cmp	r0, #32
   25d18:	bhi	25d30 <main@@Base+0xffe0>
   25d1c:	mov	r1, r2
   25d20:	mov	r0, r5
   25d24:	mov	r2, r8
   25d28:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   25d2c:	mov	r1, r0
   25d30:	cmp	r1, r8
   25d34:	beq	25d70 <main@@Base+0x10020>
   25d38:	ldrb	r0, [r1]
   25d3c:	cmp	r0, #58	; 0x3a
   25d40:	bne	25d70 <main@@Base+0x10020>
   25d44:	add	r2, r1, #1
   25d48:	sub	r0, r8, r2
   25d4c:	cmp	r0, #2
   25d50:	blt	25fa8 <main@@Base+0x10258>
   25d54:	ldrb	r0, [r2]
   25d58:	cmp	r0, #32
   25d5c:	bls	25f98 <main@@Base+0x10248>
   25d60:	mov	r1, r2
   25d64:	cmp	r9, r1
   25d68:	bne	25fc4 <main@@Base+0x10274>
   25d6c:	b	26070 <main@@Base+0x10320>
   25d70:	mov	r0, r5
   25d74:	mov	r2, r8
   25d78:	mov	r3, #4
   25d7c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   25d80:	b	25fb8 <main@@Base+0x10268>
   25d84:	bne	25d98 <main@@Base+0x10048>
   25d88:	mov	r1, r9
   25d8c:	ldrb	r0, [r1, #7]!
   25d90:	cmp	r0, #32
   25d94:	bhi	25dac <main@@Base+0x1005c>
   25d98:	mov	r1, r2
   25d9c:	mov	r0, r5
   25da0:	mov	r2, r8
   25da4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   25da8:	mov	r1, r0
   25dac:	cmp	r1, r8
   25db0:	beq	25dec <main@@Base+0x1009c>
   25db4:	ldrb	r0, [r1]
   25db8:	cmp	r0, #58	; 0x3a
   25dbc:	bne	25dec <main@@Base+0x1009c>
   25dc0:	add	r2, r1, #1
   25dc4:	sub	r0, r8, r2
   25dc8:	cmp	r0, #2
   25dcc:	blt	2600c <main@@Base+0x102bc>
   25dd0:	ldrb	r0, [r2]
   25dd4:	cmp	r0, #32
   25dd8:	bls	25ffc <main@@Base+0x102ac>
   25ddc:	mov	r1, r2
   25de0:	cmp	r9, r1
   25de4:	bne	26028 <main@@Base+0x102d8>
   25de8:	b	26070 <main@@Base+0x10320>
   25dec:	mov	r0, r5
   25df0:	mov	r2, r8
   25df4:	mov	r3, #4
   25df8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   25dfc:	b	2601c <main@@Base+0x102cc>
   25e00:	bne	25e10 <main@@Base+0x100c0>
   25e04:	ldrb	r0, [r1, #2]!
   25e08:	cmp	r0, #32
   25e0c:	bhi	25e24 <main@@Base+0x100d4>
   25e10:	mov	r1, r2
   25e14:	mov	r0, r5
   25e18:	mov	r2, r8
   25e1c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   25e20:	mov	r1, r0
   25e24:	cmp	r9, r1
   25e28:	beq	25b9c <main@@Base+0xfe4c>
   25e2c:	ldr	r0, [sp, #28]
   25e30:	mov	r2, #3
   25e34:	mov	r3, #0
   25e38:	str	r2, [sp]
   25e3c:	mov	r2, r8
   25e40:	str	r0, [sp, #4]
   25e44:	movw	r0, #11104	; 0x2b60
   25e48:	movt	r0, #2
   25e4c:	str	r0, [sp, #8]
   25e50:	mov	r0, r5
   25e54:	bl	37ccc <flatcc_json_parser_union_vector@@Base>
   25e58:	ldr	r7, [sp, #20]
   25e5c:	mov	r4, r0
   25e60:	sub	r0, r8, r4
   25e64:	cmp	r0, #2
   25e68:	blt	26090 <main@@Base+0x10340>
   25e6c:	ldrb	r0, [r4]
   25e70:	cmp	r0, #32
   25e74:	bls	25ec8 <main@@Base+0x10178>
   25e78:	mov	r2, r4
   25e7c:	cmp	r2, r8
   25e80:	beq	260ac <main@@Base+0x1035c>
   25e84:	ldrb	r0, [r2]
   25e88:	cmp	r0, #44	; 0x2c
   25e8c:	bne	260c0 <main@@Base+0x10370>
   25e90:	add	r1, r2, #1
   25e94:	sub	r0, r8, r1
   25e98:	cmp	r0, #2
   25e9c:	blt	25ef8 <main@@Base+0x101a8>
   25ea0:	ldrb	r0, [r1]
   25ea4:	cmp	r0, #32
   25ea8:	bls	25ee8 <main@@Base+0x10198>
   25eac:	mov	r2, r1
   25eb0:	cmp	r2, r8
   25eb4:	beq	260f8 <main@@Base+0x103a8>
   25eb8:	ldrb	r0, [r2]
   25ebc:	cmp	r0, #125	; 0x7d
   25ec0:	bne	25904 <main@@Base+0xfbb4>
   25ec4:	b	260c8 <main@@Base+0x10378>
   25ec8:	bne	26090 <main@@Base+0x10340>
   25ecc:	mov	r2, r4
   25ed0:	ldrb	r0, [r2, #1]!
   25ed4:	cmp	r0, #32
   25ed8:	bls	26090 <main@@Base+0x10340>
   25edc:	cmp	r2, r8
   25ee0:	bne	25e84 <main@@Base+0x10134>
   25ee4:	b	260ac <main@@Base+0x1035c>
   25ee8:	bne	25ef8 <main@@Base+0x101a8>
   25eec:	ldrb	r0, [r2, #2]!
   25ef0:	cmp	r0, #32
   25ef4:	bhi	25f08 <main@@Base+0x101b8>
   25ef8:	mov	r0, r5
   25efc:	mov	r2, r8
   25f00:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   25f04:	mov	r2, r0
   25f08:	cmp	r2, r8
   25f0c:	bne	25eb8 <main@@Base+0x10168>
   25f10:	b	260f8 <main@@Base+0x103a8>
   25f14:	bne	25f24 <main@@Base+0x101d4>
   25f18:	ldrb	r0, [r9, #2]!
   25f1c:	cmp	r0, #32
   25f20:	bhi	25f34 <main@@Base+0x101e4>
   25f24:	mov	r0, r5
   25f28:	mov	r2, r8
   25f2c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   25f30:	mov	r9, r0
   25f34:	cmp	r6, r9
   25f38:	beq	25ce4 <main@@Base+0xff94>
   25f3c:	ldr	r0, [sp, #28]
   25f40:	mov	r1, #3
   25f44:	mov	r2, r8
   25f48:	mov	r3, #0
   25f4c:	str	r1, [sp]
   25f50:	mov	r1, r9
   25f54:	str	r0, [sp, #4]
   25f58:	movw	r0, #53368	; 0xd078
   25f5c:	movt	r0, #5
   25f60:	str	r0, [sp, #8]
   25f64:	movw	r0, #11104	; 0x2b60
   25f68:	movt	r0, #2
   25f6c:	str	r0, [sp, #12]
   25f70:	movw	r0, #24892	; 0x613c
   25f74:	movt	r0, #2
   25f78:	str	r0, [sp, #16]
   25f7c:	mov	r0, r5
   25f80:	bl	38248 <flatcc_json_parser_union_type_vector@@Base>
   25f84:	mov	r4, r0
   25f88:	sub	r0, r8, r4
   25f8c:	cmp	r0, #2
   25f90:	bge	25e6c <main@@Base+0x1011c>
   25f94:	b	26090 <main@@Base+0x10340>
   25f98:	bne	25fa8 <main@@Base+0x10258>
   25f9c:	ldrb	r0, [r1, #2]!
   25fa0:	cmp	r0, #32
   25fa4:	bhi	25fbc <main@@Base+0x1026c>
   25fa8:	mov	r1, r2
   25fac:	mov	r0, r5
   25fb0:	mov	r2, r8
   25fb4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   25fb8:	mov	r1, r0
   25fbc:	cmp	r9, r1
   25fc0:	beq	26070 <main@@Base+0x10320>
   25fc4:	mov	r0, r5
   25fc8:	mov	r2, r8
   25fcc:	add	r3, sp, #32
   25fd0:	bl	26150 <main@@Base+0x10400>
   25fd4:	ldr	r6, [sp, #32]
   25fd8:	mov	r4, r0
   25fdc:	cmp	r6, #0
   25fe0:	beq	257b4 <main@@Base+0xfa64>
   25fe4:	ldr	r0, [r5]
   25fe8:	mov	r1, #0
   25fec:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   25ff0:	cmp	r0, #0
   25ff4:	bne	2605c <main@@Base+0x1030c>
   25ff8:	b	257b4 <main@@Base+0xfa64>
   25ffc:	bne	2600c <main@@Base+0x102bc>
   26000:	ldrb	r0, [r1, #2]!
   26004:	cmp	r0, #32
   26008:	bhi	26020 <main@@Base+0x102d0>
   2600c:	mov	r1, r2
   26010:	mov	r0, r5
   26014:	mov	r2, r8
   26018:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2601c:	mov	r1, r0
   26020:	cmp	r9, r1
   26024:	beq	26070 <main@@Base+0x10320>
   26028:	mov	r0, r5
   2602c:	mov	r2, r8
   26030:	add	r3, sp, #32
   26034:	bl	29590 <main@@Base+0x13840>
   26038:	ldr	r6, [sp, #32]
   2603c:	mov	r4, r0
   26040:	cmp	r6, #0
   26044:	beq	257b4 <main@@Base+0xfa64>
   26048:	ldr	r0, [r5]
   2604c:	mov	r1, #1
   26050:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   26054:	cmp	r0, #0
   26058:	beq	257b4 <main@@Base+0xfa64>
   2605c:	str	r6, [r0]
   26060:	sub	r0, r8, r4
   26064:	cmp	r0, #2
   26068:	bge	25e6c <main@@Base+0x1011c>
   2606c:	b	26090 <main@@Base+0x10340>
   26070:	mov	r0, r5
   26074:	mov	r1, r9
   26078:	mov	r2, r8
   2607c:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   26080:	mov	r4, r0
   26084:	sub	r0, r8, r4
   26088:	cmp	r0, #2
   2608c:	bge	25e6c <main@@Base+0x1011c>
   26090:	mov	r0, r5
   26094:	mov	r1, r4
   26098:	mov	r2, r8
   2609c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   260a0:	mov	r2, r0
   260a4:	cmp	r2, r8
   260a8:	bne	25e84 <main@@Base+0x10134>
   260ac:	mov	r4, r8
   260b0:	ldr	r0, [r5, #20]
   260b4:	cmp	r0, #0
   260b8:	bne	257b4 <main@@Base+0xfa64>
   260bc:	b	25864 <main@@Base+0xfb14>
   260c0:	cmp	r0, #125	; 0x7d
   260c4:	bne	26104 <main@@Base+0x103b4>
   260c8:	add	r1, r2, #1
   260cc:	sub	r0, r8, r1
   260d0:	cmp	r0, #2
   260d4:	blt	2612c <main@@Base+0x103dc>
   260d8:	ldrb	r0, [r1]
   260dc:	cmp	r0, #32
   260e0:	bls	26118 <main@@Base+0x103c8>
   260e4:	mov	r4, r1
   260e8:	ldr	r0, [r5, #20]
   260ec:	cmp	r0, #0
   260f0:	bne	257b4 <main@@Base+0xfa64>
   260f4:	b	25864 <main@@Base+0xfb14>
   260f8:	mov	r0, r5
   260fc:	mov	r1, r8
   26100:	b	2610c <main@@Base+0x103bc>
   26104:	mov	r0, r5
   26108:	mov	r1, r2
   2610c:	mov	r2, r8
   26110:	mov	r3, #10
   26114:	b	25850 <main@@Base+0xfb00>
   26118:	bne	2612c <main@@Base+0x103dc>
   2611c:	ldrb	r0, [r2, #2]!
   26120:	mov	r4, r2
   26124:	cmp	r0, #32
   26128:	bhi	25858 <main@@Base+0xfb08>
   2612c:	mov	r0, r5
   26130:	mov	r2, r8
   26134:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   26138:	b	25854 <main@@Base+0xfb04>
   2613c:	cmp	r0, #5
   26140:	mov	r1, #0
   26144:	movwcc	r1, #1
   26148:	mov	r0, r1
   2614c:	bx	lr
   26150:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26154:	add	fp, sp, #28
   26158:	sub	sp, sp, #68	; 0x44
   2615c:	mov	r7, r0
   26160:	mov	r0, #0
   26164:	mov	r8, r1
   26168:	mov	r1, #3
   2616c:	mov	r4, r3
   26170:	mov	r9, r2
   26174:	str	r0, [r3]
   26178:	ldr	r0, [r7]
   2617c:	bl	2fa58 <flatcc_builder_start_table@@Base>
   26180:	cmp	r0, #0
   26184:	bne	261f0 <main@@Base+0x104a0>
   26188:	cmp	r8, r9
   2618c:	beq	261cc <main@@Base+0x1047c>
   26190:	ldrb	r0, [r8]
   26194:	cmp	r0, #123	; 0x7b
   26198:	bne	261cc <main@@Base+0x1047c>
   2619c:	add	r1, r8, #1
   261a0:	sub	r0, r9, r1
   261a4:	cmp	r0, #2
   261a8:	blt	26224 <main@@Base+0x104d4>
   261ac:	ldrb	r0, [r1]
   261b0:	cmp	r0, #32
   261b4:	bls	26214 <main@@Base+0x104c4>
   261b8:	mov	r8, r1
   261bc:	cmp	r8, r9
   261c0:	mov	r2, r9
   261c4:	bne	26240 <main@@Base+0x104f0>
   261c8:	b	26280 <main@@Base+0x10530>
   261cc:	mov	r0, r7
   261d0:	mov	r1, r8
   261d4:	mov	r2, r9
   261d8:	mov	r3, #21
   261dc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   261e0:	mov	r8, r0
   261e4:	ldr	r0, [r7, #20]
   261e8:	cmp	r0, #0
   261ec:	beq	294e0 <main@@Base+0x13790>
   261f0:	mov	r0, r7
   261f4:	mov	r1, r8
   261f8:	mov	r2, r9
   261fc:	mov	r3, #33	; 0x21
   26200:	bl	3454c <flatcc_json_parser_set_error@@Base>
   26204:	mov	r8, r0
   26208:	mov	r0, r8
   2620c:	sub	sp, fp, #28
   26210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26214:	bne	26224 <main@@Base+0x104d4>
   26218:	ldrb	r0, [r8, #2]!
   2621c:	cmp	r0, #32
   26220:	bhi	26234 <main@@Base+0x104e4>
   26224:	mov	r0, r7
   26228:	mov	r2, r9
   2622c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   26230:	mov	r8, r0
   26234:	cmp	r8, r9
   26238:	mov	r2, r9
   2623c:	beq	26280 <main@@Base+0x10530>
   26240:	ldrb	r0, [r8]
   26244:	cmp	r0, #125	; 0x7d
   26248:	bne	2627c <main@@Base+0x1052c>
   2624c:	add	r1, r8, #1
   26250:	sub	r0, r9, r1
   26254:	cmp	r0, #2
   26258:	blt	2952c <main@@Base+0x137dc>
   2625c:	ldrb	r0, [r1]
   26260:	cmp	r0, #32
   26264:	bhi	294d0 <main@@Base+0x13780>
   26268:	bne	2952c <main@@Base+0x137dc>
   2626c:	ldrb	r0, [r8, #2]!
   26270:	cmp	r0, #32
   26274:	bhi	261e4 <main@@Base+0x10494>
   26278:	b	2952c <main@@Base+0x137dc>
   2627c:	mov	r2, r8
   26280:	movw	r0, #53636	; 0xd184
   26284:	movw	r1, #25186	; 0x6262
   26288:	mov	r8, #8
   2628c:	str	r9, [sp, #24]
   26290:	str	r7, [sp, #32]
   26294:	str	r4, [sp, #28]
   26298:	movt	r0, #5
   2629c:	movt	r1, #25186	; 0x6262
   262a0:	add	r0, r0, #96	; 0x60
   262a4:	str	r0, [sp, #12]
   262a8:	movw	r0, #257	; 0x101
   262ac:	movt	r0, #257	; 0x101
   262b0:	add	r0, r1, r0
   262b4:	str	r0, [sp, #20]
   262b8:	movw	r0, #514	; 0x202
   262bc:	movt	r0, #514	; 0x202
   262c0:	add	r0, r1, r0
   262c4:	str	r0, [sp, #16]
   262c8:	cmp	r2, r9
   262cc:	mov	sl, r9
   262d0:	beq	26300 <main@@Base+0x105b0>
   262d4:	ldrb	r0, [r2]
   262d8:	cmp	r0, #34	; 0x22
   262dc:	bne	262e8 <main@@Base+0x10598>
   262e0:	add	sl, r2, #1
   262e4:	b	26300 <main@@Base+0x105b0>
   262e8:	mov	r1, r2
   262ec:	mov	r0, r7
   262f0:	mov	r2, r9
   262f4:	mov	r3, #5
   262f8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   262fc:	mov	sl, r0
   26300:	sub	r0, r9, sl
   26304:	cmp	r0, #8
   26308:	movcs	r0, r8
   2630c:	sub	r3, r0, #1
   26310:	cmp	r3, #7
   26314:	bhi	265ac <main@@Base+0x1085c>
   26318:	add	r5, pc, #32
   2631c:	mov	r0, #0
   26320:	mov	ip, #0
   26324:	mov	lr, #0
   26328:	mov	r7, #0
   2632c:	mov	r2, #0
   26330:	mov	r6, #0
   26334:	mov	r4, #0
   26338:	mov	r1, #0
   2633c:	ldr	pc, [r5, r3, lsl #2]
   26340:	andeq	r6, r2, r4, lsr #7
   26344:	muleq	r2, ip, r3
   26348:	muleq	r2, r4, r3
   2634c:	andeq	r6, r2, ip, lsl #7
   26350:	andeq	r6, r2, r0, lsl #7
   26354:	andeq	r6, r2, r4, ror r3
   26358:	andeq	r6, r2, r4, ror #6
   2635c:	andeq	r6, r2, r0, ror #6
   26360:	ldrb	ip, [sl, #7]
   26364:	ldrb	r1, [sl, #6]
   26368:	mov	lr, r0
   2636c:	orr	r1, ip, r1, lsl #8
   26370:	mov	r0, r1
   26374:	ldrb	r1, [sl, #5]
   26378:	mov	r7, lr
   2637c:	orr	r0, r0, r1, lsl #16
   26380:	ldrb	r1, [sl, #4]
   26384:	mov	r2, r7
   26388:	orr	r0, r0, r1, lsl #24
   2638c:	ldrb	r1, [sl, #3]
   26390:	orr	r6, r1, r2
   26394:	ldrb	r1, [sl, #2]
   26398:	orr	r4, r6, r1, lsl #8
   2639c:	ldrb	r1, [sl, #1]
   263a0:	orr	r1, r4, r1, lsl #16
   263a4:	movw	r2, #28526	; 0x6f6e
   263a8:	movt	r2, #27251	; 0x6a73
   263ac:	eor	r0, r0, r2
   263b0:	ldrb	r2, [sl]
   263b4:	orr	r1, r1, r2, lsl #24
   263b8:	movw	r2, #29556	; 0x7374
   263bc:	movt	r2, #29797	; 0x7465
   263c0:	eor	r1, r1, r2
   263c4:	orrs	r0, r0, r1
   263c8:	bne	265ac <main@@Base+0x1085c>
   263cc:	add	r1, sl, #8
   263d0:	sub	r0, r9, r1
   263d4:	cmp	r0, #8
   263d8:	movcs	r0, r8
   263dc:	sub	r7, r0, #1
   263e0:	cmp	r7, #7
   263e4:	bhi	265b8 <main@@Base+0x10868>
   263e8:	add	r0, pc, #32
   263ec:	mov	r8, #0
   263f0:	mov	ip, #0
   263f4:	mov	lr, #0
   263f8:	mov	r6, #0
   263fc:	mov	r3, #0
   26400:	mov	r5, #0
   26404:	mov	r2, #0
   26408:	mov	r4, #0
   2640c:	ldr	pc, [r0, r7, lsl #2]
   26410:	andeq	r6, r2, r4, ror r4
   26414:	andeq	r6, r2, ip, ror #8
   26418:	andeq	r6, r2, r4, ror #8
   2641c:	andeq	r6, r2, ip, asr r4
   26420:	andeq	r6, r2, r0, asr r4
   26424:	andeq	r6, r2, r4, asr #8
   26428:	andeq	r6, r2, r4, lsr r4
   2642c:	andeq	r6, r2, r0, lsr r4
   26430:	ldrb	ip, [sl, #15]
   26434:	ldrb	r0, [sl, #14]
   26438:	mov	lr, r8
   2643c:	orr	r0, ip, r0, lsl #8
   26440:	mov	r8, r0
   26444:	ldrb	r0, [sl, #13]
   26448:	mov	r6, lr
   2644c:	orr	r8, r8, r0, lsl #16
   26450:	ldrb	r0, [sl, #12]
   26454:	mov	r3, r6
   26458:	orr	r8, r8, r0, lsl #24
   2645c:	ldrb	r0, [sl, #11]
   26460:	orr	r5, r0, r3
   26464:	ldrb	r0, [sl, #10]
   26468:	orr	r2, r5, r0, lsl #8
   2646c:	ldrb	r0, [sl, #9]
   26470:	orr	r4, r2, r0, lsl #16
   26474:	ldrb	r2, [r1]
   26478:	movw	r0, #28769	; 0x7061
   2647c:	movw	r3, #25958	; 0x6566
   26480:	movt	r0, #27000	; 0x6978
   26484:	movt	r3, #28786	; 0x7072
   26488:	eor	r0, r8, r0
   2648c:	mov	r8, #8
   26490:	orr	r2, r4, r2, lsl #24
   26494:	eor	r2, r2, r3
   26498:	orrs	r0, r0, r2
   2649c:	bne	265b8 <main@@Base+0x10868>
   264a0:	add	ip, sl, #16
   264a4:	mov	r0, #8
   264a8:	sub	lr, r9, ip
   264ac:	cmp	lr, #8
   264b0:	movcc	r0, lr
   264b4:	sub	r2, r0, #1
   264b8:	cmp	r2, #7
   264bc:	bhi	2699c <main@@Base+0x10c4c>
   264c0:	add	r6, pc, #24
   264c4:	mov	r0, #0
   264c8:	mov	r1, #0
   264cc:	mov	r3, #0
   264d0:	mov	r5, #0
   264d4:	mov	r7, #0
   264d8:	mov	r4, #0
   264dc:	ldr	pc, [r6, r2, lsl #2]
   264e0:	andeq	r6, r2, r0, lsr r5
   264e4:	andeq	r6, r2, r8, lsr #10
   264e8:	andeq	r6, r2, r0, lsr #10
   264ec:	andeq	r6, r2, r8, lsl r5
   264f0:	andeq	r6, r2, r8, lsl #10
   264f4:	andeq	r6, r2, r0, lsl #10
   264f8:	andeq	r6, r2, r0, lsl #10
   264fc:	andeq	r6, r2, r0, lsl #10
   26500:	ldrb	r1, [sl, #21]
   26504:	lsl	r1, r1, #16
   26508:	ldrb	r2, [sl, #20]
   2650c:	mov	r3, r0
   26510:	orr	r1, r1, r2, lsl #24
   26514:	mov	r0, r1
   26518:	ldrb	r1, [sl, #19]
   2651c:	orr	r5, r1, r3
   26520:	ldrb	r1, [sl, #18]
   26524:	orr	r7, r5, r1, lsl #8
   26528:	ldrb	r1, [sl, #17]
   2652c:	orr	r4, r7, r1, lsl #16
   26530:	mov	r9, r0
   26534:	movw	r1, #0
   26538:	movw	r3, #26990	; 0x696e
   2653c:	bfc	r9, #0, #16
   26540:	movt	r1, #26418	; 0x6732
   26544:	movt	r3, #29299	; 0x7273
   26548:	eor	r2, r9, r1
   2654c:	ldrb	r1, [ip]
   26550:	orr	r1, r4, r1, lsl #24
   26554:	eor	r5, r1, r3
   26558:	orrs	r2, r2, r5
   2655c:	bne	26698 <main@@Base+0x10948>
   26560:	ldr	r9, [sp, #24]
   26564:	cmp	lr, #7
   26568:	blt	2699c <main@@Base+0x10c4c>
   2656c:	ldrb	r0, [sl, #22]
   26570:	cmp	r0, #34	; 0x22
   26574:	bne	2699c <main@@Base+0x10c4c>
   26578:	ldr	r4, [sp, #32]
   2657c:	add	r1, sl, #23
   26580:	sub	r0, r9, r1
   26584:	cmp	r0, #2
   26588:	blt	26718 <main@@Base+0x109c8>
   2658c:	ldrb	r0, [r1]
   26590:	cmp	r0, #32
   26594:	bls	26708 <main@@Base+0x109b8>
   26598:	mov	sl, r1
   2659c:	mov	r5, ip
   265a0:	cmp	sl, r9
   265a4:	bne	2673c <main@@Base+0x109ec>
   265a8:	b	26778 <main@@Base+0x10a28>
   265ac:	ldr	r7, [sp, #32]
   265b0:	mov	r1, sl
   265b4:	b	265bc <main@@Base+0x1086c>
   265b8:	ldr	r7, [sp, #32]
   265bc:	mov	r0, r7
   265c0:	mov	r2, r9
   265c4:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   265c8:	mov	sl, r0
   265cc:	sub	r0, r9, sl
   265d0:	cmp	r0, #2
   265d4:	blt	2664c <main@@Base+0x108fc>
   265d8:	ldrb	r0, [sl]
   265dc:	cmp	r0, #32
   265e0:	bls	26638 <main@@Base+0x108e8>
   265e4:	mov	r2, sl
   265e8:	cmp	r2, r9
   265ec:	beq	29494 <main@@Base+0x13744>
   265f0:	ldrb	r0, [r2]
   265f4:	ldr	r4, [sp, #28]
   265f8:	cmp	r0, #44	; 0x2c
   265fc:	bne	294ac <main@@Base+0x1375c>
   26600:	add	r1, r2, #1
   26604:	sub	r0, r9, r1
   26608:	cmp	r0, #2
   2660c:	blt	2667c <main@@Base+0x1092c>
   26610:	ldrb	r0, [r1]
   26614:	cmp	r0, #32
   26618:	bls	2666c <main@@Base+0x1091c>
   2661c:	mov	r2, r1
   26620:	cmp	r2, r9
   26624:	beq	294f8 <main@@Base+0x137a8>
   26628:	ldrb	r0, [r2]
   2662c:	cmp	r0, #125	; 0x7d
   26630:	bne	262c8 <main@@Base+0x10578>
   26634:	b	294b4 <main@@Base+0x13764>
   26638:	bne	2664c <main@@Base+0x108fc>
   2663c:	mov	r2, sl
   26640:	ldrb	r0, [r2, #1]!
   26644:	cmp	r0, #32
   26648:	bhi	26660 <main@@Base+0x10910>
   2664c:	mov	r0, r7
   26650:	mov	r1, sl
   26654:	mov	r2, r9
   26658:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2665c:	mov	r2, r0
   26660:	cmp	r2, r9
   26664:	bne	265f0 <main@@Base+0x108a0>
   26668:	b	29494 <main@@Base+0x13744>
   2666c:	bne	2667c <main@@Base+0x1092c>
   26670:	ldrb	r0, [r2, #2]!
   26674:	cmp	r0, #32
   26678:	bhi	2668c <main@@Base+0x1093c>
   2667c:	mov	r0, r7
   26680:	mov	r2, r9
   26684:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   26688:	mov	r2, r0
   2668c:	cmp	r2, r9
   26690:	bne	26628 <main@@Base+0x108d8>
   26694:	b	294f8 <main@@Base+0x137a8>
   26698:	cmp	lr, #6
   2669c:	blt	2680c <main@@Base+0x10abc>
   266a0:	movw	r2, #26990	; 0x696e
   266a4:	and	r0, r0, #-16777216	; 0xff000000
   266a8:	movt	r2, #29299	; 0x7273
   266ac:	eor	r0, r0, #1728053248	; 0x67000000
   266b0:	eor	r1, r1, r2
   266b4:	orrs	r0, r0, r1
   266b8:	bne	2680c <main@@Base+0x10abc>
   266bc:	ldrb	r0, [sl, #21]
   266c0:	cmp	r0, #34	; 0x22
   266c4:	bne	2680c <main@@Base+0x10abc>
   266c8:	ldr	r4, [sp, #24]
   266cc:	ldr	r6, [sp, #32]
   266d0:	add	r1, sl, #22
   266d4:	str	lr, [sp, #8]
   266d8:	sub	r0, r4, r1
   266dc:	cmp	r0, #2
   266e0:	blt	267a8 <main@@Base+0x10a58>
   266e4:	ldrb	r0, [r1]
   266e8:	cmp	r0, #32
   266ec:	bls	26790 <main@@Base+0x10a40>
   266f0:	ldr	r4, [sp, #24]
   266f4:	mov	r8, r1
   266f8:	mov	r7, ip
   266fc:	cmp	r8, r4
   26700:	bne	267d0 <main@@Base+0x10a80>
   26704:	b	26874 <main@@Base+0x10b24>
   26708:	bne	26718 <main@@Base+0x109c8>
   2670c:	ldrb	r0, [sl, #24]!
   26710:	cmp	r0, #32
   26714:	bhi	26730 <main@@Base+0x109e0>
   26718:	mov	r0, r4
   2671c:	mov	r2, r9
   26720:	mov	r5, ip
   26724:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   26728:	mov	ip, r5
   2672c:	mov	sl, r0
   26730:	mov	r5, ip
   26734:	cmp	sl, r9
   26738:	beq	26778 <main@@Base+0x10a28>
   2673c:	ldrb	r0, [sl]
   26740:	cmp	r0, #58	; 0x3a
   26744:	bne	26778 <main@@Base+0x10a28>
   26748:	add	r1, sl, #1
   2674c:	sub	r0, r9, r1
   26750:	cmp	r0, #2
   26754:	blt	26924 <main@@Base+0x10bd4>
   26758:	ldrb	r0, [r1]
   2675c:	cmp	r0, #32
   26760:	bls	26914 <main@@Base+0x10bc4>
   26764:	mov	sl, r1
   26768:	mov	ip, r5
   2676c:	cmp	r5, sl
   26770:	bne	26940 <main@@Base+0x10bf0>
   26774:	b	2699c <main@@Base+0x10c4c>
   26778:	mov	r0, r4
   2677c:	mov	r1, sl
   26780:	mov	r2, r9
   26784:	mov	r3, #4
   26788:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2678c:	b	26930 <main@@Base+0x10be0>
   26790:	ldr	r4, [sp, #24]
   26794:	bne	267a8 <main@@Base+0x10a58>
   26798:	mov	r8, sl
   2679c:	ldrb	r0, [r8, #23]!
   267a0:	cmp	r0, #32
   267a4:	bhi	267c4 <main@@Base+0x10a74>
   267a8:	mov	r0, r6
   267ac:	mov	r2, r4
   267b0:	mov	r7, ip
   267b4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   267b8:	ldr	lr, [sp, #8]
   267bc:	mov	ip, r7
   267c0:	mov	r8, r0
   267c4:	mov	r7, ip
   267c8:	cmp	r8, r4
   267cc:	beq	26874 <main@@Base+0x10b24>
   267d0:	ldrb	r0, [r8]
   267d4:	cmp	r0, #58	; 0x3a
   267d8:	bne	26874 <main@@Base+0x10b24>
   267dc:	ldr	r0, [sp, #24]
   267e0:	add	r1, r8, #1
   267e4:	sub	r0, r0, r1
   267e8:	cmp	r0, #2
   267ec:	blt	26a10 <main@@Base+0x10cc0>
   267f0:	ldrb	r0, [r1]
   267f4:	cmp	r0, #32
   267f8:	bls	26a00 <main@@Base+0x10cb0>
   267fc:	mov	r8, r1
   26800:	mov	ip, r7
   26804:	cmp	r7, r8
   26808:	bne	26a30 <main@@Base+0x10ce0>
   2680c:	movw	r0, #0
   26810:	mov	r8, #8
   26814:	movt	r0, #26418	; 0x6732
   26818:	add	r0, r0, #65536	; 0x10000
   2681c:	eor	r0, r9, r0
   26820:	ldr	r9, [sp, #24]
   26824:	orrs	r0, r0, r5
   26828:	bne	2699c <main@@Base+0x10c4c>
   2682c:	ldr	r7, [sp, #32]
   26830:	cmp	lr, #7
   26834:	blt	269a0 <main@@Base+0x10c50>
   26838:	ldrb	r0, [sl, #22]
   2683c:	cmp	r0, #34	; 0x22
   26840:	bne	269a0 <main@@Base+0x10c50>
   26844:	add	r1, sl, #23
   26848:	sub	r0, r9, r1
   2684c:	cmp	r0, #2
   26850:	blt	2689c <main@@Base+0x10b4c>
   26854:	ldrb	r0, [r1]
   26858:	cmp	r0, #32
   2685c:	bls	2688c <main@@Base+0x10b3c>
   26860:	mov	sl, r1
   26864:	mov	r4, ip
   26868:	cmp	sl, r9
   2686c:	bne	268c0 <main@@Base+0x10b70>
   26870:	b	268fc <main@@Base+0x10bac>
   26874:	ldr	r2, [sp, #24]
   26878:	mov	r0, r6
   2687c:	mov	r1, r8
   26880:	mov	r3, #4
   26884:	bl	3454c <flatcc_json_parser_set_error@@Base>
   26888:	b	26a1c <main@@Base+0x10ccc>
   2688c:	bne	2689c <main@@Base+0x10b4c>
   26890:	ldrb	r0, [sl, #24]!
   26894:	cmp	r0, #32
   26898:	bhi	268b4 <main@@Base+0x10b64>
   2689c:	mov	r0, r7
   268a0:	mov	r2, r9
   268a4:	mov	r4, ip
   268a8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   268ac:	mov	ip, r4
   268b0:	mov	sl, r0
   268b4:	mov	r4, ip
   268b8:	cmp	sl, r9
   268bc:	beq	268fc <main@@Base+0x10bac>
   268c0:	ldrb	r0, [sl]
   268c4:	cmp	r0, #58	; 0x3a
   268c8:	bne	268fc <main@@Base+0x10bac>
   268cc:	add	r1, sl, #1
   268d0:	sub	r0, r9, r1
   268d4:	cmp	r0, #2
   268d8:	blt	288c0 <main@@Base+0x12b70>
   268dc:	ldrb	r0, [r1]
   268e0:	cmp	r0, #32
   268e4:	bls	288b0 <main@@Base+0x12b60>
   268e8:	mov	sl, r1
   268ec:	mov	ip, r4
   268f0:	cmp	r4, sl
   268f4:	bne	288dc <main@@Base+0x12b8c>
   268f8:	b	269a0 <main@@Base+0x10c50>
   268fc:	mov	r0, r7
   26900:	mov	r1, sl
   26904:	mov	r2, r9
   26908:	mov	r3, #4
   2690c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   26910:	b	288cc <main@@Base+0x12b7c>
   26914:	bne	26924 <main@@Base+0x10bd4>
   26918:	ldrb	r0, [sl, #2]!
   2691c:	cmp	r0, #32
   26920:	bhi	26934 <main@@Base+0x10be4>
   26924:	mov	r0, r4
   26928:	mov	r2, r9
   2692c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   26930:	mov	sl, r0
   26934:	mov	ip, r5
   26938:	cmp	r5, sl
   2693c:	beq	2699c <main@@Base+0x10c4c>
   26940:	ldr	r7, [sp, #32]
   26944:	mov	r1, #2
   26948:	ldr	r0, [r7]
   2694c:	bl	2fa58 <flatcc_builder_start_table@@Base>
   26950:	cmp	r0, #0
   26954:	bne	29574 <main@@Base+0x13824>
   26958:	cmp	sl, r9
   2695c:	beq	269ac <main@@Base+0x10c5c>
   26960:	ldrb	r0, [sl]
   26964:	cmp	r0, #123	; 0x7b
   26968:	bne	269ac <main@@Base+0x10c5c>
   2696c:	add	r1, sl, #1
   26970:	sub	r0, r9, r1
   26974:	cmp	r0, #2
   26978:	blt	26b08 <main@@Base+0x10db8>
   2697c:	ldrb	r0, [r1]
   26980:	cmp	r0, #32
   26984:	bls	26af8 <main@@Base+0x10da8>
   26988:	mov	sl, r1
   2698c:	cmp	sl, r9
   26990:	mov	r2, r9
   26994:	bne	26b24 <main@@Base+0x10dd4>
   26998:	b	26b64 <main@@Base+0x10e14>
   2699c:	ldr	r7, [sp, #32]
   269a0:	mov	r0, r7
   269a4:	mov	r1, ip
   269a8:	b	265c0 <main@@Base+0x10870>
   269ac:	mov	r0, r7
   269b0:	mov	r1, sl
   269b4:	mov	r2, r9
   269b8:	mov	r3, #21
   269bc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   269c0:	mov	sl, r0
   269c4:	ldr	r0, [r7, #20]
   269c8:	cmp	r0, #0
   269cc:	bne	29574 <main@@Base+0x13824>
   269d0:	ldr	r0, [r7]
   269d4:	bl	30400 <flatcc_builder_end_table@@Base>
   269d8:	mov	r1, r7
   269dc:	cmp	r0, #0
   269e0:	beq	2953c <main@@Base+0x137ec>
   269e4:	mov	r7, r0
   269e8:	ldr	r0, [r1]
   269ec:	mov	r1, #1
   269f0:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   269f4:	cmp	r0, #0
   269f8:	bne	28984 <main@@Base+0x12c34>
   269fc:	b	29544 <main@@Base+0x137f4>
   26a00:	bne	26a10 <main@@Base+0x10cc0>
   26a04:	ldrb	r0, [r8, #2]!
   26a08:	cmp	r0, #32
   26a0c:	bhi	26a24 <main@@Base+0x10cd4>
   26a10:	ldr	r2, [sp, #24]
   26a14:	mov	r0, r6
   26a18:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   26a1c:	ldr	lr, [sp, #8]
   26a20:	mov	r8, r0
   26a24:	mov	ip, r7
   26a28:	cmp	r7, r8
   26a2c:	beq	2680c <main@@Base+0x10abc>
   26a30:	ldr	r7, [sp, #32]
   26a34:	mov	r1, #9
   26a38:	ldr	r0, [r7]
   26a3c:	bl	2fa58 <flatcc_builder_start_table@@Base>
   26a40:	cmp	r0, #0
   26a44:	bne	29550 <main@@Base+0x13800>
   26a48:	ldr	r9, [sp, #24]
   26a4c:	cmp	r8, r9
   26a50:	beq	26a90 <main@@Base+0x10d40>
   26a54:	ldrb	r0, [r8]
   26a58:	cmp	r0, #123	; 0x7b
   26a5c:	bne	26a90 <main@@Base+0x10d40>
   26a60:	add	r1, r8, #1
   26a64:	sub	r0, r9, r1
   26a68:	cmp	r0, #2
   26a6c:	blt	2737c <main@@Base+0x1162c>
   26a70:	ldrb	r0, [r1]
   26a74:	cmp	r0, #32
   26a78:	bls	2736c <main@@Base+0x1161c>
   26a7c:	mov	r8, r1
   26a80:	cmp	r8, r9
   26a84:	mov	r2, r9
   26a88:	bne	27398 <main@@Base+0x11648>
   26a8c:	b	273d8 <main@@Base+0x11688>
   26a90:	mov	r0, r7
   26a94:	mov	r1, r8
   26a98:	mov	r2, r9
   26a9c:	mov	r3, #21
   26aa0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   26aa4:	mov	r8, r0
   26aa8:	ldr	r0, [r7, #20]
   26aac:	cmp	r0, #0
   26ab0:	bne	29560 <main@@Base+0x13810>
   26ab4:	ldr	r0, [r7]
   26ab8:	bl	30400 <flatcc_builder_end_table@@Base>
   26abc:	cmp	r0, #0
   26ac0:	beq	29560 <main@@Base+0x13810>
   26ac4:	mov	r4, r0
   26ac8:	ldr	r0, [r7]
   26acc:	mov	r1, #0
   26ad0:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   26ad4:	cmp	r0, #0
   26ad8:	beq	261f0 <main@@Base+0x104a0>
   26adc:	mov	sl, r8
   26ae0:	str	r4, [r0]
   26ae4:	mov	r8, #8
   26ae8:	sub	r0, r9, sl
   26aec:	cmp	r0, #2
   26af0:	bge	265d8 <main@@Base+0x10888>
   26af4:	b	2664c <main@@Base+0x108fc>
   26af8:	bne	26b08 <main@@Base+0x10db8>
   26afc:	ldrb	r0, [sl, #2]!
   26b00:	cmp	r0, #32
   26b04:	bhi	26b18 <main@@Base+0x10dc8>
   26b08:	mov	r0, r7
   26b0c:	mov	r2, r9
   26b10:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   26b14:	mov	sl, r0
   26b18:	cmp	sl, r9
   26b1c:	mov	r2, r9
   26b20:	beq	26b64 <main@@Base+0x10e14>
   26b24:	ldrb	r0, [sl]
   26b28:	cmp	r0, #125	; 0x7d
   26b2c:	bne	26b60 <main@@Base+0x10e10>
   26b30:	add	r1, sl, #1
   26b34:	sub	r0, r9, r1
   26b38:	cmp	r0, #2
   26b3c:	blt	29400 <main@@Base+0x136b0>
   26b40:	ldrb	r0, [r1]
   26b44:	cmp	r0, #32
   26b48:	bhi	289d4 <main@@Base+0x12c84>
   26b4c:	bne	29400 <main@@Base+0x136b0>
   26b50:	ldrb	r0, [sl, #2]!
   26b54:	cmp	r0, #32
   26b58:	bhi	269c4 <main@@Base+0x10c74>
   26b5c:	b	29400 <main@@Base+0x136b0>
   26b60:	mov	r2, sl
   26b64:	cmp	r2, r9
   26b68:	mov	r4, r9
   26b6c:	beq	26ba4 <main@@Base+0x10e54>
   26b70:	ldrb	r0, [r2]
   26b74:	cmp	r0, #34	; 0x22
   26b78:	bne	26b88 <main@@Base+0x10e38>
   26b7c:	ldr	r4, [sp, #24]
   26b80:	add	r9, r2, #1
   26b84:	b	26ba4 <main@@Base+0x10e54>
   26b88:	ldr	r4, [sp, #24]
   26b8c:	mov	r1, r2
   26b90:	mov	r0, r7
   26b94:	mov	r3, #5
   26b98:	mov	r2, r4
   26b9c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   26ba0:	mov	r9, r0
   26ba4:	sub	r0, r4, r9
   26ba8:	cmp	r0, #8
   26bac:	movcs	r0, r8
   26bb0:	sub	r3, r0, #1
   26bb4:	cmp	r3, #7
   26bb8:	bhi	26d9c <main@@Base+0x1104c>
   26bbc:	add	r4, pc, #32
   26bc0:	mov	r0, #0
   26bc4:	mov	ip, #0
   26bc8:	mov	lr, #0
   26bcc:	mov	r6, #0
   26bd0:	mov	r2, #0
   26bd4:	mov	r5, #0
   26bd8:	mov	r7, #0
   26bdc:	mov	r1, #0
   26be0:	ldr	pc, [r4, r3, lsl #2]
   26be4:	andeq	r6, r2, r8, asr #24
   26be8:	andeq	r6, r2, r0, asr #24
   26bec:	andeq	r6, r2, r8, lsr ip
   26bf0:	andeq	r6, r2, r0, lsr ip
   26bf4:	andeq	r6, r2, r4, lsr #24
   26bf8:	andeq	r6, r2, r8, lsl ip
   26bfc:	andeq	r6, r2, r8, lsl #24
   26c00:	andeq	r6, r2, r4, lsl #24
   26c04:	ldrb	ip, [r9, #7]
   26c08:	ldrb	r1, [r9, #6]
   26c0c:	mov	lr, r0
   26c10:	orr	r1, ip, r1, lsl #8
   26c14:	mov	r0, r1
   26c18:	ldrb	r1, [r9, #5]
   26c1c:	mov	r6, lr
   26c20:	orr	r0, r0, r1, lsl #16
   26c24:	ldrb	r1, [r9, #4]
   26c28:	mov	r2, r6
   26c2c:	orr	r0, r0, r1, lsl #24
   26c30:	ldrb	r1, [r9, #3]
   26c34:	orr	r5, r1, r2
   26c38:	ldrb	r1, [r9, #2]
   26c3c:	orr	r7, r5, r1, lsl #8
   26c40:	ldrb	r1, [r9, #1]
   26c44:	orr	r1, r7, r1, lsl #16
   26c48:	movw	r2, #25186	; 0x6262
   26c4c:	ldr	r7, [sp, #32]
   26c50:	movt	r2, #24418	; 0x5f62
   26c54:	eor	r0, r0, r2
   26c58:	ldrb	r2, [r9]
   26c5c:	orr	r1, r1, r2, lsl #24
   26c60:	movw	r2, #24929	; 0x6161
   26c64:	movt	r2, #24929	; 0x6161
   26c68:	eor	r1, r1, r2
   26c6c:	orrs	r0, r0, r1
   26c70:	bne	26d9c <main@@Base+0x1104c>
   26c74:	ldr	r0, [sp, #24]
   26c78:	add	r8, r9, #8
   26c7c:	sub	lr, r0, r8
   26c80:	mov	r0, #8
   26c84:	cmp	lr, #8
   26c88:	movcc	r0, lr
   26c8c:	sub	r6, r0, #1
   26c90:	cmp	r6, #7
   26c94:	bhi	27184 <main@@Base+0x11434>
   26c98:	add	r2, pc, #32
   26c9c:	mov	r1, #0
   26ca0:	mov	ip, #0
   26ca4:	mov	sl, #0
   26ca8:	mov	r5, #0
   26cac:	mov	r3, #0
   26cb0:	mov	r4, #0
   26cb4:	mov	r7, #0
   26cb8:	mov	r0, #0
   26cbc:	ldr	pc, [r2, r6, lsl #2]
   26cc0:	andeq	r6, r2, r4, lsr #26
   26cc4:	andeq	r6, r2, ip, lsl sp
   26cc8:	andeq	r6, r2, r4, lsl sp
   26ccc:	andeq	r6, r2, ip, lsl #26
   26cd0:	andeq	r6, r2, r0, lsl #26
   26cd4:	strdeq	r6, [r2], -r4
   26cd8:	andeq	r6, r2, r4, ror #25
   26cdc:	andeq	r6, r2, r0, ror #25
   26ce0:	ldrb	ip, [r9, #15]
   26ce4:	ldrb	r0, [r9, #14]
   26ce8:	mov	sl, r1
   26cec:	orr	r0, ip, r0, lsl #8
   26cf0:	mov	r1, r0
   26cf4:	ldrb	r0, [r9, #13]
   26cf8:	mov	r5, sl
   26cfc:	orr	r1, r1, r0, lsl #16
   26d00:	ldrb	r0, [r9, #12]
   26d04:	mov	r3, r5
   26d08:	orr	r1, r1, r0, lsl #24
   26d0c:	ldrb	r0, [r9, #11]
   26d10:	orr	r4, r0, r3
   26d14:	ldrb	r0, [r9, #10]
   26d18:	orr	r7, r4, r0, lsl #8
   26d1c:	ldrb	r0, [r9, #9]
   26d20:	orr	r0, r7, r0, lsl #16
   26d24:	movw	r3, #29440	; 0x7300
   26d28:	bic	r2, r1, #255	; 0xff
   26d2c:	movt	r3, #25968	; 0x6570
   26d30:	eor	r2, r2, r3
   26d34:	ldrb	r3, [r8]
   26d38:	orr	r0, r0, r3, lsl #24
   26d3c:	movw	r3, #29556	; 0x7374
   26d40:	movt	r3, #25183	; 0x625f
   26d44:	eor	r0, r0, r3
   26d48:	orrs	r2, r2, r0
   26d4c:	bne	26dc4 <main@@Base+0x11074>
   26d50:	ldr	r7, [sp, #32]
   26d54:	cmp	lr, #8
   26d58:	blt	27184 <main@@Base+0x11434>
   26d5c:	ldrb	r0, [r9, #15]
   26d60:	cmp	r0, #34	; 0x22
   26d64:	bne	27184 <main@@Base+0x11434>
   26d68:	ldr	r4, [sp, #24]
   26d6c:	add	r1, r9, #16
   26d70:	sub	r0, r4, r1
   26d74:	cmp	r0, #2
   26d78:	blt	26e38 <main@@Base+0x110e8>
   26d7c:	ldrb	r0, [r1]
   26d80:	cmp	r0, #32
   26d84:	bls	26e24 <main@@Base+0x110d4>
   26d88:	ldr	r4, [sp, #24]
   26d8c:	mov	r9, r1
   26d90:	cmp	r9, r4
   26d94:	bne	26e50 <main@@Base+0x11100>
   26d98:	b	26e8c <main@@Base+0x1113c>
   26d9c:	mov	r1, r9
   26da0:	ldr	r9, [sp, #24]
   26da4:	mov	r0, r7
   26da8:	mov	r2, r9
   26dac:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   26db0:	mov	sl, r0
   26db4:	sub	r0, r9, sl
   26db8:	cmp	r0, #2
   26dbc:	bge	271ac <main@@Base+0x1145c>
   26dc0:	b	271dc <main@@Base+0x1148c>
   26dc4:	movw	r2, #29791	; 0x745f
   26dc8:	ldr	r7, [sp, #32]
   26dcc:	movt	r2, #24946	; 0x6172
   26dd0:	eor	r1, r1, r2
   26dd4:	orrs	r0, r1, r0
   26dd8:	bne	27184 <main@@Base+0x11434>
   26ddc:	cmp	lr, #9
   26de0:	blt	27184 <main@@Base+0x11434>
   26de4:	ldrb	r0, [r9, #16]
   26de8:	cmp	r0, #34	; 0x22
   26dec:	bne	27184 <main@@Base+0x11434>
   26df0:	ldr	r4, [sp, #24]
   26df4:	add	r1, r9, #17
   26df8:	sub	r0, r4, r1
   26dfc:	cmp	r0, #2
   26e00:	blt	26eb8 <main@@Base+0x11168>
   26e04:	ldrb	r0, [r1]
   26e08:	cmp	r0, #32
   26e0c:	bls	26ea4 <main@@Base+0x11154>
   26e10:	ldr	r4, [sp, #24]
   26e14:	mov	r9, r1
   26e18:	cmp	r9, r4
   26e1c:	bne	26ed0 <main@@Base+0x11180>
   26e20:	b	26f10 <main@@Base+0x111c0>
   26e24:	ldr	r4, [sp, #24]
   26e28:	bne	26e38 <main@@Base+0x110e8>
   26e2c:	ldrb	r0, [r9, #17]!
   26e30:	cmp	r0, #32
   26e34:	bhi	26e48 <main@@Base+0x110f8>
   26e38:	mov	r0, r7
   26e3c:	mov	r2, r4
   26e40:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   26e44:	mov	r9, r0
   26e48:	cmp	r9, r4
   26e4c:	beq	26e8c <main@@Base+0x1113c>
   26e50:	ldrb	r0, [r9]
   26e54:	cmp	r0, #58	; 0x3a
   26e58:	bne	26e8c <main@@Base+0x1113c>
   26e5c:	ldr	r0, [sp, #24]
   26e60:	add	r1, r9, #1
   26e64:	sub	r0, r0, r1
   26e68:	cmp	r0, #2
   26e6c:	blt	26f38 <main@@Base+0x111e8>
   26e70:	ldrb	r0, [r1]
   26e74:	cmp	r0, #32
   26e78:	bls	26f28 <main@@Base+0x111d8>
   26e7c:	mov	r9, r1
   26e80:	cmp	r8, r9
   26e84:	bne	26f50 <main@@Base+0x11200>
   26e88:	b	27184 <main@@Base+0x11434>
   26e8c:	ldr	r2, [sp, #24]
   26e90:	mov	r0, r7
   26e94:	mov	r1, r9
   26e98:	mov	r3, #4
   26e9c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   26ea0:	b	26f44 <main@@Base+0x111f4>
   26ea4:	ldr	r4, [sp, #24]
   26ea8:	bne	26eb8 <main@@Base+0x11168>
   26eac:	ldrb	r0, [r9, #18]!
   26eb0:	cmp	r0, #32
   26eb4:	bhi	26ec8 <main@@Base+0x11178>
   26eb8:	mov	r0, r7
   26ebc:	mov	r2, r4
   26ec0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   26ec4:	mov	r9, r0
   26ec8:	cmp	r9, r4
   26ecc:	beq	26f10 <main@@Base+0x111c0>
   26ed0:	ldrb	r0, [r9]
   26ed4:	cmp	r0, #58	; 0x3a
   26ed8:	bne	26f10 <main@@Base+0x111c0>
   26edc:	ldr	r0, [sp, #24]
   26ee0:	add	r1, r9, #1
   26ee4:	sub	r0, r0, r1
   26ee8:	cmp	r0, #2
   26eec:	blt	27108 <main@@Base+0x113b8>
   26ef0:	ldrb	r0, [r1]
   26ef4:	cmp	r0, #32
   26ef8:	bls	270f4 <main@@Base+0x113a4>
   26efc:	ldr	r7, [sp, #32]
   26f00:	mov	r9, r1
   26f04:	cmp	r8, r9
   26f08:	bne	27120 <main@@Base+0x113d0>
   26f0c:	b	27184 <main@@Base+0x11434>
   26f10:	ldr	r2, [sp, #24]
   26f14:	mov	r0, r7
   26f18:	mov	r1, r9
   26f1c:	mov	r3, #4
   26f20:	bl	3454c <flatcc_json_parser_set_error@@Base>
   26f24:	b	27114 <main@@Base+0x113c4>
   26f28:	bne	26f38 <main@@Base+0x111e8>
   26f2c:	ldrb	r0, [r9, #2]!
   26f30:	cmp	r0, #32
   26f34:	bhi	26f48 <main@@Base+0x111f8>
   26f38:	ldr	r2, [sp, #24]
   26f3c:	mov	r0, r7
   26f40:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   26f44:	mov	r9, r0
   26f48:	cmp	r8, r9
   26f4c:	beq	27184 <main@@Base+0x11434>
   26f50:	ldr	r2, [sp, #24]
   26f54:	mov	r6, #0
   26f58:	str	r6, [fp, #-36]	; 0xffffffdc
   26f5c:	str	r6, [fp, #-40]	; 0xffffffd8
   26f60:	str	r6, [sp, #44]	; 0x2c
   26f64:	str	r6, [sp, #40]	; 0x28
   26f68:	str	r6, [fp, #-44]	; 0xffffffd4
   26f6c:	cmp	r9, r2
   26f70:	beq	26fe8 <main@@Base+0x11298>
   26f74:	sub	r0, fp, #40	; 0x28
   26f78:	mov	r1, r9
   26f7c:	sub	r3, fp, #44	; 0x2c
   26f80:	str	r0, [sp]
   26f84:	mov	r0, r7
   26f88:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   26f8c:	cmp	r0, r9
   26f90:	beq	27000 <main@@Base+0x112b0>
   26f94:	mov	sl, r0
   26f98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26f9c:	ldr	r6, [fp, #-40]	; 0xffffffd8
   26fa0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   26fa4:	cmp	r0, #0
   26fa8:	beq	2701c <main@@Base+0x112cc>
   26fac:	subs	r0, r6, #1
   26fb0:	sbcs	r0, r5, #-2147483648	; 0x80000000
   26fb4:	bcc	27054 <main@@Base+0x11304>
   26fb8:	ldr	r2, [sp, #24]
   26fbc:	mov	r0, r7
   26fc0:	mov	r1, sl
   26fc4:	mov	r3, #8
   26fc8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   26fcc:	mov	sl, r0
   26fd0:	mov	r6, #0
   26fd4:	mov	r5, #0
   26fd8:	mov	r8, #8
   26fdc:	cmp	r9, sl
   26fe0:	bne	270a8 <main@@Base+0x11358>
   26fe4:	b	27070 <main@@Base+0x11320>
   26fe8:	mov	r5, #0
   26fec:	mov	sl, r2
   26ff0:	mov	r8, #8
   26ff4:	cmp	r9, sl
   26ff8:	bne	270a8 <main@@Base+0x11358>
   26ffc:	b	27070 <main@@Base+0x11320>
   27000:	mov	r6, #0
   27004:	mov	r5, #0
   27008:	mov	sl, r9
   2700c:	mov	r8, #8
   27010:	cmp	r9, sl
   27014:	bne	270a8 <main@@Base+0x11358>
   27018:	b	27070 <main@@Base+0x11320>
   2701c:	cmn	r5, #1
   27020:	mov	r8, #8
   27024:	bgt	27060 <main@@Base+0x11310>
   27028:	ldr	r2, [sp, #24]
   2702c:	mov	r0, r7
   27030:	mov	r1, sl
   27034:	mov	r3, #7
   27038:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2703c:	mov	sl, r0
   27040:	mov	r6, #0
   27044:	mov	r5, #0
   27048:	cmp	r9, sl
   2704c:	bne	270a8 <main@@Base+0x11358>
   27050:	b	27070 <main@@Base+0x11320>
   27054:	rsbs	r6, r6, #0
   27058:	mov	r8, #8
   2705c:	rsc	r5, r5, #0
   27060:	str	r6, [sp, #40]	; 0x28
   27064:	str	r5, [sp, #44]	; 0x2c
   27068:	cmp	r9, sl
   2706c:	bne	270a8 <main@@Base+0x11358>
   27070:	ldr	r4, [sp, #24]
   27074:	ldr	r3, [sp, #12]
   27078:	add	r0, sp, #40	; 0x28
   2707c:	mov	r1, r9
   27080:	str	r0, [sp]
   27084:	mov	r0, r7
   27088:	mov	r2, r4
   2708c:	bl	24594 <main@@Base+0xe844>
   27090:	mov	sl, r0
   27094:	cmp	r0, r9
   27098:	cmpne	sl, r4
   2709c:	beq	2956c <main@@Base+0x1381c>
   270a0:	ldr	r6, [sp, #40]	; 0x28
   270a4:	ldr	r5, [sp, #44]	; 0x2c
   270a8:	ldr	r9, [sp, #24]
   270ac:	orrs	r0, r6, r5
   270b0:	bne	270c0 <main@@Base+0x11370>
   270b4:	ldrb	r0, [r7, #8]
   270b8:	tst	r0, #2
   270bc:	beq	271a0 <main@@Base+0x11450>
   270c0:	ldr	r0, [r7]
   270c4:	mov	r1, #0
   270c8:	mov	r2, #8
   270cc:	mov	r3, #8
   270d0:	bl	30dac <flatcc_builder_table_add@@Base>
   270d4:	cmp	r0, #0
   270d8:	beq	2956c <main@@Base+0x1381c>
   270dc:	str	r6, [r0]
   270e0:	str	r5, [r0, #4]
   270e4:	sub	r0, r9, sl
   270e8:	cmp	r0, #2
   270ec:	bge	271ac <main@@Base+0x1145c>
   270f0:	b	271dc <main@@Base+0x1148c>
   270f4:	ldr	r7, [sp, #32]
   270f8:	bne	27108 <main@@Base+0x113b8>
   270fc:	ldrb	r0, [r9, #2]!
   27100:	cmp	r0, #32
   27104:	bhi	27118 <main@@Base+0x113c8>
   27108:	ldr	r2, [sp, #24]
   2710c:	mov	r0, r7
   27110:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   27114:	mov	r9, r0
   27118:	cmp	r8, r9
   2711c:	beq	27184 <main@@Base+0x11434>
   27120:	ldr	r2, [sp, #24]
   27124:	mov	r5, #0
   27128:	str	r5, [fp, #-36]	; 0xffffffdc
   2712c:	str	r5, [fp, #-40]	; 0xffffffd8
   27130:	str	r5, [fp, #-44]	; 0xffffffd4
   27134:	str	r5, [sp, #40]	; 0x28
   27138:	cmp	r9, r2
   2713c:	beq	27268 <main@@Base+0x11518>
   27140:	sub	r0, fp, #40	; 0x28
   27144:	mov	r1, r9
   27148:	add	r3, sp, #40	; 0x28
   2714c:	str	r0, [sp]
   27150:	mov	r0, r7
   27154:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   27158:	cmp	r0, r9
   2715c:	beq	2727c <main@@Base+0x1152c>
   27160:	mov	sl, r0
   27164:	ldr	r0, [sp, #40]	; 0x28
   27168:	cmp	r0, #0
   2716c:	beq	27290 <main@@Base+0x11540>
   27170:	ldr	r2, [sp, #24]
   27174:	mov	r0, r7
   27178:	mov	r1, sl
   2717c:	mov	r3, #8
   27180:	b	272b0 <main@@Base+0x11560>
   27184:	ldr	r9, [sp, #24]
   27188:	mov	r0, r7
   2718c:	mov	r1, r8
   27190:	mov	r2, r9
   27194:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   27198:	mov	sl, r0
   2719c:	mov	r8, #8
   271a0:	sub	r0, r9, sl
   271a4:	cmp	r0, #2
   271a8:	blt	271dc <main@@Base+0x1148c>
   271ac:	ldrb	r0, [sl]
   271b0:	cmp	r0, #32
   271b4:	bls	271c8 <main@@Base+0x11478>
   271b8:	mov	r2, sl
   271bc:	cmp	r2, r9
   271c0:	bne	271f8 <main@@Base+0x114a8>
   271c4:	b	2899c <main@@Base+0x12c4c>
   271c8:	bne	271dc <main@@Base+0x1148c>
   271cc:	mov	r2, sl
   271d0:	ldrb	r0, [r2, #1]!
   271d4:	cmp	r0, #32
   271d8:	bhi	271f0 <main@@Base+0x114a0>
   271dc:	mov	r0, r7
   271e0:	mov	r1, sl
   271e4:	mov	r2, r9
   271e8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   271ec:	mov	r2, r0
   271f0:	cmp	r2, r9
   271f4:	beq	2899c <main@@Base+0x12c4c>
   271f8:	ldrb	r0, [r2]
   271fc:	cmp	r0, #44	; 0x2c
   27200:	bne	289b0 <main@@Base+0x12c60>
   27204:	add	r1, r2, #1
   27208:	sub	r0, r9, r1
   2720c:	cmp	r0, #2
   27210:	blt	27240 <main@@Base+0x114f0>
   27214:	ldrb	r0, [r1]
   27218:	cmp	r0, #32
   2721c:	bls	27230 <main@@Base+0x114e0>
   27220:	mov	r2, r1
   27224:	cmp	r2, r9
   27228:	bne	27258 <main@@Base+0x11508>
   2722c:	b	289e8 <main@@Base+0x12c98>
   27230:	bne	27240 <main@@Base+0x114f0>
   27234:	ldrb	r0, [r2, #2]!
   27238:	cmp	r0, #32
   2723c:	bhi	27250 <main@@Base+0x11500>
   27240:	mov	r0, r7
   27244:	mov	r2, r9
   27248:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2724c:	mov	r2, r0
   27250:	cmp	r2, r9
   27254:	beq	289e8 <main@@Base+0x12c98>
   27258:	ldrb	r0, [r2]
   2725c:	cmp	r0, #125	; 0x7d
   27260:	bne	26b64 <main@@Base+0x10e14>
   27264:	b	289b8 <main@@Base+0x12c68>
   27268:	mov	sl, r2
   2726c:	mov	r8, #8
   27270:	cmp	r9, sl
   27274:	bne	27308 <main@@Base+0x115b8>
   27278:	b	272c4 <main@@Base+0x11574>
   2727c:	mov	sl, r9
   27280:	mov	r8, #8
   27284:	cmp	r9, sl
   27288:	bne	27308 <main@@Base+0x115b8>
   2728c:	b	272c4 <main@@Base+0x11574>
   27290:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27294:	cmp	r0, #0
   27298:	beq	27350 <main@@Base+0x11600>
   2729c:	ldr	r7, [sp, #32]
   272a0:	ldr	r2, [sp, #24]
   272a4:	mov	r1, sl
   272a8:	mov	r3, #7
   272ac:	mov	r0, r7
   272b0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   272b4:	mov	sl, r0
   272b8:	mov	r8, #8
   272bc:	cmp	r9, sl
   272c0:	bne	27308 <main@@Base+0x115b8>
   272c4:	sub	r0, fp, #44	; 0x2c
   272c8:	ldr	r4, [sp, #24]
   272cc:	mov	r1, r9
   272d0:	str	r0, [sp]
   272d4:	movw	r0, #53636	; 0xd184
   272d8:	movt	r0, #5
   272dc:	add	r3, r0, #108	; 0x6c
   272e0:	mov	r0, r7
   272e4:	mov	r2, r4
   272e8:	bl	247ac <main@@Base+0xea5c>
   272ec:	mov	sl, r0
   272f0:	cmp	r0, r9
   272f4:	cmpne	sl, r4
   272f8:	beq	2956c <main@@Base+0x1381c>
   272fc:	ldr	r5, [fp, #-44]	; 0xffffffd4
   27300:	ldr	r7, [sp, #32]
   27304:	mov	r8, #8
   27308:	ldr	r9, [sp, #24]
   2730c:	cmp	r5, #0
   27310:	bne	27320 <main@@Base+0x115d0>
   27314:	ldrb	r0, [r7, #8]
   27318:	tst	r0, #2
   2731c:	beq	271a0 <main@@Base+0x11450>
   27320:	ldr	r0, [r7]
   27324:	mov	r1, #1
   27328:	mov	r2, #4
   2732c:	mov	r3, #4
   27330:	bl	30dac <flatcc_builder_table_add@@Base>
   27334:	cmp	r0, #0
   27338:	beq	2956c <main@@Base+0x1381c>
   2733c:	str	r5, [r0]
   27340:	sub	r0, r9, sl
   27344:	cmp	r0, #2
   27348:	bge	271ac <main@@Base+0x1145c>
   2734c:	b	271dc <main@@Base+0x1148c>
   27350:	ldr	r5, [fp, #-40]	; 0xffffffd8
   27354:	ldr	r7, [sp, #32]
   27358:	str	r5, [fp, #-44]	; 0xffffffd4
   2735c:	mov	r8, #8
   27360:	cmp	r9, sl
   27364:	bne	27308 <main@@Base+0x115b8>
   27368:	b	272c4 <main@@Base+0x11574>
   2736c:	bne	2737c <main@@Base+0x1162c>
   27370:	ldrb	r0, [r8, #2]!
   27374:	cmp	r0, #32
   27378:	bhi	2738c <main@@Base+0x1163c>
   2737c:	mov	r0, r7
   27380:	mov	r2, r9
   27384:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   27388:	mov	r8, r0
   2738c:	cmp	r8, r9
   27390:	mov	r2, r9
   27394:	beq	273d8 <main@@Base+0x11688>
   27398:	ldrb	r0, [r8]
   2739c:	cmp	r0, #125	; 0x7d
   273a0:	bne	273d4 <main@@Base+0x11684>
   273a4:	add	r1, r8, #1
   273a8:	sub	r0, r9, r1
   273ac:	cmp	r0, #2
   273b0:	blt	29438 <main@@Base+0x136e8>
   273b4:	ldrb	r0, [r1]
   273b8:	cmp	r0, #32
   273bc:	bhi	28a2c <main@@Base+0x12cdc>
   273c0:	bne	29438 <main@@Base+0x136e8>
   273c4:	ldrb	r0, [r8, #2]!
   273c8:	cmp	r0, #32
   273cc:	bhi	26aa8 <main@@Base+0x10d58>
   273d0:	b	29438 <main@@Base+0x136e8>
   273d4:	mov	r2, r8
   273d8:	cmp	r2, r9
   273dc:	mov	r4, r9
   273e0:	beq	27418 <main@@Base+0x116c8>
   273e4:	ldrb	r0, [r2]
   273e8:	cmp	r0, #34	; 0x22
   273ec:	bne	273fc <main@@Base+0x116ac>
   273f0:	ldr	r4, [sp, #24]
   273f4:	add	r9, r2, #1
   273f8:	b	27418 <main@@Base+0x116c8>
   273fc:	ldr	r4, [sp, #24]
   27400:	mov	r1, r2
   27404:	mov	r0, r7
   27408:	mov	r3, #5
   2740c:	mov	r2, r4
   27410:	bl	3454c <flatcc_json_parser_set_error@@Base>
   27414:	mov	r9, r0
   27418:	sub	r8, r4, r9
   2741c:	mov	r0, #8
   27420:	cmp	r8, #8
   27424:	movcc	r0, r8
   27428:	sub	r3, r0, #1
   2742c:	cmp	r3, #7
   27430:	bhi	27dc0 <main@@Base+0x12070>
   27434:	add	r6, pc, #32
   27438:	mov	r0, #0
   2743c:	mov	ip, #0
   27440:	mov	lr, #0
   27444:	mov	r5, #0
   27448:	mov	r2, #0
   2744c:	mov	r4, #0
   27450:	mov	r7, #0
   27454:	mov	r1, #0
   27458:	ldr	pc, [r6, r3, lsl #2]
   2745c:	andeq	r7, r2, r0, asr #9
   27460:			; <UNDEFINED> instruction: 0x000274b8
   27464:			; <UNDEFINED> instruction: 0x000274b0
   27468:	andeq	r7, r2, r8, lsr #9
   2746c:	muleq	r2, ip, r4
   27470:	muleq	r2, r0, r4
   27474:	andeq	r7, r2, r0, lsl #9
   27478:	andeq	r7, r2, ip, ror r4
   2747c:	ldrb	ip, [r9, #7]
   27480:	ldrb	r1, [r9, #6]
   27484:	mov	lr, r0
   27488:	orr	r1, ip, r1, lsl #8
   2748c:	mov	r0, r1
   27490:	ldrb	r1, [r9, #5]
   27494:	mov	r5, lr
   27498:	orr	r0, r0, r1, lsl #16
   2749c:	ldrb	r1, [r9, #4]
   274a0:	mov	r2, r5
   274a4:	orr	r0, r0, r1, lsl #24
   274a8:	ldrb	r1, [r9, #3]
   274ac:	orr	r4, r1, r2
   274b0:	ldrb	r1, [r9, #2]
   274b4:	orr	r7, r4, r1, lsl #8
   274b8:	ldrb	r1, [r9, #1]
   274bc:	orr	r1, r7, r1, lsl #16
   274c0:	ldrb	r2, [r9]
   274c4:	orr	r4, r1, r2, lsl #24
   274c8:	movw	r1, #25442	; 0x6362
   274cc:	movt	r1, #25443	; 0x6363
   274d0:	cmp	r4, r1
   274d4:	bhi	27578 <main@@Base+0x11828>
   274d8:	movw	r1, #13108	; 0x3334
   274dc:	movw	r2, #25186	; 0x6262
   274e0:	movt	r1, #12594	; 0x3132
   274e4:	movt	r2, #25186	; 0x6262
   274e8:	eor	r5, r0, r1
   274ec:	movw	r1, #24929	; 0x6161
   274f0:	movt	r1, #24929	; 0x6161
   274f4:	eor	r0, r4, r1
   274f8:	orrs	r0, r5, r0
   274fc:	bne	275e4 <main@@Base+0x11894>
   27500:	ldr	r0, [sp, #24]
   27504:	add	r7, r9, #8
   27508:	mov	r1, #8
   2750c:	sub	r0, r0, r7
   27510:	cmp	r0, #8
   27514:	movcc	r1, r0
   27518:	sub	r1, r1, #1
   2751c:	cmp	r1, #7
   27520:	bhi	286dc <main@@Base+0x1298c>
   27524:	ldrb	r1, [r7]
   27528:	cmp	r1, #53	; 0x35
   2752c:	bne	286dc <main@@Base+0x1298c>
   27530:	cmp	r0, #2
   27534:	blt	286dc <main@@Base+0x1298c>
   27538:	ldrb	r0, [r9, #9]
   2753c:	cmp	r0, #34	; 0x22
   27540:	bne	286dc <main@@Base+0x1298c>
   27544:	ldr	r4, [sp, #24]
   27548:	add	r1, r9, #10
   2754c:	sub	r0, r4, r1
   27550:	cmp	r0, #2
   27554:	blt	27ce4 <main@@Base+0x11f94>
   27558:	ldrb	r0, [r1]
   2755c:	cmp	r0, #32
   27560:	bls	27cd0 <main@@Base+0x11f80>
   27564:	ldr	r4, [sp, #24]
   27568:	mov	r9, r1
   2756c:	cmp	r9, r4
   27570:	bne	27cfc <main@@Base+0x11fac>
   27574:	b	27d38 <main@@Base+0x11fe8>
   27578:	movw	r1, #13108	; 0x3334
   2757c:	movt	r1, #12594	; 0x3132
   27580:	eor	r5, r0, r1
   27584:	ldr	r0, [sp, #20]
   27588:	eor	r0, r4, r0
   2758c:	orrs	r0, r5, r0
   27590:	bne	27640 <main@@Base+0x118f0>
   27594:	cmp	r8, #9
   27598:	mov	r7, r9
   2759c:	blt	27b60 <main@@Base+0x11e10>
   275a0:	ldrb	r0, [r9, #8]
   275a4:	mov	r7, r9
   275a8:	cmp	r0, #34	; 0x22
   275ac:	bne	27b60 <main@@Base+0x11e10>
   275b0:	ldr	r4, [sp, #24]
   275b4:	add	r1, r9, #9
   275b8:	sub	r0, r4, r1
   275bc:	cmp	r0, #2
   275c0:	blt	276bc <main@@Base+0x1196c>
   275c4:	ldrb	r0, [r1]
   275c8:	cmp	r0, #32
   275cc:	bls	276a4 <main@@Base+0x11954>
   275d0:	ldr	r4, [sp, #24]
   275d4:	mov	r7, r1
   275d8:	cmp	r7, r4
   275dc:	bne	276d4 <main@@Base+0x11984>
   275e0:	b	27784 <main@@Base+0x11a34>
   275e4:	ldr	r7, [sp, #32]
   275e8:	teq	r4, r1
   275ec:	bne	27814 <main@@Base+0x11ac4>
   275f0:	cmp	r8, #5
   275f4:	mov	r1, r9
   275f8:	blt	27e08 <main@@Base+0x120b8>
   275fc:	ldrb	r0, [r9, #4]
   27600:	mov	r1, r9
   27604:	cmp	r0, #34	; 0x22
   27608:	bne	27e08 <main@@Base+0x120b8>
   2760c:	ldr	r6, [sp, #24]
   27610:	add	r2, r9, #5
   27614:	sub	r0, r6, r2
   27618:	cmp	r0, #2
   2761c:	blt	277b4 <main@@Base+0x11a64>
   27620:	ldrb	r0, [r2]
   27624:	cmp	r0, #32
   27628:	bls	2779c <main@@Base+0x11a4c>
   2762c:	ldr	r6, [sp, #24]
   27630:	mov	r1, r2
   27634:	cmp	r1, r6
   27638:	bne	277d0 <main@@Base+0x11a80>
   2763c:	b	278c8 <main@@Base+0x11b78>
   27640:	movw	r0, #25443	; 0x6363
   27644:	ldr	r7, [sp, #32]
   27648:	movt	r0, #25443	; 0x6363
   2764c:	teq	r4, r0
   27650:	bne	2794c <main@@Base+0x11bfc>
   27654:	cmp	r8, #5
   27658:	mov	r1, r9
   2765c:	blt	27e7c <main@@Base+0x1212c>
   27660:	ldrb	r0, [r9, #4]
   27664:	mov	r1, r9
   27668:	cmp	r0, #34	; 0x22
   2766c:	bne	27e7c <main@@Base+0x1212c>
   27670:	ldr	r6, [sp, #24]
   27674:	add	r2, r9, #5
   27678:	sub	r0, r6, r2
   2767c:	cmp	r0, #2
   27680:	blt	278f4 <main@@Base+0x11ba4>
   27684:	ldrb	r0, [r2]
   27688:	cmp	r0, #32
   2768c:	bls	278dc <main@@Base+0x11b8c>
   27690:	ldr	r6, [sp, #24]
   27694:	mov	r1, r2
   27698:	cmp	r1, r6
   2769c:	bne	27910 <main@@Base+0x11bc0>
   276a0:	b	279ac <main@@Base+0x11c5c>
   276a4:	ldr	r4, [sp, #24]
   276a8:	bne	276bc <main@@Base+0x1196c>
   276ac:	mov	r7, r9
   276b0:	ldrb	r0, [r7, #10]!
   276b4:	cmp	r0, #32
   276b8:	bhi	276cc <main@@Base+0x1197c>
   276bc:	ldr	r0, [sp, #32]
   276c0:	mov	r2, r4
   276c4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   276c8:	mov	r7, r0
   276cc:	cmp	r7, r4
   276d0:	beq	27784 <main@@Base+0x11a34>
   276d4:	ldrb	r0, [r7]
   276d8:	cmp	r0, #58	; 0x3a
   276dc:	bne	27784 <main@@Base+0x11a34>
   276e0:	ldr	r0, [sp, #24]
   276e4:	add	r1, r7, #1
   276e8:	sub	r0, r0, r1
   276ec:	cmp	r0, #2
   276f0:	blt	27b50 <main@@Base+0x11e00>
   276f4:	ldrb	r0, [r1]
   276f8:	cmp	r0, #32
   276fc:	bls	27b40 <main@@Base+0x11df0>
   27700:	mov	r7, r1
   27704:	cmp	r9, r7
   27708:	bne	27b68 <main@@Base+0x11e18>
   2770c:	ldr	r0, [sp, #24]
   27710:	add	r7, r9, #8
   27714:	mov	r1, #8
   27718:	sub	r0, r0, r7
   2771c:	cmp	r0, #8
   27720:	movcc	r1, r0
   27724:	sub	r1, r1, #1
   27728:	cmp	r1, #7
   2772c:	bhi	286dc <main@@Base+0x1298c>
   27730:	ldrb	r1, [r7]
   27734:	cmp	r1, #53	; 0x35
   27738:	bne	286dc <main@@Base+0x1298c>
   2773c:	cmp	r0, #2
   27740:	blt	286dc <main@@Base+0x1298c>
   27744:	ldrb	r0, [r9, #9]
   27748:	cmp	r0, #34	; 0x22
   2774c:	bne	286dc <main@@Base+0x1298c>
   27750:	ldr	r0, [sp, #24]
   27754:	add	r1, r9, #10
   27758:	sub	r0, r0, r1
   2775c:	cmp	r0, #2
   27760:	blt	281ec <main@@Base+0x1249c>
   27764:	ldrb	r0, [r1]
   27768:	cmp	r0, #32
   2776c:	bls	281dc <main@@Base+0x1248c>
   27770:	mov	r9, r1
   27774:	ldr	r0, [sp, #24]
   27778:	cmp	r9, r0
   2777c:	bne	28208 <main@@Base+0x124b8>
   27780:	b	28244 <main@@Base+0x124f4>
   27784:	ldr	r0, [sp, #32]
   27788:	ldr	r2, [sp, #24]
   2778c:	mov	r1, r7
   27790:	mov	r3, #4
   27794:	bl	3454c <flatcc_json_parser_set_error@@Base>
   27798:	b	27b5c <main@@Base+0x11e0c>
   2779c:	ldr	r6, [sp, #24]
   277a0:	bne	277b4 <main@@Base+0x11a64>
   277a4:	mov	r1, r9
   277a8:	ldrb	r0, [r1, #6]!
   277ac:	cmp	r0, #32
   277b0:	bhi	277c8 <main@@Base+0x11a78>
   277b4:	mov	r1, r2
   277b8:	mov	r0, r7
   277bc:	mov	r2, r6
   277c0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   277c4:	mov	r1, r0
   277c8:	cmp	r1, r6
   277cc:	beq	278c8 <main@@Base+0x11b78>
   277d0:	ldrb	r0, [r1]
   277d4:	cmp	r0, #58	; 0x3a
   277d8:	bne	278c8 <main@@Base+0x11b78>
   277dc:	ldr	r0, [sp, #24]
   277e0:	add	r2, r1, #1
   277e4:	sub	r0, r0, r2
   277e8:	cmp	r0, #2
   277ec:	blt	27df4 <main@@Base+0x120a4>
   277f0:	ldrb	r0, [r2]
   277f4:	cmp	r0, #32
   277f8:	bls	27de0 <main@@Base+0x12090>
   277fc:	ldr	r7, [sp, #32]
   27800:	mov	r1, r2
   27804:	movw	r2, #25186	; 0x6262
   27808:	cmp	r9, r1
   2780c:	movt	r2, #25186	; 0x6262
   27810:	bne	27e18 <main@@Base+0x120c8>
   27814:	eor	r0, r4, r2
   27818:	orrs	r0, r5, r0
   2781c:	bne	27870 <main@@Base+0x11b20>
   27820:	cmp	r8, #9
   27824:	mov	r7, r9
   27828:	blt	27ee0 <main@@Base+0x12190>
   2782c:	ldrb	r0, [r9, #8]
   27830:	mov	r7, r9
   27834:	cmp	r0, #34	; 0x22
   27838:	bne	27ee0 <main@@Base+0x12190>
   2783c:	ldr	r4, [sp, #24]
   27840:	add	r1, r9, #9
   27844:	sub	r0, r4, r1
   27848:	cmp	r0, #2
   2784c:	blt	279d8 <main@@Base+0x11c88>
   27850:	ldrb	r0, [r1]
   27854:	cmp	r0, #32
   27858:	bls	279c0 <main@@Base+0x11c70>
   2785c:	ldr	r4, [sp, #24]
   27860:	mov	r7, r1
   27864:	cmp	r7, r4
   27868:	bne	279f0 <main@@Base+0x11ca0>
   2786c:	b	27a30 <main@@Base+0x11ce0>
   27870:	teq	r4, r2
   27874:	bne	27dc0 <main@@Base+0x12070>
   27878:	cmp	r8, #5
   2787c:	mov	r1, r9
   27880:	blt	283ec <main@@Base+0x1269c>
   27884:	ldrb	r0, [r9, #4]
   27888:	mov	r1, r9
   2788c:	cmp	r0, #34	; 0x22
   27890:	bne	283ec <main@@Base+0x1269c>
   27894:	ldr	r0, [sp, #24]
   27898:	add	r2, r9, #5
   2789c:	sub	r0, r0, r2
   278a0:	cmp	r0, #2
   278a4:	blt	27d64 <main@@Base+0x12014>
   278a8:	ldrb	r0, [r2]
   278ac:	cmp	r0, #32
   278b0:	bls	27d50 <main@@Base+0x12000>
   278b4:	mov	r1, r2
   278b8:	ldr	r0, [sp, #24]
   278bc:	cmp	r1, r0
   278c0:	bne	27d84 <main@@Base+0x12034>
   278c4:	b	27dcc <main@@Base+0x1207c>
   278c8:	ldr	r2, [sp, #24]
   278cc:	mov	r0, r7
   278d0:	mov	r3, #4
   278d4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   278d8:	b	27e04 <main@@Base+0x120b4>
   278dc:	ldr	r6, [sp, #24]
   278e0:	bne	278f4 <main@@Base+0x11ba4>
   278e4:	mov	r1, r9
   278e8:	ldrb	r0, [r1, #6]!
   278ec:	cmp	r0, #32
   278f0:	bhi	27908 <main@@Base+0x11bb8>
   278f4:	mov	r1, r2
   278f8:	mov	r0, r7
   278fc:	mov	r2, r6
   27900:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   27904:	mov	r1, r0
   27908:	cmp	r1, r6
   2790c:	beq	279ac <main@@Base+0x11c5c>
   27910:	ldrb	r0, [r1]
   27914:	cmp	r0, #58	; 0x3a
   27918:	bne	279ac <main@@Base+0x11c5c>
   2791c:	ldr	r0, [sp, #24]
   27920:	add	r2, r1, #1
   27924:	sub	r0, r0, r2
   27928:	cmp	r0, #2
   2792c:	blt	27e68 <main@@Base+0x12118>
   27930:	ldrb	r0, [r2]
   27934:	cmp	r0, #32
   27938:	bls	27e54 <main@@Base+0x12104>
   2793c:	ldr	r7, [sp, #32]
   27940:	mov	r1, r2
   27944:	cmp	r9, r1
   27948:	bne	27e84 <main@@Base+0x12134>
   2794c:	ldr	r0, [sp, #16]
   27950:	eor	r0, r4, r0
   27954:	orrs	r0, r5, r0
   27958:	bne	27dc0 <main@@Base+0x12070>
   2795c:	cmp	r8, #9
   27960:	mov	r7, r9
   27964:	blt	2805c <main@@Base+0x1230c>
   27968:	ldrb	r0, [r9, #8]
   2796c:	mov	r7, r9
   27970:	cmp	r0, #34	; 0x22
   27974:	bne	2805c <main@@Base+0x1230c>
   27978:	ldr	r4, [sp, #24]
   2797c:	add	r1, r9, #9
   27980:	sub	r0, r4, r1
   27984:	cmp	r0, #2
   27988:	blt	27a60 <main@@Base+0x11d10>
   2798c:	ldrb	r0, [r1]
   27990:	cmp	r0, #32
   27994:	bls	27a48 <main@@Base+0x11cf8>
   27998:	ldr	r4, [sp, #24]
   2799c:	mov	r7, r1
   279a0:	cmp	r7, r4
   279a4:	bne	27a78 <main@@Base+0x11d28>
   279a8:	b	27b28 <main@@Base+0x11dd8>
   279ac:	ldr	r2, [sp, #24]
   279b0:	mov	r0, r7
   279b4:	mov	r3, #4
   279b8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   279bc:	b	27e78 <main@@Base+0x12128>
   279c0:	ldr	r4, [sp, #24]
   279c4:	bne	279d8 <main@@Base+0x11c88>
   279c8:	mov	r7, r9
   279cc:	ldrb	r0, [r7, #10]!
   279d0:	cmp	r0, #32
   279d4:	bhi	279e8 <main@@Base+0x11c98>
   279d8:	ldr	r0, [sp, #32]
   279dc:	mov	r2, r4
   279e0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   279e4:	mov	r7, r0
   279e8:	cmp	r7, r4
   279ec:	beq	27a30 <main@@Base+0x11ce0>
   279f0:	ldrb	r0, [r7]
   279f4:	cmp	r0, #58	; 0x3a
   279f8:	bne	27a30 <main@@Base+0x11ce0>
   279fc:	ldr	r0, [sp, #24]
   27a00:	add	r1, r7, #1
   27a04:	sub	r0, r0, r1
   27a08:	cmp	r0, #2
   27a0c:	blt	27ed0 <main@@Base+0x12180>
   27a10:	ldrb	r0, [r1]
   27a14:	cmp	r0, #32
   27a18:	bls	27ec0 <main@@Base+0x12170>
   27a1c:	mov	r7, r1
   27a20:	cmp	r9, r7
   27a24:	bne	27ee8 <main@@Base+0x12198>
   27a28:	ldr	r7, [sp, #32]
   27a2c:	b	27dc0 <main@@Base+0x12070>
   27a30:	ldr	r0, [sp, #32]
   27a34:	ldr	r2, [sp, #24]
   27a38:	mov	r1, r7
   27a3c:	mov	r3, #4
   27a40:	bl	3454c <flatcc_json_parser_set_error@@Base>
   27a44:	b	27edc <main@@Base+0x1218c>
   27a48:	ldr	r4, [sp, #24]
   27a4c:	bne	27a60 <main@@Base+0x11d10>
   27a50:	mov	r7, r9
   27a54:	ldrb	r0, [r7, #10]!
   27a58:	cmp	r0, #32
   27a5c:	bhi	27a70 <main@@Base+0x11d20>
   27a60:	ldr	r0, [sp, #32]
   27a64:	mov	r2, r4
   27a68:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   27a6c:	mov	r7, r0
   27a70:	cmp	r7, r4
   27a74:	beq	27b28 <main@@Base+0x11dd8>
   27a78:	ldrb	r0, [r7]
   27a7c:	cmp	r0, #58	; 0x3a
   27a80:	bne	27b28 <main@@Base+0x11dd8>
   27a84:	ldr	r0, [sp, #24]
   27a88:	add	r1, r7, #1
   27a8c:	sub	r0, r0, r1
   27a90:	cmp	r0, #2
   27a94:	blt	2804c <main@@Base+0x122fc>
   27a98:	ldrb	r0, [r1]
   27a9c:	cmp	r0, #32
   27aa0:	bls	2803c <main@@Base+0x122ec>
   27aa4:	mov	r7, r1
   27aa8:	cmp	r9, r7
   27aac:	bne	28064 <main@@Base+0x12314>
   27ab0:	ldr	r0, [sp, #24]
   27ab4:	add	r7, r9, #8
   27ab8:	mov	r1, #8
   27abc:	sub	r0, r0, r7
   27ac0:	cmp	r0, #8
   27ac4:	movcc	r1, r0
   27ac8:	sub	r1, r1, #1
   27acc:	cmp	r1, #7
   27ad0:	bhi	286dc <main@@Base+0x1298c>
   27ad4:	ldrb	r1, [r7]
   27ad8:	cmp	r1, #53	; 0x35
   27adc:	bne	286dc <main@@Base+0x1298c>
   27ae0:	cmp	r0, #2
   27ae4:	blt	286dc <main@@Base+0x1298c>
   27ae8:	ldrb	r0, [r9, #9]
   27aec:	cmp	r0, #34	; 0x22
   27af0:	bne	286dc <main@@Base+0x1298c>
   27af4:	ldr	r0, [sp, #24]
   27af8:	add	r1, r9, #10
   27afc:	sub	r0, r0, r1
   27b00:	cmp	r0, #2
   27b04:	blt	2846c <main@@Base+0x1271c>
   27b08:	ldrb	r0, [r1]
   27b0c:	cmp	r0, #32
   27b10:	bls	2845c <main@@Base+0x1270c>
   27b14:	mov	r9, r1
   27b18:	ldr	r0, [sp, #24]
   27b1c:	cmp	r9, r0
   27b20:	bne	28488 <main@@Base+0x12738>
   27b24:	b	284c4 <main@@Base+0x12774>
   27b28:	ldr	r0, [sp, #32]
   27b2c:	ldr	r2, [sp, #24]
   27b30:	mov	r1, r7
   27b34:	mov	r3, #4
   27b38:	bl	3454c <flatcc_json_parser_set_error@@Base>
   27b3c:	b	28058 <main@@Base+0x12308>
   27b40:	bne	27b50 <main@@Base+0x11e00>
   27b44:	ldrb	r0, [r7, #2]!
   27b48:	cmp	r0, #32
   27b4c:	bhi	27b60 <main@@Base+0x11e10>
   27b50:	ldr	r0, [sp, #32]
   27b54:	ldr	r2, [sp, #24]
   27b58:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   27b5c:	mov	r7, r0
   27b60:	cmp	r9, r7
   27b64:	beq	2770c <main@@Base+0x119bc>
   27b68:	ldr	r9, [sp, #24]
   27b6c:	mov	r4, #0
   27b70:	str	r4, [fp, #-36]	; 0xffffffdc
   27b74:	str	r4, [fp, #-40]	; 0xffffffd8
   27b78:	str	r4, [sp, #44]	; 0x2c
   27b7c:	str	r4, [sp, #40]	; 0x28
   27b80:	str	r4, [fp, #-44]	; 0xffffffd4
   27b84:	cmp	r7, r9
   27b88:	beq	27be4 <main@@Base+0x11e94>
   27b8c:	sub	r0, fp, #40	; 0x28
   27b90:	mov	r1, r7
   27b94:	mov	r2, r9
   27b98:	sub	r3, fp, #44	; 0x2c
   27b9c:	str	r0, [sp]
   27ba0:	ldr	r0, [sp, #32]
   27ba4:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   27ba8:	cmp	r0, r7
   27bac:	beq	27bf8 <main@@Base+0x11ea8>
   27bb0:	sub	r5, fp, #44	; 0x2c
   27bb4:	mov	r8, r0
   27bb8:	ldm	r5, {r0, r4, r5}
   27bbc:	cmp	r0, #0
   27bc0:	beq	27c10 <main@@Base+0x11ec0>
   27bc4:	subs	r0, r4, #1
   27bc8:	sbcs	r0, r5, #-2147483648	; 0x80000000
   27bcc:	bcc	27c44 <main@@Base+0x11ef4>
   27bd0:	ldr	r0, [sp, #32]
   27bd4:	mov	r1, r8
   27bd8:	mov	r2, r9
   27bdc:	mov	r3, #8
   27be0:	b	27c28 <main@@Base+0x11ed8>
   27be4:	mov	r5, #0
   27be8:	mov	r8, r9
   27bec:	cmp	r7, r8
   27bf0:	bne	27c98 <main@@Base+0x11f48>
   27bf4:	b	27c5c <main@@Base+0x11f0c>
   27bf8:	mov	r4, #0
   27bfc:	mov	r5, #0
   27c00:	mov	r8, r7
   27c04:	cmp	r7, r8
   27c08:	bne	27c98 <main@@Base+0x11f48>
   27c0c:	b	27c5c <main@@Base+0x11f0c>
   27c10:	cmn	r5, #1
   27c14:	bgt	27c4c <main@@Base+0x11efc>
   27c18:	ldr	r0, [sp, #32]
   27c1c:	mov	r1, r8
   27c20:	mov	r2, r9
   27c24:	mov	r3, #7
   27c28:	bl	3454c <flatcc_json_parser_set_error@@Base>
   27c2c:	mov	r8, r0
   27c30:	mov	r4, #0
   27c34:	mov	r5, #0
   27c38:	cmp	r7, r8
   27c3c:	bne	27c98 <main@@Base+0x11f48>
   27c40:	b	27c5c <main@@Base+0x11f0c>
   27c44:	rsbs	r4, r4, #0
   27c48:	rsc	r5, r5, #0
   27c4c:	str	r4, [sp, #40]	; 0x28
   27c50:	str	r5, [sp, #44]	; 0x2c
   27c54:	cmp	r7, r8
   27c58:	bne	27c98 <main@@Base+0x11f48>
   27c5c:	add	r0, sp, #40	; 0x28
   27c60:	mov	r1, r7
   27c64:	mov	r2, r9
   27c68:	str	r0, [sp]
   27c6c:	movw	r0, #53756	; 0xd1fc
   27c70:	movt	r0, #5
   27c74:	add	r3, r0, #24
   27c78:	ldr	r0, [sp, #32]
   27c7c:	bl	24594 <main@@Base+0xe844>
   27c80:	mov	r8, r0
   27c84:	cmp	r0, r7
   27c88:	cmpne	r8, r9
   27c8c:	beq	2955c <main@@Base+0x1380c>
   27c90:	ldr	r4, [sp, #40]	; 0x28
   27c94:	ldr	r5, [sp, #44]	; 0x2c
   27c98:	ldr	r7, [sp, #32]
   27c9c:	orrs	r0, r4, r5
   27ca0:	bne	27cb0 <main@@Base+0x11f60>
   27ca4:	ldrb	r0, [r7, #8]
   27ca8:	tst	r0, #2
   27cac:	beq	286f8 <main@@Base+0x129a8>
   27cb0:	ldr	r0, [r7]
   27cb4:	mov	r1, #5
   27cb8:	mov	r2, #8
   27cbc:	mov	r3, #8
   27cc0:	bl	30dac <flatcc_builder_table_add@@Base>
   27cc4:	cmp	r0, #0
   27cc8:	bne	281c8 <main@@Base+0x12478>
   27ccc:	b	2955c <main@@Base+0x1380c>
   27cd0:	ldr	r4, [sp, #24]
   27cd4:	bne	27ce4 <main@@Base+0x11f94>
   27cd8:	ldrb	r0, [r9, #11]!
   27cdc:	cmp	r0, #32
   27ce0:	bhi	27cf4 <main@@Base+0x11fa4>
   27ce4:	ldr	r0, [sp, #32]
   27ce8:	mov	r2, r4
   27cec:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   27cf0:	mov	r9, r0
   27cf4:	cmp	r9, r4
   27cf8:	beq	27d38 <main@@Base+0x11fe8>
   27cfc:	ldrb	r0, [r9]
   27d00:	cmp	r0, #58	; 0x3a
   27d04:	bne	27d38 <main@@Base+0x11fe8>
   27d08:	ldr	r0, [sp, #24]
   27d0c:	add	r1, r9, #1
   27d10:	sub	r0, r0, r1
   27d14:	cmp	r0, #2
   27d18:	blt	2826c <main@@Base+0x1251c>
   27d1c:	ldrb	r0, [r1]
   27d20:	cmp	r0, #32
   27d24:	bls	2825c <main@@Base+0x1250c>
   27d28:	mov	r9, r1
   27d2c:	cmp	r7, r9
   27d30:	bne	28284 <main@@Base+0x12534>
   27d34:	b	286dc <main@@Base+0x1298c>
   27d38:	ldr	r0, [sp, #32]
   27d3c:	ldr	r2, [sp, #24]
   27d40:	mov	r1, r9
   27d44:	mov	r3, #4
   27d48:	bl	3454c <flatcc_json_parser_set_error@@Base>
   27d4c:	b	28278 <main@@Base+0x12528>
   27d50:	bne	27d64 <main@@Base+0x12014>
   27d54:	mov	r1, r9
   27d58:	ldrb	r0, [r1, #6]!
   27d5c:	cmp	r0, #32
   27d60:	bhi	27d78 <main@@Base+0x12028>
   27d64:	mov	r1, r2
   27d68:	ldr	r2, [sp, #24]
   27d6c:	mov	r0, r7
   27d70:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   27d74:	mov	r1, r0
   27d78:	ldr	r0, [sp, #24]
   27d7c:	cmp	r1, r0
   27d80:	beq	27dcc <main@@Base+0x1207c>
   27d84:	ldrb	r0, [r1]
   27d88:	cmp	r0, #58	; 0x3a
   27d8c:	bne	27dcc <main@@Base+0x1207c>
   27d90:	ldr	r0, [sp, #24]
   27d94:	add	r2, r1, #1
   27d98:	sub	r0, r0, r2
   27d9c:	cmp	r0, #2
   27da0:	blt	283d8 <main@@Base+0x12688>
   27da4:	ldrb	r0, [r2]
   27da8:	cmp	r0, #32
   27dac:	bls	283c4 <main@@Base+0x12674>
   27db0:	ldr	r7, [sp, #32]
   27db4:	mov	r1, r2
   27db8:	cmp	r9, r1
   27dbc:	bne	283f4 <main@@Base+0x126a4>
   27dc0:	mov	r0, r7
   27dc4:	mov	r1, r9
   27dc8:	b	286e8 <main@@Base+0x12998>
   27dcc:	ldr	r2, [sp, #24]
   27dd0:	mov	r0, r7
   27dd4:	mov	r3, #4
   27dd8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   27ddc:	b	283e8 <main@@Base+0x12698>
   27de0:	ldr	r7, [sp, #32]
   27de4:	bne	27df4 <main@@Base+0x120a4>
   27de8:	ldrb	r0, [r1, #2]!
   27dec:	cmp	r0, #32
   27df0:	bhi	27e08 <main@@Base+0x120b8>
   27df4:	mov	r1, r2
   27df8:	ldr	r2, [sp, #24]
   27dfc:	mov	r0, r7
   27e00:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   27e04:	mov	r1, r0
   27e08:	movw	r2, #25186	; 0x6262
   27e0c:	cmp	r9, r1
   27e10:	movt	r2, #25186	; 0x6262
   27e14:	beq	27814 <main@@Base+0x11ac4>
   27e18:	ldr	r9, [sp, #24]
   27e1c:	mov	r0, r7
   27e20:	add	r3, sp, #36	; 0x24
   27e24:	mov	r2, r9
   27e28:	bl	37198 <flatcc_json_parser_build_string@@Base>
   27e2c:	mov	r8, r0
   27e30:	ldr	r0, [sp, #36]	; 0x24
   27e34:	cmp	r0, #0
   27e38:	beq	29560 <main@@Base+0x13810>
   27e3c:	ldr	r0, [r7]
   27e40:	mov	r1, #0
   27e44:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   27e48:	cmp	r0, #0
   27e4c:	bne	2842c <main@@Base+0x126dc>
   27e50:	b	29560 <main@@Base+0x13810>
   27e54:	ldr	r7, [sp, #32]
   27e58:	bne	27e68 <main@@Base+0x12118>
   27e5c:	ldrb	r0, [r1, #2]!
   27e60:	cmp	r0, #32
   27e64:	bhi	27e7c <main@@Base+0x1212c>
   27e68:	mov	r1, r2
   27e6c:	ldr	r2, [sp, #24]
   27e70:	mov	r0, r7
   27e74:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   27e78:	mov	r1, r0
   27e7c:	cmp	r9, r1
   27e80:	beq	2794c <main@@Base+0x11bfc>
   27e84:	ldr	r9, [sp, #24]
   27e88:	mov	r0, r7
   27e8c:	add	r3, sp, #36	; 0x24
   27e90:	mov	r2, r9
   27e94:	bl	37198 <flatcc_json_parser_build_string@@Base>
   27e98:	mov	r8, r0
   27e9c:	ldr	r0, [sp, #36]	; 0x24
   27ea0:	cmp	r0, #0
   27ea4:	beq	29560 <main@@Base+0x13810>
   27ea8:	ldr	r0, [r7]
   27eac:	mov	r1, #4
   27eb0:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   27eb4:	cmp	r0, #0
   27eb8:	bne	2842c <main@@Base+0x126dc>
   27ebc:	b	29560 <main@@Base+0x13810>
   27ec0:	bne	27ed0 <main@@Base+0x12180>
   27ec4:	ldrb	r0, [r7, #2]!
   27ec8:	cmp	r0, #32
   27ecc:	bhi	27ee0 <main@@Base+0x12190>
   27ed0:	ldr	r0, [sp, #32]
   27ed4:	ldr	r2, [sp, #24]
   27ed8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   27edc:	mov	r7, r0
   27ee0:	cmp	r9, r7
   27ee4:	beq	27a28 <main@@Base+0x11cd8>
   27ee8:	ldr	r9, [sp, #24]
   27eec:	mov	r4, #0
   27ef0:	str	r4, [fp, #-36]	; 0xffffffdc
   27ef4:	str	r4, [fp, #-40]	; 0xffffffd8
   27ef8:	str	r4, [sp, #44]	; 0x2c
   27efc:	str	r4, [sp, #40]	; 0x28
   27f00:	str	r4, [fp, #-44]	; 0xffffffd4
   27f04:	cmp	r7, r9
   27f08:	beq	27f64 <main@@Base+0x12214>
   27f0c:	sub	r0, fp, #40	; 0x28
   27f10:	mov	r1, r7
   27f14:	mov	r2, r9
   27f18:	sub	r3, fp, #44	; 0x2c
   27f1c:	str	r0, [sp]
   27f20:	ldr	r0, [sp, #32]
   27f24:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   27f28:	cmp	r0, r7
   27f2c:	beq	27f78 <main@@Base+0x12228>
   27f30:	sub	r5, fp, #44	; 0x2c
   27f34:	mov	r8, r0
   27f38:	ldm	r5, {r0, r4, r5}
   27f3c:	cmp	r0, #0
   27f40:	beq	27f90 <main@@Base+0x12240>
   27f44:	subs	r0, r4, #1
   27f48:	sbcs	r0, r5, #-2147483648	; 0x80000000
   27f4c:	bcc	27fc4 <main@@Base+0x12274>
   27f50:	ldr	r0, [sp, #32]
   27f54:	mov	r1, r8
   27f58:	mov	r2, r9
   27f5c:	mov	r3, #8
   27f60:	b	27fa8 <main@@Base+0x12258>
   27f64:	mov	r5, #0
   27f68:	mov	r8, r9
   27f6c:	cmp	r7, r8
   27f70:	bne	28018 <main@@Base+0x122c8>
   27f74:	b	27fdc <main@@Base+0x1228c>
   27f78:	mov	r4, #0
   27f7c:	mov	r5, #0
   27f80:	mov	r8, r7
   27f84:	cmp	r7, r8
   27f88:	bne	28018 <main@@Base+0x122c8>
   27f8c:	b	27fdc <main@@Base+0x1228c>
   27f90:	cmn	r5, #1
   27f94:	bgt	27fcc <main@@Base+0x1227c>
   27f98:	ldr	r0, [sp, #32]
   27f9c:	mov	r1, r8
   27fa0:	mov	r2, r9
   27fa4:	mov	r3, #7
   27fa8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   27fac:	mov	r8, r0
   27fb0:	mov	r4, #0
   27fb4:	mov	r5, #0
   27fb8:	cmp	r7, r8
   27fbc:	bne	28018 <main@@Base+0x122c8>
   27fc0:	b	27fdc <main@@Base+0x1228c>
   27fc4:	rsbs	r4, r4, #0
   27fc8:	rsc	r5, r5, #0
   27fcc:	str	r4, [sp, #40]	; 0x28
   27fd0:	str	r5, [sp, #44]	; 0x2c
   27fd4:	cmp	r7, r8
   27fd8:	bne	28018 <main@@Base+0x122c8>
   27fdc:	add	r0, sp, #40	; 0x28
   27fe0:	mov	r1, r7
   27fe4:	mov	r2, r9
   27fe8:	str	r0, [sp]
   27fec:	movw	r0, #53756	; 0xd1fc
   27ff0:	movt	r0, #5
   27ff4:	add	r3, r0, #12
   27ff8:	ldr	r0, [sp, #32]
   27ffc:	bl	24594 <main@@Base+0xe844>
   28000:	mov	r8, r0
   28004:	cmp	r0, r7
   28008:	cmpne	r8, r9
   2800c:	beq	29558 <main@@Base+0x13808>
   28010:	ldr	r4, [sp, #40]	; 0x28
   28014:	ldr	r5, [sp, #44]	; 0x2c
   28018:	ldr	r7, [sp, #32]
   2801c:	orrs	r0, r4, r5
   28020:	bne	28030 <main@@Base+0x122e0>
   28024:	ldrb	r0, [r7, #8]
   28028:	tst	r0, #2
   2802c:	beq	286f8 <main@@Base+0x129a8>
   28030:	ldr	r0, [r7]
   28034:	mov	r1, #3
   28038:	b	281b4 <main@@Base+0x12464>
   2803c:	bne	2804c <main@@Base+0x122fc>
   28040:	ldrb	r0, [r7, #2]!
   28044:	cmp	r0, #32
   28048:	bhi	2805c <main@@Base+0x1230c>
   2804c:	ldr	r0, [sp, #32]
   28050:	ldr	r2, [sp, #24]
   28054:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   28058:	mov	r7, r0
   2805c:	cmp	r9, r7
   28060:	beq	27ab0 <main@@Base+0x11d60>
   28064:	ldr	r9, [sp, #24]
   28068:	mov	r4, #0
   2806c:	str	r4, [fp, #-36]	; 0xffffffdc
   28070:	str	r4, [fp, #-40]	; 0xffffffd8
   28074:	str	r4, [sp, #44]	; 0x2c
   28078:	str	r4, [sp, #40]	; 0x28
   2807c:	str	r4, [fp, #-44]	; 0xffffffd4
   28080:	cmp	r7, r9
   28084:	beq	280e0 <main@@Base+0x12390>
   28088:	sub	r0, fp, #40	; 0x28
   2808c:	mov	r1, r7
   28090:	mov	r2, r9
   28094:	sub	r3, fp, #44	; 0x2c
   28098:	str	r0, [sp]
   2809c:	ldr	r0, [sp, #32]
   280a0:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   280a4:	cmp	r0, r7
   280a8:	beq	280f4 <main@@Base+0x123a4>
   280ac:	sub	r5, fp, #44	; 0x2c
   280b0:	mov	r8, r0
   280b4:	ldm	r5, {r0, r4, r5}
   280b8:	cmp	r0, #0
   280bc:	beq	2810c <main@@Base+0x123bc>
   280c0:	subs	r0, r4, #1
   280c4:	sbcs	r0, r5, #-2147483648	; 0x80000000
   280c8:	bcc	28140 <main@@Base+0x123f0>
   280cc:	ldr	r0, [sp, #32]
   280d0:	mov	r1, r8
   280d4:	mov	r2, r9
   280d8:	mov	r3, #8
   280dc:	b	28124 <main@@Base+0x123d4>
   280e0:	mov	r5, #0
   280e4:	mov	r8, r9
   280e8:	cmp	r7, r8
   280ec:	bne	28194 <main@@Base+0x12444>
   280f0:	b	28158 <main@@Base+0x12408>
   280f4:	mov	r4, #0
   280f8:	mov	r5, #0
   280fc:	mov	r8, r7
   28100:	cmp	r7, r8
   28104:	bne	28194 <main@@Base+0x12444>
   28108:	b	28158 <main@@Base+0x12408>
   2810c:	cmn	r5, #1
   28110:	bgt	28148 <main@@Base+0x123f8>
   28114:	ldr	r0, [sp, #32]
   28118:	mov	r1, r8
   2811c:	mov	r2, r9
   28120:	mov	r3, #7
   28124:	bl	3454c <flatcc_json_parser_set_error@@Base>
   28128:	mov	r8, r0
   2812c:	mov	r4, #0
   28130:	mov	r5, #0
   28134:	cmp	r7, r8
   28138:	bne	28194 <main@@Base+0x12444>
   2813c:	b	28158 <main@@Base+0x12408>
   28140:	rsbs	r4, r4, #0
   28144:	rsc	r5, r5, #0
   28148:	str	r4, [sp, #40]	; 0x28
   2814c:	str	r5, [sp, #44]	; 0x2c
   28150:	cmp	r7, r8
   28154:	bne	28194 <main@@Base+0x12444>
   28158:	add	r0, sp, #40	; 0x28
   2815c:	mov	r1, r7
   28160:	mov	r2, r9
   28164:	str	r0, [sp]
   28168:	movw	r0, #53756	; 0xd1fc
   2816c:	movt	r0, #5
   28170:	add	r3, r0, #48	; 0x30
   28174:	ldr	r0, [sp, #32]
   28178:	bl	24594 <main@@Base+0xe844>
   2817c:	mov	r8, r0
   28180:	cmp	r0, r7
   28184:	cmpne	r8, r9
   28188:	beq	29558 <main@@Base+0x13808>
   2818c:	ldr	r4, [sp, #40]	; 0x28
   28190:	ldr	r5, [sp, #44]	; 0x2c
   28194:	ldr	r7, [sp, #32]
   28198:	orrs	r0, r4, r5
   2819c:	bne	281ac <main@@Base+0x1245c>
   281a0:	ldrb	r0, [r7, #8]
   281a4:	tst	r0, #2
   281a8:	beq	286f8 <main@@Base+0x129a8>
   281ac:	ldr	r0, [r7]
   281b0:	mov	r1, #7
   281b4:	mov	r2, #8
   281b8:	mov	r3, #8
   281bc:	bl	30dac <flatcc_builder_table_add@@Base>
   281c0:	cmp	r0, #0
   281c4:	beq	29558 <main@@Base+0x13808>
   281c8:	strd	r4, [r0]
   281cc:	sub	r0, r9, r8
   281d0:	cmp	r0, #2
   281d4:	bge	28704 <main@@Base+0x129b4>
   281d8:	b	28734 <main@@Base+0x129e4>
   281dc:	bne	281ec <main@@Base+0x1249c>
   281e0:	ldrb	r0, [r9, #11]!
   281e4:	cmp	r0, #32
   281e8:	bhi	281fc <main@@Base+0x124ac>
   281ec:	ldr	r0, [sp, #32]
   281f0:	ldr	r2, [sp, #24]
   281f4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   281f8:	mov	r9, r0
   281fc:	ldr	r0, [sp, #24]
   28200:	cmp	r9, r0
   28204:	beq	28244 <main@@Base+0x124f4>
   28208:	ldrb	r0, [r9]
   2820c:	cmp	r0, #58	; 0x3a
   28210:	bne	28244 <main@@Base+0x124f4>
   28214:	ldr	r0, [sp, #24]
   28218:	add	r1, r9, #1
   2821c:	sub	r0, r0, r1
   28220:	cmp	r0, #2
   28224:	blt	284ec <main@@Base+0x1279c>
   28228:	ldrb	r0, [r1]
   2822c:	cmp	r0, #32
   28230:	bls	284dc <main@@Base+0x1278c>
   28234:	mov	r9, r1
   28238:	cmp	r7, r9
   2823c:	bne	28504 <main@@Base+0x127b4>
   28240:	b	286dc <main@@Base+0x1298c>
   28244:	ldr	r0, [sp, #32]
   28248:	ldr	r2, [sp, #24]
   2824c:	mov	r1, r9
   28250:	mov	r3, #4
   28254:	bl	3454c <flatcc_json_parser_set_error@@Base>
   28258:	b	284f8 <main@@Base+0x127a8>
   2825c:	bne	2826c <main@@Base+0x1251c>
   28260:	ldrb	r0, [r9, #2]!
   28264:	cmp	r0, #32
   28268:	bhi	2827c <main@@Base+0x1252c>
   2826c:	ldr	r0, [sp, #32]
   28270:	ldr	r2, [sp, #24]
   28274:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   28278:	mov	r9, r0
   2827c:	cmp	r7, r9
   28280:	beq	286dc <main@@Base+0x1298c>
   28284:	ldr	r2, [sp, #24]
   28288:	mov	r4, #0
   2828c:	str	r4, [fp, #-36]	; 0xffffffdc
   28290:	str	r4, [fp, #-40]	; 0xffffffd8
   28294:	str	r4, [fp, #-44]	; 0xffffffd4
   28298:	str	r4, [sp, #40]	; 0x28
   2829c:	cmp	r9, r2
   282a0:	beq	282e8 <main@@Base+0x12598>
   282a4:	sub	r0, fp, #40	; 0x28
   282a8:	mov	r1, r9
   282ac:	add	r3, sp, #40	; 0x28
   282b0:	str	r0, [sp]
   282b4:	ldr	r0, [sp, #32]
   282b8:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   282bc:	cmp	r0, r9
   282c0:	beq	282fc <main@@Base+0x125ac>
   282c4:	mov	r8, r0
   282c8:	ldr	r0, [sp, #40]	; 0x28
   282cc:	cmp	r0, #0
   282d0:	beq	28310 <main@@Base+0x125c0>
   282d4:	ldr	r7, [sp, #32]
   282d8:	ldr	r2, [sp, #24]
   282dc:	mov	r1, r8
   282e0:	mov	r3, #8
   282e4:	b	2832c <main@@Base+0x125dc>
   282e8:	mov	r8, r2
   282ec:	ldr	r7, [sp, #32]
   282f0:	cmp	r9, r8
   282f4:	bne	2837c <main@@Base+0x1262c>
   282f8:	b	28340 <main@@Base+0x125f0>
   282fc:	mov	r8, r9
   28300:	ldr	r7, [sp, #32]
   28304:	cmp	r9, r8
   28308:	bne	2837c <main@@Base+0x1262c>
   2830c:	b	28340 <main@@Base+0x125f0>
   28310:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28314:	cmp	r0, #0
   28318:	beq	28444 <main@@Base+0x126f4>
   2831c:	ldr	r7, [sp, #32]
   28320:	ldr	r2, [sp, #24]
   28324:	mov	r1, r8
   28328:	mov	r3, #7
   2832c:	mov	r0, r7
   28330:	bl	3454c <flatcc_json_parser_set_error@@Base>
   28334:	mov	r8, r0
   28338:	cmp	r9, r8
   2833c:	bne	2837c <main@@Base+0x1262c>
   28340:	ldr	r2, [sp, #24]
   28344:	movw	r3, #53756	; 0xd1fc
   28348:	sub	r0, fp, #44	; 0x2c
   2834c:	mov	r1, r9
   28350:	movt	r3, #5
   28354:	str	r0, [sp]
   28358:	mov	r0, r7
   2835c:	bl	247ac <main@@Base+0xea5c>
   28360:	cmp	r0, r9
   28364:	mov	r8, r0
   28368:	ldrne	r0, [sp, #24]
   2836c:	cmpne	r8, r0
   28370:	beq	29558 <main@@Base+0x13808>
   28374:	ldr	r4, [fp, #-44]	; 0xffffffd4
   28378:	ldr	r7, [sp, #32]
   2837c:	cmp	r4, #0
   28380:	bne	28390 <main@@Base+0x12640>
   28384:	ldrb	r0, [r7, #8]
   28388:	tst	r0, #2
   2838c:	beq	283b0 <main@@Base+0x12660>
   28390:	ldr	r0, [r7]
   28394:	mov	r1, #1
   28398:	mov	r2, #4
   2839c:	mov	r3, #4
   283a0:	bl	30dac <flatcc_builder_table_add@@Base>
   283a4:	cmp	r0, #0
   283a8:	beq	29558 <main@@Base+0x13808>
   283ac:	str	r4, [r0]
   283b0:	ldr	r9, [sp, #24]
   283b4:	sub	r0, r9, r8
   283b8:	cmp	r0, #2
   283bc:	bge	28704 <main@@Base+0x129b4>
   283c0:	b	28734 <main@@Base+0x129e4>
   283c4:	ldr	r7, [sp, #32]
   283c8:	bne	283d8 <main@@Base+0x12688>
   283cc:	ldrb	r0, [r1, #2]!
   283d0:	cmp	r0, #32
   283d4:	bhi	283ec <main@@Base+0x1269c>
   283d8:	mov	r1, r2
   283dc:	ldr	r2, [sp, #24]
   283e0:	mov	r0, r7
   283e4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   283e8:	mov	r1, r0
   283ec:	cmp	r9, r1
   283f0:	beq	27dc0 <main@@Base+0x12070>
   283f4:	ldr	r9, [sp, #24]
   283f8:	mov	r0, r7
   283fc:	add	r3, sp, #36	; 0x24
   28400:	mov	r2, r9
   28404:	bl	37198 <flatcc_json_parser_build_string@@Base>
   28408:	mov	r8, r0
   2840c:	ldr	r0, [sp, #36]	; 0x24
   28410:	cmp	r0, #0
   28414:	beq	29560 <main@@Base+0x13810>
   28418:	ldr	r0, [r7]
   2841c:	mov	r1, #2
   28420:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   28424:	cmp	r0, #0
   28428:	beq	29560 <main@@Base+0x13810>
   2842c:	ldr	r1, [sp, #36]	; 0x24
   28430:	str	r1, [r0]
   28434:	sub	r0, r9, r8
   28438:	cmp	r0, #2
   2843c:	bge	28704 <main@@Base+0x129b4>
   28440:	b	28734 <main@@Base+0x129e4>
   28444:	ldr	r4, [fp, #-40]	; 0xffffffd8
   28448:	str	r4, [fp, #-44]	; 0xffffffd4
   2844c:	ldr	r7, [sp, #32]
   28450:	cmp	r9, r8
   28454:	bne	2837c <main@@Base+0x1262c>
   28458:	b	28340 <main@@Base+0x125f0>
   2845c:	bne	2846c <main@@Base+0x1271c>
   28460:	ldrb	r0, [r9, #11]!
   28464:	cmp	r0, #32
   28468:	bhi	2847c <main@@Base+0x1272c>
   2846c:	ldr	r0, [sp, #32]
   28470:	ldr	r2, [sp, #24]
   28474:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   28478:	mov	r9, r0
   2847c:	ldr	r0, [sp, #24]
   28480:	cmp	r9, r0
   28484:	beq	284c4 <main@@Base+0x12774>
   28488:	ldrb	r0, [r9]
   2848c:	cmp	r0, #58	; 0x3a
   28490:	bne	284c4 <main@@Base+0x12774>
   28494:	ldr	r0, [sp, #24]
   28498:	add	r1, r9, #1
   2849c:	sub	r0, r0, r1
   284a0:	cmp	r0, #2
   284a4:	blt	2864c <main@@Base+0x128fc>
   284a8:	ldrb	r0, [r1]
   284ac:	cmp	r0, #32
   284b0:	bls	2863c <main@@Base+0x128ec>
   284b4:	mov	r9, r1
   284b8:	cmp	r7, r9
   284bc:	bne	28664 <main@@Base+0x12914>
   284c0:	b	286dc <main@@Base+0x1298c>
   284c4:	ldr	r0, [sp, #32]
   284c8:	ldr	r2, [sp, #24]
   284cc:	mov	r1, r9
   284d0:	mov	r3, #4
   284d4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   284d8:	b	28658 <main@@Base+0x12908>
   284dc:	bne	284ec <main@@Base+0x1279c>
   284e0:	ldrb	r0, [r9, #2]!
   284e4:	cmp	r0, #32
   284e8:	bhi	284fc <main@@Base+0x127ac>
   284ec:	ldr	r0, [sp, #32]
   284f0:	ldr	r2, [sp, #24]
   284f4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   284f8:	mov	r9, r0
   284fc:	cmp	r7, r9
   28500:	beq	286dc <main@@Base+0x1298c>
   28504:	ldr	r0, [sp, #24]
   28508:	mov	r4, #0
   2850c:	str	r4, [fp, #-36]	; 0xffffffdc
   28510:	str	r4, [fp, #-40]	; 0xffffffd8
   28514:	str	r4, [fp, #-44]	; 0xffffffd4
   28518:	str	r4, [sp, #40]	; 0x28
   2851c:	cmp	r9, r0
   28520:	beq	2857c <main@@Base+0x1282c>
   28524:	sub	r0, fp, #40	; 0x28
   28528:	ldr	r2, [sp, #24]
   2852c:	mov	r1, r9
   28530:	add	r3, sp, #40	; 0x28
   28534:	str	r0, [sp]
   28538:	ldr	r0, [sp, #32]
   2853c:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   28540:	cmp	r0, r9
   28544:	beq	2858c <main@@Base+0x1283c>
   28548:	mov	r8, r0
   2854c:	ldr	r0, [sp, #40]	; 0x28
   28550:	cmp	r0, #0
   28554:	beq	2859c <main@@Base+0x1284c>
   28558:	ldr	r0, [sp, #32]
   2855c:	ldr	r2, [sp, #24]
   28560:	mov	r1, r8
   28564:	mov	r3, #8
   28568:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2856c:	mov	r8, r0
   28570:	cmp	r9, r8
   28574:	bne	28618 <main@@Base+0x128c8>
   28578:	b	285dc <main@@Base+0x1288c>
   2857c:	ldr	r8, [sp, #24]
   28580:	cmp	r9, r8
   28584:	bne	28618 <main@@Base+0x128c8>
   28588:	b	285dc <main@@Base+0x1288c>
   2858c:	mov	r8, r9
   28590:	cmp	r9, r8
   28594:	bne	28618 <main@@Base+0x128c8>
   28598:	b	285dc <main@@Base+0x1288c>
   2859c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   285a0:	cmp	r0, #0
   285a4:	beq	285cc <main@@Base+0x1287c>
   285a8:	ldr	r0, [sp, #32]
   285ac:	ldr	r2, [sp, #24]
   285b0:	mov	r1, r8
   285b4:	mov	r3, #7
   285b8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   285bc:	mov	r8, r0
   285c0:	cmp	r9, r8
   285c4:	bne	28618 <main@@Base+0x128c8>
   285c8:	b	285dc <main@@Base+0x1288c>
   285cc:	ldr	r4, [fp, #-40]	; 0xffffffd8
   285d0:	str	r4, [fp, #-44]	; 0xffffffd4
   285d4:	cmp	r9, r8
   285d8:	bne	28618 <main@@Base+0x128c8>
   285dc:	sub	r0, fp, #44	; 0x2c
   285e0:	ldr	r2, [sp, #24]
   285e4:	mov	r1, r9
   285e8:	str	r0, [sp]
   285ec:	movw	r0, #53756	; 0xd1fc
   285f0:	movt	r0, #5
   285f4:	add	r3, r0, #36	; 0x24
   285f8:	ldr	r0, [sp, #32]
   285fc:	bl	247ac <main@@Base+0xea5c>
   28600:	cmp	r0, r9
   28604:	mov	r8, r0
   28608:	ldrne	r0, [sp, #24]
   2860c:	cmpne	r8, r0
   28610:	beq	29558 <main@@Base+0x13808>
   28614:	ldr	r4, [fp, #-44]	; 0xffffffd4
   28618:	cmp	r4, #0
   2861c:	bne	28630 <main@@Base+0x128e0>
   28620:	ldr	r0, [sp, #32]
   28624:	ldrb	r0, [r0, #8]
   28628:	tst	r0, #2
   2862c:	beq	28898 <main@@Base+0x12b48>
   28630:	ldr	r0, [sp, #32]
   28634:	mov	r1, #6
   28638:	b	2887c <main@@Base+0x12b2c>
   2863c:	bne	2864c <main@@Base+0x128fc>
   28640:	ldrb	r0, [r9, #2]!
   28644:	cmp	r0, #32
   28648:	bhi	2865c <main@@Base+0x1290c>
   2864c:	ldr	r0, [sp, #32]
   28650:	ldr	r2, [sp, #24]
   28654:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   28658:	mov	r9, r0
   2865c:	cmp	r7, r9
   28660:	beq	286dc <main@@Base+0x1298c>
   28664:	ldr	r0, [sp, #24]
   28668:	mov	r4, #0
   2866c:	str	r4, [fp, #-36]	; 0xffffffdc
   28670:	str	r4, [fp, #-40]	; 0xffffffd8
   28674:	str	r4, [fp, #-44]	; 0xffffffd4
   28678:	str	r4, [sp, #40]	; 0x28
   2867c:	cmp	r9, r0
   28680:	beq	287c0 <main@@Base+0x12a70>
   28684:	sub	r0, fp, #40	; 0x28
   28688:	ldr	r2, [sp, #24]
   2868c:	mov	r1, r9
   28690:	add	r3, sp, #40	; 0x28
   28694:	str	r0, [sp]
   28698:	ldr	r0, [sp, #32]
   2869c:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   286a0:	cmp	r0, r9
   286a4:	beq	287d0 <main@@Base+0x12a80>
   286a8:	mov	r8, r0
   286ac:	ldr	r0, [sp, #40]	; 0x28
   286b0:	cmp	r0, #0
   286b4:	beq	287e0 <main@@Base+0x12a90>
   286b8:	ldr	r0, [sp, #32]
   286bc:	ldr	r2, [sp, #24]
   286c0:	mov	r1, r8
   286c4:	mov	r3, #8
   286c8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   286cc:	mov	r8, r0
   286d0:	cmp	r9, r8
   286d4:	bne	2885c <main@@Base+0x12b0c>
   286d8:	b	28820 <main@@Base+0x12ad0>
   286dc:	ldr	r0, [sp, #32]
   286e0:	mov	r1, r7
   286e4:	mov	r7, r0
   286e8:	ldr	r9, [sp, #24]
   286ec:	mov	r2, r9
   286f0:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   286f4:	mov	r8, r0
   286f8:	sub	r0, r9, r8
   286fc:	cmp	r0, #2
   28700:	blt	28734 <main@@Base+0x129e4>
   28704:	ldrb	r0, [r8]
   28708:	cmp	r0, #32
   2870c:	bls	28720 <main@@Base+0x129d0>
   28710:	mov	r2, r8
   28714:	cmp	r2, r9
   28718:	bne	28750 <main@@Base+0x12a00>
   2871c:	b	289f4 <main@@Base+0x12ca4>
   28720:	bne	28734 <main@@Base+0x129e4>
   28724:	mov	r2, r8
   28728:	ldrb	r0, [r2, #1]!
   2872c:	cmp	r0, #32
   28730:	bhi	28748 <main@@Base+0x129f8>
   28734:	mov	r0, r7
   28738:	mov	r1, r8
   2873c:	mov	r2, r9
   28740:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   28744:	mov	r2, r0
   28748:	cmp	r2, r9
   2874c:	beq	289f4 <main@@Base+0x12ca4>
   28750:	ldrb	r0, [r2]
   28754:	cmp	r0, #44	; 0x2c
   28758:	bne	28a08 <main@@Base+0x12cb8>
   2875c:	add	r1, r2, #1
   28760:	sub	r0, r9, r1
   28764:	cmp	r0, #2
   28768:	blt	28798 <main@@Base+0x12a48>
   2876c:	ldrb	r0, [r1]
   28770:	cmp	r0, #32
   28774:	bls	28788 <main@@Base+0x12a38>
   28778:	mov	r2, r1
   2877c:	cmp	r2, r9
   28780:	bne	287b0 <main@@Base+0x12a60>
   28784:	b	28a40 <main@@Base+0x12cf0>
   28788:	bne	28798 <main@@Base+0x12a48>
   2878c:	ldrb	r0, [r2, #2]!
   28790:	cmp	r0, #32
   28794:	bhi	287a8 <main@@Base+0x12a58>
   28798:	mov	r0, r7
   2879c:	mov	r2, r9
   287a0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   287a4:	mov	r2, r0
   287a8:	cmp	r2, r9
   287ac:	beq	28a40 <main@@Base+0x12cf0>
   287b0:	ldrb	r0, [r2]
   287b4:	cmp	r0, #125	; 0x7d
   287b8:	bne	273d8 <main@@Base+0x11688>
   287bc:	b	28a10 <main@@Base+0x12cc0>
   287c0:	ldr	r8, [sp, #24]
   287c4:	cmp	r9, r8
   287c8:	bne	2885c <main@@Base+0x12b0c>
   287cc:	b	28820 <main@@Base+0x12ad0>
   287d0:	mov	r8, r9
   287d4:	cmp	r9, r8
   287d8:	bne	2885c <main@@Base+0x12b0c>
   287dc:	b	28820 <main@@Base+0x12ad0>
   287e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   287e4:	cmp	r0, #0
   287e8:	beq	28810 <main@@Base+0x12ac0>
   287ec:	ldr	r0, [sp, #32]
   287f0:	ldr	r2, [sp, #24]
   287f4:	mov	r1, r8
   287f8:	mov	r3, #7
   287fc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   28800:	mov	r8, r0
   28804:	cmp	r9, r8
   28808:	bne	2885c <main@@Base+0x12b0c>
   2880c:	b	28820 <main@@Base+0x12ad0>
   28810:	ldr	r4, [fp, #-40]	; 0xffffffd8
   28814:	str	r4, [fp, #-44]	; 0xffffffd4
   28818:	cmp	r9, r8
   2881c:	bne	2885c <main@@Base+0x12b0c>
   28820:	sub	r0, fp, #44	; 0x2c
   28824:	ldr	r2, [sp, #24]
   28828:	mov	r1, r9
   2882c:	str	r0, [sp]
   28830:	movw	r0, #53756	; 0xd1fc
   28834:	movt	r0, #5
   28838:	add	r3, r0, #60	; 0x3c
   2883c:	ldr	r0, [sp, #32]
   28840:	bl	247ac <main@@Base+0xea5c>
   28844:	cmp	r0, r9
   28848:	mov	r8, r0
   2884c:	ldrne	r0, [sp, #24]
   28850:	cmpne	r8, r0
   28854:	beq	29558 <main@@Base+0x13808>
   28858:	ldr	r4, [fp, #-44]	; 0xffffffd4
   2885c:	cmp	r4, #0
   28860:	bne	28874 <main@@Base+0x12b24>
   28864:	ldr	r0, [sp, #32]
   28868:	ldrb	r0, [r0, #8]
   2886c:	tst	r0, #2
   28870:	beq	28898 <main@@Base+0x12b48>
   28874:	ldr	r0, [sp, #32]
   28878:	mov	r1, #8
   2887c:	ldr	r0, [r0]
   28880:	mov	r2, #4
   28884:	mov	r3, #4
   28888:	bl	30dac <flatcc_builder_table_add@@Base>
   2888c:	cmp	r0, #0
   28890:	beq	29558 <main@@Base+0x13808>
   28894:	str	r4, [r0]
   28898:	ldr	r9, [sp, #24]
   2889c:	ldr	r7, [sp, #32]
   288a0:	sub	r0, r9, r8
   288a4:	cmp	r0, #2
   288a8:	bge	28704 <main@@Base+0x129b4>
   288ac:	b	28734 <main@@Base+0x129e4>
   288b0:	bne	288c0 <main@@Base+0x12b70>
   288b4:	ldrb	r0, [sl, #2]!
   288b8:	cmp	r0, #32
   288bc:	bhi	288d0 <main@@Base+0x12b80>
   288c0:	mov	r0, r7
   288c4:	mov	r2, r9
   288c8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   288cc:	mov	sl, r0
   288d0:	mov	ip, r4
   288d4:	cmp	r4, sl
   288d8:	beq	269a0 <main@@Base+0x10c50>
   288dc:	ldr	r0, [r7]
   288e0:	mov	r1, #2
   288e4:	bl	2fa58 <flatcc_builder_start_table@@Base>
   288e8:	cmp	r0, #0
   288ec:	bne	29574 <main@@Base+0x13824>
   288f0:	cmp	sl, r9
   288f4:	beq	28934 <main@@Base+0x12be4>
   288f8:	ldrb	r0, [sl]
   288fc:	cmp	r0, #123	; 0x7b
   28900:	bne	28934 <main@@Base+0x12be4>
   28904:	add	r1, sl, #1
   28908:	sub	r0, r9, r1
   2890c:	cmp	r0, #2
   28910:	blt	28a5c <main@@Base+0x12d0c>
   28914:	ldrb	r0, [r1]
   28918:	cmp	r0, #32
   2891c:	bls	28a4c <main@@Base+0x12cfc>
   28920:	mov	sl, r1
   28924:	cmp	sl, r9
   28928:	mov	r2, r9
   2892c:	bne	28a78 <main@@Base+0x12d28>
   28930:	b	28ab8 <main@@Base+0x12d68>
   28934:	mov	r0, r7
   28938:	mov	r1, sl
   2893c:	mov	r2, r9
   28940:	mov	r3, #21
   28944:	bl	3454c <flatcc_json_parser_set_error@@Base>
   28948:	mov	sl, r0
   2894c:	ldr	r0, [r7, #20]
   28950:	cmp	r0, #0
   28954:	bne	29574 <main@@Base+0x13824>
   28958:	ldr	r0, [r7]
   2895c:	bl	30400 <flatcc_builder_end_table@@Base>
   28960:	mov	r1, r7
   28964:	cmp	r0, #0
   28968:	beq	2953c <main@@Base+0x137ec>
   2896c:	mov	r7, r0
   28970:	ldr	r0, [r1]
   28974:	mov	r1, #2
   28978:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   2897c:	cmp	r0, #0
   28980:	beq	29544 <main@@Base+0x137f4>
   28984:	str	r7, [r0]
   28988:	ldr	r7, [sp, #32]
   2898c:	sub	r0, r9, sl
   28990:	cmp	r0, #2
   28994:	bge	265d8 <main@@Base+0x10888>
   28998:	b	2664c <main@@Base+0x108fc>
   2899c:	mov	sl, r9
   289a0:	ldr	r0, [r7, #20]
   289a4:	cmp	r0, #0
   289a8:	beq	269d0 <main@@Base+0x10c80>
   289ac:	b	29574 <main@@Base+0x13824>
   289b0:	cmp	r0, #125	; 0x7d
   289b4:	bne	29344 <main@@Base+0x135f4>
   289b8:	add	r1, r2, #1
   289bc:	sub	r0, r9, r1
   289c0:	cmp	r0, #2
   289c4:	blt	29400 <main@@Base+0x136b0>
   289c8:	ldrb	r0, [r1]
   289cc:	cmp	r0, #32
   289d0:	bls	293ec <main@@Base+0x1369c>
   289d4:	mov	sl, r1
   289d8:	ldr	r0, [r7, #20]
   289dc:	cmp	r0, #0
   289e0:	beq	269d0 <main@@Base+0x10c80>
   289e4:	b	29574 <main@@Base+0x13824>
   289e8:	mov	r0, r7
   289ec:	mov	r1, r9
   289f0:	b	2934c <main@@Base+0x135fc>
   289f4:	mov	r8, r9
   289f8:	ldr	r0, [r7, #20]
   289fc:	cmp	r0, #0
   28a00:	beq	26ab4 <main@@Base+0x10d64>
   28a04:	b	29560 <main@@Base+0x13810>
   28a08:	cmp	r0, #125	; 0x7d
   28a0c:	bne	29410 <main@@Base+0x136c0>
   28a10:	add	r1, r2, #1
   28a14:	sub	r0, r9, r1
   28a18:	cmp	r0, #2
   28a1c:	blt	29438 <main@@Base+0x136e8>
   28a20:	ldrb	r0, [r1]
   28a24:	cmp	r0, #32
   28a28:	bls	29424 <main@@Base+0x136d4>
   28a2c:	mov	r8, r1
   28a30:	ldr	r0, [r7, #20]
   28a34:	cmp	r0, #0
   28a38:	beq	26ab4 <main@@Base+0x10d64>
   28a3c:	b	29560 <main@@Base+0x13810>
   28a40:	mov	r0, r7
   28a44:	mov	r1, r9
   28a48:	b	29418 <main@@Base+0x136c8>
   28a4c:	bne	28a5c <main@@Base+0x12d0c>
   28a50:	ldrb	r0, [sl, #2]!
   28a54:	cmp	r0, #32
   28a58:	bhi	28a6c <main@@Base+0x12d1c>
   28a5c:	mov	r0, r7
   28a60:	mov	r2, r9
   28a64:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   28a68:	mov	sl, r0
   28a6c:	cmp	sl, r9
   28a70:	mov	r2, r9
   28a74:	beq	28ab8 <main@@Base+0x12d68>
   28a78:	ldrb	r0, [sl]
   28a7c:	cmp	r0, #125	; 0x7d
   28a80:	bne	28ab4 <main@@Base+0x12d64>
   28a84:	add	r1, sl, #1
   28a88:	sub	r0, r9, r1
   28a8c:	cmp	r0, #2
   28a90:	blt	29484 <main@@Base+0x13734>
   28a94:	ldrb	r0, [r1]
   28a98:	cmp	r0, #32
   28a9c:	bhi	293d8 <main@@Base+0x13688>
   28aa0:	bne	29484 <main@@Base+0x13734>
   28aa4:	ldrb	r0, [sl, #2]!
   28aa8:	cmp	r0, #32
   28aac:	bhi	2894c <main@@Base+0x12bfc>
   28ab0:	b	29484 <main@@Base+0x13734>
   28ab4:	mov	r2, sl
   28ab8:	cmp	r2, r9
   28abc:	mov	r4, r9
   28ac0:	beq	28af8 <main@@Base+0x12da8>
   28ac4:	ldrb	r0, [r2]
   28ac8:	cmp	r0, #34	; 0x22
   28acc:	bne	28adc <main@@Base+0x12d8c>
   28ad0:	ldr	r4, [sp, #24]
   28ad4:	add	r9, r2, #1
   28ad8:	b	28af8 <main@@Base+0x12da8>
   28adc:	ldr	r4, [sp, #24]
   28ae0:	mov	r1, r2
   28ae4:	mov	r0, r7
   28ae8:	mov	r3, #5
   28aec:	mov	r2, r4
   28af0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   28af4:	mov	r9, r0
   28af8:	sub	r0, r4, r9
   28afc:	cmp	r0, #8
   28b00:	movcs	r0, r8
   28b04:	sub	r3, r0, #1
   28b08:	cmp	r3, #7
   28b0c:	bhi	28d94 <main@@Base+0x13044>
   28b10:	add	r4, pc, #32
   28b14:	mov	r0, #0
   28b18:	mov	ip, #0
   28b1c:	mov	lr, #0
   28b20:	mov	r6, #0
   28b24:	mov	r2, #0
   28b28:	mov	r5, #0
   28b2c:	mov	r7, #0
   28b30:	mov	r1, #0
   28b34:	ldr	pc, [r4, r3, lsl #2]
   28b38:	muleq	r2, ip, fp
   28b3c:	muleq	r2, r4, fp
   28b40:	andeq	r8, r2, ip, lsl #23
   28b44:	andeq	r8, r2, r4, lsl #23
   28b48:	andeq	r8, r2, r8, ror fp
   28b4c:	andeq	r8, r2, ip, ror #22
   28b50:	andeq	r8, r2, ip, asr fp
   28b54:	andeq	r8, r2, r8, asr fp
   28b58:	ldrb	ip, [r9, #7]
   28b5c:	ldrb	r1, [r9, #6]
   28b60:	mov	lr, r0
   28b64:	orr	r1, ip, r1, lsl #8
   28b68:	mov	r0, r1
   28b6c:	ldrb	r1, [r9, #5]
   28b70:	mov	r6, lr
   28b74:	orr	r0, r0, r1, lsl #16
   28b78:	ldrb	r1, [r9, #4]
   28b7c:	mov	r2, r6
   28b80:	orr	r0, r0, r1, lsl #24
   28b84:	ldrb	r1, [r9, #3]
   28b88:	orr	r5, r1, r2
   28b8c:	ldrb	r1, [r9, #2]
   28b90:	orr	r7, r5, r1, lsl #8
   28b94:	ldrb	r1, [r9, #1]
   28b98:	orr	r1, r7, r1, lsl #16
   28b9c:	movw	r2, #25186	; 0x6262
   28ba0:	ldr	r7, [sp, #32]
   28ba4:	movt	r2, #24418	; 0x5f62
   28ba8:	eor	r0, r0, r2
   28bac:	ldrb	r2, [r9]
   28bb0:	orr	r1, r1, r2, lsl #24
   28bb4:	movw	r2, #24929	; 0x6161
   28bb8:	movt	r2, #24929	; 0x6161
   28bbc:	eor	r1, r1, r2
   28bc0:	orrs	r0, r0, r1
   28bc4:	bne	28d94 <main@@Base+0x13044>
   28bc8:	ldr	r0, [sp, #24]
   28bcc:	add	r8, r9, #8
   28bd0:	sub	lr, r0, r8
   28bd4:	mov	r0, #8
   28bd8:	cmp	lr, #8
   28bdc:	movcc	r0, lr
   28be0:	sub	r6, r0, #1
   28be4:	cmp	r6, #7
   28be8:	bhi	28e24 <main@@Base+0x130d4>
   28bec:	add	r2, pc, #32
   28bf0:	mov	r1, #0
   28bf4:	mov	ip, #0
   28bf8:	mov	sl, #0
   28bfc:	mov	r5, #0
   28c00:	mov	r3, #0
   28c04:	mov	r4, #0
   28c08:	mov	r7, #0
   28c0c:	mov	r0, #0
   28c10:	ldr	pc, [r2, r6, lsl #2]
   28c14:	andeq	r8, r2, r8, ror ip
   28c18:	andeq	r8, r2, r0, ror ip
   28c1c:	andeq	r8, r2, r8, ror #24
   28c20:	andeq	r8, r2, r0, ror #24
   28c24:	andeq	r8, r2, r4, asr ip
   28c28:	andeq	r8, r2, r8, asr #24
   28c2c:	andeq	r8, r2, r8, lsr ip
   28c30:	andeq	r8, r2, r4, lsr ip
   28c34:	ldrb	ip, [r9, #15]
   28c38:	ldrb	r0, [r9, #14]
   28c3c:	mov	sl, r1
   28c40:	orr	r0, ip, r0, lsl #8
   28c44:	mov	r1, r0
   28c48:	ldrb	r0, [r9, #13]
   28c4c:	mov	r5, sl
   28c50:	orr	r1, r1, r0, lsl #16
   28c54:	ldrb	r0, [r9, #12]
   28c58:	mov	r3, r5
   28c5c:	orr	r1, r1, r0, lsl #24
   28c60:	ldrb	r0, [r9, #11]
   28c64:	orr	r4, r0, r3
   28c68:	ldrb	r0, [r9, #10]
   28c6c:	orr	r7, r4, r0, lsl #8
   28c70:	ldrb	r0, [r9, #9]
   28c74:	orr	r0, r7, r0, lsl #16
   28c78:	ldrb	r3, [r8]
   28c7c:	movw	r2, #29791	; 0x745f
   28c80:	movt	r2, #24946	; 0x6172
   28c84:	eor	r2, r1, r2
   28c88:	orr	r0, r0, r3, lsl #24
   28c8c:	movw	r3, #29556	; 0x7374
   28c90:	movt	r3, #25183	; 0x625f
   28c94:	eor	r0, r0, r3
   28c98:	orrs	r2, r2, r0
   28c9c:	bne	28dbc <main@@Base+0x1306c>
   28ca0:	ldr	r0, [sp, #24]
   28ca4:	add	r8, r9, #16
   28ca8:	mov	r1, #8
   28cac:	sub	r0, r0, r8
   28cb0:	cmp	r0, #8
   28cb4:	movcc	r1, r0
   28cb8:	sub	r3, r1, #1
   28cbc:	cmp	r3, #7
   28cc0:	bhi	28e20 <main@@Base+0x130d0>
   28cc4:	add	r4, pc, #20
   28cc8:	mov	r1, #0
   28ccc:	mov	r2, #0
   28cd0:	mov	r6, #0
   28cd4:	mov	r7, #0
   28cd8:	mov	r5, #0
   28cdc:	ldr	pc, [r4, r3, lsl #2]
   28ce0:	andeq	r8, r2, r4, lsr #26
   28ce4:	andeq	r8, r2, ip, lsl sp
   28ce8:	andeq	r8, r2, r4, lsl sp
   28cec:	andeq	r8, r2, r8, lsl #26
   28cf0:	andeq	r8, r2, r0, lsl #26
   28cf4:	andeq	r8, r2, r0, lsl #26
   28cf8:	andeq	r8, r2, r0, lsl #26
   28cfc:	andeq	r8, r2, r0, lsl #26
   28d00:	ldrb	r2, [r9, #20]
   28d04:	lsl	r2, r2, #24
   28d08:	ldrb	r3, [r9, #19]
   28d0c:	orr	r6, r3, r1
   28d10:	mov	r1, r2
   28d14:	ldrb	r2, [r9, #18]
   28d18:	orr	r7, r6, r2, lsl #8
   28d1c:	ldrb	r2, [r9, #17]
   28d20:	orr	r5, r7, r2, lsl #16
   28d24:	ldrb	r2, [r8]
   28d28:	movw	r3, #25968	; 0x6570
   28d2c:	and	r1, r1, #-16777216	; 0xff000000
   28d30:	movt	r3, #29556	; 0x7374
   28d34:	eor	r1, r1, #1929379840	; 0x73000000
   28d38:	orr	r2, r5, r2, lsl #24
   28d3c:	eor	r2, r2, r3
   28d40:	orrs	r1, r1, r2
   28d44:	bne	28e20 <main@@Base+0x130d0>
   28d48:	ldr	r7, [sp, #32]
   28d4c:	cmp	r0, #6
   28d50:	blt	28e24 <main@@Base+0x130d4>
   28d54:	ldrb	r0, [r9, #21]
   28d58:	cmp	r0, #34	; 0x22
   28d5c:	bne	28e24 <main@@Base+0x130d4>
   28d60:	ldr	r4, [sp, #24]
   28d64:	add	r1, r9, #22
   28d68:	sub	r0, r4, r1
   28d6c:	cmp	r0, #2
   28d70:	blt	28fa0 <main@@Base+0x13250>
   28d74:	ldrb	r0, [r1]
   28d78:	cmp	r0, #32
   28d7c:	bls	28f8c <main@@Base+0x1323c>
   28d80:	ldr	r4, [sp, #24]
   28d84:	mov	r9, r1
   28d88:	cmp	r9, r4
   28d8c:	bne	28fb8 <main@@Base+0x13268>
   28d90:	b	28ff8 <main@@Base+0x132a8>
   28d94:	mov	r1, r9
   28d98:	ldr	r9, [sp, #24]
   28d9c:	mov	r0, r7
   28da0:	mov	r2, r9
   28da4:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   28da8:	mov	sl, r0
   28dac:	sub	r0, r9, sl
   28db0:	cmp	r0, #2
   28db4:	bge	28e4c <main@@Base+0x130fc>
   28db8:	b	28e7c <main@@Base+0x1312c>
   28dbc:	movw	r2, #29440	; 0x7300
   28dc0:	ldr	r7, [sp, #32]
   28dc4:	bic	r1, r1, #255	; 0xff
   28dc8:	movt	r2, #25968	; 0x6570
   28dcc:	eor	r1, r1, r2
   28dd0:	orrs	r0, r1, r0
   28dd4:	bne	28e24 <main@@Base+0x130d4>
   28dd8:	cmp	lr, #8
   28ddc:	blt	28e24 <main@@Base+0x130d4>
   28de0:	ldrb	r0, [r9, #15]
   28de4:	cmp	r0, #34	; 0x22
   28de8:	bne	28e24 <main@@Base+0x130d4>
   28dec:	ldr	r4, [sp, #24]
   28df0:	add	r1, r9, #16
   28df4:	sub	r0, r4, r1
   28df8:	cmp	r0, #2
   28dfc:	blt	28f1c <main@@Base+0x131cc>
   28e00:	ldrb	r0, [r1]
   28e04:	cmp	r0, #32
   28e08:	bls	28f08 <main@@Base+0x131b8>
   28e0c:	ldr	r4, [sp, #24]
   28e10:	mov	r9, r1
   28e14:	cmp	r9, r4
   28e18:	bne	28f34 <main@@Base+0x131e4>
   28e1c:	b	28f74 <main@@Base+0x13224>
   28e20:	ldr	r7, [sp, #32]
   28e24:	ldr	r9, [sp, #24]
   28e28:	mov	r0, r7
   28e2c:	mov	r1, r8
   28e30:	mov	r2, r9
   28e34:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   28e38:	mov	sl, r0
   28e3c:	mov	r8, #8
   28e40:	sub	r0, r9, sl
   28e44:	cmp	r0, #2
   28e48:	blt	28e7c <main@@Base+0x1312c>
   28e4c:	ldrb	r0, [sl]
   28e50:	cmp	r0, #32
   28e54:	bls	28e68 <main@@Base+0x13118>
   28e58:	mov	r2, sl
   28e5c:	cmp	r2, r9
   28e60:	bne	28e98 <main@@Base+0x13148>
   28e64:	b	29358 <main@@Base+0x13608>
   28e68:	bne	28e7c <main@@Base+0x1312c>
   28e6c:	mov	r2, sl
   28e70:	ldrb	r0, [r2, #1]!
   28e74:	cmp	r0, #32
   28e78:	bhi	28e90 <main@@Base+0x13140>
   28e7c:	mov	r0, r7
   28e80:	mov	r1, sl
   28e84:	mov	r2, r9
   28e88:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   28e8c:	mov	r2, r0
   28e90:	cmp	r2, r9
   28e94:	beq	29358 <main@@Base+0x13608>
   28e98:	ldrb	r0, [r2]
   28e9c:	cmp	r0, #44	; 0x2c
   28ea0:	bne	2936c <main@@Base+0x1361c>
   28ea4:	add	r1, r2, #1
   28ea8:	sub	r0, r9, r1
   28eac:	cmp	r0, #2
   28eb0:	blt	28ee0 <main@@Base+0x13190>
   28eb4:	ldrb	r0, [r1]
   28eb8:	cmp	r0, #32
   28ebc:	bls	28ed0 <main@@Base+0x13180>
   28ec0:	mov	r2, r1
   28ec4:	cmp	r2, r9
   28ec8:	bne	28ef8 <main@@Base+0x131a8>
   28ecc:	b	293b0 <main@@Base+0x13660>
   28ed0:	bne	28ee0 <main@@Base+0x13190>
   28ed4:	ldrb	r0, [r2, #2]!
   28ed8:	cmp	r0, #32
   28edc:	bhi	28ef0 <main@@Base+0x131a0>
   28ee0:	mov	r0, r7
   28ee4:	mov	r2, r9
   28ee8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   28eec:	mov	r2, r0
   28ef0:	cmp	r2, r9
   28ef4:	beq	293b0 <main@@Base+0x13660>
   28ef8:	ldrb	r0, [r2]
   28efc:	cmp	r0, #125	; 0x7d
   28f00:	bne	28ab8 <main@@Base+0x12d68>
   28f04:	b	293bc <main@@Base+0x1366c>
   28f08:	ldr	r4, [sp, #24]
   28f0c:	bne	28f1c <main@@Base+0x131cc>
   28f10:	ldrb	r0, [r9, #17]!
   28f14:	cmp	r0, #32
   28f18:	bhi	28f2c <main@@Base+0x131dc>
   28f1c:	mov	r0, r7
   28f20:	mov	r2, r4
   28f24:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   28f28:	mov	r9, r0
   28f2c:	cmp	r9, r4
   28f30:	beq	28f74 <main@@Base+0x13224>
   28f34:	ldrb	r0, [r9]
   28f38:	cmp	r0, #58	; 0x3a
   28f3c:	bne	28f74 <main@@Base+0x13224>
   28f40:	ldr	r0, [sp, #24]
   28f44:	add	r1, r9, #1
   28f48:	sub	r0, r0, r1
   28f4c:	cmp	r0, #2
   28f50:	blt	29024 <main@@Base+0x132d4>
   28f54:	ldrb	r0, [r1]
   28f58:	cmp	r0, #32
   28f5c:	bls	29010 <main@@Base+0x132c0>
   28f60:	ldr	r7, [sp, #32]
   28f64:	mov	r9, r1
   28f68:	cmp	r8, r9
   28f6c:	bne	2903c <main@@Base+0x132ec>
   28f70:	b	28e24 <main@@Base+0x130d4>
   28f74:	ldr	r2, [sp, #24]
   28f78:	mov	r0, r7
   28f7c:	mov	r1, r9
   28f80:	mov	r3, #4
   28f84:	bl	3454c <flatcc_json_parser_set_error@@Base>
   28f88:	b	29030 <main@@Base+0x132e0>
   28f8c:	ldr	r4, [sp, #24]
   28f90:	bne	28fa0 <main@@Base+0x13250>
   28f94:	ldrb	r0, [r9, #23]!
   28f98:	cmp	r0, #32
   28f9c:	bhi	28fb0 <main@@Base+0x13260>
   28fa0:	mov	r0, r7
   28fa4:	mov	r2, r4
   28fa8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   28fac:	mov	r9, r0
   28fb0:	cmp	r9, r4
   28fb4:	beq	28ff8 <main@@Base+0x132a8>
   28fb8:	ldrb	r0, [r9]
   28fbc:	cmp	r0, #58	; 0x3a
   28fc0:	bne	28ff8 <main@@Base+0x132a8>
   28fc4:	ldr	r0, [sp, #24]
   28fc8:	add	r1, r9, #1
   28fcc:	sub	r0, r0, r1
   28fd0:	cmp	r0, #2
   28fd4:	blt	291d0 <main@@Base+0x13480>
   28fd8:	ldrb	r0, [r1]
   28fdc:	cmp	r0, #32
   28fe0:	bls	291bc <main@@Base+0x1346c>
   28fe4:	ldr	r7, [sp, #32]
   28fe8:	mov	r9, r1
   28fec:	cmp	r8, r9
   28ff0:	bne	291e8 <main@@Base+0x13498>
   28ff4:	b	28e24 <main@@Base+0x130d4>
   28ff8:	ldr	r2, [sp, #24]
   28ffc:	mov	r0, r7
   29000:	mov	r1, r9
   29004:	mov	r3, #4
   29008:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2900c:	b	291dc <main@@Base+0x1348c>
   29010:	ldr	r7, [sp, #32]
   29014:	bne	29024 <main@@Base+0x132d4>
   29018:	ldrb	r0, [r9, #2]!
   2901c:	cmp	r0, #32
   29020:	bhi	29034 <main@@Base+0x132e4>
   29024:	ldr	r2, [sp, #24]
   29028:	mov	r0, r7
   2902c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   29030:	mov	r9, r0
   29034:	cmp	r8, r9
   29038:	beq	28e24 <main@@Base+0x130d4>
   2903c:	ldr	r2, [sp, #24]
   29040:	mov	r6, #0
   29044:	str	r6, [fp, #-36]	; 0xffffffdc
   29048:	str	r6, [fp, #-40]	; 0xffffffd8
   2904c:	str	r6, [sp, #44]	; 0x2c
   29050:	str	r6, [sp, #40]	; 0x28
   29054:	str	r6, [fp, #-44]	; 0xffffffd4
   29058:	cmp	r9, r2
   2905c:	beq	290b8 <main@@Base+0x13368>
   29060:	sub	r0, fp, #40	; 0x28
   29064:	mov	r1, r9
   29068:	sub	r3, fp, #44	; 0x2c
   2906c:	str	r0, [sp]
   29070:	mov	r0, r7
   29074:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   29078:	cmp	r0, r9
   2907c:	beq	290cc <main@@Base+0x1337c>
   29080:	mov	sl, r0
   29084:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29088:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2908c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   29090:	cmp	r0, #0
   29094:	beq	290e8 <main@@Base+0x13398>
   29098:	subs	r0, r6, #1
   2909c:	sbcs	r0, r5, #-2147483648	; 0x80000000
   290a0:	bcc	29120 <main@@Base+0x133d0>
   290a4:	ldr	r7, [sp, #32]
   290a8:	ldr	r2, [sp, #24]
   290ac:	mov	r1, sl
   290b0:	mov	r3, #8
   290b4:	b	29100 <main@@Base+0x133b0>
   290b8:	mov	r5, #0
   290bc:	mov	sl, r2
   290c0:	cmp	r9, sl
   290c4:	bne	29180 <main@@Base+0x13430>
   290c8:	b	2913c <main@@Base+0x133ec>
   290cc:	mov	r6, #0
   290d0:	mov	r5, #0
   290d4:	mov	sl, r9
   290d8:	ldr	r7, [sp, #32]
   290dc:	cmp	r9, sl
   290e0:	bne	29180 <main@@Base+0x13430>
   290e4:	b	2913c <main@@Base+0x133ec>
   290e8:	cmn	r5, #1
   290ec:	bgt	29128 <main@@Base+0x133d8>
   290f0:	ldr	r7, [sp, #32]
   290f4:	ldr	r2, [sp, #24]
   290f8:	mov	r1, sl
   290fc:	mov	r3, #7
   29100:	mov	r0, r7
   29104:	bl	3454c <flatcc_json_parser_set_error@@Base>
   29108:	mov	sl, r0
   2910c:	mov	r6, #0
   29110:	mov	r5, #0
   29114:	cmp	r9, sl
   29118:	bne	29180 <main@@Base+0x13430>
   2911c:	b	2913c <main@@Base+0x133ec>
   29120:	rsbs	r6, r6, #0
   29124:	rsc	r5, r5, #0
   29128:	str	r6, [sp, #40]	; 0x28
   2912c:	str	r5, [sp, #44]	; 0x2c
   29130:	ldr	r7, [sp, #32]
   29134:	cmp	r9, sl
   29138:	bne	29180 <main@@Base+0x13430>
   2913c:	add	r0, sp, #40	; 0x28
   29140:	ldr	r2, [sp, #24]
   29144:	mov	r1, r9
   29148:	str	r0, [sp]
   2914c:	movw	r0, #53756	; 0xd1fc
   29150:	movt	r0, #5
   29154:	add	r3, r0, #84	; 0x54
   29158:	mov	r0, r7
   2915c:	bl	24594 <main@@Base+0xe844>
   29160:	cmp	r0, r9
   29164:	mov	sl, r0
   29168:	ldrne	r0, [sp, #24]
   2916c:	cmpne	sl, r0
   29170:	beq	2956c <main@@Base+0x1381c>
   29174:	ldr	r6, [sp, #40]	; 0x28
   29178:	ldr	r5, [sp, #44]	; 0x2c
   2917c:	ldr	r7, [sp, #32]
   29180:	orrs	r0, r6, r5
   29184:	bne	29194 <main@@Base+0x13444>
   29188:	ldrb	r0, [r7, #8]
   2918c:	tst	r0, #2
   29190:	beq	29314 <main@@Base+0x135c4>
   29194:	ldr	r0, [r7]
   29198:	mov	r1, #0
   2919c:	mov	r2, #8
   291a0:	mov	r3, #8
   291a4:	bl	30dac <flatcc_builder_table_add@@Base>
   291a8:	cmp	r0, #0
   291ac:	beq	2956c <main@@Base+0x1381c>
   291b0:	str	r6, [r0]
   291b4:	str	r5, [r0, #4]
   291b8:	b	29314 <main@@Base+0x135c4>
   291bc:	ldr	r7, [sp, #32]
   291c0:	bne	291d0 <main@@Base+0x13480>
   291c4:	ldrb	r0, [r9, #2]!
   291c8:	cmp	r0, #32
   291cc:	bhi	291e0 <main@@Base+0x13490>
   291d0:	ldr	r2, [sp, #24]
   291d4:	mov	r0, r7
   291d8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   291dc:	mov	r9, r0
   291e0:	cmp	r8, r9
   291e4:	beq	28e24 <main@@Base+0x130d4>
   291e8:	ldr	r2, [sp, #24]
   291ec:	mov	r5, #0
   291f0:	str	r5, [fp, #-36]	; 0xffffffdc
   291f4:	str	r5, [fp, #-40]	; 0xffffffd8
   291f8:	str	r5, [fp, #-44]	; 0xffffffd4
   291fc:	str	r5, [sp, #40]	; 0x28
   29200:	cmp	r9, r2
   29204:	beq	2924c <main@@Base+0x134fc>
   29208:	sub	r0, fp, #40	; 0x28
   2920c:	mov	r1, r9
   29210:	add	r3, sp, #40	; 0x28
   29214:	str	r0, [sp]
   29218:	mov	r0, r7
   2921c:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   29220:	cmp	r0, r9
   29224:	beq	2925c <main@@Base+0x1350c>
   29228:	mov	sl, r0
   2922c:	ldr	r0, [sp, #40]	; 0x28
   29230:	cmp	r0, #0
   29234:	beq	29270 <main@@Base+0x13520>
   29238:	ldr	r7, [sp, #32]
   2923c:	ldr	r2, [sp, #24]
   29240:	mov	r1, sl
   29244:	mov	r3, #8
   29248:	b	2928c <main@@Base+0x1353c>
   2924c:	mov	sl, r2
   29250:	cmp	r9, sl
   29254:	bne	292e0 <main@@Base+0x13590>
   29258:	b	292a0 <main@@Base+0x13550>
   2925c:	mov	sl, r9
   29260:	ldr	r7, [sp, #32]
   29264:	cmp	r9, sl
   29268:	bne	292e0 <main@@Base+0x13590>
   2926c:	b	292a0 <main@@Base+0x13550>
   29270:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29274:	cmp	r0, #0
   29278:	beq	2932c <main@@Base+0x135dc>
   2927c:	ldr	r7, [sp, #32]
   29280:	ldr	r2, [sp, #24]
   29284:	mov	r1, sl
   29288:	mov	r3, #7
   2928c:	mov	r0, r7
   29290:	bl	3454c <flatcc_json_parser_set_error@@Base>
   29294:	mov	sl, r0
   29298:	cmp	r9, sl
   2929c:	bne	292e0 <main@@Base+0x13590>
   292a0:	sub	r0, fp, #44	; 0x2c
   292a4:	ldr	r2, [sp, #24]
   292a8:	mov	r1, r9
   292ac:	str	r0, [sp]
   292b0:	movw	r0, #53756	; 0xd1fc
   292b4:	movt	r0, #5
   292b8:	add	r3, r0, #72	; 0x48
   292bc:	mov	r0, r7
   292c0:	bl	247ac <main@@Base+0xea5c>
   292c4:	cmp	r0, r9
   292c8:	mov	sl, r0
   292cc:	ldrne	r0, [sp, #24]
   292d0:	cmpne	sl, r0
   292d4:	beq	2956c <main@@Base+0x1381c>
   292d8:	ldr	r5, [fp, #-44]	; 0xffffffd4
   292dc:	ldr	r7, [sp, #32]
   292e0:	cmp	r5, #0
   292e4:	bne	292f4 <main@@Base+0x135a4>
   292e8:	ldrb	r0, [r7, #8]
   292ec:	tst	r0, #2
   292f0:	beq	29314 <main@@Base+0x135c4>
   292f4:	ldr	r0, [r7]
   292f8:	mov	r1, #1
   292fc:	mov	r2, #4
   29300:	mov	r3, #4
   29304:	bl	30dac <flatcc_builder_table_add@@Base>
   29308:	cmp	r0, #0
   2930c:	beq	2956c <main@@Base+0x1381c>
   29310:	str	r5, [r0]
   29314:	ldr	r9, [sp, #24]
   29318:	mov	r8, #8
   2931c:	sub	r0, r9, sl
   29320:	cmp	r0, #2
   29324:	bge	28e4c <main@@Base+0x130fc>
   29328:	b	28e7c <main@@Base+0x1312c>
   2932c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   29330:	str	r5, [fp, #-44]	; 0xffffffd4
   29334:	ldr	r7, [sp, #32]
   29338:	cmp	r9, sl
   2933c:	bne	292e0 <main@@Base+0x13590>
   29340:	b	292a0 <main@@Base+0x13550>
   29344:	mov	r0, r7
   29348:	mov	r1, r2
   2934c:	mov	r2, r9
   29350:	mov	r3, #10
   29354:	b	269bc <main@@Base+0x10c6c>
   29358:	mov	sl, r9
   2935c:	ldr	r0, [r7, #20]
   29360:	cmp	r0, #0
   29364:	beq	28958 <main@@Base+0x12c08>
   29368:	b	29574 <main@@Base+0x13824>
   2936c:	cmp	r0, #125	; 0x7d
   29370:	bne	29448 <main@@Base+0x136f8>
   29374:	add	r1, r2, #1
   29378:	sub	r0, r9, r1
   2937c:	cmp	r0, #2
   29380:	blt	29484 <main@@Base+0x13734>
   29384:	ldrb	r0, [r1]
   29388:	cmp	r0, #32
   2938c:	bls	29464 <main@@Base+0x13714>
   29390:	ldr	r9, [sp, #24]
   29394:	ldr	r7, [sp, #32]
   29398:	mov	sl, r1
   2939c:	mov	r8, #8
   293a0:	ldr	r0, [r7, #20]
   293a4:	cmp	r0, #0
   293a8:	beq	28958 <main@@Base+0x12c08>
   293ac:	b	29574 <main@@Base+0x13824>
   293b0:	mov	r0, r7
   293b4:	mov	r1, r9
   293b8:	b	29450 <main@@Base+0x13700>
   293bc:	add	r1, r2, #1
   293c0:	sub	r0, r9, r1
   293c4:	cmp	r0, #2
   293c8:	blt	29484 <main@@Base+0x13734>
   293cc:	ldrb	r0, [r1]
   293d0:	cmp	r0, #32
   293d4:	bls	2945c <main@@Base+0x1370c>
   293d8:	mov	sl, r1
   293dc:	ldr	r0, [r7, #20]
   293e0:	cmp	r0, #0
   293e4:	beq	28958 <main@@Base+0x12c08>
   293e8:	b	29574 <main@@Base+0x13824>
   293ec:	bne	29400 <main@@Base+0x136b0>
   293f0:	ldrb	r0, [r2, #2]!
   293f4:	mov	sl, r2
   293f8:	cmp	r0, #32
   293fc:	bhi	269c4 <main@@Base+0x10c74>
   29400:	mov	r0, r7
   29404:	mov	r2, r9
   29408:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2940c:	b	269c0 <main@@Base+0x10c70>
   29410:	mov	r0, r7
   29414:	mov	r1, r2
   29418:	mov	r2, r9
   2941c:	mov	r3, #10
   29420:	b	26aa0 <main@@Base+0x10d50>
   29424:	bne	29438 <main@@Base+0x136e8>
   29428:	ldrb	r0, [r2, #2]!
   2942c:	mov	r8, r2
   29430:	cmp	r0, #32
   29434:	bhi	26aa8 <main@@Base+0x10d58>
   29438:	mov	r0, r7
   2943c:	mov	r2, r9
   29440:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   29444:	b	26aa4 <main@@Base+0x10d54>
   29448:	mov	r0, r7
   2944c:	mov	r1, r2
   29450:	mov	r2, r9
   29454:	mov	r3, #10
   29458:	b	28944 <main@@Base+0x12bf4>
   2945c:	beq	29474 <main@@Base+0x13724>
   29460:	b	29484 <main@@Base+0x13734>
   29464:	ldr	r9, [sp, #24]
   29468:	ldr	r7, [sp, #32]
   2946c:	mov	r8, #8
   29470:	bne	29484 <main@@Base+0x13734>
   29474:	ldrb	r0, [r2, #2]!
   29478:	mov	sl, r2
   2947c:	cmp	r0, #32
   29480:	bhi	2894c <main@@Base+0x12bfc>
   29484:	mov	r0, r7
   29488:	mov	r2, r9
   2948c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   29490:	b	28948 <main@@Base+0x12bf8>
   29494:	ldr	r4, [sp, #28]
   29498:	mov	r8, r9
   2949c:	ldr	r0, [r7, #20]
   294a0:	cmp	r0, #0
   294a4:	bne	261f0 <main@@Base+0x104a0>
   294a8:	b	294e0 <main@@Base+0x13790>
   294ac:	cmp	r0, #125	; 0x7d
   294b0:	bne	29504 <main@@Base+0x137b4>
   294b4:	add	r1, r2, #1
   294b8:	sub	r0, r9, r1
   294bc:	cmp	r0, #2
   294c0:	blt	2952c <main@@Base+0x137dc>
   294c4:	ldrb	r0, [r1]
   294c8:	cmp	r0, #32
   294cc:	bls	29518 <main@@Base+0x137c8>
   294d0:	mov	r8, r1
   294d4:	ldr	r0, [r7, #20]
   294d8:	cmp	r0, #0
   294dc:	bne	261f0 <main@@Base+0x104a0>
   294e0:	ldr	r0, [r7]
   294e4:	bl	30400 <flatcc_builder_end_table@@Base>
   294e8:	cmp	r0, #0
   294ec:	str	r0, [r4]
   294f0:	bne	26208 <main@@Base+0x104b8>
   294f4:	b	261f0 <main@@Base+0x104a0>
   294f8:	mov	r0, r7
   294fc:	mov	r1, r9
   29500:	b	2950c <main@@Base+0x137bc>
   29504:	mov	r0, r7
   29508:	mov	r1, r2
   2950c:	mov	r2, r9
   29510:	mov	r3, #10
   29514:	b	261dc <main@@Base+0x1048c>
   29518:	bne	2952c <main@@Base+0x137dc>
   2951c:	ldrb	r0, [r2, #2]!
   29520:	mov	r8, r2
   29524:	cmp	r0, #32
   29528:	bhi	261e4 <main@@Base+0x10494>
   2952c:	mov	r0, r7
   29530:	mov	r2, r9
   29534:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   29538:	b	261e0 <main@@Base+0x10490>
   2953c:	mov	r7, r1
   29540:	b	29574 <main@@Base+0x13824>
   29544:	ldr	r7, [sp, #32]
   29548:	mov	r8, sl
   2954c:	b	261f0 <main@@Base+0x104a0>
   29550:	ldr	r9, [sp, #24]
   29554:	b	29560 <main@@Base+0x13810>
   29558:	ldr	r9, [sp, #24]
   2955c:	ldr	r7, [sp, #32]
   29560:	mov	r0, r7
   29564:	mov	r1, r8
   29568:	b	2957c <main@@Base+0x1382c>
   2956c:	ldr	r9, [sp, #24]
   29570:	ldr	r7, [sp, #32]
   29574:	mov	r0, r7
   29578:	mov	r1, sl
   2957c:	mov	r2, r9
   29580:	mov	r3, #33	; 0x21
   29584:	bl	3454c <flatcc_json_parser_set_error@@Base>
   29588:	mov	r8, r0
   2958c:	b	261f0 <main@@Base+0x104a0>
   29590:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29594:	add	fp, sp, #28
   29598:	sub	sp, sp, #44	; 0x2c
   2959c:	mov	sl, r0
   295a0:	mov	r0, #0
   295a4:	mov	r7, r1
   295a8:	mov	r1, #10
   295ac:	mov	r9, r3
   295b0:	mov	r4, r2
   295b4:	str	r0, [r3]
   295b8:	ldr	r0, [sl]
   295bc:	bl	2fa58 <flatcc_builder_start_table@@Base>
   295c0:	cmp	r0, #0
   295c4:	beq	295ec <main@@Base+0x1389c>
   295c8:	mov	r0, sl
   295cc:	mov	r1, r7
   295d0:	mov	r2, r4
   295d4:	mov	r3, #33	; 0x21
   295d8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   295dc:	mov	r7, r0
   295e0:	mov	r0, r7
   295e4:	sub	sp, fp, #28
   295e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   295ec:	sub	r0, fp, #32
   295f0:	mov	r1, r7
   295f4:	mov	r2, r4
   295f8:	mov	r3, #5
   295fc:	str	r0, [sp]
   29600:	mov	r0, sl
   29604:	bl	374b8 <flatcc_json_parser_prepare_unions@@Base>
   29608:	cmp	r0, r4
   2960c:	beq	295c8 <main@@Base+0x13878>
   29610:	cmp	r7, r4
   29614:	beq	29654 <main@@Base+0x13904>
   29618:	ldrb	r0, [r7]
   2961c:	cmp	r0, #123	; 0x7b
   29620:	bne	29654 <main@@Base+0x13904>
   29624:	add	r1, r7, #1
   29628:	sub	r0, r4, r1
   2962c:	cmp	r0, #2
   29630:	blt	296b8 <main@@Base+0x13968>
   29634:	ldrb	r0, [r1]
   29638:	cmp	r0, #32
   2963c:	bls	296a8 <main@@Base+0x13958>
   29640:	mov	r7, r1
   29644:	cmp	r7, r4
   29648:	mov	r3, r4
   2964c:	bne	296d4 <main@@Base+0x13984>
   29650:	b	29714 <main@@Base+0x139c4>
   29654:	mov	r0, sl
   29658:	mov	r1, r7
   2965c:	mov	r2, r4
   29660:	mov	r3, #21
   29664:	bl	3454c <flatcc_json_parser_set_error@@Base>
   29668:	mov	r7, r0
   2966c:	ldr	r0, [sl, #20]
   29670:	cmp	r0, #0
   29674:	bne	295c8 <main@@Base+0x13878>
   29678:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2967c:	mov	r0, sl
   29680:	mov	r1, r7
   29684:	mov	r2, r4
   29688:	bl	37548 <flatcc_json_parser_finalize_unions@@Base>
   2968c:	mov	r7, r0
   29690:	ldr	r0, [sl]
   29694:	bl	30400 <flatcc_builder_end_table@@Base>
   29698:	cmp	r0, #0
   2969c:	str	r0, [r9]
   296a0:	bne	295e0 <main@@Base+0x13890>
   296a4:	b	295c8 <main@@Base+0x13878>
   296a8:	bne	296b8 <main@@Base+0x13968>
   296ac:	ldrb	r0, [r7, #2]!
   296b0:	cmp	r0, #32
   296b4:	bhi	296c8 <main@@Base+0x13978>
   296b8:	mov	r0, sl
   296bc:	mov	r2, r4
   296c0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   296c4:	mov	r7, r0
   296c8:	cmp	r7, r4
   296cc:	mov	r3, r4
   296d0:	beq	29714 <main@@Base+0x139c4>
   296d4:	ldrb	r0, [r7]
   296d8:	cmp	r0, #125	; 0x7d
   296dc:	bne	29710 <main@@Base+0x139c0>
   296e0:	add	r1, r7, #1
   296e4:	sub	r0, r4, r1
   296e8:	cmp	r0, #2
   296ec:	blt	2aa64 <main@@Base+0x14d14>
   296f0:	ldrb	r0, [r1]
   296f4:	cmp	r0, #32
   296f8:	bhi	2aa1c <main@@Base+0x14ccc>
   296fc:	bne	2aa64 <main@@Base+0x14d14>
   29700:	ldrb	r0, [r7, #2]!
   29704:	cmp	r0, #32
   29708:	bhi	2966c <main@@Base+0x1391c>
   2970c:	b	2aa64 <main@@Base+0x14d14>
   29710:	mov	r3, r7
   29714:	movw	r0, #24436	; 0x5f74
   29718:	movw	r1, #53988	; 0xd2e4
   2971c:	str	r9, [sp, #32]
   29720:	str	r4, [sp, #36]	; 0x24
   29724:	movt	r0, #29299	; 0x7273
   29728:	movt	r1, #5
   2972c:	add	r0, r0, #65536	; 0x10000
   29730:	add	r1, r1, #32
   29734:	add	r0, r0, #16777216	; 0x1000000
   29738:	str	r1, [sp, #20]
   2973c:	str	r0, [sp, #24]
   29740:	cmp	r3, r4
   29744:	mov	r5, r4
   29748:	beq	29778 <main@@Base+0x13a28>
   2974c:	ldrb	r0, [r3]
   29750:	cmp	r0, #34	; 0x22
   29754:	bne	29760 <main@@Base+0x13a10>
   29758:	add	r5, r3, #1
   2975c:	b	29778 <main@@Base+0x13a28>
   29760:	mov	r1, r3
   29764:	mov	r0, sl
   29768:	mov	r2, r4
   2976c:	mov	r3, #5
   29770:	bl	3454c <flatcc_json_parser_set_error@@Base>
   29774:	mov	r5, r0
   29778:	sub	ip, r4, r5
   2977c:	mov	r0, #8
   29780:	cmp	ip, #8
   29784:	movcc	r0, ip
   29788:	sub	r6, r0, #1
   2978c:	cmp	r6, #7
   29790:	bhi	2a76c <main@@Base+0x14a1c>
   29794:	mov	r9, sl
   29798:	add	sl, pc, #32
   2979c:	mov	r1, #0
   297a0:	mov	lr, #0
   297a4:	mov	r8, #0
   297a8:	mov	r4, #0
   297ac:	mov	r3, #0
   297b0:	mov	r7, #0
   297b4:	mov	r0, #0
   297b8:	mov	r2, #0
   297bc:	ldr	pc, [sl, r6, lsl #2]
   297c0:	andeq	r9, r2, r4, lsr #16
   297c4:	andeq	r9, r2, ip, lsl r8
   297c8:	andeq	r9, r2, r4, lsl r8
   297cc:	andeq	r9, r2, ip, lsl #16
   297d0:	andeq	r9, r2, r0, lsl #16
   297d4:	strdeq	r9, [r2], -r4
   297d8:	andeq	r9, r2, r4, ror #15
   297dc:	andeq	r9, r2, r0, ror #15
   297e0:	ldrb	lr, [r5, #7]
   297e4:	ldrb	r0, [r5, #6]
   297e8:	mov	r8, r1
   297ec:	orr	r0, lr, r0, lsl #8
   297f0:	mov	r1, r0
   297f4:	ldrb	r0, [r5, #5]
   297f8:	mov	r4, r8
   297fc:	orr	r1, r1, r0, lsl #16
   29800:	ldrb	r0, [r5, #4]
   29804:	mov	r3, r4
   29808:	orr	r1, r1, r0, lsl #24
   2980c:	ldrb	r0, [r5, #3]
   29810:	orr	r7, r0, r3
   29814:	ldrb	r0, [r5, #2]
   29818:	orr	r0, r7, r0, lsl #8
   2981c:	ldrb	r2, [r5, #1]
   29820:	orr	r2, r0, r2, lsl #16
   29824:	ldrb	r0, [r5]
   29828:	orr	r2, r2, r0, lsl #24
   2982c:	movw	r0, #29797	; 0x7465
   29830:	movt	r0, #24931	; 0x6163
   29834:	subs	r0, r1, r0
   29838:	movw	r0, #24946	; 0x6172
   2983c:	movt	r0, #25448	; 0x6368
   29840:	sbcs	r0, r2, r0
   29844:	bcs	299b4 <main@@Base+0x13c64>
   29848:	movw	r0, #29817	; 0x7479
   2984c:	movw	r3, #28005	; 0x6d65
   29850:	ldr	r4, [sp, #36]	; 0x24
   29854:	mov	sl, r9
   29858:	movt	r0, #28511	; 0x6f5f
   2985c:	movt	r3, #25441	; 0x6361
   29860:	eor	r0, r1, r0
   29864:	eor	r3, r2, r3
   29868:	orrs	r0, r0, r3
   2986c:	beq	29da0 <main@@Base+0x14050>
   29870:	movw	r0, #28265	; 0x6e69
   29874:	movw	r7, #29793	; 0x7461
   29878:	ldr	r9, [sp, #32]
   2987c:	movt	r0, #26479	; 0x676f
   29880:	movt	r7, #24942	; 0x616e
   29884:	eor	r0, r1, r0
   29888:	eor	r2, r2, r7
   2988c:	orrs	r0, r0, r2
   29890:	bne	29e2c <main@@Base+0x140dc>
   29894:	add	r8, r5, #8
   29898:	mov	r1, #8
   2989c:	sub	lr, r4, r8
   298a0:	cmp	lr, #8
   298a4:	movcc	r1, lr
   298a8:	sub	r6, r1, #1
   298ac:	cmp	r6, #7
   298b0:	bhi	2a7d0 <main@@Base+0x14a80>
   298b4:	str	r8, [sp, #28]
   298b8:	add	r0, pc, #32
   298bc:	mov	r1, r5
   298c0:	mov	r4, #0
   298c4:	mov	ip, #0
   298c8:	mov	r8, #0
   298cc:	mov	r3, #0
   298d0:	mov	r7, #0
   298d4:	mov	r5, #0
   298d8:	mov	r2, #0
   298dc:	ldr	pc, [r0, r6, lsl #2]
   298e0:	andeq	r9, r2, ip, lsr r9
   298e4:	andeq	r9, r2, r4, lsr r9
   298e8:	andeq	r9, r2, ip, lsr #18
   298ec:	andeq	r9, r2, r4, lsr #18
   298f0:	andeq	r9, r2, r8, lsl r9
   298f4:	andeq	r9, r2, r8, lsl #18
   298f8:	andeq	r9, r2, r0, lsl #18
   298fc:	andeq	r9, r2, r0, lsl #18
   29900:	ldrb	r0, [r1, #14]
   29904:	lsl	ip, r0, #8
   29908:	ldrb	r0, [r1, #13]
   2990c:	mov	r8, r4
   29910:	orr	r0, ip, r0, lsl #16
   29914:	mov	r4, r0
   29918:	ldrb	r0, [r1, #12]
   2991c:	mov	r3, r8
   29920:	orr	r4, r4, r0, lsl #24
   29924:	ldrb	r0, [r1, #11]
   29928:	orr	r7, r0, r3
   2992c:	ldrb	r0, [r1, #10]
   29930:	orr	r5, r7, r0, lsl #8
   29934:	ldrb	r0, [r1, #9]
   29938:	orr	r2, r5, r0, lsl #16
   2993c:	ldr	r8, [sp, #28]
   29940:	mov	r7, r1
   29944:	movw	r3, #25856	; 0x6500
   29948:	movt	r3, #31088	; 0x7970
   2994c:	ldrb	r0, [r8]
   29950:	orr	r1, r2, r0, lsl #24
   29954:	ldr	r0, [sp, #24]
   29958:	bic	r2, r4, #255	; 0xff
   2995c:	eor	r2, r2, r3
   29960:	eor	r0, r1, r0
   29964:	orrs	r0, r2, r0
   29968:	bne	29f8c <main@@Base+0x1423c>
   2996c:	ldr	r4, [sp, #36]	; 0x24
   29970:	cmp	lr, #8
   29974:	blt	2a7d0 <main@@Base+0x14a80>
   29978:	ldrb	r0, [r7, #15]
   2997c:	mov	r3, r7
   29980:	cmp	r0, #34	; 0x22
   29984:	bne	2a7d0 <main@@Base+0x14a80>
   29988:	add	r1, r3, #16
   2998c:	sub	r0, r4, r1
   29990:	cmp	r0, #2
   29994:	blt	2a1c4 <main@@Base+0x14474>
   29998:	ldrb	r0, [r1]
   2999c:	cmp	r0, #32
   299a0:	bls	2a1b4 <main@@Base+0x14464>
   299a4:	mov	r3, r1
   299a8:	cmp	r3, r4
   299ac:	bne	2a1dc <main@@Base+0x1448c>
   299b0:	b	2a214 <main@@Base+0x144c4>
   299b4:	movw	r0, #26720	; 0x6860
   299b8:	ldr	r4, [sp, #36]	; 0x24
   299bc:	mov	sl, r9
   299c0:	movt	r0, #24419	; 0x5f63
   299c4:	subs	r0, r0, r1
   299c8:	movw	r0, #26990	; 0x696e
   299cc:	movt	r0, #28001	; 0x6d61
   299d0:	sbcs	r0, r0, r2
   299d4:	bcc	29b1c <main@@Base+0x13dcc>
   299d8:	movw	r0, #29797	; 0x7465
   299dc:	movt	r0, #24931	; 0x6163
   299e0:	eor	r0, r1, r0
   299e4:	movw	r1, #24946	; 0x6172
   299e8:	movt	r1, #25448	; 0x6368
   299ec:	eor	r1, r2, r1
   299f0:	orrs	r0, r0, r1
   299f4:	bne	29cd4 <main@@Base+0x13f84>
   299f8:	add	r7, r5, #8
   299fc:	ldr	r9, [sp, #32]
   29a00:	mov	r1, #8
   29a04:	sub	lr, r4, r7
   29a08:	cmp	lr, #8
   29a0c:	movcc	r1, lr
   29a10:	sub	r6, r1, #1
   29a14:	cmp	r6, #7
   29a18:	bhi	2a8dc <main@@Base+0x14b8c>
   29a1c:	str	r7, [sp, #28]
   29a20:	add	r0, pc, #32
   29a24:	mov	r1, r5
   29a28:	mov	r8, #0
   29a2c:	mov	ip, #0
   29a30:	mov	r4, #0
   29a34:	mov	r3, #0
   29a38:	mov	r7, #0
   29a3c:	mov	r5, #0
   29a40:	mov	r2, #0
   29a44:	ldr	pc, [r0, r6, lsl #2]
   29a48:	andeq	r9, r2, r4, lsr #21
   29a4c:	muleq	r2, ip, sl
   29a50:	muleq	r2, r4, sl
   29a54:	andeq	r9, r2, ip, lsl #21
   29a58:	andeq	r9, r2, r0, lsl #21
   29a5c:	andeq	r9, r2, r0, ror sl
   29a60:	andeq	r9, r2, r8, ror #20
   29a64:	andeq	r9, r2, r8, ror #20
   29a68:	ldrb	r0, [r1, #14]
   29a6c:	lsl	ip, r0, #8
   29a70:	ldrb	r0, [r1, #13]
   29a74:	mov	r4, r8
   29a78:	orr	r0, ip, r0, lsl #16
   29a7c:	mov	r8, r0
   29a80:	ldrb	r0, [r1, #12]
   29a84:	mov	r3, r4
   29a88:	orr	r8, r8, r0, lsl #24
   29a8c:	ldrb	r0, [r1, #11]
   29a90:	orr	r7, r0, r3
   29a94:	ldrb	r0, [r1, #10]
   29a98:	orr	r5, r7, r0, lsl #8
   29a9c:	ldrb	r0, [r1, #9]
   29aa0:	orr	r2, r5, r0, lsl #16
   29aa4:	ldr	r7, [sp, #28]
   29aa8:	mov	r3, r1
   29aac:	movw	r1, #25856	; 0x6500
   29ab0:	bic	r0, r8, #255	; 0xff
   29ab4:	movt	r1, #31088	; 0x7970
   29ab8:	eor	r0, r0, r1
   29abc:	ldrb	r1, [r7]
   29ac0:	orr	r1, r2, r1, lsl #24
   29ac4:	movw	r2, #24436	; 0x5f74
   29ac8:	movt	r2, #29299	; 0x7273
   29acc:	eor	r2, r1, r2
   29ad0:	orrs	r0, r0, r2
   29ad4:	bne	29fe8 <main@@Base+0x14298>
   29ad8:	ldr	r4, [sp, #36]	; 0x24
   29adc:	cmp	lr, #8
   29ae0:	blt	2a8dc <main@@Base+0x14b8c>
   29ae4:	ldrb	r0, [r3, #15]
   29ae8:	cmp	r0, #34	; 0x22
   29aec:	bne	2a8dc <main@@Base+0x14b8c>
   29af0:	add	r1, r3, #16
   29af4:	sub	r0, r4, r1
   29af8:	cmp	r0, #2
   29afc:	blt	2a2b4 <main@@Base+0x14564>
   29b00:	ldrb	r0, [r1]
   29b04:	cmp	r0, #32
   29b08:	bls	2a2a4 <main@@Base+0x14554>
   29b0c:	mov	r3, r1
   29b10:	cmp	r3, r4
   29b14:	bne	2a2cc <main@@Base+0x1457c>
   29b18:	b	2a304 <main@@Base+0x145b4>
   29b1c:	movw	r0, #26979	; 0x6963
   29b20:	movw	r3, #25701	; 0x6465
   29b24:	movt	r0, #24427	; 0x5f6b
   29b28:	movt	r3, #29545	; 0x7369
   29b2c:	eor	r0, r1, r0
   29b30:	eor	r3, r2, r3
   29b34:	orrs	r0, r0, r3
   29b38:	beq	29e84 <main@@Base+0x14134>
   29b3c:	movw	r0, #26721	; 0x6861
   29b40:	movt	r0, #24419	; 0x5f63
   29b44:	eor	r0, r1, r0
   29b48:	movw	r1, #26990	; 0x696e
   29b4c:	movt	r1, #28001	; 0x6d61
   29b50:	eor	r1, r2, r1
   29b54:	orrs	r0, r0, r1
   29b58:	bne	29cd4 <main@@Base+0x13f84>
   29b5c:	add	r7, r5, #8
   29b60:	mov	r0, #8
   29b64:	sub	lr, r4, r7
   29b68:	cmp	lr, #8
   29b6c:	movcc	r0, lr
   29b70:	sub	r6, r0, #1
   29b74:	cmp	r6, #7
   29b78:	bhi	2a110 <main@@Base+0x143c0>
   29b7c:	str	r7, [sp, #28]
   29b80:	add	r4, pc, #32
   29b84:	mov	r1, #0
   29b88:	mov	ip, #0
   29b8c:	mov	sl, #0
   29b90:	mov	r8, #0
   29b94:	mov	r3, #0
   29b98:	mov	r7, #0
   29b9c:	mov	r2, #0
   29ba0:	mov	r0, #0
   29ba4:	ldr	pc, [r4, r6, lsl #2]
   29ba8:	andeq	r9, r2, ip, lsl #24
   29bac:	andeq	r9, r2, r4, lsl #24
   29bb0:	strdeq	r9, [r2], -ip
   29bb4:	strdeq	r9, [r2], -r4
   29bb8:	andeq	r9, r2, r8, ror #23
   29bbc:	ldrdeq	r9, [r2], -ip
   29bc0:	andeq	r9, r2, ip, asr #23
   29bc4:	andeq	r9, r2, r8, asr #23
   29bc8:	ldrb	ip, [r5, #15]
   29bcc:	ldrb	r0, [r5, #14]
   29bd0:	mov	sl, r1
   29bd4:	orr	r0, ip, r0, lsl #8
   29bd8:	mov	r1, r0
   29bdc:	ldrb	r0, [r5, #13]
   29be0:	mov	r8, sl
   29be4:	orr	r1, r1, r0, lsl #16
   29be8:	ldrb	r0, [r5, #12]
   29bec:	mov	r3, r8
   29bf0:	orr	r1, r1, r0, lsl #24
   29bf4:	ldrb	r0, [r5, #11]
   29bf8:	orr	r7, r0, r3
   29bfc:	ldrb	r0, [r5, #10]
   29c00:	orr	r2, r7, r0, lsl #8
   29c04:	ldrb	r0, [r5, #9]
   29c08:	orr	r0, r2, r0, lsl #16
   29c0c:	ldr	r7, [sp, #28]
   29c10:	movw	r2, #24436	; 0x5f74
   29c14:	movt	r2, #25970	; 0x6572
   29c18:	eor	r2, r1, r2
   29c1c:	ldrb	r3, [r7]
   29c20:	orr	r0, r0, r3, lsl #24
   29c24:	movw	r3, #25460	; 0x6374
   29c28:	movt	r3, #29281	; 0x7261
   29c2c:	eor	r3, r0, r3
   29c30:	orrs	r2, r2, r3
   29c34:	bne	2a040 <main@@Base+0x142f0>
   29c38:	ldr	r4, [sp, #36]	; 0x24
   29c3c:	mov	r3, r5
   29c40:	add	r5, r5, #16
   29c44:	mov	r2, #8
   29c48:	mov	sl, r9
   29c4c:	sub	r0, r4, r5
   29c50:	cmp	r0, #8
   29c54:	movcc	r2, r0
   29c58:	sub	r1, r2, #3
   29c5c:	cmp	r1, #6
   29c60:	bcs	2a11c <main@@Base+0x143cc>
   29c64:	ldrb	r1, [r3, #18]
   29c68:	ldr	r9, [sp, #32]
   29c6c:	lsl	r1, r1, #8
   29c70:	ldrb	r2, [r3, #17]
   29c74:	orr	r1, r1, r2, lsl #16
   29c78:	ldrb	r2, [r5]
   29c7c:	bic	r1, r1, #255	; 0xff
   29c80:	orr	r1, r1, r2, lsl #24
   29c84:	movw	r2, #25856	; 0x6500
   29c88:	movt	r2, #31088	; 0x7970
   29c8c:	teq	r1, r2
   29c90:	bne	2a76c <main@@Base+0x14a1c>
   29c94:	cmp	r0, #4
   29c98:	blt	2a76c <main@@Base+0x14a1c>
   29c9c:	ldrb	r0, [r3, #19]
   29ca0:	cmp	r0, #34	; 0x22
   29ca4:	bne	2a76c <main@@Base+0x14a1c>
   29ca8:	add	r1, r3, #20
   29cac:	sub	r0, r4, r1
   29cb0:	cmp	r0, #2
   29cb4:	blt	2a720 <main@@Base+0x149d0>
   29cb8:	ldrb	r0, [r1]
   29cbc:	cmp	r0, #32
   29cc0:	bls	2a710 <main@@Base+0x149c0>
   29cc4:	mov	r3, r1
   29cc8:	cmp	r3, r4
   29ccc:	bne	2a738 <main@@Base+0x149e8>
   29cd0:	b	2a778 <main@@Base+0x14a28>
   29cd4:	mov	r0, sl
   29cd8:	mov	r1, r5
   29cdc:	mov	r2, r4
   29ce0:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   29ce4:	ldr	r9, [sp, #32]
   29ce8:	mov	r2, r0
   29cec:	sub	r0, r4, r2
   29cf0:	cmp	r0, #2
   29cf4:	blt	2a94c <main@@Base+0x14bfc>
   29cf8:	ldrb	r0, [r2]
   29cfc:	cmp	r0, #32
   29d00:	bls	29d54 <main@@Base+0x14004>
   29d04:	mov	r3, r2
   29d08:	cmp	r3, r4
   29d0c:	beq	2a9e4 <main@@Base+0x14c94>
   29d10:	ldrb	r0, [r3]
   29d14:	cmp	r0, #44	; 0x2c
   29d18:	bne	2a9f8 <main@@Base+0x14ca8>
   29d1c:	add	r1, r3, #1
   29d20:	sub	r0, r4, r1
   29d24:	cmp	r0, #2
   29d28:	blt	29d84 <main@@Base+0x14034>
   29d2c:	ldrb	r0, [r1]
   29d30:	cmp	r0, #32
   29d34:	bls	29d74 <main@@Base+0x14024>
   29d38:	mov	r3, r1
   29d3c:	cmp	r3, r4
   29d40:	beq	2aa30 <main@@Base+0x14ce0>
   29d44:	ldrb	r0, [r3]
   29d48:	cmp	r0, #125	; 0x7d
   29d4c:	bne	29740 <main@@Base+0x139f0>
   29d50:	b	2aa00 <main@@Base+0x14cb0>
   29d54:	bne	2a94c <main@@Base+0x14bfc>
   29d58:	mov	r3, r2
   29d5c:	ldrb	r0, [r3, #1]!
   29d60:	cmp	r0, #32
   29d64:	bls	2a94c <main@@Base+0x14bfc>
   29d68:	cmp	r3, r4
   29d6c:	bne	29d10 <main@@Base+0x13fc0>
   29d70:	b	2a9e4 <main@@Base+0x14c94>
   29d74:	bne	29d84 <main@@Base+0x14034>
   29d78:	ldrb	r0, [r3, #2]!
   29d7c:	cmp	r0, #32
   29d80:	bhi	29d94 <main@@Base+0x14044>
   29d84:	mov	r0, sl
   29d88:	mov	r2, r4
   29d8c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   29d90:	mov	r3, r0
   29d94:	cmp	r3, r4
   29d98:	bne	29d44 <main@@Base+0x13ff4>
   29d9c:	b	2aa30 <main@@Base+0x14ce0>
   29da0:	add	r6, r5, #8
   29da4:	ldr	r9, [sp, #32]
   29da8:	mov	r2, #8
   29dac:	sub	r0, r4, r6
   29db0:	cmp	r0, #8
   29db4:	movcc	r2, r0
   29db8:	sub	r1, r2, #2
   29dbc:	cmp	r1, #7
   29dc0:	bcs	2a0b0 <main@@Base+0x14360>
   29dc4:	ldrb	r1, [r5, #9]
   29dc8:	lsl	r2, r1, #16
   29dcc:	mov	r1, #0
   29dd0:	ldrb	r3, [r6]
   29dd4:	orr	r2, r2, r3, lsl #24
   29dd8:	movw	r3, #0
   29ddc:	movt	r3, #28773	; 0x7065
   29de0:	eor	r2, r2, r3
   29de4:	orrs	r1, r1, r2
   29de8:	bne	2a92c <main@@Base+0x14bdc>
   29dec:	cmp	r0, #3
   29df0:	blt	2a92c <main@@Base+0x14bdc>
   29df4:	ldrb	r0, [r5, #10]
   29df8:	cmp	r0, #34	; 0x22
   29dfc:	bne	2a92c <main@@Base+0x14bdc>
   29e00:	add	r1, r5, #11
   29e04:	sub	r0, r4, r1
   29e08:	cmp	r0, #2
   29e0c:	blt	2a23c <main@@Base+0x144ec>
   29e10:	ldrb	r0, [r1]
   29e14:	cmp	r0, #32
   29e18:	bls	2a22c <main@@Base+0x144dc>
   29e1c:	mov	r5, r1
   29e20:	cmp	r5, r4
   29e24:	bne	2a254 <main@@Base+0x14504>
   29e28:	b	2a28c <main@@Base+0x1453c>
   29e2c:	and	r0, r1, #-16777216	; 0xff000000
   29e30:	eor	r0, r0, #1862270976	; 0x6f000000
   29e34:	orrs	r0, r0, r3
   29e38:	bne	2a76c <main@@Base+0x14a1c>
   29e3c:	cmp	ip, #6
   29e40:	mov	r1, r5
   29e44:	blt	2a4a8 <main@@Base+0x14758>
   29e48:	ldrb	r0, [r5, #5]
   29e4c:	mov	r1, r5
   29e50:	cmp	r0, #34	; 0x22
   29e54:	bne	2a4a8 <main@@Base+0x14758>
   29e58:	add	r2, r5, #6
   29e5c:	sub	r0, r4, r2
   29e60:	cmp	r0, #2
   29e64:	blt	2a14c <main@@Base+0x143fc>
   29e68:	ldrb	r0, [r2]
   29e6c:	cmp	r0, #32
   29e70:	bls	2a138 <main@@Base+0x143e8>
   29e74:	mov	r1, r2
   29e78:	cmp	r1, r4
   29e7c:	bne	2a168 <main@@Base+0x14418>
   29e80:	b	2a1a0 <main@@Base+0x14450>
   29e84:	add	r6, r5, #8
   29e88:	ldr	r9, [sp, #32]
   29e8c:	mov	r1, #8
   29e90:	sub	lr, r4, r6
   29e94:	cmp	lr, #8
   29e98:	movcc	r1, lr
   29e9c:	sub	r3, r1, #1
   29ea0:	cmp	r3, #7
   29ea4:	bhi	2a92c <main@@Base+0x14bdc>
   29ea8:	str	r6, [sp, #28]
   29eac:	add	r6, pc, #24
   29eb0:	mov	ip, #0
   29eb4:	mov	r8, #0
   29eb8:	mov	r1, #0
   29ebc:	mov	r7, #0
   29ec0:	mov	r0, #0
   29ec4:	mov	r2, #0
   29ec8:	ldr	pc, [r6, r3, lsl #2]
   29ecc:	andeq	r9, r2, ip, lsl pc
   29ed0:	andeq	r9, r2, r4, lsl pc
   29ed4:	andeq	r9, r2, ip, lsl #30
   29ed8:	andeq	r9, r2, r4, lsl #30
   29edc:	strdeq	r9, [r2], -r4
   29ee0:	andeq	r9, r2, ip, ror #29
   29ee4:	andeq	r9, r2, ip, ror #29
   29ee8:	andeq	r9, r2, ip, ror #29
   29eec:	ldrb	r1, [r5, #13]
   29ef0:	lsl	r8, r1, #16
   29ef4:	ldrb	r1, [r5, #12]
   29ef8:	orr	r2, r8, r1, lsl #24
   29efc:	mov	r1, ip
   29f00:	mov	ip, r2
   29f04:	ldrb	r2, [r5, #11]
   29f08:	orr	r7, r2, r1
   29f0c:	ldrb	r1, [r5, #10]
   29f10:	orr	r0, r7, r1, lsl #8
   29f14:	ldrb	r1, [r5, #9]
   29f18:	orr	r2, r0, r1, lsl #16
   29f1c:	ldr	r6, [sp, #28]
   29f20:	movw	r0, #27487	; 0x6b5f
   29f24:	lsr	r3, ip, #16
   29f28:	ldrb	r1, [r6]
   29f2c:	orr	r1, r2, r1, lsl #24
   29f30:	eor	r2, r0, r1, lsr #16
   29f34:	movw	r0, #28773	; 0x7065
   29f38:	orr	r3, r3, r1, lsl #16
   29f3c:	movt	r0, #29817	; 0x7479
   29f40:	eor	r3, r3, r0
   29f44:	orrs	r2, r3, r2
   29f48:	bne	2a0c4 <main@@Base+0x14374>
   29f4c:	cmp	lr, #7
   29f50:	blt	2a92c <main@@Base+0x14bdc>
   29f54:	ldrb	r0, [r5, #14]
   29f58:	cmp	r0, #34	; 0x22
   29f5c:	bne	2a92c <main@@Base+0x14bdc>
   29f60:	add	r1, r5, #15
   29f64:	sub	r0, r4, r1
   29f68:	cmp	r0, #2
   29f6c:	blt	2a32c <main@@Base+0x145dc>
   29f70:	ldrb	r0, [r1]
   29f74:	cmp	r0, #32
   29f78:	bls	2a31c <main@@Base+0x145cc>
   29f7c:	mov	r5, r1
   29f80:	cmp	r5, r4
   29f84:	bne	2a344 <main@@Base+0x145f4>
   29f88:	b	2a37c <main@@Base+0x1462c>
   29f8c:	movw	r0, #0
   29f90:	ldr	r4, [sp, #36]	; 0x24
   29f94:	bfc	r1, #0, #16
   29f98:	movt	r0, #29556	; 0x7374
   29f9c:	teq	r1, r0
   29fa0:	bne	2a7d0 <main@@Base+0x14a80>
   29fa4:	cmp	lr, #3
   29fa8:	blt	2a7d0 <main@@Base+0x14a80>
   29fac:	ldrb	r0, [r7, #10]
   29fb0:	mov	r2, r7
   29fb4:	cmp	r0, #34	; 0x22
   29fb8:	bne	2a7d0 <main@@Base+0x14a80>
   29fbc:	add	r1, r2, #11
   29fc0:	sub	r0, r4, r1
   29fc4:	cmp	r0, #2
   29fc8:	blt	2a3a4 <main@@Base+0x14654>
   29fcc:	ldrb	r0, [r1]
   29fd0:	cmp	r0, #32
   29fd4:	bls	2a394 <main@@Base+0x14644>
   29fd8:	mov	r2, r1
   29fdc:	cmp	r2, r4
   29fe0:	bne	2a3bc <main@@Base+0x1466c>
   29fe4:	b	2a3f4 <main@@Base+0x146a4>
   29fe8:	movw	r0, #0
   29fec:	ldr	r4, [sp, #36]	; 0x24
   29ff0:	bfc	r1, #0, #16
   29ff4:	movt	r0, #29299	; 0x7273
   29ff8:	teq	r1, r0
   29ffc:	bne	2a8dc <main@@Base+0x14b8c>
   2a000:	cmp	lr, #3
   2a004:	blt	2a8dc <main@@Base+0x14b8c>
   2a008:	ldrb	r0, [r3, #10]
   2a00c:	cmp	r0, #34	; 0x22
   2a010:	bne	2a8dc <main@@Base+0x14b8c>
   2a014:	add	r1, r3, #11
   2a018:	sub	r0, r4, r1
   2a01c:	cmp	r0, #2
   2a020:	blt	2a41c <main@@Base+0x146cc>
   2a024:	ldrb	r0, [r1]
   2a028:	cmp	r0, #32
   2a02c:	bls	2a40c <main@@Base+0x146bc>
   2a030:	mov	r3, r1
   2a034:	cmp	r3, r4
   2a038:	bne	2a434 <main@@Base+0x146e4>
   2a03c:	b	2a46c <main@@Base+0x1471c>
   2a040:	movw	r2, #29281	; 0x7261
   2a044:	lsr	r1, r1, #16
   2a048:	ldr	r4, [sp, #36]	; 0x24
   2a04c:	mov	sl, r9
   2a050:	eor	r2, r2, r0, lsr #16
   2a054:	orr	r0, r1, r0, lsl #16
   2a058:	movw	r1, #25970	; 0x6572
   2a05c:	movt	r1, #25460	; 0x6374
   2a060:	eor	r0, r0, r1
   2a064:	orrs	r0, r0, r2
   2a068:	bne	2a110 <main@@Base+0x143c0>
   2a06c:	ldr	r9, [sp, #32]
   2a070:	cmp	lr, #7
   2a074:	blt	2a8dc <main@@Base+0x14b8c>
   2a078:	ldrb	r0, [r5, #14]
   2a07c:	cmp	r0, #34	; 0x22
   2a080:	bne	2a8dc <main@@Base+0x14b8c>
   2a084:	add	r1, r5, #15
   2a088:	sub	r0, r4, r1
   2a08c:	cmp	r0, #2
   2a090:	blt	2a5ac <main@@Base+0x1485c>
   2a094:	ldrb	r0, [r1]
   2a098:	cmp	r0, #32
   2a09c:	bls	2a59c <main@@Base+0x1484c>
   2a0a0:	mov	r5, r1
   2a0a4:	cmp	r5, r4
   2a0a8:	bne	2a5c4 <main@@Base+0x14874>
   2a0ac:	b	2a5fc <main@@Base+0x148ac>
   2a0b0:	cmp	r2, #1
   2a0b4:	mov	r1, #0
   2a0b8:	mov	r2, #0
   2a0bc:	beq	29dd0 <main@@Base+0x14080>
   2a0c0:	b	2a92c <main@@Base+0x14bdc>
   2a0c4:	and	r1, r1, #-16777216	; 0xff000000
   2a0c8:	teq	r1, #1795162112	; 0x6b000000
   2a0cc:	bne	2a92c <main@@Base+0x14bdc>
   2a0d0:	cmp	lr, #2
   2a0d4:	blt	2a92c <main@@Base+0x14bdc>
   2a0d8:	ldrb	r0, [r5, #9]
   2a0dc:	cmp	r0, #34	; 0x22
   2a0e0:	bne	2a92c <main@@Base+0x14bdc>
   2a0e4:	add	r1, r5, #10
   2a0e8:	sub	r0, r4, r1
   2a0ec:	cmp	r0, #2
   2a0f0:	blt	2a624 <main@@Base+0x148d4>
   2a0f4:	ldrb	r0, [r1]
   2a0f8:	cmp	r0, #32
   2a0fc:	bls	2a614 <main@@Base+0x148c4>
   2a100:	mov	r5, r1
   2a104:	cmp	r5, r4
   2a108:	bne	2a63c <main@@Base+0x148ec>
   2a10c:	b	2a674 <main@@Base+0x14924>
   2a110:	mov	r0, sl
   2a114:	mov	r1, r7
   2a118:	b	29cdc <main@@Base+0x13f8c>
   2a11c:	ldr	r9, [sp, #32]
   2a120:	mov	r1, #0
   2a124:	cmp	r2, #1
   2a128:	beq	29c78 <main@@Base+0x13f28>
   2a12c:	cmp	r2, #2
   2a130:	beq	29c70 <main@@Base+0x13f20>
   2a134:	b	2a76c <main@@Base+0x14a1c>
   2a138:	bne	2a14c <main@@Base+0x143fc>
   2a13c:	mov	r1, r5
   2a140:	ldrb	r0, [r1, #7]!
   2a144:	cmp	r0, #32
   2a148:	bhi	2a160 <main@@Base+0x14410>
   2a14c:	mov	r1, r2
   2a150:	mov	r0, sl
   2a154:	mov	r2, r4
   2a158:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a15c:	mov	r1, r0
   2a160:	cmp	r1, r4
   2a164:	beq	2a1a0 <main@@Base+0x14450>
   2a168:	ldrb	r0, [r1]
   2a16c:	cmp	r0, #58	; 0x3a
   2a170:	bne	2a1a0 <main@@Base+0x14450>
   2a174:	add	r2, r1, #1
   2a178:	sub	r0, r4, r2
   2a17c:	cmp	r0, #2
   2a180:	blt	2a494 <main@@Base+0x14744>
   2a184:	ldrb	r0, [r2]
   2a188:	cmp	r0, #32
   2a18c:	bls	2a484 <main@@Base+0x14734>
   2a190:	mov	r1, r2
   2a194:	cmp	r5, r1
   2a198:	bne	2a4b0 <main@@Base+0x14760>
   2a19c:	b	2a76c <main@@Base+0x14a1c>
   2a1a0:	mov	r0, sl
   2a1a4:	mov	r2, r4
   2a1a8:	mov	r3, #4
   2a1ac:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2a1b0:	b	2a4a4 <main@@Base+0x14754>
   2a1b4:	bne	2a1c4 <main@@Base+0x14474>
   2a1b8:	ldrb	r0, [r3, #17]!
   2a1bc:	cmp	r0, #32
   2a1c0:	bhi	2a1d4 <main@@Base+0x14484>
   2a1c4:	mov	r0, sl
   2a1c8:	mov	r2, r4
   2a1cc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a1d0:	mov	r3, r0
   2a1d4:	cmp	r3, r4
   2a1d8:	beq	2a214 <main@@Base+0x144c4>
   2a1dc:	ldrb	r0, [r3]
   2a1e0:	cmp	r0, #58	; 0x3a
   2a1e4:	bne	2a214 <main@@Base+0x144c4>
   2a1e8:	add	r1, r3, #1
   2a1ec:	sub	r0, r4, r1
   2a1f0:	cmp	r0, #2
   2a1f4:	blt	2a500 <main@@Base+0x147b0>
   2a1f8:	ldrb	r0, [r1]
   2a1fc:	cmp	r0, #32
   2a200:	bls	2a4f0 <main@@Base+0x147a0>
   2a204:	mov	r3, r1
   2a208:	cmp	r8, r3
   2a20c:	bne	2a518 <main@@Base+0x147c8>
   2a210:	b	2a7d0 <main@@Base+0x14a80>
   2a214:	mov	r1, r3
   2a218:	mov	r0, sl
   2a21c:	mov	r2, r4
   2a220:	mov	r3, #4
   2a224:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2a228:	b	2a50c <main@@Base+0x147bc>
   2a22c:	bne	2a23c <main@@Base+0x144ec>
   2a230:	ldrb	r0, [r5, #12]!
   2a234:	cmp	r0, #32
   2a238:	bhi	2a24c <main@@Base+0x144fc>
   2a23c:	mov	r0, sl
   2a240:	mov	r2, r4
   2a244:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a248:	mov	r5, r0
   2a24c:	cmp	r5, r4
   2a250:	beq	2a28c <main@@Base+0x1453c>
   2a254:	ldrb	r0, [r5]
   2a258:	cmp	r0, #58	; 0x3a
   2a25c:	bne	2a28c <main@@Base+0x1453c>
   2a260:	add	r1, r5, #1
   2a264:	sub	r0, r4, r1
   2a268:	cmp	r0, #2
   2a26c:	blt	2a558 <main@@Base+0x14808>
   2a270:	ldrb	r0, [r1]
   2a274:	cmp	r0, #32
   2a278:	bls	2a548 <main@@Base+0x147f8>
   2a27c:	mov	r5, r1
   2a280:	cmp	r6, r5
   2a284:	bne	2a570 <main@@Base+0x14820>
   2a288:	b	2a92c <main@@Base+0x14bdc>
   2a28c:	mov	r0, sl
   2a290:	mov	r1, r5
   2a294:	mov	r2, r4
   2a298:	mov	r3, #4
   2a29c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2a2a0:	b	2a564 <main@@Base+0x14814>
   2a2a4:	bne	2a2b4 <main@@Base+0x14564>
   2a2a8:	ldrb	r0, [r3, #17]!
   2a2ac:	cmp	r0, #32
   2a2b0:	bhi	2a2c4 <main@@Base+0x14574>
   2a2b4:	mov	r0, sl
   2a2b8:	mov	r2, r4
   2a2bc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a2c0:	mov	r3, r0
   2a2c4:	cmp	r3, r4
   2a2c8:	beq	2a304 <main@@Base+0x145b4>
   2a2cc:	ldrb	r0, [r3]
   2a2d0:	cmp	r0, #58	; 0x3a
   2a2d4:	bne	2a304 <main@@Base+0x145b4>
   2a2d8:	add	r1, r3, #1
   2a2dc:	sub	r0, r4, r1
   2a2e0:	cmp	r0, #2
   2a2e4:	blt	2a69c <main@@Base+0x1494c>
   2a2e8:	ldrb	r0, [r1]
   2a2ec:	cmp	r0, #32
   2a2f0:	bls	2a68c <main@@Base+0x1493c>
   2a2f4:	mov	r3, r1
   2a2f8:	cmp	r7, r3
   2a2fc:	bne	2a6b4 <main@@Base+0x14964>
   2a300:	b	2a8dc <main@@Base+0x14b8c>
   2a304:	mov	r1, r3
   2a308:	mov	r0, sl
   2a30c:	mov	r2, r4
   2a310:	mov	r3, #4
   2a314:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2a318:	b	2a6a8 <main@@Base+0x14958>
   2a31c:	bne	2a32c <main@@Base+0x145dc>
   2a320:	ldrb	r0, [r5, #16]!
   2a324:	cmp	r0, #32
   2a328:	bhi	2a33c <main@@Base+0x145ec>
   2a32c:	mov	r0, sl
   2a330:	mov	r2, r4
   2a334:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a338:	mov	r5, r0
   2a33c:	cmp	r5, r4
   2a340:	beq	2a37c <main@@Base+0x1462c>
   2a344:	ldrb	r0, [r5]
   2a348:	cmp	r0, #58	; 0x3a
   2a34c:	bne	2a37c <main@@Base+0x1462c>
   2a350:	add	r1, r5, #1
   2a354:	sub	r0, r4, r1
   2a358:	cmp	r0, #2
   2a35c:	blt	2a7ec <main@@Base+0x14a9c>
   2a360:	ldrb	r0, [r1]
   2a364:	cmp	r0, #32
   2a368:	bls	2a7dc <main@@Base+0x14a8c>
   2a36c:	mov	r5, r1
   2a370:	cmp	r6, r5
   2a374:	bne	2a804 <main@@Base+0x14ab4>
   2a378:	b	2a92c <main@@Base+0x14bdc>
   2a37c:	mov	r0, sl
   2a380:	mov	r1, r5
   2a384:	mov	r2, r4
   2a388:	mov	r3, #4
   2a38c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2a390:	b	2a7f8 <main@@Base+0x14aa8>
   2a394:	bne	2a3a4 <main@@Base+0x14654>
   2a398:	ldrb	r0, [r2, #12]!
   2a39c:	cmp	r0, #32
   2a3a0:	bhi	2a3b4 <main@@Base+0x14664>
   2a3a4:	mov	r0, sl
   2a3a8:	mov	r2, r4
   2a3ac:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a3b0:	mov	r2, r0
   2a3b4:	cmp	r2, r4
   2a3b8:	beq	2a3f4 <main@@Base+0x146a4>
   2a3bc:	ldrb	r0, [r2]
   2a3c0:	cmp	r0, #58	; 0x3a
   2a3c4:	bne	2a3f4 <main@@Base+0x146a4>
   2a3c8:	add	r1, r2, #1
   2a3cc:	sub	r0, r4, r1
   2a3d0:	cmp	r0, #2
   2a3d4:	blt	2a7a0 <main@@Base+0x14a50>
   2a3d8:	ldrb	r0, [r1]
   2a3dc:	cmp	r0, #32
   2a3e0:	bls	2a790 <main@@Base+0x14a40>
   2a3e4:	mov	r2, r1
   2a3e8:	cmp	r8, r2
   2a3ec:	bne	2a7b8 <main@@Base+0x14a68>
   2a3f0:	b	2a7d0 <main@@Base+0x14a80>
   2a3f4:	mov	r1, r2
   2a3f8:	mov	r0, sl
   2a3fc:	mov	r2, r4
   2a400:	mov	r3, #4
   2a404:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2a408:	b	2a7ac <main@@Base+0x14a5c>
   2a40c:	bne	2a41c <main@@Base+0x146cc>
   2a410:	ldrb	r0, [r3, #12]!
   2a414:	cmp	r0, #32
   2a418:	bhi	2a42c <main@@Base+0x146dc>
   2a41c:	mov	r0, sl
   2a420:	mov	r2, r4
   2a424:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a428:	mov	r3, r0
   2a42c:	cmp	r3, r4
   2a430:	beq	2a46c <main@@Base+0x1471c>
   2a434:	ldrb	r0, [r3]
   2a438:	cmp	r0, #58	; 0x3a
   2a43c:	bne	2a46c <main@@Base+0x1471c>
   2a440:	add	r1, r3, #1
   2a444:	sub	r0, r4, r1
   2a448:	cmp	r0, #2
   2a44c:	blt	2a844 <main@@Base+0x14af4>
   2a450:	ldrb	r0, [r1]
   2a454:	cmp	r0, #32
   2a458:	bls	2a834 <main@@Base+0x14ae4>
   2a45c:	mov	r3, r1
   2a460:	cmp	r7, r3
   2a464:	bne	2a85c <main@@Base+0x14b0c>
   2a468:	b	2a8dc <main@@Base+0x14b8c>
   2a46c:	mov	r1, r3
   2a470:	mov	r0, sl
   2a474:	mov	r2, r4
   2a478:	mov	r3, #4
   2a47c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2a480:	b	2a850 <main@@Base+0x14b00>
   2a484:	bne	2a494 <main@@Base+0x14744>
   2a488:	ldrb	r0, [r1, #2]!
   2a48c:	cmp	r0, #32
   2a490:	bhi	2a4a8 <main@@Base+0x14758>
   2a494:	mov	r1, r2
   2a498:	mov	r0, sl
   2a49c:	mov	r2, r4
   2a4a0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a4a4:	mov	r1, r0
   2a4a8:	cmp	r5, r1
   2a4ac:	beq	2a76c <main@@Base+0x14a1c>
   2a4b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a4b4:	mov	r2, #7
   2a4b8:	mov	r3, #3
   2a4bc:	str	r2, [sp]
   2a4c0:	mov	r2, r4
   2a4c4:	str	r0, [sp, #4]
   2a4c8:	movw	r0, #43960	; 0xabb8
   2a4cc:	movt	r0, #2
   2a4d0:	str	r0, [sp, #8]
   2a4d4:	mov	r0, sl
   2a4d8:	bl	375bc <flatcc_json_parser_union@@Base>
   2a4dc:	mov	r2, r0
   2a4e0:	sub	r0, r4, r2
   2a4e4:	cmp	r0, #2
   2a4e8:	bge	29cf8 <main@@Base+0x13fa8>
   2a4ec:	b	2a94c <main@@Base+0x14bfc>
   2a4f0:	bne	2a500 <main@@Base+0x147b0>
   2a4f4:	ldrb	r0, [r3, #2]!
   2a4f8:	cmp	r0, #32
   2a4fc:	bhi	2a510 <main@@Base+0x147c0>
   2a500:	mov	r0, sl
   2a504:	mov	r2, r4
   2a508:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a50c:	mov	r3, r0
   2a510:	cmp	r8, r3
   2a514:	beq	2a7d0 <main@@Base+0x14a80>
   2a518:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a51c:	movw	r1, #53988	; 0xd2e4
   2a520:	mov	r2, #3
   2a524:	movt	r1, #5
   2a528:	str	r2, [sp]
   2a52c:	mov	r2, r4
   2a530:	add	r1, r1, #16
   2a534:	stmib	sp, {r0, r1}
   2a538:	movw	r0, #43960	; 0xabb8
   2a53c:	mov	r1, r3
   2a540:	mov	r3, #1
   2a544:	b	2a9c0 <main@@Base+0x14c70>
   2a548:	bne	2a558 <main@@Base+0x14808>
   2a54c:	ldrb	r0, [r5, #2]!
   2a550:	cmp	r0, #32
   2a554:	bhi	2a568 <main@@Base+0x14818>
   2a558:	mov	r0, sl
   2a55c:	mov	r2, r4
   2a560:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a564:	mov	r5, r0
   2a568:	cmp	r6, r5
   2a56c:	beq	2a92c <main@@Base+0x14bdc>
   2a570:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a574:	mov	r1, #7
   2a578:	mov	r2, r4
   2a57c:	mov	r3, #3
   2a580:	str	r1, [sp]
   2a584:	mov	r1, r5
   2a588:	str	r0, [sp, #4]
   2a58c:	ldr	r0, [sp, #20]
   2a590:	str	r0, [sp, #8]
   2a594:	movw	r0, #43960	; 0xabb8
   2a598:	b	2a9c0 <main@@Base+0x14c70>
   2a59c:	bne	2a5ac <main@@Base+0x1485c>
   2a5a0:	ldrb	r0, [r5, #16]!
   2a5a4:	cmp	r0, #32
   2a5a8:	bhi	2a5bc <main@@Base+0x1486c>
   2a5ac:	mov	r0, sl
   2a5b0:	mov	r2, r4
   2a5b4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a5b8:	mov	r5, r0
   2a5bc:	cmp	r5, r4
   2a5c0:	beq	2a5fc <main@@Base+0x148ac>
   2a5c4:	ldrb	r0, [r5]
   2a5c8:	cmp	r0, #58	; 0x3a
   2a5cc:	bne	2a5fc <main@@Base+0x148ac>
   2a5d0:	add	r1, r5, #1
   2a5d4:	sub	r0, r4, r1
   2a5d8:	cmp	r0, #2
   2a5dc:	blt	2a8b0 <main@@Base+0x14b60>
   2a5e0:	ldrb	r0, [r1]
   2a5e4:	cmp	r0, #32
   2a5e8:	bls	2a8a0 <main@@Base+0x14b50>
   2a5ec:	mov	r5, r1
   2a5f0:	cmp	r7, r5
   2a5f4:	bne	2a8c8 <main@@Base+0x14b78>
   2a5f8:	b	2a8dc <main@@Base+0x14b8c>
   2a5fc:	mov	r0, sl
   2a600:	mov	r1, r5
   2a604:	mov	r2, r4
   2a608:	mov	r3, #4
   2a60c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2a610:	b	2a8bc <main@@Base+0x14b6c>
   2a614:	bne	2a624 <main@@Base+0x148d4>
   2a618:	ldrb	r0, [r5, #11]!
   2a61c:	cmp	r0, #32
   2a620:	bhi	2a634 <main@@Base+0x148e4>
   2a624:	mov	r0, sl
   2a628:	mov	r2, r4
   2a62c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a630:	mov	r5, r0
   2a634:	cmp	r5, r4
   2a638:	beq	2a674 <main@@Base+0x14924>
   2a63c:	ldrb	r0, [r5]
   2a640:	cmp	r0, #58	; 0x3a
   2a644:	bne	2a674 <main@@Base+0x14924>
   2a648:	add	r1, r5, #1
   2a64c:	sub	r0, r4, r1
   2a650:	cmp	r0, #2
   2a654:	blt	2a8f8 <main@@Base+0x14ba8>
   2a658:	ldrb	r0, [r1]
   2a65c:	cmp	r0, #32
   2a660:	bls	2a8e8 <main@@Base+0x14b98>
   2a664:	mov	r5, r1
   2a668:	cmp	r6, r5
   2a66c:	bne	2a910 <main@@Base+0x14bc0>
   2a670:	b	2a92c <main@@Base+0x14bdc>
   2a674:	mov	r0, sl
   2a678:	mov	r1, r5
   2a67c:	mov	r2, r4
   2a680:	mov	r3, #4
   2a684:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2a688:	b	2a904 <main@@Base+0x14bb4>
   2a68c:	bne	2a69c <main@@Base+0x1494c>
   2a690:	ldrb	r0, [r3, #2]!
   2a694:	cmp	r0, #32
   2a698:	bhi	2a6ac <main@@Base+0x1495c>
   2a69c:	mov	r0, sl
   2a6a0:	mov	r2, r4
   2a6a4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a6a8:	mov	r3, r0
   2a6ac:	cmp	r7, r3
   2a6b0:	beq	2a8dc <main@@Base+0x14b8c>
   2a6b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a6b8:	movw	r1, #53988	; 0xd2e4
   2a6bc:	mov	r2, #9
   2a6c0:	movt	r1, #5
   2a6c4:	str	r2, [sp]
   2a6c8:	mov	r2, r4
   2a6cc:	add	r1, r1, #48	; 0x30
   2a6d0:	stmib	sp, {r0, r1}
   2a6d4:	movw	r0, #43960	; 0xabb8
   2a6d8:	mov	r1, r3
   2a6dc:	mov	r3, #4
   2a6e0:	movt	r0, #2
   2a6e4:	str	r0, [sp, #12]
   2a6e8:	movw	r0, #47816	; 0xbac8
   2a6ec:	movt	r0, #2
   2a6f0:	str	r0, [sp, #16]
   2a6f4:	mov	r0, sl
   2a6f8:	bl	38248 <flatcc_json_parser_union_type_vector@@Base>
   2a6fc:	mov	r2, r0
   2a700:	sub	r0, r4, r2
   2a704:	cmp	r0, #2
   2a708:	bge	29cf8 <main@@Base+0x13fa8>
   2a70c:	b	2a94c <main@@Base+0x14bfc>
   2a710:	bne	2a720 <main@@Base+0x149d0>
   2a714:	ldrb	r0, [r3, #21]!
   2a718:	cmp	r0, #32
   2a71c:	bhi	2a730 <main@@Base+0x149e0>
   2a720:	mov	r0, sl
   2a724:	mov	r2, r4
   2a728:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a72c:	mov	r3, r0
   2a730:	cmp	r3, r4
   2a734:	beq	2a778 <main@@Base+0x14a28>
   2a738:	ldrb	r0, [r3]
   2a73c:	cmp	r0, #58	; 0x3a
   2a740:	bne	2a778 <main@@Base+0x14a28>
   2a744:	add	r1, r3, #1
   2a748:	sub	r0, r4, r1
   2a74c:	cmp	r0, #2
   2a750:	blt	2a97c <main@@Base+0x14c2c>
   2a754:	ldrb	r0, [r1]
   2a758:	cmp	r0, #32
   2a75c:	bls	2a96c <main@@Base+0x14c1c>
   2a760:	mov	r3, r1
   2a764:	cmp	r5, r3
   2a768:	bne	2a994 <main@@Base+0x14c44>
   2a76c:	mov	r0, sl
   2a770:	mov	r1, r5
   2a774:	b	2a934 <main@@Base+0x14be4>
   2a778:	mov	r1, r3
   2a77c:	mov	r0, sl
   2a780:	mov	r2, r4
   2a784:	mov	r3, #4
   2a788:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2a78c:	b	2a988 <main@@Base+0x14c38>
   2a790:	bne	2a7a0 <main@@Base+0x14a50>
   2a794:	ldrb	r0, [r2, #2]!
   2a798:	cmp	r0, #32
   2a79c:	bhi	2a7b0 <main@@Base+0x14a60>
   2a7a0:	mov	r0, sl
   2a7a4:	mov	r2, r4
   2a7a8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a7ac:	mov	r2, r0
   2a7b0:	cmp	r8, r2
   2a7b4:	beq	2a7d0 <main@@Base+0x14a80>
   2a7b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a7bc:	mov	r1, #3
   2a7c0:	mov	r3, #1
   2a7c4:	str	r1, [sp]
   2a7c8:	mov	r1, r2
   2a7cc:	b	2a4c0 <main@@Base+0x14770>
   2a7d0:	mov	r0, sl
   2a7d4:	mov	r1, r8
   2a7d8:	b	2a934 <main@@Base+0x14be4>
   2a7dc:	bne	2a7ec <main@@Base+0x14a9c>
   2a7e0:	ldrb	r0, [r5, #2]!
   2a7e4:	cmp	r0, #32
   2a7e8:	bhi	2a7fc <main@@Base+0x14aac>
   2a7ec:	mov	r0, sl
   2a7f0:	mov	r2, r4
   2a7f4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a7f8:	mov	r5, r0
   2a7fc:	cmp	r6, r5
   2a800:	beq	2a92c <main@@Base+0x14bdc>
   2a804:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a808:	movw	r1, #53988	; 0xd2e4
   2a80c:	mov	r2, #5
   2a810:	mov	r3, #2
   2a814:	movt	r1, #5
   2a818:	str	r2, [sp]
   2a81c:	mov	r2, r4
   2a820:	add	r1, r1, #80	; 0x50
   2a824:	stmib	sp, {r0, r1}
   2a828:	movw	r0, #43960	; 0xabb8
   2a82c:	mov	r1, r5
   2a830:	b	2a9c0 <main@@Base+0x14c70>
   2a834:	bne	2a844 <main@@Base+0x14af4>
   2a838:	ldrb	r0, [r3, #2]!
   2a83c:	cmp	r0, #32
   2a840:	bhi	2a854 <main@@Base+0x14b04>
   2a844:	mov	r0, sl
   2a848:	mov	r2, r4
   2a84c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a850:	mov	r3, r0
   2a854:	cmp	r7, r3
   2a858:	beq	2a8dc <main@@Base+0x14b8c>
   2a85c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a860:	mov	r1, #9
   2a864:	mov	r2, r4
   2a868:	str	r1, [sp]
   2a86c:	mov	r1, r3
   2a870:	mov	r3, #4
   2a874:	str	r0, [sp, #4]
   2a878:	movw	r0, #43960	; 0xabb8
   2a87c:	movt	r0, #2
   2a880:	str	r0, [sp, #8]
   2a884:	mov	r0, sl
   2a888:	bl	37ccc <flatcc_json_parser_union_vector@@Base>
   2a88c:	mov	r2, r0
   2a890:	sub	r0, r4, r2
   2a894:	cmp	r0, #2
   2a898:	bge	29cf8 <main@@Base+0x13fa8>
   2a89c:	b	2a94c <main@@Base+0x14bfc>
   2a8a0:	bne	2a8b0 <main@@Base+0x14b60>
   2a8a4:	ldrb	r0, [r5, #2]!
   2a8a8:	cmp	r0, #32
   2a8ac:	bhi	2a8c0 <main@@Base+0x14b70>
   2a8b0:	mov	r0, sl
   2a8b4:	mov	r2, r4
   2a8b8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a8bc:	mov	r5, r0
   2a8c0:	cmp	r7, r5
   2a8c4:	beq	2a8dc <main@@Base+0x14b8c>
   2a8c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a8cc:	mov	r1, #1
   2a8d0:	mov	r2, r4
   2a8d4:	mov	r3, #0
   2a8d8:	b	2a920 <main@@Base+0x14bd0>
   2a8dc:	mov	r0, sl
   2a8e0:	mov	r1, r7
   2a8e4:	b	2a934 <main@@Base+0x14be4>
   2a8e8:	bne	2a8f8 <main@@Base+0x14ba8>
   2a8ec:	ldrb	r0, [r5, #2]!
   2a8f0:	cmp	r0, #32
   2a8f4:	bhi	2a908 <main@@Base+0x14bb8>
   2a8f8:	mov	r0, sl
   2a8fc:	mov	r2, r4
   2a900:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a904:	mov	r5, r0
   2a908:	cmp	r6, r5
   2a90c:	beq	2a92c <main@@Base+0x14bdc>
   2a910:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a914:	mov	r1, #5
   2a918:	mov	r2, r4
   2a91c:	mov	r3, #2
   2a920:	str	r1, [sp]
   2a924:	mov	r1, r5
   2a928:	b	2a4c4 <main@@Base+0x14774>
   2a92c:	mov	r0, sl
   2a930:	mov	r1, r6
   2a934:	mov	r2, r4
   2a938:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   2a93c:	mov	r2, r0
   2a940:	sub	r0, r4, r2
   2a944:	cmp	r0, #2
   2a948:	bge	29cf8 <main@@Base+0x13fa8>
   2a94c:	mov	r1, r2
   2a950:	mov	r0, sl
   2a954:	mov	r2, r4
   2a958:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a95c:	mov	r3, r0
   2a960:	cmp	r3, r4
   2a964:	bne	29d10 <main@@Base+0x13fc0>
   2a968:	b	2a9e4 <main@@Base+0x14c94>
   2a96c:	bne	2a97c <main@@Base+0x14c2c>
   2a970:	ldrb	r0, [r3, #2]!
   2a974:	cmp	r0, #32
   2a978:	bhi	2a98c <main@@Base+0x14c3c>
   2a97c:	mov	r0, sl
   2a980:	mov	r2, r4
   2a984:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2a988:	mov	r3, r0
   2a98c:	cmp	r5, r3
   2a990:	beq	2a76c <main@@Base+0x14a1c>
   2a994:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a998:	movw	r1, #53988	; 0xd2e4
   2a99c:	mov	r2, #1
   2a9a0:	movt	r1, #5
   2a9a4:	str	r2, [sp]
   2a9a8:	mov	r2, r4
   2a9ac:	add	r1, r1, #64	; 0x40
   2a9b0:	stmib	sp, {r0, r1}
   2a9b4:	movw	r0, #43960	; 0xabb8
   2a9b8:	mov	r1, r3
   2a9bc:	mov	r3, #0
   2a9c0:	movt	r0, #2
   2a9c4:	str	r0, [sp, #12]
   2a9c8:	mov	r0, sl
   2a9cc:	bl	37714 <flatcc_json_parser_union_type@@Base>
   2a9d0:	mov	r2, r0
   2a9d4:	sub	r0, r4, r2
   2a9d8:	cmp	r0, #2
   2a9dc:	bge	29cf8 <main@@Base+0x13fa8>
   2a9e0:	b	2a94c <main@@Base+0x14bfc>
   2a9e4:	mov	r7, r4
   2a9e8:	ldr	r0, [sl, #20]
   2a9ec:	cmp	r0, #0
   2a9f0:	bne	295c8 <main@@Base+0x13878>
   2a9f4:	b	29678 <main@@Base+0x13928>
   2a9f8:	cmp	r0, #125	; 0x7d
   2a9fc:	bne	2aa3c <main@@Base+0x14cec>
   2aa00:	add	r1, r3, #1
   2aa04:	sub	r0, r4, r1
   2aa08:	cmp	r0, #2
   2aa0c:	blt	2aa64 <main@@Base+0x14d14>
   2aa10:	ldrb	r0, [r1]
   2aa14:	cmp	r0, #32
   2aa18:	bls	2aa50 <main@@Base+0x14d00>
   2aa1c:	mov	r7, r1
   2aa20:	ldr	r0, [sl, #20]
   2aa24:	cmp	r0, #0
   2aa28:	bne	295c8 <main@@Base+0x13878>
   2aa2c:	b	29678 <main@@Base+0x13928>
   2aa30:	mov	r0, sl
   2aa34:	mov	r1, r4
   2aa38:	b	2aa44 <main@@Base+0x14cf4>
   2aa3c:	mov	r0, sl
   2aa40:	mov	r1, r3
   2aa44:	mov	r2, r4
   2aa48:	mov	r3, #10
   2aa4c:	b	29664 <main@@Base+0x13914>
   2aa50:	bne	2aa64 <main@@Base+0x14d14>
   2aa54:	ldrb	r0, [r3, #2]!
   2aa58:	mov	r7, r3
   2aa5c:	cmp	r0, #32
   2aa60:	bhi	2966c <main@@Base+0x1391c>
   2aa64:	mov	r0, sl
   2aa68:	mov	r2, r4
   2aa6c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2aa70:	b	29668 <main@@Base+0x13918>
   2aa74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aa78:	add	fp, sp, #28
   2aa7c:	push	{r3}		; (str r3, [sp, #-4]!)
   2aa80:	sub	r7, r2, r1
   2aa84:	cmp	r7, #8
   2aa88:	movcs	r7, #8
   2aa8c:	sub	r5, r7, #1
   2aa90:	cmp	r5, #7
   2aa94:	bhi	2abac <main@@Base+0x14e5c>
   2aa98:	add	lr, pc, #32
   2aa9c:	mov	ip, #0
   2aaa0:	mov	r3, #0
   2aaa4:	mov	r8, #0
   2aaa8:	mov	r9, #0
   2aaac:	mov	sl, #0
   2aab0:	mov	r7, #0
   2aab4:	mov	r4, #0
   2aab8:	mov	r6, #0
   2aabc:	ldr	pc, [lr, r5, lsl #2]
   2aac0:	andeq	sl, r2, r4, lsr #22
   2aac4:	andeq	sl, r2, ip, lsl fp
   2aac8:	andeq	sl, r2, r4, lsl fp
   2aacc:	andeq	sl, r2, ip, lsl #22
   2aad0:	andeq	sl, r2, r0, lsl #22
   2aad4:	strdeq	sl, [r2], -r4
   2aad8:	andeq	sl, r2, r4, ror #21
   2aadc:	andeq	sl, r2, r0, ror #21
   2aae0:	ldrb	r3, [r1, #7]
   2aae4:	ldrb	r7, [r1, #6]
   2aae8:	mov	r8, ip
   2aaec:	orr	r3, r3, r7, lsl #8
   2aaf0:	mov	ip, r3
   2aaf4:	ldrb	r3, [r1, #5]
   2aaf8:	mov	r9, r8
   2aafc:	orr	ip, ip, r3, lsl #16
   2ab00:	ldrb	r3, [r1, #4]
   2ab04:	mov	sl, r9
   2ab08:	orr	ip, ip, r3, lsl #24
   2ab0c:	ldrb	r3, [r1, #3]
   2ab10:	orr	r7, r3, sl
   2ab14:	ldrb	r3, [r1, #2]
   2ab18:	orr	r4, r7, r3, lsl #8
   2ab1c:	ldrb	r3, [r1, #1]
   2ab20:	orr	r6, r4, r3, lsl #16
   2ab24:	ldrb	r7, [r1]
   2ab28:	movw	r3, #29797	; 0x7465
   2ab2c:	movt	r3, #24931	; 0x6163
   2ab30:	eor	r3, ip, r3
   2ab34:	orr	r7, r6, r7, lsl #24
   2ab38:	movw	r6, #24946	; 0x6172
   2ab3c:	movt	r6, #17256	; 0x4368
   2ab40:	eor	r7, r7, r6
   2ab44:	orrs	r3, r3, r7
   2ab48:	bne	2abac <main@@Base+0x14e5c>
   2ab4c:	add	lr, r1, #8
   2ab50:	sub	r7, r2, lr
   2ab54:	cmp	r7, #8
   2ab58:	mov	r3, r7
   2ab5c:	movcs	r3, #8
   2ab60:	sub	r3, r3, #1
   2ab64:	cmp	r3, #7
   2ab68:	bhi	2abac <main@@Base+0x14e5c>
   2ab6c:	cmp	r7, #2
   2ab70:	blt	2abac <main@@Base+0x14e5c>
   2ab74:	ldrb	r3, [lr]
   2ab78:	cmp	r3, #114	; 0x72
   2ab7c:	bne	2abac <main@@Base+0x14e5c>
   2ab80:	ldrb	r3, [r1, #9]
   2ab84:	mov	ip, lr
   2ab88:	cmp	r3, #46	; 0x2e
   2ab8c:	addeq	ip, r1, #10
   2ab90:	cmp	ip, lr
   2ab94:	beq	2abac <main@@Base+0x14e5c>
   2ab98:	ldr	r3, [sp]
   2ab9c:	mov	r1, ip
   2aba0:	sub	sp, fp, #28
   2aba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aba8:	b	25490 <main@@Base+0xf740>
   2abac:	mov	r0, r1
   2abb0:	sub	sp, fp, #28
   2abb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2abb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2abbc:	add	fp, sp, #28
   2abc0:	sub	sp, sp, #36	; 0x24
   2abc4:	ldr	r5, [fp, #8]
   2abc8:	mov	r8, r0
   2abcc:	mov	r0, #0
   2abd0:	mov	r9, r2
   2abd4:	mov	r4, r1
   2abd8:	cmp	r3, #11
   2abdc:	str	r0, [r5]
   2abe0:	bhi	2ac34 <main@@Base+0x14ee4>
   2abe4:	add	r0, pc, #0
   2abe8:	ldr	pc, [r0, r3, lsl #2]
   2abec:	andeq	sl, r2, ip, ror ip
   2abf0:	andeq	sl, r2, r4, asr ip
   2abf4:	andeq	sl, r2, r0, asr #25
   2abf8:	andeq	sl, r2, r4, asr ip
   2abfc:	andeq	sl, r2, r4, asr ip
   2ac00:	andeq	sl, r2, r4, asr ip
   2ac04:	andeq	sl, r2, r4, asr ip
   2ac08:	andeq	sl, r2, r4, asr ip
   2ac0c:	andeq	sl, r2, r0, lsr #26
   2ac10:	andeq	sl, r2, ip, lsl ip
   2ac14:	andeq	sl, r2, ip, lsl ip
   2ac18:	andeq	sl, r2, ip, lsr ip
   2ac1c:	mov	r0, r8
   2ac20:	mov	r1, r4
   2ac24:	mov	r2, r9
   2ac28:	mov	r3, r5
   2ac2c:	bl	2baf0 <main@@Base+0x15da0>
   2ac30:	b	2ae24 <main@@Base+0x150d4>
   2ac34:	cmp	r3, #255	; 0xff
   2ac38:	bne	2ac54 <main@@Base+0x14f04>
   2ac3c:	mov	r0, r8
   2ac40:	mov	r1, r4
   2ac44:	mov	r2, r9
   2ac48:	mov	r3, r5
   2ac4c:	bl	37198 <flatcc_json_parser_build_string@@Base>
   2ac50:	b	2ae24 <main@@Base+0x150d4>
   2ac54:	ldrb	r0, [r8, #8]
   2ac58:	tst	r0, #1
   2ac5c:	bne	2ad88 <main@@Base+0x15038>
   2ac60:	mov	r0, r8
   2ac64:	mov	r1, r4
   2ac68:	mov	r2, r9
   2ac6c:	mov	r3, #15
   2ac70:	sub	sp, fp, #28
   2ac74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ac78:	b	3454c <flatcc_json_parser_set_error@@Base>
   2ac7c:	sub	r0, r9, r4
   2ac80:	cmp	r0, #4
   2ac84:	blt	2aca4 <main@@Base+0x14f54>
   2ac88:	movw	r1, #46670	; 0xb64e
   2ac8c:	mov	r0, r4
   2ac90:	mov	r2, #4
   2ac94:	movt	r1, #4
   2ac98:	bl	14ebc <bcmp@plt>
   2ac9c:	cmp	r0, #0
   2aca0:	beq	2ae70 <main@@Base+0x15120>
   2aca4:	mov	r0, r8
   2aca8:	mov	r1, r4
   2acac:	mov	r2, r9
   2acb0:	mov	r3, #26
   2acb4:	sub	sp, fp, #28
   2acb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2acbc:	b	3454c <flatcc_json_parser_set_error@@Base>
   2acc0:	mov	r0, #0
   2acc4:	mov	r1, #1
   2acc8:	str	r0, [r5]
   2accc:	ldr	r0, [r8]
   2acd0:	bl	2fa58 <flatcc_builder_start_table@@Base>
   2acd4:	cmp	r0, #0
   2acd8:	bne	2ae10 <main@@Base+0x150c0>
   2acdc:	cmp	r4, r9
   2ace0:	beq	2adec <main@@Base+0x1509c>
   2ace4:	ldrb	r0, [r4]
   2ace8:	cmp	r0, #123	; 0x7b
   2acec:	bne	2adec <main@@Base+0x1509c>
   2acf0:	add	r1, r4, #1
   2acf4:	sub	r0, r9, r1
   2acf8:	cmp	r0, #2
   2acfc:	blt	2b3b8 <main@@Base+0x15668>
   2ad00:	ldrb	r0, [r1]
   2ad04:	cmp	r0, #32
   2ad08:	bls	2b3a8 <main@@Base+0x15658>
   2ad0c:	mov	r4, r1
   2ad10:	cmp	r4, r9
   2ad14:	mov	r2, r9
   2ad18:	bne	2b3d4 <main@@Base+0x15684>
   2ad1c:	b	2b414 <main@@Base+0x156c4>
   2ad20:	mov	r0, #0
   2ad24:	mov	r1, #2
   2ad28:	mov	r2, #2
   2ad2c:	str	r0, [r5]
   2ad30:	ldr	r0, [r8]
   2ad34:	bl	2e77c <flatcc_builder_start_struct@@Base>
   2ad38:	cmp	r0, #0
   2ad3c:	beq	2ade0 <main@@Base+0x15090>
   2ad40:	cmp	r4, r9
   2ad44:	beq	2ada0 <main@@Base+0x15050>
   2ad48:	ldrb	r1, [r4]
   2ad4c:	cmp	r1, #123	; 0x7b
   2ad50:	bne	2ada0 <main@@Base+0x15050>
   2ad54:	add	r1, r4, #1
   2ad58:	str	r0, [sp, #8]
   2ad5c:	sub	r0, r9, r1
   2ad60:	cmp	r0, #2
   2ad64:	blt	2ae90 <main@@Base+0x15140>
   2ad68:	ldrb	r0, [r1]
   2ad6c:	cmp	r0, #32
   2ad70:	bls	2ae80 <main@@Base+0x15130>
   2ad74:	mov	r4, r1
   2ad78:	cmp	r4, r9
   2ad7c:	mov	r3, r9
   2ad80:	bne	2aeac <main@@Base+0x1515c>
   2ad84:	b	2aeec <main@@Base+0x1519c>
   2ad88:	mov	r0, r8
   2ad8c:	mov	r1, r4
   2ad90:	mov	r2, r9
   2ad94:	sub	sp, fp, #28
   2ad98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ad9c:	b	34f78 <flatcc_json_parser_generic_json@@Base>
   2ada0:	mov	r0, r8
   2ada4:	mov	r1, r4
   2ada8:	mov	r2, r9
   2adac:	mov	r3, #21
   2adb0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2adb4:	mov	r4, r0
   2adb8:	cmp	r4, r9
   2adbc:	mov	r1, r9
   2adc0:	beq	2ade4 <main@@Base+0x15094>
   2adc4:	ldr	r0, [r8]
   2adc8:	bl	2e870 <flatcc_builder_end_struct@@Base>
   2adcc:	cmp	r0, #0
   2add0:	mov	r1, r4
   2add4:	str	r0, [r5]
   2add8:	bne	2ae28 <main@@Base+0x150d8>
   2addc:	b	2ade4 <main@@Base+0x15094>
   2ade0:	mov	r1, r4
   2ade4:	mov	r0, r8
   2ade8:	b	2ae18 <main@@Base+0x150c8>
   2adec:	mov	r0, r8
   2adf0:	mov	r1, r4
   2adf4:	mov	r2, r9
   2adf8:	mov	r3, #21
   2adfc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2ae00:	mov	r4, r0
   2ae04:	ldr	r0, [r8, #20]
   2ae08:	cmp	r0, #0
   2ae0c:	beq	2b9f0 <main@@Base+0x15ca0>
   2ae10:	mov	r0, r8
   2ae14:	mov	r1, r4
   2ae18:	mov	r2, r9
   2ae1c:	mov	r3, #33	; 0x21
   2ae20:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2ae24:	mov	r4, r0
   2ae28:	ldr	r0, [r8, #20]
   2ae2c:	cmp	r0, #0
   2ae30:	bne	2ae40 <main@@Base+0x150f0>
   2ae34:	ldr	r0, [r5]
   2ae38:	cmp	r0, #0
   2ae3c:	beq	2ae4c <main@@Base+0x150fc>
   2ae40:	mov	r0, r4
   2ae44:	sub	sp, fp, #28
   2ae48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ae4c:	mov	r0, r8
   2ae50:	mov	r1, r4
   2ae54:	mov	r2, r9
   2ae58:	mov	r3, #33	; 0x21
   2ae5c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2ae60:	mov	r4, r0
   2ae64:	mov	r0, r4
   2ae68:	sub	sp, fp, #28
   2ae6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ae70:	add	r4, r4, #4
   2ae74:	mov	r0, r4
   2ae78:	sub	sp, fp, #28
   2ae7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ae80:	bne	2ae90 <main@@Base+0x15140>
   2ae84:	ldrb	r0, [r4, #2]!
   2ae88:	cmp	r0, #32
   2ae8c:	bhi	2aea0 <main@@Base+0x15150>
   2ae90:	mov	r0, r8
   2ae94:	mov	r2, r9
   2ae98:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2ae9c:	mov	r4, r0
   2aea0:	cmp	r4, r9
   2aea4:	mov	r3, r9
   2aea8:	beq	2aeec <main@@Base+0x1519c>
   2aeac:	ldrb	r0, [r4]
   2aeb0:	cmp	r0, #125	; 0x7d
   2aeb4:	bne	2aee8 <main@@Base+0x15198>
   2aeb8:	add	r1, r4, #1
   2aebc:	sub	r0, r9, r1
   2aec0:	cmp	r0, #2
   2aec4:	blt	2ba3c <main@@Base+0x15cec>
   2aec8:	ldrb	r0, [r1]
   2aecc:	cmp	r0, #32
   2aed0:	bhi	2b388 <main@@Base+0x15638>
   2aed4:	bne	2ba3c <main@@Base+0x15cec>
   2aed8:	ldrb	r0, [r4, #2]!
   2aedc:	cmp	r0, #32
   2aee0:	bhi	2adb8 <main@@Base+0x15068>
   2aee4:	b	2ba3c <main@@Base+0x15cec>
   2aee8:	mov	r3, r4
   2aeec:	movw	r0, #53756	; 0xd1fc
   2aef0:	movt	r0, #5
   2aef4:	add	r0, r0, #108	; 0x6c
   2aef8:	str	r0, [sp, #4]
   2aefc:	str	r5, [sp, #12]
   2af00:	cmp	r3, r9
   2af04:	mov	sl, r9
   2af08:	beq	2af38 <main@@Base+0x151e8>
   2af0c:	ldrb	r0, [r3]
   2af10:	cmp	r0, #34	; 0x22
   2af14:	bne	2af20 <main@@Base+0x151d0>
   2af18:	add	sl, r3, #1
   2af1c:	b	2af38 <main@@Base+0x151e8>
   2af20:	mov	r1, r3
   2af24:	mov	r0, r8
   2af28:	mov	r2, r9
   2af2c:	mov	r3, #5
   2af30:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2af34:	mov	sl, r0
   2af38:	sub	r0, r9, sl
   2af3c:	mov	r1, #8
   2af40:	cmp	r0, #8
   2af44:	movcs	r0, r1
   2af48:	sub	r3, r0, #1
   2af4c:	cmp	r3, #7
   2af50:	bhi	2b094 <main@@Base+0x15344>
   2af54:	add	r7, pc, #32
   2af58:	mov	r0, #0
   2af5c:	mov	ip, #0
   2af60:	mov	lr, #0
   2af64:	mov	r4, #0
   2af68:	mov	r2, #0
   2af6c:	mov	r5, #0
   2af70:	mov	r1, #0
   2af74:	mov	r6, #0
   2af78:	ldr	pc, [r7, r3, lsl #2]
   2af7c:	andeq	sl, r2, r0, ror #31
   2af80:	ldrdeq	sl, [r2], -r8
   2af84:	ldrdeq	sl, [r2], -r0
   2af88:	andeq	sl, r2, r8, asr #31
   2af8c:			; <UNDEFINED> instruction: 0x0002afbc
   2af90:			; <UNDEFINED> instruction: 0x0002afb0
   2af94:	andeq	sl, r2, r0, lsr #31
   2af98:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   2af9c:	ldrb	ip, [sl, #7]
   2afa0:	ldrb	r1, [sl, #6]
   2afa4:	mov	lr, r0
   2afa8:	orr	r1, ip, r1, lsl #8
   2afac:	mov	r0, r1
   2afb0:	ldrb	r1, [sl, #5]
   2afb4:	mov	r4, lr
   2afb8:	orr	r0, r0, r1, lsl #16
   2afbc:	ldrb	r1, [sl, #4]
   2afc0:	mov	r2, r4
   2afc4:	orr	r0, r0, r1, lsl #24
   2afc8:	ldrb	r1, [sl, #3]
   2afcc:	orr	r5, r1, r2
   2afd0:	ldrb	r1, [sl, #2]
   2afd4:	orr	r1, r5, r1, lsl #8
   2afd8:	ldrb	r2, [sl, #1]
   2afdc:	orr	r6, r1, r2, lsl #16
   2afe0:	movw	r1, #25966	; 0x656e
   2afe4:	movw	r2, #26994	; 0x6972
   2afe8:	movt	r1, #24428	; 0x5f6c
   2afec:	movt	r2, #26721	; 0x6861
   2aff0:	eor	r0, r0, r1
   2aff4:	ldrb	r1, [sl]
   2aff8:	orr	r1, r6, r1, lsl #24
   2affc:	eor	r1, r1, r2
   2b000:	orrs	r0, r0, r1
   2b004:	bne	2b094 <main@@Base+0x15344>
   2b008:	add	r4, sl, #8
   2b00c:	mov	r2, #8
   2b010:	sub	r0, r9, r4
   2b014:	cmp	r0, #8
   2b018:	movcc	r2, r0
   2b01c:	sub	r1, r2, #3
   2b020:	cmp	r1, #6
   2b024:	bcs	2b0a0 <main@@Base+0x15350>
   2b028:	ldrb	r1, [sl, #10]
   2b02c:	lsl	r1, r1, #8
   2b030:	ldrb	r2, [sl, #9]
   2b034:	orr	r1, r1, r2, lsl #16
   2b038:	ldrb	r2, [r4]
   2b03c:	bic	r1, r1, #255	; 0xff
   2b040:	orr	r1, r1, r2, lsl #24
   2b044:	movw	r2, #26624	; 0x6800
   2b048:	movt	r2, #26484	; 0x6774
   2b04c:	teq	r1, r2
   2b050:	bne	2b114 <main@@Base+0x153c4>
   2b054:	cmp	r0, #4
   2b058:	blt	2b114 <main@@Base+0x153c4>
   2b05c:	ldrb	r0, [sl, #11]
   2b060:	cmp	r0, #34	; 0x22
   2b064:	bne	2b114 <main@@Base+0x153c4>
   2b068:	add	r1, sl, #12
   2b06c:	sub	r0, r9, r1
   2b070:	cmp	r0, #2
   2b074:	blt	2b0c8 <main@@Base+0x15378>
   2b078:	ldrb	r0, [r1]
   2b07c:	cmp	r0, #32
   2b080:	bls	2b0b8 <main@@Base+0x15368>
   2b084:	mov	sl, r1
   2b088:	cmp	sl, r9
   2b08c:	bne	2b0e0 <main@@Base+0x15390>
   2b090:	b	2b1f4 <main@@Base+0x154a4>
   2b094:	mov	r0, r8
   2b098:	mov	r1, sl
   2b09c:	b	2b11c <main@@Base+0x153cc>
   2b0a0:	mov	r1, #0
   2b0a4:	cmp	r2, #1
   2b0a8:	beq	2b038 <main@@Base+0x152e8>
   2b0ac:	cmp	r2, #2
   2b0b0:	beq	2b030 <main@@Base+0x152e0>
   2b0b4:	b	2b114 <main@@Base+0x153c4>
   2b0b8:	bne	2b0c8 <main@@Base+0x15378>
   2b0bc:	ldrb	r0, [sl, #13]!
   2b0c0:	cmp	r0, #32
   2b0c4:	bhi	2b0d8 <main@@Base+0x15388>
   2b0c8:	mov	r0, r8
   2b0cc:	mov	r2, r9
   2b0d0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2b0d4:	mov	sl, r0
   2b0d8:	cmp	sl, r9
   2b0dc:	beq	2b1f4 <main@@Base+0x154a4>
   2b0e0:	ldrb	r0, [sl]
   2b0e4:	cmp	r0, #58	; 0x3a
   2b0e8:	bne	2b1f4 <main@@Base+0x154a4>
   2b0ec:	add	r1, sl, #1
   2b0f0:	sub	r0, r9, r1
   2b0f4:	cmp	r0, #2
   2b0f8:	blt	2b21c <main@@Base+0x154cc>
   2b0fc:	ldrb	r0, [r1]
   2b100:	cmp	r0, #32
   2b104:	bls	2b20c <main@@Base+0x154bc>
   2b108:	mov	sl, r1
   2b10c:	cmp	r4, sl
   2b110:	bne	2b234 <main@@Base+0x154e4>
   2b114:	mov	r0, r8
   2b118:	mov	r1, r4
   2b11c:	mov	r2, r9
   2b120:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   2b124:	mov	r2, r0
   2b128:	ldr	r5, [sp, #12]
   2b12c:	sub	r0, r9, r2
   2b130:	cmp	r0, #2
   2b134:	blt	2b1a8 <main@@Base+0x15458>
   2b138:	ldrb	r0, [r2]
   2b13c:	cmp	r0, #32
   2b140:	bls	2b194 <main@@Base+0x15444>
   2b144:	mov	r3, r2
   2b148:	cmp	r3, r9
   2b14c:	beq	2b35c <main@@Base+0x1560c>
   2b150:	ldrb	r0, [r3]
   2b154:	cmp	r0, #44	; 0x2c
   2b158:	bne	2b364 <main@@Base+0x15614>
   2b15c:	add	r1, r3, #1
   2b160:	sub	r0, r9, r1
   2b164:	cmp	r0, #2
   2b168:	blt	2b1d8 <main@@Base+0x15488>
   2b16c:	ldrb	r0, [r1]
   2b170:	cmp	r0, #32
   2b174:	bls	2b1c8 <main@@Base+0x15478>
   2b178:	mov	r3, r1
   2b17c:	cmp	r3, r9
   2b180:	beq	2b39c <main@@Base+0x1564c>
   2b184:	ldrb	r0, [r3]
   2b188:	cmp	r0, #125	; 0x7d
   2b18c:	bne	2af00 <main@@Base+0x151b0>
   2b190:	b	2b36c <main@@Base+0x1561c>
   2b194:	bne	2b1a8 <main@@Base+0x15458>
   2b198:	mov	r3, r2
   2b19c:	ldrb	r0, [r3, #1]!
   2b1a0:	cmp	r0, #32
   2b1a4:	bhi	2b1bc <main@@Base+0x1546c>
   2b1a8:	mov	r1, r2
   2b1ac:	mov	r0, r8
   2b1b0:	mov	r2, r9
   2b1b4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2b1b8:	mov	r3, r0
   2b1bc:	cmp	r3, r9
   2b1c0:	bne	2b150 <main@@Base+0x15400>
   2b1c4:	b	2b35c <main@@Base+0x1560c>
   2b1c8:	bne	2b1d8 <main@@Base+0x15488>
   2b1cc:	ldrb	r0, [r3, #2]!
   2b1d0:	cmp	r0, #32
   2b1d4:	bhi	2b1e8 <main@@Base+0x15498>
   2b1d8:	mov	r0, r8
   2b1dc:	mov	r2, r9
   2b1e0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2b1e4:	mov	r3, r0
   2b1e8:	cmp	r3, r9
   2b1ec:	bne	2b184 <main@@Base+0x15434>
   2b1f0:	b	2b39c <main@@Base+0x1564c>
   2b1f4:	mov	r0, r8
   2b1f8:	mov	r1, sl
   2b1fc:	mov	r2, r9
   2b200:	mov	r3, #4
   2b204:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2b208:	b	2b228 <main@@Base+0x154d8>
   2b20c:	bne	2b21c <main@@Base+0x154cc>
   2b210:	ldrb	r0, [sl, #2]!
   2b214:	cmp	r0, #32
   2b218:	bhi	2b22c <main@@Base+0x154dc>
   2b21c:	mov	r0, r8
   2b220:	mov	r2, r9
   2b224:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2b228:	mov	sl, r0
   2b22c:	cmp	r4, sl
   2b230:	beq	2b114 <main@@Base+0x153c4>
   2b234:	mov	r4, #0
   2b238:	cmp	sl, r9
   2b23c:	str	r4, [sp, #28]
   2b240:	str	r4, [sp, #24]
   2b244:	strh	r4, [sp, #16]
   2b248:	str	r4, [sp, #20]
   2b24c:	beq	2b298 <main@@Base+0x15548>
   2b250:	add	r0, sp, #24
   2b254:	mov	r1, sl
   2b258:	mov	r2, r9
   2b25c:	add	r3, sp, #20
   2b260:	str	r0, [sp]
   2b264:	mov	r0, r8
   2b268:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   2b26c:	cmp	r0, sl
   2b270:	beq	2b2ac <main@@Base+0x1555c>
   2b274:	mov	r2, r0
   2b278:	ldr	r0, [sp, #20]
   2b27c:	cmp	r0, #0
   2b280:	beq	2b2c0 <main@@Base+0x15570>
   2b284:	mov	r1, r2
   2b288:	mov	r0, r8
   2b28c:	mov	r2, r9
   2b290:	mov	r3, #8
   2b294:	b	2b2e4 <main@@Base+0x15594>
   2b298:	mov	r2, r9
   2b29c:	ldr	r0, [sp, #8]
   2b2a0:	cmp	sl, r2
   2b2a4:	bne	2b32c <main@@Base+0x155dc>
   2b2a8:	b	2b2f8 <main@@Base+0x155a8>
   2b2ac:	mov	r2, sl
   2b2b0:	ldr	r0, [sp, #8]
   2b2b4:	cmp	sl, r2
   2b2b8:	bne	2b32c <main@@Base+0x155dc>
   2b2bc:	b	2b2f8 <main@@Base+0x155a8>
   2b2c0:	ldr	r0, [sp, #24]
   2b2c4:	ldr	r1, [sp, #28]
   2b2c8:	subs	r3, r0, #65536	; 0x10000
   2b2cc:	sbcs	r1, r1, #0
   2b2d0:	bcc	2b344 <main@@Base+0x155f4>
   2b2d4:	mov	r1, r2
   2b2d8:	mov	r0, r8
   2b2dc:	mov	r2, r9
   2b2e0:	mov	r3, #7
   2b2e4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2b2e8:	mov	r2, r0
   2b2ec:	ldr	r0, [sp, #8]
   2b2f0:	cmp	sl, r2
   2b2f4:	bne	2b32c <main@@Base+0x155dc>
   2b2f8:	add	r0, sp, #16
   2b2fc:	mov	r1, sl
   2b300:	mov	r2, r9
   2b304:	str	r0, [sp]
   2b308:	mov	r0, r8
   2b30c:	ldr	r3, [sp, #4]
   2b310:	bl	2c170 <main@@Base+0x16420>
   2b314:	mov	r2, r0
   2b318:	cmp	r0, sl
   2b31c:	cmpne	r2, r9
   2b320:	beq	2ba94 <main@@Base+0x15d44>
   2b324:	ldrh	r4, [sp, #16]
   2b328:	ldr	r0, [sp, #8]
   2b32c:	strh	r4, [r0]
   2b330:	ldr	r5, [sp, #12]
   2b334:	sub	r0, r9, r2
   2b338:	cmp	r0, #2
   2b33c:	bge	2b138 <main@@Base+0x153e8>
   2b340:	b	2b1a8 <main@@Base+0x15458>
   2b344:	mov	r4, r0
   2b348:	strh	r0, [sp, #16]
   2b34c:	ldr	r0, [sp, #8]
   2b350:	cmp	sl, r2
   2b354:	bne	2b32c <main@@Base+0x155dc>
   2b358:	b	2b2f8 <main@@Base+0x155a8>
   2b35c:	mov	r1, r9
   2b360:	b	2ade4 <main@@Base+0x15094>
   2b364:	cmp	r0, #125	; 0x7d
   2b368:	bne	2ba14 <main@@Base+0x15cc4>
   2b36c:	add	r1, r3, #1
   2b370:	sub	r0, r9, r1
   2b374:	cmp	r0, #2
   2b378:	blt	2ba3c <main@@Base+0x15cec>
   2b37c:	ldrb	r0, [r1]
   2b380:	cmp	r0, #32
   2b384:	bls	2ba28 <main@@Base+0x15cd8>
   2b388:	mov	r4, r1
   2b38c:	cmp	r4, r9
   2b390:	mov	r1, r9
   2b394:	bne	2adc4 <main@@Base+0x15074>
   2b398:	b	2ade4 <main@@Base+0x15094>
   2b39c:	mov	r0, r8
   2b3a0:	mov	r1, r9
   2b3a4:	b	2ba1c <main@@Base+0x15ccc>
   2b3a8:	bne	2b3b8 <main@@Base+0x15668>
   2b3ac:	ldrb	r0, [r4, #2]!
   2b3b0:	cmp	r0, #32
   2b3b4:	bhi	2b3c8 <main@@Base+0x15678>
   2b3b8:	mov	r0, r8
   2b3bc:	mov	r2, r9
   2b3c0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2b3c4:	mov	r4, r0
   2b3c8:	cmp	r4, r9
   2b3cc:	mov	r2, r9
   2b3d0:	beq	2b414 <main@@Base+0x156c4>
   2b3d4:	ldrb	r0, [r4]
   2b3d8:	cmp	r0, #125	; 0x7d
   2b3dc:	bne	2b410 <main@@Base+0x156c0>
   2b3e0:	add	r1, r4, #1
   2b3e4:	sub	r0, r9, r1
   2b3e8:	cmp	r0, #2
   2b3ec:	blt	2ba84 <main@@Base+0x15d34>
   2b3f0:	ldrb	r0, [r1]
   2b3f4:	cmp	r0, #32
   2b3f8:	bhi	2b9e0 <main@@Base+0x15c90>
   2b3fc:	bne	2ba84 <main@@Base+0x15d34>
   2b400:	ldrb	r0, [r4, #2]!
   2b404:	cmp	r0, #32
   2b408:	bhi	2ae04 <main@@Base+0x150b4>
   2b40c:	b	2ba84 <main@@Base+0x15d34>
   2b410:	mov	r2, r4
   2b414:	movw	r0, #53756	; 0xd1fc
   2b418:	movt	r0, #5
   2b41c:	add	r0, r0, #96	; 0x60
   2b420:	str	r0, [sp, #4]
   2b424:	str	r5, [sp, #12]
   2b428:	cmp	r2, r9
   2b42c:	mov	sl, r9
   2b430:	beq	2b460 <main@@Base+0x15710>
   2b434:	ldrb	r0, [r2]
   2b438:	cmp	r0, #34	; 0x22
   2b43c:	bne	2b448 <main@@Base+0x156f8>
   2b440:	add	sl, r2, #1
   2b444:	b	2b460 <main@@Base+0x15710>
   2b448:	mov	r1, r2
   2b44c:	mov	r0, r8
   2b450:	mov	r2, r9
   2b454:	mov	r3, #5
   2b458:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2b45c:	mov	sl, r0
   2b460:	sub	r0, r9, sl
   2b464:	mov	r1, #8
   2b468:	cmp	r0, #8
   2b46c:	movcs	r0, r1
   2b470:	sub	r3, r0, #1
   2b474:	cmp	r3, #7
   2b478:	bhi	2b69c <main@@Base+0x1594c>
   2b47c:	add	r5, pc, #32
   2b480:	mov	r0, #0
   2b484:	mov	ip, #0
   2b488:	mov	lr, #0
   2b48c:	mov	r4, #0
   2b490:	mov	r2, #0
   2b494:	mov	r6, #0
   2b498:	mov	r7, #0
   2b49c:	mov	r1, #0
   2b4a0:	ldr	pc, [r5, r3, lsl #2]
   2b4a4:	andeq	fp, r2, r8, lsl #10
   2b4a8:	andeq	fp, r2, r0, lsl #10
   2b4ac:	strdeq	fp, [r2], -r8
   2b4b0:	strdeq	fp, [r2], -r0
   2b4b4:	andeq	fp, r2, r4, ror #9
   2b4b8:	ldrdeq	fp, [r2], -r8
   2b4bc:	andeq	fp, r2, r8, asr #9
   2b4c0:	andeq	fp, r2, r4, asr #9
   2b4c4:	ldrb	ip, [sl, #7]
   2b4c8:	ldrb	r1, [sl, #6]
   2b4cc:	mov	lr, r0
   2b4d0:	orr	r1, ip, r1, lsl #8
   2b4d4:	mov	r0, r1
   2b4d8:	ldrb	r1, [sl, #5]
   2b4dc:	mov	r4, lr
   2b4e0:	orr	r0, r0, r1, lsl #16
   2b4e4:	ldrb	r1, [sl, #4]
   2b4e8:	mov	r2, r4
   2b4ec:	orr	r0, r0, r1, lsl #24
   2b4f0:	ldrb	r1, [sl, #3]
   2b4f4:	orr	r6, r1, r2
   2b4f8:	ldrb	r1, [sl, #2]
   2b4fc:	orr	r7, r6, r1, lsl #8
   2b500:	ldrb	r1, [sl, #1]
   2b504:	orr	r1, r7, r1, lsl #16
   2b508:	movw	r2, #24948	; 0x6174
   2b50c:	movt	r2, #25695	; 0x645f
   2b510:	eor	r0, r0, r2
   2b514:	ldrb	r2, [sl]
   2b518:	orr	r1, r1, r2, lsl #24
   2b51c:	movw	r2, #28530	; 0x6f72
   2b520:	movt	r2, #29559	; 0x7377
   2b524:	eor	r1, r1, r2
   2b528:	orrs	r0, r0, r1
   2b52c:	bne	2b69c <main@@Base+0x1594c>
   2b530:	add	r1, sl, #8
   2b534:	mov	r2, #8
   2b538:	sub	r0, r9, r1
   2b53c:	cmp	r0, #8
   2b540:	movcs	r0, r2
   2b544:	sub	r4, r0, #1
   2b548:	cmp	r4, #7
   2b54c:	bhi	2b6a8 <main@@Base+0x15958>
   2b550:	add	ip, pc, #36	; 0x24
   2b554:	mov	r2, #0
   2b558:	mov	r0, #0
   2b55c:	mov	lr, #0
   2b560:	mov	r3, #0
   2b564:	mov	r6, #0
   2b568:	mov	r7, #0
   2b56c:	mov	r5, #0
   2b570:	str	r2, [sp, #8]
   2b574:	mov	r2, #0
   2b578:	ldr	pc, [ip, r4, lsl #2]
   2b57c:	andeq	fp, r2, r8, ror #11
   2b580:	andeq	fp, r2, r0, ror #11
   2b584:	ldrdeq	fp, [r2], -r8
   2b588:	ldrdeq	fp, [r2], -r0
   2b58c:	andeq	fp, r2, r4, asr #11
   2b590:			; <UNDEFINED> instruction: 0x0002b5b8
   2b594:	andeq	fp, r2, r4, lsr #11
   2b598:	muleq	r2, ip, r5
   2b59c:	ldrb	r2, [sl, #15]
   2b5a0:	str	r2, [sp, #8]
   2b5a4:	ldrb	r2, [sl, #14]
   2b5a8:	ldr	r3, [sp, #8]
   2b5ac:	mov	lr, r0
   2b5b0:	orr	r2, r3, r2, lsl #8
   2b5b4:	mov	r0, r2
   2b5b8:	ldrb	r2, [sl, #13]
   2b5bc:	orr	r0, r0, r2, lsl #16
   2b5c0:	mov	r2, lr
   2b5c4:	ldrb	r3, [sl, #12]
   2b5c8:	orr	r0, r0, r3, lsl #24
   2b5cc:	mov	r3, r2
   2b5d0:	ldrb	r2, [sl, #11]
   2b5d4:	orr	r6, r2, r3
   2b5d8:	ldrb	r2, [sl, #10]
   2b5dc:	orr	r7, r6, r2, lsl #8
   2b5e0:	ldrb	r2, [sl, #9]
   2b5e4:	orr	r5, r7, r2, lsl #16
   2b5e8:	movw	r2, #24941	; 0x616d
   2b5ec:	movw	r3, #25451	; 0x636b
   2b5f0:	movt	r2, #24420	; 0x5f64
   2b5f4:	movt	r3, #29793	; 0x7461
   2b5f8:	eor	r0, r0, r2
   2b5fc:	ldrb	r2, [r1]
   2b600:	orr	r2, r5, r2, lsl #24
   2b604:	eor	r2, r2, r3
   2b608:	orrs	r0, r0, r2
   2b60c:	bne	2b6a8 <main@@Base+0x15958>
   2b610:	add	r4, sl, #16
   2b614:	mov	r2, #8
   2b618:	sub	r0, r9, r4
   2b61c:	cmp	r0, #8
   2b620:	movcc	r2, r0
   2b624:	sub	r1, r2, #3
   2b628:	cmp	r1, #6
   2b62c:	bcs	2b6b0 <main@@Base+0x15960>
   2b630:	ldrb	r1, [sl, #18]
   2b634:	lsl	r1, r1, #8
   2b638:	ldrb	r2, [sl, #17]
   2b63c:	orr	r1, r1, r2, lsl #16
   2b640:	ldrb	r2, [r4]
   2b644:	bic	r1, r1, #255	; 0xff
   2b648:	orr	r1, r1, r2, lsl #24
   2b64c:	movw	r2, #25856	; 0x6500
   2b650:	movt	r2, #24935	; 0x6167
   2b654:	teq	r1, r2
   2b658:	bne	2b724 <main@@Base+0x159d4>
   2b65c:	cmp	r0, #4
   2b660:	blt	2b724 <main@@Base+0x159d4>
   2b664:	ldrb	r0, [sl, #19]
   2b668:	cmp	r0, #34	; 0x22
   2b66c:	bne	2b724 <main@@Base+0x159d4>
   2b670:	add	r1, sl, #20
   2b674:	sub	r0, r9, r1
   2b678:	cmp	r0, #2
   2b67c:	blt	2b6d8 <main@@Base+0x15988>
   2b680:	ldrb	r0, [r1]
   2b684:	cmp	r0, #32
   2b688:	bls	2b6c8 <main@@Base+0x15978>
   2b68c:	mov	sl, r1
   2b690:	cmp	sl, r9
   2b694:	bne	2b6f0 <main@@Base+0x159a0>
   2b698:	b	2b804 <main@@Base+0x15ab4>
   2b69c:	mov	r0, r8
   2b6a0:	mov	r1, sl
   2b6a4:	b	2b72c <main@@Base+0x159dc>
   2b6a8:	mov	r0, r8
   2b6ac:	b	2b72c <main@@Base+0x159dc>
   2b6b0:	mov	r1, #0
   2b6b4:	cmp	r2, #1
   2b6b8:	beq	2b640 <main@@Base+0x158f0>
   2b6bc:	cmp	r2, #2
   2b6c0:	beq	2b638 <main@@Base+0x158e8>
   2b6c4:	b	2b724 <main@@Base+0x159d4>
   2b6c8:	bne	2b6d8 <main@@Base+0x15988>
   2b6cc:	ldrb	r0, [sl, #21]!
   2b6d0:	cmp	r0, #32
   2b6d4:	bhi	2b6e8 <main@@Base+0x15998>
   2b6d8:	mov	r0, r8
   2b6dc:	mov	r2, r9
   2b6e0:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2b6e4:	mov	sl, r0
   2b6e8:	cmp	sl, r9
   2b6ec:	beq	2b804 <main@@Base+0x15ab4>
   2b6f0:	ldrb	r0, [sl]
   2b6f4:	cmp	r0, #58	; 0x3a
   2b6f8:	bne	2b804 <main@@Base+0x15ab4>
   2b6fc:	add	r1, sl, #1
   2b700:	sub	r0, r9, r1
   2b704:	cmp	r0, #2
   2b708:	blt	2b82c <main@@Base+0x15adc>
   2b70c:	ldrb	r0, [r1]
   2b710:	cmp	r0, #32
   2b714:	bls	2b81c <main@@Base+0x15acc>
   2b718:	mov	sl, r1
   2b71c:	cmp	r4, sl
   2b720:	bne	2b844 <main@@Base+0x15af4>
   2b724:	mov	r0, r8
   2b728:	mov	r1, r4
   2b72c:	mov	r2, r9
   2b730:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   2b734:	ldr	r5, [sp, #12]
   2b738:	mov	r4, r0
   2b73c:	sub	r0, r9, r4
   2b740:	cmp	r0, #2
   2b744:	blt	2b7ac <main@@Base+0x15a5c>
   2b748:	ldrb	r0, [r4]
   2b74c:	cmp	r0, #32
   2b750:	bls	2b798 <main@@Base+0x15a48>
   2b754:	mov	r2, r4
   2b758:	cmp	r2, r9
   2b75c:	beq	2b9a8 <main@@Base+0x15c58>
   2b760:	ldrb	r0, [r2]
   2b764:	cmp	r0, #44	; 0x2c
   2b768:	bne	2b9bc <main@@Base+0x15c6c>
   2b76c:	add	r1, r2, #1
   2b770:	sub	r0, r9, r1
   2b774:	cmp	r0, #2
   2b778:	blt	2b7dc <main@@Base+0x15a8c>
   2b77c:	ldrb	r0, [r1]
   2b780:	cmp	r0, #32
   2b784:	bls	2b7cc <main@@Base+0x15a7c>
   2b788:	mov	r2, r1
   2b78c:	cmp	r2, r9
   2b790:	bne	2b7f4 <main@@Base+0x15aa4>
   2b794:	b	2ba08 <main@@Base+0x15cb8>
   2b798:	bne	2b7ac <main@@Base+0x15a5c>
   2b79c:	mov	r2, r4
   2b7a0:	ldrb	r0, [r2, #1]!
   2b7a4:	cmp	r0, #32
   2b7a8:	bhi	2b7c0 <main@@Base+0x15a70>
   2b7ac:	mov	r0, r8
   2b7b0:	mov	r1, r4
   2b7b4:	mov	r2, r9
   2b7b8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2b7bc:	mov	r2, r0
   2b7c0:	cmp	r2, r9
   2b7c4:	bne	2b760 <main@@Base+0x15a10>
   2b7c8:	b	2b9a8 <main@@Base+0x15c58>
   2b7cc:	bne	2b7dc <main@@Base+0x15a8c>
   2b7d0:	ldrb	r0, [r2, #2]!
   2b7d4:	cmp	r0, #32
   2b7d8:	bhi	2b7ec <main@@Base+0x15a9c>
   2b7dc:	mov	r0, r8
   2b7e0:	mov	r2, r9
   2b7e4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2b7e8:	mov	r2, r0
   2b7ec:	cmp	r2, r9
   2b7f0:	beq	2ba08 <main@@Base+0x15cb8>
   2b7f4:	ldrb	r0, [r2]
   2b7f8:	cmp	r0, #125	; 0x7d
   2b7fc:	bne	2b428 <main@@Base+0x156d8>
   2b800:	b	2b9c4 <main@@Base+0x15c74>
   2b804:	mov	r0, r8
   2b808:	mov	r1, sl
   2b80c:	mov	r2, r9
   2b810:	mov	r3, #4
   2b814:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2b818:	b	2b838 <main@@Base+0x15ae8>
   2b81c:	bne	2b82c <main@@Base+0x15adc>
   2b820:	ldrb	r0, [sl, #2]!
   2b824:	cmp	r0, #32
   2b828:	bhi	2b83c <main@@Base+0x15aec>
   2b82c:	mov	r0, r8
   2b830:	mov	r2, r9
   2b834:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2b838:	mov	sl, r0
   2b83c:	cmp	r4, sl
   2b840:	beq	2b724 <main@@Base+0x159d4>
   2b844:	mov	r6, #0
   2b848:	cmp	sl, r9
   2b84c:	str	r6, [sp, #28]
   2b850:	str	r6, [sp, #24]
   2b854:	str	r6, [sp, #16]
   2b858:	str	r6, [sp, #20]
   2b85c:	beq	2b8bc <main@@Base+0x15b6c>
   2b860:	add	r0, sp, #24
   2b864:	mov	r1, sl
   2b868:	mov	r2, r9
   2b86c:	add	r3, sp, #20
   2b870:	str	r0, [sp]
   2b874:	mov	r0, r8
   2b878:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   2b87c:	cmp	r0, sl
   2b880:	beq	2b8cc <main@@Base+0x15b7c>
   2b884:	ldr	r2, [sp, #20]
   2b888:	mov	r4, r0
   2b88c:	ldr	r0, [sp, #24]
   2b890:	ldr	r1, [sp, #28]
   2b894:	cmp	r2, #0
   2b898:	beq	2b8dc <main@@Base+0x15b8c>
   2b89c:	subs	r2, r0, #-2147483647	; 0x80000001
   2b8a0:	sbcs	r1, r1, #0
   2b8a4:	bcc	2b90c <main@@Base+0x15bbc>
   2b8a8:	mov	r0, r8
   2b8ac:	mov	r1, r4
   2b8b0:	mov	r2, r9
   2b8b4:	mov	r3, #8
   2b8b8:	b	2b8f8 <main@@Base+0x15ba8>
   2b8bc:	mov	r4, r9
   2b8c0:	cmp	sl, r4
   2b8c4:	bne	2b960 <main@@Base+0x15c10>
   2b8c8:	b	2b930 <main@@Base+0x15be0>
   2b8cc:	mov	r4, sl
   2b8d0:	cmp	sl, r4
   2b8d4:	bne	2b960 <main@@Base+0x15c10>
   2b8d8:	b	2b930 <main@@Base+0x15be0>
   2b8dc:	subs	r2, r0, #-2147483648	; 0x80000000
   2b8e0:	sbcs	r1, r1, #0
   2b8e4:	bcc	2b920 <main@@Base+0x15bd0>
   2b8e8:	mov	r0, r8
   2b8ec:	mov	r1, r4
   2b8f0:	mov	r2, r9
   2b8f4:	mov	r3, #7
   2b8f8:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2b8fc:	mov	r4, r0
   2b900:	cmp	sl, r4
   2b904:	bne	2b960 <main@@Base+0x15c10>
   2b908:	b	2b930 <main@@Base+0x15be0>
   2b90c:	rsb	r6, r0, #0
   2b910:	str	r6, [sp, #16]
   2b914:	cmp	sl, r4
   2b918:	bne	2b960 <main@@Base+0x15c10>
   2b91c:	b	2b930 <main@@Base+0x15be0>
   2b920:	mov	r6, r0
   2b924:	str	r6, [sp, #16]
   2b928:	cmp	sl, r4
   2b92c:	bne	2b960 <main@@Base+0x15c10>
   2b930:	add	r0, sp, #16
   2b934:	mov	r1, sl
   2b938:	mov	r2, r9
   2b93c:	str	r0, [sp]
   2b940:	mov	r0, r8
   2b944:	ldr	r3, [sp, #4]
   2b948:	bl	2437c <main@@Base+0xe62c>
   2b94c:	mov	r4, r0
   2b950:	cmp	r0, sl
   2b954:	cmpne	r4, r9
   2b958:	beq	2bac0 <main@@Base+0x15d70>
   2b95c:	ldr	r6, [sp, #16]
   2b960:	ldr	r5, [sp, #12]
   2b964:	cmp	r6, #0
   2b968:	bne	2b978 <main@@Base+0x15c28>
   2b96c:	ldrb	r0, [r8, #8]
   2b970:	tst	r0, #2
   2b974:	beq	2b73c <main@@Base+0x159ec>
   2b978:	ldr	r0, [r8]
   2b97c:	mov	r1, #0
   2b980:	mov	r2, #4
   2b984:	mov	r3, #4
   2b988:	bl	30dac <flatcc_builder_table_add@@Base>
   2b98c:	cmp	r0, #0
   2b990:	beq	2bac0 <main@@Base+0x15d70>
   2b994:	str	r6, [r0]
   2b998:	sub	r0, r9, r4
   2b99c:	cmp	r0, #2
   2b9a0:	bge	2b748 <main@@Base+0x159f8>
   2b9a4:	b	2b7ac <main@@Base+0x15a5c>
   2b9a8:	mov	r4, r9
   2b9ac:	ldr	r0, [r8, #20]
   2b9b0:	cmp	r0, #0
   2b9b4:	bne	2ae10 <main@@Base+0x150c0>
   2b9b8:	b	2b9f0 <main@@Base+0x15ca0>
   2b9bc:	cmp	r0, #125	; 0x7d
   2b9c0:	bne	2ba5c <main@@Base+0x15d0c>
   2b9c4:	add	r1, r2, #1
   2b9c8:	sub	r0, r9, r1
   2b9cc:	cmp	r0, #2
   2b9d0:	blt	2ba84 <main@@Base+0x15d34>
   2b9d4:	ldrb	r0, [r1]
   2b9d8:	cmp	r0, #32
   2b9dc:	bls	2ba70 <main@@Base+0x15d20>
   2b9e0:	mov	r4, r1
   2b9e4:	ldr	r0, [r8, #20]
   2b9e8:	cmp	r0, #0
   2b9ec:	bne	2ae10 <main@@Base+0x150c0>
   2b9f0:	ldr	r0, [r8]
   2b9f4:	bl	30400 <flatcc_builder_end_table@@Base>
   2b9f8:	cmp	r0, #0
   2b9fc:	str	r0, [r5]
   2ba00:	bne	2ae28 <main@@Base+0x150d8>
   2ba04:	b	2ae10 <main@@Base+0x150c0>
   2ba08:	mov	r0, r8
   2ba0c:	mov	r1, r9
   2ba10:	b	2ba64 <main@@Base+0x15d14>
   2ba14:	mov	r0, r8
   2ba18:	mov	r1, r3
   2ba1c:	mov	r2, r9
   2ba20:	mov	r3, #10
   2ba24:	b	2adb0 <main@@Base+0x15060>
   2ba28:	bne	2ba3c <main@@Base+0x15cec>
   2ba2c:	ldrb	r0, [r3, #2]!
   2ba30:	mov	r4, r3
   2ba34:	cmp	r0, #32
   2ba38:	bhi	2adb8 <main@@Base+0x15068>
   2ba3c:	mov	r0, r8
   2ba40:	mov	r2, r9
   2ba44:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2ba48:	mov	r4, r0
   2ba4c:	cmp	r4, r9
   2ba50:	mov	r1, r9
   2ba54:	bne	2adc4 <main@@Base+0x15074>
   2ba58:	b	2ade4 <main@@Base+0x15094>
   2ba5c:	mov	r0, r8
   2ba60:	mov	r1, r2
   2ba64:	mov	r2, r9
   2ba68:	mov	r3, #10
   2ba6c:	b	2adfc <main@@Base+0x150ac>
   2ba70:	bne	2ba84 <main@@Base+0x15d34>
   2ba74:	ldrb	r0, [r2, #2]!
   2ba78:	mov	r4, r2
   2ba7c:	cmp	r0, #32
   2ba80:	bhi	2ae04 <main@@Base+0x150b4>
   2ba84:	mov	r0, r8
   2ba88:	mov	r2, r9
   2ba8c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2ba90:	b	2ae00 <main@@Base+0x150b0>
   2ba94:	mov	r1, r2
   2ba98:	mov	r0, r8
   2ba9c:	mov	r2, r9
   2baa0:	mov	r3, #33	; 0x21
   2baa4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2baa8:	ldr	r5, [sp, #12]
   2baac:	mov	r4, r0
   2bab0:	cmp	r4, r9
   2bab4:	mov	r1, r9
   2bab8:	bne	2adc4 <main@@Base+0x15074>
   2babc:	b	2ade4 <main@@Base+0x15094>
   2bac0:	ldr	r5, [sp, #12]
   2bac4:	b	2ae10 <main@@Base+0x150c0>
   2bac8:	add	r0, r0, #1
   2bacc:	uxtb	r1, r0
   2bad0:	cmp	r1, #12
   2bad4:	movhi	r0, #0
   2bad8:	bxhi	lr
   2badc:	movw	r1, #37380	; 0x9204
   2bae0:	sxtb	r0, r0
   2bae4:	movt	r1, #4
   2bae8:	ldr	r0, [r1, r0, lsl #2]
   2baec:	bx	lr
   2baf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2baf4:	add	fp, sp, #28
   2baf8:	sub	sp, sp, #36	; 0x24
   2bafc:	mov	r5, r0
   2bb00:	mov	r0, #0
   2bb04:	mov	sl, r2
   2bb08:	mov	r4, r1
   2bb0c:	mov	r1, #4
   2bb10:	mov	r2, #4
   2bb14:	str	r3, [sp, #12]
   2bb18:	str	r0, [r3]
   2bb1c:	ldr	r0, [r5]
   2bb20:	bl	2e77c <flatcc_builder_start_struct@@Base>
   2bb24:	cmp	r0, #0
   2bb28:	beq	2bbf8 <main@@Base+0x15ea8>
   2bb2c:	cmp	r4, sl
   2bb30:	beq	2bbac <main@@Base+0x15e5c>
   2bb34:	ldrb	r1, [r4]
   2bb38:	cmp	r1, #123	; 0x7b
   2bb3c:	bne	2bbac <main@@Base+0x15e5c>
   2bb40:	add	r1, r4, #1
   2bb44:	str	r0, [sp, #8]
   2bb48:	sub	r0, sl, r1
   2bb4c:	cmp	r0, #2
   2bb50:	blt	2bc40 <main@@Base+0x15ef0>
   2bb54:	ldrb	r0, [r1]
   2bb58:	cmp	r0, #32
   2bb5c:	bls	2bc30 <main@@Base+0x15ee0>
   2bb60:	mov	r4, r1
   2bb64:	cmp	r4, sl
   2bb68:	mov	r3, sl
   2bb6c:	beq	2bc5c <main@@Base+0x15f0c>
   2bb70:	ldrb	r0, [r4]
   2bb74:	cmp	r0, #125	; 0x7d
   2bb78:	bne	2bc1c <main@@Base+0x15ecc>
   2bb7c:	add	r1, r4, #1
   2bb80:	sub	r0, sl, r1
   2bb84:	cmp	r0, #2
   2bb88:	blt	2c14c <main@@Base+0x163fc>
   2bb8c:	ldrb	r0, [r1]
   2bb90:	cmp	r0, #32
   2bb94:	bhi	2c104 <main@@Base+0x163b4>
   2bb98:	bne	2c14c <main@@Base+0x163fc>
   2bb9c:	ldrb	r0, [r4, #2]!
   2bba0:	cmp	r0, #32
   2bba4:	bhi	2bbc4 <main@@Base+0x15e74>
   2bba8:	b	2c14c <main@@Base+0x163fc>
   2bbac:	mov	r0, r5
   2bbb0:	mov	r1, r4
   2bbb4:	mov	r2, sl
   2bbb8:	mov	r3, #21
   2bbbc:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2bbc0:	mov	r4, r0
   2bbc4:	cmp	r4, sl
   2bbc8:	mov	r1, sl
   2bbcc:	beq	2bbfc <main@@Base+0x15eac>
   2bbd0:	ldr	r0, [r5]
   2bbd4:	bl	2e870 <flatcc_builder_end_struct@@Base>
   2bbd8:	ldr	r1, [sp, #12]
   2bbdc:	cmp	r0, #0
   2bbe0:	str	r0, [r1]
   2bbe4:	mov	r1, r4
   2bbe8:	beq	2bbfc <main@@Base+0x15eac>
   2bbec:	mov	r0, r4
   2bbf0:	sub	sp, fp, #28
   2bbf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bbf8:	mov	r1, r4
   2bbfc:	mov	r0, r5
   2bc00:	mov	r2, sl
   2bc04:	mov	r3, #33	; 0x21
   2bc08:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2bc0c:	mov	r4, r0
   2bc10:	mov	r0, r4
   2bc14:	sub	sp, fp, #28
   2bc18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bc1c:	mov	r3, r4
   2bc20:	cmp	r3, sl
   2bc24:	mov	r9, sl
   2bc28:	bne	2bc68 <main@@Base+0x15f18>
   2bc2c:	b	2bc94 <main@@Base+0x15f44>
   2bc30:	bne	2bc40 <main@@Base+0x15ef0>
   2bc34:	ldrb	r0, [r4, #2]!
   2bc38:	cmp	r0, #32
   2bc3c:	bhi	2bc50 <main@@Base+0x15f00>
   2bc40:	mov	r0, r5
   2bc44:	mov	r2, sl
   2bc48:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2bc4c:	mov	r4, r0
   2bc50:	cmp	r4, sl
   2bc54:	mov	r3, sl
   2bc58:	bne	2bb70 <main@@Base+0x15e20>
   2bc5c:	cmp	r3, sl
   2bc60:	mov	r9, sl
   2bc64:	beq	2bc94 <main@@Base+0x15f44>
   2bc68:	ldrb	r0, [r3]
   2bc6c:	cmp	r0, #34	; 0x22
   2bc70:	bne	2bc7c <main@@Base+0x15f2c>
   2bc74:	add	r9, r3, #1
   2bc78:	b	2bc94 <main@@Base+0x15f44>
   2bc7c:	mov	r1, r3
   2bc80:	mov	r0, r5
   2bc84:	mov	r2, sl
   2bc88:	mov	r3, #5
   2bc8c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2bc90:	mov	r9, r0
   2bc94:	sub	r0, sl, r9
   2bc98:	mov	r1, #8
   2bc9c:	cmp	r0, #8
   2bca0:	movcs	r0, r1
   2bca4:	sub	r3, r0, #1
   2bca8:	cmp	r3, #7
   2bcac:	bhi	2bdf4 <main@@Base+0x160a4>
   2bcb0:	add	r6, pc, #36	; 0x24
   2bcb4:	mov	r8, r5
   2bcb8:	mov	r0, #0
   2bcbc:	mov	ip, #0
   2bcc0:	mov	lr, #0
   2bcc4:	mov	r7, #0
   2bcc8:	mov	r2, #0
   2bccc:	mov	r5, #0
   2bcd0:	mov	r4, #0
   2bcd4:	mov	r1, #0
   2bcd8:	ldr	pc, [r6, r3, lsl #2]
   2bcdc:	andeq	fp, r2, r0, asr #26
   2bce0:	andeq	fp, r2, r8, lsr sp
   2bce4:	andeq	fp, r2, r0, lsr sp
   2bce8:	andeq	fp, r2, r8, lsr #26
   2bcec:	andeq	fp, r2, ip, lsl sp
   2bcf0:	andeq	fp, r2, r0, lsl sp
   2bcf4:	andeq	fp, r2, r0, lsl #26
   2bcf8:	strdeq	fp, [r2], -ip
   2bcfc:	ldrb	ip, [r9, #7]
   2bd00:	ldrb	r1, [r9, #6]
   2bd04:	mov	lr, r0
   2bd08:	orr	r1, ip, r1, lsl #8
   2bd0c:	mov	r0, r1
   2bd10:	ldrb	r1, [r9, #5]
   2bd14:	mov	r7, lr
   2bd18:	orr	r0, r0, r1, lsl #16
   2bd1c:	ldrb	r1, [r9, #4]
   2bd20:	mov	r2, r7
   2bd24:	orr	r0, r0, r1, lsl #24
   2bd28:	ldrb	r1, [r9, #3]
   2bd2c:	orr	r5, r1, r2
   2bd30:	ldrb	r1, [r9, #2]
   2bd34:	orr	r4, r5, r1, lsl #8
   2bd38:	ldrb	r1, [r9, #1]
   2bd3c:	orr	r1, r4, r1, lsl #16
   2bd40:	movw	r2, #29285	; 0x7265
   2bd44:	mov	r5, r8
   2bd48:	movt	r2, #29535	; 0x735f
   2bd4c:	eor	r0, r0, r2
   2bd50:	ldrb	r2, [r9]
   2bd54:	orr	r1, r1, r2, lsl #24
   2bd58:	movw	r2, #28523	; 0x6f6b
   2bd5c:	movt	r2, #25199	; 0x626f
   2bd60:	eor	r1, r1, r2
   2bd64:	orrs	r0, r0, r1
   2bd68:	bne	2bdf4 <main@@Base+0x160a4>
   2bd6c:	add	r8, r9, #8
   2bd70:	mov	r2, #8
   2bd74:	sub	r0, sl, r8
   2bd78:	cmp	r0, #8
   2bd7c:	movcc	r2, r0
   2bd80:	sub	r1, r2, #2
   2bd84:	cmp	r1, #7
   2bd88:	bcs	2be00 <main@@Base+0x160b0>
   2bd8c:	ldrb	r1, [r9, #9]
   2bd90:	lsl	r2, r1, #16
   2bd94:	mov	r1, #0
   2bd98:	ldrb	r3, [r8]
   2bd9c:	orr	r2, r2, r3, lsl #24
   2bda0:	movw	r3, #0
   2bda4:	movt	r3, #24932	; 0x6164
   2bda8:	eor	r2, r2, r3
   2bdac:	orrs	r1, r1, r2
   2bdb0:	bne	2be70 <main@@Base+0x16120>
   2bdb4:	cmp	r0, #3
   2bdb8:	blt	2be70 <main@@Base+0x16120>
   2bdbc:	ldrb	r0, [r9, #10]
   2bdc0:	cmp	r0, #34	; 0x22
   2bdc4:	bne	2be70 <main@@Base+0x16120>
   2bdc8:	add	r1, r9, #11
   2bdcc:	sub	r0, sl, r1
   2bdd0:	cmp	r0, #2
   2bdd4:	blt	2be24 <main@@Base+0x160d4>
   2bdd8:	ldrb	r0, [r1]
   2bddc:	cmp	r0, #32
   2bde0:	bls	2be14 <main@@Base+0x160c4>
   2bde4:	mov	r9, r1
   2bde8:	cmp	r9, sl
   2bdec:	bne	2be3c <main@@Base+0x160ec>
   2bdf0:	b	2bf4c <main@@Base+0x161fc>
   2bdf4:	mov	r0, r5
   2bdf8:	mov	r1, r9
   2bdfc:	b	2be78 <main@@Base+0x16128>
   2be00:	cmp	r2, #1
   2be04:	mov	r1, #0
   2be08:	mov	r2, #0
   2be0c:	beq	2bd98 <main@@Base+0x16048>
   2be10:	b	2be70 <main@@Base+0x16120>
   2be14:	bne	2be24 <main@@Base+0x160d4>
   2be18:	ldrb	r0, [r9, #12]!
   2be1c:	cmp	r0, #32
   2be20:	bhi	2be34 <main@@Base+0x160e4>
   2be24:	mov	r0, r5
   2be28:	mov	r2, sl
   2be2c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2be30:	mov	r9, r0
   2be34:	cmp	r9, sl
   2be38:	beq	2bf4c <main@@Base+0x161fc>
   2be3c:	ldrb	r0, [r9]
   2be40:	cmp	r0, #58	; 0x3a
   2be44:	bne	2bf4c <main@@Base+0x161fc>
   2be48:	add	r1, r9, #1
   2be4c:	sub	r0, sl, r1
   2be50:	cmp	r0, #2
   2be54:	blt	2bf74 <main@@Base+0x16224>
   2be58:	ldrb	r0, [r1]
   2be5c:	cmp	r0, #32
   2be60:	bls	2bf64 <main@@Base+0x16214>
   2be64:	mov	r9, r1
   2be68:	cmp	r8, r9
   2be6c:	bne	2bf8c <main@@Base+0x1623c>
   2be70:	mov	r0, r5
   2be74:	mov	r1, r8
   2be78:	mov	r2, sl
   2be7c:	bl	34da8 <flatcc_json_parser_unmatched_symbol@@Base>
   2be80:	mov	r2, r0
   2be84:	sub	r0, sl, r2
   2be88:	cmp	r0, #2
   2be8c:	blt	2bf00 <main@@Base+0x161b0>
   2be90:	ldrb	r0, [r2]
   2be94:	cmp	r0, #32
   2be98:	bls	2beec <main@@Base+0x1619c>
   2be9c:	mov	r3, r2
   2bea0:	cmp	r3, sl
   2bea4:	beq	2c0d8 <main@@Base+0x16388>
   2bea8:	ldrb	r0, [r3]
   2beac:	cmp	r0, #44	; 0x2c
   2beb0:	bne	2c0e0 <main@@Base+0x16390>
   2beb4:	add	r1, r3, #1
   2beb8:	sub	r0, sl, r1
   2bebc:	cmp	r0, #2
   2bec0:	blt	2bf30 <main@@Base+0x161e0>
   2bec4:	ldrb	r0, [r1]
   2bec8:	cmp	r0, #32
   2becc:	bls	2bf20 <main@@Base+0x161d0>
   2bed0:	mov	r3, r1
   2bed4:	cmp	r3, sl
   2bed8:	beq	2c118 <main@@Base+0x163c8>
   2bedc:	ldrb	r0, [r3]
   2bee0:	cmp	r0, #125	; 0x7d
   2bee4:	bne	2bc5c <main@@Base+0x15f0c>
   2bee8:	b	2c0e8 <main@@Base+0x16398>
   2beec:	bne	2bf00 <main@@Base+0x161b0>
   2bef0:	mov	r3, r2
   2bef4:	ldrb	r0, [r3, #1]!
   2bef8:	cmp	r0, #32
   2befc:	bhi	2bf14 <main@@Base+0x161c4>
   2bf00:	mov	r1, r2
   2bf04:	mov	r0, r5
   2bf08:	mov	r2, sl
   2bf0c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2bf10:	mov	r3, r0
   2bf14:	cmp	r3, sl
   2bf18:	bne	2bea8 <main@@Base+0x16158>
   2bf1c:	b	2c0d8 <main@@Base+0x16388>
   2bf20:	bne	2bf30 <main@@Base+0x161e0>
   2bf24:	ldrb	r0, [r3, #2]!
   2bf28:	cmp	r0, #32
   2bf2c:	bhi	2bf40 <main@@Base+0x161f0>
   2bf30:	mov	r0, r5
   2bf34:	mov	r2, sl
   2bf38:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2bf3c:	mov	r3, r0
   2bf40:	cmp	r3, sl
   2bf44:	bne	2bedc <main@@Base+0x1618c>
   2bf48:	b	2c118 <main@@Base+0x163c8>
   2bf4c:	mov	r0, r5
   2bf50:	mov	r1, r9
   2bf54:	mov	r2, sl
   2bf58:	mov	r3, #4
   2bf5c:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2bf60:	b	2bf80 <main@@Base+0x16230>
   2bf64:	bne	2bf74 <main@@Base+0x16224>
   2bf68:	ldrb	r0, [r9, #2]!
   2bf6c:	cmp	r0, #32
   2bf70:	bhi	2bf84 <main@@Base+0x16234>
   2bf74:	mov	r0, r5
   2bf78:	mov	r2, sl
   2bf7c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2bf80:	mov	r9, r0
   2bf84:	cmp	r8, r9
   2bf88:	beq	2be70 <main@@Base+0x16120>
   2bf8c:	mov	r8, #0
   2bf90:	cmp	r9, sl
   2bf94:	str	r8, [sp, #28]
   2bf98:	str	r8, [sp, #24]
   2bf9c:	str	r8, [sp, #16]
   2bfa0:	str	r8, [sp, #20]
   2bfa4:	beq	2c004 <main@@Base+0x162b4>
   2bfa8:	add	r0, sp, #24
   2bfac:	mov	r1, r9
   2bfb0:	mov	r2, sl
   2bfb4:	add	r3, sp, #20
   2bfb8:	str	r0, [sp]
   2bfbc:	mov	r0, r5
   2bfc0:	bl	36bc0 <flatcc_json_parser_integer@@Base>
   2bfc4:	cmp	r0, r9
   2bfc8:	beq	2c018 <main@@Base+0x162c8>
   2bfcc:	ldr	r3, [sp, #20]
   2bfd0:	mov	r2, r0
   2bfd4:	ldr	r0, [sp, #24]
   2bfd8:	ldr	r1, [sp, #28]
   2bfdc:	cmp	r3, #0
   2bfe0:	beq	2c02c <main@@Base+0x162dc>
   2bfe4:	subs	r3, r0, #-2147483647	; 0x80000001
   2bfe8:	sbcs	r1, r1, #0
   2bfec:	bcc	2c060 <main@@Base+0x16310>
   2bff0:	mov	r1, r2
   2bff4:	mov	r0, r5
   2bff8:	mov	r2, sl
   2bffc:	mov	r3, #8
   2c000:	b	2c048 <main@@Base+0x162f8>
   2c004:	ldr	r0, [sp, #8]
   2c008:	mov	r2, sl
   2c00c:	cmp	r9, r2
   2c010:	bne	2c0c4 <main@@Base+0x16374>
   2c014:	b	2c08c <main@@Base+0x1633c>
   2c018:	ldr	r0, [sp, #8]
   2c01c:	mov	r2, r9
   2c020:	cmp	r9, r2
   2c024:	bne	2c0c4 <main@@Base+0x16374>
   2c028:	b	2c08c <main@@Base+0x1633c>
   2c02c:	subs	r3, r0, #-2147483648	; 0x80000000
   2c030:	sbcs	r1, r1, #0
   2c034:	bcc	2c078 <main@@Base+0x16328>
   2c038:	mov	r1, r2
   2c03c:	mov	r0, r5
   2c040:	mov	r2, sl
   2c044:	mov	r3, #7
   2c048:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2c04c:	mov	r2, r0
   2c050:	ldr	r0, [sp, #8]
   2c054:	cmp	r9, r2
   2c058:	bne	2c0c4 <main@@Base+0x16374>
   2c05c:	b	2c08c <main@@Base+0x1633c>
   2c060:	rsb	r8, r0, #0
   2c064:	ldr	r0, [sp, #8]
   2c068:	str	r8, [sp, #16]
   2c06c:	cmp	r9, r2
   2c070:	bne	2c0c4 <main@@Base+0x16374>
   2c074:	b	2c08c <main@@Base+0x1633c>
   2c078:	mov	r8, r0
   2c07c:	ldr	r0, [sp, #8]
   2c080:	str	r8, [sp, #16]
   2c084:	cmp	r9, r2
   2c088:	bne	2c0c4 <main@@Base+0x16374>
   2c08c:	movw	r3, #53384	; 0xd088
   2c090:	add	r0, sp, #16
   2c094:	mov	r1, r9
   2c098:	mov	r2, sl
   2c09c:	movt	r3, #5
   2c0a0:	str	r0, [sp]
   2c0a4:	mov	r0, r5
   2c0a8:	bl	2437c <main@@Base+0xe62c>
   2c0ac:	mov	r2, r0
   2c0b0:	cmp	r0, r9
   2c0b4:	cmpne	r2, sl
   2c0b8:	beq	2c15c <main@@Base+0x1640c>
   2c0bc:	ldr	r8, [sp, #16]
   2c0c0:	ldr	r0, [sp, #8]
   2c0c4:	str	r8, [r0]
   2c0c8:	sub	r0, sl, r2
   2c0cc:	cmp	r0, #2
   2c0d0:	bge	2be90 <main@@Base+0x16140>
   2c0d4:	b	2bf00 <main@@Base+0x161b0>
   2c0d8:	mov	r1, sl
   2c0dc:	b	2bbfc <main@@Base+0x15eac>
   2c0e0:	cmp	r0, #125	; 0x7d
   2c0e4:	bne	2c124 <main@@Base+0x163d4>
   2c0e8:	add	r1, r3, #1
   2c0ec:	sub	r0, sl, r1
   2c0f0:	cmp	r0, #2
   2c0f4:	blt	2c14c <main@@Base+0x163fc>
   2c0f8:	ldrb	r0, [r1]
   2c0fc:	cmp	r0, #32
   2c100:	bls	2c138 <main@@Base+0x163e8>
   2c104:	mov	r4, r1
   2c108:	cmp	r4, sl
   2c10c:	mov	r1, sl
   2c110:	bne	2bbd0 <main@@Base+0x15e80>
   2c114:	b	2bbfc <main@@Base+0x15eac>
   2c118:	mov	r0, r5
   2c11c:	mov	r1, sl
   2c120:	b	2c12c <main@@Base+0x163dc>
   2c124:	mov	r0, r5
   2c128:	mov	r1, r3
   2c12c:	mov	r2, sl
   2c130:	mov	r3, #10
   2c134:	b	2bbbc <main@@Base+0x15e6c>
   2c138:	bne	2c14c <main@@Base+0x163fc>
   2c13c:	ldrb	r0, [r3, #2]!
   2c140:	mov	r4, r3
   2c144:	cmp	r0, #32
   2c148:	bhi	2bbc4 <main@@Base+0x15e74>
   2c14c:	mov	r0, r5
   2c150:	mov	r2, sl
   2c154:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2c158:	b	2bbc0 <main@@Base+0x15e70>
   2c15c:	mov	r1, r2
   2c160:	mov	r0, r5
   2c164:	mov	r2, sl
   2c168:	mov	r3, #33	; 0x21
   2c16c:	b	2bbbc <main@@Base+0x15e6c>
   2c170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c174:	add	fp, sp, #28
   2c178:	sub	sp, sp, #44	; 0x2c
   2c17c:	mov	r6, r2
   2c180:	ldr	r2, [fp, #8]
   2c184:	mov	r5, r0
   2c188:	mov	r0, #0
   2c18c:	mov	sl, r3
   2c190:	cmp	r1, r6
   2c194:	strh	r0, [r2]
   2c198:	beq	2c1ac <main@@Base+0x1645c>
   2c19c:	ldrb	r0, [r1]
   2c1a0:	cmp	r0, #34	; 0x22
   2c1a4:	bne	2c1e0 <main@@Base+0x16490>
   2c1a8:	add	r1, r1, #1
   2c1ac:	sub	r0, r6, r1
   2c1b0:	cmp	r0, #2
   2c1b4:	blt	2c218 <main@@Base+0x164c8>
   2c1b8:	ldrb	r0, [r1]
   2c1bc:	cmp	r0, #32
   2c1c0:	bls	2c204 <main@@Base+0x164b4>
   2c1c4:	mov	r7, r1
   2c1c8:	cmp	r7, r6
   2c1cc:	bne	2c230 <main@@Base+0x164e0>
   2c1d0:	mov	r4, r6
   2c1d4:	mov	r0, r4
   2c1d8:	sub	sp, fp, #28
   2c1dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c1e0:	mov	r0, r5
   2c1e4:	mov	r2, r6
   2c1e8:	mov	r3, #5
   2c1ec:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2c1f0:	mov	r1, r0
   2c1f4:	sub	r0, r6, r1
   2c1f8:	cmp	r0, #2
   2c1fc:	bge	2c1b8 <main@@Base+0x16468>
   2c200:	b	2c218 <main@@Base+0x164c8>
   2c204:	bne	2c218 <main@@Base+0x164c8>
   2c208:	mov	r7, r1
   2c20c:	ldrb	r0, [r7, #1]!
   2c210:	cmp	r0, #32
   2c214:	bhi	2c228 <main@@Base+0x164d8>
   2c218:	mov	r0, r5
   2c21c:	mov	r2, r6
   2c220:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   2c224:	mov	r7, r0
   2c228:	cmp	r7, r6
   2c22c:	beq	2c1d0 <main@@Base+0x16480>
   2c230:	add	r0, sl, #4
   2c234:	mov	r1, #0
   2c238:	add	r8, sp, #32
   2c23c:	add	r9, sp, #28
   2c240:	str	sl, [sp, #16]
   2c244:	str	r1, [sp, #20]
   2c248:	str	r0, [sp, #12]
   2c24c:	ldr	r4, [sl]
   2c250:	mov	sl, r0
   2c254:	add	r0, sp, #24
   2c258:	mov	r1, r7
   2c25c:	mov	r2, r6
   2c260:	mov	r3, r9
   2c264:	str	r8, [sp]
   2c268:	str	r0, [sp, #4]
   2c26c:	mov	r0, r5
   2c270:	blx	r4
   2c274:	cmp	r0, r6
   2c278:	beq	2c340 <main@@Base+0x165f0>
   2c27c:	mov	r4, r0
   2c280:	cmp	r0, r7
   2c284:	bne	2c298 <main@@Base+0x16548>
   2c288:	ldr	r4, [sl], #4
   2c28c:	cmp	r4, #0
   2c290:	bne	2c254 <main@@Base+0x16504>
   2c294:	b	2c350 <main@@Base+0x16600>
   2c298:	ldr	r0, [sp, #28]
   2c29c:	cmp	r0, #0
   2c2a0:	beq	2c2c8 <main@@Base+0x16578>
   2c2a4:	mov	r0, r5
   2c2a8:	mov	r1, r4
   2c2ac:	mov	r2, r6
   2c2b0:	mov	r3, #8
   2c2b4:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2c2b8:	ldr	sl, [sp, #16]
   2c2bc:	cmp	r0, r6
   2c2c0:	bne	2c310 <main@@Base+0x165c0>
   2c2c4:	b	2c340 <main@@Base+0x165f0>
   2c2c8:	ldr	r0, [sp, #32]
   2c2cc:	ldr	r1, [sp, #36]	; 0x24
   2c2d0:	ldr	sl, [sp, #16]
   2c2d4:	subs	r2, r0, #65536	; 0x10000
   2c2d8:	sbcs	r1, r1, #0
   2c2dc:	bcc	2c300 <main@@Base+0x165b0>
   2c2e0:	mov	r0, r5
   2c2e4:	mov	r1, r4
   2c2e8:	mov	r2, r6
   2c2ec:	mov	r3, #7
   2c2f0:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2c2f4:	cmp	r0, r6
   2c2f8:	bne	2c310 <main@@Base+0x165c0>
   2c2fc:	b	2c340 <main@@Base+0x165f0>
   2c300:	str	r0, [sp, #20]
   2c304:	mov	r0, r4
   2c308:	cmp	r0, r6
   2c30c:	beq	2c340 <main@@Base+0x165f0>
   2c310:	ldr	r0, [fp, #8]
   2c314:	ldr	r2, [sp, #20]
   2c318:	mov	r7, r4
   2c31c:	mov	r1, r0
   2c320:	ldrh	r0, [r0]
   2c324:	add	r0, r0, r2
   2c328:	strh	r0, [r1]
   2c32c:	ldr	r0, [sp, #24]
   2c330:	cmp	r0, #0
   2c334:	ldr	r0, [sp, #12]
   2c338:	bne	2c24c <main@@Base+0x164fc>
   2c33c:	b	2c1d4 <main@@Base+0x16484>
   2c340:	mov	r4, r6
   2c344:	mov	r0, r4
   2c348:	sub	sp, fp, #28
   2c34c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c350:	mov	r0, r5
   2c354:	mov	r1, r7
   2c358:	mov	r2, r6
   2c35c:	mov	r3, #23
   2c360:	bl	3454c <flatcc_json_parser_set_error@@Base>
   2c364:	mov	r4, r0
   2c368:	mov	r0, r4
   2c36c:	sub	sp, fp, #28
   2c370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c374:	push	{r4, r5, r6, sl, fp, lr}
   2c378:	add	fp, sp, #16
   2c37c:	sub	sp, sp, #16
   2c380:	mov	r5, r0
   2c384:	movw	r0, #36401	; 0x8e31
   2c388:	mov	r4, r1
   2c38c:	mov	r6, #1
   2c390:	mov	r1, #0
   2c394:	mov	r3, #0
   2c398:	movt	r0, #4
   2c39c:	mov	r2, r4
   2c3a0:	stm	sp, {r0, r6}
   2c3a4:	mov	r0, r5
   2c3a8:	bl	3cdcc <flatcc_json_printer_float_struct_field@@Base>
   2c3ac:	movw	r0, #46335	; 0xb4ff
   2c3b0:	mov	r1, #1
   2c3b4:	mov	r2, r4
   2c3b8:	mov	r3, #4
   2c3bc:	movt	r0, #4
   2c3c0:	stm	sp, {r0, r6}
   2c3c4:	mov	r0, r5
   2c3c8:	bl	3cdcc <flatcc_json_printer_float_struct_field@@Base>
   2c3cc:	movw	r0, #36842	; 0x8fea
   2c3d0:	mov	r1, #2
   2c3d4:	mov	r2, r4
   2c3d8:	mov	r3, #8
   2c3dc:	movt	r0, #4
   2c3e0:	stm	sp, {r0, r6}
   2c3e4:	mov	r0, r5
   2c3e8:	bl	3cdcc <flatcc_json_printer_float_struct_field@@Base>
   2c3ec:	movw	r0, #36844	; 0x8fec
   2c3f0:	mov	r6, #5
   2c3f4:	mov	r1, #3
   2c3f8:	mov	r2, r4
   2c3fc:	mov	r3, #16
   2c400:	movt	r0, #4
   2c404:	stm	sp, {r0, r6}
   2c408:	mov	r0, r5
   2c40c:	bl	3ce34 <flatcc_json_printer_double_struct_field@@Base>
   2c410:	movw	r0, #50288	; 0xc470
   2c414:	movw	r1, #36850	; 0x8ff2
   2c418:	mov	r2, r4
   2c41c:	mov	r3, #24
   2c420:	movt	r1, #4
   2c424:	movt	r0, #2
   2c428:	stm	sp, {r1, r6}
   2c42c:	str	r0, [sp, #8]
   2c430:	mov	r0, r5
   2c434:	mov	r1, #4
   2c438:	bl	3d150 <flatcc_json_printer_int8_enum_struct_field@@Base>
   2c43c:	movw	r0, #50672	; 0xc5f0
   2c440:	movw	r1, #36856	; 0x8ff8
   2c444:	mov	r2, r4
   2c448:	mov	r3, #26
   2c44c:	movt	r1, #4
   2c450:	movt	r0, #2
   2c454:	stm	sp, {r1, r6}
   2c458:	str	r0, [sp, #8]
   2c45c:	mov	r0, r5
   2c460:	mov	r1, #5
   2c464:	bl	44910 <flatcc_json_printer_embedded_struct_field@@Base>
   2c468:	sub	sp, fp, #16
   2c46c:	pop	{r4, r5, r6, sl, fp, pc}
   2c470:	push	{r4, r5, r6, r7, fp, lr}
   2c474:	add	fp, sp, #16
   2c478:	mov	r4, r0
   2c47c:	mvn	r0, #0
   2c480:	uxtb	r7, r1
   2c484:	uxtab	r0, r0, r1
   2c488:	ands	r5, r0, r7
   2c48c:	movwne	r5, #1
   2c490:	cmp	r1, #0
   2c494:	beq	2c4d8 <main@@Base+0x16788>
   2c498:	ands	r0, r1, #244	; 0xf4
   2c49c:	bne	2c4d8 <main@@Base+0x16788>
   2c4a0:	mov	r0, r4
   2c4a4:	mov	r1, r5
   2c4a8:	bl	3adcc <flatcc_json_printer_delimit_enum_flags@@Base>
   2c4ac:	mov	r6, #0
   2c4b0:	tst	r7, #1
   2c4b4:	bne	2c4e4 <main@@Base+0x16794>
   2c4b8:	tst	r7, #2
   2c4bc:	bne	2c508 <main@@Base+0x167b8>
   2c4c0:	tst	r7, #8
   2c4c4:	bne	2c52c <main@@Base+0x167dc>
   2c4c8:	mov	r0, r4
   2c4cc:	mov	r1, r5
   2c4d0:	pop	{r4, r5, r6, r7, fp, lr}
   2c4d4:	b	3adcc <flatcc_json_printer_delimit_enum_flags@@Base>
   2c4d8:	mov	r0, r4
   2c4dc:	pop	{r4, r5, r6, r7, fp, lr}
   2c4e0:	b	3aad0 <flatcc_json_printer_int8@@Base>
   2c4e4:	movw	r2, #36862	; 0x8ffe
   2c4e8:	mov	r0, r4
   2c4ec:	mov	r1, #0
   2c4f0:	mov	r3, #3
   2c4f4:	movt	r2, #4
   2c4f8:	bl	3ae00 <flatcc_json_printer_enum_flag@@Base>
   2c4fc:	mov	r6, #1
   2c500:	tst	r7, #2
   2c504:	beq	2c4c0 <main@@Base+0x16770>
   2c508:	movw	r2, #36866	; 0x9002
   2c50c:	mov	r0, r4
   2c510:	mov	r1, r6
   2c514:	mov	r3, #5
   2c518:	movt	r2, #4
   2c51c:	bl	3ae00 <flatcc_json_printer_enum_flag@@Base>
   2c520:	add	r6, r6, #1
   2c524:	tst	r7, #8
   2c528:	beq	2c4c8 <main@@Base+0x16778>
   2c52c:	movw	r2, #36872	; 0x9008
   2c530:	mov	r0, r4
   2c534:	mov	r1, r6
   2c538:	mov	r3, #4
   2c53c:	movt	r2, #4
   2c540:	bl	3ae00 <flatcc_json_printer_enum_flag@@Base>
   2c544:	mov	r0, r4
   2c548:	mov	r1, r5
   2c54c:	pop	{r4, r5, r6, r7, fp, lr}
   2c550:	b	3adcc <flatcc_json_printer_delimit_enum_flags@@Base>
   2c554:	sub	r1, r1, #1
   2c558:	cmp	r1, #3
   2c55c:	bhi	2c588 <main@@Base+0x16838>
   2c560:	add	r2, pc, #0
   2c564:	ldr	pc, [r2, r1, lsl #2]
   2c568:	andeq	ip, r2, r8, ror r5
   2c56c:	muleq	r2, r8, r5
   2c570:	andeq	ip, r2, r8, lsr #11
   2c574:			; <UNDEFINED> instruction: 0x0002c5b8
   2c578:	movw	r1, #36877	; 0x900d
   2c57c:	mov	r2, #7
   2c580:	movt	r1, #4
   2c584:	b	3ace0 <flatcc_json_printer_enum@@Base>
   2c588:	movw	r1, #43336	; 0xa948
   2c58c:	mov	r2, #4
   2c590:	movt	r1, #4
   2c594:	b	3ace0 <flatcc_json_printer_enum@@Base>
   2c598:	movw	r1, #36885	; 0x9015
   2c59c:	mov	r2, #23
   2c5a0:	movt	r1, #4
   2c5a4:	b	3ace0 <flatcc_json_printer_enum@@Base>
   2c5a8:	movw	r1, #36909	; 0x902d
   2c5ac:	mov	r2, #8
   2c5b0:	movt	r1, #4
   2c5b4:	b	3ace0 <flatcc_json_printer_enum@@Base>
   2c5b8:	movw	r1, #36918	; 0x9036
   2c5bc:	mov	r2, #3
   2c5c0:	movt	r1, #4
   2c5c4:	b	3ace0 <flatcc_json_printer_enum@@Base>
   2c5c8:	ldrb	r2, [r1, #8]
   2c5cc:	sub	r2, r2, #1
   2c5d0:	uxtb	r3, r2
   2c5d4:	cmp	r3, #3
   2c5d8:	bxhi	lr
   2c5dc:	movw	r3, #37432	; 0x9238
   2c5e0:	sxtb	r2, r2
   2c5e4:	movt	r3, #4
   2c5e8:	ldr	r2, [r3, r2, lsl #2]
   2c5ec:	b	4465c <flatcc_json_printer_union_table@@Base>
   2c5f0:	push	{r4, r5, r6, sl, fp, lr}
   2c5f4:	add	fp, sp, #16
   2c5f8:	sub	sp, sp, #8
   2c5fc:	mov	r5, r0
   2c600:	movw	r0, #36628	; 0x8f14
   2c604:	mov	r4, r1
   2c608:	mov	r6, #1
   2c60c:	mov	r1, #0
   2c610:	mov	r3, #0
   2c614:	movt	r0, #4
   2c618:	mov	r2, r4
   2c61c:	stm	sp, {r0, r6}
   2c620:	mov	r0, r5
   2c624:	bl	3cbbc <flatcc_json_printer_int16_struct_field@@Base>
   2c628:	movw	r0, #37043	; 0x90b3
   2c62c:	mov	r1, #1
   2c630:	mov	r2, r4
   2c634:	mov	r3, #2
   2c638:	movt	r0, #4
   2c63c:	stm	sp, {r0, r6}
   2c640:	mov	r0, r5
   2c644:	bl	3ca98 <flatcc_json_printer_int8_struct_field@@Base>
   2c648:	sub	sp, fp, #16
   2c64c:	pop	{r4, r5, r6, sl, fp, pc}
   2c650:	push	{r4, r5, r6, sl, fp, lr}
   2c654:	add	fp, sp, #16
   2c658:	sub	sp, sp, #16
   2c65c:	movw	r3, #37290	; 0x91aa
   2c660:	mov	r5, r0
   2c664:	mov	r0, #2
   2c668:	mov	r2, #0
   2c66c:	mov	r4, r1
   2c670:	mov	r6, #0
   2c674:	movt	r3, #4
   2c678:	str	r0, [sp]
   2c67c:	mov	r0, r5
   2c680:	bl	3aecc <flatcc_json_printer_string_field@@Base>
   2c684:	movw	r3, #37293	; 0x91ad
   2c688:	mov	r0, #3
   2c68c:	mov	r1, r4
   2c690:	mov	r2, #1
   2c694:	str	r6, [sp, #8]
   2c698:	str	r6, [sp, #12]
   2c69c:	movt	r3, #4
   2c6a0:	str	r0, [sp]
   2c6a4:	mov	r0, r5
   2c6a8:	bl	3ba5c <flatcc_json_printer_int64_field@@Base>
   2c6ac:	movw	r3, #39588	; 0x9aa4
   2c6b0:	mov	r0, #5
   2c6b4:	mov	r1, r4
   2c6b8:	mov	r2, #2
   2c6bc:	movt	r3, #4
   2c6c0:	stm	sp, {r0, r6}
   2c6c4:	mov	r0, r5
   2c6c8:	bl	3b4a0 <flatcc_json_printer_uint16_field@@Base>
   2c6cc:	sub	sp, fp, #16
   2c6d0:	pop	{r4, r5, r6, sl, fp, pc}
   2c6d4:	push	{r4, r5, fp, lr}
   2c6d8:	add	fp, sp, #8
   2c6dc:	sub	sp, sp, #8
   2c6e0:	mov	r4, r1
   2c6e4:	movw	r1, #37290	; 0x91aa
   2c6e8:	mov	r5, r0
   2c6ec:	mov	r0, #2
   2c6f0:	mov	r3, #0
   2c6f4:	movt	r1, #4
   2c6f8:	str	r0, [sp, #4]
   2c6fc:	mov	r0, r5
   2c700:	mov	r2, r4
   2c704:	str	r1, [sp]
   2c708:	mov	r1, #0
   2c70c:	bl	3c9d8 <flatcc_json_printer_uint32_struct_field@@Base>
   2c710:	movw	r1, #37297	; 0x91b1
   2c714:	mov	r0, #8
   2c718:	mov	r2, r4
   2c71c:	mov	r3, #4
   2c720:	movt	r1, #4
   2c724:	str	r0, [sp, #4]
   2c728:	mov	r0, r5
   2c72c:	str	r1, [sp]
   2c730:	mov	r1, #1
   2c734:	bl	3c9d8 <flatcc_json_printer_uint32_struct_field@@Base>
   2c738:	sub	sp, fp, #8
   2c73c:	pop	{r4, r5, fp, pc}
   2c740:	bx	lr
   2c744:	push	{r4, r5, r6, sl, fp, lr}
   2c748:	add	fp, sp, #16
   2c74c:	sub	sp, sp, #8
   2c750:	movw	r3, #37309	; 0x91bd
   2c754:	mov	r5, r0
   2c758:	mov	r0, #4
   2c75c:	mov	r6, #0
   2c760:	mov	r2, #0
   2c764:	mov	r4, r1
   2c768:	movt	r3, #4
   2c76c:	stm	sp, {r0, r6}
   2c770:	mov	r0, r5
   2c774:	bl	3b158 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2c778:	movw	r3, #37306	; 0x91ba
   2c77c:	mov	r0, #1
   2c780:	mov	r1, #7
   2c784:	mov	r2, #1
   2c788:	movt	r3, #4
   2c78c:	str	r1, [sp]
   2c790:	str	r0, [sp, #4]
   2c794:	mov	r0, r5
   2c798:	mov	r1, r4
   2c79c:	bl	3b158 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2c7a0:	movw	r3, #37314	; 0x91c2
   2c7a4:	mov	r0, #6
   2c7a8:	mov	r1, r4
   2c7ac:	mov	r2, #2
   2c7b0:	movt	r3, #4
   2c7b4:	stm	sp, {r0, r6}
   2c7b8:	mov	r0, r5
   2c7bc:	bl	3b158 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2c7c0:	sub	sp, fp, #16
   2c7c4:	pop	{r4, r5, r6, sl, fp, pc}
   2c7c8:	push	{r4, r5, r6, r7, fp, lr}
   2c7cc:	add	fp, sp, #16
   2c7d0:	sub	sp, sp, #16
   2c7d4:	movw	r3, #36450	; 0x8e62
   2c7d8:	movw	r7, #50288	; 0xc470
   2c7dc:	mov	r5, r0
   2c7e0:	mov	r0, #5
   2c7e4:	mov	r6, #2
   2c7e8:	mov	r2, #0
   2c7ec:	mov	r4, r1
   2c7f0:	movt	r3, #4
   2c7f4:	movt	r7, #2
   2c7f8:	stm	sp, {r0, r6, r7}
   2c7fc:	mov	r0, r5
   2c800:	bl	3c258 <flatcc_json_printer_int8_enum_field@@Base>
   2c804:	movw	r3, #36922	; 0x903a
   2c808:	mov	r0, #6
   2c80c:	mov	r1, r4
   2c810:	mov	r2, #1
   2c814:	movt	r3, #4
   2c818:	stm	sp, {r0, r6, r7}
   2c81c:	mov	r0, r5
   2c820:	bl	3c258 <flatcc_json_printer_int8_enum_field@@Base>
   2c824:	movw	r3, #36929	; 0x9041
   2c828:	mov	r0, r5
   2c82c:	mov	r1, r4
   2c830:	mov	r2, #2
   2c834:	str	r6, [sp]
   2c838:	str	r6, [sp, #4]
   2c83c:	movt	r3, #4
   2c840:	bl	3b340 <flatcc_json_printer_uint8_field@@Base>
   2c844:	movw	r3, #36932	; 0x9044
   2c848:	mov	r0, #3
   2c84c:	mov	r1, r4
   2c850:	mov	r2, #3
   2c854:	movt	r3, #4
   2c858:	stm	sp, {r0, r6}
   2c85c:	mov	r0, r5
   2c860:	bl	3b340 <flatcc_json_printer_uint8_field@@Base>
   2c864:	sub	sp, fp, #16
   2c868:	pop	{r4, r5, r6, r7, fp, pc}
   2c86c:	bx	lr
   2c870:	push	{r4, r5, fp, lr}
   2c874:	add	fp, sp, #8
   2c878:	sub	sp, sp, #16
   2c87c:	mov	r5, r0
   2c880:	movw	r0, #51484	; 0xc91c
   2c884:	movw	r3, #36936	; 0x9048
   2c888:	mov	r4, r1
   2c88c:	mov	r1, #6
   2c890:	mov	r2, #0
   2c894:	movt	r0, #2
   2c898:	movt	r3, #4
   2c89c:	str	r1, [sp]
   2c8a0:	mov	r1, r4
   2c8a4:	str	r0, [sp, #4]
   2c8a8:	mov	r0, r5
   2c8ac:	bl	43f78 <flatcc_json_printer_table_field@@Base>
   2c8b0:	movw	r0, #51640	; 0xc9b8
   2c8b4:	movw	r3, #36943	; 0x904f
   2c8b8:	mov	r1, #5
   2c8bc:	mov	r2, #1
   2c8c0:	movt	r0, #2
   2c8c4:	movt	r3, #4
   2c8c8:	str	r1, [sp]
   2c8cc:	mov	r1, r4
   2c8d0:	str	r0, [sp, #4]
   2c8d4:	mov	r0, r5
   2c8d8:	bl	43f78 <flatcc_json_printer_table_field@@Base>
   2c8dc:	movw	r0, #50632	; 0xc5c8
   2c8e0:	movw	r1, #50516	; 0xc554
   2c8e4:	movw	r3, #36949	; 0x9055
   2c8e8:	mov	r2, #7
   2c8ec:	movt	r0, #2
   2c8f0:	movt	r1, #2
   2c8f4:	movt	r3, #4
   2c8f8:	str	r2, [sp]
   2c8fc:	mov	r2, #3
   2c900:	str	r1, [sp, #4]
   2c904:	str	r0, [sp, #8]
   2c908:	mov	r0, r5
   2c90c:	mov	r1, r4
   2c910:	bl	43ba8 <flatcc_json_printer_union_vector_field@@Base>
   2c914:	sub	sp, fp, #8
   2c918:	pop	{r4, r5, fp, pc}
   2c91c:	push	{r4, r5, r6, sl, fp, lr}
   2c920:	add	fp, sp, #16
   2c924:	sub	sp, sp, #8
   2c928:	mov	r5, r0
   2c92c:	movw	r0, #51868	; 0xca9c
   2c930:	movw	r3, #36957	; 0x905d
   2c934:	mov	r4, r1
   2c938:	mov	r1, #21
   2c93c:	mov	r2, #0
   2c940:	movt	r0, #2
   2c944:	movt	r3, #4
   2c948:	str	r1, [sp]
   2c94c:	mov	r1, r4
   2c950:	str	r0, [sp, #4]
   2c954:	mov	r0, r5
   2c958:	bl	43f78 <flatcc_json_printer_table_field@@Base>
   2c95c:	movw	r0, #52192	; 0xcbe0
   2c960:	movw	r3, #36979	; 0x9073
   2c964:	mov	r6, #22
   2c968:	mov	r1, r4
   2c96c:	mov	r2, #1
   2c970:	movt	r0, #2
   2c974:	movt	r3, #4
   2c978:	str	r6, [sp]
   2c97c:	str	r0, [sp, #4]
   2c980:	mov	r0, r5
   2c984:	bl	43f78 <flatcc_json_printer_table_field@@Base>
   2c988:	movw	r0, #52292	; 0xcc44
   2c98c:	movw	r3, #37002	; 0x908a
   2c990:	mov	r1, r4
   2c994:	mov	r2, #2
   2c998:	str	r6, [sp]
   2c99c:	movt	r0, #2
   2c9a0:	movt	r3, #4
   2c9a4:	str	r0, [sp, #4]
   2c9a8:	mov	r0, r5
   2c9ac:	bl	43f78 <flatcc_json_printer_table_field@@Base>
   2c9b0:	sub	sp, fp, #16
   2c9b4:	pop	{r4, r5, r6, sl, fp, pc}
   2c9b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2c9bc:	add	fp, sp, #24
   2c9c0:	sub	sp, sp, #16
   2c9c4:	movw	r6, #52572	; 0xcd5c
   2c9c8:	movw	r3, #37152	; 0x9120
   2c9cc:	movw	r7, #52392	; 0xcca8
   2c9d0:	mov	r5, r0
   2c9d4:	mov	r0, #14
   2c9d8:	mov	r2, #1
   2c9dc:	mov	r4, r1
   2c9e0:	movt	r6, #2
   2c9e4:	movt	r3, #4
   2c9e8:	movt	r7, #2
   2c9ec:	stm	sp, {r0, r7}
   2c9f0:	mov	r0, r5
   2c9f4:	str	r6, [sp, #8]
   2c9f8:	bl	44164 <flatcc_json_printer_union_field@@Base>
   2c9fc:	movw	r3, #37167	; 0x912f
   2ca00:	mov	r8, #10
   2ca04:	mov	r0, r5
   2ca08:	mov	r1, r4
   2ca0c:	mov	r2, #3
   2ca10:	str	r7, [sp, #4]
   2ca14:	str	r6, [sp, #8]
   2ca18:	movt	r3, #4
   2ca1c:	str	r8, [sp]
   2ca20:	bl	44164 <flatcc_json_printer_union_field@@Base>
   2ca24:	movw	r3, #37178	; 0x913a
   2ca28:	mov	r0, #9
   2ca2c:	mov	r1, r4
   2ca30:	mov	r2, #5
   2ca34:	mov	r9, #5
   2ca38:	movt	r3, #4
   2ca3c:	stm	sp, {r0, r7}
   2ca40:	mov	r0, r5
   2ca44:	str	r6, [sp, #8]
   2ca48:	bl	44164 <flatcc_json_printer_union_field@@Base>
   2ca4c:	movw	r3, #37188	; 0x9144
   2ca50:	mov	r0, r5
   2ca54:	mov	r1, r4
   2ca58:	mov	r2, #7
   2ca5c:	str	r9, [sp]
   2ca60:	str	r7, [sp, #4]
   2ca64:	str	r6, [sp, #8]
   2ca68:	movt	r3, #4
   2ca6c:	bl	44164 <flatcc_json_printer_union_field@@Base>
   2ca70:	movw	r3, #37194	; 0x914a
   2ca74:	mov	r0, r5
   2ca78:	mov	r1, r4
   2ca7c:	mov	r2, #9
   2ca80:	str	r8, [sp]
   2ca84:	str	r7, [sp, #4]
   2ca88:	str	r6, [sp, #8]
   2ca8c:	movt	r3, #4
   2ca90:	bl	43ba8 <flatcc_json_printer_union_vector_field@@Base>
   2ca94:	sub	sp, fp, #24
   2ca98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ca9c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2caa0:	add	fp, sp, #24
   2caa4:	sub	sp, sp, #16
   2caa8:	movw	r3, #37025	; 0x90a1
   2caac:	mov	r9, #4
   2cab0:	mov	r2, #0
   2cab4:	mov	r4, r1
   2cab8:	mov	r5, r0
   2cabc:	mov	r6, #0
   2cac0:	movt	r3, #4
   2cac4:	str	r9, [sp]
   2cac8:	bl	3aecc <flatcc_json_printer_string_field@@Base>
   2cacc:	movw	r3, #37030	; 0x90a6
   2cad0:	mov	r8, #9
   2cad4:	mov	r0, r5
   2cad8:	mov	r1, r4
   2cadc:	mov	r2, #1
   2cae0:	str	r6, [sp, #4]
   2cae4:	movt	r3, #4
   2cae8:	str	r8, [sp]
   2caec:	bl	3b564 <flatcc_json_printer_uint32_field@@Base>
   2caf0:	movw	r3, #37040	; 0x90b0
   2caf4:	mov	r0, r5
   2caf8:	mov	r1, r4
   2cafc:	mov	r2, #2
   2cb00:	str	r9, [sp]
   2cb04:	movt	r3, #4
   2cb08:	bl	3aecc <flatcc_json_printer_string_field@@Base>
   2cb0c:	movw	r3, #37045	; 0x90b5
   2cb10:	mov	r7, #8
   2cb14:	mov	r0, r5
   2cb18:	mov	r1, r4
   2cb1c:	mov	r2, #3
   2cb20:	str	r6, [sp, #8]
   2cb24:	str	r6, [sp, #12]
   2cb28:	movt	r3, #4
   2cb2c:	str	r7, [sp]
   2cb30:	bl	3ba5c <flatcc_json_printer_int64_field@@Base>
   2cb34:	movw	r3, #37054	; 0x90be
   2cb38:	mov	r0, r5
   2cb3c:	mov	r1, r4
   2cb40:	mov	r2, #4
   2cb44:	str	r9, [sp]
   2cb48:	movt	r3, #4
   2cb4c:	bl	3aecc <flatcc_json_printer_string_field@@Base>
   2cb50:	movw	r3, #37059	; 0x90c3
   2cb54:	mov	r0, r5
   2cb58:	mov	r1, r4
   2cb5c:	mov	r2, #5
   2cb60:	str	r6, [sp, #8]
   2cb64:	str	r6, [sp, #12]
   2cb68:	str	r7, [sp]
   2cb6c:	movt	r3, #4
   2cb70:	bl	3ba5c <flatcc_json_printer_int64_field@@Base>
   2cb74:	movw	r3, #37068	; 0x90cc
   2cb78:	mov	r0, r5
   2cb7c:	mov	r1, r4
   2cb80:	mov	r2, #6
   2cb84:	str	r8, [sp]
   2cb88:	str	r6, [sp, #4]
   2cb8c:	movt	r3, #4
   2cb90:	bl	3b564 <flatcc_json_printer_uint32_field@@Base>
   2cb94:	movw	r3, #37078	; 0x90d6
   2cb98:	mov	r0, r5
   2cb9c:	mov	r1, r4
   2cba0:	mov	r2, #7
   2cba4:	str	r6, [sp, #8]
   2cba8:	str	r6, [sp, #12]
   2cbac:	str	r7, [sp]
   2cbb0:	movt	r3, #4
   2cbb4:	bl	3ba5c <flatcc_json_printer_int64_field@@Base>
   2cbb8:	movw	r3, #37087	; 0x90df
   2cbbc:	mov	r0, r5
   2cbc0:	mov	r1, r4
   2cbc4:	mov	r2, #8
   2cbc8:	str	r8, [sp]
   2cbcc:	str	r6, [sp, #4]
   2cbd0:	movt	r3, #4
   2cbd4:	bl	3b564 <flatcc_json_printer_uint32_field@@Base>
   2cbd8:	sub	sp, fp, #24
   2cbdc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2cbe0:	push	{r4, r5, r6, sl, fp, lr}
   2cbe4:	add	fp, sp, #16
   2cbe8:	sub	sp, sp, #16
   2cbec:	movw	r3, #37097	; 0x90e9
   2cbf0:	mov	r5, r0
   2cbf4:	mov	r0, #15
   2cbf8:	mov	r6, #0
   2cbfc:	mov	r2, #0
   2cc00:	mov	r4, r1
   2cc04:	movt	r3, #4
   2cc08:	str	r0, [sp]
   2cc0c:	mov	r0, r5
   2cc10:	str	r6, [sp, #8]
   2cc14:	str	r6, [sp, #12]
   2cc18:	bl	3ba5c <flatcc_json_printer_int64_field@@Base>
   2cc1c:	movw	r3, #37113	; 0x90f9
   2cc20:	mov	r0, #16
   2cc24:	mov	r1, r4
   2cc28:	mov	r2, #1
   2cc2c:	movt	r3, #4
   2cc30:	stm	sp, {r0, r6}
   2cc34:	mov	r0, r5
   2cc38:	bl	3b564 <flatcc_json_printer_uint32_field@@Base>
   2cc3c:	sub	sp, fp, #16
   2cc40:	pop	{r4, r5, r6, sl, fp, pc}
   2cc44:	push	{r4, r5, r6, sl, fp, lr}
   2cc48:	add	fp, sp, #16
   2cc4c:	sub	sp, sp, #16
   2cc50:	movw	r3, #37097	; 0x90e9
   2cc54:	mov	r5, r0
   2cc58:	mov	r0, #15
   2cc5c:	mov	r6, #0
   2cc60:	mov	r2, #0
   2cc64:	mov	r4, r1
   2cc68:	movt	r3, #4
   2cc6c:	str	r0, [sp]
   2cc70:	mov	r0, r5
   2cc74:	str	r6, [sp, #8]
   2cc78:	str	r6, [sp, #12]
   2cc7c:	bl	3ba5c <flatcc_json_printer_int64_field@@Base>
   2cc80:	movw	r3, #37130	; 0x910a
   2cc84:	mov	r0, #21
   2cc88:	mov	r1, r4
   2cc8c:	mov	r2, #1
   2cc90:	movt	r3, #4
   2cc94:	stm	sp, {r0, r6}
   2cc98:	mov	r0, r5
   2cc9c:	bl	3b564 <flatcc_json_printer_uint32_field@@Base>
   2cca0:	sub	sp, fp, #16
   2cca4:	pop	{r4, r5, r6, sl, fp, pc}
   2cca8:	sub	r2, r1, #2
   2ccac:	cmp	r2, #9
   2ccb0:	bhi	2ccf4 <main@@Base+0x16fa4>
   2ccb4:	add	r1, pc, #0
   2ccb8:	ldr	pc, [r1, r2, lsl #2]
   2ccbc:	andeq	ip, r2, r4, ror #25
   2ccc0:	andeq	ip, r2, ip, lsl #26
   2ccc4:	andeq	ip, r2, ip, lsl #26
   2ccc8:	andeq	ip, r2, ip, lsl #26
   2cccc:	andeq	ip, r2, ip, lsl #26
   2ccd0:	andeq	ip, r2, ip, lsl #26
   2ccd4:	andeq	ip, r2, ip, lsl sp
   2ccd8:	andeq	ip, r2, ip, lsr #26
   2ccdc:	andeq	ip, r2, ip, lsr sp
   2cce0:	andeq	ip, r2, ip, asr #26
   2cce4:	movw	r1, #37205	; 0x9155
   2cce8:	mov	r2, #5
   2ccec:	movt	r1, #4
   2ccf0:	b	3ace0 <flatcc_json_printer_enum@@Base>
   2ccf4:	cmp	r1, #255	; 0xff
   2ccf8:	bne	2cd0c <main@@Base+0x16fbc>
   2ccfc:	movw	r1, #37240	; 0x9178
   2cd00:	mov	r2, #6
   2cd04:	movt	r1, #4
   2cd08:	b	3ace0 <flatcc_json_printer_enum@@Base>
   2cd0c:	movw	r1, #43336	; 0xa948
   2cd10:	mov	r2, #4
   2cd14:	movt	r1, #4
   2cd18:	b	3ace0 <flatcc_json_printer_enum@@Base>
   2cd1c:	movw	r1, #37211	; 0x915b
   2cd20:	mov	r2, #8
   2cd24:	movt	r1, #4
   2cd28:	b	3ace0 <flatcc_json_printer_enum@@Base>
   2cd2c:	movw	r1, #37220	; 0x9164
   2cd30:	mov	r2, #5
   2cd34:	movt	r1, #4
   2cd38:	b	3ace0 <flatcc_json_printer_enum@@Base>
   2cd3c:	movw	r1, #37226	; 0x916a
   2cd40:	mov	r2, #7
   2cd44:	movt	r1, #4
   2cd48:	b	3ace0 <flatcc_json_printer_enum@@Base>
   2cd4c:	movw	r1, #37234	; 0x9172
   2cd50:	mov	r2, #5
   2cd54:	movt	r1, #4
   2cd58:	b	3ace0 <flatcc_json_printer_enum@@Base>
   2cd5c:	ldrb	r3, [r1, #8]
   2cd60:	sub	r2, r3, #2
   2cd64:	cmp	r2, #9
   2cd68:	bhi	2cda8 <main@@Base+0x17058>
   2cd6c:	add	r3, pc, #0
   2cd70:	ldr	pc, [r3, r2, lsl #2]
   2cd74:			; <UNDEFINED> instruction: 0x0002cdb4
   2cd78:	andeq	ip, r2, ip, asr #27
   2cd7c:	andeq	ip, r2, ip, asr #27
   2cd80:	andeq	ip, r2, ip, asr #27
   2cd84:	andeq	ip, r2, ip, asr #27
   2cd88:	andeq	ip, r2, ip, asr #27
   2cd8c:	andeq	ip, r2, r0, asr #27
   2cd90:	muleq	r2, ip, sp
   2cd94:	muleq	r2, ip, sp
   2cd98:			; <UNDEFINED> instruction: 0x0002cdb0
   2cd9c:	movw	r2, #52796	; 0xce3c
   2cda0:	movt	r2, #2
   2cda4:	b	447dc <flatcc_json_printer_union_struct@@Base>
   2cda8:	cmp	r3, #255	; 0xff
   2cdac:	bxne	lr
   2cdb0:	b	448fc <flatcc_json_printer_union_string@@Base>
   2cdb4:	movw	r2, #52688	; 0xcdd0
   2cdb8:	movt	r2, #2
   2cdbc:	b	4465c <flatcc_json_printer_union_table@@Base>
   2cdc0:	movw	r2, #52740	; 0xce04
   2cdc4:	movt	r2, #2
   2cdc8:	b	447dc <flatcc_json_printer_union_struct@@Base>
   2cdcc:	bx	lr
   2cdd0:	push	{fp, lr}
   2cdd4:	mov	fp, sp
   2cdd8:	sub	sp, sp, #8
   2cddc:	mov	r3, #19
   2cde0:	mov	r2, #0
   2cde4:	str	r3, [sp]
   2cde8:	movw	r3, #37247	; 0x917f
   2cdec:	str	r2, [sp, #4]
   2cdf0:	mov	r2, #0
   2cdf4:	movt	r3, #4
   2cdf8:	bl	3b980 <flatcc_json_printer_int32_field@@Base>
   2cdfc:	mov	sp, fp
   2ce00:	pop	{fp, pc}
   2ce04:	push	{fp, lr}
   2ce08:	mov	fp, sp
   2ce0c:	sub	sp, sp, #8
   2ce10:	movw	r3, #37267	; 0x9193
   2ce14:	mov	r2, r1
   2ce18:	mov	r1, #11
   2ce1c:	movt	r3, #4
   2ce20:	str	r1, [sp, #4]
   2ce24:	mov	r1, #0
   2ce28:	str	r3, [sp]
   2ce2c:	mov	r3, #0
   2ce30:	bl	3c978 <flatcc_json_printer_uint16_struct_field@@Base>
   2ce34:	mov	sp, fp
   2ce38:	pop	{fp, pc}
   2ce3c:	push	{fp, lr}
   2ce40:	mov	fp, sp
   2ce44:	sub	sp, sp, #8
   2ce48:	movw	r3, #37279	; 0x919f
   2ce4c:	mov	r2, r1
   2ce50:	mov	r1, #10
   2ce54:	movt	r3, #4
   2ce58:	str	r1, [sp, #4]
   2ce5c:	mov	r1, #0
   2ce60:	str	r3, [sp]
   2ce64:	mov	r3, #0
   2ce68:	bl	3cc38 <flatcc_json_printer_int32_struct_field@@Base>
   2ce6c:	mov	sp, fp
   2ce70:	pop	{fp, pc}
   2ce74:	ldrb	r1, [r0, #12]
   2ce78:	sub	r1, r1, #1
   2ce7c:	uxtb	r2, r1
   2ce80:	cmp	r2, #3
   2ce84:	movhi	r0, #0
   2ce88:	bxhi	lr
   2ce8c:	movw	r2, #37448	; 0x9248
   2ce90:	sxtb	r1, r1
   2ce94:	movt	r2, #4
   2ce98:	ldr	r1, [r2, r1, lsl #2]
   2ce9c:	b	32f2c <flatcc_verify_union_table@@Base>
   2cea0:	push	{r4, sl, fp, lr}
   2cea4:	add	fp, sp, #8
   2cea8:	mov	r1, #0
   2ceac:	mov	r2, #0
   2ceb0:	mov	r4, r0
   2ceb4:	bl	32780 <flatcc_verify_string_field@@Base>
   2ceb8:	cmp	r0, #0
   2cebc:	popne	{r4, sl, fp, pc}
   2cec0:	mov	r0, r4
   2cec4:	mov	r1, #1
   2cec8:	mov	r2, #8
   2cecc:	mov	r3, #8
   2ced0:	bl	326fc <flatcc_verify_field@@Base>
   2ced4:	cmp	r0, #0
   2ced8:	beq	2cee0 <main@@Base+0x17190>
   2cedc:	pop	{r4, sl, fp, pc}
   2cee0:	mov	r0, r4
   2cee4:	mov	r1, #2
   2cee8:	mov	r2, #2
   2ceec:	mov	r3, #2
   2cef0:	pop	{r4, sl, fp, lr}
   2cef4:	b	326fc <flatcc_verify_field@@Base>
   2cef8:	mov	r0, #0
   2cefc:	bx	lr
   2cf00:	push	{r4, r5, r6, sl, fp, lr}
   2cf04:	add	fp, sp, #16
   2cf08:	sub	sp, sp, #8
   2cf0c:	mvn	r5, #0
   2cf10:	mov	r6, #1
   2cf14:	mov	r1, #0
   2cf18:	mov	r2, #0
   2cf1c:	mov	r3, #1
   2cf20:	mov	r4, r0
   2cf24:	str	r6, [sp]
   2cf28:	str	r5, [sp, #4]
   2cf2c:	bl	32860 <flatcc_verify_vector_field@@Base>
   2cf30:	cmp	r0, #0
   2cf34:	bne	2cf5c <main@@Base+0x1720c>
   2cf38:	mov	r0, r4
   2cf3c:	mov	r1, #1
   2cf40:	mov	r2, #0
   2cf44:	mov	r3, #1
   2cf48:	str	r6, [sp]
   2cf4c:	str	r5, [sp, #4]
   2cf50:	bl	32860 <flatcc_verify_vector_field@@Base>
   2cf54:	cmp	r0, #0
   2cf58:	beq	2cf64 <main@@Base+0x17214>
   2cf5c:	sub	sp, fp, #16
   2cf60:	pop	{r4, r5, r6, sl, fp, pc}
   2cf64:	movw	r0, #1120	; 0x460
   2cf68:	mov	r1, #1
   2cf6c:	mov	r2, #0
   2cf70:	mov	r3, #0
   2cf74:	movt	r0, #2
   2cf78:	str	r1, [sp]
   2cf7c:	mov	r1, #2
   2cf80:	str	r0, [sp, #4]
   2cf84:	mov	r0, r4
   2cf88:	bl	33830 <flatcc_verify_table_as_nested_root@@Base>
   2cf8c:	sub	sp, fp, #16
   2cf90:	pop	{r4, r5, r6, sl, fp, pc}
   2cf94:	push	{r4, sl, fp, lr}
   2cf98:	add	fp, sp, #8
   2cf9c:	mov	r1, #0
   2cfa0:	mov	r2, #1
   2cfa4:	mov	r3, #1
   2cfa8:	mov	r4, r0
   2cfac:	bl	326fc <flatcc_verify_field@@Base>
   2cfb0:	cmp	r0, #0
   2cfb4:	bne	2cff0 <main@@Base+0x172a0>
   2cfb8:	mov	r0, r4
   2cfbc:	mov	r1, #1
   2cfc0:	mov	r2, #1
   2cfc4:	mov	r3, #1
   2cfc8:	bl	326fc <flatcc_verify_field@@Base>
   2cfcc:	cmp	r0, #0
   2cfd0:	popne	{r4, sl, fp, pc}
   2cfd4:	mov	r0, r4
   2cfd8:	mov	r1, #2
   2cfdc:	mov	r2, #1
   2cfe0:	mov	r3, #1
   2cfe4:	bl	326fc <flatcc_verify_field@@Base>
   2cfe8:	cmp	r0, #0
   2cfec:	beq	2cff4 <main@@Base+0x172a4>
   2cff0:	pop	{r4, sl, fp, pc}
   2cff4:	mov	r0, r4
   2cff8:	mov	r1, #3
   2cffc:	mov	r2, #1
   2d000:	mov	r3, #1
   2d004:	pop	{r4, sl, fp, lr}
   2d008:	b	326fc <flatcc_verify_field@@Base>
   2d00c:	mov	r0, #0
   2d010:	bx	lr
   2d014:	push	{r4, sl, fp, lr}
   2d018:	add	fp, sp, #8
   2d01c:	movw	r3, #53372	; 0xd07c
   2d020:	mov	r1, #0
   2d024:	mov	r2, #0
   2d028:	mov	r4, r0
   2d02c:	movt	r3, #2
   2d030:	bl	32ae0 <flatcc_verify_table_field@@Base>
   2d034:	cmp	r0, #0
   2d038:	popne	{r4, sl, fp, pc}
   2d03c:	movw	r3, #53476	; 0xd0e4
   2d040:	mov	r0, r4
   2d044:	mov	r1, #1
   2d048:	mov	r2, #0
   2d04c:	movt	r3, #2
   2d050:	bl	32ae0 <flatcc_verify_table_field@@Base>
   2d054:	cmp	r0, #0
   2d058:	beq	2d060 <main@@Base+0x17310>
   2d05c:	pop	{r4, sl, fp, pc}
   2d060:	movw	r3, #52852	; 0xce74
   2d064:	mov	r0, r4
   2d068:	mov	r1, #3
   2d06c:	mov	r2, #0
   2d070:	movt	r3, #2
   2d074:	pop	{r4, sl, fp, lr}
   2d078:	b	33cd8 <flatcc_verify_union_vector_field@@Base>
   2d07c:	push	{r4, sl, fp, lr}
   2d080:	add	fp, sp, #8
   2d084:	movw	r3, #53644	; 0xd18c
   2d088:	mov	r1, #0
   2d08c:	mov	r2, #0
   2d090:	mov	r4, r0
   2d094:	movt	r3, #2
   2d098:	bl	32ae0 <flatcc_verify_table_field@@Base>
   2d09c:	cmp	r0, #0
   2d0a0:	popne	{r4, sl, fp, pc}
   2d0a4:	movw	r3, #53892	; 0xd284
   2d0a8:	mov	r0, r4
   2d0ac:	mov	r1, #1
   2d0b0:	mov	r2, #0
   2d0b4:	movt	r3, #2
   2d0b8:	bl	32ae0 <flatcc_verify_table_field@@Base>
   2d0bc:	cmp	r0, #0
   2d0c0:	beq	2d0c8 <main@@Base+0x17378>
   2d0c4:	pop	{r4, sl, fp, pc}
   2d0c8:	movw	r3, #53952	; 0xd2c0
   2d0cc:	mov	r0, r4
   2d0d0:	mov	r1, #2
   2d0d4:	mov	r2, #0
   2d0d8:	movt	r3, #2
   2d0dc:	pop	{r4, sl, fp, lr}
   2d0e0:	b	32ae0 <flatcc_verify_table_field@@Base>
   2d0e4:	push	{r4, sl, fp, lr}
   2d0e8:	add	fp, sp, #8
   2d0ec:	movw	r3, #54012	; 0xd2fc
   2d0f0:	mov	r1, #1
   2d0f4:	mov	r2, #0
   2d0f8:	mov	r4, r0
   2d0fc:	movt	r3, #2
   2d100:	bl	33b50 <flatcc_verify_union_field@@Base>
   2d104:	cmp	r0, #0
   2d108:	bne	2d16c <main@@Base+0x1741c>
   2d10c:	movw	r3, #54012	; 0xd2fc
   2d110:	mov	r0, r4
   2d114:	mov	r1, #3
   2d118:	mov	r2, #0
   2d11c:	movt	r3, #2
   2d120:	bl	33b50 <flatcc_verify_union_field@@Base>
   2d124:	cmp	r0, #0
   2d128:	bne	2d16c <main@@Base+0x1741c>
   2d12c:	movw	r3, #54012	; 0xd2fc
   2d130:	mov	r0, r4
   2d134:	mov	r1, #5
   2d138:	mov	r2, #0
   2d13c:	movt	r3, #2
   2d140:	bl	33b50 <flatcc_verify_union_field@@Base>
   2d144:	cmp	r0, #0
   2d148:	popne	{r4, sl, fp, pc}
   2d14c:	movw	r3, #54012	; 0xd2fc
   2d150:	mov	r0, r4
   2d154:	mov	r1, #7
   2d158:	mov	r2, #0
   2d15c:	movt	r3, #2
   2d160:	bl	33b50 <flatcc_verify_union_field@@Base>
   2d164:	cmp	r0, #0
   2d168:	beq	2d170 <main@@Base+0x17420>
   2d16c:	pop	{r4, sl, fp, pc}
   2d170:	movw	r3, #54012	; 0xd2fc
   2d174:	mov	r0, r4
   2d178:	mov	r1, #9
   2d17c:	mov	r2, #0
   2d180:	movt	r3, #2
   2d184:	pop	{r4, sl, fp, lr}
   2d188:	b	33cd8 <flatcc_verify_union_vector_field@@Base>
   2d18c:	push	{r4, sl, fp, lr}
   2d190:	add	fp, sp, #8
   2d194:	mov	r1, #0
   2d198:	mov	r2, #0
   2d19c:	mov	r4, r0
   2d1a0:	bl	32780 <flatcc_verify_string_field@@Base>
   2d1a4:	cmp	r0, #0
   2d1a8:	bne	2d268 <main@@Base+0x17518>
   2d1ac:	mov	r0, r4
   2d1b0:	mov	r1, #1
   2d1b4:	mov	r2, #4
   2d1b8:	mov	r3, #4
   2d1bc:	bl	326fc <flatcc_verify_field@@Base>
   2d1c0:	cmp	r0, #0
   2d1c4:	bne	2d268 <main@@Base+0x17518>
   2d1c8:	mov	r0, r4
   2d1cc:	mov	r1, #2
   2d1d0:	mov	r2, #0
   2d1d4:	bl	32780 <flatcc_verify_string_field@@Base>
   2d1d8:	cmp	r0, #0
   2d1dc:	bne	2d268 <main@@Base+0x17518>
   2d1e0:	mov	r0, r4
   2d1e4:	mov	r1, #3
   2d1e8:	mov	r2, #8
   2d1ec:	mov	r3, #8
   2d1f0:	bl	326fc <flatcc_verify_field@@Base>
   2d1f4:	cmp	r0, #0
   2d1f8:	bne	2d268 <main@@Base+0x17518>
   2d1fc:	mov	r0, r4
   2d200:	mov	r1, #4
   2d204:	mov	r2, #0
   2d208:	bl	32780 <flatcc_verify_string_field@@Base>
   2d20c:	cmp	r0, #0
   2d210:	bne	2d268 <main@@Base+0x17518>
   2d214:	mov	r0, r4
   2d218:	mov	r1, #5
   2d21c:	mov	r2, #8
   2d220:	mov	r3, #8
   2d224:	bl	326fc <flatcc_verify_field@@Base>
   2d228:	cmp	r0, #0
   2d22c:	bne	2d268 <main@@Base+0x17518>
   2d230:	mov	r0, r4
   2d234:	mov	r1, #6
   2d238:	mov	r2, #4
   2d23c:	mov	r3, #4
   2d240:	bl	326fc <flatcc_verify_field@@Base>
   2d244:	cmp	r0, #0
   2d248:	popne	{r4, sl, fp, pc}
   2d24c:	mov	r0, r4
   2d250:	mov	r1, #7
   2d254:	mov	r2, #8
   2d258:	mov	r3, #8
   2d25c:	bl	326fc <flatcc_verify_field@@Base>
   2d260:	cmp	r0, #0
   2d264:	beq	2d26c <main@@Base+0x1751c>
   2d268:	pop	{r4, sl, fp, pc}
   2d26c:	mov	r0, r4
   2d270:	mov	r1, #8
   2d274:	mov	r2, #4
   2d278:	mov	r3, #4
   2d27c:	pop	{r4, sl, fp, lr}
   2d280:	b	326fc <flatcc_verify_field@@Base>
   2d284:	push	{r4, sl, fp, lr}
   2d288:	add	fp, sp, #8
   2d28c:	mov	r1, #0
   2d290:	mov	r2, #8
   2d294:	mov	r3, #8
   2d298:	mov	r4, r0
   2d29c:	bl	326fc <flatcc_verify_field@@Base>
   2d2a0:	cmp	r0, #0
   2d2a4:	popne	{r4, sl, fp, pc}
   2d2a8:	mov	r0, r4
   2d2ac:	mov	r1, #1
   2d2b0:	mov	r2, #4
   2d2b4:	mov	r3, #4
   2d2b8:	pop	{r4, sl, fp, lr}
   2d2bc:	b	326fc <flatcc_verify_field@@Base>
   2d2c0:	push	{r4, sl, fp, lr}
   2d2c4:	add	fp, sp, #8
   2d2c8:	mov	r1, #0
   2d2cc:	mov	r2, #8
   2d2d0:	mov	r3, #8
   2d2d4:	mov	r4, r0
   2d2d8:	bl	326fc <flatcc_verify_field@@Base>
   2d2dc:	cmp	r0, #0
   2d2e0:	popne	{r4, sl, fp, pc}
   2d2e4:	mov	r0, r4
   2d2e8:	mov	r1, #1
   2d2ec:	mov	r2, #4
   2d2f0:	mov	r3, #4
   2d2f4:	pop	{r4, sl, fp, lr}
   2d2f8:	b	326fc <flatcc_verify_field@@Base>
   2d2fc:	ldrb	r2, [r0, #12]
   2d300:	sub	r1, r2, #2
   2d304:	cmp	r1, #9
   2d308:	bhi	2d348 <main@@Base+0x175f8>
   2d30c:	add	r2, pc, #0
   2d310:	ldr	pc, [r2, r1, lsl #2]
   2d314:	andeq	sp, r2, ip, asr r3
   2d318:	andeq	sp, r2, r4, asr r3
   2d31c:	andeq	sp, r2, r4, asr r3
   2d320:	andeq	sp, r2, r4, asr r3
   2d324:	andeq	sp, r2, r4, asr r3
   2d328:	andeq	sp, r2, r4, asr r3
   2d32c:	andeq	sp, r2, r8, ror #6
   2d330:	andeq	sp, r2, ip, lsr r3
   2d334:	andeq	sp, r2, ip, lsr r3
   2d338:	andeq	sp, r2, r0, asr r3
   2d33c:	mov	r1, #4
   2d340:	mov	r2, #4
   2d344:	b	33018 <flatcc_verify_union_struct@@Base>
   2d348:	cmp	r2, #255	; 0xff
   2d34c:	bne	2d354 <main@@Base+0x17604>
   2d350:	b	33070 <flatcc_verify_union_string@@Base>
   2d354:	mov	r0, #0
   2d358:	bx	lr
   2d35c:	movw	r1, #54132	; 0xd374
   2d360:	movt	r1, #2
   2d364:	b	32f2c <flatcc_verify_union_table@@Base>
   2d368:	mov	r1, #2
   2d36c:	mov	r2, #2
   2d370:	b	33018 <flatcc_verify_union_struct@@Base>
   2d374:	mov	r1, #0
   2d378:	mov	r2, #4
   2d37c:	mov	r3, #4
   2d380:	b	326fc <flatcc_verify_field@@Base>

0002d384 <flatcc_builder_default_alloc@@Base>:
   2d384:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2d388:	add	fp, sp, #24
   2d38c:	mov	r4, r1
   2d390:	cmp	r2, #0
   2d394:	beq	2d3dc <flatcc_builder_default_alloc@@Base+0x58>
   2d398:	ldr	r0, [fp, #8]
   2d39c:	mov	r8, r3
   2d3a0:	sub	r1, r0, #1
   2d3a4:	cmp	r1, #6
   2d3a8:	bhi	2d40c <flatcc_builder_default_alloc@@Base+0x88>
   2d3ac:	add	r3, pc, #4
   2d3b0:	mov	r0, #256	; 0x100
   2d3b4:	ldr	pc, [r3, r1, lsl #2]
   2d3b8:	andeq	sp, r2, r0, lsr #8
   2d3bc:	andeq	sp, r2, ip, lsl #8
   2d3c0:	andeq	sp, r2, ip, lsl #8
   2d3c4:	ldrdeq	sp, [r2], -r4
   2d3c8:	andeq	sp, r2, r4, lsl r4
   2d3cc:	andeq	sp, r2, ip, lsl #8
   2d3d0:	andeq	sp, r2, ip, lsl r4
   2d3d4:	mov	r0, #288	; 0x120
   2d3d8:	b	2d420 <flatcc_builder_default_alloc@@Base+0x9c>
   2d3dc:	ldr	r0, [r4]
   2d3e0:	cmp	r0, #0
   2d3e4:	beq	2d400 <flatcc_builder_default_alloc@@Base+0x7c>
   2d3e8:	bl	14e50 <free@plt>
   2d3ec:	mov	r6, #0
   2d3f0:	mov	r0, r6
   2d3f4:	str	r6, [r4]
   2d3f8:	str	r6, [r4, #4]
   2d3fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d400:	mov	r6, #0
   2d404:	mov	r0, r6
   2d408:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d40c:	mov	r0, #32
   2d410:	b	2d420 <flatcc_builder_default_alloc@@Base+0x9c>
   2d414:	mov	r0, r2
   2d418:	b	2d420 <flatcc_builder_default_alloc@@Base+0x9c>
   2d41c:	mov	r0, #64	; 0x40
   2d420:	mov	r7, r0
   2d424:	lsl	r0, r0, #1
   2d428:	cmp	r7, r2
   2d42c:	bcc	2d420 <flatcc_builder_default_alloc@@Base+0x9c>
   2d430:	ldr	r0, [r4, #4]
   2d434:	mov	r6, #0
   2d438:	cmp	r0, r2
   2d43c:	lsrcs	r0, r0, #1
   2d440:	cmpcs	r0, r7
   2d444:	bcs	2d488 <flatcc_builder_default_alloc@@Base+0x104>
   2d448:	ldr	r0, [r4]
   2d44c:	mov	r1, r7
   2d450:	bl	14e80 <realloc@plt>
   2d454:	cmp	r0, #0
   2d458:	beq	2d490 <flatcc_builder_default_alloc@@Base+0x10c>
   2d45c:	mov	r5, r0
   2d460:	cmp	r8, #0
   2d464:	beq	2d484 <flatcc_builder_default_alloc@@Base+0x100>
   2d468:	ldr	r1, [r4, #4]
   2d46c:	cmp	r7, r1
   2d470:	bls	2d484 <flatcc_builder_default_alloc@@Base+0x100>
   2d474:	add	r0, r5, r1
   2d478:	sub	r2, r7, r1
   2d47c:	mov	r1, #0
   2d480:	bl	14eec <memset@plt>
   2d484:	stm	r4, {r5, r7}
   2d488:	mov	r0, r6
   2d48c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d490:	mvn	r6, #0
   2d494:	mov	r0, r6
   2d498:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002d49c <flatcc_builder_flush_vtable_cache@@Base>:
   2d49c:	push	{r4, r5, fp, lr}
   2d4a0:	add	fp, sp, #8
   2d4a4:	mov	r4, r0
   2d4a8:	ldr	r0, [r0, #116]	; 0x74
   2d4ac:	cmp	r0, #0
   2d4b0:	popeq	{r4, r5, fp, pc}
   2d4b4:	ldr	r0, [r4, #92]	; 0x5c
   2d4b8:	ldr	r2, [r4, #96]	; 0x60
   2d4bc:	mov	r1, #0
   2d4c0:	mov	r5, #0
   2d4c4:	bl	14eec <memset@plt>
   2d4c8:	mov	r0, #16
   2d4cc:	str	r5, [r4, #120]	; 0x78
   2d4d0:	str	r0, [r4, #124]	; 0x7c
   2d4d4:	pop	{r4, r5, fp, pc}

0002d4d8 <flatcc_builder_custom_init@@Base>:
   2d4d8:	push	{r4, r5, r6, r7, fp, lr}
   2d4dc:	add	fp, sp, #16
   2d4e0:	mov	r6, r2
   2d4e4:	mov	r7, r1
   2d4e8:	mov	r1, #0
   2d4ec:	mov	r2, #232	; 0xe8
   2d4f0:	mov	r5, r3
   2d4f4:	mov	r4, r0
   2d4f8:	bl	14eec <memset@plt>
   2d4fc:	ldr	r0, [fp, #8]
   2d500:	cmp	r7, #0
   2d504:	bne	2d51c <flatcc_builder_custom_init@@Base+0x44>
   2d508:	movw	r7, #8892	; 0x22bc
   2d50c:	mov	r1, #1
   2d510:	add	r6, r4, #188	; 0xbc
   2d514:	movt	r7, #3
   2d518:	str	r1, [r4, #184]	; 0xb8
   2d51c:	movw	r1, #54148	; 0xd384
   2d520:	cmp	r5, #0
   2d524:	str	r6, [r4, #36]	; 0x24
   2d528:	str	r0, [r4, #40]	; 0x28
   2d52c:	mov	r0, #0
   2d530:	str	r7, [r4, #44]	; 0x2c
   2d534:	movt	r1, #2
   2d538:	movne	r1, r5
   2d53c:	str	r1, [r4, #48]	; 0x30
   2d540:	pop	{r4, r5, r6, r7, fp, pc}

0002d544 <flatcc_builder_init@@Base>:
   2d544:	push	{r4, r5, fp, lr}
   2d548:	add	fp, sp, #8
   2d54c:	mov	r1, #0
   2d550:	mov	r2, #232	; 0xe8
   2d554:	mov	r4, r0
   2d558:	mov	r5, #0
   2d55c:	bl	14eec <memset@plt>
   2d560:	mov	r0, #1
   2d564:	movw	r1, #8892	; 0x22bc
   2d568:	add	r2, r4, #188	; 0xbc
   2d56c:	str	r0, [r4, #184]	; 0xb8
   2d570:	movw	r0, #54148	; 0xd384
   2d574:	movt	r1, #3
   2d578:	str	r2, [r4, #36]	; 0x24
   2d57c:	str	r5, [r4, #40]	; 0x28
   2d580:	movt	r0, #2
   2d584:	str	r1, [r4, #44]	; 0x2c
   2d588:	str	r0, [r4, #48]	; 0x30
   2d58c:	mov	r0, #0
   2d590:	pop	{r4, r5, fp, pc}

0002d594 <flatcc_builder_custom_reset@@Base>:
   2d594:	push	{r4, r5, r6, sl, fp, lr}
   2d598:	add	fp, sp, #16
   2d59c:	sub	sp, sp, #8
   2d5a0:	mov	r5, r1
   2d5a4:	mov	r4, r0
   2d5a8:	cmp	r2, #0
   2d5ac:	beq	2d60c <flatcc_builder_custom_reset@@Base+0x78>
   2d5b0:	mov	r1, r4
   2d5b4:	ldr	r0, [r1, #52]!	; 0x34
   2d5b8:	cmp	r0, #0
   2d5bc:	beq	2d638 <flatcc_builder_custom_reset@@Base+0xa4>
   2d5c0:	ldr	r0, [r4, #40]	; 0x28
   2d5c4:	ldr	r6, [r4, #48]	; 0x30
   2d5c8:	mov	r2, #0
   2d5cc:	mov	r3, #1
   2d5d0:	str	r2, [sp]
   2d5d4:	mov	r2, #1
   2d5d8:	blx	r6
   2d5dc:	mvn	r6, #0
   2d5e0:	cmp	r0, #0
   2d5e4:	bne	2d8ec <flatcc_builder_custom_reset@@Base+0x358>
   2d5e8:	ldr	r0, [r4, #52]	; 0x34
   2d5ec:	ldr	r2, [r4, #56]	; 0x38
   2d5f0:	mov	r1, #0
   2d5f4:	bl	14eec <memset@plt>
   2d5f8:	mov	r1, r4
   2d5fc:	ldr	r0, [r1, #60]!	; 0x3c
   2d600:	cmp	r0, #0
   2d604:	bne	2d654 <flatcc_builder_custom_reset@@Base+0xc0>
   2d608:	b	2d6a0 <flatcc_builder_custom_reset@@Base+0x10c>
   2d60c:	ldr	r0, [r4, #52]	; 0x34
   2d610:	ldr	r2, [r4, #56]	; 0x38
   2d614:	cmp	r0, #0
   2d618:	beq	2d708 <flatcc_builder_custom_reset@@Base+0x174>
   2d61c:	mov	r1, #0
   2d620:	bl	14eec <memset@plt>
   2d624:	ldr	r0, [r4, #60]	; 0x3c
   2d628:	ldr	r2, [r4, #64]	; 0x40
   2d62c:	cmp	r0, #0
   2d630:	bne	2d720 <flatcc_builder_custom_reset@@Base+0x18c>
   2d634:	b	2d73c <flatcc_builder_custom_reset@@Base+0x1a8>
   2d638:	ldr	r0, [r4, #56]	; 0x38
   2d63c:	cmp	r0, #0
   2d640:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2d644:	mov	r1, r4
   2d648:	ldr	r0, [r1, #60]!	; 0x3c
   2d64c:	cmp	r0, #0
   2d650:	beq	2d6a0 <flatcc_builder_custom_reset@@Base+0x10c>
   2d654:	ldr	r0, [r4, #40]	; 0x28
   2d658:	ldr	r6, [r4, #48]	; 0x30
   2d65c:	mov	r2, #1
   2d660:	mov	r3, #1
   2d664:	str	r2, [sp]
   2d668:	mov	r2, #1
   2d66c:	blx	r6
   2d670:	mvn	r6, #0
   2d674:	cmp	r0, #0
   2d678:	bne	2d8ec <flatcc_builder_custom_reset@@Base+0x358>
   2d67c:	ldr	r0, [r4, #60]	; 0x3c
   2d680:	ldr	r2, [r4, #64]	; 0x40
   2d684:	mov	r1, #0
   2d688:	bl	14eec <memset@plt>
   2d68c:	mov	r1, r4
   2d690:	ldr	r0, [r1, #68]!	; 0x44
   2d694:	cmp	r0, #0
   2d698:	bne	2d6bc <flatcc_builder_custom_reset@@Base+0x128>
   2d69c:	b	2d8f8 <flatcc_builder_custom_reset@@Base+0x364>
   2d6a0:	ldr	r0, [r4, #64]	; 0x40
   2d6a4:	cmp	r0, #0
   2d6a8:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2d6ac:	mov	r1, r4
   2d6b0:	ldr	r0, [r1, #68]!	; 0x44
   2d6b4:	cmp	r0, #0
   2d6b8:	beq	2d8f8 <flatcc_builder_custom_reset@@Base+0x364>
   2d6bc:	ldr	r0, [r4, #40]	; 0x28
   2d6c0:	ldr	r6, [r4, #48]	; 0x30
   2d6c4:	mov	r2, #2
   2d6c8:	mov	r3, #1
   2d6cc:	str	r2, [sp]
   2d6d0:	mov	r2, #1
   2d6d4:	blx	r6
   2d6d8:	mvn	r6, #0
   2d6dc:	cmp	r0, #0
   2d6e0:	bne	2d8ec <flatcc_builder_custom_reset@@Base+0x358>
   2d6e4:	ldr	r0, [r4, #68]	; 0x44
   2d6e8:	ldr	r2, [r4, #72]	; 0x48
   2d6ec:	mov	r1, #0
   2d6f0:	bl	14eec <memset@plt>
   2d6f4:	mov	r1, r4
   2d6f8:	ldr	r0, [r1, #76]!	; 0x4c
   2d6fc:	cmp	r0, #0
   2d700:	bne	2d914 <flatcc_builder_custom_reset@@Base+0x380>
   2d704:	b	2d960 <flatcc_builder_custom_reset@@Base+0x3cc>
   2d708:	cmp	r2, #0
   2d70c:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2d710:	ldr	r0, [r4, #60]	; 0x3c
   2d714:	ldr	r2, [r4, #64]	; 0x40
   2d718:	cmp	r0, #0
   2d71c:	beq	2d73c <flatcc_builder_custom_reset@@Base+0x1a8>
   2d720:	mov	r1, #0
   2d724:	bl	14eec <memset@plt>
   2d728:	ldr	r0, [r4, #68]	; 0x44
   2d72c:	ldr	r2, [r4, #72]	; 0x48
   2d730:	cmp	r0, #0
   2d734:	bne	2d754 <flatcc_builder_custom_reset@@Base+0x1c0>
   2d738:	b	2d770 <flatcc_builder_custom_reset@@Base+0x1dc>
   2d73c:	cmp	r2, #0
   2d740:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2d744:	ldr	r0, [r4, #68]	; 0x44
   2d748:	ldr	r2, [r4, #72]	; 0x48
   2d74c:	cmp	r0, #0
   2d750:	beq	2d770 <flatcc_builder_custom_reset@@Base+0x1dc>
   2d754:	mov	r1, #0
   2d758:	bl	14eec <memset@plt>
   2d75c:	ldr	r0, [r4, #76]	; 0x4c
   2d760:	ldr	r2, [r4, #80]	; 0x50
   2d764:	cmp	r0, #0
   2d768:	bne	2d788 <flatcc_builder_custom_reset@@Base+0x1f4>
   2d76c:	b	2d7a4 <flatcc_builder_custom_reset@@Base+0x210>
   2d770:	cmp	r2, #0
   2d774:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2d778:	ldr	r0, [r4, #76]	; 0x4c
   2d77c:	ldr	r2, [r4, #80]	; 0x50
   2d780:	cmp	r0, #0
   2d784:	beq	2d7a4 <flatcc_builder_custom_reset@@Base+0x210>
   2d788:	mov	r1, #0
   2d78c:	bl	14eec <memset@plt>
   2d790:	ldr	r0, [r4, #84]	; 0x54
   2d794:	ldr	r2, [r4, #88]	; 0x58
   2d798:	cmp	r0, #0
   2d79c:	bne	2d7bc <flatcc_builder_custom_reset@@Base+0x228>
   2d7a0:	b	2d7d8 <flatcc_builder_custom_reset@@Base+0x244>
   2d7a4:	cmp	r2, #0
   2d7a8:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2d7ac:	ldr	r0, [r4, #84]	; 0x54
   2d7b0:	ldr	r2, [r4, #88]	; 0x58
   2d7b4:	cmp	r0, #0
   2d7b8:	beq	2d7d8 <flatcc_builder_custom_reset@@Base+0x244>
   2d7bc:	mov	r1, #0
   2d7c0:	bl	14eec <memset@plt>
   2d7c4:	ldr	r0, [r4, #92]	; 0x5c
   2d7c8:	ldr	r2, [r4, #96]	; 0x60
   2d7cc:	cmp	r0, #0
   2d7d0:	bne	2d7f0 <flatcc_builder_custom_reset@@Base+0x25c>
   2d7d4:	b	2d80c <flatcc_builder_custom_reset@@Base+0x278>
   2d7d8:	cmp	r2, #0
   2d7dc:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2d7e0:	ldr	r0, [r4, #92]	; 0x5c
   2d7e4:	ldr	r2, [r4, #96]	; 0x60
   2d7e8:	cmp	r0, #0
   2d7ec:	beq	2d80c <flatcc_builder_custom_reset@@Base+0x278>
   2d7f0:	mov	r1, #0
   2d7f4:	bl	14eec <memset@plt>
   2d7f8:	ldr	r0, [r4, #100]	; 0x64
   2d7fc:	ldr	r2, [r4, #104]	; 0x68
   2d800:	cmp	r0, #0
   2d804:	bne	2d824 <flatcc_builder_custom_reset@@Base+0x290>
   2d808:	b	2d840 <flatcc_builder_custom_reset@@Base+0x2ac>
   2d80c:	cmp	r2, #0
   2d810:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2d814:	ldr	r0, [r4, #100]	; 0x64
   2d818:	ldr	r2, [r4, #104]	; 0x68
   2d81c:	cmp	r0, #0
   2d820:	beq	2d840 <flatcc_builder_custom_reset@@Base+0x2ac>
   2d824:	mov	r1, #0
   2d828:	bl	14eec <memset@plt>
   2d82c:	ldr	r0, [r4, #108]	; 0x6c
   2d830:	ldr	r2, [r4, #112]	; 0x70
   2d834:	cmp	r0, #0
   2d838:	bne	2d858 <flatcc_builder_custom_reset@@Base+0x2c4>
   2d83c:	b	2d864 <flatcc_builder_custom_reset@@Base+0x2d0>
   2d840:	cmp	r2, #0
   2d844:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2d848:	ldr	r0, [r4, #108]	; 0x6c
   2d84c:	ldr	r2, [r4, #112]	; 0x70
   2d850:	cmp	r0, #0
   2d854:	beq	2d864 <flatcc_builder_custom_reset@@Base+0x2d0>
   2d858:	mov	r1, #0
   2d85c:	bl	14eec <memset@plt>
   2d860:	b	2d86c <flatcc_builder_custom_reset@@Base+0x2d8>
   2d864:	cmp	r2, #0
   2d868:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2d86c:	mov	r0, #0
   2d870:	vmov.i32	q8, #0	; 0x00000000
   2d874:	mov	r6, #0
   2d878:	str	r0, [r4, #120]	; 0x78
   2d87c:	ldr	r1, [r4, #124]	; 0x7c
   2d880:	cmp	r1, #0
   2d884:	movne	r1, #16
   2d888:	strne	r1, [r4, #124]	; 0x7c
   2d88c:	add	r1, r4, #148	; 0x94
   2d890:	str	r0, [r4, #136]	; 0x88
   2d894:	str	r0, [r4, #140]	; 0x8c
   2d898:	strh	r0, [r4, #128]	; 0x80
   2d89c:	str	r0, [r4, #32]
   2d8a0:	cmp	r5, #0
   2d8a4:	vst1.32	{d16-d17}, [r1]
   2d8a8:	ldr	r2, [r4, #60]	; 0x3c
   2d8ac:	ldr	r1, [r4, #52]	; 0x34
   2d8b0:	ldr	r3, [r4, #76]	; 0x4c
   2d8b4:	str	r2, [r4, #16]
   2d8b8:	str	r0, [r4, #20]
   2d8bc:	str	r0, [r4, #24]
   2d8c0:	movne	r0, #0
   2d8c4:	str	r3, [r4]
   2d8c8:	str	r1, [r4, #4]
   2d8cc:	strne	r0, [r4, #172]	; 0xac
   2d8d0:	strne	r0, [r4, #176]	; 0xb0
   2d8d4:	strne	r0, [r4, #180]	; 0xb4
   2d8d8:	ldr	r0, [r4, #184]	; 0xb8
   2d8dc:	cmp	r0, #0
   2d8e0:	beq	2d8ec <flatcc_builder_custom_reset@@Base+0x358>
   2d8e4:	add	r0, r4, #188	; 0xbc
   2d8e8:	bl	32184 <flatcc_emitter_reset@@Base>
   2d8ec:	mov	r0, r6
   2d8f0:	sub	sp, fp, #16
   2d8f4:	pop	{r4, r5, r6, sl, fp, pc}
   2d8f8:	ldr	r0, [r4, #72]	; 0x48
   2d8fc:	cmp	r0, #0
   2d900:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2d904:	mov	r1, r4
   2d908:	ldr	r0, [r1, #76]!	; 0x4c
   2d90c:	cmp	r0, #0
   2d910:	beq	2d960 <flatcc_builder_custom_reset@@Base+0x3cc>
   2d914:	ldr	r0, [r4, #40]	; 0x28
   2d918:	ldr	r6, [r4, #48]	; 0x30
   2d91c:	mov	r2, #3
   2d920:	mov	r3, #1
   2d924:	str	r2, [sp]
   2d928:	mov	r2, #1
   2d92c:	blx	r6
   2d930:	mvn	r6, #0
   2d934:	cmp	r0, #0
   2d938:	bne	2d8ec <flatcc_builder_custom_reset@@Base+0x358>
   2d93c:	ldr	r0, [r4, #76]	; 0x4c
   2d940:	ldr	r2, [r4, #80]	; 0x50
   2d944:	mov	r1, #0
   2d948:	bl	14eec <memset@plt>
   2d94c:	mov	r1, r4
   2d950:	ldr	r0, [r1, #84]!	; 0x54
   2d954:	cmp	r0, #0
   2d958:	bne	2d97c <flatcc_builder_custom_reset@@Base+0x3e8>
   2d95c:	b	2d9c8 <flatcc_builder_custom_reset@@Base+0x434>
   2d960:	ldr	r0, [r4, #80]	; 0x50
   2d964:	cmp	r0, #0
   2d968:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2d96c:	mov	r1, r4
   2d970:	ldr	r0, [r1, #84]!	; 0x54
   2d974:	cmp	r0, #0
   2d978:	beq	2d9c8 <flatcc_builder_custom_reset@@Base+0x434>
   2d97c:	ldr	r0, [r4, #40]	; 0x28
   2d980:	ldr	r6, [r4, #48]	; 0x30
   2d984:	mov	r2, #4
   2d988:	mov	r3, #1
   2d98c:	str	r2, [sp]
   2d990:	mov	r2, #1
   2d994:	blx	r6
   2d998:	mvn	r6, #0
   2d99c:	cmp	r0, #0
   2d9a0:	bne	2d8ec <flatcc_builder_custom_reset@@Base+0x358>
   2d9a4:	ldr	r0, [r4, #84]	; 0x54
   2d9a8:	ldr	r2, [r4, #88]	; 0x58
   2d9ac:	mov	r1, #0
   2d9b0:	bl	14eec <memset@plt>
   2d9b4:	ldr	r0, [r4, #92]	; 0x5c
   2d9b8:	ldr	r2, [r4, #96]	; 0x60
   2d9bc:	cmp	r0, #0
   2d9c0:	bne	2d9e4 <flatcc_builder_custom_reset@@Base+0x450>
   2d9c4:	b	2da00 <flatcc_builder_custom_reset@@Base+0x46c>
   2d9c8:	ldr	r0, [r4, #88]	; 0x58
   2d9cc:	cmp	r0, #0
   2d9d0:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2d9d4:	ldr	r0, [r4, #92]	; 0x5c
   2d9d8:	ldr	r2, [r4, #96]	; 0x60
   2d9dc:	cmp	r0, #0
   2d9e0:	beq	2da00 <flatcc_builder_custom_reset@@Base+0x46c>
   2d9e4:	mov	r1, #0
   2d9e8:	bl	14eec <memset@plt>
   2d9ec:	mov	r1, r4
   2d9f0:	ldr	r0, [r1, #100]!	; 0x64
   2d9f4:	cmp	r0, #0
   2d9f8:	bne	2da18 <flatcc_builder_custom_reset@@Base+0x484>
   2d9fc:	b	2da64 <flatcc_builder_custom_reset@@Base+0x4d0>
   2da00:	cmp	r2, #0
   2da04:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2da08:	mov	r1, r4
   2da0c:	ldr	r0, [r1, #100]!	; 0x64
   2da10:	cmp	r0, #0
   2da14:	beq	2da64 <flatcc_builder_custom_reset@@Base+0x4d0>
   2da18:	ldr	r0, [r4, #40]	; 0x28
   2da1c:	ldr	r6, [r4, #48]	; 0x30
   2da20:	mov	r2, #6
   2da24:	mov	r3, #1
   2da28:	str	r2, [sp]
   2da2c:	mov	r2, #1
   2da30:	blx	r6
   2da34:	mvn	r6, #0
   2da38:	cmp	r0, #0
   2da3c:	bne	2d8ec <flatcc_builder_custom_reset@@Base+0x358>
   2da40:	ldr	r0, [r4, #100]	; 0x64
   2da44:	ldr	r2, [r4, #104]	; 0x68
   2da48:	mov	r1, #0
   2da4c:	bl	14eec <memset@plt>
   2da50:	mov	r1, r4
   2da54:	ldr	r0, [r1, #108]!	; 0x6c
   2da58:	cmp	r0, #0
   2da5c:	bne	2da80 <flatcc_builder_custom_reset@@Base+0x4ec>
   2da60:	b	2dab4 <flatcc_builder_custom_reset@@Base+0x520>
   2da64:	ldr	r0, [r4, #104]	; 0x68
   2da68:	cmp	r0, #0
   2da6c:	bne	2dac0 <flatcc_builder_custom_reset@@Base+0x52c>
   2da70:	mov	r1, r4
   2da74:	ldr	r0, [r1, #108]!	; 0x6c
   2da78:	cmp	r0, #0
   2da7c:	beq	2dab4 <flatcc_builder_custom_reset@@Base+0x520>
   2da80:	ldr	r0, [r4, #40]	; 0x28
   2da84:	ldr	r6, [r4, #48]	; 0x30
   2da88:	mov	r2, #7
   2da8c:	mov	r3, #1
   2da90:	str	r2, [sp]
   2da94:	mov	r2, #1
   2da98:	blx	r6
   2da9c:	mvn	r6, #0
   2daa0:	cmp	r0, #0
   2daa4:	bne	2d8ec <flatcc_builder_custom_reset@@Base+0x358>
   2daa8:	ldr	r0, [r4, #108]	; 0x6c
   2daac:	ldr	r2, [r4, #112]	; 0x70
   2dab0:	b	2d858 <flatcc_builder_custom_reset@@Base+0x2c4>
   2dab4:	ldr	r0, [r4, #112]	; 0x70
   2dab8:	cmp	r0, #0
   2dabc:	beq	2d86c <flatcc_builder_custom_reset@@Base+0x2d8>
   2dac0:	movw	r0, #37976	; 0x9458
   2dac4:	movw	r1, #37994	; 0x946a
   2dac8:	movw	r3, #38064	; 0x94b0
   2dacc:	movw	r2, #434	; 0x1b2
   2dad0:	movt	r0, #4
   2dad4:	movt	r1, #4
   2dad8:	movt	r3, #4
   2dadc:	bl	14f40 <__assert_fail@plt>

0002dae0 <flatcc_builder_reset@@Base>:
   2dae0:	mov	r1, #0
   2dae4:	mov	r2, #0
   2dae8:	b	2d594 <flatcc_builder_custom_reset@@Base>

0002daec <flatcc_builder_clear@@Base>:
   2daec:	push	{r4, sl, fp, lr}
   2daf0:	add	fp, sp, #8
   2daf4:	sub	sp, sp, #8
   2daf8:	mov	r4, r0
   2dafc:	ldr	r0, [r0, #40]	; 0x28
   2db00:	mov	r1, #0
   2db04:	mov	r2, #0
   2db08:	mov	r3, #0
   2db0c:	ldr	ip, [r4, #48]	; 0x30
   2db10:	str	r1, [sp]
   2db14:	add	r1, r4, #52	; 0x34
   2db18:	blx	ip
   2db1c:	ldr	r0, [r4, #40]	; 0x28
   2db20:	ldr	ip, [r4, #48]	; 0x30
   2db24:	mov	r1, #1
   2db28:	mov	r2, #0
   2db2c:	mov	r3, #0
   2db30:	str	r1, [sp]
   2db34:	add	r1, r4, #60	; 0x3c
   2db38:	blx	ip
   2db3c:	ldr	r0, [r4, #40]	; 0x28
   2db40:	ldr	ip, [r4, #48]	; 0x30
   2db44:	mov	r1, #2
   2db48:	mov	r2, #0
   2db4c:	mov	r3, #0
   2db50:	str	r1, [sp]
   2db54:	add	r1, r4, #68	; 0x44
   2db58:	blx	ip
   2db5c:	ldr	r0, [r4, #40]	; 0x28
   2db60:	ldr	ip, [r4, #48]	; 0x30
   2db64:	mov	r1, #3
   2db68:	mov	r2, #0
   2db6c:	mov	r3, #0
   2db70:	str	r1, [sp]
   2db74:	add	r1, r4, #76	; 0x4c
   2db78:	blx	ip
   2db7c:	ldr	r0, [r4, #40]	; 0x28
   2db80:	ldr	ip, [r4, #48]	; 0x30
   2db84:	mov	r1, #4
   2db88:	mov	r2, #0
   2db8c:	mov	r3, #0
   2db90:	str	r1, [sp]
   2db94:	add	r1, r4, #84	; 0x54
   2db98:	blx	ip
   2db9c:	ldr	r0, [r4, #40]	; 0x28
   2dba0:	ldr	ip, [r4, #48]	; 0x30
   2dba4:	mov	r1, #5
   2dba8:	mov	r2, #0
   2dbac:	mov	r3, #0
   2dbb0:	str	r1, [sp]
   2dbb4:	add	r1, r4, #92	; 0x5c
   2dbb8:	blx	ip
   2dbbc:	ldr	r0, [r4, #40]	; 0x28
   2dbc0:	ldr	ip, [r4, #48]	; 0x30
   2dbc4:	mov	r1, #6
   2dbc8:	mov	r2, #0
   2dbcc:	mov	r3, #0
   2dbd0:	str	r1, [sp]
   2dbd4:	add	r1, r4, #100	; 0x64
   2dbd8:	blx	ip
   2dbdc:	ldr	r0, [r4, #40]	; 0x28
   2dbe0:	ldr	ip, [r4, #48]	; 0x30
   2dbe4:	mov	r1, #7
   2dbe8:	mov	r2, #0
   2dbec:	mov	r3, #0
   2dbf0:	str	r1, [sp]
   2dbf4:	add	r1, r4, #108	; 0x6c
   2dbf8:	blx	ip
   2dbfc:	ldr	r0, [r4, #184]	; 0xb8
   2dc00:	cmp	r0, #0
   2dc04:	beq	2dc10 <flatcc_builder_clear@@Base+0x124>
   2dc08:	add	r0, r4, #188	; 0xbc
   2dc0c:	bl	32250 <flatcc_emitter_clear@@Base>
   2dc10:	mov	r0, r4
   2dc14:	mov	r1, #0
   2dc18:	mov	r2, #232	; 0xe8
   2dc1c:	sub	sp, fp, #8
   2dc20:	pop	{r4, sl, fp, lr}
   2dc24:	b	14eec <memset@plt>

0002dc28 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2dc28:	push	{r4, r5, r6, r7, fp, lr}
   2dc2c:	add	fp, sp, #16
   2dc30:	sub	sp, sp, #8
   2dc34:	mov	r4, r0
   2dc38:	ldr	r0, [r0, #112]	; 0x70
   2dc3c:	add	r1, r1, #7
   2dc40:	ldr	r7, [r4, #228]	; 0xe4
   2dc44:	bic	r5, r1, #3
   2dc48:	add	r6, r4, #108	; 0x6c
   2dc4c:	add	r2, r7, r5
   2dc50:	cmp	r2, r0
   2dc54:	bls	2dc7c <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   2dc58:	ldr	r0, [r4, #40]	; 0x28
   2dc5c:	ldr	ip, [r4, #48]	; 0x30
   2dc60:	mov	r1, #7
   2dc64:	mov	r3, #0
   2dc68:	str	r1, [sp]
   2dc6c:	mov	r1, r6
   2dc70:	blx	ip
   2dc74:	cmp	r0, #0
   2dc78:	bne	2dcd0 <flatcc_builder_enter_user_frame_ptr@@Base+0xa8>
   2dc7c:	ldr	r0, [r6]
   2dc80:	adds	r6, r0, r7
   2dc84:	beq	2dcc0 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
   2dc88:	mov	r0, r6
   2dc8c:	mov	r1, #0
   2dc90:	mov	r2, r5
   2dc94:	bl	14eec <memset@plt>
   2dc98:	ldr	r0, [r4, #224]	; 0xe0
   2dc9c:	str	r0, [r6], #4
   2dca0:	ldr	r0, [r4, #228]	; 0xe4
   2dca4:	add	r1, r0, #4
   2dca8:	add	r0, r0, r5
   2dcac:	str	r1, [r4, #224]	; 0xe0
   2dcb0:	str	r0, [r4, #228]	; 0xe4
   2dcb4:	mov	r0, r6
   2dcb8:	sub	sp, fp, #16
   2dcbc:	pop	{r4, r5, r6, r7, fp, pc}
   2dcc0:	mov	r6, #0
   2dcc4:	mov	r0, r6
   2dcc8:	sub	sp, fp, #16
   2dccc:	pop	{r4, r5, r6, r7, fp, pc}
   2dcd0:	movw	r0, #42512	; 0xa610
   2dcd4:	movw	r1, #37994	; 0x946a
   2dcd8:	movw	r3, #42058	; 0xa44a
   2dcdc:	mov	r2, #308	; 0x134
   2dce0:	movt	r0, #4
   2dce4:	movt	r1, #4
   2dce8:	movt	r3, #4
   2dcec:	bl	14f40 <__assert_fail@plt>

0002dcf0 <flatcc_builder_enter_user_frame@@Base>:
   2dcf0:	push	{r4, r5, r6, r7, fp, lr}
   2dcf4:	add	fp, sp, #16
   2dcf8:	sub	sp, sp, #8
   2dcfc:	mov	r4, r0
   2dd00:	ldr	r0, [r0, #112]	; 0x70
   2dd04:	add	r1, r1, #7
   2dd08:	ldr	r7, [r4, #228]	; 0xe4
   2dd0c:	bic	r5, r1, #3
   2dd10:	add	r6, r4, #108	; 0x6c
   2dd14:	add	r2, r7, r5
   2dd18:	cmp	r2, r0
   2dd1c:	bls	2dd44 <flatcc_builder_enter_user_frame@@Base+0x54>
   2dd20:	ldr	r0, [r4, #40]	; 0x28
   2dd24:	ldr	ip, [r4, #48]	; 0x30
   2dd28:	mov	r1, #7
   2dd2c:	mov	r3, #0
   2dd30:	str	r1, [sp]
   2dd34:	mov	r1, r6
   2dd38:	blx	ip
   2dd3c:	cmp	r0, #0
   2dd40:	bne	2dd90 <flatcc_builder_enter_user_frame@@Base+0xa0>
   2dd44:	ldr	r0, [r6]
   2dd48:	adds	r6, r0, r7
   2dd4c:	beq	2dd84 <flatcc_builder_enter_user_frame@@Base+0x94>
   2dd50:	mov	r0, r6
   2dd54:	mov	r1, #0
   2dd58:	mov	r2, r5
   2dd5c:	bl	14eec <memset@plt>
   2dd60:	ldr	r0, [r4, #224]	; 0xe0
   2dd64:	str	r0, [r6]
   2dd68:	ldr	r1, [r4, #228]	; 0xe4
   2dd6c:	add	r0, r1, #4
   2dd70:	add	r1, r1, r5
   2dd74:	str	r0, [r4, #224]	; 0xe0
   2dd78:	str	r1, [r4, #228]	; 0xe4
   2dd7c:	sub	sp, fp, #16
   2dd80:	pop	{r4, r5, r6, r7, fp, pc}
   2dd84:	mov	r0, #0
   2dd88:	sub	sp, fp, #16
   2dd8c:	pop	{r4, r5, r6, r7, fp, pc}
   2dd90:	movw	r0, #42512	; 0xa610
   2dd94:	movw	r1, #37994	; 0x946a
   2dd98:	movw	r3, #42058	; 0xa44a
   2dd9c:	mov	r2, #308	; 0x134
   2dda0:	movt	r0, #4
   2dda4:	movt	r1, #4
   2dda8:	movt	r3, #4
   2ddac:	bl	14f40 <__assert_fail@plt>

0002ddb0 <flatcc_builder_exit_user_frame@@Base>:
   2ddb0:	push	{fp, lr}
   2ddb4:	mov	fp, sp
   2ddb8:	ldr	r1, [r0, #224]	; 0xe0
   2ddbc:	cmp	r1, #0
   2ddc0:	subne	r2, r1, #4
   2ddc4:	strne	r2, [r0, #228]	; 0xe4
   2ddc8:	ldrne	r2, [r0, #108]	; 0x6c
   2ddcc:	addne	r1, r2, r1
   2ddd0:	ldrne	r1, [r1, #-4]
   2ddd4:	strne	r1, [r0, #224]	; 0xe0
   2ddd8:	movne	r0, r1
   2dddc:	popne	{fp, pc}
   2dde0:	movw	r0, #38126	; 0x94ee
   2dde4:	movw	r1, #37994	; 0x946a
   2dde8:	movw	r3, #38151	; 0x9507
   2ddec:	movw	r2, #542	; 0x21e
   2ddf0:	movt	r0, #4
   2ddf4:	movt	r1, #4
   2ddf8:	movt	r3, #4
   2ddfc:	bl	14f40 <__assert_fail@plt>

0002de00 <flatcc_builder_exit_user_frame_at@@Base>:
   2de00:	push	{fp, lr}
   2de04:	mov	fp, sp
   2de08:	ldr	r2, [r0, #224]	; 0xe0
   2de0c:	cmp	r2, r1
   2de10:	bcc	2de5c <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   2de14:	cmp	r1, #0
   2de18:	str	r1, [r0, #224]	; 0xe0
   2de1c:	subne	r2, r1, #4
   2de20:	strne	r2, [r0, #228]	; 0xe4
   2de24:	ldrne	r2, [r0, #108]	; 0x6c
   2de28:	addne	r1, r2, r1
   2de2c:	ldrne	r1, [r1, #-4]
   2de30:	strne	r1, [r0, #224]	; 0xe0
   2de34:	movne	r0, r1
   2de38:	popne	{fp, pc}
   2de3c:	movw	r0, #38126	; 0x94ee
   2de40:	movw	r1, #37994	; 0x946a
   2de44:	movw	r3, #38151	; 0x9507
   2de48:	movw	r2, #542	; 0x21e
   2de4c:	movt	r0, #4
   2de50:	movt	r1, #4
   2de54:	movt	r3, #4
   2de58:	bl	14f40 <__assert_fail@plt>
   2de5c:	movw	r0, #38209	; 0x9541
   2de60:	movw	r1, #37994	; 0x946a
   2de64:	movw	r3, #38240	; 0x9560
   2de68:	movw	r2, #551	; 0x227
   2de6c:	movt	r0, #4
   2de70:	movt	r1, #4
   2de74:	movt	r3, #4
   2de78:	bl	14f40 <__assert_fail@plt>

0002de7c <flatcc_builder_get_current_user_frame@@Base>:
   2de7c:	ldr	r0, [r0, #224]	; 0xe0
   2de80:	bx	lr

0002de84 <flatcc_builder_get_user_frame_ptr@@Base>:
   2de84:	ldr	r0, [r0, #108]	; 0x6c
   2de88:	add	r0, r0, r1
   2de8c:	bx	lr

0002de90 <flatcc_builder_embed_buffer@@Base>:
   2de90:	push	{r4, r5, r6, r7, fp, lr}
   2de94:	add	fp, sp, #16
   2de98:	sub	sp, sp, #88	; 0x58
   2de9c:	mov	r4, r0
   2dea0:	ldr	r0, [fp, #8]
   2dea4:	mov	r5, r3
   2dea8:	mov	r7, r2
   2deac:	mov	r2, r1
   2deb0:	sub	r1, fp, #18
   2deb4:	strh	r0, [fp, #-18]	; 0xffffffee
   2deb8:	mov	r0, r4
   2debc:	ldr	r3, [r4, #152]	; 0x98
   2dec0:	cmp	r3, #0
   2dec4:	movwne	r3, #1
   2dec8:	bl	2e000 <flatcc_builder_embed_buffer@@Base+0x170>
   2decc:	ldr	r1, [fp, #12]
   2ded0:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2ded4:	ldr	r0, [r4, #136]	; 0x88
   2ded8:	mov	r2, #0
   2dedc:	str	r2, [sp, #12]
   2dee0:	str	r2, [sp, #8]
   2dee4:	and	r1, r1, #2
   2dee8:	sub	r3, r3, #1
   2deec:	add	r1, r5, r1, lsl #1
   2def0:	sub	r1, r0, r1
   2def4:	and	r3, r3, r1
   2def8:	add	r1, r3, r5
   2defc:	str	r1, [fp, #-24]	; 0xffffffe8
   2df00:	ldr	r1, [r4, #152]	; 0x98
   2df04:	cmp	r1, #0
   2df08:	mov	r1, #0
   2df0c:	beq	2df2c <flatcc_builder_embed_buffer@@Base+0x9c>
   2df10:	mov	r1, #4
   2df14:	sub	r2, fp, #24
   2df18:	str	r1, [sp, #20]
   2df1c:	str	r2, [sp, #16]
   2df20:	mov	r2, #1
   2df24:	str	r1, [sp, #8]
   2df28:	str	r2, [sp, #12]
   2df2c:	cmp	r5, #0
   2df30:	beq	2df54 <flatcc_builder_embed_buffer@@Base+0xc4>
   2df34:	add	r6, sp, #8
   2df38:	add	r1, r1, r5
   2df3c:	add	r6, r6, r2, lsl #3
   2df40:	add	r2, r2, #1
   2df44:	str	r1, [sp, #8]
   2df48:	str	r7, [r6, #8]
   2df4c:	str	r5, [r6, #12]
   2df50:	str	r2, [sp, #12]
   2df54:	cmp	r3, #0
   2df58:	beq	2df84 <flatcc_builder_embed_buffer@@Base+0xf4>
   2df5c:	add	r7, sp, #8
   2df60:	movw	r6, #37464	; 0x9258
   2df64:	add	r1, r1, r3
   2df68:	add	r7, r7, r2, lsl #3
   2df6c:	movt	r6, #4
   2df70:	add	r2, r2, #1
   2df74:	str	r1, [sp, #8]
   2df78:	str	r6, [r7, #8]
   2df7c:	str	r3, [r7, #12]
   2df80:	str	r2, [sp, #12]
   2df84:	cmp	r1, #0
   2df88:	ble	2dfe0 <flatcc_builder_embed_buffer@@Base+0x150>
   2df8c:	sub	r5, r0, r1
   2df90:	ldr	r0, [r4, #36]	; 0x24
   2df94:	ldr	r7, [r4, #44]	; 0x2c
   2df98:	str	r1, [sp]
   2df9c:	add	r1, sp, #8
   2dfa0:	add	r1, r1, #8
   2dfa4:	mov	r3, r5
   2dfa8:	blx	r7
   2dfac:	cmp	r0, #0
   2dfb0:	streq	r5, [r4, #136]	; 0x88
   2dfb4:	moveq	r0, r5
   2dfb8:	subeq	sp, fp, #16
   2dfbc:	popeq	{r4, r5, r6, r7, fp, pc}
   2dfc0:	movw	r0, #42512	; 0xa610
   2dfc4:	movw	r1, #37994	; 0x946a
   2dfc8:	movw	r3, #42191	; 0xa4cf
   2dfcc:	movw	r2, #651	; 0x28b
   2dfd0:	movt	r0, #4
   2dfd4:	movt	r1, #4
   2dfd8:	movt	r3, #4
   2dfdc:	bl	14f40 <__assert_fail@plt>
   2dfe0:	movw	r0, #42512	; 0xa610
   2dfe4:	movw	r1, #37994	; 0x946a
   2dfe8:	movw	r3, #42191	; 0xa4cf
   2dfec:	movw	r2, #647	; 0x287
   2dff0:	movt	r0, #4
   2dff4:	movt	r1, #4
   2dff8:	movt	r3, #4
   2dffc:	bl	14f40 <__assert_fail@plt>
   2e000:	push	{r4, sl, fp, lr}
   2e004:	add	fp, sp, #8
   2e008:	sub	sp, sp, #80	; 0x50
   2e00c:	cmp	r2, #0
   2e010:	bne	2e020 <flatcc_builder_embed_buffer@@Base+0x190>
   2e014:	ldrh	r2, [r0, #132]	; 0x84
   2e018:	cmp	r2, #0
   2e01c:	movweq	r2, #1
   2e020:	ldrh	r4, [r1]
   2e024:	cmp	r4, #4
   2e028:	movwcc	r4, #4
   2e02c:	cmpcs	r4, r2
   2e030:	bcs	2e040 <flatcc_builder_embed_buffer@@Base+0x1b0>
   2e034:	cmp	r4, r2
   2e038:	movcc	r4, r2
   2e03c:	strh	r4, [r1]
   2e040:	cmp	r3, #0
   2e044:	bne	2e0b8 <flatcc_builder_embed_buffer@@Base+0x228>
   2e048:	ldr	r4, [r0, #140]	; 0x8c
   2e04c:	sub	r1, r2, #1
   2e050:	ands	r1, r4, r1
   2e054:	beq	2e0b8 <flatcc_builder_embed_buffer@@Base+0x228>
   2e058:	movw	r2, #37464	; 0x9258
   2e05c:	str	r1, [sp, #20]
   2e060:	cmn	r1, #1
   2e064:	movt	r2, #4
   2e068:	str	r2, [sp, #16]
   2e06c:	mov	r2, #1
   2e070:	str	r1, [sp, #8]
   2e074:	str	r2, [sp, #12]
   2e078:	add	r2, r4, r1
   2e07c:	str	r2, [r0, #140]	; 0x8c
   2e080:	ble	2e0c0 <flatcc_builder_embed_buffer@@Base+0x230>
   2e084:	ldr	r2, [r0, #36]	; 0x24
   2e088:	ldr	ip, [r0, #44]	; 0x2c
   2e08c:	add	r0, sp, #8
   2e090:	str	r1, [sp]
   2e094:	mov	r3, r4
   2e098:	add	r1, r0, #8
   2e09c:	mov	r0, r2
   2e0a0:	mov	r2, #1
   2e0a4:	blx	ip
   2e0a8:	cmp	r0, #0
   2e0ac:	bne	2e0e0 <flatcc_builder_embed_buffer@@Base+0x250>
   2e0b0:	cmn	r4, #1
   2e0b4:	beq	2e100 <flatcc_builder_embed_buffer@@Base+0x270>
   2e0b8:	sub	sp, fp, #8
   2e0bc:	pop	{r4, sl, fp, pc}
   2e0c0:	movw	r0, #42512	; 0xa610
   2e0c4:	movw	r1, #37994	; 0x946a
   2e0c8:	movw	r3, #42379	; 0xa58b
   2e0cc:	movw	r2, #673	; 0x2a1
   2e0d0:	movt	r0, #4
   2e0d4:	movt	r1, #4
   2e0d8:	movt	r3, #4
   2e0dc:	bl	14f40 <__assert_fail@plt>
   2e0e0:	movw	r0, #42512	; 0xa610
   2e0e4:	movw	r1, #37994	; 0x946a
   2e0e8:	movw	r3, #42379	; 0xa58b
   2e0ec:	movw	r2, #677	; 0x2a5
   2e0f0:	movt	r0, #4
   2e0f4:	movt	r1, #4
   2e0f8:	movt	r3, #4
   2e0fc:	bl	14f40 <__assert_fail@plt>
   2e100:	movw	r0, #42512	; 0xa610
   2e104:	movw	r1, #37994	; 0x946a
   2e108:	movw	r3, #42125	; 0xa48d
   2e10c:	movw	r2, #702	; 0x2be
   2e110:	movt	r0, #4
   2e114:	movt	r1, #4
   2e118:	movt	r3, #4
   2e11c:	bl	14f40 <__assert_fail@plt>

0002e120 <flatcc_builder_create_buffer@@Base>:
   2e120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e124:	add	fp, sp, #28
   2e128:	sub	sp, sp, #100	; 0x64
   2e12c:	ldr	sl, [fp, #12]
   2e130:	mov	r4, r0
   2e134:	ldr	r0, [fp, #8]
   2e138:	mov	r7, r1
   2e13c:	mov	r5, #0
   2e140:	mov	r6, r3
   2e144:	sub	r1, fp, #30
   2e148:	str	r5, [sp, #12]
   2e14c:	and	r9, sl, #1
   2e150:	strh	r0, [fp, #-30]	; 0xffffffe2
   2e154:	mov	r0, r4
   2e158:	mov	r3, r9
   2e15c:	bl	2e000 <flatcc_builder_embed_buffer@@Base+0x170>
   2e160:	ldrh	r0, [r4, #128]	; 0x80
   2e164:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2e168:	str	r6, [sp, #8]
   2e16c:	cmp	r0, r1
   2e170:	strhcc	r1, [r4, #128]	; 0x80
   2e174:	cmp	r7, #0
   2e178:	beq	2e194 <flatcc_builder_create_buffer@@Base+0x74>
   2e17c:	ldr	r5, [r7]
   2e180:	cmp	r5, #0
   2e184:	str	r5, [sp, #12]
   2e188:	movwne	r5, #1
   2e18c:	lsl	r7, r5, #2
   2e190:	b	2e198 <flatcc_builder_create_buffer@@Base+0x78>
   2e194:	mov	r7, #0
   2e198:	ldr	r0, [r4, #136]	; 0x88
   2e19c:	and	r2, sl, #2
   2e1a0:	mov	r3, #0
   2e1a4:	sub	r6, r1, #1
   2e1a8:	ands	ip, sl, #3
   2e1ac:	mov	sl, #4
   2e1b0:	mov	r1, #4
   2e1b4:	str	r3, [sp, #20]
   2e1b8:	str	r3, [sp, #16]
   2e1bc:	sub	r2, r0, r2, lsl #1
   2e1c0:	sub	r2, r2, r7
   2e1c4:	sub	r2, r2, #4
   2e1c8:	beq	2e1ec <flatcc_builder_create_buffer@@Base+0xcc>
   2e1cc:	mov	r1, #4
   2e1d0:	sub	r3, fp, #40	; 0x28
   2e1d4:	str	r1, [sp, #28]
   2e1d8:	str	r3, [sp, #24]
   2e1dc:	str	r1, [sp, #16]
   2e1e0:	mov	r3, #1
   2e1e4:	mov	r1, #8
   2e1e8:	str	r3, [sp, #20]
   2e1ec:	add	lr, sp, #16
   2e1f0:	and	r6, r2, r6
   2e1f4:	sub	r8, fp, #36	; 0x24
   2e1f8:	str	r1, [sp, #16]
   2e1fc:	cmp	r5, #0
   2e200:	add	r2, lr, r3, lsl #3
   2e204:	str	r8, [r2, #8]
   2e208:	str	sl, [r2, #12]
   2e20c:	add	r2, r3, #1
   2e210:	str	r2, [sp, #20]
   2e214:	beq	2e238 <flatcc_builder_create_buffer@@Base+0x118>
   2e218:	add	r2, lr, r2, lsl #3
   2e21c:	add	r1, r1, r7
   2e220:	add	r5, sp, #12
   2e224:	str	r1, [sp, #16]
   2e228:	str	r5, [r2, #8]
   2e22c:	str	r7, [r2, #12]
   2e230:	orr	r2, r3, #2
   2e234:	str	r2, [sp, #20]
   2e238:	cmp	r6, #0
   2e23c:	beq	2e264 <flatcc_builder_create_buffer@@Base+0x144>
   2e240:	movw	r5, #37464	; 0x9258
   2e244:	add	r3, lr, r2, lsl #3
   2e248:	add	r1, r1, r6
   2e24c:	add	r2, r2, #1
   2e250:	movt	r5, #4
   2e254:	str	r1, [sp, #16]
   2e258:	str	r5, [r3, #8]
   2e25c:	str	r6, [r3, #12]
   2e260:	str	r2, [sp, #20]
   2e264:	sub	r7, r0, r1
   2e268:	cmp	ip, #0
   2e26c:	mov	r6, #144	; 0x90
   2e270:	ldr	r3, [sp, #8]
   2e274:	mov	r0, r7
   2e278:	addne	r0, r0, #4
   2e27c:	cmp	r9, #0
   2e280:	movweq	r6, #140	; 0x8c
   2e284:	cmp	r1, #0
   2e288:	ldr	r6, [r4, r6]
   2e28c:	sub	r3, r3, r0
   2e290:	str	r3, [fp, #-36]	; 0xffffffdc
   2e294:	sub	r0, r6, r0
   2e298:	str	r0, [fp, #-40]	; 0xffffffd8
   2e29c:	ble	2e2f4 <flatcc_builder_create_buffer@@Base+0x1d4>
   2e2a0:	ldr	r0, [r4, #36]	; 0x24
   2e2a4:	ldr	r6, [r4, #44]	; 0x2c
   2e2a8:	str	r1, [sp]
   2e2ac:	add	r1, lr, #8
   2e2b0:	mov	r3, r7
   2e2b4:	blx	r6
   2e2b8:	cmp	r0, #0
   2e2bc:	bne	2e314 <flatcc_builder_create_buffer@@Base+0x1f4>
   2e2c0:	cmp	r7, #0
   2e2c4:	str	r7, [r4, #136]	; 0x88
   2e2c8:	movne	r0, r7
   2e2cc:	subne	sp, fp, #28
   2e2d0:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e2d4:	movw	r0, #42512	; 0xa610
   2e2d8:	movw	r1, #37994	; 0x946a
   2e2dc:	movw	r3, #38309	; 0x95a5
   2e2e0:	mov	r2, #772	; 0x304
   2e2e4:	movt	r0, #4
   2e2e8:	movt	r1, #4
   2e2ec:	movt	r3, #4
   2e2f0:	bl	14f40 <__assert_fail@plt>
   2e2f4:	movw	r0, #42512	; 0xa610
   2e2f8:	movw	r1, #37994	; 0x946a
   2e2fc:	movw	r3, #42191	; 0xa4cf
   2e300:	movw	r2, #647	; 0x287
   2e304:	movt	r0, #4
   2e308:	movt	r1, #4
   2e30c:	movt	r3, #4
   2e310:	bl	14f40 <__assert_fail@plt>
   2e314:	movw	r0, #42512	; 0xa610
   2e318:	movw	r1, #37994	; 0x946a
   2e31c:	movw	r3, #42191	; 0xa4cf
   2e320:	movw	r2, #651	; 0x28b
   2e324:	movt	r0, #4
   2e328:	movt	r1, #4
   2e32c:	movt	r3, #4
   2e330:	bl	14f40 <__assert_fail@plt>

0002e334 <flatcc_builder_create_struct@@Base>:
   2e334:	push	{r4, r5, r6, sl, fp, lr}
   2e338:	add	fp, sp, #16
   2e33c:	sub	sp, sp, #80	; 0x50
   2e340:	cmp	r3, #0
   2e344:	beq	2e41c <flatcc_builder_create_struct@@Base+0xe8>
   2e348:	mov	r5, r0
   2e34c:	ldrh	r0, [r0, #128]	; 0x80
   2e350:	mov	r4, #0
   2e354:	cmp	r0, r3
   2e358:	strhcc	r3, [r5, #128]	; 0x80
   2e35c:	sub	r3, r3, #1
   2e360:	cmp	r2, #0
   2e364:	ldr	r0, [r5, #136]	; 0x88
   2e368:	str	r4, [sp, #12]
   2e36c:	str	r4, [sp, #8]
   2e370:	movne	r4, #1
   2e374:	strne	r2, [sp, #20]
   2e378:	strne	r1, [sp, #16]
   2e37c:	strne	r2, [sp, #8]
   2e380:	strne	r4, [sp, #12]
   2e384:	sub	r6, r0, r2
   2e388:	and	r3, r6, r3
   2e38c:	cmp	r3, #0
   2e390:	beq	2e3bc <flatcc_builder_create_struct@@Base+0x88>
   2e394:	add	r1, sp, #8
   2e398:	movw	r6, #37464	; 0x9258
   2e39c:	add	r2, r3, r2
   2e3a0:	add	r1, r1, r4, lsl #3
   2e3a4:	movt	r6, #4
   2e3a8:	add	r4, r4, #1
   2e3ac:	str	r2, [sp, #8]
   2e3b0:	str	r6, [r1, #8]
   2e3b4:	str	r3, [r1, #12]
   2e3b8:	str	r4, [sp, #12]
   2e3bc:	cmp	r2, #0
   2e3c0:	ble	2e43c <flatcc_builder_create_struct@@Base+0x108>
   2e3c4:	sub	r6, r0, r2
   2e3c8:	ldr	r0, [r5, #36]	; 0x24
   2e3cc:	ldr	ip, [r5, #44]	; 0x2c
   2e3d0:	add	r1, sp, #8
   2e3d4:	str	r2, [sp]
   2e3d8:	mov	r2, r4
   2e3dc:	add	r1, r1, #8
   2e3e0:	mov	r3, r6
   2e3e4:	blx	ip
   2e3e8:	cmp	r0, #0
   2e3ec:	streq	r6, [r5, #136]	; 0x88
   2e3f0:	moveq	r0, r6
   2e3f4:	subeq	sp, fp, #16
   2e3f8:	popeq	{r4, r5, r6, sl, fp, pc}
   2e3fc:	movw	r0, #42512	; 0xa610
   2e400:	movw	r1, #37994	; 0x946a
   2e404:	movw	r3, #42191	; 0xa4cf
   2e408:	movw	r2, #651	; 0x28b
   2e40c:	movt	r0, #4
   2e410:	movt	r1, #4
   2e414:	movt	r3, #4
   2e418:	bl	14f40 <__assert_fail@plt>
   2e41c:	movw	r0, #38440	; 0x9628
   2e420:	movw	r1, #37994	; 0x946a
   2e424:	movw	r3, #38451	; 0x9633
   2e428:	movw	r2, #783	; 0x30f
   2e42c:	movt	r0, #4
   2e430:	movt	r1, #4
   2e434:	movt	r3, #4
   2e438:	bl	14f40 <__assert_fail@plt>
   2e43c:	movw	r0, #42512	; 0xa610
   2e440:	movw	r1, #37994	; 0x946a
   2e444:	movw	r3, #42191	; 0xa4cf
   2e448:	movw	r2, #647	; 0x287
   2e44c:	movt	r0, #4
   2e450:	movt	r1, #4
   2e454:	movt	r3, #4
   2e458:	bl	14f40 <__assert_fail@plt>

0002e45c <flatcc_builder_start_buffer@@Base>:
   2e45c:	push	{r4, r5, r6, r7, fp, lr}
   2e460:	add	fp, sp, #16
   2e464:	mov	r5, r1
   2e468:	ldrh	r1, [r0, #128]	; 0x80
   2e46c:	mov	r6, r3
   2e470:	mov	r7, r2
   2e474:	mov	r4, r0
   2e478:	bl	2e518 <flatcc_builder_start_buffer@@Base+0xbc>
   2e47c:	mov	r1, r0
   2e480:	mvn	r0, #0
   2e484:	cmp	r1, #0
   2e488:	popne	{r4, r5, r6, r7, fp, pc}
   2e48c:	mov	r0, #1
   2e490:	cmp	r5, #0
   2e494:	strh	r0, [r4, #128]	; 0x80
   2e498:	ldrh	r1, [r4, #132]	; 0x84
   2e49c:	ldr	r2, [r4, #32]
   2e4a0:	strh	r1, [r2, #34]	; 0x22
   2e4a4:	strh	r7, [r4, #132]	; 0x84
   2e4a8:	ldrh	r1, [r4, #164]	; 0xa4
   2e4ac:	ldr	r2, [r4, #32]
   2e4b0:	strh	r1, [r2, #32]
   2e4b4:	strh	r6, [r4, #164]	; 0xa4
   2e4b8:	ldr	r1, [r4, #32]
   2e4bc:	ldr	r2, [r4, #144]	; 0x90
   2e4c0:	str	r2, [r1, #20]
   2e4c4:	ldr	r1, [r4, #32]
   2e4c8:	ldr	r2, [r4, #152]	; 0x98
   2e4cc:	str	r2, [r1, #28]
   2e4d0:	ldr	r3, [r4, #148]	; 0x94
   2e4d4:	ldr	r1, [r4, #32]
   2e4d8:	ldr	r2, [r4, #136]	; 0x88
   2e4dc:	ldr	r7, [r4, #168]	; 0xa8
   2e4e0:	add	r6, r3, #1
   2e4e4:	str	r2, [r4, #144]	; 0x90
   2e4e8:	str	r6, [r4, #148]	; 0x94
   2e4ec:	str	r3, [r4, #152]	; 0x98
   2e4f0:	str	r7, [r1, #16]
   2e4f4:	movw	r1, #37464	; 0x9258
   2e4f8:	movt	r1, #4
   2e4fc:	movne	r1, r5
   2e500:	ldr	r1, [r1]
   2e504:	str	r1, [r4, #168]	; 0xa8
   2e508:	ldr	r1, [r4, #32]
   2e50c:	strh	r0, [r1, #14]
   2e510:	mov	r0, #0
   2e514:	pop	{r4, r5, r6, r7, fp, pc}
   2e518:	push	{r4, r5, r6, r7, fp, lr}
   2e51c:	add	fp, sp, #16
   2e520:	sub	sp, sp, #8
   2e524:	mov	r5, r1
   2e528:	ldr	r1, [r0, #156]	; 0x9c
   2e52c:	ldr	r2, [r0, #160]	; 0xa0
   2e530:	mov	r4, r0
   2e534:	add	r0, r1, #1
   2e538:	cmp	r1, r2
   2e53c:	str	r0, [r4, #156]	; 0x9c
   2e540:	bge	2e554 <flatcc_builder_start_buffer@@Base+0xf8>
   2e544:	ldr	r0, [r4, #32]
   2e548:	add	r0, r0, #36	; 0x24
   2e54c:	str	r0, [r4, #32]
   2e550:	b	2e5e8 <flatcc_builder_start_buffer@@Base+0x18c>
   2e554:	ldr	r2, [r4, #176]	; 0xb0
   2e558:	mvn	r6, #0
   2e55c:	cmp	r2, #1
   2e560:	cmpge	r1, r2
   2e564:	bge	2e620 <flatcc_builder_start_buffer@@Base+0x1c4>
   2e568:	add	r7, r0, r0, lsl #3
   2e56c:	ldr	r0, [r4, #88]	; 0x58
   2e570:	lsl	r2, r7, #2
   2e574:	cmp	r2, r0
   2e578:	bls	2e5a0 <flatcc_builder_start_buffer@@Base+0x144>
   2e57c:	ldr	r0, [r4, #40]	; 0x28
   2e580:	ldr	ip, [r4, #48]	; 0x30
   2e584:	mov	r3, #4
   2e588:	add	r1, r4, #84	; 0x54
   2e58c:	str	r3, [sp]
   2e590:	mov	r3, #0
   2e594:	blx	ip
   2e598:	cmp	r0, #0
   2e59c:	bne	2e62c <flatcc_builder_start_buffer@@Base+0x1d0>
   2e5a0:	ldr	r1, [r4, #84]	; 0x54
   2e5a4:	mvn	r0, #35	; 0x23
   2e5a8:	add	r0, r0, r7, lsl #2
   2e5ac:	adds	r0, r0, r1
   2e5b0:	str	r0, [r4, #32]
   2e5b4:	beq	2e620 <flatcc_builder_start_buffer@@Base+0x1c4>
   2e5b8:	ldr	r1, [r4, #88]	; 0x58
   2e5bc:	movw	r3, #36409	; 0x8e39
   2e5c0:	ldr	r2, [r4, #176]	; 0xb0
   2e5c4:	movt	r3, #14563	; 0x38e3
   2e5c8:	umull	r1, r3, r1, r3
   2e5cc:	cmp	r2, r3, lsr #3
   2e5d0:	lsr	r1, r3, #3
   2e5d4:	mov	r3, r1
   2e5d8:	movlt	r3, r2
   2e5dc:	cmp	r2, #0
   2e5e0:	movle	r3, r1
   2e5e4:	str	r3, [r4, #160]	; 0xa0
   2e5e8:	ldr	r1, [r4, #20]
   2e5ec:	mvn	r3, #3
   2e5f0:	mov	r6, #0
   2e5f4:	str	r1, [r0, #8]
   2e5f8:	ldrh	r2, [r4, #130]	; 0x82
   2e5fc:	strh	r2, [r0, #12]
   2e600:	strh	r5, [r4, #130]	; 0x82
   2e604:	ldr	r2, [r4, #28]
   2e608:	stm	r0, {r2, r3}
   2e60c:	add	r0, r1, r2
   2e610:	str	r6, [r4, #20]
   2e614:	add	r0, r0, #7
   2e618:	bic	r0, r0, #7
   2e61c:	str	r0, [r4, #28]
   2e620:	mov	r0, r6
   2e624:	sub	sp, fp, #16
   2e628:	pop	{r4, r5, r6, r7, fp, pc}
   2e62c:	movw	r0, #42512	; 0xa610
   2e630:	movw	r1, #37994	; 0x946a
   2e634:	movw	r3, #42058	; 0xa44a
   2e638:	mov	r2, #308	; 0x134
   2e63c:	movt	r0, #4
   2e640:	movt	r1, #4
   2e644:	movt	r3, #4
   2e648:	bl	14f40 <__assert_fail@plt>

0002e64c <flatcc_builder_end_buffer@@Base>:
   2e64c:	push	{r4, r5, r6, sl, fp, lr}
   2e650:	add	fp, sp, #16
   2e654:	sub	sp, sp, #8
   2e658:	mov	r4, r0
   2e65c:	ldr	r0, [r0, #32]
   2e660:	ldrh	r0, [r0, #14]
   2e664:	cmp	r0, #1
   2e668:	bne	2e75c <flatcc_builder_end_buffer@@Base+0x110>
   2e66c:	mov	r3, r1
   2e670:	ldr	r1, [r4, #152]	; 0x98
   2e674:	ldrh	r0, [r4, #164]	; 0xa4
   2e678:	ldrh	r2, [r4, #132]	; 0x84
   2e67c:	cmp	r1, #0
   2e680:	ldrh	r1, [r4, #128]	; 0x80
   2e684:	and	r0, r0, #2
   2e688:	orrne	r0, r0, #1
   2e68c:	cmp	r1, r2
   2e690:	movcc	r1, r2
   2e694:	strhcc	r2, [r4, #128]	; 0x80
   2e698:	str	r0, [sp, #4]
   2e69c:	mov	r0, r4
   2e6a0:	str	r1, [sp]
   2e6a4:	add	r1, r4, #168	; 0xa8
   2e6a8:	bl	2e120 <flatcc_builder_create_buffer@@Base>
   2e6ac:	mov	r6, r0
   2e6b0:	cmp	r0, #0
   2e6b4:	beq	2e750 <flatcc_builder_end_buffer@@Base+0x104>
   2e6b8:	ldr	r1, [r4, #32]
   2e6bc:	ldr	r0, [r4, #16]
   2e6c0:	ldr	r2, [r4, #20]
   2e6c4:	ldr	r3, [r1, #20]
   2e6c8:	str	r3, [r4, #144]	; 0x90
   2e6cc:	ldr	r3, [r1, #28]
   2e6d0:	str	r3, [r4, #152]	; 0x98
   2e6d4:	ldr	r3, [r1, #16]
   2e6d8:	str	r3, [r4, #168]	; 0xa8
   2e6dc:	ldrh	r1, [r1, #32]
   2e6e0:	strh	r1, [r4, #164]	; 0xa4
   2e6e4:	mov	r1, #0
   2e6e8:	bl	14eec <memset@plt>
   2e6ec:	ldr	r0, [r4, #32]
   2e6f0:	ldr	r1, [r4, #60]	; 0x3c
   2e6f4:	ldr	r2, [r4, #64]	; 0x40
   2e6f8:	ldr	r3, [r0, #8]
   2e6fc:	str	r3, [r4, #20]
   2e700:	ldr	r3, [r0]
   2e704:	str	r3, [r4, #28]
   2e708:	add	r1, r1, r3
   2e70c:	ldr	r5, [r0, #4]
   2e710:	str	r1, [r4, #16]
   2e714:	sub	r1, r2, r3
   2e718:	cmp	r1, r5
   2e71c:	movhi	r1, r5
   2e720:	str	r1, [r4, #24]
   2e724:	ldrh	r1, [r4, #130]	; 0x82
   2e728:	ldrh	r2, [r4, #128]	; 0x80
   2e72c:	cmp	r2, r1
   2e730:	strhcc	r1, [r4, #128]	; 0x80
   2e734:	ldrh	r1, [r0, #12]
   2e738:	sub	r0, r0, #36	; 0x24
   2e73c:	str	r0, [r4, #32]
   2e740:	strh	r1, [r4, #130]	; 0x82
   2e744:	ldr	r0, [r4, #156]	; 0x9c
   2e748:	sub	r0, r0, #1
   2e74c:	str	r0, [r4, #156]	; 0x9c
   2e750:	mov	r0, r6
   2e754:	sub	sp, fp, #16
   2e758:	pop	{r4, r5, r6, sl, fp, pc}
   2e75c:	movw	r0, #38553	; 0x9699
   2e760:	movw	r1, #37994	; 0x946a
   2e764:	movw	r3, #38597	; 0x96c5
   2e768:	movw	r2, #838	; 0x346
   2e76c:	movt	r0, #4
   2e770:	movt	r1, #4
   2e774:	movt	r3, #4
   2e778:	bl	14f40 <__assert_fail@plt>

0002e77c <flatcc_builder_start_struct@@Base>:
   2e77c:	push	{r4, r5, r6, r7, fp, lr}
   2e780:	add	fp, sp, #16
   2e784:	sub	sp, sp, #8
   2e788:	mov	r6, r1
   2e78c:	mov	r1, r2
   2e790:	mov	r4, r0
   2e794:	bl	2e518 <flatcc_builder_start_buffer@@Base+0xbc>
   2e798:	mov	r5, #0
   2e79c:	cmp	r0, #0
   2e7a0:	bne	2e81c <flatcc_builder_start_struct@@Base+0xa0>
   2e7a4:	ldr	r2, [r4, #32]
   2e7a8:	mov	r0, #2
   2e7ac:	mvn	r7, #3
   2e7b0:	strh	r0, [r2, #14]
   2e7b4:	ldr	r1, [r4, #28]
   2e7b8:	ldr	r3, [r4, #64]	; 0x40
   2e7bc:	ldr	r0, [r4, #60]	; 0x3c
   2e7c0:	sub	r3, r3, r1
   2e7c4:	add	r0, r0, r1
   2e7c8:	cmn	r3, #4
   2e7cc:	str	r0, [r4, #16]
   2e7d0:	movcs	r3, r7
   2e7d4:	str	r3, [r4, #24]
   2e7d8:	str	r7, [r2, #4]
   2e7dc:	ldr	r7, [r4, #20]
   2e7e0:	add	r2, r7, r6
   2e7e4:	cmp	r2, r3
   2e7e8:	str	r2, [r4, #20]
   2e7ec:	bcc	2e858 <flatcc_builder_start_struct@@Base+0xdc>
   2e7f0:	ldr	r0, [r4, #40]	; 0x28
   2e7f4:	ldr	r6, [r4, #48]	; 0x30
   2e7f8:	add	r1, r1, r2
   2e7fc:	mov	r3, #1
   2e800:	str	r3, [sp]
   2e804:	add	r2, r1, #1
   2e808:	add	r1, r4, #60	; 0x3c
   2e80c:	mov	r3, #1
   2e810:	blx	r6
   2e814:	cmp	r0, #0
   2e818:	beq	2e828 <flatcc_builder_start_struct@@Base+0xac>
   2e81c:	mov	r0, r5
   2e820:	sub	sp, fp, #16
   2e824:	pop	{r4, r5, r6, r7, fp, pc}
   2e828:	ldr	r1, [r4, #28]
   2e82c:	ldr	r0, [r4, #60]	; 0x3c
   2e830:	ldr	r3, [r4, #64]	; 0x40
   2e834:	ldr	r2, [r4, #32]
   2e838:	add	r0, r0, r1
   2e83c:	sub	r1, r3, r1
   2e840:	mvn	r3, #3
   2e844:	cmn	r1, #4
   2e848:	str	r0, [r4, #16]
   2e84c:	movcs	r1, r3
   2e850:	str	r1, [r4, #24]
   2e854:	str	r3, [r2, #4]
   2e858:	add	r5, r0, r7
   2e85c:	mov	r0, r5
   2e860:	sub	sp, fp, #16
   2e864:	pop	{r4, r5, r6, r7, fp, pc}

0002e868 <flatcc_builder_struct_edit@@Base>:
   2e868:	ldr	r0, [r0, #16]
   2e86c:	bx	lr

0002e870 <flatcc_builder_end_struct@@Base>:
   2e870:	push	{r4, r5, fp, lr}
   2e874:	add	fp, sp, #8
   2e878:	mov	r4, r0
   2e87c:	ldr	r0, [r0, #32]
   2e880:	ldrh	r0, [r0, #14]
   2e884:	cmp	r0, #2
   2e888:	bne	2e928 <flatcc_builder_end_struct@@Base+0xb8>
   2e88c:	ldrh	r3, [r4, #130]	; 0x82
   2e890:	ldr	r1, [r4, #16]
   2e894:	ldr	r2, [r4, #20]
   2e898:	mov	r0, r4
   2e89c:	bl	2e334 <flatcc_builder_create_struct@@Base>
   2e8a0:	mov	r5, r0
   2e8a4:	cmp	r0, #0
   2e8a8:	beq	2e920 <flatcc_builder_end_struct@@Base+0xb0>
   2e8ac:	ldr	r0, [r4, #16]
   2e8b0:	ldr	r2, [r4, #20]
   2e8b4:	mov	r1, #0
   2e8b8:	bl	14eec <memset@plt>
   2e8bc:	ldr	r0, [r4, #32]
   2e8c0:	ldr	r1, [r4, #60]	; 0x3c
   2e8c4:	ldr	ip, [r4, #64]	; 0x40
   2e8c8:	ldr	r3, [r0, #8]
   2e8cc:	str	r3, [r4, #20]
   2e8d0:	ldr	r3, [r0]
   2e8d4:	str	r3, [r4, #28]
   2e8d8:	add	r1, r1, r3
   2e8dc:	ldr	r2, [r0, #4]
   2e8e0:	str	r1, [r4, #16]
   2e8e4:	sub	r1, ip, r3
   2e8e8:	cmp	r1, r2
   2e8ec:	movhi	r1, r2
   2e8f0:	str	r1, [r4, #24]
   2e8f4:	ldrh	r1, [r4, #130]	; 0x82
   2e8f8:	ldrh	r2, [r4, #128]	; 0x80
   2e8fc:	cmp	r2, r1
   2e900:	strhcc	r1, [r4, #128]	; 0x80
   2e904:	ldrh	r1, [r0, #12]
   2e908:	sub	r0, r0, #36	; 0x24
   2e90c:	str	r0, [r4, #32]
   2e910:	strh	r1, [r4, #130]	; 0x82
   2e914:	ldr	r0, [r4, #156]	; 0x9c
   2e918:	sub	r0, r0, #1
   2e91c:	str	r0, [r4, #156]	; 0x9c
   2e920:	mov	r0, r5
   2e924:	pop	{r4, r5, fp, pc}
   2e928:	movw	r0, #38686	; 0x971e
   2e92c:	movw	r1, #37994	; 0x946a
   2e930:	movw	r3, #38730	; 0x974a
   2e934:	mov	r2, #872	; 0x368
   2e938:	movt	r0, #4
   2e93c:	movt	r1, #4
   2e940:	movt	r3, #4
   2e944:	bl	14f40 <__assert_fail@plt>

0002e948 <flatcc_builder_extend_vector@@Base>:
   2e948:	push	{r4, r5, fp, lr}
   2e94c:	add	fp, sp, #8
   2e950:	sub	sp, sp, #8
   2e954:	mov	r4, r0
   2e958:	ldr	r0, [r0, #32]
   2e95c:	ldr	r2, [r0, #20]
   2e960:	adds	r2, r2, r1
   2e964:	bcs	2ea24 <flatcc_builder_extend_vector@@Base+0xdc>
   2e968:	ldr	r3, [r0, #24]
   2e96c:	cmp	r2, r3
   2e970:	bhi	2ea24 <flatcc_builder_extend_vector@@Base+0xdc>
   2e974:	str	r2, [r0, #20]
   2e978:	ldr	r2, [r4, #32]
   2e97c:	ldr	r5, [r4, #20]
   2e980:	ldr	r0, [r4, #24]
   2e984:	ldr	r2, [r2, #16]
   2e988:	mla	r1, r2, r1, r5
   2e98c:	cmp	r1, r0
   2e990:	str	r1, [r4, #20]
   2e994:	bcs	2e9a8 <flatcc_builder_extend_vector@@Base+0x60>
   2e998:	ldr	r0, [r4, #16]
   2e99c:	add	r0, r0, r5
   2e9a0:	sub	sp, fp, #8
   2e9a4:	pop	{r4, r5, fp, pc}
   2e9a8:	ldr	r2, [r4, #28]
   2e9ac:	ldr	r0, [r4, #40]	; 0x28
   2e9b0:	ldr	ip, [r4, #48]	; 0x30
   2e9b4:	mov	r3, #1
   2e9b8:	str	r3, [sp]
   2e9bc:	mov	r3, #1
   2e9c0:	add	r1, r1, r2
   2e9c4:	add	r2, r1, #1
   2e9c8:	add	r1, r4, #60	; 0x3c
   2e9cc:	blx	ip
   2e9d0:	mov	r1, r0
   2e9d4:	mov	r0, #0
   2e9d8:	cmp	r1, #0
   2e9dc:	beq	2e9e8 <flatcc_builder_extend_vector@@Base+0xa0>
   2e9e0:	sub	sp, fp, #8
   2e9e4:	pop	{r4, r5, fp, pc}
   2e9e8:	ldr	r1, [r4, #28]
   2e9ec:	ldr	r0, [r4, #60]	; 0x3c
   2e9f0:	ldr	r3, [r4, #64]	; 0x40
   2e9f4:	ldr	r2, [r4, #32]
   2e9f8:	add	r0, r0, r1
   2e9fc:	sub	r1, r3, r1
   2ea00:	mvn	r3, #3
   2ea04:	cmn	r1, #4
   2ea08:	str	r0, [r4, #16]
   2ea0c:	movcs	r1, r3
   2ea10:	str	r1, [r4, #24]
   2ea14:	str	r3, [r2, #4]
   2ea18:	add	r0, r0, r5
   2ea1c:	sub	sp, fp, #8
   2ea20:	pop	{r4, r5, fp, pc}
   2ea24:	movw	r0, #42265	; 0xa519
   2ea28:	movw	r1, #37994	; 0x946a
   2ea2c:	movw	r3, #42292	; 0xa534
   2ea30:	mov	r2, #892	; 0x37c
   2ea34:	movt	r0, #4
   2ea38:	movt	r1, #4
   2ea3c:	movt	r3, #4
   2ea40:	bl	14f40 <__assert_fail@plt>

0002ea44 <flatcc_builder_vector_push@@Base>:
   2ea44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ea48:	add	fp, sp, #24
   2ea4c:	sub	sp, sp, #8
   2ea50:	mov	r5, r0
   2ea54:	ldr	r0, [r0, #32]
   2ea58:	mov	r8, r1
   2ea5c:	ldrh	r1, [r0, #14]
   2ea60:	cmp	r1, #4
   2ea64:	bne	2eb50 <flatcc_builder_vector_push@@Base+0x10c>
   2ea68:	ldr	r1, [r0, #20]
   2ea6c:	ldr	r2, [r0, #24]
   2ea70:	cmp	r1, r2
   2ea74:	bhi	2eb70 <flatcc_builder_vector_push@@Base+0x12c>
   2ea78:	add	r1, r1, #1
   2ea7c:	str	r1, [r0, #20]
   2ea80:	ldr	r1, [r5, #32]
   2ea84:	ldr	r4, [r5, #20]
   2ea88:	ldr	r0, [r5, #24]
   2ea8c:	ldr	r6, [r1, #16]
   2ea90:	add	r1, r4, r6
   2ea94:	cmp	r1, r0
   2ea98:	str	r1, [r5, #20]
   2ea9c:	bcs	2eac8 <flatcc_builder_vector_push@@Base+0x84>
   2eaa0:	ldr	r0, [r5, #16]
   2eaa4:	adds	r7, r0, r4
   2eaa8:	beq	2eb40 <flatcc_builder_vector_push@@Base+0xfc>
   2eaac:	mov	r0, r7
   2eab0:	mov	r1, r8
   2eab4:	mov	r2, r6
   2eab8:	bl	14e5c <memcpy@plt>
   2eabc:	mov	r0, r7
   2eac0:	sub	sp, fp, #24
   2eac4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eac8:	ldr	r2, [r5, #28]
   2eacc:	ldr	r0, [r5, #40]	; 0x28
   2ead0:	ldr	r7, [r5, #48]	; 0x30
   2ead4:	mov	r3, #1
   2ead8:	str	r3, [sp]
   2eadc:	mov	r3, #1
   2eae0:	add	r1, r1, r2
   2eae4:	add	r2, r1, #1
   2eae8:	add	r1, r5, #60	; 0x3c
   2eaec:	blx	r7
   2eaf0:	mov	r7, #0
   2eaf4:	cmp	r0, #0
   2eaf8:	beq	2eb08 <flatcc_builder_vector_push@@Base+0xc4>
   2eafc:	mov	r0, r7
   2eb00:	sub	sp, fp, #24
   2eb04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eb08:	ldr	r1, [r5, #28]
   2eb0c:	ldr	r0, [r5, #60]	; 0x3c
   2eb10:	ldr	r3, [r5, #64]	; 0x40
   2eb14:	ldr	r2, [r5, #32]
   2eb18:	add	r0, r0, r1
   2eb1c:	sub	r1, r3, r1
   2eb20:	mvn	r3, #3
   2eb24:	cmn	r1, #4
   2eb28:	str	r0, [r5, #16]
   2eb2c:	movcs	r1, r3
   2eb30:	str	r1, [r5, #24]
   2eb34:	str	r3, [r2, #4]
   2eb38:	adds	r7, r0, r4
   2eb3c:	bne	2eaac <flatcc_builder_vector_push@@Base+0x68>
   2eb40:	mov	r7, #0
   2eb44:	mov	r0, r7
   2eb48:	sub	sp, fp, #24
   2eb4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eb50:	movw	r0, #38797	; 0x978d
   2eb54:	movw	r1, #37994	; 0x946a
   2eb58:	movw	r3, #38841	; 0x97b9
   2eb5c:	movw	r2, #907	; 0x38b
   2eb60:	movt	r0, #4
   2eb64:	movt	r1, #4
   2eb68:	movt	r3, #4
   2eb6c:	bl	14f40 <__assert_fail@plt>
   2eb70:	movw	r0, #38908	; 0x97fc
   2eb74:	movw	r1, #37994	; 0x946a
   2eb78:	movw	r3, #38841	; 0x97b9
   2eb7c:	mov	r2, #908	; 0x38c
   2eb80:	movt	r0, #4
   2eb84:	movt	r1, #4
   2eb88:	movt	r3, #4
   2eb8c:	bl	14f40 <__assert_fail@plt>

0002eb90 <flatcc_builder_append_vector@@Base>:
   2eb90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2eb94:	add	fp, sp, #24
   2eb98:	sub	sp, sp, #8
   2eb9c:	mov	r6, r0
   2eba0:	ldr	r0, [r0, #32]
   2eba4:	mov	r8, r1
   2eba8:	ldrh	r1, [r0, #14]
   2ebac:	cmp	r1, #4
   2ebb0:	bne	2ecc4 <flatcc_builder_append_vector@@Base+0x134>
   2ebb4:	ldr	r1, [r0, #20]
   2ebb8:	mov	r5, r2
   2ebbc:	adds	r1, r1, r2
   2ebc0:	bcs	2eca4 <flatcc_builder_append_vector@@Base+0x114>
   2ebc4:	ldr	r2, [r0, #24]
   2ebc8:	cmp	r1, r2
   2ebcc:	bhi	2eca4 <flatcc_builder_append_vector@@Base+0x114>
   2ebd0:	str	r1, [r0, #20]
   2ebd4:	ldr	r1, [r6, #32]
   2ebd8:	ldr	r4, [r6, #20]
   2ebdc:	ldr	r0, [r6, #24]
   2ebe0:	ldr	r9, [r1, #16]
   2ebe4:	mla	r1, r9, r5, r4
   2ebe8:	cmp	r1, r0
   2ebec:	str	r1, [r6, #20]
   2ebf0:	bcs	2ec1c <flatcc_builder_append_vector@@Base+0x8c>
   2ebf4:	ldr	r0, [r6, #16]
   2ebf8:	adds	r7, r0, r4
   2ebfc:	beq	2ec94 <flatcc_builder_append_vector@@Base+0x104>
   2ec00:	mul	r2, r9, r5
   2ec04:	mov	r0, r7
   2ec08:	mov	r1, r8
   2ec0c:	bl	14e5c <memcpy@plt>
   2ec10:	mov	r0, r7
   2ec14:	sub	sp, fp, #24
   2ec18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ec1c:	ldr	r2, [r6, #28]
   2ec20:	ldr	r0, [r6, #40]	; 0x28
   2ec24:	ldr	r7, [r6, #48]	; 0x30
   2ec28:	mov	r3, #1
   2ec2c:	str	r3, [sp]
   2ec30:	mov	r3, #1
   2ec34:	add	r1, r1, r2
   2ec38:	add	r2, r1, #1
   2ec3c:	add	r1, r6, #60	; 0x3c
   2ec40:	blx	r7
   2ec44:	mov	r7, #0
   2ec48:	cmp	r0, #0
   2ec4c:	beq	2ec5c <flatcc_builder_append_vector@@Base+0xcc>
   2ec50:	mov	r0, r7
   2ec54:	sub	sp, fp, #24
   2ec58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ec5c:	ldr	r1, [r6, #28]
   2ec60:	ldr	r0, [r6, #60]	; 0x3c
   2ec64:	ldr	r3, [r6, #64]	; 0x40
   2ec68:	ldr	r2, [r6, #32]
   2ec6c:	add	r0, r0, r1
   2ec70:	sub	r1, r3, r1
   2ec74:	mvn	r3, #3
   2ec78:	cmn	r1, #4
   2ec7c:	str	r0, [r6, #16]
   2ec80:	movcs	r1, r3
   2ec84:	str	r1, [r6, #24]
   2ec88:	str	r3, [r2, #4]
   2ec8c:	adds	r7, r0, r4
   2ec90:	bne	2ec00 <flatcc_builder_append_vector@@Base+0x70>
   2ec94:	mov	r7, #0
   2ec98:	mov	r0, r7
   2ec9c:	sub	sp, fp, #24
   2eca0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2eca4:	movw	r0, #42265	; 0xa519
   2eca8:	movw	r1, #37994	; 0x946a
   2ecac:	movw	r3, #42292	; 0xa534
   2ecb0:	mov	r2, #892	; 0x37c
   2ecb4:	movt	r0, #4
   2ecb8:	movt	r1, #4
   2ecbc:	movt	r3, #4
   2ecc0:	bl	14f40 <__assert_fail@plt>
   2ecc4:	movw	r0, #38797	; 0x978d
   2ecc8:	movw	r1, #37994	; 0x946a
   2eccc:	movw	r3, #38969	; 0x9839
   2ecd0:	movw	r2, #915	; 0x393
   2ecd4:	movt	r0, #4
   2ecd8:	movt	r1, #4
   2ecdc:	movt	r3, #4
   2ece0:	bl	14f40 <__assert_fail@plt>

0002ece4 <flatcc_builder_extend_offset_vector@@Base>:
   2ece4:	push	{r4, r5, fp, lr}
   2ece8:	add	fp, sp, #8
   2ecec:	sub	sp, sp, #8
   2ecf0:	mov	r4, r0
   2ecf4:	ldr	r0, [r0, #32]
   2ecf8:	ldr	r2, [r0, #20]
   2ecfc:	adds	r2, r2, r1
   2ed00:	cmpcc	r2, #1073741824	; 0x40000000
   2ed04:	bcc	2ed28 <flatcc_builder_extend_offset_vector@@Base+0x44>
   2ed08:	movw	r0, #42265	; 0xa519
   2ed0c:	movw	r1, #37994	; 0x946a
   2ed10:	movw	r3, #42292	; 0xa534
   2ed14:	mov	r2, #892	; 0x37c
   2ed18:	movt	r0, #4
   2ed1c:	movt	r1, #4
   2ed20:	movt	r3, #4
   2ed24:	bl	14f40 <__assert_fail@plt>
   2ed28:	str	r2, [r0, #20]
   2ed2c:	ldr	r5, [r4, #20]
   2ed30:	ldr	r0, [r4, #24]
   2ed34:	add	r1, r5, r1, lsl #2
   2ed38:	cmp	r1, r0
   2ed3c:	str	r1, [r4, #20]
   2ed40:	bcs	2ed54 <flatcc_builder_extend_offset_vector@@Base+0x70>
   2ed44:	ldr	r0, [r4, #16]
   2ed48:	add	r0, r0, r5
   2ed4c:	sub	sp, fp, #8
   2ed50:	pop	{r4, r5, fp, pc}
   2ed54:	ldr	r2, [r4, #28]
   2ed58:	ldr	r0, [r4, #40]	; 0x28
   2ed5c:	ldr	ip, [r4, #48]	; 0x30
   2ed60:	mov	r3, #1
   2ed64:	str	r3, [sp]
   2ed68:	mov	r3, #1
   2ed6c:	add	r1, r1, r2
   2ed70:	add	r2, r1, #1
   2ed74:	add	r1, r4, #60	; 0x3c
   2ed78:	blx	ip
   2ed7c:	mov	r1, r0
   2ed80:	mov	r0, #0
   2ed84:	cmp	r1, #0
   2ed88:	beq	2ed94 <flatcc_builder_extend_offset_vector@@Base+0xb0>
   2ed8c:	sub	sp, fp, #8
   2ed90:	pop	{r4, r5, fp, pc}
   2ed94:	ldr	r1, [r4, #28]
   2ed98:	ldr	r0, [r4, #60]	; 0x3c
   2ed9c:	ldr	r3, [r4, #64]	; 0x40
   2eda0:	ldr	r2, [r4, #32]
   2eda4:	add	r0, r0, r1
   2eda8:	sub	r1, r3, r1
   2edac:	mvn	r3, #3
   2edb0:	cmn	r1, #4
   2edb4:	str	r0, [r4, #16]
   2edb8:	movcs	r1, r3
   2edbc:	str	r1, [r4, #24]
   2edc0:	str	r3, [r2, #4]
   2edc4:	add	r0, r0, r5
   2edc8:	sub	sp, fp, #8
   2edcc:	pop	{r4, r5, fp, pc}

0002edd0 <flatcc_builder_offset_vector_push@@Base>:
   2edd0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2edd4:	add	fp, sp, #24
   2edd8:	sub	sp, sp, #8
   2eddc:	mov	r6, r0
   2ede0:	ldr	r0, [r0, #32]
   2ede4:	mov	r8, r1
   2ede8:	ldrh	r1, [r0, #14]
   2edec:	cmp	r1, #5
   2edf0:	bne	2eeb0 <flatcc_builder_offset_vector_push@@Base+0xe0>
   2edf4:	ldr	r1, [r0, #20]
   2edf8:	mov	r5, #0
   2edfc:	cmn	r1, #-1073741823	; 0xc0000001
   2ee00:	beq	2ee5c <flatcc_builder_offset_vector_push@@Base+0x8c>
   2ee04:	add	r1, r1, #1
   2ee08:	str	r1, [r0, #20]
   2ee0c:	ldr	r7, [r6, #20]
   2ee10:	ldr	r0, [r6, #24]
   2ee14:	add	r1, r7, #4
   2ee18:	cmp	r1, r0
   2ee1c:	str	r1, [r6, #20]
   2ee20:	bcs	2ee2c <flatcc_builder_offset_vector_push@@Base+0x5c>
   2ee24:	ldr	r0, [r6, #16]
   2ee28:	b	2ee98 <flatcc_builder_offset_vector_push@@Base+0xc8>
   2ee2c:	ldr	r1, [r6, #28]
   2ee30:	ldr	r0, [r6, #40]	; 0x28
   2ee34:	ldr	r4, [r6, #48]	; 0x30
   2ee38:	mov	r2, #1
   2ee3c:	mov	r3, #1
   2ee40:	str	r2, [sp]
   2ee44:	add	r1, r7, r1
   2ee48:	add	r2, r1, #5
   2ee4c:	add	r1, r6, #60	; 0x3c
   2ee50:	blx	r4
   2ee54:	cmp	r0, #0
   2ee58:	beq	2ee68 <flatcc_builder_offset_vector_push@@Base+0x98>
   2ee5c:	mov	r0, r5
   2ee60:	sub	sp, fp, #24
   2ee64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ee68:	ldr	r1, [r6, #28]
   2ee6c:	ldr	r0, [r6, #60]	; 0x3c
   2ee70:	ldr	r3, [r6, #64]	; 0x40
   2ee74:	ldr	r2, [r6, #32]
   2ee78:	add	r0, r0, r1
   2ee7c:	sub	r1, r3, r1
   2ee80:	mvn	r3, #3
   2ee84:	cmn	r1, #4
   2ee88:	str	r0, [r6, #16]
   2ee8c:	movcs	r1, r3
   2ee90:	str	r1, [r6, #24]
   2ee94:	str	r3, [r2, #4]
   2ee98:	adds	r0, r0, r7
   2ee9c:	movne	r5, r0
   2eea0:	strne	r8, [r0]
   2eea4:	mov	r0, r5
   2eea8:	sub	sp, fp, #24
   2eeac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eeb0:	movw	r0, #39046	; 0x9886
   2eeb4:	movw	r1, #37994	; 0x946a
   2eeb8:	movw	r3, #39097	; 0x98b9
   2eebc:	movw	r2, #934	; 0x3a6
   2eec0:	movt	r0, #4
   2eec4:	movt	r1, #4
   2eec8:	movt	r3, #4
   2eecc:	bl	14f40 <__assert_fail@plt>

0002eed0 <flatcc_builder_append_offset_vector@@Base>:
   2eed0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2eed4:	add	fp, sp, #24
   2eed8:	sub	sp, sp, #8
   2eedc:	mov	r6, r0
   2eee0:	ldr	r0, [r0, #32]
   2eee4:	mov	r8, r1
   2eee8:	ldrh	r1, [r0, #14]
   2eeec:	cmp	r1, #5
   2eef0:	bne	2eff4 <flatcc_builder_append_offset_vector@@Base+0x124>
   2eef4:	ldr	r1, [r0, #20]
   2eef8:	mov	r5, r2
   2eefc:	adds	r1, r1, r2
   2ef00:	cmpcc	r1, #1073741824	; 0x40000000
   2ef04:	bcc	2ef28 <flatcc_builder_append_offset_vector@@Base+0x58>
   2ef08:	movw	r0, #42265	; 0xa519
   2ef0c:	movw	r1, #37994	; 0x946a
   2ef10:	movw	r3, #42292	; 0xa534
   2ef14:	mov	r2, #892	; 0x37c
   2ef18:	movt	r0, #4
   2ef1c:	movt	r1, #4
   2ef20:	movt	r3, #4
   2ef24:	bl	14f40 <__assert_fail@plt>
   2ef28:	str	r1, [r0, #20]
   2ef2c:	ldr	r4, [r6, #20]
   2ef30:	ldr	r0, [r6, #24]
   2ef34:	add	r1, r4, r5, lsl #2
   2ef38:	cmp	r1, r0
   2ef3c:	str	r1, [r6, #20]
   2ef40:	bcs	2ef6c <flatcc_builder_append_offset_vector@@Base+0x9c>
   2ef44:	ldr	r0, [r6, #16]
   2ef48:	adds	r7, r0, r4
   2ef4c:	beq	2efe4 <flatcc_builder_append_offset_vector@@Base+0x114>
   2ef50:	lsl	r2, r5, #2
   2ef54:	mov	r0, r7
   2ef58:	mov	r1, r8
   2ef5c:	bl	14e5c <memcpy@plt>
   2ef60:	mov	r0, r7
   2ef64:	sub	sp, fp, #24
   2ef68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ef6c:	ldr	r2, [r6, #28]
   2ef70:	ldr	r0, [r6, #40]	; 0x28
   2ef74:	ldr	r7, [r6, #48]	; 0x30
   2ef78:	mov	r3, #1
   2ef7c:	str	r3, [sp]
   2ef80:	mov	r3, #1
   2ef84:	add	r1, r1, r2
   2ef88:	add	r2, r1, #1
   2ef8c:	add	r1, r6, #60	; 0x3c
   2ef90:	blx	r7
   2ef94:	mov	r7, #0
   2ef98:	cmp	r0, #0
   2ef9c:	beq	2efac <flatcc_builder_append_offset_vector@@Base+0xdc>
   2efa0:	mov	r0, r7
   2efa4:	sub	sp, fp, #24
   2efa8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2efac:	ldr	r1, [r6, #28]
   2efb0:	ldr	r0, [r6, #60]	; 0x3c
   2efb4:	ldr	r3, [r6, #64]	; 0x40
   2efb8:	ldr	r2, [r6, #32]
   2efbc:	add	r0, r0, r1
   2efc0:	sub	r1, r3, r1
   2efc4:	mvn	r3, #3
   2efc8:	cmn	r1, #4
   2efcc:	str	r0, [r6, #16]
   2efd0:	movcs	r1, r3
   2efd4:	str	r1, [r6, #24]
   2efd8:	str	r3, [r2, #4]
   2efdc:	adds	r7, r0, r4
   2efe0:	bne	2ef50 <flatcc_builder_append_offset_vector@@Base+0x80>
   2efe4:	mov	r7, #0
   2efe8:	mov	r0, r7
   2efec:	sub	sp, fp, #24
   2eff0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eff4:	movw	r0, #39046	; 0x9886
   2eff8:	movw	r1, #37994	; 0x946a
   2effc:	movw	r3, #39195	; 0x991b
   2f000:	mov	r2, #948	; 0x3b4
   2f004:	movt	r0, #4
   2f008:	movt	r1, #4
   2f00c:	movt	r3, #4
   2f010:	bl	14f40 <__assert_fail@plt>

0002f014 <flatcc_builder_extend_string@@Base>:
   2f014:	push	{r4, r5, fp, lr}
   2f018:	add	fp, sp, #8
   2f01c:	sub	sp, sp, #8
   2f020:	mov	r4, r0
   2f024:	ldr	r0, [r0, #32]
   2f028:	ldrh	r2, [r0, #14]
   2f02c:	cmp	r2, #6
   2f030:	bne	2f0e8 <flatcc_builder_extend_string@@Base+0xd4>
   2f034:	ldr	r2, [r0, #20]
   2f038:	adds	r2, r2, r1
   2f03c:	bcs	2f108 <flatcc_builder_extend_string@@Base+0xf4>
   2f040:	str	r2, [r0, #20]
   2f044:	ldr	r5, [r4, #20]
   2f048:	ldr	r0, [r4, #24]
   2f04c:	add	r1, r5, r1
   2f050:	cmp	r1, r0
   2f054:	str	r1, [r4, #20]
   2f058:	bcs	2f06c <flatcc_builder_extend_string@@Base+0x58>
   2f05c:	ldr	r0, [r4, #16]
   2f060:	add	r0, r0, r5
   2f064:	sub	sp, fp, #8
   2f068:	pop	{r4, r5, fp, pc}
   2f06c:	ldr	r2, [r4, #28]
   2f070:	ldr	r0, [r4, #40]	; 0x28
   2f074:	ldr	ip, [r4, #48]	; 0x30
   2f078:	mov	r3, #1
   2f07c:	str	r3, [sp]
   2f080:	mov	r3, #1
   2f084:	add	r1, r1, r2
   2f088:	add	r2, r1, #1
   2f08c:	add	r1, r4, #60	; 0x3c
   2f090:	blx	ip
   2f094:	mov	r1, r0
   2f098:	mov	r0, #0
   2f09c:	cmp	r1, #0
   2f0a0:	beq	2f0ac <flatcc_builder_extend_string@@Base+0x98>
   2f0a4:	sub	sp, fp, #8
   2f0a8:	pop	{r4, r5, fp, pc}
   2f0ac:	ldr	r1, [r4, #28]
   2f0b0:	ldr	r0, [r4, #60]	; 0x3c
   2f0b4:	ldr	r3, [r4, #64]	; 0x40
   2f0b8:	ldr	r2, [r4, #32]
   2f0bc:	add	r0, r0, r1
   2f0c0:	sub	r1, r3, r1
   2f0c4:	mvn	r3, #3
   2f0c8:	cmn	r1, #4
   2f0cc:	str	r0, [r4, #16]
   2f0d0:	movcs	r1, r3
   2f0d4:	str	r1, [r4, #24]
   2f0d8:	str	r3, [r2, #4]
   2f0dc:	add	r0, r0, r5
   2f0e0:	sub	sp, fp, #8
   2f0e4:	pop	{r4, r5, fp, pc}
   2f0e8:	movw	r0, #39311	; 0x998f
   2f0ec:	movw	r1, #37994	; 0x946a
   2f0f0:	movw	r3, #39355	; 0x99bb
   2f0f4:	movw	r2, #957	; 0x3bd
   2f0f8:	movt	r0, #4
   2f0fc:	movt	r1, #4
   2f100:	movt	r3, #4
   2f104:	bl	14f40 <__assert_fail@plt>
   2f108:	movw	r0, #42265	; 0xa519
   2f10c:	movw	r1, #37994	; 0x946a
   2f110:	movw	r3, #42292	; 0xa534
   2f114:	mov	r2, #892	; 0x37c
   2f118:	movt	r0, #4
   2f11c:	movt	r1, #4
   2f120:	movt	r3, #4
   2f124:	bl	14f40 <__assert_fail@plt>

0002f128 <flatcc_builder_append_string@@Base>:
   2f128:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f12c:	add	fp, sp, #24
   2f130:	sub	sp, sp, #8
   2f134:	mov	r6, r0
   2f138:	ldr	r0, [r0, #32]
   2f13c:	mov	r8, r1
   2f140:	ldrh	r1, [r0, #14]
   2f144:	cmp	r1, #6
   2f148:	bne	2f228 <flatcc_builder_append_string@@Base+0x100>
   2f14c:	ldr	r1, [r0, #20]
   2f150:	mov	r4, r2
   2f154:	adds	r1, r1, r2
   2f158:	bcs	2f248 <flatcc_builder_append_string@@Base+0x120>
   2f15c:	str	r1, [r0, #20]
   2f160:	ldr	r5, [r6, #20]
   2f164:	ldr	r0, [r6, #24]
   2f168:	add	r1, r5, r4
   2f16c:	cmp	r1, r0
   2f170:	str	r1, [r6, #20]
   2f174:	bcs	2f1a0 <flatcc_builder_append_string@@Base+0x78>
   2f178:	ldr	r0, [r6, #16]
   2f17c:	adds	r7, r0, r5
   2f180:	beq	2f218 <flatcc_builder_append_string@@Base+0xf0>
   2f184:	mov	r0, r7
   2f188:	mov	r1, r8
   2f18c:	mov	r2, r4
   2f190:	bl	14e5c <memcpy@plt>
   2f194:	mov	r0, r7
   2f198:	sub	sp, fp, #24
   2f19c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f1a0:	ldr	r2, [r6, #28]
   2f1a4:	ldr	r0, [r6, #40]	; 0x28
   2f1a8:	ldr	r7, [r6, #48]	; 0x30
   2f1ac:	mov	r3, #1
   2f1b0:	str	r3, [sp]
   2f1b4:	mov	r3, #1
   2f1b8:	add	r1, r1, r2
   2f1bc:	add	r2, r1, #1
   2f1c0:	add	r1, r6, #60	; 0x3c
   2f1c4:	blx	r7
   2f1c8:	mov	r7, #0
   2f1cc:	cmp	r0, #0
   2f1d0:	beq	2f1e0 <flatcc_builder_append_string@@Base+0xb8>
   2f1d4:	mov	r0, r7
   2f1d8:	sub	sp, fp, #24
   2f1dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f1e0:	ldr	r1, [r6, #28]
   2f1e4:	ldr	r0, [r6, #60]	; 0x3c
   2f1e8:	ldr	r3, [r6, #64]	; 0x40
   2f1ec:	ldr	r2, [r6, #32]
   2f1f0:	add	r0, r0, r1
   2f1f4:	sub	r1, r3, r1
   2f1f8:	mvn	r3, #3
   2f1fc:	cmn	r1, #4
   2f200:	str	r0, [r6, #16]
   2f204:	movcs	r1, r3
   2f208:	str	r1, [r6, #24]
   2f20c:	str	r3, [r2, #4]
   2f210:	adds	r7, r0, r5
   2f214:	bne	2f184 <flatcc_builder_append_string@@Base+0x5c>
   2f218:	mov	r7, #0
   2f21c:	mov	r0, r7
   2f220:	sub	sp, fp, #24
   2f224:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f228:	movw	r0, #39311	; 0x998f
   2f22c:	movw	r1, #37994	; 0x946a
   2f230:	movw	r3, #39418	; 0x99fa
   2f234:	movw	r2, #966	; 0x3c6
   2f238:	movt	r0, #4
   2f23c:	movt	r1, #4
   2f240:	movt	r3, #4
   2f244:	bl	14f40 <__assert_fail@plt>
   2f248:	movw	r0, #42265	; 0xa519
   2f24c:	movw	r1, #37994	; 0x946a
   2f250:	movw	r3, #42292	; 0xa534
   2f254:	mov	r2, #892	; 0x37c
   2f258:	movt	r0, #4
   2f25c:	movt	r1, #4
   2f260:	movt	r3, #4
   2f264:	bl	14f40 <__assert_fail@plt>

0002f268 <flatcc_builder_append_string_str@@Base>:
   2f268:	push	{r4, r5, fp, lr}
   2f26c:	add	fp, sp, #8
   2f270:	mov	r5, r0
   2f274:	mov	r0, r1
   2f278:	mov	r4, r1
   2f27c:	bl	14ec8 <strlen@plt>
   2f280:	mov	r2, r0
   2f284:	mov	r0, r5
   2f288:	mov	r1, r4
   2f28c:	pop	{r4, r5, fp, lr}
   2f290:	b	2f128 <flatcc_builder_append_string@@Base>

0002f294 <flatcc_builder_append_string_strn@@Base>:
   2f294:	push	{r4, r5, r6, sl, fp, lr}
   2f298:	add	fp, sp, #16
   2f29c:	mov	r6, r0
   2f2a0:	mov	r5, r1
   2f2a4:	mov	r0, r1
   2f2a8:	mov	r1, #0
   2f2ac:	mov	r4, r2
   2f2b0:	bl	14f10 <memchr@plt>
   2f2b4:	cmp	r0, #0
   2f2b8:	mov	r1, r5
   2f2bc:	subne	r4, r0, r5
   2f2c0:	mov	r0, r6
   2f2c4:	mov	r2, r4
   2f2c8:	pop	{r4, r5, r6, sl, fp, lr}
   2f2cc:	b	2f128 <flatcc_builder_append_string@@Base>

0002f2d0 <flatcc_builder_truncate_vector@@Base>:
   2f2d0:	push	{fp, lr}
   2f2d4:	mov	fp, sp
   2f2d8:	ldr	r2, [r0, #32]
   2f2dc:	ldrh	r3, [r2, #14]
   2f2e0:	cmp	r3, #4
   2f2e4:	bne	2f32c <flatcc_builder_truncate_vector@@Base+0x5c>
   2f2e8:	ldr	r3, [r2, #20]
   2f2ec:	cmp	r3, r1
   2f2f0:	bcc	2f34c <flatcc_builder_truncate_vector@@Base+0x7c>
   2f2f4:	sub	r3, r3, r1
   2f2f8:	str	r3, [r2, #20]
   2f2fc:	ldr	r2, [r0, #32]
   2f300:	ldr	r3, [r0, #20]
   2f304:	ldr	ip, [r0, #16]
   2f308:	ldr	r2, [r2, #16]
   2f30c:	mls	r3, r2, r1, r3
   2f310:	mul	r2, r2, r1
   2f314:	mov	r1, #0
   2f318:	str	r3, [r0, #20]
   2f31c:	add	r0, ip, r3
   2f320:	bl	14eec <memset@plt>
   2f324:	mov	r0, #0
   2f328:	pop	{fp, pc}
   2f32c:	movw	r0, #38797	; 0x978d
   2f330:	movw	r1, #37994	; 0x946a
   2f334:	movw	r3, #39495	; 0x9a47
   2f338:	movw	r2, #985	; 0x3d9
   2f33c:	movt	r0, #4
   2f340:	movt	r1, #4
   2f344:	movt	r3, #4
   2f348:	bl	14f40 <__assert_fail@plt>
   2f34c:	movw	r0, #39558	; 0x9a86
   2f350:	movw	r1, #37994	; 0x946a
   2f354:	movw	r3, #39495	; 0x9a47
   2f358:	movw	r2, #986	; 0x3da
   2f35c:	movt	r0, #4
   2f360:	movt	r1, #4
   2f364:	movt	r3, #4
   2f368:	bl	14f40 <__assert_fail@plt>

0002f36c <flatcc_builder_truncate_offset_vector@@Base>:
   2f36c:	push	{fp, lr}
   2f370:	mov	fp, sp
   2f374:	ldr	r2, [r0, #32]
   2f378:	ldrh	r3, [r2, #14]
   2f37c:	cmp	r3, #5
   2f380:	bne	2f3c8 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   2f384:	ldr	r3, [r2, #20]
   2f388:	cmp	r3, r1
   2f38c:	bcc	2f3e8 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   2f390:	sub	r3, r3, r1
   2f394:	str	r3, [r2, #20]
   2f398:	ldr	r2, [r0, #32]
   2f39c:	ldr	r3, [r0, #20]
   2f3a0:	ldr	ip, [r0, #16]
   2f3a4:	ldr	r2, [r2, #16]
   2f3a8:	mls	r3, r2, r1, r3
   2f3ac:	mul	r2, r2, r1
   2f3b0:	mov	r1, #0
   2f3b4:	str	r3, [r0, #20]
   2f3b8:	add	r0, ip, r3
   2f3bc:	bl	14eec <memset@plt>
   2f3c0:	mov	r0, #0
   2f3c4:	pop	{fp, pc}
   2f3c8:	movw	r0, #39046	; 0x9886
   2f3cc:	movw	r1, #37994	; 0x946a
   2f3d0:	movw	r3, #39594	; 0x9aaa
   2f3d4:	movw	r2, #994	; 0x3e2
   2f3d8:	movt	r0, #4
   2f3dc:	movt	r1, #4
   2f3e0:	movt	r3, #4
   2f3e4:	bl	14f40 <__assert_fail@plt>
   2f3e8:	movw	r0, #39664	; 0x9af0
   2f3ec:	movw	r1, #37994	; 0x946a
   2f3f0:	movw	r3, #39594	; 0x9aaa
   2f3f4:	movw	r2, #995	; 0x3e3
   2f3f8:	movt	r0, #4
   2f3fc:	movt	r1, #4
   2f400:	movt	r3, #4
   2f404:	bl	14f40 <__assert_fail@plt>

0002f408 <flatcc_builder_truncate_string@@Base>:
   2f408:	push	{fp, lr}
   2f40c:	mov	fp, sp
   2f410:	mov	r2, r1
   2f414:	ldr	r1, [r0, #32]
   2f418:	ldrh	r3, [r1, #14]
   2f41c:	cmp	r3, #6
   2f420:	bne	2f45c <flatcc_builder_truncate_string@@Base+0x54>
   2f424:	ldr	r3, [r1, #20]
   2f428:	cmp	r3, r2
   2f42c:	bcc	2f47c <flatcc_builder_truncate_string@@Base+0x74>
   2f430:	sub	r3, r3, r2
   2f434:	str	r3, [r1, #20]
   2f438:	ldr	r3, [r0, #20]
   2f43c:	ldr	r1, [r0, #16]
   2f440:	sub	r3, r3, r2
   2f444:	str	r3, [r0, #20]
   2f448:	add	r0, r1, r3
   2f44c:	mov	r1, #0
   2f450:	bl	14eec <memset@plt>
   2f454:	mov	r0, #0
   2f458:	pop	{fp, pc}
   2f45c:	movw	r0, #39311	; 0x998f
   2f460:	movw	r1, #37994	; 0x946a
   2f464:	movw	r3, #39723	; 0x9b2b
   2f468:	movw	r2, #1003	; 0x3eb
   2f46c:	movt	r0, #4
   2f470:	movt	r1, #4
   2f474:	movt	r3, #4
   2f478:	bl	14f40 <__assert_fail@plt>
   2f47c:	movw	r0, #39786	; 0x9b6a
   2f480:	movw	r1, #37994	; 0x946a
   2f484:	movw	r3, #39723	; 0x9b2b
   2f488:	mov	r2, #1004	; 0x3ec
   2f48c:	movt	r0, #4
   2f490:	movt	r1, #4
   2f494:	movt	r3, #4
   2f498:	bl	14f40 <__assert_fail@plt>

0002f49c <flatcc_builder_start_vector@@Base>:
   2f49c:	push	{r4, r5, r6, r7, fp, lr}
   2f4a0:	add	fp, sp, #16
   2f4a4:	mov	r7, #4
   2f4a8:	cmp	r2, #4
   2f4ac:	mov	r6, r1
   2f4b0:	mov	r5, r3
   2f4b4:	mov	r4, r0
   2f4b8:	movls	r2, r7
   2f4bc:	mov	r1, r2
   2f4c0:	bl	2e518 <flatcc_builder_start_buffer@@Base+0xbc>
   2f4c4:	mov	r1, r0
   2f4c8:	mvn	r0, #0
   2f4cc:	cmp	r1, #0
   2f4d0:	popne	{r4, r5, r6, r7, fp, pc}
   2f4d4:	ldr	r0, [r4, #32]
   2f4d8:	str	r6, [r0, #16]
   2f4dc:	mov	r0, #0
   2f4e0:	ldr	r1, [r4, #32]
   2f4e4:	str	r0, [r1, #20]
   2f4e8:	ldr	r1, [r4, #32]
   2f4ec:	str	r5, [r1, #24]
   2f4f0:	ldr	r1, [r4, #32]
   2f4f4:	strh	r7, [r1, #14]
   2f4f8:	ldr	r2, [r4, #28]
   2f4fc:	ldr	r3, [r4, #60]	; 0x3c
   2f500:	ldr	r7, [r4, #64]	; 0x40
   2f504:	add	r3, r3, r2
   2f508:	sub	r2, r7, r2
   2f50c:	str	r3, [r4, #16]
   2f510:	mvn	r3, #3
   2f514:	cmn	r2, #4
   2f518:	movcs	r2, r3
   2f51c:	str	r2, [r4, #24]
   2f520:	str	r3, [r1, #4]
   2f524:	pop	{r4, r5, r6, r7, fp, pc}

0002f528 <flatcc_builder_start_offset_vector@@Base>:
   2f528:	push	{r4, r5, fp, lr}
   2f52c:	add	fp, sp, #8
   2f530:	mov	r1, #4
   2f534:	mov	r4, r0
   2f538:	mov	r5, #4
   2f53c:	bl	2e518 <flatcc_builder_start_buffer@@Base+0xbc>
   2f540:	mov	r1, r0
   2f544:	mvn	r0, #0
   2f548:	cmp	r1, #0
   2f54c:	popne	{r4, r5, fp, pc}
   2f550:	ldr	r0, [r4, #32]
   2f554:	mov	r2, #5
   2f558:	str	r5, [r0, #16]
   2f55c:	mov	r0, #0
   2f560:	ldr	r1, [r4, #32]
   2f564:	str	r0, [r1, #20]
   2f568:	ldr	r1, [r4, #32]
   2f56c:	strh	r2, [r1, #14]
   2f570:	ldr	r2, [r4, #28]
   2f574:	ldr	r3, [r4, #60]	; 0x3c
   2f578:	ldr	r5, [r4, #64]	; 0x40
   2f57c:	add	r3, r3, r2
   2f580:	sub	r2, r5, r2
   2f584:	str	r3, [r4, #16]
   2f588:	mvn	r3, #3
   2f58c:	cmn	r2, #4
   2f590:	movcs	r2, r3
   2f594:	str	r2, [r4, #24]
   2f598:	str	r3, [r1, #4]
   2f59c:	pop	{r4, r5, fp, pc}

0002f5a0 <flatcc_builder_create_offset_vector@@Base>:
   2f5a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f5a4:	add	fp, sp, #24
   2f5a8:	sub	sp, sp, #8
   2f5ac:	mov	r8, r1
   2f5b0:	mov	r1, #4
   2f5b4:	mov	r6, r2
   2f5b8:	mov	r4, r0
   2f5bc:	mov	r5, #4
   2f5c0:	bl	2e518 <flatcc_builder_start_buffer@@Base+0xbc>
   2f5c4:	mov	r7, #0
   2f5c8:	cmp	r0, #0
   2f5cc:	beq	2f5dc <flatcc_builder_create_offset_vector@@Base+0x3c>
   2f5d0:	mov	r0, r7
   2f5d4:	sub	sp, fp, #24
   2f5d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f5dc:	ldr	r0, [r4, #32]
   2f5e0:	mov	r1, #0
   2f5e4:	str	r5, [r0, #16]
   2f5e8:	ldr	r0, [r4, #32]
   2f5ec:	str	r1, [r0, #20]
   2f5f0:	mov	r1, #5
   2f5f4:	ldr	r0, [r4, #32]
   2f5f8:	strh	r1, [r0, #14]
   2f5fc:	ldr	r1, [r4, #28]
   2f600:	ldr	r2, [r4, #60]	; 0x3c
   2f604:	ldr	r3, [r4, #64]	; 0x40
   2f608:	add	r2, r2, r1
   2f60c:	sub	r1, r3, r1
   2f610:	str	r2, [r4, #16]
   2f614:	mvn	r2, #3
   2f618:	cmn	r1, #4
   2f61c:	movcs	r1, r2
   2f620:	str	r1, [r4, #24]
   2f624:	str	r2, [r0, #4]
   2f628:	ldr	r1, [r0, #20]
   2f62c:	adds	r1, r1, r6
   2f630:	cmpcc	r1, #1073741824	; 0x40000000
   2f634:	bcc	2f658 <flatcc_builder_create_offset_vector@@Base+0xb8>
   2f638:	movw	r0, #42265	; 0xa519
   2f63c:	movw	r1, #37994	; 0x946a
   2f640:	movw	r3, #42292	; 0xa534
   2f644:	mov	r2, #892	; 0x37c
   2f648:	movt	r0, #4
   2f64c:	movt	r1, #4
   2f650:	movt	r3, #4
   2f654:	bl	14f40 <__assert_fail@plt>
   2f658:	str	r1, [r0, #20]
   2f65c:	ldr	r5, [r4, #20]
   2f660:	ldr	r0, [r4, #24]
   2f664:	add	r1, r5, r6, lsl #2
   2f668:	cmp	r1, r0
   2f66c:	str	r1, [r4, #20]
   2f670:	bcs	2f744 <flatcc_builder_create_offset_vector@@Base+0x1a4>
   2f674:	ldr	r0, [r4, #16]
   2f678:	adds	r0, r0, r5
   2f67c:	beq	2f7b0 <flatcc_builder_create_offset_vector@@Base+0x210>
   2f680:	lsl	r2, r6, #2
   2f684:	mov	r1, r8
   2f688:	bl	14e5c <memcpy@plt>
   2f68c:	ldr	r0, [r4, #32]
   2f690:	ldrh	r1, [r0, #14]
   2f694:	cmp	r1, #5
   2f698:	bne	2f7c0 <flatcc_builder_create_offset_vector@@Base+0x220>
   2f69c:	ldr	r2, [r0, #20]
   2f6a0:	ldr	r1, [r4, #16]
   2f6a4:	mov	r0, r4
   2f6a8:	mov	r3, #0
   2f6ac:	mov	r7, #0
   2f6b0:	bl	30820 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2f6b4:	cmp	r0, #0
   2f6b8:	beq	2f5d0 <flatcc_builder_create_offset_vector@@Base+0x30>
   2f6bc:	mov	r5, r0
   2f6c0:	ldr	r0, [r4, #16]
   2f6c4:	ldr	r2, [r4, #20]
   2f6c8:	mov	r1, #0
   2f6cc:	bl	14eec <memset@plt>
   2f6d0:	ldr	r0, [r4, #32]
   2f6d4:	ldr	r1, [r4, #60]	; 0x3c
   2f6d8:	ldr	r2, [r4, #64]	; 0x40
   2f6dc:	ldr	r3, [r0, #8]
   2f6e0:	str	r3, [r4, #20]
   2f6e4:	ldr	r3, [r0]
   2f6e8:	str	r3, [r4, #28]
   2f6ec:	add	r1, r1, r3
   2f6f0:	ldr	r7, [r0, #4]
   2f6f4:	str	r1, [r4, #16]
   2f6f8:	sub	r1, r2, r3
   2f6fc:	cmp	r1, r7
   2f700:	movhi	r1, r7
   2f704:	mov	r7, r5
   2f708:	str	r1, [r4, #24]
   2f70c:	ldrh	r1, [r4, #130]	; 0x82
   2f710:	ldrh	r2, [r4, #128]	; 0x80
   2f714:	cmp	r2, r1
   2f718:	strhcc	r1, [r4, #128]	; 0x80
   2f71c:	ldrh	r1, [r0, #12]
   2f720:	sub	r0, r0, #36	; 0x24
   2f724:	str	r0, [r4, #32]
   2f728:	strh	r1, [r4, #130]	; 0x82
   2f72c:	ldr	r0, [r4, #156]	; 0x9c
   2f730:	sub	r0, r0, #1
   2f734:	str	r0, [r4, #156]	; 0x9c
   2f738:	mov	r0, r7
   2f73c:	sub	sp, fp, #24
   2f740:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f744:	ldr	r2, [r4, #28]
   2f748:	ldr	r0, [r4, #40]	; 0x28
   2f74c:	ldr	r7, [r4, #48]	; 0x30
   2f750:	mov	r3, #1
   2f754:	str	r3, [sp]
   2f758:	mov	r3, #1
   2f75c:	add	r1, r1, r2
   2f760:	add	r2, r1, #1
   2f764:	add	r1, r4, #60	; 0x3c
   2f768:	blx	r7
   2f76c:	mov	r7, #0
   2f770:	cmp	r0, #0
   2f774:	bne	2f5d0 <flatcc_builder_create_offset_vector@@Base+0x30>
   2f778:	ldr	r1, [r4, #28]
   2f77c:	ldr	r0, [r4, #60]	; 0x3c
   2f780:	ldr	r3, [r4, #64]	; 0x40
   2f784:	ldr	r2, [r4, #32]
   2f788:	add	r0, r0, r1
   2f78c:	sub	r1, r3, r1
   2f790:	mvn	r3, #3
   2f794:	cmn	r1, #4
   2f798:	str	r0, [r4, #16]
   2f79c:	movcs	r1, r3
   2f7a0:	str	r1, [r4, #24]
   2f7a4:	str	r3, [r2, #4]
   2f7a8:	adds	r0, r0, r5
   2f7ac:	bne	2f680 <flatcc_builder_create_offset_vector@@Base+0xe0>
   2f7b0:	mov	r7, #0
   2f7b4:	mov	r0, r7
   2f7b8:	sub	sp, fp, #24
   2f7bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f7c0:	movw	r0, #39046	; 0x9886
   2f7c4:	movw	r1, #37994	; 0x946a
   2f7c8:	movw	r3, #40629	; 0x9eb5
   2f7cc:	movw	r2, #1480	; 0x5c8
   2f7d0:	movt	r0, #4
   2f7d4:	movt	r1, #4
   2f7d8:	movt	r3, #4
   2f7dc:	bl	14f40 <__assert_fail@plt>

0002f7e0 <flatcc_builder_end_offset_vector@@Base>:
   2f7e0:	push	{r4, r5, fp, lr}
   2f7e4:	add	fp, sp, #8
   2f7e8:	mov	r4, r0
   2f7ec:	ldr	r0, [r0, #32]
   2f7f0:	ldrh	r1, [r0, #14]
   2f7f4:	cmp	r1, #5
   2f7f8:	bne	2f898 <flatcc_builder_end_offset_vector@@Base+0xb8>
   2f7fc:	ldr	r2, [r0, #20]
   2f800:	ldr	r1, [r4, #16]
   2f804:	mov	r0, r4
   2f808:	mov	r3, #0
   2f80c:	bl	30820 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2f810:	mov	r5, r0
   2f814:	cmp	r0, #0
   2f818:	beq	2f890 <flatcc_builder_end_offset_vector@@Base+0xb0>
   2f81c:	ldr	r0, [r4, #16]
   2f820:	ldr	r2, [r4, #20]
   2f824:	mov	r1, #0
   2f828:	bl	14eec <memset@plt>
   2f82c:	ldr	r0, [r4, #32]
   2f830:	ldr	r1, [r4, #60]	; 0x3c
   2f834:	ldr	ip, [r4, #64]	; 0x40
   2f838:	ldr	r3, [r0, #8]
   2f83c:	str	r3, [r4, #20]
   2f840:	ldr	r3, [r0]
   2f844:	str	r3, [r4, #28]
   2f848:	add	r1, r1, r3
   2f84c:	ldr	r2, [r0, #4]
   2f850:	str	r1, [r4, #16]
   2f854:	sub	r1, ip, r3
   2f858:	cmp	r1, r2
   2f85c:	movhi	r1, r2
   2f860:	str	r1, [r4, #24]
   2f864:	ldrh	r1, [r4, #130]	; 0x82
   2f868:	ldrh	r2, [r4, #128]	; 0x80
   2f86c:	cmp	r2, r1
   2f870:	strhcc	r1, [r4, #128]	; 0x80
   2f874:	ldrh	r1, [r0, #12]
   2f878:	sub	r0, r0, #36	; 0x24
   2f87c:	str	r0, [r4, #32]
   2f880:	strh	r1, [r4, #130]	; 0x82
   2f884:	ldr	r0, [r4, #156]	; 0x9c
   2f888:	sub	r0, r0, #1
   2f88c:	str	r0, [r4, #156]	; 0x9c
   2f890:	mov	r0, r5
   2f894:	pop	{r4, r5, fp, pc}
   2f898:	movw	r0, #39046	; 0x9886
   2f89c:	movw	r1, #37994	; 0x946a
   2f8a0:	movw	r3, #40629	; 0x9eb5
   2f8a4:	movw	r2, #1480	; 0x5c8
   2f8a8:	movt	r0, #4
   2f8ac:	movt	r1, #4
   2f8b0:	movt	r3, #4
   2f8b4:	bl	14f40 <__assert_fail@plt>

0002f8b8 <flatcc_builder_start_string@@Base>:
   2f8b8:	push	{r4, r5, fp, lr}
   2f8bc:	add	fp, sp, #8
   2f8c0:	mov	r1, #1
   2f8c4:	mov	r4, r0
   2f8c8:	mov	r5, #1
   2f8cc:	bl	2e518 <flatcc_builder_start_buffer@@Base+0xbc>
   2f8d0:	mov	r1, r0
   2f8d4:	mvn	r0, #0
   2f8d8:	cmp	r1, #0
   2f8dc:	popne	{r4, r5, fp, pc}
   2f8e0:	ldr	r0, [r4, #32]
   2f8e4:	mov	r2, #6
   2f8e8:	str	r5, [r0, #16]
   2f8ec:	mov	r0, #0
   2f8f0:	ldr	r1, [r4, #32]
   2f8f4:	str	r0, [r1, #20]
   2f8f8:	ldr	r1, [r4, #32]
   2f8fc:	strh	r2, [r1, #14]
   2f900:	ldr	r2, [r4, #28]
   2f904:	ldr	r3, [r4, #60]	; 0x3c
   2f908:	ldr	r5, [r4, #64]	; 0x40
   2f90c:	add	r3, r3, r2
   2f910:	sub	r2, r5, r2
   2f914:	str	r3, [r4, #16]
   2f918:	mvn	r3, #3
   2f91c:	cmn	r2, #4
   2f920:	movcs	r2, r3
   2f924:	str	r2, [r4, #24]
   2f928:	str	r3, [r1, #4]
   2f92c:	pop	{r4, r5, fp, pc}

0002f930 <flatcc_builder_reserve_table@@Base>:
   2f930:	push	{r4, r5, r6, sl, fp, lr}
   2f934:	add	fp, sp, #16
   2f938:	sub	sp, sp, #8
   2f93c:	cmn	r1, #1
   2f940:	ble	2fa18 <flatcc_builder_reserve_table@@Base+0xe8>
   2f944:	mov	r4, r0
   2f948:	ldr	r0, [r0, #32]
   2f94c:	mov	r5, r1
   2f950:	ldr	r1, [r4, #56]	; 0x38
   2f954:	ldrh	r2, [r0, #28]
   2f958:	ldr	r0, [r0, #16]
   2f95c:	add	r6, r0, r2, lsl #1
   2f960:	add	r0, r6, r5, lsl #1
   2f964:	add	r2, r0, #4
   2f968:	cmp	r2, r1
   2f96c:	bls	2f994 <flatcc_builder_reserve_table@@Base+0x64>
   2f970:	ldr	r0, [r4, #40]	; 0x28
   2f974:	ldr	ip, [r4, #48]	; 0x30
   2f978:	mov	r3, #0
   2f97c:	add	r1, r4, #52	; 0x34
   2f980:	str	r3, [sp]
   2f984:	mov	r3, #1
   2f988:	blx	ip
   2f98c:	cmp	r0, #0
   2f990:	bne	2fa38 <flatcc_builder_reserve_table@@Base+0x108>
   2f994:	ldr	r0, [r4, #52]	; 0x34
   2f998:	adds	r0, r0, r6
   2f99c:	str	r0, [r4, #4]
   2f9a0:	beq	2fa0c <flatcc_builder_reserve_table@@Base+0xdc>
   2f9a4:	add	r0, r0, #4
   2f9a8:	lsl	r1, r5, #1
   2f9ac:	str	r0, [r4, #4]
   2f9b0:	ldr	r0, [r4, #32]
   2f9b4:	ldr	r3, [r4, #80]	; 0x50
   2f9b8:	ldr	r5, [r0, #20]
   2f9bc:	orr	r0, r1, #1
   2f9c0:	add	r2, r5, r0
   2f9c4:	cmp	r2, r3
   2f9c8:	bls	2f9f0 <flatcc_builder_reserve_table@@Base+0xc0>
   2f9cc:	ldr	r0, [r4, #40]	; 0x28
   2f9d0:	ldr	r6, [r4, #48]	; 0x30
   2f9d4:	mov	r3, #3
   2f9d8:	add	r1, r4, #76	; 0x4c
   2f9dc:	str	r3, [sp]
   2f9e0:	mov	r3, #0
   2f9e4:	blx	r6
   2f9e8:	cmp	r0, #0
   2f9ec:	bne	2fa38 <flatcc_builder_reserve_table@@Base+0x108>
   2f9f0:	ldr	r0, [r4, #76]	; 0x4c
   2f9f4:	adds	r0, r0, r5
   2f9f8:	str	r0, [r4]
   2f9fc:	mov	r0, #0
   2fa00:	mvneq	r0, #0
   2fa04:	sub	sp, fp, #16
   2fa08:	pop	{r4, r5, r6, sl, fp, pc}
   2fa0c:	mvn	r0, #0
   2fa10:	sub	sp, fp, #16
   2fa14:	pop	{r4, r5, r6, sl, fp, pc}
   2fa18:	movw	r0, #39885	; 0x9bcd
   2fa1c:	movw	r1, #37994	; 0x946a
   2fa20:	movw	r3, #39820	; 0x9b8c
   2fa24:	movw	r2, #1065	; 0x429
   2fa28:	movt	r0, #4
   2fa2c:	movt	r1, #4
   2fa30:	movt	r3, #4
   2fa34:	bl	14f40 <__assert_fail@plt>
   2fa38:	movw	r0, #42512	; 0xa610
   2fa3c:	movw	r1, #37994	; 0x946a
   2fa40:	movw	r3, #42058	; 0xa44a
   2fa44:	mov	r2, #308	; 0x134
   2fa48:	movt	r0, #4
   2fa4c:	movt	r1, #4
   2fa50:	movt	r3, #4
   2fa54:	bl	14f40 <__assert_fail@plt>

0002fa58 <flatcc_builder_start_table@@Base>:
   2fa58:	push	{r4, r5, r6, r7, fp, lr}
   2fa5c:	add	fp, sp, #16
   2fa60:	sub	sp, sp, #8
   2fa64:	mov	r6, r1
   2fa68:	mov	r1, #4
   2fa6c:	mov	r4, r0
   2fa70:	bl	2e518 <flatcc_builder_start_buffer@@Base+0xbc>
   2fa74:	mvn	r5, #0
   2fa78:	cmp	r0, #0
   2fa7c:	beq	2fa8c <flatcc_builder_start_table@@Base+0x34>
   2fa80:	mov	r0, r5
   2fa84:	sub	sp, fp, #16
   2fa88:	pop	{r4, r5, r6, r7, fp, pc}
   2fa8c:	mov	r1, r4
   2fa90:	ldr	r2, [r4, #4]
   2fa94:	ldr	r3, [r4, #32]
   2fa98:	ldr	r0, [r1, #52]!	; 0x34
   2fa9c:	sub	r0, r2, r0
   2faa0:	str	r0, [r3, #16]
   2faa4:	ldr	r0, [r4]
   2faa8:	ldr	r3, [r4, #76]	; 0x4c
   2faac:	ldr	r2, [r4, #32]
   2fab0:	sub	r0, r0, r3
   2fab4:	mov	r3, #0
   2fab8:	str	r0, [r2, #20]
   2fabc:	ldr	r0, [r4, #12]
   2fac0:	ldr	r2, [r4, #32]
   2fac4:	str	r0, [r2, #24]
   2fac8:	ldr	r0, [r4, #32]
   2facc:	ldrh	r2, [r4, #8]
   2fad0:	strh	r2, [r0, #28]
   2fad4:	movw	r0, #15186	; 0x3b52
   2fad8:	strh	r3, [r4, #8]
   2fadc:	mov	r2, #3
   2fae0:	movt	r0, #12137	; 0x2f69
   2fae4:	str	r0, [r4, #12]
   2fae8:	ldr	r0, [r4, #32]
   2faec:	strh	r2, [r0, #14]
   2faf0:	ldrh	r2, [r0, #28]
   2faf4:	ldr	r0, [r0, #16]
   2faf8:	add	r7, r0, r2, lsl #1
   2fafc:	add	r0, r7, r6, lsl #1
   2fb00:	add	r2, r0, #4
   2fb04:	ldr	r0, [r4, #56]	; 0x38
   2fb08:	cmp	r2, r0
   2fb0c:	bls	2fb2c <flatcc_builder_start_table@@Base+0xd4>
   2fb10:	ldr	r0, [r4, #40]	; 0x28
   2fb14:	ldr	ip, [r4, #48]	; 0x30
   2fb18:	str	r3, [sp]
   2fb1c:	mov	r3, #1
   2fb20:	blx	ip
   2fb24:	cmp	r0, #0
   2fb28:	bne	2fbd8 <flatcc_builder_start_table@@Base+0x180>
   2fb2c:	ldr	r0, [r4, #52]	; 0x34
   2fb30:	adds	r0, r0, r7
   2fb34:	str	r0, [r4, #4]
   2fb38:	beq	2fa80 <flatcc_builder_start_table@@Base+0x28>
   2fb3c:	add	r0, r0, #4
   2fb40:	lsl	r1, r6, #1
   2fb44:	str	r0, [r4, #4]
   2fb48:	ldr	r0, [r4, #32]
   2fb4c:	ldr	r3, [r4, #80]	; 0x50
   2fb50:	ldr	r6, [r0, #20]
   2fb54:	orr	r0, r1, #1
   2fb58:	add	r2, r6, r0
   2fb5c:	cmp	r2, r3
   2fb60:	bls	2fb88 <flatcc_builder_start_table@@Base+0x130>
   2fb64:	ldr	r0, [r4, #40]	; 0x28
   2fb68:	ldr	r7, [r4, #48]	; 0x30
   2fb6c:	mov	r3, #3
   2fb70:	add	r1, r4, #76	; 0x4c
   2fb74:	str	r3, [sp]
   2fb78:	mov	r3, #0
   2fb7c:	blx	r7
   2fb80:	cmp	r0, #0
   2fb84:	bne	2fbd8 <flatcc_builder_start_table@@Base+0x180>
   2fb88:	ldr	r0, [r4, #76]	; 0x4c
   2fb8c:	adds	r0, r0, r6
   2fb90:	str	r0, [r4]
   2fb94:	beq	2fa80 <flatcc_builder_start_table@@Base+0x28>
   2fb98:	ldr	r0, [r4, #28]
   2fb9c:	ldr	r2, [r4, #60]	; 0x3c
   2fba0:	ldr	r3, [r4, #64]	; 0x40
   2fba4:	ldr	r1, [r4, #32]
   2fba8:	mov	r5, #0
   2fbac:	add	r2, r2, r0
   2fbb0:	sub	r0, r3, r0
   2fbb4:	str	r2, [r4, #16]
   2fbb8:	movw	r2, #65532	; 0xfffc
   2fbbc:	cmp	r0, r2
   2fbc0:	movcs	r0, r2
   2fbc4:	str	r0, [r4, #24]
   2fbc8:	str	r2, [r1, #4]
   2fbcc:	mov	r0, r5
   2fbd0:	sub	sp, fp, #16
   2fbd4:	pop	{r4, r5, r6, r7, fp, pc}
   2fbd8:	movw	r0, #42512	; 0xa610
   2fbdc:	movw	r1, #37994	; 0x946a
   2fbe0:	movw	r3, #42058	; 0xa44a
   2fbe4:	mov	r2, #308	; 0x134
   2fbe8:	movt	r0, #4
   2fbec:	movt	r1, #4
   2fbf0:	movt	r3, #4
   2fbf4:	bl	14f40 <__assert_fail@plt>

0002fbf8 <flatcc_builder_create_vtable@@Base>:
   2fbf8:	push	{r4, r5, fp, lr}
   2fbfc:	add	fp, sp, #8
   2fc00:	sub	sp, sp, #80	; 0x50
   2fc04:	mov	r3, r2
   2fc08:	mov	r2, #0
   2fc0c:	mov	r4, r0
   2fc10:	cmp	r3, #0
   2fc14:	str	r2, [sp, #12]
   2fc18:	str	r2, [sp, #8]
   2fc1c:	movne	r2, #1
   2fc20:	strne	r3, [sp, #20]
   2fc24:	strne	r1, [sp, #16]
   2fc28:	strne	r3, [sp, #8]
   2fc2c:	strne	r2, [sp, #12]
   2fc30:	ldr	r0, [r4, #152]	; 0x98
   2fc34:	cmp	r0, #0
   2fc38:	bne	2fc48 <flatcc_builder_create_vtable@@Base+0x50>
   2fc3c:	ldr	r0, [r4, #180]	; 0xb4
   2fc40:	cmp	r0, #0
   2fc44:	beq	2fca4 <flatcc_builder_create_vtable@@Base+0xac>
   2fc48:	cmp	r3, #0
   2fc4c:	beq	2fce8 <flatcc_builder_create_vtable@@Base+0xf0>
   2fc50:	ldr	r0, [r4, #136]	; 0x88
   2fc54:	ldr	ip, [r4, #44]	; 0x2c
   2fc58:	add	r1, sp, #8
   2fc5c:	add	r1, r1, #8
   2fc60:	sub	r5, r0, r3
   2fc64:	ldr	r0, [r4, #36]	; 0x24
   2fc68:	str	r3, [sp]
   2fc6c:	mov	r3, r5
   2fc70:	blx	ip
   2fc74:	cmp	r0, #0
   2fc78:	bne	2fd08 <flatcc_builder_create_vtable@@Base+0x110>
   2fc7c:	cmp	r5, #0
   2fc80:	str	r5, [r4, #136]	; 0x88
   2fc84:	beq	2fc98 <flatcc_builder_create_vtable@@Base+0xa0>
   2fc88:	add	r1, r5, #1
   2fc8c:	mov	r0, r1
   2fc90:	sub	sp, fp, #8
   2fc94:	pop	{r4, r5, fp, pc}
   2fc98:	mov	r0, #0
   2fc9c:	sub	sp, fp, #8
   2fca0:	pop	{r4, r5, fp, pc}
   2fca4:	ldr	r5, [r4, #140]	; 0x8c
   2fca8:	ldr	r0, [r4, #36]	; 0x24
   2fcac:	ldr	ip, [r4, #44]	; 0x2c
   2fcb0:	add	r1, r5, r3
   2fcb4:	str	r1, [r4, #140]	; 0x8c
   2fcb8:	add	r1, sp, #8
   2fcbc:	str	r3, [sp]
   2fcc0:	mov	r3, r5
   2fcc4:	add	r1, r1, #8
   2fcc8:	blx	ip
   2fccc:	cmp	r0, #0
   2fcd0:	bne	2fd28 <flatcc_builder_create_vtable@@Base+0x130>
   2fcd4:	adds	r1, r5, #1
   2fcd8:	mov	r0, #0
   2fcdc:	movcc	r0, r1
   2fce0:	sub	sp, fp, #8
   2fce4:	pop	{r4, r5, fp, pc}
   2fce8:	movw	r0, #42512	; 0xa610
   2fcec:	movw	r1, #37994	; 0x946a
   2fcf0:	movw	r3, #42191	; 0xa4cf
   2fcf4:	movw	r2, #647	; 0x287
   2fcf8:	movt	r0, #4
   2fcfc:	movt	r1, #4
   2fd00:	movt	r3, #4
   2fd04:	bl	14f40 <__assert_fail@plt>
   2fd08:	movw	r0, #42512	; 0xa610
   2fd0c:	movw	r1, #37994	; 0x946a
   2fd10:	movw	r3, #42191	; 0xa4cf
   2fd14:	movw	r2, #651	; 0x28b
   2fd18:	movt	r0, #4
   2fd1c:	movt	r1, #4
   2fd20:	movt	r3, #4
   2fd24:	bl	14f40 <__assert_fail@plt>
   2fd28:	movw	r0, #42512	; 0xa610
   2fd2c:	movw	r1, #37994	; 0x946a
   2fd30:	movw	r3, #42379	; 0xa58b
   2fd34:	movw	r2, #677	; 0x2a5
   2fd38:	movt	r0, #4
   2fd3c:	movt	r1, #4
   2fd40:	movt	r3, #4
   2fd44:	bl	14f40 <__assert_fail@plt>

0002fd48 <flatcc_builder_create_cached_vtable@@Base>:
   2fd48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fd4c:	add	fp, sp, #28
   2fd50:	sub	sp, sp, #20
   2fd54:	mov	sl, r0
   2fd58:	ldr	r0, [r0, #116]	; 0x74
   2fd5c:	mov	r8, r3
   2fd60:	mov	r5, r2
   2fd64:	str	r1, [sp, #16]
   2fd68:	cmp	r0, #0
   2fd6c:	beq	2fe10 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2fd70:	ldr	r1, [sl, #92]	; 0x5c
   2fd74:	rsb	r0, r0, #32
   2fd78:	lsr	r0, r8, r0
   2fd7c:	add	r6, r1, r0, lsl #2
   2fd80:	cmp	r6, #0
   2fd84:	beq	2fed4 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   2fd88:	ldr	r7, [r6]
   2fd8c:	str	r6, [sp, #12]
   2fd90:	cmp	r7, #0
   2fd94:	beq	2fee4 <flatcc_builder_create_cached_vtable@@Base+0x19c>
   2fd98:	ldr	r4, [sl, #68]	; 0x44
   2fd9c:	ldr	r8, [sl, #100]	; 0x64
   2fda0:	mov	r0, #0
   2fda4:	str	r0, [sp, #8]
   2fda8:	b	2fdbc <flatcc_builder_create_cached_vtable@@Base+0x74>
   2fdac:	ldr	r7, [r9, #12]!
   2fdb0:	mov	r6, r9
   2fdb4:	cmp	r7, #0
   2fdb8:	beq	2fecc <flatcc_builder_create_cached_vtable@@Base+0x184>
   2fdbc:	add	r9, r8, r7
   2fdc0:	mov	r1, r4
   2fdc4:	ldr	r0, [r9, #8]
   2fdc8:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2fdcc:	cmp	r0, r5
   2fdd0:	bne	2fdac <flatcc_builder_create_cached_vtable@@Base+0x64>
   2fdd4:	ldr	r0, [sp, #16]
   2fdd8:	mov	r2, r5
   2fddc:	bl	14ebc <bcmp@plt>
   2fde0:	cmp	r0, #0
   2fde4:	bne	2fdac <flatcc_builder_create_cached_vtable@@Base+0x64>
   2fde8:	ldr	r0, [sl, #152]	; 0x98
   2fdec:	ldr	r1, [r9, #4]
   2fdf0:	cmp	r1, r0
   2fdf4:	beq	30050 <flatcc_builder_create_cached_vtable@@Base+0x308>
   2fdf8:	mov	r6, r9
   2fdfc:	mov	r0, r9
   2fe00:	ldr	r7, [r6, #12]!
   2fe04:	cmp	r7, #0
   2fe08:	bne	2fda4 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2fe0c:	b	2fee8 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   2fe10:	ldr	r0, [sl, #124]	; 0x7c
   2fe14:	cmp	r0, #0
   2fe18:	bne	300a4 <flatcc_builder_create_cached_vtable@@Base+0x35c>
   2fe1c:	ldr	r0, [sl, #104]	; 0x68
   2fe20:	add	r7, sl, #100	; 0x64
   2fe24:	cmp	r0, #15
   2fe28:	bhi	2fe54 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   2fe2c:	ldr	r0, [sl, #40]	; 0x28
   2fe30:	ldr	r6, [sl, #48]	; 0x30
   2fe34:	mov	r1, #6
   2fe38:	mov	r2, #16
   2fe3c:	mov	r3, #0
   2fe40:	str	r1, [sp]
   2fe44:	mov	r1, r7
   2fe48:	blx	r6
   2fe4c:	cmp	r0, #0
   2fe50:	bne	30084 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   2fe54:	ldr	r0, [r7]
   2fe58:	mov	r7, #0
   2fe5c:	cmp	r0, #0
   2fe60:	beq	2ff88 <flatcc_builder_create_cached_vtable@@Base+0x240>
   2fe64:	mov	r0, #16
   2fe68:	mov	r2, #5
   2fe6c:	add	r1, sl, #92	; 0x5c
   2fe70:	mov	r3, #1
   2fe74:	mov	r4, #256	; 0x100
   2fe78:	str	r0, [sl, #124]	; 0x7c
   2fe7c:	ldr	r0, [sl, #40]	; 0x28
   2fe80:	ldr	r6, [sl, #48]	; 0x30
   2fe84:	str	r2, [sp]
   2fe88:	mov	r2, #256	; 0x100
   2fe8c:	blx	r6
   2fe90:	cmp	r0, #0
   2fe94:	bne	2ff88 <flatcc_builder_create_cached_vtable@@Base+0x240>
   2fe98:	ldr	r0, [sl, #96]	; 0x60
   2fe9c:	mov	r1, r4
   2fea0:	lsl	r4, r4, #1
   2fea4:	cmp	r0, r1, lsl #1
   2fea8:	bcs	2fe9c <flatcc_builder_create_cached_vtable@@Base+0x154>
   2feac:	lsr	r1, r1, #2
   2feb0:	mvn	r0, #0
   2feb4:	mov	r2, #1
   2feb8:	add	r0, r0, #1
   2febc:	cmp	r1, r2, lsl r0
   2fec0:	bhi	2feb8 <flatcc_builder_create_cached_vtable@@Base+0x170>
   2fec4:	str	r0, [sl, #116]	; 0x74
   2fec8:	b	2fd70 <flatcc_builder_create_cached_vtable@@Base+0x28>
   2fecc:	ldr	r9, [sp, #8]
   2fed0:	b	2fee8 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   2fed4:	mov	r7, #0
   2fed8:	mov	r0, r7
   2fedc:	sub	sp, fp, #28
   2fee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fee4:	mov	r9, #0
   2fee8:	ldr	r4, [sl, #124]	; 0x7c
   2feec:	ldr	r0, [sl, #104]	; 0x68
   2fef0:	add	r7, sl, #100	; 0x64
   2fef4:	add	r2, r4, #16
   2fef8:	cmp	r2, r0
   2fefc:	bls	2ff24 <flatcc_builder_create_cached_vtable@@Base+0x1dc>
   2ff00:	ldr	r0, [sl, #40]	; 0x28
   2ff04:	ldr	r6, [sl, #48]	; 0x30
   2ff08:	mov	r1, #6
   2ff0c:	mov	r3, #0
   2ff10:	str	r1, [sp]
   2ff14:	mov	r1, r7
   2ff18:	blx	r6
   2ff1c:	cmp	r0, #0
   2ff20:	bne	30084 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   2ff24:	ldr	r0, [r7]
   2ff28:	mov	r7, #0
   2ff2c:	adds	r4, r0, r4
   2ff30:	beq	2ff88 <flatcc_builder_create_cached_vtable@@Base+0x240>
   2ff34:	ldr	r0, [sl, #124]	; 0x7c
   2ff38:	ldr	r1, [sl, #152]	; 0x98
   2ff3c:	add	r2, r0, #16
   2ff40:	str	r2, [sl, #124]	; 0x7c
   2ff44:	ldr	r2, [sp, #12]
   2ff48:	str	r1, [r4, #4]
   2ff4c:	ldr	r1, [r2]
   2ff50:	str	r1, [r4, #12]
   2ff54:	ldr	r1, [sp, #16]
   2ff58:	str	r0, [r2]
   2ff5c:	mov	r0, sl
   2ff60:	mov	r2, r5
   2ff64:	bl	2fbf8 <flatcc_builder_create_vtable@@Base>
   2ff68:	cmp	r0, #0
   2ff6c:	str	r0, [r4]
   2ff70:	beq	2ff88 <flatcc_builder_create_cached_vtable@@Base+0x240>
   2ff74:	cmp	r9, #0
   2ff78:	beq	2ff94 <flatcc_builder_create_cached_vtable@@Base+0x24c>
   2ff7c:	ldr	r0, [r9, #8]
   2ff80:	str	r0, [r4, #8]
   2ff84:	ldr	r7, [r4]
   2ff88:	mov	r0, r7
   2ff8c:	sub	sp, fp, #28
   2ff90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ff94:	ldr	r6, [sl, #120]	; 0x78
   2ff98:	ldr	r0, [sl, #172]	; 0xac
   2ff9c:	add	r2, r6, r5
   2ffa0:	cmp	r0, #0
   2ffa4:	beq	2ffe0 <flatcc_builder_create_cached_vtable@@Base+0x298>
   2ffa8:	cmp	r0, r2
   2ffac:	bcs	2ffe0 <flatcc_builder_create_cached_vtable@@Base+0x298>
   2ffb0:	ldr	r0, [sl, #116]	; 0x74
   2ffb4:	cmp	r0, #0
   2ffb8:	beq	2ff84 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   2ffbc:	ldr	r0, [sl, #92]	; 0x5c
   2ffc0:	ldr	r2, [sl, #96]	; 0x60
   2ffc4:	mov	r1, #0
   2ffc8:	mov	r5, #0
   2ffcc:	bl	14eec <memset@plt>
   2ffd0:	mov	r0, #16
   2ffd4:	str	r5, [sl, #120]	; 0x78
   2ffd8:	str	r0, [sl, #124]	; 0x7c
   2ffdc:	b	2ff84 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   2ffe0:	ldr	r0, [sl, #72]	; 0x48
   2ffe4:	add	r7, sl, #68	; 0x44
   2ffe8:	cmp	r2, r0
   2ffec:	bls	30014 <flatcc_builder_create_cached_vtable@@Base+0x2cc>
   2fff0:	ldr	r0, [sl, #40]	; 0x28
   2fff4:	ldr	ip, [sl, #48]	; 0x30
   2fff8:	mov	r1, #2
   2fffc:	mov	r3, #0
   30000:	str	r1, [sp]
   30004:	mov	r1, r7
   30008:	blx	ip
   3000c:	cmp	r0, #0
   30010:	bne	30084 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   30014:	ldr	r0, [r7]
   30018:	adds	r0, r0, r6
   3001c:	beq	30040 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   30020:	ldr	r1, [sl, #120]	; 0x78
   30024:	mov	r2, r5
   30028:	str	r1, [r4, #8]
   3002c:	add	r1, r1, r5
   30030:	str	r1, [sl, #120]	; 0x78
   30034:	ldr	r1, [sp, #16]
   30038:	bl	14e5c <memcpy@plt>
   3003c:	b	2ff84 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   30040:	mvn	r7, #0
   30044:	mov	r0, r7
   30048:	sub	sp, fp, #28
   3004c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30050:	ldr	r0, [sp, #12]
   30054:	cmp	r6, r0
   30058:	beq	30074 <flatcc_builder_create_cached_vtable@@Base+0x32c>
   3005c:	mov	r1, r0
   30060:	ldr	r0, [r9, #12]
   30064:	str	r0, [r6]
   30068:	ldr	r0, [r1]
   3006c:	str	r0, [r9, #12]
   30070:	str	r7, [r1]
   30074:	ldr	r7, [r9]
   30078:	mov	r0, r7
   3007c:	sub	sp, fp, #28
   30080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30084:	movw	r0, #42512	; 0xa610
   30088:	movw	r1, #37994	; 0x946a
   3008c:	movw	r3, #42058	; 0xa44a
   30090:	mov	r2, #308	; 0x134
   30094:	movt	r0, #4
   30098:	movt	r1, #4
   3009c:	movt	r3, #4
   300a0:	bl	14f40 <__assert_fail@plt>
   300a4:	movw	r0, #42452	; 0xa5d4
   300a8:	movw	r1, #37994	; 0x946a
   300ac:	movw	r3, #42467	; 0xa5e3
   300b0:	movw	r2, #342	; 0x156
   300b4:	movt	r0, #4
   300b8:	movt	r1, #4
   300bc:	movt	r3, #4
   300c0:	bl	14f40 <__assert_fail@plt>

000300c4 <flatcc_builder_create_table@@Base>:
   300c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   300c8:	add	fp, sp, #24
   300cc:	sub	sp, sp, #80	; 0x50
   300d0:	ldr	r5, [fp, #12]
   300d4:	cmn	r5, #1
   300d8:	ble	30224 <flatcc_builder_create_table@@Base+0x160>
   300dc:	ldr	ip, [fp, #16]
   300e0:	tst	ip, #1
   300e4:	beq	30244 <flatcc_builder_create_table@@Base+0x180>
   300e8:	mov	r8, r0
   300ec:	ldrh	r0, [r0, #128]	; 0x80
   300f0:	cmp	r3, #4
   300f4:	movls	r3, #4
   300f8:	cmp	r0, r3
   300fc:	strhcc	r3, [r8, #128]	; 0x80
   30100:	cmp	r5, #1
   30104:	ldr	r0, [r8, #136]	; 0x88
   30108:	sub	r4, r0, r2
   3010c:	sub	r0, r3, #1
   30110:	and	r0, r4, r0
   30114:	sub	r4, r4, #4
   30118:	add	r3, ip, r0
   3011c:	sub	r3, r4, r3
   30120:	add	r3, r3, #1
   30124:	str	r3, [fp, #-28]	; 0xffffffe4
   30128:	blt	30158 <flatcc_builder_create_table@@Base+0x94>
   3012c:	ldr	r3, [fp, #8]
   30130:	sub	ip, r4, r0
   30134:	mvn	r4, #3
   30138:	sub	r4, r4, ip
   3013c:	ldrh	r6, [r3], #2
   30140:	subs	r5, r5, #1
   30144:	ldr	r7, [r6, r1]
   30148:	add	r7, r4, r7
   3014c:	sub	r7, r7, r6
   30150:	str	r7, [r6, r1]
   30154:	bne	3013c <flatcc_builder_create_table@@Base+0x78>
   30158:	mov	r4, #4
   3015c:	sub	r3, fp, #28
   30160:	cmp	r2, #0
   30164:	str	r4, [sp, #16]
   30168:	str	r3, [sp, #12]
   3016c:	mov	r3, #1
   30170:	str	r4, [sp, #4]
   30174:	addne	r4, r2, #4
   30178:	str	r3, [sp, #8]
   3017c:	movne	r3, #2
   30180:	strne	r2, [sp, #24]
   30184:	strne	r1, [sp, #20]
   30188:	strne	r3, [sp, #8]
   3018c:	strne	r4, [sp, #4]
   30190:	cmp	r0, #0
   30194:	beq	301c0 <flatcc_builder_create_table@@Base+0xfc>
   30198:	add	r1, sp, #4
   3019c:	movw	r2, #37464	; 0x9258
   301a0:	add	r4, r4, r0
   301a4:	add	r1, r1, r3, lsl #3
   301a8:	movt	r2, #4
   301ac:	add	r3, r3, #1
   301b0:	str	r4, [sp, #4]
   301b4:	str	r2, [r1, #8]
   301b8:	str	r0, [r1, #12]
   301bc:	str	r3, [sp, #8]
   301c0:	cmp	r4, #0
   301c4:	ble	30264 <flatcc_builder_create_table@@Base+0x1a0>
   301c8:	ldr	r0, [r8, #136]	; 0x88
   301cc:	ldr	r7, [r8, #44]	; 0x2c
   301d0:	add	r1, sp, #4
   301d4:	mov	r2, r3
   301d8:	add	r1, r1, #8
   301dc:	sub	r5, r0, r4
   301e0:	ldr	r0, [r8, #36]	; 0x24
   301e4:	str	r4, [sp]
   301e8:	mov	r3, r5
   301ec:	blx	r7
   301f0:	cmp	r0, #0
   301f4:	streq	r5, [r8, #136]	; 0x88
   301f8:	moveq	r0, r5
   301fc:	subeq	sp, fp, #24
   30200:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   30204:	movw	r0, #42512	; 0xa610
   30208:	movw	r1, #37994	; 0x946a
   3020c:	movw	r3, #42191	; 0xa4cf
   30210:	movw	r2, #651	; 0x28b
   30214:	movt	r0, #4
   30218:	movt	r1, #4
   3021c:	movt	r3, #4
   30220:	bl	14f40 <__assert_fail@plt>
   30224:	movw	r0, #39878	; 0x9bc6
   30228:	movw	r1, #37994	; 0x946a
   3022c:	movw	r3, #39896	; 0x9bd8
   30230:	movw	r2, #1237	; 0x4d5
   30234:	movt	r0, #4
   30238:	movt	r1, #4
   3023c:	movt	r3, #4
   30240:	bl	14f40 <__assert_fail@plt>
   30244:	movw	r0, #40052	; 0x9c74
   30248:	movw	r1, #37994	; 0x946a
   3024c:	movw	r3, #39896	; 0x9bd8
   30250:	movw	r2, #1243	; 0x4db
   30254:	movt	r0, #4
   30258:	movt	r1, #4
   3025c:	movt	r3, #4
   30260:	bl	14f40 <__assert_fail@plt>
   30264:	movw	r0, #42512	; 0xa610
   30268:	movw	r1, #37994	; 0x946a
   3026c:	movw	r3, #42191	; 0xa4cf
   30270:	movw	r2, #647	; 0x287
   30274:	movt	r0, #4
   30278:	movt	r1, #4
   3027c:	movt	r3, #4
   30280:	bl	14f40 <__assert_fail@plt>

00030284 <flatcc_builder_check_required_field@@Base>:
   30284:	push	{fp, lr}
   30288:	mov	fp, sp
   3028c:	ldr	r2, [r0, #32]
   30290:	ldrh	r2, [r2, #14]
   30294:	cmp	r2, #3
   30298:	bne	302c8 <flatcc_builder_check_required_field@@Base+0x44>
   3029c:	ldrh	r3, [r0, #8]
   302a0:	mov	r2, #0
   302a4:	cmp	r3, r1
   302a8:	bls	302c0 <flatcc_builder_check_required_field@@Base+0x3c>
   302ac:	ldr	r0, [r0, #4]
   302b0:	add	r0, r0, r1, lsl #1
   302b4:	ldrh	r2, [r0]
   302b8:	cmp	r2, #0
   302bc:	movwne	r2, #1
   302c0:	mov	r0, r2
   302c4:	pop	{fp, pc}
   302c8:	movw	r0, #40063	; 0x9c7f
   302cc:	movw	r1, #37994	; 0x946a
   302d0:	movw	r3, #40106	; 0x9caa
   302d4:	movw	r2, #1272	; 0x4f8
   302d8:	movt	r0, #4
   302dc:	movt	r1, #4
   302e0:	movt	r3, #4
   302e4:	bl	14f40 <__assert_fail@plt>

000302e8 <flatcc_builder_check_union_field@@Base>:
   302e8:	push	{fp, lr}
   302ec:	mov	fp, sp
   302f0:	mov	r2, r0
   302f4:	ldr	r0, [r0, #32]
   302f8:	ldrh	r0, [r0, #14]
   302fc:	cmp	r0, #3
   30300:	bne	30360 <flatcc_builder_check_union_field@@Base+0x78>
   30304:	mov	r0, #0
   30308:	cmp	r1, #0
   3030c:	beq	3034c <flatcc_builder_check_union_field@@Base+0x64>
   30310:	ldrh	r3, [r2, #8]
   30314:	cmp	r3, r1
   30318:	popls	{fp, pc}
   3031c:	ldr	r0, [r2, #4]
   30320:	add	r0, r0, r1, lsl #1
   30324:	ldrh	r1, [r0, #-2]
   30328:	cmp	r1, #0
   3032c:	beq	30350 <flatcc_builder_check_union_field@@Base+0x68>
   30330:	ldr	r2, [r2, #16]
   30334:	ldrh	r0, [r0]
   30338:	ldrb	r1, [r2, r1]
   3033c:	cmp	r1, #0
   30340:	beq	30354 <flatcc_builder_check_union_field@@Base+0x6c>
   30344:	cmp	r0, #0
   30348:	movwne	r0, #1
   3034c:	pop	{fp, pc}
   30350:	ldrh	r0, [r0]
   30354:	clz	r0, r0
   30358:	lsr	r0, r0, #5
   3035c:	pop	{fp, pc}
   30360:	movw	r0, #40063	; 0x9c7f
   30364:	movw	r1, #37994	; 0x946a
   30368:	movw	r3, #40189	; 0x9cfd
   3036c:	movw	r2, #1279	; 0x4ff
   30370:	movt	r0, #4
   30374:	movt	r1, #4
   30378:	movt	r3, #4
   3037c:	bl	14f40 <__assert_fail@plt>

00030380 <flatcc_builder_check_required@@Base>:
   30380:	push	{fp, lr}
   30384:	mov	fp, sp
   30388:	mov	r3, r0
   3038c:	ldr	r0, [r0, #32]
   30390:	ldrh	r0, [r0, #14]
   30394:	cmp	r0, #3
   30398:	bne	303e0 <flatcc_builder_check_required@@Base+0x60>
   3039c:	ldrh	ip, [r3, #8]
   303a0:	mov	r0, #0
   303a4:	cmp	ip, r2
   303a8:	poplt	{fp, pc}
   303ac:	cmp	r2, #1
   303b0:	blt	303d8 <flatcc_builder_check_required@@Base+0x58>
   303b4:	ldr	ip, [r3, #4]
   303b8:	ldrh	r3, [r1]
   303bc:	add	r3, ip, r3, lsl #1
   303c0:	ldrh	r3, [r3]
   303c4:	cmp	r3, #0
   303c8:	beq	303dc <flatcc_builder_check_required@@Base+0x5c>
   303cc:	add	r1, r1, #2
   303d0:	subs	r2, r2, #1
   303d4:	bne	303b8 <flatcc_builder_check_required@@Base+0x38>
   303d8:	mov	r0, #1
   303dc:	pop	{fp, pc}
   303e0:	movw	r0, #40063	; 0x9c7f
   303e4:	movw	r1, #37994	; 0x946a
   303e8:	movw	r3, #40269	; 0x9d4d
   303ec:	movw	r2, #1297	; 0x511
   303f0:	movt	r0, #4
   303f4:	movt	r1, #4
   303f8:	movt	r3, #4
   303fc:	bl	14f40 <__assert_fail@plt>

00030400 <flatcc_builder_end_table@@Base>:
   30400:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30404:	add	fp, sp, #24
   30408:	sub	sp, sp, #16
   3040c:	mov	r4, r0
   30410:	ldr	r0, [r0, #32]
   30414:	ldrh	r0, [r0, #14]
   30418:	cmp	r0, #3
   3041c:	bne	305a0 <flatcc_builder_end_table@@Base+0x1a0>
   30420:	ldrh	r0, [r4, #8]
   30424:	ldr	r5, [r4, #4]
   30428:	mov	r1, #4
   3042c:	movw	r2, #31153	; 0x79b1
   30430:	movt	r2, #40503	; 0x9e37
   30434:	add	r0, r1, r0, lsl #1
   30438:	strh	r0, [r5, #-4]!
   3043c:	ldrh	r1, [r4, #20]
   30440:	uxth	r6, r0
   30444:	add	r1, r1, #4
   30448:	strh	r1, [r5, #2]
   3044c:	uxth	r1, r1
   30450:	ldr	r0, [r4, #12]
   30454:	eor	r0, r0, r6
   30458:	mul	r0, r0, r2
   3045c:	eor	r0, r0, r1
   30460:	mov	r1, r5
   30464:	mul	r3, r0, r2
   30468:	mov	r0, r4
   3046c:	mov	r2, r6
   30470:	str	r3, [r4, #12]
   30474:	bl	2fd48 <flatcc_builder_create_cached_vtable@@Base>
   30478:	cmp	r0, #0
   3047c:	beq	30590 <flatcc_builder_end_table@@Base+0x190>
   30480:	mov	r7, r0
   30484:	mov	r0, r5
   30488:	mov	r1, #0
   3048c:	mov	r2, r6
   30490:	mov	r8, #0
   30494:	bl	14eec <memset@plt>
   30498:	ldr	r5, [r4, #32]
   3049c:	ldr	r0, [r4, #76]	; 0x4c
   304a0:	ldr	r6, [r4]
   304a4:	ldrh	r3, [r4, #130]	; 0x82
   304a8:	ldr	r1, [r4, #16]
   304ac:	ldr	r2, [r4, #20]
   304b0:	ldr	r5, [r5, #20]
   304b4:	add	r0, r0, r5
   304b8:	sub	r6, r6, r0
   304bc:	asr	r6, r6, #1
   304c0:	stm	sp, {r0, r6, r7}
   304c4:	mov	r0, r4
   304c8:	bl	300c4 <flatcc_builder_create_table@@Base>
   304cc:	cmp	r0, #0
   304d0:	beq	30584 <flatcc_builder_end_table@@Base+0x184>
   304d4:	ldr	r1, [r4, #32]
   304d8:	mov	r5, r0
   304dc:	ldr	r0, [r4, #16]
   304e0:	ldr	r2, [r4, #20]
   304e4:	ldr	r3, [r4, #52]	; 0x34
   304e8:	ldr	r7, [r1, #24]
   304ec:	str	r7, [r4, #12]
   304f0:	ldrh	r7, [r1, #28]
   304f4:	strh	r7, [r4, #8]
   304f8:	ldr	r7, [r1, #16]
   304fc:	add	r3, r3, r7
   30500:	str	r3, [r4, #4]
   30504:	ldr	r3, [r4, #76]	; 0x4c
   30508:	ldr	r1, [r1, #20]
   3050c:	add	r1, r3, r1
   30510:	str	r1, [r4]
   30514:	mov	r1, #0
   30518:	bl	14eec <memset@plt>
   3051c:	ldr	r0, [r4, #32]
   30520:	ldr	r1, [r4, #60]	; 0x3c
   30524:	ldr	r2, [r4, #64]	; 0x40
   30528:	mov	r8, r5
   3052c:	ldr	r3, [r0, #8]
   30530:	str	r3, [r4, #20]
   30534:	ldr	r3, [r0]
   30538:	str	r3, [r4, #28]
   3053c:	add	r1, r1, r3
   30540:	ldr	r7, [r0, #4]
   30544:	str	r1, [r4, #16]
   30548:	sub	r1, r2, r3
   3054c:	cmp	r1, r7
   30550:	movhi	r1, r7
   30554:	str	r1, [r4, #24]
   30558:	ldrh	r1, [r4, #130]	; 0x82
   3055c:	ldrh	r2, [r4, #128]	; 0x80
   30560:	cmp	r2, r1
   30564:	strhcc	r1, [r4, #128]	; 0x80
   30568:	ldrh	r1, [r0, #12]
   3056c:	sub	r0, r0, #36	; 0x24
   30570:	str	r0, [r4, #32]
   30574:	strh	r1, [r4, #130]	; 0x82
   30578:	ldr	r0, [r4, #156]	; 0x9c
   3057c:	sub	r0, r0, #1
   30580:	str	r0, [r4, #156]	; 0x9c
   30584:	mov	r0, r8
   30588:	sub	sp, fp, #24
   3058c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30590:	mov	r8, #0
   30594:	mov	r0, r8
   30598:	sub	sp, fp, #24
   3059c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   305a0:	movw	r0, #40063	; 0x9c7f
   305a4:	movw	r1, #37994	; 0x946a
   305a8:	movw	r3, #40359	; 0x9da7
   305ac:	movw	r2, #1317	; 0x525
   305b0:	movt	r0, #4
   305b4:	movt	r1, #4
   305b8:	movt	r3, #4
   305bc:	bl	14f40 <__assert_fail@plt>

000305c0 <flatcc_builder_create_vector@@Base>:
   305c0:	push	{r4, r5, r6, r7, fp, lr}
   305c4:	add	fp, sp, #16
   305c8:	sub	sp, sp, #80	; 0x50
   305cc:	mov	r7, r0
   305d0:	ldr	r0, [fp, #12]
   305d4:	cmp	r2, r0
   305d8:	bhi	306d4 <flatcc_builder_create_vector@@Base+0x114>
   305dc:	ldr	r0, [fp, #8]
   305e0:	mov	r4, r2
   305e4:	ldrh	r2, [r7, #128]	; 0x80
   305e8:	mov	r5, #4
   305ec:	cmp	r0, #4
   305f0:	movls	r0, r5
   305f4:	cmp	r2, r0
   305f8:	sub	r2, fp, #20
   305fc:	strhcc	r0, [r7, #128]	; 0x80
   30600:	str	r4, [fp, #-20]	; 0xffffffec
   30604:	sub	r0, r0, #1
   30608:	ldr	ip, [r7, #136]	; 0x88
   3060c:	str	r5, [sp, #16]
   30610:	str	r2, [sp, #12]
   30614:	mov	r2, #1
   30618:	str	r5, [sp, #4]
   3061c:	str	r2, [sp, #8]
   30620:	mls	r6, r3, r4, ip
   30624:	mul	r3, r3, r4
   30628:	cmp	r3, #0
   3062c:	and	r0, r6, r0
   30630:	movne	r2, #2
   30634:	addne	r5, r3, #4
   30638:	strne	r3, [sp, #24]
   3063c:	strne	r1, [sp, #20]
   30640:	strne	r2, [sp, #8]
   30644:	strne	r5, [sp, #4]
   30648:	cmp	r0, #0
   3064c:	beq	30678 <flatcc_builder_create_vector@@Base+0xb8>
   30650:	add	r1, sp, #4
   30654:	movw	r3, #37464	; 0x9258
   30658:	add	r5, r5, r0
   3065c:	add	r1, r1, r2, lsl #3
   30660:	movt	r3, #4
   30664:	add	r2, r2, #1
   30668:	str	r5, [sp, #4]
   3066c:	str	r3, [r1, #8]
   30670:	str	r0, [r1, #12]
   30674:	str	r2, [sp, #8]
   30678:	cmp	r5, #0
   3067c:	ble	306f4 <flatcc_builder_create_vector@@Base+0x134>
   30680:	ldr	r0, [r7, #36]	; 0x24
   30684:	ldr	r6, [r7, #44]	; 0x2c
   30688:	add	r1, sp, #4
   3068c:	sub	r4, ip, r5
   30690:	str	r5, [sp]
   30694:	add	r1, r1, #8
   30698:	mov	r3, r4
   3069c:	blx	r6
   306a0:	cmp	r0, #0
   306a4:	streq	r4, [r7, #136]	; 0x88
   306a8:	moveq	r0, r4
   306ac:	subeq	sp, fp, #16
   306b0:	popeq	{r4, r5, r6, r7, fp, pc}
   306b4:	movw	r0, #42512	; 0xa610
   306b8:	movw	r1, #37994	; 0x946a
   306bc:	movw	r3, #42191	; 0xa4cf
   306c0:	movw	r2, #651	; 0x28b
   306c4:	movt	r0, #4
   306c8:	movt	r1, #4
   306cc:	movt	r3, #4
   306d0:	bl	14f40 <__assert_fail@plt>
   306d4:	movw	r0, #40425	; 0x9de9
   306d8:	movw	r1, #37994	; 0x946a
   306dc:	movw	r3, #40444	; 0x9dfc
   306e0:	movw	r2, #1365	; 0x555
   306e4:	movt	r0, #4
   306e8:	movt	r1, #4
   306ec:	movt	r3, #4
   306f0:	bl	14f40 <__assert_fail@plt>
   306f4:	movw	r0, #42512	; 0xa610
   306f8:	movw	r1, #37994	; 0x946a
   306fc:	movw	r3, #42191	; 0xa4cf
   30700:	movw	r2, #647	; 0x287
   30704:	movt	r0, #4
   30708:	movt	r1, #4
   3070c:	movt	r3, #4
   30710:	bl	14f40 <__assert_fail@plt>

00030714 <flatcc_builder_end_vector@@Base>:
   30714:	push	{r4, r5, fp, lr}
   30718:	add	fp, sp, #8
   3071c:	sub	sp, sp, #8
   30720:	mov	r4, r0
   30724:	ldr	r0, [r0, #32]
   30728:	ldrh	r1, [r0, #14]
   3072c:	cmp	r1, #4
   30730:	bne	307e4 <flatcc_builder_end_vector@@Base+0xd0>
   30734:	ldr	r3, [r0, #16]
   30738:	ldr	r2, [r0, #20]
   3073c:	ldr	r0, [r0, #24]
   30740:	ldr	r1, [r4, #16]
   30744:	ldrh	r5, [r4, #130]	; 0x82
   30748:	str	r0, [sp, #4]
   3074c:	mov	r0, r4
   30750:	str	r5, [sp]
   30754:	bl	305c0 <flatcc_builder_create_vector@@Base>
   30758:	mov	r5, r0
   3075c:	cmp	r0, #0
   30760:	beq	307d8 <flatcc_builder_end_vector@@Base+0xc4>
   30764:	ldr	r0, [r4, #16]
   30768:	ldr	r2, [r4, #20]
   3076c:	mov	r1, #0
   30770:	bl	14eec <memset@plt>
   30774:	ldr	r0, [r4, #32]
   30778:	ldr	r1, [r4, #60]	; 0x3c
   3077c:	ldr	ip, [r4, #64]	; 0x40
   30780:	ldr	r3, [r0, #8]
   30784:	str	r3, [r4, #20]
   30788:	ldr	r3, [r0]
   3078c:	str	r3, [r4, #28]
   30790:	add	r1, r1, r3
   30794:	ldr	r2, [r0, #4]
   30798:	str	r1, [r4, #16]
   3079c:	sub	r1, ip, r3
   307a0:	cmp	r1, r2
   307a4:	movhi	r1, r2
   307a8:	str	r1, [r4, #24]
   307ac:	ldrh	r1, [r4, #130]	; 0x82
   307b0:	ldrh	r2, [r4, #128]	; 0x80
   307b4:	cmp	r2, r1
   307b8:	strhcc	r1, [r4, #128]	; 0x80
   307bc:	ldrh	r1, [r0, #12]
   307c0:	sub	r0, r0, #36	; 0x24
   307c4:	str	r0, [r4, #32]
   307c8:	strh	r1, [r4, #130]	; 0x82
   307cc:	ldr	r0, [r4, #156]	; 0x9c
   307d0:	sub	r0, r0, #1
   307d4:	str	r0, [r4, #156]	; 0x9c
   307d8:	mov	r0, r5
   307dc:	sub	sp, fp, #8
   307e0:	pop	{r4, r5, fp, pc}
   307e4:	movw	r0, #38797	; 0x978d
   307e8:	movw	r1, #37994	; 0x946a
   307ec:	movw	r3, #40562	; 0x9e72
   307f0:	movw	r2, #1400	; 0x578
   307f4:	movt	r0, #4
   307f8:	movt	r1, #4
   307fc:	movt	r3, #4
   30800:	bl	14f40 <__assert_fail@plt>

00030804 <flatcc_builder_vector_count@@Base>:
   30804:	ldr	r0, [r0, #32]
   30808:	ldr	r0, [r0, #20]
   3080c:	bx	lr

00030810 <flatcc_builder_vector_edit@@Base>:
   30810:	ldr	r0, [r0, #16]
   30814:	bx	lr

00030818 <flatcc_builder_create_offset_vector_direct@@Base>:
   30818:	mov	r3, #0
   3081c:	b	30820 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30820:	push	{r4, r5, r6, r7, fp, lr}
   30824:	add	fp, sp, #16
   30828:	sub	sp, sp, #80	; 0x50
   3082c:	mov	r5, #0
   30830:	cmn	r2, #-1073741823	; 0xc0000001
   30834:	bhi	309a4 <flatcc_builder_create_offset_vector_direct@@Base+0x18c>
   30838:	mov	r6, r0
   3083c:	ldrh	r0, [r0, #128]	; 0x80
   30840:	mov	r4, #4
   30844:	sub	r5, fp, #20
   30848:	mov	ip, #1
   3084c:	cmp	r0, #3
   30850:	movls	r0, #4
   30854:	strhls	r0, [r6, #128]	; 0x80
   30858:	str	r2, [fp, #-20]	; 0xffffffec
   3085c:	mov	r0, #0
   30860:	ldr	lr, [r6, #136]	; 0x88
   30864:	cmp	r0, r2, lsl #2
   30868:	str	r4, [sp, #16]
   3086c:	str	r5, [sp, #12]
   30870:	str	r4, [sp, #4]
   30874:	str	ip, [sp, #8]
   30878:	and	r5, lr, #3
   3087c:	beq	3089c <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   30880:	lsl	r0, r2, #2
   30884:	mov	ip, #2
   30888:	add	r4, r0, #4
   3088c:	str	r0, [sp, #24]
   30890:	str	r1, [sp, #20]
   30894:	str	ip, [sp, #8]
   30898:	str	r4, [sp, #4]
   3089c:	cmp	r5, #0
   308a0:	beq	308cc <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   308a4:	add	r0, sp, #4
   308a8:	movw	r7, #37464	; 0x9258
   308ac:	add	r4, r4, r5
   308b0:	add	r0, r0, ip, lsl #3
   308b4:	movt	r7, #4
   308b8:	add	ip, ip, #1
   308bc:	str	r4, [sp, #4]
   308c0:	str	r7, [r0, #8]
   308c4:	str	r5, [r0, #12]
   308c8:	str	ip, [sp, #8]
   308cc:	cmp	r2, #0
   308d0:	beq	30968 <flatcc_builder_create_offset_vector_direct@@Base+0x150>
   308d4:	sub	r0, r4, lr
   308d8:	cmp	r3, #0
   308dc:	sub	r0, r0, #4
   308e0:	bne	30928 <flatcc_builder_create_offset_vector_direct@@Base+0x110>
   308e4:	ldr	r3, [r1]
   308e8:	cmp	r3, #0
   308ec:	beq	309b0 <flatcc_builder_create_offset_vector_direct@@Base+0x198>
   308f0:	add	r3, r0, r3
   308f4:	sub	r0, r0, #4
   308f8:	subs	r2, r2, #1
   308fc:	str	r3, [r1], #4
   30900:	bne	308e4 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   30904:	b	30968 <flatcc_builder_create_offset_vector_direct@@Base+0x150>
   30908:	ldrb	r7, [r3]
   3090c:	cmp	r7, #0
   30910:	bne	309d0 <flatcc_builder_create_offset_vector_direct@@Base+0x1b8>
   30914:	sub	r0, r0, #4
   30918:	add	r1, r1, #4
   3091c:	add	r3, r3, #1
   30920:	subs	r2, r2, #1
   30924:	beq	30968 <flatcc_builder_create_offset_vector_direct@@Base+0x150>
   30928:	ldr	r5, [r1]
   3092c:	cmp	r5, #0
   30930:	beq	30908 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
   30934:	add	r7, r0, r5
   30938:	str	r7, [r1]
   3093c:	ldrb	r7, [r3]
   30940:	cmp	r7, #0
   30944:	bne	30914 <flatcc_builder_create_offset_vector_direct@@Base+0xfc>
   30948:	movw	r0, #42500	; 0xa604
   3094c:	movw	r1, #37994	; 0x946a
   30950:	movw	r3, #42514	; 0xa612
   30954:	movw	r2, #1457	; 0x5b1
   30958:	movt	r0, #4
   3095c:	movt	r1, #4
   30960:	movt	r3, #4
   30964:	bl	14f40 <__assert_fail@plt>
   30968:	cmp	r4, #0
   3096c:	ble	309f0 <flatcc_builder_create_offset_vector_direct@@Base+0x1d8>
   30970:	ldr	r0, [r6, #136]	; 0x88
   30974:	ldr	r7, [r6, #44]	; 0x2c
   30978:	add	r1, sp, #4
   3097c:	mov	r2, ip
   30980:	add	r1, r1, #8
   30984:	sub	r5, r0, r4
   30988:	ldr	r0, [r6, #36]	; 0x24
   3098c:	str	r4, [sp]
   30990:	mov	r3, r5
   30994:	blx	r7
   30998:	cmp	r0, #0
   3099c:	bne	30a10 <flatcc_builder_create_offset_vector_direct@@Base+0x1f8>
   309a0:	str	r5, [r6, #136]	; 0x88
   309a4:	mov	r0, r5
   309a8:	sub	sp, fp, #16
   309ac:	pop	{r4, r5, r6, r7, fp, pc}
   309b0:	movw	r0, #42512	; 0xa610
   309b4:	movw	r1, #37994	; 0x946a
   309b8:	movw	r3, #42514	; 0xa612
   309bc:	movw	r2, #1463	; 0x5b7
   309c0:	movt	r0, #4
   309c4:	movt	r1, #4
   309c8:	movt	r3, #4
   309cc:	bl	14f40 <__assert_fail@plt>
   309d0:	movw	r0, #42645	; 0xa695
   309d4:	movw	r1, #37994	; 0x946a
   309d8:	movw	r3, #42514	; 0xa612
   309dc:	movw	r2, #1461	; 0x5b5
   309e0:	movt	r0, #4
   309e4:	movt	r1, #4
   309e8:	movt	r3, #4
   309ec:	bl	14f40 <__assert_fail@plt>
   309f0:	movw	r0, #42512	; 0xa610
   309f4:	movw	r1, #37994	; 0x946a
   309f8:	movw	r3, #42191	; 0xa4cf
   309fc:	movw	r2, #647	; 0x287
   30a00:	movt	r0, #4
   30a04:	movt	r1, #4
   30a08:	movt	r3, #4
   30a0c:	bl	14f40 <__assert_fail@plt>
   30a10:	movw	r0, #42512	; 0xa610
   30a14:	movw	r1, #37994	; 0x946a
   30a18:	movw	r3, #42191	; 0xa4cf
   30a1c:	movw	r2, #651	; 0x28b
   30a20:	movt	r0, #4
   30a24:	movt	r1, #4
   30a28:	movt	r3, #4
   30a2c:	bl	14f40 <__assert_fail@plt>

00030a30 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   30a30:	push	{r4, r5, fp, lr}
   30a34:	add	fp, sp, #8
   30a38:	mov	r4, r0
   30a3c:	ldr	r0, [r0, #32]
   30a40:	mov	r3, r1
   30a44:	ldrh	r1, [r0, #14]
   30a48:	cmp	r1, #5
   30a4c:	bne	30ae8 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   30a50:	ldr	r2, [r0, #20]
   30a54:	ldr	r1, [r4, #16]
   30a58:	mov	r0, r4
   30a5c:	bl	30820 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30a60:	mov	r5, r0
   30a64:	cmp	r0, #0
   30a68:	beq	30ae0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   30a6c:	ldr	r0, [r4, #16]
   30a70:	ldr	r2, [r4, #20]
   30a74:	mov	r1, #0
   30a78:	bl	14eec <memset@plt>
   30a7c:	ldr	r0, [r4, #32]
   30a80:	ldr	r1, [r4, #60]	; 0x3c
   30a84:	ldr	ip, [r4, #64]	; 0x40
   30a88:	ldr	r3, [r0, #8]
   30a8c:	str	r3, [r4, #20]
   30a90:	ldr	r3, [r0]
   30a94:	str	r3, [r4, #28]
   30a98:	add	r1, r1, r3
   30a9c:	ldr	r2, [r0, #4]
   30aa0:	str	r1, [r4, #16]
   30aa4:	sub	r1, ip, r3
   30aa8:	cmp	r1, r2
   30aac:	movhi	r1, r2
   30ab0:	str	r1, [r4, #24]
   30ab4:	ldrh	r1, [r4, #130]	; 0x82
   30ab8:	ldrh	r2, [r4, #128]	; 0x80
   30abc:	cmp	r2, r1
   30ac0:	strhcc	r1, [r4, #128]	; 0x80
   30ac4:	ldrh	r1, [r0, #12]
   30ac8:	sub	r0, r0, #36	; 0x24
   30acc:	str	r0, [r4, #32]
   30ad0:	strh	r1, [r4, #130]	; 0x82
   30ad4:	ldr	r0, [r4, #156]	; 0x9c
   30ad8:	sub	r0, r0, #1
   30adc:	str	r0, [r4, #156]	; 0x9c
   30ae0:	mov	r0, r5
   30ae4:	pop	{r4, r5, fp, pc}
   30ae8:	movw	r0, #39046	; 0x9886
   30aec:	movw	r1, #37994	; 0x946a
   30af0:	movw	r3, #40703	; 0x9eff
   30af4:	movw	r2, #1493	; 0x5d5
   30af8:	movt	r0, #4
   30afc:	movt	r1, #4
   30b00:	movt	r3, #4
   30b04:	bl	14f40 <__assert_fail@plt>

00030b08 <flatcc_builder_offset_vector_edit@@Base>:
   30b08:	ldr	r0, [r0, #16]
   30b0c:	bx	lr

00030b10 <flatcc_builder_offset_vector_count@@Base>:
   30b10:	ldr	r0, [r0, #32]
   30b14:	ldr	r0, [r0, #20]
   30b18:	bx	lr

00030b1c <flatcc_builder_table_add_union@@Base>:
   30b1c:	push	{r4, r5, r6, r7, fp, lr}
   30b20:	add	fp, sp, #16
   30b24:	mov	r5, r0
   30b28:	ldr	r0, [r0, #32]
   30b2c:	ldrh	r0, [r0, #14]
   30b30:	cmp	r0, #3
   30b34:	bne	30bbc <flatcc_builder_table_add_union@@Base+0xa0>
   30b38:	mov	r7, r3
   30b3c:	mov	r4, r2
   30b40:	mov	r6, r1
   30b44:	cmp	r3, #0
   30b48:	beq	30b58 <flatcc_builder_table_add_union@@Base+0x3c>
   30b4c:	uxtb	r0, r4
   30b50:	cmp	r0, #0
   30b54:	beq	30bdc <flatcc_builder_table_add_union@@Base+0xc0>
   30b58:	cmp	r7, #0
   30b5c:	beq	30b78 <flatcc_builder_table_add_union@@Base+0x5c>
   30b60:	mov	r0, r5
   30b64:	mov	r1, r6
   30b68:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   30b6c:	cmp	r0, #0
   30b70:	beq	30bfc <flatcc_builder_table_add_union@@Base+0xe0>
   30b74:	str	r7, [r0]
   30b78:	sub	r1, r6, #1
   30b7c:	mov	r0, r5
   30b80:	mov	r2, #1
   30b84:	mov	r3, #1
   30b88:	bl	30dac <flatcc_builder_table_add@@Base>
   30b8c:	cmp	r0, #0
   30b90:	strbne	r4, [r0]
   30b94:	movne	r0, #0
   30b98:	popne	{r4, r5, r6, r7, fp, pc}
   30b9c:	movw	r0, #40949	; 0x9ff5
   30ba0:	movw	r1, #37994	; 0x946a
   30ba4:	movw	r3, #40817	; 0x9f71
   30ba8:	movw	r2, #1526	; 0x5f6
   30bac:	movt	r0, #4
   30bb0:	movt	r1, #4
   30bb4:	movt	r3, #4
   30bb8:	bl	14f40 <__assert_fail@plt>
   30bbc:	movw	r0, #40063	; 0x9c7f
   30bc0:	movw	r1, #37994	; 0x946a
   30bc4:	movw	r3, #40817	; 0x9f71
   30bc8:	movw	r2, #1518	; 0x5ee
   30bcc:	movt	r0, #4
   30bd0:	movt	r1, #4
   30bd4:	movt	r3, #4
   30bd8:	bl	14f40 <__assert_fail@plt>
   30bdc:	movw	r0, #40905	; 0x9fc9
   30be0:	movw	r1, #37994	; 0x946a
   30be4:	movw	r3, #40817	; 0x9f71
   30be8:	movw	r2, #1519	; 0x5ef
   30bec:	movt	r0, #4
   30bf0:	movt	r1, #4
   30bf4:	movt	r3, #4
   30bf8:	bl	14f40 <__assert_fail@plt>
   30bfc:	movw	r0, #40939	; 0x9feb
   30c00:	movw	r1, #37994	; 0x946a
   30c04:	movw	r3, #40817	; 0x9f71
   30c08:	movw	r2, #1522	; 0x5f2
   30c0c:	movt	r0, #4
   30c10:	movt	r1, #4
   30c14:	movt	r3, #4
   30c18:	bl	14f40 <__assert_fail@plt>

00030c1c <flatcc_builder_table_add_offset@@Base>:
   30c1c:	push	{r4, r5, r6, r7, fp, lr}
   30c20:	add	fp, sp, #16
   30c24:	sub	sp, sp, #8
   30c28:	mov	r4, r0
   30c2c:	ldr	r0, [r0, #32]
   30c30:	ldrh	r0, [r0, #14]
   30c34:	cmp	r0, #3
   30c38:	bne	30d4c <flatcc_builder_table_add_offset@@Base+0x130>
   30c3c:	movw	r0, #32765	; 0x7ffd
   30c40:	mov	r5, r1
   30c44:	cmp	r1, r0
   30c48:	bcs	30d6c <flatcc_builder_table_add_offset@@Base+0x150>
   30c4c:	ldr	r0, [r4, #4]
   30c50:	add	r1, r0, r5, lsl #1
   30c54:	ldrh	r1, [r1]
   30c58:	cmp	r1, #0
   30c5c:	bne	30d8c <flatcc_builder_table_add_offset@@Base+0x170>
   30c60:	ldr	r2, [r4, #20]
   30c64:	ldr	r1, [r4, #12]
   30c68:	ldr	r3, [r4, #24]
   30c6c:	add	r2, r2, #3
   30c70:	eor	r1, r1, r5
   30c74:	bic	r6, r2, #3
   30c78:	movw	r2, #31153	; 0x79b1
   30c7c:	movt	r2, #40503	; 0x9e37
   30c80:	add	r7, r6, #4
   30c84:	cmp	r7, r3
   30c88:	str	r7, [r4, #20]
   30c8c:	mul	r1, r1, r2
   30c90:	eor	r1, r1, #4
   30c94:	mul	r1, r1, r2
   30c98:	str	r1, [r4, #12]
   30c9c:	bls	30d10 <flatcc_builder_table_add_offset@@Base+0xf4>
   30ca0:	ldr	r1, [r4, #28]
   30ca4:	ldr	r0, [r4, #40]	; 0x28
   30ca8:	ldr	ip, [r4, #48]	; 0x30
   30cac:	mov	r2, #1
   30cb0:	mov	r3, #1
   30cb4:	str	r2, [sp]
   30cb8:	add	r2, r1, r7
   30cbc:	add	r1, r4, #60	; 0x3c
   30cc0:	blx	ip
   30cc4:	mov	r1, r0
   30cc8:	mov	r0, #0
   30ccc:	cmp	r1, #0
   30cd0:	beq	30cdc <flatcc_builder_table_add_offset@@Base+0xc0>
   30cd4:	sub	sp, fp, #16
   30cd8:	pop	{r4, r5, r6, r7, fp, pc}
   30cdc:	ldr	r0, [r4, #28]
   30ce0:	ldr	r2, [r4, #60]	; 0x3c
   30ce4:	ldr	r3, [r4, #64]	; 0x40
   30ce8:	ldr	r1, [r4, #32]
   30cec:	add	r2, r2, r0
   30cf0:	sub	r0, r3, r0
   30cf4:	str	r2, [r4, #16]
   30cf8:	movw	r2, #65532	; 0xfffc
   30cfc:	cmp	r0, r2
   30d00:	movcs	r0, r2
   30d04:	str	r0, [r4, #24]
   30d08:	str	r2, [r1, #4]
   30d0c:	ldr	r0, [r4, #4]
   30d10:	uxth	r1, r5
   30d14:	add	r0, r0, r1, lsl #1
   30d18:	strh	r7, [r0]
   30d1c:	ldrh	r0, [r4, #8]
   30d20:	cmp	r0, r1
   30d24:	addls	r0, r5, #1
   30d28:	strhls	r0, [r4, #8]
   30d2c:	ldr	r0, [r4]
   30d30:	add	r1, r0, #2
   30d34:	str	r1, [r4]
   30d38:	strh	r6, [r0]
   30d3c:	ldr	r0, [r4, #16]
   30d40:	add	r0, r0, r6
   30d44:	sub	sp, fp, #16
   30d48:	pop	{r4, r5, r6, r7, fp, pc}
   30d4c:	movw	r0, #40063	; 0x9c7f
   30d50:	movw	r1, #37994	; 0x946a
   30d54:	movw	r3, #41843	; 0xa373
   30d58:	movw	r2, #1811	; 0x713
   30d5c:	movt	r0, #4
   30d60:	movt	r1, #4
   30d64:	movt	r3, #4
   30d68:	bl	14f40 <__assert_fail@plt>
   30d6c:	movw	r0, #41715	; 0xa2f3
   30d70:	movw	r1, #37994	; 0x946a
   30d74:	movw	r3, #41843	; 0xa373
   30d78:	movw	r2, #1812	; 0x714
   30d7c:	movt	r0, #4
   30d80:	movt	r1, #4
   30d84:	movt	r3, #4
   30d88:	bl	14f40 <__assert_fail@plt>
   30d8c:	movw	r0, #42512	; 0xa610
   30d90:	movw	r1, #37994	; 0x946a
   30d94:	movw	r3, #41843	; 0xa373
   30d98:	movw	r2, #1819	; 0x71b
   30d9c:	movt	r0, #4
   30da0:	movt	r1, #4
   30da4:	movt	r3, #4
   30da8:	bl	14f40 <__assert_fail@plt>

00030dac <flatcc_builder_table_add@@Base>:
   30dac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30db0:	add	fp, sp, #24
   30db4:	sub	sp, sp, #8
   30db8:	mov	r4, r0
   30dbc:	ldr	r0, [r0, #32]
   30dc0:	ldrh	r0, [r0, #14]
   30dc4:	cmp	r0, #3
   30dc8:	bne	30ee8 <flatcc_builder_table_add@@Base+0x13c>
   30dcc:	movw	r0, #32765	; 0x7ffd
   30dd0:	mov	r8, r1
   30dd4:	cmp	r1, r0
   30dd8:	bcs	30f08 <flatcc_builder_table_add@@Base+0x15c>
   30ddc:	ldrh	r0, [r4, #130]	; 0x82
   30de0:	cmp	r0, r3
   30de4:	strhcc	r3, [r4, #130]	; 0x82
   30de8:	ldr	r0, [r4, #4]
   30dec:	add	r1, r0, r8, lsl #1
   30df0:	ldrh	r1, [r1]
   30df4:	cmp	r1, #0
   30df8:	bne	30f28 <flatcc_builder_table_add@@Base+0x17c>
   30dfc:	ldr	r1, [r4, #12]
   30e00:	movw	r7, #31153	; 0x79b1
   30e04:	ldr	r6, [r4, #20]
   30e08:	ldr	r5, [r4, #24]
   30e0c:	movt	r7, #40503	; 0x9e37
   30e10:	eor	r1, r1, r8
   30e14:	mul	r1, r1, r7
   30e18:	eor	r1, r1, r2
   30e1c:	mul	r1, r1, r7
   30e20:	str	r1, [r4, #12]
   30e24:	add	r1, r3, r6
   30e28:	rsb	r3, r3, #0
   30e2c:	sub	r1, r1, #1
   30e30:	and	r6, r1, r3
   30e34:	add	r1, r6, r2
   30e38:	cmp	r1, r5
   30e3c:	str	r1, [r4, #20]
   30e40:	bcc	30eb8 <flatcc_builder_table_add@@Base+0x10c>
   30e44:	ldr	r2, [r4, #28]
   30e48:	ldr	r0, [r4, #40]	; 0x28
   30e4c:	ldr	r7, [r4, #48]	; 0x30
   30e50:	mov	r3, #1
   30e54:	str	r3, [sp]
   30e58:	mov	r3, #1
   30e5c:	add	r1, r1, r2
   30e60:	add	r2, r1, #1
   30e64:	add	r1, r4, #60	; 0x3c
   30e68:	blx	r7
   30e6c:	mov	r1, r0
   30e70:	mov	r0, #0
   30e74:	cmp	r1, #0
   30e78:	beq	30e84 <flatcc_builder_table_add@@Base+0xd8>
   30e7c:	sub	sp, fp, #24
   30e80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30e84:	ldr	r0, [r4, #28]
   30e88:	ldr	r2, [r4, #60]	; 0x3c
   30e8c:	ldr	r3, [r4, #64]	; 0x40
   30e90:	ldr	r1, [r4, #32]
   30e94:	add	r2, r2, r0
   30e98:	sub	r0, r3, r0
   30e9c:	str	r2, [r4, #16]
   30ea0:	movw	r2, #65532	; 0xfffc
   30ea4:	cmp	r0, r2
   30ea8:	movcs	r0, r2
   30eac:	str	r0, [r4, #24]
   30eb0:	str	r2, [r1, #4]
   30eb4:	ldr	r0, [r4, #4]
   30eb8:	uxth	r1, r8
   30ebc:	add	r2, r6, #4
   30ec0:	add	r0, r0, r1, lsl #1
   30ec4:	strh	r2, [r0]
   30ec8:	ldrh	r0, [r4, #8]
   30ecc:	cmp	r0, r1
   30ed0:	addls	r0, r8, #1
   30ed4:	strhls	r0, [r4, #8]
   30ed8:	ldr	r0, [r4, #16]
   30edc:	add	r0, r0, r6
   30ee0:	sub	sp, fp, #24
   30ee4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30ee8:	movw	r0, #40063	; 0x9c7f
   30eec:	movw	r1, #37994	; 0x946a
   30ef0:	movw	r3, #41641	; 0xa2a9
   30ef4:	movw	r2, #1773	; 0x6ed
   30ef8:	movt	r0, #4
   30efc:	movt	r1, #4
   30f00:	movt	r3, #4
   30f04:	bl	14f40 <__assert_fail@plt>
   30f08:	movw	r0, #41715	; 0xa2f3
   30f0c:	movw	r1, #37994	; 0x946a
   30f10:	movw	r3, #41641	; 0xa2a9
   30f14:	movw	r2, #1774	; 0x6ee
   30f18:	movt	r0, #4
   30f1c:	movt	r1, #4
   30f20:	movt	r3, #4
   30f24:	bl	14f40 <__assert_fail@plt>
   30f28:	movw	r0, #42512	; 0xa610
   30f2c:	movw	r1, #37994	; 0x946a
   30f30:	movw	r3, #41641	; 0xa2a9
   30f34:	movw	r2, #1784	; 0x6f8
   30f38:	movt	r0, #4
   30f3c:	movt	r1, #4
   30f40:	movt	r3, #4
   30f44:	bl	14f40 <__assert_fail@plt>

00030f48 <flatcc_builder_table_add_union_vector@@Base>:
   30f48:	push	{r4, r5, r6, r7, fp, lr}
   30f4c:	add	fp, sp, #16
   30f50:	mov	r6, r0
   30f54:	ldr	r0, [r0, #32]
   30f58:	ldrh	r0, [r0, #14]
   30f5c:	cmp	r0, #3
   30f60:	bne	30fcc <flatcc_builder_table_add_union_vector@@Base+0x84>
   30f64:	mov	r5, r1
   30f68:	clz	r1, r3
   30f6c:	cmp	r2, #0
   30f70:	mov	r0, r2
   30f74:	mov	r4, r3
   30f78:	mov	r7, r2
   30f7c:	movwne	r0, #1
   30f80:	lsr	r1, r1, #5
   30f84:	teq	r1, r0
   30f88:	beq	30fec <flatcc_builder_table_add_union_vector@@Base+0xa4>
   30f8c:	cmp	r7, #0
   30f90:	beq	30fc4 <flatcc_builder_table_add_union_vector@@Base+0x7c>
   30f94:	sub	r1, r5, #1
   30f98:	mov	r0, r6
   30f9c:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   30fa0:	cmp	r0, #0
   30fa4:	beq	3100c <flatcc_builder_table_add_union_vector@@Base+0xc4>
   30fa8:	str	r7, [r0]
   30fac:	mov	r0, r6
   30fb0:	mov	r1, r5
   30fb4:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   30fb8:	cmp	r0, #0
   30fbc:	beq	3102c <flatcc_builder_table_add_union_vector@@Base+0xe4>
   30fc0:	str	r4, [r0]
   30fc4:	mov	r0, #0
   30fc8:	pop	{r4, r5, r6, r7, fp, pc}
   30fcc:	movw	r0, #40063	; 0x9c7f
   30fd0:	movw	r1, #37994	; 0x946a
   30fd4:	movw	r3, #40961	; 0xa001
   30fd8:	mov	r2, #1536	; 0x600
   30fdc:	movt	r0, #4
   30fe0:	movt	r1, #4
   30fe4:	movt	r3, #4
   30fe8:	bl	14f40 <__assert_fail@plt>
   30fec:	movw	r0, #41060	; 0xa064
   30ff0:	movw	r1, #37994	; 0x946a
   30ff4:	movw	r3, #40961	; 0xa001
   30ff8:	movw	r2, #1537	; 0x601
   30ffc:	movt	r0, #4
   31000:	movt	r1, #4
   31004:	movt	r3, #4
   31008:	bl	14f40 <__assert_fail@plt>
   3100c:	movw	r0, #40939	; 0x9feb
   31010:	movw	r1, #37994	; 0x946a
   31014:	movw	r3, #40961	; 0xa001
   31018:	movw	r2, #1540	; 0x604
   3101c:	movt	r0, #4
   31020:	movt	r1, #4
   31024:	movt	r3, #4
   31028:	bl	14f40 <__assert_fail@plt>
   3102c:	movw	r0, #40939	; 0x9feb
   31030:	movw	r1, #37994	; 0x946a
   31034:	movw	r3, #40961	; 0xa001
   31038:	movw	r2, #1544	; 0x608
   3103c:	movt	r0, #4
   31040:	movt	r1, #4
   31044:	movt	r3, #4
   31048:	bl	14f40 <__assert_fail@plt>

0003104c <flatcc_builder_create_union_vector@@Base>:
   3104c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31050:	add	fp, sp, #28
   31054:	sub	sp, sp, #12
   31058:	mov	r6, #0
   3105c:	mov	r4, r1
   31060:	mov	r8, r0
   31064:	mov	sl, r3
   31068:	mov	r9, r2
   3106c:	mov	r7, #4
   31070:	str	r6, [r0]
   31074:	str	r6, [r0, #4]
   31078:	mov	r0, r1
   3107c:	mov	r1, #4
   31080:	bl	2e518 <flatcc_builder_start_buffer@@Base+0xbc>
   31084:	cmp	r0, #0
   31088:	beq	31094 <flatcc_builder_create_union_vector@@Base+0x48>
   3108c:	sub	sp, fp, #28
   31090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31094:	ldr	r0, [r4, #32]
   31098:	mov	r1, #5
   3109c:	str	r7, [r0, #16]
   310a0:	ldr	r0, [r4, #32]
   310a4:	str	r6, [r0, #20]
   310a8:	ldr	r0, [r4, #32]
   310ac:	strh	r1, [r0, #14]
   310b0:	ldr	r1, [r4, #28]
   310b4:	ldr	r2, [r4, #60]	; 0x3c
   310b8:	ldr	r3, [r4, #64]	; 0x40
   310bc:	add	r2, r2, r1
   310c0:	sub	r1, r3, r1
   310c4:	str	r2, [r4, #16]
   310c8:	mvn	r2, #3
   310cc:	cmn	r1, #4
   310d0:	movcs	r1, r2
   310d4:	str	r1, [r4, #24]
   310d8:	str	r2, [r0, #4]
   310dc:	ldr	r1, [r0, #20]
   310e0:	adds	r1, r1, sl
   310e4:	cmpcc	r1, #1073741824	; 0x40000000
   310e8:	bcc	3110c <flatcc_builder_create_union_vector@@Base+0xc0>
   310ec:	movw	r0, #42265	; 0xa519
   310f0:	movw	r1, #37994	; 0x946a
   310f4:	movw	r3, #42292	; 0xa534
   310f8:	mov	r2, #892	; 0x37c
   310fc:	movt	r0, #4
   31100:	movt	r1, #4
   31104:	movt	r3, #4
   31108:	bl	14f40 <__assert_fail@plt>
   3110c:	str	r1, [r0, #20]
   31110:	ldr	r7, [r4, #20]
   31114:	ldr	r0, [r4, #24]
   31118:	add	r1, r7, sl, lsl #2
   3111c:	cmp	r1, r0
   31120:	str	r1, [r4, #20]
   31124:	bcs	31138 <flatcc_builder_create_union_vector@@Base+0xec>
   31128:	ldr	r1, [r4, #16]
   3112c:	adds	r2, r1, r7
   31130:	bne	311a0 <flatcc_builder_create_union_vector@@Base+0x154>
   31134:	b	3108c <flatcc_builder_create_union_vector@@Base+0x40>
   31138:	ldr	r2, [r4, #28]
   3113c:	ldr	r0, [r4, #40]	; 0x28
   31140:	ldr	r6, [r4, #48]	; 0x30
   31144:	mov	r3, #1
   31148:	str	r3, [sp]
   3114c:	mov	r3, #1
   31150:	add	r1, r1, r2
   31154:	add	r2, r1, #1
   31158:	add	r1, r4, #60	; 0x3c
   3115c:	blx	r6
   31160:	cmp	r0, #0
   31164:	bne	3108c <flatcc_builder_create_union_vector@@Base+0x40>
   31168:	ldr	r0, [r4, #28]
   3116c:	ldr	r1, [r4, #60]	; 0x3c
   31170:	ldr	r3, [r4, #64]	; 0x40
   31174:	ldr	r2, [r4, #32]
   31178:	add	r1, r1, r0
   3117c:	sub	r0, r3, r0
   31180:	mvn	r3, #3
   31184:	cmn	r0, #4
   31188:	str	r1, [r4, #16]
   3118c:	movcs	r0, r3
   31190:	str	r0, [r4, #24]
   31194:	str	r3, [r2, #4]
   31198:	adds	r2, r1, r7
   3119c:	beq	3108c <flatcc_builder_create_union_vector@@Base+0x40>
   311a0:	ldr	r7, [r4, #20]
   311a4:	add	r2, r7, sl
   311a8:	cmp	r2, r0
   311ac:	str	r2, [r4, #20]
   311b0:	bcc	31214 <flatcc_builder_create_union_vector@@Base+0x1c8>
   311b4:	ldr	r1, [r4, #28]
   311b8:	ldr	r0, [r4, #40]	; 0x28
   311bc:	ldr	r6, [r4, #48]	; 0x30
   311c0:	mov	r3, #1
   311c4:	str	r3, [sp]
   311c8:	mov	r3, #1
   311cc:	add	r1, r2, r1
   311d0:	add	r2, r1, #1
   311d4:	add	r1, r4, #60	; 0x3c
   311d8:	blx	r6
   311dc:	cmp	r0, #0
   311e0:	bne	3108c <flatcc_builder_create_union_vector@@Base+0x40>
   311e4:	ldr	r0, [r4, #28]
   311e8:	ldr	r1, [r4, #60]	; 0x3c
   311ec:	ldr	r3, [r4, #64]	; 0x40
   311f0:	ldr	r2, [r4, #32]
   311f4:	add	r1, r1, r0
   311f8:	sub	r0, r3, r0
   311fc:	mvn	r3, #3
   31200:	cmn	r0, #4
   31204:	str	r1, [r4, #16]
   31208:	movcs	r0, r3
   3120c:	str	r0, [r4, #24]
   31210:	str	r3, [r2, #4]
   31214:	adds	r5, r1, r7
   31218:	beq	3108c <flatcc_builder_create_union_vector@@Base+0x40>
   3121c:	cmp	sl, #0
   31220:	beq	312a8 <flatcc_builder_create_union_vector@@Base+0x25c>
   31224:	and	ip, sl, #1
   31228:	mov	r0, #0
   3122c:	cmp	sl, #1
   31230:	str	r5, [sp, #8]
   31234:	beq	3128c <flatcc_builder_create_union_vector@@Base+0x240>
   31238:	ldr	r0, [sp, #8]
   3123c:	sub	lr, sl, ip
   31240:	add	r2, r1, #4
   31244:	add	r6, r9, #8
   31248:	add	r7, r0, #1
   3124c:	mov	r0, #0
   31250:	ldrb	r3, [r6, #-8]
   31254:	add	r5, r7, r0
   31258:	strb	r3, [r5, #-1]
   3125c:	add	r3, r9, r0, lsl #3
   31260:	ldr	r5, [r3, #4]
   31264:	str	r5, [r2, #-4]
   31268:	ldrb	r5, [r6]
   3126c:	add	r6, r6, #16
   31270:	strb	r5, [r7, r0]
   31274:	add	r0, r0, #2
   31278:	ldr	r3, [r3, #12]
   3127c:	cmp	lr, r0
   31280:	str	r3, [r2]
   31284:	add	r2, r2, #8
   31288:	bne	31250 <flatcc_builder_create_union_vector@@Base+0x204>
   3128c:	ldr	r5, [sp, #8]
   31290:	cmp	ip, #0
   31294:	beq	312a8 <flatcc_builder_create_union_vector@@Base+0x25c>
   31298:	ldrb	r2, [r9, r0, lsl #3]!
   3129c:	strb	r2, [r5, r0]
   312a0:	ldr	r2, [r9, #4]
   312a4:	str	r2, [r1, r0, lsl #2]
   312a8:	mov	r0, r4
   312ac:	mov	r2, sl
   312b0:	mov	r3, r5
   312b4:	bl	30820 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   312b8:	mov	r7, r0
   312bc:	mov	r6, #0
   312c0:	cmp	r0, #0
   312c4:	beq	312f0 <flatcc_builder_create_union_vector@@Base+0x2a4>
   312c8:	mvn	r0, #0
   312cc:	mov	r1, #1
   312d0:	mov	r2, sl
   312d4:	mov	r3, #1
   312d8:	str	r1, [sp]
   312dc:	str	r0, [sp, #4]
   312e0:	mov	r0, r4
   312e4:	mov	r1, r5
   312e8:	bl	305c0 <flatcc_builder_create_vector@@Base>
   312ec:	b	312f4 <flatcc_builder_create_union_vector@@Base+0x2a8>
   312f0:	mov	r0, #0
   312f4:	orr	r1, r6, r7
   312f8:	stm	r8, {r0, r1}
   312fc:	mov	r1, #0
   31300:	ldr	r0, [r4, #16]
   31304:	ldr	r2, [r4, #20]
   31308:	bl	14eec <memset@plt>
   3130c:	ldr	r0, [r4, #32]
   31310:	ldr	r1, [r4, #60]	; 0x3c
   31314:	ldr	r2, [r4, #64]	; 0x40
   31318:	ldr	r3, [r0, #8]
   3131c:	str	r3, [r4, #20]
   31320:	ldr	r3, [r0]
   31324:	str	r3, [r4, #28]
   31328:	add	r1, r1, r3
   3132c:	ldr	r7, [r0, #4]
   31330:	str	r1, [r4, #16]
   31334:	sub	r1, r2, r3
   31338:	cmp	r1, r7
   3133c:	movhi	r1, r7
   31340:	str	r1, [r4, #24]
   31344:	ldrh	r1, [r4, #130]	; 0x82
   31348:	ldrh	r2, [r4, #128]	; 0x80
   3134c:	cmp	r2, r1
   31350:	strhcc	r1, [r4, #128]	; 0x80
   31354:	ldrh	r1, [r0, #12]
   31358:	sub	r0, r0, #36	; 0x24
   3135c:	str	r0, [r4, #32]
   31360:	strh	r1, [r4, #130]	; 0x82
   31364:	ldr	r0, [r4, #156]	; 0x9c
   31368:	sub	r0, r0, #1
   3136c:	str	r0, [r4, #156]	; 0x9c
   31370:	sub	sp, fp, #28
   31374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00031378 <flatcc_builder_create_union_vector_direct@@Base>:
   31378:	push	{r4, r5, r6, r7, fp, lr}
   3137c:	add	fp, sp, #16
   31380:	sub	sp, sp, #8
   31384:	ldr	r7, [fp, #8]
   31388:	mov	r5, r2
   3138c:	mov	r4, r0
   31390:	mov	r0, #0
   31394:	mov	r6, r1
   31398:	str	r0, [r4]
   3139c:	str	r0, [r4, #4]
   313a0:	mov	r0, r1
   313a4:	mov	r1, r3
   313a8:	mov	r3, r5
   313ac:	mov	r2, r7
   313b0:	bl	30820 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   313b4:	cmp	r0, #0
   313b8:	str	r0, [r4, #4]
   313bc:	beq	313e8 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   313c0:	mvn	r0, #0
   313c4:	mov	r1, #1
   313c8:	mov	r2, r7
   313cc:	mov	r3, #1
   313d0:	str	r1, [sp]
   313d4:	str	r0, [sp, #4]
   313d8:	mov	r0, r6
   313dc:	mov	r1, r5
   313e0:	bl	305c0 <flatcc_builder_create_vector@@Base>
   313e4:	str	r0, [r4]
   313e8:	sub	sp, fp, #16
   313ec:	pop	{r4, r5, r6, r7, fp, pc}

000313f0 <flatcc_builder_start_union_vector@@Base>:
   313f0:	push	{r4, sl, fp, lr}
   313f4:	add	fp, sp, #8
   313f8:	mov	r1, #4
   313fc:	mov	r4, r0
   31400:	bl	2e518 <flatcc_builder_start_buffer@@Base+0xbc>
   31404:	mov	r1, r0
   31408:	mvn	r0, #0
   3140c:	cmp	r1, #0
   31410:	popne	{r4, sl, fp, pc}
   31414:	ldr	r0, [r4, #32]
   31418:	mov	r1, #8
   3141c:	mov	r2, #7
   31420:	str	r1, [r0, #16]
   31424:	mov	r0, #0
   31428:	ldr	r1, [r4, #32]
   3142c:	str	r0, [r1, #20]
   31430:	ldr	r1, [r4, #32]
   31434:	strh	r2, [r1, #14]
   31438:	ldr	r2, [r4, #28]
   3143c:	ldr	r3, [r4, #60]	; 0x3c
   31440:	ldr	ip, [r4, #64]	; 0x40
   31444:	add	r3, r3, r2
   31448:	sub	r2, ip, r2
   3144c:	str	r3, [r4, #16]
   31450:	mvn	r3, #3
   31454:	cmn	r2, #4
   31458:	movcs	r2, r3
   3145c:	str	r2, [r4, #24]
   31460:	str	r3, [r1, #4]
   31464:	pop	{r4, sl, fp, pc}

00031468 <flatcc_builder_end_union_vector@@Base>:
   31468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3146c:	add	fp, sp, #28
   31470:	sub	sp, sp, #20
   31474:	mov	r4, r0
   31478:	mov	r0, #0
   3147c:	mov	r8, r1
   31480:	str	r0, [r4]
   31484:	str	r0, [r4, #4]
   31488:	ldr	r0, [r1, #32]
   3148c:	ldrh	r1, [r0, #14]
   31490:	cmp	r1, #7
   31494:	bne	3169c <flatcc_builder_end_union_vector@@Base+0x234>
   31498:	ldr	r9, [r0, #20]
   3149c:	ldr	r5, [r8, #20]
   314a0:	ldr	r2, [r8, #24]
   314a4:	add	r0, r9, r9, lsl #2
   314a8:	add	r1, r5, r0
   314ac:	cmp	r1, r2
   314b0:	str	r1, [r8, #20]
   314b4:	bcs	315a4 <flatcc_builder_end_union_vector@@Base+0x13c>
   314b8:	ldr	r0, [r8, #16]
   314bc:	adds	r1, r0, r5
   314c0:	beq	3160c <flatcc_builder_end_union_vector@@Base+0x1a4>
   314c4:	add	sl, r1, r9, lsl #2
   314c8:	cmp	r9, #0
   314cc:	beq	3155c <flatcc_builder_end_union_vector@@Base+0xf4>
   314d0:	and	r2, r9, #1
   314d4:	cmp	r9, #1
   314d8:	str	r4, [sp, #12]
   314dc:	str	r2, [sp, #16]
   314e0:	mov	r2, #0
   314e4:	beq	3153c <flatcc_builder_end_union_vector@@Base+0xd4>
   314e8:	ldr	r2, [sp, #16]
   314ec:	add	r5, r5, #4
   314f0:	add	r6, r0, #8
   314f4:	sub	lr, r9, r2
   314f8:	mov	r2, #0
   314fc:	ldrb	r7, [r6, #-8]
   31500:	mov	r4, sl
   31504:	add	r3, r0, r2, lsl #3
   31508:	strb	r7, [r4, r2]!
   3150c:	add	r7, r0, r5
   31510:	add	r2, r2, #2
   31514:	ldr	ip, [r3, #4]
   31518:	cmp	lr, r2
   3151c:	str	ip, [r7, #-4]
   31520:	ldrb	r7, [r6]
   31524:	add	r6, r6, #16
   31528:	strb	r7, [r4, #1]
   3152c:	ldr	r3, [r3, #12]
   31530:	str	r3, [r0, r5]
   31534:	add	r5, r5, #8
   31538:	bne	314fc <flatcc_builder_end_union_vector@@Base+0x94>
   3153c:	ldr	r3, [sp, #16]
   31540:	ldr	r4, [sp, #12]
   31544:	cmp	r3, #0
   31548:	beq	3155c <flatcc_builder_end_union_vector@@Base+0xf4>
   3154c:	ldrb	r3, [r0, r2, lsl #3]!
   31550:	strb	r3, [sl, r2]
   31554:	ldr	r0, [r0, #4]
   31558:	str	r0, [r1, r2, lsl #2]
   3155c:	mov	r0, r8
   31560:	mov	r2, r9
   31564:	mov	r3, sl
   31568:	bl	30820 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   3156c:	mov	r5, r0
   31570:	mov	r6, #0
   31574:	cmp	r0, #0
   31578:	beq	31614 <flatcc_builder_end_union_vector@@Base+0x1ac>
   3157c:	mvn	r0, #0
   31580:	mov	r1, #1
   31584:	mov	r2, r9
   31588:	mov	r3, #1
   3158c:	str	r1, [sp]
   31590:	str	r0, [sp, #4]
   31594:	mov	r0, r8
   31598:	mov	r1, sl
   3159c:	bl	305c0 <flatcc_builder_create_vector@@Base>
   315a0:	b	31618 <flatcc_builder_end_union_vector@@Base+0x1b0>
   315a4:	ldr	r2, [r8, #28]
   315a8:	ldr	r0, [r8, #40]	; 0x28
   315ac:	ldr	r7, [r8, #48]	; 0x30
   315b0:	mov	r3, #1
   315b4:	str	r3, [sp]
   315b8:	mov	r3, #1
   315bc:	add	r1, r1, r2
   315c0:	add	r2, r1, #1
   315c4:	add	r1, r8, #60	; 0x3c
   315c8:	blx	r7
   315cc:	cmp	r0, #0
   315d0:	bne	3160c <flatcc_builder_end_union_vector@@Base+0x1a4>
   315d4:	ldr	r1, [r8, #28]
   315d8:	ldr	r0, [r8, #60]	; 0x3c
   315dc:	ldr	r3, [r8, #64]	; 0x40
   315e0:	ldr	r2, [r8, #32]
   315e4:	add	r0, r0, r1
   315e8:	sub	r1, r3, r1
   315ec:	mvn	r3, #3
   315f0:	cmn	r1, #4
   315f4:	str	r0, [r8, #16]
   315f8:	movcs	r1, r3
   315fc:	str	r1, [r8, #24]
   31600:	str	r3, [r2, #4]
   31604:	adds	r1, r0, r5
   31608:	bne	314c4 <flatcc_builder_end_union_vector@@Base+0x5c>
   3160c:	sub	sp, fp, #28
   31610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31614:	mov	r0, #0
   31618:	orr	r1, r6, r5
   3161c:	stm	r4, {r0, r1}
   31620:	mov	r1, #0
   31624:	ldr	r0, [r8, #16]
   31628:	ldr	r2, [r8, #20]
   3162c:	bl	14eec <memset@plt>
   31630:	ldr	r0, [r8, #32]
   31634:	ldr	r1, [r8, #60]	; 0x3c
   31638:	ldr	r2, [r8, #64]	; 0x40
   3163c:	ldr	r3, [r0, #8]
   31640:	str	r3, [r8, #20]
   31644:	ldr	r3, [r0]
   31648:	str	r3, [r8, #28]
   3164c:	add	r1, r1, r3
   31650:	ldr	r7, [r0, #4]
   31654:	str	r1, [r8, #16]
   31658:	sub	r1, r2, r3
   3165c:	cmp	r1, r7
   31660:	movhi	r1, r7
   31664:	str	r1, [r8, #24]
   31668:	ldrh	r1, [r8, #130]	; 0x82
   3166c:	ldrh	r2, [r8, #128]	; 0x80
   31670:	cmp	r2, r1
   31674:	strhcc	r1, [r8, #128]	; 0x80
   31678:	ldrh	r1, [r0, #12]
   3167c:	sub	r0, r0, #36	; 0x24
   31680:	str	r0, [r8, #32]
   31684:	strh	r1, [r8, #130]	; 0x82
   31688:	ldr	r0, [r8, #156]	; 0x9c
   3168c:	sub	r0, r0, #1
   31690:	str	r0, [r8, #156]	; 0x9c
   31694:	sub	sp, fp, #28
   31698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3169c:	movw	r0, #41100	; 0xa08c
   316a0:	movw	r1, #37994	; 0x946a
   316a4:	movw	r3, #41150	; 0xa0be
   316a8:	movw	r2, #1617	; 0x651
   316ac:	movt	r0, #4
   316b0:	movt	r1, #4
   316b4:	movt	r3, #4
   316b8:	bl	14f40 <__assert_fail@plt>

000316bc <flatcc_builder_union_vector_count@@Base>:
   316bc:	ldr	r0, [r0, #32]
   316c0:	ldr	r0, [r0, #20]
   316c4:	bx	lr

000316c8 <flatcc_builder_union_vector_edit@@Base>:
   316c8:	ldr	r0, [r0, #16]
   316cc:	bx	lr

000316d0 <flatcc_builder_extend_union_vector@@Base>:
   316d0:	push	{r4, r5, fp, lr}
   316d4:	add	fp, sp, #8
   316d8:	sub	sp, sp, #8
   316dc:	mov	r4, r0
   316e0:	ldr	r0, [r0, #32]
   316e4:	ldr	r2, [r0, #20]
   316e8:	adds	r2, r2, r1
   316ec:	cmpcc	r2, #536870912	; 0x20000000
   316f0:	bcc	31714 <flatcc_builder_extend_union_vector@@Base+0x44>
   316f4:	movw	r0, #42265	; 0xa519
   316f8:	movw	r1, #37994	; 0x946a
   316fc:	movw	r3, #42292	; 0xa534
   31700:	mov	r2, #892	; 0x37c
   31704:	movt	r0, #4
   31708:	movt	r1, #4
   3170c:	movt	r3, #4
   31710:	bl	14f40 <__assert_fail@plt>
   31714:	str	r2, [r0, #20]
   31718:	ldr	r5, [r4, #20]
   3171c:	ldr	r0, [r4, #24]
   31720:	add	r1, r5, r1, lsl #3
   31724:	cmp	r1, r0
   31728:	str	r1, [r4, #20]
   3172c:	bcs	31740 <flatcc_builder_extend_union_vector@@Base+0x70>
   31730:	ldr	r0, [r4, #16]
   31734:	add	r0, r0, r5
   31738:	sub	sp, fp, #8
   3173c:	pop	{r4, r5, fp, pc}
   31740:	ldr	r2, [r4, #28]
   31744:	ldr	r0, [r4, #40]	; 0x28
   31748:	ldr	ip, [r4, #48]	; 0x30
   3174c:	mov	r3, #1
   31750:	str	r3, [sp]
   31754:	mov	r3, #1
   31758:	add	r1, r1, r2
   3175c:	add	r2, r1, #1
   31760:	add	r1, r4, #60	; 0x3c
   31764:	blx	ip
   31768:	mov	r1, r0
   3176c:	mov	r0, #0
   31770:	cmp	r1, #0
   31774:	beq	31780 <flatcc_builder_extend_union_vector@@Base+0xb0>
   31778:	sub	sp, fp, #8
   3177c:	pop	{r4, r5, fp, pc}
   31780:	ldr	r1, [r4, #28]
   31784:	ldr	r0, [r4, #60]	; 0x3c
   31788:	ldr	r3, [r4, #64]	; 0x40
   3178c:	ldr	r2, [r4, #32]
   31790:	add	r0, r0, r1
   31794:	sub	r1, r3, r1
   31798:	mvn	r3, #3
   3179c:	cmn	r1, #4
   317a0:	str	r0, [r4, #16]
   317a4:	movcs	r1, r3
   317a8:	str	r1, [r4, #24]
   317ac:	str	r3, [r2, #4]
   317b0:	add	r0, r0, r5
   317b4:	sub	sp, fp, #8
   317b8:	pop	{r4, r5, fp, pc}

000317bc <flatcc_builder_truncate_union_vector@@Base>:
   317bc:	push	{fp, lr}
   317c0:	mov	fp, sp
   317c4:	ldr	r2, [r0, #32]
   317c8:	ldrh	r3, [r2, #14]
   317cc:	cmp	r3, #7
   317d0:	bne	31818 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   317d4:	ldr	r3, [r2, #20]
   317d8:	cmp	r3, r1
   317dc:	bcc	31838 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   317e0:	sub	r3, r3, r1
   317e4:	str	r3, [r2, #20]
   317e8:	ldr	r2, [r0, #32]
   317ec:	ldr	r3, [r0, #20]
   317f0:	ldr	ip, [r0, #16]
   317f4:	ldr	r2, [r2, #16]
   317f8:	mls	r3, r2, r1, r3
   317fc:	mul	r2, r2, r1
   31800:	mov	r1, #0
   31804:	str	r3, [r0, #20]
   31808:	add	r0, ip, r3
   3180c:	bl	14eec <memset@plt>
   31810:	mov	r0, #0
   31814:	pop	{fp, pc}
   31818:	movw	r0, #41100	; 0xa08c
   3181c:	movw	r1, #37994	; 0x946a
   31820:	movw	r3, #41233	; 0xa111
   31824:	movw	r2, #1665	; 0x681
   31828:	movt	r0, #4
   3182c:	movt	r1, #4
   31830:	movt	r3, #4
   31834:	bl	14f40 <__assert_fail@plt>
   31838:	movw	r0, #39664	; 0x9af0
   3183c:	movw	r1, #37994	; 0x946a
   31840:	movw	r3, #41233	; 0xa111
   31844:	movw	r2, #1666	; 0x682
   31848:	movt	r0, #4
   3184c:	movt	r1, #4
   31850:	movt	r3, #4
   31854:	bl	14f40 <__assert_fail@plt>

00031858 <flatcc_builder_union_vector_push@@Base>:
   31858:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3185c:	add	fp, sp, #24
   31860:	sub	sp, sp, #8
   31864:	mov	r7, r0
   31868:	ldr	r0, [r0, #32]
   3186c:	mov	r9, r1
   31870:	ldrh	r1, [r0, #14]
   31874:	cmp	r1, #7
   31878:	bne	31940 <flatcc_builder_union_vector_push@@Base+0xe8>
   3187c:	ldr	r1, [r0, #20]
   31880:	mov	r6, #0
   31884:	cmn	r1, #-536870911	; 0xe0000001
   31888:	beq	318e8 <flatcc_builder_union_vector_push@@Base+0x90>
   3188c:	add	r1, r1, #1
   31890:	mov	r8, r2
   31894:	str	r1, [r0, #20]
   31898:	ldr	r4, [r7, #20]
   3189c:	ldr	r0, [r7, #24]
   318a0:	add	r1, r4, #8
   318a4:	cmp	r1, r0
   318a8:	str	r1, [r7, #20]
   318ac:	bcs	318b8 <flatcc_builder_union_vector_push@@Base+0x60>
   318b0:	ldr	r0, [r7, #16]
   318b4:	b	31924 <flatcc_builder_union_vector_push@@Base+0xcc>
   318b8:	ldr	r1, [r7, #28]
   318bc:	ldr	r0, [r7, #40]	; 0x28
   318c0:	ldr	r5, [r7, #48]	; 0x30
   318c4:	mov	r2, #1
   318c8:	mov	r3, #1
   318cc:	str	r2, [sp]
   318d0:	add	r1, r4, r1
   318d4:	add	r2, r1, #9
   318d8:	add	r1, r7, #60	; 0x3c
   318dc:	blx	r5
   318e0:	cmp	r0, #0
   318e4:	beq	318f4 <flatcc_builder_union_vector_push@@Base+0x9c>
   318e8:	mov	r0, r6
   318ec:	sub	sp, fp, #24
   318f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   318f4:	ldr	r1, [r7, #28]
   318f8:	ldr	r0, [r7, #60]	; 0x3c
   318fc:	ldr	r3, [r7, #64]	; 0x40
   31900:	ldr	r2, [r7, #32]
   31904:	add	r0, r0, r1
   31908:	sub	r1, r3, r1
   3190c:	mvn	r3, #3
   31910:	cmn	r1, #4
   31914:	str	r0, [r7, #16]
   31918:	movcs	r1, r3
   3191c:	str	r1, [r7, #24]
   31920:	str	r3, [r2, #4]
   31924:	adds	r0, r0, r4
   31928:	movne	r6, r0
   3192c:	strne	r9, [r0]
   31930:	strne	r8, [r0, #4]
   31934:	mov	r0, r6
   31938:	sub	sp, fp, #24
   3193c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31940:	movw	r0, #41100	; 0xa08c
   31944:	movw	r1, #37994	; 0x946a
   31948:	movw	r3, #41302	; 0xa156
   3194c:	movw	r2, #1677	; 0x68d
   31950:	movt	r0, #4
   31954:	movt	r1, #4
   31958:	movt	r3, #4
   3195c:	bl	14f40 <__assert_fail@plt>

00031960 <flatcc_builder_append_union_vector@@Base>:
   31960:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31964:	add	fp, sp, #24
   31968:	sub	sp, sp, #8
   3196c:	mov	r6, r0
   31970:	ldr	r0, [r0, #32]
   31974:	mov	r8, r1
   31978:	ldrh	r1, [r0, #14]
   3197c:	cmp	r1, #7
   31980:	bne	31a84 <flatcc_builder_append_union_vector@@Base+0x124>
   31984:	ldr	r1, [r0, #20]
   31988:	mov	r5, r2
   3198c:	adds	r1, r1, r2
   31990:	cmpcc	r1, #536870912	; 0x20000000
   31994:	bcc	319b8 <flatcc_builder_append_union_vector@@Base+0x58>
   31998:	movw	r0, #42265	; 0xa519
   3199c:	movw	r1, #37994	; 0x946a
   319a0:	movw	r3, #42292	; 0xa534
   319a4:	mov	r2, #892	; 0x37c
   319a8:	movt	r0, #4
   319ac:	movt	r1, #4
   319b0:	movt	r3, #4
   319b4:	bl	14f40 <__assert_fail@plt>
   319b8:	str	r1, [r0, #20]
   319bc:	ldr	r4, [r6, #20]
   319c0:	ldr	r0, [r6, #24]
   319c4:	add	r1, r4, r5, lsl #3
   319c8:	cmp	r1, r0
   319cc:	str	r1, [r6, #20]
   319d0:	bcs	319fc <flatcc_builder_append_union_vector@@Base+0x9c>
   319d4:	ldr	r0, [r6, #16]
   319d8:	adds	r7, r0, r4
   319dc:	beq	31a74 <flatcc_builder_append_union_vector@@Base+0x114>
   319e0:	lsl	r2, r5, #3
   319e4:	mov	r0, r7
   319e8:	mov	r1, r8
   319ec:	bl	14e5c <memcpy@plt>
   319f0:	mov	r0, r7
   319f4:	sub	sp, fp, #24
   319f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   319fc:	ldr	r2, [r6, #28]
   31a00:	ldr	r0, [r6, #40]	; 0x28
   31a04:	ldr	r7, [r6, #48]	; 0x30
   31a08:	mov	r3, #1
   31a0c:	str	r3, [sp]
   31a10:	mov	r3, #1
   31a14:	add	r1, r1, r2
   31a18:	add	r2, r1, #1
   31a1c:	add	r1, r6, #60	; 0x3c
   31a20:	blx	r7
   31a24:	mov	r7, #0
   31a28:	cmp	r0, #0
   31a2c:	beq	31a3c <flatcc_builder_append_union_vector@@Base+0xdc>
   31a30:	mov	r0, r7
   31a34:	sub	sp, fp, #24
   31a38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31a3c:	ldr	r1, [r6, #28]
   31a40:	ldr	r0, [r6, #60]	; 0x3c
   31a44:	ldr	r3, [r6, #64]	; 0x40
   31a48:	ldr	r2, [r6, #32]
   31a4c:	add	r0, r0, r1
   31a50:	sub	r1, r3, r1
   31a54:	mvn	r3, #3
   31a58:	cmn	r1, #4
   31a5c:	str	r0, [r6, #16]
   31a60:	movcs	r1, r3
   31a64:	str	r1, [r6, #24]
   31a68:	str	r3, [r2, #4]
   31a6c:	adds	r7, r0, r4
   31a70:	bne	319e0 <flatcc_builder_append_union_vector@@Base+0x80>
   31a74:	mov	r7, #0
   31a78:	mov	r0, r7
   31a7c:	sub	sp, fp, #24
   31a80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31a84:	movw	r0, #41100	; 0xa08c
   31a88:	movw	r1, #37994	; 0x946a
   31a8c:	movw	r3, #41411	; 0xa1c3
   31a90:	movw	r2, #1692	; 0x69c
   31a94:	movt	r0, #4
   31a98:	movt	r1, #4
   31a9c:	movt	r3, #4
   31aa0:	bl	14f40 <__assert_fail@plt>

00031aa4 <flatcc_builder_create_string@@Base>:
   31aa4:	push	{r4, r5, r6, sl, fp, lr}
   31aa8:	add	fp, sp, #16
   31aac:	sub	sp, sp, #80	; 0x50
   31ab0:	str	r2, [fp, #-20]	; 0xffffffec
   31ab4:	mvn	r5, r2
   31ab8:	mov	r6, r0
   31abc:	sub	r3, fp, #20
   31ac0:	cmp	r2, #0
   31ac4:	add	lr, sp, #4
   31ac8:	ldr	ip, [r0, #136]	; 0x88
   31acc:	mov	r0, #4
   31ad0:	str	r0, [sp, #16]
   31ad4:	str	r3, [sp, #12]
   31ad8:	mov	r3, #1
   31adc:	str	r0, [sp, #4]
   31ae0:	addne	r0, r2, #4
   31ae4:	str	r3, [sp, #8]
   31ae8:	strne	r2, [sp, #24]
   31aec:	movw	r2, #37464	; 0x9258
   31af0:	movne	r3, #2
   31af4:	strne	r1, [sp, #20]
   31af8:	strne	r3, [sp, #8]
   31afc:	strne	r0, [sp, #4]
   31b00:	movt	r2, #4
   31b04:	add	r5, ip, r5
   31b08:	and	r5, r5, #3
   31b0c:	add	r5, r5, #1
   31b10:	add	r1, r0, r5
   31b14:	add	r0, lr, r3, lsl #3
   31b18:	str	r1, [sp, #4]
   31b1c:	cmp	r1, #0
   31b20:	str	r2, [r0, #8]
   31b24:	add	r2, r3, #1
   31b28:	str	r5, [r0, #12]
   31b2c:	str	r2, [sp, #8]
   31b30:	ble	31b84 <flatcc_builder_create_string@@Base+0xe0>
   31b34:	ldr	r0, [r6, #36]	; 0x24
   31b38:	ldr	r4, [r6, #44]	; 0x2c
   31b3c:	sub	r5, ip, r1
   31b40:	str	r1, [sp]
   31b44:	add	r1, lr, #8
   31b48:	mov	r3, r5
   31b4c:	blx	r4
   31b50:	cmp	r0, #0
   31b54:	streq	r5, [r6, #136]	; 0x88
   31b58:	moveq	r0, r5
   31b5c:	subeq	sp, fp, #16
   31b60:	popeq	{r4, r5, r6, sl, fp, pc}
   31b64:	movw	r0, #42512	; 0xa610
   31b68:	movw	r1, #37994	; 0x946a
   31b6c:	movw	r3, #42191	; 0xa4cf
   31b70:	movw	r2, #651	; 0x28b
   31b74:	movt	r0, #4
   31b78:	movt	r1, #4
   31b7c:	movt	r3, #4
   31b80:	bl	14f40 <__assert_fail@plt>
   31b84:	movw	r0, #42512	; 0xa610
   31b88:	movw	r1, #37994	; 0x946a
   31b8c:	movw	r3, #42191	; 0xa4cf
   31b90:	movw	r2, #647	; 0x287
   31b94:	movt	r0, #4
   31b98:	movt	r1, #4
   31b9c:	movt	r3, #4
   31ba0:	bl	14f40 <__assert_fail@plt>

00031ba4 <flatcc_builder_create_string_str@@Base>:
   31ba4:	push	{r4, r5, fp, lr}
   31ba8:	add	fp, sp, #8
   31bac:	mov	r5, r0
   31bb0:	mov	r0, r1
   31bb4:	mov	r4, r1
   31bb8:	bl	14ec8 <strlen@plt>
   31bbc:	mov	r2, r0
   31bc0:	mov	r0, r5
   31bc4:	mov	r1, r4
   31bc8:	pop	{r4, r5, fp, lr}
   31bcc:	b	31aa4 <flatcc_builder_create_string@@Base>

00031bd0 <flatcc_builder_create_string_strn@@Base>:
   31bd0:	push	{r4, r5, r6, sl, fp, lr}
   31bd4:	add	fp, sp, #16
   31bd8:	mov	r6, r0
   31bdc:	mov	r5, r1
   31be0:	mov	r0, r1
   31be4:	mov	r1, #0
   31be8:	mov	r4, r2
   31bec:	bl	14f10 <memchr@plt>
   31bf0:	cmp	r0, #0
   31bf4:	mov	r1, r5
   31bf8:	subne	r4, r0, r5
   31bfc:	mov	r0, r6
   31c00:	mov	r2, r4
   31c04:	pop	{r4, r5, r6, sl, fp, lr}
   31c08:	b	31aa4 <flatcc_builder_create_string@@Base>

00031c0c <flatcc_builder_end_string@@Base>:
   31c0c:	push	{r4, r5, fp, lr}
   31c10:	add	fp, sp, #8
   31c14:	mov	r4, r0
   31c18:	ldr	r0, [r0, #32]
   31c1c:	ldrh	r1, [r0, #14]
   31c20:	cmp	r1, #6
   31c24:	bne	31ccc <flatcc_builder_end_string@@Base+0xc0>
   31c28:	ldr	r2, [r0, #20]
   31c2c:	ldr	r0, [r4, #20]
   31c30:	cmp	r2, r0
   31c34:	bne	31cec <flatcc_builder_end_string@@Base+0xe0>
   31c38:	ldr	r1, [r4, #16]
   31c3c:	mov	r0, r4
   31c40:	bl	31aa4 <flatcc_builder_create_string@@Base>
   31c44:	mov	r5, r0
   31c48:	cmp	r0, #0
   31c4c:	beq	31cc4 <flatcc_builder_end_string@@Base+0xb8>
   31c50:	ldr	r0, [r4, #16]
   31c54:	ldr	r2, [r4, #20]
   31c58:	mov	r1, #0
   31c5c:	bl	14eec <memset@plt>
   31c60:	ldr	r0, [r4, #32]
   31c64:	ldr	r1, [r4, #60]	; 0x3c
   31c68:	ldr	ip, [r4, #64]	; 0x40
   31c6c:	ldr	r3, [r0, #8]
   31c70:	str	r3, [r4, #20]
   31c74:	ldr	r3, [r0]
   31c78:	str	r3, [r4, #28]
   31c7c:	add	r1, r1, r3
   31c80:	ldr	r2, [r0, #4]
   31c84:	str	r1, [r4, #16]
   31c88:	sub	r1, ip, r3
   31c8c:	cmp	r1, r2
   31c90:	movhi	r1, r2
   31c94:	str	r1, [r4, #24]
   31c98:	ldrh	r1, [r4, #130]	; 0x82
   31c9c:	ldrh	r2, [r4, #128]	; 0x80
   31ca0:	cmp	r2, r1
   31ca4:	strhcc	r1, [r4, #128]	; 0x80
   31ca8:	ldrh	r1, [r0, #12]
   31cac:	sub	r0, r0, #36	; 0x24
   31cb0:	str	r0, [r4, #32]
   31cb4:	strh	r1, [r4, #130]	; 0x82
   31cb8:	ldr	r0, [r4, #156]	; 0x9c
   31cbc:	sub	r0, r0, #1
   31cc0:	str	r0, [r4, #156]	; 0x9c
   31cc4:	mov	r0, r5
   31cc8:	pop	{r4, r5, fp, pc}
   31ccc:	movw	r0, #39311	; 0x998f
   31cd0:	movw	r1, #37994	; 0x946a
   31cd4:	movw	r3, #41538	; 0xa242
   31cd8:	movw	r2, #1732	; 0x6c4
   31cdc:	movt	r0, #4
   31ce0:	movt	r1, #4
   31ce4:	movt	r3, #4
   31ce8:	bl	14f40 <__assert_fail@plt>
   31cec:	movw	r0, #41605	; 0xa285
   31cf0:	movw	r1, #37994	; 0x946a
   31cf4:	movw	r3, #41538	; 0xa242
   31cf8:	movw	r2, #1733	; 0x6c5
   31cfc:	movt	r0, #4
   31d00:	movt	r1, #4
   31d04:	movt	r3, #4
   31d08:	bl	14f40 <__assert_fail@plt>

00031d0c <flatcc_builder_string_edit@@Base>:
   31d0c:	ldr	r0, [r0, #16]
   31d10:	bx	lr

00031d14 <flatcc_builder_string_len@@Base>:
   31d14:	ldr	r0, [r0, #32]
   31d18:	ldr	r0, [r0, #20]
   31d1c:	bx	lr

00031d20 <flatcc_builder_table_edit@@Base>:
   31d20:	push	{fp, lr}
   31d24:	mov	fp, sp
   31d28:	ldr	r2, [r0, #32]
   31d2c:	ldrh	r2, [r2, #14]
   31d30:	cmp	r2, #3
   31d34:	ldreq	r2, [r0, #16]
   31d38:	ldreq	r0, [r0, #20]
   31d3c:	addeq	r0, r2, r0
   31d40:	subeq	r0, r0, r1
   31d44:	popeq	{fp, pc}
   31d48:	movw	r0, #40063	; 0x9c7f
   31d4c:	movw	r1, #37994	; 0x946a
   31d50:	movw	r3, #41783	; 0xa337
   31d54:	movw	r2, #1794	; 0x702
   31d58:	movt	r0, #4
   31d5c:	movt	r1, #4
   31d60:	movt	r3, #4
   31d64:	bl	14f40 <__assert_fail@plt>

00031d68 <flatcc_builder_table_add_copy@@Base>:
   31d68:	push	{r4, r5, r6, sl, fp, lr}
   31d6c:	add	fp, sp, #16
   31d70:	mov	r4, r3
   31d74:	ldr	r3, [fp, #8]
   31d78:	mov	r5, r2
   31d7c:	mov	r2, r4
   31d80:	bl	30dac <flatcc_builder_table_add@@Base>
   31d84:	mov	r6, r0
   31d88:	cmp	r0, #0
   31d8c:	beq	31da0 <flatcc_builder_table_add_copy@@Base+0x38>
   31d90:	mov	r0, r6
   31d94:	mov	r1, r5
   31d98:	mov	r2, r4
   31d9c:	bl	14e5c <memcpy@plt>
   31da0:	mov	r0, r6
   31da4:	pop	{r4, r5, r6, sl, fp, pc}

00031da8 <flatcc_builder_push_buffer_alignment@@Base>:
   31da8:	ldrh	r1, [r0, #128]	; 0x80
   31dac:	mov	r2, #4
   31db0:	strh	r2, [r0, #128]	; 0x80
   31db4:	mov	r0, r1
   31db8:	bx	lr

00031dbc <flatcc_builder_pop_buffer_alignment@@Base>:
   31dbc:	ldrh	r2, [r0, #128]	; 0x80
   31dc0:	cmp	r2, r1
   31dc4:	strhcc	r1, [r0, #128]	; 0x80
   31dc8:	bx	lr

00031dcc <flatcc_builder_get_buffer_alignment@@Base>:
   31dcc:	ldrh	r0, [r0, #128]	; 0x80
   31dd0:	bx	lr

00031dd4 <flatcc_builder_set_vtable_clustering@@Base>:
   31dd4:	clz	r1, r1
   31dd8:	lsr	r1, r1, #5
   31ddc:	str	r1, [r0, #180]	; 0xb4
   31de0:	bx	lr

00031de4 <flatcc_builder_set_block_align@@Base>:
   31de4:	strh	r1, [r0, #132]	; 0x84
   31de8:	bx	lr

00031dec <flatcc_builder_get_level@@Base>:
   31dec:	ldr	r0, [r0, #156]	; 0x9c
   31df0:	bx	lr

00031df4 <flatcc_builder_set_max_level@@Base>:
   31df4:	str	r1, [r0, #176]	; 0xb0
   31df8:	ldr	r2, [r0, #160]	; 0xa0
   31dfc:	cmp	r2, r1
   31e00:	strlt	r1, [r0, #160]	; 0xa0
   31e04:	bx	lr

00031e08 <flatcc_builder_get_buffer_size@@Base>:
   31e08:	ldr	r1, [r0, #136]	; 0x88
   31e0c:	ldr	r0, [r0, #140]	; 0x8c
   31e10:	sub	r0, r0, r1
   31e14:	bx	lr

00031e18 <flatcc_builder_get_buffer_start@@Base>:
   31e18:	ldr	r0, [r0, #136]	; 0x88
   31e1c:	bx	lr

00031e20 <flatcc_builder_get_buffer_end@@Base>:
   31e20:	ldr	r0, [r0, #140]	; 0x8c
   31e24:	bx	lr

00031e28 <flatcc_builder_set_vtable_cache_limit@@Base>:
   31e28:	str	r1, [r0, #172]	; 0xac
   31e2c:	bx	lr

00031e30 <flatcc_builder_set_identifier@@Base>:
   31e30:	movw	r2, #37464	; 0x9258
   31e34:	cmp	r1, #0
   31e38:	movt	r2, #4
   31e3c:	movne	r2, r1
   31e40:	ldr	r1, [r2]
   31e44:	str	r1, [r0, #168]	; 0xa8
   31e48:	bx	lr

00031e4c <flatcc_builder_get_type@@Base>:
   31e4c:	ldr	r0, [r0, #32]
   31e50:	cmp	r0, #0
   31e54:	ldrhne	r0, [r0, #14]
   31e58:	moveq	r0, #0
   31e5c:	bx	lr

00031e60 <flatcc_builder_get_type_at@@Base>:
   31e60:	mov	r2, r0
   31e64:	mov	r0, #0
   31e68:	cmp	r1, #1
   31e6c:	blt	31e90 <flatcc_builder_get_type_at@@Base+0x30>
   31e70:	ldr	r3, [r2, #156]	; 0x9c
   31e74:	cmp	r3, r1
   31e78:	bxlt	lr
   31e7c:	sub	r0, r1, r3
   31e80:	ldr	r1, [r2, #32]
   31e84:	add	r0, r0, r0, lsl #3
   31e88:	add	r0, r1, r0, lsl #2
   31e8c:	ldrh	r0, [r0, #14]
   31e90:	bx	lr

00031e94 <flatcc_builder_get_direct_buffer@@Base>:
   31e94:	ldr	r2, [r0, #184]	; 0xb8
   31e98:	cmp	r2, #0
   31e9c:	beq	31eb0 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   31ea0:	ldr	r2, [r0, #188]	; 0xbc
   31ea4:	ldr	r3, [r0, #192]	; 0xc0
   31ea8:	cmp	r2, r3
   31eac:	beq	31ec8 <flatcc_builder_get_direct_buffer@@Base+0x34>
   31eb0:	cmp	r1, #0
   31eb4:	moveq	r0, #0
   31eb8:	bxeq	lr
   31ebc:	mov	r0, #0
   31ec0:	str	r0, [r1]
   31ec4:	bx	lr
   31ec8:	cmp	r1, #0
   31ecc:	ldrne	r2, [r0, #212]	; 0xd4
   31ed0:	strne	r2, [r1]
   31ed4:	ldr	r0, [r0, #196]	; 0xc4
   31ed8:	bx	lr

00031edc <flatcc_builder_copy_buffer@@Base>:
   31edc:	push	{fp, lr}
   31ee0:	mov	fp, sp
   31ee4:	ldr	r3, [r0, #184]	; 0xb8
   31ee8:	cmp	r3, #0
   31eec:	beq	31f20 <flatcc_builder_copy_buffer@@Base+0x44>
   31ef0:	add	r0, r0, #188	; 0xbc
   31ef4:	bl	32620 <flatcc_emitter_copy_buffer@@Base>
   31ef8:	cmp	r0, #0
   31efc:	popne	{fp, pc}
   31f00:	movw	r0, #25631	; 0x641f
   31f04:	movw	r1, #37994	; 0x946a
   31f08:	movw	r3, #41922	; 0xa3c2
   31f0c:	movw	r2, #1926	; 0x786
   31f10:	movt	r0, #4
   31f14:	movt	r1, #4
   31f18:	movt	r3, #4
   31f1c:	bl	14f40 <__assert_fail@plt>
   31f20:	mov	r0, #0
   31f24:	pop	{fp, pc}

00031f28 <flatcc_builder_finalize_buffer@@Base>:
   31f28:	push	{r4, r5, r6, sl, fp, lr}
   31f2c:	add	fp, sp, #16
   31f30:	mov	r5, r0
   31f34:	ldr	r0, [r0, #136]	; 0x88
   31f38:	cmp	r1, #0
   31f3c:	ldr	r2, [r5, #140]	; 0x8c
   31f40:	sub	r4, r2, r0
   31f44:	mov	r0, r4
   31f48:	strne	r4, [r1]
   31f4c:	bl	14e98 <malloc@plt>
   31f50:	cmp	r0, #0
   31f54:	beq	31fa4 <flatcc_builder_finalize_buffer@@Base+0x7c>
   31f58:	mov	r6, r0
   31f5c:	ldr	r0, [r5, #184]	; 0xb8
   31f60:	cmp	r0, #0
   31f64:	beq	31fc4 <flatcc_builder_finalize_buffer@@Base+0x9c>
   31f68:	add	r0, r5, #188	; 0xbc
   31f6c:	mov	r1, r6
   31f70:	mov	r2, r4
   31f74:	bl	32620 <flatcc_emitter_copy_buffer@@Base>
   31f78:	cmp	r0, #0
   31f7c:	movne	r0, r6
   31f80:	popne	{r4, r5, r6, sl, fp, pc}
   31f84:	movw	r0, #25631	; 0x641f
   31f88:	movw	r1, #37994	; 0x946a
   31f8c:	movw	r3, #41922	; 0xa3c2
   31f90:	movw	r2, #1926	; 0x786
   31f94:	movt	r0, #4
   31f98:	movt	r1, #4
   31f9c:	movt	r3, #4
   31fa0:	bl	14f40 <__assert_fail@plt>
   31fa4:	movw	r0, #42512	; 0xa610
   31fa8:	movw	r1, #37994	; 0x946a
   31fac:	movw	r3, #41991	; 0xa407
   31fb0:	movw	r2, #1944	; 0x798
   31fb4:	movt	r0, #4
   31fb8:	movt	r1, #4
   31fbc:	movt	r3, #4
   31fc0:	bl	14f40 <__assert_fail@plt>
   31fc4:	movw	r0, #42512	; 0xa610
   31fc8:	movw	r1, #37994	; 0x946a
   31fcc:	movw	r3, #41991	; 0xa407
   31fd0:	movw	r2, #1948	; 0x79c
   31fd4:	movt	r0, #4
   31fd8:	movt	r1, #4
   31fdc:	movt	r3, #4
   31fe0:	bl	14f40 <__assert_fail@plt>

00031fe4 <flatcc_builder_finalize_aligned_buffer@@Base>:
   31fe4:	push	{r4, r5, r6, r7, fp, lr}
   31fe8:	add	fp, sp, #16
   31fec:	sub	sp, sp, #8
   31ff0:	mov	r5, r0
   31ff4:	mov	r4, r1
   31ff8:	ldr	r0, [r0, #136]	; 0x88
   31ffc:	ldr	r1, [r5, #140]	; 0x8c
   32000:	cmp	r4, #0
   32004:	sub	r0, r1, r0
   32008:	mov	r1, #0
   3200c:	strne	r0, [r4]
   32010:	ldrh	r2, [r5, #128]	; 0x80
   32014:	str	r1, [sp, #4]
   32018:	add	r0, r0, r2
   3201c:	cmp	r2, #4
   32020:	mov	r1, r2
   32024:	rsb	r2, r2, #0
   32028:	sub	r0, r0, #1
   3202c:	movls	r1, #4
   32030:	and	r7, r0, r2
   32034:	add	r0, sp, #4
   32038:	mov	r2, r7
   3203c:	bl	14ee0 <posix_memalign@plt>
   32040:	ldr	r6, [sp, #4]
   32044:	cmp	r0, #0
   32048:	cmpne	r6, #0
   3204c:	bne	32088 <flatcc_builder_finalize_aligned_buffer@@Base+0xa4>
   32050:	cmp	r6, #0
   32054:	beq	32090 <flatcc_builder_finalize_aligned_buffer@@Base+0xac>
   32058:	ldr	r0, [r5, #184]	; 0xb8
   3205c:	cmp	r0, #0
   32060:	beq	32088 <flatcc_builder_finalize_aligned_buffer@@Base+0xa4>
   32064:	add	r0, r5, #188	; 0xbc
   32068:	mov	r1, r6
   3206c:	mov	r2, r7
   32070:	bl	32620 <flatcc_emitter_copy_buffer@@Base>
   32074:	cmp	r0, #0
   32078:	beq	320a8 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
   3207c:	mov	r0, r6
   32080:	sub	sp, fp, #16
   32084:	pop	{r4, r5, r6, r7, fp, pc}
   32088:	mov	r0, r6
   3208c:	bl	14e50 <free@plt>
   32090:	mov	r6, #0
   32094:	cmp	r4, #0
   32098:	strne	r6, [r4]
   3209c:	mov	r0, r6
   320a0:	sub	sp, fp, #16
   320a4:	pop	{r4, r5, r6, r7, fp, pc}
   320a8:	movw	r0, #25631	; 0x641f
   320ac:	movw	r1, #37994	; 0x946a
   320b0:	movw	r3, #41922	; 0xa3c2
   320b4:	movw	r2, #1926	; 0x786
   320b8:	movt	r0, #4
   320bc:	movt	r1, #4
   320c0:	movt	r3, #4
   320c4:	bl	14f40 <__assert_fail@plt>

000320c8 <flatcc_builder_aligned_alloc@@Base>:
   320c8:	push	{fp, lr}
   320cc:	mov	fp, sp
   320d0:	sub	sp, sp, #8
   320d4:	mov	r2, r1
   320d8:	mov	r1, r0
   320dc:	mov	r0, #0
   320e0:	cmp	r1, #4
   320e4:	str	r0, [sp, #4]
   320e8:	add	r0, sp, #4
   320ec:	movls	r1, #4
   320f0:	bl	14ee0 <posix_memalign@plt>
   320f4:	mov	r1, r0
   320f8:	ldr	r0, [sp, #4]
   320fc:	cmp	r1, #0
   32100:	cmpne	r0, #0
   32104:	bne	32110 <flatcc_builder_aligned_alloc@@Base+0x48>
   32108:	mov	sp, fp
   3210c:	pop	{fp, pc}
   32110:	bl	14e50 <free@plt>
   32114:	mov	r0, #0
   32118:	str	r0, [sp, #4]
   3211c:	mov	sp, fp
   32120:	pop	{fp, pc}

00032124 <flatcc_builder_aligned_free@@Base>:
   32124:	b	14e50 <free@plt>

00032128 <flatcc_builder_get_emit_context@@Base>:
   32128:	ldr	r0, [r0, #36]	; 0x24
   3212c:	bx	lr

00032130 <flatcc_emitter_recycle_page@@Base>:
   32130:	ldr	r3, [r0]
   32134:	mov	r2, r0
   32138:	mvn	r0, #0
   3213c:	cmp	r3, r1
   32140:	beq	32180 <flatcc_emitter_recycle_page@@Base+0x50>
   32144:	ldr	r2, [r2, #4]
   32148:	cmp	r2, r1
   3214c:	bxeq	lr
   32150:	ldr	r0, [r1, #2944]	; 0xb80
   32154:	ldr	r2, [r1, #2948]	; 0xb84
   32158:	str	r2, [r0, #2948]	; 0xb84
   3215c:	ldr	r2, [r1, #2948]	; 0xb84
   32160:	str	r0, [r2, #2944]	; 0xb80
   32164:	ldr	r0, [r3, #2948]	; 0xb84
   32168:	str	r3, [r1, #2944]	; 0xb80
   3216c:	str	r0, [r1, #2948]	; 0xb84
   32170:	str	r1, [r0, #2944]	; 0xb80
   32174:	ldr	r0, [r1, #2944]	; 0xb80
   32178:	str	r1, [r0, #2948]	; 0xb84
   3217c:	mov	r0, #0
   32180:	bx	lr

00032184 <flatcc_emitter_reset@@Base>:
   32184:	push	{r4, sl, fp, lr}
   32188:	add	fp, sp, #8
   3218c:	ldr	r1, [r0]
   32190:	cmp	r1, #0
   32194:	beq	3224c <flatcc_emitter_reset@@Base+0xc8>
   32198:	mov	r4, r0
   3219c:	add	r2, r1, #1472	; 0x5c0
   321a0:	mov	r0, #1472	; 0x5c0
   321a4:	mov	r3, #0
   321a8:	stmib	r4, {r1, r2}
   321ac:	str	r0, [r4, #12]
   321b0:	str	r2, [r4, #16]
   321b4:	str	r0, [r4, #20]
   321b8:	movw	r0, #64064	; 0xfa40
   321bc:	movt	r0, #65535	; 0xffff
   321c0:	str	r0, [r1, #2952]	; 0xb88
   321c4:	ldr	r2, [r4, #32]
   321c8:	ldr	r0, [r4, #24]
   321cc:	cmp	r2, #0
   321d0:	moveq	r2, r0
   321d4:	streq	r0, [r4, #32]
   321d8:	str	r3, [r4, #24]
   321dc:	add	r2, r2, r2, lsl #1
   321e0:	lsr	r2, r2, #2
   321e4:	add	r0, r2, r0, lsr #2
   321e8:	str	r0, [r4, #32]
   321ec:	ldr	r2, [r4, #28]
   321f0:	cmp	r2, r0, lsl #1
   321f4:	bls	3224c <flatcc_emitter_reset@@Base+0xc8>
   321f8:	mov	r2, r1
   321fc:	ldr	r0, [r2, #2944]!	; 0xb80
   32200:	cmp	r0, r1
   32204:	popeq	{r4, sl, fp, pc}
   32208:	ldr	r3, [r0, #2944]	; 0xb80
   3220c:	str	r3, [r2]
   32210:	ldr	r2, [r0, #2944]	; 0xb80
   32214:	str	r1, [r2, #2948]	; 0xb84
   32218:	bl	14e50 <free@plt>
   3221c:	ldr	r0, [r4, #28]
   32220:	ldr	r1, [r4, #32]
   32224:	sub	r0, r0, #2944	; 0xb80
   32228:	cmp	r0, r1, lsl #1
   3222c:	str	r0, [r4, #28]
   32230:	bls	3224c <flatcc_emitter_reset@@Base+0xc8>
   32234:	ldr	r1, [r4, #4]
   32238:	ldr	r3, [r4]
   3223c:	mov	r2, r1
   32240:	ldr	r0, [r2, #2944]!	; 0xb80
   32244:	cmp	r0, r3
   32248:	bne	32208 <flatcc_emitter_reset@@Base+0x84>
   3224c:	pop	{r4, sl, fp, pc}

00032250 <flatcc_emitter_clear@@Base>:
   32250:	push	{r4, r5, r6, sl, fp, lr}
   32254:	add	fp, sp, #16
   32258:	ldr	r5, [r0]
   3225c:	cmp	r5, #0
   32260:	beq	322b8 <flatcc_emitter_clear@@Base+0x68>
   32264:	mov	r4, r0
   32268:	ldr	r0, [r5, #2948]	; 0xb84
   3226c:	mov	r6, #0
   32270:	str	r6, [r0, #2944]	; 0xb80
   32274:	ldr	r0, [r5, #2944]	; 0xb80
   32278:	cmp	r0, #0
   3227c:	beq	32298 <flatcc_emitter_clear@@Base+0x48>
   32280:	mov	r5, r0
   32284:	ldr	r0, [r0, #2948]	; 0xb84
   32288:	bl	14e50 <free@plt>
   3228c:	ldr	r0, [r5, #2944]	; 0xb80
   32290:	cmp	r0, #0
   32294:	bne	32280 <flatcc_emitter_clear@@Base+0x30>
   32298:	mov	r0, r5
   3229c:	bl	14e50 <free@plt>
   322a0:	vmov.i32	q8, #0	; 0x00000000
   322a4:	add	r0, r4, #16
   322a8:	vst1.32	{d16-d17}, [r0]
   322ac:	mov	r0, #32
   322b0:	vst1.32	{d16-d17}, [r4], r0
   322b4:	str	r6, [r4]
   322b8:	pop	{r4, r5, r6, sl, fp, pc}

000322bc <flatcc_emitter@@Base>:
   322bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   322c0:	add	fp, sp, #28
   322c4:	sub	sp, sp, #4
   322c8:	mov	r6, r0
   322cc:	mov	r7, r1
   322d0:	ldr	r0, [r0, #24]
   322d4:	ldr	r1, [fp, #8]
   322d8:	mov	r4, r2
   322dc:	cmn	r3, #1
   322e0:	mov	r9, r6
   322e4:	add	r0, r0, r1
   322e8:	str	r0, [r6, #24]
   322ec:	ble	32454 <flatcc_emitter@@Base+0x198>
   322f0:	ldr	r0, [r9, #20]!
   322f4:	cmp	r0, r1
   322f8:	bcs	325b4 <flatcc_emitter@@Base+0x2f8>
   322fc:	mov	r8, #0
   32300:	cmp	r4, #0
   32304:	beq	32614 <flatcc_emitter@@Base+0x358>
   32308:	movw	sl, #64064	; 0xfa40
   3230c:	movt	sl, #65535	; 0xffff
   32310:	ldr	r8, [r7, #4]
   32314:	cmp	r8, #0
   32318:	beq	32438 <flatcc_emitter@@Base+0x17c>
   3231c:	ldr	r9, [r7]
   32320:	cmp	r8, r0
   32324:	mov	r5, r8
   32328:	bls	32334 <flatcc_emitter@@Base+0x78>
   3232c:	b	32374 <flatcc_emitter@@Base+0xb8>
   32330:	mov	r5, r8
   32334:	ldr	r0, [r6, #16]
   32338:	mov	r1, r9
   3233c:	mov	r2, r5
   32340:	bl	14e5c <memcpy@plt>
   32344:	ldr	r0, [r6, #16]
   32348:	ldr	r1, [r6, #20]
   3234c:	add	r9, r9, r5
   32350:	subs	r8, r8, r5
   32354:	add	r2, r0, r5
   32358:	sub	r0, r1, r5
   3235c:	str	r2, [r6, #16]
   32360:	str	r0, [r6, #20]
   32364:	beq	32438 <flatcc_emitter@@Base+0x17c>
   32368:	cmp	r8, r0
   3236c:	mov	r5, r8
   32370:	bls	32334 <flatcc_emitter@@Base+0x78>
   32374:	mov	r5, r0
   32378:	cmp	r5, #0
   3237c:	beq	323c8 <flatcc_emitter@@Base+0x10c>
   32380:	b	32334 <flatcc_emitter@@Base+0x78>
   32384:	ldr	r1, [r6]
   32388:	str	r1, [r0, #2944]	; 0xb80
   3238c:	str	r5, [r0, #2948]	; 0xb84
   32390:	str	r0, [r1, #2948]	; 0xb84
   32394:	str	r0, [r5, #2944]	; 0xb80
   32398:	mov	r5, #2944	; 0xb80
   3239c:	str	r0, [r6, #4]
   323a0:	str	r0, [r6, #16]
   323a4:	str	r5, [r6, #20]
   323a8:	ldr	r1, [r0, #2948]	; 0xb84
   323ac:	ldr	r1, [r1, #2952]	; 0xb88
   323b0:	add	r1, r1, #2944	; 0xb80
   323b4:	str	r1, [r0, #2952]	; 0xb88
   323b8:	cmp	r8, r5
   323bc:	bls	32330 <flatcc_emitter@@Base+0x74>
   323c0:	cmp	r5, #0
   323c4:	bne	32334 <flatcc_emitter@@Base+0x78>
   323c8:	ldr	r5, [r6, #4]
   323cc:	cmp	r5, #0
   323d0:	beq	323e4 <flatcc_emitter@@Base+0x128>
   323d4:	ldr	r0, [r5, #2944]	; 0xb80
   323d8:	ldr	r1, [r6]
   323dc:	cmp	r0, r1
   323e0:	bne	32398 <flatcc_emitter@@Base+0xdc>
   323e4:	movw	r0, #2956	; 0xb8c
   323e8:	bl	14e98 <malloc@plt>
   323ec:	cmp	r0, #0
   323f0:	beq	325c4 <flatcc_emitter@@Base+0x308>
   323f4:	ldr	r1, [r6, #28]
   323f8:	cmp	r5, #0
   323fc:	add	r1, r1, #2944	; 0xb80
   32400:	str	r1, [r6, #28]
   32404:	bne	32384 <flatcc_emitter@@Base+0xc8>
   32408:	add	r1, r0, #1472	; 0x5c0
   3240c:	mov	r5, #1472	; 0x5c0
   32410:	str	r0, [r6]
   32414:	stmib	r6, {r0, r1, r5}
   32418:	str	r1, [r6, #16]
   3241c:	str	r5, [r6, #20]
   32420:	str	r0, [r0, #2944]	; 0xb80
   32424:	str	r0, [r0, #2948]	; 0xb84
   32428:	str	sl, [r0, #2952]	; 0xb88
   3242c:	cmp	r8, r5
   32430:	bhi	323c0 <flatcc_emitter@@Base+0x104>
   32434:	b	32330 <flatcc_emitter@@Base+0x74>
   32438:	subs	r4, r4, #1
   3243c:	add	r7, r7, #8
   32440:	bne	32310 <flatcc_emitter@@Base+0x54>
   32444:	mov	r8, #0
   32448:	mov	r0, r8
   3244c:	sub	sp, fp, #28
   32450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32454:	ldr	r0, [r9, #12]!
   32458:	cmp	r0, r1
   3245c:	bcs	325d4 <flatcc_emitter@@Base+0x318>
   32460:	mov	r8, #0
   32464:	cmp	r4, #0
   32468:	beq	32614 <flatcc_emitter@@Base+0x358>
   3246c:	add	r0, r7, r4, lsl #3
   32470:	ldr	sl, [r0, #-4]
   32474:	sub	r1, r0, #8
   32478:	str	r1, [sp]
   3247c:	cmp	sl, #0
   32480:	beq	325a4 <flatcc_emitter@@Base+0x2e8>
   32484:	ldr	r0, [sp]
   32488:	ldr	r0, [r0]
   3248c:	add	r7, r0, sl
   32490:	ldr	r1, [r9]
   32494:	cmp	sl, r1
   32498:	bhi	324d8 <flatcc_emitter@@Base+0x21c>
   3249c:	b	32574 <flatcc_emitter@@Base+0x2b8>
   324a0:	ldr	r1, [r5, #2952]	; 0xb88
   324a4:	sub	r1, r1, #2944	; 0xb80
   324a8:	str	r1, [r0, #2952]	; 0xb88
   324ac:	mov	r1, #2944	; 0xb80
   324b0:	add	r2, r0, #2944	; 0xb80
   324b4:	str	r0, [r6]
   324b8:	str	r2, [r6, #8]
   324bc:	str	r1, [r6, #12]
   324c0:	ldr	r2, [r0, #2944]	; 0xb80
   324c4:	ldr	r2, [r2, #2952]	; 0xb88
   324c8:	sub	r2, r2, #2944	; 0xb80
   324cc:	str	r2, [r0, #2952]	; 0xb88
   324d0:	cmp	sl, r1
   324d4:	bls	32574 <flatcc_emitter@@Base+0x2b8>
   324d8:	cmp	r1, #0
   324dc:	mov	r5, r1
   324e0:	bne	32578 <flatcc_emitter@@Base+0x2bc>
   324e4:	ldr	r5, [r6]
   324e8:	cmp	r5, #0
   324ec:	beq	32500 <flatcc_emitter@@Base+0x244>
   324f0:	ldr	r0, [r5, #2948]	; 0xb84
   324f4:	ldr	r1, [r6, #4]
   324f8:	cmp	r0, r1
   324fc:	bne	324a0 <flatcc_emitter@@Base+0x1e4>
   32500:	movw	r0, #2956	; 0xb8c
   32504:	bl	14e98 <malloc@plt>
   32508:	cmp	r0, #0
   3250c:	beq	325c4 <flatcc_emitter@@Base+0x308>
   32510:	ldr	r1, [r6, #28]
   32514:	cmp	r5, #0
   32518:	add	r1, r1, #2944	; 0xb80
   3251c:	str	r1, [r6, #28]
   32520:	beq	3253c <flatcc_emitter@@Base+0x280>
   32524:	ldr	r1, [r6, #4]
   32528:	str	r5, [r0, #2944]	; 0xb80
   3252c:	str	r1, [r0, #2948]	; 0xb84
   32530:	str	r0, [r5, #2948]	; 0xb84
   32534:	str	r0, [r1, #2944]	; 0xb80
   32538:	b	324ac <flatcc_emitter@@Base+0x1f0>
   3253c:	add	r2, r0, #1472	; 0x5c0
   32540:	mov	r1, #1472	; 0x5c0
   32544:	str	r0, [r6]
   32548:	stmib	r6, {r0, r2}
   3254c:	str	r1, [r6, #12]
   32550:	str	r2, [r6, #16]
   32554:	movw	r2, #64064	; 0xfa40
   32558:	str	r1, [r6, #20]
   3255c:	str	r0, [r0, #2944]	; 0xb80
   32560:	str	r0, [r0, #2948]	; 0xb84
   32564:	movt	r2, #65535	; 0xffff
   32568:	str	r2, [r0, #2952]	; 0xb88
   3256c:	cmp	sl, r1
   32570:	bhi	324d8 <flatcc_emitter@@Base+0x21c>
   32574:	mov	r5, sl
   32578:	sub	r0, r1, r5
   3257c:	sub	r7, r7, r5
   32580:	mov	r2, r5
   32584:	str	r0, [r6, #12]
   32588:	mov	r1, r7
   3258c:	ldr	r0, [r6, #8]
   32590:	sub	r0, r0, r5
   32594:	str	r0, [r6, #8]
   32598:	bl	14e5c <memcpy@plt>
   3259c:	subs	sl, sl, r5
   325a0:	bne	32490 <flatcc_emitter@@Base+0x1d4>
   325a4:	ldr	r0, [sp]
   325a8:	subs	r4, r4, #1
   325ac:	bne	32470 <flatcc_emitter@@Base+0x1b4>
   325b0:	b	32614 <flatcc_emitter@@Base+0x358>
   325b4:	ldr	r5, [r6, #16]
   325b8:	add	r2, r5, r1
   325bc:	str	r2, [r6, #16]
   325c0:	b	325e0 <flatcc_emitter@@Base+0x324>
   325c4:	mvn	r8, #0
   325c8:	mov	r0, r8
   325cc:	sub	sp, fp, #28
   325d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   325d4:	ldr	r2, [r6, #8]
   325d8:	sub	r5, r2, r1
   325dc:	str	r5, [r6, #8]
   325e0:	sub	r0, r0, r1
   325e4:	mov	r8, #0
   325e8:	cmp	r4, #0
   325ec:	str	r0, [r9]
   325f0:	beq	32614 <flatcc_emitter@@Base+0x358>
   325f4:	ldm	r7, {r1, r2}
   325f8:	mov	r0, r5
   325fc:	bl	14e5c <memcpy@plt>
   32600:	ldr	r0, [r7, #4]
   32604:	add	r7, r7, #8
   32608:	subs	r4, r4, #1
   3260c:	add	r5, r5, r0
   32610:	bne	325f4 <flatcc_emitter@@Base+0x338>
   32614:	mov	r0, r8
   32618:	sub	sp, fp, #28
   3261c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00032620 <flatcc_emitter_copy_buffer@@Base>:
   32620:	push	{r4, r5, r6, sl, fp, lr}
   32624:	add	fp, sp, #16
   32628:	mov	r3, r2
   3262c:	ldr	r2, [r0, #24]
   32630:	mov	r5, #0
   32634:	cmp	r2, r3
   32638:	bhi	326c0 <flatcc_emitter_copy_buffer@@Base+0xa0>
   3263c:	mov	r4, r0
   32640:	ldr	r0, [r0]
   32644:	cmp	r0, #0
   32648:	beq	326c0 <flatcc_emitter_copy_buffer@@Base+0xa0>
   3264c:	mov	r6, r1
   32650:	ldr	r1, [r4, #4]
   32654:	cmp	r0, r1
   32658:	beq	326c8 <flatcc_emitter_copy_buffer@@Base+0xa8>
   3265c:	ldr	r0, [r4, #12]
   32660:	ldr	r1, [r4, #8]
   32664:	rsb	r5, r0, #2944	; 0xb80
   32668:	mov	r0, r6
   3266c:	mov	r2, r5
   32670:	bl	14e5c <memcpy@plt>
   32674:	ldm	r4, {r0, r1}
   32678:	add	r5, r6, r5
   3267c:	ldr	r6, [r0, #2944]	; 0xb80
   32680:	cmp	r6, r1
   32684:	beq	326ac <flatcc_emitter_copy_buffer@@Base+0x8c>
   32688:	mov	r0, r5
   3268c:	mov	r1, r6
   32690:	mov	r2, #2944	; 0xb80
   32694:	bl	14e5c <memcpy@plt>
   32698:	ldr	r6, [r6, #2944]	; 0xb80
   3269c:	ldr	r0, [r4, #4]
   326a0:	add	r5, r5, #2944	; 0xb80
   326a4:	cmp	r6, r0
   326a8:	bne	32688 <flatcc_emitter_copy_buffer@@Base+0x68>
   326ac:	ldr	r0, [r4, #20]
   326b0:	mov	r1, r6
   326b4:	rsb	r2, r0, #2944	; 0xb80
   326b8:	mov	r0, r5
   326bc:	bl	14e5c <memcpy@plt>
   326c0:	mov	r0, r5
   326c4:	pop	{r4, r5, r6, sl, fp, pc}
   326c8:	ldr	r1, [r4, #8]
   326cc:	mov	r0, r6
   326d0:	bl	14e5c <memcpy@plt>
   326d4:	mov	r0, r6
   326d8:	pop	{r4, r5, r6, sl, fp, pc}

000326dc <flatcc_verify_error_string@@Base>:
   326dc:	cmp	r0, #36	; 0x24
   326e0:	movwhi	r0, #43726	; 0xaace
   326e4:	movthi	r0, #4
   326e8:	bxhi	lr
   326ec:	movw	r1, #43736	; 0xaad8
   326f0:	movt	r1, #4
   326f4:	ldr	r0, [r1, r0, lsl #2]
   326f8:	bx	lr

000326fc <flatcc_verify_field@@Base>:
   326fc:	push	{r4, sl, fp, lr}
   32700:	add	fp, sp, #8
   32704:	mov	ip, #4
   32708:	ldrh	r4, [r0, #22]
   3270c:	mov	lr, #0
   32710:	add	r1, ip, r1, lsl #1
   32714:	uxth	ip, r1
   32718:	cmp	ip, r4
   3271c:	bcs	32778 <flatcc_verify_field@@Base+0x7c>
   32720:	ldr	r4, [r0, #12]
   32724:	uxtah	r1, r4, r1
   32728:	ldrh	ip, [r1]
   3272c:	cmp	ip, #0
   32730:	beq	32778 <flatcc_verify_field@@Base+0x7c>
   32734:	add	r1, ip, r2
   32738:	ldrh	r2, [r0, #20]
   3273c:	mov	lr, #13
   32740:	cmp	r1, r2
   32744:	bhi	32778 <flatcc_verify_field@@Base+0x7c>
   32748:	ldr	r1, [r0]
   3274c:	mov	lr, #0
   32750:	add	r2, r1, ip
   32754:	ldr	r1, [r0, #16]
   32758:	add	r4, r2, r1
   3275c:	sub	r1, r3, #1
   32760:	tst	r4, r1
   32764:	beq	32778 <flatcc_verify_field@@Base+0x7c>
   32768:	ldr	r0, [r0, #16]
   3276c:	add	r0, r2, r0
   32770:	ands	lr, r0, r1
   32774:	movwne	lr, #12
   32778:	mov	r0, lr
   3277c:	pop	{r4, sl, fp, pc}

00032780 <flatcc_verify_string_field@@Base>:
   32780:	push	{fp, lr}
   32784:	mov	fp, sp
   32788:	mov	lr, r0
   3278c:	mov	r0, #4
   32790:	add	r0, r0, r1, lsl #1
   32794:	ldrh	r3, [lr, #22]
   32798:	uxth	r1, r0
   3279c:	cmp	r1, r3
   327a0:	bcs	327e4 <flatcc_verify_string_field@@Base+0x64>
   327a4:	ldr	r1, [lr, #12]
   327a8:	uxtah	r0, r1, r0
   327ac:	ldrh	r1, [r0]
   327b0:	cmp	r1, #0
   327b4:	beq	327e4 <flatcc_verify_string_field@@Base+0x64>
   327b8:	ldrh	r2, [lr, #20]
   327bc:	add	r3, r1, #4
   327c0:	mov	r0, #13
   327c4:	cmp	r3, r2
   327c8:	bhi	327e0 <flatcc_verify_string_field@@Base+0x60>
   327cc:	ldr	r0, [lr, #16]
   327d0:	add	r2, r0, r1
   327d4:	mov	r0, #12
   327d8:	tst	r2, #3
   327dc:	beq	327f4 <flatcc_verify_string_field@@Base+0x74>
   327e0:	pop	{fp, pc}
   327e4:	cmp	r2, #0
   327e8:	movwne	r2, #1
   327ec:	lsl	r0, r2, #2
   327f0:	pop	{fp, pc}
   327f4:	cmp	r2, #0
   327f8:	beq	32858 <flatcc_verify_string_field@@Base+0xd8>
   327fc:	ldr	ip, [lr]
   32800:	ldr	r0, [ip, r2]
   32804:	add	r1, r0, r2
   32808:	mov	r0, #17
   3280c:	tst	r1, #3
   32810:	bne	327e0 <flatcc_verify_string_field@@Base+0x60>
   32814:	cmp	r1, r2
   32818:	bls	327e0 <flatcc_verify_string_field@@Base+0x60>
   3281c:	ldr	r3, [lr, #4]
   32820:	add	r2, r1, #4
   32824:	cmp	r3, r2
   32828:	bcc	327e0 <flatcc_verify_string_field@@Base+0x60>
   3282c:	ldr	r1, [ip, r1]
   32830:	sub	lr, r3, r2
   32834:	mov	r0, #8
   32838:	add	r3, r1, #1
   3283c:	cmp	lr, r3
   32840:	popcc	{fp, pc}
   32844:	add	r0, ip, r2
   32848:	ldrb	r0, [r0, r1]
   3284c:	cmp	r0, #0
   32850:	movwne	r0, #7
   32854:	pop	{fp, pc}
   32858:	mov	r0, #0
   3285c:	pop	{fp, pc}

00032860 <flatcc_verify_vector_field@@Base>:
   32860:	push	{r4, sl, fp, lr}
   32864:	add	fp, sp, #8
   32868:	mov	ip, r0
   3286c:	mov	r0, #4
   32870:	add	r0, r0, r1, lsl #1
   32874:	ldrh	r4, [ip, #22]
   32878:	uxth	r1, r0
   3287c:	cmp	r1, r4
   32880:	bcs	328c4 <flatcc_verify_vector_field@@Base+0x64>
   32884:	ldr	r1, [ip, #12]
   32888:	uxtah	r0, r1, r0
   3288c:	ldrh	r1, [r0]
   32890:	cmp	r1, #0
   32894:	beq	328c4 <flatcc_verify_vector_field@@Base+0x64>
   32898:	ldrh	r2, [ip, #20]
   3289c:	add	r4, r1, #4
   328a0:	mov	r0, #13
   328a4:	cmp	r4, r2
   328a8:	bhi	328c0 <flatcc_verify_vector_field@@Base+0x60>
   328ac:	ldr	r0, [ip, #16]
   328b0:	add	r2, r0, r1
   328b4:	mov	r0, #12
   328b8:	tst	r2, #3
   328bc:	beq	328d4 <flatcc_verify_vector_field@@Base+0x74>
   328c0:	pop	{r4, sl, fp, pc}
   328c4:	cmp	r2, #0
   328c8:	movwne	r2, #1
   328cc:	lsl	r0, r2, #2
   328d0:	pop	{r4, sl, fp, pc}
   328d4:	cmp	r2, #0
   328d8:	beq	32950 <flatcc_verify_vector_field@@Base+0xf0>
   328dc:	ldr	lr, [ip]
   328e0:	ldr	r4, [fp, #8]
   328e4:	ldr	r0, [lr, r2]
   328e8:	cmp	r4, #4
   328ec:	movls	r4, #4
   328f0:	add	r1, r0, r2
   328f4:	mov	r0, #16
   328f8:	cmp	r1, r2
   328fc:	bls	328c0 <flatcc_verify_vector_field@@Base+0x60>
   32900:	ldr	ip, [ip, #4]
   32904:	add	r2, r1, #4
   32908:	cmp	r2, ip
   3290c:	bhi	328c0 <flatcc_verify_vector_field@@Base+0x60>
   32910:	sub	r4, r4, #1
   32914:	orr	r4, r4, #3
   32918:	tst	r2, r4
   3291c:	bne	328c0 <flatcc_verify_vector_field@@Base+0x60>
   32920:	ldr	r4, [fp, #12]
   32924:	ldr	r2, [lr, r1]
   32928:	mov	r0, #25
   3292c:	cmp	r2, r4
   32930:	pophi	{r4, sl, fp, pc}
   32934:	mul	r2, r2, r3
   32938:	sub	r0, ip, r1
   3293c:	sub	r1, r0, #4
   32940:	mov	r0, #0
   32944:	cmp	r1, r2
   32948:	movwcc	r0, #26
   3294c:	pop	{r4, sl, fp, pc}
   32950:	mov	r0, #0
   32954:	pop	{r4, sl, fp, pc}

00032958 <flatcc_verify_string_vector_field@@Base>:
   32958:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3295c:	add	fp, sp, #24
   32960:	mov	r3, r0
   32964:	mov	r0, #4
   32968:	add	r0, r0, r1, lsl #1
   3296c:	ldrh	r7, [r3, #22]
   32970:	uxth	r1, r0
   32974:	cmp	r1, r7
   32978:	bcs	329bc <flatcc_verify_string_vector_field@@Base+0x64>
   3297c:	ldr	r1, [r3, #12]
   32980:	uxtah	r0, r1, r0
   32984:	ldrh	r1, [r0]
   32988:	cmp	r1, #0
   3298c:	beq	329bc <flatcc_verify_string_vector_field@@Base+0x64>
   32990:	ldrh	r2, [r3, #20]
   32994:	add	r7, r1, #4
   32998:	mov	r0, #13
   3299c:	cmp	r7, r2
   329a0:	bhi	329b8 <flatcc_verify_string_vector_field@@Base+0x60>
   329a4:	ldr	r4, [r3, #16]
   329a8:	mov	r0, #12
   329ac:	add	r6, r4, r1
   329b0:	tst	r6, #3
   329b4:	beq	329cc <flatcc_verify_string_vector_field@@Base+0x74>
   329b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   329bc:	cmp	r2, #0
   329c0:	movwne	r2, #1
   329c4:	lsl	r0, r2, #2
   329c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   329cc:	cmp	r6, #0
   329d0:	beq	32ac8 <flatcc_verify_string_vector_field@@Base+0x170>
   329d4:	ldr	r5, [r3]
   329d8:	mov	r0, #16
   329dc:	ldr	r7, [r5, r6]
   329e0:	add	r2, r7, r6
   329e4:	cmp	r2, r6
   329e8:	bls	329b8 <flatcc_verify_string_vector_field@@Base+0x60>
   329ec:	ldr	ip, [r3, #4]
   329f0:	add	r3, r2, #4
   329f4:	cmp	r3, ip
   329f8:	bhi	329b8 <flatcc_verify_string_vector_field@@Base+0x60>
   329fc:	ands	r3, r3, #3
   32a00:	bne	329b8 <flatcc_verify_string_vector_field@@Base+0x60>
   32a04:	ldr	lr, [r5, r2]
   32a08:	mov	r0, #25
   32a0c:	cmn	lr, #-1073741823	; 0xc0000001
   32a10:	bhi	329b8 <flatcc_verify_string_vector_field@@Base+0x60>
   32a14:	sub	r0, ip, r2
   32a18:	sub	r2, r0, #4
   32a1c:	mov	r0, #26
   32a20:	cmp	r2, lr, lsl #2
   32a24:	bcc	329b8 <flatcc_verify_string_vector_field@@Base+0x60>
   32a28:	cmp	lr, #0
   32a2c:	beq	32ac8 <flatcc_verify_string_vector_field@@Base+0x170>
   32a30:	sub	r0, ip, r7
   32a34:	add	r8, r7, r4
   32a38:	sub	r0, r0, r4
   32a3c:	add	r3, r5, r8
   32a40:	sub	r0, r0, r1
   32a44:	sub	r4, r0, #8
   32a48:	add	r0, r3, r1
   32a4c:	add	r7, r1, r8
   32a50:	ldr	r5, [r0, #4]
   32a54:	mov	r0, #17
   32a58:	add	r6, r7, r5
   32a5c:	add	r2, r6, #4
   32a60:	tst	r2, #3
   32a64:	bne	329b8 <flatcc_verify_string_vector_field@@Base+0x60>
   32a68:	add	r7, r7, #4
   32a6c:	cmp	r2, r7
   32a70:	bls	329b8 <flatcc_verify_string_vector_field@@Base+0x60>
   32a74:	add	r2, r6, #8
   32a78:	cmp	ip, r2
   32a7c:	bcc	329b8 <flatcc_verify_string_vector_field@@Base+0x60>
   32a80:	add	r0, r1, r5
   32a84:	sub	r2, r4, r5
   32a88:	add	r0, r3, r0
   32a8c:	ldr	r0, [r0, #4]
   32a90:	add	r6, r0, #1
   32a94:	cmp	r2, r6
   32a98:	bcc	32ad0 <flatcc_verify_string_vector_field@@Base+0x178>
   32a9c:	add	r0, r5, r0
   32aa0:	add	r0, r1, r0
   32aa4:	add	r0, r3, r0
   32aa8:	ldrb	r0, [r0, #8]
   32aac:	cmp	r0, #0
   32ab0:	bne	32ad8 <flatcc_verify_string_vector_field@@Base+0x180>
   32ab4:	subs	lr, lr, #1
   32ab8:	sub	r4, r4, #4
   32abc:	add	r8, r8, #4
   32ac0:	add	r3, r3, #4
   32ac4:	bne	32a48 <flatcc_verify_string_vector_field@@Base+0xf0>
   32ac8:	mov	r0, #0
   32acc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32ad0:	mov	r0, #8
   32ad4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32ad8:	mov	r0, #7
   32adc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00032ae0 <flatcc_verify_table_field@@Base>:
   32ae0:	push	{r4, r5, r6, sl, fp, lr}
   32ae4:	add	fp, sp, #16
   32ae8:	sub	sp, sp, #24
   32aec:	mov	ip, r0
   32af0:	mov	r0, #4
   32af4:	add	r0, r0, r1, lsl #1
   32af8:	ldrh	r6, [ip, #22]
   32afc:	uxth	r1, r0
   32b00:	cmp	r1, r6
   32b04:	bcs	32b4c <flatcc_verify_table_field@@Base+0x6c>
   32b08:	ldr	r1, [ip, #12]
   32b0c:	uxtah	r0, r1, r0
   32b10:	ldrh	r1, [r0]
   32b14:	cmp	r1, #0
   32b18:	beq	32b4c <flatcc_verify_table_field@@Base+0x6c>
   32b1c:	ldrh	r2, [ip, #20]
   32b20:	add	r6, r1, #4
   32b24:	mov	r0, #13
   32b28:	cmp	r6, r2
   32b2c:	bhi	32b44 <flatcc_verify_table_field@@Base+0x64>
   32b30:	ldr	r0, [ip, #16]
   32b34:	add	r4, r0, r1
   32b38:	mov	r0, #12
   32b3c:	tst	r4, #3
   32b40:	beq	32b60 <flatcc_verify_table_field@@Base+0x80>
   32b44:	sub	sp, fp, #16
   32b48:	pop	{r4, r5, r6, sl, fp, pc}
   32b4c:	cmp	r2, #0
   32b50:	movwne	r2, #1
   32b54:	lsl	r0, r2, #2
   32b58:	sub	sp, fp, #16
   32b5c:	pop	{r4, r5, r6, sl, fp, pc}
   32b60:	cmp	r4, #0
   32b64:	beq	32c30 <flatcc_verify_table_field@@Base+0x150>
   32b68:	ldm	ip, {r1, lr}
   32b6c:	ldr	r2, [ip, #8]
   32b70:	ldr	r0, [r1, r4]
   32b74:	subs	r2, r2, #1
   32b78:	str	r2, [sp, #8]
   32b7c:	beq	32c3c <flatcc_verify_table_field@@Base+0x15c>
   32b80:	add	r2, r0, r4
   32b84:	mov	r0, #15
   32b88:	tst	r2, #3
   32b8c:	bne	32b44 <flatcc_verify_table_field@@Base+0x64>
   32b90:	cmp	r2, r4
   32b94:	bls	32b44 <flatcc_verify_table_field@@Base+0x64>
   32b98:	add	r6, r2, #4
   32b9c:	cmp	r6, lr
   32ba0:	bhi	32b44 <flatcc_verify_table_field@@Base+0x64>
   32ba4:	str	r2, [sp, #16]
   32ba8:	ldr	r0, [r1, r2]
   32bac:	sub	r5, r2, r0
   32bb0:	mov	r0, #29
   32bb4:	tst	r5, #-2147483647	; 0x80000001
   32bb8:	bne	32b44 <flatcc_verify_table_field@@Base+0x64>
   32bbc:	add	r4, r5, #2
   32bc0:	mov	r0, #27
   32bc4:	cmp	r4, lr
   32bc8:	bhi	32b44 <flatcc_verify_table_field@@Base+0x64>
   32bcc:	mov	ip, r1
   32bd0:	mov	r0, #30
   32bd4:	ldrh	r6, [ip, r5]!
   32bd8:	tst	r6, #1
   32bdc:	strh	r6, [sp, #22]
   32be0:	bne	32b44 <flatcc_verify_table_field@@Base+0x64>
   32be4:	add	r5, r5, r6
   32be8:	cmp	r5, lr
   32bec:	bhi	32b44 <flatcc_verify_table_field@@Base+0x64>
   32bf0:	mov	r0, #28
   32bf4:	cmp	r6, #4
   32bf8:	bcc	32b44 <flatcc_verify_table_field@@Base+0x64>
   32bfc:	add	r0, r1, r4
   32c00:	sub	r2, lr, r2
   32c04:	ldrh	r4, [r0]
   32c08:	mov	r0, #20
   32c0c:	cmp	r2, r4
   32c10:	strh	r4, [sp, #20]
   32c14:	bcc	32b44 <flatcc_verify_table_field@@Base+0x64>
   32c18:	mov	r0, sp
   32c1c:	stm	sp, {r1, lr}
   32c20:	str	ip, [sp, #12]
   32c24:	blx	r3
   32c28:	sub	sp, fp, #16
   32c2c:	pop	{r4, r5, r6, sl, fp, pc}
   32c30:	mov	r0, #0
   32c34:	sub	sp, fp, #16
   32c38:	pop	{r4, r5, r6, sl, fp, pc}
   32c3c:	mov	r0, #3
   32c40:	sub	sp, fp, #16
   32c44:	pop	{r4, r5, r6, sl, fp, pc}

00032c48 <flatcc_verify_table_vector_field@@Base>:
   32c48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32c4c:	add	fp, sp, #28
   32c50:	sub	sp, sp, #28
   32c54:	mov	r4, r3
   32c58:	mov	r3, r0
   32c5c:	mov	r0, #4
   32c60:	add	r0, r0, r1, lsl #1
   32c64:	ldrh	r7, [r3, #22]
   32c68:	uxth	r1, r0
   32c6c:	cmp	r1, r7
   32c70:	bcs	32cb8 <flatcc_verify_table_vector_field@@Base+0x70>
   32c74:	ldr	r1, [r3, #12]
   32c78:	uxtah	r0, r1, r0
   32c7c:	ldrh	r1, [r0]
   32c80:	cmp	r1, #0
   32c84:	beq	32cb8 <flatcc_verify_table_vector_field@@Base+0x70>
   32c88:	ldrh	r2, [r3, #20]
   32c8c:	add	r7, r1, #4
   32c90:	mov	r0, #13
   32c94:	cmp	r7, r2
   32c98:	bhi	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32c9c:	ldr	r2, [r3, #16]
   32ca0:	mov	r0, #12
   32ca4:	add	r6, r2, r1
   32ca8:	tst	r6, #3
   32cac:	beq	32ccc <flatcc_verify_table_vector_field@@Base+0x84>
   32cb0:	sub	sp, fp, #28
   32cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32cb8:	cmp	r2, #0
   32cbc:	movwne	r2, #1
   32cc0:	lsl	r0, r2, #2
   32cc4:	sub	sp, fp, #28
   32cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32ccc:	cmp	r6, #0
   32cd0:	beq	32e2c <flatcc_verify_table_vector_field@@Base+0x1e4>
   32cd4:	ldr	r7, [r3, #8]
   32cd8:	cmp	r7, #1
   32cdc:	blt	32ef8 <flatcc_verify_table_vector_field@@Base+0x2b0>
   32ce0:	ldr	r8, [r3]
   32ce4:	mov	r0, #16
   32ce8:	ldr	ip, [r8, r6]
   32cec:	add	r5, ip, r6
   32cf0:	cmp	r5, r6
   32cf4:	bls	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32cf8:	ldr	r6, [r3, #4]
   32cfc:	add	r9, r5, #4
   32d00:	cmp	r9, r6
   32d04:	bhi	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32d08:	ands	r3, r9, #3
   32d0c:	bne	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32d10:	ldr	sl, [r8, r5]
   32d14:	mov	r0, #25
   32d18:	cmn	sl, #-1073741823	; 0xc0000001
   32d1c:	bhi	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32d20:	sub	r0, r6, r5
   32d24:	sub	r3, r0, #4
   32d28:	mov	r0, #26
   32d2c:	cmp	r3, sl, lsl #2
   32d30:	bcc	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32d34:	cmp	sl, #0
   32d38:	beq	32e2c <flatcc_verify_table_vector_field@@Base+0x1e4>
   32d3c:	subs	r0, r7, #2
   32d40:	str	r0, [sp]
   32d44:	beq	32ef0 <flatcc_verify_table_vector_field@@Base+0x2a8>
   32d48:	sub	r0, r6, ip
   32d4c:	sub	r0, r0, r2
   32d50:	sub	r0, r0, r1
   32d54:	sub	r7, r0, #4
   32d58:	ldr	r0, [r8, r9]
   32d5c:	ldr	r1, [sp]
   32d60:	add	lr, r9, r0
   32d64:	str	r1, [sp, #12]
   32d68:	add	ip, lr, #4
   32d6c:	tst	lr, #3
   32d70:	bne	32e38 <flatcc_verify_table_vector_field@@Base+0x1f0>
   32d74:	cmp	lr, r9
   32d78:	bls	32e38 <flatcc_verify_table_vector_field@@Base+0x1f0>
   32d7c:	cmp	ip, r6
   32d80:	bhi	32e38 <flatcc_verify_table_vector_field@@Base+0x1f0>
   32d84:	str	lr, [sp, #20]
   32d88:	add	r3, r8, r0
   32d8c:	ldr	r1, [r3, r9]
   32d90:	sub	r5, r0, r1
   32d94:	add	r3, r9, r5
   32d98:	tst	r3, #-2147483647	; 0x80000001
   32d9c:	bne	32e38 <flatcc_verify_table_vector_field@@Base+0x1f0>
   32da0:	add	r2, r3, #2
   32da4:	cmp	r2, r6
   32da8:	bhi	32e38 <flatcc_verify_table_vector_field@@Base+0x1f0>
   32dac:	add	r2, r8, r5
   32db0:	add	r2, r2, r9
   32db4:	ldrh	r5, [r2]
   32db8:	cmp	r5, #4
   32dbc:	strh	r5, [sp, #26]
   32dc0:	bcc	32e38 <flatcc_verify_table_vector_field@@Base+0x1f0>
   32dc4:	ands	r2, r5, #1
   32dc8:	bne	32e38 <flatcc_verify_table_vector_field@@Base+0x1f0>
   32dcc:	add	r2, r0, r5
   32dd0:	sub	r2, r2, r1
   32dd4:	add	r2, r9, r2
   32dd8:	cmp	r2, r6
   32ddc:	bhi	32e38 <flatcc_verify_table_vector_field@@Base+0x1f0>
   32de0:	add	r3, r8, r3
   32de4:	sub	r0, r7, r0
   32de8:	ldrh	r2, [r3, #2]
   32dec:	cmp	r0, r2
   32df0:	strh	r2, [sp, #24]
   32df4:	bcc	32e38 <flatcc_verify_table_vector_field@@Base+0x1f0>
   32df8:	add	r0, sp, #4
   32dfc:	str	r6, [sp, #8]
   32e00:	str	r8, [sp, #4]
   32e04:	mov	r5, r6
   32e08:	str	r3, [sp, #16]
   32e0c:	blx	r4
   32e10:	cmp	r0, #0
   32e14:	bne	32f04 <flatcc_verify_table_vector_field@@Base+0x2bc>
   32e18:	subs	sl, sl, #1
   32e1c:	sub	r7, r7, #4
   32e20:	add	r9, r9, #4
   32e24:	mov	r6, r5
   32e28:	bne	32d58 <flatcc_verify_table_vector_field@@Base+0x110>
   32e2c:	mov	r0, #0
   32e30:	sub	sp, fp, #28
   32e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32e38:	ldr	r0, [sp]
   32e3c:	str	r0, [sp, #12]
   32e40:	mov	r0, #15
   32e44:	tst	lr, #3
   32e48:	bne	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32e4c:	cmp	lr, r9
   32e50:	bls	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32e54:	cmp	ip, r6
   32e58:	bhi	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32e5c:	str	lr, [sp, #20]
   32e60:	ldr	r0, [r8, lr]
   32e64:	sub	r7, lr, r0
   32e68:	mov	r0, #29
   32e6c:	tst	r7, #-2147483647	; 0x80000001
   32e70:	bne	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32e74:	add	r3, r7, #2
   32e78:	mov	r0, #27
   32e7c:	cmp	r3, r6
   32e80:	bhi	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32e84:	mov	r2, r8
   32e88:	mov	r5, r6
   32e8c:	mov	r0, #30
   32e90:	ldrh	r6, [r2, r7]!
   32e94:	tst	r6, #1
   32e98:	strh	r6, [sp, #26]
   32e9c:	bne	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32ea0:	add	r7, r7, r6
   32ea4:	cmp	r7, r5
   32ea8:	bhi	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32eac:	mov	r0, #28
   32eb0:	cmp	r6, #4
   32eb4:	bcc	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32eb8:	add	r0, r8, r3
   32ebc:	sub	r1, r5, lr
   32ec0:	ldrh	r3, [r0]
   32ec4:	mov	r0, #20
   32ec8:	cmp	r1, r3
   32ecc:	strh	r3, [sp, #24]
   32ed0:	bcc	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>
   32ed4:	add	r0, sp, #4
   32ed8:	str	r5, [sp, #8]
   32edc:	str	r8, [sp, #4]
   32ee0:	str	r2, [sp, #16]
   32ee4:	blx	r4
   32ee8:	sub	sp, fp, #28
   32eec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32ef0:	mov	r0, #0
   32ef4:	str	r0, [sp, #12]
   32ef8:	mov	r0, #3
   32efc:	sub	sp, fp, #28
   32f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32f04:	ldr	r0, [r8, r9]
   32f08:	ldr	r1, [sp]
   32f0c:	mov	r6, r5
   32f10:	add	lr, r0, r9
   32f14:	str	r1, [sp, #12]
   32f18:	add	ip, lr, #4
   32f1c:	mov	r0, #15
   32f20:	tst	lr, #3
   32f24:	beq	32e4c <flatcc_verify_table_vector_field@@Base+0x204>
   32f28:	b	32cb0 <flatcc_verify_table_vector_field@@Base+0x68>

00032f2c <flatcc_verify_union_table@@Base>:
   32f2c:	push	{r4, r5, r6, sl, fp, lr}
   32f30:	add	fp, sp, #16
   32f34:	sub	sp, sp, #24
   32f38:	ldr	r5, [r0, #16]
   32f3c:	ldr	r2, [r0, #20]
   32f40:	ldr	ip, [r0]
   32f44:	ldr	r3, [r0, #4]
   32f48:	ldr	r0, [r0, #8]
   32f4c:	subs	r0, r0, #1
   32f50:	str	r0, [sp, #8]
   32f54:	beq	3300c <flatcc_verify_union_table@@Base+0xe0>
   32f58:	add	r2, r2, r5
   32f5c:	mov	r0, #15
   32f60:	tst	r2, #3
   32f64:	bne	33004 <flatcc_verify_union_table@@Base+0xd8>
   32f68:	cmp	r2, r5
   32f6c:	bls	33004 <flatcc_verify_union_table@@Base+0xd8>
   32f70:	add	r6, r2, #4
   32f74:	cmp	r6, r3
   32f78:	bhi	33004 <flatcc_verify_union_table@@Base+0xd8>
   32f7c:	str	r2, [sp, #16]
   32f80:	ldr	r0, [ip, r2]
   32f84:	sub	r5, r2, r0
   32f88:	mov	r0, #29
   32f8c:	tst	r5, #-2147483647	; 0x80000001
   32f90:	bne	33004 <flatcc_verify_union_table@@Base+0xd8>
   32f94:	add	r4, r5, #2
   32f98:	mov	r0, #27
   32f9c:	cmp	r4, r3
   32fa0:	bhi	33004 <flatcc_verify_union_table@@Base+0xd8>
   32fa4:	mov	lr, ip
   32fa8:	mov	r0, #30
   32fac:	ldrh	r6, [lr, r5]!
   32fb0:	tst	r6, #1
   32fb4:	strh	r6, [sp, #22]
   32fb8:	bne	33004 <flatcc_verify_union_table@@Base+0xd8>
   32fbc:	add	r5, r5, r6
   32fc0:	cmp	r5, r3
   32fc4:	bhi	33004 <flatcc_verify_union_table@@Base+0xd8>
   32fc8:	mov	r0, #28
   32fcc:	cmp	r6, #4
   32fd0:	bcc	33004 <flatcc_verify_union_table@@Base+0xd8>
   32fd4:	add	r0, ip, r4
   32fd8:	sub	r2, r3, r2
   32fdc:	ldrh	r4, [r0]
   32fe0:	mov	r0, #20
   32fe4:	cmp	r2, r4
   32fe8:	strh	r4, [sp, #20]
   32fec:	bcc	33004 <flatcc_verify_union_table@@Base+0xd8>
   32ff0:	mov	r0, sp
   32ff4:	str	r3, [sp, #4]
   32ff8:	str	ip, [sp]
   32ffc:	str	lr, [sp, #12]
   33000:	blx	r1
   33004:	sub	sp, fp, #16
   33008:	pop	{r4, r5, r6, sl, fp, pc}
   3300c:	mov	r0, #3
   33010:	sub	sp, fp, #16
   33014:	pop	{r4, r5, r6, sl, fp, pc}

00033018 <flatcc_verify_union_struct@@Base>:
   33018:	push	{fp, lr}
   3301c:	mov	fp, sp
   33020:	ldr	lr, [r0, #20]
   33024:	mov	r3, r0
   33028:	mov	r0, #18
   3302c:	cmp	lr, #0
   33030:	beq	3306c <flatcc_verify_union_struct@@Base+0x54>
   33034:	ldr	ip, [r3, #4]
   33038:	ldr	r3, [r3, #16]
   3303c:	add	r3, r3, lr
   33040:	cmp	r3, ip
   33044:	bhi	3306c <flatcc_verify_union_struct@@Base+0x54>
   33048:	adds	r1, r3, r1
   3304c:	mov	r0, #10
   33050:	bcs	3306c <flatcc_verify_union_struct@@Base+0x54>
   33054:	mov	r0, #9
   33058:	cmp	r1, ip
   3305c:	pophi	{fp, pc}
   33060:	sub	r0, r2, #1
   33064:	ands	r0, r3, r0
   33068:	movwne	r0, #11
   3306c:	pop	{fp, pc}

00033070 <flatcc_verify_union_string@@Base>:
   33070:	push	{fp, lr}
   33074:	mov	fp, sp
   33078:	mov	r1, r0
   3307c:	ldr	r3, [r0, #16]
   33080:	ldr	r0, [r0, #20]
   33084:	add	r2, r0, r3
   33088:	mov	r0, #17
   3308c:	tst	r2, #3
   33090:	bne	330d8 <flatcc_verify_union_string@@Base+0x68>
   33094:	cmp	r2, r3
   33098:	bls	330d8 <flatcc_verify_union_string@@Base+0x68>
   3309c:	ldr	r3, [r1, #4]
   330a0:	add	ip, r2, #4
   330a4:	cmp	r3, ip
   330a8:	bcc	330d8 <flatcc_verify_union_string@@Base+0x68>
   330ac:	ldr	r1, [r1]
   330b0:	sub	lr, r3, ip
   330b4:	mov	r0, #8
   330b8:	ldr	r2, [r1, r2]
   330bc:	add	r3, r2, #1
   330c0:	cmp	lr, r3
   330c4:	popcc	{fp, pc}
   330c8:	add	r0, r1, ip
   330cc:	ldrb	r0, [r0, r2]
   330d0:	cmp	r0, #0
   330d4:	movwne	r0, #7
   330d8:	pop	{fp, pc}

000330dc <flatcc_verify_buffer_header@@Base>:
   330dc:	push	{r4, sl, fp, lr}
   330e0:	add	fp, sp, #8
   330e4:	sub	sp, sp, #8
   330e8:	mov	r4, r0
   330ec:	mov	r0, #5
   330f0:	tst	r4, #3
   330f4:	bne	33148 <flatcc_verify_buffer_header@@Base+0x6c>
   330f8:	mov	r0, #6
   330fc:	cmn	r1, #9
   33100:	bhi	33148 <flatcc_verify_buffer_header@@Base+0x6c>
   33104:	mov	r0, #1
   33108:	cmp	r1, #8
   3310c:	bcc	33148 <flatcc_verify_buffer_header@@Base+0x6c>
   33110:	cmp	r2, #0
   33114:	beq	33150 <flatcc_verify_buffer_header@@Base+0x74>
   33118:	mov	r0, #0
   3311c:	mov	r1, r2
   33120:	mov	r2, #4
   33124:	str	r0, [sp, #4]
   33128:	add	r0, sp, #4
   3312c:	bl	14ef8 <strncpy@plt>
   33130:	ldr	r1, [sp, #4]
   33134:	cmp	r1, #0
   33138:	ldrne	r2, [r4, #4]
   3313c:	movne	r0, #2
   33140:	cmpne	r2, r1
   33144:	moveq	r0, #0
   33148:	sub	sp, fp, #8
   3314c:	pop	{r4, sl, fp, pc}
   33150:	mov	r0, #0
   33154:	sub	sp, fp, #8
   33158:	pop	{r4, sl, fp, pc}

0003315c <flatcc_verify_typed_buffer_header@@Base>:
   3315c:	mov	r3, r0
   33160:	mov	r0, #5
   33164:	tst	r3, #3
   33168:	bne	3319c <flatcc_verify_typed_buffer_header@@Base+0x40>
   3316c:	mov	r0, #6
   33170:	cmn	r1, #9
   33174:	bhi	3319c <flatcc_verify_typed_buffer_header@@Base+0x40>
   33178:	mov	r0, #1
   3317c:	cmp	r1, #8
   33180:	bxcc	lr
   33184:	cmp	r2, #0
   33188:	beq	331a0 <flatcc_verify_typed_buffer_header@@Base+0x44>
   3318c:	ldr	r1, [r3, #4]
   33190:	mov	r0, #2
   33194:	cmp	r1, r2
   33198:	moveq	r0, #0
   3319c:	bx	lr
   331a0:	mov	r0, #0
   331a4:	bx	lr

000331a8 <flatcc_verify_struct_as_root@@Base>:
   331a8:	push	{r4, r5, r6, r7, fp, lr}
   331ac:	add	fp, sp, #16
   331b0:	sub	sp, sp, #8
   331b4:	mov	r5, r0
   331b8:	mov	r0, #5
   331bc:	tst	r5, #3
   331c0:	bne	33258 <flatcc_verify_struct_as_root@@Base+0xb0>
   331c4:	mov	r4, r1
   331c8:	mov	r0, #6
   331cc:	cmn	r1, #9
   331d0:	bhi	33258 <flatcc_verify_struct_as_root@@Base+0xb0>
   331d4:	mov	r0, #1
   331d8:	cmp	r4, #8
   331dc:	bcc	33258 <flatcc_verify_struct_as_root@@Base+0xb0>
   331e0:	mov	r6, r3
   331e4:	mov	r7, r2
   331e8:	cmp	r2, #0
   331ec:	beq	3321c <flatcc_verify_struct_as_root@@Base+0x74>
   331f0:	mov	r0, #0
   331f4:	mov	r1, r7
   331f8:	mov	r2, #4
   331fc:	str	r0, [sp]
   33200:	mov	r0, sp
   33204:	bl	14ef8 <strncpy@plt>
   33208:	ldr	r0, [sp]
   3320c:	cmp	r0, #0
   33210:	ldrne	r1, [r5, #4]
   33214:	cmpne	r1, r0
   33218:	bne	33260 <flatcc_verify_struct_as_root@@Base+0xb8>
   3321c:	ldr	r1, [r5]
   33220:	mov	r0, #18
   33224:	sub	r2, r1, #1
   33228:	cmp	r2, r4
   3322c:	bcs	33258 <flatcc_verify_struct_as_root@@Base+0xb0>
   33230:	adds	r2, r1, r6
   33234:	mov	r0, #10
   33238:	bcs	33258 <flatcc_verify_struct_as_root@@Base+0xb0>
   3323c:	mov	r0, #9
   33240:	cmp	r2, r4
   33244:	bhi	33258 <flatcc_verify_struct_as_root@@Base+0xb0>
   33248:	ldr	r0, [fp, #8]
   3324c:	sub	r0, r0, #1
   33250:	ands	r0, r1, r0
   33254:	movwne	r0, #11
   33258:	sub	sp, fp, #16
   3325c:	pop	{r4, r5, r6, r7, fp, pc}
   33260:	mov	r0, #0
   33264:	mov	r1, r7
   33268:	mov	r2, #4
   3326c:	str	r0, [sp, #4]
   33270:	add	r0, sp, #4
   33274:	bl	14ef8 <strncpy@plt>
   33278:	ldr	r0, [sp, #4]
   3327c:	ldr	r1, [r5, #4]
   33280:	subs	r1, r1, r0
   33284:	movwne	r1, #1
   33288:	cmp	r0, #0
   3328c:	lslne	r0, r1, #1
   33290:	sub	sp, fp, #16
   33294:	pop	{r4, r5, r6, r7, fp, pc}

00033298 <flatcc_verify_struct_as_typed_root@@Base>:
   33298:	push	{fp, lr}
   3329c:	mov	fp, sp
   332a0:	mov	ip, r0
   332a4:	mov	r0, #5
   332a8:	tst	ip, #3
   332ac:	bne	3331c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   332b0:	mov	r0, #6
   332b4:	cmn	r1, #9
   332b8:	bhi	3331c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   332bc:	mov	r0, #1
   332c0:	cmp	r1, #8
   332c4:	bcc	3331c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   332c8:	cmp	r2, #0
   332cc:	beq	332e0 <flatcc_verify_struct_as_typed_root@@Base+0x48>
   332d0:	ldr	lr, [ip, #4]
   332d4:	mov	r0, #2
   332d8:	cmp	lr, r2
   332dc:	bne	3331c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   332e0:	ldr	ip, [ip]
   332e4:	mov	r0, #18
   332e8:	sub	r2, ip, #1
   332ec:	cmp	r2, r1
   332f0:	bcs	3331c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   332f4:	adds	r3, ip, r3
   332f8:	mov	r0, #10
   332fc:	bcs	3331c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   33300:	mov	r0, #9
   33304:	cmp	r3, r1
   33308:	pophi	{fp, pc}
   3330c:	ldr	r0, [fp, #8]
   33310:	sub	r0, r0, #1
   33314:	ands	r0, ip, r0
   33318:	movwne	r0, #11
   3331c:	pop	{fp, pc}

00033320 <flatcc_verify_table_as_root@@Base>:
   33320:	push	{r4, r5, r6, r7, fp, lr}
   33324:	add	fp, sp, #16
   33328:	sub	sp, sp, #24
   3332c:	mov	r4, r0
   33330:	mov	r0, #5
   33334:	tst	r4, #3
   33338:	bne	33444 <flatcc_verify_table_as_root@@Base+0x124>
   3333c:	mov	r6, r1
   33340:	mov	r0, #6
   33344:	cmn	r1, #9
   33348:	bhi	33444 <flatcc_verify_table_as_root@@Base+0x124>
   3334c:	mov	r0, #1
   33350:	cmp	r6, #8
   33354:	bcc	33444 <flatcc_verify_table_as_root@@Base+0x124>
   33358:	mov	r5, r3
   3335c:	mov	r7, r2
   33360:	cmp	r2, #0
   33364:	beq	33394 <flatcc_verify_table_as_root@@Base+0x74>
   33368:	mov	r0, #0
   3336c:	mov	r1, r7
   33370:	mov	r2, #4
   33374:	str	r0, [sp]
   33378:	mov	r0, sp
   3337c:	bl	14ef8 <strncpy@plt>
   33380:	ldr	r0, [sp]
   33384:	cmp	r0, #0
   33388:	ldrne	r1, [r4, #4]
   3338c:	cmpne	r1, r0
   33390:	bne	3344c <flatcc_verify_table_as_root@@Base+0x12c>
   33394:	ldr	r1, [r4]
   33398:	mov	r0, #99	; 0x63
   3339c:	str	r0, [sp, #8]
   333a0:	mov	r0, #15
   333a4:	tst	r1, #3
   333a8:	bne	33444 <flatcc_verify_table_as_root@@Base+0x124>
   333ac:	cmp	r1, #0
   333b0:	beq	33444 <flatcc_verify_table_as_root@@Base+0x124>
   333b4:	add	r2, r1, #4
   333b8:	cmp	r2, r6
   333bc:	bhi	33444 <flatcc_verify_table_as_root@@Base+0x124>
   333c0:	str	r1, [sp, #16]
   333c4:	ldr	r0, [r4, r1]
   333c8:	sub	r7, r1, r0
   333cc:	mov	r0, #29
   333d0:	tst	r7, #-2147483647	; 0x80000001
   333d4:	bne	33444 <flatcc_verify_table_as_root@@Base+0x124>
   333d8:	add	r3, r7, #2
   333dc:	mov	r0, #27
   333e0:	cmp	r3, r6
   333e4:	bhi	33444 <flatcc_verify_table_as_root@@Base+0x124>
   333e8:	mov	ip, r4
   333ec:	mov	r0, #30
   333f0:	ldrh	r2, [ip, r7]!
   333f4:	tst	r2, #1
   333f8:	strh	r2, [sp, #22]
   333fc:	bne	33444 <flatcc_verify_table_as_root@@Base+0x124>
   33400:	add	r7, r7, r2
   33404:	cmp	r7, r6
   33408:	bhi	33444 <flatcc_verify_table_as_root@@Base+0x124>
   3340c:	mov	r0, #28
   33410:	cmp	r2, #4
   33414:	bcc	33444 <flatcc_verify_table_as_root@@Base+0x124>
   33418:	add	r0, r4, r3
   3341c:	sub	r1, r6, r1
   33420:	ldrh	r2, [r0]
   33424:	mov	r0, #20
   33428:	cmp	r1, r2
   3342c:	strh	r2, [sp, #20]
   33430:	bcc	33444 <flatcc_verify_table_as_root@@Base+0x124>
   33434:	mov	r0, sp
   33438:	stm	sp, {r4, r6}
   3343c:	str	ip, [sp, #12]
   33440:	blx	r5
   33444:	sub	sp, fp, #16
   33448:	pop	{r4, r5, r6, r7, fp, pc}
   3344c:	mov	r0, #0
   33450:	mov	r1, r7
   33454:	mov	r2, #4
   33458:	str	r0, [sp]
   3345c:	mov	r0, sp
   33460:	bl	14ef8 <strncpy@plt>
   33464:	ldr	r0, [sp]
   33468:	ldr	r1, [r4, #4]
   3346c:	subs	r1, r1, r0
   33470:	movwne	r1, #1
   33474:	cmp	r0, #0
   33478:	lslne	r0, r1, #1
   3347c:	sub	sp, fp, #16
   33480:	pop	{r4, r5, r6, r7, fp, pc}

00033484 <flatcc_verify_table_as_typed_root@@Base>:
   33484:	push	{r4, r5, r6, sl, fp, lr}
   33488:	add	fp, sp, #16
   3348c:	sub	sp, sp, #24
   33490:	mov	ip, #5
   33494:	tst	r0, #3
   33498:	bne	33580 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   3349c:	mov	ip, #6
   334a0:	cmn	r1, #9
   334a4:	bhi	33580 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   334a8:	mov	ip, #1
   334ac:	cmp	r1, #8
   334b0:	bcc	33580 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   334b4:	cmp	r2, #0
   334b8:	beq	334cc <flatcc_verify_table_as_typed_root@@Base+0x48>
   334bc:	ldr	r6, [r0, #4]
   334c0:	mov	ip, #2
   334c4:	cmp	r6, r2
   334c8:	bne	33580 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   334cc:	ldr	r2, [r0]
   334d0:	mov	r6, #99	; 0x63
   334d4:	mov	ip, #15
   334d8:	str	r6, [sp, #8]
   334dc:	tst	r2, #3
   334e0:	bne	33580 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   334e4:	cmp	r2, #0
   334e8:	beq	33580 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   334ec:	add	r6, r2, #4
   334f0:	cmp	r6, r1
   334f4:	bhi	33580 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   334f8:	str	r2, [sp, #16]
   334fc:	mov	ip, #29
   33500:	ldr	r6, [r0, r2]
   33504:	sub	r5, r2, r6
   33508:	tst	r5, #-2147483647	; 0x80000001
   3350c:	bne	33580 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   33510:	add	r4, r5, #2
   33514:	mov	ip, #27
   33518:	cmp	r4, r1
   3351c:	bhi	33580 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   33520:	mov	lr, r0
   33524:	mov	ip, #30
   33528:	ldrh	r6, [lr, r5]!
   3352c:	tst	r6, #1
   33530:	strh	r6, [sp, #22]
   33534:	bne	33580 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   33538:	add	r5, r5, r6
   3353c:	cmp	r5, r1
   33540:	bhi	33580 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   33544:	mov	ip, #28
   33548:	cmp	r6, #4
   3354c:	bcc	33580 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   33550:	add	r6, r0, r4
   33554:	sub	r2, r1, r2
   33558:	mov	ip, #20
   3355c:	ldrh	r4, [r6]
   33560:	cmp	r2, r4
   33564:	strh	r4, [sp, #20]
   33568:	bcc	33580 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   3356c:	stm	sp, {r0, r1}
   33570:	mov	r0, sp
   33574:	str	lr, [sp, #12]
   33578:	blx	r3
   3357c:	mov	ip, r0
   33580:	mov	r0, ip
   33584:	sub	sp, fp, #16
   33588:	pop	{r4, r5, r6, sl, fp, pc}

0003358c <flatcc_verify_struct_as_nested_root@@Base>:
   3358c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   33590:	add	fp, sp, #24
   33594:	sub	sp, sp, #8
   33598:	mov	r4, r3
   3359c:	mov	r3, #4
   335a0:	ldrh	r7, [r0, #22]
   335a4:	ldr	r9, [fp, #12]
   335a8:	add	r6, r3, r1, lsl #1
   335ac:	uxth	r3, r6
   335b0:	cmp	r3, r7
   335b4:	bcs	3363c <flatcc_verify_struct_as_nested_root@@Base+0xb0>
   335b8:	ldr	r1, [r0, #12]
   335bc:	uxtah	r6, r1, r6
   335c0:	ldrh	r6, [r6]
   335c4:	cmp	r6, #0
   335c8:	beq	3363c <flatcc_verify_struct_as_nested_root@@Base+0xb0>
   335cc:	ldrh	r7, [r0, #20]
   335d0:	add	r5, r6, #4
   335d4:	cmp	r5, r7
   335d8:	bhi	33650 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   335dc:	ldr	r7, [r0, #16]
   335e0:	add	r5, r7, r6
   335e4:	tst	r5, #3
   335e8:	bne	33650 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   335ec:	cmp	r5, #0
   335f0:	beq	33710 <flatcc_verify_struct_as_nested_root@@Base+0x184>
   335f4:	ldr	r7, [r0]
   335f8:	ldr	r6, [r7, r5]
   335fc:	add	r6, r6, r5
   33600:	cmp	r6, r5
   33604:	bls	33650 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   33608:	ldr	ip, [r0, #4]
   3360c:	add	r5, r6, #4
   33610:	cmp	r5, ip
   33614:	bhi	33650 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   33618:	ands	r5, r5, #3
   3361c:	bne	33650 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   33620:	ldr	r7, [r7, r6]
   33624:	sub	r6, ip, r6
   33628:	sub	r6, r6, #4
   3362c:	mul	r7, r7, r9
   33630:	cmp	r6, r7
   33634:	bcc	33650 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   33638:	b	33710 <flatcc_verify_struct_as_nested_root@@Base+0x184>
   3363c:	cmp	r2, #0
   33640:	beq	33700 <flatcc_verify_struct_as_nested_root@@Base+0x174>
   33644:	cmp	r3, r7
   33648:	bcs	336e8 <flatcc_verify_struct_as_nested_root@@Base+0x15c>
   3364c:	ldr	r1, [r0, #12]
   33650:	add	r1, r1, r3
   33654:	ldrh	r3, [r1]
   33658:	cmp	r3, #0
   3365c:	beq	336e8 <flatcc_verify_struct_as_nested_root@@Base+0x15c>
   33660:	ldrh	r2, [r0, #20]
   33664:	add	r7, r3, #4
   33668:	mov	r1, #13
   3366c:	cmp	r7, r2
   33670:	bhi	337e8 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   33674:	ldr	r1, [r0, #16]
   33678:	add	r7, r1, r3
   3367c:	mov	r1, #12
   33680:	tst	r7, #3
   33684:	bne	337e8 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   33688:	cmp	r7, #0
   3368c:	beq	337e4 <flatcc_verify_struct_as_nested_root@@Base+0x258>
   33690:	ldr	r2, [r0]
   33694:	ldr	r1, [r2, r7]
   33698:	add	r3, r1, r7
   3369c:	mov	r1, #16
   336a0:	cmp	r3, r7
   336a4:	bls	337e8 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   336a8:	ldr	r0, [r0, #4]
   336ac:	add	r7, r3, #4
   336b0:	cmp	r7, r0
   336b4:	bhi	337e8 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   336b8:	ands	r7, r7, #3
   336bc:	bne	337e8 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   336c0:	ldr	r1, [r2, r3]
   336c4:	sub	r0, r0, r3
   336c8:	sub	r0, r0, #4
   336cc:	mul	r2, r1, r9
   336d0:	mov	r1, #0
   336d4:	cmp	r0, r2
   336d8:	movwcc	r1, #26
   336dc:	mov	r0, r1
   336e0:	sub	sp, fp, #24
   336e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   336e8:	cmp	r2, #0
   336ec:	movwne	r2, #1
   336f0:	lsl	r1, r2, #2
   336f4:	mov	r0, r1
   336f8:	sub	sp, fp, #24
   336fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   33700:	mov	r1, #0
   33704:	cmp	r3, r7
   33708:	bcs	337e8 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   3370c:	ldr	r1, [r0, #12]
   33710:	add	r1, r1, r3
   33714:	ldrh	r2, [r1]
   33718:	mov	r1, #0
   3371c:	cmp	r2, #0
   33720:	beq	337e8 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   33724:	ldr	r3, [r0]
   33728:	ldr	r0, [r0, #16]
   3372c:	add	r0, r3, r0
   33730:	adds	r0, r0, r2
   33734:	beq	337e8 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   33738:	ldr	r7, [r0]
   3373c:	mov	r1, #5
   33740:	ldr	r8, [r7, r0]!
   33744:	add	r6, r7, #4
   33748:	tst	r6, #3
   3374c:	bne	337e8 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   33750:	mov	r1, #6
   33754:	cmn	r8, #9
   33758:	bhi	337e8 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   3375c:	mov	r1, #1
   33760:	cmp	r8, #8
   33764:	bcc	337e8 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   33768:	cmp	r4, #0
   3376c:	beq	3379c <flatcc_verify_struct_as_nested_root@@Base+0x210>
   33770:	mov	r0, #0
   33774:	mov	r1, r4
   33778:	mov	r2, #4
   3377c:	str	r0, [sp]
   33780:	mov	r0, sp
   33784:	bl	14ef8 <strncpy@plt>
   33788:	ldr	r0, [sp]
   3378c:	cmp	r0, #0
   33790:	ldrne	r1, [r7, #8]
   33794:	cmpne	r1, r0
   33798:	bne	337f4 <flatcc_verify_struct_as_nested_root@@Base+0x268>
   3379c:	ldr	r0, [r6]
   337a0:	mov	r1, #18
   337a4:	sub	r2, r0, #1
   337a8:	cmp	r2, r8
   337ac:	bcs	337e8 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   337b0:	ldr	r1, [fp, #8]
   337b4:	adds	r2, r0, r1
   337b8:	mov	r1, #10
   337bc:	bcs	337e8 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   337c0:	mov	r1, #9
   337c4:	cmp	r2, r8
   337c8:	bhi	337e8 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   337cc:	sub	r1, r9, #1
   337d0:	ands	r1, r0, r1
   337d4:	movwne	r1, #11
   337d8:	mov	r0, r1
   337dc:	sub	sp, fp, #24
   337e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   337e4:	mov	r1, #0
   337e8:	mov	r0, r1
   337ec:	sub	sp, fp, #24
   337f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   337f4:	mov	r0, #0
   337f8:	mov	r1, r4
   337fc:	mov	r2, #4
   33800:	str	r0, [sp, #4]
   33804:	add	r0, sp, #4
   33808:	bl	14ef8 <strncpy@plt>
   3380c:	ldr	r1, [sp, #4]
   33810:	ldr	r0, [r7, #8]
   33814:	subs	r0, r0, r1
   33818:	movwne	r0, #1
   3381c:	cmp	r1, #0
   33820:	lslne	r1, r0, #1
   33824:	mov	r0, r1
   33828:	sub	sp, fp, #24
   3382c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00033830 <flatcc_verify_table_as_nested_root@@Base>:
   33830:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   33834:	add	fp, sp, #24
   33838:	sub	sp, sp, #24
   3383c:	mov	r4, r0
   33840:	mov	r0, #4
   33844:	ldr	r8, [fp, #8]
   33848:	mov	r5, r3
   3384c:	add	r6, r0, r1, lsl #1
   33850:	ldrh	r7, [r4, #22]
   33854:	uxth	r3, r6
   33858:	cmp	r3, r7
   3385c:	bcs	338e4 <flatcc_verify_table_as_nested_root@@Base+0xb4>
   33860:	ldr	r0, [r4, #12]
   33864:	uxtah	r6, r0, r6
   33868:	ldrh	r6, [r6]
   3386c:	cmp	r6, #0
   33870:	beq	338e4 <flatcc_verify_table_as_nested_root@@Base+0xb4>
   33874:	ldrh	r7, [r4, #20]
   33878:	add	r1, r6, #4
   3387c:	cmp	r1, r7
   33880:	bhi	338f8 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33884:	ldr	r1, [r4, #16]
   33888:	add	r7, r1, r6
   3388c:	tst	r7, #3
   33890:	bne	338f8 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33894:	cmp	r7, #0
   33898:	beq	339b0 <flatcc_verify_table_as_nested_root@@Base+0x180>
   3389c:	ldr	ip, [r4]
   338a0:	ldr	r1, [ip, r7]
   338a4:	add	r6, r1, r7
   338a8:	cmp	r6, r7
   338ac:	bls	338f8 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   338b0:	ldr	lr, [r4, #4]
   338b4:	add	r7, r6, #4
   338b8:	cmp	r7, lr
   338bc:	bhi	338f8 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   338c0:	ands	r1, r7, #3
   338c4:	bne	338f8 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   338c8:	ldr	r1, [ip, r6]
   338cc:	sub	r7, lr, r6
   338d0:	sub	r7, r7, #4
   338d4:	mul	r1, r1, r8
   338d8:	cmp	r7, r1
   338dc:	bcc	338f8 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   338e0:	b	339b0 <flatcc_verify_table_as_nested_root@@Base+0x180>
   338e4:	cmp	r2, #0
   338e8:	beq	339a0 <flatcc_verify_table_as_nested_root@@Base+0x170>
   338ec:	cmp	r3, r7
   338f0:	bcs	3398c <flatcc_verify_table_as_nested_root@@Base+0x15c>
   338f4:	ldr	r0, [r4, #12]
   338f8:	add	r0, r0, r3
   338fc:	ldrh	r3, [r0]
   33900:	cmp	r3, #0
   33904:	beq	3398c <flatcc_verify_table_as_nested_root@@Base+0x15c>
   33908:	ldrh	r1, [r4, #20]
   3390c:	add	r2, r3, #4
   33910:	mov	r0, #13
   33914:	cmp	r2, r1
   33918:	bhi	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   3391c:	ldr	r0, [r4, #16]
   33920:	add	r7, r0, r3
   33924:	mov	r0, #12
   33928:	tst	r7, #3
   3392c:	bne	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33930:	cmp	r7, #0
   33934:	beq	33b00 <flatcc_verify_table_as_nested_root@@Base+0x2d0>
   33938:	ldr	r2, [r4]
   3393c:	ldr	r0, [r2, r7]
   33940:	add	r3, r0, r7
   33944:	mov	r0, #16
   33948:	cmp	r3, r7
   3394c:	bls	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33950:	ldr	r7, [r4, #4]
   33954:	add	r6, r3, #4
   33958:	cmp	r6, r7
   3395c:	bhi	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33960:	ands	r1, r6, #3
   33964:	bne	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33968:	ldr	r0, [r2, r3]
   3396c:	mul	r1, r0, r8
   33970:	sub	r0, r7, r3
   33974:	sub	r2, r0, #4
   33978:	mov	r0, #0
   3397c:	cmp	r2, r1
   33980:	movwcc	r0, #26
   33984:	sub	sp, fp, #24
   33988:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3398c:	cmp	r2, #0
   33990:	movwne	r2, #1
   33994:	lsl	r0, r2, #2
   33998:	sub	sp, fp, #24
   3399c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   339a0:	mov	r0, #0
   339a4:	cmp	r3, r7
   339a8:	bcs	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   339ac:	ldr	r0, [r4, #12]
   339b0:	add	r0, r0, r3
   339b4:	ldrh	r1, [r0]
   339b8:	mov	r0, #0
   339bc:	cmp	r1, #0
   339c0:	beq	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   339c4:	ldr	r2, [r4]
   339c8:	ldr	r3, [r4, #16]
   339cc:	add	r2, r2, r3
   339d0:	adds	r1, r2, r1
   339d4:	beq	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   339d8:	ldr	r6, [r1]
   339dc:	mov	r0, #5
   339e0:	ldr	r8, [r6, r1]!
   339e4:	add	r7, r6, #4
   339e8:	tst	r7, #3
   339ec:	bne	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   339f0:	mov	r0, #6
   339f4:	cmn	r8, #9
   339f8:	bhi	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   339fc:	mov	r0, #1
   33a00:	cmp	r8, #8
   33a04:	bcc	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33a08:	cmp	r5, #0
   33a0c:	beq	33a3c <flatcc_verify_table_as_nested_root@@Base+0x20c>
   33a10:	mov	r0, #0
   33a14:	mov	r1, r5
   33a18:	mov	r2, #4
   33a1c:	str	r0, [sp]
   33a20:	mov	r0, sp
   33a24:	bl	14ef8 <strncpy@plt>
   33a28:	ldr	r0, [sp]
   33a2c:	cmp	r0, #0
   33a30:	ldrne	r1, [r6, #8]
   33a34:	cmpne	r1, r0
   33a38:	bne	33b0c <flatcc_verify_table_as_nested_root@@Base+0x2dc>
   33a3c:	ldr	r0, [r4, #8]
   33a40:	ldr	r1, [r7]
   33a44:	subs	r0, r0, #1
   33a48:	str	r0, [sp, #8]
   33a4c:	beq	33b44 <flatcc_verify_table_as_nested_root@@Base+0x314>
   33a50:	mov	r0, #15
   33a54:	tst	r1, #3
   33a58:	bne	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33a5c:	cmp	r1, #0
   33a60:	beq	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33a64:	add	r2, r1, #4
   33a68:	cmp	r2, r8
   33a6c:	bhi	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33a70:	str	r1, [sp, #16]
   33a74:	ldr	r0, [r7, r1]
   33a78:	sub	r6, r1, r0
   33a7c:	mov	r0, #29
   33a80:	tst	r6, #-2147483647	; 0x80000001
   33a84:	bne	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33a88:	add	r3, r6, #2
   33a8c:	mov	r0, #27
   33a90:	cmp	r3, r8
   33a94:	bhi	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33a98:	mov	r2, r7
   33a9c:	mov	r0, #30
   33aa0:	ldrh	r5, [r2, r6]!
   33aa4:	tst	r5, #1
   33aa8:	strh	r5, [sp, #22]
   33aac:	bne	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33ab0:	add	r6, r6, r5
   33ab4:	cmp	r6, r8
   33ab8:	bhi	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33abc:	mov	r0, #28
   33ac0:	cmp	r5, #4
   33ac4:	bcc	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33ac8:	add	r0, r7, r3
   33acc:	sub	r1, r8, r1
   33ad0:	ldrh	r3, [r0]
   33ad4:	mov	r0, #20
   33ad8:	cmp	r1, r3
   33adc:	strh	r3, [sp, #20]
   33ae0:	bcc	33af8 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33ae4:	ldr	r1, [fp, #12]
   33ae8:	mov	r0, sp
   33aec:	stm	sp, {r7, r8}
   33af0:	str	r2, [sp, #12]
   33af4:	blx	r1
   33af8:	sub	sp, fp, #24
   33afc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33b00:	mov	r0, #0
   33b04:	sub	sp, fp, #24
   33b08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33b0c:	mov	r0, #0
   33b10:	mov	r1, r5
   33b14:	mov	r2, #4
   33b18:	str	r0, [sp]
   33b1c:	mov	r0, sp
   33b20:	bl	14ef8 <strncpy@plt>
   33b24:	ldr	r0, [sp]
   33b28:	ldr	r1, [r6, #8]
   33b2c:	subs	r1, r1, r0
   33b30:	movwne	r1, #1
   33b34:	cmp	r0, #0
   33b38:	lslne	r0, r1, #1
   33b3c:	sub	sp, fp, #24
   33b40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33b44:	mov	r0, #3
   33b48:	sub	sp, fp, #24
   33b4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00033b50 <flatcc_verify_union_field@@Base>:
   33b50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33b54:	add	fp, sp, #28
   33b58:	sub	sp, sp, #28
   33b5c:	mov	r7, #2
   33b60:	ldrh	r4, [r0, #22]
   33b64:	lsl	r5, r1, #1
   33b68:	add	r7, r7, r1, lsl #1
   33b6c:	uxth	r6, r7
   33b70:	cmp	r6, r4
   33b74:	bcs	33c74 <flatcc_verify_union_field@@Base+0x124>
   33b78:	ldr	r6, [r0, #12]
   33b7c:	uxtah	r1, r6, r7
   33b80:	ldrh	ip, [r1]
   33b84:	cmp	ip, #0
   33b88:	beq	33c74 <flatcc_verify_union_field@@Base+0x124>
   33b8c:	ldrh	r7, [r0, #20]
   33b90:	mov	r1, #13
   33b94:	cmp	ip, r7
   33b98:	bcs	33c9c <flatcc_verify_union_field@@Base+0x14c>
   33b9c:	add	r7, r5, #4
   33ba0:	ldr	lr, [r0]
   33ba4:	mov	r1, #1
   33ba8:	uxth	sl, r7
   33bac:	cmp	sl, r4
   33bb0:	bcs	33bc4 <flatcc_verify_union_field@@Base+0x74>
   33bb4:	uxtah	r1, r6, r7
   33bb8:	ldrh	r1, [r1]
   33bbc:	clz	r1, r1
   33bc0:	lsr	r1, r1, #5
   33bc4:	ldr	r9, [r0, #16]
   33bc8:	cmp	r1, #0
   33bcc:	moveq	r1, #24
   33bd0:	add	r8, lr, r9
   33bd4:	ldrb	r5, [r8, ip]
   33bd8:	cmpeq	r5, #0
   33bdc:	beq	33c9c <flatcc_verify_union_field@@Base+0x14c>
   33be0:	mov	r1, #0
   33be4:	cmp	r5, #0
   33be8:	beq	33c9c <flatcc_verify_union_field@@Base+0x14c>
   33bec:	cmp	sl, r4
   33bf0:	bcs	33cc0 <flatcc_verify_union_field@@Base+0x170>
   33bf4:	uxtah	r1, r6, r7
   33bf8:	ldrh	r4, [r1]
   33bfc:	cmp	r4, #0
   33c00:	beq	33cc0 <flatcc_verify_union_field@@Base+0x170>
   33c04:	ldrh	r1, [r0, #20]
   33c08:	add	r2, r4, #4
   33c0c:	cmp	r2, r1
   33c10:	mov	r1, #13
   33c14:	bhi	33c9c <flatcc_verify_union_field@@Base+0x14c>
   33c18:	add	r2, r9, r4
   33c1c:	mov	r1, #12
   33c20:	tst	r2, #3
   33c24:	bne	33c9c <flatcc_verify_union_field@@Base+0x14c>
   33c28:	cmp	r2, #0
   33c2c:	mov	r1, #0
   33c30:	beq	33c9c <flatcc_verify_union_field@@Base+0x14c>
   33c34:	str	lr, [sp, #4]
   33c38:	ldr	r1, [r0, #4]
   33c3c:	ldr	r0, [r0, #8]
   33c40:	str	r1, [sp, #8]
   33c44:	str	r2, [sp, #20]
   33c48:	str	r0, [sp, #12]
   33c4c:	ldr	r0, [lr, r2]
   33c50:	str	r0, [sp, #24]
   33c54:	ldrb	r0, [r8, ip]
   33c58:	strb	r0, [sp, #16]
   33c5c:	add	r0, sp, #4
   33c60:	blx	r3
   33c64:	mov	r1, r0
   33c68:	mov	r0, r1
   33c6c:	sub	sp, fp, #28
   33c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33c74:	add	r1, r5, #4
   33c78:	uxth	r3, r1
   33c7c:	cmp	r3, r4
   33c80:	bcs	33ca8 <flatcc_verify_union_field@@Base+0x158>
   33c84:	ldr	r0, [r0, #12]
   33c88:	uxtah	r0, r0, r1
   33c8c:	mov	r1, #23
   33c90:	ldrh	r0, [r0]
   33c94:	cmp	r0, #0
   33c98:	beq	33ca8 <flatcc_verify_union_field@@Base+0x158>
   33c9c:	mov	r0, r1
   33ca0:	sub	sp, fp, #28
   33ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33ca8:	cmp	r2, #0
   33cac:	movwne	r2, #21
   33cb0:	mov	r1, r2
   33cb4:	mov	r0, r1
   33cb8:	sub	sp, fp, #28
   33cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33cc0:	cmp	r2, #0
   33cc4:	movwne	r2, #1
   33cc8:	lsl	r1, r2, #2
   33ccc:	mov	r0, r1
   33cd0:	sub	sp, fp, #28
   33cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00033cd8 <flatcc_verify_union_vector_field@@Base>:
   33cd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33cdc:	add	fp, sp, #28
   33ce0:	sub	sp, sp, #28
   33ce4:	mov	r9, r3
   33ce8:	mov	r3, #2
   33cec:	lsl	sl, r1, #1
   33cf0:	add	r5, r3, r1, lsl #1
   33cf4:	ldrh	r1, [r0, #22]
   33cf8:	uxth	r3, r5
   33cfc:	cmp	r3, r1
   33d00:	bcs	33d94 <flatcc_verify_union_vector_field@@Base+0xbc>
   33d04:	ldr	r7, [r0, #12]
   33d08:	uxtah	r5, r7, r5
   33d0c:	ldrh	r5, [r5]
   33d10:	cmp	r5, #0
   33d14:	beq	33d94 <flatcc_verify_union_vector_field@@Base+0xbc>
   33d18:	add	r5, r7, r3
   33d1c:	ldrh	r5, [r5]
   33d20:	cmp	r5, #0
   33d24:	beq	33de0 <flatcc_verify_union_vector_field@@Base+0x108>
   33d28:	ldrh	r4, [r0, #20]
   33d2c:	add	r6, r5, #4
   33d30:	cmp	r6, r4
   33d34:	bhi	33df4 <flatcc_verify_union_vector_field@@Base+0x11c>
   33d38:	ldr	r6, [r0, #16]
   33d3c:	add	r5, r6, r5
   33d40:	tst	r5, #3
   33d44:	bne	33df4 <flatcc_verify_union_vector_field@@Base+0x11c>
   33d48:	cmp	r5, #0
   33d4c:	beq	33ea8 <flatcc_verify_union_vector_field@@Base+0x1d0>
   33d50:	ldr	ip, [r0]
   33d54:	ldr	r6, [ip, r5]
   33d58:	add	lr, r6, r5
   33d5c:	cmp	lr, r5
   33d60:	bls	33df4 <flatcc_verify_union_vector_field@@Base+0x11c>
   33d64:	ldr	r8, [r0, #4]
   33d68:	add	r5, lr, #4
   33d6c:	cmp	r5, r8
   33d70:	bhi	33df4 <flatcc_verify_union_vector_field@@Base+0x11c>
   33d74:	ands	r4, r5, #3
   33d78:	bne	33df4 <flatcc_verify_union_vector_field@@Base+0x11c>
   33d7c:	ldr	r6, [ip, lr]
   33d80:	sub	r5, r8, lr
   33d84:	sub	r5, r5, #4
   33d88:	cmp	r5, r6
   33d8c:	bcc	33df4 <flatcc_verify_union_vector_field@@Base+0x11c>
   33d90:	b	33ea8 <flatcc_verify_union_vector_field@@Base+0x1d0>
   33d94:	add	r7, sl, #4
   33d98:	uxth	r5, r7
   33d9c:	cmp	r5, r1
   33da0:	bcs	33e88 <flatcc_verify_union_vector_field@@Base+0x1b0>
   33da4:	cmp	r2, #0
   33da8:	beq	33dc4 <flatcc_verify_union_vector_field@@Base+0xec>
   33dac:	ldr	r5, [r0, #12]
   33db0:	uxtah	r7, r5, r7
   33db4:	mov	r5, #22
   33db8:	ldrh	r7, [r7]
   33dbc:	cmp	r7, #0
   33dc0:	beq	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33dc4:	cmp	r3, r1
   33dc8:	bcs	33de0 <flatcc_verify_union_vector_field@@Base+0x108>
   33dcc:	ldr	r7, [r0, #12]
   33dd0:	add	r5, r7, r3
   33dd4:	ldrh	r5, [r5]
   33dd8:	cmp	r5, #0
   33ddc:	bne	33d28 <flatcc_verify_union_vector_field@@Base+0x50>
   33de0:	cmp	r2, #0
   33de4:	beq	33e98 <flatcc_verify_union_vector_field@@Base+0x1c0>
   33de8:	cmp	r3, r1
   33dec:	bcs	34028 <flatcc_verify_union_vector_field@@Base+0x350>
   33df0:	ldr	r7, [r0, #12]
   33df4:	add	r1, r7, r3
   33df8:	ldrh	r1, [r1]
   33dfc:	cmp	r1, #0
   33e00:	beq	34028 <flatcc_verify_union_vector_field@@Base+0x350>
   33e04:	ldrh	r2, [r0, #20]
   33e08:	add	r3, r1, #4
   33e0c:	mov	r5, #13
   33e10:	cmp	r3, r2
   33e14:	bhi	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33e18:	ldr	r2, [r0, #16]
   33e1c:	mov	r5, #12
   33e20:	add	r3, r2, r1
   33e24:	tst	r3, #3
   33e28:	bne	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33e2c:	cmp	r3, #0
   33e30:	beq	34040 <flatcc_verify_union_vector_field@@Base+0x368>
   33e34:	ldr	r1, [r0]
   33e38:	mov	r5, #16
   33e3c:	ldr	r2, [r1, r3]
   33e40:	add	r2, r2, r3
   33e44:	cmp	r2, r3
   33e48:	bls	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33e4c:	ldr	r0, [r0, #4]
   33e50:	add	r3, r2, #4
   33e54:	cmp	r3, r0
   33e58:	bhi	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33e5c:	ands	r3, r3, #3
   33e60:	bne	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33e64:	ldr	r1, [r1, r2]
   33e68:	sub	r0, r0, r2
   33e6c:	mov	r5, #0
   33e70:	sub	r0, r0, #4
   33e74:	cmp	r0, r1
   33e78:	movwcc	r5, #26
   33e7c:	mov	r0, r5
   33e80:	sub	sp, fp, #28
   33e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33e88:	mov	r5, #22
   33e8c:	cmp	r2, #0
   33e90:	bne	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33e94:	b	33dc4 <flatcc_verify_union_vector_field@@Base+0xec>
   33e98:	mov	r5, #0
   33e9c:	cmp	r3, r1
   33ea0:	bcs	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33ea4:	ldr	r7, [r0, #12]
   33ea8:	add	r3, r7, r3
   33eac:	mov	r5, #0
   33eb0:	ldrh	r3, [r3]
   33eb4:	cmp	r3, #0
   33eb8:	beq	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33ebc:	ldr	r8, [r0]
   33ec0:	ldr	lr, [r0, #16]
   33ec4:	add	r6, r8, lr
   33ec8:	adds	ip, r6, r3
   33ecc:	beq	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33ed0:	add	r3, sl, #4
   33ed4:	uxth	r4, r3
   33ed8:	cmp	r4, r1
   33edc:	bcs	34028 <flatcc_verify_union_vector_field@@Base+0x350>
   33ee0:	uxtah	r1, r7, r3
   33ee4:	ldrh	r1, [r1]
   33ee8:	cmp	r1, #0
   33eec:	beq	34028 <flatcc_verify_union_vector_field@@Base+0x350>
   33ef0:	ldrh	r2, [r0, #20]
   33ef4:	add	r3, r1, #4
   33ef8:	mov	r5, #13
   33efc:	cmp	r3, r2
   33f00:	bhi	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33f04:	add	r3, lr, r1
   33f08:	mov	r5, #12
   33f0c:	tst	r3, #3
   33f10:	bne	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33f14:	cmp	r3, #0
   33f18:	mov	r5, #0
   33f1c:	beq	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33f20:	ldr	r1, [r0, #8]
   33f24:	cmp	r1, #1
   33f28:	blt	34050 <flatcc_verify_union_vector_field@@Base+0x378>
   33f2c:	ldr	r2, [r8, r3]
   33f30:	mov	r5, #16
   33f34:	add	r2, r2, r3
   33f38:	cmp	r2, r3
   33f3c:	bls	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33f40:	ldr	r0, [r0, #4]
   33f44:	add	r7, r2, #4
   33f48:	cmp	r7, r0
   33f4c:	bhi	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33f50:	ands	r3, r7, #3
   33f54:	bne	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33f58:	ldr	r3, [r8, r2]
   33f5c:	mov	r5, #25
   33f60:	cmn	r3, #-1073741823	; 0xc0000001
   33f64:	bhi	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33f68:	sub	r2, r0, r2
   33f6c:	mov	r5, #26
   33f70:	sub	r2, r2, #4
   33f74:	cmp	r2, r3, lsl #2
   33f78:	bcc	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33f7c:	ldr	r2, [ip]
   33f80:	mov	r5, #34	; 0x22
   33f84:	ldr	sl, [r2, ip]!
   33f88:	cmp	r3, sl
   33f8c:	bne	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33f90:	sub	r1, r1, #1
   33f94:	mov	r5, #0
   33f98:	cmp	sl, #0
   33f9c:	str	r1, [sp, #12]
   33fa0:	str	r0, [sp, #8]
   33fa4:	str	r8, [sp, #4]
   33fa8:	beq	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33fac:	add	r6, r2, #4
   33fb0:	add	r4, sp, #4
   33fb4:	ldr	r1, [r8, r7]
   33fb8:	ldrb	r0, [r6]
   33fbc:	cmp	r1, #0
   33fc0:	bne	33fec <flatcc_verify_union_vector_field@@Base+0x314>
   33fc4:	cmp	r0, #0
   33fc8:	bne	34070 <flatcc_verify_union_vector_field@@Base+0x398>
   33fcc:	add	r6, r6, #1
   33fd0:	subs	sl, sl, #1
   33fd4:	add	r7, r7, #4
   33fd8:	beq	34034 <flatcc_verify_union_vector_field@@Base+0x35c>
   33fdc:	ldr	r1, [r8, r7]
   33fe0:	ldrb	r0, [r6]
   33fe4:	cmp	r1, #0
   33fe8:	beq	33fc4 <flatcc_verify_union_vector_field@@Base+0x2ec>
   33fec:	cmp	r0, #0
   33ff0:	beq	34060 <flatcc_verify_union_vector_field@@Base+0x388>
   33ff4:	str	r1, [sp, #24]
   33ff8:	str	r7, [sp, #20]
   33ffc:	strb	r0, [sp, #16]
   34000:	mov	r0, r4
   34004:	blx	r9
   34008:	cmp	r0, #0
   3400c:	beq	33fcc <flatcc_verify_union_vector_field@@Base+0x2f4>
   34010:	add	r0, sp, #4
   34014:	blx	r9
   34018:	mov	r5, r0
   3401c:	mov	r0, r5
   34020:	sub	sp, fp, #28
   34024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34028:	cmp	r2, #0
   3402c:	movwne	r2, #1
   34030:	lsl	r5, r2, #2
   34034:	mov	r0, r5
   34038:	sub	sp, fp, #28
   3403c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34040:	mov	r5, #0
   34044:	mov	r0, r5
   34048:	sub	sp, fp, #28
   3404c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34050:	mov	r5, #3
   34054:	mov	r0, r5
   34058:	sub	sp, fp, #28
   3405c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34060:	mov	r5, #33	; 0x21
   34064:	mov	r0, r5
   34068:	sub	sp, fp, #28
   3406c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34070:	mov	r5, #32
   34074:	mov	r0, r5
   34078:	sub	sp, fp, #28
   3407c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00034080 <grisu3_diy_fp_encode_double@@Base>:
   34080:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34084:	add	fp, sp, #28
   34088:	sub	sp, sp, #12
   3408c:	ldr	lr, [fp, #8]
   34090:	orr	r7, r0, r1
   34094:	cmp	lr, #0
   34098:	movwne	lr, #1
   3409c:	cmp	r7, #0
   340a0:	beq	3448c <grisu3_diy_fp_encode_double@@Base+0x40c>
   340a4:	mov	ip, #0
   340a8:	cmp	ip, r1, lsr #22
   340ac:	bne	340cc <grisu3_diy_fp_encode_double@@Base+0x4c>
   340b0:	mov	ip, #0
   340b4:	lsl	r1, r1, #10
   340b8:	sub	ip, ip, #10
   340bc:	orr	r1, r1, r0, lsr #22
   340c0:	lsl	r0, r0, #10
   340c4:	cmp	r1, #4194304	; 0x400000
   340c8:	bcc	340b4 <grisu3_diy_fp_encode_double@@Base+0x34>
   340cc:	sub	r5, r2, r3
   340d0:	mvn	r2, #0
   340d4:	cmp	r1, #0
   340d8:	bmi	3428c <grisu3_diy_fp_encode_double@@Base+0x20c>
   340dc:	lsl	r1, r1, #1
   340e0:	lsl	r4, r0, #1
   340e4:	sub	ip, ip, #1
   340e8:	orr	r1, r1, r0, lsr #31
   340ec:	subs	r0, r2, r0, lsl #1
   340f0:	sbcs	r0, r2, r1
   340f4:	mov	r0, r4
   340f8:	blt	340dc <grisu3_diy_fp_encode_double@@Base+0x5c>
   340fc:	cmn	r5, #348	; 0x15c
   34100:	blt	34298 <grisu3_diy_fp_encode_double@@Base+0x218>
   34104:	cmp	r5, #348	; 0x15c
   34108:	bge	344ac <grisu3_diy_fp_encode_double@@Base+0x42c>
   3410c:	add	r0, r5, #348	; 0x15c
   34110:	movw	r9, #44000	; 0xabe0
   34114:	asr	r6, r0, #31
   34118:	movt	r9, #4
   3411c:	add	r0, r0, r6, lsr #29
   34120:	mvn	r6, #14
   34124:	and	r6, r6, r0, lsl #1
   34128:	ldr	r8, [r9, r6]!
   3412c:	ldrsh	r7, [r9, #10]
   34130:	cmp	r5, r7
   34134:	blt	344cc <grisu3_diy_fp_encode_double@@Base+0x44c>
   34138:	add	r6, r7, #8
   3413c:	cmp	r6, r5
   34140:	ble	344ec <grisu3_diy_fp_encode_double@@Base+0x46c>
   34144:	lsl	r6, lr, #2
   34148:	rsb	r0, ip, #0
   3414c:	cmp	r5, r7
   34150:	lsl	sl, r6, r0
   34154:	beq	341dc <grisu3_diy_fp_encode_double@@Base+0x15c>
   34158:	mvn	r0, r7
   3415c:	str	sl, [sp, #4]
   34160:	str	r3, [sp, #8]
   34164:	add	r5, r5, r0
   34168:	cmp	r5, #7
   3416c:	bcs	3450c <grisu3_diy_fp_encode_double@@Base+0x48c>
   34170:	movw	r0, #43888	; 0xab70
   34174:	movt	r0, #4
   34178:	ldr	r6, [r0, r5, lsl #4]!
   3417c:	ldr	lr, [r0, #4]
   34180:	ldr	r0, [r0, #8]
   34184:	umull	sl, r7, r6, r1
   34188:	str	r0, [sp]
   3418c:	umull	r3, r0, lr, r4
   34190:	umaal	r7, r0, lr, r1
   34194:	umull	r1, r6, r6, r4
   34198:	mov	r1, #0
   3419c:	adds	r6, sl, r6
   341a0:	ldr	sl, [sp, #4]
   341a4:	adc	r1, r1, #0
   341a8:	adds	r3, r6, r3
   341ac:	adc	r1, r1, #0
   341b0:	adds	r3, r3, #-2147483648	; 0x80000000
   341b4:	adcs	r4, r7, r1
   341b8:	adc	r1, r0, #0
   341bc:	ldr	r0, [sp, #8]
   341c0:	add	r0, r0, r5
   341c4:	add	r0, r0, #1
   341c8:	cmp	r0, #19
   341cc:	ldr	r0, [sp]
   341d0:	addgt	sl, sl, #4
   341d4:	add	r0, ip, r0
   341d8:	add	ip, r0, #64	; 0x40
   341dc:	ldr	r0, [r9, #4]
   341e0:	umull	r3, r7, r4, r8
   341e4:	umull	r3, r5, r1, r8
   341e8:	mov	lr, #0
   341ec:	umull	r4, r6, r4, r0
   341f0:	adds	r3, r3, r7
   341f4:	adc	r7, lr, #0
   341f8:	umaal	r5, r6, r1, r0
   341fc:	mov	r1, #9
   34200:	adds	r3, r3, r4
   34204:	adc	r4, r7, #0
   34208:	adds	r0, r3, #-2147483648	; 0x80000000
   3420c:	adcs	r4, r5, r4
   34210:	adc	r3, r6, #0
   34214:	cmp	sl, #0
   34218:	orr	r0, r4, r3
   3421c:	movweq	r1, #8
   34220:	cmp	r0, #0
   34224:	beq	3448c <grisu3_diy_fp_encode_double@@Base+0x40c>
   34228:	ldrsh	r0, [r9, #8]
   3422c:	cmp	lr, r3, lsr #22
   34230:	add	r0, r0, ip
   34234:	add	r5, r0, #64	; 0x40
   34238:	mov	r0, r5
   3423c:	bne	34258 <grisu3_diy_fp_encode_double@@Base+0x1d8>
   34240:	lsl	r3, r3, #10
   34244:	sub	r0, r0, #10
   34248:	orr	r3, r3, r4, lsr #22
   3424c:	lsl	r4, r4, #10
   34250:	cmp	r3, #4194304	; 0x400000
   34254:	bcc	34240 <grisu3_diy_fp_encode_double@@Base+0x1c0>
   34258:	add	r7, r1, sl
   3425c:	subs	r1, r2, r4
   34260:	sbcs	r1, r2, r3
   34264:	bge	342b8 <grisu3_diy_fp_encode_double@@Base+0x238>
   34268:	lsl	r1, r3, #1
   3426c:	subs	r6, r2, r4, lsl #1
   34270:	sub	r0, r0, #1
   34274:	orr	r3, r1, r4, lsr #31
   34278:	lsl	r1, r4, #1
   3427c:	mov	r4, r1
   34280:	sbcs	r6, r2, r3
   34284:	blt	34268 <grisu3_diy_fp_encode_double@@Base+0x1e8>
   34288:	b	342bc <grisu3_diy_fp_encode_double@@Base+0x23c>
   3428c:	mov	r4, r0
   34290:	cmn	r5, #348	; 0x15c
   34294:	bge	34104 <grisu3_diy_fp_encode_double@@Base+0x84>
   34298:	movw	r0, #47514	; 0xb99a
   3429c:	movw	r1, #46072	; 0xb3f8
   342a0:	movw	r3, #47545	; 0xb9b9
   342a4:	mov	r2, #80	; 0x50
   342a8:	movt	r0, #4
   342ac:	movt	r1, #4
   342b0:	movt	r3, #4
   342b4:	bl	14f40 <__assert_fail@plt>
   342b8:	mov	r1, r4
   342bc:	movw	lr, #64462	; 0xfbce
   342c0:	sub	r2, r5, r0
   342c4:	mov	r5, #0
   342c8:	movt	lr, #65535	; 0xffff
   342cc:	lsl	ip, r7, r2
   342d0:	add	r2, r0, #64	; 0x40
   342d4:	add	r4, lr, #63	; 0x3f
   342d8:	cmp	r2, r4
   342dc:	bgt	3432c <grisu3_diy_fp_encode_double@@Base+0x2ac>
   342e0:	mvn	r4, #1072	; 0x430
   342e4:	mov	r5, #64	; 0x40
   342e8:	cmp	r2, r4
   342ec:	blt	342fc <grisu3_diy_fp_encode_double@@Base+0x27c>
   342f0:	sub	r5, lr, r0
   342f4:	cmp	r5, #61	; 0x3d
   342f8:	blt	3432c <grisu3_diy_fp_encode_double@@Base+0x2ac>
   342fc:	sub	r2, r5, #62	; 0x3e
   34300:	mov	r4, #9
   34304:	add	ip, r4, ip, asr r2
   34308:	lsr	r1, r1, r2
   3430c:	rsb	r4, r5, #94	; 0x5e
   34310:	add	r0, r2, r0
   34314:	orr	r1, r1, r3, lsl r4
   34318:	subs	r4, r5, #94	; 0x5e
   3431c:	mov	r5, #62	; 0x3e
   34320:	lsrpl	r1, r3, r4
   34324:	lsr	r3, r3, r2
   34328:	movwpl	r3, #0
   3432c:	lsr	r2, r1, r5
   34330:	rsb	r4, r5, #32
   34334:	lsr	r6, r3, r5
   34338:	add	r0, r0, r5
   3433c:	orr	r2, r2, r3, lsl r4
   34340:	subs	r4, r5, #32
   34344:	lsrpl	r2, r3, r4
   34348:	sub	r3, r5, #1
   3434c:	mov	r4, #1
   34350:	movwpl	r6, #0
   34354:	lsl	r4, r4, r3
   34358:	subs	r3, r5, #33	; 0x21
   3435c:	movwpl	r4, #0
   34360:	add	r3, ip, r4, lsl #3
   34364:	cmp	r5, r3
   34368:	blt	34388 <grisu3_diy_fp_encode_double@@Base+0x308>
   3436c:	adds	r2, r2, #1
   34370:	adc	r6, r6, #0
   34374:	tst	r6, #2097152	; 0x200000
   34378:	beq	34388 <grisu3_diy_fp_encode_double@@Base+0x308>
   3437c:	lsrs	r6, r6, #1
   34380:	rrx	r2, r2
   34384:	add	r0, r0, #1
   34388:	and	r1, r4, r1
   3438c:	cmp	r6, #2097152	; 0x200000
   34390:	bcc	343b4 <grisu3_diy_fp_encode_double@@Base+0x334>
   34394:	mov	r5, #0
   34398:	lsrs	r7, r6, #1
   3439c:	rrx	r2, r2
   343a0:	cmp	r5, r6, lsr #22
   343a4:	add	r0, r0, #1
   343a8:	mov	r6, r7
   343ac:	bne	34398 <grisu3_diy_fp_encode_double@@Base+0x318>
   343b0:	b	343b8 <grisu3_diy_fp_encode_double@@Base+0x338>
   343b4:	mov	r7, r6
   343b8:	ldr	r8, [fp, #12]
   343bc:	vmov.i32	d16, #0	; 0x00000000
   343c0:	lsl	r9, r4, #3
   343c4:	lsl	r1, r1, #3
   343c8:	cmp	r0, lr
   343cc:	blt	34460 <grisu3_diy_fp_encode_double@@Base+0x3e0>
   343d0:	and	r4, r7, #1048576	; 0x100000
   343d4:	mov	r5, #1
   343d8:	cmp	r0, lr
   343dc:	eor	r5, r5, r4, lsr #20
   343e0:	beq	34434 <grisu3_diy_fp_encode_double@@Base+0x3b4>
   343e4:	cmp	r4, #0
   343e8:	bne	34434 <grisu3_diy_fp_encode_double@@Base+0x3b4>
   343ec:	mov	r4, #1
   343f0:	lsl	r5, r7, #1
   343f4:	sub	r0, r0, #1
   343f8:	orr	r6, r5, r2, lsr #31
   343fc:	ands	r5, r7, #524288	; 0x80000
   34400:	lsl	r2, r2, #1
   34404:	eor	r5, r4, r5, lsr #19
   34408:	bne	34418 <grisu3_diy_fp_encode_double@@Base+0x398>
   3440c:	cmp	r0, lr
   34410:	mov	r7, r6
   34414:	bgt	343f0 <grisu3_diy_fp_encode_double@@Base+0x370>
   34418:	cmp	r0, lr
   3441c:	bne	34440 <grisu3_diy_fp_encode_double@@Base+0x3c0>
   34420:	cmp	r5, #0
   34424:	mov	r7, #0
   34428:	mov	r5, #0
   3442c:	bne	34450 <grisu3_diy_fp_encode_double@@Base+0x3d0>
   34430:	b	34440 <grisu3_diy_fp_encode_double@@Base+0x3c0>
   34434:	mov	r6, r7
   34438:	cmp	r0, lr
   3443c:	beq	34420 <grisu3_diy_fp_encode_double@@Base+0x3a0>
   34440:	movw	r7, #1075	; 0x433
   34444:	add	r0, r0, r7
   34448:	mov	r7, #0
   3444c:	lsl	r5, r0, #20
   34450:	bfc	r6, #20, #12
   34454:	orr	r0, r7, r2
   34458:	orr	r2, r5, r6
   3445c:	vmov	d16, r0, r2
   34460:	cmp	r1, r3
   34464:	sub	r3, r9, ip
   34468:	mov	r2, #0
   3446c:	mov	r0, #0
   34470:	vstr	d16, [r8]
   34474:	movwge	r2, #1
   34478:	cmp	r3, r1
   3447c:	movwge	r0, #1
   34480:	orr	r0, r2, r0
   34484:	sub	sp, fp, #28
   34488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3448c:	movw	r0, #47362	; 0xb902
   34490:	movw	r1, #47371	; 0xb90b
   34494:	movw	r3, #47457	; 0xb961
   34498:	mov	r2, #260	; 0x104
   3449c:	movt	r0, #4
   344a0:	movt	r1, #4
   344a4:	movt	r3, #4
   344a8:	bl	14f40 <__assert_fail@plt>
   344ac:	movw	r0, #47602	; 0xb9f2
   344b0:	movw	r1, #46072	; 0xb3f8
   344b4:	movw	r3, #47545	; 0xb9b9
   344b8:	mov	r2, #81	; 0x51
   344bc:	movt	r0, #4
   344c0:	movt	r1, #4
   344c4:	movt	r3, #4
   344c8:	bl	14f40 <__assert_fail@plt>
   344cc:	movw	r0, #47645	; 0xba1d
   344d0:	movw	r1, #46072	; 0xb3f8
   344d4:	movw	r3, #47545	; 0xb9b9
   344d8:	mov	r2, #88	; 0x58
   344dc:	movt	r0, #4
   344e0:	movt	r1, #4
   344e4:	movt	r3, #4
   344e8:	bl	14f40 <__assert_fail@plt>
   344ec:	movw	r0, #47660	; 0xba2c
   344f0:	movw	r1, #46072	; 0xb3f8
   344f4:	movw	r3, #47545	; 0xb9b9
   344f8:	mov	r2, #89	; 0x59
   344fc:	movt	r0, #4
   34500:	movt	r1, #4
   34504:	movt	r3, #4
   34508:	bl	14f40 <__assert_fail@plt>
   3450c:	movw	r0, #46044	; 0xb3dc
   34510:	movw	r1, #46072	; 0xb3f8
   34514:	movw	r3, #46159	; 0xb44f
   34518:	mov	r2, #185	; 0xb9
   3451c:	movt	r0, #4
   34520:	movt	r1, #4
   34524:	movt	r3, #4
   34528:	bl	14f40 <__assert_fail@plt>

0003452c <flatcc_json_parser_error_string@@Base>:
   3452c:	cmp	r0, #34	; 0x22
   34530:	movwhi	r0, #43726	; 0xaace
   34534:	movthi	r0, #4
   34538:	bxhi	lr
   3453c:	movw	r1, #45904	; 0xb350
   34540:	movt	r1, #4
   34544:	ldr	r0, [r1, r0, lsl #2]
   34548:	bx	lr

0003454c <flatcc_json_parser_set_error@@Base>:
   3454c:	mov	ip, r2
   34550:	ldr	r2, [r0, #20]
   34554:	cmp	r2, #0
   34558:	beq	34564 <flatcc_json_parser_set_error@@Base+0x18>
   3455c:	mov	r0, ip
   34560:	bx	lr
   34564:	str	r1, [r0, #32]
   34568:	ldr	r2, [r0, #4]
   3456c:	sub	r1, r1, r2
   34570:	add	r1, r1, #1
   34574:	str	r1, [r0, #16]
   34578:	str	r3, [r0, #20]
   3457c:	mov	r0, ip
   34580:	bx	lr

00034584 <flatcc_json_parser_string_part@@Base>:
   34584:	cmp	r1, r2
   34588:	beq	345b4 <flatcc_json_parser_string_part@@Base+0x30>
   3458c:	ldrb	r3, [r1]
   34590:	cmp	r3, #32
   34594:	bcc	345e8 <flatcc_json_parser_string_part@@Base+0x64>
   34598:	cmp	r3, #34	; 0x22
   3459c:	cmpne	r3, #92	; 0x5c
   345a0:	beq	345e0 <flatcc_json_parser_string_part@@Base+0x5c>
   345a4:	add	r1, r1, #1
   345a8:	cmp	r2, r1
   345ac:	bne	3458c <flatcc_json_parser_string_part@@Base+0x8>
   345b0:	mov	r1, r2
   345b4:	ldr	r3, [r0, #20]
   345b8:	cmp	r3, #0
   345bc:	bne	345dc <flatcc_json_parser_string_part@@Base+0x58>
   345c0:	mov	ip, #20
   345c4:	str	r1, [r0, #32]
   345c8:	ldr	r3, [r0, #4]
   345cc:	sub	r1, r1, r3
   345d0:	add	r1, r1, #1
   345d4:	str	r1, [r0, #16]
   345d8:	str	ip, [r0, #20]
   345dc:	mov	r1, r2
   345e0:	mov	r0, r1
   345e4:	bx	lr
   345e8:	ldr	r3, [r0, #20]
   345ec:	cmp	r3, #0
   345f0:	bne	345dc <flatcc_json_parser_string_part@@Base+0x58>
   345f4:	mov	ip, #17
   345f8:	b	345c4 <flatcc_json_parser_string_part@@Base+0x40>

000345fc <flatcc_json_parser_space_ext@@Base>:
   345fc:	mov	ip, r2
   34600:	cmp	r1, r2
   34604:	beq	34708 <flatcc_json_parser_space_ext@@Base+0x10c>
   34608:	ldrb	r3, [r1]
   3460c:	cmp	r3, #32
   34610:	bne	3463c <flatcc_json_parser_space_ext@@Base+0x40>
   34614:	add	r1, r1, #1
   34618:	cmp	r1, ip
   3461c:	bne	34608 <flatcc_json_parser_space_ext@@Base+0xc>
   34620:	b	34708 <flatcc_json_parser_space_ext@@Base+0x10c>
   34624:	add	r1, r1, r3
   34628:	add	r1, r1, #1
   3462c:	str	r1, [r0, #4]
   34630:	ldr	r2, [r0, #12]
   34634:	add	r2, r2, #1
   34638:	str	r2, [r0, #12]
   3463c:	cmp	r1, ip
   34640:	bne	34654 <flatcc_json_parser_space_ext@@Base+0x58>
   34644:	b	34708 <flatcc_json_parser_space_ext@@Base+0x10c>
   34648:	add	r1, r1, #1
   3464c:	cmp	r1, ip
   34650:	beq	34708 <flatcc_json_parser_space_ext@@Base+0x10c>
   34654:	ldrb	r3, [r1]
   34658:	cmp	r3, #32
   3465c:	movhi	r0, r1
   34660:	bxhi	lr
   34664:	sub	r3, r3, #9
   34668:	cmp	r3, #23
   3466c:	bhi	346fc <flatcc_json_parser_space_ext@@Base+0x100>
   34670:	add	r2, pc, #0
   34674:	ldr	pc, [r2, r3, lsl #2]
   34678:	andeq	r4, r3, r8, asr #12
   3467c:	andeq	r4, r3, r8, lsr #12
   34680:	strdeq	r4, [r3], -ip
   34684:	strdeq	r4, [r3], -ip
   34688:	ldrdeq	r4, [r3], -r8
   3468c:	strdeq	r4, [r3], -ip
   34690:	strdeq	r4, [r3], -ip
   34694:	strdeq	r4, [r3], -ip
   34698:	strdeq	r4, [r3], -ip
   3469c:	strdeq	r4, [r3], -ip
   346a0:	strdeq	r4, [r3], -ip
   346a4:	strdeq	r4, [r3], -ip
   346a8:	strdeq	r4, [r3], -ip
   346ac:	strdeq	r4, [r3], -ip
   346b0:	strdeq	r4, [r3], -ip
   346b4:	strdeq	r4, [r3], -ip
   346b8:	strdeq	r4, [r3], -ip
   346bc:	strdeq	r4, [r3], -ip
   346c0:	strdeq	r4, [r3], -ip
   346c4:	strdeq	r4, [r3], -ip
   346c8:	strdeq	r4, [r3], -ip
   346cc:	strdeq	r4, [r3], -ip
   346d0:	strdeq	r4, [r3], -ip
   346d4:	andeq	r4, r3, r8, lsl r6
   346d8:	sub	r2, ip, r1
   346dc:	mov	r3, #0
   346e0:	cmp	r2, #2
   346e4:	blt	34624 <flatcc_json_parser_space_ext@@Base+0x28>
   346e8:	ldrb	r2, [r1, #1]
   346ec:	sub	r2, r2, #10
   346f0:	clz	r2, r2
   346f4:	lsr	r3, r2, #5
   346f8:	b	34624 <flatcc_json_parser_space_ext@@Base+0x28>
   346fc:	ldr	r2, [r0, #20]
   34700:	cmp	r2, #0
   34704:	beq	34710 <flatcc_json_parser_space_ext@@Base+0x114>
   34708:	mov	r0, ip
   3470c:	bx	lr
   34710:	str	r1, [r0, #32]
   34714:	mov	r2, #5
   34718:	ldr	r3, [r0, #4]
   3471c:	sub	r1, r1, r3
   34720:	add	r1, r1, #1
   34724:	str	r1, [r0, #16]
   34728:	str	r2, [r0, #20]
   3472c:	mov	r0, ip
   34730:	bx	lr

00034734 <flatcc_json_parser_string_escape@@Base>:
   34734:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   34738:	add	fp, sp, #24
   3473c:	sub	r7, r2, r1
   34740:	cmp	r7, #2
   34744:	blt	3499c <flatcc_json_parser_string_escape@@Base+0x268>
   34748:	ldrb	r6, [r1]
   3474c:	cmp	r6, #92	; 0x5c
   34750:	bne	3499c <flatcc_json_parser_string_escape@@Base+0x268>
   34754:	ldrb	r6, [r1, #1]
   34758:	sub	r6, r6, #34	; 0x22
   3475c:	cmp	r6, #86	; 0x56
   34760:	bhi	3499c <flatcc_json_parser_string_escape@@Base+0x268>
   34764:	add	r5, pc, #0
   34768:	ldr	pc, [r5, r6, lsl #2]
   3476c:	andeq	r4, r3, r8, asr #17
   34770:	muleq	r3, ip, r9
   34774:	muleq	r3, ip, r9
   34778:	muleq	r3, ip, r9
   3477c:	muleq	r3, ip, r9
   34780:	muleq	r3, ip, r9
   34784:	muleq	r3, ip, r9
   34788:	muleq	r3, ip, r9
   3478c:	muleq	r3, ip, r9
   34790:	muleq	r3, ip, r9
   34794:	muleq	r3, ip, r9
   34798:	muleq	r3, ip, r9
   3479c:	muleq	r3, ip, r9
   347a0:	ldrdeq	r4, [r3], -ip
   347a4:	muleq	r3, ip, r9
   347a8:	muleq	r3, ip, r9
   347ac:	muleq	r3, ip, r9
   347b0:	muleq	r3, ip, r9
   347b4:	muleq	r3, ip, r9
   347b8:	muleq	r3, ip, r9
   347bc:	muleq	r3, ip, r9
   347c0:	muleq	r3, ip, r9
   347c4:	muleq	r3, ip, r9
   347c8:	muleq	r3, ip, r9
   347cc:	muleq	r3, ip, r9
   347d0:	muleq	r3, ip, r9
   347d4:	muleq	r3, ip, r9
   347d8:	muleq	r3, ip, r9
   347dc:	muleq	r3, ip, r9
   347e0:	muleq	r3, ip, r9
   347e4:	muleq	r3, ip, r9
   347e8:	muleq	r3, ip, r9
   347ec:	muleq	r3, ip, r9
   347f0:	muleq	r3, ip, r9
   347f4:	muleq	r3, ip, r9
   347f8:	muleq	r3, ip, r9
   347fc:	muleq	r3, ip, r9
   34800:	muleq	r3, ip, r9
   34804:	muleq	r3, ip, r9
   34808:	muleq	r3, ip, r9
   3480c:	muleq	r3, ip, r9
   34810:	muleq	r3, ip, r9
   34814:	muleq	r3, ip, r9
   34818:	muleq	r3, ip, r9
   3481c:	muleq	r3, ip, r9
   34820:	muleq	r3, ip, r9
   34824:	muleq	r3, ip, r9
   34828:	muleq	r3, ip, r9
   3482c:	muleq	r3, ip, r9
   34830:	muleq	r3, ip, r9
   34834:	muleq	r3, ip, r9
   34838:	muleq	r3, ip, r9
   3483c:	muleq	r3, ip, r9
   34840:	muleq	r3, ip, r9
   34844:	muleq	r3, ip, r9
   34848:	muleq	r3, ip, r9
   3484c:	muleq	r3, ip, r9
   34850:	muleq	r3, ip, r9
   34854:	strdeq	r4, [r3], -r0
   34858:	muleq	r3, ip, r9
   3485c:	muleq	r3, ip, r9
   34860:	muleq	r3, ip, r9
   34864:	muleq	r3, ip, r9
   34868:	muleq	r3, ip, r9
   3486c:	andeq	r4, r3, r4, lsl #18
   34870:	muleq	r3, ip, r9
   34874:	muleq	r3, ip, r9
   34878:	muleq	r3, ip, r9
   3487c:	andeq	r4, r3, r8, lsl r9
   34880:	muleq	r3, ip, r9
   34884:	muleq	r3, ip, r9
   34888:	muleq	r3, ip, r9
   3488c:	muleq	r3, ip, r9
   34890:	muleq	r3, ip, r9
   34894:	muleq	r3, ip, r9
   34898:	muleq	r3, ip, r9
   3489c:	andeq	r4, r3, ip, lsr #18
   348a0:	muleq	r3, ip, r9
   348a4:	muleq	r3, ip, r9
   348a8:	muleq	r3, ip, r9
   348ac:	andeq	r4, r3, r0, asr #18
   348b0:	muleq	r3, ip, r9
   348b4:	andeq	r4, r3, r4, asr r9
   348b8:	andeq	r4, r3, r8, ror #18
   348bc:	muleq	r3, ip, r9
   348c0:	muleq	r3, ip, r9
   348c4:	andeq	r4, r3, ip, lsl #19
   348c8:	movw	r0, #8705	; 0x2201
   348cc:	add	r2, r1, #2
   348d0:	strh	r0, [r3]
   348d4:	mov	r0, r2
   348d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   348dc:	movw	r0, #12033	; 0x2f01
   348e0:	add	r2, r1, #2
   348e4:	strh	r0, [r3]
   348e8:	mov	r0, r2
   348ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   348f0:	movw	r0, #23553	; 0x5c01
   348f4:	add	r2, r1, #2
   348f8:	strh	r0, [r3]
   348fc:	mov	r0, r2
   34900:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34904:	movw	r0, #2049	; 0x801
   34908:	add	r2, r1, #2
   3490c:	strh	r0, [r3]
   34910:	mov	r0, r2
   34914:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34918:	movw	r0, #3073	; 0xc01
   3491c:	add	r2, r1, #2
   34920:	strh	r0, [r3]
   34924:	mov	r0, r2
   34928:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3492c:	movw	r0, #2561	; 0xa01
   34930:	add	r2, r1, #2
   34934:	strh	r0, [r3]
   34938:	mov	r0, r2
   3493c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34940:	movw	r0, #3329	; 0xd01
   34944:	add	r2, r1, #2
   34948:	strh	r0, [r3]
   3494c:	mov	r0, r2
   34950:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34954:	movw	r0, #2305	; 0x901
   34958:	add	r2, r1, #2
   3495c:	strh	r0, [r3]
   34960:	mov	r0, r2
   34964:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34968:	cmp	r7, #5
   3496c:	ble	3499c <flatcc_json_parser_string_escape@@Base+0x268>
   34970:	ldrb	r7, [r1, #2]
   34974:	sub	r6, r7, #48	; 0x30
   34978:	uxtb	r6, r6
   3497c:	cmp	r6, #9
   34980:	bhi	349f8 <flatcc_json_parser_string_escape@@Base+0x2c4>
   34984:	lsl	ip, r7, #12
   34988:	b	34a18 <flatcc_json_parser_string_escape@@Base+0x2e4>
   3498c:	mov	r6, #1
   34990:	cmp	r7, #3
   34994:	strb	r6, [r3]
   34998:	bgt	349dc <flatcc_json_parser_string_escape@@Base+0x2a8>
   3499c:	mov	r7, #0
   349a0:	strb	r7, [r3]
   349a4:	ldr	r3, [r0, #20]
   349a8:	cmp	r3, #0
   349ac:	beq	349b8 <flatcc_json_parser_string_escape@@Base+0x284>
   349b0:	mov	r0, r2
   349b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   349b8:	str	r1, [r0, #32]
   349bc:	mov	r3, #18
   349c0:	ldr	r7, [r0, #4]
   349c4:	sub	r1, r1, r7
   349c8:	add	r1, r1, #1
   349cc:	str	r1, [r0, #16]
   349d0:	str	r3, [r0, #20]
   349d4:	mov	r0, r2
   349d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   349dc:	ldrb	r7, [r1, #2]
   349e0:	sub	r6, r7, #48	; 0x30
   349e4:	uxtb	r6, r6
   349e8:	cmp	r6, #9
   349ec:	bhi	34a34 <flatcc_json_parser_string_escape@@Base+0x300>
   349f0:	lsl	r7, r7, #4
   349f4:	b	34a50 <flatcc_json_parser_string_escape@@Base+0x31c>
   349f8:	orr	r6, r7, #32
   349fc:	sub	r6, r6, #97	; 0x61
   34a00:	uxtb	r6, r6
   34a04:	cmp	r6, #5
   34a08:	bhi	3499c <flatcc_json_parser_string_escape@@Base+0x268>
   34a0c:	movw	r6, #36864	; 0x9000
   34a10:	movt	r6, #65535	; 0xffff
   34a14:	add	ip, r6, r7, lsl #12
   34a18:	ldrb	lr, [r1, #3]
   34a1c:	sub	r4, lr, #48	; 0x30
   34a20:	uxtb	r4, r4
   34a24:	cmp	r4, #10
   34a28:	bcs	34a90 <flatcc_json_parser_string_escape@@Base+0x35c>
   34a2c:	mov	r8, #53248	; 0xd000
   34a30:	b	34aa8 <flatcc_json_parser_string_escape@@Base+0x374>
   34a34:	orr	r6, r7, #32
   34a38:	sub	r6, r6, #97	; 0x61
   34a3c:	uxtb	r6, r6
   34a40:	cmp	r6, #5
   34a44:	bhi	3499c <flatcc_json_parser_string_escape@@Base+0x268>
   34a48:	mvn	r6, #111	; 0x6f
   34a4c:	add	r7, r6, r7, lsl #4
   34a50:	ldrb	r5, [r1, #3]
   34a54:	sub	r6, r5, #48	; 0x30
   34a58:	uxtb	r4, r6
   34a5c:	cmp	r4, #10
   34a60:	bcc	34a7c <flatcc_json_parser_string_escape@@Base+0x348>
   34a64:	orr	r6, r5, #32
   34a68:	sub	r5, r6, #97	; 0x61
   34a6c:	uxtb	r5, r5
   34a70:	cmp	r5, #5
   34a74:	bhi	3499c <flatcc_json_parser_string_escape@@Base+0x268>
   34a78:	sub	r6, r6, #87	; 0x57
   34a7c:	orr	r0, r6, r7
   34a80:	add	r2, r1, #4
   34a84:	strb	r0, [r3, #1]
   34a88:	mov	r0, r2
   34a8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34a90:	orr	lr, lr, #32
   34a94:	mov	r8, #43264	; 0xa900
   34a98:	sub	r4, lr, #97	; 0x61
   34a9c:	uxtb	r4, r4
   34aa0:	cmp	r4, #6
   34aa4:	bcs	3499c <flatcc_json_parser_string_escape@@Base+0x268>
   34aa8:	ldrb	r5, [r1, #4]
   34aac:	sub	r4, r5, #48	; 0x30
   34ab0:	uxtb	r4, r4
   34ab4:	cmp	r4, #10
   34ab8:	bcs	34ac4 <flatcc_json_parser_string_escape@@Base+0x390>
   34abc:	mov	r9, #64768	; 0xfd00
   34ac0:	b	34adc <flatcc_json_parser_string_escape@@Base+0x3a8>
   34ac4:	orr	r5, r5, #32
   34ac8:	movw	r9, #64144	; 0xfa90
   34acc:	sub	r4, r5, #97	; 0x61
   34ad0:	uxtb	r4, r4
   34ad4:	cmp	r4, #6
   34ad8:	bcs	3499c <flatcc_json_parser_string_escape@@Base+0x268>
   34adc:	ldrb	r7, [r1, #5]
   34ae0:	sub	r4, r7, #48	; 0x30
   34ae4:	uxtb	r4, r4
   34ae8:	cmp	r4, #10
   34aec:	bcs	34afc <flatcc_json_parser_string_escape@@Base+0x3c8>
   34af0:	mvn	r0, #86	; 0x56
   34af4:	add	r4, r0, #39	; 0x27
   34af8:	b	34b14 <flatcc_json_parser_string_escape@@Base+0x3e0>
   34afc:	orr	r7, r7, #32
   34b00:	movw	r4, #65449	; 0xffa9
   34b04:	sub	r6, r7, #97	; 0x61
   34b08:	uxtb	r6, r6
   34b0c:	cmp	r6, #6
   34b10:	bcs	3499c <flatcc_json_parser_string_escape@@Base+0x268>
   34b14:	add	r0, r8, lr, lsl #8
   34b18:	add	r2, r9, r5, lsl #4
   34b1c:	orr	r0, r0, ip
   34b20:	orr	r0, r0, r2
   34b24:	add	r2, r4, r7
   34b28:	orr	r0, r0, r2
   34b2c:	uxth	r7, r0
   34b30:	cmp	r7, #127	; 0x7f
   34b34:	bhi	34b50 <flatcc_json_parser_string_escape@@Base+0x41c>
   34b38:	mov	r2, #1
   34b3c:	strb	r2, [r3]
   34b40:	strb	r0, [r3, r2]
   34b44:	add	r2, r1, #6
   34b48:	mov	r0, r2
   34b4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34b50:	mov	r2, #0
   34b54:	cmp	r2, r7, lsr #11
   34b58:	bne	34b74 <flatcc_json_parser_string_escape@@Base+0x440>
   34b5c:	mov	r7, #192	; 0xc0
   34b60:	mov	r2, #2
   34b64:	orr	r7, r7, r0, lsr #6
   34b68:	strb	r2, [r3]
   34b6c:	strb	r7, [r3, #1]
   34b70:	b	34b98 <flatcc_json_parser_string_escape@@Base+0x464>
   34b74:	mov	r6, #224	; 0xe0
   34b78:	mov	r2, #3
   34b7c:	orr	r6, r6, r7, lsr #12
   34b80:	strb	r2, [r3]
   34b84:	lsr	r7, r7, #6
   34b88:	strb	r6, [r3, #1]
   34b8c:	mov	r6, #2
   34b90:	bfi	r7, r6, #6, #26
   34b94:	strb	r7, [r3, #2]
   34b98:	mvn	r7, #-67108863	; 0xfc000001
   34b9c:	bfi	r0, r7, #6, #26
   34ba0:	strb	r0, [r3, r2]
   34ba4:	add	r2, r1, #6
   34ba8:	mov	r0, r2
   34bac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00034bb0 <flatcc_json_parser_skip_constant@@Base>:
   34bb0:	push	{r4, r5, r6, sl, fp, lr}
   34bb4:	add	fp, sp, #16
   34bb8:	cmp	r1, r2
   34bbc:	beq	34c70 <flatcc_json_parser_skip_constant@@Base+0xc0>
   34bc0:	mov	r4, r2
   34bc4:	mov	r5, r0
   34bc8:	ldrsb	r0, [r1]
   34bcc:	mov	r6, r1
   34bd0:	cmp	r0, #0
   34bd4:	bmi	34be8 <flatcc_json_parser_skip_constant@@Base+0x38>
   34bd8:	uxtb	r0, r0
   34bdc:	cmp	r0, #95	; 0x5f
   34be0:	cmpne	r0, #46	; 0x2e
   34be4:	bne	34bf8 <flatcc_json_parser_skip_constant@@Base+0x48>
   34be8:	add	r1, r6, #1
   34bec:	cmp	r1, r4
   34bf0:	bne	34bc8 <flatcc_json_parser_skip_constant@@Base+0x18>
   34bf4:	b	34c68 <flatcc_json_parser_skip_constant@@Base+0xb8>
   34bf8:	sub	r1, r0, #48	; 0x30
   34bfc:	uxtb	r1, r1
   34c00:	cmp	r1, #9
   34c04:	bls	34be8 <flatcc_json_parser_skip_constant@@Base+0x38>
   34c08:	orr	r1, r0, #32
   34c0c:	sub	r1, r1, #97	; 0x61
   34c10:	uxtb	r1, r1
   34c14:	cmp	r1, #25
   34c18:	bls	34be8 <flatcc_json_parser_skip_constant@@Base+0x38>
   34c1c:	sub	r1, r4, r6
   34c20:	cmp	r1, #2
   34c24:	blt	34c44 <flatcc_json_parser_skip_constant@@Base+0x94>
   34c28:	cmp	r0, #32
   34c2c:	bhi	34c60 <flatcc_json_parser_skip_constant@@Base+0xb0>
   34c30:	bne	34c44 <flatcc_json_parser_skip_constant@@Base+0x94>
   34c34:	mov	r1, r6
   34c38:	ldrb	r0, [r1, #1]!
   34c3c:	cmp	r0, #32
   34c40:	bhi	34bec <flatcc_json_parser_skip_constant@@Base+0x3c>
   34c44:	mov	r0, r5
   34c48:	mov	r1, r6
   34c4c:	mov	r2, r4
   34c50:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   34c54:	mov	r1, r0
   34c58:	cmp	r0, r6
   34c5c:	bne	34bec <flatcc_json_parser_skip_constant@@Base+0x3c>
   34c60:	mov	r0, r6
   34c64:	pop	{r4, r5, r6, sl, fp, pc}
   34c68:	mov	r0, r4
   34c6c:	pop	{r4, r5, r6, sl, fp, pc}
   34c70:	mov	r0, r1
   34c74:	pop	{r4, r5, r6, sl, fp, pc}

00034c78 <flatcc_json_parser_match_constant@@Base>:
   34c78:	push	{r4, r5, fp, lr}
   34c7c:	add	fp, sp, #8
   34c80:	ldr	r5, [fp, #8]
   34c84:	sub	r4, r2, r1
   34c88:	cmp	r4, r3
   34c8c:	ble	34d08 <flatcc_json_parser_match_constant@@Base+0x90>
   34c90:	add	ip, r1, r3
   34c94:	ldrb	r4, [ip]
   34c98:	cmp	r4, #92	; 0x5c
   34c9c:	beq	34d18 <flatcc_json_parser_match_constant@@Base+0xa0>
   34ca0:	cmp	r4, #34	; 0x22
   34ca4:	beq	34cd8 <flatcc_json_parser_match_constant@@Base+0x60>
   34ca8:	cmp	r4, #32
   34cac:	bne	34d08 <flatcc_json_parser_match_constant@@Base+0x90>
   34cb0:	add	r1, r1, r3
   34cb4:	add	r1, r1, #1
   34cb8:	cmp	r2, r1
   34cbc:	beq	34d34 <flatcc_json_parser_match_constant@@Base+0xbc>
   34cc0:	ldrb	r3, [r1], #1
   34cc4:	cmp	r3, #32
   34cc8:	beq	34cb8 <flatcc_json_parser_match_constant@@Base+0x40>
   34ccc:	cmp	r3, #34	; 0x22
   34cd0:	bne	34d94 <flatcc_json_parser_match_constant@@Base+0x11c>
   34cd4:	sub	ip, r1, #1
   34cd8:	mvn	r2, ip
   34cdc:	add	r1, ip, #1
   34ce0:	cmp	r2, #2
   34ce4:	blt	34d78 <flatcc_json_parser_match_constant@@Base+0x100>
   34ce8:	ldrb	r2, [r1]
   34cec:	cmp	r2, #32
   34cf0:	bls	34d68 <flatcc_json_parser_match_constant@@Base+0xf0>
   34cf4:	mov	ip, r1
   34cf8:	mov	r0, #0
   34cfc:	str	r0, [r5]
   34d00:	mov	r0, ip
   34d04:	pop	{r4, r5, fp, pc}
   34d08:	mov	r0, #0
   34d0c:	str	r0, [r5]
   34d10:	mov	r0, r1
   34d14:	pop	{r4, r5, fp, pc}
   34d18:	mov	r1, #0
   34d1c:	str	r1, [r5]
   34d20:	ldr	r1, [r0, #20]
   34d24:	cmp	r1, #0
   34d28:	beq	34d44 <flatcc_json_parser_match_constant@@Base+0xcc>
   34d2c:	mov	r0, r2
   34d30:	pop	{r4, r5, fp, pc}
   34d34:	mov	r0, #0
   34d38:	str	r0, [r5]
   34d3c:	mov	r0, r2
   34d40:	pop	{r4, r5, fp, pc}
   34d44:	str	ip, [r0, #32]
   34d48:	mov	r1, #18
   34d4c:	ldr	r3, [r0, #4]
   34d50:	sub	r3, ip, r3
   34d54:	add	r3, r3, #1
   34d58:	str	r3, [r0, #16]
   34d5c:	str	r1, [r0, #20]
   34d60:	mov	r0, r2
   34d64:	pop	{r4, r5, fp, pc}
   34d68:	bne	34d78 <flatcc_json_parser_match_constant@@Base+0x100>
   34d6c:	ldrb	r2, [ip, #2]!
   34d70:	cmp	r2, #32
   34d74:	bhi	34d84 <flatcc_json_parser_match_constant@@Base+0x10c>
   34d78:	mov	r2, #0
   34d7c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   34d80:	mov	ip, r0
   34d84:	mov	r0, #0
   34d88:	str	r0, [r5]
   34d8c:	mov	r0, ip
   34d90:	pop	{r4, r5, fp, pc}
   34d94:	mov	r0, #1
   34d98:	sub	ip, r1, #1
   34d9c:	str	r0, [r5]
   34da0:	mov	r0, ip
   34da4:	pop	{r4, r5, fp, pc}

00034da8 <flatcc_json_parser_unmatched_symbol@@Base>:
   34da8:	push	{r4, r5, fp, lr}
   34dac:	add	fp, sp, #8
   34db0:	mov	r5, r0
   34db4:	ldrb	r0, [r0, #8]
   34db8:	mov	r4, r2
   34dbc:	tst	r0, #1
   34dc0:	bne	34de4 <flatcc_json_parser_unmatched_symbol@@Base+0x3c>
   34dc4:	ldr	r0, [r5, #20]
   34dc8:	cmp	r0, #0
   34dcc:	bne	34f18 <flatcc_json_parser_unmatched_symbol@@Base+0x170>
   34dd0:	str	r1, [r5, #32]
   34dd4:	mov	r0, #13
   34dd8:	ldr	r2, [r5, #4]
   34ddc:	sub	r1, r1, r2
   34de0:	b	34f30 <flatcc_json_parser_unmatched_symbol@@Base+0x188>
   34de4:	cmp	r1, r4
   34de8:	bne	34e04 <flatcc_json_parser_unmatched_symbol@@Base+0x5c>
   34dec:	b	34e30 <flatcc_json_parser_unmatched_symbol@@Base+0x88>
   34df0:	cmp	r0, #34	; 0x22
   34df4:	beq	34e98 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   34df8:	add	r1, r1, #1
   34dfc:	cmp	r1, r4
   34e00:	beq	34e2c <flatcc_json_parser_unmatched_symbol@@Base+0x84>
   34e04:	ldrb	r0, [r1]
   34e08:	cmp	r0, #92	; 0x5c
   34e0c:	bne	34df0 <flatcc_json_parser_unmatched_symbol@@Base+0x48>
   34e10:	sub	r0, r4, r1
   34e14:	cmp	r0, #2
   34e18:	blt	34e30 <flatcc_json_parser_unmatched_symbol@@Base+0x88>
   34e1c:	add	r1, r1, #1
   34e20:	add	r1, r1, #1
   34e24:	cmp	r1, r4
   34e28:	bne	34e04 <flatcc_json_parser_unmatched_symbol@@Base+0x5c>
   34e2c:	mov	r1, r4
   34e30:	ldr	r0, [r5, #20]
   34e34:	mov	r2, r4
   34e38:	cmp	r0, #0
   34e3c:	beq	34e68 <flatcc_json_parser_unmatched_symbol@@Base+0xc0>
   34e40:	sub	r0, r4, r2
   34e44:	cmp	r0, #2
   34e48:	blt	34ec0 <flatcc_json_parser_unmatched_symbol@@Base+0x118>
   34e4c:	ldrb	r0, [r2]
   34e50:	cmp	r0, #32
   34e54:	bls	34eac <flatcc_json_parser_unmatched_symbol@@Base+0x104>
   34e58:	mov	r3, r2
   34e5c:	cmp	r3, r4
   34e60:	bne	34edc <flatcc_json_parser_unmatched_symbol@@Base+0x134>
   34e64:	b	34f0c <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   34e68:	str	r1, [r5, #32]
   34e6c:	mov	r0, #20
   34e70:	ldr	r2, [r5, #4]
   34e74:	sub	r1, r1, r2
   34e78:	mov	r2, r4
   34e7c:	add	r1, r1, #1
   34e80:	str	r1, [r5, #16]
   34e84:	str	r0, [r5, #20]
   34e88:	sub	r0, r4, r2
   34e8c:	cmp	r0, #2
   34e90:	bge	34e4c <flatcc_json_parser_unmatched_symbol@@Base+0xa4>
   34e94:	b	34ec0 <flatcc_json_parser_unmatched_symbol@@Base+0x118>
   34e98:	add	r2, r1, #1
   34e9c:	sub	r0, r4, r2
   34ea0:	cmp	r0, #2
   34ea4:	bge	34e4c <flatcc_json_parser_unmatched_symbol@@Base+0xa4>
   34ea8:	b	34ec0 <flatcc_json_parser_unmatched_symbol@@Base+0x118>
   34eac:	bne	34ec0 <flatcc_json_parser_unmatched_symbol@@Base+0x118>
   34eb0:	mov	r3, r2
   34eb4:	ldrb	r0, [r3, #1]!
   34eb8:	cmp	r0, #32
   34ebc:	bhi	34ed4 <flatcc_json_parser_unmatched_symbol@@Base+0x12c>
   34ec0:	mov	r1, r2
   34ec4:	mov	r0, r5
   34ec8:	mov	r2, r4
   34ecc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   34ed0:	mov	r3, r0
   34ed4:	cmp	r3, r4
   34ed8:	beq	34f0c <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   34edc:	ldrb	r0, [r3]
   34ee0:	cmp	r0, #58	; 0x3a
   34ee4:	bne	34f0c <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   34ee8:	add	r1, r3, #1
   34eec:	sub	r0, r4, r1
   34ef0:	cmp	r0, #2
   34ef4:	blt	34f54 <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   34ef8:	ldrb	r0, [r1]
   34efc:	cmp	r0, #32
   34f00:	bls	34f44 <flatcc_json_parser_unmatched_symbol@@Base+0x19c>
   34f04:	mov	r3, r1
   34f08:	b	34f64 <flatcc_json_parser_unmatched_symbol@@Base+0x1bc>
   34f0c:	ldr	r0, [r5, #20]
   34f10:	cmp	r0, #0
   34f14:	beq	34f20 <flatcc_json_parser_unmatched_symbol@@Base+0x178>
   34f18:	mov	r0, r4
   34f1c:	pop	{r4, r5, fp, pc}
   34f20:	str	r3, [r5, #32]
   34f24:	mov	r0, #4
   34f28:	ldr	r1, [r5, #4]
   34f2c:	sub	r1, r3, r1
   34f30:	add	r1, r1, #1
   34f34:	str	r1, [r5, #16]
   34f38:	str	r0, [r5, #20]
   34f3c:	mov	r0, r4
   34f40:	pop	{r4, r5, fp, pc}
   34f44:	bne	34f54 <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   34f48:	ldrb	r0, [r3, #2]!
   34f4c:	cmp	r0, #32
   34f50:	bhi	34f64 <flatcc_json_parser_unmatched_symbol@@Base+0x1bc>
   34f54:	mov	r0, r5
   34f58:	mov	r2, r4
   34f5c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   34f60:	mov	r3, r0
   34f64:	mov	r0, r5
   34f68:	mov	r1, r3
   34f6c:	mov	r2, r4
   34f70:	pop	{r4, r5, fp, lr}
   34f74:	b	34f78 <flatcc_json_parser_generic_json@@Base>

00034f78 <flatcc_json_parser_generic_json@@Base>:
   34f78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34f7c:	add	fp, sp, #28
   34f80:	sub	sp, sp, #548	; 0x224
   34f84:	mov	r7, r1
   34f88:	cmp	r1, r2
   34f8c:	beq	35f14 <flatcc_json_parser_generic_json@@Base+0xf9c>
   34f90:	add	r1, sp, #32
   34f94:	mov	r8, r0
   34f98:	mov	r4, r2
   34f9c:	mov	r9, #0
   34fa0:	sub	r0, r1, #1
   34fa4:	add	r5, r8, #16
   34fa8:	add	sl, r8, #4
   34fac:	add	r6, r8, #20
   34fb0:	str	r0, [sp, #24]
   34fb4:	add	r0, r2, #1
   34fb8:	str	r5, [sp, #8]
   34fbc:	str	sl, [sp, #12]
   34fc0:	str	r6, [sp, #16]
   34fc4:	str	r0, [sp, #4]
   34fc8:	add	r0, r8, #32
   34fcc:	str	r0, [sp, #20]
   34fd0:	mov	r0, r1
   34fd4:	cmp	r9, #0
   34fd8:	beq	35134 <flatcc_json_parser_generic_json@@Base+0x1bc>
   34fdc:	ldrb	r0, [r0, #-1]
   34fe0:	cmp	r0, #125	; 0x7d
   34fe4:	bne	35134 <flatcc_json_parser_generic_json@@Base+0x1bc>
   34fe8:	ldrb	r0, [r7]
   34fec:	cmp	r0, #34	; 0x22
   34ff0:	bne	35058 <flatcc_json_parser_generic_json@@Base+0xe0>
   34ff4:	add	r0, r7, #1
   34ff8:	mov	r2, r4
   34ffc:	cmp	r0, r4
   35000:	bne	3502c <flatcc_json_parser_generic_json@@Base+0xb4>
   35004:	ldr	r0, [r6]
   35008:	mov	r1, r4
   3500c:	cmp	r0, #0
   35010:	bne	3509c <flatcc_json_parser_generic_json@@Base+0x124>
   35014:	b	358ec <flatcc_json_parser_generic_json@@Base+0x974>
   35018:	cmp	r1, #34	; 0x22
   3501c:	beq	356d4 <flatcc_json_parser_generic_json@@Base+0x75c>
   35020:	add	r0, r0, #1
   35024:	cmp	r0, r4
   35028:	beq	35088 <flatcc_json_parser_generic_json@@Base+0x110>
   3502c:	ldrb	r1, [r0]
   35030:	cmp	r1, #92	; 0x5c
   35034:	bne	35018 <flatcc_json_parser_generic_json@@Base+0xa0>
   35038:	sub	r1, r4, r0
   3503c:	cmp	r1, #2
   35040:	blt	358d8 <flatcc_json_parser_generic_json@@Base+0x960>
   35044:	add	r0, r0, #1
   35048:	add	r0, r0, #1
   3504c:	cmp	r0, r4
   35050:	bne	3502c <flatcc_json_parser_generic_json@@Base+0xb4>
   35054:	b	35088 <flatcc_json_parser_generic_json@@Base+0x110>
   35058:	ldr	r0, [r6]
   3505c:	mov	r1, r4
   35060:	cmp	r0, #0
   35064:	bne	3509c <flatcc_json_parser_generic_json@@Base+0x124>
   35068:	mov	r0, #5
   3506c:	str	r0, [r6]
   35070:	ldr	r0, [sl]
   35074:	sub	r0, r7, r0
   35078:	add	r0, r0, #1
   3507c:	str	r0, [r5]
   35080:	ldr	r0, [sp, #20]
   35084:	str	r7, [r0]
   35088:	mov	r2, r4
   3508c:	ldr	r0, [r6]
   35090:	mov	r1, r4
   35094:	cmp	r0, #0
   35098:	beq	358ec <flatcc_json_parser_generic_json@@Base+0x974>
   3509c:	sub	r0, r4, r1
   350a0:	cmp	r0, #2
   350a4:	blt	3591c <flatcc_json_parser_generic_json@@Base+0x9a4>
   350a8:	ldrb	r0, [r1]
   350ac:	cmp	r0, #32
   350b0:	bls	350fc <flatcc_json_parser_generic_json@@Base+0x184>
   350b4:	mov	r7, r1
   350b8:	cmp	r7, r4
   350bc:	beq	35fcc <flatcc_json_parser_generic_json@@Base+0x1054>
   350c0:	ldrb	r0, [r7]
   350c4:	cmp	r0, #58	; 0x3a
   350c8:	bne	35fe4 <flatcc_json_parser_generic_json@@Base+0x106c>
   350cc:	add	r1, r7, #1
   350d0:	sub	r0, r4, r1
   350d4:	cmp	r0, #2
   350d8:	blt	35124 <flatcc_json_parser_generic_json@@Base+0x1ac>
   350dc:	ldrb	sl, [r1]
   350e0:	cmp	sl, #32
   350e4:	bls	35114 <flatcc_json_parser_generic_json@@Base+0x19c>
   350e8:	mov	r7, r1
   350ec:	sub	r0, sl, #34	; 0x22
   350f0:	cmp	r0, #89	; 0x59
   350f4:	bls	35144 <flatcc_json_parser_generic_json@@Base+0x1cc>
   350f8:	b	35f24 <flatcc_json_parser_generic_json@@Base+0xfac>
   350fc:	bne	3591c <flatcc_json_parser_generic_json@@Base+0x9a4>
   35100:	mov	r7, r1
   35104:	ldrb	r0, [r7, #1]!
   35108:	cmp	r0, #32
   3510c:	bhi	3592c <flatcc_json_parser_generic_json@@Base+0x9b4>
   35110:	b	3591c <flatcc_json_parser_generic_json@@Base+0x9a4>
   35114:	bne	35124 <flatcc_json_parser_generic_json@@Base+0x1ac>
   35118:	ldrb	sl, [r7, #2]!
   3511c:	cmp	sl, #32
   35120:	bhi	35138 <flatcc_json_parser_generic_json@@Base+0x1c0>
   35124:	mov	r0, r8
   35128:	mov	r2, r4
   3512c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   35130:	mov	r7, r0
   35134:	ldrb	sl, [r7]
   35138:	sub	r0, sl, #34	; 0x22
   3513c:	cmp	r0, #89	; 0x59
   35140:	bhi	35f24 <flatcc_json_parser_generic_json@@Base+0xfac>
   35144:	add	r1, pc, #0
   35148:	ldr	pc, [r1, r0, lsl #2]
   3514c:	andeq	r5, r3, r8, ror #9
   35150:	andeq	r5, r3, r4, lsr #30
   35154:	andeq	r5, r3, r4, lsr #30
   35158:	andeq	r5, r3, r4, lsr #30
   3515c:	andeq	r5, r3, r4, lsr #30
   35160:	andeq	r5, r3, r4, lsr #30
   35164:	andeq	r5, r3, r4, lsr #30
   35168:	andeq	r5, r3, r4, lsr #30
   3516c:	andeq	r5, r3, r4, lsr #30
   35170:	andeq	r5, r3, r4, lsr #30
   35174:	andeq	r5, r3, r4, lsr #30
   35178:			; <UNDEFINED> instruction: 0x000352b4
   3517c:	andeq	r5, r3, r4, lsr #30
   35180:	andeq	r5, r3, r4, lsr #30
   35184:			; <UNDEFINED> instruction: 0x000352b4
   35188:			; <UNDEFINED> instruction: 0x000352b4
   3518c:			; <UNDEFINED> instruction: 0x000352b4
   35190:			; <UNDEFINED> instruction: 0x000352b4
   35194:			; <UNDEFINED> instruction: 0x000352b4
   35198:			; <UNDEFINED> instruction: 0x000352b4
   3519c:			; <UNDEFINED> instruction: 0x000352b4
   351a0:			; <UNDEFINED> instruction: 0x000352b4
   351a4:			; <UNDEFINED> instruction: 0x000352b4
   351a8:			; <UNDEFINED> instruction: 0x000352b4
   351ac:	andeq	r5, r3, r4, lsr #30
   351b0:	andeq	r5, r3, r4, lsr #30
   351b4:	andeq	r5, r3, r4, lsr #30
   351b8:	andeq	r5, r3, r4, lsr #30
   351bc:	andeq	r5, r3, r4, lsr #30
   351c0:	andeq	r5, r3, r4, lsr #30
   351c4:	andeq	r5, r3, r4, lsr #30
   351c8:	andeq	r5, r3, r4, lsr #30
   351cc:	andeq	r5, r3, r4, lsr #30
   351d0:	andeq	r5, r3, r4, lsr #30
   351d4:	andeq	r5, r3, r4, lsr #30
   351d8:	andeq	r5, r3, r4, lsr #30
   351dc:	andeq	r5, r3, r4, lsr #30
   351e0:	andeq	r5, r3, r4, lsr #30
   351e4:	andeq	r5, r3, r4, lsr #30
   351e8:	andeq	r5, r3, r4, lsr #30
   351ec:	andeq	r5, r3, r4, lsr #30
   351f0:	andeq	r5, r3, r4, lsr #30
   351f4:	andeq	r5, r3, r4, lsr #30
   351f8:	andeq	r5, r3, r4, lsr #30
   351fc:	andeq	r5, r3, r4, lsr #30
   35200:	andeq	r5, r3, r4, lsr #30
   35204:	andeq	r5, r3, r4, lsr #30
   35208:	andeq	r5, r3, r4, lsr #30
   3520c:	andeq	r5, r3, r4, lsr #30
   35210:	andeq	r5, r3, r4, lsr #30
   35214:	andeq	r5, r3, r4, lsr #30
   35218:	andeq	r5, r3, r4, lsr #30
   3521c:	andeq	r5, r3, r4, lsr #30
   35220:	andeq	r5, r3, r4, lsr #30
   35224:	andeq	r5, r3, r4, lsr #30
   35228:	andeq	r5, r3, r4, lsr #30
   3522c:	andeq	r5, r3, r4, lsr #30
   35230:	andeq	r5, r3, r8, lsl #12
   35234:	andeq	r5, r3, r4, lsr #30
   35238:	andeq	r5, r3, r4, lsr #30
   3523c:	andeq	r5, r3, r4, lsr #30
   35240:	andeq	r5, r3, r4, lsr #30
   35244:	andeq	r5, r3, r4, lsr #30
   35248:	andeq	r5, r3, r4, lsr #30
   3524c:	andeq	r5, r3, r4, lsr #30
   35250:	andeq	r5, r3, r4, lsr #30
   35254:	andeq	r5, r3, r4, lsr #30
   35258:	andeq	r5, r3, r4, lsr #30
   3525c:	andeq	r5, r3, ip, lsr #7
   35260:	andeq	r5, r3, r4, lsr #30
   35264:	andeq	r5, r3, r4, lsr #30
   35268:	andeq	r5, r3, r4, lsr #30
   3526c:	andeq	r5, r3, r4, lsr #30
   35270:	andeq	r5, r3, r4, lsr #30
   35274:	andeq	r5, r3, r4, lsr #30
   35278:	andeq	r5, r3, r4, lsr #30
   3527c:	andeq	r5, r3, r4, asr r6
   35280:	andeq	r5, r3, r4, lsr #30
   35284:	andeq	r5, r3, r4, lsr #30
   35288:	andeq	r5, r3, r4, lsr #30
   3528c:	andeq	r5, r3, r4, lsr #30
   35290:	andeq	r5, r3, r4, lsr #30
   35294:	andeq	r5, r3, ip, lsr #7
   35298:	andeq	r5, r3, r4, lsr #30
   3529c:	andeq	r5, r3, r4, lsr #30
   352a0:	andeq	r5, r3, r4, lsr #30
   352a4:	andeq	r5, r3, r4, lsr #30
   352a8:	andeq	r5, r3, r4, lsr #30
   352ac:	andeq	r5, r3, r4, lsr #30
   352b0:	andeq	r5, r3, r8, lsl #13
   352b4:	cmp	r7, r4
   352b8:	beq	3534c <flatcc_json_parser_generic_json@@Base+0x3d4>
   352bc:	cmp	sl, #45	; 0x2d
   352c0:	bne	352d4 <flatcc_json_parser_generic_json@@Base+0x35c>
   352c4:	add	r7, r7, #1
   352c8:	cmp	r7, r4
   352cc:	beq	354cc <flatcc_json_parser_generic_json@@Base+0x554>
   352d0:	ldrb	sl, [r7]
   352d4:	cmp	sl, #48	; 0x30
   352d8:	bne	3535c <flatcc_json_parser_generic_json@@Base+0x3e4>
   352dc:	ldr	sl, [sp, #12]
   352e0:	ldr	r6, [sp, #16]
   352e4:	ldr	r5, [sp, #8]
   352e8:	add	r1, r7, #1
   352ec:	cmp	r1, r4
   352f0:	mov	r2, r4
   352f4:	beq	35bd4 <flatcc_json_parser_generic_json@@Base+0xc5c>
   352f8:	ldrb	r0, [r1]
   352fc:	cmp	r0, #46	; 0x2e
   35300:	bne	3571c <flatcc_json_parser_generic_json@@Base+0x7a4>
   35304:	mov	r0, r1
   35308:	ldrb	r2, [r0, #1]!
   3530c:	sub	r2, r2, #48	; 0x30
   35310:	uxtb	r2, r2
   35314:	cmp	r2, #10
   35318:	bcc	356e8 <flatcc_json_parser_generic_json@@Base+0x770>
   3531c:	ldr	r1, [r6]
   35320:	cmp	r1, #0
   35324:	bne	35be0 <flatcc_json_parser_generic_json@@Base+0xc68>
   35328:	mov	r1, #6
   3532c:	str	r1, [r6]
   35330:	ldr	r1, [sl]
   35334:	sub	r1, r0, r1
   35338:	add	r1, r1, #1
   3533c:	str	r1, [r5]
   35340:	ldr	r1, [sp, #20]
   35344:	str	r0, [r1]
   35348:	b	35be0 <flatcc_json_parser_generic_json@@Base+0xc68>
   3534c:	ldr	sl, [sp, #12]
   35350:	ldr	r6, [sp, #16]
   35354:	ldr	r5, [sp, #8]
   35358:	b	35be0 <flatcc_json_parser_generic_json@@Base+0xc68>
   3535c:	sub	r0, sl, #49	; 0x31
   35360:	uxtb	r0, r0
   35364:	cmp	r0, #8
   35368:	bls	3548c <flatcc_json_parser_generic_json@@Base+0x514>
   3536c:	ldr	r6, [sp, #16]
   35370:	ldr	sl, [sp, #12]
   35374:	ldr	r0, [r6]
   35378:	cmp	r0, #0
   3537c:	bne	358d0 <flatcc_json_parser_generic_json@@Base+0x958>
   35380:	mov	r0, #6
   35384:	ldr	r5, [sp, #8]
   35388:	mov	r1, r4
   3538c:	str	r0, [r6]
   35390:	ldr	r0, [sl]
   35394:	sub	r0, r7, r0
   35398:	add	r0, r0, #1
   3539c:	str	r0, [r5]
   353a0:	ldr	r0, [sp, #20]
   353a4:	str	r7, [r0]
   353a8:	b	35be4 <flatcc_json_parser_generic_json@@Base+0xc6c>
   353ac:	sub	r5, r4, r7
   353b0:	cmp	r5, #4
   353b4:	blt	353f8 <flatcc_json_parser_generic_json@@Base+0x480>
   353b8:	movw	r1, #36412	; 0x8e3c
   353bc:	mov	r0, r7
   353c0:	mov	r2, #4
   353c4:	movt	r1, #4
   353c8:	bl	14ebc <bcmp@plt>
   353cc:	cmp	r0, #0
   353d0:	beq	358b4 <flatcc_json_parser_generic_json@@Base+0x93c>
   353d4:	cmp	r5, #5
   353d8:	blt	353f8 <flatcc_json_parser_generic_json@@Base+0x480>
   353dc:	movw	r1, #36417	; 0x8e41
   353e0:	mov	r0, r7
   353e4:	mov	r2, #5
   353e8:	movt	r1, #4
   353ec:	bl	14ebc <bcmp@plt>
   353f0:	cmp	r0, #0
   353f4:	beq	35ba4 <flatcc_json_parser_generic_json@@Base+0xc2c>
   353f8:	cmp	r7, r4
   353fc:	mov	r1, r4
   35400:	beq	35ba8 <flatcc_json_parser_generic_json@@Base+0xc30>
   35404:	sub	r0, sl, #48	; 0x30
   35408:	mov	r2, #1
   3540c:	uxtb	r1, r0
   35410:	mov	r0, #0
   35414:	cmp	r1, #9
   35418:	bhi	3589c <flatcc_json_parser_generic_json@@Base+0x924>
   3541c:	add	r1, r7, #1
   35420:	mov	r3, #0
   35424:	mov	r2, #0
   35428:	add	r6, r2, r2, lsl #2
   3542c:	uxtb	r0, sl
   35430:	mov	r5, #10
   35434:	lsl	r6, r6, #1
   35438:	umlal	r0, r6, r3, r5
   3543c:	subs	r0, r0, #48	; 0x30
   35440:	sbc	ip, r6, #0
   35444:	subs	r3, r0, r3
   35448:	sbcs	r2, ip, r2
   3544c:	bcc	35a2c <flatcc_json_parser_generic_json@@Base+0xab4>
   35450:	cmp	r4, r1
   35454:	beq	35a78 <flatcc_json_parser_generic_json@@Base+0xb00>
   35458:	ldrb	sl, [r1], #1
   3545c:	mov	r3, r0
   35460:	sub	r2, sl, #48	; 0x30
   35464:	uxtb	r2, r2
   35468:	cmp	r2, #10
   3546c:	mov	r2, ip
   35470:	bcc	35428 <flatcc_json_parser_generic_json@@Base+0x4b0>
   35474:	sub	lr, r1, #1
   35478:	mov	r2, #1
   3547c:	cmp	lr, r7
   35480:	mov	r1, r7
   35484:	bne	35a8c <flatcc_json_parser_generic_json@@Base+0xb14>
   35488:	b	35ba8 <flatcc_json_parser_generic_json@@Base+0xc30>
   3548c:	ldr	sl, [sp, #12]
   35490:	ldr	r6, [sp, #16]
   35494:	ldr	r5, [sp, #8]
   35498:	add	r0, r7, #1
   3549c:	cmp	r4, r0
   354a0:	beq	3587c <flatcc_json_parser_generic_json@@Base+0x904>
   354a4:	ldrb	r1, [r0], #1
   354a8:	sub	r1, r1, #48	; 0x30
   354ac:	uxtb	r1, r1
   354b0:	cmp	r1, #10
   354b4:	bcc	3549c <flatcc_json_parser_generic_json@@Base+0x524>
   354b8:	sub	r1, r0, #1
   354bc:	cmp	r1, r4
   354c0:	mov	r2, r4
   354c4:	bne	352f8 <flatcc_json_parser_generic_json@@Base+0x380>
   354c8:	b	35bd4 <flatcc_json_parser_generic_json@@Base+0xc5c>
   354cc:	ldr	r6, [sp, #16]
   354d0:	ldr	r0, [r6]
   354d4:	cmp	r0, #0
   354d8:	beq	35890 <flatcc_json_parser_generic_json@@Base+0x918>
   354dc:	ldr	sl, [sp, #12]
   354e0:	ldr	r5, [sp, #8]
   354e4:	b	35be0 <flatcc_json_parser_generic_json@@Base+0xc68>
   354e8:	cmp	r7, r4
   354ec:	beq	358bc <flatcc_json_parser_generic_json@@Base+0x944>
   354f0:	ldr	sl, [sp, #12]
   354f4:	ldr	r6, [sp, #16]
   354f8:	ldr	r5, [sp, #8]
   354fc:	add	r0, r7, #1
   35500:	mov	r1, r4
   35504:	add	r7, sp, #28
   35508:	cmp	r0, r4
   3550c:	bne	3553c <flatcc_json_parser_generic_json@@Base+0x5c4>
   35510:	b	359fc <flatcc_json_parser_generic_json@@Base+0xa84>
   35514:	ldr	r1, [r6]
   35518:	cmp	r1, #0
   3551c:	mov	r1, r4
   35520:	beq	355a8 <flatcc_json_parser_generic_json@@Base+0x630>
   35524:	mov	r0, r8
   35528:	mov	r2, r4
   3552c:	mov	r3, r7
   35530:	bl	34734 <flatcc_json_parser_string_escape@@Base>
   35534:	cmp	r0, r4
   35538:	beq	359f8 <flatcc_json_parser_generic_json@@Base+0xa80>
   3553c:	ldrb	r1, [r0]
   35540:	cmp	r1, #34	; 0x22
   35544:	beq	359d8 <flatcc_json_parser_generic_json@@Base+0xa60>
   35548:	cmp	r1, #32
   3554c:	bcc	35514 <flatcc_json_parser_generic_json@@Base+0x59c>
   35550:	rsb	r0, r0, #0
   35554:	uxtb	r2, r1
   35558:	cmp	r2, #34	; 0x22
   3555c:	cmpne	r2, #92	; 0x5c
   35560:	beq	3558c <flatcc_json_parser_generic_json@@Base+0x614>
   35564:	add	r1, r4, r0
   35568:	cmp	r1, #1
   3556c:	beq	355d0 <flatcc_json_parser_generic_json@@Base+0x658>
   35570:	rsb	r1, r0, #0
   35574:	sub	r0, r0, #1
   35578:	ldrb	r1, [r1, #1]
   3557c:	cmp	r1, #32
   35580:	bcs	35554 <flatcc_json_parser_generic_json@@Base+0x5dc>
   35584:	rsb	r0, r0, #0
   35588:	b	35514 <flatcc_json_parser_generic_json@@Base+0x59c>
   3558c:	adds	r1, r4, r0
   35590:	mov	r1, r4
   35594:	beq	35524 <flatcc_json_parser_generic_json@@Base+0x5ac>
   35598:	rsb	r1, r0, #0
   3559c:	cmp	r2, #34	; 0x22
   355a0:	bne	35524 <flatcc_json_parser_generic_json@@Base+0x5ac>
   355a4:	b	359dc <flatcc_json_parser_generic_json@@Base+0xa64>
   355a8:	mov	r1, #17
   355ac:	str	r1, [r6]
   355b0:	ldr	r1, [sl]
   355b4:	sub	r1, r0, r1
   355b8:	add	r1, r1, #1
   355bc:	str	r1, [r5]
   355c0:	ldr	r1, [sp, #20]
   355c4:	str	r0, [r1]
   355c8:	mov	r1, r4
   355cc:	b	35524 <flatcc_json_parser_generic_json@@Base+0x5ac>
   355d0:	ldr	r0, [r6]
   355d4:	mov	r1, r4
   355d8:	cmp	r0, #0
   355dc:	bne	35524 <flatcc_json_parser_generic_json@@Base+0x5ac>
   355e0:	mov	r0, #20
   355e4:	ldr	r1, [sp, #4]
   355e8:	str	r0, [r6]
   355ec:	ldr	r0, [sl]
   355f0:	sub	r0, r1, r0
   355f4:	mov	r1, r4
   355f8:	str	r0, [r5]
   355fc:	ldr	r0, [sp, #20]
   35600:	str	r4, [r0]
   35604:	b	35524 <flatcc_json_parser_generic_json@@Base+0x5ac>
   35608:	cmp	r9, #512	; 0x200
   3560c:	beq	36028 <flatcc_json_parser_generic_json@@Base+0x10b0>
   35610:	add	r0, sp, #32
   35614:	mov	r1, #93	; 0x5d
   35618:	ldr	sl, [sp, #12]
   3561c:	ldr	r6, [sp, #16]
   35620:	ldr	r5, [sp, #8]
   35624:	strb	r1, [r0, r9]
   35628:	add	r1, r7, #1
   3562c:	sub	r0, r4, r1
   35630:	cmp	r0, #2
   35634:	blt	35948 <flatcc_json_parser_generic_json@@Base+0x9d0>
   35638:	ldrb	r0, [r1]
   3563c:	cmp	r0, #32
   35640:	bls	35938 <flatcc_json_parser_generic_json@@Base+0x9c0>
   35644:	mov	r7, r1
   35648:	cmp	r7, r4
   3564c:	bne	35960 <flatcc_json_parser_generic_json@@Base+0x9e8>
   35650:	b	35fbc <flatcc_json_parser_generic_json@@Base+0x1044>
   35654:	sub	r0, r4, r7
   35658:	mov	r1, r7
   3565c:	cmp	r0, #4
   35660:	blt	35ba8 <flatcc_json_parser_generic_json@@Base+0xc30>
   35664:	movw	r1, #46670	; 0xb64e
   35668:	mov	r0, r7
   3566c:	mov	r2, #4
   35670:	movt	r1, #4
   35674:	bl	14ebc <bcmp@plt>
   35678:	cmp	r0, #0
   3567c:	mov	r1, r7
   35680:	addeq	r1, r1, #4
   35684:	b	35ba8 <flatcc_json_parser_generic_json@@Base+0xc30>
   35688:	cmp	r9, #512	; 0x200
   3568c:	beq	36028 <flatcc_json_parser_generic_json@@Base+0x10b0>
   35690:	add	r0, sp, #32
   35694:	mov	r1, #125	; 0x7d
   35698:	ldr	sl, [sp, #12]
   3569c:	ldr	r6, [sp, #16]
   356a0:	ldr	r5, [sp, #8]
   356a4:	strb	r1, [r0, r9]
   356a8:	add	r1, r7, #1
   356ac:	sub	r0, r4, r1
   356b0:	cmp	r0, #2
   356b4:	blt	35988 <flatcc_json_parser_generic_json@@Base+0xa10>
   356b8:	ldrb	r0, [r1]
   356bc:	cmp	r0, #32
   356c0:	bls	35978 <flatcc_json_parser_generic_json@@Base+0xa00>
   356c4:	mov	r7, r1
   356c8:	cmp	r7, r4
   356cc:	bne	359a0 <flatcc_json_parser_generic_json@@Base+0xa28>
   356d0:	b	35fbc <flatcc_json_parser_generic_json@@Base+0x1044>
   356d4:	add	r1, r0, #1
   356d8:	sub	r0, r4, r1
   356dc:	cmp	r0, #2
   356e0:	bge	350a8 <flatcc_json_parser_generic_json@@Base+0x130>
   356e4:	b	3591c <flatcc_json_parser_generic_json@@Base+0x9a4>
   356e8:	add	r1, r1, #2
   356ec:	mov	r2, r4
   356f0:	cmp	r1, r4
   356f4:	beq	35bd4 <flatcc_json_parser_generic_json@@Base+0xc5c>
   356f8:	ldrb	r0, [r1]
   356fc:	sub	r2, r0, #48	; 0x30
   35700:	uxtb	r2, r2
   35704:	cmp	r2, #9
   35708:	bhi	3571c <flatcc_json_parser_generic_json@@Base+0x7a4>
   3570c:	add	r1, r1, #1
   35710:	cmp	r4, r1
   35714:	bne	356f8 <flatcc_json_parser_generic_json@@Base+0x780>
   35718:	b	3587c <flatcc_json_parser_generic_json@@Base+0x904>
   3571c:	cmp	r1, r4
   35720:	mov	r2, r4
   35724:	beq	35bd4 <flatcc_json_parser_generic_json@@Base+0xc5c>
   35728:	orr	r2, r0, #32
   3572c:	cmp	r2, #101	; 0x65
   35730:	bne	35790 <flatcc_json_parser_generic_json@@Base+0x818>
   35734:	add	r0, r1, #1
   35738:	cmp	r0, r4
   3573c:	beq	359b8 <flatcc_json_parser_generic_json@@Base+0xa40>
   35740:	ldrb	r2, [r0]
   35744:	cmp	r2, #45	; 0x2d
   35748:	cmpne	r2, #43	; 0x2b
   3574c:	addeq	r0, r1, #2
   35750:	cmp	r0, r4
   35754:	beq	3531c <flatcc_json_parser_generic_json@@Base+0x3a4>
   35758:	ldrb	r1, [r0]
   3575c:	sub	r1, r1, #48	; 0x30
   35760:	uxtb	r1, r1
   35764:	cmp	r1, #9
   35768:	bhi	3531c <flatcc_json_parser_generic_json@@Base+0x3a4>
   3576c:	add	r1, r0, #1
   35770:	cmp	r4, r1
   35774:	beq	3587c <flatcc_json_parser_generic_json@@Base+0x904>
   35778:	ldrb	r0, [r1], #1
   3577c:	sub	r2, r0, #48	; 0x30
   35780:	uxtb	r2, r2
   35784:	cmp	r2, #10
   35788:	bcc	35770 <flatcc_json_parser_generic_json@@Base+0x7f8>
   3578c:	sub	r1, r1, #1
   35790:	cmp	r1, r4
   35794:	mov	r2, r4
   35798:	beq	35bd4 <flatcc_json_parser_generic_json@@Base+0xc5c>
   3579c:	sub	r3, r0, #9
   357a0:	cmp	r3, #49	; 0x31
   357a4:	bhi	35bc0 <flatcc_json_parser_generic_json@@Base+0xc48>
   357a8:	add	r0, pc, #4
   357ac:	mov	r2, r1
   357b0:	ldr	pc, [r0, r3, lsl #2]
   357b4:	andeq	r5, r3, r4, ror #23
   357b8:	andeq	r5, r3, r4, ror #23
   357bc:	andeq	r5, r3, r4, ror #23
   357c0:	ldrdeq	r5, [r3], -r4
   357c4:	andeq	r5, r3, r4, ror #23
   357c8:	ldrdeq	r5, [r3], -r4
   357cc:	ldrdeq	r5, [r3], -r4
   357d0:	ldrdeq	r5, [r3], -r4
   357d4:	ldrdeq	r5, [r3], -r4
   357d8:	ldrdeq	r5, [r3], -r4
   357dc:	ldrdeq	r5, [r3], -r4
   357e0:	ldrdeq	r5, [r3], -r4
   357e4:	ldrdeq	r5, [r3], -r4
   357e8:	ldrdeq	r5, [r3], -r4
   357ec:	ldrdeq	r5, [r3], -r4
   357f0:	ldrdeq	r5, [r3], -r4
   357f4:	ldrdeq	r5, [r3], -r4
   357f8:	ldrdeq	r5, [r3], -r4
   357fc:	ldrdeq	r5, [r3], -r4
   35800:	ldrdeq	r5, [r3], -r4
   35804:	ldrdeq	r5, [r3], -r4
   35808:	ldrdeq	r5, [r3], -r4
   3580c:	ldrdeq	r5, [r3], -r4
   35810:	andeq	r5, r3, r4, ror #23
   35814:	ldrdeq	r5, [r3], -r4
   35818:	ldrdeq	r5, [r3], -r4
   3581c:	ldrdeq	r5, [r3], -r4
   35820:	ldrdeq	r5, [r3], -r4
   35824:	ldrdeq	r5, [r3], -r4
   35828:	ldrdeq	r5, [r3], -r4
   3582c:	ldrdeq	r5, [r3], -r4
   35830:	ldrdeq	r5, [r3], -r4
   35834:	ldrdeq	r5, [r3], -r4
   35838:	ldrdeq	r5, [r3], -r4
   3583c:	ldrdeq	r5, [r3], -r4
   35840:	andeq	r5, r3, r4, ror #23
   35844:	ldrdeq	r5, [r3], -r4
   35848:	ldrdeq	r5, [r3], -r4
   3584c:	ldrdeq	r5, [r3], -r4
   35850:	ldrdeq	r5, [r3], -r4
   35854:	ldrdeq	r5, [r3], -r4
   35858:	ldrdeq	r5, [r3], -r4
   3585c:	ldrdeq	r5, [r3], -r4
   35860:	ldrdeq	r5, [r3], -r4
   35864:	ldrdeq	r5, [r3], -r4
   35868:	ldrdeq	r5, [r3], -r4
   3586c:	ldrdeq	r5, [r3], -r4
   35870:	ldrdeq	r5, [r3], -r4
   35874:	ldrdeq	r5, [r3], -r4
   35878:	andeq	r5, r3, r4, ror #23
   3587c:	mov	r2, r4
   35880:	ldr	r0, [r6]
   35884:	cmp	r0, #0
   35888:	bne	35be0 <flatcc_json_parser_generic_json@@Base+0xc68>
   3588c:	b	35ed8 <flatcc_json_parser_generic_json@@Base+0xf60>
   35890:	ldr	sl, [sp, #12]
   35894:	mov	r0, #6
   35898:	b	35b7c <flatcc_json_parser_generic_json@@Base+0xc04>
   3589c:	mov	lr, r7
   358a0:	mov	ip, #0
   358a4:	cmp	lr, r7
   358a8:	mov	r1, r7
   358ac:	bne	35a8c <flatcc_json_parser_generic_json@@Base+0xb14>
   358b0:	b	35ba8 <flatcc_json_parser_generic_json@@Base+0xc30>
   358b4:	add	r1, r7, #4
   358b8:	b	35ba8 <flatcc_json_parser_generic_json@@Base+0xc30>
   358bc:	ldr	r6, [sp, #16]
   358c0:	ldr	sl, [sp, #12]
   358c4:	ldr	r0, [r6]
   358c8:	cmp	r0, #0
   358cc:	beq	35b78 <flatcc_json_parser_generic_json@@Base+0xc00>
   358d0:	ldr	r5, [sp, #8]
   358d4:	b	35be0 <flatcc_json_parser_generic_json@@Base+0xc68>
   358d8:	mov	r2, r0
   358dc:	ldr	r0, [r6]
   358e0:	mov	r1, r4
   358e4:	cmp	r0, #0
   358e8:	bne	3509c <flatcc_json_parser_generic_json@@Base+0x124>
   358ec:	mov	r0, #20
   358f0:	mov	r1, r4
   358f4:	str	r0, [r6]
   358f8:	ldr	r0, [sl]
   358fc:	sub	r0, r2, r0
   35900:	add	r0, r0, #1
   35904:	str	r0, [r5]
   35908:	ldr	r0, [sp, #20]
   3590c:	str	r2, [r0]
   35910:	sub	r0, r4, r1
   35914:	cmp	r0, #2
   35918:	bge	350a8 <flatcc_json_parser_generic_json@@Base+0x130>
   3591c:	mov	r0, r8
   35920:	mov	r2, r4
   35924:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   35928:	mov	r7, r0
   3592c:	cmp	r7, r4
   35930:	bne	350c0 <flatcc_json_parser_generic_json@@Base+0x148>
   35934:	b	35fcc <flatcc_json_parser_generic_json@@Base+0x1054>
   35938:	bne	35948 <flatcc_json_parser_generic_json@@Base+0x9d0>
   3593c:	ldrb	r0, [r7, #2]!
   35940:	cmp	r0, #32
   35944:	bhi	35958 <flatcc_json_parser_generic_json@@Base+0x9e0>
   35948:	mov	r0, r8
   3594c:	mov	r2, r4
   35950:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   35954:	mov	r7, r0
   35958:	cmp	r7, r4
   3595c:	beq	35fbc <flatcc_json_parser_generic_json@@Base+0x1044>
   35960:	ldrb	r0, [r7]
   35964:	add	r9, r9, #1
   35968:	cmp	r0, #93	; 0x5d
   3596c:	mov	r1, r7
   35970:	bne	35ec4 <flatcc_json_parser_generic_json@@Base+0xf4c>
   35974:	b	35be4 <flatcc_json_parser_generic_json@@Base+0xc6c>
   35978:	bne	35988 <flatcc_json_parser_generic_json@@Base+0xa10>
   3597c:	ldrb	r0, [r7, #2]!
   35980:	cmp	r0, #32
   35984:	bhi	35998 <flatcc_json_parser_generic_json@@Base+0xa20>
   35988:	mov	r0, r8
   3598c:	mov	r2, r4
   35990:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   35994:	mov	r7, r0
   35998:	cmp	r7, r4
   3599c:	beq	35fbc <flatcc_json_parser_generic_json@@Base+0x1044>
   359a0:	ldrb	r0, [r7]
   359a4:	add	r9, r9, #1
   359a8:	cmp	r0, #125	; 0x7d
   359ac:	mov	r1, r7
   359b0:	beq	35be4 <flatcc_json_parser_generic_json@@Base+0xc6c>
   359b4:	b	35ec4 <flatcc_json_parser_generic_json@@Base+0xf4c>
   359b8:	ldr	r0, [r6]
   359bc:	cmp	r0, #0
   359c0:	bne	35be0 <flatcc_json_parser_generic_json@@Base+0xc68>
   359c4:	mov	r0, #6
   359c8:	ldr	r1, [sp, #4]
   359cc:	str	r0, [r6]
   359d0:	ldr	r0, [sl]
   359d4:	b	35b8c <flatcc_json_parser_generic_json@@Base+0xc14>
   359d8:	mov	r1, r0
   359dc:	cmp	r1, r4
   359e0:	beq	359fc <flatcc_json_parser_generic_json@@Base+0xa84>
   359e4:	ldrb	r0, [r1]
   359e8:	cmp	r0, #34	; 0x22
   359ec:	bne	359fc <flatcc_json_parser_generic_json@@Base+0xa84>
   359f0:	add	r1, r1, #1
   359f4:	b	35be4 <flatcc_json_parser_generic_json@@Base+0xc6c>
   359f8:	mov	r1, r4
   359fc:	ldr	r0, [r6]
   35a00:	cmp	r0, #0
   35a04:	bne	35be0 <flatcc_json_parser_generic_json@@Base+0xc68>
   35a08:	mov	r0, #20
   35a0c:	str	r0, [r6]
   35a10:	ldr	r0, [sl]
   35a14:	sub	r0, r1, r0
   35a18:	add	r0, r0, #1
   35a1c:	str	r0, [r5]
   35a20:	ldr	r0, [sp, #20]
   35a24:	str	r1, [r0]
   35a28:	b	35be0 <flatcc_json_parser_generic_json@@Base+0xc68>
   35a2c:	ldr	r5, [sp, #16]
   35a30:	mov	r0, #0
   35a34:	mov	ip, #0
   35a38:	mov	r3, r4
   35a3c:	ldr	r2, [r5]
   35a40:	cmp	r2, #0
   35a44:	bne	35b10 <flatcc_json_parser_generic_json@@Base+0xb98>
   35a48:	sub	r0, r1, #1
   35a4c:	mov	r1, #8
   35a50:	ldr	r2, [sp, #8]
   35a54:	str	r1, [r5]
   35a58:	ldr	r1, [sp, #12]
   35a5c:	ldr	r1, [r1]
   35a60:	sub	r1, r0, r1
   35a64:	add	r1, r1, #1
   35a68:	str	r1, [r2]
   35a6c:	ldr	r1, [sp, #20]
   35a70:	str	r0, [r1]
   35a74:	b	35af0 <flatcc_json_parser_generic_json@@Base+0xb78>
   35a78:	mov	r2, #0
   35a7c:	mov	lr, r4
   35a80:	cmp	lr, r7
   35a84:	mov	r1, r7
   35a88:	beq	35ba8 <flatcc_json_parser_generic_json@@Base+0xc30>
   35a8c:	cmp	r2, #0
   35a90:	beq	35b0c <flatcc_json_parser_generic_json@@Base+0xb94>
   35a94:	ldrb	r1, [lr]
   35a98:	ldr	r5, [sp, #16]
   35a9c:	cmp	r1, #46	; 0x2e
   35aa0:	beq	35ab0 <flatcc_json_parser_generic_json@@Base+0xb38>
   35aa4:	cmp	r1, #101	; 0x65
   35aa8:	cmpne	r1, #69	; 0x45
   35aac:	bne	35f00 <flatcc_json_parser_generic_json@@Base+0xf88>
   35ab0:	ldr	r1, [r5]
   35ab4:	mov	r0, #0
   35ab8:	mov	ip, #0
   35abc:	mov	r3, r4
   35ac0:	cmp	r1, #0
   35ac4:	bne	35b10 <flatcc_json_parser_generic_json@@Base+0xb98>
   35ac8:	mov	r0, #12
   35acc:	ldr	r1, [sp, #8]
   35ad0:	str	r0, [r5]
   35ad4:	ldr	r0, [sp, #12]
   35ad8:	ldr	r0, [r0]
   35adc:	sub	r0, lr, r0
   35ae0:	add	r0, r0, #1
   35ae4:	str	r0, [r1]
   35ae8:	ldr	r0, [sp, #20]
   35aec:	str	lr, [r0]
   35af0:	mov	r0, #0
   35af4:	mov	ip, #0
   35af8:	mov	r3, r4
   35afc:	cmp	r3, r7
   35b00:	mov	r1, r7
   35b04:	bne	35b1c <flatcc_json_parser_generic_json@@Base+0xba4>
   35b08:	b	35ba8 <flatcc_json_parser_generic_json@@Base+0xc30>
   35b0c:	mov	r3, lr
   35b10:	cmp	r3, r7
   35b14:	mov	r1, r7
   35b18:	beq	35ba8 <flatcc_json_parser_generic_json@@Base+0xc30>
   35b1c:	subs	r0, r0, #256	; 0x100
   35b20:	sbcs	r0, ip, #0
   35b24:	bcc	35b70 <flatcc_json_parser_generic_json@@Base+0xbf8>
   35b28:	ldr	r0, [sp, #16]
   35b2c:	mov	r1, r4
   35b30:	ldr	r0, [r0]
   35b34:	cmp	r0, #0
   35b38:	bne	35ba8 <flatcc_json_parser_generic_json@@Base+0xc30>
   35b3c:	ldr	r0, [sp, #16]
   35b40:	mov	r1, #7
   35b44:	str	r1, [r0]
   35b48:	ldr	r0, [sp, #12]
   35b4c:	ldr	r1, [sp, #8]
   35b50:	ldr	r0, [r0]
   35b54:	sub	r0, r3, r0
   35b58:	add	r0, r0, #1
   35b5c:	str	r0, [r1]
   35b60:	ldr	r0, [sp, #20]
   35b64:	mov	r1, r4
   35b68:	str	r3, [r0]
   35b6c:	b	35ba8 <flatcc_json_parser_generic_json@@Base+0xc30>
   35b70:	mov	r1, r3
   35b74:	b	35ba8 <flatcc_json_parser_generic_json@@Base+0xc30>
   35b78:	mov	r0, #16
   35b7c:	str	r0, [r6]
   35b80:	ldr	r0, [sl]
   35b84:	ldr	r1, [sp, #4]
   35b88:	ldr	r5, [sp, #8]
   35b8c:	sub	r0, r1, r0
   35b90:	str	r0, [r5]
   35b94:	ldr	r0, [sp, #20]
   35b98:	mov	r1, r4
   35b9c:	str	r4, [r0]
   35ba0:	b	35be4 <flatcc_json_parser_generic_json@@Base+0xc6c>
   35ba4:	add	r1, r7, #5
   35ba8:	ldr	sl, [sp, #12]
   35bac:	ldr	r6, [sp, #16]
   35bb0:	ldr	r5, [sp, #8]
   35bb4:	cmp	r7, r1
   35bb8:	bne	35be4 <flatcc_json_parser_generic_json@@Base+0xc6c>
   35bbc:	b	35ff8 <flatcc_json_parser_generic_json@@Base+0x1080>
   35bc0:	cmp	r0, #93	; 0x5d
   35bc4:	beq	35be4 <flatcc_json_parser_generic_json@@Base+0xc6c>
   35bc8:	cmp	r0, #125	; 0x7d
   35bcc:	mov	r2, r1
   35bd0:	beq	35be4 <flatcc_json_parser_generic_json@@Base+0xc6c>
   35bd4:	ldr	r0, [r6]
   35bd8:	cmp	r0, #0
   35bdc:	beq	35ed8 <flatcc_json_parser_generic_json@@Base+0xf60>
   35be0:	mov	r1, r4
   35be4:	subs	r0, r1, r4
   35be8:	mov	r3, r9
   35bec:	movwne	r0, #1
   35bf0:	cmp	r9, #0
   35bf4:	movwne	r3, #1
   35bf8:	cmp	r1, r4
   35bfc:	beq	35f58 <flatcc_json_parser_generic_json@@Base+0xfe0>
   35c00:	cmp	r9, #0
   35c04:	beq	35f68 <flatcc_json_parser_generic_json@@Base+0xff0>
   35c08:	ldr	r2, [sp, #24]
   35c0c:	sub	r0, r4, r1
   35c10:	ldrb	r2, [r2, r9]
   35c14:	cmp	r2, #93	; 0x5d
   35c18:	bne	35c6c <flatcc_json_parser_generic_json@@Base+0xcf4>
   35c1c:	cmp	r0, #2
   35c20:	blt	35cf0 <flatcc_json_parser_generic_json@@Base+0xd78>
   35c24:	ldrb	r0, [r1]
   35c28:	cmp	r0, #32
   35c2c:	bls	35cdc <flatcc_json_parser_generic_json@@Base+0xd64>
   35c30:	mov	r7, r1
   35c34:	cmp	r7, r4
   35c38:	mov	r1, r4
   35c3c:	beq	35e64 <flatcc_json_parser_generic_json@@Base+0xeec>
   35c40:	ldrb	r0, [r7]
   35c44:	cmp	r0, #44	; 0x2c
   35c48:	beq	35d44 <flatcc_json_parser_generic_json@@Base+0xdcc>
   35c4c:	cmp	r0, #93	; 0x5d
   35c50:	beq	35e18 <flatcc_json_parser_generic_json@@Base+0xea0>
   35c54:	ldr	r0, [r6]
   35c58:	mov	r1, r4
   35c5c:	cmp	r0, #0
   35c60:	bne	35e64 <flatcc_json_parser_generic_json@@Base+0xeec>
   35c64:	mov	r0, #9
   35c68:	b	35cb8 <flatcc_json_parser_generic_json@@Base+0xd40>
   35c6c:	cmp	r0, #2
   35c70:	blt	35d24 <flatcc_json_parser_generic_json@@Base+0xdac>
   35c74:	ldrb	r0, [r1]
   35c78:	cmp	r0, #32
   35c7c:	bls	35d10 <flatcc_json_parser_generic_json@@Base+0xd98>
   35c80:	mov	r7, r1
   35c84:	cmp	r7, r4
   35c88:	mov	r1, r4
   35c8c:	beq	35e64 <flatcc_json_parser_generic_json@@Base+0xeec>
   35c90:	ldrb	r0, [r7]
   35c94:	cmp	r0, #44	; 0x2c
   35c98:	beq	35d84 <flatcc_json_parser_generic_json@@Base+0xe0c>
   35c9c:	cmp	r0, #125	; 0x7d
   35ca0:	beq	35e18 <flatcc_json_parser_generic_json@@Base+0xea0>
   35ca4:	ldr	r0, [r6]
   35ca8:	mov	r1, r4
   35cac:	cmp	r0, #0
   35cb0:	bne	35e64 <flatcc_json_parser_generic_json@@Base+0xeec>
   35cb4:	mov	r0, #10
   35cb8:	str	r0, [r6]
   35cbc:	mov	r1, r4
   35cc0:	ldr	r0, [sl]
   35cc4:	sub	r0, r7, r0
   35cc8:	add	r0, r0, #1
   35ccc:	str	r0, [r5]
   35cd0:	ldr	r0, [sp, #20]
   35cd4:	str	r7, [r0]
   35cd8:	b	35e64 <flatcc_json_parser_generic_json@@Base+0xeec>
   35cdc:	bne	35cf0 <flatcc_json_parser_generic_json@@Base+0xd78>
   35ce0:	mov	r7, r1
   35ce4:	ldrb	r0, [r7, #1]!
   35ce8:	cmp	r0, #32
   35cec:	bhi	35d00 <flatcc_json_parser_generic_json@@Base+0xd88>
   35cf0:	mov	r0, r8
   35cf4:	mov	r2, r4
   35cf8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   35cfc:	mov	r7, r0
   35d00:	cmp	r7, r4
   35d04:	mov	r1, r4
   35d08:	bne	35c40 <flatcc_json_parser_generic_json@@Base+0xcc8>
   35d0c:	b	35e64 <flatcc_json_parser_generic_json@@Base+0xeec>
   35d10:	bne	35d24 <flatcc_json_parser_generic_json@@Base+0xdac>
   35d14:	mov	r7, r1
   35d18:	ldrb	r0, [r7, #1]!
   35d1c:	cmp	r0, #32
   35d20:	bhi	35d34 <flatcc_json_parser_generic_json@@Base+0xdbc>
   35d24:	mov	r0, r8
   35d28:	mov	r2, r4
   35d2c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   35d30:	mov	r7, r0
   35d34:	cmp	r7, r4
   35d38:	mov	r1, r4
   35d3c:	bne	35c90 <flatcc_json_parser_generic_json@@Base+0xd18>
   35d40:	b	35e64 <flatcc_json_parser_generic_json@@Base+0xeec>
   35d44:	add	r1, r7, #1
   35d48:	sub	r0, r4, r1
   35d4c:	cmp	r0, #2
   35d50:	blt	35df4 <flatcc_json_parser_generic_json@@Base+0xe7c>
   35d54:	ldrb	r0, [r1]
   35d58:	cmp	r0, #32
   35d5c:	bls	35de4 <flatcc_json_parser_generic_json@@Base+0xe6c>
   35d60:	mov	r7, r1
   35d64:	cmp	r7, r4
   35d68:	bne	35e0c <flatcc_json_parser_generic_json@@Base+0xe94>
   35d6c:	ldr	r0, [r6]
   35d70:	mov	r1, r4
   35d74:	cmp	r0, #0
   35d78:	bne	35e64 <flatcc_json_parser_generic_json@@Base+0xeec>
   35d7c:	mov	r0, #9
   35d80:	b	35dc0 <flatcc_json_parser_generic_json@@Base+0xe48>
   35d84:	add	r1, r7, #1
   35d88:	sub	r0, r4, r1
   35d8c:	cmp	r0, #2
   35d90:	blt	35ea0 <flatcc_json_parser_generic_json@@Base+0xf28>
   35d94:	ldrb	r0, [r1]
   35d98:	cmp	r0, #32
   35d9c:	bls	35e90 <flatcc_json_parser_generic_json@@Base+0xf18>
   35da0:	mov	r7, r1
   35da4:	cmp	r7, r4
   35da8:	bne	35eb8 <flatcc_json_parser_generic_json@@Base+0xf40>
   35dac:	ldr	r0, [r6]
   35db0:	mov	r1, r4
   35db4:	cmp	r0, #0
   35db8:	bne	35e64 <flatcc_json_parser_generic_json@@Base+0xeec>
   35dbc:	mov	r0, #10
   35dc0:	str	r0, [r6]
   35dc4:	ldr	r1, [sp, #4]
   35dc8:	ldr	r0, [sl]
   35dcc:	sub	r0, r1, r0
   35dd0:	mov	r1, r4
   35dd4:	str	r0, [r5]
   35dd8:	ldr	r0, [sp, #20]
   35ddc:	str	r4, [r0]
   35de0:	b	35e64 <flatcc_json_parser_generic_json@@Base+0xeec>
   35de4:	bne	35df4 <flatcc_json_parser_generic_json@@Base+0xe7c>
   35de8:	ldrb	r0, [r7, #2]!
   35dec:	cmp	r0, #32
   35df0:	bhi	35e04 <flatcc_json_parser_generic_json@@Base+0xe8c>
   35df4:	mov	r0, r8
   35df8:	mov	r2, r4
   35dfc:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   35e00:	mov	r7, r0
   35e04:	cmp	r7, r4
   35e08:	beq	35d6c <flatcc_json_parser_generic_json@@Base+0xdf4>
   35e0c:	ldrb	r0, [r7]
   35e10:	cmp	r0, #93	; 0x5d
   35e14:	bne	35ec4 <flatcc_json_parser_generic_json@@Base+0xf4c>
   35e18:	add	r2, r7, #1
   35e1c:	sub	r0, r4, r2
   35e20:	cmp	r0, #2
   35e24:	blt	35e50 <flatcc_json_parser_generic_json@@Base+0xed8>
   35e28:	ldrb	r0, [r2]
   35e2c:	cmp	r0, #32
   35e30:	bls	35e3c <flatcc_json_parser_generic_json@@Base+0xec4>
   35e34:	mov	r1, r2
   35e38:	b	35e64 <flatcc_json_parser_generic_json@@Base+0xeec>
   35e3c:	bne	35e50 <flatcc_json_parser_generic_json@@Base+0xed8>
   35e40:	ldrb	r0, [r7, #2]!
   35e44:	mov	r1, r7
   35e48:	cmp	r0, #32
   35e4c:	bhi	35e64 <flatcc_json_parser_generic_json@@Base+0xeec>
   35e50:	mov	r1, r2
   35e54:	mov	r0, r8
   35e58:	mov	r2, r4
   35e5c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   35e60:	mov	r1, r0
   35e64:	subs	r0, r1, r4
   35e68:	sub	r2, r9, #1
   35e6c:	movwne	r0, #1
   35e70:	subs	r3, r9, #1
   35e74:	movwne	r3, #1
   35e78:	cmp	r1, r4
   35e7c:	beq	35f6c <flatcc_json_parser_generic_json@@Base+0xff4>
   35e80:	cmp	r9, #1
   35e84:	mov	r9, r2
   35e88:	bne	35c08 <flatcc_json_parser_generic_json@@Base+0xc90>
   35e8c:	b	35f6c <flatcc_json_parser_generic_json@@Base+0xff4>
   35e90:	bne	35ea0 <flatcc_json_parser_generic_json@@Base+0xf28>
   35e94:	ldrb	r0, [r7, #2]!
   35e98:	cmp	r0, #32
   35e9c:	bhi	35eb0 <flatcc_json_parser_generic_json@@Base+0xf38>
   35ea0:	mov	r0, r8
   35ea4:	mov	r2, r4
   35ea8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   35eac:	mov	r7, r0
   35eb0:	cmp	r7, r4
   35eb4:	beq	35dac <flatcc_json_parser_generic_json@@Base+0xe34>
   35eb8:	ldrb	r0, [r7]
   35ebc:	cmp	r0, #125	; 0x7d
   35ec0:	beq	35e18 <flatcc_json_parser_generic_json@@Base+0xea0>
   35ec4:	add	r0, sp, #32
   35ec8:	cmp	r7, r4
   35ecc:	add	r0, r0, r9
   35ed0:	bne	34fd4 <flatcc_json_parser_generic_json@@Base+0x5c>
   35ed4:	b	35fbc <flatcc_json_parser_generic_json@@Base+0x1044>
   35ed8:	mov	r0, #6
   35edc:	mov	r1, r4
   35ee0:	str	r0, [r6]
   35ee4:	ldr	r0, [sl]
   35ee8:	sub	r0, r2, r0
   35eec:	add	r0, r0, #1
   35ef0:	str	r0, [r5]
   35ef4:	ldr	r0, [sp, #20]
   35ef8:	str	r2, [r0]
   35efc:	b	35be4 <flatcc_json_parser_generic_json@@Base+0xc6c>
   35f00:	mov	r3, lr
   35f04:	cmp	r3, r7
   35f08:	mov	r1, r7
   35f0c:	bne	35b1c <flatcc_json_parser_generic_json@@Base+0xba4>
   35f10:	b	35ba8 <flatcc_json_parser_generic_json@@Base+0xc30>
   35f14:	mov	r1, r7
   35f18:	mov	r0, r1
   35f1c:	sub	sp, fp, #28
   35f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35f24:	ldr	r5, [sp, #16]
   35f28:	ldr	r0, [r5]
   35f2c:	cmp	r0, #0
   35f30:	bne	35fbc <flatcc_json_parser_generic_json@@Base+0x1044>
   35f34:	mov	r0, #5
   35f38:	str	r0, [r5]
   35f3c:	ldr	r0, [sp, #12]
   35f40:	ldr	r0, [r0]
   35f44:	ldr	r1, [sp, #8]
   35f48:	sub	r0, r7, r0
   35f4c:	add	r0, r0, #1
   35f50:	str	r0, [r1]
   35f54:	b	3601c <flatcc_json_parser_generic_json@@Base+0x10a4>
   35f58:	mov	r2, r9
   35f5c:	cmp	r0, #0
   35f60:	beq	35f74 <flatcc_json_parser_generic_json@@Base+0xffc>
   35f64:	b	35fc0 <flatcc_json_parser_generic_json@@Base+0x1048>
   35f68:	mov	r2, r9
   35f6c:	cmp	r0, #0
   35f70:	bne	35fc0 <flatcc_json_parser_generic_json@@Base+0x1048>
   35f74:	cmp	r3, #0
   35f78:	beq	35fc0 <flatcc_json_parser_generic_json@@Base+0x1048>
   35f7c:	ldr	r0, [r6]
   35f80:	cmp	r0, #0
   35f84:	bne	35fbc <flatcc_json_parser_generic_json@@Base+0x1044>
   35f88:	add	r0, sp, #32
   35f8c:	mov	r1, #10
   35f90:	add	r0, r0, r2
   35f94:	ldrb	r0, [r0, #-1]
   35f98:	cmp	r0, #93	; 0x5d
   35f9c:	movweq	r1, #9
   35fa0:	str	r1, [r6]
   35fa4:	ldr	r0, [sl]
   35fa8:	ldr	r1, [sp, #4]
   35fac:	sub	r0, r1, r0
   35fb0:	str	r0, [r5]
   35fb4:	ldr	r0, [sp, #20]
   35fb8:	str	r4, [r0]
   35fbc:	mov	r1, r4
   35fc0:	mov	r0, r1
   35fc4:	sub	sp, fp, #28
   35fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35fcc:	ldr	r0, [r6]
   35fd0:	cmp	r0, #0
   35fd4:	bne	35fbc <flatcc_json_parser_generic_json@@Base+0x1044>
   35fd8:	mov	r0, #10
   35fdc:	str	r0, [r6]
   35fe0:	b	35fa4 <flatcc_json_parser_generic_json@@Base+0x102c>
   35fe4:	ldr	r0, [r6]
   35fe8:	cmp	r0, #0
   35fec:	bne	35fbc <flatcc_json_parser_generic_json@@Base+0x1044>
   35ff0:	mov	r0, #4
   35ff4:	b	36008 <flatcc_json_parser_generic_json@@Base+0x1090>
   35ff8:	ldr	r0, [r6]
   35ffc:	cmp	r0, #0
   36000:	bne	35fbc <flatcc_json_parser_generic_json@@Base+0x1044>
   36004:	mov	r0, #5
   36008:	str	r0, [r6]
   3600c:	ldr	r0, [sl]
   36010:	sub	r0, r7, r0
   36014:	add	r0, r0, #1
   36018:	str	r0, [r5]
   3601c:	ldr	r0, [sp, #20]
   36020:	str	r7, [r0]
   36024:	b	35fbc <flatcc_json_parser_generic_json@@Base+0x1044>
   36028:	ldr	r5, [sp, #16]
   3602c:	ldr	r1, [sp, #12]
   36030:	ldr	r0, [r5]
   36034:	cmp	r0, #0
   36038:	bne	35fbc <flatcc_json_parser_generic_json@@Base+0x1044>
   3603c:	mov	r0, #2
   36040:	str	r0, [r5]
   36044:	ldr	r0, [r1]
   36048:	b	35f44 <flatcc_json_parser_generic_json@@Base+0xfcc>

0003604c <flatcc_json_parser_double@@Base>:
   3604c:	push	{r4, r5, r6, r7, fp, lr}
   36050:	add	fp, sp, #16
   36054:	mov	r5, r0
   36058:	mov	r0, #0
   3605c:	mov	r6, r1
   36060:	cmp	r1, r2
   36064:	str	r0, [r3]
   36068:	str	r0, [r3, #4]
   3606c:	beq	36110 <flatcc_json_parser_double@@Base+0xc4>
   36070:	mov	r0, r6
   36074:	mov	r4, r2
   36078:	mov	r7, r3
   3607c:	ldrb	r1, [r0], #1
   36080:	cmp	r1, #45	; 0x2d
   36084:	movne	r0, r6
   36088:	sub	r2, r2, r0
   3608c:	cmp	r2, #2
   36090:	blt	360d0 <flatcc_json_parser_double@@Base+0x84>
   36094:	sub	r1, r1, #45	; 0x2d
   36098:	clz	r1, r1
   3609c:	lsr	r1, r1, #5
   360a0:	ldrb	r1, [r6, r1]
   360a4:	cmp	r1, #46	; 0x2e
   360a8:	beq	360c0 <flatcc_json_parser_double@@Base+0x74>
   360ac:	cmp	r1, #48	; 0x30
   360b0:	bne	360d0 <flatcc_json_parser_double@@Base+0x84>
   360b4:	ldrb	r0, [r0, #1]
   360b8:	cmp	r0, #48	; 0x30
   360bc:	bne	360d0 <flatcc_json_parser_double@@Base+0x84>
   360c0:	ldr	r0, [r5, #20]
   360c4:	cmp	r0, #0
   360c8:	bne	3613c <flatcc_json_parser_double@@Base+0xf0>
   360cc:	b	36120 <flatcc_json_parser_double@@Base+0xd4>
   360d0:	sub	r1, r4, r6
   360d4:	mov	r0, r6
   360d8:	mov	r2, r7
   360dc:	bl	36148 <flatcc_json_parser_double@@Base+0xfc>
   360e0:	cmp	r0, #0
   360e4:	cmpne	r0, r6
   360e8:	bne	36140 <flatcc_json_parser_double@@Base+0xf4>
   360ec:	vldr	d0, [r7]
   360f0:	bl	14e74 <__isinf@plt>
   360f4:	ldr	r1, [r5, #20]
   360f8:	cmp	r0, #0
   360fc:	beq	36118 <flatcc_json_parser_double@@Base+0xcc>
   36100:	cmp	r1, #0
   36104:	bne	3613c <flatcc_json_parser_double@@Base+0xf0>
   36108:	mov	r0, #7
   3610c:	b	36124 <flatcc_json_parser_double@@Base+0xd8>
   36110:	mov	r0, r6
   36114:	pop	{r4, r5, r6, r7, fp, pc}
   36118:	cmp	r1, #0
   3611c:	bne	3613c <flatcc_json_parser_double@@Base+0xf0>
   36120:	mov	r0, #6
   36124:	str	r6, [r5, #32]
   36128:	ldr	r1, [r5, #4]
   3612c:	sub	r1, r6, r1
   36130:	add	r1, r1, #1
   36134:	str	r1, [r5, #16]
   36138:	str	r0, [r5, #20]
   3613c:	mov	r0, r4
   36140:	pop	{r4, r5, r6, r7, fp, pc}
   36144:	nop	{0}
   36148:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3614c:	add	fp, sp, #28
   36150:	sub	sp, sp, #36	; 0x24
   36154:	cmp	r1, #1000	; 0x3e8
   36158:	mov	r3, r1
   3615c:	mov	r5, #0
   36160:	mov	r9, r0
   36164:	movge	r3, #1000	; 0x3e8
   36168:	str	r5, [r2]
   3616c:	str	r5, [r2, #4]
   36170:	add	ip, r0, r3
   36174:	add	lr, ip, #1
   36178:	cmp	lr, r0
   3617c:	beq	361d4 <flatcc_json_parser_double@@Base+0x188>
   36180:	ldrb	r0, [r9]
   36184:	mov	r4, r9
   36188:	cmp	r0, #45	; 0x2d
   3618c:	bne	361a4 <flatcc_json_parser_double@@Base+0x158>
   36190:	cmp	r3, #0
   36194:	beq	36578 <flatcc_json_parser_double@@Base+0x52c>
   36198:	add	r4, r9, #1
   3619c:	mov	r5, #1
   361a0:	ldrb	r0, [r4]
   361a4:	cmp	r0, #48	; 0x30
   361a8:	bne	361e4 <flatcc_json_parser_double@@Base+0x198>
   361ac:	add	r6, r4, #1
   361b0:	cmp	r4, ip
   361b4:	beq	36258 <flatcc_json_parser_double@@Base+0x20c>
   361b8:	ldrb	r1, [r6]
   361bc:	orr	r0, r1, #32
   361c0:	cmp	r0, #120	; 0x78
   361c4:	bne	36224 <flatcc_json_parser_double@@Base+0x1d8>
   361c8:	mov	r0, #0
   361cc:	str	r0, [r2]
   361d0:	str	r0, [r2, #4]
   361d4:	mov	r2, r9
   361d8:	mov	r0, r2
   361dc:	sub	sp, fp, #28
   361e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   361e4:	sub	r1, r0, #49	; 0x31
   361e8:	uxtb	r1, r1
   361ec:	cmp	r1, #9
   361f0:	bcc	3620c <flatcc_json_parser_double@@Base+0x1c0>
   361f4:	cmp	r5, #0
   361f8:	movne	r9, #0
   361fc:	mov	r2, r9
   36200:	mov	r0, r2
   36204:	sub	sp, fp, #28
   36208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3620c:	sub	r0, r0, #48	; 0x30
   36210:	add	r6, r4, #1
   36214:	asr	r1, r0, #31
   36218:	cmp	r6, lr
   3621c:	bne	36268 <flatcc_json_parser_double@@Base+0x21c>
   36220:	b	36578 <flatcc_json_parser_double@@Base+0x52c>
   36224:	cmp	r1, #48	; 0x30
   36228:	mov	r0, #0
   3622c:	mov	r1, #0
   36230:	bne	36260 <flatcc_json_parser_double@@Base+0x214>
   36234:	sub	r0, ip, #1
   36238:	mov	r1, r4
   3623c:	cmp	r0, r4
   36240:	beq	36254 <flatcc_json_parser_double@@Base+0x208>
   36244:	ldrb	r7, [r1, #2]
   36248:	add	r4, r1, #1
   3624c:	cmp	r7, #48	; 0x30
   36250:	beq	36238 <flatcc_json_parser_double@@Base+0x1ec>
   36254:	add	r6, r1, #2
   36258:	mov	r0, #0
   3625c:	mov	r1, #0
   36260:	cmp	r6, lr
   36264:	beq	36578 <flatcc_json_parser_double@@Base+0x52c>
   36268:	mov	sl, #10
   3626c:	mov	r7, r6
   36270:	str	r2, [sp, #20]
   36274:	ldrb	r8, [r7]
   36278:	sub	r2, r8, #48	; 0x30
   3627c:	uxtb	r4, r2
   36280:	mov	r2, #0
   36284:	cmp	r4, #9
   36288:	bhi	362c8 <flatcc_json_parser_double@@Base+0x27c>
   3628c:	movw	r4, #39320	; 0x9998
   36290:	movt	r4, #39321	; 0x9999
   36294:	subs	r4, r4, r0
   36298:	movw	r4, #39321	; 0x9999
   3629c:	movt	r4, #6553	; 0x1999
   362a0:	sbcs	r4, r4, r1
   362a4:	bcc	362e4 <flatcc_json_parser_double@@Base+0x298>
   362a8:	add	r1, r1, r1, lsl #2
   362ac:	add	r7, r7, #1
   362b0:	lsl	r1, r1, #1
   362b4:	umlal	r8, r1, r0, sl
   362b8:	subs	r0, r8, #48	; 0x30
   362bc:	sbc	r1, r1, #0
   362c0:	cmp	lr, r7
   362c4:	bne	36274 <flatcc_json_parser_double@@Base+0x228>
   362c8:	mov	r8, r0
   362cc:	mov	sl, r1
   362d0:	mov	r0, #0
   362d4:	cmp	r7, lr
   362d8:	str	r0, [sp, #24]
   362dc:	bne	3630c <flatcc_json_parser_double@@Base+0x2c0>
   362e0:	b	36800 <flatcc_json_parser_double@@Base+0x7b4>
   362e4:	adds	r4, r0, #1
   362e8:	adc	sl, r1, #0
   362ec:	cmp	r8, #52	; 0x34
   362f0:	mov	r8, r4
   362f4:	movls	r8, r0
   362f8:	movls	sl, r1
   362fc:	mov	r0, #1
   36300:	cmp	r7, lr
   36304:	str	r0, [sp, #24]
   36308:	beq	36800 <flatcc_json_parser_double@@Base+0x7b4>
   3630c:	sub	r0, r7, r6
   36310:	mov	r6, #0
   36314:	str	r0, [sp, #16]
   36318:	sub	r0, r3, r7
   3631c:	add	r0, r9, r0
   36320:	ldrb	r1, [r7]
   36324:	cmp	r1, #48	; 0x30
   36328:	bne	36430 <flatcc_json_parser_double@@Base+0x3e4>
   3632c:	add	r1, r7, #1
   36330:	cmp	r7, ip
   36334:	sub	r0, r0, #1
   36338:	add	r6, r6, #1
   3633c:	mov	r7, r1
   36340:	bne	36320 <flatcc_json_parser_double@@Base+0x2d4>
   36344:	mov	r7, r1
   36348:	mov	r2, #0
   3634c:	cmp	r7, lr
   36350:	beq	36800 <flatcc_json_parser_double@@Base+0x7b4>
   36354:	ldrb	r0, [r7]
   36358:	cmp	r0, #46	; 0x2e
   3635c:	bne	36550 <flatcc_json_parser_double@@Base+0x504>
   36360:	mov	r4, r7
   36364:	ldrb	r0, [r4, #1]!
   36368:	sub	r1, r0, #48	; 0x30
   3636c:	uxtb	r1, r1
   36370:	cmp	r1, #9
   36374:	bhi	36800 <flatcc_json_parser_double@@Base+0x7b4>
   36378:	cmp	r7, ip
   3637c:	beq	3648c <flatcc_json_parser_double@@Base+0x440>
   36380:	sub	r1, r3, r7
   36384:	str	r4, [sp, #8]
   36388:	add	r1, r1, r9
   3638c:	sub	r1, r1, #1
   36390:	str	r1, [sp, #12]
   36394:	mov	r1, #0
   36398:	mov	r3, r1
   3639c:	movw	r1, #39320	; 0x9998
   363a0:	movt	r1, #39321	; 0x9999
   363a4:	subs	r1, r1, r8
   363a8:	movw	r1, #39321	; 0x9999
   363ac:	movt	r1, #6553	; 0x1999
   363b0:	sbcs	r1, r1, sl
   363b4:	bcc	3649c <flatcc_json_parser_double@@Base+0x450>
   363b8:	add	r1, sl, sl, lsl #2
   363bc:	uxtb	r0, r0
   363c0:	mov	r4, #10
   363c4:	lsl	r1, r1, #1
   363c8:	umlal	r0, r1, r8, r4
   363cc:	add	r4, r7, r3
   363d0:	subs	r8, r0, #48	; 0x30
   363d4:	ldr	r0, [sp, #12]
   363d8:	sbc	sl, r1, #0
   363dc:	cmp	r0, r3
   363e0:	beq	36414 <flatcc_json_parser_double@@Base+0x3c8>
   363e4:	ldrb	r0, [r4, #2]
   363e8:	str	sl, [sp, #28]
   363ec:	mov	sl, r8
   363f0:	mov	r8, r5
   363f4:	add	r1, r3, #1
   363f8:	sub	r5, r0, #48	; 0x30
   363fc:	uxtb	r5, r5
   36400:	cmp	r5, #10
   36404:	mov	r5, r8
   36408:	mov	r8, sl
   3640c:	ldr	sl, [sp, #28]
   36410:	bcc	36398 <flatcc_json_parser_double@@Base+0x34c>
   36414:	mvn	r0, r3
   36418:	add	r7, r4, #2
   3641c:	add	r6, r0, r6
   36420:	ldr	r4, [sp, #8]
   36424:	cmp	r7, lr
   36428:	bne	364e0 <flatcc_json_parser_double@@Base+0x494>
   3642c:	b	36800 <flatcc_json_parser_double@@Base+0x7b4>
   36430:	sub	r1, r1, #49	; 0x31
   36434:	uxtb	r1, r1
   36438:	cmp	r1, #8
   3643c:	bhi	3647c <flatcc_json_parser_double@@Base+0x430>
   36440:	mvn	r2, #0
   36444:	mov	r1, r2
   36448:	cmp	r0, #0
   3644c:	beq	3646c <flatcc_json_parser_double@@Base+0x420>
   36450:	ldrb	r2, [r7, -r1]
   36454:	sub	r0, r0, #1
   36458:	sub	r2, r2, #48	; 0x30
   3645c:	uxtb	r4, r2
   36460:	sub	r2, r1, #1
   36464:	cmp	r4, #10
   36468:	bcc	36444 <flatcc_json_parser_double@@Base+0x3f8>
   3646c:	mov	r0, #1
   36470:	sub	r6, r6, r1
   36474:	sub	r7, r7, r1
   36478:	str	r0, [sp, #24]
   3647c:	mov	r2, #0
   36480:	cmp	r7, lr
   36484:	bne	36354 <flatcc_json_parser_double@@Base+0x308>
   36488:	b	36800 <flatcc_json_parser_double@@Base+0x7b4>
   3648c:	mov	r7, r4
   36490:	cmp	r7, lr
   36494:	bne	364e0 <flatcc_json_parser_double@@Base+0x494>
   36498:	b	36800 <flatcc_json_parser_double@@Base+0x7b4>
   3649c:	add	r1, r7, r3
   364a0:	sub	r6, r6, r3
   364a4:	add	r7, r1, #1
   364a8:	ldr	r1, [sp, #24]
   364ac:	cmp	r1, #0
   364b0:	bne	364d4 <flatcc_json_parser_double@@Base+0x488>
   364b4:	uxtb	r0, r0
   364b8:	adds	r1, r8, #1
   364bc:	adc	r3, sl, #0
   364c0:	cmp	r0, #52	; 0x34
   364c4:	mov	r0, #1
   364c8:	movhi	r8, r1
   364cc:	movhi	sl, r3
   364d0:	str	r0, [sp, #24]
   364d4:	ldr	r4, [sp, #8]
   364d8:	cmp	r7, lr
   364dc:	beq	36800 <flatcc_json_parser_double@@Base+0x7b4>
   364e0:	ldr	r1, [sp, #16]
   364e4:	sub	r0, r7, r4
   364e8:	add	r1, r0, r1
   364ec:	str	r1, [sp, #16]
   364f0:	ldrb	r0, [r7]
   364f4:	cmp	r0, #48	; 0x30
   364f8:	bne	36510 <flatcc_json_parser_double@@Base+0x4c4>
   364fc:	add	r7, r7, #1
   36500:	add	r6, r6, #1
   36504:	cmp	lr, r7
   36508:	bne	364f0 <flatcc_json_parser_double@@Base+0x4a4>
   3650c:	b	36550 <flatcc_json_parser_double@@Base+0x504>
   36510:	sub	r0, r0, #49	; 0x31
   36514:	uxtb	r0, r0
   36518:	cmp	r0, #8
   3651c:	bhi	36550 <flatcc_json_parser_double@@Base+0x504>
   36520:	mov	r0, r7
   36524:	cmp	ip, r7
   36528:	beq	36544 <flatcc_json_parser_double@@Base+0x4f8>
   3652c:	ldrb	r1, [r0, #1]
   36530:	add	r7, r0, #1
   36534:	sub	r1, r1, #48	; 0x30
   36538:	uxtb	r1, r1
   3653c:	cmp	r1, #10
   36540:	bcc	36520 <flatcc_json_parser_double@@Base+0x4d4>
   36544:	add	r7, r0, #1
   36548:	mov	r0, #1
   3654c:	str	r0, [sp, #24]
   36550:	cmp	r7, lr
   36554:	beq	36800 <flatcc_json_parser_double@@Base+0x7b4>
   36558:	ldrb	r0, [r7]
   3655c:	mov	r4, #0
   36560:	orr	r0, r0, #32
   36564:	cmp	r0, #101	; 0x65
   36568:	bne	36588 <flatcc_json_parser_double@@Base+0x53c>
   3656c:	sub	r0, lr, r7
   36570:	cmp	r0, #2
   36574:	bge	365fc <flatcc_json_parser_double@@Base+0x5b0>
   36578:	mov	r2, #0
   3657c:	mov	r0, r2
   36580:	sub	sp, fp, #28
   36584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36588:	mov	r0, #0
   3658c:	cmp	r7, lr
   36590:	mov	r2, #0
   36594:	beq	36800 <flatcc_json_parser_double@@Base+0x7b4>
   36598:	vmov.i32	d16, #0	; 0x00000000
   3659c:	cmp	r4, #0
   365a0:	rsbne	r0, r0, #0
   365a4:	orrs	r1, r8, sl
   365a8:	beq	365d0 <flatcc_json_parser_double@@Base+0x584>
   365ac:	ldr	r2, [sp, #16]
   365b0:	add	r1, r2, r6
   365b4:	add	r4, r1, r0
   365b8:	cmn	r4, #324	; 0x144
   365bc:	blt	365d0 <flatcc_json_parser_double@@Base+0x584>
   365c0:	movw	r0, #310	; 0x136
   365c4:	cmp	r4, r0
   365c8:	ble	36630 <flatcc_json_parser_double@@Base+0x5e4>
   365cc:	vldr	d16, [pc, #1004]	; 369c0 <flatcc_json_parser_double@@Base+0x974>
   365d0:	ldr	r4, [sp, #20]
   365d4:	vstr	d16, [r4]
   365d8:	cmp	r5, #0
   365dc:	beq	365ec <flatcc_json_parser_double@@Base+0x5a0>
   365e0:	vldr	d16, [r4]
   365e4:	vneg.f64	d16, d16
   365e8:	vstr	d16, [r4]
   365ec:	mov	r2, r7
   365f0:	mov	r0, r2
   365f4:	sub	sp, fp, #28
   365f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   365fc:	mov	r3, r7
   36600:	ldrb	r0, [r3, #1]!
   36604:	cmp	r0, #45	; 0x2d
   36608:	beq	3672c <flatcc_json_parser_double@@Base+0x6e0>
   3660c:	mov	r4, #0
   36610:	cmp	r0, #43	; 0x2b
   36614:	bne	3673c <flatcc_json_parser_double@@Base+0x6f0>
   36618:	add	r3, r7, #2
   3661c:	mov	r2, #0
   36620:	cmp	r3, lr
   36624:	beq	36800 <flatcc_json_parser_double@@Base+0x7b4>
   36628:	mov	r4, #0
   3662c:	b	3673c <flatcc_json_parser_double@@Base+0x6f0>
   36630:	mov	r0, #0
   36634:	mov	r6, r2
   36638:	cmp	r0, sl, lsr #21
   3663c:	bne	367a0 <flatcc_json_parser_double@@Base+0x754>
   36640:	cmp	r4, #22
   36644:	bhi	367a0 <flatcc_json_parser_double@@Base+0x754>
   36648:	mov	r0, r8
   3664c:	mov	r1, sl
   36650:	bl	45e30 <flatcc_json_printer_clear@@Base+0x4e8>
   36654:	vmov	d16, r0, r1
   36658:	sub	r2, r4, r6
   3665c:	add	r0, r2, #22
   36660:	cmp	r0, #44	; 0x2c
   36664:	bhi	365d0 <flatcc_json_parser_double@@Base+0x584>
   36668:	add	r1, pc, #0
   3666c:	ldr	pc, [r1, r0, lsl #2]
   36670:	andeq	r6, r3, r4, lsr #14
   36674:	andeq	r6, r3, ip, lsl #16
   36678:	andeq	r6, r3, r4, lsl r8
   3667c:	andeq	r6, r3, ip, lsl r8
   36680:	andeq	r6, r3, r4, lsr #16
   36684:	andeq	r6, r3, ip, lsr #16
   36688:	andeq	r6, r3, r4, lsr r8
   3668c:	andeq	r6, r3, ip, lsr r8
   36690:	andeq	r6, r3, r4, asr #16
   36694:	andeq	r6, r3, ip, asr #16
   36698:	andeq	r6, r3, r4, asr r8
   3669c:	andeq	r6, r3, ip, asr r8
   366a0:	andeq	r6, r3, r4, ror #16
   366a4:	andeq	r6, r3, ip, ror #16
   366a8:	andeq	r6, r3, r4, ror r8
   366ac:	andeq	r6, r3, ip, ror r8
   366b0:	andeq	r6, r3, r4, lsl #17
   366b4:	andeq	r6, r3, ip, lsl #17
   366b8:	muleq	r3, r4, r8
   366bc:	muleq	r3, ip, r8
   366c0:	andeq	r6, r3, r4, lsr #17
   366c4:	andeq	r6, r3, ip, lsr #17
   366c8:	ldrdeq	r6, [r3], -r0
   366cc:			; <UNDEFINED> instruction: 0x000368b8
   366d0:	andeq	r6, r3, r4, asr #17
   366d4:	ldrdeq	r6, [r3], -r0
   366d8:	ldrdeq	r6, [r3], -ip
   366dc:	andeq	r6, r3, r8, ror #17
   366e0:	strdeq	r6, [r3], -r4
   366e4:	andeq	r6, r3, r0, lsl #18
   366e8:	andeq	r6, r3, ip, lsl #18
   366ec:	andeq	r6, r3, r8, lsl r9
   366f0:	andeq	r6, r3, r4, lsr #18
   366f4:	andeq	r6, r3, r0, lsr r9
   366f8:	andeq	r6, r3, ip, lsr r9
   366fc:	andeq	r6, r3, r8, asr #18
   36700:	andeq	r6, r3, r4, asr r9
   36704:	andeq	r6, r3, r0, ror #18
   36708:	andeq	r6, r3, ip, ror #18
   3670c:	andeq	r6, r3, r8, ror r9
   36710:	andeq	r6, r3, r4, lsl #19
   36714:	muleq	r3, r0, r9
   36718:	muleq	r3, ip, r9
   3671c:	andeq	r6, r3, r8, lsr #19
   36720:			; <UNDEFINED> instruction: 0x000369b4
   36724:	vldr	d17, [pc, #828]	; 36a68 <flatcc_json_parser_double@@Base+0xa1c>
   36728:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   3672c:	add	r3, r7, #2
   36730:	mov	r4, #1
   36734:	cmp	r3, lr
   36738:	beq	367fc <flatcc_json_parser_double@@Base+0x7b0>
   3673c:	ldrb	r0, [r3]
   36740:	mov	r2, #0
   36744:	sub	r0, r0, #48	; 0x30
   36748:	uxtb	r1, r0
   3674c:	cmp	r1, #9
   36750:	bhi	36800 <flatcc_json_parser_double@@Base+0x7b4>
   36754:	cmp	r3, ip
   36758:	beq	3678c <flatcc_json_parser_double@@Base+0x740>
   3675c:	ldrb	r1, [r3, #1]
   36760:	sub	r2, r1, #48	; 0x30
   36764:	uxtb	r2, r2
   36768:	cmp	r2, #9
   3676c:	bhi	3678c <flatcc_json_parser_double@@Base+0x740>
   36770:	cmp	r0, #32768	; 0x8000
   36774:	add	r3, r3, #1
   36778:	addlt	r0, r0, r0, lsl #2
   3677c:	addlt	r0, r1, r0, lsl #1
   36780:	sublt	r0, r0, #48	; 0x30
   36784:	cmp	ip, r3
   36788:	bne	3675c <flatcc_json_parser_double@@Base+0x710>
   3678c:	add	r7, r3, #1
   36790:	cmp	r7, lr
   36794:	mov	r2, #0
   36798:	bne	36598 <flatcc_json_parser_double@@Base+0x54c>
   3679c:	b	36800 <flatcc_json_parser_double@@Base+0x7b4>
   367a0:	ldr	r0, [sp, #24]
   367a4:	ldr	r3, [sp, #20]
   367a8:	mov	r2, r4
   367ac:	mov	r1, sl
   367b0:	str	r0, [sp]
   367b4:	str	r3, [sp, #4]
   367b8:	mov	r4, r3
   367bc:	mov	r0, r8
   367c0:	mov	r3, r6
   367c4:	bl	34080 <grisu3_diy_fp_encode_double@@Base>
   367c8:	cmp	r0, #0
   367cc:	bne	365d8 <flatcc_json_parser_double@@Base+0x58c>
   367d0:	add	r1, sp, #32
   367d4:	mov	r0, r9
   367d8:	bl	14f04 <strtod@plt>
   367dc:	vstr	d0, [r4]
   367e0:	ldr	r0, [sp, #32]
   367e4:	cmp	r0, r7
   367e8:	movcc	r7, r0
   367ec:	mov	r2, r7
   367f0:	mov	r0, r2
   367f4:	sub	sp, fp, #28
   367f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   367fc:	mov	r2, #0
   36800:	mov	r0, r2
   36804:	sub	sp, fp, #28
   36808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3680c:	vldr	d17, [pc, #436]	; 369c8 <flatcc_json_parser_double@@Base+0x97c>
   36810:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   36814:	vldr	d17, [pc, #436]	; 369d0 <flatcc_json_parser_double@@Base+0x984>
   36818:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   3681c:	vldr	d17, [pc, #436]	; 369d8 <flatcc_json_parser_double@@Base+0x98c>
   36820:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   36824:	vldr	d17, [pc, #436]	; 369e0 <flatcc_json_parser_double@@Base+0x994>
   36828:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   3682c:	vldr	d17, [pc, #436]	; 369e8 <flatcc_json_parser_double@@Base+0x99c>
   36830:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   36834:	vldr	d17, [pc, #436]	; 369f0 <flatcc_json_parser_double@@Base+0x9a4>
   36838:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   3683c:	vldr	d17, [pc, #436]	; 369f8 <flatcc_json_parser_double@@Base+0x9ac>
   36840:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   36844:	vldr	d17, [pc, #436]	; 36a00 <flatcc_json_parser_double@@Base+0x9b4>
   36848:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   3684c:	vldr	d17, [pc, #436]	; 36a08 <flatcc_json_parser_double@@Base+0x9bc>
   36850:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   36854:	vldr	d17, [pc, #436]	; 36a10 <flatcc_json_parser_double@@Base+0x9c4>
   36858:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   3685c:	vldr	d17, [pc, #436]	; 36a18 <flatcc_json_parser_double@@Base+0x9cc>
   36860:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   36864:	vldr	d17, [pc, #436]	; 36a20 <flatcc_json_parser_double@@Base+0x9d4>
   36868:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   3686c:	vldr	d17, [pc, #436]	; 36a28 <flatcc_json_parser_double@@Base+0x9dc>
   36870:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   36874:	vldr	d17, [pc, #436]	; 36a30 <flatcc_json_parser_double@@Base+0x9e4>
   36878:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   3687c:	vldr	d17, [pc, #436]	; 36a38 <flatcc_json_parser_double@@Base+0x9ec>
   36880:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   36884:	vldr	d17, [pc, #436]	; 36a40 <flatcc_json_parser_double@@Base+0x9f4>
   36888:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   3688c:	vldr	d17, [pc, #436]	; 36a48 <flatcc_json_parser_double@@Base+0x9fc>
   36890:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   36894:	vldr	d17, [pc, #436]	; 36a50 <flatcc_json_parser_double@@Base+0xa04>
   36898:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   3689c:	vldr	d17, [pc, #436]	; 36a58 <flatcc_json_parser_double@@Base+0xa0c>
   368a0:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   368a4:	vldr	d17, [pc, #436]	; 36a60 <flatcc_json_parser_double@@Base+0xa14>
   368a8:	b	368b0 <flatcc_json_parser_double@@Base+0x864>
   368ac:	vmov.f64	d17, #36	; 0x41200000  10.0
   368b0:	vdiv.f64	d16, d16, d17
   368b4:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   368b8:	vmov.f64	d17, #36	; 0x41200000  10.0
   368bc:	vmul.f64	d16, d16, d17
   368c0:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   368c4:	vldr	d17, [pc, #404]	; 36a60 <flatcc_json_parser_double@@Base+0xa14>
   368c8:	vmul.f64	d16, d16, d17
   368cc:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   368d0:	vldr	d17, [pc, #384]	; 36a58 <flatcc_json_parser_double@@Base+0xa0c>
   368d4:	vmul.f64	d16, d16, d17
   368d8:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   368dc:	vldr	d17, [pc, #364]	; 36a50 <flatcc_json_parser_double@@Base+0xa04>
   368e0:	vmul.f64	d16, d16, d17
   368e4:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   368e8:	vldr	d17, [pc, #344]	; 36a48 <flatcc_json_parser_double@@Base+0x9fc>
   368ec:	vmul.f64	d16, d16, d17
   368f0:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   368f4:	vldr	d17, [pc, #324]	; 36a40 <flatcc_json_parser_double@@Base+0x9f4>
   368f8:	vmul.f64	d16, d16, d17
   368fc:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   36900:	vldr	d17, [pc, #304]	; 36a38 <flatcc_json_parser_double@@Base+0x9ec>
   36904:	vmul.f64	d16, d16, d17
   36908:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   3690c:	vldr	d17, [pc, #284]	; 36a30 <flatcc_json_parser_double@@Base+0x9e4>
   36910:	vmul.f64	d16, d16, d17
   36914:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   36918:	vldr	d17, [pc, #264]	; 36a28 <flatcc_json_parser_double@@Base+0x9dc>
   3691c:	vmul.f64	d16, d16, d17
   36920:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   36924:	vldr	d17, [pc, #244]	; 36a20 <flatcc_json_parser_double@@Base+0x9d4>
   36928:	vmul.f64	d16, d16, d17
   3692c:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   36930:	vldr	d17, [pc, #224]	; 36a18 <flatcc_json_parser_double@@Base+0x9cc>
   36934:	vmul.f64	d16, d16, d17
   36938:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   3693c:	vldr	d17, [pc, #204]	; 36a10 <flatcc_json_parser_double@@Base+0x9c4>
   36940:	vmul.f64	d16, d16, d17
   36944:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   36948:	vldr	d17, [pc, #184]	; 36a08 <flatcc_json_parser_double@@Base+0x9bc>
   3694c:	vmul.f64	d16, d16, d17
   36950:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   36954:	vldr	d17, [pc, #164]	; 36a00 <flatcc_json_parser_double@@Base+0x9b4>
   36958:	vmul.f64	d16, d16, d17
   3695c:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   36960:	vldr	d17, [pc, #144]	; 369f8 <flatcc_json_parser_double@@Base+0x9ac>
   36964:	vmul.f64	d16, d16, d17
   36968:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   3696c:	vldr	d17, [pc, #124]	; 369f0 <flatcc_json_parser_double@@Base+0x9a4>
   36970:	vmul.f64	d16, d16, d17
   36974:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   36978:	vldr	d17, [pc, #104]	; 369e8 <flatcc_json_parser_double@@Base+0x99c>
   3697c:	vmul.f64	d16, d16, d17
   36980:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   36984:	vldr	d17, [pc, #84]	; 369e0 <flatcc_json_parser_double@@Base+0x994>
   36988:	vmul.f64	d16, d16, d17
   3698c:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   36990:	vldr	d17, [pc, #64]	; 369d8 <flatcc_json_parser_double@@Base+0x98c>
   36994:	vmul.f64	d16, d16, d17
   36998:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   3699c:	vldr	d17, [pc, #44]	; 369d0 <flatcc_json_parser_double@@Base+0x984>
   369a0:	vmul.f64	d16, d16, d17
   369a4:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   369a8:	vldr	d17, [pc, #24]	; 369c8 <flatcc_json_parser_double@@Base+0x97c>
   369ac:	vmul.f64	d16, d16, d17
   369b0:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   369b4:	vldr	d17, [pc, #172]	; 36a68 <flatcc_json_parser_double@@Base+0xa1c>
   369b8:	vmul.f64	d16, d16, d17
   369bc:	b	365d0 <flatcc_json_parser_double@@Base+0x584>
   369c0:	andeq	r0, r0, r0
   369c4:	svcvc	0x00f00000	; IMB
   369c8:	usatle	lr, #2, r0, asr #30
   369cc:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   369d0:	ldmvc	r5!, {r6, sl, fp, pc}
   369d4:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   369d8:	addsvs	r3, r1, r0, lsl #26
   369dc:	mvnmi	r5, #228, 16	; 0xe40000
   369e0:	strbvs	ip, [lr, -r0, lsl #16]
   369e4:			; <UNDEFINED> instruction: 0x43abc16d
   369e8:	ldrbhi	sl, [r8]
   369ec:	cmnmi	r6, #1459617792	; 0x57000000
   369f0:	strbcc	r8, [r0, r0]!
   369f4:	movtmi	ip, #4985	; 0x1379
   369f8:	ldrtcs	r0, [r4], -r0
   369fc:	movwmi	r6, #52213	; 0xcbf5
   36a00:	cdpne	0, 9, cr0, cr0, cr0, {0}
   36a04:	sbcsmi	fp, r6, #196, 24	; 0xc400
   36a08:	strb	r0, [r0, #-0]
   36a0c:	adcmi	r3, r2, #156	; 0x9c
   36a10:	andge	r0, r0, #0
   36a14:	rsbmi	r1, sp, #148, 20	; 0x94000
   36a18:	stmda	r0, {}	; <UNPREDICTABLE>
   36a1c:	eorsmi	r4, r7, #7733248	; 0x760000
   36a20:	andcs	r0, r0, r0
   36a24:	andmi	sl, r2, #95	; 0x5f
   36a28:	andeq	r0, r0, r0
   36a2c:	bicmi	ip, sp, r5, ror #26
   36a30:	andeq	r0, r0, r0
   36a34:	orrsmi	sp, r7, r4, lsl #15
   36a38:	andeq	r0, r0, r0
   36a3c:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   36a40:	andeq	r0, r0, r0
   36a44:	smlawbmi	lr, r0, r4, r8
   36a48:	andeq	r0, r0, r0
   36a4c:	rscsmi	r6, r8, r0, lsl #20
   36a50:	andeq	r0, r0, r0
   36a54:	sbcmi	r8, r3, r0, lsl #16
   36a58:	andeq	r0, r0, r0
   36a5c:	addmi	r4, pc, r0
   36a60:	andeq	r0, r0, r0
   36a64:	subsmi	r0, r9, r0
   36a68:			; <UNDEFINED> instruction: 0x064dd592
   36a6c:	strmi	pc, [r0], #207	; 0xcf

00036a70 <flatcc_json_parser_float@@Base>:
   36a70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   36a74:	add	fp, sp, #24
   36a78:	vpush	{d8-d9}
   36a7c:	sub	sp, sp, #8
   36a80:	mov	r8, r0
   36a84:	mov	r0, #0
   36a88:	mov	r6, r1
   36a8c:	cmp	r1, r2
   36a90:	str	r0, [r3]
   36a94:	beq	36b6c <flatcc_json_parser_float@@Base+0xfc>
   36a98:	mov	r0, r6
   36a9c:	mov	r5, r2
   36aa0:	mov	r7, r3
   36aa4:	ldrb	r1, [r0], #1
   36aa8:	cmp	r1, #45	; 0x2d
   36aac:	movne	r0, r6
   36ab0:	sub	r2, r2, r0
   36ab4:	cmp	r2, #2
   36ab8:	blt	36af8 <flatcc_json_parser_float@@Base+0x88>
   36abc:	sub	r1, r1, #45	; 0x2d
   36ac0:	clz	r1, r1
   36ac4:	lsr	r1, r1, #5
   36ac8:	ldrb	r1, [r6, r1]
   36acc:	cmp	r1, #46	; 0x2e
   36ad0:	beq	36ae8 <flatcc_json_parser_float@@Base+0x78>
   36ad4:	cmp	r1, #48	; 0x30
   36ad8:	bne	36af8 <flatcc_json_parser_float@@Base+0x88>
   36adc:	ldrb	r0, [r0, #1]
   36ae0:	cmp	r0, #48	; 0x30
   36ae4:	bne	36af8 <flatcc_json_parser_float@@Base+0x88>
   36ae8:	ldr	r0, [r8, #20]
   36aec:	cmp	r0, #0
   36af0:	bne	36ba4 <flatcc_json_parser_float@@Base+0x134>
   36af4:	b	36b88 <flatcc_json_parser_float@@Base+0x118>
   36af8:	sub	r1, r5, r6
   36afc:	mov	r2, sp
   36b00:	mov	r0, r6
   36b04:	bl	36148 <flatcc_json_parser_double@@Base+0xfc>
   36b08:	vldr	d16, [sp]
   36b0c:	mov	r4, r0
   36b10:	add	r0, pc, #160	; 0xa0
   36b14:	vcmpe.f64	d16, #0.0
   36b18:	vcvt.f32.f64	s16, d16
   36b1c:	vmrs	APSR_nzcv, fpscr
   36b20:	addmi	r0, r0, #4
   36b24:	vldr	s18, [r0]
   36b28:	vmov.f32	s0, s16
   36b2c:	bl	14e68 <__isinff@plt>
   36b30:	cmp	r0, #0
   36b34:	vseleq.f32	s0, s16, s18
   36b38:	movne	r4, r6
   36b3c:	cmp	r4, #0
   36b40:	cmpne	r4, r6
   36b44:	vstr	s0, [r7]
   36b48:	bne	36b70 <flatcc_json_parser_float@@Base+0x100>
   36b4c:	bl	14e68 <__isinff@plt>
   36b50:	ldr	r1, [r8, #20]
   36b54:	cmp	r0, #0
   36b58:	beq	36b80 <flatcc_json_parser_float@@Base+0x110>
   36b5c:	cmp	r1, #0
   36b60:	bne	36ba4 <flatcc_json_parser_float@@Base+0x134>
   36b64:	mov	r0, #7
   36b68:	b	36b8c <flatcc_json_parser_float@@Base+0x11c>
   36b6c:	mov	r4, r6
   36b70:	mov	r0, r4
   36b74:	sub	sp, fp, #40	; 0x28
   36b78:	vpop	{d8-d9}
   36b7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   36b80:	cmp	r1, #0
   36b84:	bne	36ba4 <flatcc_json_parser_float@@Base+0x134>
   36b88:	mov	r0, #6
   36b8c:	str	r6, [r8, #32]
   36b90:	ldr	r1, [r8, #4]
   36b94:	sub	r1, r6, r1
   36b98:	add	r1, r1, #1
   36b9c:	str	r1, [r8, #16]
   36ba0:	str	r0, [r8, #20]
   36ba4:	mov	r4, r5
   36ba8:	mov	r0, r4
   36bac:	sub	sp, fp, #40	; 0x28
   36bb0:	vpop	{d8-d9}
   36bb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   36bb8:	svcvc	0x00800000
   36bbc:			; <UNDEFINED> instruction: 0xff800000

00036bc0 <flatcc_json_parser_integer@@Base>:
   36bc0:	push	{r4, r5, r6, r7, fp, lr}
   36bc4:	add	fp, sp, #16
   36bc8:	mov	ip, r1
   36bcc:	cmp	r1, r2
   36bd0:	beq	36cbc <flatcc_json_parser_integer@@Base+0xfc>
   36bd4:	ldrb	r1, [ip]
   36bd8:	mov	r4, #0
   36bdc:	sub	r1, r1, #45	; 0x2d
   36be0:	clz	r1, r1
   36be4:	lsr	r1, r1, #5
   36be8:	str	r1, [r3]
   36bec:	add	r1, ip, r1
   36bf0:	cmp	r1, r2
   36bf4:	beq	36ca8 <flatcc_json_parser_integer@@Base+0xe8>
   36bf8:	mov	lr, #10
   36bfc:	mov	r5, #0
   36c00:	ldrb	r6, [r1]
   36c04:	sub	r7, r6, #48	; 0x30
   36c08:	uxtb	r7, r7
   36c0c:	cmp	r7, #9
   36c10:	bhi	36cc4 <flatcc_json_parser_integer@@Base+0x104>
   36c14:	add	r7, r5, r5, lsl #2
   36c18:	lsl	r7, r7, #1
   36c1c:	umlal	r6, r7, r4, lr
   36c20:	subs	r6, r6, #48	; 0x30
   36c24:	sbc	r7, r7, #0
   36c28:	subs	r4, r6, r4
   36c2c:	sbcs	r4, r7, r5
   36c30:	bcc	36cd4 <flatcc_json_parser_integer@@Base+0x114>
   36c34:	add	r1, r1, #1
   36c38:	mov	r4, r6
   36c3c:	mov	r5, r7
   36c40:	cmp	r2, r1
   36c44:	bne	36c00 <flatcc_json_parser_integer@@Base+0x40>
   36c48:	mov	r3, #0
   36c4c:	mov	r1, r2
   36c50:	mov	r4, r6
   36c54:	mov	r5, r7
   36c58:	cmp	r1, ip
   36c5c:	beq	36cbc <flatcc_json_parser_integer@@Base+0xfc>
   36c60:	cmp	r3, #0
   36c64:	beq	36cf0 <flatcc_json_parser_integer@@Base+0x130>
   36c68:	ldrb	r3, [r1]
   36c6c:	cmp	r3, #46	; 0x2e
   36c70:	cmpne	r3, #101	; 0x65
   36c74:	bne	36ce8 <flatcc_json_parser_integer@@Base+0x128>
   36c78:	ldr	r3, [r0, #20]
   36c7c:	cmp	r3, #0
   36c80:	bne	36ce0 <flatcc_json_parser_integer@@Base+0x120>
   36c84:	str	r1, [r0, #32]
   36c88:	mov	r3, #12
   36c8c:	ldr	r7, [r0, #4]
   36c90:	sub	r1, r1, r7
   36c94:	add	r1, r1, #1
   36c98:	str	r1, [r0, #16]
   36c9c:	str	r3, [r0, #20]
   36ca0:	mov	r0, r2
   36ca4:	pop	{r4, r5, r6, r7, fp, pc}
   36ca8:	mov	r1, r2
   36cac:	mov	r5, #0
   36cb0:	mov	r3, #0
   36cb4:	cmp	r1, ip
   36cb8:	bne	36c60 <flatcc_json_parser_integer@@Base+0xa0>
   36cbc:	mov	r0, ip
   36cc0:	pop	{r4, r5, r6, r7, fp, pc}
   36cc4:	mov	r3, #1
   36cc8:	cmp	r1, ip
   36ccc:	bne	36c60 <flatcc_json_parser_integer@@Base+0xa0>
   36cd0:	b	36cbc <flatcc_json_parser_integer@@Base+0xfc>
   36cd4:	ldr	r7, [r0, #20]
   36cd8:	cmp	r7, #0
   36cdc:	beq	36d04 <flatcc_json_parser_integer@@Base+0x144>
   36ce0:	mov	r0, r2
   36ce4:	pop	{r4, r5, r6, r7, fp, pc}
   36ce8:	cmp	r3, #69	; 0x45
   36cec:	beq	36c78 <flatcc_json_parser_integer@@Base+0xb8>
   36cf0:	ldr	r0, [fp, #8]
   36cf4:	mov	ip, r1
   36cf8:	strd	r4, [r0]
   36cfc:	mov	r0, ip
   36d00:	pop	{r4, r5, r6, r7, fp, pc}
   36d04:	str	r1, [r0, #32]
   36d08:	cmp	r3, #0
   36d0c:	mov	r7, #8
   36d10:	ldr	r3, [r0, #4]
   36d14:	movweq	r7, #7
   36d18:	sub	r1, r1, r3
   36d1c:	add	r1, r1, #1
   36d20:	str	r1, [r0, #16]
   36d24:	str	r7, [r0, #20]
   36d28:	mov	r0, r2
   36d2c:	pop	{r4, r5, r6, r7, fp, pc}

00036d30 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   36d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36d34:	add	fp, sp, #28
   36d38:	sub	sp, sp, #28
   36d3c:	ldr	r9, [fp, #8]
   36d40:	mov	r6, r3
   36d44:	mov	r4, r2
   36d48:	mov	r5, r0
   36d4c:	cmp	r1, r2
   36d50:	beq	36d98 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   36d54:	ldrb	r0, [r1]
   36d58:	cmp	r0, #34	; 0x22
   36d5c:	bne	36d98 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   36d60:	add	sl, r1, #1
   36d64:	cmp	sl, r4
   36d68:	beq	36da4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x74>
   36d6c:	mov	r7, sl
   36d70:	ldrb	r1, [r7]
   36d74:	cmp	r1, #32
   36d78:	bcc	36ff8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c8>
   36d7c:	cmp	r1, #34	; 0x22
   36d80:	cmpne	r1, #92	; 0x5c
   36d84:	beq	36e48 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x118>
   36d88:	add	r7, r7, #1
   36d8c:	cmp	r4, r7
   36d90:	bne	36d70 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
   36d94:	b	36da4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x74>
   36d98:	ldr	r0, [r5, #20]
   36d9c:	cmp	r0, #0
   36da0:	beq	36db8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x88>
   36da4:	ldr	r0, [r5, #20]
   36da8:	cmp	r0, #0
   36dac:	mov	r0, r4
   36db0:	bne	36e04 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   36db4:	b	36de4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xb4>
   36db8:	str	r1, [r5, #32]
   36dbc:	mov	r0, #16
   36dc0:	ldr	r2, [r5, #4]
   36dc4:	sub	r1, r1, r2
   36dc8:	add	r1, r1, #1
   36dcc:	str	r1, [r5, #16]
   36dd0:	str	r0, [r5, #20]
   36dd4:	ldr	r0, [r5, #20]
   36dd8:	cmp	r0, #0
   36ddc:	mov	r0, r4
   36de0:	bne	36e04 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   36de4:	str	r4, [r5, #32]
   36de8:	mov	r0, #20
   36dec:	ldr	r1, [r5, #4]
   36df0:	sub	r1, r4, r1
   36df4:	add	r1, r1, #1
   36df8:	str	r1, [r5, #16]
   36dfc:	str	r0, [r5, #20]
   36e00:	mov	r0, r4
   36e04:	mov	r1, #0
   36e08:	str	r1, [r6]
   36e0c:	ldr	r1, [r5, #20]
   36e10:	cmp	r1, #0
   36e14:	bne	36e3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   36e18:	str	r0, [r5, #32]
   36e1c:	cmp	r9, #0
   36e20:	mov	r1, #31
   36e24:	ldr	r2, [r5, #4]
   36e28:	movwne	r1, #32
   36e2c:	sub	r0, r0, r2
   36e30:	add	r0, r0, #1
   36e34:	str	r0, [r5, #16]
   36e38:	str	r1, [r5, #20]
   36e3c:	mov	r0, r4
   36e40:	sub	sp, fp, #28
   36e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36e48:	cmp	r4, r7
   36e4c:	mov	r0, r4
   36e50:	beq	36e04 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   36e54:	cmp	r1, #34	; 0x22
   36e58:	bne	36e84 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x154>
   36e5c:	sub	r1, r7, sl
   36e60:	and	r0, r1, #3
   36e64:	str	r1, [sp, #20]
   36e68:	lsr	r1, r1, #2
   36e6c:	add	r8, r1, r1, lsl #1
   36e70:	cmp	r0, #2
   36e74:	beq	36e8c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x15c>
   36e78:	cmp	r0, #3
   36e7c:	addeq	r8, r8, #2
   36e80:	b	36e90 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x160>
   36e84:	mov	r0, r7
   36e88:	b	36e04 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   36e8c:	add	r8, r8, #1
   36e90:	ldr	r0, [r5]
   36e94:	mov	r1, #1
   36e98:	mov	r2, #1
   36e9c:	mvn	r3, #0
   36ea0:	bl	2f49c <flatcc_builder_start_vector@@Base>
   36ea4:	cmp	r0, #0
   36ea8:	beq	36ee8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   36eac:	mov	r0, #0
   36eb0:	str	r0, [r6]
   36eb4:	ldr	r0, [r5, #20]
   36eb8:	cmp	r0, #0
   36ebc:	bne	36e3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   36ec0:	mov	r0, #33	; 0x21
   36ec4:	str	r7, [r5, #32]
   36ec8:	ldr	r1, [r5, #4]
   36ecc:	sub	r1, r7, r1
   36ed0:	add	r1, r1, #1
   36ed4:	str	r1, [r5, #16]
   36ed8:	str	r0, [r5, #20]
   36edc:	mov	r0, r4
   36ee0:	sub	sp, fp, #28
   36ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36ee8:	ldr	r0, [r5]
   36eec:	mov	r1, r8
   36ef0:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   36ef4:	cmp	r0, #0
   36ef8:	beq	36eac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   36efc:	movw	r2, #45648	; 0xb250
   36f00:	str	r0, [sp]
   36f04:	str	r0, [sp, #12]
   36f08:	ldr	r0, [sp, #20]
   36f0c:	mov	r1, r8
   36f10:	movw	r8, #45392	; 0xb150
   36f14:	cmp	r9, #0
   36f18:	add	lr, sp, #24
   36f1c:	mov	ip, sl
   36f20:	movt	r2, #4
   36f24:	movt	r8, #4
   36f28:	str	r1, [sp, #4]
   36f2c:	movne	r8, r2
   36f30:	cmp	r1, #0
   36f34:	mvneq	r1, #0
   36f38:	str	r1, [sp, #16]
   36f3c:	mov	r1, #0
   36f40:	str	r0, [sp, #8]
   36f44:	cmp	r0, r1
   36f48:	bne	36f64 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x234>
   36f4c:	b	3701c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   36f50:	add	r1, r1, #1
   36f54:	cmp	r1, #4
   36f58:	bcs	36f90 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x260>
   36f5c:	cmp	r0, r1
   36f60:	beq	3701c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   36f64:	ldrb	r2, [ip, r1]
   36f68:	ldrb	r3, [r8, r2]
   36f6c:	cmp	r3, #64	; 0x40
   36f70:	strb	r3, [lr, r1]
   36f74:	bcc	36f50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x220>
   36f78:	cmp	r3, #65	; 0x41
   36f7c:	bne	37068 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x338>
   36f80:	sub	r1, r1, #1
   36f84:	sub	r0, r0, #1
   36f88:	add	ip, ip, #1
   36f8c:	b	36f50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x220>
   36f90:	ldr	lr, [sp, #16]
   36f94:	cmp	lr, #3
   36f98:	bcc	370fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   36f9c:	ldrb	r2, [sp, #25]
   36fa0:	ldrb	r1, [sp, #24]
   36fa4:	subs	lr, lr, #3
   36fa8:	sub	r0, r0, #4
   36fac:	add	ip, ip, #4
   36fb0:	str	lr, [sp, #16]
   36fb4:	add	lr, sp, #24
   36fb8:	lsr	r3, r2, #4
   36fbc:	orr	r1, r3, r1, lsl #2
   36fc0:	ldr	r3, [sp, #12]
   36fc4:	strb	r1, [r3]
   36fc8:	ldrb	r1, [sp, #26]
   36fcc:	lsr	r1, r1, #2
   36fd0:	orr	r1, r1, r2, lsl #4
   36fd4:	strb	r1, [r3, #1]
   36fd8:	ldrb	r1, [sp, #26]
   36fdc:	ldrb	r2, [sp, #27]
   36fe0:	orr	r1, r2, r1, lsl #6
   36fe4:	strb	r1, [r3, #2]
   36fe8:	add	r3, r3, #3
   36fec:	str	r3, [sp, #12]
   36ff0:	bne	36f3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20c>
   36ff4:	b	370e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b8>
   36ff8:	ldr	r0, [r5, #20]
   36ffc:	cmp	r0, #0
   37000:	mov	r0, r4
   37004:	bne	36e04 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   37008:	str	r7, [r5, #32]
   3700c:	mov	r0, #17
   37010:	ldr	r1, [r5, #4]
   37014:	sub	r1, r7, r1
   37018:	b	36df4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc4>
   3701c:	mov	r1, r0
   37020:	mov	r3, r0
   37024:	ldr	r2, [sp, #16]
   37028:	sub	r0, r0, r3
   3702c:	cmp	r1, #0
   37030:	beq	370e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b8>
   37034:	cmp	r1, #3
   37038:	beq	370a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x378>
   3703c:	cmp	r1, #2
   37040:	bne	370fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   37044:	ldrb	r1, [sp, #25]
   37048:	tst	r1, #15
   3704c:	bne	370fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   37050:	ldrb	r2, [sp, #24]
   37054:	lsl	r2, r2, #2
   37058:	orr	r1, r2, r1, lsr #4
   3705c:	ldr	r2, [sp, #12]
   37060:	strb	r1, [r2], #1
   37064:	b	370e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b4>
   37068:	cmp	r3, #66	; 0x42
   3706c:	bne	3716c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x43c>
   37070:	add	r2, r1, #1
   37074:	mov	r3, r2
   37078:	cmp	r2, r0
   3707c:	bcs	37024 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f4>
   37080:	cmp	r3, #7
   37084:	bhi	37024 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f4>
   37088:	ldrb	r2, [ip, r3]
   3708c:	ldrb	r2, [r8, r2]
   37090:	sub	r2, r2, #65	; 0x41
   37094:	uxtb	lr, r2
   37098:	add	r2, r3, #1
   3709c:	cmp	lr, #2
   370a0:	bcc	37074 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x344>
   370a4:	b	37024 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f4>
   370a8:	cmp	r2, #2
   370ac:	bcc	370fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   370b0:	ldrb	r1, [sp, #26]
   370b4:	ands	r2, r1, #3
   370b8:	bne	370fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   370bc:	ldrb	r3, [sp, #25]
   370c0:	ldrb	ip, [sp, #24]
   370c4:	lsl	r2, r3, #4
   370c8:	orr	r1, r2, r1, lsr #2
   370cc:	ldr	r2, [sp, #12]
   370d0:	strb	r1, [r2, #1]
   370d4:	lsr	r1, r3, #4
   370d8:	orr	r1, r1, ip, lsl #2
   370dc:	strb	r1, [r2]
   370e0:	add	r2, r2, #2
   370e4:	str	r2, [sp, #12]
   370e8:	cmp	r0, #0
   370ec:	beq	37110 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3e0>
   370f0:	mov	r1, r0
   370f4:	ldr	r0, [sp, #20]
   370f8:	b	37104 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3d4>
   370fc:	ldr	r0, [sp, #20]
   37100:	ldr	r1, [sp, #8]
   37104:	sub	r0, r0, r1
   37108:	add	r0, sl, r0
   3710c:	b	36e04 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   37110:	ldr	r0, [sp]
   37114:	ldr	r1, [sp, #12]
   37118:	sub	r0, r1, r0
   3711c:	ldr	r1, [sp, #4]
   37120:	cmp	r1, r0
   37124:	bls	3713c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40c>
   37128:	sub	r1, r1, r0
   3712c:	ldr	r0, [r5]
   37130:	bl	2f2d0 <flatcc_builder_truncate_vector@@Base>
   37134:	cmp	r0, #0
   37138:	bne	36eac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   3713c:	ldr	r0, [r5]
   37140:	bl	30714 <flatcc_builder_end_vector@@Base>
   37144:	cmp	r0, #0
   37148:	str	r0, [r6]
   3714c:	beq	36eac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   37150:	ldrb	r0, [r7]
   37154:	cmp	r0, #34	; 0x22
   37158:	bne	37184 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x454>
   3715c:	add	r4, r7, #1
   37160:	mov	r0, r4
   37164:	sub	sp, fp, #28
   37168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3716c:	mov	r3, r1
   37170:	ldr	r2, [sp, #16]
   37174:	sub	r0, r0, r3
   37178:	cmp	r1, #0
   3717c:	bne	37034 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x304>
   37180:	b	370e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b8>
   37184:	ldr	r0, [r5, #20]
   37188:	cmp	r0, #0
   3718c:	bne	36e3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   37190:	mov	r0, #20
   37194:	b	36ec4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x194>

00037198 <flatcc_json_parser_build_string@@Base>:
   37198:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3719c:	add	fp, sp, #28
   371a0:	sub	sp, sp, #4
   371a4:	mov	sl, r3
   371a8:	mov	r4, r2
   371ac:	mov	r5, r0
   371b0:	cmp	r1, r2
   371b4:	beq	37210 <flatcc_json_parser_build_string@@Base+0x78>
   371b8:	ldrb	r0, [r1]
   371bc:	cmp	r0, #34	; 0x22
   371c0:	bne	37210 <flatcc_json_parser_build_string@@Base+0x78>
   371c4:	add	r1, r1, #1
   371c8:	mov	r6, r4
   371cc:	cmp	r1, r4
   371d0:	beq	37220 <flatcc_json_parser_build_string@@Base+0x88>
   371d4:	mov	r6, r1
   371d8:	ldrb	r0, [r6]
   371dc:	cmp	r0, #32
   371e0:	bcc	37458 <flatcc_json_parser_build_string@@Base+0x2c0>
   371e4:	cmp	r0, #34	; 0x22
   371e8:	cmpne	r0, #92	; 0x5c
   371ec:	beq	37354 <flatcc_json_parser_build_string@@Base+0x1bc>
   371f0:	add	r6, r6, #1
   371f4:	cmp	r4, r6
   371f8:	bne	371d8 <flatcc_json_parser_build_string@@Base+0x40>
   371fc:	mov	r6, r1
   37200:	ldr	r0, [r5, #20]
   37204:	cmp	r0, #0
   37208:	bne	37248 <flatcc_json_parser_build_string@@Base+0xb0>
   3720c:	b	3722c <flatcc_json_parser_build_string@@Base+0x94>
   37210:	ldr	r0, [r5, #20]
   37214:	mov	r6, r4
   37218:	cmp	r0, #0
   3721c:	beq	37324 <flatcc_json_parser_build_string@@Base+0x18c>
   37220:	ldr	r0, [r5, #20]
   37224:	cmp	r0, #0
   37228:	bne	37248 <flatcc_json_parser_build_string@@Base+0xb0>
   3722c:	str	r4, [r5, #32]
   37230:	mov	r0, #20
   37234:	ldr	r1, [r5, #4]
   37238:	sub	r1, r4, r1
   3723c:	add	r1, r1, #1
   37240:	str	r1, [r5, #16]
   37244:	str	r0, [r5, #20]
   37248:	mov	r7, r4
   3724c:	ldr	r0, [r5]
   37250:	bl	2f8b8 <flatcc_builder_start_string@@Base>
   37254:	cmp	r0, #0
   37258:	bne	3747c <flatcc_json_parser_build_string@@Base+0x2e4>
   3725c:	ldr	r0, [r5]
   37260:	sub	r2, r7, r6
   37264:	mov	r1, r6
   37268:	bl	2f128 <flatcc_builder_append_string@@Base>
   3726c:	cmp	r0, #0
   37270:	beq	3747c <flatcc_json_parser_build_string@@Base+0x2e4>
   37274:	cmp	r7, r4
   37278:	mov	r6, r4
   3727c:	beq	373fc <flatcc_json_parser_build_string@@Base+0x264>
   37280:	mov	r8, sp
   37284:	add	r9, r8, #1
   37288:	ldrb	r0, [r7]
   3728c:	cmp	r0, #34	; 0x22
   37290:	beq	373f8 <flatcc_json_parser_build_string@@Base+0x260>
   37294:	mov	r0, r5
   37298:	mov	r1, r7
   3729c:	mov	r2, r4
   372a0:	mov	r3, r8
   372a4:	bl	34734 <flatcc_json_parser_string_escape@@Base>
   372a8:	mov	r6, r0
   372ac:	ldr	r0, [r5]
   372b0:	ldrb	r2, [sp]
   372b4:	mov	r1, r9
   372b8:	bl	2f128 <flatcc_builder_append_string@@Base>
   372bc:	cmp	r0, #0
   372c0:	beq	37450 <flatcc_json_parser_build_string@@Base+0x2b8>
   372c4:	cmp	r6, r4
   372c8:	beq	373a0 <flatcc_json_parser_build_string@@Base+0x208>
   372cc:	mov	r7, r6
   372d0:	ldrb	r0, [r7]
   372d4:	cmp	r0, #32
   372d8:	bcc	373c4 <flatcc_json_parser_build_string@@Base+0x22c>
   372dc:	cmp	r0, #34	; 0x22
   372e0:	cmpne	r0, #92	; 0x5c
   372e4:	beq	372f8 <flatcc_json_parser_build_string@@Base+0x160>
   372e8:	add	r7, r7, #1
   372ec:	cmp	r4, r7
   372f0:	bne	372d0 <flatcc_json_parser_build_string@@Base+0x138>
   372f4:	b	373a0 <flatcc_json_parser_build_string@@Base+0x208>
   372f8:	cmp	r4, r7
   372fc:	beq	373f0 <flatcc_json_parser_build_string@@Base+0x258>
   37300:	ldr	r0, [r5]
   37304:	sub	r2, r7, r6
   37308:	mov	r1, r6
   3730c:	bl	2f128 <flatcc_builder_append_string@@Base>
   37310:	cmp	r0, #0
   37314:	beq	3747c <flatcc_json_parser_build_string@@Base+0x2e4>
   37318:	cmp	r4, r7
   3731c:	bne	37288 <flatcc_json_parser_build_string@@Base+0xf0>
   37320:	b	373f0 <flatcc_json_parser_build_string@@Base+0x258>
   37324:	str	r1, [r5, #32]
   37328:	mov	r0, #16
   3732c:	mov	r6, r4
   37330:	ldr	r2, [r5, #4]
   37334:	sub	r1, r1, r2
   37338:	add	r1, r1, #1
   3733c:	str	r1, [r5, #16]
   37340:	str	r0, [r5, #20]
   37344:	ldr	r0, [r5, #20]
   37348:	cmp	r0, #0
   3734c:	bne	37248 <flatcc_json_parser_build_string@@Base+0xb0>
   37350:	b	3722c <flatcc_json_parser_build_string@@Base+0x94>
   37354:	cmp	r4, r6
   37358:	beq	37464 <flatcc_json_parser_build_string@@Base+0x2cc>
   3735c:	cmp	r0, #34	; 0x22
   37360:	bne	37398 <flatcc_json_parser_build_string@@Base+0x200>
   37364:	ldr	r0, [r5]
   37368:	sub	r2, r6, r1
   3736c:	bl	31aa4 <flatcc_builder_create_string@@Base>
   37370:	cmp	r6, r4
   37374:	str	r0, [sl]
   37378:	beq	37410 <flatcc_json_parser_build_string@@Base+0x278>
   3737c:	ldrb	r0, [r6]
   37380:	cmp	r0, #34	; 0x22
   37384:	bne	37410 <flatcc_json_parser_build_string@@Base+0x278>
   37388:	add	r4, r6, #1
   3738c:	mov	r0, r4
   37390:	sub	sp, fp, #28
   37394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37398:	mov	r7, r6
   3739c:	b	37468 <flatcc_json_parser_build_string@@Base+0x2d0>
   373a0:	ldr	r0, [r5, #20]
   373a4:	mov	r6, r4
   373a8:	cmp	r0, #0
   373ac:	bne	373fc <flatcc_json_parser_build_string@@Base+0x264>
   373b0:	str	r4, [r5, #32]
   373b4:	mov	r0, #20
   373b8:	ldr	r1, [r5, #4]
   373bc:	sub	r1, r4, r1
   373c0:	b	373e4 <flatcc_json_parser_build_string@@Base+0x24c>
   373c4:	ldr	r0, [r5, #20]
   373c8:	mov	r6, r4
   373cc:	cmp	r0, #0
   373d0:	bne	373fc <flatcc_json_parser_build_string@@Base+0x264>
   373d4:	str	r7, [r5, #32]
   373d8:	mov	r0, #17
   373dc:	ldr	r1, [r5, #4]
   373e0:	sub	r1, r7, r1
   373e4:	add	r1, r1, #1
   373e8:	str	r1, [r5, #16]
   373ec:	str	r0, [r5, #20]
   373f0:	mov	r6, r4
   373f4:	b	373fc <flatcc_json_parser_build_string@@Base+0x264>
   373f8:	mov	r6, r7
   373fc:	ldr	r0, [r5]
   37400:	bl	31c0c <flatcc_builder_end_string@@Base>
   37404:	cmp	r6, r4
   37408:	str	r0, [sl]
   3740c:	bne	3737c <flatcc_json_parser_build_string@@Base+0x1e4>
   37410:	ldr	r0, [r5, #20]
   37414:	cmp	r0, #0
   37418:	beq	37428 <flatcc_json_parser_build_string@@Base+0x290>
   3741c:	mov	r0, r4
   37420:	sub	sp, fp, #28
   37424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37428:	str	r6, [r5, #32]
   3742c:	mov	r0, #20
   37430:	ldr	r1, [r5, #4]
   37434:	sub	r1, r6, r1
   37438:	add	r1, r1, #1
   3743c:	str	r1, [r5, #16]
   37440:	str	r0, [r5, #20]
   37444:	mov	r0, r4
   37448:	sub	sp, fp, #28
   3744c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37450:	mov	r4, r6
   37454:	b	37480 <flatcc_json_parser_build_string@@Base+0x2e8>
   37458:	ldr	r0, [r5, #20]
   3745c:	cmp	r0, #0
   37460:	beq	37494 <flatcc_json_parser_build_string@@Base+0x2fc>
   37464:	mov	r7, r4
   37468:	mov	r6, r1
   3746c:	ldr	r0, [r5]
   37470:	bl	2f8b8 <flatcc_builder_start_string@@Base>
   37474:	cmp	r0, #0
   37478:	beq	3725c <flatcc_json_parser_build_string@@Base+0xc4>
   3747c:	mov	r4, r7
   37480:	mov	r0, #0
   37484:	str	r0, [sl]
   37488:	mov	r0, r4
   3748c:	sub	sp, fp, #28
   37490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37494:	str	r6, [r5, #32]
   37498:	mov	r0, #17
   3749c:	mov	r7, r4
   374a0:	ldr	r2, [r5, #4]
   374a4:	sub	r2, r6, r2
   374a8:	add	r2, r2, #1
   374ac:	str	r2, [r5, #16]
   374b0:	str	r0, [r5, #20]
   374b4:	b	37468 <flatcc_json_parser_build_string@@Base+0x2d0>

000374b8 <flatcc_json_parser_prepare_unions@@Base>:
   374b8:	push	{r4, r5, r6, r7, fp, lr}
   374bc:	add	fp, sp, #16
   374c0:	mov	r6, r0
   374c4:	add	r0, r3, r3, lsl #1
   374c8:	mov	r5, r1
   374cc:	mov	r1, #8
   374d0:	mov	r7, r3
   374d4:	mov	r4, r2
   374d8:	add	r1, r1, r0, lsl #3
   374dc:	ldr	r0, [r6]
   374e0:	bl	2dcf0 <flatcc_builder_enter_user_frame@@Base>
   374e4:	mov	r1, r0
   374e8:	ldr	r0, [fp, #8]
   374ec:	cmp	r1, #0
   374f0:	str	r1, [r0]
   374f4:	beq	37510 <flatcc_json_parser_prepare_unions@@Base+0x58>
   374f8:	ldr	r0, [r6]
   374fc:	bl	2de84 <flatcc_builder_get_user_frame_ptr@@Base>
   37500:	mov	r4, r5
   37504:	str	r7, [r0]
   37508:	mov	r0, r4
   3750c:	pop	{r4, r5, r6, r7, fp, pc}
   37510:	ldr	r0, [r6, #20]
   37514:	cmp	r0, #0
   37518:	beq	37524 <flatcc_json_parser_prepare_unions@@Base+0x6c>
   3751c:	mov	r0, r4
   37520:	pop	{r4, r5, r6, r7, fp, pc}
   37524:	str	r5, [r6, #32]
   37528:	mov	r0, #33	; 0x21
   3752c:	ldr	r1, [r6, #4]
   37530:	sub	r1, r5, r1
   37534:	add	r1, r1, #1
   37538:	str	r1, [r6, #16]
   3753c:	str	r0, [r6, #20]
   37540:	mov	r0, r4
   37544:	pop	{r4, r5, r6, r7, fp, pc}

00037548 <flatcc_json_parser_finalize_unions@@Base>:
   37548:	push	{r4, r5, r6, r7, fp, lr}
   3754c:	add	fp, sp, #16
   37550:	mov	r6, r0
   37554:	ldr	r0, [r0]
   37558:	mov	r7, r1
   3755c:	mov	r1, r3
   37560:	mov	r5, r3
   37564:	mov	r4, r2
   37568:	bl	2de84 <flatcc_builder_get_user_frame_ptr@@Base>
   3756c:	ldr	r0, [r0, #4]
   37570:	cmp	r0, #0
   37574:	beq	375a4 <flatcc_json_parser_finalize_unions@@Base+0x5c>
   37578:	ldr	r0, [r6, #20]
   3757c:	cmp	r0, #0
   37580:	bne	375a8 <flatcc_json_parser_finalize_unions@@Base+0x60>
   37584:	str	r7, [r6, #32]
   37588:	mov	r0, #27
   3758c:	ldr	r1, [r6, #4]
   37590:	sub	r1, r7, r1
   37594:	add	r1, r1, #1
   37598:	str	r1, [r6, #16]
   3759c:	str	r0, [r6, #20]
   375a0:	b	375a8 <flatcc_json_parser_finalize_unions@@Base+0x60>
   375a4:	mov	r4, r7
   375a8:	ldr	r0, [r6]
   375ac:	mov	r1, r5
   375b0:	bl	2de00 <flatcc_builder_exit_user_frame_at@@Base>
   375b4:	mov	r0, r4
   375b8:	pop	{r4, r5, r6, r7, fp, pc}

000375bc <flatcc_json_parser_union@@Base>:
   375bc:	push	{r4, r5, r6, r7, fp, lr}
   375c0:	add	fp, sp, #16
   375c4:	sub	sp, sp, #16
   375c8:	mov	r6, r1
   375cc:	mov	r5, r0
   375d0:	ldr	r0, [r0]
   375d4:	ldr	r1, [fp, #12]
   375d8:	mov	r7, r3
   375dc:	mov	r4, r2
   375e0:	bl	2de84 <flatcc_builder_get_user_frame_ptr@@Base>
   375e4:	add	r2, r0, #8
   375e8:	add	r3, r7, r7, lsl #1
   375ec:	mov	r1, r2
   375f0:	ldr	r7, [r1, r3, lsl #3]!
   375f4:	cmp	r7, #0
   375f8:	beq	37630 <flatcc_json_parser_union@@Base+0x74>
   375fc:	ldr	r0, [r5, #20]
   37600:	cmp	r0, #0
   37604:	bne	37700 <flatcc_json_parser_union@@Base+0x144>
   37608:	mov	r0, #28
   3760c:	str	r6, [r5, #32]
   37610:	ldr	r1, [r5, #4]
   37614:	sub	r1, r6, r1
   37618:	add	r1, r1, #1
   3761c:	str	r1, [r5, #16]
   37620:	str	r0, [r5, #20]
   37624:	mov	r0, r4
   37628:	sub	sp, fp, #16
   3762c:	pop	{r4, r5, r6, r7, fp, pc}
   37630:	add	r2, r2, r3, lsl #3
   37634:	ldrb	r3, [r2, #12]
   37638:	cmp	r3, #0
   3763c:	beq	376b4 <flatcc_json_parser_union@@Base+0xf8>
   37640:	ldrb	r3, [r2, #13]
   37644:	cmp	r3, #0
   37648:	strb	r3, [sp, #8]
   3764c:	beq	376f4 <flatcc_json_parser_union@@Base+0x138>
   37650:	ldr	r1, [r0, #4]
   37654:	ldr	r7, [fp, #16]
   37658:	mov	r2, r4
   3765c:	sub	r1, r1, #1
   37660:	str	r1, [r0, #4]
   37664:	add	r0, sp, #8
   37668:	mov	r1, r6
   3766c:	add	r0, r0, #4
   37670:	str	r0, [sp]
   37674:	mov	r0, r5
   37678:	blx	r7
   3767c:	cmp	r0, r4
   37680:	beq	37700 <flatcc_json_parser_union@@Base+0x144>
   37684:	mov	r6, r0
   37688:	ldr	r1, [fp, #8]
   3768c:	ldr	r0, [r5]
   37690:	ldr	r2, [sp, #8]
   37694:	ldr	r3, [sp, #12]
   37698:	bl	30b1c <flatcc_builder_table_add_union@@Base>
   3769c:	cmp	r0, #0
   376a0:	bne	375fc <flatcc_json_parser_union@@Base+0x40>
   376a4:	mov	r4, r6
   376a8:	mov	r0, r4
   376ac:	sub	sp, fp, #16
   376b0:	pop	{r4, r5, r6, r7, fp, pc}
   376b4:	ldr	r3, [r0, #4]
   376b8:	add	r3, r3, #1
   376bc:	str	r3, [r0, #4]
   376c0:	ldr	r0, [r5, #12]
   376c4:	str	r0, [r2, #8]
   376c8:	ldr	r0, [r5, #4]
   376cc:	str	r0, [r2, #4]
   376d0:	str	r6, [r1]
   376d4:	mov	r0, r5
   376d8:	mov	r1, r6
   376dc:	mov	r2, r4
   376e0:	bl	34f78 <flatcc_json_parser_generic_json@@Base>
   376e4:	mov	r4, r0
   376e8:	mov	r0, r4
   376ec:	sub	sp, fp, #16
   376f0:	pop	{r4, r5, r6, r7, fp, pc}
   376f4:	ldr	r0, [r5, #20]
   376f8:	cmp	r0, #0
   376fc:	beq	3770c <flatcc_json_parser_union@@Base+0x150>
   37700:	mov	r0, r4
   37704:	sub	sp, fp, #16
   37708:	pop	{r4, r5, r6, r7, fp, pc}
   3770c:	mov	r0, #25
   37710:	b	3760c <flatcc_json_parser_union@@Base+0x50>

00037714 <flatcc_json_parser_union_type@@Base>:
   37714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37718:	add	fp, sp, #28
   3771c:	sub	sp, sp, #20
   37720:	mov	r8, r1
   37724:	mov	r5, r0
   37728:	ldr	r0, [r0]
   3772c:	ldr	r1, [fp, #12]
   37730:	mov	r6, r3
   37734:	mov	r4, r2
   37738:	bl	2de84 <flatcc_builder_get_user_frame_ptr@@Base>
   3773c:	add	r3, r6, r6, lsl #1
   37740:	add	r2, r0, #8
   37744:	mov	r9, r0
   37748:	add	sl, r2, r3, lsl #3
   3774c:	mov	r0, sl
   37750:	ldrb	r1, [r0, #12]!
   37754:	cmp	r1, #0
   37758:	beq	37774 <flatcc_json_parser_union_type@@Base+0x60>
   3775c:	ldr	r0, [r5, #20]
   37760:	cmp	r0, #0
   37764:	beq	3785c <flatcc_json_parser_union_type@@Base+0x148>
   37768:	mov	r0, r4
   3776c:	sub	sp, fp, #28
   37770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37774:	mov	r1, #1
   37778:	mov	r6, #0
   3777c:	mov	lr, sl
   37780:	cmp	r8, r4
   37784:	str	r3, [sp, #4]
   37788:	str	r2, [sp, #8]
   3778c:	strb	r1, [r0]
   37790:	strb	r6, [lr, #13]!
   37794:	beq	3797c <flatcc_json_parser_union_type@@Base+0x268>
   37798:	mov	r2, r8
   3779c:	ldrb	ip, [r2], #1
   377a0:	cmp	ip, #45	; 0x2d
   377a4:	movne	r2, r8
   377a8:	cmp	r2, r4
   377ac:	beq	37884 <flatcc_json_parser_union_type@@Base+0x170>
   377b0:	mov	r6, #0
   377b4:	mov	r0, #10
   377b8:	mov	r7, #0
   377bc:	ldrb	r1, [r2]
   377c0:	sub	r3, r1, #48	; 0x30
   377c4:	uxtb	r3, r3
   377c8:	cmp	r3, #9
   377cc:	bhi	37910 <flatcc_json_parser_union_type@@Base+0x1fc>
   377d0:	add	r3, r7, r7, lsl #2
   377d4:	lsl	r3, r3, #1
   377d8:	umlal	r1, r3, r6, r0
   377dc:	subs	r1, r1, #48	; 0x30
   377e0:	sbc	r3, r3, #0
   377e4:	subs	r6, r1, r6
   377e8:	sbcs	r7, r3, r7
   377ec:	bcc	37920 <flatcc_json_parser_union_type@@Base+0x20c>
   377f0:	add	r2, r2, #1
   377f4:	mov	r6, r1
   377f8:	mov	r7, r3
   377fc:	cmp	r4, r2
   37800:	bne	377bc <flatcc_json_parser_union_type@@Base+0xa8>
   37804:	mov	r0, #0
   37808:	mov	r2, r4
   3780c:	mov	r6, r1
   37810:	mov	r7, r3
   37814:	cmp	r2, r8
   37818:	beq	3797c <flatcc_json_parser_union_type@@Base+0x268>
   3781c:	cmp	r0, #0
   37820:	beq	3789c <flatcc_json_parser_union_type@@Base+0x188>
   37824:	ldrb	r0, [r2]
   37828:	cmp	r0, #46	; 0x2e
   3782c:	beq	3783c <flatcc_json_parser_union_type@@Base+0x128>
   37830:	cmp	r0, #101	; 0x65
   37834:	cmpne	r0, #69	; 0x45
   37838:	bne	3789c <flatcc_json_parser_union_type@@Base+0x188>
   3783c:	ldr	r0, [r5, #20]
   37840:	mov	r6, #0
   37844:	mov	r7, #0
   37848:	cmp	r0, #0
   3784c:	mov	r0, r4
   37850:	bne	37960 <flatcc_json_parser_union_type@@Base+0x24c>
   37854:	mov	r0, #12
   37858:	b	3793c <flatcc_json_parser_union_type@@Base+0x228>
   3785c:	str	r8, [r5, #32]
   37860:	mov	r0, #28
   37864:	ldr	r1, [r5, #4]
   37868:	sub	r1, r8, r1
   3786c:	add	r1, r1, #1
   37870:	str	r1, [r5, #16]
   37874:	str	r0, [r5, #20]
   37878:	mov	r0, r4
   3787c:	sub	sp, fp, #28
   37880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37884:	mov	r2, r4
   37888:	mov	r7, #0
   3788c:	mov	r0, #0
   37890:	cmp	r2, r8
   37894:	bne	3781c <flatcc_json_parser_union_type@@Base+0x108>
   37898:	b	3797c <flatcc_json_parser_union_type@@Base+0x268>
   3789c:	mov	r0, r2
   378a0:	cmp	r0, r8
   378a4:	beq	3797c <flatcc_json_parser_union_type@@Base+0x268>
   378a8:	cmp	ip, #45	; 0x2d
   378ac:	bne	378c8 <flatcc_json_parser_union_type@@Base+0x1b4>
   378b0:	ldr	r1, [r5, #20]
   378b4:	mov	r2, r4
   378b8:	cmp	r1, #0
   378bc:	bne	37974 <flatcc_json_parser_union_type@@Base+0x260>
   378c0:	mov	r1, #8
   378c4:	b	378e8 <flatcc_json_parser_union_type@@Base+0x1d4>
   378c8:	subs	r1, r6, #256	; 0x100
   378cc:	sbcs	r1, r7, #0
   378d0:	bcc	3796c <flatcc_json_parser_union_type@@Base+0x258>
   378d4:	ldr	r1, [r5, #20]
   378d8:	mov	r2, r4
   378dc:	cmp	r1, #0
   378e0:	bne	37974 <flatcc_json_parser_union_type@@Base+0x260>
   378e4:	mov	r1, #7
   378e8:	str	r0, [r5, #32]
   378ec:	ldr	r2, [r5, #4]
   378f0:	sub	r0, r0, r2
   378f4:	mov	r2, r4
   378f8:	add	r0, r0, #1
   378fc:	str	r0, [r5, #16]
   37900:	str	r1, [r5, #20]
   37904:	cmp	r2, r8
   37908:	bne	379a0 <flatcc_json_parser_union_type@@Base+0x28c>
   3790c:	b	3797c <flatcc_json_parser_union_type@@Base+0x268>
   37910:	mov	r0, #1
   37914:	cmp	r2, r8
   37918:	bne	3781c <flatcc_json_parser_union_type@@Base+0x108>
   3791c:	b	3797c <flatcc_json_parser_union_type@@Base+0x268>
   37920:	ldr	r0, [r5, #20]
   37924:	mov	r6, #0
   37928:	mov	r7, #0
   3792c:	cmp	r0, #0
   37930:	mov	r0, r4
   37934:	bne	37960 <flatcc_json_parser_union_type@@Base+0x24c>
   37938:	mov	r0, #8
   3793c:	str	r2, [r5, #32]
   37940:	mov	r6, #0
   37944:	mov	r7, #0
   37948:	ldr	r1, [r5, #4]
   3794c:	sub	r1, r2, r1
   37950:	add	r1, r1, #1
   37954:	str	r1, [r5, #16]
   37958:	str	r0, [r5, #20]
   3795c:	mov	r0, r4
   37960:	cmp	r0, r8
   37964:	bne	378a8 <flatcc_json_parser_union_type@@Base+0x194>
   37968:	b	3797c <flatcc_json_parser_union_type@@Base+0x268>
   3796c:	mov	r2, r0
   37970:	strb	r6, [lr]
   37974:	cmp	r2, r8
   37978:	bne	379a0 <flatcc_json_parser_union_type@@Base+0x28c>
   3797c:	ldr	r3, [fp, #16]
   37980:	mov	r0, r5
   37984:	mov	r1, r8
   37988:	mov	r2, r4
   3798c:	str	lr, [sp]
   37990:	mov	r6, lr
   37994:	bl	37aac <flatcc_json_parser_union_type@@Base+0x398>
   37998:	mov	lr, r6
   3799c:	mov	r2, r0
   379a0:	ldr	r0, [sp, #8]
   379a4:	ldr	r1, [sp, #4]
   379a8:	ldr	r1, [r0, r1, lsl #3]
   379ac:	cmp	r1, #0
   379b0:	beq	37a50 <flatcc_json_parser_union_type@@Base+0x33c>
   379b4:	ldr	r0, [r9, #4]
   379b8:	str	r2, [sp, #8]
   379bc:	cmp	r0, #0
   379c0:	beq	37a8c <flatcc_json_parser_union_type@@Base+0x378>
   379c4:	sub	r0, r0, #1
   379c8:	ldr	r6, [fp, #20]
   379cc:	mov	r2, r4
   379d0:	str	r0, [r9, #4]
   379d4:	ldr	r0, [sl, #8]
   379d8:	ldr	r8, [r5, #4]
   379dc:	ldr	r7, [r5, #12]
   379e0:	str	r0, [r5, #12]
   379e4:	ldr	r0, [sl, #4]
   379e8:	str	r0, [r5, #4]
   379ec:	add	r0, sp, #12
   379f0:	ldrb	r3, [lr]
   379f4:	add	r0, r0, #4
   379f8:	str	r0, [sp]
   379fc:	mov	r0, r5
   37a00:	strb	r3, [sp, #12]
   37a04:	blx	r6
   37a08:	cmp	r0, r4
   37a0c:	beq	37768 <flatcc_json_parser_union_type@@Base+0x54>
   37a10:	ldr	r1, [fp, #8]
   37a14:	ldr	r0, [r5]
   37a18:	ldr	r2, [sp, #12]
   37a1c:	ldr	r3, [sp, #16]
   37a20:	bl	30b1c <flatcc_builder_table_add_union@@Base>
   37a24:	cmp	r0, #0
   37a28:	beq	37a74 <flatcc_json_parser_union_type@@Base+0x360>
   37a2c:	ldr	r0, [r5, #20]
   37a30:	cmp	r0, #0
   37a34:	bne	37768 <flatcc_json_parser_union_type@@Base+0x54>
   37a38:	ldr	r2, [sp, #8]
   37a3c:	mov	r0, #28
   37a40:	str	r2, [r5, #32]
   37a44:	ldr	r1, [r5, #4]
   37a48:	sub	r1, r2, r1
   37a4c:	b	3786c <flatcc_json_parser_union_type@@Base+0x158>
   37a50:	ldrb	r0, [lr]
   37a54:	ldr	r1, [r9, #4]
   37a58:	mov	r4, r2
   37a5c:	cmp	r0, #0
   37a60:	addne	r1, r1, #1
   37a64:	str	r1, [r9, #4]
   37a68:	mov	r0, r4
   37a6c:	sub	sp, fp, #28
   37a70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37a74:	ldr	r4, [sp, #8]
   37a78:	str	r8, [r5, #4]
   37a7c:	str	r7, [r5, #12]
   37a80:	mov	r0, r4
   37a84:	sub	sp, fp, #28
   37a88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37a8c:	movw	r0, #46820	; 0xb6e4
   37a90:	movw	r1, #46835	; 0xb6f3
   37a94:	movw	r3, #46909	; 0xb73d
   37a98:	movw	r2, #965	; 0x3c5
   37a9c:	movt	r0, #4
   37aa0:	movt	r1, #4
   37aa4:	movt	r3, #4
   37aa8:	bl	14f40 <__assert_fail@plt>
   37aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37ab0:	add	fp, sp, #28
   37ab4:	sub	sp, sp, #36	; 0x24
   37ab8:	mov	r4, r2
   37abc:	mov	r2, r1
   37ac0:	ldr	r1, [fp, #8]
   37ac4:	mov	r5, r0
   37ac8:	mov	r0, #0
   37acc:	mov	r6, r3
   37ad0:	cmp	r2, r4
   37ad4:	strb	r0, [r1]
   37ad8:	beq	37afc <flatcc_json_parser_union_type@@Base+0x3e8>
   37adc:	ldrb	r0, [r2]
   37ae0:	cmp	r0, #34	; 0x22
   37ae4:	bne	37b10 <flatcc_json_parser_union_type@@Base+0x3fc>
   37ae8:	add	r1, r2, #1
   37aec:	sub	r0, r4, r1
   37af0:	cmp	r0, #2
   37af4:	bge	37b2c <flatcc_json_parser_union_type@@Base+0x418>
   37af8:	b	37b8c <flatcc_json_parser_union_type@@Base+0x478>
   37afc:	mov	r1, r2
   37b00:	sub	r0, r4, r1
   37b04:	cmp	r0, #2
   37b08:	bge	37b2c <flatcc_json_parser_union_type@@Base+0x418>
   37b0c:	b	37b8c <flatcc_json_parser_union_type@@Base+0x478>
   37b10:	ldr	r0, [r5, #20]
   37b14:	mov	r1, r4
   37b18:	cmp	r0, #0
   37b1c:	beq	37b60 <flatcc_json_parser_union_type@@Base+0x44c>
   37b20:	sub	r0, r4, r1
   37b24:	cmp	r0, #2
   37b28:	blt	37b8c <flatcc_json_parser_union_type@@Base+0x478>
   37b2c:	ldrb	r0, [r1]
   37b30:	cmp	r0, #32
   37b34:	bls	37b48 <flatcc_json_parser_union_type@@Base+0x434>
   37b38:	mov	r7, r1
   37b3c:	cmp	r7, r4
   37b40:	bne	37ba4 <flatcc_json_parser_union_type@@Base+0x490>
   37b44:	b	37c78 <flatcc_json_parser_union_type@@Base+0x564>
   37b48:	bne	37b8c <flatcc_json_parser_union_type@@Base+0x478>
   37b4c:	mov	r7, r1
   37b50:	ldrb	r0, [r7, #1]!
   37b54:	cmp	r0, #32
   37b58:	bls	37b8c <flatcc_json_parser_union_type@@Base+0x478>
   37b5c:	b	37b9c <flatcc_json_parser_union_type@@Base+0x488>
   37b60:	str	r2, [r5, #32]
   37b64:	mov	r0, #5
   37b68:	ldr	r1, [r5, #4]
   37b6c:	sub	r1, r2, r1
   37b70:	add	r1, r1, #1
   37b74:	str	r1, [r5, #16]
   37b78:	mov	r1, r4
   37b7c:	str	r0, [r5, #20]
   37b80:	sub	r0, r4, r1
   37b84:	cmp	r0, #2
   37b88:	bge	37b2c <flatcc_json_parser_union_type@@Base+0x418>
   37b8c:	mov	r0, r5
   37b90:	mov	r2, r4
   37b94:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   37b98:	mov	r7, r0
   37b9c:	cmp	r7, r4
   37ba0:	beq	37c78 <flatcc_json_parser_union_type@@Base+0x564>
   37ba4:	add	sl, r6, #4
   37ba8:	add	r8, sp, #24
   37bac:	add	r9, sp, #20
   37bb0:	str	r6, [sp, #12]
   37bb4:	str	sl, [sp, #8]
   37bb8:	ldr	r6, [r6]
   37bbc:	add	r0, sp, #16
   37bc0:	mov	r1, r7
   37bc4:	mov	r2, r4
   37bc8:	mov	r3, r9
   37bcc:	str	r8, [sp]
   37bd0:	str	r0, [sp, #4]
   37bd4:	mov	r0, r5
   37bd8:	blx	r6
   37bdc:	cmp	r0, r4
   37be0:	beq	37c78 <flatcc_json_parser_union_type@@Base+0x564>
   37be4:	cmp	r0, r7
   37be8:	bne	37bfc <flatcc_json_parser_union_type@@Base+0x4e8>
   37bec:	ldr	r6, [sl], #4
   37bf0:	cmp	r6, #0
   37bf4:	bne	37bbc <flatcc_json_parser_union_type@@Base+0x4a8>
   37bf8:	b	37c50 <flatcc_json_parser_union_type@@Base+0x53c>
   37bfc:	ldr	r1, [sp, #20]
   37c00:	cmp	r1, #0
   37c04:	bne	37c84 <flatcc_json_parser_union_type@@Base+0x570>
   37c08:	ldr	r1, [sp, #24]
   37c0c:	ldr	r2, [sp, #28]
   37c10:	subs	r3, r1, #256	; 0x100
   37c14:	sbcs	r2, r2, #0
   37c18:	bcs	37c98 <flatcc_json_parser_union_type@@Base+0x584>
   37c1c:	ldr	r2, [fp, #8]
   37c20:	ldr	r6, [sp, #12]
   37c24:	ldr	sl, [sp, #8]
   37c28:	mov	r7, r0
   37c2c:	mov	r3, r2
   37c30:	ldrb	r2, [r2]
   37c34:	add	r1, r2, r1
   37c38:	strb	r1, [r3]
   37c3c:	ldr	r1, [sp, #16]
   37c40:	cmp	r1, #0
   37c44:	bne	37bb8 <flatcc_json_parser_union_type@@Base+0x4a4>
   37c48:	sub	sp, fp, #28
   37c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37c50:	ldr	r0, [r5, #20]
   37c54:	cmp	r0, #0
   37c58:	bne	37c78 <flatcc_json_parser_union_type@@Base+0x564>
   37c5c:	str	r7, [r5, #32]
   37c60:	mov	r0, #23
   37c64:	ldr	r1, [r5, #4]
   37c68:	sub	r1, r7, r1
   37c6c:	add	r1, r1, #1
   37c70:	str	r1, [r5, #16]
   37c74:	str	r0, [r5, #20]
   37c78:	mov	r0, r4
   37c7c:	sub	sp, fp, #28
   37c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37c84:	ldr	r1, [r5, #20]
   37c88:	cmp	r1, #0
   37c8c:	bne	37c78 <flatcc_json_parser_union_type@@Base+0x564>
   37c90:	mov	r1, #8
   37c94:	b	37ca8 <flatcc_json_parser_union_type@@Base+0x594>
   37c98:	ldr	r1, [r5, #20]
   37c9c:	cmp	r1, #0
   37ca0:	bne	37c78 <flatcc_json_parser_union_type@@Base+0x564>
   37ca4:	mov	r1, #7
   37ca8:	str	r0, [r5, #32]
   37cac:	ldr	r2, [r5, #4]
   37cb0:	sub	r0, r0, r2
   37cb4:	add	r0, r0, #1
   37cb8:	str	r0, [r5, #16]
   37cbc:	str	r1, [r5, #20]
   37cc0:	mov	r0, r4
   37cc4:	sub	sp, fp, #28
   37cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00037ccc <flatcc_json_parser_union_vector@@Base>:
   37ccc:	push	{r4, r5, r6, r7, fp, lr}
   37cd0:	add	fp, sp, #16
   37cd4:	sub	sp, sp, #16
   37cd8:	mov	r6, r1
   37cdc:	mov	r5, r0
   37ce0:	ldr	r0, [r0]
   37ce4:	ldr	r1, [fp, #12]
   37ce8:	mov	r7, r3
   37cec:	mov	r4, r2
   37cf0:	bl	2de84 <flatcc_builder_get_user_frame_ptr@@Base>
   37cf4:	add	r2, r0, #8
   37cf8:	add	r3, r7, r7, lsl #1
   37cfc:	mov	r1, r2
   37d00:	ldr	r7, [r1, r3, lsl #3]!
   37d04:	cmp	r7, #0
   37d08:	beq	37d24 <flatcc_json_parser_union_vector@@Base+0x58>
   37d0c:	ldr	r0, [r5, #20]
   37d10:	cmp	r0, #0
   37d14:	beq	37d70 <flatcc_json_parser_union_vector@@Base+0xa4>
   37d18:	mov	r0, r4
   37d1c:	sub	sp, fp, #16
   37d20:	pop	{r4, r5, r6, r7, fp, pc}
   37d24:	add	r2, r2, r3, lsl #3
   37d28:	ldr	r3, [r0, #4]
   37d2c:	ldrb	r7, [r2, #12]
   37d30:	cmp	r7, #0
   37d34:	beq	37d98 <flatcc_json_parser_union_vector@@Base+0xcc>
   37d38:	sub	r3, r3, #1
   37d3c:	ldr	r1, [fp, #16]
   37d40:	ldr	r7, [fp, #8]
   37d44:	str	r3, [r0, #4]
   37d48:	ldr	r0, [r2, #16]
   37d4c:	ldr	r3, [r2, #20]
   37d50:	mov	r2, r4
   37d54:	stm	sp, {r0, r7}
   37d58:	str	r1, [sp, #8]
   37d5c:	mov	r0, r5
   37d60:	mov	r1, r6
   37d64:	bl	37dcc <flatcc_json_parser_union_vector@@Base+0x100>
   37d68:	sub	sp, fp, #16
   37d6c:	pop	{r4, r5, r6, r7, fp, pc}
   37d70:	str	r6, [r5, #32]
   37d74:	mov	r0, #28
   37d78:	ldr	r1, [r5, #4]
   37d7c:	sub	r1, r6, r1
   37d80:	add	r1, r1, #1
   37d84:	str	r1, [r5, #16]
   37d88:	str	r0, [r5, #20]
   37d8c:	mov	r0, r4
   37d90:	sub	sp, fp, #16
   37d94:	pop	{r4, r5, r6, r7, fp, pc}
   37d98:	add	r3, r3, #1
   37d9c:	str	r3, [r0, #4]
   37da0:	ldr	r0, [r5, #12]
   37da4:	str	r0, [r2, #8]
   37da8:	ldr	r0, [r5, #4]
   37dac:	str	r0, [r2, #4]
   37db0:	str	r6, [r1]
   37db4:	mov	r0, r5
   37db8:	mov	r1, r6
   37dbc:	mov	r2, r4
   37dc0:	sub	sp, fp, #16
   37dc4:	pop	{r4, r5, r6, r7, fp, lr}
   37dc8:	b	34f78 <flatcc_json_parser_generic_json@@Base>
   37dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37dd0:	add	fp, sp, #28
   37dd4:	sub	sp, sp, #12
   37dd8:	mov	r5, r0
   37ddc:	mov	r0, #0
   37de0:	mov	r8, r3
   37de4:	mov	r6, r2
   37de8:	mov	r7, r1
   37dec:	str	r0, [sp, #8]
   37df0:	ldr	r0, [r5]
   37df4:	bl	2f528 <flatcc_builder_start_offset_vector@@Base>
   37df8:	cmp	r0, #0
   37dfc:	beq	37e20 <flatcc_json_parser_union_vector@@Base+0x154>
   37e00:	ldr	r0, [r5, #20]
   37e04:	cmp	r0, #0
   37e08:	bne	37ea8 <flatcc_json_parser_union_vector@@Base+0x1dc>
   37e0c:	str	r7, [r5, #32]
   37e10:	mov	r0, #33	; 0x21
   37e14:	ldr	r1, [r5, #4]
   37e18:	sub	r1, r7, r1
   37e1c:	b	37e9c <flatcc_json_parser_union_vector@@Base+0x1d0>
   37e20:	ldr	sl, [fp, #8]
   37e24:	cmp	r7, r6
   37e28:	beq	37e68 <flatcc_json_parser_union_vector@@Base+0x19c>
   37e2c:	ldrb	r0, [r7]
   37e30:	cmp	r0, #91	; 0x5b
   37e34:	bne	37e68 <flatcc_json_parser_union_vector@@Base+0x19c>
   37e38:	add	r1, r7, #1
   37e3c:	sub	r0, r6, r1
   37e40:	cmp	r0, #2
   37e44:	blt	37f50 <flatcc_json_parser_union_vector@@Base+0x284>
   37e48:	ldrb	r0, [r1]
   37e4c:	cmp	r0, #32
   37e50:	bls	37f40 <flatcc_json_parser_union_vector@@Base+0x274>
   37e54:	mov	r7, r1
   37e58:	cmp	r7, r6
   37e5c:	mov	r4, r6
   37e60:	bne	37f6c <flatcc_json_parser_union_vector@@Base+0x2a0>
   37e64:	b	37fa8 <flatcc_json_parser_union_vector@@Base+0x2dc>
   37e68:	ldr	r0, [r5, #20]
   37e6c:	mov	r9, r6
   37e70:	cmp	r0, #0
   37e74:	beq	37eb4 <flatcc_json_parser_union_vector@@Base+0x1e8>
   37e78:	cmp	sl, #0
   37e7c:	beq	37edc <flatcc_json_parser_union_vector@@Base+0x210>
   37e80:	ldr	r0, [r5, #20]
   37e84:	cmp	r0, #0
   37e88:	bne	37ea8 <flatcc_json_parser_union_vector@@Base+0x1dc>
   37e8c:	str	r9, [r5, #32]
   37e90:	mov	r0, #30
   37e94:	ldr	r1, [r5, #4]
   37e98:	sub	r1, r9, r1
   37e9c:	add	r1, r1, #1
   37ea0:	str	r1, [r5, #16]
   37ea4:	str	r0, [r5, #20]
   37ea8:	mov	r0, r6
   37eac:	sub	sp, fp, #28
   37eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37eb4:	str	r7, [r5, #32]
   37eb8:	mov	r0, #22
   37ebc:	mov	r9, r6
   37ec0:	ldr	r1, [r5, #4]
   37ec4:	sub	r1, r7, r1
   37ec8:	add	r1, r1, #1
   37ecc:	str	r1, [r5, #16]
   37ed0:	str	r0, [r5, #20]
   37ed4:	cmp	sl, #0
   37ed8:	bne	37e80 <flatcc_json_parser_union_vector@@Base+0x1b4>
   37edc:	ldr	r0, [r5]
   37ee0:	mov	r1, r8
   37ee4:	bl	2de84 <flatcc_builder_get_user_frame_ptr@@Base>
   37ee8:	mov	r1, r0
   37eec:	ldr	r0, [r5]
   37ef0:	bl	30a30 <flatcc_builder_end_offset_vector_for_unions@@Base>
   37ef4:	cmp	r0, #0
   37ef8:	str	r0, [sp, #8]
   37efc:	beq	37f2c <flatcc_json_parser_union_vector@@Base+0x260>
   37f00:	ldr	r1, [fp, #12]
   37f04:	ldr	r0, [r5]
   37f08:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   37f0c:	cmp	r0, #0
   37f10:	beq	37f2c <flatcc_json_parser_union_vector@@Base+0x260>
   37f14:	ldr	r1, [sp, #8]
   37f18:	mov	r6, r9
   37f1c:	str	r1, [r0]
   37f20:	mov	r0, r6
   37f24:	sub	sp, fp, #28
   37f28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37f2c:	mov	r7, r9
   37f30:	ldr	r0, [r5, #20]
   37f34:	cmp	r0, #0
   37f38:	bne	37ea8 <flatcc_json_parser_union_vector@@Base+0x1dc>
   37f3c:	b	37e0c <flatcc_json_parser_union_vector@@Base+0x140>
   37f40:	bne	37f50 <flatcc_json_parser_union_vector@@Base+0x284>
   37f44:	ldrb	r0, [r7, #2]!
   37f48:	cmp	r0, #32
   37f4c:	bhi	37f60 <flatcc_json_parser_union_vector@@Base+0x294>
   37f50:	mov	r0, r5
   37f54:	mov	r2, r6
   37f58:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   37f5c:	mov	r7, r0
   37f60:	cmp	r7, r6
   37f64:	mov	r4, r6
   37f68:	beq	37fa8 <flatcc_json_parser_union_vector@@Base+0x2dc>
   37f6c:	ldrb	r0, [r7]
   37f70:	cmp	r0, #93	; 0x5d
   37f74:	bne	37fa4 <flatcc_json_parser_union_vector@@Base+0x2d8>
   37f78:	add	r1, r7, #1
   37f7c:	sub	r0, r6, r1
   37f80:	cmp	r0, #2
   37f84:	blt	38140 <flatcc_json_parser_union_vector@@Base+0x474>
   37f88:	ldrb	r0, [r1]
   37f8c:	cmp	r0, #32
   37f90:	bls	3812c <flatcc_json_parser_union_vector@@Base+0x460>
   37f94:	mov	r9, r1
   37f98:	cmp	sl, #0
   37f9c:	bne	37e80 <flatcc_json_parser_union_vector@@Base+0x1b4>
   37fa0:	b	37edc <flatcc_json_parser_union_vector@@Base+0x210>
   37fa4:	mov	r4, r7
   37fa8:	cmp	sl, #0
   37fac:	beq	3810c <flatcc_json_parser_union_vector@@Base+0x440>
   37fb0:	add	r0, r6, #1
   37fb4:	mov	sl, #0
   37fb8:	add	r9, sp, #8
   37fbc:	str	r0, [sp, #4]
   37fc0:	ldr	r0, [r5]
   37fc4:	mov	r1, r8
   37fc8:	bl	2de84 <flatcc_builder_get_user_frame_ptr@@Base>
   37fcc:	ldrb	r3, [r0, -sl]
   37fd0:	ldr	r7, [fp, #16]
   37fd4:	mov	r0, r5
   37fd8:	mov	r1, r4
   37fdc:	mov	r2, r6
   37fe0:	str	r9, [sp]
   37fe4:	blx	r7
   37fe8:	cmp	r0, r6
   37fec:	beq	37ea8 <flatcc_json_parser_union_vector@@Base+0x1dc>
   37ff0:	mov	r7, r0
   37ff4:	ldr	r0, [r5]
   37ff8:	mov	r1, #1
   37ffc:	bl	2ece4 <flatcc_builder_extend_offset_vector@@Base>
   38000:	cmp	r0, #0
   38004:	beq	37e00 <flatcc_json_parser_union_vector@@Base+0x134>
   38008:	ldr	r1, [sp, #8]
   3800c:	str	r1, [r0]
   38010:	sub	r0, r6, r7
   38014:	cmp	r0, #2
   38018:	blt	3809c <flatcc_json_parser_union_vector@@Base+0x3d0>
   3801c:	ldrb	r0, [r7]
   38020:	cmp	r0, #32
   38024:	bls	38088 <flatcc_json_parser_union_vector@@Base+0x3bc>
   38028:	mov	r4, r7
   3802c:	cmp	r4, r6
   38030:	beq	38230 <flatcc_json_parser_union_vector@@Base+0x564>
   38034:	ldrb	r0, [r4]
   38038:	cmp	r0, #44	; 0x2c
   3803c:	bne	3815c <flatcc_json_parser_union_vector@@Base+0x490>
   38040:	add	r1, r4, #1
   38044:	sub	r0, r6, r1
   38048:	cmp	r0, #2
   3804c:	blt	380cc <flatcc_json_parser_union_vector@@Base+0x400>
   38050:	ldrb	r0, [r1]
   38054:	cmp	r0, #32
   38058:	bls	380bc <flatcc_json_parser_union_vector@@Base+0x3f0>
   3805c:	mov	r4, r1
   38060:	cmp	r4, r6
   38064:	beq	380e4 <flatcc_json_parser_union_vector@@Base+0x418>
   38068:	ldrb	r0, [r4]
   3806c:	cmp	r0, #93	; 0x5d
   38070:	beq	38198 <flatcc_json_parser_union_vector@@Base+0x4cc>
   38074:	ldr	r0, [fp, #8]
   38078:	sub	sl, sl, #1
   3807c:	adds	r0, r0, sl
   38080:	bne	37fc0 <flatcc_json_parser_union_vector@@Base+0x2f4>
   38084:	b	3810c <flatcc_json_parser_union_vector@@Base+0x440>
   38088:	bne	3809c <flatcc_json_parser_union_vector@@Base+0x3d0>
   3808c:	mov	r4, r7
   38090:	ldrb	r0, [r4, #1]!
   38094:	cmp	r0, #32
   38098:	bhi	380b0 <flatcc_json_parser_union_vector@@Base+0x3e4>
   3809c:	mov	r0, r5
   380a0:	mov	r1, r7
   380a4:	mov	r2, r6
   380a8:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   380ac:	mov	r4, r0
   380b0:	cmp	r4, r6
   380b4:	bne	38034 <flatcc_json_parser_union_vector@@Base+0x368>
   380b8:	b	38230 <flatcc_json_parser_union_vector@@Base+0x564>
   380bc:	bne	380cc <flatcc_json_parser_union_vector@@Base+0x400>
   380c0:	ldrb	r0, [r4, #2]!
   380c4:	cmp	r0, #32
   380c8:	bhi	380dc <flatcc_json_parser_union_vector@@Base+0x410>
   380cc:	mov	r0, r5
   380d0:	mov	r2, r6
   380d4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   380d8:	mov	r4, r0
   380dc:	cmp	r4, r6
   380e0:	bne	38068 <flatcc_json_parser_union_vector@@Base+0x39c>
   380e4:	ldr	r0, [r5, #20]
   380e8:	mov	r9, r6
   380ec:	cmp	r0, #0
   380f0:	bne	38200 <flatcc_json_parser_union_vector@@Base+0x534>
   380f4:	str	r6, [r5, #32]
   380f8:	ldr	r2, [sp, #4]
   380fc:	mov	r0, #9
   38100:	ldr	r1, [r5, #4]
   38104:	sub	r1, r2, r1
   38108:	b	38228 <flatcc_json_parser_union_vector@@Base+0x55c>
   3810c:	ldr	r0, [r5, #20]
   38110:	cmp	r0, #0
   38114:	bne	37ea8 <flatcc_json_parser_union_vector@@Base+0x1dc>
   38118:	str	r4, [r5, #32]
   3811c:	mov	r0, #30
   38120:	ldr	r1, [r5, #4]
   38124:	sub	r1, r4, r1
   38128:	b	37e9c <flatcc_json_parser_union_vector@@Base+0x1d0>
   3812c:	bne	38140 <flatcc_json_parser_union_vector@@Base+0x474>
   38130:	ldrb	r0, [r7, #2]!
   38134:	mov	r9, r7
   38138:	cmp	r0, #32
   3813c:	bhi	37e78 <flatcc_json_parser_union_vector@@Base+0x1ac>
   38140:	mov	r0, r5
   38144:	mov	r2, r6
   38148:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   3814c:	mov	r9, r0
   38150:	cmp	sl, #0
   38154:	bne	37e80 <flatcc_json_parser_union_vector@@Base+0x1b4>
   38158:	b	37edc <flatcc_json_parser_union_vector@@Base+0x210>
   3815c:	cmp	r0, #93	; 0x5d
   38160:	bne	381f0 <flatcc_json_parser_union_vector@@Base+0x524>
   38164:	add	r1, r4, #1
   38168:	sub	r0, r6, r1
   3816c:	cmp	r0, #2
   38170:	blt	381cc <flatcc_json_parser_union_vector@@Base+0x500>
   38174:	ldrb	r0, [r1]
   38178:	cmp	r0, #32
   3817c:	bhi	381b4 <flatcc_json_parser_union_vector@@Base+0x4e8>
   38180:	bne	381cc <flatcc_json_parser_union_vector@@Base+0x500>
   38184:	ldrb	r0, [r4, #2]!
   38188:	mov	r9, r4
   3818c:	cmp	r0, #32
   38190:	bhi	38200 <flatcc_json_parser_union_vector@@Base+0x534>
   38194:	b	381cc <flatcc_json_parser_union_vector@@Base+0x500>
   38198:	add	r1, r4, #1
   3819c:	sub	r0, r6, r1
   381a0:	cmp	r0, #2
   381a4:	blt	381cc <flatcc_json_parser_union_vector@@Base+0x500>
   381a8:	ldrb	r0, [r1]
   381ac:	cmp	r0, #32
   381b0:	bls	38180 <flatcc_json_parser_union_vector@@Base+0x4b4>
   381b4:	mov	r9, r1
   381b8:	ldr	r0, [fp, #8]
   381bc:	add	r0, r0, sl
   381c0:	cmp	r0, #1
   381c4:	bne	37e80 <flatcc_json_parser_union_vector@@Base+0x1b4>
   381c8:	b	37edc <flatcc_json_parser_union_vector@@Base+0x210>
   381cc:	mov	r0, r5
   381d0:	mov	r2, r6
   381d4:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   381d8:	mov	r9, r0
   381dc:	ldr	r0, [fp, #8]
   381e0:	add	r0, r0, sl
   381e4:	cmp	r0, #1
   381e8:	bne	37e80 <flatcc_json_parser_union_vector@@Base+0x1b4>
   381ec:	b	37edc <flatcc_json_parser_union_vector@@Base+0x210>
   381f0:	ldr	r0, [r5, #20]
   381f4:	mov	r9, r6
   381f8:	cmp	r0, #0
   381fc:	beq	38214 <flatcc_json_parser_union_vector@@Base+0x548>
   38200:	ldr	r0, [fp, #8]
   38204:	add	r0, r0, sl
   38208:	cmp	r0, #1
   3820c:	bne	37e80 <flatcc_json_parser_union_vector@@Base+0x1b4>
   38210:	b	37edc <flatcc_json_parser_union_vector@@Base+0x210>
   38214:	str	r4, [r5, #32]
   38218:	mov	r0, #9
   3821c:	ldr	r1, [r5, #4]
   38220:	sub	r1, r4, r1
   38224:	add	r1, r1, #1
   38228:	str	r1, [r5, #16]
   3822c:	str	r0, [r5, #20]
   38230:	mov	r9, r6
   38234:	ldr	r0, [fp, #8]
   38238:	add	r0, r0, sl
   3823c:	cmp	r0, #1
   38240:	bne	37e80 <flatcc_json_parser_union_vector@@Base+0x1b4>
   38244:	b	37edc <flatcc_json_parser_union_vector@@Base+0x210>

00038248 <flatcc_json_parser_union_type_vector@@Base>:
   38248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3824c:	add	fp, sp, #28
   38250:	sub	sp, sp, #28
   38254:	mov	r7, r1
   38258:	mov	r5, r0
   3825c:	ldr	r0, [r0]
   38260:	ldr	r1, [fp, #12]
   38264:	mov	r4, r3
   38268:	mov	r8, r2
   3826c:	bl	2de84 <flatcc_builder_get_user_frame_ptr@@Base>
   38270:	add	r6, r4, r4, lsl #1
   38274:	add	r0, r0, #8
   38278:	add	r4, r0, r6, lsl #3
   3827c:	mov	r0, r4
   38280:	ldrb	r1, [r0, #12]!
   38284:	cmp	r1, #0
   38288:	beq	382ac <flatcc_json_parser_union_type_vector@@Base+0x64>
   3828c:	ldr	r0, [r5, #20]
   38290:	cmp	r0, #0
   38294:	bne	382fc <flatcc_json_parser_union_type_vector@@Base+0xb4>
   38298:	str	r7, [r5, #32]
   3829c:	mov	r0, #28
   382a0:	ldr	r1, [r5, #4]
   382a4:	sub	r1, r7, r1
   382a8:	b	382f0 <flatcc_json_parser_union_type_vector@@Base+0xa8>
   382ac:	mov	r1, #1
   382b0:	mov	r2, #1
   382b4:	mvn	r3, #0
   382b8:	strb	r1, [r0]
   382bc:	mov	r1, #1
   382c0:	ldr	r0, [r5]
   382c4:	bl	2f49c <flatcc_builder_start_vector@@Base>
   382c8:	cmp	r0, #0
   382cc:	beq	38308 <flatcc_json_parser_union_type_vector@@Base+0xc0>
   382d0:	mov	sl, r7
   382d4:	ldr	r0, [r5, #20]
   382d8:	cmp	r0, #0
   382dc:	bne	382fc <flatcc_json_parser_union_type_vector@@Base+0xb4>
   382e0:	str	sl, [r5, #32]
   382e4:	mov	r0, #33	; 0x21
   382e8:	ldr	r1, [r5, #4]
   382ec:	sub	r1, sl, r1
   382f0:	add	r1, r1, #1
   382f4:	str	r1, [r5, #16]
   382f8:	str	r0, [r5, #20]
   382fc:	mov	r0, r8
   38300:	sub	sp, fp, #28
   38304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38308:	cmp	r7, r8
   3830c:	beq	3834c <flatcc_json_parser_union_type_vector@@Base+0x104>
   38310:	ldrb	r0, [r7]
   38314:	cmp	r0, #91	; 0x5b
   38318:	bne	3834c <flatcc_json_parser_union_type_vector@@Base+0x104>
   3831c:	add	r1, r7, #1
   38320:	sub	r0, r8, r1
   38324:	cmp	r0, #2
   38328:	blt	38390 <flatcc_json_parser_union_type_vector@@Base+0x148>
   3832c:	ldrb	r0, [r1]
   38330:	cmp	r0, #32
   38334:	bls	38380 <flatcc_json_parser_union_type_vector@@Base+0x138>
   38338:	mov	r7, r1
   3833c:	cmp	r7, r8
   38340:	mov	sl, r8
   38344:	bne	383ac <flatcc_json_parser_union_type_vector@@Base+0x164>
   38348:	b	383f0 <flatcc_json_parser_union_type_vector@@Base+0x1a8>
   3834c:	ldr	r0, [r5, #20]
   38350:	cmp	r0, #0
   38354:	mov	r0, r8
   38358:	bne	38870 <flatcc_json_parser_union_type_vector@@Base+0x628>
   3835c:	str	r7, [r5, #32]
   38360:	mov	r0, #22
   38364:	ldr	r1, [r5, #4]
   38368:	sub	r1, r7, r1
   3836c:	add	r1, r1, #1
   38370:	str	r1, [r5, #16]
   38374:	str	r0, [r5, #20]
   38378:	mov	r0, r8
   3837c:	b	38870 <flatcc_json_parser_union_type_vector@@Base+0x628>
   38380:	bne	38390 <flatcc_json_parser_union_type_vector@@Base+0x148>
   38384:	ldrb	r0, [r7, #2]!
   38388:	cmp	r0, #32
   3838c:	bhi	383a0 <flatcc_json_parser_union_type_vector@@Base+0x158>
   38390:	mov	r0, r5
   38394:	mov	r2, r8
   38398:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   3839c:	mov	r7, r0
   383a0:	cmp	r7, r8
   383a4:	mov	sl, r8
   383a8:	beq	383f0 <flatcc_json_parser_union_type_vector@@Base+0x1a8>
   383ac:	ldrb	r0, [r7]
   383b0:	cmp	r0, #93	; 0x5d
   383b4:	bne	383ec <flatcc_json_parser_union_type_vector@@Base+0x1a4>
   383b8:	add	r1, r7, #1
   383bc:	sub	r0, r8, r1
   383c0:	cmp	r0, #2
   383c4:	blt	38864 <flatcc_json_parser_union_type_vector@@Base+0x61c>
   383c8:	ldrb	r0, [r1]
   383cc:	cmp	r0, #32
   383d0:	bhi	387f0 <flatcc_json_parser_union_type_vector@@Base+0x5a8>
   383d4:	bne	38864 <flatcc_json_parser_union_type_vector@@Base+0x61c>
   383d8:	ldrb	r0, [r7, #2]!
   383dc:	cmp	r0, #32
   383e0:	mov	r0, r7
   383e4:	bls	38864 <flatcc_json_parser_union_type_vector@@Base+0x61c>
   383e8:	b	38870 <flatcc_json_parser_union_type_vector@@Base+0x628>
   383ec:	mov	sl, r7
   383f0:	ldr	r0, [r5]
   383f4:	mov	r1, #1
   383f8:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   383fc:	cmp	r0, #0
   38400:	beq	382d4 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   38404:	mov	r1, r0
   38408:	add	r0, r8, #1
   3840c:	str	r4, [sp, #16]
   38410:	str	r0, [sp, #12]
   38414:	mov	r9, #0
   38418:	cmp	sl, r8
   3841c:	mov	r4, r8
   38420:	str	r1, [sp, #20]
   38424:	strb	r9, [sp, #27]
   38428:	beq	3864c <flatcc_json_parser_union_type_vector@@Base+0x404>
   3842c:	mov	r2, sl
   38430:	mov	r9, #0
   38434:	ldrb	ip, [r2], #1
   38438:	cmp	ip, #45	; 0x2d
   3843c:	movne	r2, sl
   38440:	cmp	r2, r8
   38444:	beq	384bc <flatcc_json_parser_union_type_vector@@Base+0x274>
   38448:	mov	r7, #0
   3844c:	mov	r0, #0
   38450:	mov	r4, #10
   38454:	ldrb	r1, [r2]
   38458:	sub	r3, r1, #48	; 0x30
   3845c:	uxtb	r3, r3
   38460:	cmp	r3, #9
   38464:	bhi	384dc <flatcc_json_parser_union_type_vector@@Base+0x294>
   38468:	add	r3, r0, r0, lsl #2
   3846c:	lsl	r3, r3, #1
   38470:	umlal	r1, r3, r7, r4
   38474:	subs	r1, r1, #48	; 0x30
   38478:	sbc	r3, r3, #0
   3847c:	subs	r7, r1, r7
   38480:	sbcs	r0, r3, r0
   38484:	bcc	38560 <flatcc_json_parser_union_type_vector@@Base+0x318>
   38488:	add	r2, r2, #1
   3848c:	mov	r7, r1
   38490:	mov	r0, r3
   38494:	cmp	r8, r2
   38498:	bne	38454 <flatcc_json_parser_union_type_vector@@Base+0x20c>
   3849c:	mov	lr, #0
   384a0:	mov	r2, r8
   384a4:	mov	r7, r1
   384a8:	mov	r0, r3
   384ac:	cmp	r2, sl
   384b0:	mov	r4, sl
   384b4:	bne	384ec <flatcc_json_parser_union_type_vector@@Base+0x2a4>
   384b8:	b	3864c <flatcc_json_parser_union_type_vector@@Base+0x404>
   384bc:	mov	r2, r8
   384c0:	mov	r7, #0
   384c4:	mov	r0, #0
   384c8:	mov	lr, #0
   384cc:	cmp	r2, sl
   384d0:	mov	r4, sl
   384d4:	bne	384ec <flatcc_json_parser_union_type_vector@@Base+0x2a4>
   384d8:	b	3864c <flatcc_json_parser_union_type_vector@@Base+0x404>
   384dc:	mov	lr, #1
   384e0:	cmp	r2, sl
   384e4:	mov	r4, sl
   384e8:	beq	3864c <flatcc_json_parser_union_type_vector@@Base+0x404>
   384ec:	cmp	lr, #0
   384f0:	beq	38540 <flatcc_json_parser_union_type_vector@@Base+0x2f8>
   384f4:	ldrb	r1, [r2]
   384f8:	cmp	r1, #46	; 0x2e
   384fc:	beq	3850c <flatcc_json_parser_union_type_vector@@Base+0x2c4>
   38500:	cmp	r1, #101	; 0x65
   38504:	cmpne	r1, #69	; 0x45
   38508:	bne	385b0 <flatcc_json_parser_union_type_vector@@Base+0x368>
   3850c:	ldr	r0, [r5, #20]
   38510:	mov	r7, #0
   38514:	mov	r4, r8
   38518:	cmp	r0, #0
   3851c:	mov	r0, #0
   38520:	bne	385b4 <flatcc_json_parser_union_type_vector@@Base+0x36c>
   38524:	str	r2, [r5, #32]
   38528:	ldr	r0, [r5, #4]
   3852c:	sub	r0, r2, r0
   38530:	add	r0, r0, #1
   38534:	str	r0, [r5, #16]
   38538:	mov	r0, #12
   3853c:	b	38590 <flatcc_json_parser_union_type_vector@@Base+0x348>
   38540:	mov	r4, r2
   38544:	mov	r9, #0
   38548:	cmp	r4, sl
   3854c:	bne	385c0 <flatcc_json_parser_union_type_vector@@Base+0x378>
   38550:	mov	r4, sl
   38554:	cmp	sl, r4
   38558:	bne	38688 <flatcc_json_parser_union_type_vector@@Base+0x440>
   3855c:	b	38654 <flatcc_json_parser_union_type_vector@@Base+0x40c>
   38560:	ldr	r0, [r5, #20]
   38564:	mov	r7, #0
   38568:	mov	r4, r8
   3856c:	cmp	r0, #0
   38570:	mov	r0, #0
   38574:	bne	385b4 <flatcc_json_parser_union_type_vector@@Base+0x36c>
   38578:	str	r2, [r5, #32]
   3857c:	ldr	r0, [r5, #4]
   38580:	sub	r0, r2, r0
   38584:	add	r0, r0, #1
   38588:	str	r0, [r5, #16]
   3858c:	mov	r0, #8
   38590:	str	r0, [r5, #20]
   38594:	mov	r7, #0
   38598:	mov	r0, #0
   3859c:	mov	r4, r8
   385a0:	mov	r9, #0
   385a4:	cmp	r4, sl
   385a8:	bne	385c0 <flatcc_json_parser_union_type_vector@@Base+0x378>
   385ac:	b	38550 <flatcc_json_parser_union_type_vector@@Base+0x308>
   385b0:	mov	r4, r2
   385b4:	mov	r9, #0
   385b8:	cmp	r4, sl
   385bc:	beq	38550 <flatcc_json_parser_union_type_vector@@Base+0x308>
   385c0:	cmp	ip, #45	; 0x2d
   385c4:	bne	385f0 <flatcc_json_parser_union_type_vector@@Base+0x3a8>
   385c8:	ldr	r0, [r5, #20]
   385cc:	cmp	r0, #0
   385d0:	bne	38608 <flatcc_json_parser_union_type_vector@@Base+0x3c0>
   385d4:	str	r4, [r5, #32]
   385d8:	ldr	r0, [r5, #4]
   385dc:	sub	r0, r4, r0
   385e0:	add	r0, r0, #1
   385e4:	str	r0, [r5, #16]
   385e8:	mov	r0, #8
   385ec:	b	38644 <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   385f0:	subs	r1, r7, #256	; 0x100
   385f4:	sbcs	r0, r0, #0
   385f8:	bcc	38618 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   385fc:	ldr	r0, [r5, #20]
   38600:	cmp	r0, #0
   38604:	beq	3862c <flatcc_json_parser_union_type_vector@@Base+0x3e4>
   38608:	mov	r4, r8
   3860c:	cmp	sl, r4
   38610:	bne	38688 <flatcc_json_parser_union_type_vector@@Base+0x440>
   38614:	b	38654 <flatcc_json_parser_union_type_vector@@Base+0x40c>
   38618:	mov	r9, r7
   3861c:	strb	r7, [sp, #27]
   38620:	cmp	sl, r4
   38624:	bne	38688 <flatcc_json_parser_union_type_vector@@Base+0x440>
   38628:	b	38654 <flatcc_json_parser_union_type_vector@@Base+0x40c>
   3862c:	str	r4, [r5, #32]
   38630:	ldr	r0, [r5, #4]
   38634:	sub	r0, r4, r0
   38638:	add	r0, r0, #1
   3863c:	str	r0, [r5, #16]
   38640:	mov	r0, #7
   38644:	str	r0, [r5, #20]
   38648:	mov	r4, r8
   3864c:	cmp	sl, r4
   38650:	bne	38688 <flatcc_json_parser_union_type_vector@@Base+0x440>
   38654:	ldr	r3, [fp, #16]
   38658:	add	r0, sp, #27
   3865c:	mov	r1, sl
   38660:	mov	r2, r8
   38664:	str	r0, [sp]
   38668:	mov	r0, r5
   3866c:	bl	37aac <flatcc_json_parser_union_type@@Base+0x398>
   38670:	mov	r4, r0
   38674:	cmp	r0, sl
   38678:	beq	3881c <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   3867c:	cmp	r4, r8
   38680:	beq	3881c <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   38684:	ldrb	r9, [sp, #27]
   38688:	ldr	r1, [fp, #24]
   3868c:	uxtb	r0, r9
   38690:	blx	r1
   38694:	cmp	r0, #0
   38698:	bne	386b0 <flatcc_json_parser_union_type_vector@@Base+0x468>
   3869c:	ldrb	r0, [r5, #8]
   386a0:	tst	r0, #1
   386a4:	beq	38830 <flatcc_json_parser_union_type_vector@@Base+0x5e8>
   386a8:	mov	r9, #0
   386ac:	strb	r9, [sp, #27]
   386b0:	ldr	r0, [sp, #20]
   386b4:	strb	r9, [r0]
   386b8:	sub	r0, r8, r4
   386bc:	cmp	r0, #2
   386c0:	blt	38750 <flatcc_json_parser_union_type_vector@@Base+0x508>
   386c4:	ldrb	r0, [r4]
   386c8:	cmp	r0, #32
   386cc:	bls	3873c <flatcc_json_parser_union_type_vector@@Base+0x4f4>
   386d0:	mov	sl, r4
   386d4:	cmp	sl, r8
   386d8:	beq	387c0 <flatcc_json_parser_union_type_vector@@Base+0x578>
   386dc:	ldrb	r0, [sl]
   386e0:	ldr	r4, [sp, #16]
   386e4:	cmp	r0, #44	; 0x2c
   386e8:	bne	387cc <flatcc_json_parser_union_type_vector@@Base+0x584>
   386ec:	add	r1, sl, #1
   386f0:	sub	r0, r8, r1
   386f4:	cmp	r0, #2
   386f8:	blt	38780 <flatcc_json_parser_union_type_vector@@Base+0x538>
   386fc:	ldrb	r0, [r1]
   38700:	cmp	r0, #32
   38704:	bls	38770 <flatcc_json_parser_union_type_vector@@Base+0x528>
   38708:	mov	sl, r1
   3870c:	cmp	sl, r8
   38710:	beq	38798 <flatcc_json_parser_union_type_vector@@Base+0x550>
   38714:	ldrb	r0, [sl]
   38718:	cmp	r0, #93	; 0x5d
   3871c:	beq	387d4 <flatcc_json_parser_union_type_vector@@Base+0x58c>
   38720:	ldr	r0, [r5]
   38724:	mov	r1, #1
   38728:	bl	2e948 <flatcc_builder_extend_vector@@Base>
   3872c:	mov	r1, r0
   38730:	cmp	r0, #0
   38734:	bne	38414 <flatcc_json_parser_union_type_vector@@Base+0x1cc>
   38738:	b	382d4 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   3873c:	bne	38750 <flatcc_json_parser_union_type_vector@@Base+0x508>
   38740:	mov	sl, r4
   38744:	ldrb	r0, [sl, #1]!
   38748:	cmp	r0, #32
   3874c:	bhi	38764 <flatcc_json_parser_union_type_vector@@Base+0x51c>
   38750:	mov	r0, r5
   38754:	mov	r1, r4
   38758:	mov	r2, r8
   3875c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   38760:	mov	sl, r0
   38764:	cmp	sl, r8
   38768:	bne	386dc <flatcc_json_parser_union_type_vector@@Base+0x494>
   3876c:	b	387c0 <flatcc_json_parser_union_type_vector@@Base+0x578>
   38770:	bne	38780 <flatcc_json_parser_union_type_vector@@Base+0x538>
   38774:	ldrb	r0, [sl, #2]!
   38778:	cmp	r0, #32
   3877c:	bhi	38790 <flatcc_json_parser_union_type_vector@@Base+0x548>
   38780:	mov	r0, r5
   38784:	mov	r2, r8
   38788:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   3878c:	mov	sl, r0
   38790:	cmp	sl, r8
   38794:	bne	38714 <flatcc_json_parser_union_type_vector@@Base+0x4cc>
   38798:	ldr	r0, [r5, #20]
   3879c:	cmp	r0, #0
   387a0:	mov	r0, r8
   387a4:	bne	38870 <flatcc_json_parser_union_type_vector@@Base+0x628>
   387a8:	str	r8, [r5, #32]
   387ac:	ldr	r2, [sp, #12]
   387b0:	mov	r0, #9
   387b4:	ldr	r1, [r5, #4]
   387b8:	sub	r1, r2, r1
   387bc:	b	38370 <flatcc_json_parser_union_type_vector@@Base+0x128>
   387c0:	ldr	r4, [sp, #16]
   387c4:	mov	r0, r8
   387c8:	b	38870 <flatcc_json_parser_union_type_vector@@Base+0x628>
   387cc:	cmp	r0, #93	; 0x5d
   387d0:	bne	387f8 <flatcc_json_parser_union_type_vector@@Base+0x5b0>
   387d4:	add	r1, sl, #1
   387d8:	sub	r0, r8, r1
   387dc:	cmp	r0, #2
   387e0:	blt	38864 <flatcc_json_parser_union_type_vector@@Base+0x61c>
   387e4:	ldrb	r0, [r1]
   387e8:	cmp	r0, #32
   387ec:	bls	38850 <flatcc_json_parser_union_type_vector@@Base+0x608>
   387f0:	mov	r0, r1
   387f4:	b	38870 <flatcc_json_parser_union_type_vector@@Base+0x628>
   387f8:	ldr	r0, [r5, #20]
   387fc:	cmp	r0, #0
   38800:	mov	r0, r8
   38804:	bne	38870 <flatcc_json_parser_union_type_vector@@Base+0x628>
   38808:	str	sl, [r5, #32]
   3880c:	mov	r0, #9
   38810:	ldr	r1, [r5, #4]
   38814:	sub	r1, sl, r1
   38818:	b	3836c <flatcc_json_parser_union_type_vector@@Base+0x124>
   3881c:	mov	sl, r4
   38820:	ldr	r0, [r5, #20]
   38824:	cmp	r0, #0
   38828:	bne	382fc <flatcc_json_parser_union_type_vector@@Base+0xb4>
   3882c:	b	382e0 <flatcc_json_parser_union_type_vector@@Base+0x98>
   38830:	ldr	r0, [r5, #20]
   38834:	cmp	r0, #0
   38838:	bne	382fc <flatcc_json_parser_union_type_vector@@Base+0xb4>
   3883c:	str	r4, [r5, #32]
   38840:	mov	r0, #15
   38844:	ldr	r1, [r5, #4]
   38848:	sub	r1, r4, r1
   3884c:	b	382f0 <flatcc_json_parser_union_type_vector@@Base+0xa8>
   38850:	bne	38864 <flatcc_json_parser_union_type_vector@@Base+0x61c>
   38854:	ldrb	r0, [sl, #2]!
   38858:	cmp	r0, #32
   3885c:	mov	r0, sl
   38860:	bhi	38870 <flatcc_json_parser_union_type_vector@@Base+0x628>
   38864:	mov	r0, r5
   38868:	mov	r2, r8
   3886c:	bl	345fc <flatcc_json_parser_space_ext@@Base>
   38870:	mov	sl, r0
   38874:	ldr	r0, [r5]
   38878:	bl	30804 <flatcc_builder_vector_count@@Base>
   3887c:	str	r0, [r4, #16]
   38880:	mov	r7, r0
   38884:	ldr	r0, [r5]
   38888:	mov	r1, r7
   3888c:	bl	2dcf0 <flatcc_builder_enter_user_frame@@Base>
   38890:	mov	r9, r0
   38894:	ldr	r0, [r5]
   38898:	mov	r1, r9
   3889c:	bl	2de84 <flatcc_builder_get_user_frame_ptr@@Base>
   388a0:	mov	r4, r0
   388a4:	ldr	r0, [r5]
   388a8:	bl	30810 <flatcc_builder_vector_edit@@Base>
   388ac:	mov	r1, r0
   388b0:	mov	r0, r4
   388b4:	mov	r2, r7
   388b8:	bl	14e5c <memcpy@plt>
   388bc:	ldr	r0, [r5]
   388c0:	bl	30714 <flatcc_builder_end_vector@@Base>
   388c4:	cmp	r0, #0
   388c8:	beq	382d4 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   388cc:	ldr	r1, [fp, #8]
   388d0:	mov	r4, r0
   388d4:	ldr	r0, [r5]
   388d8:	sub	r1, r1, #1
   388dc:	bl	30c1c <flatcc_builder_table_add_offset@@Base>
   388e0:	cmp	r0, #0
   388e4:	beq	382d4 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   388e8:	str	r4, [r0]
   388ec:	ldr	r1, [fp, #12]
   388f0:	ldr	r0, [r5]
   388f4:	bl	2de84 <flatcc_builder_get_user_frame_ptr@@Base>
   388f8:	add	r2, r0, #8
   388fc:	mov	r3, r2
   38900:	ldr	r1, [r3, r6, lsl #3]!
   38904:	str	r9, [r3, #20]
   38908:	ldr	r3, [r0, #4]
   3890c:	cmp	r1, #0
   38910:	beq	38980 <flatcc_json_parser_union_type_vector@@Base+0x738>
   38914:	cmp	r3, #0
   38918:	beq	38998 <flatcc_json_parser_union_type_vector@@Base+0x750>
   3891c:	sub	r3, r3, #1
   38920:	ldr	ip, [fp, #20]
   38924:	str	r3, [r0, #4]
   38928:	add	r0, r2, r6, lsl #3
   3892c:	mov	r3, r9
   38930:	ldr	r6, [r5, #4]
   38934:	ldr	r4, [r5, #12]
   38938:	ldr	r2, [r0, #8]
   3893c:	str	r2, [r5, #12]
   38940:	mov	r2, r8
   38944:	ldr	r0, [r0, #4]
   38948:	str	r0, [r5, #4]
   3894c:	ldr	r0, [fp, #8]
   38950:	str	r7, [sp]
   38954:	stmib	sp, {r0, ip}
   38958:	mov	r0, r5
   3895c:	bl	37dcc <flatcc_json_parser_union_vector@@Base+0x100>
   38960:	cmp	r0, r8
   38964:	beq	382fc <flatcc_json_parser_union_type_vector@@Base+0xb4>
   38968:	str	r6, [r5, #4]
   3896c:	str	r4, [r5, #12]
   38970:	mov	r8, sl
   38974:	mov	r0, r8
   38978:	sub	sp, fp, #28
   3897c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38980:	add	r1, r3, #1
   38984:	str	r1, [r0, #4]
   38988:	mov	r8, sl
   3898c:	mov	r0, r8
   38990:	sub	sp, fp, #28
   38994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38998:	movw	r0, #46820	; 0xb6e4
   3899c:	movw	r1, #46835	; 0xb6f3
   389a0:	movw	r3, #47113	; 0xb809
   389a4:	movw	r2, #1122	; 0x462
   389a8:	movt	r0, #4
   389ac:	movt	r1, #4
   389b0:	movt	r3, #4
   389b4:	bl	14f40 <__assert_fail@plt>

000389b8 <flatcc_json_parser_table_as_root@@Base>:
   389b8:	push	{r4, r5, r6, r7, fp, lr}
   389bc:	add	fp, sp, #16
   389c0:	sub	sp, sp, #48	; 0x30
   389c4:	cmp	r1, #0
   389c8:	vmov.i32	q8, #0	; 0x00000000
   389cc:	add	r5, sp, #8
   389d0:	mov	r6, r0
   389d4:	add	r7, r2, r3
   389d8:	mov	r4, r2
   389dc:	movne	r5, r1
   389e0:	mov	r1, #2
   389e4:	add	r0, r5, #16
   389e8:	vst1.32	{d16-d17}, [r0]
   389ec:	mov	r0, #0
   389f0:	str	r0, [r5, #36]	; 0x24
   389f4:	mov	r0, #1
   389f8:	str	r2, [r5, #32]
   389fc:	str	r0, [r5, #12]
   38a00:	ldr	r0, [fp, #8]
   38a04:	str	r2, [r5, #4]
   38a08:	str	r6, [r5]
   38a0c:	and	r3, r1, r0, lsr #1
   38a10:	ldr	r1, [fp, #12]
   38a14:	str	r0, [r5, #8]
   38a18:	str	r7, [r5, #28]
   38a1c:	str	r2, [r5, #24]
   38a20:	mov	r0, r6
   38a24:	mov	r2, #0
   38a28:	bl	2e45c <flatcc_builder_start_buffer@@Base>
   38a2c:	mov	r1, r0
   38a30:	mvn	r0, #0
   38a34:	cmp	r1, #0
   38a38:	bne	38a60 <flatcc_json_parser_table_as_root@@Base+0xa8>
   38a3c:	ldr	ip, [fp, #16]
   38a40:	add	r3, sp, #4
   38a44:	mov	r0, r5
   38a48:	mov	r1, r4
   38a4c:	mov	r2, r7
   38a50:	blx	ip
   38a54:	ldr	r0, [r5, #20]
   38a58:	cmp	r0, #0
   38a5c:	beq	38a68 <flatcc_json_parser_table_as_root@@Base+0xb0>
   38a60:	sub	sp, fp, #16
   38a64:	pop	{r4, r5, r6, r7, fp, pc}
   38a68:	ldr	r1, [sp, #4]
   38a6c:	mov	r0, r6
   38a70:	bl	2e64c <flatcc_builder_end_buffer@@Base>
   38a74:	cmp	r0, #0
   38a78:	mvn	r0, #0
   38a7c:	movne	r0, #0
   38a80:	strne	r4, [r5, #36]	; 0x24
   38a84:	sub	sp, fp, #16
   38a88:	pop	{r4, r5, r6, r7, fp, pc}

00038a8c <flatcc_json_parser_struct_as_root@@Base>:
   38a8c:	push	{r4, r5, r6, r7, fp, lr}
   38a90:	add	fp, sp, #16
   38a94:	sub	sp, sp, #48	; 0x30
   38a98:	cmp	r1, #0
   38a9c:	vmov.i32	q8, #0	; 0x00000000
   38aa0:	add	r5, sp, #8
   38aa4:	mov	r6, r0
   38aa8:	add	r7, r2, r3
   38aac:	mov	r4, r2
   38ab0:	movne	r5, r1
   38ab4:	mov	r1, #2
   38ab8:	add	r0, r5, #16
   38abc:	vst1.32	{d16-d17}, [r0]
   38ac0:	mov	r0, #0
   38ac4:	str	r0, [r5, #36]	; 0x24
   38ac8:	mov	r0, #1
   38acc:	str	r2, [r5, #32]
   38ad0:	str	r0, [r5, #12]
   38ad4:	ldr	r0, [fp, #8]
   38ad8:	str	r2, [r5, #4]
   38adc:	str	r6, [r5]
   38ae0:	and	r3, r1, r0, lsr #1
   38ae4:	ldr	r1, [fp, #12]
   38ae8:	str	r0, [r5, #8]
   38aec:	str	r7, [r5, #28]
   38af0:	str	r2, [r5, #24]
   38af4:	mov	r0, r6
   38af8:	mov	r2, #0
   38afc:	bl	2e45c <flatcc_builder_start_buffer@@Base>
   38b00:	mov	r1, r0
   38b04:	mvn	r0, #0
   38b08:	cmp	r1, #0
   38b0c:	bne	38b34 <flatcc_json_parser_struct_as_root@@Base+0xa8>
   38b10:	ldr	ip, [fp, #16]
   38b14:	add	r3, sp, #4
   38b18:	mov	r0, r5
   38b1c:	mov	r1, r4
   38b20:	mov	r2, r7
   38b24:	blx	ip
   38b28:	ldr	r0, [r5, #20]
   38b2c:	cmp	r0, #0
   38b30:	beq	38b3c <flatcc_json_parser_struct_as_root@@Base+0xb0>
   38b34:	sub	sp, fp, #16
   38b38:	pop	{r4, r5, r6, r7, fp, pc}
   38b3c:	ldr	r1, [sp, #4]
   38b40:	mov	r0, r6
   38b44:	bl	2e64c <flatcc_builder_end_buffer@@Base>
   38b48:	cmp	r0, #0
   38b4c:	mvn	r0, #0
   38b50:	movne	r0, #0
   38b54:	strne	r4, [r5, #36]	; 0x24
   38b58:	sub	sp, fp, #16
   38b5c:	pop	{r4, r5, r6, r7, fp, pc}

00038b60 <flatcc_json_printer_error_string@@Base>:
   38b60:	cmp	r0, #3
   38b64:	movwhi	r0, #43726	; 0xaace
   38b68:	movthi	r0, #4
   38b6c:	bxhi	lr
   38b70:	movw	r1, #50476	; 0xc52c
   38b74:	movt	r1, #4
   38b78:	ldr	r0, [r1, r0, lsl #2]
   38b7c:	bx	lr

00038b80 <flatcc_json_printer_fmt_float@@Base>:
   38b80:	vcvt.f64.f32	d0, s0
   38b84:	b	38b88 <flatcc_json_printer_fmt_float@@Base+0x8>
   38b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38b8c:	add	fp, sp, #28
   38b90:	sub	sp, sp, #92	; 0x5c
   38b94:	cmp	r0, #0
   38b98:	beq	39a44 <flatcc_json_printer_fmt_float@@Base+0xec4>
   38b9c:	vmov	r3, r2, d0
   38ba0:	mov	ip, r0
   38ba4:	mov	r0, #-2147483648	; 0x80000000
   38ba8:	mov	r6, #0
   38bac:	orr	r1, r0, #266338304	; 0xfe00000
   38bb0:	orr	r1, r1, #1879048192	; 0x70000000
   38bb4:	lsl	r7, r2, #1
   38bb8:	subs	r6, r6, r3, lsl #1
   38bbc:	orr	r7, r7, r3, lsr #31
   38bc0:	sbcs	r1, r1, r7
   38bc4:	bcs	38be0 <flatcc_json_printer_fmt_float@@Base+0x60>
   38bc8:	movw	r1, #48271	; 0xbc8f
   38bcc:	mov	r0, ip
   38bd0:	movt	r1, #4
   38bd4:	sub	sp, fp, #28
   38bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38bdc:	b	14f28 <sprintf@plt>
   38be0:	cmn	r2, #1
   38be4:	ble	38bf0 <flatcc_json_printer_fmt_float@@Base+0x70>
   38be8:	mov	r5, ip
   38bec:	b	38c04 <flatcc_json_printer_fmt_float@@Base+0x84>
   38bf0:	vneg.f64	d0, d0
   38bf4:	mov	r1, #45	; 0x2d
   38bf8:	mov	r5, ip
   38bfc:	eor	r2, r2, r0
   38c00:	strb	r1, [r5], #1
   38c04:	movw	r0, #0
   38c08:	movt	r0, #32752	; 0x7ff0
   38c0c:	eor	r1, r2, r0
   38c10:	orrs	r1, r3, r1
   38c14:	beq	38c34 <flatcc_json_printer_fmt_float@@Base+0xb4>
   38c18:	orrs	r1, r3, r2
   38c1c:	bne	38c4c <flatcc_json_printer_fmt_float@@Base+0xcc>
   38c20:	mov	r0, #48	; 0x30
   38c24:	strh	r0, [r5], -ip
   38c28:	add	r0, r5, #1
   38c2c:	sub	sp, fp, #28
   38c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38c34:	movw	r0, #28265	; 0x6e69
   38c38:	movt	r0, #102	; 0x66
   38c3c:	str	r0, [r5], -ip
   38c40:	add	r0, r5, #3
   38c44:	sub	sp, fp, #28
   38c48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38c4c:	vmov	lr, r9, d0
   38c50:	str	r5, [fp, #-32]	; 0xffffffe0
   38c54:	ands	r1, r9, r0
   38c58:	bfc	r9, #20, #12
   38c5c:	str	r1, [fp, #-40]	; 0xffffffd8
   38c60:	beq	38c78 <flatcc_json_printer_fmt_float@@Base+0xf8>
   38c64:	movw	r0, #64461	; 0xfbcd
   38c68:	orr	r4, r9, #1048576	; 0x100000
   38c6c:	movt	r0, #65535	; 0xffff
   38c70:	add	r3, r0, r1, lsr #20
   38c74:	b	38c8c <flatcc_json_printer_fmt_float@@Base+0x10c>
   38c78:	orrs	r0, lr, r9
   38c7c:	beq	39a84 <flatcc_json_printer_fmt_float@@Base+0xf04>
   38c80:	movw	r3, #64462	; 0xfbce
   38c84:	mov	r4, r9
   38c88:	movt	r3, #65535	; 0xffff
   38c8c:	mov	r0, lr
   38c90:	mov	r2, r4
   38c94:	mov	r7, r3
   38c98:	lsl	r1, r2, #10
   38c9c:	sub	r7, r7, #10
   38ca0:	orr	r2, r1, r0, lsr #22
   38ca4:	lsl	r0, r0, #10
   38ca8:	cmp	r2, #4194304	; 0x400000
   38cac:	bcc	38c98 <flatcc_json_printer_fmt_float@@Base+0x118>
   38cb0:	mvn	r5, #0
   38cb4:	cmp	r2, #0
   38cb8:	bmi	38ce0 <flatcc_json_printer_fmt_float@@Base+0x160>
   38cbc:	lsl	r1, r2, #1
   38cc0:	sub	r7, r7, #1
   38cc4:	orr	r2, r1, r0, lsr #31
   38cc8:	lsl	r1, r0, #1
   38ccc:	subs	r0, r5, r0, lsl #1
   38cd0:	sbcs	r0, r5, r2
   38cd4:	mov	r0, r1
   38cd8:	blt	38cbc <flatcc_json_printer_fmt_float@@Base+0x13c>
   38cdc:	b	38ce4 <flatcc_json_printer_fmt_float@@Base+0x164>
   38ce0:	mov	r1, r0
   38ce4:	lsl	r6, r4, #1
   38ce8:	mov	r0, #1
   38cec:	sub	sl, r3, #1
   38cf0:	str	r4, [fp, #-44]	; 0xffffffd4
   38cf4:	str	r3, [fp, #-36]	; 0xffffffdc
   38cf8:	orr	r8, r6, lr, lsr #31
   38cfc:	mov	r6, #0
   38d00:	orr	r0, r0, lr, lsl #1
   38d04:	cmp	r6, r8, lsr #22
   38d08:	bne	39038 <flatcc_json_printer_fmt_float@@Base+0x4b8>
   38d0c:	mov	r6, r8
   38d10:	mov	r4, sl
   38d14:	lsl	r3, r6, #10
   38d18:	sub	r4, r4, #10
   38d1c:	orr	r6, r3, r0, lsr #22
   38d20:	lsl	r0, r0, #10
   38d24:	cmp	r6, #4194304	; 0x400000
   38d28:	bcc	38d14 <flatcc_json_printer_fmt_float@@Base+0x194>
   38d2c:	subs	r3, r5, r0
   38d30:	str	ip, [sp, #44]	; 0x2c
   38d34:	sbcs	r3, r5, r6
   38d38:	blt	39050 <flatcc_json_printer_fmt_float@@Base+0x4d0>
   38d3c:	mov	ip, r0
   38d40:	vcmpe.f64	d0, #0.0
   38d44:	vmrs	APSR_nzcv, fpscr
   38d48:	ble	3907c <flatcc_json_printer_fmt_float@@Base+0x4fc>
   38d4c:	vldr	d16, [pc, #852]	; 390a8 <flatcc_json_printer_fmt_float@@Base+0x528>
   38d50:	vcmpe.f64	d0, d16
   38d54:	vmrs	APSR_nzcv, fpscr
   38d58:	bhi	3907c <flatcc_json_printer_fmt_float@@Base+0x4fc>
   38d5c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   38d60:	orrs	r3, lr, r9
   38d64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38d68:	vldr	d16, [pc, #832]	; 390b0 <flatcc_json_printer_fmt_float@@Base+0x530>
   38d6c:	movwne	r3, #1
   38d70:	clz	r5, r5
   38d74:	lsl	r0, r0, #2
   38d78:	lsr	r5, r5, #5
   38d7c:	orrs	r3, r3, r5
   38d80:	mvn	r5, #60	; 0x3c
   38d84:	sub	r5, r5, r7
   38d88:	orreq	r8, r0, lr, lsr #30
   38d8c:	lsl	r0, lr, #2
   38d90:	lslne	r0, lr, #1
   38d94:	vmov	s2, r5
   38d98:	subs	r5, r0, #1
   38d9c:	sbc	lr, r8, #0
   38da0:	cmp	r3, #0
   38da4:	vcvt.f64.s32	d17, s2
   38da8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38dac:	subeq	sl, r0, #2
   38db0:	vmul.f64	d16, d17, d16
   38db4:	sub	r3, sl, r4
   38db8:	rsb	r0, r3, #32
   38dbc:	lsl	sl, r5, r3
   38dc0:	lsr	r0, r5, r0
   38dc4:	orr	r0, r0, lr, lsl r3
   38dc8:	subs	lr, r3, #32
   38dcc:	lslpl	r0, r5, lr
   38dd0:	movwpl	sl, #0
   38dd4:	vcvt.s32.f64	s2, d16
   38dd8:	vcmpe.f64	d16, #0.0
   38ddc:	str	r0, [fp, #-36]	; 0xffffffdc
   38de0:	vmrs	APSR_nzcv, fpscr
   38de4:	vmov	r5, s2
   38de8:	bmi	38e00 <flatcc_json_printer_fmt_float@@Base+0x280>
   38dec:	vcvt.f64.s32	d17, s2
   38df0:	vsub.f64	d16, d16, d17
   38df4:	vcmp.f64	d16, #0.0
   38df8:	vmrs	APSR_nzcv, fpscr
   38dfc:	addne	r5, r5, #1
   38e00:	movw	r0, #347	; 0x15b
   38e04:	bic	r1, r1, #1
   38e08:	add	r0, r5, r0
   38e0c:	asr	r5, r0, #31
   38e10:	add	r0, r0, r5, lsr #29
   38e14:	mvn	r5, #14
   38e18:	and	r0, r5, r0, lsl #1
   38e1c:	movw	r5, #49024	; 0xbf80
   38e20:	movt	r5, #4
   38e24:	add	r0, r0, r5
   38e28:	ldrd	r8, [r0, #16]
   38e2c:	str	r0, [sp, #48]	; 0x30
   38e30:	umull	r0, r5, r9, ip
   38e34:	str	r0, [fp, #-40]	; 0xffffffd8
   38e38:	umull	r0, lr, r8, r6
   38e3c:	umaal	lr, r5, r9, r6
   38e40:	umull	r6, r3, r8, ip
   38e44:	ldr	r6, [fp, #-40]	; 0xffffffd8
   38e48:	adds	r0, r0, r3
   38e4c:	mov	r3, #0
   38e50:	adc	r3, r3, #0
   38e54:	adds	r0, r0, r6
   38e58:	adc	r3, r3, #0
   38e5c:	adds	r0, r0, #-2147483648	; 0x80000000
   38e60:	adcs	r0, lr, r3
   38e64:	adc	r3, r5, #0
   38e68:	adds	r0, r0, #1
   38e6c:	str	r0, [sp, #52]	; 0x34
   38e70:	adc	ip, r3, #0
   38e74:	umull	r0, r3, r9, sl
   38e78:	str	r0, [fp, #-40]	; 0xffffffd8
   38e7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38e80:	umull	lr, r5, r8, r0
   38e84:	umaal	r5, r3, r9, r0
   38e88:	umull	r0, r6, r8, sl
   38e8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38e90:	adds	sl, lr, r6
   38e94:	mov	r6, #0
   38e98:	mov	lr, ip
   38e9c:	adc	r6, r6, #0
   38ea0:	adds	r0, sl, r0
   38ea4:	adc	r6, r6, #0
   38ea8:	adds	r0, r0, #-2147483648	; 0x80000000
   38eac:	adcs	r0, r5, r6
   38eb0:	umull	r6, r5, r9, r1
   38eb4:	adc	r3, r3, #0
   38eb8:	subs	ip, r0, #1
   38ebc:	sbc	sl, r3, #0
   38ec0:	umull	r0, r3, r8, r2
   38ec4:	umaal	r3, r5, r9, r2
   38ec8:	umull	r1, r2, r8, r1
   38ecc:	mov	r1, #0
   38ed0:	ldr	r8, [sp, #52]	; 0x34
   38ed4:	str	r1, [sp, #56]	; 0x38
   38ed8:	mov	r1, #0
   38edc:	adds	r0, r0, r2
   38ee0:	bic	r2, r6, #1
   38ee4:	adc	r1, r1, #0
   38ee8:	adds	r0, r0, r2
   38eec:	adc	r1, r1, #0
   38ef0:	adds	r0, r0, #-2147483648	; 0x80000000
   38ef4:	adcs	r0, r3, r1
   38ef8:	str	r0, [sp, #32]
   38efc:	adc	r0, r5, #0
   38f00:	subs	r9, r8, ip
   38f04:	str	r0, [sp, #36]	; 0x24
   38f08:	sbcs	r0, lr, sl
   38f0c:	str	r0, [fp, #-36]	; 0xffffffdc
   38f10:	bcc	39a64 <flatcc_json_printer_fmt_float@@Base+0xee4>
   38f14:	ldr	r0, [sp, #48]	; 0x30
   38f18:	ldrsh	r0, [r0, #24]
   38f1c:	add	r0, r0, #64	; 0x40
   38f20:	add	r1, r0, r4
   38f24:	add	r2, r0, r7
   38f28:	movw	r7, #1233	; 0x4d1
   38f2c:	str	r1, [sp, #28]
   38f30:	mvn	r1, #31
   38f34:	rsb	ip, r2, #0
   38f38:	add	r3, r2, #32
   38f3c:	str	r2, [sp, #24]
   38f40:	subs	r5, r1, r2
   38f44:	movw	r1, #14609	; 0x3911
   38f48:	lsr	r0, r8, ip
   38f4c:	movt	r1, #1
   38f50:	orr	r0, r0, lr, lsl r3
   38f54:	lsrpl	r0, lr, r5
   38f58:	mla	r6, r2, r7, r1
   38f5c:	mov	r1, #1
   38f60:	mov	r2, #1
   38f64:	lsr	r3, r2, r3
   38f68:	add	r4, r1, r6, asr #12
   38f6c:	movw	r1, #50416	; 0xc4f0
   38f70:	movt	r1, #4
   38f74:	ldr	r7, [r1, r4, lsl #2]
   38f78:	cmp	r7, r0
   38f7c:	lsl	r7, r2, ip
   38f80:	asrhi	r4, r6, #12
   38f84:	cmp	r5, #0
   38f88:	movwpl	r7, #0
   38f8c:	lslpl	r3, r2, r5
   38f90:	subs	r5, r7, #1
   38f94:	str	r7, [sp, #60]	; 0x3c
   38f98:	sbc	r6, r3, #0
   38f9c:	and	r8, r8, r5
   38fa0:	cmp	r4, #0
   38fa4:	str	r3, [sp, #20]
   38fa8:	str	lr, [sp, #40]	; 0x28
   38fac:	str	ip, [fp, #-40]	; 0xffffffd8
   38fb0:	str	r5, [fp, #-44]	; 0xffffffd4
   38fb4:	and	r2, lr, r6
   38fb8:	str	r6, [fp, #-48]	; 0xffffffd0
   38fbc:	ble	3909c <flatcc_json_printer_fmt_float@@Base+0x51c>
   38fc0:	ldr	sl, [r1, r4, lsl #2]
   38fc4:	sub	r1, r4, #1
   38fc8:	mov	lr, #0
   38fcc:	str	r1, [fp, #-52]	; 0xffffffcc
   38fd0:	udiv	r1, r0, sl
   38fd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38fd8:	subs	r4, ip, #32
   38fdc:	mls	r0, r1, sl, r0
   38fe0:	add	r6, r1, #48	; 0x30
   38fe4:	rsb	r1, ip, #32
   38fe8:	strb	r6, [r3, lr]
   38fec:	lsr	r3, r0, r1
   38ff0:	lsl	r7, r0, ip
   38ff4:	lslpl	r3, r0, r4
   38ff8:	movwpl	r7, #0
   38ffc:	adds	r7, r7, r8
   39000:	adc	r3, r3, r2
   39004:	subs	r5, r7, r9
   39008:	ldr	r5, [fp, #-36]	; 0xffffffdc
   3900c:	sbcs	r5, r3, r5
   39010:	bcc	390b8 <flatcc_json_printer_fmt_float@@Base+0x538>
   39014:	ldr	r1, [fp, #-52]	; 0xffffffcc
   39018:	cmp	r1, lr
   3901c:	beq	39204 <flatcc_json_printer_fmt_float@@Base+0x684>
   39020:	movw	r1, #52429	; 0xcccd
   39024:	add	lr, lr, #1
   39028:	movt	r1, #52428	; 0xcccc
   3902c:	umull	r1, r3, sl, r1
   39030:	lsr	sl, r3, #3
   39034:	b	38fd0 <flatcc_json_printer_fmt_float@@Base+0x450>
   39038:	mov	r4, sl
   3903c:	mov	r6, r8
   39040:	subs	r3, r5, r0
   39044:	str	ip, [sp, #44]	; 0x2c
   39048:	sbcs	r3, r5, r6
   3904c:	bge	38d3c <flatcc_json_printer_fmt_float@@Base+0x1bc>
   39050:	lsl	r3, r6, #1
   39054:	lsl	ip, r0, #1
   39058:	sub	r4, r4, #1
   3905c:	orr	r6, r3, r0, lsr #31
   39060:	subs	r0, r5, r0, lsl #1
   39064:	sbcs	r0, r5, r6
   39068:	mov	r0, ip
   3906c:	blt	39050 <flatcc_json_printer_fmt_float@@Base+0x4d0>
   39070:	vcmpe.f64	d0, #0.0
   39074:	vmrs	APSR_nzcv, fpscr
   39078:	bgt	38d4c <flatcc_json_printer_fmt_float@@Base+0x1cc>
   3907c:	movw	r0, #48291	; 0xbca3
   39080:	movw	r1, #48144	; 0xbc10
   39084:	movw	r3, #48328	; 0xbcc8
   39088:	mov	r2, #138	; 0x8a
   3908c:	movt	r0, #4
   39090:	movt	r1, #4
   39094:	movt	r3, #4
   39098:	bl	14f40 <__assert_fail@plt>
   3909c:	mov	r1, r2
   390a0:	b	39218 <flatcc_json_printer_fmt_float@@Base+0x698>
   390a4:	nop	{0}
   390a8:			; <UNDEFINED> instruction: 0xffffffff
   390ac:	svcvc	0x00efffff
   390b0:			; <UNDEFINED> instruction: 0x509f79fe
   390b4:	svccc	0x00d34413
   390b8:	str	lr, [fp, #-44]	; 0xffffffd4
   390bc:	ldr	r8, [sp, #52]	; 0x34
   390c0:	ldr	r0, [sp, #32]
   390c4:	subs	r2, r8, r0
   390c8:	str	r2, [sp, #60]	; 0x3c
   390cc:	ldr	lr, [sp, #40]	; 0x28
   390d0:	ldr	r5, [sp, #36]	; 0x24
   390d4:	sbc	r2, lr, r5
   390d8:	str	r2, [sp, #56]	; 0x38
   390dc:	ldr	r2, [sp, #28]
   390e0:	ldr	ip, [sp, #24]
   390e4:	cmp	r2, ip
   390e8:	bne	39a64 <flatcc_json_printer_fmt_float@@Base+0xee4>
   390ec:	subs	r0, r8, r0
   390f0:	sbcs	r0, lr, r5
   390f4:	bcc	39a64 <flatcc_json_printer_fmt_float@@Base+0xee4>
   390f8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   390fc:	lsr	lr, sl, r1
   39100:	ldr	r1, [fp, #-40]	; 0xffffffd8
   39104:	subs	r0, r9, r7
   39108:	sbc	r2, r5, r3
   3910c:	cmp	r4, #0
   39110:	lsl	r8, sl, r1
   39114:	mov	r1, #0
   39118:	lslpl	lr, sl, r4
   3911c:	movwpl	r8, #0
   39120:	str	r2, [fp, #-40]	; 0xffffffd8
   39124:	subs	r5, r0, r8
   39128:	sbcs	r5, r2, lr
   3912c:	ldr	r5, [sp, #60]	; 0x3c
   39130:	movwcc	r1, #1
   39134:	adds	r2, r5, #1
   39138:	str	r2, [fp, #-48]	; 0xffffffd0
   3913c:	ldr	r4, [sp, #56]	; 0x38
   39140:	adc	r2, r4, #0
   39144:	subs	sl, r5, #1
   39148:	sbc	ip, r4, #0
   3914c:	subs	r4, r7, sl
   39150:	str	r2, [fp, #-56]	; 0xffffffc8
   39154:	sbcs	r4, r3, ip
   39158:	bcs	394f8 <flatcc_json_printer_fmt_float@@Base+0x978>
   3915c:	subs	r0, r0, r8
   39160:	ldr	r0, [fp, #-40]	; 0xffffffd8
   39164:	sbcs	r0, r0, lr
   39168:	bcc	394f8 <flatcc_json_printer_fmt_float@@Base+0x978>
   3916c:	adds	r0, r7, r8
   39170:	adc	r4, r3, lr
   39174:	subs	r1, r0, sl
   39178:	sbcs	r1, r4, ip
   3917c:	bcc	391b4 <flatcc_json_printer_fmt_float@@Base+0x634>
   39180:	subs	r1, r0, sl
   39184:	mov	r5, lr
   39188:	mov	lr, r8
   3918c:	sbc	r2, r4, ip
   39190:	str	r2, [fp, #-40]	; 0xffffffd8
   39194:	subs	r2, sl, r7
   39198:	sbc	r8, ip, r3
   3919c:	subs	r1, r2, r1
   391a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   391a4:	sbcs	r1, r8, r1
   391a8:	mov	r8, lr
   391ac:	mov	lr, r5
   391b0:	bcc	394f4 <flatcc_json_printer_fmt_float@@Base+0x974>
   391b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   391b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   391bc:	sub	r6, r6, #1
   391c0:	subs	r3, r9, r0
   391c4:	strb	r6, [r2, r1]
   391c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   391cc:	sbc	r7, r1, r4
   391d0:	subs	r1, r3, r8
   391d4:	sbcs	r1, r7, lr
   391d8:	mov	r1, #0
   391dc:	movwcc	r1, #1
   391e0:	subs	r5, r0, sl
   391e4:	sbcs	r5, r4, ip
   391e8:	bcs	39500 <flatcc_json_printer_fmt_float@@Base+0x980>
   391ec:	subs	r3, r3, r8
   391f0:	sbcs	r3, r7, lr
   391f4:	mov	r7, r0
   391f8:	mov	r3, r4
   391fc:	bcs	3916c <flatcc_json_printer_fmt_float@@Base+0x5ec>
   39200:	b	39500 <flatcc_json_printer_fmt_float@@Base+0x980>
   39204:	ldr	r0, [fp, #-52]	; 0xffffffcc
   39208:	mov	r1, r2
   3920c:	sub	r4, r0, lr
   39210:	add	r0, lr, #1
   39214:	str	r0, [sp, #56]	; 0x38
   39218:	rsb	r0, ip, #32
   3921c:	mov	r3, r1
   39220:	mov	r5, #0
   39224:	mov	r1, r8
   39228:	str	r0, [fp, #-52]	; 0xffffffcc
   3922c:	sub	r0, ip, #32
   39230:	mov	ip, #1
   39234:	str	r0, [fp, #-56]	; 0xffffffc8
   39238:	mov	r0, r9
   3923c:	ldr	lr, [sp, #56]	; 0x38
   39240:	ldr	r6, [fp, #-36]	; 0xffffffdc
   39244:	mov	r2, #10
   39248:	mov	sl, r5
   3924c:	mov	r8, ip
   39250:	add	r6, r6, r6, lsl #2
   39254:	umull	r2, r7, r1, r2
   39258:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3925c:	add	r9, sl, sl, lsl #2
   39260:	lsr	r5, r2, r1
   39264:	mov	r1, r4
   39268:	add	r4, r3, r3, lsl #2
   3926c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   39270:	add	r4, r7, r4, lsl #1
   39274:	orr	r7, r5, r4, lsl r3
   39278:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3927c:	cmp	r3, #0
   39280:	lsrpl	r7, r4, r3
   39284:	ldr	r3, [fp, #-32]	; 0xffffffe0
   39288:	add	r7, r7, #48	; 0x30
   3928c:	strb	r7, [r3, lr]
   39290:	mov	r3, #10
   39294:	add	lr, lr, #1
   39298:	umull	ip, r5, ip, r3
   3929c:	umull	r0, r3, r0, r3
   392a0:	add	r6, r3, r6, lsl #1
   392a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   392a8:	add	r5, r5, r9, lsl #1
   392ac:	and	r3, r4, r3
   392b0:	mov	r4, r1
   392b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   392b8:	sub	r4, r4, #1
   392bc:	and	r1, r2, r1
   392c0:	subs	r2, r1, r0
   392c4:	sbcs	r2, r3, r6
   392c8:	bcs	39244 <flatcc_json_printer_fmt_float@@Base+0x6c4>
   392cc:	str	r1, [fp, #-52]	; 0xffffffcc
   392d0:	str	r3, [sp, #16]
   392d4:	str	r9, [sp, #12]
   392d8:	str	r8, [fp, #-56]	; 0xffffffc8
   392dc:	stmib	sp, {r4, sl}
   392e0:	str	r0, [fp, #-40]	; 0xffffffd8
   392e4:	str	lr, [sp, #56]	; 0x38
   392e8:	ldr	r0, [sp, #28]
   392ec:	ldr	r1, [sp, #24]
   392f0:	ldr	r2, [sp, #52]	; 0x34
   392f4:	ldr	r3, [sp, #36]	; 0x24
   392f8:	ldr	r4, [sp, #32]
   392fc:	cmp	r0, r1
   39300:	ldr	r0, [sp, #40]	; 0x28
   39304:	bne	39a64 <flatcc_json_printer_fmt_float@@Base+0xee4>
   39308:	subs	r1, r2, r4
   3930c:	sbcs	r1, r0, r3
   39310:	bcc	39a64 <flatcc_json_printer_fmt_float@@Base+0xee4>
   39314:	subs	r1, r2, r4
   39318:	sbc	r2, r0, r3
   3931c:	umull	r3, r4, ip, r1
   39320:	mla	r2, ip, r2, r4
   39324:	mla	r1, r5, r1, r2
   39328:	adds	r8, r3, ip
   3932c:	adc	r0, r1, r5
   39330:	subs	r4, r3, ip
   39334:	mov	ip, #0
   39338:	str	r0, [sp, #52]	; 0x34
   3933c:	sbc	r3, r1, r5
   39340:	ldr	r0, [fp, #-40]	; 0xffffffd8
   39344:	ldr	r9, [fp, #-52]	; 0xffffffcc
   39348:	ldr	sl, [sp, #16]
   3934c:	ldr	lr, [sp, #20]
   39350:	subs	r1, r0, r9
   39354:	ldr	r0, [sp, #60]	; 0x3c
   39358:	str	r6, [fp, #-36]	; 0xffffffdc
   3935c:	str	r8, [sp, #40]	; 0x28
   39360:	sbc	r2, r6, sl
   39364:	subs	r1, r1, r0
   39368:	sbcs	r1, r2, lr
   3936c:	movwcc	ip, #1
   39370:	cmp	ip, #0
   39374:	bne	3943c <flatcc_json_printer_fmt_float@@Base+0x8bc>
   39378:	subs	r1, r9, r4
   3937c:	sbcs	r1, sl, r3
   39380:	bcs	3942c <flatcc_json_printer_fmt_float@@Base+0x8ac>
   39384:	str	r4, [fp, #-44]	; 0xffffffd4
   39388:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3938c:	ldr	r2, [sp, #56]	; 0x38
   39390:	add	r1, r1, r2
   39394:	str	r1, [fp, #-48]	; 0xffffffd0
   39398:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3939c:	ldr	r8, [fp, #-44]	; 0xffffffd4
   393a0:	adds	r9, r1, r0
   393a4:	mov	r4, r1
   393a8:	adc	r2, sl, lr
   393ac:	subs	r1, r9, r8
   393b0:	sbcs	r1, r2, r3
   393b4:	bcc	393d8 <flatcc_json_printer_fmt_float@@Base+0x858>
   393b8:	subs	r1, r9, r8
   393bc:	sbc	ip, r2, r3
   393c0:	subs	r5, r8, r4
   393c4:	sbc	r6, r3, sl
   393c8:	subs	r1, r5, r1
   393cc:	sbcs	r1, r6, ip
   393d0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   393d4:	bcc	39434 <flatcc_json_printer_fmt_float@@Base+0x8b4>
   393d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   393dc:	sub	r7, r7, #1
   393e0:	mov	ip, #0
   393e4:	strb	r7, [r0, #-1]
   393e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   393ec:	subs	r5, r0, r9
   393f0:	ldr	r0, [sp, #60]	; 0x3c
   393f4:	sbc	r1, r6, r2
   393f8:	subs	r6, r5, r0
   393fc:	sbcs	r6, r1, lr
   39400:	movwcc	ip, #1
   39404:	subs	r4, r9, r8
   39408:	sbcs	r4, r2, r3
   3940c:	bcs	39440 <flatcc_json_printer_fmt_float@@Base+0x8c0>
   39410:	ldr	r6, [fp, #-36]	; 0xffffffdc
   39414:	subs	r4, r5, r0
   39418:	mov	sl, r2
   3941c:	sbcs	r1, r1, lr
   39420:	mov	r1, r9
   39424:	bcs	393a0 <flatcc_json_printer_fmt_float@@Base+0x820>
   39428:	b	39440 <flatcc_json_printer_fmt_float@@Base+0x8c0>
   3942c:	ldr	r9, [fp, #-52]	; 0xffffffcc
   39430:	b	3943c <flatcc_json_printer_fmt_float@@Base+0x8bc>
   39434:	mov	ip, #0
   39438:	mov	r9, r4
   3943c:	mov	r2, sl
   39440:	ldr	r5, [sp, #40]	; 0x28
   39444:	ldr	r3, [sp, #52]	; 0x34
   39448:	ldr	r4, [fp, #-56]	; 0xffffffc8
   3944c:	subs	r1, r9, r5
   39450:	sbcs	r1, r2, r3
   39454:	bcs	39490 <flatcc_json_printer_fmt_float@@Base+0x910>
   39458:	cmp	ip, #0
   3945c:	bne	39490 <flatcc_json_printer_fmt_float@@Base+0x910>
   39460:	adds	r1, r9, r0
   39464:	adc	r7, r2, lr
   39468:	subs	r6, r1, r5
   3946c:	sbcs	r6, r7, r3
   39470:	bcc	39580 <flatcc_json_printer_fmt_float@@Base+0xa00>
   39474:	subs	r6, r5, r9
   39478:	sbc	r0, r3, r2
   3947c:	subs	r1, r1, r5
   39480:	sbc	r7, r7, r3
   39484:	subs	r1, r1, r6
   39488:	sbcs	r1, r7, r0
   3948c:	bcc	39580 <flatcc_json_printer_fmt_float@@Base+0xa00>
   39490:	mov	r1, #20
   39494:	ldr	r0, [sp, #12]
   39498:	umull	r1, r7, r4, r1
   3949c:	add	r7, r7, r0, lsl #2
   394a0:	subs	r1, r9, r1
   394a4:	sbcs	r1, r2, r7
   394a8:	bcc	39580 <flatcc_json_printer_fmt_float@@Base+0xa00>
   394ac:	mvn	r5, #0
   394b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   394b4:	subs	r1, r5, #39	; 0x27
   394b8:	umull	r7, r6, r4, r1
   394bc:	sbc	r5, r5, #0
   394c0:	mla	r0, r4, r5, r6
   394c4:	ldr	r6, [sp, #8]
   394c8:	mla	r0, r6, r1, r0
   394cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   394d0:	adds	r1, r7, r1
   394d4:	adc	r0, r0, r3
   394d8:	subs	r1, r1, r9
   394dc:	sbcs	r0, r0, r2
   394e0:	bcc	39580 <flatcc_json_printer_fmt_float@@Base+0xa00>
   394e4:	ldr	r4, [sp, #56]	; 0x38
   394e8:	ldr	r5, [sp, #4]
   394ec:	sub	r2, r4, #1
   394f0:	b	395bc <flatcc_json_printer_fmt_float@@Base+0xa3c>
   394f4:	mov	r1, #0
   394f8:	mov	r0, r7
   394fc:	mov	r4, r3
   39500:	ldr	r6, [fp, #-48]	; 0xffffffd0
   39504:	ldr	r5, [fp, #-56]	; 0xffffffc8
   39508:	subs	r3, r0, r6
   3950c:	sbcs	r3, r4, r5
   39510:	bcs	3955c <flatcc_json_printer_fmt_float@@Base+0x9dc>
   39514:	cmp	r1, #0
   39518:	bne	3955c <flatcc_json_printer_fmt_float@@Base+0x9dc>
   3951c:	adds	r1, r0, r8
   39520:	adc	r3, r4, lr
   39524:	subs	r7, r1, r6
   39528:	sbcs	r7, r3, r5
   3952c:	bcc	39580 <flatcc_json_printer_fmt_float@@Base+0xa00>
   39530:	subs	r1, r1, r6
   39534:	sbc	r3, r3, r5
   39538:	subs	r7, r6, r0
   3953c:	sbc	r6, r5, r4
   39540:	subs	r5, r0, #2
   39544:	sbcs	r5, r4, #0
   39548:	bcc	39580 <flatcc_json_printer_fmt_float@@Base+0xa00>
   3954c:	subs	r1, r1, r7
   39550:	sbcs	r1, r3, r6
   39554:	bcs	39568 <flatcc_json_printer_fmt_float@@Base+0x9e8>
   39558:	b	39580 <flatcc_json_printer_fmt_float@@Base+0xa00>
   3955c:	subs	r1, r0, #2
   39560:	sbcs	r1, r4, #0
   39564:	bcc	39580 <flatcc_json_printer_fmt_float@@Base+0xa00>
   39568:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3956c:	subs	r1, r9, #4
   39570:	sbc	r2, r2, #0
   39574:	subs	r0, r1, r0
   39578:	sbcs	r0, r2, r4
   3957c:	bcs	395ac <flatcc_json_printer_fmt_float@@Base+0xa2c>
   39580:	ldr	r4, [fp, #-32]	; 0xffffffe0
   39584:	vmov	r2, r3, d0
   39588:	movw	r1, #48285	; 0xbc9d
   3958c:	movt	r1, #4
   39590:	mov	r0, r4
   39594:	bl	14f28 <sprintf@plt>
   39598:	ldr	r1, [sp, #44]	; 0x2c
   3959c:	sub	r1, r4, r1
   395a0:	add	r0, r1, r0
   395a4:	sub	sp, fp, #28
   395a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   395ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   395b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   395b4:	sub	r5, r0, r2
   395b8:	add	r4, r2, #1
   395bc:	ldr	r0, [sp, #48]	; 0x30
   395c0:	cmp	r4, #3
   395c4:	ldrsh	r9, [r0, #26]
   395c8:	sub	r0, r4, #1
   395cc:	movwlt	r0, #1
   395d0:	sub	r8, r5, r9
   395d4:	rsb	r3, r8, #0
   395d8:	cmp	r0, r3
   395dc:	movge	r0, r3
   395e0:	cmn	r8, #1
   395e4:	ble	3960c <flatcc_json_printer_fmt_float@@Base+0xa8c>
   395e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   395ec:	cmp	r8, #3
   395f0:	bcc	396c8 <flatcc_json_printer_fmt_float@@Base+0xb48>
   395f4:	add	lr, r4, #1
   395f8:	mov	r0, #101	; 0x65
   395fc:	add	r9, r1, lr
   39600:	strb	r0, [r1, r4]
   39604:	mov	sl, r9
   39608:	b	397f4 <flatcc_json_printer_fmt_float@@Base+0xc74>
   3960c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   39610:	cmp	r4, r3
   39614:	bgt	396f4 <flatcc_json_printer_fmt_float@@Base+0xb74>
   39618:	add	r6, r8, r4
   3961c:	cmn	r6, #2
   39620:	blt	396f4 <flatcc_json_printer_fmt_float@@Base+0xb74>
   39624:	add	r7, r1, #2
   39628:	mvn	r0, r2
   3962c:	add	r2, r7, r3
   39630:	add	r0, r2, r0
   39634:	mov	r2, r4
   39638:	bl	14e44 <memmove@plt>
   3963c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   39640:	movw	r0, #11824	; 0x2e30
   39644:	rsb	r6, r6, #2
   39648:	cmp	r6, #3
   3964c:	strh	r0, [r1]
   39650:	mov	r0, #2
   39654:	blt	396bc <flatcc_json_printer_fmt_float@@Base+0xb3c>
   39658:	sub	r0, r9, r5
   3965c:	mov	r1, #48	; 0x30
   39660:	sub	r8, r0, r4
   39664:	mov	r0, r7
   39668:	mov	r2, r8
   3966c:	bl	14eec <memset@plt>
   39670:	mvn	r0, r5
   39674:	mov	r2, r4
   39678:	add	r0, r0, r9
   3967c:	sub	r1, r0, r4
   39680:	and	r0, r8, #7
   39684:	cmp	r1, #7
   39688:	bcc	396a0 <flatcc_json_printer_fmt_float@@Base+0xb20>
   3968c:	add	r1, r5, r2
   39690:	add	r1, r1, r0
   39694:	sub	r1, r1, r9
   39698:	adds	r1, r1, #8
   3969c:	bne	39698 <flatcc_json_printer_fmt_float@@Base+0xb18>
   396a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   396a4:	cmp	r0, #0
   396a8:	beq	396b4 <flatcc_json_printer_fmt_float@@Base+0xb34>
   396ac:	subs	r0, r0, #1
   396b0:	bne	396ac <flatcc_json_printer_fmt_float@@Base+0xb2c>
   396b4:	mov	r0, r6
   396b8:	mov	r4, r2
   396bc:	ldr	ip, [sp, #44]	; 0x2c
   396c0:	add	r4, r0, r4
   396c4:	b	3993c <flatcc_json_printer_fmt_float@@Base+0xdbc>
   396c8:	cmp	r8, #0
   396cc:	beq	39794 <flatcc_json_printer_fmt_float@@Base+0xc14>
   396d0:	add	r0, r1, r4
   396d4:	mov	r1, #48	; 0x30
   396d8:	mov	r2, r8
   396dc:	bl	14eec <memset@plt>
   396e0:	cmp	r8, #4
   396e4:	bcs	3979c <flatcc_json_printer_fmt_float@@Base+0xc1c>
   396e8:	ldr	ip, [sp, #44]	; 0x2c
   396ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   396f0:	b	3992c <flatcc_json_printer_fmt_float@@Base+0xdac>
   396f4:	cmp	r4, #2
   396f8:	blt	397d8 <flatcc_json_printer_fmt_float@@Base+0xc58>
   396fc:	ldr	ip, [sp, #44]	; 0x2c
   39700:	cmp	r0, #1
   39704:	blt	3975c <flatcc_json_printer_fmt_float@@Base+0xbdc>
   39708:	and	r7, r0, #1
   3970c:	mov	r2, #0
   39710:	beq	39744 <flatcc_json_printer_fmt_float@@Base+0xbc4>
   39714:	mov	lr, r4
   39718:	add	r2, r1, r4
   3971c:	sub	r6, r7, r0
   39720:	mov	r3, #0
   39724:	add	r5, r2, r3
   39728:	sub	r3, r3, #2
   3972c:	ldrh	r4, [r5, #-2]
   39730:	cmp	r6, r3
   39734:	strh	r4, [r5, #-1]
   39738:	bne	39724 <flatcc_json_printer_fmt_float@@Base+0xba4>
   3973c:	rsb	r2, r3, #0
   39740:	mov	r4, lr
   39744:	cmp	r7, #0
   39748:	beq	3975c <flatcc_json_printer_fmt_float@@Base+0xbdc>
   3974c:	sub	r3, r4, r2
   39750:	add	r2, r1, r3
   39754:	ldrb	r2, [r2, #-1]
   39758:	strb	r2, [r1, r3]
   3975c:	sub	r3, r4, r0
   39760:	mov	r2, #46	; 0x2e
   39764:	adds	r7, r0, r8
   39768:	add	r0, r4, #1
   3976c:	strb	r2, [r1, r3]
   39770:	beq	39950 <flatcc_json_printer_fmt_float@@Base+0xdd0>
   39774:	add	lr, r4, #2
   39778:	mov	r2, #101	; 0x65
   3977c:	cmn	r7, #1
   39780:	add	r8, r1, lr
   39784:	strb	r2, [r1, r0]
   39788:	ble	39958 <flatcc_json_printer_fmt_float@@Base+0xdd8>
   3978c:	mov	r9, r8
   39790:	b	39968 <flatcc_json_printer_fmt_float@@Base+0xde8>
   39794:	ldr	ip, [sp, #44]	; 0x2c
   39798:	b	3993c <flatcc_json_printer_fmt_float@@Base+0xdbc>
   3979c:	mov	r0, #0
   397a0:	mov	r1, #1
   397a4:	vdup.32	q8, r0
   397a8:	bic	r0, r8, #3
   397ac:	sub	r3, r0, #4
   397b0:	add	r2, r1, r3, lsr #2
   397b4:	cmp	r3, #12
   397b8:	and	r7, r2, #3
   397bc:	vmov.32	d16[0], r4
   397c0:	bcs	398d4 <flatcc_json_printer_fmt_float@@Base+0xd54>
   397c4:	ldr	ip, [sp, #44]	; 0x2c
   397c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   397cc:	cmp	r7, #0
   397d0:	bne	398f8 <flatcc_json_printer_fmt_float@@Base+0xd78>
   397d4:	b	3990c <flatcc_json_printer_fmt_float@@Base+0xd8c>
   397d8:	add	lr, r4, #1
   397dc:	add	r0, r1, r4
   397e0:	movw	r2, #11621	; 0x2d65
   397e4:	mov	r8, r3
   397e8:	add	r9, r1, lr
   397ec:	strh	r2, [r0]
   397f0:	add	sl, r9, #1
   397f4:	movw	r0, #26215	; 0x6667
   397f8:	mov	r3, sl
   397fc:	movt	r0, #26214	; 0x6666
   39800:	smmul	r6, r8, r0
   39804:	asr	r5, r6, #2
   39808:	add	r7, r5, r6, lsr #31
   3980c:	add	r6, r7, r7, lsl #2
   39810:	sub	r6, r8, r6, lsl #1
   39814:	add	r6, r6, #48	; 0x30
   39818:	strb	r6, [r3], #1
   3981c:	add	r6, r8, #9
   39820:	mov	r8, r7
   39824:	cmp	r6, #18
   39828:	bhi	39800 <flatcc_json_printer_fmt_float@@Base+0xc80>
   3982c:	mov	r5, #0
   39830:	mov	r8, r3
   39834:	strb	r5, [r8], -sl
   39838:	cmp	r8, #2
   3983c:	blt	398c0 <flatcc_json_printer_fmt_float@@Base+0xd40>
   39840:	add	r0, r8, r8, lsr #31
   39844:	bic	r4, r8, #1
   39848:	cmp	r4, #2
   3984c:	asr	r0, r0, #1
   39850:	and	ip, r0, #1
   39854:	beq	398a0 <flatcc_json_printer_fmt_float@@Base+0xd20>
   39858:	sub	r5, ip, r0
   3985c:	sub	r4, r3, #2
   39860:	add	r0, sl, #1
   39864:	mov	r6, #0
   39868:	add	r1, r4, r6
   3986c:	ldrb	r7, [r0, #-1]
   39870:	ldrb	r2, [r1, #1]
   39874:	strb	r2, [r0, #-1]
   39878:	strb	r7, [r1, #1]
   3987c:	ldrb	r1, [r4, r6]
   39880:	ldrb	r2, [r0]
   39884:	strb	r1, [r0]
   39888:	strb	r2, [r4, r6]
   3988c:	sub	r6, r6, #2
   39890:	add	r0, r0, #2
   39894:	cmp	r5, r6
   39898:	bne	39868 <flatcc_json_printer_fmt_float@@Base+0xce8>
   3989c:	rsb	r5, r6, #0
   398a0:	cmp	ip, #0
   398a4:	beq	398c0 <flatcc_json_printer_fmt_float@@Base+0xd40>
   398a8:	mvn	r1, r5
   398ac:	ldrb	r0, [sl, r5]
   398b0:	add	r1, r8, r1
   398b4:	ldrb	r2, [sl, r1]
   398b8:	strb	r2, [sl, r5]
   398bc:	strb	r0, [sl, r1]
   398c0:	ldr	ip, [sp, #44]	; 0x2c
   398c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   398c8:	sub	r0, lr, r9
   398cc:	add	r4, r0, r3
   398d0:	b	3993c <flatcc_json_printer_fmt_float@@Base+0xdbc>
   398d4:	ldr	ip, [sp, #44]	; 0x2c
   398d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   398dc:	vmov.i32	q9, #4	; 0x00000004
   398e0:	sub	r2, r7, r2
   398e4:	vadd.i32	q8, q8, q9
   398e8:	adds	r2, r2, #4
   398ec:	bne	398e4 <flatcc_json_printer_fmt_float@@Base+0xd64>
   398f0:	cmp	r7, #0
   398f4:	beq	3990c <flatcc_json_printer_fmt_float@@Base+0xd8c>
   398f8:	vmov.i32	q9, #1	; 0x00000001
   398fc:	rsb	r2, r7, #0
   39900:	vadd.i32	q8, q8, q9
   39904:	adds	r2, r2, #1
   39908:	bcc	39900 <flatcc_json_printer_fmt_float@@Base+0xd80>
   3990c:	vext.8	q9, q8, q8, #8
   39910:	cmp	r8, r0
   39914:	vadd.i32	q8, q8, q9
   39918:	vdup.32	q9, d16[1]
   3991c:	vadd.i32	q8, q8, q9
   39920:	vmov.32	r4, d16[0]
   39924:	beq	3993c <flatcc_json_printer_fmt_float@@Base+0xdbc>
   39928:	sub	r8, r8, r0
   3992c:	sub	r8, r8, #1
   39930:	add	r4, r4, #1
   39934:	cmp	r8, #0
   39938:	bgt	3992c <flatcc_json_printer_fmt_float@@Base+0xdac>
   3993c:	mov	r0, #0
   39940:	strb	r0, [r1, r4]!
   39944:	sub	r0, r1, ip
   39948:	sub	sp, fp, #28
   3994c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39950:	mov	r4, r0
   39954:	b	3993c <flatcc_json_printer_fmt_float@@Base+0xdbc>
   39958:	mov	r0, #45	; 0x2d
   3995c:	mov	r9, r8
   39960:	rsb	r7, r7, #0
   39964:	strb	r0, [r9], #1
   39968:	movw	r0, #26215	; 0x6667
   3996c:	mov	r3, r9
   39970:	movt	r0, #26214	; 0x6666
   39974:	smmul	r6, r7, r0
   39978:	asr	r5, r6, #2
   3997c:	add	r6, r5, r6, lsr #31
   39980:	add	r5, r6, r6, lsl #2
   39984:	sub	r5, r7, r5, lsl #1
   39988:	add	r7, r7, #9
   3998c:	cmp	r7, #18
   39990:	mov	r7, r6
   39994:	add	r5, r5, #48	; 0x30
   39998:	strb	r5, [r3], #1
   3999c:	bhi	39974 <flatcc_json_printer_fmt_float@@Base+0xdf4>
   399a0:	mov	r5, #0
   399a4:	mov	sl, r3
   399a8:	strb	r5, [sl], -r9
   399ac:	cmp	sl, #2
   399b0:	blt	39a38 <flatcc_json_printer_fmt_float@@Base+0xeb8>
   399b4:	add	r0, sl, sl, lsr #31
   399b8:	bic	r4, sl, #1
   399bc:	cmp	r4, #2
   399c0:	asr	r0, r0, #1
   399c4:	and	ip, r0, #1
   399c8:	beq	39a14 <flatcc_json_printer_fmt_float@@Base+0xe94>
   399cc:	sub	r5, ip, r0
   399d0:	sub	r4, r3, #2
   399d4:	add	r0, r9, #1
   399d8:	mov	r6, #0
   399dc:	add	r1, r4, r6
   399e0:	ldrb	r7, [r0, #-1]
   399e4:	ldrb	r2, [r1, #1]
   399e8:	strb	r2, [r0, #-1]
   399ec:	strb	r7, [r1, #1]
   399f0:	ldrb	r1, [r4, r6]
   399f4:	ldrb	r2, [r0]
   399f8:	strb	r1, [r0]
   399fc:	strb	r2, [r4, r6]
   39a00:	sub	r6, r6, #2
   39a04:	add	r0, r0, #2
   39a08:	cmp	r5, r6
   39a0c:	bne	399dc <flatcc_json_printer_fmt_float@@Base+0xe5c>
   39a10:	rsb	r5, r6, #0
   39a14:	cmp	ip, #0
   39a18:	ldr	ip, [sp, #44]	; 0x2c
   39a1c:	beq	39a38 <flatcc_json_printer_fmt_float@@Base+0xeb8>
   39a20:	mvn	r1, r5
   39a24:	ldrb	r0, [r9, r5]
   39a28:	add	r1, sl, r1
   39a2c:	ldrb	r2, [r9, r1]
   39a30:	strb	r2, [r9, r5]
   39a34:	strb	r0, [r9, r1]
   39a38:	ldr	r1, [fp, #-32]	; 0xffffffe0
   39a3c:	sub	r0, lr, r8
   39a40:	b	398cc <flatcc_json_printer_fmt_float@@Base+0xd4c>
   39a44:	movw	r0, #48140	; 0xbc0c
   39a48:	movw	r1, #48144	; 0xbc10
   39a4c:	movw	r3, #48231	; 0xbc67
   39a50:	mov	r2, #189	; 0xbd
   39a54:	movt	r0, #4
   39a58:	movt	r1, #4
   39a5c:	movt	r3, #4
   39a60:	bl	14f40 <__assert_fail@plt>
   39a64:	movw	r0, #48369	; 0xbcf1
   39a68:	movw	r1, #47371	; 0xb90b
   39a6c:	movw	r3, #48394	; 0xbd0a
   39a70:	mov	r2, #239	; 0xef
   39a74:	movt	r0, #4
   39a78:	movt	r1, #4
   39a7c:	movt	r3, #4
   39a80:	bl	14f40 <__assert_fail@plt>
   39a84:	movw	r0, #47362	; 0xb902
   39a88:	movw	r1, #47371	; 0xb90b
   39a8c:	movw	r3, #47457	; 0xb961
   39a90:	mov	r2, #260	; 0x104
   39a94:	movt	r0, #4
   39a98:	movt	r1, #4
   39a9c:	movt	r3, #4
   39aa0:	bl	14f40 <__assert_fail@plt>

00039aa4 <flatcc_json_printer_fmt_double@@Base>:
   39aa4:	b	38b88 <flatcc_json_printer_fmt_float@@Base+0x8>

00039aa8 <flatcc_json_printer_fmt_bool@@Base>:
   39aa8:	cmp	r1, #0
   39aac:	movwne	r1, #29300	; 0x7274
   39ab0:	movtne	r1, #25973	; 0x6575
   39ab4:	strne	r1, [r0]
   39ab8:	movne	r0, #4
   39abc:	bxne	lr
   39ac0:	mov	r1, #101	; 0x65
   39ac4:	strb	r1, [r0, #4]
   39ac8:	movw	r1, #24934	; 0x6166
   39acc:	movt	r1, #29548	; 0x736c
   39ad0:	str	r1, [r0]
   39ad4:	mov	r0, #5
   39ad8:	bx	lr

00039adc <flatcc_json_printer_string@@Base>:
   39adc:	b	39ae0 <flatcc_json_printer_string@@Base+0x4>
   39ae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39ae4:	add	fp, sp, #28
   39ae8:	sub	sp, sp, #12
   39aec:	mov	r5, r0
   39af0:	mov	r4, r0
   39af4:	mov	r6, r1
   39af8:	mov	r3, r2
   39afc:	ldr	r0, [r5, #20]!
   39b00:	str	r5, [sp, #4]
   39b04:	add	r1, r0, #1
   39b08:	str	r1, [r5]
   39b0c:	mov	r1, #34	; 0x22
   39b10:	strb	r1, [r0]
   39b14:	ldrb	sl, [r6]
   39b18:	mov	r8, r6
   39b1c:	cmp	sl, #32
   39b20:	bcc	39bd8 <flatcc_json_printer_string@@Base+0xfc>
   39b24:	b	39bbc <flatcc_json_printer_string@@Base+0xe0>
   39b28:	ldr	r2, [r5]
   39b2c:	mov	r7, #48	; 0x30
   39b30:	cmp	r1, #160	; 0xa0
   39b34:	add	r3, r2, #1
   39b38:	str	r3, [r5]
   39b3c:	mov	r3, #117	; 0x75
   39b40:	strb	r3, [r2]
   39b44:	ldr	r2, [r5]
   39b48:	add	r3, r2, #1
   39b4c:	str	r3, [r5]
   39b50:	strb	r7, [r2]
   39b54:	ldr	r2, [r5]
   39b58:	add	r3, r2, #1
   39b5c:	str	r3, [r5]
   39b60:	strb	r7, [r2]
   39b64:	ldr	r2, [r5]
   39b68:	add	r3, r2, #1
   39b6c:	str	r3, [r5]
   39b70:	mov	r3, #87	; 0x57
   39b74:	movwcc	r3, #48	; 0x30
   39b78:	add	r1, r3, r1, lsr #4
   39b7c:	mov	r3, #87	; 0x57
   39b80:	strb	r1, [r2]
   39b84:	ldr	r1, [r5]
   39b88:	add	r2, r1, #1
   39b8c:	str	r2, [r5]
   39b90:	and	r2, sl, #15
   39b94:	cmp	r2, #10
   39b98:	movwcc	r3, #48	; 0x30
   39b9c:	add	r2, r3, r2
   39ba0:	strb	r2, [r1]
   39ba4:	sub	r3, r0, #1
   39ba8:	add	r6, r8, #1
   39bac:	ldrb	sl, [r6]
   39bb0:	mov	r8, r6
   39bb4:	cmp	sl, #32
   39bb8:	bcc	39bd8 <flatcc_json_printer_string@@Base+0xfc>
   39bbc:	uxtb	r0, sl
   39bc0:	cmp	r0, #34	; 0x22
   39bc4:	cmpne	r0, #92	; 0x5c
   39bc8:	beq	39bd8 <flatcc_json_printer_string@@Base+0xfc>
   39bcc:	ldrb	sl, [r8, #1]!
   39bd0:	cmp	sl, #31
   39bd4:	bhi	39bbc <flatcc_json_printer_string@@Base+0xe0>
   39bd8:	ldr	r0, [r4, #20]
   39bdc:	ldr	r1, [r4, #16]
   39be0:	sub	r9, r8, r6
   39be4:	add	r2, r0, r9
   39be8:	cmp	r2, r1
   39bec:	bcs	39c0c <flatcc_json_printer_string@@Base+0x130>
   39bf0:	mov	r1, r6
   39bf4:	mov	r2, r9
   39bf8:	mov	r6, r3
   39bfc:	bl	14e5c <memcpy@plt>
   39c00:	mov	r2, r6
   39c04:	mov	r7, r9
   39c08:	b	39c98 <flatcc_json_printer_string@@Base+0x1bc>
   39c0c:	cmp	r0, r1
   39c10:	str	r3, [sp, #8]
   39c14:	bcc	39c30 <flatcc_json_printer_string@@Base+0x154>
   39c18:	ldr	r2, [r4, #44]	; 0x2c
   39c1c:	mov	r0, r4
   39c20:	mov	r1, #0
   39c24:	blx	r2
   39c28:	ldr	r1, [r4, #16]
   39c2c:	ldr	r0, [r4, #20]
   39c30:	sub	r5, r1, r0
   39c34:	mov	r7, r9
   39c38:	cmp	r5, r9
   39c3c:	bcs	39c84 <flatcc_json_printer_string@@Base+0x1a8>
   39c40:	mov	r1, r6
   39c44:	mov	r2, r5
   39c48:	bl	14e5c <memcpy@plt>
   39c4c:	ldr	r0, [r4, #20]
   39c50:	ldr	r2, [r4, #44]	; 0x2c
   39c54:	mov	r1, #0
   39c58:	add	r0, r0, r5
   39c5c:	str	r0, [r4, #20]
   39c60:	mov	r0, r4
   39c64:	blx	r2
   39c68:	ldr	r1, [r4, #16]
   39c6c:	ldr	r0, [r4, #20]
   39c70:	sub	r7, r7, r5
   39c74:	add	r6, r6, r5
   39c78:	sub	r5, r1, r0
   39c7c:	cmp	r7, r5
   39c80:	bhi	39c40 <flatcc_json_printer_string@@Base+0x164>
   39c84:	ldr	r5, [sp, #4]
   39c88:	mov	r1, r6
   39c8c:	mov	r2, r7
   39c90:	bl	14e5c <memcpy@plt>
   39c94:	ldr	r2, [sp, #8]
   39c98:	ldr	r0, [r5]
   39c9c:	add	r1, r0, r7
   39ca0:	add	r0, r1, #1
   39ca4:	str	r0, [r5]
   39ca8:	subs	r0, r2, r9
   39cac:	beq	39dd4 <flatcc_json_printer_string@@Base+0x2f8>
   39cb0:	mov	r2, #92	; 0x5c
   39cb4:	strb	r2, [r1]
   39cb8:	mvn	r1, #7
   39cbc:	uxtab	r2, r1, sl
   39cc0:	uxtb	r1, sl
   39cc4:	cmp	r2, #26
   39cc8:	bhi	39d54 <flatcc_json_printer_string@@Base+0x278>
   39ccc:	add	r3, pc, #0
   39cd0:	ldr	pc, [r3, r2, lsl #2]
   39cd4:	andeq	r9, r3, r0, asr #26
   39cd8:	andeq	r9, r3, r0, ror sp
   39cdc:	andeq	r9, r3, r4, lsl #27
   39ce0:	andeq	r9, r3, r8, lsr #22
   39ce4:	muleq	r3, r8, sp
   39ce8:	andeq	r9, r3, ip, lsr #27
   39cec:	andeq	r9, r3, r8, lsr #22
   39cf0:	andeq	r9, r3, r8, lsr #22
   39cf4:	andeq	r9, r3, r8, lsr #22
   39cf8:	andeq	r9, r3, r8, lsr #22
   39cfc:	andeq	r9, r3, r8, lsr #22
   39d00:	andeq	r9, r3, r8, lsr #22
   39d04:	andeq	r9, r3, r8, lsr #22
   39d08:	andeq	r9, r3, r8, lsr #22
   39d0c:	andeq	r9, r3, r8, lsr #22
   39d10:	andeq	r9, r3, r8, lsr #22
   39d14:	andeq	r9, r3, r8, lsr #22
   39d18:	andeq	r9, r3, r8, lsr #22
   39d1c:	andeq	r9, r3, r8, lsr #22
   39d20:	andeq	r9, r3, r8, lsr #22
   39d24:	andeq	r9, r3, r8, lsr #22
   39d28:	andeq	r9, r3, r8, lsr #22
   39d2c:	andeq	r9, r3, r8, lsr #22
   39d30:	andeq	r9, r3, r8, lsr #22
   39d34:	andeq	r9, r3, r8, lsr #22
   39d38:	andeq	r9, r3, r8, lsr #22
   39d3c:	andeq	r9, r3, r0, asr #27
   39d40:	ldr	r1, [r5]
   39d44:	add	r2, r1, #1
   39d48:	str	r2, [r5]
   39d4c:	mov	r2, #98	; 0x62
   39d50:	b	39ba0 <flatcc_json_printer_string@@Base+0xc4>
   39d54:	cmp	r1, #92	; 0x5c
   39d58:	bne	39b28 <flatcc_json_printer_string@@Base+0x4c>
   39d5c:	ldr	r1, [r5]
   39d60:	add	r2, r1, #1
   39d64:	str	r2, [r5]
   39d68:	mov	r2, #92	; 0x5c
   39d6c:	b	39ba0 <flatcc_json_printer_string@@Base+0xc4>
   39d70:	ldr	r1, [r5]
   39d74:	add	r2, r1, #1
   39d78:	str	r2, [r5]
   39d7c:	mov	r2, #116	; 0x74
   39d80:	b	39ba0 <flatcc_json_printer_string@@Base+0xc4>
   39d84:	ldr	r1, [r5]
   39d88:	add	r2, r1, #1
   39d8c:	str	r2, [r5]
   39d90:	mov	r2, #110	; 0x6e
   39d94:	b	39ba0 <flatcc_json_printer_string@@Base+0xc4>
   39d98:	ldr	r1, [r5]
   39d9c:	add	r2, r1, #1
   39da0:	str	r2, [r5]
   39da4:	mov	r2, #102	; 0x66
   39da8:	b	39ba0 <flatcc_json_printer_string@@Base+0xc4>
   39dac:	ldr	r1, [r5]
   39db0:	add	r2, r1, #1
   39db4:	str	r2, [r5]
   39db8:	mov	r2, #114	; 0x72
   39dbc:	b	39ba0 <flatcc_json_printer_string@@Base+0xc4>
   39dc0:	ldr	r1, [r5]
   39dc4:	add	r2, r1, #1
   39dc8:	str	r2, [r5]
   39dcc:	mov	r2, #34	; 0x22
   39dd0:	b	39ba0 <flatcc_json_printer_string@@Base+0xc4>
   39dd4:	mov	r0, #34	; 0x22
   39dd8:	strb	r0, [r1]
   39ddc:	sub	sp, fp, #28
   39de0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00039de4 <flatcc_json_printer_write@@Base>:
   39de4:	push	{r4, r5, r6, r7, fp, lr}
   39de8:	add	fp, sp, #16
   39dec:	mov	r6, r1
   39df0:	mov	r5, r0
   39df4:	ldr	r1, [r0, #16]
   39df8:	ldr	r0, [r0, #20]
   39dfc:	mov	r4, r2
   39e00:	add	r2, r0, r2
   39e04:	cmp	r2, r1
   39e08:	bcc	39e7c <flatcc_json_printer_write@@Base+0x98>
   39e0c:	cmp	r0, r1
   39e10:	bcc	39e2c <flatcc_json_printer_write@@Base+0x48>
   39e14:	ldr	r2, [r5, #44]	; 0x2c
   39e18:	mov	r0, r5
   39e1c:	mov	r1, #0
   39e20:	blx	r2
   39e24:	ldr	r1, [r5, #16]
   39e28:	ldr	r0, [r5, #20]
   39e2c:	sub	r7, r1, r0
   39e30:	cmp	r7, r4
   39e34:	bcs	39e7c <flatcc_json_printer_write@@Base+0x98>
   39e38:	mov	r1, r6
   39e3c:	mov	r2, r7
   39e40:	bl	14e5c <memcpy@plt>
   39e44:	ldr	r0, [r5, #20]
   39e48:	ldr	r2, [r5, #44]	; 0x2c
   39e4c:	mov	r1, #0
   39e50:	add	r0, r0, r7
   39e54:	str	r0, [r5, #20]
   39e58:	mov	r0, r5
   39e5c:	blx	r2
   39e60:	ldr	r1, [r5, #16]
   39e64:	ldr	r0, [r5, #20]
   39e68:	sub	r4, r4, r7
   39e6c:	add	r6, r6, r7
   39e70:	sub	r7, r1, r0
   39e74:	cmp	r4, r7
   39e78:	bhi	39e38 <flatcc_json_printer_write@@Base+0x54>
   39e7c:	mov	r1, r6
   39e80:	mov	r2, r4
   39e84:	bl	14e5c <memcpy@plt>
   39e88:	ldr	r0, [r5, #20]
   39e8c:	add	r0, r0, r4
   39e90:	str	r0, [r5, #20]
   39e94:	pop	{r4, r5, r6, r7, fp, pc}

00039e98 <flatcc_json_printer_nl@@Base>:
   39e98:	ldr	r1, [r0, #20]
   39e9c:	add	r2, r1, #1
   39ea0:	str	r2, [r0, #20]
   39ea4:	mov	r2, #10
   39ea8:	strb	r2, [r1]
   39eac:	ldr	r1, [r0, #16]
   39eb0:	ldr	r2, [r0, #20]
   39eb4:	cmp	r2, r1
   39eb8:	bxcc	lr
   39ebc:	ldr	r2, [r0, #44]	; 0x2c
   39ec0:	mov	r1, #0
   39ec4:	bx	r2

00039ec8 <flatcc_json_printer_char@@Base>:
   39ec8:	ldr	r2, [r0, #20]
   39ecc:	add	r3, r2, #1
   39ed0:	str	r3, [r0, #20]
   39ed4:	strb	r1, [r2]
   39ed8:	bx	lr

00039edc <flatcc_json_printer_indent@@Base>:
   39edc:	push	{r4, r5, r6, sl, fp, lr}
   39ee0:	add	fp, sp, #16
   39ee4:	mov	r4, r0
   39ee8:	ldr	r1, [r0, #16]
   39eec:	ldr	r0, [r0, #20]
   39ef0:	ldrb	r2, [r4, #25]
   39ef4:	ldr	r3, [r4, #32]
   39ef8:	mla	r6, r3, r2, r0
   39efc:	mul	r5, r3, r2
   39f00:	cmp	r6, r1
   39f04:	bls	39f74 <flatcc_json_printer_indent@@Base+0x98>
   39f08:	cmp	r0, r1
   39f0c:	bcc	39f28 <flatcc_json_printer_indent@@Base+0x4c>
   39f10:	ldr	r2, [r4, #44]	; 0x2c
   39f14:	mov	r0, r4
   39f18:	mov	r1, #0
   39f1c:	blx	r2
   39f20:	ldr	r1, [r4, #16]
   39f24:	ldr	r0, [r4, #20]
   39f28:	sub	r6, r1, r0
   39f2c:	cmp	r6, r5
   39f30:	bcs	39f74 <flatcc_json_printer_indent@@Base+0x98>
   39f34:	mov	r1, #32
   39f38:	mov	r2, r6
   39f3c:	bl	14eec <memset@plt>
   39f40:	ldr	r0, [r4, #20]
   39f44:	ldr	r2, [r4, #44]	; 0x2c
   39f48:	mov	r1, #0
   39f4c:	add	r0, r0, r6
   39f50:	str	r0, [r4, #20]
   39f54:	mov	r0, r4
   39f58:	blx	r2
   39f5c:	ldr	r1, [r4, #16]
   39f60:	ldr	r0, [r4, #20]
   39f64:	sub	r5, r5, r6
   39f68:	sub	r6, r1, r0
   39f6c:	cmp	r5, r6
   39f70:	bhi	39f34 <flatcc_json_printer_indent@@Base+0x58>
   39f74:	mov	r1, #32
   39f78:	mov	r2, r5
   39f7c:	bl	14eec <memset@plt>
   39f80:	ldr	r0, [r4, #20]
   39f84:	add	r0, r0, r5
   39f88:	str	r0, [r4, #20]
   39f8c:	pop	{r4, r5, r6, sl, fp, pc}

00039f90 <flatcc_json_printer_add_level@@Base>:
   39f90:	ldr	r2, [r0, #32]
   39f94:	add	r1, r2, r1
   39f98:	str	r1, [r0, #32]
   39f9c:	bx	lr

00039fa0 <flatcc_json_printer_get_level@@Base>:
   39fa0:	ldr	r0, [r0, #32]
   39fa4:	bx	lr

00039fa8 <flatcc_json_printer_uint8@@Base>:
   39fa8:	push	{fp, lr}
   39fac:	mov	fp, sp
   39fb0:	ldr	lr, [r0, #20]
   39fb4:	cmp	r1, #100	; 0x64
   39fb8:	bcc	3a014 <flatcc_json_printer_uint8@@Base+0x6c>
   39fbc:	mov	r3, #0
   39fc0:	strb	r3, [lr, #3]
   39fc4:	movw	r3, #34079	; 0x851f
   39fc8:	movt	r3, #20971	; 0x51eb
   39fcc:	umull	r3, ip, r1, r3
   39fd0:	mov	r3, #48	; 0x30
   39fd4:	orr	r3, r3, ip, lsr #5
   39fd8:	lsr	ip, ip, #5
   39fdc:	strb	r3, [lr]
   39fe0:	mov	r3, #100	; 0x64
   39fe4:	mls	r1, ip, r3, r1
   39fe8:	movw	r3, #48464	; 0xbd50
   39fec:	movt	r3, #4
   39ff0:	uxtb	r1, r1
   39ff4:	add	r1, r3, r1, lsl #1
   39ff8:	ldrh	r1, [r1]
   39ffc:	strh	r1, [lr, #1]
   3a000:	mov	r1, #3
   3a004:	ldr	r2, [r0, #20]
   3a008:	add	r1, r2, r1
   3a00c:	str	r1, [r0, #20]
   3a010:	pop	{fp, pc}
   3a014:	cmp	r1, #10
   3a018:	bcc	3a064 <flatcc_json_printer_uint8@@Base+0xbc>
   3a01c:	mov	r3, #0
   3a020:	strb	r3, [lr, #2]
   3a024:	movw	r3, #34079	; 0x851f
   3a028:	movt	r3, #20971	; 0x51eb
   3a02c:	umull	r3, r2, r1, r3
   3a030:	mov	r3, #100	; 0x64
   3a034:	lsr	r2, r2, #5
   3a038:	mls	r1, r2, r3, r1
   3a03c:	movw	r2, #48464	; 0xbd50
   3a040:	movt	r2, #4
   3a044:	add	r1, r2, r1, lsl #1
   3a048:	ldrh	r1, [r1]
   3a04c:	strh	r1, [lr]
   3a050:	mov	r1, #2
   3a054:	ldr	r2, [r0, #20]
   3a058:	add	r1, r2, r1
   3a05c:	str	r1, [r0, #20]
   3a060:	pop	{fp, pc}
   3a064:	mov	r2, #0
   3a068:	add	r1, r1, #48	; 0x30
   3a06c:	strb	r2, [lr, #1]
   3a070:	strb	r1, [lr]
   3a074:	mov	r1, #1
   3a078:	ldr	r2, [r0, #20]
   3a07c:	add	r1, r2, r1
   3a080:	str	r1, [r0, #20]
   3a084:	pop	{fp, pc}

0003a088 <flatcc_json_printer_uint16@@Base>:
   3a088:	push	{r4, sl, fp, lr}
   3a08c:	add	fp, sp, #8
   3a090:	mov	r2, r1
   3a094:	ldr	r1, [r0, #20]
   3a098:	mov	r4, r0
   3a09c:	mov	r0, r2
   3a0a0:	bl	3a0b4 <flatcc_json_printer_uint16@@Base+0x2c>
   3a0a4:	ldr	r1, [r4, #20]
   3a0a8:	add	r0, r1, r0
   3a0ac:	str	r0, [r4, #20]
   3a0b0:	pop	{r4, sl, fp, pc}
   3a0b4:	push	{fp, lr}
   3a0b8:	mov	fp, sp
   3a0bc:	mov	lr, r0
   3a0c0:	cmp	r0, #1000	; 0x3e8
   3a0c4:	bcc	3a12c <flatcc_json_printer_uint16@@Base+0xa4>
   3a0c8:	movw	r3, #9999	; 0x270f
   3a0cc:	mov	r0, #4
   3a0d0:	cmp	lr, r3
   3a0d4:	movwhi	r0, #5
   3a0d8:	mov	r3, #0
   3a0dc:	tst	r0, #1
   3a0e0:	strb	r3, [r1, r0]!
   3a0e4:	bne	3a160 <flatcc_json_printer_uint16@@Base+0xd8>
   3a0e8:	cmp	r0, #2
   3a0ec:	beq	3a1f0 <flatcc_json_printer_uint16@@Base+0x168>
   3a0f0:	cmp	r0, #4
   3a0f4:	popne	{fp, pc}
   3a0f8:	movw	r2, #34079	; 0x851f
   3a0fc:	movt	r2, #20971	; 0x51eb
   3a100:	umull	r2, r3, lr, r2
   3a104:	mov	r2, #100	; 0x64
   3a108:	lsr	r3, r3, #5
   3a10c:	mls	r2, r3, r2, lr
   3a110:	uxth	ip, r2
   3a114:	movw	r2, #48464	; 0xbd50
   3a118:	movt	r2, #4
   3a11c:	add	r2, r2, ip, lsl #1
   3a120:	ldrh	r2, [r2]
   3a124:	strh	r2, [r1, #-2]!
   3a128:	b	3a1f4 <flatcc_json_printer_uint16@@Base+0x16c>
   3a12c:	cmp	lr, #100	; 0x64
   3a130:	bcc	3a144 <flatcc_json_printer_uint16@@Base+0xbc>
   3a134:	mov	r0, #0
   3a138:	strb	r0, [r1, #3]!
   3a13c:	mov	r0, #3
   3a140:	b	3a1b0 <flatcc_json_printer_uint16@@Base+0x128>
   3a144:	cmp	lr, #9
   3a148:	mov	r0, #1
   3a14c:	movwhi	r0, #2
   3a150:	mov	r3, #0
   3a154:	tst	r0, #1
   3a158:	strb	r3, [r1, r0]!
   3a15c:	beq	3a0e8 <flatcc_json_printer_uint16@@Base+0x60>
   3a160:	cmp	r0, #1
   3a164:	beq	3a228 <flatcc_json_printer_uint16@@Base+0x1a0>
   3a168:	cmp	r0, #3
   3a16c:	beq	3a1b0 <flatcc_json_printer_uint16@@Base+0x128>
   3a170:	cmp	r0, #5
   3a174:	bne	3a224 <flatcc_json_printer_uint16@@Base+0x19c>
   3a178:	movw	r0, #34079	; 0x851f
   3a17c:	movw	r2, #48464	; 0xbd50
   3a180:	movt	r0, #20971	; 0x51eb
   3a184:	movt	r2, #4
   3a188:	umull	r0, r3, lr, r0
   3a18c:	mov	r0, #100	; 0x64
   3a190:	lsr	r3, r3, #5
   3a194:	mls	r0, r3, r0, lr
   3a198:	mov	lr, r3
   3a19c:	uxth	r0, r0
   3a1a0:	add	r0, r2, r0, lsl #1
   3a1a4:	ldrh	r0, [r0]
   3a1a8:	strh	r0, [r1, #-2]!
   3a1ac:	mov	r0, #5
   3a1b0:	movw	r3, #34079	; 0x851f
   3a1b4:	uxth	ip, lr
   3a1b8:	movt	r3, #20971	; 0x51eb
   3a1bc:	umull	r3, r2, ip, r3
   3a1c0:	lsr	r3, r2, #5
   3a1c4:	mov	r2, #100	; 0x64
   3a1c8:	mls	r2, r3, r2, lr
   3a1cc:	uxth	ip, r2
   3a1d0:	movw	r2, #48464	; 0xbd50
   3a1d4:	movt	r2, #4
   3a1d8:	add	r2, r2, ip, lsl #1
   3a1dc:	ldrh	r2, [r2]
   3a1e0:	strh	r2, [r1, #-2]!
   3a1e4:	add	r2, r3, #48	; 0x30
   3a1e8:	strb	r2, [r1, #-1]
   3a1ec:	pop	{fp, pc}
   3a1f0:	mov	r3, lr
   3a1f4:	uxth	ip, r3
   3a1f8:	movw	r3, #34079	; 0x851f
   3a1fc:	movt	r3, #20971	; 0x51eb
   3a200:	umull	r3, r2, ip, r3
   3a204:	mov	r3, #100	; 0x64
   3a208:	lsr	r2, r2, #5
   3a20c:	mls	r2, r2, r3, ip
   3a210:	movw	r3, #48464	; 0xbd50
   3a214:	movt	r3, #4
   3a218:	add	r2, r3, r2, lsl #1
   3a21c:	ldrh	r2, [r2]
   3a220:	strh	r2, [r1, #-2]
   3a224:	pop	{fp, pc}
   3a228:	mov	r3, lr
   3a22c:	add	r2, r3, #48	; 0x30
   3a230:	strb	r2, [r1, #-1]
   3a234:	pop	{fp, pc}

0003a238 <flatcc_json_printer_uint32@@Base>:
   3a238:	push	{r4, sl, fp, lr}
   3a23c:	add	fp, sp, #8
   3a240:	mov	r2, r1
   3a244:	ldr	r1, [r0, #20]
   3a248:	mov	r4, r0
   3a24c:	mov	r0, r2
   3a250:	bl	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3a254:	ldr	r1, [r4, #20]
   3a258:	add	r0, r1, r0
   3a25c:	str	r0, [r4, #20]
   3a260:	pop	{r4, sl, fp, pc}
   3a264:	push	{fp, lr}
   3a268:	mov	fp, sp
   3a26c:	mov	lr, r0
   3a270:	movw	r0, #10000	; 0x2710
   3a274:	cmp	lr, r0
   3a278:	bcc	3a2dc <flatcc_json_printer_uint32@@Base+0xa4>
   3a27c:	movw	r0, #38528	; 0x9680
   3a280:	movt	r0, #152	; 0x98
   3a284:	cmp	lr, r0
   3a288:	bcc	3a374 <flatcc_json_printer_uint32@@Base+0x13c>
   3a28c:	movw	r0, #51712	; 0xca00
   3a290:	movt	r0, #15258	; 0x3b9a
   3a294:	cmp	lr, r0
   3a298:	bcc	3a538 <flatcc_json_printer_uint32@@Base+0x300>
   3a29c:	movw	r0, #34079	; 0x851f
   3a2a0:	movw	r2, #48464	; 0xbd50
   3a2a4:	movt	r0, #20971	; 0x51eb
   3a2a8:	movt	r2, #4
   3a2ac:	umull	r0, r3, lr, r0
   3a2b0:	mov	r0, #100	; 0x64
   3a2b4:	lsr	r3, r3, #5
   3a2b8:	mls	r0, r3, r0, lr
   3a2bc:	mov	lr, r3
   3a2c0:	add	r0, r2, r0, lsl #1
   3a2c4:	ldrh	r0, [r0]
   3a2c8:	strh	r0, [r1, #8]!
   3a2cc:	mov	r0, #0
   3a2d0:	strb	r0, [r1, #2]
   3a2d4:	mov	r0, #10
   3a2d8:	b	3a478 <flatcc_json_printer_uint32@@Base+0x240>
   3a2dc:	cmp	lr, #100	; 0x64
   3a2e0:	bcc	3a42c <flatcc_json_printer_uint32@@Base+0x1f4>
   3a2e4:	lsr	r3, lr, #3
   3a2e8:	mov	r0, #3
   3a2ec:	cmp	r3, #124	; 0x7c
   3a2f0:	movwhi	r0, #4
   3a2f4:	mov	r3, #0
   3a2f8:	tst	r0, #1
   3a2fc:	strb	r3, [r1, r0]!
   3a300:	beq	3a448 <flatcc_json_printer_uint32@@Base+0x210>
   3a304:	sub	ip, r0, #1
   3a308:	cmp	ip, #8
   3a30c:	bhi	3a428 <flatcc_json_printer_uint32@@Base+0x1f0>
   3a310:	add	r3, pc, #0
   3a314:	ldr	pc, [r3, ip, lsl #2]
   3a318:	andeq	sl, r3, r0, lsr #8
   3a31c:	andeq	sl, r3, r8, lsr #8
   3a320:	strdeq	sl, [r3], -r0
   3a324:	andeq	sl, r3, r8, lsr #8
   3a328:	andeq	sl, r3, r0, asr #7
   3a32c:	andeq	sl, r3, r8, lsr #8
   3a330:	muleq	r3, r0, r3
   3a334:	andeq	sl, r3, r8, lsr #8
   3a338:	andeq	sl, r3, ip, lsr r3
   3a33c:	movw	r0, #34079	; 0x851f
   3a340:	movw	r2, #48464	; 0xbd50
   3a344:	movt	r0, #20971	; 0x51eb
   3a348:	movt	r2, #4
   3a34c:	umull	r0, r3, lr, r0
   3a350:	mov	r0, #100	; 0x64
   3a354:	lsr	r3, r3, #5
   3a358:	mls	r0, r3, r0, lr
   3a35c:	mov	lr, r3
   3a360:	add	r0, r2, r0, lsl #1
   3a364:	ldrh	r0, [r0]
   3a368:	strh	r0, [r1, #-2]!
   3a36c:	mov	r0, #9
   3a370:	b	3a390 <flatcc_json_printer_uint32@@Base+0x158>
   3a374:	movw	r0, #16960	; 0x4240
   3a378:	movt	r0, #15
   3a37c:	cmp	lr, r0
   3a380:	bcc	3a560 <flatcc_json_printer_uint32@@Base+0x328>
   3a384:	mov	r0, #0
   3a388:	strb	r0, [r1, #7]!
   3a38c:	mov	r0, #7
   3a390:	movw	r3, #34079	; 0x851f
   3a394:	movt	r3, #20971	; 0x51eb
   3a398:	umull	r3, r2, lr, r3
   3a39c:	mov	r3, #100	; 0x64
   3a3a0:	lsr	r2, r2, #5
   3a3a4:	mls	ip, r2, r3, lr
   3a3a8:	movw	r3, #48464	; 0xbd50
   3a3ac:	mov	lr, r2
   3a3b0:	movt	r3, #4
   3a3b4:	add	r3, r3, ip, lsl #1
   3a3b8:	ldrh	r3, [r3]
   3a3bc:	strh	r3, [r1, #-2]!
   3a3c0:	movw	r2, #34079	; 0x851f
   3a3c4:	movt	r2, #20971	; 0x51eb
   3a3c8:	umull	r2, r3, lr, r2
   3a3cc:	lsr	r2, r3, #5
   3a3d0:	mov	r3, #100	; 0x64
   3a3d4:	mls	ip, r2, r3, lr
   3a3d8:	movw	r3, #48464	; 0xbd50
   3a3dc:	mov	lr, r2
   3a3e0:	movt	r3, #4
   3a3e4:	add	r3, r3, ip, lsl #1
   3a3e8:	ldrh	r3, [r3]
   3a3ec:	strh	r3, [r1, #-2]!
   3a3f0:	movw	r2, #34079	; 0x851f
   3a3f4:	movt	r2, #20971	; 0x51eb
   3a3f8:	umull	r2, r3, lr, r2
   3a3fc:	lsr	r2, r3, #5
   3a400:	mov	r3, #100	; 0x64
   3a404:	mls	ip, r2, r3, lr
   3a408:	movw	r3, #48464	; 0xbd50
   3a40c:	mov	lr, r2
   3a410:	movt	r3, #4
   3a414:	add	r3, r3, ip, lsl #1
   3a418:	ldrh	r3, [r3]
   3a41c:	strh	r3, [r1, #-2]!
   3a420:	add	r2, lr, #48	; 0x30
   3a424:	strb	r2, [r1, #-1]
   3a428:	pop	{fp, pc}
   3a42c:	cmp	lr, #9
   3a430:	mov	r0, #1
   3a434:	movwhi	r0, #2
   3a438:	mov	r3, #0
   3a43c:	tst	r0, #1
   3a440:	strb	r3, [r1, r0]!
   3a444:	bne	3a304 <flatcc_json_printer_uint32@@Base+0xcc>
   3a448:	sub	r3, r0, #2
   3a44c:	cmp	r3, #6
   3a450:	bhi	3a428 <flatcc_json_printer_uint32@@Base+0x1f0>
   3a454:	add	r2, pc, #0
   3a458:	ldr	pc, [r2, r3, lsl #2]
   3a45c:	andeq	sl, r3, r8, lsl #10
   3a460:	andeq	sl, r3, r8, lsr #8
   3a464:	ldrdeq	sl, [r3], -r8
   3a468:	andeq	sl, r3, r8, lsr #8
   3a46c:	andeq	sl, r3, r8, lsr #9
   3a470:	andeq	sl, r3, r8, lsr #8
   3a474:	andeq	sl, r3, r8, ror r4
   3a478:	movw	r2, #34079	; 0x851f
   3a47c:	movt	r2, #20971	; 0x51eb
   3a480:	umull	r2, r3, lr, r2
   3a484:	lsr	r2, r3, #5
   3a488:	mov	r3, #100	; 0x64
   3a48c:	mls	ip, r2, r3, lr
   3a490:	movw	r3, #48464	; 0xbd50
   3a494:	mov	lr, r2
   3a498:	movt	r3, #4
   3a49c:	add	r3, r3, ip, lsl #1
   3a4a0:	ldrh	r3, [r3]
   3a4a4:	strh	r3, [r1, #-2]!
   3a4a8:	movw	r2, #34079	; 0x851f
   3a4ac:	movt	r2, #20971	; 0x51eb
   3a4b0:	umull	r2, r3, lr, r2
   3a4b4:	lsr	r2, r3, #5
   3a4b8:	mov	r3, #100	; 0x64
   3a4bc:	mls	ip, r2, r3, lr
   3a4c0:	movw	r3, #48464	; 0xbd50
   3a4c4:	mov	lr, r2
   3a4c8:	movt	r3, #4
   3a4cc:	add	r3, r3, ip, lsl #1
   3a4d0:	ldrh	r3, [r3]
   3a4d4:	strh	r3, [r1, #-2]!
   3a4d8:	movw	r2, #34079	; 0x851f
   3a4dc:	movt	r2, #20971	; 0x51eb
   3a4e0:	umull	r2, r3, lr, r2
   3a4e4:	lsr	r2, r3, #5
   3a4e8:	mov	r3, #100	; 0x64
   3a4ec:	mls	ip, r2, r3, lr
   3a4f0:	movw	r3, #48464	; 0xbd50
   3a4f4:	mov	lr, r2
   3a4f8:	movt	r3, #4
   3a4fc:	add	r3, r3, ip, lsl #1
   3a500:	ldrh	r3, [r3]
   3a504:	strh	r3, [r1, #-2]!
   3a508:	movw	r2, #34079	; 0x851f
   3a50c:	movt	r2, #20971	; 0x51eb
   3a510:	umull	r2, r3, lr, r2
   3a514:	lsr	r2, r3, #5
   3a518:	mov	r3, #100	; 0x64
   3a51c:	mls	r2, r2, r3, lr
   3a520:	movw	r3, #48464	; 0xbd50
   3a524:	movt	r3, #4
   3a528:	add	r2, r3, r2, lsl #1
   3a52c:	ldrh	r2, [r2]
   3a530:	strh	r2, [r1, #-2]
   3a534:	pop	{fp, pc}
   3a538:	movw	r3, #57599	; 0xe0ff
   3a53c:	mov	r0, #8
   3a540:	movt	r3, #1525	; 0x5f5
   3a544:	cmp	lr, r3
   3a548:	movwhi	r0, #9
   3a54c:	mov	r3, #0
   3a550:	tst	r0, #1
   3a554:	strb	r3, [r1, r0]!
   3a558:	bne	3a304 <flatcc_json_printer_uint32@@Base+0xcc>
   3a55c:	b	3a448 <flatcc_json_printer_uint32@@Base+0x210>
   3a560:	movw	r3, #34463	; 0x869f
   3a564:	mov	r0, #5
   3a568:	movt	r3, #1
   3a56c:	cmp	lr, r3
   3a570:	movwhi	r0, #6
   3a574:	mov	r3, #0
   3a578:	tst	r0, #1
   3a57c:	strb	r3, [r1, r0]!
   3a580:	bne	3a304 <flatcc_json_printer_uint32@@Base+0xcc>
   3a584:	b	3a448 <flatcc_json_printer_uint32@@Base+0x210>

0003a588 <flatcc_json_printer_uint64@@Base>:
   3a588:	push	{r4, sl, fp, lr}
   3a58c:	add	fp, sp, #8
   3a590:	mov	r1, r3
   3a594:	mov	r3, r2
   3a598:	ldr	r2, [r0, #20]
   3a59c:	mov	r4, r0
   3a5a0:	mov	r0, r3
   3a5a4:	bl	3a5b8 <flatcc_json_printer_uint64@@Base+0x30>
   3a5a8:	ldr	r1, [r4, #20]
   3a5ac:	add	r0, r1, r0
   3a5b0:	str	r0, [r4, #20]
   3a5b4:	pop	{r4, sl, fp, pc}
   3a5b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a5bc:	add	fp, sp, #28
   3a5c0:	sub	sp, sp, #4
   3a5c4:	mov	r7, r0
   3a5c8:	movw	r0, #51711	; 0xc9ff
   3a5cc:	mov	r4, r2
   3a5d0:	movt	r0, #15258	; 0x3b9a
   3a5d4:	subs	r0, r0, r7
   3a5d8:	rscs	r0, r1, #0
   3a5dc:	bcc	3a5f4 <flatcc_json_printer_uint64@@Base+0x6c>
   3a5e0:	mov	r0, r7
   3a5e4:	mov	r1, r4
   3a5e8:	sub	sp, fp, #28
   3a5ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a5f0:	b	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3a5f4:	mov	r6, r1
   3a5f8:	movw	r1, #40960	; 0xa000
   3a5fc:	movw	r9, #48464	; 0xbd50
   3a600:	movw	r0, #2328	; 0x918
   3a604:	movt	r1, #20082	; 0x4e72
   3a608:	movt	r9, #4
   3a60c:	subs	r1, r7, r1
   3a610:	sbcs	r0, r6, r0
   3a614:	bcc	3a684 <flatcc_json_printer_uint64@@Base+0xfc>
   3a618:	movw	r1, #0
   3a61c:	movw	r0, #34546	; 0x86f2
   3a620:	movt	r1, #28609	; 0x6fc1
   3a624:	movt	r0, #35	; 0x23
   3a628:	subs	r1, r7, r1
   3a62c:	sbcs	r0, r6, r0
   3a630:	bcc	3a810 <flatcc_json_printer_uint64@@Base+0x288>
   3a634:	movw	r1, #0
   3a638:	movw	r0, #46771	; 0xb6b3
   3a63c:	movt	r1, #42852	; 0xa764
   3a640:	movt	r0, #3552	; 0xde0
   3a644:	subs	r1, r7, r1
   3a648:	sbcs	r0, r6, r0
   3a64c:	bcc	3aa6c <flatcc_json_printer_uint64@@Base+0x4e4>
   3a650:	movw	r1, #65535	; 0xffff
   3a654:	movw	r0, #8964	; 0x2304
   3a658:	mov	r8, #19
   3a65c:	movt	r1, #35303	; 0x89e7
   3a660:	movt	r0, #35527	; 0x8ac7
   3a664:	subs	r1, r1, r7
   3a668:	sbcs	r0, r0, r6
   3a66c:	movwcc	r8, #20
   3a670:	mov	r0, #0
   3a674:	tst	r8, #1
   3a678:	strb	r0, [r4, r8]!
   3a67c:	bne	3a6c0 <flatcc_json_printer_uint64@@Base+0x138>
   3a680:	b	3a864 <flatcc_json_printer_uint64@@Base+0x2dc>
   3a684:	movw	r0, #59392	; 0xe800
   3a688:	movt	r0, #18550	; 0x4876
   3a68c:	subs	r0, r7, r0
   3a690:	sbcs	r0, r6, #23
   3a694:	bcc	3a83c <flatcc_json_printer_uint64@@Base+0x2b4>
   3a698:	movw	r0, #4095	; 0xfff
   3a69c:	mov	r8, #12
   3a6a0:	movt	r0, #54437	; 0xd4a5
   3a6a4:	subs	r0, r0, r7
   3a6a8:	rscs	r0, r6, #232	; 0xe8
   3a6ac:	movwcc	r8, #13
   3a6b0:	mov	r0, #0
   3a6b4:	tst	r8, #1
   3a6b8:	strb	r0, [r4, r8]!
   3a6bc:	beq	3a864 <flatcc_json_printer_uint64@@Base+0x2dc>
   3a6c0:	sub	r0, r8, #11
   3a6c4:	cmp	r0, #8
   3a6c8:	bhi	3a9c4 <flatcc_json_printer_uint64@@Base+0x43c>
   3a6cc:	add	r1, pc, #0
   3a6d0:	ldr	pc, [r1, r0, lsl #2]
   3a6d4:			; <UNDEFINED> instruction: 0x0003a7b0
   3a6d8:	andeq	sl, r3, r4, asr #19
   3a6dc:	andeq	sl, r3, r0, lsl #15
   3a6e0:	andeq	sl, r3, r4, asr #19
   3a6e4:	andeq	sl, r3, r0, asr r7
   3a6e8:	andeq	sl, r3, r4, asr #19
   3a6ec:	andeq	sl, r3, r0, lsr #14
   3a6f0:	andeq	sl, r3, r4, asr #19
   3a6f4:	strdeq	sl, [r3], -r8
   3a6f8:	mov	r0, r7
   3a6fc:	mov	r1, r6
   3a700:	mov	r2, #100	; 0x64
   3a704:	mov	r3, #0
   3a708:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a70c:	mov	r7, r0
   3a710:	add	r0, r9, r2, lsl #1
   3a714:	mov	r6, r1
   3a718:	ldrh	r0, [r0]
   3a71c:	strh	r0, [r4, #-2]!
   3a720:	mov	r0, r7
   3a724:	mov	r1, r6
   3a728:	mov	r2, #100	; 0x64
   3a72c:	mov	r3, #0
   3a730:	mov	r5, #100	; 0x64
   3a734:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a738:	mov	r6, r1
   3a73c:	mls	r1, r0, r5, r7
   3a740:	mov	r7, r0
   3a744:	add	r1, r9, r1, lsl #1
   3a748:	ldrh	r1, [r1]
   3a74c:	strh	r1, [r4, #-2]!
   3a750:	mov	r0, r7
   3a754:	mov	r1, r6
   3a758:	mov	r2, #100	; 0x64
   3a75c:	mov	r3, #0
   3a760:	mov	r5, #100	; 0x64
   3a764:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a768:	mov	r6, r1
   3a76c:	mls	r1, r0, r5, r7
   3a770:	mov	r7, r0
   3a774:	add	r1, r9, r1, lsl #1
   3a778:	ldrh	r1, [r1]
   3a77c:	strh	r1, [r4, #-2]!
   3a780:	mov	r0, r7
   3a784:	mov	r1, r6
   3a788:	mov	r2, #100	; 0x64
   3a78c:	mov	r3, #0
   3a790:	mov	r5, #100	; 0x64
   3a794:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a798:	mov	r6, r1
   3a79c:	mls	r1, r0, r5, r7
   3a7a0:	mov	r7, r0
   3a7a4:	add	r1, r9, r1, lsl #1
   3a7a8:	ldrh	r1, [r1]
   3a7ac:	strh	r1, [r4, #-2]!
   3a7b0:	mov	r0, r7
   3a7b4:	mov	r1, r6
   3a7b8:	mov	r2, #100	; 0x64
   3a7bc:	mov	r3, #0
   3a7c0:	mov	sl, #100	; 0x64
   3a7c4:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a7c8:	mov	r2, #10
   3a7cc:	mov	r3, #0
   3a7d0:	mov	r5, r0
   3a7d4:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a7d8:	orr	r0, r2, #48	; 0x30
   3a7dc:	mov	r1, r6
   3a7e0:	mov	r2, #1000	; 0x3e8
   3a7e4:	mov	r3, #0
   3a7e8:	strb	r0, [r4, #-3]!
   3a7ec:	mls	r0, r5, sl, r7
   3a7f0:	add	r0, r9, r0, lsl #1
   3a7f4:	ldrh	r0, [r0]
   3a7f8:	strh	r0, [r4, #1]
   3a7fc:	mov	r0, r7
   3a800:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a804:	mov	r7, r0
   3a808:	mov	r6, r1
   3a80c:	b	3a9c4 <flatcc_json_printer_uint64@@Base+0x43c>
   3a810:	movw	r1, #32768	; 0x8000
   3a814:	movw	r0, #36222	; 0x8d7e
   3a818:	movt	r1, #42182	; 0xa4c6
   3a81c:	movt	r0, #3
   3a820:	subs	r1, r7, r1
   3a824:	sbcs	r0, r6, r0
   3a828:	bcc	3aaa0 <flatcc_json_printer_uint64@@Base+0x518>
   3a82c:	mov	r0, #0
   3a830:	mov	r8, #16
   3a834:	strb	r0, [r4, #16]!
   3a838:	b	3a904 <flatcc_json_printer_uint64@@Base+0x37c>
   3a83c:	movw	r0, #58367	; 0xe3ff
   3a840:	mov	r8, #10
   3a844:	movt	r0, #21515	; 0x540b
   3a848:	subs	r0, r0, r7
   3a84c:	rscs	r0, r6, #2
   3a850:	movwcc	r8, #11
   3a854:	mov	r0, #0
   3a858:	tst	r8, #1
   3a85c:	strb	r0, [r4, r8]!
   3a860:	bne	3a6c0 <flatcc_json_printer_uint64@@Base+0x138>
   3a864:	sub	r0, r8, #10
   3a868:	cmp	r0, #10
   3a86c:	bhi	3a9c4 <flatcc_json_printer_uint64@@Base+0x43c>
   3a870:	add	r1, pc, #0
   3a874:	ldr	pc, [r1, r0, lsl #2]
   3a878:	muleq	r3, r4, r9
   3a87c:	andeq	sl, r3, r4, asr #19
   3a880:	andeq	sl, r3, r4, ror #18
   3a884:	andeq	sl, r3, r4, asr #19
   3a888:	andeq	sl, r3, r4, lsr r9
   3a88c:	andeq	sl, r3, r4, asr #19
   3a890:	andeq	sl, r3, r4, lsl #18
   3a894:	andeq	sl, r3, r4, asr #19
   3a898:	ldrdeq	sl, [r3], -r4
   3a89c:	andeq	sl, r3, r4, asr #19
   3a8a0:	andeq	sl, r3, r4, lsr #17
   3a8a4:	mov	r0, r7
   3a8a8:	mov	r1, r6
   3a8ac:	mov	r2, #100	; 0x64
   3a8b0:	mov	r3, #0
   3a8b4:	mov	r5, #100	; 0x64
   3a8b8:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a8bc:	mov	r6, r1
   3a8c0:	mls	r1, r0, r5, r7
   3a8c4:	mov	r7, r0
   3a8c8:	add	r1, r9, r1, lsl #1
   3a8cc:	ldrh	r1, [r1]
   3a8d0:	strh	r1, [r4, #-2]!
   3a8d4:	mov	r0, r7
   3a8d8:	mov	r1, r6
   3a8dc:	mov	r2, #100	; 0x64
   3a8e0:	mov	r3, #0
   3a8e4:	mov	r5, #100	; 0x64
   3a8e8:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a8ec:	mov	r6, r1
   3a8f0:	mls	r1, r0, r5, r7
   3a8f4:	mov	r7, r0
   3a8f8:	add	r1, r9, r1, lsl #1
   3a8fc:	ldrh	r1, [r1]
   3a900:	strh	r1, [r4, #-2]!
   3a904:	mov	r0, r7
   3a908:	mov	r1, r6
   3a90c:	mov	r2, #100	; 0x64
   3a910:	mov	r3, #0
   3a914:	mov	r5, #100	; 0x64
   3a918:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a91c:	mov	r6, r1
   3a920:	mls	r1, r0, r5, r7
   3a924:	mov	r7, r0
   3a928:	add	r1, r9, r1, lsl #1
   3a92c:	ldrh	r1, [r1]
   3a930:	strh	r1, [r4, #-2]!
   3a934:	mov	r0, r7
   3a938:	mov	r1, r6
   3a93c:	mov	r2, #100	; 0x64
   3a940:	mov	r3, #0
   3a944:	mov	r5, #100	; 0x64
   3a948:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a94c:	mov	r6, r1
   3a950:	mls	r1, r0, r5, r7
   3a954:	mov	r7, r0
   3a958:	add	r1, r9, r1, lsl #1
   3a95c:	ldrh	r1, [r1]
   3a960:	strh	r1, [r4, #-2]!
   3a964:	mov	r0, r7
   3a968:	mov	r1, r6
   3a96c:	mov	r2, #100	; 0x64
   3a970:	mov	r3, #0
   3a974:	mov	r5, #100	; 0x64
   3a978:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a97c:	mov	r6, r1
   3a980:	mls	r1, r0, r5, r7
   3a984:	mov	r7, r0
   3a988:	add	r1, r9, r1, lsl #1
   3a98c:	ldrh	r1, [r1]
   3a990:	strh	r1, [r4, #-2]!
   3a994:	mov	r0, r7
   3a998:	mov	r1, r6
   3a99c:	mov	r2, #100	; 0x64
   3a9a0:	mov	r3, #0
   3a9a4:	mov	r5, #100	; 0x64
   3a9a8:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a9ac:	mov	r6, r1
   3a9b0:	mls	r1, r0, r5, r7
   3a9b4:	mov	r7, r0
   3a9b8:	add	r1, r9, r1, lsl #1
   3a9bc:	ldrh	r1, [r1]
   3a9c0:	strh	r1, [r4, #-2]!
   3a9c4:	mov	r0, r7
   3a9c8:	mov	r1, r6
   3a9cc:	mov	r2, #100	; 0x64
   3a9d0:	mov	r3, #0
   3a9d4:	mov	r5, #100	; 0x64
   3a9d8:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a9dc:	mls	r2, r0, r5, r7
   3a9e0:	mov	r3, #0
   3a9e4:	add	r2, r9, r2, lsl #1
   3a9e8:	ldrh	r2, [r2]
   3a9ec:	strh	r2, [r4, #-2]
   3a9f0:	mov	r2, #100	; 0x64
   3a9f4:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3a9f8:	add	r0, r9, r2, lsl #1
   3a9fc:	mov	r1, r6
   3aa00:	movw	r2, #10000	; 0x2710
   3aa04:	mov	r3, #0
   3aa08:	ldrh	r0, [r0]
   3aa0c:	strh	r0, [r4, #-4]
   3aa10:	mov	r0, r7
   3aa14:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3aa18:	mov	r2, #100	; 0x64
   3aa1c:	mov	r3, #0
   3aa20:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3aa24:	add	r0, r9, r2, lsl #1
   3aa28:	movw	r2, #16960	; 0x4240
   3aa2c:	mov	r1, r6
   3aa30:	mov	r3, #0
   3aa34:	movt	r2, #15
   3aa38:	ldrh	r0, [r0]
   3aa3c:	strh	r0, [r4, #-6]
   3aa40:	mov	r0, r7
   3aa44:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3aa48:	mov	r2, #100	; 0x64
   3aa4c:	mov	r3, #0
   3aa50:	bl	460f4 <flatcc_json_printer_clear@@Base+0x7ac>
   3aa54:	add	r0, r9, r2, lsl #1
   3aa58:	ldrh	r0, [r0]
   3aa5c:	strh	r0, [r4, #-8]
   3aa60:	mov	r0, r8
   3aa64:	sub	sp, fp, #28
   3aa68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3aa6c:	movw	r1, #65535	; 0xffff
   3aa70:	movw	r0, #17784	; 0x4578
   3aa74:	mov	r8, #17
   3aa78:	movt	r1, #23945	; 0x5d89
   3aa7c:	movt	r0, #355	; 0x163
   3aa80:	subs	r1, r1, r7
   3aa84:	sbcs	r0, r0, r6
   3aa88:	movwcc	r8, #18
   3aa8c:	mov	r0, #0
   3aa90:	tst	r8, #1
   3aa94:	strb	r0, [r4, r8]!
   3aa98:	bne	3a6c0 <flatcc_json_printer_uint64@@Base+0x138>
   3aa9c:	b	3a864 <flatcc_json_printer_uint64@@Base+0x2dc>
   3aaa0:	movw	r1, #16383	; 0x3fff
   3aaa4:	movw	r0, #23283	; 0x5af3
   3aaa8:	mov	r8, #14
   3aaac:	movt	r1, #4218	; 0x107a
   3aab0:	subs	r1, r1, r7
   3aab4:	sbcs	r0, r0, r6
   3aab8:	movwcc	r8, #15
   3aabc:	mov	r0, #0
   3aac0:	tst	r8, #1
   3aac4:	strb	r0, [r4, r8]!
   3aac8:	bne	3a6c0 <flatcc_json_printer_uint64@@Base+0x138>
   3aacc:	b	3a864 <flatcc_json_printer_uint64@@Base+0x2dc>

0003aad0 <flatcc_json_printer_int8@@Base>:
   3aad0:	push	{fp, lr}
   3aad4:	mov	fp, sp
   3aad8:	ldr	lr, [r0, #20]
   3aadc:	cmn	r1, #1
   3aae0:	uxtb	ip, r1
   3aae4:	movle	r3, #45	; 0x2d
   3aae8:	rsble	r1, r1, #0
   3aaec:	lsr	ip, ip, #7
   3aaf0:	strble	r3, [lr], #1
   3aaf4:	uxtb	r3, r1
   3aaf8:	cmp	r3, #100	; 0x64
   3aafc:	bcc	3ab4c <flatcc_json_printer_int8@@Base+0x7c>
   3ab00:	mov	r1, #0
   3ab04:	strb	r1, [lr, #3]
   3ab08:	movw	r1, #34079	; 0x851f
   3ab0c:	movt	r1, #20971	; 0x51eb
   3ab10:	umull	r1, r2, r3, r1
   3ab14:	mov	r1, #48	; 0x30
   3ab18:	orr	r1, r1, r2, lsr #5
   3ab1c:	strb	r1, [lr]
   3ab20:	lsr	r1, r2, #5
   3ab24:	mov	r2, #100	; 0x64
   3ab28:	mls	r1, r1, r2, r3
   3ab2c:	movw	r2, #48464	; 0xbd50
   3ab30:	movt	r2, #4
   3ab34:	uxtb	r1, r1
   3ab38:	add	r1, r2, r1, lsl #1
   3ab3c:	ldrh	r1, [r1]
   3ab40:	strh	r1, [lr, #1]
   3ab44:	mov	r1, #3
   3ab48:	b	3aba4 <flatcc_json_printer_int8@@Base+0xd4>
   3ab4c:	cmp	r3, #10
   3ab50:	bcc	3ab90 <flatcc_json_printer_int8@@Base+0xc0>
   3ab54:	mov	r1, #0
   3ab58:	strb	r1, [lr, #2]
   3ab5c:	movw	r1, #34079	; 0x851f
   3ab60:	movt	r1, #20971	; 0x51eb
   3ab64:	umull	r1, r2, r3, r1
   3ab68:	lsr	r1, r2, #5
   3ab6c:	mov	r2, #100	; 0x64
   3ab70:	mls	r1, r1, r2, r3
   3ab74:	movw	r2, #48464	; 0xbd50
   3ab78:	movt	r2, #4
   3ab7c:	add	r1, r2, r1, lsl #1
   3ab80:	ldrh	r1, [r1]
   3ab84:	strh	r1, [lr]
   3ab88:	mov	r1, #2
   3ab8c:	b	3aba4 <flatcc_json_printer_int8@@Base+0xd4>
   3ab90:	mov	r2, #0
   3ab94:	add	r1, r1, #48	; 0x30
   3ab98:	strb	r2, [lr, #1]
   3ab9c:	strb	r1, [lr]
   3aba0:	mov	r1, #1
   3aba4:	ldr	r2, [r0, #20]
   3aba8:	add	r1, r1, ip
   3abac:	add	r1, r2, r1
   3abb0:	str	r1, [r0, #20]
   3abb4:	pop	{fp, pc}

0003abb8 <flatcc_json_printer_int16@@Base>:
   3abb8:	push	{r4, r5, fp, lr}
   3abbc:	add	fp, sp, #8
   3abc0:	mov	r2, r1
   3abc4:	ldr	r1, [r0, #20]
   3abc8:	mov	r4, r0
   3abcc:	uxth	r0, r2
   3abd0:	cmn	r2, #1
   3abd4:	rsble	r2, r2, #0
   3abd8:	lsr	r5, r0, #15
   3abdc:	movle	r0, #45	; 0x2d
   3abe0:	strble	r0, [r1], #1
   3abe4:	uxth	r0, r2
   3abe8:	bl	3a0b4 <flatcc_json_printer_uint16@@Base+0x2c>
   3abec:	ldr	r1, [r4, #20]
   3abf0:	add	r0, r0, r5
   3abf4:	add	r0, r1, r0
   3abf8:	str	r0, [r4, #20]
   3abfc:	pop	{r4, r5, fp, pc}

0003ac00 <flatcc_json_printer_int32@@Base>:
   3ac00:	push	{r4, r5, fp, lr}
   3ac04:	add	fp, sp, #8
   3ac08:	mov	r2, r1
   3ac0c:	lsr	r5, r1, #31
   3ac10:	ldr	r1, [r0, #20]
   3ac14:	mov	r4, r0
   3ac18:	cmn	r2, #1
   3ac1c:	movle	r0, #45	; 0x2d
   3ac20:	rsble	r2, r2, #0
   3ac24:	strble	r0, [r1], #1
   3ac28:	mov	r0, r2
   3ac2c:	bl	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3ac30:	ldr	r1, [r4, #20]
   3ac34:	add	r0, r0, r5
   3ac38:	add	r0, r1, r0
   3ac3c:	str	r0, [r4, #20]
   3ac40:	pop	{r4, r5, fp, pc}

0003ac44 <flatcc_json_printer_int64@@Base>:
   3ac44:	push	{r4, r5, fp, lr}
   3ac48:	add	fp, sp, #8
   3ac4c:	mov	r1, r3
   3ac50:	mov	r3, r2
   3ac54:	ldr	r2, [r0, #20]
   3ac58:	mov	r4, r0
   3ac5c:	lsr	r5, r1, #31
   3ac60:	cmn	r1, #1
   3ac64:	bgt	3ac78 <flatcc_json_printer_int64@@Base+0x34>
   3ac68:	mov	r0, #45	; 0x2d
   3ac6c:	rsbs	r3, r3, #0
   3ac70:	strb	r0, [r2], #1
   3ac74:	rsc	r1, r1, #0
   3ac78:	mov	r0, r3
   3ac7c:	bl	3a5b8 <flatcc_json_printer_uint64@@Base+0x30>
   3ac80:	ldr	r1, [r4, #20]
   3ac84:	add	r0, r0, r5
   3ac88:	add	r0, r1, r0
   3ac8c:	str	r0, [r4, #20]
   3ac90:	pop	{r4, r5, fp, pc}

0003ac94 <flatcc_json_printer_float@@Base>:
   3ac94:	push	{r4, sl, fp, lr}
   3ac98:	add	fp, sp, #8
   3ac9c:	vcvt.f64.f32	d0, s0
   3aca0:	mov	r4, r0
   3aca4:	ldr	r0, [r0, #20]
   3aca8:	bl	38b88 <flatcc_json_printer_fmt_float@@Base+0x8>
   3acac:	ldr	r1, [r4, #20]
   3acb0:	add	r0, r1, r0
   3acb4:	str	r0, [r4, #20]
   3acb8:	pop	{r4, sl, fp, pc}

0003acbc <flatcc_json_printer_double@@Base>:
   3acbc:	push	{r4, sl, fp, lr}
   3acc0:	add	fp, sp, #8
   3acc4:	mov	r4, r0
   3acc8:	ldr	r0, [r0, #20]
   3accc:	bl	38b88 <flatcc_json_printer_fmt_float@@Base+0x8>
   3acd0:	ldr	r1, [r4, #20]
   3acd4:	add	r0, r1, r0
   3acd8:	str	r0, [r4, #20]
   3acdc:	pop	{r4, sl, fp, pc}

0003ace0 <flatcc_json_printer_enum@@Base>:
   3ace0:	push	{r4, r5, r6, r7, fp, lr}
   3ace4:	add	fp, sp, #16
   3ace8:	mov	r4, r0
   3acec:	ldr	r0, [r0, #20]
   3acf0:	mov	r6, r1
   3acf4:	mov	r1, #34	; 0x22
   3acf8:	mov	r5, r2
   3acfc:	strb	r1, [r0]
   3ad00:	ldrb	r2, [r4, #26]
   3ad04:	ldr	r0, [r4, #20]
   3ad08:	ldr	r1, [r4, #16]
   3ad0c:	cmp	r2, #0
   3ad10:	addeq	r0, r0, #1
   3ad14:	add	r2, r0, r5
   3ad18:	str	r0, [r4, #20]
   3ad1c:	cmp	r2, r1
   3ad20:	bcc	3ad94 <flatcc_json_printer_enum@@Base+0xb4>
   3ad24:	cmp	r0, r1
   3ad28:	bcc	3ad44 <flatcc_json_printer_enum@@Base+0x64>
   3ad2c:	ldr	r2, [r4, #44]	; 0x2c
   3ad30:	mov	r0, r4
   3ad34:	mov	r1, #0
   3ad38:	blx	r2
   3ad3c:	ldr	r1, [r4, #16]
   3ad40:	ldr	r0, [r4, #20]
   3ad44:	sub	r7, r1, r0
   3ad48:	cmp	r7, r5
   3ad4c:	bcs	3ad94 <flatcc_json_printer_enum@@Base+0xb4>
   3ad50:	mov	r1, r6
   3ad54:	mov	r2, r7
   3ad58:	bl	14e5c <memcpy@plt>
   3ad5c:	ldr	r0, [r4, #20]
   3ad60:	ldr	r2, [r4, #44]	; 0x2c
   3ad64:	mov	r1, #0
   3ad68:	add	r0, r0, r7
   3ad6c:	str	r0, [r4, #20]
   3ad70:	mov	r0, r4
   3ad74:	blx	r2
   3ad78:	ldr	r1, [r4, #16]
   3ad7c:	ldr	r0, [r4, #20]
   3ad80:	sub	r5, r5, r7
   3ad84:	add	r6, r6, r7
   3ad88:	sub	r7, r1, r0
   3ad8c:	cmp	r5, r7
   3ad90:	bhi	3ad50 <flatcc_json_printer_enum@@Base+0x70>
   3ad94:	mov	r1, r6
   3ad98:	mov	r2, r5
   3ad9c:	bl	14e5c <memcpy@plt>
   3ada0:	ldr	r0, [r4, #20]
   3ada4:	add	r1, r0, r5
   3ada8:	str	r1, [r4, #20]
   3adac:	mov	r1, #34	; 0x22
   3adb0:	strb	r1, [r0, r5]
   3adb4:	ldrb	r0, [r4, #26]
   3adb8:	ldr	r1, [r4, #20]
   3adbc:	cmp	r0, #0
   3adc0:	addeq	r1, r1, #1
   3adc4:	str	r1, [r4, #20]
   3adc8:	pop	{r4, r5, r6, r7, fp, pc}

0003adcc <flatcc_json_printer_delimit_enum_flags@@Base>:
   3adcc:	ldrb	ip, [r0, #26]
   3add0:	ldr	r3, [r0, #20]
   3add4:	mov	r2, #34	; 0x22
   3add8:	cmp	r1, #0
   3addc:	movwne	r1, #1
   3ade0:	strb	r2, [r3]
   3ade4:	clz	r2, ip
   3ade8:	lsr	r2, r2, #5
   3adec:	orr	r1, r1, r2
   3adf0:	ldr	r2, [r0, #20]
   3adf4:	add	r1, r2, r1
   3adf8:	str	r1, [r0, #20]
   3adfc:	bx	lr

0003ae00 <flatcc_json_printer_enum_flag@@Base>:
   3ae00:	push	{r4, r5, r6, r7, fp, lr}
   3ae04:	add	fp, sp, #16
   3ae08:	mov	r5, r0
   3ae0c:	ldr	r0, [r0, #20]
   3ae10:	mov	r6, r2
   3ae14:	mov	r2, #32
   3ae18:	cmp	r1, #0
   3ae1c:	mov	r4, r3
   3ae20:	strb	r2, [r0]
   3ae24:	ldr	r0, [r5, #20]
   3ae28:	ldr	r2, [r5, #16]
   3ae2c:	addgt	r0, r0, #1
   3ae30:	add	r1, r0, r3
   3ae34:	str	r0, [r5, #20]
   3ae38:	cmp	r1, r2
   3ae3c:	bcc	3aeb0 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3ae40:	cmp	r0, r2
   3ae44:	bcc	3ae60 <flatcc_json_printer_enum_flag@@Base+0x60>
   3ae48:	ldr	r2, [r5, #44]	; 0x2c
   3ae4c:	mov	r0, r5
   3ae50:	mov	r1, #0
   3ae54:	blx	r2
   3ae58:	ldr	r2, [r5, #16]
   3ae5c:	ldr	r0, [r5, #20]
   3ae60:	sub	r7, r2, r0
   3ae64:	cmp	r7, r4
   3ae68:	bcs	3aeb0 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3ae6c:	mov	r1, r6
   3ae70:	mov	r2, r7
   3ae74:	bl	14e5c <memcpy@plt>
   3ae78:	ldr	r0, [r5, #20]
   3ae7c:	ldr	r2, [r5, #44]	; 0x2c
   3ae80:	mov	r1, #0
   3ae84:	add	r0, r0, r7
   3ae88:	str	r0, [r5, #20]
   3ae8c:	mov	r0, r5
   3ae90:	blx	r2
   3ae94:	ldr	r1, [r5, #16]
   3ae98:	ldr	r0, [r5, #20]
   3ae9c:	sub	r4, r4, r7
   3aea0:	add	r6, r6, r7
   3aea4:	sub	r7, r1, r0
   3aea8:	cmp	r4, r7
   3aeac:	bhi	3ae6c <flatcc_json_printer_enum_flag@@Base+0x6c>
   3aeb0:	mov	r1, r6
   3aeb4:	mov	r2, r4
   3aeb8:	bl	14e5c <memcpy@plt>
   3aebc:	ldr	r0, [r5, #20]
   3aec0:	add	r0, r0, r4
   3aec4:	str	r0, [r5, #20]
   3aec8:	pop	{r4, r5, r6, r7, fp, pc}

0003aecc <flatcc_json_printer_string_field@@Base>:
   3aecc:	push	{r4, r5, fp, lr}
   3aed0:	add	fp, sp, #8
   3aed4:	mov	r4, r0
   3aed8:	mov	r0, #4
   3aedc:	add	r0, r0, r2, lsl #1
   3aee0:	ldr	r2, [r1, #8]
   3aee4:	cmp	r0, r2
   3aee8:	popge	{r4, r5, fp, pc}
   3aeec:	ldr	r2, [r1, #4]
   3aef0:	add	r0, r2, r0
   3aef4:	ldrh	r0, [r0]
   3aef8:	cmp	r0, #0
   3aefc:	ldrne	r2, [r1]
   3af00:	addsne	r5, r2, r0
   3af04:	bne	3af0c <flatcc_json_printer_string_field@@Base+0x40>
   3af08:	pop	{r4, r5, fp, pc}
   3af0c:	ldr	ip, [r1, #16]
   3af10:	ldr	r2, [fp, #8]
   3af14:	add	r0, ip, #1
   3af18:	cmp	ip, #0
   3af1c:	str	r0, [r1, #16]
   3af20:	beq	3af38 <flatcc_json_printer_string_field@@Base+0x6c>
   3af24:	ldr	r0, [r4, #20]
   3af28:	add	r1, r0, #1
   3af2c:	str	r1, [r4, #20]
   3af30:	mov	r1, #44	; 0x2c
   3af34:	strb	r1, [r0]
   3af38:	mov	r0, r4
   3af3c:	mov	r1, r3
   3af40:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3af44:	ldr	r0, [r5]
   3af48:	ldr	r2, [r5, r0]!
   3af4c:	mov	r0, r4
   3af50:	add	r1, r5, #4
   3af54:	pop	{r4, r5, fp, lr}
   3af58:	b	39ae0 <flatcc_json_printer_string@@Base+0x4>
   3af5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3af60:	add	fp, sp, #24
   3af64:	mov	r4, r0
   3af68:	mov	r6, r1
   3af6c:	ldr	r0, [r0, #20]
   3af70:	mov	r8, r2
   3af74:	ldrb	r1, [r4, #25]
   3af78:	cmp	r1, #0
   3af7c:	beq	3b038 <flatcc_json_printer_string_field@@Base+0x16c>
   3af80:	add	r1, r0, #1
   3af84:	str	r1, [r4, #20]
   3af88:	mov	r1, #10
   3af8c:	strb	r1, [r0]
   3af90:	ldr	r0, [r4, #20]
   3af94:	ldrb	r2, [r4, #25]
   3af98:	ldr	r3, [r4, #32]
   3af9c:	ldr	r1, [r4, #16]
   3afa0:	mla	r5, r3, r2, r0
   3afa4:	mul	r7, r3, r2
   3afa8:	cmp	r5, r1
   3afac:	bls	3b01c <flatcc_json_printer_string_field@@Base+0x150>
   3afb0:	cmp	r0, r1
   3afb4:	bcc	3afd0 <flatcc_json_printer_string_field@@Base+0x104>
   3afb8:	ldr	r2, [r4, #44]	; 0x2c
   3afbc:	mov	r0, r4
   3afc0:	mov	r1, #0
   3afc4:	blx	r2
   3afc8:	ldr	r1, [r4, #16]
   3afcc:	ldr	r0, [r4, #20]
   3afd0:	sub	r5, r1, r0
   3afd4:	cmp	r5, r7
   3afd8:	bcs	3b01c <flatcc_json_printer_string_field@@Base+0x150>
   3afdc:	mov	r1, #32
   3afe0:	mov	r2, r5
   3afe4:	bl	14eec <memset@plt>
   3afe8:	ldr	r0, [r4, #20]
   3afec:	ldr	r2, [r4, #44]	; 0x2c
   3aff0:	mov	r1, #0
   3aff4:	add	r0, r0, r5
   3aff8:	str	r0, [r4, #20]
   3affc:	mov	r0, r4
   3b000:	blx	r2
   3b004:	ldr	r1, [r4, #16]
   3b008:	ldr	r0, [r4, #20]
   3b00c:	sub	r7, r7, r5
   3b010:	sub	r5, r1, r0
   3b014:	cmp	r7, r5
   3b018:	bhi	3afdc <flatcc_json_printer_string_field@@Base+0x110>
   3b01c:	mov	r1, #32
   3b020:	mov	r2, r7
   3b024:	bl	14eec <memset@plt>
   3b028:	ldr	r0, [r4, #20]
   3b02c:	add	r0, r0, r7
   3b030:	str	r0, [r4, #20]
   3b034:	b	3b058 <flatcc_json_printer_string_field@@Base+0x18c>
   3b038:	ldr	r1, [r4, #16]
   3b03c:	cmp	r0, r1
   3b040:	bcc	3b058 <flatcc_json_printer_string_field@@Base+0x18c>
   3b044:	ldr	r2, [r4, #44]	; 0x2c
   3b048:	mov	r0, r4
   3b04c:	mov	r1, #0
   3b050:	blx	r2
   3b054:	ldr	r0, [r4, #20]
   3b058:	mov	r1, #34	; 0x22
   3b05c:	strb	r1, [r0]
   3b060:	ldrb	r2, [r4, #26]
   3b064:	ldr	r0, [r4, #20]
   3b068:	ldr	r1, [r4, #16]
   3b06c:	cmp	r2, #0
   3b070:	addeq	r0, r0, #1
   3b074:	add	r2, r0, r8
   3b078:	str	r0, [r4, #20]
   3b07c:	cmp	r2, r1
   3b080:	bcc	3b0f4 <flatcc_json_printer_string_field@@Base+0x228>
   3b084:	cmp	r0, r1
   3b088:	bcc	3b0a4 <flatcc_json_printer_string_field@@Base+0x1d8>
   3b08c:	ldr	r2, [r4, #44]	; 0x2c
   3b090:	mov	r0, r4
   3b094:	mov	r1, #0
   3b098:	blx	r2
   3b09c:	ldr	r1, [r4, #16]
   3b0a0:	ldr	r0, [r4, #20]
   3b0a4:	sub	r7, r1, r0
   3b0a8:	cmp	r7, r8
   3b0ac:	bcs	3b0f4 <flatcc_json_printer_string_field@@Base+0x228>
   3b0b0:	mov	r1, r6
   3b0b4:	mov	r2, r7
   3b0b8:	bl	14e5c <memcpy@plt>
   3b0bc:	ldr	r0, [r4, #20]
   3b0c0:	ldr	r2, [r4, #44]	; 0x2c
   3b0c4:	mov	r1, #0
   3b0c8:	add	r0, r0, r7
   3b0cc:	str	r0, [r4, #20]
   3b0d0:	mov	r0, r4
   3b0d4:	blx	r2
   3b0d8:	ldr	r1, [r4, #16]
   3b0dc:	ldr	r0, [r4, #20]
   3b0e0:	sub	r8, r8, r7
   3b0e4:	add	r6, r6, r7
   3b0e8:	sub	r7, r1, r0
   3b0ec:	cmp	r8, r7
   3b0f0:	bhi	3b0b0 <flatcc_json_printer_string_field@@Base+0x1e4>
   3b0f4:	mov	r1, r6
   3b0f8:	mov	r2, r8
   3b0fc:	bl	14e5c <memcpy@plt>
   3b100:	ldr	r0, [r4, #20]
   3b104:	add	r1, r0, r8
   3b108:	str	r1, [r4, #20]
   3b10c:	mov	r1, #34	; 0x22
   3b110:	strb	r1, [r0, r8]
   3b114:	ldrb	r0, [r4, #26]
   3b118:	ldr	r1, [r4, #20]
   3b11c:	cmp	r0, #0
   3b120:	addeq	r1, r1, #1
   3b124:	add	r0, r1, #1
   3b128:	str	r0, [r4, #20]
   3b12c:	mov	r0, #58	; 0x3a
   3b130:	strb	r0, [r1]
   3b134:	mov	r1, #32
   3b138:	ldr	r0, [r4, #20]
   3b13c:	strb	r1, [r0]
   3b140:	ldrb	r0, [r4, #25]
   3b144:	ldr	r1, [r4, #20]
   3b148:	cmp	r0, #0
   3b14c:	addne	r1, r1, #1
   3b150:	str	r1, [r4, #20]
   3b154:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003b158 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   3b158:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b15c:	add	fp, sp, #28
   3b160:	sub	sp, sp, #12
   3b164:	mov	r4, r0
   3b168:	mov	r0, #4
   3b16c:	add	r0, r0, r2, lsl #1
   3b170:	ldr	r2, [r1, #8]
   3b174:	cmp	r0, r2
   3b178:	bge	3b318 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   3b17c:	ldr	r2, [r1, #4]
   3b180:	add	r0, r2, r0
   3b184:	ldrh	r0, [r0]
   3b188:	cmp	r0, #0
   3b18c:	beq	3b318 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   3b190:	ldr	r5, [fp, #12]
   3b194:	ldr	r2, [r1]
   3b198:	cmp	r5, #0
   3b19c:	add	r6, r2, r0
   3b1a0:	movwne	r5, #1
   3b1a4:	cmp	r6, #0
   3b1a8:	beq	3b318 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   3b1ac:	ldr	r0, [r1, #16]
   3b1b0:	ldr	r2, [fp, #8]
   3b1b4:	add	r7, r0, #1
   3b1b8:	cmp	r0, #0
   3b1bc:	str	r7, [r1, #16]
   3b1c0:	beq	3b1d8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x80>
   3b1c4:	ldr	r0, [r4, #20]
   3b1c8:	add	r1, r0, #1
   3b1cc:	str	r1, [r4, #20]
   3b1d0:	mov	r1, #44	; 0x2c
   3b1d4:	strb	r1, [r0]
   3b1d8:	mov	r0, r4
   3b1dc:	mov	r1, r3
   3b1e0:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3b1e4:	ldr	r0, [r6]
   3b1e8:	ldr	r0, [r6, r0]!
   3b1ec:	str	r0, [sp, #8]
   3b1f0:	ldr	r0, [r4, #20]
   3b1f4:	add	r1, r0, #1
   3b1f8:	str	r1, [r4, #20]
   3b1fc:	mov	r1, #34	; 0x22
   3b200:	strb	r1, [r0]
   3b204:	movw	r1, #43691	; 0xaaab
   3b208:	ldr	r0, [sp, #8]
   3b20c:	movt	r1, #43690	; 0xaaaa
   3b210:	lsl	r0, r0, #2
   3b214:	umull	r0, r1, r0, r1
   3b218:	mov	r0, #3
   3b21c:	add	r0, r0, r1, lsr #1
   3b220:	ldr	r1, [r4, #16]
   3b224:	bic	r7, r0, #3
   3b228:	ldr	r0, [r4, #20]
   3b22c:	add	r2, r0, r7
   3b230:	cmp	r2, r1
   3b234:	bcc	3b250 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   3b238:	ldr	r2, [r4, #44]	; 0x2c
   3b23c:	mov	r0, r4
   3b240:	mov	r1, #0
   3b244:	blx	r2
   3b248:	ldr	r1, [r4, #16]
   3b24c:	ldr	r0, [r4, #20]
   3b250:	add	r2, r0, r7
   3b254:	add	r6, r6, #4
   3b258:	cmp	r2, r1
   3b25c:	bls	3b2f0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   3b260:	add	r9, sp, #4
   3b264:	mov	sl, #3
   3b268:	sub	r1, r1, r0
   3b26c:	bic	r7, r1, #3
   3b270:	add	r1, r7, r7, lsl #1
   3b274:	cmp	r1, #0
   3b278:	beq	3b320 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c8>
   3b27c:	lsr	r8, r1, #2
   3b280:	mov	r1, r6
   3b284:	mov	r2, r9
   3b288:	mov	r3, r5
   3b28c:	str	r8, [sp, #4]
   3b290:	bl	4598c <flatcc_json_printer_clear@@Base+0x44>
   3b294:	ldr	r0, [r4, #20]
   3b298:	mov	r1, #0
   3b29c:	add	r0, r0, r7
   3b2a0:	str	r0, [r4, #20]
   3b2a4:	ldr	r0, [sp, #8]
   3b2a8:	sub	r0, r0, r8
   3b2ac:	str	r0, [sp, #8]
   3b2b0:	mov	r0, r4
   3b2b4:	ldr	r2, [r4, #44]	; 0x2c
   3b2b8:	blx	r2
   3b2bc:	ldr	r0, [sp, #8]
   3b2c0:	movw	r1, #43691	; 0xaaab
   3b2c4:	add	r6, r6, r8
   3b2c8:	movt	r1, #43690	; 0xaaaa
   3b2cc:	lsl	r0, r0, #2
   3b2d0:	umull	r0, r1, r0, r1
   3b2d4:	add	r0, sl, r1, lsr #1
   3b2d8:	ldr	r1, [r4, #16]
   3b2dc:	bic	r7, r0, #3
   3b2e0:	ldr	r0, [r4, #20]
   3b2e4:	add	r2, r0, r7
   3b2e8:	cmp	r2, r1
   3b2ec:	bhi	3b268 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x110>
   3b2f0:	orr	r3, r5, #128	; 0x80
   3b2f4:	add	r2, sp, #8
   3b2f8:	mov	r1, r6
   3b2fc:	bl	4598c <flatcc_json_printer_clear@@Base+0x44>
   3b300:	ldr	r0, [r4, #20]
   3b304:	add	r1, r0, r7
   3b308:	add	r1, r1, #1
   3b30c:	str	r1, [r4, #20]
   3b310:	mov	r1, #34	; 0x22
   3b314:	strb	r1, [r0, r7]
   3b318:	sub	sp, fp, #28
   3b31c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b320:	movw	r0, #48665	; 0xbe19
   3b324:	movw	r1, #47739	; 0xba7b
   3b328:	movw	r3, #48671	; 0xbe1f
   3b32c:	movw	r2, #277	; 0x115
   3b330:	movt	r0, #4
   3b334:	movt	r1, #4
   3b338:	movt	r3, #4
   3b33c:	bl	14f40 <__assert_fail@plt>

0003b340 <flatcc_json_printer_uint8_field@@Base>:
   3b340:	push	{r4, r5, r6, sl, fp, lr}
   3b344:	add	fp, sp, #16
   3b348:	mov	r6, r0
   3b34c:	mov	r0, #4
   3b350:	ldr	r5, [r1, #8]
   3b354:	add	r2, r0, r2, lsl #1
   3b358:	ldr	r0, [fp, #12]
   3b35c:	cmp	r2, r5
   3b360:	bge	3b380 <flatcc_json_printer_uint8_field@@Base+0x40>
   3b364:	ldr	r5, [r1, #4]
   3b368:	add	r2, r5, r2
   3b36c:	ldrh	r2, [r2]
   3b370:	cmp	r2, #0
   3b374:	ldrne	r5, [r1]
   3b378:	addsne	r2, r5, r2
   3b37c:	bne	3b480 <flatcc_json_printer_uint8_field@@Base+0x140>
   3b380:	ldrb	r2, [r6, #29]
   3b384:	mov	r5, r0
   3b388:	cmp	r2, #0
   3b38c:	beq	3b47c <flatcc_json_printer_uint8_field@@Base+0x13c>
   3b390:	ldr	r0, [r1, #16]
   3b394:	ldr	r2, [fp, #8]
   3b398:	add	r4, r0, #1
   3b39c:	cmp	r0, #0
   3b3a0:	str	r4, [r1, #16]
   3b3a4:	beq	3b3bc <flatcc_json_printer_uint8_field@@Base+0x7c>
   3b3a8:	ldr	r0, [r6, #20]
   3b3ac:	add	r1, r0, #1
   3b3b0:	str	r1, [r6, #20]
   3b3b4:	mov	r1, #44	; 0x2c
   3b3b8:	strb	r1, [r0]
   3b3bc:	mov	r0, r6
   3b3c0:	mov	r1, r3
   3b3c4:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3b3c8:	ldr	r0, [r6, #20]
   3b3cc:	mov	r1, #0
   3b3d0:	cmp	r5, #100	; 0x64
   3b3d4:	bcc	3b420 <flatcc_json_printer_uint8_field@@Base+0xe0>
   3b3d8:	strb	r1, [r0, #3]
   3b3dc:	movw	r1, #34079	; 0x851f
   3b3e0:	movt	r1, #20971	; 0x51eb
   3b3e4:	umull	r1, r2, r5, r1
   3b3e8:	mov	r1, #48	; 0x30
   3b3ec:	orr	r1, r1, r2, lsr #5
   3b3f0:	strb	r1, [r0]
   3b3f4:	lsr	r1, r2, #5
   3b3f8:	mov	r2, #100	; 0x64
   3b3fc:	mls	r1, r1, r2, r5
   3b400:	movw	r2, #48464	; 0xbd50
   3b404:	movt	r2, #4
   3b408:	uxtb	r1, r1
   3b40c:	add	r1, r2, r1, lsl #1
   3b410:	ldrh	r1, [r1]
   3b414:	strh	r1, [r0, #1]
   3b418:	mov	r0, #3
   3b41c:	b	3b470 <flatcc_json_printer_uint8_field@@Base+0x130>
   3b420:	cmp	r5, #10
   3b424:	bcc	3b460 <flatcc_json_printer_uint8_field@@Base+0x120>
   3b428:	strb	r1, [r0, #2]
   3b42c:	movw	r1, #34079	; 0x851f
   3b430:	movt	r1, #20971	; 0x51eb
   3b434:	umull	r1, r2, r5, r1
   3b438:	lsr	r1, r2, #5
   3b43c:	mov	r2, #100	; 0x64
   3b440:	mls	r1, r1, r2, r5
   3b444:	movw	r2, #48464	; 0xbd50
   3b448:	movt	r2, #4
   3b44c:	add	r1, r2, r1, lsl #1
   3b450:	ldrh	r1, [r1]
   3b454:	strh	r1, [r0]
   3b458:	mov	r0, #2
   3b45c:	b	3b470 <flatcc_json_printer_uint8_field@@Base+0x130>
   3b460:	strb	r1, [r0, #1]
   3b464:	add	r1, r5, #48	; 0x30
   3b468:	strb	r1, [r0]
   3b46c:	mov	r0, #1
   3b470:	ldr	r1, [r6, #20]
   3b474:	add	r0, r1, r0
   3b478:	str	r0, [r6, #20]
   3b47c:	pop	{r4, r5, r6, sl, fp, pc}
   3b480:	ldrb	r5, [r2]
   3b484:	cmp	r5, r0
   3b488:	bne	3b390 <flatcc_json_printer_uint8_field@@Base+0x50>
   3b48c:	ldrb	r2, [r6, #28]
   3b490:	mov	r5, r0
   3b494:	cmp	r2, #0
   3b498:	popne	{r4, r5, r6, sl, fp, pc}
   3b49c:	b	3b390 <flatcc_json_printer_uint8_field@@Base+0x50>

0003b4a0 <flatcc_json_printer_uint16_field@@Base>:
   3b4a0:	push	{r4, r5, r6, sl, fp, lr}
   3b4a4:	add	fp, sp, #16
   3b4a8:	mov	r4, r0
   3b4ac:	mov	r0, #4
   3b4b0:	ldr	r5, [r1, #8]
   3b4b4:	add	r2, r0, r2, lsl #1
   3b4b8:	ldr	r0, [fp, #12]
   3b4bc:	cmp	r2, r5
   3b4c0:	bge	3b4e0 <flatcc_json_printer_uint16_field@@Base+0x40>
   3b4c4:	ldr	r5, [r1, #4]
   3b4c8:	add	r2, r5, r2
   3b4cc:	ldrh	r2, [r2]
   3b4d0:	cmp	r2, #0
   3b4d4:	ldrne	r5, [r1]
   3b4d8:	addsne	r2, r5, r2
   3b4dc:	bne	3b544 <flatcc_json_printer_uint16_field@@Base+0xa4>
   3b4e0:	ldrb	r2, [r4, #29]
   3b4e4:	mov	r6, r0
   3b4e8:	cmp	r2, #0
   3b4ec:	beq	3b540 <flatcc_json_printer_uint16_field@@Base+0xa0>
   3b4f0:	ldr	r0, [r1, #16]
   3b4f4:	ldr	r2, [fp, #8]
   3b4f8:	add	r5, r0, #1
   3b4fc:	cmp	r0, #0
   3b500:	str	r5, [r1, #16]
   3b504:	beq	3b51c <flatcc_json_printer_uint16_field@@Base+0x7c>
   3b508:	ldr	r0, [r4, #20]
   3b50c:	add	r1, r0, #1
   3b510:	str	r1, [r4, #20]
   3b514:	mov	r1, #44	; 0x2c
   3b518:	strb	r1, [r0]
   3b51c:	mov	r0, r4
   3b520:	mov	r1, r3
   3b524:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3b528:	ldr	r1, [r4, #20]
   3b52c:	mov	r0, r6
   3b530:	bl	3a0b4 <flatcc_json_printer_uint16@@Base+0x2c>
   3b534:	ldr	r1, [r4, #20]
   3b538:	add	r0, r1, r0
   3b53c:	str	r0, [r4, #20]
   3b540:	pop	{r4, r5, r6, sl, fp, pc}
   3b544:	ldrh	r6, [r2]
   3b548:	cmp	r6, r0
   3b54c:	bne	3b4f0 <flatcc_json_printer_uint16_field@@Base+0x50>
   3b550:	ldrb	r2, [r4, #28]
   3b554:	mov	r6, r0
   3b558:	cmp	r2, #0
   3b55c:	popne	{r4, r5, r6, sl, fp, pc}
   3b560:	b	3b4f0 <flatcc_json_printer_uint16_field@@Base+0x50>

0003b564 <flatcc_json_printer_uint32_field@@Base>:
   3b564:	push	{r4, r5, r6, sl, fp, lr}
   3b568:	add	fp, sp, #16
   3b56c:	mov	r4, r0
   3b570:	mov	r0, #4
   3b574:	ldr	r5, [r1, #8]
   3b578:	add	r2, r0, r2, lsl #1
   3b57c:	ldr	r0, [fp, #12]
   3b580:	cmp	r2, r5
   3b584:	bge	3b5a4 <flatcc_json_printer_uint32_field@@Base+0x40>
   3b588:	ldr	r5, [r1, #4]
   3b58c:	add	r2, r5, r2
   3b590:	ldrh	r2, [r2]
   3b594:	cmp	r2, #0
   3b598:	ldrne	r5, [r1]
   3b59c:	addsne	r2, r5, r2
   3b5a0:	bne	3b608 <flatcc_json_printer_uint32_field@@Base+0xa4>
   3b5a4:	ldrb	r2, [r4, #29]
   3b5a8:	mov	r6, r0
   3b5ac:	cmp	r2, #0
   3b5b0:	beq	3b604 <flatcc_json_printer_uint32_field@@Base+0xa0>
   3b5b4:	ldr	r0, [r1, #16]
   3b5b8:	ldr	r2, [fp, #8]
   3b5bc:	add	r5, r0, #1
   3b5c0:	cmp	r0, #0
   3b5c4:	str	r5, [r1, #16]
   3b5c8:	beq	3b5e0 <flatcc_json_printer_uint32_field@@Base+0x7c>
   3b5cc:	ldr	r0, [r4, #20]
   3b5d0:	add	r1, r0, #1
   3b5d4:	str	r1, [r4, #20]
   3b5d8:	mov	r1, #44	; 0x2c
   3b5dc:	strb	r1, [r0]
   3b5e0:	mov	r0, r4
   3b5e4:	mov	r1, r3
   3b5e8:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3b5ec:	ldr	r1, [r4, #20]
   3b5f0:	mov	r0, r6
   3b5f4:	bl	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3b5f8:	ldr	r1, [r4, #20]
   3b5fc:	add	r0, r1, r0
   3b600:	str	r0, [r4, #20]
   3b604:	pop	{r4, r5, r6, sl, fp, pc}
   3b608:	ldr	r6, [r2]
   3b60c:	cmp	r6, r0
   3b610:	bne	3b5b4 <flatcc_json_printer_uint32_field@@Base+0x50>
   3b614:	ldrb	r2, [r4, #28]
   3b618:	mov	r6, r0
   3b61c:	cmp	r2, #0
   3b620:	popne	{r4, r5, r6, sl, fp, pc}
   3b624:	b	3b5b4 <flatcc_json_printer_uint32_field@@Base+0x50>

0003b628 <flatcc_json_printer_uint64_field@@Base>:
   3b628:	push	{r4, r6, r7, r8, fp, lr}
   3b62c:	add	fp, sp, #16
   3b630:	mov	r4, r0
   3b634:	mov	r0, #4
   3b638:	ldr	r6, [r1, #8]
   3b63c:	ldr	lr, [fp, #20]
   3b640:	add	r7, r0, r2, lsl #1
   3b644:	ldr	r2, [fp, #16]
   3b648:	cmp	r7, r6
   3b64c:	bge	3b66c <flatcc_json_printer_uint64_field@@Base+0x44>
   3b650:	ldr	r6, [r1, #4]
   3b654:	add	r7, r6, r7
   3b658:	ldrh	r7, [r7]
   3b65c:	cmp	r7, #0
   3b660:	ldrne	r6, [r1]
   3b664:	addsne	r7, r6, r7
   3b668:	bne	3b6d8 <flatcc_json_printer_uint64_field@@Base+0xb0>
   3b66c:	ldrb	r0, [r4, #29]
   3b670:	mov	r8, r2
   3b674:	mov	r7, lr
   3b678:	cmp	r0, #0
   3b67c:	beq	3b6d4 <flatcc_json_printer_uint64_field@@Base+0xac>
   3b680:	ldr	r0, [r1, #16]
   3b684:	ldr	r2, [fp, #8]
   3b688:	add	r6, r0, #1
   3b68c:	cmp	r0, #0
   3b690:	str	r6, [r1, #16]
   3b694:	beq	3b6ac <flatcc_json_printer_uint64_field@@Base+0x84>
   3b698:	ldr	r0, [r4, #20]
   3b69c:	add	r1, r0, #1
   3b6a0:	str	r1, [r4, #20]
   3b6a4:	mov	r1, #44	; 0x2c
   3b6a8:	strb	r1, [r0]
   3b6ac:	mov	r0, r4
   3b6b0:	mov	r1, r3
   3b6b4:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3b6b8:	ldr	r2, [r4, #20]
   3b6bc:	mov	r0, r8
   3b6c0:	mov	r1, r7
   3b6c4:	bl	3a5b8 <flatcc_json_printer_uint64@@Base+0x30>
   3b6c8:	ldr	r1, [r4, #20]
   3b6cc:	add	r0, r1, r0
   3b6d0:	str	r0, [r4, #20]
   3b6d4:	pop	{r4, r6, r7, r8, fp, pc}
   3b6d8:	ldr	r8, [r7]
   3b6dc:	ldr	r7, [r7, #4]
   3b6e0:	eor	ip, r7, lr
   3b6e4:	eor	r0, r8, r2
   3b6e8:	orrs	r0, r0, ip
   3b6ec:	bne	3b680 <flatcc_json_printer_uint64_field@@Base+0x58>
   3b6f0:	ldrb	r0, [r4, #28]
   3b6f4:	mov	r8, r2
   3b6f8:	mov	r7, lr
   3b6fc:	cmp	r0, #0
   3b700:	popne	{r4, r6, r7, r8, fp, pc}
   3b704:	b	3b680 <flatcc_json_printer_uint64_field@@Base+0x58>

0003b708 <flatcc_json_printer_int8_field@@Base>:
   3b708:	push	{r4, r5, r6, sl, fp, lr}
   3b70c:	add	fp, sp, #16
   3b710:	mov	r6, r0
   3b714:	mov	r0, #4
   3b718:	ldr	r5, [r1, #8]
   3b71c:	add	r2, r0, r2, lsl #1
   3b720:	ldr	r0, [fp, #12]
   3b724:	cmp	r2, r5
   3b728:	bge	3b748 <flatcc_json_printer_int8_field@@Base+0x40>
   3b72c:	ldr	r5, [r1, #4]
   3b730:	add	r2, r5, r2
   3b734:	ldrh	r2, [r2]
   3b738:	cmp	r2, #0
   3b73c:	ldrne	r5, [r1]
   3b740:	addsne	r2, r5, r2
   3b744:	bne	3b874 <flatcc_json_printer_int8_field@@Base+0x16c>
   3b748:	ldrb	r2, [r6, #29]
   3b74c:	mov	r5, r0
   3b750:	cmp	r2, #0
   3b754:	beq	3b870 <flatcc_json_printer_int8_field@@Base+0x168>
   3b758:	ldr	r0, [r1, #16]
   3b75c:	ldr	r2, [fp, #8]
   3b760:	add	r4, r0, #1
   3b764:	cmp	r0, #0
   3b768:	str	r4, [r1, #16]
   3b76c:	beq	3b784 <flatcc_json_printer_int8_field@@Base+0x7c>
   3b770:	ldr	r0, [r6, #20]
   3b774:	add	r1, r0, #1
   3b778:	str	r1, [r6, #20]
   3b77c:	mov	r1, #44	; 0x2c
   3b780:	strb	r1, [r0]
   3b784:	mov	r0, r6
   3b788:	mov	r1, r3
   3b78c:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3b790:	sxtb	r2, r5
   3b794:	ldr	r0, [r6, #20]
   3b798:	uxtb	r1, r5
   3b79c:	cmn	r2, #1
   3b7a0:	lsr	r1, r1, #7
   3b7a4:	movle	r2, #45	; 0x2d
   3b7a8:	rsble	r5, r5, #0
   3b7ac:	strble	r2, [r0], #1
   3b7b0:	uxtb	r2, r5
   3b7b4:	cmp	r2, #100	; 0x64
   3b7b8:	bcc	3b808 <flatcc_json_printer_int8_field@@Base+0x100>
   3b7bc:	mov	r3, #0
   3b7c0:	strb	r3, [r0, #3]
   3b7c4:	movw	r3, #34079	; 0x851f
   3b7c8:	movt	r3, #20971	; 0x51eb
   3b7cc:	umull	r3, r5, r2, r3
   3b7d0:	mov	r3, #48	; 0x30
   3b7d4:	orr	r3, r3, r5, lsr #5
   3b7d8:	strb	r3, [r0]
   3b7dc:	lsr	r3, r5, #5
   3b7e0:	mov	r5, #100	; 0x64
   3b7e4:	mls	r2, r3, r5, r2
   3b7e8:	movw	r3, #48464	; 0xbd50
   3b7ec:	movt	r3, #4
   3b7f0:	uxtb	r2, r2
   3b7f4:	add	r2, r3, r2, lsl #1
   3b7f8:	ldrh	r2, [r2]
   3b7fc:	strh	r2, [r0, #1]
   3b800:	mov	r0, #3
   3b804:	b	3b860 <flatcc_json_printer_int8_field@@Base+0x158>
   3b808:	cmp	r2, #10
   3b80c:	bcc	3b84c <flatcc_json_printer_int8_field@@Base+0x144>
   3b810:	mov	r3, #0
   3b814:	strb	r3, [r0, #2]
   3b818:	movw	r3, #34079	; 0x851f
   3b81c:	movt	r3, #20971	; 0x51eb
   3b820:	umull	r3, r5, r2, r3
   3b824:	lsr	r3, r5, #5
   3b828:	mov	r5, #100	; 0x64
   3b82c:	mls	r2, r3, r5, r2
   3b830:	movw	r3, #48464	; 0xbd50
   3b834:	movt	r3, #4
   3b838:	add	r2, r3, r2, lsl #1
   3b83c:	ldrh	r2, [r2]
   3b840:	strh	r2, [r0]
   3b844:	mov	r0, #2
   3b848:	b	3b860 <flatcc_json_printer_int8_field@@Base+0x158>
   3b84c:	mov	r2, #0
   3b850:	strb	r2, [r0, #1]
   3b854:	add	r2, r5, #48	; 0x30
   3b858:	strb	r2, [r0]
   3b85c:	mov	r0, #1
   3b860:	add	r0, r0, r1
   3b864:	ldr	r1, [r6, #20]
   3b868:	add	r0, r1, r0
   3b86c:	str	r0, [r6, #20]
   3b870:	pop	{r4, r5, r6, sl, fp, pc}
   3b874:	ldrb	r5, [r2]
   3b878:	uxtb	r2, r0
   3b87c:	cmp	r5, r2
   3b880:	bne	3b758 <flatcc_json_printer_int8_field@@Base+0x50>
   3b884:	ldrb	r2, [r6, #28]
   3b888:	mov	r5, r0
   3b88c:	cmp	r2, #0
   3b890:	popne	{r4, r5, r6, sl, fp, pc}
   3b894:	b	3b758 <flatcc_json_printer_int8_field@@Base+0x50>

0003b898 <flatcc_json_printer_int16_field@@Base>:
   3b898:	push	{r4, r5, r6, sl, fp, lr}
   3b89c:	add	fp, sp, #16
   3b8a0:	mov	r4, r0
   3b8a4:	mov	r0, #4
   3b8a8:	ldr	r6, [r1, #8]
   3b8ac:	add	r2, r0, r2, lsl #1
   3b8b0:	ldr	r0, [fp, #12]
   3b8b4:	cmp	r2, r6
   3b8b8:	bge	3b8d8 <flatcc_json_printer_int16_field@@Base+0x40>
   3b8bc:	ldr	r6, [r1, #4]
   3b8c0:	add	r2, r6, r2
   3b8c4:	ldrh	r2, [r2]
   3b8c8:	cmp	r2, #0
   3b8cc:	ldrne	r6, [r1]
   3b8d0:	addsne	r2, r6, r2
   3b8d4:	bne	3b95c <flatcc_json_printer_int16_field@@Base+0xc4>
   3b8d8:	ldrb	r2, [r4, #29]
   3b8dc:	mov	r5, r0
   3b8e0:	cmp	r2, #0
   3b8e4:	beq	3b958 <flatcc_json_printer_int16_field@@Base+0xc0>
   3b8e8:	ldr	r0, [r1, #16]
   3b8ec:	ldr	r2, [fp, #8]
   3b8f0:	add	r6, r0, #1
   3b8f4:	cmp	r0, #0
   3b8f8:	str	r6, [r1, #16]
   3b8fc:	beq	3b914 <flatcc_json_printer_int16_field@@Base+0x7c>
   3b900:	ldr	r0, [r4, #20]
   3b904:	add	r1, r0, #1
   3b908:	str	r1, [r4, #20]
   3b90c:	mov	r1, #44	; 0x2c
   3b910:	strb	r1, [r0]
   3b914:	mov	r0, r4
   3b918:	mov	r1, r3
   3b91c:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3b920:	uxth	r0, r5
   3b924:	ldr	r1, [r4, #20]
   3b928:	lsr	r6, r0, #15
   3b92c:	sxth	r0, r5
   3b930:	cmn	r0, #1
   3b934:	movle	r0, #45	; 0x2d
   3b938:	rsble	r5, r5, #0
   3b93c:	strble	r0, [r1], #1
   3b940:	uxth	r0, r5
   3b944:	bl	3a0b4 <flatcc_json_printer_uint16@@Base+0x2c>
   3b948:	ldr	r1, [r4, #20]
   3b94c:	add	r0, r0, r6
   3b950:	add	r0, r1, r0
   3b954:	str	r0, [r4, #20]
   3b958:	pop	{r4, r5, r6, sl, fp, pc}
   3b95c:	ldrh	r5, [r2]
   3b960:	uxth	r2, r0
   3b964:	cmp	r5, r2
   3b968:	bne	3b8e8 <flatcc_json_printer_int16_field@@Base+0x50>
   3b96c:	ldrb	r2, [r4, #28]
   3b970:	mov	r5, r0
   3b974:	cmp	r2, #0
   3b978:	popne	{r4, r5, r6, sl, fp, pc}
   3b97c:	b	3b8e8 <flatcc_json_printer_int16_field@@Base+0x50>

0003b980 <flatcc_json_printer_int32_field@@Base>:
   3b980:	push	{r4, r5, r6, sl, fp, lr}
   3b984:	add	fp, sp, #16
   3b988:	mov	r4, r0
   3b98c:	mov	r0, #4
   3b990:	ldr	r6, [r1, #8]
   3b994:	add	r2, r0, r2, lsl #1
   3b998:	ldr	r0, [fp, #12]
   3b99c:	cmp	r2, r6
   3b9a0:	bge	3b9c0 <flatcc_json_printer_int32_field@@Base+0x40>
   3b9a4:	ldr	r6, [r1, #4]
   3b9a8:	add	r2, r6, r2
   3b9ac:	ldrh	r2, [r2]
   3b9b0:	cmp	r2, #0
   3b9b4:	ldrne	r6, [r1]
   3b9b8:	addsne	r2, r6, r2
   3b9bc:	bne	3ba3c <flatcc_json_printer_int32_field@@Base+0xbc>
   3b9c0:	ldrb	r2, [r4, #29]
   3b9c4:	mov	r5, r0
   3b9c8:	cmp	r2, #0
   3b9cc:	beq	3ba38 <flatcc_json_printer_int32_field@@Base+0xb8>
   3b9d0:	ldr	r0, [r1, #16]
   3b9d4:	ldr	r2, [fp, #8]
   3b9d8:	add	r6, r0, #1
   3b9dc:	cmp	r0, #0
   3b9e0:	str	r6, [r1, #16]
   3b9e4:	beq	3b9fc <flatcc_json_printer_int32_field@@Base+0x7c>
   3b9e8:	ldr	r0, [r4, #20]
   3b9ec:	add	r1, r0, #1
   3b9f0:	str	r1, [r4, #20]
   3b9f4:	mov	r1, #44	; 0x2c
   3b9f8:	strb	r1, [r0]
   3b9fc:	mov	r0, r4
   3ba00:	mov	r1, r3
   3ba04:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3ba08:	ldr	r1, [r4, #20]
   3ba0c:	cmn	r5, #1
   3ba10:	lsr	r6, r5, #31
   3ba14:	movle	r0, #45	; 0x2d
   3ba18:	rsble	r5, r5, #0
   3ba1c:	strble	r0, [r1], #1
   3ba20:	mov	r0, r5
   3ba24:	bl	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3ba28:	ldr	r1, [r4, #20]
   3ba2c:	add	r0, r0, r6
   3ba30:	add	r0, r1, r0
   3ba34:	str	r0, [r4, #20]
   3ba38:	pop	{r4, r5, r6, sl, fp, pc}
   3ba3c:	ldr	r5, [r2]
   3ba40:	cmp	r5, r0
   3ba44:	bne	3b9d0 <flatcc_json_printer_int32_field@@Base+0x50>
   3ba48:	ldrb	r2, [r4, #28]
   3ba4c:	mov	r5, r0
   3ba50:	cmp	r2, #0
   3ba54:	popne	{r4, r5, r6, sl, fp, pc}
   3ba58:	b	3b9d0 <flatcc_json_printer_int32_field@@Base+0x50>

0003ba5c <flatcc_json_printer_int64_field@@Base>:
   3ba5c:	push	{r4, r5, r6, r7, fp, lr}
   3ba60:	add	fp, sp, #16
   3ba64:	mov	r4, r0
   3ba68:	mov	r0, #4
   3ba6c:	ldr	r6, [r1, #8]
   3ba70:	add	r7, r0, r2, lsl #1
   3ba74:	ldr	r0, [fp, #20]
   3ba78:	ldr	r2, [fp, #16]
   3ba7c:	cmp	r7, r6
   3ba80:	bge	3baa0 <flatcc_json_printer_int64_field@@Base+0x44>
   3ba84:	ldr	r6, [r1, #4]
   3ba88:	add	r7, r6, r7
   3ba8c:	ldrh	r7, [r7]
   3ba90:	cmp	r7, #0
   3ba94:	ldrne	r6, [r1]
   3ba98:	addsne	r7, r6, r7
   3ba9c:	bne	3bb2c <flatcc_json_printer_int64_field@@Base+0xd0>
   3baa0:	ldrb	r7, [r4, #29]
   3baa4:	mov	r6, r2
   3baa8:	cmp	r7, #0
   3baac:	mov	r7, r0
   3bab0:	beq	3bb28 <flatcc_json_printer_int64_field@@Base+0xcc>
   3bab4:	ldr	r0, [r1, #16]
   3bab8:	ldr	r2, [fp, #8]
   3babc:	add	r5, r0, #1
   3bac0:	cmp	r0, #0
   3bac4:	str	r5, [r1, #16]
   3bac8:	beq	3bae0 <flatcc_json_printer_int64_field@@Base+0x84>
   3bacc:	ldr	r0, [r4, #20]
   3bad0:	add	r1, r0, #1
   3bad4:	str	r1, [r4, #20]
   3bad8:	mov	r1, #44	; 0x2c
   3badc:	strb	r1, [r0]
   3bae0:	mov	r0, r4
   3bae4:	mov	r1, r3
   3bae8:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3baec:	ldr	r2, [r4, #20]
   3baf0:	lsr	r5, r7, #31
   3baf4:	cmn	r7, #1
   3baf8:	bgt	3bb0c <flatcc_json_printer_int64_field@@Base+0xb0>
   3bafc:	mov	r0, #45	; 0x2d
   3bb00:	rsbs	r6, r6, #0
   3bb04:	strb	r0, [r2], #1
   3bb08:	rsc	r7, r7, #0
   3bb0c:	mov	r0, r6
   3bb10:	mov	r1, r7
   3bb14:	bl	3a5b8 <flatcc_json_printer_uint64@@Base+0x30>
   3bb18:	ldr	r1, [r4, #20]
   3bb1c:	add	r0, r0, r5
   3bb20:	add	r0, r1, r0
   3bb24:	str	r0, [r4, #20]
   3bb28:	pop	{r4, r5, r6, r7, fp, pc}
   3bb2c:	ldrd	r6, [r7]
   3bb30:	eor	ip, r7, r0
   3bb34:	eor	r5, r6, r2
   3bb38:	orrs	r5, r5, ip
   3bb3c:	bne	3bab4 <flatcc_json_printer_int64_field@@Base+0x58>
   3bb40:	ldrb	r7, [r4, #28]
   3bb44:	mov	r6, r2
   3bb48:	cmp	r7, #0
   3bb4c:	mov	r7, r0
   3bb50:	popne	{r4, r5, r6, r7, fp, pc}
   3bb54:	b	3bab4 <flatcc_json_printer_int64_field@@Base+0x58>

0003bb58 <flatcc_json_printer_bool_field@@Base>:
   3bb58:	push	{r4, r5, r6, sl, fp, lr}
   3bb5c:	add	fp, sp, #16
   3bb60:	mov	r4, r0
   3bb64:	mov	r0, #4
   3bb68:	ldr	r5, [r1, #8]
   3bb6c:	add	r2, r0, r2, lsl #1
   3bb70:	ldr	r0, [fp, #12]
   3bb74:	cmp	r2, r5
   3bb78:	bge	3bb98 <flatcc_json_printer_bool_field@@Base+0x40>
   3bb7c:	ldr	r5, [r1, #4]
   3bb80:	add	r2, r5, r2
   3bb84:	ldrh	r2, [r2]
   3bb88:	cmp	r2, #0
   3bb8c:	ldrne	r5, [r1]
   3bb90:	addsne	r2, r5, r2
   3bb94:	bne	3bc30 <flatcc_json_printer_bool_field@@Base+0xd8>
   3bb98:	ldrb	r2, [r4, #29]
   3bb9c:	mov	r6, r0
   3bba0:	cmp	r2, #0
   3bba4:	beq	3bc2c <flatcc_json_printer_bool_field@@Base+0xd4>
   3bba8:	ldr	r0, [r1, #16]
   3bbac:	ldr	r2, [fp, #8]
   3bbb0:	add	r5, r0, #1
   3bbb4:	cmp	r0, #0
   3bbb8:	str	r5, [r1, #16]
   3bbbc:	beq	3bbd4 <flatcc_json_printer_bool_field@@Base+0x7c>
   3bbc0:	ldr	r0, [r4, #20]
   3bbc4:	add	r1, r0, #1
   3bbc8:	str	r1, [r4, #20]
   3bbcc:	mov	r1, #44	; 0x2c
   3bbd0:	strb	r1, [r0]
   3bbd4:	mov	r0, r4
   3bbd8:	mov	r1, r3
   3bbdc:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3bbe0:	ldr	r0, [r4, #20]
   3bbe4:	cmp	r6, #0
   3bbe8:	beq	3bc08 <flatcc_json_printer_bool_field@@Base+0xb0>
   3bbec:	mov	r1, #0
   3bbf0:	strb	r1, [r0, #4]
   3bbf4:	movw	r1, #29300	; 0x7274
   3bbf8:	movt	r1, #25973	; 0x6575
   3bbfc:	str	r1, [r0]
   3bc00:	mov	r0, #4
   3bc04:	b	3bc20 <flatcc_json_printer_bool_field@@Base+0xc8>
   3bc08:	mov	r1, #101	; 0x65
   3bc0c:	strh	r1, [r0, #4]
   3bc10:	movw	r1, #24934	; 0x6166
   3bc14:	movt	r1, #29548	; 0x736c
   3bc18:	str	r1, [r0]
   3bc1c:	mov	r0, #5
   3bc20:	ldr	r1, [r4, #20]
   3bc24:	add	r0, r1, r0
   3bc28:	str	r0, [r4, #20]
   3bc2c:	pop	{r4, r5, r6, sl, fp, pc}
   3bc30:	ldrb	r6, [r2]
   3bc34:	cmp	r6, r0
   3bc38:	bne	3bba8 <flatcc_json_printer_bool_field@@Base+0x50>
   3bc3c:	ldrb	r2, [r4, #28]
   3bc40:	mov	r6, r0
   3bc44:	cmp	r2, #0
   3bc48:	popne	{r4, r5, r6, sl, fp, pc}
   3bc4c:	b	3bba8 <flatcc_json_printer_bool_field@@Base+0x50>

0003bc50 <flatcc_json_printer_float_field@@Base>:
   3bc50:	push	{r4, r5, fp, lr}
   3bc54:	add	fp, sp, #8
   3bc58:	vpush	{d8}
   3bc5c:	mov	r5, r0
   3bc60:	mov	r0, #4
   3bc64:	vmov.f32	s16, s0
   3bc68:	add	r0, r0, r2, lsl #1
   3bc6c:	ldr	r2, [r1, #8]
   3bc70:	cmp	r0, r2
   3bc74:	bge	3bc94 <flatcc_json_printer_float_field@@Base+0x44>
   3bc78:	ldr	r2, [r1, #4]
   3bc7c:	add	r0, r2, r0
   3bc80:	ldrh	r0, [r0]
   3bc84:	cmp	r0, #0
   3bc88:	ldrne	r2, [r1]
   3bc8c:	addsne	r0, r2, r0
   3bc90:	bne	3bcf8 <flatcc_json_printer_float_field@@Base+0xa8>
   3bc94:	ldrb	r0, [r5, #29]
   3bc98:	cmp	r0, #0
   3bc9c:	beq	3bcf0 <flatcc_json_printer_float_field@@Base+0xa0>
   3bca0:	ldr	r0, [r1, #16]
   3bca4:	ldr	r2, [fp, #8]
   3bca8:	add	r4, r0, #1
   3bcac:	cmp	r0, #0
   3bcb0:	str	r4, [r1, #16]
   3bcb4:	beq	3bccc <flatcc_json_printer_float_field@@Base+0x7c>
   3bcb8:	ldr	r0, [r5, #20]
   3bcbc:	add	r1, r0, #1
   3bcc0:	str	r1, [r5, #20]
   3bcc4:	mov	r1, #44	; 0x2c
   3bcc8:	strb	r1, [r0]
   3bccc:	mov	r0, r5
   3bcd0:	mov	r1, r3
   3bcd4:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3bcd8:	vcvt.f64.f32	d0, s16
   3bcdc:	ldr	r0, [r5, #20]
   3bce0:	bl	38b88 <flatcc_json_printer_fmt_float@@Base+0x8>
   3bce4:	ldr	r1, [r5, #20]
   3bce8:	add	r0, r1, r0
   3bcec:	str	r0, [r5, #20]
   3bcf0:	vpop	{d8}
   3bcf4:	pop	{r4, r5, fp, pc}
   3bcf8:	vldr	s0, [r0]
   3bcfc:	vcmp.f32	s0, s16
   3bd00:	vmrs	APSR_nzcv, fpscr
   3bd04:	bne	3bd1c <flatcc_json_printer_float_field@@Base+0xcc>
   3bd08:	ldrb	r0, [r5, #28]
   3bd0c:	vmov.f32	s16, s0
   3bd10:	cmp	r0, #0
   3bd14:	bne	3bcf0 <flatcc_json_printer_float_field@@Base+0xa0>
   3bd18:	b	3bca0 <flatcc_json_printer_float_field@@Base+0x50>
   3bd1c:	vmov.f32	s16, s0
   3bd20:	b	3bca0 <flatcc_json_printer_float_field@@Base+0x50>

0003bd24 <flatcc_json_printer_double_field@@Base>:
   3bd24:	push	{r4, r5, fp, lr}
   3bd28:	add	fp, sp, #8
   3bd2c:	vpush	{d8}
   3bd30:	mov	r5, r0
   3bd34:	mov	r0, #4
   3bd38:	vmov.f64	d8, d0
   3bd3c:	add	r0, r0, r2, lsl #1
   3bd40:	ldr	r2, [r1, #8]
   3bd44:	cmp	r0, r2
   3bd48:	bge	3bd68 <flatcc_json_printer_double_field@@Base+0x44>
   3bd4c:	ldr	r2, [r1, #4]
   3bd50:	add	r0, r2, r0
   3bd54:	ldrh	r0, [r0]
   3bd58:	cmp	r0, #0
   3bd5c:	ldrne	r2, [r1]
   3bd60:	addsne	r0, r2, r0
   3bd64:	bne	3bdcc <flatcc_json_printer_double_field@@Base+0xa8>
   3bd68:	ldrb	r0, [r5, #29]
   3bd6c:	cmp	r0, #0
   3bd70:	beq	3bdc4 <flatcc_json_printer_double_field@@Base+0xa0>
   3bd74:	ldr	r0, [r1, #16]
   3bd78:	ldr	r2, [fp, #8]
   3bd7c:	add	r4, r0, #1
   3bd80:	cmp	r0, #0
   3bd84:	str	r4, [r1, #16]
   3bd88:	beq	3bda0 <flatcc_json_printer_double_field@@Base+0x7c>
   3bd8c:	ldr	r0, [r5, #20]
   3bd90:	add	r1, r0, #1
   3bd94:	str	r1, [r5, #20]
   3bd98:	mov	r1, #44	; 0x2c
   3bd9c:	strb	r1, [r0]
   3bda0:	mov	r0, r5
   3bda4:	mov	r1, r3
   3bda8:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3bdac:	ldr	r0, [r5, #20]
   3bdb0:	vmov.f64	d0, d8
   3bdb4:	bl	38b88 <flatcc_json_printer_fmt_float@@Base+0x8>
   3bdb8:	ldr	r1, [r5, #20]
   3bdbc:	add	r0, r1, r0
   3bdc0:	str	r0, [r5, #20]
   3bdc4:	vpop	{d8}
   3bdc8:	pop	{r4, r5, fp, pc}
   3bdcc:	vldr	d16, [r0]
   3bdd0:	vcmp.f64	d16, d8
   3bdd4:	vmrs	APSR_nzcv, fpscr
   3bdd8:	bne	3bdf0 <flatcc_json_printer_double_field@@Base+0xcc>
   3bddc:	ldrb	r0, [r5, #28]
   3bde0:	vmov.f64	d8, d16
   3bde4:	cmp	r0, #0
   3bde8:	bne	3bdc4 <flatcc_json_printer_double_field@@Base+0xa0>
   3bdec:	b	3bd74 <flatcc_json_printer_double_field@@Base+0x50>
   3bdf0:	vmov.f64	d8, d16
   3bdf4:	b	3bd74 <flatcc_json_printer_double_field@@Base+0x50>

0003bdf8 <flatcc_json_printer_uint8_enum_field@@Base>:
   3bdf8:	push	{r4, r5, r6, r7, fp, lr}
   3bdfc:	add	fp, sp, #16
   3be00:	mov	r6, r0
   3be04:	mov	r0, #4
   3be08:	ldr	r4, [r1, #8]
   3be0c:	ldr	ip, [fp, #16]
   3be10:	add	r5, r0, r2, lsl #1
   3be14:	ldr	r0, [fp, #12]
   3be18:	ldr	r2, [fp, #8]
   3be1c:	cmp	r5, r4
   3be20:	bge	3be40 <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   3be24:	ldr	r4, [r1, #4]
   3be28:	add	r5, r4, r5
   3be2c:	ldrh	r5, [r5]
   3be30:	cmp	r5, #0
   3be34:	ldrne	r4, [r1]
   3be38:	addsne	r5, r4, r5
   3be3c:	bne	3bf40 <flatcc_json_printer_uint8_enum_field@@Base+0x148>
   3be40:	ldrb	r5, [r6, #29]
   3be44:	cmp	r5, #0
   3be48:	mov	r5, r0
   3be4c:	beq	3bf7c <flatcc_json_printer_uint8_enum_field@@Base+0x184>
   3be50:	ldr	r0, [r1, #16]
   3be54:	mov	r7, ip
   3be58:	add	r4, r0, #1
   3be5c:	cmp	r0, #0
   3be60:	str	r4, [r1, #16]
   3be64:	beq	3be7c <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   3be68:	ldr	r0, [r6, #20]
   3be6c:	add	r1, r0, #1
   3be70:	str	r1, [r6, #20]
   3be74:	mov	r1, #44	; 0x2c
   3be78:	strb	r1, [r0]
   3be7c:	mov	r0, r6
   3be80:	mov	r1, r3
   3be84:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3be88:	ldrb	r0, [r6, #27]
   3be8c:	cmp	r0, #0
   3be90:	beq	3beec <flatcc_json_printer_uint8_enum_field@@Base+0xf4>
   3be94:	ldr	r0, [r6, #20]
   3be98:	mov	r1, #0
   3be9c:	cmp	r5, #100	; 0x64
   3bea0:	bcc	3bf00 <flatcc_json_printer_uint8_enum_field@@Base+0x108>
   3bea4:	strb	r1, [r0, #3]
   3bea8:	movw	r1, #34079	; 0x851f
   3beac:	movt	r1, #20971	; 0x51eb
   3beb0:	umull	r1, r2, r5, r1
   3beb4:	mov	r1, #48	; 0x30
   3beb8:	orr	r1, r1, r2, lsr #5
   3bebc:	strb	r1, [r0]
   3bec0:	lsr	r1, r2, #5
   3bec4:	mov	r2, #100	; 0x64
   3bec8:	mls	r1, r1, r2, r5
   3becc:	movw	r2, #48464	; 0xbd50
   3bed0:	movt	r2, #4
   3bed4:	uxtb	r1, r1
   3bed8:	add	r1, r2, r1, lsl #1
   3bedc:	ldrh	r1, [r1]
   3bee0:	strh	r1, [r0, #1]
   3bee4:	mov	r0, #3
   3bee8:	b	3bf70 <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   3beec:	mov	r0, r6
   3bef0:	mov	r1, r5
   3bef4:	mov	r2, r7
   3bef8:	pop	{r4, r5, r6, r7, fp, lr}
   3befc:	bx	r2
   3bf00:	cmp	r5, #10
   3bf04:	bcc	3bf60 <flatcc_json_printer_uint8_enum_field@@Base+0x168>
   3bf08:	strb	r1, [r0, #2]
   3bf0c:	movw	r1, #34079	; 0x851f
   3bf10:	movt	r1, #20971	; 0x51eb
   3bf14:	umull	r1, r2, r5, r1
   3bf18:	lsr	r1, r2, #5
   3bf1c:	mov	r2, #100	; 0x64
   3bf20:	mls	r1, r1, r2, r5
   3bf24:	movw	r2, #48464	; 0xbd50
   3bf28:	movt	r2, #4
   3bf2c:	add	r1, r2, r1, lsl #1
   3bf30:	ldrh	r1, [r1]
   3bf34:	strh	r1, [r0]
   3bf38:	mov	r0, #2
   3bf3c:	b	3bf70 <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   3bf40:	ldrb	r5, [r5]
   3bf44:	cmp	r5, r0
   3bf48:	bne	3be50 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   3bf4c:	ldrb	r5, [r6, #28]
   3bf50:	cmp	r5, #0
   3bf54:	mov	r5, r0
   3bf58:	popne	{r4, r5, r6, r7, fp, pc}
   3bf5c:	b	3be50 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   3bf60:	strb	r1, [r0, #1]
   3bf64:	add	r1, r5, #48	; 0x30
   3bf68:	strb	r1, [r0]
   3bf6c:	mov	r0, #1
   3bf70:	ldr	r1, [r6, #20]
   3bf74:	add	r0, r1, r0
   3bf78:	str	r0, [r6, #20]
   3bf7c:	pop	{r4, r5, r6, r7, fp, pc}

0003bf80 <flatcc_json_printer_uint16_enum_field@@Base>:
   3bf80:	push	{r4, r5, r6, r7, fp, lr}
   3bf84:	add	fp, sp, #16
   3bf88:	mov	r4, r0
   3bf8c:	mov	r0, #4
   3bf90:	ldr	r7, [fp, #16]
   3bf94:	ldr	ip, [fp, #12]
   3bf98:	add	r5, r0, r2, lsl #1
   3bf9c:	ldr	r0, [r1, #8]
   3bfa0:	ldr	r2, [fp, #8]
   3bfa4:	cmp	r5, r0
   3bfa8:	bge	3bfc8 <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   3bfac:	ldr	r0, [r1, #4]
   3bfb0:	add	r0, r0, r5
   3bfb4:	ldrh	r5, [r0]
   3bfb8:	cmp	r5, #0
   3bfbc:	ldrne	r0, [r1]
   3bfc0:	addsne	r5, r0, r5
   3bfc4:	bne	3c048 <flatcc_json_printer_uint16_enum_field@@Base+0xc8>
   3bfc8:	ldrb	r0, [r4, #29]
   3bfcc:	mov	r6, ip
   3bfd0:	cmp	r0, #0
   3bfd4:	beq	3c030 <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   3bfd8:	ldr	r0, [r1, #16]
   3bfdc:	add	r5, r0, #1
   3bfe0:	cmp	r0, #0
   3bfe4:	str	r5, [r1, #16]
   3bfe8:	beq	3c000 <flatcc_json_printer_uint16_enum_field@@Base+0x80>
   3bfec:	ldr	r0, [r4, #20]
   3bff0:	add	r1, r0, #1
   3bff4:	str	r1, [r4, #20]
   3bff8:	mov	r1, #44	; 0x2c
   3bffc:	strb	r1, [r0]
   3c000:	mov	r0, r4
   3c004:	mov	r1, r3
   3c008:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3c00c:	ldrb	r0, [r4, #27]
   3c010:	cmp	r0, #0
   3c014:	beq	3c034 <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   3c018:	ldr	r1, [r4, #20]
   3c01c:	mov	r0, r6
   3c020:	bl	3a0b4 <flatcc_json_printer_uint16@@Base+0x2c>
   3c024:	ldr	r1, [r4, #20]
   3c028:	add	r0, r1, r0
   3c02c:	str	r0, [r4, #20]
   3c030:	pop	{r4, r5, r6, r7, fp, pc}
   3c034:	mov	r0, r4
   3c038:	mov	r1, r6
   3c03c:	mov	r2, r7
   3c040:	pop	{r4, r5, r6, r7, fp, lr}
   3c044:	bx	r2
   3c048:	ldrh	r6, [r5]
   3c04c:	cmp	r6, ip
   3c050:	bne	3bfd8 <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   3c054:	ldrb	r0, [r4, #28]
   3c058:	mov	r6, ip
   3c05c:	cmp	r0, #0
   3c060:	popne	{r4, r5, r6, r7, fp, pc}
   3c064:	b	3bfd8 <flatcc_json_printer_uint16_enum_field@@Base+0x58>

0003c068 <flatcc_json_printer_uint32_enum_field@@Base>:
   3c068:	push	{r4, r5, r6, r7, fp, lr}
   3c06c:	add	fp, sp, #16
   3c070:	mov	r4, r0
   3c074:	mov	r0, #4
   3c078:	ldr	r7, [fp, #16]
   3c07c:	ldr	ip, [fp, #12]
   3c080:	add	r5, r0, r2, lsl #1
   3c084:	ldr	r0, [r1, #8]
   3c088:	ldr	r2, [fp, #8]
   3c08c:	cmp	r5, r0
   3c090:	bge	3c0b0 <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   3c094:	ldr	r0, [r1, #4]
   3c098:	add	r0, r0, r5
   3c09c:	ldrh	r5, [r0]
   3c0a0:	cmp	r5, #0
   3c0a4:	ldrne	r0, [r1]
   3c0a8:	addsne	r5, r0, r5
   3c0ac:	bne	3c130 <flatcc_json_printer_uint32_enum_field@@Base+0xc8>
   3c0b0:	ldrb	r0, [r4, #29]
   3c0b4:	mov	r6, ip
   3c0b8:	cmp	r0, #0
   3c0bc:	beq	3c118 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   3c0c0:	ldr	r0, [r1, #16]
   3c0c4:	add	r5, r0, #1
   3c0c8:	cmp	r0, #0
   3c0cc:	str	r5, [r1, #16]
   3c0d0:	beq	3c0e8 <flatcc_json_printer_uint32_enum_field@@Base+0x80>
   3c0d4:	ldr	r0, [r4, #20]
   3c0d8:	add	r1, r0, #1
   3c0dc:	str	r1, [r4, #20]
   3c0e0:	mov	r1, #44	; 0x2c
   3c0e4:	strb	r1, [r0]
   3c0e8:	mov	r0, r4
   3c0ec:	mov	r1, r3
   3c0f0:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3c0f4:	ldrb	r0, [r4, #27]
   3c0f8:	cmp	r0, #0
   3c0fc:	beq	3c11c <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   3c100:	ldr	r1, [r4, #20]
   3c104:	mov	r0, r6
   3c108:	bl	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3c10c:	ldr	r1, [r4, #20]
   3c110:	add	r0, r1, r0
   3c114:	str	r0, [r4, #20]
   3c118:	pop	{r4, r5, r6, r7, fp, pc}
   3c11c:	mov	r0, r4
   3c120:	mov	r1, r6
   3c124:	mov	r2, r7
   3c128:	pop	{r4, r5, r6, r7, fp, lr}
   3c12c:	bx	r2
   3c130:	ldr	r6, [r5]
   3c134:	cmp	r6, ip
   3c138:	bne	3c0c0 <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   3c13c:	ldrb	r0, [r4, #28]
   3c140:	mov	r6, ip
   3c144:	cmp	r0, #0
   3c148:	popne	{r4, r5, r6, r7, fp, pc}
   3c14c:	b	3c0c0 <flatcc_json_printer_uint32_enum_field@@Base+0x58>

0003c150 <flatcc_json_printer_uint64_enum_field@@Base>:
   3c150:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c154:	add	fp, sp, #24
   3c158:	mov	r4, r0
   3c15c:	mov	r0, #4
   3c160:	ldr	ip, [fp, #20]
   3c164:	ldr	r6, [fp, #16]
   3c168:	ldr	r5, [fp, #24]
   3c16c:	add	r7, r0, r2, lsl #1
   3c170:	ldr	r0, [r1, #8]
   3c174:	ldr	r2, [fp, #8]
   3c178:	cmp	r7, r0
   3c17c:	bge	3c19c <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   3c180:	ldr	r0, [r1, #4]
   3c184:	add	r0, r0, r7
   3c188:	ldrh	r7, [r0]
   3c18c:	cmp	r7, #0
   3c190:	ldrne	r0, [r1]
   3c194:	addsne	r7, r0, r7
   3c198:	bne	3c228 <flatcc_json_printer_uint64_enum_field@@Base+0xd8>
   3c19c:	ldrb	r0, [r4, #29]
   3c1a0:	mov	r8, r6
   3c1a4:	mov	r7, ip
   3c1a8:	cmp	r0, #0
   3c1ac:	beq	3c20c <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   3c1b0:	ldr	r0, [r1, #16]
   3c1b4:	add	r6, r0, #1
   3c1b8:	cmp	r0, #0
   3c1bc:	str	r6, [r1, #16]
   3c1c0:	beq	3c1d8 <flatcc_json_printer_uint64_enum_field@@Base+0x88>
   3c1c4:	ldr	r0, [r4, #20]
   3c1c8:	add	r1, r0, #1
   3c1cc:	str	r1, [r4, #20]
   3c1d0:	mov	r1, #44	; 0x2c
   3c1d4:	strb	r1, [r0]
   3c1d8:	mov	r0, r4
   3c1dc:	mov	r1, r3
   3c1e0:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3c1e4:	ldrb	r0, [r4, #27]
   3c1e8:	cmp	r0, #0
   3c1ec:	beq	3c210 <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   3c1f0:	ldr	r2, [r4, #20]
   3c1f4:	mov	r0, r8
   3c1f8:	mov	r1, r7
   3c1fc:	bl	3a5b8 <flatcc_json_printer_uint64@@Base+0x30>
   3c200:	ldr	r1, [r4, #20]
   3c204:	add	r0, r1, r0
   3c208:	str	r0, [r4, #20]
   3c20c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3c210:	mov	r0, r4
   3c214:	mov	r2, r8
   3c218:	mov	r3, r7
   3c21c:	mov	r1, r5
   3c220:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c224:	bx	r1
   3c228:	ldr	r8, [r7]
   3c22c:	ldr	r7, [r7, #4]
   3c230:	eor	lr, r7, ip
   3c234:	eor	r0, r8, r6
   3c238:	orrs	r0, r0, lr
   3c23c:	bne	3c1b0 <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   3c240:	ldrb	r0, [r4, #28]
   3c244:	mov	r8, r6
   3c248:	mov	r7, ip
   3c24c:	cmp	r0, #0
   3c250:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   3c254:	b	3c1b0 <flatcc_json_printer_uint64_enum_field@@Base+0x60>

0003c258 <flatcc_json_printer_int8_enum_field@@Base>:
   3c258:	push	{r4, r5, r6, r7, fp, lr}
   3c25c:	add	fp, sp, #16
   3c260:	mov	r6, r0
   3c264:	mov	r0, #4
   3c268:	ldr	r4, [r1, #8]
   3c26c:	ldr	ip, [fp, #16]
   3c270:	add	r5, r0, r2, lsl #1
   3c274:	ldr	r0, [fp, #12]
   3c278:	ldr	r2, [fp, #8]
   3c27c:	cmp	r5, r4
   3c280:	bge	3c2a0 <flatcc_json_printer_int8_enum_field@@Base+0x48>
   3c284:	ldr	r4, [r1, #4]
   3c288:	add	r5, r4, r5
   3c28c:	ldrh	r5, [r5]
   3c290:	cmp	r5, #0
   3c294:	ldrne	r4, [r1]
   3c298:	addsne	r5, r4, r5
   3c29c:	bne	3c3c4 <flatcc_json_printer_int8_enum_field@@Base+0x16c>
   3c2a0:	ldrb	r5, [r6, #29]
   3c2a4:	cmp	r5, #0
   3c2a8:	mov	r5, r0
   3c2ac:	beq	3c40c <flatcc_json_printer_int8_enum_field@@Base+0x1b4>
   3c2b0:	ldr	r0, [r1, #16]
   3c2b4:	mov	r7, ip
   3c2b8:	add	r4, r0, #1
   3c2bc:	cmp	r0, #0
   3c2c0:	str	r4, [r1, #16]
   3c2c4:	beq	3c2dc <flatcc_json_printer_int8_enum_field@@Base+0x84>
   3c2c8:	ldr	r0, [r6, #20]
   3c2cc:	add	r1, r0, #1
   3c2d0:	str	r1, [r6, #20]
   3c2d4:	mov	r1, #44	; 0x2c
   3c2d8:	strb	r1, [r0]
   3c2dc:	mov	r0, r6
   3c2e0:	mov	r1, r3
   3c2e4:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3c2e8:	ldrb	r0, [r6, #27]
   3c2ec:	cmp	r0, #0
   3c2f0:	beq	3c36c <flatcc_json_printer_int8_enum_field@@Base+0x114>
   3c2f4:	sxtb	r2, r5
   3c2f8:	ldr	r0, [r6, #20]
   3c2fc:	uxtb	r1, r5
   3c300:	cmn	r2, #1
   3c304:	lsr	r1, r1, #7
   3c308:	movle	r2, #45	; 0x2d
   3c30c:	rsble	r5, r5, #0
   3c310:	strble	r2, [r0], #1
   3c314:	uxtb	r2, r5
   3c318:	cmp	r2, #100	; 0x64
   3c31c:	bcc	3c380 <flatcc_json_printer_int8_enum_field@@Base+0x128>
   3c320:	mov	r3, #0
   3c324:	strb	r3, [r0, #3]
   3c328:	movw	r3, #34079	; 0x851f
   3c32c:	movt	r3, #20971	; 0x51eb
   3c330:	umull	r3, r5, r2, r3
   3c334:	mov	r3, #48	; 0x30
   3c338:	orr	r3, r3, r5, lsr #5
   3c33c:	strb	r3, [r0]
   3c340:	lsr	r3, r5, #5
   3c344:	mov	r5, #100	; 0x64
   3c348:	mls	r2, r3, r5, r2
   3c34c:	movw	r3, #48464	; 0xbd50
   3c350:	movt	r3, #4
   3c354:	uxtb	r2, r2
   3c358:	add	r2, r3, r2, lsl #1
   3c35c:	ldrh	r2, [r2]
   3c360:	strh	r2, [r0, #1]
   3c364:	mov	r0, #3
   3c368:	b	3c3fc <flatcc_json_printer_int8_enum_field@@Base+0x1a4>
   3c36c:	sxtb	r1, r5
   3c370:	mov	r0, r6
   3c374:	mov	r2, r7
   3c378:	pop	{r4, r5, r6, r7, fp, lr}
   3c37c:	bx	r2
   3c380:	cmp	r2, #10
   3c384:	bcc	3c3e8 <flatcc_json_printer_int8_enum_field@@Base+0x190>
   3c388:	mov	r3, #0
   3c38c:	strb	r3, [r0, #2]
   3c390:	movw	r3, #34079	; 0x851f
   3c394:	movt	r3, #20971	; 0x51eb
   3c398:	umull	r3, r5, r2, r3
   3c39c:	lsr	r3, r5, #5
   3c3a0:	mov	r5, #100	; 0x64
   3c3a4:	mls	r2, r3, r5, r2
   3c3a8:	movw	r3, #48464	; 0xbd50
   3c3ac:	movt	r3, #4
   3c3b0:	add	r2, r3, r2, lsl #1
   3c3b4:	ldrh	r2, [r2]
   3c3b8:	strh	r2, [r0]
   3c3bc:	mov	r0, #2
   3c3c0:	b	3c3fc <flatcc_json_printer_int8_enum_field@@Base+0x1a4>
   3c3c4:	ldrb	r5, [r5]
   3c3c8:	uxtb	r4, r0
   3c3cc:	cmp	r5, r4
   3c3d0:	bne	3c2b0 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   3c3d4:	ldrb	r5, [r6, #28]
   3c3d8:	cmp	r5, #0
   3c3dc:	mov	r5, r0
   3c3e0:	popne	{r4, r5, r6, r7, fp, pc}
   3c3e4:	b	3c2b0 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   3c3e8:	mov	r2, #0
   3c3ec:	strb	r2, [r0, #1]
   3c3f0:	add	r2, r5, #48	; 0x30
   3c3f4:	strb	r2, [r0]
   3c3f8:	mov	r0, #1
   3c3fc:	add	r0, r0, r1
   3c400:	ldr	r1, [r6, #20]
   3c404:	add	r0, r1, r0
   3c408:	str	r0, [r6, #20]
   3c40c:	pop	{r4, r5, r6, r7, fp, pc}

0003c410 <flatcc_json_printer_int16_enum_field@@Base>:
   3c410:	push	{r4, r5, r6, r7, fp, lr}
   3c414:	add	fp, sp, #16
   3c418:	mov	r4, r0
   3c41c:	mov	r0, #4
   3c420:	ldr	r5, [r1, #8]
   3c424:	ldr	ip, [fp, #16]
   3c428:	add	r6, r0, r2, lsl #1
   3c42c:	ldr	r0, [fp, #12]
   3c430:	ldr	r2, [fp, #8]
   3c434:	cmp	r6, r5
   3c438:	bge	3c458 <flatcc_json_printer_int16_enum_field@@Base+0x48>
   3c43c:	ldr	r5, [r1, #4]
   3c440:	add	r6, r5, r6
   3c444:	ldrh	r6, [r6]
   3c448:	cmp	r6, #0
   3c44c:	ldrne	r5, [r1]
   3c450:	addsne	r6, r5, r6
   3c454:	bne	3c4fc <flatcc_json_printer_int16_enum_field@@Base+0xec>
   3c458:	ldrb	r6, [r4, #29]
   3c45c:	mov	r5, r0
   3c460:	cmp	r6, #0
   3c464:	beq	3c4e4 <flatcc_json_printer_int16_enum_field@@Base+0xd4>
   3c468:	ldr	r0, [r1, #16]
   3c46c:	mov	r7, ip
   3c470:	add	r6, r0, #1
   3c474:	cmp	r0, #0
   3c478:	str	r6, [r1, #16]
   3c47c:	beq	3c494 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   3c480:	ldr	r0, [r4, #20]
   3c484:	add	r1, r0, #1
   3c488:	str	r1, [r4, #20]
   3c48c:	mov	r1, #44	; 0x2c
   3c490:	strb	r1, [r0]
   3c494:	mov	r0, r4
   3c498:	mov	r1, r3
   3c49c:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3c4a0:	ldrb	r0, [r4, #27]
   3c4a4:	cmp	r0, #0
   3c4a8:	beq	3c4e8 <flatcc_json_printer_int16_enum_field@@Base+0xd8>
   3c4ac:	uxth	r0, r5
   3c4b0:	ldr	r1, [r4, #20]
   3c4b4:	lsr	r6, r0, #15
   3c4b8:	sxth	r0, r5
   3c4bc:	cmn	r0, #1
   3c4c0:	movle	r0, #45	; 0x2d
   3c4c4:	rsble	r5, r5, #0
   3c4c8:	strble	r0, [r1], #1
   3c4cc:	uxth	r0, r5
   3c4d0:	bl	3a0b4 <flatcc_json_printer_uint16@@Base+0x2c>
   3c4d4:	ldr	r1, [r4, #20]
   3c4d8:	add	r0, r0, r6
   3c4dc:	add	r0, r1, r0
   3c4e0:	str	r0, [r4, #20]
   3c4e4:	pop	{r4, r5, r6, r7, fp, pc}
   3c4e8:	sxth	r1, r5
   3c4ec:	mov	r0, r4
   3c4f0:	mov	r2, r7
   3c4f4:	pop	{r4, r5, r6, r7, fp, lr}
   3c4f8:	bx	r2
   3c4fc:	ldrh	r5, [r6]
   3c500:	uxth	r6, r0
   3c504:	cmp	r5, r6
   3c508:	bne	3c468 <flatcc_json_printer_int16_enum_field@@Base+0x58>
   3c50c:	ldrb	r6, [r4, #28]
   3c510:	mov	r5, r0
   3c514:	cmp	r6, #0
   3c518:	popne	{r4, r5, r6, r7, fp, pc}
   3c51c:	b	3c468 <flatcc_json_printer_int16_enum_field@@Base+0x58>

0003c520 <flatcc_json_printer_int32_enum_field@@Base>:
   3c520:	push	{r4, r5, r6, r7, fp, lr}
   3c524:	add	fp, sp, #16
   3c528:	mov	r4, r0
   3c52c:	mov	r0, #4
   3c530:	ldr	r5, [r1, #8]
   3c534:	ldr	ip, [fp, #16]
   3c538:	add	r6, r0, r2, lsl #1
   3c53c:	ldr	r0, [fp, #12]
   3c540:	ldr	r2, [fp, #8]
   3c544:	cmp	r6, r5
   3c548:	bge	3c568 <flatcc_json_printer_int32_enum_field@@Base+0x48>
   3c54c:	ldr	r5, [r1, #4]
   3c550:	add	r6, r5, r6
   3c554:	ldrh	r6, [r6]
   3c558:	cmp	r6, #0
   3c55c:	ldrne	r5, [r1]
   3c560:	addsne	r6, r5, r6
   3c564:	bne	3c604 <flatcc_json_printer_int32_enum_field@@Base+0xe4>
   3c568:	ldrb	r6, [r4, #29]
   3c56c:	mov	r5, r0
   3c570:	cmp	r6, #0
   3c574:	beq	3c5ec <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   3c578:	ldr	r0, [r1, #16]
   3c57c:	mov	r7, ip
   3c580:	add	r6, r0, #1
   3c584:	cmp	r0, #0
   3c588:	str	r6, [r1, #16]
   3c58c:	beq	3c5a4 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   3c590:	ldr	r0, [r4, #20]
   3c594:	add	r1, r0, #1
   3c598:	str	r1, [r4, #20]
   3c59c:	mov	r1, #44	; 0x2c
   3c5a0:	strb	r1, [r0]
   3c5a4:	mov	r0, r4
   3c5a8:	mov	r1, r3
   3c5ac:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3c5b0:	ldrb	r0, [r4, #27]
   3c5b4:	cmp	r0, #0
   3c5b8:	beq	3c5f0 <flatcc_json_printer_int32_enum_field@@Base+0xd0>
   3c5bc:	ldr	r1, [r4, #20]
   3c5c0:	cmn	r5, #1
   3c5c4:	lsr	r6, r5, #31
   3c5c8:	movle	r0, #45	; 0x2d
   3c5cc:	rsble	r5, r5, #0
   3c5d0:	strble	r0, [r1], #1
   3c5d4:	mov	r0, r5
   3c5d8:	bl	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3c5dc:	ldr	r1, [r4, #20]
   3c5e0:	add	r0, r0, r6
   3c5e4:	add	r0, r1, r0
   3c5e8:	str	r0, [r4, #20]
   3c5ec:	pop	{r4, r5, r6, r7, fp, pc}
   3c5f0:	mov	r0, r4
   3c5f4:	mov	r1, r5
   3c5f8:	mov	r2, r7
   3c5fc:	pop	{r4, r5, r6, r7, fp, lr}
   3c600:	bx	r2
   3c604:	ldr	r5, [r6]
   3c608:	cmp	r5, r0
   3c60c:	bne	3c578 <flatcc_json_printer_int32_enum_field@@Base+0x58>
   3c610:	ldrb	r6, [r4, #28]
   3c614:	mov	r5, r0
   3c618:	cmp	r6, #0
   3c61c:	popne	{r4, r5, r6, r7, fp, pc}
   3c620:	b	3c578 <flatcc_json_printer_int32_enum_field@@Base+0x58>

0003c624 <flatcc_json_printer_int64_enum_field@@Base>:
   3c624:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3c628:	add	fp, sp, #24
   3c62c:	mov	r4, r0
   3c630:	mov	r0, #4
   3c634:	ldr	r5, [r1, #8]
   3c638:	ldr	r6, [fp, #16]
   3c63c:	ldr	r9, [fp, #24]
   3c640:	add	r7, r0, r2, lsl #1
   3c644:	ldr	r0, [fp, #20]
   3c648:	ldr	r2, [fp, #8]
   3c64c:	cmp	r7, r5
   3c650:	bge	3c670 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   3c654:	ldr	r5, [r1, #4]
   3c658:	add	r7, r5, r7
   3c65c:	ldrh	r7, [r7]
   3c660:	cmp	r7, #0
   3c664:	ldrne	r5, [r1]
   3c668:	addsne	r7, r5, r7
   3c66c:	bne	3c71c <flatcc_json_printer_int64_enum_field@@Base+0xf8>
   3c670:	ldrb	r7, [r4, #29]
   3c674:	mov	r8, r6
   3c678:	cmp	r7, #0
   3c67c:	mov	r7, r0
   3c680:	beq	3c700 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   3c684:	ldr	r0, [r1, #16]
   3c688:	add	r6, r0, #1
   3c68c:	cmp	r0, #0
   3c690:	str	r6, [r1, #16]
   3c694:	beq	3c6ac <flatcc_json_printer_int64_enum_field@@Base+0x88>
   3c698:	ldr	r0, [r4, #20]
   3c69c:	add	r1, r0, #1
   3c6a0:	str	r1, [r4, #20]
   3c6a4:	mov	r1, #44	; 0x2c
   3c6a8:	strb	r1, [r0]
   3c6ac:	mov	r0, r4
   3c6b0:	mov	r1, r3
   3c6b4:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3c6b8:	ldrb	r0, [r4, #27]
   3c6bc:	cmp	r0, #0
   3c6c0:	beq	3c704 <flatcc_json_printer_int64_enum_field@@Base+0xe0>
   3c6c4:	ldr	r2, [r4, #20]
   3c6c8:	lsr	r5, r7, #31
   3c6cc:	cmn	r7, #1
   3c6d0:	bgt	3c6e4 <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   3c6d4:	mov	r0, #45	; 0x2d
   3c6d8:	rsbs	r8, r8, #0
   3c6dc:	strb	r0, [r2], #1
   3c6e0:	rsc	r7, r7, #0
   3c6e4:	mov	r0, r8
   3c6e8:	mov	r1, r7
   3c6ec:	bl	3a5b8 <flatcc_json_printer_uint64@@Base+0x30>
   3c6f0:	ldr	r1, [r4, #20]
   3c6f4:	add	r0, r0, r5
   3c6f8:	add	r0, r1, r0
   3c6fc:	str	r0, [r4, #20]
   3c700:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3c704:	mov	r0, r4
   3c708:	mov	r2, r8
   3c70c:	mov	r3, r7
   3c710:	mov	r1, r9
   3c714:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3c718:	bx	r1
   3c71c:	ldr	r8, [r7]
   3c720:	ldr	r7, [r7, #4]
   3c724:	eor	ip, r7, r0
   3c728:	eor	r5, r8, r6
   3c72c:	orrs	r5, r5, ip
   3c730:	bne	3c684 <flatcc_json_printer_int64_enum_field@@Base+0x60>
   3c734:	ldrb	r7, [r4, #28]
   3c738:	mov	r8, r6
   3c73c:	cmp	r7, #0
   3c740:	mov	r7, r0
   3c744:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   3c748:	b	3c684 <flatcc_json_printer_int64_enum_field@@Base+0x60>

0003c74c <flatcc_json_printer_bool_enum_field@@Base>:
   3c74c:	push	{r4, r5, r6, r7, fp, lr}
   3c750:	add	fp, sp, #16
   3c754:	mov	r4, r0
   3c758:	mov	r0, #4
   3c75c:	ldr	r7, [fp, #16]
   3c760:	ldr	ip, [fp, #12]
   3c764:	add	r5, r0, r2, lsl #1
   3c768:	ldr	r0, [r1, #8]
   3c76c:	ldr	r2, [fp, #8]
   3c770:	cmp	r5, r0
   3c774:	bge	3c794 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   3c778:	ldr	r0, [r1, #4]
   3c77c:	add	r0, r0, r5
   3c780:	ldrh	r5, [r0]
   3c784:	cmp	r5, #0
   3c788:	ldrne	r0, [r1]
   3c78c:	addsne	r5, r0, r5
   3c790:	bne	3c848 <flatcc_json_printer_bool_enum_field@@Base+0xfc>
   3c794:	ldrb	r0, [r4, #29]
   3c798:	mov	r6, ip
   3c79c:	cmp	r0, #0
   3c7a0:	beq	3c844 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   3c7a4:	ldr	r0, [r1, #16]
   3c7a8:	add	r5, r0, #1
   3c7ac:	cmp	r0, #0
   3c7b0:	str	r5, [r1, #16]
   3c7b4:	beq	3c7cc <flatcc_json_printer_bool_enum_field@@Base+0x80>
   3c7b8:	ldr	r0, [r4, #20]
   3c7bc:	add	r1, r0, #1
   3c7c0:	str	r1, [r4, #20]
   3c7c4:	mov	r1, #44	; 0x2c
   3c7c8:	strb	r1, [r0]
   3c7cc:	mov	r0, r4
   3c7d0:	mov	r1, r3
   3c7d4:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3c7d8:	ldrb	r0, [r4, #27]
   3c7dc:	cmp	r0, #0
   3c7e0:	beq	3c80c <flatcc_json_printer_bool_enum_field@@Base+0xc0>
   3c7e4:	ldr	r0, [r4, #20]
   3c7e8:	cmp	r6, #0
   3c7ec:	beq	3c820 <flatcc_json_printer_bool_enum_field@@Base+0xd4>
   3c7f0:	mov	r1, #0
   3c7f4:	strb	r1, [r0, #4]
   3c7f8:	movw	r1, #29300	; 0x7274
   3c7fc:	movt	r1, #25973	; 0x6575
   3c800:	str	r1, [r0]
   3c804:	mov	r0, #4
   3c808:	b	3c838 <flatcc_json_printer_bool_enum_field@@Base+0xec>
   3c80c:	mov	r0, r4
   3c810:	mov	r1, r6
   3c814:	mov	r2, r7
   3c818:	pop	{r4, r5, r6, r7, fp, lr}
   3c81c:	bx	r2
   3c820:	mov	r1, #101	; 0x65
   3c824:	strh	r1, [r0, #4]
   3c828:	movw	r1, #24934	; 0x6166
   3c82c:	movt	r1, #29548	; 0x736c
   3c830:	str	r1, [r0]
   3c834:	mov	r0, #5
   3c838:	ldr	r1, [r4, #20]
   3c83c:	add	r0, r1, r0
   3c840:	str	r0, [r4, #20]
   3c844:	pop	{r4, r5, r6, r7, fp, pc}
   3c848:	ldrb	r6, [r5]
   3c84c:	cmp	r6, ip
   3c850:	bne	3c7a4 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   3c854:	ldrb	r0, [r4, #28]
   3c858:	mov	r6, ip
   3c85c:	cmp	r0, #0
   3c860:	popne	{r4, r5, r6, r7, fp, pc}
   3c864:	b	3c7a4 <flatcc_json_printer_bool_enum_field@@Base+0x58>

0003c868 <flatcc_json_printer_uint8_struct_field@@Base>:
   3c868:	push	{r4, r5, r6, sl, fp, lr}
   3c86c:	add	fp, sp, #16
   3c870:	mov	r4, r1
   3c874:	ldrb	r6, [r2, r3]
   3c878:	ldr	r2, [fp, #12]
   3c87c:	ldr	r1, [fp, #8]
   3c880:	mov	r5, r0
   3c884:	cmp	r4, #0
   3c888:	beq	3c8a0 <flatcc_json_printer_uint8_struct_field@@Base+0x38>
   3c88c:	ldr	r0, [r5, #20]
   3c890:	add	r3, r0, #1
   3c894:	str	r3, [r5, #20]
   3c898:	mov	r3, #44	; 0x2c
   3c89c:	strb	r3, [r0]
   3c8a0:	mov	r0, r5
   3c8a4:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3c8a8:	ldr	r0, [r5, #20]
   3c8ac:	mov	r1, #0
   3c8b0:	cmp	r6, #100	; 0x64
   3c8b4:	bcc	3c90c <flatcc_json_printer_uint8_struct_field@@Base+0xa4>
   3c8b8:	strb	r1, [r0, #3]
   3c8bc:	movw	r1, #34079	; 0x851f
   3c8c0:	movt	r1, #20971	; 0x51eb
   3c8c4:	umull	r1, r2, r6, r1
   3c8c8:	mov	r1, #48	; 0x30
   3c8cc:	orr	r1, r1, r2, lsr #5
   3c8d0:	strb	r1, [r0]
   3c8d4:	lsr	r1, r2, #5
   3c8d8:	mov	r2, #100	; 0x64
   3c8dc:	mls	r1, r1, r2, r6
   3c8e0:	movw	r2, #48464	; 0xbd50
   3c8e4:	movt	r2, #4
   3c8e8:	uxtb	r1, r1
   3c8ec:	add	r1, r2, r1, lsl #1
   3c8f0:	ldrh	r1, [r1]
   3c8f4:	strh	r1, [r0, #1]
   3c8f8:	mov	r0, #3
   3c8fc:	ldr	r1, [r5, #20]
   3c900:	add	r0, r1, r0
   3c904:	str	r0, [r5, #20]
   3c908:	pop	{r4, r5, r6, sl, fp, pc}
   3c90c:	cmp	r6, #10
   3c910:	bcc	3c958 <flatcc_json_printer_uint8_struct_field@@Base+0xf0>
   3c914:	strb	r1, [r0, #2]
   3c918:	movw	r1, #34079	; 0x851f
   3c91c:	movt	r1, #20971	; 0x51eb
   3c920:	umull	r1, r2, r6, r1
   3c924:	lsr	r1, r2, #5
   3c928:	mov	r2, #100	; 0x64
   3c92c:	mls	r1, r1, r2, r6
   3c930:	movw	r2, #48464	; 0xbd50
   3c934:	movt	r2, #4
   3c938:	add	r1, r2, r1, lsl #1
   3c93c:	ldrh	r1, [r1]
   3c940:	strh	r1, [r0]
   3c944:	mov	r0, #2
   3c948:	ldr	r1, [r5, #20]
   3c94c:	add	r0, r1, r0
   3c950:	str	r0, [r5, #20]
   3c954:	pop	{r4, r5, r6, sl, fp, pc}
   3c958:	strb	r1, [r0, #1]
   3c95c:	add	r1, r6, #48	; 0x30
   3c960:	strb	r1, [r0]
   3c964:	mov	r0, #1
   3c968:	ldr	r1, [r5, #20]
   3c96c:	add	r0, r1, r0
   3c970:	str	r0, [r5, #20]
   3c974:	pop	{r4, r5, r6, sl, fp, pc}

0003c978 <flatcc_json_printer_uint16_struct_field@@Base>:
   3c978:	push	{r4, r5, r6, sl, fp, lr}
   3c97c:	add	fp, sp, #16
   3c980:	mov	r4, r0
   3c984:	add	r0, r2, r3
   3c988:	mov	r5, r1
   3c98c:	ldr	r2, [fp, #12]
   3c990:	ldr	r1, [fp, #8]
   3c994:	ldrh	r6, [r0]
   3c998:	cmp	r5, #0
   3c99c:	beq	3c9b4 <flatcc_json_printer_uint16_struct_field@@Base+0x3c>
   3c9a0:	ldr	r0, [r4, #20]
   3c9a4:	add	r3, r0, #1
   3c9a8:	str	r3, [r4, #20]
   3c9ac:	mov	r3, #44	; 0x2c
   3c9b0:	strb	r3, [r0]
   3c9b4:	mov	r0, r4
   3c9b8:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3c9bc:	ldr	r1, [r4, #20]
   3c9c0:	mov	r0, r6
   3c9c4:	bl	3a0b4 <flatcc_json_printer_uint16@@Base+0x2c>
   3c9c8:	ldr	r1, [r4, #20]
   3c9cc:	add	r0, r1, r0
   3c9d0:	str	r0, [r4, #20]
   3c9d4:	pop	{r4, r5, r6, sl, fp, pc}

0003c9d8 <flatcc_json_printer_uint32_struct_field@@Base>:
   3c9d8:	push	{r4, r5, r6, sl, fp, lr}
   3c9dc:	add	fp, sp, #16
   3c9e0:	mov	r5, r1
   3c9e4:	ldr	r6, [r2, r3]
   3c9e8:	ldr	r2, [fp, #12]
   3c9ec:	ldr	r1, [fp, #8]
   3c9f0:	mov	r4, r0
   3c9f4:	cmp	r5, #0
   3c9f8:	beq	3ca10 <flatcc_json_printer_uint32_struct_field@@Base+0x38>
   3c9fc:	ldr	r0, [r4, #20]
   3ca00:	add	r3, r0, #1
   3ca04:	str	r3, [r4, #20]
   3ca08:	mov	r3, #44	; 0x2c
   3ca0c:	strb	r3, [r0]
   3ca10:	mov	r0, r4
   3ca14:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3ca18:	ldr	r1, [r4, #20]
   3ca1c:	mov	r0, r6
   3ca20:	bl	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3ca24:	ldr	r1, [r4, #20]
   3ca28:	add	r0, r1, r0
   3ca2c:	str	r0, [r4, #20]
   3ca30:	pop	{r4, r5, r6, sl, fp, pc}

0003ca34 <flatcc_json_printer_uint64_struct_field@@Base>:
   3ca34:	push	{r4, r5, r6, r7, fp, lr}
   3ca38:	add	fp, sp, #16
   3ca3c:	ldr	r7, [r2, r3]!
   3ca40:	mov	r5, r1
   3ca44:	ldr	r1, [fp, #8]
   3ca48:	mov	r4, r0
   3ca4c:	cmp	r5, #0
   3ca50:	ldr	r6, [r2, #4]
   3ca54:	ldr	r2, [fp, #12]
   3ca58:	beq	3ca70 <flatcc_json_printer_uint64_struct_field@@Base+0x3c>
   3ca5c:	ldr	r0, [r4, #20]
   3ca60:	add	r3, r0, #1
   3ca64:	str	r3, [r4, #20]
   3ca68:	mov	r3, #44	; 0x2c
   3ca6c:	strb	r3, [r0]
   3ca70:	mov	r0, r4
   3ca74:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3ca78:	ldr	r2, [r4, #20]
   3ca7c:	mov	r0, r7
   3ca80:	mov	r1, r6
   3ca84:	bl	3a5b8 <flatcc_json_printer_uint64@@Base+0x30>
   3ca88:	ldr	r1, [r4, #20]
   3ca8c:	add	r0, r1, r0
   3ca90:	str	r0, [r4, #20]
   3ca94:	pop	{r4, r5, r6, r7, fp, pc}

0003ca98 <flatcc_json_printer_int8_struct_field@@Base>:
   3ca98:	push	{r4, r5, r6, sl, fp, lr}
   3ca9c:	add	fp, sp, #16
   3caa0:	mov	r5, r0
   3caa4:	add	r0, r2, r3
   3caa8:	mov	r4, r1
   3caac:	ldr	r2, [fp, #12]
   3cab0:	ldr	r1, [fp, #8]
   3cab4:	ldrsb	r6, [r0]
   3cab8:	cmp	r4, #0
   3cabc:	beq	3cad4 <flatcc_json_printer_int8_struct_field@@Base+0x3c>
   3cac0:	ldr	r0, [r5, #20]
   3cac4:	add	r3, r0, #1
   3cac8:	str	r3, [r5, #20]
   3cacc:	mov	r3, #44	; 0x2c
   3cad0:	strb	r3, [r0]
   3cad4:	mov	r0, r5
   3cad8:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3cadc:	ldr	r0, [r5, #20]
   3cae0:	cmn	r6, #1
   3cae4:	uxtb	r1, r6
   3cae8:	movle	r2, #45	; 0x2d
   3caec:	rsble	r6, r6, #0
   3caf0:	lsr	r1, r1, #7
   3caf4:	strble	r2, [r0], #1
   3caf8:	uxtb	r2, r6
   3cafc:	cmp	r2, #100	; 0x64
   3cb00:	bcc	3cb50 <flatcc_json_printer_int8_struct_field@@Base+0xb8>
   3cb04:	mov	r3, #0
   3cb08:	strb	r3, [r0, #3]
   3cb0c:	movw	r3, #34079	; 0x851f
   3cb10:	movt	r3, #20971	; 0x51eb
   3cb14:	umull	r3, r6, r2, r3
   3cb18:	mov	r3, #48	; 0x30
   3cb1c:	orr	r3, r3, r6, lsr #5
   3cb20:	strb	r3, [r0]
   3cb24:	lsr	r3, r6, #5
   3cb28:	mov	r6, #100	; 0x64
   3cb2c:	mls	r2, r3, r6, r2
   3cb30:	movw	r3, #48464	; 0xbd50
   3cb34:	movt	r3, #4
   3cb38:	uxtb	r2, r2
   3cb3c:	add	r2, r3, r2, lsl #1
   3cb40:	ldrh	r2, [r2]
   3cb44:	strh	r2, [r0, #1]
   3cb48:	mov	r0, #3
   3cb4c:	b	3cba8 <flatcc_json_printer_int8_struct_field@@Base+0x110>
   3cb50:	cmp	r2, #10
   3cb54:	bcc	3cb94 <flatcc_json_printer_int8_struct_field@@Base+0xfc>
   3cb58:	mov	r3, #0
   3cb5c:	strb	r3, [r0, #2]
   3cb60:	movw	r3, #34079	; 0x851f
   3cb64:	movt	r3, #20971	; 0x51eb
   3cb68:	umull	r3, r6, r2, r3
   3cb6c:	lsr	r3, r6, #5
   3cb70:	mov	r6, #100	; 0x64
   3cb74:	mls	r2, r3, r6, r2
   3cb78:	movw	r3, #48464	; 0xbd50
   3cb7c:	movt	r3, #4
   3cb80:	add	r2, r3, r2, lsl #1
   3cb84:	ldrh	r2, [r2]
   3cb88:	strh	r2, [r0]
   3cb8c:	mov	r0, #2
   3cb90:	b	3cba8 <flatcc_json_printer_int8_struct_field@@Base+0x110>
   3cb94:	mov	r2, #0
   3cb98:	strb	r2, [r0, #1]
   3cb9c:	add	r2, r6, #48	; 0x30
   3cba0:	strb	r2, [r0]
   3cba4:	mov	r0, #1
   3cba8:	add	r0, r0, r1
   3cbac:	ldr	r1, [r5, #20]
   3cbb0:	add	r0, r1, r0
   3cbb4:	str	r0, [r5, #20]
   3cbb8:	pop	{r4, r5, r6, sl, fp, pc}

0003cbbc <flatcc_json_printer_int16_struct_field@@Base>:
   3cbbc:	push	{r4, r5, r6, sl, fp, lr}
   3cbc0:	add	fp, sp, #16
   3cbc4:	mov	r4, r0
   3cbc8:	add	r0, r2, r3
   3cbcc:	mov	ip, r1
   3cbd0:	ldr	r2, [fp, #12]
   3cbd4:	ldr	r1, [fp, #8]
   3cbd8:	ldrsh	r5, [r0]
   3cbdc:	cmp	ip, #0
   3cbe0:	beq	3cbf8 <flatcc_json_printer_int16_struct_field@@Base+0x3c>
   3cbe4:	ldr	r0, [r4, #20]
   3cbe8:	add	r3, r0, #1
   3cbec:	str	r3, [r4, #20]
   3cbf0:	mov	r3, #44	; 0x2c
   3cbf4:	strb	r3, [r0]
   3cbf8:	mov	r0, r4
   3cbfc:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3cc00:	ldr	r1, [r4, #20]
   3cc04:	uxth	r0, r5
   3cc08:	cmn	r5, #1
   3cc0c:	rsble	r5, r5, #0
   3cc10:	lsr	r6, r0, #15
   3cc14:	movle	r0, #45	; 0x2d
   3cc18:	strble	r0, [r1], #1
   3cc1c:	uxth	r0, r5
   3cc20:	bl	3a0b4 <flatcc_json_printer_uint16@@Base+0x2c>
   3cc24:	ldr	r1, [r4, #20]
   3cc28:	add	r0, r0, r6
   3cc2c:	add	r0, r1, r0
   3cc30:	str	r0, [r4, #20]
   3cc34:	pop	{r4, r5, r6, sl, fp, pc}

0003cc38 <flatcc_json_printer_int32_struct_field@@Base>:
   3cc38:	push	{r4, r5, r6, sl, fp, lr}
   3cc3c:	add	fp, sp, #16
   3cc40:	mov	ip, r1
   3cc44:	ldr	r5, [r2, r3]
   3cc48:	ldr	r2, [fp, #12]
   3cc4c:	ldr	r1, [fp, #8]
   3cc50:	mov	r4, r0
   3cc54:	cmp	ip, #0
   3cc58:	beq	3cc70 <flatcc_json_printer_int32_struct_field@@Base+0x38>
   3cc5c:	ldr	r0, [r4, #20]
   3cc60:	add	r3, r0, #1
   3cc64:	str	r3, [r4, #20]
   3cc68:	mov	r3, #44	; 0x2c
   3cc6c:	strb	r3, [r0]
   3cc70:	mov	r0, r4
   3cc74:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3cc78:	ldr	r1, [r4, #20]
   3cc7c:	cmn	r5, #1
   3cc80:	lsr	r6, r5, #31
   3cc84:	movle	r0, #45	; 0x2d
   3cc88:	rsble	r5, r5, #0
   3cc8c:	strble	r0, [r1], #1
   3cc90:	mov	r0, r5
   3cc94:	bl	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3cc98:	ldr	r1, [r4, #20]
   3cc9c:	add	r0, r0, r6
   3cca0:	add	r0, r1, r0
   3cca4:	str	r0, [r4, #20]
   3cca8:	pop	{r4, r5, r6, sl, fp, pc}

0003ccac <flatcc_json_printer_int64_struct_field@@Base>:
   3ccac:	push	{r4, r5, r6, r7, fp, lr}
   3ccb0:	add	fp, sp, #16
   3ccb4:	ldr	r7, [r2, r3]!
   3ccb8:	mov	r5, r1
   3ccbc:	ldr	r1, [fp, #8]
   3ccc0:	mov	r4, r0
   3ccc4:	cmp	r5, #0
   3ccc8:	ldr	r6, [r2, #4]
   3cccc:	ldr	r2, [fp, #12]
   3ccd0:	beq	3cce8 <flatcc_json_printer_int64_struct_field@@Base+0x3c>
   3ccd4:	ldr	r0, [r4, #20]
   3ccd8:	add	r3, r0, #1
   3ccdc:	str	r3, [r4, #20]
   3cce0:	mov	r3, #44	; 0x2c
   3cce4:	strb	r3, [r0]
   3cce8:	mov	r0, r4
   3ccec:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3ccf0:	ldr	r2, [r4, #20]
   3ccf4:	lsr	r5, r6, #31
   3ccf8:	cmn	r6, #1
   3ccfc:	bgt	3cd10 <flatcc_json_printer_int64_struct_field@@Base+0x64>
   3cd00:	mov	r0, #45	; 0x2d
   3cd04:	rsbs	r7, r7, #0
   3cd08:	strb	r0, [r2], #1
   3cd0c:	rsc	r6, r6, #0
   3cd10:	mov	r0, r7
   3cd14:	mov	r1, r6
   3cd18:	bl	3a5b8 <flatcc_json_printer_uint64@@Base+0x30>
   3cd1c:	ldr	r1, [r4, #20]
   3cd20:	add	r0, r0, r5
   3cd24:	add	r0, r1, r0
   3cd28:	str	r0, [r4, #20]
   3cd2c:	pop	{r4, r5, r6, r7, fp, pc}

0003cd30 <flatcc_json_printer_bool_struct_field@@Base>:
   3cd30:	push	{r4, r5, fp, lr}
   3cd34:	add	fp, sp, #8
   3cd38:	mov	ip, r1
   3cd3c:	ldrb	r5, [r2, r3]
   3cd40:	ldr	r2, [fp, #12]
   3cd44:	ldr	r1, [fp, #8]
   3cd48:	mov	r4, r0
   3cd4c:	cmp	ip, #0
   3cd50:	beq	3cd68 <flatcc_json_printer_bool_struct_field@@Base+0x38>
   3cd54:	ldr	r0, [r4, #20]
   3cd58:	add	r3, r0, #1
   3cd5c:	str	r3, [r4, #20]
   3cd60:	mov	r3, #44	; 0x2c
   3cd64:	strb	r3, [r0]
   3cd68:	mov	r0, r4
   3cd6c:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3cd70:	ldr	r0, [r4, #20]
   3cd74:	cmp	r5, #0
   3cd78:	beq	3cda4 <flatcc_json_printer_bool_struct_field@@Base+0x74>
   3cd7c:	mov	r1, #0
   3cd80:	strb	r1, [r0, #4]
   3cd84:	movw	r1, #29300	; 0x7274
   3cd88:	movt	r1, #25973	; 0x6575
   3cd8c:	str	r1, [r0]
   3cd90:	mov	r0, #4
   3cd94:	ldr	r1, [r4, #20]
   3cd98:	add	r0, r1, r0
   3cd9c:	str	r0, [r4, #20]
   3cda0:	pop	{r4, r5, fp, pc}
   3cda4:	mov	r1, #101	; 0x65
   3cda8:	strh	r1, [r0, #4]
   3cdac:	movw	r1, #24934	; 0x6166
   3cdb0:	movt	r1, #29548	; 0x736c
   3cdb4:	str	r1, [r0]
   3cdb8:	mov	r0, #5
   3cdbc:	ldr	r1, [r4, #20]
   3cdc0:	add	r0, r1, r0
   3cdc4:	str	r0, [r4, #20]
   3cdc8:	pop	{r4, r5, fp, pc}

0003cdcc <flatcc_json_printer_float_struct_field@@Base>:
   3cdcc:	push	{r4, sl, fp, lr}
   3cdd0:	add	fp, sp, #8
   3cdd4:	vpush	{d8}
   3cdd8:	mov	r4, r0
   3cddc:	add	r0, r2, r3
   3cde0:	mov	ip, r1
   3cde4:	ldr	r2, [fp, #12]
   3cde8:	ldr	r1, [fp, #8]
   3cdec:	vldr	s16, [r0]
   3cdf0:	cmp	ip, #0
   3cdf4:	beq	3ce0c <flatcc_json_printer_float_struct_field@@Base+0x40>
   3cdf8:	ldr	r0, [r4, #20]
   3cdfc:	add	r3, r0, #1
   3ce00:	str	r3, [r4, #20]
   3ce04:	mov	r3, #44	; 0x2c
   3ce08:	strb	r3, [r0]
   3ce0c:	mov	r0, r4
   3ce10:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3ce14:	vcvt.f64.f32	d0, s16
   3ce18:	ldr	r0, [r4, #20]
   3ce1c:	bl	38b88 <flatcc_json_printer_fmt_float@@Base+0x8>
   3ce20:	ldr	r1, [r4, #20]
   3ce24:	add	r0, r1, r0
   3ce28:	str	r0, [r4, #20]
   3ce2c:	vpop	{d8}
   3ce30:	pop	{r4, sl, fp, pc}

0003ce34 <flatcc_json_printer_double_struct_field@@Base>:
   3ce34:	push	{r4, sl, fp, lr}
   3ce38:	add	fp, sp, #8
   3ce3c:	vpush	{d8}
   3ce40:	mov	r4, r0
   3ce44:	add	r0, r2, r3
   3ce48:	mov	ip, r1
   3ce4c:	ldr	r2, [fp, #12]
   3ce50:	ldr	r1, [fp, #8]
   3ce54:	vldr	d8, [r0]
   3ce58:	cmp	ip, #0
   3ce5c:	beq	3ce74 <flatcc_json_printer_double_struct_field@@Base+0x40>
   3ce60:	ldr	r0, [r4, #20]
   3ce64:	add	r3, r0, #1
   3ce68:	str	r3, [r4, #20]
   3ce6c:	mov	r3, #44	; 0x2c
   3ce70:	strb	r3, [r0]
   3ce74:	mov	r0, r4
   3ce78:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3ce7c:	ldr	r0, [r4, #20]
   3ce80:	vorr	d0, d8, d8
   3ce84:	bl	38b88 <flatcc_json_printer_fmt_float@@Base+0x8>
   3ce88:	ldr	r1, [r4, #20]
   3ce8c:	add	r0, r1, r0
   3ce90:	str	r0, [r4, #20]
   3ce94:	vpop	{d8}
   3ce98:	pop	{r4, sl, fp, pc}

0003ce9c <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   3ce9c:	push	{r4, r5, r6, r7, fp, lr}
   3cea0:	add	fp, sp, #16
   3cea4:	add	r7, fp, #8
   3cea8:	mov	r5, r1
   3ceac:	ldrb	r6, [r2, r3]
   3ceb0:	mov	r4, r0
   3ceb4:	ldm	r7, {r1, r2, r7}
   3ceb8:	cmp	r5, #0
   3cebc:	beq	3ced4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x38>
   3cec0:	ldr	r0, [r4, #20]
   3cec4:	add	r3, r0, #1
   3cec8:	str	r3, [r4, #20]
   3cecc:	mov	r3, #44	; 0x2c
   3ced0:	strb	r3, [r0]
   3ced4:	mov	r0, r4
   3ced8:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3cedc:	ldrb	r0, [r4, #27]
   3cee0:	cmp	r0, #0
   3cee4:	beq	3cf4c <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb0>
   3cee8:	ldr	r0, [r4, #20]
   3ceec:	mov	r1, #0
   3cef0:	cmp	r6, #100	; 0x64
   3cef4:	bcc	3cf60 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xc4>
   3cef8:	strb	r1, [r0, #3]
   3cefc:	movw	r1, #34079	; 0x851f
   3cf00:	movt	r1, #20971	; 0x51eb
   3cf04:	umull	r1, r2, r6, r1
   3cf08:	mov	r1, #48	; 0x30
   3cf0c:	orr	r1, r1, r2, lsr #5
   3cf10:	strb	r1, [r0]
   3cf14:	lsr	r1, r2, #5
   3cf18:	mov	r2, #100	; 0x64
   3cf1c:	mls	r1, r1, r2, r6
   3cf20:	movw	r2, #48464	; 0xbd50
   3cf24:	movt	r2, #4
   3cf28:	uxtb	r1, r1
   3cf2c:	add	r1, r2, r1, lsl #1
   3cf30:	ldrh	r1, [r1]
   3cf34:	strh	r1, [r0, #1]
   3cf38:	mov	r0, #3
   3cf3c:	ldr	r1, [r4, #20]
   3cf40:	add	r0, r1, r0
   3cf44:	str	r0, [r4, #20]
   3cf48:	pop	{r4, r5, r6, r7, fp, pc}
   3cf4c:	mov	r0, r4
   3cf50:	mov	r1, r6
   3cf54:	mov	r2, r7
   3cf58:	pop	{r4, r5, r6, r7, fp, lr}
   3cf5c:	bx	r2
   3cf60:	cmp	r6, #10
   3cf64:	bcc	3cfac <flatcc_json_printer_uint8_enum_struct_field@@Base+0x110>
   3cf68:	strb	r1, [r0, #2]
   3cf6c:	movw	r1, #34079	; 0x851f
   3cf70:	movt	r1, #20971	; 0x51eb
   3cf74:	umull	r1, r2, r6, r1
   3cf78:	lsr	r1, r2, #5
   3cf7c:	mov	r2, #100	; 0x64
   3cf80:	mls	r1, r1, r2, r6
   3cf84:	movw	r2, #48464	; 0xbd50
   3cf88:	movt	r2, #4
   3cf8c:	add	r1, r2, r1, lsl #1
   3cf90:	ldrh	r1, [r1]
   3cf94:	strh	r1, [r0]
   3cf98:	mov	r0, #2
   3cf9c:	ldr	r1, [r4, #20]
   3cfa0:	add	r0, r1, r0
   3cfa4:	str	r0, [r4, #20]
   3cfa8:	pop	{r4, r5, r6, r7, fp, pc}
   3cfac:	strb	r1, [r0, #1]
   3cfb0:	add	r1, r6, #48	; 0x30
   3cfb4:	strb	r1, [r0]
   3cfb8:	mov	r0, #1
   3cfbc:	ldr	r1, [r4, #20]
   3cfc0:	add	r0, r1, r0
   3cfc4:	str	r0, [r4, #20]
   3cfc8:	pop	{r4, r5, r6, r7, fp, pc}

0003cfcc <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   3cfcc:	push	{r4, r5, r6, r7, fp, lr}
   3cfd0:	add	fp, sp, #16
   3cfd4:	mov	r4, r0
   3cfd8:	add	r0, r2, r3
   3cfdc:	add	r7, fp, #8
   3cfe0:	mov	r5, r1
   3cfe4:	ldrh	r6, [r0]
   3cfe8:	ldm	r7, {r1, r2, r7}
   3cfec:	cmp	r5, #0
   3cff0:	beq	3d008 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x3c>
   3cff4:	ldr	r0, [r4, #20]
   3cff8:	add	r3, r0, #1
   3cffc:	str	r3, [r4, #20]
   3d000:	mov	r3, #44	; 0x2c
   3d004:	strb	r3, [r0]
   3d008:	mov	r0, r4
   3d00c:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3d010:	ldrb	r0, [r4, #27]
   3d014:	cmp	r0, #0
   3d018:	beq	3d038 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x6c>
   3d01c:	ldr	r1, [r4, #20]
   3d020:	mov	r0, r6
   3d024:	bl	3a0b4 <flatcc_json_printer_uint16@@Base+0x2c>
   3d028:	ldr	r1, [r4, #20]
   3d02c:	add	r0, r1, r0
   3d030:	str	r0, [r4, #20]
   3d034:	pop	{r4, r5, r6, r7, fp, pc}
   3d038:	mov	r0, r4
   3d03c:	mov	r1, r6
   3d040:	mov	r2, r7
   3d044:	pop	{r4, r5, r6, r7, fp, lr}
   3d048:	bx	r2

0003d04c <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   3d04c:	push	{r4, r5, r6, r7, fp, lr}
   3d050:	add	fp, sp, #16
   3d054:	add	r7, fp, #8
   3d058:	mov	r5, r1
   3d05c:	ldr	r6, [r2, r3]
   3d060:	mov	r4, r0
   3d064:	ldm	r7, {r1, r2, r7}
   3d068:	cmp	r5, #0
   3d06c:	beq	3d084 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x38>
   3d070:	ldr	r0, [r4, #20]
   3d074:	add	r3, r0, #1
   3d078:	str	r3, [r4, #20]
   3d07c:	mov	r3, #44	; 0x2c
   3d080:	strb	r3, [r0]
   3d084:	mov	r0, r4
   3d088:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3d08c:	ldrb	r0, [r4, #27]
   3d090:	cmp	r0, #0
   3d094:	beq	3d0b4 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x68>
   3d098:	ldr	r1, [r4, #20]
   3d09c:	mov	r0, r6
   3d0a0:	bl	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3d0a4:	ldr	r1, [r4, #20]
   3d0a8:	add	r0, r1, r0
   3d0ac:	str	r0, [r4, #20]
   3d0b0:	pop	{r4, r5, r6, r7, fp, pc}
   3d0b4:	mov	r0, r4
   3d0b8:	mov	r1, r6
   3d0bc:	mov	r2, r7
   3d0c0:	pop	{r4, r5, r6, r7, fp, lr}
   3d0c4:	bx	r2

0003d0c8 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   3d0c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d0cc:	add	fp, sp, #24
   3d0d0:	ldr	r6, [r2, r3]!
   3d0d4:	add	r8, fp, #8
   3d0d8:	mov	r5, r1
   3d0dc:	mov	r4, r0
   3d0e0:	cmp	r5, #0
   3d0e4:	ldr	r7, [r2, #4]
   3d0e8:	ldm	r8, {r1, r2, r8}
   3d0ec:	beq	3d104 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x3c>
   3d0f0:	ldr	r0, [r4, #20]
   3d0f4:	add	r3, r0, #1
   3d0f8:	str	r3, [r4, #20]
   3d0fc:	mov	r3, #44	; 0x2c
   3d100:	strb	r3, [r0]
   3d104:	mov	r0, r4
   3d108:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3d10c:	ldrb	r0, [r4, #27]
   3d110:	cmp	r0, #0
   3d114:	beq	3d138 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   3d118:	ldr	r2, [r4, #20]
   3d11c:	mov	r0, r6
   3d120:	mov	r1, r7
   3d124:	bl	3a5b8 <flatcc_json_printer_uint64@@Base+0x30>
   3d128:	ldr	r1, [r4, #20]
   3d12c:	add	r0, r1, r0
   3d130:	str	r0, [r4, #20]
   3d134:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3d138:	mov	r0, r4
   3d13c:	mov	r2, r6
   3d140:	mov	r3, r7
   3d144:	mov	r1, r8
   3d148:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d14c:	bx	r1

0003d150 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   3d150:	push	{r4, r5, r6, r7, fp, lr}
   3d154:	add	fp, sp, #16
   3d158:	mov	r4, r0
   3d15c:	add	r0, r2, r3
   3d160:	add	r7, fp, #8
   3d164:	mov	r5, r1
   3d168:	ldrsb	r6, [r0]
   3d16c:	ldm	r7, {r1, r2, r7}
   3d170:	cmp	r5, #0
   3d174:	beq	3d18c <flatcc_json_printer_int8_enum_struct_field@@Base+0x3c>
   3d178:	ldr	r0, [r4, #20]
   3d17c:	add	r3, r0, #1
   3d180:	str	r3, [r4, #20]
   3d184:	mov	r3, #44	; 0x2c
   3d188:	strb	r3, [r0]
   3d18c:	mov	r0, r4
   3d190:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3d194:	ldrb	r0, [r4, #27]
   3d198:	cmp	r0, #0
   3d19c:	beq	3d214 <flatcc_json_printer_int8_enum_struct_field@@Base+0xc4>
   3d1a0:	ldr	r0, [r4, #20]
   3d1a4:	cmn	r6, #1
   3d1a8:	uxtb	r1, r6
   3d1ac:	movle	r2, #45	; 0x2d
   3d1b0:	rsble	r6, r6, #0
   3d1b4:	lsr	r1, r1, #7
   3d1b8:	strble	r2, [r0], #1
   3d1bc:	uxtb	r2, r6
   3d1c0:	cmp	r2, #100	; 0x64
   3d1c4:	bcc	3d228 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd8>
   3d1c8:	mov	r3, #0
   3d1cc:	strb	r3, [r0, #3]
   3d1d0:	movw	r3, #34079	; 0x851f
   3d1d4:	movt	r3, #20971	; 0x51eb
   3d1d8:	umull	r3, r6, r2, r3
   3d1dc:	mov	r3, #48	; 0x30
   3d1e0:	orr	r3, r3, r6, lsr #5
   3d1e4:	strb	r3, [r0]
   3d1e8:	lsr	r3, r6, #5
   3d1ec:	mov	r6, #100	; 0x64
   3d1f0:	mls	r2, r3, r6, r2
   3d1f4:	movw	r3, #48464	; 0xbd50
   3d1f8:	movt	r3, #4
   3d1fc:	uxtb	r2, r2
   3d200:	add	r2, r3, r2, lsl #1
   3d204:	ldrh	r2, [r2]
   3d208:	strh	r2, [r0, #1]
   3d20c:	mov	r0, #3
   3d210:	b	3d280 <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
   3d214:	mov	r0, r4
   3d218:	mov	r1, r6
   3d21c:	mov	r2, r7
   3d220:	pop	{r4, r5, r6, r7, fp, lr}
   3d224:	bx	r2
   3d228:	cmp	r2, #10
   3d22c:	bcc	3d26c <flatcc_json_printer_int8_enum_struct_field@@Base+0x11c>
   3d230:	mov	r3, #0
   3d234:	strb	r3, [r0, #2]
   3d238:	movw	r3, #34079	; 0x851f
   3d23c:	movt	r3, #20971	; 0x51eb
   3d240:	umull	r3, r6, r2, r3
   3d244:	lsr	r3, r6, #5
   3d248:	mov	r6, #100	; 0x64
   3d24c:	mls	r2, r3, r6, r2
   3d250:	movw	r3, #48464	; 0xbd50
   3d254:	movt	r3, #4
   3d258:	add	r2, r3, r2, lsl #1
   3d25c:	ldrh	r2, [r2]
   3d260:	strh	r2, [r0]
   3d264:	mov	r0, #2
   3d268:	b	3d280 <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
   3d26c:	mov	r2, #0
   3d270:	strb	r2, [r0, #1]
   3d274:	add	r2, r6, #48	; 0x30
   3d278:	strb	r2, [r0]
   3d27c:	mov	r0, #1
   3d280:	add	r0, r0, r1
   3d284:	ldr	r1, [r4, #20]
   3d288:	add	r0, r1, r0
   3d28c:	str	r0, [r4, #20]
   3d290:	pop	{r4, r5, r6, r7, fp, pc}

0003d294 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   3d294:	push	{r4, r5, r6, r7, fp, lr}
   3d298:	add	fp, sp, #16
   3d29c:	mov	r4, r0
   3d2a0:	add	r0, r2, r3
   3d2a4:	add	r7, fp, #8
   3d2a8:	mov	r5, r1
   3d2ac:	ldrsh	r6, [r0]
   3d2b0:	ldm	r7, {r1, r2, r7}
   3d2b4:	cmp	r5, #0
   3d2b8:	beq	3d2d0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x3c>
   3d2bc:	ldr	r0, [r4, #20]
   3d2c0:	add	r3, r0, #1
   3d2c4:	str	r3, [r4, #20]
   3d2c8:	mov	r3, #44	; 0x2c
   3d2cc:	strb	r3, [r0]
   3d2d0:	mov	r0, r4
   3d2d4:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3d2d8:	ldrb	r0, [r4, #27]
   3d2dc:	cmp	r0, #0
   3d2e0:	beq	3d31c <flatcc_json_printer_int16_enum_struct_field@@Base+0x88>
   3d2e4:	ldr	r1, [r4, #20]
   3d2e8:	uxth	r0, r6
   3d2ec:	cmn	r6, #1
   3d2f0:	rsble	r6, r6, #0
   3d2f4:	lsr	r5, r0, #15
   3d2f8:	movle	r0, #45	; 0x2d
   3d2fc:	strble	r0, [r1], #1
   3d300:	uxth	r0, r6
   3d304:	bl	3a0b4 <flatcc_json_printer_uint16@@Base+0x2c>
   3d308:	ldr	r1, [r4, #20]
   3d30c:	add	r0, r0, r5
   3d310:	add	r0, r1, r0
   3d314:	str	r0, [r4, #20]
   3d318:	pop	{r4, r5, r6, r7, fp, pc}
   3d31c:	mov	r0, r4
   3d320:	mov	r1, r6
   3d324:	mov	r2, r7
   3d328:	pop	{r4, r5, r6, r7, fp, lr}
   3d32c:	bx	r2

0003d330 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   3d330:	push	{r4, r5, r6, r7, fp, lr}
   3d334:	add	fp, sp, #16
   3d338:	add	r7, fp, #8
   3d33c:	mov	r5, r1
   3d340:	ldr	r6, [r2, r3]
   3d344:	mov	r4, r0
   3d348:	ldm	r7, {r1, r2, r7}
   3d34c:	cmp	r5, #0
   3d350:	beq	3d368 <flatcc_json_printer_int32_enum_struct_field@@Base+0x38>
   3d354:	ldr	r0, [r4, #20]
   3d358:	add	r3, r0, #1
   3d35c:	str	r3, [r4, #20]
   3d360:	mov	r3, #44	; 0x2c
   3d364:	strb	r3, [r0]
   3d368:	mov	r0, r4
   3d36c:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3d370:	ldrb	r0, [r4, #27]
   3d374:	cmp	r0, #0
   3d378:	beq	3d3b0 <flatcc_json_printer_int32_enum_struct_field@@Base+0x80>
   3d37c:	ldr	r1, [r4, #20]
   3d380:	cmn	r6, #1
   3d384:	lsr	r5, r6, #31
   3d388:	movle	r0, #45	; 0x2d
   3d38c:	rsble	r6, r6, #0
   3d390:	strble	r0, [r1], #1
   3d394:	mov	r0, r6
   3d398:	bl	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3d39c:	ldr	r1, [r4, #20]
   3d3a0:	add	r0, r0, r5
   3d3a4:	add	r0, r1, r0
   3d3a8:	str	r0, [r4, #20]
   3d3ac:	pop	{r4, r5, r6, r7, fp, pc}
   3d3b0:	mov	r0, r4
   3d3b4:	mov	r1, r6
   3d3b8:	mov	r2, r7
   3d3bc:	pop	{r4, r5, r6, r7, fp, lr}
   3d3c0:	bx	r2

0003d3c4 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   3d3c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d3c8:	add	fp, sp, #24
   3d3cc:	ldr	r7, [r2, r3]!
   3d3d0:	add	r8, fp, #8
   3d3d4:	mov	r6, r1
   3d3d8:	mov	r4, r0
   3d3dc:	cmp	r6, #0
   3d3e0:	ldr	r5, [r2, #4]
   3d3e4:	ldm	r8, {r1, r2, r8}
   3d3e8:	beq	3d400 <flatcc_json_printer_int64_enum_struct_field@@Base+0x3c>
   3d3ec:	ldr	r0, [r4, #20]
   3d3f0:	add	r3, r0, #1
   3d3f4:	str	r3, [r4, #20]
   3d3f8:	mov	r3, #44	; 0x2c
   3d3fc:	strb	r3, [r0]
   3d400:	mov	r0, r4
   3d404:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3d408:	ldrb	r0, [r4, #27]
   3d40c:	cmp	r0, #0
   3d410:	beq	3d454 <flatcc_json_printer_int64_enum_struct_field@@Base+0x90>
   3d414:	ldr	r2, [r4, #20]
   3d418:	lsr	r6, r5, #31
   3d41c:	cmn	r5, #1
   3d420:	bgt	3d434 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   3d424:	mov	r0, #45	; 0x2d
   3d428:	rsbs	r7, r7, #0
   3d42c:	strb	r0, [r2], #1
   3d430:	rsc	r5, r5, #0
   3d434:	mov	r0, r7
   3d438:	mov	r1, r5
   3d43c:	bl	3a5b8 <flatcc_json_printer_uint64@@Base+0x30>
   3d440:	ldr	r1, [r4, #20]
   3d444:	add	r0, r0, r6
   3d448:	add	r0, r1, r0
   3d44c:	str	r0, [r4, #20]
   3d450:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3d454:	mov	r0, r4
   3d458:	mov	r2, r7
   3d45c:	mov	r3, r5
   3d460:	mov	r1, r8
   3d464:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d468:	bx	r1

0003d46c <flatcc_json_printer_bool_enum_struct_field@@Base>:
   3d46c:	push	{r4, r5, r6, r7, fp, lr}
   3d470:	add	fp, sp, #16
   3d474:	add	r7, fp, #8
   3d478:	mov	r5, r1
   3d47c:	ldrb	r6, [r2, r3]
   3d480:	mov	r4, r0
   3d484:	ldm	r7, {r1, r2, r7}
   3d488:	cmp	r5, #0
   3d48c:	beq	3d4a4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x38>
   3d490:	ldr	r0, [r4, #20]
   3d494:	add	r3, r0, #1
   3d498:	str	r3, [r4, #20]
   3d49c:	mov	r3, #44	; 0x2c
   3d4a0:	strb	r3, [r0]
   3d4a4:	mov	r0, r4
   3d4a8:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3d4ac:	ldrb	r0, [r4, #27]
   3d4b0:	cmp	r0, #0
   3d4b4:	beq	3d4ec <flatcc_json_printer_bool_enum_struct_field@@Base+0x80>
   3d4b8:	ldr	r0, [r4, #20]
   3d4bc:	cmp	r6, #0
   3d4c0:	beq	3d500 <flatcc_json_printer_bool_enum_struct_field@@Base+0x94>
   3d4c4:	mov	r1, #0
   3d4c8:	strb	r1, [r0, #4]
   3d4cc:	movw	r1, #29300	; 0x7274
   3d4d0:	movt	r1, #25973	; 0x6575
   3d4d4:	str	r1, [r0]
   3d4d8:	mov	r0, #4
   3d4dc:	ldr	r1, [r4, #20]
   3d4e0:	add	r0, r1, r0
   3d4e4:	str	r0, [r4, #20]
   3d4e8:	pop	{r4, r5, r6, r7, fp, pc}
   3d4ec:	mov	r0, r4
   3d4f0:	mov	r1, r6
   3d4f4:	mov	r2, r7
   3d4f8:	pop	{r4, r5, r6, r7, fp, lr}
   3d4fc:	bx	r2
   3d500:	mov	r1, #101	; 0x65
   3d504:	strh	r1, [r0, #4]
   3d508:	movw	r1, #24934	; 0x6166
   3d50c:	movt	r1, #29548	; 0x736c
   3d510:	str	r1, [r0]
   3d514:	mov	r0, #5
   3d518:	ldr	r1, [r4, #20]
   3d51c:	add	r0, r1, r0
   3d520:	str	r0, [r4, #20]
   3d524:	pop	{r4, r5, r6, r7, fp, pc}

0003d528 <flatcc_json_printer_utype_vector_field@@Base>:
   3d528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d52c:	add	fp, sp, #28
   3d530:	sub	sp, sp, #4
   3d534:	mov	r4, r0
   3d538:	mov	r0, #4
   3d53c:	add	r0, r0, r2, lsl #1
   3d540:	ldr	r2, [r1, #8]
   3d544:	cmp	r0, r2
   3d548:	bge	3d568 <flatcc_json_printer_utype_vector_field@@Base+0x40>
   3d54c:	ldr	r2, [r1, #4]
   3d550:	add	r0, r2, r0
   3d554:	ldrh	r0, [r0]
   3d558:	cmp	r0, #0
   3d55c:	ldrne	r2, [r1]
   3d560:	addsne	r9, r2, r0
   3d564:	bne	3d570 <flatcc_json_printer_utype_vector_field@@Base+0x48>
   3d568:	sub	sp, fp, #28
   3d56c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d570:	ldr	r0, [r1, #16]
   3d574:	ldr	r2, [fp, #8]
   3d578:	add	r7, r0, #1
   3d57c:	cmp	r0, #0
   3d580:	str	r7, [r1, #16]
   3d584:	beq	3d59c <flatcc_json_printer_utype_vector_field@@Base+0x74>
   3d588:	ldr	r0, [r4, #20]
   3d58c:	add	r1, r0, #1
   3d590:	str	r1, [r4, #20]
   3d594:	mov	r1, #44	; 0x2c
   3d598:	strb	r1, [r0]
   3d59c:	ldr	r0, [r9]
   3d5a0:	mov	r1, r3
   3d5a4:	ldr	r8, [r9, r0]!
   3d5a8:	mov	r0, r4
   3d5ac:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3d5b0:	ldr	r1, [r4, #32]
   3d5b4:	ldr	r0, [r4, #20]
   3d5b8:	cmp	r8, #0
   3d5bc:	add	r1, r1, #1
   3d5c0:	str	r1, [r4, #32]
   3d5c4:	add	r1, r0, #1
   3d5c8:	str	r1, [r4, #20]
   3d5cc:	mov	r1, #91	; 0x5b
   3d5d0:	strb	r1, [r0]
   3d5d4:	beq	3d964 <flatcc_json_printer_utype_vector_field@@Base+0x43c>
   3d5d8:	ldrb	r1, [r4, #25]
   3d5dc:	ldr	r0, [r4, #20]
   3d5e0:	cmp	r1, #0
   3d5e4:	beq	3d6b0 <flatcc_json_printer_utype_vector_field@@Base+0x188>
   3d5e8:	add	r1, r0, #1
   3d5ec:	str	r1, [r4, #20]
   3d5f0:	mov	r1, #10
   3d5f4:	strb	r1, [r0]
   3d5f8:	ldr	r0, [r4, #20]
   3d5fc:	ldrb	r2, [r4, #25]
   3d600:	ldr	r3, [r4, #32]
   3d604:	ldr	r1, [r4, #16]
   3d608:	mla	r7, r3, r2, r0
   3d60c:	mul	r5, r3, r2
   3d610:	cmp	r7, r1
   3d614:	bls	3d684 <flatcc_json_printer_utype_vector_field@@Base+0x15c>
   3d618:	cmp	r0, r1
   3d61c:	bcc	3d638 <flatcc_json_printer_utype_vector_field@@Base+0x110>
   3d620:	ldr	r2, [r4, #44]	; 0x2c
   3d624:	mov	r0, r4
   3d628:	mov	r1, #0
   3d62c:	blx	r2
   3d630:	ldr	r1, [r4, #16]
   3d634:	ldr	r0, [r4, #20]
   3d638:	sub	r6, r1, r0
   3d63c:	cmp	r6, r5
   3d640:	bcs	3d684 <flatcc_json_printer_utype_vector_field@@Base+0x15c>
   3d644:	mov	r1, #32
   3d648:	mov	r2, r6
   3d64c:	bl	14eec <memset@plt>
   3d650:	ldr	r0, [r4, #20]
   3d654:	ldr	r2, [r4, #44]	; 0x2c
   3d658:	mov	r1, #0
   3d65c:	add	r0, r0, r6
   3d660:	str	r0, [r4, #20]
   3d664:	mov	r0, r4
   3d668:	blx	r2
   3d66c:	ldr	r1, [r4, #16]
   3d670:	ldr	r0, [r4, #20]
   3d674:	sub	r5, r5, r6
   3d678:	sub	r6, r1, r0
   3d67c:	cmp	r5, r6
   3d680:	bhi	3d644 <flatcc_json_printer_utype_vector_field@@Base+0x11c>
   3d684:	mov	r1, #32
   3d688:	mov	r2, r5
   3d68c:	bl	14eec <memset@plt>
   3d690:	ldr	r0, [r4, #20]
   3d694:	add	r0, r0, r5
   3d698:	str	r0, [r4, #20]
   3d69c:	ldrb	r1, [r9, #4]
   3d6a0:	mov	r2, #0
   3d6a4:	cmp	r1, #100	; 0x64
   3d6a8:	bcs	3d6e0 <flatcc_json_printer_utype_vector_field@@Base+0x1b8>
   3d6ac:	b	3d728 <flatcc_json_printer_utype_vector_field@@Base+0x200>
   3d6b0:	ldr	r1, [r4, #16]
   3d6b4:	cmp	r0, r1
   3d6b8:	bcc	3d6d0 <flatcc_json_printer_utype_vector_field@@Base+0x1a8>
   3d6bc:	ldr	r2, [r4, #44]	; 0x2c
   3d6c0:	mov	r0, r4
   3d6c4:	mov	r1, #0
   3d6c8:	blx	r2
   3d6cc:	ldr	r0, [r4, #20]
   3d6d0:	ldrb	r1, [r9, #4]
   3d6d4:	mov	r2, #0
   3d6d8:	cmp	r1, #100	; 0x64
   3d6dc:	bcc	3d728 <flatcc_json_printer_utype_vector_field@@Base+0x200>
   3d6e0:	strb	r2, [r0, #3]
   3d6e4:	movw	r2, #34079	; 0x851f
   3d6e8:	movt	r2, #20971	; 0x51eb
   3d6ec:	umull	r2, r3, r1, r2
   3d6f0:	mov	r2, #48	; 0x30
   3d6f4:	orr	r2, r2, r3, lsr #5
   3d6f8:	strb	r2, [r0]
   3d6fc:	lsr	r2, r3, #5
   3d700:	mov	r3, #100	; 0x64
   3d704:	mls	r1, r2, r3, r1
   3d708:	movw	r2, #48464	; 0xbd50
   3d70c:	movt	r2, #4
   3d710:	uxtb	r1, r1
   3d714:	add	r1, r2, r1, lsl #1
   3d718:	ldrh	r1, [r1]
   3d71c:	strh	r1, [r0, #1]
   3d720:	mov	r0, #3
   3d724:	b	3d778 <flatcc_json_printer_utype_vector_field@@Base+0x250>
   3d728:	cmp	r1, #10
   3d72c:	bcc	3d768 <flatcc_json_printer_utype_vector_field@@Base+0x240>
   3d730:	strb	r2, [r0, #2]
   3d734:	movw	r2, #34079	; 0x851f
   3d738:	movt	r2, #20971	; 0x51eb
   3d73c:	umull	r2, r3, r1, r2
   3d740:	lsr	r2, r3, #5
   3d744:	mov	r3, #100	; 0x64
   3d748:	mls	r1, r2, r3, r1
   3d74c:	movw	r2, #48464	; 0xbd50
   3d750:	movt	r2, #4
   3d754:	add	r1, r2, r1, lsl #1
   3d758:	ldrh	r1, [r1]
   3d75c:	strh	r1, [r0]
   3d760:	mov	r0, #2
   3d764:	b	3d778 <flatcc_json_printer_utype_vector_field@@Base+0x250>
   3d768:	add	r1, r1, #48	; 0x30
   3d76c:	strb	r2, [r0, #1]
   3d770:	strb	r1, [r0]
   3d774:	mov	r0, #1
   3d778:	ldr	r1, [r4, #20]
   3d77c:	subs	r8, r8, #1
   3d780:	add	r0, r1, r0
   3d784:	str	r0, [r4, #20]
   3d788:	beq	3d964 <flatcc_json_printer_utype_vector_field@@Base+0x43c>
   3d78c:	ldr	r0, [r4, #20]
   3d790:	add	r7, r9, #5
   3d794:	mov	r9, #44	; 0x2c
   3d798:	mov	sl, #0
   3d79c:	b	3d7fc <flatcc_json_printer_utype_vector_field@@Base+0x2d4>
   3d7a0:	movw	r2, #34079	; 0x851f
   3d7a4:	strb	sl, [r0, #3]
   3d7a8:	movt	r2, #20971	; 0x51eb
   3d7ac:	umull	r2, r3, r1, r2
   3d7b0:	mov	r2, #48	; 0x30
   3d7b4:	orr	r2, r2, r3, lsr #5
   3d7b8:	strb	r2, [r0]
   3d7bc:	lsr	r2, r3, #5
   3d7c0:	mov	r3, #100	; 0x64
   3d7c4:	mls	r1, r2, r3, r1
   3d7c8:	movw	r2, #48464	; 0xbd50
   3d7cc:	movt	r2, #4
   3d7d0:	uxtb	r1, r1
   3d7d4:	add	r1, r2, r1, lsl #1
   3d7d8:	ldrh	r1, [r1]
   3d7dc:	strh	r1, [r0, #1]
   3d7e0:	mov	r0, #3
   3d7e4:	ldr	r1, [r4, #20]
   3d7e8:	add	r7, r7, #1
   3d7ec:	cmp	r8, #0
   3d7f0:	add	r0, r1, r0
   3d7f4:	str	r0, [r4, #20]
   3d7f8:	beq	3d964 <flatcc_json_printer_utype_vector_field@@Base+0x43c>
   3d7fc:	add	r1, r0, #1
   3d800:	str	r1, [r4, #20]
   3d804:	strb	r9, [r0]
   3d808:	ldrb	r1, [r4, #25]
   3d80c:	ldr	r0, [r4, #20]
   3d810:	cmp	r1, #0
   3d814:	beq	3d8e0 <flatcc_json_printer_utype_vector_field@@Base+0x3b8>
   3d818:	add	r1, r0, #1
   3d81c:	str	r1, [r4, #20]
   3d820:	mov	r1, #10
   3d824:	strb	r1, [r0]
   3d828:	ldr	r0, [r4, #20]
   3d82c:	ldrb	r2, [r4, #25]
   3d830:	ldr	r3, [r4, #32]
   3d834:	ldr	r1, [r4, #16]
   3d838:	mla	r6, r3, r2, r0
   3d83c:	mul	r5, r3, r2
   3d840:	cmp	r6, r1
   3d844:	bls	3d8b4 <flatcc_json_printer_utype_vector_field@@Base+0x38c>
   3d848:	cmp	r0, r1
   3d84c:	bcc	3d868 <flatcc_json_printer_utype_vector_field@@Base+0x340>
   3d850:	ldr	r2, [r4, #44]	; 0x2c
   3d854:	mov	r0, r4
   3d858:	mov	r1, #0
   3d85c:	blx	r2
   3d860:	ldr	r1, [r4, #16]
   3d864:	ldr	r0, [r4, #20]
   3d868:	sub	r6, r1, r0
   3d86c:	cmp	r6, r5
   3d870:	bcs	3d8b4 <flatcc_json_printer_utype_vector_field@@Base+0x38c>
   3d874:	mov	r1, #32
   3d878:	mov	r2, r6
   3d87c:	bl	14eec <memset@plt>
   3d880:	ldr	r0, [r4, #20]
   3d884:	ldr	r2, [r4, #44]	; 0x2c
   3d888:	mov	r1, #0
   3d88c:	add	r0, r0, r6
   3d890:	str	r0, [r4, #20]
   3d894:	mov	r0, r4
   3d898:	blx	r2
   3d89c:	ldr	r1, [r4, #16]
   3d8a0:	ldr	r0, [r4, #20]
   3d8a4:	sub	r5, r5, r6
   3d8a8:	sub	r6, r1, r0
   3d8ac:	cmp	r5, r6
   3d8b0:	bhi	3d874 <flatcc_json_printer_utype_vector_field@@Base+0x34c>
   3d8b4:	mov	r1, #32
   3d8b8:	mov	r2, r5
   3d8bc:	bl	14eec <memset@plt>
   3d8c0:	ldr	r0, [r4, #20]
   3d8c4:	add	r0, r0, r5
   3d8c8:	str	r0, [r4, #20]
   3d8cc:	ldrb	r1, [r7]
   3d8d0:	sub	r8, r8, #1
   3d8d4:	cmp	r1, #100	; 0x64
   3d8d8:	bcs	3d7a0 <flatcc_json_printer_utype_vector_field@@Base+0x278>
   3d8dc:	b	3d910 <flatcc_json_printer_utype_vector_field@@Base+0x3e8>
   3d8e0:	ldr	r1, [r4, #16]
   3d8e4:	cmp	r0, r1
   3d8e8:	bcc	3d900 <flatcc_json_printer_utype_vector_field@@Base+0x3d8>
   3d8ec:	ldr	r2, [r4, #44]	; 0x2c
   3d8f0:	mov	r0, r4
   3d8f4:	mov	r1, #0
   3d8f8:	blx	r2
   3d8fc:	ldr	r0, [r4, #20]
   3d900:	ldrb	r1, [r7]
   3d904:	sub	r8, r8, #1
   3d908:	cmp	r1, #100	; 0x64
   3d90c:	bcs	3d7a0 <flatcc_json_printer_utype_vector_field@@Base+0x278>
   3d910:	cmp	r1, #10
   3d914:	bcc	3d950 <flatcc_json_printer_utype_vector_field@@Base+0x428>
   3d918:	movw	r2, #34079	; 0x851f
   3d91c:	strb	sl, [r0, #2]
   3d920:	movt	r2, #20971	; 0x51eb
   3d924:	umull	r2, r3, r1, r2
   3d928:	lsr	r2, r3, #5
   3d92c:	mov	r3, #100	; 0x64
   3d930:	mls	r1, r2, r3, r1
   3d934:	movw	r2, #48464	; 0xbd50
   3d938:	movt	r2, #4
   3d93c:	add	r1, r2, r1, lsl #1
   3d940:	ldrh	r1, [r1]
   3d944:	strh	r1, [r0]
   3d948:	mov	r0, #2
   3d94c:	b	3d7e4 <flatcc_json_printer_utype_vector_field@@Base+0x2bc>
   3d950:	add	r1, r1, #48	; 0x30
   3d954:	strb	sl, [r0, #1]
   3d958:	strb	r1, [r0]
   3d95c:	mov	r0, #1
   3d960:	b	3d7e4 <flatcc_json_printer_utype_vector_field@@Base+0x2bc>
   3d964:	ldrb	r1, [r4, #25]
   3d968:	ldr	r0, [r4, #20]
   3d96c:	cmp	r1, #0
   3d970:	beq	3da30 <flatcc_json_printer_utype_vector_field@@Base+0x508>
   3d974:	add	r1, r0, #1
   3d978:	str	r1, [r4, #20]
   3d97c:	mov	r1, #10
   3d980:	strb	r1, [r0]
   3d984:	ldr	r0, [r4, #32]
   3d988:	sub	r2, r0, #1
   3d98c:	str	r2, [r4, #32]
   3d990:	ldrb	r3, [r4, #25]
   3d994:	ldr	r0, [r4, #20]
   3d998:	ldr	r1, [r4, #16]
   3d99c:	mla	r7, r2, r3, r0
   3d9a0:	mul	r5, r2, r3
   3d9a4:	cmp	r7, r1
   3d9a8:	bls	3da18 <flatcc_json_printer_utype_vector_field@@Base+0x4f0>
   3d9ac:	cmp	r0, r1
   3d9b0:	bcc	3d9cc <flatcc_json_printer_utype_vector_field@@Base+0x4a4>
   3d9b4:	ldr	r2, [r4, #44]	; 0x2c
   3d9b8:	mov	r0, r4
   3d9bc:	mov	r1, #0
   3d9c0:	blx	r2
   3d9c4:	ldr	r1, [r4, #16]
   3d9c8:	ldr	r0, [r4, #20]
   3d9cc:	sub	r6, r1, r0
   3d9d0:	cmp	r6, r5
   3d9d4:	bcs	3da18 <flatcc_json_printer_utype_vector_field@@Base+0x4f0>
   3d9d8:	mov	r1, #32
   3d9dc:	mov	r2, r6
   3d9e0:	bl	14eec <memset@plt>
   3d9e4:	ldr	r0, [r4, #20]
   3d9e8:	ldr	r2, [r4, #44]	; 0x2c
   3d9ec:	mov	r1, #0
   3d9f0:	add	r0, r0, r6
   3d9f4:	str	r0, [r4, #20]
   3d9f8:	mov	r0, r4
   3d9fc:	blx	r2
   3da00:	ldr	r1, [r4, #16]
   3da04:	ldr	r0, [r4, #20]
   3da08:	sub	r5, r5, r6
   3da0c:	sub	r6, r1, r0
   3da10:	cmp	r5, r6
   3da14:	bhi	3d9d8 <flatcc_json_printer_utype_vector_field@@Base+0x4b0>
   3da18:	mov	r1, #32
   3da1c:	mov	r2, r5
   3da20:	bl	14eec <memset@plt>
   3da24:	ldr	r0, [r4, #20]
   3da28:	add	r0, r0, r5
   3da2c:	str	r0, [r4, #20]
   3da30:	add	r1, r0, #1
   3da34:	str	r1, [r4, #20]
   3da38:	mov	r1, #93	; 0x5d
   3da3c:	strb	r1, [r0]
   3da40:	sub	sp, fp, #28
   3da44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003da48 <flatcc_json_printer_uint8_vector_field@@Base>:
   3da48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3da4c:	add	fp, sp, #28
   3da50:	sub	sp, sp, #4
   3da54:	mov	r4, r0
   3da58:	mov	r0, #4
   3da5c:	add	r0, r0, r2, lsl #1
   3da60:	ldr	r2, [r1, #8]
   3da64:	cmp	r0, r2
   3da68:	bge	3da88 <flatcc_json_printer_uint8_vector_field@@Base+0x40>
   3da6c:	ldr	r2, [r1, #4]
   3da70:	add	r0, r2, r0
   3da74:	ldrh	r0, [r0]
   3da78:	cmp	r0, #0
   3da7c:	ldrne	r2, [r1]
   3da80:	addsne	r9, r2, r0
   3da84:	bne	3da90 <flatcc_json_printer_uint8_vector_field@@Base+0x48>
   3da88:	sub	sp, fp, #28
   3da8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3da90:	ldr	r0, [r1, #16]
   3da94:	ldr	r2, [fp, #8]
   3da98:	add	r7, r0, #1
   3da9c:	cmp	r0, #0
   3daa0:	str	r7, [r1, #16]
   3daa4:	beq	3dabc <flatcc_json_printer_uint8_vector_field@@Base+0x74>
   3daa8:	ldr	r0, [r4, #20]
   3daac:	add	r1, r0, #1
   3dab0:	str	r1, [r4, #20]
   3dab4:	mov	r1, #44	; 0x2c
   3dab8:	strb	r1, [r0]
   3dabc:	ldr	r0, [r9]
   3dac0:	mov	r1, r3
   3dac4:	ldr	r8, [r9, r0]!
   3dac8:	mov	r0, r4
   3dacc:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3dad0:	ldr	r1, [r4, #32]
   3dad4:	ldr	r0, [r4, #20]
   3dad8:	cmp	r8, #0
   3dadc:	add	r1, r1, #1
   3dae0:	str	r1, [r4, #32]
   3dae4:	add	r1, r0, #1
   3dae8:	str	r1, [r4, #20]
   3daec:	mov	r1, #91	; 0x5b
   3daf0:	strb	r1, [r0]
   3daf4:	beq	3de84 <flatcc_json_printer_uint8_vector_field@@Base+0x43c>
   3daf8:	ldrb	r1, [r4, #25]
   3dafc:	ldr	r0, [r4, #20]
   3db00:	cmp	r1, #0
   3db04:	beq	3dbd0 <flatcc_json_printer_uint8_vector_field@@Base+0x188>
   3db08:	add	r1, r0, #1
   3db0c:	str	r1, [r4, #20]
   3db10:	mov	r1, #10
   3db14:	strb	r1, [r0]
   3db18:	ldr	r0, [r4, #20]
   3db1c:	ldrb	r2, [r4, #25]
   3db20:	ldr	r3, [r4, #32]
   3db24:	ldr	r1, [r4, #16]
   3db28:	mla	r7, r3, r2, r0
   3db2c:	mul	r5, r3, r2
   3db30:	cmp	r7, r1
   3db34:	bls	3dba4 <flatcc_json_printer_uint8_vector_field@@Base+0x15c>
   3db38:	cmp	r0, r1
   3db3c:	bcc	3db58 <flatcc_json_printer_uint8_vector_field@@Base+0x110>
   3db40:	ldr	r2, [r4, #44]	; 0x2c
   3db44:	mov	r0, r4
   3db48:	mov	r1, #0
   3db4c:	blx	r2
   3db50:	ldr	r1, [r4, #16]
   3db54:	ldr	r0, [r4, #20]
   3db58:	sub	r6, r1, r0
   3db5c:	cmp	r6, r5
   3db60:	bcs	3dba4 <flatcc_json_printer_uint8_vector_field@@Base+0x15c>
   3db64:	mov	r1, #32
   3db68:	mov	r2, r6
   3db6c:	bl	14eec <memset@plt>
   3db70:	ldr	r0, [r4, #20]
   3db74:	ldr	r2, [r4, #44]	; 0x2c
   3db78:	mov	r1, #0
   3db7c:	add	r0, r0, r6
   3db80:	str	r0, [r4, #20]
   3db84:	mov	r0, r4
   3db88:	blx	r2
   3db8c:	ldr	r1, [r4, #16]
   3db90:	ldr	r0, [r4, #20]
   3db94:	sub	r5, r5, r6
   3db98:	sub	r6, r1, r0
   3db9c:	cmp	r5, r6
   3dba0:	bhi	3db64 <flatcc_json_printer_uint8_vector_field@@Base+0x11c>
   3dba4:	mov	r1, #32
   3dba8:	mov	r2, r5
   3dbac:	bl	14eec <memset@plt>
   3dbb0:	ldr	r0, [r4, #20]
   3dbb4:	add	r0, r0, r5
   3dbb8:	str	r0, [r4, #20]
   3dbbc:	ldrb	r1, [r9, #4]
   3dbc0:	mov	r2, #0
   3dbc4:	cmp	r1, #100	; 0x64
   3dbc8:	bcs	3dc00 <flatcc_json_printer_uint8_vector_field@@Base+0x1b8>
   3dbcc:	b	3dc48 <flatcc_json_printer_uint8_vector_field@@Base+0x200>
   3dbd0:	ldr	r1, [r4, #16]
   3dbd4:	cmp	r0, r1
   3dbd8:	bcc	3dbf0 <flatcc_json_printer_uint8_vector_field@@Base+0x1a8>
   3dbdc:	ldr	r2, [r4, #44]	; 0x2c
   3dbe0:	mov	r0, r4
   3dbe4:	mov	r1, #0
   3dbe8:	blx	r2
   3dbec:	ldr	r0, [r4, #20]
   3dbf0:	ldrb	r1, [r9, #4]
   3dbf4:	mov	r2, #0
   3dbf8:	cmp	r1, #100	; 0x64
   3dbfc:	bcc	3dc48 <flatcc_json_printer_uint8_vector_field@@Base+0x200>
   3dc00:	strb	r2, [r0, #3]
   3dc04:	movw	r2, #34079	; 0x851f
   3dc08:	movt	r2, #20971	; 0x51eb
   3dc0c:	umull	r2, r3, r1, r2
   3dc10:	mov	r2, #48	; 0x30
   3dc14:	orr	r2, r2, r3, lsr #5
   3dc18:	strb	r2, [r0]
   3dc1c:	lsr	r2, r3, #5
   3dc20:	mov	r3, #100	; 0x64
   3dc24:	mls	r1, r2, r3, r1
   3dc28:	movw	r2, #48464	; 0xbd50
   3dc2c:	movt	r2, #4
   3dc30:	uxtb	r1, r1
   3dc34:	add	r1, r2, r1, lsl #1
   3dc38:	ldrh	r1, [r1]
   3dc3c:	strh	r1, [r0, #1]
   3dc40:	mov	r0, #3
   3dc44:	b	3dc98 <flatcc_json_printer_uint8_vector_field@@Base+0x250>
   3dc48:	cmp	r1, #10
   3dc4c:	bcc	3dc88 <flatcc_json_printer_uint8_vector_field@@Base+0x240>
   3dc50:	strb	r2, [r0, #2]
   3dc54:	movw	r2, #34079	; 0x851f
   3dc58:	movt	r2, #20971	; 0x51eb
   3dc5c:	umull	r2, r3, r1, r2
   3dc60:	lsr	r2, r3, #5
   3dc64:	mov	r3, #100	; 0x64
   3dc68:	mls	r1, r2, r3, r1
   3dc6c:	movw	r2, #48464	; 0xbd50
   3dc70:	movt	r2, #4
   3dc74:	add	r1, r2, r1, lsl #1
   3dc78:	ldrh	r1, [r1]
   3dc7c:	strh	r1, [r0]
   3dc80:	mov	r0, #2
   3dc84:	b	3dc98 <flatcc_json_printer_uint8_vector_field@@Base+0x250>
   3dc88:	add	r1, r1, #48	; 0x30
   3dc8c:	strb	r2, [r0, #1]
   3dc90:	strb	r1, [r0]
   3dc94:	mov	r0, #1
   3dc98:	ldr	r1, [r4, #20]
   3dc9c:	subs	r8, r8, #1
   3dca0:	add	r0, r1, r0
   3dca4:	str	r0, [r4, #20]
   3dca8:	beq	3de84 <flatcc_json_printer_uint8_vector_field@@Base+0x43c>
   3dcac:	ldr	r0, [r4, #20]
   3dcb0:	add	r7, r9, #5
   3dcb4:	mov	r9, #44	; 0x2c
   3dcb8:	mov	sl, #0
   3dcbc:	b	3dd1c <flatcc_json_printer_uint8_vector_field@@Base+0x2d4>
   3dcc0:	movw	r2, #34079	; 0x851f
   3dcc4:	strb	sl, [r0, #3]
   3dcc8:	movt	r2, #20971	; 0x51eb
   3dccc:	umull	r2, r3, r1, r2
   3dcd0:	mov	r2, #48	; 0x30
   3dcd4:	orr	r2, r2, r3, lsr #5
   3dcd8:	strb	r2, [r0]
   3dcdc:	lsr	r2, r3, #5
   3dce0:	mov	r3, #100	; 0x64
   3dce4:	mls	r1, r2, r3, r1
   3dce8:	movw	r2, #48464	; 0xbd50
   3dcec:	movt	r2, #4
   3dcf0:	uxtb	r1, r1
   3dcf4:	add	r1, r2, r1, lsl #1
   3dcf8:	ldrh	r1, [r1]
   3dcfc:	strh	r1, [r0, #1]
   3dd00:	mov	r0, #3
   3dd04:	ldr	r1, [r4, #20]
   3dd08:	add	r7, r7, #1
   3dd0c:	cmp	r8, #0
   3dd10:	add	r0, r1, r0
   3dd14:	str	r0, [r4, #20]
   3dd18:	beq	3de84 <flatcc_json_printer_uint8_vector_field@@Base+0x43c>
   3dd1c:	add	r1, r0, #1
   3dd20:	str	r1, [r4, #20]
   3dd24:	strb	r9, [r0]
   3dd28:	ldrb	r1, [r4, #25]
   3dd2c:	ldr	r0, [r4, #20]
   3dd30:	cmp	r1, #0
   3dd34:	beq	3de00 <flatcc_json_printer_uint8_vector_field@@Base+0x3b8>
   3dd38:	add	r1, r0, #1
   3dd3c:	str	r1, [r4, #20]
   3dd40:	mov	r1, #10
   3dd44:	strb	r1, [r0]
   3dd48:	ldr	r0, [r4, #20]
   3dd4c:	ldrb	r2, [r4, #25]
   3dd50:	ldr	r3, [r4, #32]
   3dd54:	ldr	r1, [r4, #16]
   3dd58:	mla	r6, r3, r2, r0
   3dd5c:	mul	r5, r3, r2
   3dd60:	cmp	r6, r1
   3dd64:	bls	3ddd4 <flatcc_json_printer_uint8_vector_field@@Base+0x38c>
   3dd68:	cmp	r0, r1
   3dd6c:	bcc	3dd88 <flatcc_json_printer_uint8_vector_field@@Base+0x340>
   3dd70:	ldr	r2, [r4, #44]	; 0x2c
   3dd74:	mov	r0, r4
   3dd78:	mov	r1, #0
   3dd7c:	blx	r2
   3dd80:	ldr	r1, [r4, #16]
   3dd84:	ldr	r0, [r4, #20]
   3dd88:	sub	r6, r1, r0
   3dd8c:	cmp	r6, r5
   3dd90:	bcs	3ddd4 <flatcc_json_printer_uint8_vector_field@@Base+0x38c>
   3dd94:	mov	r1, #32
   3dd98:	mov	r2, r6
   3dd9c:	bl	14eec <memset@plt>
   3dda0:	ldr	r0, [r4, #20]
   3dda4:	ldr	r2, [r4, #44]	; 0x2c
   3dda8:	mov	r1, #0
   3ddac:	add	r0, r0, r6
   3ddb0:	str	r0, [r4, #20]
   3ddb4:	mov	r0, r4
   3ddb8:	blx	r2
   3ddbc:	ldr	r1, [r4, #16]
   3ddc0:	ldr	r0, [r4, #20]
   3ddc4:	sub	r5, r5, r6
   3ddc8:	sub	r6, r1, r0
   3ddcc:	cmp	r5, r6
   3ddd0:	bhi	3dd94 <flatcc_json_printer_uint8_vector_field@@Base+0x34c>
   3ddd4:	mov	r1, #32
   3ddd8:	mov	r2, r5
   3dddc:	bl	14eec <memset@plt>
   3dde0:	ldr	r0, [r4, #20]
   3dde4:	add	r0, r0, r5
   3dde8:	str	r0, [r4, #20]
   3ddec:	ldrb	r1, [r7]
   3ddf0:	sub	r8, r8, #1
   3ddf4:	cmp	r1, #100	; 0x64
   3ddf8:	bcs	3dcc0 <flatcc_json_printer_uint8_vector_field@@Base+0x278>
   3ddfc:	b	3de30 <flatcc_json_printer_uint8_vector_field@@Base+0x3e8>
   3de00:	ldr	r1, [r4, #16]
   3de04:	cmp	r0, r1
   3de08:	bcc	3de20 <flatcc_json_printer_uint8_vector_field@@Base+0x3d8>
   3de0c:	ldr	r2, [r4, #44]	; 0x2c
   3de10:	mov	r0, r4
   3de14:	mov	r1, #0
   3de18:	blx	r2
   3de1c:	ldr	r0, [r4, #20]
   3de20:	ldrb	r1, [r7]
   3de24:	sub	r8, r8, #1
   3de28:	cmp	r1, #100	; 0x64
   3de2c:	bcs	3dcc0 <flatcc_json_printer_uint8_vector_field@@Base+0x278>
   3de30:	cmp	r1, #10
   3de34:	bcc	3de70 <flatcc_json_printer_uint8_vector_field@@Base+0x428>
   3de38:	movw	r2, #34079	; 0x851f
   3de3c:	strb	sl, [r0, #2]
   3de40:	movt	r2, #20971	; 0x51eb
   3de44:	umull	r2, r3, r1, r2
   3de48:	lsr	r2, r3, #5
   3de4c:	mov	r3, #100	; 0x64
   3de50:	mls	r1, r2, r3, r1
   3de54:	movw	r2, #48464	; 0xbd50
   3de58:	movt	r2, #4
   3de5c:	add	r1, r2, r1, lsl #1
   3de60:	ldrh	r1, [r1]
   3de64:	strh	r1, [r0]
   3de68:	mov	r0, #2
   3de6c:	b	3dd04 <flatcc_json_printer_uint8_vector_field@@Base+0x2bc>
   3de70:	add	r1, r1, #48	; 0x30
   3de74:	strb	sl, [r0, #1]
   3de78:	strb	r1, [r0]
   3de7c:	mov	r0, #1
   3de80:	b	3dd04 <flatcc_json_printer_uint8_vector_field@@Base+0x2bc>
   3de84:	ldrb	r1, [r4, #25]
   3de88:	ldr	r0, [r4, #20]
   3de8c:	cmp	r1, #0
   3de90:	beq	3df50 <flatcc_json_printer_uint8_vector_field@@Base+0x508>
   3de94:	add	r1, r0, #1
   3de98:	str	r1, [r4, #20]
   3de9c:	mov	r1, #10
   3dea0:	strb	r1, [r0]
   3dea4:	ldr	r0, [r4, #32]
   3dea8:	sub	r2, r0, #1
   3deac:	str	r2, [r4, #32]
   3deb0:	ldrb	r3, [r4, #25]
   3deb4:	ldr	r0, [r4, #20]
   3deb8:	ldr	r1, [r4, #16]
   3debc:	mla	r7, r2, r3, r0
   3dec0:	mul	r5, r2, r3
   3dec4:	cmp	r7, r1
   3dec8:	bls	3df38 <flatcc_json_printer_uint8_vector_field@@Base+0x4f0>
   3decc:	cmp	r0, r1
   3ded0:	bcc	3deec <flatcc_json_printer_uint8_vector_field@@Base+0x4a4>
   3ded4:	ldr	r2, [r4, #44]	; 0x2c
   3ded8:	mov	r0, r4
   3dedc:	mov	r1, #0
   3dee0:	blx	r2
   3dee4:	ldr	r1, [r4, #16]
   3dee8:	ldr	r0, [r4, #20]
   3deec:	sub	r6, r1, r0
   3def0:	cmp	r6, r5
   3def4:	bcs	3df38 <flatcc_json_printer_uint8_vector_field@@Base+0x4f0>
   3def8:	mov	r1, #32
   3defc:	mov	r2, r6
   3df00:	bl	14eec <memset@plt>
   3df04:	ldr	r0, [r4, #20]
   3df08:	ldr	r2, [r4, #44]	; 0x2c
   3df0c:	mov	r1, #0
   3df10:	add	r0, r0, r6
   3df14:	str	r0, [r4, #20]
   3df18:	mov	r0, r4
   3df1c:	blx	r2
   3df20:	ldr	r1, [r4, #16]
   3df24:	ldr	r0, [r4, #20]
   3df28:	sub	r5, r5, r6
   3df2c:	sub	r6, r1, r0
   3df30:	cmp	r5, r6
   3df34:	bhi	3def8 <flatcc_json_printer_uint8_vector_field@@Base+0x4b0>
   3df38:	mov	r1, #32
   3df3c:	mov	r2, r5
   3df40:	bl	14eec <memset@plt>
   3df44:	ldr	r0, [r4, #20]
   3df48:	add	r0, r0, r5
   3df4c:	str	r0, [r4, #20]
   3df50:	add	r1, r0, #1
   3df54:	str	r1, [r4, #20]
   3df58:	mov	r1, #93	; 0x5d
   3df5c:	strb	r1, [r0]
   3df60:	sub	sp, fp, #28
   3df64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003df68 <flatcc_json_printer_uint16_vector_field@@Base>:
   3df68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3df6c:	add	fp, sp, #28
   3df70:	sub	sp, sp, #4
   3df74:	mov	r4, r0
   3df78:	mov	r0, #4
   3df7c:	add	r0, r0, r2, lsl #1
   3df80:	ldr	r2, [r1, #8]
   3df84:	cmp	r0, r2
   3df88:	bge	3dfa8 <flatcc_json_printer_uint16_vector_field@@Base+0x40>
   3df8c:	ldr	r2, [r1, #4]
   3df90:	add	r0, r2, r0
   3df94:	ldrh	r0, [r0]
   3df98:	cmp	r0, #0
   3df9c:	ldrne	r2, [r1]
   3dfa0:	addsne	r8, r2, r0
   3dfa4:	bne	3dfb0 <flatcc_json_printer_uint16_vector_field@@Base+0x48>
   3dfa8:	sub	sp, fp, #28
   3dfac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dfb0:	ldr	r0, [r1, #16]
   3dfb4:	ldr	r2, [fp, #8]
   3dfb8:	add	r7, r0, #1
   3dfbc:	cmp	r0, #0
   3dfc0:	str	r7, [r1, #16]
   3dfc4:	beq	3dfdc <flatcc_json_printer_uint16_vector_field@@Base+0x74>
   3dfc8:	ldr	r0, [r4, #20]
   3dfcc:	add	r1, r0, #1
   3dfd0:	str	r1, [r4, #20]
   3dfd4:	mov	r1, #44	; 0x2c
   3dfd8:	strb	r1, [r0]
   3dfdc:	ldr	r0, [r8]
   3dfe0:	mov	r1, r3
   3dfe4:	ldr	r7, [r8, r0]!
   3dfe8:	mov	r0, r4
   3dfec:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3dff0:	ldr	r1, [r4, #32]
   3dff4:	ldr	r0, [r4, #20]
   3dff8:	cmp	r7, #0
   3dffc:	add	r1, r1, #1
   3e000:	str	r1, [r4, #32]
   3e004:	add	r1, r0, #1
   3e008:	str	r1, [r4, #20]
   3e00c:	mov	r1, #91	; 0x5b
   3e010:	strb	r1, [r0]
   3e014:	beq	3e244 <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   3e018:	ldrb	r0, [r4, #25]
   3e01c:	ldr	r1, [r4, #20]
   3e020:	cmp	r0, #0
   3e024:	beq	3e0e0 <flatcc_json_printer_uint16_vector_field@@Base+0x178>
   3e028:	add	r0, r1, #1
   3e02c:	str	r0, [r4, #20]
   3e030:	mov	r0, #10
   3e034:	strb	r0, [r1]
   3e038:	ldr	r0, [r4, #20]
   3e03c:	ldrb	r2, [r4, #25]
   3e040:	ldr	r3, [r4, #32]
   3e044:	ldr	r1, [r4, #16]
   3e048:	mla	r6, r3, r2, r0
   3e04c:	mul	r5, r3, r2
   3e050:	cmp	r6, r1
   3e054:	bls	3e0c4 <flatcc_json_printer_uint16_vector_field@@Base+0x15c>
   3e058:	cmp	r0, r1
   3e05c:	bcc	3e078 <flatcc_json_printer_uint16_vector_field@@Base+0x110>
   3e060:	ldr	r2, [r4, #44]	; 0x2c
   3e064:	mov	r0, r4
   3e068:	mov	r1, #0
   3e06c:	blx	r2
   3e070:	ldr	r1, [r4, #16]
   3e074:	ldr	r0, [r4, #20]
   3e078:	sub	r6, r1, r0
   3e07c:	cmp	r6, r5
   3e080:	bcs	3e0c4 <flatcc_json_printer_uint16_vector_field@@Base+0x15c>
   3e084:	mov	r1, #32
   3e088:	mov	r2, r6
   3e08c:	bl	14eec <memset@plt>
   3e090:	ldr	r0, [r4, #20]
   3e094:	ldr	r2, [r4, #44]	; 0x2c
   3e098:	mov	r1, #0
   3e09c:	add	r0, r0, r6
   3e0a0:	str	r0, [r4, #20]
   3e0a4:	mov	r0, r4
   3e0a8:	blx	r2
   3e0ac:	ldr	r1, [r4, #16]
   3e0b0:	ldr	r0, [r4, #20]
   3e0b4:	sub	r5, r5, r6
   3e0b8:	sub	r6, r1, r0
   3e0bc:	cmp	r5, r6
   3e0c0:	bhi	3e084 <flatcc_json_printer_uint16_vector_field@@Base+0x11c>
   3e0c4:	mov	r1, #32
   3e0c8:	mov	r2, r5
   3e0cc:	bl	14eec <memset@plt>
   3e0d0:	ldr	r0, [r4, #20]
   3e0d4:	add	r1, r0, r5
   3e0d8:	str	r1, [r4, #20]
   3e0dc:	b	3e100 <flatcc_json_printer_uint16_vector_field@@Base+0x198>
   3e0e0:	ldr	r0, [r4, #16]
   3e0e4:	cmp	r1, r0
   3e0e8:	bcc	3e100 <flatcc_json_printer_uint16_vector_field@@Base+0x198>
   3e0ec:	ldr	r2, [r4, #44]	; 0x2c
   3e0f0:	mov	r0, r4
   3e0f4:	mov	r1, #0
   3e0f8:	blx	r2
   3e0fc:	ldr	r1, [r4, #20]
   3e100:	ldrh	r0, [r8, #4]
   3e104:	bl	3a0b4 <flatcc_json_printer_uint16@@Base+0x2c>
   3e108:	ldr	r1, [r4, #20]
   3e10c:	subs	r9, r7, #1
   3e110:	add	r0, r1, r0
   3e114:	str	r0, [r4, #20]
   3e118:	beq	3e244 <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   3e11c:	ldr	r0, [r4, #20]
   3e120:	add	r7, r8, #6
   3e124:	mov	r8, #44	; 0x2c
   3e128:	mov	sl, #10
   3e12c:	b	3e164 <flatcc_json_printer_uint16_vector_field@@Base+0x1fc>
   3e130:	mov	r1, #32
   3e134:	mov	r2, r5
   3e138:	bl	14eec <memset@plt>
   3e13c:	ldr	r0, [r4, #20]
   3e140:	add	r1, r0, r5
   3e144:	str	r1, [r4, #20]
   3e148:	ldrh	r0, [r7], #2
   3e14c:	bl	3a0b4 <flatcc_json_printer_uint16@@Base+0x2c>
   3e150:	ldr	r1, [r4, #20]
   3e154:	cmp	r9, #0
   3e158:	add	r0, r1, r0
   3e15c:	str	r0, [r4, #20]
   3e160:	beq	3e244 <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   3e164:	add	r1, r0, #1
   3e168:	sub	r9, r9, #1
   3e16c:	str	r1, [r4, #20]
   3e170:	strb	r8, [r0]
   3e174:	ldrb	r0, [r4, #25]
   3e178:	ldr	r1, [r4, #20]
   3e17c:	cmp	r0, #0
   3e180:	beq	3e220 <flatcc_json_printer_uint16_vector_field@@Base+0x2b8>
   3e184:	add	r0, r1, #1
   3e188:	str	r0, [r4, #20]
   3e18c:	strb	sl, [r1]
   3e190:	ldr	r0, [r4, #20]
   3e194:	ldrb	r2, [r4, #25]
   3e198:	ldr	r3, [r4, #32]
   3e19c:	ldr	r1, [r4, #16]
   3e1a0:	mla	r6, r3, r2, r0
   3e1a4:	mul	r5, r3, r2
   3e1a8:	cmp	r6, r1
   3e1ac:	bls	3e130 <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   3e1b0:	cmp	r0, r1
   3e1b4:	bcc	3e1d0 <flatcc_json_printer_uint16_vector_field@@Base+0x268>
   3e1b8:	ldr	r2, [r4, #44]	; 0x2c
   3e1bc:	mov	r0, r4
   3e1c0:	mov	r1, #0
   3e1c4:	blx	r2
   3e1c8:	ldr	r1, [r4, #16]
   3e1cc:	ldr	r0, [r4, #20]
   3e1d0:	sub	r6, r1, r0
   3e1d4:	cmp	r6, r5
   3e1d8:	bcs	3e130 <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   3e1dc:	mov	r1, #32
   3e1e0:	mov	r2, r6
   3e1e4:	bl	14eec <memset@plt>
   3e1e8:	ldr	r0, [r4, #20]
   3e1ec:	ldr	r2, [r4, #44]	; 0x2c
   3e1f0:	mov	r1, #0
   3e1f4:	add	r0, r0, r6
   3e1f8:	str	r0, [r4, #20]
   3e1fc:	mov	r0, r4
   3e200:	blx	r2
   3e204:	ldr	r1, [r4, #16]
   3e208:	ldr	r0, [r4, #20]
   3e20c:	sub	r5, r5, r6
   3e210:	sub	r6, r1, r0
   3e214:	cmp	r5, r6
   3e218:	bhi	3e1dc <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   3e21c:	b	3e130 <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   3e220:	ldr	r0, [r4, #16]
   3e224:	cmp	r1, r0
   3e228:	bcc	3e148 <flatcc_json_printer_uint16_vector_field@@Base+0x1e0>
   3e22c:	ldr	r2, [r4, #44]	; 0x2c
   3e230:	mov	r0, r4
   3e234:	mov	r1, #0
   3e238:	blx	r2
   3e23c:	ldr	r1, [r4, #20]
   3e240:	b	3e148 <flatcc_json_printer_uint16_vector_field@@Base+0x1e0>
   3e244:	ldrb	r1, [r4, #25]
   3e248:	ldr	r0, [r4, #20]
   3e24c:	cmp	r1, #0
   3e250:	beq	3e310 <flatcc_json_printer_uint16_vector_field@@Base+0x3a8>
   3e254:	add	r1, r0, #1
   3e258:	str	r1, [r4, #20]
   3e25c:	mov	r1, #10
   3e260:	strb	r1, [r0]
   3e264:	ldr	r0, [r4, #32]
   3e268:	sub	r2, r0, #1
   3e26c:	str	r2, [r4, #32]
   3e270:	ldrb	r3, [r4, #25]
   3e274:	ldr	r0, [r4, #20]
   3e278:	ldr	r1, [r4, #16]
   3e27c:	mla	r7, r2, r3, r0
   3e280:	mul	r5, r2, r3
   3e284:	cmp	r7, r1
   3e288:	bls	3e2f8 <flatcc_json_printer_uint16_vector_field@@Base+0x390>
   3e28c:	cmp	r0, r1
   3e290:	bcc	3e2ac <flatcc_json_printer_uint16_vector_field@@Base+0x344>
   3e294:	ldr	r2, [r4, #44]	; 0x2c
   3e298:	mov	r0, r4
   3e29c:	mov	r1, #0
   3e2a0:	blx	r2
   3e2a4:	ldr	r1, [r4, #16]
   3e2a8:	ldr	r0, [r4, #20]
   3e2ac:	sub	r6, r1, r0
   3e2b0:	cmp	r6, r5
   3e2b4:	bcs	3e2f8 <flatcc_json_printer_uint16_vector_field@@Base+0x390>
   3e2b8:	mov	r1, #32
   3e2bc:	mov	r2, r6
   3e2c0:	bl	14eec <memset@plt>
   3e2c4:	ldr	r0, [r4, #20]
   3e2c8:	ldr	r2, [r4, #44]	; 0x2c
   3e2cc:	mov	r1, #0
   3e2d0:	add	r0, r0, r6
   3e2d4:	str	r0, [r4, #20]
   3e2d8:	mov	r0, r4
   3e2dc:	blx	r2
   3e2e0:	ldr	r1, [r4, #16]
   3e2e4:	ldr	r0, [r4, #20]
   3e2e8:	sub	r5, r5, r6
   3e2ec:	sub	r6, r1, r0
   3e2f0:	cmp	r5, r6
   3e2f4:	bhi	3e2b8 <flatcc_json_printer_uint16_vector_field@@Base+0x350>
   3e2f8:	mov	r1, #32
   3e2fc:	mov	r2, r5
   3e300:	bl	14eec <memset@plt>
   3e304:	ldr	r0, [r4, #20]
   3e308:	add	r0, r0, r5
   3e30c:	str	r0, [r4, #20]
   3e310:	add	r1, r0, #1
   3e314:	str	r1, [r4, #20]
   3e318:	mov	r1, #93	; 0x5d
   3e31c:	strb	r1, [r0]
   3e320:	sub	sp, fp, #28
   3e324:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e328 <flatcc_json_printer_uint32_vector_field@@Base>:
   3e328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e32c:	add	fp, sp, #28
   3e330:	sub	sp, sp, #4
   3e334:	mov	r4, r0
   3e338:	mov	r0, #4
   3e33c:	add	r0, r0, r2, lsl #1
   3e340:	ldr	r2, [r1, #8]
   3e344:	cmp	r0, r2
   3e348:	bge	3e368 <flatcc_json_printer_uint32_vector_field@@Base+0x40>
   3e34c:	ldr	r2, [r1, #4]
   3e350:	add	r0, r2, r0
   3e354:	ldrh	r0, [r0]
   3e358:	cmp	r0, #0
   3e35c:	ldrne	r2, [r1]
   3e360:	addsne	r8, r2, r0
   3e364:	bne	3e370 <flatcc_json_printer_uint32_vector_field@@Base+0x48>
   3e368:	sub	sp, fp, #28
   3e36c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e370:	ldr	r0, [r1, #16]
   3e374:	ldr	r2, [fp, #8]
   3e378:	add	r7, r0, #1
   3e37c:	cmp	r0, #0
   3e380:	str	r7, [r1, #16]
   3e384:	beq	3e39c <flatcc_json_printer_uint32_vector_field@@Base+0x74>
   3e388:	ldr	r0, [r4, #20]
   3e38c:	add	r1, r0, #1
   3e390:	str	r1, [r4, #20]
   3e394:	mov	r1, #44	; 0x2c
   3e398:	strb	r1, [r0]
   3e39c:	ldr	r0, [r8]
   3e3a0:	mov	r1, r3
   3e3a4:	ldr	r7, [r8, r0]!
   3e3a8:	mov	r0, r4
   3e3ac:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3e3b0:	ldr	r1, [r4, #32]
   3e3b4:	ldr	r0, [r4, #20]
   3e3b8:	cmp	r7, #0
   3e3bc:	add	r1, r1, #1
   3e3c0:	str	r1, [r4, #32]
   3e3c4:	add	r1, r0, #1
   3e3c8:	str	r1, [r4, #20]
   3e3cc:	mov	r1, #91	; 0x5b
   3e3d0:	strb	r1, [r0]
   3e3d4:	beq	3e604 <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   3e3d8:	ldrb	r0, [r4, #25]
   3e3dc:	ldr	r1, [r4, #20]
   3e3e0:	cmp	r0, #0
   3e3e4:	beq	3e4a0 <flatcc_json_printer_uint32_vector_field@@Base+0x178>
   3e3e8:	add	r0, r1, #1
   3e3ec:	str	r0, [r4, #20]
   3e3f0:	mov	r0, #10
   3e3f4:	strb	r0, [r1]
   3e3f8:	ldr	r0, [r4, #20]
   3e3fc:	ldrb	r2, [r4, #25]
   3e400:	ldr	r3, [r4, #32]
   3e404:	ldr	r1, [r4, #16]
   3e408:	mla	r6, r3, r2, r0
   3e40c:	mul	r5, r3, r2
   3e410:	cmp	r6, r1
   3e414:	bls	3e484 <flatcc_json_printer_uint32_vector_field@@Base+0x15c>
   3e418:	cmp	r0, r1
   3e41c:	bcc	3e438 <flatcc_json_printer_uint32_vector_field@@Base+0x110>
   3e420:	ldr	r2, [r4, #44]	; 0x2c
   3e424:	mov	r0, r4
   3e428:	mov	r1, #0
   3e42c:	blx	r2
   3e430:	ldr	r1, [r4, #16]
   3e434:	ldr	r0, [r4, #20]
   3e438:	sub	r6, r1, r0
   3e43c:	cmp	r6, r5
   3e440:	bcs	3e484 <flatcc_json_printer_uint32_vector_field@@Base+0x15c>
   3e444:	mov	r1, #32
   3e448:	mov	r2, r6
   3e44c:	bl	14eec <memset@plt>
   3e450:	ldr	r0, [r4, #20]
   3e454:	ldr	r2, [r4, #44]	; 0x2c
   3e458:	mov	r1, #0
   3e45c:	add	r0, r0, r6
   3e460:	str	r0, [r4, #20]
   3e464:	mov	r0, r4
   3e468:	blx	r2
   3e46c:	ldr	r1, [r4, #16]
   3e470:	ldr	r0, [r4, #20]
   3e474:	sub	r5, r5, r6
   3e478:	sub	r6, r1, r0
   3e47c:	cmp	r5, r6
   3e480:	bhi	3e444 <flatcc_json_printer_uint32_vector_field@@Base+0x11c>
   3e484:	mov	r1, #32
   3e488:	mov	r2, r5
   3e48c:	bl	14eec <memset@plt>
   3e490:	ldr	r0, [r4, #20]
   3e494:	add	r1, r0, r5
   3e498:	str	r1, [r4, #20]
   3e49c:	b	3e4c0 <flatcc_json_printer_uint32_vector_field@@Base+0x198>
   3e4a0:	ldr	r0, [r4, #16]
   3e4a4:	cmp	r1, r0
   3e4a8:	bcc	3e4c0 <flatcc_json_printer_uint32_vector_field@@Base+0x198>
   3e4ac:	ldr	r2, [r4, #44]	; 0x2c
   3e4b0:	mov	r0, r4
   3e4b4:	mov	r1, #0
   3e4b8:	blx	r2
   3e4bc:	ldr	r1, [r4, #20]
   3e4c0:	ldr	r0, [r8, #4]
   3e4c4:	bl	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3e4c8:	ldr	r1, [r4, #20]
   3e4cc:	subs	r9, r7, #1
   3e4d0:	add	r0, r1, r0
   3e4d4:	str	r0, [r4, #20]
   3e4d8:	beq	3e604 <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   3e4dc:	ldr	r0, [r4, #20]
   3e4e0:	add	r7, r8, #8
   3e4e4:	mov	r8, #44	; 0x2c
   3e4e8:	mov	sl, #10
   3e4ec:	b	3e524 <flatcc_json_printer_uint32_vector_field@@Base+0x1fc>
   3e4f0:	mov	r1, #32
   3e4f4:	mov	r2, r5
   3e4f8:	bl	14eec <memset@plt>
   3e4fc:	ldr	r0, [r4, #20]
   3e500:	add	r1, r0, r5
   3e504:	str	r1, [r4, #20]
   3e508:	ldr	r0, [r7], #4
   3e50c:	bl	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3e510:	ldr	r1, [r4, #20]
   3e514:	cmp	r9, #0
   3e518:	add	r0, r1, r0
   3e51c:	str	r0, [r4, #20]
   3e520:	beq	3e604 <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   3e524:	add	r1, r0, #1
   3e528:	sub	r9, r9, #1
   3e52c:	str	r1, [r4, #20]
   3e530:	strb	r8, [r0]
   3e534:	ldrb	r0, [r4, #25]
   3e538:	ldr	r1, [r4, #20]
   3e53c:	cmp	r0, #0
   3e540:	beq	3e5e0 <flatcc_json_printer_uint32_vector_field@@Base+0x2b8>
   3e544:	add	r0, r1, #1
   3e548:	str	r0, [r4, #20]
   3e54c:	strb	sl, [r1]
   3e550:	ldr	r0, [r4, #20]
   3e554:	ldrb	r2, [r4, #25]
   3e558:	ldr	r3, [r4, #32]
   3e55c:	ldr	r1, [r4, #16]
   3e560:	mla	r6, r3, r2, r0
   3e564:	mul	r5, r3, r2
   3e568:	cmp	r6, r1
   3e56c:	bls	3e4f0 <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   3e570:	cmp	r0, r1
   3e574:	bcc	3e590 <flatcc_json_printer_uint32_vector_field@@Base+0x268>
   3e578:	ldr	r2, [r4, #44]	; 0x2c
   3e57c:	mov	r0, r4
   3e580:	mov	r1, #0
   3e584:	blx	r2
   3e588:	ldr	r1, [r4, #16]
   3e58c:	ldr	r0, [r4, #20]
   3e590:	sub	r6, r1, r0
   3e594:	cmp	r6, r5
   3e598:	bcs	3e4f0 <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   3e59c:	mov	r1, #32
   3e5a0:	mov	r2, r6
   3e5a4:	bl	14eec <memset@plt>
   3e5a8:	ldr	r0, [r4, #20]
   3e5ac:	ldr	r2, [r4, #44]	; 0x2c
   3e5b0:	mov	r1, #0
   3e5b4:	add	r0, r0, r6
   3e5b8:	str	r0, [r4, #20]
   3e5bc:	mov	r0, r4
   3e5c0:	blx	r2
   3e5c4:	ldr	r1, [r4, #16]
   3e5c8:	ldr	r0, [r4, #20]
   3e5cc:	sub	r5, r5, r6
   3e5d0:	sub	r6, r1, r0
   3e5d4:	cmp	r5, r6
   3e5d8:	bhi	3e59c <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   3e5dc:	b	3e4f0 <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   3e5e0:	ldr	r0, [r4, #16]
   3e5e4:	cmp	r1, r0
   3e5e8:	bcc	3e508 <flatcc_json_printer_uint32_vector_field@@Base+0x1e0>
   3e5ec:	ldr	r2, [r4, #44]	; 0x2c
   3e5f0:	mov	r0, r4
   3e5f4:	mov	r1, #0
   3e5f8:	blx	r2
   3e5fc:	ldr	r1, [r4, #20]
   3e600:	b	3e508 <flatcc_json_printer_uint32_vector_field@@Base+0x1e0>
   3e604:	ldrb	r1, [r4, #25]
   3e608:	ldr	r0, [r4, #20]
   3e60c:	cmp	r1, #0
   3e610:	beq	3e6d0 <flatcc_json_printer_uint32_vector_field@@Base+0x3a8>
   3e614:	add	r1, r0, #1
   3e618:	str	r1, [r4, #20]
   3e61c:	mov	r1, #10
   3e620:	strb	r1, [r0]
   3e624:	ldr	r0, [r4, #32]
   3e628:	sub	r2, r0, #1
   3e62c:	str	r2, [r4, #32]
   3e630:	ldrb	r3, [r4, #25]
   3e634:	ldr	r0, [r4, #20]
   3e638:	ldr	r1, [r4, #16]
   3e63c:	mla	r7, r2, r3, r0
   3e640:	mul	r5, r2, r3
   3e644:	cmp	r7, r1
   3e648:	bls	3e6b8 <flatcc_json_printer_uint32_vector_field@@Base+0x390>
   3e64c:	cmp	r0, r1
   3e650:	bcc	3e66c <flatcc_json_printer_uint32_vector_field@@Base+0x344>
   3e654:	ldr	r2, [r4, #44]	; 0x2c
   3e658:	mov	r0, r4
   3e65c:	mov	r1, #0
   3e660:	blx	r2
   3e664:	ldr	r1, [r4, #16]
   3e668:	ldr	r0, [r4, #20]
   3e66c:	sub	r6, r1, r0
   3e670:	cmp	r6, r5
   3e674:	bcs	3e6b8 <flatcc_json_printer_uint32_vector_field@@Base+0x390>
   3e678:	mov	r1, #32
   3e67c:	mov	r2, r6
   3e680:	bl	14eec <memset@plt>
   3e684:	ldr	r0, [r4, #20]
   3e688:	ldr	r2, [r4, #44]	; 0x2c
   3e68c:	mov	r1, #0
   3e690:	add	r0, r0, r6
   3e694:	str	r0, [r4, #20]
   3e698:	mov	r0, r4
   3e69c:	blx	r2
   3e6a0:	ldr	r1, [r4, #16]
   3e6a4:	ldr	r0, [r4, #20]
   3e6a8:	sub	r5, r5, r6
   3e6ac:	sub	r6, r1, r0
   3e6b0:	cmp	r5, r6
   3e6b4:	bhi	3e678 <flatcc_json_printer_uint32_vector_field@@Base+0x350>
   3e6b8:	mov	r1, #32
   3e6bc:	mov	r2, r5
   3e6c0:	bl	14eec <memset@plt>
   3e6c4:	ldr	r0, [r4, #20]
   3e6c8:	add	r0, r0, r5
   3e6cc:	str	r0, [r4, #20]
   3e6d0:	add	r1, r0, #1
   3e6d4:	str	r1, [r4, #20]
   3e6d8:	mov	r1, #93	; 0x5d
   3e6dc:	strb	r1, [r0]
   3e6e0:	sub	sp, fp, #28
   3e6e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e6e8 <flatcc_json_printer_uint64_vector_field@@Base>:
   3e6e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e6ec:	add	fp, sp, #28
   3e6f0:	sub	sp, sp, #4
   3e6f4:	mov	r4, r0
   3e6f8:	mov	r0, #4
   3e6fc:	add	r0, r0, r2, lsl #1
   3e700:	ldr	r2, [r1, #8]
   3e704:	cmp	r0, r2
   3e708:	bge	3e728 <flatcc_json_printer_uint64_vector_field@@Base+0x40>
   3e70c:	ldr	r2, [r1, #4]
   3e710:	add	r0, r2, r0
   3e714:	ldrh	r0, [r0]
   3e718:	cmp	r0, #0
   3e71c:	ldrne	r2, [r1]
   3e720:	addsne	r8, r2, r0
   3e724:	bne	3e730 <flatcc_json_printer_uint64_vector_field@@Base+0x48>
   3e728:	sub	sp, fp, #28
   3e72c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e730:	ldr	r0, [r1, #16]
   3e734:	ldr	r2, [fp, #8]
   3e738:	add	r7, r0, #1
   3e73c:	cmp	r0, #0
   3e740:	str	r7, [r1, #16]
   3e744:	beq	3e75c <flatcc_json_printer_uint64_vector_field@@Base+0x74>
   3e748:	ldr	r0, [r4, #20]
   3e74c:	add	r1, r0, #1
   3e750:	str	r1, [r4, #20]
   3e754:	mov	r1, #44	; 0x2c
   3e758:	strb	r1, [r0]
   3e75c:	ldr	r0, [r8]
   3e760:	mov	r1, r3
   3e764:	ldr	r7, [r8, r0]!
   3e768:	mov	r0, r4
   3e76c:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3e770:	ldr	r1, [r4, #32]
   3e774:	ldr	r0, [r4, #20]
   3e778:	cmp	r7, #0
   3e77c:	add	r1, r1, #1
   3e780:	str	r1, [r4, #32]
   3e784:	add	r1, r0, #1
   3e788:	str	r1, [r4, #20]
   3e78c:	mov	r1, #91	; 0x5b
   3e790:	strb	r1, [r0]
   3e794:	beq	3e9c8 <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   3e798:	ldrb	r0, [r4, #25]
   3e79c:	ldr	r2, [r4, #20]
   3e7a0:	cmp	r0, #0
   3e7a4:	beq	3e860 <flatcc_json_printer_uint64_vector_field@@Base+0x178>
   3e7a8:	add	r0, r2, #1
   3e7ac:	str	r0, [r4, #20]
   3e7b0:	mov	r0, #10
   3e7b4:	strb	r0, [r2]
   3e7b8:	ldr	r0, [r4, #20]
   3e7bc:	ldrb	r2, [r4, #25]
   3e7c0:	ldr	r3, [r4, #32]
   3e7c4:	ldr	r1, [r4, #16]
   3e7c8:	mla	r6, r3, r2, r0
   3e7cc:	mul	r5, r3, r2
   3e7d0:	cmp	r6, r1
   3e7d4:	bls	3e844 <flatcc_json_printer_uint64_vector_field@@Base+0x15c>
   3e7d8:	cmp	r0, r1
   3e7dc:	bcc	3e7f8 <flatcc_json_printer_uint64_vector_field@@Base+0x110>
   3e7e0:	ldr	r2, [r4, #44]	; 0x2c
   3e7e4:	mov	r0, r4
   3e7e8:	mov	r1, #0
   3e7ec:	blx	r2
   3e7f0:	ldr	r1, [r4, #16]
   3e7f4:	ldr	r0, [r4, #20]
   3e7f8:	sub	r6, r1, r0
   3e7fc:	cmp	r6, r5
   3e800:	bcs	3e844 <flatcc_json_printer_uint64_vector_field@@Base+0x15c>
   3e804:	mov	r1, #32
   3e808:	mov	r2, r6
   3e80c:	bl	14eec <memset@plt>
   3e810:	ldr	r0, [r4, #20]
   3e814:	ldr	r2, [r4, #44]	; 0x2c
   3e818:	mov	r1, #0
   3e81c:	add	r0, r0, r6
   3e820:	str	r0, [r4, #20]
   3e824:	mov	r0, r4
   3e828:	blx	r2
   3e82c:	ldr	r1, [r4, #16]
   3e830:	ldr	r0, [r4, #20]
   3e834:	sub	r5, r5, r6
   3e838:	sub	r6, r1, r0
   3e83c:	cmp	r5, r6
   3e840:	bhi	3e804 <flatcc_json_printer_uint64_vector_field@@Base+0x11c>
   3e844:	mov	r1, #32
   3e848:	mov	r2, r5
   3e84c:	bl	14eec <memset@plt>
   3e850:	ldr	r0, [r4, #20]
   3e854:	add	r2, r0, r5
   3e858:	str	r2, [r4, #20]
   3e85c:	b	3e880 <flatcc_json_printer_uint64_vector_field@@Base+0x198>
   3e860:	ldr	r0, [r4, #16]
   3e864:	cmp	r2, r0
   3e868:	bcc	3e880 <flatcc_json_printer_uint64_vector_field@@Base+0x198>
   3e86c:	ldr	r2, [r4, #44]	; 0x2c
   3e870:	mov	r0, r4
   3e874:	mov	r1, #0
   3e878:	blx	r2
   3e87c:	ldr	r2, [r4, #20]
   3e880:	ldrd	r0, [r8, #4]
   3e884:	bl	3a5b8 <flatcc_json_printer_uint64@@Base+0x30>
   3e888:	ldr	r1, [r4, #20]
   3e88c:	subs	r9, r7, #1
   3e890:	add	r0, r1, r0
   3e894:	str	r0, [r4, #20]
   3e898:	beq	3e9c8 <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   3e89c:	ldr	r0, [r4, #20]
   3e8a0:	add	r7, r8, #12
   3e8a4:	mov	r8, #44	; 0x2c
   3e8a8:	mov	sl, #10
   3e8ac:	b	3e8e8 <flatcc_json_printer_uint64_vector_field@@Base+0x200>
   3e8b0:	mov	r1, #32
   3e8b4:	mov	r2, r5
   3e8b8:	bl	14eec <memset@plt>
   3e8bc:	ldr	r0, [r4, #20]
   3e8c0:	add	r2, r0, r5
   3e8c4:	str	r2, [r4, #20]
   3e8c8:	ldrd	r0, [r7]
   3e8cc:	bl	3a5b8 <flatcc_json_printer_uint64@@Base+0x30>
   3e8d0:	ldr	r1, [r4, #20]
   3e8d4:	add	r7, r7, #8
   3e8d8:	cmp	r9, #0
   3e8dc:	add	r0, r1, r0
   3e8e0:	str	r0, [r4, #20]
   3e8e4:	beq	3e9c8 <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   3e8e8:	add	r1, r0, #1
   3e8ec:	sub	r9, r9, #1
   3e8f0:	str	r1, [r4, #20]
   3e8f4:	strb	r8, [r0]
   3e8f8:	ldrb	r0, [r4, #25]
   3e8fc:	ldr	r2, [r4, #20]
   3e900:	cmp	r0, #0
   3e904:	beq	3e9a4 <flatcc_json_printer_uint64_vector_field@@Base+0x2bc>
   3e908:	add	r0, r2, #1
   3e90c:	str	r0, [r4, #20]
   3e910:	strb	sl, [r2]
   3e914:	ldr	r0, [r4, #20]
   3e918:	ldrb	r2, [r4, #25]
   3e91c:	ldr	r3, [r4, #32]
   3e920:	ldr	r1, [r4, #16]
   3e924:	mla	r6, r3, r2, r0
   3e928:	mul	r5, r3, r2
   3e92c:	cmp	r6, r1
   3e930:	bls	3e8b0 <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   3e934:	cmp	r0, r1
   3e938:	bcc	3e954 <flatcc_json_printer_uint64_vector_field@@Base+0x26c>
   3e93c:	ldr	r2, [r4, #44]	; 0x2c
   3e940:	mov	r0, r4
   3e944:	mov	r1, #0
   3e948:	blx	r2
   3e94c:	ldr	r1, [r4, #16]
   3e950:	ldr	r0, [r4, #20]
   3e954:	sub	r6, r1, r0
   3e958:	cmp	r6, r5
   3e95c:	bcs	3e8b0 <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   3e960:	mov	r1, #32
   3e964:	mov	r2, r6
   3e968:	bl	14eec <memset@plt>
   3e96c:	ldr	r0, [r4, #20]
   3e970:	ldr	r2, [r4, #44]	; 0x2c
   3e974:	mov	r1, #0
   3e978:	add	r0, r0, r6
   3e97c:	str	r0, [r4, #20]
   3e980:	mov	r0, r4
   3e984:	blx	r2
   3e988:	ldr	r1, [r4, #16]
   3e98c:	ldr	r0, [r4, #20]
   3e990:	sub	r5, r5, r6
   3e994:	sub	r6, r1, r0
   3e998:	cmp	r5, r6
   3e99c:	bhi	3e960 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   3e9a0:	b	3e8b0 <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   3e9a4:	ldr	r0, [r4, #16]
   3e9a8:	cmp	r2, r0
   3e9ac:	bcc	3e8c8 <flatcc_json_printer_uint64_vector_field@@Base+0x1e0>
   3e9b0:	ldr	r2, [r4, #44]	; 0x2c
   3e9b4:	mov	r0, r4
   3e9b8:	mov	r1, #0
   3e9bc:	blx	r2
   3e9c0:	ldr	r2, [r4, #20]
   3e9c4:	b	3e8c8 <flatcc_json_printer_uint64_vector_field@@Base+0x1e0>
   3e9c8:	ldrb	r1, [r4, #25]
   3e9cc:	ldr	r0, [r4, #20]
   3e9d0:	cmp	r1, #0
   3e9d4:	beq	3ea94 <flatcc_json_printer_uint64_vector_field@@Base+0x3ac>
   3e9d8:	add	r1, r0, #1
   3e9dc:	str	r1, [r4, #20]
   3e9e0:	mov	r1, #10
   3e9e4:	strb	r1, [r0]
   3e9e8:	ldr	r0, [r4, #32]
   3e9ec:	sub	r2, r0, #1
   3e9f0:	str	r2, [r4, #32]
   3e9f4:	ldrb	r3, [r4, #25]
   3e9f8:	ldr	r0, [r4, #20]
   3e9fc:	ldr	r1, [r4, #16]
   3ea00:	mla	r7, r2, r3, r0
   3ea04:	mul	r5, r2, r3
   3ea08:	cmp	r7, r1
   3ea0c:	bls	3ea7c <flatcc_json_printer_uint64_vector_field@@Base+0x394>
   3ea10:	cmp	r0, r1
   3ea14:	bcc	3ea30 <flatcc_json_printer_uint64_vector_field@@Base+0x348>
   3ea18:	ldr	r2, [r4, #44]	; 0x2c
   3ea1c:	mov	r0, r4
   3ea20:	mov	r1, #0
   3ea24:	blx	r2
   3ea28:	ldr	r1, [r4, #16]
   3ea2c:	ldr	r0, [r4, #20]
   3ea30:	sub	r6, r1, r0
   3ea34:	cmp	r6, r5
   3ea38:	bcs	3ea7c <flatcc_json_printer_uint64_vector_field@@Base+0x394>
   3ea3c:	mov	r1, #32
   3ea40:	mov	r2, r6
   3ea44:	bl	14eec <memset@plt>
   3ea48:	ldr	r0, [r4, #20]
   3ea4c:	ldr	r2, [r4, #44]	; 0x2c
   3ea50:	mov	r1, #0
   3ea54:	add	r0, r0, r6
   3ea58:	str	r0, [r4, #20]
   3ea5c:	mov	r0, r4
   3ea60:	blx	r2
   3ea64:	ldr	r1, [r4, #16]
   3ea68:	ldr	r0, [r4, #20]
   3ea6c:	sub	r5, r5, r6
   3ea70:	sub	r6, r1, r0
   3ea74:	cmp	r5, r6
   3ea78:	bhi	3ea3c <flatcc_json_printer_uint64_vector_field@@Base+0x354>
   3ea7c:	mov	r1, #32
   3ea80:	mov	r2, r5
   3ea84:	bl	14eec <memset@plt>
   3ea88:	ldr	r0, [r4, #20]
   3ea8c:	add	r0, r0, r5
   3ea90:	str	r0, [r4, #20]
   3ea94:	add	r1, r0, #1
   3ea98:	str	r1, [r4, #20]
   3ea9c:	mov	r1, #93	; 0x5d
   3eaa0:	strb	r1, [r0]
   3eaa4:	sub	sp, fp, #28
   3eaa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003eaac <flatcc_json_printer_int8_vector_field@@Base>:
   3eaac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3eab0:	add	fp, sp, #28
   3eab4:	sub	sp, sp, #4
   3eab8:	mov	r4, r0
   3eabc:	mov	r0, #4
   3eac0:	add	r0, r0, r2, lsl #1
   3eac4:	ldr	r2, [r1, #8]
   3eac8:	cmp	r0, r2
   3eacc:	bge	3eaec <flatcc_json_printer_int8_vector_field@@Base+0x40>
   3ead0:	ldr	r2, [r1, #4]
   3ead4:	add	r0, r2, r0
   3ead8:	ldrh	r0, [r0]
   3eadc:	cmp	r0, #0
   3eae0:	ldrne	r2, [r1]
   3eae4:	addsne	r9, r2, r0
   3eae8:	bne	3eaf4 <flatcc_json_printer_int8_vector_field@@Base+0x48>
   3eaec:	sub	sp, fp, #28
   3eaf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3eaf4:	ldr	r0, [r1, #16]
   3eaf8:	ldr	r2, [fp, #8]
   3eafc:	add	r7, r0, #1
   3eb00:	cmp	r0, #0
   3eb04:	str	r7, [r1, #16]
   3eb08:	beq	3eb20 <flatcc_json_printer_int8_vector_field@@Base+0x74>
   3eb0c:	ldr	r0, [r4, #20]
   3eb10:	add	r1, r0, #1
   3eb14:	str	r1, [r4, #20]
   3eb18:	mov	r1, #44	; 0x2c
   3eb1c:	strb	r1, [r0]
   3eb20:	ldr	r0, [r9]
   3eb24:	mov	r1, r3
   3eb28:	ldr	r8, [r9, r0]!
   3eb2c:	mov	r0, r4
   3eb30:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3eb34:	ldr	r1, [r4, #32]
   3eb38:	ldr	r0, [r4, #20]
   3eb3c:	cmp	r8, #0
   3eb40:	add	r1, r1, #1
   3eb44:	str	r1, [r4, #32]
   3eb48:	add	r1, r0, #1
   3eb4c:	str	r1, [r4, #20]
   3eb50:	mov	r1, #91	; 0x5b
   3eb54:	strb	r1, [r0]
   3eb58:	beq	3ef10 <flatcc_json_printer_int8_vector_field@@Base+0x464>
   3eb5c:	ldrb	r1, [r4, #25]
   3eb60:	ldr	r0, [r4, #20]
   3eb64:	cmp	r1, #0
   3eb68:	beq	3ec24 <flatcc_json_printer_int8_vector_field@@Base+0x178>
   3eb6c:	add	r1, r0, #1
   3eb70:	str	r1, [r4, #20]
   3eb74:	mov	r1, #10
   3eb78:	strb	r1, [r0]
   3eb7c:	ldr	r0, [r4, #20]
   3eb80:	ldrb	r2, [r4, #25]
   3eb84:	ldr	r3, [r4, #32]
   3eb88:	ldr	r1, [r4, #16]
   3eb8c:	mla	r7, r3, r2, r0
   3eb90:	mul	r5, r3, r2
   3eb94:	cmp	r7, r1
   3eb98:	bls	3ec08 <flatcc_json_printer_int8_vector_field@@Base+0x15c>
   3eb9c:	cmp	r0, r1
   3eba0:	bcc	3ebbc <flatcc_json_printer_int8_vector_field@@Base+0x110>
   3eba4:	ldr	r2, [r4, #44]	; 0x2c
   3eba8:	mov	r0, r4
   3ebac:	mov	r1, #0
   3ebb0:	blx	r2
   3ebb4:	ldr	r1, [r4, #16]
   3ebb8:	ldr	r0, [r4, #20]
   3ebbc:	sub	r6, r1, r0
   3ebc0:	cmp	r6, r5
   3ebc4:	bcs	3ec08 <flatcc_json_printer_int8_vector_field@@Base+0x15c>
   3ebc8:	mov	r1, #32
   3ebcc:	mov	r2, r6
   3ebd0:	bl	14eec <memset@plt>
   3ebd4:	ldr	r0, [r4, #20]
   3ebd8:	ldr	r2, [r4, #44]	; 0x2c
   3ebdc:	mov	r1, #0
   3ebe0:	add	r0, r0, r6
   3ebe4:	str	r0, [r4, #20]
   3ebe8:	mov	r0, r4
   3ebec:	blx	r2
   3ebf0:	ldr	r1, [r4, #16]
   3ebf4:	ldr	r0, [r4, #20]
   3ebf8:	sub	r5, r5, r6
   3ebfc:	sub	r6, r1, r0
   3ec00:	cmp	r5, r6
   3ec04:	bhi	3ebc8 <flatcc_json_printer_int8_vector_field@@Base+0x11c>
   3ec08:	mov	r1, #32
   3ec0c:	mov	r2, r5
   3ec10:	bl	14eec <memset@plt>
   3ec14:	ldr	r0, [r4, #20]
   3ec18:	add	r0, r0, r5
   3ec1c:	str	r0, [r4, #20]
   3ec20:	b	3ec44 <flatcc_json_printer_int8_vector_field@@Base+0x198>
   3ec24:	ldr	r1, [r4, #16]
   3ec28:	cmp	r0, r1
   3ec2c:	bcc	3ec44 <flatcc_json_printer_int8_vector_field@@Base+0x198>
   3ec30:	ldr	r2, [r4, #44]	; 0x2c
   3ec34:	mov	r0, r4
   3ec38:	mov	r1, #0
   3ec3c:	blx	r2
   3ec40:	ldr	r0, [r4, #20]
   3ec44:	ldrb	r1, [r9, #4]
   3ec48:	sxtb	r2, r1
   3ec4c:	lsr	r1, r1, #7
   3ec50:	cmn	r2, #1
   3ec54:	movle	r3, #45	; 0x2d
   3ec58:	rsble	r2, r2, #0
   3ec5c:	strble	r3, [r0], #1
   3ec60:	uxtb	r3, r2
   3ec64:	cmp	r3, #100	; 0x64
   3ec68:	bcc	3ecb8 <flatcc_json_printer_int8_vector_field@@Base+0x20c>
   3ec6c:	mov	r2, #0
   3ec70:	strb	r2, [r0, #3]
   3ec74:	movw	r2, #34079	; 0x851f
   3ec78:	movt	r2, #20971	; 0x51eb
   3ec7c:	umull	r2, r7, r3, r2
   3ec80:	mov	r2, #48	; 0x30
   3ec84:	orr	r2, r2, r7, lsr #5
   3ec88:	strb	r2, [r0]
   3ec8c:	lsr	r2, r7, #5
   3ec90:	mov	r7, #100	; 0x64
   3ec94:	mls	r2, r2, r7, r3
   3ec98:	movw	r3, #48464	; 0xbd50
   3ec9c:	movt	r3, #4
   3eca0:	uxtb	r2, r2
   3eca4:	add	r2, r3, r2, lsl #1
   3eca8:	ldrh	r2, [r2]
   3ecac:	strh	r2, [r0, #1]
   3ecb0:	mov	r0, #3
   3ecb4:	b	3ed10 <flatcc_json_printer_int8_vector_field@@Base+0x264>
   3ecb8:	cmp	r3, #10
   3ecbc:	bcc	3ecfc <flatcc_json_printer_int8_vector_field@@Base+0x250>
   3ecc0:	mov	r2, #0
   3ecc4:	strb	r2, [r0, #2]
   3ecc8:	movw	r2, #34079	; 0x851f
   3eccc:	movt	r2, #20971	; 0x51eb
   3ecd0:	umull	r2, r7, r3, r2
   3ecd4:	lsr	r2, r7, #5
   3ecd8:	mov	r7, #100	; 0x64
   3ecdc:	mls	r2, r2, r7, r3
   3ece0:	movw	r3, #48464	; 0xbd50
   3ece4:	movt	r3, #4
   3ece8:	add	r2, r3, r2, lsl #1
   3ecec:	ldrh	r2, [r2]
   3ecf0:	strh	r2, [r0]
   3ecf4:	mov	r0, #2
   3ecf8:	b	3ed10 <flatcc_json_printer_int8_vector_field@@Base+0x264>
   3ecfc:	mov	r3, #0
   3ed00:	add	r2, r2, #48	; 0x30
   3ed04:	strb	r3, [r0, #1]
   3ed08:	strb	r2, [r0]
   3ed0c:	mov	r0, #1
   3ed10:	add	r0, r0, r1
   3ed14:	ldr	r1, [r4, #20]
   3ed18:	subs	r8, r8, #1
   3ed1c:	add	r0, r1, r0
   3ed20:	str	r0, [r4, #20]
   3ed24:	beq	3ef10 <flatcc_json_printer_int8_vector_field@@Base+0x464>
   3ed28:	ldr	r0, [r4, #20]
   3ed2c:	add	r7, r9, #5
   3ed30:	mov	r9, #44	; 0x2c
   3ed34:	mov	sl, #0
   3ed38:	b	3ed9c <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
   3ed3c:	movw	r2, #34079	; 0x851f
   3ed40:	strb	sl, [r0, #3]
   3ed44:	movt	r2, #20971	; 0x51eb
   3ed48:	umull	r2, r6, r3, r2
   3ed4c:	mov	r2, #48	; 0x30
   3ed50:	orr	r2, r2, r6, lsr #5
   3ed54:	strb	r2, [r0]
   3ed58:	lsr	r2, r6, #5
   3ed5c:	mov	r6, #100	; 0x64
   3ed60:	mls	r2, r2, r6, r3
   3ed64:	movw	r3, #48464	; 0xbd50
   3ed68:	movt	r3, #4
   3ed6c:	uxtb	r2, r2
   3ed70:	add	r2, r3, r2, lsl #1
   3ed74:	ldrh	r2, [r2]
   3ed78:	strh	r2, [r0, #1]
   3ed7c:	mov	r0, #3
   3ed80:	add	r0, r0, r1
   3ed84:	ldr	r1, [r4, #20]
   3ed88:	add	r7, r7, #1
   3ed8c:	cmp	r8, #0
   3ed90:	add	r0, r1, r0
   3ed94:	str	r0, [r4, #20]
   3ed98:	beq	3ef10 <flatcc_json_printer_int8_vector_field@@Base+0x464>
   3ed9c:	add	r1, r0, #1
   3eda0:	str	r1, [r4, #20]
   3eda4:	strb	r9, [r0]
   3eda8:	ldrb	r1, [r4, #25]
   3edac:	ldr	r0, [r4, #20]
   3edb0:	cmp	r1, #0
   3edb4:	beq	3ee70 <flatcc_json_printer_int8_vector_field@@Base+0x3c4>
   3edb8:	add	r1, r0, #1
   3edbc:	str	r1, [r4, #20]
   3edc0:	mov	r1, #10
   3edc4:	strb	r1, [r0]
   3edc8:	ldr	r0, [r4, #20]
   3edcc:	ldrb	r2, [r4, #25]
   3edd0:	ldr	r3, [r4, #32]
   3edd4:	ldr	r1, [r4, #16]
   3edd8:	mla	r6, r3, r2, r0
   3eddc:	mul	r5, r3, r2
   3ede0:	cmp	r6, r1
   3ede4:	bls	3ee54 <flatcc_json_printer_int8_vector_field@@Base+0x3a8>
   3ede8:	cmp	r0, r1
   3edec:	bcc	3ee08 <flatcc_json_printer_int8_vector_field@@Base+0x35c>
   3edf0:	ldr	r2, [r4, #44]	; 0x2c
   3edf4:	mov	r0, r4
   3edf8:	mov	r1, #0
   3edfc:	blx	r2
   3ee00:	ldr	r1, [r4, #16]
   3ee04:	ldr	r0, [r4, #20]
   3ee08:	sub	r6, r1, r0
   3ee0c:	cmp	r6, r5
   3ee10:	bcs	3ee54 <flatcc_json_printer_int8_vector_field@@Base+0x3a8>
   3ee14:	mov	r1, #32
   3ee18:	mov	r2, r6
   3ee1c:	bl	14eec <memset@plt>
   3ee20:	ldr	r0, [r4, #20]
   3ee24:	ldr	r2, [r4, #44]	; 0x2c
   3ee28:	mov	r1, #0
   3ee2c:	add	r0, r0, r6
   3ee30:	str	r0, [r4, #20]
   3ee34:	mov	r0, r4
   3ee38:	blx	r2
   3ee3c:	ldr	r1, [r4, #16]
   3ee40:	ldr	r0, [r4, #20]
   3ee44:	sub	r5, r5, r6
   3ee48:	sub	r6, r1, r0
   3ee4c:	cmp	r5, r6
   3ee50:	bhi	3ee14 <flatcc_json_printer_int8_vector_field@@Base+0x368>
   3ee54:	mov	r1, #32
   3ee58:	mov	r2, r5
   3ee5c:	bl	14eec <memset@plt>
   3ee60:	ldr	r0, [r4, #20]
   3ee64:	add	r0, r0, r5
   3ee68:	str	r0, [r4, #20]
   3ee6c:	b	3ee90 <flatcc_json_printer_int8_vector_field@@Base+0x3e4>
   3ee70:	ldr	r1, [r4, #16]
   3ee74:	cmp	r0, r1
   3ee78:	bcc	3ee90 <flatcc_json_printer_int8_vector_field@@Base+0x3e4>
   3ee7c:	ldr	r2, [r4, #44]	; 0x2c
   3ee80:	mov	r0, r4
   3ee84:	mov	r1, #0
   3ee88:	blx	r2
   3ee8c:	ldr	r0, [r4, #20]
   3ee90:	ldrb	r1, [r7]
   3ee94:	sub	r8, r8, #1
   3ee98:	sxtb	r2, r1
   3ee9c:	lsr	r1, r1, #7
   3eea0:	cmn	r2, #1
   3eea4:	movle	r3, #45	; 0x2d
   3eea8:	rsble	r2, r2, #0
   3eeac:	strble	r3, [r0], #1
   3eeb0:	uxtb	r3, r2
   3eeb4:	cmp	r3, #100	; 0x64
   3eeb8:	bcs	3ed3c <flatcc_json_printer_int8_vector_field@@Base+0x290>
   3eebc:	cmp	r3, #10
   3eec0:	bcc	3eefc <flatcc_json_printer_int8_vector_field@@Base+0x450>
   3eec4:	movw	r2, #34079	; 0x851f
   3eec8:	strb	sl, [r0, #2]
   3eecc:	movt	r2, #20971	; 0x51eb
   3eed0:	umull	r2, r6, r3, r2
   3eed4:	lsr	r2, r6, #5
   3eed8:	mov	r6, #100	; 0x64
   3eedc:	mls	r2, r2, r6, r3
   3eee0:	movw	r3, #48464	; 0xbd50
   3eee4:	movt	r3, #4
   3eee8:	add	r2, r3, r2, lsl #1
   3eeec:	ldrh	r2, [r2]
   3eef0:	strh	r2, [r0]
   3eef4:	mov	r0, #2
   3eef8:	b	3ed80 <flatcc_json_printer_int8_vector_field@@Base+0x2d4>
   3eefc:	add	r2, r2, #48	; 0x30
   3ef00:	strb	sl, [r0, #1]
   3ef04:	strb	r2, [r0]
   3ef08:	mov	r0, #1
   3ef0c:	b	3ed80 <flatcc_json_printer_int8_vector_field@@Base+0x2d4>
   3ef10:	ldrb	r1, [r4, #25]
   3ef14:	ldr	r0, [r4, #20]
   3ef18:	cmp	r1, #0
   3ef1c:	beq	3efdc <flatcc_json_printer_int8_vector_field@@Base+0x530>
   3ef20:	add	r1, r0, #1
   3ef24:	str	r1, [r4, #20]
   3ef28:	mov	r1, #10
   3ef2c:	strb	r1, [r0]
   3ef30:	ldr	r0, [r4, #32]
   3ef34:	sub	r2, r0, #1
   3ef38:	str	r2, [r4, #32]
   3ef3c:	ldrb	r3, [r4, #25]
   3ef40:	ldr	r0, [r4, #20]
   3ef44:	ldr	r1, [r4, #16]
   3ef48:	mla	r7, r2, r3, r0
   3ef4c:	mul	r5, r2, r3
   3ef50:	cmp	r7, r1
   3ef54:	bls	3efc4 <flatcc_json_printer_int8_vector_field@@Base+0x518>
   3ef58:	cmp	r0, r1
   3ef5c:	bcc	3ef78 <flatcc_json_printer_int8_vector_field@@Base+0x4cc>
   3ef60:	ldr	r2, [r4, #44]	; 0x2c
   3ef64:	mov	r0, r4
   3ef68:	mov	r1, #0
   3ef6c:	blx	r2
   3ef70:	ldr	r1, [r4, #16]
   3ef74:	ldr	r0, [r4, #20]
   3ef78:	sub	r6, r1, r0
   3ef7c:	cmp	r6, r5
   3ef80:	bcs	3efc4 <flatcc_json_printer_int8_vector_field@@Base+0x518>
   3ef84:	mov	r1, #32
   3ef88:	mov	r2, r6
   3ef8c:	bl	14eec <memset@plt>
   3ef90:	ldr	r0, [r4, #20]
   3ef94:	ldr	r2, [r4, #44]	; 0x2c
   3ef98:	mov	r1, #0
   3ef9c:	add	r0, r0, r6
   3efa0:	str	r0, [r4, #20]
   3efa4:	mov	r0, r4
   3efa8:	blx	r2
   3efac:	ldr	r1, [r4, #16]
   3efb0:	ldr	r0, [r4, #20]
   3efb4:	sub	r5, r5, r6
   3efb8:	sub	r6, r1, r0
   3efbc:	cmp	r5, r6
   3efc0:	bhi	3ef84 <flatcc_json_printer_int8_vector_field@@Base+0x4d8>
   3efc4:	mov	r1, #32
   3efc8:	mov	r2, r5
   3efcc:	bl	14eec <memset@plt>
   3efd0:	ldr	r0, [r4, #20]
   3efd4:	add	r0, r0, r5
   3efd8:	str	r0, [r4, #20]
   3efdc:	add	r1, r0, #1
   3efe0:	str	r1, [r4, #20]
   3efe4:	mov	r1, #93	; 0x5d
   3efe8:	strb	r1, [r0]
   3efec:	sub	sp, fp, #28
   3eff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003eff4 <flatcc_json_printer_int16_vector_field@@Base>:
   3eff4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3eff8:	add	fp, sp, #28
   3effc:	sub	sp, sp, #4
   3f000:	mov	r4, r0
   3f004:	mov	r0, #4
   3f008:	add	r0, r0, r2, lsl #1
   3f00c:	ldr	r2, [r1, #8]
   3f010:	cmp	r0, r2
   3f014:	bge	3f034 <flatcc_json_printer_int16_vector_field@@Base+0x40>
   3f018:	ldr	r2, [r1, #4]
   3f01c:	add	r0, r2, r0
   3f020:	ldrh	r0, [r0]
   3f024:	cmp	r0, #0
   3f028:	ldrne	r2, [r1]
   3f02c:	addsne	r8, r2, r0
   3f030:	bne	3f03c <flatcc_json_printer_int16_vector_field@@Base+0x48>
   3f034:	sub	sp, fp, #28
   3f038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f03c:	ldr	r0, [r1, #16]
   3f040:	ldr	r2, [fp, #8]
   3f044:	add	r7, r0, #1
   3f048:	cmp	r0, #0
   3f04c:	str	r7, [r1, #16]
   3f050:	beq	3f068 <flatcc_json_printer_int16_vector_field@@Base+0x74>
   3f054:	ldr	r0, [r4, #20]
   3f058:	add	r1, r0, #1
   3f05c:	str	r1, [r4, #20]
   3f060:	mov	r1, #44	; 0x2c
   3f064:	strb	r1, [r0]
   3f068:	ldr	r0, [r8]
   3f06c:	mov	r1, r3
   3f070:	ldr	r7, [r8, r0]!
   3f074:	mov	r0, r4
   3f078:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3f07c:	ldr	r1, [r4, #32]
   3f080:	ldr	r0, [r4, #20]
   3f084:	cmp	r7, #0
   3f088:	add	r1, r1, #1
   3f08c:	str	r1, [r4, #32]
   3f090:	add	r1, r0, #1
   3f094:	str	r1, [r4, #20]
   3f098:	mov	r1, #91	; 0x5b
   3f09c:	strb	r1, [r0]
   3f0a0:	beq	3f314 <flatcc_json_printer_int16_vector_field@@Base+0x320>
   3f0a4:	ldrb	r0, [r4, #25]
   3f0a8:	ldr	r1, [r4, #20]
   3f0ac:	cmp	r0, #0
   3f0b0:	beq	3f16c <flatcc_json_printer_int16_vector_field@@Base+0x178>
   3f0b4:	add	r0, r1, #1
   3f0b8:	str	r0, [r4, #20]
   3f0bc:	mov	r0, #10
   3f0c0:	strb	r0, [r1]
   3f0c4:	ldr	r0, [r4, #20]
   3f0c8:	ldrb	r2, [r4, #25]
   3f0cc:	ldr	r3, [r4, #32]
   3f0d0:	ldr	r1, [r4, #16]
   3f0d4:	mla	r6, r3, r2, r0
   3f0d8:	mul	r5, r3, r2
   3f0dc:	cmp	r6, r1
   3f0e0:	bls	3f150 <flatcc_json_printer_int16_vector_field@@Base+0x15c>
   3f0e4:	cmp	r0, r1
   3f0e8:	bcc	3f104 <flatcc_json_printer_int16_vector_field@@Base+0x110>
   3f0ec:	ldr	r2, [r4, #44]	; 0x2c
   3f0f0:	mov	r0, r4
   3f0f4:	mov	r1, #0
   3f0f8:	blx	r2
   3f0fc:	ldr	r1, [r4, #16]
   3f100:	ldr	r0, [r4, #20]
   3f104:	sub	r6, r1, r0
   3f108:	cmp	r6, r5
   3f10c:	bcs	3f150 <flatcc_json_printer_int16_vector_field@@Base+0x15c>
   3f110:	mov	r1, #32
   3f114:	mov	r2, r6
   3f118:	bl	14eec <memset@plt>
   3f11c:	ldr	r0, [r4, #20]
   3f120:	ldr	r2, [r4, #44]	; 0x2c
   3f124:	mov	r1, #0
   3f128:	add	r0, r0, r6
   3f12c:	str	r0, [r4, #20]
   3f130:	mov	r0, r4
   3f134:	blx	r2
   3f138:	ldr	r1, [r4, #16]
   3f13c:	ldr	r0, [r4, #20]
   3f140:	sub	r5, r5, r6
   3f144:	sub	r6, r1, r0
   3f148:	cmp	r5, r6
   3f14c:	bhi	3f110 <flatcc_json_printer_int16_vector_field@@Base+0x11c>
   3f150:	mov	r1, #32
   3f154:	mov	r2, r5
   3f158:	bl	14eec <memset@plt>
   3f15c:	ldr	r0, [r4, #20]
   3f160:	add	r1, r0, r5
   3f164:	str	r1, [r4, #20]
   3f168:	b	3f18c <flatcc_json_printer_int16_vector_field@@Base+0x198>
   3f16c:	ldr	r0, [r4, #16]
   3f170:	cmp	r1, r0
   3f174:	bcc	3f18c <flatcc_json_printer_int16_vector_field@@Base+0x198>
   3f178:	ldr	r2, [r4, #44]	; 0x2c
   3f17c:	mov	r0, r4
   3f180:	mov	r1, #0
   3f184:	blx	r2
   3f188:	ldr	r1, [r4, #20]
   3f18c:	ldrh	r0, [r8, #4]
   3f190:	lsr	r5, r0, #15
   3f194:	sxth	r0, r0
   3f198:	cmn	r0, #1
   3f19c:	rsble	r0, r0, #0
   3f1a0:	movle	r2, #45	; 0x2d
   3f1a4:	uxth	r0, r0
   3f1a8:	strble	r2, [r1], #1
   3f1ac:	bl	3a0b4 <flatcc_json_printer_uint16@@Base+0x2c>
   3f1b0:	ldr	r1, [r4, #20]
   3f1b4:	add	r0, r0, r5
   3f1b8:	subs	r9, r7, #1
   3f1bc:	add	r0, r1, r0
   3f1c0:	str	r0, [r4, #20]
   3f1c4:	beq	3f314 <flatcc_json_printer_int16_vector_field@@Base+0x320>
   3f1c8:	ldr	r0, [r4, #20]
   3f1cc:	add	r7, r8, #6
   3f1d0:	mov	r8, #44	; 0x2c
   3f1d4:	mov	sl, #10
   3f1d8:	b	3f238 <flatcc_json_printer_int16_vector_field@@Base+0x244>
   3f1dc:	mov	r1, #32
   3f1e0:	mov	r2, r5
   3f1e4:	bl	14eec <memset@plt>
   3f1e8:	ldr	r0, [r4, #20]
   3f1ec:	add	r1, r0, r5
   3f1f0:	str	r1, [r4, #20]
   3f1f4:	ldrh	r0, [r7]
   3f1f8:	sub	r9, r9, #1
   3f1fc:	lsr	r5, r0, #15
   3f200:	sxth	r0, r0
   3f204:	cmn	r0, #1
   3f208:	rsble	r0, r0, #0
   3f20c:	movle	r2, #45	; 0x2d
   3f210:	uxth	r0, r0
   3f214:	strble	r2, [r1], #1
   3f218:	bl	3a0b4 <flatcc_json_printer_uint16@@Base+0x2c>
   3f21c:	ldr	r1, [r4, #20]
   3f220:	add	r0, r0, r5
   3f224:	add	r7, r7, #2
   3f228:	cmp	r9, #0
   3f22c:	add	r0, r1, r0
   3f230:	str	r0, [r4, #20]
   3f234:	beq	3f314 <flatcc_json_printer_int16_vector_field@@Base+0x320>
   3f238:	add	r1, r0, #1
   3f23c:	str	r1, [r4, #20]
   3f240:	strb	r8, [r0]
   3f244:	ldrb	r0, [r4, #25]
   3f248:	ldr	r1, [r4, #20]
   3f24c:	cmp	r0, #0
   3f250:	beq	3f2f0 <flatcc_json_printer_int16_vector_field@@Base+0x2fc>
   3f254:	add	r0, r1, #1
   3f258:	str	r0, [r4, #20]
   3f25c:	strb	sl, [r1]
   3f260:	ldr	r0, [r4, #20]
   3f264:	ldrb	r2, [r4, #25]
   3f268:	ldr	r3, [r4, #32]
   3f26c:	ldr	r1, [r4, #16]
   3f270:	mla	r6, r3, r2, r0
   3f274:	mul	r5, r3, r2
   3f278:	cmp	r6, r1
   3f27c:	bls	3f1dc <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   3f280:	cmp	r0, r1
   3f284:	bcc	3f2a0 <flatcc_json_printer_int16_vector_field@@Base+0x2ac>
   3f288:	ldr	r2, [r4, #44]	; 0x2c
   3f28c:	mov	r0, r4
   3f290:	mov	r1, #0
   3f294:	blx	r2
   3f298:	ldr	r1, [r4, #16]
   3f29c:	ldr	r0, [r4, #20]
   3f2a0:	sub	r6, r1, r0
   3f2a4:	cmp	r6, r5
   3f2a8:	bcs	3f1dc <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   3f2ac:	mov	r1, #32
   3f2b0:	mov	r2, r6
   3f2b4:	bl	14eec <memset@plt>
   3f2b8:	ldr	r0, [r4, #20]
   3f2bc:	ldr	r2, [r4, #44]	; 0x2c
   3f2c0:	mov	r1, #0
   3f2c4:	add	r0, r0, r6
   3f2c8:	str	r0, [r4, #20]
   3f2cc:	mov	r0, r4
   3f2d0:	blx	r2
   3f2d4:	ldr	r1, [r4, #16]
   3f2d8:	ldr	r0, [r4, #20]
   3f2dc:	sub	r5, r5, r6
   3f2e0:	sub	r6, r1, r0
   3f2e4:	cmp	r5, r6
   3f2e8:	bhi	3f2ac <flatcc_json_printer_int16_vector_field@@Base+0x2b8>
   3f2ec:	b	3f1dc <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   3f2f0:	ldr	r0, [r4, #16]
   3f2f4:	cmp	r1, r0
   3f2f8:	bcc	3f1f4 <flatcc_json_printer_int16_vector_field@@Base+0x200>
   3f2fc:	ldr	r2, [r4, #44]	; 0x2c
   3f300:	mov	r0, r4
   3f304:	mov	r1, #0
   3f308:	blx	r2
   3f30c:	ldr	r1, [r4, #20]
   3f310:	b	3f1f4 <flatcc_json_printer_int16_vector_field@@Base+0x200>
   3f314:	ldrb	r1, [r4, #25]
   3f318:	ldr	r0, [r4, #20]
   3f31c:	cmp	r1, #0
   3f320:	beq	3f3e0 <flatcc_json_printer_int16_vector_field@@Base+0x3ec>
   3f324:	add	r1, r0, #1
   3f328:	str	r1, [r4, #20]
   3f32c:	mov	r1, #10
   3f330:	strb	r1, [r0]
   3f334:	ldr	r0, [r4, #32]
   3f338:	sub	r2, r0, #1
   3f33c:	str	r2, [r4, #32]
   3f340:	ldrb	r3, [r4, #25]
   3f344:	ldr	r0, [r4, #20]
   3f348:	ldr	r1, [r4, #16]
   3f34c:	mla	r7, r2, r3, r0
   3f350:	mul	r5, r2, r3
   3f354:	cmp	r7, r1
   3f358:	bls	3f3c8 <flatcc_json_printer_int16_vector_field@@Base+0x3d4>
   3f35c:	cmp	r0, r1
   3f360:	bcc	3f37c <flatcc_json_printer_int16_vector_field@@Base+0x388>
   3f364:	ldr	r2, [r4, #44]	; 0x2c
   3f368:	mov	r0, r4
   3f36c:	mov	r1, #0
   3f370:	blx	r2
   3f374:	ldr	r1, [r4, #16]
   3f378:	ldr	r0, [r4, #20]
   3f37c:	sub	r6, r1, r0
   3f380:	cmp	r6, r5
   3f384:	bcs	3f3c8 <flatcc_json_printer_int16_vector_field@@Base+0x3d4>
   3f388:	mov	r1, #32
   3f38c:	mov	r2, r6
   3f390:	bl	14eec <memset@plt>
   3f394:	ldr	r0, [r4, #20]
   3f398:	ldr	r2, [r4, #44]	; 0x2c
   3f39c:	mov	r1, #0
   3f3a0:	add	r0, r0, r6
   3f3a4:	str	r0, [r4, #20]
   3f3a8:	mov	r0, r4
   3f3ac:	blx	r2
   3f3b0:	ldr	r1, [r4, #16]
   3f3b4:	ldr	r0, [r4, #20]
   3f3b8:	sub	r5, r5, r6
   3f3bc:	sub	r6, r1, r0
   3f3c0:	cmp	r5, r6
   3f3c4:	bhi	3f388 <flatcc_json_printer_int16_vector_field@@Base+0x394>
   3f3c8:	mov	r1, #32
   3f3cc:	mov	r2, r5
   3f3d0:	bl	14eec <memset@plt>
   3f3d4:	ldr	r0, [r4, #20]
   3f3d8:	add	r0, r0, r5
   3f3dc:	str	r0, [r4, #20]
   3f3e0:	add	r1, r0, #1
   3f3e4:	str	r1, [r4, #20]
   3f3e8:	mov	r1, #93	; 0x5d
   3f3ec:	strb	r1, [r0]
   3f3f0:	sub	sp, fp, #28
   3f3f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f3f8 <flatcc_json_printer_int32_vector_field@@Base>:
   3f3f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f3fc:	add	fp, sp, #28
   3f400:	sub	sp, sp, #4
   3f404:	mov	r4, r0
   3f408:	mov	r0, #4
   3f40c:	add	r0, r0, r2, lsl #1
   3f410:	ldr	r2, [r1, #8]
   3f414:	cmp	r0, r2
   3f418:	bge	3f438 <flatcc_json_printer_int32_vector_field@@Base+0x40>
   3f41c:	ldr	r2, [r1, #4]
   3f420:	add	r0, r2, r0
   3f424:	ldrh	r0, [r0]
   3f428:	cmp	r0, #0
   3f42c:	ldrne	r2, [r1]
   3f430:	addsne	r8, r2, r0
   3f434:	bne	3f440 <flatcc_json_printer_int32_vector_field@@Base+0x48>
   3f438:	sub	sp, fp, #28
   3f43c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f440:	ldr	r0, [r1, #16]
   3f444:	ldr	r2, [fp, #8]
   3f448:	add	r7, r0, #1
   3f44c:	cmp	r0, #0
   3f450:	str	r7, [r1, #16]
   3f454:	beq	3f46c <flatcc_json_printer_int32_vector_field@@Base+0x74>
   3f458:	ldr	r0, [r4, #20]
   3f45c:	add	r1, r0, #1
   3f460:	str	r1, [r4, #20]
   3f464:	mov	r1, #44	; 0x2c
   3f468:	strb	r1, [r0]
   3f46c:	ldr	r0, [r8]
   3f470:	mov	r1, r3
   3f474:	ldr	r7, [r8, r0]!
   3f478:	mov	r0, r4
   3f47c:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3f480:	ldr	r1, [r4, #32]
   3f484:	ldr	r0, [r4, #20]
   3f488:	cmp	r7, #0
   3f48c:	add	r1, r1, #1
   3f490:	str	r1, [r4, #32]
   3f494:	add	r1, r0, #1
   3f498:	str	r1, [r4, #20]
   3f49c:	mov	r1, #91	; 0x5b
   3f4a0:	strb	r1, [r0]
   3f4a4:	beq	3f708 <flatcc_json_printer_int32_vector_field@@Base+0x310>
   3f4a8:	ldrb	r0, [r4, #25]
   3f4ac:	ldr	r1, [r4, #20]
   3f4b0:	cmp	r0, #0
   3f4b4:	beq	3f570 <flatcc_json_printer_int32_vector_field@@Base+0x178>
   3f4b8:	add	r0, r1, #1
   3f4bc:	str	r0, [r4, #20]
   3f4c0:	mov	r0, #10
   3f4c4:	strb	r0, [r1]
   3f4c8:	ldr	r0, [r4, #20]
   3f4cc:	ldrb	r2, [r4, #25]
   3f4d0:	ldr	r3, [r4, #32]
   3f4d4:	ldr	r1, [r4, #16]
   3f4d8:	mla	r6, r3, r2, r0
   3f4dc:	mul	r5, r3, r2
   3f4e0:	cmp	r6, r1
   3f4e4:	bls	3f554 <flatcc_json_printer_int32_vector_field@@Base+0x15c>
   3f4e8:	cmp	r0, r1
   3f4ec:	bcc	3f508 <flatcc_json_printer_int32_vector_field@@Base+0x110>
   3f4f0:	ldr	r2, [r4, #44]	; 0x2c
   3f4f4:	mov	r0, r4
   3f4f8:	mov	r1, #0
   3f4fc:	blx	r2
   3f500:	ldr	r1, [r4, #16]
   3f504:	ldr	r0, [r4, #20]
   3f508:	sub	r6, r1, r0
   3f50c:	cmp	r6, r5
   3f510:	bcs	3f554 <flatcc_json_printer_int32_vector_field@@Base+0x15c>
   3f514:	mov	r1, #32
   3f518:	mov	r2, r6
   3f51c:	bl	14eec <memset@plt>
   3f520:	ldr	r0, [r4, #20]
   3f524:	ldr	r2, [r4, #44]	; 0x2c
   3f528:	mov	r1, #0
   3f52c:	add	r0, r0, r6
   3f530:	str	r0, [r4, #20]
   3f534:	mov	r0, r4
   3f538:	blx	r2
   3f53c:	ldr	r1, [r4, #16]
   3f540:	ldr	r0, [r4, #20]
   3f544:	sub	r5, r5, r6
   3f548:	sub	r6, r1, r0
   3f54c:	cmp	r5, r6
   3f550:	bhi	3f514 <flatcc_json_printer_int32_vector_field@@Base+0x11c>
   3f554:	mov	r1, #32
   3f558:	mov	r2, r5
   3f55c:	bl	14eec <memset@plt>
   3f560:	ldr	r0, [r4, #20]
   3f564:	add	r1, r0, r5
   3f568:	str	r1, [r4, #20]
   3f56c:	b	3f590 <flatcc_json_printer_int32_vector_field@@Base+0x198>
   3f570:	ldr	r0, [r4, #16]
   3f574:	cmp	r1, r0
   3f578:	bcc	3f590 <flatcc_json_printer_int32_vector_field@@Base+0x198>
   3f57c:	ldr	r2, [r4, #44]	; 0x2c
   3f580:	mov	r0, r4
   3f584:	mov	r1, #0
   3f588:	blx	r2
   3f58c:	ldr	r1, [r4, #20]
   3f590:	ldr	r0, [r8, #4]
   3f594:	cmn	r0, #1
   3f598:	lsr	r5, r0, #31
   3f59c:	movle	r2, #45	; 0x2d
   3f5a0:	rsble	r0, r0, #0
   3f5a4:	strble	r2, [r1], #1
   3f5a8:	bl	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3f5ac:	ldr	r1, [r4, #20]
   3f5b0:	add	r0, r0, r5
   3f5b4:	subs	r9, r7, #1
   3f5b8:	add	r0, r1, r0
   3f5bc:	str	r0, [r4, #20]
   3f5c0:	beq	3f708 <flatcc_json_printer_int32_vector_field@@Base+0x310>
   3f5c4:	ldr	r0, [r4, #20]
   3f5c8:	add	r7, r8, #8
   3f5cc:	mov	r8, #44	; 0x2c
   3f5d0:	mov	sl, #10
   3f5d4:	b	3f62c <flatcc_json_printer_int32_vector_field@@Base+0x234>
   3f5d8:	mov	r1, #32
   3f5dc:	mov	r2, r5
   3f5e0:	bl	14eec <memset@plt>
   3f5e4:	ldr	r0, [r4, #20]
   3f5e8:	add	r1, r0, r5
   3f5ec:	str	r1, [r4, #20]
   3f5f0:	ldr	r0, [r7]
   3f5f4:	sub	r9, r9, #1
   3f5f8:	cmn	r0, #1
   3f5fc:	lsr	r5, r0, #31
   3f600:	movle	r2, #45	; 0x2d
   3f604:	rsble	r0, r0, #0
   3f608:	strble	r2, [r1], #1
   3f60c:	bl	3a264 <flatcc_json_printer_uint32@@Base+0x2c>
   3f610:	ldr	r1, [r4, #20]
   3f614:	add	r0, r0, r5
   3f618:	add	r7, r7, #4
   3f61c:	cmp	r9, #0
   3f620:	add	r0, r1, r0
   3f624:	str	r0, [r4, #20]
   3f628:	beq	3f708 <flatcc_json_printer_int32_vector_field@@Base+0x310>
   3f62c:	add	r1, r0, #1
   3f630:	str	r1, [r4, #20]
   3f634:	strb	r8, [r0]
   3f638:	ldrb	r0, [r4, #25]
   3f63c:	ldr	r1, [r4, #20]
   3f640:	cmp	r0, #0
   3f644:	beq	3f6e4 <flatcc_json_printer_int32_vector_field@@Base+0x2ec>
   3f648:	add	r0, r1, #1
   3f64c:	str	r0, [r4, #20]
   3f650:	strb	sl, [r1]
   3f654:	ldr	r0, [r4, #20]
   3f658:	ldrb	r2, [r4, #25]
   3f65c:	ldr	r3, [r4, #32]
   3f660:	ldr	r1, [r4, #16]
   3f664:	mla	r6, r3, r2, r0
   3f668:	mul	r5, r3, r2
   3f66c:	cmp	r6, r1
   3f670:	bls	3f5d8 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   3f674:	cmp	r0, r1
   3f678:	bcc	3f694 <flatcc_json_printer_int32_vector_field@@Base+0x29c>
   3f67c:	ldr	r2, [r4, #44]	; 0x2c
   3f680:	mov	r0, r4
   3f684:	mov	r1, #0
   3f688:	blx	r2
   3f68c:	ldr	r1, [r4, #16]
   3f690:	ldr	r0, [r4, #20]
   3f694:	sub	r6, r1, r0
   3f698:	cmp	r6, r5
   3f69c:	bcs	3f5d8 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   3f6a0:	mov	r1, #32
   3f6a4:	mov	r2, r6
   3f6a8:	bl	14eec <memset@plt>
   3f6ac:	ldr	r0, [r4, #20]
   3f6b0:	ldr	r2, [r4, #44]	; 0x2c
   3f6b4:	mov	r1, #0
   3f6b8:	add	r0, r0, r6
   3f6bc:	str	r0, [r4, #20]
   3f6c0:	mov	r0, r4
   3f6c4:	blx	r2
   3f6c8:	ldr	r1, [r4, #16]
   3f6cc:	ldr	r0, [r4, #20]
   3f6d0:	sub	r5, r5, r6
   3f6d4:	sub	r6, r1, r0
   3f6d8:	cmp	r5, r6
   3f6dc:	bhi	3f6a0 <flatcc_json_printer_int32_vector_field@@Base+0x2a8>
   3f6e0:	b	3f5d8 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   3f6e4:	ldr	r0, [r4, #16]
   3f6e8:	cmp	r1, r0
   3f6ec:	bcc	3f5f0 <flatcc_json_printer_int32_vector_field@@Base+0x1f8>
   3f6f0:	ldr	r2, [r4, #44]	; 0x2c
   3f6f4:	mov	r0, r4
   3f6f8:	mov	r1, #0
   3f6fc:	blx	r2
   3f700:	ldr	r1, [r4, #20]
   3f704:	b	3f5f0 <flatcc_json_printer_int32_vector_field@@Base+0x1f8>
   3f708:	ldrb	r1, [r4, #25]
   3f70c:	ldr	r0, [r4, #20]
   3f710:	cmp	r1, #0
   3f714:	beq	3f7d4 <flatcc_json_printer_int32_vector_field@@Base+0x3dc>
   3f718:	add	r1, r0, #1
   3f71c:	str	r1, [r4, #20]
   3f720:	mov	r1, #10
   3f724:	strb	r1, [r0]
   3f728:	ldr	r0, [r4, #32]
   3f72c:	sub	r2, r0, #1
   3f730:	str	r2, [r4, #32]
   3f734:	ldrb	r3, [r4, #25]
   3f738:	ldr	r0, [r4, #20]
   3f73c:	ldr	r1, [r4, #16]
   3f740:	mla	r7, r2, r3, r0
   3f744:	mul	r5, r2, r3
   3f748:	cmp	r7, r1
   3f74c:	bls	3f7bc <flatcc_json_printer_int32_vector_field@@Base+0x3c4>
   3f750:	cmp	r0, r1
   3f754:	bcc	3f770 <flatcc_json_printer_int32_vector_field@@Base+0x378>
   3f758:	ldr	r2, [r4, #44]	; 0x2c
   3f75c:	mov	r0, r4
   3f760:	mov	r1, #0
   3f764:	blx	r2
   3f768:	ldr	r1, [r4, #16]
   3f76c:	ldr	r0, [r4, #20]
   3f770:	sub	r6, r1, r0
   3f774:	cmp	r6, r5
   3f778:	bcs	3f7bc <flatcc_json_printer_int32_vector_field@@Base+0x3c4>
   3f77c:	mov	r1, #32
   3f780:	mov	r2, r6
   3f784:	bl	14eec <memset@plt>
   3f788:	ldr	r0, [r4, #20]
   3f78c:	ldr	r2, [r4, #44]	; 0x2c
   3f790:	mov	r1, #0
   3f794:	add	r0, r0, r6
   3f798:	str	r0, [r4, #20]
   3f79c:	mov	r0, r4
   3f7a0:	blx	r2
   3f7a4:	ldr	r1, [r4, #16]
   3f7a8:	ldr	r0, [r4, #20]
   3f7ac:	sub	r5, r5, r6
   3f7b0:	sub	r6, r1, r0
   3f7b4:	cmp	r5, r6
   3f7b8:	bhi	3f77c <flatcc_json_printer_int32_vector_field@@Base+0x384>
   3f7bc:	mov	r1, #32
   3f7c0:	mov	r2, r5
   3f7c4:	bl	14eec <memset@plt>
   3f7c8:	ldr	r0, [r4, #20]
   3f7cc:	add	r0, r0, r5
   3f7d0:	str	r0, [r4, #20]
   3f7d4:	add	r1, r0, #1
   3f7d8:	str	r1, [r4, #20]
   3f7dc:	mov	r1, #93	; 0x5d
   3f7e0:	strb	r1, [r0]
   3f7e4:	sub	sp, fp, #28
   3f7e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f7ec <flatcc_json_printer_int64_vector_field@@Base>:
   3f7ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f7f0:	add	fp, sp, #28
   3f7f4:	sub	sp, sp, #4
   3f7f8:	mov	r4, r0
   3f7fc:	mov	r0, #4
   3f800:	add	r0, r0, r2, lsl #1
   3f804:	ldr	r2, [r1, #8]
   3f808:	cmp	r0, r2
   3f80c:	bge	3f82c <flatcc_json_printer_int64_vector_field@@Base+0x40>
   3f810:	ldr	r2, [r1, #4]
   3f814:	add	r0, r2, r0
   3f818:	ldrh	r0, [r0]
   3f81c:	cmp	r0, #0
   3f820:	ldrne	r2, [r1]
   3f824:	addsne	r8, r2, r0
   3f828:	bne	3f834 <flatcc_json_printer_int64_vector_field@@Base+0x48>
   3f82c:	sub	sp, fp, #28
   3f830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f834:	ldr	r0, [r1, #16]
   3f838:	ldr	r2, [fp, #8]
   3f83c:	add	r7, r0, #1
   3f840:	cmp	r0, #0
   3f844:	str	r7, [r1, #16]
   3f848:	beq	3f860 <flatcc_json_printer_int64_vector_field@@Base+0x74>
   3f84c:	ldr	r0, [r4, #20]
   3f850:	add	r1, r0, #1
   3f854:	str	r1, [r4, #20]
   3f858:	mov	r1, #44	; 0x2c
   3f85c:	strb	r1, [r0]
   3f860:	ldr	r0, [r8]
   3f864:	mov	r1, r3
   3f868:	ldr	r7, [r8, r0]!
   3f86c:	mov	r0, r4
   3f870:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3f874:	ldr	r1, [r4, #32]
   3f878:	ldr	r0, [r4, #20]
   3f87c:	cmp	r7, #0
   3f880:	add	r1, r1, #1
   3f884:	str	r1, [r4, #32]
   3f888:	add	r1, r0, #1
   3f88c:	str	r1, [r4, #20]
   3f890:	mov	r1, #91	; 0x5b
   3f894:	strb	r1, [r0]
   3f898:	beq	3fb1c <flatcc_json_printer_int64_vector_field@@Base+0x330>
   3f89c:	ldrb	r0, [r4, #25]
   3f8a0:	ldr	r2, [r4, #20]
   3f8a4:	cmp	r0, #0
   3f8a8:	beq	3f974 <flatcc_json_printer_int64_vector_field@@Base+0x188>
   3f8ac:	add	r0, r2, #1
   3f8b0:	str	r0, [r4, #20]
   3f8b4:	mov	r0, #10
   3f8b8:	strb	r0, [r2]
   3f8bc:	ldr	r0, [r4, #20]
   3f8c0:	ldrb	r2, [r4, #25]
   3f8c4:	ldr	r3, [r4, #32]
   3f8c8:	ldr	r1, [r4, #16]
   3f8cc:	mla	r6, r3, r2, r0
   3f8d0:	mul	r5, r3, r2
   3f8d4:	cmp	r6, r1
   3f8d8:	bls	3f948 <flatcc_json_printer_int64_vector_field@@Base+0x15c>
   3f8dc:	cmp	r0, r1
   3f8e0:	bcc	3f8fc <flatcc_json_printer_int64_vector_field@@Base+0x110>
   3f8e4:	ldr	r2, [r4, #44]	; 0x2c
   3f8e8:	mov	r0, r4
   3f8ec:	mov	r1, #0
   3f8f0:	blx	r2
   3f8f4:	ldr	r1, [r4, #16]
   3f8f8:	ldr	r0, [r4, #20]
   3f8fc:	sub	r6, r1, r0
   3f900:	cmp	r6, r5
   3f904:	bcs	3f948 <flatcc_json_printer_int64_vector_field@@Base+0x15c>
   3f908:	mov	r1, #32
   3f90c:	mov	r2, r6
   3f910:	bl	14eec <memset@plt>
   3f914:	ldr	r0, [r4, #20]
   3f918:	ldr	r2, [r4, #44]	; 0x2c
   3f91c:	mov	r1, #0
   3f920:	add	r0, r0, r6
   3f924:	str	r0, [r4, #20]
   3f928:	mov	r0, r4
   3f92c:	blx	r2
   3f930:	ldr	r1, [r4, #16]
   3f934:	ldr	r0, [r4, #20]
   3f938:	sub	r5, r5, r6
   3f93c:	sub	r6, r1, r0
   3f940:	cmp	r5, r6
   3f944:	bhi	3f908 <flatcc_json_printer_int64_vector_field@@Base+0x11c>
   3f948:	mov	r1, #32
   3f94c:	mov	r2, r5
   3f950:	bl	14eec <memset@plt>
   3f954:	ldr	r0, [r4, #20]
   3f958:	add	r2, r0, r5
   3f95c:	str	r2, [r4, #20]
   3f960:	ldrd	r0, [r8, #4]
   3f964:	lsr	r5, r1, #31
   3f968:	cmn	r1, #1
   3f96c:	bgt	3f9b4 <flatcc_json_printer_int64_vector_field@@Base+0x1c8>
   3f970:	b	3f9a4 <flatcc_json_printer_int64_vector_field@@Base+0x1b8>
   3f974:	ldr	r0, [r4, #16]
   3f978:	cmp	r2, r0
   3f97c:	bcc	3f994 <flatcc_json_printer_int64_vector_field@@Base+0x1a8>
   3f980:	ldr	r2, [r4, #44]	; 0x2c
   3f984:	mov	r0, r4
   3f988:	mov	r1, #0
   3f98c:	blx	r2
   3f990:	ldr	r2, [r4, #20]
   3f994:	ldrd	r0, [r8, #4]
   3f998:	lsr	r5, r1, #31
   3f99c:	cmn	r1, #1
   3f9a0:	bgt	3f9b4 <flatcc_json_printer_int64_vector_field@@Base+0x1c8>
   3f9a4:	mov	r3, #45	; 0x2d
   3f9a8:	rsbs	r0, r0, #0
   3f9ac:	strb	r3, [r2], #1
   3f9b0:	rsc	r1, r1, #0
   3f9b4:	bl	3a5b8 <flatcc_json_printer_uint64@@Base+0x30>
   3f9b8:	ldr	r1, [r4, #20]
   3f9bc:	add	r0, r0, r5
   3f9c0:	subs	r9, r7, #1
   3f9c4:	add	r0, r1, r0
   3f9c8:	str	r0, [r4, #20]
   3f9cc:	beq	3fb1c <flatcc_json_printer_int64_vector_field@@Base+0x330>
   3f9d0:	ldr	r0, [r4, #20]
   3f9d4:	add	r7, r8, #12
   3f9d8:	mov	r8, #44	; 0x2c
   3f9dc:	mov	sl, #10
   3f9e0:	b	3fa04 <flatcc_json_printer_int64_vector_field@@Base+0x218>
   3f9e4:	bl	3a5b8 <flatcc_json_printer_uint64@@Base+0x30>
   3f9e8:	ldr	r1, [r4, #20]
   3f9ec:	add	r0, r0, r5
   3f9f0:	add	r7, r7, #8
   3f9f4:	cmp	r9, #0
   3f9f8:	add	r0, r1, r0
   3f9fc:	str	r0, [r4, #20]
   3fa00:	beq	3fb1c <flatcc_json_printer_int64_vector_field@@Base+0x330>
   3fa04:	add	r1, r0, #1
   3fa08:	str	r1, [r4, #20]
   3fa0c:	strb	r8, [r0]
   3fa10:	ldrb	r0, [r4, #25]
   3fa14:	ldr	r2, [r4, #20]
   3fa18:	cmp	r0, #0
   3fa1c:	beq	3fad4 <flatcc_json_printer_int64_vector_field@@Base+0x2e8>
   3fa20:	add	r0, r2, #1
   3fa24:	str	r0, [r4, #20]
   3fa28:	strb	sl, [r2]
   3fa2c:	ldr	r0, [r4, #20]
   3fa30:	ldrb	r2, [r4, #25]
   3fa34:	ldr	r3, [r4, #32]
   3fa38:	ldr	r1, [r4, #16]
   3fa3c:	mla	r6, r3, r2, r0
   3fa40:	mul	r5, r3, r2
   3fa44:	cmp	r6, r1
   3fa48:	bls	3fab8 <flatcc_json_printer_int64_vector_field@@Base+0x2cc>
   3fa4c:	cmp	r0, r1
   3fa50:	bcc	3fa6c <flatcc_json_printer_int64_vector_field@@Base+0x280>
   3fa54:	ldr	r2, [r4, #44]	; 0x2c
   3fa58:	mov	r0, r4
   3fa5c:	mov	r1, #0
   3fa60:	blx	r2
   3fa64:	ldr	r1, [r4, #16]
   3fa68:	ldr	r0, [r4, #20]
   3fa6c:	sub	r6, r1, r0
   3fa70:	cmp	r6, r5
   3fa74:	bcs	3fab8 <flatcc_json_printer_int64_vector_field@@Base+0x2cc>
   3fa78:	mov	r1, #32
   3fa7c:	mov	r2, r6
   3fa80:	bl	14eec <memset@plt>
   3fa84:	ldr	r0, [r4, #20]
   3fa88:	ldr	r2, [r4, #44]	; 0x2c
   3fa8c:	mov	r1, #0
   3fa90:	add	r0, r0, r6
   3fa94:	str	r0, [r4, #20]
   3fa98:	mov	r0, r4
   3fa9c:	blx	r2
   3faa0:	ldr	r1, [r4, #16]
   3faa4:	ldr	r0, [r4, #20]
   3faa8:	sub	r5, r5, r6
   3faac:	sub	r6, r1, r0
   3fab0:	cmp	r5, r6
   3fab4:	bhi	3fa78 <flatcc_json_printer_int64_vector_field@@Base+0x28c>
   3fab8:	mov	r1, #32
   3fabc:	mov	r2, r5
   3fac0:	bl	14eec <memset@plt>
   3fac4:	ldr	r0, [r4, #20]
   3fac8:	add	r2, r0, r5
   3facc:	str	r2, [r4, #20]
   3fad0:	b	3faf4 <flatcc_json_printer_int64_vector_field@@Base+0x308>
   3fad4:	ldr	r0, [r4, #16]
   3fad8:	cmp	r2, r0
   3fadc:	bcc	3faf4 <flatcc_json_printer_int64_vector_field@@Base+0x308>
   3fae0:	ldr	r2, [r4, #44]	; 0x2c
   3fae4:	mov	r0, r4
   3fae8:	mov	r1, #0
   3faec:	blx	r2
   3faf0:	ldr	r2, [r4, #20]
   3faf4:	ldrd	r0, [r7]
   3faf8:	sub	r9, r9, #1
   3fafc:	lsr	r5, r1, #31
   3fb00:	cmn	r1, #1
   3fb04:	bgt	3f9e4 <flatcc_json_printer_int64_vector_field@@Base+0x1f8>
   3fb08:	mov	r3, #45	; 0x2d
   3fb0c:	rsbs	r0, r0, #0
   3fb10:	strb	r3, [r2], #1
   3fb14:	rsc	r1, r1, #0
   3fb18:	b	3f9e4 <flatcc_json_printer_int64_vector_field@@Base+0x1f8>
   3fb1c:	ldrb	r1, [r4, #25]
   3fb20:	ldr	r0, [r4, #20]
   3fb24:	cmp	r1, #0
   3fb28:	beq	3fbe8 <flatcc_json_printer_int64_vector_field@@Base+0x3fc>
   3fb2c:	add	r1, r0, #1
   3fb30:	str	r1, [r4, #20]
   3fb34:	mov	r1, #10
   3fb38:	strb	r1, [r0]
   3fb3c:	ldr	r0, [r4, #32]
   3fb40:	sub	r2, r0, #1
   3fb44:	str	r2, [r4, #32]
   3fb48:	ldrb	r3, [r4, #25]
   3fb4c:	ldr	r0, [r4, #20]
   3fb50:	ldr	r1, [r4, #16]
   3fb54:	mla	r7, r2, r3, r0
   3fb58:	mul	r5, r2, r3
   3fb5c:	cmp	r7, r1
   3fb60:	bls	3fbd0 <flatcc_json_printer_int64_vector_field@@Base+0x3e4>
   3fb64:	cmp	r0, r1
   3fb68:	bcc	3fb84 <flatcc_json_printer_int64_vector_field@@Base+0x398>
   3fb6c:	ldr	r2, [r4, #44]	; 0x2c
   3fb70:	mov	r0, r4
   3fb74:	mov	r1, #0
   3fb78:	blx	r2
   3fb7c:	ldr	r1, [r4, #16]
   3fb80:	ldr	r0, [r4, #20]
   3fb84:	sub	r6, r1, r0
   3fb88:	cmp	r6, r5
   3fb8c:	bcs	3fbd0 <flatcc_json_printer_int64_vector_field@@Base+0x3e4>
   3fb90:	mov	r1, #32
   3fb94:	mov	r2, r6
   3fb98:	bl	14eec <memset@plt>
   3fb9c:	ldr	r0, [r4, #20]
   3fba0:	ldr	r2, [r4, #44]	; 0x2c
   3fba4:	mov	r1, #0
   3fba8:	add	r0, r0, r6
   3fbac:	str	r0, [r4, #20]
   3fbb0:	mov	r0, r4
   3fbb4:	blx	r2
   3fbb8:	ldr	r1, [r4, #16]
   3fbbc:	ldr	r0, [r4, #20]
   3fbc0:	sub	r5, r5, r6
   3fbc4:	sub	r6, r1, r0
   3fbc8:	cmp	r5, r6
   3fbcc:	bhi	3fb90 <flatcc_json_printer_int64_vector_field@@Base+0x3a4>
   3fbd0:	mov	r1, #32
   3fbd4:	mov	r2, r5
   3fbd8:	bl	14eec <memset@plt>
   3fbdc:	ldr	r0, [r4, #20]
   3fbe0:	add	r0, r0, r5
   3fbe4:	str	r0, [r4, #20]
   3fbe8:	add	r1, r0, #1
   3fbec:	str	r1, [r4, #20]
   3fbf0:	mov	r1, #93	; 0x5d
   3fbf4:	strb	r1, [r0]
   3fbf8:	sub	sp, fp, #28
   3fbfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003fc00 <flatcc_json_printer_bool_vector_field@@Base>:
   3fc00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fc04:	add	fp, sp, #28
   3fc08:	sub	sp, sp, #4
   3fc0c:	mov	r4, r0
   3fc10:	mov	r0, #4
   3fc14:	add	r0, r0, r2, lsl #1
   3fc18:	ldr	r2, [r1, #8]
   3fc1c:	cmp	r0, r2
   3fc20:	bge	3fc40 <flatcc_json_printer_bool_vector_field@@Base+0x40>
   3fc24:	ldr	r2, [r1, #4]
   3fc28:	add	r0, r2, r0
   3fc2c:	ldrh	r0, [r0]
   3fc30:	cmp	r0, #0
   3fc34:	ldrne	r2, [r1]
   3fc38:	addsne	sl, r2, r0
   3fc3c:	bne	3fc48 <flatcc_json_printer_bool_vector_field@@Base+0x48>
   3fc40:	sub	sp, fp, #28
   3fc44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3fc48:	ldr	r0, [r1, #16]
   3fc4c:	ldr	r2, [fp, #8]
   3fc50:	add	r7, r0, #1
   3fc54:	cmp	r0, #0
   3fc58:	str	r7, [r1, #16]
   3fc5c:	beq	3fc74 <flatcc_json_printer_bool_vector_field@@Base+0x74>
   3fc60:	ldr	r0, [r4, #20]
   3fc64:	add	r1, r0, #1
   3fc68:	str	r1, [r4, #20]
   3fc6c:	mov	r1, #44	; 0x2c
   3fc70:	strb	r1, [r0]
   3fc74:	ldr	r0, [sl]
   3fc78:	mov	r1, r3
   3fc7c:	ldr	r9, [sl, r0]!
   3fc80:	mov	r0, r4
   3fc84:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   3fc88:	ldr	r1, [r4, #32]
   3fc8c:	ldr	r0, [r4, #20]
   3fc90:	cmp	r9, #0
   3fc94:	add	r1, r1, #1
   3fc98:	str	r1, [r4, #32]
   3fc9c:	add	r1, r0, #1
   3fca0:	str	r1, [r4, #20]
   3fca4:	mov	r1, #91	; 0x5b
   3fca8:	strb	r1, [r0]
   3fcac:	beq	3ff54 <flatcc_json_printer_bool_vector_field@@Base+0x354>
   3fcb0:	ldrb	r1, [r4, #25]
   3fcb4:	ldr	r0, [r4, #20]
   3fcb8:	cmp	r1, #0
   3fcbc:	beq	3fd78 <flatcc_json_printer_bool_vector_field@@Base+0x178>
   3fcc0:	add	r1, r0, #1
   3fcc4:	str	r1, [r4, #20]
   3fcc8:	mov	r1, #10
   3fccc:	strb	r1, [r0]
   3fcd0:	ldr	r0, [r4, #20]
   3fcd4:	ldrb	r2, [r4, #25]
   3fcd8:	ldr	r3, [r4, #32]
   3fcdc:	ldr	r1, [r4, #16]
   3fce0:	mla	r7, r3, r2, r0
   3fce4:	mul	r5, r3, r2
   3fce8:	cmp	r7, r1
   3fcec:	bls	3fd5c <flatcc_json_printer_bool_vector_field@@Base+0x15c>
   3fcf0:	cmp	r0, r1
   3fcf4:	bcc	3fd10 <flatcc_json_printer_bool_vector_field@@Base+0x110>
   3fcf8:	ldr	r2, [r4, #44]	; 0x2c
   3fcfc:	mov	r0, r4
   3fd00:	mov	r1, #0
   3fd04:	blx	r2
   3fd08:	ldr	r1, [r4, #16]
   3fd0c:	ldr	r0, [r4, #20]
   3fd10:	sub	r6, r1, r0
   3fd14:	cmp	r6, r5
   3fd18:	bcs	3fd5c <flatcc_json_printer_bool_vector_field@@Base+0x15c>
   3fd1c:	mov	r1, #32
   3fd20:	mov	r2, r6
   3fd24:	bl	14eec <memset@plt>
   3fd28:	ldr	r0, [r4, #20]
   3fd2c:	ldr	r2, [r4, #44]	; 0x2c
   3fd30:	mov	r1, #0
   3fd34:	add	r0, r0, r6
   3fd38:	str	r0, [r4, #20]
   3fd3c:	mov	r0, r4
   3fd40:	blx	r2
   3fd44:	ldr	r1, [r4, #16]
   3fd48:	ldr	r0, [r4, #20]
   3fd4c:	sub	r5, r5, r6
   3fd50:	sub	r6, r1, r0
   3fd54:	cmp	r5, r6
   3fd58:	bhi	3fd1c <flatcc_json_printer_bool_vector_field@@Base+0x11c>
   3fd5c:	mov	r1, #32
   3fd60:	mov	r2, r5
   3fd64:	bl	14eec <memset@plt>
   3fd68:	ldr	r0, [r4, #20]
   3fd6c:	add	r0, r0, r5
   3fd70:	str	r0, [r4, #20]
   3fd74:	b	3fd98 <flatcc_json_printer_bool_vector_field@@Base+0x198>
   3fd78:	ldr	r1, [r4, #16]
   3fd7c:	cmp	r0, r1
   3fd80:	bcc	3fd98 <flatcc_json_printer_bool_vector_field@@Base+0x198>
   3fd84:	ldr	r2, [r4, #44]	; 0x2c
   3fd88:	mov	r0, r4
   3fd8c:	mov	r1, #0
   3fd90:	blx	r2
   3fd94:	ldr	r0, [r4, #20]
   3fd98:	ldrb	r1, [sl, #4]
   3fd9c:	movw	r8, #29300	; 0x7274
   3fda0:	movt	r8, #25973	; 0x6575
   3fda4:	cmp	r1, #0
   3fda8:	beq	3fdc0 <flatcc_json_printer_bool_vector_field@@Base+0x1c0>
   3fdac:	mov	r1, #0
   3fdb0:	str	r8, [r0]
   3fdb4:	strb	r1, [r0, #4]
   3fdb8:	mov	r0, #4
   3fdbc:	b	3fdd8 <flatcc_json_printer_bool_vector_field@@Base+0x1d8>
   3fdc0:	mov	r1, #101	; 0x65
   3fdc4:	strh	r1, [r0, #4]
   3fdc8:	movw	r1, #24934	; 0x6166
   3fdcc:	movt	r1, #29548	; 0x736c
   3fdd0:	str	r1, [r0]
   3fdd4:	mov	r0, #5
   3fdd8:	ldr	r1, [r4, #20]
   3fddc:	subs	r9, r9, #1
   3fde0:	add	r0, r1, r0
   3fde4:	str	r0, [r4, #20]
   3fde8:	beq	3ff54 <flatcc_json_printer_bool_vector_field@@Base+0x354>
   3fdec:	ldr	r0, [r4, #20]
   3fdf0:	add	r7, sl, #5
   3fdf4:	mov	sl, #44	; 0x2c
   3fdf8:	b	3fe2c <flatcc_json_printer_bool_vector_field@@Base+0x22c>
   3fdfc:	mov	r1, #101	; 0x65
   3fe00:	strh	r1, [r0, #4]
   3fe04:	movw	r1, #24934	; 0x6166
   3fe08:	movt	r1, #29548	; 0x736c
   3fe0c:	str	r1, [r0]
   3fe10:	mov	r0, #5
   3fe14:	ldr	r1, [r4, #20]
   3fe18:	add	r7, r7, #1
   3fe1c:	cmp	r9, #0
   3fe20:	add	r0, r1, r0
   3fe24:	str	r0, [r4, #20]
   3fe28:	beq	3ff54 <flatcc_json_printer_bool_vector_field@@Base+0x354>
   3fe2c:	add	r1, r0, #1
   3fe30:	str	r1, [r4, #20]
   3fe34:	strb	sl, [r0]
   3fe38:	ldrb	r1, [r4, #25]
   3fe3c:	ldr	r0, [r4, #20]
   3fe40:	cmp	r1, #0
   3fe44:	beq	3ff10 <flatcc_json_printer_bool_vector_field@@Base+0x310>
   3fe48:	add	r1, r0, #1
   3fe4c:	str	r1, [r4, #20]
   3fe50:	mov	r1, #10
   3fe54:	strb	r1, [r0]
   3fe58:	ldr	r0, [r4, #20]
   3fe5c:	ldrb	r2, [r4, #25]
   3fe60:	ldr	r3, [r4, #32]
   3fe64:	ldr	r1, [r4, #16]
   3fe68:	mla	r6, r3, r2, r0
   3fe6c:	mul	r5, r3, r2
   3fe70:	cmp	r6, r1
   3fe74:	bls	3fee4 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   3fe78:	cmp	r0, r1
   3fe7c:	bcc	3fe98 <flatcc_json_printer_bool_vector_field@@Base+0x298>
   3fe80:	ldr	r2, [r4, #44]	; 0x2c
   3fe84:	mov	r0, r4
   3fe88:	mov	r1, #0
   3fe8c:	blx	r2
   3fe90:	ldr	r1, [r4, #16]
   3fe94:	ldr	r0, [r4, #20]
   3fe98:	sub	r6, r1, r0
   3fe9c:	cmp	r6, r5
   3fea0:	bcs	3fee4 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   3fea4:	mov	r1, #32
   3fea8:	mov	r2, r6
   3feac:	bl	14eec <memset@plt>
   3feb0:	ldr	r0, [r4, #20]
   3feb4:	ldr	r2, [r4, #44]	; 0x2c
   3feb8:	mov	r1, #0
   3febc:	add	r0, r0, r6
   3fec0:	str	r0, [r4, #20]
   3fec4:	mov	r0, r4
   3fec8:	blx	r2
   3fecc:	ldr	r1, [r4, #16]
   3fed0:	ldr	r0, [r4, #20]
   3fed4:	sub	r5, r5, r6
   3fed8:	sub	r6, r1, r0
   3fedc:	cmp	r5, r6
   3fee0:	bhi	3fea4 <flatcc_json_printer_bool_vector_field@@Base+0x2a4>
   3fee4:	mov	r1, #32
   3fee8:	mov	r2, r5
   3feec:	bl	14eec <memset@plt>
   3fef0:	ldr	r0, [r4, #20]
   3fef4:	add	r0, r0, r5
   3fef8:	str	r0, [r4, #20]
   3fefc:	ldrb	r1, [r7]
   3ff00:	sub	r9, r9, #1
   3ff04:	cmp	r1, #0
   3ff08:	bne	3ff40 <flatcc_json_printer_bool_vector_field@@Base+0x340>
   3ff0c:	b	3fdfc <flatcc_json_printer_bool_vector_field@@Base+0x1fc>
   3ff10:	ldr	r1, [r4, #16]
   3ff14:	cmp	r0, r1
   3ff18:	bcc	3ff30 <flatcc_json_printer_bool_vector_field@@Base+0x330>
   3ff1c:	ldr	r2, [r4, #44]	; 0x2c
   3ff20:	mov	r0, r4
   3ff24:	mov	r1, #0
   3ff28:	blx	r2
   3ff2c:	ldr	r0, [r4, #20]
   3ff30:	ldrb	r1, [r7]
   3ff34:	sub	r9, r9, #1
   3ff38:	cmp	r1, #0
   3ff3c:	beq	3fdfc <flatcc_json_printer_bool_vector_field@@Base+0x1fc>
   3ff40:	mov	r1, #0
   3ff44:	str	r8, [r0]
   3ff48:	strb	r1, [r0, #4]
   3ff4c:	mov	r0, #4
   3ff50:	b	3fe14 <flatcc_json_printer_bool_vector_field@@Base+0x214>
   3ff54:	ldrb	r1, [r4, #25]
   3ff58:	ldr	r0, [r4, #20]
   3ff5c:	cmp	r1, #0
   3ff60:	beq	40020 <flatcc_json_printer_bool_vector_field@@Base+0x420>
   3ff64:	add	r1, r0, #1
   3ff68:	str	r1, [r4, #20]
   3ff6c:	mov	r1, #10
   3ff70:	strb	r1, [r0]
   3ff74:	ldr	r0, [r4, #32]
   3ff78:	sub	r2, r0, #1
   3ff7c:	str	r2, [r4, #32]
   3ff80:	ldrb	r3, [r4, #25]
   3ff84:	ldr	r0, [r4, #20]
   3ff88:	ldr	r1, [r4, #16]
   3ff8c:	mla	r7, r2, r3, r0
   3ff90:	mul	r5, r2, r3
   3ff94:	cmp	r7, r1
   3ff98:	bls	40008 <flatcc_json_printer_bool_vector_field@@Base+0x408>
   3ff9c:	cmp	r0, r1
   3ffa0:	bcc	3ffbc <flatcc_json_printer_bool_vector_field@@Base+0x3bc>
   3ffa4:	ldr	r2, [r4, #44]	; 0x2c
   3ffa8:	mov	r0, r4
   3ffac:	mov	r1, #0
   3ffb0:	blx	r2
   3ffb4:	ldr	r1, [r4, #16]
   3ffb8:	ldr	r0, [r4, #20]
   3ffbc:	sub	r6, r1, r0
   3ffc0:	cmp	r6, r5
   3ffc4:	bcs	40008 <flatcc_json_printer_bool_vector_field@@Base+0x408>
   3ffc8:	mov	r1, #32
   3ffcc:	mov	r2, r6
   3ffd0:	bl	14eec <memset@plt>
   3ffd4:	ldr	r0, [r4, #20]
   3ffd8:	ldr	r2, [r4, #44]	; 0x2c
   3ffdc:	mov	r1, #0
   3ffe0:	add	r0, r0, r6
   3ffe4:	str	r0, [r4, #20]
   3ffe8:	mov	r0, r4
   3ffec:	blx	r2
   3fff0:	ldr	r1, [r4, #16]
   3fff4:	ldr	r0, [r4, #20]
   3fff8:	sub	r5, r5, r6
   3fffc:	sub	r6, r1, r0
   40000:	cmp	r5, r6
   40004:	bhi	3ffc8 <flatcc_json_printer_bool_vector_field@@Base+0x3c8>
   40008:	mov	r1, #32
   4000c:	mov	r2, r5
   40010:	bl	14eec <memset@plt>
   40014:	ldr	r0, [r4, #20]
   40018:	add	r0, r0, r5
   4001c:	str	r0, [r4, #20]
   40020:	add	r1, r0, #1
   40024:	str	r1, [r4, #20]
   40028:	mov	r1, #93	; 0x5d
   4002c:	strb	r1, [r0]
   40030:	sub	sp, fp, #28
   40034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040038 <flatcc_json_printer_float_vector_field@@Base>:
   40038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4003c:	add	fp, sp, #28
   40040:	sub	sp, sp, #4
   40044:	mov	r4, r0
   40048:	mov	r0, #4
   4004c:	add	r0, r0, r2, lsl #1
   40050:	ldr	r2, [r1, #8]
   40054:	cmp	r0, r2
   40058:	bge	40078 <flatcc_json_printer_float_vector_field@@Base+0x40>
   4005c:	ldr	r2, [r1, #4]
   40060:	add	r0, r2, r0
   40064:	ldrh	r0, [r0]
   40068:	cmp	r0, #0
   4006c:	ldrne	r2, [r1]
   40070:	addsne	r8, r2, r0
   40074:	bne	40080 <flatcc_json_printer_float_vector_field@@Base+0x48>
   40078:	sub	sp, fp, #28
   4007c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40080:	ldr	r0, [r1, #16]
   40084:	ldr	r2, [fp, #8]
   40088:	add	r7, r0, #1
   4008c:	cmp	r0, #0
   40090:	str	r7, [r1, #16]
   40094:	beq	400ac <flatcc_json_printer_float_vector_field@@Base+0x74>
   40098:	ldr	r0, [r4, #20]
   4009c:	add	r1, r0, #1
   400a0:	str	r1, [r4, #20]
   400a4:	mov	r1, #44	; 0x2c
   400a8:	strb	r1, [r0]
   400ac:	ldr	r0, [r8]
   400b0:	mov	r1, r3
   400b4:	ldr	r7, [r8, r0]!
   400b8:	mov	r0, r4
   400bc:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   400c0:	ldr	r1, [r4, #32]
   400c4:	ldr	r0, [r4, #20]
   400c8:	cmp	r7, #0
   400cc:	add	r1, r1, #1
   400d0:	str	r1, [r4, #32]
   400d4:	add	r1, r0, #1
   400d8:	str	r1, [r4, #20]
   400dc:	mov	r1, #91	; 0x5b
   400e0:	strb	r1, [r0]
   400e4:	beq	40320 <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   400e8:	ldrb	r1, [r4, #25]
   400ec:	ldr	r0, [r4, #20]
   400f0:	cmp	r1, #0
   400f4:	beq	401b0 <flatcc_json_printer_float_vector_field@@Base+0x178>
   400f8:	add	r1, r0, #1
   400fc:	str	r1, [r4, #20]
   40100:	mov	r1, #10
   40104:	strb	r1, [r0]
   40108:	ldr	r0, [r4, #20]
   4010c:	ldrb	r2, [r4, #25]
   40110:	ldr	r3, [r4, #32]
   40114:	ldr	r1, [r4, #16]
   40118:	mla	r6, r3, r2, r0
   4011c:	mul	r5, r3, r2
   40120:	cmp	r6, r1
   40124:	bls	40194 <flatcc_json_printer_float_vector_field@@Base+0x15c>
   40128:	cmp	r0, r1
   4012c:	bcc	40148 <flatcc_json_printer_float_vector_field@@Base+0x110>
   40130:	ldr	r2, [r4, #44]	; 0x2c
   40134:	mov	r0, r4
   40138:	mov	r1, #0
   4013c:	blx	r2
   40140:	ldr	r1, [r4, #16]
   40144:	ldr	r0, [r4, #20]
   40148:	sub	r6, r1, r0
   4014c:	cmp	r6, r5
   40150:	bcs	40194 <flatcc_json_printer_float_vector_field@@Base+0x15c>
   40154:	mov	r1, #32
   40158:	mov	r2, r6
   4015c:	bl	14eec <memset@plt>
   40160:	ldr	r0, [r4, #20]
   40164:	ldr	r2, [r4, #44]	; 0x2c
   40168:	mov	r1, #0
   4016c:	add	r0, r0, r6
   40170:	str	r0, [r4, #20]
   40174:	mov	r0, r4
   40178:	blx	r2
   4017c:	ldr	r1, [r4, #16]
   40180:	ldr	r0, [r4, #20]
   40184:	sub	r5, r5, r6
   40188:	sub	r6, r1, r0
   4018c:	cmp	r5, r6
   40190:	bhi	40154 <flatcc_json_printer_float_vector_field@@Base+0x11c>
   40194:	mov	r1, #32
   40198:	mov	r2, r5
   4019c:	bl	14eec <memset@plt>
   401a0:	ldr	r0, [r4, #20]
   401a4:	add	r0, r0, r5
   401a8:	str	r0, [r4, #20]
   401ac:	b	401d0 <flatcc_json_printer_float_vector_field@@Base+0x198>
   401b0:	ldr	r1, [r4, #16]
   401b4:	cmp	r0, r1
   401b8:	bcc	401d0 <flatcc_json_printer_float_vector_field@@Base+0x198>
   401bc:	ldr	r2, [r4, #44]	; 0x2c
   401c0:	mov	r0, r4
   401c4:	mov	r1, #0
   401c8:	blx	r2
   401cc:	ldr	r0, [r4, #20]
   401d0:	vldr	s0, [r8, #4]
   401d4:	vcvt.f64.f32	d0, s0
   401d8:	bl	38b88 <flatcc_json_printer_fmt_float@@Base+0x8>
   401dc:	ldr	r1, [r4, #20]
   401e0:	subs	r9, r7, #1
   401e4:	add	r0, r1, r0
   401e8:	str	r0, [r4, #20]
   401ec:	beq	40320 <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   401f0:	ldr	r0, [r4, #20]
   401f4:	add	r7, r8, #8
   401f8:	mov	r8, #44	; 0x2c
   401fc:	mov	sl, #10
   40200:	b	40240 <flatcc_json_printer_float_vector_field@@Base+0x208>
   40204:	mov	r1, #32
   40208:	mov	r2, r5
   4020c:	bl	14eec <memset@plt>
   40210:	ldr	r0, [r4, #20]
   40214:	add	r0, r0, r5
   40218:	str	r0, [r4, #20]
   4021c:	vldr	s0, [r7]
   40220:	vcvt.f64.f32	d0, s0
   40224:	bl	38b88 <flatcc_json_printer_fmt_float@@Base+0x8>
   40228:	ldr	r1, [r4, #20]
   4022c:	add	r7, r7, #4
   40230:	cmp	r9, #0
   40234:	add	r0, r1, r0
   40238:	str	r0, [r4, #20]
   4023c:	beq	40320 <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   40240:	add	r1, r0, #1
   40244:	sub	r9, r9, #1
   40248:	str	r1, [r4, #20]
   4024c:	strb	r8, [r0]
   40250:	ldrb	r1, [r4, #25]
   40254:	ldr	r0, [r4, #20]
   40258:	cmp	r1, #0
   4025c:	beq	402fc <flatcc_json_printer_float_vector_field@@Base+0x2c4>
   40260:	add	r1, r0, #1
   40264:	str	r1, [r4, #20]
   40268:	strb	sl, [r0]
   4026c:	ldr	r0, [r4, #20]
   40270:	ldrb	r2, [r4, #25]
   40274:	ldr	r3, [r4, #32]
   40278:	ldr	r1, [r4, #16]
   4027c:	mla	r6, r3, r2, r0
   40280:	mul	r5, r3, r2
   40284:	cmp	r6, r1
   40288:	bls	40204 <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   4028c:	cmp	r0, r1
   40290:	bcc	402ac <flatcc_json_printer_float_vector_field@@Base+0x274>
   40294:	ldr	r2, [r4, #44]	; 0x2c
   40298:	mov	r0, r4
   4029c:	mov	r1, #0
   402a0:	blx	r2
   402a4:	ldr	r1, [r4, #16]
   402a8:	ldr	r0, [r4, #20]
   402ac:	sub	r6, r1, r0
   402b0:	cmp	r6, r5
   402b4:	bcs	40204 <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   402b8:	mov	r1, #32
   402bc:	mov	r2, r6
   402c0:	bl	14eec <memset@plt>
   402c4:	ldr	r0, [r4, #20]
   402c8:	ldr	r2, [r4, #44]	; 0x2c
   402cc:	mov	r1, #0
   402d0:	add	r0, r0, r6
   402d4:	str	r0, [r4, #20]
   402d8:	mov	r0, r4
   402dc:	blx	r2
   402e0:	ldr	r1, [r4, #16]
   402e4:	ldr	r0, [r4, #20]
   402e8:	sub	r5, r5, r6
   402ec:	sub	r6, r1, r0
   402f0:	cmp	r5, r6
   402f4:	bhi	402b8 <flatcc_json_printer_float_vector_field@@Base+0x280>
   402f8:	b	40204 <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   402fc:	ldr	r1, [r4, #16]
   40300:	cmp	r0, r1
   40304:	bcc	4021c <flatcc_json_printer_float_vector_field@@Base+0x1e4>
   40308:	ldr	r2, [r4, #44]	; 0x2c
   4030c:	mov	r0, r4
   40310:	mov	r1, #0
   40314:	blx	r2
   40318:	ldr	r0, [r4, #20]
   4031c:	b	4021c <flatcc_json_printer_float_vector_field@@Base+0x1e4>
   40320:	ldrb	r1, [r4, #25]
   40324:	ldr	r0, [r4, #20]
   40328:	cmp	r1, #0
   4032c:	beq	403ec <flatcc_json_printer_float_vector_field@@Base+0x3b4>
   40330:	add	r1, r0, #1
   40334:	str	r1, [r4, #20]
   40338:	mov	r1, #10
   4033c:	strb	r1, [r0]
   40340:	ldr	r0, [r4, #32]
   40344:	sub	r2, r0, #1
   40348:	str	r2, [r4, #32]
   4034c:	ldrb	r3, [r4, #25]
   40350:	ldr	r0, [r4, #20]
   40354:	ldr	r1, [r4, #16]
   40358:	mla	r7, r2, r3, r0
   4035c:	mul	r5, r2, r3
   40360:	cmp	r7, r1
   40364:	bls	403d4 <flatcc_json_printer_float_vector_field@@Base+0x39c>
   40368:	cmp	r0, r1
   4036c:	bcc	40388 <flatcc_json_printer_float_vector_field@@Base+0x350>
   40370:	ldr	r2, [r4, #44]	; 0x2c
   40374:	mov	r0, r4
   40378:	mov	r1, #0
   4037c:	blx	r2
   40380:	ldr	r1, [r4, #16]
   40384:	ldr	r0, [r4, #20]
   40388:	sub	r6, r1, r0
   4038c:	cmp	r6, r5
   40390:	bcs	403d4 <flatcc_json_printer_float_vector_field@@Base+0x39c>
   40394:	mov	r1, #32
   40398:	mov	r2, r6
   4039c:	bl	14eec <memset@plt>
   403a0:	ldr	r0, [r4, #20]
   403a4:	ldr	r2, [r4, #44]	; 0x2c
   403a8:	mov	r1, #0
   403ac:	add	r0, r0, r6
   403b0:	str	r0, [r4, #20]
   403b4:	mov	r0, r4
   403b8:	blx	r2
   403bc:	ldr	r1, [r4, #16]
   403c0:	ldr	r0, [r4, #20]
   403c4:	sub	r5, r5, r6
   403c8:	sub	r6, r1, r0
   403cc:	cmp	r5, r6
   403d0:	bhi	40394 <flatcc_json_printer_float_vector_field@@Base+0x35c>
   403d4:	mov	r1, #32
   403d8:	mov	r2, r5
   403dc:	bl	14eec <memset@plt>
   403e0:	ldr	r0, [r4, #20]
   403e4:	add	r0, r0, r5
   403e8:	str	r0, [r4, #20]
   403ec:	add	r1, r0, #1
   403f0:	str	r1, [r4, #20]
   403f4:	mov	r1, #93	; 0x5d
   403f8:	strb	r1, [r0]
   403fc:	sub	sp, fp, #28
   40400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040404 <flatcc_json_printer_double_vector_field@@Base>:
   40404:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40408:	add	fp, sp, #28
   4040c:	sub	sp, sp, #4
   40410:	mov	r4, r0
   40414:	mov	r0, #4
   40418:	add	r0, r0, r2, lsl #1
   4041c:	ldr	r2, [r1, #8]
   40420:	cmp	r0, r2
   40424:	bge	40444 <flatcc_json_printer_double_vector_field@@Base+0x40>
   40428:	ldr	r2, [r1, #4]
   4042c:	add	r0, r2, r0
   40430:	ldrh	r0, [r0]
   40434:	cmp	r0, #0
   40438:	ldrne	r2, [r1]
   4043c:	addsne	r8, r2, r0
   40440:	bne	4044c <flatcc_json_printer_double_vector_field@@Base+0x48>
   40444:	sub	sp, fp, #28
   40448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4044c:	ldr	r0, [r1, #16]
   40450:	ldr	r2, [fp, #8]
   40454:	add	r7, r0, #1
   40458:	cmp	r0, #0
   4045c:	str	r7, [r1, #16]
   40460:	beq	40478 <flatcc_json_printer_double_vector_field@@Base+0x74>
   40464:	ldr	r0, [r4, #20]
   40468:	add	r1, r0, #1
   4046c:	str	r1, [r4, #20]
   40470:	mov	r1, #44	; 0x2c
   40474:	strb	r1, [r0]
   40478:	ldr	r0, [r8]
   4047c:	mov	r1, r3
   40480:	ldr	r7, [r8, r0]!
   40484:	mov	r0, r4
   40488:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   4048c:	ldr	r1, [r4, #32]
   40490:	ldr	r0, [r4, #20]
   40494:	cmp	r7, #0
   40498:	add	r1, r1, #1
   4049c:	str	r1, [r4, #32]
   404a0:	add	r1, r0, #1
   404a4:	str	r1, [r4, #20]
   404a8:	mov	r1, #91	; 0x5b
   404ac:	strb	r1, [r0]
   404b0:	beq	406e4 <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   404b4:	ldrb	r1, [r4, #25]
   404b8:	ldr	r0, [r4, #20]
   404bc:	cmp	r1, #0
   404c0:	beq	4057c <flatcc_json_printer_double_vector_field@@Base+0x178>
   404c4:	add	r1, r0, #1
   404c8:	str	r1, [r4, #20]
   404cc:	mov	r1, #10
   404d0:	strb	r1, [r0]
   404d4:	ldr	r0, [r4, #20]
   404d8:	ldrb	r2, [r4, #25]
   404dc:	ldr	r3, [r4, #32]
   404e0:	ldr	r1, [r4, #16]
   404e4:	mla	r6, r3, r2, r0
   404e8:	mul	r5, r3, r2
   404ec:	cmp	r6, r1
   404f0:	bls	40560 <flatcc_json_printer_double_vector_field@@Base+0x15c>
   404f4:	cmp	r0, r1
   404f8:	bcc	40514 <flatcc_json_printer_double_vector_field@@Base+0x110>
   404fc:	ldr	r2, [r4, #44]	; 0x2c
   40500:	mov	r0, r4
   40504:	mov	r1, #0
   40508:	blx	r2
   4050c:	ldr	r1, [r4, #16]
   40510:	ldr	r0, [r4, #20]
   40514:	sub	r6, r1, r0
   40518:	cmp	r6, r5
   4051c:	bcs	40560 <flatcc_json_printer_double_vector_field@@Base+0x15c>
   40520:	mov	r1, #32
   40524:	mov	r2, r6
   40528:	bl	14eec <memset@plt>
   4052c:	ldr	r0, [r4, #20]
   40530:	ldr	r2, [r4, #44]	; 0x2c
   40534:	mov	r1, #0
   40538:	add	r0, r0, r6
   4053c:	str	r0, [r4, #20]
   40540:	mov	r0, r4
   40544:	blx	r2
   40548:	ldr	r1, [r4, #16]
   4054c:	ldr	r0, [r4, #20]
   40550:	sub	r5, r5, r6
   40554:	sub	r6, r1, r0
   40558:	cmp	r5, r6
   4055c:	bhi	40520 <flatcc_json_printer_double_vector_field@@Base+0x11c>
   40560:	mov	r1, #32
   40564:	mov	r2, r5
   40568:	bl	14eec <memset@plt>
   4056c:	ldr	r0, [r4, #20]
   40570:	add	r0, r0, r5
   40574:	str	r0, [r4, #20]
   40578:	b	4059c <flatcc_json_printer_double_vector_field@@Base+0x198>
   4057c:	ldr	r1, [r4, #16]
   40580:	cmp	r0, r1
   40584:	bcc	4059c <flatcc_json_printer_double_vector_field@@Base+0x198>
   40588:	ldr	r2, [r4, #44]	; 0x2c
   4058c:	mov	r0, r4
   40590:	mov	r1, #0
   40594:	blx	r2
   40598:	ldr	r0, [r4, #20]
   4059c:	vldr	d0, [r8, #4]
   405a0:	bl	38b88 <flatcc_json_printer_fmt_float@@Base+0x8>
   405a4:	ldr	r1, [r4, #20]
   405a8:	subs	r9, r7, #1
   405ac:	add	r0, r1, r0
   405b0:	str	r0, [r4, #20]
   405b4:	beq	406e4 <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   405b8:	ldr	r0, [r4, #20]
   405bc:	add	r7, r8, #12
   405c0:	mov	r8, #44	; 0x2c
   405c4:	mov	sl, #10
   405c8:	b	40604 <flatcc_json_printer_double_vector_field@@Base+0x200>
   405cc:	mov	r1, #32
   405d0:	mov	r2, r5
   405d4:	bl	14eec <memset@plt>
   405d8:	ldr	r0, [r4, #20]
   405dc:	add	r0, r0, r5
   405e0:	str	r0, [r4, #20]
   405e4:	vldr	d0, [r7]
   405e8:	bl	38b88 <flatcc_json_printer_fmt_float@@Base+0x8>
   405ec:	ldr	r1, [r4, #20]
   405f0:	add	r7, r7, #8
   405f4:	cmp	r9, #0
   405f8:	add	r0, r1, r0
   405fc:	str	r0, [r4, #20]
   40600:	beq	406e4 <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   40604:	add	r1, r0, #1
   40608:	sub	r9, r9, #1
   4060c:	str	r1, [r4, #20]
   40610:	strb	r8, [r0]
   40614:	ldrb	r1, [r4, #25]
   40618:	ldr	r0, [r4, #20]
   4061c:	cmp	r1, #0
   40620:	beq	406c0 <flatcc_json_printer_double_vector_field@@Base+0x2bc>
   40624:	add	r1, r0, #1
   40628:	str	r1, [r4, #20]
   4062c:	strb	sl, [r0]
   40630:	ldr	r0, [r4, #20]
   40634:	ldrb	r2, [r4, #25]
   40638:	ldr	r3, [r4, #32]
   4063c:	ldr	r1, [r4, #16]
   40640:	mla	r6, r3, r2, r0
   40644:	mul	r5, r3, r2
   40648:	cmp	r6, r1
   4064c:	bls	405cc <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   40650:	cmp	r0, r1
   40654:	bcc	40670 <flatcc_json_printer_double_vector_field@@Base+0x26c>
   40658:	ldr	r2, [r4, #44]	; 0x2c
   4065c:	mov	r0, r4
   40660:	mov	r1, #0
   40664:	blx	r2
   40668:	ldr	r1, [r4, #16]
   4066c:	ldr	r0, [r4, #20]
   40670:	sub	r6, r1, r0
   40674:	cmp	r6, r5
   40678:	bcs	405cc <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   4067c:	mov	r1, #32
   40680:	mov	r2, r6
   40684:	bl	14eec <memset@plt>
   40688:	ldr	r0, [r4, #20]
   4068c:	ldr	r2, [r4, #44]	; 0x2c
   40690:	mov	r1, #0
   40694:	add	r0, r0, r6
   40698:	str	r0, [r4, #20]
   4069c:	mov	r0, r4
   406a0:	blx	r2
   406a4:	ldr	r1, [r4, #16]
   406a8:	ldr	r0, [r4, #20]
   406ac:	sub	r5, r5, r6
   406b0:	sub	r6, r1, r0
   406b4:	cmp	r5, r6
   406b8:	bhi	4067c <flatcc_json_printer_double_vector_field@@Base+0x278>
   406bc:	b	405cc <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   406c0:	ldr	r1, [r4, #16]
   406c4:	cmp	r0, r1
   406c8:	bcc	405e4 <flatcc_json_printer_double_vector_field@@Base+0x1e0>
   406cc:	ldr	r2, [r4, #44]	; 0x2c
   406d0:	mov	r0, r4
   406d4:	mov	r1, #0
   406d8:	blx	r2
   406dc:	ldr	r0, [r4, #20]
   406e0:	b	405e4 <flatcc_json_printer_double_vector_field@@Base+0x1e0>
   406e4:	ldrb	r1, [r4, #25]
   406e8:	ldr	r0, [r4, #20]
   406ec:	cmp	r1, #0
   406f0:	beq	407b0 <flatcc_json_printer_double_vector_field@@Base+0x3ac>
   406f4:	add	r1, r0, #1
   406f8:	str	r1, [r4, #20]
   406fc:	mov	r1, #10
   40700:	strb	r1, [r0]
   40704:	ldr	r0, [r4, #32]
   40708:	sub	r2, r0, #1
   4070c:	str	r2, [r4, #32]
   40710:	ldrb	r3, [r4, #25]
   40714:	ldr	r0, [r4, #20]
   40718:	ldr	r1, [r4, #16]
   4071c:	mla	r7, r2, r3, r0
   40720:	mul	r5, r2, r3
   40724:	cmp	r7, r1
   40728:	bls	40798 <flatcc_json_printer_double_vector_field@@Base+0x394>
   4072c:	cmp	r0, r1
   40730:	bcc	4074c <flatcc_json_printer_double_vector_field@@Base+0x348>
   40734:	ldr	r2, [r4, #44]	; 0x2c
   40738:	mov	r0, r4
   4073c:	mov	r1, #0
   40740:	blx	r2
   40744:	ldr	r1, [r4, #16]
   40748:	ldr	r0, [r4, #20]
   4074c:	sub	r6, r1, r0
   40750:	cmp	r6, r5
   40754:	bcs	40798 <flatcc_json_printer_double_vector_field@@Base+0x394>
   40758:	mov	r1, #32
   4075c:	mov	r2, r6
   40760:	bl	14eec <memset@plt>
   40764:	ldr	r0, [r4, #20]
   40768:	ldr	r2, [r4, #44]	; 0x2c
   4076c:	mov	r1, #0
   40770:	add	r0, r0, r6
   40774:	str	r0, [r4, #20]
   40778:	mov	r0, r4
   4077c:	blx	r2
   40780:	ldr	r1, [r4, #16]
   40784:	ldr	r0, [r4, #20]
   40788:	sub	r5, r5, r6
   4078c:	sub	r6, r1, r0
   40790:	cmp	r5, r6
   40794:	bhi	40758 <flatcc_json_printer_double_vector_field@@Base+0x354>
   40798:	mov	r1, #32
   4079c:	mov	r2, r5
   407a0:	bl	14eec <memset@plt>
   407a4:	ldr	r0, [r4, #20]
   407a8:	add	r0, r0, r5
   407ac:	str	r0, [r4, #20]
   407b0:	add	r1, r0, #1
   407b4:	str	r1, [r4, #20]
   407b8:	mov	r1, #93	; 0x5d
   407bc:	strb	r1, [r0]
   407c0:	sub	sp, fp, #28
   407c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000407c8 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   407c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   407cc:	add	fp, sp, #28
   407d0:	sub	sp, sp, #4
   407d4:	mov	r4, r0
   407d8:	ldrb	r0, [r0, #27]
   407dc:	cmp	r0, #0
   407e0:	beq	407f4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   407e4:	mov	r0, r4
   407e8:	sub	sp, fp, #28
   407ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   407f0:	b	3d528 <flatcc_json_printer_utype_vector_field@@Base>
   407f4:	mov	r0, #4
   407f8:	add	r0, r0, r2, lsl #1
   407fc:	ldr	r2, [r1, #8]
   40800:	cmp	r0, r2
   40804:	bge	40824 <flatcc_json_printer_utype_enum_vector_field@@Base+0x5c>
   40808:	ldr	r2, [r1, #4]
   4080c:	add	r0, r2, r0
   40810:	ldrh	r0, [r0]
   40814:	cmp	r0, #0
   40818:	ldrne	r2, [r1]
   4081c:	addsne	r8, r2, r0
   40820:	bne	4082c <flatcc_json_printer_utype_enum_vector_field@@Base+0x64>
   40824:	sub	sp, fp, #28
   40828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4082c:	ldr	r0, [r1, #16]
   40830:	ldr	sl, [fp, #12]
   40834:	ldr	r2, [fp, #8]
   40838:	add	r7, r0, #1
   4083c:	cmp	r0, #0
   40840:	str	r7, [r1, #16]
   40844:	beq	4085c <flatcc_json_printer_utype_enum_vector_field@@Base+0x94>
   40848:	ldr	r0, [r4, #20]
   4084c:	add	r1, r0, #1
   40850:	str	r1, [r4, #20]
   40854:	mov	r1, #44	; 0x2c
   40858:	strb	r1, [r0]
   4085c:	ldr	r0, [r8]
   40860:	mov	r1, r3
   40864:	ldr	r9, [r8, r0]!
   40868:	mov	r0, r4
   4086c:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   40870:	ldr	r1, [r4, #32]
   40874:	ldr	r0, [r4, #20]
   40878:	cmp	r9, #0
   4087c:	add	r1, r1, #1
   40880:	str	r1, [r4, #32]
   40884:	add	r1, r0, #1
   40888:	str	r1, [r4, #20]
   4088c:	mov	r1, #91	; 0x5b
   40890:	strb	r1, [r0]
   40894:	beq	40aac <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   40898:	ldrb	r1, [r4, #25]
   4089c:	ldr	r0, [r4, #20]
   408a0:	cmp	r1, #0
   408a4:	beq	40960 <flatcc_json_printer_utype_enum_vector_field@@Base+0x198>
   408a8:	add	r1, r0, #1
   408ac:	str	r1, [r4, #20]
   408b0:	mov	r1, #10
   408b4:	strb	r1, [r0]
   408b8:	ldr	r0, [r4, #20]
   408bc:	ldrb	r2, [r4, #25]
   408c0:	ldr	r3, [r4, #32]
   408c4:	ldr	r1, [r4, #16]
   408c8:	mla	r7, r3, r2, r0
   408cc:	mul	r5, r3, r2
   408d0:	cmp	r7, r1
   408d4:	bls	40944 <flatcc_json_printer_utype_enum_vector_field@@Base+0x17c>
   408d8:	cmp	r0, r1
   408dc:	bcc	408f8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x130>
   408e0:	ldr	r2, [r4, #44]	; 0x2c
   408e4:	mov	r0, r4
   408e8:	mov	r1, #0
   408ec:	blx	r2
   408f0:	ldr	r1, [r4, #16]
   408f4:	ldr	r0, [r4, #20]
   408f8:	sub	r6, r1, r0
   408fc:	cmp	r6, r5
   40900:	bcs	40944 <flatcc_json_printer_utype_enum_vector_field@@Base+0x17c>
   40904:	mov	r1, #32
   40908:	mov	r2, r6
   4090c:	bl	14eec <memset@plt>
   40910:	ldr	r0, [r4, #20]
   40914:	ldr	r2, [r4, #44]	; 0x2c
   40918:	mov	r1, #0
   4091c:	add	r0, r0, r6
   40920:	str	r0, [r4, #20]
   40924:	mov	r0, r4
   40928:	blx	r2
   4092c:	ldr	r1, [r4, #16]
   40930:	ldr	r0, [r4, #20]
   40934:	sub	r5, r5, r6
   40938:	sub	r6, r1, r0
   4093c:	cmp	r5, r6
   40940:	bhi	40904 <flatcc_json_printer_utype_enum_vector_field@@Base+0x13c>
   40944:	mov	r1, #32
   40948:	mov	r2, r5
   4094c:	bl	14eec <memset@plt>
   40950:	ldr	r0, [r4, #20]
   40954:	add	r0, r0, r5
   40958:	str	r0, [r4, #20]
   4095c:	b	4097c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b4>
   40960:	ldr	r1, [r4, #16]
   40964:	cmp	r0, r1
   40968:	bcc	4097c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b4>
   4096c:	ldr	r2, [r4, #44]	; 0x2c
   40970:	mov	r0, r4
   40974:	mov	r1, #0
   40978:	blx	r2
   4097c:	ldrb	r1, [r8, #4]
   40980:	mov	r0, r4
   40984:	blx	sl
   40988:	subs	r9, r9, #1
   4098c:	beq	40aac <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   40990:	add	r7, r8, #5
   40994:	mov	r8, #44	; 0x2c
   40998:	b	409c8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x200>
   4099c:	mov	r1, #32
   409a0:	mov	r2, r5
   409a4:	bl	14eec <memset@plt>
   409a8:	ldr	r0, [r4, #20]
   409ac:	add	r0, r0, r5
   409b0:	str	r0, [r4, #20]
   409b4:	ldrb	r1, [r7], #1
   409b8:	mov	r0, r4
   409bc:	blx	sl
   409c0:	cmp	r9, #0
   409c4:	beq	40aac <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   409c8:	ldr	r0, [r4, #20]
   409cc:	sub	r9, r9, #1
   409d0:	add	r1, r0, #1
   409d4:	str	r1, [r4, #20]
   409d8:	strb	r8, [r0]
   409dc:	ldrb	r1, [r4, #25]
   409e0:	ldr	r0, [r4, #20]
   409e4:	cmp	r1, #0
   409e8:	beq	40a8c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   409ec:	add	r1, r0, #1
   409f0:	str	r1, [r4, #20]
   409f4:	mov	r1, #10
   409f8:	strb	r1, [r0]
   409fc:	ldr	r0, [r4, #20]
   40a00:	ldrb	r2, [r4, #25]
   40a04:	ldr	r3, [r4, #32]
   40a08:	ldr	r1, [r4, #16]
   40a0c:	mla	r6, r3, r2, r0
   40a10:	mul	r5, r3, r2
   40a14:	cmp	r6, r1
   40a18:	bls	4099c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   40a1c:	cmp	r0, r1
   40a20:	bcc	40a3c <flatcc_json_printer_utype_enum_vector_field@@Base+0x274>
   40a24:	ldr	r2, [r4, #44]	; 0x2c
   40a28:	mov	r0, r4
   40a2c:	mov	r1, #0
   40a30:	blx	r2
   40a34:	ldr	r1, [r4, #16]
   40a38:	ldr	r0, [r4, #20]
   40a3c:	sub	r6, r1, r0
   40a40:	cmp	r6, r5
   40a44:	bcs	4099c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   40a48:	mov	r1, #32
   40a4c:	mov	r2, r6
   40a50:	bl	14eec <memset@plt>
   40a54:	ldr	r0, [r4, #20]
   40a58:	ldr	r2, [r4, #44]	; 0x2c
   40a5c:	mov	r1, #0
   40a60:	add	r0, r0, r6
   40a64:	str	r0, [r4, #20]
   40a68:	mov	r0, r4
   40a6c:	blx	r2
   40a70:	ldr	r1, [r4, #16]
   40a74:	ldr	r0, [r4, #20]
   40a78:	sub	r5, r5, r6
   40a7c:	sub	r6, r1, r0
   40a80:	cmp	r5, r6
   40a84:	bhi	40a48 <flatcc_json_printer_utype_enum_vector_field@@Base+0x280>
   40a88:	b	4099c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   40a8c:	ldr	r1, [r4, #16]
   40a90:	cmp	r0, r1
   40a94:	bcc	409b4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
   40a98:	ldr	r2, [r4, #44]	; 0x2c
   40a9c:	mov	r0, r4
   40aa0:	mov	r1, #0
   40aa4:	blx	r2
   40aa8:	b	409b4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
   40aac:	ldrb	r1, [r4, #25]
   40ab0:	ldr	r0, [r4, #20]
   40ab4:	cmp	r1, #0
   40ab8:	beq	40b78 <flatcc_json_printer_utype_enum_vector_field@@Base+0x3b0>
   40abc:	add	r1, r0, #1
   40ac0:	str	r1, [r4, #20]
   40ac4:	mov	r1, #10
   40ac8:	strb	r1, [r0]
   40acc:	ldr	r0, [r4, #32]
   40ad0:	sub	r2, r0, #1
   40ad4:	str	r2, [r4, #32]
   40ad8:	ldrb	r3, [r4, #25]
   40adc:	ldr	r0, [r4, #20]
   40ae0:	ldr	r1, [r4, #16]
   40ae4:	mla	r7, r2, r3, r0
   40ae8:	mul	r5, r2, r3
   40aec:	cmp	r7, r1
   40af0:	bls	40b60 <flatcc_json_printer_utype_enum_vector_field@@Base+0x398>
   40af4:	cmp	r0, r1
   40af8:	bcc	40b14 <flatcc_json_printer_utype_enum_vector_field@@Base+0x34c>
   40afc:	ldr	r2, [r4, #44]	; 0x2c
   40b00:	mov	r0, r4
   40b04:	mov	r1, #0
   40b08:	blx	r2
   40b0c:	ldr	r1, [r4, #16]
   40b10:	ldr	r0, [r4, #20]
   40b14:	sub	r6, r1, r0
   40b18:	cmp	r6, r5
   40b1c:	bcs	40b60 <flatcc_json_printer_utype_enum_vector_field@@Base+0x398>
   40b20:	mov	r1, #32
   40b24:	mov	r2, r6
   40b28:	bl	14eec <memset@plt>
   40b2c:	ldr	r0, [r4, #20]
   40b30:	ldr	r2, [r4, #44]	; 0x2c
   40b34:	mov	r1, #0
   40b38:	add	r0, r0, r6
   40b3c:	str	r0, [r4, #20]
   40b40:	mov	r0, r4
   40b44:	blx	r2
   40b48:	ldr	r1, [r4, #16]
   40b4c:	ldr	r0, [r4, #20]
   40b50:	sub	r5, r5, r6
   40b54:	sub	r6, r1, r0
   40b58:	cmp	r5, r6
   40b5c:	bhi	40b20 <flatcc_json_printer_utype_enum_vector_field@@Base+0x358>
   40b60:	mov	r1, #32
   40b64:	mov	r2, r5
   40b68:	bl	14eec <memset@plt>
   40b6c:	ldr	r0, [r4, #20]
   40b70:	add	r0, r0, r5
   40b74:	str	r0, [r4, #20]
   40b78:	add	r1, r0, #1
   40b7c:	str	r1, [r4, #20]
   40b80:	mov	r1, #93	; 0x5d
   40b84:	strb	r1, [r0]
   40b88:	sub	sp, fp, #28
   40b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040b90 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   40b90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40b94:	add	fp, sp, #28
   40b98:	sub	sp, sp, #4
   40b9c:	mov	r4, r0
   40ba0:	ldrb	r0, [r0, #27]
   40ba4:	cmp	r0, #0
   40ba8:	beq	40bbc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   40bac:	mov	r0, r4
   40bb0:	sub	sp, fp, #28
   40bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40bb8:	b	3da48 <flatcc_json_printer_uint8_vector_field@@Base>
   40bbc:	mov	r0, #4
   40bc0:	add	r0, r0, r2, lsl #1
   40bc4:	ldr	r2, [r1, #8]
   40bc8:	cmp	r0, r2
   40bcc:	bge	40bec <flatcc_json_printer_uint8_enum_vector_field@@Base+0x5c>
   40bd0:	ldr	r2, [r1, #4]
   40bd4:	add	r0, r2, r0
   40bd8:	ldrh	r0, [r0]
   40bdc:	cmp	r0, #0
   40be0:	ldrne	r2, [r1]
   40be4:	addsne	r8, r2, r0
   40be8:	bne	40bf4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x64>
   40bec:	sub	sp, fp, #28
   40bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40bf4:	ldr	r0, [r1, #16]
   40bf8:	ldr	sl, [fp, #12]
   40bfc:	ldr	r2, [fp, #8]
   40c00:	add	r7, r0, #1
   40c04:	cmp	r0, #0
   40c08:	str	r7, [r1, #16]
   40c0c:	beq	40c24 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x94>
   40c10:	ldr	r0, [r4, #20]
   40c14:	add	r1, r0, #1
   40c18:	str	r1, [r4, #20]
   40c1c:	mov	r1, #44	; 0x2c
   40c20:	strb	r1, [r0]
   40c24:	ldr	r0, [r8]
   40c28:	mov	r1, r3
   40c2c:	ldr	r9, [r8, r0]!
   40c30:	mov	r0, r4
   40c34:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   40c38:	ldr	r1, [r4, #32]
   40c3c:	ldr	r0, [r4, #20]
   40c40:	cmp	r9, #0
   40c44:	add	r1, r1, #1
   40c48:	str	r1, [r4, #32]
   40c4c:	add	r1, r0, #1
   40c50:	str	r1, [r4, #20]
   40c54:	mov	r1, #91	; 0x5b
   40c58:	strb	r1, [r0]
   40c5c:	beq	40e74 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   40c60:	ldrb	r1, [r4, #25]
   40c64:	ldr	r0, [r4, #20]
   40c68:	cmp	r1, #0
   40c6c:	beq	40d28 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x198>
   40c70:	add	r1, r0, #1
   40c74:	str	r1, [r4, #20]
   40c78:	mov	r1, #10
   40c7c:	strb	r1, [r0]
   40c80:	ldr	r0, [r4, #20]
   40c84:	ldrb	r2, [r4, #25]
   40c88:	ldr	r3, [r4, #32]
   40c8c:	ldr	r1, [r4, #16]
   40c90:	mla	r7, r3, r2, r0
   40c94:	mul	r5, r3, r2
   40c98:	cmp	r7, r1
   40c9c:	bls	40d0c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x17c>
   40ca0:	cmp	r0, r1
   40ca4:	bcc	40cc0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x130>
   40ca8:	ldr	r2, [r4, #44]	; 0x2c
   40cac:	mov	r0, r4
   40cb0:	mov	r1, #0
   40cb4:	blx	r2
   40cb8:	ldr	r1, [r4, #16]
   40cbc:	ldr	r0, [r4, #20]
   40cc0:	sub	r6, r1, r0
   40cc4:	cmp	r6, r5
   40cc8:	bcs	40d0c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x17c>
   40ccc:	mov	r1, #32
   40cd0:	mov	r2, r6
   40cd4:	bl	14eec <memset@plt>
   40cd8:	ldr	r0, [r4, #20]
   40cdc:	ldr	r2, [r4, #44]	; 0x2c
   40ce0:	mov	r1, #0
   40ce4:	add	r0, r0, r6
   40ce8:	str	r0, [r4, #20]
   40cec:	mov	r0, r4
   40cf0:	blx	r2
   40cf4:	ldr	r1, [r4, #16]
   40cf8:	ldr	r0, [r4, #20]
   40cfc:	sub	r5, r5, r6
   40d00:	sub	r6, r1, r0
   40d04:	cmp	r5, r6
   40d08:	bhi	40ccc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x13c>
   40d0c:	mov	r1, #32
   40d10:	mov	r2, r5
   40d14:	bl	14eec <memset@plt>
   40d18:	ldr	r0, [r4, #20]
   40d1c:	add	r0, r0, r5
   40d20:	str	r0, [r4, #20]
   40d24:	b	40d44 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b4>
   40d28:	ldr	r1, [r4, #16]
   40d2c:	cmp	r0, r1
   40d30:	bcc	40d44 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b4>
   40d34:	ldr	r2, [r4, #44]	; 0x2c
   40d38:	mov	r0, r4
   40d3c:	mov	r1, #0
   40d40:	blx	r2
   40d44:	ldrb	r1, [r8, #4]
   40d48:	mov	r0, r4
   40d4c:	blx	sl
   40d50:	subs	r9, r9, #1
   40d54:	beq	40e74 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   40d58:	add	r7, r8, #5
   40d5c:	mov	r8, #44	; 0x2c
   40d60:	b	40d90 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x200>
   40d64:	mov	r1, #32
   40d68:	mov	r2, r5
   40d6c:	bl	14eec <memset@plt>
   40d70:	ldr	r0, [r4, #20]
   40d74:	add	r0, r0, r5
   40d78:	str	r0, [r4, #20]
   40d7c:	ldrb	r1, [r7], #1
   40d80:	mov	r0, r4
   40d84:	blx	sl
   40d88:	cmp	r9, #0
   40d8c:	beq	40e74 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   40d90:	ldr	r0, [r4, #20]
   40d94:	sub	r9, r9, #1
   40d98:	add	r1, r0, #1
   40d9c:	str	r1, [r4, #20]
   40da0:	strb	r8, [r0]
   40da4:	ldrb	r1, [r4, #25]
   40da8:	ldr	r0, [r4, #20]
   40dac:	cmp	r1, #0
   40db0:	beq	40e54 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   40db4:	add	r1, r0, #1
   40db8:	str	r1, [r4, #20]
   40dbc:	mov	r1, #10
   40dc0:	strb	r1, [r0]
   40dc4:	ldr	r0, [r4, #20]
   40dc8:	ldrb	r2, [r4, #25]
   40dcc:	ldr	r3, [r4, #32]
   40dd0:	ldr	r1, [r4, #16]
   40dd4:	mla	r6, r3, r2, r0
   40dd8:	mul	r5, r3, r2
   40ddc:	cmp	r6, r1
   40de0:	bls	40d64 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   40de4:	cmp	r0, r1
   40de8:	bcc	40e04 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x274>
   40dec:	ldr	r2, [r4, #44]	; 0x2c
   40df0:	mov	r0, r4
   40df4:	mov	r1, #0
   40df8:	blx	r2
   40dfc:	ldr	r1, [r4, #16]
   40e00:	ldr	r0, [r4, #20]
   40e04:	sub	r6, r1, r0
   40e08:	cmp	r6, r5
   40e0c:	bcs	40d64 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   40e10:	mov	r1, #32
   40e14:	mov	r2, r6
   40e18:	bl	14eec <memset@plt>
   40e1c:	ldr	r0, [r4, #20]
   40e20:	ldr	r2, [r4, #44]	; 0x2c
   40e24:	mov	r1, #0
   40e28:	add	r0, r0, r6
   40e2c:	str	r0, [r4, #20]
   40e30:	mov	r0, r4
   40e34:	blx	r2
   40e38:	ldr	r1, [r4, #16]
   40e3c:	ldr	r0, [r4, #20]
   40e40:	sub	r5, r5, r6
   40e44:	sub	r6, r1, r0
   40e48:	cmp	r5, r6
   40e4c:	bhi	40e10 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x280>
   40e50:	b	40d64 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   40e54:	ldr	r1, [r4, #16]
   40e58:	cmp	r0, r1
   40e5c:	bcc	40d7c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
   40e60:	ldr	r2, [r4, #44]	; 0x2c
   40e64:	mov	r0, r4
   40e68:	mov	r1, #0
   40e6c:	blx	r2
   40e70:	b	40d7c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
   40e74:	ldrb	r1, [r4, #25]
   40e78:	ldr	r0, [r4, #20]
   40e7c:	cmp	r1, #0
   40e80:	beq	40f40 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3b0>
   40e84:	add	r1, r0, #1
   40e88:	str	r1, [r4, #20]
   40e8c:	mov	r1, #10
   40e90:	strb	r1, [r0]
   40e94:	ldr	r0, [r4, #32]
   40e98:	sub	r2, r0, #1
   40e9c:	str	r2, [r4, #32]
   40ea0:	ldrb	r3, [r4, #25]
   40ea4:	ldr	r0, [r4, #20]
   40ea8:	ldr	r1, [r4, #16]
   40eac:	mla	r7, r2, r3, r0
   40eb0:	mul	r5, r2, r3
   40eb4:	cmp	r7, r1
   40eb8:	bls	40f28 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x398>
   40ebc:	cmp	r0, r1
   40ec0:	bcc	40edc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x34c>
   40ec4:	ldr	r2, [r4, #44]	; 0x2c
   40ec8:	mov	r0, r4
   40ecc:	mov	r1, #0
   40ed0:	blx	r2
   40ed4:	ldr	r1, [r4, #16]
   40ed8:	ldr	r0, [r4, #20]
   40edc:	sub	r6, r1, r0
   40ee0:	cmp	r6, r5
   40ee4:	bcs	40f28 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x398>
   40ee8:	mov	r1, #32
   40eec:	mov	r2, r6
   40ef0:	bl	14eec <memset@plt>
   40ef4:	ldr	r0, [r4, #20]
   40ef8:	ldr	r2, [r4, #44]	; 0x2c
   40efc:	mov	r1, #0
   40f00:	add	r0, r0, r6
   40f04:	str	r0, [r4, #20]
   40f08:	mov	r0, r4
   40f0c:	blx	r2
   40f10:	ldr	r1, [r4, #16]
   40f14:	ldr	r0, [r4, #20]
   40f18:	sub	r5, r5, r6
   40f1c:	sub	r6, r1, r0
   40f20:	cmp	r5, r6
   40f24:	bhi	40ee8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x358>
   40f28:	mov	r1, #32
   40f2c:	mov	r2, r5
   40f30:	bl	14eec <memset@plt>
   40f34:	ldr	r0, [r4, #20]
   40f38:	add	r0, r0, r5
   40f3c:	str	r0, [r4, #20]
   40f40:	add	r1, r0, #1
   40f44:	str	r1, [r4, #20]
   40f48:	mov	r1, #93	; 0x5d
   40f4c:	strb	r1, [r0]
   40f50:	sub	sp, fp, #28
   40f54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040f58 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   40f58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40f5c:	add	fp, sp, #28
   40f60:	sub	sp, sp, #4
   40f64:	mov	r4, r0
   40f68:	ldrb	r0, [r0, #27]
   40f6c:	cmp	r0, #0
   40f70:	beq	40f84 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   40f74:	mov	r0, r4
   40f78:	sub	sp, fp, #28
   40f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40f80:	b	3df68 <flatcc_json_printer_uint16_vector_field@@Base>
   40f84:	mov	r0, #4
   40f88:	add	r0, r0, r2, lsl #1
   40f8c:	ldr	r2, [r1, #8]
   40f90:	cmp	r0, r2
   40f94:	bge	40fb4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x5c>
   40f98:	ldr	r2, [r1, #4]
   40f9c:	add	r0, r2, r0
   40fa0:	ldrh	r0, [r0]
   40fa4:	cmp	r0, #0
   40fa8:	ldrne	r2, [r1]
   40fac:	addsne	r8, r2, r0
   40fb0:	bne	40fbc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x64>
   40fb4:	sub	sp, fp, #28
   40fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40fbc:	ldr	r0, [r1, #16]
   40fc0:	ldr	sl, [fp, #12]
   40fc4:	ldr	r2, [fp, #8]
   40fc8:	add	r7, r0, #1
   40fcc:	cmp	r0, #0
   40fd0:	str	r7, [r1, #16]
   40fd4:	beq	40fec <flatcc_json_printer_uint16_enum_vector_field@@Base+0x94>
   40fd8:	ldr	r0, [r4, #20]
   40fdc:	add	r1, r0, #1
   40fe0:	str	r1, [r4, #20]
   40fe4:	mov	r1, #44	; 0x2c
   40fe8:	strb	r1, [r0]
   40fec:	ldr	r0, [r8]
   40ff0:	mov	r1, r3
   40ff4:	ldr	r9, [r8, r0]!
   40ff8:	mov	r0, r4
   40ffc:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   41000:	ldr	r1, [r4, #32]
   41004:	ldr	r0, [r4, #20]
   41008:	cmp	r9, #0
   4100c:	add	r1, r1, #1
   41010:	str	r1, [r4, #32]
   41014:	add	r1, r0, #1
   41018:	str	r1, [r4, #20]
   4101c:	mov	r1, #91	; 0x5b
   41020:	strb	r1, [r0]
   41024:	beq	4123c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   41028:	ldrb	r1, [r4, #25]
   4102c:	ldr	r0, [r4, #20]
   41030:	cmp	r1, #0
   41034:	beq	410f0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x198>
   41038:	add	r1, r0, #1
   4103c:	str	r1, [r4, #20]
   41040:	mov	r1, #10
   41044:	strb	r1, [r0]
   41048:	ldr	r0, [r4, #20]
   4104c:	ldrb	r2, [r4, #25]
   41050:	ldr	r3, [r4, #32]
   41054:	ldr	r1, [r4, #16]
   41058:	mla	r7, r3, r2, r0
   4105c:	mul	r5, r3, r2
   41060:	cmp	r7, r1
   41064:	bls	410d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x17c>
   41068:	cmp	r0, r1
   4106c:	bcc	41088 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x130>
   41070:	ldr	r2, [r4, #44]	; 0x2c
   41074:	mov	r0, r4
   41078:	mov	r1, #0
   4107c:	blx	r2
   41080:	ldr	r1, [r4, #16]
   41084:	ldr	r0, [r4, #20]
   41088:	sub	r6, r1, r0
   4108c:	cmp	r6, r5
   41090:	bcs	410d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x17c>
   41094:	mov	r1, #32
   41098:	mov	r2, r6
   4109c:	bl	14eec <memset@plt>
   410a0:	ldr	r0, [r4, #20]
   410a4:	ldr	r2, [r4, #44]	; 0x2c
   410a8:	mov	r1, #0
   410ac:	add	r0, r0, r6
   410b0:	str	r0, [r4, #20]
   410b4:	mov	r0, r4
   410b8:	blx	r2
   410bc:	ldr	r1, [r4, #16]
   410c0:	ldr	r0, [r4, #20]
   410c4:	sub	r5, r5, r6
   410c8:	sub	r6, r1, r0
   410cc:	cmp	r5, r6
   410d0:	bhi	41094 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x13c>
   410d4:	mov	r1, #32
   410d8:	mov	r2, r5
   410dc:	bl	14eec <memset@plt>
   410e0:	ldr	r0, [r4, #20]
   410e4:	add	r0, r0, r5
   410e8:	str	r0, [r4, #20]
   410ec:	b	4110c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   410f0:	ldr	r1, [r4, #16]
   410f4:	cmp	r0, r1
   410f8:	bcc	4110c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   410fc:	ldr	r2, [r4, #44]	; 0x2c
   41100:	mov	r0, r4
   41104:	mov	r1, #0
   41108:	blx	r2
   4110c:	ldrh	r1, [r8, #4]
   41110:	mov	r0, r4
   41114:	blx	sl
   41118:	subs	r9, r9, #1
   4111c:	beq	4123c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   41120:	add	r7, r8, #6
   41124:	mov	r8, #44	; 0x2c
   41128:	b	41158 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x200>
   4112c:	mov	r1, #32
   41130:	mov	r2, r5
   41134:	bl	14eec <memset@plt>
   41138:	ldr	r0, [r4, #20]
   4113c:	add	r0, r0, r5
   41140:	str	r0, [r4, #20]
   41144:	ldrh	r1, [r7], #2
   41148:	mov	r0, r4
   4114c:	blx	sl
   41150:	cmp	r9, #0
   41154:	beq	4123c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   41158:	ldr	r0, [r4, #20]
   4115c:	sub	r9, r9, #1
   41160:	add	r1, r0, #1
   41164:	str	r1, [r4, #20]
   41168:	strb	r8, [r0]
   4116c:	ldrb	r1, [r4, #25]
   41170:	ldr	r0, [r4, #20]
   41174:	cmp	r1, #0
   41178:	beq	4121c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   4117c:	add	r1, r0, #1
   41180:	str	r1, [r4, #20]
   41184:	mov	r1, #10
   41188:	strb	r1, [r0]
   4118c:	ldr	r0, [r4, #20]
   41190:	ldrb	r2, [r4, #25]
   41194:	ldr	r3, [r4, #32]
   41198:	ldr	r1, [r4, #16]
   4119c:	mla	r6, r3, r2, r0
   411a0:	mul	r5, r3, r2
   411a4:	cmp	r6, r1
   411a8:	bls	4112c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   411ac:	cmp	r0, r1
   411b0:	bcc	411cc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x274>
   411b4:	ldr	r2, [r4, #44]	; 0x2c
   411b8:	mov	r0, r4
   411bc:	mov	r1, #0
   411c0:	blx	r2
   411c4:	ldr	r1, [r4, #16]
   411c8:	ldr	r0, [r4, #20]
   411cc:	sub	r6, r1, r0
   411d0:	cmp	r6, r5
   411d4:	bcs	4112c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   411d8:	mov	r1, #32
   411dc:	mov	r2, r6
   411e0:	bl	14eec <memset@plt>
   411e4:	ldr	r0, [r4, #20]
   411e8:	ldr	r2, [r4, #44]	; 0x2c
   411ec:	mov	r1, #0
   411f0:	add	r0, r0, r6
   411f4:	str	r0, [r4, #20]
   411f8:	mov	r0, r4
   411fc:	blx	r2
   41200:	ldr	r1, [r4, #16]
   41204:	ldr	r0, [r4, #20]
   41208:	sub	r5, r5, r6
   4120c:	sub	r6, r1, r0
   41210:	cmp	r5, r6
   41214:	bhi	411d8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x280>
   41218:	b	4112c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   4121c:	ldr	r1, [r4, #16]
   41220:	cmp	r0, r1
   41224:	bcc	41144 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   41228:	ldr	r2, [r4, #44]	; 0x2c
   4122c:	mov	r0, r4
   41230:	mov	r1, #0
   41234:	blx	r2
   41238:	b	41144 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   4123c:	ldrb	r1, [r4, #25]
   41240:	ldr	r0, [r4, #20]
   41244:	cmp	r1, #0
   41248:	beq	41308 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3b0>
   4124c:	add	r1, r0, #1
   41250:	str	r1, [r4, #20]
   41254:	mov	r1, #10
   41258:	strb	r1, [r0]
   4125c:	ldr	r0, [r4, #32]
   41260:	sub	r2, r0, #1
   41264:	str	r2, [r4, #32]
   41268:	ldrb	r3, [r4, #25]
   4126c:	ldr	r0, [r4, #20]
   41270:	ldr	r1, [r4, #16]
   41274:	mla	r7, r2, r3, r0
   41278:	mul	r5, r2, r3
   4127c:	cmp	r7, r1
   41280:	bls	412f0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x398>
   41284:	cmp	r0, r1
   41288:	bcc	412a4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x34c>
   4128c:	ldr	r2, [r4, #44]	; 0x2c
   41290:	mov	r0, r4
   41294:	mov	r1, #0
   41298:	blx	r2
   4129c:	ldr	r1, [r4, #16]
   412a0:	ldr	r0, [r4, #20]
   412a4:	sub	r6, r1, r0
   412a8:	cmp	r6, r5
   412ac:	bcs	412f0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x398>
   412b0:	mov	r1, #32
   412b4:	mov	r2, r6
   412b8:	bl	14eec <memset@plt>
   412bc:	ldr	r0, [r4, #20]
   412c0:	ldr	r2, [r4, #44]	; 0x2c
   412c4:	mov	r1, #0
   412c8:	add	r0, r0, r6
   412cc:	str	r0, [r4, #20]
   412d0:	mov	r0, r4
   412d4:	blx	r2
   412d8:	ldr	r1, [r4, #16]
   412dc:	ldr	r0, [r4, #20]
   412e0:	sub	r5, r5, r6
   412e4:	sub	r6, r1, r0
   412e8:	cmp	r5, r6
   412ec:	bhi	412b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x358>
   412f0:	mov	r1, #32
   412f4:	mov	r2, r5
   412f8:	bl	14eec <memset@plt>
   412fc:	ldr	r0, [r4, #20]
   41300:	add	r0, r0, r5
   41304:	str	r0, [r4, #20]
   41308:	add	r1, r0, #1
   4130c:	str	r1, [r4, #20]
   41310:	mov	r1, #93	; 0x5d
   41314:	strb	r1, [r0]
   41318:	sub	sp, fp, #28
   4131c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041320 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   41320:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41324:	add	fp, sp, #28
   41328:	sub	sp, sp, #4
   4132c:	mov	r4, r0
   41330:	ldrb	r0, [r0, #27]
   41334:	cmp	r0, #0
   41338:	beq	4134c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   4133c:	mov	r0, r4
   41340:	sub	sp, fp, #28
   41344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41348:	b	3e328 <flatcc_json_printer_uint32_vector_field@@Base>
   4134c:	mov	r0, #4
   41350:	add	r0, r0, r2, lsl #1
   41354:	ldr	r2, [r1, #8]
   41358:	cmp	r0, r2
   4135c:	bge	4137c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x5c>
   41360:	ldr	r2, [r1, #4]
   41364:	add	r0, r2, r0
   41368:	ldrh	r0, [r0]
   4136c:	cmp	r0, #0
   41370:	ldrne	r2, [r1]
   41374:	addsne	r8, r2, r0
   41378:	bne	41384 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x64>
   4137c:	sub	sp, fp, #28
   41380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41384:	ldr	r0, [r1, #16]
   41388:	ldr	sl, [fp, #12]
   4138c:	ldr	r2, [fp, #8]
   41390:	add	r7, r0, #1
   41394:	cmp	r0, #0
   41398:	str	r7, [r1, #16]
   4139c:	beq	413b4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x94>
   413a0:	ldr	r0, [r4, #20]
   413a4:	add	r1, r0, #1
   413a8:	str	r1, [r4, #20]
   413ac:	mov	r1, #44	; 0x2c
   413b0:	strb	r1, [r0]
   413b4:	ldr	r0, [r8]
   413b8:	mov	r1, r3
   413bc:	ldr	r9, [r8, r0]!
   413c0:	mov	r0, r4
   413c4:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   413c8:	ldr	r1, [r4, #32]
   413cc:	ldr	r0, [r4, #20]
   413d0:	cmp	r9, #0
   413d4:	add	r1, r1, #1
   413d8:	str	r1, [r4, #32]
   413dc:	add	r1, r0, #1
   413e0:	str	r1, [r4, #20]
   413e4:	mov	r1, #91	; 0x5b
   413e8:	strb	r1, [r0]
   413ec:	beq	41604 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   413f0:	ldrb	r1, [r4, #25]
   413f4:	ldr	r0, [r4, #20]
   413f8:	cmp	r1, #0
   413fc:	beq	414b8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x198>
   41400:	add	r1, r0, #1
   41404:	str	r1, [r4, #20]
   41408:	mov	r1, #10
   4140c:	strb	r1, [r0]
   41410:	ldr	r0, [r4, #20]
   41414:	ldrb	r2, [r4, #25]
   41418:	ldr	r3, [r4, #32]
   4141c:	ldr	r1, [r4, #16]
   41420:	mla	r7, r3, r2, r0
   41424:	mul	r5, r3, r2
   41428:	cmp	r7, r1
   4142c:	bls	4149c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x17c>
   41430:	cmp	r0, r1
   41434:	bcc	41450 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x130>
   41438:	ldr	r2, [r4, #44]	; 0x2c
   4143c:	mov	r0, r4
   41440:	mov	r1, #0
   41444:	blx	r2
   41448:	ldr	r1, [r4, #16]
   4144c:	ldr	r0, [r4, #20]
   41450:	sub	r6, r1, r0
   41454:	cmp	r6, r5
   41458:	bcs	4149c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x17c>
   4145c:	mov	r1, #32
   41460:	mov	r2, r6
   41464:	bl	14eec <memset@plt>
   41468:	ldr	r0, [r4, #20]
   4146c:	ldr	r2, [r4, #44]	; 0x2c
   41470:	mov	r1, #0
   41474:	add	r0, r0, r6
   41478:	str	r0, [r4, #20]
   4147c:	mov	r0, r4
   41480:	blx	r2
   41484:	ldr	r1, [r4, #16]
   41488:	ldr	r0, [r4, #20]
   4148c:	sub	r5, r5, r6
   41490:	sub	r6, r1, r0
   41494:	cmp	r5, r6
   41498:	bhi	4145c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x13c>
   4149c:	mov	r1, #32
   414a0:	mov	r2, r5
   414a4:	bl	14eec <memset@plt>
   414a8:	ldr	r0, [r4, #20]
   414ac:	add	r0, r0, r5
   414b0:	str	r0, [r4, #20]
   414b4:	b	414d4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   414b8:	ldr	r1, [r4, #16]
   414bc:	cmp	r0, r1
   414c0:	bcc	414d4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   414c4:	ldr	r2, [r4, #44]	; 0x2c
   414c8:	mov	r0, r4
   414cc:	mov	r1, #0
   414d0:	blx	r2
   414d4:	ldr	r1, [r8, #4]
   414d8:	mov	r0, r4
   414dc:	blx	sl
   414e0:	subs	r9, r9, #1
   414e4:	beq	41604 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   414e8:	add	r7, r8, #8
   414ec:	mov	r8, #44	; 0x2c
   414f0:	b	41520 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x200>
   414f4:	mov	r1, #32
   414f8:	mov	r2, r5
   414fc:	bl	14eec <memset@plt>
   41500:	ldr	r0, [r4, #20]
   41504:	add	r0, r0, r5
   41508:	str	r0, [r4, #20]
   4150c:	ldr	r1, [r7], #4
   41510:	mov	r0, r4
   41514:	blx	sl
   41518:	cmp	r9, #0
   4151c:	beq	41604 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   41520:	ldr	r0, [r4, #20]
   41524:	sub	r9, r9, #1
   41528:	add	r1, r0, #1
   4152c:	str	r1, [r4, #20]
   41530:	strb	r8, [r0]
   41534:	ldrb	r1, [r4, #25]
   41538:	ldr	r0, [r4, #20]
   4153c:	cmp	r1, #0
   41540:	beq	415e4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   41544:	add	r1, r0, #1
   41548:	str	r1, [r4, #20]
   4154c:	mov	r1, #10
   41550:	strb	r1, [r0]
   41554:	ldr	r0, [r4, #20]
   41558:	ldrb	r2, [r4, #25]
   4155c:	ldr	r3, [r4, #32]
   41560:	ldr	r1, [r4, #16]
   41564:	mla	r6, r3, r2, r0
   41568:	mul	r5, r3, r2
   4156c:	cmp	r6, r1
   41570:	bls	414f4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   41574:	cmp	r0, r1
   41578:	bcc	41594 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x274>
   4157c:	ldr	r2, [r4, #44]	; 0x2c
   41580:	mov	r0, r4
   41584:	mov	r1, #0
   41588:	blx	r2
   4158c:	ldr	r1, [r4, #16]
   41590:	ldr	r0, [r4, #20]
   41594:	sub	r6, r1, r0
   41598:	cmp	r6, r5
   4159c:	bcs	414f4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   415a0:	mov	r1, #32
   415a4:	mov	r2, r6
   415a8:	bl	14eec <memset@plt>
   415ac:	ldr	r0, [r4, #20]
   415b0:	ldr	r2, [r4, #44]	; 0x2c
   415b4:	mov	r1, #0
   415b8:	add	r0, r0, r6
   415bc:	str	r0, [r4, #20]
   415c0:	mov	r0, r4
   415c4:	blx	r2
   415c8:	ldr	r1, [r4, #16]
   415cc:	ldr	r0, [r4, #20]
   415d0:	sub	r5, r5, r6
   415d4:	sub	r6, r1, r0
   415d8:	cmp	r5, r6
   415dc:	bhi	415a0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x280>
   415e0:	b	414f4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   415e4:	ldr	r1, [r4, #16]
   415e8:	cmp	r0, r1
   415ec:	bcc	4150c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
   415f0:	ldr	r2, [r4, #44]	; 0x2c
   415f4:	mov	r0, r4
   415f8:	mov	r1, #0
   415fc:	blx	r2
   41600:	b	4150c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
   41604:	ldrb	r1, [r4, #25]
   41608:	ldr	r0, [r4, #20]
   4160c:	cmp	r1, #0
   41610:	beq	416d0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3b0>
   41614:	add	r1, r0, #1
   41618:	str	r1, [r4, #20]
   4161c:	mov	r1, #10
   41620:	strb	r1, [r0]
   41624:	ldr	r0, [r4, #32]
   41628:	sub	r2, r0, #1
   4162c:	str	r2, [r4, #32]
   41630:	ldrb	r3, [r4, #25]
   41634:	ldr	r0, [r4, #20]
   41638:	ldr	r1, [r4, #16]
   4163c:	mla	r7, r2, r3, r0
   41640:	mul	r5, r2, r3
   41644:	cmp	r7, r1
   41648:	bls	416b8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x398>
   4164c:	cmp	r0, r1
   41650:	bcc	4166c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x34c>
   41654:	ldr	r2, [r4, #44]	; 0x2c
   41658:	mov	r0, r4
   4165c:	mov	r1, #0
   41660:	blx	r2
   41664:	ldr	r1, [r4, #16]
   41668:	ldr	r0, [r4, #20]
   4166c:	sub	r6, r1, r0
   41670:	cmp	r6, r5
   41674:	bcs	416b8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x398>
   41678:	mov	r1, #32
   4167c:	mov	r2, r6
   41680:	bl	14eec <memset@plt>
   41684:	ldr	r0, [r4, #20]
   41688:	ldr	r2, [r4, #44]	; 0x2c
   4168c:	mov	r1, #0
   41690:	add	r0, r0, r6
   41694:	str	r0, [r4, #20]
   41698:	mov	r0, r4
   4169c:	blx	r2
   416a0:	ldr	r1, [r4, #16]
   416a4:	ldr	r0, [r4, #20]
   416a8:	sub	r5, r5, r6
   416ac:	sub	r6, r1, r0
   416b0:	cmp	r5, r6
   416b4:	bhi	41678 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x358>
   416b8:	mov	r1, #32
   416bc:	mov	r2, r5
   416c0:	bl	14eec <memset@plt>
   416c4:	ldr	r0, [r4, #20]
   416c8:	add	r0, r0, r5
   416cc:	str	r0, [r4, #20]
   416d0:	add	r1, r0, #1
   416d4:	str	r1, [r4, #20]
   416d8:	mov	r1, #93	; 0x5d
   416dc:	strb	r1, [r0]
   416e0:	sub	sp, fp, #28
   416e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000416e8 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   416e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   416ec:	add	fp, sp, #28
   416f0:	sub	sp, sp, #4
   416f4:	mov	r4, r0
   416f8:	ldrb	r0, [r0, #27]
   416fc:	cmp	r0, #0
   41700:	beq	41714 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   41704:	mov	r0, r4
   41708:	sub	sp, fp, #28
   4170c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41710:	b	3e6e8 <flatcc_json_printer_uint64_vector_field@@Base>
   41714:	mov	r0, #4
   41718:	add	r0, r0, r2, lsl #1
   4171c:	ldr	r2, [r1, #8]
   41720:	cmp	r0, r2
   41724:	bge	41744 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x5c>
   41728:	ldr	r2, [r1, #4]
   4172c:	add	r0, r2, r0
   41730:	ldrh	r0, [r0]
   41734:	cmp	r0, #0
   41738:	ldrne	r2, [r1]
   4173c:	addsne	r8, r2, r0
   41740:	bne	4174c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x64>
   41744:	sub	sp, fp, #28
   41748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4174c:	ldr	r0, [r1, #16]
   41750:	ldr	sl, [fp, #12]
   41754:	ldr	r2, [fp, #8]
   41758:	add	r7, r0, #1
   4175c:	cmp	r0, #0
   41760:	str	r7, [r1, #16]
   41764:	beq	4177c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x94>
   41768:	ldr	r0, [r4, #20]
   4176c:	add	r1, r0, #1
   41770:	str	r1, [r4, #20]
   41774:	mov	r1, #44	; 0x2c
   41778:	strb	r1, [r0]
   4177c:	ldr	r0, [r8]
   41780:	mov	r1, r3
   41784:	ldr	r9, [r8, r0]!
   41788:	mov	r0, r4
   4178c:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   41790:	ldr	r1, [r4, #32]
   41794:	ldr	r0, [r4, #20]
   41798:	cmp	r9, #0
   4179c:	add	r1, r1, #1
   417a0:	str	r1, [r4, #32]
   417a4:	add	r1, r0, #1
   417a8:	str	r1, [r4, #20]
   417ac:	mov	r1, #91	; 0x5b
   417b0:	strb	r1, [r0]
   417b4:	beq	419d0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   417b8:	ldrb	r1, [r4, #25]
   417bc:	ldr	r0, [r4, #20]
   417c0:	cmp	r1, #0
   417c4:	beq	41880 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x198>
   417c8:	add	r1, r0, #1
   417cc:	str	r1, [r4, #20]
   417d0:	mov	r1, #10
   417d4:	strb	r1, [r0]
   417d8:	ldr	r0, [r4, #20]
   417dc:	ldrb	r2, [r4, #25]
   417e0:	ldr	r3, [r4, #32]
   417e4:	ldr	r1, [r4, #16]
   417e8:	mla	r7, r3, r2, r0
   417ec:	mul	r5, r3, r2
   417f0:	cmp	r7, r1
   417f4:	bls	41864 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x17c>
   417f8:	cmp	r0, r1
   417fc:	bcc	41818 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x130>
   41800:	ldr	r2, [r4, #44]	; 0x2c
   41804:	mov	r0, r4
   41808:	mov	r1, #0
   4180c:	blx	r2
   41810:	ldr	r1, [r4, #16]
   41814:	ldr	r0, [r4, #20]
   41818:	sub	r6, r1, r0
   4181c:	cmp	r6, r5
   41820:	bcs	41864 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x17c>
   41824:	mov	r1, #32
   41828:	mov	r2, r6
   4182c:	bl	14eec <memset@plt>
   41830:	ldr	r0, [r4, #20]
   41834:	ldr	r2, [r4, #44]	; 0x2c
   41838:	mov	r1, #0
   4183c:	add	r0, r0, r6
   41840:	str	r0, [r4, #20]
   41844:	mov	r0, r4
   41848:	blx	r2
   4184c:	ldr	r1, [r4, #16]
   41850:	ldr	r0, [r4, #20]
   41854:	sub	r5, r5, r6
   41858:	sub	r6, r1, r0
   4185c:	cmp	r5, r6
   41860:	bhi	41824 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x13c>
   41864:	mov	r1, #32
   41868:	mov	r2, r5
   4186c:	bl	14eec <memset@plt>
   41870:	ldr	r0, [r4, #20]
   41874:	add	r0, r0, r5
   41878:	str	r0, [r4, #20]
   4187c:	b	4189c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   41880:	ldr	r1, [r4, #16]
   41884:	cmp	r0, r1
   41888:	bcc	4189c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   4188c:	ldr	r2, [r4, #44]	; 0x2c
   41890:	mov	r0, r4
   41894:	mov	r1, #0
   41898:	blx	r2
   4189c:	ldrd	r2, [r8, #4]
   418a0:	mov	r0, r4
   418a4:	blx	sl
   418a8:	subs	r9, r9, #1
   418ac:	beq	419d0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   418b0:	add	r7, r8, #12
   418b4:	mov	r8, #44	; 0x2c
   418b8:	b	418ec <flatcc_json_printer_uint64_enum_vector_field@@Base+0x204>
   418bc:	mov	r1, #32
   418c0:	mov	r2, r5
   418c4:	bl	14eec <memset@plt>
   418c8:	ldr	r0, [r4, #20]
   418cc:	add	r0, r0, r5
   418d0:	str	r0, [r4, #20]
   418d4:	ldrd	r2, [r7]
   418d8:	mov	r0, r4
   418dc:	blx	sl
   418e0:	add	r7, r7, #8
   418e4:	cmp	r9, #0
   418e8:	beq	419d0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   418ec:	ldr	r0, [r4, #20]
   418f0:	sub	r9, r9, #1
   418f4:	add	r1, r0, #1
   418f8:	str	r1, [r4, #20]
   418fc:	strb	r8, [r0]
   41900:	ldrb	r1, [r4, #25]
   41904:	ldr	r0, [r4, #20]
   41908:	cmp	r1, #0
   4190c:	beq	419b0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c8>
   41910:	add	r1, r0, #1
   41914:	str	r1, [r4, #20]
   41918:	mov	r1, #10
   4191c:	strb	r1, [r0]
   41920:	ldr	r0, [r4, #20]
   41924:	ldrb	r2, [r4, #25]
   41928:	ldr	r3, [r4, #32]
   4192c:	ldr	r1, [r4, #16]
   41930:	mla	r6, r3, r2, r0
   41934:	mul	r5, r3, r2
   41938:	cmp	r6, r1
   4193c:	bls	418bc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   41940:	cmp	r0, r1
   41944:	bcc	41960 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x278>
   41948:	ldr	r2, [r4, #44]	; 0x2c
   4194c:	mov	r0, r4
   41950:	mov	r1, #0
   41954:	blx	r2
   41958:	ldr	r1, [r4, #16]
   4195c:	ldr	r0, [r4, #20]
   41960:	sub	r6, r1, r0
   41964:	cmp	r6, r5
   41968:	bcs	418bc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   4196c:	mov	r1, #32
   41970:	mov	r2, r6
   41974:	bl	14eec <memset@plt>
   41978:	ldr	r0, [r4, #20]
   4197c:	ldr	r2, [r4, #44]	; 0x2c
   41980:	mov	r1, #0
   41984:	add	r0, r0, r6
   41988:	str	r0, [r4, #20]
   4198c:	mov	r0, r4
   41990:	blx	r2
   41994:	ldr	r1, [r4, #16]
   41998:	ldr	r0, [r4, #20]
   4199c:	sub	r5, r5, r6
   419a0:	sub	r6, r1, r0
   419a4:	cmp	r5, r6
   419a8:	bhi	4196c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x284>
   419ac:	b	418bc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   419b0:	ldr	r1, [r4, #16]
   419b4:	cmp	r0, r1
   419b8:	bcc	418d4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
   419bc:	ldr	r2, [r4, #44]	; 0x2c
   419c0:	mov	r0, r4
   419c4:	mov	r1, #0
   419c8:	blx	r2
   419cc:	b	418d4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
   419d0:	ldrb	r1, [r4, #25]
   419d4:	ldr	r0, [r4, #20]
   419d8:	cmp	r1, #0
   419dc:	beq	41a9c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b4>
   419e0:	add	r1, r0, #1
   419e4:	str	r1, [r4, #20]
   419e8:	mov	r1, #10
   419ec:	strb	r1, [r0]
   419f0:	ldr	r0, [r4, #32]
   419f4:	sub	r2, r0, #1
   419f8:	str	r2, [r4, #32]
   419fc:	ldrb	r3, [r4, #25]
   41a00:	ldr	r0, [r4, #20]
   41a04:	ldr	r1, [r4, #16]
   41a08:	mla	r7, r2, r3, r0
   41a0c:	mul	r5, r2, r3
   41a10:	cmp	r7, r1
   41a14:	bls	41a84 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x39c>
   41a18:	cmp	r0, r1
   41a1c:	bcc	41a38 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x350>
   41a20:	ldr	r2, [r4, #44]	; 0x2c
   41a24:	mov	r0, r4
   41a28:	mov	r1, #0
   41a2c:	blx	r2
   41a30:	ldr	r1, [r4, #16]
   41a34:	ldr	r0, [r4, #20]
   41a38:	sub	r6, r1, r0
   41a3c:	cmp	r6, r5
   41a40:	bcs	41a84 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x39c>
   41a44:	mov	r1, #32
   41a48:	mov	r2, r6
   41a4c:	bl	14eec <memset@plt>
   41a50:	ldr	r0, [r4, #20]
   41a54:	ldr	r2, [r4, #44]	; 0x2c
   41a58:	mov	r1, #0
   41a5c:	add	r0, r0, r6
   41a60:	str	r0, [r4, #20]
   41a64:	mov	r0, r4
   41a68:	blx	r2
   41a6c:	ldr	r1, [r4, #16]
   41a70:	ldr	r0, [r4, #20]
   41a74:	sub	r5, r5, r6
   41a78:	sub	r6, r1, r0
   41a7c:	cmp	r5, r6
   41a80:	bhi	41a44 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x35c>
   41a84:	mov	r1, #32
   41a88:	mov	r2, r5
   41a8c:	bl	14eec <memset@plt>
   41a90:	ldr	r0, [r4, #20]
   41a94:	add	r0, r0, r5
   41a98:	str	r0, [r4, #20]
   41a9c:	add	r1, r0, #1
   41aa0:	str	r1, [r4, #20]
   41aa4:	mov	r1, #93	; 0x5d
   41aa8:	strb	r1, [r0]
   41aac:	sub	sp, fp, #28
   41ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041ab4 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   41ab4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41ab8:	add	fp, sp, #28
   41abc:	sub	sp, sp, #4
   41ac0:	mov	r4, r0
   41ac4:	ldrb	r0, [r0, #27]
   41ac8:	cmp	r0, #0
   41acc:	beq	41ae0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   41ad0:	mov	r0, r4
   41ad4:	sub	sp, fp, #28
   41ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41adc:	b	3eaac <flatcc_json_printer_int8_vector_field@@Base>
   41ae0:	mov	r0, #4
   41ae4:	add	r0, r0, r2, lsl #1
   41ae8:	ldr	r2, [r1, #8]
   41aec:	cmp	r0, r2
   41af0:	bge	41b10 <flatcc_json_printer_int8_enum_vector_field@@Base+0x5c>
   41af4:	ldr	r2, [r1, #4]
   41af8:	add	r0, r2, r0
   41afc:	ldrh	r0, [r0]
   41b00:	cmp	r0, #0
   41b04:	ldrne	r2, [r1]
   41b08:	addsne	r8, r2, r0
   41b0c:	bne	41b18 <flatcc_json_printer_int8_enum_vector_field@@Base+0x64>
   41b10:	sub	sp, fp, #28
   41b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41b18:	ldr	r0, [r1, #16]
   41b1c:	ldr	sl, [fp, #12]
   41b20:	ldr	r2, [fp, #8]
   41b24:	add	r7, r0, #1
   41b28:	cmp	r0, #0
   41b2c:	str	r7, [r1, #16]
   41b30:	beq	41b48 <flatcc_json_printer_int8_enum_vector_field@@Base+0x94>
   41b34:	ldr	r0, [r4, #20]
   41b38:	add	r1, r0, #1
   41b3c:	str	r1, [r4, #20]
   41b40:	mov	r1, #44	; 0x2c
   41b44:	strb	r1, [r0]
   41b48:	ldr	r0, [r8]
   41b4c:	mov	r1, r3
   41b50:	ldr	r9, [r8, r0]!
   41b54:	mov	r0, r4
   41b58:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   41b5c:	ldr	r1, [r4, #32]
   41b60:	ldr	r0, [r4, #20]
   41b64:	cmp	r9, #0
   41b68:	add	r1, r1, #1
   41b6c:	str	r1, [r4, #32]
   41b70:	add	r1, r0, #1
   41b74:	str	r1, [r4, #20]
   41b78:	mov	r1, #91	; 0x5b
   41b7c:	strb	r1, [r0]
   41b80:	beq	41d98 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   41b84:	ldrb	r1, [r4, #25]
   41b88:	ldr	r0, [r4, #20]
   41b8c:	cmp	r1, #0
   41b90:	beq	41c4c <flatcc_json_printer_int8_enum_vector_field@@Base+0x198>
   41b94:	add	r1, r0, #1
   41b98:	str	r1, [r4, #20]
   41b9c:	mov	r1, #10
   41ba0:	strb	r1, [r0]
   41ba4:	ldr	r0, [r4, #20]
   41ba8:	ldrb	r2, [r4, #25]
   41bac:	ldr	r3, [r4, #32]
   41bb0:	ldr	r1, [r4, #16]
   41bb4:	mla	r7, r3, r2, r0
   41bb8:	mul	r5, r3, r2
   41bbc:	cmp	r7, r1
   41bc0:	bls	41c30 <flatcc_json_printer_int8_enum_vector_field@@Base+0x17c>
   41bc4:	cmp	r0, r1
   41bc8:	bcc	41be4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x130>
   41bcc:	ldr	r2, [r4, #44]	; 0x2c
   41bd0:	mov	r0, r4
   41bd4:	mov	r1, #0
   41bd8:	blx	r2
   41bdc:	ldr	r1, [r4, #16]
   41be0:	ldr	r0, [r4, #20]
   41be4:	sub	r6, r1, r0
   41be8:	cmp	r6, r5
   41bec:	bcs	41c30 <flatcc_json_printer_int8_enum_vector_field@@Base+0x17c>
   41bf0:	mov	r1, #32
   41bf4:	mov	r2, r6
   41bf8:	bl	14eec <memset@plt>
   41bfc:	ldr	r0, [r4, #20]
   41c00:	ldr	r2, [r4, #44]	; 0x2c
   41c04:	mov	r1, #0
   41c08:	add	r0, r0, r6
   41c0c:	str	r0, [r4, #20]
   41c10:	mov	r0, r4
   41c14:	blx	r2
   41c18:	ldr	r1, [r4, #16]
   41c1c:	ldr	r0, [r4, #20]
   41c20:	sub	r5, r5, r6
   41c24:	sub	r6, r1, r0
   41c28:	cmp	r5, r6
   41c2c:	bhi	41bf0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x13c>
   41c30:	mov	r1, #32
   41c34:	mov	r2, r5
   41c38:	bl	14eec <memset@plt>
   41c3c:	ldr	r0, [r4, #20]
   41c40:	add	r0, r0, r5
   41c44:	str	r0, [r4, #20]
   41c48:	b	41c68 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b4>
   41c4c:	ldr	r1, [r4, #16]
   41c50:	cmp	r0, r1
   41c54:	bcc	41c68 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b4>
   41c58:	ldr	r2, [r4, #44]	; 0x2c
   41c5c:	mov	r0, r4
   41c60:	mov	r1, #0
   41c64:	blx	r2
   41c68:	ldrsb	r1, [r8, #4]
   41c6c:	mov	r0, r4
   41c70:	blx	sl
   41c74:	subs	r9, r9, #1
   41c78:	beq	41d98 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   41c7c:	add	r7, r8, #5
   41c80:	mov	r8, #44	; 0x2c
   41c84:	b	41cb4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x200>
   41c88:	mov	r1, #32
   41c8c:	mov	r2, r5
   41c90:	bl	14eec <memset@plt>
   41c94:	ldr	r0, [r4, #20]
   41c98:	add	r0, r0, r5
   41c9c:	str	r0, [r4, #20]
   41ca0:	ldrsb	r1, [r7], #1
   41ca4:	mov	r0, r4
   41ca8:	blx	sl
   41cac:	cmp	r9, #0
   41cb0:	beq	41d98 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   41cb4:	ldr	r0, [r4, #20]
   41cb8:	sub	r9, r9, #1
   41cbc:	add	r1, r0, #1
   41cc0:	str	r1, [r4, #20]
   41cc4:	strb	r8, [r0]
   41cc8:	ldrb	r1, [r4, #25]
   41ccc:	ldr	r0, [r4, #20]
   41cd0:	cmp	r1, #0
   41cd4:	beq	41d78 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   41cd8:	add	r1, r0, #1
   41cdc:	str	r1, [r4, #20]
   41ce0:	mov	r1, #10
   41ce4:	strb	r1, [r0]
   41ce8:	ldr	r0, [r4, #20]
   41cec:	ldrb	r2, [r4, #25]
   41cf0:	ldr	r3, [r4, #32]
   41cf4:	ldr	r1, [r4, #16]
   41cf8:	mla	r6, r3, r2, r0
   41cfc:	mul	r5, r3, r2
   41d00:	cmp	r6, r1
   41d04:	bls	41c88 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   41d08:	cmp	r0, r1
   41d0c:	bcc	41d28 <flatcc_json_printer_int8_enum_vector_field@@Base+0x274>
   41d10:	ldr	r2, [r4, #44]	; 0x2c
   41d14:	mov	r0, r4
   41d18:	mov	r1, #0
   41d1c:	blx	r2
   41d20:	ldr	r1, [r4, #16]
   41d24:	ldr	r0, [r4, #20]
   41d28:	sub	r6, r1, r0
   41d2c:	cmp	r6, r5
   41d30:	bcs	41c88 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   41d34:	mov	r1, #32
   41d38:	mov	r2, r6
   41d3c:	bl	14eec <memset@plt>
   41d40:	ldr	r0, [r4, #20]
   41d44:	ldr	r2, [r4, #44]	; 0x2c
   41d48:	mov	r1, #0
   41d4c:	add	r0, r0, r6
   41d50:	str	r0, [r4, #20]
   41d54:	mov	r0, r4
   41d58:	blx	r2
   41d5c:	ldr	r1, [r4, #16]
   41d60:	ldr	r0, [r4, #20]
   41d64:	sub	r5, r5, r6
   41d68:	sub	r6, r1, r0
   41d6c:	cmp	r5, r6
   41d70:	bhi	41d34 <flatcc_json_printer_int8_enum_vector_field@@Base+0x280>
   41d74:	b	41c88 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   41d78:	ldr	r1, [r4, #16]
   41d7c:	cmp	r0, r1
   41d80:	bcc	41ca0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
   41d84:	ldr	r2, [r4, #44]	; 0x2c
   41d88:	mov	r0, r4
   41d8c:	mov	r1, #0
   41d90:	blx	r2
   41d94:	b	41ca0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
   41d98:	ldrb	r1, [r4, #25]
   41d9c:	ldr	r0, [r4, #20]
   41da0:	cmp	r1, #0
   41da4:	beq	41e64 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3b0>
   41da8:	add	r1, r0, #1
   41dac:	str	r1, [r4, #20]
   41db0:	mov	r1, #10
   41db4:	strb	r1, [r0]
   41db8:	ldr	r0, [r4, #32]
   41dbc:	sub	r2, r0, #1
   41dc0:	str	r2, [r4, #32]
   41dc4:	ldrb	r3, [r4, #25]
   41dc8:	ldr	r0, [r4, #20]
   41dcc:	ldr	r1, [r4, #16]
   41dd0:	mla	r7, r2, r3, r0
   41dd4:	mul	r5, r2, r3
   41dd8:	cmp	r7, r1
   41ddc:	bls	41e4c <flatcc_json_printer_int8_enum_vector_field@@Base+0x398>
   41de0:	cmp	r0, r1
   41de4:	bcc	41e00 <flatcc_json_printer_int8_enum_vector_field@@Base+0x34c>
   41de8:	ldr	r2, [r4, #44]	; 0x2c
   41dec:	mov	r0, r4
   41df0:	mov	r1, #0
   41df4:	blx	r2
   41df8:	ldr	r1, [r4, #16]
   41dfc:	ldr	r0, [r4, #20]
   41e00:	sub	r6, r1, r0
   41e04:	cmp	r6, r5
   41e08:	bcs	41e4c <flatcc_json_printer_int8_enum_vector_field@@Base+0x398>
   41e0c:	mov	r1, #32
   41e10:	mov	r2, r6
   41e14:	bl	14eec <memset@plt>
   41e18:	ldr	r0, [r4, #20]
   41e1c:	ldr	r2, [r4, #44]	; 0x2c
   41e20:	mov	r1, #0
   41e24:	add	r0, r0, r6
   41e28:	str	r0, [r4, #20]
   41e2c:	mov	r0, r4
   41e30:	blx	r2
   41e34:	ldr	r1, [r4, #16]
   41e38:	ldr	r0, [r4, #20]
   41e3c:	sub	r5, r5, r6
   41e40:	sub	r6, r1, r0
   41e44:	cmp	r5, r6
   41e48:	bhi	41e0c <flatcc_json_printer_int8_enum_vector_field@@Base+0x358>
   41e4c:	mov	r1, #32
   41e50:	mov	r2, r5
   41e54:	bl	14eec <memset@plt>
   41e58:	ldr	r0, [r4, #20]
   41e5c:	add	r0, r0, r5
   41e60:	str	r0, [r4, #20]
   41e64:	add	r1, r0, #1
   41e68:	str	r1, [r4, #20]
   41e6c:	mov	r1, #93	; 0x5d
   41e70:	strb	r1, [r0]
   41e74:	sub	sp, fp, #28
   41e78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041e7c <flatcc_json_printer_int16_enum_vector_field@@Base>:
   41e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41e80:	add	fp, sp, #28
   41e84:	sub	sp, sp, #4
   41e88:	mov	r4, r0
   41e8c:	ldrb	r0, [r0, #27]
   41e90:	cmp	r0, #0
   41e94:	beq	41ea8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   41e98:	mov	r0, r4
   41e9c:	sub	sp, fp, #28
   41ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41ea4:	b	3eff4 <flatcc_json_printer_int16_vector_field@@Base>
   41ea8:	mov	r0, #4
   41eac:	add	r0, r0, r2, lsl #1
   41eb0:	ldr	r2, [r1, #8]
   41eb4:	cmp	r0, r2
   41eb8:	bge	41ed8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x5c>
   41ebc:	ldr	r2, [r1, #4]
   41ec0:	add	r0, r2, r0
   41ec4:	ldrh	r0, [r0]
   41ec8:	cmp	r0, #0
   41ecc:	ldrne	r2, [r1]
   41ed0:	addsne	r8, r2, r0
   41ed4:	bne	41ee0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x64>
   41ed8:	sub	sp, fp, #28
   41edc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41ee0:	ldr	r0, [r1, #16]
   41ee4:	ldr	sl, [fp, #12]
   41ee8:	ldr	r2, [fp, #8]
   41eec:	add	r7, r0, #1
   41ef0:	cmp	r0, #0
   41ef4:	str	r7, [r1, #16]
   41ef8:	beq	41f10 <flatcc_json_printer_int16_enum_vector_field@@Base+0x94>
   41efc:	ldr	r0, [r4, #20]
   41f00:	add	r1, r0, #1
   41f04:	str	r1, [r4, #20]
   41f08:	mov	r1, #44	; 0x2c
   41f0c:	strb	r1, [r0]
   41f10:	ldr	r0, [r8]
   41f14:	mov	r1, r3
   41f18:	ldr	r9, [r8, r0]!
   41f1c:	mov	r0, r4
   41f20:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   41f24:	ldr	r1, [r4, #32]
   41f28:	ldr	r0, [r4, #20]
   41f2c:	cmp	r9, #0
   41f30:	add	r1, r1, #1
   41f34:	str	r1, [r4, #32]
   41f38:	add	r1, r0, #1
   41f3c:	str	r1, [r4, #20]
   41f40:	mov	r1, #91	; 0x5b
   41f44:	strb	r1, [r0]
   41f48:	beq	42160 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   41f4c:	ldrb	r1, [r4, #25]
   41f50:	ldr	r0, [r4, #20]
   41f54:	cmp	r1, #0
   41f58:	beq	42014 <flatcc_json_printer_int16_enum_vector_field@@Base+0x198>
   41f5c:	add	r1, r0, #1
   41f60:	str	r1, [r4, #20]
   41f64:	mov	r1, #10
   41f68:	strb	r1, [r0]
   41f6c:	ldr	r0, [r4, #20]
   41f70:	ldrb	r2, [r4, #25]
   41f74:	ldr	r3, [r4, #32]
   41f78:	ldr	r1, [r4, #16]
   41f7c:	mla	r7, r3, r2, r0
   41f80:	mul	r5, r3, r2
   41f84:	cmp	r7, r1
   41f88:	bls	41ff8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x17c>
   41f8c:	cmp	r0, r1
   41f90:	bcc	41fac <flatcc_json_printer_int16_enum_vector_field@@Base+0x130>
   41f94:	ldr	r2, [r4, #44]	; 0x2c
   41f98:	mov	r0, r4
   41f9c:	mov	r1, #0
   41fa0:	blx	r2
   41fa4:	ldr	r1, [r4, #16]
   41fa8:	ldr	r0, [r4, #20]
   41fac:	sub	r6, r1, r0
   41fb0:	cmp	r6, r5
   41fb4:	bcs	41ff8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x17c>
   41fb8:	mov	r1, #32
   41fbc:	mov	r2, r6
   41fc0:	bl	14eec <memset@plt>
   41fc4:	ldr	r0, [r4, #20]
   41fc8:	ldr	r2, [r4, #44]	; 0x2c
   41fcc:	mov	r1, #0
   41fd0:	add	r0, r0, r6
   41fd4:	str	r0, [r4, #20]
   41fd8:	mov	r0, r4
   41fdc:	blx	r2
   41fe0:	ldr	r1, [r4, #16]
   41fe4:	ldr	r0, [r4, #20]
   41fe8:	sub	r5, r5, r6
   41fec:	sub	r6, r1, r0
   41ff0:	cmp	r5, r6
   41ff4:	bhi	41fb8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x13c>
   41ff8:	mov	r1, #32
   41ffc:	mov	r2, r5
   42000:	bl	14eec <memset@plt>
   42004:	ldr	r0, [r4, #20]
   42008:	add	r0, r0, r5
   4200c:	str	r0, [r4, #20]
   42010:	b	42030 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   42014:	ldr	r1, [r4, #16]
   42018:	cmp	r0, r1
   4201c:	bcc	42030 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   42020:	ldr	r2, [r4, #44]	; 0x2c
   42024:	mov	r0, r4
   42028:	mov	r1, #0
   4202c:	blx	r2
   42030:	ldrsh	r1, [r8, #4]
   42034:	mov	r0, r4
   42038:	blx	sl
   4203c:	subs	r9, r9, #1
   42040:	beq	42160 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   42044:	add	r7, r8, #6
   42048:	mov	r8, #44	; 0x2c
   4204c:	b	4207c <flatcc_json_printer_int16_enum_vector_field@@Base+0x200>
   42050:	mov	r1, #32
   42054:	mov	r2, r5
   42058:	bl	14eec <memset@plt>
   4205c:	ldr	r0, [r4, #20]
   42060:	add	r0, r0, r5
   42064:	str	r0, [r4, #20]
   42068:	ldrsh	r1, [r7], #2
   4206c:	mov	r0, r4
   42070:	blx	sl
   42074:	cmp	r9, #0
   42078:	beq	42160 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   4207c:	ldr	r0, [r4, #20]
   42080:	sub	r9, r9, #1
   42084:	add	r1, r0, #1
   42088:	str	r1, [r4, #20]
   4208c:	strb	r8, [r0]
   42090:	ldrb	r1, [r4, #25]
   42094:	ldr	r0, [r4, #20]
   42098:	cmp	r1, #0
   4209c:	beq	42140 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   420a0:	add	r1, r0, #1
   420a4:	str	r1, [r4, #20]
   420a8:	mov	r1, #10
   420ac:	strb	r1, [r0]
   420b0:	ldr	r0, [r4, #20]
   420b4:	ldrb	r2, [r4, #25]
   420b8:	ldr	r3, [r4, #32]
   420bc:	ldr	r1, [r4, #16]
   420c0:	mla	r6, r3, r2, r0
   420c4:	mul	r5, r3, r2
   420c8:	cmp	r6, r1
   420cc:	bls	42050 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   420d0:	cmp	r0, r1
   420d4:	bcc	420f0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x274>
   420d8:	ldr	r2, [r4, #44]	; 0x2c
   420dc:	mov	r0, r4
   420e0:	mov	r1, #0
   420e4:	blx	r2
   420e8:	ldr	r1, [r4, #16]
   420ec:	ldr	r0, [r4, #20]
   420f0:	sub	r6, r1, r0
   420f4:	cmp	r6, r5
   420f8:	bcs	42050 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   420fc:	mov	r1, #32
   42100:	mov	r2, r6
   42104:	bl	14eec <memset@plt>
   42108:	ldr	r0, [r4, #20]
   4210c:	ldr	r2, [r4, #44]	; 0x2c
   42110:	mov	r1, #0
   42114:	add	r0, r0, r6
   42118:	str	r0, [r4, #20]
   4211c:	mov	r0, r4
   42120:	blx	r2
   42124:	ldr	r1, [r4, #16]
   42128:	ldr	r0, [r4, #20]
   4212c:	sub	r5, r5, r6
   42130:	sub	r6, r1, r0
   42134:	cmp	r5, r6
   42138:	bhi	420fc <flatcc_json_printer_int16_enum_vector_field@@Base+0x280>
   4213c:	b	42050 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   42140:	ldr	r1, [r4, #16]
   42144:	cmp	r0, r1
   42148:	bcc	42068 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   4214c:	ldr	r2, [r4, #44]	; 0x2c
   42150:	mov	r0, r4
   42154:	mov	r1, #0
   42158:	blx	r2
   4215c:	b	42068 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   42160:	ldrb	r1, [r4, #25]
   42164:	ldr	r0, [r4, #20]
   42168:	cmp	r1, #0
   4216c:	beq	4222c <flatcc_json_printer_int16_enum_vector_field@@Base+0x3b0>
   42170:	add	r1, r0, #1
   42174:	str	r1, [r4, #20]
   42178:	mov	r1, #10
   4217c:	strb	r1, [r0]
   42180:	ldr	r0, [r4, #32]
   42184:	sub	r2, r0, #1
   42188:	str	r2, [r4, #32]
   4218c:	ldrb	r3, [r4, #25]
   42190:	ldr	r0, [r4, #20]
   42194:	ldr	r1, [r4, #16]
   42198:	mla	r7, r2, r3, r0
   4219c:	mul	r5, r2, r3
   421a0:	cmp	r7, r1
   421a4:	bls	42214 <flatcc_json_printer_int16_enum_vector_field@@Base+0x398>
   421a8:	cmp	r0, r1
   421ac:	bcc	421c8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x34c>
   421b0:	ldr	r2, [r4, #44]	; 0x2c
   421b4:	mov	r0, r4
   421b8:	mov	r1, #0
   421bc:	blx	r2
   421c0:	ldr	r1, [r4, #16]
   421c4:	ldr	r0, [r4, #20]
   421c8:	sub	r6, r1, r0
   421cc:	cmp	r6, r5
   421d0:	bcs	42214 <flatcc_json_printer_int16_enum_vector_field@@Base+0x398>
   421d4:	mov	r1, #32
   421d8:	mov	r2, r6
   421dc:	bl	14eec <memset@plt>
   421e0:	ldr	r0, [r4, #20]
   421e4:	ldr	r2, [r4, #44]	; 0x2c
   421e8:	mov	r1, #0
   421ec:	add	r0, r0, r6
   421f0:	str	r0, [r4, #20]
   421f4:	mov	r0, r4
   421f8:	blx	r2
   421fc:	ldr	r1, [r4, #16]
   42200:	ldr	r0, [r4, #20]
   42204:	sub	r5, r5, r6
   42208:	sub	r6, r1, r0
   4220c:	cmp	r5, r6
   42210:	bhi	421d4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x358>
   42214:	mov	r1, #32
   42218:	mov	r2, r5
   4221c:	bl	14eec <memset@plt>
   42220:	ldr	r0, [r4, #20]
   42224:	add	r0, r0, r5
   42228:	str	r0, [r4, #20]
   4222c:	add	r1, r0, #1
   42230:	str	r1, [r4, #20]
   42234:	mov	r1, #93	; 0x5d
   42238:	strb	r1, [r0]
   4223c:	sub	sp, fp, #28
   42240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042244 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   42244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42248:	add	fp, sp, #28
   4224c:	sub	sp, sp, #4
   42250:	mov	r4, r0
   42254:	ldrb	r0, [r0, #27]
   42258:	cmp	r0, #0
   4225c:	beq	42270 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   42260:	mov	r0, r4
   42264:	sub	sp, fp, #28
   42268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4226c:	b	3f3f8 <flatcc_json_printer_int32_vector_field@@Base>
   42270:	mov	r0, #4
   42274:	add	r0, r0, r2, lsl #1
   42278:	ldr	r2, [r1, #8]
   4227c:	cmp	r0, r2
   42280:	bge	422a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x5c>
   42284:	ldr	r2, [r1, #4]
   42288:	add	r0, r2, r0
   4228c:	ldrh	r0, [r0]
   42290:	cmp	r0, #0
   42294:	ldrne	r2, [r1]
   42298:	addsne	r8, r2, r0
   4229c:	bne	422a8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x64>
   422a0:	sub	sp, fp, #28
   422a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   422a8:	ldr	r0, [r1, #16]
   422ac:	ldr	sl, [fp, #12]
   422b0:	ldr	r2, [fp, #8]
   422b4:	add	r7, r0, #1
   422b8:	cmp	r0, #0
   422bc:	str	r7, [r1, #16]
   422c0:	beq	422d8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x94>
   422c4:	ldr	r0, [r4, #20]
   422c8:	add	r1, r0, #1
   422cc:	str	r1, [r4, #20]
   422d0:	mov	r1, #44	; 0x2c
   422d4:	strb	r1, [r0]
   422d8:	ldr	r0, [r8]
   422dc:	mov	r1, r3
   422e0:	ldr	r9, [r8, r0]!
   422e4:	mov	r0, r4
   422e8:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   422ec:	ldr	r1, [r4, #32]
   422f0:	ldr	r0, [r4, #20]
   422f4:	cmp	r9, #0
   422f8:	add	r1, r1, #1
   422fc:	str	r1, [r4, #32]
   42300:	add	r1, r0, #1
   42304:	str	r1, [r4, #20]
   42308:	mov	r1, #91	; 0x5b
   4230c:	strb	r1, [r0]
   42310:	beq	42528 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   42314:	ldrb	r1, [r4, #25]
   42318:	ldr	r0, [r4, #20]
   4231c:	cmp	r1, #0
   42320:	beq	423dc <flatcc_json_printer_int32_enum_vector_field@@Base+0x198>
   42324:	add	r1, r0, #1
   42328:	str	r1, [r4, #20]
   4232c:	mov	r1, #10
   42330:	strb	r1, [r0]
   42334:	ldr	r0, [r4, #20]
   42338:	ldrb	r2, [r4, #25]
   4233c:	ldr	r3, [r4, #32]
   42340:	ldr	r1, [r4, #16]
   42344:	mla	r7, r3, r2, r0
   42348:	mul	r5, r3, r2
   4234c:	cmp	r7, r1
   42350:	bls	423c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x17c>
   42354:	cmp	r0, r1
   42358:	bcc	42374 <flatcc_json_printer_int32_enum_vector_field@@Base+0x130>
   4235c:	ldr	r2, [r4, #44]	; 0x2c
   42360:	mov	r0, r4
   42364:	mov	r1, #0
   42368:	blx	r2
   4236c:	ldr	r1, [r4, #16]
   42370:	ldr	r0, [r4, #20]
   42374:	sub	r6, r1, r0
   42378:	cmp	r6, r5
   4237c:	bcs	423c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x17c>
   42380:	mov	r1, #32
   42384:	mov	r2, r6
   42388:	bl	14eec <memset@plt>
   4238c:	ldr	r0, [r4, #20]
   42390:	ldr	r2, [r4, #44]	; 0x2c
   42394:	mov	r1, #0
   42398:	add	r0, r0, r6
   4239c:	str	r0, [r4, #20]
   423a0:	mov	r0, r4
   423a4:	blx	r2
   423a8:	ldr	r1, [r4, #16]
   423ac:	ldr	r0, [r4, #20]
   423b0:	sub	r5, r5, r6
   423b4:	sub	r6, r1, r0
   423b8:	cmp	r5, r6
   423bc:	bhi	42380 <flatcc_json_printer_int32_enum_vector_field@@Base+0x13c>
   423c0:	mov	r1, #32
   423c4:	mov	r2, r5
   423c8:	bl	14eec <memset@plt>
   423cc:	ldr	r0, [r4, #20]
   423d0:	add	r0, r0, r5
   423d4:	str	r0, [r4, #20]
   423d8:	b	423f8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   423dc:	ldr	r1, [r4, #16]
   423e0:	cmp	r0, r1
   423e4:	bcc	423f8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   423e8:	ldr	r2, [r4, #44]	; 0x2c
   423ec:	mov	r0, r4
   423f0:	mov	r1, #0
   423f4:	blx	r2
   423f8:	ldr	r1, [r8, #4]
   423fc:	mov	r0, r4
   42400:	blx	sl
   42404:	subs	r9, r9, #1
   42408:	beq	42528 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   4240c:	add	r7, r8, #8
   42410:	mov	r8, #44	; 0x2c
   42414:	b	42444 <flatcc_json_printer_int32_enum_vector_field@@Base+0x200>
   42418:	mov	r1, #32
   4241c:	mov	r2, r5
   42420:	bl	14eec <memset@plt>
   42424:	ldr	r0, [r4, #20]
   42428:	add	r0, r0, r5
   4242c:	str	r0, [r4, #20]
   42430:	ldr	r1, [r7], #4
   42434:	mov	r0, r4
   42438:	blx	sl
   4243c:	cmp	r9, #0
   42440:	beq	42528 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   42444:	ldr	r0, [r4, #20]
   42448:	sub	r9, r9, #1
   4244c:	add	r1, r0, #1
   42450:	str	r1, [r4, #20]
   42454:	strb	r8, [r0]
   42458:	ldrb	r1, [r4, #25]
   4245c:	ldr	r0, [r4, #20]
   42460:	cmp	r1, #0
   42464:	beq	42508 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   42468:	add	r1, r0, #1
   4246c:	str	r1, [r4, #20]
   42470:	mov	r1, #10
   42474:	strb	r1, [r0]
   42478:	ldr	r0, [r4, #20]
   4247c:	ldrb	r2, [r4, #25]
   42480:	ldr	r3, [r4, #32]
   42484:	ldr	r1, [r4, #16]
   42488:	mla	r6, r3, r2, r0
   4248c:	mul	r5, r3, r2
   42490:	cmp	r6, r1
   42494:	bls	42418 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   42498:	cmp	r0, r1
   4249c:	bcc	424b8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x274>
   424a0:	ldr	r2, [r4, #44]	; 0x2c
   424a4:	mov	r0, r4
   424a8:	mov	r1, #0
   424ac:	blx	r2
   424b0:	ldr	r1, [r4, #16]
   424b4:	ldr	r0, [r4, #20]
   424b8:	sub	r6, r1, r0
   424bc:	cmp	r6, r5
   424c0:	bcs	42418 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   424c4:	mov	r1, #32
   424c8:	mov	r2, r6
   424cc:	bl	14eec <memset@plt>
   424d0:	ldr	r0, [r4, #20]
   424d4:	ldr	r2, [r4, #44]	; 0x2c
   424d8:	mov	r1, #0
   424dc:	add	r0, r0, r6
   424e0:	str	r0, [r4, #20]
   424e4:	mov	r0, r4
   424e8:	blx	r2
   424ec:	ldr	r1, [r4, #16]
   424f0:	ldr	r0, [r4, #20]
   424f4:	sub	r5, r5, r6
   424f8:	sub	r6, r1, r0
   424fc:	cmp	r5, r6
   42500:	bhi	424c4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x280>
   42504:	b	42418 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   42508:	ldr	r1, [r4, #16]
   4250c:	cmp	r0, r1
   42510:	bcc	42430 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
   42514:	ldr	r2, [r4, #44]	; 0x2c
   42518:	mov	r0, r4
   4251c:	mov	r1, #0
   42520:	blx	r2
   42524:	b	42430 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
   42528:	ldrb	r1, [r4, #25]
   4252c:	ldr	r0, [r4, #20]
   42530:	cmp	r1, #0
   42534:	beq	425f4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3b0>
   42538:	add	r1, r0, #1
   4253c:	str	r1, [r4, #20]
   42540:	mov	r1, #10
   42544:	strb	r1, [r0]
   42548:	ldr	r0, [r4, #32]
   4254c:	sub	r2, r0, #1
   42550:	str	r2, [r4, #32]
   42554:	ldrb	r3, [r4, #25]
   42558:	ldr	r0, [r4, #20]
   4255c:	ldr	r1, [r4, #16]
   42560:	mla	r7, r2, r3, r0
   42564:	mul	r5, r2, r3
   42568:	cmp	r7, r1
   4256c:	bls	425dc <flatcc_json_printer_int32_enum_vector_field@@Base+0x398>
   42570:	cmp	r0, r1
   42574:	bcc	42590 <flatcc_json_printer_int32_enum_vector_field@@Base+0x34c>
   42578:	ldr	r2, [r4, #44]	; 0x2c
   4257c:	mov	r0, r4
   42580:	mov	r1, #0
   42584:	blx	r2
   42588:	ldr	r1, [r4, #16]
   4258c:	ldr	r0, [r4, #20]
   42590:	sub	r6, r1, r0
   42594:	cmp	r6, r5
   42598:	bcs	425dc <flatcc_json_printer_int32_enum_vector_field@@Base+0x398>
   4259c:	mov	r1, #32
   425a0:	mov	r2, r6
   425a4:	bl	14eec <memset@plt>
   425a8:	ldr	r0, [r4, #20]
   425ac:	ldr	r2, [r4, #44]	; 0x2c
   425b0:	mov	r1, #0
   425b4:	add	r0, r0, r6
   425b8:	str	r0, [r4, #20]
   425bc:	mov	r0, r4
   425c0:	blx	r2
   425c4:	ldr	r1, [r4, #16]
   425c8:	ldr	r0, [r4, #20]
   425cc:	sub	r5, r5, r6
   425d0:	sub	r6, r1, r0
   425d4:	cmp	r5, r6
   425d8:	bhi	4259c <flatcc_json_printer_int32_enum_vector_field@@Base+0x358>
   425dc:	mov	r1, #32
   425e0:	mov	r2, r5
   425e4:	bl	14eec <memset@plt>
   425e8:	ldr	r0, [r4, #20]
   425ec:	add	r0, r0, r5
   425f0:	str	r0, [r4, #20]
   425f4:	add	r1, r0, #1
   425f8:	str	r1, [r4, #20]
   425fc:	mov	r1, #93	; 0x5d
   42600:	strb	r1, [r0]
   42604:	sub	sp, fp, #28
   42608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004260c <flatcc_json_printer_int64_enum_vector_field@@Base>:
   4260c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42610:	add	fp, sp, #28
   42614:	sub	sp, sp, #4
   42618:	mov	r4, r0
   4261c:	ldrb	r0, [r0, #27]
   42620:	cmp	r0, #0
   42624:	beq	42638 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   42628:	mov	r0, r4
   4262c:	sub	sp, fp, #28
   42630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42634:	b	3f7ec <flatcc_json_printer_int64_vector_field@@Base>
   42638:	mov	r0, #4
   4263c:	add	r0, r0, r2, lsl #1
   42640:	ldr	r2, [r1, #8]
   42644:	cmp	r0, r2
   42648:	bge	42668 <flatcc_json_printer_int64_enum_vector_field@@Base+0x5c>
   4264c:	ldr	r2, [r1, #4]
   42650:	add	r0, r2, r0
   42654:	ldrh	r0, [r0]
   42658:	cmp	r0, #0
   4265c:	ldrne	r2, [r1]
   42660:	addsne	r8, r2, r0
   42664:	bne	42670 <flatcc_json_printer_int64_enum_vector_field@@Base+0x64>
   42668:	sub	sp, fp, #28
   4266c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42670:	ldr	r0, [r1, #16]
   42674:	ldr	sl, [fp, #12]
   42678:	ldr	r2, [fp, #8]
   4267c:	add	r7, r0, #1
   42680:	cmp	r0, #0
   42684:	str	r7, [r1, #16]
   42688:	beq	426a0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x94>
   4268c:	ldr	r0, [r4, #20]
   42690:	add	r1, r0, #1
   42694:	str	r1, [r4, #20]
   42698:	mov	r1, #44	; 0x2c
   4269c:	strb	r1, [r0]
   426a0:	ldr	r0, [r8]
   426a4:	mov	r1, r3
   426a8:	ldr	r9, [r8, r0]!
   426ac:	mov	r0, r4
   426b0:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   426b4:	ldr	r1, [r4, #32]
   426b8:	ldr	r0, [r4, #20]
   426bc:	cmp	r9, #0
   426c0:	add	r1, r1, #1
   426c4:	str	r1, [r4, #32]
   426c8:	add	r1, r0, #1
   426cc:	str	r1, [r4, #20]
   426d0:	mov	r1, #91	; 0x5b
   426d4:	strb	r1, [r0]
   426d8:	beq	428f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   426dc:	ldrb	r1, [r4, #25]
   426e0:	ldr	r0, [r4, #20]
   426e4:	cmp	r1, #0
   426e8:	beq	427a4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x198>
   426ec:	add	r1, r0, #1
   426f0:	str	r1, [r4, #20]
   426f4:	mov	r1, #10
   426f8:	strb	r1, [r0]
   426fc:	ldr	r0, [r4, #20]
   42700:	ldrb	r2, [r4, #25]
   42704:	ldr	r3, [r4, #32]
   42708:	ldr	r1, [r4, #16]
   4270c:	mla	r7, r3, r2, r0
   42710:	mul	r5, r3, r2
   42714:	cmp	r7, r1
   42718:	bls	42788 <flatcc_json_printer_int64_enum_vector_field@@Base+0x17c>
   4271c:	cmp	r0, r1
   42720:	bcc	4273c <flatcc_json_printer_int64_enum_vector_field@@Base+0x130>
   42724:	ldr	r2, [r4, #44]	; 0x2c
   42728:	mov	r0, r4
   4272c:	mov	r1, #0
   42730:	blx	r2
   42734:	ldr	r1, [r4, #16]
   42738:	ldr	r0, [r4, #20]
   4273c:	sub	r6, r1, r0
   42740:	cmp	r6, r5
   42744:	bcs	42788 <flatcc_json_printer_int64_enum_vector_field@@Base+0x17c>
   42748:	mov	r1, #32
   4274c:	mov	r2, r6
   42750:	bl	14eec <memset@plt>
   42754:	ldr	r0, [r4, #20]
   42758:	ldr	r2, [r4, #44]	; 0x2c
   4275c:	mov	r1, #0
   42760:	add	r0, r0, r6
   42764:	str	r0, [r4, #20]
   42768:	mov	r0, r4
   4276c:	blx	r2
   42770:	ldr	r1, [r4, #16]
   42774:	ldr	r0, [r4, #20]
   42778:	sub	r5, r5, r6
   4277c:	sub	r6, r1, r0
   42780:	cmp	r5, r6
   42784:	bhi	42748 <flatcc_json_printer_int64_enum_vector_field@@Base+0x13c>
   42788:	mov	r1, #32
   4278c:	mov	r2, r5
   42790:	bl	14eec <memset@plt>
   42794:	ldr	r0, [r4, #20]
   42798:	add	r0, r0, r5
   4279c:	str	r0, [r4, #20]
   427a0:	b	427c0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   427a4:	ldr	r1, [r4, #16]
   427a8:	cmp	r0, r1
   427ac:	bcc	427c0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   427b0:	ldr	r2, [r4, #44]	; 0x2c
   427b4:	mov	r0, r4
   427b8:	mov	r1, #0
   427bc:	blx	r2
   427c0:	ldrd	r2, [r8, #4]
   427c4:	mov	r0, r4
   427c8:	blx	sl
   427cc:	subs	r9, r9, #1
   427d0:	beq	428f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   427d4:	add	r7, r8, #12
   427d8:	mov	r8, #44	; 0x2c
   427dc:	b	42810 <flatcc_json_printer_int64_enum_vector_field@@Base+0x204>
   427e0:	mov	r1, #32
   427e4:	mov	r2, r5
   427e8:	bl	14eec <memset@plt>
   427ec:	ldr	r0, [r4, #20]
   427f0:	add	r0, r0, r5
   427f4:	str	r0, [r4, #20]
   427f8:	ldrd	r2, [r7]
   427fc:	mov	r0, r4
   42800:	blx	sl
   42804:	add	r7, r7, #8
   42808:	cmp	r9, #0
   4280c:	beq	428f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   42810:	ldr	r0, [r4, #20]
   42814:	sub	r9, r9, #1
   42818:	add	r1, r0, #1
   4281c:	str	r1, [r4, #20]
   42820:	strb	r8, [r0]
   42824:	ldrb	r1, [r4, #25]
   42828:	ldr	r0, [r4, #20]
   4282c:	cmp	r1, #0
   42830:	beq	428d4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c8>
   42834:	add	r1, r0, #1
   42838:	str	r1, [r4, #20]
   4283c:	mov	r1, #10
   42840:	strb	r1, [r0]
   42844:	ldr	r0, [r4, #20]
   42848:	ldrb	r2, [r4, #25]
   4284c:	ldr	r3, [r4, #32]
   42850:	ldr	r1, [r4, #16]
   42854:	mla	r6, r3, r2, r0
   42858:	mul	r5, r3, r2
   4285c:	cmp	r6, r1
   42860:	bls	427e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   42864:	cmp	r0, r1
   42868:	bcc	42884 <flatcc_json_printer_int64_enum_vector_field@@Base+0x278>
   4286c:	ldr	r2, [r4, #44]	; 0x2c
   42870:	mov	r0, r4
   42874:	mov	r1, #0
   42878:	blx	r2
   4287c:	ldr	r1, [r4, #16]
   42880:	ldr	r0, [r4, #20]
   42884:	sub	r6, r1, r0
   42888:	cmp	r6, r5
   4288c:	bcs	427e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   42890:	mov	r1, #32
   42894:	mov	r2, r6
   42898:	bl	14eec <memset@plt>
   4289c:	ldr	r0, [r4, #20]
   428a0:	ldr	r2, [r4, #44]	; 0x2c
   428a4:	mov	r1, #0
   428a8:	add	r0, r0, r6
   428ac:	str	r0, [r4, #20]
   428b0:	mov	r0, r4
   428b4:	blx	r2
   428b8:	ldr	r1, [r4, #16]
   428bc:	ldr	r0, [r4, #20]
   428c0:	sub	r5, r5, r6
   428c4:	sub	r6, r1, r0
   428c8:	cmp	r5, r6
   428cc:	bhi	42890 <flatcc_json_printer_int64_enum_vector_field@@Base+0x284>
   428d0:	b	427e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   428d4:	ldr	r1, [r4, #16]
   428d8:	cmp	r0, r1
   428dc:	bcc	427f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
   428e0:	ldr	r2, [r4, #44]	; 0x2c
   428e4:	mov	r0, r4
   428e8:	mov	r1, #0
   428ec:	blx	r2
   428f0:	b	427f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
   428f4:	ldrb	r1, [r4, #25]
   428f8:	ldr	r0, [r4, #20]
   428fc:	cmp	r1, #0
   42900:	beq	429c0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b4>
   42904:	add	r1, r0, #1
   42908:	str	r1, [r4, #20]
   4290c:	mov	r1, #10
   42910:	strb	r1, [r0]
   42914:	ldr	r0, [r4, #32]
   42918:	sub	r2, r0, #1
   4291c:	str	r2, [r4, #32]
   42920:	ldrb	r3, [r4, #25]
   42924:	ldr	r0, [r4, #20]
   42928:	ldr	r1, [r4, #16]
   4292c:	mla	r7, r2, r3, r0
   42930:	mul	r5, r2, r3
   42934:	cmp	r7, r1
   42938:	bls	429a8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x39c>
   4293c:	cmp	r0, r1
   42940:	bcc	4295c <flatcc_json_printer_int64_enum_vector_field@@Base+0x350>
   42944:	ldr	r2, [r4, #44]	; 0x2c
   42948:	mov	r0, r4
   4294c:	mov	r1, #0
   42950:	blx	r2
   42954:	ldr	r1, [r4, #16]
   42958:	ldr	r0, [r4, #20]
   4295c:	sub	r6, r1, r0
   42960:	cmp	r6, r5
   42964:	bcs	429a8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x39c>
   42968:	mov	r1, #32
   4296c:	mov	r2, r6
   42970:	bl	14eec <memset@plt>
   42974:	ldr	r0, [r4, #20]
   42978:	ldr	r2, [r4, #44]	; 0x2c
   4297c:	mov	r1, #0
   42980:	add	r0, r0, r6
   42984:	str	r0, [r4, #20]
   42988:	mov	r0, r4
   4298c:	blx	r2
   42990:	ldr	r1, [r4, #16]
   42994:	ldr	r0, [r4, #20]
   42998:	sub	r5, r5, r6
   4299c:	sub	r6, r1, r0
   429a0:	cmp	r5, r6
   429a4:	bhi	42968 <flatcc_json_printer_int64_enum_vector_field@@Base+0x35c>
   429a8:	mov	r1, #32
   429ac:	mov	r2, r5
   429b0:	bl	14eec <memset@plt>
   429b4:	ldr	r0, [r4, #20]
   429b8:	add	r0, r0, r5
   429bc:	str	r0, [r4, #20]
   429c0:	add	r1, r0, #1
   429c4:	str	r1, [r4, #20]
   429c8:	mov	r1, #93	; 0x5d
   429cc:	strb	r1, [r0]
   429d0:	sub	sp, fp, #28
   429d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000429d8 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   429d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   429dc:	add	fp, sp, #28
   429e0:	sub	sp, sp, #4
   429e4:	mov	r4, r0
   429e8:	ldrb	r0, [r0, #27]
   429ec:	cmp	r0, #0
   429f0:	beq	42a04 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   429f4:	mov	r0, r4
   429f8:	sub	sp, fp, #28
   429fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42a00:	b	3fc00 <flatcc_json_printer_bool_vector_field@@Base>
   42a04:	mov	r0, #4
   42a08:	add	r0, r0, r2, lsl #1
   42a0c:	ldr	r2, [r1, #8]
   42a10:	cmp	r0, r2
   42a14:	bge	42a34 <flatcc_json_printer_bool_enum_vector_field@@Base+0x5c>
   42a18:	ldr	r2, [r1, #4]
   42a1c:	add	r0, r2, r0
   42a20:	ldrh	r0, [r0]
   42a24:	cmp	r0, #0
   42a28:	ldrne	r2, [r1]
   42a2c:	addsne	r8, r2, r0
   42a30:	bne	42a3c <flatcc_json_printer_bool_enum_vector_field@@Base+0x64>
   42a34:	sub	sp, fp, #28
   42a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42a3c:	ldr	r0, [r1, #16]
   42a40:	ldr	sl, [fp, #12]
   42a44:	ldr	r2, [fp, #8]
   42a48:	add	r7, r0, #1
   42a4c:	cmp	r0, #0
   42a50:	str	r7, [r1, #16]
   42a54:	beq	42a6c <flatcc_json_printer_bool_enum_vector_field@@Base+0x94>
   42a58:	ldr	r0, [r4, #20]
   42a5c:	add	r1, r0, #1
   42a60:	str	r1, [r4, #20]
   42a64:	mov	r1, #44	; 0x2c
   42a68:	strb	r1, [r0]
   42a6c:	ldr	r0, [r8]
   42a70:	mov	r1, r3
   42a74:	ldr	r9, [r8, r0]!
   42a78:	mov	r0, r4
   42a7c:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   42a80:	ldr	r1, [r4, #32]
   42a84:	ldr	r0, [r4, #20]
   42a88:	cmp	r9, #0
   42a8c:	add	r1, r1, #1
   42a90:	str	r1, [r4, #32]
   42a94:	add	r1, r0, #1
   42a98:	str	r1, [r4, #20]
   42a9c:	mov	r1, #91	; 0x5b
   42aa0:	strb	r1, [r0]
   42aa4:	beq	42cbc <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   42aa8:	ldrb	r1, [r4, #25]
   42aac:	ldr	r0, [r4, #20]
   42ab0:	cmp	r1, #0
   42ab4:	beq	42b70 <flatcc_json_printer_bool_enum_vector_field@@Base+0x198>
   42ab8:	add	r1, r0, #1
   42abc:	str	r1, [r4, #20]
   42ac0:	mov	r1, #10
   42ac4:	strb	r1, [r0]
   42ac8:	ldr	r0, [r4, #20]
   42acc:	ldrb	r2, [r4, #25]
   42ad0:	ldr	r3, [r4, #32]
   42ad4:	ldr	r1, [r4, #16]
   42ad8:	mla	r7, r3, r2, r0
   42adc:	mul	r5, r3, r2
   42ae0:	cmp	r7, r1
   42ae4:	bls	42b54 <flatcc_json_printer_bool_enum_vector_field@@Base+0x17c>
   42ae8:	cmp	r0, r1
   42aec:	bcc	42b08 <flatcc_json_printer_bool_enum_vector_field@@Base+0x130>
   42af0:	ldr	r2, [r4, #44]	; 0x2c
   42af4:	mov	r0, r4
   42af8:	mov	r1, #0
   42afc:	blx	r2
   42b00:	ldr	r1, [r4, #16]
   42b04:	ldr	r0, [r4, #20]
   42b08:	sub	r6, r1, r0
   42b0c:	cmp	r6, r5
   42b10:	bcs	42b54 <flatcc_json_printer_bool_enum_vector_field@@Base+0x17c>
   42b14:	mov	r1, #32
   42b18:	mov	r2, r6
   42b1c:	bl	14eec <memset@plt>
   42b20:	ldr	r0, [r4, #20]
   42b24:	ldr	r2, [r4, #44]	; 0x2c
   42b28:	mov	r1, #0
   42b2c:	add	r0, r0, r6
   42b30:	str	r0, [r4, #20]
   42b34:	mov	r0, r4
   42b38:	blx	r2
   42b3c:	ldr	r1, [r4, #16]
   42b40:	ldr	r0, [r4, #20]
   42b44:	sub	r5, r5, r6
   42b48:	sub	r6, r1, r0
   42b4c:	cmp	r5, r6
   42b50:	bhi	42b14 <flatcc_json_printer_bool_enum_vector_field@@Base+0x13c>
   42b54:	mov	r1, #32
   42b58:	mov	r2, r5
   42b5c:	bl	14eec <memset@plt>
   42b60:	ldr	r0, [r4, #20]
   42b64:	add	r0, r0, r5
   42b68:	str	r0, [r4, #20]
   42b6c:	b	42b8c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b4>
   42b70:	ldr	r1, [r4, #16]
   42b74:	cmp	r0, r1
   42b78:	bcc	42b8c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b4>
   42b7c:	ldr	r2, [r4, #44]	; 0x2c
   42b80:	mov	r0, r4
   42b84:	mov	r1, #0
   42b88:	blx	r2
   42b8c:	ldrb	r1, [r8, #4]
   42b90:	mov	r0, r4
   42b94:	blx	sl
   42b98:	subs	r9, r9, #1
   42b9c:	beq	42cbc <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   42ba0:	add	r7, r8, #5
   42ba4:	mov	r8, #44	; 0x2c
   42ba8:	b	42bd8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x200>
   42bac:	mov	r1, #32
   42bb0:	mov	r2, r5
   42bb4:	bl	14eec <memset@plt>
   42bb8:	ldr	r0, [r4, #20]
   42bbc:	add	r0, r0, r5
   42bc0:	str	r0, [r4, #20]
   42bc4:	ldrb	r1, [r7], #1
   42bc8:	mov	r0, r4
   42bcc:	blx	sl
   42bd0:	cmp	r9, #0
   42bd4:	beq	42cbc <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   42bd8:	ldr	r0, [r4, #20]
   42bdc:	sub	r9, r9, #1
   42be0:	add	r1, r0, #1
   42be4:	str	r1, [r4, #20]
   42be8:	strb	r8, [r0]
   42bec:	ldrb	r1, [r4, #25]
   42bf0:	ldr	r0, [r4, #20]
   42bf4:	cmp	r1, #0
   42bf8:	beq	42c9c <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   42bfc:	add	r1, r0, #1
   42c00:	str	r1, [r4, #20]
   42c04:	mov	r1, #10
   42c08:	strb	r1, [r0]
   42c0c:	ldr	r0, [r4, #20]
   42c10:	ldrb	r2, [r4, #25]
   42c14:	ldr	r3, [r4, #32]
   42c18:	ldr	r1, [r4, #16]
   42c1c:	mla	r6, r3, r2, r0
   42c20:	mul	r5, r3, r2
   42c24:	cmp	r6, r1
   42c28:	bls	42bac <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   42c2c:	cmp	r0, r1
   42c30:	bcc	42c4c <flatcc_json_printer_bool_enum_vector_field@@Base+0x274>
   42c34:	ldr	r2, [r4, #44]	; 0x2c
   42c38:	mov	r0, r4
   42c3c:	mov	r1, #0
   42c40:	blx	r2
   42c44:	ldr	r1, [r4, #16]
   42c48:	ldr	r0, [r4, #20]
   42c4c:	sub	r6, r1, r0
   42c50:	cmp	r6, r5
   42c54:	bcs	42bac <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   42c58:	mov	r1, #32
   42c5c:	mov	r2, r6
   42c60:	bl	14eec <memset@plt>
   42c64:	ldr	r0, [r4, #20]
   42c68:	ldr	r2, [r4, #44]	; 0x2c
   42c6c:	mov	r1, #0
   42c70:	add	r0, r0, r6
   42c74:	str	r0, [r4, #20]
   42c78:	mov	r0, r4
   42c7c:	blx	r2
   42c80:	ldr	r1, [r4, #16]
   42c84:	ldr	r0, [r4, #20]
   42c88:	sub	r5, r5, r6
   42c8c:	sub	r6, r1, r0
   42c90:	cmp	r5, r6
   42c94:	bhi	42c58 <flatcc_json_printer_bool_enum_vector_field@@Base+0x280>
   42c98:	b	42bac <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   42c9c:	ldr	r1, [r4, #16]
   42ca0:	cmp	r0, r1
   42ca4:	bcc	42bc4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
   42ca8:	ldr	r2, [r4, #44]	; 0x2c
   42cac:	mov	r0, r4
   42cb0:	mov	r1, #0
   42cb4:	blx	r2
   42cb8:	b	42bc4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
   42cbc:	ldrb	r1, [r4, #25]
   42cc0:	ldr	r0, [r4, #20]
   42cc4:	cmp	r1, #0
   42cc8:	beq	42d88 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3b0>
   42ccc:	add	r1, r0, #1
   42cd0:	str	r1, [r4, #20]
   42cd4:	mov	r1, #10
   42cd8:	strb	r1, [r0]
   42cdc:	ldr	r0, [r4, #32]
   42ce0:	sub	r2, r0, #1
   42ce4:	str	r2, [r4, #32]
   42ce8:	ldrb	r3, [r4, #25]
   42cec:	ldr	r0, [r4, #20]
   42cf0:	ldr	r1, [r4, #16]
   42cf4:	mla	r7, r2, r3, r0
   42cf8:	mul	r5, r2, r3
   42cfc:	cmp	r7, r1
   42d00:	bls	42d70 <flatcc_json_printer_bool_enum_vector_field@@Base+0x398>
   42d04:	cmp	r0, r1
   42d08:	bcc	42d24 <flatcc_json_printer_bool_enum_vector_field@@Base+0x34c>
   42d0c:	ldr	r2, [r4, #44]	; 0x2c
   42d10:	mov	r0, r4
   42d14:	mov	r1, #0
   42d18:	blx	r2
   42d1c:	ldr	r1, [r4, #16]
   42d20:	ldr	r0, [r4, #20]
   42d24:	sub	r6, r1, r0
   42d28:	cmp	r6, r5
   42d2c:	bcs	42d70 <flatcc_json_printer_bool_enum_vector_field@@Base+0x398>
   42d30:	mov	r1, #32
   42d34:	mov	r2, r6
   42d38:	bl	14eec <memset@plt>
   42d3c:	ldr	r0, [r4, #20]
   42d40:	ldr	r2, [r4, #44]	; 0x2c
   42d44:	mov	r1, #0
   42d48:	add	r0, r0, r6
   42d4c:	str	r0, [r4, #20]
   42d50:	mov	r0, r4
   42d54:	blx	r2
   42d58:	ldr	r1, [r4, #16]
   42d5c:	ldr	r0, [r4, #20]
   42d60:	sub	r5, r5, r6
   42d64:	sub	r6, r1, r0
   42d68:	cmp	r5, r6
   42d6c:	bhi	42d30 <flatcc_json_printer_bool_enum_vector_field@@Base+0x358>
   42d70:	mov	r1, #32
   42d74:	mov	r2, r5
   42d78:	bl	14eec <memset@plt>
   42d7c:	ldr	r0, [r4, #20]
   42d80:	add	r0, r0, r5
   42d84:	str	r0, [r4, #20]
   42d88:	add	r1, r0, #1
   42d8c:	str	r1, [r4, #20]
   42d90:	mov	r1, #93	; 0x5d
   42d94:	strb	r1, [r0]
   42d98:	sub	sp, fp, #28
   42d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042da0 <flatcc_json_printer_struct_vector_field@@Base>:
   42da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42da4:	add	fp, sp, #28
   42da8:	sub	sp, sp, #4
   42dac:	mov	r4, r0
   42db0:	mov	r0, #4
   42db4:	add	r0, r0, r2, lsl #1
   42db8:	ldr	r2, [r1, #8]
   42dbc:	cmp	r0, r2
   42dc0:	bge	42de0 <flatcc_json_printer_struct_vector_field@@Base+0x40>
   42dc4:	ldr	r2, [r1, #4]
   42dc8:	add	r0, r2, r0
   42dcc:	ldrh	r0, [r0]
   42dd0:	cmp	r0, #0
   42dd4:	ldrne	r2, [r1]
   42dd8:	addsne	r6, r2, r0
   42ddc:	bne	42de8 <flatcc_json_printer_struct_vector_field@@Base+0x48>
   42de0:	sub	sp, fp, #28
   42de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42de8:	ldr	r0, [r1, #16]
   42dec:	ldr	r2, [fp, #8]
   42df0:	add	r7, r0, #1
   42df4:	cmp	r0, #0
   42df8:	str	r7, [r1, #16]
   42dfc:	beq	42e14 <flatcc_json_printer_struct_vector_field@@Base+0x74>
   42e00:	ldr	r0, [r4, #20]
   42e04:	add	r1, r0, #1
   42e08:	str	r1, [r4, #20]
   42e0c:	mov	r1, #44	; 0x2c
   42e10:	strb	r1, [r0]
   42e14:	ldr	r0, [r6]
   42e18:	mov	r1, r3
   42e1c:	ldr	r5, [r6, r0]!
   42e20:	mov	r0, r4
   42e24:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   42e28:	ldr	r1, [r4, #32]
   42e2c:	ldr	r0, [r4, #20]
   42e30:	cmp	r5, #0
   42e34:	add	r1, r1, #1
   42e38:	str	r1, [r4, #32]
   42e3c:	add	r1, r0, #1
   42e40:	str	r1, [r4, #20]
   42e44:	mov	r1, #91	; 0x5b
   42e48:	strb	r1, [r0]
   42e4c:	beq	43264 <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   42e50:	ldrb	r1, [r4, #25]
   42e54:	ldr	r0, [r4, #20]
   42e58:	add	r9, r6, #4
   42e5c:	cmp	r1, #0
   42e60:	beq	42f1c <flatcc_json_printer_struct_vector_field@@Base+0x17c>
   42e64:	add	r1, r0, #1
   42e68:	str	r1, [r4, #20]
   42e6c:	mov	r1, #10
   42e70:	strb	r1, [r0]
   42e74:	ldr	r0, [r4, #20]
   42e78:	ldrb	r2, [r4, #25]
   42e7c:	ldr	r3, [r4, #32]
   42e80:	ldr	r1, [r4, #16]
   42e84:	mla	r7, r3, r2, r0
   42e88:	mul	r6, r3, r2
   42e8c:	cmp	r7, r1
   42e90:	bls	42f00 <flatcc_json_printer_struct_vector_field@@Base+0x160>
   42e94:	cmp	r0, r1
   42e98:	bcc	42eb4 <flatcc_json_printer_struct_vector_field@@Base+0x114>
   42e9c:	ldr	r2, [r4, #44]	; 0x2c
   42ea0:	mov	r0, r4
   42ea4:	mov	r1, #0
   42ea8:	blx	r2
   42eac:	ldr	r1, [r4, #16]
   42eb0:	ldr	r0, [r4, #20]
   42eb4:	sub	r7, r1, r0
   42eb8:	cmp	r7, r6
   42ebc:	bcs	42f00 <flatcc_json_printer_struct_vector_field@@Base+0x160>
   42ec0:	mov	r1, #32
   42ec4:	mov	r2, r7
   42ec8:	bl	14eec <memset@plt>
   42ecc:	ldr	r0, [r4, #20]
   42ed0:	ldr	r2, [r4, #44]	; 0x2c
   42ed4:	mov	r1, #0
   42ed8:	add	r0, r0, r7
   42edc:	str	r0, [r4, #20]
   42ee0:	mov	r0, r4
   42ee4:	blx	r2
   42ee8:	ldr	r1, [r4, #16]
   42eec:	ldr	r0, [r4, #20]
   42ef0:	sub	r6, r6, r7
   42ef4:	sub	r7, r1, r0
   42ef8:	cmp	r6, r7
   42efc:	bhi	42ec0 <flatcc_json_printer_struct_vector_field@@Base+0x120>
   42f00:	mov	r1, #32
   42f04:	mov	r2, r6
   42f08:	bl	14eec <memset@plt>
   42f0c:	ldr	r0, [r4, #20]
   42f10:	add	r0, r0, r6
   42f14:	str	r0, [r4, #20]
   42f18:	b	42f3c <flatcc_json_printer_struct_vector_field@@Base+0x19c>
   42f1c:	ldr	r1, [r4, #16]
   42f20:	cmp	r0, r1
   42f24:	bcc	42f3c <flatcc_json_printer_struct_vector_field@@Base+0x19c>
   42f28:	ldr	r2, [r4, #44]	; 0x2c
   42f2c:	mov	r0, r4
   42f30:	mov	r1, #0
   42f34:	blx	r2
   42f38:	ldr	r0, [r4, #20]
   42f3c:	add	r1, r0, #1
   42f40:	ldr	r2, [fp, #16]
   42f44:	str	r1, [r4, #20]
   42f48:	ldr	r1, [r4, #32]
   42f4c:	add	r1, r1, #1
   42f50:	str	r1, [r4, #32]
   42f54:	mov	r1, #123	; 0x7b
   42f58:	strb	r1, [r0]
   42f5c:	mov	r0, r4
   42f60:	mov	r1, r9
   42f64:	blx	r2
   42f68:	ldrb	r1, [r4, #25]
   42f6c:	ldr	r0, [r4, #20]
   42f70:	cmp	r1, #0
   42f74:	beq	43034 <flatcc_json_printer_struct_vector_field@@Base+0x294>
   42f78:	add	r1, r0, #1
   42f7c:	str	r1, [r4, #20]
   42f80:	mov	r1, #10
   42f84:	strb	r1, [r0]
   42f88:	ldr	r0, [r4, #32]
   42f8c:	sub	r2, r0, #1
   42f90:	str	r2, [r4, #32]
   42f94:	ldrb	r3, [r4, #25]
   42f98:	ldr	r0, [r4, #20]
   42f9c:	ldr	r1, [r4, #16]
   42fa0:	mla	r7, r2, r3, r0
   42fa4:	mul	r6, r2, r3
   42fa8:	cmp	r7, r1
   42fac:	bls	4301c <flatcc_json_printer_struct_vector_field@@Base+0x27c>
   42fb0:	cmp	r0, r1
   42fb4:	bcc	42fd0 <flatcc_json_printer_struct_vector_field@@Base+0x230>
   42fb8:	ldr	r2, [r4, #44]	; 0x2c
   42fbc:	mov	r0, r4
   42fc0:	mov	r1, #0
   42fc4:	blx	r2
   42fc8:	ldr	r1, [r4, #16]
   42fcc:	ldr	r0, [r4, #20]
   42fd0:	sub	r7, r1, r0
   42fd4:	cmp	r7, r6
   42fd8:	bcs	4301c <flatcc_json_printer_struct_vector_field@@Base+0x27c>
   42fdc:	mov	r1, #32
   42fe0:	mov	r2, r7
   42fe4:	bl	14eec <memset@plt>
   42fe8:	ldr	r0, [r4, #20]
   42fec:	ldr	r2, [r4, #44]	; 0x2c
   42ff0:	mov	r1, #0
   42ff4:	add	r0, r0, r7
   42ff8:	str	r0, [r4, #20]
   42ffc:	mov	r0, r4
   43000:	blx	r2
   43004:	ldr	r1, [r4, #16]
   43008:	ldr	r0, [r4, #20]
   4300c:	sub	r6, r6, r7
   43010:	sub	r7, r1, r0
   43014:	cmp	r6, r7
   43018:	bhi	42fdc <flatcc_json_printer_struct_vector_field@@Base+0x23c>
   4301c:	mov	r1, #32
   43020:	mov	r2, r6
   43024:	bl	14eec <memset@plt>
   43028:	ldr	r0, [r4, #20]
   4302c:	add	r0, r0, r6
   43030:	str	r0, [r4, #20]
   43034:	add	r1, r0, #1
   43038:	mov	sl, #125	; 0x7d
   4303c:	subs	r5, r5, #1
   43040:	str	r1, [r4, #20]
   43044:	strb	sl, [r0]
   43048:	beq	43264 <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   4304c:	mov	r8, #10
   43050:	b	43080 <flatcc_json_printer_struct_vector_field@@Base+0x2e0>
   43054:	mov	r1, #32
   43058:	mov	r2, r6
   4305c:	bl	14eec <memset@plt>
   43060:	ldr	r0, [r4, #20]
   43064:	add	r0, r0, r6
   43068:	str	r0, [r4, #20]
   4306c:	add	r1, r0, #1
   43070:	cmp	r5, #0
   43074:	str	r1, [r4, #20]
   43078:	strb	sl, [r0]
   4307c:	beq	43264 <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   43080:	ldr	r0, [r4, #20]
   43084:	add	r1, r0, #1
   43088:	str	r1, [r4, #20]
   4308c:	mov	r1, #44	; 0x2c
   43090:	strb	r1, [r0]
   43094:	ldr	r0, [fp, #12]
   43098:	ldrb	r1, [r4, #25]
   4309c:	add	r9, r9, r0
   430a0:	ldr	r0, [r4, #20]
   430a4:	cmp	r1, #0
   430a8:	beq	43160 <flatcc_json_printer_struct_vector_field@@Base+0x3c0>
   430ac:	add	r1, r0, #1
   430b0:	str	r1, [r4, #20]
   430b4:	strb	r8, [r0]
   430b8:	ldr	r0, [r4, #20]
   430bc:	ldrb	r2, [r4, #25]
   430c0:	ldr	r3, [r4, #32]
   430c4:	ldr	r1, [r4, #16]
   430c8:	mla	r7, r3, r2, r0
   430cc:	mul	r6, r3, r2
   430d0:	cmp	r7, r1
   430d4:	bls	43144 <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   430d8:	cmp	r0, r1
   430dc:	bcc	430f8 <flatcc_json_printer_struct_vector_field@@Base+0x358>
   430e0:	ldr	r2, [r4, #44]	; 0x2c
   430e4:	mov	r0, r4
   430e8:	mov	r1, #0
   430ec:	blx	r2
   430f0:	ldr	r1, [r4, #16]
   430f4:	ldr	r0, [r4, #20]
   430f8:	sub	r7, r1, r0
   430fc:	cmp	r7, r6
   43100:	bcs	43144 <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   43104:	mov	r1, #32
   43108:	mov	r2, r7
   4310c:	bl	14eec <memset@plt>
   43110:	ldr	r0, [r4, #20]
   43114:	ldr	r2, [r4, #44]	; 0x2c
   43118:	mov	r1, #0
   4311c:	add	r0, r0, r7
   43120:	str	r0, [r4, #20]
   43124:	mov	r0, r4
   43128:	blx	r2
   4312c:	ldr	r1, [r4, #16]
   43130:	ldr	r0, [r4, #20]
   43134:	sub	r6, r6, r7
   43138:	sub	r7, r1, r0
   4313c:	cmp	r6, r7
   43140:	bhi	43104 <flatcc_json_printer_struct_vector_field@@Base+0x364>
   43144:	mov	r1, #32
   43148:	mov	r2, r6
   4314c:	bl	14eec <memset@plt>
   43150:	ldr	r0, [r4, #20]
   43154:	add	r0, r0, r6
   43158:	str	r0, [r4, #20]
   4315c:	b	43180 <flatcc_json_printer_struct_vector_field@@Base+0x3e0>
   43160:	ldr	r1, [r4, #16]
   43164:	cmp	r0, r1
   43168:	bcc	43180 <flatcc_json_printer_struct_vector_field@@Base+0x3e0>
   4316c:	ldr	r2, [r4, #44]	; 0x2c
   43170:	mov	r0, r4
   43174:	mov	r1, #0
   43178:	blx	r2
   4317c:	ldr	r0, [r4, #20]
   43180:	add	r1, r0, #1
   43184:	ldr	r2, [fp, #16]
   43188:	sub	r5, r5, #1
   4318c:	str	r1, [r4, #20]
   43190:	ldr	r1, [r4, #32]
   43194:	add	r1, r1, #1
   43198:	str	r1, [r4, #32]
   4319c:	mov	r1, #123	; 0x7b
   431a0:	strb	r1, [r0]
   431a4:	mov	r0, r4
   431a8:	mov	r1, r9
   431ac:	blx	r2
   431b0:	ldrb	r1, [r4, #25]
   431b4:	ldr	r0, [r4, #20]
   431b8:	cmp	r1, #0
   431bc:	beq	4306c <flatcc_json_printer_struct_vector_field@@Base+0x2cc>
   431c0:	add	r1, r0, #1
   431c4:	str	r1, [r4, #20]
   431c8:	strb	r8, [r0]
   431cc:	ldr	r0, [r4, #32]
   431d0:	sub	r2, r0, #1
   431d4:	str	r2, [r4, #32]
   431d8:	ldrb	r3, [r4, #25]
   431dc:	ldr	r0, [r4, #20]
   431e0:	ldr	r1, [r4, #16]
   431e4:	mla	r7, r2, r3, r0
   431e8:	mul	r6, r2, r3
   431ec:	cmp	r7, r1
   431f0:	bls	43054 <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   431f4:	cmp	r0, r1
   431f8:	bcc	43214 <flatcc_json_printer_struct_vector_field@@Base+0x474>
   431fc:	ldr	r2, [r4, #44]	; 0x2c
   43200:	mov	r0, r4
   43204:	mov	r1, #0
   43208:	blx	r2
   4320c:	ldr	r1, [r4, #16]
   43210:	ldr	r0, [r4, #20]
   43214:	sub	r7, r1, r0
   43218:	cmp	r7, r6
   4321c:	bcs	43054 <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   43220:	mov	r1, #32
   43224:	mov	r2, r7
   43228:	bl	14eec <memset@plt>
   4322c:	ldr	r0, [r4, #20]
   43230:	ldr	r2, [r4, #44]	; 0x2c
   43234:	mov	r1, #0
   43238:	add	r0, r0, r7
   4323c:	str	r0, [r4, #20]
   43240:	mov	r0, r4
   43244:	blx	r2
   43248:	ldr	r1, [r4, #16]
   4324c:	ldr	r0, [r4, #20]
   43250:	sub	r6, r6, r7
   43254:	sub	r7, r1, r0
   43258:	cmp	r6, r7
   4325c:	bhi	43220 <flatcc_json_printer_struct_vector_field@@Base+0x480>
   43260:	b	43054 <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   43264:	ldrb	r1, [r4, #25]
   43268:	ldr	r0, [r4, #20]
   4326c:	cmp	r1, #0
   43270:	beq	43330 <flatcc_json_printer_struct_vector_field@@Base+0x590>
   43274:	add	r1, r0, #1
   43278:	str	r1, [r4, #20]
   4327c:	mov	r1, #10
   43280:	strb	r1, [r0]
   43284:	ldr	r0, [r4, #32]
   43288:	sub	r2, r0, #1
   4328c:	str	r2, [r4, #32]
   43290:	ldrb	r3, [r4, #25]
   43294:	ldr	r0, [r4, #20]
   43298:	ldr	r1, [r4, #16]
   4329c:	mla	r7, r2, r3, r0
   432a0:	mul	r5, r2, r3
   432a4:	cmp	r7, r1
   432a8:	bls	43318 <flatcc_json_printer_struct_vector_field@@Base+0x578>
   432ac:	cmp	r0, r1
   432b0:	bcc	432cc <flatcc_json_printer_struct_vector_field@@Base+0x52c>
   432b4:	ldr	r2, [r4, #44]	; 0x2c
   432b8:	mov	r0, r4
   432bc:	mov	r1, #0
   432c0:	blx	r2
   432c4:	ldr	r1, [r4, #16]
   432c8:	ldr	r0, [r4, #20]
   432cc:	sub	r6, r1, r0
   432d0:	cmp	r6, r5
   432d4:	bcs	43318 <flatcc_json_printer_struct_vector_field@@Base+0x578>
   432d8:	mov	r1, #32
   432dc:	mov	r2, r6
   432e0:	bl	14eec <memset@plt>
   432e4:	ldr	r0, [r4, #20]
   432e8:	ldr	r2, [r4, #44]	; 0x2c
   432ec:	mov	r1, #0
   432f0:	add	r0, r0, r6
   432f4:	str	r0, [r4, #20]
   432f8:	mov	r0, r4
   432fc:	blx	r2
   43300:	ldr	r1, [r4, #16]
   43304:	ldr	r0, [r4, #20]
   43308:	sub	r5, r5, r6
   4330c:	sub	r6, r1, r0
   43310:	cmp	r5, r6
   43314:	bhi	432d8 <flatcc_json_printer_struct_vector_field@@Base+0x538>
   43318:	mov	r1, #32
   4331c:	mov	r2, r5
   43320:	bl	14eec <memset@plt>
   43324:	ldr	r0, [r4, #20]
   43328:	add	r0, r0, r5
   4332c:	str	r0, [r4, #20]
   43330:	add	r1, r0, #1
   43334:	str	r1, [r4, #20]
   43338:	mov	r1, #93	; 0x5d
   4333c:	strb	r1, [r0]
   43340:	sub	sp, fp, #28
   43344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043348 <flatcc_json_printer_string_vector_field@@Base>:
   43348:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4334c:	add	fp, sp, #28
   43350:	sub	sp, sp, #4
   43354:	mov	r4, r0
   43358:	mov	r0, #4
   4335c:	add	r0, r0, r2, lsl #1
   43360:	ldr	r2, [r1, #8]
   43364:	cmp	r0, r2
   43368:	bge	43388 <flatcc_json_printer_string_vector_field@@Base+0x40>
   4336c:	ldr	r2, [r1, #4]
   43370:	add	r0, r2, r0
   43374:	ldrh	r0, [r0]
   43378:	cmp	r0, #0
   4337c:	ldrne	r2, [r1]
   43380:	addsne	r5, r2, r0
   43384:	bne	43390 <flatcc_json_printer_string_vector_field@@Base+0x48>
   43388:	sub	sp, fp, #28
   4338c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43390:	ldr	r0, [r1, #16]
   43394:	ldr	r2, [fp, #8]
   43398:	add	r7, r0, #1
   4339c:	cmp	r0, #0
   433a0:	str	r7, [r1, #16]
   433a4:	beq	433bc <flatcc_json_printer_string_vector_field@@Base+0x74>
   433a8:	ldr	r0, [r4, #20]
   433ac:	add	r1, r0, #1
   433b0:	str	r1, [r4, #20]
   433b4:	mov	r1, #44	; 0x2c
   433b8:	strb	r1, [r0]
   433bc:	ldr	r0, [r5]
   433c0:	mov	r1, r3
   433c4:	ldr	r8, [r5, r0]!
   433c8:	mov	r0, r4
   433cc:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   433d0:	ldr	r1, [r4, #32]
   433d4:	ldr	r0, [r4, #20]
   433d8:	cmp	r8, #0
   433dc:	add	r1, r1, #1
   433e0:	str	r1, [r4, #32]
   433e4:	add	r1, r0, #1
   433e8:	str	r1, [r4, #20]
   433ec:	mov	r1, #91	; 0x5b
   433f0:	strb	r1, [r0]
   433f4:	beq	43628 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   433f8:	ldrb	r1, [r4, #25]
   433fc:	ldr	r0, [r4, #20]
   43400:	add	r9, r5, #4
   43404:	cmp	r1, #0
   43408:	beq	434c4 <flatcc_json_printer_string_vector_field@@Base+0x17c>
   4340c:	add	r1, r0, #1
   43410:	str	r1, [r4, #20]
   43414:	mov	r1, #10
   43418:	strb	r1, [r0]
   4341c:	ldr	r0, [r4, #20]
   43420:	ldrb	r2, [r4, #25]
   43424:	ldr	r3, [r4, #32]
   43428:	ldr	r1, [r4, #16]
   4342c:	mla	r7, r3, r2, r0
   43430:	mul	r5, r3, r2
   43434:	cmp	r7, r1
   43438:	bls	434a8 <flatcc_json_printer_string_vector_field@@Base+0x160>
   4343c:	cmp	r0, r1
   43440:	bcc	4345c <flatcc_json_printer_string_vector_field@@Base+0x114>
   43444:	ldr	r2, [r4, #44]	; 0x2c
   43448:	mov	r0, r4
   4344c:	mov	r1, #0
   43450:	blx	r2
   43454:	ldr	r1, [r4, #16]
   43458:	ldr	r0, [r4, #20]
   4345c:	sub	r6, r1, r0
   43460:	cmp	r6, r5
   43464:	bcs	434a8 <flatcc_json_printer_string_vector_field@@Base+0x160>
   43468:	mov	r1, #32
   4346c:	mov	r2, r6
   43470:	bl	14eec <memset@plt>
   43474:	ldr	r0, [r4, #20]
   43478:	ldr	r2, [r4, #44]	; 0x2c
   4347c:	mov	r1, #0
   43480:	add	r0, r0, r6
   43484:	str	r0, [r4, #20]
   43488:	mov	r0, r4
   4348c:	blx	r2
   43490:	ldr	r1, [r4, #16]
   43494:	ldr	r0, [r4, #20]
   43498:	sub	r5, r5, r6
   4349c:	sub	r6, r1, r0
   434a0:	cmp	r5, r6
   434a4:	bhi	43468 <flatcc_json_printer_string_vector_field@@Base+0x120>
   434a8:	mov	r1, #32
   434ac:	mov	r2, r5
   434b0:	bl	14eec <memset@plt>
   434b4:	ldr	r0, [r4, #20]
   434b8:	add	r0, r0, r5
   434bc:	str	r0, [r4, #20]
   434c0:	b	434e0 <flatcc_json_printer_string_vector_field@@Base+0x198>
   434c4:	ldr	r1, [r4, #16]
   434c8:	cmp	r0, r1
   434cc:	bcc	434e0 <flatcc_json_printer_string_vector_field@@Base+0x198>
   434d0:	ldr	r2, [r4, #44]	; 0x2c
   434d4:	mov	r0, r4
   434d8:	mov	r1, #0
   434dc:	blx	r2
   434e0:	ldr	r0, [r9]
   434e4:	mov	r1, r9
   434e8:	ldr	r2, [r1, r0]!
   434ec:	mov	r0, r4
   434f0:	add	r1, r1, #4
   434f4:	bl	39ae0 <flatcc_json_printer_string@@Base+0x4>
   434f8:	subs	r7, r8, #1
   434fc:	beq	43628 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   43500:	mov	r8, #44	; 0x2c
   43504:	mov	sl, #10
   43508:	b	43544 <flatcc_json_printer_string_vector_field@@Base+0x1fc>
   4350c:	mov	r1, #32
   43510:	mov	r2, r5
   43514:	bl	14eec <memset@plt>
   43518:	ldr	r0, [r4, #20]
   4351c:	add	r0, r0, r5
   43520:	str	r0, [r4, #20]
   43524:	ldr	r0, [r9]
   43528:	mov	r1, r9
   4352c:	ldr	r2, [r1, r0]!
   43530:	mov	r0, r4
   43534:	add	r1, r1, #4
   43538:	bl	39ae0 <flatcc_json_printer_string@@Base+0x4>
   4353c:	cmp	r7, #0
   43540:	beq	43628 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   43544:	ldr	r0, [r4, #20]
   43548:	add	r9, r9, #4
   4354c:	sub	r7, r7, #1
   43550:	add	r1, r0, #1
   43554:	str	r1, [r4, #20]
   43558:	strb	r8, [r0]
   4355c:	ldrb	r1, [r4, #25]
   43560:	ldr	r0, [r4, #20]
   43564:	cmp	r1, #0
   43568:	beq	43608 <flatcc_json_printer_string_vector_field@@Base+0x2c0>
   4356c:	add	r1, r0, #1
   43570:	str	r1, [r4, #20]
   43574:	strb	sl, [r0]
   43578:	ldr	r0, [r4, #20]
   4357c:	ldrb	r2, [r4, #25]
   43580:	ldr	r3, [r4, #32]
   43584:	ldr	r1, [r4, #16]
   43588:	mla	r6, r3, r2, r0
   4358c:	mul	r5, r3, r2
   43590:	cmp	r6, r1
   43594:	bls	4350c <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   43598:	cmp	r0, r1
   4359c:	bcc	435b8 <flatcc_json_printer_string_vector_field@@Base+0x270>
   435a0:	ldr	r2, [r4, #44]	; 0x2c
   435a4:	mov	r0, r4
   435a8:	mov	r1, #0
   435ac:	blx	r2
   435b0:	ldr	r1, [r4, #16]
   435b4:	ldr	r0, [r4, #20]
   435b8:	sub	r6, r1, r0
   435bc:	cmp	r6, r5
   435c0:	bcs	4350c <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   435c4:	mov	r1, #32
   435c8:	mov	r2, r6
   435cc:	bl	14eec <memset@plt>
   435d0:	ldr	r0, [r4, #20]
   435d4:	ldr	r2, [r4, #44]	; 0x2c
   435d8:	mov	r1, #0
   435dc:	add	r0, r0, r6
   435e0:	str	r0, [r4, #20]
   435e4:	mov	r0, r4
   435e8:	blx	r2
   435ec:	ldr	r1, [r4, #16]
   435f0:	ldr	r0, [r4, #20]
   435f4:	sub	r5, r5, r6
   435f8:	sub	r6, r1, r0
   435fc:	cmp	r5, r6
   43600:	bhi	435c4 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   43604:	b	4350c <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   43608:	ldr	r1, [r4, #16]
   4360c:	cmp	r0, r1
   43610:	bcc	43524 <flatcc_json_printer_string_vector_field@@Base+0x1dc>
   43614:	ldr	r2, [r4, #44]	; 0x2c
   43618:	mov	r0, r4
   4361c:	mov	r1, #0
   43620:	blx	r2
   43624:	b	43524 <flatcc_json_printer_string_vector_field@@Base+0x1dc>
   43628:	ldrb	r1, [r4, #25]
   4362c:	ldr	r0, [r4, #20]
   43630:	cmp	r1, #0
   43634:	beq	436f4 <flatcc_json_printer_string_vector_field@@Base+0x3ac>
   43638:	add	r1, r0, #1
   4363c:	str	r1, [r4, #20]
   43640:	mov	r1, #10
   43644:	strb	r1, [r0]
   43648:	ldr	r0, [r4, #32]
   4364c:	sub	r2, r0, #1
   43650:	str	r2, [r4, #32]
   43654:	ldrb	r3, [r4, #25]
   43658:	ldr	r0, [r4, #20]
   4365c:	ldr	r1, [r4, #16]
   43660:	mla	r7, r2, r3, r0
   43664:	mul	r5, r2, r3
   43668:	cmp	r7, r1
   4366c:	bls	436dc <flatcc_json_printer_string_vector_field@@Base+0x394>
   43670:	cmp	r0, r1
   43674:	bcc	43690 <flatcc_json_printer_string_vector_field@@Base+0x348>
   43678:	ldr	r2, [r4, #44]	; 0x2c
   4367c:	mov	r0, r4
   43680:	mov	r1, #0
   43684:	blx	r2
   43688:	ldr	r1, [r4, #16]
   4368c:	ldr	r0, [r4, #20]
   43690:	sub	r6, r1, r0
   43694:	cmp	r6, r5
   43698:	bcs	436dc <flatcc_json_printer_string_vector_field@@Base+0x394>
   4369c:	mov	r1, #32
   436a0:	mov	r2, r6
   436a4:	bl	14eec <memset@plt>
   436a8:	ldr	r0, [r4, #20]
   436ac:	ldr	r2, [r4, #44]	; 0x2c
   436b0:	mov	r1, #0
   436b4:	add	r0, r0, r6
   436b8:	str	r0, [r4, #20]
   436bc:	mov	r0, r4
   436c0:	blx	r2
   436c4:	ldr	r1, [r4, #16]
   436c8:	ldr	r0, [r4, #20]
   436cc:	sub	r5, r5, r6
   436d0:	sub	r6, r1, r0
   436d4:	cmp	r5, r6
   436d8:	bhi	4369c <flatcc_json_printer_string_vector_field@@Base+0x354>
   436dc:	mov	r1, #32
   436e0:	mov	r2, r5
   436e4:	bl	14eec <memset@plt>
   436e8:	ldr	r0, [r4, #20]
   436ec:	add	r0, r0, r5
   436f0:	str	r0, [r4, #20]
   436f4:	add	r1, r0, #1
   436f8:	str	r1, [r4, #20]
   436fc:	mov	r1, #93	; 0x5d
   43700:	strb	r1, [r0]
   43704:	sub	sp, fp, #28
   43708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004370c <flatcc_json_printer_table_vector_field@@Base>:
   4370c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43710:	add	fp, sp, #28
   43714:	sub	sp, sp, #20
   43718:	mov	sl, r1
   4371c:	ldr	r1, [r1, #8]
   43720:	mov	r4, r0
   43724:	mov	r0, #4
   43728:	add	r0, r0, r2, lsl #1
   4372c:	cmp	r0, r1
   43730:	bge	43750 <flatcc_json_printer_table_vector_field@@Base+0x44>
   43734:	ldr	r1, [sl, #4]
   43738:	add	r0, r1, r0
   4373c:	ldrh	r0, [r0]
   43740:	cmp	r0, #0
   43744:	ldrne	r1, [sl]
   43748:	addsne	r5, r1, r0
   4374c:	bne	43758 <flatcc_json_printer_table_vector_field@@Base+0x4c>
   43750:	sub	sp, fp, #28
   43754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43758:	ldr	r0, [sl, #16]
   4375c:	ldr	r2, [fp, #8]
   43760:	add	r1, r0, #1
   43764:	cmp	r0, #0
   43768:	str	r1, [sl, #16]
   4376c:	beq	43784 <flatcc_json_printer_table_vector_field@@Base+0x78>
   43770:	ldr	r0, [r4, #20]
   43774:	add	r1, r0, #1
   43778:	str	r1, [r4, #20]
   4377c:	mov	r1, #44	; 0x2c
   43780:	strb	r1, [r0]
   43784:	ldr	r0, [r5]
   43788:	mov	r1, r3
   4378c:	ldr	r8, [r5, r0]!
   43790:	mov	r0, r4
   43794:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   43798:	ldr	r1, [r4, #32]
   4379c:	ldr	r0, [r4, #20]
   437a0:	cmp	r8, #0
   437a4:	add	r1, r1, #1
   437a8:	str	r1, [r4, #32]
   437ac:	add	r1, r0, #1
   437b0:	str	r1, [r4, #20]
   437b4:	mov	r1, #91	; 0x5b
   437b8:	strb	r1, [r0]
   437bc:	beq	43ac4 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   437c0:	ldr	r0, [sl, #12]
   437c4:	ldr	r6, [fp, #12]
   437c8:	add	r5, r5, #4
   437cc:	subs	r0, r0, #1
   437d0:	beq	43918 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   437d4:	ldr	r3, [r4, #32]
   437d8:	ldr	r2, [r4, #20]
   437dc:	ldr	r1, [r5]
   437e0:	add	r3, r3, #1
   437e4:	add	r1, r5, r1
   437e8:	str	r3, [r4, #32]
   437ec:	add	r3, r2, #1
   437f0:	str	r3, [r4, #20]
   437f4:	mov	r3, #123	; 0x7b
   437f8:	strb	r3, [r2]
   437fc:	str	r0, [sp, #12]
   43800:	mov	r0, #0
   43804:	str	r0, [sp, #16]
   43808:	str	r1, [sp]
   4380c:	ldr	r0, [r1]
   43810:	sub	r2, r1, r0
   43814:	str	r2, [sp, #4]
   43818:	ldrh	r0, [r1, -r0]
   4381c:	mov	r1, sp
   43820:	str	r0, [sp, #8]
   43824:	mov	r0, r4
   43828:	blx	r6
   4382c:	ldrb	r1, [r4, #25]
   43830:	ldr	r0, [r4, #20]
   43834:	cmp	r1, #0
   43838:	beq	438fc <flatcc_json_printer_table_vector_field@@Base+0x1f0>
   4383c:	add	r1, r0, #1
   43840:	str	r1, [r4, #20]
   43844:	mov	r1, #10
   43848:	strb	r1, [r0]
   4384c:	ldr	r0, [r4, #32]
   43850:	sub	r2, r0, #1
   43854:	str	r2, [r4, #32]
   43858:	ldrb	r3, [r4, #25]
   4385c:	ldr	r0, [r4, #20]
   43860:	ldr	r1, [r4, #16]
   43864:	mla	r7, r2, r3, r0
   43868:	mul	r6, r2, r3
   4386c:	cmp	r7, r1
   43870:	bls	438e0 <flatcc_json_printer_table_vector_field@@Base+0x1d4>
   43874:	cmp	r0, r1
   43878:	bcc	43894 <flatcc_json_printer_table_vector_field@@Base+0x188>
   4387c:	ldr	r2, [r4, #44]	; 0x2c
   43880:	mov	r0, r4
   43884:	mov	r1, #0
   43888:	blx	r2
   4388c:	ldr	r1, [r4, #16]
   43890:	ldr	r0, [r4, #20]
   43894:	sub	r7, r1, r0
   43898:	cmp	r7, r6
   4389c:	bcs	438e0 <flatcc_json_printer_table_vector_field@@Base+0x1d4>
   438a0:	mov	r1, #32
   438a4:	mov	r2, r7
   438a8:	bl	14eec <memset@plt>
   438ac:	ldr	r0, [r4, #20]
   438b0:	ldr	r2, [r4, #44]	; 0x2c
   438b4:	mov	r1, #0
   438b8:	add	r0, r0, r7
   438bc:	str	r0, [r4, #20]
   438c0:	mov	r0, r4
   438c4:	blx	r2
   438c8:	ldr	r1, [r4, #16]
   438cc:	ldr	r0, [r4, #20]
   438d0:	sub	r6, r6, r7
   438d4:	sub	r7, r1, r0
   438d8:	cmp	r6, r7
   438dc:	bhi	438a0 <flatcc_json_printer_table_vector_field@@Base+0x194>
   438e0:	mov	r1, #32
   438e4:	mov	r2, r6
   438e8:	bl	14eec <memset@plt>
   438ec:	ldr	r0, [r4, #20]
   438f0:	add	r0, r0, r6
   438f4:	ldr	r6, [fp, #12]
   438f8:	str	r0, [r4, #20]
   438fc:	add	r1, r0, #1
   43900:	str	r1, [r4, #20]
   43904:	mov	r1, #125	; 0x7d
   43908:	strb	r1, [r0]
   4390c:	subs	r9, r8, #1
   43910:	bne	43930 <flatcc_json_printer_table_vector_field@@Base+0x224>
   43914:	b	43ac4 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   43918:	ldr	r0, [r4, #36]	; 0x24
   4391c:	cmp	r0, #0
   43920:	moveq	r0, #2
   43924:	streq	r0, [r4, #36]	; 0x24
   43928:	subs	r9, r8, #1
   4392c:	beq	43ac4 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   43930:	mov	r8, #44	; 0x2c
   43934:	b	43950 <flatcc_json_printer_table_vector_field@@Base+0x244>
   43938:	ldr	r0, [r4, #36]	; 0x24
   4393c:	cmp	r0, #0
   43940:	moveq	r0, #2
   43944:	streq	r0, [r4, #36]	; 0x24
   43948:	cmp	r9, #0
   4394c:	beq	43ac4 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   43950:	ldr	r0, [r4, #20]
   43954:	sub	r9, r9, #1
   43958:	add	r1, r0, #1
   4395c:	str	r1, [r4, #20]
   43960:	strb	r8, [r0]
   43964:	ldr	r0, [sl, #12]
   43968:	ldr	r1, [r5, #4]!
   4396c:	subs	r0, r0, #1
   43970:	beq	43938 <flatcc_json_printer_table_vector_field@@Base+0x22c>
   43974:	ldr	r3, [r4, #32]
   43978:	ldr	r2, [r4, #20]
   4397c:	add	r1, r5, r1
   43980:	add	r3, r3, #1
   43984:	str	r3, [r4, #32]
   43988:	add	r3, r2, #1
   4398c:	str	r3, [r4, #20]
   43990:	mov	r3, #123	; 0x7b
   43994:	strb	r3, [r2]
   43998:	str	r0, [sp, #12]
   4399c:	mov	r0, #0
   439a0:	str	r0, [sp, #16]
   439a4:	str	r1, [sp]
   439a8:	ldr	r0, [r1]
   439ac:	sub	r2, r1, r0
   439b0:	str	r2, [sp, #4]
   439b4:	ldrh	r0, [r1, -r0]
   439b8:	mov	r1, sp
   439bc:	str	r0, [sp, #8]
   439c0:	mov	r0, r4
   439c4:	blx	r6
   439c8:	ldrb	r1, [r4, #25]
   439cc:	ldr	r0, [r4, #20]
   439d0:	cmp	r1, #0
   439d4:	beq	43aac <flatcc_json_printer_table_vector_field@@Base+0x3a0>
   439d8:	add	r1, r0, #1
   439dc:	str	r1, [r4, #20]
   439e0:	mov	r1, #10
   439e4:	strb	r1, [r0]
   439e8:	ldr	r0, [r4, #32]
   439ec:	sub	r2, r0, #1
   439f0:	str	r2, [r4, #32]
   439f4:	ldrb	r3, [r4, #25]
   439f8:	ldr	r0, [r4, #20]
   439fc:	ldr	r1, [r4, #16]
   43a00:	mla	r6, r2, r3, r0
   43a04:	mul	r7, r2, r3
   43a08:	cmp	r6, r1
   43a0c:	bls	43a90 <flatcc_json_printer_table_vector_field@@Base+0x384>
   43a10:	cmp	r0, r1
   43a14:	bcc	43a30 <flatcc_json_printer_table_vector_field@@Base+0x324>
   43a18:	ldr	r2, [r4, #44]	; 0x2c
   43a1c:	mov	r0, r4
   43a20:	mov	r1, #0
   43a24:	blx	r2
   43a28:	ldr	r1, [r4, #16]
   43a2c:	ldr	r0, [r4, #20]
   43a30:	sub	r6, r1, r0
   43a34:	cmp	r6, r7
   43a38:	bcs	43a7c <flatcc_json_printer_table_vector_field@@Base+0x370>
   43a3c:	mov	r1, #32
   43a40:	mov	r2, r6
   43a44:	bl	14eec <memset@plt>
   43a48:	ldr	r0, [r4, #20]
   43a4c:	ldr	r2, [r4, #44]	; 0x2c
   43a50:	mov	r1, #0
   43a54:	add	r0, r0, r6
   43a58:	str	r0, [r4, #20]
   43a5c:	mov	r0, r4
   43a60:	blx	r2
   43a64:	ldr	r1, [r4, #16]
   43a68:	ldr	r0, [r4, #20]
   43a6c:	sub	r7, r7, r6
   43a70:	sub	r6, r1, r0
   43a74:	cmp	r7, r6
   43a78:	bhi	43a3c <flatcc_json_printer_table_vector_field@@Base+0x330>
   43a7c:	ldr	r6, [fp, #12]
   43a80:	mov	r1, #32
   43a84:	mov	r2, r7
   43a88:	bl	14eec <memset@plt>
   43a8c:	b	43aa0 <flatcc_json_printer_table_vector_field@@Base+0x394>
   43a90:	mov	r1, #32
   43a94:	mov	r2, r7
   43a98:	bl	14eec <memset@plt>
   43a9c:	ldr	r6, [fp, #12]
   43aa0:	ldr	r0, [r4, #20]
   43aa4:	add	r0, r0, r7
   43aa8:	str	r0, [r4, #20]
   43aac:	add	r1, r0, #1
   43ab0:	str	r1, [r4, #20]
   43ab4:	mov	r1, #125	; 0x7d
   43ab8:	strb	r1, [r0]
   43abc:	cmp	r9, #0
   43ac0:	bne	43950 <flatcc_json_printer_table_vector_field@@Base+0x244>
   43ac4:	ldrb	r1, [r4, #25]
   43ac8:	ldr	r0, [r4, #20]
   43acc:	cmp	r1, #0
   43ad0:	beq	43b90 <flatcc_json_printer_table_vector_field@@Base+0x484>
   43ad4:	add	r1, r0, #1
   43ad8:	str	r1, [r4, #20]
   43adc:	mov	r1, #10
   43ae0:	strb	r1, [r0]
   43ae4:	ldr	r0, [r4, #32]
   43ae8:	sub	r2, r0, #1
   43aec:	str	r2, [r4, #32]
   43af0:	ldrb	r3, [r4, #25]
   43af4:	ldr	r0, [r4, #20]
   43af8:	ldr	r1, [r4, #16]
   43afc:	mla	r7, r2, r3, r0
   43b00:	mul	r5, r2, r3
   43b04:	cmp	r7, r1
   43b08:	bls	43b78 <flatcc_json_printer_table_vector_field@@Base+0x46c>
   43b0c:	cmp	r0, r1
   43b10:	bcc	43b2c <flatcc_json_printer_table_vector_field@@Base+0x420>
   43b14:	ldr	r2, [r4, #44]	; 0x2c
   43b18:	mov	r0, r4
   43b1c:	mov	r1, #0
   43b20:	blx	r2
   43b24:	ldr	r1, [r4, #16]
   43b28:	ldr	r0, [r4, #20]
   43b2c:	sub	r6, r1, r0
   43b30:	cmp	r6, r5
   43b34:	bcs	43b78 <flatcc_json_printer_table_vector_field@@Base+0x46c>
   43b38:	mov	r1, #32
   43b3c:	mov	r2, r6
   43b40:	bl	14eec <memset@plt>
   43b44:	ldr	r0, [r4, #20]
   43b48:	ldr	r2, [r4, #44]	; 0x2c
   43b4c:	mov	r1, #0
   43b50:	add	r0, r0, r6
   43b54:	str	r0, [r4, #20]
   43b58:	mov	r0, r4
   43b5c:	blx	r2
   43b60:	ldr	r1, [r4, #16]
   43b64:	ldr	r0, [r4, #20]
   43b68:	sub	r5, r5, r6
   43b6c:	sub	r6, r1, r0
   43b70:	cmp	r5, r6
   43b74:	bhi	43b38 <flatcc_json_printer_table_vector_field@@Base+0x42c>
   43b78:	mov	r1, #32
   43b7c:	mov	r2, r5
   43b80:	bl	14eec <memset@plt>
   43b84:	ldr	r0, [r4, #20]
   43b88:	add	r0, r0, r5
   43b8c:	str	r0, [r4, #20]
   43b90:	add	r1, r0, #1
   43b94:	str	r1, [r4, #20]
   43b98:	mov	r1, #93	; 0x5d
   43b9c:	strb	r1, [r0]
   43ba0:	sub	sp, fp, #28
   43ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043ba8 <flatcc_json_printer_union_vector_field@@Base>:
   43ba8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43bac:	add	fp, sp, #28
   43bb0:	sub	sp, sp, #140	; 0x8c
   43bb4:	mov	r6, r1
   43bb8:	ldr	r1, [r1, #8]
   43bbc:	mov	r8, r0
   43bc0:	sub	r9, r2, #1
   43bc4:	mov	r0, #4
   43bc8:	mov	r4, r3
   43bcc:	mov	r5, #0
   43bd0:	mov	sl, #0
   43bd4:	add	r3, r0, r9, lsl #1
   43bd8:	cmp	r3, r1
   43bdc:	bge	43bfc <flatcc_json_printer_union_vector_field@@Base+0x54>
   43be0:	ldr	r7, [r6, #4]
   43be4:	mov	sl, #0
   43be8:	add	r3, r7, r3
   43bec:	ldrh	r3, [r3]
   43bf0:	cmp	r3, #0
   43bf4:	ldrne	r7, [r6]
   43bf8:	addne	sl, r7, r3
   43bfc:	ldr	r7, [fp, #8]
   43c00:	add	r0, r0, r2, lsl #1
   43c04:	cmp	r0, r1
   43c08:	bge	43c24 <flatcc_json_printer_union_vector_field@@Base+0x7c>
   43c0c:	ldr	r1, [r6, #4]
   43c10:	add	r0, r1, r0
   43c14:	ldrh	r0, [r0]
   43c18:	cmp	r0, #0
   43c1c:	ldrne	r1, [r6]
   43c20:	addne	r5, r1, r0
   43c24:	ldr	r0, [r6, #12]
   43c28:	cmp	r7, #101	; 0x65
   43c2c:	str	r5, [sp, #16]
   43c30:	str	r0, [sp, #24]
   43c34:	bge	43f48 <flatcc_json_printer_union_vector_field@@Base+0x3a0>
   43c38:	add	r5, sp, #32
   43c3c:	mov	r1, r4
   43c40:	mov	r2, r7
   43c44:	mov	r0, r5
   43c48:	bl	14e5c <memcpy@plt>
   43c4c:	movw	r0, #29791	; 0x745f
   43c50:	cmp	sl, #0
   43c54:	mov	r1, #101	; 0x65
   43c58:	movt	r0, #28793	; 0x7079
   43c5c:	str	r0, [r5, r7]
   43c60:	add	r0, r5, r7
   43c64:	ldr	r5, [sp, #16]
   43c68:	strb	r1, [r0, #4]
   43c6c:	cmpne	r5, #0
   43c70:	bne	43c7c <flatcc_json_printer_union_vector_field@@Base+0xd4>
   43c74:	sub	sp, fp, #28
   43c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43c7c:	ldr	r0, [fp, #12]
   43c80:	add	r1, r7, #5
   43c84:	add	r3, sp, #32
   43c88:	mov	r2, r9
   43c8c:	str	r1, [sp]
   43c90:	mov	r1, r6
   43c94:	str	r0, [sp, #4]
   43c98:	mov	r0, r8
   43c9c:	bl	407c8 <flatcc_json_printer_utype_enum_vector_field@@Base>
   43ca0:	ldr	r0, [r6, #16]
   43ca4:	add	r1, r0, #1
   43ca8:	cmp	r0, #0
   43cac:	str	r1, [r6, #16]
   43cb0:	beq	43cc8 <flatcc_json_printer_union_vector_field@@Base+0x120>
   43cb4:	ldr	r0, [r8, #20]
   43cb8:	add	r1, r0, #1
   43cbc:	str	r1, [r8, #20]
   43cc0:	mov	r1, #44	; 0x2c
   43cc4:	strb	r1, [r0]
   43cc8:	ldr	r0, [r5]
   43ccc:	ldr	r9, [sl]
   43cd0:	mov	r1, r4
   43cd4:	mov	r2, r7
   43cd8:	ldr	r6, [r5, r0]!
   43cdc:	str	r0, [sp, #12]
   43ce0:	mov	r0, r8
   43ce4:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   43ce8:	mov	r7, r8
   43cec:	cmp	r6, #0
   43cf0:	ldr	r0, [r7, #20]!
   43cf4:	add	r1, r0, #1
   43cf8:	str	r1, [r7]
   43cfc:	ldr	r1, [r7, #12]
   43d00:	add	r1, r1, #1
   43d04:	str	r1, [r7, #12]
   43d08:	mov	r1, #91	; 0x5b
   43d0c:	strb	r1, [r0]
   43d10:	beq	43e64 <flatcc_json_printer_union_vector_field@@Base+0x2bc>
   43d14:	add	r4, sl, r9
   43d18:	ldr	r2, [fp, #16]
   43d1c:	ldrb	r0, [r4, #4]
   43d20:	cmp	r0, #0
   43d24:	beq	43d50 <flatcc_json_printer_union_vector_field@@Base+0x1a8>
   43d28:	add	r1, r5, #4
   43d2c:	mov	r9, r2
   43d30:	str	r1, [sp, #20]
   43d34:	strb	r0, [sp, #28]
   43d38:	add	r1, sp, #20
   43d3c:	mov	r0, r8
   43d40:	blx	r2
   43d44:	subs	r6, r6, #1
   43d48:	bne	43da8 <flatcc_json_printer_union_vector_field@@Base+0x200>
   43d4c:	b	43e64 <flatcc_json_printer_union_vector_field@@Base+0x2bc>
   43d50:	ldr	r0, [r7]
   43d54:	mov	r9, r2
   43d58:	add	r1, r0, #1
   43d5c:	str	r1, [r7]
   43d60:	mov	r1, #110	; 0x6e
   43d64:	strb	r1, [r0]
   43d68:	ldr	r0, [r7]
   43d6c:	add	r1, r0, #1
   43d70:	str	r1, [r7]
   43d74:	mov	r1, #117	; 0x75
   43d78:	strb	r1, [r0]
   43d7c:	ldr	r0, [r7]
   43d80:	add	r1, r0, #1
   43d84:	str	r1, [r7]
   43d88:	mov	r1, #108	; 0x6c
   43d8c:	strb	r1, [r0]
   43d90:	ldr	r0, [r7]
   43d94:	add	r2, r0, #1
   43d98:	str	r2, [r7]
   43d9c:	strb	r1, [r0]
   43da0:	subs	r6, r6, #1
   43da4:	beq	43e64 <flatcc_json_printer_union_vector_field@@Base+0x2bc>
   43da8:	ldr	r0, [sp, #16]
   43dac:	ldr	r1, [sp, #12]
   43db0:	add	r4, r4, #5
   43db4:	mov	sl, #44	; 0x2c
   43db8:	add	r0, r1, r0
   43dbc:	add	r5, r0, #8
   43dc0:	b	43e20 <flatcc_json_printer_union_vector_field@@Base+0x278>
   43dc4:	ldr	r0, [r7]
   43dc8:	mov	r2, #108	; 0x6c
   43dcc:	add	r1, r0, #1
   43dd0:	str	r1, [r7]
   43dd4:	mov	r1, #110	; 0x6e
   43dd8:	strb	r1, [r0]
   43ddc:	ldr	r0, [r7]
   43de0:	add	r1, r0, #1
   43de4:	str	r1, [r7]
   43de8:	mov	r1, #117	; 0x75
   43dec:	strb	r1, [r0]
   43df0:	ldr	r0, [r7]
   43df4:	add	r1, r0, #1
   43df8:	str	r1, [r7]
   43dfc:	strb	r2, [r0]
   43e00:	ldr	r0, [r7]
   43e04:	add	r1, r0, #1
   43e08:	str	r1, [r7]
   43e0c:	strb	r2, [r0]
   43e10:	add	r5, r5, #4
   43e14:	add	r4, r4, #1
   43e18:	cmp	r6, #0
   43e1c:	beq	43e64 <flatcc_json_printer_union_vector_field@@Base+0x2bc>
   43e20:	ldrb	r0, [r4]
   43e24:	ldr	r1, [r7]
   43e28:	sub	r6, r6, #1
   43e2c:	add	r2, r1, #1
   43e30:	cmp	r0, #0
   43e34:	str	r2, [r7]
   43e38:	strb	sl, [r1]
   43e3c:	beq	43dc4 <flatcc_json_printer_union_vector_field@@Base+0x21c>
   43e40:	str	r5, [sp, #20]
   43e44:	strb	r0, [sp, #28]
   43e48:	mov	r0, r8
   43e4c:	add	r1, sp, #20
   43e50:	blx	r9
   43e54:	add	r5, r5, #4
   43e58:	add	r4, r4, #1
   43e5c:	cmp	r6, #0
   43e60:	bne	43e20 <flatcc_json_printer_union_vector_field@@Base+0x278>
   43e64:	ldrb	r1, [r8, #25]
   43e68:	ldr	r0, [r8, #20]
   43e6c:	cmp	r1, #0
   43e70:	beq	43f30 <flatcc_json_printer_union_vector_field@@Base+0x388>
   43e74:	add	r1, r0, #1
   43e78:	str	r1, [r8, #20]
   43e7c:	mov	r1, #10
   43e80:	strb	r1, [r0]
   43e84:	ldr	r0, [r8, #32]
   43e88:	sub	r2, r0, #1
   43e8c:	str	r2, [r8, #32]
   43e90:	ldrb	r3, [r8, #25]
   43e94:	ldr	r0, [r8, #20]
   43e98:	ldr	r1, [r8, #16]
   43e9c:	mla	r6, r2, r3, r0
   43ea0:	mul	r5, r2, r3
   43ea4:	cmp	r6, r1
   43ea8:	bls	43f18 <flatcc_json_printer_union_vector_field@@Base+0x370>
   43eac:	cmp	r0, r1
   43eb0:	bcc	43ecc <flatcc_json_printer_union_vector_field@@Base+0x324>
   43eb4:	ldr	r2, [r8, #44]	; 0x2c
   43eb8:	mov	r0, r8
   43ebc:	mov	r1, #0
   43ec0:	blx	r2
   43ec4:	ldr	r1, [r8, #16]
   43ec8:	ldr	r0, [r8, #20]
   43ecc:	sub	r6, r1, r0
   43ed0:	cmp	r6, r5
   43ed4:	bcs	43f18 <flatcc_json_printer_union_vector_field@@Base+0x370>
   43ed8:	mov	r1, #32
   43edc:	mov	r2, r6
   43ee0:	bl	14eec <memset@plt>
   43ee4:	ldr	r0, [r8, #20]
   43ee8:	ldr	r2, [r8, #44]	; 0x2c
   43eec:	mov	r1, #0
   43ef0:	add	r0, r0, r6
   43ef4:	str	r0, [r8, #20]
   43ef8:	mov	r0, r8
   43efc:	blx	r2
   43f00:	ldr	r1, [r8, #16]
   43f04:	ldr	r0, [r8, #20]
   43f08:	sub	r5, r5, r6
   43f0c:	sub	r6, r1, r0
   43f10:	cmp	r5, r6
   43f14:	bhi	43ed8 <flatcc_json_printer_union_vector_field@@Base+0x330>
   43f18:	mov	r1, #32
   43f1c:	mov	r2, r5
   43f20:	bl	14eec <memset@plt>
   43f24:	ldr	r0, [r7]
   43f28:	add	r0, r0, r5
   43f2c:	str	r0, [r7]
   43f30:	add	r1, r0, #1
   43f34:	str	r1, [r7]
   43f38:	mov	r1, #93	; 0x5d
   43f3c:	strb	r1, [r0]
   43f40:	sub	sp, fp, #28
   43f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43f48:	ldr	r0, [r8, #36]	; 0x24
   43f4c:	movw	r1, #47739	; 0xba7b
   43f50:	movw	r3, #47814	; 0xbac6
   43f54:	movw	r2, #843	; 0x34b
   43f58:	movt	r1, #4
   43f5c:	movt	r3, #4
   43f60:	cmp	r0, #0
   43f64:	moveq	r0, #1
   43f68:	streq	r0, [r8, #36]	; 0x24
   43f6c:	movw	r0, #47712	; 0xba60
   43f70:	movt	r0, #4
   43f74:	bl	14f40 <__assert_fail@plt>

00043f78 <flatcc_json_printer_table_field@@Base>:
   43f78:	push	{r4, r5, r6, sl, fp, lr}
   43f7c:	add	fp, sp, #16
   43f80:	sub	sp, sp, #24
   43f84:	mov	r5, r1
   43f88:	ldr	r1, [r1, #8]
   43f8c:	mov	r4, r0
   43f90:	mov	r0, #4
   43f94:	add	r0, r0, r2, lsl #1
   43f98:	cmp	r0, r1
   43f9c:	bge	43fbc <flatcc_json_printer_table_field@@Base+0x44>
   43fa0:	ldr	r1, [r5, #4]
   43fa4:	add	r0, r1, r0
   43fa8:	ldrh	r0, [r0]
   43fac:	cmp	r0, #0
   43fb0:	ldrne	r1, [r5]
   43fb4:	addsne	r6, r1, r0
   43fb8:	bne	43fc4 <flatcc_json_printer_table_field@@Base+0x4c>
   43fbc:	sub	sp, fp, #16
   43fc0:	pop	{r4, r5, r6, sl, fp, pc}
   43fc4:	ldr	r0, [r5, #16]
   43fc8:	ldr	r2, [fp, #8]
   43fcc:	add	r1, r0, #1
   43fd0:	cmp	r0, #0
   43fd4:	str	r1, [r5, #16]
   43fd8:	beq	43ff0 <flatcc_json_printer_table_field@@Base+0x78>
   43fdc:	ldr	r0, [r4, #20]
   43fe0:	add	r1, r0, #1
   43fe4:	str	r1, [r4, #20]
   43fe8:	mov	r1, #44	; 0x2c
   43fec:	strb	r1, [r0]
   43ff0:	mov	r0, r4
   43ff4:	mov	r1, r3
   43ff8:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   43ffc:	ldr	r0, [r5, #12]
   44000:	subs	r0, r0, #1
   44004:	beq	44148 <flatcc_json_printer_table_field@@Base+0x1d0>
   44008:	ldr	r1, [r6]
   4400c:	ldr	r3, [r4, #20]
   44010:	ldr	r2, [fp, #12]
   44014:	add	r1, r6, r1
   44018:	ldr	r6, [r4, #32]
   4401c:	add	r6, r6, #1
   44020:	str	r6, [r4, #32]
   44024:	add	r6, r3, #1
   44028:	str	r6, [r4, #20]
   4402c:	mov	r6, #123	; 0x7b
   44030:	strb	r6, [r3]
   44034:	str	r0, [sp, #16]
   44038:	mov	r0, #0
   4403c:	str	r0, [sp, #20]
   44040:	str	r1, [sp, #4]
   44044:	ldr	r0, [r1]
   44048:	sub	r3, r1, r0
   4404c:	str	r3, [sp, #8]
   44050:	ldrh	r0, [r1, -r0]
   44054:	add	r1, sp, #4
   44058:	str	r0, [sp, #12]
   4405c:	mov	r0, r4
   44060:	blx	r2
   44064:	ldrb	r1, [r4, #25]
   44068:	ldr	r0, [r4, #20]
   4406c:	cmp	r1, #0
   44070:	beq	44130 <flatcc_json_printer_table_field@@Base+0x1b8>
   44074:	add	r1, r0, #1
   44078:	str	r1, [r4, #20]
   4407c:	mov	r1, #10
   44080:	strb	r1, [r0]
   44084:	ldr	r0, [r4, #32]
   44088:	sub	r2, r0, #1
   4408c:	str	r2, [r4, #32]
   44090:	ldrb	r3, [r4, #25]
   44094:	ldr	r0, [r4, #20]
   44098:	ldr	r1, [r4, #16]
   4409c:	mla	r6, r2, r3, r0
   440a0:	mul	r5, r2, r3
   440a4:	cmp	r6, r1
   440a8:	bls	44118 <flatcc_json_printer_table_field@@Base+0x1a0>
   440ac:	cmp	r0, r1
   440b0:	bcc	440cc <flatcc_json_printer_table_field@@Base+0x154>
   440b4:	ldr	r2, [r4, #44]	; 0x2c
   440b8:	mov	r0, r4
   440bc:	mov	r1, #0
   440c0:	blx	r2
   440c4:	ldr	r1, [r4, #16]
   440c8:	ldr	r0, [r4, #20]
   440cc:	sub	r6, r1, r0
   440d0:	cmp	r6, r5
   440d4:	bcs	44118 <flatcc_json_printer_table_field@@Base+0x1a0>
   440d8:	mov	r1, #32
   440dc:	mov	r2, r6
   440e0:	bl	14eec <memset@plt>
   440e4:	ldr	r0, [r4, #20]
   440e8:	ldr	r2, [r4, #44]	; 0x2c
   440ec:	mov	r1, #0
   440f0:	add	r0, r0, r6
   440f4:	str	r0, [r4, #20]
   440f8:	mov	r0, r4
   440fc:	blx	r2
   44100:	ldr	r1, [r4, #16]
   44104:	ldr	r0, [r4, #20]
   44108:	sub	r5, r5, r6
   4410c:	sub	r6, r1, r0
   44110:	cmp	r5, r6
   44114:	bhi	440d8 <flatcc_json_printer_table_field@@Base+0x160>
   44118:	mov	r1, #32
   4411c:	mov	r2, r5
   44120:	bl	14eec <memset@plt>
   44124:	ldr	r0, [r4, #20]
   44128:	add	r0, r0, r5
   4412c:	str	r0, [r4, #20]
   44130:	add	r1, r0, #1
   44134:	str	r1, [r4, #20]
   44138:	mov	r1, #125	; 0x7d
   4413c:	strb	r1, [r0]
   44140:	sub	sp, fp, #16
   44144:	pop	{r4, r5, r6, sl, fp, pc}
   44148:	ldr	r0, [r4, #36]	; 0x24
   4414c:	cmp	r0, #0
   44150:	bne	43fbc <flatcc_json_printer_table_field@@Base+0x44>
   44154:	mov	r0, #2
   44158:	str	r0, [r4, #36]	; 0x24
   4415c:	sub	sp, fp, #16
   44160:	pop	{r4, r5, r6, sl, fp, pc}

00044164 <flatcc_json_printer_union_field@@Base>:
   44164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44168:	add	fp, sp, #28
   4416c:	sub	sp, sp, #20
   44170:	mov	r9, r1
   44174:	mov	r4, r0
   44178:	mov	r0, #2
   4417c:	mov	sl, r3
   44180:	lsl	r1, r2, #1
   44184:	add	r3, r0, r2, lsl #1
   44188:	ldr	r2, [r9, #8]
   4418c:	mov	r0, #0
   44190:	cmp	r3, r2
   44194:	bge	441b0 <flatcc_json_printer_union_field@@Base+0x4c>
   44198:	ldr	r7, [r9, #4]
   4419c:	add	r3, r7, r3
   441a0:	ldrh	r3, [r3]
   441a4:	cmp	r3, #0
   441a8:	ldrne	r0, [r9]
   441ac:	addne	r0, r0, r3
   441b0:	add	r1, r1, #4
   441b4:	cmp	r1, r2
   441b8:	bge	441d4 <flatcc_json_printer_union_field@@Base+0x70>
   441bc:	ldr	r2, [r9, #4]
   441c0:	add	r1, r2, r1
   441c4:	ldrh	r1, [r1]
   441c8:	cmp	r1, #0
   441cc:	cmpne	r0, #0
   441d0:	bne	441dc <flatcc_json_printer_union_field@@Base+0x78>
   441d4:	sub	sp, fp, #28
   441d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   441dc:	ldr	r2, [r9]
   441e0:	adds	r1, r2, r1
   441e4:	str	r1, [sp, #4]
   441e8:	beq	441d4 <flatcc_json_printer_union_field@@Base+0x70>
   441ec:	ldrb	r6, [r0]
   441f0:	ldr	r0, [r9, #16]
   441f4:	add	r1, r0, #1
   441f8:	cmp	r0, #0
   441fc:	str	r1, [r9, #16]
   44200:	beq	44218 <flatcc_json_printer_union_field@@Base+0xb4>
   44204:	ldr	r0, [r4, #20]
   44208:	add	r1, r0, #1
   4420c:	str	r1, [r4, #20]
   44210:	mov	r1, #44	; 0x2c
   44214:	strb	r1, [r0]
   44218:	ldrb	r1, [r4, #25]
   4421c:	ldr	r8, [fp, #8]
   44220:	ldr	r0, [r4, #20]
   44224:	cmp	r1, #0
   44228:	beq	442e0 <flatcc_json_printer_union_field@@Base+0x17c>
   4422c:	add	r1, r0, #1
   44230:	mov	r5, r6
   44234:	str	r1, [r4, #20]
   44238:	mov	r1, #10
   4423c:	strb	r1, [r0]
   44240:	ldr	r0, [r4, #20]
   44244:	ldrb	r2, [r4, #25]
   44248:	ldr	r3, [r4, #32]
   4424c:	ldr	r1, [r4, #16]
   44250:	mla	r6, r3, r2, r0
   44254:	mul	r7, r3, r2
   44258:	cmp	r6, r1
   4425c:	bls	44304 <flatcc_json_printer_union_field@@Base+0x1a0>
   44260:	cmp	r0, r1
   44264:	bcc	44280 <flatcc_json_printer_union_field@@Base+0x11c>
   44268:	ldr	r2, [r4, #44]	; 0x2c
   4426c:	mov	r0, r4
   44270:	mov	r1, #0
   44274:	blx	r2
   44278:	ldr	r1, [r4, #16]
   4427c:	ldr	r0, [r4, #20]
   44280:	mov	r6, r5
   44284:	sub	r5, r1, r0
   44288:	cmp	r5, r7
   4428c:	bcs	442d0 <flatcc_json_printer_union_field@@Base+0x16c>
   44290:	mov	r1, #32
   44294:	mov	r2, r5
   44298:	bl	14eec <memset@plt>
   4429c:	ldr	r0, [r4, #20]
   442a0:	ldr	r2, [r4, #44]	; 0x2c
   442a4:	mov	r1, #0
   442a8:	add	r0, r0, r5
   442ac:	str	r0, [r4, #20]
   442b0:	mov	r0, r4
   442b4:	blx	r2
   442b8:	ldr	r1, [r4, #16]
   442bc:	ldr	r0, [r4, #20]
   442c0:	sub	r7, r7, r5
   442c4:	sub	r5, r1, r0
   442c8:	cmp	r7, r5
   442cc:	bhi	44290 <flatcc_json_printer_union_field@@Base+0x12c>
   442d0:	mov	r1, #32
   442d4:	mov	r2, r7
   442d8:	bl	14eec <memset@plt>
   442dc:	b	44314 <flatcc_json_printer_union_field@@Base+0x1b0>
   442e0:	ldr	r1, [r4, #16]
   442e4:	cmp	r0, r1
   442e8:	bcc	44320 <flatcc_json_printer_union_field@@Base+0x1bc>
   442ec:	ldr	r2, [r4, #44]	; 0x2c
   442f0:	mov	r0, r4
   442f4:	mov	r1, #0
   442f8:	blx	r2
   442fc:	ldr	r0, [r4, #20]
   44300:	b	44320 <flatcc_json_printer_union_field@@Base+0x1bc>
   44304:	mov	r1, #32
   44308:	mov	r2, r7
   4430c:	bl	14eec <memset@plt>
   44310:	mov	r6, r5
   44314:	ldr	r0, [r4, #20]
   44318:	add	r0, r0, r7
   4431c:	str	r0, [r4, #20]
   44320:	mov	r1, #34	; 0x22
   44324:	strb	r1, [r0]
   44328:	ldrb	r2, [r4, #26]
   4432c:	ldr	r0, [r4, #20]
   44330:	ldr	r1, [r4, #16]
   44334:	cmp	r2, #0
   44338:	addeq	r0, r0, #1
   4433c:	add	r2, r0, r8
   44340:	str	r0, [r4, #20]
   44344:	cmp	r2, r1
   44348:	bcs	44360 <flatcc_json_printer_union_field@@Base+0x1fc>
   4434c:	mov	r1, sl
   44350:	mov	r2, r8
   44354:	bl	14e5c <memcpy@plt>
   44358:	mov	r7, r8
   4435c:	b	443fc <flatcc_json_printer_union_field@@Base+0x298>
   44360:	cmp	r0, r1
   44364:	mov	r7, r8
   44368:	str	r6, [sp]
   4436c:	bcc	44388 <flatcc_json_printer_union_field@@Base+0x224>
   44370:	ldr	r2, [r4, #44]	; 0x2c
   44374:	mov	r0, r4
   44378:	mov	r1, #0
   4437c:	blx	r2
   44380:	ldr	r1, [r4, #16]
   44384:	ldr	r0, [r4, #20]
   44388:	sub	r8, r1, r0
   4438c:	mov	r6, sl
   44390:	mov	r5, r7
   44394:	cmp	r8, r7
   44398:	bcs	443e8 <flatcc_json_printer_union_field@@Base+0x284>
   4439c:	mov	r7, r5
   443a0:	mov	r6, sl
   443a4:	mov	r1, r6
   443a8:	mov	r2, r8
   443ac:	bl	14e5c <memcpy@plt>
   443b0:	ldr	r0, [r4, #20]
   443b4:	ldr	r2, [r4, #44]	; 0x2c
   443b8:	mov	r1, #0
   443bc:	add	r0, r0, r8
   443c0:	str	r0, [r4, #20]
   443c4:	mov	r0, r4
   443c8:	blx	r2
   443cc:	ldr	r1, [r4, #16]
   443d0:	ldr	r0, [r4, #20]
   443d4:	sub	r7, r7, r8
   443d8:	add	r6, r6, r8
   443dc:	sub	r8, r1, r0
   443e0:	cmp	r7, r8
   443e4:	bhi	443a4 <flatcc_json_printer_union_field@@Base+0x240>
   443e8:	mov	r1, r6
   443ec:	mov	r2, r7
   443f0:	bl	14e5c <memcpy@plt>
   443f4:	ldr	r6, [sp]
   443f8:	mov	r8, r5
   443fc:	ldr	r0, [r4, #20]
   44400:	ldr	r1, [r4, #16]
   44404:	add	r0, r0, r7
   44408:	add	r2, r0, #5
   4440c:	str	r0, [r4, #20]
   44410:	cmp	r2, r1
   44414:	bcs	44434 <flatcc_json_printer_union_field@@Base+0x2d0>
   44418:	mov	r1, #101	; 0x65
   4441c:	mov	r7, #5
   44420:	strb	r1, [r0, #4]
   44424:	movw	r1, #29791	; 0x745f
   44428:	movt	r1, #28793	; 0x7079
   4442c:	str	r1, [r0]
   44430:	b	444d8 <flatcc_json_printer_union_field@@Base+0x374>
   44434:	cmp	r0, r1
   44438:	bcc	44454 <flatcc_json_printer_union_field@@Base+0x2f0>
   4443c:	ldr	r2, [r4, #44]	; 0x2c
   44440:	mov	r0, r4
   44444:	mov	r1, #0
   44448:	blx	r2
   4444c:	ldr	r1, [r4, #16]
   44450:	ldr	r0, [r4, #20]
   44454:	sub	r5, r1, r0
   44458:	mov	r8, r6
   4445c:	cmp	r5, #4
   44460:	bhi	444b8 <flatcc_json_printer_union_field@@Base+0x354>
   44464:	movw	r6, #48016	; 0xbb90
   44468:	mov	r7, #5
   4446c:	movt	r6, #4
   44470:	mov	r1, r6
   44474:	mov	r2, r5
   44478:	bl	14e5c <memcpy@plt>
   4447c:	ldr	r0, [r4, #20]
   44480:	ldr	r2, [r4, #44]	; 0x2c
   44484:	mov	r1, #0
   44488:	add	r0, r0, r5
   4448c:	str	r0, [r4, #20]
   44490:	mov	r0, r4
   44494:	blx	r2
   44498:	ldr	r1, [r4, #16]
   4449c:	ldr	r0, [r4, #20]
   444a0:	sub	r7, r7, r5
   444a4:	add	r6, r6, r5
   444a8:	sub	r5, r1, r0
   444ac:	cmp	r7, r5
   444b0:	bhi	44470 <flatcc_json_printer_union_field@@Base+0x30c>
   444b4:	b	444c4 <flatcc_json_printer_union_field@@Base+0x360>
   444b8:	movw	r6, #48016	; 0xbb90
   444bc:	mov	r7, #5
   444c0:	movt	r6, #4
   444c4:	mov	r1, r6
   444c8:	mov	r2, r7
   444cc:	bl	14e5c <memcpy@plt>
   444d0:	mov	r6, r8
   444d4:	ldr	r8, [fp, #8]
   444d8:	ldr	r0, [r4, #20]
   444dc:	add	r1, r0, r7
   444e0:	str	r1, [r4, #20]
   444e4:	mov	r1, #34	; 0x22
   444e8:	strb	r1, [r0, r7]
   444ec:	ldrb	r0, [r4, #26]
   444f0:	ldr	r1, [r4, #20]
   444f4:	cmp	r0, #0
   444f8:	addeq	r1, r1, #1
   444fc:	add	r0, r1, #1
   44500:	str	r0, [r4, #20]
   44504:	mov	r0, #58	; 0x3a
   44508:	strb	r0, [r1]
   4450c:	mov	r1, #32
   44510:	ldr	r0, [r4, #20]
   44514:	strb	r1, [r0]
   44518:	ldrb	r1, [r4, #25]
   4451c:	ldr	r0, [r4, #20]
   44520:	cmp	r1, #0
   44524:	addne	r0, r0, #1
   44528:	str	r0, [r4, #20]
   4452c:	ldrb	r1, [r4, #27]
   44530:	cmp	r1, #0
   44534:	beq	4458c <flatcc_json_printer_union_field@@Base+0x428>
   44538:	mov	r1, #0
   4453c:	cmp	r6, #100	; 0x64
   44540:	bcc	445a8 <flatcc_json_printer_union_field@@Base+0x444>
   44544:	strb	r1, [r0, #3]
   44548:	movw	r1, #34079	; 0x851f
   4454c:	movt	r1, #20971	; 0x51eb
   44550:	umull	r1, r2, r6, r1
   44554:	mov	r1, #48	; 0x30
   44558:	orr	r1, r1, r2, lsr #5
   4455c:	strb	r1, [r0]
   44560:	lsr	r1, r2, #5
   44564:	mov	r2, #100	; 0x64
   44568:	mls	r1, r1, r2, r6
   4456c:	movw	r2, #48464	; 0xbd50
   44570:	movt	r2, #4
   44574:	uxtb	r1, r1
   44578:	add	r1, r2, r1, lsl #1
   4457c:	ldrh	r1, [r1]
   44580:	strh	r1, [r0, #1]
   44584:	mov	r0, #3
   44588:	b	445f8 <flatcc_json_printer_union_field@@Base+0x494>
   4458c:	ldr	r2, [fp, #12]
   44590:	mov	r0, r4
   44594:	mov	r1, r6
   44598:	blx	r2
   4459c:	cmp	r6, #0
   445a0:	bne	4460c <flatcc_json_printer_union_field@@Base+0x4a8>
   445a4:	b	441d4 <flatcc_json_printer_union_field@@Base+0x70>
   445a8:	cmp	r6, #10
   445ac:	bcc	445e8 <flatcc_json_printer_union_field@@Base+0x484>
   445b0:	strb	r1, [r0, #2]
   445b4:	movw	r1, #34079	; 0x851f
   445b8:	movt	r1, #20971	; 0x51eb
   445bc:	umull	r1, r2, r6, r1
   445c0:	lsr	r1, r2, #5
   445c4:	mov	r2, #100	; 0x64
   445c8:	mls	r1, r1, r2, r6
   445cc:	movw	r2, #48464	; 0xbd50
   445d0:	movt	r2, #4
   445d4:	add	r1, r2, r1, lsl #1
   445d8:	ldrh	r1, [r1]
   445dc:	strh	r1, [r0]
   445e0:	mov	r0, #2
   445e4:	b	445f8 <flatcc_json_printer_union_field@@Base+0x494>
   445e8:	strb	r1, [r0, #1]
   445ec:	add	r1, r6, #48	; 0x30
   445f0:	strb	r1, [r0]
   445f4:	mov	r0, #1
   445f8:	ldr	r1, [r4, #20]
   445fc:	add	r0, r1, r0
   44600:	str	r0, [r4, #20]
   44604:	cmp	r6, #0
   44608:	beq	441d4 <flatcc_json_printer_union_field@@Base+0x70>
   4460c:	ldr	r0, [r4, #20]
   44610:	ldr	r5, [fp, #16]
   44614:	mov	r2, r8
   44618:	add	r1, r0, #1
   4461c:	str	r1, [r4, #20]
   44620:	mov	r1, #44	; 0x2c
   44624:	strb	r1, [r0]
   44628:	mov	r0, r4
   4462c:	mov	r1, sl
   44630:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   44634:	ldr	r0, [r9, #12]
   44638:	ldr	r1, [sp, #4]
   4463c:	strb	r6, [sp, #16]
   44640:	str	r1, [sp, #8]
   44644:	str	r0, [sp, #12]
   44648:	add	r1, sp, #8
   4464c:	mov	r0, r4
   44650:	blx	r5
   44654:	sub	sp, fp, #28
   44658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004465c <flatcc_json_printer_union_table@@Base>:
   4465c:	push	{r4, r5, r6, sl, fp, lr}
   44660:	add	fp, sp, #16
   44664:	sub	sp, sp, #24
   44668:	mov	r4, r0
   4466c:	ldr	r0, [r1, #4]
   44670:	subs	r0, r0, #1
   44674:	beq	447b8 <flatcc_json_printer_union_table@@Base+0x15c>
   44678:	ldr	r1, [r1]
   4467c:	ldr	r6, [r4, #32]
   44680:	ldr	r3, [r1]
   44684:	add	r6, r6, #1
   44688:	add	r1, r1, r3
   4468c:	ldr	r3, [r4, #20]
   44690:	str	r6, [r4, #32]
   44694:	add	r6, r3, #1
   44698:	str	r6, [r4, #20]
   4469c:	mov	r6, #123	; 0x7b
   446a0:	strb	r6, [r3]
   446a4:	str	r0, [sp, #16]
   446a8:	mov	r0, #0
   446ac:	str	r0, [sp, #20]
   446b0:	str	r1, [sp, #4]
   446b4:	ldr	r0, [r1]
   446b8:	sub	r3, r1, r0
   446bc:	str	r3, [sp, #8]
   446c0:	ldrh	r0, [r1, -r0]
   446c4:	add	r1, sp, #4
   446c8:	str	r0, [sp, #12]
   446cc:	mov	r0, r4
   446d0:	blx	r2
   446d4:	ldrb	r1, [r4, #25]
   446d8:	ldr	r0, [r4, #20]
   446dc:	cmp	r1, #0
   446e0:	beq	447a0 <flatcc_json_printer_union_table@@Base+0x144>
   446e4:	add	r1, r0, #1
   446e8:	str	r1, [r4, #20]
   446ec:	mov	r1, #10
   446f0:	strb	r1, [r0]
   446f4:	ldr	r0, [r4, #32]
   446f8:	sub	r2, r0, #1
   446fc:	str	r2, [r4, #32]
   44700:	ldrb	r3, [r4, #25]
   44704:	ldr	r0, [r4, #20]
   44708:	ldr	r1, [r4, #16]
   4470c:	mla	r6, r2, r3, r0
   44710:	mul	r5, r2, r3
   44714:	cmp	r6, r1
   44718:	bls	44788 <flatcc_json_printer_union_table@@Base+0x12c>
   4471c:	cmp	r0, r1
   44720:	bcc	4473c <flatcc_json_printer_union_table@@Base+0xe0>
   44724:	ldr	r2, [r4, #44]	; 0x2c
   44728:	mov	r0, r4
   4472c:	mov	r1, #0
   44730:	blx	r2
   44734:	ldr	r1, [r4, #16]
   44738:	ldr	r0, [r4, #20]
   4473c:	sub	r6, r1, r0
   44740:	cmp	r6, r5
   44744:	bcs	44788 <flatcc_json_printer_union_table@@Base+0x12c>
   44748:	mov	r1, #32
   4474c:	mov	r2, r6
   44750:	bl	14eec <memset@plt>
   44754:	ldr	r0, [r4, #20]
   44758:	ldr	r2, [r4, #44]	; 0x2c
   4475c:	mov	r1, #0
   44760:	add	r0, r0, r6
   44764:	str	r0, [r4, #20]
   44768:	mov	r0, r4
   4476c:	blx	r2
   44770:	ldr	r1, [r4, #16]
   44774:	ldr	r0, [r4, #20]
   44778:	sub	r5, r5, r6
   4477c:	sub	r6, r1, r0
   44780:	cmp	r5, r6
   44784:	bhi	44748 <flatcc_json_printer_union_table@@Base+0xec>
   44788:	mov	r1, #32
   4478c:	mov	r2, r5
   44790:	bl	14eec <memset@plt>
   44794:	ldr	r0, [r4, #20]
   44798:	add	r0, r0, r5
   4479c:	str	r0, [r4, #20]
   447a0:	add	r1, r0, #1
   447a4:	str	r1, [r4, #20]
   447a8:	mov	r1, #125	; 0x7d
   447ac:	strb	r1, [r0]
   447b0:	sub	sp, fp, #16
   447b4:	pop	{r4, r5, r6, sl, fp, pc}
   447b8:	ldr	r0, [r4, #36]	; 0x24
   447bc:	cmp	r0, #0
   447c0:	beq	447cc <flatcc_json_printer_union_table@@Base+0x170>
   447c4:	sub	sp, fp, #16
   447c8:	pop	{r4, r5, r6, sl, fp, pc}
   447cc:	mov	r0, #2
   447d0:	str	r0, [r4, #36]	; 0x24
   447d4:	sub	sp, fp, #16
   447d8:	pop	{r4, r5, r6, sl, fp, pc}

000447dc <flatcc_json_printer_union_struct@@Base>:
   447dc:	push	{r4, r5, r6, sl, fp, lr}
   447e0:	add	fp, sp, #16
   447e4:	mov	r4, r0
   447e8:	ldr	r0, [r0, #20]
   447ec:	ldr	r3, [r4, #32]
   447f0:	add	r3, r3, #1
   447f4:	str	r3, [r4, #32]
   447f8:	add	r3, r0, #1
   447fc:	str	r3, [r4, #20]
   44800:	mov	r3, #123	; 0x7b
   44804:	strb	r3, [r0]
   44808:	ldr	r0, [r1]
   4480c:	ldr	r1, [r0]
   44810:	add	r1, r0, r1
   44814:	mov	r0, r4
   44818:	blx	r2
   4481c:	ldrb	r1, [r4, #25]
   44820:	ldr	r0, [r4, #20]
   44824:	cmp	r1, #0
   44828:	beq	448e8 <flatcc_json_printer_union_struct@@Base+0x10c>
   4482c:	add	r1, r0, #1
   44830:	str	r1, [r4, #20]
   44834:	mov	r1, #10
   44838:	strb	r1, [r0]
   4483c:	ldr	r0, [r4, #32]
   44840:	sub	r2, r0, #1
   44844:	str	r2, [r4, #32]
   44848:	ldrb	r3, [r4, #25]
   4484c:	ldr	r0, [r4, #20]
   44850:	ldr	r1, [r4, #16]
   44854:	mla	r6, r2, r3, r0
   44858:	mul	r5, r2, r3
   4485c:	cmp	r6, r1
   44860:	bls	448d0 <flatcc_json_printer_union_struct@@Base+0xf4>
   44864:	cmp	r0, r1
   44868:	bcc	44884 <flatcc_json_printer_union_struct@@Base+0xa8>
   4486c:	ldr	r2, [r4, #44]	; 0x2c
   44870:	mov	r0, r4
   44874:	mov	r1, #0
   44878:	blx	r2
   4487c:	ldr	r1, [r4, #16]
   44880:	ldr	r0, [r4, #20]
   44884:	sub	r6, r1, r0
   44888:	cmp	r6, r5
   4488c:	bcs	448d0 <flatcc_json_printer_union_struct@@Base+0xf4>
   44890:	mov	r1, #32
   44894:	mov	r2, r6
   44898:	bl	14eec <memset@plt>
   4489c:	ldr	r0, [r4, #20]
   448a0:	ldr	r2, [r4, #44]	; 0x2c
   448a4:	mov	r1, #0
   448a8:	add	r0, r0, r6
   448ac:	str	r0, [r4, #20]
   448b0:	mov	r0, r4
   448b4:	blx	r2
   448b8:	ldr	r1, [r4, #16]
   448bc:	ldr	r0, [r4, #20]
   448c0:	sub	r5, r5, r6
   448c4:	sub	r6, r1, r0
   448c8:	cmp	r5, r6
   448cc:	bhi	44890 <flatcc_json_printer_union_struct@@Base+0xb4>
   448d0:	mov	r1, #32
   448d4:	mov	r2, r5
   448d8:	bl	14eec <memset@plt>
   448dc:	ldr	r0, [r4, #20]
   448e0:	add	r0, r0, r5
   448e4:	str	r0, [r4, #20]
   448e8:	add	r1, r0, #1
   448ec:	str	r1, [r4, #20]
   448f0:	mov	r1, #125	; 0x7d
   448f4:	strb	r1, [r0]
   448f8:	pop	{r4, r5, r6, sl, fp, pc}

000448fc <flatcc_json_printer_union_string@@Base>:
   448fc:	ldr	r1, [r1]
   44900:	ldr	r2, [r1]
   44904:	ldr	r2, [r1, r2]!
   44908:	add	r1, r1, #4
   4490c:	b	39ae0 <flatcc_json_printer_string@@Base+0x4>

00044910 <flatcc_json_printer_embedded_struct_field@@Base>:
   44910:	push	{r4, r5, r6, r7, fp, lr}
   44914:	add	fp, sp, #16
   44918:	add	r7, fp, #8
   4491c:	mov	r5, r3
   44920:	mov	r3, r1
   44924:	mov	r6, r2
   44928:	mov	r4, r0
   4492c:	ldm	r7, {r1, r2, r7}
   44930:	cmp	r3, #0
   44934:	beq	4494c <flatcc_json_printer_embedded_struct_field@@Base+0x3c>
   44938:	ldr	r0, [r4, #20]
   4493c:	add	r3, r0, #1
   44940:	str	r3, [r4, #20]
   44944:	mov	r3, #44	; 0x2c
   44948:	strb	r3, [r0]
   4494c:	mov	r0, r4
   44950:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   44954:	ldr	r1, [r4, #32]
   44958:	ldr	r0, [r4, #20]
   4495c:	add	r1, r1, #1
   44960:	str	r1, [r4, #32]
   44964:	add	r1, r0, #1
   44968:	str	r1, [r4, #20]
   4496c:	mov	r1, #123	; 0x7b
   44970:	strb	r1, [r0]
   44974:	add	r1, r6, r5
   44978:	mov	r0, r4
   4497c:	blx	r7
   44980:	ldrb	r1, [r4, #25]
   44984:	ldr	r0, [r4, #20]
   44988:	cmp	r1, #0
   4498c:	beq	44a4c <flatcc_json_printer_embedded_struct_field@@Base+0x13c>
   44990:	add	r1, r0, #1
   44994:	str	r1, [r4, #20]
   44998:	mov	r1, #10
   4499c:	strb	r1, [r0]
   449a0:	ldr	r0, [r4, #32]
   449a4:	sub	r2, r0, #1
   449a8:	str	r2, [r4, #32]
   449ac:	ldrb	r3, [r4, #25]
   449b0:	ldr	r0, [r4, #20]
   449b4:	ldr	r1, [r4, #16]
   449b8:	mla	r7, r2, r3, r0
   449bc:	mul	r5, r2, r3
   449c0:	cmp	r7, r1
   449c4:	bls	44a34 <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   449c8:	cmp	r0, r1
   449cc:	bcc	449e8 <flatcc_json_printer_embedded_struct_field@@Base+0xd8>
   449d0:	ldr	r2, [r4, #44]	; 0x2c
   449d4:	mov	r0, r4
   449d8:	mov	r1, #0
   449dc:	blx	r2
   449e0:	ldr	r1, [r4, #16]
   449e4:	ldr	r0, [r4, #20]
   449e8:	sub	r6, r1, r0
   449ec:	cmp	r6, r5
   449f0:	bcs	44a34 <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   449f4:	mov	r1, #32
   449f8:	mov	r2, r6
   449fc:	bl	14eec <memset@plt>
   44a00:	ldr	r0, [r4, #20]
   44a04:	ldr	r2, [r4, #44]	; 0x2c
   44a08:	mov	r1, #0
   44a0c:	add	r0, r0, r6
   44a10:	str	r0, [r4, #20]
   44a14:	mov	r0, r4
   44a18:	blx	r2
   44a1c:	ldr	r1, [r4, #16]
   44a20:	ldr	r0, [r4, #20]
   44a24:	sub	r5, r5, r6
   44a28:	sub	r6, r1, r0
   44a2c:	cmp	r5, r6
   44a30:	bhi	449f4 <flatcc_json_printer_embedded_struct_field@@Base+0xe4>
   44a34:	mov	r1, #32
   44a38:	mov	r2, r5
   44a3c:	bl	14eec <memset@plt>
   44a40:	ldr	r0, [r4, #20]
   44a44:	add	r0, r0, r5
   44a48:	str	r0, [r4, #20]
   44a4c:	add	r1, r0, #1
   44a50:	str	r1, [r4, #20]
   44a54:	mov	r1, #125	; 0x7d
   44a58:	strb	r1, [r0]
   44a5c:	pop	{r4, r5, r6, r7, fp, pc}

00044a60 <flatcc_json_printer_struct_field@@Base>:
   44a60:	push	{r4, r5, r6, r7, fp, lr}
   44a64:	add	fp, sp, #16
   44a68:	mov	r4, r0
   44a6c:	mov	r0, #4
   44a70:	add	r0, r0, r2, lsl #1
   44a74:	ldr	r2, [r1, #8]
   44a78:	cmp	r0, r2
   44a7c:	popge	{r4, r5, r6, r7, fp, pc}
   44a80:	ldr	r2, [r1, #4]
   44a84:	add	r0, r2, r0
   44a88:	ldrh	r0, [r0]
   44a8c:	cmp	r0, #0
   44a90:	ldrne	r2, [r1]
   44a94:	addsne	r5, r2, r0
   44a98:	bne	44aa0 <flatcc_json_printer_struct_field@@Base+0x40>
   44a9c:	pop	{r4, r5, r6, r7, fp, pc}
   44aa0:	ldr	r0, [r1, #16]
   44aa4:	ldr	r7, [fp, #12]
   44aa8:	ldr	r2, [fp, #8]
   44aac:	add	r6, r0, #1
   44ab0:	cmp	r0, #0
   44ab4:	str	r6, [r1, #16]
   44ab8:	beq	44ad0 <flatcc_json_printer_struct_field@@Base+0x70>
   44abc:	ldr	r0, [r4, #20]
   44ac0:	add	r1, r0, #1
   44ac4:	str	r1, [r4, #20]
   44ac8:	mov	r1, #44	; 0x2c
   44acc:	strb	r1, [r0]
   44ad0:	mov	r0, r4
   44ad4:	mov	r1, r3
   44ad8:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   44adc:	ldr	r1, [r4, #32]
   44ae0:	ldr	r0, [r4, #20]
   44ae4:	add	r1, r1, #1
   44ae8:	str	r1, [r4, #32]
   44aec:	add	r1, r0, #1
   44af0:	str	r1, [r4, #20]
   44af4:	mov	r1, #123	; 0x7b
   44af8:	strb	r1, [r0]
   44afc:	mov	r0, r4
   44b00:	mov	r1, r5
   44b04:	blx	r7
   44b08:	ldrb	r1, [r4, #25]
   44b0c:	ldr	r0, [r4, #20]
   44b10:	cmp	r1, #0
   44b14:	beq	44bd4 <flatcc_json_printer_struct_field@@Base+0x174>
   44b18:	add	r1, r0, #1
   44b1c:	str	r1, [r4, #20]
   44b20:	mov	r1, #10
   44b24:	strb	r1, [r0]
   44b28:	ldr	r0, [r4, #32]
   44b2c:	sub	r2, r0, #1
   44b30:	str	r2, [r4, #32]
   44b34:	ldrb	r3, [r4, #25]
   44b38:	ldr	r0, [r4, #20]
   44b3c:	ldr	r1, [r4, #16]
   44b40:	mla	r7, r2, r3, r0
   44b44:	mul	r5, r2, r3
   44b48:	cmp	r7, r1
   44b4c:	bls	44bbc <flatcc_json_printer_struct_field@@Base+0x15c>
   44b50:	cmp	r0, r1
   44b54:	bcc	44b70 <flatcc_json_printer_struct_field@@Base+0x110>
   44b58:	ldr	r2, [r4, #44]	; 0x2c
   44b5c:	mov	r0, r4
   44b60:	mov	r1, #0
   44b64:	blx	r2
   44b68:	ldr	r1, [r4, #16]
   44b6c:	ldr	r0, [r4, #20]
   44b70:	sub	r6, r1, r0
   44b74:	cmp	r6, r5
   44b78:	bcs	44bbc <flatcc_json_printer_struct_field@@Base+0x15c>
   44b7c:	mov	r1, #32
   44b80:	mov	r2, r6
   44b84:	bl	14eec <memset@plt>
   44b88:	ldr	r0, [r4, #20]
   44b8c:	ldr	r2, [r4, #44]	; 0x2c
   44b90:	mov	r1, #0
   44b94:	add	r0, r0, r6
   44b98:	str	r0, [r4, #20]
   44b9c:	mov	r0, r4
   44ba0:	blx	r2
   44ba4:	ldr	r1, [r4, #16]
   44ba8:	ldr	r0, [r4, #20]
   44bac:	sub	r5, r5, r6
   44bb0:	sub	r6, r1, r0
   44bb4:	cmp	r5, r6
   44bb8:	bhi	44b7c <flatcc_json_printer_struct_field@@Base+0x11c>
   44bbc:	mov	r1, #32
   44bc0:	mov	r2, r5
   44bc4:	bl	14eec <memset@plt>
   44bc8:	ldr	r0, [r4, #20]
   44bcc:	add	r0, r0, r5
   44bd0:	str	r0, [r4, #20]
   44bd4:	add	r1, r0, #1
   44bd8:	str	r1, [r4, #20]
   44bdc:	mov	r1, #125	; 0x7d
   44be0:	strb	r1, [r0]
   44be4:	pop	{r4, r5, r6, r7, fp, pc}

00044be8 <flatcc_json_printer_struct_as_root@@Base>:
   44be8:	push	{r4, r5, r6, sl, fp, lr}
   44bec:	add	fp, sp, #16
   44bf0:	sub	sp, sp, #8
   44bf4:	cmp	r1, #0
   44bf8:	mov	r4, r0
   44bfc:	mov	r0, #0
   44c00:	cmpne	r2, #7
   44c04:	str	r0, [sp, #4]
   44c08:	bls	44dc0 <flatcc_json_printer_struct_as_root@@Base+0x1d8>
   44c0c:	mov	r5, r1
   44c10:	cmp	r3, #0
   44c14:	beq	44c40 <flatcc_json_printer_struct_as_root@@Base+0x58>
   44c18:	add	r0, sp, #4
   44c1c:	mov	r1, r3
   44c20:	mov	r2, #4
   44c24:	bl	14ef8 <strncpy@plt>
   44c28:	ldr	r0, [sp, #4]
   44c2c:	cmp	r0, #0
   44c30:	beq	44c40 <flatcc_json_printer_struct_as_root@@Base+0x58>
   44c34:	ldr	r1, [r5, #4]
   44c38:	cmp	r1, r0
   44c3c:	bne	44df0 <flatcc_json_printer_struct_as_root@@Base+0x208>
   44c40:	ldr	r1, [r4, #32]
   44c44:	ldr	r0, [r4, #20]
   44c48:	ldr	r2, [fp, #8]
   44c4c:	add	r1, r1, #1
   44c50:	str	r1, [r4, #32]
   44c54:	add	r1, r0, #1
   44c58:	str	r1, [r4, #20]
   44c5c:	mov	r1, #123	; 0x7b
   44c60:	strb	r1, [r0]
   44c64:	ldr	r0, [r5]
   44c68:	add	r1, r5, r0
   44c6c:	mov	r0, r4
   44c70:	blx	r2
   44c74:	ldrb	r1, [r4, #25]
   44c78:	ldr	r0, [r4, #20]
   44c7c:	cmp	r1, #0
   44c80:	beq	44d40 <flatcc_json_printer_struct_as_root@@Base+0x158>
   44c84:	add	r1, r0, #1
   44c88:	str	r1, [r4, #20]
   44c8c:	mov	r1, #10
   44c90:	strb	r1, [r0]
   44c94:	ldr	r0, [r4, #32]
   44c98:	sub	r2, r0, #1
   44c9c:	str	r2, [r4, #32]
   44ca0:	ldrb	r3, [r4, #25]
   44ca4:	ldr	r0, [r4, #20]
   44ca8:	ldr	r1, [r4, #16]
   44cac:	mla	r6, r2, r3, r0
   44cb0:	mul	r5, r2, r3
   44cb4:	cmp	r6, r1
   44cb8:	bls	44d28 <flatcc_json_printer_struct_as_root@@Base+0x140>
   44cbc:	cmp	r0, r1
   44cc0:	bcc	44cdc <flatcc_json_printer_struct_as_root@@Base+0xf4>
   44cc4:	ldr	r2, [r4, #44]	; 0x2c
   44cc8:	mov	r0, r4
   44ccc:	mov	r1, #0
   44cd0:	blx	r2
   44cd4:	ldr	r1, [r4, #16]
   44cd8:	ldr	r0, [r4, #20]
   44cdc:	sub	r6, r1, r0
   44ce0:	cmp	r6, r5
   44ce4:	bcs	44d28 <flatcc_json_printer_struct_as_root@@Base+0x140>
   44ce8:	mov	r1, #32
   44cec:	mov	r2, r6
   44cf0:	bl	14eec <memset@plt>
   44cf4:	ldr	r0, [r4, #20]
   44cf8:	ldr	r2, [r4, #44]	; 0x2c
   44cfc:	mov	r1, #0
   44d00:	add	r0, r0, r6
   44d04:	str	r0, [r4, #20]
   44d08:	mov	r0, r4
   44d0c:	blx	r2
   44d10:	ldr	r1, [r4, #16]
   44d14:	ldr	r0, [r4, #20]
   44d18:	sub	r5, r5, r6
   44d1c:	sub	r6, r1, r0
   44d20:	cmp	r5, r6
   44d24:	bhi	44ce8 <flatcc_json_printer_struct_as_root@@Base+0x100>
   44d28:	mov	r1, #32
   44d2c:	mov	r2, r5
   44d30:	bl	14eec <memset@plt>
   44d34:	ldr	r0, [r4, #20]
   44d38:	add	r0, r0, r5
   44d3c:	str	r0, [r4, #20]
   44d40:	add	r1, r0, #1
   44d44:	str	r1, [r4, #20]
   44d48:	mov	r1, #125	; 0x7d
   44d4c:	strb	r1, [r0]
   44d50:	ldrb	r0, [r4, #25]
   44d54:	cmp	r0, #0
   44d58:	beq	44d7c <flatcc_json_printer_struct_as_root@@Base+0x194>
   44d5c:	ldr	r0, [r4, #32]
   44d60:	cmp	r0, #0
   44d64:	bne	44d7c <flatcc_json_printer_struct_as_root@@Base+0x194>
   44d68:	ldr	r0, [r4, #20]
   44d6c:	add	r1, r0, #1
   44d70:	str	r1, [r4, #20]
   44d74:	mov	r1, #10
   44d78:	strb	r1, [r0]
   44d7c:	ldr	r2, [r4, #44]	; 0x2c
   44d80:	mov	r0, r4
   44d84:	mov	r1, #1
   44d88:	blx	r2
   44d8c:	ldr	r1, [r4, #36]	; 0x24
   44d90:	mvn	r0, #0
   44d94:	cmp	r1, #0
   44d98:	beq	44da4 <flatcc_json_printer_struct_as_root@@Base+0x1bc>
   44d9c:	sub	sp, fp, #16
   44da0:	pop	{r4, r5, r6, sl, fp, pc}
   44da4:	ldr	r1, [r4, #12]
   44da8:	ldr	r2, [r4, #20]
   44dac:	ldr	r0, [r4]
   44db0:	add	r1, r2, r1
   44db4:	sub	r0, r1, r0
   44db8:	sub	sp, fp, #16
   44dbc:	pop	{r4, r5, r6, sl, fp, pc}
   44dc0:	ldr	r0, [r4, #36]	; 0x24
   44dc4:	movw	r1, #47739	; 0xba7b
   44dc8:	movw	r3, #48914	; 0xbf12
   44dcc:	movw	r2, #1019	; 0x3fb
   44dd0:	movt	r1, #4
   44dd4:	movt	r3, #4
   44dd8:	cmp	r0, #0
   44ddc:	moveq	r0, #1
   44de0:	streq	r0, [r4, #36]	; 0x24
   44de4:	movw	r0, #48883	; 0xbef3
   44de8:	movt	r0, #4
   44dec:	bl	14f40 <__assert_fail@plt>
   44df0:	ldr	r0, [r4, #36]	; 0x24
   44df4:	movw	r1, #47739	; 0xba7b
   44df8:	movw	r3, #48914	; 0xbf12
   44dfc:	movw	r2, #1028	; 0x404
   44e00:	movt	r1, #4
   44e04:	movt	r3, #4
   44e08:	cmp	r0, #0
   44e0c:	moveq	r0, #1
   44e10:	streq	r0, [r4, #36]	; 0x24
   44e14:	movw	r0, #48993	; 0xbf61
   44e18:	movt	r0, #4
   44e1c:	bl	14f40 <__assert_fail@plt>

00044e20 <flatcc_json_printer_table_as_root@@Base>:
   44e20:	push	{r4, r5, r6, sl, fp, lr}
   44e24:	add	fp, sp, #16
   44e28:	sub	sp, sp, #24
   44e2c:	cmp	r1, #0
   44e30:	mov	r4, r0
   44e34:	mov	r0, #0
   44e38:	cmpne	r2, #7
   44e3c:	str	r0, [sp, #4]
   44e40:	bls	45024 <flatcc_json_printer_table_as_root@@Base+0x204>
   44e44:	mov	r5, r1
   44e48:	cmp	r3, #0
   44e4c:	beq	44e78 <flatcc_json_printer_table_as_root@@Base+0x58>
   44e50:	add	r0, sp, #4
   44e54:	mov	r1, r3
   44e58:	mov	r2, #4
   44e5c:	bl	14ef8 <strncpy@plt>
   44e60:	ldr	r0, [sp, #4]
   44e64:	cmp	r0, #0
   44e68:	beq	44e78 <flatcc_json_printer_table_as_root@@Base+0x58>
   44e6c:	ldr	r1, [r5, #4]
   44e70:	cmp	r1, r0
   44e74:	bne	45054 <flatcc_json_printer_table_as_root@@Base+0x234>
   44e78:	ldr	r3, [r4, #32]
   44e7c:	ldr	r1, [r4, #20]
   44e80:	ldr	r0, [r5]
   44e84:	ldr	r2, [fp, #8]
   44e88:	add	r3, r3, #1
   44e8c:	str	r3, [r4, #32]
   44e90:	add	r3, r1, #1
   44e94:	str	r3, [r4, #20]
   44e98:	mov	r3, #123	; 0x7b
   44e9c:	strb	r3, [r1]
   44ea0:	mov	r1, #99	; 0x63
   44ea4:	str	r1, [sp, #16]
   44ea8:	mov	r1, #0
   44eac:	str	r1, [sp, #20]
   44eb0:	add	r1, r5, r0
   44eb4:	str	r1, [sp, #4]
   44eb8:	ldr	r0, [r5, r0]
   44ebc:	sub	r3, r1, r0
   44ec0:	str	r3, [sp, #8]
   44ec4:	ldrh	r0, [r1, -r0]
   44ec8:	add	r1, sp, #4
   44ecc:	str	r0, [sp, #12]
   44ed0:	mov	r0, r4
   44ed4:	blx	r2
   44ed8:	ldrb	r1, [r4, #25]
   44edc:	ldr	r0, [r4, #20]
   44ee0:	cmp	r1, #0
   44ee4:	beq	44fa4 <flatcc_json_printer_table_as_root@@Base+0x184>
   44ee8:	add	r1, r0, #1
   44eec:	str	r1, [r4, #20]
   44ef0:	mov	r1, #10
   44ef4:	strb	r1, [r0]
   44ef8:	ldr	r0, [r4, #32]
   44efc:	sub	r2, r0, #1
   44f00:	str	r2, [r4, #32]
   44f04:	ldrb	r3, [r4, #25]
   44f08:	ldr	r0, [r4, #20]
   44f0c:	ldr	r1, [r4, #16]
   44f10:	mla	r6, r2, r3, r0
   44f14:	mul	r5, r2, r3
   44f18:	cmp	r6, r1
   44f1c:	bls	44f8c <flatcc_json_printer_table_as_root@@Base+0x16c>
   44f20:	cmp	r0, r1
   44f24:	bcc	44f40 <flatcc_json_printer_table_as_root@@Base+0x120>
   44f28:	ldr	r2, [r4, #44]	; 0x2c
   44f2c:	mov	r0, r4
   44f30:	mov	r1, #0
   44f34:	blx	r2
   44f38:	ldr	r1, [r4, #16]
   44f3c:	ldr	r0, [r4, #20]
   44f40:	sub	r6, r1, r0
   44f44:	cmp	r6, r5
   44f48:	bcs	44f8c <flatcc_json_printer_table_as_root@@Base+0x16c>
   44f4c:	mov	r1, #32
   44f50:	mov	r2, r6
   44f54:	bl	14eec <memset@plt>
   44f58:	ldr	r0, [r4, #20]
   44f5c:	ldr	r2, [r4, #44]	; 0x2c
   44f60:	mov	r1, #0
   44f64:	add	r0, r0, r6
   44f68:	str	r0, [r4, #20]
   44f6c:	mov	r0, r4
   44f70:	blx	r2
   44f74:	ldr	r1, [r4, #16]
   44f78:	ldr	r0, [r4, #20]
   44f7c:	sub	r5, r5, r6
   44f80:	sub	r6, r1, r0
   44f84:	cmp	r5, r6
   44f88:	bhi	44f4c <flatcc_json_printer_table_as_root@@Base+0x12c>
   44f8c:	mov	r1, #32
   44f90:	mov	r2, r5
   44f94:	bl	14eec <memset@plt>
   44f98:	ldr	r0, [r4, #20]
   44f9c:	add	r0, r0, r5
   44fa0:	str	r0, [r4, #20]
   44fa4:	add	r1, r0, #1
   44fa8:	str	r1, [r4, #20]
   44fac:	mov	r1, #125	; 0x7d
   44fb0:	strb	r1, [r0]
   44fb4:	ldrb	r0, [r4, #25]
   44fb8:	cmp	r0, #0
   44fbc:	beq	44fe0 <flatcc_json_printer_table_as_root@@Base+0x1c0>
   44fc0:	ldr	r0, [r4, #32]
   44fc4:	cmp	r0, #0
   44fc8:	bne	44fe0 <flatcc_json_printer_table_as_root@@Base+0x1c0>
   44fcc:	ldr	r0, [r4, #20]
   44fd0:	add	r1, r0, #1
   44fd4:	str	r1, [r4, #20]
   44fd8:	mov	r1, #10
   44fdc:	strb	r1, [r0]
   44fe0:	ldr	r2, [r4, #44]	; 0x2c
   44fe4:	mov	r0, r4
   44fe8:	mov	r1, #1
   44fec:	blx	r2
   44ff0:	ldr	r1, [r4, #36]	; 0x24
   44ff4:	mvn	r0, #0
   44ff8:	cmp	r1, #0
   44ffc:	beq	45008 <flatcc_json_printer_table_as_root@@Base+0x1e8>
   45000:	sub	sp, fp, #16
   45004:	pop	{r4, r5, r6, sl, fp, pc}
   45008:	ldr	r1, [r4, #12]
   4500c:	ldr	r2, [r4, #20]
   45010:	ldr	r0, [r4]
   45014:	add	r1, r2, r1
   45018:	sub	r0, r1, r0
   4501c:	sub	sp, fp, #16
   45020:	pop	{r4, r5, r6, sl, fp, pc}
   45024:	ldr	r0, [r4, #36]	; 0x24
   45028:	movw	r1, #47739	; 0xba7b
   4502c:	movw	r3, #48914	; 0xbf12
   45030:	movw	r2, #1019	; 0x3fb
   45034:	movt	r1, #4
   45038:	movt	r3, #4
   4503c:	cmp	r0, #0
   45040:	moveq	r0, #1
   45044:	streq	r0, [r4, #36]	; 0x24
   45048:	movw	r0, #48883	; 0xbef3
   4504c:	movt	r0, #4
   45050:	bl	14f40 <__assert_fail@plt>
   45054:	ldr	r0, [r4, #36]	; 0x24
   45058:	movw	r1, #47739	; 0xba7b
   4505c:	movw	r3, #48914	; 0xbf12
   45060:	movw	r2, #1028	; 0x404
   45064:	movt	r1, #4
   45068:	movt	r3, #4
   4506c:	cmp	r0, #0
   45070:	moveq	r0, #1
   45074:	streq	r0, [r4, #36]	; 0x24
   45078:	movw	r0, #48993	; 0xbf61
   4507c:	movt	r0, #4
   45080:	bl	14f40 <__assert_fail@plt>

00045084 <flatcc_json_printer_struct_as_nested_root@@Base>:
   45084:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   45088:	add	fp, sp, #24
   4508c:	sub	sp, sp, #8
   45090:	mov	r6, r1
   45094:	ldr	r1, [r1, #8]
   45098:	mov	r4, r0
   4509c:	mov	r0, #4
   450a0:	add	r0, r0, r2, lsl #1
   450a4:	cmp	r0, r1
   450a8:	bge	450c8 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   450ac:	ldr	r1, [r6, #4]
   450b0:	add	r0, r1, r0
   450b4:	ldrh	r0, [r0]
   450b8:	cmp	r0, #0
   450bc:	ldrne	r1, [r6]
   450c0:	addsne	r0, r1, r0
   450c4:	bne	450d0 <flatcc_json_printer_struct_as_nested_root@@Base+0x4c>
   450c8:	sub	sp, fp, #24
   450cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   450d0:	ldr	r7, [r0]
   450d4:	mov	r1, #0
   450d8:	ldr	r0, [r7, r0]!
   450dc:	str	r1, [sp, #4]
   450e0:	cmp	r7, #0
   450e4:	cmpne	r0, #7
   450e8:	bls	45270 <flatcc_json_printer_struct_as_nested_root@@Base+0x1ec>
   450ec:	ldr	r1, [fp, #12]
   450f0:	mov	r5, r3
   450f4:	cmp	r1, #0
   450f8:	beq	45120 <flatcc_json_printer_struct_as_nested_root@@Base+0x9c>
   450fc:	add	r0, sp, #4
   45100:	mov	r2, #4
   45104:	bl	14ef8 <strncpy@plt>
   45108:	ldr	r0, [sp, #4]
   4510c:	cmp	r0, #0
   45110:	beq	45120 <flatcc_json_printer_struct_as_nested_root@@Base+0x9c>
   45114:	ldr	r1, [r7, #4]
   45118:	cmp	r1, r0
   4511c:	bne	452a0 <flatcc_json_printer_struct_as_nested_root@@Base+0x21c>
   45120:	ldr	r0, [r6, #16]
   45124:	ldr	r8, [fp, #16]
   45128:	ldr	r2, [fp, #8]
   4512c:	add	r1, r0, #1
   45130:	cmp	r0, #0
   45134:	str	r1, [r6, #16]
   45138:	beq	45150 <flatcc_json_printer_struct_as_nested_root@@Base+0xcc>
   4513c:	ldr	r0, [r4, #20]
   45140:	add	r1, r0, #1
   45144:	str	r1, [r4, #20]
   45148:	mov	r1, #44	; 0x2c
   4514c:	strb	r1, [r0]
   45150:	mov	r0, r4
   45154:	mov	r1, r5
   45158:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   4515c:	ldr	r1, [r4, #32]
   45160:	ldr	r0, [r4, #20]
   45164:	add	r1, r1, #1
   45168:	str	r1, [r4, #32]
   4516c:	add	r1, r0, #1
   45170:	str	r1, [r4, #20]
   45174:	mov	r1, #123	; 0x7b
   45178:	strb	r1, [r0]
   4517c:	ldr	r0, [r7]
   45180:	add	r1, r7, r0
   45184:	mov	r0, r4
   45188:	blx	r8
   4518c:	ldrb	r1, [r4, #25]
   45190:	ldr	r0, [r4, #20]
   45194:	cmp	r1, #0
   45198:	beq	45258 <flatcc_json_printer_struct_as_nested_root@@Base+0x1d4>
   4519c:	add	r1, r0, #1
   451a0:	str	r1, [r4, #20]
   451a4:	mov	r1, #10
   451a8:	strb	r1, [r0]
   451ac:	ldr	r0, [r4, #32]
   451b0:	sub	r2, r0, #1
   451b4:	str	r2, [r4, #32]
   451b8:	ldrb	r3, [r4, #25]
   451bc:	ldr	r0, [r4, #20]
   451c0:	ldr	r1, [r4, #16]
   451c4:	mla	r7, r2, r3, r0
   451c8:	mul	r5, r2, r3
   451cc:	cmp	r7, r1
   451d0:	bls	45240 <flatcc_json_printer_struct_as_nested_root@@Base+0x1bc>
   451d4:	cmp	r0, r1
   451d8:	bcc	451f4 <flatcc_json_printer_struct_as_nested_root@@Base+0x170>
   451dc:	ldr	r2, [r4, #44]	; 0x2c
   451e0:	mov	r0, r4
   451e4:	mov	r1, #0
   451e8:	blx	r2
   451ec:	ldr	r1, [r4, #16]
   451f0:	ldr	r0, [r4, #20]
   451f4:	sub	r6, r1, r0
   451f8:	cmp	r6, r5
   451fc:	bcs	45240 <flatcc_json_printer_struct_as_nested_root@@Base+0x1bc>
   45200:	mov	r1, #32
   45204:	mov	r2, r6
   45208:	bl	14eec <memset@plt>
   4520c:	ldr	r0, [r4, #20]
   45210:	ldr	r2, [r4, #44]	; 0x2c
   45214:	mov	r1, #0
   45218:	add	r0, r0, r6
   4521c:	str	r0, [r4, #20]
   45220:	mov	r0, r4
   45224:	blx	r2
   45228:	ldr	r1, [r4, #16]
   4522c:	ldr	r0, [r4, #20]
   45230:	sub	r5, r5, r6
   45234:	sub	r6, r1, r0
   45238:	cmp	r5, r6
   4523c:	bhi	45200 <flatcc_json_printer_struct_as_nested_root@@Base+0x17c>
   45240:	mov	r1, #32
   45244:	mov	r2, r5
   45248:	bl	14eec <memset@plt>
   4524c:	ldr	r0, [r4, #20]
   45250:	add	r0, r0, r5
   45254:	str	r0, [r4, #20]
   45258:	add	r1, r0, #1
   4525c:	str	r1, [r4, #20]
   45260:	mov	r1, #125	; 0x7d
   45264:	strb	r1, [r0]
   45268:	sub	sp, fp, #24
   4526c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   45270:	ldr	r0, [r4, #36]	; 0x24
   45274:	movw	r1, #47739	; 0xba7b
   45278:	movw	r3, #48914	; 0xbf12
   4527c:	movw	r2, #1019	; 0x3fb
   45280:	movt	r1, #4
   45284:	movt	r3, #4
   45288:	cmp	r0, #0
   4528c:	moveq	r0, #1
   45290:	streq	r0, [r4, #36]	; 0x24
   45294:	movw	r0, #48883	; 0xbef3
   45298:	movt	r0, #4
   4529c:	bl	14f40 <__assert_fail@plt>
   452a0:	ldr	r0, [r4, #36]	; 0x24
   452a4:	movw	r1, #47739	; 0xba7b
   452a8:	movw	r3, #48914	; 0xbf12
   452ac:	movw	r2, #1028	; 0x404
   452b0:	movt	r1, #4
   452b4:	movt	r3, #4
   452b8:	cmp	r0, #0
   452bc:	moveq	r0, #1
   452c0:	streq	r0, [r4, #36]	; 0x24
   452c4:	movw	r0, #48993	; 0xbf61
   452c8:	movt	r0, #4
   452cc:	bl	14f40 <__assert_fail@plt>

000452d0 <flatcc_json_printer_table_as_nested_root@@Base>:
   452d0:	push	{r4, r5, r6, r7, fp, lr}
   452d4:	add	fp, sp, #16
   452d8:	sub	sp, sp, #24
   452dc:	mov	r5, r1
   452e0:	ldr	r1, [r1, #8]
   452e4:	mov	r4, r0
   452e8:	mov	r0, #4
   452ec:	add	r0, r0, r2, lsl #1
   452f0:	cmp	r0, r1
   452f4:	bge	45314 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   452f8:	ldr	r1, [r5, #4]
   452fc:	add	r0, r1, r0
   45300:	ldrh	r0, [r0]
   45304:	cmp	r0, #0
   45308:	ldrne	r1, [r5]
   4530c:	addsne	r0, r1, r0
   45310:	bne	4531c <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   45314:	sub	sp, fp, #16
   45318:	pop	{r4, r5, r6, r7, fp, pc}
   4531c:	ldr	r7, [r0]
   45320:	mov	r1, #0
   45324:	ldr	r0, [r7, r0]!
   45328:	str	r1, [sp, #4]
   4532c:	cmp	r0, #7
   45330:	bls	4550c <flatcc_json_printer_table_as_nested_root@@Base+0x23c>
   45334:	ldr	r1, [fp, #12]
   45338:	mov	r6, r3
   4533c:	cmp	r1, #0
   45340:	beq	45368 <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   45344:	add	r0, sp, #4
   45348:	mov	r2, #4
   4534c:	bl	14ef8 <strncpy@plt>
   45350:	ldr	r0, [sp, #4]
   45354:	cmp	r0, #0
   45358:	beq	45368 <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   4535c:	ldr	r1, [r7, #8]
   45360:	cmp	r1, r0
   45364:	bne	4553c <flatcc_json_printer_table_as_nested_root@@Base+0x26c>
   45368:	ldr	r0, [r5, #16]
   4536c:	ldr	r2, [fp, #8]
   45370:	add	r1, r0, #1
   45374:	cmp	r0, #0
   45378:	str	r1, [r5, #16]
   4537c:	beq	45394 <flatcc_json_printer_table_as_nested_root@@Base+0xc4>
   45380:	ldr	r0, [r4, #20]
   45384:	add	r1, r0, #1
   45388:	str	r1, [r4, #20]
   4538c:	mov	r1, #44	; 0x2c
   45390:	strb	r1, [r0]
   45394:	mov	r0, r4
   45398:	mov	r1, r6
   4539c:	bl	3af5c <flatcc_json_printer_string_field@@Base+0x90>
   453a0:	ldr	r0, [r5, #12]
   453a4:	subs	r0, r0, #1
   453a8:	beq	454f0 <flatcc_json_printer_table_as_nested_root@@Base+0x220>
   453ac:	add	r1, r7, #4
   453b0:	ldr	r7, [r4, #32]
   453b4:	ldr	r2, [fp, #16]
   453b8:	ldr	r3, [r1]
   453bc:	add	r7, r7, #1
   453c0:	add	r1, r1, r3
   453c4:	ldr	r3, [r4, #20]
   453c8:	str	r7, [r4, #32]
   453cc:	add	r7, r3, #1
   453d0:	str	r7, [r4, #20]
   453d4:	mov	r7, #123	; 0x7b
   453d8:	strb	r7, [r3]
   453dc:	str	r0, [sp, #16]
   453e0:	mov	r0, #0
   453e4:	str	r0, [sp, #20]
   453e8:	str	r1, [sp, #4]
   453ec:	ldr	r0, [r1]
   453f0:	sub	r3, r1, r0
   453f4:	str	r3, [sp, #8]
   453f8:	ldrh	r0, [r1, -r0]
   453fc:	add	r1, sp, #4
   45400:	str	r0, [sp, #12]
   45404:	mov	r0, r4
   45408:	blx	r2
   4540c:	ldrb	r1, [r4, #25]
   45410:	ldr	r0, [r4, #20]
   45414:	cmp	r1, #0
   45418:	beq	454d8 <flatcc_json_printer_table_as_nested_root@@Base+0x208>
   4541c:	add	r1, r0, #1
   45420:	str	r1, [r4, #20]
   45424:	mov	r1, #10
   45428:	strb	r1, [r0]
   4542c:	ldr	r0, [r4, #32]
   45430:	sub	r2, r0, #1
   45434:	str	r2, [r4, #32]
   45438:	ldrb	r3, [r4, #25]
   4543c:	ldr	r0, [r4, #20]
   45440:	ldr	r1, [r4, #16]
   45444:	mla	r7, r2, r3, r0
   45448:	mul	r5, r2, r3
   4544c:	cmp	r7, r1
   45450:	bls	454c0 <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   45454:	cmp	r0, r1
   45458:	bcc	45474 <flatcc_json_printer_table_as_nested_root@@Base+0x1a4>
   4545c:	ldr	r2, [r4, #44]	; 0x2c
   45460:	mov	r0, r4
   45464:	mov	r1, #0
   45468:	blx	r2
   4546c:	ldr	r1, [r4, #16]
   45470:	ldr	r0, [r4, #20]
   45474:	sub	r6, r1, r0
   45478:	cmp	r6, r5
   4547c:	bcs	454c0 <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   45480:	mov	r1, #32
   45484:	mov	r2, r6
   45488:	bl	14eec <memset@plt>
   4548c:	ldr	r0, [r4, #20]
   45490:	ldr	r2, [r4, #44]	; 0x2c
   45494:	mov	r1, #0
   45498:	add	r0, r0, r6
   4549c:	str	r0, [r4, #20]
   454a0:	mov	r0, r4
   454a4:	blx	r2
   454a8:	ldr	r1, [r4, #16]
   454ac:	ldr	r0, [r4, #20]
   454b0:	sub	r5, r5, r6
   454b4:	sub	r6, r1, r0
   454b8:	cmp	r5, r6
   454bc:	bhi	45480 <flatcc_json_printer_table_as_nested_root@@Base+0x1b0>
   454c0:	mov	r1, #32
   454c4:	mov	r2, r5
   454c8:	bl	14eec <memset@plt>
   454cc:	ldr	r0, [r4, #20]
   454d0:	add	r0, r0, r5
   454d4:	str	r0, [r4, #20]
   454d8:	add	r1, r0, #1
   454dc:	str	r1, [r4, #20]
   454e0:	mov	r1, #125	; 0x7d
   454e4:	strb	r1, [r0]
   454e8:	sub	sp, fp, #16
   454ec:	pop	{r4, r5, r6, r7, fp, pc}
   454f0:	ldr	r0, [r4, #36]	; 0x24
   454f4:	cmp	r0, #0
   454f8:	bne	45314 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   454fc:	mov	r0, #2
   45500:	str	r0, [r4, #36]	; 0x24
   45504:	sub	sp, fp, #16
   45508:	pop	{r4, r5, r6, r7, fp, pc}
   4550c:	ldr	r0, [r4, #36]	; 0x24
   45510:	movw	r1, #47739	; 0xba7b
   45514:	movw	r3, #48914	; 0xbf12
   45518:	movw	r2, #1019	; 0x3fb
   4551c:	movt	r1, #4
   45520:	movt	r3, #4
   45524:	cmp	r0, #0
   45528:	moveq	r0, #1
   4552c:	streq	r0, [r4, #36]	; 0x24
   45530:	movw	r0, #48883	; 0xbef3
   45534:	movt	r0, #4
   45538:	bl	14f40 <__assert_fail@plt>
   4553c:	ldr	r0, [r4, #36]	; 0x24
   45540:	movw	r1, #47739	; 0xba7b
   45544:	movw	r3, #48914	; 0xbf12
   45548:	movw	r2, #1028	; 0x404
   4554c:	movt	r1, #4
   45550:	movt	r3, #4
   45554:	cmp	r0, #0
   45558:	moveq	r0, #1
   4555c:	streq	r0, [r4, #36]	; 0x24
   45560:	movw	r0, #48993	; 0xbf61
   45564:	movt	r0, #4
   45568:	bl	14f40 <__assert_fail@plt>

0004556c <flatcc_json_printer_init@@Base>:
   4556c:	push	{r4, r5, r6, sl, fp, lr}
   45570:	add	fp, sp, #16
   45574:	vmov.i32	q8, #0	; 0x00000000
   45578:	mov	r5, r0
   4557c:	mov	r4, #0
   45580:	cmp	r1, #0
   45584:	movw	r6, #16448	; 0x4040
   45588:	str	r4, [r0, #32]
   4558c:	mov	r0, #36	; 0x24
   45590:	mov	r2, r5
   45594:	vst1.32	{d16-d17}, [r2], r0
   45598:	add	r0, r5, #16
   4559c:	vst1.32	{d16-d17}, [r0]
   455a0:	movw	r0, #54092	; 0xd34c
   455a4:	str	r4, [r2]
   455a8:	movw	r2, #22028	; 0x560c
   455ac:	movt	r0, #5
   455b0:	movt	r2, #4
   455b4:	ldr	r0, [r0]
   455b8:	movne	r0, r1
   455bc:	str	r0, [r5, #40]	; 0x28
   455c0:	movw	r0, #16448	; 0x4040
   455c4:	str	r2, [r5, #44]	; 0x2c
   455c8:	bl	14e98 <malloc@plt>
   455cc:	cmp	r0, #0
   455d0:	str	r0, [r5]
   455d4:	beq	45600 <flatcc_json_printer_init@@Base+0x94>
   455d8:	mov	r1, #16384	; 0x4000
   455dc:	str	r6, [r5, #4]
   455e0:	str	r1, [r5, #8]
   455e4:	mov	r1, #1
   455e8:	strb	r1, [r5, #24]
   455ec:	add	r1, r0, #16384	; 0x4000
   455f0:	str	r1, [r5, #16]
   455f4:	str	r0, [r5, #20]
   455f8:	mov	r0, r4
   455fc:	pop	{r4, r5, r6, sl, fp, pc}
   45600:	mvn	r4, #0
   45604:	mov	r0, r4
   45608:	pop	{r4, r5, r6, sl, fp, pc}
   4560c:	push	{r4, r5, r6, sl, fp, lr}
   45610:	add	fp, sp, #16
   45614:	mov	r4, r0
   45618:	cmp	r1, #0
   4561c:	beq	45628 <flatcc_json_printer_init@@Base+0xbc>
   45620:	ldr	r5, [r4, #20]
   45624:	b	45638 <flatcc_json_printer_init@@Base+0xcc>
   45628:	ldr	r6, [r4, #16]
   4562c:	ldr	r5, [r4, #20]
   45630:	cmp	r5, r6
   45634:	bcs	45670 <flatcc_json_printer_init@@Base+0x104>
   45638:	ldr	r0, [r4]
   4563c:	ldr	r3, [r4, #40]	; 0x28
   45640:	mov	r2, #1
   45644:	sub	r5, r5, r0
   45648:	mov	r1, r5
   4564c:	bl	14e8c <fwrite@plt>
   45650:	ldr	r1, [r4, #12]
   45654:	ldr	r0, [r4]
   45658:	str	r0, [r4, #20]
   4565c:	add	r1, r1, r5
   45660:	str	r1, [r4, #12]
   45664:	mov	r1, #0
   45668:	strb	r1, [r0]
   4566c:	pop	{r4, r5, r6, sl, fp, pc}
   45670:	ldr	r0, [r4]
   45674:	ldr	r1, [r4, #8]
   45678:	ldr	r3, [r4, #40]	; 0x28
   4567c:	mov	r2, #1
   45680:	bl	14e8c <fwrite@plt>
   45684:	ldr	r0, [r4]
   45688:	ldr	r1, [r4, #8]
   4568c:	sub	r5, r5, r6
   45690:	mov	r2, r5
   45694:	add	r1, r0, r1
   45698:	bl	14e5c <memcpy@plt>
   4569c:	ldr	r0, [r4]
   456a0:	ldr	r1, [r4, #8]
   456a4:	ldr	r2, [r4, #12]
   456a8:	add	r0, r0, r5
   456ac:	add	r1, r2, r1
   456b0:	str	r0, [r4, #20]
   456b4:	str	r1, [r4, #12]
   456b8:	mov	r1, #0
   456bc:	strb	r1, [r0]
   456c0:	pop	{r4, r5, r6, sl, fp, pc}

000456c4 <flatcc_json_printer_init_buffer@@Base>:
   456c4:	push	{fp, lr}
   456c8:	mov	fp, sp
   456cc:	cmp	r2, #63	; 0x3f
   456d0:	bls	45710 <flatcc_json_printer_init_buffer@@Base+0x4c>
   456d4:	vmov.i32	q8, #0	; 0x00000000
   456d8:	add	r3, r0, #12
   456dc:	vst1.32	{d16-d17}, [r3]
   456e0:	movw	r3, #22320	; 0x5730
   456e4:	movt	r3, #4
   456e8:	str	r3, [r0, #44]	; 0x2c
   456ec:	add	r3, r0, #28
   456f0:	vst1.32	{d16-d17}, [r3]
   456f4:	sub	r3, r2, #64	; 0x40
   456f8:	stm	r0, {r1, r2, r3}
   456fc:	add	r2, r1, r3
   45700:	str	r2, [r0, #16]
   45704:	str	r1, [r0, #20]
   45708:	mov	r0, #0
   4570c:	pop	{fp, pc}
   45710:	movw	r0, #48022	; 0xbb96
   45714:	movw	r1, #47739	; 0xba7b
   45718:	movw	r3, #48063	; 0xbbbf
   4571c:	movw	r2, #1165	; 0x48d
   45720:	movt	r0, #4
   45724:	movt	r1, #4
   45728:	movt	r3, #4
   4572c:	bl	14f40 <__assert_fail@plt>
   45730:	ldr	r2, [r0, #16]
   45734:	ldr	r1, [r0, #20]
   45738:	cmp	r1, r2
   4573c:	bcs	45750 <flatcc_json_printer_init_buffer@@Base+0x8c>
   45740:	mov	r2, r1
   45744:	mov	r0, #0
   45748:	strb	r0, [r2]
   4574c:	bx	lr
   45750:	ldr	r2, [r0, #36]	; 0x24
   45754:	cmp	r2, #0
   45758:	moveq	r2, #3
   4575c:	streq	r2, [r0, #36]	; 0x24
   45760:	ldr	r2, [r0]
   45764:	ldr	r3, [r0, #12]
   45768:	sub	r1, r1, r2
   4576c:	str	r2, [r0, #20]
   45770:	add	r1, r1, r3
   45774:	str	r1, [r0, #12]
   45778:	mov	r0, #0
   4577c:	strb	r0, [r2]
   45780:	bx	lr

00045784 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   45784:	push	{r4, r5, fp, lr}
   45788:	add	fp, sp, #8
   4578c:	vmov.i32	q8, #0	; 0x00000000
   45790:	cmp	r1, #0
   45794:	mov	r5, r1
   45798:	mov	r4, r0
   4579c:	add	r0, r0, #28
   457a0:	movweq	r5, #4096	; 0x1000
   457a4:	cmp	r5, #64	; 0x40
   457a8:	vst1.32	{d16-d17}, [r0]
   457ac:	add	r0, r4, #12
   457b0:	movls	r5, #64	; 0x40
   457b4:	vst1.32	{d16-d17}, [r0]
   457b8:	mov	r0, r5
   457bc:	bl	14e98 <malloc@plt>
   457c0:	mov	r1, r0
   457c4:	movw	r2, #22536	; 0x5808
   457c8:	mov	r0, #1
   457cc:	strb	r0, [r4, #24]
   457d0:	sub	r0, r5, #64	; 0x40
   457d4:	movt	r2, #4
   457d8:	stm	r4, {r1, r5}
   457dc:	cmp	r1, #0
   457e0:	str	r0, [r4, #8]
   457e4:	add	r0, r1, r0
   457e8:	str	r2, [r4, #44]	; 0x2c
   457ec:	str	r0, [r4, #16]
   457f0:	mov	r0, #0
   457f4:	moveq	r0, #3
   457f8:	str	r1, [r4, #20]
   457fc:	streq	r0, [r4, #36]	; 0x24
   45800:	mvneq	r0, #0
   45804:	pop	{r4, r5, fp, pc}
   45808:	push	{r4, r5, fp, lr}
   4580c:	add	fp, sp, #8
   45810:	mov	r4, r0
   45814:	ldr	r0, [r0]
   45818:	mov	r1, #0
   4581c:	ldr	r5, [r4, #20]
   45820:	strb	r1, [r5], -r0
   45824:	ldr	r0, [r4, #16]
   45828:	ldr	r1, [r4, #20]
   4582c:	cmp	r1, r0
   45830:	popcc	{r4, r5, fp, pc}
   45834:	ldm	r4, {r0, r1}
   45838:	lsl	r1, r1, #1
   4583c:	bl	14e80 <realloc@plt>
   45840:	cmp	r0, #0
   45844:	beq	45880 <flatcc_json_printer_init_dynamic_buffer@@Base+0xfc>
   45848:	str	r0, [r4]
   4584c:	mvn	r3, #63	; 0x3f
   45850:	add	r1, r0, r5
   45854:	ldr	r2, [r4, #4]
   45858:	add	r3, r3, r2, lsl #1
   4585c:	lsl	r2, r2, #1
   45860:	add	r0, r0, r3
   45864:	str	r3, [r4, #8]
   45868:	str	r2, [r4, #4]
   4586c:	str	r0, [r4, #16]
   45870:	str	r1, [r4, #20]
   45874:	mov	r0, #0
   45878:	strb	r0, [r1]
   4587c:	pop	{r4, r5, fp, pc}
   45880:	ldr	r0, [r4, #36]	; 0x24
   45884:	cmp	r0, #0
   45888:	moveq	r0, #3
   4588c:	streq	r0, [r4, #36]	; 0x24
   45890:	ldr	r0, [r4, #12]
   45894:	ldr	r1, [r4]
   45898:	add	r0, r0, r5
   4589c:	str	r1, [r4, #20]
   458a0:	str	r0, [r4, #12]
   458a4:	mov	r0, #0
   458a8:	strb	r0, [r1]
   458ac:	pop	{r4, r5, fp, pc}

000458b0 <flatcc_json_printer_get_buffer@@Base>:
   458b0:	push	{r4, r5, fp, lr}
   458b4:	add	fp, sp, #8
   458b8:	ldr	r2, [r0, #44]	; 0x2c
   458bc:	mov	r4, r1
   458c0:	mov	r1, #0
   458c4:	mov	r5, r0
   458c8:	blx	r2
   458cc:	cmp	r4, #0
   458d0:	beq	458e8 <flatcc_json_printer_get_buffer@@Base+0x38>
   458d4:	ldr	r0, [r5]
   458d8:	ldr	r1, [r5, #20]
   458dc:	sub	r1, r1, r0
   458e0:	str	r1, [r4]
   458e4:	pop	{r4, r5, fp, pc}
   458e8:	ldr	r0, [r5]
   458ec:	pop	{r4, r5, fp, pc}

000458f0 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   458f0:	push	{r4, r5, fp, lr}
   458f4:	add	fp, sp, #8
   458f8:	ldr	r2, [r0, #44]	; 0x2c
   458fc:	mov	r5, r1
   45900:	mov	r1, #0
   45904:	mov	r4, r0
   45908:	blx	r2
   4590c:	cmp	r5, #0
   45910:	beq	45928 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x38>
   45914:	ldr	r0, [r4]
   45918:	ldr	r1, [r4, #20]
   4591c:	sub	r1, r1, r0
   45920:	str	r1, [r5]
   45924:	b	4592c <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x3c>
   45928:	ldr	r0, [r4]
   4592c:	vmov.i32	q8, #0	; 0x00000000
   45930:	mov	r1, #32
   45934:	add	r2, r4, #16
   45938:	vst1.32	{d16-d17}, [r4], r1
   4593c:	vst1.32	{d16-d17}, [r2]
   45940:	vst1.32	{d16-d17}, [r4]
   45944:	pop	{r4, r5, fp, pc}

00045948 <flatcc_json_printer_clear@@Base>:
   45948:	push	{r4, sl, fp, lr}
   4594c:	add	fp, sp, #8
   45950:	mov	r4, r0
   45954:	ldrb	r0, [r0, #24]
   45958:	cmp	r0, #0
   4595c:	beq	45970 <flatcc_json_printer_clear@@Base+0x28>
   45960:	ldr	r0, [r4]
   45964:	cmp	r0, #0
   45968:	beq	45970 <flatcc_json_printer_clear@@Base+0x28>
   4596c:	bl	14e50 <free@plt>
   45970:	vmov.i32	q8, #0	; 0x00000000
   45974:	mov	r0, #32
   45978:	add	r1, r4, #16
   4597c:	vst1.32	{d16-d17}, [r4], r0
   45980:	vst1.32	{d16-d17}, [r1]
   45984:	vst1.32	{d16-d17}, [r4]
   45988:	pop	{r4, sl, fp, pc}
   4598c:	cmp	r2, #0
   45990:	bxeq	lr
   45994:	push	{r4, r5, fp, lr}
   45998:	add	fp, sp, #8
   4599c:	ldr	lr, [r2]
   459a0:	bic	ip, r3, #224	; 0xe0
   459a4:	cmp	ip, #0
   459a8:	beq	459c8 <flatcc_json_printer_clear@@Base+0x80>
   459ac:	cmp	ip, #1
   459b0:	bne	45a90 <flatcc_json_printer_clear@@Base+0x148>
   459b4:	movw	ip, #48818	; 0xbeb2
   459b8:	movt	ip, #4
   459bc:	cmp	lr, #3
   459c0:	bcs	459d8 <flatcc_json_printer_clear@@Base+0x90>
   459c4:	b	45a38 <flatcc_json_printer_clear@@Base+0xf0>
   459c8:	movw	ip, #48753	; 0xbe71
   459cc:	movt	ip, #4
   459d0:	cmp	lr, #3
   459d4:	bcc	45a38 <flatcc_json_printer_clear@@Base+0xf0>
   459d8:	ldrb	r4, [r1]
   459dc:	sub	lr, lr, #3
   459e0:	cmp	lr, #2
   459e4:	ldrb	r4, [ip, r4, lsr #2]
   459e8:	strb	r4, [r0]
   459ec:	ldrb	r5, [r1, #1]
   459f0:	ldrb	r4, [r1]
   459f4:	lsr	r5, r5, #4
   459f8:	bfi	r5, r4, #4, #2
   459fc:	ldrb	r4, [ip, r5]
   45a00:	strb	r4, [r0, #1]
   45a04:	ldrb	r5, [r1, #2]
   45a08:	ldrb	r4, [r1, #1]
   45a0c:	lsr	r5, r5, #6
   45a10:	bfi	r5, r4, #2, #4
   45a14:	ldrb	r4, [ip, r5]
   45a18:	strb	r4, [r0, #2]
   45a1c:	ldrb	r4, [r1, #2]
   45a20:	add	r1, r1, #3
   45a24:	and	r4, r4, #63	; 0x3f
   45a28:	ldrb	r4, [ip, r4]
   45a2c:	strb	r4, [r0, #3]
   45a30:	add	r0, r0, #4
   45a34:	bhi	459d8 <flatcc_json_printer_clear@@Base+0x90>
   45a38:	and	r3, r3, #128	; 0x80
   45a3c:	cmp	lr, #1
   45a40:	beq	45aa4 <flatcc_json_printer_clear@@Base+0x15c>
   45a44:	cmp	lr, #2
   45a48:	bne	45acc <flatcc_json_printer_clear@@Base+0x184>
   45a4c:	ldrb	r5, [r1]
   45a50:	cmp	r3, #0
   45a54:	ldrb	r5, [ip, r5, lsr #2]
   45a58:	strb	r5, [r0]
   45a5c:	ldrb	r4, [r1, #1]
   45a60:	ldrb	r5, [r1]
   45a64:	lsr	r4, r4, #4
   45a68:	bfi	r4, r5, #4, #2
   45a6c:	ldrb	r5, [ip, r4]
   45a70:	strb	r5, [r0, #1]
   45a74:	ldrb	r1, [r1, #1]
   45a78:	and	r1, r1, #15
   45a7c:	ldrb	r1, [ip, r1, lsl #2]
   45a80:	strb	r1, [r0, #2]
   45a84:	movne	r1, #61	; 0x3d
   45a88:	strbne	r1, [r0, #3]
   45a8c:	b	45acc <flatcc_json_printer_clear@@Base+0x184>
   45a90:	mov	r0, lr
   45a94:	sub	r0, lr, r0
   45a98:	str	r0, [r2]
   45a9c:	pop	{r4, r5, fp, lr}
   45aa0:	bx	lr
   45aa4:	ldrb	r5, [r1]
   45aa8:	cmp	r3, #0
   45aac:	ldrb	r5, [ip, r5, lsr #2]
   45ab0:	strb	r5, [r0]
   45ab4:	ldrb	r1, [r1]
   45ab8:	and	r1, r1, #3
   45abc:	ldrb	r1, [ip, r1, lsl #4]
   45ac0:	strb	r1, [r0, #1]
   45ac4:	movwne	r1, #15677	; 0x3d3d
   45ac8:	strhne	r1, [r0, #2]
   45acc:	ldr	lr, [r2]
   45ad0:	mov	r0, #0
   45ad4:	sub	r0, lr, r0
   45ad8:	str	r0, [r2]
   45adc:	pop	{r4, r5, fp, lr}
   45ae0:	bx	lr
   45ae4:	eor	r1, r1, #-2147483648	; 0x80000000
   45ae8:	b	45af0 <flatcc_json_printer_clear@@Base+0x1a8>
   45aec:	eor	r3, r3, #-2147483648	; 0x80000000
   45af0:	push	{r4, r5, lr}
   45af4:	lsl	r4, r1, #1
   45af8:	lsl	r5, r3, #1
   45afc:	teq	r4, r5
   45b00:	teqeq	r0, r2
   45b04:	orrsne	ip, r4, r0
   45b08:	orrsne	ip, r5, r2
   45b0c:	mvnsne	ip, r4, asr #21
   45b10:	mvnsne	ip, r5, asr #21
   45b14:	beq	45d00 <flatcc_json_printer_clear@@Base+0x3b8>
   45b18:	lsr	r4, r4, #21
   45b1c:	rsbs	r5, r4, r5, lsr #21
   45b20:	rsblt	r5, r5, #0
   45b24:	ble	45b44 <flatcc_json_printer_clear@@Base+0x1fc>
   45b28:	add	r4, r4, r5
   45b2c:	eor	r2, r0, r2
   45b30:	eor	r3, r1, r3
   45b34:	eor	r0, r2, r0
   45b38:	eor	r1, r3, r1
   45b3c:	eor	r2, r0, r2
   45b40:	eor	r3, r1, r3
   45b44:	cmp	r5, #54	; 0x36
   45b48:	pophi	{r4, r5, pc}
   45b4c:	tst	r1, #-2147483648	; 0x80000000
   45b50:	lsl	r1, r1, #12
   45b54:	mov	ip, #1048576	; 0x100000
   45b58:	orr	r1, ip, r1, lsr #12
   45b5c:	beq	45b68 <flatcc_json_printer_clear@@Base+0x220>
   45b60:	rsbs	r0, r0, #0
   45b64:	rsc	r1, r1, #0
   45b68:	tst	r3, #-2147483648	; 0x80000000
   45b6c:	lsl	r3, r3, #12
   45b70:	orr	r3, ip, r3, lsr #12
   45b74:	beq	45b80 <flatcc_json_printer_clear@@Base+0x238>
   45b78:	rsbs	r2, r2, #0
   45b7c:	rsc	r3, r3, #0
   45b80:	teq	r4, r5
   45b84:	beq	45ce8 <flatcc_json_printer_clear@@Base+0x3a0>
   45b88:	sub	r4, r4, #1
   45b8c:	rsbs	lr, r5, #32
   45b90:	blt	45bac <flatcc_json_printer_clear@@Base+0x264>
   45b94:	lsl	ip, r2, lr
   45b98:	adds	r0, r0, r2, lsr r5
   45b9c:	adc	r1, r1, #0
   45ba0:	adds	r0, r0, r3, lsl lr
   45ba4:	adcs	r1, r1, r3, asr r5
   45ba8:	b	45bc8 <flatcc_json_printer_clear@@Base+0x280>
   45bac:	sub	r5, r5, #32
   45bb0:	add	lr, lr, #32
   45bb4:	cmp	r2, #1
   45bb8:	lsl	ip, r3, lr
   45bbc:	orrcs	ip, ip, #2
   45bc0:	adds	r0, r0, r3, asr r5
   45bc4:	adcs	r1, r1, r3, asr #31
   45bc8:	and	r5, r1, #-2147483648	; 0x80000000
   45bcc:	bpl	45bdc <flatcc_json_printer_clear@@Base+0x294>
   45bd0:	rsbs	ip, ip, #0
   45bd4:	rscs	r0, r0, #0
   45bd8:	rsc	r1, r1, #0
   45bdc:	cmp	r1, #1048576	; 0x100000
   45be0:	bcc	45c20 <flatcc_json_printer_clear@@Base+0x2d8>
   45be4:	cmp	r1, #2097152	; 0x200000
   45be8:	bcc	45c08 <flatcc_json_printer_clear@@Base+0x2c0>
   45bec:	lsrs	r1, r1, #1
   45bf0:	rrxs	r0, r0
   45bf4:	rrx	ip, ip
   45bf8:	add	r4, r4, #1
   45bfc:	lsl	r2, r4, #21
   45c00:	cmn	r2, #4194304	; 0x400000
   45c04:	bcs	45d60 <flatcc_json_printer_clear@@Base+0x418>
   45c08:	cmp	ip, #-2147483648	; 0x80000000
   45c0c:	lsrseq	ip, r0, #1
   45c10:	adcs	r0, r0, #0
   45c14:	adc	r1, r1, r4, lsl #20
   45c18:	orr	r1, r1, r5
   45c1c:	pop	{r4, r5, pc}
   45c20:	lsls	ip, ip, #1
   45c24:	adcs	r0, r0, r0
   45c28:	adc	r1, r1, r1
   45c2c:	tst	r1, #1048576	; 0x100000
   45c30:	sub	r4, r4, #1
   45c34:	bne	45c08 <flatcc_json_printer_clear@@Base+0x2c0>
   45c38:	teq	r1, #0
   45c3c:	moveq	r1, r0
   45c40:	moveq	r0, #0
   45c44:	clz	r3, r1
   45c48:	addeq	r3, r3, #32
   45c4c:	sub	r3, r3, #11
   45c50:	subs	r2, r3, #32
   45c54:	bge	45c78 <flatcc_json_printer_clear@@Base+0x330>
   45c58:	adds	r2, r2, #12
   45c5c:	ble	45c74 <flatcc_json_printer_clear@@Base+0x32c>
   45c60:	add	ip, r2, #20
   45c64:	rsb	r2, r2, #12
   45c68:	lsl	r0, r1, ip
   45c6c:	lsr	r1, r1, r2
   45c70:	b	45c88 <flatcc_json_printer_clear@@Base+0x340>
   45c74:	add	r2, r2, #20
   45c78:	rsble	ip, r2, #32
   45c7c:	lsl	r1, r1, r2
   45c80:	orrle	r1, r1, r0, lsr ip
   45c84:	lslle	r0, r0, r2
   45c88:	subs	r4, r4, r3
   45c8c:	addge	r1, r1, r4, lsl #20
   45c90:	orrge	r1, r1, r5
   45c94:	popge	{r4, r5, pc}
   45c98:	mvn	r4, r4
   45c9c:	subs	r4, r4, #31
   45ca0:	bge	45cdc <flatcc_json_printer_clear@@Base+0x394>
   45ca4:	adds	r4, r4, #12
   45ca8:	bgt	45cc4 <flatcc_json_printer_clear@@Base+0x37c>
   45cac:	add	r4, r4, #20
   45cb0:	rsb	r2, r4, #32
   45cb4:	lsr	r0, r0, r4
   45cb8:	orr	r0, r0, r1, lsl r2
   45cbc:	orr	r1, r5, r1, lsr r4
   45cc0:	pop	{r4, r5, pc}
   45cc4:	rsb	r4, r4, #12
   45cc8:	rsb	r2, r4, #32
   45ccc:	lsr	r0, r0, r2
   45cd0:	orr	r0, r0, r1, lsl r4
   45cd4:	mov	r1, r5
   45cd8:	pop	{r4, r5, pc}
   45cdc:	lsr	r0, r1, r4
   45ce0:	mov	r1, r5
   45ce4:	pop	{r4, r5, pc}
   45ce8:	teq	r4, #0
   45cec:	eor	r3, r3, #1048576	; 0x100000
   45cf0:	eoreq	r1, r1, #1048576	; 0x100000
   45cf4:	addeq	r4, r4, #1
   45cf8:	subne	r5, r5, #1
   45cfc:	b	45b88 <flatcc_json_printer_clear@@Base+0x240>
   45d00:	mvns	ip, r4, asr #21
   45d04:	mvnsne	ip, r5, asr #21
   45d08:	beq	45d70 <flatcc_json_printer_clear@@Base+0x428>
   45d0c:	teq	r4, r5
   45d10:	teqeq	r0, r2
   45d14:	beq	45d28 <flatcc_json_printer_clear@@Base+0x3e0>
   45d18:	orrs	ip, r4, r0
   45d1c:	moveq	r1, r3
   45d20:	moveq	r0, r2
   45d24:	pop	{r4, r5, pc}
   45d28:	teq	r1, r3
   45d2c:	movne	r1, #0
   45d30:	movne	r0, #0
   45d34:	popne	{r4, r5, pc}
   45d38:	lsrs	ip, r4, #21
   45d3c:	bne	45d50 <flatcc_json_printer_clear@@Base+0x408>
   45d40:	lsls	r0, r0, #1
   45d44:	adcs	r1, r1, r1
   45d48:	orrcs	r1, r1, #-2147483648	; 0x80000000
   45d4c:	pop	{r4, r5, pc}
   45d50:	adds	r4, r4, #4194304	; 0x400000
   45d54:	addcc	r1, r1, #1048576	; 0x100000
   45d58:	popcc	{r4, r5, pc}
   45d5c:	and	r5, r1, #-2147483648	; 0x80000000
   45d60:	orr	r1, r5, #2130706432	; 0x7f000000
   45d64:	orr	r1, r1, #15728640	; 0xf00000
   45d68:	mov	r0, #0
   45d6c:	pop	{r4, r5, pc}
   45d70:	mvns	ip, r4, asr #21
   45d74:	movne	r1, r3
   45d78:	movne	r0, r2
   45d7c:	mvnseq	ip, r5, asr #21
   45d80:	movne	r3, r1
   45d84:	movne	r2, r0
   45d88:	orrs	r4, r0, r1, lsl #12
   45d8c:	orrseq	r5, r2, r3, lsl #12
   45d90:	teqeq	r1, r3
   45d94:	orrne	r1, r1, #524288	; 0x80000
   45d98:	pop	{r4, r5, pc}
   45d9c:	teq	r0, #0
   45da0:	moveq	r1, #0
   45da4:	bxeq	lr
   45da8:	push	{r4, r5, lr}
   45dac:	mov	r4, #1024	; 0x400
   45db0:	add	r4, r4, #50	; 0x32
   45db4:	mov	r5, #0
   45db8:	mov	r1, #0
   45dbc:	b	45c38 <flatcc_json_printer_clear@@Base+0x2f0>
   45dc0:	teq	r0, #0
   45dc4:	moveq	r1, #0
   45dc8:	bxeq	lr
   45dcc:	push	{r4, r5, lr}
   45dd0:	mov	r4, #1024	; 0x400
   45dd4:	add	r4, r4, #50	; 0x32
   45dd8:	ands	r5, r0, #-2147483648	; 0x80000000
   45ddc:	rsbmi	r0, r0, #0
   45de0:	mov	r1, #0
   45de4:	b	45c38 <flatcc_json_printer_clear@@Base+0x2f0>
   45de8:	lsls	r2, r0, #1
   45dec:	asr	r1, r2, #3
   45df0:	rrx	r1, r1
   45df4:	lsl	r0, r2, #28
   45df8:	andsne	r3, r2, #-16777216	; 0xff000000
   45dfc:	teqne	r3, #-16777216	; 0xff000000
   45e00:	eorne	r1, r1, #939524096	; 0x38000000
   45e04:	bxne	lr
   45e08:	bics	r2, r2, #-16777216	; 0xff000000
   45e0c:	bxeq	lr
   45e10:	teq	r3, #-16777216	; 0xff000000
   45e14:	orreq	r1, r1, #524288	; 0x80000
   45e18:	bxeq	lr
   45e1c:	push	{r4, r5, lr}
   45e20:	mov	r4, #896	; 0x380
   45e24:	and	r5, r1, #-2147483648	; 0x80000000
   45e28:	bic	r1, r1, #-2147483648	; 0x80000000
   45e2c:	b	45c38 <flatcc_json_printer_clear@@Base+0x2f0>
   45e30:	orrs	r2, r0, r1
   45e34:	bxeq	lr
   45e38:	push	{r4, r5, lr}
   45e3c:	mov	r5, #0
   45e40:	b	45e60 <flatcc_json_printer_clear@@Base+0x518>
   45e44:	orrs	r2, r0, r1
   45e48:	bxeq	lr
   45e4c:	push	{r4, r5, lr}
   45e50:	ands	r5, r1, #-2147483648	; 0x80000000
   45e54:	bpl	45e60 <flatcc_json_printer_clear@@Base+0x518>
   45e58:	rsbs	r0, r0, #0
   45e5c:	rsc	r1, r1, #0
   45e60:	mov	r4, #1024	; 0x400
   45e64:	add	r4, r4, #50	; 0x32
   45e68:	lsrs	ip, r1, #22
   45e6c:	beq	45bdc <flatcc_json_printer_clear@@Base+0x294>
   45e70:	mov	r2, #3
   45e74:	lsrs	ip, ip, #3
   45e78:	addne	r2, r2, #3
   45e7c:	lsrs	ip, ip, #3
   45e80:	addne	r2, r2, #3
   45e84:	add	r2, r2, ip, lsr #3
   45e88:	rsb	r3, r2, #32
   45e8c:	lsl	ip, r0, r3
   45e90:	lsr	r0, r0, r2
   45e94:	orr	r0, r0, r1, lsl r3
   45e98:	lsr	r1, r1, r2
   45e9c:	add	r4, r4, r2
   45ea0:	b	45bdc <flatcc_json_printer_clear@@Base+0x294>
   45ea4:	eor	r0, r0, #-2147483648	; 0x80000000
   45ea8:	b	45eb0 <flatcc_json_printer_clear@@Base+0x568>
   45eac:	eor	r1, r1, #-2147483648	; 0x80000000
   45eb0:	lsls	r2, r0, #1
   45eb4:	lslsne	r3, r1, #1
   45eb8:	teqne	r2, r3
   45ebc:	mvnsne	ip, r2, asr #24
   45ec0:	mvnsne	ip, r3, asr #24
   45ec4:	beq	45fbc <flatcc_json_printer_clear@@Base+0x674>
   45ec8:	lsr	r2, r2, #24
   45ecc:	rsbs	r3, r2, r3, lsr #24
   45ed0:	addgt	r2, r2, r3
   45ed4:	eorgt	r1, r0, r1
   45ed8:	eorgt	r0, r1, r0
   45edc:	eorgt	r1, r0, r1
   45ee0:	rsblt	r3, r3, #0
   45ee4:	cmp	r3, #25
   45ee8:	bxhi	lr
   45eec:	tst	r0, #-2147483648	; 0x80000000
   45ef0:	orr	r0, r0, #8388608	; 0x800000
   45ef4:	bic	r0, r0, #-16777216	; 0xff000000
   45ef8:	rsbne	r0, r0, #0
   45efc:	tst	r1, #-2147483648	; 0x80000000
   45f00:	orr	r1, r1, #8388608	; 0x800000
   45f04:	bic	r1, r1, #-16777216	; 0xff000000
   45f08:	rsbne	r1, r1, #0
   45f0c:	teq	r2, r3
   45f10:	beq	45fa4 <flatcc_json_printer_clear@@Base+0x65c>
   45f14:	sub	r2, r2, #1
   45f18:	adds	r0, r0, r1, asr r3
   45f1c:	rsb	r3, r3, #32
   45f20:	lsl	r1, r1, r3
   45f24:	and	r3, r0, #-2147483648	; 0x80000000
   45f28:	bpl	45f34 <flatcc_json_printer_clear@@Base+0x5ec>
   45f2c:	rsbs	r1, r1, #0
   45f30:	rsc	r0, r0, #0
   45f34:	cmp	r0, #8388608	; 0x800000
   45f38:	bcc	45f6c <flatcc_json_printer_clear@@Base+0x624>
   45f3c:	cmp	r0, #16777216	; 0x1000000
   45f40:	bcc	45f58 <flatcc_json_printer_clear@@Base+0x610>
   45f44:	lsrs	r0, r0, #1
   45f48:	rrx	r1, r1
   45f4c:	add	r2, r2, #1
   45f50:	cmp	r2, #254	; 0xfe
   45f54:	bcs	46010 <flatcc_json_printer_clear@@Base+0x6c8>
   45f58:	cmp	r1, #-2147483648	; 0x80000000
   45f5c:	adc	r0, r0, r2, lsl #23
   45f60:	biceq	r0, r0, #1
   45f64:	orr	r0, r0, r3
   45f68:	bx	lr
   45f6c:	lsls	r1, r1, #1
   45f70:	adc	r0, r0, r0
   45f74:	tst	r0, #8388608	; 0x800000
   45f78:	sub	r2, r2, #1
   45f7c:	bne	45f58 <flatcc_json_printer_clear@@Base+0x610>
   45f80:	clz	ip, r0
   45f84:	sub	ip, ip, #8
   45f88:	subs	r2, r2, ip
   45f8c:	lsl	r0, r0, ip
   45f90:	addge	r0, r0, r2, lsl #23
   45f94:	rsblt	r2, r2, #0
   45f98:	orrge	r0, r0, r3
   45f9c:	orrlt	r0, r3, r0, lsr r2
   45fa0:	bx	lr
   45fa4:	teq	r2, #0
   45fa8:	eor	r1, r1, #8388608	; 0x800000
   45fac:	eoreq	r0, r0, #8388608	; 0x800000
   45fb0:	addeq	r2, r2, #1
   45fb4:	subne	r3, r3, #1
   45fb8:	b	45f14 <flatcc_json_printer_clear@@Base+0x5cc>
   45fbc:	lsl	r3, r1, #1
   45fc0:	mvns	ip, r2, asr #24
   45fc4:	mvnsne	ip, r3, asr #24
   45fc8:	beq	4601c <flatcc_json_printer_clear@@Base+0x6d4>
   45fcc:	teq	r2, r3
   45fd0:	beq	45fe0 <flatcc_json_printer_clear@@Base+0x698>
   45fd4:	teq	r2, #0
   45fd8:	moveq	r0, r1
   45fdc:	bx	lr
   45fe0:	teq	r0, r1
   45fe4:	movne	r0, #0
   45fe8:	bxne	lr
   45fec:	tst	r2, #-16777216	; 0xff000000
   45ff0:	bne	46000 <flatcc_json_printer_clear@@Base+0x6b8>
   45ff4:	lsls	r0, r0, #1
   45ff8:	orrcs	r0, r0, #-2147483648	; 0x80000000
   45ffc:	bx	lr
   46000:	adds	r2, r2, #33554432	; 0x2000000
   46004:	addcc	r0, r0, #8388608	; 0x800000
   46008:	bxcc	lr
   4600c:	and	r3, r0, #-2147483648	; 0x80000000
   46010:	orr	r0, r3, #2130706432	; 0x7f000000
   46014:	orr	r0, r0, #8388608	; 0x800000
   46018:	bx	lr
   4601c:	mvns	r2, r2, asr #24
   46020:	movne	r0, r1
   46024:	mvnseq	r3, r3, asr #24
   46028:	movne	r1, r0
   4602c:	lsls	r2, r0, #9
   46030:	lslseq	r3, r1, #9
   46034:	teqeq	r0, r1
   46038:	orrne	r0, r0, #4194304	; 0x400000
   4603c:	bx	lr
   46040:	mov	r3, #0
   46044:	b	46050 <flatcc_json_printer_clear@@Base+0x708>
   46048:	ands	r3, r0, #-2147483648	; 0x80000000
   4604c:	rsbmi	r0, r0, #0
   46050:	movs	ip, r0
   46054:	bxeq	lr
   46058:	orr	r3, r3, #1258291200	; 0x4b000000
   4605c:	mov	r1, r0
   46060:	mov	r0, #0
   46064:	b	460a8 <flatcc_json_printer_clear@@Base+0x760>
   46068:	orrs	r2, r0, r1
   4606c:	bxeq	lr
   46070:	mov	r3, #0
   46074:	b	46090 <flatcc_json_printer_clear@@Base+0x748>
   46078:	orrs	r2, r0, r1
   4607c:	bxeq	lr
   46080:	ands	r3, r1, #-2147483648	; 0x80000000
   46084:	bpl	46090 <flatcc_json_printer_clear@@Base+0x748>
   46088:	rsbs	r0, r0, #0
   4608c:	rsc	r1, r1, #0
   46090:	movs	ip, r1
   46094:	moveq	ip, r0
   46098:	moveq	r1, r0
   4609c:	moveq	r0, #0
   460a0:	orr	r3, r3, #1526726656	; 0x5b000000
   460a4:	subeq	r3, r3, #268435456	; 0x10000000
   460a8:	sub	r3, r3, #8388608	; 0x800000
   460ac:	clz	r2, ip
   460b0:	subs	r2, r2, #8
   460b4:	sub	r3, r3, r2, lsl #23
   460b8:	blt	460d8 <flatcc_json_printer_clear@@Base+0x790>
   460bc:	add	r3, r3, r1, lsl r2
   460c0:	lsl	ip, r0, r2
   460c4:	rsb	r2, r2, #32
   460c8:	cmp	ip, #-2147483648	; 0x80000000
   460cc:	adc	r0, r3, r0, lsr r2
   460d0:	biceq	r0, r0, #1
   460d4:	bx	lr
   460d8:	add	r2, r2, #32
   460dc:	lsl	ip, r1, r2
   460e0:	rsb	r2, r2, #32
   460e4:	orrs	r0, r0, ip, lsl #1
   460e8:	adc	r0, r3, r1, lsr r2
   460ec:	biceq	r0, r0, ip, lsr #31
   460f0:	bx	lr
   460f4:	cmp	r3, #0
   460f8:	cmpeq	r2, #0
   460fc:	bne	46114 <flatcc_json_printer_clear@@Base+0x7cc>
   46100:	cmp	r1, #0
   46104:	cmpeq	r0, #0
   46108:	mvnne	r1, #0
   4610c:	mvnne	r0, #0
   46110:	b	46130 <flatcc_json_printer_clear@@Base+0x7e8>
   46114:	sub	sp, sp, #8
   46118:	push	{sp, lr}
   4611c:	bl	46140 <flatcc_json_printer_clear@@Base+0x7f8>
   46120:	ldr	lr, [sp, #4]
   46124:	add	sp, sp, #8
   46128:	pop	{r2, r3}
   4612c:	bx	lr
   46130:	push	{r1, lr}
   46134:	mov	r0, #8
   46138:	bl	14e2c <raise@plt>
   4613c:	pop	{r1, pc}
   46140:	cmp	r1, r3
   46144:	cmpeq	r0, r2
   46148:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4614c:	mov	r4, r0
   46150:	movcc	r0, #0
   46154:	mov	r5, r1
   46158:	ldr	lr, [sp, #36]	; 0x24
   4615c:	movcc	r1, r0
   46160:	bcc	4625c <flatcc_json_printer_clear@@Base+0x914>
   46164:	cmp	r3, #0
   46168:	clzeq	ip, r2
   4616c:	clzne	ip, r3
   46170:	addeq	ip, ip, #32
   46174:	cmp	r5, #0
   46178:	clzeq	r1, r4
   4617c:	addeq	r1, r1, #32
   46180:	clzne	r1, r5
   46184:	sub	ip, ip, r1
   46188:	sub	sl, ip, #32
   4618c:	lsl	r9, r3, ip
   46190:	rsb	fp, ip, #32
   46194:	orr	r9, r9, r2, lsl sl
   46198:	orr	r9, r9, r2, lsr fp
   4619c:	lsl	r8, r2, ip
   461a0:	cmp	r5, r9
   461a4:	cmpeq	r4, r8
   461a8:	movcc	r0, #0
   461ac:	movcc	r1, r0
   461b0:	bcc	461cc <flatcc_json_printer_clear@@Base+0x884>
   461b4:	mov	r0, #1
   461b8:	subs	r4, r4, r8
   461bc:	lsl	r1, r0, sl
   461c0:	orr	r1, r1, r0, lsr fp
   461c4:	lsl	r0, r0, ip
   461c8:	sbc	r5, r5, r9
   461cc:	cmp	ip, #0
   461d0:	beq	4625c <flatcc_json_printer_clear@@Base+0x914>
   461d4:	lsr	r6, r8, #1
   461d8:	orr	r6, r6, r9, lsl #31
   461dc:	lsr	r7, r9, #1
   461e0:	mov	r2, ip
   461e4:	b	46208 <flatcc_json_printer_clear@@Base+0x8c0>
   461e8:	subs	r3, r4, r6
   461ec:	sbc	r8, r5, r7
   461f0:	adds	r3, r3, r3
   461f4:	adc	r8, r8, r8
   461f8:	adds	r4, r3, #1
   461fc:	adc	r5, r8, #0
   46200:	subs	r2, r2, #1
   46204:	beq	46224 <flatcc_json_printer_clear@@Base+0x8dc>
   46208:	cmp	r5, r7
   4620c:	cmpeq	r4, r6
   46210:	bcs	461e8 <flatcc_json_printer_clear@@Base+0x8a0>
   46214:	adds	r4, r4, r4
   46218:	adc	r5, r5, r5
   4621c:	subs	r2, r2, #1
   46220:	bne	46208 <flatcc_json_printer_clear@@Base+0x8c0>
   46224:	lsr	r3, r4, ip
   46228:	orr	r3, r3, r5, lsl fp
   4622c:	lsr	r2, r5, ip
   46230:	orr	r3, r3, r5, lsr sl
   46234:	adds	r0, r0, r4
   46238:	mov	r4, r3
   4623c:	lsl	r3, r2, ip
   46240:	orr	r3, r3, r4, lsl sl
   46244:	lsl	ip, r4, ip
   46248:	orr	r3, r3, r4, lsr fp
   4624c:	adc	r1, r1, r5
   46250:	subs	r0, r0, ip
   46254:	mov	r5, r2
   46258:	sbc	r1, r1, r3
   4625c:	cmp	lr, #0
   46260:	strdne	r4, [lr]
   46264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00046268 <__libc_csu_init@@Base>:
   46268:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4626c:	mov	r7, r0
   46270:	ldr	r6, [pc, #72]	; 462c0 <__libc_csu_init@@Base+0x58>
   46274:	ldr	r5, [pc, #72]	; 462c4 <__libc_csu_init@@Base+0x5c>
   46278:	add	r6, pc, r6
   4627c:	add	r5, pc, r5
   46280:	sub	r6, r6, r5
   46284:	mov	r8, r1
   46288:	mov	r9, r2
   4628c:	bl	14e0c <raise@plt-0x20>
   46290:	asrs	r6, r6, #2
   46294:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   46298:	mov	r4, #0
   4629c:	add	r4, r4, #1
   462a0:	ldr	r3, [r5], #4
   462a4:	mov	r2, r9
   462a8:	mov	r1, r8
   462ac:	mov	r0, r7
   462b0:	blx	r3
   462b4:	cmp	r6, r4
   462b8:	bne	4629c <__libc_csu_init@@Base+0x34>
   462bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   462c0:	andeq	r6, r1, ip, lsl #25
   462c4:	andeq	r6, r1, r4, lsl #25

000462c8 <__libc_csu_fini@@Base>:
   462c8:	bx	lr

Disassembly of section .fini:

000462cc <.fini>:
   462cc:	push	{r3, lr}
   462d0:	pop	{r3, pc}
