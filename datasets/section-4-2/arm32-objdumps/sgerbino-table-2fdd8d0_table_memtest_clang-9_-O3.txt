
../repos/sgerbino-table-2fdd8d0/bin/table_memtest:     file format elf32-littlearm


Disassembly of section .init:

00011ec0 <.init>:
   11ec0:	push	{r3, lr}
   11ec4:	bl	11fc4 <_start@@Base+0x3c>
   11ec8:	pop	{r3, pc}

Disassembly of section .plt:

00011ecc <strcmp@plt-0x14>:
   11ecc:	push	{lr}		; (str lr, [sp, #-4]!)
   11ed0:	ldr	lr, [pc, #4]	; 11edc <strcmp@plt-0x4>
   11ed4:	add	lr, pc, lr
   11ed8:	ldr	pc, [lr, #8]!
   11edc:	andeq	r4, r1, r4, lsr #2

00011ee0 <strcmp@plt>:
   11ee0:	add	ip, pc, #0, 12
   11ee4:	add	ip, ip, #20, 20	; 0x14000
   11ee8:	ldr	pc, [ip, #292]!	; 0x124

00011eec <free@plt>:
   11eec:	add	ip, pc, #0, 12
   11ef0:	add	ip, ip, #20, 20	; 0x14000
   11ef4:	ldr	pc, [ip, #284]!	; 0x11c

00011ef8 <time@plt>:
   11ef8:	add	ip, pc, #0, 12
   11efc:	add	ip, ip, #20, 20	; 0x14000
   11f00:	ldr	pc, [ip, #276]!	; 0x114

00011f04 <realloc@plt>:
   11f04:	add	ip, pc, #0, 12
   11f08:	add	ip, ip, #20, 20	; 0x14000
   11f0c:	ldr	pc, [ip, #268]!	; 0x10c

00011f10 <strcpy@plt>:
   11f10:	add	ip, pc, #0, 12
   11f14:	add	ip, ip, #20, 20	; 0x14000
   11f18:	ldr	pc, [ip, #260]!	; 0x104

00011f1c <malloc@plt>:
   11f1c:	add	ip, pc, #0, 12
   11f20:	add	ip, ip, #20, 20	; 0x14000
   11f24:	ldr	pc, [ip, #252]!	; 0xfc

00011f28 <__libc_start_main@plt>:
   11f28:	add	ip, pc, #0, 12
   11f2c:	add	ip, ip, #20, 20	; 0x14000
   11f30:	ldr	pc, [ip, #244]!	; 0xf4

00011f34 <__gmon_start__@plt>:
   11f34:	add	ip, pc, #0, 12
   11f38:	add	ip, ip, #20, 20	; 0x14000
   11f3c:	ldr	pc, [ip, #236]!	; 0xec

00011f40 <strlen@plt>:
   11f40:	add	ip, pc, #0, 12
   11f44:	add	ip, ip, #20, 20	; 0x14000
   11f48:	ldr	pc, [ip, #228]!	; 0xe4

00011f4c <srand@plt>:
   11f4c:	add	ip, pc, #0, 12
   11f50:	add	ip, ip, #20, 20	; 0x14000
   11f54:	ldr	pc, [ip, #220]!	; 0xdc

00011f58 <snprintf@plt>:
   11f58:	add	ip, pc, #0, 12
   11f5c:	add	ip, ip, #20, 20	; 0x14000
   11f60:	ldr	pc, [ip, #212]!	; 0xd4

00011f64 <__isoc99_sscanf@plt>:
   11f64:	add	ip, pc, #0, 12
   11f68:	add	ip, ip, #20, 20	; 0x14000
   11f6c:	ldr	pc, [ip, #204]!	; 0xcc

00011f70 <rand@plt>:
   11f70:	add	ip, pc, #0, 12
   11f74:	add	ip, ip, #20, 20	; 0x14000
   11f78:	ldr	pc, [ip, #196]!	; 0xc4

00011f7c <abort@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #20, 20	; 0x14000
   11f84:	ldr	pc, [ip, #188]!	; 0xbc

Disassembly of section .text:

00011f88 <_start@@Base>:
   11f88:	mov	fp, #0
   11f8c:	mov	lr, #0
   11f90:	pop	{r1}		; (ldr r1, [sp], #4)
   11f94:	mov	r2, sp
   11f98:	push	{r2}		; (str r2, [sp, #-4]!)
   11f9c:	push	{r0}		; (str r0, [sp, #-4]!)
   11fa0:	ldr	ip, [pc, #16]	; 11fb8 <_start@@Base+0x30>
   11fa4:	push	{ip}		; (str ip, [sp, #-4]!)
   11fa8:	ldr	r0, [pc, #12]	; 11fbc <_start@@Base+0x34>
   11fac:	ldr	r3, [pc, #12]	; 11fc0 <_start@@Base+0x38>
   11fb0:	bl	11f28 <__libc_start_main@plt>
   11fb4:	bl	11f7c <abort@plt>
   11fb8:	andeq	r5, r1, r4, asr #20
   11fbc:	andeq	r2, r1, r8, ror r0
   11fc0:	andeq	r5, r1, r4, ror #19
   11fc4:	ldr	r3, [pc, #20]	; 11fe0 <_start@@Base+0x58>
   11fc8:	ldr	r2, [pc, #20]	; 11fe4 <_start@@Base+0x5c>
   11fcc:	add	r3, pc, r3
   11fd0:	ldr	r2, [r3, r2]
   11fd4:	cmp	r2, #0
   11fd8:	bxeq	lr
   11fdc:	b	11f34 <__gmon_start__@plt>
   11fe0:	andeq	r4, r1, ip, lsr #32
   11fe4:	andeq	r0, r0, r4, asr #32
   11fe8:	ldr	r0, [pc, #24]	; 12008 <_start@@Base+0x80>
   11fec:	ldr	r3, [pc, #24]	; 1200c <_start@@Base+0x84>
   11ff0:	cmp	r3, r0
   11ff4:	bxeq	lr
   11ff8:	ldr	r3, [pc, #16]	; 12010 <_start@@Base+0x88>
   11ffc:	cmp	r3, #0
   12000:	bxeq	lr
   12004:	bx	r3
   12008:	andeq	r6, r2, r0, asr r0
   1200c:	andeq	r6, r2, r0, asr r0
   12010:	andeq	r0, r0, r0
   12014:	ldr	r0, [pc, #36]	; 12040 <_start@@Base+0xb8>
   12018:	ldr	r1, [pc, #36]	; 12044 <_start@@Base+0xbc>
   1201c:	sub	r1, r1, r0
   12020:	asr	r1, r1, #2
   12024:	add	r1, r1, r1, lsr #31
   12028:	asrs	r1, r1, #1
   1202c:	bxeq	lr
   12030:	ldr	r3, [pc, #16]	; 12048 <_start@@Base+0xc0>
   12034:	cmp	r3, #0
   12038:	bxeq	lr
   1203c:	bx	r3
   12040:	andeq	r6, r2, r0, asr r0
   12044:	andeq	r6, r2, r0, asr r0
   12048:	andeq	r0, r0, r0
   1204c:	push	{r4, lr}
   12050:	ldr	r4, [pc, #24]	; 12070 <_start@@Base+0xe8>
   12054:	ldrb	r3, [r4]
   12058:	cmp	r3, #0
   1205c:	popne	{r4, pc}
   12060:	bl	11fe8 <_start@@Base+0x60>
   12064:	mov	r3, #1
   12068:	strb	r3, [r4]
   1206c:	pop	{r4, pc}
   12070:	andeq	r6, r2, r0, asr r0
   12074:	b	12014 <_start@@Base+0x8c>

00012078 <main@@Base>:
   12078:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1207c:	add	fp, sp, #24
   12080:	sub	sp, sp, #16
   12084:	mov	r8, #0
   12088:	str	r8, [sp, #12]
   1208c:	bl	124d0 <table_new@@Base>
   12090:	mov	r4, r0
   12094:	add	r0, sp, #8
   12098:	bl	11ef8 <time@plt>
   1209c:	bl	11f4c <srand@plt>
   120a0:	movw	r1, #9404	; 0x24bc
   120a4:	add	r2, sp, #12
   120a8:	mov	r0, r4
   120ac:	mvn	r3, #0
   120b0:	movt	r1, #1
   120b4:	bl	12cd4 <table_register_callback@@Base>
   120b8:	add	r6, sp, #6
   120bc:	mov	r0, r4
   120c0:	mov	r2, #0
   120c4:	strh	r8, [sp, #6]
   120c8:	mov	r1, r6
   120cc:	bl	130e4 <table_add_column@@Base>
   120d0:	mov	r0, #1
   120d4:	mov	r1, r6
   120d8:	mov	r2, #1
   120dc:	strh	r0, [sp, #6]
   120e0:	mov	r0, r4
   120e4:	bl	130e4 <table_add_column@@Base>
   120e8:	mov	r0, #2
   120ec:	mov	r1, r6
   120f0:	mov	r2, #2
   120f4:	strh	r0, [sp, #6]
   120f8:	mov	r0, r4
   120fc:	bl	130e4 <table_add_column@@Base>
   12100:	mov	r0, #3
   12104:	mov	r1, r6
   12108:	mov	r2, #3
   1210c:	strh	r0, [sp, #6]
   12110:	mov	r0, r4
   12114:	bl	130e4 <table_add_column@@Base>
   12118:	mov	r0, #4
   1211c:	mov	r1, r6
   12120:	mov	r2, #4
   12124:	strh	r0, [sp, #6]
   12128:	mov	r0, r4
   1212c:	bl	130e4 <table_add_column@@Base>
   12130:	mov	r0, #5
   12134:	mov	r1, r6
   12138:	mov	r2, #5
   1213c:	strh	r0, [sp, #6]
   12140:	mov	r0, r4
   12144:	bl	130e4 <table_add_column@@Base>
   12148:	mov	r0, #6
   1214c:	mov	r1, r6
   12150:	mov	r2, #6
   12154:	strh	r0, [sp, #6]
   12158:	mov	r0, r4
   1215c:	bl	130e4 <table_add_column@@Base>
   12160:	mov	r0, #7
   12164:	mov	r1, r6
   12168:	mov	r2, #7
   1216c:	strh	r0, [sp, #6]
   12170:	mov	r0, r4
   12174:	bl	130e4 <table_add_column@@Base>
   12178:	mov	r0, #8
   1217c:	mov	r1, r6
   12180:	mov	r2, #8
   12184:	strh	r0, [sp, #6]
   12188:	mov	r0, r4
   1218c:	bl	130e4 <table_add_column@@Base>
   12190:	mov	r0, #9
   12194:	mov	r1, r6
   12198:	mov	r2, #9
   1219c:	strh	r0, [sp, #6]
   121a0:	mov	r0, r4
   121a4:	bl	130e4 <table_add_column@@Base>
   121a8:	mov	r0, #10
   121ac:	mov	r1, r6
   121b0:	mov	r2, #10
   121b4:	strh	r0, [sp, #6]
   121b8:	mov	r0, r4
   121bc:	bl	130e4 <table_add_column@@Base>
   121c0:	mov	r0, #11
   121c4:	mov	r1, r6
   121c8:	mov	r2, #11
   121cc:	strh	r0, [sp, #6]
   121d0:	mov	r0, r4
   121d4:	bl	130e4 <table_add_column@@Base>
   121d8:	mov	r0, #12
   121dc:	mov	r1, r6
   121e0:	mov	r2, #12
   121e4:	strh	r0, [sp, #6]
   121e8:	mov	r0, r4
   121ec:	bl	130e4 <table_add_column@@Base>
   121f0:	mov	r0, #13
   121f4:	mov	r1, r6
   121f8:	mov	r2, #13
   121fc:	strh	r0, [sp, #6]
   12200:	mov	r0, r4
   12204:	bl	130e4 <table_add_column@@Base>
   12208:	mov	r0, #14
   1220c:	mov	r1, r6
   12210:	mov	r2, #14
   12214:	strh	r0, [sp, #6]
   12218:	mov	r0, r4
   1221c:	bl	130e4 <table_add_column@@Base>
   12220:	mov	r0, #15
   12224:	mov	r1, r6
   12228:	mov	r2, #15
   1222c:	strh	r0, [sp, #6]
   12230:	mov	r0, r4
   12234:	bl	130e4 <table_add_column@@Base>
   12238:	mov	r0, #16
   1223c:	mov	r1, r6
   12240:	mov	r2, #16
   12244:	strh	r0, [sp, #6]
   12248:	mov	r0, r4
   1224c:	bl	130e4 <table_add_column@@Base>
   12250:	mov	r0, #17
   12254:	mov	r1, r6
   12258:	mov	r2, #17
   1225c:	strh	r0, [sp, #6]
   12260:	mov	r0, r4
   12264:	bl	130e4 <table_add_column@@Base>
   12268:	mov	r0, #18
   1226c:	mov	r1, r6
   12270:	mov	r2, #18
   12274:	strh	r0, [sp, #6]
   12278:	mov	r0, r4
   1227c:	bl	130e4 <table_add_column@@Base>
   12280:	mov	r0, #19
   12284:	mov	r1, r6
   12288:	mov	r2, #19
   1228c:	strh	r0, [sp, #6]
   12290:	mov	r0, r4
   12294:	bl	130e4 <table_add_column@@Base>
   12298:	mov	r0, #20
   1229c:	mov	r1, r6
   122a0:	mov	r2, #20
   122a4:	strh	r0, [sp, #6]
   122a8:	mov	r0, r4
   122ac:	bl	130e4 <table_add_column@@Base>
   122b0:	mov	r0, #21
   122b4:	mov	r1, r6
   122b8:	mov	r2, #21
   122bc:	strh	r0, [sp, #6]
   122c0:	mov	r0, r4
   122c4:	bl	130e4 <table_add_column@@Base>
   122c8:	mov	r0, #22
   122cc:	mov	r1, r6
   122d0:	mov	r2, #22
   122d4:	strh	r0, [sp, #6]
   122d8:	mov	r0, r4
   122dc:	bl	130e4 <table_add_column@@Base>
   122e0:	mov	r0, #23
   122e4:	mov	r1, r6
   122e8:	mov	r2, #23
   122ec:	strh	r0, [sp, #6]
   122f0:	mov	r0, r4
   122f4:	bl	130e4 <table_add_column@@Base>
   122f8:	mov	r0, r4
   122fc:	bl	1304c <table_get_column_length@@Base>
   12300:	cmp	r0, #0
   12304:	ble	12398 <main@@Base+0x320>
   12308:	mov	r6, r0
   1230c:	mov	r0, #64	; 0x40
   12310:	bl	11f1c <malloc@plt>
   12314:	mov	r7, r0
   12318:	mov	r5, #0
   1231c:	bl	11f70 <rand@plt>
   12320:	asr	r1, r0, #31
   12324:	add	r1, r0, r1, lsr #25
   12328:	and	r1, r1, #128	; 0x80
   1232c:	sub	r0, r0, r1
   12330:	strb	r0, [r7, -r5]
   12334:	sub	r5, r5, #1
   12338:	cmn	r5, #63	; 0x3f
   1233c:	bne	1231c <main@@Base+0x2a4>
   12340:	mov	r5, #0
   12344:	mov	r0, r4
   12348:	strb	r5, [r7, #63]	; 0x3f
   1234c:	bl	13e2c <table_add_row@@Base>
   12350:	mov	r0, r4
   12354:	mov	r1, r5
   12358:	bl	130d0 <table_get_column_data_type@@Base>
   1235c:	str	r0, [sp]
   12360:	mov	r0, r4
   12364:	mov	r1, r8
   12368:	mov	r2, r5
   1236c:	mov	r3, r7
   12370:	bl	14040 <table_set@@Base>
   12374:	add	r5, r5, #1
   12378:	cmp	r6, r5
   1237c:	bne	12350 <main@@Base+0x2d8>
   12380:	mov	r0, r7
   12384:	bl	11eec <free@plt>
   12388:	add	r8, r8, #1
   1238c:	cmp	r8, #500	; 0x1f4
   12390:	bne	1230c <main@@Base+0x294>
   12394:	b	124a8 <main@@Base+0x430>
   12398:	mov	r5, #500	; 0x1f4
   1239c:	bl	11f70 <rand@plt>
   123a0:	bl	11f70 <rand@plt>
   123a4:	bl	11f70 <rand@plt>
   123a8:	bl	11f70 <rand@plt>
   123ac:	bl	11f70 <rand@plt>
   123b0:	bl	11f70 <rand@plt>
   123b4:	bl	11f70 <rand@plt>
   123b8:	bl	11f70 <rand@plt>
   123bc:	bl	11f70 <rand@plt>
   123c0:	bl	11f70 <rand@plt>
   123c4:	bl	11f70 <rand@plt>
   123c8:	bl	11f70 <rand@plt>
   123cc:	bl	11f70 <rand@plt>
   123d0:	bl	11f70 <rand@plt>
   123d4:	bl	11f70 <rand@plt>
   123d8:	bl	11f70 <rand@plt>
   123dc:	bl	11f70 <rand@plt>
   123e0:	bl	11f70 <rand@plt>
   123e4:	bl	11f70 <rand@plt>
   123e8:	bl	11f70 <rand@plt>
   123ec:	bl	11f70 <rand@plt>
   123f0:	bl	11f70 <rand@plt>
   123f4:	bl	11f70 <rand@plt>
   123f8:	bl	11f70 <rand@plt>
   123fc:	bl	11f70 <rand@plt>
   12400:	bl	11f70 <rand@plt>
   12404:	bl	11f70 <rand@plt>
   12408:	bl	11f70 <rand@plt>
   1240c:	bl	11f70 <rand@plt>
   12410:	bl	11f70 <rand@plt>
   12414:	bl	11f70 <rand@plt>
   12418:	bl	11f70 <rand@plt>
   1241c:	bl	11f70 <rand@plt>
   12420:	bl	11f70 <rand@plt>
   12424:	bl	11f70 <rand@plt>
   12428:	bl	11f70 <rand@plt>
   1242c:	bl	11f70 <rand@plt>
   12430:	bl	11f70 <rand@plt>
   12434:	bl	11f70 <rand@plt>
   12438:	bl	11f70 <rand@plt>
   1243c:	bl	11f70 <rand@plt>
   12440:	bl	11f70 <rand@plt>
   12444:	bl	11f70 <rand@plt>
   12448:	bl	11f70 <rand@plt>
   1244c:	bl	11f70 <rand@plt>
   12450:	bl	11f70 <rand@plt>
   12454:	bl	11f70 <rand@plt>
   12458:	bl	11f70 <rand@plt>
   1245c:	bl	11f70 <rand@plt>
   12460:	bl	11f70 <rand@plt>
   12464:	bl	11f70 <rand@plt>
   12468:	bl	11f70 <rand@plt>
   1246c:	bl	11f70 <rand@plt>
   12470:	bl	11f70 <rand@plt>
   12474:	bl	11f70 <rand@plt>
   12478:	bl	11f70 <rand@plt>
   1247c:	bl	11f70 <rand@plt>
   12480:	bl	11f70 <rand@plt>
   12484:	bl	11f70 <rand@plt>
   12488:	bl	11f70 <rand@plt>
   1248c:	bl	11f70 <rand@plt>
   12490:	bl	11f70 <rand@plt>
   12494:	bl	11f70 <rand@plt>
   12498:	mov	r0, r4
   1249c:	bl	13e2c <table_add_row@@Base>
   124a0:	subs	r5, r5, #1
   124a4:	bne	1239c <main@@Base+0x324>
   124a8:	mov	r0, r4
   124ac:	bl	12560 <table_delete@@Base>
   124b0:	mov	r0, #0
   124b4:	sub	sp, fp, #24
   124b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   124bc:	ldr	r0, [sp]
   124c0:	ldr	r1, [r0]
   124c4:	orr	r1, r1, r3
   124c8:	str	r1, [r0]
   124cc:	bx	lr

000124d0 <table_new@@Base>:
   124d0:	push	{fp, lr}
   124d4:	mov	fp, sp
   124d8:	mov	r0, #56	; 0x38
   124dc:	bl	11f1c <malloc@plt>
   124e0:	vmov.i32	q8, #0	; 0x00000000
   124e4:	mov	r1, #0
   124e8:	mov	r2, #10
   124ec:	mov	r3, #20
   124f0:	str	r1, [r0]
   124f4:	stmib	r0, {r1, r2}
   124f8:	str	r1, [r0, #12]
   124fc:	str	r1, [r0, #16]
   12500:	str	r1, [r0, #20]
   12504:	str	r3, [r0, #24]
   12508:	str	r1, [r0, #28]
   1250c:	str	r2, [r0, #48]	; 0x30
   12510:	str	r1, [r0, #52]	; 0x34
   12514:	add	r1, r0, #32
   12518:	vst1.32	{d16-d17}, [r1]
   1251c:	pop	{fp, pc}

00012520 <table_init@@Base>:
   12520:	vmov.i32	q8, #0	; 0x00000000
   12524:	mov	r1, #0
   12528:	mov	r2, #10
   1252c:	mov	r3, #20
   12530:	str	r1, [r0]
   12534:	stmib	r0, {r1, r2}
   12538:	str	r1, [r0, #12]
   1253c:	str	r1, [r0, #16]
   12540:	str	r1, [r0, #20]
   12544:	str	r3, [r0, #24]
   12548:	str	r1, [r0, #28]
   1254c:	str	r2, [r0, #48]	; 0x30
   12550:	str	r1, [r0, #52]	; 0x34
   12554:	add	r0, r0, #32
   12558:	vst1.32	{d16-d17}, [r0]
   1255c:	bx	lr

00012560 <table_delete@@Base>:
   12560:	push	{r4, sl, fp, lr}
   12564:	add	fp, sp, #8
   12568:	mov	r4, r0
   1256c:	bl	1257c <table_destroy@@Base>
   12570:	mov	r0, r4
   12574:	pop	{r4, sl, fp, lr}
   12578:	b	11eec <free@plt>

0001257c <table_destroy@@Base>:
   1257c:	cmp	r0, #0
   12580:	bxeq	lr
   12584:	push	{r4, r5, r6, sl, fp, lr}
   12588:	add	fp, sp, #16
   1258c:	mvn	r1, #0
   12590:	mvn	r2, #0
   12594:	mov	r3, #64	; 0x40
   12598:	mov	r4, r0
   1259c:	bl	12f3c <table_notify@@Base>
   125a0:	mov	r0, r4
   125a4:	bl	13e24 <table_get_row_length@@Base>
   125a8:	cmp	r0, #1
   125ac:	blt	125d0 <table_destroy@@Base+0x54>
   125b0:	mov	r5, r0
   125b4:	mov	r6, #0
   125b8:	mov	r0, r4
   125bc:	mov	r1, r6
   125c0:	bl	13dc8 <table_row_destroy@@Base>
   125c4:	add	r6, r6, #1
   125c8:	cmp	r5, r6
   125cc:	bne	125b8 <table_destroy@@Base+0x3c>
   125d0:	ldr	r0, [r4, #16]
   125d4:	cmp	r0, #0
   125d8:	beq	125e0 <table_destroy@@Base+0x64>
   125dc:	bl	11eec <free@plt>
   125e0:	mov	r0, r4
   125e4:	bl	1304c <table_get_column_length@@Base>
   125e8:	cmp	r0, #1
   125ec:	blt	12610 <table_destroy@@Base+0x94>
   125f0:	mov	r5, r0
   125f4:	mov	r6, #0
   125f8:	mov	r0, r4
   125fc:	mov	r1, r6
   12600:	bl	13034 <table_column_destroy@@Base>
   12604:	add	r6, r6, #1
   12608:	cmp	r5, r6
   1260c:	bne	125f8 <table_destroy@@Base+0x7c>
   12610:	ldr	r0, [r4]
   12614:	cmp	r0, #0
   12618:	beq	12620 <table_destroy@@Base+0xa4>
   1261c:	bl	11eec <free@plt>
   12620:	ldr	r0, [r4, #36]	; 0x24
   12624:	cmp	r0, #0
   12628:	beq	12630 <table_destroy@@Base+0xb4>
   1262c:	bl	11eec <free@plt>
   12630:	ldr	r0, [r4, #40]	; 0x28
   12634:	cmp	r0, #0
   12638:	beq	12640 <table_destroy@@Base+0xc4>
   1263c:	bl	11eec <free@plt>
   12640:	ldr	r0, [r4, #44]	; 0x2c
   12644:	cmp	r0, #0
   12648:	pop	{r4, r5, r6, sl, fp, lr}
   1264c:	beq	12654 <table_destroy@@Base+0xd8>
   12650:	b	11eec <free@plt>
   12654:	bx	lr

00012658 <table_dupe@@Base>:
   12658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1265c:	add	fp, sp, #28
   12660:	sub	sp, sp, #12
   12664:	mov	r4, r0
   12668:	bl	13e24 <table_get_row_length@@Base>
   1266c:	mov	r8, r0
   12670:	mov	r0, r4
   12674:	bl	1304c <table_get_column_length@@Base>
   12678:	mov	r6, r0
   1267c:	mov	r0, #56	; 0x38
   12680:	bl	11f1c <malloc@plt>
   12684:	vmov.i32	q8, #0	; 0x00000000
   12688:	mov	sl, r0
   1268c:	mov	r5, #0
   12690:	mov	r0, #10
   12694:	mov	r1, #20
   12698:	cmp	r6, #1
   1269c:	str	r5, [sl]
   126a0:	str	r5, [sl, #4]
   126a4:	str	r0, [sl, #8]
   126a8:	str	r5, [sl, #12]
   126ac:	str	r5, [sl, #16]
   126b0:	str	r5, [sl, #20]
   126b4:	str	r1, [sl, #24]
   126b8:	str	r5, [sl, #28]
   126bc:	str	r0, [sl, #48]	; 0x30
   126c0:	add	r0, sl, #32
   126c4:	str	r5, [sl, #52]	; 0x34
   126c8:	vst1.32	{d16-d17}, [r0]
   126cc:	blt	12708 <table_dupe@@Base+0xb0>
   126d0:	mov	r0, r4
   126d4:	mov	r1, r5
   126d8:	bl	130c0 <table_get_column_name@@Base>
   126dc:	mov	r7, r0
   126e0:	mov	r0, r4
   126e4:	mov	r1, r5
   126e8:	bl	130d0 <table_get_column_data_type@@Base>
   126ec:	mov	r2, r0
   126f0:	mov	r0, sl
   126f4:	mov	r1, r7
   126f8:	bl	130e4 <table_add_column@@Base>
   126fc:	add	r5, r5, #1
   12700:	cmp	r6, r5
   12704:	bne	126d0 <table_dupe@@Base+0x78>
   12708:	cmp	r8, #1
   1270c:	blt	12c9c <table_dupe@@Base+0x644>
   12710:	mov	r5, #0
   12714:	add	r9, sp, #8
   12718:	mov	r0, sl
   1271c:	bl	13e2c <table_add_row@@Base>
   12720:	cmp	r6, #1
   12724:	bge	12744 <table_dupe@@Base+0xec>
   12728:	add	r5, r5, #1
   1272c:	cmp	r5, r8
   12730:	beq	12c9c <table_dupe@@Base+0x644>
   12734:	mov	r0, sl
   12738:	bl	13e2c <table_add_row@@Base>
   1273c:	cmp	r6, #1
   12740:	blt	12728 <table_dupe@@Base+0xd0>
   12744:	mov	r7, #0
   12748:	b	12780 <table_dupe@@Base+0x128>
   1274c:	mov	r0, r4
   12750:	mov	r1, r5
   12754:	mov	r2, r7
   12758:	bl	13d84 <table_get_ptr@@Base>
   1275c:	str	r0, [sp, #8]
   12760:	mov	r0, sl
   12764:	mov	r1, r5
   12768:	mov	r2, r7
   1276c:	mov	r3, r9
   12770:	bl	14f1c <table_set_ptr@@Base>
   12774:	add	r7, r7, #1
   12778:	cmp	r6, r7
   1277c:	beq	12728 <table_dupe@@Base+0xd0>
   12780:	mov	r0, r4
   12784:	mov	r1, r7
   12788:	bl	130d0 <table_get_column_data_type@@Base>
   1278c:	cmp	r0, #23
   12790:	bhi	12774 <table_dupe@@Base+0x11c>
   12794:	add	r1, pc, #0
   12798:	ldr	pc, [r1, r0, lsl #2]
   1279c:	strdeq	r2, [r1], -ip
   127a0:	andeq	r2, r1, r0, lsr r8
   127a4:	andeq	r2, r1, r4, ror #16
   127a8:	muleq	r1, r8, r8
   127ac:	andeq	r2, r1, ip, asr #17
   127b0:	andeq	r2, r1, r0, lsl #18
   127b4:	andeq	r2, r1, r4, lsr r9
   127b8:	andeq	r2, r1, r8, ror #18
   127bc:	muleq	r1, ip, r9
   127c0:	ldrdeq	r2, [r1], -r0
   127c4:	andeq	r2, r1, r4, lsl #20
   127c8:	andeq	r2, r1, r8, lsr sl
   127cc:	andeq	r2, r1, ip, ror #20
   127d0:	andeq	r2, r1, r0, lsr #21
   127d4:	ldrdeq	r2, [r1], -r4
   127d8:	andeq	r2, r1, r8, lsl #22
   127dc:	andeq	r2, r1, ip, lsr fp
   127e0:	andeq	r2, r1, ip, ror #22
   127e4:	muleq	r1, ip, fp
   127e8:	andeq	r2, r1, ip, asr #23
   127ec:	andeq	r2, r1, r0, lsl #24
   127f0:	andeq	r2, r1, r4, lsr ip
   127f4:	andeq	r2, r1, r8, ror #24
   127f8:	andeq	r2, r1, ip, asr #14
   127fc:	mov	r0, r4
   12800:	mov	r1, r5
   12804:	mov	r2, r7
   12808:	bl	13b78 <table_get_int@@Base>
   1280c:	mov	r3, r0
   12810:	mov	r0, sl
   12814:	mov	r1, r5
   12818:	mov	r2, r7
   1281c:	bl	143d8 <table_set_int@@Base>
   12820:	add	r7, r7, #1
   12824:	cmp	r6, r7
   12828:	bne	12780 <table_dupe@@Base+0x128>
   1282c:	b	12728 <table_dupe@@Base+0xd0>
   12830:	mov	r0, r4
   12834:	mov	r1, r5
   12838:	mov	r2, r7
   1283c:	bl	13b90 <table_get_uint@@Base>
   12840:	mov	r3, r0
   12844:	mov	r0, sl
   12848:	mov	r1, r5
   1284c:	mov	r2, r7
   12850:	bl	14458 <table_set_uint@@Base>
   12854:	add	r7, r7, #1
   12858:	cmp	r6, r7
   1285c:	bne	12780 <table_dupe@@Base+0x128>
   12860:	b	12728 <table_dupe@@Base+0xd0>
   12864:	mov	r0, r4
   12868:	mov	r1, r5
   1286c:	mov	r2, r7
   12870:	bl	13ba8 <table_get_int8@@Base>
   12874:	mov	r3, r0
   12878:	mov	r0, sl
   1287c:	mov	r1, r5
   12880:	mov	r2, r7
   12884:	bl	144d8 <table_set_int8@@Base>
   12888:	add	r7, r7, #1
   1288c:	cmp	r6, r7
   12890:	bne	12780 <table_dupe@@Base+0x128>
   12894:	b	12728 <table_dupe@@Base+0xd0>
   12898:	mov	r0, r4
   1289c:	mov	r1, r5
   128a0:	mov	r2, r7
   128a4:	bl	13bc0 <table_get_uint8@@Base>
   128a8:	mov	r3, r0
   128ac:	mov	r0, sl
   128b0:	mov	r1, r5
   128b4:	mov	r2, r7
   128b8:	bl	14558 <table_set_uint8@@Base>
   128bc:	add	r7, r7, #1
   128c0:	cmp	r6, r7
   128c4:	bne	12780 <table_dupe@@Base+0x128>
   128c8:	b	12728 <table_dupe@@Base+0xd0>
   128cc:	mov	r0, r4
   128d0:	mov	r1, r5
   128d4:	mov	r2, r7
   128d8:	bl	13bd8 <table_get_int16@@Base>
   128dc:	mov	r3, r0
   128e0:	mov	r0, sl
   128e4:	mov	r1, r5
   128e8:	mov	r2, r7
   128ec:	bl	145d8 <table_set_int16@@Base>
   128f0:	add	r7, r7, #1
   128f4:	cmp	r6, r7
   128f8:	bne	12780 <table_dupe@@Base+0x128>
   128fc:	b	12728 <table_dupe@@Base+0xd0>
   12900:	mov	r0, r4
   12904:	mov	r1, r5
   12908:	mov	r2, r7
   1290c:	bl	13bf0 <table_get_uint16@@Base>
   12910:	mov	r3, r0
   12914:	mov	r0, sl
   12918:	mov	r1, r5
   1291c:	mov	r2, r7
   12920:	bl	14658 <table_set_uint16@@Base>
   12924:	add	r7, r7, #1
   12928:	cmp	r6, r7
   1292c:	bne	12780 <table_dupe@@Base+0x128>
   12930:	b	12728 <table_dupe@@Base+0xd0>
   12934:	mov	r0, r4
   12938:	mov	r1, r5
   1293c:	mov	r2, r7
   12940:	bl	13c08 <table_get_int32@@Base>
   12944:	mov	r3, r0
   12948:	mov	r0, sl
   1294c:	mov	r1, r5
   12950:	mov	r2, r7
   12954:	bl	146d8 <table_set_int32@@Base>
   12958:	add	r7, r7, #1
   1295c:	cmp	r6, r7
   12960:	bne	12780 <table_dupe@@Base+0x128>
   12964:	b	12728 <table_dupe@@Base+0xd0>
   12968:	mov	r0, r4
   1296c:	mov	r1, r5
   12970:	mov	r2, r7
   12974:	bl	13c20 <table_get_uint32@@Base>
   12978:	mov	r3, r0
   1297c:	mov	r0, sl
   12980:	mov	r1, r5
   12984:	mov	r2, r7
   12988:	bl	14758 <table_set_uint32@@Base>
   1298c:	add	r7, r7, #1
   12990:	cmp	r6, r7
   12994:	bne	12780 <table_dupe@@Base+0x128>
   12998:	b	12728 <table_dupe@@Base+0xd0>
   1299c:	mov	r0, r4
   129a0:	mov	r1, r5
   129a4:	mov	r2, r7
   129a8:	bl	13c38 <table_get_int64@@Base>
   129ac:	stm	sp, {r0, r1}
   129b0:	mov	r0, sl
   129b4:	mov	r1, r5
   129b8:	mov	r2, r7
   129bc:	bl	147d8 <table_set_int64@@Base>
   129c0:	add	r7, r7, #1
   129c4:	cmp	r6, r7
   129c8:	bne	12780 <table_dupe@@Base+0x128>
   129cc:	b	12728 <table_dupe@@Base+0xd0>
   129d0:	mov	r0, r4
   129d4:	mov	r1, r5
   129d8:	mov	r2, r7
   129dc:	bl	13c50 <table_get_uint64@@Base>
   129e0:	stm	sp, {r0, r1}
   129e4:	mov	r0, sl
   129e8:	mov	r1, r5
   129ec:	mov	r2, r7
   129f0:	bl	14860 <table_set_uint64@@Base>
   129f4:	add	r7, r7, #1
   129f8:	cmp	r6, r7
   129fc:	bne	12780 <table_dupe@@Base+0x128>
   12a00:	b	12728 <table_dupe@@Base+0xd0>
   12a04:	mov	r0, r4
   12a08:	mov	r1, r5
   12a0c:	mov	r2, r7
   12a10:	bl	13c68 <table_get_short@@Base>
   12a14:	mov	r3, r0
   12a18:	mov	r0, sl
   12a1c:	mov	r1, r5
   12a20:	mov	r2, r7
   12a24:	bl	148e8 <table_set_short@@Base>
   12a28:	add	r7, r7, #1
   12a2c:	cmp	r6, r7
   12a30:	bne	12780 <table_dupe@@Base+0x128>
   12a34:	b	12728 <table_dupe@@Base+0xd0>
   12a38:	mov	r0, r4
   12a3c:	mov	r1, r5
   12a40:	mov	r2, r7
   12a44:	bl	13c80 <table_get_ushort@@Base>
   12a48:	mov	r3, r0
   12a4c:	mov	r0, sl
   12a50:	mov	r1, r5
   12a54:	mov	r2, r7
   12a58:	bl	14968 <table_set_ushort@@Base>
   12a5c:	add	r7, r7, #1
   12a60:	cmp	r6, r7
   12a64:	bne	12780 <table_dupe@@Base+0x128>
   12a68:	b	12728 <table_dupe@@Base+0xd0>
   12a6c:	mov	r0, r4
   12a70:	mov	r1, r5
   12a74:	mov	r2, r7
   12a78:	bl	13c98 <table_get_long@@Base>
   12a7c:	mov	r3, r0
   12a80:	mov	r0, sl
   12a84:	mov	r1, r5
   12a88:	mov	r2, r7
   12a8c:	bl	149e8 <table_set_long@@Base>
   12a90:	add	r7, r7, #1
   12a94:	cmp	r6, r7
   12a98:	bne	12780 <table_dupe@@Base+0x128>
   12a9c:	b	12728 <table_dupe@@Base+0xd0>
   12aa0:	mov	r0, r4
   12aa4:	mov	r1, r5
   12aa8:	mov	r2, r7
   12aac:	bl	13cb0 <table_get_ulong@@Base>
   12ab0:	mov	r3, r0
   12ab4:	mov	r0, sl
   12ab8:	mov	r1, r5
   12abc:	mov	r2, r7
   12ac0:	bl	14a68 <table_set_ulong@@Base>
   12ac4:	add	r7, r7, #1
   12ac8:	cmp	r6, r7
   12acc:	bne	12780 <table_dupe@@Base+0x128>
   12ad0:	b	12728 <table_dupe@@Base+0xd0>
   12ad4:	mov	r0, r4
   12ad8:	mov	r1, r5
   12adc:	mov	r2, r7
   12ae0:	bl	13cc8 <table_get_llong@@Base>
   12ae4:	stm	sp, {r0, r1}
   12ae8:	mov	r0, sl
   12aec:	mov	r1, r5
   12af0:	mov	r2, r7
   12af4:	bl	14ae8 <table_set_llong@@Base>
   12af8:	add	r7, r7, #1
   12afc:	cmp	r6, r7
   12b00:	bne	12780 <table_dupe@@Base+0x128>
   12b04:	b	12728 <table_dupe@@Base+0xd0>
   12b08:	mov	r0, r4
   12b0c:	mov	r1, r5
   12b10:	mov	r2, r7
   12b14:	bl	13ce0 <table_get_ullong@@Base>
   12b18:	stm	sp, {r0, r1}
   12b1c:	mov	r0, sl
   12b20:	mov	r1, r5
   12b24:	mov	r2, r7
   12b28:	bl	14b70 <table_set_ullong@@Base>
   12b2c:	add	r7, r7, #1
   12b30:	cmp	r6, r7
   12b34:	bne	12780 <table_dupe@@Base+0x128>
   12b38:	b	12728 <table_dupe@@Base+0xd0>
   12b3c:	mov	r0, r4
   12b40:	mov	r1, r5
   12b44:	mov	r2, r7
   12b48:	bl	13cf8 <table_get_float@@Base>
   12b4c:	mov	r0, sl
   12b50:	mov	r1, r5
   12b54:	mov	r2, r7
   12b58:	bl	14bf8 <table_set_float@@Base>
   12b5c:	add	r7, r7, #1
   12b60:	cmp	r6, r7
   12b64:	bne	12780 <table_dupe@@Base+0x128>
   12b68:	b	12728 <table_dupe@@Base+0xd0>
   12b6c:	mov	r0, r4
   12b70:	mov	r1, r5
   12b74:	mov	r2, r7
   12b78:	bl	13d10 <table_get_double@@Base>
   12b7c:	mov	r0, sl
   12b80:	mov	r1, r5
   12b84:	mov	r2, r7
   12b88:	bl	14c84 <table_set_double@@Base>
   12b8c:	add	r7, r7, #1
   12b90:	cmp	r6, r7
   12b94:	bne	12780 <table_dupe@@Base+0x128>
   12b98:	b	12728 <table_dupe@@Base+0xd0>
   12b9c:	mov	r0, r4
   12ba0:	mov	r1, r5
   12ba4:	mov	r2, r7
   12ba8:	bl	13d28 <table_get_ldouble@@Base>
   12bac:	mov	r0, sl
   12bb0:	mov	r1, r5
   12bb4:	mov	r2, r7
   12bb8:	bl	14d0c <table_set_ldouble@@Base>
   12bbc:	add	r7, r7, #1
   12bc0:	cmp	r6, r7
   12bc4:	bne	12780 <table_dupe@@Base+0x128>
   12bc8:	b	12728 <table_dupe@@Base+0xd0>
   12bcc:	mov	r0, r4
   12bd0:	mov	r1, r5
   12bd4:	mov	r2, r7
   12bd8:	bl	13d40 <table_get_char@@Base>
   12bdc:	mov	r3, r0
   12be0:	mov	r0, sl
   12be4:	mov	r1, r5
   12be8:	mov	r2, r7
   12bec:	bl	14e1c <table_set_char@@Base>
   12bf0:	add	r7, r7, #1
   12bf4:	cmp	r6, r7
   12bf8:	bne	12780 <table_dupe@@Base+0x128>
   12bfc:	b	12728 <table_dupe@@Base+0xd0>
   12c00:	mov	r0, r4
   12c04:	mov	r1, r5
   12c08:	mov	r2, r7
   12c0c:	bl	13d58 <table_get_uchar@@Base>
   12c10:	mov	r3, r0
   12c14:	mov	r0, sl
   12c18:	mov	r1, r5
   12c1c:	mov	r2, r7
   12c20:	bl	14e9c <table_set_uchar@@Base>
   12c24:	add	r7, r7, #1
   12c28:	cmp	r6, r7
   12c2c:	bne	12780 <table_dupe@@Base+0x128>
   12c30:	b	12728 <table_dupe@@Base+0xd0>
   12c34:	mov	r0, r4
   12c38:	mov	r1, r5
   12c3c:	mov	r2, r7
   12c40:	bl	13d70 <table_get_string@@Base>
   12c44:	mov	r3, r0
   12c48:	mov	r0, sl
   12c4c:	mov	r1, r5
   12c50:	mov	r2, r7
   12c54:	bl	14d94 <table_set_string@@Base>
   12c58:	add	r7, r7, #1
   12c5c:	cmp	r6, r7
   12c60:	bne	12780 <table_dupe@@Base+0x128>
   12c64:	b	12728 <table_dupe@@Base+0xd0>
   12c68:	mov	r0, r4
   12c6c:	mov	r1, r5
   12c70:	mov	r2, r7
   12c74:	bl	13b60 <table_get_bool@@Base>
   12c78:	mov	r3, r0
   12c7c:	mov	r0, sl
   12c80:	mov	r1, r5
   12c84:	mov	r2, r7
   12c88:	bl	14358 <table_set_bool@@Base>
   12c8c:	add	r7, r7, #1
   12c90:	cmp	r6, r7
   12c94:	bne	12780 <table_dupe@@Base+0x128>
   12c98:	b	12728 <table_dupe@@Base+0xd0>
   12c9c:	mov	r0, sl
   12ca0:	sub	sp, fp, #28
   12ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012ca8 <table_get_major_version@@Base>:
   12ca8:	mov	r0, #0
   12cac:	bx	lr

00012cb0 <table_get_minor_version@@Base>:
   12cb0:	mov	r0, #0
   12cb4:	bx	lr

00012cb8 <table_get_patch_version@@Base>:
   12cb8:	mov	r0, #0
   12cbc:	bx	lr

00012cc0 <table_get_version@@Base>:
   12cc0:	movw	r0, #23268	; 0x5ae4
   12cc4:	movt	r0, #1
   12cc8:	bx	lr

00012ccc <table_get_callback_length@@Base>:
   12ccc:	ldr	r0, [r0, #32]
   12cd0:	bx	lr

00012cd4 <table_register_callback@@Base>:
   12cd4:	push	{r4, r5, r6, r7, fp, lr}
   12cd8:	add	fp, sp, #16
   12cdc:	mov	r5, r0
   12ce0:	ldr	r0, [r0, #32]
   12ce4:	mov	r4, r3
   12ce8:	mov	r6, r2
   12cec:	mov	r7, r1
   12cf0:	cmp	r0, #1
   12cf4:	blt	12d50 <table_register_callback@@Base+0x7c>
   12cf8:	ldr	r2, [r5, #36]	; 0x24
   12cfc:	mov	r1, #0
   12d00:	ldr	r3, [r2, r1, lsl #2]
   12d04:	cmp	r3, r7
   12d08:	beq	12d24 <table_register_callback@@Base+0x50>
   12d0c:	add	r1, r1, #1
   12d10:	cmp	r0, r1
   12d14:	beq	12d50 <table_register_callback@@Base+0x7c>
   12d18:	ldr	r3, [r2, r1, lsl #2]
   12d1c:	cmp	r3, r7
   12d20:	bne	12d0c <table_register_callback@@Base+0x38>
   12d24:	ldr	r3, [r5, #40]	; 0x28
   12d28:	ldr	r3, [r3, r1, lsl #2]
   12d2c:	cmp	r3, r6
   12d30:	bne	12d0c <table_register_callback@@Base+0x38>
   12d34:	cmp	r1, #0
   12d38:	beq	12d50 <table_register_callback@@Base+0x7c>
   12d3c:	ldr	r0, [r5, #44]	; 0x2c
   12d40:	ldr	r2, [r0, r1, lsl #2]
   12d44:	orr	r2, r2, r4
   12d48:	str	r2, [r0, r1, lsl #2]
   12d4c:	pop	{r4, r5, r6, r7, fp, pc}
   12d50:	ldr	r1, [r5, #48]	; 0x30
   12d54:	udiv	r2, r0, r1
   12d58:	mls	r2, r2, r1, r0
   12d5c:	cmp	r2, #0
   12d60:	bne	12dac <table_register_callback@@Base+0xd8>
   12d64:	ldr	r2, [r5, #52]	; 0x34
   12d68:	ldr	r0, [r5, #36]	; 0x24
   12d6c:	add	r1, r2, r1
   12d70:	str	r1, [r5, #52]	; 0x34
   12d74:	lsl	r1, r1, #2
   12d78:	bl	11f04 <realloc@plt>
   12d7c:	str	r0, [r5, #36]	; 0x24
   12d80:	ldr	r1, [r5, #52]	; 0x34
   12d84:	ldr	r0, [r5, #40]	; 0x28
   12d88:	lsl	r1, r1, #2
   12d8c:	bl	11f04 <realloc@plt>
   12d90:	str	r0, [r5, #40]	; 0x28
   12d94:	ldr	r1, [r5, #52]	; 0x34
   12d98:	ldr	r0, [r5, #44]	; 0x2c
   12d9c:	lsl	r1, r1, #2
   12da0:	bl	11f04 <realloc@plt>
   12da4:	str	r0, [r5, #44]	; 0x2c
   12da8:	ldr	r0, [r5, #32]
   12dac:	ldr	r1, [r5, #36]	; 0x24
   12db0:	str	r7, [r1, r0, lsl #2]
   12db4:	ldr	r1, [r5, #40]	; 0x28
   12db8:	str	r6, [r1, r0, lsl #2]
   12dbc:	ldr	r1, [r5, #44]	; 0x2c
   12dc0:	str	r4, [r1, r0, lsl #2]
   12dc4:	ldr	r0, [r5, #32]
   12dc8:	add	r0, r0, #1
   12dcc:	str	r0, [r5, #32]
   12dd0:	pop	{r4, r5, r6, r7, fp, pc}

00012dd4 <table_unregister_callback@@Base>:
   12dd4:	push	{r4, r5, r6, sl, fp, lr}
   12dd8:	add	fp, sp, #16
   12ddc:	ldr	r4, [r0, #32]
   12de0:	cmp	r4, #1
   12de4:	blt	12f38 <table_unregister_callback@@Base+0x164>
   12de8:	ldr	r3, [r0, #36]	; 0x24
   12dec:	mov	r6, r0
   12df0:	mov	r0, #0
   12df4:	ldr	r5, [r3, r0, lsl #2]
   12df8:	cmp	r5, r1
   12dfc:	beq	12e18 <table_unregister_callback@@Base+0x44>
   12e00:	add	r0, r0, #1
   12e04:	cmp	r0, r4
   12e08:	beq	12f38 <table_unregister_callback@@Base+0x164>
   12e0c:	ldr	r5, [r3, r0, lsl #2]
   12e10:	cmp	r5, r1
   12e14:	bne	12e00 <table_unregister_callback@@Base+0x2c>
   12e18:	ldr	r5, [r6, #40]	; 0x28
   12e1c:	ldr	r5, [r5, r0, lsl #2]
   12e20:	cmp	r5, r2
   12e24:	bne	12e00 <table_unregister_callback@@Base+0x2c>
   12e28:	sub	r1, r4, #1
   12e2c:	cmp	r0, r1
   12e30:	bge	12eb4 <table_unregister_callback@@Base+0xe0>
   12e34:	add	r2, r0, #1
   12e38:	ldr	r1, [r3, r2, lsl #2]
   12e3c:	str	r1, [r3, r0, lsl #2]
   12e40:	ldr	r1, [r6, #40]	; 0x28
   12e44:	ldr	r3, [r1, r2, lsl #2]
   12e48:	str	r3, [r1, r0, lsl #2]
   12e4c:	ldr	r1, [r6, #44]	; 0x2c
   12e50:	ldr	r3, [r1, r2, lsl #2]
   12e54:	str	r3, [r1, r0, lsl #2]
   12e58:	ldr	r1, [r6, #32]
   12e5c:	sub	r1, r1, #1
   12e60:	cmp	r2, r1
   12e64:	bge	12eb4 <table_unregister_callback@@Base+0xe0>
   12e68:	ldr	r1, [r6, #36]	; 0x24
   12e6c:	add	r1, r1, r0, lsl #2
   12e70:	ldr	r2, [r1, #8]
   12e74:	str	r2, [r1, #4]
   12e78:	ldr	r1, [r6, #40]	; 0x28
   12e7c:	add	r1, r1, r0, lsl #2
   12e80:	ldr	r2, [r1, #8]
   12e84:	str	r2, [r1, #4]
   12e88:	ldr	r1, [r6, #44]	; 0x2c
   12e8c:	add	r1, r1, r0, lsl #2
   12e90:	ldr	r2, [r1, #8]
   12e94:	str	r2, [r1, #4]
   12e98:	add	r2, r0, #1
   12e9c:	add	r0, r0, #2
   12ea0:	ldr	r1, [r6, #32]
   12ea4:	sub	r1, r1, #1
   12ea8:	cmp	r0, r1
   12eac:	mov	r0, r2
   12eb0:	blt	12e68 <table_unregister_callback@@Base+0x94>
   12eb4:	str	r1, [r6, #32]
   12eb8:	ldr	r2, [r6, #48]	; 0x30
   12ebc:	udiv	r0, r1, r2
   12ec0:	mls	r0, r0, r2, r1
   12ec4:	cmp	r0, #0
   12ec8:	popne	{r4, r5, r6, sl, fp, pc}
   12ecc:	ldr	r1, [r6, #52]	; 0x34
   12ed0:	ldr	r0, [r6, #36]	; 0x24
   12ed4:	subs	r1, r1, r2
   12ed8:	str	r1, [r6, #52]	; 0x34
   12edc:	beq	12f14 <table_unregister_callback@@Base+0x140>
   12ee0:	lsl	r1, r1, #2
   12ee4:	bl	11f04 <realloc@plt>
   12ee8:	str	r0, [r6, #36]	; 0x24
   12eec:	ldr	r1, [r6, #52]	; 0x34
   12ef0:	ldr	r0, [r6, #40]	; 0x28
   12ef4:	lsl	r1, r1, #2
   12ef8:	bl	11f04 <realloc@plt>
   12efc:	str	r0, [r6, #40]	; 0x28
   12f00:	ldr	r1, [r6, #52]	; 0x34
   12f04:	ldr	r0, [r6, #44]	; 0x2c
   12f08:	lsl	r1, r1, #2
   12f0c:	bl	11f04 <realloc@plt>
   12f10:	b	12f34 <table_unregister_callback@@Base+0x160>
   12f14:	bl	11eec <free@plt>
   12f18:	ldr	r0, [r6, #40]	; 0x28
   12f1c:	bl	11eec <free@plt>
   12f20:	ldr	r0, [r6, #44]	; 0x2c
   12f24:	bl	11eec <free@plt>
   12f28:	mov	r0, #0
   12f2c:	str	r0, [r6, #36]	; 0x24
   12f30:	str	r0, [r6, #40]	; 0x28
   12f34:	str	r0, [r6, #44]	; 0x2c
   12f38:	pop	{r4, r5, r6, sl, fp, pc}

00012f3c <table_notify@@Base>:
   12f3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12f40:	add	fp, sp, #24
   12f44:	sub	sp, sp, #8
   12f48:	mov	r7, r0
   12f4c:	ldr	r0, [r0, #32]
   12f50:	cmp	r0, #1
   12f54:	blt	12fcc <table_notify@@Base+0x90>
   12f58:	mov	r4, r3
   12f5c:	mov	r8, r2
   12f60:	mov	r9, r1
   12f64:	mov	r5, #0
   12f68:	ldr	r1, [r7, #44]	; 0x2c
   12f6c:	ldr	r1, [r1, r5, lsl #2]
   12f70:	tst	r1, r4
   12f74:	bne	12f94 <table_notify@@Base+0x58>
   12f78:	add	r5, r5, #1
   12f7c:	cmp	r5, r0
   12f80:	bge	12fcc <table_notify@@Base+0x90>
   12f84:	ldr	r1, [r7, #44]	; 0x2c
   12f88:	ldr	r1, [r1, r5, lsl #2]
   12f8c:	tst	r1, r4
   12f90:	beq	12f78 <table_notify@@Base+0x3c>
   12f94:	ldr	r0, [r7, #36]	; 0x24
   12f98:	ldr	r1, [r7, #40]	; 0x28
   12f9c:	mov	r2, r8
   12fa0:	mov	r3, r4
   12fa4:	ldr	r6, [r0, r5, lsl #2]
   12fa8:	ldr	r0, [r1, r5, lsl #2]
   12fac:	mov	r1, r9
   12fb0:	str	r0, [sp]
   12fb4:	mov	r0, r7
   12fb8:	blx	r6
   12fbc:	ldr	r0, [r7, #32]
   12fc0:	add	r5, r5, #1
   12fc4:	cmp	r5, r0
   12fc8:	blt	12f84 <table_notify@@Base+0x48>
   12fcc:	sub	sp, fp, #24
   12fd0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012fd4 <table_column_init@@Base>:
   12fd4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12fd8:	add	fp, sp, #24
   12fdc:	ldr	r7, [r0]
   12fe0:	mov	r0, r2
   12fe4:	mov	r4, r3
   12fe8:	mov	r5, r2
   12fec:	mov	r6, r1
   12ff0:	bl	11f40 <strlen@plt>
   12ff4:	add	r0, r0, #1
   12ff8:	bl	11f1c <malloc@plt>
   12ffc:	ldr	r8, [fp, #8]
   13000:	add	r6, r6, r6, lsl #1
   13004:	cmp	r0, #0
   13008:	str	r0, [r7, r6, lsl #2]
   1300c:	beq	13018 <table_column_init@@Base+0x44>
   13010:	mov	r1, r5
   13014:	bl	11f10 <strcpy@plt>
   13018:	add	r0, r7, r6, lsl #2
   1301c:	stmib	r0, {r4, r8}
   13020:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013024 <table_get_col_ptr@@Base>:
   13024:	ldr	r0, [r0]
   13028:	add	r1, r1, r1, lsl #1
   1302c:	add	r0, r0, r1, lsl #2
   13030:	bx	lr

00013034 <table_column_destroy@@Base>:
   13034:	ldr	r0, [r0]
   13038:	add	r1, r1, r1, lsl #1
   1303c:	ldr	r0, [r0, r1, lsl #2]
   13040:	cmp	r0, #0
   13044:	bxeq	lr
   13048:	b	11eec <free@plt>

0001304c <table_get_column_length@@Base>:
   1304c:	ldr	r0, [r0, #4]
   13050:	bx	lr

00013054 <table_get_column@@Base>:
   13054:	push	{r4, r5, r6, r7, fp, lr}
   13058:	add	fp, sp, #16
   1305c:	ldr	r6, [r0, #4]
   13060:	cmp	r6, #1
   13064:	blt	130ac <table_get_column@@Base+0x58>
   13068:	ldr	r7, [r0]
   1306c:	mov	r5, r1
   13070:	mov	r4, #0
   13074:	ldr	r0, [r7]
   13078:	mov	r1, r5
   1307c:	bl	11ee0 <strcmp@plt>
   13080:	cmp	r0, #0
   13084:	beq	1309c <table_get_column@@Base+0x48>
   13088:	add	r4, r4, #1
   1308c:	add	r7, r7, #12
   13090:	cmp	r6, r4
   13094:	bne	13074 <table_get_column@@Base+0x20>
   13098:	mov	r4, r6
   1309c:	cmp	r4, r6
   130a0:	mvneq	r4, #0
   130a4:	mov	r0, r4
   130a8:	pop	{r4, r5, r6, r7, fp, pc}
   130ac:	mov	r4, #0
   130b0:	cmp	r4, r6
   130b4:	mvneq	r4, #0
   130b8:	mov	r0, r4
   130bc:	pop	{r4, r5, r6, r7, fp, pc}

000130c0 <table_get_column_name@@Base>:
   130c0:	ldr	r0, [r0]
   130c4:	add	r1, r1, r1, lsl #1
   130c8:	ldr	r0, [r0, r1, lsl #2]
   130cc:	bx	lr

000130d0 <table_get_column_data_type@@Base>:
   130d0:	ldr	r0, [r0]
   130d4:	add	r1, r1, r1, lsl #1
   130d8:	add	r0, r0, r1, lsl #2
   130dc:	ldr	r0, [r0, #4]
   130e0:	bx	lr

000130e4 <table_add_column@@Base>:
   130e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130e8:	add	fp, sp, #28
   130ec:	sub	sp, sp, #4
   130f0:	mov	r4, r0
   130f4:	mov	r8, r1
   130f8:	ldr	r0, [r0, #4]
   130fc:	mov	r9, r2
   13100:	ldr	r1, [r4, #8]
   13104:	udiv	r2, r0, r1
   13108:	mls	r0, r2, r1, r0
   1310c:	cmp	r0, #0
   13110:	bne	1317c <table_add_column@@Base+0x98>
   13114:	ldr	r2, [r4, #12]
   13118:	ldr	r0, [r4]
   1311c:	add	r1, r2, r1
   13120:	str	r1, [r4, #12]
   13124:	add	r1, r1, r1, lsl #1
   13128:	lsl	r1, r1, #2
   1312c:	bl	11f04 <realloc@plt>
   13130:	str	r0, [r4]
   13134:	mov	r0, r4
   13138:	bl	13e24 <table_get_row_length@@Base>
   1313c:	cmp	r0, #1
   13140:	blt	1317c <table_add_column@@Base+0x98>
   13144:	mov	r6, r0
   13148:	mov	r5, #0
   1314c:	mov	r0, r4
   13150:	mov	r1, r5
   13154:	bl	13dbc <table_get_row_ptr@@Base>
   13158:	ldr	r1, [r4, #12]
   1315c:	mov	r7, r0
   13160:	ldr	r0, [r0]
   13164:	lsl	r1, r1, #2
   13168:	bl	11f04 <realloc@plt>
   1316c:	add	r5, r5, #1
   13170:	str	r0, [r7]
   13174:	cmp	r6, r5
   13178:	bne	1314c <table_add_column@@Base+0x68>
   1317c:	mov	r0, r4
   13180:	bl	13e24 <table_get_row_length@@Base>
   13184:	ldr	r6, [r4, #4]
   13188:	mov	r7, r0
   1318c:	mov	r0, r9
   13190:	bl	13b30 <table_get_default_compare_function_for_data_type@@Base>
   13194:	ldr	r5, [r4]
   13198:	mov	sl, r0
   1319c:	mov	r0, r8
   131a0:	bl	11f40 <strlen@plt>
   131a4:	add	r0, r0, #1
   131a8:	bl	11f1c <malloc@plt>
   131ac:	mov	r1, r8
   131b0:	add	r8, r6, r6, lsl #1
   131b4:	cmp	r0, #0
   131b8:	str	r0, [r5, r8, lsl #2]
   131bc:	beq	131c4 <table_add_column@@Base+0xe0>
   131c0:	bl	11f10 <strcpy@plt>
   131c4:	add	r0, r5, r8, lsl #2
   131c8:	cmp	r7, #1
   131cc:	stmib	r0, {r9, sl}
   131d0:	blt	131f4 <table_add_column@@Base+0x110>
   131d4:	mov	r5, #0
   131d8:	mov	r0, r4
   131dc:	mov	r1, r5
   131e0:	mov	r2, r6
   131e4:	bl	14f78 <table_cell_init@@Base>
   131e8:	add	r5, r5, #1
   131ec:	cmp	r7, r5
   131f0:	bne	131d8 <table_add_column@@Base+0xf4>
   131f4:	ldr	r2, [r4, #4]
   131f8:	mov	r0, r4
   131fc:	mvn	r1, #0
   13200:	mov	r3, #8
   13204:	bl	12f3c <table_notify@@Base>
   13208:	ldr	r0, [r4, #4]
   1320c:	add	r1, r0, #1
   13210:	str	r1, [r4, #4]
   13214:	sub	sp, fp, #28
   13218:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001321c <table_remove_column@@Base>:
   1321c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13220:	add	fp, sp, #28
   13224:	sub	sp, sp, #12
   13228:	mov	r5, r0
   1322c:	ldr	r0, [r0]
   13230:	add	r6, r1, r1, lsl #1
   13234:	mov	r4, r1
   13238:	ldr	r0, [r0, r6, lsl #2]
   1323c:	cmp	r0, #0
   13240:	beq	13248 <table_remove_column@@Base+0x2c>
   13244:	bl	11eec <free@plt>
   13248:	ldr	r7, [r5, #4]
   1324c:	sub	r0, r7, #1
   13250:	cmp	r0, r4
   13254:	str	r0, [sp, #8]
   13258:	ble	1328c <table_remove_column@@Base+0x70>
   1325c:	mvn	r0, r4
   13260:	lsl	r1, r6, #2
   13264:	add	r0, r0, r7
   13268:	ldr	r2, [r5]
   1326c:	subs	r0, r0, #1
   13270:	add	r2, r2, r1
   13274:	add	r1, r1, #12
   13278:	vldr	d16, [r2, #12]
   1327c:	ldr	r3, [r2, #20]
   13280:	str	r3, [r2, #8]
   13284:	vstr	d16, [r2]
   13288:	bne	13268 <table_remove_column@@Base+0x4c>
   1328c:	mov	r0, r5
   13290:	bl	13e24 <table_get_row_length@@Base>
   13294:	cmp	r0, #1
   13298:	blt	13384 <table_remove_column@@Base+0x168>
   1329c:	mov	sl, r0
   132a0:	ldr	r0, [sp, #8]
   132a4:	cmp	r0, r4
   132a8:	ble	13358 <table_remove_column@@Base+0x13c>
   132ac:	mvn	r0, r4
   132b0:	sub	r8, r7, #2
   132b4:	add	r0, r7, r0
   132b8:	mov	r7, #0
   132bc:	and	r9, r0, #1
   132c0:	add	r0, r4, #1
   132c4:	str	r0, [sp, #4]
   132c8:	b	132d8 <table_remove_column@@Base+0xbc>
   132cc:	add	r7, r7, #1
   132d0:	cmp	r7, sl
   132d4:	beq	13384 <table_remove_column@@Base+0x168>
   132d8:	mov	r0, r5
   132dc:	mov	r1, r7
   132e0:	mov	r2, r4
   132e4:	bl	14fb4 <table_cell_destroy@@Base>
   132e8:	mov	r0, r5
   132ec:	mov	r1, r7
   132f0:	bl	13dbc <table_get_row_ptr@@Base>
   132f4:	cmp	r9, #0
   132f8:	mov	r2, r4
   132fc:	beq	13314 <table_remove_column@@Base+0xf8>
   13300:	ldr	r1, [r0]
   13304:	add	r2, r1, r4, lsl #2
   13308:	ldr	r2, [r2, #4]
   1330c:	str	r2, [r1, r4, lsl #2]
   13310:	ldr	r2, [sp, #4]
   13314:	cmp	r8, r4
   13318:	beq	132cc <table_remove_column@@Base+0xb0>
   1331c:	ldr	r1, [sp, #8]
   13320:	sub	r1, r1, r2
   13324:	lsl	r2, r2, #2
   13328:	ldr	r3, [r0]
   1332c:	subs	r1, r1, #2
   13330:	add	r6, r3, r2
   13334:	ldr	r6, [r6, #4]
   13338:	str	r6, [r3, r2]
   1333c:	ldr	r3, [r0]
   13340:	add	r3, r3, r2
   13344:	add	r2, r2, #8
   13348:	ldr	r6, [r3, #8]
   1334c:	str	r6, [r3, #4]
   13350:	bne	13328 <table_remove_column@@Base+0x10c>
   13354:	b	132cc <table_remove_column@@Base+0xb0>
   13358:	mov	r7, #0
   1335c:	mov	r0, r5
   13360:	mov	r1, r7
   13364:	mov	r2, r4
   13368:	bl	14fb4 <table_cell_destroy@@Base>
   1336c:	mov	r0, r5
   13370:	mov	r1, r7
   13374:	bl	13dbc <table_get_row_ptr@@Base>
   13378:	add	r7, r7, #1
   1337c:	cmp	sl, r7
   13380:	bne	1335c <table_remove_column@@Base+0x140>
   13384:	ldmib	r5, {r0, r1}
   13388:	sub	r0, r0, #1
   1338c:	udiv	r2, r0, r1
   13390:	str	r0, [r5, #4]
   13394:	mls	r0, r2, r1, r0
   13398:	cmp	r0, #0
   1339c:	bne	13408 <table_remove_column@@Base+0x1ec>
   133a0:	ldr	r2, [r5, #12]
   133a4:	ldr	r0, [r5]
   133a8:	sub	r1, r2, r1
   133ac:	str	r1, [r5, #12]
   133b0:	add	r1, r1, r1, lsl #1
   133b4:	lsl	r1, r1, #2
   133b8:	bl	11f04 <realloc@plt>
   133bc:	str	r0, [r5]
   133c0:	mov	r0, r5
   133c4:	bl	13e24 <table_get_row_length@@Base>
   133c8:	cmp	r0, #1
   133cc:	blt	13408 <table_remove_column@@Base+0x1ec>
   133d0:	mov	r8, r0
   133d4:	mov	r7, #0
   133d8:	mov	r0, r5
   133dc:	mov	r1, r7
   133e0:	bl	13dbc <table_get_row_ptr@@Base>
   133e4:	ldr	r1, [r5, #12]
   133e8:	mov	r6, r0
   133ec:	ldr	r0, [r0]
   133f0:	lsl	r1, r1, #2
   133f4:	bl	11f04 <realloc@plt>
   133f8:	add	r7, r7, #1
   133fc:	str	r0, [r6]
   13400:	cmp	r8, r7
   13404:	bne	133d8 <table_remove_column@@Base+0x1bc>
   13408:	mov	r0, r5
   1340c:	mvn	r1, #0
   13410:	mov	r2, r4
   13414:	mov	r3, #16
   13418:	bl	12f3c <table_notify@@Base>
   1341c:	mov	r0, #0
   13420:	sub	sp, fp, #28
   13424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013428 <table_get_column_compare_function@@Base>:
   13428:	ldr	r0, [r0]
   1342c:	add	r1, r1, r1, lsl #1
   13430:	add	r0, r0, r1, lsl #2
   13434:	ldr	r0, [r0, #8]
   13438:	bx	lr

0001343c <table_set_column_compare_function@@Base>:
   1343c:	ldr	r0, [r0]
   13440:	add	r1, r1, r1, lsl #1
   13444:	add	r0, r0, r1, lsl #2
   13448:	str	r2, [r0, #8]
   1344c:	bx	lr

00013450 <table_compare_bool@@Base>:
   13450:	cmp	r0, #0
   13454:	beq	13488 <table_compare_bool@@Base+0x38>
   13458:	cmp	r1, #0
   1345c:	moveq	r1, #1
   13460:	moveq	r0, r1
   13464:	bxeq	lr
   13468:	ldrb	r2, [r1]
   1346c:	ldrb	r0, [r0]
   13470:	mov	r1, #0
   13474:	cmp	r0, r2
   13478:	mvncc	r1, #0
   1347c:	movwhi	r1, #1
   13480:	mov	r0, r1
   13484:	bx	lr
   13488:	cmp	r1, #0
   1348c:	mvnne	r1, #0
   13490:	mov	r0, r1
   13494:	bx	lr

00013498 <table_compare_int@@Base>:
   13498:	cmp	r0, #0
   1349c:	beq	134d0 <table_compare_int@@Base+0x38>
   134a0:	cmp	r1, #0
   134a4:	moveq	r1, #1
   134a8:	moveq	r0, r1
   134ac:	bxeq	lr
   134b0:	ldr	r2, [r1]
   134b4:	ldr	r0, [r0]
   134b8:	mov	r1, #0
   134bc:	cmp	r0, r2
   134c0:	mvnlt	r1, #0
   134c4:	movwgt	r1, #1
   134c8:	mov	r0, r1
   134cc:	bx	lr
   134d0:	cmp	r1, #0
   134d4:	mvnne	r1, #0
   134d8:	mov	r0, r1
   134dc:	bx	lr

000134e0 <table_compare_uint@@Base>:
   134e0:	cmp	r0, #0
   134e4:	beq	13518 <table_compare_uint@@Base+0x38>
   134e8:	cmp	r1, #0
   134ec:	moveq	r1, #1
   134f0:	moveq	r0, r1
   134f4:	bxeq	lr
   134f8:	ldr	r2, [r1]
   134fc:	ldr	r0, [r0]
   13500:	mov	r1, #0
   13504:	cmp	r0, r2
   13508:	mvncc	r1, #0
   1350c:	movwhi	r1, #1
   13510:	mov	r0, r1
   13514:	bx	lr
   13518:	cmp	r1, #0
   1351c:	mvnne	r1, #0
   13520:	mov	r0, r1
   13524:	bx	lr

00013528 <table_compare_int8@@Base>:
   13528:	cmp	r0, #0
   1352c:	beq	13560 <table_compare_int8@@Base+0x38>
   13530:	cmp	r1, #0
   13534:	moveq	r1, #1
   13538:	moveq	r0, r1
   1353c:	bxeq	lr
   13540:	ldrsb	r2, [r1]
   13544:	ldrsb	r0, [r0]
   13548:	mov	r1, #0
   1354c:	cmp	r0, r2
   13550:	mvnlt	r1, #0
   13554:	movwgt	r1, #1
   13558:	mov	r0, r1
   1355c:	bx	lr
   13560:	cmp	r1, #0
   13564:	mvnne	r1, #0
   13568:	mov	r0, r1
   1356c:	bx	lr

00013570 <table_compare_uint8@@Base>:
   13570:	cmp	r0, #0
   13574:	beq	135a8 <table_compare_uint8@@Base+0x38>
   13578:	cmp	r1, #0
   1357c:	moveq	r1, #1
   13580:	moveq	r0, r1
   13584:	bxeq	lr
   13588:	ldrb	r2, [r1]
   1358c:	ldrb	r0, [r0]
   13590:	mov	r1, #0
   13594:	cmp	r0, r2
   13598:	mvncc	r1, #0
   1359c:	movwhi	r1, #1
   135a0:	mov	r0, r1
   135a4:	bx	lr
   135a8:	cmp	r1, #0
   135ac:	mvnne	r1, #0
   135b0:	mov	r0, r1
   135b4:	bx	lr

000135b8 <table_compare_int16@@Base>:
   135b8:	cmp	r0, #0
   135bc:	beq	135f0 <table_compare_int16@@Base+0x38>
   135c0:	cmp	r1, #0
   135c4:	moveq	r1, #1
   135c8:	moveq	r0, r1
   135cc:	bxeq	lr
   135d0:	ldrsh	r2, [r1]
   135d4:	ldrsh	r0, [r0]
   135d8:	mov	r1, #0
   135dc:	cmp	r0, r2
   135e0:	mvnlt	r1, #0
   135e4:	movwgt	r1, #1
   135e8:	mov	r0, r1
   135ec:	bx	lr
   135f0:	cmp	r1, #0
   135f4:	mvnne	r1, #0
   135f8:	mov	r0, r1
   135fc:	bx	lr

00013600 <table_compare_uint16@@Base>:
   13600:	cmp	r0, #0
   13604:	beq	13638 <table_compare_uint16@@Base+0x38>
   13608:	cmp	r1, #0
   1360c:	moveq	r1, #1
   13610:	moveq	r0, r1
   13614:	bxeq	lr
   13618:	ldrh	r2, [r1]
   1361c:	ldrh	r0, [r0]
   13620:	mov	r1, #0
   13624:	cmp	r0, r2
   13628:	mvncc	r1, #0
   1362c:	movwhi	r1, #1
   13630:	mov	r0, r1
   13634:	bx	lr
   13638:	cmp	r1, #0
   1363c:	mvnne	r1, #0
   13640:	mov	r0, r1
   13644:	bx	lr

00013648 <table_compare_int32@@Base>:
   13648:	cmp	r0, #0
   1364c:	beq	13680 <table_compare_int32@@Base+0x38>
   13650:	cmp	r1, #0
   13654:	moveq	r1, #1
   13658:	moveq	r0, r1
   1365c:	bxeq	lr
   13660:	ldr	r2, [r1]
   13664:	ldr	r0, [r0]
   13668:	mov	r1, #0
   1366c:	cmp	r0, r2
   13670:	mvnlt	r1, #0
   13674:	movwgt	r1, #1
   13678:	mov	r0, r1
   1367c:	bx	lr
   13680:	cmp	r1, #0
   13684:	mvnne	r1, #0
   13688:	mov	r0, r1
   1368c:	bx	lr

00013690 <table_compare_uint32@@Base>:
   13690:	cmp	r0, #0
   13694:	beq	136c8 <table_compare_uint32@@Base+0x38>
   13698:	cmp	r1, #0
   1369c:	moveq	r1, #1
   136a0:	moveq	r0, r1
   136a4:	bxeq	lr
   136a8:	ldr	r2, [r1]
   136ac:	ldr	r0, [r0]
   136b0:	mov	r1, #0
   136b4:	cmp	r0, r2
   136b8:	mvncc	r1, #0
   136bc:	movwhi	r1, #1
   136c0:	mov	r0, r1
   136c4:	bx	lr
   136c8:	cmp	r1, #0
   136cc:	mvnne	r1, #0
   136d0:	mov	r0, r1
   136d4:	bx	lr

000136d8 <table_compare_int64@@Base>:
   136d8:	cmp	r0, #0
   136dc:	beq	13730 <table_compare_int64@@Base+0x58>
   136e0:	cmp	r1, #0
   136e4:	moveq	r1, #1
   136e8:	moveq	r0, r1
   136ec:	bxeq	lr
   136f0:	push	{r5, r7, fp, lr}
   136f4:	add	fp, sp, #8
   136f8:	ldm	r0, {r0, r5}
   136fc:	ldm	r1, {r2, r7}
   13700:	mov	r1, #0
   13704:	subs	r3, r0, r2
   13708:	sbcs	r3, r5, r7
   1370c:	movwlt	r1, #1
   13710:	cmp	r1, #0
   13714:	mvnne	r1, #0
   13718:	subs	r0, r2, r0
   1371c:	sbcs	r0, r7, r5
   13720:	movwlt	r1, #1
   13724:	pop	{r5, r7, fp, lr}
   13728:	mov	r0, r1
   1372c:	bx	lr
   13730:	cmp	r1, #0
   13734:	mvnne	r1, #0
   13738:	mov	r0, r1
   1373c:	bx	lr

00013740 <table_compare_uint64@@Base>:
   13740:	cmp	r0, #0
   13744:	beq	13798 <table_compare_uint64@@Base+0x58>
   13748:	cmp	r1, #0
   1374c:	moveq	r1, #1
   13750:	moveq	r0, r1
   13754:	bxeq	lr
   13758:	push	{r5, r7, fp, lr}
   1375c:	add	fp, sp, #8
   13760:	ldm	r0, {r0, r5}
   13764:	ldm	r1, {r2, r7}
   13768:	mov	r1, #0
   1376c:	subs	r3, r0, r2
   13770:	sbcs	r3, r5, r7
   13774:	movwcc	r1, #1
   13778:	cmp	r1, #0
   1377c:	mvnne	r1, #0
   13780:	subs	r0, r2, r0
   13784:	sbcs	r0, r7, r5
   13788:	movwcc	r1, #1
   1378c:	pop	{r5, r7, fp, lr}
   13790:	mov	r0, r1
   13794:	bx	lr
   13798:	cmp	r1, #0
   1379c:	mvnne	r1, #0
   137a0:	mov	r0, r1
   137a4:	bx	lr

000137a8 <table_compare_short@@Base>:
   137a8:	cmp	r0, #0
   137ac:	beq	137e0 <table_compare_short@@Base+0x38>
   137b0:	cmp	r1, #0
   137b4:	moveq	r1, #1
   137b8:	moveq	r0, r1
   137bc:	bxeq	lr
   137c0:	ldrsh	r2, [r1]
   137c4:	ldrsh	r0, [r0]
   137c8:	mov	r1, #0
   137cc:	cmp	r0, r2
   137d0:	mvnlt	r1, #0
   137d4:	movwgt	r1, #1
   137d8:	mov	r0, r1
   137dc:	bx	lr
   137e0:	cmp	r1, #0
   137e4:	mvnne	r1, #0
   137e8:	mov	r0, r1
   137ec:	bx	lr

000137f0 <table_compare_ushort@@Base>:
   137f0:	cmp	r0, #0
   137f4:	beq	13828 <table_compare_ushort@@Base+0x38>
   137f8:	cmp	r1, #0
   137fc:	moveq	r1, #1
   13800:	moveq	r0, r1
   13804:	bxeq	lr
   13808:	ldrh	r2, [r1]
   1380c:	ldrh	r0, [r0]
   13810:	mov	r1, #0
   13814:	cmp	r0, r2
   13818:	mvncc	r1, #0
   1381c:	movwhi	r1, #1
   13820:	mov	r0, r1
   13824:	bx	lr
   13828:	cmp	r1, #0
   1382c:	mvnne	r1, #0
   13830:	mov	r0, r1
   13834:	bx	lr

00013838 <table_compare_long@@Base>:
   13838:	cmp	r0, #0
   1383c:	beq	13870 <table_compare_long@@Base+0x38>
   13840:	cmp	r1, #0
   13844:	moveq	r1, #1
   13848:	moveq	r0, r1
   1384c:	bxeq	lr
   13850:	ldr	r2, [r1]
   13854:	ldr	r0, [r0]
   13858:	mov	r1, #0
   1385c:	cmp	r0, r2
   13860:	mvnlt	r1, #0
   13864:	movwgt	r1, #1
   13868:	mov	r0, r1
   1386c:	bx	lr
   13870:	cmp	r1, #0
   13874:	mvnne	r1, #0
   13878:	mov	r0, r1
   1387c:	bx	lr

00013880 <table_compare_ulong@@Base>:
   13880:	cmp	r0, #0
   13884:	beq	138b8 <table_compare_ulong@@Base+0x38>
   13888:	cmp	r1, #0
   1388c:	moveq	r1, #1
   13890:	moveq	r0, r1
   13894:	bxeq	lr
   13898:	ldr	r2, [r1]
   1389c:	ldr	r0, [r0]
   138a0:	mov	r1, #0
   138a4:	cmp	r0, r2
   138a8:	mvncc	r1, #0
   138ac:	movwhi	r1, #1
   138b0:	mov	r0, r1
   138b4:	bx	lr
   138b8:	cmp	r1, #0
   138bc:	mvnne	r1, #0
   138c0:	mov	r0, r1
   138c4:	bx	lr

000138c8 <table_compare_llong@@Base>:
   138c8:	cmp	r0, #0
   138cc:	beq	13920 <table_compare_llong@@Base+0x58>
   138d0:	cmp	r1, #0
   138d4:	moveq	r1, #1
   138d8:	moveq	r0, r1
   138dc:	bxeq	lr
   138e0:	push	{r5, r7, fp, lr}
   138e4:	add	fp, sp, #8
   138e8:	ldm	r0, {r0, r5}
   138ec:	ldm	r1, {r2, r7}
   138f0:	mov	r1, #0
   138f4:	subs	r3, r0, r2
   138f8:	sbcs	r3, r5, r7
   138fc:	movwlt	r1, #1
   13900:	cmp	r1, #0
   13904:	mvnne	r1, #0
   13908:	subs	r0, r2, r0
   1390c:	sbcs	r0, r7, r5
   13910:	movwlt	r1, #1
   13914:	pop	{r5, r7, fp, lr}
   13918:	mov	r0, r1
   1391c:	bx	lr
   13920:	cmp	r1, #0
   13924:	mvnne	r1, #0
   13928:	mov	r0, r1
   1392c:	bx	lr

00013930 <table_compare_ullong@@Base>:
   13930:	cmp	r0, #0
   13934:	beq	13968 <table_compare_ullong@@Base+0x38>
   13938:	cmp	r1, #0
   1393c:	moveq	r1, #1
   13940:	moveq	r0, r1
   13944:	bxeq	lr
   13948:	ldr	r2, [r1]
   1394c:	ldr	r0, [r0]
   13950:	mov	r1, #0
   13954:	cmp	r0, r2
   13958:	mvncc	r1, #0
   1395c:	movwhi	r1, #1
   13960:	mov	r0, r1
   13964:	bx	lr
   13968:	cmp	r1, #0
   1396c:	mvnne	r1, #0
   13970:	mov	r0, r1
   13974:	bx	lr

00013978 <table_compare_float@@Base>:
   13978:	cmp	r0, #0
   1397c:	beq	139b4 <table_compare_float@@Base+0x3c>
   13980:	cmp	r1, #0
   13984:	moveq	r1, #1
   13988:	moveq	r0, r1
   1398c:	bxeq	lr
   13990:	vldr	s0, [r1]
   13994:	vldr	s2, [r0]
   13998:	mov	r1, #0
   1399c:	vcmpe.f32	s2, s0
   139a0:	vmrs	APSR_nzcv, fpscr
   139a4:	mvnmi	r1, #0
   139a8:	movwgt	r1, #1
   139ac:	mov	r0, r1
   139b0:	bx	lr
   139b4:	cmp	r1, #0
   139b8:	mvnne	r1, #0
   139bc:	mov	r0, r1
   139c0:	bx	lr

000139c4 <table_compare_double@@Base>:
   139c4:	cmp	r0, #0
   139c8:	beq	13a00 <table_compare_double@@Base+0x3c>
   139cc:	cmp	r1, #0
   139d0:	moveq	r1, #1
   139d4:	moveq	r0, r1
   139d8:	bxeq	lr
   139dc:	vldr	d16, [r1]
   139e0:	vldr	d17, [r0]
   139e4:	mov	r1, #0
   139e8:	vcmpe.f64	d17, d16
   139ec:	vmrs	APSR_nzcv, fpscr
   139f0:	mvnmi	r1, #0
   139f4:	movwgt	r1, #1
   139f8:	mov	r0, r1
   139fc:	bx	lr
   13a00:	cmp	r1, #0
   13a04:	mvnne	r1, #0
   13a08:	mov	r0, r1
   13a0c:	bx	lr

00013a10 <table_compare_ldouble@@Base>:
   13a10:	cmp	r0, #0
   13a14:	beq	13a4c <table_compare_ldouble@@Base+0x3c>
   13a18:	cmp	r1, #0
   13a1c:	moveq	r1, #1
   13a20:	moveq	r0, r1
   13a24:	bxeq	lr
   13a28:	vldr	d16, [r1]
   13a2c:	vldr	d17, [r0]
   13a30:	mov	r1, #0
   13a34:	vcmpe.f64	d17, d16
   13a38:	vmrs	APSR_nzcv, fpscr
   13a3c:	mvnmi	r1, #0
   13a40:	movwgt	r1, #1
   13a44:	mov	r0, r1
   13a48:	bx	lr
   13a4c:	cmp	r1, #0
   13a50:	mvnne	r1, #0
   13a54:	mov	r0, r1
   13a58:	bx	lr

00013a5c <table_compare_char@@Base>:
   13a5c:	cmp	r0, #0
   13a60:	beq	13a94 <table_compare_char@@Base+0x38>
   13a64:	cmp	r1, #0
   13a68:	moveq	r1, #1
   13a6c:	moveq	r0, r1
   13a70:	bxeq	lr
   13a74:	ldrb	r2, [r1]
   13a78:	ldrb	r0, [r0]
   13a7c:	mov	r1, #0
   13a80:	cmp	r0, r2
   13a84:	mvncc	r1, #0
   13a88:	movwhi	r1, #1
   13a8c:	mov	r0, r1
   13a90:	bx	lr
   13a94:	cmp	r1, #0
   13a98:	mvnne	r1, #0
   13a9c:	mov	r0, r1
   13aa0:	bx	lr

00013aa4 <table_compare_uchar@@Base>:
   13aa4:	cmp	r0, #0
   13aa8:	beq	13adc <table_compare_uchar@@Base+0x38>
   13aac:	cmp	r1, #0
   13ab0:	moveq	r1, #1
   13ab4:	moveq	r0, r1
   13ab8:	bxeq	lr
   13abc:	ldrb	r2, [r1]
   13ac0:	ldrb	r0, [r0]
   13ac4:	mov	r1, #0
   13ac8:	cmp	r0, r2
   13acc:	mvncc	r1, #0
   13ad0:	movwhi	r1, #1
   13ad4:	mov	r0, r1
   13ad8:	bx	lr
   13adc:	cmp	r1, #0
   13ae0:	mvnne	r1, #0
   13ae4:	mov	r0, r1
   13ae8:	bx	lr

00013aec <table_compare_string@@Base>:
   13aec:	cmp	r0, #0
   13af0:	beq	13b08 <table_compare_string@@Base+0x1c>
   13af4:	cmp	r1, #0
   13af8:	moveq	r1, #1
   13afc:	moveq	r0, r1
   13b00:	bxeq	lr
   13b04:	b	11ee0 <strcmp@plt>
   13b08:	cmp	r1, #0
   13b0c:	mvnne	r1, #0
   13b10:	mov	r0, r1
   13b14:	bx	lr

00013b18 <table_compare_ptr@@Base>:
   13b18:	cmp	r0, r1
   13b1c:	mov	r2, #0
   13b20:	mvncc	r2, #0
   13b24:	movwhi	r2, #1
   13b28:	mov	r0, r2
   13b2c:	bx	lr

00013b30 <table_get_default_compare_function_for_data_type@@Base>:
   13b30:	cmp	r0, #23
   13b34:	movhi	r0, #0
   13b38:	bxhi	lr
   13b3c:	movw	r1, #23124	; 0x5a54
   13b40:	movt	r1, #1
   13b44:	ldr	r0, [r1, r0, lsl #2]
   13b48:	bx	lr

00013b4c <table_get@@Base>:
   13b4c:	push	{fp, lr}
   13b50:	mov	fp, sp
   13b54:	bl	14f98 <table_get_cell_ptr@@Base>
   13b58:	ldr	r0, [r0]
   13b5c:	pop	{fp, pc}

00013b60 <table_get_bool@@Base>:
   13b60:	push	{fp, lr}
   13b64:	mov	fp, sp
   13b68:	bl	14f98 <table_get_cell_ptr@@Base>
   13b6c:	ldr	r0, [r0]
   13b70:	ldrb	r0, [r0]
   13b74:	pop	{fp, pc}

00013b78 <table_get_int@@Base>:
   13b78:	push	{fp, lr}
   13b7c:	mov	fp, sp
   13b80:	bl	14f98 <table_get_cell_ptr@@Base>
   13b84:	ldr	r0, [r0]
   13b88:	ldr	r0, [r0]
   13b8c:	pop	{fp, pc}

00013b90 <table_get_uint@@Base>:
   13b90:	push	{fp, lr}
   13b94:	mov	fp, sp
   13b98:	bl	14f98 <table_get_cell_ptr@@Base>
   13b9c:	ldr	r0, [r0]
   13ba0:	ldr	r0, [r0]
   13ba4:	pop	{fp, pc}

00013ba8 <table_get_int8@@Base>:
   13ba8:	push	{fp, lr}
   13bac:	mov	fp, sp
   13bb0:	bl	14f98 <table_get_cell_ptr@@Base>
   13bb4:	ldr	r0, [r0]
   13bb8:	ldrsb	r0, [r0]
   13bbc:	pop	{fp, pc}

00013bc0 <table_get_uint8@@Base>:
   13bc0:	push	{fp, lr}
   13bc4:	mov	fp, sp
   13bc8:	bl	14f98 <table_get_cell_ptr@@Base>
   13bcc:	ldr	r0, [r0]
   13bd0:	ldrb	r0, [r0]
   13bd4:	pop	{fp, pc}

00013bd8 <table_get_int16@@Base>:
   13bd8:	push	{fp, lr}
   13bdc:	mov	fp, sp
   13be0:	bl	14f98 <table_get_cell_ptr@@Base>
   13be4:	ldr	r0, [r0]
   13be8:	ldrsh	r0, [r0]
   13bec:	pop	{fp, pc}

00013bf0 <table_get_uint16@@Base>:
   13bf0:	push	{fp, lr}
   13bf4:	mov	fp, sp
   13bf8:	bl	14f98 <table_get_cell_ptr@@Base>
   13bfc:	ldr	r0, [r0]
   13c00:	ldrh	r0, [r0]
   13c04:	pop	{fp, pc}

00013c08 <table_get_int32@@Base>:
   13c08:	push	{fp, lr}
   13c0c:	mov	fp, sp
   13c10:	bl	14f98 <table_get_cell_ptr@@Base>
   13c14:	ldr	r0, [r0]
   13c18:	ldr	r0, [r0]
   13c1c:	pop	{fp, pc}

00013c20 <table_get_uint32@@Base>:
   13c20:	push	{fp, lr}
   13c24:	mov	fp, sp
   13c28:	bl	14f98 <table_get_cell_ptr@@Base>
   13c2c:	ldr	r0, [r0]
   13c30:	ldr	r0, [r0]
   13c34:	pop	{fp, pc}

00013c38 <table_get_int64@@Base>:
   13c38:	push	{fp, lr}
   13c3c:	mov	fp, sp
   13c40:	bl	14f98 <table_get_cell_ptr@@Base>
   13c44:	ldr	r0, [r0]
   13c48:	ldrd	r0, [r0]
   13c4c:	pop	{fp, pc}

00013c50 <table_get_uint64@@Base>:
   13c50:	push	{fp, lr}
   13c54:	mov	fp, sp
   13c58:	bl	14f98 <table_get_cell_ptr@@Base>
   13c5c:	ldr	r0, [r0]
   13c60:	ldrd	r0, [r0]
   13c64:	pop	{fp, pc}

00013c68 <table_get_short@@Base>:
   13c68:	push	{fp, lr}
   13c6c:	mov	fp, sp
   13c70:	bl	14f98 <table_get_cell_ptr@@Base>
   13c74:	ldr	r0, [r0]
   13c78:	ldrsh	r0, [r0]
   13c7c:	pop	{fp, pc}

00013c80 <table_get_ushort@@Base>:
   13c80:	push	{fp, lr}
   13c84:	mov	fp, sp
   13c88:	bl	14f98 <table_get_cell_ptr@@Base>
   13c8c:	ldr	r0, [r0]
   13c90:	ldrh	r0, [r0]
   13c94:	pop	{fp, pc}

00013c98 <table_get_long@@Base>:
   13c98:	push	{fp, lr}
   13c9c:	mov	fp, sp
   13ca0:	bl	14f98 <table_get_cell_ptr@@Base>
   13ca4:	ldr	r0, [r0]
   13ca8:	ldr	r0, [r0]
   13cac:	pop	{fp, pc}

00013cb0 <table_get_ulong@@Base>:
   13cb0:	push	{fp, lr}
   13cb4:	mov	fp, sp
   13cb8:	bl	14f98 <table_get_cell_ptr@@Base>
   13cbc:	ldr	r0, [r0]
   13cc0:	ldr	r0, [r0]
   13cc4:	pop	{fp, pc}

00013cc8 <table_get_llong@@Base>:
   13cc8:	push	{fp, lr}
   13ccc:	mov	fp, sp
   13cd0:	bl	14f98 <table_get_cell_ptr@@Base>
   13cd4:	ldr	r0, [r0]
   13cd8:	ldrd	r0, [r0]
   13cdc:	pop	{fp, pc}

00013ce0 <table_get_ullong@@Base>:
   13ce0:	push	{fp, lr}
   13ce4:	mov	fp, sp
   13ce8:	bl	14f98 <table_get_cell_ptr@@Base>
   13cec:	ldr	r0, [r0]
   13cf0:	ldrd	r0, [r0]
   13cf4:	pop	{fp, pc}

00013cf8 <table_get_float@@Base>:
   13cf8:	push	{fp, lr}
   13cfc:	mov	fp, sp
   13d00:	bl	14f98 <table_get_cell_ptr@@Base>
   13d04:	ldr	r0, [r0]
   13d08:	vldr	s0, [r0]
   13d0c:	pop	{fp, pc}

00013d10 <table_get_double@@Base>:
   13d10:	push	{fp, lr}
   13d14:	mov	fp, sp
   13d18:	bl	14f98 <table_get_cell_ptr@@Base>
   13d1c:	ldr	r0, [r0]
   13d20:	vldr	d0, [r0]
   13d24:	pop	{fp, pc}

00013d28 <table_get_ldouble@@Base>:
   13d28:	push	{fp, lr}
   13d2c:	mov	fp, sp
   13d30:	bl	14f98 <table_get_cell_ptr@@Base>
   13d34:	ldr	r0, [r0]
   13d38:	vldr	d0, [r0]
   13d3c:	pop	{fp, pc}

00013d40 <table_get_char@@Base>:
   13d40:	push	{fp, lr}
   13d44:	mov	fp, sp
   13d48:	bl	14f98 <table_get_cell_ptr@@Base>
   13d4c:	ldr	r0, [r0]
   13d50:	ldrb	r0, [r0]
   13d54:	pop	{fp, pc}

00013d58 <table_get_uchar@@Base>:
   13d58:	push	{fp, lr}
   13d5c:	mov	fp, sp
   13d60:	bl	14f98 <table_get_cell_ptr@@Base>
   13d64:	ldr	r0, [r0]
   13d68:	ldrb	r0, [r0]
   13d6c:	pop	{fp, pc}

00013d70 <table_get_string@@Base>:
   13d70:	push	{fp, lr}
   13d74:	mov	fp, sp
   13d78:	bl	14f98 <table_get_cell_ptr@@Base>
   13d7c:	ldr	r0, [r0]
   13d80:	pop	{fp, pc}

00013d84 <table_get_ptr@@Base>:
   13d84:	push	{fp, lr}
   13d88:	mov	fp, sp
   13d8c:	bl	14f98 <table_get_cell_ptr@@Base>
   13d90:	ldr	r0, [r0]
   13d94:	pop	{fp, pc}

00013d98 <table_row_init@@Base>:
   13d98:	push	{r4, r5, fp, lr}
   13d9c:	add	fp, sp, #8
   13da0:	mov	r4, r1
   13da4:	ldr	r1, [r0, #12]
   13da8:	ldr	r5, [r0, #16]
   13dac:	lsl	r0, r1, #2
   13db0:	bl	11f1c <malloc@plt>
   13db4:	str	r0, [r5, r4, lsl #2]
   13db8:	pop	{r4, r5, fp, pc}

00013dbc <table_get_row_ptr@@Base>:
   13dbc:	ldr	r0, [r0, #16]
   13dc0:	add	r0, r0, r1, lsl #2
   13dc4:	bx	lr

00013dc8 <table_row_destroy@@Base>:
   13dc8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13dcc:	add	fp, sp, #24
   13dd0:	mov	r4, r1
   13dd4:	mov	r5, r0
   13dd8:	bl	1304c <table_get_column_length@@Base>
   13ddc:	ldr	r8, [r5, #16]
   13de0:	cmp	r0, #1
   13de4:	blt	13e0c <table_row_destroy@@Base+0x44>
   13de8:	mov	r6, r0
   13dec:	mov	r7, #0
   13df0:	mov	r0, r5
   13df4:	mov	r1, r4
   13df8:	mov	r2, r7
   13dfc:	bl	14fb4 <table_cell_destroy@@Base>
   13e00:	add	r7, r7, #1
   13e04:	cmp	r6, r7
   13e08:	bne	13df0 <table_row_destroy@@Base+0x28>
   13e0c:	ldr	r0, [r8, r4, lsl #2]
   13e10:	cmp	r0, #0
   13e14:	beq	13e20 <table_row_destroy@@Base+0x58>
   13e18:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13e1c:	b	11eec <free@plt>
   13e20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013e24 <table_get_row_length@@Base>:
   13e24:	ldr	r0, [r0, #20]
   13e28:	bx	lr

00013e2c <table_add_row@@Base>:
   13e2c:	push	{r4, r5, r6, r7, fp, lr}
   13e30:	add	fp, sp, #16
   13e34:	ldr	r5, [r0, #20]
   13e38:	ldr	r1, [r0, #24]
   13e3c:	mov	r4, r0
   13e40:	udiv	r0, r5, r1
   13e44:	mls	r0, r0, r1, r5
   13e48:	cmp	r0, #0
   13e4c:	bne	13e70 <table_add_row@@Base+0x44>
   13e50:	ldr	r2, [r4, #28]
   13e54:	ldr	r0, [r4, #16]
   13e58:	add	r1, r2, r1
   13e5c:	str	r1, [r4, #28]
   13e60:	lsl	r1, r1, #2
   13e64:	bl	11f04 <realloc@plt>
   13e68:	str	r0, [r4, #16]
   13e6c:	ldr	r5, [r4, #20]
   13e70:	mov	r0, r4
   13e74:	bl	1304c <table_get_column_length@@Base>
   13e78:	mov	r6, r0
   13e7c:	ldr	r0, [r4, #12]
   13e80:	ldr	r7, [r4, #16]
   13e84:	lsl	r0, r0, #2
   13e88:	bl	11f1c <malloc@plt>
   13e8c:	cmp	r6, #1
   13e90:	str	r0, [r7, r5, lsl #2]
   13e94:	blt	13eb8 <table_add_row@@Base+0x8c>
   13e98:	mov	r7, #0
   13e9c:	mov	r0, r4
   13ea0:	mov	r1, r5
   13ea4:	mov	r2, r7
   13ea8:	bl	14f78 <table_cell_init@@Base>
   13eac:	add	r7, r7, #1
   13eb0:	cmp	r6, r7
   13eb4:	bne	13e9c <table_add_row@@Base+0x70>
   13eb8:	ldr	r1, [r4, #20]
   13ebc:	mov	r0, r4
   13ec0:	mvn	r2, #0
   13ec4:	mov	r3, #2
   13ec8:	bl	12f3c <table_notify@@Base>
   13ecc:	ldr	r0, [r4, #20]
   13ed0:	add	r1, r0, #1
   13ed4:	str	r1, [r4, #20]
   13ed8:	pop	{r4, r5, r6, r7, fp, pc}

00013edc <table_remove_row@@Base>:
   13edc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ee0:	add	fp, sp, #24
   13ee4:	ldr	r8, [r0, #20]
   13ee8:	mov	r4, r1
   13eec:	mov	r5, r0
   13ef0:	bl	1304c <table_get_column_length@@Base>
   13ef4:	cmp	r0, #1
   13ef8:	blt	13f4c <table_remove_row@@Base+0x70>
   13efc:	mov	r6, r0
   13f00:	mov	r7, #0
   13f04:	b	13f14 <table_remove_row@@Base+0x38>
   13f08:	add	r7, r7, #1
   13f0c:	cmp	r6, r7
   13f10:	beq	13f4c <table_remove_row@@Base+0x70>
   13f14:	mov	r0, r5
   13f18:	mov	r1, r7
   13f1c:	bl	130d0 <table_get_column_data_type@@Base>
   13f20:	cmp	r0, #23
   13f24:	beq	13f08 <table_remove_row@@Base+0x2c>
   13f28:	mov	r0, r5
   13f2c:	mov	r1, r4
   13f30:	mov	r2, r7
   13f34:	bl	14f98 <table_get_cell_ptr@@Base>
   13f38:	ldr	r0, [r0]
   13f3c:	cmp	r0, #0
   13f40:	beq	13f08 <table_remove_row@@Base+0x2c>
   13f44:	bl	11eec <free@plt>
   13f48:	b	13f08 <table_remove_row@@Base+0x2c>
   13f4c:	ldr	r0, [r5, #16]
   13f50:	ldr	r0, [r0, r4, lsl #2]
   13f54:	cmp	r0, #0
   13f58:	beq	13f60 <table_remove_row@@Base+0x84>
   13f5c:	bl	11eec <free@plt>
   13f60:	sub	r0, r8, #1
   13f64:	cmp	r0, r4
   13f68:	ble	13fd8 <table_remove_row@@Base+0xfc>
   13f6c:	mvn	r0, r4
   13f70:	add	r1, r8, r0
   13f74:	sub	r0, r8, #2
   13f78:	tst	r1, #1
   13f7c:	mov	r1, r4
   13f80:	beq	13f98 <table_remove_row@@Base+0xbc>
   13f84:	ldr	r1, [r5, #16]
   13f88:	add	r2, r1, r4, lsl #2
   13f8c:	ldr	r2, [r2, #4]
   13f90:	str	r2, [r1, r4, lsl #2]
   13f94:	add	r1, r4, #1
   13f98:	cmp	r0, r4
   13f9c:	beq	13fd8 <table_remove_row@@Base+0xfc>
   13fa0:	mvn	r0, r1
   13fa4:	lsl	r1, r1, #2
   13fa8:	add	r0, r0, r8
   13fac:	ldr	r2, [r5, #16]
   13fb0:	subs	r0, r0, #2
   13fb4:	add	r3, r2, r1
   13fb8:	ldr	r3, [r3, #4]
   13fbc:	str	r3, [r2, r1]
   13fc0:	ldr	r2, [r5, #16]
   13fc4:	add	r2, r2, r1
   13fc8:	add	r1, r1, #8
   13fcc:	ldr	r3, [r2, #8]
   13fd0:	str	r3, [r2, #4]
   13fd4:	bne	13fac <table_remove_row@@Base+0xd0>
   13fd8:	ldr	r0, [r5, #20]
   13fdc:	ldr	r1, [r5, #24]
   13fe0:	sub	r0, r0, #1
   13fe4:	udiv	r2, r0, r1
   13fe8:	str	r0, [r5, #20]
   13fec:	mls	r0, r2, r1, r0
   13ff0:	cmp	r0, #0
   13ff4:	bne	14014 <table_remove_row@@Base+0x138>
   13ff8:	ldr	r2, [r5, #28]
   13ffc:	ldr	r0, [r5, #16]
   14000:	sub	r1, r2, r1
   14004:	str	r1, [r5, #28]
   14008:	lsl	r1, r1, #2
   1400c:	bl	11f04 <realloc@plt>
   14010:	str	r0, [r5, #16]
   14014:	mov	r0, r5
   14018:	mov	r1, r4
   1401c:	mvn	r2, #0
   14020:	mov	r3, #4
   14024:	bl	12f3c <table_notify@@Base>
   14028:	mov	r0, #0
   1402c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014030 <table_set_row_ptr@@Base>:
   14030:	ldr	r2, [r2]
   14034:	ldr	r0, [r0, #16]
   14038:	str	r2, [r0, r1, lsl #2]
   1403c:	bx	lr

00014040 <table_set@@Base>:
   14040:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14044:	add	fp, sp, #24
   14048:	mov	r8, r3
   1404c:	mov	r4, r2
   14050:	mov	r9, r1
   14054:	mov	r6, r0
   14058:	bl	14f98 <table_get_cell_ptr@@Base>
   1405c:	mov	r5, r0
   14060:	mov	r0, r6
   14064:	mov	r1, r4
   14068:	bl	13024 <table_get_col_ptr@@Base>
   1406c:	ldr	r1, [fp, #8]
   14070:	mvn	r7, #0
   14074:	cmp	r1, #23
   14078:	bhi	1433c <table_set@@Base+0x2fc>
   1407c:	add	r2, pc, #0
   14080:	ldr	pc, [r2, r1, lsl #2]
   14084:	andeq	r4, r1, r4, ror #1
   14088:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1408c:	andeq	r4, r1, r4, lsl #2
   14090:	andeq	r4, r1, r4, lsl r1
   14094:	andeq	r4, r1, r4, lsr #2
   14098:	andeq	r4, r1, r4, lsr r1
   1409c:	andeq	r4, r1, r4, asr #2
   140a0:	andeq	r4, r1, r4, asr r1
   140a4:	andeq	r4, r1, r4, ror #2
   140a8:	andeq	r4, r1, r4, ror r1
   140ac:	andeq	r4, r1, r4, lsl #3
   140b0:	muleq	r1, r4, r1
   140b4:	andeq	r4, r1, ip, asr #3
   140b8:	ldrdeq	r4, [r1], -ip
   140bc:	andeq	r4, r1, ip, ror #3
   140c0:	strdeq	r4, [r1], -ip
   140c4:	andeq	r4, r1, ip, lsl #4
   140c8:	andeq	r4, r1, r4, asr #4
   140cc:	andeq	r4, r1, r4, asr r2
   140d0:	muleq	r1, r4, r2
   140d4:	andeq	r4, r1, r4, lsr #5
   140d8:			; <UNDEFINED> instruction: 0x000142b4
   140dc:	strdeq	r4, [r1], -r0
   140e0:	andeq	r4, r1, r4, asr #6
   140e4:	ldr	r0, [r0, #4]
   140e8:	cmp	r0, #0
   140ec:	bne	1433c <table_set@@Base+0x2fc>
   140f0:	b	14218 <table_set@@Base+0x1d8>
   140f4:	ldr	r0, [r0, #4]
   140f8:	cmp	r0, #1
   140fc:	beq	14218 <table_set@@Base+0x1d8>
   14100:	b	1433c <table_set@@Base+0x2fc>
   14104:	ldr	r0, [r0, #4]
   14108:	cmp	r0, #2
   1410c:	beq	142fc <table_set@@Base+0x2bc>
   14110:	b	1433c <table_set@@Base+0x2fc>
   14114:	ldr	r0, [r0, #4]
   14118:	cmp	r0, #3
   1411c:	beq	142fc <table_set@@Base+0x2bc>
   14120:	b	1433c <table_set@@Base+0x2fc>
   14124:	ldr	r0, [r0, #4]
   14128:	cmp	r0, #4
   1412c:	beq	141a0 <table_set@@Base+0x160>
   14130:	b	1433c <table_set@@Base+0x2fc>
   14134:	ldr	r0, [r0, #4]
   14138:	cmp	r0, #5
   1413c:	beq	141a0 <table_set@@Base+0x160>
   14140:	b	1433c <table_set@@Base+0x2fc>
   14144:	ldr	r0, [r0, #4]
   14148:	cmp	r0, #6
   1414c:	beq	14218 <table_set@@Base+0x1d8>
   14150:	b	1433c <table_set@@Base+0x2fc>
   14154:	ldr	r0, [r0, #4]
   14158:	cmp	r0, #7
   1415c:	beq	14218 <table_set@@Base+0x1d8>
   14160:	b	1433c <table_set@@Base+0x2fc>
   14164:	ldr	r0, [r0, #4]
   14168:	cmp	r0, #8
   1416c:	beq	14260 <table_set@@Base+0x220>
   14170:	b	1433c <table_set@@Base+0x2fc>
   14174:	ldr	r0, [r0, #4]
   14178:	cmp	r0, #9
   1417c:	beq	14260 <table_set@@Base+0x220>
   14180:	b	1433c <table_set@@Base+0x2fc>
   14184:	ldr	r0, [r0, #4]
   14188:	cmp	r0, #10
   1418c:	beq	141a0 <table_set@@Base+0x160>
   14190:	b	1433c <table_set@@Base+0x2fc>
   14194:	ldr	r0, [r0, #4]
   14198:	cmp	r0, #11
   1419c:	bne	1433c <table_set@@Base+0x2fc>
   141a0:	ldr	r0, [r5]
   141a4:	cmp	r0, #0
   141a8:	bne	141c0 <table_set@@Base+0x180>
   141ac:	mov	r0, #2
   141b0:	bl	11f1c <malloc@plt>
   141b4:	cmp	r0, #0
   141b8:	str	r0, [r5]
   141bc:	beq	1433c <table_set@@Base+0x2fc>
   141c0:	ldrh	r1, [r8]
   141c4:	strh	r1, [r0]
   141c8:	b	14324 <table_set@@Base+0x2e4>
   141cc:	ldr	r0, [r0, #4]
   141d0:	cmp	r0, #12
   141d4:	beq	14218 <table_set@@Base+0x1d8>
   141d8:	b	1433c <table_set@@Base+0x2fc>
   141dc:	ldr	r0, [r0, #4]
   141e0:	cmp	r0, #13
   141e4:	beq	14218 <table_set@@Base+0x1d8>
   141e8:	b	1433c <table_set@@Base+0x2fc>
   141ec:	ldr	r0, [r0, #4]
   141f0:	cmp	r0, #14
   141f4:	beq	14260 <table_set@@Base+0x220>
   141f8:	b	1433c <table_set@@Base+0x2fc>
   141fc:	ldr	r0, [r0, #4]
   14200:	cmp	r0, #15
   14204:	beq	14260 <table_set@@Base+0x220>
   14208:	b	1433c <table_set@@Base+0x2fc>
   1420c:	ldr	r0, [r0, #4]
   14210:	cmp	r0, #16
   14214:	bne	1433c <table_set@@Base+0x2fc>
   14218:	ldr	r0, [r5]
   1421c:	cmp	r0, #0
   14220:	bne	14238 <table_set@@Base+0x1f8>
   14224:	mov	r0, #4
   14228:	bl	11f1c <malloc@plt>
   1422c:	cmp	r0, #0
   14230:	str	r0, [r5]
   14234:	beq	1433c <table_set@@Base+0x2fc>
   14238:	ldr	r1, [r8]
   1423c:	str	r1, [r0]
   14240:	b	14324 <table_set@@Base+0x2e4>
   14244:	ldr	r0, [r0, #4]
   14248:	cmp	r0, #17
   1424c:	beq	14260 <table_set@@Base+0x220>
   14250:	b	1433c <table_set@@Base+0x2fc>
   14254:	ldr	r0, [r0, #4]
   14258:	cmp	r0, #18
   1425c:	bne	1433c <table_set@@Base+0x2fc>
   14260:	ldr	r0, [r5]
   14264:	cmp	r0, #0
   14268:	bne	14280 <table_set@@Base+0x240>
   1426c:	mov	r0, #8
   14270:	bl	11f1c <malloc@plt>
   14274:	cmp	r0, #0
   14278:	str	r0, [r5]
   1427c:	beq	1433c <table_set@@Base+0x2fc>
   14280:	ldr	r1, [r8]
   14284:	ldr	r2, [r8, #4]
   14288:	str	r2, [r0, #4]
   1428c:	str	r1, [r0]
   14290:	b	14324 <table_set@@Base+0x2e4>
   14294:	ldr	r0, [r0, #4]
   14298:	cmp	r0, #19
   1429c:	beq	142fc <table_set@@Base+0x2bc>
   142a0:	b	1433c <table_set@@Base+0x2fc>
   142a4:	ldr	r0, [r0, #4]
   142a8:	cmp	r0, #20
   142ac:	beq	142fc <table_set@@Base+0x2bc>
   142b0:	b	1433c <table_set@@Base+0x2fc>
   142b4:	ldr	r0, [r0, #4]
   142b8:	cmp	r0, #21
   142bc:	bne	1433c <table_set@@Base+0x2fc>
   142c0:	mov	r0, r8
   142c4:	bl	11f40 <strlen@plt>
   142c8:	ldr	r2, [r5]
   142cc:	add	r1, r0, #1
   142d0:	mov	r0, r2
   142d4:	bl	11f04 <realloc@plt>
   142d8:	cmp	r0, #0
   142dc:	str	r0, [r5]
   142e0:	beq	1433c <table_set@@Base+0x2fc>
   142e4:	mov	r1, r8
   142e8:	bl	11f10 <strcpy@plt>
   142ec:	b	14324 <table_set@@Base+0x2e4>
   142f0:	ldr	r0, [r0, #4]
   142f4:	cmp	r0, #22
   142f8:	bne	1433c <table_set@@Base+0x2fc>
   142fc:	ldr	r0, [r5]
   14300:	cmp	r0, #0
   14304:	bne	1431c <table_set@@Base+0x2dc>
   14308:	mov	r0, #1
   1430c:	bl	11f1c <malloc@plt>
   14310:	cmp	r0, #0
   14314:	str	r0, [r5]
   14318:	beq	1433c <table_set@@Base+0x2fc>
   1431c:	ldrb	r1, [r8]
   14320:	strb	r1, [r0]
   14324:	mov	r0, r6
   14328:	mov	r1, r9
   1432c:	mov	r2, r4
   14330:	mov	r3, #1
   14334:	bl	12f3c <table_notify@@Base>
   14338:	mov	r7, #0
   1433c:	mov	r0, r7
   14340:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14344:	ldr	r0, [r0, #4]
   14348:	cmp	r0, #23
   1434c:	bne	1433c <table_set@@Base+0x2fc>
   14350:	str	r8, [r5]
   14354:	b	14324 <table_set@@Base+0x2e4>

00014358 <table_set_bool@@Base>:
   14358:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1435c:	add	fp, sp, #24
   14360:	mov	r8, r3
   14364:	mov	r4, r2
   14368:	mov	r9, r1
   1436c:	mov	r6, r0
   14370:	bl	14f98 <table_get_cell_ptr@@Base>
   14374:	mov	r5, r0
   14378:	mov	r0, r6
   1437c:	mov	r1, r4
   14380:	bl	13024 <table_get_col_ptr@@Base>
   14384:	ldr	r0, [r0, #4]
   14388:	mvn	r7, #0
   1438c:	cmp	r0, #22
   14390:	bne	143d0 <table_set_bool@@Base+0x78>
   14394:	ldr	r0, [r5]
   14398:	cmp	r0, #0
   1439c:	bne	143b4 <table_set_bool@@Base+0x5c>
   143a0:	mov	r0, #1
   143a4:	bl	11f1c <malloc@plt>
   143a8:	cmp	r0, #0
   143ac:	str	r0, [r5]
   143b0:	beq	143d0 <table_set_bool@@Base+0x78>
   143b4:	strb	r8, [r0]
   143b8:	mov	r0, r6
   143bc:	mov	r1, r9
   143c0:	mov	r2, r4
   143c4:	mov	r3, #1
   143c8:	bl	12f3c <table_notify@@Base>
   143cc:	mov	r7, #0
   143d0:	mov	r0, r7
   143d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000143d8 <table_set_int@@Base>:
   143d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143dc:	add	fp, sp, #24
   143e0:	mov	r8, r3
   143e4:	mov	r4, r2
   143e8:	mov	r5, r1
   143ec:	mov	r6, r0
   143f0:	bl	14f98 <table_get_cell_ptr@@Base>
   143f4:	mov	r9, r0
   143f8:	mov	r0, r6
   143fc:	mov	r1, r4
   14400:	bl	13024 <table_get_col_ptr@@Base>
   14404:	ldr	r0, [r0, #4]
   14408:	mvn	r7, #0
   1440c:	cmp	r0, #0
   14410:	bne	14450 <table_set_int@@Base+0x78>
   14414:	ldr	r0, [r9]
   14418:	cmp	r0, #0
   1441c:	bne	14434 <table_set_int@@Base+0x5c>
   14420:	mov	r0, #4
   14424:	bl	11f1c <malloc@plt>
   14428:	cmp	r0, #0
   1442c:	str	r0, [r9]
   14430:	beq	14450 <table_set_int@@Base+0x78>
   14434:	str	r8, [r0]
   14438:	mov	r0, r6
   1443c:	mov	r1, r5
   14440:	mov	r2, r4
   14444:	mov	r3, #1
   14448:	bl	12f3c <table_notify@@Base>
   1444c:	mov	r7, #0
   14450:	mov	r0, r7
   14454:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014458 <table_set_uint@@Base>:
   14458:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1445c:	add	fp, sp, #24
   14460:	mov	r8, r3
   14464:	mov	r4, r2
   14468:	mov	r5, r1
   1446c:	mov	r6, r0
   14470:	bl	14f98 <table_get_cell_ptr@@Base>
   14474:	mov	r9, r0
   14478:	mov	r0, r6
   1447c:	mov	r1, r4
   14480:	bl	13024 <table_get_col_ptr@@Base>
   14484:	ldr	r0, [r0, #4]
   14488:	mvn	r7, #0
   1448c:	cmp	r0, #1
   14490:	bne	144d0 <table_set_uint@@Base+0x78>
   14494:	ldr	r0, [r9]
   14498:	cmp	r0, #0
   1449c:	bne	144b4 <table_set_uint@@Base+0x5c>
   144a0:	mov	r0, #4
   144a4:	bl	11f1c <malloc@plt>
   144a8:	cmp	r0, #0
   144ac:	str	r0, [r9]
   144b0:	beq	144d0 <table_set_uint@@Base+0x78>
   144b4:	str	r8, [r0]
   144b8:	mov	r0, r6
   144bc:	mov	r1, r5
   144c0:	mov	r2, r4
   144c4:	mov	r3, #1
   144c8:	bl	12f3c <table_notify@@Base>
   144cc:	mov	r7, #0
   144d0:	mov	r0, r7
   144d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000144d8 <table_set_int8@@Base>:
   144d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144dc:	add	fp, sp, #24
   144e0:	mov	r8, r3
   144e4:	mov	r4, r2
   144e8:	mov	r9, r1
   144ec:	mov	r6, r0
   144f0:	bl	14f98 <table_get_cell_ptr@@Base>
   144f4:	mov	r5, r0
   144f8:	mov	r0, r6
   144fc:	mov	r1, r4
   14500:	bl	13024 <table_get_col_ptr@@Base>
   14504:	ldr	r0, [r0, #4]
   14508:	mvn	r7, #0
   1450c:	cmp	r0, #2
   14510:	bne	14550 <table_set_int8@@Base+0x78>
   14514:	ldr	r0, [r5]
   14518:	cmp	r0, #0
   1451c:	bne	14534 <table_set_int8@@Base+0x5c>
   14520:	mov	r0, #1
   14524:	bl	11f1c <malloc@plt>
   14528:	cmp	r0, #0
   1452c:	str	r0, [r5]
   14530:	beq	14550 <table_set_int8@@Base+0x78>
   14534:	strb	r8, [r0]
   14538:	mov	r0, r6
   1453c:	mov	r1, r9
   14540:	mov	r2, r4
   14544:	mov	r3, #1
   14548:	bl	12f3c <table_notify@@Base>
   1454c:	mov	r7, #0
   14550:	mov	r0, r7
   14554:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014558 <table_set_uint8@@Base>:
   14558:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1455c:	add	fp, sp, #24
   14560:	mov	r8, r3
   14564:	mov	r4, r2
   14568:	mov	r9, r1
   1456c:	mov	r6, r0
   14570:	bl	14f98 <table_get_cell_ptr@@Base>
   14574:	mov	r5, r0
   14578:	mov	r0, r6
   1457c:	mov	r1, r4
   14580:	bl	13024 <table_get_col_ptr@@Base>
   14584:	ldr	r0, [r0, #4]
   14588:	mvn	r7, #0
   1458c:	cmp	r0, #3
   14590:	bne	145d0 <table_set_uint8@@Base+0x78>
   14594:	ldr	r0, [r5]
   14598:	cmp	r0, #0
   1459c:	bne	145b4 <table_set_uint8@@Base+0x5c>
   145a0:	mov	r0, #1
   145a4:	bl	11f1c <malloc@plt>
   145a8:	cmp	r0, #0
   145ac:	str	r0, [r5]
   145b0:	beq	145d0 <table_set_uint8@@Base+0x78>
   145b4:	strb	r8, [r0]
   145b8:	mov	r0, r6
   145bc:	mov	r1, r9
   145c0:	mov	r2, r4
   145c4:	mov	r3, #1
   145c8:	bl	12f3c <table_notify@@Base>
   145cc:	mov	r7, #0
   145d0:	mov	r0, r7
   145d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000145d8 <table_set_int16@@Base>:
   145d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   145dc:	add	fp, sp, #24
   145e0:	mov	r8, r3
   145e4:	mov	r4, r2
   145e8:	mov	r9, r1
   145ec:	mov	r6, r0
   145f0:	bl	14f98 <table_get_cell_ptr@@Base>
   145f4:	mov	r5, r0
   145f8:	mov	r0, r6
   145fc:	mov	r1, r4
   14600:	bl	13024 <table_get_col_ptr@@Base>
   14604:	ldr	r0, [r0, #4]
   14608:	mvn	r7, #0
   1460c:	cmp	r0, #4
   14610:	bne	14650 <table_set_int16@@Base+0x78>
   14614:	ldr	r0, [r5]
   14618:	cmp	r0, #0
   1461c:	bne	14634 <table_set_int16@@Base+0x5c>
   14620:	mov	r0, #2
   14624:	bl	11f1c <malloc@plt>
   14628:	cmp	r0, #0
   1462c:	str	r0, [r5]
   14630:	beq	14650 <table_set_int16@@Base+0x78>
   14634:	strh	r8, [r0]
   14638:	mov	r0, r6
   1463c:	mov	r1, r9
   14640:	mov	r2, r4
   14644:	mov	r3, #1
   14648:	bl	12f3c <table_notify@@Base>
   1464c:	mov	r7, #0
   14650:	mov	r0, r7
   14654:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014658 <table_set_uint16@@Base>:
   14658:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1465c:	add	fp, sp, #24
   14660:	mov	r8, r3
   14664:	mov	r4, r2
   14668:	mov	r9, r1
   1466c:	mov	r6, r0
   14670:	bl	14f98 <table_get_cell_ptr@@Base>
   14674:	mov	r5, r0
   14678:	mov	r0, r6
   1467c:	mov	r1, r4
   14680:	bl	13024 <table_get_col_ptr@@Base>
   14684:	ldr	r0, [r0, #4]
   14688:	mvn	r7, #0
   1468c:	cmp	r0, #5
   14690:	bne	146d0 <table_set_uint16@@Base+0x78>
   14694:	ldr	r0, [r5]
   14698:	cmp	r0, #0
   1469c:	bne	146b4 <table_set_uint16@@Base+0x5c>
   146a0:	mov	r0, #2
   146a4:	bl	11f1c <malloc@plt>
   146a8:	cmp	r0, #0
   146ac:	str	r0, [r5]
   146b0:	beq	146d0 <table_set_uint16@@Base+0x78>
   146b4:	strh	r8, [r0]
   146b8:	mov	r0, r6
   146bc:	mov	r1, r9
   146c0:	mov	r2, r4
   146c4:	mov	r3, #1
   146c8:	bl	12f3c <table_notify@@Base>
   146cc:	mov	r7, #0
   146d0:	mov	r0, r7
   146d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000146d8 <table_set_int32@@Base>:
   146d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   146dc:	add	fp, sp, #24
   146e0:	mov	r8, r3
   146e4:	mov	r4, r2
   146e8:	mov	r5, r1
   146ec:	mov	r6, r0
   146f0:	bl	14f98 <table_get_cell_ptr@@Base>
   146f4:	mov	r9, r0
   146f8:	mov	r0, r6
   146fc:	mov	r1, r4
   14700:	bl	13024 <table_get_col_ptr@@Base>
   14704:	ldr	r0, [r0, #4]
   14708:	mvn	r7, #0
   1470c:	cmp	r0, #6
   14710:	bne	14750 <table_set_int32@@Base+0x78>
   14714:	ldr	r0, [r9]
   14718:	cmp	r0, #0
   1471c:	bne	14734 <table_set_int32@@Base+0x5c>
   14720:	mov	r0, #4
   14724:	bl	11f1c <malloc@plt>
   14728:	cmp	r0, #0
   1472c:	str	r0, [r9]
   14730:	beq	14750 <table_set_int32@@Base+0x78>
   14734:	str	r8, [r0]
   14738:	mov	r0, r6
   1473c:	mov	r1, r5
   14740:	mov	r2, r4
   14744:	mov	r3, #1
   14748:	bl	12f3c <table_notify@@Base>
   1474c:	mov	r7, #0
   14750:	mov	r0, r7
   14754:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014758 <table_set_uint32@@Base>:
   14758:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1475c:	add	fp, sp, #24
   14760:	mov	r8, r3
   14764:	mov	r4, r2
   14768:	mov	r5, r1
   1476c:	mov	r6, r0
   14770:	bl	14f98 <table_get_cell_ptr@@Base>
   14774:	mov	r9, r0
   14778:	mov	r0, r6
   1477c:	mov	r1, r4
   14780:	bl	13024 <table_get_col_ptr@@Base>
   14784:	ldr	r0, [r0, #4]
   14788:	mvn	r7, #0
   1478c:	cmp	r0, #7
   14790:	bne	147d0 <table_set_uint32@@Base+0x78>
   14794:	ldr	r0, [r9]
   14798:	cmp	r0, #0
   1479c:	bne	147b4 <table_set_uint32@@Base+0x5c>
   147a0:	mov	r0, #4
   147a4:	bl	11f1c <malloc@plt>
   147a8:	cmp	r0, #0
   147ac:	str	r0, [r9]
   147b0:	beq	147d0 <table_set_uint32@@Base+0x78>
   147b4:	str	r8, [r0]
   147b8:	mov	r0, r6
   147bc:	mov	r1, r5
   147c0:	mov	r2, r4
   147c4:	mov	r3, #1
   147c8:	bl	12f3c <table_notify@@Base>
   147cc:	mov	r7, #0
   147d0:	mov	r0, r7
   147d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000147d8 <table_set_int64@@Base>:
   147d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147dc:	add	fp, sp, #24
   147e0:	mov	r4, r2
   147e4:	mov	r8, r1
   147e8:	mov	r6, r0
   147ec:	bl	14f98 <table_get_cell_ptr@@Base>
   147f0:	mov	r5, r0
   147f4:	mov	r0, r6
   147f8:	mov	r1, r4
   147fc:	bl	13024 <table_get_col_ptr@@Base>
   14800:	ldr	r0, [r0, #4]
   14804:	mvn	r7, #0
   14808:	cmp	r0, #8
   1480c:	bne	14858 <table_set_int64@@Base+0x80>
   14810:	ldr	r0, [r5]
   14814:	cmp	r0, #0
   14818:	bne	14830 <table_set_int64@@Base+0x58>
   1481c:	mov	r0, #8
   14820:	bl	11f1c <malloc@plt>
   14824:	cmp	r0, #0
   14828:	str	r0, [r5]
   1482c:	beq	14858 <table_set_int64@@Base+0x80>
   14830:	ldr	r1, [fp, #12]
   14834:	ldr	r2, [fp, #8]
   14838:	mov	r3, #1
   1483c:	str	r2, [r0]
   14840:	str	r1, [r0, #4]
   14844:	mov	r0, r6
   14848:	mov	r1, r8
   1484c:	mov	r2, r4
   14850:	bl	12f3c <table_notify@@Base>
   14854:	mov	r7, #0
   14858:	mov	r0, r7
   1485c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014860 <table_set_uint64@@Base>:
   14860:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14864:	add	fp, sp, #24
   14868:	mov	r4, r2
   1486c:	mov	r8, r1
   14870:	mov	r6, r0
   14874:	bl	14f98 <table_get_cell_ptr@@Base>
   14878:	mov	r5, r0
   1487c:	mov	r0, r6
   14880:	mov	r1, r4
   14884:	bl	13024 <table_get_col_ptr@@Base>
   14888:	ldr	r0, [r0, #4]
   1488c:	mvn	r7, #0
   14890:	cmp	r0, #9
   14894:	bne	148e0 <table_set_uint64@@Base+0x80>
   14898:	ldr	r0, [r5]
   1489c:	cmp	r0, #0
   148a0:	bne	148b8 <table_set_uint64@@Base+0x58>
   148a4:	mov	r0, #8
   148a8:	bl	11f1c <malloc@plt>
   148ac:	cmp	r0, #0
   148b0:	str	r0, [r5]
   148b4:	beq	148e0 <table_set_uint64@@Base+0x80>
   148b8:	ldr	r1, [fp, #12]
   148bc:	ldr	r2, [fp, #8]
   148c0:	mov	r3, #1
   148c4:	str	r2, [r0]
   148c8:	str	r1, [r0, #4]
   148cc:	mov	r0, r6
   148d0:	mov	r1, r8
   148d4:	mov	r2, r4
   148d8:	bl	12f3c <table_notify@@Base>
   148dc:	mov	r7, #0
   148e0:	mov	r0, r7
   148e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000148e8 <table_set_short@@Base>:
   148e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   148ec:	add	fp, sp, #24
   148f0:	mov	r8, r3
   148f4:	mov	r4, r2
   148f8:	mov	r9, r1
   148fc:	mov	r6, r0
   14900:	bl	14f98 <table_get_cell_ptr@@Base>
   14904:	mov	r5, r0
   14908:	mov	r0, r6
   1490c:	mov	r1, r4
   14910:	bl	13024 <table_get_col_ptr@@Base>
   14914:	ldr	r0, [r0, #4]
   14918:	mvn	r7, #0
   1491c:	cmp	r0, #10
   14920:	bne	14960 <table_set_short@@Base+0x78>
   14924:	ldr	r0, [r5]
   14928:	cmp	r0, #0
   1492c:	bne	14944 <table_set_short@@Base+0x5c>
   14930:	mov	r0, #2
   14934:	bl	11f1c <malloc@plt>
   14938:	cmp	r0, #0
   1493c:	str	r0, [r5]
   14940:	beq	14960 <table_set_short@@Base+0x78>
   14944:	strh	r8, [r0]
   14948:	mov	r0, r6
   1494c:	mov	r1, r9
   14950:	mov	r2, r4
   14954:	mov	r3, #1
   14958:	bl	12f3c <table_notify@@Base>
   1495c:	mov	r7, #0
   14960:	mov	r0, r7
   14964:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014968 <table_set_ushort@@Base>:
   14968:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1496c:	add	fp, sp, #24
   14970:	mov	r8, r3
   14974:	mov	r4, r2
   14978:	mov	r9, r1
   1497c:	mov	r6, r0
   14980:	bl	14f98 <table_get_cell_ptr@@Base>
   14984:	mov	r5, r0
   14988:	mov	r0, r6
   1498c:	mov	r1, r4
   14990:	bl	13024 <table_get_col_ptr@@Base>
   14994:	ldr	r0, [r0, #4]
   14998:	mvn	r7, #0
   1499c:	cmp	r0, #11
   149a0:	bne	149e0 <table_set_ushort@@Base+0x78>
   149a4:	ldr	r0, [r5]
   149a8:	cmp	r0, #0
   149ac:	bne	149c4 <table_set_ushort@@Base+0x5c>
   149b0:	mov	r0, #2
   149b4:	bl	11f1c <malloc@plt>
   149b8:	cmp	r0, #0
   149bc:	str	r0, [r5]
   149c0:	beq	149e0 <table_set_ushort@@Base+0x78>
   149c4:	strh	r8, [r0]
   149c8:	mov	r0, r6
   149cc:	mov	r1, r9
   149d0:	mov	r2, r4
   149d4:	mov	r3, #1
   149d8:	bl	12f3c <table_notify@@Base>
   149dc:	mov	r7, #0
   149e0:	mov	r0, r7
   149e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000149e8 <table_set_long@@Base>:
   149e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   149ec:	add	fp, sp, #24
   149f0:	mov	r8, r3
   149f4:	mov	r4, r2
   149f8:	mov	r5, r1
   149fc:	mov	r6, r0
   14a00:	bl	14f98 <table_get_cell_ptr@@Base>
   14a04:	mov	r9, r0
   14a08:	mov	r0, r6
   14a0c:	mov	r1, r4
   14a10:	bl	13024 <table_get_col_ptr@@Base>
   14a14:	ldr	r0, [r0, #4]
   14a18:	mvn	r7, #0
   14a1c:	cmp	r0, #12
   14a20:	bne	14a60 <table_set_long@@Base+0x78>
   14a24:	ldr	r0, [r9]
   14a28:	cmp	r0, #0
   14a2c:	bne	14a44 <table_set_long@@Base+0x5c>
   14a30:	mov	r0, #4
   14a34:	bl	11f1c <malloc@plt>
   14a38:	cmp	r0, #0
   14a3c:	str	r0, [r9]
   14a40:	beq	14a60 <table_set_long@@Base+0x78>
   14a44:	str	r8, [r0]
   14a48:	mov	r0, r6
   14a4c:	mov	r1, r5
   14a50:	mov	r2, r4
   14a54:	mov	r3, #1
   14a58:	bl	12f3c <table_notify@@Base>
   14a5c:	mov	r7, #0
   14a60:	mov	r0, r7
   14a64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014a68 <table_set_ulong@@Base>:
   14a68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a6c:	add	fp, sp, #24
   14a70:	mov	r8, r3
   14a74:	mov	r4, r2
   14a78:	mov	r5, r1
   14a7c:	mov	r6, r0
   14a80:	bl	14f98 <table_get_cell_ptr@@Base>
   14a84:	mov	r9, r0
   14a88:	mov	r0, r6
   14a8c:	mov	r1, r4
   14a90:	bl	13024 <table_get_col_ptr@@Base>
   14a94:	ldr	r0, [r0, #4]
   14a98:	mvn	r7, #0
   14a9c:	cmp	r0, #13
   14aa0:	bne	14ae0 <table_set_ulong@@Base+0x78>
   14aa4:	ldr	r0, [r9]
   14aa8:	cmp	r0, #0
   14aac:	bne	14ac4 <table_set_ulong@@Base+0x5c>
   14ab0:	mov	r0, #4
   14ab4:	bl	11f1c <malloc@plt>
   14ab8:	cmp	r0, #0
   14abc:	str	r0, [r9]
   14ac0:	beq	14ae0 <table_set_ulong@@Base+0x78>
   14ac4:	str	r8, [r0]
   14ac8:	mov	r0, r6
   14acc:	mov	r1, r5
   14ad0:	mov	r2, r4
   14ad4:	mov	r3, #1
   14ad8:	bl	12f3c <table_notify@@Base>
   14adc:	mov	r7, #0
   14ae0:	mov	r0, r7
   14ae4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014ae8 <table_set_llong@@Base>:
   14ae8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14aec:	add	fp, sp, #24
   14af0:	mov	r4, r2
   14af4:	mov	r8, r1
   14af8:	mov	r6, r0
   14afc:	bl	14f98 <table_get_cell_ptr@@Base>
   14b00:	mov	r5, r0
   14b04:	mov	r0, r6
   14b08:	mov	r1, r4
   14b0c:	bl	13024 <table_get_col_ptr@@Base>
   14b10:	ldr	r0, [r0, #4]
   14b14:	mvn	r7, #0
   14b18:	cmp	r0, #14
   14b1c:	bne	14b68 <table_set_llong@@Base+0x80>
   14b20:	ldr	r0, [r5]
   14b24:	cmp	r0, #0
   14b28:	bne	14b40 <table_set_llong@@Base+0x58>
   14b2c:	mov	r0, #8
   14b30:	bl	11f1c <malloc@plt>
   14b34:	cmp	r0, #0
   14b38:	str	r0, [r5]
   14b3c:	beq	14b68 <table_set_llong@@Base+0x80>
   14b40:	ldr	r1, [fp, #12]
   14b44:	ldr	r2, [fp, #8]
   14b48:	mov	r3, #1
   14b4c:	str	r2, [r0]
   14b50:	str	r1, [r0, #4]
   14b54:	mov	r0, r6
   14b58:	mov	r1, r8
   14b5c:	mov	r2, r4
   14b60:	bl	12f3c <table_notify@@Base>
   14b64:	mov	r7, #0
   14b68:	mov	r0, r7
   14b6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014b70 <table_set_ullong@@Base>:
   14b70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14b74:	add	fp, sp, #24
   14b78:	mov	r4, r2
   14b7c:	mov	r8, r1
   14b80:	mov	r6, r0
   14b84:	bl	14f98 <table_get_cell_ptr@@Base>
   14b88:	mov	r5, r0
   14b8c:	mov	r0, r6
   14b90:	mov	r1, r4
   14b94:	bl	13024 <table_get_col_ptr@@Base>
   14b98:	ldr	r0, [r0, #4]
   14b9c:	mvn	r7, #0
   14ba0:	cmp	r0, #15
   14ba4:	bne	14bf0 <table_set_ullong@@Base+0x80>
   14ba8:	ldr	r0, [r5]
   14bac:	cmp	r0, #0
   14bb0:	bne	14bc8 <table_set_ullong@@Base+0x58>
   14bb4:	mov	r0, #8
   14bb8:	bl	11f1c <malloc@plt>
   14bbc:	cmp	r0, #0
   14bc0:	str	r0, [r5]
   14bc4:	beq	14bf0 <table_set_ullong@@Base+0x80>
   14bc8:	ldr	r1, [fp, #12]
   14bcc:	ldr	r2, [fp, #8]
   14bd0:	mov	r3, #1
   14bd4:	str	r2, [r0]
   14bd8:	str	r1, [r0, #4]
   14bdc:	mov	r0, r6
   14be0:	mov	r1, r8
   14be4:	mov	r2, r4
   14be8:	bl	12f3c <table_notify@@Base>
   14bec:	mov	r7, #0
   14bf0:	mov	r0, r7
   14bf4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014bf8 <table_set_float@@Base>:
   14bf8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14bfc:	add	fp, sp, #24
   14c00:	vpush	{d8}
   14c04:	vmov.f32	s16, s0
   14c08:	mov	r4, r2
   14c0c:	mov	r8, r1
   14c10:	mov	r6, r0
   14c14:	bl	14f98 <table_get_cell_ptr@@Base>
   14c18:	mov	r5, r0
   14c1c:	mov	r0, r6
   14c20:	mov	r1, r4
   14c24:	bl	13024 <table_get_col_ptr@@Base>
   14c28:	ldr	r0, [r0, #4]
   14c2c:	mvn	r7, #0
   14c30:	cmp	r0, #16
   14c34:	bne	14c78 <table_set_float@@Base+0x80>
   14c38:	ldr	r0, [r5]
   14c3c:	cmp	r0, #0
   14c40:	bne	14c58 <table_set_float@@Base+0x60>
   14c44:	mov	r0, #4
   14c48:	bl	11f1c <malloc@plt>
   14c4c:	cmp	r0, #0
   14c50:	str	r0, [r5]
   14c54:	beq	14c78 <table_set_float@@Base+0x80>
   14c58:	vmov	r1, s16
   14c5c:	mov	r2, r4
   14c60:	mov	r3, #1
   14c64:	str	r1, [r0]
   14c68:	mov	r0, r6
   14c6c:	mov	r1, r8
   14c70:	bl	12f3c <table_notify@@Base>
   14c74:	mov	r7, #0
   14c78:	mov	r0, r7
   14c7c:	vpop	{d8}
   14c80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014c84 <table_set_double@@Base>:
   14c84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14c88:	add	fp, sp, #24
   14c8c:	vpush	{d8}
   14c90:	vorr	d8, d0, d0
   14c94:	mov	r4, r2
   14c98:	mov	r5, r1
   14c9c:	mov	r6, r0
   14ca0:	bl	14f98 <table_get_cell_ptr@@Base>
   14ca4:	mov	r8, r0
   14ca8:	mov	r0, r6
   14cac:	mov	r1, r4
   14cb0:	bl	13024 <table_get_col_ptr@@Base>
   14cb4:	ldr	r0, [r0, #4]
   14cb8:	mvn	r7, #0
   14cbc:	cmp	r0, #17
   14cc0:	bne	14d00 <table_set_double@@Base+0x7c>
   14cc4:	ldr	r0, [r8]
   14cc8:	cmp	r0, #0
   14ccc:	bne	14ce4 <table_set_double@@Base+0x60>
   14cd0:	mov	r0, #8
   14cd4:	bl	11f1c <malloc@plt>
   14cd8:	cmp	r0, #0
   14cdc:	str	r0, [r8]
   14ce0:	beq	14d00 <table_set_double@@Base+0x7c>
   14ce4:	vst1.8	{d8}, [r0]
   14ce8:	mov	r0, r6
   14cec:	mov	r1, r5
   14cf0:	mov	r2, r4
   14cf4:	mov	r3, #1
   14cf8:	bl	12f3c <table_notify@@Base>
   14cfc:	mov	r7, #0
   14d00:	mov	r0, r7
   14d04:	vpop	{d8}
   14d08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014d0c <table_set_ldouble@@Base>:
   14d0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d10:	add	fp, sp, #24
   14d14:	vpush	{d8}
   14d18:	vorr	d8, d0, d0
   14d1c:	mov	r4, r2
   14d20:	mov	r5, r1
   14d24:	mov	r6, r0
   14d28:	bl	14f98 <table_get_cell_ptr@@Base>
   14d2c:	mov	r8, r0
   14d30:	mov	r0, r6
   14d34:	mov	r1, r4
   14d38:	bl	13024 <table_get_col_ptr@@Base>
   14d3c:	ldr	r0, [r0, #4]
   14d40:	mvn	r7, #0
   14d44:	cmp	r0, #18
   14d48:	bne	14d88 <table_set_ldouble@@Base+0x7c>
   14d4c:	ldr	r0, [r8]
   14d50:	cmp	r0, #0
   14d54:	bne	14d6c <table_set_ldouble@@Base+0x60>
   14d58:	mov	r0, #8
   14d5c:	bl	11f1c <malloc@plt>
   14d60:	cmp	r0, #0
   14d64:	str	r0, [r8]
   14d68:	beq	14d88 <table_set_ldouble@@Base+0x7c>
   14d6c:	vst1.8	{d8}, [r0]
   14d70:	mov	r0, r6
   14d74:	mov	r1, r5
   14d78:	mov	r2, r4
   14d7c:	mov	r3, #1
   14d80:	bl	12f3c <table_notify@@Base>
   14d84:	mov	r7, #0
   14d88:	mov	r0, r7
   14d8c:	vpop	{d8}
   14d90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014d94 <table_set_string@@Base>:
   14d94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d98:	add	fp, sp, #24
   14d9c:	mov	r8, r3
   14da0:	mov	r4, r2
   14da4:	mov	r9, r1
   14da8:	mov	r6, r0
   14dac:	bl	14f98 <table_get_cell_ptr@@Base>
   14db0:	mov	r5, r0
   14db4:	mov	r0, r6
   14db8:	mov	r1, r4
   14dbc:	bl	13024 <table_get_col_ptr@@Base>
   14dc0:	ldr	r0, [r0, #4]
   14dc4:	mvn	r7, #0
   14dc8:	cmp	r0, #21
   14dcc:	bne	14e14 <table_set_string@@Base+0x80>
   14dd0:	mov	r0, r8
   14dd4:	bl	11f40 <strlen@plt>
   14dd8:	ldr	r2, [r5]
   14ddc:	add	r1, r0, #1
   14de0:	mov	r0, r2
   14de4:	bl	11f04 <realloc@plt>
   14de8:	cmp	r0, #0
   14dec:	str	r0, [r5]
   14df0:	beq	14e14 <table_set_string@@Base+0x80>
   14df4:	mov	r1, r8
   14df8:	bl	11f10 <strcpy@plt>
   14dfc:	mov	r0, r6
   14e00:	mov	r1, r9
   14e04:	mov	r2, r4
   14e08:	mov	r3, #1
   14e0c:	bl	12f3c <table_notify@@Base>
   14e10:	mov	r7, #0
   14e14:	mov	r0, r7
   14e18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014e1c <table_set_char@@Base>:
   14e1c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14e20:	add	fp, sp, #24
   14e24:	mov	r8, r3
   14e28:	mov	r4, r2
   14e2c:	mov	r9, r1
   14e30:	mov	r6, r0
   14e34:	bl	14f98 <table_get_cell_ptr@@Base>
   14e38:	mov	r5, r0
   14e3c:	mov	r0, r6
   14e40:	mov	r1, r4
   14e44:	bl	13024 <table_get_col_ptr@@Base>
   14e48:	ldr	r0, [r0, #4]
   14e4c:	mvn	r7, #0
   14e50:	cmp	r0, #19
   14e54:	bne	14e94 <table_set_char@@Base+0x78>
   14e58:	ldr	r0, [r5]
   14e5c:	cmp	r0, #0
   14e60:	bne	14e78 <table_set_char@@Base+0x5c>
   14e64:	mov	r0, #1
   14e68:	bl	11f1c <malloc@plt>
   14e6c:	cmp	r0, #0
   14e70:	str	r0, [r5]
   14e74:	beq	14e94 <table_set_char@@Base+0x78>
   14e78:	strb	r8, [r0]
   14e7c:	mov	r0, r6
   14e80:	mov	r1, r9
   14e84:	mov	r2, r4
   14e88:	mov	r3, #1
   14e8c:	bl	12f3c <table_notify@@Base>
   14e90:	mov	r7, #0
   14e94:	mov	r0, r7
   14e98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014e9c <table_set_uchar@@Base>:
   14e9c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ea0:	add	fp, sp, #24
   14ea4:	mov	r8, r3
   14ea8:	mov	r4, r2
   14eac:	mov	r9, r1
   14eb0:	mov	r6, r0
   14eb4:	bl	14f98 <table_get_cell_ptr@@Base>
   14eb8:	mov	r5, r0
   14ebc:	mov	r0, r6
   14ec0:	mov	r1, r4
   14ec4:	bl	13024 <table_get_col_ptr@@Base>
   14ec8:	ldr	r0, [r0, #4]
   14ecc:	mvn	r7, #0
   14ed0:	cmp	r0, #20
   14ed4:	bne	14f14 <table_set_uchar@@Base+0x78>
   14ed8:	ldr	r0, [r5]
   14edc:	cmp	r0, #0
   14ee0:	bne	14ef8 <table_set_uchar@@Base+0x5c>
   14ee4:	mov	r0, #1
   14ee8:	bl	11f1c <malloc@plt>
   14eec:	cmp	r0, #0
   14ef0:	str	r0, [r5]
   14ef4:	beq	14f14 <table_set_uchar@@Base+0x78>
   14ef8:	strb	r8, [r0]
   14efc:	mov	r0, r6
   14f00:	mov	r1, r9
   14f04:	mov	r2, r4
   14f08:	mov	r3, #1
   14f0c:	bl	12f3c <table_notify@@Base>
   14f10:	mov	r7, #0
   14f14:	mov	r0, r7
   14f18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014f1c <table_set_ptr@@Base>:
   14f1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f20:	add	fp, sp, #24
   14f24:	mov	r8, r3
   14f28:	mov	r4, r2
   14f2c:	mov	r5, r1
   14f30:	mov	r6, r0
   14f34:	bl	14f98 <table_get_cell_ptr@@Base>
   14f38:	mov	r7, r0
   14f3c:	mov	r0, r6
   14f40:	mov	r1, r4
   14f44:	bl	13024 <table_get_col_ptr@@Base>
   14f48:	ldr	r1, [r0, #4]
   14f4c:	mvn	r0, #0
   14f50:	cmp	r1, #23
   14f54:	bne	14f74 <table_set_ptr@@Base+0x58>
   14f58:	mov	r0, r6
   14f5c:	mov	r1, r5
   14f60:	mov	r2, r4
   14f64:	mov	r3, #1
   14f68:	str	r8, [r7]
   14f6c:	bl	12f3c <table_notify@@Base>
   14f70:	mov	r0, #0
   14f74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014f78 <table_cell_init@@Base>:
   14f78:	push	{r4, sl, fp, lr}
   14f7c:	add	fp, sp, #8
   14f80:	mov	r4, r2
   14f84:	bl	13dbc <table_get_row_ptr@@Base>
   14f88:	ldr	r0, [r0]
   14f8c:	mov	r1, #0
   14f90:	str	r1, [r0, r4, lsl #2]
   14f94:	pop	{r4, sl, fp, pc}

00014f98 <table_get_cell_ptr@@Base>:
   14f98:	push	{r4, sl, fp, lr}
   14f9c:	add	fp, sp, #8
   14fa0:	mov	r4, r2
   14fa4:	bl	13dbc <table_get_row_ptr@@Base>
   14fa8:	ldr	r0, [r0]
   14fac:	add	r0, r0, r4, lsl #2
   14fb0:	pop	{r4, sl, fp, pc}

00014fb4 <table_cell_destroy@@Base>:
   14fb4:	push	{r4, r5, r6, sl, fp, lr}
   14fb8:	add	fp, sp, #16
   14fbc:	mov	r5, r1
   14fc0:	mov	r1, r2
   14fc4:	mov	r4, r2
   14fc8:	mov	r6, r0
   14fcc:	bl	130d0 <table_get_column_data_type@@Base>
   14fd0:	cmp	r0, #23
   14fd4:	popeq	{r4, r5, r6, sl, fp, pc}
   14fd8:	mov	r0, r6
   14fdc:	mov	r1, r5
   14fe0:	bl	13dbc <table_get_row_ptr@@Base>
   14fe4:	ldr	r0, [r0]
   14fe8:	ldr	r0, [r0, r4, lsl #2]
   14fec:	cmp	r0, #0
   14ff0:	beq	14ffc <table_cell_destroy@@Base+0x48>
   14ff4:	pop	{r4, r5, r6, sl, fp, lr}
   14ff8:	b	11eec <free@plt>
   14ffc:	pop	{r4, r5, r6, sl, fp, pc}

00015000 <table_cell_to_buffer@@Base>:
   15000:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15004:	add	fp, sp, #24
   15008:	sub	sp, sp, #8
   1500c:	mov	r7, r1
   15010:	mov	r1, r2
   15014:	mov	r5, r3
   15018:	mov	r6, r2
   1501c:	mov	r4, r0
   15020:	bl	130d0 <table_get_column_data_type@@Base>
   15024:	cmp	r0, #23
   15028:	bhi	15298 <table_cell_to_buffer@@Base+0x298>
   1502c:	ldr	r8, [fp, #8]
   15030:	add	r1, pc, #0
   15034:	ldr	pc, [r1, r0, lsl #2]
   15038:	muleq	r1, r8, r0
   1503c:	andeq	r5, r1, ip, lsr #1
   15040:	andeq	r5, r1, r0, asr #1
   15044:	ldrdeq	r5, [r1], -r4
   15048:	andeq	r5, r1, r8, ror #1
   1504c:	strdeq	r5, [r1], -ip
   15050:	andeq	r5, r1, r0, lsl r1
   15054:	andeq	r5, r1, r4, lsr #2
   15058:	andeq	r5, r1, r4, asr #2
   1505c:	andeq	r5, r1, r8, asr r1
   15060:	andeq	r5, r1, ip, ror #2
   15064:	andeq	r5, r1, ip, lsl #3
   15068:	andeq	r5, r1, ip, lsr #3
   1506c:	andeq	r5, r1, ip, asr #3
   15070:	andeq	r5, r1, ip, ror #3
   15074:	andeq	r5, r1, ip, lsl #4
   15078:	andeq	r5, r1, ip, lsr #4
   1507c:	andeq	r5, r1, r0, asr r2
   15080:	andeq	r5, r1, r0, ror r2
   15084:	andeq	r5, r1, r4, lsr #5
   15088:			; <UNDEFINED> instruction: 0x000152b8
   1508c:	ldrdeq	r5, [r1], -r8
   15090:	strdeq	r5, [r1], -r8
   15094:	andeq	r5, r1, ip, lsr #6
   15098:	mov	r0, r4
   1509c:	mov	r1, r7
   150a0:	mov	r2, r6
   150a4:	bl	13b78 <table_get_int@@Base>
   150a8:	b	15308 <table_cell_to_buffer@@Base+0x308>
   150ac:	mov	r0, r4
   150b0:	mov	r1, r7
   150b4:	mov	r2, r6
   150b8:	bl	13b90 <table_get_uint@@Base>
   150bc:	b	15134 <table_cell_to_buffer@@Base+0x134>
   150c0:	mov	r0, r4
   150c4:	mov	r1, r7
   150c8:	mov	r2, r6
   150cc:	bl	13ba8 <table_get_int8@@Base>
   150d0:	b	15308 <table_cell_to_buffer@@Base+0x308>
   150d4:	mov	r0, r4
   150d8:	mov	r1, r7
   150dc:	mov	r2, r6
   150e0:	bl	13bc0 <table_get_uint8@@Base>
   150e4:	b	15134 <table_cell_to_buffer@@Base+0x134>
   150e8:	mov	r0, r4
   150ec:	mov	r1, r7
   150f0:	mov	r2, r6
   150f4:	bl	13bd8 <table_get_int16@@Base>
   150f8:	b	15308 <table_cell_to_buffer@@Base+0x308>
   150fc:	mov	r0, r4
   15100:	mov	r1, r7
   15104:	mov	r2, r6
   15108:	bl	13bf0 <table_get_uint16@@Base>
   1510c:	b	15134 <table_cell_to_buffer@@Base+0x134>
   15110:	mov	r0, r4
   15114:	mov	r1, r7
   15118:	mov	r2, r6
   1511c:	bl	13c08 <table_get_int32@@Base>
   15120:	b	15308 <table_cell_to_buffer@@Base+0x308>
   15124:	mov	r0, r4
   15128:	mov	r1, r7
   1512c:	mov	r2, r6
   15130:	bl	13c20 <table_get_uint32@@Base>
   15134:	movw	r2, #23223	; 0x5ab7
   15138:	mov	r3, r0
   1513c:	movt	r2, #1
   15140:	b	15314 <table_cell_to_buffer@@Base+0x314>
   15144:	mov	r0, r4
   15148:	mov	r1, r7
   1514c:	mov	r2, r6
   15150:	bl	13c38 <table_get_int64@@Base>
   15154:	b	151fc <table_cell_to_buffer@@Base+0x1fc>
   15158:	mov	r0, r4
   1515c:	mov	r1, r7
   15160:	mov	r2, r6
   15164:	bl	13c50 <table_get_uint64@@Base>
   15168:	b	1521c <table_cell_to_buffer@@Base+0x21c>
   1516c:	mov	r0, r4
   15170:	mov	r1, r7
   15174:	mov	r2, r6
   15178:	bl	13c68 <table_get_short@@Base>
   1517c:	movw	r2, #23236	; 0x5ac4
   15180:	mov	r3, r0
   15184:	movt	r2, #1
   15188:	b	15314 <table_cell_to_buffer@@Base+0x314>
   1518c:	mov	r0, r4
   15190:	mov	r1, r7
   15194:	mov	r2, r6
   15198:	bl	13c80 <table_get_ushort@@Base>
   1519c:	movw	r2, #23240	; 0x5ac8
   151a0:	mov	r3, r0
   151a4:	movt	r2, #1
   151a8:	b	15314 <table_cell_to_buffer@@Base+0x314>
   151ac:	mov	r0, r4
   151b0:	mov	r1, r7
   151b4:	mov	r2, r6
   151b8:	bl	13c98 <table_get_long@@Base>
   151bc:	movw	r2, #23244	; 0x5acc
   151c0:	mov	r3, r0
   151c4:	movt	r2, #1
   151c8:	b	15314 <table_cell_to_buffer@@Base+0x314>
   151cc:	mov	r0, r4
   151d0:	mov	r1, r7
   151d4:	mov	r2, r6
   151d8:	bl	13cb0 <table_get_ulong@@Base>
   151dc:	movw	r2, #23248	; 0x5ad0
   151e0:	mov	r3, r0
   151e4:	movt	r2, #1
   151e8:	b	15314 <table_cell_to_buffer@@Base+0x314>
   151ec:	mov	r0, r4
   151f0:	mov	r1, r7
   151f4:	mov	r2, r6
   151f8:	bl	13cc8 <table_get_llong@@Base>
   151fc:	movw	r2, #23226	; 0x5aba
   15200:	stm	sp, {r0, r1}
   15204:	movt	r2, #1
   15208:	b	1528c <table_cell_to_buffer@@Base+0x28c>
   1520c:	mov	r0, r4
   15210:	mov	r1, r7
   15214:	mov	r2, r6
   15218:	bl	13ce0 <table_get_ullong@@Base>
   1521c:	movw	r2, #23231	; 0x5abf
   15220:	stm	sp, {r0, r1}
   15224:	movt	r2, #1
   15228:	b	1528c <table_cell_to_buffer@@Base+0x28c>
   1522c:	mov	r0, r4
   15230:	mov	r1, r7
   15234:	mov	r2, r6
   15238:	bl	13cf8 <table_get_float@@Base>
   1523c:	vcvt.f64.f32	d16, s0
   15240:	movw	r2, #23255	; 0x5ad7
   15244:	movt	r2, #1
   15248:	vstr	d16, [sp]
   1524c:	b	1528c <table_cell_to_buffer@@Base+0x28c>
   15250:	mov	r0, r4
   15254:	mov	r1, r7
   15258:	mov	r2, r6
   1525c:	bl	13d10 <table_get_double@@Base>
   15260:	movw	r2, #23258	; 0x5ada
   15264:	vstr	d0, [sp]
   15268:	movt	r2, #1
   1526c:	b	1528c <table_cell_to_buffer@@Base+0x28c>
   15270:	mov	r0, r4
   15274:	mov	r1, r7
   15278:	mov	r2, r6
   1527c:	bl	13d28 <table_get_ldouble@@Base>
   15280:	movw	r2, #23262	; 0x5ade
   15284:	vstr	d0, [sp]
   15288:	movt	r2, #1
   1528c:	mov	r0, r5
   15290:	mov	r1, r8
   15294:	bl	11f58 <snprintf@plt>
   15298:	mov	r0, #0
   1529c:	sub	sp, fp, #24
   152a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   152a4:	mov	r0, r4
   152a8:	mov	r1, r7
   152ac:	mov	r2, r6
   152b0:	bl	13d40 <table_get_char@@Base>
   152b4:	b	152c8 <table_cell_to_buffer@@Base+0x2c8>
   152b8:	mov	r0, r4
   152bc:	mov	r1, r7
   152c0:	mov	r2, r6
   152c4:	bl	13d58 <table_get_uchar@@Base>
   152c8:	movw	r2, #23266	; 0x5ae2
   152cc:	mov	r3, r0
   152d0:	movt	r2, #1
   152d4:	b	15314 <table_cell_to_buffer@@Base+0x314>
   152d8:	mov	r0, r4
   152dc:	mov	r1, r7
   152e0:	mov	r2, r6
   152e4:	bl	13d70 <table_get_string@@Base>
   152e8:	movw	r2, #23252	; 0x5ad4
   152ec:	mov	r3, r0
   152f0:	movt	r2, #1
   152f4:	b	15314 <table_cell_to_buffer@@Base+0x314>
   152f8:	mov	r0, r4
   152fc:	mov	r1, r7
   15300:	mov	r2, r6
   15304:	bl	13b60 <table_get_bool@@Base>
   15308:	movw	r2, #23220	; 0x5ab4
   1530c:	mov	r3, r0
   15310:	movt	r2, #1
   15314:	mov	r0, r5
   15318:	mov	r1, r8
   1531c:	bl	11f58 <snprintf@plt>
   15320:	mov	r0, #0
   15324:	sub	sp, fp, #24
   15328:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1532c:	mov	r0, r4
   15330:	mov	r1, r7
   15334:	mov	r2, r6
   15338:	bl	13d84 <table_get_ptr@@Base>
   1533c:	movw	r2, #23269	; 0x5ae5
   15340:	mov	r3, r0
   15344:	movt	r2, #1
   15348:	b	15314 <table_cell_to_buffer@@Base+0x314>

0001534c <table_cell_from_buffer@@Base>:
   1534c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15350:	add	fp, sp, #24
   15354:	sub	sp, sp, #264	; 0x108
   15358:	mov	r5, r1
   1535c:	mov	r1, r2
   15360:	mov	r7, r3
   15364:	mov	r4, r2
   15368:	mov	r6, r0
   1536c:	bl	130d0 <table_get_column_data_type@@Base>
   15370:	cmp	r0, #23
   15374:	bhi	159a4 <table_cell_from_buffer@@Base+0x658>
   15378:	add	r1, pc, #0
   1537c:	ldr	pc, [r1, r0, lsl #2]
   15380:	andeq	r5, r1, r0, ror #7
   15384:	andeq	r5, r1, ip, lsl r4
   15388:	andeq	r5, r1, r8, asr r4
   1538c:	muleq	r1, r4, r4
   15390:	ldrdeq	r5, [r1], -r0
   15394:	andeq	r5, r1, ip, lsl #10
   15398:	andeq	r5, r1, r8, asr #10
   1539c:	andeq	r5, r1, r4, lsl #11
   153a0:	andeq	r5, r1, r0, asr #11
   153a4:	andeq	r5, r1, r4, lsl #12
   153a8:	andeq	r5, r1, r8, asr #12
   153ac:	andeq	r5, r1, r4, lsl #13
   153b0:	andeq	r5, r1, r0, asr #13
   153b4:	strdeq	r5, [r1], -ip
   153b8:	andeq	r5, r1, r8, lsr r7
   153bc:	andeq	r5, r1, ip, ror r7
   153c0:	andeq	r5, r1, r0, asr #15
   153c4:	strdeq	r5, [r1], -ip
   153c8:	andeq	r5, r1, r8, lsr r8
   153cc:	andeq	r5, r1, r4, ror r8
   153d0:			; <UNDEFINED> instruction: 0x000158b0
   153d4:	andeq	r5, r1, ip, ror #17
   153d8:	andeq	r5, r1, r8, lsr #18
   153dc:	andeq	r5, r1, ip, ror #18
   153e0:	movw	r1, #23220	; 0x5ab4
   153e4:	add	r2, sp, #8
   153e8:	mov	r0, r7
   153ec:	movt	r1, #1
   153f0:	bl	11f64 <__isoc99_sscanf@plt>
   153f4:	mov	r1, r0
   153f8:	mvn	r0, #0
   153fc:	cmp	r1, #1
   15400:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   15404:	ldr	r3, [sp, #8]
   15408:	mov	r0, r6
   1540c:	mov	r1, r5
   15410:	mov	r2, r4
   15414:	bl	143d8 <table_set_int@@Base>
   15418:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   1541c:	movw	r1, #23223	; 0x5ab7
   15420:	add	r2, sp, #8
   15424:	mov	r0, r7
   15428:	movt	r1, #1
   1542c:	bl	11f64 <__isoc99_sscanf@plt>
   15430:	mov	r1, r0
   15434:	mvn	r0, #0
   15438:	cmp	r1, #1
   1543c:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   15440:	ldr	r3, [sp, #8]
   15444:	mov	r0, r6
   15448:	mov	r1, r5
   1544c:	mov	r2, r4
   15450:	bl	14458 <table_set_uint@@Base>
   15454:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   15458:	movw	r1, #23272	; 0x5ae8
   1545c:	add	r2, sp, #8
   15460:	mov	r0, r7
   15464:	movt	r1, #1
   15468:	bl	11f64 <__isoc99_sscanf@plt>
   1546c:	mov	r1, r0
   15470:	mvn	r0, #0
   15474:	cmp	r1, #1
   15478:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   1547c:	ldrsb	r3, [sp, #8]
   15480:	mov	r0, r6
   15484:	mov	r1, r5
   15488:	mov	r2, r4
   1548c:	bl	144d8 <table_set_int8@@Base>
   15490:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   15494:	movw	r1, #23277	; 0x5aed
   15498:	add	r2, sp, #8
   1549c:	mov	r0, r7
   154a0:	movt	r1, #1
   154a4:	bl	11f64 <__isoc99_sscanf@plt>
   154a8:	mov	r1, r0
   154ac:	mvn	r0, #0
   154b0:	cmp	r1, #1
   154b4:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   154b8:	ldrb	r3, [sp, #8]
   154bc:	mov	r0, r6
   154c0:	mov	r1, r5
   154c4:	mov	r2, r4
   154c8:	bl	14558 <table_set_uint8@@Base>
   154cc:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   154d0:	movw	r1, #23236	; 0x5ac4
   154d4:	add	r2, sp, #8
   154d8:	mov	r0, r7
   154dc:	movt	r1, #1
   154e0:	bl	11f64 <__isoc99_sscanf@plt>
   154e4:	mov	r1, r0
   154e8:	mvn	r0, #0
   154ec:	cmp	r1, #1
   154f0:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   154f4:	ldrsh	r3, [sp, #8]
   154f8:	mov	r0, r6
   154fc:	mov	r1, r5
   15500:	mov	r2, r4
   15504:	bl	145d8 <table_set_int16@@Base>
   15508:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   1550c:	movw	r1, #23240	; 0x5ac8
   15510:	add	r2, sp, #8
   15514:	mov	r0, r7
   15518:	movt	r1, #1
   1551c:	bl	11f64 <__isoc99_sscanf@plt>
   15520:	mov	r1, r0
   15524:	mvn	r0, #0
   15528:	cmp	r1, #1
   1552c:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   15530:	ldrh	r3, [sp, #8]
   15534:	mov	r0, r6
   15538:	mov	r1, r5
   1553c:	mov	r2, r4
   15540:	bl	14658 <table_set_uint16@@Base>
   15544:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   15548:	movw	r1, #23220	; 0x5ab4
   1554c:	add	r2, sp, #8
   15550:	mov	r0, r7
   15554:	movt	r1, #1
   15558:	bl	11f64 <__isoc99_sscanf@plt>
   1555c:	mov	r1, r0
   15560:	mvn	r0, #0
   15564:	cmp	r1, #1
   15568:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   1556c:	ldr	r3, [sp, #8]
   15570:	mov	r0, r6
   15574:	mov	r1, r5
   15578:	mov	r2, r4
   1557c:	bl	146d8 <table_set_int32@@Base>
   15580:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   15584:	movw	r1, #23223	; 0x5ab7
   15588:	add	r2, sp, #8
   1558c:	mov	r0, r7
   15590:	movt	r1, #1
   15594:	bl	11f64 <__isoc99_sscanf@plt>
   15598:	mov	r1, r0
   1559c:	mvn	r0, #0
   155a0:	cmp	r1, #1
   155a4:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   155a8:	ldr	r3, [sp, #8]
   155ac:	mov	r0, r6
   155b0:	mov	r1, r5
   155b4:	mov	r2, r4
   155b8:	bl	14758 <table_set_uint32@@Base>
   155bc:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   155c0:	movw	r1, #23226	; 0x5aba
   155c4:	add	r2, sp, #8
   155c8:	mov	r0, r7
   155cc:	movt	r1, #1
   155d0:	bl	11f64 <__isoc99_sscanf@plt>
   155d4:	mov	r1, r0
   155d8:	mvn	r0, #0
   155dc:	cmp	r1, #1
   155e0:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   155e4:	ldr	r0, [sp, #8]
   155e8:	ldr	r1, [sp, #12]
   155ec:	mov	r2, r4
   155f0:	stm	sp, {r0, r1}
   155f4:	mov	r0, r6
   155f8:	mov	r1, r5
   155fc:	bl	147d8 <table_set_int64@@Base>
   15600:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   15604:	movw	r1, #23231	; 0x5abf
   15608:	add	r2, sp, #8
   1560c:	mov	r0, r7
   15610:	movt	r1, #1
   15614:	bl	11f64 <__isoc99_sscanf@plt>
   15618:	mov	r1, r0
   1561c:	mvn	r0, #0
   15620:	cmp	r1, #1
   15624:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   15628:	ldr	r0, [sp, #8]
   1562c:	ldr	r1, [sp, #12]
   15630:	mov	r2, r4
   15634:	stm	sp, {r0, r1}
   15638:	mov	r0, r6
   1563c:	mov	r1, r5
   15640:	bl	14860 <table_set_uint64@@Base>
   15644:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   15648:	movw	r1, #23236	; 0x5ac4
   1564c:	add	r2, sp, #8
   15650:	mov	r0, r7
   15654:	movt	r1, #1
   15658:	bl	11f64 <__isoc99_sscanf@plt>
   1565c:	mov	r1, r0
   15660:	mvn	r0, #0
   15664:	cmp	r1, #1
   15668:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   1566c:	ldrsh	r3, [sp, #8]
   15670:	mov	r0, r6
   15674:	mov	r1, r5
   15678:	mov	r2, r4
   1567c:	bl	148e8 <table_set_short@@Base>
   15680:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   15684:	movw	r1, #23240	; 0x5ac8
   15688:	add	r2, sp, #8
   1568c:	mov	r0, r7
   15690:	movt	r1, #1
   15694:	bl	11f64 <__isoc99_sscanf@plt>
   15698:	mov	r1, r0
   1569c:	mvn	r0, #0
   156a0:	cmp	r1, #1
   156a4:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   156a8:	ldrh	r3, [sp, #8]
   156ac:	mov	r0, r6
   156b0:	mov	r1, r5
   156b4:	mov	r2, r4
   156b8:	bl	14968 <table_set_ushort@@Base>
   156bc:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   156c0:	movw	r1, #23244	; 0x5acc
   156c4:	add	r2, sp, #8
   156c8:	mov	r0, r7
   156cc:	movt	r1, #1
   156d0:	bl	11f64 <__isoc99_sscanf@plt>
   156d4:	mov	r1, r0
   156d8:	mvn	r0, #0
   156dc:	cmp	r1, #1
   156e0:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   156e4:	ldr	r3, [sp, #8]
   156e8:	mov	r0, r6
   156ec:	mov	r1, r5
   156f0:	mov	r2, r4
   156f4:	bl	149e8 <table_set_long@@Base>
   156f8:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   156fc:	movw	r1, #23248	; 0x5ad0
   15700:	add	r2, sp, #8
   15704:	mov	r0, r7
   15708:	movt	r1, #1
   1570c:	bl	11f64 <__isoc99_sscanf@plt>
   15710:	mov	r1, r0
   15714:	mvn	r0, #0
   15718:	cmp	r1, #1
   1571c:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   15720:	ldr	r3, [sp, #8]
   15724:	mov	r0, r6
   15728:	mov	r1, r5
   1572c:	mov	r2, r4
   15730:	bl	14a68 <table_set_ulong@@Base>
   15734:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   15738:	movw	r1, #23226	; 0x5aba
   1573c:	add	r2, sp, #8
   15740:	mov	r0, r7
   15744:	movt	r1, #1
   15748:	bl	11f64 <__isoc99_sscanf@plt>
   1574c:	mov	r1, r0
   15750:	mvn	r0, #0
   15754:	cmp	r1, #1
   15758:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   1575c:	ldr	r0, [sp, #8]
   15760:	ldr	r1, [sp, #12]
   15764:	mov	r2, r4
   15768:	stm	sp, {r0, r1}
   1576c:	mov	r0, r6
   15770:	mov	r1, r5
   15774:	bl	14ae8 <table_set_llong@@Base>
   15778:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   1577c:	movw	r1, #23231	; 0x5abf
   15780:	add	r2, sp, #8
   15784:	mov	r0, r7
   15788:	movt	r1, #1
   1578c:	bl	11f64 <__isoc99_sscanf@plt>
   15790:	mov	r1, r0
   15794:	mvn	r0, #0
   15798:	cmp	r1, #1
   1579c:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   157a0:	ldr	r0, [sp, #8]
   157a4:	ldr	r1, [sp, #12]
   157a8:	mov	r2, r4
   157ac:	stm	sp, {r0, r1}
   157b0:	mov	r0, r6
   157b4:	mov	r1, r5
   157b8:	bl	14b70 <table_set_ullong@@Base>
   157bc:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   157c0:	movw	r1, #23255	; 0x5ad7
   157c4:	add	r2, sp, #8
   157c8:	mov	r0, r7
   157cc:	movt	r1, #1
   157d0:	bl	11f64 <__isoc99_sscanf@plt>
   157d4:	mov	r1, r0
   157d8:	mvn	r0, #0
   157dc:	cmp	r1, #1
   157e0:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   157e4:	vldr	s0, [sp, #8]
   157e8:	mov	r0, r6
   157ec:	mov	r1, r5
   157f0:	mov	r2, r4
   157f4:	bl	14bf8 <table_set_float@@Base>
   157f8:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   157fc:	movw	r1, #23258	; 0x5ada
   15800:	add	r2, sp, #8
   15804:	mov	r0, r7
   15808:	movt	r1, #1
   1580c:	bl	11f64 <__isoc99_sscanf@plt>
   15810:	mov	r1, r0
   15814:	mvn	r0, #0
   15818:	cmp	r1, #1
   1581c:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   15820:	vldr	d0, [sp, #8]
   15824:	mov	r0, r6
   15828:	mov	r1, r5
   1582c:	mov	r2, r4
   15830:	bl	14c84 <table_set_double@@Base>
   15834:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   15838:	movw	r1, #23262	; 0x5ade
   1583c:	add	r2, sp, #8
   15840:	mov	r0, r7
   15844:	movt	r1, #1
   15848:	bl	11f64 <__isoc99_sscanf@plt>
   1584c:	mov	r1, r0
   15850:	mvn	r0, #0
   15854:	cmp	r1, #1
   15858:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   1585c:	vldr	d0, [sp, #8]
   15860:	mov	r0, r6
   15864:	mov	r1, r5
   15868:	mov	r2, r4
   1586c:	bl	14d0c <table_set_ldouble@@Base>
   15870:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   15874:	movw	r1, #23266	; 0x5ae2
   15878:	add	r2, sp, #8
   1587c:	mov	r0, r7
   15880:	movt	r1, #1
   15884:	bl	11f64 <__isoc99_sscanf@plt>
   15888:	mov	r1, r0
   1588c:	mvn	r0, #0
   15890:	cmp	r1, #1
   15894:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   15898:	ldrb	r3, [sp, #8]
   1589c:	mov	r0, r6
   158a0:	mov	r1, r5
   158a4:	mov	r2, r4
   158a8:	bl	14e1c <table_set_char@@Base>
   158ac:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   158b0:	movw	r1, #23266	; 0x5ae2
   158b4:	add	r2, sp, #8
   158b8:	mov	r0, r7
   158bc:	movt	r1, #1
   158c0:	bl	11f64 <__isoc99_sscanf@plt>
   158c4:	mov	r1, r0
   158c8:	mvn	r0, #0
   158cc:	cmp	r1, #1
   158d0:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   158d4:	ldrb	r3, [sp, #8]
   158d8:	mov	r0, r6
   158dc:	mov	r1, r5
   158e0:	mov	r2, r4
   158e4:	bl	14e9c <table_set_uchar@@Base>
   158e8:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   158ec:	movw	r1, #23252	; 0x5ad4
   158f0:	add	r2, sp, #8
   158f4:	mov	r0, r7
   158f8:	movt	r1, #1
   158fc:	bl	11f64 <__isoc99_sscanf@plt>
   15900:	mov	r1, r0
   15904:	mvn	r0, #0
   15908:	cmp	r1, #1
   1590c:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   15910:	add	r3, sp, #8
   15914:	mov	r0, r6
   15918:	mov	r1, r5
   1591c:	mov	r2, r4
   15920:	bl	14d94 <table_set_string@@Base>
   15924:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   15928:	movw	r1, #23220	; 0x5ab4
   1592c:	add	r2, sp, #8
   15930:	mov	r0, r7
   15934:	movt	r1, #1
   15938:	bl	11f64 <__isoc99_sscanf@plt>
   1593c:	mov	r1, r0
   15940:	mvn	r0, #0
   15944:	cmp	r1, #1
   15948:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   1594c:	ldr	r3, [sp, #8]
   15950:	mov	r0, r6
   15954:	mov	r1, r5
   15958:	mov	r2, r4
   1595c:	cmp	r3, #0
   15960:	movwne	r3, #1
   15964:	bl	14358 <table_set_bool@@Base>
   15968:	b	159a4 <table_cell_from_buffer@@Base+0x658>
   1596c:	movw	r1, #23269	; 0x5ae5
   15970:	add	r2, sp, #8
   15974:	mov	r0, r7
   15978:	movt	r1, #1
   1597c:	bl	11f64 <__isoc99_sscanf@plt>
   15980:	mov	r1, r0
   15984:	mvn	r0, #0
   15988:	cmp	r1, #1
   1598c:	bne	159a8 <table_cell_from_buffer@@Base+0x65c>
   15990:	ldr	r3, [sp, #8]
   15994:	mov	r0, r6
   15998:	mov	r1, r5
   1599c:	mov	r2, r4
   159a0:	bl	14f1c <table_set_ptr@@Base>
   159a4:	mov	r0, #0
   159a8:	sub	sp, fp, #24
   159ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000159b0 <table_cell_nullify@@Base>:
   159b0:	push	{r4, r5, fp, lr}
   159b4:	add	fp, sp, #8
   159b8:	mov	r4, r2
   159bc:	bl	13dbc <table_get_row_ptr@@Base>
   159c0:	ldr	r5, [r0]
   159c4:	ldr	r0, [r5, r4, lsl #2]
   159c8:	cmp	r0, #0
   159cc:	beq	159dc <table_cell_nullify@@Base+0x2c>
   159d0:	bl	11eec <free@plt>
   159d4:	mov	r0, #0
   159d8:	str	r0, [r5, r4, lsl #2]
   159dc:	mov	r0, #0
   159e0:	pop	{r4, r5, fp, pc}

000159e4 <__libc_csu_init@@Base>:
   159e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   159e8:	mov	r7, r0
   159ec:	ldr	r6, [pc, #72]	; 15a3c <__libc_csu_init@@Base+0x58>
   159f0:	ldr	r5, [pc, #72]	; 15a40 <__libc_csu_init@@Base+0x5c>
   159f4:	add	r6, pc, r6
   159f8:	add	r5, pc, r5
   159fc:	sub	r6, r6, r5
   15a00:	mov	r8, r1
   15a04:	mov	r9, r2
   15a08:	bl	11ec0 <strcmp@plt-0x20>
   15a0c:	asrs	r6, r6, #2
   15a10:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a14:	mov	r4, #0
   15a18:	add	r4, r4, #1
   15a1c:	ldr	r3, [r5], #4
   15a20:	mov	r2, r9
   15a24:	mov	r1, r8
   15a28:	mov	r0, r7
   15a2c:	blx	r3
   15a30:	cmp	r6, r4
   15a34:	bne	15a18 <__libc_csu_init@@Base+0x34>
   15a38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a3c:	andeq	r0, r1, r0, lsl r5
   15a40:	andeq	r0, r1, r8, lsl #10

00015a44 <__libc_csu_fini@@Base>:
   15a44:	bx	lr

Disassembly of section .fini:

00015a48 <.fini>:
   15a48:	push	{r3, lr}
   15a4c:	pop	{r3, pc}
