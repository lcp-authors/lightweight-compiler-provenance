
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

00012858 <.init>:
   12858:	push	{r3, lr}
   1285c:	bl	129e4 <_start@@Base+0x3c>
   12860:	pop	{r3, pc}

Disassembly of section .plt:

00012864 <raise@plt-0x14>:
   12864:	push	{lr}		; (str lr, [sp, #-4]!)
   12868:	ldr	lr, [pc, #4]	; 12874 <raise@plt-0x4>
   1286c:	add	lr, pc, lr
   12870:	ldr	pc, [lr, #8]!
   12874:	andeq	pc, r1, ip, lsl #15

00012878 <raise@plt>:
   12878:	add	ip, pc, #0, 12
   1287c:	add	ip, ip, #126976	; 0x1f000
   12880:	ldr	pc, [ip, #1932]!	; 0x78c

00012884 <strcmp@plt>:
   12884:	add	ip, pc, #0, 12
   12888:	add	ip, ip, #126976	; 0x1f000
   1288c:	ldr	pc, [ip, #1924]!	; 0x784

00012890 <fopen@plt>:
   12890:	add	ip, pc, #0, 12
   12894:	add	ip, ip, #126976	; 0x1f000
   12898:	ldr	pc, [ip, #1916]!	; 0x77c

0001289c <memmove@plt>:
   1289c:	add	ip, pc, #0, 12
   128a0:	add	ip, ip, #126976	; 0x1f000
   128a4:	ldr	pc, [ip, #1908]!	; 0x774

000128a8 <free@plt>:
   128a8:	add	ip, pc, #0, 12
   128ac:	add	ip, ip, #126976	; 0x1f000
   128b0:	ldr	pc, [ip, #1900]!	; 0x76c

000128b4 <memcpy@plt>:
   128b4:	add	ip, pc, #0, 12
   128b8:	add	ip, ip, #126976	; 0x1f000
   128bc:	ldr	pc, [ip, #1892]!	; 0x764

000128c0 <ftell@plt>:
   128c0:	add	ip, pc, #0, 12
   128c4:	add	ip, ip, #126976	; 0x1f000
   128c8:	ldr	pc, [ip, #1884]!	; 0x75c

000128cc <rewind@plt>:
   128cc:	add	ip, pc, #0, 12
   128d0:	add	ip, ip, #126976	; 0x1f000
   128d4:	ldr	pc, [ip, #1876]!	; 0x754

000128d8 <realloc@plt>:
   128d8:	add	ip, pc, #0, 12
   128dc:	add	ip, ip, #126976	; 0x1f000
   128e0:	ldr	pc, [ip, #1868]!	; 0x74c

000128e4 <fwrite@plt>:
   128e4:	add	ip, pc, #0, 12
   128e8:	add	ip, ip, #126976	; 0x1f000
   128ec:	ldr	pc, [ip, #1860]!	; 0x744

000128f0 <puts@plt>:
   128f0:	add	ip, pc, #0, 12
   128f4:	add	ip, ip, #126976	; 0x1f000
   128f8:	ldr	pc, [ip, #1852]!	; 0x73c

000128fc <malloc@plt>:
   128fc:	add	ip, pc, #0, 12
   12900:	add	ip, ip, #126976	; 0x1f000
   12904:	ldr	pc, [ip, #1844]!	; 0x734

00012908 <__libc_start_main@plt>:
   12908:	add	ip, pc, #0, 12
   1290c:	add	ip, ip, #126976	; 0x1f000
   12910:	ldr	pc, [ip, #1836]!	; 0x72c

00012914 <__gmon_start__@plt>:
   12914:	add	ip, pc, #0, 12
   12918:	add	ip, ip, #126976	; 0x1f000
   1291c:	ldr	pc, [ip, #1828]!	; 0x724

00012920 <exit@plt>:
   12920:	add	ip, pc, #0, 12
   12924:	add	ip, ip, #126976	; 0x1f000
   12928:	ldr	pc, [ip, #1820]!	; 0x71c

0001292c <bcmp@plt>:
   1292c:	add	ip, pc, #0, 12
   12930:	add	ip, ip, #126976	; 0x1f000
   12934:	ldr	pc, [ip, #1812]!	; 0x714

00012938 <fprintf@plt>:
   12938:	add	ip, pc, #0, 12
   1293c:	add	ip, ip, #126976	; 0x1f000
   12940:	ldr	pc, [ip, #1804]!	; 0x70c

00012944 <memset@plt>:
   12944:	add	ip, pc, #0, 12
   12948:	add	ip, ip, #126976	; 0x1f000
   1294c:	ldr	pc, [ip, #1796]!	; 0x704

00012950 <strncpy@plt>:
   12950:	add	ip, pc, #0, 12
   12954:	add	ip, ip, #126976	; 0x1f000
   12958:	ldr	pc, [ip, #1788]!	; 0x6fc

0001295c <fclose@plt>:
   1295c:	add	ip, pc, #0, 12
   12960:	add	ip, ip, #126976	; 0x1f000
   12964:	ldr	pc, [ip, #1780]!	; 0x6f4

00012968 <sprintf@plt>:
   12968:	add	ip, pc, #0, 12
   1296c:	add	ip, ip, #126976	; 0x1f000
   12970:	ldr	pc, [ip, #1772]!	; 0x6ec

00012974 <fread_unlocked@plt>:
   12974:	add	ip, pc, #0, 12
   12978:	add	ip, ip, #126976	; 0x1f000
   1297c:	ldr	pc, [ip, #1764]!	; 0x6e4

00012980 <fseek@plt>:
   12980:	add	ip, pc, #0, 12
   12984:	add	ip, ip, #126976	; 0x1f000
   12988:	ldr	pc, [ip, #1756]!	; 0x6dc

0001298c <abort@plt>:
   1298c:	add	ip, pc, #0, 12
   12990:	add	ip, ip, #126976	; 0x1f000
   12994:	ldr	pc, [ip, #1748]!	; 0x6d4

00012998 <__assert_fail@plt>:
   12998:	add	ip, pc, #0, 12
   1299c:	add	ip, ip, #126976	; 0x1f000
   129a0:	ldr	pc, [ip, #1740]!	; 0x6cc

Disassembly of section .text:

000129a8 <_start@@Base>:
   129a8:	mov	fp, #0
   129ac:	mov	lr, #0
   129b0:	pop	{r1}		; (ldr r1, [sp], #4)
   129b4:	mov	r2, sp
   129b8:	push	{r2}		; (str r2, [sp, #-4]!)
   129bc:	push	{r0}		; (str r0, [sp, #-4]!)
   129c0:	ldr	ip, [pc, #16]	; 129d8 <_start@@Base+0x30>
   129c4:	push	{ip}		; (str ip, [sp, #-4]!)
   129c8:	ldr	r0, [pc, #12]	; 129dc <_start@@Base+0x34>
   129cc:	ldr	r3, [pc, #12]	; 129e0 <_start@@Base+0x38>
   129d0:	bl	12908 <__libc_start_main@plt>
   129d4:	bl	1298c <abort@plt>
   129d8:	andeq	pc, r1, r4, lsr #27
   129dc:	andeq	r2, r1, r8, lsr lr
   129e0:	andeq	pc, r1, r4, asr #26
   129e4:	ldr	r3, [pc, #20]	; 12a00 <_start@@Base+0x58>
   129e8:	ldr	r2, [pc, #20]	; 12a04 <_start@@Base+0x5c>
   129ec:	add	r3, pc, r3
   129f0:	ldr	r2, [r3, r2]
   129f4:	cmp	r2, #0
   129f8:	bxeq	lr
   129fc:	b	12914 <__gmon_start__@plt>
   12a00:	andeq	pc, r1, ip, lsl #12
   12a04:	andeq	r0, r0, r0, ror r0
   12a08:	ldr	r0, [pc, #24]	; 12a28 <_start@@Base+0x80>
   12a0c:	ldr	r3, [pc, #24]	; 12a2c <_start@@Base+0x84>
   12a10:	cmp	r3, r0
   12a14:	bxeq	lr
   12a18:	ldr	r3, [pc, #16]	; 12a30 <_start@@Base+0x88>
   12a1c:	cmp	r3, #0
   12a20:	bxeq	lr
   12a24:	bx	r3
   12a28:	andeq	r2, r3, r4, lsl #1
   12a2c:	andeq	r2, r3, r4, lsl #1
   12a30:	andeq	r0, r0, r0
   12a34:	ldr	r0, [pc, #36]	; 12a60 <_start@@Base+0xb8>
   12a38:	ldr	r1, [pc, #36]	; 12a64 <_start@@Base+0xbc>
   12a3c:	sub	r1, r1, r0
   12a40:	asr	r1, r1, #2
   12a44:	add	r1, r1, r1, lsr #31
   12a48:	asrs	r1, r1, #1
   12a4c:	bxeq	lr
   12a50:	ldr	r3, [pc, #16]	; 12a68 <_start@@Base+0xc0>
   12a54:	cmp	r3, #0
   12a58:	bxeq	lr
   12a5c:	bx	r3
   12a60:	andeq	r2, r3, r4, lsl #1
   12a64:	andeq	r2, r3, r4, lsl #1
   12a68:	andeq	r0, r0, r0
   12a6c:	push	{r4, lr}
   12a70:	ldr	r4, [pc, #24]	; 12a90 <_start@@Base+0xe8>
   12a74:	ldrb	r3, [r4]
   12a78:	cmp	r3, #0
   12a7c:	popne	{r4, pc}
   12a80:	bl	12a08 <_start@@Base+0x60>
   12a84:	mov	r3, #1
   12a88:	strb	r3, [r4]
   12a8c:	pop	{r4, pc}
   12a90:	muleq	r3, r0, r0
   12a94:	b	12a34 <_start@@Base+0x8c>

00012a98 <test_print@@Base>:
   12a98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a9c:	add	fp, sp, #28
   12aa0:	sub	sp, sp, #68	; 0x44
   12aa4:	movw	sl, #8320	; 0x2080
   12aa8:	movw	r1, #64998	; 0xfde6
   12aac:	mov	r4, #0
   12ab0:	movt	sl, #3
   12ab4:	movt	r1, #1
   12ab8:	str	r4, [fp, #-32]	; 0xffffffe0
   12abc:	str	r4, [fp, #-36]	; 0xffffffdc
   12ac0:	str	r4, [fp, #-40]	; 0xffffffd8
   12ac4:	ldr	r0, [sl]
   12ac8:	bl	12890 <fopen@plt>
   12acc:	cmp	r0, #0
   12ad0:	bne	12af8 <test_print@@Base+0x60>
   12ad4:	movw	r0, #8328	; 0x2088
   12ad8:	ldr	r2, [sl]
   12adc:	movw	r1, #65001	; 0xfde9
   12ae0:	movt	r0, #3
   12ae4:	movt	r1, #1
   12ae8:	ldr	r0, [r0]
   12aec:	bl	12938 <fprintf@plt>
   12af0:	mvn	r4, #0
   12af4:	b	12d40 <test_print@@Base+0x2a8>
   12af8:	mov	r5, r0
   12afc:	add	r0, sp, #8
   12b00:	mov	r1, r5
   12b04:	bl	1f2a8 <flatcc_json_printer_init@@Base>
   12b08:	movw	r9, #8340	; 0x2094
   12b0c:	strb	r4, [sp, #35]	; 0x23
   12b10:	movw	r0, #258	; 0x102
   12b14:	movt	r9, #3
   12b18:	strh	r0, [sp, #33]	; 0x21
   12b1c:	ldr	r4, [r9]
   12b20:	cmp	r4, #0
   12b24:	beq	12b40 <test_print@@Base+0xa8>
   12b28:	movw	r1, #65033	; 0xfe09
   12b2c:	mov	r0, r4
   12b30:	movt	r1, #1
   12b34:	bl	12884 <strcmp@plt>
   12b38:	cmp	r0, #0
   12b3c:	bne	12c2c <test_print@@Base+0x194>
   12b40:	movw	r8, #868	; 0x364
   12b44:	mov	r0, #288	; 0x120
   12b48:	movt	r8, #2
   12b4c:	str	r0, [fp, #-32]	; 0xffffffe0
   12b50:	movw	r4, #8316	; 0x207c
   12b54:	sub	r1, fp, #36	; 0x24
   12b58:	movt	r4, #3
   12b5c:	ldr	r0, [r4]
   12b60:	bl	12d4c <test_print@@Base+0x2b4>
   12b64:	cmp	r0, #0
   12b68:	bne	12b94 <test_print@@Base+0xfc>
   12b6c:	movw	r0, #8328	; 0x2088
   12b70:	ldr	r2, [r4]
   12b74:	movw	r1, #65077	; 0xfe35
   12b78:	movt	r0, #3
   12b7c:	movt	r1, #1
   12b80:	ldr	r0, [r0]
   12b84:	bl	12938 <fprintf@plt>
   12b88:	mov	r6, #0
   12b8c:	mvn	r4, #0
   12b90:	b	12c6c <test_print@@Base+0x1d4>
   12b94:	mov	r6, r0
   12b98:	movw	r0, #11976	; 0x2ec8
   12b9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12ba0:	movw	r3, #65120	; 0xfe60
   12ba4:	add	r4, sp, #8
   12ba8:	mov	r1, r8
   12bac:	movt	r0, #1
   12bb0:	movt	r3, #1
   12bb4:	str	r0, [sp]
   12bb8:	mov	r0, r4
   12bbc:	bl	1ed38 <flatcc_json_printer_table_as_root@@Base>
   12bc0:	ldr	r2, [sp, #52]	; 0x34
   12bc4:	mov	r0, r4
   12bc8:	mov	r1, #1
   12bcc:	blx	r2
   12bd0:	ldr	r0, [sp, #44]	; 0x2c
   12bd4:	cmp	r0, #0
   12bd8:	beq	12be8 <test_print@@Base+0x150>
   12bdc:	movw	r0, #837	; 0x345
   12be0:	movt	r0, #2
   12be4:	bl	128f0 <puts@plt>
   12be8:	mov	r0, r5
   12bec:	bl	1295c <fclose@plt>
   12bf0:	ldr	r0, [sl]
   12bf4:	sub	r1, fp, #40	; 0x28
   12bf8:	bl	12d4c <test_print@@Base+0x2b4>
   12bfc:	cmp	r0, #0
   12c00:	bne	12c74 <test_print@@Base+0x1dc>
   12c04:	movw	r0, #8328	; 0x2088
   12c08:	ldr	r2, [sl]
   12c0c:	movw	r1, #65125	; 0xfe65
   12c10:	movt	r0, #3
   12c14:	movt	r1, #1
   12c18:	ldr	r0, [r0]
   12c1c:	bl	12938 <fprintf@plt>
   12c20:	mov	r7, #0
   12c24:	mvn	r4, #0
   12c28:	b	12cc0 <test_print@@Base+0x228>
   12c2c:	sub	r1, fp, #32
   12c30:	mov	r0, r4
   12c34:	bl	12d4c <test_print@@Base+0x2b4>
   12c38:	mov	r8, r0
   12c3c:	cmp	r0, #0
   12c40:	bne	12b50 <test_print@@Base+0xb8>
   12c44:	movw	r0, #8328	; 0x2088
   12c48:	ldr	r2, [r9]
   12c4c:	movw	r1, #65035	; 0xfe0b
   12c50:	movt	r0, #3
   12c54:	movt	r1, #1
   12c58:	ldr	r0, [r0]
   12c5c:	bl	12938 <fprintf@plt>
   12c60:	mvn	r4, #0
   12c64:	mov	r8, #0
   12c68:	mov	r6, #0
   12c6c:	mov	r7, #0
   12c70:	b	12cf0 <test_print@@Base+0x258>
   12c74:	mov	r7, r0
   12c78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12c7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12c80:	cmp	r2, r0
   12c84:	bne	12cc8 <test_print@@Base+0x230>
   12c88:	mov	r0, r7
   12c8c:	mov	r1, r6
   12c90:	bl	1292c <bcmp@plt>
   12c94:	cmp	r0, #0
   12c98:	bne	12cc8 <test_print@@Base+0x230>
   12c9c:	movw	r0, #8328	; 0x2088
   12ca0:	mov	r1, #26
   12ca4:	mov	r2, #1
   12ca8:	movt	r0, #3
   12cac:	ldr	r3, [r0]
   12cb0:	movw	r0, #65217	; 0xfec1
   12cb4:	movt	r0, #1
   12cb8:	bl	128e4 <fwrite@plt>
   12cbc:	mov	r4, #0
   12cc0:	mov	r5, #0
   12cc4:	b	12cf0 <test_print@@Base+0x258>
   12cc8:	movw	r0, #8328	; 0x2088
   12ccc:	mov	r1, #54	; 0x36
   12cd0:	mov	r2, #1
   12cd4:	movt	r0, #3
   12cd8:	ldr	r3, [r0]
   12cdc:	movw	r0, #65162	; 0xfe8a
   12ce0:	movt	r0, #1
   12ce4:	bl	128e4 <fwrite@plt>
   12ce8:	mov	r5, #0
   12cec:	mvn	r4, #0
   12cf0:	add	r0, sp, #8
   12cf4:	bl	1f664 <flatcc_json_printer_clear@@Base>
   12cf8:	cmp	r8, #0
   12cfc:	ldrne	r0, [r9]
   12d00:	cmpne	r0, #0
   12d04:	beq	12d10 <test_print@@Base+0x278>
   12d08:	mov	r0, r8
   12d0c:	bl	128a8 <free@plt>
   12d10:	cmp	r6, #0
   12d14:	beq	12d20 <test_print@@Base+0x288>
   12d18:	mov	r0, r6
   12d1c:	bl	128a8 <free@plt>
   12d20:	cmp	r7, #0
   12d24:	beq	12d30 <test_print@@Base+0x298>
   12d28:	mov	r0, r7
   12d2c:	bl	128a8 <free@plt>
   12d30:	cmp	r5, #0
   12d34:	beq	12d40 <test_print@@Base+0x2a8>
   12d38:	mov	r0, r5
   12d3c:	bl	1295c <fclose@plt>
   12d40:	mov	r0, r4
   12d44:	sub	sp, fp, #28
   12d48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d50:	add	fp, sp, #24
   12d54:	sub	sp, sp, #8
   12d58:	cmp	r1, #0
   12d5c:	add	r9, sp, #4
   12d60:	movne	r9, r1
   12d64:	movw	r1, #65461	; 0xffb5
   12d68:	movt	r1, #1
   12d6c:	bl	12890 <fopen@plt>
   12d70:	cmp	r0, #0
   12d74:	beq	12e14 <test_print@@Base+0x37c>
   12d78:	mov	r1, #0
   12d7c:	mov	r2, #2
   12d80:	mov	r5, r0
   12d84:	mov	r8, #0
   12d88:	bl	12980 <fseek@plt>
   12d8c:	mov	r0, r5
   12d90:	bl	128c0 <ftell@plt>
   12d94:	mov	r4, r0
   12d98:	cmp	r0, #10240	; 0x2800
   12d9c:	str	r0, [r9]
   12da0:	bhi	12e08 <test_print@@Base+0x370>
   12da4:	mov	r0, r5
   12da8:	bl	128cc <rewind@plt>
   12dac:	cmp	r4, #0
   12db0:	mov	r0, r4
   12db4:	movweq	r0, #1
   12db8:	bl	128fc <malloc@plt>
   12dbc:	cmp	r0, #0
   12dc0:	beq	12e08 <test_print@@Base+0x370>
   12dc4:	mov	r7, r0
   12dc8:	mov	r1, #0
   12dcc:	mov	r6, r1
   12dd0:	add	r0, r7, r1
   12dd4:	sub	r2, r4, r1
   12dd8:	mov	r1, #1
   12ddc:	mov	r3, r5
   12de0:	bl	12974 <fread_unlocked@plt>
   12de4:	add	r1, r0, r6
   12de8:	cmp	r0, #0
   12dec:	bne	12dcc <test_print@@Base+0x334>
   12df0:	mov	r0, r5
   12df4:	bl	1295c <fclose@plt>
   12df8:	cmp	r4, r6
   12dfc:	bne	12e1c <test_print@@Base+0x384>
   12e00:	mov	r8, r7
   12e04:	b	12e28 <test_print@@Base+0x390>
   12e08:	mov	r0, r5
   12e0c:	bl	1295c <fclose@plt>
   12e10:	b	12e28 <test_print@@Base+0x390>
   12e14:	mov	r4, #0
   12e18:	b	12e24 <test_print@@Base+0x38c>
   12e1c:	mov	r0, r7
   12e20:	bl	128a8 <free@plt>
   12e24:	mov	r8, #0
   12e28:	str	r4, [r9]
   12e2c:	mov	r0, r8
   12e30:	sub	sp, fp, #24
   12e34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012e38 <main@@Base>:
   12e38:	push	{r4, r5, r6, sl, fp, lr}
   12e3c:	add	fp, sp, #16
   12e40:	movw	r6, #8328	; 0x2088
   12e44:	mov	r5, r0
   12e48:	movw	r0, #65244	; 0xfedc
   12e4c:	mov	r4, r1
   12e50:	mov	r1, #24
   12e54:	mov	r2, #1
   12e58:	movt	r6, #3
   12e5c:	movt	r0, #1
   12e60:	ldr	r3, [r6]
   12e64:	bl	128e4 <fwrite@plt>
   12e68:	cmp	r5, #1
   12e6c:	beq	12ea0 <main@@Base+0x68>
   12e70:	cmp	r5, #4
   12e74:	bne	12ea8 <main@@Base+0x70>
   12e78:	movw	r3, #8340	; 0x2094
   12e7c:	ldmib	r4, {r0, r1, r2}
   12e80:	movt	r3, #3
   12e84:	str	r0, [r3]
   12e88:	movw	r0, #8316	; 0x207c
   12e8c:	movt	r0, #3
   12e90:	str	r1, [r0]
   12e94:	movw	r0, #8320	; 0x2080
   12e98:	movt	r0, #3
   12e9c:	str	r2, [r0]
   12ea0:	pop	{r4, r5, r6, sl, fp, lr}
   12ea4:	b	12a98 <test_print@@Base>
   12ea8:	ldr	r3, [r6]
   12eac:	movw	r0, #65269	; 0xfef5
   12eb0:	mov	r1, #191	; 0xbf
   12eb4:	mov	r2, #1
   12eb8:	movt	r0, #1
   12ebc:	bl	128e4 <fwrite@plt>
   12ec0:	mov	r0, #1
   12ec4:	bl	12920 <exit@plt>
   12ec8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ecc:	add	fp, sp, #28
   12ed0:	sub	sp, sp, #20
   12ed4:	mov	r5, r0
   12ed8:	movw	r0, #13268	; 0x33d4
   12edc:	movw	r3, #65464	; 0xffb8
   12ee0:	mov	r4, r1
   12ee4:	mov	r1, #3
   12ee8:	mov	r2, #0
   12eec:	mov	r8, #0
   12ef0:	movt	r0, #1
   12ef4:	movt	r3, #1
   12ef8:	str	r1, [sp]
   12efc:	mov	r1, r4
   12f00:	str	r0, [sp, #4]
   12f04:	mov	r0, r5
   12f08:	bl	1e968 <flatcc_json_printer_struct_field@@Base>
   12f0c:	movw	r3, #65468	; 0xffbc
   12f10:	mov	r0, #150	; 0x96
   12f14:	mov	r1, #4
   12f18:	mov	r2, #1
   12f1c:	mov	r6, #4
   12f20:	movt	r3, #1
   12f24:	str	r1, [sp]
   12f28:	str	r0, [sp, #4]
   12f2c:	mov	r0, r5
   12f30:	mov	r1, r4
   12f34:	bl	16254 <flatcc_json_printer_int16_field@@Base>
   12f38:	movw	r3, #65473	; 0xffc1
   12f3c:	mov	r0, #100	; 0x64
   12f40:	mov	r1, #2
   12f44:	mov	r2, #2
   12f48:	movt	r3, #1
   12f4c:	str	r1, [sp]
   12f50:	str	r0, [sp, #4]
   12f54:	mov	r0, r5
   12f58:	mov	r1, r4
   12f5c:	bl	16254 <flatcc_json_printer_int16_field@@Base>
   12f60:	movw	r3, #65476	; 0xffc4
   12f64:	mov	r0, r5
   12f68:	mov	r1, r4
   12f6c:	mov	r2, #3
   12f70:	str	r6, [sp]
   12f74:	movt	r3, #1
   12f78:	bl	159cc <flatcc_json_printer_string_field@@Base>
   12f7c:	movw	r3, #65481	; 0xffc9
   12f80:	mov	r0, #9
   12f84:	mov	r1, r4
   12f88:	mov	r2, #5
   12f8c:	mov	r7, #5
   12f90:	movt	r3, #1
   12f94:	str	r0, [sp]
   12f98:	mov	r0, r5
   12f9c:	bl	17e7c <flatcc_json_printer_uint8_vector_field@@Base>
   12fa0:	movw	r0, #13520	; 0x34d0
   12fa4:	movw	r3, #65491	; 0xffd3
   12fa8:	mov	r1, #8
   12fac:	mov	r2, #6
   12fb0:	str	r7, [sp]
   12fb4:	mov	r7, #5
   12fb8:	movt	r0, #1
   12fbc:	movt	r3, #1
   12fc0:	str	r1, [sp, #4]
   12fc4:	mov	r1, r4
   12fc8:	str	r0, [sp, #8]
   12fcc:	mov	r0, r5
   12fd0:	bl	16b74 <flatcc_json_printer_int8_enum_field@@Base>
   12fd4:	movw	r0, #13832	; 0x3608
   12fd8:	movw	r1, #13716	; 0x3594
   12fdc:	movw	r3, #331	; 0x14b
   12fe0:	mov	r2, #8
   12fe4:	str	r6, [sp]
   12fe8:	movt	r0, #1
   12fec:	movt	r1, #1
   12ff0:	movt	r3, #2
   12ff4:	str	r1, [sp, #4]
   12ff8:	str	r0, [sp, #8]
   12ffc:	mov	r0, r5
   13000:	mov	r1, r4
   13004:	bl	1e124 <flatcc_json_printer_union_field@@Base>
   13008:	movw	r0, #13872	; 0x3630
   1300c:	movw	r3, #65497	; 0xffd9
   13010:	mov	r1, r4
   13014:	mov	r2, #9
   13018:	str	r7, [sp]
   1301c:	mov	sl, #5
   13020:	str	r6, [sp, #4]
   13024:	movt	r0, #1
   13028:	movt	r3, #1
   1302c:	str	r0, [sp, #8]
   13030:	mov	r0, r5
   13034:	bl	1cdc4 <flatcc_json_printer_struct_vector_field@@Base>
   13038:	movw	r3, #65503	; 0xffdf
   1303c:	mov	r7, #17
   13040:	mov	r0, r5
   13044:	mov	r1, r4
   13048:	mov	r2, #10
   1304c:	movt	r3, #1
   13050:	str	r7, [sp]
   13054:	bl	1d35c <flatcc_json_printer_string_vector_field@@Base>
   13058:	movw	r3, #65521	; 0xfff1
   1305c:	movw	r9, #11976	; 0x2ec8
   13060:	mov	r0, r5
   13064:	mov	r1, r4
   13068:	mov	r2, #11
   1306c:	movt	r3, #1
   13070:	movt	r9, #1
   13074:	stm	sp, {r7, r9}
   13078:	bl	1d710 <flatcc_json_printer_table_vector_field@@Base>
   1307c:	movw	r3, #3
   13080:	mov	r0, r5
   13084:	mov	r1, r4
   13088:	mov	r2, #12
   1308c:	str	sl, [sp]
   13090:	mov	sl, #5
   13094:	str	r9, [sp, #4]
   13098:	movt	r3, #2
   1309c:	bl	1df44 <flatcc_json_printer_table_field@@Base>
   130a0:	movw	r3, #9
   130a4:	mov	r0, #20
   130a8:	mov	r1, r4
   130ac:	mov	r2, #13
   130b0:	movt	r3, #2
   130b4:	stm	sp, {r0, r8, r9}
   130b8:	mov	r0, r5
   130bc:	bl	1f0a4 <flatcc_json_printer_table_as_nested_root@@Base>
   130c0:	movw	r0, #13968	; 0x3690
   130c4:	movw	r3, #30
   130c8:	mov	r1, #9
   130cc:	mov	r2, #14
   130d0:	movt	r0, #1
   130d4:	movt	r3, #2
   130d8:	str	r1, [sp]
   130dc:	mov	r1, r4
   130e0:	str	r0, [sp, #4]
   130e4:	mov	r0, r5
   130e8:	bl	1df44 <flatcc_json_printer_table_field@@Base>
   130ec:	movw	r3, #40	; 0x28
   130f0:	mov	r0, #1
   130f4:	mov	r9, #8
   130f8:	mov	r1, r4
   130fc:	mov	r2, #15
   13100:	movt	r3, #2
   13104:	str	r0, [sp, #4]
   13108:	mov	r0, r5
   1310c:	str	r9, [sp]
   13110:	bl	16514 <flatcc_json_printer_bool_field@@Base>
   13114:	movw	r3, #49	; 0x31
   13118:	mov	r6, #16
   1311c:	mov	r0, r5
   13120:	mov	r1, r4
   13124:	mov	r2, #16
   13128:	movt	r3, #2
   1312c:	stm	sp, {r6, r8}
   13130:	bl	1633c <flatcc_json_printer_int32_field@@Base>
   13134:	movw	r3, #66	; 0x42
   13138:	mov	r0, r5
   1313c:	mov	r1, r4
   13140:	mov	r2, #17
   13144:	stm	sp, {r6, r8}
   13148:	movt	r3, #2
   1314c:	bl	15fc8 <flatcc_json_printer_uint32_field@@Base>
   13150:	movw	r3, #83	; 0x53
   13154:	mov	r0, r5
   13158:	mov	r1, r4
   1315c:	mov	r2, #18
   13160:	str	r8, [sp, #8]
   13164:	str	r8, [sp, #12]
   13168:	str	r6, [sp]
   1316c:	movt	r3, #2
   13170:	bl	16418 <flatcc_json_printer_int64_field@@Base>
   13174:	movw	r3, #100	; 0x64
   13178:	mov	r0, r5
   1317c:	mov	r1, r4
   13180:	mov	r2, #19
   13184:	str	r8, [sp, #8]
   13188:	str	r8, [sp, #12]
   1318c:	str	r6, [sp]
   13190:	movt	r3, #2
   13194:	bl	1608c <flatcc_json_printer_uint64_field@@Base>
   13198:	movw	r3, #117	; 0x75
   1319c:	mov	r0, r5
   131a0:	mov	r1, r4
   131a4:	mov	r2, #20
   131a8:	stm	sp, {r7, r8}
   131ac:	movt	r3, #2
   131b0:	bl	1633c <flatcc_json_printer_int32_field@@Base>
   131b4:	movw	r3, #135	; 0x87
   131b8:	mov	r0, r5
   131bc:	mov	r1, r4
   131c0:	mov	r2, #21
   131c4:	stm	sp, {r7, r8}
   131c8:	movt	r3, #2
   131cc:	bl	15fc8 <flatcc_json_printer_uint32_field@@Base>
   131d0:	movw	r3, #153	; 0x99
   131d4:	mov	r0, r5
   131d8:	mov	r1, r4
   131dc:	mov	r2, #22
   131e0:	str	r8, [sp, #8]
   131e4:	str	r8, [sp, #12]
   131e8:	str	r7, [sp]
   131ec:	movt	r3, #2
   131f0:	bl	16418 <flatcc_json_printer_int64_field@@Base>
   131f4:	movw	r3, #171	; 0xab
   131f8:	mov	r0, r5
   131fc:	mov	r1, r4
   13200:	mov	r2, #23
   13204:	str	r8, [sp, #8]
   13208:	str	r8, [sp, #12]
   1320c:	str	r7, [sp]
   13210:	mov	r8, #23
   13214:	movt	r3, #2
   13218:	bl	1608c <flatcc_json_printer_uint64_field@@Base>
   1321c:	movw	r3, #189	; 0xbd
   13220:	mov	r0, r5
   13224:	mov	r1, r4
   13228:	mov	r2, #24
   1322c:	str	r6, [sp]
   13230:	movt	r3, #2
   13234:	bl	19d00 <flatcc_json_printer_bool_vector_field@@Base>
   13238:	vldr	s0, [pc, #396]	; 133cc <main@@Base+0x594>
   1323c:	movw	r3, #206	; 0xce
   13240:	mov	r0, r5
   13244:	mov	r1, r4
   13248:	mov	r2, #25
   1324c:	str	sl, [sp]
   13250:	movt	r3, #2
   13254:	bl	1660c <flatcc_json_printer_float_field@@Base>
   13258:	movw	r3, #212	; 0xd4
   1325c:	vmov.f32	s0, #8	; 0x40400000  3.0
   13260:	mov	r6, #6
   13264:	mov	r0, r5
   13268:	mov	r1, r4
   1326c:	mov	r2, #26
   13270:	movt	r3, #2
   13274:	str	r6, [sp]
   13278:	bl	1660c <flatcc_json_printer_float_field@@Base>
   1327c:	vldr	s0, [pc, #332]	; 133d0 <main@@Base+0x598>
   13280:	movw	r3, #219	; 0xdb
   13284:	mov	r0, r5
   13288:	mov	r1, r4
   1328c:	mov	r2, #27
   13290:	str	r6, [sp]
   13294:	movt	r3, #2
   13298:	bl	1660c <flatcc_json_printer_float_field@@Base>
   1329c:	movw	r3, #226	; 0xe2
   132a0:	mov	r0, #18
   132a4:	mov	r1, r4
   132a8:	mov	r2, #28
   132ac:	movt	r3, #2
   132b0:	str	r0, [sp]
   132b4:	mov	r0, r5
   132b8:	bl	1d35c <flatcc_json_printer_string_vector_field@@Base>
   132bc:	movw	r0, #14100	; 0x3714
   132c0:	movw	r3, #245	; 0xf5
   132c4:	stm	sp, {r8, r9}
   132c8:	mov	r1, r4
   132cc:	mov	r2, #29
   132d0:	movt	r0, #1
   132d4:	movt	r3, #2
   132d8:	str	r0, [sp, #8]
   132dc:	mov	r0, r5
   132e0:	bl	1cdc4 <flatcc_json_printer_struct_vector_field@@Base>
   132e4:	movw	r3, #269	; 0x10d
   132e8:	mov	r6, #4
   132ec:	mov	r0, r5
   132f0:	mov	r1, r4
   132f4:	mov	r2, #30
   132f8:	movt	r3, #2
   132fc:	str	r6, [sp]
   13300:	bl	17e7c <flatcc_json_printer_uint8_vector_field@@Base>
   13304:	movw	r0, #13872	; 0x3630
   13308:	movw	r3, #274	; 0x112
   1330c:	mov	r1, r4
   13310:	mov	r2, #31
   13314:	str	sl, [sp]
   13318:	str	r6, [sp, #4]
   1331c:	movt	r0, #1
   13320:	movt	r3, #2
   13324:	str	r0, [sp, #8]
   13328:	mov	r0, r5
   1332c:	bl	1cdc4 <flatcc_json_printer_struct_vector_field@@Base>
   13330:	movw	r3, #280	; 0x118
   13334:	mov	r0, #15
   13338:	mov	r1, r4
   1333c:	mov	r2, #32
   13340:	movt	r3, #2
   13344:	str	r0, [sp]
   13348:	mov	r0, r5
   1334c:	bl	1990c <flatcc_json_printer_int64_vector_field@@Base>
   13350:	movw	r3, #296	; 0x128
   13354:	mov	r0, r5
   13358:	mov	r1, r4
   1335c:	mov	r2, #33	; 0x21
   13360:	str	r7, [sp]
   13364:	movt	r3, #2
   13368:	bl	1a4d8 <flatcc_json_printer_double_vector_field@@Base>
   1336c:	movw	r0, #14208	; 0x3780
   13370:	movw	r3, #314	; 0x13a
   13374:	mov	r1, #21
   13378:	mov	r2, #34	; 0x22
   1337c:	movt	r0, #1
   13380:	movt	r3, #2
   13384:	str	r1, [sp]
   13388:	mov	r1, r4
   1338c:	str	r0, [sp, #4]
   13390:	mov	r0, r5
   13394:	bl	1df44 <flatcc_json_printer_table_field@@Base>
   13398:	movw	r0, #14212	; 0x3784
   1339c:	movw	r3, #336	; 0x150
   133a0:	mov	r1, #10
   133a4:	mov	r2, #35	; 0x23
   133a8:	movt	r0, #1
   133ac:	movt	r3, #2
   133b0:	str	r1, [sp]
   133b4:	mov	r1, r4
   133b8:	str	r0, [sp, #4]
   133bc:	mov	r0, r5
   133c0:	bl	1df44 <flatcc_json_printer_table_field@@Base>
   133c4:	sub	sp, fp, #28
   133c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133cc:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   133d0:	andeq	r0, r0, r0
   133d4:	push	{r4, r5, r6, sl, fp, lr}
   133d8:	add	fp, sp, #16
   133dc:	sub	sp, sp, #16
   133e0:	mov	r5, r0
   133e4:	movw	r0, #272	; 0x110
   133e8:	mov	r4, r1
   133ec:	mov	r6, #1
   133f0:	mov	r1, #0
   133f4:	mov	r3, #0
   133f8:	movt	r0, #2
   133fc:	mov	r2, r4
   13400:	stm	sp, {r0, r6}
   13404:	mov	r0, r5
   13408:	bl	174d8 <flatcc_json_printer_float_struct_field@@Base>
   1340c:	movw	r0, #7
   13410:	mov	r1, #1
   13414:	mov	r2, r4
   13418:	mov	r3, #4
   1341c:	movt	r0, #2
   13420:	stm	sp, {r0, r6}
   13424:	mov	r0, r5
   13428:	bl	174d8 <flatcc_json_printer_float_struct_field@@Base>
   1342c:	movw	r0, #347	; 0x15b
   13430:	mov	r1, #2
   13434:	mov	r2, r4
   13438:	mov	r3, #8
   1343c:	movt	r0, #2
   13440:	stm	sp, {r0, r6}
   13444:	mov	r0, r5
   13448:	bl	174d8 <flatcc_json_printer_float_struct_field@@Base>
   1344c:	movw	r0, #349	; 0x15d
   13450:	mov	r6, #5
   13454:	mov	r1, #3
   13458:	mov	r2, r4
   1345c:	mov	r3, #16
   13460:	movt	r0, #2
   13464:	stm	sp, {r0, r6}
   13468:	mov	r0, r5
   1346c:	bl	17540 <flatcc_json_printer_double_struct_field@@Base>
   13470:	movw	r0, #13520	; 0x34d0
   13474:	movw	r1, #355	; 0x163
   13478:	mov	r2, r4
   1347c:	mov	r3, #24
   13480:	movt	r1, #2
   13484:	movt	r0, #1
   13488:	stm	sp, {r1, r6}
   1348c:	str	r0, [sp, #8]
   13490:	mov	r0, r5
   13494:	mov	r1, #4
   13498:	bl	177a8 <flatcc_json_printer_int8_enum_struct_field@@Base>
   1349c:	movw	r0, #13872	; 0x3630
   134a0:	movw	r1, #361	; 0x169
   134a4:	mov	r2, r4
   134a8:	mov	r3, #26
   134ac:	movt	r1, #2
   134b0:	movt	r0, #1
   134b4:	stm	sp, {r1, r6}
   134b8:	str	r0, [sp, #8]
   134bc:	mov	r0, r5
   134c0:	mov	r1, #5
   134c4:	bl	1e818 <flatcc_json_printer_embedded_struct_field@@Base>
   134c8:	sub	sp, fp, #16
   134cc:	pop	{r4, r5, r6, sl, fp, pc}
   134d0:	push	{r4, r5, r6, r7, fp, lr}
   134d4:	add	fp, sp, #16
   134d8:	mov	r4, r0
   134dc:	mvn	r0, #0
   134e0:	uxtb	r7, r1
   134e4:	uxtab	r0, r0, r1
   134e8:	ands	r5, r0, r7
   134ec:	movwne	r5, #1
   134f0:	cmp	r1, #0
   134f4:	beq	13588 <main@@Base+0x750>
   134f8:	ands	r0, r1, #244	; 0xf4
   134fc:	bne	13588 <main@@Base+0x750>
   13500:	mov	r0, r4
   13504:	mov	r1, r5
   13508:	bl	158cc <flatcc_json_printer_delimit_enum_flags@@Base>
   1350c:	mov	r6, #0
   13510:	tst	r7, #1
   13514:	beq	13534 <main@@Base+0x6fc>
   13518:	movw	r2, #367	; 0x16f
   1351c:	mov	r0, r4
   13520:	mov	r1, #0
   13524:	mov	r3, #3
   13528:	movt	r2, #2
   1352c:	bl	15900 <flatcc_json_printer_enum_flag@@Base>
   13530:	mov	r6, #1
   13534:	tst	r7, #2
   13538:	beq	13558 <main@@Base+0x720>
   1353c:	movw	r2, #371	; 0x173
   13540:	mov	r0, r4
   13544:	mov	r1, r6
   13548:	mov	r3, #5
   1354c:	movt	r2, #2
   13550:	bl	15900 <flatcc_json_printer_enum_flag@@Base>
   13554:	add	r6, r6, #1
   13558:	tst	r7, #8
   1355c:	beq	13578 <main@@Base+0x740>
   13560:	movw	r2, #377	; 0x179
   13564:	mov	r0, r4
   13568:	mov	r1, r6
   1356c:	mov	r3, #4
   13570:	movt	r2, #2
   13574:	bl	15900 <flatcc_json_printer_enum_flag@@Base>
   13578:	mov	r0, r4
   1357c:	mov	r1, r5
   13580:	pop	{r4, r5, r6, r7, fp, lr}
   13584:	b	158cc <flatcc_json_printer_delimit_enum_flags@@Base>
   13588:	mov	r0, r4
   1358c:	pop	{r4, r5, r6, r7, fp, lr}
   13590:	b	15670 <flatcc_json_printer_int8@@Base>
   13594:	sub	r1, r1, #1
   13598:	cmp	r1, #3
   1359c:	bhi	135c8 <main@@Base+0x790>
   135a0:	add	r2, pc, #0
   135a4:	ldr	pc, [r2, r1, lsl #2]
   135a8:			; <UNDEFINED> instruction: 0x000135b8
   135ac:	ldrdeq	r3, [r1], -r8
   135b0:	andeq	r3, r1, r8, ror #11
   135b4:	strdeq	r3, [r1], -r8
   135b8:	movw	r1, #382	; 0x17e
   135bc:	mov	r2, #7
   135c0:	movt	r1, #2
   135c4:	b	157e0 <flatcc_json_printer_enum@@Base>
   135c8:	movw	r1, #427	; 0x1ab
   135cc:	mov	r2, #4
   135d0:	movt	r1, #2
   135d4:	b	157e0 <flatcc_json_printer_enum@@Base>
   135d8:	movw	r1, #390	; 0x186
   135dc:	mov	r2, #23
   135e0:	movt	r1, #2
   135e4:	b	157e0 <flatcc_json_printer_enum@@Base>
   135e8:	movw	r1, #414	; 0x19e
   135ec:	mov	r2, #8
   135f0:	movt	r1, #2
   135f4:	b	157e0 <flatcc_json_printer_enum@@Base>
   135f8:	movw	r1, #423	; 0x1a7
   135fc:	mov	r2, #3
   13600:	movt	r1, #2
   13604:	b	157e0 <flatcc_json_printer_enum@@Base>
   13608:	ldrb	r2, [r1, #8]
   1360c:	sub	r2, r2, #1
   13610:	uxtb	r3, r2
   13614:	cmp	r3, #3
   13618:	bxhi	lr
   1361c:	movw	r3, #1156	; 0x484
   13620:	sxtb	r2, r2
   13624:	movt	r3, #2
   13628:	ldr	r2, [r3, r2, lsl #2]
   1362c:	b	1e574 <flatcc_json_printer_union_table@@Base>
   13630:	push	{r4, r5, r6, sl, fp, lr}
   13634:	add	fp, sp, #16
   13638:	sub	sp, sp, #8
   1363c:	mov	r5, r0
   13640:	movw	r0, #133	; 0x85
   13644:	mov	r4, r1
   13648:	mov	r6, #1
   1364c:	mov	r1, #0
   13650:	mov	r3, #0
   13654:	movt	r0, #2
   13658:	mov	r2, r4
   1365c:	stm	sp, {r0, r6}
   13660:	mov	r0, r5
   13664:	bl	172d4 <flatcc_json_printer_int16_struct_field@@Base>
   13668:	movw	r0, #553	; 0x229
   1366c:	mov	r1, #1
   13670:	mov	r2, r4
   13674:	mov	r3, #2
   13678:	movt	r0, #2
   1367c:	stm	sp, {r0, r6}
   13680:	mov	r0, r5
   13684:	bl	17258 <flatcc_json_printer_int8_struct_field@@Base>
   13688:	sub	sp, fp, #16
   1368c:	pop	{r4, r5, r6, sl, fp, pc}
   13690:	push	{r4, r5, r6, sl, fp, lr}
   13694:	add	fp, sp, #16
   13698:	sub	sp, sp, #16
   1369c:	movw	r3, #800	; 0x320
   136a0:	mov	r5, r0
   136a4:	mov	r0, #2
   136a8:	mov	r2, #0
   136ac:	mov	r4, r1
   136b0:	mov	r6, #0
   136b4:	movt	r3, #2
   136b8:	str	r0, [sp]
   136bc:	mov	r0, r5
   136c0:	bl	159cc <flatcc_json_printer_string_field@@Base>
   136c4:	movw	r3, #803	; 0x323
   136c8:	mov	r0, #3
   136cc:	mov	r1, r4
   136d0:	mov	r2, #1
   136d4:	str	r6, [sp, #8]
   136d8:	str	r6, [sp, #12]
   136dc:	movt	r3, #2
   136e0:	str	r0, [sp]
   136e4:	mov	r0, r5
   136e8:	bl	16418 <flatcc_json_printer_int64_field@@Base>
   136ec:	movw	r3, #807	; 0x327
   136f0:	mov	r0, #5
   136f4:	mov	r1, r4
   136f8:	mov	r2, #2
   136fc:	movt	r3, #2
   13700:	stm	sp, {r0, r6}
   13704:	mov	r0, r5
   13708:	bl	15f04 <flatcc_json_printer_uint16_field@@Base>
   1370c:	sub	sp, fp, #16
   13710:	pop	{r4, r5, r6, sl, fp, pc}
   13714:	push	{r4, r5, fp, lr}
   13718:	add	fp, sp, #8
   1371c:	sub	sp, sp, #8
   13720:	mov	r4, r1
   13724:	movw	r1, #800	; 0x320
   13728:	mov	r5, r0
   1372c:	mov	r0, #2
   13730:	mov	r3, #0
   13734:	movt	r1, #2
   13738:	str	r0, [sp, #4]
   1373c:	mov	r0, r5
   13740:	mov	r2, r4
   13744:	str	r1, [sp]
   13748:	mov	r1, #0
   1374c:	bl	17198 <flatcc_json_printer_uint32_struct_field@@Base>
   13750:	movw	r1, #813	; 0x32d
   13754:	mov	r0, #8
   13758:	mov	r2, r4
   1375c:	mov	r3, #4
   13760:	movt	r1, #2
   13764:	str	r0, [sp, #4]
   13768:	mov	r0, r5
   1376c:	str	r1, [sp]
   13770:	mov	r1, #1
   13774:	bl	17198 <flatcc_json_printer_uint32_struct_field@@Base>
   13778:	sub	sp, fp, #8
   1377c:	pop	{r4, r5, fp, pc}
   13780:	bx	lr
   13784:	push	{r4, r5, r6, sl, fp, lr}
   13788:	add	fp, sp, #16
   1378c:	sub	sp, sp, #8
   13790:	movw	r3, #861	; 0x35d
   13794:	mov	r5, r0
   13798:	mov	r0, #4
   1379c:	mov	r6, #0
   137a0:	mov	r2, #0
   137a4:	mov	r4, r1
   137a8:	movt	r3, #2
   137ac:	stm	sp, {r0, r6}
   137b0:	mov	r0, r5
   137b4:	bl	15c58 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   137b8:	movw	r3, #822	; 0x336
   137bc:	mov	r0, #1
   137c0:	mov	r1, #7
   137c4:	mov	r2, #1
   137c8:	movt	r3, #2
   137cc:	str	r1, [sp]
   137d0:	str	r0, [sp, #4]
   137d4:	mov	r0, r5
   137d8:	mov	r1, r4
   137dc:	bl	15c58 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   137e0:	movw	r3, #830	; 0x33e
   137e4:	mov	r0, #6
   137e8:	mov	r1, r4
   137ec:	mov	r2, #2
   137f0:	movt	r3, #2
   137f4:	stm	sp, {r0, r6}
   137f8:	mov	r0, r5
   137fc:	bl	15c58 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13800:	sub	sp, fp, #16
   13804:	pop	{r4, r5, r6, sl, fp, pc}
   13808:	push	{r4, r5, r6, r7, fp, lr}
   1380c:	add	fp, sp, #16
   13810:	sub	sp, sp, #16
   13814:	movw	r3, #65491	; 0xffd3
   13818:	movw	r7, #13520	; 0x34d0
   1381c:	mov	r5, r0
   13820:	mov	r0, #5
   13824:	mov	r6, #2
   13828:	mov	r2, #0
   1382c:	mov	r4, r1
   13830:	movt	r3, #1
   13834:	movt	r7, #1
   13838:	stm	sp, {r0, r6, r7}
   1383c:	mov	r0, r5
   13840:	bl	16b74 <flatcc_json_printer_int8_enum_field@@Base>
   13844:	movw	r3, #432	; 0x1b0
   13848:	mov	r0, #6
   1384c:	mov	r1, r4
   13850:	mov	r2, #1
   13854:	movt	r3, #2
   13858:	stm	sp, {r0, r6, r7}
   1385c:	mov	r0, r5
   13860:	bl	16b74 <flatcc_json_printer_int8_enum_field@@Base>
   13864:	movw	r3, #439	; 0x1b7
   13868:	mov	r0, r5
   1386c:	mov	r1, r4
   13870:	mov	r2, #2
   13874:	str	r6, [sp]
   13878:	str	r6, [sp, #4]
   1387c:	movt	r3, #2
   13880:	bl	15e40 <flatcc_json_printer_uint8_field@@Base>
   13884:	movw	r3, #442	; 0x1ba
   13888:	mov	r0, #3
   1388c:	mov	r1, r4
   13890:	mov	r2, #3
   13894:	movt	r3, #2
   13898:	stm	sp, {r0, r6}
   1389c:	mov	r0, r5
   138a0:	bl	15e40 <flatcc_json_printer_uint8_field@@Base>
   138a4:	sub	sp, fp, #16
   138a8:	pop	{r4, r5, r6, r7, fp, pc}
   138ac:	bx	lr
   138b0:	push	{r4, r5, fp, lr}
   138b4:	add	fp, sp, #8
   138b8:	sub	sp, sp, #16
   138bc:	mov	r5, r0
   138c0:	movw	r0, #14684	; 0x395c
   138c4:	movw	r3, #446	; 0x1be
   138c8:	mov	r4, r1
   138cc:	mov	r1, #6
   138d0:	mov	r2, #0
   138d4:	movt	r0, #1
   138d8:	movt	r3, #2
   138dc:	str	r1, [sp]
   138e0:	mov	r1, r4
   138e4:	str	r0, [sp, #4]
   138e8:	mov	r0, r5
   138ec:	bl	1df44 <flatcc_json_printer_table_field@@Base>
   138f0:	movw	r0, #14840	; 0x39f8
   138f4:	movw	r3, #453	; 0x1c5
   138f8:	mov	r1, #5
   138fc:	mov	r2, #1
   13900:	movt	r0, #1
   13904:	movt	r3, #2
   13908:	str	r1, [sp]
   1390c:	mov	r1, r4
   13910:	str	r0, [sp, #4]
   13914:	mov	r0, r5
   13918:	bl	1df44 <flatcc_json_printer_table_field@@Base>
   1391c:	movw	r0, #13832	; 0x3608
   13920:	movw	r1, #13716	; 0x3594
   13924:	movw	r3, #459	; 0x1cb
   13928:	mov	r2, #7
   1392c:	movt	r0, #1
   13930:	movt	r1, #1
   13934:	movt	r3, #2
   13938:	str	r2, [sp]
   1393c:	mov	r2, #3
   13940:	str	r1, [sp, #4]
   13944:	str	r0, [sp, #8]
   13948:	mov	r0, r5
   1394c:	mov	r1, r4
   13950:	bl	1db94 <flatcc_json_printer_union_vector_field@@Base>
   13954:	sub	sp, fp, #8
   13958:	pop	{r4, r5, fp, pc}
   1395c:	push	{r4, r5, r6, sl, fp, lr}
   13960:	add	fp, sp, #16
   13964:	sub	sp, sp, #8
   13968:	mov	r5, r0
   1396c:	movw	r0, #15068	; 0x3adc
   13970:	movw	r3, #467	; 0x1d3
   13974:	mov	r4, r1
   13978:	mov	r1, #21
   1397c:	mov	r2, #0
   13980:	movt	r0, #1
   13984:	movt	r3, #2
   13988:	str	r1, [sp]
   1398c:	mov	r1, r4
   13990:	str	r0, [sp, #4]
   13994:	mov	r0, r5
   13998:	bl	1df44 <flatcc_json_printer_table_field@@Base>
   1399c:	movw	r0, #15392	; 0x3c20
   139a0:	movw	r3, #489	; 0x1e9
   139a4:	mov	r6, #22
   139a8:	mov	r1, r4
   139ac:	mov	r2, #1
   139b0:	movt	r0, #1
   139b4:	movt	r3, #2
   139b8:	str	r6, [sp]
   139bc:	str	r0, [sp, #4]
   139c0:	mov	r0, r5
   139c4:	bl	1df44 <flatcc_json_printer_table_field@@Base>
   139c8:	movw	r0, #15492	; 0x3c84
   139cc:	movw	r3, #512	; 0x200
   139d0:	mov	r1, r4
   139d4:	mov	r2, #2
   139d8:	str	r6, [sp]
   139dc:	movt	r0, #1
   139e0:	movt	r3, #2
   139e4:	str	r0, [sp, #4]
   139e8:	mov	r0, r5
   139ec:	bl	1df44 <flatcc_json_printer_table_field@@Base>
   139f0:	sub	sp, fp, #16
   139f4:	pop	{r4, r5, r6, sl, fp, pc}
   139f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   139fc:	add	fp, sp, #24
   13a00:	sub	sp, sp, #16
   13a04:	movw	r6, #15772	; 0x3d9c
   13a08:	movw	r3, #662	; 0x296
   13a0c:	movw	r7, #15592	; 0x3ce8
   13a10:	mov	r5, r0
   13a14:	mov	r0, #14
   13a18:	mov	r2, #1
   13a1c:	mov	r4, r1
   13a20:	movt	r6, #1
   13a24:	movt	r3, #2
   13a28:	movt	r7, #1
   13a2c:	stm	sp, {r0, r7}
   13a30:	mov	r0, r5
   13a34:	str	r6, [sp, #8]
   13a38:	bl	1e124 <flatcc_json_printer_union_field@@Base>
   13a3c:	movw	r3, #677	; 0x2a5
   13a40:	mov	r8, #10
   13a44:	mov	r0, r5
   13a48:	mov	r1, r4
   13a4c:	mov	r2, #3
   13a50:	str	r7, [sp, #4]
   13a54:	str	r6, [sp, #8]
   13a58:	movt	r3, #2
   13a5c:	str	r8, [sp]
   13a60:	bl	1e124 <flatcc_json_printer_union_field@@Base>
   13a64:	movw	r3, #688	; 0x2b0
   13a68:	mov	r0, #9
   13a6c:	mov	r1, r4
   13a70:	mov	r2, #5
   13a74:	mov	r9, #5
   13a78:	movt	r3, #2
   13a7c:	stm	sp, {r0, r7}
   13a80:	mov	r0, r5
   13a84:	str	r6, [sp, #8]
   13a88:	bl	1e124 <flatcc_json_printer_union_field@@Base>
   13a8c:	movw	r3, #698	; 0x2ba
   13a90:	mov	r0, r5
   13a94:	mov	r1, r4
   13a98:	mov	r2, #7
   13a9c:	str	r9, [sp]
   13aa0:	str	r7, [sp, #4]
   13aa4:	str	r6, [sp, #8]
   13aa8:	movt	r3, #2
   13aac:	bl	1e124 <flatcc_json_printer_union_field@@Base>
   13ab0:	movw	r3, #704	; 0x2c0
   13ab4:	mov	r0, r5
   13ab8:	mov	r1, r4
   13abc:	mov	r2, #9
   13ac0:	str	r8, [sp]
   13ac4:	str	r7, [sp, #4]
   13ac8:	str	r6, [sp, #8]
   13acc:	movt	r3, #2
   13ad0:	bl	1db94 <flatcc_json_printer_union_vector_field@@Base>
   13ad4:	sub	sp, fp, #24
   13ad8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13adc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ae0:	add	fp, sp, #24
   13ae4:	sub	sp, sp, #16
   13ae8:	movw	r3, #535	; 0x217
   13aec:	mov	r9, #4
   13af0:	mov	r2, #0
   13af4:	mov	r4, r1
   13af8:	mov	r5, r0
   13afc:	mov	r6, #0
   13b00:	movt	r3, #2
   13b04:	str	r9, [sp]
   13b08:	bl	159cc <flatcc_json_printer_string_field@@Base>
   13b0c:	movw	r3, #540	; 0x21c
   13b10:	mov	r8, #9
   13b14:	mov	r0, r5
   13b18:	mov	r1, r4
   13b1c:	mov	r2, #1
   13b20:	str	r6, [sp, #4]
   13b24:	movt	r3, #2
   13b28:	str	r8, [sp]
   13b2c:	bl	15fc8 <flatcc_json_printer_uint32_field@@Base>
   13b30:	movw	r3, #550	; 0x226
   13b34:	mov	r0, r5
   13b38:	mov	r1, r4
   13b3c:	mov	r2, #2
   13b40:	str	r9, [sp]
   13b44:	movt	r3, #2
   13b48:	bl	159cc <flatcc_json_printer_string_field@@Base>
   13b4c:	movw	r3, #555	; 0x22b
   13b50:	mov	r7, #8
   13b54:	mov	r0, r5
   13b58:	mov	r1, r4
   13b5c:	mov	r2, #3
   13b60:	str	r6, [sp, #8]
   13b64:	str	r6, [sp, #12]
   13b68:	movt	r3, #2
   13b6c:	str	r7, [sp]
   13b70:	bl	16418 <flatcc_json_printer_int64_field@@Base>
   13b74:	movw	r3, #564	; 0x234
   13b78:	mov	r0, r5
   13b7c:	mov	r1, r4
   13b80:	mov	r2, #4
   13b84:	str	r9, [sp]
   13b88:	movt	r3, #2
   13b8c:	bl	159cc <flatcc_json_printer_string_field@@Base>
   13b90:	movw	r3, #569	; 0x239
   13b94:	mov	r0, r5
   13b98:	mov	r1, r4
   13b9c:	mov	r2, #5
   13ba0:	str	r6, [sp, #8]
   13ba4:	str	r6, [sp, #12]
   13ba8:	str	r7, [sp]
   13bac:	movt	r3, #2
   13bb0:	bl	16418 <flatcc_json_printer_int64_field@@Base>
   13bb4:	movw	r3, #578	; 0x242
   13bb8:	mov	r0, r5
   13bbc:	mov	r1, r4
   13bc0:	mov	r2, #6
   13bc4:	str	r8, [sp]
   13bc8:	str	r6, [sp, #4]
   13bcc:	movt	r3, #2
   13bd0:	bl	15fc8 <flatcc_json_printer_uint32_field@@Base>
   13bd4:	movw	r3, #588	; 0x24c
   13bd8:	mov	r0, r5
   13bdc:	mov	r1, r4
   13be0:	mov	r2, #7
   13be4:	str	r6, [sp, #8]
   13be8:	str	r6, [sp, #12]
   13bec:	str	r7, [sp]
   13bf0:	movt	r3, #2
   13bf4:	bl	16418 <flatcc_json_printer_int64_field@@Base>
   13bf8:	movw	r3, #597	; 0x255
   13bfc:	mov	r0, r5
   13c00:	mov	r1, r4
   13c04:	mov	r2, #8
   13c08:	str	r8, [sp]
   13c0c:	str	r6, [sp, #4]
   13c10:	movt	r3, #2
   13c14:	bl	15fc8 <flatcc_json_printer_uint32_field@@Base>
   13c18:	sub	sp, fp, #24
   13c1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13c20:	push	{r4, r5, r6, sl, fp, lr}
   13c24:	add	fp, sp, #16
   13c28:	sub	sp, sp, #16
   13c2c:	movw	r3, #607	; 0x25f
   13c30:	mov	r5, r0
   13c34:	mov	r0, #15
   13c38:	mov	r6, #0
   13c3c:	mov	r2, #0
   13c40:	mov	r4, r1
   13c44:	movt	r3, #2
   13c48:	str	r0, [sp]
   13c4c:	mov	r0, r5
   13c50:	str	r6, [sp, #8]
   13c54:	str	r6, [sp, #12]
   13c58:	bl	16418 <flatcc_json_printer_int64_field@@Base>
   13c5c:	movw	r3, #623	; 0x26f
   13c60:	mov	r0, #16
   13c64:	mov	r1, r4
   13c68:	mov	r2, #1
   13c6c:	movt	r3, #2
   13c70:	stm	sp, {r0, r6}
   13c74:	mov	r0, r5
   13c78:	bl	15fc8 <flatcc_json_printer_uint32_field@@Base>
   13c7c:	sub	sp, fp, #16
   13c80:	pop	{r4, r5, r6, sl, fp, pc}
   13c84:	push	{r4, r5, r6, sl, fp, lr}
   13c88:	add	fp, sp, #16
   13c8c:	sub	sp, sp, #16
   13c90:	movw	r3, #607	; 0x25f
   13c94:	mov	r5, r0
   13c98:	mov	r0, #15
   13c9c:	mov	r6, #0
   13ca0:	mov	r2, #0
   13ca4:	mov	r4, r1
   13ca8:	movt	r3, #2
   13cac:	str	r0, [sp]
   13cb0:	mov	r0, r5
   13cb4:	str	r6, [sp, #8]
   13cb8:	str	r6, [sp, #12]
   13cbc:	bl	16418 <flatcc_json_printer_int64_field@@Base>
   13cc0:	movw	r3, #640	; 0x280
   13cc4:	mov	r0, #21
   13cc8:	mov	r1, r4
   13ccc:	mov	r2, #1
   13cd0:	movt	r3, #2
   13cd4:	stm	sp, {r0, r6}
   13cd8:	mov	r0, r5
   13cdc:	bl	15fc8 <flatcc_json_printer_uint32_field@@Base>
   13ce0:	sub	sp, fp, #16
   13ce4:	pop	{r4, r5, r6, sl, fp, pc}
   13ce8:	sub	r2, r1, #2
   13cec:	cmp	r2, #9
   13cf0:	bhi	13d34 <main@@Base+0xefc>
   13cf4:	add	r1, pc, #0
   13cf8:	ldr	pc, [r1, r2, lsl #2]
   13cfc:	andeq	r3, r1, r4, lsr #26
   13d00:	andeq	r3, r1, ip, asr #26
   13d04:	andeq	r3, r1, ip, asr #26
   13d08:	andeq	r3, r1, ip, asr #26
   13d0c:	andeq	r3, r1, ip, asr #26
   13d10:	andeq	r3, r1, ip, asr #26
   13d14:	andeq	r3, r1, ip, asr sp
   13d18:	andeq	r3, r1, ip, ror #26
   13d1c:	andeq	r3, r1, ip, ror sp
   13d20:	andeq	r3, r1, ip, lsl #27
   13d24:	movw	r1, #715	; 0x2cb
   13d28:	mov	r2, #5
   13d2c:	movt	r1, #2
   13d30:	b	157e0 <flatcc_json_printer_enum@@Base>
   13d34:	cmp	r1, #255	; 0xff
   13d38:	bne	13d4c <main@@Base+0xf14>
   13d3c:	movw	r1, #750	; 0x2ee
   13d40:	mov	r2, #6
   13d44:	movt	r1, #2
   13d48:	b	157e0 <flatcc_json_printer_enum@@Base>
   13d4c:	movw	r1, #427	; 0x1ab
   13d50:	mov	r2, #4
   13d54:	movt	r1, #2
   13d58:	b	157e0 <flatcc_json_printer_enum@@Base>
   13d5c:	movw	r1, #721	; 0x2d1
   13d60:	mov	r2, #8
   13d64:	movt	r1, #2
   13d68:	b	157e0 <flatcc_json_printer_enum@@Base>
   13d6c:	movw	r1, #730	; 0x2da
   13d70:	mov	r2, #5
   13d74:	movt	r1, #2
   13d78:	b	157e0 <flatcc_json_printer_enum@@Base>
   13d7c:	movw	r1, #736	; 0x2e0
   13d80:	mov	r2, #7
   13d84:	movt	r1, #2
   13d88:	b	157e0 <flatcc_json_printer_enum@@Base>
   13d8c:	movw	r1, #744	; 0x2e8
   13d90:	mov	r2, #5
   13d94:	movt	r1, #2
   13d98:	b	157e0 <flatcc_json_printer_enum@@Base>
   13d9c:	ldrb	r3, [r1, #8]
   13da0:	sub	r2, r3, #2
   13da4:	cmp	r2, #9
   13da8:	bhi	13de8 <main@@Base+0xfb0>
   13dac:	add	r3, pc, #0
   13db0:	ldr	pc, [r3, r2, lsl #2]
   13db4:	strdeq	r3, [r1], -r4
   13db8:	andeq	r3, r1, ip, lsl #28
   13dbc:	andeq	r3, r1, ip, lsl #28
   13dc0:	andeq	r3, r1, ip, lsl #28
   13dc4:	andeq	r3, r1, ip, lsl #28
   13dc8:	andeq	r3, r1, ip, lsl #28
   13dcc:	andeq	r3, r1, r0, lsl #28
   13dd0:	ldrdeq	r3, [r1], -ip
   13dd4:	ldrdeq	r3, [r1], -ip
   13dd8:	strdeq	r3, [r1], -r0
   13ddc:	movw	r2, #15996	; 0x3e7c
   13de0:	movt	r2, #1
   13de4:	b	1e6e4 <flatcc_json_printer_union_struct@@Base>
   13de8:	cmp	r3, #255	; 0xff
   13dec:	bxne	lr
   13df0:	b	1e804 <flatcc_json_printer_union_string@@Base>
   13df4:	movw	r2, #15888	; 0x3e10
   13df8:	movt	r2, #1
   13dfc:	b	1e574 <flatcc_json_printer_union_table@@Base>
   13e00:	movw	r2, #15940	; 0x3e44
   13e04:	movt	r2, #1
   13e08:	b	1e6e4 <flatcc_json_printer_union_struct@@Base>
   13e0c:	bx	lr
   13e10:	push	{fp, lr}
   13e14:	mov	fp, sp
   13e18:	sub	sp, sp, #8
   13e1c:	mov	r3, #19
   13e20:	mov	r2, #0
   13e24:	str	r3, [sp]
   13e28:	movw	r3, #757	; 0x2f5
   13e2c:	str	r2, [sp, #4]
   13e30:	mov	r2, #0
   13e34:	movt	r3, #2
   13e38:	bl	1633c <flatcc_json_printer_int32_field@@Base>
   13e3c:	mov	sp, fp
   13e40:	pop	{fp, pc}
   13e44:	push	{fp, lr}
   13e48:	mov	fp, sp
   13e4c:	sub	sp, sp, #8
   13e50:	movw	r3, #777	; 0x309
   13e54:	mov	r2, r1
   13e58:	mov	r1, #11
   13e5c:	movt	r3, #2
   13e60:	str	r1, [sp, #4]
   13e64:	mov	r1, #0
   13e68:	str	r3, [sp]
   13e6c:	mov	r3, #0
   13e70:	bl	17138 <flatcc_json_printer_uint16_struct_field@@Base>
   13e74:	mov	sp, fp
   13e78:	pop	{fp, pc}
   13e7c:	push	{fp, lr}
   13e80:	mov	fp, sp
   13e84:	sub	sp, sp, #8
   13e88:	movw	r3, #789	; 0x315
   13e8c:	mov	r2, r1
   13e90:	mov	r1, #10
   13e94:	movt	r3, #2
   13e98:	str	r1, [sp, #4]
   13e9c:	mov	r1, #0
   13ea0:	str	r3, [sp]
   13ea4:	mov	r3, #0
   13ea8:	bl	17350 <flatcc_json_printer_int32_struct_field@@Base>
   13eac:	mov	sp, fp
   13eb0:	pop	{fp, pc}
   13eb4:	andeq	r0, r0, r0

00013eb8 <flatcc_json_printer_error_string@@Base>:
   13eb8:	cmp	r0, #3
   13ebc:	movwhi	r0, #1209	; 0x4b9
   13ec0:	movthi	r0, #2
   13ec4:	bxhi	lr
   13ec8:	movw	r1, #4140	; 0x102c
   13ecc:	movt	r1, #2
   13ed0:	ldr	r0, [r1, r0, lsl #2]
   13ed4:	bx	lr

00013ed8 <flatcc_json_printer_fmt_float@@Base>:
   13ed8:	vcvt.f64.f32	d0, s0
   13edc:	b	13ee0 <flatcc_json_printer_fmt_float@@Base+0x8>
   13ee0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ee4:	add	fp, sp, #28
   13ee8:	sub	sp, sp, #4
   13eec:	vpush	{d8}
   13ef0:	sub	sp, sp, #176	; 0xb0
   13ef4:	cmp	r0, #0
   13ef8:	beq	146ec <flatcc_json_printer_fmt_float@@Base+0x814>
   13efc:	vmov	r3, r2, d0
   13f00:	mov	r5, #-2147483648	; 0x80000000
   13f04:	mov	r6, #0
   13f08:	vorr	d8, d0, d0
   13f0c:	orr	r1, r5, #266338304	; 0xfe00000
   13f10:	orr	r1, r1, #1879048192	; 0x70000000
   13f14:	lsl	r7, r2, #1
   13f18:	subs	r6, r6, r3, lsl #1
   13f1c:	orr	r7, r7, r3, lsr #31
   13f20:	sbcs	r1, r1, r7
   13f24:	bcs	13f44 <flatcc_json_printer_fmt_float@@Base+0x6c>
   13f28:	movw	r1, #1782	; 0x6f6
   13f2c:	movt	r1, #2
   13f30:	sub	sp, fp, #40	; 0x28
   13f34:	vpop	{d8}
   13f38:	add	sp, sp, #4
   13f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f40:	b	12968 <sprintf@plt>
   13f44:	cmn	r2, #1
   13f48:	ble	13f54 <flatcc_json_printer_fmt_float@@Base+0x7c>
   13f4c:	mov	r4, r0
   13f50:	b	13f68 <flatcc_json_printer_fmt_float@@Base+0x90>
   13f54:	vneg.f64	d8, d8
   13f58:	mov	r1, #45	; 0x2d
   13f5c:	mov	r4, r0
   13f60:	eor	r2, r2, r5
   13f64:	strb	r1, [r4], #1
   13f68:	movw	r7, #0
   13f6c:	movt	r7, #32752	; 0x7ff0
   13f70:	eor	r1, r2, r7
   13f74:	orrs	r1, r3, r1
   13f78:	beq	13f94 <flatcc_json_printer_fmt_float@@Base+0xbc>
   13f7c:	orrs	r1, r3, r2
   13f80:	bne	13fa8 <flatcc_json_printer_fmt_float@@Base+0xd0>
   13f84:	mov	r1, #48	; 0x30
   13f88:	strh	r1, [r4], -r0
   13f8c:	add	r0, r4, #1
   13f90:	b	146d4 <flatcc_json_printer_fmt_float@@Base+0x7fc>
   13f94:	movw	r1, #28265	; 0x6e69
   13f98:	movt	r1, #102	; 0x66
   13f9c:	str	r1, [r4], -r0
   13fa0:	add	r0, r4, #3
   13fa4:	b	146d4 <flatcc_json_printer_fmt_float@@Base+0x7fc>
   13fa8:	str	r0, [sp, #88]	; 0x58
   13fac:	vmov	r5, r0, d8
   13fb0:	str	r4, [sp, #108]	; 0x6c
   13fb4:	mov	r6, r0
   13fb8:	ands	r9, r0, r7
   13fbc:	str	r0, [sp, #36]	; 0x24
   13fc0:	bfc	r6, #20, #12
   13fc4:	beq	13fdc <flatcc_json_printer_fmt_float@@Base+0x104>
   13fc8:	movw	r0, #64461	; 0xfbcd
   13fcc:	orr	r4, r6, #1048576	; 0x100000
   13fd0:	movt	r0, #65535	; 0xffff
   13fd4:	add	r8, r0, r9, lsr #20
   13fd8:	b	13fe8 <flatcc_json_printer_fmt_float@@Base+0x110>
   13fdc:	movw	r8, #64462	; 0xfbce
   13fe0:	mov	r4, r6
   13fe4:	movt	r8, #65535	; 0xffff
   13fe8:	mov	r7, #0
   13fec:	sub	r0, fp, #88	; 0x58
   13ff0:	mov	r2, r5
   13ff4:	mov	r3, r4
   13ff8:	str	r8, [sp]
   13ffc:	str	r7, [sp, #4]
   14000:	bl	1f748 <flatcc_json_printer_clear@@Base+0xe4>
   14004:	mov	r0, #1
   14008:	str	r7, [sp, #4]
   1400c:	sub	sl, r8, #1
   14010:	orr	r2, r0, r5, lsl #1
   14014:	lsl	r0, r4, #1
   14018:	str	sl, [sp]
   1401c:	orr	r7, r0, r5, lsr #31
   14020:	sub	r0, fp, #104	; 0x68
   14024:	mov	r3, r7
   14028:	bl	1f748 <flatcc_json_printer_clear@@Base+0xe4>
   1402c:	vcmpe.f64	d8, #0.0
   14030:	vmrs	APSR_nzcv, fpscr
   14034:	ble	1470c <flatcc_json_printer_fmt_float@@Base+0x834>
   14038:	vldr	d16, [pc, #944]	; 143f0 <flatcc_json_printer_fmt_float@@Base+0x518>
   1403c:	vcmpe.f64	d8, d16
   14040:	vmrs	APSR_nzcv, fpscr
   14044:	bhi	1470c <flatcc_json_printer_fmt_float@@Base+0x834>
   14048:	orrs	r1, r5, r6
   1404c:	clz	r2, r9
   14050:	mvn	r3, #60	; 0x3c
   14054:	str	r5, [sp, #84]	; 0x54
   14058:	vldr	d16, [pc, #920]	; 143f8 <flatcc_json_printer_fmt_float@@Base+0x520>
   1405c:	lsl	r0, r4, #2
   14060:	movwne	r1, #1
   14064:	lsr	r2, r2, #5
   14068:	orrs	r1, r1, r2
   1406c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14070:	orreq	r7, r0, r5, lsr #30
   14074:	lsl	r0, r5, #2
   14078:	lslne	r0, r5, #1
   1407c:	subs	r0, r0, #1
   14080:	sub	r2, r3, r2
   14084:	vmov	s0, r2
   14088:	sbc	r2, r7, #0
   1408c:	cmp	r1, #0
   14090:	subeq	sl, r8, #2
   14094:	vcvt.f64.s32	d17, s0
   14098:	ldr	r8, [fp, #-96]	; 0xffffffa0
   1409c:	sub	r1, sl, r8
   140a0:	vmul.f64	d16, d17, d16
   140a4:	rsb	r3, r1, #32
   140a8:	lsl	r6, r0, r1
   140ac:	lsr	r3, r0, r3
   140b0:	orr	r7, r3, r2, lsl r1
   140b4:	subs	r2, r1, #32
   140b8:	sub	r1, fp, #88	; 0x58
   140bc:	lslpl	r7, r0, r2
   140c0:	add	r2, r1, #8
   140c4:	sub	r1, fp, #104	; 0x68
   140c8:	movwpl	r6, #0
   140cc:	add	r1, r1, #8
   140d0:	vcvt.s32.f64	s0, d16
   140d4:	vcmpe.f64	d16, #0.0
   140d8:	str	r1, [sp, #104]	; 0x68
   140dc:	vmrs	APSR_nzcv, fpscr
   140e0:	vmov	r0, s0
   140e4:	bmi	140fc <flatcc_json_printer_fmt_float@@Base+0x224>
   140e8:	vcvt.f64.s32	d17, s0
   140ec:	vsub.f64	d16, d16, d17
   140f0:	vcmp.f64	d16, #0.0
   140f4:	vmrs	APSR_nzcv, fpscr
   140f8:	addne	r0, r0, #1
   140fc:	movw	r1, #347	; 0x15b
   14100:	ldrd	r4, [r2]
   14104:	mov	sl, #0
   14108:	str	r2, [sp, #100]	; 0x64
   1410c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14110:	ldr	r3, [fp, #-84]	; 0xffffffac
   14114:	add	r0, r0, r1
   14118:	str	sl, [sp, #20]
   1411c:	asr	r1, r0, #31
   14120:	add	r0, r0, r1, lsr #29
   14124:	mvn	r1, #14
   14128:	stm	sp, {r4, r5}
   1412c:	and	r0, r1, r0, lsl #1
   14130:	movw	r1, #2688	; 0xa80
   14134:	movt	r1, #2
   14138:	add	r0, r0, r1
   1413c:	ldrsh	r9, [r0, #24]
   14140:	ldrd	r4, [r0, #16]
   14144:	str	r9, [sp, #16]
   14148:	str	r0, [sp, #40]	; 0x28
   1414c:	sub	r0, fp, #88	; 0x58
   14150:	str	r5, [sp, #12]
   14154:	str	r4, [sp, #8]
   14158:	bl	1f7ec <flatcc_json_printer_clear@@Base+0x188>
   1415c:	add	r0, sp, #8
   14160:	stm	sp, {r8, sl}
   14164:	mov	r2, r6
   14168:	mov	r3, r7
   1416c:	stm	r0, {r4, r5, r9, sl}
   14170:	sub	r0, fp, #56	; 0x38
   14174:	bl	1f7ec <flatcc_json_printer_clear@@Base+0x188>
   14178:	ldr	r6, [sp, #104]	; 0x68
   1417c:	ldr	r2, [fp, #-104]	; 0xffffff98
   14180:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14184:	ldr	sl, [fp, #-56]	; 0xffffffc8
   14188:	ldr	r7, [fp, #-52]	; 0xffffffcc
   1418c:	ldr	r8, [fp, #-48]	; 0xffffffd0
   14190:	ldrd	r0, [r6]
   14194:	stm	sp, {r0, r1, r4}
   14198:	mov	r4, #0
   1419c:	sub	r0, fp, #104	; 0x68
   141a0:	str	r5, [sp, #12]
   141a4:	str	r9, [sp, #16]
   141a8:	str	r4, [sp, #20]
   141ac:	bl	1f7ec <flatcc_json_printer_clear@@Base+0x188>
   141b0:	ldr	r0, [sp, #100]	; 0x64
   141b4:	ldr	r6, [r6]
   141b8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   141bc:	subs	r2, sl, #1
   141c0:	add	ip, sp, #8
   141c4:	sbc	r3, r7, #0
   141c8:	ldr	r5, [r0]
   141cc:	ldr	r0, [r0, #4]
   141d0:	str	r0, [sp, #80]	; 0x50
   141d4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   141d8:	str	r0, [sp, #68]	; 0x44
   141dc:	ldr	r0, [fp, #-84]	; 0xffffffac
   141e0:	str	r0, [sp, #72]	; 0x48
   141e4:	ldr	r0, [fp, #-104]	; 0xffffff98
   141e8:	str	r6, [sp, #56]	; 0x38
   141ec:	str	r6, [sp]
   141f0:	str	r4, [sp, #4]
   141f4:	stm	ip, {r2, r3, r8}
   141f8:	str	r4, [sp, #20]
   141fc:	adds	r8, r0, #1
   14200:	sub	r0, fp, #56	; 0x38
   14204:	adc	r9, r1, #0
   14208:	mov	r2, r8
   1420c:	mov	r3, r9
   14210:	bl	1f84c <flatcc_json_printer_clear@@Base+0x1e8>
   14214:	rsb	ip, r5, #0
   14218:	add	r1, r5, #32
   1421c:	movw	r7, #1233	; 0x4d1
   14220:	movw	sl, #4080	; 0xff0
   14224:	mov	r4, #1
   14228:	str	r5, [sp, #76]	; 0x4c
   1422c:	str	r8, [sp, #60]	; 0x3c
   14230:	ldr	lr, [fp, #-52]	; 0xffffffcc
   14234:	lsr	r0, r8, ip
   14238:	movt	sl, #2
   1423c:	orr	r2, r0, r9, lsl r1
   14240:	mvn	r0, #31
   14244:	subs	r3, r0, r5
   14248:	movw	r0, #14609	; 0x3911
   1424c:	movt	r0, #1
   14250:	lsrpl	r2, r9, r3
   14254:	mla	r7, r5, r7, r0
   14258:	add	r5, r4, r7, asr #12
   1425c:	ldr	r6, [sl, r5, lsl #2]
   14260:	cmp	r6, r2
   14264:	lsr	r6, r4, r1
   14268:	asrhi	r5, r7, #12
   1426c:	cmp	r3, #0
   14270:	lslpl	r6, r4, r3
   14274:	lsl	r3, r4, ip
   14278:	movwpl	r3, #0
   1427c:	subs	r0, r3, #1
   14280:	sbc	r1, r6, #0
   14284:	and	r4, r0, r8
   14288:	cmp	r5, #0
   1428c:	add	r8, sp, #44	; 0x2c
   14290:	and	r7, r1, r9
   14294:	str	r7, [sp, #92]	; 0x5c
   14298:	ldr	r7, [fp, #-56]	; 0xffffffc8
   1429c:	str	r9, [sp, #64]	; 0x40
   142a0:	stm	r8, {r0, r3, r6}
   142a4:	str	r1, [sp, #104]	; 0x68
   142a8:	ble	14338 <flatcc_json_printer_fmt_float@@Base+0x460>
   142ac:	str	r4, [sp, #96]	; 0x60
   142b0:	ldr	r4, [sl, r5, lsl #2]
   142b4:	sub	r0, r5, #1
   142b8:	mov	r1, #0
   142bc:	str	r0, [sp, #100]	; 0x64
   142c0:	udiv	r3, r2, r4
   142c4:	ldr	r0, [sp, #108]	; 0x6c
   142c8:	mov	r5, r4
   142cc:	subs	sl, ip, #32
   142d0:	mov	r8, r1
   142d4:	mls	r2, r3, r4, r2
   142d8:	ldr	r4, [sp, #96]	; 0x60
   142dc:	add	r6, r3, #48	; 0x30
   142e0:	strb	r6, [r0, r1]
   142e4:	rsb	r6, ip, #32
   142e8:	lsl	r0, r2, ip
   142ec:	movwpl	r0, #0
   142f0:	lsr	r3, r2, r6
   142f4:	lslpl	r3, r2, sl
   142f8:	adds	r9, r0, r4
   142fc:	ldr	r0, [sp, #92]	; 0x5c
   14300:	adc	r3, r3, r0
   14304:	subs	r0, r9, r7
   14308:	sbcs	r0, r3, lr
   1430c:	bcc	14344 <flatcc_json_printer_fmt_float@@Base+0x46c>
   14310:	ldr	r0, [sp, #100]	; 0x64
   14314:	mov	r1, r8
   14318:	cmp	r0, r8
   1431c:	beq	14400 <flatcc_json_printer_fmt_float@@Base+0x528>
   14320:	movw	r0, #52429	; 0xcccd
   14324:	add	r1, r1, #1
   14328:	movt	r0, #52428	; 0xcccc
   1432c:	umull	r0, r3, r5, r0
   14330:	lsr	r4, r3, #3
   14334:	b	142c0 <flatcc_json_printer_fmt_float@@Base+0x3e8>
   14338:	mov	sl, lr
   1433c:	mov	r6, #0
   14340:	b	14410 <flatcc_json_printer_fmt_float@@Base+0x538>
   14344:	ldr	r0, [sp, #56]	; 0x38
   14348:	mov	r2, #0
   1434c:	mov	r4, ip
   14350:	stm	sp, {r0, r2}
   14354:	ldr	r0, [sp, #68]	; 0x44
   14358:	str	r0, [sp, #8]
   1435c:	ldr	r0, [sp, #72]	; 0x48
   14360:	str	r0, [sp, #12]
   14364:	ldr	r0, [sp, #76]	; 0x4c
   14368:	str	r0, [sp, #16]
   1436c:	ldr	r0, [sp, #80]	; 0x50
   14370:	str	r0, [sp, #20]
   14374:	sub	r0, fp, #72	; 0x48
   14378:	ldr	r2, [sp, #60]	; 0x3c
   1437c:	str	r3, [sp, #104]	; 0x68
   14380:	ldr	r3, [sp, #64]	; 0x40
   14384:	str	lr, [sp, #96]	; 0x60
   14388:	bl	1f84c <flatcc_json_printer_clear@@Base+0x1e8>
   1438c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14390:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14394:	str	r7, [sp]
   14398:	cmp	sl, #0
   1439c:	lsr	r1, r5, r6
   143a0:	mov	r0, #1
   143a4:	lsl	r6, r5, r4
   143a8:	ldr	r7, [sp, #96]	; 0x60
   143ac:	lslpl	r1, r5, sl
   143b0:	movwpl	r6, #0
   143b4:	stmib	sp, {r7, r9}
   143b8:	ldr	r7, [sp, #104]	; 0x68
   143bc:	str	r0, [sp, #24]
   143c0:	mov	r0, #0
   143c4:	str	r6, [sp, #16]
   143c8:	str	r1, [sp, #20]
   143cc:	add	r6, r8, #1
   143d0:	str	r0, [sp, #28]
   143d4:	mov	r1, r6
   143d8:	str	r7, [sp, #12]
   143dc:	ldr	r0, [sp, #108]	; 0x6c
   143e0:	bl	1f8a4 <flatcc_json_printer_clear@@Base+0x240>
   143e4:	ldr	r1, [sp, #100]	; 0x64
   143e8:	sub	r5, r1, r8
   143ec:	b	1452c <flatcc_json_printer_fmt_float@@Base+0x654>
   143f0:			; <UNDEFINED> instruction: 0xffffffff
   143f4:	svcvc	0x00efffff
   143f8:			; <UNDEFINED> instruction: 0x509f79fe
   143fc:	svccc	0x00d34413
   14400:	ldr	r0, [sp, #100]	; 0x64
   14404:	mov	sl, lr
   14408:	add	r6, r1, #1
   1440c:	sub	r5, r0, r1
   14410:	rsb	r0, ip, #32
   14414:	mov	lr, #10
   14418:	mov	r9, #0
   1441c:	mov	r8, #1
   14420:	str	r0, [sp, #96]	; 0x60
   14424:	str	ip, [sp, #100]	; 0x64
   14428:	sub	r0, ip, #32
   1442c:	ldr	r2, [sp, #92]	; 0x5c
   14430:	ldr	ip, [sp, #44]	; 0x2c
   14434:	umull	r4, r1, r4, lr
   14438:	add	r2, r2, r2, lsl #2
   1443c:	ldr	r3, [sp, #100]	; 0x64
   14440:	cmp	r0, #0
   14444:	sub	r5, r5, #1
   14448:	add	r1, r1, r2, lsl #1
   1444c:	ldr	r2, [sp, #96]	; 0x60
   14450:	lsr	r3, r4, r3
   14454:	and	r4, r4, ip
   14458:	orr	r2, r3, r1, lsl r2
   1445c:	ldr	r3, [sp, #108]	; 0x6c
   14460:	lsrpl	r2, r1, r0
   14464:	add	r2, r2, #48	; 0x30
   14468:	strb	r2, [r3, r6]
   1446c:	umull	r8, r2, r8, lr
   14470:	add	r3, r9, r9, lsl #2
   14474:	add	r6, r6, #1
   14478:	add	r9, r2, r3, lsl #1
   1447c:	umull	r7, r2, r7, lr
   14480:	add	r3, sl, sl, lsl #2
   14484:	add	sl, r2, r3, lsl #1
   14488:	ldr	r2, [sp, #104]	; 0x68
   1448c:	and	r2, r1, r2
   14490:	subs	r1, r4, r7
   14494:	sbcs	r1, r2, sl
   14498:	bcs	14434 <flatcc_json_printer_fmt_float@@Base+0x55c>
   1449c:	ldr	r1, [sp, #56]	; 0x38
   144a0:	mov	r0, #0
   144a4:	str	r7, [fp, #-56]	; 0xffffffc8
   144a8:	str	sl, [fp, #-52]	; 0xffffffcc
   144ac:	str	r0, [sp, #4]
   144b0:	str	r1, [sp]
   144b4:	ldr	r0, [sp, #68]	; 0x44
   144b8:	str	r0, [sp, #8]
   144bc:	ldr	r0, [sp, #72]	; 0x48
   144c0:	str	r0, [sp, #12]
   144c4:	ldr	r0, [sp, #76]	; 0x4c
   144c8:	str	r0, [sp, #16]
   144cc:	ldr	r0, [sp, #80]	; 0x50
   144d0:	str	r0, [sp, #20]
   144d4:	str	r2, [sp, #92]	; 0x5c
   144d8:	sub	r0, fp, #72	; 0x48
   144dc:	ldr	r2, [sp, #60]	; 0x3c
   144e0:	ldr	r3, [sp, #64]	; 0x40
   144e4:	bl	1f84c <flatcc_json_printer_clear@@Base+0x1e8>
   144e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   144ec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   144f0:	stm	sp, {r7, sl}
   144f4:	str	r4, [sp, #8]
   144f8:	add	r3, sp, #20
   144fc:	ldr	r2, [sp, #92]	; 0x5c
   14500:	str	r2, [sp, #12]
   14504:	ldr	r2, [sp, #48]	; 0x30
   14508:	str	r2, [sp, #16]
   1450c:	ldr	r2, [sp, #52]	; 0x34
   14510:	stm	r3, {r2, r8, r9}
   14514:	umull	r2, r3, r0, r8
   14518:	mla	r0, r0, r9, r3
   1451c:	mla	r3, r1, r8, r0
   14520:	ldr	r0, [sp, #108]	; 0x6c
   14524:	mov	r1, r6
   14528:	bl	1f8a4 <flatcc_json_printer_clear@@Base+0x240>
   1452c:	ldr	r2, [sp, #84]	; 0x54
   14530:	cmp	r0, #0
   14534:	beq	145a4 <flatcc_json_printer_fmt_float@@Base+0x6cc>
   14538:	ldr	r0, [sp, #40]	; 0x28
   1453c:	cmp	r6, #3
   14540:	ldr	r1, [sp, #108]	; 0x6c
   14544:	ldrsh	r4, [r0, #26]
   14548:	sub	r0, r6, #1
   1454c:	movwlt	r0, #1
   14550:	sub	r7, r5, r4
   14554:	rsb	r2, r7, #0
   14558:	cmp	r0, r2
   1455c:	movge	r0, r2
   14560:	cmn	r7, #1
   14564:	ble	145cc <flatcc_json_printer_fmt_float@@Base+0x6f4>
   14568:	cmp	r7, #3
   1456c:	bcs	146a4 <flatcc_json_printer_fmt_float@@Base+0x7cc>
   14570:	cmp	r7, #0
   14574:	beq	146c4 <flatcc_json_printer_fmt_float@@Base+0x7ec>
   14578:	add	r0, r1, r6
   1457c:	mov	r1, #48	; 0x30
   14580:	mov	r2, r7
   14584:	bl	12944 <memset@plt>
   14588:	ldr	r1, [sp, #108]	; 0x6c
   1458c:	ldr	r2, [sp, #88]	; 0x58
   14590:	sub	r7, r7, #1
   14594:	add	r6, r6, #1
   14598:	cmp	r7, #0
   1459c:	bgt	14590 <flatcc_json_printer_fmt_float@@Base+0x6b8>
   145a0:	b	146c8 <flatcc_json_printer_fmt_float@@Base+0x7f0>
   145a4:	ldr	r4, [sp, #108]	; 0x6c
   145a8:	ldr	r3, [sp, #36]	; 0x24
   145ac:	movw	r1, #1796	; 0x704
   145b0:	movt	r1, #2
   145b4:	mov	r0, r4
   145b8:	bl	12968 <sprintf@plt>
   145bc:	ldr	r1, [sp, #88]	; 0x58
   145c0:	sub	r1, r4, r1
   145c4:	add	r0, r1, r0
   145c8:	b	146d4 <flatcc_json_printer_fmt_float@@Base+0x7fc>
   145cc:	cmp	r6, r2
   145d0:	bgt	14648 <flatcc_json_printer_fmt_float@@Base+0x770>
   145d4:	add	r8, r7, r6
   145d8:	cmn	r8, #2
   145dc:	blt	14648 <flatcc_json_printer_fmt_float@@Base+0x770>
   145e0:	add	r7, r1, #2
   145e4:	rsb	r0, r6, #0
   145e8:	add	r2, r7, r2
   145ec:	add	r0, r2, r0
   145f0:	mov	r2, r6
   145f4:	bl	1289c <memmove@plt>
   145f8:	ldr	r1, [sp, #108]	; 0x6c
   145fc:	movw	r0, #11824	; 0x2e30
   14600:	rsb	r8, r8, #2
   14604:	cmp	r8, #3
   14608:	strh	r0, [r1]
   1460c:	mov	r0, #2
   14610:	blt	14640 <flatcc_json_printer_fmt_float@@Base+0x768>
   14614:	sub	r0, r4, r5
   14618:	mov	r1, #48	; 0x30
   1461c:	sub	r2, r0, r6
   14620:	mov	r0, r7
   14624:	bl	12944 <memset@plt>
   14628:	add	r0, r5, r6
   1462c:	sub	r0, r0, r4
   14630:	adds	r0, r0, #1
   14634:	bcc	14630 <flatcc_json_printer_fmt_float@@Base+0x758>
   14638:	ldr	r1, [sp, #108]	; 0x6c
   1463c:	mov	r0, r8
   14640:	add	r6, r0, r6
   14644:	b	146c4 <flatcc_json_printer_fmt_float@@Base+0x7ec>
   14648:	cmp	r6, #2
   1464c:	blt	146a4 <flatcc_json_printer_fmt_float@@Base+0x7cc>
   14650:	cmp	r0, #1
   14654:	blt	14678 <flatcc_json_printer_fmt_float@@Base+0x7a0>
   14658:	add	r4, r1, r6
   1465c:	mov	r3, #0
   14660:	sub	r2, r4, #1
   14664:	ldrb	r5, [r2, -r3]
   14668:	strb	r5, [r4, -r3]
   1466c:	add	r3, r3, #1
   14670:	cmp	r3, r0
   14674:	blt	14664 <flatcc_json_printer_fmt_float@@Base+0x78c>
   14678:	sub	r3, r6, r0
   1467c:	mov	r2, #46	; 0x2e
   14680:	adds	r0, r0, r7
   14684:	strb	r2, [r1, r3]
   14688:	add	r3, r6, #1
   1468c:	beq	146e4 <flatcc_json_printer_fmt_float@@Base+0x80c>
   14690:	mov	r2, #101	; 0x65
   14694:	add	r4, r6, #2
   14698:	strb	r2, [r1, r3]
   1469c:	add	r1, r1, r4
   146a0:	b	146b8 <flatcc_json_printer_fmt_float@@Base+0x7e0>
   146a4:	mov	r0, #101	; 0x65
   146a8:	add	r4, r6, #1
   146ac:	strb	r0, [r1, r6]
   146b0:	add	r1, r1, r4
   146b4:	mov	r0, r7
   146b8:	bl	1f6a8 <flatcc_json_printer_clear@@Base+0x44>
   146bc:	ldr	r1, [sp, #108]	; 0x6c
   146c0:	add	r6, r0, r4
   146c4:	ldr	r2, [sp, #88]	; 0x58
   146c8:	mov	r0, #0
   146cc:	strb	r0, [r1, r6]!
   146d0:	sub	r0, r1, r2
   146d4:	sub	sp, fp, #40	; 0x28
   146d8:	vpop	{d8}
   146dc:	add	sp, sp, #4
   146e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146e4:	mov	r6, r3
   146e8:	b	146c4 <flatcc_json_printer_fmt_float@@Base+0x7ec>
   146ec:	movw	r0, #1651	; 0x673
   146f0:	movw	r1, #1655	; 0x677
   146f4:	movw	r3, #1742	; 0x6ce
   146f8:	mov	r2, #189	; 0xbd
   146fc:	movt	r0, #2
   14700:	movt	r1, #2
   14704:	movt	r3, #2
   14708:	bl	12998 <__assert_fail@plt>
   1470c:	movw	r0, #1802	; 0x70a
   14710:	movw	r1, #1655	; 0x677
   14714:	movw	r3, #1839	; 0x72f
   14718:	mov	r2, #138	; 0x8a
   1471c:	movt	r0, #2
   14720:	movt	r1, #2
   14724:	movt	r3, #2
   14728:	bl	12998 <__assert_fail@plt>

0001472c <flatcc_json_printer_fmt_double@@Base>:
   1472c:	b	13ee0 <flatcc_json_printer_fmt_float@@Base+0x8>

00014730 <flatcc_json_printer_fmt_bool@@Base>:
   14730:	cmp	r1, #0
   14734:	movwne	r1, #29300	; 0x7274
   14738:	movtne	r1, #25973	; 0x6575
   1473c:	strne	r1, [r0]
   14740:	movne	r0, #4
   14744:	bxne	lr
   14748:	mov	r1, #101	; 0x65
   1474c:	strb	r1, [r0, #4]
   14750:	movw	r1, #24934	; 0x6166
   14754:	movt	r1, #29548	; 0x736c
   14758:	str	r1, [r0]
   1475c:	mov	r0, #5
   14760:	bx	lr

00014764 <flatcc_json_printer_string@@Base>:
   14764:	b	14768 <flatcc_json_printer_string@@Base+0x4>
   14768:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1476c:	add	fp, sp, #28
   14770:	sub	sp, sp, #12
   14774:	mov	r5, r0
   14778:	mov	r4, r0
   1477c:	mov	r6, r1
   14780:	mov	r3, r2
   14784:	ldr	r0, [r5, #20]!
   14788:	str	r5, [sp, #4]
   1478c:	add	r1, r0, #1
   14790:	str	r1, [r5]
   14794:	mov	r1, #34	; 0x22
   14798:	strb	r1, [r0]
   1479c:	ldrb	sl, [r6]
   147a0:	mov	r8, r6
   147a4:	cmp	sl, #32
   147a8:	bcc	147c8 <flatcc_json_printer_string@@Base+0x64>
   147ac:	uxtb	r0, sl
   147b0:	cmp	r0, #34	; 0x22
   147b4:	cmpne	r0, #92	; 0x5c
   147b8:	beq	147c8 <flatcc_json_printer_string@@Base+0x64>
   147bc:	ldrb	sl, [r8, #1]!
   147c0:	cmp	sl, #31
   147c4:	bhi	147ac <flatcc_json_printer_string@@Base+0x48>
   147c8:	ldr	r0, [r4, #20]
   147cc:	ldr	r1, [r4, #16]
   147d0:	sub	r9, r8, r6
   147d4:	add	r2, r0, r9
   147d8:	cmp	r2, r1
   147dc:	bcs	147fc <flatcc_json_printer_string@@Base+0x98>
   147e0:	mov	r1, r6
   147e4:	mov	r2, r9
   147e8:	mov	r6, r3
   147ec:	bl	128b4 <memcpy@plt>
   147f0:	mov	r2, r6
   147f4:	mov	r7, r9
   147f8:	b	14888 <flatcc_json_printer_string@@Base+0x124>
   147fc:	cmp	r0, r1
   14800:	str	r3, [sp, #8]
   14804:	bcc	14820 <flatcc_json_printer_string@@Base+0xbc>
   14808:	ldr	r2, [r4, #44]	; 0x2c
   1480c:	mov	r0, r4
   14810:	mov	r1, #0
   14814:	blx	r2
   14818:	ldr	r1, [r4, #16]
   1481c:	ldr	r0, [r4, #20]
   14820:	sub	r5, r1, r0
   14824:	mov	r7, r9
   14828:	cmp	r5, r9
   1482c:	bcs	14874 <flatcc_json_printer_string@@Base+0x110>
   14830:	mov	r1, r6
   14834:	mov	r2, r5
   14838:	bl	128b4 <memcpy@plt>
   1483c:	ldr	r0, [r4, #20]
   14840:	ldr	r2, [r4, #44]	; 0x2c
   14844:	mov	r1, #0
   14848:	add	r0, r0, r5
   1484c:	str	r0, [r4, #20]
   14850:	mov	r0, r4
   14854:	blx	r2
   14858:	ldr	r1, [r4, #16]
   1485c:	ldr	r0, [r4, #20]
   14860:	sub	r7, r7, r5
   14864:	add	r6, r6, r5
   14868:	sub	r5, r1, r0
   1486c:	cmp	r7, r5
   14870:	bhi	14830 <flatcc_json_printer_string@@Base+0xcc>
   14874:	ldr	r5, [sp, #4]
   14878:	mov	r1, r6
   1487c:	mov	r2, r7
   14880:	bl	128b4 <memcpy@plt>
   14884:	ldr	r2, [sp, #8]
   14888:	ldr	r0, [r5]
   1488c:	add	r1, r0, r7
   14890:	add	r0, r1, #1
   14894:	str	r0, [r5]
   14898:	subs	r0, r2, r9
   1489c:	beq	14a00 <flatcc_json_printer_string@@Base+0x29c>
   148a0:	mov	r2, #92	; 0x5c
   148a4:	strb	r2, [r1]
   148a8:	mvn	r1, #7
   148ac:	uxtab	r2, r1, sl
   148b0:	uxtb	r1, sl
   148b4:	cmp	r2, #5
   148b8:	bhi	148f0 <flatcc_json_printer_string@@Base+0x18c>
   148bc:	add	r3, pc, #0
   148c0:	ldr	pc, [r3, r2, lsl #2]
   148c4:	ldrdeq	r4, [r1], -ip
   148c8:	muleq	r1, r0, r9
   148cc:	andeq	r4, r1, r4, lsr #19
   148d0:	andeq	r4, r1, r4, lsl r9
   148d4:			; <UNDEFINED> instruction: 0x000149b8
   148d8:	andeq	r4, r1, ip, asr #19
   148dc:	ldr	r1, [r5]
   148e0:	add	r2, r1, #1
   148e4:	str	r2, [r5]
   148e8:	mov	r2, #98	; 0x62
   148ec:	b	149f0 <flatcc_json_printer_string@@Base+0x28c>
   148f0:	cmp	r1, #92	; 0x5c
   148f4:	beq	149e0 <flatcc_json_printer_string@@Base+0x27c>
   148f8:	cmp	r1, #34	; 0x22
   148fc:	bne	14914 <flatcc_json_printer_string@@Base+0x1b0>
   14900:	ldr	r1, [r5]
   14904:	add	r2, r1, #1
   14908:	str	r2, [r5]
   1490c:	mov	r2, #34	; 0x22
   14910:	b	149f0 <flatcc_json_printer_string@@Base+0x28c>
   14914:	ldr	r2, [r5]
   14918:	mov	r7, #48	; 0x30
   1491c:	cmp	r1, #160	; 0xa0
   14920:	add	r3, r2, #1
   14924:	str	r3, [r5]
   14928:	mov	r3, #117	; 0x75
   1492c:	strb	r3, [r2]
   14930:	ldr	r2, [r5]
   14934:	add	r3, r2, #1
   14938:	str	r3, [r5]
   1493c:	strb	r7, [r2]
   14940:	ldr	r2, [r5]
   14944:	add	r3, r2, #1
   14948:	str	r3, [r5]
   1494c:	strb	r7, [r2]
   14950:	ldr	r2, [r5]
   14954:	add	r3, r2, #1
   14958:	str	r3, [r5]
   1495c:	mov	r3, #87	; 0x57
   14960:	movwcc	r3, #48	; 0x30
   14964:	add	r1, r3, r1, lsr #4
   14968:	mov	r3, #87	; 0x57
   1496c:	strb	r1, [r2]
   14970:	ldr	r1, [r5]
   14974:	add	r2, r1, #1
   14978:	str	r2, [r5]
   1497c:	and	r2, sl, #15
   14980:	cmp	r2, #10
   14984:	movwcc	r3, #48	; 0x30
   14988:	add	r2, r3, r2
   1498c:	b	149f0 <flatcc_json_printer_string@@Base+0x28c>
   14990:	ldr	r1, [r5]
   14994:	add	r2, r1, #1
   14998:	str	r2, [r5]
   1499c:	mov	r2, #116	; 0x74
   149a0:	b	149f0 <flatcc_json_printer_string@@Base+0x28c>
   149a4:	ldr	r1, [r5]
   149a8:	add	r2, r1, #1
   149ac:	str	r2, [r5]
   149b0:	mov	r2, #110	; 0x6e
   149b4:	b	149f0 <flatcc_json_printer_string@@Base+0x28c>
   149b8:	ldr	r1, [r5]
   149bc:	add	r2, r1, #1
   149c0:	str	r2, [r5]
   149c4:	mov	r2, #102	; 0x66
   149c8:	b	149f0 <flatcc_json_printer_string@@Base+0x28c>
   149cc:	ldr	r1, [r5]
   149d0:	add	r2, r1, #1
   149d4:	str	r2, [r5]
   149d8:	mov	r2, #114	; 0x72
   149dc:	b	149f0 <flatcc_json_printer_string@@Base+0x28c>
   149e0:	ldr	r1, [r5]
   149e4:	add	r2, r1, #1
   149e8:	str	r2, [r5]
   149ec:	mov	r2, #92	; 0x5c
   149f0:	strb	r2, [r1]
   149f4:	sub	r3, r0, #1
   149f8:	add	r6, r8, #1
   149fc:	b	1479c <flatcc_json_printer_string@@Base+0x38>
   14a00:	mov	r0, #34	; 0x22
   14a04:	strb	r0, [r1]
   14a08:	sub	sp, fp, #28
   14a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014a10 <flatcc_json_printer_write@@Base>:
   14a10:	push	{r4, r5, r6, r7, fp, lr}
   14a14:	add	fp, sp, #16
   14a18:	mov	r6, r1
   14a1c:	mov	r5, r0
   14a20:	ldr	r1, [r0, #16]
   14a24:	ldr	r0, [r0, #20]
   14a28:	mov	r4, r2
   14a2c:	add	r2, r0, r2
   14a30:	cmp	r2, r1
   14a34:	bcc	14aa8 <flatcc_json_printer_write@@Base+0x98>
   14a38:	cmp	r0, r1
   14a3c:	bcc	14a58 <flatcc_json_printer_write@@Base+0x48>
   14a40:	ldr	r2, [r5, #44]	; 0x2c
   14a44:	mov	r0, r5
   14a48:	mov	r1, #0
   14a4c:	blx	r2
   14a50:	ldr	r1, [r5, #16]
   14a54:	ldr	r0, [r5, #20]
   14a58:	sub	r7, r1, r0
   14a5c:	cmp	r7, r4
   14a60:	bcs	14aa8 <flatcc_json_printer_write@@Base+0x98>
   14a64:	mov	r1, r6
   14a68:	mov	r2, r7
   14a6c:	bl	128b4 <memcpy@plt>
   14a70:	ldr	r0, [r5, #20]
   14a74:	ldr	r2, [r5, #44]	; 0x2c
   14a78:	mov	r1, #0
   14a7c:	add	r0, r0, r7
   14a80:	str	r0, [r5, #20]
   14a84:	mov	r0, r5
   14a88:	blx	r2
   14a8c:	ldr	r1, [r5, #16]
   14a90:	ldr	r0, [r5, #20]
   14a94:	sub	r4, r4, r7
   14a98:	add	r6, r6, r7
   14a9c:	sub	r7, r1, r0
   14aa0:	cmp	r4, r7
   14aa4:	bhi	14a64 <flatcc_json_printer_write@@Base+0x54>
   14aa8:	mov	r1, r6
   14aac:	mov	r2, r4
   14ab0:	bl	128b4 <memcpy@plt>
   14ab4:	ldr	r0, [r5, #20]
   14ab8:	add	r0, r0, r4
   14abc:	str	r0, [r5, #20]
   14ac0:	pop	{r4, r5, r6, r7, fp, pc}

00014ac4 <flatcc_json_printer_nl@@Base>:
   14ac4:	ldr	r1, [r0, #20]
   14ac8:	add	r2, r1, #1
   14acc:	str	r2, [r0, #20]
   14ad0:	mov	r2, #10
   14ad4:	strb	r2, [r1]
   14ad8:	ldr	r1, [r0, #16]
   14adc:	ldr	r2, [r0, #20]
   14ae0:	cmp	r2, r1
   14ae4:	bxcc	lr
   14ae8:	ldr	r2, [r0, #44]	; 0x2c
   14aec:	mov	r1, #0
   14af0:	bx	r2

00014af4 <flatcc_json_printer_char@@Base>:
   14af4:	ldr	r2, [r0, #20]
   14af8:	add	r3, r2, #1
   14afc:	str	r3, [r0, #20]
   14b00:	strb	r1, [r2]
   14b04:	bx	lr

00014b08 <flatcc_json_printer_indent@@Base>:
   14b08:	push	{r4, r5, r6, sl, fp, lr}
   14b0c:	add	fp, sp, #16
   14b10:	mov	r4, r0
   14b14:	ldr	r1, [r0, #16]
   14b18:	ldr	r0, [r0, #20]
   14b1c:	ldrb	r2, [r4, #25]
   14b20:	ldr	r3, [r4, #32]
   14b24:	mla	r6, r3, r2, r0
   14b28:	mul	r5, r3, r2
   14b2c:	cmp	r6, r1
   14b30:	bls	14ba0 <flatcc_json_printer_indent@@Base+0x98>
   14b34:	cmp	r0, r1
   14b38:	bcc	14b54 <flatcc_json_printer_indent@@Base+0x4c>
   14b3c:	ldr	r2, [r4, #44]	; 0x2c
   14b40:	mov	r0, r4
   14b44:	mov	r1, #0
   14b48:	blx	r2
   14b4c:	ldr	r1, [r4, #16]
   14b50:	ldr	r0, [r4, #20]
   14b54:	sub	r6, r1, r0
   14b58:	cmp	r6, r5
   14b5c:	bcs	14ba0 <flatcc_json_printer_indent@@Base+0x98>
   14b60:	mov	r1, #32
   14b64:	mov	r2, r6
   14b68:	bl	12944 <memset@plt>
   14b6c:	ldr	r0, [r4, #20]
   14b70:	ldr	r2, [r4, #44]	; 0x2c
   14b74:	mov	r1, #0
   14b78:	add	r0, r0, r6
   14b7c:	str	r0, [r4, #20]
   14b80:	mov	r0, r4
   14b84:	blx	r2
   14b88:	ldr	r1, [r4, #16]
   14b8c:	ldr	r0, [r4, #20]
   14b90:	sub	r5, r5, r6
   14b94:	sub	r6, r1, r0
   14b98:	cmp	r5, r6
   14b9c:	bhi	14b60 <flatcc_json_printer_indent@@Base+0x58>
   14ba0:	mov	r1, #32
   14ba4:	mov	r2, r5
   14ba8:	bl	12944 <memset@plt>
   14bac:	ldr	r0, [r4, #20]
   14bb0:	add	r0, r0, r5
   14bb4:	str	r0, [r4, #20]
   14bb8:	pop	{r4, r5, r6, sl, fp, pc}

00014bbc <flatcc_json_printer_add_level@@Base>:
   14bbc:	ldr	r2, [r0, #32]
   14bc0:	add	r1, r2, r1
   14bc4:	str	r1, [r0, #32]
   14bc8:	bx	lr

00014bcc <flatcc_json_printer_get_level@@Base>:
   14bcc:	ldr	r0, [r0, #32]
   14bd0:	bx	lr

00014bd4 <flatcc_json_printer_uint8@@Base>:
   14bd4:	push	{r4, sl, fp, lr}
   14bd8:	add	fp, sp, #8
   14bdc:	mov	r2, r1
   14be0:	ldr	r1, [r0, #20]
   14be4:	mov	r4, r0
   14be8:	mov	r0, r2
   14bec:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   14bf0:	ldr	r1, [r4, #20]
   14bf4:	add	r0, r1, r0
   14bf8:	str	r0, [r4, #20]
   14bfc:	pop	{r4, sl, fp, pc}
   14c00:	mov	r2, #0
   14c04:	cmp	r0, #100	; 0x64
   14c08:	bcc	14c54 <flatcc_json_printer_uint8@@Base+0x80>
   14c0c:	strb	r2, [r1, #3]
   14c10:	movw	r2, #34079	; 0x851f
   14c14:	movt	r2, #20971	; 0x51eb
   14c18:	umull	r2, r3, r0, r2
   14c1c:	mov	r2, #48	; 0x30
   14c20:	orr	r2, r2, r3, lsr #5
   14c24:	strb	r2, [r1]
   14c28:	lsr	r2, r3, #5
   14c2c:	mov	r3, #100	; 0x64
   14c30:	mls	r0, r2, r3, r0
   14c34:	movw	r2, #2127	; 0x84f
   14c38:	movt	r2, #2
   14c3c:	uxtb	r0, r0
   14c40:	add	r0, r2, r0, lsl #1
   14c44:	ldrh	r0, [r0]
   14c48:	strh	r0, [r1, #1]
   14c4c:	mov	r0, #3
   14c50:	bx	lr
   14c54:	cmp	r0, #10
   14c58:	addcc	r0, r0, #48	; 0x30
   14c5c:	strbcc	r2, [r1, #1]
   14c60:	strbcc	r0, [r1]
   14c64:	movcc	r0, #1
   14c68:	bxcc	lr
   14c6c:	strb	r2, [r1, #2]
   14c70:	movw	r2, #34079	; 0x851f
   14c74:	movt	r2, #20971	; 0x51eb
   14c78:	umull	r2, r3, r0, r2
   14c7c:	lsr	r2, r3, #5
   14c80:	mov	r3, #100	; 0x64
   14c84:	mls	r0, r2, r3, r0
   14c88:	movw	r2, #2127	; 0x84f
   14c8c:	movt	r2, #2
   14c90:	add	r0, r2, r0, lsl #1
   14c94:	ldrh	r0, [r0]
   14c98:	strh	r0, [r1]
   14c9c:	mov	r0, #2
   14ca0:	bx	lr

00014ca4 <flatcc_json_printer_uint16@@Base>:
   14ca4:	push	{r4, sl, fp, lr}
   14ca8:	add	fp, sp, #8
   14cac:	mov	r2, r1
   14cb0:	ldr	r1, [r0, #20]
   14cb4:	mov	r4, r0
   14cb8:	mov	r0, r2
   14cbc:	bl	14cd0 <flatcc_json_printer_uint16@@Base+0x2c>
   14cc0:	ldr	r1, [r4, #20]
   14cc4:	add	r0, r1, r0
   14cc8:	str	r0, [r4, #20]
   14ccc:	pop	{r4, sl, fp, pc}
   14cd0:	push	{fp, lr}
   14cd4:	mov	fp, sp
   14cd8:	mov	lr, r0
   14cdc:	cmp	r0, #1000	; 0x3e8
   14ce0:	bcc	14cf8 <flatcc_json_printer_uint16@@Base+0x54>
   14ce4:	movw	r3, #9999	; 0x270f
   14ce8:	mov	r0, #4
   14cec:	cmp	lr, r3
   14cf0:	movwhi	r0, #5
   14cf4:	b	14d1c <flatcc_json_printer_uint16@@Base+0x78>
   14cf8:	cmp	lr, #100	; 0x64
   14cfc:	bcc	14d10 <flatcc_json_printer_uint16@@Base+0x6c>
   14d00:	mov	r0, #0
   14d04:	strb	r0, [r1, #3]!
   14d08:	mov	r0, #3
   14d0c:	b	14dc0 <flatcc_json_printer_uint16@@Base+0x11c>
   14d10:	cmp	lr, #9
   14d14:	mov	r0, #1
   14d18:	movwhi	r0, #2
   14d1c:	mov	r3, #0
   14d20:	tst	r0, #1
   14d24:	strb	r3, [r1, r0]!
   14d28:	bne	14d70 <flatcc_json_printer_uint16@@Base+0xcc>
   14d2c:	cmp	r0, #2
   14d30:	beq	14e00 <flatcc_json_printer_uint16@@Base+0x15c>
   14d34:	cmp	r0, #4
   14d38:	popne	{fp, pc}
   14d3c:	movw	r2, #34079	; 0x851f
   14d40:	movt	r2, #20971	; 0x51eb
   14d44:	umull	r2, r3, lr, r2
   14d48:	mov	r2, #100	; 0x64
   14d4c:	lsr	r3, r3, #5
   14d50:	mls	r2, r3, r2, lr
   14d54:	uxth	ip, r2
   14d58:	movw	r2, #2127	; 0x84f
   14d5c:	movt	r2, #2
   14d60:	add	r2, r2, ip, lsl #1
   14d64:	ldrh	r2, [r2]
   14d68:	strh	r2, [r1, #-2]!
   14d6c:	b	14e04 <flatcc_json_printer_uint16@@Base+0x160>
   14d70:	cmp	r0, #1
   14d74:	beq	14e38 <flatcc_json_printer_uint16@@Base+0x194>
   14d78:	cmp	r0, #3
   14d7c:	beq	14dc0 <flatcc_json_printer_uint16@@Base+0x11c>
   14d80:	cmp	r0, #5
   14d84:	bne	14e34 <flatcc_json_printer_uint16@@Base+0x190>
   14d88:	movw	r0, #34079	; 0x851f
   14d8c:	movw	r2, #2127	; 0x84f
   14d90:	movt	r0, #20971	; 0x51eb
   14d94:	movt	r2, #2
   14d98:	umull	r0, r3, lr, r0
   14d9c:	mov	r0, #100	; 0x64
   14da0:	lsr	r3, r3, #5
   14da4:	mls	r0, r3, r0, lr
   14da8:	mov	lr, r3
   14dac:	uxth	r0, r0
   14db0:	add	r0, r2, r0, lsl #1
   14db4:	ldrh	r0, [r0]
   14db8:	strh	r0, [r1, #-2]!
   14dbc:	mov	r0, #5
   14dc0:	movw	r3, #34079	; 0x851f
   14dc4:	uxth	ip, lr
   14dc8:	movt	r3, #20971	; 0x51eb
   14dcc:	umull	r3, r2, ip, r3
   14dd0:	lsr	r3, r2, #5
   14dd4:	mov	r2, #100	; 0x64
   14dd8:	mls	r2, r3, r2, lr
   14ddc:	uxth	ip, r2
   14de0:	movw	r2, #2127	; 0x84f
   14de4:	movt	r2, #2
   14de8:	add	r2, r2, ip, lsl #1
   14dec:	ldrh	r2, [r2]
   14df0:	strh	r2, [r1, #-2]!
   14df4:	add	r2, r3, #48	; 0x30
   14df8:	strb	r2, [r1, #-1]
   14dfc:	pop	{fp, pc}
   14e00:	mov	r3, lr
   14e04:	uxth	ip, r3
   14e08:	movw	r3, #34079	; 0x851f
   14e0c:	movt	r3, #20971	; 0x51eb
   14e10:	umull	r3, r2, ip, r3
   14e14:	mov	r3, #100	; 0x64
   14e18:	lsr	r2, r2, #5
   14e1c:	mls	r2, r2, r3, ip
   14e20:	movw	r3, #2127	; 0x84f
   14e24:	movt	r3, #2
   14e28:	add	r2, r3, r2, lsl #1
   14e2c:	ldrh	r2, [r2]
   14e30:	strh	r2, [r1, #-2]
   14e34:	pop	{fp, pc}
   14e38:	mov	r3, lr
   14e3c:	b	14df4 <flatcc_json_printer_uint16@@Base+0x150>

00014e40 <flatcc_json_printer_uint32@@Base>:
   14e40:	push	{r4, sl, fp, lr}
   14e44:	add	fp, sp, #8
   14e48:	mov	r2, r1
   14e4c:	ldr	r1, [r0, #20]
   14e50:	mov	r4, r0
   14e54:	mov	r0, r2
   14e58:	bl	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   14e5c:	ldr	r1, [r4, #20]
   14e60:	add	r0, r1, r0
   14e64:	str	r0, [r4, #20]
   14e68:	pop	{r4, sl, fp, pc}
   14e6c:	push	{fp, lr}
   14e70:	mov	fp, sp
   14e74:	mov	lr, r0
   14e78:	movw	r0, #10000	; 0x2710
   14e7c:	cmp	lr, r0
   14e80:	bcc	14ee4 <flatcc_json_printer_uint32@@Base+0xa4>
   14e84:	movw	r0, #38528	; 0x9680
   14e88:	movt	r0, #152	; 0x98
   14e8c:	cmp	lr, r0
   14e90:	bcc	14f00 <flatcc_json_printer_uint32@@Base+0xc0>
   14e94:	movw	r0, #51712	; 0xca00
   14e98:	movt	r0, #15258	; 0x3b9a
   14e9c:	cmp	lr, r0
   14ea0:	bcc	14f30 <flatcc_json_printer_uint32@@Base+0xf0>
   14ea4:	movw	r0, #34079	; 0x851f
   14ea8:	movw	r2, #2127	; 0x84f
   14eac:	movt	r0, #20971	; 0x51eb
   14eb0:	movt	r2, #2
   14eb4:	umull	r0, r3, lr, r0
   14eb8:	mov	r0, #100	; 0x64
   14ebc:	lsr	r3, r3, #5
   14ec0:	mls	r0, r3, r0, lr
   14ec4:	mov	lr, r3
   14ec8:	add	r0, r2, r0, lsl #1
   14ecc:	ldrh	r0, [r0]
   14ed0:	strh	r0, [r1, #8]!
   14ed4:	mov	r0, #0
   14ed8:	strb	r0, [r1, #2]
   14edc:	mov	r0, #10
   14ee0:	b	14f9c <flatcc_json_printer_uint32@@Base+0x15c>
   14ee4:	cmp	lr, #100	; 0x64
   14ee8:	bcc	14f20 <flatcc_json_printer_uint32@@Base+0xe0>
   14eec:	lsr	r3, lr, #3
   14ef0:	mov	r0, #3
   14ef4:	cmp	r3, #124	; 0x7c
   14ef8:	movwhi	r0, #4
   14efc:	b	14f5c <flatcc_json_printer_uint32@@Base+0x11c>
   14f00:	movw	r0, #16960	; 0x4240
   14f04:	movt	r0, #15
   14f08:	cmp	lr, r0
   14f0c:	bcc	14f48 <flatcc_json_printer_uint32@@Base+0x108>
   14f10:	mov	r0, #0
   14f14:	strb	r0, [r1, #7]!
   14f18:	mov	r0, #7
   14f1c:	b	150c8 <flatcc_json_printer_uint32@@Base+0x288>
   14f20:	cmp	lr, #9
   14f24:	mov	r0, #1
   14f28:	movwhi	r0, #2
   14f2c:	b	14f5c <flatcc_json_printer_uint32@@Base+0x11c>
   14f30:	movw	r3, #57599	; 0xe0ff
   14f34:	mov	r0, #8
   14f38:	movt	r3, #1525	; 0x5f5
   14f3c:	cmp	lr, r3
   14f40:	movwhi	r0, #9
   14f44:	b	14f5c <flatcc_json_printer_uint32@@Base+0x11c>
   14f48:	movw	r3, #34463	; 0x869f
   14f4c:	mov	r0, #5
   14f50:	movt	r3, #1
   14f54:	cmp	lr, r3
   14f58:	movwhi	r0, #6
   14f5c:	mov	r3, #0
   14f60:	tst	r0, #1
   14f64:	strb	r3, [r1, r0]!
   14f68:	bne	1505c <flatcc_json_printer_uint32@@Base+0x21c>
   14f6c:	sub	r3, r0, #2
   14f70:	cmp	r3, #6
   14f74:	bhi	15160 <flatcc_json_printer_uint32@@Base+0x320>
   14f78:	add	r2, pc, #0
   14f7c:	ldr	pc, [r2, r3, lsl #2]
   14f80:	andeq	r5, r1, ip, lsr #32
   14f84:	andeq	r5, r1, r0, ror #2
   14f88:	strdeq	r4, [r1], -ip
   14f8c:	andeq	r5, r1, r0, ror #2
   14f90:	andeq	r4, r1, ip, asr #31
   14f94:	andeq	r5, r1, r0, ror #2
   14f98:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14f9c:	movw	r2, #34079	; 0x851f
   14fa0:	movt	r2, #20971	; 0x51eb
   14fa4:	umull	r2, r3, lr, r2
   14fa8:	lsr	r2, r3, #5
   14fac:	mov	r3, #100	; 0x64
   14fb0:	mls	ip, r2, r3, lr
   14fb4:	movw	r3, #2127	; 0x84f
   14fb8:	mov	lr, r2
   14fbc:	movt	r3, #2
   14fc0:	add	r3, r3, ip, lsl #1
   14fc4:	ldrh	r3, [r3]
   14fc8:	strh	r3, [r1, #-2]!
   14fcc:	movw	r2, #34079	; 0x851f
   14fd0:	movt	r2, #20971	; 0x51eb
   14fd4:	umull	r2, r3, lr, r2
   14fd8:	lsr	r2, r3, #5
   14fdc:	mov	r3, #100	; 0x64
   14fe0:	mls	ip, r2, r3, lr
   14fe4:	movw	r3, #2127	; 0x84f
   14fe8:	mov	lr, r2
   14fec:	movt	r3, #2
   14ff0:	add	r3, r3, ip, lsl #1
   14ff4:	ldrh	r3, [r3]
   14ff8:	strh	r3, [r1, #-2]!
   14ffc:	movw	r2, #34079	; 0x851f
   15000:	movt	r2, #20971	; 0x51eb
   15004:	umull	r2, r3, lr, r2
   15008:	lsr	r2, r3, #5
   1500c:	mov	r3, #100	; 0x64
   15010:	mls	ip, r2, r3, lr
   15014:	movw	r3, #2127	; 0x84f
   15018:	mov	lr, r2
   1501c:	movt	r3, #2
   15020:	add	r3, r3, ip, lsl #1
   15024:	ldrh	r3, [r3]
   15028:	strh	r3, [r1, #-2]!
   1502c:	movw	r2, #34079	; 0x851f
   15030:	movt	r2, #20971	; 0x51eb
   15034:	umull	r2, r3, lr, r2
   15038:	lsr	r2, r3, #5
   1503c:	mov	r3, #100	; 0x64
   15040:	mls	r2, r2, r3, lr
   15044:	movw	r3, #2127	; 0x84f
   15048:	movt	r3, #2
   1504c:	add	r2, r3, r2, lsl #1
   15050:	ldrh	r2, [r2]
   15054:	strh	r2, [r1, #-2]
   15058:	pop	{fp, pc}
   1505c:	sub	ip, r0, #1
   15060:	cmp	ip, #8
   15064:	bhi	15160 <flatcc_json_printer_uint32@@Base+0x320>
   15068:	add	r3, pc, #0
   1506c:	ldr	pc, [r3, ip, lsl #2]
   15070:	andeq	r5, r1, r8, asr r1
   15074:	andeq	r5, r1, r0, ror #2
   15078:	andeq	r5, r1, r8, lsr #2
   1507c:	andeq	r5, r1, r0, ror #2
   15080:	strdeq	r5, [r1], -r8
   15084:	andeq	r5, r1, r0, ror #2
   15088:	andeq	r5, r1, r8, asr #1
   1508c:	andeq	r5, r1, r0, ror #2
   15090:	muleq	r1, r4, r0
   15094:	movw	r0, #34079	; 0x851f
   15098:	movw	r2, #2127	; 0x84f
   1509c:	movt	r0, #20971	; 0x51eb
   150a0:	movt	r2, #2
   150a4:	umull	r0, r3, lr, r0
   150a8:	mov	r0, #100	; 0x64
   150ac:	lsr	r3, r3, #5
   150b0:	mls	r0, r3, r0, lr
   150b4:	mov	lr, r3
   150b8:	add	r0, r2, r0, lsl #1
   150bc:	ldrh	r0, [r0]
   150c0:	strh	r0, [r1, #-2]!
   150c4:	mov	r0, #9
   150c8:	movw	r3, #34079	; 0x851f
   150cc:	movt	r3, #20971	; 0x51eb
   150d0:	umull	r3, r2, lr, r3
   150d4:	mov	r3, #100	; 0x64
   150d8:	lsr	r2, r2, #5
   150dc:	mls	ip, r2, r3, lr
   150e0:	movw	r3, #2127	; 0x84f
   150e4:	mov	lr, r2
   150e8:	movt	r3, #2
   150ec:	add	r3, r3, ip, lsl #1
   150f0:	ldrh	r3, [r3]
   150f4:	strh	r3, [r1, #-2]!
   150f8:	movw	r2, #34079	; 0x851f
   150fc:	movt	r2, #20971	; 0x51eb
   15100:	umull	r2, r3, lr, r2
   15104:	lsr	r2, r3, #5
   15108:	mov	r3, #100	; 0x64
   1510c:	mls	ip, r2, r3, lr
   15110:	movw	r3, #2127	; 0x84f
   15114:	mov	lr, r2
   15118:	movt	r3, #2
   1511c:	add	r3, r3, ip, lsl #1
   15120:	ldrh	r3, [r3]
   15124:	strh	r3, [r1, #-2]!
   15128:	movw	r2, #34079	; 0x851f
   1512c:	movt	r2, #20971	; 0x51eb
   15130:	umull	r2, r3, lr, r2
   15134:	lsr	r2, r3, #5
   15138:	mov	r3, #100	; 0x64
   1513c:	mls	ip, r2, r3, lr
   15140:	movw	r3, #2127	; 0x84f
   15144:	mov	lr, r2
   15148:	movt	r3, #2
   1514c:	add	r3, r3, ip, lsl #1
   15150:	ldrh	r3, [r3]
   15154:	strh	r3, [r1, #-2]!
   15158:	add	r2, lr, #48	; 0x30
   1515c:	strb	r2, [r1, #-1]
   15160:	pop	{fp, pc}

00015164 <flatcc_json_printer_uint64@@Base>:
   15164:	push	{r4, sl, fp, lr}
   15168:	add	fp, sp, #8
   1516c:	mov	r1, r3
   15170:	mov	r3, r2
   15174:	ldr	r2, [r0, #20]
   15178:	mov	r4, r0
   1517c:	mov	r0, r3
   15180:	bl	15194 <flatcc_json_printer_uint64@@Base+0x30>
   15184:	ldr	r1, [r4, #20]
   15188:	add	r0, r1, r0
   1518c:	str	r0, [r4, #20]
   15190:	pop	{r4, sl, fp, pc}
   15194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15198:	add	fp, sp, #28
   1519c:	sub	sp, sp, #4
   151a0:	mov	r7, r0
   151a4:	movw	r0, #51711	; 0xc9ff
   151a8:	mov	r4, r2
   151ac:	movt	r0, #15258	; 0x3b9a
   151b0:	subs	r0, r0, r7
   151b4:	rscs	r0, r1, #0
   151b8:	bcc	151d0 <flatcc_json_printer_uint64@@Base+0x6c>
   151bc:	mov	r0, r7
   151c0:	mov	r1, r4
   151c4:	sub	sp, fp, #28
   151c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151cc:	b	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   151d0:	mov	r6, r1
   151d4:	movw	r1, #40960	; 0xa000
   151d8:	movw	r9, #2127	; 0x84f
   151dc:	movw	r0, #2328	; 0x918
   151e0:	movt	r1, #20082	; 0x4e72
   151e4:	movt	r9, #2
   151e8:	subs	r1, r7, r1
   151ec:	sbcs	r0, r6, r0
   151f0:	bcc	15250 <flatcc_json_printer_uint64@@Base+0xec>
   151f4:	movw	r1, #0
   151f8:	movw	r0, #34546	; 0x86f2
   151fc:	movt	r1, #28609	; 0x6fc1
   15200:	movt	r0, #35	; 0x23
   15204:	subs	r1, r7, r1
   15208:	sbcs	r0, r6, r0
   1520c:	bcc	15280 <flatcc_json_printer_uint64@@Base+0x11c>
   15210:	movw	r1, #0
   15214:	movw	r0, #46771	; 0xb6b3
   15218:	movt	r1, #42852	; 0xa764
   1521c:	movt	r0, #3552	; 0xde0
   15220:	subs	r1, r7, r1
   15224:	sbcs	r0, r6, r0
   15228:	bcc	152c8 <flatcc_json_printer_uint64@@Base+0x164>
   1522c:	movw	r1, #65535	; 0xffff
   15230:	movw	r0, #8964	; 0x2304
   15234:	mov	r8, #19
   15238:	movt	r1, #35303	; 0x89e7
   1523c:	movt	r0, #35527	; 0x8ac7
   15240:	subs	r1, r1, r7
   15244:	sbcs	r0, r0, r6
   15248:	movwcc	r8, #20
   1524c:	b	15308 <flatcc_json_printer_uint64@@Base+0x1a4>
   15250:	movw	r0, #59392	; 0xe800
   15254:	movt	r0, #18550	; 0x4876
   15258:	subs	r0, r7, r0
   1525c:	sbcs	r0, r6, #23
   15260:	bcc	152ac <flatcc_json_printer_uint64@@Base+0x148>
   15264:	movw	r0, #4095	; 0xfff
   15268:	mov	r8, #12
   1526c:	movt	r0, #54437	; 0xd4a5
   15270:	subs	r0, r0, r7
   15274:	rscs	r0, r6, #232	; 0xe8
   15278:	movwcc	r8, #13
   1527c:	b	15308 <flatcc_json_printer_uint64@@Base+0x1a4>
   15280:	movw	r1, #32768	; 0x8000
   15284:	movw	r0, #36222	; 0x8d7e
   15288:	movt	r1, #42182	; 0xa4c6
   1528c:	movt	r0, #3
   15290:	subs	r1, r7, r1
   15294:	sbcs	r0, r6, r0
   15298:	bcc	152ec <flatcc_json_printer_uint64@@Base+0x188>
   1529c:	mov	r0, #0
   152a0:	mov	r8, #16
   152a4:	strb	r0, [r4, #16]!
   152a8:	b	153b8 <flatcc_json_printer_uint64@@Base+0x254>
   152ac:	movw	r0, #58367	; 0xe3ff
   152b0:	mov	r8, #10
   152b4:	movt	r0, #21515	; 0x540b
   152b8:	subs	r0, r0, r7
   152bc:	rscs	r0, r6, #2
   152c0:	movwcc	r8, #11
   152c4:	b	15308 <flatcc_json_printer_uint64@@Base+0x1a4>
   152c8:	movw	r1, #65535	; 0xffff
   152cc:	movw	r0, #17784	; 0x4578
   152d0:	mov	r8, #17
   152d4:	movt	r1, #23945	; 0x5d89
   152d8:	movt	r0, #355	; 0x163
   152dc:	subs	r1, r1, r7
   152e0:	sbcs	r0, r0, r6
   152e4:	movwcc	r8, #18
   152e8:	b	15308 <flatcc_json_printer_uint64@@Base+0x1a4>
   152ec:	movw	r1, #16383	; 0x3fff
   152f0:	movw	r0, #23283	; 0x5af3
   152f4:	mov	r8, #14
   152f8:	movt	r1, #4218	; 0x107a
   152fc:	subs	r1, r1, r7
   15300:	sbcs	r0, r0, r6
   15304:	movwcc	r8, #15
   15308:	mov	r0, #0
   1530c:	tst	r8, #1
   15310:	strb	r0, [r4, r8]!
   15314:	bne	1547c <flatcc_json_printer_uint64@@Base+0x318>
   15318:	sub	r0, r8, #10
   1531c:	cmp	r0, #10
   15320:	bhi	155c8 <flatcc_json_printer_uint64@@Base+0x464>
   15324:	add	r1, pc, #0
   15328:	ldr	pc, [r1, r0, lsl #2]
   1532c:	andeq	r5, r1, r8, asr #8
   15330:	andeq	r5, r1, r8, asr #11
   15334:	andeq	r5, r1, r8, lsl r4
   15338:	andeq	r5, r1, r8, asr #11
   1533c:	andeq	r5, r1, r8, ror #7
   15340:	andeq	r5, r1, r8, asr #11
   15344:			; <UNDEFINED> instruction: 0x000153b8
   15348:	andeq	r5, r1, r8, asr #11
   1534c:	andeq	r5, r1, r8, lsl #7
   15350:	andeq	r5, r1, r8, asr #11
   15354:	andeq	r5, r1, r8, asr r3
   15358:	mov	r0, r7
   1535c:	mov	r1, r6
   15360:	mov	r2, #100	; 0x64
   15364:	mov	r3, #0
   15368:	mov	r5, #100	; 0x64
   1536c:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   15370:	mov	r6, r1
   15374:	mls	r1, r0, r5, r7
   15378:	mov	r7, r0
   1537c:	add	r1, r9, r1, lsl #1
   15380:	ldrh	r1, [r1]
   15384:	strh	r1, [r4, #-2]!
   15388:	mov	r0, r7
   1538c:	mov	r1, r6
   15390:	mov	r2, #100	; 0x64
   15394:	mov	r3, #0
   15398:	mov	r5, #100	; 0x64
   1539c:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   153a0:	mov	r6, r1
   153a4:	mls	r1, r0, r5, r7
   153a8:	mov	r7, r0
   153ac:	add	r1, r9, r1, lsl #1
   153b0:	ldrh	r1, [r1]
   153b4:	strh	r1, [r4, #-2]!
   153b8:	mov	r0, r7
   153bc:	mov	r1, r6
   153c0:	mov	r2, #100	; 0x64
   153c4:	mov	r3, #0
   153c8:	mov	r5, #100	; 0x64
   153cc:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   153d0:	mov	r6, r1
   153d4:	mls	r1, r0, r5, r7
   153d8:	mov	r7, r0
   153dc:	add	r1, r9, r1, lsl #1
   153e0:	ldrh	r1, [r1]
   153e4:	strh	r1, [r4, #-2]!
   153e8:	mov	r0, r7
   153ec:	mov	r1, r6
   153f0:	mov	r2, #100	; 0x64
   153f4:	mov	r3, #0
   153f8:	mov	r5, #100	; 0x64
   153fc:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   15400:	mov	r6, r1
   15404:	mls	r1, r0, r5, r7
   15408:	mov	r7, r0
   1540c:	add	r1, r9, r1, lsl #1
   15410:	ldrh	r1, [r1]
   15414:	strh	r1, [r4, #-2]!
   15418:	mov	r0, r7
   1541c:	mov	r1, r6
   15420:	mov	r2, #100	; 0x64
   15424:	mov	r3, #0
   15428:	mov	r5, #100	; 0x64
   1542c:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   15430:	mov	r6, r1
   15434:	mls	r1, r0, r5, r7
   15438:	mov	r7, r0
   1543c:	add	r1, r9, r1, lsl #1
   15440:	ldrh	r1, [r1]
   15444:	strh	r1, [r4, #-2]!
   15448:	mov	r0, r7
   1544c:	mov	r1, r6
   15450:	mov	r2, #100	; 0x64
   15454:	mov	r3, #0
   15458:	mov	r5, #100	; 0x64
   1545c:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   15460:	mov	r6, r1
   15464:	mls	r1, r0, r5, r7
   15468:	mov	r7, r0
   1546c:	add	r1, r9, r1, lsl #1
   15470:	ldrh	r1, [r1]
   15474:	strh	r1, [r4, #-2]!
   15478:	b	155c8 <flatcc_json_printer_uint64@@Base+0x464>
   1547c:	sub	r0, r8, #11
   15480:	cmp	r0, #8
   15484:	bhi	155c8 <flatcc_json_printer_uint64@@Base+0x464>
   15488:	add	r1, pc, #0
   1548c:	ldr	pc, [r1, r0, lsl #2]
   15490:	andeq	r5, r1, ip, ror #10
   15494:	andeq	r5, r1, r8, asr #11
   15498:	andeq	r5, r1, ip, lsr r5
   1549c:	andeq	r5, r1, r8, asr #11
   154a0:	andeq	r5, r1, ip, lsl #10
   154a4:	andeq	r5, r1, r8, asr #11
   154a8:	ldrdeq	r5, [r1], -ip
   154ac:	andeq	r5, r1, r8, asr #11
   154b0:			; <UNDEFINED> instruction: 0x000154b4
   154b4:	mov	r0, r7
   154b8:	mov	r1, r6
   154bc:	mov	r2, #100	; 0x64
   154c0:	mov	r3, #0
   154c4:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   154c8:	mov	r7, r0
   154cc:	add	r0, r9, r2, lsl #1
   154d0:	mov	r6, r1
   154d4:	ldrh	r0, [r0]
   154d8:	strh	r0, [r4, #-2]!
   154dc:	mov	r0, r7
   154e0:	mov	r1, r6
   154e4:	mov	r2, #100	; 0x64
   154e8:	mov	r3, #0
   154ec:	mov	r5, #100	; 0x64
   154f0:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   154f4:	mov	r6, r1
   154f8:	mls	r1, r0, r5, r7
   154fc:	mov	r7, r0
   15500:	add	r1, r9, r1, lsl #1
   15504:	ldrh	r1, [r1]
   15508:	strh	r1, [r4, #-2]!
   1550c:	mov	r0, r7
   15510:	mov	r1, r6
   15514:	mov	r2, #100	; 0x64
   15518:	mov	r3, #0
   1551c:	mov	r5, #100	; 0x64
   15520:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   15524:	mov	r6, r1
   15528:	mls	r1, r0, r5, r7
   1552c:	mov	r7, r0
   15530:	add	r1, r9, r1, lsl #1
   15534:	ldrh	r1, [r1]
   15538:	strh	r1, [r4, #-2]!
   1553c:	mov	r0, r7
   15540:	mov	r1, r6
   15544:	mov	r2, #100	; 0x64
   15548:	mov	r3, #0
   1554c:	mov	r5, #100	; 0x64
   15550:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   15554:	mov	r6, r1
   15558:	mls	r1, r0, r5, r7
   1555c:	mov	r7, r0
   15560:	add	r1, r9, r1, lsl #1
   15564:	ldrh	r1, [r1]
   15568:	strh	r1, [r4, #-2]!
   1556c:	mov	r0, r7
   15570:	mov	r1, r6
   15574:	mov	r2, #100	; 0x64
   15578:	mov	r3, #0
   1557c:	mov	sl, #100	; 0x64
   15580:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   15584:	mov	r2, #10
   15588:	mov	r3, #0
   1558c:	mov	r5, r0
   15590:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   15594:	orr	r0, r2, #48	; 0x30
   15598:	mov	r1, r6
   1559c:	mov	r2, #1000	; 0x3e8
   155a0:	mov	r3, #0
   155a4:	strb	r0, [r4, #-3]!
   155a8:	mls	r0, r5, sl, r7
   155ac:	add	r0, r9, r0, lsl #1
   155b0:	ldrh	r0, [r0]
   155b4:	strh	r0, [r4, #1]
   155b8:	mov	r0, r7
   155bc:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   155c0:	mov	r7, r0
   155c4:	mov	r6, r1
   155c8:	mov	r0, r7
   155cc:	mov	r1, r6
   155d0:	mov	r2, #100	; 0x64
   155d4:	mov	r3, #0
   155d8:	mov	r5, #100	; 0x64
   155dc:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   155e0:	mls	r2, r0, r5, r7
   155e4:	mov	r3, #0
   155e8:	add	r2, r9, r2, lsl #1
   155ec:	ldrh	r2, [r2]
   155f0:	strh	r2, [r4, #-2]
   155f4:	mov	r2, #100	; 0x64
   155f8:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   155fc:	add	r0, r9, r2, lsl #1
   15600:	mov	r1, r6
   15604:	movw	r2, #10000	; 0x2710
   15608:	mov	r3, #0
   1560c:	ldrh	r0, [r0]
   15610:	strh	r0, [r4, #-4]
   15614:	mov	r0, r7
   15618:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   1561c:	mov	r2, #100	; 0x64
   15620:	mov	r3, #0
   15624:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   15628:	add	r0, r9, r2, lsl #1
   1562c:	movw	r2, #16960	; 0x4240
   15630:	mov	r1, r6
   15634:	mov	r3, #0
   15638:	movt	r2, #15
   1563c:	ldrh	r0, [r0]
   15640:	strh	r0, [r4, #-6]
   15644:	mov	r0, r7
   15648:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   1564c:	mov	r2, #100	; 0x64
   15650:	mov	r3, #0
   15654:	bl	1fbd0 <flatcc_json_printer_clear@@Base+0x56c>
   15658:	add	r0, r9, r2, lsl #1
   1565c:	ldrh	r0, [r0]
   15660:	strh	r0, [r4, #-8]
   15664:	mov	r0, r8
   15668:	sub	sp, fp, #28
   1566c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015670 <flatcc_json_printer_int8@@Base>:
   15670:	push	{r4, r5, fp, lr}
   15674:	add	fp, sp, #8
   15678:	mov	r2, r1
   1567c:	ldr	r1, [r0, #20]
   15680:	mov	r4, r0
   15684:	uxtb	r0, r2
   15688:	cmn	r2, #1
   1568c:	rsble	r2, r2, #0
   15690:	lsr	r5, r0, #7
   15694:	movle	r0, #45	; 0x2d
   15698:	strble	r0, [r1], #1
   1569c:	uxtb	r0, r2
   156a0:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   156a4:	ldr	r1, [r4, #20]
   156a8:	add	r0, r0, r5
   156ac:	add	r0, r1, r0
   156b0:	str	r0, [r4, #20]
   156b4:	pop	{r4, r5, fp, pc}

000156b8 <flatcc_json_printer_int16@@Base>:
   156b8:	push	{r4, r5, fp, lr}
   156bc:	add	fp, sp, #8
   156c0:	mov	r2, r1
   156c4:	ldr	r1, [r0, #20]
   156c8:	mov	r4, r0
   156cc:	uxth	r0, r2
   156d0:	cmn	r2, #1
   156d4:	rsble	r2, r2, #0
   156d8:	lsr	r5, r0, #15
   156dc:	movle	r0, #45	; 0x2d
   156e0:	strble	r0, [r1], #1
   156e4:	uxth	r0, r2
   156e8:	bl	14cd0 <flatcc_json_printer_uint16@@Base+0x2c>
   156ec:	ldr	r1, [r4, #20]
   156f0:	add	r0, r0, r5
   156f4:	add	r0, r1, r0
   156f8:	str	r0, [r4, #20]
   156fc:	pop	{r4, r5, fp, pc}

00015700 <flatcc_json_printer_int32@@Base>:
   15700:	push	{r4, r5, fp, lr}
   15704:	add	fp, sp, #8
   15708:	mov	r2, r1
   1570c:	lsr	r5, r1, #31
   15710:	ldr	r1, [r0, #20]
   15714:	mov	r4, r0
   15718:	cmn	r2, #1
   1571c:	movle	r0, #45	; 0x2d
   15720:	rsble	r2, r2, #0
   15724:	strble	r0, [r1], #1
   15728:	mov	r0, r2
   1572c:	bl	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   15730:	ldr	r1, [r4, #20]
   15734:	add	r0, r0, r5
   15738:	add	r0, r1, r0
   1573c:	str	r0, [r4, #20]
   15740:	pop	{r4, r5, fp, pc}

00015744 <flatcc_json_printer_int64@@Base>:
   15744:	push	{r4, r5, fp, lr}
   15748:	add	fp, sp, #8
   1574c:	mov	r1, r3
   15750:	mov	r3, r2
   15754:	ldr	r2, [r0, #20]
   15758:	mov	r4, r0
   1575c:	lsr	r5, r1, #31
   15760:	cmn	r1, #1
   15764:	bgt	15778 <flatcc_json_printer_int64@@Base+0x34>
   15768:	mov	r0, #45	; 0x2d
   1576c:	rsbs	r3, r3, #0
   15770:	strb	r0, [r2], #1
   15774:	rsc	r1, r1, #0
   15778:	mov	r0, r3
   1577c:	bl	15194 <flatcc_json_printer_uint64@@Base+0x30>
   15780:	ldr	r1, [r4, #20]
   15784:	add	r0, r0, r5
   15788:	add	r0, r1, r0
   1578c:	str	r0, [r4, #20]
   15790:	pop	{r4, r5, fp, pc}

00015794 <flatcc_json_printer_float@@Base>:
   15794:	push	{r4, sl, fp, lr}
   15798:	add	fp, sp, #8
   1579c:	vcvt.f64.f32	d0, s0
   157a0:	mov	r4, r0
   157a4:	ldr	r0, [r0, #20]
   157a8:	bl	13ee0 <flatcc_json_printer_fmt_float@@Base+0x8>
   157ac:	ldr	r1, [r4, #20]
   157b0:	add	r0, r1, r0
   157b4:	str	r0, [r4, #20]
   157b8:	pop	{r4, sl, fp, pc}

000157bc <flatcc_json_printer_double@@Base>:
   157bc:	push	{r4, sl, fp, lr}
   157c0:	add	fp, sp, #8
   157c4:	mov	r4, r0
   157c8:	ldr	r0, [r0, #20]
   157cc:	bl	13ee0 <flatcc_json_printer_fmt_float@@Base+0x8>
   157d0:	ldr	r1, [r4, #20]
   157d4:	add	r0, r1, r0
   157d8:	str	r0, [r4, #20]
   157dc:	pop	{r4, sl, fp, pc}

000157e0 <flatcc_json_printer_enum@@Base>:
   157e0:	push	{r4, r5, r6, r7, fp, lr}
   157e4:	add	fp, sp, #16
   157e8:	mov	r4, r0
   157ec:	ldr	r0, [r0, #20]
   157f0:	mov	r6, r1
   157f4:	mov	r1, #34	; 0x22
   157f8:	mov	r5, r2
   157fc:	strb	r1, [r0]
   15800:	ldrb	r2, [r4, #26]
   15804:	ldr	r0, [r4, #20]
   15808:	ldr	r1, [r4, #16]
   1580c:	cmp	r2, #0
   15810:	addeq	r0, r0, #1
   15814:	add	r2, r0, r5
   15818:	str	r0, [r4, #20]
   1581c:	cmp	r2, r1
   15820:	bcc	15894 <flatcc_json_printer_enum@@Base+0xb4>
   15824:	cmp	r0, r1
   15828:	bcc	15844 <flatcc_json_printer_enum@@Base+0x64>
   1582c:	ldr	r2, [r4, #44]	; 0x2c
   15830:	mov	r0, r4
   15834:	mov	r1, #0
   15838:	blx	r2
   1583c:	ldr	r1, [r4, #16]
   15840:	ldr	r0, [r4, #20]
   15844:	sub	r7, r1, r0
   15848:	cmp	r7, r5
   1584c:	bcs	15894 <flatcc_json_printer_enum@@Base+0xb4>
   15850:	mov	r1, r6
   15854:	mov	r2, r7
   15858:	bl	128b4 <memcpy@plt>
   1585c:	ldr	r0, [r4, #20]
   15860:	ldr	r2, [r4, #44]	; 0x2c
   15864:	mov	r1, #0
   15868:	add	r0, r0, r7
   1586c:	str	r0, [r4, #20]
   15870:	mov	r0, r4
   15874:	blx	r2
   15878:	ldr	r1, [r4, #16]
   1587c:	ldr	r0, [r4, #20]
   15880:	sub	r5, r5, r7
   15884:	add	r6, r6, r7
   15888:	sub	r7, r1, r0
   1588c:	cmp	r5, r7
   15890:	bhi	15850 <flatcc_json_printer_enum@@Base+0x70>
   15894:	mov	r1, r6
   15898:	mov	r2, r5
   1589c:	bl	128b4 <memcpy@plt>
   158a0:	ldr	r0, [r4, #20]
   158a4:	add	r1, r0, r5
   158a8:	str	r1, [r4, #20]
   158ac:	mov	r1, #34	; 0x22
   158b0:	strb	r1, [r0, r5]
   158b4:	ldrb	r0, [r4, #26]
   158b8:	ldr	r1, [r4, #20]
   158bc:	cmp	r0, #0
   158c0:	addeq	r1, r1, #1
   158c4:	str	r1, [r4, #20]
   158c8:	pop	{r4, r5, r6, r7, fp, pc}

000158cc <flatcc_json_printer_delimit_enum_flags@@Base>:
   158cc:	ldrb	ip, [r0, #26]
   158d0:	ldr	r3, [r0, #20]
   158d4:	mov	r2, #34	; 0x22
   158d8:	cmp	r1, #0
   158dc:	movwne	r1, #1
   158e0:	strb	r2, [r3]
   158e4:	clz	r2, ip
   158e8:	lsr	r2, r2, #5
   158ec:	orr	r1, r1, r2
   158f0:	ldr	r2, [r0, #20]
   158f4:	add	r1, r2, r1
   158f8:	str	r1, [r0, #20]
   158fc:	bx	lr

00015900 <flatcc_json_printer_enum_flag@@Base>:
   15900:	push	{r4, r5, r6, r7, fp, lr}
   15904:	add	fp, sp, #16
   15908:	mov	r5, r0
   1590c:	ldr	r0, [r0, #20]
   15910:	mov	r6, r2
   15914:	mov	r2, #32
   15918:	cmp	r1, #0
   1591c:	mov	r4, r3
   15920:	strb	r2, [r0]
   15924:	ldr	r0, [r5, #20]
   15928:	ldr	r2, [r5, #16]
   1592c:	addgt	r0, r0, #1
   15930:	add	r1, r0, r3
   15934:	str	r0, [r5, #20]
   15938:	cmp	r1, r2
   1593c:	bcc	159b0 <flatcc_json_printer_enum_flag@@Base+0xb0>
   15940:	cmp	r0, r2
   15944:	bcc	15960 <flatcc_json_printer_enum_flag@@Base+0x60>
   15948:	ldr	r2, [r5, #44]	; 0x2c
   1594c:	mov	r0, r5
   15950:	mov	r1, #0
   15954:	blx	r2
   15958:	ldr	r2, [r5, #16]
   1595c:	ldr	r0, [r5, #20]
   15960:	sub	r7, r2, r0
   15964:	cmp	r7, r4
   15968:	bcs	159b0 <flatcc_json_printer_enum_flag@@Base+0xb0>
   1596c:	mov	r1, r6
   15970:	mov	r2, r7
   15974:	bl	128b4 <memcpy@plt>
   15978:	ldr	r0, [r5, #20]
   1597c:	ldr	r2, [r5, #44]	; 0x2c
   15980:	mov	r1, #0
   15984:	add	r0, r0, r7
   15988:	str	r0, [r5, #20]
   1598c:	mov	r0, r5
   15990:	blx	r2
   15994:	ldr	r1, [r5, #16]
   15998:	ldr	r0, [r5, #20]
   1599c:	sub	r4, r4, r7
   159a0:	add	r6, r6, r7
   159a4:	sub	r7, r1, r0
   159a8:	cmp	r4, r7
   159ac:	bhi	1596c <flatcc_json_printer_enum_flag@@Base+0x6c>
   159b0:	mov	r1, r6
   159b4:	mov	r2, r4
   159b8:	bl	128b4 <memcpy@plt>
   159bc:	ldr	r0, [r5, #20]
   159c0:	add	r0, r0, r4
   159c4:	str	r0, [r5, #20]
   159c8:	pop	{r4, r5, r6, r7, fp, pc}

000159cc <flatcc_json_printer_string_field@@Base>:
   159cc:	push	{r4, r5, fp, lr}
   159d0:	add	fp, sp, #8
   159d4:	mov	r4, r0
   159d8:	mov	r0, #4
   159dc:	add	r0, r0, r2, lsl #1
   159e0:	ldr	r2, [r1, #8]
   159e4:	cmp	r0, r2
   159e8:	popge	{r4, r5, fp, pc}
   159ec:	ldr	r2, [r1, #4]
   159f0:	add	r0, r2, r0
   159f4:	ldrh	r0, [r0]
   159f8:	cmp	r0, #0
   159fc:	ldrne	r2, [r1]
   15a00:	addsne	r5, r2, r0
   15a04:	bne	15a0c <flatcc_json_printer_string_field@@Base+0x40>
   15a08:	pop	{r4, r5, fp, pc}
   15a0c:	ldr	ip, [r1, #16]
   15a10:	ldr	r2, [fp, #8]
   15a14:	add	r0, ip, #1
   15a18:	cmp	ip, #0
   15a1c:	str	r0, [r1, #16]
   15a20:	beq	15a38 <flatcc_json_printer_string_field@@Base+0x6c>
   15a24:	ldr	r0, [r4, #20]
   15a28:	add	r1, r0, #1
   15a2c:	str	r1, [r4, #20]
   15a30:	mov	r1, #44	; 0x2c
   15a34:	strb	r1, [r0]
   15a38:	mov	r0, r4
   15a3c:	mov	r1, r3
   15a40:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   15a44:	ldr	r0, [r5]
   15a48:	ldr	r2, [r5, r0]!
   15a4c:	mov	r0, r4
   15a50:	add	r1, r5, #4
   15a54:	pop	{r4, r5, fp, lr}
   15a58:	b	14768 <flatcc_json_printer_string@@Base+0x4>
   15a5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15a60:	add	fp, sp, #24
   15a64:	mov	r4, r0
   15a68:	mov	r6, r1
   15a6c:	ldr	r0, [r0, #20]
   15a70:	mov	r8, r2
   15a74:	ldrb	r1, [r4, #25]
   15a78:	cmp	r1, #0
   15a7c:	beq	15b38 <flatcc_json_printer_string_field@@Base+0x16c>
   15a80:	add	r1, r0, #1
   15a84:	str	r1, [r4, #20]
   15a88:	mov	r1, #10
   15a8c:	strb	r1, [r0]
   15a90:	ldr	r0, [r4, #20]
   15a94:	ldrb	r2, [r4, #25]
   15a98:	ldr	r3, [r4, #32]
   15a9c:	ldr	r1, [r4, #16]
   15aa0:	mla	r5, r3, r2, r0
   15aa4:	mul	r7, r3, r2
   15aa8:	cmp	r5, r1
   15aac:	bls	15b1c <flatcc_json_printer_string_field@@Base+0x150>
   15ab0:	cmp	r0, r1
   15ab4:	bcc	15ad0 <flatcc_json_printer_string_field@@Base+0x104>
   15ab8:	ldr	r2, [r4, #44]	; 0x2c
   15abc:	mov	r0, r4
   15ac0:	mov	r1, #0
   15ac4:	blx	r2
   15ac8:	ldr	r1, [r4, #16]
   15acc:	ldr	r0, [r4, #20]
   15ad0:	sub	r5, r1, r0
   15ad4:	cmp	r5, r7
   15ad8:	bcs	15b1c <flatcc_json_printer_string_field@@Base+0x150>
   15adc:	mov	r1, #32
   15ae0:	mov	r2, r5
   15ae4:	bl	12944 <memset@plt>
   15ae8:	ldr	r0, [r4, #20]
   15aec:	ldr	r2, [r4, #44]	; 0x2c
   15af0:	mov	r1, #0
   15af4:	add	r0, r0, r5
   15af8:	str	r0, [r4, #20]
   15afc:	mov	r0, r4
   15b00:	blx	r2
   15b04:	ldr	r1, [r4, #16]
   15b08:	ldr	r0, [r4, #20]
   15b0c:	sub	r7, r7, r5
   15b10:	sub	r5, r1, r0
   15b14:	cmp	r7, r5
   15b18:	bhi	15adc <flatcc_json_printer_string_field@@Base+0x110>
   15b1c:	mov	r1, #32
   15b20:	mov	r2, r7
   15b24:	bl	12944 <memset@plt>
   15b28:	ldr	r0, [r4, #20]
   15b2c:	add	r0, r0, r7
   15b30:	str	r0, [r4, #20]
   15b34:	b	15b58 <flatcc_json_printer_string_field@@Base+0x18c>
   15b38:	ldr	r1, [r4, #16]
   15b3c:	cmp	r0, r1
   15b40:	bcc	15b58 <flatcc_json_printer_string_field@@Base+0x18c>
   15b44:	ldr	r2, [r4, #44]	; 0x2c
   15b48:	mov	r0, r4
   15b4c:	mov	r1, #0
   15b50:	blx	r2
   15b54:	ldr	r0, [r4, #20]
   15b58:	mov	r1, #34	; 0x22
   15b5c:	strb	r1, [r0]
   15b60:	ldrb	r2, [r4, #26]
   15b64:	ldr	r0, [r4, #20]
   15b68:	ldr	r1, [r4, #16]
   15b6c:	cmp	r2, #0
   15b70:	addeq	r0, r0, #1
   15b74:	add	r2, r0, r8
   15b78:	str	r0, [r4, #20]
   15b7c:	cmp	r2, r1
   15b80:	bcc	15bf4 <flatcc_json_printer_string_field@@Base+0x228>
   15b84:	cmp	r0, r1
   15b88:	bcc	15ba4 <flatcc_json_printer_string_field@@Base+0x1d8>
   15b8c:	ldr	r2, [r4, #44]	; 0x2c
   15b90:	mov	r0, r4
   15b94:	mov	r1, #0
   15b98:	blx	r2
   15b9c:	ldr	r1, [r4, #16]
   15ba0:	ldr	r0, [r4, #20]
   15ba4:	sub	r7, r1, r0
   15ba8:	cmp	r7, r8
   15bac:	bcs	15bf4 <flatcc_json_printer_string_field@@Base+0x228>
   15bb0:	mov	r1, r6
   15bb4:	mov	r2, r7
   15bb8:	bl	128b4 <memcpy@plt>
   15bbc:	ldr	r0, [r4, #20]
   15bc0:	ldr	r2, [r4, #44]	; 0x2c
   15bc4:	mov	r1, #0
   15bc8:	add	r0, r0, r7
   15bcc:	str	r0, [r4, #20]
   15bd0:	mov	r0, r4
   15bd4:	blx	r2
   15bd8:	ldr	r1, [r4, #16]
   15bdc:	ldr	r0, [r4, #20]
   15be0:	sub	r8, r8, r7
   15be4:	add	r6, r6, r7
   15be8:	sub	r7, r1, r0
   15bec:	cmp	r8, r7
   15bf0:	bhi	15bb0 <flatcc_json_printer_string_field@@Base+0x1e4>
   15bf4:	mov	r1, r6
   15bf8:	mov	r2, r8
   15bfc:	bl	128b4 <memcpy@plt>
   15c00:	ldr	r0, [r4, #20]
   15c04:	add	r1, r0, r8
   15c08:	str	r1, [r4, #20]
   15c0c:	mov	r1, #34	; 0x22
   15c10:	strb	r1, [r0, r8]
   15c14:	ldrb	r0, [r4, #26]
   15c18:	ldr	r1, [r4, #20]
   15c1c:	cmp	r0, #0
   15c20:	addeq	r1, r1, #1
   15c24:	add	r0, r1, #1
   15c28:	str	r0, [r4, #20]
   15c2c:	mov	r0, #58	; 0x3a
   15c30:	strb	r0, [r1]
   15c34:	mov	r1, #32
   15c38:	ldr	r0, [r4, #20]
   15c3c:	strb	r1, [r0]
   15c40:	ldrb	r0, [r4, #25]
   15c44:	ldr	r1, [r4, #20]
   15c48:	cmp	r0, #0
   15c4c:	addne	r1, r1, #1
   15c50:	str	r1, [r4, #20]
   15c54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015c58 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   15c58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c5c:	add	fp, sp, #28
   15c60:	sub	sp, sp, #12
   15c64:	mov	r4, r0
   15c68:	mov	r0, #4
   15c6c:	add	r0, r0, r2, lsl #1
   15c70:	ldr	r2, [r1, #8]
   15c74:	cmp	r0, r2
   15c78:	bge	15e18 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   15c7c:	ldr	r2, [r1, #4]
   15c80:	add	r0, r2, r0
   15c84:	ldrh	r0, [r0]
   15c88:	cmp	r0, #0
   15c8c:	beq	15e18 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   15c90:	ldr	r5, [fp, #12]
   15c94:	ldr	r2, [r1]
   15c98:	cmp	r5, #0
   15c9c:	add	r6, r2, r0
   15ca0:	movwne	r5, #1
   15ca4:	cmp	r6, #0
   15ca8:	beq	15e18 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   15cac:	ldr	r0, [r1, #16]
   15cb0:	ldr	r2, [fp, #8]
   15cb4:	add	r7, r0, #1
   15cb8:	cmp	r0, #0
   15cbc:	str	r7, [r1, #16]
   15cc0:	beq	15cd8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x80>
   15cc4:	ldr	r0, [r4, #20]
   15cc8:	add	r1, r0, #1
   15ccc:	str	r1, [r4, #20]
   15cd0:	mov	r1, #44	; 0x2c
   15cd4:	strb	r1, [r0]
   15cd8:	mov	r0, r4
   15cdc:	mov	r1, r3
   15ce0:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   15ce4:	ldr	r0, [r6]
   15ce8:	ldr	r0, [r6, r0]!
   15cec:	str	r0, [sp, #8]
   15cf0:	ldr	r0, [r4, #20]
   15cf4:	add	r1, r0, #1
   15cf8:	str	r1, [r4, #20]
   15cfc:	mov	r1, #34	; 0x22
   15d00:	strb	r1, [r0]
   15d04:	movw	r1, #43691	; 0xaaab
   15d08:	ldr	r0, [sp, #8]
   15d0c:	movt	r1, #43690	; 0xaaaa
   15d10:	lsl	r0, r0, #2
   15d14:	umull	r0, r1, r0, r1
   15d18:	mov	r0, #3
   15d1c:	add	r0, r0, r1, lsr #1
   15d20:	ldr	r1, [r4, #16]
   15d24:	bic	r7, r0, #3
   15d28:	ldr	r0, [r4, #20]
   15d2c:	add	r2, r0, r7
   15d30:	cmp	r2, r1
   15d34:	bcc	15d50 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   15d38:	ldr	r2, [r4, #44]	; 0x2c
   15d3c:	mov	r0, r4
   15d40:	mov	r1, #0
   15d44:	blx	r2
   15d48:	ldr	r1, [r4, #16]
   15d4c:	ldr	r0, [r4, #20]
   15d50:	add	r2, r0, r7
   15d54:	add	r6, r6, #4
   15d58:	cmp	r2, r1
   15d5c:	bls	15df0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   15d60:	add	r9, sp, #4
   15d64:	mov	sl, #3
   15d68:	sub	r1, r1, r0
   15d6c:	bic	r7, r1, #3
   15d70:	add	r1, r7, r7, lsl #1
   15d74:	cmp	r1, #0
   15d78:	beq	15e20 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c8>
   15d7c:	lsr	r8, r1, #2
   15d80:	mov	r1, r6
   15d84:	mov	r2, r9
   15d88:	mov	r3, r5
   15d8c:	str	r8, [sp, #4]
   15d90:	bl	1fa8c <flatcc_json_printer_clear@@Base+0x428>
   15d94:	ldr	r0, [r4, #20]
   15d98:	mov	r1, #0
   15d9c:	add	r0, r0, r7
   15da0:	str	r0, [r4, #20]
   15da4:	ldr	r0, [sp, #8]
   15da8:	sub	r0, r0, r8
   15dac:	str	r0, [sp, #8]
   15db0:	mov	r0, r4
   15db4:	ldr	r2, [r4, #44]	; 0x2c
   15db8:	blx	r2
   15dbc:	ldr	r0, [sp, #8]
   15dc0:	movw	r1, #43691	; 0xaaab
   15dc4:	add	r6, r6, r8
   15dc8:	movt	r1, #43690	; 0xaaaa
   15dcc:	lsl	r0, r0, #2
   15dd0:	umull	r0, r1, r0, r1
   15dd4:	add	r0, sl, r1, lsr #1
   15dd8:	ldr	r1, [r4, #16]
   15ddc:	bic	r7, r0, #3
   15de0:	ldr	r0, [r4, #20]
   15de4:	add	r2, r0, r7
   15de8:	cmp	r2, r1
   15dec:	bhi	15d68 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x110>
   15df0:	orr	r3, r5, #128	; 0x80
   15df4:	add	r2, sp, #8
   15df8:	mov	r1, r6
   15dfc:	bl	1fa8c <flatcc_json_printer_clear@@Base+0x428>
   15e00:	ldr	r0, [r4, #20]
   15e04:	add	r1, r0, r7
   15e08:	add	r1, r1, #1
   15e0c:	str	r1, [r4, #20]
   15e10:	mov	r1, #34	; 0x22
   15e14:	strb	r1, [r0, r7]
   15e18:	sub	sp, fp, #28
   15e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e20:	movw	r0, #2328	; 0x918
   15e24:	movw	r1, #1250	; 0x4e2
   15e28:	movw	r3, #2334	; 0x91e
   15e2c:	movw	r2, #277	; 0x115
   15e30:	movt	r0, #2
   15e34:	movt	r1, #2
   15e38:	movt	r3, #2
   15e3c:	bl	12998 <__assert_fail@plt>

00015e40 <flatcc_json_printer_uint8_field@@Base>:
   15e40:	push	{r4, r5, r6, sl, fp, lr}
   15e44:	add	fp, sp, #16
   15e48:	mov	r4, r0
   15e4c:	mov	r0, #4
   15e50:	ldr	r5, [r1, #8]
   15e54:	add	r2, r0, r2, lsl #1
   15e58:	ldr	r0, [fp, #12]
   15e5c:	cmp	r2, r5
   15e60:	bge	15e80 <flatcc_json_printer_uint8_field@@Base+0x40>
   15e64:	ldr	r5, [r1, #4]
   15e68:	add	r2, r5, r2
   15e6c:	ldrh	r2, [r2]
   15e70:	cmp	r2, #0
   15e74:	ldrne	r5, [r1]
   15e78:	addsne	r2, r5, r2
   15e7c:	bne	15ee4 <flatcc_json_printer_uint8_field@@Base+0xa4>
   15e80:	ldrb	r2, [r4, #29]
   15e84:	mov	r6, r0
   15e88:	cmp	r2, #0
   15e8c:	beq	15ee0 <flatcc_json_printer_uint8_field@@Base+0xa0>
   15e90:	ldr	r0, [r1, #16]
   15e94:	ldr	r2, [fp, #8]
   15e98:	add	r5, r0, #1
   15e9c:	cmp	r0, #0
   15ea0:	str	r5, [r1, #16]
   15ea4:	beq	15ebc <flatcc_json_printer_uint8_field@@Base+0x7c>
   15ea8:	ldr	r0, [r4, #20]
   15eac:	add	r1, r0, #1
   15eb0:	str	r1, [r4, #20]
   15eb4:	mov	r1, #44	; 0x2c
   15eb8:	strb	r1, [r0]
   15ebc:	mov	r0, r4
   15ec0:	mov	r1, r3
   15ec4:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   15ec8:	ldr	r1, [r4, #20]
   15ecc:	mov	r0, r6
   15ed0:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   15ed4:	ldr	r1, [r4, #20]
   15ed8:	add	r0, r1, r0
   15edc:	str	r0, [r4, #20]
   15ee0:	pop	{r4, r5, r6, sl, fp, pc}
   15ee4:	ldrb	r6, [r2]
   15ee8:	cmp	r6, r0
   15eec:	bne	15e90 <flatcc_json_printer_uint8_field@@Base+0x50>
   15ef0:	ldrb	r2, [r4, #28]
   15ef4:	mov	r6, r0
   15ef8:	cmp	r2, #0
   15efc:	popne	{r4, r5, r6, sl, fp, pc}
   15f00:	b	15e90 <flatcc_json_printer_uint8_field@@Base+0x50>

00015f04 <flatcc_json_printer_uint16_field@@Base>:
   15f04:	push	{r4, r5, r6, sl, fp, lr}
   15f08:	add	fp, sp, #16
   15f0c:	mov	r4, r0
   15f10:	mov	r0, #4
   15f14:	ldr	r5, [r1, #8]
   15f18:	add	r2, r0, r2, lsl #1
   15f1c:	ldr	r0, [fp, #12]
   15f20:	cmp	r2, r5
   15f24:	bge	15f44 <flatcc_json_printer_uint16_field@@Base+0x40>
   15f28:	ldr	r5, [r1, #4]
   15f2c:	add	r2, r5, r2
   15f30:	ldrh	r2, [r2]
   15f34:	cmp	r2, #0
   15f38:	ldrne	r5, [r1]
   15f3c:	addsne	r2, r5, r2
   15f40:	bne	15fa8 <flatcc_json_printer_uint16_field@@Base+0xa4>
   15f44:	ldrb	r2, [r4, #29]
   15f48:	mov	r6, r0
   15f4c:	cmp	r2, #0
   15f50:	beq	15fa4 <flatcc_json_printer_uint16_field@@Base+0xa0>
   15f54:	ldr	r0, [r1, #16]
   15f58:	ldr	r2, [fp, #8]
   15f5c:	add	r5, r0, #1
   15f60:	cmp	r0, #0
   15f64:	str	r5, [r1, #16]
   15f68:	beq	15f80 <flatcc_json_printer_uint16_field@@Base+0x7c>
   15f6c:	ldr	r0, [r4, #20]
   15f70:	add	r1, r0, #1
   15f74:	str	r1, [r4, #20]
   15f78:	mov	r1, #44	; 0x2c
   15f7c:	strb	r1, [r0]
   15f80:	mov	r0, r4
   15f84:	mov	r1, r3
   15f88:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   15f8c:	ldr	r1, [r4, #20]
   15f90:	mov	r0, r6
   15f94:	bl	14cd0 <flatcc_json_printer_uint16@@Base+0x2c>
   15f98:	ldr	r1, [r4, #20]
   15f9c:	add	r0, r1, r0
   15fa0:	str	r0, [r4, #20]
   15fa4:	pop	{r4, r5, r6, sl, fp, pc}
   15fa8:	ldrh	r6, [r2]
   15fac:	cmp	r6, r0
   15fb0:	bne	15f54 <flatcc_json_printer_uint16_field@@Base+0x50>
   15fb4:	ldrb	r2, [r4, #28]
   15fb8:	mov	r6, r0
   15fbc:	cmp	r2, #0
   15fc0:	popne	{r4, r5, r6, sl, fp, pc}
   15fc4:	b	15f54 <flatcc_json_printer_uint16_field@@Base+0x50>

00015fc8 <flatcc_json_printer_uint32_field@@Base>:
   15fc8:	push	{r4, r5, r6, sl, fp, lr}
   15fcc:	add	fp, sp, #16
   15fd0:	mov	r4, r0
   15fd4:	mov	r0, #4
   15fd8:	ldr	r5, [r1, #8]
   15fdc:	add	r2, r0, r2, lsl #1
   15fe0:	ldr	r0, [fp, #12]
   15fe4:	cmp	r2, r5
   15fe8:	bge	16008 <flatcc_json_printer_uint32_field@@Base+0x40>
   15fec:	ldr	r5, [r1, #4]
   15ff0:	add	r2, r5, r2
   15ff4:	ldrh	r2, [r2]
   15ff8:	cmp	r2, #0
   15ffc:	ldrne	r5, [r1]
   16000:	addsne	r2, r5, r2
   16004:	bne	1606c <flatcc_json_printer_uint32_field@@Base+0xa4>
   16008:	ldrb	r2, [r4, #29]
   1600c:	mov	r6, r0
   16010:	cmp	r2, #0
   16014:	beq	16068 <flatcc_json_printer_uint32_field@@Base+0xa0>
   16018:	ldr	r0, [r1, #16]
   1601c:	ldr	r2, [fp, #8]
   16020:	add	r5, r0, #1
   16024:	cmp	r0, #0
   16028:	str	r5, [r1, #16]
   1602c:	beq	16044 <flatcc_json_printer_uint32_field@@Base+0x7c>
   16030:	ldr	r0, [r4, #20]
   16034:	add	r1, r0, #1
   16038:	str	r1, [r4, #20]
   1603c:	mov	r1, #44	; 0x2c
   16040:	strb	r1, [r0]
   16044:	mov	r0, r4
   16048:	mov	r1, r3
   1604c:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   16050:	ldr	r1, [r4, #20]
   16054:	mov	r0, r6
   16058:	bl	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   1605c:	ldr	r1, [r4, #20]
   16060:	add	r0, r1, r0
   16064:	str	r0, [r4, #20]
   16068:	pop	{r4, r5, r6, sl, fp, pc}
   1606c:	ldr	r6, [r2]
   16070:	cmp	r6, r0
   16074:	bne	16018 <flatcc_json_printer_uint32_field@@Base+0x50>
   16078:	ldrb	r2, [r4, #28]
   1607c:	mov	r6, r0
   16080:	cmp	r2, #0
   16084:	popne	{r4, r5, r6, sl, fp, pc}
   16088:	b	16018 <flatcc_json_printer_uint32_field@@Base+0x50>

0001608c <flatcc_json_printer_uint64_field@@Base>:
   1608c:	push	{r4, r6, r7, r8, fp, lr}
   16090:	add	fp, sp, #16
   16094:	mov	r4, r0
   16098:	mov	r0, #4
   1609c:	ldr	r6, [r1, #8]
   160a0:	ldr	lr, [fp, #20]
   160a4:	add	r7, r0, r2, lsl #1
   160a8:	ldr	r2, [fp, #16]
   160ac:	cmp	r7, r6
   160b0:	bge	160d0 <flatcc_json_printer_uint64_field@@Base+0x44>
   160b4:	ldr	r6, [r1, #4]
   160b8:	add	r7, r6, r7
   160bc:	ldrh	r7, [r7]
   160c0:	cmp	r7, #0
   160c4:	ldrne	r6, [r1]
   160c8:	addsne	r7, r6, r7
   160cc:	bne	1613c <flatcc_json_printer_uint64_field@@Base+0xb0>
   160d0:	ldrb	r0, [r4, #29]
   160d4:	mov	r8, r2
   160d8:	mov	r7, lr
   160dc:	cmp	r0, #0
   160e0:	beq	16138 <flatcc_json_printer_uint64_field@@Base+0xac>
   160e4:	ldr	r0, [r1, #16]
   160e8:	ldr	r2, [fp, #8]
   160ec:	add	r6, r0, #1
   160f0:	cmp	r0, #0
   160f4:	str	r6, [r1, #16]
   160f8:	beq	16110 <flatcc_json_printer_uint64_field@@Base+0x84>
   160fc:	ldr	r0, [r4, #20]
   16100:	add	r1, r0, #1
   16104:	str	r1, [r4, #20]
   16108:	mov	r1, #44	; 0x2c
   1610c:	strb	r1, [r0]
   16110:	mov	r0, r4
   16114:	mov	r1, r3
   16118:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1611c:	ldr	r2, [r4, #20]
   16120:	mov	r0, r8
   16124:	mov	r1, r7
   16128:	bl	15194 <flatcc_json_printer_uint64@@Base+0x30>
   1612c:	ldr	r1, [r4, #20]
   16130:	add	r0, r1, r0
   16134:	str	r0, [r4, #20]
   16138:	pop	{r4, r6, r7, r8, fp, pc}
   1613c:	ldr	r8, [r7]
   16140:	ldr	r7, [r7, #4]
   16144:	eor	ip, r7, lr
   16148:	eor	r0, r8, r2
   1614c:	orrs	r0, r0, ip
   16150:	bne	160e4 <flatcc_json_printer_uint64_field@@Base+0x58>
   16154:	ldrb	r0, [r4, #28]
   16158:	mov	r8, r2
   1615c:	mov	r7, lr
   16160:	cmp	r0, #0
   16164:	popne	{r4, r6, r7, r8, fp, pc}
   16168:	b	160e4 <flatcc_json_printer_uint64_field@@Base+0x58>

0001616c <flatcc_json_printer_int8_field@@Base>:
   1616c:	push	{r4, r5, r6, sl, fp, lr}
   16170:	add	fp, sp, #16
   16174:	mov	r4, r0
   16178:	mov	r0, #4
   1617c:	ldr	r6, [r1, #8]
   16180:	add	r2, r0, r2, lsl #1
   16184:	ldr	r0, [fp, #12]
   16188:	cmp	r2, r6
   1618c:	bge	161ac <flatcc_json_printer_int8_field@@Base+0x40>
   16190:	ldr	r6, [r1, #4]
   16194:	add	r2, r6, r2
   16198:	ldrh	r2, [r2]
   1619c:	cmp	r2, #0
   161a0:	ldrne	r6, [r1]
   161a4:	addsne	r2, r6, r2
   161a8:	bne	16230 <flatcc_json_printer_int8_field@@Base+0xc4>
   161ac:	ldrb	r2, [r4, #29]
   161b0:	mov	r5, r0
   161b4:	cmp	r2, #0
   161b8:	beq	1622c <flatcc_json_printer_int8_field@@Base+0xc0>
   161bc:	ldr	r0, [r1, #16]
   161c0:	ldr	r2, [fp, #8]
   161c4:	add	r6, r0, #1
   161c8:	cmp	r0, #0
   161cc:	str	r6, [r1, #16]
   161d0:	beq	161e8 <flatcc_json_printer_int8_field@@Base+0x7c>
   161d4:	ldr	r0, [r4, #20]
   161d8:	add	r1, r0, #1
   161dc:	str	r1, [r4, #20]
   161e0:	mov	r1, #44	; 0x2c
   161e4:	strb	r1, [r0]
   161e8:	mov	r0, r4
   161ec:	mov	r1, r3
   161f0:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   161f4:	uxtb	r0, r5
   161f8:	ldr	r1, [r4, #20]
   161fc:	lsr	r6, r0, #7
   16200:	sxtb	r0, r5
   16204:	cmn	r0, #1
   16208:	movle	r0, #45	; 0x2d
   1620c:	rsble	r5, r5, #0
   16210:	strble	r0, [r1], #1
   16214:	uxtb	r0, r5
   16218:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   1621c:	ldr	r1, [r4, #20]
   16220:	add	r0, r0, r6
   16224:	add	r0, r1, r0
   16228:	str	r0, [r4, #20]
   1622c:	pop	{r4, r5, r6, sl, fp, pc}
   16230:	ldrb	r5, [r2]
   16234:	uxtb	r2, r0
   16238:	cmp	r5, r2
   1623c:	bne	161bc <flatcc_json_printer_int8_field@@Base+0x50>
   16240:	ldrb	r2, [r4, #28]
   16244:	mov	r5, r0
   16248:	cmp	r2, #0
   1624c:	popne	{r4, r5, r6, sl, fp, pc}
   16250:	b	161bc <flatcc_json_printer_int8_field@@Base+0x50>

00016254 <flatcc_json_printer_int16_field@@Base>:
   16254:	push	{r4, r5, r6, sl, fp, lr}
   16258:	add	fp, sp, #16
   1625c:	mov	r4, r0
   16260:	mov	r0, #4
   16264:	ldr	r6, [r1, #8]
   16268:	add	r2, r0, r2, lsl #1
   1626c:	ldr	r0, [fp, #12]
   16270:	cmp	r2, r6
   16274:	bge	16294 <flatcc_json_printer_int16_field@@Base+0x40>
   16278:	ldr	r6, [r1, #4]
   1627c:	add	r2, r6, r2
   16280:	ldrh	r2, [r2]
   16284:	cmp	r2, #0
   16288:	ldrne	r6, [r1]
   1628c:	addsne	r2, r6, r2
   16290:	bne	16318 <flatcc_json_printer_int16_field@@Base+0xc4>
   16294:	ldrb	r2, [r4, #29]
   16298:	mov	r5, r0
   1629c:	cmp	r2, #0
   162a0:	beq	16314 <flatcc_json_printer_int16_field@@Base+0xc0>
   162a4:	ldr	r0, [r1, #16]
   162a8:	ldr	r2, [fp, #8]
   162ac:	add	r6, r0, #1
   162b0:	cmp	r0, #0
   162b4:	str	r6, [r1, #16]
   162b8:	beq	162d0 <flatcc_json_printer_int16_field@@Base+0x7c>
   162bc:	ldr	r0, [r4, #20]
   162c0:	add	r1, r0, #1
   162c4:	str	r1, [r4, #20]
   162c8:	mov	r1, #44	; 0x2c
   162cc:	strb	r1, [r0]
   162d0:	mov	r0, r4
   162d4:	mov	r1, r3
   162d8:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   162dc:	uxth	r0, r5
   162e0:	ldr	r1, [r4, #20]
   162e4:	lsr	r6, r0, #15
   162e8:	sxth	r0, r5
   162ec:	cmn	r0, #1
   162f0:	movle	r0, #45	; 0x2d
   162f4:	rsble	r5, r5, #0
   162f8:	strble	r0, [r1], #1
   162fc:	uxth	r0, r5
   16300:	bl	14cd0 <flatcc_json_printer_uint16@@Base+0x2c>
   16304:	ldr	r1, [r4, #20]
   16308:	add	r0, r0, r6
   1630c:	add	r0, r1, r0
   16310:	str	r0, [r4, #20]
   16314:	pop	{r4, r5, r6, sl, fp, pc}
   16318:	ldrh	r5, [r2]
   1631c:	uxth	r2, r0
   16320:	cmp	r5, r2
   16324:	bne	162a4 <flatcc_json_printer_int16_field@@Base+0x50>
   16328:	ldrb	r2, [r4, #28]
   1632c:	mov	r5, r0
   16330:	cmp	r2, #0
   16334:	popne	{r4, r5, r6, sl, fp, pc}
   16338:	b	162a4 <flatcc_json_printer_int16_field@@Base+0x50>

0001633c <flatcc_json_printer_int32_field@@Base>:
   1633c:	push	{r4, r5, r6, sl, fp, lr}
   16340:	add	fp, sp, #16
   16344:	mov	r4, r0
   16348:	mov	r0, #4
   1634c:	ldr	r6, [r1, #8]
   16350:	add	r2, r0, r2, lsl #1
   16354:	ldr	r0, [fp, #12]
   16358:	cmp	r2, r6
   1635c:	bge	1637c <flatcc_json_printer_int32_field@@Base+0x40>
   16360:	ldr	r6, [r1, #4]
   16364:	add	r2, r6, r2
   16368:	ldrh	r2, [r2]
   1636c:	cmp	r2, #0
   16370:	ldrne	r6, [r1]
   16374:	addsne	r2, r6, r2
   16378:	bne	163f8 <flatcc_json_printer_int32_field@@Base+0xbc>
   1637c:	ldrb	r2, [r4, #29]
   16380:	mov	r5, r0
   16384:	cmp	r2, #0
   16388:	beq	163f4 <flatcc_json_printer_int32_field@@Base+0xb8>
   1638c:	ldr	r0, [r1, #16]
   16390:	ldr	r2, [fp, #8]
   16394:	add	r6, r0, #1
   16398:	cmp	r0, #0
   1639c:	str	r6, [r1, #16]
   163a0:	beq	163b8 <flatcc_json_printer_int32_field@@Base+0x7c>
   163a4:	ldr	r0, [r4, #20]
   163a8:	add	r1, r0, #1
   163ac:	str	r1, [r4, #20]
   163b0:	mov	r1, #44	; 0x2c
   163b4:	strb	r1, [r0]
   163b8:	mov	r0, r4
   163bc:	mov	r1, r3
   163c0:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   163c4:	ldr	r1, [r4, #20]
   163c8:	cmn	r5, #1
   163cc:	lsr	r6, r5, #31
   163d0:	movle	r0, #45	; 0x2d
   163d4:	rsble	r5, r5, #0
   163d8:	strble	r0, [r1], #1
   163dc:	mov	r0, r5
   163e0:	bl	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   163e4:	ldr	r1, [r4, #20]
   163e8:	add	r0, r0, r6
   163ec:	add	r0, r1, r0
   163f0:	str	r0, [r4, #20]
   163f4:	pop	{r4, r5, r6, sl, fp, pc}
   163f8:	ldr	r5, [r2]
   163fc:	cmp	r5, r0
   16400:	bne	1638c <flatcc_json_printer_int32_field@@Base+0x50>
   16404:	ldrb	r2, [r4, #28]
   16408:	mov	r5, r0
   1640c:	cmp	r2, #0
   16410:	popne	{r4, r5, r6, sl, fp, pc}
   16414:	b	1638c <flatcc_json_printer_int32_field@@Base+0x50>

00016418 <flatcc_json_printer_int64_field@@Base>:
   16418:	push	{r4, r5, r6, r7, fp, lr}
   1641c:	add	fp, sp, #16
   16420:	mov	r4, r0
   16424:	mov	r0, #4
   16428:	ldr	r6, [r1, #8]
   1642c:	add	r7, r0, r2, lsl #1
   16430:	ldr	r0, [fp, #20]
   16434:	ldr	r2, [fp, #16]
   16438:	cmp	r7, r6
   1643c:	bge	1645c <flatcc_json_printer_int64_field@@Base+0x44>
   16440:	ldr	r6, [r1, #4]
   16444:	add	r7, r6, r7
   16448:	ldrh	r7, [r7]
   1644c:	cmp	r7, #0
   16450:	ldrne	r6, [r1]
   16454:	addsne	r7, r6, r7
   16458:	bne	164e8 <flatcc_json_printer_int64_field@@Base+0xd0>
   1645c:	ldrb	r7, [r4, #29]
   16460:	mov	r6, r2
   16464:	cmp	r7, #0
   16468:	mov	r7, r0
   1646c:	beq	164e4 <flatcc_json_printer_int64_field@@Base+0xcc>
   16470:	ldr	r0, [r1, #16]
   16474:	ldr	r2, [fp, #8]
   16478:	add	r5, r0, #1
   1647c:	cmp	r0, #0
   16480:	str	r5, [r1, #16]
   16484:	beq	1649c <flatcc_json_printer_int64_field@@Base+0x84>
   16488:	ldr	r0, [r4, #20]
   1648c:	add	r1, r0, #1
   16490:	str	r1, [r4, #20]
   16494:	mov	r1, #44	; 0x2c
   16498:	strb	r1, [r0]
   1649c:	mov	r0, r4
   164a0:	mov	r1, r3
   164a4:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   164a8:	ldr	r2, [r4, #20]
   164ac:	lsr	r5, r7, #31
   164b0:	cmn	r7, #1
   164b4:	bgt	164c8 <flatcc_json_printer_int64_field@@Base+0xb0>
   164b8:	mov	r0, #45	; 0x2d
   164bc:	rsbs	r6, r6, #0
   164c0:	strb	r0, [r2], #1
   164c4:	rsc	r7, r7, #0
   164c8:	mov	r0, r6
   164cc:	mov	r1, r7
   164d0:	bl	15194 <flatcc_json_printer_uint64@@Base+0x30>
   164d4:	ldr	r1, [r4, #20]
   164d8:	add	r0, r0, r5
   164dc:	add	r0, r1, r0
   164e0:	str	r0, [r4, #20]
   164e4:	pop	{r4, r5, r6, r7, fp, pc}
   164e8:	ldrd	r6, [r7]
   164ec:	eor	ip, r7, r0
   164f0:	eor	r5, r6, r2
   164f4:	orrs	r5, r5, ip
   164f8:	bne	16470 <flatcc_json_printer_int64_field@@Base+0x58>
   164fc:	ldrb	r7, [r4, #28]
   16500:	mov	r6, r2
   16504:	cmp	r7, #0
   16508:	mov	r7, r0
   1650c:	popne	{r4, r5, r6, r7, fp, pc}
   16510:	b	16470 <flatcc_json_printer_int64_field@@Base+0x58>

00016514 <flatcc_json_printer_bool_field@@Base>:
   16514:	push	{r4, r5, r6, sl, fp, lr}
   16518:	add	fp, sp, #16
   1651c:	mov	r4, r0
   16520:	mov	r0, #4
   16524:	ldr	r5, [r1, #8]
   16528:	add	r2, r0, r2, lsl #1
   1652c:	ldr	r0, [fp, #12]
   16530:	cmp	r2, r5
   16534:	bge	16554 <flatcc_json_printer_bool_field@@Base+0x40>
   16538:	ldr	r5, [r1, #4]
   1653c:	add	r2, r5, r2
   16540:	ldrh	r2, [r2]
   16544:	cmp	r2, #0
   16548:	ldrne	r5, [r1]
   1654c:	addsne	r2, r5, r2
   16550:	bne	165ec <flatcc_json_printer_bool_field@@Base+0xd8>
   16554:	ldrb	r2, [r4, #29]
   16558:	mov	r6, r0
   1655c:	cmp	r2, #0
   16560:	beq	165e8 <flatcc_json_printer_bool_field@@Base+0xd4>
   16564:	ldr	r0, [r1, #16]
   16568:	ldr	r2, [fp, #8]
   1656c:	add	r5, r0, #1
   16570:	cmp	r0, #0
   16574:	str	r5, [r1, #16]
   16578:	beq	16590 <flatcc_json_printer_bool_field@@Base+0x7c>
   1657c:	ldr	r0, [r4, #20]
   16580:	add	r1, r0, #1
   16584:	str	r1, [r4, #20]
   16588:	mov	r1, #44	; 0x2c
   1658c:	strb	r1, [r0]
   16590:	mov	r0, r4
   16594:	mov	r1, r3
   16598:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1659c:	ldr	r0, [r4, #20]
   165a0:	cmp	r6, #0
   165a4:	beq	165c4 <flatcc_json_printer_bool_field@@Base+0xb0>
   165a8:	mov	r1, #0
   165ac:	strb	r1, [r0, #4]
   165b0:	movw	r1, #29300	; 0x7274
   165b4:	movt	r1, #25973	; 0x6575
   165b8:	str	r1, [r0]
   165bc:	mov	r0, #4
   165c0:	b	165dc <flatcc_json_printer_bool_field@@Base+0xc8>
   165c4:	mov	r1, #101	; 0x65
   165c8:	strh	r1, [r0, #4]
   165cc:	movw	r1, #24934	; 0x6166
   165d0:	movt	r1, #29548	; 0x736c
   165d4:	str	r1, [r0]
   165d8:	mov	r0, #5
   165dc:	ldr	r1, [r4, #20]
   165e0:	add	r0, r1, r0
   165e4:	str	r0, [r4, #20]
   165e8:	pop	{r4, r5, r6, sl, fp, pc}
   165ec:	ldrb	r6, [r2]
   165f0:	cmp	r6, r0
   165f4:	bne	16564 <flatcc_json_printer_bool_field@@Base+0x50>
   165f8:	ldrb	r2, [r4, #28]
   165fc:	mov	r6, r0
   16600:	cmp	r2, #0
   16604:	popne	{r4, r5, r6, sl, fp, pc}
   16608:	b	16564 <flatcc_json_printer_bool_field@@Base+0x50>

0001660c <flatcc_json_printer_float_field@@Base>:
   1660c:	push	{r4, r5, fp, lr}
   16610:	add	fp, sp, #8
   16614:	vpush	{d8}
   16618:	mov	r5, r0
   1661c:	mov	r0, #4
   16620:	vmov.f32	s16, s0
   16624:	add	r0, r0, r2, lsl #1
   16628:	ldr	r2, [r1, #8]
   1662c:	cmp	r0, r2
   16630:	bge	16650 <flatcc_json_printer_float_field@@Base+0x44>
   16634:	ldr	r2, [r1, #4]
   16638:	add	r0, r2, r0
   1663c:	ldrh	r0, [r0]
   16640:	cmp	r0, #0
   16644:	ldrne	r2, [r1]
   16648:	addsne	r0, r2, r0
   1664c:	bne	166b4 <flatcc_json_printer_float_field@@Base+0xa8>
   16650:	ldrb	r0, [r5, #29]
   16654:	cmp	r0, #0
   16658:	beq	166ac <flatcc_json_printer_float_field@@Base+0xa0>
   1665c:	ldr	r0, [r1, #16]
   16660:	ldr	r2, [fp, #8]
   16664:	add	r4, r0, #1
   16668:	cmp	r0, #0
   1666c:	str	r4, [r1, #16]
   16670:	beq	16688 <flatcc_json_printer_float_field@@Base+0x7c>
   16674:	ldr	r0, [r5, #20]
   16678:	add	r1, r0, #1
   1667c:	str	r1, [r5, #20]
   16680:	mov	r1, #44	; 0x2c
   16684:	strb	r1, [r0]
   16688:	mov	r0, r5
   1668c:	mov	r1, r3
   16690:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   16694:	vcvt.f64.f32	d0, s16
   16698:	ldr	r0, [r5, #20]
   1669c:	bl	13ee0 <flatcc_json_printer_fmt_float@@Base+0x8>
   166a0:	ldr	r1, [r5, #20]
   166a4:	add	r0, r1, r0
   166a8:	str	r0, [r5, #20]
   166ac:	vpop	{d8}
   166b0:	pop	{r4, r5, fp, pc}
   166b4:	vldr	s0, [r0]
   166b8:	vcmp.f32	s0, s16
   166bc:	vmrs	APSR_nzcv, fpscr
   166c0:	bne	166d8 <flatcc_json_printer_float_field@@Base+0xcc>
   166c4:	ldrb	r0, [r5, #28]
   166c8:	vmov.f32	s16, s0
   166cc:	cmp	r0, #0
   166d0:	bne	166ac <flatcc_json_printer_float_field@@Base+0xa0>
   166d4:	b	1665c <flatcc_json_printer_float_field@@Base+0x50>
   166d8:	vmov.f32	s16, s0
   166dc:	b	1665c <flatcc_json_printer_float_field@@Base+0x50>

000166e0 <flatcc_json_printer_double_field@@Base>:
   166e0:	push	{r4, r5, fp, lr}
   166e4:	add	fp, sp, #8
   166e8:	vpush	{d8}
   166ec:	mov	r5, r0
   166f0:	mov	r0, #4
   166f4:	vmov.f64	d8, d0
   166f8:	add	r0, r0, r2, lsl #1
   166fc:	ldr	r2, [r1, #8]
   16700:	cmp	r0, r2
   16704:	bge	16724 <flatcc_json_printer_double_field@@Base+0x44>
   16708:	ldr	r2, [r1, #4]
   1670c:	add	r0, r2, r0
   16710:	ldrh	r0, [r0]
   16714:	cmp	r0, #0
   16718:	ldrne	r2, [r1]
   1671c:	addsne	r0, r2, r0
   16720:	bne	16788 <flatcc_json_printer_double_field@@Base+0xa8>
   16724:	ldrb	r0, [r5, #29]
   16728:	cmp	r0, #0
   1672c:	beq	16780 <flatcc_json_printer_double_field@@Base+0xa0>
   16730:	ldr	r0, [r1, #16]
   16734:	ldr	r2, [fp, #8]
   16738:	add	r4, r0, #1
   1673c:	cmp	r0, #0
   16740:	str	r4, [r1, #16]
   16744:	beq	1675c <flatcc_json_printer_double_field@@Base+0x7c>
   16748:	ldr	r0, [r5, #20]
   1674c:	add	r1, r0, #1
   16750:	str	r1, [r5, #20]
   16754:	mov	r1, #44	; 0x2c
   16758:	strb	r1, [r0]
   1675c:	mov	r0, r5
   16760:	mov	r1, r3
   16764:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   16768:	ldr	r0, [r5, #20]
   1676c:	vmov.f64	d0, d8
   16770:	bl	13ee0 <flatcc_json_printer_fmt_float@@Base+0x8>
   16774:	ldr	r1, [r5, #20]
   16778:	add	r0, r1, r0
   1677c:	str	r0, [r5, #20]
   16780:	vpop	{d8}
   16784:	pop	{r4, r5, fp, pc}
   16788:	vldr	d16, [r0]
   1678c:	vcmp.f64	d16, d8
   16790:	vmrs	APSR_nzcv, fpscr
   16794:	bne	167ac <flatcc_json_printer_double_field@@Base+0xcc>
   16798:	ldrb	r0, [r5, #28]
   1679c:	vmov.f64	d8, d16
   167a0:	cmp	r0, #0
   167a4:	bne	16780 <flatcc_json_printer_double_field@@Base+0xa0>
   167a8:	b	16730 <flatcc_json_printer_double_field@@Base+0x50>
   167ac:	vmov.f64	d8, d16
   167b0:	b	16730 <flatcc_json_printer_double_field@@Base+0x50>

000167b4 <flatcc_json_printer_uint8_enum_field@@Base>:
   167b4:	push	{r4, r5, r6, r7, fp, lr}
   167b8:	add	fp, sp, #16
   167bc:	mov	r4, r0
   167c0:	mov	r0, #4
   167c4:	ldr	r7, [fp, #16]
   167c8:	ldr	ip, [fp, #12]
   167cc:	add	r5, r0, r2, lsl #1
   167d0:	ldr	r0, [r1, #8]
   167d4:	ldr	r2, [fp, #8]
   167d8:	cmp	r5, r0
   167dc:	bge	167fc <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   167e0:	ldr	r0, [r1, #4]
   167e4:	add	r0, r0, r5
   167e8:	ldrh	r5, [r0]
   167ec:	cmp	r5, #0
   167f0:	ldrne	r0, [r1]
   167f4:	addsne	r5, r0, r5
   167f8:	bne	1687c <flatcc_json_printer_uint8_enum_field@@Base+0xc8>
   167fc:	ldrb	r0, [r4, #29]
   16800:	mov	r6, ip
   16804:	cmp	r0, #0
   16808:	beq	16864 <flatcc_json_printer_uint8_enum_field@@Base+0xb0>
   1680c:	ldr	r0, [r1, #16]
   16810:	add	r5, r0, #1
   16814:	cmp	r0, #0
   16818:	str	r5, [r1, #16]
   1681c:	beq	16834 <flatcc_json_printer_uint8_enum_field@@Base+0x80>
   16820:	ldr	r0, [r4, #20]
   16824:	add	r1, r0, #1
   16828:	str	r1, [r4, #20]
   1682c:	mov	r1, #44	; 0x2c
   16830:	strb	r1, [r0]
   16834:	mov	r0, r4
   16838:	mov	r1, r3
   1683c:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   16840:	ldrb	r0, [r4, #27]
   16844:	cmp	r0, #0
   16848:	beq	16868 <flatcc_json_printer_uint8_enum_field@@Base+0xb4>
   1684c:	ldr	r1, [r4, #20]
   16850:	mov	r0, r6
   16854:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   16858:	ldr	r1, [r4, #20]
   1685c:	add	r0, r1, r0
   16860:	str	r0, [r4, #20]
   16864:	pop	{r4, r5, r6, r7, fp, pc}
   16868:	mov	r0, r4
   1686c:	mov	r1, r6
   16870:	mov	r2, r7
   16874:	pop	{r4, r5, r6, r7, fp, lr}
   16878:	bx	r2
   1687c:	ldrb	r6, [r5]
   16880:	cmp	r6, ip
   16884:	bne	1680c <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   16888:	ldrb	r0, [r4, #28]
   1688c:	mov	r6, ip
   16890:	cmp	r0, #0
   16894:	popne	{r4, r5, r6, r7, fp, pc}
   16898:	b	1680c <flatcc_json_printer_uint8_enum_field@@Base+0x58>

0001689c <flatcc_json_printer_uint16_enum_field@@Base>:
   1689c:	push	{r4, r5, r6, r7, fp, lr}
   168a0:	add	fp, sp, #16
   168a4:	mov	r4, r0
   168a8:	mov	r0, #4
   168ac:	ldr	r7, [fp, #16]
   168b0:	ldr	ip, [fp, #12]
   168b4:	add	r5, r0, r2, lsl #1
   168b8:	ldr	r0, [r1, #8]
   168bc:	ldr	r2, [fp, #8]
   168c0:	cmp	r5, r0
   168c4:	bge	168e4 <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   168c8:	ldr	r0, [r1, #4]
   168cc:	add	r0, r0, r5
   168d0:	ldrh	r5, [r0]
   168d4:	cmp	r5, #0
   168d8:	ldrne	r0, [r1]
   168dc:	addsne	r5, r0, r5
   168e0:	bne	16964 <flatcc_json_printer_uint16_enum_field@@Base+0xc8>
   168e4:	ldrb	r0, [r4, #29]
   168e8:	mov	r6, ip
   168ec:	cmp	r0, #0
   168f0:	beq	1694c <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   168f4:	ldr	r0, [r1, #16]
   168f8:	add	r5, r0, #1
   168fc:	cmp	r0, #0
   16900:	str	r5, [r1, #16]
   16904:	beq	1691c <flatcc_json_printer_uint16_enum_field@@Base+0x80>
   16908:	ldr	r0, [r4, #20]
   1690c:	add	r1, r0, #1
   16910:	str	r1, [r4, #20]
   16914:	mov	r1, #44	; 0x2c
   16918:	strb	r1, [r0]
   1691c:	mov	r0, r4
   16920:	mov	r1, r3
   16924:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   16928:	ldrb	r0, [r4, #27]
   1692c:	cmp	r0, #0
   16930:	beq	16950 <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   16934:	ldr	r1, [r4, #20]
   16938:	mov	r0, r6
   1693c:	bl	14cd0 <flatcc_json_printer_uint16@@Base+0x2c>
   16940:	ldr	r1, [r4, #20]
   16944:	add	r0, r1, r0
   16948:	str	r0, [r4, #20]
   1694c:	pop	{r4, r5, r6, r7, fp, pc}
   16950:	mov	r0, r4
   16954:	mov	r1, r6
   16958:	mov	r2, r7
   1695c:	pop	{r4, r5, r6, r7, fp, lr}
   16960:	bx	r2
   16964:	ldrh	r6, [r5]
   16968:	cmp	r6, ip
   1696c:	bne	168f4 <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   16970:	ldrb	r0, [r4, #28]
   16974:	mov	r6, ip
   16978:	cmp	r0, #0
   1697c:	popne	{r4, r5, r6, r7, fp, pc}
   16980:	b	168f4 <flatcc_json_printer_uint16_enum_field@@Base+0x58>

00016984 <flatcc_json_printer_uint32_enum_field@@Base>:
   16984:	push	{r4, r5, r6, r7, fp, lr}
   16988:	add	fp, sp, #16
   1698c:	mov	r4, r0
   16990:	mov	r0, #4
   16994:	ldr	r7, [fp, #16]
   16998:	ldr	ip, [fp, #12]
   1699c:	add	r5, r0, r2, lsl #1
   169a0:	ldr	r0, [r1, #8]
   169a4:	ldr	r2, [fp, #8]
   169a8:	cmp	r5, r0
   169ac:	bge	169cc <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   169b0:	ldr	r0, [r1, #4]
   169b4:	add	r0, r0, r5
   169b8:	ldrh	r5, [r0]
   169bc:	cmp	r5, #0
   169c0:	ldrne	r0, [r1]
   169c4:	addsne	r5, r0, r5
   169c8:	bne	16a4c <flatcc_json_printer_uint32_enum_field@@Base+0xc8>
   169cc:	ldrb	r0, [r4, #29]
   169d0:	mov	r6, ip
   169d4:	cmp	r0, #0
   169d8:	beq	16a34 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   169dc:	ldr	r0, [r1, #16]
   169e0:	add	r5, r0, #1
   169e4:	cmp	r0, #0
   169e8:	str	r5, [r1, #16]
   169ec:	beq	16a04 <flatcc_json_printer_uint32_enum_field@@Base+0x80>
   169f0:	ldr	r0, [r4, #20]
   169f4:	add	r1, r0, #1
   169f8:	str	r1, [r4, #20]
   169fc:	mov	r1, #44	; 0x2c
   16a00:	strb	r1, [r0]
   16a04:	mov	r0, r4
   16a08:	mov	r1, r3
   16a0c:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   16a10:	ldrb	r0, [r4, #27]
   16a14:	cmp	r0, #0
   16a18:	beq	16a38 <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   16a1c:	ldr	r1, [r4, #20]
   16a20:	mov	r0, r6
   16a24:	bl	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   16a28:	ldr	r1, [r4, #20]
   16a2c:	add	r0, r1, r0
   16a30:	str	r0, [r4, #20]
   16a34:	pop	{r4, r5, r6, r7, fp, pc}
   16a38:	mov	r0, r4
   16a3c:	mov	r1, r6
   16a40:	mov	r2, r7
   16a44:	pop	{r4, r5, r6, r7, fp, lr}
   16a48:	bx	r2
   16a4c:	ldr	r6, [r5]
   16a50:	cmp	r6, ip
   16a54:	bne	169dc <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   16a58:	ldrb	r0, [r4, #28]
   16a5c:	mov	r6, ip
   16a60:	cmp	r0, #0
   16a64:	popne	{r4, r5, r6, r7, fp, pc}
   16a68:	b	169dc <flatcc_json_printer_uint32_enum_field@@Base+0x58>

00016a6c <flatcc_json_printer_uint64_enum_field@@Base>:
   16a6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16a70:	add	fp, sp, #24
   16a74:	mov	r4, r0
   16a78:	mov	r0, #4
   16a7c:	ldr	ip, [fp, #20]
   16a80:	ldr	r6, [fp, #16]
   16a84:	ldr	r5, [fp, #24]
   16a88:	add	r7, r0, r2, lsl #1
   16a8c:	ldr	r0, [r1, #8]
   16a90:	ldr	r2, [fp, #8]
   16a94:	cmp	r7, r0
   16a98:	bge	16ab8 <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   16a9c:	ldr	r0, [r1, #4]
   16aa0:	add	r0, r0, r7
   16aa4:	ldrh	r7, [r0]
   16aa8:	cmp	r7, #0
   16aac:	ldrne	r0, [r1]
   16ab0:	addsne	r7, r0, r7
   16ab4:	bne	16b44 <flatcc_json_printer_uint64_enum_field@@Base+0xd8>
   16ab8:	ldrb	r0, [r4, #29]
   16abc:	mov	r8, r6
   16ac0:	mov	r7, ip
   16ac4:	cmp	r0, #0
   16ac8:	beq	16b28 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   16acc:	ldr	r0, [r1, #16]
   16ad0:	add	r6, r0, #1
   16ad4:	cmp	r0, #0
   16ad8:	str	r6, [r1, #16]
   16adc:	beq	16af4 <flatcc_json_printer_uint64_enum_field@@Base+0x88>
   16ae0:	ldr	r0, [r4, #20]
   16ae4:	add	r1, r0, #1
   16ae8:	str	r1, [r4, #20]
   16aec:	mov	r1, #44	; 0x2c
   16af0:	strb	r1, [r0]
   16af4:	mov	r0, r4
   16af8:	mov	r1, r3
   16afc:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   16b00:	ldrb	r0, [r4, #27]
   16b04:	cmp	r0, #0
   16b08:	beq	16b2c <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   16b0c:	ldr	r2, [r4, #20]
   16b10:	mov	r0, r8
   16b14:	mov	r1, r7
   16b18:	bl	15194 <flatcc_json_printer_uint64@@Base+0x30>
   16b1c:	ldr	r1, [r4, #20]
   16b20:	add	r0, r1, r0
   16b24:	str	r0, [r4, #20]
   16b28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16b2c:	mov	r0, r4
   16b30:	mov	r2, r8
   16b34:	mov	r3, r7
   16b38:	mov	r1, r5
   16b3c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16b40:	bx	r1
   16b44:	ldr	r8, [r7]
   16b48:	ldr	r7, [r7, #4]
   16b4c:	eor	lr, r7, ip
   16b50:	eor	r0, r8, r6
   16b54:	orrs	r0, r0, lr
   16b58:	bne	16acc <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   16b5c:	ldrb	r0, [r4, #28]
   16b60:	mov	r8, r6
   16b64:	mov	r7, ip
   16b68:	cmp	r0, #0
   16b6c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   16b70:	b	16acc <flatcc_json_printer_uint64_enum_field@@Base+0x60>

00016b74 <flatcc_json_printer_int8_enum_field@@Base>:
   16b74:	push	{r4, r5, r6, r7, fp, lr}
   16b78:	add	fp, sp, #16
   16b7c:	mov	r4, r0
   16b80:	mov	r0, #4
   16b84:	ldr	r5, [r1, #8]
   16b88:	ldr	ip, [fp, #16]
   16b8c:	add	r6, r0, r2, lsl #1
   16b90:	ldr	r0, [fp, #12]
   16b94:	ldr	r2, [fp, #8]
   16b98:	cmp	r6, r5
   16b9c:	bge	16bbc <flatcc_json_printer_int8_enum_field@@Base+0x48>
   16ba0:	ldr	r5, [r1, #4]
   16ba4:	add	r6, r5, r6
   16ba8:	ldrh	r6, [r6]
   16bac:	cmp	r6, #0
   16bb0:	ldrne	r5, [r1]
   16bb4:	addsne	r6, r5, r6
   16bb8:	bne	16c60 <flatcc_json_printer_int8_enum_field@@Base+0xec>
   16bbc:	ldrb	r6, [r4, #29]
   16bc0:	mov	r5, r0
   16bc4:	cmp	r6, #0
   16bc8:	beq	16c48 <flatcc_json_printer_int8_enum_field@@Base+0xd4>
   16bcc:	ldr	r0, [r1, #16]
   16bd0:	mov	r7, ip
   16bd4:	add	r6, r0, #1
   16bd8:	cmp	r0, #0
   16bdc:	str	r6, [r1, #16]
   16be0:	beq	16bf8 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   16be4:	ldr	r0, [r4, #20]
   16be8:	add	r1, r0, #1
   16bec:	str	r1, [r4, #20]
   16bf0:	mov	r1, #44	; 0x2c
   16bf4:	strb	r1, [r0]
   16bf8:	mov	r0, r4
   16bfc:	mov	r1, r3
   16c00:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   16c04:	ldrb	r0, [r4, #27]
   16c08:	cmp	r0, #0
   16c0c:	beq	16c4c <flatcc_json_printer_int8_enum_field@@Base+0xd8>
   16c10:	uxtb	r0, r5
   16c14:	ldr	r1, [r4, #20]
   16c18:	lsr	r6, r0, #7
   16c1c:	sxtb	r0, r5
   16c20:	cmn	r0, #1
   16c24:	movle	r0, #45	; 0x2d
   16c28:	rsble	r5, r5, #0
   16c2c:	strble	r0, [r1], #1
   16c30:	uxtb	r0, r5
   16c34:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   16c38:	ldr	r1, [r4, #20]
   16c3c:	add	r0, r0, r6
   16c40:	add	r0, r1, r0
   16c44:	str	r0, [r4, #20]
   16c48:	pop	{r4, r5, r6, r7, fp, pc}
   16c4c:	sxtb	r1, r5
   16c50:	mov	r0, r4
   16c54:	mov	r2, r7
   16c58:	pop	{r4, r5, r6, r7, fp, lr}
   16c5c:	bx	r2
   16c60:	ldrb	r5, [r6]
   16c64:	uxtb	r6, r0
   16c68:	cmp	r5, r6
   16c6c:	bne	16bcc <flatcc_json_printer_int8_enum_field@@Base+0x58>
   16c70:	ldrb	r6, [r4, #28]
   16c74:	mov	r5, r0
   16c78:	cmp	r6, #0
   16c7c:	popne	{r4, r5, r6, r7, fp, pc}
   16c80:	b	16bcc <flatcc_json_printer_int8_enum_field@@Base+0x58>

00016c84 <flatcc_json_printer_int16_enum_field@@Base>:
   16c84:	push	{r4, r5, r6, r7, fp, lr}
   16c88:	add	fp, sp, #16
   16c8c:	mov	r4, r0
   16c90:	mov	r0, #4
   16c94:	ldr	r5, [r1, #8]
   16c98:	ldr	ip, [fp, #16]
   16c9c:	add	r6, r0, r2, lsl #1
   16ca0:	ldr	r0, [fp, #12]
   16ca4:	ldr	r2, [fp, #8]
   16ca8:	cmp	r6, r5
   16cac:	bge	16ccc <flatcc_json_printer_int16_enum_field@@Base+0x48>
   16cb0:	ldr	r5, [r1, #4]
   16cb4:	add	r6, r5, r6
   16cb8:	ldrh	r6, [r6]
   16cbc:	cmp	r6, #0
   16cc0:	ldrne	r5, [r1]
   16cc4:	addsne	r6, r5, r6
   16cc8:	bne	16d70 <flatcc_json_printer_int16_enum_field@@Base+0xec>
   16ccc:	ldrb	r6, [r4, #29]
   16cd0:	mov	r5, r0
   16cd4:	cmp	r6, #0
   16cd8:	beq	16d58 <flatcc_json_printer_int16_enum_field@@Base+0xd4>
   16cdc:	ldr	r0, [r1, #16]
   16ce0:	mov	r7, ip
   16ce4:	add	r6, r0, #1
   16ce8:	cmp	r0, #0
   16cec:	str	r6, [r1, #16]
   16cf0:	beq	16d08 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   16cf4:	ldr	r0, [r4, #20]
   16cf8:	add	r1, r0, #1
   16cfc:	str	r1, [r4, #20]
   16d00:	mov	r1, #44	; 0x2c
   16d04:	strb	r1, [r0]
   16d08:	mov	r0, r4
   16d0c:	mov	r1, r3
   16d10:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   16d14:	ldrb	r0, [r4, #27]
   16d18:	cmp	r0, #0
   16d1c:	beq	16d5c <flatcc_json_printer_int16_enum_field@@Base+0xd8>
   16d20:	uxth	r0, r5
   16d24:	ldr	r1, [r4, #20]
   16d28:	lsr	r6, r0, #15
   16d2c:	sxth	r0, r5
   16d30:	cmn	r0, #1
   16d34:	movle	r0, #45	; 0x2d
   16d38:	rsble	r5, r5, #0
   16d3c:	strble	r0, [r1], #1
   16d40:	uxth	r0, r5
   16d44:	bl	14cd0 <flatcc_json_printer_uint16@@Base+0x2c>
   16d48:	ldr	r1, [r4, #20]
   16d4c:	add	r0, r0, r6
   16d50:	add	r0, r1, r0
   16d54:	str	r0, [r4, #20]
   16d58:	pop	{r4, r5, r6, r7, fp, pc}
   16d5c:	sxth	r1, r5
   16d60:	mov	r0, r4
   16d64:	mov	r2, r7
   16d68:	pop	{r4, r5, r6, r7, fp, lr}
   16d6c:	bx	r2
   16d70:	ldrh	r5, [r6]
   16d74:	uxth	r6, r0
   16d78:	cmp	r5, r6
   16d7c:	bne	16cdc <flatcc_json_printer_int16_enum_field@@Base+0x58>
   16d80:	ldrb	r6, [r4, #28]
   16d84:	mov	r5, r0
   16d88:	cmp	r6, #0
   16d8c:	popne	{r4, r5, r6, r7, fp, pc}
   16d90:	b	16cdc <flatcc_json_printer_int16_enum_field@@Base+0x58>

00016d94 <flatcc_json_printer_int32_enum_field@@Base>:
   16d94:	push	{r4, r5, r6, r7, fp, lr}
   16d98:	add	fp, sp, #16
   16d9c:	mov	r4, r0
   16da0:	mov	r0, #4
   16da4:	ldr	r5, [r1, #8]
   16da8:	ldr	ip, [fp, #16]
   16dac:	add	r6, r0, r2, lsl #1
   16db0:	ldr	r0, [fp, #12]
   16db4:	ldr	r2, [fp, #8]
   16db8:	cmp	r6, r5
   16dbc:	bge	16ddc <flatcc_json_printer_int32_enum_field@@Base+0x48>
   16dc0:	ldr	r5, [r1, #4]
   16dc4:	add	r6, r5, r6
   16dc8:	ldrh	r6, [r6]
   16dcc:	cmp	r6, #0
   16dd0:	ldrne	r5, [r1]
   16dd4:	addsne	r6, r5, r6
   16dd8:	bne	16e78 <flatcc_json_printer_int32_enum_field@@Base+0xe4>
   16ddc:	ldrb	r6, [r4, #29]
   16de0:	mov	r5, r0
   16de4:	cmp	r6, #0
   16de8:	beq	16e60 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   16dec:	ldr	r0, [r1, #16]
   16df0:	mov	r7, ip
   16df4:	add	r6, r0, #1
   16df8:	cmp	r0, #0
   16dfc:	str	r6, [r1, #16]
   16e00:	beq	16e18 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   16e04:	ldr	r0, [r4, #20]
   16e08:	add	r1, r0, #1
   16e0c:	str	r1, [r4, #20]
   16e10:	mov	r1, #44	; 0x2c
   16e14:	strb	r1, [r0]
   16e18:	mov	r0, r4
   16e1c:	mov	r1, r3
   16e20:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   16e24:	ldrb	r0, [r4, #27]
   16e28:	cmp	r0, #0
   16e2c:	beq	16e64 <flatcc_json_printer_int32_enum_field@@Base+0xd0>
   16e30:	ldr	r1, [r4, #20]
   16e34:	cmn	r5, #1
   16e38:	lsr	r6, r5, #31
   16e3c:	movle	r0, #45	; 0x2d
   16e40:	rsble	r5, r5, #0
   16e44:	strble	r0, [r1], #1
   16e48:	mov	r0, r5
   16e4c:	bl	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   16e50:	ldr	r1, [r4, #20]
   16e54:	add	r0, r0, r6
   16e58:	add	r0, r1, r0
   16e5c:	str	r0, [r4, #20]
   16e60:	pop	{r4, r5, r6, r7, fp, pc}
   16e64:	mov	r0, r4
   16e68:	mov	r1, r5
   16e6c:	mov	r2, r7
   16e70:	pop	{r4, r5, r6, r7, fp, lr}
   16e74:	bx	r2
   16e78:	ldr	r5, [r6]
   16e7c:	cmp	r5, r0
   16e80:	bne	16dec <flatcc_json_printer_int32_enum_field@@Base+0x58>
   16e84:	ldrb	r6, [r4, #28]
   16e88:	mov	r5, r0
   16e8c:	cmp	r6, #0
   16e90:	popne	{r4, r5, r6, r7, fp, pc}
   16e94:	b	16dec <flatcc_json_printer_int32_enum_field@@Base+0x58>

00016e98 <flatcc_json_printer_int64_enum_field@@Base>:
   16e98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16e9c:	add	fp, sp, #24
   16ea0:	mov	r4, r0
   16ea4:	mov	r0, #4
   16ea8:	ldr	r5, [r1, #8]
   16eac:	ldr	r6, [fp, #16]
   16eb0:	ldr	r9, [fp, #24]
   16eb4:	add	r7, r0, r2, lsl #1
   16eb8:	ldr	r0, [fp, #20]
   16ebc:	ldr	r2, [fp, #8]
   16ec0:	cmp	r7, r5
   16ec4:	bge	16ee4 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   16ec8:	ldr	r5, [r1, #4]
   16ecc:	add	r7, r5, r7
   16ed0:	ldrh	r7, [r7]
   16ed4:	cmp	r7, #0
   16ed8:	ldrne	r5, [r1]
   16edc:	addsne	r7, r5, r7
   16ee0:	bne	16f90 <flatcc_json_printer_int64_enum_field@@Base+0xf8>
   16ee4:	ldrb	r7, [r4, #29]
   16ee8:	mov	r8, r6
   16eec:	cmp	r7, #0
   16ef0:	mov	r7, r0
   16ef4:	beq	16f74 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   16ef8:	ldr	r0, [r1, #16]
   16efc:	add	r6, r0, #1
   16f00:	cmp	r0, #0
   16f04:	str	r6, [r1, #16]
   16f08:	beq	16f20 <flatcc_json_printer_int64_enum_field@@Base+0x88>
   16f0c:	ldr	r0, [r4, #20]
   16f10:	add	r1, r0, #1
   16f14:	str	r1, [r4, #20]
   16f18:	mov	r1, #44	; 0x2c
   16f1c:	strb	r1, [r0]
   16f20:	mov	r0, r4
   16f24:	mov	r1, r3
   16f28:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   16f2c:	ldrb	r0, [r4, #27]
   16f30:	cmp	r0, #0
   16f34:	beq	16f78 <flatcc_json_printer_int64_enum_field@@Base+0xe0>
   16f38:	ldr	r2, [r4, #20]
   16f3c:	lsr	r5, r7, #31
   16f40:	cmn	r7, #1
   16f44:	bgt	16f58 <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   16f48:	mov	r0, #45	; 0x2d
   16f4c:	rsbs	r8, r8, #0
   16f50:	strb	r0, [r2], #1
   16f54:	rsc	r7, r7, #0
   16f58:	mov	r0, r8
   16f5c:	mov	r1, r7
   16f60:	bl	15194 <flatcc_json_printer_uint64@@Base+0x30>
   16f64:	ldr	r1, [r4, #20]
   16f68:	add	r0, r0, r5
   16f6c:	add	r0, r1, r0
   16f70:	str	r0, [r4, #20]
   16f74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16f78:	mov	r0, r4
   16f7c:	mov	r2, r8
   16f80:	mov	r3, r7
   16f84:	mov	r1, r9
   16f88:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   16f8c:	bx	r1
   16f90:	ldr	r8, [r7]
   16f94:	ldr	r7, [r7, #4]
   16f98:	eor	ip, r7, r0
   16f9c:	eor	r5, r8, r6
   16fa0:	orrs	r5, r5, ip
   16fa4:	bne	16ef8 <flatcc_json_printer_int64_enum_field@@Base+0x60>
   16fa8:	ldrb	r7, [r4, #28]
   16fac:	mov	r8, r6
   16fb0:	cmp	r7, #0
   16fb4:	mov	r7, r0
   16fb8:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   16fbc:	b	16ef8 <flatcc_json_printer_int64_enum_field@@Base+0x60>

00016fc0 <flatcc_json_printer_bool_enum_field@@Base>:
   16fc0:	push	{r4, r5, r6, r7, fp, lr}
   16fc4:	add	fp, sp, #16
   16fc8:	mov	r4, r0
   16fcc:	mov	r0, #4
   16fd0:	ldr	r7, [fp, #16]
   16fd4:	ldr	ip, [fp, #12]
   16fd8:	add	r5, r0, r2, lsl #1
   16fdc:	ldr	r0, [r1, #8]
   16fe0:	ldr	r2, [fp, #8]
   16fe4:	cmp	r5, r0
   16fe8:	bge	17008 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   16fec:	ldr	r0, [r1, #4]
   16ff0:	add	r0, r0, r5
   16ff4:	ldrh	r5, [r0]
   16ff8:	cmp	r5, #0
   16ffc:	ldrne	r0, [r1]
   17000:	addsne	r5, r0, r5
   17004:	bne	170bc <flatcc_json_printer_bool_enum_field@@Base+0xfc>
   17008:	ldrb	r0, [r4, #29]
   1700c:	mov	r6, ip
   17010:	cmp	r0, #0
   17014:	beq	170b8 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   17018:	ldr	r0, [r1, #16]
   1701c:	add	r5, r0, #1
   17020:	cmp	r0, #0
   17024:	str	r5, [r1, #16]
   17028:	beq	17040 <flatcc_json_printer_bool_enum_field@@Base+0x80>
   1702c:	ldr	r0, [r4, #20]
   17030:	add	r1, r0, #1
   17034:	str	r1, [r4, #20]
   17038:	mov	r1, #44	; 0x2c
   1703c:	strb	r1, [r0]
   17040:	mov	r0, r4
   17044:	mov	r1, r3
   17048:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1704c:	ldrb	r0, [r4, #27]
   17050:	cmp	r0, #0
   17054:	beq	17080 <flatcc_json_printer_bool_enum_field@@Base+0xc0>
   17058:	ldr	r0, [r4, #20]
   1705c:	cmp	r6, #0
   17060:	beq	17094 <flatcc_json_printer_bool_enum_field@@Base+0xd4>
   17064:	mov	r1, #0
   17068:	strb	r1, [r0, #4]
   1706c:	movw	r1, #29300	; 0x7274
   17070:	movt	r1, #25973	; 0x6575
   17074:	str	r1, [r0]
   17078:	mov	r0, #4
   1707c:	b	170ac <flatcc_json_printer_bool_enum_field@@Base+0xec>
   17080:	mov	r0, r4
   17084:	mov	r1, r6
   17088:	mov	r2, r7
   1708c:	pop	{r4, r5, r6, r7, fp, lr}
   17090:	bx	r2
   17094:	mov	r1, #101	; 0x65
   17098:	strh	r1, [r0, #4]
   1709c:	movw	r1, #24934	; 0x6166
   170a0:	movt	r1, #29548	; 0x736c
   170a4:	str	r1, [r0]
   170a8:	mov	r0, #5
   170ac:	ldr	r1, [r4, #20]
   170b0:	add	r0, r1, r0
   170b4:	str	r0, [r4, #20]
   170b8:	pop	{r4, r5, r6, r7, fp, pc}
   170bc:	ldrb	r6, [r5]
   170c0:	cmp	r6, ip
   170c4:	bne	17018 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   170c8:	ldrb	r0, [r4, #28]
   170cc:	mov	r6, ip
   170d0:	cmp	r0, #0
   170d4:	popne	{r4, r5, r6, r7, fp, pc}
   170d8:	b	17018 <flatcc_json_printer_bool_enum_field@@Base+0x58>

000170dc <flatcc_json_printer_uint8_struct_field@@Base>:
   170dc:	push	{r4, r5, r6, sl, fp, lr}
   170e0:	add	fp, sp, #16
   170e4:	mov	r5, r1
   170e8:	ldrb	r6, [r2, r3]
   170ec:	ldr	r2, [fp, #12]
   170f0:	ldr	r1, [fp, #8]
   170f4:	mov	r4, r0
   170f8:	cmp	r5, #0
   170fc:	beq	17114 <flatcc_json_printer_uint8_struct_field@@Base+0x38>
   17100:	ldr	r0, [r4, #20]
   17104:	add	r3, r0, #1
   17108:	str	r3, [r4, #20]
   1710c:	mov	r3, #44	; 0x2c
   17110:	strb	r3, [r0]
   17114:	mov	r0, r4
   17118:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1711c:	ldr	r1, [r4, #20]
   17120:	mov	r0, r6
   17124:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   17128:	ldr	r1, [r4, #20]
   1712c:	add	r0, r1, r0
   17130:	str	r0, [r4, #20]
   17134:	pop	{r4, r5, r6, sl, fp, pc}

00017138 <flatcc_json_printer_uint16_struct_field@@Base>:
   17138:	push	{r4, r5, r6, sl, fp, lr}
   1713c:	add	fp, sp, #16
   17140:	mov	r4, r0
   17144:	add	r0, r2, r3
   17148:	mov	r5, r1
   1714c:	ldr	r2, [fp, #12]
   17150:	ldr	r1, [fp, #8]
   17154:	ldrh	r6, [r0]
   17158:	cmp	r5, #0
   1715c:	beq	17174 <flatcc_json_printer_uint16_struct_field@@Base+0x3c>
   17160:	ldr	r0, [r4, #20]
   17164:	add	r3, r0, #1
   17168:	str	r3, [r4, #20]
   1716c:	mov	r3, #44	; 0x2c
   17170:	strb	r3, [r0]
   17174:	mov	r0, r4
   17178:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1717c:	ldr	r1, [r4, #20]
   17180:	mov	r0, r6
   17184:	bl	14cd0 <flatcc_json_printer_uint16@@Base+0x2c>
   17188:	ldr	r1, [r4, #20]
   1718c:	add	r0, r1, r0
   17190:	str	r0, [r4, #20]
   17194:	pop	{r4, r5, r6, sl, fp, pc}

00017198 <flatcc_json_printer_uint32_struct_field@@Base>:
   17198:	push	{r4, r5, r6, sl, fp, lr}
   1719c:	add	fp, sp, #16
   171a0:	mov	r5, r1
   171a4:	ldr	r6, [r2, r3]
   171a8:	ldr	r2, [fp, #12]
   171ac:	ldr	r1, [fp, #8]
   171b0:	mov	r4, r0
   171b4:	cmp	r5, #0
   171b8:	beq	171d0 <flatcc_json_printer_uint32_struct_field@@Base+0x38>
   171bc:	ldr	r0, [r4, #20]
   171c0:	add	r3, r0, #1
   171c4:	str	r3, [r4, #20]
   171c8:	mov	r3, #44	; 0x2c
   171cc:	strb	r3, [r0]
   171d0:	mov	r0, r4
   171d4:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   171d8:	ldr	r1, [r4, #20]
   171dc:	mov	r0, r6
   171e0:	bl	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   171e4:	ldr	r1, [r4, #20]
   171e8:	add	r0, r1, r0
   171ec:	str	r0, [r4, #20]
   171f0:	pop	{r4, r5, r6, sl, fp, pc}

000171f4 <flatcc_json_printer_uint64_struct_field@@Base>:
   171f4:	push	{r4, r5, r6, r7, fp, lr}
   171f8:	add	fp, sp, #16
   171fc:	ldr	r7, [r2, r3]!
   17200:	mov	r5, r1
   17204:	ldr	r1, [fp, #8]
   17208:	mov	r4, r0
   1720c:	cmp	r5, #0
   17210:	ldr	r6, [r2, #4]
   17214:	ldr	r2, [fp, #12]
   17218:	beq	17230 <flatcc_json_printer_uint64_struct_field@@Base+0x3c>
   1721c:	ldr	r0, [r4, #20]
   17220:	add	r3, r0, #1
   17224:	str	r3, [r4, #20]
   17228:	mov	r3, #44	; 0x2c
   1722c:	strb	r3, [r0]
   17230:	mov	r0, r4
   17234:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   17238:	ldr	r2, [r4, #20]
   1723c:	mov	r0, r7
   17240:	mov	r1, r6
   17244:	bl	15194 <flatcc_json_printer_uint64@@Base+0x30>
   17248:	ldr	r1, [r4, #20]
   1724c:	add	r0, r1, r0
   17250:	str	r0, [r4, #20]
   17254:	pop	{r4, r5, r6, r7, fp, pc}

00017258 <flatcc_json_printer_int8_struct_field@@Base>:
   17258:	push	{r4, r5, r6, sl, fp, lr}
   1725c:	add	fp, sp, #16
   17260:	mov	r4, r0
   17264:	add	r0, r2, r3
   17268:	mov	ip, r1
   1726c:	ldr	r2, [fp, #12]
   17270:	ldr	r1, [fp, #8]
   17274:	ldrsb	r5, [r0]
   17278:	cmp	ip, #0
   1727c:	beq	17294 <flatcc_json_printer_int8_struct_field@@Base+0x3c>
   17280:	ldr	r0, [r4, #20]
   17284:	add	r3, r0, #1
   17288:	str	r3, [r4, #20]
   1728c:	mov	r3, #44	; 0x2c
   17290:	strb	r3, [r0]
   17294:	mov	r0, r4
   17298:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1729c:	ldr	r1, [r4, #20]
   172a0:	uxtb	r0, r5
   172a4:	cmn	r5, #1
   172a8:	rsble	r5, r5, #0
   172ac:	lsr	r6, r0, #7
   172b0:	movle	r0, #45	; 0x2d
   172b4:	strble	r0, [r1], #1
   172b8:	uxtb	r0, r5
   172bc:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   172c0:	ldr	r1, [r4, #20]
   172c4:	add	r0, r0, r6
   172c8:	add	r0, r1, r0
   172cc:	str	r0, [r4, #20]
   172d0:	pop	{r4, r5, r6, sl, fp, pc}

000172d4 <flatcc_json_printer_int16_struct_field@@Base>:
   172d4:	push	{r4, r5, r6, sl, fp, lr}
   172d8:	add	fp, sp, #16
   172dc:	mov	r4, r0
   172e0:	add	r0, r2, r3
   172e4:	mov	ip, r1
   172e8:	ldr	r2, [fp, #12]
   172ec:	ldr	r1, [fp, #8]
   172f0:	ldrsh	r5, [r0]
   172f4:	cmp	ip, #0
   172f8:	beq	17310 <flatcc_json_printer_int16_struct_field@@Base+0x3c>
   172fc:	ldr	r0, [r4, #20]
   17300:	add	r3, r0, #1
   17304:	str	r3, [r4, #20]
   17308:	mov	r3, #44	; 0x2c
   1730c:	strb	r3, [r0]
   17310:	mov	r0, r4
   17314:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   17318:	ldr	r1, [r4, #20]
   1731c:	uxth	r0, r5
   17320:	cmn	r5, #1
   17324:	rsble	r5, r5, #0
   17328:	lsr	r6, r0, #15
   1732c:	movle	r0, #45	; 0x2d
   17330:	strble	r0, [r1], #1
   17334:	uxth	r0, r5
   17338:	bl	14cd0 <flatcc_json_printer_uint16@@Base+0x2c>
   1733c:	ldr	r1, [r4, #20]
   17340:	add	r0, r0, r6
   17344:	add	r0, r1, r0
   17348:	str	r0, [r4, #20]
   1734c:	pop	{r4, r5, r6, sl, fp, pc}

00017350 <flatcc_json_printer_int32_struct_field@@Base>:
   17350:	push	{r4, r5, r6, sl, fp, lr}
   17354:	add	fp, sp, #16
   17358:	mov	ip, r1
   1735c:	ldr	r5, [r2, r3]
   17360:	ldr	r2, [fp, #12]
   17364:	ldr	r1, [fp, #8]
   17368:	mov	r4, r0
   1736c:	cmp	ip, #0
   17370:	beq	17388 <flatcc_json_printer_int32_struct_field@@Base+0x38>
   17374:	ldr	r0, [r4, #20]
   17378:	add	r3, r0, #1
   1737c:	str	r3, [r4, #20]
   17380:	mov	r3, #44	; 0x2c
   17384:	strb	r3, [r0]
   17388:	mov	r0, r4
   1738c:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   17390:	ldr	r1, [r4, #20]
   17394:	cmn	r5, #1
   17398:	lsr	r6, r5, #31
   1739c:	movle	r0, #45	; 0x2d
   173a0:	rsble	r5, r5, #0
   173a4:	strble	r0, [r1], #1
   173a8:	mov	r0, r5
   173ac:	bl	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   173b0:	ldr	r1, [r4, #20]
   173b4:	add	r0, r0, r6
   173b8:	add	r0, r1, r0
   173bc:	str	r0, [r4, #20]
   173c0:	pop	{r4, r5, r6, sl, fp, pc}

000173c4 <flatcc_json_printer_int64_struct_field@@Base>:
   173c4:	push	{r4, r5, r6, r7, fp, lr}
   173c8:	add	fp, sp, #16
   173cc:	ldr	r7, [r2, r3]!
   173d0:	mov	r5, r1
   173d4:	ldr	r1, [fp, #8]
   173d8:	mov	r4, r0
   173dc:	cmp	r5, #0
   173e0:	ldr	r6, [r2, #4]
   173e4:	ldr	r2, [fp, #12]
   173e8:	beq	17400 <flatcc_json_printer_int64_struct_field@@Base+0x3c>
   173ec:	ldr	r0, [r4, #20]
   173f0:	add	r3, r0, #1
   173f4:	str	r3, [r4, #20]
   173f8:	mov	r3, #44	; 0x2c
   173fc:	strb	r3, [r0]
   17400:	mov	r0, r4
   17404:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   17408:	ldr	r2, [r4, #20]
   1740c:	lsr	r5, r6, #31
   17410:	cmn	r6, #1
   17414:	bgt	17428 <flatcc_json_printer_int64_struct_field@@Base+0x64>
   17418:	mov	r0, #45	; 0x2d
   1741c:	rsbs	r7, r7, #0
   17420:	strb	r0, [r2], #1
   17424:	rsc	r6, r6, #0
   17428:	mov	r0, r7
   1742c:	mov	r1, r6
   17430:	bl	15194 <flatcc_json_printer_uint64@@Base+0x30>
   17434:	ldr	r1, [r4, #20]
   17438:	add	r0, r0, r5
   1743c:	add	r0, r1, r0
   17440:	str	r0, [r4, #20]
   17444:	pop	{r4, r5, r6, r7, fp, pc}

00017448 <flatcc_json_printer_bool_struct_field@@Base>:
   17448:	push	{r4, r5, fp, lr}
   1744c:	add	fp, sp, #8
   17450:	mov	ip, r1
   17454:	ldrb	r5, [r2, r3]
   17458:	ldr	r2, [fp, #12]
   1745c:	ldr	r1, [fp, #8]
   17460:	mov	r4, r0
   17464:	cmp	ip, #0
   17468:	beq	17480 <flatcc_json_printer_bool_struct_field@@Base+0x38>
   1746c:	ldr	r0, [r4, #20]
   17470:	add	r3, r0, #1
   17474:	str	r3, [r4, #20]
   17478:	mov	r3, #44	; 0x2c
   1747c:	strb	r3, [r0]
   17480:	mov	r0, r4
   17484:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   17488:	ldr	r0, [r4, #20]
   1748c:	cmp	r5, #0
   17490:	beq	174b0 <flatcc_json_printer_bool_struct_field@@Base+0x68>
   17494:	mov	r1, #0
   17498:	strb	r1, [r0, #4]
   1749c:	movw	r1, #29300	; 0x7274
   174a0:	movt	r1, #25973	; 0x6575
   174a4:	str	r1, [r0]
   174a8:	mov	r0, #4
   174ac:	b	174c8 <flatcc_json_printer_bool_struct_field@@Base+0x80>
   174b0:	mov	r1, #101	; 0x65
   174b4:	strh	r1, [r0, #4]
   174b8:	movw	r1, #24934	; 0x6166
   174bc:	movt	r1, #29548	; 0x736c
   174c0:	str	r1, [r0]
   174c4:	mov	r0, #5
   174c8:	ldr	r1, [r4, #20]
   174cc:	add	r0, r1, r0
   174d0:	str	r0, [r4, #20]
   174d4:	pop	{r4, r5, fp, pc}

000174d8 <flatcc_json_printer_float_struct_field@@Base>:
   174d8:	push	{r4, sl, fp, lr}
   174dc:	add	fp, sp, #8
   174e0:	vpush	{d8}
   174e4:	mov	r4, r0
   174e8:	add	r0, r2, r3
   174ec:	mov	ip, r1
   174f0:	ldr	r2, [fp, #12]
   174f4:	ldr	r1, [fp, #8]
   174f8:	vldr	s16, [r0]
   174fc:	cmp	ip, #0
   17500:	beq	17518 <flatcc_json_printer_float_struct_field@@Base+0x40>
   17504:	ldr	r0, [r4, #20]
   17508:	add	r3, r0, #1
   1750c:	str	r3, [r4, #20]
   17510:	mov	r3, #44	; 0x2c
   17514:	strb	r3, [r0]
   17518:	mov	r0, r4
   1751c:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   17520:	vcvt.f64.f32	d0, s16
   17524:	ldr	r0, [r4, #20]
   17528:	bl	13ee0 <flatcc_json_printer_fmt_float@@Base+0x8>
   1752c:	ldr	r1, [r4, #20]
   17530:	add	r0, r1, r0
   17534:	str	r0, [r4, #20]
   17538:	vpop	{d8}
   1753c:	pop	{r4, sl, fp, pc}

00017540 <flatcc_json_printer_double_struct_field@@Base>:
   17540:	push	{r4, sl, fp, lr}
   17544:	add	fp, sp, #8
   17548:	vpush	{d8}
   1754c:	mov	r4, r0
   17550:	add	r0, r2, r3
   17554:	mov	ip, r1
   17558:	ldr	r2, [fp, #12]
   1755c:	ldr	r1, [fp, #8]
   17560:	vldr	d8, [r0]
   17564:	cmp	ip, #0
   17568:	beq	17580 <flatcc_json_printer_double_struct_field@@Base+0x40>
   1756c:	ldr	r0, [r4, #20]
   17570:	add	r3, r0, #1
   17574:	str	r3, [r4, #20]
   17578:	mov	r3, #44	; 0x2c
   1757c:	strb	r3, [r0]
   17580:	mov	r0, r4
   17584:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   17588:	ldr	r0, [r4, #20]
   1758c:	vorr	d0, d8, d8
   17590:	bl	13ee0 <flatcc_json_printer_fmt_float@@Base+0x8>
   17594:	ldr	r1, [r4, #20]
   17598:	add	r0, r1, r0
   1759c:	str	r0, [r4, #20]
   175a0:	vpop	{d8}
   175a4:	pop	{r4, sl, fp, pc}

000175a8 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   175a8:	push	{r4, r5, r6, r7, fp, lr}
   175ac:	add	fp, sp, #16
   175b0:	add	r7, fp, #8
   175b4:	mov	r5, r1
   175b8:	ldrb	r6, [r2, r3]
   175bc:	mov	r4, r0
   175c0:	ldm	r7, {r1, r2, r7}
   175c4:	cmp	r5, #0
   175c8:	beq	175e0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x38>
   175cc:	ldr	r0, [r4, #20]
   175d0:	add	r3, r0, #1
   175d4:	str	r3, [r4, #20]
   175d8:	mov	r3, #44	; 0x2c
   175dc:	strb	r3, [r0]
   175e0:	mov	r0, r4
   175e4:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   175e8:	ldrb	r0, [r4, #27]
   175ec:	cmp	r0, #0
   175f0:	beq	17610 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x68>
   175f4:	ldr	r1, [r4, #20]
   175f8:	mov	r0, r6
   175fc:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   17600:	ldr	r1, [r4, #20]
   17604:	add	r0, r1, r0
   17608:	str	r0, [r4, #20]
   1760c:	pop	{r4, r5, r6, r7, fp, pc}
   17610:	mov	r0, r4
   17614:	mov	r1, r6
   17618:	mov	r2, r7
   1761c:	pop	{r4, r5, r6, r7, fp, lr}
   17620:	bx	r2

00017624 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   17624:	push	{r4, r5, r6, r7, fp, lr}
   17628:	add	fp, sp, #16
   1762c:	mov	r4, r0
   17630:	add	r0, r2, r3
   17634:	add	r7, fp, #8
   17638:	mov	r5, r1
   1763c:	ldrh	r6, [r0]
   17640:	ldm	r7, {r1, r2, r7}
   17644:	cmp	r5, #0
   17648:	beq	17660 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x3c>
   1764c:	ldr	r0, [r4, #20]
   17650:	add	r3, r0, #1
   17654:	str	r3, [r4, #20]
   17658:	mov	r3, #44	; 0x2c
   1765c:	strb	r3, [r0]
   17660:	mov	r0, r4
   17664:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   17668:	ldrb	r0, [r4, #27]
   1766c:	cmp	r0, #0
   17670:	beq	17690 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x6c>
   17674:	ldr	r1, [r4, #20]
   17678:	mov	r0, r6
   1767c:	bl	14cd0 <flatcc_json_printer_uint16@@Base+0x2c>
   17680:	ldr	r1, [r4, #20]
   17684:	add	r0, r1, r0
   17688:	str	r0, [r4, #20]
   1768c:	pop	{r4, r5, r6, r7, fp, pc}
   17690:	mov	r0, r4
   17694:	mov	r1, r6
   17698:	mov	r2, r7
   1769c:	pop	{r4, r5, r6, r7, fp, lr}
   176a0:	bx	r2

000176a4 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   176a4:	push	{r4, r5, r6, r7, fp, lr}
   176a8:	add	fp, sp, #16
   176ac:	add	r7, fp, #8
   176b0:	mov	r5, r1
   176b4:	ldr	r6, [r2, r3]
   176b8:	mov	r4, r0
   176bc:	ldm	r7, {r1, r2, r7}
   176c0:	cmp	r5, #0
   176c4:	beq	176dc <flatcc_json_printer_uint32_enum_struct_field@@Base+0x38>
   176c8:	ldr	r0, [r4, #20]
   176cc:	add	r3, r0, #1
   176d0:	str	r3, [r4, #20]
   176d4:	mov	r3, #44	; 0x2c
   176d8:	strb	r3, [r0]
   176dc:	mov	r0, r4
   176e0:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   176e4:	ldrb	r0, [r4, #27]
   176e8:	cmp	r0, #0
   176ec:	beq	1770c <flatcc_json_printer_uint32_enum_struct_field@@Base+0x68>
   176f0:	ldr	r1, [r4, #20]
   176f4:	mov	r0, r6
   176f8:	bl	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   176fc:	ldr	r1, [r4, #20]
   17700:	add	r0, r1, r0
   17704:	str	r0, [r4, #20]
   17708:	pop	{r4, r5, r6, r7, fp, pc}
   1770c:	mov	r0, r4
   17710:	mov	r1, r6
   17714:	mov	r2, r7
   17718:	pop	{r4, r5, r6, r7, fp, lr}
   1771c:	bx	r2

00017720 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   17720:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17724:	add	fp, sp, #24
   17728:	ldr	r6, [r2, r3]!
   1772c:	add	r8, fp, #8
   17730:	mov	r5, r1
   17734:	mov	r4, r0
   17738:	cmp	r5, #0
   1773c:	ldr	r7, [r2, #4]
   17740:	ldm	r8, {r1, r2, r8}
   17744:	beq	1775c <flatcc_json_printer_uint64_enum_struct_field@@Base+0x3c>
   17748:	ldr	r0, [r4, #20]
   1774c:	add	r3, r0, #1
   17750:	str	r3, [r4, #20]
   17754:	mov	r3, #44	; 0x2c
   17758:	strb	r3, [r0]
   1775c:	mov	r0, r4
   17760:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   17764:	ldrb	r0, [r4, #27]
   17768:	cmp	r0, #0
   1776c:	beq	17790 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   17770:	ldr	r2, [r4, #20]
   17774:	mov	r0, r6
   17778:	mov	r1, r7
   1777c:	bl	15194 <flatcc_json_printer_uint64@@Base+0x30>
   17780:	ldr	r1, [r4, #20]
   17784:	add	r0, r1, r0
   17788:	str	r0, [r4, #20]
   1778c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17790:	mov	r0, r4
   17794:	mov	r2, r6
   17798:	mov	r3, r7
   1779c:	mov	r1, r8
   177a0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   177a4:	bx	r1

000177a8 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   177a8:	push	{r4, r5, r6, r7, fp, lr}
   177ac:	add	fp, sp, #16
   177b0:	mov	r4, r0
   177b4:	add	r0, r2, r3
   177b8:	add	r7, fp, #8
   177bc:	mov	r5, r1
   177c0:	ldrsb	r6, [r0]
   177c4:	ldm	r7, {r1, r2, r7}
   177c8:	cmp	r5, #0
   177cc:	beq	177e4 <flatcc_json_printer_int8_enum_struct_field@@Base+0x3c>
   177d0:	ldr	r0, [r4, #20]
   177d4:	add	r3, r0, #1
   177d8:	str	r3, [r4, #20]
   177dc:	mov	r3, #44	; 0x2c
   177e0:	strb	r3, [r0]
   177e4:	mov	r0, r4
   177e8:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   177ec:	ldrb	r0, [r4, #27]
   177f0:	cmp	r0, #0
   177f4:	beq	17830 <flatcc_json_printer_int8_enum_struct_field@@Base+0x88>
   177f8:	ldr	r1, [r4, #20]
   177fc:	uxtb	r0, r6
   17800:	cmn	r6, #1
   17804:	rsble	r6, r6, #0
   17808:	lsr	r5, r0, #7
   1780c:	movle	r0, #45	; 0x2d
   17810:	strble	r0, [r1], #1
   17814:	uxtb	r0, r6
   17818:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   1781c:	ldr	r1, [r4, #20]
   17820:	add	r0, r0, r5
   17824:	add	r0, r1, r0
   17828:	str	r0, [r4, #20]
   1782c:	pop	{r4, r5, r6, r7, fp, pc}
   17830:	mov	r0, r4
   17834:	mov	r1, r6
   17838:	mov	r2, r7
   1783c:	pop	{r4, r5, r6, r7, fp, lr}
   17840:	bx	r2

00017844 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   17844:	push	{r4, r5, r6, r7, fp, lr}
   17848:	add	fp, sp, #16
   1784c:	mov	r4, r0
   17850:	add	r0, r2, r3
   17854:	add	r7, fp, #8
   17858:	mov	r5, r1
   1785c:	ldrsh	r6, [r0]
   17860:	ldm	r7, {r1, r2, r7}
   17864:	cmp	r5, #0
   17868:	beq	17880 <flatcc_json_printer_int16_enum_struct_field@@Base+0x3c>
   1786c:	ldr	r0, [r4, #20]
   17870:	add	r3, r0, #1
   17874:	str	r3, [r4, #20]
   17878:	mov	r3, #44	; 0x2c
   1787c:	strb	r3, [r0]
   17880:	mov	r0, r4
   17884:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   17888:	ldrb	r0, [r4, #27]
   1788c:	cmp	r0, #0
   17890:	beq	178cc <flatcc_json_printer_int16_enum_struct_field@@Base+0x88>
   17894:	ldr	r1, [r4, #20]
   17898:	uxth	r0, r6
   1789c:	cmn	r6, #1
   178a0:	rsble	r6, r6, #0
   178a4:	lsr	r5, r0, #15
   178a8:	movle	r0, #45	; 0x2d
   178ac:	strble	r0, [r1], #1
   178b0:	uxth	r0, r6
   178b4:	bl	14cd0 <flatcc_json_printer_uint16@@Base+0x2c>
   178b8:	ldr	r1, [r4, #20]
   178bc:	add	r0, r0, r5
   178c0:	add	r0, r1, r0
   178c4:	str	r0, [r4, #20]
   178c8:	pop	{r4, r5, r6, r7, fp, pc}
   178cc:	mov	r0, r4
   178d0:	mov	r1, r6
   178d4:	mov	r2, r7
   178d8:	pop	{r4, r5, r6, r7, fp, lr}
   178dc:	bx	r2

000178e0 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   178e0:	push	{r4, r5, r6, r7, fp, lr}
   178e4:	add	fp, sp, #16
   178e8:	add	r7, fp, #8
   178ec:	mov	r5, r1
   178f0:	ldr	r6, [r2, r3]
   178f4:	mov	r4, r0
   178f8:	ldm	r7, {r1, r2, r7}
   178fc:	cmp	r5, #0
   17900:	beq	17918 <flatcc_json_printer_int32_enum_struct_field@@Base+0x38>
   17904:	ldr	r0, [r4, #20]
   17908:	add	r3, r0, #1
   1790c:	str	r3, [r4, #20]
   17910:	mov	r3, #44	; 0x2c
   17914:	strb	r3, [r0]
   17918:	mov	r0, r4
   1791c:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   17920:	ldrb	r0, [r4, #27]
   17924:	cmp	r0, #0
   17928:	beq	17960 <flatcc_json_printer_int32_enum_struct_field@@Base+0x80>
   1792c:	ldr	r1, [r4, #20]
   17930:	cmn	r6, #1
   17934:	lsr	r5, r6, #31
   17938:	movle	r0, #45	; 0x2d
   1793c:	rsble	r6, r6, #0
   17940:	strble	r0, [r1], #1
   17944:	mov	r0, r6
   17948:	bl	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   1794c:	ldr	r1, [r4, #20]
   17950:	add	r0, r0, r5
   17954:	add	r0, r1, r0
   17958:	str	r0, [r4, #20]
   1795c:	pop	{r4, r5, r6, r7, fp, pc}
   17960:	mov	r0, r4
   17964:	mov	r1, r6
   17968:	mov	r2, r7
   1796c:	pop	{r4, r5, r6, r7, fp, lr}
   17970:	bx	r2

00017974 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   17974:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17978:	add	fp, sp, #24
   1797c:	ldr	r7, [r2, r3]!
   17980:	add	r8, fp, #8
   17984:	mov	r6, r1
   17988:	mov	r4, r0
   1798c:	cmp	r6, #0
   17990:	ldr	r5, [r2, #4]
   17994:	ldm	r8, {r1, r2, r8}
   17998:	beq	179b0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x3c>
   1799c:	ldr	r0, [r4, #20]
   179a0:	add	r3, r0, #1
   179a4:	str	r3, [r4, #20]
   179a8:	mov	r3, #44	; 0x2c
   179ac:	strb	r3, [r0]
   179b0:	mov	r0, r4
   179b4:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   179b8:	ldrb	r0, [r4, #27]
   179bc:	cmp	r0, #0
   179c0:	beq	17a04 <flatcc_json_printer_int64_enum_struct_field@@Base+0x90>
   179c4:	ldr	r2, [r4, #20]
   179c8:	lsr	r6, r5, #31
   179cc:	cmn	r5, #1
   179d0:	bgt	179e4 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   179d4:	mov	r0, #45	; 0x2d
   179d8:	rsbs	r7, r7, #0
   179dc:	strb	r0, [r2], #1
   179e0:	rsc	r5, r5, #0
   179e4:	mov	r0, r7
   179e8:	mov	r1, r5
   179ec:	bl	15194 <flatcc_json_printer_uint64@@Base+0x30>
   179f0:	ldr	r1, [r4, #20]
   179f4:	add	r0, r0, r6
   179f8:	add	r0, r1, r0
   179fc:	str	r0, [r4, #20]
   17a00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17a04:	mov	r0, r4
   17a08:	mov	r2, r7
   17a0c:	mov	r3, r5
   17a10:	mov	r1, r8
   17a14:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   17a18:	bx	r1

00017a1c <flatcc_json_printer_bool_enum_struct_field@@Base>:
   17a1c:	push	{r4, r5, r6, r7, fp, lr}
   17a20:	add	fp, sp, #16
   17a24:	add	r7, fp, #8
   17a28:	mov	r5, r1
   17a2c:	ldrb	r6, [r2, r3]
   17a30:	mov	r4, r0
   17a34:	ldm	r7, {r1, r2, r7}
   17a38:	cmp	r5, #0
   17a3c:	beq	17a54 <flatcc_json_printer_bool_enum_struct_field@@Base+0x38>
   17a40:	ldr	r0, [r4, #20]
   17a44:	add	r3, r0, #1
   17a48:	str	r3, [r4, #20]
   17a4c:	mov	r3, #44	; 0x2c
   17a50:	strb	r3, [r0]
   17a54:	mov	r0, r4
   17a58:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   17a5c:	ldrb	r0, [r4, #27]
   17a60:	cmp	r0, #0
   17a64:	beq	17a90 <flatcc_json_printer_bool_enum_struct_field@@Base+0x74>
   17a68:	ldr	r0, [r4, #20]
   17a6c:	cmp	r6, #0
   17a70:	beq	17aa4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x88>
   17a74:	mov	r1, #0
   17a78:	strb	r1, [r0, #4]
   17a7c:	movw	r1, #29300	; 0x7274
   17a80:	movt	r1, #25973	; 0x6575
   17a84:	str	r1, [r0]
   17a88:	mov	r0, #4
   17a8c:	b	17abc <flatcc_json_printer_bool_enum_struct_field@@Base+0xa0>
   17a90:	mov	r0, r4
   17a94:	mov	r1, r6
   17a98:	mov	r2, r7
   17a9c:	pop	{r4, r5, r6, r7, fp, lr}
   17aa0:	bx	r2
   17aa4:	mov	r1, #101	; 0x65
   17aa8:	strh	r1, [r0, #4]
   17aac:	movw	r1, #24934	; 0x6166
   17ab0:	movt	r1, #29548	; 0x736c
   17ab4:	str	r1, [r0]
   17ab8:	mov	r0, #5
   17abc:	ldr	r1, [r4, #20]
   17ac0:	add	r0, r1, r0
   17ac4:	str	r0, [r4, #20]
   17ac8:	pop	{r4, r5, r6, r7, fp, pc}

00017acc <flatcc_json_printer_utype_vector_field@@Base>:
   17acc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ad0:	add	fp, sp, #28
   17ad4:	sub	sp, sp, #4
   17ad8:	mov	r4, r0
   17adc:	mov	r0, #4
   17ae0:	add	r0, r0, r2, lsl #1
   17ae4:	ldr	r2, [r1, #8]
   17ae8:	cmp	r0, r2
   17aec:	bge	17e74 <flatcc_json_printer_utype_vector_field@@Base+0x3a8>
   17af0:	ldr	r2, [r1, #4]
   17af4:	add	r0, r2, r0
   17af8:	ldrh	r0, [r0]
   17afc:	cmp	r0, #0
   17b00:	ldrne	r2, [r1]
   17b04:	addsne	r8, r2, r0
   17b08:	beq	17e74 <flatcc_json_printer_utype_vector_field@@Base+0x3a8>
   17b0c:	ldr	r0, [r1, #16]
   17b10:	ldr	r2, [fp, #8]
   17b14:	add	r7, r0, #1
   17b18:	cmp	r0, #0
   17b1c:	str	r7, [r1, #16]
   17b20:	beq	17b38 <flatcc_json_printer_utype_vector_field@@Base+0x6c>
   17b24:	ldr	r0, [r4, #20]
   17b28:	add	r1, r0, #1
   17b2c:	str	r1, [r4, #20]
   17b30:	mov	r1, #44	; 0x2c
   17b34:	strb	r1, [r0]
   17b38:	ldr	r0, [r8]
   17b3c:	mov	r1, r3
   17b40:	ldr	r7, [r8, r0]!
   17b44:	mov	r0, r4
   17b48:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   17b4c:	ldr	r1, [r4, #32]
   17b50:	ldr	r0, [r4, #20]
   17b54:	cmp	r7, #0
   17b58:	add	r1, r1, #1
   17b5c:	str	r1, [r4, #32]
   17b60:	add	r1, r0, #1
   17b64:	str	r1, [r4, #20]
   17b68:	mov	r1, #91	; 0x5b
   17b6c:	strb	r1, [r0]
   17b70:	beq	17d98 <flatcc_json_printer_utype_vector_field@@Base+0x2cc>
   17b74:	ldrb	r0, [r4, #25]
   17b78:	ldr	r1, [r4, #20]
   17b7c:	cmp	r0, #0
   17b80:	beq	17c3c <flatcc_json_printer_utype_vector_field@@Base+0x170>
   17b84:	add	r0, r1, #1
   17b88:	str	r0, [r4, #20]
   17b8c:	mov	r0, #10
   17b90:	strb	r0, [r1]
   17b94:	ldr	r0, [r4, #20]
   17b98:	ldrb	r2, [r4, #25]
   17b9c:	ldr	r3, [r4, #32]
   17ba0:	ldr	r1, [r4, #16]
   17ba4:	mla	r6, r3, r2, r0
   17ba8:	mul	r5, r3, r2
   17bac:	cmp	r6, r1
   17bb0:	bls	17c20 <flatcc_json_printer_utype_vector_field@@Base+0x154>
   17bb4:	cmp	r0, r1
   17bb8:	bcc	17bd4 <flatcc_json_printer_utype_vector_field@@Base+0x108>
   17bbc:	ldr	r2, [r4, #44]	; 0x2c
   17bc0:	mov	r0, r4
   17bc4:	mov	r1, #0
   17bc8:	blx	r2
   17bcc:	ldr	r1, [r4, #16]
   17bd0:	ldr	r0, [r4, #20]
   17bd4:	sub	r6, r1, r0
   17bd8:	cmp	r6, r5
   17bdc:	bcs	17c20 <flatcc_json_printer_utype_vector_field@@Base+0x154>
   17be0:	mov	r1, #32
   17be4:	mov	r2, r6
   17be8:	bl	12944 <memset@plt>
   17bec:	ldr	r0, [r4, #20]
   17bf0:	ldr	r2, [r4, #44]	; 0x2c
   17bf4:	mov	r1, #0
   17bf8:	add	r0, r0, r6
   17bfc:	str	r0, [r4, #20]
   17c00:	mov	r0, r4
   17c04:	blx	r2
   17c08:	ldr	r1, [r4, #16]
   17c0c:	ldr	r0, [r4, #20]
   17c10:	sub	r5, r5, r6
   17c14:	sub	r6, r1, r0
   17c18:	cmp	r5, r6
   17c1c:	bhi	17be0 <flatcc_json_printer_utype_vector_field@@Base+0x114>
   17c20:	mov	r1, #32
   17c24:	mov	r2, r5
   17c28:	bl	12944 <memset@plt>
   17c2c:	ldr	r0, [r4, #20]
   17c30:	add	r1, r0, r5
   17c34:	str	r1, [r4, #20]
   17c38:	b	17c5c <flatcc_json_printer_utype_vector_field@@Base+0x190>
   17c3c:	ldr	r0, [r4, #16]
   17c40:	cmp	r1, r0
   17c44:	bcc	17c5c <flatcc_json_printer_utype_vector_field@@Base+0x190>
   17c48:	ldr	r2, [r4, #44]	; 0x2c
   17c4c:	mov	r0, r4
   17c50:	mov	r1, #0
   17c54:	blx	r2
   17c58:	ldr	r1, [r4, #20]
   17c5c:	ldrb	r0, [r8, #4]
   17c60:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   17c64:	ldr	r1, [r4, #20]
   17c68:	subs	r9, r7, #1
   17c6c:	add	r0, r1, r0
   17c70:	str	r0, [r4, #20]
   17c74:	beq	17d98 <flatcc_json_printer_utype_vector_field@@Base+0x2cc>
   17c78:	ldr	r0, [r4, #20]
   17c7c:	add	r7, r8, #5
   17c80:	mov	r8, #44	; 0x2c
   17c84:	mov	sl, #10
   17c88:	add	r1, r0, #1
   17c8c:	sub	r9, r9, #1
   17c90:	str	r1, [r4, #20]
   17c94:	strb	r8, [r0]
   17c98:	ldrb	r0, [r4, #25]
   17c9c:	ldr	r1, [r4, #20]
   17ca0:	cmp	r0, #0
   17ca4:	beq	17d5c <flatcc_json_printer_utype_vector_field@@Base+0x290>
   17ca8:	add	r0, r1, #1
   17cac:	str	r0, [r4, #20]
   17cb0:	strb	sl, [r1]
   17cb4:	ldr	r0, [r4, #20]
   17cb8:	ldrb	r2, [r4, #25]
   17cbc:	ldr	r3, [r4, #32]
   17cc0:	ldr	r1, [r4, #16]
   17cc4:	mla	r6, r3, r2, r0
   17cc8:	mul	r5, r3, r2
   17ccc:	cmp	r6, r1
   17cd0:	bls	17d40 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   17cd4:	cmp	r0, r1
   17cd8:	bcc	17cf4 <flatcc_json_printer_utype_vector_field@@Base+0x228>
   17cdc:	ldr	r2, [r4, #44]	; 0x2c
   17ce0:	mov	r0, r4
   17ce4:	mov	r1, #0
   17ce8:	blx	r2
   17cec:	ldr	r1, [r4, #16]
   17cf0:	ldr	r0, [r4, #20]
   17cf4:	sub	r6, r1, r0
   17cf8:	cmp	r6, r5
   17cfc:	bcs	17d40 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   17d00:	mov	r1, #32
   17d04:	mov	r2, r6
   17d08:	bl	12944 <memset@plt>
   17d0c:	ldr	r0, [r4, #20]
   17d10:	ldr	r2, [r4, #44]	; 0x2c
   17d14:	mov	r1, #0
   17d18:	add	r0, r0, r6
   17d1c:	str	r0, [r4, #20]
   17d20:	mov	r0, r4
   17d24:	blx	r2
   17d28:	ldr	r1, [r4, #16]
   17d2c:	ldr	r0, [r4, #20]
   17d30:	sub	r5, r5, r6
   17d34:	sub	r6, r1, r0
   17d38:	cmp	r5, r6
   17d3c:	bhi	17d00 <flatcc_json_printer_utype_vector_field@@Base+0x234>
   17d40:	mov	r1, #32
   17d44:	mov	r2, r5
   17d48:	bl	12944 <memset@plt>
   17d4c:	ldr	r0, [r4, #20]
   17d50:	add	r1, r0, r5
   17d54:	str	r1, [r4, #20]
   17d58:	b	17d7c <flatcc_json_printer_utype_vector_field@@Base+0x2b0>
   17d5c:	ldr	r0, [r4, #16]
   17d60:	cmp	r1, r0
   17d64:	bcc	17d7c <flatcc_json_printer_utype_vector_field@@Base+0x2b0>
   17d68:	ldr	r2, [r4, #44]	; 0x2c
   17d6c:	mov	r0, r4
   17d70:	mov	r1, #0
   17d74:	blx	r2
   17d78:	ldr	r1, [r4, #20]
   17d7c:	ldrb	r0, [r7], #1
   17d80:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   17d84:	ldr	r1, [r4, #20]
   17d88:	cmp	r9, #0
   17d8c:	add	r0, r1, r0
   17d90:	str	r0, [r4, #20]
   17d94:	bne	17c88 <flatcc_json_printer_utype_vector_field@@Base+0x1bc>
   17d98:	ldrb	r1, [r4, #25]
   17d9c:	ldr	r0, [r4, #20]
   17da0:	cmp	r1, #0
   17da4:	beq	17e64 <flatcc_json_printer_utype_vector_field@@Base+0x398>
   17da8:	add	r1, r0, #1
   17dac:	str	r1, [r4, #20]
   17db0:	mov	r1, #10
   17db4:	strb	r1, [r0]
   17db8:	ldr	r0, [r4, #32]
   17dbc:	sub	r2, r0, #1
   17dc0:	str	r2, [r4, #32]
   17dc4:	ldrb	r3, [r4, #25]
   17dc8:	ldr	r0, [r4, #20]
   17dcc:	ldr	r1, [r4, #16]
   17dd0:	mla	r7, r2, r3, r0
   17dd4:	mul	r5, r2, r3
   17dd8:	cmp	r7, r1
   17ddc:	bls	17e4c <flatcc_json_printer_utype_vector_field@@Base+0x380>
   17de0:	cmp	r0, r1
   17de4:	bcc	17e00 <flatcc_json_printer_utype_vector_field@@Base+0x334>
   17de8:	ldr	r2, [r4, #44]	; 0x2c
   17dec:	mov	r0, r4
   17df0:	mov	r1, #0
   17df4:	blx	r2
   17df8:	ldr	r1, [r4, #16]
   17dfc:	ldr	r0, [r4, #20]
   17e00:	sub	r6, r1, r0
   17e04:	cmp	r6, r5
   17e08:	bcs	17e4c <flatcc_json_printer_utype_vector_field@@Base+0x380>
   17e0c:	mov	r1, #32
   17e10:	mov	r2, r6
   17e14:	bl	12944 <memset@plt>
   17e18:	ldr	r0, [r4, #20]
   17e1c:	ldr	r2, [r4, #44]	; 0x2c
   17e20:	mov	r1, #0
   17e24:	add	r0, r0, r6
   17e28:	str	r0, [r4, #20]
   17e2c:	mov	r0, r4
   17e30:	blx	r2
   17e34:	ldr	r1, [r4, #16]
   17e38:	ldr	r0, [r4, #20]
   17e3c:	sub	r5, r5, r6
   17e40:	sub	r6, r1, r0
   17e44:	cmp	r5, r6
   17e48:	bhi	17e0c <flatcc_json_printer_utype_vector_field@@Base+0x340>
   17e4c:	mov	r1, #32
   17e50:	mov	r2, r5
   17e54:	bl	12944 <memset@plt>
   17e58:	ldr	r0, [r4, #20]
   17e5c:	add	r0, r0, r5
   17e60:	str	r0, [r4, #20]
   17e64:	add	r1, r0, #1
   17e68:	str	r1, [r4, #20]
   17e6c:	mov	r1, #93	; 0x5d
   17e70:	strb	r1, [r0]
   17e74:	sub	sp, fp, #28
   17e78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017e7c <flatcc_json_printer_uint8_vector_field@@Base>:
   17e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e80:	add	fp, sp, #28
   17e84:	sub	sp, sp, #4
   17e88:	mov	r4, r0
   17e8c:	mov	r0, #4
   17e90:	add	r0, r0, r2, lsl #1
   17e94:	ldr	r2, [r1, #8]
   17e98:	cmp	r0, r2
   17e9c:	bge	18224 <flatcc_json_printer_uint8_vector_field@@Base+0x3a8>
   17ea0:	ldr	r2, [r1, #4]
   17ea4:	add	r0, r2, r0
   17ea8:	ldrh	r0, [r0]
   17eac:	cmp	r0, #0
   17eb0:	ldrne	r2, [r1]
   17eb4:	addsne	r8, r2, r0
   17eb8:	beq	18224 <flatcc_json_printer_uint8_vector_field@@Base+0x3a8>
   17ebc:	ldr	r0, [r1, #16]
   17ec0:	ldr	r2, [fp, #8]
   17ec4:	add	r7, r0, #1
   17ec8:	cmp	r0, #0
   17ecc:	str	r7, [r1, #16]
   17ed0:	beq	17ee8 <flatcc_json_printer_uint8_vector_field@@Base+0x6c>
   17ed4:	ldr	r0, [r4, #20]
   17ed8:	add	r1, r0, #1
   17edc:	str	r1, [r4, #20]
   17ee0:	mov	r1, #44	; 0x2c
   17ee4:	strb	r1, [r0]
   17ee8:	ldr	r0, [r8]
   17eec:	mov	r1, r3
   17ef0:	ldr	r7, [r8, r0]!
   17ef4:	mov	r0, r4
   17ef8:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   17efc:	ldr	r1, [r4, #32]
   17f00:	ldr	r0, [r4, #20]
   17f04:	cmp	r7, #0
   17f08:	add	r1, r1, #1
   17f0c:	str	r1, [r4, #32]
   17f10:	add	r1, r0, #1
   17f14:	str	r1, [r4, #20]
   17f18:	mov	r1, #91	; 0x5b
   17f1c:	strb	r1, [r0]
   17f20:	beq	18148 <flatcc_json_printer_uint8_vector_field@@Base+0x2cc>
   17f24:	ldrb	r0, [r4, #25]
   17f28:	ldr	r1, [r4, #20]
   17f2c:	cmp	r0, #0
   17f30:	beq	17fec <flatcc_json_printer_uint8_vector_field@@Base+0x170>
   17f34:	add	r0, r1, #1
   17f38:	str	r0, [r4, #20]
   17f3c:	mov	r0, #10
   17f40:	strb	r0, [r1]
   17f44:	ldr	r0, [r4, #20]
   17f48:	ldrb	r2, [r4, #25]
   17f4c:	ldr	r3, [r4, #32]
   17f50:	ldr	r1, [r4, #16]
   17f54:	mla	r6, r3, r2, r0
   17f58:	mul	r5, r3, r2
   17f5c:	cmp	r6, r1
   17f60:	bls	17fd0 <flatcc_json_printer_uint8_vector_field@@Base+0x154>
   17f64:	cmp	r0, r1
   17f68:	bcc	17f84 <flatcc_json_printer_uint8_vector_field@@Base+0x108>
   17f6c:	ldr	r2, [r4, #44]	; 0x2c
   17f70:	mov	r0, r4
   17f74:	mov	r1, #0
   17f78:	blx	r2
   17f7c:	ldr	r1, [r4, #16]
   17f80:	ldr	r0, [r4, #20]
   17f84:	sub	r6, r1, r0
   17f88:	cmp	r6, r5
   17f8c:	bcs	17fd0 <flatcc_json_printer_uint8_vector_field@@Base+0x154>
   17f90:	mov	r1, #32
   17f94:	mov	r2, r6
   17f98:	bl	12944 <memset@plt>
   17f9c:	ldr	r0, [r4, #20]
   17fa0:	ldr	r2, [r4, #44]	; 0x2c
   17fa4:	mov	r1, #0
   17fa8:	add	r0, r0, r6
   17fac:	str	r0, [r4, #20]
   17fb0:	mov	r0, r4
   17fb4:	blx	r2
   17fb8:	ldr	r1, [r4, #16]
   17fbc:	ldr	r0, [r4, #20]
   17fc0:	sub	r5, r5, r6
   17fc4:	sub	r6, r1, r0
   17fc8:	cmp	r5, r6
   17fcc:	bhi	17f90 <flatcc_json_printer_uint8_vector_field@@Base+0x114>
   17fd0:	mov	r1, #32
   17fd4:	mov	r2, r5
   17fd8:	bl	12944 <memset@plt>
   17fdc:	ldr	r0, [r4, #20]
   17fe0:	add	r1, r0, r5
   17fe4:	str	r1, [r4, #20]
   17fe8:	b	1800c <flatcc_json_printer_uint8_vector_field@@Base+0x190>
   17fec:	ldr	r0, [r4, #16]
   17ff0:	cmp	r1, r0
   17ff4:	bcc	1800c <flatcc_json_printer_uint8_vector_field@@Base+0x190>
   17ff8:	ldr	r2, [r4, #44]	; 0x2c
   17ffc:	mov	r0, r4
   18000:	mov	r1, #0
   18004:	blx	r2
   18008:	ldr	r1, [r4, #20]
   1800c:	ldrb	r0, [r8, #4]
   18010:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   18014:	ldr	r1, [r4, #20]
   18018:	subs	r9, r7, #1
   1801c:	add	r0, r1, r0
   18020:	str	r0, [r4, #20]
   18024:	beq	18148 <flatcc_json_printer_uint8_vector_field@@Base+0x2cc>
   18028:	ldr	r0, [r4, #20]
   1802c:	add	r7, r8, #5
   18030:	mov	r8, #44	; 0x2c
   18034:	mov	sl, #10
   18038:	add	r1, r0, #1
   1803c:	sub	r9, r9, #1
   18040:	str	r1, [r4, #20]
   18044:	strb	r8, [r0]
   18048:	ldrb	r0, [r4, #25]
   1804c:	ldr	r1, [r4, #20]
   18050:	cmp	r0, #0
   18054:	beq	1810c <flatcc_json_printer_uint8_vector_field@@Base+0x290>
   18058:	add	r0, r1, #1
   1805c:	str	r0, [r4, #20]
   18060:	strb	sl, [r1]
   18064:	ldr	r0, [r4, #20]
   18068:	ldrb	r2, [r4, #25]
   1806c:	ldr	r3, [r4, #32]
   18070:	ldr	r1, [r4, #16]
   18074:	mla	r6, r3, r2, r0
   18078:	mul	r5, r3, r2
   1807c:	cmp	r6, r1
   18080:	bls	180f0 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   18084:	cmp	r0, r1
   18088:	bcc	180a4 <flatcc_json_printer_uint8_vector_field@@Base+0x228>
   1808c:	ldr	r2, [r4, #44]	; 0x2c
   18090:	mov	r0, r4
   18094:	mov	r1, #0
   18098:	blx	r2
   1809c:	ldr	r1, [r4, #16]
   180a0:	ldr	r0, [r4, #20]
   180a4:	sub	r6, r1, r0
   180a8:	cmp	r6, r5
   180ac:	bcs	180f0 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   180b0:	mov	r1, #32
   180b4:	mov	r2, r6
   180b8:	bl	12944 <memset@plt>
   180bc:	ldr	r0, [r4, #20]
   180c0:	ldr	r2, [r4, #44]	; 0x2c
   180c4:	mov	r1, #0
   180c8:	add	r0, r0, r6
   180cc:	str	r0, [r4, #20]
   180d0:	mov	r0, r4
   180d4:	blx	r2
   180d8:	ldr	r1, [r4, #16]
   180dc:	ldr	r0, [r4, #20]
   180e0:	sub	r5, r5, r6
   180e4:	sub	r6, r1, r0
   180e8:	cmp	r5, r6
   180ec:	bhi	180b0 <flatcc_json_printer_uint8_vector_field@@Base+0x234>
   180f0:	mov	r1, #32
   180f4:	mov	r2, r5
   180f8:	bl	12944 <memset@plt>
   180fc:	ldr	r0, [r4, #20]
   18100:	add	r1, r0, r5
   18104:	str	r1, [r4, #20]
   18108:	b	1812c <flatcc_json_printer_uint8_vector_field@@Base+0x2b0>
   1810c:	ldr	r0, [r4, #16]
   18110:	cmp	r1, r0
   18114:	bcc	1812c <flatcc_json_printer_uint8_vector_field@@Base+0x2b0>
   18118:	ldr	r2, [r4, #44]	; 0x2c
   1811c:	mov	r0, r4
   18120:	mov	r1, #0
   18124:	blx	r2
   18128:	ldr	r1, [r4, #20]
   1812c:	ldrb	r0, [r7], #1
   18130:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   18134:	ldr	r1, [r4, #20]
   18138:	cmp	r9, #0
   1813c:	add	r0, r1, r0
   18140:	str	r0, [r4, #20]
   18144:	bne	18038 <flatcc_json_printer_uint8_vector_field@@Base+0x1bc>
   18148:	ldrb	r1, [r4, #25]
   1814c:	ldr	r0, [r4, #20]
   18150:	cmp	r1, #0
   18154:	beq	18214 <flatcc_json_printer_uint8_vector_field@@Base+0x398>
   18158:	add	r1, r0, #1
   1815c:	str	r1, [r4, #20]
   18160:	mov	r1, #10
   18164:	strb	r1, [r0]
   18168:	ldr	r0, [r4, #32]
   1816c:	sub	r2, r0, #1
   18170:	str	r2, [r4, #32]
   18174:	ldrb	r3, [r4, #25]
   18178:	ldr	r0, [r4, #20]
   1817c:	ldr	r1, [r4, #16]
   18180:	mla	r7, r2, r3, r0
   18184:	mul	r5, r2, r3
   18188:	cmp	r7, r1
   1818c:	bls	181fc <flatcc_json_printer_uint8_vector_field@@Base+0x380>
   18190:	cmp	r0, r1
   18194:	bcc	181b0 <flatcc_json_printer_uint8_vector_field@@Base+0x334>
   18198:	ldr	r2, [r4, #44]	; 0x2c
   1819c:	mov	r0, r4
   181a0:	mov	r1, #0
   181a4:	blx	r2
   181a8:	ldr	r1, [r4, #16]
   181ac:	ldr	r0, [r4, #20]
   181b0:	sub	r6, r1, r0
   181b4:	cmp	r6, r5
   181b8:	bcs	181fc <flatcc_json_printer_uint8_vector_field@@Base+0x380>
   181bc:	mov	r1, #32
   181c0:	mov	r2, r6
   181c4:	bl	12944 <memset@plt>
   181c8:	ldr	r0, [r4, #20]
   181cc:	ldr	r2, [r4, #44]	; 0x2c
   181d0:	mov	r1, #0
   181d4:	add	r0, r0, r6
   181d8:	str	r0, [r4, #20]
   181dc:	mov	r0, r4
   181e0:	blx	r2
   181e4:	ldr	r1, [r4, #16]
   181e8:	ldr	r0, [r4, #20]
   181ec:	sub	r5, r5, r6
   181f0:	sub	r6, r1, r0
   181f4:	cmp	r5, r6
   181f8:	bhi	181bc <flatcc_json_printer_uint8_vector_field@@Base+0x340>
   181fc:	mov	r1, #32
   18200:	mov	r2, r5
   18204:	bl	12944 <memset@plt>
   18208:	ldr	r0, [r4, #20]
   1820c:	add	r0, r0, r5
   18210:	str	r0, [r4, #20]
   18214:	add	r1, r0, #1
   18218:	str	r1, [r4, #20]
   1821c:	mov	r1, #93	; 0x5d
   18220:	strb	r1, [r0]
   18224:	sub	sp, fp, #28
   18228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001822c <flatcc_json_printer_uint16_vector_field@@Base>:
   1822c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18230:	add	fp, sp, #28
   18234:	sub	sp, sp, #4
   18238:	mov	r4, r0
   1823c:	mov	r0, #4
   18240:	add	r0, r0, r2, lsl #1
   18244:	ldr	r2, [r1, #8]
   18248:	cmp	r0, r2
   1824c:	bge	185d4 <flatcc_json_printer_uint16_vector_field@@Base+0x3a8>
   18250:	ldr	r2, [r1, #4]
   18254:	add	r0, r2, r0
   18258:	ldrh	r0, [r0]
   1825c:	cmp	r0, #0
   18260:	ldrne	r2, [r1]
   18264:	addsne	r8, r2, r0
   18268:	beq	185d4 <flatcc_json_printer_uint16_vector_field@@Base+0x3a8>
   1826c:	ldr	r0, [r1, #16]
   18270:	ldr	r2, [fp, #8]
   18274:	add	r7, r0, #1
   18278:	cmp	r0, #0
   1827c:	str	r7, [r1, #16]
   18280:	beq	18298 <flatcc_json_printer_uint16_vector_field@@Base+0x6c>
   18284:	ldr	r0, [r4, #20]
   18288:	add	r1, r0, #1
   1828c:	str	r1, [r4, #20]
   18290:	mov	r1, #44	; 0x2c
   18294:	strb	r1, [r0]
   18298:	ldr	r0, [r8]
   1829c:	mov	r1, r3
   182a0:	ldr	r7, [r8, r0]!
   182a4:	mov	r0, r4
   182a8:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   182ac:	ldr	r1, [r4, #32]
   182b0:	ldr	r0, [r4, #20]
   182b4:	cmp	r7, #0
   182b8:	add	r1, r1, #1
   182bc:	str	r1, [r4, #32]
   182c0:	add	r1, r0, #1
   182c4:	str	r1, [r4, #20]
   182c8:	mov	r1, #91	; 0x5b
   182cc:	strb	r1, [r0]
   182d0:	beq	184f8 <flatcc_json_printer_uint16_vector_field@@Base+0x2cc>
   182d4:	ldrb	r0, [r4, #25]
   182d8:	ldr	r1, [r4, #20]
   182dc:	cmp	r0, #0
   182e0:	beq	1839c <flatcc_json_printer_uint16_vector_field@@Base+0x170>
   182e4:	add	r0, r1, #1
   182e8:	str	r0, [r4, #20]
   182ec:	mov	r0, #10
   182f0:	strb	r0, [r1]
   182f4:	ldr	r0, [r4, #20]
   182f8:	ldrb	r2, [r4, #25]
   182fc:	ldr	r3, [r4, #32]
   18300:	ldr	r1, [r4, #16]
   18304:	mla	r6, r3, r2, r0
   18308:	mul	r5, r3, r2
   1830c:	cmp	r6, r1
   18310:	bls	18380 <flatcc_json_printer_uint16_vector_field@@Base+0x154>
   18314:	cmp	r0, r1
   18318:	bcc	18334 <flatcc_json_printer_uint16_vector_field@@Base+0x108>
   1831c:	ldr	r2, [r4, #44]	; 0x2c
   18320:	mov	r0, r4
   18324:	mov	r1, #0
   18328:	blx	r2
   1832c:	ldr	r1, [r4, #16]
   18330:	ldr	r0, [r4, #20]
   18334:	sub	r6, r1, r0
   18338:	cmp	r6, r5
   1833c:	bcs	18380 <flatcc_json_printer_uint16_vector_field@@Base+0x154>
   18340:	mov	r1, #32
   18344:	mov	r2, r6
   18348:	bl	12944 <memset@plt>
   1834c:	ldr	r0, [r4, #20]
   18350:	ldr	r2, [r4, #44]	; 0x2c
   18354:	mov	r1, #0
   18358:	add	r0, r0, r6
   1835c:	str	r0, [r4, #20]
   18360:	mov	r0, r4
   18364:	blx	r2
   18368:	ldr	r1, [r4, #16]
   1836c:	ldr	r0, [r4, #20]
   18370:	sub	r5, r5, r6
   18374:	sub	r6, r1, r0
   18378:	cmp	r5, r6
   1837c:	bhi	18340 <flatcc_json_printer_uint16_vector_field@@Base+0x114>
   18380:	mov	r1, #32
   18384:	mov	r2, r5
   18388:	bl	12944 <memset@plt>
   1838c:	ldr	r0, [r4, #20]
   18390:	add	r1, r0, r5
   18394:	str	r1, [r4, #20]
   18398:	b	183bc <flatcc_json_printer_uint16_vector_field@@Base+0x190>
   1839c:	ldr	r0, [r4, #16]
   183a0:	cmp	r1, r0
   183a4:	bcc	183bc <flatcc_json_printer_uint16_vector_field@@Base+0x190>
   183a8:	ldr	r2, [r4, #44]	; 0x2c
   183ac:	mov	r0, r4
   183b0:	mov	r1, #0
   183b4:	blx	r2
   183b8:	ldr	r1, [r4, #20]
   183bc:	ldrh	r0, [r8, #4]
   183c0:	bl	14cd0 <flatcc_json_printer_uint16@@Base+0x2c>
   183c4:	ldr	r1, [r4, #20]
   183c8:	subs	r9, r7, #1
   183cc:	add	r0, r1, r0
   183d0:	str	r0, [r4, #20]
   183d4:	beq	184f8 <flatcc_json_printer_uint16_vector_field@@Base+0x2cc>
   183d8:	ldr	r0, [r4, #20]
   183dc:	add	r7, r8, #6
   183e0:	mov	r8, #44	; 0x2c
   183e4:	mov	sl, #10
   183e8:	add	r1, r0, #1
   183ec:	sub	r9, r9, #1
   183f0:	str	r1, [r4, #20]
   183f4:	strb	r8, [r0]
   183f8:	ldrb	r0, [r4, #25]
   183fc:	ldr	r1, [r4, #20]
   18400:	cmp	r0, #0
   18404:	beq	184bc <flatcc_json_printer_uint16_vector_field@@Base+0x290>
   18408:	add	r0, r1, #1
   1840c:	str	r0, [r4, #20]
   18410:	strb	sl, [r1]
   18414:	ldr	r0, [r4, #20]
   18418:	ldrb	r2, [r4, #25]
   1841c:	ldr	r3, [r4, #32]
   18420:	ldr	r1, [r4, #16]
   18424:	mla	r6, r3, r2, r0
   18428:	mul	r5, r3, r2
   1842c:	cmp	r6, r1
   18430:	bls	184a0 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   18434:	cmp	r0, r1
   18438:	bcc	18454 <flatcc_json_printer_uint16_vector_field@@Base+0x228>
   1843c:	ldr	r2, [r4, #44]	; 0x2c
   18440:	mov	r0, r4
   18444:	mov	r1, #0
   18448:	blx	r2
   1844c:	ldr	r1, [r4, #16]
   18450:	ldr	r0, [r4, #20]
   18454:	sub	r6, r1, r0
   18458:	cmp	r6, r5
   1845c:	bcs	184a0 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   18460:	mov	r1, #32
   18464:	mov	r2, r6
   18468:	bl	12944 <memset@plt>
   1846c:	ldr	r0, [r4, #20]
   18470:	ldr	r2, [r4, #44]	; 0x2c
   18474:	mov	r1, #0
   18478:	add	r0, r0, r6
   1847c:	str	r0, [r4, #20]
   18480:	mov	r0, r4
   18484:	blx	r2
   18488:	ldr	r1, [r4, #16]
   1848c:	ldr	r0, [r4, #20]
   18490:	sub	r5, r5, r6
   18494:	sub	r6, r1, r0
   18498:	cmp	r5, r6
   1849c:	bhi	18460 <flatcc_json_printer_uint16_vector_field@@Base+0x234>
   184a0:	mov	r1, #32
   184a4:	mov	r2, r5
   184a8:	bl	12944 <memset@plt>
   184ac:	ldr	r0, [r4, #20]
   184b0:	add	r1, r0, r5
   184b4:	str	r1, [r4, #20]
   184b8:	b	184dc <flatcc_json_printer_uint16_vector_field@@Base+0x2b0>
   184bc:	ldr	r0, [r4, #16]
   184c0:	cmp	r1, r0
   184c4:	bcc	184dc <flatcc_json_printer_uint16_vector_field@@Base+0x2b0>
   184c8:	ldr	r2, [r4, #44]	; 0x2c
   184cc:	mov	r0, r4
   184d0:	mov	r1, #0
   184d4:	blx	r2
   184d8:	ldr	r1, [r4, #20]
   184dc:	ldrh	r0, [r7], #2
   184e0:	bl	14cd0 <flatcc_json_printer_uint16@@Base+0x2c>
   184e4:	ldr	r1, [r4, #20]
   184e8:	cmp	r9, #0
   184ec:	add	r0, r1, r0
   184f0:	str	r0, [r4, #20]
   184f4:	bne	183e8 <flatcc_json_printer_uint16_vector_field@@Base+0x1bc>
   184f8:	ldrb	r1, [r4, #25]
   184fc:	ldr	r0, [r4, #20]
   18500:	cmp	r1, #0
   18504:	beq	185c4 <flatcc_json_printer_uint16_vector_field@@Base+0x398>
   18508:	add	r1, r0, #1
   1850c:	str	r1, [r4, #20]
   18510:	mov	r1, #10
   18514:	strb	r1, [r0]
   18518:	ldr	r0, [r4, #32]
   1851c:	sub	r2, r0, #1
   18520:	str	r2, [r4, #32]
   18524:	ldrb	r3, [r4, #25]
   18528:	ldr	r0, [r4, #20]
   1852c:	ldr	r1, [r4, #16]
   18530:	mla	r7, r2, r3, r0
   18534:	mul	r5, r2, r3
   18538:	cmp	r7, r1
   1853c:	bls	185ac <flatcc_json_printer_uint16_vector_field@@Base+0x380>
   18540:	cmp	r0, r1
   18544:	bcc	18560 <flatcc_json_printer_uint16_vector_field@@Base+0x334>
   18548:	ldr	r2, [r4, #44]	; 0x2c
   1854c:	mov	r0, r4
   18550:	mov	r1, #0
   18554:	blx	r2
   18558:	ldr	r1, [r4, #16]
   1855c:	ldr	r0, [r4, #20]
   18560:	sub	r6, r1, r0
   18564:	cmp	r6, r5
   18568:	bcs	185ac <flatcc_json_printer_uint16_vector_field@@Base+0x380>
   1856c:	mov	r1, #32
   18570:	mov	r2, r6
   18574:	bl	12944 <memset@plt>
   18578:	ldr	r0, [r4, #20]
   1857c:	ldr	r2, [r4, #44]	; 0x2c
   18580:	mov	r1, #0
   18584:	add	r0, r0, r6
   18588:	str	r0, [r4, #20]
   1858c:	mov	r0, r4
   18590:	blx	r2
   18594:	ldr	r1, [r4, #16]
   18598:	ldr	r0, [r4, #20]
   1859c:	sub	r5, r5, r6
   185a0:	sub	r6, r1, r0
   185a4:	cmp	r5, r6
   185a8:	bhi	1856c <flatcc_json_printer_uint16_vector_field@@Base+0x340>
   185ac:	mov	r1, #32
   185b0:	mov	r2, r5
   185b4:	bl	12944 <memset@plt>
   185b8:	ldr	r0, [r4, #20]
   185bc:	add	r0, r0, r5
   185c0:	str	r0, [r4, #20]
   185c4:	add	r1, r0, #1
   185c8:	str	r1, [r4, #20]
   185cc:	mov	r1, #93	; 0x5d
   185d0:	strb	r1, [r0]
   185d4:	sub	sp, fp, #28
   185d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000185dc <flatcc_json_printer_uint32_vector_field@@Base>:
   185dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185e0:	add	fp, sp, #28
   185e4:	sub	sp, sp, #4
   185e8:	mov	r4, r0
   185ec:	mov	r0, #4
   185f0:	add	r0, r0, r2, lsl #1
   185f4:	ldr	r2, [r1, #8]
   185f8:	cmp	r0, r2
   185fc:	bge	18984 <flatcc_json_printer_uint32_vector_field@@Base+0x3a8>
   18600:	ldr	r2, [r1, #4]
   18604:	add	r0, r2, r0
   18608:	ldrh	r0, [r0]
   1860c:	cmp	r0, #0
   18610:	ldrne	r2, [r1]
   18614:	addsne	r8, r2, r0
   18618:	beq	18984 <flatcc_json_printer_uint32_vector_field@@Base+0x3a8>
   1861c:	ldr	r0, [r1, #16]
   18620:	ldr	r2, [fp, #8]
   18624:	add	r7, r0, #1
   18628:	cmp	r0, #0
   1862c:	str	r7, [r1, #16]
   18630:	beq	18648 <flatcc_json_printer_uint32_vector_field@@Base+0x6c>
   18634:	ldr	r0, [r4, #20]
   18638:	add	r1, r0, #1
   1863c:	str	r1, [r4, #20]
   18640:	mov	r1, #44	; 0x2c
   18644:	strb	r1, [r0]
   18648:	ldr	r0, [r8]
   1864c:	mov	r1, r3
   18650:	ldr	r7, [r8, r0]!
   18654:	mov	r0, r4
   18658:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1865c:	ldr	r1, [r4, #32]
   18660:	ldr	r0, [r4, #20]
   18664:	cmp	r7, #0
   18668:	add	r1, r1, #1
   1866c:	str	r1, [r4, #32]
   18670:	add	r1, r0, #1
   18674:	str	r1, [r4, #20]
   18678:	mov	r1, #91	; 0x5b
   1867c:	strb	r1, [r0]
   18680:	beq	188a8 <flatcc_json_printer_uint32_vector_field@@Base+0x2cc>
   18684:	ldrb	r0, [r4, #25]
   18688:	ldr	r1, [r4, #20]
   1868c:	cmp	r0, #0
   18690:	beq	1874c <flatcc_json_printer_uint32_vector_field@@Base+0x170>
   18694:	add	r0, r1, #1
   18698:	str	r0, [r4, #20]
   1869c:	mov	r0, #10
   186a0:	strb	r0, [r1]
   186a4:	ldr	r0, [r4, #20]
   186a8:	ldrb	r2, [r4, #25]
   186ac:	ldr	r3, [r4, #32]
   186b0:	ldr	r1, [r4, #16]
   186b4:	mla	r6, r3, r2, r0
   186b8:	mul	r5, r3, r2
   186bc:	cmp	r6, r1
   186c0:	bls	18730 <flatcc_json_printer_uint32_vector_field@@Base+0x154>
   186c4:	cmp	r0, r1
   186c8:	bcc	186e4 <flatcc_json_printer_uint32_vector_field@@Base+0x108>
   186cc:	ldr	r2, [r4, #44]	; 0x2c
   186d0:	mov	r0, r4
   186d4:	mov	r1, #0
   186d8:	blx	r2
   186dc:	ldr	r1, [r4, #16]
   186e0:	ldr	r0, [r4, #20]
   186e4:	sub	r6, r1, r0
   186e8:	cmp	r6, r5
   186ec:	bcs	18730 <flatcc_json_printer_uint32_vector_field@@Base+0x154>
   186f0:	mov	r1, #32
   186f4:	mov	r2, r6
   186f8:	bl	12944 <memset@plt>
   186fc:	ldr	r0, [r4, #20]
   18700:	ldr	r2, [r4, #44]	; 0x2c
   18704:	mov	r1, #0
   18708:	add	r0, r0, r6
   1870c:	str	r0, [r4, #20]
   18710:	mov	r0, r4
   18714:	blx	r2
   18718:	ldr	r1, [r4, #16]
   1871c:	ldr	r0, [r4, #20]
   18720:	sub	r5, r5, r6
   18724:	sub	r6, r1, r0
   18728:	cmp	r5, r6
   1872c:	bhi	186f0 <flatcc_json_printer_uint32_vector_field@@Base+0x114>
   18730:	mov	r1, #32
   18734:	mov	r2, r5
   18738:	bl	12944 <memset@plt>
   1873c:	ldr	r0, [r4, #20]
   18740:	add	r1, r0, r5
   18744:	str	r1, [r4, #20]
   18748:	b	1876c <flatcc_json_printer_uint32_vector_field@@Base+0x190>
   1874c:	ldr	r0, [r4, #16]
   18750:	cmp	r1, r0
   18754:	bcc	1876c <flatcc_json_printer_uint32_vector_field@@Base+0x190>
   18758:	ldr	r2, [r4, #44]	; 0x2c
   1875c:	mov	r0, r4
   18760:	mov	r1, #0
   18764:	blx	r2
   18768:	ldr	r1, [r4, #20]
   1876c:	ldr	r0, [r8, #4]
   18770:	bl	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   18774:	ldr	r1, [r4, #20]
   18778:	subs	r9, r7, #1
   1877c:	add	r0, r1, r0
   18780:	str	r0, [r4, #20]
   18784:	beq	188a8 <flatcc_json_printer_uint32_vector_field@@Base+0x2cc>
   18788:	ldr	r0, [r4, #20]
   1878c:	add	r7, r8, #8
   18790:	mov	r8, #44	; 0x2c
   18794:	mov	sl, #10
   18798:	add	r1, r0, #1
   1879c:	sub	r9, r9, #1
   187a0:	str	r1, [r4, #20]
   187a4:	strb	r8, [r0]
   187a8:	ldrb	r0, [r4, #25]
   187ac:	ldr	r1, [r4, #20]
   187b0:	cmp	r0, #0
   187b4:	beq	1886c <flatcc_json_printer_uint32_vector_field@@Base+0x290>
   187b8:	add	r0, r1, #1
   187bc:	str	r0, [r4, #20]
   187c0:	strb	sl, [r1]
   187c4:	ldr	r0, [r4, #20]
   187c8:	ldrb	r2, [r4, #25]
   187cc:	ldr	r3, [r4, #32]
   187d0:	ldr	r1, [r4, #16]
   187d4:	mla	r6, r3, r2, r0
   187d8:	mul	r5, r3, r2
   187dc:	cmp	r6, r1
   187e0:	bls	18850 <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   187e4:	cmp	r0, r1
   187e8:	bcc	18804 <flatcc_json_printer_uint32_vector_field@@Base+0x228>
   187ec:	ldr	r2, [r4, #44]	; 0x2c
   187f0:	mov	r0, r4
   187f4:	mov	r1, #0
   187f8:	blx	r2
   187fc:	ldr	r1, [r4, #16]
   18800:	ldr	r0, [r4, #20]
   18804:	sub	r6, r1, r0
   18808:	cmp	r6, r5
   1880c:	bcs	18850 <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   18810:	mov	r1, #32
   18814:	mov	r2, r6
   18818:	bl	12944 <memset@plt>
   1881c:	ldr	r0, [r4, #20]
   18820:	ldr	r2, [r4, #44]	; 0x2c
   18824:	mov	r1, #0
   18828:	add	r0, r0, r6
   1882c:	str	r0, [r4, #20]
   18830:	mov	r0, r4
   18834:	blx	r2
   18838:	ldr	r1, [r4, #16]
   1883c:	ldr	r0, [r4, #20]
   18840:	sub	r5, r5, r6
   18844:	sub	r6, r1, r0
   18848:	cmp	r5, r6
   1884c:	bhi	18810 <flatcc_json_printer_uint32_vector_field@@Base+0x234>
   18850:	mov	r1, #32
   18854:	mov	r2, r5
   18858:	bl	12944 <memset@plt>
   1885c:	ldr	r0, [r4, #20]
   18860:	add	r1, r0, r5
   18864:	str	r1, [r4, #20]
   18868:	b	1888c <flatcc_json_printer_uint32_vector_field@@Base+0x2b0>
   1886c:	ldr	r0, [r4, #16]
   18870:	cmp	r1, r0
   18874:	bcc	1888c <flatcc_json_printer_uint32_vector_field@@Base+0x2b0>
   18878:	ldr	r2, [r4, #44]	; 0x2c
   1887c:	mov	r0, r4
   18880:	mov	r1, #0
   18884:	blx	r2
   18888:	ldr	r1, [r4, #20]
   1888c:	ldr	r0, [r7], #4
   18890:	bl	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   18894:	ldr	r1, [r4, #20]
   18898:	cmp	r9, #0
   1889c:	add	r0, r1, r0
   188a0:	str	r0, [r4, #20]
   188a4:	bne	18798 <flatcc_json_printer_uint32_vector_field@@Base+0x1bc>
   188a8:	ldrb	r1, [r4, #25]
   188ac:	ldr	r0, [r4, #20]
   188b0:	cmp	r1, #0
   188b4:	beq	18974 <flatcc_json_printer_uint32_vector_field@@Base+0x398>
   188b8:	add	r1, r0, #1
   188bc:	str	r1, [r4, #20]
   188c0:	mov	r1, #10
   188c4:	strb	r1, [r0]
   188c8:	ldr	r0, [r4, #32]
   188cc:	sub	r2, r0, #1
   188d0:	str	r2, [r4, #32]
   188d4:	ldrb	r3, [r4, #25]
   188d8:	ldr	r0, [r4, #20]
   188dc:	ldr	r1, [r4, #16]
   188e0:	mla	r7, r2, r3, r0
   188e4:	mul	r5, r2, r3
   188e8:	cmp	r7, r1
   188ec:	bls	1895c <flatcc_json_printer_uint32_vector_field@@Base+0x380>
   188f0:	cmp	r0, r1
   188f4:	bcc	18910 <flatcc_json_printer_uint32_vector_field@@Base+0x334>
   188f8:	ldr	r2, [r4, #44]	; 0x2c
   188fc:	mov	r0, r4
   18900:	mov	r1, #0
   18904:	blx	r2
   18908:	ldr	r1, [r4, #16]
   1890c:	ldr	r0, [r4, #20]
   18910:	sub	r6, r1, r0
   18914:	cmp	r6, r5
   18918:	bcs	1895c <flatcc_json_printer_uint32_vector_field@@Base+0x380>
   1891c:	mov	r1, #32
   18920:	mov	r2, r6
   18924:	bl	12944 <memset@plt>
   18928:	ldr	r0, [r4, #20]
   1892c:	ldr	r2, [r4, #44]	; 0x2c
   18930:	mov	r1, #0
   18934:	add	r0, r0, r6
   18938:	str	r0, [r4, #20]
   1893c:	mov	r0, r4
   18940:	blx	r2
   18944:	ldr	r1, [r4, #16]
   18948:	ldr	r0, [r4, #20]
   1894c:	sub	r5, r5, r6
   18950:	sub	r6, r1, r0
   18954:	cmp	r5, r6
   18958:	bhi	1891c <flatcc_json_printer_uint32_vector_field@@Base+0x340>
   1895c:	mov	r1, #32
   18960:	mov	r2, r5
   18964:	bl	12944 <memset@plt>
   18968:	ldr	r0, [r4, #20]
   1896c:	add	r0, r0, r5
   18970:	str	r0, [r4, #20]
   18974:	add	r1, r0, #1
   18978:	str	r1, [r4, #20]
   1897c:	mov	r1, #93	; 0x5d
   18980:	strb	r1, [r0]
   18984:	sub	sp, fp, #28
   18988:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001898c <flatcc_json_printer_uint64_vector_field@@Base>:
   1898c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18990:	add	fp, sp, #28
   18994:	sub	sp, sp, #4
   18998:	mov	r4, r0
   1899c:	mov	r0, #4
   189a0:	add	r0, r0, r2, lsl #1
   189a4:	ldr	r2, [r1, #8]
   189a8:	cmp	r0, r2
   189ac:	bge	18d38 <flatcc_json_printer_uint64_vector_field@@Base+0x3ac>
   189b0:	ldr	r2, [r1, #4]
   189b4:	add	r0, r2, r0
   189b8:	ldrh	r0, [r0]
   189bc:	cmp	r0, #0
   189c0:	ldrne	r2, [r1]
   189c4:	addsne	r8, r2, r0
   189c8:	beq	18d38 <flatcc_json_printer_uint64_vector_field@@Base+0x3ac>
   189cc:	ldr	r0, [r1, #16]
   189d0:	ldr	r2, [fp, #8]
   189d4:	add	r7, r0, #1
   189d8:	cmp	r0, #0
   189dc:	str	r7, [r1, #16]
   189e0:	beq	189f8 <flatcc_json_printer_uint64_vector_field@@Base+0x6c>
   189e4:	ldr	r0, [r4, #20]
   189e8:	add	r1, r0, #1
   189ec:	str	r1, [r4, #20]
   189f0:	mov	r1, #44	; 0x2c
   189f4:	strb	r1, [r0]
   189f8:	ldr	r0, [r8]
   189fc:	mov	r1, r3
   18a00:	ldr	r7, [r8, r0]!
   18a04:	mov	r0, r4
   18a08:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   18a0c:	ldr	r1, [r4, #32]
   18a10:	ldr	r0, [r4, #20]
   18a14:	cmp	r7, #0
   18a18:	add	r1, r1, #1
   18a1c:	str	r1, [r4, #32]
   18a20:	add	r1, r0, #1
   18a24:	str	r1, [r4, #20]
   18a28:	mov	r1, #91	; 0x5b
   18a2c:	strb	r1, [r0]
   18a30:	beq	18c5c <flatcc_json_printer_uint64_vector_field@@Base+0x2d0>
   18a34:	ldrb	r0, [r4, #25]
   18a38:	ldr	r2, [r4, #20]
   18a3c:	cmp	r0, #0
   18a40:	beq	18afc <flatcc_json_printer_uint64_vector_field@@Base+0x170>
   18a44:	add	r0, r2, #1
   18a48:	str	r0, [r4, #20]
   18a4c:	mov	r0, #10
   18a50:	strb	r0, [r2]
   18a54:	ldr	r0, [r4, #20]
   18a58:	ldrb	r2, [r4, #25]
   18a5c:	ldr	r3, [r4, #32]
   18a60:	ldr	r1, [r4, #16]
   18a64:	mla	r6, r3, r2, r0
   18a68:	mul	r5, r3, r2
   18a6c:	cmp	r6, r1
   18a70:	bls	18ae0 <flatcc_json_printer_uint64_vector_field@@Base+0x154>
   18a74:	cmp	r0, r1
   18a78:	bcc	18a94 <flatcc_json_printer_uint64_vector_field@@Base+0x108>
   18a7c:	ldr	r2, [r4, #44]	; 0x2c
   18a80:	mov	r0, r4
   18a84:	mov	r1, #0
   18a88:	blx	r2
   18a8c:	ldr	r1, [r4, #16]
   18a90:	ldr	r0, [r4, #20]
   18a94:	sub	r6, r1, r0
   18a98:	cmp	r6, r5
   18a9c:	bcs	18ae0 <flatcc_json_printer_uint64_vector_field@@Base+0x154>
   18aa0:	mov	r1, #32
   18aa4:	mov	r2, r6
   18aa8:	bl	12944 <memset@plt>
   18aac:	ldr	r0, [r4, #20]
   18ab0:	ldr	r2, [r4, #44]	; 0x2c
   18ab4:	mov	r1, #0
   18ab8:	add	r0, r0, r6
   18abc:	str	r0, [r4, #20]
   18ac0:	mov	r0, r4
   18ac4:	blx	r2
   18ac8:	ldr	r1, [r4, #16]
   18acc:	ldr	r0, [r4, #20]
   18ad0:	sub	r5, r5, r6
   18ad4:	sub	r6, r1, r0
   18ad8:	cmp	r5, r6
   18adc:	bhi	18aa0 <flatcc_json_printer_uint64_vector_field@@Base+0x114>
   18ae0:	mov	r1, #32
   18ae4:	mov	r2, r5
   18ae8:	bl	12944 <memset@plt>
   18aec:	ldr	r0, [r4, #20]
   18af0:	add	r2, r0, r5
   18af4:	str	r2, [r4, #20]
   18af8:	b	18b1c <flatcc_json_printer_uint64_vector_field@@Base+0x190>
   18afc:	ldr	r0, [r4, #16]
   18b00:	cmp	r2, r0
   18b04:	bcc	18b1c <flatcc_json_printer_uint64_vector_field@@Base+0x190>
   18b08:	ldr	r2, [r4, #44]	; 0x2c
   18b0c:	mov	r0, r4
   18b10:	mov	r1, #0
   18b14:	blx	r2
   18b18:	ldr	r2, [r4, #20]
   18b1c:	ldrd	r0, [r8, #4]
   18b20:	bl	15194 <flatcc_json_printer_uint64@@Base+0x30>
   18b24:	ldr	r1, [r4, #20]
   18b28:	subs	r9, r7, #1
   18b2c:	add	r0, r1, r0
   18b30:	str	r0, [r4, #20]
   18b34:	beq	18c5c <flatcc_json_printer_uint64_vector_field@@Base+0x2d0>
   18b38:	ldr	r0, [r4, #20]
   18b3c:	add	r7, r8, #12
   18b40:	mov	r8, #44	; 0x2c
   18b44:	mov	sl, #10
   18b48:	add	r1, r0, #1
   18b4c:	sub	r9, r9, #1
   18b50:	str	r1, [r4, #20]
   18b54:	strb	r8, [r0]
   18b58:	ldrb	r0, [r4, #25]
   18b5c:	ldr	r2, [r4, #20]
   18b60:	cmp	r0, #0
   18b64:	beq	18c1c <flatcc_json_printer_uint64_vector_field@@Base+0x290>
   18b68:	add	r0, r2, #1
   18b6c:	str	r0, [r4, #20]
   18b70:	strb	sl, [r2]
   18b74:	ldr	r0, [r4, #20]
   18b78:	ldrb	r2, [r4, #25]
   18b7c:	ldr	r3, [r4, #32]
   18b80:	ldr	r1, [r4, #16]
   18b84:	mla	r6, r3, r2, r0
   18b88:	mul	r5, r3, r2
   18b8c:	cmp	r6, r1
   18b90:	bls	18c00 <flatcc_json_printer_uint64_vector_field@@Base+0x274>
   18b94:	cmp	r0, r1
   18b98:	bcc	18bb4 <flatcc_json_printer_uint64_vector_field@@Base+0x228>
   18b9c:	ldr	r2, [r4, #44]	; 0x2c
   18ba0:	mov	r0, r4
   18ba4:	mov	r1, #0
   18ba8:	blx	r2
   18bac:	ldr	r1, [r4, #16]
   18bb0:	ldr	r0, [r4, #20]
   18bb4:	sub	r6, r1, r0
   18bb8:	cmp	r6, r5
   18bbc:	bcs	18c00 <flatcc_json_printer_uint64_vector_field@@Base+0x274>
   18bc0:	mov	r1, #32
   18bc4:	mov	r2, r6
   18bc8:	bl	12944 <memset@plt>
   18bcc:	ldr	r0, [r4, #20]
   18bd0:	ldr	r2, [r4, #44]	; 0x2c
   18bd4:	mov	r1, #0
   18bd8:	add	r0, r0, r6
   18bdc:	str	r0, [r4, #20]
   18be0:	mov	r0, r4
   18be4:	blx	r2
   18be8:	ldr	r1, [r4, #16]
   18bec:	ldr	r0, [r4, #20]
   18bf0:	sub	r5, r5, r6
   18bf4:	sub	r6, r1, r0
   18bf8:	cmp	r5, r6
   18bfc:	bhi	18bc0 <flatcc_json_printer_uint64_vector_field@@Base+0x234>
   18c00:	mov	r1, #32
   18c04:	mov	r2, r5
   18c08:	bl	12944 <memset@plt>
   18c0c:	ldr	r0, [r4, #20]
   18c10:	add	r2, r0, r5
   18c14:	str	r2, [r4, #20]
   18c18:	b	18c3c <flatcc_json_printer_uint64_vector_field@@Base+0x2b0>
   18c1c:	ldr	r0, [r4, #16]
   18c20:	cmp	r2, r0
   18c24:	bcc	18c3c <flatcc_json_printer_uint64_vector_field@@Base+0x2b0>
   18c28:	ldr	r2, [r4, #44]	; 0x2c
   18c2c:	mov	r0, r4
   18c30:	mov	r1, #0
   18c34:	blx	r2
   18c38:	ldr	r2, [r4, #20]
   18c3c:	ldrd	r0, [r7]
   18c40:	bl	15194 <flatcc_json_printer_uint64@@Base+0x30>
   18c44:	ldr	r1, [r4, #20]
   18c48:	add	r7, r7, #8
   18c4c:	cmp	r9, #0
   18c50:	add	r0, r1, r0
   18c54:	str	r0, [r4, #20]
   18c58:	bne	18b48 <flatcc_json_printer_uint64_vector_field@@Base+0x1bc>
   18c5c:	ldrb	r1, [r4, #25]
   18c60:	ldr	r0, [r4, #20]
   18c64:	cmp	r1, #0
   18c68:	beq	18d28 <flatcc_json_printer_uint64_vector_field@@Base+0x39c>
   18c6c:	add	r1, r0, #1
   18c70:	str	r1, [r4, #20]
   18c74:	mov	r1, #10
   18c78:	strb	r1, [r0]
   18c7c:	ldr	r0, [r4, #32]
   18c80:	sub	r2, r0, #1
   18c84:	str	r2, [r4, #32]
   18c88:	ldrb	r3, [r4, #25]
   18c8c:	ldr	r0, [r4, #20]
   18c90:	ldr	r1, [r4, #16]
   18c94:	mla	r7, r2, r3, r0
   18c98:	mul	r5, r2, r3
   18c9c:	cmp	r7, r1
   18ca0:	bls	18d10 <flatcc_json_printer_uint64_vector_field@@Base+0x384>
   18ca4:	cmp	r0, r1
   18ca8:	bcc	18cc4 <flatcc_json_printer_uint64_vector_field@@Base+0x338>
   18cac:	ldr	r2, [r4, #44]	; 0x2c
   18cb0:	mov	r0, r4
   18cb4:	mov	r1, #0
   18cb8:	blx	r2
   18cbc:	ldr	r1, [r4, #16]
   18cc0:	ldr	r0, [r4, #20]
   18cc4:	sub	r6, r1, r0
   18cc8:	cmp	r6, r5
   18ccc:	bcs	18d10 <flatcc_json_printer_uint64_vector_field@@Base+0x384>
   18cd0:	mov	r1, #32
   18cd4:	mov	r2, r6
   18cd8:	bl	12944 <memset@plt>
   18cdc:	ldr	r0, [r4, #20]
   18ce0:	ldr	r2, [r4, #44]	; 0x2c
   18ce4:	mov	r1, #0
   18ce8:	add	r0, r0, r6
   18cec:	str	r0, [r4, #20]
   18cf0:	mov	r0, r4
   18cf4:	blx	r2
   18cf8:	ldr	r1, [r4, #16]
   18cfc:	ldr	r0, [r4, #20]
   18d00:	sub	r5, r5, r6
   18d04:	sub	r6, r1, r0
   18d08:	cmp	r5, r6
   18d0c:	bhi	18cd0 <flatcc_json_printer_uint64_vector_field@@Base+0x344>
   18d10:	mov	r1, #32
   18d14:	mov	r2, r5
   18d18:	bl	12944 <memset@plt>
   18d1c:	ldr	r0, [r4, #20]
   18d20:	add	r0, r0, r5
   18d24:	str	r0, [r4, #20]
   18d28:	add	r1, r0, #1
   18d2c:	str	r1, [r4, #20]
   18d30:	mov	r1, #93	; 0x5d
   18d34:	strb	r1, [r0]
   18d38:	sub	sp, fp, #28
   18d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018d40 <flatcc_json_printer_int8_vector_field@@Base>:
   18d40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d44:	add	fp, sp, #28
   18d48:	sub	sp, sp, #4
   18d4c:	mov	r4, r0
   18d50:	mov	r0, #4
   18d54:	add	r0, r0, r2, lsl #1
   18d58:	ldr	r2, [r1, #8]
   18d5c:	cmp	r0, r2
   18d60:	bge	1912c <flatcc_json_printer_int8_vector_field@@Base+0x3ec>
   18d64:	ldr	r2, [r1, #4]
   18d68:	add	r0, r2, r0
   18d6c:	ldrh	r0, [r0]
   18d70:	cmp	r0, #0
   18d74:	ldrne	r2, [r1]
   18d78:	addsne	r8, r2, r0
   18d7c:	beq	1912c <flatcc_json_printer_int8_vector_field@@Base+0x3ec>
   18d80:	ldr	r0, [r1, #16]
   18d84:	ldr	r2, [fp, #8]
   18d88:	add	r7, r0, #1
   18d8c:	cmp	r0, #0
   18d90:	str	r7, [r1, #16]
   18d94:	beq	18dac <flatcc_json_printer_int8_vector_field@@Base+0x6c>
   18d98:	ldr	r0, [r4, #20]
   18d9c:	add	r1, r0, #1
   18da0:	str	r1, [r4, #20]
   18da4:	mov	r1, #44	; 0x2c
   18da8:	strb	r1, [r0]
   18dac:	ldr	r0, [r8]
   18db0:	mov	r1, r3
   18db4:	ldr	r7, [r8, r0]!
   18db8:	mov	r0, r4
   18dbc:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   18dc0:	ldr	r1, [r4, #32]
   18dc4:	ldr	r0, [r4, #20]
   18dc8:	cmp	r7, #0
   18dcc:	add	r1, r1, #1
   18dd0:	str	r1, [r4, #32]
   18dd4:	add	r1, r0, #1
   18dd8:	str	r1, [r4, #20]
   18ddc:	mov	r1, #91	; 0x5b
   18de0:	strb	r1, [r0]
   18de4:	beq	19050 <flatcc_json_printer_int8_vector_field@@Base+0x310>
   18de8:	ldrb	r0, [r4, #25]
   18dec:	ldr	r1, [r4, #20]
   18df0:	cmp	r0, #0
   18df4:	beq	18eb0 <flatcc_json_printer_int8_vector_field@@Base+0x170>
   18df8:	add	r0, r1, #1
   18dfc:	str	r0, [r4, #20]
   18e00:	mov	r0, #10
   18e04:	strb	r0, [r1]
   18e08:	ldr	r0, [r4, #20]
   18e0c:	ldrb	r2, [r4, #25]
   18e10:	ldr	r3, [r4, #32]
   18e14:	ldr	r1, [r4, #16]
   18e18:	mla	r6, r3, r2, r0
   18e1c:	mul	r5, r3, r2
   18e20:	cmp	r6, r1
   18e24:	bls	18e94 <flatcc_json_printer_int8_vector_field@@Base+0x154>
   18e28:	cmp	r0, r1
   18e2c:	bcc	18e48 <flatcc_json_printer_int8_vector_field@@Base+0x108>
   18e30:	ldr	r2, [r4, #44]	; 0x2c
   18e34:	mov	r0, r4
   18e38:	mov	r1, #0
   18e3c:	blx	r2
   18e40:	ldr	r1, [r4, #16]
   18e44:	ldr	r0, [r4, #20]
   18e48:	sub	r6, r1, r0
   18e4c:	cmp	r6, r5
   18e50:	bcs	18e94 <flatcc_json_printer_int8_vector_field@@Base+0x154>
   18e54:	mov	r1, #32
   18e58:	mov	r2, r6
   18e5c:	bl	12944 <memset@plt>
   18e60:	ldr	r0, [r4, #20]
   18e64:	ldr	r2, [r4, #44]	; 0x2c
   18e68:	mov	r1, #0
   18e6c:	add	r0, r0, r6
   18e70:	str	r0, [r4, #20]
   18e74:	mov	r0, r4
   18e78:	blx	r2
   18e7c:	ldr	r1, [r4, #16]
   18e80:	ldr	r0, [r4, #20]
   18e84:	sub	r5, r5, r6
   18e88:	sub	r6, r1, r0
   18e8c:	cmp	r5, r6
   18e90:	bhi	18e54 <flatcc_json_printer_int8_vector_field@@Base+0x114>
   18e94:	mov	r1, #32
   18e98:	mov	r2, r5
   18e9c:	bl	12944 <memset@plt>
   18ea0:	ldr	r0, [r4, #20]
   18ea4:	add	r1, r0, r5
   18ea8:	str	r1, [r4, #20]
   18eac:	b	18ed0 <flatcc_json_printer_int8_vector_field@@Base+0x190>
   18eb0:	ldr	r0, [r4, #16]
   18eb4:	cmp	r1, r0
   18eb8:	bcc	18ed0 <flatcc_json_printer_int8_vector_field@@Base+0x190>
   18ebc:	ldr	r2, [r4, #44]	; 0x2c
   18ec0:	mov	r0, r4
   18ec4:	mov	r1, #0
   18ec8:	blx	r2
   18ecc:	ldr	r1, [r4, #20]
   18ed0:	ldrb	r0, [r8, #4]
   18ed4:	lsr	r5, r0, #7
   18ed8:	sxtb	r0, r0
   18edc:	cmn	r0, #1
   18ee0:	rsble	r0, r0, #0
   18ee4:	movle	r2, #45	; 0x2d
   18ee8:	uxtb	r0, r0
   18eec:	strble	r2, [r1], #1
   18ef0:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   18ef4:	ldr	r1, [r4, #20]
   18ef8:	add	r0, r0, r5
   18efc:	subs	r9, r7, #1
   18f00:	add	r0, r1, r0
   18f04:	str	r0, [r4, #20]
   18f08:	beq	19050 <flatcc_json_printer_int8_vector_field@@Base+0x310>
   18f0c:	ldr	r0, [r4, #20]
   18f10:	add	r7, r8, #5
   18f14:	mov	r8, #44	; 0x2c
   18f18:	mov	sl, #10
   18f1c:	add	r1, r0, #1
   18f20:	str	r1, [r4, #20]
   18f24:	strb	r8, [r0]
   18f28:	ldrb	r0, [r4, #25]
   18f2c:	ldr	r1, [r4, #20]
   18f30:	cmp	r0, #0
   18f34:	beq	18fec <flatcc_json_printer_int8_vector_field@@Base+0x2ac>
   18f38:	add	r0, r1, #1
   18f3c:	str	r0, [r4, #20]
   18f40:	strb	sl, [r1]
   18f44:	ldr	r0, [r4, #20]
   18f48:	ldrb	r2, [r4, #25]
   18f4c:	ldr	r3, [r4, #32]
   18f50:	ldr	r1, [r4, #16]
   18f54:	mla	r6, r3, r2, r0
   18f58:	mul	r5, r3, r2
   18f5c:	cmp	r6, r1
   18f60:	bls	18fd0 <flatcc_json_printer_int8_vector_field@@Base+0x290>
   18f64:	cmp	r0, r1
   18f68:	bcc	18f84 <flatcc_json_printer_int8_vector_field@@Base+0x244>
   18f6c:	ldr	r2, [r4, #44]	; 0x2c
   18f70:	mov	r0, r4
   18f74:	mov	r1, #0
   18f78:	blx	r2
   18f7c:	ldr	r1, [r4, #16]
   18f80:	ldr	r0, [r4, #20]
   18f84:	sub	r6, r1, r0
   18f88:	cmp	r6, r5
   18f8c:	bcs	18fd0 <flatcc_json_printer_int8_vector_field@@Base+0x290>
   18f90:	mov	r1, #32
   18f94:	mov	r2, r6
   18f98:	bl	12944 <memset@plt>
   18f9c:	ldr	r0, [r4, #20]
   18fa0:	ldr	r2, [r4, #44]	; 0x2c
   18fa4:	mov	r1, #0
   18fa8:	add	r0, r0, r6
   18fac:	str	r0, [r4, #20]
   18fb0:	mov	r0, r4
   18fb4:	blx	r2
   18fb8:	ldr	r1, [r4, #16]
   18fbc:	ldr	r0, [r4, #20]
   18fc0:	sub	r5, r5, r6
   18fc4:	sub	r6, r1, r0
   18fc8:	cmp	r5, r6
   18fcc:	bhi	18f90 <flatcc_json_printer_int8_vector_field@@Base+0x250>
   18fd0:	mov	r1, #32
   18fd4:	mov	r2, r5
   18fd8:	bl	12944 <memset@plt>
   18fdc:	ldr	r0, [r4, #20]
   18fe0:	add	r1, r0, r5
   18fe4:	str	r1, [r4, #20]
   18fe8:	b	1900c <flatcc_json_printer_int8_vector_field@@Base+0x2cc>
   18fec:	ldr	r0, [r4, #16]
   18ff0:	cmp	r1, r0
   18ff4:	bcc	1900c <flatcc_json_printer_int8_vector_field@@Base+0x2cc>
   18ff8:	ldr	r2, [r4, #44]	; 0x2c
   18ffc:	mov	r0, r4
   19000:	mov	r1, #0
   19004:	blx	r2
   19008:	ldr	r1, [r4, #20]
   1900c:	ldrb	r0, [r7]
   19010:	sub	r9, r9, #1
   19014:	lsr	r5, r0, #7
   19018:	sxtb	r0, r0
   1901c:	cmn	r0, #1
   19020:	rsble	r0, r0, #0
   19024:	movle	r2, #45	; 0x2d
   19028:	uxtb	r0, r0
   1902c:	strble	r2, [r1], #1
   19030:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   19034:	ldr	r1, [r4, #20]
   19038:	add	r0, r0, r5
   1903c:	add	r7, r7, #1
   19040:	cmp	r9, #0
   19044:	add	r0, r1, r0
   19048:	str	r0, [r4, #20]
   1904c:	bne	18f1c <flatcc_json_printer_int8_vector_field@@Base+0x1dc>
   19050:	ldrb	r1, [r4, #25]
   19054:	ldr	r0, [r4, #20]
   19058:	cmp	r1, #0
   1905c:	beq	1911c <flatcc_json_printer_int8_vector_field@@Base+0x3dc>
   19060:	add	r1, r0, #1
   19064:	str	r1, [r4, #20]
   19068:	mov	r1, #10
   1906c:	strb	r1, [r0]
   19070:	ldr	r0, [r4, #32]
   19074:	sub	r2, r0, #1
   19078:	str	r2, [r4, #32]
   1907c:	ldrb	r3, [r4, #25]
   19080:	ldr	r0, [r4, #20]
   19084:	ldr	r1, [r4, #16]
   19088:	mla	r7, r2, r3, r0
   1908c:	mul	r5, r2, r3
   19090:	cmp	r7, r1
   19094:	bls	19104 <flatcc_json_printer_int8_vector_field@@Base+0x3c4>
   19098:	cmp	r0, r1
   1909c:	bcc	190b8 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   190a0:	ldr	r2, [r4, #44]	; 0x2c
   190a4:	mov	r0, r4
   190a8:	mov	r1, #0
   190ac:	blx	r2
   190b0:	ldr	r1, [r4, #16]
   190b4:	ldr	r0, [r4, #20]
   190b8:	sub	r6, r1, r0
   190bc:	cmp	r6, r5
   190c0:	bcs	19104 <flatcc_json_printer_int8_vector_field@@Base+0x3c4>
   190c4:	mov	r1, #32
   190c8:	mov	r2, r6
   190cc:	bl	12944 <memset@plt>
   190d0:	ldr	r0, [r4, #20]
   190d4:	ldr	r2, [r4, #44]	; 0x2c
   190d8:	mov	r1, #0
   190dc:	add	r0, r0, r6
   190e0:	str	r0, [r4, #20]
   190e4:	mov	r0, r4
   190e8:	blx	r2
   190ec:	ldr	r1, [r4, #16]
   190f0:	ldr	r0, [r4, #20]
   190f4:	sub	r5, r5, r6
   190f8:	sub	r6, r1, r0
   190fc:	cmp	r5, r6
   19100:	bhi	190c4 <flatcc_json_printer_int8_vector_field@@Base+0x384>
   19104:	mov	r1, #32
   19108:	mov	r2, r5
   1910c:	bl	12944 <memset@plt>
   19110:	ldr	r0, [r4, #20]
   19114:	add	r0, r0, r5
   19118:	str	r0, [r4, #20]
   1911c:	add	r1, r0, #1
   19120:	str	r1, [r4, #20]
   19124:	mov	r1, #93	; 0x5d
   19128:	strb	r1, [r0]
   1912c:	sub	sp, fp, #28
   19130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019134 <flatcc_json_printer_int16_vector_field@@Base>:
   19134:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19138:	add	fp, sp, #28
   1913c:	sub	sp, sp, #4
   19140:	mov	r4, r0
   19144:	mov	r0, #4
   19148:	add	r0, r0, r2, lsl #1
   1914c:	ldr	r2, [r1, #8]
   19150:	cmp	r0, r2
   19154:	bge	19520 <flatcc_json_printer_int16_vector_field@@Base+0x3ec>
   19158:	ldr	r2, [r1, #4]
   1915c:	add	r0, r2, r0
   19160:	ldrh	r0, [r0]
   19164:	cmp	r0, #0
   19168:	ldrne	r2, [r1]
   1916c:	addsne	r8, r2, r0
   19170:	beq	19520 <flatcc_json_printer_int16_vector_field@@Base+0x3ec>
   19174:	ldr	r0, [r1, #16]
   19178:	ldr	r2, [fp, #8]
   1917c:	add	r7, r0, #1
   19180:	cmp	r0, #0
   19184:	str	r7, [r1, #16]
   19188:	beq	191a0 <flatcc_json_printer_int16_vector_field@@Base+0x6c>
   1918c:	ldr	r0, [r4, #20]
   19190:	add	r1, r0, #1
   19194:	str	r1, [r4, #20]
   19198:	mov	r1, #44	; 0x2c
   1919c:	strb	r1, [r0]
   191a0:	ldr	r0, [r8]
   191a4:	mov	r1, r3
   191a8:	ldr	r7, [r8, r0]!
   191ac:	mov	r0, r4
   191b0:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   191b4:	ldr	r1, [r4, #32]
   191b8:	ldr	r0, [r4, #20]
   191bc:	cmp	r7, #0
   191c0:	add	r1, r1, #1
   191c4:	str	r1, [r4, #32]
   191c8:	add	r1, r0, #1
   191cc:	str	r1, [r4, #20]
   191d0:	mov	r1, #91	; 0x5b
   191d4:	strb	r1, [r0]
   191d8:	beq	19444 <flatcc_json_printer_int16_vector_field@@Base+0x310>
   191dc:	ldrb	r0, [r4, #25]
   191e0:	ldr	r1, [r4, #20]
   191e4:	cmp	r0, #0
   191e8:	beq	192a4 <flatcc_json_printer_int16_vector_field@@Base+0x170>
   191ec:	add	r0, r1, #1
   191f0:	str	r0, [r4, #20]
   191f4:	mov	r0, #10
   191f8:	strb	r0, [r1]
   191fc:	ldr	r0, [r4, #20]
   19200:	ldrb	r2, [r4, #25]
   19204:	ldr	r3, [r4, #32]
   19208:	ldr	r1, [r4, #16]
   1920c:	mla	r6, r3, r2, r0
   19210:	mul	r5, r3, r2
   19214:	cmp	r6, r1
   19218:	bls	19288 <flatcc_json_printer_int16_vector_field@@Base+0x154>
   1921c:	cmp	r0, r1
   19220:	bcc	1923c <flatcc_json_printer_int16_vector_field@@Base+0x108>
   19224:	ldr	r2, [r4, #44]	; 0x2c
   19228:	mov	r0, r4
   1922c:	mov	r1, #0
   19230:	blx	r2
   19234:	ldr	r1, [r4, #16]
   19238:	ldr	r0, [r4, #20]
   1923c:	sub	r6, r1, r0
   19240:	cmp	r6, r5
   19244:	bcs	19288 <flatcc_json_printer_int16_vector_field@@Base+0x154>
   19248:	mov	r1, #32
   1924c:	mov	r2, r6
   19250:	bl	12944 <memset@plt>
   19254:	ldr	r0, [r4, #20]
   19258:	ldr	r2, [r4, #44]	; 0x2c
   1925c:	mov	r1, #0
   19260:	add	r0, r0, r6
   19264:	str	r0, [r4, #20]
   19268:	mov	r0, r4
   1926c:	blx	r2
   19270:	ldr	r1, [r4, #16]
   19274:	ldr	r0, [r4, #20]
   19278:	sub	r5, r5, r6
   1927c:	sub	r6, r1, r0
   19280:	cmp	r5, r6
   19284:	bhi	19248 <flatcc_json_printer_int16_vector_field@@Base+0x114>
   19288:	mov	r1, #32
   1928c:	mov	r2, r5
   19290:	bl	12944 <memset@plt>
   19294:	ldr	r0, [r4, #20]
   19298:	add	r1, r0, r5
   1929c:	str	r1, [r4, #20]
   192a0:	b	192c4 <flatcc_json_printer_int16_vector_field@@Base+0x190>
   192a4:	ldr	r0, [r4, #16]
   192a8:	cmp	r1, r0
   192ac:	bcc	192c4 <flatcc_json_printer_int16_vector_field@@Base+0x190>
   192b0:	ldr	r2, [r4, #44]	; 0x2c
   192b4:	mov	r0, r4
   192b8:	mov	r1, #0
   192bc:	blx	r2
   192c0:	ldr	r1, [r4, #20]
   192c4:	ldrh	r0, [r8, #4]
   192c8:	lsr	r5, r0, #15
   192cc:	sxth	r0, r0
   192d0:	cmn	r0, #1
   192d4:	rsble	r0, r0, #0
   192d8:	movle	r2, #45	; 0x2d
   192dc:	uxth	r0, r0
   192e0:	strble	r2, [r1], #1
   192e4:	bl	14cd0 <flatcc_json_printer_uint16@@Base+0x2c>
   192e8:	ldr	r1, [r4, #20]
   192ec:	add	r0, r0, r5
   192f0:	subs	r9, r7, #1
   192f4:	add	r0, r1, r0
   192f8:	str	r0, [r4, #20]
   192fc:	beq	19444 <flatcc_json_printer_int16_vector_field@@Base+0x310>
   19300:	ldr	r0, [r4, #20]
   19304:	add	r7, r8, #6
   19308:	mov	r8, #44	; 0x2c
   1930c:	mov	sl, #10
   19310:	add	r1, r0, #1
   19314:	str	r1, [r4, #20]
   19318:	strb	r8, [r0]
   1931c:	ldrb	r0, [r4, #25]
   19320:	ldr	r1, [r4, #20]
   19324:	cmp	r0, #0
   19328:	beq	193e0 <flatcc_json_printer_int16_vector_field@@Base+0x2ac>
   1932c:	add	r0, r1, #1
   19330:	str	r0, [r4, #20]
   19334:	strb	sl, [r1]
   19338:	ldr	r0, [r4, #20]
   1933c:	ldrb	r2, [r4, #25]
   19340:	ldr	r3, [r4, #32]
   19344:	ldr	r1, [r4, #16]
   19348:	mla	r6, r3, r2, r0
   1934c:	mul	r5, r3, r2
   19350:	cmp	r6, r1
   19354:	bls	193c4 <flatcc_json_printer_int16_vector_field@@Base+0x290>
   19358:	cmp	r0, r1
   1935c:	bcc	19378 <flatcc_json_printer_int16_vector_field@@Base+0x244>
   19360:	ldr	r2, [r4, #44]	; 0x2c
   19364:	mov	r0, r4
   19368:	mov	r1, #0
   1936c:	blx	r2
   19370:	ldr	r1, [r4, #16]
   19374:	ldr	r0, [r4, #20]
   19378:	sub	r6, r1, r0
   1937c:	cmp	r6, r5
   19380:	bcs	193c4 <flatcc_json_printer_int16_vector_field@@Base+0x290>
   19384:	mov	r1, #32
   19388:	mov	r2, r6
   1938c:	bl	12944 <memset@plt>
   19390:	ldr	r0, [r4, #20]
   19394:	ldr	r2, [r4, #44]	; 0x2c
   19398:	mov	r1, #0
   1939c:	add	r0, r0, r6
   193a0:	str	r0, [r4, #20]
   193a4:	mov	r0, r4
   193a8:	blx	r2
   193ac:	ldr	r1, [r4, #16]
   193b0:	ldr	r0, [r4, #20]
   193b4:	sub	r5, r5, r6
   193b8:	sub	r6, r1, r0
   193bc:	cmp	r5, r6
   193c0:	bhi	19384 <flatcc_json_printer_int16_vector_field@@Base+0x250>
   193c4:	mov	r1, #32
   193c8:	mov	r2, r5
   193cc:	bl	12944 <memset@plt>
   193d0:	ldr	r0, [r4, #20]
   193d4:	add	r1, r0, r5
   193d8:	str	r1, [r4, #20]
   193dc:	b	19400 <flatcc_json_printer_int16_vector_field@@Base+0x2cc>
   193e0:	ldr	r0, [r4, #16]
   193e4:	cmp	r1, r0
   193e8:	bcc	19400 <flatcc_json_printer_int16_vector_field@@Base+0x2cc>
   193ec:	ldr	r2, [r4, #44]	; 0x2c
   193f0:	mov	r0, r4
   193f4:	mov	r1, #0
   193f8:	blx	r2
   193fc:	ldr	r1, [r4, #20]
   19400:	ldrh	r0, [r7]
   19404:	sub	r9, r9, #1
   19408:	lsr	r5, r0, #15
   1940c:	sxth	r0, r0
   19410:	cmn	r0, #1
   19414:	rsble	r0, r0, #0
   19418:	movle	r2, #45	; 0x2d
   1941c:	uxth	r0, r0
   19420:	strble	r2, [r1], #1
   19424:	bl	14cd0 <flatcc_json_printer_uint16@@Base+0x2c>
   19428:	ldr	r1, [r4, #20]
   1942c:	add	r0, r0, r5
   19430:	add	r7, r7, #2
   19434:	cmp	r9, #0
   19438:	add	r0, r1, r0
   1943c:	str	r0, [r4, #20]
   19440:	bne	19310 <flatcc_json_printer_int16_vector_field@@Base+0x1dc>
   19444:	ldrb	r1, [r4, #25]
   19448:	ldr	r0, [r4, #20]
   1944c:	cmp	r1, #0
   19450:	beq	19510 <flatcc_json_printer_int16_vector_field@@Base+0x3dc>
   19454:	add	r1, r0, #1
   19458:	str	r1, [r4, #20]
   1945c:	mov	r1, #10
   19460:	strb	r1, [r0]
   19464:	ldr	r0, [r4, #32]
   19468:	sub	r2, r0, #1
   1946c:	str	r2, [r4, #32]
   19470:	ldrb	r3, [r4, #25]
   19474:	ldr	r0, [r4, #20]
   19478:	ldr	r1, [r4, #16]
   1947c:	mla	r7, r2, r3, r0
   19480:	mul	r5, r2, r3
   19484:	cmp	r7, r1
   19488:	bls	194f8 <flatcc_json_printer_int16_vector_field@@Base+0x3c4>
   1948c:	cmp	r0, r1
   19490:	bcc	194ac <flatcc_json_printer_int16_vector_field@@Base+0x378>
   19494:	ldr	r2, [r4, #44]	; 0x2c
   19498:	mov	r0, r4
   1949c:	mov	r1, #0
   194a0:	blx	r2
   194a4:	ldr	r1, [r4, #16]
   194a8:	ldr	r0, [r4, #20]
   194ac:	sub	r6, r1, r0
   194b0:	cmp	r6, r5
   194b4:	bcs	194f8 <flatcc_json_printer_int16_vector_field@@Base+0x3c4>
   194b8:	mov	r1, #32
   194bc:	mov	r2, r6
   194c0:	bl	12944 <memset@plt>
   194c4:	ldr	r0, [r4, #20]
   194c8:	ldr	r2, [r4, #44]	; 0x2c
   194cc:	mov	r1, #0
   194d0:	add	r0, r0, r6
   194d4:	str	r0, [r4, #20]
   194d8:	mov	r0, r4
   194dc:	blx	r2
   194e0:	ldr	r1, [r4, #16]
   194e4:	ldr	r0, [r4, #20]
   194e8:	sub	r5, r5, r6
   194ec:	sub	r6, r1, r0
   194f0:	cmp	r5, r6
   194f4:	bhi	194b8 <flatcc_json_printer_int16_vector_field@@Base+0x384>
   194f8:	mov	r1, #32
   194fc:	mov	r2, r5
   19500:	bl	12944 <memset@plt>
   19504:	ldr	r0, [r4, #20]
   19508:	add	r0, r0, r5
   1950c:	str	r0, [r4, #20]
   19510:	add	r1, r0, #1
   19514:	str	r1, [r4, #20]
   19518:	mov	r1, #93	; 0x5d
   1951c:	strb	r1, [r0]
   19520:	sub	sp, fp, #28
   19524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019528 <flatcc_json_printer_int32_vector_field@@Base>:
   19528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1952c:	add	fp, sp, #28
   19530:	sub	sp, sp, #4
   19534:	mov	r4, r0
   19538:	mov	r0, #4
   1953c:	add	r0, r0, r2, lsl #1
   19540:	ldr	r2, [r1, #8]
   19544:	cmp	r0, r2
   19548:	bge	19904 <flatcc_json_printer_int32_vector_field@@Base+0x3dc>
   1954c:	ldr	r2, [r1, #4]
   19550:	add	r0, r2, r0
   19554:	ldrh	r0, [r0]
   19558:	cmp	r0, #0
   1955c:	ldrne	r2, [r1]
   19560:	addsne	r8, r2, r0
   19564:	beq	19904 <flatcc_json_printer_int32_vector_field@@Base+0x3dc>
   19568:	ldr	r0, [r1, #16]
   1956c:	ldr	r2, [fp, #8]
   19570:	add	r7, r0, #1
   19574:	cmp	r0, #0
   19578:	str	r7, [r1, #16]
   1957c:	beq	19594 <flatcc_json_printer_int32_vector_field@@Base+0x6c>
   19580:	ldr	r0, [r4, #20]
   19584:	add	r1, r0, #1
   19588:	str	r1, [r4, #20]
   1958c:	mov	r1, #44	; 0x2c
   19590:	strb	r1, [r0]
   19594:	ldr	r0, [r8]
   19598:	mov	r1, r3
   1959c:	ldr	r7, [r8, r0]!
   195a0:	mov	r0, r4
   195a4:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   195a8:	ldr	r1, [r4, #32]
   195ac:	ldr	r0, [r4, #20]
   195b0:	cmp	r7, #0
   195b4:	add	r1, r1, #1
   195b8:	str	r1, [r4, #32]
   195bc:	add	r1, r0, #1
   195c0:	str	r1, [r4, #20]
   195c4:	mov	r1, #91	; 0x5b
   195c8:	strb	r1, [r0]
   195cc:	beq	19828 <flatcc_json_printer_int32_vector_field@@Base+0x300>
   195d0:	ldrb	r0, [r4, #25]
   195d4:	ldr	r1, [r4, #20]
   195d8:	cmp	r0, #0
   195dc:	beq	19698 <flatcc_json_printer_int32_vector_field@@Base+0x170>
   195e0:	add	r0, r1, #1
   195e4:	str	r0, [r4, #20]
   195e8:	mov	r0, #10
   195ec:	strb	r0, [r1]
   195f0:	ldr	r0, [r4, #20]
   195f4:	ldrb	r2, [r4, #25]
   195f8:	ldr	r3, [r4, #32]
   195fc:	ldr	r1, [r4, #16]
   19600:	mla	r6, r3, r2, r0
   19604:	mul	r5, r3, r2
   19608:	cmp	r6, r1
   1960c:	bls	1967c <flatcc_json_printer_int32_vector_field@@Base+0x154>
   19610:	cmp	r0, r1
   19614:	bcc	19630 <flatcc_json_printer_int32_vector_field@@Base+0x108>
   19618:	ldr	r2, [r4, #44]	; 0x2c
   1961c:	mov	r0, r4
   19620:	mov	r1, #0
   19624:	blx	r2
   19628:	ldr	r1, [r4, #16]
   1962c:	ldr	r0, [r4, #20]
   19630:	sub	r6, r1, r0
   19634:	cmp	r6, r5
   19638:	bcs	1967c <flatcc_json_printer_int32_vector_field@@Base+0x154>
   1963c:	mov	r1, #32
   19640:	mov	r2, r6
   19644:	bl	12944 <memset@plt>
   19648:	ldr	r0, [r4, #20]
   1964c:	ldr	r2, [r4, #44]	; 0x2c
   19650:	mov	r1, #0
   19654:	add	r0, r0, r6
   19658:	str	r0, [r4, #20]
   1965c:	mov	r0, r4
   19660:	blx	r2
   19664:	ldr	r1, [r4, #16]
   19668:	ldr	r0, [r4, #20]
   1966c:	sub	r5, r5, r6
   19670:	sub	r6, r1, r0
   19674:	cmp	r5, r6
   19678:	bhi	1963c <flatcc_json_printer_int32_vector_field@@Base+0x114>
   1967c:	mov	r1, #32
   19680:	mov	r2, r5
   19684:	bl	12944 <memset@plt>
   19688:	ldr	r0, [r4, #20]
   1968c:	add	r1, r0, r5
   19690:	str	r1, [r4, #20]
   19694:	b	196b8 <flatcc_json_printer_int32_vector_field@@Base+0x190>
   19698:	ldr	r0, [r4, #16]
   1969c:	cmp	r1, r0
   196a0:	bcc	196b8 <flatcc_json_printer_int32_vector_field@@Base+0x190>
   196a4:	ldr	r2, [r4, #44]	; 0x2c
   196a8:	mov	r0, r4
   196ac:	mov	r1, #0
   196b0:	blx	r2
   196b4:	ldr	r1, [r4, #20]
   196b8:	ldr	r0, [r8, #4]
   196bc:	cmn	r0, #1
   196c0:	lsr	r5, r0, #31
   196c4:	movle	r2, #45	; 0x2d
   196c8:	rsble	r0, r0, #0
   196cc:	strble	r2, [r1], #1
   196d0:	bl	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   196d4:	ldr	r1, [r4, #20]
   196d8:	add	r0, r0, r5
   196dc:	subs	r9, r7, #1
   196e0:	add	r0, r1, r0
   196e4:	str	r0, [r4, #20]
   196e8:	beq	19828 <flatcc_json_printer_int32_vector_field@@Base+0x300>
   196ec:	ldr	r0, [r4, #20]
   196f0:	add	r7, r8, #8
   196f4:	mov	r8, #44	; 0x2c
   196f8:	mov	sl, #10
   196fc:	add	r1, r0, #1
   19700:	str	r1, [r4, #20]
   19704:	strb	r8, [r0]
   19708:	ldrb	r0, [r4, #25]
   1970c:	ldr	r1, [r4, #20]
   19710:	cmp	r0, #0
   19714:	beq	197cc <flatcc_json_printer_int32_vector_field@@Base+0x2a4>
   19718:	add	r0, r1, #1
   1971c:	str	r0, [r4, #20]
   19720:	strb	sl, [r1]
   19724:	ldr	r0, [r4, #20]
   19728:	ldrb	r2, [r4, #25]
   1972c:	ldr	r3, [r4, #32]
   19730:	ldr	r1, [r4, #16]
   19734:	mla	r6, r3, r2, r0
   19738:	mul	r5, r3, r2
   1973c:	cmp	r6, r1
   19740:	bls	197b0 <flatcc_json_printer_int32_vector_field@@Base+0x288>
   19744:	cmp	r0, r1
   19748:	bcc	19764 <flatcc_json_printer_int32_vector_field@@Base+0x23c>
   1974c:	ldr	r2, [r4, #44]	; 0x2c
   19750:	mov	r0, r4
   19754:	mov	r1, #0
   19758:	blx	r2
   1975c:	ldr	r1, [r4, #16]
   19760:	ldr	r0, [r4, #20]
   19764:	sub	r6, r1, r0
   19768:	cmp	r6, r5
   1976c:	bcs	197b0 <flatcc_json_printer_int32_vector_field@@Base+0x288>
   19770:	mov	r1, #32
   19774:	mov	r2, r6
   19778:	bl	12944 <memset@plt>
   1977c:	ldr	r0, [r4, #20]
   19780:	ldr	r2, [r4, #44]	; 0x2c
   19784:	mov	r1, #0
   19788:	add	r0, r0, r6
   1978c:	str	r0, [r4, #20]
   19790:	mov	r0, r4
   19794:	blx	r2
   19798:	ldr	r1, [r4, #16]
   1979c:	ldr	r0, [r4, #20]
   197a0:	sub	r5, r5, r6
   197a4:	sub	r6, r1, r0
   197a8:	cmp	r5, r6
   197ac:	bhi	19770 <flatcc_json_printer_int32_vector_field@@Base+0x248>
   197b0:	mov	r1, #32
   197b4:	mov	r2, r5
   197b8:	bl	12944 <memset@plt>
   197bc:	ldr	r0, [r4, #20]
   197c0:	add	r1, r0, r5
   197c4:	str	r1, [r4, #20]
   197c8:	b	197ec <flatcc_json_printer_int32_vector_field@@Base+0x2c4>
   197cc:	ldr	r0, [r4, #16]
   197d0:	cmp	r1, r0
   197d4:	bcc	197ec <flatcc_json_printer_int32_vector_field@@Base+0x2c4>
   197d8:	ldr	r2, [r4, #44]	; 0x2c
   197dc:	mov	r0, r4
   197e0:	mov	r1, #0
   197e4:	blx	r2
   197e8:	ldr	r1, [r4, #20]
   197ec:	ldr	r0, [r7]
   197f0:	sub	r9, r9, #1
   197f4:	cmn	r0, #1
   197f8:	lsr	r5, r0, #31
   197fc:	movle	r2, #45	; 0x2d
   19800:	rsble	r0, r0, #0
   19804:	strble	r2, [r1], #1
   19808:	bl	14e6c <flatcc_json_printer_uint32@@Base+0x2c>
   1980c:	ldr	r1, [r4, #20]
   19810:	add	r0, r0, r5
   19814:	add	r7, r7, #4
   19818:	cmp	r9, #0
   1981c:	add	r0, r1, r0
   19820:	str	r0, [r4, #20]
   19824:	bne	196fc <flatcc_json_printer_int32_vector_field@@Base+0x1d4>
   19828:	ldrb	r1, [r4, #25]
   1982c:	ldr	r0, [r4, #20]
   19830:	cmp	r1, #0
   19834:	beq	198f4 <flatcc_json_printer_int32_vector_field@@Base+0x3cc>
   19838:	add	r1, r0, #1
   1983c:	str	r1, [r4, #20]
   19840:	mov	r1, #10
   19844:	strb	r1, [r0]
   19848:	ldr	r0, [r4, #32]
   1984c:	sub	r2, r0, #1
   19850:	str	r2, [r4, #32]
   19854:	ldrb	r3, [r4, #25]
   19858:	ldr	r0, [r4, #20]
   1985c:	ldr	r1, [r4, #16]
   19860:	mla	r7, r2, r3, r0
   19864:	mul	r5, r2, r3
   19868:	cmp	r7, r1
   1986c:	bls	198dc <flatcc_json_printer_int32_vector_field@@Base+0x3b4>
   19870:	cmp	r0, r1
   19874:	bcc	19890 <flatcc_json_printer_int32_vector_field@@Base+0x368>
   19878:	ldr	r2, [r4, #44]	; 0x2c
   1987c:	mov	r0, r4
   19880:	mov	r1, #0
   19884:	blx	r2
   19888:	ldr	r1, [r4, #16]
   1988c:	ldr	r0, [r4, #20]
   19890:	sub	r6, r1, r0
   19894:	cmp	r6, r5
   19898:	bcs	198dc <flatcc_json_printer_int32_vector_field@@Base+0x3b4>
   1989c:	mov	r1, #32
   198a0:	mov	r2, r6
   198a4:	bl	12944 <memset@plt>
   198a8:	ldr	r0, [r4, #20]
   198ac:	ldr	r2, [r4, #44]	; 0x2c
   198b0:	mov	r1, #0
   198b4:	add	r0, r0, r6
   198b8:	str	r0, [r4, #20]
   198bc:	mov	r0, r4
   198c0:	blx	r2
   198c4:	ldr	r1, [r4, #16]
   198c8:	ldr	r0, [r4, #20]
   198cc:	sub	r5, r5, r6
   198d0:	sub	r6, r1, r0
   198d4:	cmp	r5, r6
   198d8:	bhi	1989c <flatcc_json_printer_int32_vector_field@@Base+0x374>
   198dc:	mov	r1, #32
   198e0:	mov	r2, r5
   198e4:	bl	12944 <memset@plt>
   198e8:	ldr	r0, [r4, #20]
   198ec:	add	r0, r0, r5
   198f0:	str	r0, [r4, #20]
   198f4:	add	r1, r0, #1
   198f8:	str	r1, [r4, #20]
   198fc:	mov	r1, #93	; 0x5d
   19900:	strb	r1, [r0]
   19904:	sub	sp, fp, #28
   19908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001990c <flatcc_json_printer_int64_vector_field@@Base>:
   1990c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19910:	add	fp, sp, #28
   19914:	sub	sp, sp, #4
   19918:	mov	r4, r0
   1991c:	mov	r0, #4
   19920:	add	r0, r0, r2, lsl #1
   19924:	ldr	r2, [r1, #8]
   19928:	cmp	r0, r2
   1992c:	bge	19cf8 <flatcc_json_printer_int64_vector_field@@Base+0x3ec>
   19930:	ldr	r2, [r1, #4]
   19934:	add	r0, r2, r0
   19938:	ldrh	r0, [r0]
   1993c:	cmp	r0, #0
   19940:	ldrne	r2, [r1]
   19944:	addsne	r8, r2, r0
   19948:	beq	19cf8 <flatcc_json_printer_int64_vector_field@@Base+0x3ec>
   1994c:	ldr	r0, [r1, #16]
   19950:	ldr	r2, [fp, #8]
   19954:	add	r7, r0, #1
   19958:	cmp	r0, #0
   1995c:	str	r7, [r1, #16]
   19960:	beq	19978 <flatcc_json_printer_int64_vector_field@@Base+0x6c>
   19964:	ldr	r0, [r4, #20]
   19968:	add	r1, r0, #1
   1996c:	str	r1, [r4, #20]
   19970:	mov	r1, #44	; 0x2c
   19974:	strb	r1, [r0]
   19978:	ldr	r0, [r8]
   1997c:	mov	r1, r3
   19980:	ldr	r7, [r8, r0]!
   19984:	mov	r0, r4
   19988:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1998c:	ldr	r1, [r4, #32]
   19990:	ldr	r0, [r4, #20]
   19994:	cmp	r7, #0
   19998:	add	r1, r1, #1
   1999c:	str	r1, [r4, #32]
   199a0:	add	r1, r0, #1
   199a4:	str	r1, [r4, #20]
   199a8:	mov	r1, #91	; 0x5b
   199ac:	strb	r1, [r0]
   199b0:	beq	19c1c <flatcc_json_printer_int64_vector_field@@Base+0x310>
   199b4:	ldrb	r0, [r4, #25]
   199b8:	ldr	r2, [r4, #20]
   199bc:	cmp	r0, #0
   199c0:	beq	19a7c <flatcc_json_printer_int64_vector_field@@Base+0x170>
   199c4:	add	r0, r2, #1
   199c8:	str	r0, [r4, #20]
   199cc:	mov	r0, #10
   199d0:	strb	r0, [r2]
   199d4:	ldr	r0, [r4, #20]
   199d8:	ldrb	r2, [r4, #25]
   199dc:	ldr	r3, [r4, #32]
   199e0:	ldr	r1, [r4, #16]
   199e4:	mla	r6, r3, r2, r0
   199e8:	mul	r5, r3, r2
   199ec:	cmp	r6, r1
   199f0:	bls	19a60 <flatcc_json_printer_int64_vector_field@@Base+0x154>
   199f4:	cmp	r0, r1
   199f8:	bcc	19a14 <flatcc_json_printer_int64_vector_field@@Base+0x108>
   199fc:	ldr	r2, [r4, #44]	; 0x2c
   19a00:	mov	r0, r4
   19a04:	mov	r1, #0
   19a08:	blx	r2
   19a0c:	ldr	r1, [r4, #16]
   19a10:	ldr	r0, [r4, #20]
   19a14:	sub	r6, r1, r0
   19a18:	cmp	r6, r5
   19a1c:	bcs	19a60 <flatcc_json_printer_int64_vector_field@@Base+0x154>
   19a20:	mov	r1, #32
   19a24:	mov	r2, r6
   19a28:	bl	12944 <memset@plt>
   19a2c:	ldr	r0, [r4, #20]
   19a30:	ldr	r2, [r4, #44]	; 0x2c
   19a34:	mov	r1, #0
   19a38:	add	r0, r0, r6
   19a3c:	str	r0, [r4, #20]
   19a40:	mov	r0, r4
   19a44:	blx	r2
   19a48:	ldr	r1, [r4, #16]
   19a4c:	ldr	r0, [r4, #20]
   19a50:	sub	r5, r5, r6
   19a54:	sub	r6, r1, r0
   19a58:	cmp	r5, r6
   19a5c:	bhi	19a20 <flatcc_json_printer_int64_vector_field@@Base+0x114>
   19a60:	mov	r1, #32
   19a64:	mov	r2, r5
   19a68:	bl	12944 <memset@plt>
   19a6c:	ldr	r0, [r4, #20]
   19a70:	add	r2, r0, r5
   19a74:	str	r2, [r4, #20]
   19a78:	b	19a9c <flatcc_json_printer_int64_vector_field@@Base+0x190>
   19a7c:	ldr	r0, [r4, #16]
   19a80:	cmp	r2, r0
   19a84:	bcc	19a9c <flatcc_json_printer_int64_vector_field@@Base+0x190>
   19a88:	ldr	r2, [r4, #44]	; 0x2c
   19a8c:	mov	r0, r4
   19a90:	mov	r1, #0
   19a94:	blx	r2
   19a98:	ldr	r2, [r4, #20]
   19a9c:	ldrd	r0, [r8, #4]
   19aa0:	lsr	r5, r1, #31
   19aa4:	cmn	r1, #1
   19aa8:	bgt	19abc <flatcc_json_printer_int64_vector_field@@Base+0x1b0>
   19aac:	mov	r3, #45	; 0x2d
   19ab0:	rsbs	r0, r0, #0
   19ab4:	strb	r3, [r2], #1
   19ab8:	rsc	r1, r1, #0
   19abc:	bl	15194 <flatcc_json_printer_uint64@@Base+0x30>
   19ac0:	ldr	r1, [r4, #20]
   19ac4:	add	r0, r0, r5
   19ac8:	subs	r9, r7, #1
   19acc:	add	r0, r1, r0
   19ad0:	str	r0, [r4, #20]
   19ad4:	beq	19c1c <flatcc_json_printer_int64_vector_field@@Base+0x310>
   19ad8:	ldr	r0, [r4, #20]
   19adc:	add	r7, r8, #12
   19ae0:	mov	r8, #44	; 0x2c
   19ae4:	mov	sl, #10
   19ae8:	add	r1, r0, #1
   19aec:	str	r1, [r4, #20]
   19af0:	strb	r8, [r0]
   19af4:	ldrb	r0, [r4, #25]
   19af8:	ldr	r2, [r4, #20]
   19afc:	cmp	r0, #0
   19b00:	beq	19bb8 <flatcc_json_printer_int64_vector_field@@Base+0x2ac>
   19b04:	add	r0, r2, #1
   19b08:	str	r0, [r4, #20]
   19b0c:	strb	sl, [r2]
   19b10:	ldr	r0, [r4, #20]
   19b14:	ldrb	r2, [r4, #25]
   19b18:	ldr	r3, [r4, #32]
   19b1c:	ldr	r1, [r4, #16]
   19b20:	mla	r6, r3, r2, r0
   19b24:	mul	r5, r3, r2
   19b28:	cmp	r6, r1
   19b2c:	bls	19b9c <flatcc_json_printer_int64_vector_field@@Base+0x290>
   19b30:	cmp	r0, r1
   19b34:	bcc	19b50 <flatcc_json_printer_int64_vector_field@@Base+0x244>
   19b38:	ldr	r2, [r4, #44]	; 0x2c
   19b3c:	mov	r0, r4
   19b40:	mov	r1, #0
   19b44:	blx	r2
   19b48:	ldr	r1, [r4, #16]
   19b4c:	ldr	r0, [r4, #20]
   19b50:	sub	r6, r1, r0
   19b54:	cmp	r6, r5
   19b58:	bcs	19b9c <flatcc_json_printer_int64_vector_field@@Base+0x290>
   19b5c:	mov	r1, #32
   19b60:	mov	r2, r6
   19b64:	bl	12944 <memset@plt>
   19b68:	ldr	r0, [r4, #20]
   19b6c:	ldr	r2, [r4, #44]	; 0x2c
   19b70:	mov	r1, #0
   19b74:	add	r0, r0, r6
   19b78:	str	r0, [r4, #20]
   19b7c:	mov	r0, r4
   19b80:	blx	r2
   19b84:	ldr	r1, [r4, #16]
   19b88:	ldr	r0, [r4, #20]
   19b8c:	sub	r5, r5, r6
   19b90:	sub	r6, r1, r0
   19b94:	cmp	r5, r6
   19b98:	bhi	19b5c <flatcc_json_printer_int64_vector_field@@Base+0x250>
   19b9c:	mov	r1, #32
   19ba0:	mov	r2, r5
   19ba4:	bl	12944 <memset@plt>
   19ba8:	ldr	r0, [r4, #20]
   19bac:	add	r2, r0, r5
   19bb0:	str	r2, [r4, #20]
   19bb4:	b	19bd8 <flatcc_json_printer_int64_vector_field@@Base+0x2cc>
   19bb8:	ldr	r0, [r4, #16]
   19bbc:	cmp	r2, r0
   19bc0:	bcc	19bd8 <flatcc_json_printer_int64_vector_field@@Base+0x2cc>
   19bc4:	ldr	r2, [r4, #44]	; 0x2c
   19bc8:	mov	r0, r4
   19bcc:	mov	r1, #0
   19bd0:	blx	r2
   19bd4:	ldr	r2, [r4, #20]
   19bd8:	ldrd	r0, [r7]
   19bdc:	sub	r9, r9, #1
   19be0:	lsr	r5, r1, #31
   19be4:	cmn	r1, #1
   19be8:	bgt	19bfc <flatcc_json_printer_int64_vector_field@@Base+0x2f0>
   19bec:	mov	r3, #45	; 0x2d
   19bf0:	rsbs	r0, r0, #0
   19bf4:	strb	r3, [r2], #1
   19bf8:	rsc	r1, r1, #0
   19bfc:	bl	15194 <flatcc_json_printer_uint64@@Base+0x30>
   19c00:	ldr	r1, [r4, #20]
   19c04:	add	r0, r0, r5
   19c08:	add	r7, r7, #8
   19c0c:	cmp	r9, #0
   19c10:	add	r0, r1, r0
   19c14:	str	r0, [r4, #20]
   19c18:	bne	19ae8 <flatcc_json_printer_int64_vector_field@@Base+0x1dc>
   19c1c:	ldrb	r1, [r4, #25]
   19c20:	ldr	r0, [r4, #20]
   19c24:	cmp	r1, #0
   19c28:	beq	19ce8 <flatcc_json_printer_int64_vector_field@@Base+0x3dc>
   19c2c:	add	r1, r0, #1
   19c30:	str	r1, [r4, #20]
   19c34:	mov	r1, #10
   19c38:	strb	r1, [r0]
   19c3c:	ldr	r0, [r4, #32]
   19c40:	sub	r2, r0, #1
   19c44:	str	r2, [r4, #32]
   19c48:	ldrb	r3, [r4, #25]
   19c4c:	ldr	r0, [r4, #20]
   19c50:	ldr	r1, [r4, #16]
   19c54:	mla	r7, r2, r3, r0
   19c58:	mul	r5, r2, r3
   19c5c:	cmp	r7, r1
   19c60:	bls	19cd0 <flatcc_json_printer_int64_vector_field@@Base+0x3c4>
   19c64:	cmp	r0, r1
   19c68:	bcc	19c84 <flatcc_json_printer_int64_vector_field@@Base+0x378>
   19c6c:	ldr	r2, [r4, #44]	; 0x2c
   19c70:	mov	r0, r4
   19c74:	mov	r1, #0
   19c78:	blx	r2
   19c7c:	ldr	r1, [r4, #16]
   19c80:	ldr	r0, [r4, #20]
   19c84:	sub	r6, r1, r0
   19c88:	cmp	r6, r5
   19c8c:	bcs	19cd0 <flatcc_json_printer_int64_vector_field@@Base+0x3c4>
   19c90:	mov	r1, #32
   19c94:	mov	r2, r6
   19c98:	bl	12944 <memset@plt>
   19c9c:	ldr	r0, [r4, #20]
   19ca0:	ldr	r2, [r4, #44]	; 0x2c
   19ca4:	mov	r1, #0
   19ca8:	add	r0, r0, r6
   19cac:	str	r0, [r4, #20]
   19cb0:	mov	r0, r4
   19cb4:	blx	r2
   19cb8:	ldr	r1, [r4, #16]
   19cbc:	ldr	r0, [r4, #20]
   19cc0:	sub	r5, r5, r6
   19cc4:	sub	r6, r1, r0
   19cc8:	cmp	r5, r6
   19ccc:	bhi	19c90 <flatcc_json_printer_int64_vector_field@@Base+0x384>
   19cd0:	mov	r1, #32
   19cd4:	mov	r2, r5
   19cd8:	bl	12944 <memset@plt>
   19cdc:	ldr	r0, [r4, #20]
   19ce0:	add	r0, r0, r5
   19ce4:	str	r0, [r4, #20]
   19ce8:	add	r1, r0, #1
   19cec:	str	r1, [r4, #20]
   19cf0:	mov	r1, #93	; 0x5d
   19cf4:	strb	r1, [r0]
   19cf8:	sub	sp, fp, #28
   19cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019d00 <flatcc_json_printer_bool_vector_field@@Base>:
   19d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d04:	add	fp, sp, #28
   19d08:	sub	sp, sp, #4
   19d0c:	mov	r4, r0
   19d10:	mov	r0, #4
   19d14:	add	r0, r0, r2, lsl #1
   19d18:	ldr	r2, [r1, #8]
   19d1c:	cmp	r0, r2
   19d20:	bge	1a114 <flatcc_json_printer_bool_vector_field@@Base+0x414>
   19d24:	ldr	r2, [r1, #4]
   19d28:	add	r0, r2, r0
   19d2c:	ldrh	r0, [r0]
   19d30:	cmp	r0, #0
   19d34:	ldrne	r2, [r1]
   19d38:	addsne	sl, r2, r0
   19d3c:	beq	1a114 <flatcc_json_printer_bool_vector_field@@Base+0x414>
   19d40:	ldr	r0, [r1, #16]
   19d44:	ldr	r2, [fp, #8]
   19d48:	add	r7, r0, #1
   19d4c:	cmp	r0, #0
   19d50:	str	r7, [r1, #16]
   19d54:	beq	19d6c <flatcc_json_printer_bool_vector_field@@Base+0x6c>
   19d58:	ldr	r0, [r4, #20]
   19d5c:	add	r1, r0, #1
   19d60:	str	r1, [r4, #20]
   19d64:	mov	r1, #44	; 0x2c
   19d68:	strb	r1, [r0]
   19d6c:	ldr	r0, [sl]
   19d70:	mov	r1, r3
   19d74:	ldr	r9, [sl, r0]!
   19d78:	mov	r0, r4
   19d7c:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   19d80:	ldr	r1, [r4, #32]
   19d84:	ldr	r0, [r4, #20]
   19d88:	cmp	r9, #0
   19d8c:	add	r1, r1, #1
   19d90:	str	r1, [r4, #32]
   19d94:	add	r1, r0, #1
   19d98:	str	r1, [r4, #20]
   19d9c:	mov	r1, #91	; 0x5b
   19da0:	strb	r1, [r0]
   19da4:	beq	1a038 <flatcc_json_printer_bool_vector_field@@Base+0x338>
   19da8:	ldrb	r1, [r4, #25]
   19dac:	ldr	r0, [r4, #20]
   19db0:	cmp	r1, #0
   19db4:	beq	19e70 <flatcc_json_printer_bool_vector_field@@Base+0x170>
   19db8:	add	r1, r0, #1
   19dbc:	str	r1, [r4, #20]
   19dc0:	mov	r1, #10
   19dc4:	strb	r1, [r0]
   19dc8:	ldr	r0, [r4, #20]
   19dcc:	ldrb	r2, [r4, #25]
   19dd0:	ldr	r3, [r4, #32]
   19dd4:	ldr	r1, [r4, #16]
   19dd8:	mla	r7, r3, r2, r0
   19ddc:	mul	r5, r3, r2
   19de0:	cmp	r7, r1
   19de4:	bls	19e54 <flatcc_json_printer_bool_vector_field@@Base+0x154>
   19de8:	cmp	r0, r1
   19dec:	bcc	19e08 <flatcc_json_printer_bool_vector_field@@Base+0x108>
   19df0:	ldr	r2, [r4, #44]	; 0x2c
   19df4:	mov	r0, r4
   19df8:	mov	r1, #0
   19dfc:	blx	r2
   19e00:	ldr	r1, [r4, #16]
   19e04:	ldr	r0, [r4, #20]
   19e08:	sub	r6, r1, r0
   19e0c:	cmp	r6, r5
   19e10:	bcs	19e54 <flatcc_json_printer_bool_vector_field@@Base+0x154>
   19e14:	mov	r1, #32
   19e18:	mov	r2, r6
   19e1c:	bl	12944 <memset@plt>
   19e20:	ldr	r0, [r4, #20]
   19e24:	ldr	r2, [r4, #44]	; 0x2c
   19e28:	mov	r1, #0
   19e2c:	add	r0, r0, r6
   19e30:	str	r0, [r4, #20]
   19e34:	mov	r0, r4
   19e38:	blx	r2
   19e3c:	ldr	r1, [r4, #16]
   19e40:	ldr	r0, [r4, #20]
   19e44:	sub	r5, r5, r6
   19e48:	sub	r6, r1, r0
   19e4c:	cmp	r5, r6
   19e50:	bhi	19e14 <flatcc_json_printer_bool_vector_field@@Base+0x114>
   19e54:	mov	r1, #32
   19e58:	mov	r2, r5
   19e5c:	bl	12944 <memset@plt>
   19e60:	ldr	r0, [r4, #20]
   19e64:	add	r0, r0, r5
   19e68:	str	r0, [r4, #20]
   19e6c:	b	19e90 <flatcc_json_printer_bool_vector_field@@Base+0x190>
   19e70:	ldr	r1, [r4, #16]
   19e74:	cmp	r0, r1
   19e78:	bcc	19e90 <flatcc_json_printer_bool_vector_field@@Base+0x190>
   19e7c:	ldr	r2, [r4, #44]	; 0x2c
   19e80:	mov	r0, r4
   19e84:	mov	r1, #0
   19e88:	blx	r2
   19e8c:	ldr	r0, [r4, #20]
   19e90:	ldrb	r1, [sl, #4]
   19e94:	movw	r8, #29300	; 0x7274
   19e98:	movt	r8, #25973	; 0x6575
   19e9c:	cmp	r1, #0
   19ea0:	beq	19eb8 <flatcc_json_printer_bool_vector_field@@Base+0x1b8>
   19ea4:	mov	r1, #0
   19ea8:	str	r8, [r0]
   19eac:	strb	r1, [r0, #4]
   19eb0:	mov	r0, #4
   19eb4:	b	19ed0 <flatcc_json_printer_bool_vector_field@@Base+0x1d0>
   19eb8:	mov	r1, #101	; 0x65
   19ebc:	strh	r1, [r0, #4]
   19ec0:	movw	r1, #24934	; 0x6166
   19ec4:	movt	r1, #29548	; 0x736c
   19ec8:	str	r1, [r0]
   19ecc:	mov	r0, #5
   19ed0:	ldr	r1, [r4, #20]
   19ed4:	subs	r9, r9, #1
   19ed8:	add	r0, r1, r0
   19edc:	str	r0, [r4, #20]
   19ee0:	beq	1a038 <flatcc_json_printer_bool_vector_field@@Base+0x338>
   19ee4:	ldr	r0, [r4, #20]
   19ee8:	add	r7, sl, #5
   19eec:	mov	sl, #44	; 0x2c
   19ef0:	add	r1, r0, #1
   19ef4:	str	r1, [r4, #20]
   19ef8:	strb	sl, [r0]
   19efc:	ldrb	r1, [r4, #25]
   19f00:	ldr	r0, [r4, #20]
   19f04:	cmp	r1, #0
   19f08:	beq	19fc4 <flatcc_json_printer_bool_vector_field@@Base+0x2c4>
   19f0c:	add	r1, r0, #1
   19f10:	str	r1, [r4, #20]
   19f14:	mov	r1, #10
   19f18:	strb	r1, [r0]
   19f1c:	ldr	r0, [r4, #20]
   19f20:	ldrb	r2, [r4, #25]
   19f24:	ldr	r3, [r4, #32]
   19f28:	ldr	r1, [r4, #16]
   19f2c:	mla	r6, r3, r2, r0
   19f30:	mul	r5, r3, r2
   19f34:	cmp	r6, r1
   19f38:	bls	19fa8 <flatcc_json_printer_bool_vector_field@@Base+0x2a8>
   19f3c:	cmp	r0, r1
   19f40:	bcc	19f5c <flatcc_json_printer_bool_vector_field@@Base+0x25c>
   19f44:	ldr	r2, [r4, #44]	; 0x2c
   19f48:	mov	r0, r4
   19f4c:	mov	r1, #0
   19f50:	blx	r2
   19f54:	ldr	r1, [r4, #16]
   19f58:	ldr	r0, [r4, #20]
   19f5c:	sub	r6, r1, r0
   19f60:	cmp	r6, r5
   19f64:	bcs	19fa8 <flatcc_json_printer_bool_vector_field@@Base+0x2a8>
   19f68:	mov	r1, #32
   19f6c:	mov	r2, r6
   19f70:	bl	12944 <memset@plt>
   19f74:	ldr	r0, [r4, #20]
   19f78:	ldr	r2, [r4, #44]	; 0x2c
   19f7c:	mov	r1, #0
   19f80:	add	r0, r0, r6
   19f84:	str	r0, [r4, #20]
   19f88:	mov	r0, r4
   19f8c:	blx	r2
   19f90:	ldr	r1, [r4, #16]
   19f94:	ldr	r0, [r4, #20]
   19f98:	sub	r5, r5, r6
   19f9c:	sub	r6, r1, r0
   19fa0:	cmp	r5, r6
   19fa4:	bhi	19f68 <flatcc_json_printer_bool_vector_field@@Base+0x268>
   19fa8:	mov	r1, #32
   19fac:	mov	r2, r5
   19fb0:	bl	12944 <memset@plt>
   19fb4:	ldr	r0, [r4, #20]
   19fb8:	add	r0, r0, r5
   19fbc:	str	r0, [r4, #20]
   19fc0:	b	19fe4 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   19fc4:	ldr	r1, [r4, #16]
   19fc8:	cmp	r0, r1
   19fcc:	bcc	19fe4 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   19fd0:	ldr	r2, [r4, #44]	; 0x2c
   19fd4:	mov	r0, r4
   19fd8:	mov	r1, #0
   19fdc:	blx	r2
   19fe0:	ldr	r0, [r4, #20]
   19fe4:	ldrb	r1, [r7]
   19fe8:	sub	r9, r9, #1
   19fec:	cmp	r1, #0
   19ff0:	beq	1a008 <flatcc_json_printer_bool_vector_field@@Base+0x308>
   19ff4:	mov	r1, #0
   19ff8:	str	r8, [r0]
   19ffc:	strb	r1, [r0, #4]
   1a000:	mov	r0, #4
   1a004:	b	1a020 <flatcc_json_printer_bool_vector_field@@Base+0x320>
   1a008:	mov	r1, #101	; 0x65
   1a00c:	strh	r1, [r0, #4]
   1a010:	movw	r1, #24934	; 0x6166
   1a014:	movt	r1, #29548	; 0x736c
   1a018:	str	r1, [r0]
   1a01c:	mov	r0, #5
   1a020:	ldr	r1, [r4, #20]
   1a024:	add	r7, r7, #1
   1a028:	cmp	r9, #0
   1a02c:	add	r0, r1, r0
   1a030:	str	r0, [r4, #20]
   1a034:	bne	19ef0 <flatcc_json_printer_bool_vector_field@@Base+0x1f0>
   1a038:	ldrb	r1, [r4, #25]
   1a03c:	ldr	r0, [r4, #20]
   1a040:	cmp	r1, #0
   1a044:	beq	1a104 <flatcc_json_printer_bool_vector_field@@Base+0x404>
   1a048:	add	r1, r0, #1
   1a04c:	str	r1, [r4, #20]
   1a050:	mov	r1, #10
   1a054:	strb	r1, [r0]
   1a058:	ldr	r0, [r4, #32]
   1a05c:	sub	r2, r0, #1
   1a060:	str	r2, [r4, #32]
   1a064:	ldrb	r3, [r4, #25]
   1a068:	ldr	r0, [r4, #20]
   1a06c:	ldr	r1, [r4, #16]
   1a070:	mla	r7, r2, r3, r0
   1a074:	mul	r5, r2, r3
   1a078:	cmp	r7, r1
   1a07c:	bls	1a0ec <flatcc_json_printer_bool_vector_field@@Base+0x3ec>
   1a080:	cmp	r0, r1
   1a084:	bcc	1a0a0 <flatcc_json_printer_bool_vector_field@@Base+0x3a0>
   1a088:	ldr	r2, [r4, #44]	; 0x2c
   1a08c:	mov	r0, r4
   1a090:	mov	r1, #0
   1a094:	blx	r2
   1a098:	ldr	r1, [r4, #16]
   1a09c:	ldr	r0, [r4, #20]
   1a0a0:	sub	r6, r1, r0
   1a0a4:	cmp	r6, r5
   1a0a8:	bcs	1a0ec <flatcc_json_printer_bool_vector_field@@Base+0x3ec>
   1a0ac:	mov	r1, #32
   1a0b0:	mov	r2, r6
   1a0b4:	bl	12944 <memset@plt>
   1a0b8:	ldr	r0, [r4, #20]
   1a0bc:	ldr	r2, [r4, #44]	; 0x2c
   1a0c0:	mov	r1, #0
   1a0c4:	add	r0, r0, r6
   1a0c8:	str	r0, [r4, #20]
   1a0cc:	mov	r0, r4
   1a0d0:	blx	r2
   1a0d4:	ldr	r1, [r4, #16]
   1a0d8:	ldr	r0, [r4, #20]
   1a0dc:	sub	r5, r5, r6
   1a0e0:	sub	r6, r1, r0
   1a0e4:	cmp	r5, r6
   1a0e8:	bhi	1a0ac <flatcc_json_printer_bool_vector_field@@Base+0x3ac>
   1a0ec:	mov	r1, #32
   1a0f0:	mov	r2, r5
   1a0f4:	bl	12944 <memset@plt>
   1a0f8:	ldr	r0, [r4, #20]
   1a0fc:	add	r0, r0, r5
   1a100:	str	r0, [r4, #20]
   1a104:	add	r1, r0, #1
   1a108:	str	r1, [r4, #20]
   1a10c:	mov	r1, #93	; 0x5d
   1a110:	strb	r1, [r0]
   1a114:	sub	sp, fp, #28
   1a118:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a11c <flatcc_json_printer_float_vector_field@@Base>:
   1a11c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a120:	add	fp, sp, #28
   1a124:	sub	sp, sp, #4
   1a128:	mov	r4, r0
   1a12c:	mov	r0, #4
   1a130:	add	r0, r0, r2, lsl #1
   1a134:	ldr	r2, [r1, #8]
   1a138:	cmp	r0, r2
   1a13c:	bge	1a4d0 <flatcc_json_printer_float_vector_field@@Base+0x3b4>
   1a140:	ldr	r2, [r1, #4]
   1a144:	add	r0, r2, r0
   1a148:	ldrh	r0, [r0]
   1a14c:	cmp	r0, #0
   1a150:	ldrne	r2, [r1]
   1a154:	addsne	r8, r2, r0
   1a158:	beq	1a4d0 <flatcc_json_printer_float_vector_field@@Base+0x3b4>
   1a15c:	ldr	r0, [r1, #16]
   1a160:	ldr	r2, [fp, #8]
   1a164:	add	r7, r0, #1
   1a168:	cmp	r0, #0
   1a16c:	str	r7, [r1, #16]
   1a170:	beq	1a188 <flatcc_json_printer_float_vector_field@@Base+0x6c>
   1a174:	ldr	r0, [r4, #20]
   1a178:	add	r1, r0, #1
   1a17c:	str	r1, [r4, #20]
   1a180:	mov	r1, #44	; 0x2c
   1a184:	strb	r1, [r0]
   1a188:	ldr	r0, [r8]
   1a18c:	mov	r1, r3
   1a190:	ldr	r7, [r8, r0]!
   1a194:	mov	r0, r4
   1a198:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1a19c:	ldr	r1, [r4, #32]
   1a1a0:	ldr	r0, [r4, #20]
   1a1a4:	cmp	r7, #0
   1a1a8:	add	r1, r1, #1
   1a1ac:	str	r1, [r4, #32]
   1a1b0:	add	r1, r0, #1
   1a1b4:	str	r1, [r4, #20]
   1a1b8:	mov	r1, #91	; 0x5b
   1a1bc:	strb	r1, [r0]
   1a1c0:	beq	1a3f4 <flatcc_json_printer_float_vector_field@@Base+0x2d8>
   1a1c4:	ldrb	r1, [r4, #25]
   1a1c8:	ldr	r0, [r4, #20]
   1a1cc:	cmp	r1, #0
   1a1d0:	beq	1a28c <flatcc_json_printer_float_vector_field@@Base+0x170>
   1a1d4:	add	r1, r0, #1
   1a1d8:	str	r1, [r4, #20]
   1a1dc:	mov	r1, #10
   1a1e0:	strb	r1, [r0]
   1a1e4:	ldr	r0, [r4, #20]
   1a1e8:	ldrb	r2, [r4, #25]
   1a1ec:	ldr	r3, [r4, #32]
   1a1f0:	ldr	r1, [r4, #16]
   1a1f4:	mla	r6, r3, r2, r0
   1a1f8:	mul	r5, r3, r2
   1a1fc:	cmp	r6, r1
   1a200:	bls	1a270 <flatcc_json_printer_float_vector_field@@Base+0x154>
   1a204:	cmp	r0, r1
   1a208:	bcc	1a224 <flatcc_json_printer_float_vector_field@@Base+0x108>
   1a20c:	ldr	r2, [r4, #44]	; 0x2c
   1a210:	mov	r0, r4
   1a214:	mov	r1, #0
   1a218:	blx	r2
   1a21c:	ldr	r1, [r4, #16]
   1a220:	ldr	r0, [r4, #20]
   1a224:	sub	r6, r1, r0
   1a228:	cmp	r6, r5
   1a22c:	bcs	1a270 <flatcc_json_printer_float_vector_field@@Base+0x154>
   1a230:	mov	r1, #32
   1a234:	mov	r2, r6
   1a238:	bl	12944 <memset@plt>
   1a23c:	ldr	r0, [r4, #20]
   1a240:	ldr	r2, [r4, #44]	; 0x2c
   1a244:	mov	r1, #0
   1a248:	add	r0, r0, r6
   1a24c:	str	r0, [r4, #20]
   1a250:	mov	r0, r4
   1a254:	blx	r2
   1a258:	ldr	r1, [r4, #16]
   1a25c:	ldr	r0, [r4, #20]
   1a260:	sub	r5, r5, r6
   1a264:	sub	r6, r1, r0
   1a268:	cmp	r5, r6
   1a26c:	bhi	1a230 <flatcc_json_printer_float_vector_field@@Base+0x114>
   1a270:	mov	r1, #32
   1a274:	mov	r2, r5
   1a278:	bl	12944 <memset@plt>
   1a27c:	ldr	r0, [r4, #20]
   1a280:	add	r0, r0, r5
   1a284:	str	r0, [r4, #20]
   1a288:	b	1a2ac <flatcc_json_printer_float_vector_field@@Base+0x190>
   1a28c:	ldr	r1, [r4, #16]
   1a290:	cmp	r0, r1
   1a294:	bcc	1a2ac <flatcc_json_printer_float_vector_field@@Base+0x190>
   1a298:	ldr	r2, [r4, #44]	; 0x2c
   1a29c:	mov	r0, r4
   1a2a0:	mov	r1, #0
   1a2a4:	blx	r2
   1a2a8:	ldr	r0, [r4, #20]
   1a2ac:	vldr	s0, [r8, #4]
   1a2b0:	vcvt.f64.f32	d0, s0
   1a2b4:	bl	13ee0 <flatcc_json_printer_fmt_float@@Base+0x8>
   1a2b8:	ldr	r1, [r4, #20]
   1a2bc:	subs	r9, r7, #1
   1a2c0:	add	r0, r1, r0
   1a2c4:	str	r0, [r4, #20]
   1a2c8:	beq	1a3f4 <flatcc_json_printer_float_vector_field@@Base+0x2d8>
   1a2cc:	ldr	r0, [r4, #20]
   1a2d0:	add	r7, r8, #8
   1a2d4:	mov	r8, #44	; 0x2c
   1a2d8:	mov	sl, #10
   1a2dc:	add	r1, r0, #1
   1a2e0:	sub	r9, r9, #1
   1a2e4:	str	r1, [r4, #20]
   1a2e8:	strb	r8, [r0]
   1a2ec:	ldrb	r1, [r4, #25]
   1a2f0:	ldr	r0, [r4, #20]
   1a2f4:	cmp	r1, #0
   1a2f8:	beq	1a3b0 <flatcc_json_printer_float_vector_field@@Base+0x294>
   1a2fc:	add	r1, r0, #1
   1a300:	str	r1, [r4, #20]
   1a304:	strb	sl, [r0]
   1a308:	ldr	r0, [r4, #20]
   1a30c:	ldrb	r2, [r4, #25]
   1a310:	ldr	r3, [r4, #32]
   1a314:	ldr	r1, [r4, #16]
   1a318:	mla	r6, r3, r2, r0
   1a31c:	mul	r5, r3, r2
   1a320:	cmp	r6, r1
   1a324:	bls	1a394 <flatcc_json_printer_float_vector_field@@Base+0x278>
   1a328:	cmp	r0, r1
   1a32c:	bcc	1a348 <flatcc_json_printer_float_vector_field@@Base+0x22c>
   1a330:	ldr	r2, [r4, #44]	; 0x2c
   1a334:	mov	r0, r4
   1a338:	mov	r1, #0
   1a33c:	blx	r2
   1a340:	ldr	r1, [r4, #16]
   1a344:	ldr	r0, [r4, #20]
   1a348:	sub	r6, r1, r0
   1a34c:	cmp	r6, r5
   1a350:	bcs	1a394 <flatcc_json_printer_float_vector_field@@Base+0x278>
   1a354:	mov	r1, #32
   1a358:	mov	r2, r6
   1a35c:	bl	12944 <memset@plt>
   1a360:	ldr	r0, [r4, #20]
   1a364:	ldr	r2, [r4, #44]	; 0x2c
   1a368:	mov	r1, #0
   1a36c:	add	r0, r0, r6
   1a370:	str	r0, [r4, #20]
   1a374:	mov	r0, r4
   1a378:	blx	r2
   1a37c:	ldr	r1, [r4, #16]
   1a380:	ldr	r0, [r4, #20]
   1a384:	sub	r5, r5, r6
   1a388:	sub	r6, r1, r0
   1a38c:	cmp	r5, r6
   1a390:	bhi	1a354 <flatcc_json_printer_float_vector_field@@Base+0x238>
   1a394:	mov	r1, #32
   1a398:	mov	r2, r5
   1a39c:	bl	12944 <memset@plt>
   1a3a0:	ldr	r0, [r4, #20]
   1a3a4:	add	r0, r0, r5
   1a3a8:	str	r0, [r4, #20]
   1a3ac:	b	1a3d0 <flatcc_json_printer_float_vector_field@@Base+0x2b4>
   1a3b0:	ldr	r1, [r4, #16]
   1a3b4:	cmp	r0, r1
   1a3b8:	bcc	1a3d0 <flatcc_json_printer_float_vector_field@@Base+0x2b4>
   1a3bc:	ldr	r2, [r4, #44]	; 0x2c
   1a3c0:	mov	r0, r4
   1a3c4:	mov	r1, #0
   1a3c8:	blx	r2
   1a3cc:	ldr	r0, [r4, #20]
   1a3d0:	vldr	s0, [r7]
   1a3d4:	vcvt.f64.f32	d0, s0
   1a3d8:	bl	13ee0 <flatcc_json_printer_fmt_float@@Base+0x8>
   1a3dc:	ldr	r1, [r4, #20]
   1a3e0:	add	r7, r7, #4
   1a3e4:	cmp	r9, #0
   1a3e8:	add	r0, r1, r0
   1a3ec:	str	r0, [r4, #20]
   1a3f0:	bne	1a2dc <flatcc_json_printer_float_vector_field@@Base+0x1c0>
   1a3f4:	ldrb	r1, [r4, #25]
   1a3f8:	ldr	r0, [r4, #20]
   1a3fc:	cmp	r1, #0
   1a400:	beq	1a4c0 <flatcc_json_printer_float_vector_field@@Base+0x3a4>
   1a404:	add	r1, r0, #1
   1a408:	str	r1, [r4, #20]
   1a40c:	mov	r1, #10
   1a410:	strb	r1, [r0]
   1a414:	ldr	r0, [r4, #32]
   1a418:	sub	r2, r0, #1
   1a41c:	str	r2, [r4, #32]
   1a420:	ldrb	r3, [r4, #25]
   1a424:	ldr	r0, [r4, #20]
   1a428:	ldr	r1, [r4, #16]
   1a42c:	mla	r7, r2, r3, r0
   1a430:	mul	r5, r2, r3
   1a434:	cmp	r7, r1
   1a438:	bls	1a4a8 <flatcc_json_printer_float_vector_field@@Base+0x38c>
   1a43c:	cmp	r0, r1
   1a440:	bcc	1a45c <flatcc_json_printer_float_vector_field@@Base+0x340>
   1a444:	ldr	r2, [r4, #44]	; 0x2c
   1a448:	mov	r0, r4
   1a44c:	mov	r1, #0
   1a450:	blx	r2
   1a454:	ldr	r1, [r4, #16]
   1a458:	ldr	r0, [r4, #20]
   1a45c:	sub	r6, r1, r0
   1a460:	cmp	r6, r5
   1a464:	bcs	1a4a8 <flatcc_json_printer_float_vector_field@@Base+0x38c>
   1a468:	mov	r1, #32
   1a46c:	mov	r2, r6
   1a470:	bl	12944 <memset@plt>
   1a474:	ldr	r0, [r4, #20]
   1a478:	ldr	r2, [r4, #44]	; 0x2c
   1a47c:	mov	r1, #0
   1a480:	add	r0, r0, r6
   1a484:	str	r0, [r4, #20]
   1a488:	mov	r0, r4
   1a48c:	blx	r2
   1a490:	ldr	r1, [r4, #16]
   1a494:	ldr	r0, [r4, #20]
   1a498:	sub	r5, r5, r6
   1a49c:	sub	r6, r1, r0
   1a4a0:	cmp	r5, r6
   1a4a4:	bhi	1a468 <flatcc_json_printer_float_vector_field@@Base+0x34c>
   1a4a8:	mov	r1, #32
   1a4ac:	mov	r2, r5
   1a4b0:	bl	12944 <memset@plt>
   1a4b4:	ldr	r0, [r4, #20]
   1a4b8:	add	r0, r0, r5
   1a4bc:	str	r0, [r4, #20]
   1a4c0:	add	r1, r0, #1
   1a4c4:	str	r1, [r4, #20]
   1a4c8:	mov	r1, #93	; 0x5d
   1a4cc:	strb	r1, [r0]
   1a4d0:	sub	sp, fp, #28
   1a4d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a4d8 <flatcc_json_printer_double_vector_field@@Base>:
   1a4d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a4dc:	add	fp, sp, #28
   1a4e0:	sub	sp, sp, #4
   1a4e4:	mov	r4, r0
   1a4e8:	mov	r0, #4
   1a4ec:	add	r0, r0, r2, lsl #1
   1a4f0:	ldr	r2, [r1, #8]
   1a4f4:	cmp	r0, r2
   1a4f8:	bge	1a884 <flatcc_json_printer_double_vector_field@@Base+0x3ac>
   1a4fc:	ldr	r2, [r1, #4]
   1a500:	add	r0, r2, r0
   1a504:	ldrh	r0, [r0]
   1a508:	cmp	r0, #0
   1a50c:	ldrne	r2, [r1]
   1a510:	addsne	r8, r2, r0
   1a514:	beq	1a884 <flatcc_json_printer_double_vector_field@@Base+0x3ac>
   1a518:	ldr	r0, [r1, #16]
   1a51c:	ldr	r2, [fp, #8]
   1a520:	add	r7, r0, #1
   1a524:	cmp	r0, #0
   1a528:	str	r7, [r1, #16]
   1a52c:	beq	1a544 <flatcc_json_printer_double_vector_field@@Base+0x6c>
   1a530:	ldr	r0, [r4, #20]
   1a534:	add	r1, r0, #1
   1a538:	str	r1, [r4, #20]
   1a53c:	mov	r1, #44	; 0x2c
   1a540:	strb	r1, [r0]
   1a544:	ldr	r0, [r8]
   1a548:	mov	r1, r3
   1a54c:	ldr	r7, [r8, r0]!
   1a550:	mov	r0, r4
   1a554:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1a558:	ldr	r1, [r4, #32]
   1a55c:	ldr	r0, [r4, #20]
   1a560:	cmp	r7, #0
   1a564:	add	r1, r1, #1
   1a568:	str	r1, [r4, #32]
   1a56c:	add	r1, r0, #1
   1a570:	str	r1, [r4, #20]
   1a574:	mov	r1, #91	; 0x5b
   1a578:	strb	r1, [r0]
   1a57c:	beq	1a7a8 <flatcc_json_printer_double_vector_field@@Base+0x2d0>
   1a580:	ldrb	r1, [r4, #25]
   1a584:	ldr	r0, [r4, #20]
   1a588:	cmp	r1, #0
   1a58c:	beq	1a648 <flatcc_json_printer_double_vector_field@@Base+0x170>
   1a590:	add	r1, r0, #1
   1a594:	str	r1, [r4, #20]
   1a598:	mov	r1, #10
   1a59c:	strb	r1, [r0]
   1a5a0:	ldr	r0, [r4, #20]
   1a5a4:	ldrb	r2, [r4, #25]
   1a5a8:	ldr	r3, [r4, #32]
   1a5ac:	ldr	r1, [r4, #16]
   1a5b0:	mla	r6, r3, r2, r0
   1a5b4:	mul	r5, r3, r2
   1a5b8:	cmp	r6, r1
   1a5bc:	bls	1a62c <flatcc_json_printer_double_vector_field@@Base+0x154>
   1a5c0:	cmp	r0, r1
   1a5c4:	bcc	1a5e0 <flatcc_json_printer_double_vector_field@@Base+0x108>
   1a5c8:	ldr	r2, [r4, #44]	; 0x2c
   1a5cc:	mov	r0, r4
   1a5d0:	mov	r1, #0
   1a5d4:	blx	r2
   1a5d8:	ldr	r1, [r4, #16]
   1a5dc:	ldr	r0, [r4, #20]
   1a5e0:	sub	r6, r1, r0
   1a5e4:	cmp	r6, r5
   1a5e8:	bcs	1a62c <flatcc_json_printer_double_vector_field@@Base+0x154>
   1a5ec:	mov	r1, #32
   1a5f0:	mov	r2, r6
   1a5f4:	bl	12944 <memset@plt>
   1a5f8:	ldr	r0, [r4, #20]
   1a5fc:	ldr	r2, [r4, #44]	; 0x2c
   1a600:	mov	r1, #0
   1a604:	add	r0, r0, r6
   1a608:	str	r0, [r4, #20]
   1a60c:	mov	r0, r4
   1a610:	blx	r2
   1a614:	ldr	r1, [r4, #16]
   1a618:	ldr	r0, [r4, #20]
   1a61c:	sub	r5, r5, r6
   1a620:	sub	r6, r1, r0
   1a624:	cmp	r5, r6
   1a628:	bhi	1a5ec <flatcc_json_printer_double_vector_field@@Base+0x114>
   1a62c:	mov	r1, #32
   1a630:	mov	r2, r5
   1a634:	bl	12944 <memset@plt>
   1a638:	ldr	r0, [r4, #20]
   1a63c:	add	r0, r0, r5
   1a640:	str	r0, [r4, #20]
   1a644:	b	1a668 <flatcc_json_printer_double_vector_field@@Base+0x190>
   1a648:	ldr	r1, [r4, #16]
   1a64c:	cmp	r0, r1
   1a650:	bcc	1a668 <flatcc_json_printer_double_vector_field@@Base+0x190>
   1a654:	ldr	r2, [r4, #44]	; 0x2c
   1a658:	mov	r0, r4
   1a65c:	mov	r1, #0
   1a660:	blx	r2
   1a664:	ldr	r0, [r4, #20]
   1a668:	vldr	d0, [r8, #4]
   1a66c:	bl	13ee0 <flatcc_json_printer_fmt_float@@Base+0x8>
   1a670:	ldr	r1, [r4, #20]
   1a674:	subs	r9, r7, #1
   1a678:	add	r0, r1, r0
   1a67c:	str	r0, [r4, #20]
   1a680:	beq	1a7a8 <flatcc_json_printer_double_vector_field@@Base+0x2d0>
   1a684:	ldr	r0, [r4, #20]
   1a688:	add	r7, r8, #12
   1a68c:	mov	r8, #44	; 0x2c
   1a690:	mov	sl, #10
   1a694:	add	r1, r0, #1
   1a698:	sub	r9, r9, #1
   1a69c:	str	r1, [r4, #20]
   1a6a0:	strb	r8, [r0]
   1a6a4:	ldrb	r1, [r4, #25]
   1a6a8:	ldr	r0, [r4, #20]
   1a6ac:	cmp	r1, #0
   1a6b0:	beq	1a768 <flatcc_json_printer_double_vector_field@@Base+0x290>
   1a6b4:	add	r1, r0, #1
   1a6b8:	str	r1, [r4, #20]
   1a6bc:	strb	sl, [r0]
   1a6c0:	ldr	r0, [r4, #20]
   1a6c4:	ldrb	r2, [r4, #25]
   1a6c8:	ldr	r3, [r4, #32]
   1a6cc:	ldr	r1, [r4, #16]
   1a6d0:	mla	r6, r3, r2, r0
   1a6d4:	mul	r5, r3, r2
   1a6d8:	cmp	r6, r1
   1a6dc:	bls	1a74c <flatcc_json_printer_double_vector_field@@Base+0x274>
   1a6e0:	cmp	r0, r1
   1a6e4:	bcc	1a700 <flatcc_json_printer_double_vector_field@@Base+0x228>
   1a6e8:	ldr	r2, [r4, #44]	; 0x2c
   1a6ec:	mov	r0, r4
   1a6f0:	mov	r1, #0
   1a6f4:	blx	r2
   1a6f8:	ldr	r1, [r4, #16]
   1a6fc:	ldr	r0, [r4, #20]
   1a700:	sub	r6, r1, r0
   1a704:	cmp	r6, r5
   1a708:	bcs	1a74c <flatcc_json_printer_double_vector_field@@Base+0x274>
   1a70c:	mov	r1, #32
   1a710:	mov	r2, r6
   1a714:	bl	12944 <memset@plt>
   1a718:	ldr	r0, [r4, #20]
   1a71c:	ldr	r2, [r4, #44]	; 0x2c
   1a720:	mov	r1, #0
   1a724:	add	r0, r0, r6
   1a728:	str	r0, [r4, #20]
   1a72c:	mov	r0, r4
   1a730:	blx	r2
   1a734:	ldr	r1, [r4, #16]
   1a738:	ldr	r0, [r4, #20]
   1a73c:	sub	r5, r5, r6
   1a740:	sub	r6, r1, r0
   1a744:	cmp	r5, r6
   1a748:	bhi	1a70c <flatcc_json_printer_double_vector_field@@Base+0x234>
   1a74c:	mov	r1, #32
   1a750:	mov	r2, r5
   1a754:	bl	12944 <memset@plt>
   1a758:	ldr	r0, [r4, #20]
   1a75c:	add	r0, r0, r5
   1a760:	str	r0, [r4, #20]
   1a764:	b	1a788 <flatcc_json_printer_double_vector_field@@Base+0x2b0>
   1a768:	ldr	r1, [r4, #16]
   1a76c:	cmp	r0, r1
   1a770:	bcc	1a788 <flatcc_json_printer_double_vector_field@@Base+0x2b0>
   1a774:	ldr	r2, [r4, #44]	; 0x2c
   1a778:	mov	r0, r4
   1a77c:	mov	r1, #0
   1a780:	blx	r2
   1a784:	ldr	r0, [r4, #20]
   1a788:	vldr	d0, [r7]
   1a78c:	bl	13ee0 <flatcc_json_printer_fmt_float@@Base+0x8>
   1a790:	ldr	r1, [r4, #20]
   1a794:	add	r7, r7, #8
   1a798:	cmp	r9, #0
   1a79c:	add	r0, r1, r0
   1a7a0:	str	r0, [r4, #20]
   1a7a4:	bne	1a694 <flatcc_json_printer_double_vector_field@@Base+0x1bc>
   1a7a8:	ldrb	r1, [r4, #25]
   1a7ac:	ldr	r0, [r4, #20]
   1a7b0:	cmp	r1, #0
   1a7b4:	beq	1a874 <flatcc_json_printer_double_vector_field@@Base+0x39c>
   1a7b8:	add	r1, r0, #1
   1a7bc:	str	r1, [r4, #20]
   1a7c0:	mov	r1, #10
   1a7c4:	strb	r1, [r0]
   1a7c8:	ldr	r0, [r4, #32]
   1a7cc:	sub	r2, r0, #1
   1a7d0:	str	r2, [r4, #32]
   1a7d4:	ldrb	r3, [r4, #25]
   1a7d8:	ldr	r0, [r4, #20]
   1a7dc:	ldr	r1, [r4, #16]
   1a7e0:	mla	r7, r2, r3, r0
   1a7e4:	mul	r5, r2, r3
   1a7e8:	cmp	r7, r1
   1a7ec:	bls	1a85c <flatcc_json_printer_double_vector_field@@Base+0x384>
   1a7f0:	cmp	r0, r1
   1a7f4:	bcc	1a810 <flatcc_json_printer_double_vector_field@@Base+0x338>
   1a7f8:	ldr	r2, [r4, #44]	; 0x2c
   1a7fc:	mov	r0, r4
   1a800:	mov	r1, #0
   1a804:	blx	r2
   1a808:	ldr	r1, [r4, #16]
   1a80c:	ldr	r0, [r4, #20]
   1a810:	sub	r6, r1, r0
   1a814:	cmp	r6, r5
   1a818:	bcs	1a85c <flatcc_json_printer_double_vector_field@@Base+0x384>
   1a81c:	mov	r1, #32
   1a820:	mov	r2, r6
   1a824:	bl	12944 <memset@plt>
   1a828:	ldr	r0, [r4, #20]
   1a82c:	ldr	r2, [r4, #44]	; 0x2c
   1a830:	mov	r1, #0
   1a834:	add	r0, r0, r6
   1a838:	str	r0, [r4, #20]
   1a83c:	mov	r0, r4
   1a840:	blx	r2
   1a844:	ldr	r1, [r4, #16]
   1a848:	ldr	r0, [r4, #20]
   1a84c:	sub	r5, r5, r6
   1a850:	sub	r6, r1, r0
   1a854:	cmp	r5, r6
   1a858:	bhi	1a81c <flatcc_json_printer_double_vector_field@@Base+0x344>
   1a85c:	mov	r1, #32
   1a860:	mov	r2, r5
   1a864:	bl	12944 <memset@plt>
   1a868:	ldr	r0, [r4, #20]
   1a86c:	add	r0, r0, r5
   1a870:	str	r0, [r4, #20]
   1a874:	add	r1, r0, #1
   1a878:	str	r1, [r4, #20]
   1a87c:	mov	r1, #93	; 0x5d
   1a880:	strb	r1, [r0]
   1a884:	sub	sp, fp, #28
   1a888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a88c <flatcc_json_printer_utype_enum_vector_field@@Base>:
   1a88c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a890:	add	fp, sp, #28
   1a894:	sub	sp, sp, #4
   1a898:	mov	r4, r0
   1a89c:	ldrb	r0, [r0, #27]
   1a8a0:	cmp	r0, #0
   1a8a4:	beq	1a8b8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   1a8a8:	mov	r0, r4
   1a8ac:	sub	sp, fp, #28
   1a8b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a8b4:	b	17acc <flatcc_json_printer_utype_vector_field@@Base>
   1a8b8:	mov	r0, #4
   1a8bc:	add	r0, r0, r2, lsl #1
   1a8c0:	ldr	r2, [r1, #8]
   1a8c4:	cmp	r0, r2
   1a8c8:	bge	1ac3c <flatcc_json_printer_utype_enum_vector_field@@Base+0x3b0>
   1a8cc:	ldr	r2, [r1, #4]
   1a8d0:	add	r0, r2, r0
   1a8d4:	ldrh	r0, [r0]
   1a8d8:	cmp	r0, #0
   1a8dc:	ldrne	r2, [r1]
   1a8e0:	addsne	r8, r2, r0
   1a8e4:	beq	1ac3c <flatcc_json_printer_utype_enum_vector_field@@Base+0x3b0>
   1a8e8:	ldr	r0, [r1, #16]
   1a8ec:	ldr	sl, [fp, #12]
   1a8f0:	ldr	r2, [fp, #8]
   1a8f4:	add	r7, r0, #1
   1a8f8:	cmp	r0, #0
   1a8fc:	str	r7, [r1, #16]
   1a900:	beq	1a918 <flatcc_json_printer_utype_enum_vector_field@@Base+0x8c>
   1a904:	ldr	r0, [r4, #20]
   1a908:	add	r1, r0, #1
   1a90c:	str	r1, [r4, #20]
   1a910:	mov	r1, #44	; 0x2c
   1a914:	strb	r1, [r0]
   1a918:	ldr	r0, [r8]
   1a91c:	mov	r1, r3
   1a920:	ldr	r9, [r8, r0]!
   1a924:	mov	r0, r4
   1a928:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1a92c:	ldr	r1, [r4, #32]
   1a930:	ldr	r0, [r4, #20]
   1a934:	cmp	r9, #0
   1a938:	add	r1, r1, #1
   1a93c:	str	r1, [r4, #32]
   1a940:	add	r1, r0, #1
   1a944:	str	r1, [r4, #20]
   1a948:	mov	r1, #91	; 0x5b
   1a94c:	strb	r1, [r0]
   1a950:	beq	1ab60 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d4>
   1a954:	ldrb	r1, [r4, #25]
   1a958:	ldr	r0, [r4, #20]
   1a95c:	cmp	r1, #0
   1a960:	beq	1aa1c <flatcc_json_printer_utype_enum_vector_field@@Base+0x190>
   1a964:	add	r1, r0, #1
   1a968:	str	r1, [r4, #20]
   1a96c:	mov	r1, #10
   1a970:	strb	r1, [r0]
   1a974:	ldr	r0, [r4, #20]
   1a978:	ldrb	r2, [r4, #25]
   1a97c:	ldr	r3, [r4, #32]
   1a980:	ldr	r1, [r4, #16]
   1a984:	mla	r7, r3, r2, r0
   1a988:	mul	r5, r3, r2
   1a98c:	cmp	r7, r1
   1a990:	bls	1aa00 <flatcc_json_printer_utype_enum_vector_field@@Base+0x174>
   1a994:	cmp	r0, r1
   1a998:	bcc	1a9b4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x128>
   1a99c:	ldr	r2, [r4, #44]	; 0x2c
   1a9a0:	mov	r0, r4
   1a9a4:	mov	r1, #0
   1a9a8:	blx	r2
   1a9ac:	ldr	r1, [r4, #16]
   1a9b0:	ldr	r0, [r4, #20]
   1a9b4:	sub	r6, r1, r0
   1a9b8:	cmp	r6, r5
   1a9bc:	bcs	1aa00 <flatcc_json_printer_utype_enum_vector_field@@Base+0x174>
   1a9c0:	mov	r1, #32
   1a9c4:	mov	r2, r6
   1a9c8:	bl	12944 <memset@plt>
   1a9cc:	ldr	r0, [r4, #20]
   1a9d0:	ldr	r2, [r4, #44]	; 0x2c
   1a9d4:	mov	r1, #0
   1a9d8:	add	r0, r0, r6
   1a9dc:	str	r0, [r4, #20]
   1a9e0:	mov	r0, r4
   1a9e4:	blx	r2
   1a9e8:	ldr	r1, [r4, #16]
   1a9ec:	ldr	r0, [r4, #20]
   1a9f0:	sub	r5, r5, r6
   1a9f4:	sub	r6, r1, r0
   1a9f8:	cmp	r5, r6
   1a9fc:	bhi	1a9c0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x134>
   1aa00:	mov	r1, #32
   1aa04:	mov	r2, r5
   1aa08:	bl	12944 <memset@plt>
   1aa0c:	ldr	r0, [r4, #20]
   1aa10:	add	r0, r0, r5
   1aa14:	str	r0, [r4, #20]
   1aa18:	b	1aa38 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ac>
   1aa1c:	ldr	r1, [r4, #16]
   1aa20:	cmp	r0, r1
   1aa24:	bcc	1aa38 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ac>
   1aa28:	ldr	r2, [r4, #44]	; 0x2c
   1aa2c:	mov	r0, r4
   1aa30:	mov	r1, #0
   1aa34:	blx	r2
   1aa38:	ldrb	r1, [r8, #4]
   1aa3c:	mov	r0, r4
   1aa40:	blx	sl
   1aa44:	subs	r9, r9, #1
   1aa48:	beq	1ab60 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d4>
   1aa4c:	add	r7, r8, #5
   1aa50:	mov	r8, #44	; 0x2c
   1aa54:	ldr	r0, [r4, #20]
   1aa58:	sub	r9, r9, #1
   1aa5c:	add	r1, r0, #1
   1aa60:	str	r1, [r4, #20]
   1aa64:	strb	r8, [r0]
   1aa68:	ldrb	r1, [r4, #25]
   1aa6c:	ldr	r0, [r4, #20]
   1aa70:	cmp	r1, #0
   1aa74:	beq	1ab30 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a4>
   1aa78:	add	r1, r0, #1
   1aa7c:	str	r1, [r4, #20]
   1aa80:	mov	r1, #10
   1aa84:	strb	r1, [r0]
   1aa88:	ldr	r0, [r4, #20]
   1aa8c:	ldrb	r2, [r4, #25]
   1aa90:	ldr	r3, [r4, #32]
   1aa94:	ldr	r1, [r4, #16]
   1aa98:	mla	r6, r3, r2, r0
   1aa9c:	mul	r5, r3, r2
   1aaa0:	cmp	r6, r1
   1aaa4:	bls	1ab14 <flatcc_json_printer_utype_enum_vector_field@@Base+0x288>
   1aaa8:	cmp	r0, r1
   1aaac:	bcc	1aac8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x23c>
   1aab0:	ldr	r2, [r4, #44]	; 0x2c
   1aab4:	mov	r0, r4
   1aab8:	mov	r1, #0
   1aabc:	blx	r2
   1aac0:	ldr	r1, [r4, #16]
   1aac4:	ldr	r0, [r4, #20]
   1aac8:	sub	r6, r1, r0
   1aacc:	cmp	r6, r5
   1aad0:	bcs	1ab14 <flatcc_json_printer_utype_enum_vector_field@@Base+0x288>
   1aad4:	mov	r1, #32
   1aad8:	mov	r2, r6
   1aadc:	bl	12944 <memset@plt>
   1aae0:	ldr	r0, [r4, #20]
   1aae4:	ldr	r2, [r4, #44]	; 0x2c
   1aae8:	mov	r1, #0
   1aaec:	add	r0, r0, r6
   1aaf0:	str	r0, [r4, #20]
   1aaf4:	mov	r0, r4
   1aaf8:	blx	r2
   1aafc:	ldr	r1, [r4, #16]
   1ab00:	ldr	r0, [r4, #20]
   1ab04:	sub	r5, r5, r6
   1ab08:	sub	r6, r1, r0
   1ab0c:	cmp	r5, r6
   1ab10:	bhi	1aad4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x248>
   1ab14:	mov	r1, #32
   1ab18:	mov	r2, r5
   1ab1c:	bl	12944 <memset@plt>
   1ab20:	ldr	r0, [r4, #20]
   1ab24:	add	r0, r0, r5
   1ab28:	str	r0, [r4, #20]
   1ab2c:	b	1ab4c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c0>
   1ab30:	ldr	r1, [r4, #16]
   1ab34:	cmp	r0, r1
   1ab38:	bcc	1ab4c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c0>
   1ab3c:	ldr	r2, [r4, #44]	; 0x2c
   1ab40:	mov	r0, r4
   1ab44:	mov	r1, #0
   1ab48:	blx	r2
   1ab4c:	ldrb	r1, [r7], #1
   1ab50:	mov	r0, r4
   1ab54:	blx	sl
   1ab58:	cmp	r9, #0
   1ab5c:	bne	1aa54 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1c8>
   1ab60:	ldrb	r1, [r4, #25]
   1ab64:	ldr	r0, [r4, #20]
   1ab68:	cmp	r1, #0
   1ab6c:	beq	1ac2c <flatcc_json_printer_utype_enum_vector_field@@Base+0x3a0>
   1ab70:	add	r1, r0, #1
   1ab74:	str	r1, [r4, #20]
   1ab78:	mov	r1, #10
   1ab7c:	strb	r1, [r0]
   1ab80:	ldr	r0, [r4, #32]
   1ab84:	sub	r2, r0, #1
   1ab88:	str	r2, [r4, #32]
   1ab8c:	ldrb	r3, [r4, #25]
   1ab90:	ldr	r0, [r4, #20]
   1ab94:	ldr	r1, [r4, #16]
   1ab98:	mla	r7, r2, r3, r0
   1ab9c:	mul	r5, r2, r3
   1aba0:	cmp	r7, r1
   1aba4:	bls	1ac14 <flatcc_json_printer_utype_enum_vector_field@@Base+0x388>
   1aba8:	cmp	r0, r1
   1abac:	bcc	1abc8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x33c>
   1abb0:	ldr	r2, [r4, #44]	; 0x2c
   1abb4:	mov	r0, r4
   1abb8:	mov	r1, #0
   1abbc:	blx	r2
   1abc0:	ldr	r1, [r4, #16]
   1abc4:	ldr	r0, [r4, #20]
   1abc8:	sub	r6, r1, r0
   1abcc:	cmp	r6, r5
   1abd0:	bcs	1ac14 <flatcc_json_printer_utype_enum_vector_field@@Base+0x388>
   1abd4:	mov	r1, #32
   1abd8:	mov	r2, r6
   1abdc:	bl	12944 <memset@plt>
   1abe0:	ldr	r0, [r4, #20]
   1abe4:	ldr	r2, [r4, #44]	; 0x2c
   1abe8:	mov	r1, #0
   1abec:	add	r0, r0, r6
   1abf0:	str	r0, [r4, #20]
   1abf4:	mov	r0, r4
   1abf8:	blx	r2
   1abfc:	ldr	r1, [r4, #16]
   1ac00:	ldr	r0, [r4, #20]
   1ac04:	sub	r5, r5, r6
   1ac08:	sub	r6, r1, r0
   1ac0c:	cmp	r5, r6
   1ac10:	bhi	1abd4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x348>
   1ac14:	mov	r1, #32
   1ac18:	mov	r2, r5
   1ac1c:	bl	12944 <memset@plt>
   1ac20:	ldr	r0, [r4, #20]
   1ac24:	add	r0, r0, r5
   1ac28:	str	r0, [r4, #20]
   1ac2c:	add	r1, r0, #1
   1ac30:	str	r1, [r4, #20]
   1ac34:	mov	r1, #93	; 0x5d
   1ac38:	strb	r1, [r0]
   1ac3c:	sub	sp, fp, #28
   1ac40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ac44 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   1ac44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac48:	add	fp, sp, #28
   1ac4c:	sub	sp, sp, #4
   1ac50:	mov	r4, r0
   1ac54:	ldrb	r0, [r0, #27]
   1ac58:	cmp	r0, #0
   1ac5c:	beq	1ac70 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   1ac60:	mov	r0, r4
   1ac64:	sub	sp, fp, #28
   1ac68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac6c:	b	17e7c <flatcc_json_printer_uint8_vector_field@@Base>
   1ac70:	mov	r0, #4
   1ac74:	add	r0, r0, r2, lsl #1
   1ac78:	ldr	r2, [r1, #8]
   1ac7c:	cmp	r0, r2
   1ac80:	bge	1aff4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3b0>
   1ac84:	ldr	r2, [r1, #4]
   1ac88:	add	r0, r2, r0
   1ac8c:	ldrh	r0, [r0]
   1ac90:	cmp	r0, #0
   1ac94:	ldrne	r2, [r1]
   1ac98:	addsne	r8, r2, r0
   1ac9c:	beq	1aff4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3b0>
   1aca0:	ldr	r0, [r1, #16]
   1aca4:	ldr	sl, [fp, #12]
   1aca8:	ldr	r2, [fp, #8]
   1acac:	add	r7, r0, #1
   1acb0:	cmp	r0, #0
   1acb4:	str	r7, [r1, #16]
   1acb8:	beq	1acd0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x8c>
   1acbc:	ldr	r0, [r4, #20]
   1acc0:	add	r1, r0, #1
   1acc4:	str	r1, [r4, #20]
   1acc8:	mov	r1, #44	; 0x2c
   1accc:	strb	r1, [r0]
   1acd0:	ldr	r0, [r8]
   1acd4:	mov	r1, r3
   1acd8:	ldr	r9, [r8, r0]!
   1acdc:	mov	r0, r4
   1ace0:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1ace4:	ldr	r1, [r4, #32]
   1ace8:	ldr	r0, [r4, #20]
   1acec:	cmp	r9, #0
   1acf0:	add	r1, r1, #1
   1acf4:	str	r1, [r4, #32]
   1acf8:	add	r1, r0, #1
   1acfc:	str	r1, [r4, #20]
   1ad00:	mov	r1, #91	; 0x5b
   1ad04:	strb	r1, [r0]
   1ad08:	beq	1af18 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d4>
   1ad0c:	ldrb	r1, [r4, #25]
   1ad10:	ldr	r0, [r4, #20]
   1ad14:	cmp	r1, #0
   1ad18:	beq	1add4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x190>
   1ad1c:	add	r1, r0, #1
   1ad20:	str	r1, [r4, #20]
   1ad24:	mov	r1, #10
   1ad28:	strb	r1, [r0]
   1ad2c:	ldr	r0, [r4, #20]
   1ad30:	ldrb	r2, [r4, #25]
   1ad34:	ldr	r3, [r4, #32]
   1ad38:	ldr	r1, [r4, #16]
   1ad3c:	mla	r7, r3, r2, r0
   1ad40:	mul	r5, r3, r2
   1ad44:	cmp	r7, r1
   1ad48:	bls	1adb8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x174>
   1ad4c:	cmp	r0, r1
   1ad50:	bcc	1ad6c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x128>
   1ad54:	ldr	r2, [r4, #44]	; 0x2c
   1ad58:	mov	r0, r4
   1ad5c:	mov	r1, #0
   1ad60:	blx	r2
   1ad64:	ldr	r1, [r4, #16]
   1ad68:	ldr	r0, [r4, #20]
   1ad6c:	sub	r6, r1, r0
   1ad70:	cmp	r6, r5
   1ad74:	bcs	1adb8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x174>
   1ad78:	mov	r1, #32
   1ad7c:	mov	r2, r6
   1ad80:	bl	12944 <memset@plt>
   1ad84:	ldr	r0, [r4, #20]
   1ad88:	ldr	r2, [r4, #44]	; 0x2c
   1ad8c:	mov	r1, #0
   1ad90:	add	r0, r0, r6
   1ad94:	str	r0, [r4, #20]
   1ad98:	mov	r0, r4
   1ad9c:	blx	r2
   1ada0:	ldr	r1, [r4, #16]
   1ada4:	ldr	r0, [r4, #20]
   1ada8:	sub	r5, r5, r6
   1adac:	sub	r6, r1, r0
   1adb0:	cmp	r5, r6
   1adb4:	bhi	1ad78 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x134>
   1adb8:	mov	r1, #32
   1adbc:	mov	r2, r5
   1adc0:	bl	12944 <memset@plt>
   1adc4:	ldr	r0, [r4, #20]
   1adc8:	add	r0, r0, r5
   1adcc:	str	r0, [r4, #20]
   1add0:	b	1adf0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ac>
   1add4:	ldr	r1, [r4, #16]
   1add8:	cmp	r0, r1
   1addc:	bcc	1adf0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ac>
   1ade0:	ldr	r2, [r4, #44]	; 0x2c
   1ade4:	mov	r0, r4
   1ade8:	mov	r1, #0
   1adec:	blx	r2
   1adf0:	ldrb	r1, [r8, #4]
   1adf4:	mov	r0, r4
   1adf8:	blx	sl
   1adfc:	subs	r9, r9, #1
   1ae00:	beq	1af18 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d4>
   1ae04:	add	r7, r8, #5
   1ae08:	mov	r8, #44	; 0x2c
   1ae0c:	ldr	r0, [r4, #20]
   1ae10:	sub	r9, r9, #1
   1ae14:	add	r1, r0, #1
   1ae18:	str	r1, [r4, #20]
   1ae1c:	strb	r8, [r0]
   1ae20:	ldrb	r1, [r4, #25]
   1ae24:	ldr	r0, [r4, #20]
   1ae28:	cmp	r1, #0
   1ae2c:	beq	1aee8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a4>
   1ae30:	add	r1, r0, #1
   1ae34:	str	r1, [r4, #20]
   1ae38:	mov	r1, #10
   1ae3c:	strb	r1, [r0]
   1ae40:	ldr	r0, [r4, #20]
   1ae44:	ldrb	r2, [r4, #25]
   1ae48:	ldr	r3, [r4, #32]
   1ae4c:	ldr	r1, [r4, #16]
   1ae50:	mla	r6, r3, r2, r0
   1ae54:	mul	r5, r3, r2
   1ae58:	cmp	r6, r1
   1ae5c:	bls	1aecc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x288>
   1ae60:	cmp	r0, r1
   1ae64:	bcc	1ae80 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x23c>
   1ae68:	ldr	r2, [r4, #44]	; 0x2c
   1ae6c:	mov	r0, r4
   1ae70:	mov	r1, #0
   1ae74:	blx	r2
   1ae78:	ldr	r1, [r4, #16]
   1ae7c:	ldr	r0, [r4, #20]
   1ae80:	sub	r6, r1, r0
   1ae84:	cmp	r6, r5
   1ae88:	bcs	1aecc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x288>
   1ae8c:	mov	r1, #32
   1ae90:	mov	r2, r6
   1ae94:	bl	12944 <memset@plt>
   1ae98:	ldr	r0, [r4, #20]
   1ae9c:	ldr	r2, [r4, #44]	; 0x2c
   1aea0:	mov	r1, #0
   1aea4:	add	r0, r0, r6
   1aea8:	str	r0, [r4, #20]
   1aeac:	mov	r0, r4
   1aeb0:	blx	r2
   1aeb4:	ldr	r1, [r4, #16]
   1aeb8:	ldr	r0, [r4, #20]
   1aebc:	sub	r5, r5, r6
   1aec0:	sub	r6, r1, r0
   1aec4:	cmp	r5, r6
   1aec8:	bhi	1ae8c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x248>
   1aecc:	mov	r1, #32
   1aed0:	mov	r2, r5
   1aed4:	bl	12944 <memset@plt>
   1aed8:	ldr	r0, [r4, #20]
   1aedc:	add	r0, r0, r5
   1aee0:	str	r0, [r4, #20]
   1aee4:	b	1af04 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c0>
   1aee8:	ldr	r1, [r4, #16]
   1aeec:	cmp	r0, r1
   1aef0:	bcc	1af04 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c0>
   1aef4:	ldr	r2, [r4, #44]	; 0x2c
   1aef8:	mov	r0, r4
   1aefc:	mov	r1, #0
   1af00:	blx	r2
   1af04:	ldrb	r1, [r7], #1
   1af08:	mov	r0, r4
   1af0c:	blx	sl
   1af10:	cmp	r9, #0
   1af14:	bne	1ae0c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1c8>
   1af18:	ldrb	r1, [r4, #25]
   1af1c:	ldr	r0, [r4, #20]
   1af20:	cmp	r1, #0
   1af24:	beq	1afe4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3a0>
   1af28:	add	r1, r0, #1
   1af2c:	str	r1, [r4, #20]
   1af30:	mov	r1, #10
   1af34:	strb	r1, [r0]
   1af38:	ldr	r0, [r4, #32]
   1af3c:	sub	r2, r0, #1
   1af40:	str	r2, [r4, #32]
   1af44:	ldrb	r3, [r4, #25]
   1af48:	ldr	r0, [r4, #20]
   1af4c:	ldr	r1, [r4, #16]
   1af50:	mla	r7, r2, r3, r0
   1af54:	mul	r5, r2, r3
   1af58:	cmp	r7, r1
   1af5c:	bls	1afcc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x388>
   1af60:	cmp	r0, r1
   1af64:	bcc	1af80 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x33c>
   1af68:	ldr	r2, [r4, #44]	; 0x2c
   1af6c:	mov	r0, r4
   1af70:	mov	r1, #0
   1af74:	blx	r2
   1af78:	ldr	r1, [r4, #16]
   1af7c:	ldr	r0, [r4, #20]
   1af80:	sub	r6, r1, r0
   1af84:	cmp	r6, r5
   1af88:	bcs	1afcc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x388>
   1af8c:	mov	r1, #32
   1af90:	mov	r2, r6
   1af94:	bl	12944 <memset@plt>
   1af98:	ldr	r0, [r4, #20]
   1af9c:	ldr	r2, [r4, #44]	; 0x2c
   1afa0:	mov	r1, #0
   1afa4:	add	r0, r0, r6
   1afa8:	str	r0, [r4, #20]
   1afac:	mov	r0, r4
   1afb0:	blx	r2
   1afb4:	ldr	r1, [r4, #16]
   1afb8:	ldr	r0, [r4, #20]
   1afbc:	sub	r5, r5, r6
   1afc0:	sub	r6, r1, r0
   1afc4:	cmp	r5, r6
   1afc8:	bhi	1af8c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x348>
   1afcc:	mov	r1, #32
   1afd0:	mov	r2, r5
   1afd4:	bl	12944 <memset@plt>
   1afd8:	ldr	r0, [r4, #20]
   1afdc:	add	r0, r0, r5
   1afe0:	str	r0, [r4, #20]
   1afe4:	add	r1, r0, #1
   1afe8:	str	r1, [r4, #20]
   1afec:	mov	r1, #93	; 0x5d
   1aff0:	strb	r1, [r0]
   1aff4:	sub	sp, fp, #28
   1aff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001affc <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   1affc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b000:	add	fp, sp, #28
   1b004:	sub	sp, sp, #4
   1b008:	mov	r4, r0
   1b00c:	ldrb	r0, [r0, #27]
   1b010:	cmp	r0, #0
   1b014:	beq	1b028 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   1b018:	mov	r0, r4
   1b01c:	sub	sp, fp, #28
   1b020:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b024:	b	1822c <flatcc_json_printer_uint16_vector_field@@Base>
   1b028:	mov	r0, #4
   1b02c:	add	r0, r0, r2, lsl #1
   1b030:	ldr	r2, [r1, #8]
   1b034:	cmp	r0, r2
   1b038:	bge	1b3ac <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3b0>
   1b03c:	ldr	r2, [r1, #4]
   1b040:	add	r0, r2, r0
   1b044:	ldrh	r0, [r0]
   1b048:	cmp	r0, #0
   1b04c:	ldrne	r2, [r1]
   1b050:	addsne	r8, r2, r0
   1b054:	beq	1b3ac <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3b0>
   1b058:	ldr	r0, [r1, #16]
   1b05c:	ldr	sl, [fp, #12]
   1b060:	ldr	r2, [fp, #8]
   1b064:	add	r7, r0, #1
   1b068:	cmp	r0, #0
   1b06c:	str	r7, [r1, #16]
   1b070:	beq	1b088 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x8c>
   1b074:	ldr	r0, [r4, #20]
   1b078:	add	r1, r0, #1
   1b07c:	str	r1, [r4, #20]
   1b080:	mov	r1, #44	; 0x2c
   1b084:	strb	r1, [r0]
   1b088:	ldr	r0, [r8]
   1b08c:	mov	r1, r3
   1b090:	ldr	r9, [r8, r0]!
   1b094:	mov	r0, r4
   1b098:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1b09c:	ldr	r1, [r4, #32]
   1b0a0:	ldr	r0, [r4, #20]
   1b0a4:	cmp	r9, #0
   1b0a8:	add	r1, r1, #1
   1b0ac:	str	r1, [r4, #32]
   1b0b0:	add	r1, r0, #1
   1b0b4:	str	r1, [r4, #20]
   1b0b8:	mov	r1, #91	; 0x5b
   1b0bc:	strb	r1, [r0]
   1b0c0:	beq	1b2d0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d4>
   1b0c4:	ldrb	r1, [r4, #25]
   1b0c8:	ldr	r0, [r4, #20]
   1b0cc:	cmp	r1, #0
   1b0d0:	beq	1b18c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x190>
   1b0d4:	add	r1, r0, #1
   1b0d8:	str	r1, [r4, #20]
   1b0dc:	mov	r1, #10
   1b0e0:	strb	r1, [r0]
   1b0e4:	ldr	r0, [r4, #20]
   1b0e8:	ldrb	r2, [r4, #25]
   1b0ec:	ldr	r3, [r4, #32]
   1b0f0:	ldr	r1, [r4, #16]
   1b0f4:	mla	r7, r3, r2, r0
   1b0f8:	mul	r5, r3, r2
   1b0fc:	cmp	r7, r1
   1b100:	bls	1b170 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x174>
   1b104:	cmp	r0, r1
   1b108:	bcc	1b124 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x128>
   1b10c:	ldr	r2, [r4, #44]	; 0x2c
   1b110:	mov	r0, r4
   1b114:	mov	r1, #0
   1b118:	blx	r2
   1b11c:	ldr	r1, [r4, #16]
   1b120:	ldr	r0, [r4, #20]
   1b124:	sub	r6, r1, r0
   1b128:	cmp	r6, r5
   1b12c:	bcs	1b170 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x174>
   1b130:	mov	r1, #32
   1b134:	mov	r2, r6
   1b138:	bl	12944 <memset@plt>
   1b13c:	ldr	r0, [r4, #20]
   1b140:	ldr	r2, [r4, #44]	; 0x2c
   1b144:	mov	r1, #0
   1b148:	add	r0, r0, r6
   1b14c:	str	r0, [r4, #20]
   1b150:	mov	r0, r4
   1b154:	blx	r2
   1b158:	ldr	r1, [r4, #16]
   1b15c:	ldr	r0, [r4, #20]
   1b160:	sub	r5, r5, r6
   1b164:	sub	r6, r1, r0
   1b168:	cmp	r5, r6
   1b16c:	bhi	1b130 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x134>
   1b170:	mov	r1, #32
   1b174:	mov	r2, r5
   1b178:	bl	12944 <memset@plt>
   1b17c:	ldr	r0, [r4, #20]
   1b180:	add	r0, r0, r5
   1b184:	str	r0, [r4, #20]
   1b188:	b	1b1a8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ac>
   1b18c:	ldr	r1, [r4, #16]
   1b190:	cmp	r0, r1
   1b194:	bcc	1b1a8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ac>
   1b198:	ldr	r2, [r4, #44]	; 0x2c
   1b19c:	mov	r0, r4
   1b1a0:	mov	r1, #0
   1b1a4:	blx	r2
   1b1a8:	ldrh	r1, [r8, #4]
   1b1ac:	mov	r0, r4
   1b1b0:	blx	sl
   1b1b4:	subs	r9, r9, #1
   1b1b8:	beq	1b2d0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d4>
   1b1bc:	add	r7, r8, #6
   1b1c0:	mov	r8, #44	; 0x2c
   1b1c4:	ldr	r0, [r4, #20]
   1b1c8:	sub	r9, r9, #1
   1b1cc:	add	r1, r0, #1
   1b1d0:	str	r1, [r4, #20]
   1b1d4:	strb	r8, [r0]
   1b1d8:	ldrb	r1, [r4, #25]
   1b1dc:	ldr	r0, [r4, #20]
   1b1e0:	cmp	r1, #0
   1b1e4:	beq	1b2a0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a4>
   1b1e8:	add	r1, r0, #1
   1b1ec:	str	r1, [r4, #20]
   1b1f0:	mov	r1, #10
   1b1f4:	strb	r1, [r0]
   1b1f8:	ldr	r0, [r4, #20]
   1b1fc:	ldrb	r2, [r4, #25]
   1b200:	ldr	r3, [r4, #32]
   1b204:	ldr	r1, [r4, #16]
   1b208:	mla	r6, r3, r2, r0
   1b20c:	mul	r5, r3, r2
   1b210:	cmp	r6, r1
   1b214:	bls	1b284 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x288>
   1b218:	cmp	r0, r1
   1b21c:	bcc	1b238 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x23c>
   1b220:	ldr	r2, [r4, #44]	; 0x2c
   1b224:	mov	r0, r4
   1b228:	mov	r1, #0
   1b22c:	blx	r2
   1b230:	ldr	r1, [r4, #16]
   1b234:	ldr	r0, [r4, #20]
   1b238:	sub	r6, r1, r0
   1b23c:	cmp	r6, r5
   1b240:	bcs	1b284 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x288>
   1b244:	mov	r1, #32
   1b248:	mov	r2, r6
   1b24c:	bl	12944 <memset@plt>
   1b250:	ldr	r0, [r4, #20]
   1b254:	ldr	r2, [r4, #44]	; 0x2c
   1b258:	mov	r1, #0
   1b25c:	add	r0, r0, r6
   1b260:	str	r0, [r4, #20]
   1b264:	mov	r0, r4
   1b268:	blx	r2
   1b26c:	ldr	r1, [r4, #16]
   1b270:	ldr	r0, [r4, #20]
   1b274:	sub	r5, r5, r6
   1b278:	sub	r6, r1, r0
   1b27c:	cmp	r5, r6
   1b280:	bhi	1b244 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x248>
   1b284:	mov	r1, #32
   1b288:	mov	r2, r5
   1b28c:	bl	12944 <memset@plt>
   1b290:	ldr	r0, [r4, #20]
   1b294:	add	r0, r0, r5
   1b298:	str	r0, [r4, #20]
   1b29c:	b	1b2bc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c0>
   1b2a0:	ldr	r1, [r4, #16]
   1b2a4:	cmp	r0, r1
   1b2a8:	bcc	1b2bc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c0>
   1b2ac:	ldr	r2, [r4, #44]	; 0x2c
   1b2b0:	mov	r0, r4
   1b2b4:	mov	r1, #0
   1b2b8:	blx	r2
   1b2bc:	ldrh	r1, [r7], #2
   1b2c0:	mov	r0, r4
   1b2c4:	blx	sl
   1b2c8:	cmp	r9, #0
   1b2cc:	bne	1b1c4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c8>
   1b2d0:	ldrb	r1, [r4, #25]
   1b2d4:	ldr	r0, [r4, #20]
   1b2d8:	cmp	r1, #0
   1b2dc:	beq	1b39c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3a0>
   1b2e0:	add	r1, r0, #1
   1b2e4:	str	r1, [r4, #20]
   1b2e8:	mov	r1, #10
   1b2ec:	strb	r1, [r0]
   1b2f0:	ldr	r0, [r4, #32]
   1b2f4:	sub	r2, r0, #1
   1b2f8:	str	r2, [r4, #32]
   1b2fc:	ldrb	r3, [r4, #25]
   1b300:	ldr	r0, [r4, #20]
   1b304:	ldr	r1, [r4, #16]
   1b308:	mla	r7, r2, r3, r0
   1b30c:	mul	r5, r2, r3
   1b310:	cmp	r7, r1
   1b314:	bls	1b384 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x388>
   1b318:	cmp	r0, r1
   1b31c:	bcc	1b338 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x33c>
   1b320:	ldr	r2, [r4, #44]	; 0x2c
   1b324:	mov	r0, r4
   1b328:	mov	r1, #0
   1b32c:	blx	r2
   1b330:	ldr	r1, [r4, #16]
   1b334:	ldr	r0, [r4, #20]
   1b338:	sub	r6, r1, r0
   1b33c:	cmp	r6, r5
   1b340:	bcs	1b384 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x388>
   1b344:	mov	r1, #32
   1b348:	mov	r2, r6
   1b34c:	bl	12944 <memset@plt>
   1b350:	ldr	r0, [r4, #20]
   1b354:	ldr	r2, [r4, #44]	; 0x2c
   1b358:	mov	r1, #0
   1b35c:	add	r0, r0, r6
   1b360:	str	r0, [r4, #20]
   1b364:	mov	r0, r4
   1b368:	blx	r2
   1b36c:	ldr	r1, [r4, #16]
   1b370:	ldr	r0, [r4, #20]
   1b374:	sub	r5, r5, r6
   1b378:	sub	r6, r1, r0
   1b37c:	cmp	r5, r6
   1b380:	bhi	1b344 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x348>
   1b384:	mov	r1, #32
   1b388:	mov	r2, r5
   1b38c:	bl	12944 <memset@plt>
   1b390:	ldr	r0, [r4, #20]
   1b394:	add	r0, r0, r5
   1b398:	str	r0, [r4, #20]
   1b39c:	add	r1, r0, #1
   1b3a0:	str	r1, [r4, #20]
   1b3a4:	mov	r1, #93	; 0x5d
   1b3a8:	strb	r1, [r0]
   1b3ac:	sub	sp, fp, #28
   1b3b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b3b4 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   1b3b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b3b8:	add	fp, sp, #28
   1b3bc:	sub	sp, sp, #4
   1b3c0:	mov	r4, r0
   1b3c4:	ldrb	r0, [r0, #27]
   1b3c8:	cmp	r0, #0
   1b3cc:	beq	1b3e0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   1b3d0:	mov	r0, r4
   1b3d4:	sub	sp, fp, #28
   1b3d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b3dc:	b	185dc <flatcc_json_printer_uint32_vector_field@@Base>
   1b3e0:	mov	r0, #4
   1b3e4:	add	r0, r0, r2, lsl #1
   1b3e8:	ldr	r2, [r1, #8]
   1b3ec:	cmp	r0, r2
   1b3f0:	bge	1b764 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3b0>
   1b3f4:	ldr	r2, [r1, #4]
   1b3f8:	add	r0, r2, r0
   1b3fc:	ldrh	r0, [r0]
   1b400:	cmp	r0, #0
   1b404:	ldrne	r2, [r1]
   1b408:	addsne	r8, r2, r0
   1b40c:	beq	1b764 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3b0>
   1b410:	ldr	r0, [r1, #16]
   1b414:	ldr	sl, [fp, #12]
   1b418:	ldr	r2, [fp, #8]
   1b41c:	add	r7, r0, #1
   1b420:	cmp	r0, #0
   1b424:	str	r7, [r1, #16]
   1b428:	beq	1b440 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x8c>
   1b42c:	ldr	r0, [r4, #20]
   1b430:	add	r1, r0, #1
   1b434:	str	r1, [r4, #20]
   1b438:	mov	r1, #44	; 0x2c
   1b43c:	strb	r1, [r0]
   1b440:	ldr	r0, [r8]
   1b444:	mov	r1, r3
   1b448:	ldr	r9, [r8, r0]!
   1b44c:	mov	r0, r4
   1b450:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1b454:	ldr	r1, [r4, #32]
   1b458:	ldr	r0, [r4, #20]
   1b45c:	cmp	r9, #0
   1b460:	add	r1, r1, #1
   1b464:	str	r1, [r4, #32]
   1b468:	add	r1, r0, #1
   1b46c:	str	r1, [r4, #20]
   1b470:	mov	r1, #91	; 0x5b
   1b474:	strb	r1, [r0]
   1b478:	beq	1b688 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d4>
   1b47c:	ldrb	r1, [r4, #25]
   1b480:	ldr	r0, [r4, #20]
   1b484:	cmp	r1, #0
   1b488:	beq	1b544 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x190>
   1b48c:	add	r1, r0, #1
   1b490:	str	r1, [r4, #20]
   1b494:	mov	r1, #10
   1b498:	strb	r1, [r0]
   1b49c:	ldr	r0, [r4, #20]
   1b4a0:	ldrb	r2, [r4, #25]
   1b4a4:	ldr	r3, [r4, #32]
   1b4a8:	ldr	r1, [r4, #16]
   1b4ac:	mla	r7, r3, r2, r0
   1b4b0:	mul	r5, r3, r2
   1b4b4:	cmp	r7, r1
   1b4b8:	bls	1b528 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x174>
   1b4bc:	cmp	r0, r1
   1b4c0:	bcc	1b4dc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x128>
   1b4c4:	ldr	r2, [r4, #44]	; 0x2c
   1b4c8:	mov	r0, r4
   1b4cc:	mov	r1, #0
   1b4d0:	blx	r2
   1b4d4:	ldr	r1, [r4, #16]
   1b4d8:	ldr	r0, [r4, #20]
   1b4dc:	sub	r6, r1, r0
   1b4e0:	cmp	r6, r5
   1b4e4:	bcs	1b528 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x174>
   1b4e8:	mov	r1, #32
   1b4ec:	mov	r2, r6
   1b4f0:	bl	12944 <memset@plt>
   1b4f4:	ldr	r0, [r4, #20]
   1b4f8:	ldr	r2, [r4, #44]	; 0x2c
   1b4fc:	mov	r1, #0
   1b500:	add	r0, r0, r6
   1b504:	str	r0, [r4, #20]
   1b508:	mov	r0, r4
   1b50c:	blx	r2
   1b510:	ldr	r1, [r4, #16]
   1b514:	ldr	r0, [r4, #20]
   1b518:	sub	r5, r5, r6
   1b51c:	sub	r6, r1, r0
   1b520:	cmp	r5, r6
   1b524:	bhi	1b4e8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x134>
   1b528:	mov	r1, #32
   1b52c:	mov	r2, r5
   1b530:	bl	12944 <memset@plt>
   1b534:	ldr	r0, [r4, #20]
   1b538:	add	r0, r0, r5
   1b53c:	str	r0, [r4, #20]
   1b540:	b	1b560 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ac>
   1b544:	ldr	r1, [r4, #16]
   1b548:	cmp	r0, r1
   1b54c:	bcc	1b560 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ac>
   1b550:	ldr	r2, [r4, #44]	; 0x2c
   1b554:	mov	r0, r4
   1b558:	mov	r1, #0
   1b55c:	blx	r2
   1b560:	ldr	r1, [r8, #4]
   1b564:	mov	r0, r4
   1b568:	blx	sl
   1b56c:	subs	r9, r9, #1
   1b570:	beq	1b688 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d4>
   1b574:	add	r7, r8, #8
   1b578:	mov	r8, #44	; 0x2c
   1b57c:	ldr	r0, [r4, #20]
   1b580:	sub	r9, r9, #1
   1b584:	add	r1, r0, #1
   1b588:	str	r1, [r4, #20]
   1b58c:	strb	r8, [r0]
   1b590:	ldrb	r1, [r4, #25]
   1b594:	ldr	r0, [r4, #20]
   1b598:	cmp	r1, #0
   1b59c:	beq	1b658 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a4>
   1b5a0:	add	r1, r0, #1
   1b5a4:	str	r1, [r4, #20]
   1b5a8:	mov	r1, #10
   1b5ac:	strb	r1, [r0]
   1b5b0:	ldr	r0, [r4, #20]
   1b5b4:	ldrb	r2, [r4, #25]
   1b5b8:	ldr	r3, [r4, #32]
   1b5bc:	ldr	r1, [r4, #16]
   1b5c0:	mla	r6, r3, r2, r0
   1b5c4:	mul	r5, r3, r2
   1b5c8:	cmp	r6, r1
   1b5cc:	bls	1b63c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x288>
   1b5d0:	cmp	r0, r1
   1b5d4:	bcc	1b5f0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x23c>
   1b5d8:	ldr	r2, [r4, #44]	; 0x2c
   1b5dc:	mov	r0, r4
   1b5e0:	mov	r1, #0
   1b5e4:	blx	r2
   1b5e8:	ldr	r1, [r4, #16]
   1b5ec:	ldr	r0, [r4, #20]
   1b5f0:	sub	r6, r1, r0
   1b5f4:	cmp	r6, r5
   1b5f8:	bcs	1b63c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x288>
   1b5fc:	mov	r1, #32
   1b600:	mov	r2, r6
   1b604:	bl	12944 <memset@plt>
   1b608:	ldr	r0, [r4, #20]
   1b60c:	ldr	r2, [r4, #44]	; 0x2c
   1b610:	mov	r1, #0
   1b614:	add	r0, r0, r6
   1b618:	str	r0, [r4, #20]
   1b61c:	mov	r0, r4
   1b620:	blx	r2
   1b624:	ldr	r1, [r4, #16]
   1b628:	ldr	r0, [r4, #20]
   1b62c:	sub	r5, r5, r6
   1b630:	sub	r6, r1, r0
   1b634:	cmp	r5, r6
   1b638:	bhi	1b5fc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x248>
   1b63c:	mov	r1, #32
   1b640:	mov	r2, r5
   1b644:	bl	12944 <memset@plt>
   1b648:	ldr	r0, [r4, #20]
   1b64c:	add	r0, r0, r5
   1b650:	str	r0, [r4, #20]
   1b654:	b	1b674 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c0>
   1b658:	ldr	r1, [r4, #16]
   1b65c:	cmp	r0, r1
   1b660:	bcc	1b674 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c0>
   1b664:	ldr	r2, [r4, #44]	; 0x2c
   1b668:	mov	r0, r4
   1b66c:	mov	r1, #0
   1b670:	blx	r2
   1b674:	ldr	r1, [r7], #4
   1b678:	mov	r0, r4
   1b67c:	blx	sl
   1b680:	cmp	r9, #0
   1b684:	bne	1b57c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c8>
   1b688:	ldrb	r1, [r4, #25]
   1b68c:	ldr	r0, [r4, #20]
   1b690:	cmp	r1, #0
   1b694:	beq	1b754 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3a0>
   1b698:	add	r1, r0, #1
   1b69c:	str	r1, [r4, #20]
   1b6a0:	mov	r1, #10
   1b6a4:	strb	r1, [r0]
   1b6a8:	ldr	r0, [r4, #32]
   1b6ac:	sub	r2, r0, #1
   1b6b0:	str	r2, [r4, #32]
   1b6b4:	ldrb	r3, [r4, #25]
   1b6b8:	ldr	r0, [r4, #20]
   1b6bc:	ldr	r1, [r4, #16]
   1b6c0:	mla	r7, r2, r3, r0
   1b6c4:	mul	r5, r2, r3
   1b6c8:	cmp	r7, r1
   1b6cc:	bls	1b73c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x388>
   1b6d0:	cmp	r0, r1
   1b6d4:	bcc	1b6f0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x33c>
   1b6d8:	ldr	r2, [r4, #44]	; 0x2c
   1b6dc:	mov	r0, r4
   1b6e0:	mov	r1, #0
   1b6e4:	blx	r2
   1b6e8:	ldr	r1, [r4, #16]
   1b6ec:	ldr	r0, [r4, #20]
   1b6f0:	sub	r6, r1, r0
   1b6f4:	cmp	r6, r5
   1b6f8:	bcs	1b73c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x388>
   1b6fc:	mov	r1, #32
   1b700:	mov	r2, r6
   1b704:	bl	12944 <memset@plt>
   1b708:	ldr	r0, [r4, #20]
   1b70c:	ldr	r2, [r4, #44]	; 0x2c
   1b710:	mov	r1, #0
   1b714:	add	r0, r0, r6
   1b718:	str	r0, [r4, #20]
   1b71c:	mov	r0, r4
   1b720:	blx	r2
   1b724:	ldr	r1, [r4, #16]
   1b728:	ldr	r0, [r4, #20]
   1b72c:	sub	r5, r5, r6
   1b730:	sub	r6, r1, r0
   1b734:	cmp	r5, r6
   1b738:	bhi	1b6fc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x348>
   1b73c:	mov	r1, #32
   1b740:	mov	r2, r5
   1b744:	bl	12944 <memset@plt>
   1b748:	ldr	r0, [r4, #20]
   1b74c:	add	r0, r0, r5
   1b750:	str	r0, [r4, #20]
   1b754:	add	r1, r0, #1
   1b758:	str	r1, [r4, #20]
   1b75c:	mov	r1, #93	; 0x5d
   1b760:	strb	r1, [r0]
   1b764:	sub	sp, fp, #28
   1b768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b76c <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   1b76c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b770:	add	fp, sp, #28
   1b774:	sub	sp, sp, #4
   1b778:	mov	r4, r0
   1b77c:	ldrb	r0, [r0, #27]
   1b780:	cmp	r0, #0
   1b784:	beq	1b798 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   1b788:	mov	r0, r4
   1b78c:	sub	sp, fp, #28
   1b790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b794:	b	1898c <flatcc_json_printer_uint64_vector_field@@Base>
   1b798:	mov	r0, #4
   1b79c:	add	r0, r0, r2, lsl #1
   1b7a0:	ldr	r2, [r1, #8]
   1b7a4:	cmp	r0, r2
   1b7a8:	bge	1bb20 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b4>
   1b7ac:	ldr	r2, [r1, #4]
   1b7b0:	add	r0, r2, r0
   1b7b4:	ldrh	r0, [r0]
   1b7b8:	cmp	r0, #0
   1b7bc:	ldrne	r2, [r1]
   1b7c0:	addsne	r8, r2, r0
   1b7c4:	beq	1bb20 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b4>
   1b7c8:	ldr	r0, [r1, #16]
   1b7cc:	ldr	sl, [fp, #12]
   1b7d0:	ldr	r2, [fp, #8]
   1b7d4:	add	r7, r0, #1
   1b7d8:	cmp	r0, #0
   1b7dc:	str	r7, [r1, #16]
   1b7e0:	beq	1b7f8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x8c>
   1b7e4:	ldr	r0, [r4, #20]
   1b7e8:	add	r1, r0, #1
   1b7ec:	str	r1, [r4, #20]
   1b7f0:	mov	r1, #44	; 0x2c
   1b7f4:	strb	r1, [r0]
   1b7f8:	ldr	r0, [r8]
   1b7fc:	mov	r1, r3
   1b800:	ldr	r9, [r8, r0]!
   1b804:	mov	r0, r4
   1b808:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1b80c:	ldr	r1, [r4, #32]
   1b810:	ldr	r0, [r4, #20]
   1b814:	cmp	r9, #0
   1b818:	add	r1, r1, #1
   1b81c:	str	r1, [r4, #32]
   1b820:	add	r1, r0, #1
   1b824:	str	r1, [r4, #20]
   1b828:	mov	r1, #91	; 0x5b
   1b82c:	strb	r1, [r0]
   1b830:	beq	1ba44 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2d8>
   1b834:	ldrb	r1, [r4, #25]
   1b838:	ldr	r0, [r4, #20]
   1b83c:	cmp	r1, #0
   1b840:	beq	1b8fc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x190>
   1b844:	add	r1, r0, #1
   1b848:	str	r1, [r4, #20]
   1b84c:	mov	r1, #10
   1b850:	strb	r1, [r0]
   1b854:	ldr	r0, [r4, #20]
   1b858:	ldrb	r2, [r4, #25]
   1b85c:	ldr	r3, [r4, #32]
   1b860:	ldr	r1, [r4, #16]
   1b864:	mla	r7, r3, r2, r0
   1b868:	mul	r5, r3, r2
   1b86c:	cmp	r7, r1
   1b870:	bls	1b8e0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x174>
   1b874:	cmp	r0, r1
   1b878:	bcc	1b894 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x128>
   1b87c:	ldr	r2, [r4, #44]	; 0x2c
   1b880:	mov	r0, r4
   1b884:	mov	r1, #0
   1b888:	blx	r2
   1b88c:	ldr	r1, [r4, #16]
   1b890:	ldr	r0, [r4, #20]
   1b894:	sub	r6, r1, r0
   1b898:	cmp	r6, r5
   1b89c:	bcs	1b8e0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x174>
   1b8a0:	mov	r1, #32
   1b8a4:	mov	r2, r6
   1b8a8:	bl	12944 <memset@plt>
   1b8ac:	ldr	r0, [r4, #20]
   1b8b0:	ldr	r2, [r4, #44]	; 0x2c
   1b8b4:	mov	r1, #0
   1b8b8:	add	r0, r0, r6
   1b8bc:	str	r0, [r4, #20]
   1b8c0:	mov	r0, r4
   1b8c4:	blx	r2
   1b8c8:	ldr	r1, [r4, #16]
   1b8cc:	ldr	r0, [r4, #20]
   1b8d0:	sub	r5, r5, r6
   1b8d4:	sub	r6, r1, r0
   1b8d8:	cmp	r5, r6
   1b8dc:	bhi	1b8a0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x134>
   1b8e0:	mov	r1, #32
   1b8e4:	mov	r2, r5
   1b8e8:	bl	12944 <memset@plt>
   1b8ec:	ldr	r0, [r4, #20]
   1b8f0:	add	r0, r0, r5
   1b8f4:	str	r0, [r4, #20]
   1b8f8:	b	1b918 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ac>
   1b8fc:	ldr	r1, [r4, #16]
   1b900:	cmp	r0, r1
   1b904:	bcc	1b918 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ac>
   1b908:	ldr	r2, [r4, #44]	; 0x2c
   1b90c:	mov	r0, r4
   1b910:	mov	r1, #0
   1b914:	blx	r2
   1b918:	ldrd	r2, [r8, #4]
   1b91c:	mov	r0, r4
   1b920:	blx	sl
   1b924:	subs	r9, r9, #1
   1b928:	beq	1ba44 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2d8>
   1b92c:	add	r7, r8, #12
   1b930:	mov	r8, #44	; 0x2c
   1b934:	ldr	r0, [r4, #20]
   1b938:	sub	r9, r9, #1
   1b93c:	add	r1, r0, #1
   1b940:	str	r1, [r4, #20]
   1b944:	strb	r8, [r0]
   1b948:	ldrb	r1, [r4, #25]
   1b94c:	ldr	r0, [r4, #20]
   1b950:	cmp	r1, #0
   1b954:	beq	1ba10 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a4>
   1b958:	add	r1, r0, #1
   1b95c:	str	r1, [r4, #20]
   1b960:	mov	r1, #10
   1b964:	strb	r1, [r0]
   1b968:	ldr	r0, [r4, #20]
   1b96c:	ldrb	r2, [r4, #25]
   1b970:	ldr	r3, [r4, #32]
   1b974:	ldr	r1, [r4, #16]
   1b978:	mla	r6, r3, r2, r0
   1b97c:	mul	r5, r3, r2
   1b980:	cmp	r6, r1
   1b984:	bls	1b9f4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x288>
   1b988:	cmp	r0, r1
   1b98c:	bcc	1b9a8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x23c>
   1b990:	ldr	r2, [r4, #44]	; 0x2c
   1b994:	mov	r0, r4
   1b998:	mov	r1, #0
   1b99c:	blx	r2
   1b9a0:	ldr	r1, [r4, #16]
   1b9a4:	ldr	r0, [r4, #20]
   1b9a8:	sub	r6, r1, r0
   1b9ac:	cmp	r6, r5
   1b9b0:	bcs	1b9f4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x288>
   1b9b4:	mov	r1, #32
   1b9b8:	mov	r2, r6
   1b9bc:	bl	12944 <memset@plt>
   1b9c0:	ldr	r0, [r4, #20]
   1b9c4:	ldr	r2, [r4, #44]	; 0x2c
   1b9c8:	mov	r1, #0
   1b9cc:	add	r0, r0, r6
   1b9d0:	str	r0, [r4, #20]
   1b9d4:	mov	r0, r4
   1b9d8:	blx	r2
   1b9dc:	ldr	r1, [r4, #16]
   1b9e0:	ldr	r0, [r4, #20]
   1b9e4:	sub	r5, r5, r6
   1b9e8:	sub	r6, r1, r0
   1b9ec:	cmp	r5, r6
   1b9f0:	bhi	1b9b4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x248>
   1b9f4:	mov	r1, #32
   1b9f8:	mov	r2, r5
   1b9fc:	bl	12944 <memset@plt>
   1ba00:	ldr	r0, [r4, #20]
   1ba04:	add	r0, r0, r5
   1ba08:	str	r0, [r4, #20]
   1ba0c:	b	1ba2c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c0>
   1ba10:	ldr	r1, [r4, #16]
   1ba14:	cmp	r0, r1
   1ba18:	bcc	1ba2c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c0>
   1ba1c:	ldr	r2, [r4, #44]	; 0x2c
   1ba20:	mov	r0, r4
   1ba24:	mov	r1, #0
   1ba28:	blx	r2
   1ba2c:	ldrd	r2, [r7]
   1ba30:	mov	r0, r4
   1ba34:	blx	sl
   1ba38:	add	r7, r7, #8
   1ba3c:	cmp	r9, #0
   1ba40:	bne	1b934 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c8>
   1ba44:	ldrb	r1, [r4, #25]
   1ba48:	ldr	r0, [r4, #20]
   1ba4c:	cmp	r1, #0
   1ba50:	beq	1bb10 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3a4>
   1ba54:	add	r1, r0, #1
   1ba58:	str	r1, [r4, #20]
   1ba5c:	mov	r1, #10
   1ba60:	strb	r1, [r0]
   1ba64:	ldr	r0, [r4, #32]
   1ba68:	sub	r2, r0, #1
   1ba6c:	str	r2, [r4, #32]
   1ba70:	ldrb	r3, [r4, #25]
   1ba74:	ldr	r0, [r4, #20]
   1ba78:	ldr	r1, [r4, #16]
   1ba7c:	mla	r7, r2, r3, r0
   1ba80:	mul	r5, r2, r3
   1ba84:	cmp	r7, r1
   1ba88:	bls	1baf8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x38c>
   1ba8c:	cmp	r0, r1
   1ba90:	bcc	1baac <flatcc_json_printer_uint64_enum_vector_field@@Base+0x340>
   1ba94:	ldr	r2, [r4, #44]	; 0x2c
   1ba98:	mov	r0, r4
   1ba9c:	mov	r1, #0
   1baa0:	blx	r2
   1baa4:	ldr	r1, [r4, #16]
   1baa8:	ldr	r0, [r4, #20]
   1baac:	sub	r6, r1, r0
   1bab0:	cmp	r6, r5
   1bab4:	bcs	1baf8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x38c>
   1bab8:	mov	r1, #32
   1babc:	mov	r2, r6
   1bac0:	bl	12944 <memset@plt>
   1bac4:	ldr	r0, [r4, #20]
   1bac8:	ldr	r2, [r4, #44]	; 0x2c
   1bacc:	mov	r1, #0
   1bad0:	add	r0, r0, r6
   1bad4:	str	r0, [r4, #20]
   1bad8:	mov	r0, r4
   1badc:	blx	r2
   1bae0:	ldr	r1, [r4, #16]
   1bae4:	ldr	r0, [r4, #20]
   1bae8:	sub	r5, r5, r6
   1baec:	sub	r6, r1, r0
   1baf0:	cmp	r5, r6
   1baf4:	bhi	1bab8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x34c>
   1baf8:	mov	r1, #32
   1bafc:	mov	r2, r5
   1bb00:	bl	12944 <memset@plt>
   1bb04:	ldr	r0, [r4, #20]
   1bb08:	add	r0, r0, r5
   1bb0c:	str	r0, [r4, #20]
   1bb10:	add	r1, r0, #1
   1bb14:	str	r1, [r4, #20]
   1bb18:	mov	r1, #93	; 0x5d
   1bb1c:	strb	r1, [r0]
   1bb20:	sub	sp, fp, #28
   1bb24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001bb28 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   1bb28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb2c:	add	fp, sp, #28
   1bb30:	sub	sp, sp, #4
   1bb34:	mov	r4, r0
   1bb38:	ldrb	r0, [r0, #27]
   1bb3c:	cmp	r0, #0
   1bb40:	beq	1bb54 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   1bb44:	mov	r0, r4
   1bb48:	sub	sp, fp, #28
   1bb4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb50:	b	18d40 <flatcc_json_printer_int8_vector_field@@Base>
   1bb54:	mov	r0, #4
   1bb58:	add	r0, r0, r2, lsl #1
   1bb5c:	ldr	r2, [r1, #8]
   1bb60:	cmp	r0, r2
   1bb64:	bge	1bed8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3b0>
   1bb68:	ldr	r2, [r1, #4]
   1bb6c:	add	r0, r2, r0
   1bb70:	ldrh	r0, [r0]
   1bb74:	cmp	r0, #0
   1bb78:	ldrne	r2, [r1]
   1bb7c:	addsne	r8, r2, r0
   1bb80:	beq	1bed8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3b0>
   1bb84:	ldr	r0, [r1, #16]
   1bb88:	ldr	sl, [fp, #12]
   1bb8c:	ldr	r2, [fp, #8]
   1bb90:	add	r7, r0, #1
   1bb94:	cmp	r0, #0
   1bb98:	str	r7, [r1, #16]
   1bb9c:	beq	1bbb4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x8c>
   1bba0:	ldr	r0, [r4, #20]
   1bba4:	add	r1, r0, #1
   1bba8:	str	r1, [r4, #20]
   1bbac:	mov	r1, #44	; 0x2c
   1bbb0:	strb	r1, [r0]
   1bbb4:	ldr	r0, [r8]
   1bbb8:	mov	r1, r3
   1bbbc:	ldr	r9, [r8, r0]!
   1bbc0:	mov	r0, r4
   1bbc4:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1bbc8:	ldr	r1, [r4, #32]
   1bbcc:	ldr	r0, [r4, #20]
   1bbd0:	cmp	r9, #0
   1bbd4:	add	r1, r1, #1
   1bbd8:	str	r1, [r4, #32]
   1bbdc:	add	r1, r0, #1
   1bbe0:	str	r1, [r4, #20]
   1bbe4:	mov	r1, #91	; 0x5b
   1bbe8:	strb	r1, [r0]
   1bbec:	beq	1bdfc <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d4>
   1bbf0:	ldrb	r1, [r4, #25]
   1bbf4:	ldr	r0, [r4, #20]
   1bbf8:	cmp	r1, #0
   1bbfc:	beq	1bcb8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x190>
   1bc00:	add	r1, r0, #1
   1bc04:	str	r1, [r4, #20]
   1bc08:	mov	r1, #10
   1bc0c:	strb	r1, [r0]
   1bc10:	ldr	r0, [r4, #20]
   1bc14:	ldrb	r2, [r4, #25]
   1bc18:	ldr	r3, [r4, #32]
   1bc1c:	ldr	r1, [r4, #16]
   1bc20:	mla	r7, r3, r2, r0
   1bc24:	mul	r5, r3, r2
   1bc28:	cmp	r7, r1
   1bc2c:	bls	1bc9c <flatcc_json_printer_int8_enum_vector_field@@Base+0x174>
   1bc30:	cmp	r0, r1
   1bc34:	bcc	1bc50 <flatcc_json_printer_int8_enum_vector_field@@Base+0x128>
   1bc38:	ldr	r2, [r4, #44]	; 0x2c
   1bc3c:	mov	r0, r4
   1bc40:	mov	r1, #0
   1bc44:	blx	r2
   1bc48:	ldr	r1, [r4, #16]
   1bc4c:	ldr	r0, [r4, #20]
   1bc50:	sub	r6, r1, r0
   1bc54:	cmp	r6, r5
   1bc58:	bcs	1bc9c <flatcc_json_printer_int8_enum_vector_field@@Base+0x174>
   1bc5c:	mov	r1, #32
   1bc60:	mov	r2, r6
   1bc64:	bl	12944 <memset@plt>
   1bc68:	ldr	r0, [r4, #20]
   1bc6c:	ldr	r2, [r4, #44]	; 0x2c
   1bc70:	mov	r1, #0
   1bc74:	add	r0, r0, r6
   1bc78:	str	r0, [r4, #20]
   1bc7c:	mov	r0, r4
   1bc80:	blx	r2
   1bc84:	ldr	r1, [r4, #16]
   1bc88:	ldr	r0, [r4, #20]
   1bc8c:	sub	r5, r5, r6
   1bc90:	sub	r6, r1, r0
   1bc94:	cmp	r5, r6
   1bc98:	bhi	1bc5c <flatcc_json_printer_int8_enum_vector_field@@Base+0x134>
   1bc9c:	mov	r1, #32
   1bca0:	mov	r2, r5
   1bca4:	bl	12944 <memset@plt>
   1bca8:	ldr	r0, [r4, #20]
   1bcac:	add	r0, r0, r5
   1bcb0:	str	r0, [r4, #20]
   1bcb4:	b	1bcd4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ac>
   1bcb8:	ldr	r1, [r4, #16]
   1bcbc:	cmp	r0, r1
   1bcc0:	bcc	1bcd4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ac>
   1bcc4:	ldr	r2, [r4, #44]	; 0x2c
   1bcc8:	mov	r0, r4
   1bccc:	mov	r1, #0
   1bcd0:	blx	r2
   1bcd4:	ldrsb	r1, [r8, #4]
   1bcd8:	mov	r0, r4
   1bcdc:	blx	sl
   1bce0:	subs	r9, r9, #1
   1bce4:	beq	1bdfc <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d4>
   1bce8:	add	r7, r8, #5
   1bcec:	mov	r8, #44	; 0x2c
   1bcf0:	ldr	r0, [r4, #20]
   1bcf4:	sub	r9, r9, #1
   1bcf8:	add	r1, r0, #1
   1bcfc:	str	r1, [r4, #20]
   1bd00:	strb	r8, [r0]
   1bd04:	ldrb	r1, [r4, #25]
   1bd08:	ldr	r0, [r4, #20]
   1bd0c:	cmp	r1, #0
   1bd10:	beq	1bdcc <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a4>
   1bd14:	add	r1, r0, #1
   1bd18:	str	r1, [r4, #20]
   1bd1c:	mov	r1, #10
   1bd20:	strb	r1, [r0]
   1bd24:	ldr	r0, [r4, #20]
   1bd28:	ldrb	r2, [r4, #25]
   1bd2c:	ldr	r3, [r4, #32]
   1bd30:	ldr	r1, [r4, #16]
   1bd34:	mla	r6, r3, r2, r0
   1bd38:	mul	r5, r3, r2
   1bd3c:	cmp	r6, r1
   1bd40:	bls	1bdb0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x288>
   1bd44:	cmp	r0, r1
   1bd48:	bcc	1bd64 <flatcc_json_printer_int8_enum_vector_field@@Base+0x23c>
   1bd4c:	ldr	r2, [r4, #44]	; 0x2c
   1bd50:	mov	r0, r4
   1bd54:	mov	r1, #0
   1bd58:	blx	r2
   1bd5c:	ldr	r1, [r4, #16]
   1bd60:	ldr	r0, [r4, #20]
   1bd64:	sub	r6, r1, r0
   1bd68:	cmp	r6, r5
   1bd6c:	bcs	1bdb0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x288>
   1bd70:	mov	r1, #32
   1bd74:	mov	r2, r6
   1bd78:	bl	12944 <memset@plt>
   1bd7c:	ldr	r0, [r4, #20]
   1bd80:	ldr	r2, [r4, #44]	; 0x2c
   1bd84:	mov	r1, #0
   1bd88:	add	r0, r0, r6
   1bd8c:	str	r0, [r4, #20]
   1bd90:	mov	r0, r4
   1bd94:	blx	r2
   1bd98:	ldr	r1, [r4, #16]
   1bd9c:	ldr	r0, [r4, #20]
   1bda0:	sub	r5, r5, r6
   1bda4:	sub	r6, r1, r0
   1bda8:	cmp	r5, r6
   1bdac:	bhi	1bd70 <flatcc_json_printer_int8_enum_vector_field@@Base+0x248>
   1bdb0:	mov	r1, #32
   1bdb4:	mov	r2, r5
   1bdb8:	bl	12944 <memset@plt>
   1bdbc:	ldr	r0, [r4, #20]
   1bdc0:	add	r0, r0, r5
   1bdc4:	str	r0, [r4, #20]
   1bdc8:	b	1bde8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c0>
   1bdcc:	ldr	r1, [r4, #16]
   1bdd0:	cmp	r0, r1
   1bdd4:	bcc	1bde8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c0>
   1bdd8:	ldr	r2, [r4, #44]	; 0x2c
   1bddc:	mov	r0, r4
   1bde0:	mov	r1, #0
   1bde4:	blx	r2
   1bde8:	ldrsb	r1, [r7], #1
   1bdec:	mov	r0, r4
   1bdf0:	blx	sl
   1bdf4:	cmp	r9, #0
   1bdf8:	bne	1bcf0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1c8>
   1bdfc:	ldrb	r1, [r4, #25]
   1be00:	ldr	r0, [r4, #20]
   1be04:	cmp	r1, #0
   1be08:	beq	1bec8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3a0>
   1be0c:	add	r1, r0, #1
   1be10:	str	r1, [r4, #20]
   1be14:	mov	r1, #10
   1be18:	strb	r1, [r0]
   1be1c:	ldr	r0, [r4, #32]
   1be20:	sub	r2, r0, #1
   1be24:	str	r2, [r4, #32]
   1be28:	ldrb	r3, [r4, #25]
   1be2c:	ldr	r0, [r4, #20]
   1be30:	ldr	r1, [r4, #16]
   1be34:	mla	r7, r2, r3, r0
   1be38:	mul	r5, r2, r3
   1be3c:	cmp	r7, r1
   1be40:	bls	1beb0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x388>
   1be44:	cmp	r0, r1
   1be48:	bcc	1be64 <flatcc_json_printer_int8_enum_vector_field@@Base+0x33c>
   1be4c:	ldr	r2, [r4, #44]	; 0x2c
   1be50:	mov	r0, r4
   1be54:	mov	r1, #0
   1be58:	blx	r2
   1be5c:	ldr	r1, [r4, #16]
   1be60:	ldr	r0, [r4, #20]
   1be64:	sub	r6, r1, r0
   1be68:	cmp	r6, r5
   1be6c:	bcs	1beb0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x388>
   1be70:	mov	r1, #32
   1be74:	mov	r2, r6
   1be78:	bl	12944 <memset@plt>
   1be7c:	ldr	r0, [r4, #20]
   1be80:	ldr	r2, [r4, #44]	; 0x2c
   1be84:	mov	r1, #0
   1be88:	add	r0, r0, r6
   1be8c:	str	r0, [r4, #20]
   1be90:	mov	r0, r4
   1be94:	blx	r2
   1be98:	ldr	r1, [r4, #16]
   1be9c:	ldr	r0, [r4, #20]
   1bea0:	sub	r5, r5, r6
   1bea4:	sub	r6, r1, r0
   1bea8:	cmp	r5, r6
   1beac:	bhi	1be70 <flatcc_json_printer_int8_enum_vector_field@@Base+0x348>
   1beb0:	mov	r1, #32
   1beb4:	mov	r2, r5
   1beb8:	bl	12944 <memset@plt>
   1bebc:	ldr	r0, [r4, #20]
   1bec0:	add	r0, r0, r5
   1bec4:	str	r0, [r4, #20]
   1bec8:	add	r1, r0, #1
   1becc:	str	r1, [r4, #20]
   1bed0:	mov	r1, #93	; 0x5d
   1bed4:	strb	r1, [r0]
   1bed8:	sub	sp, fp, #28
   1bedc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001bee0 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   1bee0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bee4:	add	fp, sp, #28
   1bee8:	sub	sp, sp, #4
   1beec:	mov	r4, r0
   1bef0:	ldrb	r0, [r0, #27]
   1bef4:	cmp	r0, #0
   1bef8:	beq	1bf0c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   1befc:	mov	r0, r4
   1bf00:	sub	sp, fp, #28
   1bf04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf08:	b	19134 <flatcc_json_printer_int16_vector_field@@Base>
   1bf0c:	mov	r0, #4
   1bf10:	add	r0, r0, r2, lsl #1
   1bf14:	ldr	r2, [r1, #8]
   1bf18:	cmp	r0, r2
   1bf1c:	bge	1c290 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3b0>
   1bf20:	ldr	r2, [r1, #4]
   1bf24:	add	r0, r2, r0
   1bf28:	ldrh	r0, [r0]
   1bf2c:	cmp	r0, #0
   1bf30:	ldrne	r2, [r1]
   1bf34:	addsne	r8, r2, r0
   1bf38:	beq	1c290 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3b0>
   1bf3c:	ldr	r0, [r1, #16]
   1bf40:	ldr	sl, [fp, #12]
   1bf44:	ldr	r2, [fp, #8]
   1bf48:	add	r7, r0, #1
   1bf4c:	cmp	r0, #0
   1bf50:	str	r7, [r1, #16]
   1bf54:	beq	1bf6c <flatcc_json_printer_int16_enum_vector_field@@Base+0x8c>
   1bf58:	ldr	r0, [r4, #20]
   1bf5c:	add	r1, r0, #1
   1bf60:	str	r1, [r4, #20]
   1bf64:	mov	r1, #44	; 0x2c
   1bf68:	strb	r1, [r0]
   1bf6c:	ldr	r0, [r8]
   1bf70:	mov	r1, r3
   1bf74:	ldr	r9, [r8, r0]!
   1bf78:	mov	r0, r4
   1bf7c:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1bf80:	ldr	r1, [r4, #32]
   1bf84:	ldr	r0, [r4, #20]
   1bf88:	cmp	r9, #0
   1bf8c:	add	r1, r1, #1
   1bf90:	str	r1, [r4, #32]
   1bf94:	add	r1, r0, #1
   1bf98:	str	r1, [r4, #20]
   1bf9c:	mov	r1, #91	; 0x5b
   1bfa0:	strb	r1, [r0]
   1bfa4:	beq	1c1b4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d4>
   1bfa8:	ldrb	r1, [r4, #25]
   1bfac:	ldr	r0, [r4, #20]
   1bfb0:	cmp	r1, #0
   1bfb4:	beq	1c070 <flatcc_json_printer_int16_enum_vector_field@@Base+0x190>
   1bfb8:	add	r1, r0, #1
   1bfbc:	str	r1, [r4, #20]
   1bfc0:	mov	r1, #10
   1bfc4:	strb	r1, [r0]
   1bfc8:	ldr	r0, [r4, #20]
   1bfcc:	ldrb	r2, [r4, #25]
   1bfd0:	ldr	r3, [r4, #32]
   1bfd4:	ldr	r1, [r4, #16]
   1bfd8:	mla	r7, r3, r2, r0
   1bfdc:	mul	r5, r3, r2
   1bfe0:	cmp	r7, r1
   1bfe4:	bls	1c054 <flatcc_json_printer_int16_enum_vector_field@@Base+0x174>
   1bfe8:	cmp	r0, r1
   1bfec:	bcc	1c008 <flatcc_json_printer_int16_enum_vector_field@@Base+0x128>
   1bff0:	ldr	r2, [r4, #44]	; 0x2c
   1bff4:	mov	r0, r4
   1bff8:	mov	r1, #0
   1bffc:	blx	r2
   1c000:	ldr	r1, [r4, #16]
   1c004:	ldr	r0, [r4, #20]
   1c008:	sub	r6, r1, r0
   1c00c:	cmp	r6, r5
   1c010:	bcs	1c054 <flatcc_json_printer_int16_enum_vector_field@@Base+0x174>
   1c014:	mov	r1, #32
   1c018:	mov	r2, r6
   1c01c:	bl	12944 <memset@plt>
   1c020:	ldr	r0, [r4, #20]
   1c024:	ldr	r2, [r4, #44]	; 0x2c
   1c028:	mov	r1, #0
   1c02c:	add	r0, r0, r6
   1c030:	str	r0, [r4, #20]
   1c034:	mov	r0, r4
   1c038:	blx	r2
   1c03c:	ldr	r1, [r4, #16]
   1c040:	ldr	r0, [r4, #20]
   1c044:	sub	r5, r5, r6
   1c048:	sub	r6, r1, r0
   1c04c:	cmp	r5, r6
   1c050:	bhi	1c014 <flatcc_json_printer_int16_enum_vector_field@@Base+0x134>
   1c054:	mov	r1, #32
   1c058:	mov	r2, r5
   1c05c:	bl	12944 <memset@plt>
   1c060:	ldr	r0, [r4, #20]
   1c064:	add	r0, r0, r5
   1c068:	str	r0, [r4, #20]
   1c06c:	b	1c08c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ac>
   1c070:	ldr	r1, [r4, #16]
   1c074:	cmp	r0, r1
   1c078:	bcc	1c08c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ac>
   1c07c:	ldr	r2, [r4, #44]	; 0x2c
   1c080:	mov	r0, r4
   1c084:	mov	r1, #0
   1c088:	blx	r2
   1c08c:	ldrsh	r1, [r8, #4]
   1c090:	mov	r0, r4
   1c094:	blx	sl
   1c098:	subs	r9, r9, #1
   1c09c:	beq	1c1b4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d4>
   1c0a0:	add	r7, r8, #6
   1c0a4:	mov	r8, #44	; 0x2c
   1c0a8:	ldr	r0, [r4, #20]
   1c0ac:	sub	r9, r9, #1
   1c0b0:	add	r1, r0, #1
   1c0b4:	str	r1, [r4, #20]
   1c0b8:	strb	r8, [r0]
   1c0bc:	ldrb	r1, [r4, #25]
   1c0c0:	ldr	r0, [r4, #20]
   1c0c4:	cmp	r1, #0
   1c0c8:	beq	1c184 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a4>
   1c0cc:	add	r1, r0, #1
   1c0d0:	str	r1, [r4, #20]
   1c0d4:	mov	r1, #10
   1c0d8:	strb	r1, [r0]
   1c0dc:	ldr	r0, [r4, #20]
   1c0e0:	ldrb	r2, [r4, #25]
   1c0e4:	ldr	r3, [r4, #32]
   1c0e8:	ldr	r1, [r4, #16]
   1c0ec:	mla	r6, r3, r2, r0
   1c0f0:	mul	r5, r3, r2
   1c0f4:	cmp	r6, r1
   1c0f8:	bls	1c168 <flatcc_json_printer_int16_enum_vector_field@@Base+0x288>
   1c0fc:	cmp	r0, r1
   1c100:	bcc	1c11c <flatcc_json_printer_int16_enum_vector_field@@Base+0x23c>
   1c104:	ldr	r2, [r4, #44]	; 0x2c
   1c108:	mov	r0, r4
   1c10c:	mov	r1, #0
   1c110:	blx	r2
   1c114:	ldr	r1, [r4, #16]
   1c118:	ldr	r0, [r4, #20]
   1c11c:	sub	r6, r1, r0
   1c120:	cmp	r6, r5
   1c124:	bcs	1c168 <flatcc_json_printer_int16_enum_vector_field@@Base+0x288>
   1c128:	mov	r1, #32
   1c12c:	mov	r2, r6
   1c130:	bl	12944 <memset@plt>
   1c134:	ldr	r0, [r4, #20]
   1c138:	ldr	r2, [r4, #44]	; 0x2c
   1c13c:	mov	r1, #0
   1c140:	add	r0, r0, r6
   1c144:	str	r0, [r4, #20]
   1c148:	mov	r0, r4
   1c14c:	blx	r2
   1c150:	ldr	r1, [r4, #16]
   1c154:	ldr	r0, [r4, #20]
   1c158:	sub	r5, r5, r6
   1c15c:	sub	r6, r1, r0
   1c160:	cmp	r5, r6
   1c164:	bhi	1c128 <flatcc_json_printer_int16_enum_vector_field@@Base+0x248>
   1c168:	mov	r1, #32
   1c16c:	mov	r2, r5
   1c170:	bl	12944 <memset@plt>
   1c174:	ldr	r0, [r4, #20]
   1c178:	add	r0, r0, r5
   1c17c:	str	r0, [r4, #20]
   1c180:	b	1c1a0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c0>
   1c184:	ldr	r1, [r4, #16]
   1c188:	cmp	r0, r1
   1c18c:	bcc	1c1a0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c0>
   1c190:	ldr	r2, [r4, #44]	; 0x2c
   1c194:	mov	r0, r4
   1c198:	mov	r1, #0
   1c19c:	blx	r2
   1c1a0:	ldrsh	r1, [r7], #2
   1c1a4:	mov	r0, r4
   1c1a8:	blx	sl
   1c1ac:	cmp	r9, #0
   1c1b0:	bne	1c0a8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c8>
   1c1b4:	ldrb	r1, [r4, #25]
   1c1b8:	ldr	r0, [r4, #20]
   1c1bc:	cmp	r1, #0
   1c1c0:	beq	1c280 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3a0>
   1c1c4:	add	r1, r0, #1
   1c1c8:	str	r1, [r4, #20]
   1c1cc:	mov	r1, #10
   1c1d0:	strb	r1, [r0]
   1c1d4:	ldr	r0, [r4, #32]
   1c1d8:	sub	r2, r0, #1
   1c1dc:	str	r2, [r4, #32]
   1c1e0:	ldrb	r3, [r4, #25]
   1c1e4:	ldr	r0, [r4, #20]
   1c1e8:	ldr	r1, [r4, #16]
   1c1ec:	mla	r7, r2, r3, r0
   1c1f0:	mul	r5, r2, r3
   1c1f4:	cmp	r7, r1
   1c1f8:	bls	1c268 <flatcc_json_printer_int16_enum_vector_field@@Base+0x388>
   1c1fc:	cmp	r0, r1
   1c200:	bcc	1c21c <flatcc_json_printer_int16_enum_vector_field@@Base+0x33c>
   1c204:	ldr	r2, [r4, #44]	; 0x2c
   1c208:	mov	r0, r4
   1c20c:	mov	r1, #0
   1c210:	blx	r2
   1c214:	ldr	r1, [r4, #16]
   1c218:	ldr	r0, [r4, #20]
   1c21c:	sub	r6, r1, r0
   1c220:	cmp	r6, r5
   1c224:	bcs	1c268 <flatcc_json_printer_int16_enum_vector_field@@Base+0x388>
   1c228:	mov	r1, #32
   1c22c:	mov	r2, r6
   1c230:	bl	12944 <memset@plt>
   1c234:	ldr	r0, [r4, #20]
   1c238:	ldr	r2, [r4, #44]	; 0x2c
   1c23c:	mov	r1, #0
   1c240:	add	r0, r0, r6
   1c244:	str	r0, [r4, #20]
   1c248:	mov	r0, r4
   1c24c:	blx	r2
   1c250:	ldr	r1, [r4, #16]
   1c254:	ldr	r0, [r4, #20]
   1c258:	sub	r5, r5, r6
   1c25c:	sub	r6, r1, r0
   1c260:	cmp	r5, r6
   1c264:	bhi	1c228 <flatcc_json_printer_int16_enum_vector_field@@Base+0x348>
   1c268:	mov	r1, #32
   1c26c:	mov	r2, r5
   1c270:	bl	12944 <memset@plt>
   1c274:	ldr	r0, [r4, #20]
   1c278:	add	r0, r0, r5
   1c27c:	str	r0, [r4, #20]
   1c280:	add	r1, r0, #1
   1c284:	str	r1, [r4, #20]
   1c288:	mov	r1, #93	; 0x5d
   1c28c:	strb	r1, [r0]
   1c290:	sub	sp, fp, #28
   1c294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c298 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   1c298:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c29c:	add	fp, sp, #28
   1c2a0:	sub	sp, sp, #4
   1c2a4:	mov	r4, r0
   1c2a8:	ldrb	r0, [r0, #27]
   1c2ac:	cmp	r0, #0
   1c2b0:	beq	1c2c4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   1c2b4:	mov	r0, r4
   1c2b8:	sub	sp, fp, #28
   1c2bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c2c0:	b	19528 <flatcc_json_printer_int32_vector_field@@Base>
   1c2c4:	mov	r0, #4
   1c2c8:	add	r0, r0, r2, lsl #1
   1c2cc:	ldr	r2, [r1, #8]
   1c2d0:	cmp	r0, r2
   1c2d4:	bge	1c648 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3b0>
   1c2d8:	ldr	r2, [r1, #4]
   1c2dc:	add	r0, r2, r0
   1c2e0:	ldrh	r0, [r0]
   1c2e4:	cmp	r0, #0
   1c2e8:	ldrne	r2, [r1]
   1c2ec:	addsne	r8, r2, r0
   1c2f0:	beq	1c648 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3b0>
   1c2f4:	ldr	r0, [r1, #16]
   1c2f8:	ldr	sl, [fp, #12]
   1c2fc:	ldr	r2, [fp, #8]
   1c300:	add	r7, r0, #1
   1c304:	cmp	r0, #0
   1c308:	str	r7, [r1, #16]
   1c30c:	beq	1c324 <flatcc_json_printer_int32_enum_vector_field@@Base+0x8c>
   1c310:	ldr	r0, [r4, #20]
   1c314:	add	r1, r0, #1
   1c318:	str	r1, [r4, #20]
   1c31c:	mov	r1, #44	; 0x2c
   1c320:	strb	r1, [r0]
   1c324:	ldr	r0, [r8]
   1c328:	mov	r1, r3
   1c32c:	ldr	r9, [r8, r0]!
   1c330:	mov	r0, r4
   1c334:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1c338:	ldr	r1, [r4, #32]
   1c33c:	ldr	r0, [r4, #20]
   1c340:	cmp	r9, #0
   1c344:	add	r1, r1, #1
   1c348:	str	r1, [r4, #32]
   1c34c:	add	r1, r0, #1
   1c350:	str	r1, [r4, #20]
   1c354:	mov	r1, #91	; 0x5b
   1c358:	strb	r1, [r0]
   1c35c:	beq	1c56c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d4>
   1c360:	ldrb	r1, [r4, #25]
   1c364:	ldr	r0, [r4, #20]
   1c368:	cmp	r1, #0
   1c36c:	beq	1c428 <flatcc_json_printer_int32_enum_vector_field@@Base+0x190>
   1c370:	add	r1, r0, #1
   1c374:	str	r1, [r4, #20]
   1c378:	mov	r1, #10
   1c37c:	strb	r1, [r0]
   1c380:	ldr	r0, [r4, #20]
   1c384:	ldrb	r2, [r4, #25]
   1c388:	ldr	r3, [r4, #32]
   1c38c:	ldr	r1, [r4, #16]
   1c390:	mla	r7, r3, r2, r0
   1c394:	mul	r5, r3, r2
   1c398:	cmp	r7, r1
   1c39c:	bls	1c40c <flatcc_json_printer_int32_enum_vector_field@@Base+0x174>
   1c3a0:	cmp	r0, r1
   1c3a4:	bcc	1c3c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x128>
   1c3a8:	ldr	r2, [r4, #44]	; 0x2c
   1c3ac:	mov	r0, r4
   1c3b0:	mov	r1, #0
   1c3b4:	blx	r2
   1c3b8:	ldr	r1, [r4, #16]
   1c3bc:	ldr	r0, [r4, #20]
   1c3c0:	sub	r6, r1, r0
   1c3c4:	cmp	r6, r5
   1c3c8:	bcs	1c40c <flatcc_json_printer_int32_enum_vector_field@@Base+0x174>
   1c3cc:	mov	r1, #32
   1c3d0:	mov	r2, r6
   1c3d4:	bl	12944 <memset@plt>
   1c3d8:	ldr	r0, [r4, #20]
   1c3dc:	ldr	r2, [r4, #44]	; 0x2c
   1c3e0:	mov	r1, #0
   1c3e4:	add	r0, r0, r6
   1c3e8:	str	r0, [r4, #20]
   1c3ec:	mov	r0, r4
   1c3f0:	blx	r2
   1c3f4:	ldr	r1, [r4, #16]
   1c3f8:	ldr	r0, [r4, #20]
   1c3fc:	sub	r5, r5, r6
   1c400:	sub	r6, r1, r0
   1c404:	cmp	r5, r6
   1c408:	bhi	1c3cc <flatcc_json_printer_int32_enum_vector_field@@Base+0x134>
   1c40c:	mov	r1, #32
   1c410:	mov	r2, r5
   1c414:	bl	12944 <memset@plt>
   1c418:	ldr	r0, [r4, #20]
   1c41c:	add	r0, r0, r5
   1c420:	str	r0, [r4, #20]
   1c424:	b	1c444 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ac>
   1c428:	ldr	r1, [r4, #16]
   1c42c:	cmp	r0, r1
   1c430:	bcc	1c444 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ac>
   1c434:	ldr	r2, [r4, #44]	; 0x2c
   1c438:	mov	r0, r4
   1c43c:	mov	r1, #0
   1c440:	blx	r2
   1c444:	ldr	r1, [r8, #4]
   1c448:	mov	r0, r4
   1c44c:	blx	sl
   1c450:	subs	r9, r9, #1
   1c454:	beq	1c56c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d4>
   1c458:	add	r7, r8, #8
   1c45c:	mov	r8, #44	; 0x2c
   1c460:	ldr	r0, [r4, #20]
   1c464:	sub	r9, r9, #1
   1c468:	add	r1, r0, #1
   1c46c:	str	r1, [r4, #20]
   1c470:	strb	r8, [r0]
   1c474:	ldrb	r1, [r4, #25]
   1c478:	ldr	r0, [r4, #20]
   1c47c:	cmp	r1, #0
   1c480:	beq	1c53c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a4>
   1c484:	add	r1, r0, #1
   1c488:	str	r1, [r4, #20]
   1c48c:	mov	r1, #10
   1c490:	strb	r1, [r0]
   1c494:	ldr	r0, [r4, #20]
   1c498:	ldrb	r2, [r4, #25]
   1c49c:	ldr	r3, [r4, #32]
   1c4a0:	ldr	r1, [r4, #16]
   1c4a4:	mla	r6, r3, r2, r0
   1c4a8:	mul	r5, r3, r2
   1c4ac:	cmp	r6, r1
   1c4b0:	bls	1c520 <flatcc_json_printer_int32_enum_vector_field@@Base+0x288>
   1c4b4:	cmp	r0, r1
   1c4b8:	bcc	1c4d4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x23c>
   1c4bc:	ldr	r2, [r4, #44]	; 0x2c
   1c4c0:	mov	r0, r4
   1c4c4:	mov	r1, #0
   1c4c8:	blx	r2
   1c4cc:	ldr	r1, [r4, #16]
   1c4d0:	ldr	r0, [r4, #20]
   1c4d4:	sub	r6, r1, r0
   1c4d8:	cmp	r6, r5
   1c4dc:	bcs	1c520 <flatcc_json_printer_int32_enum_vector_field@@Base+0x288>
   1c4e0:	mov	r1, #32
   1c4e4:	mov	r2, r6
   1c4e8:	bl	12944 <memset@plt>
   1c4ec:	ldr	r0, [r4, #20]
   1c4f0:	ldr	r2, [r4, #44]	; 0x2c
   1c4f4:	mov	r1, #0
   1c4f8:	add	r0, r0, r6
   1c4fc:	str	r0, [r4, #20]
   1c500:	mov	r0, r4
   1c504:	blx	r2
   1c508:	ldr	r1, [r4, #16]
   1c50c:	ldr	r0, [r4, #20]
   1c510:	sub	r5, r5, r6
   1c514:	sub	r6, r1, r0
   1c518:	cmp	r5, r6
   1c51c:	bhi	1c4e0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x248>
   1c520:	mov	r1, #32
   1c524:	mov	r2, r5
   1c528:	bl	12944 <memset@plt>
   1c52c:	ldr	r0, [r4, #20]
   1c530:	add	r0, r0, r5
   1c534:	str	r0, [r4, #20]
   1c538:	b	1c558 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c0>
   1c53c:	ldr	r1, [r4, #16]
   1c540:	cmp	r0, r1
   1c544:	bcc	1c558 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c0>
   1c548:	ldr	r2, [r4, #44]	; 0x2c
   1c54c:	mov	r0, r4
   1c550:	mov	r1, #0
   1c554:	blx	r2
   1c558:	ldr	r1, [r7], #4
   1c55c:	mov	r0, r4
   1c560:	blx	sl
   1c564:	cmp	r9, #0
   1c568:	bne	1c460 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c8>
   1c56c:	ldrb	r1, [r4, #25]
   1c570:	ldr	r0, [r4, #20]
   1c574:	cmp	r1, #0
   1c578:	beq	1c638 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3a0>
   1c57c:	add	r1, r0, #1
   1c580:	str	r1, [r4, #20]
   1c584:	mov	r1, #10
   1c588:	strb	r1, [r0]
   1c58c:	ldr	r0, [r4, #32]
   1c590:	sub	r2, r0, #1
   1c594:	str	r2, [r4, #32]
   1c598:	ldrb	r3, [r4, #25]
   1c59c:	ldr	r0, [r4, #20]
   1c5a0:	ldr	r1, [r4, #16]
   1c5a4:	mla	r7, r2, r3, r0
   1c5a8:	mul	r5, r2, r3
   1c5ac:	cmp	r7, r1
   1c5b0:	bls	1c620 <flatcc_json_printer_int32_enum_vector_field@@Base+0x388>
   1c5b4:	cmp	r0, r1
   1c5b8:	bcc	1c5d4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x33c>
   1c5bc:	ldr	r2, [r4, #44]	; 0x2c
   1c5c0:	mov	r0, r4
   1c5c4:	mov	r1, #0
   1c5c8:	blx	r2
   1c5cc:	ldr	r1, [r4, #16]
   1c5d0:	ldr	r0, [r4, #20]
   1c5d4:	sub	r6, r1, r0
   1c5d8:	cmp	r6, r5
   1c5dc:	bcs	1c620 <flatcc_json_printer_int32_enum_vector_field@@Base+0x388>
   1c5e0:	mov	r1, #32
   1c5e4:	mov	r2, r6
   1c5e8:	bl	12944 <memset@plt>
   1c5ec:	ldr	r0, [r4, #20]
   1c5f0:	ldr	r2, [r4, #44]	; 0x2c
   1c5f4:	mov	r1, #0
   1c5f8:	add	r0, r0, r6
   1c5fc:	str	r0, [r4, #20]
   1c600:	mov	r0, r4
   1c604:	blx	r2
   1c608:	ldr	r1, [r4, #16]
   1c60c:	ldr	r0, [r4, #20]
   1c610:	sub	r5, r5, r6
   1c614:	sub	r6, r1, r0
   1c618:	cmp	r5, r6
   1c61c:	bhi	1c5e0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x348>
   1c620:	mov	r1, #32
   1c624:	mov	r2, r5
   1c628:	bl	12944 <memset@plt>
   1c62c:	ldr	r0, [r4, #20]
   1c630:	add	r0, r0, r5
   1c634:	str	r0, [r4, #20]
   1c638:	add	r1, r0, #1
   1c63c:	str	r1, [r4, #20]
   1c640:	mov	r1, #93	; 0x5d
   1c644:	strb	r1, [r0]
   1c648:	sub	sp, fp, #28
   1c64c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c650 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   1c650:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c654:	add	fp, sp, #28
   1c658:	sub	sp, sp, #4
   1c65c:	mov	r4, r0
   1c660:	ldrb	r0, [r0, #27]
   1c664:	cmp	r0, #0
   1c668:	beq	1c67c <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   1c66c:	mov	r0, r4
   1c670:	sub	sp, fp, #28
   1c674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c678:	b	1990c <flatcc_json_printer_int64_vector_field@@Base>
   1c67c:	mov	r0, #4
   1c680:	add	r0, r0, r2, lsl #1
   1c684:	ldr	r2, [r1, #8]
   1c688:	cmp	r0, r2
   1c68c:	bge	1ca04 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b4>
   1c690:	ldr	r2, [r1, #4]
   1c694:	add	r0, r2, r0
   1c698:	ldrh	r0, [r0]
   1c69c:	cmp	r0, #0
   1c6a0:	ldrne	r2, [r1]
   1c6a4:	addsne	r8, r2, r0
   1c6a8:	beq	1ca04 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b4>
   1c6ac:	ldr	r0, [r1, #16]
   1c6b0:	ldr	sl, [fp, #12]
   1c6b4:	ldr	r2, [fp, #8]
   1c6b8:	add	r7, r0, #1
   1c6bc:	cmp	r0, #0
   1c6c0:	str	r7, [r1, #16]
   1c6c4:	beq	1c6dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x8c>
   1c6c8:	ldr	r0, [r4, #20]
   1c6cc:	add	r1, r0, #1
   1c6d0:	str	r1, [r4, #20]
   1c6d4:	mov	r1, #44	; 0x2c
   1c6d8:	strb	r1, [r0]
   1c6dc:	ldr	r0, [r8]
   1c6e0:	mov	r1, r3
   1c6e4:	ldr	r9, [r8, r0]!
   1c6e8:	mov	r0, r4
   1c6ec:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1c6f0:	ldr	r1, [r4, #32]
   1c6f4:	ldr	r0, [r4, #20]
   1c6f8:	cmp	r9, #0
   1c6fc:	add	r1, r1, #1
   1c700:	str	r1, [r4, #32]
   1c704:	add	r1, r0, #1
   1c708:	str	r1, [r4, #20]
   1c70c:	mov	r1, #91	; 0x5b
   1c710:	strb	r1, [r0]
   1c714:	beq	1c928 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2d8>
   1c718:	ldrb	r1, [r4, #25]
   1c71c:	ldr	r0, [r4, #20]
   1c720:	cmp	r1, #0
   1c724:	beq	1c7e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x190>
   1c728:	add	r1, r0, #1
   1c72c:	str	r1, [r4, #20]
   1c730:	mov	r1, #10
   1c734:	strb	r1, [r0]
   1c738:	ldr	r0, [r4, #20]
   1c73c:	ldrb	r2, [r4, #25]
   1c740:	ldr	r3, [r4, #32]
   1c744:	ldr	r1, [r4, #16]
   1c748:	mla	r7, r3, r2, r0
   1c74c:	mul	r5, r3, r2
   1c750:	cmp	r7, r1
   1c754:	bls	1c7c4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x174>
   1c758:	cmp	r0, r1
   1c75c:	bcc	1c778 <flatcc_json_printer_int64_enum_vector_field@@Base+0x128>
   1c760:	ldr	r2, [r4, #44]	; 0x2c
   1c764:	mov	r0, r4
   1c768:	mov	r1, #0
   1c76c:	blx	r2
   1c770:	ldr	r1, [r4, #16]
   1c774:	ldr	r0, [r4, #20]
   1c778:	sub	r6, r1, r0
   1c77c:	cmp	r6, r5
   1c780:	bcs	1c7c4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x174>
   1c784:	mov	r1, #32
   1c788:	mov	r2, r6
   1c78c:	bl	12944 <memset@plt>
   1c790:	ldr	r0, [r4, #20]
   1c794:	ldr	r2, [r4, #44]	; 0x2c
   1c798:	mov	r1, #0
   1c79c:	add	r0, r0, r6
   1c7a0:	str	r0, [r4, #20]
   1c7a4:	mov	r0, r4
   1c7a8:	blx	r2
   1c7ac:	ldr	r1, [r4, #16]
   1c7b0:	ldr	r0, [r4, #20]
   1c7b4:	sub	r5, r5, r6
   1c7b8:	sub	r6, r1, r0
   1c7bc:	cmp	r5, r6
   1c7c0:	bhi	1c784 <flatcc_json_printer_int64_enum_vector_field@@Base+0x134>
   1c7c4:	mov	r1, #32
   1c7c8:	mov	r2, r5
   1c7cc:	bl	12944 <memset@plt>
   1c7d0:	ldr	r0, [r4, #20]
   1c7d4:	add	r0, r0, r5
   1c7d8:	str	r0, [r4, #20]
   1c7dc:	b	1c7fc <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ac>
   1c7e0:	ldr	r1, [r4, #16]
   1c7e4:	cmp	r0, r1
   1c7e8:	bcc	1c7fc <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ac>
   1c7ec:	ldr	r2, [r4, #44]	; 0x2c
   1c7f0:	mov	r0, r4
   1c7f4:	mov	r1, #0
   1c7f8:	blx	r2
   1c7fc:	ldrd	r2, [r8, #4]
   1c800:	mov	r0, r4
   1c804:	blx	sl
   1c808:	subs	r9, r9, #1
   1c80c:	beq	1c928 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2d8>
   1c810:	add	r7, r8, #12
   1c814:	mov	r8, #44	; 0x2c
   1c818:	ldr	r0, [r4, #20]
   1c81c:	sub	r9, r9, #1
   1c820:	add	r1, r0, #1
   1c824:	str	r1, [r4, #20]
   1c828:	strb	r8, [r0]
   1c82c:	ldrb	r1, [r4, #25]
   1c830:	ldr	r0, [r4, #20]
   1c834:	cmp	r1, #0
   1c838:	beq	1c8f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a4>
   1c83c:	add	r1, r0, #1
   1c840:	str	r1, [r4, #20]
   1c844:	mov	r1, #10
   1c848:	strb	r1, [r0]
   1c84c:	ldr	r0, [r4, #20]
   1c850:	ldrb	r2, [r4, #25]
   1c854:	ldr	r3, [r4, #32]
   1c858:	ldr	r1, [r4, #16]
   1c85c:	mla	r6, r3, r2, r0
   1c860:	mul	r5, r3, r2
   1c864:	cmp	r6, r1
   1c868:	bls	1c8d8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x288>
   1c86c:	cmp	r0, r1
   1c870:	bcc	1c88c <flatcc_json_printer_int64_enum_vector_field@@Base+0x23c>
   1c874:	ldr	r2, [r4, #44]	; 0x2c
   1c878:	mov	r0, r4
   1c87c:	mov	r1, #0
   1c880:	blx	r2
   1c884:	ldr	r1, [r4, #16]
   1c888:	ldr	r0, [r4, #20]
   1c88c:	sub	r6, r1, r0
   1c890:	cmp	r6, r5
   1c894:	bcs	1c8d8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x288>
   1c898:	mov	r1, #32
   1c89c:	mov	r2, r6
   1c8a0:	bl	12944 <memset@plt>
   1c8a4:	ldr	r0, [r4, #20]
   1c8a8:	ldr	r2, [r4, #44]	; 0x2c
   1c8ac:	mov	r1, #0
   1c8b0:	add	r0, r0, r6
   1c8b4:	str	r0, [r4, #20]
   1c8b8:	mov	r0, r4
   1c8bc:	blx	r2
   1c8c0:	ldr	r1, [r4, #16]
   1c8c4:	ldr	r0, [r4, #20]
   1c8c8:	sub	r5, r5, r6
   1c8cc:	sub	r6, r1, r0
   1c8d0:	cmp	r5, r6
   1c8d4:	bhi	1c898 <flatcc_json_printer_int64_enum_vector_field@@Base+0x248>
   1c8d8:	mov	r1, #32
   1c8dc:	mov	r2, r5
   1c8e0:	bl	12944 <memset@plt>
   1c8e4:	ldr	r0, [r4, #20]
   1c8e8:	add	r0, r0, r5
   1c8ec:	str	r0, [r4, #20]
   1c8f0:	b	1c910 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c0>
   1c8f4:	ldr	r1, [r4, #16]
   1c8f8:	cmp	r0, r1
   1c8fc:	bcc	1c910 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c0>
   1c900:	ldr	r2, [r4, #44]	; 0x2c
   1c904:	mov	r0, r4
   1c908:	mov	r1, #0
   1c90c:	blx	r2
   1c910:	ldrd	r2, [r7]
   1c914:	mov	r0, r4
   1c918:	blx	sl
   1c91c:	add	r7, r7, #8
   1c920:	cmp	r9, #0
   1c924:	bne	1c818 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c8>
   1c928:	ldrb	r1, [r4, #25]
   1c92c:	ldr	r0, [r4, #20]
   1c930:	cmp	r1, #0
   1c934:	beq	1c9f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3a4>
   1c938:	add	r1, r0, #1
   1c93c:	str	r1, [r4, #20]
   1c940:	mov	r1, #10
   1c944:	strb	r1, [r0]
   1c948:	ldr	r0, [r4, #32]
   1c94c:	sub	r2, r0, #1
   1c950:	str	r2, [r4, #32]
   1c954:	ldrb	r3, [r4, #25]
   1c958:	ldr	r0, [r4, #20]
   1c95c:	ldr	r1, [r4, #16]
   1c960:	mla	r7, r2, r3, r0
   1c964:	mul	r5, r2, r3
   1c968:	cmp	r7, r1
   1c96c:	bls	1c9dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x38c>
   1c970:	cmp	r0, r1
   1c974:	bcc	1c990 <flatcc_json_printer_int64_enum_vector_field@@Base+0x340>
   1c978:	ldr	r2, [r4, #44]	; 0x2c
   1c97c:	mov	r0, r4
   1c980:	mov	r1, #0
   1c984:	blx	r2
   1c988:	ldr	r1, [r4, #16]
   1c98c:	ldr	r0, [r4, #20]
   1c990:	sub	r6, r1, r0
   1c994:	cmp	r6, r5
   1c998:	bcs	1c9dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x38c>
   1c99c:	mov	r1, #32
   1c9a0:	mov	r2, r6
   1c9a4:	bl	12944 <memset@plt>
   1c9a8:	ldr	r0, [r4, #20]
   1c9ac:	ldr	r2, [r4, #44]	; 0x2c
   1c9b0:	mov	r1, #0
   1c9b4:	add	r0, r0, r6
   1c9b8:	str	r0, [r4, #20]
   1c9bc:	mov	r0, r4
   1c9c0:	blx	r2
   1c9c4:	ldr	r1, [r4, #16]
   1c9c8:	ldr	r0, [r4, #20]
   1c9cc:	sub	r5, r5, r6
   1c9d0:	sub	r6, r1, r0
   1c9d4:	cmp	r5, r6
   1c9d8:	bhi	1c99c <flatcc_json_printer_int64_enum_vector_field@@Base+0x34c>
   1c9dc:	mov	r1, #32
   1c9e0:	mov	r2, r5
   1c9e4:	bl	12944 <memset@plt>
   1c9e8:	ldr	r0, [r4, #20]
   1c9ec:	add	r0, r0, r5
   1c9f0:	str	r0, [r4, #20]
   1c9f4:	add	r1, r0, #1
   1c9f8:	str	r1, [r4, #20]
   1c9fc:	mov	r1, #93	; 0x5d
   1ca00:	strb	r1, [r0]
   1ca04:	sub	sp, fp, #28
   1ca08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ca0c <flatcc_json_printer_bool_enum_vector_field@@Base>:
   1ca0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ca10:	add	fp, sp, #28
   1ca14:	sub	sp, sp, #4
   1ca18:	mov	r4, r0
   1ca1c:	ldrb	r0, [r0, #27]
   1ca20:	cmp	r0, #0
   1ca24:	beq	1ca38 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   1ca28:	mov	r0, r4
   1ca2c:	sub	sp, fp, #28
   1ca30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ca34:	b	19d00 <flatcc_json_printer_bool_vector_field@@Base>
   1ca38:	mov	r0, #4
   1ca3c:	add	r0, r0, r2, lsl #1
   1ca40:	ldr	r2, [r1, #8]
   1ca44:	cmp	r0, r2
   1ca48:	bge	1cdbc <flatcc_json_printer_bool_enum_vector_field@@Base+0x3b0>
   1ca4c:	ldr	r2, [r1, #4]
   1ca50:	add	r0, r2, r0
   1ca54:	ldrh	r0, [r0]
   1ca58:	cmp	r0, #0
   1ca5c:	ldrne	r2, [r1]
   1ca60:	addsne	r8, r2, r0
   1ca64:	beq	1cdbc <flatcc_json_printer_bool_enum_vector_field@@Base+0x3b0>
   1ca68:	ldr	r0, [r1, #16]
   1ca6c:	ldr	sl, [fp, #12]
   1ca70:	ldr	r2, [fp, #8]
   1ca74:	add	r7, r0, #1
   1ca78:	cmp	r0, #0
   1ca7c:	str	r7, [r1, #16]
   1ca80:	beq	1ca98 <flatcc_json_printer_bool_enum_vector_field@@Base+0x8c>
   1ca84:	ldr	r0, [r4, #20]
   1ca88:	add	r1, r0, #1
   1ca8c:	str	r1, [r4, #20]
   1ca90:	mov	r1, #44	; 0x2c
   1ca94:	strb	r1, [r0]
   1ca98:	ldr	r0, [r8]
   1ca9c:	mov	r1, r3
   1caa0:	ldr	r9, [r8, r0]!
   1caa4:	mov	r0, r4
   1caa8:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1caac:	ldr	r1, [r4, #32]
   1cab0:	ldr	r0, [r4, #20]
   1cab4:	cmp	r9, #0
   1cab8:	add	r1, r1, #1
   1cabc:	str	r1, [r4, #32]
   1cac0:	add	r1, r0, #1
   1cac4:	str	r1, [r4, #20]
   1cac8:	mov	r1, #91	; 0x5b
   1cacc:	strb	r1, [r0]
   1cad0:	beq	1cce0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d4>
   1cad4:	ldrb	r1, [r4, #25]
   1cad8:	ldr	r0, [r4, #20]
   1cadc:	cmp	r1, #0
   1cae0:	beq	1cb9c <flatcc_json_printer_bool_enum_vector_field@@Base+0x190>
   1cae4:	add	r1, r0, #1
   1cae8:	str	r1, [r4, #20]
   1caec:	mov	r1, #10
   1caf0:	strb	r1, [r0]
   1caf4:	ldr	r0, [r4, #20]
   1caf8:	ldrb	r2, [r4, #25]
   1cafc:	ldr	r3, [r4, #32]
   1cb00:	ldr	r1, [r4, #16]
   1cb04:	mla	r7, r3, r2, r0
   1cb08:	mul	r5, r3, r2
   1cb0c:	cmp	r7, r1
   1cb10:	bls	1cb80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x174>
   1cb14:	cmp	r0, r1
   1cb18:	bcc	1cb34 <flatcc_json_printer_bool_enum_vector_field@@Base+0x128>
   1cb1c:	ldr	r2, [r4, #44]	; 0x2c
   1cb20:	mov	r0, r4
   1cb24:	mov	r1, #0
   1cb28:	blx	r2
   1cb2c:	ldr	r1, [r4, #16]
   1cb30:	ldr	r0, [r4, #20]
   1cb34:	sub	r6, r1, r0
   1cb38:	cmp	r6, r5
   1cb3c:	bcs	1cb80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x174>
   1cb40:	mov	r1, #32
   1cb44:	mov	r2, r6
   1cb48:	bl	12944 <memset@plt>
   1cb4c:	ldr	r0, [r4, #20]
   1cb50:	ldr	r2, [r4, #44]	; 0x2c
   1cb54:	mov	r1, #0
   1cb58:	add	r0, r0, r6
   1cb5c:	str	r0, [r4, #20]
   1cb60:	mov	r0, r4
   1cb64:	blx	r2
   1cb68:	ldr	r1, [r4, #16]
   1cb6c:	ldr	r0, [r4, #20]
   1cb70:	sub	r5, r5, r6
   1cb74:	sub	r6, r1, r0
   1cb78:	cmp	r5, r6
   1cb7c:	bhi	1cb40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x134>
   1cb80:	mov	r1, #32
   1cb84:	mov	r2, r5
   1cb88:	bl	12944 <memset@plt>
   1cb8c:	ldr	r0, [r4, #20]
   1cb90:	add	r0, r0, r5
   1cb94:	str	r0, [r4, #20]
   1cb98:	b	1cbb8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ac>
   1cb9c:	ldr	r1, [r4, #16]
   1cba0:	cmp	r0, r1
   1cba4:	bcc	1cbb8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ac>
   1cba8:	ldr	r2, [r4, #44]	; 0x2c
   1cbac:	mov	r0, r4
   1cbb0:	mov	r1, #0
   1cbb4:	blx	r2
   1cbb8:	ldrb	r1, [r8, #4]
   1cbbc:	mov	r0, r4
   1cbc0:	blx	sl
   1cbc4:	subs	r9, r9, #1
   1cbc8:	beq	1cce0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d4>
   1cbcc:	add	r7, r8, #5
   1cbd0:	mov	r8, #44	; 0x2c
   1cbd4:	ldr	r0, [r4, #20]
   1cbd8:	sub	r9, r9, #1
   1cbdc:	add	r1, r0, #1
   1cbe0:	str	r1, [r4, #20]
   1cbe4:	strb	r8, [r0]
   1cbe8:	ldrb	r1, [r4, #25]
   1cbec:	ldr	r0, [r4, #20]
   1cbf0:	cmp	r1, #0
   1cbf4:	beq	1ccb0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a4>
   1cbf8:	add	r1, r0, #1
   1cbfc:	str	r1, [r4, #20]
   1cc00:	mov	r1, #10
   1cc04:	strb	r1, [r0]
   1cc08:	ldr	r0, [r4, #20]
   1cc0c:	ldrb	r2, [r4, #25]
   1cc10:	ldr	r3, [r4, #32]
   1cc14:	ldr	r1, [r4, #16]
   1cc18:	mla	r6, r3, r2, r0
   1cc1c:	mul	r5, r3, r2
   1cc20:	cmp	r6, r1
   1cc24:	bls	1cc94 <flatcc_json_printer_bool_enum_vector_field@@Base+0x288>
   1cc28:	cmp	r0, r1
   1cc2c:	bcc	1cc48 <flatcc_json_printer_bool_enum_vector_field@@Base+0x23c>
   1cc30:	ldr	r2, [r4, #44]	; 0x2c
   1cc34:	mov	r0, r4
   1cc38:	mov	r1, #0
   1cc3c:	blx	r2
   1cc40:	ldr	r1, [r4, #16]
   1cc44:	ldr	r0, [r4, #20]
   1cc48:	sub	r6, r1, r0
   1cc4c:	cmp	r6, r5
   1cc50:	bcs	1cc94 <flatcc_json_printer_bool_enum_vector_field@@Base+0x288>
   1cc54:	mov	r1, #32
   1cc58:	mov	r2, r6
   1cc5c:	bl	12944 <memset@plt>
   1cc60:	ldr	r0, [r4, #20]
   1cc64:	ldr	r2, [r4, #44]	; 0x2c
   1cc68:	mov	r1, #0
   1cc6c:	add	r0, r0, r6
   1cc70:	str	r0, [r4, #20]
   1cc74:	mov	r0, r4
   1cc78:	blx	r2
   1cc7c:	ldr	r1, [r4, #16]
   1cc80:	ldr	r0, [r4, #20]
   1cc84:	sub	r5, r5, r6
   1cc88:	sub	r6, r1, r0
   1cc8c:	cmp	r5, r6
   1cc90:	bhi	1cc54 <flatcc_json_printer_bool_enum_vector_field@@Base+0x248>
   1cc94:	mov	r1, #32
   1cc98:	mov	r2, r5
   1cc9c:	bl	12944 <memset@plt>
   1cca0:	ldr	r0, [r4, #20]
   1cca4:	add	r0, r0, r5
   1cca8:	str	r0, [r4, #20]
   1ccac:	b	1cccc <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c0>
   1ccb0:	ldr	r1, [r4, #16]
   1ccb4:	cmp	r0, r1
   1ccb8:	bcc	1cccc <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c0>
   1ccbc:	ldr	r2, [r4, #44]	; 0x2c
   1ccc0:	mov	r0, r4
   1ccc4:	mov	r1, #0
   1ccc8:	blx	r2
   1cccc:	ldrb	r1, [r7], #1
   1ccd0:	mov	r0, r4
   1ccd4:	blx	sl
   1ccd8:	cmp	r9, #0
   1ccdc:	bne	1cbd4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1c8>
   1cce0:	ldrb	r1, [r4, #25]
   1cce4:	ldr	r0, [r4, #20]
   1cce8:	cmp	r1, #0
   1ccec:	beq	1cdac <flatcc_json_printer_bool_enum_vector_field@@Base+0x3a0>
   1ccf0:	add	r1, r0, #1
   1ccf4:	str	r1, [r4, #20]
   1ccf8:	mov	r1, #10
   1ccfc:	strb	r1, [r0]
   1cd00:	ldr	r0, [r4, #32]
   1cd04:	sub	r2, r0, #1
   1cd08:	str	r2, [r4, #32]
   1cd0c:	ldrb	r3, [r4, #25]
   1cd10:	ldr	r0, [r4, #20]
   1cd14:	ldr	r1, [r4, #16]
   1cd18:	mla	r7, r2, r3, r0
   1cd1c:	mul	r5, r2, r3
   1cd20:	cmp	r7, r1
   1cd24:	bls	1cd94 <flatcc_json_printer_bool_enum_vector_field@@Base+0x388>
   1cd28:	cmp	r0, r1
   1cd2c:	bcc	1cd48 <flatcc_json_printer_bool_enum_vector_field@@Base+0x33c>
   1cd30:	ldr	r2, [r4, #44]	; 0x2c
   1cd34:	mov	r0, r4
   1cd38:	mov	r1, #0
   1cd3c:	blx	r2
   1cd40:	ldr	r1, [r4, #16]
   1cd44:	ldr	r0, [r4, #20]
   1cd48:	sub	r6, r1, r0
   1cd4c:	cmp	r6, r5
   1cd50:	bcs	1cd94 <flatcc_json_printer_bool_enum_vector_field@@Base+0x388>
   1cd54:	mov	r1, #32
   1cd58:	mov	r2, r6
   1cd5c:	bl	12944 <memset@plt>
   1cd60:	ldr	r0, [r4, #20]
   1cd64:	ldr	r2, [r4, #44]	; 0x2c
   1cd68:	mov	r1, #0
   1cd6c:	add	r0, r0, r6
   1cd70:	str	r0, [r4, #20]
   1cd74:	mov	r0, r4
   1cd78:	blx	r2
   1cd7c:	ldr	r1, [r4, #16]
   1cd80:	ldr	r0, [r4, #20]
   1cd84:	sub	r5, r5, r6
   1cd88:	sub	r6, r1, r0
   1cd8c:	cmp	r5, r6
   1cd90:	bhi	1cd54 <flatcc_json_printer_bool_enum_vector_field@@Base+0x348>
   1cd94:	mov	r1, #32
   1cd98:	mov	r2, r5
   1cd9c:	bl	12944 <memset@plt>
   1cda0:	ldr	r0, [r4, #20]
   1cda4:	add	r0, r0, r5
   1cda8:	str	r0, [r4, #20]
   1cdac:	add	r1, r0, #1
   1cdb0:	str	r1, [r4, #20]
   1cdb4:	mov	r1, #93	; 0x5d
   1cdb8:	strb	r1, [r0]
   1cdbc:	sub	sp, fp, #28
   1cdc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001cdc4 <flatcc_json_printer_struct_vector_field@@Base>:
   1cdc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cdc8:	add	fp, sp, #28
   1cdcc:	sub	sp, sp, #4
   1cdd0:	mov	r4, r0
   1cdd4:	mov	r0, #4
   1cdd8:	add	r0, r0, r2, lsl #1
   1cddc:	ldr	r2, [r1, #8]
   1cde0:	cmp	r0, r2
   1cde4:	bge	1d354 <flatcc_json_printer_struct_vector_field@@Base+0x590>
   1cde8:	ldr	r2, [r1, #4]
   1cdec:	add	r0, r2, r0
   1cdf0:	ldrh	r0, [r0]
   1cdf4:	cmp	r0, #0
   1cdf8:	ldrne	r2, [r1]
   1cdfc:	addsne	r6, r2, r0
   1ce00:	beq	1d354 <flatcc_json_printer_struct_vector_field@@Base+0x590>
   1ce04:	ldr	r0, [r1, #16]
   1ce08:	ldr	r2, [fp, #8]
   1ce0c:	add	r7, r0, #1
   1ce10:	cmp	r0, #0
   1ce14:	str	r7, [r1, #16]
   1ce18:	beq	1ce30 <flatcc_json_printer_struct_vector_field@@Base+0x6c>
   1ce1c:	ldr	r0, [r4, #20]
   1ce20:	add	r1, r0, #1
   1ce24:	str	r1, [r4, #20]
   1ce28:	mov	r1, #44	; 0x2c
   1ce2c:	strb	r1, [r0]
   1ce30:	ldr	r0, [r6]
   1ce34:	mov	r1, r3
   1ce38:	ldr	r5, [r6, r0]!
   1ce3c:	mov	r0, r4
   1ce40:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1ce44:	ldr	r1, [r4, #32]
   1ce48:	ldr	r0, [r4, #20]
   1ce4c:	cmp	r5, #0
   1ce50:	add	r1, r1, #1
   1ce54:	str	r1, [r4, #32]
   1ce58:	add	r1, r0, #1
   1ce5c:	str	r1, [r4, #20]
   1ce60:	mov	r1, #91	; 0x5b
   1ce64:	strb	r1, [r0]
   1ce68:	beq	1d278 <flatcc_json_printer_struct_vector_field@@Base+0x4b4>
   1ce6c:	ldrb	r1, [r4, #25]
   1ce70:	ldr	r0, [r4, #20]
   1ce74:	add	r9, r6, #4
   1ce78:	cmp	r1, #0
   1ce7c:	beq	1cf38 <flatcc_json_printer_struct_vector_field@@Base+0x174>
   1ce80:	add	r1, r0, #1
   1ce84:	str	r1, [r4, #20]
   1ce88:	mov	r1, #10
   1ce8c:	strb	r1, [r0]
   1ce90:	ldr	r0, [r4, #20]
   1ce94:	ldrb	r2, [r4, #25]
   1ce98:	ldr	r3, [r4, #32]
   1ce9c:	ldr	r1, [r4, #16]
   1cea0:	mla	r7, r3, r2, r0
   1cea4:	mul	r6, r3, r2
   1cea8:	cmp	r7, r1
   1ceac:	bls	1cf1c <flatcc_json_printer_struct_vector_field@@Base+0x158>
   1ceb0:	cmp	r0, r1
   1ceb4:	bcc	1ced0 <flatcc_json_printer_struct_vector_field@@Base+0x10c>
   1ceb8:	ldr	r2, [r4, #44]	; 0x2c
   1cebc:	mov	r0, r4
   1cec0:	mov	r1, #0
   1cec4:	blx	r2
   1cec8:	ldr	r1, [r4, #16]
   1cecc:	ldr	r0, [r4, #20]
   1ced0:	sub	r7, r1, r0
   1ced4:	cmp	r7, r6
   1ced8:	bcs	1cf1c <flatcc_json_printer_struct_vector_field@@Base+0x158>
   1cedc:	mov	r1, #32
   1cee0:	mov	r2, r7
   1cee4:	bl	12944 <memset@plt>
   1cee8:	ldr	r0, [r4, #20]
   1ceec:	ldr	r2, [r4, #44]	; 0x2c
   1cef0:	mov	r1, #0
   1cef4:	add	r0, r0, r7
   1cef8:	str	r0, [r4, #20]
   1cefc:	mov	r0, r4
   1cf00:	blx	r2
   1cf04:	ldr	r1, [r4, #16]
   1cf08:	ldr	r0, [r4, #20]
   1cf0c:	sub	r6, r6, r7
   1cf10:	sub	r7, r1, r0
   1cf14:	cmp	r6, r7
   1cf18:	bhi	1cedc <flatcc_json_printer_struct_vector_field@@Base+0x118>
   1cf1c:	mov	r1, #32
   1cf20:	mov	r2, r6
   1cf24:	bl	12944 <memset@plt>
   1cf28:	ldr	r0, [r4, #20]
   1cf2c:	add	r0, r0, r6
   1cf30:	str	r0, [r4, #20]
   1cf34:	b	1cf58 <flatcc_json_printer_struct_vector_field@@Base+0x194>
   1cf38:	ldr	r1, [r4, #16]
   1cf3c:	cmp	r0, r1
   1cf40:	bcc	1cf58 <flatcc_json_printer_struct_vector_field@@Base+0x194>
   1cf44:	ldr	r2, [r4, #44]	; 0x2c
   1cf48:	mov	r0, r4
   1cf4c:	mov	r1, #0
   1cf50:	blx	r2
   1cf54:	ldr	r0, [r4, #20]
   1cf58:	add	r1, r0, #1
   1cf5c:	ldr	r2, [fp, #16]
   1cf60:	str	r1, [r4, #20]
   1cf64:	ldr	r1, [r4, #32]
   1cf68:	add	r1, r1, #1
   1cf6c:	str	r1, [r4, #32]
   1cf70:	mov	r1, #123	; 0x7b
   1cf74:	strb	r1, [r0]
   1cf78:	mov	r0, r4
   1cf7c:	mov	r1, r9
   1cf80:	blx	r2
   1cf84:	ldrb	r1, [r4, #25]
   1cf88:	ldr	r0, [r4, #20]
   1cf8c:	cmp	r1, #0
   1cf90:	beq	1d050 <flatcc_json_printer_struct_vector_field@@Base+0x28c>
   1cf94:	add	r1, r0, #1
   1cf98:	str	r1, [r4, #20]
   1cf9c:	mov	r1, #10
   1cfa0:	strb	r1, [r0]
   1cfa4:	ldr	r0, [r4, #32]
   1cfa8:	sub	r2, r0, #1
   1cfac:	str	r2, [r4, #32]
   1cfb0:	ldrb	r3, [r4, #25]
   1cfb4:	ldr	r0, [r4, #20]
   1cfb8:	ldr	r1, [r4, #16]
   1cfbc:	mla	r7, r2, r3, r0
   1cfc0:	mul	r6, r2, r3
   1cfc4:	cmp	r7, r1
   1cfc8:	bls	1d038 <flatcc_json_printer_struct_vector_field@@Base+0x274>
   1cfcc:	cmp	r0, r1
   1cfd0:	bcc	1cfec <flatcc_json_printer_struct_vector_field@@Base+0x228>
   1cfd4:	ldr	r2, [r4, #44]	; 0x2c
   1cfd8:	mov	r0, r4
   1cfdc:	mov	r1, #0
   1cfe0:	blx	r2
   1cfe4:	ldr	r1, [r4, #16]
   1cfe8:	ldr	r0, [r4, #20]
   1cfec:	sub	r7, r1, r0
   1cff0:	cmp	r7, r6
   1cff4:	bcs	1d038 <flatcc_json_printer_struct_vector_field@@Base+0x274>
   1cff8:	mov	r1, #32
   1cffc:	mov	r2, r7
   1d000:	bl	12944 <memset@plt>
   1d004:	ldr	r0, [r4, #20]
   1d008:	ldr	r2, [r4, #44]	; 0x2c
   1d00c:	mov	r1, #0
   1d010:	add	r0, r0, r7
   1d014:	str	r0, [r4, #20]
   1d018:	mov	r0, r4
   1d01c:	blx	r2
   1d020:	ldr	r1, [r4, #16]
   1d024:	ldr	r0, [r4, #20]
   1d028:	sub	r6, r6, r7
   1d02c:	sub	r7, r1, r0
   1d030:	cmp	r6, r7
   1d034:	bhi	1cff8 <flatcc_json_printer_struct_vector_field@@Base+0x234>
   1d038:	mov	r1, #32
   1d03c:	mov	r2, r6
   1d040:	bl	12944 <memset@plt>
   1d044:	ldr	r0, [r4, #20]
   1d048:	add	r0, r0, r6
   1d04c:	str	r0, [r4, #20]
   1d050:	add	r1, r0, #1
   1d054:	mov	sl, #125	; 0x7d
   1d058:	subs	r5, r5, #1
   1d05c:	str	r1, [r4, #20]
   1d060:	strb	sl, [r0]
   1d064:	beq	1d278 <flatcc_json_printer_struct_vector_field@@Base+0x4b4>
   1d068:	mov	r8, #10
   1d06c:	ldr	r0, [r4, #20]
   1d070:	add	r1, r0, #1
   1d074:	str	r1, [r4, #20]
   1d078:	mov	r1, #44	; 0x2c
   1d07c:	strb	r1, [r0]
   1d080:	ldr	r0, [fp, #12]
   1d084:	ldrb	r1, [r4, #25]
   1d088:	add	r9, r9, r0
   1d08c:	ldr	r0, [r4, #20]
   1d090:	cmp	r1, #0
   1d094:	beq	1d14c <flatcc_json_printer_struct_vector_field@@Base+0x388>
   1d098:	add	r1, r0, #1
   1d09c:	str	r1, [r4, #20]
   1d0a0:	strb	r8, [r0]
   1d0a4:	ldr	r0, [r4, #20]
   1d0a8:	ldrb	r2, [r4, #25]
   1d0ac:	ldr	r3, [r4, #32]
   1d0b0:	ldr	r1, [r4, #16]
   1d0b4:	mla	r7, r3, r2, r0
   1d0b8:	mul	r6, r3, r2
   1d0bc:	cmp	r7, r1
   1d0c0:	bls	1d130 <flatcc_json_printer_struct_vector_field@@Base+0x36c>
   1d0c4:	cmp	r0, r1
   1d0c8:	bcc	1d0e4 <flatcc_json_printer_struct_vector_field@@Base+0x320>
   1d0cc:	ldr	r2, [r4, #44]	; 0x2c
   1d0d0:	mov	r0, r4
   1d0d4:	mov	r1, #0
   1d0d8:	blx	r2
   1d0dc:	ldr	r1, [r4, #16]
   1d0e0:	ldr	r0, [r4, #20]
   1d0e4:	sub	r7, r1, r0
   1d0e8:	cmp	r7, r6
   1d0ec:	bcs	1d130 <flatcc_json_printer_struct_vector_field@@Base+0x36c>
   1d0f0:	mov	r1, #32
   1d0f4:	mov	r2, r7
   1d0f8:	bl	12944 <memset@plt>
   1d0fc:	ldr	r0, [r4, #20]
   1d100:	ldr	r2, [r4, #44]	; 0x2c
   1d104:	mov	r1, #0
   1d108:	add	r0, r0, r7
   1d10c:	str	r0, [r4, #20]
   1d110:	mov	r0, r4
   1d114:	blx	r2
   1d118:	ldr	r1, [r4, #16]
   1d11c:	ldr	r0, [r4, #20]
   1d120:	sub	r6, r6, r7
   1d124:	sub	r7, r1, r0
   1d128:	cmp	r6, r7
   1d12c:	bhi	1d0f0 <flatcc_json_printer_struct_vector_field@@Base+0x32c>
   1d130:	mov	r1, #32
   1d134:	mov	r2, r6
   1d138:	bl	12944 <memset@plt>
   1d13c:	ldr	r0, [r4, #20]
   1d140:	add	r0, r0, r6
   1d144:	str	r0, [r4, #20]
   1d148:	b	1d16c <flatcc_json_printer_struct_vector_field@@Base+0x3a8>
   1d14c:	ldr	r1, [r4, #16]
   1d150:	cmp	r0, r1
   1d154:	bcc	1d16c <flatcc_json_printer_struct_vector_field@@Base+0x3a8>
   1d158:	ldr	r2, [r4, #44]	; 0x2c
   1d15c:	mov	r0, r4
   1d160:	mov	r1, #0
   1d164:	blx	r2
   1d168:	ldr	r0, [r4, #20]
   1d16c:	add	r1, r0, #1
   1d170:	ldr	r2, [fp, #16]
   1d174:	sub	r5, r5, #1
   1d178:	str	r1, [r4, #20]
   1d17c:	ldr	r1, [r4, #32]
   1d180:	add	r1, r1, #1
   1d184:	str	r1, [r4, #32]
   1d188:	mov	r1, #123	; 0x7b
   1d18c:	strb	r1, [r0]
   1d190:	mov	r0, r4
   1d194:	mov	r1, r9
   1d198:	blx	r2
   1d19c:	ldrb	r1, [r4, #25]
   1d1a0:	ldr	r0, [r4, #20]
   1d1a4:	cmp	r1, #0
   1d1a8:	beq	1d264 <flatcc_json_printer_struct_vector_field@@Base+0x4a0>
   1d1ac:	add	r1, r0, #1
   1d1b0:	str	r1, [r4, #20]
   1d1b4:	strb	r8, [r0]
   1d1b8:	ldr	r0, [r4, #32]
   1d1bc:	sub	r2, r0, #1
   1d1c0:	str	r2, [r4, #32]
   1d1c4:	ldrb	r3, [r4, #25]
   1d1c8:	ldr	r0, [r4, #20]
   1d1cc:	ldr	r1, [r4, #16]
   1d1d0:	mla	r7, r2, r3, r0
   1d1d4:	mul	r6, r2, r3
   1d1d8:	cmp	r7, r1
   1d1dc:	bls	1d24c <flatcc_json_printer_struct_vector_field@@Base+0x488>
   1d1e0:	cmp	r0, r1
   1d1e4:	bcc	1d200 <flatcc_json_printer_struct_vector_field@@Base+0x43c>
   1d1e8:	ldr	r2, [r4, #44]	; 0x2c
   1d1ec:	mov	r0, r4
   1d1f0:	mov	r1, #0
   1d1f4:	blx	r2
   1d1f8:	ldr	r1, [r4, #16]
   1d1fc:	ldr	r0, [r4, #20]
   1d200:	sub	r7, r1, r0
   1d204:	cmp	r7, r6
   1d208:	bcs	1d24c <flatcc_json_printer_struct_vector_field@@Base+0x488>
   1d20c:	mov	r1, #32
   1d210:	mov	r2, r7
   1d214:	bl	12944 <memset@plt>
   1d218:	ldr	r0, [r4, #20]
   1d21c:	ldr	r2, [r4, #44]	; 0x2c
   1d220:	mov	r1, #0
   1d224:	add	r0, r0, r7
   1d228:	str	r0, [r4, #20]
   1d22c:	mov	r0, r4
   1d230:	blx	r2
   1d234:	ldr	r1, [r4, #16]
   1d238:	ldr	r0, [r4, #20]
   1d23c:	sub	r6, r6, r7
   1d240:	sub	r7, r1, r0
   1d244:	cmp	r6, r7
   1d248:	bhi	1d20c <flatcc_json_printer_struct_vector_field@@Base+0x448>
   1d24c:	mov	r1, #32
   1d250:	mov	r2, r6
   1d254:	bl	12944 <memset@plt>
   1d258:	ldr	r0, [r4, #20]
   1d25c:	add	r0, r0, r6
   1d260:	str	r0, [r4, #20]
   1d264:	add	r1, r0, #1
   1d268:	cmp	r5, #0
   1d26c:	str	r1, [r4, #20]
   1d270:	strb	sl, [r0]
   1d274:	bne	1d06c <flatcc_json_printer_struct_vector_field@@Base+0x2a8>
   1d278:	ldrb	r1, [r4, #25]
   1d27c:	ldr	r0, [r4, #20]
   1d280:	cmp	r1, #0
   1d284:	beq	1d344 <flatcc_json_printer_struct_vector_field@@Base+0x580>
   1d288:	add	r1, r0, #1
   1d28c:	str	r1, [r4, #20]
   1d290:	mov	r1, #10
   1d294:	strb	r1, [r0]
   1d298:	ldr	r0, [r4, #32]
   1d29c:	sub	r2, r0, #1
   1d2a0:	str	r2, [r4, #32]
   1d2a4:	ldrb	r3, [r4, #25]
   1d2a8:	ldr	r0, [r4, #20]
   1d2ac:	ldr	r1, [r4, #16]
   1d2b0:	mla	r7, r2, r3, r0
   1d2b4:	mul	r5, r2, r3
   1d2b8:	cmp	r7, r1
   1d2bc:	bls	1d32c <flatcc_json_printer_struct_vector_field@@Base+0x568>
   1d2c0:	cmp	r0, r1
   1d2c4:	bcc	1d2e0 <flatcc_json_printer_struct_vector_field@@Base+0x51c>
   1d2c8:	ldr	r2, [r4, #44]	; 0x2c
   1d2cc:	mov	r0, r4
   1d2d0:	mov	r1, #0
   1d2d4:	blx	r2
   1d2d8:	ldr	r1, [r4, #16]
   1d2dc:	ldr	r0, [r4, #20]
   1d2e0:	sub	r6, r1, r0
   1d2e4:	cmp	r6, r5
   1d2e8:	bcs	1d32c <flatcc_json_printer_struct_vector_field@@Base+0x568>
   1d2ec:	mov	r1, #32
   1d2f0:	mov	r2, r6
   1d2f4:	bl	12944 <memset@plt>
   1d2f8:	ldr	r0, [r4, #20]
   1d2fc:	ldr	r2, [r4, #44]	; 0x2c
   1d300:	mov	r1, #0
   1d304:	add	r0, r0, r6
   1d308:	str	r0, [r4, #20]
   1d30c:	mov	r0, r4
   1d310:	blx	r2
   1d314:	ldr	r1, [r4, #16]
   1d318:	ldr	r0, [r4, #20]
   1d31c:	sub	r5, r5, r6
   1d320:	sub	r6, r1, r0
   1d324:	cmp	r5, r6
   1d328:	bhi	1d2ec <flatcc_json_printer_struct_vector_field@@Base+0x528>
   1d32c:	mov	r1, #32
   1d330:	mov	r2, r5
   1d334:	bl	12944 <memset@plt>
   1d338:	ldr	r0, [r4, #20]
   1d33c:	add	r0, r0, r5
   1d340:	str	r0, [r4, #20]
   1d344:	add	r1, r0, #1
   1d348:	str	r1, [r4, #20]
   1d34c:	mov	r1, #93	; 0x5d
   1d350:	strb	r1, [r0]
   1d354:	sub	sp, fp, #28
   1d358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d35c <flatcc_json_printer_string_vector_field@@Base>:
   1d35c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d360:	add	fp, sp, #28
   1d364:	sub	sp, sp, #4
   1d368:	mov	r4, r0
   1d36c:	mov	r0, #4
   1d370:	add	r0, r0, r2, lsl #1
   1d374:	ldr	r2, [r1, #8]
   1d378:	cmp	r0, r2
   1d37c:	bge	1d708 <flatcc_json_printer_string_vector_field@@Base+0x3ac>
   1d380:	ldr	r2, [r1, #4]
   1d384:	add	r0, r2, r0
   1d388:	ldrh	r0, [r0]
   1d38c:	cmp	r0, #0
   1d390:	ldrne	r2, [r1]
   1d394:	addsne	r5, r2, r0
   1d398:	beq	1d708 <flatcc_json_printer_string_vector_field@@Base+0x3ac>
   1d39c:	ldr	r0, [r1, #16]
   1d3a0:	ldr	r2, [fp, #8]
   1d3a4:	add	r7, r0, #1
   1d3a8:	cmp	r0, #0
   1d3ac:	str	r7, [r1, #16]
   1d3b0:	beq	1d3c8 <flatcc_json_printer_string_vector_field@@Base+0x6c>
   1d3b4:	ldr	r0, [r4, #20]
   1d3b8:	add	r1, r0, #1
   1d3bc:	str	r1, [r4, #20]
   1d3c0:	mov	r1, #44	; 0x2c
   1d3c4:	strb	r1, [r0]
   1d3c8:	ldr	r0, [r5]
   1d3cc:	mov	r1, r3
   1d3d0:	ldr	r8, [r5, r0]!
   1d3d4:	mov	r0, r4
   1d3d8:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1d3dc:	ldr	r1, [r4, #32]
   1d3e0:	ldr	r0, [r4, #20]
   1d3e4:	cmp	r8, #0
   1d3e8:	add	r1, r1, #1
   1d3ec:	str	r1, [r4, #32]
   1d3f0:	add	r1, r0, #1
   1d3f4:	str	r1, [r4, #20]
   1d3f8:	mov	r1, #91	; 0x5b
   1d3fc:	strb	r1, [r0]
   1d400:	beq	1d62c <flatcc_json_printer_string_vector_field@@Base+0x2d0>
   1d404:	ldrb	r1, [r4, #25]
   1d408:	ldr	r0, [r4, #20]
   1d40c:	add	r9, r5, #4
   1d410:	cmp	r1, #0
   1d414:	beq	1d4d0 <flatcc_json_printer_string_vector_field@@Base+0x174>
   1d418:	add	r1, r0, #1
   1d41c:	str	r1, [r4, #20]
   1d420:	mov	r1, #10
   1d424:	strb	r1, [r0]
   1d428:	ldr	r0, [r4, #20]
   1d42c:	ldrb	r2, [r4, #25]
   1d430:	ldr	r3, [r4, #32]
   1d434:	ldr	r1, [r4, #16]
   1d438:	mla	r7, r3, r2, r0
   1d43c:	mul	r5, r3, r2
   1d440:	cmp	r7, r1
   1d444:	bls	1d4b4 <flatcc_json_printer_string_vector_field@@Base+0x158>
   1d448:	cmp	r0, r1
   1d44c:	bcc	1d468 <flatcc_json_printer_string_vector_field@@Base+0x10c>
   1d450:	ldr	r2, [r4, #44]	; 0x2c
   1d454:	mov	r0, r4
   1d458:	mov	r1, #0
   1d45c:	blx	r2
   1d460:	ldr	r1, [r4, #16]
   1d464:	ldr	r0, [r4, #20]
   1d468:	sub	r6, r1, r0
   1d46c:	cmp	r6, r5
   1d470:	bcs	1d4b4 <flatcc_json_printer_string_vector_field@@Base+0x158>
   1d474:	mov	r1, #32
   1d478:	mov	r2, r6
   1d47c:	bl	12944 <memset@plt>
   1d480:	ldr	r0, [r4, #20]
   1d484:	ldr	r2, [r4, #44]	; 0x2c
   1d488:	mov	r1, #0
   1d48c:	add	r0, r0, r6
   1d490:	str	r0, [r4, #20]
   1d494:	mov	r0, r4
   1d498:	blx	r2
   1d49c:	ldr	r1, [r4, #16]
   1d4a0:	ldr	r0, [r4, #20]
   1d4a4:	sub	r5, r5, r6
   1d4a8:	sub	r6, r1, r0
   1d4ac:	cmp	r5, r6
   1d4b0:	bhi	1d474 <flatcc_json_printer_string_vector_field@@Base+0x118>
   1d4b4:	mov	r1, #32
   1d4b8:	mov	r2, r5
   1d4bc:	bl	12944 <memset@plt>
   1d4c0:	ldr	r0, [r4, #20]
   1d4c4:	add	r0, r0, r5
   1d4c8:	str	r0, [r4, #20]
   1d4cc:	b	1d4ec <flatcc_json_printer_string_vector_field@@Base+0x190>
   1d4d0:	ldr	r1, [r4, #16]
   1d4d4:	cmp	r0, r1
   1d4d8:	bcc	1d4ec <flatcc_json_printer_string_vector_field@@Base+0x190>
   1d4dc:	ldr	r2, [r4, #44]	; 0x2c
   1d4e0:	mov	r0, r4
   1d4e4:	mov	r1, #0
   1d4e8:	blx	r2
   1d4ec:	ldr	r0, [r9]
   1d4f0:	mov	r1, r9
   1d4f4:	ldr	r2, [r1, r0]!
   1d4f8:	mov	r0, r4
   1d4fc:	add	r1, r1, #4
   1d500:	bl	14768 <flatcc_json_printer_string@@Base+0x4>
   1d504:	subs	r7, r8, #1
   1d508:	beq	1d62c <flatcc_json_printer_string_vector_field@@Base+0x2d0>
   1d50c:	mov	r8, #44	; 0x2c
   1d510:	mov	sl, #10
   1d514:	ldr	r0, [r4, #20]
   1d518:	add	r9, r9, #4
   1d51c:	sub	r7, r7, #1
   1d520:	add	r1, r0, #1
   1d524:	str	r1, [r4, #20]
   1d528:	strb	r8, [r0]
   1d52c:	ldrb	r1, [r4, #25]
   1d530:	ldr	r0, [r4, #20]
   1d534:	cmp	r1, #0
   1d538:	beq	1d5f0 <flatcc_json_printer_string_vector_field@@Base+0x294>
   1d53c:	add	r1, r0, #1
   1d540:	str	r1, [r4, #20]
   1d544:	strb	sl, [r0]
   1d548:	ldr	r0, [r4, #20]
   1d54c:	ldrb	r2, [r4, #25]
   1d550:	ldr	r3, [r4, #32]
   1d554:	ldr	r1, [r4, #16]
   1d558:	mla	r6, r3, r2, r0
   1d55c:	mul	r5, r3, r2
   1d560:	cmp	r6, r1
   1d564:	bls	1d5d4 <flatcc_json_printer_string_vector_field@@Base+0x278>
   1d568:	cmp	r0, r1
   1d56c:	bcc	1d588 <flatcc_json_printer_string_vector_field@@Base+0x22c>
   1d570:	ldr	r2, [r4, #44]	; 0x2c
   1d574:	mov	r0, r4
   1d578:	mov	r1, #0
   1d57c:	blx	r2
   1d580:	ldr	r1, [r4, #16]
   1d584:	ldr	r0, [r4, #20]
   1d588:	sub	r6, r1, r0
   1d58c:	cmp	r6, r5
   1d590:	bcs	1d5d4 <flatcc_json_printer_string_vector_field@@Base+0x278>
   1d594:	mov	r1, #32
   1d598:	mov	r2, r6
   1d59c:	bl	12944 <memset@plt>
   1d5a0:	ldr	r0, [r4, #20]
   1d5a4:	ldr	r2, [r4, #44]	; 0x2c
   1d5a8:	mov	r1, #0
   1d5ac:	add	r0, r0, r6
   1d5b0:	str	r0, [r4, #20]
   1d5b4:	mov	r0, r4
   1d5b8:	blx	r2
   1d5bc:	ldr	r1, [r4, #16]
   1d5c0:	ldr	r0, [r4, #20]
   1d5c4:	sub	r5, r5, r6
   1d5c8:	sub	r6, r1, r0
   1d5cc:	cmp	r5, r6
   1d5d0:	bhi	1d594 <flatcc_json_printer_string_vector_field@@Base+0x238>
   1d5d4:	mov	r1, #32
   1d5d8:	mov	r2, r5
   1d5dc:	bl	12944 <memset@plt>
   1d5e0:	ldr	r0, [r4, #20]
   1d5e4:	add	r0, r0, r5
   1d5e8:	str	r0, [r4, #20]
   1d5ec:	b	1d60c <flatcc_json_printer_string_vector_field@@Base+0x2b0>
   1d5f0:	ldr	r1, [r4, #16]
   1d5f4:	cmp	r0, r1
   1d5f8:	bcc	1d60c <flatcc_json_printer_string_vector_field@@Base+0x2b0>
   1d5fc:	ldr	r2, [r4, #44]	; 0x2c
   1d600:	mov	r0, r4
   1d604:	mov	r1, #0
   1d608:	blx	r2
   1d60c:	ldr	r0, [r9]
   1d610:	mov	r1, r9
   1d614:	ldr	r2, [r1, r0]!
   1d618:	mov	r0, r4
   1d61c:	add	r1, r1, #4
   1d620:	bl	14768 <flatcc_json_printer_string@@Base+0x4>
   1d624:	cmp	r7, #0
   1d628:	bne	1d514 <flatcc_json_printer_string_vector_field@@Base+0x1b8>
   1d62c:	ldrb	r1, [r4, #25]
   1d630:	ldr	r0, [r4, #20]
   1d634:	cmp	r1, #0
   1d638:	beq	1d6f8 <flatcc_json_printer_string_vector_field@@Base+0x39c>
   1d63c:	add	r1, r0, #1
   1d640:	str	r1, [r4, #20]
   1d644:	mov	r1, #10
   1d648:	strb	r1, [r0]
   1d64c:	ldr	r0, [r4, #32]
   1d650:	sub	r2, r0, #1
   1d654:	str	r2, [r4, #32]
   1d658:	ldrb	r3, [r4, #25]
   1d65c:	ldr	r0, [r4, #20]
   1d660:	ldr	r1, [r4, #16]
   1d664:	mla	r7, r2, r3, r0
   1d668:	mul	r5, r2, r3
   1d66c:	cmp	r7, r1
   1d670:	bls	1d6e0 <flatcc_json_printer_string_vector_field@@Base+0x384>
   1d674:	cmp	r0, r1
   1d678:	bcc	1d694 <flatcc_json_printer_string_vector_field@@Base+0x338>
   1d67c:	ldr	r2, [r4, #44]	; 0x2c
   1d680:	mov	r0, r4
   1d684:	mov	r1, #0
   1d688:	blx	r2
   1d68c:	ldr	r1, [r4, #16]
   1d690:	ldr	r0, [r4, #20]
   1d694:	sub	r6, r1, r0
   1d698:	cmp	r6, r5
   1d69c:	bcs	1d6e0 <flatcc_json_printer_string_vector_field@@Base+0x384>
   1d6a0:	mov	r1, #32
   1d6a4:	mov	r2, r6
   1d6a8:	bl	12944 <memset@plt>
   1d6ac:	ldr	r0, [r4, #20]
   1d6b0:	ldr	r2, [r4, #44]	; 0x2c
   1d6b4:	mov	r1, #0
   1d6b8:	add	r0, r0, r6
   1d6bc:	str	r0, [r4, #20]
   1d6c0:	mov	r0, r4
   1d6c4:	blx	r2
   1d6c8:	ldr	r1, [r4, #16]
   1d6cc:	ldr	r0, [r4, #20]
   1d6d0:	sub	r5, r5, r6
   1d6d4:	sub	r6, r1, r0
   1d6d8:	cmp	r5, r6
   1d6dc:	bhi	1d6a0 <flatcc_json_printer_string_vector_field@@Base+0x344>
   1d6e0:	mov	r1, #32
   1d6e4:	mov	r2, r5
   1d6e8:	bl	12944 <memset@plt>
   1d6ec:	ldr	r0, [r4, #20]
   1d6f0:	add	r0, r0, r5
   1d6f4:	str	r0, [r4, #20]
   1d6f8:	add	r1, r0, #1
   1d6fc:	str	r1, [r4, #20]
   1d700:	mov	r1, #93	; 0x5d
   1d704:	strb	r1, [r0]
   1d708:	sub	sp, fp, #28
   1d70c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d710 <flatcc_json_printer_table_vector_field@@Base>:
   1d710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d714:	add	fp, sp, #28
   1d718:	sub	sp, sp, #20
   1d71c:	mov	sl, r1
   1d720:	ldr	r1, [r1, #8]
   1d724:	mov	r4, r0
   1d728:	mov	r0, #4
   1d72c:	add	r0, r0, r2, lsl #1
   1d730:	cmp	r0, r1
   1d734:	bge	1db8c <flatcc_json_printer_table_vector_field@@Base+0x47c>
   1d738:	ldr	r1, [sl, #4]
   1d73c:	add	r0, r1, r0
   1d740:	ldrh	r0, [r0]
   1d744:	cmp	r0, #0
   1d748:	ldrne	r1, [sl]
   1d74c:	addsne	r5, r1, r0
   1d750:	beq	1db8c <flatcc_json_printer_table_vector_field@@Base+0x47c>
   1d754:	ldr	r0, [sl, #16]
   1d758:	ldr	r2, [fp, #8]
   1d75c:	add	r1, r0, #1
   1d760:	cmp	r0, #0
   1d764:	str	r1, [sl, #16]
   1d768:	beq	1d780 <flatcc_json_printer_table_vector_field@@Base+0x70>
   1d76c:	ldr	r0, [r4, #20]
   1d770:	add	r1, r0, #1
   1d774:	str	r1, [r4, #20]
   1d778:	mov	r1, #44	; 0x2c
   1d77c:	strb	r1, [r0]
   1d780:	ldr	r0, [r5]
   1d784:	mov	r1, r3
   1d788:	ldr	r8, [r5, r0]!
   1d78c:	mov	r0, r4
   1d790:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1d794:	ldr	r1, [r4, #32]
   1d798:	ldr	r0, [r4, #20]
   1d79c:	cmp	r8, #0
   1d7a0:	add	r1, r1, #1
   1d7a4:	str	r1, [r4, #32]
   1d7a8:	add	r1, r0, #1
   1d7ac:	str	r1, [r4, #20]
   1d7b0:	mov	r1, #91	; 0x5b
   1d7b4:	strb	r1, [r0]
   1d7b8:	beq	1dab0 <flatcc_json_printer_table_vector_field@@Base+0x3a0>
   1d7bc:	ldr	r0, [sl, #12]
   1d7c0:	ldr	r6, [fp, #12]
   1d7c4:	add	r5, r5, #4
   1d7c8:	subs	r0, r0, #1
   1d7cc:	beq	1d90c <flatcc_json_printer_table_vector_field@@Base+0x1fc>
   1d7d0:	ldr	r3, [r4, #32]
   1d7d4:	ldr	r2, [r4, #20]
   1d7d8:	ldr	r1, [r5]
   1d7dc:	add	r3, r3, #1
   1d7e0:	add	r1, r5, r1
   1d7e4:	str	r3, [r4, #32]
   1d7e8:	add	r3, r2, #1
   1d7ec:	str	r3, [r4, #20]
   1d7f0:	mov	r3, #123	; 0x7b
   1d7f4:	strb	r3, [r2]
   1d7f8:	str	r0, [sp, #12]
   1d7fc:	mov	r0, #0
   1d800:	str	r0, [sp, #16]
   1d804:	str	r1, [sp]
   1d808:	ldr	r0, [r1]
   1d80c:	sub	r2, r1, r0
   1d810:	str	r2, [sp, #4]
   1d814:	ldrh	r0, [r1, -r0]
   1d818:	mov	r1, sp
   1d81c:	str	r0, [sp, #8]
   1d820:	mov	r0, r4
   1d824:	blx	r6
   1d828:	ldrb	r1, [r4, #25]
   1d82c:	ldr	r0, [r4, #20]
   1d830:	cmp	r1, #0
   1d834:	beq	1d8f8 <flatcc_json_printer_table_vector_field@@Base+0x1e8>
   1d838:	add	r1, r0, #1
   1d83c:	str	r1, [r4, #20]
   1d840:	mov	r1, #10
   1d844:	strb	r1, [r0]
   1d848:	ldr	r0, [r4, #32]
   1d84c:	sub	r2, r0, #1
   1d850:	str	r2, [r4, #32]
   1d854:	ldrb	r3, [r4, #25]
   1d858:	ldr	r0, [r4, #20]
   1d85c:	ldr	r1, [r4, #16]
   1d860:	mla	r7, r2, r3, r0
   1d864:	mul	r6, r2, r3
   1d868:	cmp	r7, r1
   1d86c:	bls	1d8dc <flatcc_json_printer_table_vector_field@@Base+0x1cc>
   1d870:	cmp	r0, r1
   1d874:	bcc	1d890 <flatcc_json_printer_table_vector_field@@Base+0x180>
   1d878:	ldr	r2, [r4, #44]	; 0x2c
   1d87c:	mov	r0, r4
   1d880:	mov	r1, #0
   1d884:	blx	r2
   1d888:	ldr	r1, [r4, #16]
   1d88c:	ldr	r0, [r4, #20]
   1d890:	sub	r7, r1, r0
   1d894:	cmp	r7, r6
   1d898:	bcs	1d8dc <flatcc_json_printer_table_vector_field@@Base+0x1cc>
   1d89c:	mov	r1, #32
   1d8a0:	mov	r2, r7
   1d8a4:	bl	12944 <memset@plt>
   1d8a8:	ldr	r0, [r4, #20]
   1d8ac:	ldr	r2, [r4, #44]	; 0x2c
   1d8b0:	mov	r1, #0
   1d8b4:	add	r0, r0, r7
   1d8b8:	str	r0, [r4, #20]
   1d8bc:	mov	r0, r4
   1d8c0:	blx	r2
   1d8c4:	ldr	r1, [r4, #16]
   1d8c8:	ldr	r0, [r4, #20]
   1d8cc:	sub	r6, r6, r7
   1d8d0:	sub	r7, r1, r0
   1d8d4:	cmp	r6, r7
   1d8d8:	bhi	1d89c <flatcc_json_printer_table_vector_field@@Base+0x18c>
   1d8dc:	mov	r1, #32
   1d8e0:	mov	r2, r6
   1d8e4:	bl	12944 <memset@plt>
   1d8e8:	ldr	r0, [r4, #20]
   1d8ec:	add	r0, r0, r6
   1d8f0:	ldr	r6, [fp, #12]
   1d8f4:	str	r0, [r4, #20]
   1d8f8:	add	r1, r0, #1
   1d8fc:	str	r1, [r4, #20]
   1d900:	mov	r1, #125	; 0x7d
   1d904:	strb	r1, [r0]
   1d908:	b	1d91c <flatcc_json_printer_table_vector_field@@Base+0x20c>
   1d90c:	ldr	r0, [r4, #36]	; 0x24
   1d910:	cmp	r0, #0
   1d914:	moveq	r0, #2
   1d918:	streq	r0, [r4, #36]	; 0x24
   1d91c:	subs	r9, r8, #1
   1d920:	beq	1dab0 <flatcc_json_printer_table_vector_field@@Base+0x3a0>
   1d924:	mov	r8, #44	; 0x2c
   1d928:	ldr	r0, [r4, #20]
   1d92c:	sub	r9, r9, #1
   1d930:	add	r1, r0, #1
   1d934:	str	r1, [r4, #20]
   1d938:	strb	r8, [r0]
   1d93c:	ldr	r0, [sl, #12]
   1d940:	ldr	r1, [r5, #4]!
   1d944:	subs	r0, r0, #1
   1d948:	beq	1da68 <flatcc_json_printer_table_vector_field@@Base+0x358>
   1d94c:	ldr	r3, [r4, #32]
   1d950:	ldr	r2, [r4, #20]
   1d954:	add	r1, r5, r1
   1d958:	add	r3, r3, #1
   1d95c:	str	r3, [r4, #32]
   1d960:	add	r3, r2, #1
   1d964:	str	r3, [r4, #20]
   1d968:	mov	r3, #123	; 0x7b
   1d96c:	strb	r3, [r2]
   1d970:	str	r0, [sp, #12]
   1d974:	mov	r0, #0
   1d978:	str	r0, [sp, #16]
   1d97c:	str	r1, [sp]
   1d980:	ldr	r0, [r1]
   1d984:	sub	r2, r1, r0
   1d988:	str	r2, [sp, #4]
   1d98c:	ldrh	r0, [r1, -r0]
   1d990:	mov	r1, sp
   1d994:	str	r0, [sp, #8]
   1d998:	mov	r0, r4
   1d99c:	blx	r6
   1d9a0:	ldrb	r1, [r4, #25]
   1d9a4:	ldr	r0, [r4, #20]
   1d9a8:	cmp	r1, #0
   1d9ac:	beq	1da98 <flatcc_json_printer_table_vector_field@@Base+0x388>
   1d9b0:	add	r1, r0, #1
   1d9b4:	str	r1, [r4, #20]
   1d9b8:	mov	r1, #10
   1d9bc:	strb	r1, [r0]
   1d9c0:	ldr	r0, [r4, #32]
   1d9c4:	sub	r2, r0, #1
   1d9c8:	str	r2, [r4, #32]
   1d9cc:	ldrb	r3, [r4, #25]
   1d9d0:	ldr	r0, [r4, #20]
   1d9d4:	ldr	r1, [r4, #16]
   1d9d8:	mla	r6, r2, r3, r0
   1d9dc:	mul	r7, r2, r3
   1d9e0:	cmp	r6, r1
   1d9e4:	bls	1da7c <flatcc_json_printer_table_vector_field@@Base+0x36c>
   1d9e8:	cmp	r0, r1
   1d9ec:	bcc	1da08 <flatcc_json_printer_table_vector_field@@Base+0x2f8>
   1d9f0:	ldr	r2, [r4, #44]	; 0x2c
   1d9f4:	mov	r0, r4
   1d9f8:	mov	r1, #0
   1d9fc:	blx	r2
   1da00:	ldr	r1, [r4, #16]
   1da04:	ldr	r0, [r4, #20]
   1da08:	sub	r6, r1, r0
   1da0c:	cmp	r6, r7
   1da10:	bcs	1da54 <flatcc_json_printer_table_vector_field@@Base+0x344>
   1da14:	mov	r1, #32
   1da18:	mov	r2, r6
   1da1c:	bl	12944 <memset@plt>
   1da20:	ldr	r0, [r4, #20]
   1da24:	ldr	r2, [r4, #44]	; 0x2c
   1da28:	mov	r1, #0
   1da2c:	add	r0, r0, r6
   1da30:	str	r0, [r4, #20]
   1da34:	mov	r0, r4
   1da38:	blx	r2
   1da3c:	ldr	r1, [r4, #16]
   1da40:	ldr	r0, [r4, #20]
   1da44:	sub	r7, r7, r6
   1da48:	sub	r6, r1, r0
   1da4c:	cmp	r7, r6
   1da50:	bhi	1da14 <flatcc_json_printer_table_vector_field@@Base+0x304>
   1da54:	ldr	r6, [fp, #12]
   1da58:	mov	r1, #32
   1da5c:	mov	r2, r7
   1da60:	bl	12944 <memset@plt>
   1da64:	b	1da8c <flatcc_json_printer_table_vector_field@@Base+0x37c>
   1da68:	ldr	r0, [r4, #36]	; 0x24
   1da6c:	cmp	r0, #0
   1da70:	moveq	r0, #2
   1da74:	streq	r0, [r4, #36]	; 0x24
   1da78:	b	1daa8 <flatcc_json_printer_table_vector_field@@Base+0x398>
   1da7c:	mov	r1, #32
   1da80:	mov	r2, r7
   1da84:	bl	12944 <memset@plt>
   1da88:	ldr	r6, [fp, #12]
   1da8c:	ldr	r0, [r4, #20]
   1da90:	add	r0, r0, r7
   1da94:	str	r0, [r4, #20]
   1da98:	add	r1, r0, #1
   1da9c:	str	r1, [r4, #20]
   1daa0:	mov	r1, #125	; 0x7d
   1daa4:	strb	r1, [r0]
   1daa8:	cmp	r9, #0
   1daac:	bne	1d928 <flatcc_json_printer_table_vector_field@@Base+0x218>
   1dab0:	ldrb	r1, [r4, #25]
   1dab4:	ldr	r0, [r4, #20]
   1dab8:	cmp	r1, #0
   1dabc:	beq	1db7c <flatcc_json_printer_table_vector_field@@Base+0x46c>
   1dac0:	add	r1, r0, #1
   1dac4:	str	r1, [r4, #20]
   1dac8:	mov	r1, #10
   1dacc:	strb	r1, [r0]
   1dad0:	ldr	r0, [r4, #32]
   1dad4:	sub	r2, r0, #1
   1dad8:	str	r2, [r4, #32]
   1dadc:	ldrb	r3, [r4, #25]
   1dae0:	ldr	r0, [r4, #20]
   1dae4:	ldr	r1, [r4, #16]
   1dae8:	mla	r7, r2, r3, r0
   1daec:	mul	r5, r2, r3
   1daf0:	cmp	r7, r1
   1daf4:	bls	1db64 <flatcc_json_printer_table_vector_field@@Base+0x454>
   1daf8:	cmp	r0, r1
   1dafc:	bcc	1db18 <flatcc_json_printer_table_vector_field@@Base+0x408>
   1db00:	ldr	r2, [r4, #44]	; 0x2c
   1db04:	mov	r0, r4
   1db08:	mov	r1, #0
   1db0c:	blx	r2
   1db10:	ldr	r1, [r4, #16]
   1db14:	ldr	r0, [r4, #20]
   1db18:	sub	r6, r1, r0
   1db1c:	cmp	r6, r5
   1db20:	bcs	1db64 <flatcc_json_printer_table_vector_field@@Base+0x454>
   1db24:	mov	r1, #32
   1db28:	mov	r2, r6
   1db2c:	bl	12944 <memset@plt>
   1db30:	ldr	r0, [r4, #20]
   1db34:	ldr	r2, [r4, #44]	; 0x2c
   1db38:	mov	r1, #0
   1db3c:	add	r0, r0, r6
   1db40:	str	r0, [r4, #20]
   1db44:	mov	r0, r4
   1db48:	blx	r2
   1db4c:	ldr	r1, [r4, #16]
   1db50:	ldr	r0, [r4, #20]
   1db54:	sub	r5, r5, r6
   1db58:	sub	r6, r1, r0
   1db5c:	cmp	r5, r6
   1db60:	bhi	1db24 <flatcc_json_printer_table_vector_field@@Base+0x414>
   1db64:	mov	r1, #32
   1db68:	mov	r2, r5
   1db6c:	bl	12944 <memset@plt>
   1db70:	ldr	r0, [r4, #20]
   1db74:	add	r0, r0, r5
   1db78:	str	r0, [r4, #20]
   1db7c:	add	r1, r0, #1
   1db80:	str	r1, [r4, #20]
   1db84:	mov	r1, #93	; 0x5d
   1db88:	strb	r1, [r0]
   1db8c:	sub	sp, fp, #28
   1db90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001db94 <flatcc_json_printer_union_vector_field@@Base>:
   1db94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db98:	add	fp, sp, #28
   1db9c:	sub	sp, sp, #140	; 0x8c
   1dba0:	mov	r6, r1
   1dba4:	ldr	r1, [r1, #8]
   1dba8:	mov	r8, r0
   1dbac:	sub	r9, r2, #1
   1dbb0:	mov	r0, #4
   1dbb4:	mov	r4, r3
   1dbb8:	mov	r5, #0
   1dbbc:	mov	sl, #0
   1dbc0:	add	r3, r0, r9, lsl #1
   1dbc4:	cmp	r3, r1
   1dbc8:	bge	1dbe8 <flatcc_json_printer_union_vector_field@@Base+0x54>
   1dbcc:	ldr	r7, [r6, #4]
   1dbd0:	mov	sl, #0
   1dbd4:	add	r3, r7, r3
   1dbd8:	ldrh	r3, [r3]
   1dbdc:	cmp	r3, #0
   1dbe0:	ldrne	r7, [r6]
   1dbe4:	addne	sl, r7, r3
   1dbe8:	ldr	r7, [fp, #8]
   1dbec:	add	r0, r0, r2, lsl #1
   1dbf0:	cmp	r0, r1
   1dbf4:	bge	1dc10 <flatcc_json_printer_union_vector_field@@Base+0x7c>
   1dbf8:	ldr	r1, [r6, #4]
   1dbfc:	add	r0, r1, r0
   1dc00:	ldrh	r0, [r0]
   1dc04:	cmp	r0, #0
   1dc08:	ldrne	r1, [r6]
   1dc0c:	addne	r5, r1, r0
   1dc10:	ldr	r0, [r6, #12]
   1dc14:	cmp	r7, #101	; 0x65
   1dc18:	str	r5, [sp, #16]
   1dc1c:	str	r0, [sp, #24]
   1dc20:	bge	1df14 <flatcc_json_printer_union_vector_field@@Base+0x380>
   1dc24:	add	r5, sp, #32
   1dc28:	mov	r1, r4
   1dc2c:	mov	r2, r7
   1dc30:	mov	r0, r5
   1dc34:	bl	128b4 <memcpy@plt>
   1dc38:	movw	r0, #29791	; 0x745f
   1dc3c:	cmp	sl, #0
   1dc40:	mov	r1, #101	; 0x65
   1dc44:	movt	r0, #28793	; 0x7079
   1dc48:	str	r0, [r5, r7]
   1dc4c:	add	r0, r5, r7
   1dc50:	ldr	r5, [sp, #16]
   1dc54:	strb	r1, [r0, #4]
   1dc58:	cmpne	r5, #0
   1dc5c:	beq	1df0c <flatcc_json_printer_union_vector_field@@Base+0x378>
   1dc60:	ldr	r0, [fp, #12]
   1dc64:	add	r1, r7, #5
   1dc68:	add	r3, sp, #32
   1dc6c:	mov	r2, r9
   1dc70:	str	r1, [sp]
   1dc74:	mov	r1, r6
   1dc78:	str	r0, [sp, #4]
   1dc7c:	mov	r0, r8
   1dc80:	bl	1a88c <flatcc_json_printer_utype_enum_vector_field@@Base>
   1dc84:	ldr	r0, [r6, #16]
   1dc88:	add	r1, r0, #1
   1dc8c:	cmp	r0, #0
   1dc90:	str	r1, [r6, #16]
   1dc94:	beq	1dcac <flatcc_json_printer_union_vector_field@@Base+0x118>
   1dc98:	ldr	r0, [r8, #20]
   1dc9c:	add	r1, r0, #1
   1dca0:	str	r1, [r8, #20]
   1dca4:	mov	r1, #44	; 0x2c
   1dca8:	strb	r1, [r0]
   1dcac:	ldr	r0, [r5]
   1dcb0:	ldr	r9, [sl]
   1dcb4:	mov	r1, r4
   1dcb8:	mov	r2, r7
   1dcbc:	ldr	r6, [r5, r0]!
   1dcc0:	str	r0, [sp, #12]
   1dcc4:	mov	r0, r8
   1dcc8:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1dccc:	mov	r7, r8
   1dcd0:	cmp	r6, #0
   1dcd4:	ldr	r0, [r7, #20]!
   1dcd8:	add	r1, r0, #1
   1dcdc:	str	r1, [r7]
   1dce0:	ldr	r1, [r7, #12]
   1dce4:	add	r1, r1, #1
   1dce8:	str	r1, [r7, #12]
   1dcec:	mov	r1, #91	; 0x5b
   1dcf0:	strb	r1, [r0]
   1dcf4:	beq	1de30 <flatcc_json_printer_union_vector_field@@Base+0x29c>
   1dcf8:	add	r4, sl, r9
   1dcfc:	ldr	r2, [fp, #16]
   1dd00:	ldrb	r0, [r4, #4]
   1dd04:	cmp	r0, #0
   1dd08:	beq	1dd2c <flatcc_json_printer_union_vector_field@@Base+0x198>
   1dd0c:	add	r1, r5, #4
   1dd10:	mov	r9, r2
   1dd14:	str	r1, [sp, #20]
   1dd18:	strb	r0, [sp, #28]
   1dd1c:	add	r1, sp, #20
   1dd20:	mov	r0, r8
   1dd24:	blx	r2
   1dd28:	b	1dd7c <flatcc_json_printer_union_vector_field@@Base+0x1e8>
   1dd2c:	ldr	r0, [r7]
   1dd30:	mov	r9, r2
   1dd34:	add	r1, r0, #1
   1dd38:	str	r1, [r7]
   1dd3c:	mov	r1, #110	; 0x6e
   1dd40:	strb	r1, [r0]
   1dd44:	ldr	r0, [r7]
   1dd48:	add	r1, r0, #1
   1dd4c:	str	r1, [r7]
   1dd50:	mov	r1, #117	; 0x75
   1dd54:	strb	r1, [r0]
   1dd58:	ldr	r0, [r7]
   1dd5c:	add	r1, r0, #1
   1dd60:	str	r1, [r7]
   1dd64:	mov	r1, #108	; 0x6c
   1dd68:	strb	r1, [r0]
   1dd6c:	ldr	r0, [r7]
   1dd70:	add	r2, r0, #1
   1dd74:	str	r2, [r7]
   1dd78:	strb	r1, [r0]
   1dd7c:	subs	r6, r6, #1
   1dd80:	beq	1de30 <flatcc_json_printer_union_vector_field@@Base+0x29c>
   1dd84:	ldr	r0, [sp, #16]
   1dd88:	ldr	r1, [sp, #12]
   1dd8c:	add	r4, r4, #5
   1dd90:	mov	sl, #44	; 0x2c
   1dd94:	add	r0, r1, r0
   1dd98:	add	r5, r0, #8
   1dd9c:	ldrb	r0, [r4]
   1dda0:	ldr	r1, [r7]
   1dda4:	sub	r6, r6, #1
   1dda8:	add	r2, r1, #1
   1ddac:	cmp	r0, #0
   1ddb0:	str	r2, [r7]
   1ddb4:	strb	sl, [r1]
   1ddb8:	beq	1ddd4 <flatcc_json_printer_union_vector_field@@Base+0x240>
   1ddbc:	str	r5, [sp, #20]
   1ddc0:	strb	r0, [sp, #28]
   1ddc4:	mov	r0, r8
   1ddc8:	add	r1, sp, #20
   1ddcc:	blx	r9
   1ddd0:	b	1de20 <flatcc_json_printer_union_vector_field@@Base+0x28c>
   1ddd4:	ldr	r0, [r7]
   1ddd8:	mov	r2, #108	; 0x6c
   1dddc:	add	r1, r0, #1
   1dde0:	str	r1, [r7]
   1dde4:	mov	r1, #110	; 0x6e
   1dde8:	strb	r1, [r0]
   1ddec:	ldr	r0, [r7]
   1ddf0:	add	r1, r0, #1
   1ddf4:	str	r1, [r7]
   1ddf8:	mov	r1, #117	; 0x75
   1ddfc:	strb	r1, [r0]
   1de00:	ldr	r0, [r7]
   1de04:	add	r1, r0, #1
   1de08:	str	r1, [r7]
   1de0c:	strb	r2, [r0]
   1de10:	ldr	r0, [r7]
   1de14:	add	r1, r0, #1
   1de18:	str	r1, [r7]
   1de1c:	strb	r2, [r0]
   1de20:	add	r5, r5, #4
   1de24:	add	r4, r4, #1
   1de28:	cmp	r6, #0
   1de2c:	bne	1dd9c <flatcc_json_printer_union_vector_field@@Base+0x208>
   1de30:	ldrb	r1, [r8, #25]
   1de34:	ldr	r0, [r8, #20]
   1de38:	cmp	r1, #0
   1de3c:	beq	1defc <flatcc_json_printer_union_vector_field@@Base+0x368>
   1de40:	add	r1, r0, #1
   1de44:	str	r1, [r8, #20]
   1de48:	mov	r1, #10
   1de4c:	strb	r1, [r0]
   1de50:	ldr	r0, [r8, #32]
   1de54:	sub	r2, r0, #1
   1de58:	str	r2, [r8, #32]
   1de5c:	ldrb	r3, [r8, #25]
   1de60:	ldr	r0, [r8, #20]
   1de64:	ldr	r1, [r8, #16]
   1de68:	mla	r6, r2, r3, r0
   1de6c:	mul	r5, r2, r3
   1de70:	cmp	r6, r1
   1de74:	bls	1dee4 <flatcc_json_printer_union_vector_field@@Base+0x350>
   1de78:	cmp	r0, r1
   1de7c:	bcc	1de98 <flatcc_json_printer_union_vector_field@@Base+0x304>
   1de80:	ldr	r2, [r8, #44]	; 0x2c
   1de84:	mov	r0, r8
   1de88:	mov	r1, #0
   1de8c:	blx	r2
   1de90:	ldr	r1, [r8, #16]
   1de94:	ldr	r0, [r8, #20]
   1de98:	sub	r6, r1, r0
   1de9c:	cmp	r6, r5
   1dea0:	bcs	1dee4 <flatcc_json_printer_union_vector_field@@Base+0x350>
   1dea4:	mov	r1, #32
   1dea8:	mov	r2, r6
   1deac:	bl	12944 <memset@plt>
   1deb0:	ldr	r0, [r8, #20]
   1deb4:	ldr	r2, [r8, #44]	; 0x2c
   1deb8:	mov	r1, #0
   1debc:	add	r0, r0, r6
   1dec0:	str	r0, [r8, #20]
   1dec4:	mov	r0, r8
   1dec8:	blx	r2
   1decc:	ldr	r1, [r8, #16]
   1ded0:	ldr	r0, [r8, #20]
   1ded4:	sub	r5, r5, r6
   1ded8:	sub	r6, r1, r0
   1dedc:	cmp	r5, r6
   1dee0:	bhi	1dea4 <flatcc_json_printer_union_vector_field@@Base+0x310>
   1dee4:	mov	r1, #32
   1dee8:	mov	r2, r5
   1deec:	bl	12944 <memset@plt>
   1def0:	ldr	r0, [r7]
   1def4:	add	r0, r0, r5
   1def8:	str	r0, [r7]
   1defc:	add	r1, r0, #1
   1df00:	str	r1, [r7]
   1df04:	mov	r1, #93	; 0x5d
   1df08:	strb	r1, [r0]
   1df0c:	sub	sp, fp, #28
   1df10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1df14:	ldr	r0, [r8, #36]	; 0x24
   1df18:	movw	r1, #1250	; 0x4e2
   1df1c:	movw	r3, #1325	; 0x52d
   1df20:	movw	r2, #843	; 0x34b
   1df24:	movt	r1, #2
   1df28:	movt	r3, #2
   1df2c:	cmp	r0, #0
   1df30:	moveq	r0, #1
   1df34:	streq	r0, [r8, #36]	; 0x24
   1df38:	movw	r0, #1223	; 0x4c7
   1df3c:	movt	r0, #2
   1df40:	bl	12998 <__assert_fail@plt>

0001df44 <flatcc_json_printer_table_field@@Base>:
   1df44:	push	{r4, r5, r6, sl, fp, lr}
   1df48:	add	fp, sp, #16
   1df4c:	sub	sp, sp, #24
   1df50:	mov	r5, r1
   1df54:	ldr	r1, [r1, #8]
   1df58:	mov	r4, r0
   1df5c:	mov	r0, #4
   1df60:	add	r0, r0, r2, lsl #1
   1df64:	cmp	r0, r1
   1df68:	bge	1df88 <flatcc_json_printer_table_field@@Base+0x44>
   1df6c:	ldr	r1, [r5, #4]
   1df70:	add	r0, r1, r0
   1df74:	ldrh	r0, [r0]
   1df78:	cmp	r0, #0
   1df7c:	ldrne	r1, [r5]
   1df80:	addsne	r6, r1, r0
   1df84:	bne	1df90 <flatcc_json_printer_table_field@@Base+0x4c>
   1df88:	sub	sp, fp, #16
   1df8c:	pop	{r4, r5, r6, sl, fp, pc}
   1df90:	ldr	r0, [r5, #16]
   1df94:	ldr	r2, [fp, #8]
   1df98:	add	r1, r0, #1
   1df9c:	cmp	r0, #0
   1dfa0:	str	r1, [r5, #16]
   1dfa4:	beq	1dfbc <flatcc_json_printer_table_field@@Base+0x78>
   1dfa8:	ldr	r0, [r4, #20]
   1dfac:	add	r1, r0, #1
   1dfb0:	str	r1, [r4, #20]
   1dfb4:	mov	r1, #44	; 0x2c
   1dfb8:	strb	r1, [r0]
   1dfbc:	mov	r0, r4
   1dfc0:	mov	r1, r3
   1dfc4:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1dfc8:	ldr	r0, [r5, #12]
   1dfcc:	subs	r0, r0, #1
   1dfd0:	beq	1e110 <flatcc_json_printer_table_field@@Base+0x1cc>
   1dfd4:	ldr	r1, [r6]
   1dfd8:	ldr	r3, [r4, #20]
   1dfdc:	ldr	r2, [fp, #12]
   1dfe0:	add	r1, r6, r1
   1dfe4:	ldr	r6, [r4, #32]
   1dfe8:	add	r6, r6, #1
   1dfec:	str	r6, [r4, #32]
   1dff0:	add	r6, r3, #1
   1dff4:	str	r6, [r4, #20]
   1dff8:	mov	r6, #123	; 0x7b
   1dffc:	strb	r6, [r3]
   1e000:	str	r0, [sp, #16]
   1e004:	mov	r0, #0
   1e008:	str	r0, [sp, #20]
   1e00c:	str	r1, [sp, #4]
   1e010:	ldr	r0, [r1]
   1e014:	sub	r3, r1, r0
   1e018:	str	r3, [sp, #8]
   1e01c:	ldrh	r0, [r1, -r0]
   1e020:	add	r1, sp, #4
   1e024:	str	r0, [sp, #12]
   1e028:	mov	r0, r4
   1e02c:	blx	r2
   1e030:	ldrb	r1, [r4, #25]
   1e034:	ldr	r0, [r4, #20]
   1e038:	cmp	r1, #0
   1e03c:	beq	1e0fc <flatcc_json_printer_table_field@@Base+0x1b8>
   1e040:	add	r1, r0, #1
   1e044:	str	r1, [r4, #20]
   1e048:	mov	r1, #10
   1e04c:	strb	r1, [r0]
   1e050:	ldr	r0, [r4, #32]
   1e054:	sub	r2, r0, #1
   1e058:	str	r2, [r4, #32]
   1e05c:	ldrb	r3, [r4, #25]
   1e060:	ldr	r0, [r4, #20]
   1e064:	ldr	r1, [r4, #16]
   1e068:	mla	r6, r2, r3, r0
   1e06c:	mul	r5, r2, r3
   1e070:	cmp	r6, r1
   1e074:	bls	1e0e4 <flatcc_json_printer_table_field@@Base+0x1a0>
   1e078:	cmp	r0, r1
   1e07c:	bcc	1e098 <flatcc_json_printer_table_field@@Base+0x154>
   1e080:	ldr	r2, [r4, #44]	; 0x2c
   1e084:	mov	r0, r4
   1e088:	mov	r1, #0
   1e08c:	blx	r2
   1e090:	ldr	r1, [r4, #16]
   1e094:	ldr	r0, [r4, #20]
   1e098:	sub	r6, r1, r0
   1e09c:	cmp	r6, r5
   1e0a0:	bcs	1e0e4 <flatcc_json_printer_table_field@@Base+0x1a0>
   1e0a4:	mov	r1, #32
   1e0a8:	mov	r2, r6
   1e0ac:	bl	12944 <memset@plt>
   1e0b0:	ldr	r0, [r4, #20]
   1e0b4:	ldr	r2, [r4, #44]	; 0x2c
   1e0b8:	mov	r1, #0
   1e0bc:	add	r0, r0, r6
   1e0c0:	str	r0, [r4, #20]
   1e0c4:	mov	r0, r4
   1e0c8:	blx	r2
   1e0cc:	ldr	r1, [r4, #16]
   1e0d0:	ldr	r0, [r4, #20]
   1e0d4:	sub	r5, r5, r6
   1e0d8:	sub	r6, r1, r0
   1e0dc:	cmp	r5, r6
   1e0e0:	bhi	1e0a4 <flatcc_json_printer_table_field@@Base+0x160>
   1e0e4:	mov	r1, #32
   1e0e8:	mov	r2, r5
   1e0ec:	bl	12944 <memset@plt>
   1e0f0:	ldr	r0, [r4, #20]
   1e0f4:	add	r0, r0, r5
   1e0f8:	str	r0, [r4, #20]
   1e0fc:	add	r1, r0, #1
   1e100:	str	r1, [r4, #20]
   1e104:	mov	r1, #125	; 0x7d
   1e108:	strb	r1, [r0]
   1e10c:	b	1df88 <flatcc_json_printer_table_field@@Base+0x44>
   1e110:	ldr	r0, [r4, #36]	; 0x24
   1e114:	cmp	r0, #0
   1e118:	moveq	r0, #2
   1e11c:	streq	r0, [r4, #36]	; 0x24
   1e120:	b	1df88 <flatcc_json_printer_table_field@@Base+0x44>

0001e124 <flatcc_json_printer_union_field@@Base>:
   1e124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e128:	add	fp, sp, #28
   1e12c:	sub	sp, sp, #20
   1e130:	mov	r9, r1
   1e134:	mov	r4, r0
   1e138:	mov	r0, #2
   1e13c:	mov	sl, r3
   1e140:	lsl	r1, r2, #1
   1e144:	add	r3, r0, r2, lsl #1
   1e148:	ldr	r2, [r9, #8]
   1e14c:	mov	r0, #0
   1e150:	cmp	r3, r2
   1e154:	bge	1e170 <flatcc_json_printer_union_field@@Base+0x4c>
   1e158:	ldr	r7, [r9, #4]
   1e15c:	add	r3, r7, r3
   1e160:	ldrh	r3, [r3]
   1e164:	cmp	r3, #0
   1e168:	ldrne	r0, [r9]
   1e16c:	addne	r0, r0, r3
   1e170:	add	r1, r1, #4
   1e174:	cmp	r1, r2
   1e178:	bge	1e194 <flatcc_json_printer_union_field@@Base+0x70>
   1e17c:	ldr	r2, [r9, #4]
   1e180:	add	r1, r2, r1
   1e184:	ldrh	r1, [r1]
   1e188:	cmp	r1, #0
   1e18c:	cmpne	r0, #0
   1e190:	bne	1e19c <flatcc_json_printer_union_field@@Base+0x78>
   1e194:	sub	sp, fp, #28
   1e198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e19c:	ldr	r2, [r9]
   1e1a0:	adds	r1, r2, r1
   1e1a4:	str	r1, [sp, #4]
   1e1a8:	beq	1e194 <flatcc_json_printer_union_field@@Base+0x70>
   1e1ac:	ldrb	r6, [r0]
   1e1b0:	ldr	r0, [r9, #16]
   1e1b4:	add	r1, r0, #1
   1e1b8:	cmp	r0, #0
   1e1bc:	str	r1, [r9, #16]
   1e1c0:	beq	1e1d8 <flatcc_json_printer_union_field@@Base+0xb4>
   1e1c4:	ldr	r0, [r4, #20]
   1e1c8:	add	r1, r0, #1
   1e1cc:	str	r1, [r4, #20]
   1e1d0:	mov	r1, #44	; 0x2c
   1e1d4:	strb	r1, [r0]
   1e1d8:	ldrb	r1, [r4, #25]
   1e1dc:	ldr	r8, [fp, #8]
   1e1e0:	ldr	r0, [r4, #20]
   1e1e4:	cmp	r1, #0
   1e1e8:	beq	1e2a0 <flatcc_json_printer_union_field@@Base+0x17c>
   1e1ec:	add	r1, r0, #1
   1e1f0:	mov	r5, r6
   1e1f4:	str	r1, [r4, #20]
   1e1f8:	mov	r1, #10
   1e1fc:	strb	r1, [r0]
   1e200:	ldr	r0, [r4, #20]
   1e204:	ldrb	r2, [r4, #25]
   1e208:	ldr	r3, [r4, #32]
   1e20c:	ldr	r1, [r4, #16]
   1e210:	mla	r6, r3, r2, r0
   1e214:	mul	r7, r3, r2
   1e218:	cmp	r6, r1
   1e21c:	bls	1e2c4 <flatcc_json_printer_union_field@@Base+0x1a0>
   1e220:	cmp	r0, r1
   1e224:	mov	r6, r5
   1e228:	bcc	1e244 <flatcc_json_printer_union_field@@Base+0x120>
   1e22c:	ldr	r2, [r4, #44]	; 0x2c
   1e230:	mov	r0, r4
   1e234:	mov	r1, #0
   1e238:	blx	r2
   1e23c:	ldr	r1, [r4, #16]
   1e240:	ldr	r0, [r4, #20]
   1e244:	sub	r5, r1, r0
   1e248:	cmp	r5, r7
   1e24c:	bcs	1e290 <flatcc_json_printer_union_field@@Base+0x16c>
   1e250:	mov	r1, #32
   1e254:	mov	r2, r5
   1e258:	bl	12944 <memset@plt>
   1e25c:	ldr	r0, [r4, #20]
   1e260:	ldr	r2, [r4, #44]	; 0x2c
   1e264:	mov	r1, #0
   1e268:	add	r0, r0, r5
   1e26c:	str	r0, [r4, #20]
   1e270:	mov	r0, r4
   1e274:	blx	r2
   1e278:	ldr	r1, [r4, #16]
   1e27c:	ldr	r0, [r4, #20]
   1e280:	sub	r7, r7, r5
   1e284:	sub	r5, r1, r0
   1e288:	cmp	r7, r5
   1e28c:	bhi	1e250 <flatcc_json_printer_union_field@@Base+0x12c>
   1e290:	mov	r1, #32
   1e294:	mov	r2, r7
   1e298:	bl	12944 <memset@plt>
   1e29c:	b	1e2d4 <flatcc_json_printer_union_field@@Base+0x1b0>
   1e2a0:	ldr	r1, [r4, #16]
   1e2a4:	cmp	r0, r1
   1e2a8:	bcc	1e2e0 <flatcc_json_printer_union_field@@Base+0x1bc>
   1e2ac:	ldr	r2, [r4, #44]	; 0x2c
   1e2b0:	mov	r0, r4
   1e2b4:	mov	r1, #0
   1e2b8:	blx	r2
   1e2bc:	ldr	r0, [r4, #20]
   1e2c0:	b	1e2e0 <flatcc_json_printer_union_field@@Base+0x1bc>
   1e2c4:	mov	r1, #32
   1e2c8:	mov	r2, r7
   1e2cc:	bl	12944 <memset@plt>
   1e2d0:	mov	r6, r5
   1e2d4:	ldr	r0, [r4, #20]
   1e2d8:	add	r0, r0, r7
   1e2dc:	str	r0, [r4, #20]
   1e2e0:	mov	r1, #34	; 0x22
   1e2e4:	strb	r1, [r0]
   1e2e8:	ldrb	r2, [r4, #26]
   1e2ec:	ldr	r0, [r4, #20]
   1e2f0:	ldr	r1, [r4, #16]
   1e2f4:	cmp	r2, #0
   1e2f8:	addeq	r0, r0, #1
   1e2fc:	add	r2, r0, r8
   1e300:	str	r0, [r4, #20]
   1e304:	cmp	r2, r1
   1e308:	bcs	1e320 <flatcc_json_printer_union_field@@Base+0x1fc>
   1e30c:	mov	r1, sl
   1e310:	mov	r2, r8
   1e314:	bl	128b4 <memcpy@plt>
   1e318:	mov	r7, r8
   1e31c:	b	1e3bc <flatcc_json_printer_union_field@@Base+0x298>
   1e320:	cmp	r0, r1
   1e324:	mov	r7, r8
   1e328:	str	r6, [sp]
   1e32c:	bcc	1e348 <flatcc_json_printer_union_field@@Base+0x224>
   1e330:	ldr	r2, [r4, #44]	; 0x2c
   1e334:	mov	r0, r4
   1e338:	mov	r1, #0
   1e33c:	blx	r2
   1e340:	ldr	r1, [r4, #16]
   1e344:	ldr	r0, [r4, #20]
   1e348:	sub	r8, r1, r0
   1e34c:	mov	r6, sl
   1e350:	mov	r5, r7
   1e354:	cmp	r8, r7
   1e358:	bcs	1e3a8 <flatcc_json_printer_union_field@@Base+0x284>
   1e35c:	mov	r7, r5
   1e360:	mov	r6, sl
   1e364:	mov	r1, r6
   1e368:	mov	r2, r8
   1e36c:	bl	128b4 <memcpy@plt>
   1e370:	ldr	r0, [r4, #20]
   1e374:	ldr	r2, [r4, #44]	; 0x2c
   1e378:	mov	r1, #0
   1e37c:	add	r0, r0, r8
   1e380:	str	r0, [r4, #20]
   1e384:	mov	r0, r4
   1e388:	blx	r2
   1e38c:	ldr	r1, [r4, #16]
   1e390:	ldr	r0, [r4, #20]
   1e394:	sub	r7, r7, r8
   1e398:	add	r6, r6, r8
   1e39c:	sub	r8, r1, r0
   1e3a0:	cmp	r7, r8
   1e3a4:	bhi	1e364 <flatcc_json_printer_union_field@@Base+0x240>
   1e3a8:	mov	r1, r6
   1e3ac:	mov	r2, r7
   1e3b0:	bl	128b4 <memcpy@plt>
   1e3b4:	ldr	r6, [sp]
   1e3b8:	mov	r8, r5
   1e3bc:	ldr	r0, [r4, #20]
   1e3c0:	ldr	r1, [r4, #16]
   1e3c4:	add	r0, r0, r7
   1e3c8:	add	r2, r0, #5
   1e3cc:	str	r0, [r4, #20]
   1e3d0:	cmp	r2, r1
   1e3d4:	bcs	1e3f4 <flatcc_json_printer_union_field@@Base+0x2d0>
   1e3d8:	mov	r1, #101	; 0x65
   1e3dc:	mov	r7, #5
   1e3e0:	strb	r1, [r0, #4]
   1e3e4:	movw	r1, #29791	; 0x745f
   1e3e8:	movt	r1, #28793	; 0x7079
   1e3ec:	str	r1, [r0]
   1e3f0:	b	1e498 <flatcc_json_printer_union_field@@Base+0x374>
   1e3f4:	cmp	r0, r1
   1e3f8:	bcc	1e414 <flatcc_json_printer_union_field@@Base+0x2f0>
   1e3fc:	ldr	r2, [r4, #44]	; 0x2c
   1e400:	mov	r0, r4
   1e404:	mov	r1, #0
   1e408:	blx	r2
   1e40c:	ldr	r1, [r4, #16]
   1e410:	ldr	r0, [r4, #20]
   1e414:	sub	r5, r1, r0
   1e418:	mov	r8, r6
   1e41c:	cmp	r5, #4
   1e420:	bhi	1e478 <flatcc_json_printer_union_field@@Base+0x354>
   1e424:	movw	r6, #1527	; 0x5f7
   1e428:	mov	r7, #5
   1e42c:	movt	r6, #2
   1e430:	mov	r1, r6
   1e434:	mov	r2, r5
   1e438:	bl	128b4 <memcpy@plt>
   1e43c:	ldr	r0, [r4, #20]
   1e440:	ldr	r2, [r4, #44]	; 0x2c
   1e444:	mov	r1, #0
   1e448:	add	r0, r0, r5
   1e44c:	str	r0, [r4, #20]
   1e450:	mov	r0, r4
   1e454:	blx	r2
   1e458:	ldr	r1, [r4, #16]
   1e45c:	ldr	r0, [r4, #20]
   1e460:	sub	r7, r7, r5
   1e464:	add	r6, r6, r5
   1e468:	sub	r5, r1, r0
   1e46c:	cmp	r7, r5
   1e470:	bhi	1e430 <flatcc_json_printer_union_field@@Base+0x30c>
   1e474:	b	1e484 <flatcc_json_printer_union_field@@Base+0x360>
   1e478:	movw	r6, #1527	; 0x5f7
   1e47c:	mov	r7, #5
   1e480:	movt	r6, #2
   1e484:	mov	r1, r6
   1e488:	mov	r2, r7
   1e48c:	bl	128b4 <memcpy@plt>
   1e490:	mov	r6, r8
   1e494:	ldr	r8, [fp, #8]
   1e498:	ldr	r0, [r4, #20]
   1e49c:	add	r1, r0, r7
   1e4a0:	str	r1, [r4, #20]
   1e4a4:	mov	r1, #34	; 0x22
   1e4a8:	strb	r1, [r0, r7]
   1e4ac:	ldrb	r0, [r4, #26]
   1e4b0:	ldr	r1, [r4, #20]
   1e4b4:	cmp	r0, #0
   1e4b8:	addeq	r1, r1, #1
   1e4bc:	add	r0, r1, #1
   1e4c0:	str	r0, [r4, #20]
   1e4c4:	mov	r0, #58	; 0x3a
   1e4c8:	strb	r0, [r1]
   1e4cc:	mov	r1, #32
   1e4d0:	ldr	r0, [r4, #20]
   1e4d4:	strb	r1, [r0]
   1e4d8:	ldrb	r0, [r4, #25]
   1e4dc:	ldr	r1, [r4, #20]
   1e4e0:	cmp	r0, #0
   1e4e4:	addne	r1, r1, #1
   1e4e8:	str	r1, [r4, #20]
   1e4ec:	ldrb	r0, [r4, #27]
   1e4f0:	cmp	r0, #0
   1e4f4:	beq	1e510 <flatcc_json_printer_union_field@@Base+0x3ec>
   1e4f8:	mov	r0, r6
   1e4fc:	bl	14c00 <flatcc_json_printer_uint8@@Base+0x2c>
   1e500:	ldr	r1, [r4, #20]
   1e504:	add	r0, r1, r0
   1e508:	str	r0, [r4, #20]
   1e50c:	b	1e520 <flatcc_json_printer_union_field@@Base+0x3fc>
   1e510:	ldr	r2, [fp, #12]
   1e514:	mov	r0, r4
   1e518:	mov	r1, r6
   1e51c:	blx	r2
   1e520:	cmp	r6, #0
   1e524:	beq	1e194 <flatcc_json_printer_union_field@@Base+0x70>
   1e528:	ldr	r0, [r4, #20]
   1e52c:	ldr	r5, [fp, #16]
   1e530:	mov	r2, r8
   1e534:	add	r1, r0, #1
   1e538:	str	r1, [r4, #20]
   1e53c:	mov	r1, #44	; 0x2c
   1e540:	strb	r1, [r0]
   1e544:	mov	r0, r4
   1e548:	mov	r1, sl
   1e54c:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1e550:	ldr	r0, [r9, #12]
   1e554:	ldr	r1, [sp, #4]
   1e558:	strb	r6, [sp, #16]
   1e55c:	str	r1, [sp, #8]
   1e560:	str	r0, [sp, #12]
   1e564:	add	r1, sp, #8
   1e568:	mov	r0, r4
   1e56c:	blx	r5
   1e570:	b	1e194 <flatcc_json_printer_union_field@@Base+0x70>

0001e574 <flatcc_json_printer_union_table@@Base>:
   1e574:	push	{r4, r5, r6, sl, fp, lr}
   1e578:	add	fp, sp, #16
   1e57c:	sub	sp, sp, #24
   1e580:	mov	r4, r0
   1e584:	ldr	r0, [r1, #4]
   1e588:	subs	r0, r0, #1
   1e58c:	beq	1e6cc <flatcc_json_printer_union_table@@Base+0x158>
   1e590:	ldr	r1, [r1]
   1e594:	ldr	r6, [r4, #32]
   1e598:	ldr	r3, [r1]
   1e59c:	add	r6, r6, #1
   1e5a0:	add	r1, r1, r3
   1e5a4:	ldr	r3, [r4, #20]
   1e5a8:	str	r6, [r4, #32]
   1e5ac:	add	r6, r3, #1
   1e5b0:	str	r6, [r4, #20]
   1e5b4:	mov	r6, #123	; 0x7b
   1e5b8:	strb	r6, [r3]
   1e5bc:	str	r0, [sp, #16]
   1e5c0:	mov	r0, #0
   1e5c4:	str	r0, [sp, #20]
   1e5c8:	str	r1, [sp, #4]
   1e5cc:	ldr	r0, [r1]
   1e5d0:	sub	r3, r1, r0
   1e5d4:	str	r3, [sp, #8]
   1e5d8:	ldrh	r0, [r1, -r0]
   1e5dc:	add	r1, sp, #4
   1e5e0:	str	r0, [sp, #12]
   1e5e4:	mov	r0, r4
   1e5e8:	blx	r2
   1e5ec:	ldrb	r1, [r4, #25]
   1e5f0:	ldr	r0, [r4, #20]
   1e5f4:	cmp	r1, #0
   1e5f8:	beq	1e6b8 <flatcc_json_printer_union_table@@Base+0x144>
   1e5fc:	add	r1, r0, #1
   1e600:	str	r1, [r4, #20]
   1e604:	mov	r1, #10
   1e608:	strb	r1, [r0]
   1e60c:	ldr	r0, [r4, #32]
   1e610:	sub	r2, r0, #1
   1e614:	str	r2, [r4, #32]
   1e618:	ldrb	r3, [r4, #25]
   1e61c:	ldr	r0, [r4, #20]
   1e620:	ldr	r1, [r4, #16]
   1e624:	mla	r6, r2, r3, r0
   1e628:	mul	r5, r2, r3
   1e62c:	cmp	r6, r1
   1e630:	bls	1e6a0 <flatcc_json_printer_union_table@@Base+0x12c>
   1e634:	cmp	r0, r1
   1e638:	bcc	1e654 <flatcc_json_printer_union_table@@Base+0xe0>
   1e63c:	ldr	r2, [r4, #44]	; 0x2c
   1e640:	mov	r0, r4
   1e644:	mov	r1, #0
   1e648:	blx	r2
   1e64c:	ldr	r1, [r4, #16]
   1e650:	ldr	r0, [r4, #20]
   1e654:	sub	r6, r1, r0
   1e658:	cmp	r6, r5
   1e65c:	bcs	1e6a0 <flatcc_json_printer_union_table@@Base+0x12c>
   1e660:	mov	r1, #32
   1e664:	mov	r2, r6
   1e668:	bl	12944 <memset@plt>
   1e66c:	ldr	r0, [r4, #20]
   1e670:	ldr	r2, [r4, #44]	; 0x2c
   1e674:	mov	r1, #0
   1e678:	add	r0, r0, r6
   1e67c:	str	r0, [r4, #20]
   1e680:	mov	r0, r4
   1e684:	blx	r2
   1e688:	ldr	r1, [r4, #16]
   1e68c:	ldr	r0, [r4, #20]
   1e690:	sub	r5, r5, r6
   1e694:	sub	r6, r1, r0
   1e698:	cmp	r5, r6
   1e69c:	bhi	1e660 <flatcc_json_printer_union_table@@Base+0xec>
   1e6a0:	mov	r1, #32
   1e6a4:	mov	r2, r5
   1e6a8:	bl	12944 <memset@plt>
   1e6ac:	ldr	r0, [r4, #20]
   1e6b0:	add	r0, r0, r5
   1e6b4:	str	r0, [r4, #20]
   1e6b8:	add	r1, r0, #1
   1e6bc:	str	r1, [r4, #20]
   1e6c0:	mov	r1, #125	; 0x7d
   1e6c4:	strb	r1, [r0]
   1e6c8:	b	1e6dc <flatcc_json_printer_union_table@@Base+0x168>
   1e6cc:	ldr	r0, [r4, #36]	; 0x24
   1e6d0:	cmp	r0, #0
   1e6d4:	moveq	r0, #2
   1e6d8:	streq	r0, [r4, #36]	; 0x24
   1e6dc:	sub	sp, fp, #16
   1e6e0:	pop	{r4, r5, r6, sl, fp, pc}

0001e6e4 <flatcc_json_printer_union_struct@@Base>:
   1e6e4:	push	{r4, r5, r6, sl, fp, lr}
   1e6e8:	add	fp, sp, #16
   1e6ec:	mov	r4, r0
   1e6f0:	ldr	r0, [r0, #20]
   1e6f4:	ldr	r3, [r4, #32]
   1e6f8:	add	r3, r3, #1
   1e6fc:	str	r3, [r4, #32]
   1e700:	add	r3, r0, #1
   1e704:	str	r3, [r4, #20]
   1e708:	mov	r3, #123	; 0x7b
   1e70c:	strb	r3, [r0]
   1e710:	ldr	r0, [r1]
   1e714:	ldr	r1, [r0]
   1e718:	add	r1, r0, r1
   1e71c:	mov	r0, r4
   1e720:	blx	r2
   1e724:	ldrb	r1, [r4, #25]
   1e728:	ldr	r0, [r4, #20]
   1e72c:	cmp	r1, #0
   1e730:	beq	1e7f0 <flatcc_json_printer_union_struct@@Base+0x10c>
   1e734:	add	r1, r0, #1
   1e738:	str	r1, [r4, #20]
   1e73c:	mov	r1, #10
   1e740:	strb	r1, [r0]
   1e744:	ldr	r0, [r4, #32]
   1e748:	sub	r2, r0, #1
   1e74c:	str	r2, [r4, #32]
   1e750:	ldrb	r3, [r4, #25]
   1e754:	ldr	r0, [r4, #20]
   1e758:	ldr	r1, [r4, #16]
   1e75c:	mla	r6, r2, r3, r0
   1e760:	mul	r5, r2, r3
   1e764:	cmp	r6, r1
   1e768:	bls	1e7d8 <flatcc_json_printer_union_struct@@Base+0xf4>
   1e76c:	cmp	r0, r1
   1e770:	bcc	1e78c <flatcc_json_printer_union_struct@@Base+0xa8>
   1e774:	ldr	r2, [r4, #44]	; 0x2c
   1e778:	mov	r0, r4
   1e77c:	mov	r1, #0
   1e780:	blx	r2
   1e784:	ldr	r1, [r4, #16]
   1e788:	ldr	r0, [r4, #20]
   1e78c:	sub	r6, r1, r0
   1e790:	cmp	r6, r5
   1e794:	bcs	1e7d8 <flatcc_json_printer_union_struct@@Base+0xf4>
   1e798:	mov	r1, #32
   1e79c:	mov	r2, r6
   1e7a0:	bl	12944 <memset@plt>
   1e7a4:	ldr	r0, [r4, #20]
   1e7a8:	ldr	r2, [r4, #44]	; 0x2c
   1e7ac:	mov	r1, #0
   1e7b0:	add	r0, r0, r6
   1e7b4:	str	r0, [r4, #20]
   1e7b8:	mov	r0, r4
   1e7bc:	blx	r2
   1e7c0:	ldr	r1, [r4, #16]
   1e7c4:	ldr	r0, [r4, #20]
   1e7c8:	sub	r5, r5, r6
   1e7cc:	sub	r6, r1, r0
   1e7d0:	cmp	r5, r6
   1e7d4:	bhi	1e798 <flatcc_json_printer_union_struct@@Base+0xb4>
   1e7d8:	mov	r1, #32
   1e7dc:	mov	r2, r5
   1e7e0:	bl	12944 <memset@plt>
   1e7e4:	ldr	r0, [r4, #20]
   1e7e8:	add	r0, r0, r5
   1e7ec:	str	r0, [r4, #20]
   1e7f0:	add	r1, r0, #1
   1e7f4:	str	r1, [r4, #20]
   1e7f8:	mov	r1, #125	; 0x7d
   1e7fc:	strb	r1, [r0]
   1e800:	pop	{r4, r5, r6, sl, fp, pc}

0001e804 <flatcc_json_printer_union_string@@Base>:
   1e804:	ldr	r1, [r1]
   1e808:	ldr	r2, [r1]
   1e80c:	ldr	r2, [r1, r2]!
   1e810:	add	r1, r1, #4
   1e814:	b	14768 <flatcc_json_printer_string@@Base+0x4>

0001e818 <flatcc_json_printer_embedded_struct_field@@Base>:
   1e818:	push	{r4, r5, r6, r7, fp, lr}
   1e81c:	add	fp, sp, #16
   1e820:	add	r7, fp, #8
   1e824:	mov	r5, r3
   1e828:	mov	r3, r1
   1e82c:	mov	r6, r2
   1e830:	mov	r4, r0
   1e834:	ldm	r7, {r1, r2, r7}
   1e838:	cmp	r3, #0
   1e83c:	beq	1e854 <flatcc_json_printer_embedded_struct_field@@Base+0x3c>
   1e840:	ldr	r0, [r4, #20]
   1e844:	add	r3, r0, #1
   1e848:	str	r3, [r4, #20]
   1e84c:	mov	r3, #44	; 0x2c
   1e850:	strb	r3, [r0]
   1e854:	mov	r0, r4
   1e858:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1e85c:	ldr	r1, [r4, #32]
   1e860:	ldr	r0, [r4, #20]
   1e864:	add	r1, r1, #1
   1e868:	str	r1, [r4, #32]
   1e86c:	add	r1, r0, #1
   1e870:	str	r1, [r4, #20]
   1e874:	mov	r1, #123	; 0x7b
   1e878:	strb	r1, [r0]
   1e87c:	add	r1, r6, r5
   1e880:	mov	r0, r4
   1e884:	blx	r7
   1e888:	ldrb	r1, [r4, #25]
   1e88c:	ldr	r0, [r4, #20]
   1e890:	cmp	r1, #0
   1e894:	beq	1e954 <flatcc_json_printer_embedded_struct_field@@Base+0x13c>
   1e898:	add	r1, r0, #1
   1e89c:	str	r1, [r4, #20]
   1e8a0:	mov	r1, #10
   1e8a4:	strb	r1, [r0]
   1e8a8:	ldr	r0, [r4, #32]
   1e8ac:	sub	r2, r0, #1
   1e8b0:	str	r2, [r4, #32]
   1e8b4:	ldrb	r3, [r4, #25]
   1e8b8:	ldr	r0, [r4, #20]
   1e8bc:	ldr	r1, [r4, #16]
   1e8c0:	mla	r7, r2, r3, r0
   1e8c4:	mul	r5, r2, r3
   1e8c8:	cmp	r7, r1
   1e8cc:	bls	1e93c <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   1e8d0:	cmp	r0, r1
   1e8d4:	bcc	1e8f0 <flatcc_json_printer_embedded_struct_field@@Base+0xd8>
   1e8d8:	ldr	r2, [r4, #44]	; 0x2c
   1e8dc:	mov	r0, r4
   1e8e0:	mov	r1, #0
   1e8e4:	blx	r2
   1e8e8:	ldr	r1, [r4, #16]
   1e8ec:	ldr	r0, [r4, #20]
   1e8f0:	sub	r6, r1, r0
   1e8f4:	cmp	r6, r5
   1e8f8:	bcs	1e93c <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   1e8fc:	mov	r1, #32
   1e900:	mov	r2, r6
   1e904:	bl	12944 <memset@plt>
   1e908:	ldr	r0, [r4, #20]
   1e90c:	ldr	r2, [r4, #44]	; 0x2c
   1e910:	mov	r1, #0
   1e914:	add	r0, r0, r6
   1e918:	str	r0, [r4, #20]
   1e91c:	mov	r0, r4
   1e920:	blx	r2
   1e924:	ldr	r1, [r4, #16]
   1e928:	ldr	r0, [r4, #20]
   1e92c:	sub	r5, r5, r6
   1e930:	sub	r6, r1, r0
   1e934:	cmp	r5, r6
   1e938:	bhi	1e8fc <flatcc_json_printer_embedded_struct_field@@Base+0xe4>
   1e93c:	mov	r1, #32
   1e940:	mov	r2, r5
   1e944:	bl	12944 <memset@plt>
   1e948:	ldr	r0, [r4, #20]
   1e94c:	add	r0, r0, r5
   1e950:	str	r0, [r4, #20]
   1e954:	add	r1, r0, #1
   1e958:	str	r1, [r4, #20]
   1e95c:	mov	r1, #125	; 0x7d
   1e960:	strb	r1, [r0]
   1e964:	pop	{r4, r5, r6, r7, fp, pc}

0001e968 <flatcc_json_printer_struct_field@@Base>:
   1e968:	push	{r4, r5, r6, r7, fp, lr}
   1e96c:	add	fp, sp, #16
   1e970:	mov	r4, r0
   1e974:	mov	r0, #4
   1e978:	add	r0, r0, r2, lsl #1
   1e97c:	ldr	r2, [r1, #8]
   1e980:	cmp	r0, r2
   1e984:	popge	{r4, r5, r6, r7, fp, pc}
   1e988:	ldr	r2, [r1, #4]
   1e98c:	add	r0, r2, r0
   1e990:	ldrh	r0, [r0]
   1e994:	cmp	r0, #0
   1e998:	ldrne	r2, [r1]
   1e99c:	addsne	r5, r2, r0
   1e9a0:	bne	1e9a8 <flatcc_json_printer_struct_field@@Base+0x40>
   1e9a4:	pop	{r4, r5, r6, r7, fp, pc}
   1e9a8:	ldr	r0, [r1, #16]
   1e9ac:	ldr	r7, [fp, #12]
   1e9b0:	ldr	r2, [fp, #8]
   1e9b4:	add	r6, r0, #1
   1e9b8:	cmp	r0, #0
   1e9bc:	str	r6, [r1, #16]
   1e9c0:	beq	1e9d8 <flatcc_json_printer_struct_field@@Base+0x70>
   1e9c4:	ldr	r0, [r4, #20]
   1e9c8:	add	r1, r0, #1
   1e9cc:	str	r1, [r4, #20]
   1e9d0:	mov	r1, #44	; 0x2c
   1e9d4:	strb	r1, [r0]
   1e9d8:	mov	r0, r4
   1e9dc:	mov	r1, r3
   1e9e0:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1e9e4:	ldr	r1, [r4, #32]
   1e9e8:	ldr	r0, [r4, #20]
   1e9ec:	add	r1, r1, #1
   1e9f0:	str	r1, [r4, #32]
   1e9f4:	add	r1, r0, #1
   1e9f8:	str	r1, [r4, #20]
   1e9fc:	mov	r1, #123	; 0x7b
   1ea00:	strb	r1, [r0]
   1ea04:	mov	r0, r4
   1ea08:	mov	r1, r5
   1ea0c:	blx	r7
   1ea10:	ldrb	r1, [r4, #25]
   1ea14:	ldr	r0, [r4, #20]
   1ea18:	cmp	r1, #0
   1ea1c:	beq	1eadc <flatcc_json_printer_struct_field@@Base+0x174>
   1ea20:	add	r1, r0, #1
   1ea24:	str	r1, [r4, #20]
   1ea28:	mov	r1, #10
   1ea2c:	strb	r1, [r0]
   1ea30:	ldr	r0, [r4, #32]
   1ea34:	sub	r2, r0, #1
   1ea38:	str	r2, [r4, #32]
   1ea3c:	ldrb	r3, [r4, #25]
   1ea40:	ldr	r0, [r4, #20]
   1ea44:	ldr	r1, [r4, #16]
   1ea48:	mla	r7, r2, r3, r0
   1ea4c:	mul	r5, r2, r3
   1ea50:	cmp	r7, r1
   1ea54:	bls	1eac4 <flatcc_json_printer_struct_field@@Base+0x15c>
   1ea58:	cmp	r0, r1
   1ea5c:	bcc	1ea78 <flatcc_json_printer_struct_field@@Base+0x110>
   1ea60:	ldr	r2, [r4, #44]	; 0x2c
   1ea64:	mov	r0, r4
   1ea68:	mov	r1, #0
   1ea6c:	blx	r2
   1ea70:	ldr	r1, [r4, #16]
   1ea74:	ldr	r0, [r4, #20]
   1ea78:	sub	r6, r1, r0
   1ea7c:	cmp	r6, r5
   1ea80:	bcs	1eac4 <flatcc_json_printer_struct_field@@Base+0x15c>
   1ea84:	mov	r1, #32
   1ea88:	mov	r2, r6
   1ea8c:	bl	12944 <memset@plt>
   1ea90:	ldr	r0, [r4, #20]
   1ea94:	ldr	r2, [r4, #44]	; 0x2c
   1ea98:	mov	r1, #0
   1ea9c:	add	r0, r0, r6
   1eaa0:	str	r0, [r4, #20]
   1eaa4:	mov	r0, r4
   1eaa8:	blx	r2
   1eaac:	ldr	r1, [r4, #16]
   1eab0:	ldr	r0, [r4, #20]
   1eab4:	sub	r5, r5, r6
   1eab8:	sub	r6, r1, r0
   1eabc:	cmp	r5, r6
   1eac0:	bhi	1ea84 <flatcc_json_printer_struct_field@@Base+0x11c>
   1eac4:	mov	r1, #32
   1eac8:	mov	r2, r5
   1eacc:	bl	12944 <memset@plt>
   1ead0:	ldr	r0, [r4, #20]
   1ead4:	add	r0, r0, r5
   1ead8:	str	r0, [r4, #20]
   1eadc:	add	r1, r0, #1
   1eae0:	str	r1, [r4, #20]
   1eae4:	mov	r1, #125	; 0x7d
   1eae8:	strb	r1, [r0]
   1eaec:	pop	{r4, r5, r6, r7, fp, pc}

0001eaf0 <flatcc_json_printer_struct_as_root@@Base>:
   1eaf0:	push	{r4, r5, r6, sl, fp, lr}
   1eaf4:	add	fp, sp, #16
   1eaf8:	mov	r5, r1
   1eafc:	mov	r4, r0
   1eb00:	bl	1ec78 <flatcc_json_printer_struct_as_root@@Base+0x188>
   1eb04:	ldr	r1, [r4, #32]
   1eb08:	ldr	r0, [r4, #20]
   1eb0c:	ldr	r2, [fp, #8]
   1eb10:	add	r1, r1, #1
   1eb14:	str	r1, [r4, #32]
   1eb18:	add	r1, r0, #1
   1eb1c:	str	r1, [r4, #20]
   1eb20:	mov	r1, #123	; 0x7b
   1eb24:	strb	r1, [r0]
   1eb28:	ldr	r0, [r5]
   1eb2c:	add	r1, r5, r0
   1eb30:	mov	r0, r4
   1eb34:	blx	r2
   1eb38:	ldrb	r1, [r4, #25]
   1eb3c:	ldr	r0, [r4, #20]
   1eb40:	cmp	r1, #0
   1eb44:	beq	1ec04 <flatcc_json_printer_struct_as_root@@Base+0x114>
   1eb48:	add	r1, r0, #1
   1eb4c:	str	r1, [r4, #20]
   1eb50:	mov	r1, #10
   1eb54:	strb	r1, [r0]
   1eb58:	ldr	r0, [r4, #32]
   1eb5c:	sub	r2, r0, #1
   1eb60:	str	r2, [r4, #32]
   1eb64:	ldrb	r3, [r4, #25]
   1eb68:	ldr	r0, [r4, #20]
   1eb6c:	ldr	r1, [r4, #16]
   1eb70:	mla	r6, r2, r3, r0
   1eb74:	mul	r5, r2, r3
   1eb78:	cmp	r6, r1
   1eb7c:	bls	1ebec <flatcc_json_printer_struct_as_root@@Base+0xfc>
   1eb80:	cmp	r0, r1
   1eb84:	bcc	1eba0 <flatcc_json_printer_struct_as_root@@Base+0xb0>
   1eb88:	ldr	r2, [r4, #44]	; 0x2c
   1eb8c:	mov	r0, r4
   1eb90:	mov	r1, #0
   1eb94:	blx	r2
   1eb98:	ldr	r1, [r4, #16]
   1eb9c:	ldr	r0, [r4, #20]
   1eba0:	sub	r6, r1, r0
   1eba4:	cmp	r6, r5
   1eba8:	bcs	1ebec <flatcc_json_printer_struct_as_root@@Base+0xfc>
   1ebac:	mov	r1, #32
   1ebb0:	mov	r2, r6
   1ebb4:	bl	12944 <memset@plt>
   1ebb8:	ldr	r0, [r4, #20]
   1ebbc:	ldr	r2, [r4, #44]	; 0x2c
   1ebc0:	mov	r1, #0
   1ebc4:	add	r0, r0, r6
   1ebc8:	str	r0, [r4, #20]
   1ebcc:	mov	r0, r4
   1ebd0:	blx	r2
   1ebd4:	ldr	r1, [r4, #16]
   1ebd8:	ldr	r0, [r4, #20]
   1ebdc:	sub	r5, r5, r6
   1ebe0:	sub	r6, r1, r0
   1ebe4:	cmp	r5, r6
   1ebe8:	bhi	1ebac <flatcc_json_printer_struct_as_root@@Base+0xbc>
   1ebec:	mov	r1, #32
   1ebf0:	mov	r2, r5
   1ebf4:	bl	12944 <memset@plt>
   1ebf8:	ldr	r0, [r4, #20]
   1ebfc:	add	r0, r0, r5
   1ec00:	str	r0, [r4, #20]
   1ec04:	add	r1, r0, #1
   1ec08:	str	r1, [r4, #20]
   1ec0c:	mov	r1, #125	; 0x7d
   1ec10:	strb	r1, [r0]
   1ec14:	ldrb	r0, [r4, #25]
   1ec18:	cmp	r0, #0
   1ec1c:	beq	1ec40 <flatcc_json_printer_struct_as_root@@Base+0x150>
   1ec20:	ldr	r0, [r4, #32]
   1ec24:	cmp	r0, #0
   1ec28:	bne	1ec40 <flatcc_json_printer_struct_as_root@@Base+0x150>
   1ec2c:	ldr	r0, [r4, #20]
   1ec30:	add	r1, r0, #1
   1ec34:	str	r1, [r4, #20]
   1ec38:	mov	r1, #10
   1ec3c:	strb	r1, [r0]
   1ec40:	ldr	r2, [r4, #44]	; 0x2c
   1ec44:	mov	r0, r4
   1ec48:	mov	r1, #1
   1ec4c:	blx	r2
   1ec50:	ldr	r1, [r4, #36]	; 0x24
   1ec54:	mvn	r0, #0
   1ec58:	cmp	r1, #0
   1ec5c:	popne	{r4, r5, r6, sl, fp, pc}
   1ec60:	ldr	r1, [r4, #12]
   1ec64:	ldr	r2, [r4, #20]
   1ec68:	ldr	r0, [r4]
   1ec6c:	add	r1, r2, r1
   1ec70:	sub	r0, r1, r0
   1ec74:	pop	{r4, r5, r6, sl, fp, pc}
   1ec78:	push	{r4, r5, fp, lr}
   1ec7c:	add	fp, sp, #8
   1ec80:	sub	sp, sp, #8
   1ec84:	cmp	r1, #0
   1ec88:	mov	r4, r0
   1ec8c:	mov	r0, #0
   1ec90:	cmpne	r2, #7
   1ec94:	str	r0, [sp, #4]
   1ec98:	bls	1ecd8 <flatcc_json_printer_struct_as_root@@Base+0x1e8>
   1ec9c:	cmp	r3, #0
   1eca0:	beq	1ecd0 <flatcc_json_printer_struct_as_root@@Base+0x1e0>
   1eca4:	mov	r5, r1
   1eca8:	add	r0, sp, #4
   1ecac:	mov	r1, r3
   1ecb0:	mov	r2, #4
   1ecb4:	bl	12950 <strncpy@plt>
   1ecb8:	ldr	r0, [sp, #4]
   1ecbc:	cmp	r0, #0
   1ecc0:	beq	1ecd0 <flatcc_json_printer_struct_as_root@@Base+0x1e0>
   1ecc4:	ldr	r1, [r5, #4]
   1ecc8:	cmp	r1, r0
   1eccc:	bne	1ed08 <flatcc_json_printer_struct_as_root@@Base+0x218>
   1ecd0:	sub	sp, fp, #8
   1ecd4:	pop	{r4, r5, fp, pc}
   1ecd8:	ldr	r0, [r4, #36]	; 0x24
   1ecdc:	movw	r1, #1250	; 0x4e2
   1ece0:	movw	r3, #2577	; 0xa11
   1ece4:	movw	r2, #1019	; 0x3fb
   1ece8:	movt	r1, #2
   1ecec:	movt	r3, #2
   1ecf0:	cmp	r0, #0
   1ecf4:	moveq	r0, #1
   1ecf8:	streq	r0, [r4, #36]	; 0x24
   1ecfc:	movw	r0, #2546	; 0x9f2
   1ed00:	movt	r0, #2
   1ed04:	bl	12998 <__assert_fail@plt>
   1ed08:	ldr	r0, [r4, #36]	; 0x24
   1ed0c:	movw	r1, #1250	; 0x4e2
   1ed10:	movw	r3, #2577	; 0xa11
   1ed14:	movw	r2, #1028	; 0x404
   1ed18:	movt	r1, #2
   1ed1c:	movt	r3, #2
   1ed20:	cmp	r0, #0
   1ed24:	moveq	r0, #1
   1ed28:	streq	r0, [r4, #36]	; 0x24
   1ed2c:	movw	r0, #2656	; 0xa60
   1ed30:	movt	r0, #2
   1ed34:	bl	12998 <__assert_fail@plt>

0001ed38 <flatcc_json_printer_table_as_root@@Base>:
   1ed38:	push	{r4, r5, r6, sl, fp, lr}
   1ed3c:	add	fp, sp, #16
   1ed40:	sub	sp, sp, #24
   1ed44:	mov	r5, r1
   1ed48:	mov	r4, r0
   1ed4c:	bl	1ec78 <flatcc_json_printer_struct_as_root@@Base+0x188>
   1ed50:	ldr	r2, [r4, #32]
   1ed54:	ldr	r1, [r4, #20]
   1ed58:	ldr	r0, [r5]
   1ed5c:	add	r2, r2, #1
   1ed60:	str	r2, [r4, #32]
   1ed64:	add	r2, r1, #1
   1ed68:	str	r2, [r4, #20]
   1ed6c:	mov	r2, #123	; 0x7b
   1ed70:	strb	r2, [r1]
   1ed74:	mov	r1, #99	; 0x63
   1ed78:	str	r1, [sp, #16]
   1ed7c:	mov	r1, #0
   1ed80:	str	r1, [sp, #20]
   1ed84:	add	r1, r5, r0
   1ed88:	str	r1, [sp, #4]
   1ed8c:	ldr	r0, [r5, r0]
   1ed90:	sub	r2, r1, r0
   1ed94:	str	r2, [sp, #8]
   1ed98:	ldr	r2, [fp, #8]
   1ed9c:	ldrh	r0, [r1, -r0]
   1eda0:	add	r1, sp, #4
   1eda4:	str	r0, [sp, #12]
   1eda8:	mov	r0, r4
   1edac:	blx	r2
   1edb0:	ldrb	r1, [r4, #25]
   1edb4:	ldr	r0, [r4, #20]
   1edb8:	cmp	r1, #0
   1edbc:	beq	1ee7c <flatcc_json_printer_table_as_root@@Base+0x144>
   1edc0:	add	r1, r0, #1
   1edc4:	str	r1, [r4, #20]
   1edc8:	mov	r1, #10
   1edcc:	strb	r1, [r0]
   1edd0:	ldr	r0, [r4, #32]
   1edd4:	sub	r2, r0, #1
   1edd8:	str	r2, [r4, #32]
   1eddc:	ldrb	r3, [r4, #25]
   1ede0:	ldr	r0, [r4, #20]
   1ede4:	ldr	r1, [r4, #16]
   1ede8:	mla	r6, r2, r3, r0
   1edec:	mul	r5, r2, r3
   1edf0:	cmp	r6, r1
   1edf4:	bls	1ee64 <flatcc_json_printer_table_as_root@@Base+0x12c>
   1edf8:	cmp	r0, r1
   1edfc:	bcc	1ee18 <flatcc_json_printer_table_as_root@@Base+0xe0>
   1ee00:	ldr	r2, [r4, #44]	; 0x2c
   1ee04:	mov	r0, r4
   1ee08:	mov	r1, #0
   1ee0c:	blx	r2
   1ee10:	ldr	r1, [r4, #16]
   1ee14:	ldr	r0, [r4, #20]
   1ee18:	sub	r6, r1, r0
   1ee1c:	cmp	r6, r5
   1ee20:	bcs	1ee64 <flatcc_json_printer_table_as_root@@Base+0x12c>
   1ee24:	mov	r1, #32
   1ee28:	mov	r2, r6
   1ee2c:	bl	12944 <memset@plt>
   1ee30:	ldr	r0, [r4, #20]
   1ee34:	ldr	r2, [r4, #44]	; 0x2c
   1ee38:	mov	r1, #0
   1ee3c:	add	r0, r0, r6
   1ee40:	str	r0, [r4, #20]
   1ee44:	mov	r0, r4
   1ee48:	blx	r2
   1ee4c:	ldr	r1, [r4, #16]
   1ee50:	ldr	r0, [r4, #20]
   1ee54:	sub	r5, r5, r6
   1ee58:	sub	r6, r1, r0
   1ee5c:	cmp	r5, r6
   1ee60:	bhi	1ee24 <flatcc_json_printer_table_as_root@@Base+0xec>
   1ee64:	mov	r1, #32
   1ee68:	mov	r2, r5
   1ee6c:	bl	12944 <memset@plt>
   1ee70:	ldr	r0, [r4, #20]
   1ee74:	add	r0, r0, r5
   1ee78:	str	r0, [r4, #20]
   1ee7c:	add	r1, r0, #1
   1ee80:	str	r1, [r4, #20]
   1ee84:	mov	r1, #125	; 0x7d
   1ee88:	strb	r1, [r0]
   1ee8c:	ldrb	r0, [r4, #25]
   1ee90:	cmp	r0, #0
   1ee94:	beq	1eeb8 <flatcc_json_printer_table_as_root@@Base+0x180>
   1ee98:	ldr	r0, [r4, #32]
   1ee9c:	cmp	r0, #0
   1eea0:	bne	1eeb8 <flatcc_json_printer_table_as_root@@Base+0x180>
   1eea4:	ldr	r0, [r4, #20]
   1eea8:	add	r1, r0, #1
   1eeac:	str	r1, [r4, #20]
   1eeb0:	mov	r1, #10
   1eeb4:	strb	r1, [r0]
   1eeb8:	ldr	r2, [r4, #44]	; 0x2c
   1eebc:	mov	r0, r4
   1eec0:	mov	r1, #1
   1eec4:	blx	r2
   1eec8:	ldr	r1, [r4, #36]	; 0x24
   1eecc:	mvn	r0, #0
   1eed0:	cmp	r1, #0
   1eed4:	bne	1eeec <flatcc_json_printer_table_as_root@@Base+0x1b4>
   1eed8:	ldr	r1, [r4, #12]
   1eedc:	ldr	r2, [r4, #20]
   1eee0:	ldr	r0, [r4]
   1eee4:	add	r1, r2, r1
   1eee8:	sub	r0, r1, r0
   1eeec:	sub	sp, fp, #16
   1eef0:	pop	{r4, r5, r6, sl, fp, pc}

0001eef4 <flatcc_json_printer_struct_as_nested_root@@Base>:
   1eef4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1eef8:	add	fp, sp, #24
   1eefc:	mov	r7, r1
   1ef00:	ldr	r1, [r1, #8]
   1ef04:	mov	r4, r0
   1ef08:	mov	r0, #4
   1ef0c:	add	r0, r0, r2, lsl #1
   1ef10:	cmp	r0, r1
   1ef14:	bge	1ef34 <flatcc_json_printer_struct_as_nested_root@@Base+0x40>
   1ef18:	ldr	r1, [r7, #4]
   1ef1c:	add	r0, r1, r0
   1ef20:	ldrh	r0, [r0]
   1ef24:	cmp	r0, #0
   1ef28:	ldrne	r1, [r7]
   1ef2c:	addsne	r0, r1, r0
   1ef30:	bne	1ef38 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   1ef34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ef38:	ldr	r6, [r0]
   1ef3c:	mov	r5, r3
   1ef40:	ldr	r3, [fp, #12]
   1ef44:	ldr	r9, [fp, #16]
   1ef48:	ldr	r8, [fp, #8]
   1ef4c:	ldr	r2, [r6, r0]!
   1ef50:	mov	r0, r4
   1ef54:	mov	r1, r6
   1ef58:	bl	1ec78 <flatcc_json_printer_struct_as_root@@Base+0x188>
   1ef5c:	ldr	r0, [r7, #16]
   1ef60:	add	r1, r0, #1
   1ef64:	cmp	r0, #0
   1ef68:	str	r1, [r7, #16]
   1ef6c:	beq	1ef84 <flatcc_json_printer_struct_as_nested_root@@Base+0x90>
   1ef70:	ldr	r0, [r4, #20]
   1ef74:	add	r1, r0, #1
   1ef78:	str	r1, [r4, #20]
   1ef7c:	mov	r1, #44	; 0x2c
   1ef80:	strb	r1, [r0]
   1ef84:	mov	r0, r4
   1ef88:	mov	r1, r5
   1ef8c:	mov	r2, r8
   1ef90:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1ef94:	ldr	r1, [r4, #32]
   1ef98:	ldr	r0, [r4, #20]
   1ef9c:	add	r1, r1, #1
   1efa0:	str	r1, [r4, #32]
   1efa4:	add	r1, r0, #1
   1efa8:	str	r1, [r4, #20]
   1efac:	mov	r1, #123	; 0x7b
   1efb0:	strb	r1, [r0]
   1efb4:	ldr	r0, [r6]
   1efb8:	add	r1, r6, r0
   1efbc:	mov	r0, r4
   1efc0:	blx	r9
   1efc4:	ldrb	r1, [r4, #25]
   1efc8:	ldr	r0, [r4, #20]
   1efcc:	cmp	r1, #0
   1efd0:	beq	1f090 <flatcc_json_printer_struct_as_nested_root@@Base+0x19c>
   1efd4:	add	r1, r0, #1
   1efd8:	str	r1, [r4, #20]
   1efdc:	mov	r1, #10
   1efe0:	strb	r1, [r0]
   1efe4:	ldr	r0, [r4, #32]
   1efe8:	sub	r2, r0, #1
   1efec:	str	r2, [r4, #32]
   1eff0:	ldrb	r3, [r4, #25]
   1eff4:	ldr	r0, [r4, #20]
   1eff8:	ldr	r1, [r4, #16]
   1effc:	mla	r7, r2, r3, r0
   1f000:	mul	r5, r2, r3
   1f004:	cmp	r7, r1
   1f008:	bls	1f078 <flatcc_json_printer_struct_as_nested_root@@Base+0x184>
   1f00c:	cmp	r0, r1
   1f010:	bcc	1f02c <flatcc_json_printer_struct_as_nested_root@@Base+0x138>
   1f014:	ldr	r2, [r4, #44]	; 0x2c
   1f018:	mov	r0, r4
   1f01c:	mov	r1, #0
   1f020:	blx	r2
   1f024:	ldr	r1, [r4, #16]
   1f028:	ldr	r0, [r4, #20]
   1f02c:	sub	r6, r1, r0
   1f030:	cmp	r6, r5
   1f034:	bcs	1f078 <flatcc_json_printer_struct_as_nested_root@@Base+0x184>
   1f038:	mov	r1, #32
   1f03c:	mov	r2, r6
   1f040:	bl	12944 <memset@plt>
   1f044:	ldr	r0, [r4, #20]
   1f048:	ldr	r2, [r4, #44]	; 0x2c
   1f04c:	mov	r1, #0
   1f050:	add	r0, r0, r6
   1f054:	str	r0, [r4, #20]
   1f058:	mov	r0, r4
   1f05c:	blx	r2
   1f060:	ldr	r1, [r4, #16]
   1f064:	ldr	r0, [r4, #20]
   1f068:	sub	r5, r5, r6
   1f06c:	sub	r6, r1, r0
   1f070:	cmp	r5, r6
   1f074:	bhi	1f038 <flatcc_json_printer_struct_as_nested_root@@Base+0x144>
   1f078:	mov	r1, #32
   1f07c:	mov	r2, r5
   1f080:	bl	12944 <memset@plt>
   1f084:	ldr	r0, [r4, #20]
   1f088:	add	r0, r0, r5
   1f08c:	str	r0, [r4, #20]
   1f090:	add	r1, r0, #1
   1f094:	str	r1, [r4, #20]
   1f098:	mov	r1, #125	; 0x7d
   1f09c:	strb	r1, [r0]
   1f0a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001f0a4 <flatcc_json_printer_table_as_nested_root@@Base>:
   1f0a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1f0a8:	add	fp, sp, #24
   1f0ac:	sub	sp, sp, #24
   1f0b0:	mov	r5, r1
   1f0b4:	ldr	r1, [r1, #8]
   1f0b8:	mov	r4, r0
   1f0bc:	mov	r0, #4
   1f0c0:	add	r0, r0, r2, lsl #1
   1f0c4:	cmp	r0, r1
   1f0c8:	bge	1f0e8 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   1f0cc:	ldr	r1, [r5, #4]
   1f0d0:	add	r0, r1, r0
   1f0d4:	ldrh	r0, [r0]
   1f0d8:	cmp	r0, #0
   1f0dc:	ldrne	r1, [r5]
   1f0e0:	addsne	r0, r1, r0
   1f0e4:	bne	1f0f0 <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   1f0e8:	sub	sp, fp, #24
   1f0ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f0f0:	ldr	r1, [r0]
   1f0f4:	mov	r6, r3
   1f0f8:	ldr	r3, [fp, #12]
   1f0fc:	ldr	r8, [fp, #8]
   1f100:	ldr	r2, [r1, r0]!
   1f104:	mov	r0, r4
   1f108:	add	r7, r1, #4
   1f10c:	mov	r1, r7
   1f110:	bl	1ec78 <flatcc_json_printer_struct_as_root@@Base+0x188>
   1f114:	ldr	r0, [r5, #16]
   1f118:	add	r1, r0, #1
   1f11c:	cmp	r0, #0
   1f120:	str	r1, [r5, #16]
   1f124:	beq	1f13c <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   1f128:	ldr	r0, [r4, #20]
   1f12c:	add	r1, r0, #1
   1f130:	str	r1, [r4, #20]
   1f134:	mov	r1, #44	; 0x2c
   1f138:	strb	r1, [r0]
   1f13c:	mov	r0, r4
   1f140:	mov	r1, r6
   1f144:	mov	r2, r8
   1f148:	bl	15a5c <flatcc_json_printer_string_field@@Base+0x90>
   1f14c:	ldr	r0, [r5, #12]
   1f150:	subs	r0, r0, #1
   1f154:	beq	1f294 <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   1f158:	ldr	r1, [r7]
   1f15c:	ldr	r3, [r4, #20]
   1f160:	ldr	r2, [fp, #16]
   1f164:	add	r1, r7, r1
   1f168:	ldr	r7, [r4, #32]
   1f16c:	add	r7, r7, #1
   1f170:	str	r7, [r4, #32]
   1f174:	add	r7, r3, #1
   1f178:	str	r7, [r4, #20]
   1f17c:	mov	r7, #123	; 0x7b
   1f180:	strb	r7, [r3]
   1f184:	str	r0, [sp, #16]
   1f188:	mov	r0, #0
   1f18c:	str	r0, [sp, #20]
   1f190:	str	r1, [sp, #4]
   1f194:	ldr	r0, [r1]
   1f198:	sub	r3, r1, r0
   1f19c:	str	r3, [sp, #8]
   1f1a0:	ldrh	r0, [r1, -r0]
   1f1a4:	add	r1, sp, #4
   1f1a8:	str	r0, [sp, #12]
   1f1ac:	mov	r0, r4
   1f1b0:	blx	r2
   1f1b4:	ldrb	r1, [r4, #25]
   1f1b8:	ldr	r0, [r4, #20]
   1f1bc:	cmp	r1, #0
   1f1c0:	beq	1f280 <flatcc_json_printer_table_as_nested_root@@Base+0x1dc>
   1f1c4:	add	r1, r0, #1
   1f1c8:	str	r1, [r4, #20]
   1f1cc:	mov	r1, #10
   1f1d0:	strb	r1, [r0]
   1f1d4:	ldr	r0, [r4, #32]
   1f1d8:	sub	r2, r0, #1
   1f1dc:	str	r2, [r4, #32]
   1f1e0:	ldrb	r3, [r4, #25]
   1f1e4:	ldr	r0, [r4, #20]
   1f1e8:	ldr	r1, [r4, #16]
   1f1ec:	mla	r7, r2, r3, r0
   1f1f0:	mul	r5, r2, r3
   1f1f4:	cmp	r7, r1
   1f1f8:	bls	1f268 <flatcc_json_printer_table_as_nested_root@@Base+0x1c4>
   1f1fc:	cmp	r0, r1
   1f200:	bcc	1f21c <flatcc_json_printer_table_as_nested_root@@Base+0x178>
   1f204:	ldr	r2, [r4, #44]	; 0x2c
   1f208:	mov	r0, r4
   1f20c:	mov	r1, #0
   1f210:	blx	r2
   1f214:	ldr	r1, [r4, #16]
   1f218:	ldr	r0, [r4, #20]
   1f21c:	sub	r6, r1, r0
   1f220:	cmp	r6, r5
   1f224:	bcs	1f268 <flatcc_json_printer_table_as_nested_root@@Base+0x1c4>
   1f228:	mov	r1, #32
   1f22c:	mov	r2, r6
   1f230:	bl	12944 <memset@plt>
   1f234:	ldr	r0, [r4, #20]
   1f238:	ldr	r2, [r4, #44]	; 0x2c
   1f23c:	mov	r1, #0
   1f240:	add	r0, r0, r6
   1f244:	str	r0, [r4, #20]
   1f248:	mov	r0, r4
   1f24c:	blx	r2
   1f250:	ldr	r1, [r4, #16]
   1f254:	ldr	r0, [r4, #20]
   1f258:	sub	r5, r5, r6
   1f25c:	sub	r6, r1, r0
   1f260:	cmp	r5, r6
   1f264:	bhi	1f228 <flatcc_json_printer_table_as_nested_root@@Base+0x184>
   1f268:	mov	r1, #32
   1f26c:	mov	r2, r5
   1f270:	bl	12944 <memset@plt>
   1f274:	ldr	r0, [r4, #20]
   1f278:	add	r0, r0, r5
   1f27c:	str	r0, [r4, #20]
   1f280:	add	r1, r0, #1
   1f284:	str	r1, [r4, #20]
   1f288:	mov	r1, #125	; 0x7d
   1f28c:	strb	r1, [r0]
   1f290:	b	1f0e8 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   1f294:	ldr	r0, [r4, #36]	; 0x24
   1f298:	cmp	r0, #0
   1f29c:	moveq	r0, #2
   1f2a0:	streq	r0, [r4, #36]	; 0x24
   1f2a4:	b	1f0e8 <flatcc_json_printer_table_as_nested_root@@Base+0x44>

0001f2a8 <flatcc_json_printer_init@@Base>:
   1f2a8:	push	{r4, r5, r6, sl, fp, lr}
   1f2ac:	add	fp, sp, #16
   1f2b0:	vmov.i32	q8, #0	; 0x00000000
   1f2b4:	mov	r5, r0
   1f2b8:	mov	r4, #0
   1f2bc:	cmp	r1, #0
   1f2c0:	movw	r6, #16448	; 0x4040
   1f2c4:	str	r4, [r0, #32]
   1f2c8:	mov	r0, #36	; 0x24
   1f2cc:	mov	r2, r5
   1f2d0:	vst1.32	{d16-d17}, [r2], r0
   1f2d4:	add	r0, r5, #16
   1f2d8:	vst1.32	{d16-d17}, [r0]
   1f2dc:	movw	r0, #8332	; 0x208c
   1f2e0:	str	r4, [r2]
   1f2e4:	movw	r2, #62276	; 0xf344
   1f2e8:	movt	r0, #3
   1f2ec:	movt	r2, #1
   1f2f0:	ldr	r0, [r0]
   1f2f4:	movne	r0, r1
   1f2f8:	str	r0, [r5, #40]	; 0x28
   1f2fc:	movw	r0, #16448	; 0x4040
   1f300:	str	r2, [r5, #44]	; 0x2c
   1f304:	bl	128fc <malloc@plt>
   1f308:	cmp	r0, #0
   1f30c:	str	r0, [r5]
   1f310:	beq	1f338 <flatcc_json_printer_init@@Base+0x90>
   1f314:	mov	r1, #16384	; 0x4000
   1f318:	str	r6, [r5, #4]
   1f31c:	str	r1, [r5, #8]
   1f320:	mov	r1, #1
   1f324:	strb	r1, [r5, #24]
   1f328:	add	r1, r0, #16384	; 0x4000
   1f32c:	str	r1, [r5, #16]
   1f330:	str	r0, [r5, #20]
   1f334:	b	1f33c <flatcc_json_printer_init@@Base+0x94>
   1f338:	mvn	r4, #0
   1f33c:	mov	r0, r4
   1f340:	pop	{r4, r5, r6, sl, fp, pc}
   1f344:	push	{r4, r5, r6, sl, fp, lr}
   1f348:	add	fp, sp, #16
   1f34c:	mov	r4, r0
   1f350:	cmp	r1, #0
   1f354:	beq	1f360 <flatcc_json_printer_init@@Base+0xb8>
   1f358:	ldr	r5, [r4, #20]
   1f35c:	b	1f370 <flatcc_json_printer_init@@Base+0xc8>
   1f360:	ldr	r6, [r4, #16]
   1f364:	ldr	r5, [r4, #20]
   1f368:	cmp	r5, r6
   1f36c:	bcs	1f39c <flatcc_json_printer_init@@Base+0xf4>
   1f370:	ldr	r0, [r4]
   1f374:	ldr	r3, [r4, #40]	; 0x28
   1f378:	mov	r2, #1
   1f37c:	sub	r5, r5, r0
   1f380:	mov	r1, r5
   1f384:	bl	128e4 <fwrite@plt>
   1f388:	ldr	r1, [r4, #12]
   1f38c:	ldr	r0, [r4]
   1f390:	str	r0, [r4, #20]
   1f394:	add	r1, r1, r5
   1f398:	b	1f3e0 <flatcc_json_printer_init@@Base+0x138>
   1f39c:	ldr	r0, [r4]
   1f3a0:	ldr	r1, [r4, #8]
   1f3a4:	ldr	r3, [r4, #40]	; 0x28
   1f3a8:	mov	r2, #1
   1f3ac:	bl	128e4 <fwrite@plt>
   1f3b0:	ldr	r0, [r4]
   1f3b4:	ldr	r1, [r4, #8]
   1f3b8:	sub	r5, r5, r6
   1f3bc:	mov	r2, r5
   1f3c0:	add	r1, r0, r1
   1f3c4:	bl	128b4 <memcpy@plt>
   1f3c8:	ldr	r0, [r4]
   1f3cc:	ldr	r1, [r4, #8]
   1f3d0:	ldr	r2, [r4, #12]
   1f3d4:	add	r0, r0, r5
   1f3d8:	add	r1, r2, r1
   1f3dc:	str	r0, [r4, #20]
   1f3e0:	str	r1, [r4, #12]
   1f3e4:	mov	r1, #0
   1f3e8:	strb	r1, [r0]
   1f3ec:	pop	{r4, r5, r6, sl, fp, pc}

0001f3f0 <flatcc_json_printer_init_buffer@@Base>:
   1f3f0:	push	{fp, lr}
   1f3f4:	mov	fp, sp
   1f3f8:	cmp	r2, #63	; 0x3f
   1f3fc:	bls	1f43c <flatcc_json_printer_init_buffer@@Base+0x4c>
   1f400:	vmov.i32	q8, #0	; 0x00000000
   1f404:	add	r3, r0, #12
   1f408:	vst1.32	{d16-d17}, [r3]
   1f40c:	movw	r3, #62556	; 0xf45c
   1f410:	movt	r3, #1
   1f414:	str	r3, [r0, #44]	; 0x2c
   1f418:	add	r3, r0, #28
   1f41c:	vst1.32	{d16-d17}, [r3]
   1f420:	sub	r3, r2, #64	; 0x40
   1f424:	stm	r0, {r1, r2, r3}
   1f428:	add	r2, r1, r3
   1f42c:	str	r2, [r0, #16]
   1f430:	str	r1, [r0, #20]
   1f434:	mov	r0, #0
   1f438:	pop	{fp, pc}
   1f43c:	movw	r0, #1533	; 0x5fd
   1f440:	movw	r1, #1250	; 0x4e2
   1f444:	movw	r3, #1574	; 0x626
   1f448:	movw	r2, #1165	; 0x48d
   1f44c:	movt	r0, #2
   1f450:	movt	r1, #2
   1f454:	movt	r3, #2
   1f458:	bl	12998 <__assert_fail@plt>
   1f45c:	ldr	r2, [r0, #16]
   1f460:	ldr	r1, [r0, #20]
   1f464:	cmp	r1, r2
   1f468:	bcs	1f474 <flatcc_json_printer_init_buffer@@Base+0x84>
   1f46c:	mov	r2, r1
   1f470:	b	1f49c <flatcc_json_printer_init_buffer@@Base+0xac>
   1f474:	ldr	r2, [r0, #36]	; 0x24
   1f478:	cmp	r2, #0
   1f47c:	moveq	r2, #3
   1f480:	streq	r2, [r0, #36]	; 0x24
   1f484:	ldr	r2, [r0]
   1f488:	ldr	r3, [r0, #12]
   1f48c:	sub	r1, r1, r2
   1f490:	str	r2, [r0, #20]
   1f494:	add	r1, r1, r3
   1f498:	str	r1, [r0, #12]
   1f49c:	mov	r0, #0
   1f4a0:	strb	r0, [r2]
   1f4a4:	bx	lr

0001f4a8 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   1f4a8:	push	{r4, r5, fp, lr}
   1f4ac:	add	fp, sp, #8
   1f4b0:	vmov.i32	q8, #0	; 0x00000000
   1f4b4:	cmp	r1, #0
   1f4b8:	mov	r5, r1
   1f4bc:	mov	r4, r0
   1f4c0:	add	r0, r0, #28
   1f4c4:	movweq	r5, #4096	; 0x1000
   1f4c8:	cmp	r5, #64	; 0x40
   1f4cc:	vst1.32	{d16-d17}, [r0]
   1f4d0:	add	r0, r4, #12
   1f4d4:	movls	r5, #64	; 0x40
   1f4d8:	vst1.32	{d16-d17}, [r0]
   1f4dc:	mov	r0, r5
   1f4e0:	bl	128fc <malloc@plt>
   1f4e4:	mov	r1, r0
   1f4e8:	movw	r2, #62764	; 0xf52c
   1f4ec:	mov	r0, #1
   1f4f0:	strb	r0, [r4, #24]
   1f4f4:	sub	r0, r5, #64	; 0x40
   1f4f8:	movt	r2, #1
   1f4fc:	stm	r4, {r1, r5}
   1f500:	cmp	r1, #0
   1f504:	str	r0, [r4, #8]
   1f508:	add	r0, r1, r0
   1f50c:	str	r2, [r4, #44]	; 0x2c
   1f510:	str	r0, [r4, #16]
   1f514:	mov	r0, #0
   1f518:	moveq	r0, #3
   1f51c:	str	r1, [r4, #20]
   1f520:	streq	r0, [r4, #36]	; 0x24
   1f524:	mvneq	r0, #0
   1f528:	pop	{r4, r5, fp, pc}
   1f52c:	push	{r4, r5, fp, lr}
   1f530:	add	fp, sp, #8
   1f534:	mov	r4, r0
   1f538:	ldr	r0, [r0]
   1f53c:	mov	r1, #0
   1f540:	ldr	r5, [r4, #20]
   1f544:	strb	r1, [r5], -r0
   1f548:	ldr	r0, [r4, #16]
   1f54c:	ldr	r1, [r4, #20]
   1f550:	cmp	r1, r0
   1f554:	popcc	{r4, r5, fp, pc}
   1f558:	ldm	r4, {r0, r1}
   1f55c:	lsl	r1, r1, #1
   1f560:	bl	128d8 <realloc@plt>
   1f564:	cmp	r0, #0
   1f568:	beq	1f59c <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   1f56c:	str	r0, [r4]
   1f570:	mvn	r3, #63	; 0x3f
   1f574:	add	r1, r0, r5
   1f578:	ldr	r2, [r4, #4]
   1f57c:	add	r3, r3, r2, lsl #1
   1f580:	lsl	r2, r2, #1
   1f584:	add	r0, r0, r3
   1f588:	str	r3, [r4, #8]
   1f58c:	str	r2, [r4, #4]
   1f590:	str	r0, [r4, #16]
   1f594:	str	r1, [r4, #20]
   1f598:	b	1f5c0 <flatcc_json_printer_init_dynamic_buffer@@Base+0x118>
   1f59c:	ldr	r0, [r4, #36]	; 0x24
   1f5a0:	cmp	r0, #0
   1f5a4:	moveq	r0, #3
   1f5a8:	streq	r0, [r4, #36]	; 0x24
   1f5ac:	ldr	r0, [r4, #12]
   1f5b0:	ldr	r1, [r4]
   1f5b4:	add	r0, r0, r5
   1f5b8:	str	r1, [r4, #20]
   1f5bc:	str	r0, [r4, #12]
   1f5c0:	mov	r0, #0
   1f5c4:	strb	r0, [r1]
   1f5c8:	pop	{r4, r5, fp, pc}

0001f5cc <flatcc_json_printer_get_buffer@@Base>:
   1f5cc:	push	{r4, r5, fp, lr}
   1f5d0:	add	fp, sp, #8
   1f5d4:	ldr	r2, [r0, #44]	; 0x2c
   1f5d8:	mov	r4, r1
   1f5dc:	mov	r1, #0
   1f5e0:	mov	r5, r0
   1f5e4:	blx	r2
   1f5e8:	cmp	r4, #0
   1f5ec:	beq	1f604 <flatcc_json_printer_get_buffer@@Base+0x38>
   1f5f0:	ldr	r0, [r5]
   1f5f4:	ldr	r1, [r5, #20]
   1f5f8:	sub	r1, r1, r0
   1f5fc:	str	r1, [r4]
   1f600:	pop	{r4, r5, fp, pc}
   1f604:	ldr	r0, [r5]
   1f608:	pop	{r4, r5, fp, pc}

0001f60c <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   1f60c:	push	{r4, r5, fp, lr}
   1f610:	add	fp, sp, #8
   1f614:	ldr	r2, [r0, #44]	; 0x2c
   1f618:	mov	r5, r1
   1f61c:	mov	r1, #0
   1f620:	mov	r4, r0
   1f624:	blx	r2
   1f628:	cmp	r5, #0
   1f62c:	beq	1f644 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x38>
   1f630:	ldr	r0, [r4]
   1f634:	ldr	r1, [r4, #20]
   1f638:	sub	r1, r1, r0
   1f63c:	str	r1, [r5]
   1f640:	b	1f648 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x3c>
   1f644:	ldr	r0, [r4]
   1f648:	vmov.i32	q8, #0	; 0x00000000
   1f64c:	mov	r1, #32
   1f650:	add	r2, r4, #16
   1f654:	vst1.32	{d16-d17}, [r4], r1
   1f658:	vst1.32	{d16-d17}, [r2]
   1f65c:	vst1.32	{d16-d17}, [r4]
   1f660:	pop	{r4, r5, fp, pc}

0001f664 <flatcc_json_printer_clear@@Base>:
   1f664:	push	{r4, sl, fp, lr}
   1f668:	add	fp, sp, #8
   1f66c:	mov	r4, r0
   1f670:	ldrb	r0, [r0, #24]
   1f674:	cmp	r0, #0
   1f678:	beq	1f68c <flatcc_json_printer_clear@@Base+0x28>
   1f67c:	ldr	r0, [r4]
   1f680:	cmp	r0, #0
   1f684:	beq	1f68c <flatcc_json_printer_clear@@Base+0x28>
   1f688:	bl	128a8 <free@plt>
   1f68c:	vmov.i32	q8, #0	; 0x00000000
   1f690:	mov	r0, #32
   1f694:	add	r1, r4, #16
   1f698:	vst1.32	{d16-d17}, [r4], r0
   1f69c:	vst1.32	{d16-d17}, [r1]
   1f6a0:	vst1.32	{d16-d17}, [r4]
   1f6a4:	pop	{r4, sl, fp, pc}
   1f6a8:	push	{r4, sl, fp, lr}
   1f6ac:	add	fp, sp, #8
   1f6b0:	cmn	r0, #1
   1f6b4:	ble	1f6c0 <flatcc_json_printer_clear@@Base+0x5c>
   1f6b8:	mov	lr, r1
   1f6bc:	b	1f6d0 <flatcc_json_printer_clear@@Base+0x6c>
   1f6c0:	mov	r2, #45	; 0x2d
   1f6c4:	mov	lr, r1
   1f6c8:	rsb	r0, r0, #0
   1f6cc:	strb	r2, [lr], #1
   1f6d0:	movw	ip, #26215	; 0x6667
   1f6d4:	mov	r3, lr
   1f6d8:	movt	ip, #26214	; 0x6666
   1f6dc:	smmul	r2, r0, ip
   1f6e0:	asr	r4, r2, #2
   1f6e4:	add	r2, r4, r2, lsr #31
   1f6e8:	add	r4, r2, r2, lsl #2
   1f6ec:	sub	r4, r0, r4, lsl #1
   1f6f0:	add	r0, r0, #9
   1f6f4:	cmp	r0, #18
   1f6f8:	mov	r0, r2
   1f6fc:	add	r4, r4, #48	; 0x30
   1f700:	strb	r4, [r3], #1
   1f704:	bhi	1f6dc <flatcc_json_printer_clear@@Base+0x78>
   1f708:	mov	r2, #0
   1f70c:	mov	r0, r3
   1f710:	strb	r2, [r0], -lr
   1f714:	cmp	r0, #2
   1f718:	blt	1f740 <flatcc_json_printer_clear@@Base+0xdc>
   1f71c:	add	r0, r0, r0, lsr #31
   1f720:	sub	r2, r3, #1
   1f724:	asr	r0, r0, #1
   1f728:	ldrb	ip, [lr]
   1f72c:	ldrb	r4, [r2]
   1f730:	subs	r0, r0, #1
   1f734:	strb	r4, [lr], #1
   1f738:	strb	ip, [r2], #-1
   1f73c:	bne	1f728 <flatcc_json_printer_clear@@Base+0xc4>
   1f740:	sub	r0, r3, r1
   1f744:	pop	{r4, sl, fp, pc}
   1f748:	push	{r4, sl, fp, lr}
   1f74c:	add	fp, sp, #8
   1f750:	orrs	r1, r2, r3
   1f754:	beq	1f7cc <flatcc_json_printer_clear@@Base+0x168>
   1f758:	ldr	r1, [fp, #8]
   1f75c:	mov	r4, #0
   1f760:	cmp	r4, r3, lsr #22
   1f764:	bne	1f780 <flatcc_json_printer_clear@@Base+0x11c>
   1f768:	lsl	r3, r3, #10
   1f76c:	sub	r1, r1, #10
   1f770:	orr	r3, r3, r2, lsr #22
   1f774:	lsl	r2, r2, #10
   1f778:	cmp	r3, #4194304	; 0x400000
   1f77c:	bcc	1f768 <flatcc_json_printer_clear@@Base+0x104>
   1f780:	ldr	ip, [fp, #12]
   1f784:	cmp	r3, #0
   1f788:	bmi	1f7b4 <flatcc_json_printer_clear@@Base+0x150>
   1f78c:	mvn	lr, #0
   1f790:	lsl	r3, r3, #1
   1f794:	lsl	r4, r2, #1
   1f798:	sub	r1, r1, #1
   1f79c:	orr	r3, r3, r2, lsr #31
   1f7a0:	subs	r2, lr, r2, lsl #1
   1f7a4:	sbcs	r2, lr, r3
   1f7a8:	mov	r2, r4
   1f7ac:	blt	1f790 <flatcc_json_printer_clear@@Base+0x12c>
   1f7b0:	b	1f7b8 <flatcc_json_printer_clear@@Base+0x154>
   1f7b4:	mov	r4, r2
   1f7b8:	str	r4, [r0]
   1f7bc:	str	r3, [r0, #4]
   1f7c0:	str	r1, [r0, #8]
   1f7c4:	str	ip, [r0, #12]
   1f7c8:	pop	{r4, sl, fp, pc}
   1f7cc:	movw	r0, #1880	; 0x758
   1f7d0:	movw	r1, #1889	; 0x761
   1f7d4:	movw	r3, #1975	; 0x7b7
   1f7d8:	mov	r2, #260	; 0x104
   1f7dc:	movt	r0, #2
   1f7e0:	movt	r1, #2
   1f7e4:	movt	r3, #2
   1f7e8:	bl	12998 <__assert_fail@plt>
   1f7ec:	push	{r4, r5, fp, lr}
   1f7f0:	add	fp, sp, #8
   1f7f4:	ldr	ip, [fp, #24]
   1f7f8:	ldr	r1, [fp, #8]
   1f7fc:	mov	r5, #0
   1f800:	add	r1, r1, ip
   1f804:	ldr	ip, [fp, #16]
   1f808:	add	r1, r1, #64	; 0x40
   1f80c:	str	r1, [r0, #8]
   1f810:	umull	r1, lr, ip, r2
   1f814:	umull	ip, r1, ip, r3
   1f818:	adds	lr, ip, lr
   1f81c:	ldr	ip, [fp, #20]
   1f820:	adc	r5, r5, #0
   1f824:	umull	r2, r4, ip, r2
   1f828:	umaal	r1, r4, ip, r3
   1f82c:	adds	r2, lr, r2
   1f830:	adc	r5, r5, #0
   1f834:	adds	r2, r2, #-2147483648	; 0x80000000
   1f838:	adcs	r1, r1, r5
   1f83c:	str	r1, [r0]
   1f840:	adc	r1, r4, #0
   1f844:	str	r1, [r0, #4]
   1f848:	pop	{r4, r5, fp, pc}
   1f84c:	push	{fp, lr}
   1f850:	mov	fp, sp
   1f854:	ldr	r1, [fp, #16]
   1f858:	ldr	ip, [fp, #8]
   1f85c:	subs	r1, r2, r1
   1f860:	str	ip, [r0, #8]
   1f864:	str	r1, [r0]
   1f868:	ldr	r1, [fp, #20]
   1f86c:	sbcs	r1, r3, r1
   1f870:	str	r1, [r0, #4]
   1f874:	bcc	1f884 <flatcc_json_printer_clear@@Base+0x220>
   1f878:	ldr	r0, [fp, #24]
   1f87c:	cmp	ip, r0
   1f880:	popeq	{fp, pc}
   1f884:	movw	r0, #2032	; 0x7f0
   1f888:	movw	r1, #1889	; 0x761
   1f88c:	movw	r3, #2057	; 0x809
   1f890:	mov	r2, #239	; 0xef
   1f894:	movt	r0, #2
   1f898:	movt	r1, #2
   1f89c:	movt	r3, #2
   1f8a0:	bl	12998 <__assert_fail@plt>
   1f8a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8a8:	add	fp, sp, #28
   1f8ac:	sub	sp, sp, #20
   1f8b0:	str	r1, [sp, #12]
   1f8b4:	ldr	r1, [fp, #16]
   1f8b8:	ldr	r9, [fp, #8]
   1f8bc:	mov	r8, r2
   1f8c0:	ldr	r2, [fp, #20]
   1f8c4:	ldr	lr, [fp, #12]
   1f8c8:	ldr	r4, [fp, #24]
   1f8cc:	str	r0, [sp, #16]
   1f8d0:	ldr	r0, [fp, #28]
   1f8d4:	mov	r6, #0
   1f8d8:	subs	r7, r9, r1
   1f8dc:	sbc	ip, lr, r2
   1f8e0:	subs	r4, r7, r4
   1f8e4:	sbcs	r4, ip, r0
   1f8e8:	ldr	r0, [fp, #32]
   1f8ec:	ldr	r4, [fp, #36]	; 0x24
   1f8f0:	movwcc	r6, #1
   1f8f4:	adds	r5, r0, r8
   1f8f8:	str	r5, [sp, #8]
   1f8fc:	adc	r5, r4, r3
   1f900:	subs	sl, r8, r0
   1f904:	sbc	r8, r3, r4
   1f908:	subs	r3, r1, sl
   1f90c:	str	r5, [sp, #4]
   1f910:	sbcs	r3, r2, r8
   1f914:	bcs	1f9d0 <flatcc_json_printer_clear@@Base+0x36c>
   1f918:	ldr	r0, [fp, #24]
   1f91c:	ldr	r4, [fp, #28]
   1f920:	subs	r3, r7, r0
   1f924:	mov	r7, r0
   1f928:	sbcs	r3, ip, r4
   1f92c:	bcc	1f9e0 <flatcc_json_printer_clear@@Base+0x37c>
   1f930:	ldr	r0, [sp, #12]
   1f934:	sub	r0, r0, #1
   1f938:	str	r0, [sp, #12]
   1f93c:	adds	ip, r1, r7
   1f940:	adc	r3, r2, r4
   1f944:	subs	r6, ip, sl
   1f948:	sbcs	r6, r3, r8
   1f94c:	bcc	1f984 <flatcc_json_printer_clear@@Base+0x320>
   1f950:	subs	r6, ip, sl
   1f954:	mov	r5, lr
   1f958:	mov	r0, r9
   1f95c:	sbc	r4, r3, r8
   1f960:	subs	lr, sl, r1
   1f964:	sbc	r9, r8, r2
   1f968:	subs	r6, lr, r6
   1f96c:	mov	lr, r5
   1f970:	sbcs	r6, r9, r4
   1f974:	mov	r9, r0
   1f978:	ldr	r4, [fp, #28]
   1f97c:	ldr	r0, [sp, #12]
   1f980:	bcc	1f9dc <flatcc_json_printer_clear@@Base+0x378>
   1f984:	ldr	r2, [sp, #16]
   1f988:	ldrb	r1, [r2, r0]
   1f98c:	sub	r1, r1, #1
   1f990:	strb	r1, [r2, r0]
   1f994:	subs	r1, r9, ip
   1f998:	sbc	r2, lr, r3
   1f99c:	subs	r6, r1, r7
   1f9a0:	sbcs	r6, r2, r4
   1f9a4:	mov	r6, #0
   1f9a8:	movwcc	r6, #1
   1f9ac:	subs	r5, ip, sl
   1f9b0:	sbcs	r5, r3, r8
   1f9b4:	bcs	1f9e8 <flatcc_json_printer_clear@@Base+0x384>
   1f9b8:	subs	r1, r1, r7
   1f9bc:	sbcs	r1, r2, r4
   1f9c0:	mov	r1, ip
   1f9c4:	mov	r2, r3
   1f9c8:	bcs	1f93c <flatcc_json_printer_clear@@Base+0x2d8>
   1f9cc:	b	1f9e8 <flatcc_json_printer_clear@@Base+0x384>
   1f9d0:	ldr	r4, [fp, #28]
   1f9d4:	ldr	r7, [fp, #24]
   1f9d8:	b	1f9e0 <flatcc_json_printer_clear@@Base+0x37c>
   1f9dc:	mov	r6, #0
   1f9e0:	mov	ip, r1
   1f9e4:	mov	r3, r2
   1f9e8:	ldr	r1, [sp, #8]
   1f9ec:	ldr	r5, [sp, #4]
   1f9f0:	subs	r0, ip, r1
   1f9f4:	sbcs	r0, r3, r5
   1f9f8:	bcs	1fa38 <flatcc_json_printer_clear@@Base+0x3d4>
   1f9fc:	cmp	r6, #0
   1fa00:	bne	1fa38 <flatcc_json_printer_clear@@Base+0x3d4>
   1fa04:	adds	r8, ip, r7
   1fa08:	mov	r0, #0
   1fa0c:	adc	r2, r3, r4
   1fa10:	subs	r6, r8, r1
   1fa14:	sbcs	r6, r2, r5
   1fa18:	bcc	1fa84 <flatcc_json_printer_clear@@Base+0x420>
   1fa1c:	subs	r6, r1, ip
   1fa20:	sbc	r4, r5, r3
   1fa24:	subs	r1, r8, r1
   1fa28:	sbc	r2, r2, r5
   1fa2c:	subs	r1, r1, r6
   1fa30:	sbcs	r1, r2, r4
   1fa34:	bcc	1fa84 <flatcc_json_printer_clear@@Base+0x420>
   1fa38:	ldr	r0, [fp, #36]	; 0x24
   1fa3c:	ldr	r1, [fp, #32]
   1fa40:	lsl	r0, r0, #1
   1fa44:	mov	r2, r1
   1fa48:	orr	r1, r0, r1, lsr #31
   1fa4c:	subs	r2, ip, r2, lsl #1
   1fa50:	mov	r0, #0
   1fa54:	sbcs	r1, r3, r1
   1fa58:	bcc	1fa84 <flatcc_json_printer_clear@@Base+0x420>
   1fa5c:	ldr	r0, [fp, #36]	; 0x24
   1fa60:	ldr	r1, [fp, #32]
   1fa64:	lsl	r0, r0, #2
   1fa68:	orr	r0, r0, r1, lsr #30
   1fa6c:	subs	r1, r9, r1, lsl #2
   1fa70:	sbc	r2, lr, r0
   1fa74:	subs	r1, r1, ip
   1fa78:	mov	r0, #0
   1fa7c:	sbcs	r1, r2, r3
   1fa80:	movwcs	r0, #1
   1fa84:	sub	sp, fp, #28
   1fa88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa8c:	cmp	r2, #0
   1fa90:	bxeq	lr
   1fa94:	push	{r4, r5, fp, lr}
   1fa98:	add	fp, sp, #8
   1fa9c:	ldr	lr, [r2]
   1faa0:	bic	ip, r3, #224	; 0xe0
   1faa4:	cmp	ip, #0
   1faa8:	beq	1fac0 <flatcc_json_printer_clear@@Base+0x45c>
   1faac:	cmp	ip, #1
   1fab0:	bne	1fb88 <flatcc_json_printer_clear@@Base+0x524>
   1fab4:	movw	ip, #2481	; 0x9b1
   1fab8:	movt	ip, #2
   1fabc:	b	1fac8 <flatcc_json_printer_clear@@Base+0x464>
   1fac0:	movw	ip, #2416	; 0x970
   1fac4:	movt	ip, #2
   1fac8:	cmp	lr, #3
   1facc:	bcc	1fb30 <flatcc_json_printer_clear@@Base+0x4cc>
   1fad0:	ldrb	r4, [r1]
   1fad4:	sub	lr, lr, #3
   1fad8:	cmp	lr, #2
   1fadc:	ldrb	r4, [ip, r4, lsr #2]
   1fae0:	strb	r4, [r0]
   1fae4:	ldrb	r5, [r1, #1]
   1fae8:	ldrb	r4, [r1]
   1faec:	lsr	r5, r5, #4
   1faf0:	bfi	r5, r4, #4, #2
   1faf4:	ldrb	r4, [ip, r5]
   1faf8:	strb	r4, [r0, #1]
   1fafc:	ldrb	r5, [r1, #2]
   1fb00:	ldrb	r4, [r1, #1]
   1fb04:	lsr	r5, r5, #6
   1fb08:	bfi	r5, r4, #2, #4
   1fb0c:	ldrb	r4, [ip, r5]
   1fb10:	strb	r4, [r0, #2]
   1fb14:	ldrb	r4, [r1, #2]
   1fb18:	add	r1, r1, #3
   1fb1c:	and	r4, r4, #63	; 0x3f
   1fb20:	ldrb	r4, [ip, r4]
   1fb24:	strb	r4, [r0, #3]
   1fb28:	add	r0, r0, #4
   1fb2c:	bhi	1fad0 <flatcc_json_printer_clear@@Base+0x46c>
   1fb30:	and	r3, r3, #128	; 0x80
   1fb34:	cmp	lr, #1
   1fb38:	beq	1fb90 <flatcc_json_printer_clear@@Base+0x52c>
   1fb3c:	cmp	lr, #2
   1fb40:	bne	1fbb8 <flatcc_json_printer_clear@@Base+0x554>
   1fb44:	ldrb	r5, [r1]
   1fb48:	cmp	r3, #0
   1fb4c:	ldrb	r5, [ip, r5, lsr #2]
   1fb50:	strb	r5, [r0]
   1fb54:	ldrb	r4, [r1, #1]
   1fb58:	ldrb	r5, [r1]
   1fb5c:	lsr	r4, r4, #4
   1fb60:	bfi	r4, r5, #4, #2
   1fb64:	ldrb	r5, [ip, r4]
   1fb68:	strb	r5, [r0, #1]
   1fb6c:	ldrb	r1, [r1, #1]
   1fb70:	and	r1, r1, #15
   1fb74:	ldrb	r1, [ip, r1, lsl #2]
   1fb78:	strb	r1, [r0, #2]
   1fb7c:	movne	r1, #61	; 0x3d
   1fb80:	strbne	r1, [r0, #3]
   1fb84:	b	1fbb8 <flatcc_json_printer_clear@@Base+0x554>
   1fb88:	mov	r0, lr
   1fb8c:	b	1fbc0 <flatcc_json_printer_clear@@Base+0x55c>
   1fb90:	ldrb	r5, [r1]
   1fb94:	cmp	r3, #0
   1fb98:	ldrb	r5, [ip, r5, lsr #2]
   1fb9c:	strb	r5, [r0]
   1fba0:	ldrb	r1, [r1]
   1fba4:	and	r1, r1, #3
   1fba8:	ldrb	r1, [ip, r1, lsl #4]
   1fbac:	strb	r1, [r0, #1]
   1fbb0:	movwne	r1, #15677	; 0x3d3d
   1fbb4:	strhne	r1, [r0, #2]
   1fbb8:	ldr	lr, [r2]
   1fbbc:	mov	r0, #0
   1fbc0:	sub	r0, lr, r0
   1fbc4:	str	r0, [r2]
   1fbc8:	pop	{r4, r5, fp, lr}
   1fbcc:	bx	lr
   1fbd0:	cmp	r3, #0
   1fbd4:	cmpeq	r2, #0
   1fbd8:	bne	1fbf0 <flatcc_json_printer_clear@@Base+0x58c>
   1fbdc:	cmp	r1, #0
   1fbe0:	cmpeq	r0, #0
   1fbe4:	mvnne	r1, #0
   1fbe8:	mvnne	r0, #0
   1fbec:	b	1fc0c <flatcc_json_printer_clear@@Base+0x5a8>
   1fbf0:	sub	sp, sp, #8
   1fbf4:	push	{sp, lr}
   1fbf8:	bl	1fc1c <flatcc_json_printer_clear@@Base+0x5b8>
   1fbfc:	ldr	lr, [sp, #4]
   1fc00:	add	sp, sp, #8
   1fc04:	pop	{r2, r3}
   1fc08:	bx	lr
   1fc0c:	push	{r1, lr}
   1fc10:	mov	r0, #8
   1fc14:	bl	12878 <raise@plt>
   1fc18:	pop	{r1, pc}
   1fc1c:	cmp	r1, r3
   1fc20:	cmpeq	r0, r2
   1fc24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fc28:	mov	r4, r0
   1fc2c:	movcc	r0, #0
   1fc30:	mov	r5, r1
   1fc34:	ldr	lr, [sp, #36]	; 0x24
   1fc38:	movcc	r1, r0
   1fc3c:	bcc	1fd38 <flatcc_json_printer_clear@@Base+0x6d4>
   1fc40:	cmp	r3, #0
   1fc44:	clzeq	ip, r2
   1fc48:	clzne	ip, r3
   1fc4c:	addeq	ip, ip, #32
   1fc50:	cmp	r5, #0
   1fc54:	clzeq	r1, r4
   1fc58:	addeq	r1, r1, #32
   1fc5c:	clzne	r1, r5
   1fc60:	sub	ip, ip, r1
   1fc64:	sub	sl, ip, #32
   1fc68:	lsl	r9, r3, ip
   1fc6c:	rsb	fp, ip, #32
   1fc70:	orr	r9, r9, r2, lsl sl
   1fc74:	orr	r9, r9, r2, lsr fp
   1fc78:	lsl	r8, r2, ip
   1fc7c:	cmp	r5, r9
   1fc80:	cmpeq	r4, r8
   1fc84:	movcc	r0, #0
   1fc88:	movcc	r1, r0
   1fc8c:	bcc	1fca8 <flatcc_json_printer_clear@@Base+0x644>
   1fc90:	mov	r0, #1
   1fc94:	subs	r4, r4, r8
   1fc98:	lsl	r1, r0, sl
   1fc9c:	orr	r1, r1, r0, lsr fp
   1fca0:	lsl	r0, r0, ip
   1fca4:	sbc	r5, r5, r9
   1fca8:	cmp	ip, #0
   1fcac:	beq	1fd38 <flatcc_json_printer_clear@@Base+0x6d4>
   1fcb0:	lsr	r6, r8, #1
   1fcb4:	orr	r6, r6, r9, lsl #31
   1fcb8:	lsr	r7, r9, #1
   1fcbc:	mov	r2, ip
   1fcc0:	b	1fce4 <flatcc_json_printer_clear@@Base+0x680>
   1fcc4:	subs	r3, r4, r6
   1fcc8:	sbc	r8, r5, r7
   1fccc:	adds	r3, r3, r3
   1fcd0:	adc	r8, r8, r8
   1fcd4:	adds	r4, r3, #1
   1fcd8:	adc	r5, r8, #0
   1fcdc:	subs	r2, r2, #1
   1fce0:	beq	1fd00 <flatcc_json_printer_clear@@Base+0x69c>
   1fce4:	cmp	r5, r7
   1fce8:	cmpeq	r4, r6
   1fcec:	bcs	1fcc4 <flatcc_json_printer_clear@@Base+0x660>
   1fcf0:	adds	r4, r4, r4
   1fcf4:	adc	r5, r5, r5
   1fcf8:	subs	r2, r2, #1
   1fcfc:	bne	1fce4 <flatcc_json_printer_clear@@Base+0x680>
   1fd00:	lsr	r3, r4, ip
   1fd04:	orr	r3, r3, r5, lsl fp
   1fd08:	lsr	r2, r5, ip
   1fd0c:	orr	r3, r3, r5, lsr sl
   1fd10:	adds	r0, r0, r4
   1fd14:	mov	r4, r3
   1fd18:	lsl	r3, r2, ip
   1fd1c:	orr	r3, r3, r4, lsl sl
   1fd20:	lsl	ip, r4, ip
   1fd24:	orr	r3, r3, r4, lsr fp
   1fd28:	adc	r1, r1, r5
   1fd2c:	subs	r0, r0, ip
   1fd30:	mov	r5, r2
   1fd34:	sbc	r1, r1, r3
   1fd38:	cmp	lr, #0
   1fd3c:	strdne	r4, [lr]
   1fd40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001fd44 <__libc_csu_init@@Base>:
   1fd44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fd48:	mov	r7, r0
   1fd4c:	ldr	r6, [pc, #72]	; 1fd9c <__libc_csu_init@@Base+0x58>
   1fd50:	ldr	r5, [pc, #72]	; 1fda0 <__libc_csu_init@@Base+0x5c>
   1fd54:	add	r6, pc, r6
   1fd58:	add	r5, pc, r5
   1fd5c:	sub	r6, r6, r5
   1fd60:	mov	r8, r1
   1fd64:	mov	r9, r2
   1fd68:	bl	12858 <raise@plt-0x20>
   1fd6c:	asrs	r6, r6, #2
   1fd70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fd74:	mov	r4, #0
   1fd78:	add	r4, r4, #1
   1fd7c:	ldr	r3, [r5], #4
   1fd80:	mov	r2, r9
   1fd84:	mov	r1, r8
   1fd88:	mov	r0, r7
   1fd8c:	blx	r3
   1fd90:	cmp	r6, r4
   1fd94:	bne	1fd78 <__libc_csu_init@@Base+0x34>
   1fd98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fd9c:			; <UNDEFINED> instruction: 0x000121b0
   1fda0:	andeq	r2, r1, r8, lsr #3

0001fda4 <__libc_csu_fini@@Base>:
   1fda4:	bx	lr

Disassembly of section .fini:

0001fda8 <.fini>:
   1fda8:	push	{r3, lr}
   1fdac:	pop	{r3, pc}
