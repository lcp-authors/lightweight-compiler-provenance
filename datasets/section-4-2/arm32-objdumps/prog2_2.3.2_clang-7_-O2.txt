
../repos/prog2/2.3.2:     file format elf32-littlearm


Disassembly of section .init:

00010ad4 <.init>:
   10ad4:	push	{r3, lr}
   10ad8:	bl	10c08 <_start@@Base+0x3c>
   10adc:	pop	{r3, pc}

Disassembly of section .plt:

00010ae0 <calloc@plt-0x14>:
   10ae0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ae4:	ldr	lr, [pc, #4]	; 10af0 <calloc@plt-0x4>
   10ae8:	add	lr, pc, lr
   10aec:	ldr	pc, [lr, #8]!
   10af0:	andeq	r1, r1, r0, lsl r5

00010af4 <calloc@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #69632	; 0x11000
   10afc:	ldr	pc, [ip, #1296]!	; 0x510

00010b00 <strcmp@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #69632	; 0x11000
   10b08:	ldr	pc, [ip, #1288]!	; 0x508

00010b0c <printf@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1280]!	; 0x500

00010b18 <free@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b24 <fgets@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b30 <time@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b3c <realloc@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b48 <strcat@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b54 <strcpy@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b60 <puts@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b6c <malloc@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b78 <__libc_start_main@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b84 <__gmon_start__@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b90 <strlen@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b9c <srand@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1184]!	; 0x4a0

00010ba8 <rand@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1176]!	; 0x498

00010bb4 <__isoc99_scanf@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #69632	; 0x11000
   10bbc:	ldr	pc, [ip, #1168]!	; 0x490

00010bc0 <abort@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1160]!	; 0x488

Disassembly of section .text:

00010bcc <_start@@Base>:
   10bcc:	mov	fp, #0
   10bd0:	mov	lr, #0
   10bd4:	pop	{r1}		; (ldr r1, [sp], #4)
   10bd8:	mov	r2, sp
   10bdc:	push	{r2}		; (str r2, [sp, #-4]!)
   10be0:	push	{r0}		; (str r0, [sp, #-4]!)
   10be4:	ldr	ip, [pc, #16]	; 10bfc <_start@@Base+0x30>
   10be8:	push	{ip}		; (str ip, [sp, #-4]!)
   10bec:	ldr	r0, [pc, #12]	; 10c00 <_start@@Base+0x34>
   10bf0:	ldr	r3, [pc, #12]	; 10c04 <_start@@Base+0x38>
   10bf4:	bl	10b78 <__libc_start_main@plt>
   10bf8:	bl	10bc0 <abort@plt>
   10bfc:	andeq	r1, r1, r8, lsl r5
   10c00:	andeq	r0, r1, r0, ror #26
   10c04:			; <UNDEFINED> instruction: 0x000114b8
   10c08:	ldr	r3, [pc, #20]	; 10c24 <_start@@Base+0x58>
   10c0c:	ldr	r2, [pc, #20]	; 10c28 <_start@@Base+0x5c>
   10c10:	add	r3, pc, r3
   10c14:	ldr	r2, [r3, r2]
   10c18:	cmp	r2, #0
   10c1c:	bxeq	lr
   10c20:	b	10b84 <__gmon_start__@plt>
   10c24:	andeq	r1, r1, r8, ror #7
   10c28:	andeq	r0, r0, r4, asr r0
   10c2c:	ldr	r0, [pc, #24]	; 10c4c <_start@@Base+0x80>
   10c30:	ldr	r3, [pc, #24]	; 10c50 <_start@@Base+0x84>
   10c34:	cmp	r3, r0
   10c38:	bxeq	lr
   10c3c:	ldr	r3, [pc, #16]	; 10c54 <_start@@Base+0x88>
   10c40:	cmp	r3, #0
   10c44:	bxeq	lr
   10c48:	bx	r3
   10c4c:	andeq	r2, r2, r4, rrx
   10c50:	andeq	r2, r2, r4, rrx
   10c54:	andeq	r0, r0, r0
   10c58:	ldr	r0, [pc, #36]	; 10c84 <_start@@Base+0xb8>
   10c5c:	ldr	r1, [pc, #36]	; 10c88 <_start@@Base+0xbc>
   10c60:	sub	r1, r1, r0
   10c64:	asr	r1, r1, #2
   10c68:	add	r1, r1, r1, lsr #31
   10c6c:	asrs	r1, r1, #1
   10c70:	bxeq	lr
   10c74:	ldr	r3, [pc, #16]	; 10c8c <_start@@Base+0xc0>
   10c78:	cmp	r3, #0
   10c7c:	bxeq	lr
   10c80:	bx	r3
   10c84:	andeq	r2, r2, r4, rrx
   10c88:	andeq	r2, r2, r4, rrx
   10c8c:	andeq	r0, r0, r0
   10c90:	push	{r4, lr}
   10c94:	ldr	r4, [pc, #24]	; 10cb4 <_start@@Base+0xe8>
   10c98:	ldrb	r3, [r4]
   10c9c:	cmp	r3, #0
   10ca0:	popne	{r4, pc}
   10ca4:	bl	10c2c <_start@@Base+0x60>
   10ca8:	mov	r3, #1
   10cac:	strb	r3, [r4]
   10cb0:	pop	{r4, pc}
   10cb4:	andeq	r2, r2, r4, rrx
   10cb8:	b	10c58 <_start@@Base+0x8c>

00010cbc <imprime@@Base>:
   10cbc:	push	{r4, r5, fp, lr}
   10cc0:	add	fp, sp, #8
   10cc4:	mov	r1, #0
   10cc8:	mov	r4, r0
   10ccc:	bl	11098 <vetor_elemento@@Base>
   10cd0:	ldr	r5, [pc, #132]	; 10d5c <imprime@@Base+0xa0>
   10cd4:	mov	r2, r0
   10cd8:	mov	r1, #1
   10cdc:	add	r5, pc, r5
   10ce0:	mov	r0, r5
   10ce4:	bl	10b0c <printf@plt>
   10ce8:	mov	r0, r4
   10cec:	mov	r1, #1
   10cf0:	bl	11098 <vetor_elemento@@Base>
   10cf4:	mov	r2, r0
   10cf8:	mov	r0, r5
   10cfc:	mov	r1, #2
   10d00:	bl	10b0c <printf@plt>
   10d04:	mov	r0, r4
   10d08:	mov	r1, #2
   10d0c:	bl	11098 <vetor_elemento@@Base>
   10d10:	mov	r2, r0
   10d14:	mov	r0, r5
   10d18:	mov	r1, #3
   10d1c:	bl	10b0c <printf@plt>
   10d20:	mov	r0, r4
   10d24:	mov	r1, #3
   10d28:	bl	11098 <vetor_elemento@@Base>
   10d2c:	mov	r2, r0
   10d30:	mov	r0, r5
   10d34:	mov	r1, #4
   10d38:	bl	10b0c <printf@plt>
   10d3c:	mov	r0, r4
   10d40:	mov	r1, #4
   10d44:	bl	11098 <vetor_elemento@@Base>
   10d48:	mov	r2, r0
   10d4c:	mov	r0, r5
   10d50:	mov	r1, #5
   10d54:	pop	{r4, r5, fp, lr}
   10d58:	b	10b0c <printf@plt>
   10d5c:	andeq	r0, r0, r0, asr r8

00010d60 <main@@Base>:
   10d60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10d64:	add	fp, sp, #24
   10d68:	sub	sp, sp, #104	; 0x68
   10d6c:	bl	10f74 <vetor_novo@@Base>
   10d70:	ldr	r8, [pc, #480]	; 10f58 <main@@Base+0x1f8>
   10d74:	mov	r4, r0
   10d78:	mov	r1, #1
   10d7c:	add	r8, pc, r8
   10d80:	mov	r0, r8
   10d84:	bl	10b0c <printf@plt>
   10d88:	ldr	r7, [pc, #460]	; 10f5c <main@@Base+0x1fc>
   10d8c:	add	r5, sp, #4
   10d90:	mov	r1, #100	; 0x64
   10d94:	mov	r0, r5
   10d98:	ldr	r7, [pc, r7]
   10d9c:	ldr	r2, [r7]
   10da0:	bl	10b24 <fgets@plt>
   10da4:	mov	r0, r5
   10da8:	bl	10b90 <strlen@plt>
   10dac:	add	r0, r5, r0
   10db0:	mov	r6, #0
   10db4:	mov	r1, r5
   10db8:	mov	r2, #0
   10dbc:	strb	r6, [r0, #-1]
   10dc0:	mov	r0, r4
   10dc4:	bl	110c0 <vetor_insere@@Base>
   10dc8:	mov	r0, r8
   10dcc:	mov	r1, #2
   10dd0:	bl	10b0c <printf@plt>
   10dd4:	ldr	r2, [r7]
   10dd8:	mov	r0, r5
   10ddc:	mov	r1, #100	; 0x64
   10de0:	bl	10b24 <fgets@plt>
   10de4:	mov	r0, r5
   10de8:	bl	10b90 <strlen@plt>
   10dec:	add	r0, r5, r0
   10df0:	mov	r1, r5
   10df4:	mov	r2, #1
   10df8:	strb	r6, [r0, #-1]
   10dfc:	mov	r0, r4
   10e00:	bl	110c0 <vetor_insere@@Base>
   10e04:	mov	r0, r8
   10e08:	mov	r1, #3
   10e0c:	bl	10b0c <printf@plt>
   10e10:	ldr	r2, [r7]
   10e14:	mov	r0, r5
   10e18:	mov	r1, #100	; 0x64
   10e1c:	bl	10b24 <fgets@plt>
   10e20:	mov	r0, r5
   10e24:	bl	10b90 <strlen@plt>
   10e28:	add	r0, r5, r0
   10e2c:	mov	r1, r5
   10e30:	mov	r2, #2
   10e34:	strb	r6, [r0, #-1]
   10e38:	mov	r0, r4
   10e3c:	bl	110c0 <vetor_insere@@Base>
   10e40:	mov	r0, r8
   10e44:	mov	r1, #4
   10e48:	bl	10b0c <printf@plt>
   10e4c:	ldr	r2, [r7]
   10e50:	mov	r0, r5
   10e54:	mov	r1, #100	; 0x64
   10e58:	bl	10b24 <fgets@plt>
   10e5c:	mov	r0, r5
   10e60:	bl	10b90 <strlen@plt>
   10e64:	add	r0, r5, r0
   10e68:	mov	r1, r5
   10e6c:	mov	r2, #3
   10e70:	strb	r6, [r0, #-1]
   10e74:	mov	r0, r4
   10e78:	bl	110c0 <vetor_insere@@Base>
   10e7c:	mov	r0, r8
   10e80:	mov	r1, #5
   10e84:	bl	10b0c <printf@plt>
   10e88:	ldr	r2, [r7]
   10e8c:	mov	r0, r5
   10e90:	mov	r1, #100	; 0x64
   10e94:	bl	10b24 <fgets@plt>
   10e98:	mov	r0, r5
   10e9c:	bl	10b90 <strlen@plt>
   10ea0:	add	r0, r5, r0
   10ea4:	mov	r1, r5
   10ea8:	mov	r2, #4
   10eac:	strb	r6, [r0, #-1]
   10eb0:	mov	r0, r4
   10eb4:	bl	110c0 <vetor_insere@@Base>
   10eb8:	mov	r0, r4
   10ebc:	bl	10cbc <imprime@@Base>
   10ec0:	ldr	r0, [pc, #152]	; 10f60 <main@@Base+0x200>
   10ec4:	add	r0, pc, r0
   10ec8:	bl	10b0c <printf@plt>
   10ecc:	ldr	r0, [pc, #144]	; 10f64 <main@@Base+0x204>
   10ed0:	mov	r1, r5
   10ed4:	add	r0, pc, r0
   10ed8:	bl	10bb4 <__isoc99_scanf@plt>
   10edc:	mov	r0, r4
   10ee0:	mov	r1, r5
   10ee4:	bl	11214 <vetor_pesquisa@@Base>
   10ee8:	mov	r1, r0
   10eec:	mov	r0, r4
   10ef0:	bl	11194 <vetor_remove@@Base>
   10ef4:	cmp	r0, #0
   10ef8:	beq	10f0c <main@@Base+0x1ac>
   10efc:	ldr	r0, [pc, #100]	; 10f68 <main@@Base+0x208>
   10f00:	add	r0, pc, r0
   10f04:	bl	10b60 <puts@plt>
   10f08:	b	10f14 <main@@Base+0x1b4>
   10f0c:	mov	r0, r4
   10f10:	bl	10cbc <imprime@@Base>
   10f14:	mov	r0, r4
   10f18:	bl	1126c <vetor_ordena@@Base>
   10f1c:	cmp	r0, #0
   10f20:	beq	10f30 <main@@Base+0x1d0>
   10f24:	ldr	r0, [pc, #64]	; 10f6c <main@@Base+0x20c>
   10f28:	add	r0, pc, r0
   10f2c:	bl	10b0c <printf@plt>
   10f30:	ldr	r0, [pc, #56]	; 10f70 <main@@Base+0x210>
   10f34:	add	r0, pc, r0
   10f38:	bl	10b60 <puts@plt>
   10f3c:	mov	r0, r4
   10f40:	bl	10cbc <imprime@@Base>
   10f44:	mov	r0, r4
   10f48:	bl	10fa4 <vetor_apaga@@Base>
   10f4c:	mov	r0, #0
   10f50:	sub	sp, fp, #24
   10f54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10f58:	andeq	r0, r0, sp, asr #15
   10f5c:			; <UNDEFINED> instruction: 0x000112b8
   10f60:	muleq	r0, r8, r6
   10f64:	andeq	r0, r0, r8, lsr #13
   10f68:			; <UNDEFINED> instruction: 0x000006b8
   10f6c:	andeq	r0, r0, r7, asr r6
   10f70:	andeq	r0, r0, sp, ror #12

00010f74 <vetor_novo@@Base>:
   10f74:	push	{fp, lr}
   10f78:	mov	fp, sp
   10f7c:	mov	r0, #12
   10f80:	bl	10b6c <malloc@plt>
   10f84:	cmp	r0, #0
   10f88:	movne	r1, #0
   10f8c:	strne	r1, [r0]
   10f90:	strne	r1, [r0, #4]
   10f94:	strne	r1, [r0, #8]
   10f98:	popne	{fp, pc}
   10f9c:	mov	r0, #0
   10fa0:	pop	{fp, pc}

00010fa4 <vetor_apaga@@Base>:
   10fa4:	cmp	r0, #0
   10fa8:	bxeq	lr
   10fac:	push	{r4, r5, fp, lr}
   10fb0:	add	fp, sp, #8
   10fb4:	ldr	r1, [r0]
   10fb8:	mov	r4, r0
   10fbc:	ldr	r0, [r0, #8]
   10fc0:	cmp	r1, #1
   10fc4:	blt	10fe8 <vetor_apaga@@Base+0x44>
   10fc8:	mov	r5, #0
   10fcc:	ldr	r0, [r0, r5, lsl #2]
   10fd0:	bl	10b18 <free@plt>
   10fd4:	ldr	r1, [r4]
   10fd8:	ldr	r0, [r4, #8]
   10fdc:	add	r5, r5, #1
   10fe0:	cmp	r5, r1
   10fe4:	blt	10fcc <vetor_apaga@@Base+0x28>
   10fe8:	bl	10b18 <free@plt>
   10fec:	mov	r0, r4
   10ff0:	pop	{r4, r5, fp, lr}
   10ff4:	b	10b18 <free@plt>

00010ff8 <vetor_atribui@@Base>:
   10ff8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10ffc:	add	fp, sp, #24
   11000:	mvn	r5, #0
   11004:	cmp	r0, #0
   11008:	beq	11080 <vetor_atribui@@Base+0x88>
   1100c:	mov	r4, r1
   11010:	cmp	r1, #0
   11014:	blt	11080 <vetor_atribui@@Base+0x88>
   11018:	mov	r7, r0
   1101c:	ldr	r0, [r0]
   11020:	cmp	r0, r4
   11024:	ble	11080 <vetor_atribui@@Base+0x88>
   11028:	mov	r0, r2
   1102c:	mov	r8, r2
   11030:	bl	10b90 <strlen@plt>
   11034:	mov	r9, r0
   11038:	ldr	r0, [r7, #8]
   1103c:	ldr	r6, [r0, r4, lsl #2]
   11040:	mov	r0, r6
   11044:	bl	10b90 <strlen@plt>
   11048:	cmp	r9, r0
   1104c:	bls	11070 <vetor_atribui@@Base+0x78>
   11050:	add	r1, r9, #1
   11054:	mov	r0, r6
   11058:	bl	10b3c <realloc@plt>
   1105c:	mov	r6, r0
   11060:	ldr	r0, [r7, #8]
   11064:	cmp	r6, #0
   11068:	str	r6, [r0, r4, lsl #2]
   1106c:	beq	11080 <vetor_atribui@@Base+0x88>
   11070:	mov	r0, r6
   11074:	mov	r1, r8
   11078:	bl	10b54 <strcpy@plt>
   1107c:	mov	r5, r4
   11080:	mov	r0, r5
   11084:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011088 <vetor_tamanho@@Base>:
   11088:	cmp	r0, #0
   1108c:	ldrne	r0, [r0]
   11090:	mvneq	r0, #0
   11094:	bx	lr

00011098 <vetor_elemento@@Base>:
   11098:	mov	r2, r0
   1109c:	mov	r0, #0
   110a0:	cmp	r2, #0
   110a4:	bxeq	lr
   110a8:	cmp	r1, #0
   110ac:	ldrge	r3, [r2]
   110b0:	cmpge	r3, r1
   110b4:	ldrgt	r0, [r2, #8]
   110b8:	ldrgt	r0, [r0, r1, lsl #2]
   110bc:	bx	lr

000110c0 <vetor_insere@@Base>:
   110c0:	push	{r4, r5, r6, r7, fp, lr}
   110c4:	add	fp, sp, #16
   110c8:	mvn	r4, #0
   110cc:	cmp	r0, #0
   110d0:	beq	1118c <vetor_insere@@Base+0xcc>
   110d4:	mov	r5, r2
   110d8:	cmp	r2, #0
   110dc:	blt	1118c <vetor_insere@@Base+0xcc>
   110e0:	mov	r6, r0
   110e4:	ldr	r0, [r0]
   110e8:	cmp	r0, r5
   110ec:	blt	1118c <vetor_insere@@Base+0xcc>
   110f0:	mov	r7, r1
   110f4:	ldr	r1, [r6, #4]
   110f8:	cmp	r0, r1
   110fc:	bne	11148 <vetor_insere@@Base+0x88>
   11100:	lsl	r1, r0, #1
   11104:	cmp	r0, #0
   11108:	movweq	r1, #1
   1110c:	str	r1, [r6, #4]
   11110:	lsl	r1, r1, #2
   11114:	ldr	r0, [r6, #8]
   11118:	bl	10b3c <realloc@plt>
   1111c:	cmp	r0, #0
   11120:	str	r0, [r6, #8]
   11124:	beq	1118c <vetor_insere@@Base+0xcc>
   11128:	ldr	r0, [r6]
   1112c:	cmp	r0, r5
   11130:	ble	11150 <vetor_insere@@Base+0x90>
   11134:	ldr	r1, [r6, #8]
   11138:	add	r2, r1, r0, lsl #2
   1113c:	ldr	r2, [r2, #-4]
   11140:	str	r2, [r1, r0, lsl #2]
   11144:	sub	r0, r0, #1
   11148:	cmp	r0, r5
   1114c:	bgt	11134 <vetor_insere@@Base+0x74>
   11150:	mov	r0, r7
   11154:	bl	10b90 <strlen@plt>
   11158:	add	r0, r0, #1
   1115c:	mov	r1, #1
   11160:	bl	10af4 <calloc@plt>
   11164:	ldr	r1, [r6, #8]
   11168:	cmp	r0, #0
   1116c:	str	r0, [r1, r5, lsl #2]
   11170:	beq	1118c <vetor_insere@@Base+0xcc>
   11174:	mov	r1, r7
   11178:	bl	10b54 <strcpy@plt>
   1117c:	ldr	r0, [r6]
   11180:	mov	r4, r5
   11184:	add	r0, r0, #1
   11188:	str	r0, [r6]
   1118c:	mov	r0, r4
   11190:	pop	{r4, r5, r6, r7, fp, pc}

00011194 <vetor_remove@@Base>:
   11194:	push	{r4, r5, fp, lr}
   11198:	add	fp, sp, #8
   1119c:	mov	r4, r0
   111a0:	mvn	r0, #0
   111a4:	cmp	r4, #0
   111a8:	popeq	{r4, r5, fp, pc}
   111ac:	cmp	r1, #0
   111b0:	mov	r5, r1
   111b4:	ldrge	r1, [r4]
   111b8:	cmpge	r1, r5
   111bc:	bgt	111c4 <vetor_remove@@Base+0x30>
   111c0:	pop	{r4, r5, fp, pc}
   111c4:	ldr	r0, [r4, #8]
   111c8:	ldr	r0, [r0, r5, lsl #2]
   111cc:	bl	10b18 <free@plt>
   111d0:	ldr	r0, [r4]
   111d4:	add	r1, r5, #1
   111d8:	cmp	r1, r0
   111dc:	bge	11204 <vetor_remove@@Base+0x70>
   111e0:	ldr	r1, [r4, #8]
   111e4:	add	r2, r1, r5, lsl #2
   111e8:	ldr	r2, [r2, #4]
   111ec:	str	r2, [r1, r5, lsl #2]
   111f0:	add	r2, r5, #2
   111f4:	add	r1, r5, #1
   111f8:	cmp	r2, r0
   111fc:	mov	r5, r1
   11200:	blt	111e0 <vetor_remove@@Base+0x4c>
   11204:	sub	r0, r0, #1
   11208:	str	r0, [r4]
   1120c:	mov	r0, #0
   11210:	pop	{r4, r5, fp, pc}

00011214 <vetor_pesquisa@@Base>:
   11214:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11218:	add	fp, sp, #24
   1121c:	mvn	r8, #0
   11220:	cmp	r0, #0
   11224:	beq	11264 <vetor_pesquisa@@Base+0x50>
   11228:	ldr	r6, [r0]
   1122c:	cmp	r6, #1
   11230:	blt	11264 <vetor_pesquisa@@Base+0x50>
   11234:	ldr	r4, [r0, #8]
   11238:	mov	r5, r1
   1123c:	mov	r7, #0
   11240:	ldr	r0, [r4, r7, lsl #2]
   11244:	mov	r1, r5
   11248:	bl	10b00 <strcmp@plt>
   1124c:	cmp	r0, #0
   11250:	moveq	r0, r7
   11254:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   11258:	add	r7, r7, #1
   1125c:	cmp	r7, r6
   11260:	blt	11240 <vetor_pesquisa@@Base+0x2c>
   11264:	mov	r0, r8
   11268:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001126c <vetor_ordena@@Base>:
   1126c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11270:	add	fp, sp, #28
   11274:	sub	sp, sp, #4
   11278:	cmp	r0, #0
   1127c:	mvneq	r0, #0
   11280:	subeq	sp, fp, #28
   11284:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11288:	ldr	r1, [r0]
   1128c:	mov	sl, r0
   11290:	mov	r0, #0
   11294:	cmp	r1, #2
   11298:	str	r1, [sp]
   1129c:	blt	11324 <vetor_ordena@@Base+0xb8>
   112a0:	ldr	r5, [sl, #8]
   112a4:	mov	r8, #1
   112a8:	sub	r9, r8, #1
   112ac:	ldr	r6, [r5, r8, lsl #2]
   112b0:	ldr	r7, [r5, r9, lsl #2]
   112b4:	mov	r0, r6
   112b8:	mov	r1, r7
   112bc:	bl	10b00 <strcmp@plt>
   112c0:	cmn	r0, #1
   112c4:	bgt	11308 <vetor_ordena@@Base+0x9c>
   112c8:	add	r0, r5, r9, lsl #2
   112cc:	mov	r4, r9
   112d0:	str	r7, [r0, #4]
   112d4:	add	r0, r9, #1
   112d8:	ldr	r5, [sl, #8]
   112dc:	cmp	r0, #2
   112e0:	blt	1130c <vetor_ordena@@Base+0xa0>
   112e4:	add	r0, r5, r4, lsl #2
   112e8:	ldr	r7, [r0, #-4]
   112ec:	mov	r0, r6
   112f0:	mov	r1, r7
   112f4:	bl	10b00 <strcmp@plt>
   112f8:	sub	r9, r4, #1
   112fc:	cmp	r0, #0
   11300:	blt	112c8 <vetor_ordena@@Base+0x5c>
   11304:	b	1130c <vetor_ordena@@Base+0xa0>
   11308:	mov	r4, r8
   1130c:	ldr	r0, [sp]
   11310:	add	r8, r8, #1
   11314:	str	r6, [r5, r4, lsl #2]
   11318:	cmp	r8, r0
   1131c:	blt	112a8 <vetor_ordena@@Base+0x3c>
   11320:	mov	r0, #0
   11324:	sub	sp, fp, #28
   11328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001132c <vetor_concatena@@Base>:
   1132c:	push	{r4, r5, r6, sl, fp, lr}
   11330:	add	fp, sp, #16
   11334:	cmp	r0, #0
   11338:	mov	r4, #0
   1133c:	movne	r5, r1
   11340:	cmpne	r1, #0
   11344:	bne	11350 <vetor_concatena@@Base+0x24>
   11348:	mov	r0, r4
   1134c:	pop	{r4, r5, r6, sl, fp, pc}
   11350:	mov	r6, r0
   11354:	mov	r0, #12
   11358:	bl	10b6c <malloc@plt>
   1135c:	cmp	r0, #0
   11360:	beq	1137c <vetor_concatena@@Base+0x50>
   11364:	mov	r4, r0
   11368:	mov	r0, #0
   1136c:	str	r0, [r4]
   11370:	str	r0, [r4, #4]
   11374:	str	r0, [r4, #8]
   11378:	b	11380 <vetor_concatena@@Base+0x54>
   1137c:	mov	r4, #0
   11380:	ldm	r5, {r0, r1}
   11384:	ldm	r6, {r2, r3, ip}
   11388:	add	r6, r2, r0, lsl #2
   1138c:	add	r1, r1, r3
   11390:	stmib	r4, {r1, r6}
   11394:	ldr	r0, [r2, r0, lsl #2]
   11398:	ldr	r1, [ip]
   1139c:	bl	10b54 <strcpy@plt>
   113a0:	ldr	r0, [r4, #8]
   113a4:	ldr	r1, [r5, #8]
   113a8:	ldr	r0, [r0]
   113ac:	ldr	r1, [r1]
   113b0:	bl	10b48 <strcat@plt>
   113b4:	mov	r0, r4
   113b8:	pop	{r4, r5, r6, sl, fp, pc}

000113bc <vetor_inverte@@Base>:
   113bc:	push	{r4, r5, fp, lr}
   113c0:	add	fp, sp, #8
   113c4:	cmp	r0, #0
   113c8:	beq	11420 <vetor_inverte@@Base+0x64>
   113cc:	ldr	ip, [r0]
   113d0:	cmp	ip, #1
   113d4:	blt	11420 <vetor_inverte@@Base+0x64>
   113d8:	sub	r3, ip, #1
   113dc:	lsl	lr, ip, #2
   113e0:	mov	r1, #0
   113e4:	ldr	r2, [r0, #8]
   113e8:	add	r5, r2, lr
   113ec:	ldr	r4, [r2, r1, lsl #2]
   113f0:	ldr	r5, [r5, -r1, lsl #2]
   113f4:	str	r5, [r2, r1, lsl #2]
   113f8:	ldr	r2, [r0, #8]
   113fc:	add	r2, r2, lr
   11400:	str	r4, [r2, -r1, lsl #2]
   11404:	add	r1, r1, #1
   11408:	cmp	r1, ip
   1140c:	bge	11420 <vetor_inverte@@Base+0x64>
   11410:	sub	r2, r3, #1
   11414:	cmp	r1, r3
   11418:	mov	r3, r2
   1141c:	blt	113e4 <vetor_inverte@@Base+0x28>
   11420:	mov	r0, #0
   11424:	pop	{r4, r5, fp, pc}

00011428 <vetor_baralha@@Base>:
   11428:	push	{r4, r5, r6, r7, fp, lr}
   1142c:	add	fp, sp, #16
   11430:	sub	sp, sp, #8
   11434:	ldr	r5, [r0]
   11438:	mov	r0, #12
   1143c:	bl	10b6c <malloc@plt>
   11440:	cmp	r0, #0
   11444:	beq	11460 <vetor_baralha@@Base+0x38>
   11448:	mov	r4, r0
   1144c:	mov	r0, #0
   11450:	str	r0, [r4]
   11454:	str	r0, [r4, #4]
   11458:	str	r0, [r4, #8]
   1145c:	b	11464 <vetor_baralha@@Base+0x3c>
   11460:	mov	r4, #0
   11464:	add	r0, sp, #4
   11468:	bl	10b30 <time@plt>
   1146c:	bl	10b9c <srand@plt>
   11470:	cmp	r5, #1
   11474:	blt	114ac <vetor_baralha@@Base+0x84>
   11478:	add	r6, r5, #1
   1147c:	mov	r7, #0
   11480:	bl	10ba8 <rand@plt>
   11484:	ldr	r1, [r4, #8]
   11488:	sdiv	r3, r0, r6
   1148c:	mls	r0, r3, r6, r0
   11490:	ldr	r3, [r1, r0, lsl #2]
   11494:	ldr	r2, [r1, r7, lsl #2]
   11498:	str	r3, [r1, r7, lsl #2]
   1149c:	add	r7, r7, #1
   114a0:	str	r2, [r1, r0, lsl #2]
   114a4:	cmp	r5, r7
   114a8:	bne	11480 <vetor_baralha@@Base+0x58>
   114ac:	mov	r0, r4
   114b0:	sub	sp, fp, #16
   114b4:	pop	{r4, r5, r6, r7, fp, pc}

000114b8 <__libc_csu_init@@Base>:
   114b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114bc:	mov	r7, r0
   114c0:	ldr	r6, [pc, #72]	; 11510 <__libc_csu_init@@Base+0x58>
   114c4:	ldr	r5, [pc, #72]	; 11514 <__libc_csu_init@@Base+0x5c>
   114c8:	add	r6, pc, r6
   114cc:	add	r5, pc, r5
   114d0:	sub	r6, r6, r5
   114d4:	mov	r8, r1
   114d8:	mov	r9, r2
   114dc:	bl	10ad4 <calloc@plt-0x20>
   114e0:	asrs	r6, r6, #2
   114e4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   114e8:	mov	r4, #0
   114ec:	add	r4, r4, #1
   114f0:	ldr	r3, [r5], #4
   114f4:	mov	r2, r9
   114f8:	mov	r1, r8
   114fc:	mov	r0, r7
   11500:	blx	r3
   11504:	cmp	r6, r4
   11508:	bne	114ec <__libc_csu_init@@Base+0x34>
   1150c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11510:	andeq	r0, r1, ip, lsr sl
   11514:	andeq	r0, r1, r4, lsr sl

00011518 <__libc_csu_fini@@Base>:
   11518:	bx	lr

Disassembly of section .fini:

0001151c <.fini>:
   1151c:	push	{r3, lr}
   11520:	pop	{r3, pc}
