
../repos/sgerbino-table-2fdd8d0/bin/table_memtest:     file format elf32-littlearm


Disassembly of section .init:

00011a70 <.init>:
   11a70:	push	{r3, lr}
   11a74:	bl	11b74 <_start@@Base+0x3c>
   11a78:	pop	{r3, pc}

Disassembly of section .plt:

00011a7c <strcmp@plt-0x14>:
   11a7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11a80:	ldr	lr, [pc, #4]	; 11a8c <strcmp@plt-0x4>
   11a84:	add	lr, pc, lr
   11a88:	ldr	pc, [lr, #8]!
   11a8c:	andeq	r4, r1, r4, ror r5

00011a90 <strcmp@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #20, 20	; 0x14000
   11a98:	ldr	pc, [ip, #1396]!	; 0x574

00011a9c <free@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #20, 20	; 0x14000
   11aa4:	ldr	pc, [ip, #1388]!	; 0x56c

00011aa8 <time@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #20, 20	; 0x14000
   11ab0:	ldr	pc, [ip, #1380]!	; 0x564

00011ab4 <realloc@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #20, 20	; 0x14000
   11abc:	ldr	pc, [ip, #1372]!	; 0x55c

00011ac0 <strcpy@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #20, 20	; 0x14000
   11ac8:	ldr	pc, [ip, #1364]!	; 0x554

00011acc <malloc@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #20, 20	; 0x14000
   11ad4:	ldr	pc, [ip, #1356]!	; 0x54c

00011ad8 <__libc_start_main@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #20, 20	; 0x14000
   11ae0:	ldr	pc, [ip, #1348]!	; 0x544

00011ae4 <__gmon_start__@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #20, 20	; 0x14000
   11aec:	ldr	pc, [ip, #1340]!	; 0x53c

00011af0 <strlen@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #20, 20	; 0x14000
   11af8:	ldr	pc, [ip, #1332]!	; 0x534

00011afc <srand@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #20, 20	; 0x14000
   11b04:	ldr	pc, [ip, #1324]!	; 0x52c

00011b08 <snprintf@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #20, 20	; 0x14000
   11b10:	ldr	pc, [ip, #1316]!	; 0x524

00011b14 <__isoc99_sscanf@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #20, 20	; 0x14000
   11b1c:	ldr	pc, [ip, #1308]!	; 0x51c

00011b20 <rand@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #20, 20	; 0x14000
   11b28:	ldr	pc, [ip, #1300]!	; 0x514

00011b2c <abort@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #20, 20	; 0x14000
   11b34:	ldr	pc, [ip, #1292]!	; 0x50c

Disassembly of section .text:

00011b38 <_start@@Base>:
   11b38:	mov	fp, #0
   11b3c:	mov	lr, #0
   11b40:	pop	{r1}		; (ldr r1, [sp], #4)
   11b44:	mov	r2, sp
   11b48:	push	{r2}		; (str r2, [sp, #-4]!)
   11b4c:	push	{r0}		; (str r0, [sp, #-4]!)
   11b50:	ldr	ip, [pc, #16]	; 11b68 <_start@@Base+0x30>
   11b54:	push	{ip}		; (str ip, [sp, #-4]!)
   11b58:	ldr	r0, [pc, #12]	; 11b6c <_start@@Base+0x34>
   11b5c:	ldr	r3, [pc, #12]	; 11b70 <_start@@Base+0x38>
   11b60:	bl	11ad8 <__libc_start_main@plt>
   11b64:	bl	11b2c <abort@plt>
   11b68:	andeq	r5, r1, r0, lsr #2
   11b6c:	andeq	r1, r1, ip, lsr ip
   11b70:	andeq	r5, r1, r0, asr #1
   11b74:	ldr	r3, [pc, #20]	; 11b90 <_start@@Base+0x58>
   11b78:	ldr	r2, [pc, #20]	; 11b94 <_start@@Base+0x5c>
   11b7c:	add	r3, pc, r3
   11b80:	ldr	r2, [r3, r2]
   11b84:	cmp	r2, #0
   11b88:	bxeq	lr
   11b8c:	b	11ae4 <__gmon_start__@plt>
   11b90:	andeq	r4, r1, ip, ror r4
   11b94:	andeq	r0, r0, r4, asr #32
   11b98:	ldr	r0, [pc, #24]	; 11bb8 <_start@@Base+0x80>
   11b9c:	ldr	r3, [pc, #24]	; 11bbc <_start@@Base+0x84>
   11ba0:	cmp	r3, r0
   11ba4:	bxeq	lr
   11ba8:	ldr	r3, [pc, #16]	; 11bc0 <_start@@Base+0x88>
   11bac:	cmp	r3, #0
   11bb0:	bxeq	lr
   11bb4:	bx	r3
   11bb8:	andeq	r6, r2, r0, asr r0
   11bbc:	andeq	r6, r2, r0, asr r0
   11bc0:	andeq	r0, r0, r0
   11bc4:	ldr	r0, [pc, #36]	; 11bf0 <_start@@Base+0xb8>
   11bc8:	ldr	r1, [pc, #36]	; 11bf4 <_start@@Base+0xbc>
   11bcc:	sub	r1, r1, r0
   11bd0:	asr	r1, r1, #2
   11bd4:	add	r1, r1, r1, lsr #31
   11bd8:	asrs	r1, r1, #1
   11bdc:	bxeq	lr
   11be0:	ldr	r3, [pc, #16]	; 11bf8 <_start@@Base+0xc0>
   11be4:	cmp	r3, #0
   11be8:	bxeq	lr
   11bec:	bx	r3
   11bf0:	andeq	r6, r2, r0, asr r0
   11bf4:	andeq	r6, r2, r0, asr r0
   11bf8:	andeq	r0, r0, r0
   11bfc:	push	{r4, lr}
   11c00:	ldr	r4, [pc, #24]	; 11c20 <_start@@Base+0xe8>
   11c04:	ldrb	r3, [r4]
   11c08:	cmp	r3, #0
   11c0c:	popne	{r4, pc}
   11c10:	bl	11b98 <_start@@Base+0x60>
   11c14:	mov	r3, #1
   11c18:	strb	r3, [r4]
   11c1c:	pop	{r4, pc}
   11c20:	andeq	r6, r2, r0, asr r0
   11c24:	b	11bc4 <_start@@Base+0x8c>
   11c28:	ldr	r1, [sp]
   11c2c:	ldr	r2, [r1]
   11c30:	orr	r3, r2, r3
   11c34:	str	r3, [r1]
   11c38:	bx	lr

00011c3c <main@@Base>:
   11c3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11c40:	strd	r6, [sp, #8]
   11c44:	strd	r8, [sp, #16]
   11c48:	strd	sl, [sp, #24]
   11c4c:	str	lr, [sp, #32]
   11c50:	sub	sp, sp, #28
   11c54:	mov	r4, #0
   11c58:	str	r4, [sp, #20]
   11c5c:	bl	11dd0 <table_new@@Base>
   11c60:	mov	r6, r0
   11c64:	add	r0, sp, #16
   11c68:	bl	11aa8 <time@plt>
   11c6c:	bl	11afc <srand@plt>
   11c70:	mvn	r3, #0
   11c74:	add	r2, sp, #20
   11c78:	movw	r1, #7208	; 0x1c28
   11c7c:	movt	r1, #1
   11c80:	mov	r0, r6
   11c84:	bl	12428 <table_register_callback@@Base>
   11c88:	mov	r5, r4
   11c8c:	strh	r5, [sp, #12]
   11c90:	strb	r4, [sp, #12]
   11c94:	mov	r2, r4
   11c98:	add	r1, sp, #12
   11c9c:	mov	r0, r6
   11ca0:	bl	1285c <table_add_column@@Base>
   11ca4:	add	r4, r4, #1
   11ca8:	cmp	r4, #24
   11cac:	bne	11c8c <main@@Base+0x50>
   11cb0:	mov	r0, r6
   11cb4:	bl	127c8 <table_get_column_length@@Base>
   11cb8:	mov	r9, r0
   11cbc:	mov	r8, #0
   11cc0:	mov	fp, #64	; 0x40
   11cc4:	mov	sl, r8
   11cc8:	b	11ce0 <main@@Base+0xa4>
   11ccc:	mov	r0, r7
   11cd0:	bl	11a9c <free@plt>
   11cd4:	add	r8, r8, #1
   11cd8:	cmp	r8, #500	; 0x1f4
   11cdc:	beq	11d60 <main@@Base+0x124>
   11ce0:	mov	r0, fp
   11ce4:	bl	11acc <malloc@plt>
   11ce8:	mov	r7, r0
   11cec:	sub	r4, r0, #1
   11cf0:	add	r5, r0, #62	; 0x3e
   11cf4:	bl	11b20 <rand@plt>
   11cf8:	rsbs	r3, r0, #0
   11cfc:	and	r0, r0, #127	; 0x7f
   11d00:	and	r3, r3, #127	; 0x7f
   11d04:	rsbpl	r0, r3, #0
   11d08:	strb	r0, [r4, #1]!
   11d0c:	cmp	r4, r5
   11d10:	bne	11cf4 <main@@Base+0xb8>
   11d14:	strb	sl, [r7, #63]	; 0x3f
   11d18:	mov	r0, r6
   11d1c:	bl	137d4 <table_add_row@@Base>
   11d20:	cmp	r9, #0
   11d24:	ble	11ccc <main@@Base+0x90>
   11d28:	mov	r4, #0
   11d2c:	mov	r1, r4
   11d30:	mov	r0, r6
   11d34:	bl	12848 <table_get_column_data_type@@Base>
   11d38:	str	r0, [sp]
   11d3c:	mov	r3, r7
   11d40:	mov	r2, r4
   11d44:	mov	r1, r8
   11d48:	mov	r0, r6
   11d4c:	bl	139e0 <table_set@@Base>
   11d50:	add	r4, r4, #1
   11d54:	cmp	r9, r4
   11d58:	bne	11d2c <main@@Base+0xf0>
   11d5c:	b	11ccc <main@@Base+0x90>
   11d60:	mov	r0, r6
   11d64:	bl	11ed8 <table_delete@@Base>
   11d68:	mov	r0, #0
   11d6c:	add	sp, sp, #28
   11d70:	ldrd	r4, [sp]
   11d74:	ldrd	r6, [sp, #8]
   11d78:	ldrd	r8, [sp, #16]
   11d7c:	ldrd	sl, [sp, #24]
   11d80:	add	sp, sp, #32
   11d84:	pop	{pc}		; (ldr pc, [sp], #4)

00011d88 <table_init@@Base>:
   11d88:	mov	r3, #0
   11d8c:	str	r3, [r0]
   11d90:	str	r3, [r0, #4]
   11d94:	str	r3, [r0, #12]
   11d98:	mov	r2, #10
   11d9c:	str	r2, [r0, #8]
   11da0:	str	r3, [r0, #16]
   11da4:	str	r3, [r0, #20]
   11da8:	str	r3, [r0, #28]
   11dac:	mov	r1, #20
   11db0:	str	r1, [r0, #24]
   11db4:	str	r3, [r0, #36]	; 0x24
   11db8:	str	r3, [r0, #40]	; 0x28
   11dbc:	str	r3, [r0, #44]	; 0x2c
   11dc0:	str	r3, [r0, #32]
   11dc4:	str	r3, [r0, #52]	; 0x34
   11dc8:	str	r2, [r0, #48]	; 0x30
   11dcc:	bx	lr

00011dd0 <table_new@@Base>:
   11dd0:	str	r4, [sp, #-8]!
   11dd4:	str	lr, [sp, #4]
   11dd8:	mov	r0, #56	; 0x38
   11ddc:	bl	11acc <malloc@plt>
   11de0:	mov	r4, r0
   11de4:	bl	11d88 <table_init@@Base>
   11de8:	mov	r0, r4
   11dec:	ldr	r4, [sp]
   11df0:	add	sp, sp, #4
   11df4:	pop	{pc}		; (ldr pc, [sp], #4)

00011df8 <table_destroy@@Base>:
   11df8:	strd	r4, [sp, #-16]!
   11dfc:	str	r6, [sp, #8]
   11e00:	str	lr, [sp, #12]
   11e04:	subs	r4, r0, #0
   11e08:	beq	11ec8 <table_destroy@@Base+0xd0>
   11e0c:	mov	r3, #64	; 0x40
   11e10:	mvn	r2, #0
   11e14:	mov	r1, r2
   11e18:	mov	r0, r4
   11e1c:	bl	12694 <table_notify@@Base>
   11e20:	mov	r0, r4
   11e24:	bl	137cc <table_get_row_length@@Base>
   11e28:	subs	r6, r0, #0
   11e2c:	ble	11e4c <table_destroy@@Base+0x54>
   11e30:	mov	r5, #0
   11e34:	mov	r1, r5
   11e38:	mov	r0, r4
   11e3c:	bl	13760 <table_row_destroy@@Base>
   11e40:	add	r5, r5, #1
   11e44:	cmp	r6, r5
   11e48:	bne	11e34 <table_destroy@@Base+0x3c>
   11e4c:	ldr	r0, [r4, #16]
   11e50:	cmp	r0, #0
   11e54:	beq	11e5c <table_destroy@@Base+0x64>
   11e58:	bl	11a9c <free@plt>
   11e5c:	mov	r0, r4
   11e60:	bl	127c8 <table_get_column_length@@Base>
   11e64:	subs	r6, r0, #0
   11e68:	ble	11e88 <table_destroy@@Base+0x90>
   11e6c:	mov	r5, #0
   11e70:	mov	r1, r5
   11e74:	mov	r0, r4
   11e78:	bl	1279c <table_column_destroy@@Base>
   11e7c:	add	r5, r5, #1
   11e80:	cmp	r6, r5
   11e84:	bne	11e70 <table_destroy@@Base+0x78>
   11e88:	ldr	r0, [r4]
   11e8c:	cmp	r0, #0
   11e90:	beq	11e98 <table_destroy@@Base+0xa0>
   11e94:	bl	11a9c <free@plt>
   11e98:	ldr	r0, [r4, #36]	; 0x24
   11e9c:	cmp	r0, #0
   11ea0:	beq	11ea8 <table_destroy@@Base+0xb0>
   11ea4:	bl	11a9c <free@plt>
   11ea8:	ldr	r0, [r4, #40]	; 0x28
   11eac:	cmp	r0, #0
   11eb0:	beq	11eb8 <table_destroy@@Base+0xc0>
   11eb4:	bl	11a9c <free@plt>
   11eb8:	ldr	r0, [r4, #44]	; 0x2c
   11ebc:	cmp	r0, #0
   11ec0:	beq	11ec8 <table_destroy@@Base+0xd0>
   11ec4:	bl	11a9c <free@plt>
   11ec8:	ldrd	r4, [sp]
   11ecc:	ldr	r6, [sp, #8]
   11ed0:	add	sp, sp, #12
   11ed4:	pop	{pc}		; (ldr pc, [sp], #4)

00011ed8 <table_delete@@Base>:
   11ed8:	str	r4, [sp, #-8]!
   11edc:	str	lr, [sp, #4]
   11ee0:	mov	r4, r0
   11ee4:	bl	11df8 <table_destroy@@Base>
   11ee8:	mov	r0, r4
   11eec:	bl	11a9c <free@plt>
   11ef0:	ldr	r4, [sp]
   11ef4:	add	sp, sp, #4
   11ef8:	pop	{pc}		; (ldr pc, [sp], #4)

00011efc <table_dupe@@Base>:
   11efc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11f00:	strd	r6, [sp, #8]
   11f04:	strd	r8, [sp, #16]
   11f08:	str	lr, [sp, #24]
   11f0c:	sub	sp, sp, #20
   11f10:	mov	r6, r0
   11f14:	bl	137cc <table_get_row_length@@Base>
   11f18:	mov	r9, r0
   11f1c:	mov	r0, r6
   11f20:	bl	127c8 <table_get_column_length@@Base>
   11f24:	mov	r7, r0
   11f28:	bl	11dd0 <table_new@@Base>
   11f2c:	mov	r8, r0
   11f30:	cmp	r7, #0
   11f34:	ble	11f74 <table_dupe@@Base+0x78>
   11f38:	mov	r4, #0
   11f3c:	mov	r1, r4
   11f40:	mov	r0, r6
   11f44:	bl	12b34 <table_get_column_name@@Base>
   11f48:	mov	r5, r0
   11f4c:	mov	r1, r4
   11f50:	mov	r0, r6
   11f54:	bl	12848 <table_get_column_data_type@@Base>
   11f58:	mov	r2, r0
   11f5c:	mov	r1, r5
   11f60:	mov	r0, r8
   11f64:	bl	1285c <table_add_column@@Base>
   11f68:	add	r4, r4, #1
   11f6c:	cmp	r7, r4
   11f70:	bne	11f3c <table_dupe@@Base+0x40>
   11f74:	cmp	r9, #0
   11f78:	ble	123e0 <table_dupe@@Base+0x4e4>
   11f7c:	mov	r5, #0
   11f80:	b	123c8 <table_dupe@@Base+0x4cc>
   11f84:	mov	r2, r4
   11f88:	mov	r1, r5
   11f8c:	mov	r0, r6
   11f90:	bl	134b0 <table_get_int@@Base>
   11f94:	mov	r3, r0
   11f98:	mov	r2, r4
   11f9c:	mov	r1, r5
   11fa0:	mov	r0, r8
   11fa4:	bl	14178 <table_set_int@@Base>
   11fa8:	add	r4, r4, #1
   11fac:	cmp	r7, r4
   11fb0:	beq	123bc <table_dupe@@Base+0x4c0>
   11fb4:	mov	r1, r4
   11fb8:	mov	r0, r6
   11fbc:	bl	12848 <table_get_column_data_type@@Base>
   11fc0:	cmp	r0, #23
   11fc4:	ldrls	pc, [pc, r0, lsl #2]
   11fc8:	b	11fa8 <table_dupe@@Base+0xac>
   11fcc:	andeq	r1, r1, r4, lsl #31
   11fd0:	andeq	r2, r1, ip, lsr #32
   11fd4:	andeq	r2, r1, r4, asr r0
   11fd8:	andeq	r2, r1, ip, ror r0
   11fdc:	andeq	r2, r1, r4, lsr #1
   11fe0:	andeq	r2, r1, ip, asr #1
   11fe4:	strdeq	r2, [r1], -r4
   11fe8:	andeq	r2, r1, ip, lsl r1
   11fec:	andeq	r2, r1, r4, asr #2
   11ff0:	andeq	r2, r1, ip, ror #2
   11ff4:	muleq	r1, r4, r1
   11ff8:			; <UNDEFINED> instruction: 0x000121bc
   11ffc:	andeq	r2, r1, r4, ror #3
   12000:	andeq	r2, r1, ip, lsl #4
   12004:	andeq	r2, r1, r4, lsr r2
   12008:	andeq	r2, r1, ip, asr r2
   1200c:	andeq	r2, r1, ip, lsr #5
   12010:	ldrdeq	r2, [r1], -r0
   12014:	strdeq	r2, [r1], -r4
   12018:	andeq	r2, r1, r0, asr #6
   1201c:	andeq	r2, r1, r8, ror #6
   12020:	andeq	r2, r1, r4, lsl #5
   12024:	andeq	r2, r1, r8, lsl r3
   12028:	muleq	r1, r0, r3
   1202c:	mov	r2, r4
   12030:	mov	r1, r5
   12034:	mov	r0, r6
   12038:	bl	134cc <table_get_uint@@Base>
   1203c:	mov	r3, r0
   12040:	mov	r2, r4
   12044:	mov	r1, r5
   12048:	mov	r0, r8
   1204c:	bl	1419c <table_set_uint@@Base>
   12050:	b	11fa8 <table_dupe@@Base+0xac>
   12054:	mov	r2, r4
   12058:	mov	r1, r5
   1205c:	mov	r0, r6
   12060:	bl	134e8 <table_get_int8@@Base>
   12064:	mov	r3, r0
   12068:	mov	r2, r4
   1206c:	mov	r1, r5
   12070:	mov	r0, r8
   12074:	bl	141c0 <table_set_int8@@Base>
   12078:	b	11fa8 <table_dupe@@Base+0xac>
   1207c:	mov	r2, r4
   12080:	mov	r1, r5
   12084:	mov	r0, r6
   12088:	bl	13504 <table_get_uint8@@Base>
   1208c:	mov	r3, r0
   12090:	mov	r2, r4
   12094:	mov	r1, r5
   12098:	mov	r0, r8
   1209c:	bl	141e4 <table_set_uint8@@Base>
   120a0:	b	11fa8 <table_dupe@@Base+0xac>
   120a4:	mov	r2, r4
   120a8:	mov	r1, r5
   120ac:	mov	r0, r6
   120b0:	bl	13520 <table_get_int16@@Base>
   120b4:	mov	r3, r0
   120b8:	mov	r2, r4
   120bc:	mov	r1, r5
   120c0:	mov	r0, r8
   120c4:	bl	14208 <table_set_int16@@Base>
   120c8:	b	11fa8 <table_dupe@@Base+0xac>
   120cc:	mov	r2, r4
   120d0:	mov	r1, r5
   120d4:	mov	r0, r6
   120d8:	bl	1353c <table_get_uint16@@Base>
   120dc:	mov	r3, r0
   120e0:	mov	r2, r4
   120e4:	mov	r1, r5
   120e8:	mov	r0, r8
   120ec:	bl	1422c <table_set_uint16@@Base>
   120f0:	b	11fa8 <table_dupe@@Base+0xac>
   120f4:	mov	r2, r4
   120f8:	mov	r1, r5
   120fc:	mov	r0, r6
   12100:	bl	13558 <table_get_int32@@Base>
   12104:	mov	r3, r0
   12108:	mov	r2, r4
   1210c:	mov	r1, r5
   12110:	mov	r0, r8
   12114:	bl	14250 <table_set_int32@@Base>
   12118:	b	11fa8 <table_dupe@@Base+0xac>
   1211c:	mov	r2, r4
   12120:	mov	r1, r5
   12124:	mov	r0, r6
   12128:	bl	13574 <table_get_uint32@@Base>
   1212c:	mov	r3, r0
   12130:	mov	r2, r4
   12134:	mov	r1, r5
   12138:	mov	r0, r8
   1213c:	bl	14274 <table_set_uint32@@Base>
   12140:	b	11fa8 <table_dupe@@Base+0xac>
   12144:	mov	r2, r4
   12148:	mov	r1, r5
   1214c:	mov	r0, r6
   12150:	bl	13590 <table_get_int64@@Base>
   12154:	strd	r0, [sp]
   12158:	mov	r2, r4
   1215c:	mov	r1, r5
   12160:	mov	r0, r8
   12164:	bl	14298 <table_set_int64@@Base>
   12168:	b	11fa8 <table_dupe@@Base+0xac>
   1216c:	mov	r2, r4
   12170:	mov	r1, r5
   12174:	mov	r0, r6
   12178:	bl	135ac <table_get_uint64@@Base>
   1217c:	strd	r0, [sp]
   12180:	mov	r2, r4
   12184:	mov	r1, r5
   12188:	mov	r0, r8
   1218c:	bl	142b8 <table_set_uint64@@Base>
   12190:	b	11fa8 <table_dupe@@Base+0xac>
   12194:	mov	r2, r4
   12198:	mov	r1, r5
   1219c:	mov	r0, r6
   121a0:	bl	135c8 <table_get_short@@Base>
   121a4:	mov	r3, r0
   121a8:	mov	r2, r4
   121ac:	mov	r1, r5
   121b0:	mov	r0, r8
   121b4:	bl	142d8 <table_set_short@@Base>
   121b8:	b	11fa8 <table_dupe@@Base+0xac>
   121bc:	mov	r2, r4
   121c0:	mov	r1, r5
   121c4:	mov	r0, r6
   121c8:	bl	135e4 <table_get_ushort@@Base>
   121cc:	mov	r3, r0
   121d0:	mov	r2, r4
   121d4:	mov	r1, r5
   121d8:	mov	r0, r8
   121dc:	bl	142fc <table_set_ushort@@Base>
   121e0:	b	11fa8 <table_dupe@@Base+0xac>
   121e4:	mov	r2, r4
   121e8:	mov	r1, r5
   121ec:	mov	r0, r6
   121f0:	bl	13600 <table_get_long@@Base>
   121f4:	mov	r3, r0
   121f8:	mov	r2, r4
   121fc:	mov	r1, r5
   12200:	mov	r0, r8
   12204:	bl	14320 <table_set_long@@Base>
   12208:	b	11fa8 <table_dupe@@Base+0xac>
   1220c:	mov	r2, r4
   12210:	mov	r1, r5
   12214:	mov	r0, r6
   12218:	bl	1361c <table_get_ulong@@Base>
   1221c:	mov	r3, r0
   12220:	mov	r2, r4
   12224:	mov	r1, r5
   12228:	mov	r0, r8
   1222c:	bl	14344 <table_set_ulong@@Base>
   12230:	b	11fa8 <table_dupe@@Base+0xac>
   12234:	mov	r2, r4
   12238:	mov	r1, r5
   1223c:	mov	r0, r6
   12240:	bl	13638 <table_get_llong@@Base>
   12244:	strd	r0, [sp]
   12248:	mov	r2, r4
   1224c:	mov	r1, r5
   12250:	mov	r0, r8
   12254:	bl	14368 <table_set_llong@@Base>
   12258:	b	11fa8 <table_dupe@@Base+0xac>
   1225c:	mov	r2, r4
   12260:	mov	r1, r5
   12264:	mov	r0, r6
   12268:	bl	13654 <table_get_ullong@@Base>
   1226c:	strd	r0, [sp]
   12270:	mov	r2, r4
   12274:	mov	r1, r5
   12278:	mov	r0, r8
   1227c:	bl	14388 <table_set_ullong@@Base>
   12280:	b	11fa8 <table_dupe@@Base+0xac>
   12284:	mov	r2, r4
   12288:	mov	r1, r5
   1228c:	mov	r0, r6
   12290:	bl	136fc <table_get_string@@Base>
   12294:	mov	r3, r0
   12298:	mov	r2, r4
   1229c:	mov	r1, r5
   122a0:	mov	r0, r8
   122a4:	bl	14414 <table_set_string@@Base>
   122a8:	b	11fa8 <table_dupe@@Base+0xac>
   122ac:	mov	r2, r4
   122b0:	mov	r1, r5
   122b4:	mov	r0, r6
   122b8:	bl	13670 <table_get_float@@Base>
   122bc:	mov	r2, r4
   122c0:	mov	r1, r5
   122c4:	mov	r0, r8
   122c8:	bl	143a8 <table_set_float@@Base>
   122cc:	b	11fa8 <table_dupe@@Base+0xac>
   122d0:	mov	r2, r4
   122d4:	mov	r1, r5
   122d8:	mov	r0, r6
   122dc:	bl	1368c <table_get_double@@Base>
   122e0:	mov	r2, r4
   122e4:	mov	r1, r5
   122e8:	mov	r0, r8
   122ec:	bl	143cc <table_set_double@@Base>
   122f0:	b	11fa8 <table_dupe@@Base+0xac>
   122f4:	mov	r2, r4
   122f8:	mov	r1, r5
   122fc:	mov	r0, r6
   12300:	bl	136a8 <table_get_ldouble@@Base>
   12304:	mov	r2, r4
   12308:	mov	r1, r5
   1230c:	mov	r0, r8
   12310:	bl	143f0 <table_set_ldouble@@Base>
   12314:	b	11fa8 <table_dupe@@Base+0xac>
   12318:	mov	r2, r4
   1231c:	mov	r1, r5
   12320:	mov	r0, r6
   12324:	bl	13494 <table_get_bool@@Base>
   12328:	mov	r3, r0
   1232c:	mov	r2, r4
   12330:	mov	r1, r5
   12334:	mov	r0, r8
   12338:	bl	14154 <table_set_bool@@Base>
   1233c:	b	11fa8 <table_dupe@@Base+0xac>
   12340:	mov	r2, r4
   12344:	mov	r1, r5
   12348:	mov	r0, r6
   1234c:	bl	136c4 <table_get_char@@Base>
   12350:	mov	r3, r0
   12354:	mov	r2, r4
   12358:	mov	r1, r5
   1235c:	mov	r0, r8
   12360:	bl	14430 <table_set_char@@Base>
   12364:	b	11fa8 <table_dupe@@Base+0xac>
   12368:	mov	r2, r4
   1236c:	mov	r1, r5
   12370:	mov	r0, r6
   12374:	bl	136e0 <table_get_uchar@@Base>
   12378:	mov	r3, r0
   1237c:	mov	r2, r4
   12380:	mov	r1, r5
   12384:	mov	r0, r8
   12388:	bl	14454 <table_set_uchar@@Base>
   1238c:	b	11fa8 <table_dupe@@Base+0xac>
   12390:	mov	r2, r4
   12394:	mov	r1, r5
   12398:	mov	r0, r6
   1239c:	bl	13714 <table_get_ptr@@Base>
   123a0:	str	r0, [sp, #12]
   123a4:	add	r3, sp, #12
   123a8:	mov	r2, r4
   123ac:	mov	r1, r5
   123b0:	mov	r0, r8
   123b4:	bl	14478 <table_set_ptr@@Base>
   123b8:	b	11fa8 <table_dupe@@Base+0xac>
   123bc:	add	r5, r5, #1
   123c0:	cmp	r9, r5
   123c4:	beq	123e0 <table_dupe@@Base+0x4e4>
   123c8:	mov	r0, r8
   123cc:	bl	137d4 <table_add_row@@Base>
   123d0:	cmp	r7, #0
   123d4:	ble	123bc <table_dupe@@Base+0x4c0>
   123d8:	mov	r4, #0
   123dc:	b	11fb4 <table_dupe@@Base+0xb8>
   123e0:	mov	r0, r8
   123e4:	add	sp, sp, #20
   123e8:	ldrd	r4, [sp]
   123ec:	ldrd	r6, [sp, #8]
   123f0:	ldrd	r8, [sp, #16]
   123f4:	add	sp, sp, #24
   123f8:	pop	{pc}		; (ldr pc, [sp], #4)

000123fc <table_get_major_version@@Base>:
   123fc:	mov	r0, #0
   12400:	bx	lr

00012404 <table_get_minor_version@@Base>:
   12404:	mov	r0, #0
   12408:	bx	lr

0001240c <table_get_patch_version@@Base>:
   1240c:	mov	r0, #0
   12410:	bx	lr

00012414 <table_get_version@@Base>:
   12414:	movw	r0, #20852	; 0x5174
   12418:	movt	r0, #1
   1241c:	bx	lr

00012420 <table_get_callback_length@@Base>:
   12420:	ldr	r0, [r0, #32]
   12424:	bx	lr

00012428 <table_register_callback@@Base>:
   12428:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1242c:	strd	r6, [sp, #8]
   12430:	str	r8, [sp, #16]
   12434:	str	lr, [sp, #20]
   12438:	ldr	r5, [r0, #32]
   1243c:	cmp	r5, #0
   12440:	ble	1249c <table_register_callback@@Base+0x74>
   12444:	ldr	lr, [r0, #36]	; 0x24
   12448:	sub	lr, lr, #4
   1244c:	mov	ip, #0
   12450:	b	12460 <table_register_callback@@Base+0x38>
   12454:	add	ip, ip, #1
   12458:	cmp	ip, r5
   1245c:	beq	1249c <table_register_callback@@Base+0x74>
   12460:	lsl	r6, ip, #2
   12464:	ldr	r4, [lr, #4]!
   12468:	cmp	r1, r4
   1246c:	bne	12454 <table_register_callback@@Base+0x2c>
   12470:	ldr	r4, [r0, #40]	; 0x28
   12474:	ldr	r4, [r4, ip, lsl #2]
   12478:	cmp	r2, r4
   1247c:	bne	12454 <table_register_callback@@Base+0x2c>
   12480:	cmp	ip, #0
   12484:	ble	1249c <table_register_callback@@Base+0x74>
   12488:	ldr	r2, [r0, #44]	; 0x2c
   1248c:	ldr	r8, [r2, r6]
   12490:	orr	r8, r8, r3
   12494:	str	r8, [r2, r6]
   12498:	b	124e8 <table_register_callback@@Base+0xc0>
   1249c:	mov	r8, r3
   124a0:	mov	r7, r2
   124a4:	mov	r6, r1
   124a8:	mov	r4, r0
   124ac:	ldr	r1, [r0, #48]	; 0x30
   124b0:	udiv	r3, r5, r1
   124b4:	mls	r5, r1, r3, r5
   124b8:	cmp	r5, #0
   124bc:	beq	124fc <table_register_callback@@Base+0xd4>
   124c0:	ldr	r3, [r4, #32]
   124c4:	ldr	r2, [r4, #36]	; 0x24
   124c8:	str	r6, [r2, r3, lsl #2]
   124cc:	ldr	r2, [r4, #40]	; 0x28
   124d0:	str	r7, [r2, r3, lsl #2]
   124d4:	ldr	r2, [r4, #44]	; 0x2c
   124d8:	str	r8, [r2, r3, lsl #2]
   124dc:	ldr	r3, [r4, #32]
   124e0:	add	r3, r3, #1
   124e4:	str	r3, [r4, #32]
   124e8:	ldrd	r4, [sp]
   124ec:	ldrd	r6, [sp, #8]
   124f0:	ldr	r8, [sp, #16]
   124f4:	add	sp, sp, #20
   124f8:	pop	{pc}		; (ldr pc, [sp], #4)
   124fc:	ldr	r3, [r0, #52]	; 0x34
   12500:	add	r1, r1, r3
   12504:	str	r1, [r0, #52]	; 0x34
   12508:	lsl	r1, r1, #2
   1250c:	ldr	r0, [r0, #36]	; 0x24
   12510:	bl	11ab4 <realloc@plt>
   12514:	str	r0, [r4, #36]	; 0x24
   12518:	ldr	r1, [r4, #52]	; 0x34
   1251c:	lsl	r1, r1, #2
   12520:	ldr	r0, [r4, #40]	; 0x28
   12524:	bl	11ab4 <realloc@plt>
   12528:	str	r0, [r4, #40]	; 0x28
   1252c:	ldr	r1, [r4, #52]	; 0x34
   12530:	lsl	r1, r1, #2
   12534:	ldr	r0, [r4, #44]	; 0x2c
   12538:	bl	11ab4 <realloc@plt>
   1253c:	str	r0, [r4, #44]	; 0x2c
   12540:	b	124c0 <table_register_callback@@Base+0x98>

00012544 <table_unregister_callback@@Base>:
   12544:	strd	r4, [sp, #-16]!
   12548:	str	r6, [sp, #8]
   1254c:	str	lr, [sp, #12]
   12550:	ldr	lr, [r0, #32]
   12554:	cmp	lr, #0
   12558:	ble	12604 <table_unregister_callback@@Base+0xc0>
   1255c:	ldr	r4, [r0, #36]	; 0x24
   12560:	sub	r4, r4, #4
   12564:	mov	r3, #0
   12568:	b	12578 <table_unregister_callback@@Base+0x34>
   1256c:	add	r3, r3, #1
   12570:	cmp	r3, lr
   12574:	beq	12604 <table_unregister_callback@@Base+0xc0>
   12578:	ldr	r5, [r4, #4]!
   1257c:	cmp	r1, r5
   12580:	bne	1256c <table_unregister_callback@@Base+0x28>
   12584:	ldr	r5, [r0, #40]	; 0x28
   12588:	ldr	r5, [r5, r3, lsl #2]
   1258c:	cmp	r2, r5
   12590:	bne	1256c <table_unregister_callback@@Base+0x28>
   12594:	cmn	r3, #1
   12598:	beq	12604 <table_unregister_callback@@Base+0xc0>
   1259c:	sub	r1, lr, #1
   125a0:	cmp	r1, r3
   125a4:	ble	125ec <table_unregister_callback@@Base+0xa8>
   125a8:	add	r2, r3, #1
   125ac:	lsl	r2, r2, #2
   125b0:	ldr	r1, [r0, #36]	; 0x24
   125b4:	ldr	ip, [r1, r2]
   125b8:	str	ip, [r1, r3, lsl #2]
   125bc:	ldr	r1, [r0, #40]	; 0x28
   125c0:	ldr	ip, [r1, r2]
   125c4:	str	ip, [r1, r3, lsl #2]
   125c8:	ldr	r1, [r0, #44]	; 0x2c
   125cc:	ldr	ip, [r1, r2]
   125d0:	str	ip, [r1, r3, lsl #2]
   125d4:	add	r3, r3, #1
   125d8:	ldr	r1, [r0, #32]
   125dc:	sub	r1, r1, #1
   125e0:	add	r2, r2, #4
   125e4:	cmp	r1, r3
   125e8:	bgt	125b0 <table_unregister_callback@@Base+0x6c>
   125ec:	str	r1, [r0, #32]
   125f0:	ldr	r2, [r0, #48]	; 0x30
   125f4:	udiv	r3, r1, r2
   125f8:	mls	r1, r2, r3, r1
   125fc:	cmp	r1, #0
   12600:	beq	12614 <table_unregister_callback@@Base+0xd0>
   12604:	ldrd	r4, [sp]
   12608:	ldr	r6, [sp, #8]
   1260c:	add	sp, sp, #12
   12610:	pop	{pc}		; (ldr pc, [sp], #4)
   12614:	mov	r4, r0
   12618:	ldr	r1, [r0, #52]	; 0x34
   1261c:	sub	r1, r1, r2
   12620:	str	r1, [r0, #52]	; 0x34
   12624:	cmp	r1, #0
   12628:	beq	12668 <table_unregister_callback@@Base+0x124>
   1262c:	lsl	r1, r1, #2
   12630:	ldr	r0, [r0, #36]	; 0x24
   12634:	bl	11ab4 <realloc@plt>
   12638:	str	r0, [r4, #36]	; 0x24
   1263c:	ldr	r1, [r4, #52]	; 0x34
   12640:	lsl	r1, r1, #2
   12644:	ldr	r0, [r4, #40]	; 0x28
   12648:	bl	11ab4 <realloc@plt>
   1264c:	str	r0, [r4, #40]	; 0x28
   12650:	ldr	r1, [r4, #52]	; 0x34
   12654:	lsl	r1, r1, #2
   12658:	ldr	r0, [r4, #44]	; 0x2c
   1265c:	bl	11ab4 <realloc@plt>
   12660:	str	r0, [r4, #44]	; 0x2c
   12664:	b	12604 <table_unregister_callback@@Base+0xc0>
   12668:	ldr	r0, [r0, #36]	; 0x24
   1266c:	bl	11a9c <free@plt>
   12670:	ldr	r0, [r4, #40]	; 0x28
   12674:	bl	11a9c <free@plt>
   12678:	ldr	r0, [r4, #44]	; 0x2c
   1267c:	bl	11a9c <free@plt>
   12680:	mov	r3, #0
   12684:	str	r3, [r4, #36]	; 0x24
   12688:	str	r3, [r4, #40]	; 0x28
   1268c:	str	r3, [r4, #44]	; 0x2c
   12690:	b	12604 <table_unregister_callback@@Base+0xc0>

00012694 <table_notify@@Base>:
   12694:	ldr	ip, [r0, #32]
   12698:	cmp	ip, #0
   1269c:	bxle	lr
   126a0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   126a4:	strd	r6, [sp, #8]
   126a8:	strd	r8, [sp, #16]
   126ac:	str	lr, [sp, #24]
   126b0:	sub	sp, sp, #12
   126b4:	mov	r6, r3
   126b8:	mov	r8, r2
   126bc:	mov	r7, r1
   126c0:	mov	r5, r0
   126c4:	mov	r4, #0
   126c8:	b	126dc <table_notify@@Base+0x48>
   126cc:	add	r4, r4, #1
   126d0:	ldr	r0, [r5, #32]
   126d4:	cmp	r0, r4
   126d8:	ble	12718 <table_notify@@Base+0x84>
   126dc:	ldr	r0, [r5, #44]	; 0x2c
   126e0:	ldr	r0, [r0, r4, lsl #2]
   126e4:	tst	r6, r0
   126e8:	beq	126cc <table_notify@@Base+0x38>
   126ec:	ldr	r3, [r5, #36]	; 0x24
   126f0:	ldr	r2, [r5, #40]	; 0x28
   126f4:	ldr	r2, [r2, r4, lsl #2]
   126f8:	str	r2, [sp]
   126fc:	ldr	r9, [r3, r4, lsl #2]
   12700:	mov	r3, r6
   12704:	mov	r2, r8
   12708:	mov	r1, r7
   1270c:	mov	r0, r5
   12710:	blx	r9
   12714:	b	126cc <table_notify@@Base+0x38>
   12718:	add	sp, sp, #12
   1271c:	ldrd	r4, [sp]
   12720:	ldrd	r6, [sp, #8]
   12724:	ldrd	r8, [sp, #16]
   12728:	add	sp, sp, #24
   1272c:	pop	{pc}		; (ldr pc, [sp], #4)

00012730 <table_column_init@@Base>:
   12730:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12734:	strd	r6, [sp, #8]
   12738:	str	r8, [sp, #16]
   1273c:	str	lr, [sp, #20]
   12740:	mov	r7, r2
   12744:	mov	r8, r3
   12748:	add	r1, r1, r1, lsl #1
   1274c:	lsl	r4, r1, #2
   12750:	ldr	r6, [r0]
   12754:	add	r5, r6, r4
   12758:	mov	r0, r2
   1275c:	bl	11af0 <strlen@plt>
   12760:	add	r0, r0, #1
   12764:	bl	11acc <malloc@plt>
   12768:	str	r0, [r6, r4]
   1276c:	cmp	r0, #0
   12770:	beq	1277c <table_column_init@@Base+0x4c>
   12774:	mov	r1, r7
   12778:	bl	11ac0 <strcpy@plt>
   1277c:	str	r8, [r5, #4]
   12780:	ldr	r3, [sp, #24]
   12784:	str	r3, [r5, #8]
   12788:	ldrd	r4, [sp]
   1278c:	ldrd	r6, [sp, #8]
   12790:	ldr	r8, [sp, #16]
   12794:	add	sp, sp, #20
   12798:	pop	{pc}		; (ldr pc, [sp], #4)

0001279c <table_column_destroy@@Base>:
   1279c:	ldr	r3, [r0]
   127a0:	add	r1, r1, r1, lsl #1
   127a4:	ldr	r0, [r3, r1, lsl #2]
   127a8:	cmp	r0, #0
   127ac:	bxeq	lr
   127b0:	str	r4, [sp, #-8]!
   127b4:	str	lr, [sp, #4]
   127b8:	bl	11a9c <free@plt>
   127bc:	ldr	r4, [sp]
   127c0:	add	sp, sp, #4
   127c4:	pop	{pc}		; (ldr pc, [sp], #4)

000127c8 <table_get_column_length@@Base>:
   127c8:	ldr	r0, [r0, #4]
   127cc:	bx	lr

000127d0 <table_get_column@@Base>:
   127d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   127d4:	strd	r6, [sp, #8]
   127d8:	str	r8, [sp, #16]
   127dc:	str	lr, [sp, #20]
   127e0:	ldr	r7, [r0, #4]
   127e4:	cmp	r7, #0
   127e8:	ble	12824 <table_get_column@@Base+0x54>
   127ec:	mov	r6, r1
   127f0:	ldr	r5, [r0]
   127f4:	mov	r4, #0
   127f8:	mov	r1, r6
   127fc:	ldr	r0, [r5]
   12800:	bl	11a90 <strcmp@plt>
   12804:	cmp	r0, #0
   12808:	beq	12828 <table_get_column@@Base+0x58>
   1280c:	add	r4, r4, #1
   12810:	add	r5, r5, #12
   12814:	cmp	r4, r7
   12818:	bne	127f8 <table_get_column@@Base+0x28>
   1281c:	mvn	r4, #0
   12820:	b	12830 <table_get_column@@Base+0x60>
   12824:	mov	r4, #0
   12828:	cmp	r4, r7
   1282c:	mvneq	r4, #0
   12830:	mov	r0, r4
   12834:	ldrd	r4, [sp]
   12838:	ldrd	r6, [sp, #8]
   1283c:	ldr	r8, [sp, #16]
   12840:	add	sp, sp, #20
   12844:	pop	{pc}		; (ldr pc, [sp], #4)

00012848 <table_get_column_data_type@@Base>:
   12848:	ldr	r3, [r0]
   1284c:	add	r1, r1, r1, lsl #1
   12850:	add	r3, r3, r1, lsl #2
   12854:	ldr	r0, [r3, #4]
   12858:	bx	lr

0001285c <table_add_column@@Base>:
   1285c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12860:	strd	r6, [sp, #8]
   12864:	strd	r8, [sp, #16]
   12868:	str	lr, [sp, #24]
   1286c:	sub	sp, sp, #12
   12870:	mov	r4, r0
   12874:	mov	r7, r1
   12878:	mov	r6, r2
   1287c:	ldr	r1, [r0, #8]
   12880:	ldr	r2, [r0, #4]
   12884:	udiv	r3, r2, r1
   12888:	mls	r3, r1, r3, r2
   1288c:	cmp	r3, #0
   12890:	beq	12924 <table_add_column@@Base+0xc8>
   12894:	mov	r0, r4
   12898:	bl	137cc <table_get_row_length@@Base>
   1289c:	mov	r8, r0
   128a0:	ldr	r9, [r4, #4]
   128a4:	mov	r0, r6
   128a8:	bl	132e4 <table_get_default_compare_function_for_data_type@@Base>
   128ac:	str	r0, [sp]
   128b0:	mov	r3, r6
   128b4:	mov	r2, r7
   128b8:	mov	r1, r9
   128bc:	mov	r0, r4
   128c0:	bl	12730 <table_column_init@@Base>
   128c4:	cmp	r8, #0
   128c8:	ble	128ec <table_add_column@@Base+0x90>
   128cc:	mov	r5, #0
   128d0:	mov	r2, r9
   128d4:	mov	r1, r5
   128d8:	mov	r0, r4
   128dc:	bl	1500c <table_cell_init@@Base>
   128e0:	add	r5, r5, #1
   128e4:	cmp	r8, r5
   128e8:	bne	128d0 <table_add_column@@Base+0x74>
   128ec:	mov	r3, #8
   128f0:	ldr	r2, [r4, #4]
   128f4:	mvn	r1, #0
   128f8:	mov	r0, r4
   128fc:	bl	12694 <table_notify@@Base>
   12900:	ldr	r0, [r4, #4]
   12904:	add	r3, r0, #1
   12908:	str	r3, [r4, #4]
   1290c:	add	sp, sp, #12
   12910:	ldrd	r4, [sp]
   12914:	ldrd	r6, [sp, #8]
   12918:	ldrd	r8, [sp, #16]
   1291c:	add	sp, sp, #24
   12920:	pop	{pc}		; (ldr pc, [sp], #4)
   12924:	ldr	r3, [r0, #12]
   12928:	add	r1, r1, r3
   1292c:	str	r1, [r0, #12]
   12930:	add	r1, r1, r1, lsl #1
   12934:	lsl	r1, r1, #2
   12938:	ldr	r0, [r0]
   1293c:	bl	11ab4 <realloc@plt>
   12940:	str	r0, [r4]
   12944:	mov	r0, r4
   12948:	bl	137cc <table_get_row_length@@Base>
   1294c:	subs	r9, r0, #0
   12950:	ble	12894 <table_add_column@@Base+0x38>
   12954:	mov	r5, #0
   12958:	mov	r1, r5
   1295c:	mov	r0, r4
   12960:	bl	139c4 <table_get_row_ptr@@Base>
   12964:	mov	r8, r0
   12968:	ldr	r1, [r4, #12]
   1296c:	lsl	r1, r1, #2
   12970:	ldr	r0, [r0]
   12974:	bl	11ab4 <realloc@plt>
   12978:	str	r0, [r8]
   1297c:	add	r5, r5, #1
   12980:	cmp	r9, r5
   12984:	bne	12958 <table_add_column@@Base+0xfc>
   12988:	b	12894 <table_add_column@@Base+0x38>

0001298c <table_remove_column@@Base>:
   1298c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12990:	strd	r6, [sp, #8]
   12994:	strd	r8, [sp, #16]
   12998:	str	sl, [sp, #24]
   1299c:	str	lr, [sp, #28]
   129a0:	mov	r4, r0
   129a4:	mov	r5, r1
   129a8:	bl	1279c <table_column_destroy@@Base>
   129ac:	ldr	r6, [r4, #4]
   129b0:	sub	r7, r6, #1
   129b4:	cmp	r5, r7
   129b8:	bge	12a00 <table_remove_column@@Base+0x74>
   129bc:	add	r2, r5, r5, lsl #1
   129c0:	lsl	r2, r2, #2
   129c4:	mov	r8, r7
   129c8:	mov	r0, r5
   129cc:	ldr	r3, [r4]
   129d0:	add	r1, r3, r2
   129d4:	add	r2, r2, #12
   129d8:	add	r3, r3, r2
   129dc:	ldr	lr, [r3]
   129e0:	ldr	ip, [r3, #4]
   129e4:	ldr	r3, [r3, #8]
   129e8:	str	lr, [r1]
   129ec:	str	ip, [r1, #4]
   129f0:	str	r3, [r1, #8]
   129f4:	add	r0, r0, #1
   129f8:	cmp	r8, r0
   129fc:	bne	129cc <table_remove_column@@Base+0x40>
   12a00:	mov	r0, r4
   12a04:	bl	137cc <table_get_row_length@@Base>
   12a08:	subs	r9, r0, #0
   12a0c:	ble	12a7c <table_remove_column@@Base+0xf0>
   12a10:	lsl	sl, r5, #2
   12a14:	mov	r8, #0
   12a18:	sub	r6, r6, #1
   12a1c:	b	12a2c <table_remove_column@@Base+0xa0>
   12a20:	add	r8, r8, #1
   12a24:	cmp	r9, r8
   12a28:	beq	12a7c <table_remove_column@@Base+0xf0>
   12a2c:	mov	r2, r5
   12a30:	mov	r1, r8
   12a34:	mov	r0, r4
   12a38:	bl	1502c <table_cell_destroy@@Base>
   12a3c:	mov	r1, r8
   12a40:	mov	r0, r4
   12a44:	bl	139c4 <table_get_row_ptr@@Base>
   12a48:	cmp	r5, r7
   12a4c:	bge	12a20 <table_remove_column@@Base+0x94>
   12a50:	mov	r3, sl
   12a54:	mov	r2, r5
   12a58:	ldr	r1, [r0]
   12a5c:	add	ip, r1, r3
   12a60:	add	r3, r3, #4
   12a64:	ldr	r1, [r1, r3]
   12a68:	str	r1, [ip]
   12a6c:	add	r2, r2, #1
   12a70:	cmp	r6, r2
   12a74:	bne	12a58 <table_remove_column@@Base+0xcc>
   12a78:	b	12a20 <table_remove_column@@Base+0x94>
   12a7c:	ldr	r3, [r4, #4]
   12a80:	sub	r3, r3, #1
   12a84:	str	r3, [r4, #4]
   12a88:	ldr	r1, [r4, #8]
   12a8c:	udiv	r2, r3, r1
   12a90:	mls	r3, r1, r2, r3
   12a94:	cmp	r3, #0
   12a98:	beq	12acc <table_remove_column@@Base+0x140>
   12a9c:	mov	r3, #16
   12aa0:	mov	r2, r5
   12aa4:	mvn	r1, #0
   12aa8:	mov	r0, r4
   12aac:	bl	12694 <table_notify@@Base>
   12ab0:	mov	r0, #0
   12ab4:	ldrd	r4, [sp]
   12ab8:	ldrd	r6, [sp, #8]
   12abc:	ldrd	r8, [sp, #16]
   12ac0:	ldr	sl, [sp, #24]
   12ac4:	add	sp, sp, #28
   12ac8:	pop	{pc}		; (ldr pc, [sp], #4)
   12acc:	ldr	r3, [r4, #12]
   12ad0:	sub	r1, r3, r1
   12ad4:	str	r1, [r4, #12]
   12ad8:	add	r1, r1, r1, lsl #1
   12adc:	lsl	r1, r1, #2
   12ae0:	ldr	r0, [r4]
   12ae4:	bl	11ab4 <realloc@plt>
   12ae8:	str	r0, [r4]
   12aec:	mov	r0, r4
   12af0:	bl	137cc <table_get_row_length@@Base>
   12af4:	subs	r8, r0, #0
   12af8:	ble	12a9c <table_remove_column@@Base+0x110>
   12afc:	mov	r6, #0
   12b00:	mov	r1, r6
   12b04:	mov	r0, r4
   12b08:	bl	139c4 <table_get_row_ptr@@Base>
   12b0c:	mov	r7, r0
   12b10:	ldr	r1, [r4, #12]
   12b14:	lsl	r1, r1, #2
   12b18:	ldr	r0, [r0]
   12b1c:	bl	11ab4 <realloc@plt>
   12b20:	str	r0, [r7]
   12b24:	add	r6, r6, #1
   12b28:	cmp	r8, r6
   12b2c:	bne	12b00 <table_remove_column@@Base+0x174>
   12b30:	b	12a9c <table_remove_column@@Base+0x110>

00012b34 <table_get_column_name@@Base>:
   12b34:	ldr	r3, [r0]
   12b38:	add	r1, r1, r1, lsl #1
   12b3c:	ldr	r0, [r3, r1, lsl #2]
   12b40:	bx	lr

00012b44 <table_get_col_ptr@@Base>:
   12b44:	add	r1, r1, r1, lsl #1
   12b48:	ldr	r0, [r0]
   12b4c:	add	r0, r0, r1, lsl #2
   12b50:	bx	lr

00012b54 <table_get_column_compare_function@@Base>:
   12b54:	ldr	r3, [r0]
   12b58:	add	r1, r1, r1, lsl #1
   12b5c:	add	r3, r3, r1, lsl #2
   12b60:	ldr	r0, [r3, #8]
   12b64:	bx	lr

00012b68 <table_set_column_compare_function@@Base>:
   12b68:	ldr	r3, [r0]
   12b6c:	add	r1, r1, r1, lsl #1
   12b70:	add	r3, r3, r1, lsl #2
   12b74:	str	r2, [r3, #8]
   12b78:	bx	lr

00012b7c <table_compare_bool@@Base>:
   12b7c:	cmp	r0, #0
   12b80:	beq	12bac <table_compare_bool@@Base+0x30>
   12b84:	cmp	r1, #0
   12b88:	beq	12bbc <table_compare_bool@@Base+0x40>
   12b8c:	ldrb	r0, [r0]
   12b90:	ldrb	r1, [r1]
   12b94:	cmp	r0, r1
   12b98:	bhi	12bc4 <table_compare_bool@@Base+0x48>
   12b9c:	cmp	r0, r1
   12ba0:	movcs	r0, #0
   12ba4:	mvncc	r0, #0
   12ba8:	bx	lr
   12bac:	adds	r0, r1, #0
   12bb0:	movne	r0, #1
   12bb4:	rsb	r0, r0, #0
   12bb8:	bx	lr
   12bbc:	mov	r0, #1
   12bc0:	bx	lr
   12bc4:	mov	r0, #1
   12bc8:	bx	lr

00012bcc <table_compare_int@@Base>:
   12bcc:	cmp	r0, #0
   12bd0:	beq	12bfc <table_compare_int@@Base+0x30>
   12bd4:	cmp	r1, #0
   12bd8:	beq	12c0c <table_compare_int@@Base+0x40>
   12bdc:	ldr	r0, [r0]
   12be0:	ldr	r1, [r1]
   12be4:	cmp	r0, r1
   12be8:	bgt	12c14 <table_compare_int@@Base+0x48>
   12bec:	cmp	r0, r1
   12bf0:	movge	r0, #0
   12bf4:	mvnlt	r0, #0
   12bf8:	bx	lr
   12bfc:	adds	r0, r1, #0
   12c00:	movne	r0, #1
   12c04:	rsb	r0, r0, #0
   12c08:	bx	lr
   12c0c:	mov	r0, #1
   12c10:	bx	lr
   12c14:	mov	r0, #1
   12c18:	bx	lr

00012c1c <table_compare_uint@@Base>:
   12c1c:	cmp	r0, #0
   12c20:	beq	12c4c <table_compare_uint@@Base+0x30>
   12c24:	cmp	r1, #0
   12c28:	beq	12c5c <table_compare_uint@@Base+0x40>
   12c2c:	ldr	r0, [r0]
   12c30:	ldr	r1, [r1]
   12c34:	cmp	r0, r1
   12c38:	bhi	12c64 <table_compare_uint@@Base+0x48>
   12c3c:	cmp	r0, r1
   12c40:	movcs	r0, #0
   12c44:	mvncc	r0, #0
   12c48:	bx	lr
   12c4c:	adds	r0, r1, #0
   12c50:	movne	r0, #1
   12c54:	rsb	r0, r0, #0
   12c58:	bx	lr
   12c5c:	mov	r0, #1
   12c60:	bx	lr
   12c64:	mov	r0, #1
   12c68:	bx	lr

00012c6c <table_compare_int8@@Base>:
   12c6c:	cmp	r0, #0
   12c70:	beq	12c9c <table_compare_int8@@Base+0x30>
   12c74:	cmp	r1, #0
   12c78:	beq	12cac <table_compare_int8@@Base+0x40>
   12c7c:	ldrsb	r0, [r0]
   12c80:	ldrsb	r1, [r1]
   12c84:	cmp	r0, r1
   12c88:	bgt	12cb4 <table_compare_int8@@Base+0x48>
   12c8c:	cmp	r0, r1
   12c90:	movge	r0, #0
   12c94:	mvnlt	r0, #0
   12c98:	bx	lr
   12c9c:	adds	r0, r1, #0
   12ca0:	movne	r0, #1
   12ca4:	rsb	r0, r0, #0
   12ca8:	bx	lr
   12cac:	mov	r0, #1
   12cb0:	bx	lr
   12cb4:	mov	r0, #1
   12cb8:	bx	lr

00012cbc <table_compare_uint8@@Base>:
   12cbc:	cmp	r0, #0
   12cc0:	beq	12cec <table_compare_uint8@@Base+0x30>
   12cc4:	cmp	r1, #0
   12cc8:	beq	12cfc <table_compare_uint8@@Base+0x40>
   12ccc:	ldrb	r0, [r0]
   12cd0:	ldrb	r1, [r1]
   12cd4:	cmp	r0, r1
   12cd8:	bhi	12d04 <table_compare_uint8@@Base+0x48>
   12cdc:	cmp	r0, r1
   12ce0:	movcs	r0, #0
   12ce4:	mvncc	r0, #0
   12ce8:	bx	lr
   12cec:	adds	r0, r1, #0
   12cf0:	movne	r0, #1
   12cf4:	rsb	r0, r0, #0
   12cf8:	bx	lr
   12cfc:	mov	r0, #1
   12d00:	bx	lr
   12d04:	mov	r0, #1
   12d08:	bx	lr

00012d0c <table_compare_int16@@Base>:
   12d0c:	cmp	r0, #0
   12d10:	beq	12d3c <table_compare_int16@@Base+0x30>
   12d14:	cmp	r1, #0
   12d18:	beq	12d4c <table_compare_int16@@Base+0x40>
   12d1c:	ldrsh	r0, [r0]
   12d20:	ldrsh	r1, [r1]
   12d24:	cmp	r0, r1
   12d28:	bgt	12d54 <table_compare_int16@@Base+0x48>
   12d2c:	cmp	r0, r1
   12d30:	movge	r0, #0
   12d34:	mvnlt	r0, #0
   12d38:	bx	lr
   12d3c:	adds	r0, r1, #0
   12d40:	movne	r0, #1
   12d44:	rsb	r0, r0, #0
   12d48:	bx	lr
   12d4c:	mov	r0, #1
   12d50:	bx	lr
   12d54:	mov	r0, #1
   12d58:	bx	lr

00012d5c <table_compare_uint16@@Base>:
   12d5c:	cmp	r0, #0
   12d60:	beq	12d8c <table_compare_uint16@@Base+0x30>
   12d64:	cmp	r1, #0
   12d68:	beq	12d9c <table_compare_uint16@@Base+0x40>
   12d6c:	ldrh	r0, [r0]
   12d70:	ldrh	r1, [r1]
   12d74:	cmp	r0, r1
   12d78:	bhi	12da4 <table_compare_uint16@@Base+0x48>
   12d7c:	cmp	r0, r1
   12d80:	movcs	r0, #0
   12d84:	mvncc	r0, #0
   12d88:	bx	lr
   12d8c:	adds	r0, r1, #0
   12d90:	movne	r0, #1
   12d94:	rsb	r0, r0, #0
   12d98:	bx	lr
   12d9c:	mov	r0, #1
   12da0:	bx	lr
   12da4:	mov	r0, #1
   12da8:	bx	lr

00012dac <table_compare_int32@@Base>:
   12dac:	cmp	r0, #0
   12db0:	beq	12ddc <table_compare_int32@@Base+0x30>
   12db4:	cmp	r1, #0
   12db8:	beq	12dec <table_compare_int32@@Base+0x40>
   12dbc:	ldr	r0, [r0]
   12dc0:	ldr	r1, [r1]
   12dc4:	cmp	r0, r1
   12dc8:	bgt	12df4 <table_compare_int32@@Base+0x48>
   12dcc:	cmp	r0, r1
   12dd0:	movge	r0, #0
   12dd4:	mvnlt	r0, #0
   12dd8:	bx	lr
   12ddc:	adds	r0, r1, #0
   12de0:	movne	r0, #1
   12de4:	rsb	r0, r0, #0
   12de8:	bx	lr
   12dec:	mov	r0, #1
   12df0:	bx	lr
   12df4:	mov	r0, #1
   12df8:	bx	lr

00012dfc <table_compare_uint32@@Base>:
   12dfc:	cmp	r0, #0
   12e00:	beq	12e2c <table_compare_uint32@@Base+0x30>
   12e04:	cmp	r1, #0
   12e08:	beq	12e3c <table_compare_uint32@@Base+0x40>
   12e0c:	ldr	r0, [r0]
   12e10:	ldr	r1, [r1]
   12e14:	cmp	r0, r1
   12e18:	bhi	12e44 <table_compare_uint32@@Base+0x48>
   12e1c:	cmp	r0, r1
   12e20:	movcs	r0, #0
   12e24:	mvncc	r0, #0
   12e28:	bx	lr
   12e2c:	adds	r0, r1, #0
   12e30:	movne	r0, #1
   12e34:	rsb	r0, r0, #0
   12e38:	bx	lr
   12e3c:	mov	r0, #1
   12e40:	bx	lr
   12e44:	mov	r0, #1
   12e48:	bx	lr

00012e4c <table_compare_int64@@Base>:
   12e4c:	cmp	r0, #0
   12e50:	beq	12e94 <table_compare_int64@@Base+0x48>
   12e54:	cmp	r1, #0
   12e58:	beq	12ea4 <table_compare_int64@@Base+0x58>
   12e5c:	strd	r4, [sp, #-8]!
   12e60:	ldrd	r4, [r0]
   12e64:	ldrd	r2, [r1]
   12e68:	cmp	r2, r4
   12e6c:	sbcs	r1, r3, r5
   12e70:	movlt	r0, #1
   12e74:	blt	12e88 <table_compare_int64@@Base+0x3c>
   12e78:	cmp	r4, r2
   12e7c:	sbcs	r3, r5, r3
   12e80:	mvnlt	r0, #0
   12e84:	movge	r0, #0
   12e88:	ldrd	r4, [sp]
   12e8c:	add	sp, sp, #8
   12e90:	bx	lr
   12e94:	adds	r1, r1, #0
   12e98:	movne	r1, #1
   12e9c:	rsb	r0, r1, #0
   12ea0:	bx	lr
   12ea4:	mov	r0, #1
   12ea8:	bx	lr

00012eac <table_compare_uint64@@Base>:
   12eac:	cmp	r0, #0
   12eb0:	beq	12eec <table_compare_uint64@@Base+0x40>
   12eb4:	cmp	r1, #0
   12eb8:	beq	12efc <table_compare_uint64@@Base+0x50>
   12ebc:	strd	r4, [sp, #-8]!
   12ec0:	ldrd	r4, [r0]
   12ec4:	ldrd	r2, [r1]
   12ec8:	cmp	r5, r3
   12ecc:	cmpeq	r4, r2
   12ed0:	movhi	r0, #1
   12ed4:	bhi	12ee0 <table_compare_uint64@@Base+0x34>
   12ed8:	mvncc	r0, #0
   12edc:	movcs	r0, #0
   12ee0:	ldrd	r4, [sp]
   12ee4:	add	sp, sp, #8
   12ee8:	bx	lr
   12eec:	adds	r1, r1, #0
   12ef0:	movne	r1, #1
   12ef4:	rsb	r0, r1, #0
   12ef8:	bx	lr
   12efc:	mov	r0, #1
   12f00:	bx	lr

00012f04 <table_compare_short@@Base>:
   12f04:	cmp	r0, #0
   12f08:	beq	12f34 <table_compare_short@@Base+0x30>
   12f0c:	cmp	r1, #0
   12f10:	beq	12f44 <table_compare_short@@Base+0x40>
   12f14:	ldrsh	r0, [r0]
   12f18:	ldrsh	r1, [r1]
   12f1c:	cmp	r0, r1
   12f20:	bgt	12f4c <table_compare_short@@Base+0x48>
   12f24:	cmp	r0, r1
   12f28:	movge	r0, #0
   12f2c:	mvnlt	r0, #0
   12f30:	bx	lr
   12f34:	adds	r0, r1, #0
   12f38:	movne	r0, #1
   12f3c:	rsb	r0, r0, #0
   12f40:	bx	lr
   12f44:	mov	r0, #1
   12f48:	bx	lr
   12f4c:	mov	r0, #1
   12f50:	bx	lr

00012f54 <table_compare_ushort@@Base>:
   12f54:	cmp	r0, #0
   12f58:	beq	12f84 <table_compare_ushort@@Base+0x30>
   12f5c:	cmp	r1, #0
   12f60:	beq	12f94 <table_compare_ushort@@Base+0x40>
   12f64:	ldrh	r0, [r0]
   12f68:	ldrh	r1, [r1]
   12f6c:	cmp	r0, r1
   12f70:	bhi	12f9c <table_compare_ushort@@Base+0x48>
   12f74:	cmp	r0, r1
   12f78:	movcs	r0, #0
   12f7c:	mvncc	r0, #0
   12f80:	bx	lr
   12f84:	adds	r0, r1, #0
   12f88:	movne	r0, #1
   12f8c:	rsb	r0, r0, #0
   12f90:	bx	lr
   12f94:	mov	r0, #1
   12f98:	bx	lr
   12f9c:	mov	r0, #1
   12fa0:	bx	lr

00012fa4 <table_compare_long@@Base>:
   12fa4:	cmp	r0, #0
   12fa8:	beq	12fd4 <table_compare_long@@Base+0x30>
   12fac:	cmp	r1, #0
   12fb0:	beq	12fe4 <table_compare_long@@Base+0x40>
   12fb4:	ldr	r0, [r0]
   12fb8:	ldr	r1, [r1]
   12fbc:	cmp	r0, r1
   12fc0:	bgt	12fec <table_compare_long@@Base+0x48>
   12fc4:	cmp	r0, r1
   12fc8:	movge	r0, #0
   12fcc:	mvnlt	r0, #0
   12fd0:	bx	lr
   12fd4:	adds	r0, r1, #0
   12fd8:	movne	r0, #1
   12fdc:	rsb	r0, r0, #0
   12fe0:	bx	lr
   12fe4:	mov	r0, #1
   12fe8:	bx	lr
   12fec:	mov	r0, #1
   12ff0:	bx	lr

00012ff4 <table_compare_ulong@@Base>:
   12ff4:	cmp	r0, #0
   12ff8:	beq	13024 <table_compare_ulong@@Base+0x30>
   12ffc:	cmp	r1, #0
   13000:	beq	13034 <table_compare_ulong@@Base+0x40>
   13004:	ldr	r0, [r0]
   13008:	ldr	r1, [r1]
   1300c:	cmp	r0, r1
   13010:	bhi	1303c <table_compare_ulong@@Base+0x48>
   13014:	cmp	r0, r1
   13018:	movcs	r0, #0
   1301c:	mvncc	r0, #0
   13020:	bx	lr
   13024:	adds	r0, r1, #0
   13028:	movne	r0, #1
   1302c:	rsb	r0, r0, #0
   13030:	bx	lr
   13034:	mov	r0, #1
   13038:	bx	lr
   1303c:	mov	r0, #1
   13040:	bx	lr

00013044 <table_compare_llong@@Base>:
   13044:	cmp	r0, #0
   13048:	beq	1308c <table_compare_llong@@Base+0x48>
   1304c:	cmp	r1, #0
   13050:	beq	1309c <table_compare_llong@@Base+0x58>
   13054:	strd	r4, [sp, #-8]!
   13058:	ldrd	r4, [r0]
   1305c:	ldrd	r2, [r1]
   13060:	cmp	r2, r4
   13064:	sbcs	r1, r3, r5
   13068:	movlt	r0, #1
   1306c:	blt	13080 <table_compare_llong@@Base+0x3c>
   13070:	cmp	r4, r2
   13074:	sbcs	r3, r5, r3
   13078:	mvnlt	r0, #0
   1307c:	movge	r0, #0
   13080:	ldrd	r4, [sp]
   13084:	add	sp, sp, #8
   13088:	bx	lr
   1308c:	adds	r1, r1, #0
   13090:	movne	r1, #1
   13094:	rsb	r0, r1, #0
   13098:	bx	lr
   1309c:	mov	r0, #1
   130a0:	bx	lr

000130a4 <table_compare_ullong@@Base>:
   130a4:	cmp	r0, #0
   130a8:	beq	130d4 <table_compare_ullong@@Base+0x30>
   130ac:	cmp	r1, #0
   130b0:	beq	130e4 <table_compare_ullong@@Base+0x40>
   130b4:	ldr	r0, [r0]
   130b8:	ldr	r1, [r1]
   130bc:	cmp	r0, r1
   130c0:	bhi	130ec <table_compare_ullong@@Base+0x48>
   130c4:	cmp	r0, r1
   130c8:	movcs	r0, #0
   130cc:	mvncc	r0, #0
   130d0:	bx	lr
   130d4:	adds	r0, r1, #0
   130d8:	movne	r0, #1
   130dc:	rsb	r0, r0, #0
   130e0:	bx	lr
   130e4:	mov	r0, #1
   130e8:	bx	lr
   130ec:	mov	r0, #1
   130f0:	bx	lr

000130f4 <table_compare_float@@Base>:
   130f4:	cmp	r0, #0
   130f8:	beq	13124 <table_compare_float@@Base+0x30>
   130fc:	cmp	r1, #0
   13100:	beq	13134 <table_compare_float@@Base+0x40>
   13104:	vldr	s14, [r0]
   13108:	vldr	s15, [r1]
   1310c:	vcmpe.f32	s14, s15
   13110:	vmrs	APSR_nzcv, fpscr
   13114:	bgt	1313c <table_compare_float@@Base+0x48>
   13118:	mvnmi	r0, #0
   1311c:	movpl	r0, #0
   13120:	bx	lr
   13124:	adds	r1, r1, #0
   13128:	movne	r1, #1
   1312c:	rsb	r0, r1, #0
   13130:	bx	lr
   13134:	mov	r0, #1
   13138:	bx	lr
   1313c:	mov	r0, #1
   13140:	bx	lr

00013144 <table_compare_double@@Base>:
   13144:	cmp	r0, #0
   13148:	beq	13174 <table_compare_double@@Base+0x30>
   1314c:	cmp	r1, #0
   13150:	beq	13184 <table_compare_double@@Base+0x40>
   13154:	vldr	d6, [r0]
   13158:	vldr	d7, [r1]
   1315c:	vcmpe.f64	d6, d7
   13160:	vmrs	APSR_nzcv, fpscr
   13164:	bgt	1318c <table_compare_double@@Base+0x48>
   13168:	mvnmi	r0, #0
   1316c:	movpl	r0, #0
   13170:	bx	lr
   13174:	adds	r1, r1, #0
   13178:	movne	r1, #1
   1317c:	rsb	r0, r1, #0
   13180:	bx	lr
   13184:	mov	r0, #1
   13188:	bx	lr
   1318c:	mov	r0, #1
   13190:	bx	lr

00013194 <table_compare_ldouble@@Base>:
   13194:	cmp	r0, #0
   13198:	beq	131c4 <table_compare_ldouble@@Base+0x30>
   1319c:	cmp	r1, #0
   131a0:	beq	131d4 <table_compare_ldouble@@Base+0x40>
   131a4:	vldr	d6, [r0]
   131a8:	vldr	d7, [r1]
   131ac:	vcmpe.f64	d6, d7
   131b0:	vmrs	APSR_nzcv, fpscr
   131b4:	bgt	131dc <table_compare_ldouble@@Base+0x48>
   131b8:	mvnmi	r0, #0
   131bc:	movpl	r0, #0
   131c0:	bx	lr
   131c4:	adds	r1, r1, #0
   131c8:	movne	r1, #1
   131cc:	rsb	r0, r1, #0
   131d0:	bx	lr
   131d4:	mov	r0, #1
   131d8:	bx	lr
   131dc:	mov	r0, #1
   131e0:	bx	lr

000131e4 <table_compare_char@@Base>:
   131e4:	cmp	r0, #0
   131e8:	beq	13214 <table_compare_char@@Base+0x30>
   131ec:	cmp	r1, #0
   131f0:	beq	13224 <table_compare_char@@Base+0x40>
   131f4:	ldrb	r0, [r0]
   131f8:	ldrb	r1, [r1]
   131fc:	cmp	r0, r1
   13200:	bhi	1322c <table_compare_char@@Base+0x48>
   13204:	cmp	r0, r1
   13208:	movcs	r0, #0
   1320c:	mvncc	r0, #0
   13210:	bx	lr
   13214:	adds	r0, r1, #0
   13218:	movne	r0, #1
   1321c:	rsb	r0, r0, #0
   13220:	bx	lr
   13224:	mov	r0, #1
   13228:	bx	lr
   1322c:	mov	r0, #1
   13230:	bx	lr

00013234 <table_compare_uchar@@Base>:
   13234:	cmp	r0, #0
   13238:	beq	13264 <table_compare_uchar@@Base+0x30>
   1323c:	cmp	r1, #0
   13240:	beq	13274 <table_compare_uchar@@Base+0x40>
   13244:	ldrb	r0, [r0]
   13248:	ldrb	r1, [r1]
   1324c:	cmp	r0, r1
   13250:	bhi	1327c <table_compare_uchar@@Base+0x48>
   13254:	cmp	r0, r1
   13258:	movcs	r0, #0
   1325c:	mvncc	r0, #0
   13260:	bx	lr
   13264:	adds	r0, r1, #0
   13268:	movne	r0, #1
   1326c:	rsb	r0, r0, #0
   13270:	bx	lr
   13274:	mov	r0, #1
   13278:	bx	lr
   1327c:	mov	r0, #1
   13280:	bx	lr

00013284 <table_compare_ptr@@Base>:
   13284:	cmp	r0, r1
   13288:	bhi	1329c <table_compare_ptr@@Base+0x18>
   1328c:	cmp	r0, r1
   13290:	movcs	r0, #0
   13294:	mvncc	r0, #0
   13298:	bx	lr
   1329c:	mov	r0, #1
   132a0:	bx	lr

000132a4 <table_compare_string@@Base>:
   132a4:	cmp	r0, #0
   132a8:	beq	132cc <table_compare_string@@Base+0x28>
   132ac:	cmp	r1, #0
   132b0:	beq	132dc <table_compare_string@@Base+0x38>
   132b4:	str	r4, [sp, #-8]!
   132b8:	str	lr, [sp, #4]
   132bc:	bl	11a90 <strcmp@plt>
   132c0:	ldr	r4, [sp]
   132c4:	add	sp, sp, #4
   132c8:	pop	{pc}		; (ldr pc, [sp], #4)
   132cc:	adds	r1, r1, #0
   132d0:	movne	r1, #1
   132d4:	rsb	r0, r1, #0
   132d8:	bx	lr
   132dc:	mov	r0, #1
   132e0:	bx	lr

000132e4 <table_get_default_compare_function_for_data_type@@Base>:
   132e4:	cmp	r0, #23
   132e8:	ldrls	pc, [pc, r0, lsl #2]
   132ec:	b	13470 <table_get_default_compare_function_for_data_type@@Base+0x18c>
   132f0:	andeq	r3, r1, r0, asr r3
   132f4:	andeq	r3, r1, ip, asr r3
   132f8:	andeq	r3, r1, r8, ror #6
   132fc:	andeq	r3, r1, r4, ror r3
   13300:	andeq	r3, r1, r0, lsl #7
   13304:	andeq	r3, r1, ip, lsl #7
   13308:	muleq	r1, r8, r3
   1330c:	andeq	r3, r1, r4, lsr #7
   13310:			; <UNDEFINED> instruction: 0x000133b0
   13314:			; <UNDEFINED> instruction: 0x000133bc
   13318:	andeq	r3, r1, r8, asr #7
   1331c:	ldrdeq	r3, [r1], -r4
   13320:	andeq	r3, r1, r0, ror #7
   13324:	andeq	r3, r1, ip, ror #7
   13328:	strdeq	r3, [r1], -r8
   1332c:	andeq	r3, r1, r4, lsl #8
   13330:	andeq	r3, r1, ip, lsl r4
   13334:	andeq	r3, r1, r8, lsr #8
   13338:	andeq	r3, r1, r4, lsr r4
   1333c:	andeq	r3, r1, ip, asr #8
   13340:	andeq	r3, r1, r8, asr r4
   13344:	andeq	r3, r1, r0, lsl r4
   13348:	andeq	r3, r1, r0, asr #8
   1334c:	andeq	r3, r1, r4, ror #8
   13350:	movw	r0, #11212	; 0x2bcc
   13354:	movt	r0, #1
   13358:	bx	lr
   1335c:	movw	r0, #11292	; 0x2c1c
   13360:	movt	r0, #1
   13364:	bx	lr
   13368:	movw	r0, #11372	; 0x2c6c
   1336c:	movt	r0, #1
   13370:	bx	lr
   13374:	movw	r0, #11452	; 0x2cbc
   13378:	movt	r0, #1
   1337c:	bx	lr
   13380:	movw	r0, #11532	; 0x2d0c
   13384:	movt	r0, #1
   13388:	bx	lr
   1338c:	movw	r0, #11612	; 0x2d5c
   13390:	movt	r0, #1
   13394:	bx	lr
   13398:	movw	r0, #11692	; 0x2dac
   1339c:	movt	r0, #1
   133a0:	bx	lr
   133a4:	movw	r0, #11772	; 0x2dfc
   133a8:	movt	r0, #1
   133ac:	bx	lr
   133b0:	movw	r0, #11852	; 0x2e4c
   133b4:	movt	r0, #1
   133b8:	bx	lr
   133bc:	movw	r0, #11948	; 0x2eac
   133c0:	movt	r0, #1
   133c4:	bx	lr
   133c8:	movw	r0, #12036	; 0x2f04
   133cc:	movt	r0, #1
   133d0:	bx	lr
   133d4:	movw	r0, #12116	; 0x2f54
   133d8:	movt	r0, #1
   133dc:	bx	lr
   133e0:	movw	r0, #12196	; 0x2fa4
   133e4:	movt	r0, #1
   133e8:	bx	lr
   133ec:	movw	r0, #12276	; 0x2ff4
   133f0:	movt	r0, #1
   133f4:	bx	lr
   133f8:	movw	r0, #12356	; 0x3044
   133fc:	movt	r0, #1
   13400:	bx	lr
   13404:	movw	r0, #12452	; 0x30a4
   13408:	movt	r0, #1
   1340c:	bx	lr
   13410:	movw	r0, #12964	; 0x32a4
   13414:	movt	r0, #1
   13418:	bx	lr
   1341c:	movw	r0, #12532	; 0x30f4
   13420:	movt	r0, #1
   13424:	bx	lr
   13428:	movw	r0, #12612	; 0x3144
   1342c:	movt	r0, #1
   13430:	bx	lr
   13434:	movw	r0, #12692	; 0x3194
   13438:	movt	r0, #1
   1343c:	bx	lr
   13440:	movw	r0, #11132	; 0x2b7c
   13444:	movt	r0, #1
   13448:	bx	lr
   1344c:	movw	r0, #12772	; 0x31e4
   13450:	movt	r0, #1
   13454:	bx	lr
   13458:	movw	r0, #12852	; 0x3234
   1345c:	movt	r0, #1
   13460:	bx	lr
   13464:	movw	r0, #12932	; 0x3284
   13468:	movt	r0, #1
   1346c:	bx	lr
   13470:	mov	r0, #0
   13474:	bx	lr

00013478 <table_get@@Base>:
   13478:	str	r4, [sp, #-8]!
   1347c:	str	lr, [sp, #4]
   13480:	bl	14fe8 <table_get_cell_ptr@@Base>
   13484:	ldr	r0, [r0]
   13488:	ldr	r4, [sp]
   1348c:	add	sp, sp, #4
   13490:	pop	{pc}		; (ldr pc, [sp], #4)

00013494 <table_get_bool@@Base>:
   13494:	str	r4, [sp, #-8]!
   13498:	str	lr, [sp, #4]
   1349c:	bl	13478 <table_get@@Base>
   134a0:	ldrb	r0, [r0]
   134a4:	ldr	r4, [sp]
   134a8:	add	sp, sp, #4
   134ac:	pop	{pc}		; (ldr pc, [sp], #4)

000134b0 <table_get_int@@Base>:
   134b0:	str	r4, [sp, #-8]!
   134b4:	str	lr, [sp, #4]
   134b8:	bl	13478 <table_get@@Base>
   134bc:	ldr	r0, [r0]
   134c0:	ldr	r4, [sp]
   134c4:	add	sp, sp, #4
   134c8:	pop	{pc}		; (ldr pc, [sp], #4)

000134cc <table_get_uint@@Base>:
   134cc:	str	r4, [sp, #-8]!
   134d0:	str	lr, [sp, #4]
   134d4:	bl	13478 <table_get@@Base>
   134d8:	ldr	r0, [r0]
   134dc:	ldr	r4, [sp]
   134e0:	add	sp, sp, #4
   134e4:	pop	{pc}		; (ldr pc, [sp], #4)

000134e8 <table_get_int8@@Base>:
   134e8:	str	r4, [sp, #-8]!
   134ec:	str	lr, [sp, #4]
   134f0:	bl	13478 <table_get@@Base>
   134f4:	ldrsb	r0, [r0]
   134f8:	ldr	r4, [sp]
   134fc:	add	sp, sp, #4
   13500:	pop	{pc}		; (ldr pc, [sp], #4)

00013504 <table_get_uint8@@Base>:
   13504:	str	r4, [sp, #-8]!
   13508:	str	lr, [sp, #4]
   1350c:	bl	13478 <table_get@@Base>
   13510:	ldrb	r0, [r0]
   13514:	ldr	r4, [sp]
   13518:	add	sp, sp, #4
   1351c:	pop	{pc}		; (ldr pc, [sp], #4)

00013520 <table_get_int16@@Base>:
   13520:	str	r4, [sp, #-8]!
   13524:	str	lr, [sp, #4]
   13528:	bl	13478 <table_get@@Base>
   1352c:	ldrsh	r0, [r0]
   13530:	ldr	r4, [sp]
   13534:	add	sp, sp, #4
   13538:	pop	{pc}		; (ldr pc, [sp], #4)

0001353c <table_get_uint16@@Base>:
   1353c:	str	r4, [sp, #-8]!
   13540:	str	lr, [sp, #4]
   13544:	bl	13478 <table_get@@Base>
   13548:	ldrh	r0, [r0]
   1354c:	ldr	r4, [sp]
   13550:	add	sp, sp, #4
   13554:	pop	{pc}		; (ldr pc, [sp], #4)

00013558 <table_get_int32@@Base>:
   13558:	str	r4, [sp, #-8]!
   1355c:	str	lr, [sp, #4]
   13560:	bl	13478 <table_get@@Base>
   13564:	ldr	r0, [r0]
   13568:	ldr	r4, [sp]
   1356c:	add	sp, sp, #4
   13570:	pop	{pc}		; (ldr pc, [sp], #4)

00013574 <table_get_uint32@@Base>:
   13574:	str	r4, [sp, #-8]!
   13578:	str	lr, [sp, #4]
   1357c:	bl	13478 <table_get@@Base>
   13580:	ldr	r0, [r0]
   13584:	ldr	r4, [sp]
   13588:	add	sp, sp, #4
   1358c:	pop	{pc}		; (ldr pc, [sp], #4)

00013590 <table_get_int64@@Base>:
   13590:	str	r4, [sp, #-8]!
   13594:	str	lr, [sp, #4]
   13598:	bl	13478 <table_get@@Base>
   1359c:	ldrd	r0, [r0]
   135a0:	ldr	r4, [sp]
   135a4:	add	sp, sp, #4
   135a8:	pop	{pc}		; (ldr pc, [sp], #4)

000135ac <table_get_uint64@@Base>:
   135ac:	str	r4, [sp, #-8]!
   135b0:	str	lr, [sp, #4]
   135b4:	bl	13478 <table_get@@Base>
   135b8:	ldrd	r0, [r0]
   135bc:	ldr	r4, [sp]
   135c0:	add	sp, sp, #4
   135c4:	pop	{pc}		; (ldr pc, [sp], #4)

000135c8 <table_get_short@@Base>:
   135c8:	str	r4, [sp, #-8]!
   135cc:	str	lr, [sp, #4]
   135d0:	bl	13478 <table_get@@Base>
   135d4:	ldrsh	r0, [r0]
   135d8:	ldr	r4, [sp]
   135dc:	add	sp, sp, #4
   135e0:	pop	{pc}		; (ldr pc, [sp], #4)

000135e4 <table_get_ushort@@Base>:
   135e4:	str	r4, [sp, #-8]!
   135e8:	str	lr, [sp, #4]
   135ec:	bl	13478 <table_get@@Base>
   135f0:	ldrh	r0, [r0]
   135f4:	ldr	r4, [sp]
   135f8:	add	sp, sp, #4
   135fc:	pop	{pc}		; (ldr pc, [sp], #4)

00013600 <table_get_long@@Base>:
   13600:	str	r4, [sp, #-8]!
   13604:	str	lr, [sp, #4]
   13608:	bl	13478 <table_get@@Base>
   1360c:	ldr	r0, [r0]
   13610:	ldr	r4, [sp]
   13614:	add	sp, sp, #4
   13618:	pop	{pc}		; (ldr pc, [sp], #4)

0001361c <table_get_ulong@@Base>:
   1361c:	str	r4, [sp, #-8]!
   13620:	str	lr, [sp, #4]
   13624:	bl	13478 <table_get@@Base>
   13628:	ldr	r0, [r0]
   1362c:	ldr	r4, [sp]
   13630:	add	sp, sp, #4
   13634:	pop	{pc}		; (ldr pc, [sp], #4)

00013638 <table_get_llong@@Base>:
   13638:	str	r4, [sp, #-8]!
   1363c:	str	lr, [sp, #4]
   13640:	bl	13478 <table_get@@Base>
   13644:	ldrd	r0, [r0]
   13648:	ldr	r4, [sp]
   1364c:	add	sp, sp, #4
   13650:	pop	{pc}		; (ldr pc, [sp], #4)

00013654 <table_get_ullong@@Base>:
   13654:	str	r4, [sp, #-8]!
   13658:	str	lr, [sp, #4]
   1365c:	bl	13478 <table_get@@Base>
   13660:	ldrd	r0, [r0]
   13664:	ldr	r4, [sp]
   13668:	add	sp, sp, #4
   1366c:	pop	{pc}		; (ldr pc, [sp], #4)

00013670 <table_get_float@@Base>:
   13670:	str	r4, [sp, #-8]!
   13674:	str	lr, [sp, #4]
   13678:	bl	13478 <table_get@@Base>
   1367c:	vldr	s0, [r0]
   13680:	ldr	r4, [sp]
   13684:	add	sp, sp, #4
   13688:	pop	{pc}		; (ldr pc, [sp], #4)

0001368c <table_get_double@@Base>:
   1368c:	str	r4, [sp, #-8]!
   13690:	str	lr, [sp, #4]
   13694:	bl	13478 <table_get@@Base>
   13698:	vldr	d0, [r0]
   1369c:	ldr	r4, [sp]
   136a0:	add	sp, sp, #4
   136a4:	pop	{pc}		; (ldr pc, [sp], #4)

000136a8 <table_get_ldouble@@Base>:
   136a8:	str	r4, [sp, #-8]!
   136ac:	str	lr, [sp, #4]
   136b0:	bl	13478 <table_get@@Base>
   136b4:	vldr	d0, [r0]
   136b8:	ldr	r4, [sp]
   136bc:	add	sp, sp, #4
   136c0:	pop	{pc}		; (ldr pc, [sp], #4)

000136c4 <table_get_char@@Base>:
   136c4:	str	r4, [sp, #-8]!
   136c8:	str	lr, [sp, #4]
   136cc:	bl	13478 <table_get@@Base>
   136d0:	ldrb	r0, [r0]
   136d4:	ldr	r4, [sp]
   136d8:	add	sp, sp, #4
   136dc:	pop	{pc}		; (ldr pc, [sp], #4)

000136e0 <table_get_uchar@@Base>:
   136e0:	str	r4, [sp, #-8]!
   136e4:	str	lr, [sp, #4]
   136e8:	bl	13478 <table_get@@Base>
   136ec:	ldrb	r0, [r0]
   136f0:	ldr	r4, [sp]
   136f4:	add	sp, sp, #4
   136f8:	pop	{pc}		; (ldr pc, [sp], #4)

000136fc <table_get_string@@Base>:
   136fc:	str	r4, [sp, #-8]!
   13700:	str	lr, [sp, #4]
   13704:	bl	13478 <table_get@@Base>
   13708:	ldr	r4, [sp]
   1370c:	add	sp, sp, #4
   13710:	pop	{pc}		; (ldr pc, [sp], #4)

00013714 <table_get_ptr@@Base>:
   13714:	str	r4, [sp, #-8]!
   13718:	str	lr, [sp, #4]
   1371c:	bl	13478 <table_get@@Base>
   13720:	ldr	r4, [sp]
   13724:	add	sp, sp, #4
   13728:	pop	{pc}		; (ldr pc, [sp], #4)

0001372c <table_row_init@@Base>:
   1372c:	strd	r4, [sp, #-16]!
   13730:	str	r6, [sp, #8]
   13734:	str	lr, [sp, #12]
   13738:	mov	r5, r1
   1373c:	ldr	r4, [r0, #16]
   13740:	ldr	r0, [r0, #12]
   13744:	lsl	r0, r0, #2
   13748:	bl	11acc <malloc@plt>
   1374c:	str	r0, [r4, r5, lsl #2]
   13750:	ldrd	r4, [sp]
   13754:	ldr	r6, [sp, #8]
   13758:	add	sp, sp, #12
   1375c:	pop	{pc}		; (ldr pc, [sp], #4)

00013760 <table_row_destroy@@Base>:
   13760:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13764:	strd	r6, [sp, #8]
   13768:	str	r8, [sp, #16]
   1376c:	str	lr, [sp, #20]
   13770:	mov	r6, r0
   13774:	mov	r5, r1
   13778:	bl	127c8 <table_get_column_length@@Base>
   1377c:	ldr	r8, [r6, #16]
   13780:	subs	r7, r0, #0
   13784:	ble	137a8 <table_row_destroy@@Base+0x48>
   13788:	mov	r4, #0
   1378c:	mov	r2, r4
   13790:	mov	r1, r5
   13794:	mov	r0, r6
   13798:	bl	1502c <table_cell_destroy@@Base>
   1379c:	add	r4, r4, #1
   137a0:	cmp	r7, r4
   137a4:	bne	1378c <table_row_destroy@@Base+0x2c>
   137a8:	ldr	r0, [r8, r5, lsl #2]
   137ac:	cmp	r0, #0
   137b0:	beq	137b8 <table_row_destroy@@Base+0x58>
   137b4:	bl	11a9c <free@plt>
   137b8:	ldrd	r4, [sp]
   137bc:	ldrd	r6, [sp, #8]
   137c0:	ldr	r8, [sp, #16]
   137c4:	add	sp, sp, #20
   137c8:	pop	{pc}		; (ldr pc, [sp], #4)

000137cc <table_get_row_length@@Base>:
   137cc:	ldr	r0, [r0, #20]
   137d0:	bx	lr

000137d4 <table_add_row@@Base>:
   137d4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   137d8:	strd	r6, [sp, #8]
   137dc:	str	r8, [sp, #16]
   137e0:	str	lr, [sp, #20]
   137e4:	mov	r4, r0
   137e8:	ldr	r1, [r0, #24]
   137ec:	ldr	r2, [r0, #20]
   137f0:	udiv	r3, r2, r1
   137f4:	mls	r3, r1, r3, r2
   137f8:	cmp	r3, #0
   137fc:	beq	13878 <table_add_row@@Base+0xa4>
   13800:	ldr	r7, [r4, #20]
   13804:	mov	r0, r4
   13808:	bl	127c8 <table_get_column_length@@Base>
   1380c:	mov	r6, r0
   13810:	mov	r1, r7
   13814:	mov	r0, r4
   13818:	bl	1372c <table_row_init@@Base>
   1381c:	cmp	r6, #0
   13820:	ble	13844 <table_add_row@@Base+0x70>
   13824:	mov	r5, #0
   13828:	mov	r2, r5
   1382c:	mov	r1, r7
   13830:	mov	r0, r4
   13834:	bl	1500c <table_cell_init@@Base>
   13838:	add	r5, r5, #1
   1383c:	cmp	r6, r5
   13840:	bne	13828 <table_add_row@@Base+0x54>
   13844:	mov	r3, #2
   13848:	mvn	r2, #0
   1384c:	ldr	r1, [r4, #20]
   13850:	mov	r0, r4
   13854:	bl	12694 <table_notify@@Base>
   13858:	ldr	r0, [r4, #20]
   1385c:	add	r3, r0, #1
   13860:	str	r3, [r4, #20]
   13864:	ldrd	r4, [sp]
   13868:	ldrd	r6, [sp, #8]
   1386c:	ldr	r8, [sp, #16]
   13870:	add	sp, sp, #20
   13874:	pop	{pc}		; (ldr pc, [sp], #4)
   13878:	ldr	r3, [r0, #28]
   1387c:	add	r1, r1, r3
   13880:	str	r1, [r0, #28]
   13884:	lsl	r1, r1, #2
   13888:	ldr	r0, [r0, #16]
   1388c:	bl	11ab4 <realloc@plt>
   13890:	str	r0, [r4, #16]
   13894:	b	13800 <table_add_row@@Base+0x2c>

00013898 <table_remove_row@@Base>:
   13898:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1389c:	strd	r6, [sp, #8]
   138a0:	str	r8, [sp, #16]
   138a4:	str	lr, [sp, #20]
   138a8:	mov	r4, r0
   138ac:	mov	r5, r1
   138b0:	ldr	r7, [r0, #20]
   138b4:	bl	127c8 <table_get_column_length@@Base>
   138b8:	subs	r8, r0, #0
   138bc:	ble	1390c <table_remove_row@@Base+0x74>
   138c0:	mov	r6, #0
   138c4:	b	138d8 <table_remove_row@@Base+0x40>
   138c8:	bl	11a9c <free@plt>
   138cc:	add	r6, r6, #1
   138d0:	cmp	r8, r6
   138d4:	beq	1390c <table_remove_row@@Base+0x74>
   138d8:	mov	r1, r6
   138dc:	mov	r0, r4
   138e0:	bl	12848 <table_get_column_data_type@@Base>
   138e4:	cmp	r0, #23
   138e8:	beq	138cc <table_remove_row@@Base+0x34>
   138ec:	mov	r2, r6
   138f0:	mov	r1, r5
   138f4:	mov	r0, r4
   138f8:	bl	14fe8 <table_get_cell_ptr@@Base>
   138fc:	ldr	r0, [r0]
   13900:	cmp	r0, #0
   13904:	bne	138c8 <table_remove_row@@Base+0x30>
   13908:	b	138cc <table_remove_row@@Base+0x34>
   1390c:	lsl	r6, r5, #2
   13910:	ldr	r3, [r4, #16]
   13914:	ldr	r0, [r3, r5, lsl #2]
   13918:	cmp	r0, #0
   1391c:	beq	13924 <table_remove_row@@Base+0x8c>
   13920:	bl	11a9c <free@plt>
   13924:	sub	r3, r7, #1
   13928:	cmp	r5, r3
   1392c:	bge	13958 <table_remove_row@@Base+0xc0>
   13930:	mov	r7, r3
   13934:	mov	r3, r5
   13938:	ldr	r2, [r4, #16]
   1393c:	add	r1, r2, r6
   13940:	add	r6, r6, #4
   13944:	ldr	r2, [r2, r6]
   13948:	str	r2, [r1]
   1394c:	add	r3, r3, #1
   13950:	cmp	r7, r3
   13954:	bne	13938 <table_remove_row@@Base+0xa0>
   13958:	ldr	r3, [r4, #20]
   1395c:	sub	r3, r3, #1
   13960:	str	r3, [r4, #20]
   13964:	ldr	r1, [r4, #24]
   13968:	udiv	r2, r3, r1
   1396c:	mls	r3, r1, r2, r3
   13970:	cmp	r3, #0
   13974:	beq	139a4 <table_remove_row@@Base+0x10c>
   13978:	mov	r3, #4
   1397c:	mvn	r2, #0
   13980:	mov	r1, r5
   13984:	mov	r0, r4
   13988:	bl	12694 <table_notify@@Base>
   1398c:	mov	r0, #0
   13990:	ldrd	r4, [sp]
   13994:	ldrd	r6, [sp, #8]
   13998:	ldr	r8, [sp, #16]
   1399c:	add	sp, sp, #20
   139a0:	pop	{pc}		; (ldr pc, [sp], #4)
   139a4:	ldr	r3, [r4, #28]
   139a8:	sub	r1, r3, r1
   139ac:	str	r1, [r4, #28]
   139b0:	lsl	r1, r1, #2
   139b4:	ldr	r0, [r4, #16]
   139b8:	bl	11ab4 <realloc@plt>
   139bc:	str	r0, [r4, #16]
   139c0:	b	13978 <table_remove_row@@Base+0xe0>

000139c4 <table_get_row_ptr@@Base>:
   139c4:	ldr	r0, [r0, #16]
   139c8:	add	r0, r0, r1, lsl #2
   139cc:	bx	lr

000139d0 <table_set_row_ptr@@Base>:
   139d0:	ldr	r3, [r0, #16]
   139d4:	ldr	r2, [r2]
   139d8:	str	r2, [r3, r1, lsl #2]
   139dc:	bx	lr

000139e0 <table_set@@Base>:
   139e0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   139e4:	strd	r6, [sp, #8]
   139e8:	strd	r8, [sp, #16]
   139ec:	str	sl, [sp, #24]
   139f0:	str	lr, [sp, #28]
   139f4:	mov	r5, r0
   139f8:	mov	r9, r1
   139fc:	mov	r6, r2
   13a00:	mov	r7, r3
   13a04:	ldr	r4, [sp, #32]
   13a08:	bl	14fe8 <table_get_cell_ptr@@Base>
   13a0c:	mov	r8, r0
   13a10:	mov	r1, r6
   13a14:	mov	r0, r5
   13a18:	bl	12b44 <table_get_col_ptr@@Base>
   13a1c:	cmp	r4, #23
   13a20:	ldrls	pc, [pc, r4, lsl #2]
   13a24:	b	140dc <table_set@@Base+0x6fc>
   13a28:	strdeq	r3, [r1], -r4
   13a2c:	andeq	r3, r1, r4, lsr fp
   13a30:	andeq	r3, r1, r4, ror fp
   13a34:			; <UNDEFINED> instruction: 0x00013bb4
   13a38:	strdeq	r3, [r1], -r4
   13a3c:	andeq	r3, r1, r4, lsr ip
   13a40:	andeq	r3, r1, r4, ror ip
   13a44:			; <UNDEFINED> instruction: 0x00013cb4
   13a48:	strdeq	r3, [r1], -r4
   13a4c:	andeq	r3, r1, ip, lsr sp
   13a50:	andeq	r3, r1, r4, lsl #27
   13a54:	andeq	r3, r1, r4, asr #27
   13a58:	andeq	r3, r1, r4, lsl #28
   13a5c:	andeq	r3, r1, r8, asr #28
   13a60:	andeq	r3, r1, ip, lsl #29
   13a64:	ldrdeq	r3, [r1], -r8
   13a68:	andeq	r3, r1, r4, lsr #30
   13a6c:	andeq	r3, r1, r8, ror #30
   13a70:			; <UNDEFINED> instruction: 0x00013fb4
   13a74:	andeq	r4, r1, ip, lsr r0
   13a78:	andeq	r4, r1, r0, lsl #1
   13a7c:	andeq	r4, r1, r0
   13a80:	andeq	r3, r1, r8, lsl #21
   13a84:	andeq	r4, r1, r4, asr #1
   13a88:	ldr	r3, [r0, #4]
   13a8c:	cmp	r3, #22
   13a90:	bne	140e4 <table_set@@Base+0x704>
   13a94:	ldr	r0, [r8]
   13a98:	cmp	r0, #0
   13a9c:	beq	13ad8 <table_set@@Base+0xf8>
   13aa0:	ldrb	r3, [r7]
   13aa4:	strb	r3, [r0]
   13aa8:	mov	r3, #1
   13aac:	mov	r2, r6
   13ab0:	mov	r1, r9
   13ab4:	mov	r0, r5
   13ab8:	bl	12694 <table_notify@@Base>
   13abc:	mov	r0, #0
   13ac0:	ldrd	r4, [sp]
   13ac4:	ldrd	r6, [sp, #8]
   13ac8:	ldrd	r8, [sp, #16]
   13acc:	ldr	sl, [sp, #24]
   13ad0:	add	sp, sp, #28
   13ad4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ad8:	mov	r0, #1
   13adc:	bl	11acc <malloc@plt>
   13ae0:	str	r0, [r8]
   13ae4:	cmp	r0, #0
   13ae8:	bne	13aa0 <table_set@@Base+0xc0>
   13aec:	mvn	r0, #0
   13af0:	b	13ac0 <table_set@@Base+0xe0>
   13af4:	ldr	r3, [r0, #4]
   13af8:	cmp	r3, #0
   13afc:	bne	140ec <table_set@@Base+0x70c>
   13b00:	ldr	r0, [r8]
   13b04:	cmp	r0, #0
   13b08:	beq	13b18 <table_set@@Base+0x138>
   13b0c:	ldr	r3, [r7]
   13b10:	str	r3, [r0]
   13b14:	b	13aa8 <table_set@@Base+0xc8>
   13b18:	mov	r0, #4
   13b1c:	bl	11acc <malloc@plt>
   13b20:	str	r0, [r8]
   13b24:	cmp	r0, #0
   13b28:	bne	13b0c <table_set@@Base+0x12c>
   13b2c:	mvn	r0, #0
   13b30:	b	13ac0 <table_set@@Base+0xe0>
   13b34:	ldr	r3, [r0, #4]
   13b38:	cmp	r3, #1
   13b3c:	bne	140f4 <table_set@@Base+0x714>
   13b40:	ldr	r0, [r8]
   13b44:	cmp	r0, #0
   13b48:	beq	13b58 <table_set@@Base+0x178>
   13b4c:	ldr	r3, [r7]
   13b50:	str	r3, [r0]
   13b54:	b	13aa8 <table_set@@Base+0xc8>
   13b58:	mov	r0, #4
   13b5c:	bl	11acc <malloc@plt>
   13b60:	str	r0, [r8]
   13b64:	cmp	r0, #0
   13b68:	bne	13b4c <table_set@@Base+0x16c>
   13b6c:	mvn	r0, #0
   13b70:	b	13ac0 <table_set@@Base+0xe0>
   13b74:	ldr	r3, [r0, #4]
   13b78:	cmp	r3, #2
   13b7c:	bne	140fc <table_set@@Base+0x71c>
   13b80:	ldr	r0, [r8]
   13b84:	cmp	r0, #0
   13b88:	beq	13b98 <table_set@@Base+0x1b8>
   13b8c:	ldrb	r3, [r7]
   13b90:	strb	r3, [r0]
   13b94:	b	13aa8 <table_set@@Base+0xc8>
   13b98:	mov	r0, #1
   13b9c:	bl	11acc <malloc@plt>
   13ba0:	str	r0, [r8]
   13ba4:	cmp	r0, #0
   13ba8:	bne	13b8c <table_set@@Base+0x1ac>
   13bac:	mvn	r0, #0
   13bb0:	b	13ac0 <table_set@@Base+0xe0>
   13bb4:	ldr	r3, [r0, #4]
   13bb8:	cmp	r3, #3
   13bbc:	bne	14104 <table_set@@Base+0x724>
   13bc0:	ldr	r0, [r8]
   13bc4:	cmp	r0, #0
   13bc8:	beq	13bd8 <table_set@@Base+0x1f8>
   13bcc:	ldrb	r3, [r7]
   13bd0:	strb	r3, [r0]
   13bd4:	b	13aa8 <table_set@@Base+0xc8>
   13bd8:	mov	r0, #1
   13bdc:	bl	11acc <malloc@plt>
   13be0:	str	r0, [r8]
   13be4:	cmp	r0, #0
   13be8:	bne	13bcc <table_set@@Base+0x1ec>
   13bec:	mvn	r0, #0
   13bf0:	b	13ac0 <table_set@@Base+0xe0>
   13bf4:	ldr	r3, [r0, #4]
   13bf8:	cmp	r3, #4
   13bfc:	bne	1410c <table_set@@Base+0x72c>
   13c00:	ldr	r0, [r8]
   13c04:	cmp	r0, #0
   13c08:	beq	13c18 <table_set@@Base+0x238>
   13c0c:	ldrh	r3, [r7]
   13c10:	strh	r3, [r0]
   13c14:	b	13aa8 <table_set@@Base+0xc8>
   13c18:	mov	r0, #2
   13c1c:	bl	11acc <malloc@plt>
   13c20:	str	r0, [r8]
   13c24:	cmp	r0, #0
   13c28:	bne	13c0c <table_set@@Base+0x22c>
   13c2c:	mvn	r0, #0
   13c30:	b	13ac0 <table_set@@Base+0xe0>
   13c34:	ldr	r3, [r0, #4]
   13c38:	cmp	r3, #5
   13c3c:	bne	14114 <table_set@@Base+0x734>
   13c40:	ldr	r0, [r8]
   13c44:	cmp	r0, #0
   13c48:	beq	13c58 <table_set@@Base+0x278>
   13c4c:	ldrh	r3, [r7]
   13c50:	strh	r3, [r0]
   13c54:	b	13aa8 <table_set@@Base+0xc8>
   13c58:	mov	r0, #2
   13c5c:	bl	11acc <malloc@plt>
   13c60:	str	r0, [r8]
   13c64:	cmp	r0, #0
   13c68:	bne	13c4c <table_set@@Base+0x26c>
   13c6c:	mvn	r0, #0
   13c70:	b	13ac0 <table_set@@Base+0xe0>
   13c74:	ldr	r3, [r0, #4]
   13c78:	cmp	r3, #6
   13c7c:	bne	1411c <table_set@@Base+0x73c>
   13c80:	ldr	r0, [r8]
   13c84:	cmp	r0, #0
   13c88:	beq	13c98 <table_set@@Base+0x2b8>
   13c8c:	ldr	r3, [r7]
   13c90:	str	r3, [r0]
   13c94:	b	13aa8 <table_set@@Base+0xc8>
   13c98:	mov	r0, #4
   13c9c:	bl	11acc <malloc@plt>
   13ca0:	str	r0, [r8]
   13ca4:	cmp	r0, #0
   13ca8:	bne	13c8c <table_set@@Base+0x2ac>
   13cac:	mvn	r0, #0
   13cb0:	b	13ac0 <table_set@@Base+0xe0>
   13cb4:	ldr	r3, [r0, #4]
   13cb8:	cmp	r3, #7
   13cbc:	bne	14124 <table_set@@Base+0x744>
   13cc0:	ldr	r0, [r8]
   13cc4:	cmp	r0, #0
   13cc8:	beq	13cd8 <table_set@@Base+0x2f8>
   13ccc:	ldr	r3, [r7]
   13cd0:	str	r3, [r0]
   13cd4:	b	13aa8 <table_set@@Base+0xc8>
   13cd8:	mov	r0, #4
   13cdc:	bl	11acc <malloc@plt>
   13ce0:	str	r0, [r8]
   13ce4:	cmp	r0, #0
   13ce8:	bne	13ccc <table_set@@Base+0x2ec>
   13cec:	mvn	r0, #0
   13cf0:	b	13ac0 <table_set@@Base+0xe0>
   13cf4:	ldr	r3, [r0, #4]
   13cf8:	cmp	r3, #8
   13cfc:	bne	1412c <table_set@@Base+0x74c>
   13d00:	ldr	r0, [r8]
   13d04:	cmp	r0, #0
   13d08:	beq	13d20 <table_set@@Base+0x340>
   13d0c:	ldr	r2, [r7]
   13d10:	ldr	r3, [r7, #4]
   13d14:	str	r2, [r0]
   13d18:	str	r3, [r0, #4]
   13d1c:	b	13aa8 <table_set@@Base+0xc8>
   13d20:	mov	r0, #8
   13d24:	bl	11acc <malloc@plt>
   13d28:	str	r0, [r8]
   13d2c:	cmp	r0, #0
   13d30:	bne	13d0c <table_set@@Base+0x32c>
   13d34:	mvn	r0, #0
   13d38:	b	13ac0 <table_set@@Base+0xe0>
   13d3c:	ldr	r3, [r0, #4]
   13d40:	cmp	r3, #9
   13d44:	bne	14134 <table_set@@Base+0x754>
   13d48:	ldr	r0, [r8]
   13d4c:	cmp	r0, #0
   13d50:	beq	13d68 <table_set@@Base+0x388>
   13d54:	ldr	r2, [r7]
   13d58:	ldr	r3, [r7, #4]
   13d5c:	str	r2, [r0]
   13d60:	str	r3, [r0, #4]
   13d64:	b	13aa8 <table_set@@Base+0xc8>
   13d68:	mov	r0, #8
   13d6c:	bl	11acc <malloc@plt>
   13d70:	str	r0, [r8]
   13d74:	cmp	r0, #0
   13d78:	bne	13d54 <table_set@@Base+0x374>
   13d7c:	mvn	r0, #0
   13d80:	b	13ac0 <table_set@@Base+0xe0>
   13d84:	ldr	r3, [r0, #4]
   13d88:	cmp	r3, #10
   13d8c:	bne	1413c <table_set@@Base+0x75c>
   13d90:	ldr	r0, [r8]
   13d94:	cmp	r0, #0
   13d98:	beq	13da8 <table_set@@Base+0x3c8>
   13d9c:	ldrh	r3, [r7]
   13da0:	strh	r3, [r0]
   13da4:	b	13aa8 <table_set@@Base+0xc8>
   13da8:	mov	r0, #2
   13dac:	bl	11acc <malloc@plt>
   13db0:	str	r0, [r8]
   13db4:	cmp	r0, #0
   13db8:	bne	13d9c <table_set@@Base+0x3bc>
   13dbc:	mvn	r0, #0
   13dc0:	b	13ac0 <table_set@@Base+0xe0>
   13dc4:	ldr	r3, [r0, #4]
   13dc8:	cmp	r3, #11
   13dcc:	bne	14144 <table_set@@Base+0x764>
   13dd0:	ldr	r0, [r8]
   13dd4:	cmp	r0, #0
   13dd8:	beq	13de8 <table_set@@Base+0x408>
   13ddc:	ldrh	r3, [r7]
   13de0:	strh	r3, [r0]
   13de4:	b	13aa8 <table_set@@Base+0xc8>
   13de8:	mov	r0, #2
   13dec:	bl	11acc <malloc@plt>
   13df0:	str	r0, [r8]
   13df4:	cmp	r0, #0
   13df8:	bne	13ddc <table_set@@Base+0x3fc>
   13dfc:	mvn	r0, #0
   13e00:	b	13ac0 <table_set@@Base+0xe0>
   13e04:	ldr	r3, [r0, #4]
   13e08:	cmp	r3, #12
   13e0c:	mvnne	r0, #0
   13e10:	bne	13ac0 <table_set@@Base+0xe0>
   13e14:	ldr	r0, [r8]
   13e18:	cmp	r0, #0
   13e1c:	beq	13e2c <table_set@@Base+0x44c>
   13e20:	ldr	r3, [r7]
   13e24:	str	r3, [r0]
   13e28:	b	13aa8 <table_set@@Base+0xc8>
   13e2c:	mov	r0, #4
   13e30:	bl	11acc <malloc@plt>
   13e34:	str	r0, [r8]
   13e38:	cmp	r0, #0
   13e3c:	bne	13e20 <table_set@@Base+0x440>
   13e40:	mvn	r0, #0
   13e44:	b	13ac0 <table_set@@Base+0xe0>
   13e48:	ldr	r3, [r0, #4]
   13e4c:	cmp	r3, #13
   13e50:	mvnne	r0, #0
   13e54:	bne	13ac0 <table_set@@Base+0xe0>
   13e58:	ldr	r0, [r8]
   13e5c:	cmp	r0, #0
   13e60:	beq	13e70 <table_set@@Base+0x490>
   13e64:	ldr	r3, [r7]
   13e68:	str	r3, [r0]
   13e6c:	b	13aa8 <table_set@@Base+0xc8>
   13e70:	mov	r0, #4
   13e74:	bl	11acc <malloc@plt>
   13e78:	str	r0, [r8]
   13e7c:	cmp	r0, #0
   13e80:	bne	13e64 <table_set@@Base+0x484>
   13e84:	mvn	r0, #0
   13e88:	b	13ac0 <table_set@@Base+0xe0>
   13e8c:	ldr	r3, [r0, #4]
   13e90:	cmp	r3, #14
   13e94:	mvnne	r0, #0
   13e98:	bne	13ac0 <table_set@@Base+0xe0>
   13e9c:	ldr	r0, [r8]
   13ea0:	cmp	r0, #0
   13ea4:	beq	13ebc <table_set@@Base+0x4dc>
   13ea8:	ldr	r2, [r7]
   13eac:	ldr	r3, [r7, #4]
   13eb0:	str	r2, [r0]
   13eb4:	str	r3, [r0, #4]
   13eb8:	b	13aa8 <table_set@@Base+0xc8>
   13ebc:	mov	r0, #8
   13ec0:	bl	11acc <malloc@plt>
   13ec4:	str	r0, [r8]
   13ec8:	cmp	r0, #0
   13ecc:	bne	13ea8 <table_set@@Base+0x4c8>
   13ed0:	mvn	r0, #0
   13ed4:	b	13ac0 <table_set@@Base+0xe0>
   13ed8:	ldr	r3, [r0, #4]
   13edc:	cmp	r3, #15
   13ee0:	mvnne	r0, #0
   13ee4:	bne	13ac0 <table_set@@Base+0xe0>
   13ee8:	ldr	r0, [r8]
   13eec:	cmp	r0, #0
   13ef0:	beq	13f08 <table_set@@Base+0x528>
   13ef4:	ldr	r2, [r7]
   13ef8:	ldr	r3, [r7, #4]
   13efc:	str	r2, [r0]
   13f00:	str	r3, [r0, #4]
   13f04:	b	13aa8 <table_set@@Base+0xc8>
   13f08:	mov	r0, #8
   13f0c:	bl	11acc <malloc@plt>
   13f10:	str	r0, [r8]
   13f14:	cmp	r0, #0
   13f18:	bne	13ef4 <table_set@@Base+0x514>
   13f1c:	mvn	r0, #0
   13f20:	b	13ac0 <table_set@@Base+0xe0>
   13f24:	ldr	r3, [r0, #4]
   13f28:	cmp	r3, #16
   13f2c:	mvnne	r0, #0
   13f30:	bne	13ac0 <table_set@@Base+0xe0>
   13f34:	ldr	r0, [r8]
   13f38:	cmp	r0, #0
   13f3c:	beq	13f4c <table_set@@Base+0x56c>
   13f40:	ldr	r3, [r7]
   13f44:	str	r3, [r0]
   13f48:	b	13aa8 <table_set@@Base+0xc8>
   13f4c:	mov	r0, #4
   13f50:	bl	11acc <malloc@plt>
   13f54:	str	r0, [r8]
   13f58:	cmp	r0, #0
   13f5c:	bne	13f40 <table_set@@Base+0x560>
   13f60:	mvn	r0, #0
   13f64:	b	13ac0 <table_set@@Base+0xe0>
   13f68:	ldr	r3, [r0, #4]
   13f6c:	cmp	r3, #17
   13f70:	mvnne	r0, #0
   13f74:	bne	13ac0 <table_set@@Base+0xe0>
   13f78:	ldr	r0, [r8]
   13f7c:	cmp	r0, #0
   13f80:	beq	13f98 <table_set@@Base+0x5b8>
   13f84:	ldr	r2, [r7]
   13f88:	ldr	r3, [r7, #4]
   13f8c:	str	r2, [r0]
   13f90:	str	r3, [r0, #4]
   13f94:	b	13aa8 <table_set@@Base+0xc8>
   13f98:	mov	r0, #8
   13f9c:	bl	11acc <malloc@plt>
   13fa0:	str	r0, [r8]
   13fa4:	cmp	r0, #0
   13fa8:	bne	13f84 <table_set@@Base+0x5a4>
   13fac:	mvn	r0, #0
   13fb0:	b	13ac0 <table_set@@Base+0xe0>
   13fb4:	ldr	r3, [r0, #4]
   13fb8:	cmp	r3, #18
   13fbc:	mvnne	r0, #0
   13fc0:	bne	13ac0 <table_set@@Base+0xe0>
   13fc4:	ldr	r0, [r8]
   13fc8:	cmp	r0, #0
   13fcc:	beq	13fe4 <table_set@@Base+0x604>
   13fd0:	ldr	r2, [r7]
   13fd4:	ldr	r3, [r7, #4]
   13fd8:	str	r2, [r0]
   13fdc:	str	r3, [r0, #4]
   13fe0:	b	13aa8 <table_set@@Base+0xc8>
   13fe4:	mov	r0, #8
   13fe8:	bl	11acc <malloc@plt>
   13fec:	str	r0, [r8]
   13ff0:	cmp	r0, #0
   13ff4:	bne	13fd0 <table_set@@Base+0x5f0>
   13ff8:	mvn	r0, #0
   13ffc:	b	13ac0 <table_set@@Base+0xe0>
   14000:	ldr	r3, [r0, #4]
   14004:	cmp	r3, #21
   14008:	mvnne	r0, #0
   1400c:	bne	13ac0 <table_set@@Base+0xe0>
   14010:	mov	r0, r7
   14014:	bl	11af0 <strlen@plt>
   14018:	add	r1, r0, #1
   1401c:	ldr	r0, [r8]
   14020:	bl	11ab4 <realloc@plt>
   14024:	str	r0, [r8]
   14028:	cmp	r0, #0
   1402c:	beq	1414c <table_set@@Base+0x76c>
   14030:	mov	r1, r7
   14034:	bl	11ac0 <strcpy@plt>
   14038:	b	13aa8 <table_set@@Base+0xc8>
   1403c:	ldr	r3, [r0, #4]
   14040:	cmp	r3, #19
   14044:	mvnne	r0, #0
   14048:	bne	13ac0 <table_set@@Base+0xe0>
   1404c:	ldr	r0, [r8]
   14050:	cmp	r0, #0
   14054:	beq	14064 <table_set@@Base+0x684>
   14058:	ldrb	r3, [r7]
   1405c:	strb	r3, [r0]
   14060:	b	13aa8 <table_set@@Base+0xc8>
   14064:	mov	r0, #1
   14068:	bl	11acc <malloc@plt>
   1406c:	str	r0, [r8]
   14070:	cmp	r0, #0
   14074:	bne	14058 <table_set@@Base+0x678>
   14078:	mvn	r0, #0
   1407c:	b	13ac0 <table_set@@Base+0xe0>
   14080:	ldr	r3, [r0, #4]
   14084:	cmp	r3, #20
   14088:	mvnne	r0, #0
   1408c:	bne	13ac0 <table_set@@Base+0xe0>
   14090:	ldr	r0, [r8]
   14094:	cmp	r0, #0
   14098:	beq	140a8 <table_set@@Base+0x6c8>
   1409c:	ldrb	r3, [r7]
   140a0:	strb	r3, [r0]
   140a4:	b	13aa8 <table_set@@Base+0xc8>
   140a8:	mov	r0, #1
   140ac:	bl	11acc <malloc@plt>
   140b0:	str	r0, [r8]
   140b4:	cmp	r0, #0
   140b8:	bne	1409c <table_set@@Base+0x6bc>
   140bc:	mvn	r0, #0
   140c0:	b	13ac0 <table_set@@Base+0xe0>
   140c4:	ldr	r3, [r0, #4]
   140c8:	cmp	r3, #23
   140cc:	mvnne	r0, #0
   140d0:	bne	13ac0 <table_set@@Base+0xe0>
   140d4:	str	r7, [r8]
   140d8:	b	13aa8 <table_set@@Base+0xc8>
   140dc:	mvn	r0, #0
   140e0:	b	13ac0 <table_set@@Base+0xe0>
   140e4:	mvn	r0, #0
   140e8:	b	13ac0 <table_set@@Base+0xe0>
   140ec:	mvn	r0, #0
   140f0:	b	13ac0 <table_set@@Base+0xe0>
   140f4:	mvn	r0, #0
   140f8:	b	13ac0 <table_set@@Base+0xe0>
   140fc:	mvn	r0, #0
   14100:	b	13ac0 <table_set@@Base+0xe0>
   14104:	mvn	r0, #0
   14108:	b	13ac0 <table_set@@Base+0xe0>
   1410c:	mvn	r0, #0
   14110:	b	13ac0 <table_set@@Base+0xe0>
   14114:	mvn	r0, #0
   14118:	b	13ac0 <table_set@@Base+0xe0>
   1411c:	mvn	r0, #0
   14120:	b	13ac0 <table_set@@Base+0xe0>
   14124:	mvn	r0, #0
   14128:	b	13ac0 <table_set@@Base+0xe0>
   1412c:	mvn	r0, #0
   14130:	b	13ac0 <table_set@@Base+0xe0>
   14134:	mvn	r0, #0
   14138:	b	13ac0 <table_set@@Base+0xe0>
   1413c:	mvn	r0, #0
   14140:	b	13ac0 <table_set@@Base+0xe0>
   14144:	mvn	r0, #0
   14148:	b	13ac0 <table_set@@Base+0xe0>
   1414c:	mvn	r0, #0
   14150:	b	13ac0 <table_set@@Base+0xe0>

00014154 <table_set_bool@@Base>:
   14154:	push	{lr}		; (str lr, [sp, #-4]!)
   14158:	sub	sp, sp, #20
   1415c:	strb	r3, [sp, #15]
   14160:	mov	r3, #22
   14164:	str	r3, [sp]
   14168:	add	r3, sp, #15
   1416c:	bl	139e0 <table_set@@Base>
   14170:	add	sp, sp, #20
   14174:	pop	{pc}		; (ldr pc, [sp], #4)

00014178 <table_set_int@@Base>:
   14178:	push	{lr}		; (str lr, [sp, #-4]!)
   1417c:	sub	sp, sp, #20
   14180:	str	r3, [sp, #12]
   14184:	mov	r3, #0
   14188:	str	r3, [sp]
   1418c:	add	r3, sp, #12
   14190:	bl	139e0 <table_set@@Base>
   14194:	add	sp, sp, #20
   14198:	pop	{pc}		; (ldr pc, [sp], #4)

0001419c <table_set_uint@@Base>:
   1419c:	push	{lr}		; (str lr, [sp, #-4]!)
   141a0:	sub	sp, sp, #20
   141a4:	str	r3, [sp, #12]
   141a8:	mov	r3, #1
   141ac:	str	r3, [sp]
   141b0:	add	r3, sp, #12
   141b4:	bl	139e0 <table_set@@Base>
   141b8:	add	sp, sp, #20
   141bc:	pop	{pc}		; (ldr pc, [sp], #4)

000141c0 <table_set_int8@@Base>:
   141c0:	push	{lr}		; (str lr, [sp, #-4]!)
   141c4:	sub	sp, sp, #20
   141c8:	strb	r3, [sp, #15]
   141cc:	mov	r3, #2
   141d0:	str	r3, [sp]
   141d4:	add	r3, sp, #15
   141d8:	bl	139e0 <table_set@@Base>
   141dc:	add	sp, sp, #20
   141e0:	pop	{pc}		; (ldr pc, [sp], #4)

000141e4 <table_set_uint8@@Base>:
   141e4:	push	{lr}		; (str lr, [sp, #-4]!)
   141e8:	sub	sp, sp, #20
   141ec:	strb	r3, [sp, #15]
   141f0:	mov	r3, #3
   141f4:	str	r3, [sp]
   141f8:	add	r3, sp, #15
   141fc:	bl	139e0 <table_set@@Base>
   14200:	add	sp, sp, #20
   14204:	pop	{pc}		; (ldr pc, [sp], #4)

00014208 <table_set_int16@@Base>:
   14208:	push	{lr}		; (str lr, [sp, #-4]!)
   1420c:	sub	sp, sp, #20
   14210:	strh	r3, [sp, #14]
   14214:	mov	r3, #4
   14218:	str	r3, [sp]
   1421c:	add	r3, sp, #14
   14220:	bl	139e0 <table_set@@Base>
   14224:	add	sp, sp, #20
   14228:	pop	{pc}		; (ldr pc, [sp], #4)

0001422c <table_set_uint16@@Base>:
   1422c:	push	{lr}		; (str lr, [sp, #-4]!)
   14230:	sub	sp, sp, #20
   14234:	strh	r3, [sp, #14]
   14238:	mov	r3, #5
   1423c:	str	r3, [sp]
   14240:	add	r3, sp, #14
   14244:	bl	139e0 <table_set@@Base>
   14248:	add	sp, sp, #20
   1424c:	pop	{pc}		; (ldr pc, [sp], #4)

00014250 <table_set_int32@@Base>:
   14250:	push	{lr}		; (str lr, [sp, #-4]!)
   14254:	sub	sp, sp, #20
   14258:	str	r3, [sp, #12]
   1425c:	mov	r3, #6
   14260:	str	r3, [sp]
   14264:	add	r3, sp, #12
   14268:	bl	139e0 <table_set@@Base>
   1426c:	add	sp, sp, #20
   14270:	pop	{pc}		; (ldr pc, [sp], #4)

00014274 <table_set_uint32@@Base>:
   14274:	push	{lr}		; (str lr, [sp, #-4]!)
   14278:	sub	sp, sp, #20
   1427c:	str	r3, [sp, #12]
   14280:	mov	r3, #7
   14284:	str	r3, [sp]
   14288:	add	r3, sp, #12
   1428c:	bl	139e0 <table_set@@Base>
   14290:	add	sp, sp, #20
   14294:	pop	{pc}		; (ldr pc, [sp], #4)

00014298 <table_set_int64@@Base>:
   14298:	push	{lr}		; (str lr, [sp, #-4]!)
   1429c:	sub	sp, sp, #12
   142a0:	mov	r3, #8
   142a4:	str	r3, [sp]
   142a8:	add	r3, sp, #16
   142ac:	bl	139e0 <table_set@@Base>
   142b0:	add	sp, sp, #12
   142b4:	pop	{pc}		; (ldr pc, [sp], #4)

000142b8 <table_set_uint64@@Base>:
   142b8:	push	{lr}		; (str lr, [sp, #-4]!)
   142bc:	sub	sp, sp, #12
   142c0:	mov	r3, #9
   142c4:	str	r3, [sp]
   142c8:	add	r3, sp, #16
   142cc:	bl	139e0 <table_set@@Base>
   142d0:	add	sp, sp, #12
   142d4:	pop	{pc}		; (ldr pc, [sp], #4)

000142d8 <table_set_short@@Base>:
   142d8:	push	{lr}		; (str lr, [sp, #-4]!)
   142dc:	sub	sp, sp, #20
   142e0:	strh	r3, [sp, #14]
   142e4:	mov	r3, #10
   142e8:	str	r3, [sp]
   142ec:	add	r3, sp, #14
   142f0:	bl	139e0 <table_set@@Base>
   142f4:	add	sp, sp, #20
   142f8:	pop	{pc}		; (ldr pc, [sp], #4)

000142fc <table_set_ushort@@Base>:
   142fc:	push	{lr}		; (str lr, [sp, #-4]!)
   14300:	sub	sp, sp, #20
   14304:	strh	r3, [sp, #14]
   14308:	mov	r3, #11
   1430c:	str	r3, [sp]
   14310:	add	r3, sp, #14
   14314:	bl	139e0 <table_set@@Base>
   14318:	add	sp, sp, #20
   1431c:	pop	{pc}		; (ldr pc, [sp], #4)

00014320 <table_set_long@@Base>:
   14320:	push	{lr}		; (str lr, [sp, #-4]!)
   14324:	sub	sp, sp, #20
   14328:	str	r3, [sp, #12]
   1432c:	mov	r3, #12
   14330:	str	r3, [sp]
   14334:	add	r3, sp, r3
   14338:	bl	139e0 <table_set@@Base>
   1433c:	add	sp, sp, #20
   14340:	pop	{pc}		; (ldr pc, [sp], #4)

00014344 <table_set_ulong@@Base>:
   14344:	push	{lr}		; (str lr, [sp, #-4]!)
   14348:	sub	sp, sp, #20
   1434c:	str	r3, [sp, #12]
   14350:	mov	r3, #13
   14354:	str	r3, [sp]
   14358:	add	r3, sp, #12
   1435c:	bl	139e0 <table_set@@Base>
   14360:	add	sp, sp, #20
   14364:	pop	{pc}		; (ldr pc, [sp], #4)

00014368 <table_set_llong@@Base>:
   14368:	push	{lr}		; (str lr, [sp, #-4]!)
   1436c:	sub	sp, sp, #12
   14370:	mov	r3, #14
   14374:	str	r3, [sp]
   14378:	add	r3, sp, #16
   1437c:	bl	139e0 <table_set@@Base>
   14380:	add	sp, sp, #12
   14384:	pop	{pc}		; (ldr pc, [sp], #4)

00014388 <table_set_ullong@@Base>:
   14388:	push	{lr}		; (str lr, [sp, #-4]!)
   1438c:	sub	sp, sp, #12
   14390:	mov	r3, #15
   14394:	str	r3, [sp]
   14398:	add	r3, sp, #16
   1439c:	bl	139e0 <table_set@@Base>
   143a0:	add	sp, sp, #12
   143a4:	pop	{pc}		; (ldr pc, [sp], #4)

000143a8 <table_set_float@@Base>:
   143a8:	push	{lr}		; (str lr, [sp, #-4]!)
   143ac:	sub	sp, sp, #20
   143b0:	vstr	s0, [sp, #12]
   143b4:	mov	r3, #16
   143b8:	str	r3, [sp]
   143bc:	add	r3, sp, #12
   143c0:	bl	139e0 <table_set@@Base>
   143c4:	add	sp, sp, #20
   143c8:	pop	{pc}		; (ldr pc, [sp], #4)

000143cc <table_set_double@@Base>:
   143cc:	push	{lr}		; (str lr, [sp, #-4]!)
   143d0:	sub	sp, sp, #20
   143d4:	vstr	d0, [sp, #8]
   143d8:	mov	r3, #17
   143dc:	str	r3, [sp]
   143e0:	add	r3, sp, #8
   143e4:	bl	139e0 <table_set@@Base>
   143e8:	add	sp, sp, #20
   143ec:	pop	{pc}		; (ldr pc, [sp], #4)

000143f0 <table_set_ldouble@@Base>:
   143f0:	push	{lr}		; (str lr, [sp, #-4]!)
   143f4:	sub	sp, sp, #20
   143f8:	vstr	d0, [sp, #8]
   143fc:	mov	r3, #18
   14400:	str	r3, [sp]
   14404:	add	r3, sp, #8
   14408:	bl	139e0 <table_set@@Base>
   1440c:	add	sp, sp, #20
   14410:	pop	{pc}		; (ldr pc, [sp], #4)

00014414 <table_set_string@@Base>:
   14414:	push	{lr}		; (str lr, [sp, #-4]!)
   14418:	sub	sp, sp, #12
   1441c:	mov	ip, #21
   14420:	str	ip, [sp]
   14424:	bl	139e0 <table_set@@Base>
   14428:	add	sp, sp, #12
   1442c:	pop	{pc}		; (ldr pc, [sp], #4)

00014430 <table_set_char@@Base>:
   14430:	push	{lr}		; (str lr, [sp, #-4]!)
   14434:	sub	sp, sp, #20
   14438:	strb	r3, [sp, #15]
   1443c:	mov	r3, #19
   14440:	str	r3, [sp]
   14444:	add	r3, sp, #15
   14448:	bl	139e0 <table_set@@Base>
   1444c:	add	sp, sp, #20
   14450:	pop	{pc}		; (ldr pc, [sp], #4)

00014454 <table_set_uchar@@Base>:
   14454:	push	{lr}		; (str lr, [sp, #-4]!)
   14458:	sub	sp, sp, #20
   1445c:	strb	r3, [sp, #15]
   14460:	mov	r3, #20
   14464:	str	r3, [sp]
   14468:	add	r3, sp, #15
   1446c:	bl	139e0 <table_set@@Base>
   14470:	add	sp, sp, #20
   14474:	pop	{pc}		; (ldr pc, [sp], #4)

00014478 <table_set_ptr@@Base>:
   14478:	push	{lr}		; (str lr, [sp, #-4]!)
   1447c:	sub	sp, sp, #12
   14480:	mov	ip, #23
   14484:	str	ip, [sp]
   14488:	bl	139e0 <table_set@@Base>
   1448c:	add	sp, sp, #12
   14490:	pop	{pc}		; (ldr pc, [sp], #4)

00014494 <table_cell_to_buffer@@Base>:
   14494:	strd	r4, [sp, #-20]!	; 0xffffffec
   14498:	strd	r6, [sp, #8]
   1449c:	str	lr, [sp, #16]
   144a0:	sub	sp, sp, #12
   144a4:	mov	r6, r0
   144a8:	mov	r7, r1
   144ac:	mov	r4, r2
   144b0:	mov	r5, r3
   144b4:	mov	r1, r2
   144b8:	bl	12848 <table_get_column_data_type@@Base>
   144bc:	cmp	r0, #23
   144c0:	ldrls	pc, [pc, r0, lsl #2]
   144c4:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   144c8:	andeq	r4, r1, r8, lsr #10
   144cc:	andeq	r4, r1, r8, ror #10
   144d0:	muleq	r1, r4, r5
   144d4:	andeq	r4, r1, r0, asr #11
   144d8:	andeq	r4, r1, ip, ror #11
   144dc:	andeq	r4, r1, r8, lsl r6
   144e0:	andeq	r4, r1, r4, asr #12
   144e4:	andeq	r4, r1, r0, ror r6
   144e8:	muleq	r1, ip, r6
   144ec:	andeq	r4, r1, r8, asr #13
   144f0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   144f4:	andeq	r4, r1, r0, lsr #14
   144f8:	andeq	r4, r1, ip, asr #14
   144fc:	andeq	r4, r1, r8, ror r7
   14500:	andeq	r4, r1, r4, lsr #15
   14504:	ldrdeq	r4, [r1], -r0
   14508:	andeq	r4, r1, r8, lsr #16
   1450c:	andeq	r4, r1, r8, asr r8
   14510:	andeq	r4, r1, r4, lsl #17
   14514:	ldrdeq	r4, [r1], -ip
   14518:	andeq	r4, r1, r8, lsl #18
   1451c:	strdeq	r4, [r1], -ip
   14520:			; <UNDEFINED> instruction: 0x000148b0
   14524:	andeq	r4, r1, r4, lsr r9
   14528:	mov	r2, r4
   1452c:	mov	r1, r7
   14530:	mov	r0, r6
   14534:	bl	134b0 <table_get_int@@Base>
   14538:	mov	r3, r0
   1453c:	movw	r2, #20784	; 0x5130
   14540:	movt	r2, #1
   14544:	ldr	r1, [sp, #32]
   14548:	mov	r0, r5
   1454c:	bl	11b08 <snprintf@plt>
   14550:	mov	r0, #0
   14554:	add	sp, sp, #12
   14558:	ldrd	r4, [sp]
   1455c:	ldrd	r6, [sp, #8]
   14560:	add	sp, sp, #16
   14564:	pop	{pc}		; (ldr pc, [sp], #4)
   14568:	mov	r2, r4
   1456c:	mov	r1, r7
   14570:	mov	r0, r6
   14574:	bl	134cc <table_get_uint@@Base>
   14578:	mov	r3, r0
   1457c:	movw	r2, #20788	; 0x5134
   14580:	movt	r2, #1
   14584:	ldr	r1, [sp, #32]
   14588:	mov	r0, r5
   1458c:	bl	11b08 <snprintf@plt>
   14590:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   14594:	mov	r2, r4
   14598:	mov	r1, r7
   1459c:	mov	r0, r6
   145a0:	bl	134e8 <table_get_int8@@Base>
   145a4:	mov	r3, r0
   145a8:	movw	r2, #20784	; 0x5130
   145ac:	movt	r2, #1
   145b0:	ldr	r1, [sp, #32]
   145b4:	mov	r0, r5
   145b8:	bl	11b08 <snprintf@plt>
   145bc:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   145c0:	mov	r2, r4
   145c4:	mov	r1, r7
   145c8:	mov	r0, r6
   145cc:	bl	13504 <table_get_uint8@@Base>
   145d0:	mov	r3, r0
   145d4:	movw	r2, #20788	; 0x5134
   145d8:	movt	r2, #1
   145dc:	ldr	r1, [sp, #32]
   145e0:	mov	r0, r5
   145e4:	bl	11b08 <snprintf@plt>
   145e8:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   145ec:	mov	r2, r4
   145f0:	mov	r1, r7
   145f4:	mov	r0, r6
   145f8:	bl	13520 <table_get_int16@@Base>
   145fc:	mov	r3, r0
   14600:	movw	r2, #20784	; 0x5130
   14604:	movt	r2, #1
   14608:	ldr	r1, [sp, #32]
   1460c:	mov	r0, r5
   14610:	bl	11b08 <snprintf@plt>
   14614:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   14618:	mov	r2, r4
   1461c:	mov	r1, r7
   14620:	mov	r0, r6
   14624:	bl	1353c <table_get_uint16@@Base>
   14628:	mov	r3, r0
   1462c:	movw	r2, #20788	; 0x5134
   14630:	movt	r2, #1
   14634:	ldr	r1, [sp, #32]
   14638:	mov	r0, r5
   1463c:	bl	11b08 <snprintf@plt>
   14640:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   14644:	mov	r2, r4
   14648:	mov	r1, r7
   1464c:	mov	r0, r6
   14650:	bl	13558 <table_get_int32@@Base>
   14654:	mov	r3, r0
   14658:	movw	r2, #20784	; 0x5130
   1465c:	movt	r2, #1
   14660:	ldr	r1, [sp, #32]
   14664:	mov	r0, r5
   14668:	bl	11b08 <snprintf@plt>
   1466c:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   14670:	mov	r2, r4
   14674:	mov	r1, r7
   14678:	mov	r0, r6
   1467c:	bl	13574 <table_get_uint32@@Base>
   14680:	mov	r3, r0
   14684:	movw	r2, #20788	; 0x5134
   14688:	movt	r2, #1
   1468c:	ldr	r1, [sp, #32]
   14690:	mov	r0, r5
   14694:	bl	11b08 <snprintf@plt>
   14698:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   1469c:	mov	r2, r4
   146a0:	mov	r1, r7
   146a4:	mov	r0, r6
   146a8:	bl	13590 <table_get_int64@@Base>
   146ac:	strd	r0, [sp]
   146b0:	movw	r2, #20792	; 0x5138
   146b4:	movt	r2, #1
   146b8:	ldr	r1, [sp, #32]
   146bc:	mov	r0, r5
   146c0:	bl	11b08 <snprintf@plt>
   146c4:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   146c8:	mov	r2, r4
   146cc:	mov	r1, r7
   146d0:	mov	r0, r6
   146d4:	bl	135ac <table_get_uint64@@Base>
   146d8:	strd	r0, [sp]
   146dc:	movw	r2, #20800	; 0x5140
   146e0:	movt	r2, #1
   146e4:	ldr	r1, [sp, #32]
   146e8:	mov	r0, r5
   146ec:	bl	11b08 <snprintf@plt>
   146f0:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   146f4:	mov	r2, r4
   146f8:	mov	r1, r7
   146fc:	mov	r0, r6
   14700:	bl	135c8 <table_get_short@@Base>
   14704:	mov	r3, r0
   14708:	movw	r2, #20808	; 0x5148
   1470c:	movt	r2, #1
   14710:	ldr	r1, [sp, #32]
   14714:	mov	r0, r5
   14718:	bl	11b08 <snprintf@plt>
   1471c:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   14720:	mov	r2, r4
   14724:	mov	r1, r7
   14728:	mov	r0, r6
   1472c:	bl	135e4 <table_get_ushort@@Base>
   14730:	mov	r3, r0
   14734:	movw	r2, #20812	; 0x514c
   14738:	movt	r2, #1
   1473c:	ldr	r1, [sp, #32]
   14740:	mov	r0, r5
   14744:	bl	11b08 <snprintf@plt>
   14748:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   1474c:	mov	r2, r4
   14750:	mov	r1, r7
   14754:	mov	r0, r6
   14758:	bl	13600 <table_get_long@@Base>
   1475c:	mov	r3, r0
   14760:	movw	r2, #20816	; 0x5150
   14764:	movt	r2, #1
   14768:	ldr	r1, [sp, #32]
   1476c:	mov	r0, r5
   14770:	bl	11b08 <snprintf@plt>
   14774:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   14778:	mov	r2, r4
   1477c:	mov	r1, r7
   14780:	mov	r0, r6
   14784:	bl	1361c <table_get_ulong@@Base>
   14788:	mov	r3, r0
   1478c:	movw	r2, #20820	; 0x5154
   14790:	movt	r2, #1
   14794:	ldr	r1, [sp, #32]
   14798:	mov	r0, r5
   1479c:	bl	11b08 <snprintf@plt>
   147a0:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   147a4:	mov	r2, r4
   147a8:	mov	r1, r7
   147ac:	mov	r0, r6
   147b0:	bl	13638 <table_get_llong@@Base>
   147b4:	strd	r0, [sp]
   147b8:	movw	r2, #20792	; 0x5138
   147bc:	movt	r2, #1
   147c0:	ldr	r1, [sp, #32]
   147c4:	mov	r0, r5
   147c8:	bl	11b08 <snprintf@plt>
   147cc:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   147d0:	mov	r2, r4
   147d4:	mov	r1, r7
   147d8:	mov	r0, r6
   147dc:	bl	13654 <table_get_ullong@@Base>
   147e0:	strd	r0, [sp]
   147e4:	movw	r2, #20800	; 0x5140
   147e8:	movt	r2, #1
   147ec:	ldr	r1, [sp, #32]
   147f0:	mov	r0, r5
   147f4:	bl	11b08 <snprintf@plt>
   147f8:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   147fc:	mov	r2, r4
   14800:	mov	r1, r7
   14804:	mov	r0, r6
   14808:	bl	136fc <table_get_string@@Base>
   1480c:	mov	r3, r0
   14810:	movw	r2, #20824	; 0x5158
   14814:	movt	r2, #1
   14818:	ldr	r1, [sp, #32]
   1481c:	mov	r0, r5
   14820:	bl	11b08 <snprintf@plt>
   14824:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   14828:	mov	r2, r4
   1482c:	mov	r1, r7
   14830:	mov	r0, r6
   14834:	bl	13670 <table_get_float@@Base>
   14838:	vcvt.f64.f32	d0, s0
   1483c:	vstr	d0, [sp]
   14840:	movw	r2, #20828	; 0x515c
   14844:	movt	r2, #1
   14848:	ldr	r1, [sp, #32]
   1484c:	mov	r0, r5
   14850:	bl	11b08 <snprintf@plt>
   14854:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   14858:	mov	r2, r4
   1485c:	mov	r1, r7
   14860:	mov	r0, r6
   14864:	bl	1368c <table_get_double@@Base>
   14868:	vstr	d0, [sp]
   1486c:	movw	r2, #20832	; 0x5160
   14870:	movt	r2, #1
   14874:	ldr	r1, [sp, #32]
   14878:	mov	r0, r5
   1487c:	bl	11b08 <snprintf@plt>
   14880:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   14884:	mov	r2, r4
   14888:	mov	r1, r7
   1488c:	mov	r0, r6
   14890:	bl	136a8 <table_get_ldouble@@Base>
   14894:	vstr	d0, [sp]
   14898:	movw	r2, #20836	; 0x5164
   1489c:	movt	r2, #1
   148a0:	ldr	r1, [sp, #32]
   148a4:	mov	r0, r5
   148a8:	bl	11b08 <snprintf@plt>
   148ac:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   148b0:	mov	r2, r4
   148b4:	mov	r1, r7
   148b8:	mov	r0, r6
   148bc:	bl	13494 <table_get_bool@@Base>
   148c0:	mov	r3, r0
   148c4:	movw	r2, #20784	; 0x5130
   148c8:	movt	r2, #1
   148cc:	ldr	r1, [sp, #32]
   148d0:	mov	r0, r5
   148d4:	bl	11b08 <snprintf@plt>
   148d8:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   148dc:	mov	r2, r4
   148e0:	mov	r1, r7
   148e4:	mov	r0, r6
   148e8:	bl	136c4 <table_get_char@@Base>
   148ec:	mov	r3, r0
   148f0:	movw	r2, #20840	; 0x5168
   148f4:	movt	r2, #1
   148f8:	ldr	r1, [sp, #32]
   148fc:	mov	r0, r5
   14900:	bl	11b08 <snprintf@plt>
   14904:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   14908:	mov	r2, r4
   1490c:	mov	r1, r7
   14910:	mov	r0, r6
   14914:	bl	136e0 <table_get_uchar@@Base>
   14918:	mov	r3, r0
   1491c:	movw	r2, #20840	; 0x5168
   14920:	movt	r2, #1
   14924:	ldr	r1, [sp, #32]
   14928:	mov	r0, r5
   1492c:	bl	11b08 <snprintf@plt>
   14930:	b	14550 <table_cell_to_buffer@@Base+0xbc>
   14934:	mov	r2, r4
   14938:	mov	r1, r7
   1493c:	mov	r0, r6
   14940:	bl	13714 <table_get_ptr@@Base>
   14944:	mov	r3, r0
   14948:	movw	r2, #20844	; 0x516c
   1494c:	movt	r2, #1
   14950:	ldr	r1, [sp, #32]
   14954:	mov	r0, r5
   14958:	bl	11b08 <snprintf@plt>
   1495c:	b	14550 <table_cell_to_buffer@@Base+0xbc>

00014960 <table_cell_from_buffer@@Base>:
   14960:	strd	r4, [sp, #-20]!	; 0xffffffec
   14964:	strd	r6, [sp, #8]
   14968:	str	lr, [sp, #16]
   1496c:	sub	sp, sp, #268	; 0x10c
   14970:	mov	r6, r0
   14974:	mov	r7, r1
   14978:	mov	r4, r2
   1497c:	mov	r5, r3
   14980:	mov	r1, r2
   14984:	bl	12848 <table_get_column_data_type@@Base>
   14988:	cmp	r0, #23
   1498c:	ldrls	pc, [pc, r0, lsl #2]
   14990:	b	14fe0 <table_cell_from_buffer@@Base+0x680>
   14994:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14998:	andeq	r4, r1, r8, asr #20
   1499c:	andeq	r4, r1, r4, lsl #21
   149a0:	andeq	r4, r1, r0, asr #21
   149a4:	strdeq	r4, [r1], -ip
   149a8:	andeq	r4, r1, r8, lsr fp
   149ac:	andeq	r4, r1, r4, ror fp
   149b0:			; <UNDEFINED> instruction: 0x00014bb0
   149b4:	andeq	r4, r1, ip, ror #23
   149b8:	andeq	r4, r1, ip, lsr #24
   149bc:	andeq	r4, r1, ip, ror #24
   149c0:	andeq	r4, r1, r8, lsr #25
   149c4:	andeq	r4, r1, r4, ror #25
   149c8:	andeq	r4, r1, r0, lsr #26
   149cc:	andeq	r4, r1, ip, asr sp
   149d0:	muleq	r1, ip, sp
   149d4:	andeq	r4, r1, r8, lsl lr
   149d8:	andeq	r4, r1, r4, asr lr
   149dc:	muleq	r1, r0, lr
   149e0:	andeq	r4, r1, ip, lsr #30
   149e4:	andeq	r4, r1, r8, ror #30
   149e8:	ldrdeq	r4, [r1], -ip
   149ec:	andeq	r4, r1, ip, asr #29
   149f0:	andeq	r4, r1, r4, lsr #31
   149f4:	add	r2, sp, #8
   149f8:	movw	r1, #20784	; 0x5130
   149fc:	movt	r1, #1
   14a00:	mov	r0, r5
   14a04:	bl	11b14 <__isoc99_sscanf@plt>
   14a08:	cmp	r0, #1
   14a0c:	mvnne	r5, #0
   14a10:	beq	14a2c <table_cell_from_buffer@@Base+0xcc>
   14a14:	mov	r0, r5
   14a18:	add	sp, sp, #268	; 0x10c
   14a1c:	ldrd	r4, [sp]
   14a20:	ldrd	r6, [sp, #8]
   14a24:	add	sp, sp, #16
   14a28:	pop	{pc}		; (ldr pc, [sp], #4)
   14a2c:	ldr	r3, [sp, #8]
   14a30:	mov	r2, r4
   14a34:	mov	r1, r7
   14a38:	mov	r0, r6
   14a3c:	bl	14178 <table_set_int@@Base>
   14a40:	mov	r5, #0
   14a44:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14a48:	add	r2, sp, #8
   14a4c:	movw	r1, #20788	; 0x5134
   14a50:	movt	r1, #1
   14a54:	mov	r0, r5
   14a58:	bl	11b14 <__isoc99_sscanf@plt>
   14a5c:	cmp	r0, #1
   14a60:	mvnne	r5, #0
   14a64:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14a68:	ldr	r3, [sp, #8]
   14a6c:	mov	r2, r4
   14a70:	mov	r1, r7
   14a74:	mov	r0, r6
   14a78:	bl	1419c <table_set_uint@@Base>
   14a7c:	mov	r5, #0
   14a80:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14a84:	add	r2, sp, #8
   14a88:	movw	r1, #20848	; 0x5170
   14a8c:	movt	r1, #1
   14a90:	mov	r0, r5
   14a94:	bl	11b14 <__isoc99_sscanf@plt>
   14a98:	cmp	r0, #1
   14a9c:	mvnne	r5, #0
   14aa0:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14aa4:	ldrsb	r3, [sp, #8]
   14aa8:	mov	r2, r4
   14aac:	mov	r1, r7
   14ab0:	mov	r0, r6
   14ab4:	bl	141c0 <table_set_int8@@Base>
   14ab8:	mov	r5, #0
   14abc:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14ac0:	add	r2, sp, #8
   14ac4:	movw	r1, #20856	; 0x5178
   14ac8:	movt	r1, #1
   14acc:	mov	r0, r5
   14ad0:	bl	11b14 <__isoc99_sscanf@plt>
   14ad4:	cmp	r0, #1
   14ad8:	mvnne	r5, #0
   14adc:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14ae0:	ldrb	r3, [sp, #8]
   14ae4:	mov	r2, r4
   14ae8:	mov	r1, r7
   14aec:	mov	r0, r6
   14af0:	bl	141e4 <table_set_uint8@@Base>
   14af4:	mov	r5, #0
   14af8:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14afc:	add	r2, sp, #8
   14b00:	movw	r1, #20808	; 0x5148
   14b04:	movt	r1, #1
   14b08:	mov	r0, r5
   14b0c:	bl	11b14 <__isoc99_sscanf@plt>
   14b10:	cmp	r0, #1
   14b14:	mvnne	r5, #0
   14b18:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14b1c:	ldrsh	r3, [sp, #8]
   14b20:	mov	r2, r4
   14b24:	mov	r1, r7
   14b28:	mov	r0, r6
   14b2c:	bl	14208 <table_set_int16@@Base>
   14b30:	mov	r5, #0
   14b34:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14b38:	add	r2, sp, #8
   14b3c:	movw	r1, #20812	; 0x514c
   14b40:	movt	r1, #1
   14b44:	mov	r0, r5
   14b48:	bl	11b14 <__isoc99_sscanf@plt>
   14b4c:	cmp	r0, #1
   14b50:	mvnne	r5, #0
   14b54:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14b58:	ldrh	r3, [sp, #8]
   14b5c:	mov	r2, r4
   14b60:	mov	r1, r7
   14b64:	mov	r0, r6
   14b68:	bl	1422c <table_set_uint16@@Base>
   14b6c:	mov	r5, #0
   14b70:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14b74:	add	r2, sp, #8
   14b78:	movw	r1, #20784	; 0x5130
   14b7c:	movt	r1, #1
   14b80:	mov	r0, r5
   14b84:	bl	11b14 <__isoc99_sscanf@plt>
   14b88:	cmp	r0, #1
   14b8c:	mvnne	r5, #0
   14b90:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14b94:	ldr	r3, [sp, #8]
   14b98:	mov	r2, r4
   14b9c:	mov	r1, r7
   14ba0:	mov	r0, r6
   14ba4:	bl	14250 <table_set_int32@@Base>
   14ba8:	mov	r5, #0
   14bac:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14bb0:	add	r2, sp, #8
   14bb4:	movw	r1, #20788	; 0x5134
   14bb8:	movt	r1, #1
   14bbc:	mov	r0, r5
   14bc0:	bl	11b14 <__isoc99_sscanf@plt>
   14bc4:	cmp	r0, #1
   14bc8:	mvnne	r5, #0
   14bcc:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14bd0:	ldr	r3, [sp, #8]
   14bd4:	mov	r2, r4
   14bd8:	mov	r1, r7
   14bdc:	mov	r0, r6
   14be0:	bl	14274 <table_set_uint32@@Base>
   14be4:	mov	r5, #0
   14be8:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14bec:	add	r2, sp, #8
   14bf0:	movw	r1, #20792	; 0x5138
   14bf4:	movt	r1, #1
   14bf8:	mov	r0, r5
   14bfc:	bl	11b14 <__isoc99_sscanf@plt>
   14c00:	cmp	r0, #1
   14c04:	mvnne	r5, #0
   14c08:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14c0c:	ldrd	r2, [sp, #8]
   14c10:	strd	r2, [sp]
   14c14:	mov	r2, r4
   14c18:	mov	r1, r7
   14c1c:	mov	r0, r6
   14c20:	bl	14298 <table_set_int64@@Base>
   14c24:	mov	r5, #0
   14c28:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14c2c:	add	r2, sp, #8
   14c30:	movw	r1, #20800	; 0x5140
   14c34:	movt	r1, #1
   14c38:	mov	r0, r5
   14c3c:	bl	11b14 <__isoc99_sscanf@plt>
   14c40:	cmp	r0, #1
   14c44:	mvnne	r5, #0
   14c48:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14c4c:	ldrd	r2, [sp, #8]
   14c50:	strd	r2, [sp]
   14c54:	mov	r2, r4
   14c58:	mov	r1, r7
   14c5c:	mov	r0, r6
   14c60:	bl	142b8 <table_set_uint64@@Base>
   14c64:	mov	r5, #0
   14c68:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14c6c:	add	r2, sp, #8
   14c70:	movw	r1, #20808	; 0x5148
   14c74:	movt	r1, #1
   14c78:	mov	r0, r5
   14c7c:	bl	11b14 <__isoc99_sscanf@plt>
   14c80:	cmp	r0, #1
   14c84:	mvnne	r5, #0
   14c88:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14c8c:	ldrsh	r3, [sp, #8]
   14c90:	mov	r2, r4
   14c94:	mov	r1, r7
   14c98:	mov	r0, r6
   14c9c:	bl	142d8 <table_set_short@@Base>
   14ca0:	mov	r5, #0
   14ca4:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14ca8:	add	r2, sp, #8
   14cac:	movw	r1, #20812	; 0x514c
   14cb0:	movt	r1, #1
   14cb4:	mov	r0, r5
   14cb8:	bl	11b14 <__isoc99_sscanf@plt>
   14cbc:	cmp	r0, #1
   14cc0:	mvnne	r5, #0
   14cc4:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14cc8:	ldrh	r3, [sp, #8]
   14ccc:	mov	r2, r4
   14cd0:	mov	r1, r7
   14cd4:	mov	r0, r6
   14cd8:	bl	142fc <table_set_ushort@@Base>
   14cdc:	mov	r5, #0
   14ce0:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14ce4:	add	r2, sp, #8
   14ce8:	movw	r1, #20816	; 0x5150
   14cec:	movt	r1, #1
   14cf0:	mov	r0, r5
   14cf4:	bl	11b14 <__isoc99_sscanf@plt>
   14cf8:	cmp	r0, #1
   14cfc:	mvnne	r5, #0
   14d00:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14d04:	ldr	r3, [sp, #8]
   14d08:	mov	r2, r4
   14d0c:	mov	r1, r7
   14d10:	mov	r0, r6
   14d14:	bl	14320 <table_set_long@@Base>
   14d18:	mov	r5, #0
   14d1c:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14d20:	add	r2, sp, #8
   14d24:	movw	r1, #20820	; 0x5154
   14d28:	movt	r1, #1
   14d2c:	mov	r0, r5
   14d30:	bl	11b14 <__isoc99_sscanf@plt>
   14d34:	cmp	r0, #1
   14d38:	mvnne	r5, #0
   14d3c:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14d40:	ldr	r3, [sp, #8]
   14d44:	mov	r2, r4
   14d48:	mov	r1, r7
   14d4c:	mov	r0, r6
   14d50:	bl	14344 <table_set_ulong@@Base>
   14d54:	mov	r5, #0
   14d58:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14d5c:	add	r2, sp, #8
   14d60:	movw	r1, #20792	; 0x5138
   14d64:	movt	r1, #1
   14d68:	mov	r0, r5
   14d6c:	bl	11b14 <__isoc99_sscanf@plt>
   14d70:	cmp	r0, #1
   14d74:	mvnne	r5, #0
   14d78:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14d7c:	ldrd	r2, [sp, #8]
   14d80:	strd	r2, [sp]
   14d84:	mov	r2, r4
   14d88:	mov	r1, r7
   14d8c:	mov	r0, r6
   14d90:	bl	14368 <table_set_llong@@Base>
   14d94:	mov	r5, #0
   14d98:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14d9c:	add	r2, sp, #8
   14da0:	movw	r1, #20800	; 0x5140
   14da4:	movt	r1, #1
   14da8:	mov	r0, r5
   14dac:	bl	11b14 <__isoc99_sscanf@plt>
   14db0:	cmp	r0, #1
   14db4:	mvnne	r5, #0
   14db8:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14dbc:	ldrd	r2, [sp, #8]
   14dc0:	strd	r2, [sp]
   14dc4:	mov	r2, r4
   14dc8:	mov	r1, r7
   14dcc:	mov	r0, r6
   14dd0:	bl	14388 <table_set_ullong@@Base>
   14dd4:	mov	r5, #0
   14dd8:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14ddc:	add	r2, sp, #8
   14de0:	movw	r1, #20824	; 0x5158
   14de4:	movt	r1, #1
   14de8:	mov	r0, r5
   14dec:	bl	11b14 <__isoc99_sscanf@plt>
   14df0:	cmp	r0, #1
   14df4:	mvnne	r5, #0
   14df8:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14dfc:	add	r3, sp, #8
   14e00:	mov	r2, r4
   14e04:	mov	r1, r7
   14e08:	mov	r0, r6
   14e0c:	bl	14414 <table_set_string@@Base>
   14e10:	mov	r5, #0
   14e14:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14e18:	add	r2, sp, #8
   14e1c:	movw	r1, #20828	; 0x515c
   14e20:	movt	r1, #1
   14e24:	mov	r0, r5
   14e28:	bl	11b14 <__isoc99_sscanf@plt>
   14e2c:	cmp	r0, #1
   14e30:	mvnne	r5, #0
   14e34:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14e38:	vldr	s0, [sp, #8]
   14e3c:	mov	r2, r4
   14e40:	mov	r1, r7
   14e44:	mov	r0, r6
   14e48:	bl	143a8 <table_set_float@@Base>
   14e4c:	mov	r5, #0
   14e50:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14e54:	add	r2, sp, #8
   14e58:	movw	r1, #20832	; 0x5160
   14e5c:	movt	r1, #1
   14e60:	mov	r0, r5
   14e64:	bl	11b14 <__isoc99_sscanf@plt>
   14e68:	cmp	r0, #1
   14e6c:	mvnne	r5, #0
   14e70:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14e74:	vldr	d0, [sp, #8]
   14e78:	mov	r2, r4
   14e7c:	mov	r1, r7
   14e80:	mov	r0, r6
   14e84:	bl	143cc <table_set_double@@Base>
   14e88:	mov	r5, #0
   14e8c:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14e90:	add	r2, sp, #8
   14e94:	movw	r1, #20836	; 0x5164
   14e98:	movt	r1, #1
   14e9c:	mov	r0, r5
   14ea0:	bl	11b14 <__isoc99_sscanf@plt>
   14ea4:	cmp	r0, #1
   14ea8:	mvnne	r5, #0
   14eac:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14eb0:	vldr	d0, [sp, #8]
   14eb4:	mov	r2, r4
   14eb8:	mov	r1, r7
   14ebc:	mov	r0, r6
   14ec0:	bl	143f0 <table_set_ldouble@@Base>
   14ec4:	mov	r5, #0
   14ec8:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14ecc:	add	r2, sp, #8
   14ed0:	movw	r1, #20784	; 0x5130
   14ed4:	movt	r1, #1
   14ed8:	mov	r0, r5
   14edc:	bl	11b14 <__isoc99_sscanf@plt>
   14ee0:	cmp	r0, #1
   14ee4:	mvnne	r5, #0
   14ee8:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14eec:	ldr	r5, [sp, #8]
   14ef0:	cmp	r5, #0
   14ef4:	beq	14f14 <table_cell_from_buffer@@Base+0x5b4>
   14ef8:	mov	r3, #1
   14efc:	mov	r2, r4
   14f00:	mov	r1, r7
   14f04:	mov	r0, r6
   14f08:	bl	14154 <table_set_bool@@Base>
   14f0c:	mov	r5, #0
   14f10:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14f14:	mov	r3, #0
   14f18:	mov	r2, r4
   14f1c:	mov	r1, r7
   14f20:	mov	r0, r6
   14f24:	bl	14154 <table_set_bool@@Base>
   14f28:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14f2c:	add	r2, sp, #8
   14f30:	movw	r1, #20840	; 0x5168
   14f34:	movt	r1, #1
   14f38:	mov	r0, r5
   14f3c:	bl	11b14 <__isoc99_sscanf@plt>
   14f40:	cmp	r0, #1
   14f44:	mvnne	r5, #0
   14f48:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14f4c:	ldrb	r3, [sp, #8]
   14f50:	mov	r2, r4
   14f54:	mov	r1, r7
   14f58:	mov	r0, r6
   14f5c:	bl	14430 <table_set_char@@Base>
   14f60:	mov	r5, #0
   14f64:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14f68:	add	r2, sp, #8
   14f6c:	movw	r1, #20840	; 0x5168
   14f70:	movt	r1, #1
   14f74:	mov	r0, r5
   14f78:	bl	11b14 <__isoc99_sscanf@plt>
   14f7c:	cmp	r0, #1
   14f80:	mvnne	r5, #0
   14f84:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14f88:	ldrb	r3, [sp, #8]
   14f8c:	mov	r2, r4
   14f90:	mov	r1, r7
   14f94:	mov	r0, r6
   14f98:	bl	14454 <table_set_uchar@@Base>
   14f9c:	mov	r5, #0
   14fa0:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14fa4:	add	r2, sp, #8
   14fa8:	movw	r1, #20844	; 0x516c
   14fac:	movt	r1, #1
   14fb0:	mov	r0, r5
   14fb4:	bl	11b14 <__isoc99_sscanf@plt>
   14fb8:	cmp	r0, #1
   14fbc:	mvnne	r5, #0
   14fc0:	bne	14a14 <table_cell_from_buffer@@Base+0xb4>
   14fc4:	ldr	r3, [sp, #8]
   14fc8:	mov	r2, r4
   14fcc:	mov	r1, r7
   14fd0:	mov	r0, r6
   14fd4:	bl	14478 <table_set_ptr@@Base>
   14fd8:	mov	r5, #0
   14fdc:	b	14a14 <table_cell_from_buffer@@Base+0xb4>
   14fe0:	mov	r5, #0
   14fe4:	b	14a14 <table_cell_from_buffer@@Base+0xb4>

00014fe8 <table_get_cell_ptr@@Base>:
   14fe8:	str	r4, [sp, #-8]!
   14fec:	str	lr, [sp, #4]
   14ff0:	mov	r4, r2
   14ff4:	bl	139c4 <table_get_row_ptr@@Base>
   14ff8:	ldr	r0, [r0]
   14ffc:	add	r0, r0, r4, lsl #2
   15000:	ldr	r4, [sp]
   15004:	add	sp, sp, #4
   15008:	pop	{pc}		; (ldr pc, [sp], #4)

0001500c <table_cell_init@@Base>:
   1500c:	str	r4, [sp, #-8]!
   15010:	str	lr, [sp, #4]
   15014:	bl	14fe8 <table_get_cell_ptr@@Base>
   15018:	mov	r3, #0
   1501c:	str	r3, [r0]
   15020:	ldr	r4, [sp]
   15024:	add	sp, sp, #4
   15028:	pop	{pc}		; (ldr pc, [sp], #4)

0001502c <table_cell_destroy@@Base>:
   1502c:	strd	r4, [sp, #-16]!
   15030:	str	r6, [sp, #8]
   15034:	str	lr, [sp, #12]
   15038:	mov	r5, r0
   1503c:	mov	r6, r1
   15040:	mov	r4, r2
   15044:	mov	r1, r2
   15048:	bl	12848 <table_get_column_data_type@@Base>
   1504c:	cmp	r0, #23
   15050:	bne	15064 <table_cell_destroy@@Base+0x38>
   15054:	ldrd	r4, [sp]
   15058:	ldr	r6, [sp, #8]
   1505c:	add	sp, sp, #12
   15060:	pop	{pc}		; (ldr pc, [sp], #4)
   15064:	mov	r2, r4
   15068:	mov	r1, r6
   1506c:	mov	r0, r5
   15070:	bl	14fe8 <table_get_cell_ptr@@Base>
   15074:	ldr	r0, [r0]
   15078:	cmp	r0, #0
   1507c:	beq	15054 <table_cell_destroy@@Base+0x28>
   15080:	bl	11a9c <free@plt>
   15084:	b	15054 <table_cell_destroy@@Base+0x28>

00015088 <table_cell_nullify@@Base>:
   15088:	str	r4, [sp, #-8]!
   1508c:	str	lr, [sp, #4]
   15090:	bl	14fe8 <table_get_cell_ptr@@Base>
   15094:	mov	r4, r0
   15098:	ldr	r0, [r0]
   1509c:	cmp	r0, #0
   150a0:	beq	150b0 <table_cell_nullify@@Base+0x28>
   150a4:	bl	11a9c <free@plt>
   150a8:	mov	r3, #0
   150ac:	str	r3, [r4]
   150b0:	mov	r0, #0
   150b4:	ldr	r4, [sp]
   150b8:	add	sp, sp, #4
   150bc:	pop	{pc}		; (ldr pc, [sp], #4)

000150c0 <__libc_csu_init@@Base>:
   150c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   150c4:	mov	r7, r0
   150c8:	ldr	r6, [pc, #72]	; 15118 <__libc_csu_init@@Base+0x58>
   150cc:	ldr	r5, [pc, #72]	; 1511c <__libc_csu_init@@Base+0x5c>
   150d0:	add	r6, pc, r6
   150d4:	add	r5, pc, r5
   150d8:	sub	r6, r6, r5
   150dc:	mov	r8, r1
   150e0:	mov	r9, r2
   150e4:	bl	11a70 <strcmp@plt-0x20>
   150e8:	asrs	r6, r6, #2
   150ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   150f0:	mov	r4, #0
   150f4:	add	r4, r4, #1
   150f8:	ldr	r3, [r5], #4
   150fc:	mov	r2, r9
   15100:	mov	r1, r8
   15104:	mov	r0, r7
   15108:	blx	r3
   1510c:	cmp	r6, r4
   15110:	bne	150f4 <__libc_csu_init@@Base+0x34>
   15114:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15118:	andeq	r0, r1, ip, lsr lr
   1511c:	andeq	r0, r1, r4, lsr lr

00015120 <__libc_csu_fini@@Base>:
   15120:	bx	lr

Disassembly of section .fini:

00015124 <.fini>:
   15124:	push	{r3, lr}
   15128:	pop	{r3, pc}
