
../repos/coreutils/src/join:     file format elf32-littlearm


Disassembly of section .init:

00010e28 <.init>:
   10e28:	push	{r3, lr}
   10e2c:	bl	11154 <__assert_fail@plt+0x48>
   10e30:	pop	{r3, pc}

Disassembly of section .plt:

00010e34 <fdopen@plt-0x14>:
   10e34:	push	{lr}		; (str lr, [sp, #-4]!)
   10e38:	ldr	lr, [pc, #4]	; 10e44 <fdopen@plt-0x4>
   10e3c:	add	lr, pc, lr
   10e40:	ldr	pc, [lr, #8]!
   10e44:			; <UNDEFINED> instruction: 0x0001c1bc

00010e48 <fdopen@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #28, 20	; 0x1c000
   10e50:	ldr	pc, [ip, #444]!	; 0x1bc

00010e54 <calloc@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #28, 20	; 0x1c000
   10e5c:	ldr	pc, [ip, #436]!	; 0x1b4

00010e60 <fputs_unlocked@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #28, 20	; 0x1c000
   10e68:	ldr	pc, [ip, #428]!	; 0x1ac

00010e6c <strcmp@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #28, 20	; 0x1c000
   10e74:	ldr	pc, [ip, #420]!	; 0x1a4

00010e78 <posix_fadvise64@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #28, 20	; 0x1c000
   10e80:	ldr	pc, [ip, #412]!	; 0x19c

00010e84 <printf@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #28, 20	; 0x1c000
   10e8c:	ldr	pc, [ip, #404]!	; 0x194

00010e90 <fflush@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #28, 20	; 0x1c000
   10e98:	ldr	pc, [ip, #396]!	; 0x18c

00010e9c <free@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #28, 20	; 0x1c000
   10ea4:	ldr	pc, [ip, #388]!	; 0x184

00010ea8 <_exit@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #28, 20	; 0x1c000
   10eb0:	ldr	pc, [ip, #380]!	; 0x17c

00010eb4 <memcpy@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #28, 20	; 0x1c000
   10ebc:	ldr	pc, [ip, #372]!	; 0x174

00010ec0 <mbsinit@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #28, 20	; 0x1c000
   10ec8:	ldr	pc, [ip, #364]!	; 0x16c

00010ecc <fwrite_unlocked@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #28, 20	; 0x1c000
   10ed4:	ldr	pc, [ip, #356]!	; 0x164

00010ed8 <memcmp@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #28, 20	; 0x1c000
   10ee0:	ldr	pc, [ip, #348]!	; 0x15c

00010ee4 <fputc_unlocked@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #28, 20	; 0x1c000
   10eec:	ldr	pc, [ip, #340]!	; 0x154

00010ef0 <getc_unlocked@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #28, 20	; 0x1c000
   10ef8:	ldr	pc, [ip, #332]!	; 0x14c

00010efc <realloc@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #28, 20	; 0x1c000
   10f04:	ldr	pc, [ip, #324]!	; 0x144

00010f08 <textdomain@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #28, 20	; 0x1c000
   10f10:	ldr	pc, [ip, #316]!	; 0x13c

00010f14 <iswprint@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #28, 20	; 0x1c000
   10f1c:	ldr	pc, [ip, #308]!	; 0x134

00010f20 <fwrite@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #28, 20	; 0x1c000
   10f28:	ldr	pc, [ip, #300]!	; 0x12c

00010f2c <lseek64@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #28, 20	; 0x1c000
   10f34:	ldr	pc, [ip, #292]!	; 0x124

00010f38 <__ctype_get_mb_cur_max@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #28, 20	; 0x1c000
   10f40:	ldr	pc, [ip, #284]!	; 0x11c

00010f44 <__fpending@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #28, 20	; 0x1c000
   10f4c:	ldr	pc, [ip, #276]!	; 0x114

00010f50 <ferror_unlocked@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #28, 20	; 0x1c000
   10f58:	ldr	pc, [ip, #268]!	; 0x10c

00010f5c <mbrtowc@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #28, 20	; 0x1c000
   10f64:	ldr	pc, [ip, #260]!	; 0x104

00010f68 <error@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #28, 20	; 0x1c000
   10f70:	ldr	pc, [ip, #252]!	; 0xfc

00010f74 <strcoll@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #28, 20	; 0x1c000
   10f7c:	ldr	pc, [ip, #244]!	; 0xf4

00010f80 <malloc@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #28, 20	; 0x1c000
   10f88:	ldr	pc, [ip, #236]!	; 0xec

00010f8c <__libc_start_main@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #28, 20	; 0x1c000
   10f94:	ldr	pc, [ip, #228]!	; 0xe4

00010f98 <__freading@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #28, 20	; 0x1c000
   10fa0:	ldr	pc, [ip, #220]!	; 0xdc

00010fa4 <__gmon_start__@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #28, 20	; 0x1c000
   10fac:	ldr	pc, [ip, #212]!	; 0xd4

00010fb0 <getopt_long@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #28, 20	; 0x1c000
   10fb8:	ldr	pc, [ip, #204]!	; 0xcc

00010fbc <__ctype_b_loc@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #28, 20	; 0x1c000
   10fc4:	ldr	pc, [ip, #196]!	; 0xc4

00010fc8 <exit@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #28, 20	; 0x1c000
   10fd0:	ldr	pc, [ip, #188]!	; 0xbc

00010fd4 <gettext@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #28, 20	; 0x1c000
   10fdc:	ldr	pc, [ip, #180]!	; 0xb4

00010fe0 <strtoul@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #28, 20	; 0x1c000
   10fe8:	ldr	pc, [ip, #172]!	; 0xac

00010fec <strlen@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #28, 20	; 0x1c000
   10ff4:	ldr	pc, [ip, #164]!	; 0xa4

00010ff8 <strchr@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #28, 20	; 0x1c000
   11000:	ldr	pc, [ip, #156]!	; 0x9c

00011004 <fprintf@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #28, 20	; 0x1c000
   1100c:	ldr	pc, [ip, #148]!	; 0x94

00011010 <__errno_location@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #28, 20	; 0x1c000
   11018:	ldr	pc, [ip, #140]!	; 0x8c

0001101c <__cxa_atexit@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #28, 20	; 0x1c000
   11024:	ldr	pc, [ip, #132]!	; 0x84

00011028 <memset@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #28, 20	; 0x1c000
   11030:	ldr	pc, [ip, #124]!	; 0x7c

00011034 <fileno@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #28, 20	; 0x1c000
   1103c:	ldr	pc, [ip, #116]!	; 0x74

00011040 <strtoumax@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #28, 20	; 0x1c000
   11048:	ldr	pc, [ip, #108]!	; 0x6c

0001104c <memchr@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #28, 20	; 0x1c000
   11054:	ldr	pc, [ip, #100]!	; 0x64

00011058 <fclose@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #28, 20	; 0x1c000
   11060:	ldr	pc, [ip, #92]!	; 0x5c

00011064 <fseeko64@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #28, 20	; 0x1c000
   1106c:	ldr	pc, [ip, #84]!	; 0x54

00011070 <fcntl64@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #28, 20	; 0x1c000
   11078:	ldr	pc, [ip, #76]!	; 0x4c

0001107c <setlocale@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #28, 20	; 0x1c000
   11084:	ldr	pc, [ip, #68]!	; 0x44

00011088 <toupper@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #28, 20	; 0x1c000
   11090:	ldr	pc, [ip, #60]!	; 0x3c

00011094 <strrchr@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #28, 20	; 0x1c000
   1109c:	ldr	pc, [ip, #52]!	; 0x34

000110a0 <nl_langinfo@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #28, 20	; 0x1c000
   110a8:	ldr	pc, [ip, #44]!	; 0x2c

000110ac <fopen64@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #28, 20	; 0x1c000
   110b4:	ldr	pc, [ip, #36]!	; 0x24

000110b8 <strpbrk@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #28, 20	; 0x1c000
   110c0:	ldr	pc, [ip, #28]!

000110c4 <bindtextdomain@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #28, 20	; 0x1c000
   110cc:	ldr	pc, [ip, #20]!

000110d0 <strncmp@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #28, 20	; 0x1c000
   110d8:	ldr	pc, [ip, #12]!

000110dc <abort@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #28, 20	; 0x1c000
   110e4:	ldr	pc, [ip, #4]!

000110e8 <feof_unlocked@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #110592	; 0x1b000
   110f0:	ldr	pc, [ip, #4092]!	; 0xffc

000110f4 <close@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #110592	; 0x1b000
   110fc:	ldr	pc, [ip, #4084]!	; 0xff4

00011100 <putchar_unlocked@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #110592	; 0x1b000
   11108:	ldr	pc, [ip, #4076]!	; 0xfec

0001110c <__assert_fail@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #110592	; 0x1b000
   11114:	ldr	pc, [ip, #4068]!	; 0xfe4

Disassembly of section .text:

00011118 <.text>:
   11118:	mov	fp, #0
   1111c:	mov	lr, #0
   11120:	pop	{r1}		; (ldr r1, [sp], #4)
   11124:	mov	r2, sp
   11128:	push	{r2}		; (str r2, [sp, #-4]!)
   1112c:	push	{r0}		; (str r0, [sp, #-4]!)
   11130:	ldr	ip, [pc, #16]	; 11148 <__assert_fail@plt+0x3c>
   11134:	push	{ip}		; (str ip, [sp, #-4]!)
   11138:	ldr	r0, [pc, #12]	; 1114c <__assert_fail@plt+0x40>
   1113c:	ldr	r3, [pc, #12]	; 11150 <__assert_fail@plt+0x44>
   11140:	bl	10f8c <__libc_start_main@plt>
   11144:	bl	110dc <abort@plt>
   11148:	andeq	sl, r1, r0, ror #27
   1114c:	muleq	r1, ip, r5
   11150:	andeq	sl, r1, r0, lsl #27
   11154:	ldr	r3, [pc, #20]	; 11170 <__assert_fail@plt+0x64>
   11158:	ldr	r2, [pc, #20]	; 11174 <__assert_fail@plt+0x68>
   1115c:	add	r3, pc, r3
   11160:	ldr	r2, [r3, r2]
   11164:	cmp	r2, #0
   11168:	bxeq	lr
   1116c:	b	10fa4 <__gmon_start__@plt>
   11170:	muleq	r1, ip, lr
   11174:	strdeq	r0, [r0], -ip
   11178:	ldr	r0, [pc, #24]	; 11198 <__assert_fail@plt+0x8c>
   1117c:	ldr	r3, [pc, #24]	; 1119c <__assert_fail@plt+0x90>
   11180:	cmp	r3, r0
   11184:	bxeq	lr
   11188:	ldr	r3, [pc, #16]	; 111a0 <__assert_fail@plt+0x94>
   1118c:	cmp	r3, #0
   11190:	bxeq	lr
   11194:	bx	r3
   11198:	andeq	sp, r2, r4, ror #2
   1119c:	andeq	sp, r2, r4, ror #2
   111a0:	andeq	r0, r0, r0
   111a4:	ldr	r0, [pc, #36]	; 111d0 <__assert_fail@plt+0xc4>
   111a8:	ldr	r1, [pc, #36]	; 111d4 <__assert_fail@plt+0xc8>
   111ac:	sub	r1, r1, r0
   111b0:	asr	r1, r1, #2
   111b4:	add	r1, r1, r1, lsr #31
   111b8:	asrs	r1, r1, #1
   111bc:	bxeq	lr
   111c0:	ldr	r3, [pc, #16]	; 111d8 <__assert_fail@plt+0xcc>
   111c4:	cmp	r3, #0
   111c8:	bxeq	lr
   111cc:	bx	r3
   111d0:	andeq	sp, r2, r4, ror #2
   111d4:	andeq	sp, r2, r4, ror #2
   111d8:	andeq	r0, r0, r0
   111dc:	push	{r4, lr}
   111e0:	ldr	r4, [pc, #24]	; 11200 <__assert_fail@plt+0xf4>
   111e4:	ldrb	r3, [r4]
   111e8:	cmp	r3, #0
   111ec:	popne	{r4, pc}
   111f0:	bl	11178 <__assert_fail@plt+0x6c>
   111f4:	mov	r3, #1
   111f8:	strb	r3, [r4]
   111fc:	pop	{r4, pc}
   11200:	andeq	sp, r2, ip, lsl #3
   11204:	b	111a4 <__assert_fail@plt+0x98>
   11208:	str	fp, [sp, #-8]!
   1120c:	str	lr, [sp, #4]
   11210:	add	fp, sp, #4
   11214:	sub	sp, sp, #8
   11218:	mov	r3, r0
   1121c:	strb	r3, [fp, #-5]
   11220:	bl	10fbc <__ctype_b_loc@plt>
   11224:	mov	r3, r0
   11228:	ldr	r2, [r3]
   1122c:	ldrb	r3, [fp, #-5]
   11230:	lsl	r3, r3, #1
   11234:	add	r3, r2, r3
   11238:	ldrh	r3, [r3]
   1123c:	and	r3, r3, #1
   11240:	cmp	r3, #0
   11244:	bne	11254 <__assert_fail@plt+0x148>
   11248:	ldrb	r3, [fp, #-5]
   1124c:	cmp	r3, #10
   11250:	bne	1125c <__assert_fail@plt+0x150>
   11254:	mov	r3, #1
   11258:	b	11260 <__assert_fail@plt+0x154>
   1125c:	mov	r3, #0
   11260:	and	r3, r3, #1
   11264:	uxtb	r3, r3
   11268:	mov	r0, r3
   1126c:	sub	sp, fp, #4
   11270:	ldr	fp, [sp]
   11274:	add	sp, sp, #4
   11278:	pop	{pc}		; (ldr pc, [sp], #4)
   1127c:	str	fp, [sp, #-8]!
   11280:	str	lr, [sp, #4]
   11284:	add	fp, sp, #4
   11288:	sub	sp, sp, #80	; 0x50
   1128c:	str	r0, [fp, #-80]	; 0xffffffb0
   11290:	movw	r2, #44924	; 0xaf7c
   11294:	movt	r2, #1
   11298:	sub	r3, fp, #72	; 0x48
   1129c:	ldrd	r0, [r2]
   112a0:	strd	r0, [r3]
   112a4:	ldrd	r0, [r2, #8]
   112a8:	strd	r0, [r3, #8]
   112ac:	ldrd	r0, [r2, #16]
   112b0:	strd	r0, [r3, #16]
   112b4:	ldrd	r0, [r2, #24]
   112b8:	strd	r0, [r3, #24]
   112bc:	ldrd	r0, [r2, #32]
   112c0:	strd	r0, [r3, #32]
   112c4:	ldrd	r0, [r2, #40]	; 0x28
   112c8:	strd	r0, [r3, #40]	; 0x28
   112cc:	ldrd	r0, [r2, #48]	; 0x30
   112d0:	strd	r0, [r3, #48]	; 0x30
   112d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   112d8:	str	r3, [fp, #-8]
   112dc:	sub	r3, fp, #72	; 0x48
   112e0:	str	r3, [fp, #-12]
   112e4:	b	112f4 <__assert_fail@plt+0x1e8>
   112e8:	ldr	r3, [fp, #-12]
   112ec:	add	r3, r3, #8
   112f0:	str	r3, [fp, #-12]
   112f4:	ldr	r3, [fp, #-12]
   112f8:	ldr	r3, [r3]
   112fc:	cmp	r3, #0
   11300:	beq	11324 <__assert_fail@plt+0x218>
   11304:	ldr	r3, [fp, #-12]
   11308:	ldr	r3, [r3]
   1130c:	mov	r1, r3
   11310:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11314:	bl	10e6c <strcmp@plt>
   11318:	mov	r3, r0
   1131c:	cmp	r3, #0
   11320:	bne	112e8 <__assert_fail@plt+0x1dc>
   11324:	ldr	r3, [fp, #-12]
   11328:	ldr	r3, [r3, #4]
   1132c:	cmp	r3, #0
   11330:	beq	11340 <__assert_fail@plt+0x234>
   11334:	ldr	r3, [fp, #-12]
   11338:	ldr	r3, [r3, #4]
   1133c:	str	r3, [fp, #-8]
   11340:	movw	r0, #44552	; 0xae08
   11344:	movt	r0, #1
   11348:	bl	10fd4 <gettext@plt>
   1134c:	mov	r3, r0
   11350:	movw	r2, #44576	; 0xae20
   11354:	movt	r2, #1
   11358:	movw	r1, #44616	; 0xae48
   1135c:	movt	r1, #1
   11360:	mov	r0, r3
   11364:	bl	10e84 <printf@plt>
   11368:	mov	r1, #0
   1136c:	mov	r0, #5
   11370:	bl	1107c <setlocale@plt>
   11374:	str	r0, [fp, #-16]
   11378:	ldr	r3, [fp, #-16]
   1137c:	cmp	r3, #0
   11380:	beq	113cc <__assert_fail@plt+0x2c0>
   11384:	mov	r2, #3
   11388:	movw	r1, #44632	; 0xae58
   1138c:	movt	r1, #1
   11390:	ldr	r0, [fp, #-16]
   11394:	bl	110d0 <strncmp@plt>
   11398:	mov	r3, r0
   1139c:	cmp	r3, #0
   113a0:	beq	113cc <__assert_fail@plt+0x2c0>
   113a4:	movw	r0, #44636	; 0xae5c
   113a8:	movt	r0, #1
   113ac:	bl	10fd4 <gettext@plt>
   113b0:	mov	r2, r0
   113b4:	movw	r3, #53636	; 0xd184
   113b8:	movt	r3, #2
   113bc:	ldr	r3, [r3]
   113c0:	mov	r1, r3
   113c4:	mov	r0, r2
   113c8:	bl	10e60 <fputs_unlocked@plt>
   113cc:	movw	r0, #44708	; 0xaea4
   113d0:	movt	r0, #1
   113d4:	bl	10fd4 <gettext@plt>
   113d8:	mov	r3, r0
   113dc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   113e0:	movw	r1, #44576	; 0xae20
   113e4:	movt	r1, #1
   113e8:	mov	r0, r3
   113ec:	bl	10e84 <printf@plt>
   113f0:	movw	r0, #44736	; 0xaec0
   113f4:	movt	r0, #1
   113f8:	bl	10fd4 <gettext@plt>
   113fc:	ldr	r2, [fp, #-8]
   11400:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11404:	cmp	r2, r3
   11408:	bne	11418 <__assert_fail@plt+0x30c>
   1140c:	movw	r3, #44788	; 0xaef4
   11410:	movt	r3, #1
   11414:	b	11420 <__assert_fail@plt+0x314>
   11418:	movw	r3, #44800	; 0xaf00
   1141c:	movt	r3, #1
   11420:	mov	r2, r3
   11424:	ldr	r1, [fp, #-8]
   11428:	bl	10e84 <printf@plt>
   1142c:	nop	{0}
   11430:	sub	sp, fp, #4
   11434:	ldr	fp, [sp]
   11438:	add	sp, sp, #4
   1143c:	pop	{pc}		; (ldr pc, [sp], #4)
   11440:	str	r4, [sp, #-12]!
   11444:	str	fp, [sp, #4]
   11448:	str	lr, [sp, #8]
   1144c:	add	fp, sp, #8
   11450:	sub	sp, sp, #12
   11454:	str	r0, [fp, #-16]
   11458:	ldr	r3, [fp, #-16]
   1145c:	cmp	r3, #0
   11460:	beq	1149c <__assert_fail@plt+0x390>
   11464:	movw	r3, #53624	; 0xd178
   11468:	movt	r3, #2
   1146c:	ldr	r4, [r3]
   11470:	movw	r0, #45188	; 0xb084
   11474:	movt	r0, #1
   11478:	bl	10fd4 <gettext@plt>
   1147c:	mov	r1, r0
   11480:	movw	r3, #53768	; 0xd208
   11484:	movt	r3, #2
   11488:	ldr	r3, [r3]
   1148c:	mov	r2, r3
   11490:	mov	r0, r4
   11494:	bl	11004 <fprintf@plt>
   11498:	b	11638 <__assert_fail@plt+0x52c>
   1149c:	movw	r0, #45228	; 0xb0ac
   114a0:	movt	r0, #1
   114a4:	bl	10fd4 <gettext@plt>
   114a8:	mov	r2, r0
   114ac:	movw	r3, #53768	; 0xd208
   114b0:	movt	r3, #2
   114b4:	ldr	r3, [r3]
   114b8:	mov	r1, r3
   114bc:	mov	r0, r2
   114c0:	bl	10e84 <printf@plt>
   114c4:	movw	r0, #45264	; 0xb0d0
   114c8:	movt	r0, #1
   114cc:	bl	10fd4 <gettext@plt>
   114d0:	mov	r2, r0
   114d4:	movw	r3, #53636	; 0xd184
   114d8:	movt	r3, #2
   114dc:	ldr	r3, [r3]
   114e0:	mov	r1, r3
   114e4:	mov	r0, r2
   114e8:	bl	10e60 <fputs_unlocked@plt>
   114ec:	movw	r0, #45416	; 0xb168
   114f0:	movt	r0, #1
   114f4:	bl	10fd4 <gettext@plt>
   114f8:	mov	r2, r0
   114fc:	movw	r3, #53636	; 0xd184
   11500:	movt	r3, #2
   11504:	ldr	r3, [r3]
   11508:	mov	r1, r3
   1150c:	mov	r0, r2
   11510:	bl	10e60 <fputs_unlocked@plt>
   11514:	movw	r0, #45476	; 0xb1a4
   11518:	movt	r0, #1
   1151c:	bl	10fd4 <gettext@plt>
   11520:	mov	r2, r0
   11524:	movw	r3, #53636	; 0xd184
   11528:	movt	r3, #2
   1152c:	ldr	r3, [r3]
   11530:	mov	r1, r3
   11534:	mov	r0, r2
   11538:	bl	10e60 <fputs_unlocked@plt>
   1153c:	movw	r0, #45700	; 0xb284
   11540:	movt	r0, #1
   11544:	bl	10fd4 <gettext@plt>
   11548:	mov	r2, r0
   1154c:	movw	r3, #53636	; 0xd184
   11550:	movt	r3, #2
   11554:	ldr	r3, [r3]
   11558:	mov	r1, r3
   1155c:	mov	r0, r2
   11560:	bl	10e60 <fputs_unlocked@plt>
   11564:	movw	r0, #45972	; 0xb394
   11568:	movt	r0, #1
   1156c:	bl	10fd4 <gettext@plt>
   11570:	mov	r2, r0
   11574:	movw	r3, #53636	; 0xd184
   11578:	movt	r3, #2
   1157c:	ldr	r3, [r3]
   11580:	mov	r1, r3
   11584:	mov	r0, r2
   11588:	bl	10e60 <fputs_unlocked@plt>
   1158c:	movw	r0, #46504	; 0xb5a8
   11590:	movt	r0, #1
   11594:	bl	10fd4 <gettext@plt>
   11598:	mov	r2, r0
   1159c:	movw	r3, #53636	; 0xd184
   115a0:	movt	r3, #2
   115a4:	ldr	r3, [r3]
   115a8:	mov	r1, r3
   115ac:	mov	r0, r2
   115b0:	bl	10e60 <fputs_unlocked@plt>
   115b4:	movw	r0, #46568	; 0xb5e8
   115b8:	movt	r0, #1
   115bc:	bl	10fd4 <gettext@plt>
   115c0:	mov	r2, r0
   115c4:	movw	r3, #53636	; 0xd184
   115c8:	movt	r3, #2
   115cc:	ldr	r3, [r3]
   115d0:	mov	r1, r3
   115d4:	mov	r0, r2
   115d8:	bl	10e60 <fputs_unlocked@plt>
   115dc:	movw	r0, #46616	; 0xb618
   115e0:	movt	r0, #1
   115e4:	bl	10fd4 <gettext@plt>
   115e8:	mov	r2, r0
   115ec:	movw	r3, #53636	; 0xd184
   115f0:	movt	r3, #2
   115f4:	ldr	r3, [r3]
   115f8:	mov	r1, r3
   115fc:	mov	r0, r2
   11600:	bl	10e60 <fputs_unlocked@plt>
   11604:	movw	r0, #46672	; 0xb650
   11608:	movt	r0, #1
   1160c:	bl	10fd4 <gettext@plt>
   11610:	mov	r2, r0
   11614:	movw	r3, #53636	; 0xd184
   11618:	movt	r3, #2
   1161c:	ldr	r3, [r3]
   11620:	mov	r1, r3
   11624:	mov	r0, r2
   11628:	bl	10e60 <fputs_unlocked@plt>
   1162c:	movw	r0, #47492	; 0xb984
   11630:	movt	r0, #1
   11634:	bl	1127c <__assert_fail@plt+0x170>
   11638:	ldr	r0, [fp, #-16]
   1163c:	bl	10fc8 <exit@plt>
   11640:	str	fp, [sp, #-8]!
   11644:	str	lr, [sp, #4]
   11648:	add	fp, sp, #4
   1164c:	sub	sp, sp, #16
   11650:	str	r0, [fp, #-8]
   11654:	str	r1, [fp, #-12]
   11658:	str	r2, [fp, #-16]
   1165c:	ldr	r3, [fp, #-8]
   11660:	ldr	r2, [r3, #12]
   11664:	ldr	r3, [fp, #-8]
   11668:	ldr	r3, [r3, #16]
   1166c:	cmp	r2, r3
   11670:	bcc	1169c <__assert_fail@plt+0x590>
   11674:	ldr	r3, [fp, #-8]
   11678:	ldr	r0, [r3, #20]
   1167c:	ldr	r3, [fp, #-8]
   11680:	add	r3, r3, #16
   11684:	mov	r2, #8
   11688:	mov	r1, r3
   1168c:	bl	182e0 <__assert_fail@plt+0x71d4>
   11690:	mov	r2, r0
   11694:	ldr	r3, [fp, #-8]
   11698:	str	r2, [r3, #20]
   1169c:	ldr	r3, [fp, #-8]
   116a0:	ldr	r2, [r3, #20]
   116a4:	ldr	r3, [fp, #-8]
   116a8:	ldr	r3, [r3, #12]
   116ac:	lsl	r3, r3, #3
   116b0:	add	r3, r2, r3
   116b4:	ldr	r2, [fp, #-12]
   116b8:	str	r2, [r3]
   116bc:	ldr	r3, [fp, #-8]
   116c0:	ldr	r2, [r3, #20]
   116c4:	ldr	r3, [fp, #-8]
   116c8:	ldr	r3, [r3, #12]
   116cc:	lsl	r3, r3, #3
   116d0:	add	r3, r2, r3
   116d4:	ldr	r2, [fp, #-16]
   116d8:	str	r2, [r3, #4]
   116dc:	ldr	r3, [fp, #-8]
   116e0:	ldr	r3, [r3, #12]
   116e4:	add	r2, r3, #1
   116e8:	ldr	r3, [fp, #-8]
   116ec:	str	r2, [r3, #12]
   116f0:	nop	{0}
   116f4:	sub	sp, fp, #4
   116f8:	ldr	fp, [sp]
   116fc:	add	sp, sp, #4
   11700:	pop	{pc}		; (ldr pc, [sp], #4)
   11704:	str	fp, [sp, #-8]!
   11708:	str	lr, [sp, #4]
   1170c:	add	fp, sp, #4
   11710:	sub	sp, sp, #24
   11714:	str	r0, [fp, #-24]	; 0xffffffe8
   11718:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1171c:	ldr	r3, [r3, #8]
   11720:	str	r3, [fp, #-8]
   11724:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11728:	ldr	r3, [r3, #4]
   1172c:	sub	r3, r3, #1
   11730:	ldr	r2, [fp, #-8]
   11734:	add	r3, r2, r3
   11738:	str	r3, [fp, #-16]
   1173c:	ldr	r2, [fp, #-8]
   11740:	ldr	r3, [fp, #-16]
   11744:	cmp	r2, r3
   11748:	beq	1191c <__assert_fail@plt+0x810>
   1174c:	movw	r3, #53524	; 0xd114
   11750:	movt	r3, #2
   11754:	ldr	r3, [r3]
   11758:	cmp	r3, #0
   1175c:	blt	117d8 <__assert_fail@plt+0x6cc>
   11760:	movw	r3, #53524	; 0xd114
   11764:	movt	r3, #2
   11768:	ldr	r3, [r3]
   1176c:	cmp	r3, #10
   11770:	beq	117d8 <__assert_fail@plt+0x6cc>
   11774:	b	117a0 <__assert_fail@plt+0x694>
   11778:	ldr	r2, [fp, #-20]	; 0xffffffec
   1177c:	ldr	r3, [fp, #-8]
   11780:	sub	r3, r2, r3
   11784:	mov	r2, r3
   11788:	ldr	r1, [fp, #-8]
   1178c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11790:	bl	11640 <__assert_fail@plt+0x534>
   11794:	ldr	r3, [fp, #-20]	; 0xffffffec
   11798:	add	r3, r3, #1
   1179c:	str	r3, [fp, #-8]
   117a0:	movw	r3, #53524	; 0xd114
   117a4:	movt	r3, #2
   117a8:	ldr	r1, [r3]
   117ac:	ldr	r2, [fp, #-16]
   117b0:	ldr	r3, [fp, #-8]
   117b4:	sub	r3, r2, r3
   117b8:	mov	r2, r3
   117bc:	ldr	r0, [fp, #-8]
   117c0:	bl	1104c <memchr@plt>
   117c4:	str	r0, [fp, #-20]	; 0xffffffec
   117c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   117cc:	cmp	r3, #0
   117d0:	bne	11778 <__assert_fail@plt+0x66c>
   117d4:	b	118fc <__assert_fail@plt+0x7f0>
   117d8:	movw	r3, #53524	; 0xd114
   117dc:	movt	r3, #2
   117e0:	ldr	r3, [r3]
   117e4:	cmp	r3, #0
   117e8:	bge	118fc <__assert_fail@plt+0x7f0>
   117ec:	b	1180c <__assert_fail@plt+0x700>
   117f0:	ldr	r3, [fp, #-8]
   117f4:	add	r3, r3, #1
   117f8:	str	r3, [fp, #-8]
   117fc:	ldr	r2, [fp, #-8]
   11800:	ldr	r3, [fp, #-16]
   11804:	cmp	r2, r3
   11808:	beq	11924 <__assert_fail@plt+0x818>
   1180c:	ldr	r3, [fp, #-8]
   11810:	ldrb	r3, [r3]
   11814:	mov	r0, r3
   11818:	bl	11208 <__assert_fail@plt+0xfc>
   1181c:	mov	r3, r0
   11820:	cmp	r3, #0
   11824:	bne	117f0 <__assert_fail@plt+0x6e4>
   11828:	ldr	r3, [fp, #-8]
   1182c:	add	r3, r3, #1
   11830:	str	r3, [fp, #-12]
   11834:	b	11844 <__assert_fail@plt+0x738>
   11838:	ldr	r3, [fp, #-12]
   1183c:	add	r3, r3, #1
   11840:	str	r3, [fp, #-12]
   11844:	ldr	r2, [fp, #-12]
   11848:	ldr	r3, [fp, #-16]
   1184c:	cmp	r2, r3
   11850:	beq	11878 <__assert_fail@plt+0x76c>
   11854:	ldr	r3, [fp, #-12]
   11858:	ldrb	r3, [r3]
   1185c:	mov	r0, r3
   11860:	bl	11208 <__assert_fail@plt+0xfc>
   11864:	mov	r3, r0
   11868:	eor	r3, r3, #1
   1186c:	uxtb	r3, r3
   11870:	cmp	r3, #0
   11874:	bne	11838 <__assert_fail@plt+0x72c>
   11878:	ldr	r2, [fp, #-12]
   1187c:	ldr	r3, [fp, #-8]
   11880:	sub	r3, r2, r3
   11884:	mov	r2, r3
   11888:	ldr	r1, [fp, #-8]
   1188c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11890:	bl	11640 <__assert_fail@plt+0x534>
   11894:	ldr	r2, [fp, #-12]
   11898:	ldr	r3, [fp, #-16]
   1189c:	cmp	r2, r3
   118a0:	beq	1192c <__assert_fail@plt+0x820>
   118a4:	ldr	r3, [fp, #-12]
   118a8:	add	r3, r3, #1
   118ac:	str	r3, [fp, #-8]
   118b0:	b	118c0 <__assert_fail@plt+0x7b4>
   118b4:	ldr	r3, [fp, #-8]
   118b8:	add	r3, r3, #1
   118bc:	str	r3, [fp, #-8]
   118c0:	ldr	r2, [fp, #-8]
   118c4:	ldr	r3, [fp, #-16]
   118c8:	cmp	r2, r3
   118cc:	beq	118ec <__assert_fail@plt+0x7e0>
   118d0:	ldr	r3, [fp, #-8]
   118d4:	ldrb	r3, [r3]
   118d8:	mov	r0, r3
   118dc:	bl	11208 <__assert_fail@plt+0xfc>
   118e0:	mov	r3, r0
   118e4:	cmp	r3, #0
   118e8:	bne	118b4 <__assert_fail@plt+0x7a8>
   118ec:	ldr	r2, [fp, #-8]
   118f0:	ldr	r3, [fp, #-16]
   118f4:	cmp	r2, r3
   118f8:	bne	11828 <__assert_fail@plt+0x71c>
   118fc:	ldr	r2, [fp, #-16]
   11900:	ldr	r3, [fp, #-8]
   11904:	sub	r3, r2, r3
   11908:	mov	r2, r3
   1190c:	ldr	r1, [fp, #-8]
   11910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11914:	bl	11640 <__assert_fail@plt+0x534>
   11918:	b	11930 <__assert_fail@plt+0x824>
   1191c:	nop	{0}
   11920:	b	11930 <__assert_fail@plt+0x824>
   11924:	nop	{0}
   11928:	b	11930 <__assert_fail@plt+0x824>
   1192c:	nop	{0}
   11930:	sub	sp, fp, #4
   11934:	ldr	fp, [sp]
   11938:	add	sp, sp, #4
   1193c:	pop	{pc}		; (ldr pc, [sp], #4)
   11940:	str	fp, [sp, #-8]!
   11944:	str	lr, [sp, #4]
   11948:	add	fp, sp, #4
   1194c:	sub	sp, sp, #8
   11950:	str	r0, [fp, #-8]
   11954:	ldr	r3, [fp, #-8]
   11958:	cmp	r3, #0
   1195c:	beq	1199c <__assert_fail@plt+0x890>
   11960:	ldr	r3, [fp, #-8]
   11964:	ldr	r3, [r3, #20]
   11968:	mov	r0, r3
   1196c:	bl	146d8 <__assert_fail@plt+0x35cc>
   11970:	ldr	r3, [fp, #-8]
   11974:	mov	r2, #0
   11978:	str	r2, [r3, #20]
   1197c:	ldr	r3, [fp, #-8]
   11980:	ldr	r3, [r3, #8]
   11984:	mov	r0, r3
   11988:	bl	146d8 <__assert_fail@plt+0x35cc>
   1198c:	ldr	r3, [fp, #-8]
   11990:	mov	r2, #0
   11994:	str	r2, [r3, #8]
   11998:	b	119a0 <__assert_fail@plt+0x894>
   1199c:	nop	{0}
   119a0:	sub	sp, fp, #4
   119a4:	ldr	fp, [sp]
   119a8:	add	sp, sp, #4
   119ac:	pop	{pc}		; (ldr pc, [sp], #4)
   119b0:	str	fp, [sp, #-8]!
   119b4:	str	lr, [sp, #4]
   119b8:	add	fp, sp, #4
   119bc:	sub	sp, sp, #40	; 0x28
   119c0:	str	r0, [fp, #-32]	; 0xffffffe0
   119c4:	str	r1, [fp, #-36]	; 0xffffffdc
   119c8:	str	r2, [fp, #-40]	; 0xffffffd8
   119cc:	str	r3, [fp, #-44]	; 0xffffffd4
   119d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   119d4:	ldr	r3, [r3, #12]
   119d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   119dc:	cmp	r2, r3
   119e0:	bcs	11a20 <__assert_fail@plt+0x914>
   119e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   119e8:	ldr	r2, [r3, #20]
   119ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   119f0:	lsl	r3, r3, #3
   119f4:	add	r3, r2, r3
   119f8:	ldr	r3, [r3]
   119fc:	str	r3, [fp, #-8]
   11a00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a04:	ldr	r2, [r3, #20]
   11a08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11a0c:	lsl	r3, r3, #3
   11a10:	add	r3, r2, r3
   11a14:	ldr	r3, [r3, #4]
   11a18:	str	r3, [fp, #-16]
   11a1c:	b	11a30 <__assert_fail@plt+0x924>
   11a20:	mov	r3, #0
   11a24:	str	r3, [fp, #-8]
   11a28:	mov	r3, #0
   11a2c:	str	r3, [fp, #-16]
   11a30:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11a34:	ldr	r3, [r3, #12]
   11a38:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11a3c:	cmp	r2, r3
   11a40:	bcs	11a80 <__assert_fail@plt+0x974>
   11a44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11a48:	ldr	r2, [r3, #20]
   11a4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11a50:	lsl	r3, r3, #3
   11a54:	add	r3, r2, r3
   11a58:	ldr	r3, [r3]
   11a5c:	str	r3, [fp, #-12]
   11a60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11a64:	ldr	r2, [r3, #20]
   11a68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11a6c:	lsl	r3, r3, #3
   11a70:	add	r3, r2, r3
   11a74:	ldr	r3, [r3, #4]
   11a78:	str	r3, [fp, #-20]	; 0xffffffec
   11a7c:	b	11a90 <__assert_fail@plt+0x984>
   11a80:	mov	r3, #0
   11a84:	str	r3, [fp, #-12]
   11a88:	mov	r3, #0
   11a8c:	str	r3, [fp, #-20]	; 0xffffffec
   11a90:	ldr	r3, [fp, #-16]
   11a94:	cmp	r3, #0
   11a98:	bne	11ab8 <__assert_fail@plt+0x9ac>
   11a9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11aa0:	cmp	r3, #0
   11aa4:	bne	11ab0 <__assert_fail@plt+0x9a4>
   11aa8:	mov	r3, #0
   11aac:	b	11ba8 <__assert_fail@plt+0xa9c>
   11ab0:	mvn	r3, #0
   11ab4:	b	11ba8 <__assert_fail@plt+0xa9c>
   11ab8:	ldr	r3, [fp, #-20]	; 0xffffffec
   11abc:	cmp	r3, #0
   11ac0:	bne	11acc <__assert_fail@plt+0x9c0>
   11ac4:	mov	r3, #1
   11ac8:	b	11ba8 <__assert_fail@plt+0xa9c>
   11acc:	movw	r3, #53756	; 0xd1fc
   11ad0:	movt	r3, #2
   11ad4:	ldrb	r3, [r3]
   11ad8:	cmp	r3, #0
   11adc:	beq	11b0c <__assert_fail@plt+0xa00>
   11ae0:	ldr	r2, [fp, #-20]	; 0xffffffec
   11ae4:	ldr	r3, [fp, #-16]
   11ae8:	cmp	r2, r3
   11aec:	movcc	r3, r2
   11af0:	movcs	r3, r3
   11af4:	mov	r2, r3
   11af8:	ldr	r1, [fp, #-12]
   11afc:	ldr	r0, [fp, #-8]
   11b00:	bl	14b5c <__assert_fail@plt+0x3a50>
   11b04:	str	r0, [fp, #-24]	; 0xffffffe8
   11b08:	b	11b64 <__assert_fail@plt+0xa58>
   11b0c:	movw	r3, #53688	; 0xd1b8
   11b10:	movt	r3, #2
   11b14:	ldrb	r3, [r3]
   11b18:	cmp	r3, #0
   11b1c:	beq	11b3c <__assert_fail@plt+0xa30>
   11b20:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b24:	ldr	r2, [fp, #-12]
   11b28:	ldr	r1, [fp, #-16]
   11b2c:	ldr	r0, [fp, #-8]
   11b30:	bl	18990 <__assert_fail@plt+0x7884>
   11b34:	mov	r3, r0
   11b38:	b	11ba8 <__assert_fail@plt+0xa9c>
   11b3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11b40:	ldr	r3, [fp, #-16]
   11b44:	cmp	r2, r3
   11b48:	movcc	r3, r2
   11b4c:	movcs	r3, r3
   11b50:	mov	r2, r3
   11b54:	ldr	r1, [fp, #-12]
   11b58:	ldr	r0, [fp, #-8]
   11b5c:	bl	10ed8 <memcmp@plt>
   11b60:	str	r0, [fp, #-24]	; 0xffffffe8
   11b64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b68:	cmp	r3, #0
   11b6c:	beq	11b78 <__assert_fail@plt+0xa6c>
   11b70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b74:	b	11ba8 <__assert_fail@plt+0xa9c>
   11b78:	ldr	r2, [fp, #-16]
   11b7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b80:	cmp	r2, r3
   11b84:	bcc	11ba4 <__assert_fail@plt+0xa98>
   11b88:	ldr	r2, [fp, #-16]
   11b8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b90:	cmp	r2, r3
   11b94:	movne	r3, #1
   11b98:	moveq	r3, #0
   11b9c:	uxtb	r3, r3
   11ba0:	b	11ba8 <__assert_fail@plt+0xa9c>
   11ba4:	mvn	r3, #0
   11ba8:	mov	r0, r3
   11bac:	sub	sp, fp, #4
   11bb0:	ldr	fp, [sp]
   11bb4:	add	sp, sp, #4
   11bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bbc:	str	r4, [sp, #-12]!
   11bc0:	str	fp, [sp, #4]
   11bc4:	str	lr, [sp, #8]
   11bc8:	add	fp, sp, #8
   11bcc:	sub	sp, sp, #44	; 0x2c
   11bd0:	str	r0, [fp, #-24]	; 0xffffffe8
   11bd4:	str	r1, [fp, #-28]	; 0xffffffe4
   11bd8:	str	r2, [fp, #-32]	; 0xffffffe0
   11bdc:	movw	r3, #53728	; 0xd1e0
   11be0:	movt	r3, #2
   11be4:	ldr	r3, [r3]
   11be8:	cmp	r3, #2
   11bec:	beq	11d8c <__assert_fail@plt+0xc80>
   11bf0:	movw	r3, #53728	; 0xd1e0
   11bf4:	movt	r3, #2
   11bf8:	ldr	r3, [r3]
   11bfc:	cmp	r3, #1
   11c00:	beq	11c18 <__assert_fail@plt+0xb0c>
   11c04:	movw	r3, #53692	; 0xd1bc
   11c08:	movt	r3, #2
   11c0c:	ldrb	r3, [r3]
   11c10:	cmp	r3, #0
   11c14:	beq	11d8c <__assert_fail@plt+0xc80>
   11c18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c1c:	sub	r2, r3, #1
   11c20:	movw	r3, #53696	; 0xd1c0
   11c24:	movt	r3, #2
   11c28:	ldrb	r3, [r3, r2]
   11c2c:	eor	r3, r3, #1
   11c30:	uxtb	r3, r3
   11c34:	cmp	r3, #0
   11c38:	beq	11d8c <__assert_fail@plt+0xc80>
   11c3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c40:	cmp	r3, #1
   11c44:	bne	11c58 <__assert_fail@plt+0xb4c>
   11c48:	movw	r3, #53512	; 0xd108
   11c4c:	movt	r3, #2
   11c50:	ldr	r3, [r3]
   11c54:	b	11c64 <__assert_fail@plt+0xb58>
   11c58:	movw	r3, #53516	; 0xd10c
   11c5c:	movt	r3, #2
   11c60:	ldr	r3, [r3]
   11c64:	str	r3, [fp, #-20]	; 0xffffffec
   11c68:	ldr	r3, [fp, #-20]	; 0xffffffec
   11c6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11c70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c78:	bl	119b0 <__assert_fail@plt+0x8a4>
   11c7c:	mov	r3, r0
   11c80:	cmp	r3, #0
   11c84:	ble	11d8c <__assert_fail@plt+0xc80>
   11c88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11c8c:	ldr	r3, [r3, #4]
   11c90:	str	r3, [fp, #-16]
   11c94:	ldr	r3, [fp, #-16]
   11c98:	cmp	r3, #0
   11c9c:	beq	11ccc <__assert_fail@plt+0xbc0>
   11ca0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11ca4:	ldr	r2, [r3, #8]
   11ca8:	ldr	r3, [fp, #-16]
   11cac:	sub	r3, r3, #1
   11cb0:	add	r3, r2, r3
   11cb4:	ldrb	r3, [r3]
   11cb8:	cmp	r3, #10
   11cbc:	bne	11ccc <__assert_fail@plt+0xbc0>
   11cc0:	ldr	r3, [fp, #-16]
   11cc4:	sub	r3, r3, #1
   11cc8:	str	r3, [fp, #-16]
   11ccc:	ldr	r3, [fp, #-16]
   11cd0:	cmp	r3, #0
   11cd4:	blt	11ce0 <__assert_fail@plt+0xbd4>
   11cd8:	ldr	r3, [fp, #-16]
   11cdc:	b	11ce4 <__assert_fail@plt+0xbd8>
   11ce0:	mvn	r3, #-2147483648	; 0x80000000
   11ce4:	str	r3, [fp, #-16]
   11ce8:	movw	r3, #53728	; 0xd1e0
   11cec:	movt	r3, #2
   11cf0:	ldr	r3, [r3]
   11cf4:	cmp	r3, #1
   11cf8:	moveq	r3, #1
   11cfc:	movne	r3, #0
   11d00:	uxtb	r3, r3
   11d04:	mov	r4, r3
   11d08:	movw	r0, #47500	; 0xb98c
   11d0c:	movt	r0, #1
   11d10:	bl	10fd4 <gettext@plt>
   11d14:	mov	lr, r0
   11d18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d1c:	sub	r2, r3, #1
   11d20:	movw	r3, #53672	; 0xd1a8
   11d24:	movt	r3, #2
   11d28:	ldr	ip, [r3, r2, lsl #2]
   11d2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d30:	sub	r2, r3, #1
   11d34:	movw	r3, #53656	; 0xd198
   11d38:	movt	r3, #2
   11d3c:	lsl	r2, r2, #3
   11d40:	add	r3, r3, r2
   11d44:	ldrd	r2, [r3]
   11d48:	ldr	r1, [fp, #-16]
   11d4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11d50:	ldr	r0, [r0, #8]
   11d54:	str	r0, [sp, #12]
   11d58:	str	r1, [sp, #8]
   11d5c:	strd	r2, [sp]
   11d60:	mov	r3, ip
   11d64:	mov	r2, lr
   11d68:	mov	r1, #0
   11d6c:	mov	r0, r4
   11d70:	bl	10f68 <error@plt>
   11d74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d78:	sub	r2, r3, #1
   11d7c:	movw	r3, #53696	; 0xd1c0
   11d80:	movt	r3, #2
   11d84:	mov	r1, #1
   11d88:	strb	r1, [r3, r2]
   11d8c:	nop	{0}
   11d90:	sub	sp, fp, #8
   11d94:	ldr	r4, [sp]
   11d98:	ldr	fp, [sp, #4]
   11d9c:	add	sp, sp, #8
   11da0:	pop	{pc}		; (ldr pc, [sp], #4)
   11da4:	push	{fp}		; (str fp, [sp, #-4]!)
   11da8:	add	fp, sp, #0
   11dac:	sub	sp, sp, #12
   11db0:	str	r0, [fp, #-8]
   11db4:	ldr	r3, [fp, #-8]
   11db8:	mov	r2, #0
   11dbc:	str	r2, [r3, #12]
   11dc0:	nop	{0}
   11dc4:	add	sp, fp, #0
   11dc8:	pop	{fp}		; (ldr fp, [sp], #4)
   11dcc:	bx	lr
   11dd0:	str	fp, [sp, #-8]!
   11dd4:	str	lr, [sp, #4]
   11dd8:	add	fp, sp, #4
   11ddc:	sub	sp, sp, #16
   11de0:	str	r0, [fp, #-16]
   11de4:	mov	r1, #24
   11de8:	mov	r0, #1
   11dec:	bl	18680 <__assert_fail@plt+0x7574>
   11df0:	mov	r3, r0
   11df4:	str	r3, [fp, #-8]
   11df8:	ldr	r3, [fp, #-16]
   11dfc:	ldr	r2, [fp, #-8]
   11e00:	str	r2, [r3]
   11e04:	ldr	r3, [fp, #-8]
   11e08:	mov	r0, r3
   11e0c:	sub	sp, fp, #4
   11e10:	ldr	fp, [sp]
   11e14:	add	sp, sp, #4
   11e18:	pop	{pc}		; (ldr pc, [sp], #4)
   11e1c:	strd	r4, [sp, #-16]!
   11e20:	str	fp, [sp, #8]
   11e24:	str	lr, [sp, #12]
   11e28:	add	fp, sp, #12
   11e2c:	sub	sp, sp, #24
   11e30:	str	r0, [fp, #-24]	; 0xffffffe8
   11e34:	str	r1, [fp, #-28]	; 0xffffffe4
   11e38:	str	r2, [fp, #-32]	; 0xffffffe0
   11e3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11e40:	ldr	r3, [r3]
   11e44:	str	r3, [fp, #-16]
   11e48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e4c:	sub	r2, r3, #1
   11e50:	movw	r3, #53648	; 0xd190
   11e54:	movt	r3, #2
   11e58:	ldr	r3, [r3, r2, lsl #2]
   11e5c:	ldr	r2, [fp, #-16]
   11e60:	cmp	r2, r3
   11e64:	bne	11eac <__assert_fail@plt+0xda0>
   11e68:	ldr	r3, [fp, #-16]
   11e6c:	str	r3, [fp, #-20]	; 0xffffffec
   11e70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e74:	sub	r2, r3, #1
   11e78:	movw	r3, #53680	; 0xd1b0
   11e7c:	movt	r3, #2
   11e80:	ldr	r3, [r3, r2, lsl #2]
   11e84:	str	r3, [fp, #-16]
   11e88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e8c:	sub	r2, r3, #1
   11e90:	movw	r3, #53680	; 0xd1b0
   11e94:	movt	r3, #2
   11e98:	ldr	r1, [fp, #-20]	; 0xffffffec
   11e9c:	str	r1, [r3, r2, lsl #2]
   11ea0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11ea4:	ldr	r2, [fp, #-16]
   11ea8:	str	r2, [r3]
   11eac:	ldr	r3, [fp, #-16]
   11eb0:	cmp	r3, #0
   11eb4:	beq	11ec4 <__assert_fail@plt+0xdb8>
   11eb8:	ldr	r0, [fp, #-16]
   11ebc:	bl	11da4 <__assert_fail@plt+0xc98>
   11ec0:	b	11ed0 <__assert_fail@plt+0xdc4>
   11ec4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11ec8:	bl	11dd0 <__assert_fail@plt+0xcc4>
   11ecc:	str	r0, [fp, #-16]
   11ed0:	ldr	r0, [fp, #-16]
   11ed4:	movw	r3, #53528	; 0xd118
   11ed8:	movt	r3, #2
   11edc:	ldrb	r3, [r3]
   11ee0:	mov	r2, r3
   11ee4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11ee8:	bl	14988 <__assert_fail@plt+0x387c>
   11eec:	mov	r3, r0
   11ef0:	cmp	r3, #0
   11ef4:	bne	11f48 <__assert_fail@plt+0xe3c>
   11ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11efc:	bl	10f50 <ferror_unlocked@plt>
   11f00:	mov	r3, r0
   11f04:	cmp	r3, #0
   11f08:	beq	11f38 <__assert_fail@plt+0xe2c>
   11f0c:	bl	11010 <__errno_location@plt>
   11f10:	mov	r3, r0
   11f14:	ldr	r4, [r3]
   11f18:	movw	r0, #47532	; 0xb9ac
   11f1c:	movt	r0, #1
   11f20:	bl	10fd4 <gettext@plt>
   11f24:	mov	r3, r0
   11f28:	mov	r2, r3
   11f2c:	mov	r1, r4
   11f30:	mov	r0, #1
   11f34:	bl	10f68 <error@plt>
   11f38:	ldr	r0, [fp, #-16]
   11f3c:	bl	11940 <__assert_fail@plt+0x834>
   11f40:	mov	r3, #0
   11f44:	b	11fe4 <__assert_fail@plt+0xed8>
   11f48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11f4c:	sub	r1, r3, #1
   11f50:	movw	r3, #53656	; 0xd198
   11f54:	movt	r3, #2
   11f58:	lsl	r2, r1, #3
   11f5c:	add	r3, r3, r2
   11f60:	ldrd	r2, [r3]
   11f64:	adds	r4, r2, #1
   11f68:	adc	r5, r3, #0
   11f6c:	movw	r3, #53656	; 0xd198
   11f70:	movt	r3, #2
   11f74:	lsl	r2, r1, #3
   11f78:	add	r3, r3, r2
   11f7c:	strd	r4, [r3]
   11f80:	ldr	r0, [fp, #-16]
   11f84:	bl	11704 <__assert_fail@plt+0x5f8>
   11f88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11f8c:	sub	r2, r3, #1
   11f90:	movw	r3, #53648	; 0xd190
   11f94:	movt	r3, #2
   11f98:	ldr	r3, [r3, r2, lsl #2]
   11f9c:	cmp	r3, #0
   11fa0:	beq	11fc8 <__assert_fail@plt+0xebc>
   11fa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11fa8:	sub	r2, r3, #1
   11fac:	movw	r3, #53648	; 0xd190
   11fb0:	movt	r3, #2
   11fb4:	ldr	r3, [r3, r2, lsl #2]
   11fb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11fbc:	ldr	r1, [fp, #-16]
   11fc0:	mov	r0, r3
   11fc4:	bl	11bbc <__assert_fail@plt+0xab0>
   11fc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11fcc:	sub	r2, r3, #1
   11fd0:	movw	r3, #53648	; 0xd190
   11fd4:	movt	r3, #2
   11fd8:	ldr	r1, [fp, #-16]
   11fdc:	str	r1, [r3, r2, lsl #2]
   11fe0:	mov	r3, #1
   11fe4:	mov	r0, r3
   11fe8:	sub	sp, fp, #12
   11fec:	ldrd	r4, [sp]
   11ff0:	ldr	fp, [sp, #8]
   11ff4:	add	sp, sp, #12
   11ff8:	pop	{pc}		; (ldr pc, [sp], #4)
   11ffc:	str	fp, [sp, #-8]!
   12000:	str	lr, [sp, #4]
   12004:	add	fp, sp, #4
   12008:	sub	sp, sp, #8
   1200c:	mov	r3, #0
   12010:	str	r3, [fp, #-8]
   12014:	b	1206c <__assert_fail@plt+0xf60>
   12018:	movw	r3, #53680	; 0xd1b0
   1201c:	movt	r3, #2
   12020:	ldr	r2, [fp, #-8]
   12024:	ldr	r3, [r3, r2, lsl #2]
   12028:	cmp	r3, #0
   1202c:	beq	12060 <__assert_fail@plt+0xf54>
   12030:	movw	r3, #53680	; 0xd1b0
   12034:	movt	r3, #2
   12038:	ldr	r2, [fp, #-8]
   1203c:	ldr	r3, [r3, r2, lsl #2]
   12040:	mov	r0, r3
   12044:	bl	11940 <__assert_fail@plt+0x834>
   12048:	movw	r3, #53680	; 0xd1b0
   1204c:	movt	r3, #2
   12050:	ldr	r2, [fp, #-8]
   12054:	ldr	r3, [r3, r2, lsl #2]
   12058:	mov	r0, r3
   1205c:	bl	146d8 <__assert_fail@plt+0x35cc>
   12060:	ldr	r3, [fp, #-8]
   12064:	add	r3, r3, #1
   12068:	str	r3, [fp, #-8]
   1206c:	ldr	r3, [fp, #-8]
   12070:	cmp	r3, #1
   12074:	bls	12018 <__assert_fail@plt+0xf0c>
   12078:	nop	{0}
   1207c:	sub	sp, fp, #4
   12080:	ldr	fp, [sp]
   12084:	add	sp, sp, #4
   12088:	pop	{pc}		; (ldr pc, [sp], #4)
   1208c:	push	{fp}		; (str fp, [sp, #-4]!)
   12090:	add	fp, sp, #0
   12094:	sub	sp, sp, #12
   12098:	str	r0, [fp, #-8]
   1209c:	ldr	r3, [fp, #-8]
   120a0:	mov	r2, #0
   120a4:	str	r2, [r3]
   120a8:	ldr	r3, [fp, #-8]
   120ac:	mov	r2, #0
   120b0:	str	r2, [r3, #4]
   120b4:	ldr	r3, [fp, #-8]
   120b8:	mov	r2, #0
   120bc:	str	r2, [r3, #8]
   120c0:	nop	{0}
   120c4:	add	sp, fp, #0
   120c8:	pop	{fp}		; (ldr fp, [sp], #4)
   120cc:	bx	lr
   120d0:	str	fp, [sp, #-8]!
   120d4:	str	lr, [sp, #4]
   120d8:	add	fp, sp, #4
   120dc:	sub	sp, sp, #24
   120e0:	str	r0, [fp, #-16]
   120e4:	str	r1, [fp, #-20]	; 0xffffffec
   120e8:	str	r2, [fp, #-24]	; 0xffffffe8
   120ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   120f0:	ldr	r2, [r3]
   120f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   120f8:	ldr	r3, [r3, #4]
   120fc:	cmp	r2, r3
   12100:	bne	12178 <__assert_fail@plt+0x106c>
   12104:	ldr	r3, [fp, #-20]	; 0xffffffec
   12108:	ldr	r0, [r3, #8]
   1210c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12110:	add	r3, r3, #4
   12114:	mov	r2, #4
   12118:	mov	r1, r3
   1211c:	bl	182e0 <__assert_fail@plt+0x71d4>
   12120:	mov	r2, r0
   12124:	ldr	r3, [fp, #-20]	; 0xffffffec
   12128:	str	r2, [r3, #8]
   1212c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12130:	ldr	r3, [r3]
   12134:	str	r3, [fp, #-8]
   12138:	b	12164 <__assert_fail@plt+0x1058>
   1213c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12140:	ldr	r2, [r3, #8]
   12144:	ldr	r3, [fp, #-8]
   12148:	lsl	r3, r3, #2
   1214c:	add	r3, r2, r3
   12150:	mov	r2, #0
   12154:	str	r2, [r3]
   12158:	ldr	r3, [fp, #-8]
   1215c:	add	r3, r3, #1
   12160:	str	r3, [fp, #-8]
   12164:	ldr	r3, [fp, #-20]	; 0xffffffec
   12168:	ldr	r3, [r3, #4]
   1216c:	ldr	r2, [fp, #-8]
   12170:	cmp	r2, r3
   12174:	bcc	1213c <__assert_fail@plt+0x1030>
   12178:	ldr	r3, [fp, #-20]	; 0xffffffec
   1217c:	ldr	r2, [r3, #8]
   12180:	ldr	r3, [fp, #-20]	; 0xffffffec
   12184:	ldr	r3, [r3]
   12188:	lsl	r3, r3, #2
   1218c:	add	r3, r2, r3
   12190:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12194:	mov	r1, r3
   12198:	ldr	r0, [fp, #-16]
   1219c:	bl	11e1c <__assert_fail@plt+0xd10>
   121a0:	mov	r3, r0
   121a4:	cmp	r3, #0
   121a8:	beq	121c8 <__assert_fail@plt+0x10bc>
   121ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   121b0:	ldr	r3, [r3]
   121b4:	add	r2, r3, #1
   121b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   121bc:	str	r2, [r3]
   121c0:	mov	r3, #1
   121c4:	b	121cc <__assert_fail@plt+0x10c0>
   121c8:	mov	r3, #0
   121cc:	mov	r0, r3
   121d0:	sub	sp, fp, #4
   121d4:	ldr	fp, [sp]
   121d8:	add	sp, sp, #4
   121dc:	pop	{pc}		; (ldr pc, [sp], #4)
   121e0:	str	fp, [sp, #-8]!
   121e4:	str	lr, [sp, #4]
   121e8:	add	fp, sp, #4
   121ec:	sub	sp, sp, #16
   121f0:	str	r0, [fp, #-8]
   121f4:	str	r1, [fp, #-12]
   121f8:	str	r3, [fp, #-20]	; 0xffffffec
   121fc:	mov	r3, r2
   12200:	strb	r3, [fp, #-13]
   12204:	ldrb	r3, [fp, #-13]
   12208:	cmp	r3, #0
   1220c:	beq	1221c <__assert_fail@plt+0x1110>
   12210:	ldr	r3, [fp, #-12]
   12214:	mov	r2, #0
   12218:	str	r2, [r3]
   1221c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12220:	ldr	r1, [fp, #-12]
   12224:	ldr	r0, [fp, #-8]
   12228:	bl	120d0 <__assert_fail@plt+0xfc4>
   1222c:	mov	r3, r0
   12230:	mov	r0, r3
   12234:	sub	sp, fp, #4
   12238:	ldr	fp, [sp]
   1223c:	add	sp, sp, #4
   12240:	pop	{pc}		; (ldr pc, [sp], #4)
   12244:	str	fp, [sp, #-8]!
   12248:	str	lr, [sp, #4]
   1224c:	add	fp, sp, #4
   12250:	sub	sp, sp, #16
   12254:	str	r0, [fp, #-16]
   12258:	mov	r3, #0
   1225c:	str	r3, [fp, #-8]
   12260:	b	122b0 <__assert_fail@plt+0x11a4>
   12264:	ldr	r3, [fp, #-16]
   12268:	ldr	r2, [r3, #8]
   1226c:	ldr	r3, [fp, #-8]
   12270:	lsl	r3, r3, #2
   12274:	add	r3, r2, r3
   12278:	ldr	r3, [r3]
   1227c:	mov	r0, r3
   12280:	bl	11940 <__assert_fail@plt+0x834>
   12284:	ldr	r3, [fp, #-16]
   12288:	ldr	r2, [r3, #8]
   1228c:	ldr	r3, [fp, #-8]
   12290:	lsl	r3, r3, #2
   12294:	add	r3, r2, r3
   12298:	ldr	r3, [r3]
   1229c:	mov	r0, r3
   122a0:	bl	146d8 <__assert_fail@plt+0x35cc>
   122a4:	ldr	r3, [fp, #-8]
   122a8:	add	r3, r3, #1
   122ac:	str	r3, [fp, #-8]
   122b0:	ldr	r3, [fp, #-16]
   122b4:	ldr	r3, [r3, #4]
   122b8:	ldr	r2, [fp, #-8]
   122bc:	cmp	r2, r3
   122c0:	bcc	12264 <__assert_fail@plt+0x1158>
   122c4:	ldr	r3, [fp, #-16]
   122c8:	ldr	r3, [r3, #8]
   122cc:	mov	r0, r3
   122d0:	bl	146d8 <__assert_fail@plt+0x35cc>
   122d4:	nop	{0}
   122d8:	sub	sp, fp, #4
   122dc:	ldr	fp, [sp]
   122e0:	add	sp, sp, #4
   122e4:	pop	{pc}		; (ldr pc, [sp], #4)
   122e8:	str	fp, [sp, #-8]!
   122ec:	str	lr, [sp, #4]
   122f0:	add	fp, sp, #4
   122f4:	sub	sp, sp, #16
   122f8:	str	r0, [fp, #-16]
   122fc:	str	r1, [fp, #-20]	; 0xffffffec
   12300:	ldr	r3, [fp, #-20]	; 0xffffffec
   12304:	ldr	r3, [r3, #12]
   12308:	ldr	r2, [fp, #-16]
   1230c:	cmp	r2, r3
   12310:	bcs	123ac <__assert_fail@plt+0x12a0>
   12314:	ldr	r3, [fp, #-20]	; 0xffffffec
   12318:	ldr	r2, [r3, #20]
   1231c:	ldr	r3, [fp, #-16]
   12320:	lsl	r3, r3, #3
   12324:	add	r3, r2, r3
   12328:	ldr	r3, [r3, #4]
   1232c:	str	r3, [fp, #-8]
   12330:	ldr	r3, [fp, #-8]
   12334:	cmp	r3, #0
   12338:	beq	12370 <__assert_fail@plt+0x1264>
   1233c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12340:	ldr	r2, [r3, #20]
   12344:	ldr	r3, [fp, #-16]
   12348:	lsl	r3, r3, #3
   1234c:	add	r3, r2, r3
   12350:	ldr	r0, [r3]
   12354:	movw	r3, #53636	; 0xd184
   12358:	movt	r3, #2
   1235c:	ldr	r3, [r3]
   12360:	ldr	r2, [fp, #-8]
   12364:	mov	r1, #1
   12368:	bl	10ecc <fwrite_unlocked@plt>
   1236c:	b	123e4 <__assert_fail@plt+0x12d8>
   12370:	movw	r3, #53700	; 0xd1c4
   12374:	movt	r3, #2
   12378:	ldr	r3, [r3]
   1237c:	cmp	r3, #0
   12380:	beq	123e4 <__assert_fail@plt+0x12d8>
   12384:	movw	r3, #53700	; 0xd1c4
   12388:	movt	r3, #2
   1238c:	ldr	r2, [r3]
   12390:	movw	r3, #53636	; 0xd184
   12394:	movt	r3, #2
   12398:	ldr	r3, [r3]
   1239c:	mov	r1, r3
   123a0:	mov	r0, r2
   123a4:	bl	10e60 <fputs_unlocked@plt>
   123a8:	b	123e4 <__assert_fail@plt+0x12d8>
   123ac:	movw	r3, #53700	; 0xd1c4
   123b0:	movt	r3, #2
   123b4:	ldr	r3, [r3]
   123b8:	cmp	r3, #0
   123bc:	beq	123e4 <__assert_fail@plt+0x12d8>
   123c0:	movw	r3, #53700	; 0xd1c4
   123c4:	movt	r3, #2
   123c8:	ldr	r2, [r3]
   123cc:	movw	r3, #53636	; 0xd184
   123d0:	movt	r3, #2
   123d4:	ldr	r3, [r3]
   123d8:	mov	r1, r3
   123dc:	mov	r0, r2
   123e0:	bl	10e60 <fputs_unlocked@plt>
   123e4:	nop	{0}
   123e8:	sub	sp, fp, #4
   123ec:	ldr	fp, [sp]
   123f0:	add	sp, sp, #4
   123f4:	pop	{pc}		; (ldr pc, [sp], #4)
   123f8:	str	fp, [sp, #-8]!
   123fc:	str	lr, [sp, #4]
   12400:	add	fp, sp, #4
   12404:	sub	sp, sp, #32
   12408:	str	r0, [fp, #-24]	; 0xffffffe8
   1240c:	str	r1, [fp, #-28]	; 0xffffffe4
   12410:	str	r2, [fp, #-32]	; 0xffffffe0
   12414:	movw	r3, #53704	; 0xd1c8
   12418:	movt	r3, #2
   1241c:	ldrb	r3, [r3]
   12420:	cmp	r3, #0
   12424:	beq	12430 <__assert_fail@plt+0x1324>
   12428:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1242c:	b	12438 <__assert_fail@plt+0x132c>
   12430:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12434:	ldr	r3, [r3, #12]
   12438:	str	r3, [fp, #-12]
   1243c:	movw	r3, #53524	; 0xd114
   12440:	movt	r3, #2
   12444:	ldr	r3, [r3]
   12448:	cmp	r3, #0
   1244c:	blt	12464 <__assert_fail@plt+0x1358>
   12450:	movw	r3, #53524	; 0xd114
   12454:	movt	r3, #2
   12458:	ldr	r3, [r3]
   1245c:	uxtb	r3, r3
   12460:	b	12468 <__assert_fail@plt+0x135c>
   12464:	mov	r3, #32
   12468:	strb	r3, [fp, #-13]
   1246c:	mov	r3, #0
   12470:	str	r3, [fp, #-8]
   12474:	b	1249c <__assert_fail@plt+0x1390>
   12478:	ldrb	r3, [fp, #-13]
   1247c:	mov	r0, r3
   12480:	bl	11100 <putchar_unlocked@plt>
   12484:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12488:	ldr	r0, [fp, #-8]
   1248c:	bl	122e8 <__assert_fail@plt+0x11dc>
   12490:	ldr	r3, [fp, #-8]
   12494:	add	r3, r3, #1
   12498:	str	r3, [fp, #-8]
   1249c:	ldr	r2, [fp, #-8]
   124a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   124a4:	cmp	r2, r3
   124a8:	bcs	124bc <__assert_fail@plt+0x13b0>
   124ac:	ldr	r2, [fp, #-8]
   124b0:	ldr	r3, [fp, #-12]
   124b4:	cmp	r2, r3
   124b8:	bcc	12478 <__assert_fail@plt+0x136c>
   124bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   124c0:	add	r3, r3, #1
   124c4:	str	r3, [fp, #-8]
   124c8:	b	124f0 <__assert_fail@plt+0x13e4>
   124cc:	ldrb	r3, [fp, #-13]
   124d0:	mov	r0, r3
   124d4:	bl	11100 <putchar_unlocked@plt>
   124d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   124dc:	ldr	r0, [fp, #-8]
   124e0:	bl	122e8 <__assert_fail@plt+0x11dc>
   124e4:	ldr	r3, [fp, #-8]
   124e8:	add	r3, r3, #1
   124ec:	str	r3, [fp, #-8]
   124f0:	ldr	r2, [fp, #-8]
   124f4:	ldr	r3, [fp, #-12]
   124f8:	cmp	r2, r3
   124fc:	bcc	124cc <__assert_fail@plt+0x13c0>
   12500:	nop	{0}
   12504:	sub	sp, fp, #4
   12508:	ldr	fp, [sp]
   1250c:	add	sp, sp, #4
   12510:	pop	{pc}		; (ldr pc, [sp], #4)
   12514:	str	fp, [sp, #-8]!
   12518:	str	lr, [sp, #4]
   1251c:	add	fp, sp, #4
   12520:	sub	sp, sp, #32
   12524:	str	r0, [fp, #-32]	; 0xffffffe0
   12528:	str	r1, [fp, #-36]	; 0xffffffdc
   1252c:	movw	r3, #53524	; 0xd114
   12530:	movt	r3, #2
   12534:	ldr	r3, [r3]
   12538:	cmp	r3, #0
   1253c:	blt	12554 <__assert_fail@plt+0x1448>
   12540:	movw	r3, #53524	; 0xd114
   12544:	movt	r3, #2
   12548:	ldr	r3, [r3]
   1254c:	uxtb	r3, r3
   12550:	b	12558 <__assert_fail@plt+0x144c>
   12554:	mov	r3, #32
   12558:	strb	r3, [fp, #-17]	; 0xffffffef
   1255c:	movw	r3, #53716	; 0xd1d4
   12560:	movt	r3, #2
   12564:	ldr	r3, [r3, #8]
   12568:	str	r3, [fp, #-24]	; 0xffffffe8
   1256c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12570:	cmp	r3, #0
   12574:	beq	12658 <__assert_fail@plt+0x154c>
   12578:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1257c:	str	r3, [fp, #-16]
   12580:	ldr	r3, [fp, #-16]
   12584:	ldr	r3, [r3]
   12588:	cmp	r3, #0
   1258c:	bne	125dc <__assert_fail@plt+0x14d0>
   12590:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12594:	movw	r3, #53732	; 0xd1e4
   12598:	movt	r3, #2
   1259c:	cmp	r2, r3
   125a0:	bne	125c0 <__assert_fail@plt+0x14b4>
   125a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   125a8:	str	r3, [fp, #-12]
   125ac:	movw	r3, #53516	; 0xd10c
   125b0:	movt	r3, #2
   125b4:	ldr	r3, [r3]
   125b8:	str	r3, [fp, #-8]
   125bc:	b	12608 <__assert_fail@plt+0x14fc>
   125c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   125c4:	str	r3, [fp, #-12]
   125c8:	movw	r3, #53512	; 0xd108
   125cc:	movt	r3, #2
   125d0:	ldr	r3, [r3]
   125d4:	str	r3, [fp, #-8]
   125d8:	b	12608 <__assert_fail@plt+0x14fc>
   125dc:	ldr	r3, [fp, #-16]
   125e0:	ldr	r3, [r3]
   125e4:	cmp	r3, #1
   125e8:	bne	125f4 <__assert_fail@plt+0x14e8>
   125ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   125f0:	b	125f8 <__assert_fail@plt+0x14ec>
   125f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   125f8:	str	r3, [fp, #-12]
   125fc:	ldr	r3, [fp, #-16]
   12600:	ldr	r3, [r3, #4]
   12604:	str	r3, [fp, #-8]
   12608:	ldr	r1, [fp, #-12]
   1260c:	ldr	r0, [fp, #-8]
   12610:	bl	122e8 <__assert_fail@plt+0x11dc>
   12614:	ldr	r3, [fp, #-16]
   12618:	ldr	r3, [r3, #8]
   1261c:	str	r3, [fp, #-16]
   12620:	ldr	r3, [fp, #-16]
   12624:	cmp	r3, #0
   12628:	beq	1263c <__assert_fail@plt+0x1530>
   1262c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   12630:	mov	r0, r3
   12634:	bl	11100 <putchar_unlocked@plt>
   12638:	b	12580 <__assert_fail@plt+0x1474>
   1263c:	nop	{0}
   12640:	movw	r3, #53528	; 0xd118
   12644:	movt	r3, #2
   12648:	ldrb	r3, [r3]
   1264c:	mov	r0, r3
   12650:	bl	11100 <putchar_unlocked@plt>
   12654:	b	12708 <__assert_fail@plt+0x15fc>
   12658:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1265c:	movw	r3, #53732	; 0xd1e4
   12660:	movt	r3, #2
   12664:	cmp	r2, r3
   12668:	bne	12688 <__assert_fail@plt+0x157c>
   1266c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12670:	str	r3, [fp, #-12]
   12674:	movw	r3, #53516	; 0xd10c
   12678:	movt	r3, #2
   1267c:	ldr	r3, [r3]
   12680:	str	r3, [fp, #-8]
   12684:	b	126a0 <__assert_fail@plt+0x1594>
   12688:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1268c:	str	r3, [fp, #-12]
   12690:	movw	r3, #53512	; 0xd108
   12694:	movt	r3, #2
   12698:	ldr	r3, [r3]
   1269c:	str	r3, [fp, #-8]
   126a0:	ldr	r1, [fp, #-12]
   126a4:	ldr	r0, [fp, #-8]
   126a8:	bl	122e8 <__assert_fail@plt+0x11dc>
   126ac:	movw	r3, #53512	; 0xd108
   126b0:	movt	r3, #2
   126b4:	ldr	r1, [r3]
   126b8:	movw	r3, #53708	; 0xd1cc
   126bc:	movt	r3, #2
   126c0:	ldr	r3, [r3]
   126c4:	mov	r2, r3
   126c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   126cc:	bl	123f8 <__assert_fail@plt+0x12ec>
   126d0:	movw	r3, #53516	; 0xd10c
   126d4:	movt	r3, #2
   126d8:	ldr	r1, [r3]
   126dc:	movw	r3, #53712	; 0xd1d0
   126e0:	movt	r3, #2
   126e4:	ldr	r3, [r3]
   126e8:	mov	r2, r3
   126ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   126f0:	bl	123f8 <__assert_fail@plt+0x12ec>
   126f4:	movw	r3, #53528	; 0xd118
   126f8:	movt	r3, #2
   126fc:	ldrb	r3, [r3]
   12700:	mov	r0, r3
   12704:	bl	11100 <putchar_unlocked@plt>
   12708:	nop	{0}
   1270c:	sub	sp, fp, #4
   12710:	ldr	fp, [sp]
   12714:	add	sp, sp, #4
   12718:	pop	{pc}		; (ldr pc, [sp], #4)
   1271c:	str	fp, [sp, #-8]!
   12720:	str	lr, [sp, #4]
   12724:	add	fp, sp, #4
   12728:	sub	sp, sp, #72	; 0x48
   1272c:	str	r0, [fp, #-72]	; 0xffffffb8
   12730:	str	r1, [fp, #-76]	; 0xffffffb4
   12734:	mov	r1, #2
   12738:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1273c:	bl	14394 <__assert_fail@plt+0x3288>
   12740:	mov	r1, #2
   12744:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12748:	bl	14394 <__assert_fail@plt+0x3288>
   1274c:	sub	r3, fp, #52	; 0x34
   12750:	mov	r0, r3
   12754:	bl	1208c <__assert_fail@plt+0xf80>
   12758:	sub	r3, fp, #52	; 0x34
   1275c:	mov	r2, #1
   12760:	mov	r1, r3
   12764:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12768:	bl	120d0 <__assert_fail@plt+0xfc4>
   1276c:	sub	r3, fp, #64	; 0x40
   12770:	mov	r0, r3
   12774:	bl	1208c <__assert_fail@plt+0xf80>
   12778:	sub	r3, fp, #64	; 0x40
   1277c:	mov	r2, #2
   12780:	mov	r1, r3
   12784:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12788:	bl	120d0 <__assert_fail@plt+0xfc4>
   1278c:	movw	r3, #53704	; 0xd1c8
   12790:	movt	r3, #2
   12794:	ldrb	r3, [r3]
   12798:	cmp	r3, #0
   1279c:	beq	127f8 <__assert_fail@plt+0x16ec>
   127a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   127a4:	cmp	r3, #0
   127a8:	beq	127bc <__assert_fail@plt+0x16b0>
   127ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   127b0:	ldr	r3, [r3]
   127b4:	ldr	r2, [r3, #12]
   127b8:	b	127c0 <__assert_fail@plt+0x16b4>
   127bc:	mov	r2, #0
   127c0:	movw	r3, #53708	; 0xd1cc
   127c4:	movt	r3, #2
   127c8:	str	r2, [r3]
   127cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   127d0:	cmp	r3, #0
   127d4:	beq	127e8 <__assert_fail@plt+0x16dc>
   127d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   127dc:	ldr	r3, [r3]
   127e0:	ldr	r2, [r3, #12]
   127e4:	b	127ec <__assert_fail@plt+0x16e0>
   127e8:	mov	r2, #0
   127ec:	movw	r3, #53712	; 0xd1d0
   127f0:	movt	r3, #2
   127f4:	str	r2, [r3]
   127f8:	movw	r3, #53757	; 0xd1fd
   127fc:	movt	r3, #2
   12800:	ldrb	r3, [r3]
   12804:	cmp	r3, #0
   12808:	beq	12c68 <__assert_fail@plt+0x1b5c>
   1280c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12810:	cmp	r3, #0
   12814:	bne	12824 <__assert_fail@plt+0x1718>
   12818:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1281c:	cmp	r3, #0
   12820:	beq	12c68 <__assert_fail@plt+0x1b5c>
   12824:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12828:	cmp	r3, #0
   1282c:	beq	1283c <__assert_fail@plt+0x1730>
   12830:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12834:	ldr	r3, [r3]
   12838:	b	12844 <__assert_fail@plt+0x1738>
   1283c:	movw	r3, #53732	; 0xd1e4
   12840:	movt	r3, #2
   12844:	str	r3, [fp, #-24]	; 0xffffffe8
   12848:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1284c:	cmp	r3, #0
   12850:	beq	12860 <__assert_fail@plt+0x1754>
   12854:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12858:	ldr	r3, [r3]
   1285c:	b	12868 <__assert_fail@plt+0x175c>
   12860:	movw	r3, #53732	; 0xd1e4
   12864:	movt	r3, #2
   12868:	str	r3, [fp, #-28]	; 0xffffffe4
   1286c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12874:	bl	12514 <__assert_fail@plt+0x1408>
   12878:	movw	r3, #53648	; 0xd190
   1287c:	movt	r3, #2
   12880:	mov	r2, #0
   12884:	str	r2, [r3]
   12888:	movw	r3, #53648	; 0xd190
   1288c:	movt	r3, #2
   12890:	mov	r2, #0
   12894:	str	r2, [r3, #4]
   12898:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1289c:	cmp	r3, #0
   128a0:	beq	128b8 <__assert_fail@plt+0x17ac>
   128a4:	sub	r1, fp, #52	; 0x34
   128a8:	mov	r3, #1
   128ac:	mov	r2, #1
   128b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   128b4:	bl	121e0 <__assert_fail@plt+0x10d4>
   128b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   128bc:	cmp	r3, #0
   128c0:	beq	12c68 <__assert_fail@plt+0x1b5c>
   128c4:	sub	r1, fp, #64	; 0x40
   128c8:	mov	r3, #2
   128cc:	mov	r2, #1
   128d0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   128d4:	bl	121e0 <__assert_fail@plt+0x10d4>
   128d8:	b	12c68 <__assert_fail@plt+0x1b5c>
   128dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   128e0:	ldr	r0, [r3]
   128e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   128e8:	ldr	r1, [r3]
   128ec:	movw	r3, #53512	; 0xd108
   128f0:	movt	r3, #2
   128f4:	ldr	r2, [r3]
   128f8:	movw	r3, #53516	; 0xd10c
   128fc:	movt	r3, #2
   12900:	ldr	r3, [r3]
   12904:	bl	119b0 <__assert_fail@plt+0x8a4>
   12908:	str	r0, [fp, #-32]	; 0xffffffe0
   1290c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12910:	cmp	r3, #0
   12914:	bge	1296c <__assert_fail@plt+0x1860>
   12918:	movw	r3, #53689	; 0xd1b9
   1291c:	movt	r3, #2
   12920:	ldrb	r3, [r3]
   12924:	cmp	r3, #0
   12928:	beq	12944 <__assert_fail@plt+0x1838>
   1292c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12930:	ldr	r3, [r3]
   12934:	movw	r1, #53732	; 0xd1e4
   12938:	movt	r1, #2
   1293c:	mov	r0, r3
   12940:	bl	12514 <__assert_fail@plt+0x1408>
   12944:	sub	r1, fp, #52	; 0x34
   12948:	mov	r3, #1
   1294c:	mov	r2, #1
   12950:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12954:	bl	121e0 <__assert_fail@plt+0x10d4>
   12958:	movw	r3, #53692	; 0xd1bc
   1295c:	movt	r3, #2
   12960:	mov	r2, #1
   12964:	strb	r2, [r3]
   12968:	b	12c68 <__assert_fail@plt+0x1b5c>
   1296c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12970:	cmp	r3, #0
   12974:	ble	129cc <__assert_fail@plt+0x18c0>
   12978:	movw	r3, #53690	; 0xd1ba
   1297c:	movt	r3, #2
   12980:	ldrb	r3, [r3]
   12984:	cmp	r3, #0
   12988:	beq	129a4 <__assert_fail@plt+0x1898>
   1298c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12990:	ldr	r3, [r3]
   12994:	mov	r1, r3
   12998:	movw	r0, #53732	; 0xd1e4
   1299c:	movt	r0, #2
   129a0:	bl	12514 <__assert_fail@plt+0x1408>
   129a4:	sub	r1, fp, #64	; 0x40
   129a8:	mov	r3, #2
   129ac:	mov	r2, #1
   129b0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   129b4:	bl	121e0 <__assert_fail@plt+0x10d4>
   129b8:	movw	r3, #53692	; 0xd1bc
   129bc:	movt	r3, #2
   129c0:	mov	r2, #1
   129c4:	strb	r2, [r3]
   129c8:	b	12c68 <__assert_fail@plt+0x1b5c>
   129cc:	mov	r3, #0
   129d0:	strb	r3, [fp, #-5]
   129d4:	sub	r1, fp, #52	; 0x34
   129d8:	mov	r3, #1
   129dc:	mov	r2, #0
   129e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   129e4:	bl	121e0 <__assert_fail@plt+0x10d4>
   129e8:	mov	r3, r0
   129ec:	eor	r3, r3, #1
   129f0:	uxtb	r3, r3
   129f4:	cmp	r3, #0
   129f8:	beq	12a14 <__assert_fail@plt+0x1908>
   129fc:	mov	r3, #1
   12a00:	strb	r3, [fp, #-5]
   12a04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12a08:	add	r3, r3, #1
   12a0c:	str	r3, [fp, #-52]	; 0xffffffcc
   12a10:	b	12a5c <__assert_fail@plt+0x1950>
   12a14:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12a18:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12a1c:	sub	r3, r3, #-1073741823	; 0xc0000001
   12a20:	lsl	r3, r3, #2
   12a24:	add	r3, r2, r3
   12a28:	ldr	r0, [r3]
   12a2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12a30:	ldr	r1, [r3]
   12a34:	movw	r3, #53512	; 0xd108
   12a38:	movt	r3, #2
   12a3c:	ldr	r2, [r3]
   12a40:	movw	r3, #53516	; 0xd10c
   12a44:	movt	r3, #2
   12a48:	ldr	r3, [r3]
   12a4c:	bl	119b0 <__assert_fail@plt+0x8a4>
   12a50:	mov	r3, r0
   12a54:	cmp	r3, #0
   12a58:	beq	129d4 <__assert_fail@plt+0x18c8>
   12a5c:	mov	r3, #0
   12a60:	strb	r3, [fp, #-6]
   12a64:	sub	r1, fp, #64	; 0x40
   12a68:	mov	r3, #2
   12a6c:	mov	r2, #0
   12a70:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12a74:	bl	121e0 <__assert_fail@plt+0x10d4>
   12a78:	mov	r3, r0
   12a7c:	eor	r3, r3, #1
   12a80:	uxtb	r3, r3
   12a84:	cmp	r3, #0
   12a88:	beq	12aa4 <__assert_fail@plt+0x1998>
   12a8c:	mov	r3, #1
   12a90:	strb	r3, [fp, #-6]
   12a94:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12a98:	add	r3, r3, #1
   12a9c:	str	r3, [fp, #-64]	; 0xffffffc0
   12aa0:	b	12aec <__assert_fail@plt+0x19e0>
   12aa4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12aa8:	ldr	r0, [r3]
   12aac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12ab0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12ab4:	sub	r3, r3, #-1073741823	; 0xc0000001
   12ab8:	lsl	r3, r3, #2
   12abc:	add	r3, r2, r3
   12ac0:	ldr	r1, [r3]
   12ac4:	movw	r3, #53512	; 0xd108
   12ac8:	movt	r3, #2
   12acc:	ldr	r2, [r3]
   12ad0:	movw	r3, #53516	; 0xd10c
   12ad4:	movt	r3, #2
   12ad8:	ldr	r3, [r3]
   12adc:	bl	119b0 <__assert_fail@plt+0x8a4>
   12ae0:	mov	r3, r0
   12ae4:	cmp	r3, #0
   12ae8:	beq	12a64 <__assert_fail@plt+0x1958>
   12aec:	movw	r3, #53691	; 0xd1bb
   12af0:	movt	r3, #2
   12af4:	ldrb	r3, [r3]
   12af8:	cmp	r3, #0
   12afc:	beq	12b88 <__assert_fail@plt+0x1a7c>
   12b00:	mov	r3, #0
   12b04:	str	r3, [fp, #-12]
   12b08:	b	12b74 <__assert_fail@plt+0x1a68>
   12b0c:	mov	r3, #0
   12b10:	str	r3, [fp, #-16]
   12b14:	b	12b54 <__assert_fail@plt+0x1a48>
   12b18:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12b1c:	ldr	r3, [fp, #-12]
   12b20:	lsl	r3, r3, #2
   12b24:	add	r3, r2, r3
   12b28:	ldr	r0, [r3]
   12b2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12b30:	ldr	r3, [fp, #-16]
   12b34:	lsl	r3, r3, #2
   12b38:	add	r3, r2, r3
   12b3c:	ldr	r3, [r3]
   12b40:	mov	r1, r3
   12b44:	bl	12514 <__assert_fail@plt+0x1408>
   12b48:	ldr	r3, [fp, #-16]
   12b4c:	add	r3, r3, #1
   12b50:	str	r3, [fp, #-16]
   12b54:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12b58:	sub	r3, r3, #1
   12b5c:	ldr	r2, [fp, #-16]
   12b60:	cmp	r2, r3
   12b64:	bcc	12b18 <__assert_fail@plt+0x1a0c>
   12b68:	ldr	r3, [fp, #-12]
   12b6c:	add	r3, r3, #1
   12b70:	str	r3, [fp, #-12]
   12b74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12b78:	sub	r3, r3, #1
   12b7c:	ldr	r2, [fp, #-12]
   12b80:	cmp	r2, r3
   12b84:	bcc	12b0c <__assert_fail@plt+0x1a00>
   12b88:	ldrb	r3, [fp, #-5]
   12b8c:	eor	r3, r3, #1
   12b90:	uxtb	r3, r3
   12b94:	cmp	r3, #0
   12b98:	beq	12bf0 <__assert_fail@plt+0x1ae4>
   12b9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12ba0:	ldr	r3, [r3]
   12ba4:	str	r3, [fp, #-36]	; 0xffffffdc
   12ba8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12bac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12bb0:	sub	r3, r3, #-1073741823	; 0xc0000001
   12bb4:	lsl	r3, r3, #2
   12bb8:	add	r2, r2, r3
   12bbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12bc0:	ldr	r2, [r2]
   12bc4:	str	r2, [r3]
   12bc8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12bcc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12bd0:	sub	r3, r3, #-1073741823	; 0xc0000001
   12bd4:	lsl	r3, r3, #2
   12bd8:	add	r3, r2, r3
   12bdc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12be0:	str	r2, [r3]
   12be4:	mov	r3, #1
   12be8:	str	r3, [fp, #-52]	; 0xffffffcc
   12bec:	b	12bf8 <__assert_fail@plt+0x1aec>
   12bf0:	mov	r3, #0
   12bf4:	str	r3, [fp, #-52]	; 0xffffffcc
   12bf8:	ldrb	r3, [fp, #-6]
   12bfc:	eor	r3, r3, #1
   12c00:	uxtb	r3, r3
   12c04:	cmp	r3, #0
   12c08:	beq	12c60 <__assert_fail@plt+0x1b54>
   12c0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12c10:	ldr	r3, [r3]
   12c14:	str	r3, [fp, #-40]	; 0xffffffd8
   12c18:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12c1c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12c20:	sub	r3, r3, #-1073741823	; 0xc0000001
   12c24:	lsl	r3, r3, #2
   12c28:	add	r2, r2, r3
   12c2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12c30:	ldr	r2, [r2]
   12c34:	str	r2, [r3]
   12c38:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12c3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12c40:	sub	r3, r3, #-1073741823	; 0xc0000001
   12c44:	lsl	r3, r3, #2
   12c48:	add	r3, r2, r3
   12c4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12c50:	str	r2, [r3]
   12c54:	mov	r3, #1
   12c58:	str	r3, [fp, #-64]	; 0xffffffc0
   12c5c:	b	12c68 <__assert_fail@plt+0x1b5c>
   12c60:	mov	r3, #0
   12c64:	str	r3, [fp, #-64]	; 0xffffffc0
   12c68:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12c6c:	cmp	r3, #0
   12c70:	beq	12c80 <__assert_fail@plt+0x1b74>
   12c74:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12c78:	cmp	r3, #0
   12c7c:	bne	128dc <__assert_fail@plt+0x17d0>
   12c80:	mov	r3, #0
   12c84:	str	r3, [fp, #-68]	; 0xffffffbc
   12c88:	mov	r3, #0
   12c8c:	strb	r3, [fp, #-17]	; 0xffffffef
   12c90:	movw	r3, #53728	; 0xd1e0
   12c94:	movt	r3, #2
   12c98:	ldr	r3, [r3]
   12c9c:	cmp	r3, #2
   12ca0:	beq	12ce4 <__assert_fail@plt+0x1bd8>
   12ca4:	movw	r3, #53696	; 0xd1c0
   12ca8:	movt	r3, #2
   12cac:	ldrb	r3, [r3]
   12cb0:	eor	r3, r3, #1
   12cb4:	uxtb	r3, r3
   12cb8:	cmp	r3, #0
   12cbc:	bne	12cdc <__assert_fail@plt+0x1bd0>
   12cc0:	movw	r3, #53696	; 0xd1c0
   12cc4:	movt	r3, #2
   12cc8:	ldrb	r3, [r3, #1]
   12ccc:	eor	r3, r3, #1
   12cd0:	uxtb	r3, r3
   12cd4:	cmp	r3, #0
   12cd8:	beq	12ce4 <__assert_fail@plt+0x1bd8>
   12cdc:	mov	r3, #1
   12ce0:	strb	r3, [fp, #-17]	; 0xffffffef
   12ce4:	movw	r3, #53689	; 0xd1b9
   12ce8:	movt	r3, #2
   12cec:	ldrb	r3, [r3]
   12cf0:	cmp	r3, #0
   12cf4:	bne	12d04 <__assert_fail@plt+0x1bf8>
   12cf8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   12cfc:	cmp	r3, #0
   12d00:	beq	12ddc <__assert_fail@plt+0x1cd0>
   12d04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12d08:	cmp	r3, #0
   12d0c:	beq	12ddc <__assert_fail@plt+0x1cd0>
   12d10:	movw	r3, #53689	; 0xd1b9
   12d14:	movt	r3, #2
   12d18:	ldrb	r3, [r3]
   12d1c:	cmp	r3, #0
   12d20:	beq	12d3c <__assert_fail@plt+0x1c30>
   12d24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12d28:	ldr	r3, [r3]
   12d2c:	movw	r1, #53732	; 0xd1e4
   12d30:	movt	r1, #2
   12d34:	mov	r0, r3
   12d38:	bl	12514 <__assert_fail@plt+0x1408>
   12d3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12d40:	cmp	r3, #0
   12d44:	beq	12db4 <__assert_fail@plt+0x1ca8>
   12d48:	movw	r3, #53692	; 0xd1bc
   12d4c:	movt	r3, #2
   12d50:	mov	r2, #1
   12d54:	strb	r2, [r3]
   12d58:	b	12db4 <__assert_fail@plt+0x1ca8>
   12d5c:	movw	r3, #53689	; 0xd1b9
   12d60:	movt	r3, #2
   12d64:	ldrb	r3, [r3]
   12d68:	cmp	r3, #0
   12d6c:	beq	12d84 <__assert_fail@plt+0x1c78>
   12d70:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12d74:	movw	r1, #53732	; 0xd1e4
   12d78:	movt	r1, #2
   12d7c:	mov	r0, r3
   12d80:	bl	12514 <__assert_fail@plt+0x1408>
   12d84:	movw	r3, #53696	; 0xd1c0
   12d88:	movt	r3, #2
   12d8c:	ldrb	r3, [r3]
   12d90:	cmp	r3, #0
   12d94:	beq	12db4 <__assert_fail@plt+0x1ca8>
   12d98:	movw	r3, #53689	; 0xd1b9
   12d9c:	movt	r3, #2
   12da0:	ldrb	r3, [r3]
   12da4:	eor	r3, r3, #1
   12da8:	uxtb	r3, r3
   12dac:	cmp	r3, #0
   12db0:	bne	12dd8 <__assert_fail@plt+0x1ccc>
   12db4:	sub	r3, fp, #68	; 0x44
   12db8:	mov	r2, #1
   12dbc:	mov	r1, r3
   12dc0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12dc4:	bl	11e1c <__assert_fail@plt+0xd10>
   12dc8:	mov	r3, r0
   12dcc:	cmp	r3, #0
   12dd0:	bne	12d5c <__assert_fail@plt+0x1c50>
   12dd4:	b	12ddc <__assert_fail@plt+0x1cd0>
   12dd8:	nop	{0}
   12ddc:	movw	r3, #53690	; 0xd1ba
   12de0:	movt	r3, #2
   12de4:	ldrb	r3, [r3]
   12de8:	cmp	r3, #0
   12dec:	bne	12dfc <__assert_fail@plt+0x1cf0>
   12df0:	ldrb	r3, [fp, #-17]	; 0xffffffef
   12df4:	cmp	r3, #0
   12df8:	beq	12ed4 <__assert_fail@plt+0x1dc8>
   12dfc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12e00:	cmp	r3, #0
   12e04:	beq	12ed4 <__assert_fail@plt+0x1dc8>
   12e08:	movw	r3, #53690	; 0xd1ba
   12e0c:	movt	r3, #2
   12e10:	ldrb	r3, [r3]
   12e14:	cmp	r3, #0
   12e18:	beq	12e34 <__assert_fail@plt+0x1d28>
   12e1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12e20:	ldr	r3, [r3]
   12e24:	mov	r1, r3
   12e28:	movw	r0, #53732	; 0xd1e4
   12e2c:	movt	r0, #2
   12e30:	bl	12514 <__assert_fail@plt+0x1408>
   12e34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12e38:	cmp	r3, #0
   12e3c:	beq	12eac <__assert_fail@plt+0x1da0>
   12e40:	movw	r3, #53692	; 0xd1bc
   12e44:	movt	r3, #2
   12e48:	mov	r2, #1
   12e4c:	strb	r2, [r3]
   12e50:	b	12eac <__assert_fail@plt+0x1da0>
   12e54:	movw	r3, #53690	; 0xd1ba
   12e58:	movt	r3, #2
   12e5c:	ldrb	r3, [r3]
   12e60:	cmp	r3, #0
   12e64:	beq	12e7c <__assert_fail@plt+0x1d70>
   12e68:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12e6c:	mov	r1, r3
   12e70:	movw	r0, #53732	; 0xd1e4
   12e74:	movt	r0, #2
   12e78:	bl	12514 <__assert_fail@plt+0x1408>
   12e7c:	movw	r3, #53696	; 0xd1c0
   12e80:	movt	r3, #2
   12e84:	ldrb	r3, [r3, #1]
   12e88:	cmp	r3, #0
   12e8c:	beq	12eac <__assert_fail@plt+0x1da0>
   12e90:	movw	r3, #53690	; 0xd1ba
   12e94:	movt	r3, #2
   12e98:	ldrb	r3, [r3]
   12e9c:	eor	r3, r3, #1
   12ea0:	uxtb	r3, r3
   12ea4:	cmp	r3, #0
   12ea8:	bne	12ed0 <__assert_fail@plt+0x1dc4>
   12eac:	sub	r3, fp, #68	; 0x44
   12eb0:	mov	r2, #2
   12eb4:	mov	r1, r3
   12eb8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12ebc:	bl	11e1c <__assert_fail@plt+0xd10>
   12ec0:	mov	r3, r0
   12ec4:	cmp	r3, #0
   12ec8:	bne	12e54 <__assert_fail@plt+0x1d48>
   12ecc:	b	12ed4 <__assert_fail@plt+0x1dc8>
   12ed0:	nop	{0}
   12ed4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12ed8:	mov	r0, r3
   12edc:	bl	11940 <__assert_fail@plt+0x834>
   12ee0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12ee4:	mov	r0, r3
   12ee8:	bl	146d8 <__assert_fail@plt+0x35cc>
   12eec:	sub	r3, fp, #52	; 0x34
   12ef0:	mov	r0, r3
   12ef4:	bl	12244 <__assert_fail@plt+0x1138>
   12ef8:	sub	r3, fp, #64	; 0x40
   12efc:	mov	r0, r3
   12f00:	bl	12244 <__assert_fail@plt+0x1138>
   12f04:	nop	{0}
   12f08:	sub	sp, fp, #4
   12f0c:	ldr	fp, [sp]
   12f10:	add	sp, sp, #4
   12f14:	pop	{pc}		; (ldr pc, [sp], #4)
   12f18:	str	fp, [sp, #-8]!
   12f1c:	str	lr, [sp, #4]
   12f20:	add	fp, sp, #4
   12f24:	sub	sp, sp, #16
   12f28:	str	r0, [fp, #-16]
   12f2c:	str	r1, [fp, #-20]	; 0xffffffec
   12f30:	ldr	r3, [fp, #-16]
   12f34:	cmp	r3, #0
   12f38:	beq	12f74 <__assert_fail@plt+0x1e68>
   12f3c:	ldr	r3, [fp, #-16]
   12f40:	cmp	r3, #1
   12f44:	beq	12f74 <__assert_fail@plt+0x1e68>
   12f48:	ldr	r3, [fp, #-16]
   12f4c:	cmp	r3, #2
   12f50:	beq	12f74 <__assert_fail@plt+0x1e68>
   12f54:	movw	r3, #48056	; 0xbbb8
   12f58:	movt	r3, #1
   12f5c:	movw	r2, #819	; 0x333
   12f60:	movw	r1, #47544	; 0xb9b8
   12f64:	movt	r1, #1
   12f68:	movw	r0, #47556	; 0xb9c4
   12f6c:	movt	r0, #1
   12f70:	bl	1110c <__assert_fail@plt>
   12f74:	ldr	r3, [fp, #-16]
   12f78:	cmp	r3, #0
   12f7c:	bne	12fac <__assert_fail@plt+0x1ea0>
   12f80:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f84:	cmp	r3, #0
   12f88:	beq	12fac <__assert_fail@plt+0x1ea0>
   12f8c:	movw	r3, #48056	; 0xbbb8
   12f90:	movt	r3, #1
   12f94:	mov	r2, #820	; 0x334
   12f98:	movw	r1, #47544	; 0xb9b8
   12f9c:	movt	r1, #1
   12fa0:	movw	r0, #47592	; 0xb9e8
   12fa4:	movt	r0, #1
   12fa8:	bl	1110c <__assert_fail@plt>
   12fac:	mov	r0, #12
   12fb0:	bl	17ff0 <__assert_fail@plt+0x6ee4>
   12fb4:	mov	r3, r0
   12fb8:	str	r3, [fp, #-8]
   12fbc:	ldr	r3, [fp, #-8]
   12fc0:	ldr	r2, [fp, #-16]
   12fc4:	str	r2, [r3]
   12fc8:	ldr	r3, [fp, #-8]
   12fcc:	ldr	r2, [fp, #-20]	; 0xffffffec
   12fd0:	str	r2, [r3, #4]
   12fd4:	ldr	r3, [fp, #-8]
   12fd8:	mov	r2, #0
   12fdc:	str	r2, [r3, #8]
   12fe0:	movw	r3, #53520	; 0xd110
   12fe4:	movt	r3, #2
   12fe8:	ldr	r3, [r3]
   12fec:	ldr	r2, [fp, #-8]
   12ff0:	str	r2, [r3, #8]
   12ff4:	movw	r3, #53520	; 0xd110
   12ff8:	movt	r3, #2
   12ffc:	ldr	r2, [fp, #-8]
   13000:	str	r2, [r3]
   13004:	nop	{0}
   13008:	sub	sp, fp, #4
   1300c:	ldr	fp, [sp]
   13010:	add	sp, sp, #4
   13014:	pop	{pc}		; (ldr pc, [sp], #4)
   13018:	str	r4, [sp, #-12]!
   1301c:	str	fp, [sp, #4]
   13020:	str	lr, [sp, #8]
   13024:	add	fp, sp, #8
   13028:	sub	sp, sp, #36	; 0x24
   1302c:	str	r0, [fp, #-32]	; 0xffffffe0
   13030:	sub	r2, fp, #28
   13034:	movw	r3, #44800	; 0xaf00
   13038:	movt	r3, #1
   1303c:	str	r3, [sp]
   13040:	mov	r3, r2
   13044:	mov	r2, #10
   13048:	mov	r1, #0
   1304c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13050:	bl	1945c <__assert_fail@plt+0x8350>
   13054:	str	r0, [fp, #-16]
   13058:	ldr	r3, [fp, #-16]
   1305c:	cmp	r3, #1
   13060:	beq	13088 <__assert_fail@plt+0x1f7c>
   13064:	ldr	r3, [fp, #-16]
   13068:	cmp	r3, #0
   1306c:	bne	13098 <__assert_fail@plt+0x1f8c>
   13070:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13074:	mvn	r0, #0
   13078:	mov	r1, #0
   1307c:	cmp	r3, r1
   13080:	cmpeq	r2, r0
   13084:	bls	13098 <__assert_fail@plt+0x1f8c>
   13088:	mvn	r2, #0
   1308c:	mov	r3, #0
   13090:	strd	r2, [fp, #-28]	; 0xffffffe4
   13094:	b	130dc <__assert_fail@plt+0x1fd0>
   13098:	ldr	r3, [fp, #-16]
   1309c:	cmp	r3, #0
   130a0:	bne	130b0 <__assert_fail@plt+0x1fa4>
   130a4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   130a8:	orrs	r3, r2, r3
   130ac:	bne	130dc <__assert_fail@plt+0x1fd0>
   130b0:	movw	r0, #47616	; 0xba00
   130b4:	movt	r0, #1
   130b8:	bl	10fd4 <gettext@plt>
   130bc:	mov	r4, r0
   130c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   130c4:	bl	17594 <__assert_fail@plt+0x6488>
   130c8:	mov	r3, r0
   130cc:	mov	r2, r4
   130d0:	mov	r1, #0
   130d4:	mov	r0, #1
   130d8:	bl	10f68 <error@plt>
   130dc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   130e0:	mov	r3, r2
   130e4:	sub	r3, r3, #1
   130e8:	str	r3, [fp, #-20]	; 0xffffffec
   130ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   130f0:	mov	r0, r3
   130f4:	sub	sp, fp, #8
   130f8:	ldr	r4, [sp]
   130fc:	ldr	fp, [sp, #4]
   13100:	add	sp, sp, #8
   13104:	pop	{pc}		; (ldr pc, [sp], #4)
   13108:	str	r4, [sp, #-12]!
   1310c:	str	fp, [sp, #4]
   13110:	str	lr, [sp, #8]
   13114:	add	fp, sp, #8
   13118:	sub	sp, sp, #20
   1311c:	str	r0, [fp, #-16]
   13120:	str	r1, [fp, #-20]	; 0xffffffec
   13124:	str	r2, [fp, #-24]	; 0xffffffe8
   13128:	ldr	r3, [fp, #-16]
   1312c:	ldrb	r3, [r3]
   13130:	cmp	r3, #48	; 0x30
   13134:	beq	1314c <__assert_fail@plt+0x2040>
   13138:	cmp	r3, #48	; 0x30
   1313c:	blt	1321c <__assert_fail@plt+0x2110>
   13140:	cmp	r3, #50	; 0x32
   13144:	bgt	1321c <__assert_fail@plt+0x2110>
   13148:	b	131a8 <__assert_fail@plt+0x209c>
   1314c:	ldr	r3, [fp, #-16]
   13150:	add	r3, r3, #1
   13154:	ldrb	r3, [r3]
   13158:	cmp	r3, #0
   1315c:	beq	1318c <__assert_fail@plt+0x2080>
   13160:	movw	r0, #47644	; 0xba1c
   13164:	movt	r0, #1
   13168:	bl	10fd4 <gettext@plt>
   1316c:	mov	r4, r0
   13170:	ldr	r0, [fp, #-16]
   13174:	bl	17594 <__assert_fail@plt+0x6488>
   13178:	mov	r3, r0
   1317c:	mov	r2, r4
   13180:	mov	r1, #0
   13184:	mov	r0, #1
   13188:	bl	10f68 <error@plt>
   1318c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13190:	mov	r2, #0
   13194:	str	r2, [r3]
   13198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1319c:	mov	r2, #0
   131a0:	str	r2, [r3]
   131a4:	b	13248 <__assert_fail@plt+0x213c>
   131a8:	ldr	r3, [fp, #-16]
   131ac:	add	r3, r3, #1
   131b0:	ldrb	r3, [r3]
   131b4:	cmp	r3, #46	; 0x2e
   131b8:	beq	131e8 <__assert_fail@plt+0x20dc>
   131bc:	movw	r0, #47644	; 0xba1c
   131c0:	movt	r0, #1
   131c4:	bl	10fd4 <gettext@plt>
   131c8:	mov	r4, r0
   131cc:	ldr	r0, [fp, #-16]
   131d0:	bl	17594 <__assert_fail@plt+0x6488>
   131d4:	mov	r3, r0
   131d8:	mov	r2, r4
   131dc:	mov	r1, #0
   131e0:	mov	r0, #1
   131e4:	bl	10f68 <error@plt>
   131e8:	ldr	r3, [fp, #-16]
   131ec:	ldrb	r3, [r3]
   131f0:	sub	r2, r3, #48	; 0x30
   131f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   131f8:	str	r2, [r3]
   131fc:	ldr	r3, [fp, #-16]
   13200:	add	r3, r3, #2
   13204:	mov	r0, r3
   13208:	bl	13018 <__assert_fail@plt+0x1f0c>
   1320c:	mov	r2, r0
   13210:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13214:	str	r2, [r3]
   13218:	b	13248 <__assert_fail@plt+0x213c>
   1321c:	movw	r0, #47672	; 0xba38
   13220:	movt	r0, #1
   13224:	bl	10fd4 <gettext@plt>
   13228:	mov	r4, r0
   1322c:	ldr	r0, [fp, #-16]
   13230:	bl	17594 <__assert_fail@plt+0x6488>
   13234:	mov	r3, r0
   13238:	mov	r2, r4
   1323c:	mov	r1, #0
   13240:	mov	r0, #1
   13244:	bl	10f68 <error@plt>
   13248:	nop	{0}
   1324c:	sub	sp, fp, #8
   13250:	ldr	r4, [sp]
   13254:	ldr	fp, [sp, #4]
   13258:	add	sp, sp, #8
   1325c:	pop	{pc}		; (ldr pc, [sp], #4)
   13260:	str	fp, [sp, #-8]!
   13264:	str	lr, [sp, #4]
   13268:	add	fp, sp, #4
   1326c:	sub	sp, sp, #24
   13270:	str	r0, [fp, #-24]	; 0xffffffe8
   13274:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13278:	str	r3, [fp, #-8]
   1327c:	ldr	r3, [fp, #-8]
   13280:	str	r3, [fp, #-12]
   13284:	movw	r1, #47712	; 0xba60
   13288:	movt	r1, #1
   1328c:	ldr	r0, [fp, #-8]
   13290:	bl	110b8 <strpbrk@plt>
   13294:	str	r0, [fp, #-8]
   13298:	ldr	r3, [fp, #-8]
   1329c:	cmp	r3, #0
   132a0:	beq	132b8 <__assert_fail@plt+0x21ac>
   132a4:	ldr	r3, [fp, #-8]
   132a8:	add	r2, r3, #1
   132ac:	str	r2, [fp, #-8]
   132b0:	mov	r2, #0
   132b4:	strb	r2, [r3]
   132b8:	sub	r2, fp, #20
   132bc:	sub	r3, fp, #16
   132c0:	mov	r1, r3
   132c4:	ldr	r0, [fp, #-12]
   132c8:	bl	13108 <__assert_fail@plt+0x1ffc>
   132cc:	ldr	r3, [fp, #-16]
   132d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   132d4:	mov	r1, r2
   132d8:	mov	r0, r3
   132dc:	bl	12f18 <__assert_fail@plt+0x1e0c>
   132e0:	ldr	r3, [fp, #-8]
   132e4:	cmp	r3, #0
   132e8:	bne	1327c <__assert_fail@plt+0x2170>
   132ec:	nop	{0}
   132f0:	sub	sp, fp, #4
   132f4:	ldr	fp, [sp]
   132f8:	add	sp, sp, #4
   132fc:	pop	{pc}		; (ldr pc, [sp], #4)
   13300:	str	fp, [sp, #-8]!
   13304:	str	lr, [sp, #4]
   13308:	add	fp, sp, #4
   1330c:	sub	sp, sp, #24
   13310:	str	r0, [fp, #-16]
   13314:	str	r1, [fp, #-20]	; 0xffffffec
   13318:	ldr	r3, [fp, #-16]
   1331c:	ldr	r3, [r3]
   13320:	cmn	r3, #1
   13324:	beq	13380 <__assert_fail@plt+0x2274>
   13328:	ldr	r3, [fp, #-16]
   1332c:	ldr	r3, [r3]
   13330:	ldr	r2, [fp, #-20]	; 0xffffffec
   13334:	cmp	r2, r3
   13338:	beq	13380 <__assert_fail@plt+0x2274>
   1333c:	ldr	r3, [fp, #-16]
   13340:	ldr	r3, [r3]
   13344:	add	r3, r3, #1
   13348:	str	r3, [fp, #-8]
   1334c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13350:	add	r3, r3, #1
   13354:	str	r3, [fp, #-12]
   13358:	movw	r0, #47716	; 0xba64
   1335c:	movt	r0, #1
   13360:	bl	10fd4 <gettext@plt>
   13364:	mov	r2, r0
   13368:	ldr	r3, [fp, #-12]
   1336c:	str	r3, [sp]
   13370:	ldr	r3, [fp, #-8]
   13374:	mov	r1, #0
   13378:	mov	r0, #1
   1337c:	bl	10f68 <error@plt>
   13380:	ldr	r3, [fp, #-16]
   13384:	ldr	r2, [fp, #-20]	; 0xffffffec
   13388:	str	r2, [r3]
   1338c:	nop	{0}
   13390:	sub	sp, fp, #4
   13394:	ldr	fp, [sp]
   13398:	add	sp, sp, #4
   1339c:	pop	{pc}		; (ldr pc, [sp], #4)
   133a0:	str	r4, [sp, #-12]!
   133a4:	str	fp, [sp, #4]
   133a8:	str	lr, [sp, #8]
   133ac:	add	fp, sp, #8
   133b0:	sub	sp, sp, #36	; 0x24
   133b4:	str	r0, [fp, #-32]	; 0xffffffe0
   133b8:	str	r1, [fp, #-36]	; 0xffffffdc
   133bc:	str	r2, [fp, #-40]	; 0xffffffd8
   133c0:	str	r3, [fp, #-44]	; 0xffffffd4
   133c4:	ldr	r3, [fp, #4]
   133c8:	ldr	r3, [r3]
   133cc:	str	r3, [fp, #-16]
   133d0:	ldr	r3, [fp, #-16]
   133d4:	cmp	r3, #2
   133d8:	bne	13524 <__assert_fail@plt+0x2418>
   133dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   133e0:	ldr	r3, [r3]
   133e4:	cmp	r3, #0
   133e8:	moveq	r3, #1
   133ec:	movne	r3, #0
   133f0:	strb	r3, [fp, #-17]	; 0xffffffef
   133f4:	ldrb	r3, [fp, #-17]	; 0xffffffef
   133f8:	lsl	r3, r3, #2
   133fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13400:	add	r3, r2, r3
   13404:	ldr	r3, [r3]
   13408:	str	r3, [fp, #-24]	; 0xffffffe8
   1340c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   13410:	lsl	r3, r3, #2
   13414:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13418:	add	r3, r2, r3
   1341c:	ldr	r3, [r3]
   13420:	cmp	r3, #3
   13424:	ldrls	pc, [pc, r3, lsl #2]
   13428:	b	134e8 <__assert_fail@plt+0x23dc>
   1342c:	andeq	r3, r1, ip, lsr r4
   13430:	andeq	r3, r1, r4, ror r4
   13434:	andeq	r3, r1, r8, lsr #9
   13438:	ldrdeq	r3, [r1], -ip
   1343c:	movw	r0, #47752	; 0xba88
   13440:	movt	r0, #1
   13444:	bl	10fd4 <gettext@plt>
   13448:	mov	r4, r0
   1344c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13450:	mov	r0, #4
   13454:	bl	170b4 <__assert_fail@plt+0x5fa8>
   13458:	mov	r3, r0
   1345c:	mov	r2, r4
   13460:	mov	r1, #0
   13464:	mov	r0, #0
   13468:	bl	10f68 <error@plt>
   1346c:	mov	r0, #1
   13470:	bl	11440 <__assert_fail@plt+0x334>
   13474:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13478:	ldr	r3, [r3]
   1347c:	sub	r2, r3, #1
   13480:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13484:	str	r2, [r3]
   13488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1348c:	bl	13018 <__assert_fail@plt+0x1f0c>
   13490:	mov	r3, r0
   13494:	mov	r1, r3
   13498:	movw	r0, #53512	; 0xd108
   1349c:	movt	r0, #2
   134a0:	bl	13300 <__assert_fail@plt+0x21f4>
   134a4:	b	134e8 <__assert_fail@plt+0x23dc>
   134a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   134ac:	add	r3, r3, #4
   134b0:	ldr	r2, [r3]
   134b4:	sub	r2, r2, #1
   134b8:	str	r2, [r3]
   134bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134c0:	bl	13018 <__assert_fail@plt+0x1f0c>
   134c4:	mov	r3, r0
   134c8:	mov	r1, r3
   134cc:	movw	r0, #53516	; 0xd10c
   134d0:	movt	r0, #2
   134d4:	bl	13300 <__assert_fail@plt+0x21f4>
   134d8:	b	134e8 <__assert_fail@plt+0x23dc>
   134dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134e0:	bl	13260 <__assert_fail@plt+0x2154>
   134e4:	nop	{0}
   134e8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   134ec:	eor	r3, r3, #1
   134f0:	uxtb	r3, r3
   134f4:	cmp	r3, #0
   134f8:	beq	1351c <__assert_fail@plt+0x2410>
   134fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13500:	ldr	r2, [r3, #4]
   13504:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13508:	str	r2, [r3]
   1350c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13510:	ldr	r2, [r3, #4]
   13514:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13518:	str	r2, [r3]
   1351c:	mov	r3, #1
   13520:	str	r3, [fp, #-16]
   13524:	ldr	r3, [fp, #-16]
   13528:	lsl	r3, r3, #2
   1352c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13530:	add	r3, r2, r3
   13534:	ldr	r2, [fp, #8]
   13538:	ldr	r2, [r2]
   1353c:	str	r2, [r3]
   13540:	ldr	r3, [fp, #-16]
   13544:	lsl	r3, r3, #2
   13548:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1354c:	add	r3, r2, r3
   13550:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13554:	str	r2, [r3]
   13558:	ldr	r3, [fp, #-16]
   1355c:	add	r2, r3, #1
   13560:	ldr	r3, [fp, #4]
   13564:	str	r2, [r3]
   13568:	ldr	r3, [fp, #8]
   1356c:	ldr	r3, [r3]
   13570:	cmp	r3, #3
   13574:	bne	13584 <__assert_fail@plt+0x2478>
   13578:	ldr	r3, [fp, #12]
   1357c:	mov	r2, #3
   13580:	str	r2, [r3]
   13584:	nop	{0}
   13588:	sub	sp, fp, #8
   1358c:	ldr	r4, [sp]
   13590:	ldr	fp, [sp, #4]
   13594:	add	sp, sp, #8
   13598:	pop	{pc}		; (ldr pc, [sp], #4)
   1359c:	str	r4, [sp, #-12]!
   135a0:	str	fp, [sp, #4]
   135a4:	str	lr, [sp, #8]
   135a8:	add	fp, sp, #8
   135ac:	sub	sp, sp, #84	; 0x54
   135b0:	str	r0, [fp, #-72]	; 0xffffffb8
   135b4:	str	r1, [fp, #-76]	; 0xffffffb4
   135b8:	mov	r3, #0
   135bc:	str	r3, [fp, #-44]	; 0xffffffd4
   135c0:	mov	r3, #0
   135c4:	str	r3, [fp, #-60]	; 0xffffffc4
   135c8:	mov	r3, #0
   135cc:	str	r3, [fp, #-56]	; 0xffffffc8
   135d0:	mov	r3, #0
   135d4:	str	r3, [fp, #-64]	; 0xffffffc0
   135d8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   135dc:	ldr	r3, [r3]
   135e0:	mov	r0, r3
   135e4:	bl	14c34 <__assert_fail@plt+0x3b28>
   135e8:	movw	r1, #44800	; 0xaf00
   135ec:	movt	r1, #1
   135f0:	mov	r0, #6
   135f4:	bl	1107c <setlocale@plt>
   135f8:	movw	r1, #47772	; 0xba9c
   135fc:	movt	r1, #1
   13600:	movw	r0, #44824	; 0xaf18
   13604:	movt	r0, #1
   13608:	bl	110c4 <bindtextdomain@plt>
   1360c:	movw	r0, #44824	; 0xaf18
   13610:	movt	r0, #1
   13614:	bl	10f08 <textdomain@plt>
   13618:	mov	r0, #3
   1361c:	bl	1486c <__assert_fail@plt+0x3760>
   13620:	mov	r3, r0
   13624:	mov	r2, r3
   13628:	movw	r3, #53688	; 0xd1b8
   1362c:	movt	r3, #2
   13630:	strb	r2, [r3]
   13634:	movw	r0, #16888	; 0x41f8
   13638:	movt	r0, #1
   1363c:	bl	1ade4 <__assert_fail@plt+0x9cd8>
   13640:	movw	r0, #8188	; 0x1ffc
   13644:	movt	r0, #1
   13648:	bl	1ade4 <__assert_fail@plt+0x9cd8>
   1364c:	movw	r3, #53691	; 0xd1bb
   13650:	movt	r3, #2
   13654:	mov	r2, #1
   13658:	strb	r2, [r3]
   1365c:	movw	r3, #53692	; 0xd1bc
   13660:	movt	r3, #2
   13664:	mov	r2, #0
   13668:	strb	r2, [r3]
   1366c:	movw	r3, #53696	; 0xd1c0
   13670:	movt	r3, #2
   13674:	mov	r2, #0
   13678:	strb	r2, [r3, #1]
   1367c:	movw	r3, #53696	; 0xd1c0
   13680:	movt	r3, #2
   13684:	ldrb	r2, [r3, #1]
   13688:	movw	r3, #53696	; 0xd1c0
   1368c:	movt	r3, #2
   13690:	strb	r2, [r3]
   13694:	movw	r3, #53728	; 0xd1e0
   13698:	movt	r3, #2
   1369c:	mov	r2, #0
   136a0:	str	r2, [r3]
   136a4:	b	13d00 <__assert_fail@plt+0x2bf4>
   136a8:	mov	r3, #0
   136ac:	str	r3, [fp, #-40]	; 0xffffffd8
   136b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136b4:	cmp	r3, #105	; 0x69
   136b8:	beq	13908 <__assert_fail@plt+0x27fc>
   136bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136c0:	cmp	r3, #105	; 0x69
   136c4:	bgt	13730 <__assert_fail@plt+0x2624>
   136c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136cc:	cmp	r3, #49	; 0x31
   136d0:	beq	1391c <__assert_fail@plt+0x2810>
   136d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136d8:	cmp	r3, #49	; 0x31
   136dc:	bgt	13708 <__assert_fail@plt+0x25fc>
   136e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136e4:	cmn	r3, #2
   136e8:	beq	13c9c <__assert_fail@plt+0x2b90>
   136ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136f0:	cmp	r3, #1
   136f4:	beq	13c48 <__assert_fail@plt+0x2b3c>
   136f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136fc:	cmn	r3, #3
   13700:	beq	13ca4 <__assert_fail@plt+0x2b98>
   13704:	b	13cf0 <__assert_fail@plt+0x2be4>
   13708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1370c:	cmp	r3, #97	; 0x61
   13710:	beq	137cc <__assert_fail@plt+0x26c0>
   13714:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13718:	cmp	r3, #101	; 0x65
   1371c:	beq	13888 <__assert_fail@plt+0x277c>
   13720:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13724:	cmp	r3, #50	; 0x32
   13728:	beq	13948 <__assert_fail@plt+0x283c>
   1372c:	b	13cf0 <__assert_fail@plt+0x2be4>
   13730:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13734:	cmp	r3, #118	; 0x76
   13738:	beq	137bc <__assert_fail@plt+0x26b0>
   1373c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13740:	cmp	r3, #118	; 0x76
   13744:	bgt	13770 <__assert_fail@plt+0x2664>
   13748:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1374c:	cmp	r3, #111	; 0x6f
   13750:	beq	13a9c <__assert_fail@plt+0x2990>
   13754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13758:	cmp	r3, #116	; 0x74
   1375c:	beq	13af8 <__assert_fail@plt+0x29ec>
   13760:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13764:	cmp	r3, #106	; 0x6a
   13768:	beq	13974 <__assert_fail@plt+0x2868>
   1376c:	b	13cf0 <__assert_fail@plt+0x2be4>
   13770:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13774:	cmp	r3, #256	; 0x100
   13778:	beq	13c34 <__assert_fail@plt+0x2b28>
   1377c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13780:	cmp	r3, #256	; 0x100
   13784:	bgt	13798 <__assert_fail@plt+0x268c>
   13788:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1378c:	cmp	r3, #122	; 0x7a
   13790:	beq	13c0c <__assert_fail@plt+0x2b00>
   13794:	b	13cf0 <__assert_fail@plt+0x2be4>
   13798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1379c:	movw	r2, #257	; 0x101
   137a0:	cmp	r3, r2
   137a4:	beq	13c20 <__assert_fail@plt+0x2b14>
   137a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   137ac:	movw	r2, #258	; 0x102
   137b0:	cmp	r3, r2
   137b4:	beq	13c88 <__assert_fail@plt+0x2b7c>
   137b8:	b	13cf0 <__assert_fail@plt+0x2be4>
   137bc:	movw	r3, #53691	; 0xd1bb
   137c0:	movt	r3, #2
   137c4:	mov	r2, #0
   137c8:	strb	r2, [r3]
   137cc:	movw	r3, #53640	; 0xd188
   137d0:	movt	r3, #2
   137d4:	ldr	r0, [r3]
   137d8:	sub	r2, fp, #68	; 0x44
   137dc:	movw	r3, #44800	; 0xaf00
   137e0:	movt	r3, #1
   137e4:	str	r3, [sp]
   137e8:	mov	r3, r2
   137ec:	mov	r2, #10
   137f0:	mov	r1, #0
   137f4:	bl	18bc4 <__assert_fail@plt+0x7ab8>
   137f8:	mov	r3, r0
   137fc:	cmp	r3, #0
   13800:	bne	1381c <__assert_fail@plt+0x2710>
   13804:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13808:	cmp	r3, #1
   1380c:	beq	13854 <__assert_fail@plt+0x2748>
   13810:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13814:	cmp	r3, #2
   13818:	beq	13854 <__assert_fail@plt+0x2748>
   1381c:	movw	r0, #47616	; 0xba00
   13820:	movt	r0, #1
   13824:	bl	10fd4 <gettext@plt>
   13828:	mov	r4, r0
   1382c:	movw	r3, #53640	; 0xd188
   13830:	movt	r3, #2
   13834:	ldr	r3, [r3]
   13838:	mov	r0, r3
   1383c:	bl	17594 <__assert_fail@plt+0x6488>
   13840:	mov	r3, r0
   13844:	mov	r2, r4
   13848:	mov	r1, #0
   1384c:	mov	r0, #1
   13850:	bl	10f68 <error@plt>
   13854:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13858:	cmp	r3, #1
   1385c:	bne	13874 <__assert_fail@plt+0x2768>
   13860:	movw	r3, #53689	; 0xd1b9
   13864:	movt	r3, #2
   13868:	mov	r2, #1
   1386c:	strb	r2, [r3]
   13870:	b	13cf8 <__assert_fail@plt+0x2bec>
   13874:	movw	r3, #53690	; 0xd1ba
   13878:	movt	r3, #2
   1387c:	mov	r2, #1
   13880:	strb	r2, [r3]
   13884:	b	13cf8 <__assert_fail@plt+0x2bec>
   13888:	movw	r3, #53700	; 0xd1c4
   1388c:	movt	r3, #2
   13890:	ldr	r3, [r3]
   13894:	cmp	r3, #0
   13898:	beq	138ec <__assert_fail@plt+0x27e0>
   1389c:	movw	r3, #53700	; 0xd1c4
   138a0:	movt	r3, #2
   138a4:	ldr	r2, [r3]
   138a8:	movw	r3, #53640	; 0xd188
   138ac:	movt	r3, #2
   138b0:	ldr	r3, [r3]
   138b4:	mov	r1, r3
   138b8:	mov	r0, r2
   138bc:	bl	10e6c <strcmp@plt>
   138c0:	mov	r3, r0
   138c4:	cmp	r3, #0
   138c8:	beq	138ec <__assert_fail@plt+0x27e0>
   138cc:	movw	r0, #47796	; 0xbab4
   138d0:	movt	r0, #1
   138d4:	bl	10fd4 <gettext@plt>
   138d8:	mov	r3, r0
   138dc:	mov	r2, r3
   138e0:	mov	r1, #0
   138e4:	mov	r0, #1
   138e8:	bl	10f68 <error@plt>
   138ec:	movw	r3, #53640	; 0xd188
   138f0:	movt	r3, #2
   138f4:	ldr	r2, [r3]
   138f8:	movw	r3, #53700	; 0xd1c4
   138fc:	movt	r3, #2
   13900:	str	r2, [r3]
   13904:	b	13cf8 <__assert_fail@plt+0x2bec>
   13908:	movw	r3, #53756	; 0xd1fc
   1390c:	movt	r3, #2
   13910:	mov	r2, #1
   13914:	strb	r2, [r3]
   13918:	b	13cf8 <__assert_fail@plt+0x2bec>
   1391c:	movw	r3, #53640	; 0xd188
   13920:	movt	r3, #2
   13924:	ldr	r3, [r3]
   13928:	mov	r0, r3
   1392c:	bl	13018 <__assert_fail@plt+0x1f0c>
   13930:	mov	r3, r0
   13934:	mov	r1, r3
   13938:	movw	r0, #53512	; 0xd108
   1393c:	movt	r0, #2
   13940:	bl	13300 <__assert_fail@plt+0x21f4>
   13944:	b	13cf8 <__assert_fail@plt+0x2bec>
   13948:	movw	r3, #53640	; 0xd188
   1394c:	movt	r3, #2
   13950:	ldr	r3, [r3]
   13954:	mov	r0, r3
   13958:	bl	13018 <__assert_fail@plt+0x1f0c>
   1395c:	mov	r3, r0
   13960:	mov	r1, r3
   13964:	movw	r0, #53516	; 0xd10c
   13968:	movt	r0, #2
   1396c:	bl	13300 <__assert_fail@plt+0x21f4>
   13970:	b	13cf8 <__assert_fail@plt+0x2bec>
   13974:	movw	r3, #53640	; 0xd188
   13978:	movt	r3, #2
   1397c:	ldr	r3, [r3]
   13980:	ldrb	r3, [r3]
   13984:	cmp	r3, #49	; 0x31
   13988:	beq	139a4 <__assert_fail@plt+0x2898>
   1398c:	movw	r3, #53640	; 0xd188
   13990:	movt	r3, #2
   13994:	ldr	r3, [r3]
   13998:	ldrb	r3, [r3]
   1399c:	cmp	r3, #50	; 0x32
   139a0:	bne	13a54 <__assert_fail@plt+0x2948>
   139a4:	movw	r3, #53640	; 0xd188
   139a8:	movt	r3, #2
   139ac:	ldr	r3, [r3]
   139b0:	add	r3, r3, #1
   139b4:	ldrb	r3, [r3]
   139b8:	cmp	r3, #0
   139bc:	bne	13a54 <__assert_fail@plt+0x2948>
   139c0:	movw	r3, #53616	; 0xd170
   139c4:	movt	r3, #2
   139c8:	ldr	r3, [r3]
   139cc:	sub	r3, r3, #-1073741823	; 0xc0000001
   139d0:	lsl	r3, r3, #2
   139d4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   139d8:	add	r3, r2, r3
   139dc:	ldr	r3, [r3]
   139e0:	add	r2, r3, #2
   139e4:	movw	r3, #53640	; 0xd188
   139e8:	movt	r3, #2
   139ec:	ldr	r3, [r3]
   139f0:	cmp	r2, r3
   139f4:	bne	13a54 <__assert_fail@plt+0x2948>
   139f8:	movw	r3, #53640	; 0xd188
   139fc:	movt	r3, #2
   13a00:	ldr	r3, [r3]
   13a04:	ldrb	r3, [r3]
   13a08:	cmp	r3, #50	; 0x32
   13a0c:	moveq	r3, #1
   13a10:	movne	r3, #0
   13a14:	strb	r3, [fp, #-25]	; 0xffffffe7
   13a18:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   13a1c:	lsl	r3, r2, #2
   13a20:	sub	r1, fp, #12
   13a24:	add	r3, r1, r3
   13a28:	ldr	r3, [r3, #-48]	; 0xffffffd0
   13a2c:	add	r1, r3, #1
   13a30:	lsl	r3, r2, #2
   13a34:	sub	r2, fp, #12
   13a38:	add	r3, r2, r3
   13a3c:	str	r1, [r3, #-48]	; 0xffffffd0
   13a40:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   13a44:	add	r3, r3, #1
   13a48:	str	r3, [fp, #-40]	; 0xffffffd8
   13a4c:	nop	{0}
   13a50:	b	13cf8 <__assert_fail@plt+0x2bec>
   13a54:	movw	r3, #53640	; 0xd188
   13a58:	movt	r3, #2
   13a5c:	ldr	r3, [r3]
   13a60:	mov	r0, r3
   13a64:	bl	13018 <__assert_fail@plt+0x1f0c>
   13a68:	mov	r3, r0
   13a6c:	mov	r1, r3
   13a70:	movw	r0, #53512	; 0xd108
   13a74:	movt	r0, #2
   13a78:	bl	13300 <__assert_fail@plt+0x21f4>
   13a7c:	movw	r3, #53512	; 0xd108
   13a80:	movt	r3, #2
   13a84:	ldr	r3, [r3]
   13a88:	mov	r1, r3
   13a8c:	movw	r0, #53516	; 0xd10c
   13a90:	movt	r0, #2
   13a94:	bl	13300 <__assert_fail@plt+0x21f4>
   13a98:	b	13cf8 <__assert_fail@plt+0x2bec>
   13a9c:	movw	r3, #53640	; 0xd188
   13aa0:	movt	r3, #2
   13aa4:	ldr	r3, [r3]
   13aa8:	movw	r1, #47840	; 0xbae0
   13aac:	movt	r1, #1
   13ab0:	mov	r0, r3
   13ab4:	bl	10e6c <strcmp@plt>
   13ab8:	mov	r3, r0
   13abc:	cmp	r3, #0
   13ac0:	bne	13ad8 <__assert_fail@plt+0x29cc>
   13ac4:	movw	r3, #53704	; 0xd1c8
   13ac8:	movt	r3, #2
   13acc:	mov	r2, #1
   13ad0:	strb	r2, [r3]
   13ad4:	b	13cf8 <__assert_fail@plt+0x2bec>
   13ad8:	movw	r3, #53640	; 0xd188
   13adc:	movt	r3, #2
   13ae0:	ldr	r3, [r3]
   13ae4:	mov	r0, r3
   13ae8:	bl	13260 <__assert_fail@plt+0x2154>
   13aec:	mov	r3, #3
   13af0:	str	r3, [fp, #-40]	; 0xffffffd8
   13af4:	b	13cf8 <__assert_fail@plt+0x2bec>
   13af8:	movw	r3, #53640	; 0xd188
   13afc:	movt	r3, #2
   13b00:	ldr	r3, [r3]
   13b04:	ldrb	r3, [r3]
   13b08:	strb	r3, [fp, #-17]	; 0xffffffef
   13b0c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   13b10:	cmp	r3, #0
   13b14:	bne	13b24 <__assert_fail@plt+0x2a18>
   13b18:	mov	r3, #10
   13b1c:	strb	r3, [fp, #-17]	; 0xffffffef
   13b20:	b	13bac <__assert_fail@plt+0x2aa0>
   13b24:	movw	r3, #53640	; 0xd188
   13b28:	movt	r3, #2
   13b2c:	ldr	r3, [r3]
   13b30:	add	r3, r3, #1
   13b34:	ldrb	r3, [r3]
   13b38:	cmp	r3, #0
   13b3c:	beq	13bac <__assert_fail@plt+0x2aa0>
   13b40:	movw	r3, #53640	; 0xd188
   13b44:	movt	r3, #2
   13b48:	ldr	r3, [r3]
   13b4c:	movw	r1, #47848	; 0xbae8
   13b50:	movt	r1, #1
   13b54:	mov	r0, r3
   13b58:	bl	10e6c <strcmp@plt>
   13b5c:	mov	r3, r0
   13b60:	cmp	r3, #0
   13b64:	bne	13b74 <__assert_fail@plt+0x2a68>
   13b68:	mov	r3, #0
   13b6c:	strb	r3, [fp, #-17]	; 0xffffffef
   13b70:	b	13bac <__assert_fail@plt+0x2aa0>
   13b74:	movw	r0, #47852	; 0xbaec
   13b78:	movt	r0, #1
   13b7c:	bl	10fd4 <gettext@plt>
   13b80:	mov	r4, r0
   13b84:	movw	r3, #53640	; 0xd188
   13b88:	movt	r3, #2
   13b8c:	ldr	r3, [r3]
   13b90:	mov	r0, r3
   13b94:	bl	17594 <__assert_fail@plt+0x6488>
   13b98:	mov	r3, r0
   13b9c:	mov	r2, r4
   13ba0:	mov	r1, #0
   13ba4:	mov	r0, #1
   13ba8:	bl	10f68 <error@plt>
   13bac:	movw	r3, #53524	; 0xd114
   13bb0:	movt	r3, #2
   13bb4:	ldr	r3, [r3]
   13bb8:	cmp	r3, #0
   13bbc:	blt	13bf8 <__assert_fail@plt+0x2aec>
   13bc0:	ldrb	r2, [fp, #-17]	; 0xffffffef
   13bc4:	movw	r3, #53524	; 0xd114
   13bc8:	movt	r3, #2
   13bcc:	ldr	r3, [r3]
   13bd0:	cmp	r2, r3
   13bd4:	beq	13bf8 <__assert_fail@plt+0x2aec>
   13bd8:	movw	r0, #47876	; 0xbb04
   13bdc:	movt	r0, #1
   13be0:	bl	10fd4 <gettext@plt>
   13be4:	mov	r3, r0
   13be8:	mov	r2, r3
   13bec:	mov	r1, #0
   13bf0:	mov	r0, #1
   13bf4:	bl	10f68 <error@plt>
   13bf8:	ldrb	r2, [fp, #-17]	; 0xffffffef
   13bfc:	movw	r3, #53524	; 0xd114
   13c00:	movt	r3, #2
   13c04:	str	r2, [r3]
   13c08:	b	13cf8 <__assert_fail@plt+0x2bec>
   13c0c:	movw	r3, #53528	; 0xd118
   13c10:	movt	r3, #2
   13c14:	mov	r2, #0
   13c18:	strb	r2, [r3]
   13c1c:	b	13cf8 <__assert_fail@plt+0x2bec>
   13c20:	movw	r3, #53728	; 0xd1e0
   13c24:	movt	r3, #2
   13c28:	mov	r2, #2
   13c2c:	str	r2, [r3]
   13c30:	b	13cf8 <__assert_fail@plt+0x2bec>
   13c34:	movw	r3, #53728	; 0xd1e0
   13c38:	movt	r3, #2
   13c3c:	mov	r2, #1
   13c40:	str	r2, [r3]
   13c44:	b	13cf8 <__assert_fail@plt+0x2bec>
   13c48:	movw	r3, #53640	; 0xd188
   13c4c:	movt	r3, #2
   13c50:	ldr	r0, [r3]
   13c54:	sub	r1, fp, #60	; 0x3c
   13c58:	sub	r2, fp, #52	; 0x34
   13c5c:	sub	r3, fp, #40	; 0x28
   13c60:	str	r3, [sp, #8]
   13c64:	sub	r3, fp, #44	; 0x2c
   13c68:	str	r3, [sp, #4]
   13c6c:	sub	r3, fp, #64	; 0x40
   13c70:	str	r3, [sp]
   13c74:	mov	r3, r1
   13c78:	movw	r1, #53672	; 0xd1a8
   13c7c:	movt	r1, #2
   13c80:	bl	133a0 <__assert_fail@plt+0x2294>
   13c84:	b	13cf8 <__assert_fail@plt+0x2bec>
   13c88:	movw	r3, #53757	; 0xd1fd
   13c8c:	movt	r3, #2
   13c90:	mov	r2, #1
   13c94:	strb	r2, [r3]
   13c98:	b	13cf8 <__assert_fail@plt+0x2bec>
   13c9c:	mov	r0, #0
   13ca0:	bl	11440 <__assert_fail@plt+0x334>
   13ca4:	movw	r3, #53636	; 0xd184
   13ca8:	movt	r3, #2
   13cac:	ldr	r0, [r3]
   13cb0:	movw	r3, #53532	; 0xd11c
   13cb4:	movt	r3, #2
   13cb8:	ldr	r2, [r3]
   13cbc:	mov	r3, #0
   13cc0:	str	r3, [sp, #4]
   13cc4:	movw	r3, #47896	; 0xbb18
   13cc8:	movt	r3, #1
   13ccc:	str	r3, [sp]
   13cd0:	mov	r3, r2
   13cd4:	movw	r2, #44616	; 0xae48
   13cd8:	movt	r2, #1
   13cdc:	movw	r1, #47492	; 0xb984
   13ce0:	movt	r1, #1
   13ce4:	bl	17e70 <__assert_fail@plt+0x6d64>
   13ce8:	mov	r0, #0
   13cec:	bl	10fc8 <exit@plt>
   13cf0:	mov	r0, #1
   13cf4:	bl	11440 <__assert_fail@plt+0x334>
   13cf8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13cfc:	str	r3, [fp, #-44]	; 0xffffffd4
   13d00:	mov	r3, #0
   13d04:	str	r3, [sp]
   13d08:	movw	r3, #45060	; 0xb004
   13d0c:	movt	r3, #1
   13d10:	movw	r2, #47912	; 0xbb28
   13d14:	movt	r2, #1
   13d18:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13d1c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13d20:	bl	10fb0 <getopt_long@plt>
   13d24:	str	r0, [fp, #-24]	; 0xffffffe8
   13d28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13d2c:	cmn	r3, #1
   13d30:	bne	136a8 <__assert_fail@plt+0x259c>
   13d34:	mov	r3, #0
   13d38:	str	r3, [fp, #-44]	; 0xffffffd4
   13d3c:	b	13da0 <__assert_fail@plt+0x2c94>
   13d40:	movw	r3, #53616	; 0xd170
   13d44:	movt	r3, #2
   13d48:	ldr	r2, [r3]
   13d4c:	add	r1, r2, #1
   13d50:	movw	r3, #53616	; 0xd170
   13d54:	movt	r3, #2
   13d58:	str	r1, [r3]
   13d5c:	mov	r3, r2
   13d60:	lsl	r3, r3, #2
   13d64:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13d68:	add	r3, r2, r3
   13d6c:	ldr	r0, [r3]
   13d70:	sub	r1, fp, #60	; 0x3c
   13d74:	sub	r2, fp, #52	; 0x34
   13d78:	sub	r3, fp, #40	; 0x28
   13d7c:	str	r3, [sp, #8]
   13d80:	sub	r3, fp, #44	; 0x2c
   13d84:	str	r3, [sp, #4]
   13d88:	sub	r3, fp, #64	; 0x40
   13d8c:	str	r3, [sp]
   13d90:	mov	r3, r1
   13d94:	movw	r1, #53672	; 0xd1a8
   13d98:	movt	r1, #2
   13d9c:	bl	133a0 <__assert_fail@plt+0x2294>
   13da0:	movw	r3, #53616	; 0xd170
   13da4:	movt	r3, #2
   13da8:	ldr	r3, [r3]
   13dac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13db0:	cmp	r2, r3
   13db4:	bgt	13d40 <__assert_fail@plt+0x2c34>
   13db8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13dbc:	cmp	r3, #2
   13dc0:	beq	13e40 <__assert_fail@plt+0x2d34>
   13dc4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13dc8:	cmp	r3, #0
   13dcc:	bne	13df4 <__assert_fail@plt+0x2ce8>
   13dd0:	movw	r0, #47932	; 0xbb3c
   13dd4:	movt	r0, #1
   13dd8:	bl	10fd4 <gettext@plt>
   13ddc:	mov	r3, r0
   13de0:	mov	r2, r3
   13de4:	mov	r1, #0
   13de8:	mov	r0, #0
   13dec:	bl	10f68 <error@plt>
   13df0:	b	13e38 <__assert_fail@plt+0x2d2c>
   13df4:	movw	r0, #47948	; 0xbb4c
   13df8:	movt	r0, #1
   13dfc:	bl	10fd4 <gettext@plt>
   13e00:	mov	r4, r0
   13e04:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13e08:	sub	r3, r3, #-1073741823	; 0xc0000001
   13e0c:	lsl	r3, r3, #2
   13e10:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13e14:	add	r3, r2, r3
   13e18:	ldr	r3, [r3]
   13e1c:	mov	r0, r3
   13e20:	bl	17594 <__assert_fail@plt+0x6488>
   13e24:	mov	r3, r0
   13e28:	mov	r2, r4
   13e2c:	mov	r1, #0
   13e30:	mov	r0, #0
   13e34:	bl	10f68 <error@plt>
   13e38:	mov	r0, #1
   13e3c:	bl	11440 <__assert_fail@plt+0x334>
   13e40:	mov	r3, #0
   13e44:	str	r3, [fp, #-16]
   13e48:	b	13e9c <__assert_fail@plt+0x2d90>
   13e4c:	ldr	r3, [fp, #-16]
   13e50:	lsl	r3, r3, #2
   13e54:	sub	r2, fp, #12
   13e58:	add	r3, r2, r3
   13e5c:	ldr	r3, [r3, #-48]	; 0xffffffd0
   13e60:	cmp	r3, #0
   13e64:	beq	13e90 <__assert_fail@plt+0x2d84>
   13e68:	ldr	r3, [fp, #-16]
   13e6c:	mov	r1, r3
   13e70:	movw	r0, #53512	; 0xd108
   13e74:	movt	r0, #2
   13e78:	bl	13300 <__assert_fail@plt+0x21f4>
   13e7c:	ldr	r3, [fp, #-16]
   13e80:	mov	r1, r3
   13e84:	movw	r0, #53516	; 0xd10c
   13e88:	movt	r0, #2
   13e8c:	bl	13300 <__assert_fail@plt+0x21f4>
   13e90:	ldr	r3, [fp, #-16]
   13e94:	add	r3, r3, #1
   13e98:	str	r3, [fp, #-16]
   13e9c:	ldr	r3, [fp, #-16]
   13ea0:	cmp	r3, #1
   13ea4:	ble	13e4c <__assert_fail@plt+0x2d40>
   13ea8:	movw	r3, #53512	; 0xd108
   13eac:	movt	r3, #2
   13eb0:	ldr	r3, [r3]
   13eb4:	cmn	r3, #1
   13eb8:	bne	13ecc <__assert_fail@plt+0x2dc0>
   13ebc:	movw	r3, #53512	; 0xd108
   13ec0:	movt	r3, #2
   13ec4:	mov	r2, #0
   13ec8:	str	r2, [r3]
   13ecc:	movw	r3, #53516	; 0xd10c
   13ed0:	movt	r3, #2
   13ed4:	ldr	r3, [r3]
   13ed8:	cmn	r3, #1
   13edc:	bne	13ef0 <__assert_fail@plt+0x2de4>
   13ee0:	movw	r3, #53516	; 0xd10c
   13ee4:	movt	r3, #2
   13ee8:	mov	r2, #0
   13eec:	str	r2, [r3]
   13ef0:	movw	r3, #53672	; 0xd1a8
   13ef4:	movt	r3, #2
   13ef8:	ldr	r3, [r3]
   13efc:	movw	r1, #47976	; 0xbb68
   13f00:	movt	r1, #1
   13f04:	mov	r0, r3
   13f08:	bl	10e6c <strcmp@plt>
   13f0c:	mov	r3, r0
   13f10:	cmp	r3, #0
   13f14:	beq	13f3c <__assert_fail@plt+0x2e30>
   13f18:	movw	r3, #53672	; 0xd1a8
   13f1c:	movt	r3, #2
   13f20:	ldr	r3, [r3]
   13f24:	movw	r1, #47980	; 0xbb6c
   13f28:	movt	r1, #1
   13f2c:	mov	r0, r3
   13f30:	bl	145c0 <__assert_fail@plt+0x34b4>
   13f34:	mov	r3, r0
   13f38:	b	13f48 <__assert_fail@plt+0x2e3c>
   13f3c:	movw	r3, #53632	; 0xd180
   13f40:	movt	r3, #2
   13f44:	ldr	r3, [r3]
   13f48:	str	r3, [fp, #-32]	; 0xffffffe0
   13f4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13f50:	cmp	r3, #0
   13f54:	bne	13f98 <__assert_fail@plt+0x2e8c>
   13f58:	bl	11010 <__errno_location@plt>
   13f5c:	mov	r3, r0
   13f60:	ldr	r4, [r3]
   13f64:	movw	r3, #53672	; 0xd1a8
   13f68:	movt	r3, #2
   13f6c:	ldr	r3, [r3]
   13f70:	mov	r2, r3
   13f74:	mov	r1, #3
   13f78:	mov	r0, #0
   13f7c:	bl	17298 <__assert_fail@plt+0x618c>
   13f80:	mov	r3, r0
   13f84:	movw	r2, #47984	; 0xbb70
   13f88:	movt	r2, #1
   13f8c:	mov	r1, r4
   13f90:	mov	r0, #1
   13f94:	bl	10f68 <error@plt>
   13f98:	movw	r3, #53672	; 0xd1a8
   13f9c:	movt	r3, #2
   13fa0:	ldr	r3, [r3, #4]
   13fa4:	movw	r1, #47976	; 0xbb68
   13fa8:	movt	r1, #1
   13fac:	mov	r0, r3
   13fb0:	bl	10e6c <strcmp@plt>
   13fb4:	mov	r3, r0
   13fb8:	cmp	r3, #0
   13fbc:	beq	13fe4 <__assert_fail@plt+0x2ed8>
   13fc0:	movw	r3, #53672	; 0xd1a8
   13fc4:	movt	r3, #2
   13fc8:	ldr	r3, [r3, #4]
   13fcc:	movw	r1, #47980	; 0xbb6c
   13fd0:	movt	r1, #1
   13fd4:	mov	r0, r3
   13fd8:	bl	145c0 <__assert_fail@plt+0x34b4>
   13fdc:	mov	r3, r0
   13fe0:	b	13ff0 <__assert_fail@plt+0x2ee4>
   13fe4:	movw	r3, #53632	; 0xd180
   13fe8:	movt	r3, #2
   13fec:	ldr	r3, [r3]
   13ff0:	str	r3, [fp, #-36]	; 0xffffffdc
   13ff4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13ff8:	cmp	r3, #0
   13ffc:	bne	14040 <__assert_fail@plt+0x2f34>
   14000:	bl	11010 <__errno_location@plt>
   14004:	mov	r3, r0
   14008:	ldr	r4, [r3]
   1400c:	movw	r3, #53672	; 0xd1a8
   14010:	movt	r3, #2
   14014:	ldr	r3, [r3, #4]
   14018:	mov	r2, r3
   1401c:	mov	r1, #3
   14020:	mov	r0, #0
   14024:	bl	17298 <__assert_fail@plt+0x618c>
   14028:	mov	r3, r0
   1402c:	movw	r2, #47984	; 0xbb70
   14030:	movt	r2, #1
   14034:	mov	r1, r4
   14038:	mov	r0, #1
   1403c:	bl	10f68 <error@plt>
   14040:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14044:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14048:	cmp	r2, r3
   1404c:	bne	1407c <__assert_fail@plt+0x2f70>
   14050:	bl	11010 <__errno_location@plt>
   14054:	mov	r3, r0
   14058:	ldr	r4, [r3]
   1405c:	movw	r0, #47988	; 0xbb74
   14060:	movt	r0, #1
   14064:	bl	10fd4 <gettext@plt>
   14068:	mov	r3, r0
   1406c:	mov	r2, r3
   14070:	mov	r1, r4
   14074:	mov	r0, #1
   14078:	bl	10f68 <error@plt>
   1407c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14080:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14084:	bl	1271c <__assert_fail@plt+0x1610>
   14088:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1408c:	bl	143fc <__assert_fail@plt+0x32f0>
   14090:	mov	r3, r0
   14094:	cmp	r3, #0
   14098:	beq	140dc <__assert_fail@plt+0x2fd0>
   1409c:	bl	11010 <__errno_location@plt>
   140a0:	mov	r3, r0
   140a4:	ldr	r4, [r3]
   140a8:	movw	r3, #53672	; 0xd1a8
   140ac:	movt	r3, #2
   140b0:	ldr	r3, [r3]
   140b4:	mov	r2, r3
   140b8:	mov	r1, #3
   140bc:	mov	r0, #0
   140c0:	bl	17298 <__assert_fail@plt+0x618c>
   140c4:	mov	r3, r0
   140c8:	movw	r2, #47984	; 0xbb70
   140cc:	movt	r2, #1
   140d0:	mov	r1, r4
   140d4:	mov	r0, #1
   140d8:	bl	10f68 <error@plt>
   140dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   140e0:	bl	143fc <__assert_fail@plt+0x32f0>
   140e4:	mov	r3, r0
   140e8:	cmp	r3, #0
   140ec:	beq	14130 <__assert_fail@plt+0x3024>
   140f0:	bl	11010 <__errno_location@plt>
   140f4:	mov	r3, r0
   140f8:	ldr	r4, [r3]
   140fc:	movw	r3, #53672	; 0xd1a8
   14100:	movt	r3, #2
   14104:	ldr	r3, [r3, #4]
   14108:	mov	r2, r3
   1410c:	mov	r1, #3
   14110:	mov	r0, #0
   14114:	bl	17298 <__assert_fail@plt+0x618c>
   14118:	mov	r3, r0
   1411c:	movw	r2, #47984	; 0xbb70
   14120:	movt	r2, #1
   14124:	mov	r1, r4
   14128:	mov	r0, #1
   1412c:	bl	10f68 <error@plt>
   14130:	movw	r3, #53696	; 0xd1c0
   14134:	movt	r3, #2
   14138:	ldrb	r3, [r3]
   1413c:	cmp	r3, #0
   14140:	bne	14158 <__assert_fail@plt+0x304c>
   14144:	movw	r3, #53696	; 0xd1c0
   14148:	movt	r3, #2
   1414c:	ldrb	r3, [r3, #1]
   14150:	cmp	r3, #0
   14154:	beq	14178 <__assert_fail@plt+0x306c>
   14158:	movw	r0, #48024	; 0xbb98
   1415c:	movt	r0, #1
   14160:	bl	10fd4 <gettext@plt>
   14164:	mov	r3, r0
   14168:	mov	r2, r3
   1416c:	mov	r1, #0
   14170:	mov	r0, #1
   14174:	bl	10f68 <error@plt>
   14178:	mov	r3, #0
   1417c:	mov	r0, r3
   14180:	sub	sp, fp, #8
   14184:	ldr	r4, [sp]
   14188:	ldr	fp, [sp, #4]
   1418c:	add	sp, sp, #8
   14190:	pop	{pc}		; (ldr pc, [sp], #4)
   14194:	push	{fp}		; (str fp, [sp, #-4]!)
   14198:	add	fp, sp, #0
   1419c:	sub	sp, sp, #12
   141a0:	str	r0, [fp, #-8]
   141a4:	movw	r3, #53760	; 0xd200
   141a8:	movt	r3, #2
   141ac:	ldr	r2, [fp, #-8]
   141b0:	str	r2, [r3]
   141b4:	nop	{0}
   141b8:	add	sp, fp, #0
   141bc:	pop	{fp}		; (ldr fp, [sp], #4)
   141c0:	bx	lr
   141c4:	push	{fp}		; (str fp, [sp, #-4]!)
   141c8:	add	fp, sp, #0
   141cc:	sub	sp, sp, #12
   141d0:	mov	r3, r0
   141d4:	strb	r3, [fp, #-5]
   141d8:	movw	r3, #53764	; 0xd204
   141dc:	movt	r3, #2
   141e0:	ldrb	r2, [fp, #-5]
   141e4:	strb	r2, [r3]
   141e8:	nop	{0}
   141ec:	add	sp, fp, #0
   141f0:	pop	{fp}		; (ldr fp, [sp], #4)
   141f4:	bx	lr
   141f8:	str	r4, [sp, #-12]!
   141fc:	str	fp, [sp, #4]
   14200:	str	lr, [sp, #8]
   14204:	add	fp, sp, #8
   14208:	sub	sp, sp, #20
   1420c:	movw	r3, #53636	; 0xd184
   14210:	movt	r3, #2
   14214:	ldr	r3, [r3]
   14218:	mov	r0, r3
   1421c:	bl	19d74 <__assert_fail@plt+0x8c68>
   14220:	mov	r3, r0
   14224:	cmp	r3, #0
   14228:	beq	142fc <__assert_fail@plt+0x31f0>
   1422c:	movw	r3, #53764	; 0xd204
   14230:	movt	r3, #2
   14234:	ldrb	r3, [r3]
   14238:	eor	r3, r3, #1
   1423c:	uxtb	r3, r3
   14240:	cmp	r3, #0
   14244:	bne	1425c <__assert_fail@plt+0x3150>
   14248:	bl	11010 <__errno_location@plt>
   1424c:	mov	r3, r0
   14250:	ldr	r3, [r3]
   14254:	cmp	r3, #32
   14258:	beq	142fc <__assert_fail@plt+0x31f0>
   1425c:	movw	r0, #48084	; 0xbbd4
   14260:	movt	r0, #1
   14264:	bl	10fd4 <gettext@plt>
   14268:	str	r0, [fp, #-16]
   1426c:	movw	r3, #53760	; 0xd200
   14270:	movt	r3, #2
   14274:	ldr	r3, [r3]
   14278:	cmp	r3, #0
   1427c:	beq	142c8 <__assert_fail@plt+0x31bc>
   14280:	bl	11010 <__errno_location@plt>
   14284:	mov	r3, r0
   14288:	ldr	r4, [r3]
   1428c:	movw	r3, #53760	; 0xd200
   14290:	movt	r3, #2
   14294:	ldr	r3, [r3]
   14298:	mov	r0, r3
   1429c:	bl	17220 <__assert_fail@plt+0x6114>
   142a0:	mov	r2, r0
   142a4:	ldr	r3, [fp, #-16]
   142a8:	str	r3, [sp]
   142ac:	mov	r3, r2
   142b0:	movw	r2, #48096	; 0xbbe0
   142b4:	movt	r2, #1
   142b8:	mov	r1, r4
   142bc:	mov	r0, #0
   142c0:	bl	10f68 <error@plt>
   142c4:	b	142e8 <__assert_fail@plt+0x31dc>
   142c8:	bl	11010 <__errno_location@plt>
   142cc:	mov	r3, r0
   142d0:	ldr	r1, [r3]
   142d4:	ldr	r3, [fp, #-16]
   142d8:	movw	r2, #48104	; 0xbbe8
   142dc:	movt	r2, #1
   142e0:	mov	r0, #0
   142e4:	bl	10f68 <error@plt>
   142e8:	movw	r3, #53536	; 0xd120
   142ec:	movt	r3, #2
   142f0:	ldr	r3, [r3]
   142f4:	mov	r0, r3
   142f8:	bl	10ea8 <_exit@plt>
   142fc:	movw	r3, #53624	; 0xd178
   14300:	movt	r3, #2
   14304:	ldr	r3, [r3]
   14308:	mov	r0, r3
   1430c:	bl	19d74 <__assert_fail@plt+0x8c68>
   14310:	mov	r3, r0
   14314:	cmp	r3, #0
   14318:	beq	14330 <__assert_fail@plt+0x3224>
   1431c:	movw	r3, #53536	; 0xd120
   14320:	movt	r3, #2
   14324:	ldr	r3, [r3]
   14328:	mov	r0, r3
   1432c:	bl	10ea8 <_exit@plt>
   14330:	nop	{0}
   14334:	sub	sp, fp, #8
   14338:	ldr	r4, [sp]
   1433c:	ldr	fp, [sp, #4]
   14340:	add	sp, sp, #8
   14344:	pop	{pc}		; (ldr pc, [sp], #4)
   14348:	str	fp, [sp, #-8]!
   1434c:	str	lr, [sp, #4]
   14350:	add	fp, sp, #4
   14354:	sub	sp, sp, #40	; 0x28
   14358:	str	r0, [fp, #-16]
   1435c:	strd	r2, [fp, #-28]	; 0xffffffe4
   14360:	ldr	r3, [fp, #12]
   14364:	str	r3, [sp, #8]
   14368:	ldrd	r2, [fp, #4]
   1436c:	strd	r2, [sp]
   14370:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   14374:	ldr	r0, [fp, #-16]
   14378:	bl	10e78 <posix_fadvise64@plt>
   1437c:	str	r0, [fp, #-8]
   14380:	nop	{0}
   14384:	sub	sp, fp, #4
   14388:	ldr	fp, [sp]
   1438c:	add	sp, sp, #4
   14390:	pop	{pc}		; (ldr pc, [sp], #4)
   14394:	str	fp, [sp, #-8]!
   14398:	str	lr, [sp, #4]
   1439c:	add	fp, sp, #4
   143a0:	sub	sp, sp, #24
   143a4:	str	r0, [fp, #-8]
   143a8:	str	r1, [fp, #-12]
   143ac:	ldr	r3, [fp, #-8]
   143b0:	cmp	r3, #0
   143b4:	beq	143e8 <__assert_fail@plt+0x32dc>
   143b8:	ldr	r0, [fp, #-8]
   143bc:	bl	11034 <fileno@plt>
   143c0:	mov	r1, r0
   143c4:	ldr	r3, [fp, #-12]
   143c8:	str	r3, [sp, #8]
   143cc:	mov	r2, #0
   143d0:	mov	r3, #0
   143d4:	strd	r2, [sp]
   143d8:	mov	r2, #0
   143dc:	mov	r3, #0
   143e0:	mov	r0, r1
   143e4:	bl	14348 <__assert_fail@plt+0x323c>
   143e8:	nop	{0}
   143ec:	sub	sp, fp, #4
   143f0:	ldr	fp, [sp]
   143f4:	add	sp, sp, #4
   143f8:	pop	{pc}		; (ldr pc, [sp], #4)
   143fc:	str	fp, [sp, #-8]!
   14400:	str	lr, [sp, #4]
   14404:	add	fp, sp, #4
   14408:	sub	sp, sp, #32
   1440c:	str	r0, [fp, #-24]	; 0xffffffe8
   14410:	mov	r3, #0
   14414:	str	r3, [fp, #-8]
   14418:	mov	r3, #0
   1441c:	str	r3, [fp, #-12]
   14420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14424:	bl	11034 <fileno@plt>
   14428:	str	r0, [fp, #-16]
   1442c:	ldr	r3, [fp, #-16]
   14430:	cmp	r3, #0
   14434:	bge	14448 <__assert_fail@plt+0x333c>
   14438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1443c:	bl	11058 <fclose@plt>
   14440:	mov	r3, r0
   14444:	b	144ec <__assert_fail@plt+0x33e0>
   14448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1444c:	bl	10f98 <__freading@plt>
   14450:	mov	r3, r0
   14454:	cmp	r3, #0
   14458:	beq	14494 <__assert_fail@plt+0x3388>
   1445c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14460:	bl	11034 <fileno@plt>
   14464:	mov	r1, r0
   14468:	mov	r3, #1
   1446c:	str	r3, [sp]
   14470:	mov	r2, #0
   14474:	mov	r3, #0
   14478:	mov	r0, r1
   1447c:	bl	10f2c <lseek64@plt>
   14480:	mvn	r2, #0
   14484:	mvn	r3, #0
   14488:	cmp	r1, r3
   1448c:	cmpeq	r0, r2
   14490:	beq	144b8 <__assert_fail@plt+0x33ac>
   14494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14498:	bl	14554 <__assert_fail@plt+0x3448>
   1449c:	mov	r3, r0
   144a0:	cmp	r3, #0
   144a4:	beq	144b8 <__assert_fail@plt+0x33ac>
   144a8:	bl	11010 <__errno_location@plt>
   144ac:	mov	r3, r0
   144b0:	ldr	r3, [r3]
   144b4:	str	r3, [fp, #-8]
   144b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144bc:	bl	11058 <fclose@plt>
   144c0:	str	r0, [fp, #-12]
   144c4:	ldr	r3, [fp, #-8]
   144c8:	cmp	r3, #0
   144cc:	beq	144e8 <__assert_fail@plt+0x33dc>
   144d0:	bl	11010 <__errno_location@plt>
   144d4:	mov	r2, r0
   144d8:	ldr	r3, [fp, #-8]
   144dc:	str	r3, [r2]
   144e0:	mvn	r3, #0
   144e4:	str	r3, [fp, #-12]
   144e8:	ldr	r3, [fp, #-12]
   144ec:	mov	r0, r3
   144f0:	sub	sp, fp, #4
   144f4:	ldr	fp, [sp]
   144f8:	add	sp, sp, #4
   144fc:	pop	{pc}		; (ldr pc, [sp], #4)
   14500:	str	fp, [sp, #-8]!
   14504:	str	lr, [sp, #4]
   14508:	add	fp, sp, #4
   1450c:	sub	sp, sp, #16
   14510:	str	r0, [fp, #-8]
   14514:	ldr	r3, [fp, #-8]
   14518:	ldr	r3, [r3]
   1451c:	and	r3, r3, #256	; 0x100
   14520:	cmp	r3, #0
   14524:	beq	14540 <__assert_fail@plt+0x3434>
   14528:	mov	r3, #1
   1452c:	str	r3, [sp]
   14530:	mov	r2, #0
   14534:	mov	r3, #0
   14538:	ldr	r0, [fp, #-8]
   1453c:	bl	1477c <__assert_fail@plt+0x3670>
   14540:	nop	{0}
   14544:	sub	sp, fp, #4
   14548:	ldr	fp, [sp]
   1454c:	add	sp, sp, #4
   14550:	pop	{pc}		; (ldr pc, [sp], #4)
   14554:	str	fp, [sp, #-8]!
   14558:	str	lr, [sp, #4]
   1455c:	add	fp, sp, #4
   14560:	sub	sp, sp, #8
   14564:	str	r0, [fp, #-8]
   14568:	ldr	r3, [fp, #-8]
   1456c:	cmp	r3, #0
   14570:	beq	14588 <__assert_fail@plt+0x347c>
   14574:	ldr	r0, [fp, #-8]
   14578:	bl	10f98 <__freading@plt>
   1457c:	mov	r3, r0
   14580:	cmp	r3, #0
   14584:	bne	14598 <__assert_fail@plt+0x348c>
   14588:	ldr	r0, [fp, #-8]
   1458c:	bl	10e90 <fflush@plt>
   14590:	mov	r3, r0
   14594:	b	145ac <__assert_fail@plt+0x34a0>
   14598:	ldr	r0, [fp, #-8]
   1459c:	bl	14500 <__assert_fail@plt+0x33f4>
   145a0:	ldr	r0, [fp, #-8]
   145a4:	bl	10e90 <fflush@plt>
   145a8:	mov	r3, r0
   145ac:	mov	r0, r3
   145b0:	sub	sp, fp, #4
   145b4:	ldr	fp, [sp]
   145b8:	add	sp, sp, #4
   145bc:	pop	{pc}		; (ldr pc, [sp], #4)
   145c0:	str	fp, [sp, #-8]!
   145c4:	str	lr, [sp, #4]
   145c8:	add	fp, sp, #4
   145cc:	sub	sp, sp, #32
   145d0:	str	r0, [fp, #-32]	; 0xffffffe0
   145d4:	str	r1, [fp, #-36]	; 0xffffffdc
   145d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   145dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145e0:	bl	110ac <fopen64@plt>
   145e4:	str	r0, [fp, #-8]
   145e8:	ldr	r3, [fp, #-8]
   145ec:	cmp	r3, #0
   145f0:	beq	146c0 <__assert_fail@plt+0x35b4>
   145f4:	ldr	r0, [fp, #-8]
   145f8:	bl	11034 <fileno@plt>
   145fc:	str	r0, [fp, #-12]
   14600:	ldr	r3, [fp, #-12]
   14604:	cmp	r3, #0
   14608:	blt	146c0 <__assert_fail@plt+0x35b4>
   1460c:	ldr	r3, [fp, #-12]
   14610:	cmp	r3, #2
   14614:	bgt	146c0 <__assert_fail@plt+0x35b4>
   14618:	ldr	r0, [fp, #-12]
   1461c:	bl	17764 <__assert_fail@plt+0x6658>
   14620:	str	r0, [fp, #-16]
   14624:	ldr	r3, [fp, #-16]
   14628:	cmp	r3, #0
   1462c:	bge	14660 <__assert_fail@plt+0x3554>
   14630:	bl	11010 <__errno_location@plt>
   14634:	mov	r3, r0
   14638:	ldr	r3, [r3]
   1463c:	str	r3, [fp, #-20]	; 0xffffffec
   14640:	ldr	r0, [fp, #-8]
   14644:	bl	143fc <__assert_fail@plt+0x32f0>
   14648:	bl	11010 <__errno_location@plt>
   1464c:	mov	r2, r0
   14650:	ldr	r3, [fp, #-20]	; 0xffffffec
   14654:	str	r3, [r2]
   14658:	mov	r3, #0
   1465c:	b	146c4 <__assert_fail@plt+0x35b8>
   14660:	ldr	r0, [fp, #-8]
   14664:	bl	143fc <__assert_fail@plt+0x32f0>
   14668:	mov	r3, r0
   1466c:	cmp	r3, #0
   14670:	bne	14690 <__assert_fail@plt+0x3584>
   14674:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14678:	ldr	r0, [fp, #-16]
   1467c:	bl	10e48 <fdopen@plt>
   14680:	str	r0, [fp, #-8]
   14684:	ldr	r3, [fp, #-8]
   14688:	cmp	r3, #0
   1468c:	bne	146c0 <__assert_fail@plt+0x35b4>
   14690:	bl	11010 <__errno_location@plt>
   14694:	mov	r3, r0
   14698:	ldr	r3, [r3]
   1469c:	str	r3, [fp, #-24]	; 0xffffffe8
   146a0:	ldr	r0, [fp, #-16]
   146a4:	bl	110f4 <close@plt>
   146a8:	bl	11010 <__errno_location@plt>
   146ac:	mov	r2, r0
   146b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   146b4:	str	r3, [r2]
   146b8:	mov	r3, #0
   146bc:	b	146c4 <__assert_fail@plt+0x35b8>
   146c0:	ldr	r3, [fp, #-8]
   146c4:	mov	r0, r3
   146c8:	sub	sp, fp, #4
   146cc:	ldr	fp, [sp]
   146d0:	add	sp, sp, #4
   146d4:	pop	{pc}		; (ldr pc, [sp], #4)
   146d8:	str	r4, [sp, #-12]!
   146dc:	str	fp, [sp, #4]
   146e0:	str	lr, [sp, #8]
   146e4:	add	fp, sp, #8
   146e8:	sub	sp, sp, #20
   146ec:	str	r0, [fp, #-24]	; 0xffffffe8
   146f0:	bl	11010 <__errno_location@plt>
   146f4:	mov	r3, r0
   146f8:	ldr	r3, [r3]
   146fc:	str	r3, [fp, #-20]	; 0xffffffec
   14700:	bl	11010 <__errno_location@plt>
   14704:	mov	r3, r0
   14708:	ldr	r3, [r3]
   1470c:	str	r3, [fp, #-16]
   14710:	bl	11010 <__errno_location@plt>
   14714:	mov	r2, r0
   14718:	mov	r3, #0
   1471c:	str	r3, [r2]
   14720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14724:	bl	10e9c <free@plt>
   14728:	bl	11010 <__errno_location@plt>
   1472c:	mov	r3, r0
   14730:	ldr	r3, [r3]
   14734:	cmp	r3, #0
   14738:	moveq	r3, #1
   1473c:	movne	r3, #0
   14740:	uxtb	r3, r3
   14744:	mov	r4, r3
   14748:	bl	11010 <__errno_location@plt>
   1474c:	mov	r2, r0
   14750:	lsl	r3, r4, #2
   14754:	sub	r1, fp, #12
   14758:	add	r3, r1, r3
   1475c:	ldr	r3, [r3, #-8]
   14760:	str	r3, [r2]
   14764:	nop	{0}
   14768:	sub	sp, fp, #8
   1476c:	ldr	r4, [sp]
   14770:	ldr	fp, [sp, #4]
   14774:	add	sp, sp, #8
   14778:	pop	{pc}		; (ldr pc, [sp], #4)
   1477c:	str	fp, [sp, #-8]!
   14780:	str	lr, [sp, #4]
   14784:	add	fp, sp, #4
   14788:	sub	sp, sp, #32
   1478c:	str	r0, [fp, #-16]
   14790:	strd	r2, [fp, #-28]	; 0xffffffe4
   14794:	ldr	r3, [fp, #-16]
   14798:	ldr	r2, [r3, #8]
   1479c:	ldr	r3, [fp, #-16]
   147a0:	ldr	r3, [r3, #4]
   147a4:	cmp	r2, r3
   147a8:	bne	14840 <__assert_fail@plt+0x3734>
   147ac:	ldr	r3, [fp, #-16]
   147b0:	ldr	r2, [r3, #20]
   147b4:	ldr	r3, [fp, #-16]
   147b8:	ldr	r3, [r3, #16]
   147bc:	cmp	r2, r3
   147c0:	bne	14840 <__assert_fail@plt+0x3734>
   147c4:	ldr	r3, [fp, #-16]
   147c8:	ldr	r3, [r3, #36]	; 0x24
   147cc:	cmp	r3, #0
   147d0:	bne	14840 <__assert_fail@plt+0x3734>
   147d4:	ldr	r0, [fp, #-16]
   147d8:	bl	11034 <fileno@plt>
   147dc:	mov	r1, r0
   147e0:	ldr	r3, [fp, #4]
   147e4:	str	r3, [sp]
   147e8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   147ec:	mov	r0, r1
   147f0:	bl	10f2c <lseek64@plt>
   147f4:	strd	r0, [fp, #-12]
   147f8:	ldrd	r2, [fp, #-12]
   147fc:	mvn	r0, #0
   14800:	mvn	r1, #0
   14804:	cmp	r3, r1
   14808:	cmpeq	r2, r0
   1480c:	bne	14818 <__assert_fail@plt+0x370c>
   14810:	mvn	r3, #0
   14814:	b	14858 <__assert_fail@plt+0x374c>
   14818:	ldr	r3, [fp, #-16]
   1481c:	ldr	r3, [r3]
   14820:	bic	r2, r3, #16
   14824:	ldr	r3, [fp, #-16]
   14828:	str	r2, [r3]
   1482c:	ldr	r1, [fp, #-16]
   14830:	ldrd	r2, [fp, #-12]
   14834:	strd	r2, [r1, #80]	; 0x50
   14838:	mov	r3, #0
   1483c:	b	14858 <__assert_fail@plt+0x374c>
   14840:	ldr	r3, [fp, #4]
   14844:	str	r3, [sp]
   14848:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1484c:	ldr	r0, [fp, #-16]
   14850:	bl	11064 <fseeko64@plt>
   14854:	mov	r3, r0
   14858:	mov	r0, r3
   1485c:	sub	sp, fp, #4
   14860:	ldr	fp, [sp]
   14864:	add	sp, sp, #4
   14868:	pop	{pc}		; (ldr pc, [sp], #4)
   1486c:	str	fp, [sp, #-8]!
   14870:	str	lr, [sp, #4]
   14874:	add	fp, sp, #4
   14878:	sub	sp, sp, #272	; 0x110
   1487c:	str	r0, [fp, #-272]	; 0xfffffef0
   14880:	sub	r3, fp, #264	; 0x108
   14884:	movw	r2, #257	; 0x101
   14888:	mov	r1, r3
   1488c:	ldr	r0, [fp, #-272]	; 0xfffffef0
   14890:	bl	176ec <__assert_fail@plt+0x65e0>
   14894:	mov	r3, r0
   14898:	cmp	r3, #0
   1489c:	beq	148a8 <__assert_fail@plt+0x379c>
   148a0:	mov	r3, #0
   148a4:	b	148fc <__assert_fail@plt+0x37f0>
   148a8:	sub	r3, fp, #264	; 0x108
   148ac:	movw	r1, #48108	; 0xbbec
   148b0:	movt	r1, #1
   148b4:	mov	r0, r3
   148b8:	bl	10e6c <strcmp@plt>
   148bc:	mov	r3, r0
   148c0:	cmp	r3, #0
   148c4:	beq	148f0 <__assert_fail@plt+0x37e4>
   148c8:	sub	r3, fp, #264	; 0x108
   148cc:	movw	r1, #48112	; 0xbbf0
   148d0:	movt	r1, #1
   148d4:	mov	r0, r3
   148d8:	bl	10e6c <strcmp@plt>
   148dc:	mov	r3, r0
   148e0:	cmp	r3, #0
   148e4:	beq	148f0 <__assert_fail@plt+0x37e4>
   148e8:	mov	r3, #1
   148ec:	b	148f4 <__assert_fail@plt+0x37e8>
   148f0:	mov	r3, #0
   148f4:	and	r3, r3, #1
   148f8:	uxtb	r3, r3
   148fc:	mov	r0, r3
   14900:	sub	sp, fp, #4
   14904:	ldr	fp, [sp]
   14908:	add	sp, sp, #4
   1490c:	pop	{pc}		; (ldr pc, [sp], #4)
   14910:	str	fp, [sp, #-8]!
   14914:	str	lr, [sp, #4]
   14918:	add	fp, sp, #4
   1491c:	sub	sp, sp, #8
   14920:	str	r0, [fp, #-8]
   14924:	mov	r2, #12
   14928:	mov	r1, #0
   1492c:	ldr	r0, [fp, #-8]
   14930:	bl	11028 <memset@plt>
   14934:	nop	{0}
   14938:	sub	sp, fp, #4
   1493c:	ldr	fp, [sp]
   14940:	add	sp, sp, #4
   14944:	pop	{pc}		; (ldr pc, [sp], #4)
   14948:	str	fp, [sp, #-8]!
   1494c:	str	lr, [sp, #4]
   14950:	add	fp, sp, #4
   14954:	sub	sp, sp, #8
   14958:	str	r0, [fp, #-8]
   1495c:	str	r1, [fp, #-12]
   14960:	mov	r2, #10
   14964:	ldr	r1, [fp, #-12]
   14968:	ldr	r0, [fp, #-8]
   1496c:	bl	14988 <__assert_fail@plt+0x387c>
   14970:	mov	r3, r0
   14974:	mov	r0, r3
   14978:	sub	sp, fp, #4
   1497c:	ldr	fp, [sp]
   14980:	add	sp, sp, #4
   14984:	pop	{pc}		; (ldr pc, [sp], #4)
   14988:	str	fp, [sp, #-8]!
   1498c:	str	lr, [sp, #4]
   14990:	add	fp, sp, #4
   14994:	sub	sp, sp, #48	; 0x30
   14998:	str	r0, [fp, #-32]	; 0xffffffe0
   1499c:	str	r1, [fp, #-36]	; 0xffffffdc
   149a0:	mov	r3, r2
   149a4:	strb	r3, [fp, #-37]	; 0xffffffdb
   149a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   149ac:	ldr	r3, [r3, #8]
   149b0:	str	r3, [fp, #-12]
   149b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   149b8:	ldr	r3, [r3, #8]
   149bc:	str	r3, [fp, #-16]
   149c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   149c4:	ldr	r3, [r3]
   149c8:	mov	r2, r3
   149cc:	ldr	r3, [fp, #-12]
   149d0:	add	r3, r3, r2
   149d4:	str	r3, [fp, #-20]	; 0xffffffec
   149d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   149dc:	bl	110e8 <feof_unlocked@plt>
   149e0:	mov	r3, r0
   149e4:	cmp	r3, #0
   149e8:	beq	149f4 <__assert_fail@plt+0x38e8>
   149ec:	mov	r3, #0
   149f0:	b	14b10 <__assert_fail@plt+0x3a04>
   149f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   149f8:	bl	10ef0 <getc_unlocked@plt>
   149fc:	str	r0, [fp, #-8]
   14a00:	ldr	r3, [fp, #-8]
   14a04:	cmn	r3, #1
   14a08:	bne	14a58 <__assert_fail@plt+0x394c>
   14a0c:	ldr	r2, [fp, #-16]
   14a10:	ldr	r3, [fp, #-12]
   14a14:	cmp	r2, r3
   14a18:	beq	14a30 <__assert_fail@plt+0x3924>
   14a1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14a20:	bl	10f50 <ferror_unlocked@plt>
   14a24:	mov	r3, r0
   14a28:	cmp	r3, #0
   14a2c:	beq	14a38 <__assert_fail@plt+0x392c>
   14a30:	mov	r3, #0
   14a34:	b	14b10 <__assert_fail@plt+0x3a04>
   14a38:	ldr	r3, [fp, #-16]
   14a3c:	sub	r3, r3, #1
   14a40:	ldrb	r3, [r3]
   14a44:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   14a48:	cmp	r2, r3
   14a4c:	beq	14af4 <__assert_fail@plt+0x39e8>
   14a50:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   14a54:	str	r3, [fp, #-8]
   14a58:	ldr	r2, [fp, #-16]
   14a5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a60:	cmp	r2, r3
   14a64:	bne	14ac8 <__assert_fail@plt+0x39bc>
   14a68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14a6c:	ldr	r3, [r3]
   14a70:	str	r3, [fp, #-24]	; 0xffffffe8
   14a74:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14a78:	mov	r3, #1
   14a7c:	str	r3, [sp]
   14a80:	mvn	r3, #0
   14a84:	mov	r2, #1
   14a88:	ldr	r0, [fp, #-12]
   14a8c:	bl	183d0 <__assert_fail@plt+0x72c4>
   14a90:	str	r0, [fp, #-12]
   14a94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a98:	ldr	r2, [fp, #-12]
   14a9c:	add	r3, r2, r3
   14aa0:	str	r3, [fp, #-16]
   14aa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14aa8:	ldr	r2, [fp, #-12]
   14aac:	str	r2, [r3, #8]
   14ab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14ab4:	ldr	r3, [r3]
   14ab8:	mov	r2, r3
   14abc:	ldr	r3, [fp, #-12]
   14ac0:	add	r3, r3, r2
   14ac4:	str	r3, [fp, #-20]	; 0xffffffec
   14ac8:	ldr	r3, [fp, #-16]
   14acc:	add	r2, r3, #1
   14ad0:	str	r2, [fp, #-16]
   14ad4:	ldr	r2, [fp, #-8]
   14ad8:	uxtb	r2, r2
   14adc:	strb	r2, [r3]
   14ae0:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   14ae4:	ldr	r2, [fp, #-8]
   14ae8:	cmp	r2, r3
   14aec:	bne	149f4 <__assert_fail@plt+0x38e8>
   14af0:	b	14af8 <__assert_fail@plt+0x39ec>
   14af4:	nop	{0}
   14af8:	ldr	r2, [fp, #-16]
   14afc:	ldr	r3, [fp, #-12]
   14b00:	sub	r2, r2, r3
   14b04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14b08:	str	r2, [r3, #4]
   14b0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14b10:	mov	r0, r3
   14b14:	sub	sp, fp, #4
   14b18:	ldr	fp, [sp]
   14b1c:	add	sp, sp, #4
   14b20:	pop	{pc}		; (ldr pc, [sp], #4)
   14b24:	str	fp, [sp, #-8]!
   14b28:	str	lr, [sp, #4]
   14b2c:	add	fp, sp, #4
   14b30:	sub	sp, sp, #8
   14b34:	str	r0, [fp, #-8]
   14b38:	ldr	r3, [fp, #-8]
   14b3c:	ldr	r3, [r3, #8]
   14b40:	mov	r0, r3
   14b44:	bl	146d8 <__assert_fail@plt+0x35cc>
   14b48:	nop	{0}
   14b4c:	sub	sp, fp, #4
   14b50:	ldr	fp, [sp]
   14b54:	add	sp, sp, #4
   14b58:	pop	{pc}		; (ldr pc, [sp], #4)
   14b5c:	str	fp, [sp, #-8]!
   14b60:	str	lr, [sp, #4]
   14b64:	add	fp, sp, #4
   14b68:	sub	sp, sp, #48	; 0x30
   14b6c:	str	r0, [fp, #-40]	; 0xffffffd8
   14b70:	str	r1, [fp, #-44]	; 0xffffffd4
   14b74:	str	r2, [fp, #-48]	; 0xffffffd0
   14b78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14b7c:	str	r3, [fp, #-12]
   14b80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14b84:	str	r3, [fp, #-16]
   14b88:	mov	r3, #0
   14b8c:	str	r3, [fp, #-8]
   14b90:	b	14c0c <__assert_fail@plt+0x3b00>
   14b94:	ldr	r2, [fp, #-12]
   14b98:	ldr	r3, [fp, #-8]
   14b9c:	add	r3, r2, r3
   14ba0:	ldrb	r3, [r3]
   14ba4:	strb	r3, [fp, #-17]	; 0xffffffef
   14ba8:	ldr	r2, [fp, #-16]
   14bac:	ldr	r3, [fp, #-8]
   14bb0:	add	r3, r2, r3
   14bb4:	ldrb	r3, [r3]
   14bb8:	strb	r3, [fp, #-18]	; 0xffffffee
   14bbc:	ldrb	r3, [fp, #-17]	; 0xffffffef
   14bc0:	mov	r0, r3
   14bc4:	bl	11088 <toupper@plt>
   14bc8:	str	r0, [fp, #-24]	; 0xffffffe8
   14bcc:	ldrb	r3, [fp, #-18]	; 0xffffffee
   14bd0:	mov	r0, r3
   14bd4:	bl	11088 <toupper@plt>
   14bd8:	str	r0, [fp, #-28]	; 0xffffffe4
   14bdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14be0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14be4:	sub	r3, r2, r3
   14be8:	str	r3, [fp, #-32]	; 0xffffffe0
   14bec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14bf0:	cmp	r3, #0
   14bf4:	beq	14c00 <__assert_fail@plt+0x3af4>
   14bf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14bfc:	b	14c20 <__assert_fail@plt+0x3b14>
   14c00:	ldr	r3, [fp, #-8]
   14c04:	add	r3, r3, #1
   14c08:	str	r3, [fp, #-8]
   14c0c:	ldr	r2, [fp, #-8]
   14c10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14c14:	cmp	r2, r3
   14c18:	bcc	14b94 <__assert_fail@plt+0x3a88>
   14c1c:	mov	r3, #0
   14c20:	mov	r0, r3
   14c24:	sub	sp, fp, #4
   14c28:	ldr	fp, [sp]
   14c2c:	add	sp, sp, #4
   14c30:	pop	{pc}		; (ldr pc, [sp], #4)
   14c34:	str	fp, [sp, #-8]!
   14c38:	str	lr, [sp, #4]
   14c3c:	add	fp, sp, #4
   14c40:	sub	sp, sp, #16
   14c44:	str	r0, [fp, #-16]
   14c48:	ldr	r3, [fp, #-16]
   14c4c:	cmp	r3, #0
   14c50:	bne	14c78 <__assert_fail@plt+0x3b6c>
   14c54:	movw	r3, #53624	; 0xd178
   14c58:	movt	r3, #2
   14c5c:	ldr	r3, [r3]
   14c60:	mov	r2, #55	; 0x37
   14c64:	mov	r1, #1
   14c68:	movw	r0, #48120	; 0xbbf8
   14c6c:	movt	r0, #1
   14c70:	bl	10f20 <fwrite@plt>
   14c74:	bl	110dc <abort@plt>
   14c78:	mov	r1, #47	; 0x2f
   14c7c:	ldr	r0, [fp, #-16]
   14c80:	bl	11094 <strrchr@plt>
   14c84:	str	r0, [fp, #-8]
   14c88:	ldr	r3, [fp, #-8]
   14c8c:	cmp	r3, #0
   14c90:	beq	14ca0 <__assert_fail@plt+0x3b94>
   14c94:	ldr	r3, [fp, #-8]
   14c98:	add	r3, r3, #1
   14c9c:	b	14ca4 <__assert_fail@plt+0x3b98>
   14ca0:	ldr	r3, [fp, #-16]
   14ca4:	str	r3, [fp, #-12]
   14ca8:	ldr	r2, [fp, #-12]
   14cac:	ldr	r3, [fp, #-16]
   14cb0:	sub	r3, r2, r3
   14cb4:	cmp	r3, #6
   14cb8:	ble	14d28 <__assert_fail@plt+0x3c1c>
   14cbc:	ldr	r3, [fp, #-12]
   14cc0:	sub	r3, r3, #7
   14cc4:	mov	r2, #7
   14cc8:	movw	r1, #48176	; 0xbc30
   14ccc:	movt	r1, #1
   14cd0:	mov	r0, r3
   14cd4:	bl	110d0 <strncmp@plt>
   14cd8:	mov	r3, r0
   14cdc:	cmp	r3, #0
   14ce0:	bne	14d28 <__assert_fail@plt+0x3c1c>
   14ce4:	ldr	r3, [fp, #-12]
   14ce8:	str	r3, [fp, #-16]
   14cec:	mov	r2, #3
   14cf0:	movw	r1, #48184	; 0xbc38
   14cf4:	movt	r1, #1
   14cf8:	ldr	r0, [fp, #-12]
   14cfc:	bl	110d0 <strncmp@plt>
   14d00:	mov	r3, r0
   14d04:	cmp	r3, #0
   14d08:	bne	14d28 <__assert_fail@plt+0x3c1c>
   14d0c:	ldr	r3, [fp, #-12]
   14d10:	add	r3, r3, #3
   14d14:	str	r3, [fp, #-16]
   14d18:	movw	r3, #53608	; 0xd168
   14d1c:	movt	r3, #2
   14d20:	ldr	r2, [fp, #-16]
   14d24:	str	r2, [r3]
   14d28:	movw	r3, #53768	; 0xd208
   14d2c:	movt	r3, #2
   14d30:	ldr	r2, [fp, #-16]
   14d34:	str	r2, [r3]
   14d38:	movw	r3, #53612	; 0xd16c
   14d3c:	movt	r3, #2
   14d40:	ldr	r2, [fp, #-16]
   14d44:	str	r2, [r3]
   14d48:	nop	{0}
   14d4c:	sub	sp, fp, #4
   14d50:	ldr	fp, [sp]
   14d54:	add	sp, sp, #4
   14d58:	pop	{pc}		; (ldr pc, [sp], #4)
   14d5c:	str	fp, [sp, #-8]!
   14d60:	str	lr, [sp, #4]
   14d64:	add	fp, sp, #4
   14d68:	sub	sp, sp, #16
   14d6c:	str	r0, [fp, #-16]
   14d70:	bl	11010 <__errno_location@plt>
   14d74:	mov	r3, r0
   14d78:	ldr	r3, [r3]
   14d7c:	str	r3, [fp, #-8]
   14d80:	ldr	r3, [fp, #-16]
   14d84:	cmp	r3, #0
   14d88:	beq	14d94 <__assert_fail@plt+0x3c88>
   14d8c:	ldr	r3, [fp, #-16]
   14d90:	b	14d9c <__assert_fail@plt+0x3c90>
   14d94:	movw	r3, #53772	; 0xd20c
   14d98:	movt	r3, #2
   14d9c:	mov	r1, #48	; 0x30
   14da0:	mov	r0, r3
   14da4:	bl	18710 <__assert_fail@plt+0x7604>
   14da8:	mov	r3, r0
   14dac:	str	r3, [fp, #-12]
   14db0:	bl	11010 <__errno_location@plt>
   14db4:	mov	r2, r0
   14db8:	ldr	r3, [fp, #-8]
   14dbc:	str	r3, [r2]
   14dc0:	ldr	r3, [fp, #-12]
   14dc4:	mov	r0, r3
   14dc8:	sub	sp, fp, #4
   14dcc:	ldr	fp, [sp]
   14dd0:	add	sp, sp, #4
   14dd4:	pop	{pc}		; (ldr pc, [sp], #4)
   14dd8:	push	{fp}		; (str fp, [sp, #-4]!)
   14ddc:	add	fp, sp, #0
   14de0:	sub	sp, sp, #12
   14de4:	str	r0, [fp, #-8]
   14de8:	ldr	r3, [fp, #-8]
   14dec:	cmp	r3, #0
   14df0:	beq	14dfc <__assert_fail@plt+0x3cf0>
   14df4:	ldr	r3, [fp, #-8]
   14df8:	b	14e04 <__assert_fail@plt+0x3cf8>
   14dfc:	movw	r3, #53772	; 0xd20c
   14e00:	movt	r3, #2
   14e04:	ldr	r3, [r3]
   14e08:	mov	r0, r3
   14e0c:	add	sp, fp, #0
   14e10:	pop	{fp}		; (ldr fp, [sp], #4)
   14e14:	bx	lr
   14e18:	push	{fp}		; (str fp, [sp, #-4]!)
   14e1c:	add	fp, sp, #0
   14e20:	sub	sp, sp, #12
   14e24:	str	r0, [fp, #-8]
   14e28:	str	r1, [fp, #-12]
   14e2c:	ldr	r3, [fp, #-8]
   14e30:	cmp	r3, #0
   14e34:	beq	14e40 <__assert_fail@plt+0x3d34>
   14e38:	ldr	r3, [fp, #-8]
   14e3c:	b	14e48 <__assert_fail@plt+0x3d3c>
   14e40:	movw	r3, #53772	; 0xd20c
   14e44:	movt	r3, #2
   14e48:	ldr	r2, [fp, #-12]
   14e4c:	str	r2, [r3]
   14e50:	nop	{0}
   14e54:	add	sp, fp, #0
   14e58:	pop	{fp}		; (ldr fp, [sp], #4)
   14e5c:	bx	lr
   14e60:	push	{fp}		; (str fp, [sp, #-4]!)
   14e64:	add	fp, sp, #0
   14e68:	sub	sp, sp, #36	; 0x24
   14e6c:	str	r0, [fp, #-24]	; 0xffffffe8
   14e70:	mov	r3, r1
   14e74:	str	r2, [fp, #-32]	; 0xffffffe0
   14e78:	strb	r3, [fp, #-25]	; 0xffffffe7
   14e7c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   14e80:	strb	r3, [fp, #-5]
   14e84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e88:	cmp	r3, #0
   14e8c:	beq	14e98 <__assert_fail@plt+0x3d8c>
   14e90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e94:	b	14ea0 <__assert_fail@plt+0x3d94>
   14e98:	movw	r3, #53772	; 0xd20c
   14e9c:	movt	r3, #2
   14ea0:	add	r2, r3, #8
   14ea4:	ldrb	r3, [fp, #-5]
   14ea8:	lsr	r3, r3, #5
   14eac:	uxtb	r3, r3
   14eb0:	lsl	r3, r3, #2
   14eb4:	add	r3, r2, r3
   14eb8:	str	r3, [fp, #-12]
   14ebc:	ldrb	r3, [fp, #-5]
   14ec0:	and	r3, r3, #31
   14ec4:	str	r3, [fp, #-16]
   14ec8:	ldr	r3, [fp, #-12]
   14ecc:	ldr	r2, [r3]
   14ed0:	ldr	r3, [fp, #-16]
   14ed4:	lsr	r3, r2, r3
   14ed8:	and	r3, r3, #1
   14edc:	str	r3, [fp, #-20]	; 0xffffffec
   14ee0:	ldr	r3, [fp, #-12]
   14ee4:	ldr	r3, [r3]
   14ee8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14eec:	and	r1, r2, #1
   14ef0:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ef4:	eor	r1, r1, r2
   14ef8:	ldr	r2, [fp, #-16]
   14efc:	lsl	r2, r1, r2
   14f00:	eor	r2, r2, r3
   14f04:	ldr	r3, [fp, #-12]
   14f08:	str	r2, [r3]
   14f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f10:	mov	r0, r3
   14f14:	add	sp, fp, #0
   14f18:	pop	{fp}		; (ldr fp, [sp], #4)
   14f1c:	bx	lr
   14f20:	push	{fp}		; (str fp, [sp, #-4]!)
   14f24:	add	fp, sp, #0
   14f28:	sub	sp, sp, #20
   14f2c:	str	r0, [fp, #-16]
   14f30:	str	r1, [fp, #-20]	; 0xffffffec
   14f34:	ldr	r3, [fp, #-16]
   14f38:	cmp	r3, #0
   14f3c:	bne	14f4c <__assert_fail@plt+0x3e40>
   14f40:	movw	r3, #53772	; 0xd20c
   14f44:	movt	r3, #2
   14f48:	str	r3, [fp, #-16]
   14f4c:	ldr	r3, [fp, #-16]
   14f50:	ldr	r3, [r3, #4]
   14f54:	str	r3, [fp, #-8]
   14f58:	ldr	r3, [fp, #-16]
   14f5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14f60:	str	r2, [r3, #4]
   14f64:	ldr	r3, [fp, #-8]
   14f68:	mov	r0, r3
   14f6c:	add	sp, fp, #0
   14f70:	pop	{fp}		; (ldr fp, [sp], #4)
   14f74:	bx	lr
   14f78:	str	fp, [sp, #-8]!
   14f7c:	str	lr, [sp, #4]
   14f80:	add	fp, sp, #4
   14f84:	sub	sp, sp, #16
   14f88:	str	r0, [fp, #-8]
   14f8c:	str	r1, [fp, #-12]
   14f90:	str	r2, [fp, #-16]
   14f94:	ldr	r3, [fp, #-8]
   14f98:	cmp	r3, #0
   14f9c:	bne	14fac <__assert_fail@plt+0x3ea0>
   14fa0:	movw	r3, #53772	; 0xd20c
   14fa4:	movt	r3, #2
   14fa8:	str	r3, [fp, #-8]
   14fac:	ldr	r3, [fp, #-8]
   14fb0:	mov	r2, #10
   14fb4:	str	r2, [r3]
   14fb8:	ldr	r3, [fp, #-12]
   14fbc:	cmp	r3, #0
   14fc0:	beq	14fd0 <__assert_fail@plt+0x3ec4>
   14fc4:	ldr	r3, [fp, #-16]
   14fc8:	cmp	r3, #0
   14fcc:	bne	14fd4 <__assert_fail@plt+0x3ec8>
   14fd0:	bl	110dc <abort@plt>
   14fd4:	ldr	r3, [fp, #-8]
   14fd8:	ldr	r2, [fp, #-12]
   14fdc:	str	r2, [r3, #40]	; 0x28
   14fe0:	ldr	r3, [fp, #-8]
   14fe4:	ldr	r2, [fp, #-16]
   14fe8:	str	r2, [r3, #44]	; 0x2c
   14fec:	nop	{0}
   14ff0:	sub	sp, fp, #4
   14ff4:	ldr	fp, [sp]
   14ff8:	add	sp, sp, #4
   14ffc:	pop	{pc}		; (ldr pc, [sp], #4)
   15000:	str	fp, [sp, #-8]!
   15004:	str	lr, [sp, #4]
   15008:	add	fp, sp, #4
   1500c:	sub	sp, sp, #56	; 0x38
   15010:	str	r0, [fp, #-56]	; 0xffffffc8
   15014:	str	r1, [fp, #-60]	; 0xffffffc4
   15018:	sub	r1, fp, #52	; 0x34
   1501c:	mov	r2, #0
   15020:	mov	r3, #0
   15024:	strd	r2, [r1]
   15028:	strd	r2, [r1, #8]
   1502c:	strd	r2, [r1, #16]
   15030:	strd	r2, [r1, #24]
   15034:	strd	r2, [r1, #32]
   15038:	strd	r2, [r1, #40]	; 0x28
   1503c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15040:	cmp	r3, #10
   15044:	bne	1504c <__assert_fail@plt+0x3f40>
   15048:	bl	110dc <abort@plt>
   1504c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15050:	str	r3, [fp, #-52]	; 0xffffffcc
   15054:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15058:	mov	r2, r3
   1505c:	sub	r3, fp, #52	; 0x34
   15060:	ldrd	r0, [r3]
   15064:	strd	r0, [r2]
   15068:	ldrd	r0, [r3, #8]
   1506c:	strd	r0, [r2, #8]
   15070:	ldrd	r0, [r3, #16]
   15074:	strd	r0, [r2, #16]
   15078:	ldrd	r0, [r3, #24]
   1507c:	strd	r0, [r2, #24]
   15080:	ldrd	r0, [r3, #32]
   15084:	strd	r0, [r2, #32]
   15088:	ldrd	r0, [r3, #40]	; 0x28
   1508c:	strd	r0, [r2, #40]	; 0x28
   15090:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15094:	sub	sp, fp, #4
   15098:	ldr	fp, [sp]
   1509c:	add	sp, sp, #4
   150a0:	pop	{pc}		; (ldr pc, [sp], #4)
   150a4:	str	fp, [sp, #-8]!
   150a8:	str	lr, [sp, #4]
   150ac:	add	fp, sp, #4
   150b0:	sub	sp, sp, #16
   150b4:	str	r0, [fp, #-16]
   150b8:	str	r1, [fp, #-20]	; 0xffffffec
   150bc:	ldr	r0, [fp, #-16]
   150c0:	bl	10fd4 <gettext@plt>
   150c4:	str	r0, [fp, #-8]
   150c8:	ldr	r2, [fp, #-8]
   150cc:	ldr	r3, [fp, #-16]
   150d0:	cmp	r2, r3
   150d4:	beq	150e0 <__assert_fail@plt+0x3fd4>
   150d8:	ldr	r3, [fp, #-8]
   150dc:	b	15190 <__assert_fail@plt+0x4084>
   150e0:	bl	1a3b8 <__assert_fail@plt+0x92ac>
   150e4:	str	r0, [fp, #-12]
   150e8:	movw	r1, #48376	; 0xbcf8
   150ec:	movt	r1, #1
   150f0:	ldr	r0, [fp, #-12]
   150f4:	bl	19cc8 <__assert_fail@plt+0x8bbc>
   150f8:	mov	r3, r0
   150fc:	cmp	r3, #0
   15100:	bne	1512c <__assert_fail@plt+0x4020>
   15104:	ldr	r3, [fp, #-16]
   15108:	ldrb	r3, [r3]
   1510c:	cmp	r3, #96	; 0x60
   15110:	bne	15120 <__assert_fail@plt+0x4014>
   15114:	movw	r3, #48384	; 0xbd00
   15118:	movt	r3, #1
   1511c:	b	15190 <__assert_fail@plt+0x4084>
   15120:	movw	r3, #48388	; 0xbd04
   15124:	movt	r3, #1
   15128:	b	15190 <__assert_fail@plt+0x4084>
   1512c:	movw	r1, #48392	; 0xbd08
   15130:	movt	r1, #1
   15134:	ldr	r0, [fp, #-12]
   15138:	bl	19cc8 <__assert_fail@plt+0x8bbc>
   1513c:	mov	r3, r0
   15140:	cmp	r3, #0
   15144:	bne	15170 <__assert_fail@plt+0x4064>
   15148:	ldr	r3, [fp, #-16]
   1514c:	ldrb	r3, [r3]
   15150:	cmp	r3, #96	; 0x60
   15154:	bne	15164 <__assert_fail@plt+0x4058>
   15158:	movw	r3, #48400	; 0xbd10
   1515c:	movt	r3, #1
   15160:	b	15190 <__assert_fail@plt+0x4084>
   15164:	movw	r3, #48404	; 0xbd14
   15168:	movt	r3, #1
   1516c:	b	15190 <__assert_fail@plt+0x4084>
   15170:	ldr	r3, [fp, #-20]	; 0xffffffec
   15174:	cmp	r3, #9
   15178:	bne	15188 <__assert_fail@plt+0x407c>
   1517c:	movw	r3, #48408	; 0xbd18
   15180:	movt	r3, #1
   15184:	b	15190 <__assert_fail@plt+0x4084>
   15188:	movw	r3, #48412	; 0xbd1c
   1518c:	movt	r3, #1
   15190:	mov	r0, r3
   15194:	sub	sp, fp, #4
   15198:	ldr	fp, [sp]
   1519c:	add	sp, sp, #4
   151a0:	pop	{pc}		; (ldr pc, [sp], #4)
   151a4:	str	r4, [sp, #-12]!
   151a8:	str	fp, [sp, #4]
   151ac:	str	lr, [sp, #8]
   151b0:	add	fp, sp, #8
   151b4:	sub	sp, sp, #116	; 0x74
   151b8:	str	r0, [fp, #-88]	; 0xffffffa8
   151bc:	str	r1, [fp, #-92]	; 0xffffffa4
   151c0:	str	r2, [fp, #-96]	; 0xffffffa0
   151c4:	str	r3, [fp, #-100]	; 0xffffff9c
   151c8:	mov	r3, #0
   151cc:	str	r3, [fp, #-20]	; 0xffffffec
   151d0:	mov	r3, #0
   151d4:	str	r3, [fp, #-24]	; 0xffffffe8
   151d8:	mov	r3, #0
   151dc:	str	r3, [fp, #-28]	; 0xffffffe4
   151e0:	mov	r3, #0
   151e4:	str	r3, [fp, #-32]	; 0xffffffe0
   151e8:	mov	r3, #0
   151ec:	strb	r3, [fp, #-33]	; 0xffffffdf
   151f0:	bl	10f38 <__ctype_get_mb_cur_max@plt>
   151f4:	mov	r3, r0
   151f8:	cmp	r3, #1
   151fc:	moveq	r3, #1
   15200:	movne	r3, #0
   15204:	strb	r3, [fp, #-57]	; 0xffffffc7
   15208:	ldr	r3, [fp, #8]
   1520c:	and	r3, r3, #2
   15210:	cmp	r3, #0
   15214:	movne	r3, #1
   15218:	moveq	r3, #0
   1521c:	strb	r3, [fp, #-34]	; 0xffffffde
   15220:	mov	r3, #0
   15224:	strb	r3, [fp, #-35]	; 0xffffffdd
   15228:	mov	r3, #0
   1522c:	strb	r3, [fp, #-36]	; 0xffffffdc
   15230:	mov	r3, #1
   15234:	strb	r3, [fp, #-37]	; 0xffffffdb
   15238:	ldr	r3, [fp, #4]
   1523c:	cmp	r3, #10
   15240:	ldrls	pc, [pc, r3, lsl #2]
   15244:	b	1545c <__assert_fail@plt+0x4350>
   15248:	andeq	r5, r1, r0, asr r4
   1524c:	andeq	r5, r1, r8, asr #7
   15250:	andeq	r5, r1, ip, ror #7
   15254:	andeq	r5, r1, r0, asr #7
   15258:	ldrdeq	r5, [r1], -r0
   1525c:	andeq	r5, r1, r4, lsl #5
   15260:	andeq	r5, r1, r4, ror r2
   15264:	andeq	r5, r1, r8, ror #5
   15268:	strdeq	r5, [r1], -ip
   1526c:	strdeq	r5, [r1], -ip
   15270:	strdeq	r5, [r1], -ip
   15274:	mov	r3, #5
   15278:	str	r3, [fp, #4]
   1527c:	mov	r3, #1
   15280:	strb	r3, [fp, #-34]	; 0xffffffde
   15284:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15288:	eor	r3, r3, #1
   1528c:	uxtb	r3, r3
   15290:	cmp	r3, #0
   15294:	beq	152c8 <__assert_fail@plt+0x41bc>
   15298:	ldr	r2, [fp, #-20]	; 0xffffffec
   1529c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   152a0:	cmp	r2, r3
   152a4:	bcs	152bc <__assert_fail@plt+0x41b0>
   152a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   152ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   152b0:	add	r3, r2, r3
   152b4:	mov	r2, #34	; 0x22
   152b8:	strb	r2, [r3]
   152bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   152c0:	add	r3, r3, #1
   152c4:	str	r3, [fp, #-20]	; 0xffffffec
   152c8:	mov	r3, #1
   152cc:	strb	r3, [fp, #-33]	; 0xffffffdf
   152d0:	movw	r3, #48408	; 0xbd18
   152d4:	movt	r3, #1
   152d8:	str	r3, [fp, #-28]	; 0xffffffe4
   152dc:	mov	r3, #1
   152e0:	str	r3, [fp, #-32]	; 0xffffffe0
   152e4:	b	15460 <__assert_fail@plt+0x4354>
   152e8:	mov	r3, #1
   152ec:	strb	r3, [fp, #-33]	; 0xffffffdf
   152f0:	mov	r3, #0
   152f4:	strb	r3, [fp, #-34]	; 0xffffffde
   152f8:	b	15460 <__assert_fail@plt+0x4354>
   152fc:	ldr	r3, [fp, #4]
   15300:	cmp	r3, #10
   15304:	beq	15330 <__assert_fail@plt+0x4224>
   15308:	ldr	r1, [fp, #4]
   1530c:	movw	r0, #48416	; 0xbd20
   15310:	movt	r0, #1
   15314:	bl	150a4 <__assert_fail@plt+0x3f98>
   15318:	str	r0, [fp, #16]
   1531c:	ldr	r1, [fp, #4]
   15320:	movw	r0, #48412	; 0xbd1c
   15324:	movt	r0, #1
   15328:	bl	150a4 <__assert_fail@plt+0x3f98>
   1532c:	str	r0, [fp, #20]
   15330:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15334:	eor	r3, r3, #1
   15338:	uxtb	r3, r3
   1533c:	cmp	r3, #0
   15340:	beq	153a0 <__assert_fail@plt+0x4294>
   15344:	ldr	r3, [fp, #16]
   15348:	str	r3, [fp, #-28]	; 0xffffffe4
   1534c:	b	15390 <__assert_fail@plt+0x4284>
   15350:	ldr	r2, [fp, #-20]	; 0xffffffec
   15354:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15358:	cmp	r2, r3
   1535c:	bcs	15378 <__assert_fail@plt+0x426c>
   15360:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15364:	ldr	r3, [fp, #-20]	; 0xffffffec
   15368:	add	r3, r2, r3
   1536c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15370:	ldrb	r2, [r2]
   15374:	strb	r2, [r3]
   15378:	ldr	r3, [fp, #-20]	; 0xffffffec
   1537c:	add	r3, r3, #1
   15380:	str	r3, [fp, #-20]	; 0xffffffec
   15384:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15388:	add	r3, r3, #1
   1538c:	str	r3, [fp, #-28]	; 0xffffffe4
   15390:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15394:	ldrb	r3, [r3]
   15398:	cmp	r3, #0
   1539c:	bne	15350 <__assert_fail@plt+0x4244>
   153a0:	mov	r3, #1
   153a4:	strb	r3, [fp, #-33]	; 0xffffffdf
   153a8:	ldr	r3, [fp, #20]
   153ac:	str	r3, [fp, #-28]	; 0xffffffe4
   153b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   153b4:	bl	10fec <strlen@plt>
   153b8:	str	r0, [fp, #-32]	; 0xffffffe0
   153bc:	b	15460 <__assert_fail@plt+0x4354>
   153c0:	mov	r3, #1
   153c4:	strb	r3, [fp, #-33]	; 0xffffffdf
   153c8:	mov	r3, #1
   153cc:	strb	r3, [fp, #-34]	; 0xffffffde
   153d0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   153d4:	eor	r3, r3, #1
   153d8:	uxtb	r3, r3
   153dc:	cmp	r3, #0
   153e0:	beq	153ec <__assert_fail@plt+0x42e0>
   153e4:	mov	r3, #1
   153e8:	strb	r3, [fp, #-33]	; 0xffffffdf
   153ec:	mov	r3, #2
   153f0:	str	r3, [fp, #4]
   153f4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   153f8:	eor	r3, r3, #1
   153fc:	uxtb	r3, r3
   15400:	cmp	r3, #0
   15404:	beq	15438 <__assert_fail@plt+0x432c>
   15408:	ldr	r2, [fp, #-20]	; 0xffffffec
   1540c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15410:	cmp	r2, r3
   15414:	bcs	1542c <__assert_fail@plt+0x4320>
   15418:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1541c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15420:	add	r3, r2, r3
   15424:	mov	r2, #39	; 0x27
   15428:	strb	r2, [r3]
   1542c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15430:	add	r3, r3, #1
   15434:	str	r3, [fp, #-20]	; 0xffffffec
   15438:	movw	r3, #48412	; 0xbd1c
   1543c:	movt	r3, #1
   15440:	str	r3, [fp, #-28]	; 0xffffffe4
   15444:	mov	r3, #1
   15448:	str	r3, [fp, #-32]	; 0xffffffe0
   1544c:	b	15460 <__assert_fail@plt+0x4354>
   15450:	mov	r3, #0
   15454:	strb	r3, [fp, #-34]	; 0xffffffde
   15458:	b	15460 <__assert_fail@plt+0x4354>
   1545c:	bl	110dc <abort@plt>
   15460:	mov	r3, #0
   15464:	str	r3, [fp, #-16]
   15468:	b	16604 <__assert_fail@plt+0x54f8>
   1546c:	mov	r3, #0
   15470:	strb	r3, [fp, #-40]	; 0xffffffd8
   15474:	mov	r3, #0
   15478:	strb	r3, [fp, #-41]	; 0xffffffd7
   1547c:	mov	r3, #0
   15480:	strb	r3, [fp, #-42]	; 0xffffffd6
   15484:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15488:	cmp	r3, #0
   1548c:	beq	15528 <__assert_fail@plt+0x441c>
   15490:	ldr	r3, [fp, #4]
   15494:	cmp	r3, #2
   15498:	beq	15528 <__assert_fail@plt+0x441c>
   1549c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   154a0:	cmp	r3, #0
   154a4:	beq	15528 <__assert_fail@plt+0x441c>
   154a8:	ldr	r2, [fp, #-16]
   154ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   154b0:	add	r4, r2, r3
   154b4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   154b8:	cmn	r3, #1
   154bc:	bne	154e0 <__assert_fail@plt+0x43d4>
   154c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   154c4:	cmp	r3, #1
   154c8:	bls	154e0 <__assert_fail@plt+0x43d4>
   154cc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   154d0:	bl	10fec <strlen@plt>
   154d4:	str	r0, [fp, #-100]	; 0xffffff9c
   154d8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   154dc:	b	154e4 <__assert_fail@plt+0x43d8>
   154e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   154e4:	cmp	r3, r4
   154e8:	bcc	15528 <__assert_fail@plt+0x441c>
   154ec:	ldr	r2, [fp, #-96]	; 0xffffffa0
   154f0:	ldr	r3, [fp, #-16]
   154f4:	add	r3, r2, r3
   154f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   154fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15500:	mov	r0, r3
   15504:	bl	10ed8 <memcmp@plt>
   15508:	mov	r3, r0
   1550c:	cmp	r3, #0
   15510:	bne	15528 <__assert_fail@plt+0x441c>
   15514:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15518:	cmp	r3, #0
   1551c:	bne	167c0 <__assert_fail@plt+0x56b4>
   15520:	mov	r3, #1
   15524:	strb	r3, [fp, #-40]	; 0xffffffd8
   15528:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1552c:	ldr	r3, [fp, #-16]
   15530:	add	r3, r2, r3
   15534:	ldrb	r3, [r3]
   15538:	strb	r3, [fp, #-38]	; 0xffffffda
   1553c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15540:	cmp	r3, #126	; 0x7e
   15544:	ldrls	pc, [pc, r3, lsl #2]
   15548:	b	15d80 <__assert_fail@plt+0x4c74>
   1554c:	andeq	r5, r1, r8, asr #14
   15550:	andeq	r5, r1, r0, lsl #27
   15554:	andeq	r5, r1, r0, lsl #27
   15558:	andeq	r5, r1, r0, lsl #27
   1555c:	andeq	r5, r1, r0, lsl #27
   15560:	andeq	r5, r1, r0, lsl #27
   15564:	andeq	r5, r1, r0, lsl #27
   15568:	andeq	r5, r1, ip, lsr fp
   1556c:	andeq	r5, r1, r8, asr #22
   15570:	andeq	r5, r1, r8, ror fp
   15574:	andeq	r5, r1, r0, ror #22
   15578:	andeq	r5, r1, r4, lsl #23
   1557c:	andeq	r5, r1, r4, asr fp
   15580:	andeq	r5, r1, ip, ror #22
   15584:	andeq	r5, r1, r0, lsl #27
   15588:	andeq	r5, r1, r0, lsl #27
   1558c:	andeq	r5, r1, r0, lsl #27
   15590:	andeq	r5, r1, r0, lsl #27
   15594:	andeq	r5, r1, r0, lsl #27
   15598:	andeq	r5, r1, r0, lsl #27
   1559c:	andeq	r5, r1, r0, lsl #27
   155a0:	andeq	r5, r1, r0, lsl #27
   155a4:	andeq	r5, r1, r0, lsl #27
   155a8:	andeq	r5, r1, r0, lsl #27
   155ac:	andeq	r5, r1, r0, lsl #27
   155b0:	andeq	r5, r1, r0, lsl #27
   155b4:	andeq	r5, r1, r0, lsl #27
   155b8:	andeq	r5, r1, r0, lsl #27
   155bc:	andeq	r5, r1, r0, lsl #27
   155c0:	andeq	r5, r1, r0, lsl #27
   155c4:	andeq	r5, r1, r0, lsl #27
   155c8:	andeq	r5, r1, r0, lsl #27
   155cc:	andeq	r5, r1, r4, ror #24
   155d0:	andeq	r5, r1, ip, ror #24
   155d4:	andeq	r5, r1, ip, ror #24
   155d8:	andeq	r5, r1, r8, asr ip
   155dc:	andeq	r5, r1, ip, ror #24
   155e0:	andeq	r5, r1, r4, ror sp
   155e4:	andeq	r5, r1, ip, ror #24
   155e8:	andeq	r5, r1, r8, lsl #25
   155ec:	andeq	r5, r1, ip, ror #24
   155f0:	andeq	r5, r1, ip, ror #24
   155f4:	andeq	r5, r1, ip, ror #24
   155f8:	andeq	r5, r1, r4, ror sp
   155fc:	andeq	r5, r1, r4, ror sp
   15600:	andeq	r5, r1, r4, ror sp
   15604:	andeq	r5, r1, r4, ror sp
   15608:	andeq	r5, r1, r4, ror sp
   1560c:	andeq	r5, r1, r4, ror sp
   15610:	andeq	r5, r1, r4, ror sp
   15614:	andeq	r5, r1, r4, ror sp
   15618:	andeq	r5, r1, r4, ror sp
   1561c:	andeq	r5, r1, r4, ror sp
   15620:	andeq	r5, r1, r4, ror sp
   15624:	andeq	r5, r1, r4, ror sp
   15628:	andeq	r5, r1, r4, ror sp
   1562c:	andeq	r5, r1, r4, ror sp
   15630:	andeq	r5, r1, r4, ror sp
   15634:	andeq	r5, r1, r4, ror sp
   15638:	andeq	r5, r1, ip, ror #24
   1563c:	andeq	r5, r1, ip, ror #24
   15640:	andeq	r5, r1, ip, ror #24
   15644:	andeq	r5, r1, ip, ror #24
   15648:	andeq	r5, r1, r8, lsr #18
   1564c:	andeq	r5, r1, r0, lsl #27
   15650:	andeq	r5, r1, r4, ror sp
   15654:	andeq	r5, r1, r4, ror sp
   15658:	andeq	r5, r1, r4, ror sp
   1565c:	andeq	r5, r1, r4, ror sp
   15660:	andeq	r5, r1, r4, ror sp
   15664:	andeq	r5, r1, r4, ror sp
   15668:	andeq	r5, r1, r4, ror sp
   1566c:	andeq	r5, r1, r4, ror sp
   15670:	andeq	r5, r1, r4, ror sp
   15674:	andeq	r5, r1, r4, ror sp
   15678:	andeq	r5, r1, r4, ror sp
   1567c:	andeq	r5, r1, r4, ror sp
   15680:	andeq	r5, r1, r4, ror sp
   15684:	andeq	r5, r1, r4, ror sp
   15688:	andeq	r5, r1, r4, ror sp
   1568c:	andeq	r5, r1, r4, ror sp
   15690:	andeq	r5, r1, r4, ror sp
   15694:	andeq	r5, r1, r4, ror sp
   15698:	andeq	r5, r1, r4, ror sp
   1569c:	andeq	r5, r1, r4, ror sp
   156a0:	andeq	r5, r1, r4, ror sp
   156a4:	andeq	r5, r1, r4, ror sp
   156a8:	andeq	r5, r1, r4, ror sp
   156ac:	andeq	r5, r1, r4, ror sp
   156b0:	andeq	r5, r1, r4, ror sp
   156b4:	andeq	r5, r1, r4, ror sp
   156b8:	andeq	r5, r1, ip, ror #24
   156bc:	muleq	r1, r0, fp
   156c0:	andeq	r5, r1, r4, ror sp
   156c4:	andeq	r5, r1, ip, ror #24
   156c8:	andeq	r5, r1, r4, ror sp
   156cc:	andeq	r5, r1, ip, ror #24
   156d0:	andeq	r5, r1, r4, ror sp
   156d4:	andeq	r5, r1, r4, ror sp
   156d8:	andeq	r5, r1, r4, ror sp
   156dc:	andeq	r5, r1, r4, ror sp
   156e0:	andeq	r5, r1, r4, ror sp
   156e4:	andeq	r5, r1, r4, ror sp
   156e8:	andeq	r5, r1, r4, ror sp
   156ec:	andeq	r5, r1, r4, ror sp
   156f0:	andeq	r5, r1, r4, ror sp
   156f4:	andeq	r5, r1, r4, ror sp
   156f8:	andeq	r5, r1, r4, ror sp
   156fc:	andeq	r5, r1, r4, ror sp
   15700:	andeq	r5, r1, r4, ror sp
   15704:	andeq	r5, r1, r4, ror sp
   15708:	andeq	r5, r1, r4, ror sp
   1570c:	andeq	r5, r1, r4, ror sp
   15710:	andeq	r5, r1, r4, ror sp
   15714:	andeq	r5, r1, r4, ror sp
   15718:	andeq	r5, r1, r4, ror sp
   1571c:	andeq	r5, r1, r4, ror sp
   15720:	andeq	r5, r1, r4, ror sp
   15724:	andeq	r5, r1, r4, ror sp
   15728:	andeq	r5, r1, r4, ror sp
   1572c:	andeq	r5, r1, r4, ror sp
   15730:	andeq	r5, r1, r4, ror sp
   15734:	andeq	r5, r1, r4, ror sp
   15738:	andeq	r5, r1, r0, lsl ip
   1573c:	andeq	r5, r1, ip, ror #24
   15740:	andeq	r5, r1, r0, lsl ip
   15744:	andeq	r5, r1, r8, asr ip
   15748:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1574c:	cmp	r3, #0
   15750:	beq	15914 <__assert_fail@plt+0x4808>
   15754:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15758:	cmp	r3, #0
   1575c:	bne	167c8 <__assert_fail@plt+0x56bc>
   15760:	mov	r3, #1
   15764:	strb	r3, [fp, #-41]	; 0xffffffd7
   15768:	ldr	r3, [fp, #4]
   1576c:	cmp	r3, #2
   15770:	bne	15820 <__assert_fail@plt+0x4714>
   15774:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   15778:	eor	r3, r3, #1
   1577c:	uxtb	r3, r3
   15780:	cmp	r3, #0
   15784:	beq	15820 <__assert_fail@plt+0x4714>
   15788:	ldr	r2, [fp, #-20]	; 0xffffffec
   1578c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15790:	cmp	r2, r3
   15794:	bcs	157ac <__assert_fail@plt+0x46a0>
   15798:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1579c:	ldr	r3, [fp, #-20]	; 0xffffffec
   157a0:	add	r3, r2, r3
   157a4:	mov	r2, #39	; 0x27
   157a8:	strb	r2, [r3]
   157ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   157b0:	add	r3, r3, #1
   157b4:	str	r3, [fp, #-20]	; 0xffffffec
   157b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   157bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   157c0:	cmp	r2, r3
   157c4:	bcs	157dc <__assert_fail@plt+0x46d0>
   157c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   157cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   157d0:	add	r3, r2, r3
   157d4:	mov	r2, #36	; 0x24
   157d8:	strb	r2, [r3]
   157dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   157e0:	add	r3, r3, #1
   157e4:	str	r3, [fp, #-20]	; 0xffffffec
   157e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   157ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   157f0:	cmp	r2, r3
   157f4:	bcs	1580c <__assert_fail@plt+0x4700>
   157f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   157fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15800:	add	r3, r2, r3
   15804:	mov	r2, #39	; 0x27
   15808:	strb	r2, [r3]
   1580c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15810:	add	r3, r3, #1
   15814:	str	r3, [fp, #-20]	; 0xffffffec
   15818:	mov	r3, #1
   1581c:	strb	r3, [fp, #-35]	; 0xffffffdd
   15820:	ldr	r2, [fp, #-20]	; 0xffffffec
   15824:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15828:	cmp	r2, r3
   1582c:	bcs	15844 <__assert_fail@plt+0x4738>
   15830:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15834:	ldr	r3, [fp, #-20]	; 0xffffffec
   15838:	add	r3, r2, r3
   1583c:	mov	r2, #92	; 0x5c
   15840:	strb	r2, [r3]
   15844:	ldr	r3, [fp, #-20]	; 0xffffffec
   15848:	add	r3, r3, #1
   1584c:	str	r3, [fp, #-20]	; 0xffffffec
   15850:	ldr	r3, [fp, #4]
   15854:	cmp	r3, #2
   15858:	beq	15908 <__assert_fail@plt+0x47fc>
   1585c:	ldr	r3, [fp, #-16]
   15860:	add	r3, r3, #1
   15864:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15868:	cmp	r2, r3
   1586c:	bls	15908 <__assert_fail@plt+0x47fc>
   15870:	ldr	r3, [fp, #-16]
   15874:	add	r3, r3, #1
   15878:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1587c:	add	r3, r2, r3
   15880:	ldrb	r3, [r3]
   15884:	cmp	r3, #47	; 0x2f
   15888:	bls	15908 <__assert_fail@plt+0x47fc>
   1588c:	ldr	r3, [fp, #-16]
   15890:	add	r3, r3, #1
   15894:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15898:	add	r3, r2, r3
   1589c:	ldrb	r3, [r3]
   158a0:	cmp	r3, #57	; 0x39
   158a4:	bhi	15908 <__assert_fail@plt+0x47fc>
   158a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   158ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   158b0:	cmp	r2, r3
   158b4:	bcs	158cc <__assert_fail@plt+0x47c0>
   158b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   158bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   158c0:	add	r3, r2, r3
   158c4:	mov	r2, #48	; 0x30
   158c8:	strb	r2, [r3]
   158cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   158d0:	add	r3, r3, #1
   158d4:	str	r3, [fp, #-20]	; 0xffffffec
   158d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   158dc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   158e0:	cmp	r2, r3
   158e4:	bcs	158fc <__assert_fail@plt+0x47f0>
   158e8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   158ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   158f0:	add	r3, r2, r3
   158f4:	mov	r2, #48	; 0x30
   158f8:	strb	r2, [r3]
   158fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15900:	add	r3, r3, #1
   15904:	str	r3, [fp, #-20]	; 0xffffffec
   15908:	mov	r3, #48	; 0x30
   1590c:	strb	r3, [fp, #-38]	; 0xffffffda
   15910:	b	16350 <__assert_fail@plt+0x5244>
   15914:	ldr	r3, [fp, #8]
   15918:	and	r3, r3, #1
   1591c:	cmp	r3, #0
   15920:	beq	16350 <__assert_fail@plt+0x5244>
   15924:	b	165f8 <__assert_fail@plt+0x54ec>
   15928:	ldr	r3, [fp, #4]
   1592c:	cmp	r3, #2
   15930:	beq	15944 <__assert_fail@plt+0x4838>
   15934:	ldr	r3, [fp, #4]
   15938:	cmp	r3, #5
   1593c:	beq	15954 <__assert_fail@plt+0x4848>
   15940:	b	15b38 <__assert_fail@plt+0x4a2c>
   15944:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15948:	cmp	r3, #0
   1594c:	beq	15b2c <__assert_fail@plt+0x4a20>
   15950:	b	167fc <__assert_fail@plt+0x56f0>
   15954:	ldr	r3, [fp, #8]
   15958:	and	r3, r3, #4
   1595c:	cmp	r3, #0
   15960:	beq	15b34 <__assert_fail@plt+0x4a28>
   15964:	ldr	r3, [fp, #-16]
   15968:	add	r3, r3, #2
   1596c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15970:	cmp	r2, r3
   15974:	bls	15b34 <__assert_fail@plt+0x4a28>
   15978:	ldr	r3, [fp, #-16]
   1597c:	add	r3, r3, #1
   15980:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15984:	add	r3, r2, r3
   15988:	ldrb	r3, [r3]
   1598c:	cmp	r3, #63	; 0x3f
   15990:	bne	15b34 <__assert_fail@plt+0x4a28>
   15994:	ldr	r3, [fp, #-16]
   15998:	add	r3, r3, #2
   1599c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   159a0:	add	r3, r2, r3
   159a4:	ldrb	r3, [r3]
   159a8:	sub	r3, r3, #33	; 0x21
   159ac:	cmp	r3, #29
   159b0:	ldrls	pc, [pc, r3, lsl #2]
   159b4:	b	15b24 <__assert_fail@plt+0x4a18>
   159b8:	andeq	r5, r1, r0, lsr sl
   159bc:	andeq	r5, r1, r4, lsr #22
   159c0:	andeq	r5, r1, r4, lsr #22
   159c4:	andeq	r5, r1, r4, lsr #22
   159c8:	andeq	r5, r1, r4, lsr #22
   159cc:	andeq	r5, r1, r4, lsr #22
   159d0:	andeq	r5, r1, r0, lsr sl
   159d4:	andeq	r5, r1, r0, lsr sl
   159d8:	andeq	r5, r1, r0, lsr sl
   159dc:	andeq	r5, r1, r4, lsr #22
   159e0:	andeq	r5, r1, r4, lsr #22
   159e4:	andeq	r5, r1, r4, lsr #22
   159e8:	andeq	r5, r1, r0, lsr sl
   159ec:	andeq	r5, r1, r4, lsr #22
   159f0:	andeq	r5, r1, r0, lsr sl
   159f4:	andeq	r5, r1, r4, lsr #22
   159f8:	andeq	r5, r1, r4, lsr #22
   159fc:	andeq	r5, r1, r4, lsr #22
   15a00:	andeq	r5, r1, r4, lsr #22
   15a04:	andeq	r5, r1, r4, lsr #22
   15a08:	andeq	r5, r1, r4, lsr #22
   15a0c:	andeq	r5, r1, r4, lsr #22
   15a10:	andeq	r5, r1, r4, lsr #22
   15a14:	andeq	r5, r1, r4, lsr #22
   15a18:	andeq	r5, r1, r4, lsr #22
   15a1c:	andeq	r5, r1, r4, lsr #22
   15a20:	andeq	r5, r1, r4, lsr #22
   15a24:	andeq	r5, r1, r0, lsr sl
   15a28:	andeq	r5, r1, r0, lsr sl
   15a2c:	andeq	r5, r1, r0, lsr sl
   15a30:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15a34:	cmp	r3, #0
   15a38:	bne	167d0 <__assert_fail@plt+0x56c4>
   15a3c:	ldr	r3, [fp, #-16]
   15a40:	add	r3, r3, #2
   15a44:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15a48:	add	r3, r2, r3
   15a4c:	ldrb	r3, [r3]
   15a50:	strb	r3, [fp, #-38]	; 0xffffffda
   15a54:	ldr	r3, [fp, #-16]
   15a58:	add	r3, r3, #2
   15a5c:	str	r3, [fp, #-16]
   15a60:	ldr	r2, [fp, #-20]	; 0xffffffec
   15a64:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15a68:	cmp	r2, r3
   15a6c:	bcs	15a84 <__assert_fail@plt+0x4978>
   15a70:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15a74:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a78:	add	r3, r2, r3
   15a7c:	mov	r2, #63	; 0x3f
   15a80:	strb	r2, [r3]
   15a84:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a88:	add	r3, r3, #1
   15a8c:	str	r3, [fp, #-20]	; 0xffffffec
   15a90:	ldr	r2, [fp, #-20]	; 0xffffffec
   15a94:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15a98:	cmp	r2, r3
   15a9c:	bcs	15ab4 <__assert_fail@plt+0x49a8>
   15aa0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15aa8:	add	r3, r2, r3
   15aac:	mov	r2, #34	; 0x22
   15ab0:	strb	r2, [r3]
   15ab4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ab8:	add	r3, r3, #1
   15abc:	str	r3, [fp, #-20]	; 0xffffffec
   15ac0:	ldr	r2, [fp, #-20]	; 0xffffffec
   15ac4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15ac8:	cmp	r2, r3
   15acc:	bcs	15ae4 <__assert_fail@plt+0x49d8>
   15ad0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15ad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ad8:	add	r3, r2, r3
   15adc:	mov	r2, #34	; 0x22
   15ae0:	strb	r2, [r3]
   15ae4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ae8:	add	r3, r3, #1
   15aec:	str	r3, [fp, #-20]	; 0xffffffec
   15af0:	ldr	r2, [fp, #-20]	; 0xffffffec
   15af4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15af8:	cmp	r2, r3
   15afc:	bcs	15b14 <__assert_fail@plt+0x4a08>
   15b00:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15b04:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b08:	add	r3, r2, r3
   15b0c:	mov	r2, #63	; 0x3f
   15b10:	strb	r2, [r3]
   15b14:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b18:	add	r3, r3, #1
   15b1c:	str	r3, [fp, #-20]	; 0xffffffec
   15b20:	b	15b28 <__assert_fail@plt+0x4a1c>
   15b24:	nop	{0}
   15b28:	b	15b34 <__assert_fail@plt+0x4a28>
   15b2c:	nop	{0}
   15b30:	b	16384 <__assert_fail@plt+0x5278>
   15b34:	nop	{0}
   15b38:	b	16384 <__assert_fail@plt+0x5278>
   15b3c:	mov	r3, #97	; 0x61
   15b40:	strb	r3, [fp, #-39]	; 0xffffffd9
   15b44:	b	15bf8 <__assert_fail@plt+0x4aec>
   15b48:	mov	r3, #98	; 0x62
   15b4c:	strb	r3, [fp, #-39]	; 0xffffffd9
   15b50:	b	15bf8 <__assert_fail@plt+0x4aec>
   15b54:	mov	r3, #102	; 0x66
   15b58:	strb	r3, [fp, #-39]	; 0xffffffd9
   15b5c:	b	15bf8 <__assert_fail@plt+0x4aec>
   15b60:	mov	r3, #110	; 0x6e
   15b64:	strb	r3, [fp, #-39]	; 0xffffffd9
   15b68:	b	15bdc <__assert_fail@plt+0x4ad0>
   15b6c:	mov	r3, #114	; 0x72
   15b70:	strb	r3, [fp, #-39]	; 0xffffffd9
   15b74:	b	15bdc <__assert_fail@plt+0x4ad0>
   15b78:	mov	r3, #116	; 0x74
   15b7c:	strb	r3, [fp, #-39]	; 0xffffffd9
   15b80:	b	15bdc <__assert_fail@plt+0x4ad0>
   15b84:	mov	r3, #118	; 0x76
   15b88:	strb	r3, [fp, #-39]	; 0xffffffd9
   15b8c:	b	15bf8 <__assert_fail@plt+0x4aec>
   15b90:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15b94:	strb	r3, [fp, #-39]	; 0xffffffd9
   15b98:	ldr	r3, [fp, #4]
   15b9c:	cmp	r3, #2
   15ba0:	bne	15bb4 <__assert_fail@plt+0x4aa8>
   15ba4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15ba8:	cmp	r3, #0
   15bac:	beq	16510 <__assert_fail@plt+0x5404>
   15bb0:	b	167fc <__assert_fail@plt+0x56f0>
   15bb4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15bb8:	cmp	r3, #0
   15bbc:	beq	15bd8 <__assert_fail@plt+0x4acc>
   15bc0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15bc4:	cmp	r3, #0
   15bc8:	beq	15bd8 <__assert_fail@plt+0x4acc>
   15bcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15bd0:	cmp	r3, #0
   15bd4:	bne	16518 <__assert_fail@plt+0x540c>
   15bd8:	nop	{0}
   15bdc:	ldr	r3, [fp, #4]
   15be0:	cmp	r3, #2
   15be4:	bne	15bf4 <__assert_fail@plt+0x4ae8>
   15be8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15bec:	cmp	r3, #0
   15bf0:	bne	167d8 <__assert_fail@plt+0x56cc>
   15bf4:	nop	{0}
   15bf8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15bfc:	cmp	r3, #0
   15c00:	beq	16358 <__assert_fail@plt+0x524c>
   15c04:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   15c08:	strb	r3, [fp, #-38]	; 0xffffffda
   15c0c:	b	16410 <__assert_fail@plt+0x5304>
   15c10:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15c14:	cmn	r3, #1
   15c18:	bne	15c3c <__assert_fail@plt+0x4b30>
   15c1c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15c20:	add	r3, r3, #1
   15c24:	ldrb	r3, [r3]
   15c28:	cmp	r3, #0
   15c2c:	movne	r3, #1
   15c30:	moveq	r3, #0
   15c34:	uxtb	r3, r3
   15c38:	b	15c50 <__assert_fail@plt+0x4b44>
   15c3c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15c40:	cmp	r3, #1
   15c44:	movne	r3, #1
   15c48:	moveq	r3, #0
   15c4c:	uxtb	r3, r3
   15c50:	cmp	r3, #0
   15c54:	bne	16360 <__assert_fail@plt+0x5254>
   15c58:	ldr	r3, [fp, #-16]
   15c5c:	cmp	r3, #0
   15c60:	bne	16368 <__assert_fail@plt+0x525c>
   15c64:	mov	r3, #1
   15c68:	strb	r3, [fp, #-42]	; 0xffffffd6
   15c6c:	ldr	r3, [fp, #4]
   15c70:	cmp	r3, #2
   15c74:	bne	16370 <__assert_fail@plt+0x5264>
   15c78:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15c7c:	cmp	r3, #0
   15c80:	beq	16370 <__assert_fail@plt+0x5264>
   15c84:	b	167fc <__assert_fail@plt+0x56f0>
   15c88:	mov	r3, #1
   15c8c:	strb	r3, [fp, #-36]	; 0xffffffdc
   15c90:	mov	r3, #1
   15c94:	strb	r3, [fp, #-42]	; 0xffffffd6
   15c98:	ldr	r3, [fp, #4]
   15c9c:	cmp	r3, #2
   15ca0:	bne	16378 <__assert_fail@plt+0x526c>
   15ca4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15ca8:	cmp	r3, #0
   15cac:	bne	167e0 <__assert_fail@plt+0x56d4>
   15cb0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15cb4:	cmp	r3, #0
   15cb8:	beq	15cd8 <__assert_fail@plt+0x4bcc>
   15cbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15cc0:	cmp	r3, #0
   15cc4:	bne	15cd8 <__assert_fail@plt+0x4bcc>
   15cc8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15ccc:	str	r3, [fp, #-24]	; 0xffffffe8
   15cd0:	mov	r3, #0
   15cd4:	str	r3, [fp, #-92]	; 0xffffffa4
   15cd8:	ldr	r2, [fp, #-20]	; 0xffffffec
   15cdc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15ce0:	cmp	r2, r3
   15ce4:	bcs	15cfc <__assert_fail@plt+0x4bf0>
   15ce8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15cec:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cf0:	add	r3, r2, r3
   15cf4:	mov	r2, #39	; 0x27
   15cf8:	strb	r2, [r3]
   15cfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d00:	add	r3, r3, #1
   15d04:	str	r3, [fp, #-20]	; 0xffffffec
   15d08:	ldr	r2, [fp, #-20]	; 0xffffffec
   15d0c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15d10:	cmp	r2, r3
   15d14:	bcs	15d2c <__assert_fail@plt+0x4c20>
   15d18:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15d1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d20:	add	r3, r2, r3
   15d24:	mov	r2, #92	; 0x5c
   15d28:	strb	r2, [r3]
   15d2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d30:	add	r3, r3, #1
   15d34:	str	r3, [fp, #-20]	; 0xffffffec
   15d38:	ldr	r2, [fp, #-20]	; 0xffffffec
   15d3c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15d40:	cmp	r2, r3
   15d44:	bcs	15d5c <__assert_fail@plt+0x4c50>
   15d48:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15d4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d50:	add	r3, r2, r3
   15d54:	mov	r2, #39	; 0x27
   15d58:	strb	r2, [r3]
   15d5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d60:	add	r3, r3, #1
   15d64:	str	r3, [fp, #-20]	; 0xffffffec
   15d68:	mov	r3, #0
   15d6c:	strb	r3, [fp, #-35]	; 0xffffffdd
   15d70:	b	16378 <__assert_fail@plt+0x526c>
   15d74:	mov	r3, #1
   15d78:	strb	r3, [fp, #-42]	; 0xffffffd6
   15d7c:	b	16384 <__assert_fail@plt+0x5278>
   15d80:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   15d84:	cmp	r3, #0
   15d88:	beq	15dc8 <__assert_fail@plt+0x4cbc>
   15d8c:	mov	r3, #1
   15d90:	str	r3, [fp, #-48]	; 0xffffffd0
   15d94:	bl	10fbc <__ctype_b_loc@plt>
   15d98:	mov	r3, r0
   15d9c:	ldr	r2, [r3]
   15da0:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15da4:	lsl	r3, r3, #1
   15da8:	add	r3, r2, r3
   15dac:	ldrh	r3, [r3]
   15db0:	and	r3, r3, #16384	; 0x4000
   15db4:	cmp	r3, #0
   15db8:	movne	r3, #1
   15dbc:	moveq	r3, #0
   15dc0:	strb	r3, [fp, #-49]	; 0xffffffcf
   15dc4:	b	16014 <__assert_fail@plt+0x4f08>
   15dc8:	sub	r3, fp, #76	; 0x4c
   15dcc:	mov	r2, #8
   15dd0:	mov	r1, #0
   15dd4:	mov	r0, r3
   15dd8:	bl	11028 <memset@plt>
   15ddc:	mov	r3, #0
   15de0:	str	r3, [fp, #-48]	; 0xffffffd0
   15de4:	mov	r3, #1
   15de8:	strb	r3, [fp, #-49]	; 0xffffffcf
   15dec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15df0:	cmn	r3, #1
   15df4:	bne	15e04 <__assert_fail@plt+0x4cf8>
   15df8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15dfc:	bl	10fec <strlen@plt>
   15e00:	str	r0, [fp, #-100]	; 0xffffff9c
   15e04:	ldr	r2, [fp, #-16]
   15e08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15e0c:	add	r3, r2, r3
   15e10:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15e14:	add	r1, r2, r3
   15e18:	ldr	r2, [fp, #-16]
   15e1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15e20:	add	r3, r2, r3
   15e24:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15e28:	sub	r2, r2, r3
   15e2c:	sub	r3, fp, #76	; 0x4c
   15e30:	sub	r0, fp, #80	; 0x50
   15e34:	bl	1a420 <__assert_fail@plt+0x9314>
   15e38:	str	r0, [fp, #-64]	; 0xffffffc0
   15e3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15e40:	cmp	r3, #0
   15e44:	beq	16008 <__assert_fail@plt+0x4efc>
   15e48:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15e4c:	cmn	r3, #1
   15e50:	bne	15e60 <__assert_fail@plt+0x4d54>
   15e54:	mov	r3, #0
   15e58:	strb	r3, [fp, #-49]	; 0xffffffcf
   15e5c:	b	16014 <__assert_fail@plt+0x4f08>
   15e60:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15e64:	cmn	r3, #2
   15e68:	bne	15ec0 <__assert_fail@plt+0x4db4>
   15e6c:	mov	r3, #0
   15e70:	strb	r3, [fp, #-49]	; 0xffffffcf
   15e74:	b	15e84 <__assert_fail@plt+0x4d78>
   15e78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15e7c:	add	r3, r3, #1
   15e80:	str	r3, [fp, #-48]	; 0xffffffd0
   15e84:	ldr	r2, [fp, #-16]
   15e88:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15e8c:	add	r3, r2, r3
   15e90:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15e94:	cmp	r2, r3
   15e98:	bls	16010 <__assert_fail@plt+0x4f04>
   15e9c:	ldr	r2, [fp, #-16]
   15ea0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15ea4:	add	r3, r2, r3
   15ea8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15eac:	add	r3, r2, r3
   15eb0:	ldrb	r3, [r3]
   15eb4:	cmp	r3, #0
   15eb8:	bne	15e78 <__assert_fail@plt+0x4d6c>
   15ebc:	b	16010 <__assert_fail@plt+0x4f04>
   15ec0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15ec4:	cmp	r3, #0
   15ec8:	beq	15fbc <__assert_fail@plt+0x4eb0>
   15ecc:	ldr	r3, [fp, #4]
   15ed0:	cmp	r3, #2
   15ed4:	bne	15fbc <__assert_fail@plt+0x4eb0>
   15ed8:	mov	r3, #1
   15edc:	str	r3, [fp, #-56]	; 0xffffffc8
   15ee0:	b	15fac <__assert_fail@plt+0x4ea0>
   15ee4:	ldr	r2, [fp, #-16]
   15ee8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15eec:	add	r2, r2, r3
   15ef0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15ef4:	add	r3, r2, r3
   15ef8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15efc:	add	r3, r2, r3
   15f00:	ldrb	r3, [r3]
   15f04:	sub	r3, r3, #91	; 0x5b
   15f08:	cmp	r3, #33	; 0x21
   15f0c:	ldrls	pc, [pc, r3, lsl #2]
   15f10:	b	15f9c <__assert_fail@plt+0x4e90>
   15f14:	strdeq	r6, [r1], -ip
   15f18:	strdeq	r6, [r1], -ip
   15f1c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f20:	strdeq	r6, [r1], -ip
   15f24:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f28:	strdeq	r6, [r1], -ip
   15f2c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f30:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f34:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f38:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f3c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f40:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f44:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f48:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f4c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f50:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f54:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f58:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f5c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f60:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f64:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f68:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f6c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f70:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f74:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f78:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f7c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f80:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f84:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f88:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f8c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f90:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f94:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f98:	strdeq	r6, [r1], -ip
   15f9c:	nop	{0}
   15fa0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15fa4:	add	r3, r3, #1
   15fa8:	str	r3, [fp, #-56]	; 0xffffffc8
   15fac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15fb0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15fb4:	cmp	r2, r3
   15fb8:	bcc	15ee4 <__assert_fail@plt+0x4dd8>
   15fbc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15fc0:	mov	r0, r3
   15fc4:	bl	10f14 <iswprint@plt>
   15fc8:	mov	r3, r0
   15fcc:	cmp	r3, #0
   15fd0:	bne	15fdc <__assert_fail@plt+0x4ed0>
   15fd4:	mov	r3, #0
   15fd8:	strb	r3, [fp, #-49]	; 0xffffffcf
   15fdc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15fe0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15fe4:	add	r3, r2, r3
   15fe8:	str	r3, [fp, #-48]	; 0xffffffd0
   15fec:	sub	r3, fp, #76	; 0x4c
   15ff0:	mov	r0, r3
   15ff4:	bl	10ec0 <mbsinit@plt>
   15ff8:	mov	r3, r0
   15ffc:	cmp	r3, #0
   16000:	beq	15e04 <__assert_fail@plt+0x4cf8>
   16004:	b	16014 <__assert_fail@plt+0x4f08>
   16008:	nop	{0}
   1600c:	b	16014 <__assert_fail@plt+0x4f08>
   16010:	nop	{0}
   16014:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   16018:	strb	r3, [fp, #-42]	; 0xffffffd6
   1601c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16020:	cmp	r3, #1
   16024:	bhi	16048 <__assert_fail@plt+0x4f3c>
   16028:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1602c:	cmp	r3, #0
   16030:	beq	16380 <__assert_fail@plt+0x5274>
   16034:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   16038:	eor	r3, r3, #1
   1603c:	uxtb	r3, r3
   16040:	cmp	r3, #0
   16044:	beq	16380 <__assert_fail@plt+0x5274>
   16048:	ldr	r2, [fp, #-16]
   1604c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16050:	add	r3, r2, r3
   16054:	str	r3, [fp, #-68]	; 0xffffffbc
   16058:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1605c:	cmp	r3, #0
   16060:	beq	16214 <__assert_fail@plt+0x5108>
   16064:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   16068:	eor	r3, r3, #1
   1606c:	uxtb	r3, r3
   16070:	cmp	r3, #0
   16074:	beq	16214 <__assert_fail@plt+0x5108>
   16078:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1607c:	cmp	r3, #0
   16080:	bne	167e8 <__assert_fail@plt+0x56dc>
   16084:	mov	r3, #1
   16088:	strb	r3, [fp, #-41]	; 0xffffffd7
   1608c:	ldr	r3, [fp, #4]
   16090:	cmp	r3, #2
   16094:	bne	16144 <__assert_fail@plt+0x5038>
   16098:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1609c:	eor	r3, r3, #1
   160a0:	uxtb	r3, r3
   160a4:	cmp	r3, #0
   160a8:	beq	16144 <__assert_fail@plt+0x5038>
   160ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   160b0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   160b4:	cmp	r2, r3
   160b8:	bcs	160d0 <__assert_fail@plt+0x4fc4>
   160bc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   160c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   160c4:	add	r3, r2, r3
   160c8:	mov	r2, #39	; 0x27
   160cc:	strb	r2, [r3]
   160d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   160d4:	add	r3, r3, #1
   160d8:	str	r3, [fp, #-20]	; 0xffffffec
   160dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   160e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   160e4:	cmp	r2, r3
   160e8:	bcs	16100 <__assert_fail@plt+0x4ff4>
   160ec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   160f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   160f4:	add	r3, r2, r3
   160f8:	mov	r2, #36	; 0x24
   160fc:	strb	r2, [r3]
   16100:	ldr	r3, [fp, #-20]	; 0xffffffec
   16104:	add	r3, r3, #1
   16108:	str	r3, [fp, #-20]	; 0xffffffec
   1610c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16110:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16114:	cmp	r2, r3
   16118:	bcs	16130 <__assert_fail@plt+0x5024>
   1611c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16120:	ldr	r3, [fp, #-20]	; 0xffffffec
   16124:	add	r3, r2, r3
   16128:	mov	r2, #39	; 0x27
   1612c:	strb	r2, [r3]
   16130:	ldr	r3, [fp, #-20]	; 0xffffffec
   16134:	add	r3, r3, #1
   16138:	str	r3, [fp, #-20]	; 0xffffffec
   1613c:	mov	r3, #1
   16140:	strb	r3, [fp, #-35]	; 0xffffffdd
   16144:	ldr	r2, [fp, #-20]	; 0xffffffec
   16148:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1614c:	cmp	r2, r3
   16150:	bcs	16168 <__assert_fail@plt+0x505c>
   16154:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16158:	ldr	r3, [fp, #-20]	; 0xffffffec
   1615c:	add	r3, r2, r3
   16160:	mov	r2, #92	; 0x5c
   16164:	strb	r2, [r3]
   16168:	ldr	r3, [fp, #-20]	; 0xffffffec
   1616c:	add	r3, r3, #1
   16170:	str	r3, [fp, #-20]	; 0xffffffec
   16174:	ldr	r2, [fp, #-20]	; 0xffffffec
   16178:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1617c:	cmp	r2, r3
   16180:	bcs	161a8 <__assert_fail@plt+0x509c>
   16184:	ldrb	r3, [fp, #-38]	; 0xffffffda
   16188:	lsr	r3, r3, #6
   1618c:	uxtb	r2, r3
   16190:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16194:	ldr	r3, [fp, #-20]	; 0xffffffec
   16198:	add	r3, r1, r3
   1619c:	add	r2, r2, #48	; 0x30
   161a0:	uxtb	r2, r2
   161a4:	strb	r2, [r3]
   161a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   161ac:	add	r3, r3, #1
   161b0:	str	r3, [fp, #-20]	; 0xffffffec
   161b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   161b8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   161bc:	cmp	r2, r3
   161c0:	bcs	161f0 <__assert_fail@plt+0x50e4>
   161c4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   161c8:	lsr	r3, r3, #3
   161cc:	uxtb	r3, r3
   161d0:	and	r3, r3, #7
   161d4:	uxtb	r2, r3
   161d8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   161dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   161e0:	add	r3, r1, r3
   161e4:	add	r2, r2, #48	; 0x30
   161e8:	uxtb	r2, r2
   161ec:	strb	r2, [r3]
   161f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   161f4:	add	r3, r3, #1
   161f8:	str	r3, [fp, #-20]	; 0xffffffec
   161fc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   16200:	and	r3, r3, #7
   16204:	uxtb	r3, r3
   16208:	add	r3, r3, #48	; 0x30
   1620c:	strb	r3, [fp, #-38]	; 0xffffffda
   16210:	b	16258 <__assert_fail@plt+0x514c>
   16214:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   16218:	cmp	r3, #0
   1621c:	beq	16258 <__assert_fail@plt+0x514c>
   16220:	ldr	r2, [fp, #-20]	; 0xffffffec
   16224:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16228:	cmp	r2, r3
   1622c:	bcs	16244 <__assert_fail@plt+0x5138>
   16230:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16234:	ldr	r3, [fp, #-20]	; 0xffffffec
   16238:	add	r3, r2, r3
   1623c:	mov	r2, #92	; 0x5c
   16240:	strb	r2, [r3]
   16244:	ldr	r3, [fp, #-20]	; 0xffffffec
   16248:	add	r3, r3, #1
   1624c:	str	r3, [fp, #-20]	; 0xffffffec
   16250:	mov	r3, #0
   16254:	strb	r3, [fp, #-40]	; 0xffffffd8
   16258:	ldr	r3, [fp, #-16]
   1625c:	add	r3, r3, #1
   16260:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16264:	cmp	r2, r3
   16268:	bls	16348 <__assert_fail@plt+0x523c>
   1626c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   16270:	cmp	r3, #0
   16274:	beq	162f4 <__assert_fail@plt+0x51e8>
   16278:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1627c:	eor	r3, r3, #1
   16280:	uxtb	r3, r3
   16284:	cmp	r3, #0
   16288:	beq	162f4 <__assert_fail@plt+0x51e8>
   1628c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16290:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16294:	cmp	r2, r3
   16298:	bcs	162b0 <__assert_fail@plt+0x51a4>
   1629c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   162a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   162a4:	add	r3, r2, r3
   162a8:	mov	r2, #39	; 0x27
   162ac:	strb	r2, [r3]
   162b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   162b4:	add	r3, r3, #1
   162b8:	str	r3, [fp, #-20]	; 0xffffffec
   162bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   162c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   162c4:	cmp	r2, r3
   162c8:	bcs	162e0 <__assert_fail@plt+0x51d4>
   162cc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   162d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   162d4:	add	r3, r2, r3
   162d8:	mov	r2, #39	; 0x27
   162dc:	strb	r2, [r3]
   162e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   162e4:	add	r3, r3, #1
   162e8:	str	r3, [fp, #-20]	; 0xffffffec
   162ec:	mov	r3, #0
   162f0:	strb	r3, [fp, #-35]	; 0xffffffdd
   162f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   162f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   162fc:	cmp	r2, r3
   16300:	bcs	16318 <__assert_fail@plt+0x520c>
   16304:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16308:	ldr	r3, [fp, #-20]	; 0xffffffec
   1630c:	add	r3, r2, r3
   16310:	ldrb	r2, [fp, #-38]	; 0xffffffda
   16314:	strb	r2, [r3]
   16318:	ldr	r3, [fp, #-20]	; 0xffffffec
   1631c:	add	r3, r3, #1
   16320:	str	r3, [fp, #-20]	; 0xffffffec
   16324:	ldr	r3, [fp, #-16]
   16328:	add	r3, r3, #1
   1632c:	str	r3, [fp, #-16]
   16330:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16334:	ldr	r3, [fp, #-16]
   16338:	add	r3, r2, r3
   1633c:	ldrb	r3, [r3]
   16340:	strb	r3, [fp, #-38]	; 0xffffffda
   16344:	b	16058 <__assert_fail@plt+0x4f4c>
   16348:	nop	{0}
   1634c:	b	16524 <__assert_fail@plt+0x5418>
   16350:	nop	{0}
   16354:	b	16384 <__assert_fail@plt+0x5278>
   16358:	nop	{0}
   1635c:	b	16384 <__assert_fail@plt+0x5278>
   16360:	nop	{0}
   16364:	b	16384 <__assert_fail@plt+0x5278>
   16368:	nop	{0}
   1636c:	b	16384 <__assert_fail@plt+0x5278>
   16370:	nop	{0}
   16374:	b	16384 <__assert_fail@plt+0x5278>
   16378:	nop	{0}
   1637c:	b	16384 <__assert_fail@plt+0x5278>
   16380:	nop	{0}
   16384:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   16388:	eor	r3, r3, #1
   1638c:	uxtb	r3, r3
   16390:	cmp	r3, #0
   16394:	bne	163a4 <__assert_fail@plt+0x5298>
   16398:	ldr	r3, [fp, #4]
   1639c:	cmp	r3, #2
   163a0:	bne	163b8 <__assert_fail@plt+0x52ac>
   163a4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   163a8:	eor	r3, r3, #1
   163ac:	uxtb	r3, r3
   163b0:	cmp	r3, #0
   163b4:	bne	163f8 <__assert_fail@plt+0x52ec>
   163b8:	ldr	r3, [fp, #12]
   163bc:	cmp	r3, #0
   163c0:	beq	163f8 <__assert_fail@plt+0x52ec>
   163c4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   163c8:	lsr	r3, r3, #5
   163cc:	uxtb	r3, r3
   163d0:	lsl	r3, r3, #2
   163d4:	ldr	r2, [fp, #12]
   163d8:	add	r3, r2, r3
   163dc:	ldr	r2, [r3]
   163e0:	ldrb	r3, [fp, #-38]	; 0xffffffda
   163e4:	and	r3, r3, #31
   163e8:	lsr	r3, r2, r3
   163ec:	and	r3, r3, #1
   163f0:	cmp	r3, #0
   163f4:	bne	1640c <__assert_fail@plt+0x5300>
   163f8:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   163fc:	eor	r3, r3, #1
   16400:	uxtb	r3, r3
   16404:	cmp	r3, #0
   16408:	bne	16520 <__assert_fail@plt+0x5414>
   1640c:	nop	{0}
   16410:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16414:	cmp	r3, #0
   16418:	bne	167f0 <__assert_fail@plt+0x56e4>
   1641c:	mov	r3, #1
   16420:	strb	r3, [fp, #-41]	; 0xffffffd7
   16424:	ldr	r3, [fp, #4]
   16428:	cmp	r3, #2
   1642c:	bne	164dc <__assert_fail@plt+0x53d0>
   16430:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   16434:	eor	r3, r3, #1
   16438:	uxtb	r3, r3
   1643c:	cmp	r3, #0
   16440:	beq	164dc <__assert_fail@plt+0x53d0>
   16444:	ldr	r2, [fp, #-20]	; 0xffffffec
   16448:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1644c:	cmp	r2, r3
   16450:	bcs	16468 <__assert_fail@plt+0x535c>
   16454:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16458:	ldr	r3, [fp, #-20]	; 0xffffffec
   1645c:	add	r3, r2, r3
   16460:	mov	r2, #39	; 0x27
   16464:	strb	r2, [r3]
   16468:	ldr	r3, [fp, #-20]	; 0xffffffec
   1646c:	add	r3, r3, #1
   16470:	str	r3, [fp, #-20]	; 0xffffffec
   16474:	ldr	r2, [fp, #-20]	; 0xffffffec
   16478:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1647c:	cmp	r2, r3
   16480:	bcs	16498 <__assert_fail@plt+0x538c>
   16484:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16488:	ldr	r3, [fp, #-20]	; 0xffffffec
   1648c:	add	r3, r2, r3
   16490:	mov	r2, #36	; 0x24
   16494:	strb	r2, [r3]
   16498:	ldr	r3, [fp, #-20]	; 0xffffffec
   1649c:	add	r3, r3, #1
   164a0:	str	r3, [fp, #-20]	; 0xffffffec
   164a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   164a8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   164ac:	cmp	r2, r3
   164b0:	bcs	164c8 <__assert_fail@plt+0x53bc>
   164b4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   164b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   164bc:	add	r3, r2, r3
   164c0:	mov	r2, #39	; 0x27
   164c4:	strb	r2, [r3]
   164c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   164cc:	add	r3, r3, #1
   164d0:	str	r3, [fp, #-20]	; 0xffffffec
   164d4:	mov	r3, #1
   164d8:	strb	r3, [fp, #-35]	; 0xffffffdd
   164dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   164e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   164e4:	cmp	r2, r3
   164e8:	bcs	16500 <__assert_fail@plt+0x53f4>
   164ec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   164f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   164f4:	add	r3, r2, r3
   164f8:	mov	r2, #92	; 0x5c
   164fc:	strb	r2, [r3]
   16500:	ldr	r3, [fp, #-20]	; 0xffffffec
   16504:	add	r3, r3, #1
   16508:	str	r3, [fp, #-20]	; 0xffffffec
   1650c:	b	16524 <__assert_fail@plt+0x5418>
   16510:	nop	{0}
   16514:	b	16524 <__assert_fail@plt+0x5418>
   16518:	nop	{0}
   1651c:	b	16524 <__assert_fail@plt+0x5418>
   16520:	nop	{0}
   16524:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   16528:	cmp	r3, #0
   1652c:	beq	165ac <__assert_fail@plt+0x54a0>
   16530:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   16534:	eor	r3, r3, #1
   16538:	uxtb	r3, r3
   1653c:	cmp	r3, #0
   16540:	beq	165ac <__assert_fail@plt+0x54a0>
   16544:	ldr	r2, [fp, #-20]	; 0xffffffec
   16548:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1654c:	cmp	r2, r3
   16550:	bcs	16568 <__assert_fail@plt+0x545c>
   16554:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16558:	ldr	r3, [fp, #-20]	; 0xffffffec
   1655c:	add	r3, r2, r3
   16560:	mov	r2, #39	; 0x27
   16564:	strb	r2, [r3]
   16568:	ldr	r3, [fp, #-20]	; 0xffffffec
   1656c:	add	r3, r3, #1
   16570:	str	r3, [fp, #-20]	; 0xffffffec
   16574:	ldr	r2, [fp, #-20]	; 0xffffffec
   16578:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1657c:	cmp	r2, r3
   16580:	bcs	16598 <__assert_fail@plt+0x548c>
   16584:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16588:	ldr	r3, [fp, #-20]	; 0xffffffec
   1658c:	add	r3, r2, r3
   16590:	mov	r2, #39	; 0x27
   16594:	strb	r2, [r3]
   16598:	ldr	r3, [fp, #-20]	; 0xffffffec
   1659c:	add	r3, r3, #1
   165a0:	str	r3, [fp, #-20]	; 0xffffffec
   165a4:	mov	r3, #0
   165a8:	strb	r3, [fp, #-35]	; 0xffffffdd
   165ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   165b0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   165b4:	cmp	r2, r3
   165b8:	bcs	165d0 <__assert_fail@plt+0x54c4>
   165bc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   165c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   165c4:	add	r3, r2, r3
   165c8:	ldrb	r2, [fp, #-38]	; 0xffffffda
   165cc:	strb	r2, [r3]
   165d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   165d4:	add	r3, r3, #1
   165d8:	str	r3, [fp, #-20]	; 0xffffffec
   165dc:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   165e0:	eor	r3, r3, #1
   165e4:	uxtb	r3, r3
   165e8:	cmp	r3, #0
   165ec:	beq	165f8 <__assert_fail@plt+0x54ec>
   165f0:	mov	r3, #0
   165f4:	strb	r3, [fp, #-37]	; 0xffffffdb
   165f8:	ldr	r3, [fp, #-16]
   165fc:	add	r3, r3, #1
   16600:	str	r3, [fp, #-16]
   16604:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16608:	cmn	r3, #1
   1660c:	bne	16634 <__assert_fail@plt+0x5528>
   16610:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16614:	ldr	r3, [fp, #-16]
   16618:	add	r3, r2, r3
   1661c:	ldrb	r3, [r3]
   16620:	cmp	r3, #0
   16624:	movne	r3, #1
   16628:	moveq	r3, #0
   1662c:	uxtb	r3, r3
   16630:	b	1664c <__assert_fail@plt+0x5540>
   16634:	ldr	r2, [fp, #-16]
   16638:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1663c:	cmp	r2, r3
   16640:	movne	r3, #1
   16644:	moveq	r3, #0
   16648:	uxtb	r3, r3
   1664c:	cmp	r3, #0
   16650:	bne	1546c <__assert_fail@plt+0x4360>
   16654:	ldr	r3, [fp, #-20]	; 0xffffffec
   16658:	cmp	r3, #0
   1665c:	bne	16678 <__assert_fail@plt+0x556c>
   16660:	ldr	r3, [fp, #4]
   16664:	cmp	r3, #2
   16668:	bne	16678 <__assert_fail@plt+0x556c>
   1666c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16670:	cmp	r3, #0
   16674:	bne	167f8 <__assert_fail@plt+0x56ec>
   16678:	ldr	r3, [fp, #4]
   1667c:	cmp	r3, #2
   16680:	bne	16720 <__assert_fail@plt+0x5614>
   16684:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16688:	eor	r3, r3, #1
   1668c:	uxtb	r3, r3
   16690:	cmp	r3, #0
   16694:	beq	16720 <__assert_fail@plt+0x5614>
   16698:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   1669c:	cmp	r3, #0
   166a0:	beq	16720 <__assert_fail@plt+0x5614>
   166a4:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   166a8:	cmp	r3, #0
   166ac:	beq	166f4 <__assert_fail@plt+0x55e8>
   166b0:	ldr	r3, [fp, #20]
   166b4:	str	r3, [sp, #16]
   166b8:	ldr	r3, [fp, #16]
   166bc:	str	r3, [sp, #12]
   166c0:	ldr	r3, [fp, #12]
   166c4:	str	r3, [sp, #8]
   166c8:	ldr	r3, [fp, #8]
   166cc:	str	r3, [sp, #4]
   166d0:	mov	r3, #5
   166d4:	str	r3, [sp]
   166d8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   166dc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   166e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166e4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   166e8:	bl	151a4 <__assert_fail@plt+0x4098>
   166ec:	mov	r3, r0
   166f0:	b	16860 <__assert_fail@plt+0x5754>
   166f4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   166f8:	cmp	r3, #0
   166fc:	bne	16720 <__assert_fail@plt+0x5614>
   16700:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16704:	cmp	r3, #0
   16708:	beq	16720 <__assert_fail@plt+0x5614>
   1670c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16710:	str	r3, [fp, #-92]	; 0xffffffa4
   16714:	mov	r3, #0
   16718:	str	r3, [fp, #-20]	; 0xffffffec
   1671c:	b	15238 <__assert_fail@plt+0x412c>
   16720:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16724:	cmp	r3, #0
   16728:	beq	16794 <__assert_fail@plt+0x5688>
   1672c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16730:	eor	r3, r3, #1
   16734:	uxtb	r3, r3
   16738:	cmp	r3, #0
   1673c:	beq	16794 <__assert_fail@plt+0x5688>
   16740:	b	16784 <__assert_fail@plt+0x5678>
   16744:	ldr	r2, [fp, #-20]	; 0xffffffec
   16748:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1674c:	cmp	r2, r3
   16750:	bcs	1676c <__assert_fail@plt+0x5660>
   16754:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16758:	ldr	r3, [fp, #-20]	; 0xffffffec
   1675c:	add	r3, r2, r3
   16760:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16764:	ldrb	r2, [r2]
   16768:	strb	r2, [r3]
   1676c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16770:	add	r3, r3, #1
   16774:	str	r3, [fp, #-20]	; 0xffffffec
   16778:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1677c:	add	r3, r3, #1
   16780:	str	r3, [fp, #-28]	; 0xffffffe4
   16784:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16788:	ldrb	r3, [r3]
   1678c:	cmp	r3, #0
   16790:	bne	16744 <__assert_fail@plt+0x5638>
   16794:	ldr	r2, [fp, #-20]	; 0xffffffec
   16798:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1679c:	cmp	r2, r3
   167a0:	bcs	167b8 <__assert_fail@plt+0x56ac>
   167a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   167a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   167ac:	add	r3, r2, r3
   167b0:	mov	r2, #0
   167b4:	strb	r2, [r3]
   167b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   167bc:	b	16860 <__assert_fail@plt+0x5754>
   167c0:	nop	{0}
   167c4:	b	167fc <__assert_fail@plt+0x56f0>
   167c8:	nop	{0}
   167cc:	b	167fc <__assert_fail@plt+0x56f0>
   167d0:	nop	{0}
   167d4:	b	167fc <__assert_fail@plt+0x56f0>
   167d8:	nop	{0}
   167dc:	b	167fc <__assert_fail@plt+0x56f0>
   167e0:	nop	{0}
   167e4:	b	167fc <__assert_fail@plt+0x56f0>
   167e8:	nop	{0}
   167ec:	b	167fc <__assert_fail@plt+0x56f0>
   167f0:	nop	{0}
   167f4:	b	167fc <__assert_fail@plt+0x56f0>
   167f8:	nop	{0}
   167fc:	ldr	r3, [fp, #4]
   16800:	cmp	r3, #2
   16804:	bne	1681c <__assert_fail@plt+0x5710>
   16808:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1680c:	cmp	r3, #0
   16810:	beq	1681c <__assert_fail@plt+0x5710>
   16814:	mov	r3, #4
   16818:	str	r3, [fp, #4]
   1681c:	ldr	r3, [fp, #8]
   16820:	bic	r3, r3, #2
   16824:	ldr	r2, [fp, #20]
   16828:	str	r2, [sp, #16]
   1682c:	ldr	r2, [fp, #16]
   16830:	str	r2, [sp, #12]
   16834:	mov	r2, #0
   16838:	str	r2, [sp, #8]
   1683c:	str	r3, [sp, #4]
   16840:	ldr	r3, [fp, #4]
   16844:	str	r3, [sp]
   16848:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1684c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16850:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16854:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16858:	bl	151a4 <__assert_fail@plt+0x4098>
   1685c:	mov	r3, r0
   16860:	mov	r0, r3
   16864:	sub	sp, fp, #8
   16868:	ldr	r4, [sp]
   1686c:	ldr	fp, [sp, #4]
   16870:	add	sp, sp, #8
   16874:	pop	{pc}		; (ldr pc, [sp], #4)
   16878:	str	fp, [sp, #-8]!
   1687c:	str	lr, [sp, #4]
   16880:	add	fp, sp, #4
   16884:	sub	sp, sp, #56	; 0x38
   16888:	str	r0, [fp, #-24]	; 0xffffffe8
   1688c:	str	r1, [fp, #-28]	; 0xffffffe4
   16890:	str	r2, [fp, #-32]	; 0xffffffe0
   16894:	str	r3, [fp, #-36]	; 0xffffffdc
   16898:	ldr	r3, [fp, #4]
   1689c:	cmp	r3, #0
   168a0:	beq	168ac <__assert_fail@plt+0x57a0>
   168a4:	ldr	r3, [fp, #4]
   168a8:	b	168b4 <__assert_fail@plt+0x57a8>
   168ac:	movw	r3, #53772	; 0xd20c
   168b0:	movt	r3, #2
   168b4:	str	r3, [fp, #-8]
   168b8:	bl	11010 <__errno_location@plt>
   168bc:	mov	r3, r0
   168c0:	ldr	r3, [r3]
   168c4:	str	r3, [fp, #-12]
   168c8:	ldr	r3, [fp, #-8]
   168cc:	ldr	r3, [r3]
   168d0:	ldr	r2, [fp, #-8]
   168d4:	ldr	r2, [r2, #4]
   168d8:	ldr	r1, [fp, #-8]
   168dc:	add	r1, r1, #8
   168e0:	ldr	r0, [fp, #-8]
   168e4:	ldr	r0, [r0, #40]	; 0x28
   168e8:	ldr	ip, [fp, #-8]
   168ec:	ldr	ip, [ip, #44]	; 0x2c
   168f0:	str	ip, [sp, #16]
   168f4:	str	r0, [sp, #12]
   168f8:	str	r1, [sp, #8]
   168fc:	str	r2, [sp, #4]
   16900:	str	r3, [sp]
   16904:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16908:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1690c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16914:	bl	151a4 <__assert_fail@plt+0x4098>
   16918:	str	r0, [fp, #-16]
   1691c:	bl	11010 <__errno_location@plt>
   16920:	mov	r2, r0
   16924:	ldr	r3, [fp, #-12]
   16928:	str	r3, [r2]
   1692c:	ldr	r3, [fp, #-16]
   16930:	mov	r0, r3
   16934:	sub	sp, fp, #4
   16938:	ldr	fp, [sp]
   1693c:	add	sp, sp, #4
   16940:	pop	{pc}		; (ldr pc, [sp], #4)
   16944:	str	fp, [sp, #-8]!
   16948:	str	lr, [sp, #4]
   1694c:	add	fp, sp, #4
   16950:	sub	sp, sp, #16
   16954:	str	r0, [fp, #-8]
   16958:	str	r1, [fp, #-12]
   1695c:	str	r2, [fp, #-16]
   16960:	ldr	r3, [fp, #-16]
   16964:	mov	r2, #0
   16968:	ldr	r1, [fp, #-12]
   1696c:	ldr	r0, [fp, #-8]
   16970:	bl	1698c <__assert_fail@plt+0x5880>
   16974:	mov	r3, r0
   16978:	mov	r0, r3
   1697c:	sub	sp, fp, #4
   16980:	ldr	fp, [sp]
   16984:	add	sp, sp, #4
   16988:	pop	{pc}		; (ldr pc, [sp], #4)
   1698c:	str	fp, [sp, #-8]!
   16990:	str	lr, [sp, #4]
   16994:	add	fp, sp, #4
   16998:	sub	sp, sp, #64	; 0x40
   1699c:	str	r0, [fp, #-32]	; 0xffffffe0
   169a0:	str	r1, [fp, #-36]	; 0xffffffdc
   169a4:	str	r2, [fp, #-40]	; 0xffffffd8
   169a8:	str	r3, [fp, #-44]	; 0xffffffd4
   169ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   169b0:	cmp	r3, #0
   169b4:	beq	169c0 <__assert_fail@plt+0x58b4>
   169b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   169bc:	b	169c8 <__assert_fail@plt+0x58bc>
   169c0:	movw	r3, #53772	; 0xd20c
   169c4:	movt	r3, #2
   169c8:	str	r3, [fp, #-8]
   169cc:	bl	11010 <__errno_location@plt>
   169d0:	mov	r3, r0
   169d4:	ldr	r3, [r3]
   169d8:	str	r3, [fp, #-12]
   169dc:	ldr	r3, [fp, #-8]
   169e0:	ldr	r3, [r3, #4]
   169e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   169e8:	cmp	r2, #0
   169ec:	moveq	r2, #1
   169f0:	movne	r2, #0
   169f4:	uxtb	r2, r2
   169f8:	orr	r3, r3, r2
   169fc:	str	r3, [fp, #-16]
   16a00:	ldr	r3, [fp, #-8]
   16a04:	ldr	r3, [r3]
   16a08:	ldr	r2, [fp, #-8]
   16a0c:	add	r2, r2, #8
   16a10:	ldr	r1, [fp, #-8]
   16a14:	ldr	r1, [r1, #40]	; 0x28
   16a18:	ldr	r0, [fp, #-8]
   16a1c:	ldr	r0, [r0, #44]	; 0x2c
   16a20:	str	r0, [sp, #16]
   16a24:	str	r1, [sp, #12]
   16a28:	str	r2, [sp, #8]
   16a2c:	ldr	r2, [fp, #-16]
   16a30:	str	r2, [sp, #4]
   16a34:	str	r3, [sp]
   16a38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16a3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16a40:	mov	r1, #0
   16a44:	mov	r0, #0
   16a48:	bl	151a4 <__assert_fail@plt+0x4098>
   16a4c:	mov	r3, r0
   16a50:	add	r3, r3, #1
   16a54:	str	r3, [fp, #-20]	; 0xffffffec
   16a58:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a5c:	bl	18070 <__assert_fail@plt+0x6f64>
   16a60:	mov	r3, r0
   16a64:	str	r3, [fp, #-24]	; 0xffffffe8
   16a68:	ldr	r3, [fp, #-8]
   16a6c:	ldr	r3, [r3]
   16a70:	ldr	r2, [fp, #-8]
   16a74:	add	r2, r2, #8
   16a78:	ldr	r1, [fp, #-8]
   16a7c:	ldr	r1, [r1, #40]	; 0x28
   16a80:	ldr	r0, [fp, #-8]
   16a84:	ldr	r0, [r0, #44]	; 0x2c
   16a88:	str	r0, [sp, #16]
   16a8c:	str	r1, [sp, #12]
   16a90:	str	r2, [sp, #8]
   16a94:	ldr	r2, [fp, #-16]
   16a98:	str	r2, [sp, #4]
   16a9c:	str	r3, [sp]
   16aa0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16aa4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16aa8:	ldr	r1, [fp, #-20]	; 0xffffffec
   16aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ab0:	bl	151a4 <__assert_fail@plt+0x4098>
   16ab4:	bl	11010 <__errno_location@plt>
   16ab8:	mov	r2, r0
   16abc:	ldr	r3, [fp, #-12]
   16ac0:	str	r3, [r2]
   16ac4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16ac8:	cmp	r3, #0
   16acc:	beq	16ae0 <__assert_fail@plt+0x59d4>
   16ad0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16ad4:	sub	r2, r3, #1
   16ad8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16adc:	str	r2, [r3]
   16ae0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16ae4:	mov	r0, r3
   16ae8:	sub	sp, fp, #4
   16aec:	ldr	fp, [sp]
   16af0:	add	sp, sp, #4
   16af4:	pop	{pc}		; (ldr pc, [sp], #4)
   16af8:	str	fp, [sp, #-8]!
   16afc:	str	lr, [sp, #4]
   16b00:	add	fp, sp, #4
   16b04:	sub	sp, sp, #8
   16b08:	movw	r3, #53552	; 0xd130
   16b0c:	movt	r3, #2
   16b10:	ldr	r3, [r3]
   16b14:	str	r3, [fp, #-12]
   16b18:	mov	r3, #1
   16b1c:	str	r3, [fp, #-8]
   16b20:	b	16b4c <__assert_fail@plt+0x5a40>
   16b24:	ldr	r3, [fp, #-8]
   16b28:	lsl	r3, r3, #3
   16b2c:	ldr	r2, [fp, #-12]
   16b30:	add	r3, r2, r3
   16b34:	ldr	r3, [r3, #4]
   16b38:	mov	r0, r3
   16b3c:	bl	146d8 <__assert_fail@plt+0x35cc>
   16b40:	ldr	r3, [fp, #-8]
   16b44:	add	r3, r3, #1
   16b48:	str	r3, [fp, #-8]
   16b4c:	movw	r3, #53540	; 0xd124
   16b50:	movt	r3, #2
   16b54:	ldr	r3, [r3]
   16b58:	ldr	r2, [fp, #-8]
   16b5c:	cmp	r2, r3
   16b60:	blt	16b24 <__assert_fail@plt+0x5a18>
   16b64:	ldr	r3, [fp, #-12]
   16b68:	ldr	r2, [r3, #4]
   16b6c:	movw	r3, #53820	; 0xd23c
   16b70:	movt	r3, #2
   16b74:	cmp	r2, r3
   16b78:	beq	16bb0 <__assert_fail@plt+0x5aa4>
   16b7c:	ldr	r3, [fp, #-12]
   16b80:	ldr	r3, [r3, #4]
   16b84:	mov	r0, r3
   16b88:	bl	146d8 <__assert_fail@plt+0x35cc>
   16b8c:	movw	r3, #53544	; 0xd128
   16b90:	movt	r3, #2
   16b94:	mov	r2, #256	; 0x100
   16b98:	str	r2, [r3]
   16b9c:	movw	r3, #53544	; 0xd128
   16ba0:	movt	r3, #2
   16ba4:	movw	r2, #53820	; 0xd23c
   16ba8:	movt	r2, #2
   16bac:	str	r2, [r3, #4]
   16bb0:	ldr	r2, [fp, #-12]
   16bb4:	movw	r3, #53544	; 0xd128
   16bb8:	movt	r3, #2
   16bbc:	cmp	r2, r3
   16bc0:	beq	16be0 <__assert_fail@plt+0x5ad4>
   16bc4:	ldr	r0, [fp, #-12]
   16bc8:	bl	146d8 <__assert_fail@plt+0x35cc>
   16bcc:	movw	r3, #53552	; 0xd130
   16bd0:	movt	r3, #2
   16bd4:	movw	r2, #53544	; 0xd128
   16bd8:	movt	r2, #2
   16bdc:	str	r2, [r3]
   16be0:	movw	r3, #53540	; 0xd124
   16be4:	movt	r3, #2
   16be8:	mov	r2, #1
   16bec:	str	r2, [r3]
   16bf0:	nop	{0}
   16bf4:	sub	sp, fp, #4
   16bf8:	ldr	fp, [sp]
   16bfc:	add	sp, sp, #4
   16c00:	pop	{pc}		; (ldr pc, [sp], #4)
   16c04:	str	fp, [sp, #-8]!
   16c08:	str	lr, [sp, #4]
   16c0c:	add	fp, sp, #4
   16c10:	sub	sp, sp, #80	; 0x50
   16c14:	str	r0, [fp, #-48]	; 0xffffffd0
   16c18:	str	r1, [fp, #-52]	; 0xffffffcc
   16c1c:	str	r2, [fp, #-56]	; 0xffffffc8
   16c20:	str	r3, [fp, #-60]	; 0xffffffc4
   16c24:	bl	11010 <__errno_location@plt>
   16c28:	mov	r3, r0
   16c2c:	ldr	r3, [r3]
   16c30:	str	r3, [fp, #-16]
   16c34:	movw	r3, #53552	; 0xd130
   16c38:	movt	r3, #2
   16c3c:	ldr	r3, [r3]
   16c40:	str	r3, [fp, #-8]
   16c44:	mvn	r3, #-2147483648	; 0x80000000
   16c48:	str	r3, [fp, #-20]	; 0xffffffec
   16c4c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16c50:	cmp	r3, #0
   16c54:	blt	16c68 <__assert_fail@plt+0x5b5c>
   16c58:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16c5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c60:	cmp	r2, r3
   16c64:	blt	16c6c <__assert_fail@plt+0x5b60>
   16c68:	bl	110dc <abort@plt>
   16c6c:	movw	r3, #53540	; 0xd124
   16c70:	movt	r3, #2
   16c74:	ldr	r3, [r3]
   16c78:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16c7c:	cmp	r2, r3
   16c80:	blt	16d78 <__assert_fail@plt+0x5c6c>
   16c84:	ldr	r2, [fp, #-8]
   16c88:	movw	r3, #53544	; 0xd128
   16c8c:	movt	r3, #2
   16c90:	cmp	r2, r3
   16c94:	moveq	r3, #1
   16c98:	movne	r3, #0
   16c9c:	strb	r3, [fp, #-21]	; 0xffffffeb
   16ca0:	movw	r3, #53540	; 0xd124
   16ca4:	movt	r3, #2
   16ca8:	ldr	r3, [r3]
   16cac:	str	r3, [fp, #-40]	; 0xffffffd8
   16cb0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   16cb4:	cmp	r3, #0
   16cb8:	beq	16cc4 <__assert_fail@plt+0x5bb8>
   16cbc:	mov	r0, #0
   16cc0:	b	16cc8 <__assert_fail@plt+0x5bbc>
   16cc4:	ldr	r0, [fp, #-8]
   16cc8:	movw	r3, #53540	; 0xd124
   16ccc:	movt	r3, #2
   16cd0:	ldr	r3, [r3]
   16cd4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16cd8:	sub	r3, r2, r3
   16cdc:	add	r2, r3, #1
   16ce0:	sub	r1, fp, #40	; 0x28
   16ce4:	mov	r3, #8
   16ce8:	str	r3, [sp]
   16cec:	ldr	r3, [fp, #-20]	; 0xffffffec
   16cf0:	bl	183d0 <__assert_fail@plt+0x72c4>
   16cf4:	str	r0, [fp, #-8]
   16cf8:	movw	r3, #53552	; 0xd130
   16cfc:	movt	r3, #2
   16d00:	ldr	r2, [fp, #-8]
   16d04:	str	r2, [r3]
   16d08:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   16d0c:	cmp	r3, #0
   16d10:	beq	16d2c <__assert_fail@plt+0x5c20>
   16d14:	ldr	r2, [fp, #-8]
   16d18:	movw	r3, #53544	; 0xd128
   16d1c:	movt	r3, #2
   16d20:	mov	r1, r2
   16d24:	ldrd	r2, [r3]
   16d28:	strd	r2, [r1]
   16d2c:	movw	r3, #53540	; 0xd124
   16d30:	movt	r3, #2
   16d34:	ldr	r3, [r3]
   16d38:	lsl	r3, r3, #3
   16d3c:	ldr	r2, [fp, #-8]
   16d40:	add	r0, r2, r3
   16d44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16d48:	movw	r3, #53540	; 0xd124
   16d4c:	movt	r3, #2
   16d50:	ldr	r3, [r3]
   16d54:	sub	r3, r2, r3
   16d58:	lsl	r3, r3, #3
   16d5c:	mov	r2, r3
   16d60:	mov	r1, #0
   16d64:	bl	11028 <memset@plt>
   16d68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16d6c:	movw	r3, #53540	; 0xd124
   16d70:	movt	r3, #2
   16d74:	str	r2, [r3]
   16d78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16d7c:	lsl	r3, r3, #3
   16d80:	ldr	r2, [fp, #-8]
   16d84:	add	r3, r2, r3
   16d88:	ldr	r3, [r3]
   16d8c:	str	r3, [fp, #-28]	; 0xffffffe4
   16d90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16d94:	lsl	r3, r3, #3
   16d98:	ldr	r2, [fp, #-8]
   16d9c:	add	r3, r2, r3
   16da0:	ldr	r3, [r3, #4]
   16da4:	str	r3, [fp, #-12]
   16da8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16dac:	ldr	r3, [r3, #4]
   16db0:	orr	r3, r3, #1
   16db4:	str	r3, [fp, #-32]	; 0xffffffe0
   16db8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16dbc:	ldr	r3, [r3]
   16dc0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16dc4:	add	r2, r2, #8
   16dc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16dcc:	ldr	r1, [r1, #40]	; 0x28
   16dd0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16dd4:	ldr	r0, [r0, #44]	; 0x2c
   16dd8:	str	r0, [sp, #16]
   16ddc:	str	r1, [sp, #12]
   16de0:	str	r2, [sp, #8]
   16de4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16de8:	str	r2, [sp, #4]
   16dec:	str	r3, [sp]
   16df0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16df4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16df8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16dfc:	ldr	r0, [fp, #-12]
   16e00:	bl	151a4 <__assert_fail@plt+0x4098>
   16e04:	str	r0, [fp, #-36]	; 0xffffffdc
   16e08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16e0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16e10:	cmp	r2, r3
   16e14:	bhi	16ecc <__assert_fail@plt+0x5dc0>
   16e18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16e1c:	add	r3, r3, #1
   16e20:	str	r3, [fp, #-28]	; 0xffffffe4
   16e24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16e28:	lsl	r3, r3, #3
   16e2c:	ldr	r2, [fp, #-8]
   16e30:	add	r3, r2, r3
   16e34:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16e38:	str	r2, [r3]
   16e3c:	ldr	r2, [fp, #-12]
   16e40:	movw	r3, #53820	; 0xd23c
   16e44:	movt	r3, #2
   16e48:	cmp	r2, r3
   16e4c:	beq	16e58 <__assert_fail@plt+0x5d4c>
   16e50:	ldr	r0, [fp, #-12]
   16e54:	bl	146d8 <__assert_fail@plt+0x35cc>
   16e58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16e5c:	bl	18070 <__assert_fail@plt+0x6f64>
   16e60:	mov	r3, r0
   16e64:	str	r3, [fp, #-12]
   16e68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16e6c:	lsl	r3, r3, #3
   16e70:	ldr	r2, [fp, #-8]
   16e74:	add	r3, r2, r3
   16e78:	ldr	r2, [fp, #-12]
   16e7c:	str	r2, [r3, #4]
   16e80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16e84:	ldr	r3, [r3]
   16e88:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16e8c:	add	r2, r2, #8
   16e90:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16e94:	ldr	r1, [r1, #40]	; 0x28
   16e98:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16e9c:	ldr	r0, [r0, #44]	; 0x2c
   16ea0:	str	r0, [sp, #16]
   16ea4:	str	r1, [sp, #12]
   16ea8:	str	r2, [sp, #8]
   16eac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16eb0:	str	r2, [sp, #4]
   16eb4:	str	r3, [sp]
   16eb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16ebc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16ec0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16ec4:	ldr	r0, [fp, #-12]
   16ec8:	bl	151a4 <__assert_fail@plt+0x4098>
   16ecc:	bl	11010 <__errno_location@plt>
   16ed0:	mov	r2, r0
   16ed4:	ldr	r3, [fp, #-16]
   16ed8:	str	r3, [r2]
   16edc:	ldr	r3, [fp, #-12]
   16ee0:	mov	r0, r3
   16ee4:	sub	sp, fp, #4
   16ee8:	ldr	fp, [sp]
   16eec:	add	sp, sp, #4
   16ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ef4:	str	fp, [sp, #-8]!
   16ef8:	str	lr, [sp, #4]
   16efc:	add	fp, sp, #4
   16f00:	sub	sp, sp, #8
   16f04:	str	r0, [fp, #-8]
   16f08:	str	r1, [fp, #-12]
   16f0c:	movw	r3, #53772	; 0xd20c
   16f10:	movt	r3, #2
   16f14:	mvn	r2, #0
   16f18:	ldr	r1, [fp, #-12]
   16f1c:	ldr	r0, [fp, #-8]
   16f20:	bl	16c04 <__assert_fail@plt+0x5af8>
   16f24:	mov	r3, r0
   16f28:	mov	r0, r3
   16f2c:	sub	sp, fp, #4
   16f30:	ldr	fp, [sp]
   16f34:	add	sp, sp, #4
   16f38:	pop	{pc}		; (ldr pc, [sp], #4)
   16f3c:	str	fp, [sp, #-8]!
   16f40:	str	lr, [sp, #4]
   16f44:	add	fp, sp, #4
   16f48:	sub	sp, sp, #16
   16f4c:	str	r0, [fp, #-8]
   16f50:	str	r1, [fp, #-12]
   16f54:	str	r2, [fp, #-16]
   16f58:	movw	r3, #53772	; 0xd20c
   16f5c:	movt	r3, #2
   16f60:	ldr	r2, [fp, #-16]
   16f64:	ldr	r1, [fp, #-12]
   16f68:	ldr	r0, [fp, #-8]
   16f6c:	bl	16c04 <__assert_fail@plt+0x5af8>
   16f70:	mov	r3, r0
   16f74:	mov	r0, r3
   16f78:	sub	sp, fp, #4
   16f7c:	ldr	fp, [sp]
   16f80:	add	sp, sp, #4
   16f84:	pop	{pc}		; (ldr pc, [sp], #4)
   16f88:	str	fp, [sp, #-8]!
   16f8c:	str	lr, [sp, #4]
   16f90:	add	fp, sp, #4
   16f94:	sub	sp, sp, #8
   16f98:	str	r0, [fp, #-8]
   16f9c:	ldr	r1, [fp, #-8]
   16fa0:	mov	r0, #0
   16fa4:	bl	16ef4 <__assert_fail@plt+0x5de8>
   16fa8:	mov	r3, r0
   16fac:	mov	r0, r3
   16fb0:	sub	sp, fp, #4
   16fb4:	ldr	fp, [sp]
   16fb8:	add	sp, sp, #4
   16fbc:	pop	{pc}		; (ldr pc, [sp], #4)
   16fc0:	str	fp, [sp, #-8]!
   16fc4:	str	lr, [sp, #4]
   16fc8:	add	fp, sp, #4
   16fcc:	sub	sp, sp, #8
   16fd0:	str	r0, [fp, #-8]
   16fd4:	str	r1, [fp, #-12]
   16fd8:	ldr	r2, [fp, #-12]
   16fdc:	ldr	r1, [fp, #-8]
   16fe0:	mov	r0, #0
   16fe4:	bl	16f3c <__assert_fail@plt+0x5e30>
   16fe8:	mov	r3, r0
   16fec:	mov	r0, r3
   16ff0:	sub	sp, fp, #4
   16ff4:	ldr	fp, [sp]
   16ff8:	add	sp, sp, #4
   16ffc:	pop	{pc}		; (ldr pc, [sp], #4)
   17000:	str	fp, [sp, #-8]!
   17004:	str	lr, [sp, #4]
   17008:	add	fp, sp, #4
   1700c:	sub	sp, sp, #64	; 0x40
   17010:	str	r0, [fp, #-56]	; 0xffffffc8
   17014:	str	r1, [fp, #-60]	; 0xffffffc4
   17018:	str	r2, [fp, #-64]	; 0xffffffc0
   1701c:	sub	r3, fp, #52	; 0x34
   17020:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17024:	mov	r0, r3
   17028:	bl	15000 <__assert_fail@plt+0x3ef4>
   1702c:	sub	r3, fp, #52	; 0x34
   17030:	mvn	r2, #0
   17034:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17038:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1703c:	bl	16c04 <__assert_fail@plt+0x5af8>
   17040:	mov	r3, r0
   17044:	mov	r0, r3
   17048:	sub	sp, fp, #4
   1704c:	ldr	fp, [sp]
   17050:	add	sp, sp, #4
   17054:	pop	{pc}		; (ldr pc, [sp], #4)
   17058:	str	fp, [sp, #-8]!
   1705c:	str	lr, [sp, #4]
   17060:	add	fp, sp, #4
   17064:	sub	sp, sp, #64	; 0x40
   17068:	str	r0, [fp, #-56]	; 0xffffffc8
   1706c:	str	r1, [fp, #-60]	; 0xffffffc4
   17070:	str	r2, [fp, #-64]	; 0xffffffc0
   17074:	str	r3, [fp, #-68]	; 0xffffffbc
   17078:	sub	r3, fp, #52	; 0x34
   1707c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17080:	mov	r0, r3
   17084:	bl	15000 <__assert_fail@plt+0x3ef4>
   17088:	sub	r3, fp, #52	; 0x34
   1708c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17090:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17094:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17098:	bl	16c04 <__assert_fail@plt+0x5af8>
   1709c:	mov	r3, r0
   170a0:	mov	r0, r3
   170a4:	sub	sp, fp, #4
   170a8:	ldr	fp, [sp]
   170ac:	add	sp, sp, #4
   170b0:	pop	{pc}		; (ldr pc, [sp], #4)
   170b4:	str	fp, [sp, #-8]!
   170b8:	str	lr, [sp, #4]
   170bc:	add	fp, sp, #4
   170c0:	sub	sp, sp, #8
   170c4:	str	r0, [fp, #-8]
   170c8:	str	r1, [fp, #-12]
   170cc:	ldr	r2, [fp, #-12]
   170d0:	ldr	r1, [fp, #-8]
   170d4:	mov	r0, #0
   170d8:	bl	17000 <__assert_fail@plt+0x5ef4>
   170dc:	mov	r3, r0
   170e0:	mov	r0, r3
   170e4:	sub	sp, fp, #4
   170e8:	ldr	fp, [sp]
   170ec:	add	sp, sp, #4
   170f0:	pop	{pc}		; (ldr pc, [sp], #4)
   170f4:	str	fp, [sp, #-8]!
   170f8:	str	lr, [sp, #4]
   170fc:	add	fp, sp, #4
   17100:	sub	sp, sp, #16
   17104:	str	r0, [fp, #-8]
   17108:	str	r1, [fp, #-12]
   1710c:	str	r2, [fp, #-16]
   17110:	ldr	r3, [fp, #-16]
   17114:	ldr	r2, [fp, #-12]
   17118:	ldr	r1, [fp, #-8]
   1711c:	mov	r0, #0
   17120:	bl	17058 <__assert_fail@plt+0x5f4c>
   17124:	mov	r3, r0
   17128:	mov	r0, r3
   1712c:	sub	sp, fp, #4
   17130:	ldr	fp, [sp]
   17134:	add	sp, sp, #4
   17138:	pop	{pc}		; (ldr pc, [sp], #4)
   1713c:	str	fp, [sp, #-8]!
   17140:	str	lr, [sp, #4]
   17144:	add	fp, sp, #4
   17148:	sub	sp, sp, #64	; 0x40
   1714c:	str	r0, [fp, #-56]	; 0xffffffc8
   17150:	str	r1, [fp, #-60]	; 0xffffffc4
   17154:	mov	r3, r2
   17158:	strb	r3, [fp, #-61]	; 0xffffffc3
   1715c:	movw	r2, #53772	; 0xd20c
   17160:	movt	r2, #2
   17164:	sub	r3, fp, #52	; 0x34
   17168:	ldrd	r0, [r2]
   1716c:	strd	r0, [r3]
   17170:	ldrd	r0, [r2, #8]
   17174:	strd	r0, [r3, #8]
   17178:	ldrd	r0, [r2, #16]
   1717c:	strd	r0, [r3, #16]
   17180:	ldrd	r0, [r2, #24]
   17184:	strd	r0, [r3, #24]
   17188:	ldrd	r0, [r2, #32]
   1718c:	strd	r0, [r3, #32]
   17190:	ldrd	r0, [r2, #40]	; 0x28
   17194:	strd	r0, [r3, #40]	; 0x28
   17198:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   1719c:	sub	r3, fp, #52	; 0x34
   171a0:	mov	r2, #1
   171a4:	mov	r0, r3
   171a8:	bl	14e60 <__assert_fail@plt+0x3d54>
   171ac:	sub	r3, fp, #52	; 0x34
   171b0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   171b4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   171b8:	mov	r0, #0
   171bc:	bl	16c04 <__assert_fail@plt+0x5af8>
   171c0:	mov	r3, r0
   171c4:	mov	r0, r3
   171c8:	sub	sp, fp, #4
   171cc:	ldr	fp, [sp]
   171d0:	add	sp, sp, #4
   171d4:	pop	{pc}		; (ldr pc, [sp], #4)
   171d8:	str	fp, [sp, #-8]!
   171dc:	str	lr, [sp, #4]
   171e0:	add	fp, sp, #4
   171e4:	sub	sp, sp, #8
   171e8:	str	r0, [fp, #-8]
   171ec:	mov	r3, r1
   171f0:	strb	r3, [fp, #-9]
   171f4:	ldrb	r3, [fp, #-9]
   171f8:	mov	r2, r3
   171fc:	mvn	r1, #0
   17200:	ldr	r0, [fp, #-8]
   17204:	bl	1713c <__assert_fail@plt+0x6030>
   17208:	mov	r3, r0
   1720c:	mov	r0, r3
   17210:	sub	sp, fp, #4
   17214:	ldr	fp, [sp]
   17218:	add	sp, sp, #4
   1721c:	pop	{pc}		; (ldr pc, [sp], #4)
   17220:	str	fp, [sp, #-8]!
   17224:	str	lr, [sp, #4]
   17228:	add	fp, sp, #4
   1722c:	sub	sp, sp, #8
   17230:	str	r0, [fp, #-8]
   17234:	mov	r1, #58	; 0x3a
   17238:	ldr	r0, [fp, #-8]
   1723c:	bl	171d8 <__assert_fail@plt+0x60cc>
   17240:	mov	r3, r0
   17244:	mov	r0, r3
   17248:	sub	sp, fp, #4
   1724c:	ldr	fp, [sp]
   17250:	add	sp, sp, #4
   17254:	pop	{pc}		; (ldr pc, [sp], #4)
   17258:	str	fp, [sp, #-8]!
   1725c:	str	lr, [sp, #4]
   17260:	add	fp, sp, #4
   17264:	sub	sp, sp, #8
   17268:	str	r0, [fp, #-8]
   1726c:	str	r1, [fp, #-12]
   17270:	mov	r2, #58	; 0x3a
   17274:	ldr	r1, [fp, #-12]
   17278:	ldr	r0, [fp, #-8]
   1727c:	bl	1713c <__assert_fail@plt+0x6030>
   17280:	mov	r3, r0
   17284:	mov	r0, r3
   17288:	sub	sp, fp, #4
   1728c:	ldr	fp, [sp]
   17290:	add	sp, sp, #4
   17294:	pop	{pc}		; (ldr pc, [sp], #4)
   17298:	str	fp, [sp, #-8]!
   1729c:	str	lr, [sp, #4]
   172a0:	add	fp, sp, #4
   172a4:	sub	sp, sp, #112	; 0x70
   172a8:	str	r0, [fp, #-56]	; 0xffffffc8
   172ac:	str	r1, [fp, #-60]	; 0xffffffc4
   172b0:	str	r2, [fp, #-64]	; 0xffffffc0
   172b4:	sub	r3, fp, #116	; 0x74
   172b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   172bc:	mov	r0, r3
   172c0:	bl	15000 <__assert_fail@plt+0x3ef4>
   172c4:	sub	r3, fp, #52	; 0x34
   172c8:	sub	r2, fp, #116	; 0x74
   172cc:	ldrd	r0, [r2]
   172d0:	strd	r0, [r3]
   172d4:	ldrd	r0, [r2, #8]
   172d8:	strd	r0, [r3, #8]
   172dc:	ldrd	r0, [r2, #16]
   172e0:	strd	r0, [r3, #16]
   172e4:	ldrd	r0, [r2, #24]
   172e8:	strd	r0, [r3, #24]
   172ec:	ldrd	r0, [r2, #32]
   172f0:	strd	r0, [r3, #32]
   172f4:	ldrd	r0, [r2, #40]	; 0x28
   172f8:	strd	r0, [r3, #40]	; 0x28
   172fc:	sub	r3, fp, #52	; 0x34
   17300:	mov	r2, #1
   17304:	mov	r1, #58	; 0x3a
   17308:	mov	r0, r3
   1730c:	bl	14e60 <__assert_fail@plt+0x3d54>
   17310:	sub	r3, fp, #52	; 0x34
   17314:	mvn	r2, #0
   17318:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1731c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17320:	bl	16c04 <__assert_fail@plt+0x5af8>
   17324:	mov	r3, r0
   17328:	mov	r0, r3
   1732c:	sub	sp, fp, #4
   17330:	ldr	fp, [sp]
   17334:	add	sp, sp, #4
   17338:	pop	{pc}		; (ldr pc, [sp], #4)
   1733c:	str	fp, [sp, #-8]!
   17340:	str	lr, [sp, #4]
   17344:	add	fp, sp, #4
   17348:	sub	sp, sp, #24
   1734c:	str	r0, [fp, #-8]
   17350:	str	r1, [fp, #-12]
   17354:	str	r2, [fp, #-16]
   17358:	str	r3, [fp, #-20]	; 0xffffffec
   1735c:	mvn	r3, #0
   17360:	str	r3, [sp]
   17364:	ldr	r3, [fp, #-20]	; 0xffffffec
   17368:	ldr	r2, [fp, #-16]
   1736c:	ldr	r1, [fp, #-12]
   17370:	ldr	r0, [fp, #-8]
   17374:	bl	17390 <__assert_fail@plt+0x6284>
   17378:	mov	r3, r0
   1737c:	mov	r0, r3
   17380:	sub	sp, fp, #4
   17384:	ldr	fp, [sp]
   17388:	add	sp, sp, #4
   1738c:	pop	{pc}		; (ldr pc, [sp], #4)
   17390:	str	fp, [sp, #-8]!
   17394:	str	lr, [sp, #4]
   17398:	add	fp, sp, #4
   1739c:	sub	sp, sp, #64	; 0x40
   173a0:	str	r0, [fp, #-56]	; 0xffffffc8
   173a4:	str	r1, [fp, #-60]	; 0xffffffc4
   173a8:	str	r2, [fp, #-64]	; 0xffffffc0
   173ac:	str	r3, [fp, #-68]	; 0xffffffbc
   173b0:	movw	r2, #53772	; 0xd20c
   173b4:	movt	r2, #2
   173b8:	sub	r3, fp, #52	; 0x34
   173bc:	ldrd	r0, [r2]
   173c0:	strd	r0, [r3]
   173c4:	ldrd	r0, [r2, #8]
   173c8:	strd	r0, [r3, #8]
   173cc:	ldrd	r0, [r2, #16]
   173d0:	strd	r0, [r3, #16]
   173d4:	ldrd	r0, [r2, #24]
   173d8:	strd	r0, [r3, #24]
   173dc:	ldrd	r0, [r2, #32]
   173e0:	strd	r0, [r3, #32]
   173e4:	ldrd	r0, [r2, #40]	; 0x28
   173e8:	strd	r0, [r3, #40]	; 0x28
   173ec:	sub	r3, fp, #52	; 0x34
   173f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   173f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   173f8:	mov	r0, r3
   173fc:	bl	14f78 <__assert_fail@plt+0x3e6c>
   17400:	sub	r3, fp, #52	; 0x34
   17404:	ldr	r2, [fp, #4]
   17408:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1740c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17410:	bl	16c04 <__assert_fail@plt+0x5af8>
   17414:	mov	r3, r0
   17418:	mov	r0, r3
   1741c:	sub	sp, fp, #4
   17420:	ldr	fp, [sp]
   17424:	add	sp, sp, #4
   17428:	pop	{pc}		; (ldr pc, [sp], #4)
   1742c:	str	fp, [sp, #-8]!
   17430:	str	lr, [sp, #4]
   17434:	add	fp, sp, #4
   17438:	sub	sp, sp, #16
   1743c:	str	r0, [fp, #-8]
   17440:	str	r1, [fp, #-12]
   17444:	str	r2, [fp, #-16]
   17448:	ldr	r3, [fp, #-16]
   1744c:	ldr	r2, [fp, #-12]
   17450:	ldr	r1, [fp, #-8]
   17454:	mov	r0, #0
   17458:	bl	1733c <__assert_fail@plt+0x6230>
   1745c:	mov	r3, r0
   17460:	mov	r0, r3
   17464:	sub	sp, fp, #4
   17468:	ldr	fp, [sp]
   1746c:	add	sp, sp, #4
   17470:	pop	{pc}		; (ldr pc, [sp], #4)
   17474:	str	fp, [sp, #-8]!
   17478:	str	lr, [sp, #4]
   1747c:	add	fp, sp, #4
   17480:	sub	sp, sp, #24
   17484:	str	r0, [fp, #-8]
   17488:	str	r1, [fp, #-12]
   1748c:	str	r2, [fp, #-16]
   17490:	str	r3, [fp, #-20]	; 0xffffffec
   17494:	ldr	r3, [fp, #-20]	; 0xffffffec
   17498:	str	r3, [sp]
   1749c:	ldr	r3, [fp, #-16]
   174a0:	ldr	r2, [fp, #-12]
   174a4:	ldr	r1, [fp, #-8]
   174a8:	mov	r0, #0
   174ac:	bl	17390 <__assert_fail@plt+0x6284>
   174b0:	mov	r3, r0
   174b4:	mov	r0, r3
   174b8:	sub	sp, fp, #4
   174bc:	ldr	fp, [sp]
   174c0:	add	sp, sp, #4
   174c4:	pop	{pc}		; (ldr pc, [sp], #4)
   174c8:	str	fp, [sp, #-8]!
   174cc:	str	lr, [sp, #4]
   174d0:	add	fp, sp, #4
   174d4:	sub	sp, sp, #16
   174d8:	str	r0, [fp, #-8]
   174dc:	str	r1, [fp, #-12]
   174e0:	str	r2, [fp, #-16]
   174e4:	movw	r3, #53556	; 0xd134
   174e8:	movt	r3, #2
   174ec:	ldr	r2, [fp, #-16]
   174f0:	ldr	r1, [fp, #-12]
   174f4:	ldr	r0, [fp, #-8]
   174f8:	bl	16c04 <__assert_fail@plt+0x5af8>
   174fc:	mov	r3, r0
   17500:	mov	r0, r3
   17504:	sub	sp, fp, #4
   17508:	ldr	fp, [sp]
   1750c:	add	sp, sp, #4
   17510:	pop	{pc}		; (ldr pc, [sp], #4)
   17514:	str	fp, [sp, #-8]!
   17518:	str	lr, [sp, #4]
   1751c:	add	fp, sp, #4
   17520:	sub	sp, sp, #8
   17524:	str	r0, [fp, #-8]
   17528:	str	r1, [fp, #-12]
   1752c:	ldr	r2, [fp, #-12]
   17530:	ldr	r1, [fp, #-8]
   17534:	mov	r0, #0
   17538:	bl	174c8 <__assert_fail@plt+0x63bc>
   1753c:	mov	r3, r0
   17540:	mov	r0, r3
   17544:	sub	sp, fp, #4
   17548:	ldr	fp, [sp]
   1754c:	add	sp, sp, #4
   17550:	pop	{pc}		; (ldr pc, [sp], #4)
   17554:	str	fp, [sp, #-8]!
   17558:	str	lr, [sp, #4]
   1755c:	add	fp, sp, #4
   17560:	sub	sp, sp, #8
   17564:	str	r0, [fp, #-8]
   17568:	str	r1, [fp, #-12]
   1756c:	mvn	r2, #0
   17570:	ldr	r1, [fp, #-12]
   17574:	ldr	r0, [fp, #-8]
   17578:	bl	174c8 <__assert_fail@plt+0x63bc>
   1757c:	mov	r3, r0
   17580:	mov	r0, r3
   17584:	sub	sp, fp, #4
   17588:	ldr	fp, [sp]
   1758c:	add	sp, sp, #4
   17590:	pop	{pc}		; (ldr pc, [sp], #4)
   17594:	str	fp, [sp, #-8]!
   17598:	str	lr, [sp, #4]
   1759c:	add	fp, sp, #4
   175a0:	sub	sp, sp, #8
   175a4:	str	r0, [fp, #-8]
   175a8:	ldr	r1, [fp, #-8]
   175ac:	mov	r0, #0
   175b0:	bl	17554 <__assert_fail@plt+0x6448>
   175b4:	mov	r3, r0
   175b8:	mov	r0, r3
   175bc:	sub	sp, fp, #4
   175c0:	ldr	fp, [sp]
   175c4:	add	sp, sp, #4
   175c8:	pop	{pc}		; (ldr pc, [sp], #4)
   175cc:	str	fp, [sp, #-8]!
   175d0:	str	lr, [sp, #4]
   175d4:	add	fp, sp, #4
   175d8:	sub	sp, sp, #16
   175dc:	str	r0, [fp, #-16]
   175e0:	mov	r1, #0
   175e4:	ldr	r0, [fp, #-16]
   175e8:	bl	1107c <setlocale@plt>
   175ec:	str	r0, [fp, #-8]
   175f0:	ldr	r3, [fp, #-8]
   175f4:	mov	r0, r3
   175f8:	sub	sp, fp, #4
   175fc:	ldr	fp, [sp]
   17600:	add	sp, sp, #4
   17604:	pop	{pc}		; (ldr pc, [sp], #4)
   17608:	str	fp, [sp, #-8]!
   1760c:	str	lr, [sp, #4]
   17610:	add	fp, sp, #4
   17614:	sub	sp, sp, #24
   17618:	str	r0, [fp, #-16]
   1761c:	str	r1, [fp, #-20]	; 0xffffffec
   17620:	str	r2, [fp, #-24]	; 0xffffffe8
   17624:	ldr	r0, [fp, #-16]
   17628:	bl	175cc <__assert_fail@plt+0x64c0>
   1762c:	str	r0, [fp, #-8]
   17630:	ldr	r3, [fp, #-8]
   17634:	cmp	r3, #0
   17638:	bne	1765c <__assert_fail@plt+0x6550>
   1763c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17640:	cmp	r3, #0
   17644:	beq	17654 <__assert_fail@plt+0x6548>
   17648:	ldr	r3, [fp, #-20]	; 0xffffffec
   1764c:	mov	r2, #0
   17650:	strb	r2, [r3]
   17654:	mov	r3, #22
   17658:	b	176d8 <__assert_fail@plt+0x65cc>
   1765c:	ldr	r0, [fp, #-8]
   17660:	bl	10fec <strlen@plt>
   17664:	str	r0, [fp, #-12]
   17668:	ldr	r2, [fp, #-12]
   1766c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17670:	cmp	r2, r3
   17674:	bcs	17698 <__assert_fail@plt+0x658c>
   17678:	ldr	r3, [fp, #-12]
   1767c:	add	r3, r3, #1
   17680:	mov	r2, r3
   17684:	ldr	r1, [fp, #-8]
   17688:	ldr	r0, [fp, #-20]	; 0xffffffec
   1768c:	bl	10eb4 <memcpy@plt>
   17690:	mov	r3, #0
   17694:	b	176d8 <__assert_fail@plt+0x65cc>
   17698:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1769c:	cmp	r3, #0
   176a0:	beq	176d4 <__assert_fail@plt+0x65c8>
   176a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   176a8:	sub	r3, r3, #1
   176ac:	mov	r2, r3
   176b0:	ldr	r1, [fp, #-8]
   176b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   176b8:	bl	10eb4 <memcpy@plt>
   176bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   176c0:	sub	r3, r3, #1
   176c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   176c8:	add	r3, r2, r3
   176cc:	mov	r2, #0
   176d0:	strb	r2, [r3]
   176d4:	mov	r3, #34	; 0x22
   176d8:	mov	r0, r3
   176dc:	sub	sp, fp, #4
   176e0:	ldr	fp, [sp]
   176e4:	add	sp, sp, #4
   176e8:	pop	{pc}		; (ldr pc, [sp], #4)
   176ec:	str	fp, [sp, #-8]!
   176f0:	str	lr, [sp, #4]
   176f4:	add	fp, sp, #4
   176f8:	sub	sp, sp, #16
   176fc:	str	r0, [fp, #-8]
   17700:	str	r1, [fp, #-12]
   17704:	str	r2, [fp, #-16]
   17708:	ldr	r2, [fp, #-16]
   1770c:	ldr	r1, [fp, #-12]
   17710:	ldr	r0, [fp, #-8]
   17714:	bl	17608 <__assert_fail@plt+0x64fc>
   17718:	mov	r3, r0
   1771c:	mov	r0, r3
   17720:	sub	sp, fp, #4
   17724:	ldr	fp, [sp]
   17728:	add	sp, sp, #4
   1772c:	pop	{pc}		; (ldr pc, [sp], #4)
   17730:	str	fp, [sp, #-8]!
   17734:	str	lr, [sp, #4]
   17738:	add	fp, sp, #4
   1773c:	sub	sp, sp, #8
   17740:	str	r0, [fp, #-8]
   17744:	ldr	r0, [fp, #-8]
   17748:	bl	175cc <__assert_fail@plt+0x64c0>
   1774c:	mov	r3, r0
   17750:	mov	r0, r3
   17754:	sub	sp, fp, #4
   17758:	ldr	fp, [sp]
   1775c:	add	sp, sp, #4
   17760:	pop	{pc}		; (ldr pc, [sp], #4)
   17764:	str	fp, [sp, #-8]!
   17768:	str	lr, [sp, #4]
   1776c:	add	fp, sp, #4
   17770:	sub	sp, sp, #8
   17774:	str	r0, [fp, #-8]
   17778:	mov	r2, #3
   1777c:	mov	r1, #0
   17780:	ldr	r0, [fp, #-8]
   17784:	bl	19e58 <__assert_fail@plt+0x8d4c>
   17788:	mov	r3, r0
   1778c:	mov	r0, r3
   17790:	sub	sp, fp, #4
   17794:	ldr	fp, [sp]
   17798:	add	sp, sp, #4
   1779c:	pop	{pc}		; (ldr pc, [sp], #4)
   177a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   177a4:	strd	r6, [sp, #8]
   177a8:	str	fp, [sp, #16]
   177ac:	str	lr, [sp, #20]
   177b0:	add	fp, sp, #20
   177b4:	sub	sp, sp, #48	; 0x30
   177b8:	str	r0, [fp, #-24]	; 0xffffffe8
   177bc:	str	r1, [fp, #-28]	; 0xffffffe4
   177c0:	str	r2, [fp, #-32]	; 0xffffffe0
   177c4:	str	r3, [fp, #-36]	; 0xffffffdc
   177c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   177cc:	cmp	r3, #0
   177d0:	beq	177f8 <__assert_fail@plt+0x66ec>
   177d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   177d8:	str	r3, [sp]
   177dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   177e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   177e4:	movw	r1, #48420	; 0xbd24
   177e8:	movt	r1, #1
   177ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177f0:	bl	11004 <fprintf@plt>
   177f4:	b	17810 <__assert_fail@plt+0x6704>
   177f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   177fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17800:	movw	r1, #48432	; 0xbd30
   17804:	movt	r1, #1
   17808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1780c:	bl	11004 <fprintf@plt>
   17810:	movw	r0, #48440	; 0xbd38
   17814:	movt	r0, #1
   17818:	bl	10fd4 <gettext@plt>
   1781c:	mov	r2, r0
   17820:	movw	r3, #2022	; 0x7e6
   17824:	movw	r1, #49224	; 0xc048
   17828:	movt	r1, #1
   1782c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17830:	bl	11004 <fprintf@plt>
   17834:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17838:	mov	r0, #10
   1783c:	bl	10ee4 <fputc_unlocked@plt>
   17840:	movw	r0, #48444	; 0xbd3c
   17844:	movt	r0, #1
   17848:	bl	10fd4 <gettext@plt>
   1784c:	mov	r3, r0
   17850:	movw	r2, #48616	; 0xbde8
   17854:	movt	r2, #1
   17858:	mov	r1, r3
   1785c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17860:	bl	11004 <fprintf@plt>
   17864:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17868:	mov	r0, #10
   1786c:	bl	10ee4 <fputc_unlocked@plt>
   17870:	ldr	r3, [fp, #8]
   17874:	cmp	r3, #9
   17878:	ldrls	pc, [pc, r3, lsl #2]
   1787c:	b	17c5c <__assert_fail@plt+0x6b50>
   17880:	andeq	r7, r1, r8, lsl #26
   17884:	andeq	r7, r1, r8, lsr #17
   17888:	ldrdeq	r7, [r1], -r0
   1788c:	andeq	r7, r1, r0, lsl #18
   17890:	andeq	r7, r1, r4, asr #18
   17894:	andeq	r7, r1, r0, lsr #19
   17898:	andeq	r7, r1, ip, lsl #20
   1789c:	andeq	r7, r1, r8, lsl #21
   178a0:	andeq	r7, r1, r4, lsl fp
   178a4:			; <UNDEFINED> instruction: 0x00017bb0
   178a8:	movw	r0, #48652	; 0xbe0c
   178ac:	movt	r0, #1
   178b0:	bl	10fd4 <gettext@plt>
   178b4:	mov	r1, r0
   178b8:	ldr	r3, [fp, #4]
   178bc:	ldr	r3, [r3]
   178c0:	mov	r2, r3
   178c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178c8:	bl	11004 <fprintf@plt>
   178cc:	b	17d0c <__assert_fail@plt+0x6c00>
   178d0:	movw	r0, #48668	; 0xbe1c
   178d4:	movt	r0, #1
   178d8:	bl	10fd4 <gettext@plt>
   178dc:	mov	r1, r0
   178e0:	ldr	r3, [fp, #4]
   178e4:	ldr	r2, [r3]
   178e8:	ldr	r3, [fp, #4]
   178ec:	add	r3, r3, #4
   178f0:	ldr	r3, [r3]
   178f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178f8:	bl	11004 <fprintf@plt>
   178fc:	b	17d0c <__assert_fail@plt+0x6c00>
   17900:	movw	r0, #48692	; 0xbe34
   17904:	movt	r0, #1
   17908:	bl	10fd4 <gettext@plt>
   1790c:	ldr	r3, [fp, #4]
   17910:	ldr	r2, [r3]
   17914:	ldr	r3, [fp, #4]
   17918:	add	r3, r3, #4
   1791c:	ldr	r1, [r3]
   17920:	ldr	r3, [fp, #4]
   17924:	add	r3, r3, #8
   17928:	ldr	r3, [r3]
   1792c:	str	r3, [sp]
   17930:	mov	r3, r1
   17934:	mov	r1, r0
   17938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1793c:	bl	11004 <fprintf@plt>
   17940:	b	17d0c <__assert_fail@plt+0x6c00>
   17944:	movw	r0, #48720	; 0xbe50
   17948:	movt	r0, #1
   1794c:	bl	10fd4 <gettext@plt>
   17950:	mov	ip, r0
   17954:	ldr	r3, [fp, #4]
   17958:	ldr	r1, [r3]
   1795c:	ldr	r3, [fp, #4]
   17960:	add	r3, r3, #4
   17964:	ldr	r0, [r3]
   17968:	ldr	r3, [fp, #4]
   1796c:	add	r3, r3, #8
   17970:	ldr	r3, [r3]
   17974:	ldr	r2, [fp, #4]
   17978:	add	r2, r2, #12
   1797c:	ldr	r2, [r2]
   17980:	str	r2, [sp, #4]
   17984:	str	r3, [sp]
   17988:	mov	r3, r0
   1798c:	mov	r2, r1
   17990:	mov	r1, ip
   17994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17998:	bl	11004 <fprintf@plt>
   1799c:	b	17d0c <__assert_fail@plt+0x6c00>
   179a0:	movw	r0, #48752	; 0xbe70
   179a4:	movt	r0, #1
   179a8:	bl	10fd4 <gettext@plt>
   179ac:	mov	lr, r0
   179b0:	ldr	r3, [fp, #4]
   179b4:	ldr	r0, [r3]
   179b8:	ldr	r3, [fp, #4]
   179bc:	add	r3, r3, #4
   179c0:	ldr	ip, [r3]
   179c4:	ldr	r3, [fp, #4]
   179c8:	add	r3, r3, #8
   179cc:	ldr	r3, [r3]
   179d0:	ldr	r2, [fp, #4]
   179d4:	add	r2, r2, #12
   179d8:	ldr	r2, [r2]
   179dc:	ldr	r1, [fp, #4]
   179e0:	add	r1, r1, #16
   179e4:	ldr	r1, [r1]
   179e8:	str	r1, [sp, #8]
   179ec:	str	r2, [sp, #4]
   179f0:	str	r3, [sp]
   179f4:	mov	r3, ip
   179f8:	mov	r2, r0
   179fc:	mov	r1, lr
   17a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a04:	bl	11004 <fprintf@plt>
   17a08:	b	17d0c <__assert_fail@plt+0x6c00>
   17a0c:	movw	r0, #48788	; 0xbe94
   17a10:	movt	r0, #1
   17a14:	bl	10fd4 <gettext@plt>
   17a18:	mov	r4, r0
   17a1c:	ldr	r3, [fp, #4]
   17a20:	ldr	ip, [r3]
   17a24:	ldr	r3, [fp, #4]
   17a28:	add	r3, r3, #4
   17a2c:	ldr	lr, [r3]
   17a30:	ldr	r3, [fp, #4]
   17a34:	add	r3, r3, #8
   17a38:	ldr	r3, [r3]
   17a3c:	ldr	r2, [fp, #4]
   17a40:	add	r2, r2, #12
   17a44:	ldr	r2, [r2]
   17a48:	ldr	r1, [fp, #4]
   17a4c:	add	r1, r1, #16
   17a50:	ldr	r1, [r1]
   17a54:	ldr	r0, [fp, #4]
   17a58:	add	r0, r0, #20
   17a5c:	ldr	r0, [r0]
   17a60:	str	r0, [sp, #12]
   17a64:	str	r1, [sp, #8]
   17a68:	str	r2, [sp, #4]
   17a6c:	str	r3, [sp]
   17a70:	mov	r3, lr
   17a74:	mov	r2, ip
   17a78:	mov	r1, r4
   17a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a80:	bl	11004 <fprintf@plt>
   17a84:	b	17d0c <__assert_fail@plt+0x6c00>
   17a88:	movw	r0, #48828	; 0xbebc
   17a8c:	movt	r0, #1
   17a90:	bl	10fd4 <gettext@plt>
   17a94:	mov	r5, r0
   17a98:	ldr	r3, [fp, #4]
   17a9c:	ldr	lr, [r3]
   17aa0:	ldr	r3, [fp, #4]
   17aa4:	add	r3, r3, #4
   17aa8:	ldr	r4, [r3]
   17aac:	ldr	r3, [fp, #4]
   17ab0:	add	r3, r3, #8
   17ab4:	ldr	r3, [r3]
   17ab8:	ldr	r2, [fp, #4]
   17abc:	add	r2, r2, #12
   17ac0:	ldr	r2, [r2]
   17ac4:	ldr	r1, [fp, #4]
   17ac8:	add	r1, r1, #16
   17acc:	ldr	r1, [r1]
   17ad0:	ldr	r0, [fp, #4]
   17ad4:	add	r0, r0, #20
   17ad8:	ldr	r0, [r0]
   17adc:	ldr	ip, [fp, #4]
   17ae0:	add	ip, ip, #24
   17ae4:	ldr	ip, [ip]
   17ae8:	str	ip, [sp, #16]
   17aec:	str	r0, [sp, #12]
   17af0:	str	r1, [sp, #8]
   17af4:	str	r2, [sp, #4]
   17af8:	str	r3, [sp]
   17afc:	mov	r3, r4
   17b00:	mov	r2, lr
   17b04:	mov	r1, r5
   17b08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b0c:	bl	11004 <fprintf@plt>
   17b10:	b	17d0c <__assert_fail@plt+0x6c00>
   17b14:	movw	r0, #48872	; 0xbee8
   17b18:	movt	r0, #1
   17b1c:	bl	10fd4 <gettext@plt>
   17b20:	mov	r6, r0
   17b24:	ldr	r3, [fp, #4]
   17b28:	ldr	r4, [r3]
   17b2c:	ldr	r3, [fp, #4]
   17b30:	add	r3, r3, #4
   17b34:	ldr	r5, [r3]
   17b38:	ldr	r3, [fp, #4]
   17b3c:	add	r3, r3, #8
   17b40:	ldr	r3, [r3]
   17b44:	ldr	r2, [fp, #4]
   17b48:	add	r2, r2, #12
   17b4c:	ldr	r2, [r2]
   17b50:	ldr	r1, [fp, #4]
   17b54:	add	r1, r1, #16
   17b58:	ldr	r1, [r1]
   17b5c:	ldr	r0, [fp, #4]
   17b60:	add	r0, r0, #20
   17b64:	ldr	r0, [r0]
   17b68:	ldr	ip, [fp, #4]
   17b6c:	add	ip, ip, #24
   17b70:	ldr	ip, [ip]
   17b74:	ldr	lr, [fp, #4]
   17b78:	add	lr, lr, #28
   17b7c:	ldr	lr, [lr]
   17b80:	str	lr, [sp, #20]
   17b84:	str	ip, [sp, #16]
   17b88:	str	r0, [sp, #12]
   17b8c:	str	r1, [sp, #8]
   17b90:	str	r2, [sp, #4]
   17b94:	str	r3, [sp]
   17b98:	mov	r3, r5
   17b9c:	mov	r2, r4
   17ba0:	mov	r1, r6
   17ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ba8:	bl	11004 <fprintf@plt>
   17bac:	b	17d0c <__assert_fail@plt+0x6c00>
   17bb0:	movw	r0, #48920	; 0xbf18
   17bb4:	movt	r0, #1
   17bb8:	bl	10fd4 <gettext@plt>
   17bbc:	mov	r7, r0
   17bc0:	ldr	r3, [fp, #4]
   17bc4:	ldr	r5, [r3]
   17bc8:	ldr	r3, [fp, #4]
   17bcc:	add	r3, r3, #4
   17bd0:	ldr	r6, [r3]
   17bd4:	ldr	r3, [fp, #4]
   17bd8:	add	r3, r3, #8
   17bdc:	ldr	r3, [r3]
   17be0:	ldr	r2, [fp, #4]
   17be4:	add	r2, r2, #12
   17be8:	ldr	r2, [r2]
   17bec:	ldr	r1, [fp, #4]
   17bf0:	add	r1, r1, #16
   17bf4:	ldr	r1, [r1]
   17bf8:	ldr	r0, [fp, #4]
   17bfc:	add	r0, r0, #20
   17c00:	ldr	r0, [r0]
   17c04:	ldr	ip, [fp, #4]
   17c08:	add	ip, ip, #24
   17c0c:	ldr	ip, [ip]
   17c10:	ldr	lr, [fp, #4]
   17c14:	add	lr, lr, #28
   17c18:	ldr	lr, [lr]
   17c1c:	ldr	r4, [fp, #4]
   17c20:	add	r4, r4, #32
   17c24:	ldr	r4, [r4]
   17c28:	str	r4, [sp, #24]
   17c2c:	str	lr, [sp, #20]
   17c30:	str	ip, [sp, #16]
   17c34:	str	r0, [sp, #12]
   17c38:	str	r1, [sp, #8]
   17c3c:	str	r2, [sp, #4]
   17c40:	str	r3, [sp]
   17c44:	mov	r3, r6
   17c48:	mov	r2, r5
   17c4c:	mov	r1, r7
   17c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c54:	bl	11004 <fprintf@plt>
   17c58:	b	17d0c <__assert_fail@plt+0x6c00>
   17c5c:	movw	r0, #48972	; 0xbf4c
   17c60:	movt	r0, #1
   17c64:	bl	10fd4 <gettext@plt>
   17c68:	mov	r7, r0
   17c6c:	ldr	r3, [fp, #4]
   17c70:	ldr	r5, [r3]
   17c74:	ldr	r3, [fp, #4]
   17c78:	add	r3, r3, #4
   17c7c:	ldr	r6, [r3]
   17c80:	ldr	r3, [fp, #4]
   17c84:	add	r3, r3, #8
   17c88:	ldr	r3, [r3]
   17c8c:	ldr	r2, [fp, #4]
   17c90:	add	r2, r2, #12
   17c94:	ldr	r2, [r2]
   17c98:	ldr	r1, [fp, #4]
   17c9c:	add	r1, r1, #16
   17ca0:	ldr	r1, [r1]
   17ca4:	ldr	r0, [fp, #4]
   17ca8:	add	r0, r0, #20
   17cac:	ldr	r0, [r0]
   17cb0:	ldr	ip, [fp, #4]
   17cb4:	add	ip, ip, #24
   17cb8:	ldr	ip, [ip]
   17cbc:	ldr	lr, [fp, #4]
   17cc0:	add	lr, lr, #28
   17cc4:	ldr	lr, [lr]
   17cc8:	ldr	r4, [fp, #4]
   17ccc:	add	r4, r4, #32
   17cd0:	ldr	r4, [r4]
   17cd4:	str	r4, [sp, #24]
   17cd8:	str	lr, [sp, #20]
   17cdc:	str	ip, [sp, #16]
   17ce0:	str	r0, [sp, #12]
   17ce4:	str	r1, [sp, #8]
   17ce8:	str	r2, [sp, #4]
   17cec:	str	r3, [sp]
   17cf0:	mov	r3, r6
   17cf4:	mov	r2, r5
   17cf8:	mov	r1, r7
   17cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d00:	bl	11004 <fprintf@plt>
   17d04:	b	17d0c <__assert_fail@plt+0x6c00>
   17d08:	nop	{0}
   17d0c:	nop	{0}
   17d10:	sub	sp, fp, #20
   17d14:	ldrd	r4, [sp]
   17d18:	ldrd	r6, [sp, #8]
   17d1c:	ldr	fp, [sp, #16]
   17d20:	add	sp, sp, #20
   17d24:	pop	{pc}		; (ldr pc, [sp], #4)
   17d28:	str	fp, [sp, #-8]!
   17d2c:	str	lr, [sp, #4]
   17d30:	add	fp, sp, #4
   17d34:	sub	sp, sp, #32
   17d38:	str	r0, [fp, #-16]
   17d3c:	str	r1, [fp, #-20]	; 0xffffffec
   17d40:	str	r2, [fp, #-24]	; 0xffffffe8
   17d44:	str	r3, [fp, #-28]	; 0xffffffe4
   17d48:	mov	r3, #0
   17d4c:	str	r3, [fp, #-8]
   17d50:	b	17d60 <__assert_fail@plt+0x6c54>
   17d54:	ldr	r3, [fp, #-8]
   17d58:	add	r3, r3, #1
   17d5c:	str	r3, [fp, #-8]
   17d60:	ldr	r3, [fp, #-8]
   17d64:	lsl	r3, r3, #2
   17d68:	ldr	r2, [fp, #4]
   17d6c:	add	r3, r2, r3
   17d70:	ldr	r3, [r3]
   17d74:	cmp	r3, #0
   17d78:	bne	17d54 <__assert_fail@plt+0x6c48>
   17d7c:	ldr	r3, [fp, #-8]
   17d80:	str	r3, [sp, #4]
   17d84:	ldr	r3, [fp, #4]
   17d88:	str	r3, [sp]
   17d8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17d90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17d94:	ldr	r1, [fp, #-20]	; 0xffffffec
   17d98:	ldr	r0, [fp, #-16]
   17d9c:	bl	177a0 <__assert_fail@plt+0x6694>
   17da0:	nop	{0}
   17da4:	sub	sp, fp, #4
   17da8:	ldr	fp, [sp]
   17dac:	add	sp, sp, #4
   17db0:	pop	{pc}		; (ldr pc, [sp], #4)
   17db4:	str	fp, [sp, #-8]!
   17db8:	str	lr, [sp, #4]
   17dbc:	add	fp, sp, #4
   17dc0:	sub	sp, sp, #72	; 0x48
   17dc4:	str	r0, [fp, #-56]	; 0xffffffc8
   17dc8:	str	r1, [fp, #-60]	; 0xffffffc4
   17dcc:	str	r2, [fp, #-64]	; 0xffffffc0
   17dd0:	str	r3, [fp, #-68]	; 0xffffffbc
   17dd4:	mov	r3, #0
   17dd8:	str	r3, [fp, #-8]
   17ddc:	b	17dec <__assert_fail@plt+0x6ce0>
   17de0:	ldr	r3, [fp, #-8]
   17de4:	add	r3, r3, #1
   17de8:	str	r3, [fp, #-8]
   17dec:	ldr	r3, [fp, #-8]
   17df0:	cmp	r3, #9
   17df4:	bhi	17e38 <__assert_fail@plt+0x6d2c>
   17df8:	ldr	r3, [fp, #4]
   17dfc:	add	r2, r3, #4
   17e00:	str	r2, [fp, #4]
   17e04:	ldr	r2, [r3]
   17e08:	ldr	r3, [fp, #-8]
   17e0c:	lsl	r3, r3, #2
   17e10:	sub	r1, fp, #4
   17e14:	add	r3, r1, r3
   17e18:	str	r2, [r3, #-44]	; 0xffffffd4
   17e1c:	ldr	r3, [fp, #-8]
   17e20:	lsl	r3, r3, #2
   17e24:	sub	r2, fp, #4
   17e28:	add	r3, r2, r3
   17e2c:	ldr	r3, [r3, #-44]	; 0xffffffd4
   17e30:	cmp	r3, #0
   17e34:	bne	17de0 <__assert_fail@plt+0x6cd4>
   17e38:	ldr	r3, [fp, #-8]
   17e3c:	str	r3, [sp, #4]
   17e40:	sub	r3, fp, #48	; 0x30
   17e44:	str	r3, [sp]
   17e48:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17e4c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17e50:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17e54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17e58:	bl	177a0 <__assert_fail@plt+0x6694>
   17e5c:	nop	{0}
   17e60:	sub	sp, fp, #4
   17e64:	ldr	fp, [sp]
   17e68:	add	sp, sp, #4
   17e6c:	pop	{pc}		; (ldr pc, [sp], #4)
   17e70:	push	{r3}		; (str r3, [sp, #-4]!)
   17e74:	str	fp, [sp, #-8]!
   17e78:	str	lr, [sp, #4]
   17e7c:	add	fp, sp, #4
   17e80:	sub	sp, sp, #36	; 0x24
   17e84:	str	r0, [fp, #-20]	; 0xffffffec
   17e88:	str	r1, [fp, #-24]	; 0xffffffe8
   17e8c:	str	r2, [fp, #-28]	; 0xffffffe4
   17e90:	add	r3, fp, #8
   17e94:	str	r3, [fp, #-12]
   17e98:	ldr	r3, [fp, #-12]
   17e9c:	str	r3, [sp]
   17ea0:	ldr	r3, [fp, #4]
   17ea4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17ea8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17eac:	ldr	r0, [fp, #-20]	; 0xffffffec
   17eb0:	bl	17db4 <__assert_fail@plt+0x6ca8>
   17eb4:	nop	{0}
   17eb8:	sub	sp, fp, #4
   17ebc:	ldr	fp, [sp]
   17ec0:	ldr	lr, [sp, #4]
   17ec4:	add	sp, sp, #8
   17ec8:	add	sp, sp, #4
   17ecc:	bx	lr
   17ed0:	str	fp, [sp, #-8]!
   17ed4:	str	lr, [sp, #4]
   17ed8:	add	fp, sp, #4
   17edc:	movw	r3, #53636	; 0xd184
   17ee0:	movt	r3, #2
   17ee4:	ldr	r3, [r3]
   17ee8:	mov	r1, r3
   17eec:	mov	r0, #10
   17ef0:	bl	10ee4 <fputc_unlocked@plt>
   17ef4:	movw	r0, #49032	; 0xbf88
   17ef8:	movt	r0, #1
   17efc:	bl	10fd4 <gettext@plt>
   17f00:	mov	r3, r0
   17f04:	movw	r1, #49052	; 0xbf9c
   17f08:	movt	r1, #1
   17f0c:	mov	r0, r3
   17f10:	bl	10e84 <printf@plt>
   17f14:	movw	r0, #49076	; 0xbfb4
   17f18:	movt	r0, #1
   17f1c:	bl	10fd4 <gettext@plt>
   17f20:	mov	r3, r0
   17f24:	movw	r2, #49096	; 0xbfc8
   17f28:	movt	r2, #1
   17f2c:	movw	r1, #49136	; 0xbff0
   17f30:	movt	r1, #1
   17f34:	mov	r0, r3
   17f38:	bl	10e84 <printf@plt>
   17f3c:	movw	r0, #49152	; 0xc000
   17f40:	movt	r0, #1
   17f44:	bl	10fd4 <gettext@plt>
   17f48:	mov	r3, r0
   17f4c:	movw	r1, #49192	; 0xc028
   17f50:	movt	r1, #1
   17f54:	mov	r0, r3
   17f58:	bl	10e84 <printf@plt>
   17f5c:	nop	{0}
   17f60:	sub	sp, fp, #4
   17f64:	ldr	fp, [sp]
   17f68:	add	sp, sp, #4
   17f6c:	pop	{pc}		; (ldr pc, [sp], #4)
   17f70:	str	fp, [sp, #-8]!
   17f74:	str	lr, [sp, #4]
   17f78:	add	fp, sp, #4
   17f7c:	sub	sp, sp, #16
   17f80:	str	r0, [fp, #-8]
   17f84:	str	r1, [fp, #-12]
   17f88:	str	r2, [fp, #-16]
   17f8c:	ldr	r2, [fp, #-16]
   17f90:	ldr	r1, [fp, #-12]
   17f94:	ldr	r0, [fp, #-8]
   17f98:	bl	18154 <__assert_fail@plt+0x7048>
   17f9c:	mov	r3, r0
   17fa0:	mov	r0, r3
   17fa4:	sub	sp, fp, #4
   17fa8:	ldr	fp, [sp]
   17fac:	add	sp, sp, #4
   17fb0:	pop	{pc}		; (ldr pc, [sp], #4)
   17fb4:	str	fp, [sp, #-8]!
   17fb8:	str	lr, [sp, #4]
   17fbc:	add	fp, sp, #4
   17fc0:	sub	sp, sp, #8
   17fc4:	str	r0, [fp, #-8]
   17fc8:	ldr	r3, [fp, #-8]
   17fcc:	cmp	r3, #0
   17fd0:	bne	17fd8 <__assert_fail@plt+0x6ecc>
   17fd4:	bl	18864 <__assert_fail@plt+0x7758>
   17fd8:	ldr	r3, [fp, #-8]
   17fdc:	mov	r0, r3
   17fe0:	sub	sp, fp, #4
   17fe4:	ldr	fp, [sp]
   17fe8:	add	sp, sp, #4
   17fec:	pop	{pc}		; (ldr pc, [sp], #4)
   17ff0:	str	fp, [sp, #-8]!
   17ff4:	str	lr, [sp, #4]
   17ff8:	add	fp, sp, #4
   17ffc:	sub	sp, sp, #8
   18000:	str	r0, [fp, #-8]
   18004:	ldr	r0, [fp, #-8]
   18008:	bl	19b80 <__assert_fail@plt+0x8a74>
   1800c:	mov	r3, r0
   18010:	mov	r0, r3
   18014:	bl	17fb4 <__assert_fail@plt+0x6ea8>
   18018:	mov	r3, r0
   1801c:	mov	r0, r3
   18020:	sub	sp, fp, #4
   18024:	ldr	fp, [sp]
   18028:	add	sp, sp, #4
   1802c:	pop	{pc}		; (ldr pc, [sp], #4)
   18030:	str	fp, [sp, #-8]!
   18034:	str	lr, [sp, #4]
   18038:	add	fp, sp, #4
   1803c:	sub	sp, sp, #8
   18040:	str	r0, [fp, #-8]
   18044:	ldr	r0, [fp, #-8]
   18048:	bl	1a270 <__assert_fail@plt+0x9164>
   1804c:	mov	r3, r0
   18050:	mov	r0, r3
   18054:	bl	17fb4 <__assert_fail@plt+0x6ea8>
   18058:	mov	r3, r0
   1805c:	mov	r0, r3
   18060:	sub	sp, fp, #4
   18064:	ldr	fp, [sp]
   18068:	add	sp, sp, #4
   1806c:	pop	{pc}		; (ldr pc, [sp], #4)
   18070:	str	fp, [sp, #-8]!
   18074:	str	lr, [sp, #4]
   18078:	add	fp, sp, #4
   1807c:	sub	sp, sp, #8
   18080:	str	r0, [fp, #-8]
   18084:	ldr	r0, [fp, #-8]
   18088:	bl	17ff0 <__assert_fail@plt+0x6ee4>
   1808c:	mov	r3, r0
   18090:	mov	r0, r3
   18094:	sub	sp, fp, #4
   18098:	ldr	fp, [sp]
   1809c:	add	sp, sp, #4
   180a0:	pop	{pc}		; (ldr pc, [sp], #4)
   180a4:	str	fp, [sp, #-8]!
   180a8:	str	lr, [sp, #4]
   180ac:	add	fp, sp, #4
   180b0:	sub	sp, sp, #16
   180b4:	str	r0, [fp, #-16]
   180b8:	str	r1, [fp, #-20]	; 0xffffffec
   180bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   180c0:	ldr	r0, [fp, #-16]
   180c4:	bl	19c10 <__assert_fail@plt+0x8b04>
   180c8:	str	r0, [fp, #-8]
   180cc:	ldr	r3, [fp, #-8]
   180d0:	cmp	r3, #0
   180d4:	bne	180f4 <__assert_fail@plt+0x6fe8>
   180d8:	ldr	r3, [fp, #-16]
   180dc:	cmp	r3, #0
   180e0:	beq	180f0 <__assert_fail@plt+0x6fe4>
   180e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   180e8:	cmp	r3, #0
   180ec:	beq	180f4 <__assert_fail@plt+0x6fe8>
   180f0:	bl	18864 <__assert_fail@plt+0x7758>
   180f4:	ldr	r3, [fp, #-8]
   180f8:	mov	r0, r3
   180fc:	sub	sp, fp, #4
   18100:	ldr	fp, [sp]
   18104:	add	sp, sp, #4
   18108:	pop	{pc}		; (ldr pc, [sp], #4)
   1810c:	str	fp, [sp, #-8]!
   18110:	str	lr, [sp, #4]
   18114:	add	fp, sp, #4
   18118:	sub	sp, sp, #8
   1811c:	str	r0, [fp, #-8]
   18120:	str	r1, [fp, #-12]
   18124:	ldr	r1, [fp, #-12]
   18128:	ldr	r0, [fp, #-8]
   1812c:	bl	1a2a8 <__assert_fail@plt+0x919c>
   18130:	mov	r3, r0
   18134:	mov	r0, r3
   18138:	bl	17fb4 <__assert_fail@plt+0x6ea8>
   1813c:	mov	r3, r0
   18140:	mov	r0, r3
   18144:	sub	sp, fp, #4
   18148:	ldr	fp, [sp]
   1814c:	add	sp, sp, #4
   18150:	pop	{pc}		; (ldr pc, [sp], #4)
   18154:	str	fp, [sp, #-8]!
   18158:	str	lr, [sp, #4]
   1815c:	add	fp, sp, #4
   18160:	sub	sp, sp, #24
   18164:	str	r0, [fp, #-16]
   18168:	str	r1, [fp, #-20]	; 0xffffffec
   1816c:	str	r2, [fp, #-24]	; 0xffffffe8
   18170:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18174:	ldr	r1, [fp, #-20]	; 0xffffffec
   18178:	ldr	r0, [fp, #-16]
   1817c:	bl	1a7b4 <__assert_fail@plt+0x96a8>
   18180:	str	r0, [fp, #-8]
   18184:	ldr	r3, [fp, #-8]
   18188:	cmp	r3, #0
   1818c:	bne	181b8 <__assert_fail@plt+0x70ac>
   18190:	ldr	r3, [fp, #-16]
   18194:	cmp	r3, #0
   18198:	beq	181b4 <__assert_fail@plt+0x70a8>
   1819c:	ldr	r3, [fp, #-20]	; 0xffffffec
   181a0:	cmp	r3, #0
   181a4:	beq	181b8 <__assert_fail@plt+0x70ac>
   181a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   181ac:	cmp	r3, #0
   181b0:	beq	181b8 <__assert_fail@plt+0x70ac>
   181b4:	bl	18864 <__assert_fail@plt+0x7758>
   181b8:	ldr	r3, [fp, #-8]
   181bc:	mov	r0, r3
   181c0:	sub	sp, fp, #4
   181c4:	ldr	fp, [sp]
   181c8:	add	sp, sp, #4
   181cc:	pop	{pc}		; (ldr pc, [sp], #4)
   181d0:	str	fp, [sp, #-8]!
   181d4:	str	lr, [sp, #4]
   181d8:	add	fp, sp, #4
   181dc:	sub	sp, sp, #16
   181e0:	str	r0, [fp, #-8]
   181e4:	str	r1, [fp, #-12]
   181e8:	str	r2, [fp, #-16]
   181ec:	ldr	r2, [fp, #-16]
   181f0:	ldr	r1, [fp, #-12]
   181f4:	ldr	r0, [fp, #-8]
   181f8:	bl	1a348 <__assert_fail@plt+0x923c>
   181fc:	mov	r3, r0
   18200:	mov	r0, r3
   18204:	bl	17fb4 <__assert_fail@plt+0x6ea8>
   18208:	mov	r3, r0
   1820c:	mov	r0, r3
   18210:	sub	sp, fp, #4
   18214:	ldr	fp, [sp]
   18218:	add	sp, sp, #4
   1821c:	pop	{pc}		; (ldr pc, [sp], #4)
   18220:	str	fp, [sp, #-8]!
   18224:	str	lr, [sp, #4]
   18228:	add	fp, sp, #4
   1822c:	sub	sp, sp, #8
   18230:	str	r0, [fp, #-8]
   18234:	str	r1, [fp, #-12]
   18238:	ldr	r2, [fp, #-12]
   1823c:	ldr	r1, [fp, #-8]
   18240:	mov	r0, #0
   18244:	bl	18154 <__assert_fail@plt+0x7048>
   18248:	mov	r3, r0
   1824c:	mov	r0, r3
   18250:	sub	sp, fp, #4
   18254:	ldr	fp, [sp]
   18258:	add	sp, sp, #4
   1825c:	pop	{pc}		; (ldr pc, [sp], #4)
   18260:	str	fp, [sp, #-8]!
   18264:	str	lr, [sp, #4]
   18268:	add	fp, sp, #4
   1826c:	sub	sp, sp, #8
   18270:	str	r0, [fp, #-8]
   18274:	str	r1, [fp, #-12]
   18278:	ldr	r2, [fp, #-12]
   1827c:	ldr	r1, [fp, #-8]
   18280:	mov	r0, #0
   18284:	bl	181d0 <__assert_fail@plt+0x70c4>
   18288:	mov	r3, r0
   1828c:	mov	r0, r3
   18290:	sub	sp, fp, #4
   18294:	ldr	fp, [sp]
   18298:	add	sp, sp, #4
   1829c:	pop	{pc}		; (ldr pc, [sp], #4)
   182a0:	str	fp, [sp, #-8]!
   182a4:	str	lr, [sp, #4]
   182a8:	add	fp, sp, #4
   182ac:	sub	sp, sp, #8
   182b0:	str	r0, [fp, #-8]
   182b4:	str	r1, [fp, #-12]
   182b8:	mov	r2, #1
   182bc:	ldr	r1, [fp, #-12]
   182c0:	ldr	r0, [fp, #-8]
   182c4:	bl	182e0 <__assert_fail@plt+0x71d4>
   182c8:	mov	r3, r0
   182cc:	mov	r0, r3
   182d0:	sub	sp, fp, #4
   182d4:	ldr	fp, [sp]
   182d8:	add	sp, sp, #4
   182dc:	pop	{pc}		; (ldr pc, [sp], #4)
   182e0:	str	fp, [sp, #-8]!
   182e4:	str	lr, [sp, #4]
   182e8:	add	fp, sp, #4
   182ec:	sub	sp, sp, #24
   182f0:	str	r0, [fp, #-16]
   182f4:	str	r1, [fp, #-20]	; 0xffffffec
   182f8:	str	r2, [fp, #-24]	; 0xffffffe8
   182fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   18300:	ldr	r3, [r3]
   18304:	str	r3, [fp, #-8]
   18308:	ldr	r3, [fp, #-16]
   1830c:	cmp	r3, #0
   18310:	bne	18358 <__assert_fail@plt+0x724c>
   18314:	ldr	r3, [fp, #-8]
   18318:	cmp	r3, #0
   1831c:	bne	18394 <__assert_fail@plt+0x7288>
   18320:	mov	r2, #64	; 0x40
   18324:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18328:	udiv	r3, r2, r3
   1832c:	str	r3, [fp, #-8]
   18330:	ldr	r3, [fp, #-8]
   18334:	cmp	r3, #0
   18338:	moveq	r3, #1
   1833c:	movne	r3, #0
   18340:	uxtb	r3, r3
   18344:	mov	r2, r3
   18348:	ldr	r3, [fp, #-8]
   1834c:	add	r3, r2, r3
   18350:	str	r3, [fp, #-8]
   18354:	b	18394 <__assert_fail@plt+0x7288>
   18358:	ldr	r2, [fp, #-8]
   1835c:	ldr	r3, [fp, #-8]
   18360:	lsr	r3, r3, #1
   18364:	add	r3, r3, #1
   18368:	mov	r1, #0
   1836c:	adds	r3, r2, r3
   18370:	bcc	18378 <__assert_fail@plt+0x726c>
   18374:	mov	r1, #1
   18378:	str	r3, [fp, #-8]
   1837c:	mov	r3, r1
   18380:	and	r3, r3, #1
   18384:	uxtb	r3, r3
   18388:	cmp	r3, #0
   1838c:	beq	18394 <__assert_fail@plt+0x7288>
   18390:	bl	18864 <__assert_fail@plt+0x7758>
   18394:	ldr	r3, [fp, #-8]
   18398:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1839c:	mov	r1, r3
   183a0:	ldr	r0, [fp, #-16]
   183a4:	bl	18154 <__assert_fail@plt+0x7048>
   183a8:	str	r0, [fp, #-16]
   183ac:	ldr	r2, [fp, #-8]
   183b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   183b4:	str	r2, [r3]
   183b8:	ldr	r3, [fp, #-16]
   183bc:	mov	r0, r3
   183c0:	sub	sp, fp, #4
   183c4:	ldr	fp, [sp]
   183c8:	add	sp, sp, #4
   183cc:	pop	{pc}		; (ldr pc, [sp], #4)
   183d0:	str	fp, [sp, #-8]!
   183d4:	str	lr, [sp, #4]
   183d8:	add	fp, sp, #4
   183dc:	sub	sp, sp, #32
   183e0:	str	r0, [fp, #-24]	; 0xffffffe8
   183e4:	str	r1, [fp, #-28]	; 0xffffffe4
   183e8:	str	r2, [fp, #-32]	; 0xffffffe0
   183ec:	str	r3, [fp, #-36]	; 0xffffffdc
   183f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   183f4:	ldr	r3, [r3]
   183f8:	str	r3, [fp, #-8]
   183fc:	ldr	r3, [fp, #-8]
   18400:	asr	r3, r3, #1
   18404:	mov	r1, #0
   18408:	ldr	r2, [fp, #-8]
   1840c:	adds	r3, r2, r3
   18410:	bvc	18418 <__assert_fail@plt+0x730c>
   18414:	mov	r1, #1
   18418:	str	r3, [fp, #-16]
   1841c:	mov	r3, r1
   18420:	and	r3, r3, #1
   18424:	uxtb	r3, r3
   18428:	cmp	r3, #0
   1842c:	beq	18438 <__assert_fail@plt+0x732c>
   18430:	mvn	r3, #-2147483648	; 0x80000000
   18434:	str	r3, [fp, #-16]
   18438:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1843c:	cmp	r3, #0
   18440:	blt	1845c <__assert_fail@plt+0x7350>
   18444:	ldr	r3, [fp, #-16]
   18448:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1844c:	cmp	r2, r3
   18450:	bge	1845c <__assert_fail@plt+0x7350>
   18454:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18458:	str	r3, [fp, #-16]
   1845c:	ldr	r2, [fp, #-16]
   18460:	mov	lr, #0
   18464:	ldr	r3, [fp, #4]
   18468:	smull	r2, r3, r2, r3
   1846c:	mov	r0, #0
   18470:	mov	r1, #0
   18474:	mov	r0, r3
   18478:	asr	r1, r3, #31
   1847c:	asr	ip, r2, #31
   18480:	cmp	ip, r0
   18484:	beq	1848c <__assert_fail@plt+0x7380>
   18488:	mov	lr, #1
   1848c:	mov	r3, r2
   18490:	str	r3, [fp, #-20]	; 0xffffffec
   18494:	mov	r3, lr
   18498:	and	r3, r3, #1
   1849c:	uxtb	r3, r3
   184a0:	cmp	r3, #0
   184a4:	beq	184b0 <__assert_fail@plt+0x73a4>
   184a8:	mvn	r3, #-2147483648	; 0x80000000
   184ac:	b	184c8 <__assert_fail@plt+0x73bc>
   184b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   184b4:	cmp	r3, #63	; 0x3f
   184b8:	bgt	184c4 <__assert_fail@plt+0x73b8>
   184bc:	mov	r3, #64	; 0x40
   184c0:	b	184c8 <__assert_fail@plt+0x73bc>
   184c4:	mov	r3, #0
   184c8:	str	r3, [fp, #-12]
   184cc:	ldr	r3, [fp, #-12]
   184d0:	cmp	r3, #0
   184d4:	beq	1850c <__assert_fail@plt+0x7400>
   184d8:	ldr	r2, [fp, #-12]
   184dc:	ldr	r3, [fp, #4]
   184e0:	sdiv	r3, r2, r3
   184e4:	str	r3, [fp, #-16]
   184e8:	ldr	r3, [fp, #-12]
   184ec:	ldr	r2, [fp, #4]
   184f0:	sdiv	r2, r3, r2
   184f4:	ldr	r1, [fp, #4]
   184f8:	mul	r2, r1, r2
   184fc:	sub	r3, r3, r2
   18500:	ldr	r2, [fp, #-12]
   18504:	sub	r3, r2, r3
   18508:	str	r3, [fp, #-20]	; 0xffffffec
   1850c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18510:	cmp	r3, #0
   18514:	bne	18524 <__assert_fail@plt+0x7418>
   18518:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1851c:	mov	r2, #0
   18520:	str	r2, [r3]
   18524:	ldr	r2, [fp, #-16]
   18528:	ldr	r3, [fp, #-8]
   1852c:	sub	r3, r2, r3
   18530:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18534:	cmp	r2, r3
   18538:	ble	185d8 <__assert_fail@plt+0x74cc>
   1853c:	mov	r1, #0
   18540:	ldr	r2, [fp, #-8]
   18544:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18548:	adds	r3, r2, r3
   1854c:	bvc	18554 <__assert_fail@plt+0x7448>
   18550:	mov	r1, #1
   18554:	str	r3, [fp, #-16]
   18558:	mov	r3, r1
   1855c:	and	r3, r3, #1
   18560:	uxtb	r3, r3
   18564:	cmp	r3, #0
   18568:	bne	185d4 <__assert_fail@plt+0x74c8>
   1856c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18570:	cmp	r3, #0
   18574:	blt	18588 <__assert_fail@plt+0x747c>
   18578:	ldr	r3, [fp, #-16]
   1857c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18580:	cmp	r2, r3
   18584:	blt	185d4 <__assert_fail@plt+0x74c8>
   18588:	ldr	r2, [fp, #-16]
   1858c:	mov	lr, #0
   18590:	ldr	r3, [fp, #4]
   18594:	smull	r2, r3, r2, r3
   18598:	mov	r0, #0
   1859c:	mov	r1, #0
   185a0:	mov	r0, r3
   185a4:	asr	r1, r3, #31
   185a8:	asr	ip, r2, #31
   185ac:	cmp	ip, r0
   185b0:	beq	185b8 <__assert_fail@plt+0x74ac>
   185b4:	mov	lr, #1
   185b8:	mov	r3, r2
   185bc:	str	r3, [fp, #-20]	; 0xffffffec
   185c0:	mov	r3, lr
   185c4:	and	r3, r3, #1
   185c8:	uxtb	r3, r3
   185cc:	cmp	r3, #0
   185d0:	beq	185d8 <__assert_fail@plt+0x74cc>
   185d4:	bl	18864 <__assert_fail@plt+0x7758>
   185d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   185dc:	mov	r1, r3
   185e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185e4:	bl	180a4 <__assert_fail@plt+0x6f98>
   185e8:	str	r0, [fp, #-24]	; 0xffffffe8
   185ec:	ldr	r2, [fp, #-16]
   185f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   185f4:	str	r2, [r3]
   185f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   185fc:	mov	r0, r3
   18600:	sub	sp, fp, #4
   18604:	ldr	fp, [sp]
   18608:	add	sp, sp, #4
   1860c:	pop	{pc}		; (ldr pc, [sp], #4)
   18610:	str	fp, [sp, #-8]!
   18614:	str	lr, [sp, #4]
   18618:	add	fp, sp, #4
   1861c:	sub	sp, sp, #8
   18620:	str	r0, [fp, #-8]
   18624:	mov	r1, #1
   18628:	ldr	r0, [fp, #-8]
   1862c:	bl	18680 <__assert_fail@plt+0x7574>
   18630:	mov	r3, r0
   18634:	mov	r0, r3
   18638:	sub	sp, fp, #4
   1863c:	ldr	fp, [sp]
   18640:	add	sp, sp, #4
   18644:	pop	{pc}		; (ldr pc, [sp], #4)
   18648:	str	fp, [sp, #-8]!
   1864c:	str	lr, [sp, #4]
   18650:	add	fp, sp, #4
   18654:	sub	sp, sp, #8
   18658:	str	r0, [fp, #-8]
   1865c:	mov	r1, #1
   18660:	ldr	r0, [fp, #-8]
   18664:	bl	186c8 <__assert_fail@plt+0x75bc>
   18668:	mov	r3, r0
   1866c:	mov	r0, r3
   18670:	sub	sp, fp, #4
   18674:	ldr	fp, [sp]
   18678:	add	sp, sp, #4
   1867c:	pop	{pc}		; (ldr pc, [sp], #4)
   18680:	str	fp, [sp, #-8]!
   18684:	str	lr, [sp, #4]
   18688:	add	fp, sp, #4
   1868c:	sub	sp, sp, #8
   18690:	str	r0, [fp, #-8]
   18694:	str	r1, [fp, #-12]
   18698:	ldr	r1, [fp, #-12]
   1869c:	ldr	r0, [fp, #-8]
   186a0:	bl	19ab0 <__assert_fail@plt+0x89a4>
   186a4:	mov	r3, r0
   186a8:	mov	r0, r3
   186ac:	bl	17fb4 <__assert_fail@plt+0x6ea8>
   186b0:	mov	r3, r0
   186b4:	mov	r0, r3
   186b8:	sub	sp, fp, #4
   186bc:	ldr	fp, [sp]
   186c0:	add	sp, sp, #4
   186c4:	pop	{pc}		; (ldr pc, [sp], #4)
   186c8:	str	fp, [sp, #-8]!
   186cc:	str	lr, [sp, #4]
   186d0:	add	fp, sp, #4
   186d4:	sub	sp, sp, #8
   186d8:	str	r0, [fp, #-8]
   186dc:	str	r1, [fp, #-12]
   186e0:	ldr	r1, [fp, #-12]
   186e4:	ldr	r0, [fp, #-8]
   186e8:	bl	1a304 <__assert_fail@plt+0x91f8>
   186ec:	mov	r3, r0
   186f0:	mov	r0, r3
   186f4:	bl	17fb4 <__assert_fail@plt+0x6ea8>
   186f8:	mov	r3, r0
   186fc:	mov	r0, r3
   18700:	sub	sp, fp, #4
   18704:	ldr	fp, [sp]
   18708:	add	sp, sp, #4
   1870c:	pop	{pc}		; (ldr pc, [sp], #4)
   18710:	str	fp, [sp, #-8]!
   18714:	str	lr, [sp, #4]
   18718:	add	fp, sp, #4
   1871c:	sub	sp, sp, #8
   18720:	str	r0, [fp, #-8]
   18724:	str	r1, [fp, #-12]
   18728:	ldr	r0, [fp, #-12]
   1872c:	bl	17ff0 <__assert_fail@plt+0x6ee4>
   18730:	mov	r3, r0
   18734:	ldr	r2, [fp, #-12]
   18738:	ldr	r1, [fp, #-8]
   1873c:	mov	r0, r3
   18740:	bl	10eb4 <memcpy@plt>
   18744:	mov	r3, r0
   18748:	mov	r0, r3
   1874c:	sub	sp, fp, #4
   18750:	ldr	fp, [sp]
   18754:	add	sp, sp, #4
   18758:	pop	{pc}		; (ldr pc, [sp], #4)
   1875c:	str	fp, [sp, #-8]!
   18760:	str	lr, [sp, #4]
   18764:	add	fp, sp, #4
   18768:	sub	sp, sp, #8
   1876c:	str	r0, [fp, #-8]
   18770:	str	r1, [fp, #-12]
   18774:	ldr	r0, [fp, #-12]
   18778:	bl	18030 <__assert_fail@plt+0x6f24>
   1877c:	mov	r3, r0
   18780:	mov	r0, r3
   18784:	ldr	r3, [fp, #-12]
   18788:	mov	r2, r3
   1878c:	ldr	r1, [fp, #-8]
   18790:	bl	10eb4 <memcpy@plt>
   18794:	mov	r3, r0
   18798:	mov	r0, r3
   1879c:	sub	sp, fp, #4
   187a0:	ldr	fp, [sp]
   187a4:	add	sp, sp, #4
   187a8:	pop	{pc}		; (ldr pc, [sp], #4)
   187ac:	str	fp, [sp, #-8]!
   187b0:	str	lr, [sp, #4]
   187b4:	add	fp, sp, #4
   187b8:	sub	sp, sp, #16
   187bc:	str	r0, [fp, #-16]
   187c0:	str	r1, [fp, #-20]	; 0xffffffec
   187c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   187c8:	add	r3, r3, #1
   187cc:	mov	r0, r3
   187d0:	bl	18030 <__assert_fail@plt+0x6f24>
   187d4:	mov	r3, r0
   187d8:	str	r3, [fp, #-8]
   187dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   187e0:	ldr	r2, [fp, #-8]
   187e4:	add	r3, r2, r3
   187e8:	mov	r2, #0
   187ec:	strb	r2, [r3]
   187f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   187f4:	mov	r2, r3
   187f8:	ldr	r1, [fp, #-16]
   187fc:	ldr	r0, [fp, #-8]
   18800:	bl	10eb4 <memcpy@plt>
   18804:	mov	r3, r0
   18808:	mov	r0, r3
   1880c:	sub	sp, fp, #4
   18810:	ldr	fp, [sp]
   18814:	add	sp, sp, #4
   18818:	pop	{pc}		; (ldr pc, [sp], #4)
   1881c:	str	fp, [sp, #-8]!
   18820:	str	lr, [sp, #4]
   18824:	add	fp, sp, #4
   18828:	sub	sp, sp, #8
   1882c:	str	r0, [fp, #-8]
   18830:	ldr	r0, [fp, #-8]
   18834:	bl	10fec <strlen@plt>
   18838:	mov	r3, r0
   1883c:	add	r3, r3, #1
   18840:	mov	r1, r3
   18844:	ldr	r0, [fp, #-8]
   18848:	bl	18710 <__assert_fail@plt+0x7604>
   1884c:	mov	r3, r0
   18850:	mov	r0, r3
   18854:	sub	sp, fp, #4
   18858:	ldr	fp, [sp]
   1885c:	add	sp, sp, #4
   18860:	pop	{pc}		; (ldr pc, [sp], #4)
   18864:	strd	r4, [sp, #-16]!
   18868:	str	fp, [sp, #8]
   1886c:	str	lr, [sp, #12]
   18870:	add	fp, sp, #12
   18874:	movw	r3, #53536	; 0xd120
   18878:	movt	r3, #2
   1887c:	ldr	r4, [r3]
   18880:	movw	r0, #49272	; 0xc078
   18884:	movt	r0, #1
   18888:	bl	10fd4 <gettext@plt>
   1888c:	mov	r3, r0
   18890:	movw	r2, #49292	; 0xc08c
   18894:	movt	r2, #1
   18898:	mov	r1, #0
   1889c:	mov	r0, r4
   188a0:	bl	10f68 <error@plt>
   188a4:	bl	110dc <abort@plt>
   188a8:	strd	r4, [sp, #-20]!	; 0xffffffec
   188ac:	str	r6, [sp, #8]
   188b0:	str	fp, [sp, #12]
   188b4:	str	lr, [sp, #16]
   188b8:	add	fp, sp, #16
   188bc:	sub	sp, sp, #28
   188c0:	str	r0, [fp, #-24]	; 0xffffffe8
   188c4:	str	r1, [fp, #-28]	; 0xffffffe4
   188c8:	str	r2, [fp, #-32]	; 0xffffffe0
   188cc:	str	r3, [fp, #-36]	; 0xffffffdc
   188d0:	movw	r0, #49296	; 0xc090
   188d4:	movt	r0, #1
   188d8:	bl	10fd4 <gettext@plt>
   188dc:	mov	r3, r0
   188e0:	mov	r2, r3
   188e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188e8:	mov	r0, #0
   188ec:	bl	10f68 <error@plt>
   188f0:	movw	r0, #49324	; 0xc0ac
   188f4:	movt	r0, #1
   188f8:	bl	10fd4 <gettext@plt>
   188fc:	mov	r3, r0
   18900:	mov	r2, r3
   18904:	mov	r1, #0
   18908:	mov	r0, #0
   1890c:	bl	10f68 <error@plt>
   18910:	movw	r3, #53536	; 0xd120
   18914:	movt	r3, #2
   18918:	ldr	r4, [r3]
   1891c:	movw	r0, #49368	; 0xc0d8
   18920:	movt	r0, #1
   18924:	bl	10fd4 <gettext@plt>
   18928:	mov	r5, r0
   1892c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18930:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18934:	mov	r1, #8
   18938:	mov	r0, #0
   1893c:	bl	17058 <__assert_fail@plt+0x5f4c>
   18940:	mov	r6, r0
   18944:	ldr	r3, [fp, #4]
   18948:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1894c:	mov	r1, #8
   18950:	mov	r0, #1
   18954:	bl	17058 <__assert_fail@plt+0x5f4c>
   18958:	mov	r3, r0
   1895c:	str	r3, [sp]
   18960:	mov	r3, r6
   18964:	mov	r2, r5
   18968:	mov	r1, #0
   1896c:	mov	r0, r4
   18970:	bl	10f68 <error@plt>
   18974:	nop	{0}
   18978:	sub	sp, fp, #16
   1897c:	ldrd	r4, [sp]
   18980:	ldr	r6, [sp, #8]
   18984:	ldr	fp, [sp, #12]
   18988:	add	sp, sp, #16
   1898c:	pop	{pc}		; (ldr pc, [sp], #4)
   18990:	str	fp, [sp, #-8]!
   18994:	str	lr, [sp, #4]
   18998:	add	fp, sp, #4
   1899c:	sub	sp, sp, #32
   189a0:	str	r0, [fp, #-16]
   189a4:	str	r1, [fp, #-20]	; 0xffffffec
   189a8:	str	r2, [fp, #-24]	; 0xffffffe8
   189ac:	str	r3, [fp, #-28]	; 0xffffffe4
   189b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   189b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   189b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   189bc:	ldr	r0, [fp, #-16]
   189c0:	bl	1a60c <__assert_fail@plt+0x9500>
   189c4:	str	r0, [fp, #-8]
   189c8:	bl	11010 <__errno_location@plt>
   189cc:	mov	r3, r0
   189d0:	ldr	r3, [r3]
   189d4:	str	r3, [fp, #-12]
   189d8:	ldr	r3, [fp, #-12]
   189dc:	cmp	r3, #0
   189e0:	beq	18a00 <__assert_fail@plt+0x78f4>
   189e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   189e8:	str	r3, [sp]
   189ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   189f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   189f4:	ldr	r1, [fp, #-16]
   189f8:	ldr	r0, [fp, #-12]
   189fc:	bl	188a8 <__assert_fail@plt+0x779c>
   18a00:	ldr	r3, [fp, #-8]
   18a04:	mov	r0, r3
   18a08:	sub	sp, fp, #4
   18a0c:	ldr	fp, [sp]
   18a10:	add	sp, sp, #4
   18a14:	pop	{pc}		; (ldr pc, [sp], #4)
   18a18:	str	fp, [sp, #-8]!
   18a1c:	str	lr, [sp, #4]
   18a20:	add	fp, sp, #4
   18a24:	sub	sp, sp, #32
   18a28:	str	r0, [fp, #-16]
   18a2c:	str	r1, [fp, #-20]	; 0xffffffec
   18a30:	str	r2, [fp, #-24]	; 0xffffffe8
   18a34:	str	r3, [fp, #-28]	; 0xffffffe4
   18a38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18a3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18a40:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a44:	ldr	r0, [fp, #-16]
   18a48:	bl	1a724 <__assert_fail@plt+0x9618>
   18a4c:	str	r0, [fp, #-8]
   18a50:	bl	11010 <__errno_location@plt>
   18a54:	mov	r3, r0
   18a58:	ldr	r3, [r3]
   18a5c:	str	r3, [fp, #-12]
   18a60:	ldr	r3, [fp, #-12]
   18a64:	cmp	r3, #0
   18a68:	beq	18a90 <__assert_fail@plt+0x7984>
   18a6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a70:	sub	r2, r3, #1
   18a74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18a78:	sub	r3, r3, #1
   18a7c:	str	r3, [sp]
   18a80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a84:	ldr	r1, [fp, #-16]
   18a88:	ldr	r0, [fp, #-12]
   18a8c:	bl	188a8 <__assert_fail@plt+0x779c>
   18a90:	ldr	r3, [fp, #-8]
   18a94:	mov	r0, r3
   18a98:	sub	sp, fp, #4
   18a9c:	ldr	fp, [sp]
   18aa0:	add	sp, sp, #4
   18aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   18aa8:	push	{fp}		; (str fp, [sp, #-4]!)
   18aac:	add	fp, sp, #0
   18ab0:	sub	sp, sp, #20
   18ab4:	str	r0, [fp, #-16]
   18ab8:	str	r1, [fp, #-20]	; 0xffffffec
   18abc:	ldr	r3, [fp, #-16]
   18ac0:	ldr	r3, [r3]
   18ac4:	mov	ip, #0
   18ac8:	ldr	r2, [fp, #-20]	; 0xffffffec
   18acc:	cmp	r2, #0
   18ad0:	bge	18ae0 <__assert_fail@plt+0x79d4>
   18ad4:	cmp	r3, #0
   18ad8:	beq	18ae0 <__assert_fail@plt+0x79d4>
   18adc:	mov	ip, #1
   18ae0:	ldr	r2, [fp, #-20]	; 0xffffffec
   18ae4:	umull	r0, r1, r3, r2
   18ae8:	mov	r2, #0
   18aec:	mov	r3, #0
   18af0:	mov	r2, r1
   18af4:	mov	r3, #0
   18af8:	cmp	r2, #0
   18afc:	beq	18b04 <__assert_fail@plt+0x79f8>
   18b00:	mov	ip, #1
   18b04:	mov	r3, r0
   18b08:	str	r3, [fp, #-8]
   18b0c:	mov	r3, ip
   18b10:	and	r3, r3, #1
   18b14:	uxtb	r3, r3
   18b18:	cmp	r3, #0
   18b1c:	beq	18b34 <__assert_fail@plt+0x7a28>
   18b20:	ldr	r3, [fp, #-16]
   18b24:	mvn	r2, #0
   18b28:	str	r2, [r3]
   18b2c:	mov	r3, #1
   18b30:	b	18b44 <__assert_fail@plt+0x7a38>
   18b34:	ldr	r2, [fp, #-8]
   18b38:	ldr	r3, [fp, #-16]
   18b3c:	str	r2, [r3]
   18b40:	mov	r3, #0
   18b44:	mov	r0, r3
   18b48:	add	sp, fp, #0
   18b4c:	pop	{fp}		; (ldr fp, [sp], #4)
   18b50:	bx	lr
   18b54:	str	fp, [sp, #-8]!
   18b58:	str	lr, [sp, #4]
   18b5c:	add	fp, sp, #4
   18b60:	sub	sp, sp, #24
   18b64:	str	r0, [fp, #-16]
   18b68:	str	r1, [fp, #-20]	; 0xffffffec
   18b6c:	str	r2, [fp, #-24]	; 0xffffffe8
   18b70:	mov	r3, #0
   18b74:	str	r3, [fp, #-8]
   18b78:	b	18b98 <__assert_fail@plt+0x7a8c>
   18b7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18b80:	ldr	r0, [fp, #-16]
   18b84:	bl	18aa8 <__assert_fail@plt+0x799c>
   18b88:	mov	r2, r0
   18b8c:	ldr	r3, [fp, #-8]
   18b90:	orr	r3, r3, r2
   18b94:	str	r3, [fp, #-8]
   18b98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b9c:	sub	r2, r3, #1
   18ba0:	str	r2, [fp, #-24]	; 0xffffffe8
   18ba4:	cmp	r3, #0
   18ba8:	bne	18b7c <__assert_fail@plt+0x7a70>
   18bac:	ldr	r3, [fp, #-8]
   18bb0:	mov	r0, r3
   18bb4:	sub	sp, fp, #4
   18bb8:	ldr	fp, [sp]
   18bbc:	add	sp, sp, #4
   18bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   18bc4:	str	fp, [sp, #-8]!
   18bc8:	str	lr, [sp, #4]
   18bcc:	add	fp, sp, #4
   18bd0:	sub	sp, sp, #56	; 0x38
   18bd4:	str	r0, [fp, #-48]	; 0xffffffd0
   18bd8:	str	r1, [fp, #-52]	; 0xffffffcc
   18bdc:	str	r2, [fp, #-56]	; 0xffffffc8
   18be0:	str	r3, [fp, #-60]	; 0xffffffc4
   18be4:	mov	r3, #0
   18be8:	str	r3, [fp, #-8]
   18bec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18bf0:	cmp	r3, #0
   18bf4:	blt	18c04 <__assert_fail@plt+0x7af8>
   18bf8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18bfc:	cmp	r3, #36	; 0x24
   18c00:	ble	18c24 <__assert_fail@plt+0x7b18>
   18c04:	movw	r3, #49464	; 0xc138
   18c08:	movt	r3, #1
   18c0c:	mov	r2, #85	; 0x55
   18c10:	movw	r1, #49408	; 0xc100
   18c14:	movt	r1, #1
   18c18:	movw	r0, #49424	; 0xc110
   18c1c:	movt	r0, #1
   18c20:	bl	1110c <__assert_fail@plt>
   18c24:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18c28:	cmp	r3, #0
   18c2c:	bne	18c38 <__assert_fail@plt+0x7b2c>
   18c30:	sub	r3, fp, #36	; 0x24
   18c34:	b	18c3c <__assert_fail@plt+0x7b30>
   18c38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18c3c:	str	r3, [fp, #-32]	; 0xffffffe0
   18c40:	bl	11010 <__errno_location@plt>
   18c44:	mov	r2, r0
   18c48:	mov	r3, #0
   18c4c:	str	r3, [r2]
   18c50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18c54:	str	r3, [fp, #-12]
   18c58:	ldr	r3, [fp, #-12]
   18c5c:	ldrb	r3, [r3]
   18c60:	strb	r3, [fp, #-13]
   18c64:	b	18c80 <__assert_fail@plt+0x7b74>
   18c68:	ldr	r3, [fp, #-12]
   18c6c:	add	r3, r3, #1
   18c70:	str	r3, [fp, #-12]
   18c74:	ldr	r3, [fp, #-12]
   18c78:	ldrb	r3, [r3]
   18c7c:	strb	r3, [fp, #-13]
   18c80:	bl	10fbc <__ctype_b_loc@plt>
   18c84:	mov	r3, r0
   18c88:	ldr	r2, [r3]
   18c8c:	ldrb	r3, [fp, #-13]
   18c90:	lsl	r3, r3, #1
   18c94:	add	r3, r2, r3
   18c98:	ldrh	r3, [r3]
   18c9c:	and	r3, r3, #8192	; 0x2000
   18ca0:	cmp	r3, #0
   18ca4:	bne	18c68 <__assert_fail@plt+0x7b5c>
   18ca8:	ldrb	r3, [fp, #-13]
   18cac:	cmp	r3, #45	; 0x2d
   18cb0:	bne	18cbc <__assert_fail@plt+0x7bb0>
   18cb4:	mov	r3, #4
   18cb8:	b	191fc <__assert_fail@plt+0x80f0>
   18cbc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18cc0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18cc4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18cc8:	bl	10fe0 <strtoul@plt>
   18ccc:	mov	r3, r0
   18cd0:	str	r3, [fp, #-40]	; 0xffffffd8
   18cd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18cd8:	ldr	r3, [r3]
   18cdc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18ce0:	cmp	r2, r3
   18ce4:	bne	18d40 <__assert_fail@plt+0x7c34>
   18ce8:	ldr	r3, [fp, #4]
   18cec:	cmp	r3, #0
   18cf0:	beq	18d38 <__assert_fail@plt+0x7c2c>
   18cf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18cf8:	ldr	r3, [r3]
   18cfc:	ldrb	r3, [r3]
   18d00:	cmp	r3, #0
   18d04:	beq	18d38 <__assert_fail@plt+0x7c2c>
   18d08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18d0c:	ldr	r3, [r3]
   18d10:	ldrb	r3, [r3]
   18d14:	mov	r1, r3
   18d18:	ldr	r0, [fp, #4]
   18d1c:	bl	10ff8 <strchr@plt>
   18d20:	mov	r3, r0
   18d24:	cmp	r3, #0
   18d28:	beq	18d38 <__assert_fail@plt+0x7c2c>
   18d2c:	mov	r3, #1
   18d30:	str	r3, [fp, #-40]	; 0xffffffd8
   18d34:	b	18d78 <__assert_fail@plt+0x7c6c>
   18d38:	mov	r3, #4
   18d3c:	b	191fc <__assert_fail@plt+0x80f0>
   18d40:	bl	11010 <__errno_location@plt>
   18d44:	mov	r3, r0
   18d48:	ldr	r3, [r3]
   18d4c:	cmp	r3, #0
   18d50:	beq	18d78 <__assert_fail@plt+0x7c6c>
   18d54:	bl	11010 <__errno_location@plt>
   18d58:	mov	r3, r0
   18d5c:	ldr	r3, [r3]
   18d60:	cmp	r3, #34	; 0x22
   18d64:	beq	18d70 <__assert_fail@plt+0x7c64>
   18d68:	mov	r3, #4
   18d6c:	b	191fc <__assert_fail@plt+0x80f0>
   18d70:	mov	r3, #1
   18d74:	str	r3, [fp, #-8]
   18d78:	ldr	r3, [fp, #4]
   18d7c:	cmp	r3, #0
   18d80:	bne	18d98 <__assert_fail@plt+0x7c8c>
   18d84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18d88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18d8c:	str	r2, [r3]
   18d90:	ldr	r3, [fp, #-8]
   18d94:	b	191fc <__assert_fail@plt+0x80f0>
   18d98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18d9c:	ldr	r3, [r3]
   18da0:	ldrb	r3, [r3]
   18da4:	cmp	r3, #0
   18da8:	beq	191ec <__assert_fail@plt+0x80e0>
   18dac:	mov	r3, #1024	; 0x400
   18db0:	str	r3, [fp, #-20]	; 0xffffffec
   18db4:	mov	r3, #1
   18db8:	str	r3, [fp, #-24]	; 0xffffffe8
   18dbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18dc0:	ldr	r3, [r3]
   18dc4:	ldrb	r3, [r3]
   18dc8:	mov	r1, r3
   18dcc:	ldr	r0, [fp, #4]
   18dd0:	bl	10ff8 <strchr@plt>
   18dd4:	mov	r3, r0
   18dd8:	cmp	r3, #0
   18ddc:	bne	18df8 <__assert_fail@plt+0x7cec>
   18de0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18de4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18de8:	str	r2, [r3]
   18dec:	ldr	r3, [fp, #-8]
   18df0:	orr	r3, r3, #2
   18df4:	b	191fc <__assert_fail@plt+0x80f0>
   18df8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18dfc:	ldr	r3, [r3]
   18e00:	ldrb	r3, [r3]
   18e04:	sub	r3, r3, #69	; 0x45
   18e08:	cmp	r3, #47	; 0x2f
   18e0c:	ldrls	pc, [pc, r3, lsl #2]
   18e10:	b	18f64 <__assert_fail@plt+0x7e58>
   18e14:	ldrdeq	r8, [r1], -r4
   18e18:	andeq	r8, r1, r4, ror #30
   18e1c:	ldrdeq	r8, [r1], -r4
   18e20:	andeq	r8, r1, r4, ror #30
   18e24:	andeq	r8, r1, r4, ror #30
   18e28:	andeq	r8, r1, r4, ror #30
   18e2c:	ldrdeq	r8, [r1], -r4
   18e30:	andeq	r8, r1, r4, ror #30
   18e34:	ldrdeq	r8, [r1], -r4
   18e38:	andeq	r8, r1, r4, ror #30
   18e3c:	andeq	r8, r1, r4, ror #30
   18e40:	ldrdeq	r8, [r1], -r4
   18e44:	andeq	r8, r1, r4, ror #30
   18e48:	andeq	r8, r1, r4, ror #30
   18e4c:	andeq	r8, r1, r4, ror #30
   18e50:	ldrdeq	r8, [r1], -r4
   18e54:	andeq	r8, r1, r4, ror #30
   18e58:	andeq	r8, r1, r4, ror #30
   18e5c:	andeq	r8, r1, r4, ror #30
   18e60:	andeq	r8, r1, r4, ror #30
   18e64:	ldrdeq	r8, [r1], -r4
   18e68:	ldrdeq	r8, [r1], -r4
   18e6c:	andeq	r8, r1, r4, ror #30
   18e70:	andeq	r8, r1, r4, ror #30
   18e74:	andeq	r8, r1, r4, ror #30
   18e78:	andeq	r8, r1, r4, ror #30
   18e7c:	andeq	r8, r1, r4, ror #30
   18e80:	andeq	r8, r1, r4, ror #30
   18e84:	andeq	r8, r1, r4, ror #30
   18e88:	andeq	r8, r1, r4, ror #30
   18e8c:	andeq	r8, r1, r4, ror #30
   18e90:	andeq	r8, r1, r4, ror #30
   18e94:	andeq	r8, r1, r4, ror #30
   18e98:	andeq	r8, r1, r4, ror #30
   18e9c:	ldrdeq	r8, [r1], -r4
   18ea0:	andeq	r8, r1, r4, ror #30
   18ea4:	andeq	r8, r1, r4, ror #30
   18ea8:	andeq	r8, r1, r4, ror #30
   18eac:	ldrdeq	r8, [r1], -r4
   18eb0:	andeq	r8, r1, r4, ror #30
   18eb4:	ldrdeq	r8, [r1], -r4
   18eb8:	andeq	r8, r1, r4, ror #30
   18ebc:	andeq	r8, r1, r4, ror #30
   18ec0:	andeq	r8, r1, r4, ror #30
   18ec4:	andeq	r8, r1, r4, ror #30
   18ec8:	andeq	r8, r1, r4, ror #30
   18ecc:	andeq	r8, r1, r4, ror #30
   18ed0:	ldrdeq	r8, [r1], -r4
   18ed4:	mov	r1, #48	; 0x30
   18ed8:	ldr	r0, [fp, #4]
   18edc:	bl	10ff8 <strchr@plt>
   18ee0:	mov	r3, r0
   18ee4:	cmp	r3, #0
   18ee8:	beq	18f58 <__assert_fail@plt+0x7e4c>
   18eec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ef0:	ldr	r3, [r3]
   18ef4:	add	r3, r3, #1
   18ef8:	ldrb	r3, [r3]
   18efc:	cmp	r3, #68	; 0x44
   18f00:	beq	18f40 <__assert_fail@plt+0x7e34>
   18f04:	cmp	r3, #105	; 0x69
   18f08:	beq	18f18 <__assert_fail@plt+0x7e0c>
   18f0c:	cmp	r3, #66	; 0x42
   18f10:	beq	18f40 <__assert_fail@plt+0x7e34>
   18f14:	b	18f64 <__assert_fail@plt+0x7e58>
   18f18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f1c:	ldr	r3, [r3]
   18f20:	add	r3, r3, #2
   18f24:	ldrb	r3, [r3]
   18f28:	cmp	r3, #66	; 0x42
   18f2c:	bne	18f60 <__assert_fail@plt+0x7e54>
   18f30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f34:	add	r3, r3, #2
   18f38:	str	r3, [fp, #-24]	; 0xffffffe8
   18f3c:	b	18f60 <__assert_fail@plt+0x7e54>
   18f40:	mov	r3, #1000	; 0x3e8
   18f44:	str	r3, [fp, #-20]	; 0xffffffec
   18f48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f4c:	add	r3, r3, #1
   18f50:	str	r3, [fp, #-24]	; 0xffffffe8
   18f54:	b	18f64 <__assert_fail@plt+0x7e58>
   18f58:	nop	{0}
   18f5c:	b	18f64 <__assert_fail@plt+0x7e58>
   18f60:	nop	{0}
   18f64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f68:	ldr	r3, [r3]
   18f6c:	ldrb	r3, [r3]
   18f70:	sub	r3, r3, #66	; 0x42
   18f74:	cmp	r3, #53	; 0x35
   18f78:	ldrls	pc, [pc, r3, lsl #2]
   18f7c:	b	1918c <__assert_fail@plt+0x8080>
   18f80:	andeq	r9, r1, r0, ror r0
   18f84:	andeq	r9, r1, ip, lsl #3
   18f88:	andeq	r9, r1, ip, lsl #3
   18f8c:	muleq	r1, r4, r0
   18f90:	andeq	r9, r1, ip, lsl #3
   18f94:	strheq	r9, [r1], -r0
   18f98:	andeq	r9, r1, ip, lsl #3
   18f9c:	andeq	r9, r1, ip, lsl #3
   18fa0:	andeq	r9, r1, ip, lsl #3
   18fa4:	andeq	r9, r1, ip, asr #1
   18fa8:	andeq	r9, r1, ip, lsl #3
   18fac:	andeq	r9, r1, r8, ror #1
   18fb0:	andeq	r9, r1, ip, lsl #3
   18fb4:	andeq	r9, r1, ip, lsl #3
   18fb8:	andeq	r9, r1, r4, lsl #2
   18fbc:	andeq	r9, r1, ip, lsl #3
   18fc0:	andeq	r9, r1, ip, lsl #3
   18fc4:	andeq	r9, r1, ip, lsl #3
   18fc8:	andeq	r9, r1, r0, lsr #2
   18fcc:	andeq	r9, r1, ip, lsl #3
   18fd0:	andeq	r9, r1, ip, lsl #3
   18fd4:	andeq	r9, r1, ip, lsl #3
   18fd8:	andeq	r9, r1, ip, lsl #3
   18fdc:	andeq	r9, r1, r4, asr r1
   18fe0:	andeq	r9, r1, r0, ror r1
   18fe4:	andeq	r9, r1, ip, lsl #3
   18fe8:	andeq	r9, r1, ip, lsl #3
   18fec:	andeq	r9, r1, ip, lsl #3
   18ff0:	andeq	r9, r1, ip, lsl #3
   18ff4:	andeq	r9, r1, ip, lsl #3
   18ff8:	andeq	r9, r1, ip, lsl #3
   18ffc:	andeq	r9, r1, ip, lsl #3
   19000:	andeq	r9, r1, r8, asr r0
   19004:	andeq	r9, r1, r8, lsl #1
   19008:	andeq	r9, r1, ip, lsl #3
   1900c:	andeq	r9, r1, ip, lsl #3
   19010:	andeq	r9, r1, ip, lsl #3
   19014:	strheq	r9, [r1], -r0
   19018:	andeq	r9, r1, ip, lsl #3
   1901c:	andeq	r9, r1, ip, lsl #3
   19020:	andeq	r9, r1, ip, lsl #3
   19024:	andeq	r9, r1, ip, asr #1
   19028:	andeq	r9, r1, ip, lsl #3
   1902c:	andeq	r9, r1, r8, ror #1
   19030:	andeq	r9, r1, ip, lsl #3
   19034:	andeq	r9, r1, ip, lsl #3
   19038:	andeq	r9, r1, ip, lsl #3
   1903c:	andeq	r9, r1, ip, lsl #3
   19040:	andeq	r9, r1, ip, lsl #3
   19044:	andeq	r9, r1, ip, lsl #3
   19048:	andeq	r9, r1, r0, lsr #2
   1904c:	andeq	r9, r1, ip, lsl #3
   19050:	andeq	r9, r1, ip, lsl #3
   19054:	andeq	r9, r1, ip, lsr r1
   19058:	sub	r3, fp, #40	; 0x28
   1905c:	mov	r1, #512	; 0x200
   19060:	mov	r0, r3
   19064:	bl	18aa8 <__assert_fail@plt+0x799c>
   19068:	str	r0, [fp, #-28]	; 0xffffffe4
   1906c:	b	191a4 <__assert_fail@plt+0x8098>
   19070:	sub	r3, fp, #40	; 0x28
   19074:	mov	r1, #1024	; 0x400
   19078:	mov	r0, r3
   1907c:	bl	18aa8 <__assert_fail@plt+0x799c>
   19080:	str	r0, [fp, #-28]	; 0xffffffe4
   19084:	b	191a4 <__assert_fail@plt+0x8098>
   19088:	mov	r3, #0
   1908c:	str	r3, [fp, #-28]	; 0xffffffe4
   19090:	b	191a4 <__assert_fail@plt+0x8098>
   19094:	sub	r3, fp, #40	; 0x28
   19098:	mov	r2, #6
   1909c:	ldr	r1, [fp, #-20]	; 0xffffffec
   190a0:	mov	r0, r3
   190a4:	bl	18b54 <__assert_fail@plt+0x7a48>
   190a8:	str	r0, [fp, #-28]	; 0xffffffe4
   190ac:	b	191a4 <__assert_fail@plt+0x8098>
   190b0:	sub	r3, fp, #40	; 0x28
   190b4:	mov	r2, #3
   190b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   190bc:	mov	r0, r3
   190c0:	bl	18b54 <__assert_fail@plt+0x7a48>
   190c4:	str	r0, [fp, #-28]	; 0xffffffe4
   190c8:	b	191a4 <__assert_fail@plt+0x8098>
   190cc:	sub	r3, fp, #40	; 0x28
   190d0:	mov	r2, #1
   190d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   190d8:	mov	r0, r3
   190dc:	bl	18b54 <__assert_fail@plt+0x7a48>
   190e0:	str	r0, [fp, #-28]	; 0xffffffe4
   190e4:	b	191a4 <__assert_fail@plt+0x8098>
   190e8:	sub	r3, fp, #40	; 0x28
   190ec:	mov	r2, #2
   190f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   190f4:	mov	r0, r3
   190f8:	bl	18b54 <__assert_fail@plt+0x7a48>
   190fc:	str	r0, [fp, #-28]	; 0xffffffe4
   19100:	b	191a4 <__assert_fail@plt+0x8098>
   19104:	sub	r3, fp, #40	; 0x28
   19108:	mov	r2, #5
   1910c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19110:	mov	r0, r3
   19114:	bl	18b54 <__assert_fail@plt+0x7a48>
   19118:	str	r0, [fp, #-28]	; 0xffffffe4
   1911c:	b	191a4 <__assert_fail@plt+0x8098>
   19120:	sub	r3, fp, #40	; 0x28
   19124:	mov	r2, #4
   19128:	ldr	r1, [fp, #-20]	; 0xffffffec
   1912c:	mov	r0, r3
   19130:	bl	18b54 <__assert_fail@plt+0x7a48>
   19134:	str	r0, [fp, #-28]	; 0xffffffe4
   19138:	b	191a4 <__assert_fail@plt+0x8098>
   1913c:	sub	r3, fp, #40	; 0x28
   19140:	mov	r1, #2
   19144:	mov	r0, r3
   19148:	bl	18aa8 <__assert_fail@plt+0x799c>
   1914c:	str	r0, [fp, #-28]	; 0xffffffe4
   19150:	b	191a4 <__assert_fail@plt+0x8098>
   19154:	sub	r3, fp, #40	; 0x28
   19158:	mov	r2, #8
   1915c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19160:	mov	r0, r3
   19164:	bl	18b54 <__assert_fail@plt+0x7a48>
   19168:	str	r0, [fp, #-28]	; 0xffffffe4
   1916c:	b	191a4 <__assert_fail@plt+0x8098>
   19170:	sub	r3, fp, #40	; 0x28
   19174:	mov	r2, #7
   19178:	ldr	r1, [fp, #-20]	; 0xffffffec
   1917c:	mov	r0, r3
   19180:	bl	18b54 <__assert_fail@plt+0x7a48>
   19184:	str	r0, [fp, #-28]	; 0xffffffe4
   19188:	b	191a4 <__assert_fail@plt+0x8098>
   1918c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19190:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19194:	str	r2, [r3]
   19198:	ldr	r3, [fp, #-8]
   1919c:	orr	r3, r3, #2
   191a0:	b	191fc <__assert_fail@plt+0x80f0>
   191a4:	ldr	r2, [fp, #-8]
   191a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   191ac:	orr	r3, r2, r3
   191b0:	str	r3, [fp, #-8]
   191b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   191b8:	ldr	r2, [r3]
   191bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   191c0:	add	r2, r2, r3
   191c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   191c8:	str	r2, [r3]
   191cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   191d0:	ldr	r3, [r3]
   191d4:	ldrb	r3, [r3]
   191d8:	cmp	r3, #0
   191dc:	beq	191ec <__assert_fail@plt+0x80e0>
   191e0:	ldr	r3, [fp, #-8]
   191e4:	orr	r3, r3, #2
   191e8:	str	r3, [fp, #-8]
   191ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   191f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   191f4:	str	r2, [r3]
   191f8:	ldr	r3, [fp, #-8]
   191fc:	mov	r0, r3
   19200:	sub	sp, fp, #4
   19204:	ldr	fp, [sp]
   19208:	add	sp, sp, #4
   1920c:	pop	{pc}		; (ldr pc, [sp], #4)
   19210:	strd	r4, [sp, #-28]!	; 0xffffffe4
   19214:	strd	r6, [sp, #8]
   19218:	strd	r8, [sp, #16]
   1921c:	str	fp, [sp, #24]
   19220:	add	fp, sp, #24
   19224:	sub	sp, sp, #44	; 0x2c
   19228:	str	r0, [fp, #-40]	; 0xffffffd8
   1922c:	str	r1, [fp, #-44]	; 0xffffffd4
   19230:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19234:	ldrd	r4, [r3]
   19238:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1923c:	mov	r6, r3
   19240:	asr	r7, r6, #31
   19244:	mov	r2, #0
   19248:	mov	r3, #0
   1924c:	strd	r2, [fp, #-60]	; 0xffffffc4
   19250:	cmp	r6, #0
   19254:	sbcs	r3, r7, #0
   19258:	bge	19270 <__assert_fail@plt+0x8164>
   1925c:	orrs	r3, r4, r5
   19260:	beq	19270 <__assert_fail@plt+0x8164>
   19264:	mov	r2, #1
   19268:	mov	r3, #0
   1926c:	strd	r2, [fp, #-60]	; 0xffffffc4
   19270:	mov	r0, #0
   19274:	mov	r1, #0
   19278:	mov	r0, r7
   1927c:	mov	r1, #0
   19280:	mov	r2, #0
   19284:	mov	r3, #0
   19288:	mov	r2, r5
   1928c:	mov	r3, #0
   19290:	cmp	r0, #0
   19294:	bne	192b8 <__assert_fail@plt+0x81ac>
   19298:	cmp	r2, #0
   1929c:	bne	192ac <__assert_fail@plt+0x81a0>
   192a0:	umull	r2, r3, r6, r4
   192a4:	strd	r2, [fp, #-52]	; 0xffffffcc
   192a8:	b	19384 <__assert_fail@plt+0x8278>
   192ac:	mov	r3, r2
   192b0:	mov	r2, r6
   192b4:	b	192c8 <__assert_fail@plt+0x81bc>
   192b8:	cmp	r2, #0
   192bc:	bne	19340 <__assert_fail@plt+0x8234>
   192c0:	mov	r3, r0
   192c4:	mov	r2, r4
   192c8:	umull	r8, r9, r6, r4
   192cc:	umull	r2, r3, r2, r3
   192d0:	mov	r0, r2
   192d4:	mov	r1, r3
   192d8:	mov	r2, #0
   192dc:	mov	r3, #0
   192e0:	mov	r2, r9
   192e4:	mov	r3, #0
   192e8:	adds	ip, r0, r2
   192ec:	str	ip, [fp, #-68]	; 0xffffffbc
   192f0:	adc	r3, r1, r3
   192f4:	str	r3, [fp, #-64]	; 0xffffffc0
   192f8:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   192fc:	mov	r2, #0
   19300:	mov	r3, #0
   19304:	mov	r2, r1
   19308:	asr	r3, r1, #31
   1930c:	cmp	r2, #0
   19310:	bne	1935c <__assert_fail@plt+0x8250>
   19314:	mov	r2, #0
   19318:	mov	r3, #0
   1931c:	mov	r3, r0
   19320:	mov	r2, #0
   19324:	mov	r0, r8
   19328:	mov	r1, #0
   1932c:	orr	ip, r2, r0
   19330:	str	ip, [fp, #-52]	; 0xffffffcc
   19334:	orr	r3, r3, r1
   19338:	str	r3, [fp, #-48]	; 0xffffffd0
   1933c:	b	19384 <__assert_fail@plt+0x8278>
   19340:	mul	r2, r4, r7
   19344:	mul	r3, r6, r5
   19348:	add	r1, r2, r3
   1934c:	umull	r2, r3, r6, r4
   19350:	add	r1, r1, r3
   19354:	mov	r3, r1
   19358:	strd	r2, [fp, #-52]	; 0xffffffcc
   1935c:	mul	r2, r4, r7
   19360:	mul	r3, r6, r5
   19364:	add	r1, r2, r3
   19368:	umull	r2, r3, r6, r4
   1936c:	add	r1, r1, r3
   19370:	mov	r3, r1
   19374:	strd	r2, [fp, #-52]	; 0xffffffcc
   19378:	mov	r2, #1
   1937c:	mov	r3, #0
   19380:	strd	r2, [fp, #-60]	; 0xffffffc4
   19384:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   19388:	strd	r2, [fp, #-36]	; 0xffffffdc
   1938c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   19390:	mov	r3, r2
   19394:	and	r3, r3, #1
   19398:	uxtb	r3, r3
   1939c:	cmp	r3, #0
   193a0:	beq	193bc <__assert_fail@plt+0x82b0>
   193a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   193a8:	mvn	r2, #0
   193ac:	mvn	r3, #0
   193b0:	strd	r2, [r1]
   193b4:	mov	r3, #1
   193b8:	b	193cc <__assert_fail@plt+0x82c0>
   193bc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   193c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   193c4:	strd	r2, [r1]
   193c8:	mov	r3, #0
   193cc:	mov	r0, r3
   193d0:	sub	sp, fp, #24
   193d4:	ldrd	r4, [sp]
   193d8:	ldrd	r6, [sp, #8]
   193dc:	ldrd	r8, [sp, #16]
   193e0:	ldr	fp, [sp, #24]
   193e4:	add	sp, sp, #28
   193e8:	bx	lr
   193ec:	str	fp, [sp, #-8]!
   193f0:	str	lr, [sp, #4]
   193f4:	add	fp, sp, #4
   193f8:	sub	sp, sp, #24
   193fc:	str	r0, [fp, #-16]
   19400:	str	r1, [fp, #-20]	; 0xffffffec
   19404:	str	r2, [fp, #-24]	; 0xffffffe8
   19408:	mov	r3, #0
   1940c:	str	r3, [fp, #-8]
   19410:	b	19430 <__assert_fail@plt+0x8324>
   19414:	ldr	r1, [fp, #-20]	; 0xffffffec
   19418:	ldr	r0, [fp, #-16]
   1941c:	bl	19210 <__assert_fail@plt+0x8104>
   19420:	mov	r2, r0
   19424:	ldr	r3, [fp, #-8]
   19428:	orr	r3, r3, r2
   1942c:	str	r3, [fp, #-8]
   19430:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19434:	sub	r2, r3, #1
   19438:	str	r2, [fp, #-24]	; 0xffffffe8
   1943c:	cmp	r3, #0
   19440:	bne	19414 <__assert_fail@plt+0x8308>
   19444:	ldr	r3, [fp, #-8]
   19448:	mov	r0, r3
   1944c:	sub	sp, fp, #4
   19450:	ldr	fp, [sp]
   19454:	add	sp, sp, #4
   19458:	pop	{pc}		; (ldr pc, [sp], #4)
   1945c:	str	fp, [sp, #-8]!
   19460:	str	lr, [sp, #4]
   19464:	add	fp, sp, #4
   19468:	sub	sp, sp, #56	; 0x38
   1946c:	str	r0, [fp, #-48]	; 0xffffffd0
   19470:	str	r1, [fp, #-52]	; 0xffffffcc
   19474:	str	r2, [fp, #-56]	; 0xffffffc8
   19478:	str	r3, [fp, #-60]	; 0xffffffc4
   1947c:	mov	r3, #0
   19480:	str	r3, [fp, #-8]
   19484:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19488:	cmp	r3, #0
   1948c:	blt	1949c <__assert_fail@plt+0x8390>
   19490:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19494:	cmp	r3, #36	; 0x24
   19498:	ble	194bc <__assert_fail@plt+0x83b0>
   1949c:	movw	r3, #49532	; 0xc17c
   194a0:	movt	r3, #1
   194a4:	mov	r2, #85	; 0x55
   194a8:	movw	r1, #49476	; 0xc144
   194ac:	movt	r1, #1
   194b0:	movw	r0, #49492	; 0xc154
   194b4:	movt	r0, #1
   194b8:	bl	1110c <__assert_fail@plt>
   194bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   194c0:	cmp	r3, #0
   194c4:	bne	194d0 <__assert_fail@plt+0x83c4>
   194c8:	sub	r3, fp, #36	; 0x24
   194cc:	b	194d4 <__assert_fail@plt+0x83c8>
   194d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   194d4:	str	r3, [fp, #-32]	; 0xffffffe0
   194d8:	bl	11010 <__errno_location@plt>
   194dc:	mov	r2, r0
   194e0:	mov	r3, #0
   194e4:	str	r3, [r2]
   194e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   194ec:	str	r3, [fp, #-12]
   194f0:	ldr	r3, [fp, #-12]
   194f4:	ldrb	r3, [r3]
   194f8:	strb	r3, [fp, #-13]
   194fc:	b	19518 <__assert_fail@plt+0x840c>
   19500:	ldr	r3, [fp, #-12]
   19504:	add	r3, r3, #1
   19508:	str	r3, [fp, #-12]
   1950c:	ldr	r3, [fp, #-12]
   19510:	ldrb	r3, [r3]
   19514:	strb	r3, [fp, #-13]
   19518:	bl	10fbc <__ctype_b_loc@plt>
   1951c:	mov	r3, r0
   19520:	ldr	r2, [r3]
   19524:	ldrb	r3, [fp, #-13]
   19528:	lsl	r3, r3, #1
   1952c:	add	r3, r2, r3
   19530:	ldrh	r3, [r3]
   19534:	and	r3, r3, #8192	; 0x2000
   19538:	cmp	r3, #0
   1953c:	bne	19500 <__assert_fail@plt+0x83f4>
   19540:	ldrb	r3, [fp, #-13]
   19544:	cmp	r3, #45	; 0x2d
   19548:	bne	19554 <__assert_fail@plt+0x8448>
   1954c:	mov	r3, #4
   19550:	b	19a9c <__assert_fail@plt+0x8990>
   19554:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19558:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1955c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19560:	bl	11040 <strtoumax@plt>
   19564:	mov	r2, r0
   19568:	mov	r3, r1
   1956c:	strd	r2, [fp, #-44]	; 0xffffffd4
   19570:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19574:	ldr	r3, [r3]
   19578:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1957c:	cmp	r2, r3
   19580:	bne	195e0 <__assert_fail@plt+0x84d4>
   19584:	ldr	r3, [fp, #4]
   19588:	cmp	r3, #0
   1958c:	beq	195d8 <__assert_fail@plt+0x84cc>
   19590:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19594:	ldr	r3, [r3]
   19598:	ldrb	r3, [r3]
   1959c:	cmp	r3, #0
   195a0:	beq	195d8 <__assert_fail@plt+0x84cc>
   195a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   195a8:	ldr	r3, [r3]
   195ac:	ldrb	r3, [r3]
   195b0:	mov	r1, r3
   195b4:	ldr	r0, [fp, #4]
   195b8:	bl	10ff8 <strchr@plt>
   195bc:	mov	r3, r0
   195c0:	cmp	r3, #0
   195c4:	beq	195d8 <__assert_fail@plt+0x84cc>
   195c8:	mov	r2, #1
   195cc:	mov	r3, #0
   195d0:	strd	r2, [fp, #-44]	; 0xffffffd4
   195d4:	b	19618 <__assert_fail@plt+0x850c>
   195d8:	mov	r3, #4
   195dc:	b	19a9c <__assert_fail@plt+0x8990>
   195e0:	bl	11010 <__errno_location@plt>
   195e4:	mov	r3, r0
   195e8:	ldr	r3, [r3]
   195ec:	cmp	r3, #0
   195f0:	beq	19618 <__assert_fail@plt+0x850c>
   195f4:	bl	11010 <__errno_location@plt>
   195f8:	mov	r3, r0
   195fc:	ldr	r3, [r3]
   19600:	cmp	r3, #34	; 0x22
   19604:	beq	19610 <__assert_fail@plt+0x8504>
   19608:	mov	r3, #4
   1960c:	b	19a9c <__assert_fail@plt+0x8990>
   19610:	mov	r3, #1
   19614:	str	r3, [fp, #-8]
   19618:	ldr	r3, [fp, #4]
   1961c:	cmp	r3, #0
   19620:	bne	19638 <__assert_fail@plt+0x852c>
   19624:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19628:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1962c:	strd	r2, [r1]
   19630:	ldr	r3, [fp, #-8]
   19634:	b	19a9c <__assert_fail@plt+0x8990>
   19638:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1963c:	ldr	r3, [r3]
   19640:	ldrb	r3, [r3]
   19644:	cmp	r3, #0
   19648:	beq	19a8c <__assert_fail@plt+0x8980>
   1964c:	mov	r3, #1024	; 0x400
   19650:	str	r3, [fp, #-20]	; 0xffffffec
   19654:	mov	r3, #1
   19658:	str	r3, [fp, #-24]	; 0xffffffe8
   1965c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19660:	ldr	r3, [r3]
   19664:	ldrb	r3, [r3]
   19668:	mov	r1, r3
   1966c:	ldr	r0, [fp, #4]
   19670:	bl	10ff8 <strchr@plt>
   19674:	mov	r3, r0
   19678:	cmp	r3, #0
   1967c:	bne	19698 <__assert_fail@plt+0x858c>
   19680:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19684:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19688:	strd	r2, [r1]
   1968c:	ldr	r3, [fp, #-8]
   19690:	orr	r3, r3, #2
   19694:	b	19a9c <__assert_fail@plt+0x8990>
   19698:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1969c:	ldr	r3, [r3]
   196a0:	ldrb	r3, [r3]
   196a4:	sub	r3, r3, #69	; 0x45
   196a8:	cmp	r3, #47	; 0x2f
   196ac:	ldrls	pc, [pc, r3, lsl #2]
   196b0:	b	19804 <__assert_fail@plt+0x86f8>
   196b4:	andeq	r9, r1, r4, ror r7
   196b8:	andeq	r9, r1, r4, lsl #16
   196bc:	andeq	r9, r1, r4, ror r7
   196c0:	andeq	r9, r1, r4, lsl #16
   196c4:	andeq	r9, r1, r4, lsl #16
   196c8:	andeq	r9, r1, r4, lsl #16
   196cc:	andeq	r9, r1, r4, ror r7
   196d0:	andeq	r9, r1, r4, lsl #16
   196d4:	andeq	r9, r1, r4, ror r7
   196d8:	andeq	r9, r1, r4, lsl #16
   196dc:	andeq	r9, r1, r4, lsl #16
   196e0:	andeq	r9, r1, r4, ror r7
   196e4:	andeq	r9, r1, r4, lsl #16
   196e8:	andeq	r9, r1, r4, lsl #16
   196ec:	andeq	r9, r1, r4, lsl #16
   196f0:	andeq	r9, r1, r4, ror r7
   196f4:	andeq	r9, r1, r4, lsl #16
   196f8:	andeq	r9, r1, r4, lsl #16
   196fc:	andeq	r9, r1, r4, lsl #16
   19700:	andeq	r9, r1, r4, lsl #16
   19704:	andeq	r9, r1, r4, ror r7
   19708:	andeq	r9, r1, r4, ror r7
   1970c:	andeq	r9, r1, r4, lsl #16
   19710:	andeq	r9, r1, r4, lsl #16
   19714:	andeq	r9, r1, r4, lsl #16
   19718:	andeq	r9, r1, r4, lsl #16
   1971c:	andeq	r9, r1, r4, lsl #16
   19720:	andeq	r9, r1, r4, lsl #16
   19724:	andeq	r9, r1, r4, lsl #16
   19728:	andeq	r9, r1, r4, lsl #16
   1972c:	andeq	r9, r1, r4, lsl #16
   19730:	andeq	r9, r1, r4, lsl #16
   19734:	andeq	r9, r1, r4, lsl #16
   19738:	andeq	r9, r1, r4, lsl #16
   1973c:	andeq	r9, r1, r4, ror r7
   19740:	andeq	r9, r1, r4, lsl #16
   19744:	andeq	r9, r1, r4, lsl #16
   19748:	andeq	r9, r1, r4, lsl #16
   1974c:	andeq	r9, r1, r4, ror r7
   19750:	andeq	r9, r1, r4, lsl #16
   19754:	andeq	r9, r1, r4, ror r7
   19758:	andeq	r9, r1, r4, lsl #16
   1975c:	andeq	r9, r1, r4, lsl #16
   19760:	andeq	r9, r1, r4, lsl #16
   19764:	andeq	r9, r1, r4, lsl #16
   19768:	andeq	r9, r1, r4, lsl #16
   1976c:	andeq	r9, r1, r4, lsl #16
   19770:	andeq	r9, r1, r4, ror r7
   19774:	mov	r1, #48	; 0x30
   19778:	ldr	r0, [fp, #4]
   1977c:	bl	10ff8 <strchr@plt>
   19780:	mov	r3, r0
   19784:	cmp	r3, #0
   19788:	beq	197f8 <__assert_fail@plt+0x86ec>
   1978c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19790:	ldr	r3, [r3]
   19794:	add	r3, r3, #1
   19798:	ldrb	r3, [r3]
   1979c:	cmp	r3, #68	; 0x44
   197a0:	beq	197e0 <__assert_fail@plt+0x86d4>
   197a4:	cmp	r3, #105	; 0x69
   197a8:	beq	197b8 <__assert_fail@plt+0x86ac>
   197ac:	cmp	r3, #66	; 0x42
   197b0:	beq	197e0 <__assert_fail@plt+0x86d4>
   197b4:	b	19804 <__assert_fail@plt+0x86f8>
   197b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   197bc:	ldr	r3, [r3]
   197c0:	add	r3, r3, #2
   197c4:	ldrb	r3, [r3]
   197c8:	cmp	r3, #66	; 0x42
   197cc:	bne	19800 <__assert_fail@plt+0x86f4>
   197d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   197d4:	add	r3, r3, #2
   197d8:	str	r3, [fp, #-24]	; 0xffffffe8
   197dc:	b	19800 <__assert_fail@plt+0x86f4>
   197e0:	mov	r3, #1000	; 0x3e8
   197e4:	str	r3, [fp, #-20]	; 0xffffffec
   197e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   197ec:	add	r3, r3, #1
   197f0:	str	r3, [fp, #-24]	; 0xffffffe8
   197f4:	b	19804 <__assert_fail@plt+0x86f8>
   197f8:	nop	{0}
   197fc:	b	19804 <__assert_fail@plt+0x86f8>
   19800:	nop	{0}
   19804:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19808:	ldr	r3, [r3]
   1980c:	ldrb	r3, [r3]
   19810:	sub	r3, r3, #66	; 0x42
   19814:	cmp	r3, #53	; 0x35
   19818:	ldrls	pc, [pc, r3, lsl #2]
   1981c:	b	19a2c <__assert_fail@plt+0x8920>
   19820:	andeq	r9, r1, r0, lsl r9
   19824:	andeq	r9, r1, ip, lsr #20
   19828:	andeq	r9, r1, ip, lsr #20
   1982c:	andeq	r9, r1, r4, lsr r9
   19830:	andeq	r9, r1, ip, lsr #20
   19834:	andeq	r9, r1, r0, asr r9
   19838:	andeq	r9, r1, ip, lsr #20
   1983c:	andeq	r9, r1, ip, lsr #20
   19840:	andeq	r9, r1, ip, lsr #20
   19844:	andeq	r9, r1, ip, ror #18
   19848:	andeq	r9, r1, ip, lsr #20
   1984c:	andeq	r9, r1, r8, lsl #19
   19850:	andeq	r9, r1, ip, lsr #20
   19854:	andeq	r9, r1, ip, lsr #20
   19858:	andeq	r9, r1, r4, lsr #19
   1985c:	andeq	r9, r1, ip, lsr #20
   19860:	andeq	r9, r1, ip, lsr #20
   19864:	andeq	r9, r1, ip, lsr #20
   19868:	andeq	r9, r1, r0, asr #19
   1986c:	andeq	r9, r1, ip, lsr #20
   19870:	andeq	r9, r1, ip, lsr #20
   19874:	andeq	r9, r1, ip, lsr #20
   19878:	andeq	r9, r1, ip, lsr #20
   1987c:	strdeq	r9, [r1], -r4
   19880:	andeq	r9, r1, r0, lsl sl
   19884:	andeq	r9, r1, ip, lsr #20
   19888:	andeq	r9, r1, ip, lsr #20
   1988c:	andeq	r9, r1, ip, lsr #20
   19890:	andeq	r9, r1, ip, lsr #20
   19894:	andeq	r9, r1, ip, lsr #20
   19898:	andeq	r9, r1, ip, lsr #20
   1989c:	andeq	r9, r1, ip, lsr #20
   198a0:	strdeq	r9, [r1], -r8
   198a4:	andeq	r9, r1, r8, lsr #18
   198a8:	andeq	r9, r1, ip, lsr #20
   198ac:	andeq	r9, r1, ip, lsr #20
   198b0:	andeq	r9, r1, ip, lsr #20
   198b4:	andeq	r9, r1, r0, asr r9
   198b8:	andeq	r9, r1, ip, lsr #20
   198bc:	andeq	r9, r1, ip, lsr #20
   198c0:	andeq	r9, r1, ip, lsr #20
   198c4:	andeq	r9, r1, ip, ror #18
   198c8:	andeq	r9, r1, ip, lsr #20
   198cc:	andeq	r9, r1, r8, lsl #19
   198d0:	andeq	r9, r1, ip, lsr #20
   198d4:	andeq	r9, r1, ip, lsr #20
   198d8:	andeq	r9, r1, ip, lsr #20
   198dc:	andeq	r9, r1, ip, lsr #20
   198e0:	andeq	r9, r1, ip, lsr #20
   198e4:	andeq	r9, r1, ip, lsr #20
   198e8:	andeq	r9, r1, r0, asr #19
   198ec:	andeq	r9, r1, ip, lsr #20
   198f0:	andeq	r9, r1, ip, lsr #20
   198f4:	ldrdeq	r9, [r1], -ip
   198f8:	sub	r3, fp, #44	; 0x2c
   198fc:	mov	r1, #512	; 0x200
   19900:	mov	r0, r3
   19904:	bl	19210 <__assert_fail@plt+0x8104>
   19908:	str	r0, [fp, #-28]	; 0xffffffe4
   1990c:	b	19a44 <__assert_fail@plt+0x8938>
   19910:	sub	r3, fp, #44	; 0x2c
   19914:	mov	r1, #1024	; 0x400
   19918:	mov	r0, r3
   1991c:	bl	19210 <__assert_fail@plt+0x8104>
   19920:	str	r0, [fp, #-28]	; 0xffffffe4
   19924:	b	19a44 <__assert_fail@plt+0x8938>
   19928:	mov	r3, #0
   1992c:	str	r3, [fp, #-28]	; 0xffffffe4
   19930:	b	19a44 <__assert_fail@plt+0x8938>
   19934:	sub	r3, fp, #44	; 0x2c
   19938:	mov	r2, #6
   1993c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19940:	mov	r0, r3
   19944:	bl	193ec <__assert_fail@plt+0x82e0>
   19948:	str	r0, [fp, #-28]	; 0xffffffe4
   1994c:	b	19a44 <__assert_fail@plt+0x8938>
   19950:	sub	r3, fp, #44	; 0x2c
   19954:	mov	r2, #3
   19958:	ldr	r1, [fp, #-20]	; 0xffffffec
   1995c:	mov	r0, r3
   19960:	bl	193ec <__assert_fail@plt+0x82e0>
   19964:	str	r0, [fp, #-28]	; 0xffffffe4
   19968:	b	19a44 <__assert_fail@plt+0x8938>
   1996c:	sub	r3, fp, #44	; 0x2c
   19970:	mov	r2, #1
   19974:	ldr	r1, [fp, #-20]	; 0xffffffec
   19978:	mov	r0, r3
   1997c:	bl	193ec <__assert_fail@plt+0x82e0>
   19980:	str	r0, [fp, #-28]	; 0xffffffe4
   19984:	b	19a44 <__assert_fail@plt+0x8938>
   19988:	sub	r3, fp, #44	; 0x2c
   1998c:	mov	r2, #2
   19990:	ldr	r1, [fp, #-20]	; 0xffffffec
   19994:	mov	r0, r3
   19998:	bl	193ec <__assert_fail@plt+0x82e0>
   1999c:	str	r0, [fp, #-28]	; 0xffffffe4
   199a0:	b	19a44 <__assert_fail@plt+0x8938>
   199a4:	sub	r3, fp, #44	; 0x2c
   199a8:	mov	r2, #5
   199ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   199b0:	mov	r0, r3
   199b4:	bl	193ec <__assert_fail@plt+0x82e0>
   199b8:	str	r0, [fp, #-28]	; 0xffffffe4
   199bc:	b	19a44 <__assert_fail@plt+0x8938>
   199c0:	sub	r3, fp, #44	; 0x2c
   199c4:	mov	r2, #4
   199c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   199cc:	mov	r0, r3
   199d0:	bl	193ec <__assert_fail@plt+0x82e0>
   199d4:	str	r0, [fp, #-28]	; 0xffffffe4
   199d8:	b	19a44 <__assert_fail@plt+0x8938>
   199dc:	sub	r3, fp, #44	; 0x2c
   199e0:	mov	r1, #2
   199e4:	mov	r0, r3
   199e8:	bl	19210 <__assert_fail@plt+0x8104>
   199ec:	str	r0, [fp, #-28]	; 0xffffffe4
   199f0:	b	19a44 <__assert_fail@plt+0x8938>
   199f4:	sub	r3, fp, #44	; 0x2c
   199f8:	mov	r2, #8
   199fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   19a00:	mov	r0, r3
   19a04:	bl	193ec <__assert_fail@plt+0x82e0>
   19a08:	str	r0, [fp, #-28]	; 0xffffffe4
   19a0c:	b	19a44 <__assert_fail@plt+0x8938>
   19a10:	sub	r3, fp, #44	; 0x2c
   19a14:	mov	r2, #7
   19a18:	ldr	r1, [fp, #-20]	; 0xffffffec
   19a1c:	mov	r0, r3
   19a20:	bl	193ec <__assert_fail@plt+0x82e0>
   19a24:	str	r0, [fp, #-28]	; 0xffffffe4
   19a28:	b	19a44 <__assert_fail@plt+0x8938>
   19a2c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19a30:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19a34:	strd	r2, [r1]
   19a38:	ldr	r3, [fp, #-8]
   19a3c:	orr	r3, r3, #2
   19a40:	b	19a9c <__assert_fail@plt+0x8990>
   19a44:	ldr	r2, [fp, #-8]
   19a48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19a4c:	orr	r3, r2, r3
   19a50:	str	r3, [fp, #-8]
   19a54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19a58:	ldr	r2, [r3]
   19a5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a60:	add	r2, r2, r3
   19a64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19a68:	str	r2, [r3]
   19a6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19a70:	ldr	r3, [r3]
   19a74:	ldrb	r3, [r3]
   19a78:	cmp	r3, #0
   19a7c:	beq	19a8c <__assert_fail@plt+0x8980>
   19a80:	ldr	r3, [fp, #-8]
   19a84:	orr	r3, r3, #2
   19a88:	str	r3, [fp, #-8]
   19a8c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19a90:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19a94:	strd	r2, [r1]
   19a98:	ldr	r3, [fp, #-8]
   19a9c:	mov	r0, r3
   19aa0:	sub	sp, fp, #4
   19aa4:	ldr	fp, [sp]
   19aa8:	add	sp, sp, #4
   19aac:	pop	{pc}		; (ldr pc, [sp], #4)
   19ab0:	str	fp, [sp, #-8]!
   19ab4:	str	lr, [sp, #4]
   19ab8:	add	fp, sp, #4
   19abc:	sub	sp, sp, #16
   19ac0:	str	r0, [fp, #-16]
   19ac4:	str	r1, [fp, #-20]	; 0xffffffec
   19ac8:	ldr	r3, [fp, #-16]
   19acc:	cmp	r3, #0
   19ad0:	beq	19ae0 <__assert_fail@plt+0x89d4>
   19ad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   19ad8:	cmp	r3, #0
   19adc:	bne	19af0 <__assert_fail@plt+0x89e4>
   19ae0:	mov	r3, #1
   19ae4:	str	r3, [fp, #-20]	; 0xffffffec
   19ae8:	ldr	r3, [fp, #-20]	; 0xffffffec
   19aec:	str	r3, [fp, #-16]
   19af0:	mov	ip, #0
   19af4:	ldr	r2, [fp, #-16]
   19af8:	ldr	r3, [fp, #-20]	; 0xffffffec
   19afc:	umull	r0, r1, r2, r3
   19b00:	mov	r2, #0
   19b04:	mov	r3, #0
   19b08:	mov	r2, r1
   19b0c:	mov	r3, #0
   19b10:	cmp	r2, #0
   19b14:	beq	19b1c <__assert_fail@plt+0x8a10>
   19b18:	mov	ip, #1
   19b1c:	cmp	r0, #0
   19b20:	bge	19b28 <__assert_fail@plt+0x8a1c>
   19b24:	mov	ip, #1
   19b28:	mov	r3, ip
   19b2c:	and	r3, r3, #1
   19b30:	uxtb	r3, r3
   19b34:	cmp	r3, #0
   19b38:	beq	19b54 <__assert_fail@plt+0x8a48>
   19b3c:	bl	11010 <__errno_location@plt>
   19b40:	mov	r2, r0
   19b44:	mov	r3, #12
   19b48:	str	r3, [r2]
   19b4c:	mov	r3, #0
   19b50:	b	19b6c <__assert_fail@plt+0x8a60>
   19b54:	ldr	r1, [fp, #-20]	; 0xffffffec
   19b58:	ldr	r0, [fp, #-16]
   19b5c:	bl	10e54 <calloc@plt>
   19b60:	mov	r3, r0
   19b64:	str	r3, [fp, #-8]
   19b68:	ldr	r3, [fp, #-8]
   19b6c:	mov	r0, r3
   19b70:	sub	sp, fp, #4
   19b74:	ldr	fp, [sp]
   19b78:	add	sp, sp, #4
   19b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   19b80:	str	fp, [sp, #-8]!
   19b84:	str	lr, [sp, #4]
   19b88:	add	fp, sp, #4
   19b8c:	sub	sp, sp, #16
   19b90:	str	r0, [fp, #-16]
   19b94:	ldr	r3, [fp, #-16]
   19b98:	cmp	r3, #0
   19b9c:	bne	19ba8 <__assert_fail@plt+0x8a9c>
   19ba0:	mov	r3, #1
   19ba4:	str	r3, [fp, #-16]
   19ba8:	mov	r2, #0
   19bac:	ldr	r3, [fp, #-16]
   19bb0:	cmp	r3, #0
   19bb4:	bge	19bbc <__assert_fail@plt+0x8ab0>
   19bb8:	mov	r2, #1
   19bbc:	mov	r3, r2
   19bc0:	and	r3, r3, #1
   19bc4:	uxtb	r3, r3
   19bc8:	cmp	r3, #0
   19bcc:	beq	19be8 <__assert_fail@plt+0x8adc>
   19bd0:	bl	11010 <__errno_location@plt>
   19bd4:	mov	r2, r0
   19bd8:	mov	r3, #12
   19bdc:	str	r3, [r2]
   19be0:	mov	r3, #0
   19be4:	b	19bfc <__assert_fail@plt+0x8af0>
   19be8:	ldr	r0, [fp, #-16]
   19bec:	bl	10f80 <malloc@plt>
   19bf0:	mov	r3, r0
   19bf4:	str	r3, [fp, #-8]
   19bf8:	ldr	r3, [fp, #-8]
   19bfc:	mov	r0, r3
   19c00:	sub	sp, fp, #4
   19c04:	ldr	fp, [sp]
   19c08:	add	sp, sp, #4
   19c0c:	pop	{pc}		; (ldr pc, [sp], #4)
   19c10:	str	fp, [sp, #-8]!
   19c14:	str	lr, [sp, #4]
   19c18:	add	fp, sp, #4
   19c1c:	sub	sp, sp, #16
   19c20:	str	r0, [fp, #-16]
   19c24:	str	r1, [fp, #-20]	; 0xffffffec
   19c28:	ldr	r3, [fp, #-16]
   19c2c:	cmp	r3, #0
   19c30:	bne	19c44 <__assert_fail@plt+0x8b38>
   19c34:	ldr	r0, [fp, #-20]	; 0xffffffec
   19c38:	bl	19b80 <__assert_fail@plt+0x8a74>
   19c3c:	mov	r3, r0
   19c40:	b	19cb4 <__assert_fail@plt+0x8ba8>
   19c44:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c48:	cmp	r3, #0
   19c4c:	bne	19c60 <__assert_fail@plt+0x8b54>
   19c50:	ldr	r0, [fp, #-16]
   19c54:	bl	146d8 <__assert_fail@plt+0x35cc>
   19c58:	mov	r3, #0
   19c5c:	b	19cb4 <__assert_fail@plt+0x8ba8>
   19c60:	mov	r2, #0
   19c64:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c68:	cmp	r3, #0
   19c6c:	bge	19c74 <__assert_fail@plt+0x8b68>
   19c70:	mov	r2, #1
   19c74:	mov	r3, r2
   19c78:	and	r3, r3, #1
   19c7c:	uxtb	r3, r3
   19c80:	cmp	r3, #0
   19c84:	beq	19ca0 <__assert_fail@plt+0x8b94>
   19c88:	bl	11010 <__errno_location@plt>
   19c8c:	mov	r2, r0
   19c90:	mov	r3, #12
   19c94:	str	r3, [r2]
   19c98:	mov	r3, #0
   19c9c:	b	19cb4 <__assert_fail@plt+0x8ba8>
   19ca0:	ldr	r1, [fp, #-20]	; 0xffffffec
   19ca4:	ldr	r0, [fp, #-16]
   19ca8:	bl	10efc <realloc@plt>
   19cac:	str	r0, [fp, #-8]
   19cb0:	ldr	r3, [fp, #-8]
   19cb4:	mov	r0, r3
   19cb8:	sub	sp, fp, #4
   19cbc:	ldr	fp, [sp]
   19cc0:	add	sp, sp, #4
   19cc4:	pop	{pc}		; (ldr pc, [sp], #4)
   19cc8:	strd	r4, [sp, #-16]!
   19ccc:	str	fp, [sp, #8]
   19cd0:	str	lr, [sp, #12]
   19cd4:	add	fp, sp, #12
   19cd8:	sub	sp, sp, #16
   19cdc:	str	r0, [fp, #-24]	; 0xffffffe8
   19ce0:	str	r1, [fp, #-28]	; 0xffffffe4
   19ce4:	ldr	r5, [fp, #-24]	; 0xffffffe8
   19ce8:	ldr	r4, [fp, #-28]	; 0xffffffe4
   19cec:	cmp	r5, r4
   19cf0:	bne	19cfc <__assert_fail@plt+0x8bf0>
   19cf4:	mov	r3, #0
   19cf8:	b	19d5c <__assert_fail@plt+0x8c50>
   19cfc:	ldrb	r3, [r5]
   19d00:	mov	r0, r3
   19d04:	bl	1ad00 <__assert_fail@plt+0x9bf4>
   19d08:	mov	r3, r0
   19d0c:	strb	r3, [fp, #-13]
   19d10:	ldrb	r3, [r4]
   19d14:	mov	r0, r3
   19d18:	bl	1ad00 <__assert_fail@plt+0x9bf4>
   19d1c:	mov	r3, r0
   19d20:	strb	r3, [fp, #-14]
   19d24:	ldrb	r3, [fp, #-13]
   19d28:	cmp	r3, #0
   19d2c:	beq	19d4c <__assert_fail@plt+0x8c40>
   19d30:	add	r5, r5, #1
   19d34:	add	r4, r4, #1
   19d38:	ldrb	r2, [fp, #-13]
   19d3c:	ldrb	r3, [fp, #-14]
   19d40:	cmp	r2, r3
   19d44:	beq	19cfc <__assert_fail@plt+0x8bf0>
   19d48:	b	19d50 <__assert_fail@plt+0x8c44>
   19d4c:	nop	{0}
   19d50:	ldrb	r2, [fp, #-13]
   19d54:	ldrb	r3, [fp, #-14]
   19d58:	sub	r3, r2, r3
   19d5c:	mov	r0, r3
   19d60:	sub	sp, fp, #12
   19d64:	ldrd	r4, [sp]
   19d68:	ldr	fp, [sp, #8]
   19d6c:	add	sp, sp, #12
   19d70:	pop	{pc}		; (ldr pc, [sp], #4)
   19d74:	str	fp, [sp, #-8]!
   19d78:	str	lr, [sp, #4]
   19d7c:	add	fp, sp, #4
   19d80:	sub	sp, sp, #16
   19d84:	str	r0, [fp, #-16]
   19d88:	ldr	r0, [fp, #-16]
   19d8c:	bl	10f44 <__fpending@plt>
   19d90:	mov	r3, r0
   19d94:	cmp	r3, #0
   19d98:	movne	r3, #1
   19d9c:	moveq	r3, #0
   19da0:	strb	r3, [fp, #-5]
   19da4:	ldr	r0, [fp, #-16]
   19da8:	bl	10f50 <ferror_unlocked@plt>
   19dac:	mov	r3, r0
   19db0:	cmp	r3, #0
   19db4:	movne	r3, #1
   19db8:	moveq	r3, #0
   19dbc:	strb	r3, [fp, #-6]
   19dc0:	ldr	r0, [fp, #-16]
   19dc4:	bl	143fc <__assert_fail@plt+0x32f0>
   19dc8:	mov	r3, r0
   19dcc:	cmp	r3, #0
   19dd0:	movne	r3, #1
   19dd4:	moveq	r3, #0
   19dd8:	strb	r3, [fp, #-7]
   19ddc:	ldrb	r3, [fp, #-6]
   19de0:	cmp	r3, #0
   19de4:	bne	19e14 <__assert_fail@plt+0x8d08>
   19de8:	ldrb	r3, [fp, #-7]
   19dec:	cmp	r3, #0
   19df0:	beq	19e40 <__assert_fail@plt+0x8d34>
   19df4:	ldrb	r3, [fp, #-5]
   19df8:	cmp	r3, #0
   19dfc:	bne	19e14 <__assert_fail@plt+0x8d08>
   19e00:	bl	11010 <__errno_location@plt>
   19e04:	mov	r3, r0
   19e08:	ldr	r3, [r3]
   19e0c:	cmp	r3, #9
   19e10:	beq	19e40 <__assert_fail@plt+0x8d34>
   19e14:	ldrb	r3, [fp, #-7]
   19e18:	eor	r3, r3, #1
   19e1c:	uxtb	r3, r3
   19e20:	cmp	r3, #0
   19e24:	beq	19e38 <__assert_fail@plt+0x8d2c>
   19e28:	bl	11010 <__errno_location@plt>
   19e2c:	mov	r2, r0
   19e30:	mov	r3, #0
   19e34:	str	r3, [r2]
   19e38:	mvn	r3, #0
   19e3c:	b	19e44 <__assert_fail@plt+0x8d38>
   19e40:	mov	r3, #0
   19e44:	mov	r0, r3
   19e48:	sub	sp, fp, #4
   19e4c:	ldr	fp, [sp]
   19e50:	add	sp, sp, #4
   19e54:	pop	{pc}		; (ldr pc, [sp], #4)
   19e58:	push	{r1, r2, r3}
   19e5c:	str	fp, [sp, #-8]!
   19e60:	str	lr, [sp, #4]
   19e64:	add	fp, sp, #4
   19e68:	sub	sp, sp, #36	; 0x24
   19e6c:	str	r0, [fp, #-36]	; 0xffffffdc
   19e70:	mvn	r3, #0
   19e74:	str	r3, [fp, #-12]
   19e78:	add	r3, fp, #8
   19e7c:	str	r3, [fp, #-32]	; 0xffffffe0
   19e80:	ldr	r3, [fp, #4]
   19e84:	cmp	r3, #0
   19e88:	beq	19ea0 <__assert_fail@plt+0x8d94>
   19e8c:	ldr	r3, [fp, #4]
   19e90:	movw	r2, #1030	; 0x406
   19e94:	cmp	r3, r2
   19e98:	beq	19ec8 <__assert_fail@plt+0x8dbc>
   19e9c:	b	19ef0 <__assert_fail@plt+0x8de4>
   19ea0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ea4:	add	r2, r3, #4
   19ea8:	str	r2, [fp, #-32]	; 0xffffffe0
   19eac:	ldr	r3, [r3]
   19eb0:	str	r3, [fp, #-16]
   19eb4:	ldr	r1, [fp, #-16]
   19eb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19ebc:	bl	1a09c <__assert_fail@plt+0x8f90>
   19ec0:	str	r0, [fp, #-12]
   19ec4:	b	1a07c <__assert_fail@plt+0x8f70>
   19ec8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ecc:	add	r2, r3, #4
   19ed0:	str	r2, [fp, #-32]	; 0xffffffe0
   19ed4:	ldr	r3, [r3]
   19ed8:	str	r3, [fp, #-20]	; 0xffffffec
   19edc:	ldr	r1, [fp, #-20]	; 0xffffffec
   19ee0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19ee4:	bl	1a0e0 <__assert_fail@plt+0x8fd4>
   19ee8:	str	r0, [fp, #-12]
   19eec:	b	1a07c <__assert_fail@plt+0x8f70>
   19ef0:	ldr	r3, [fp, #4]
   19ef4:	cmp	r3, #11
   19ef8:	beq	1a00c <__assert_fail@plt+0x8f00>
   19efc:	ldr	r3, [fp, #4]
   19f00:	cmp	r3, #11
   19f04:	bgt	19f8c <__assert_fail@plt+0x8e80>
   19f08:	ldr	r3, [fp, #4]
   19f0c:	cmp	r3, #3
   19f10:	beq	1a00c <__assert_fail@plt+0x8f00>
   19f14:	ldr	r3, [fp, #4]
   19f18:	cmp	r3, #3
   19f1c:	bgt	19f48 <__assert_fail@plt+0x8e3c>
   19f20:	ldr	r3, [fp, #4]
   19f24:	cmp	r3, #1
   19f28:	beq	1a00c <__assert_fail@plt+0x8f00>
   19f2c:	ldr	r3, [fp, #4]
   19f30:	cmp	r3, #1
   19f34:	bgt	1a020 <__assert_fail@plt+0x8f14>
   19f38:	ldr	r3, [fp, #4]
   19f3c:	cmp	r3, #0
   19f40:	beq	1a020 <__assert_fail@plt+0x8f14>
   19f44:	b	1a04c <__assert_fail@plt+0x8f40>
   19f48:	ldr	r3, [fp, #4]
   19f4c:	cmp	r3, #8
   19f50:	beq	1a020 <__assert_fail@plt+0x8f14>
   19f54:	ldr	r3, [fp, #4]
   19f58:	cmp	r3, #8
   19f5c:	bgt	19f70 <__assert_fail@plt+0x8e64>
   19f60:	ldr	r3, [fp, #4]
   19f64:	cmp	r3, #4
   19f68:	beq	1a020 <__assert_fail@plt+0x8f14>
   19f6c:	b	1a04c <__assert_fail@plt+0x8f40>
   19f70:	ldr	r3, [fp, #4]
   19f74:	cmp	r3, #9
   19f78:	beq	1a00c <__assert_fail@plt+0x8f00>
   19f7c:	ldr	r3, [fp, #4]
   19f80:	cmp	r3, #10
   19f84:	beq	1a020 <__assert_fail@plt+0x8f14>
   19f88:	b	1a04c <__assert_fail@plt+0x8f40>
   19f8c:	ldr	r3, [fp, #4]
   19f90:	movw	r2, #1031	; 0x407
   19f94:	cmp	r3, r2
   19f98:	bgt	19fdc <__assert_fail@plt+0x8ed0>
   19f9c:	ldr	r3, [fp, #4]
   19fa0:	movw	r2, #1030	; 0x406
   19fa4:	cmp	r3, r2
   19fa8:	bge	1a020 <__assert_fail@plt+0x8f14>
   19fac:	ldr	r3, [fp, #4]
   19fb0:	movw	r2, #1025	; 0x401
   19fb4:	cmp	r3, r2
   19fb8:	beq	1a00c <__assert_fail@plt+0x8f00>
   19fbc:	ldr	r3, [fp, #4]
   19fc0:	movw	r2, #1026	; 0x402
   19fc4:	cmp	r3, r2
   19fc8:	beq	1a020 <__assert_fail@plt+0x8f14>
   19fcc:	ldr	r3, [fp, #4]
   19fd0:	cmp	r3, #1024	; 0x400
   19fd4:	beq	1a020 <__assert_fail@plt+0x8f14>
   19fd8:	b	1a04c <__assert_fail@plt+0x8f40>
   19fdc:	ldr	r3, [fp, #4]
   19fe0:	movw	r2, #1033	; 0x409
   19fe4:	cmp	r3, r2
   19fe8:	beq	1a020 <__assert_fail@plt+0x8f14>
   19fec:	ldr	r3, [fp, #4]
   19ff0:	movw	r2, #1033	; 0x409
   19ff4:	cmp	r3, r2
   19ff8:	blt	1a00c <__assert_fail@plt+0x8f00>
   19ffc:	ldr	r3, [fp, #4]
   1a000:	movw	r2, #1034	; 0x40a
   1a004:	cmp	r3, r2
   1a008:	bne	1a04c <__assert_fail@plt+0x8f40>
   1a00c:	ldr	r1, [fp, #4]
   1a010:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a014:	bl	11070 <fcntl64@plt>
   1a018:	str	r0, [fp, #-12]
   1a01c:	b	1a078 <__assert_fail@plt+0x8f6c>
   1a020:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a024:	add	r2, r3, #4
   1a028:	str	r2, [fp, #-32]	; 0xffffffe0
   1a02c:	ldr	r3, [r3]
   1a030:	str	r3, [fp, #-24]	; 0xffffffe8
   1a034:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a038:	ldr	r1, [fp, #4]
   1a03c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a040:	bl	11070 <fcntl64@plt>
   1a044:	str	r0, [fp, #-12]
   1a048:	b	1a078 <__assert_fail@plt+0x8f6c>
   1a04c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a050:	add	r2, r3, #4
   1a054:	str	r2, [fp, #-32]	; 0xffffffe0
   1a058:	ldr	r3, [r3]
   1a05c:	str	r3, [fp, #-28]	; 0xffffffe4
   1a060:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a064:	ldr	r1, [fp, #4]
   1a068:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a06c:	bl	11070 <fcntl64@plt>
   1a070:	str	r0, [fp, #-12]
   1a074:	nop	{0}
   1a078:	nop	{0}
   1a07c:	ldr	r3, [fp, #-12]
   1a080:	mov	r0, r3
   1a084:	sub	sp, fp, #4
   1a088:	ldr	fp, [sp]
   1a08c:	ldr	lr, [sp, #4]
   1a090:	add	sp, sp, #8
   1a094:	add	sp, sp, #12
   1a098:	bx	lr
   1a09c:	str	fp, [sp, #-8]!
   1a0a0:	str	lr, [sp, #4]
   1a0a4:	add	fp, sp, #4
   1a0a8:	sub	sp, sp, #16
   1a0ac:	str	r0, [fp, #-16]
   1a0b0:	str	r1, [fp, #-20]	; 0xffffffec
   1a0b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a0b8:	mov	r1, #0
   1a0bc:	ldr	r0, [fp, #-16]
   1a0c0:	bl	11070 <fcntl64@plt>
   1a0c4:	str	r0, [fp, #-8]
   1a0c8:	ldr	r3, [fp, #-8]
   1a0cc:	mov	r0, r3
   1a0d0:	sub	sp, fp, #4
   1a0d4:	ldr	fp, [sp]
   1a0d8:	add	sp, sp, #4
   1a0dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a0e0:	str	fp, [sp, #-8]!
   1a0e4:	str	lr, [sp, #4]
   1a0e8:	add	fp, sp, #4
   1a0ec:	sub	sp, sp, #24
   1a0f0:	str	r0, [fp, #-24]	; 0xffffffe8
   1a0f4:	str	r1, [fp, #-28]	; 0xffffffe4
   1a0f8:	movw	r3, #54076	; 0xd33c
   1a0fc:	movt	r3, #2
   1a100:	ldr	r3, [r3]
   1a104:	cmp	r3, #0
   1a108:	blt	1a184 <__assert_fail@plt+0x9078>
   1a10c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a110:	movw	r1, #1030	; 0x406
   1a114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a118:	bl	11070 <fcntl64@plt>
   1a11c:	str	r0, [fp, #-8]
   1a120:	ldr	r3, [fp, #-8]
   1a124:	cmp	r3, #0
   1a128:	bge	1a140 <__assert_fail@plt+0x9034>
   1a12c:	bl	11010 <__errno_location@plt>
   1a130:	mov	r3, r0
   1a134:	ldr	r3, [r3]
   1a138:	cmp	r3, #22
   1a13c:	beq	1a154 <__assert_fail@plt+0x9048>
   1a140:	movw	r3, #54076	; 0xd33c
   1a144:	movt	r3, #2
   1a148:	mov	r2, #1
   1a14c:	str	r2, [r3]
   1a150:	b	1a194 <__assert_fail@plt+0x9088>
   1a154:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a15c:	bl	1a09c <__assert_fail@plt+0x8f90>
   1a160:	str	r0, [fp, #-8]
   1a164:	ldr	r3, [fp, #-8]
   1a168:	cmp	r3, #0
   1a16c:	blt	1a194 <__assert_fail@plt+0x9088>
   1a170:	movw	r3, #54076	; 0xd33c
   1a174:	movt	r3, #2
   1a178:	mvn	r2, #0
   1a17c:	str	r2, [r3]
   1a180:	b	1a194 <__assert_fail@plt+0x9088>
   1a184:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a18c:	bl	1a09c <__assert_fail@plt+0x8f90>
   1a190:	str	r0, [fp, #-8]
   1a194:	ldr	r3, [fp, #-8]
   1a198:	cmp	r3, #0
   1a19c:	blt	1a224 <__assert_fail@plt+0x9118>
   1a1a0:	movw	r3, #54076	; 0xd33c
   1a1a4:	movt	r3, #2
   1a1a8:	ldr	r3, [r3]
   1a1ac:	cmn	r3, #1
   1a1b0:	bne	1a224 <__assert_fail@plt+0x9118>
   1a1b4:	mov	r1, #1
   1a1b8:	ldr	r0, [fp, #-8]
   1a1bc:	bl	11070 <fcntl64@plt>
   1a1c0:	str	r0, [fp, #-12]
   1a1c4:	ldr	r3, [fp, #-12]
   1a1c8:	cmp	r3, #0
   1a1cc:	blt	1a1f4 <__assert_fail@plt+0x90e8>
   1a1d0:	ldr	r3, [fp, #-12]
   1a1d4:	orr	r3, r3, #1
   1a1d8:	mov	r2, r3
   1a1dc:	mov	r1, #2
   1a1e0:	ldr	r0, [fp, #-8]
   1a1e4:	bl	11070 <fcntl64@plt>
   1a1e8:	mov	r3, r0
   1a1ec:	cmn	r3, #1
   1a1f0:	bne	1a224 <__assert_fail@plt+0x9118>
   1a1f4:	bl	11010 <__errno_location@plt>
   1a1f8:	mov	r3, r0
   1a1fc:	ldr	r3, [r3]
   1a200:	str	r3, [fp, #-16]
   1a204:	ldr	r0, [fp, #-8]
   1a208:	bl	110f4 <close@plt>
   1a20c:	bl	11010 <__errno_location@plt>
   1a210:	mov	r2, r0
   1a214:	ldr	r3, [fp, #-16]
   1a218:	str	r3, [r2]
   1a21c:	mvn	r3, #0
   1a220:	str	r3, [fp, #-8]
   1a224:	ldr	r3, [fp, #-8]
   1a228:	mov	r0, r3
   1a22c:	sub	sp, fp, #4
   1a230:	ldr	fp, [sp]
   1a234:	add	sp, sp, #4
   1a238:	pop	{pc}		; (ldr pc, [sp], #4)
   1a23c:	str	fp, [sp, #-8]!
   1a240:	str	lr, [sp, #4]
   1a244:	add	fp, sp, #4
   1a248:	bl	11010 <__errno_location@plt>
   1a24c:	mov	r2, r0
   1a250:	mov	r3, #12
   1a254:	str	r3, [r2]
   1a258:	mov	r3, #0
   1a25c:	mov	r0, r3
   1a260:	sub	sp, fp, #4
   1a264:	ldr	fp, [sp]
   1a268:	add	sp, sp, #4
   1a26c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a270:	str	fp, [sp, #-8]!
   1a274:	str	lr, [sp, #4]
   1a278:	add	fp, sp, #4
   1a27c:	sub	sp, sp, #8
   1a280:	str	r0, [fp, #-8]
   1a284:	ldr	r3, [fp, #-8]
   1a288:	mov	r0, r3
   1a28c:	bl	19b80 <__assert_fail@plt+0x8a74>
   1a290:	mov	r3, r0
   1a294:	mov	r0, r3
   1a298:	sub	sp, fp, #4
   1a29c:	ldr	fp, [sp]
   1a2a0:	add	sp, sp, #4
   1a2a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a2a8:	str	fp, [sp, #-8]!
   1a2ac:	str	lr, [sp, #4]
   1a2b0:	add	fp, sp, #4
   1a2b4:	sub	sp, sp, #8
   1a2b8:	str	r0, [fp, #-8]
   1a2bc:	str	r1, [fp, #-12]
   1a2c0:	ldr	r3, [fp, #-12]
   1a2c4:	cmp	r3, #0
   1a2c8:	moveq	r3, #1
   1a2cc:	movne	r3, #0
   1a2d0:	uxtb	r3, r3
   1a2d4:	mov	r2, r3
   1a2d8:	ldr	r3, [fp, #-12]
   1a2dc:	orr	r3, r2, r3
   1a2e0:	mov	r1, r3
   1a2e4:	ldr	r0, [fp, #-8]
   1a2e8:	bl	19c10 <__assert_fail@plt+0x8b04>
   1a2ec:	mov	r3, r0
   1a2f0:	mov	r0, r3
   1a2f4:	sub	sp, fp, #4
   1a2f8:	ldr	fp, [sp]
   1a2fc:	add	sp, sp, #4
   1a300:	pop	{pc}		; (ldr pc, [sp], #4)
   1a304:	str	fp, [sp, #-8]!
   1a308:	str	lr, [sp, #4]
   1a30c:	add	fp, sp, #4
   1a310:	sub	sp, sp, #8
   1a314:	str	r0, [fp, #-8]
   1a318:	str	r1, [fp, #-12]
   1a31c:	ldr	r3, [fp, #-8]
   1a320:	ldr	r2, [fp, #-12]
   1a324:	mov	r1, r2
   1a328:	mov	r0, r3
   1a32c:	bl	19ab0 <__assert_fail@plt+0x89a4>
   1a330:	mov	r3, r0
   1a334:	mov	r0, r3
   1a338:	sub	sp, fp, #4
   1a33c:	ldr	fp, [sp]
   1a340:	add	sp, sp, #4
   1a344:	pop	{pc}		; (ldr pc, [sp], #4)
   1a348:	str	fp, [sp, #-8]!
   1a34c:	str	lr, [sp, #4]
   1a350:	add	fp, sp, #4
   1a354:	sub	sp, sp, #16
   1a358:	str	r0, [fp, #-8]
   1a35c:	str	r1, [fp, #-12]
   1a360:	str	r2, [fp, #-16]
   1a364:	ldr	r3, [fp, #-12]
   1a368:	cmp	r3, #0
   1a36c:	beq	1a37c <__assert_fail@plt+0x9270>
   1a370:	ldr	r3, [fp, #-16]
   1a374:	cmp	r3, #0
   1a378:	bne	1a38c <__assert_fail@plt+0x9280>
   1a37c:	mov	r3, #1
   1a380:	str	r3, [fp, #-16]
   1a384:	ldr	r3, [fp, #-16]
   1a388:	str	r3, [fp, #-12]
   1a38c:	ldr	r3, [fp, #-12]
   1a390:	ldr	r2, [fp, #-16]
   1a394:	mov	r1, r3
   1a398:	ldr	r0, [fp, #-8]
   1a39c:	bl	1a7b4 <__assert_fail@plt+0x96a8>
   1a3a0:	mov	r3, r0
   1a3a4:	mov	r0, r3
   1a3a8:	sub	sp, fp, #4
   1a3ac:	ldr	fp, [sp]
   1a3b0:	add	sp, sp, #4
   1a3b4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a3b8:	str	fp, [sp, #-8]!
   1a3bc:	str	lr, [sp, #4]
   1a3c0:	add	fp, sp, #4
   1a3c4:	sub	sp, sp, #8
   1a3c8:	mov	r0, #14
   1a3cc:	bl	110a0 <nl_langinfo@plt>
   1a3d0:	str	r0, [fp, #-8]
   1a3d4:	ldr	r3, [fp, #-8]
   1a3d8:	cmp	r3, #0
   1a3dc:	bne	1a3ec <__assert_fail@plt+0x92e0>
   1a3e0:	movw	r3, #49544	; 0xc188
   1a3e4:	movt	r3, #1
   1a3e8:	str	r3, [fp, #-8]
   1a3ec:	ldr	r3, [fp, #-8]
   1a3f0:	ldrb	r3, [r3]
   1a3f4:	cmp	r3, #0
   1a3f8:	bne	1a408 <__assert_fail@plt+0x92fc>
   1a3fc:	movw	r3, #49548	; 0xc18c
   1a400:	movt	r3, #1
   1a404:	str	r3, [fp, #-8]
   1a408:	ldr	r3, [fp, #-8]
   1a40c:	mov	r0, r3
   1a410:	sub	sp, fp, #4
   1a414:	ldr	fp, [sp]
   1a418:	add	sp, sp, #4
   1a41c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a420:	str	fp, [sp, #-8]!
   1a424:	str	lr, [sp, #4]
   1a428:	add	fp, sp, #4
   1a42c:	sub	sp, sp, #32
   1a430:	str	r0, [fp, #-24]	; 0xffffffe8
   1a434:	str	r1, [fp, #-28]	; 0xffffffe4
   1a438:	str	r2, [fp, #-32]	; 0xffffffe0
   1a43c:	str	r3, [fp, #-36]	; 0xffffffdc
   1a440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a444:	cmp	r3, #0
   1a448:	bne	1a454 <__assert_fail@plt+0x9348>
   1a44c:	sub	r3, fp, #16
   1a450:	str	r3, [fp, #-24]	; 0xffffffe8
   1a454:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a458:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a45c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a464:	bl	10f5c <mbrtowc@plt>
   1a468:	str	r0, [fp, #-8]
   1a46c:	ldr	r3, [fp, #-8]
   1a470:	cmn	r3, #3
   1a474:	bls	1a4c0 <__assert_fail@plt+0x93b4>
   1a478:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a47c:	cmp	r3, #0
   1a480:	beq	1a4c0 <__assert_fail@plt+0x93b4>
   1a484:	mov	r0, #0
   1a488:	bl	1486c <__assert_fail@plt+0x3760>
   1a48c:	mov	r3, r0
   1a490:	eor	r3, r3, #1
   1a494:	uxtb	r3, r3
   1a498:	cmp	r3, #0
   1a49c:	beq	1a4c0 <__assert_fail@plt+0x93b4>
   1a4a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a4a4:	ldrb	r3, [r3]
   1a4a8:	strb	r3, [fp, #-9]
   1a4ac:	ldrb	r2, [fp, #-9]
   1a4b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a4b4:	str	r2, [r3]
   1a4b8:	mov	r3, #1
   1a4bc:	b	1a4c4 <__assert_fail@plt+0x93b8>
   1a4c0:	ldr	r3, [fp, #-8]
   1a4c4:	mov	r0, r3
   1a4c8:	sub	sp, fp, #4
   1a4cc:	ldr	fp, [sp]
   1a4d0:	add	sp, sp, #4
   1a4d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a4d8:	str	fp, [sp, #-8]!
   1a4dc:	str	lr, [sp, #4]
   1a4e0:	add	fp, sp, #4
   1a4e4:	sub	sp, sp, #32
   1a4e8:	str	r0, [fp, #-24]	; 0xffffffe8
   1a4ec:	str	r1, [fp, #-28]	; 0xffffffe4
   1a4f0:	str	r2, [fp, #-32]	; 0xffffffe0
   1a4f4:	str	r3, [fp, #-36]	; 0xffffffdc
   1a4f8:	b	1a5a0 <__assert_fail@plt+0x9494>
   1a4fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a500:	bl	10fec <strlen@plt>
   1a504:	mov	r3, r0
   1a508:	add	r3, r3, #1
   1a50c:	str	r3, [fp, #-12]
   1a510:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a514:	bl	10fec <strlen@plt>
   1a518:	mov	r3, r0
   1a51c:	add	r3, r3, #1
   1a520:	str	r3, [fp, #-16]
   1a524:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a528:	ldr	r3, [fp, #-12]
   1a52c:	add	r3, r2, r3
   1a530:	str	r3, [fp, #-24]	; 0xffffffe8
   1a534:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a538:	ldr	r3, [fp, #-16]
   1a53c:	add	r3, r2, r3
   1a540:	str	r3, [fp, #-32]	; 0xffffffe0
   1a544:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a548:	ldr	r3, [fp, #-12]
   1a54c:	sub	r3, r2, r3
   1a550:	str	r3, [fp, #-28]	; 0xffffffe4
   1a554:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a558:	ldr	r3, [fp, #-16]
   1a55c:	sub	r3, r2, r3
   1a560:	str	r3, [fp, #-36]	; 0xffffffdc
   1a564:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a568:	cmp	r3, #0
   1a56c:	bne	1a58c <__assert_fail@plt+0x9480>
   1a570:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a574:	cmp	r3, #0
   1a578:	movne	r3, #1
   1a57c:	moveq	r3, #0
   1a580:	uxtb	r3, r3
   1a584:	rsb	r3, r3, #0
   1a588:	b	1a5f8 <__assert_fail@plt+0x94ec>
   1a58c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a590:	cmp	r3, #0
   1a594:	bne	1a5a0 <__assert_fail@plt+0x9494>
   1a598:	mov	r3, #1
   1a59c:	b	1a5f8 <__assert_fail@plt+0x94ec>
   1a5a0:	bl	11010 <__errno_location@plt>
   1a5a4:	mov	r2, r0
   1a5a8:	mov	r3, #0
   1a5ac:	str	r3, [r2]
   1a5b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a5b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5b8:	bl	10f74 <strcoll@plt>
   1a5bc:	str	r0, [fp, #-8]
   1a5c0:	ldr	r3, [fp, #-8]
   1a5c4:	cmp	r3, #0
   1a5c8:	bne	1a5e0 <__assert_fail@plt+0x94d4>
   1a5cc:	bl	11010 <__errno_location@plt>
   1a5d0:	mov	r3, r0
   1a5d4:	ldr	r3, [r3]
   1a5d8:	cmp	r3, #0
   1a5dc:	beq	1a5e8 <__assert_fail@plt+0x94dc>
   1a5e0:	mov	r3, #1
   1a5e4:	b	1a5ec <__assert_fail@plt+0x94e0>
   1a5e8:	mov	r3, #0
   1a5ec:	cmp	r3, #0
   1a5f0:	beq	1a4fc <__assert_fail@plt+0x93f0>
   1a5f4:	ldr	r3, [fp, #-8]
   1a5f8:	mov	r0, r3
   1a5fc:	sub	sp, fp, #4
   1a600:	ldr	fp, [sp]
   1a604:	add	sp, sp, #4
   1a608:	pop	{pc}		; (ldr pc, [sp], #4)
   1a60c:	str	fp, [sp, #-8]!
   1a610:	str	lr, [sp, #4]
   1a614:	add	fp, sp, #4
   1a618:	sub	sp, sp, #24
   1a61c:	str	r0, [fp, #-16]
   1a620:	str	r1, [fp, #-20]	; 0xffffffec
   1a624:	str	r2, [fp, #-24]	; 0xffffffe8
   1a628:	str	r3, [fp, #-28]	; 0xffffffe4
   1a62c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a630:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a634:	cmp	r2, r3
   1a638:	bne	1a674 <__assert_fail@plt+0x9568>
   1a63c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a640:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a644:	ldr	r0, [fp, #-16]
   1a648:	bl	10ed8 <memcmp@plt>
   1a64c:	mov	r3, r0
   1a650:	cmp	r3, #0
   1a654:	bne	1a674 <__assert_fail@plt+0x9568>
   1a658:	bl	11010 <__errno_location@plt>
   1a65c:	mov	r2, r0
   1a660:	mov	r3, #0
   1a664:	str	r3, [r2]
   1a668:	mov	r3, #0
   1a66c:	str	r3, [fp, #-8]
   1a670:	b	1a70c <__assert_fail@plt+0x9600>
   1a674:	ldr	r2, [fp, #-16]
   1a678:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a67c:	add	r3, r2, r3
   1a680:	ldrb	r3, [r3]
   1a684:	strb	r3, [fp, #-9]
   1a688:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a68c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a690:	add	r3, r2, r3
   1a694:	ldrb	r3, [r3]
   1a698:	strb	r3, [fp, #-10]
   1a69c:	ldr	r2, [fp, #-16]
   1a6a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6a4:	add	r3, r2, r3
   1a6a8:	mov	r2, #0
   1a6ac:	strb	r2, [r3]
   1a6b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a6b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a6b8:	add	r3, r2, r3
   1a6bc:	mov	r2, #0
   1a6c0:	strb	r2, [r3]
   1a6c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6c8:	add	r1, r3, #1
   1a6cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a6d0:	add	r3, r3, #1
   1a6d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a6d8:	ldr	r0, [fp, #-16]
   1a6dc:	bl	1a4d8 <__assert_fail@plt+0x93cc>
   1a6e0:	str	r0, [fp, #-8]
   1a6e4:	ldr	r2, [fp, #-16]
   1a6e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6ec:	add	r3, r2, r3
   1a6f0:	ldrb	r2, [fp, #-9]
   1a6f4:	strb	r2, [r3]
   1a6f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a6fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a700:	add	r3, r2, r3
   1a704:	ldrb	r2, [fp, #-10]
   1a708:	strb	r2, [r3]
   1a70c:	ldr	r3, [fp, #-8]
   1a710:	mov	r0, r3
   1a714:	sub	sp, fp, #4
   1a718:	ldr	fp, [sp]
   1a71c:	add	sp, sp, #4
   1a720:	pop	{pc}		; (ldr pc, [sp], #4)
   1a724:	str	fp, [sp, #-8]!
   1a728:	str	lr, [sp, #4]
   1a72c:	add	fp, sp, #4
   1a730:	sub	sp, sp, #16
   1a734:	str	r0, [fp, #-8]
   1a738:	str	r1, [fp, #-12]
   1a73c:	str	r2, [fp, #-16]
   1a740:	str	r3, [fp, #-20]	; 0xffffffec
   1a744:	ldr	r2, [fp, #-12]
   1a748:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a74c:	cmp	r2, r3
   1a750:	bne	1a788 <__assert_fail@plt+0x967c>
   1a754:	ldr	r2, [fp, #-12]
   1a758:	ldr	r1, [fp, #-16]
   1a75c:	ldr	r0, [fp, #-8]
   1a760:	bl	10ed8 <memcmp@plt>
   1a764:	mov	r3, r0
   1a768:	cmp	r3, #0
   1a76c:	bne	1a788 <__assert_fail@plt+0x967c>
   1a770:	bl	11010 <__errno_location@plt>
   1a774:	mov	r2, r0
   1a778:	mov	r3, #0
   1a77c:	str	r3, [r2]
   1a780:	mov	r3, #0
   1a784:	b	1a7a0 <__assert_fail@plt+0x9694>
   1a788:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a78c:	ldr	r2, [fp, #-16]
   1a790:	ldr	r1, [fp, #-12]
   1a794:	ldr	r0, [fp, #-8]
   1a798:	bl	1a4d8 <__assert_fail@plt+0x93cc>
   1a79c:	mov	r3, r0
   1a7a0:	mov	r0, r3
   1a7a4:	sub	sp, fp, #4
   1a7a8:	ldr	fp, [sp]
   1a7ac:	add	sp, sp, #4
   1a7b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a7b4:	str	fp, [sp, #-8]!
   1a7b8:	str	lr, [sp, #4]
   1a7bc:	add	fp, sp, #4
   1a7c0:	sub	sp, sp, #24
   1a7c4:	str	r0, [fp, #-16]
   1a7c8:	str	r1, [fp, #-20]	; 0xffffffec
   1a7cc:	str	r2, [fp, #-24]	; 0xffffffe8
   1a7d0:	mov	ip, #0
   1a7d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a7d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a7dc:	umull	r0, r1, r2, r3
   1a7e0:	mov	r2, #0
   1a7e4:	mov	r3, #0
   1a7e8:	mov	r2, r1
   1a7ec:	mov	r3, #0
   1a7f0:	cmp	r2, #0
   1a7f4:	beq	1a7fc <__assert_fail@plt+0x96f0>
   1a7f8:	mov	ip, #1
   1a7fc:	mov	r3, r0
   1a800:	str	r3, [fp, #-8]
   1a804:	mov	r3, ip
   1a808:	and	r3, r3, #1
   1a80c:	uxtb	r3, r3
   1a810:	cmp	r3, #0
   1a814:	beq	1a830 <__assert_fail@plt+0x9724>
   1a818:	bl	11010 <__errno_location@plt>
   1a81c:	mov	r2, r0
   1a820:	mov	r3, #12
   1a824:	str	r3, [r2]
   1a828:	mov	r3, #0
   1a82c:	b	1a844 <__assert_fail@plt+0x9738>
   1a830:	ldr	r3, [fp, #-8]
   1a834:	mov	r1, r3
   1a838:	ldr	r0, [fp, #-16]
   1a83c:	bl	19c10 <__assert_fail@plt+0x8b04>
   1a840:	mov	r3, r0
   1a844:	mov	r0, r3
   1a848:	sub	sp, fp, #4
   1a84c:	ldr	fp, [sp]
   1a850:	add	sp, sp, #4
   1a854:	pop	{pc}		; (ldr pc, [sp], #4)
   1a858:	push	{fp}		; (str fp, [sp, #-4]!)
   1a85c:	add	fp, sp, #0
   1a860:	sub	sp, sp, #12
   1a864:	str	r0, [fp, #-8]
   1a868:	ldr	r3, [fp, #-8]
   1a86c:	cmp	r3, #90	; 0x5a
   1a870:	bgt	1a894 <__assert_fail@plt+0x9788>
   1a874:	ldr	r3, [fp, #-8]
   1a878:	cmp	r3, #65	; 0x41
   1a87c:	bge	1a8a4 <__assert_fail@plt+0x9798>
   1a880:	ldr	r3, [fp, #-8]
   1a884:	sub	r3, r3, #48	; 0x30
   1a888:	cmp	r3, #9
   1a88c:	bhi	1a8ac <__assert_fail@plt+0x97a0>
   1a890:	b	1a8a4 <__assert_fail@plt+0x9798>
   1a894:	ldr	r3, [fp, #-8]
   1a898:	sub	r3, r3, #97	; 0x61
   1a89c:	cmp	r3, #25
   1a8a0:	bhi	1a8ac <__assert_fail@plt+0x97a0>
   1a8a4:	mov	r3, #1
   1a8a8:	b	1a8b0 <__assert_fail@plt+0x97a4>
   1a8ac:	mov	r3, #0
   1a8b0:	mov	r0, r3
   1a8b4:	add	sp, fp, #0
   1a8b8:	pop	{fp}		; (ldr fp, [sp], #4)
   1a8bc:	bx	lr
   1a8c0:	push	{fp}		; (str fp, [sp, #-4]!)
   1a8c4:	add	fp, sp, #0
   1a8c8:	sub	sp, sp, #12
   1a8cc:	str	r0, [fp, #-8]
   1a8d0:	ldr	r3, [fp, #-8]
   1a8d4:	cmp	r3, #65	; 0x41
   1a8d8:	blt	1a900 <__assert_fail@plt+0x97f4>
   1a8dc:	ldr	r3, [fp, #-8]
   1a8e0:	cmp	r3, #90	; 0x5a
   1a8e4:	ble	1a8f8 <__assert_fail@plt+0x97ec>
   1a8e8:	ldr	r3, [fp, #-8]
   1a8ec:	sub	r3, r3, #97	; 0x61
   1a8f0:	cmp	r3, #25
   1a8f4:	bhi	1a900 <__assert_fail@plt+0x97f4>
   1a8f8:	mov	r3, #1
   1a8fc:	b	1a904 <__assert_fail@plt+0x97f8>
   1a900:	mov	r3, #0
   1a904:	mov	r0, r3
   1a908:	add	sp, fp, #0
   1a90c:	pop	{fp}		; (ldr fp, [sp], #4)
   1a910:	bx	lr
   1a914:	push	{fp}		; (str fp, [sp, #-4]!)
   1a918:	add	fp, sp, #0
   1a91c:	sub	sp, sp, #12
   1a920:	str	r0, [fp, #-8]
   1a924:	ldr	r3, [fp, #-8]
   1a928:	cmp	r3, #127	; 0x7f
   1a92c:	bhi	1a938 <__assert_fail@plt+0x982c>
   1a930:	mov	r3, #1
   1a934:	b	1a93c <__assert_fail@plt+0x9830>
   1a938:	mov	r3, #0
   1a93c:	mov	r0, r3
   1a940:	add	sp, fp, #0
   1a944:	pop	{fp}		; (ldr fp, [sp], #4)
   1a948:	bx	lr
   1a94c:	push	{fp}		; (str fp, [sp, #-4]!)
   1a950:	add	fp, sp, #0
   1a954:	sub	sp, sp, #12
   1a958:	str	r0, [fp, #-8]
   1a95c:	ldr	r3, [fp, #-8]
   1a960:	cmp	r3, #32
   1a964:	beq	1a974 <__assert_fail@plt+0x9868>
   1a968:	ldr	r3, [fp, #-8]
   1a96c:	cmp	r3, #9
   1a970:	bne	1a97c <__assert_fail@plt+0x9870>
   1a974:	mov	r3, #1
   1a978:	b	1a980 <__assert_fail@plt+0x9874>
   1a97c:	mov	r3, #0
   1a980:	and	r3, r3, #1
   1a984:	uxtb	r3, r3
   1a988:	mov	r0, r3
   1a98c:	add	sp, fp, #0
   1a990:	pop	{fp}		; (ldr fp, [sp], #4)
   1a994:	bx	lr
   1a998:	push	{fp}		; (str fp, [sp, #-4]!)
   1a99c:	add	fp, sp, #0
   1a9a0:	sub	sp, sp, #12
   1a9a4:	str	r0, [fp, #-8]
   1a9a8:	ldr	r3, [fp, #-8]
   1a9ac:	cmp	r3, #0
   1a9b0:	blt	1a9d4 <__assert_fail@plt+0x98c8>
   1a9b4:	ldr	r3, [fp, #-8]
   1a9b8:	cmp	r3, #31
   1a9bc:	ble	1a9cc <__assert_fail@plt+0x98c0>
   1a9c0:	ldr	r3, [fp, #-8]
   1a9c4:	cmp	r3, #127	; 0x7f
   1a9c8:	bne	1a9d4 <__assert_fail@plt+0x98c8>
   1a9cc:	mov	r3, #1
   1a9d0:	b	1a9d8 <__assert_fail@plt+0x98cc>
   1a9d4:	mov	r3, #0
   1a9d8:	mov	r0, r3
   1a9dc:	add	sp, fp, #0
   1a9e0:	pop	{fp}		; (ldr fp, [sp], #4)
   1a9e4:	bx	lr
   1a9e8:	push	{fp}		; (str fp, [sp, #-4]!)
   1a9ec:	add	fp, sp, #0
   1a9f0:	sub	sp, sp, #12
   1a9f4:	str	r0, [fp, #-8]
   1a9f8:	ldr	r3, [fp, #-8]
   1a9fc:	sub	r3, r3, #48	; 0x30
   1aa00:	cmp	r3, #9
   1aa04:	bhi	1aa10 <__assert_fail@plt+0x9904>
   1aa08:	mov	r3, #1
   1aa0c:	b	1aa14 <__assert_fail@plt+0x9908>
   1aa10:	mov	r3, #0
   1aa14:	mov	r0, r3
   1aa18:	add	sp, fp, #0
   1aa1c:	pop	{fp}		; (ldr fp, [sp], #4)
   1aa20:	bx	lr
   1aa24:	push	{fp}		; (str fp, [sp, #-4]!)
   1aa28:	add	fp, sp, #0
   1aa2c:	sub	sp, sp, #12
   1aa30:	str	r0, [fp, #-8]
   1aa34:	ldr	r3, [fp, #-8]
   1aa38:	sub	r3, r3, #33	; 0x21
   1aa3c:	cmp	r3, #93	; 0x5d
   1aa40:	bhi	1aa4c <__assert_fail@plt+0x9940>
   1aa44:	mov	r3, #1
   1aa48:	b	1aa50 <__assert_fail@plt+0x9944>
   1aa4c:	mov	r3, #0
   1aa50:	mov	r0, r3
   1aa54:	add	sp, fp, #0
   1aa58:	pop	{fp}		; (ldr fp, [sp], #4)
   1aa5c:	bx	lr
   1aa60:	push	{fp}		; (str fp, [sp, #-4]!)
   1aa64:	add	fp, sp, #0
   1aa68:	sub	sp, sp, #12
   1aa6c:	str	r0, [fp, #-8]
   1aa70:	ldr	r3, [fp, #-8]
   1aa74:	sub	r3, r3, #97	; 0x61
   1aa78:	cmp	r3, #25
   1aa7c:	bhi	1aa88 <__assert_fail@plt+0x997c>
   1aa80:	mov	r3, #1
   1aa84:	b	1aa8c <__assert_fail@plt+0x9980>
   1aa88:	mov	r3, #0
   1aa8c:	mov	r0, r3
   1aa90:	add	sp, fp, #0
   1aa94:	pop	{fp}		; (ldr fp, [sp], #4)
   1aa98:	bx	lr
   1aa9c:	push	{fp}		; (str fp, [sp, #-4]!)
   1aaa0:	add	fp, sp, #0
   1aaa4:	sub	sp, sp, #12
   1aaa8:	str	r0, [fp, #-8]
   1aaac:	ldr	r3, [fp, #-8]
   1aab0:	sub	r3, r3, #32
   1aab4:	cmp	r3, #94	; 0x5e
   1aab8:	bhi	1aac4 <__assert_fail@plt+0x99b8>
   1aabc:	mov	r3, #1
   1aac0:	b	1aac8 <__assert_fail@plt+0x99bc>
   1aac4:	mov	r3, #0
   1aac8:	mov	r0, r3
   1aacc:	add	sp, fp, #0
   1aad0:	pop	{fp}		; (ldr fp, [sp], #4)
   1aad4:	bx	lr
   1aad8:	push	{fp}		; (str fp, [sp, #-4]!)
   1aadc:	add	fp, sp, #0
   1aae0:	sub	sp, sp, #12
   1aae4:	str	r0, [fp, #-8]
   1aae8:	ldr	r3, [fp, #-8]
   1aaec:	cmp	r3, #64	; 0x40
   1aaf0:	bgt	1ab14 <__assert_fail@plt+0x9a08>
   1aaf4:	ldr	r3, [fp, #-8]
   1aaf8:	cmp	r3, #58	; 0x3a
   1aafc:	bge	1ab3c <__assert_fail@plt+0x9a30>
   1ab00:	ldr	r3, [fp, #-8]
   1ab04:	sub	r3, r3, #33	; 0x21
   1ab08:	cmp	r3, #14
   1ab0c:	bhi	1ab44 <__assert_fail@plt+0x9a38>
   1ab10:	b	1ab3c <__assert_fail@plt+0x9a30>
   1ab14:	ldr	r3, [fp, #-8]
   1ab18:	cmp	r3, #91	; 0x5b
   1ab1c:	blt	1ab44 <__assert_fail@plt+0x9a38>
   1ab20:	ldr	r3, [fp, #-8]
   1ab24:	cmp	r3, #96	; 0x60
   1ab28:	ble	1ab3c <__assert_fail@plt+0x9a30>
   1ab2c:	ldr	r3, [fp, #-8]
   1ab30:	sub	r3, r3, #123	; 0x7b
   1ab34:	cmp	r3, #3
   1ab38:	bhi	1ab44 <__assert_fail@plt+0x9a38>
   1ab3c:	mov	r3, #1
   1ab40:	b	1ab48 <__assert_fail@plt+0x9a3c>
   1ab44:	mov	r3, #0
   1ab48:	mov	r0, r3
   1ab4c:	add	sp, fp, #0
   1ab50:	pop	{fp}		; (ldr fp, [sp], #4)
   1ab54:	bx	lr
   1ab58:	push	{fp}		; (str fp, [sp, #-4]!)
   1ab5c:	add	fp, sp, #0
   1ab60:	sub	sp, sp, #12
   1ab64:	str	r0, [fp, #-8]
   1ab68:	ldr	r3, [fp, #-8]
   1ab6c:	cmp	r3, #9
   1ab70:	blt	1ab94 <__assert_fail@plt+0x9a88>
   1ab74:	ldr	r3, [fp, #-8]
   1ab78:	cmp	r3, #13
   1ab7c:	ble	1ab8c <__assert_fail@plt+0x9a80>
   1ab80:	ldr	r3, [fp, #-8]
   1ab84:	cmp	r3, #32
   1ab88:	bne	1ab94 <__assert_fail@plt+0x9a88>
   1ab8c:	mov	r3, #1
   1ab90:	b	1ab98 <__assert_fail@plt+0x9a8c>
   1ab94:	mov	r3, #0
   1ab98:	mov	r0, r3
   1ab9c:	add	sp, fp, #0
   1aba0:	pop	{fp}		; (ldr fp, [sp], #4)
   1aba4:	bx	lr
   1aba8:	push	{fp}		; (str fp, [sp, #-4]!)
   1abac:	add	fp, sp, #0
   1abb0:	sub	sp, sp, #12
   1abb4:	str	r0, [fp, #-8]
   1abb8:	ldr	r3, [fp, #-8]
   1abbc:	sub	r3, r3, #65	; 0x41
   1abc0:	cmp	r3, #25
   1abc4:	bhi	1abd0 <__assert_fail@plt+0x9ac4>
   1abc8:	mov	r3, #1
   1abcc:	b	1abd4 <__assert_fail@plt+0x9ac8>
   1abd0:	mov	r3, #0
   1abd4:	mov	r0, r3
   1abd8:	add	sp, fp, #0
   1abdc:	pop	{fp}		; (ldr fp, [sp], #4)
   1abe0:	bx	lr
   1abe4:	push	{fp}		; (str fp, [sp, #-4]!)
   1abe8:	add	fp, sp, #0
   1abec:	sub	sp, sp, #12
   1abf0:	str	r0, [fp, #-8]
   1abf4:	ldr	r3, [fp, #-8]
   1abf8:	sub	r3, r3, #48	; 0x30
   1abfc:	cmp	r3, #54	; 0x36
   1ac00:	ldrls	pc, [pc, r3, lsl #2]
   1ac04:	b	1acec <__assert_fail@plt+0x9be0>
   1ac08:	andeq	sl, r1, r4, ror #25
   1ac0c:	andeq	sl, r1, r4, ror #25
   1ac10:	andeq	sl, r1, r4, ror #25
   1ac14:	andeq	sl, r1, r4, ror #25
   1ac18:	andeq	sl, r1, r4, ror #25
   1ac1c:	andeq	sl, r1, r4, ror #25
   1ac20:	andeq	sl, r1, r4, ror #25
   1ac24:	andeq	sl, r1, r4, ror #25
   1ac28:	andeq	sl, r1, r4, ror #25
   1ac2c:	andeq	sl, r1, r4, ror #25
   1ac30:	andeq	sl, r1, ip, ror #25
   1ac34:	andeq	sl, r1, ip, ror #25
   1ac38:	andeq	sl, r1, ip, ror #25
   1ac3c:	andeq	sl, r1, ip, ror #25
   1ac40:	andeq	sl, r1, ip, ror #25
   1ac44:	andeq	sl, r1, ip, ror #25
   1ac48:	andeq	sl, r1, ip, ror #25
   1ac4c:	andeq	sl, r1, r4, ror #25
   1ac50:	andeq	sl, r1, r4, ror #25
   1ac54:	andeq	sl, r1, r4, ror #25
   1ac58:	andeq	sl, r1, r4, ror #25
   1ac5c:	andeq	sl, r1, r4, ror #25
   1ac60:	andeq	sl, r1, r4, ror #25
   1ac64:	andeq	sl, r1, ip, ror #25
   1ac68:	andeq	sl, r1, ip, ror #25
   1ac6c:	andeq	sl, r1, ip, ror #25
   1ac70:	andeq	sl, r1, ip, ror #25
   1ac74:	andeq	sl, r1, ip, ror #25
   1ac78:	andeq	sl, r1, ip, ror #25
   1ac7c:	andeq	sl, r1, ip, ror #25
   1ac80:	andeq	sl, r1, ip, ror #25
   1ac84:	andeq	sl, r1, ip, ror #25
   1ac88:	andeq	sl, r1, ip, ror #25
   1ac8c:	andeq	sl, r1, ip, ror #25
   1ac90:	andeq	sl, r1, ip, ror #25
   1ac94:	andeq	sl, r1, ip, ror #25
   1ac98:	andeq	sl, r1, ip, ror #25
   1ac9c:	andeq	sl, r1, ip, ror #25
   1aca0:	andeq	sl, r1, ip, ror #25
   1aca4:	andeq	sl, r1, ip, ror #25
   1aca8:	andeq	sl, r1, ip, ror #25
   1acac:	andeq	sl, r1, ip, ror #25
   1acb0:	andeq	sl, r1, ip, ror #25
   1acb4:	andeq	sl, r1, ip, ror #25
   1acb8:	andeq	sl, r1, ip, ror #25
   1acbc:	andeq	sl, r1, ip, ror #25
   1acc0:	andeq	sl, r1, ip, ror #25
   1acc4:	andeq	sl, r1, ip, ror #25
   1acc8:	andeq	sl, r1, ip, ror #25
   1accc:	andeq	sl, r1, r4, ror #25
   1acd0:	andeq	sl, r1, r4, ror #25
   1acd4:	andeq	sl, r1, r4, ror #25
   1acd8:	andeq	sl, r1, r4, ror #25
   1acdc:	andeq	sl, r1, r4, ror #25
   1ace0:	andeq	sl, r1, r4, ror #25
   1ace4:	mov	r3, #1
   1ace8:	b	1acf0 <__assert_fail@plt+0x9be4>
   1acec:	mov	r3, #0
   1acf0:	mov	r0, r3
   1acf4:	add	sp, fp, #0
   1acf8:	pop	{fp}		; (ldr fp, [sp], #4)
   1acfc:	bx	lr
   1ad00:	push	{fp}		; (str fp, [sp, #-4]!)
   1ad04:	add	fp, sp, #0
   1ad08:	sub	sp, sp, #12
   1ad0c:	str	r0, [fp, #-8]
   1ad10:	ldr	r3, [fp, #-8]
   1ad14:	sub	r3, r3, #65	; 0x41
   1ad18:	cmp	r3, #25
   1ad1c:	bhi	1ad2c <__assert_fail@plt+0x9c20>
   1ad20:	ldr	r3, [fp, #-8]
   1ad24:	add	r3, r3, #32
   1ad28:	b	1ad30 <__assert_fail@plt+0x9c24>
   1ad2c:	ldr	r3, [fp, #-8]
   1ad30:	mov	r0, r3
   1ad34:	add	sp, fp, #0
   1ad38:	pop	{fp}		; (ldr fp, [sp], #4)
   1ad3c:	bx	lr
   1ad40:	push	{fp}		; (str fp, [sp, #-4]!)
   1ad44:	add	fp, sp, #0
   1ad48:	sub	sp, sp, #12
   1ad4c:	str	r0, [fp, #-8]
   1ad50:	ldr	r3, [fp, #-8]
   1ad54:	sub	r3, r3, #97	; 0x61
   1ad58:	cmp	r3, #25
   1ad5c:	bhi	1ad6c <__assert_fail@plt+0x9c60>
   1ad60:	ldr	r3, [fp, #-8]
   1ad64:	sub	r3, r3, #32
   1ad68:	b	1ad70 <__assert_fail@plt+0x9c64>
   1ad6c:	ldr	r3, [fp, #-8]
   1ad70:	mov	r0, r3
   1ad74:	add	sp, fp, #0
   1ad78:	pop	{fp}		; (ldr fp, [sp], #4)
   1ad7c:	bx	lr
   1ad80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ad84:	mov	r7, r0
   1ad88:	ldr	r6, [pc, #72]	; 1add8 <__assert_fail@plt+0x9ccc>
   1ad8c:	ldr	r5, [pc, #72]	; 1addc <__assert_fail@plt+0x9cd0>
   1ad90:	add	r6, pc, r6
   1ad94:	add	r5, pc, r5
   1ad98:	sub	r6, r6, r5
   1ad9c:	mov	r8, r1
   1ada0:	mov	r9, r2
   1ada4:	bl	10e28 <fdopen@plt-0x20>
   1ada8:	asrs	r6, r6, #2
   1adac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1adb0:	mov	r4, #0
   1adb4:	add	r4, r4, #1
   1adb8:	ldr	r3, [r5], #4
   1adbc:	mov	r2, r9
   1adc0:	mov	r1, r8
   1adc4:	mov	r0, r7
   1adc8:	blx	r3
   1adcc:	cmp	r6, r4
   1add0:	bne	1adb4 <__assert_fail@plt+0x9ca8>
   1add4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1add8:	andeq	r2, r1, ip, ror r1
   1addc:	andeq	r2, r1, r4, ror r1
   1ade0:	bx	lr
   1ade4:	ldr	r3, [pc, #12]	; 1adf8 <__assert_fail@plt+0x9cec>
   1ade8:	mov	r1, #0
   1adec:	add	r3, pc, r3
   1adf0:	ldr	r2, [r3]
   1adf4:	b	1101c <__cxa_atexit@plt>
   1adf8:	andeq	r2, r1, r0, lsl r3

Disassembly of section .fini:

0001adfc <.fini>:
   1adfc:	push	{r3, lr}
   1ae00:	pop	{r3, pc}
