
../repos/prog2/4:     file format elf32-littlearm


Disassembly of section .init:

00010960 <.init>:
   10960:	push	{r3, lr}
   10964:	bl	10a58 <_start@@Base+0x3c>
   10968:	pop	{r3, pc}

Disassembly of section .plt:

0001096c <strcmp@plt-0x14>:
   1096c:	push	{lr}		; (str lr, [sp, #-4]!)
   10970:	ldr	lr, [pc, #4]	; 1097c <strcmp@plt-0x4>
   10974:	add	lr, pc, lr
   10978:	ldr	pc, [lr, #8]!
   1097c:	andeq	r2, r1, r4, lsl #13

00010980 <strcmp@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #73728	; 0x12000
   10988:	ldr	pc, [ip, #1668]!	; 0x684

0001098c <printf@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #73728	; 0x12000
   10994:	ldr	pc, [ip, #1660]!	; 0x67c

00010998 <free@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #73728	; 0x12000
   109a0:	ldr	pc, [ip, #1652]!	; 0x674

000109a4 <strdup@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #73728	; 0x12000
   109ac:	ldr	pc, [ip, #1644]!	; 0x66c

000109b0 <strcpy@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #73728	; 0x12000
   109b8:	ldr	pc, [ip, #1636]!	; 0x664

000109bc <puts@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #73728	; 0x12000
   109c4:	ldr	pc, [ip, #1628]!	; 0x65c

000109c8 <malloc@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #73728	; 0x12000
   109d0:	ldr	pc, [ip, #1620]!	; 0x654

000109d4 <__libc_start_main@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #73728	; 0x12000
   109dc:	ldr	pc, [ip, #1612]!	; 0x64c

000109e0 <__gmon_start__@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #73728	; 0x12000
   109e8:	ldr	pc, [ip, #1604]!	; 0x644

000109ec <strlen@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #73728	; 0x12000
   109f4:	ldr	pc, [ip, #1596]!	; 0x63c

000109f8 <setvbuf@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #73728	; 0x12000
   10a00:	ldr	pc, [ip, #1588]!	; 0x634

00010a04 <putchar@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #73728	; 0x12000
   10a0c:	ldr	pc, [ip, #1580]!	; 0x62c

00010a10 <abort@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #73728	; 0x12000
   10a18:	ldr	pc, [ip, #1572]!	; 0x624

Disassembly of section .text:

00010a1c <_start@@Base>:
   10a1c:	mov	fp, #0
   10a20:	mov	lr, #0
   10a24:	pop	{r1}		; (ldr r1, [sp], #4)
   10a28:	mov	r2, sp
   10a2c:	push	{r2}		; (str r2, [sp, #-4]!)
   10a30:	push	{r0}		; (str r0, [sp, #-4]!)
   10a34:	ldr	ip, [pc, #16]	; 10a4c <_start@@Base+0x30>
   10a38:	push	{ip}		; (str ip, [sp, #-4]!)
   10a3c:	ldr	r0, [pc, #12]	; 10a50 <_start@@Base+0x34>
   10a40:	ldr	r3, [pc, #12]	; 10a54 <_start@@Base+0x38>
   10a44:	bl	109d4 <__libc_start_main@plt>
   10a48:	bl	10a10 <abort@plt>
   10a4c:	andeq	r1, r1, r0, asr fp
   10a50:	andeq	r1, r1, ip, ror r6
   10a54:	strdeq	r1, [r1], -r0
   10a58:	ldr	r3, [pc, #20]	; 10a74 <_start@@Base+0x58>
   10a5c:	ldr	r2, [pc, #20]	; 10a78 <_start@@Base+0x5c>
   10a60:	add	r3, pc, r3
   10a64:	ldr	r2, [r3, r2]
   10a68:	cmp	r2, #0
   10a6c:	bxeq	lr
   10a70:	b	109e0 <__gmon_start__@plt>
   10a74:	muleq	r1, r8, r5
   10a78:	andeq	r0, r0, r0, asr #32
   10a7c:	ldr	r3, [pc, #28]	; 10aa0 <_start@@Base+0x84>
   10a80:	ldr	r0, [pc, #28]	; 10aa4 <_start@@Base+0x88>
   10a84:	sub	r3, r3, r0
   10a88:	cmp	r3, #6
   10a8c:	bxls	lr
   10a90:	ldr	r3, [pc, #16]	; 10aa8 <_start@@Base+0x8c>
   10a94:	cmp	r3, #0
   10a98:	bxeq	lr
   10a9c:	bx	r3
   10aa0:	andeq	r3, r2, pc, asr #32
   10aa4:	andeq	r3, r2, ip, asr #32
   10aa8:	andeq	r0, r0, r0
   10aac:	ldr	r1, [pc, #36]	; 10ad8 <_start@@Base+0xbc>
   10ab0:	ldr	r0, [pc, #36]	; 10adc <_start@@Base+0xc0>
   10ab4:	sub	r1, r1, r0
   10ab8:	asr	r1, r1, #2
   10abc:	add	r1, r1, r1, lsr #31
   10ac0:	asrs	r1, r1, #1
   10ac4:	bxeq	lr
   10ac8:	ldr	r3, [pc, #16]	; 10ae0 <_start@@Base+0xc4>
   10acc:	cmp	r3, #0
   10ad0:	bxeq	lr
   10ad4:	bx	r3
   10ad8:	andeq	r3, r2, ip, asr #32
   10adc:	andeq	r3, r2, ip, asr #32
   10ae0:	andeq	r0, r0, r0
   10ae4:	push	{r4, lr}
   10ae8:	ldr	r4, [pc, #24]	; 10b08 <_start@@Base+0xec>
   10aec:	ldrb	r3, [r4]
   10af0:	cmp	r3, #0
   10af4:	popne	{r4, pc}
   10af8:	bl	10a7c <_start@@Base+0x60>
   10afc:	mov	r3, #1
   10b00:	strb	r3, [r4]
   10b04:	pop	{r4, pc}
   10b08:	andeq	r3, r2, r8, asr r0
   10b0c:	ldr	r0, [pc, #40]	; 10b3c <_start@@Base+0x120>
   10b10:	ldr	r3, [r0]
   10b14:	cmp	r3, #0
   10b18:	bne	10b20 <_start@@Base+0x104>
   10b1c:	b	10aac <_start@@Base+0x90>
   10b20:	ldr	r3, [pc, #24]	; 10b40 <_start@@Base+0x124>
   10b24:	cmp	r3, #0
   10b28:	beq	10b1c <_start@@Base+0x100>
   10b2c:	push	{r4, lr}
   10b30:	blx	r3
   10b34:	pop	{r4, lr}
   10b38:	b	10aac <_start@@Base+0x90>
   10b3c:	andeq	r2, r2, r4, lsl pc
   10b40:	andeq	r0, r0, r0

00010b44 <_l@@Base>:
   10b44:	push	{r0, r1, r2, r3}
   10b48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b4c:	sub	sp, sp, #8
   10b50:	ldr	r7, [sp, #40]	; 0x28
   10b54:	mov	r0, #12
   10b58:	bl	109c8 <malloc@plt>
   10b5c:	mov	r9, r0
   10b60:	mov	r3, #0
   10b64:	str	r3, [r0]
   10b68:	str	r3, [r0, #4]
   10b6c:	str	r7, [r0, #8]
   10b70:	add	r3, sp, #44	; 0x2c
   10b74:	str	r3, [sp, #4]
   10b78:	cmp	r7, #0
   10b7c:	ble	10be0 <_l@@Base+0x9c>
   10b80:	mov	r5, #0
   10b84:	mov	r8, #12
   10b88:	mov	sl, r5
   10b8c:	ldr	r3, [sp, #4]
   10b90:	add	r2, r3, #4
   10b94:	str	r2, [sp, #4]
   10b98:	ldr	r6, [r3]
   10b9c:	cmp	r5, #0
   10ba0:	beq	10c00 <_l@@Base+0xbc>
   10ba4:	mov	r0, r8
   10ba8:	bl	109c8 <malloc@plt>
   10bac:	str	r0, [r4, #4]
   10bb0:	str	r4, [r0, #8]
   10bb4:	ldr	r4, [r4, #4]
   10bb8:	mov	r0, r6
   10bbc:	bl	109ec <strlen@plt>
   10bc0:	add	r0, r0, #1
   10bc4:	bl	109c8 <malloc@plt>
   10bc8:	str	r0, [r4]
   10bcc:	mov	r1, r6
   10bd0:	bl	109b0 <strcpy@plt>
   10bd4:	add	r5, r5, #1
   10bd8:	cmp	r7, r5
   10bdc:	bne	10b8c <_l@@Base+0x48>
   10be0:	mov	r3, #0
   10be4:	str	r3, [r4, #4]
   10be8:	str	r4, [r9, #4]
   10bec:	mov	r0, r9
   10bf0:	add	sp, sp, #8
   10bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   10bf8:	add	sp, sp, #16
   10bfc:	bx	lr
   10c00:	mov	r0, r8
   10c04:	bl	109c8 <malloc@plt>
   10c08:	str	r0, [r9]
   10c0c:	str	sl, [r0, #8]
   10c10:	mov	r4, r0
   10c14:	b	10bb8 <_l@@Base+0x74>

00010c18 <_f@@Base>:
   10c18:	cmp	r0, #0
   10c1c:	beq	10c68 <_f@@Base+0x50>
   10c20:	ldr	r3, [r0]
   10c24:	cmp	r3, #0
   10c28:	cmpne	r1, #0
   10c2c:	ble	10c58 <_f@@Base+0x40>
   10c30:	mov	r2, #0
   10c34:	ldr	r3, [r3, #4]
   10c38:	add	r2, r2, #1
   10c3c:	cmp	r3, #0
   10c40:	cmpne	r1, r2
   10c44:	bgt	10c34 <_f@@Base+0x1c>
   10c48:	cmp	r1, r2
   10c4c:	beq	10c60 <_f@@Base+0x48>
   10c50:	ldr	r0, [pc, #24]	; 10c70 <_f@@Base+0x58>
   10c54:	bx	lr
   10c58:	mov	r2, #0
   10c5c:	b	10c48 <_f@@Base+0x30>
   10c60:	ldr	r0, [r3]
   10c64:	bx	lr
   10c68:	mov	r0, #0
   10c6c:	bx	lr
   10c70:	andeq	r1, r1, ip, lsr #30

00010c74 <teste_lista_nova@@Base>:
   10c74:	push	{r4, r5, r6, lr}
   10c78:	ldr	r0, [pc, #104]	; 10ce8 <teste_lista_nova@@Base+0x74>
   10c7c:	bl	1098c <printf@plt>
   10c80:	bl	11710 <lista_nova@@Base>
   10c84:	subs	r5, r0, #0
   10c88:	beq	10cb0 <teste_lista_nova@@Base+0x3c>
   10c8c:	ldr	r4, [r5, #8]
   10c90:	cmp	r4, #0
   10c94:	bne	10cc8 <teste_lista_nova@@Base+0x54>
   10c98:	mov	r0, r5
   10c9c:	bl	1172c <lista_apaga@@Base>
   10ca0:	ldr	r0, [pc, #68]	; 10cec <teste_lista_nova@@Base+0x78>
   10ca4:	bl	109bc <puts@plt>
   10ca8:	mov	r0, r4
   10cac:	pop	{r4, r5, r6, pc}
   10cb0:	ldr	r0, [pc, #56]	; 10cf0 <teste_lista_nova@@Base+0x7c>
   10cb4:	bl	1098c <printf@plt>
   10cb8:	mov	r0, #10
   10cbc:	bl	10a04 <putchar@plt>
   10cc0:	mov	r4, #1
   10cc4:	b	10ca8 <teste_lista_nova@@Base+0x34>
   10cc8:	ldr	r0, [pc, #36]	; 10cf4 <teste_lista_nova@@Base+0x80>
   10ccc:	bl	1098c <printf@plt>
   10cd0:	mov	r0, r5
   10cd4:	bl	1172c <lista_apaga@@Base>
   10cd8:	mov	r0, #10
   10cdc:	bl	10a04 <putchar@plt>
   10ce0:	mov	r4, #1
   10ce4:	b	10ca8 <teste_lista_nova@@Base+0x34>
   10ce8:	andeq	r1, r1, r0, ror #22
   10cec:	andeq	r1, r1, ip, lsr #23
   10cf0:	andeq	r1, r1, r0, ror fp
   10cf4:	andeq	r1, r1, r8, lsl #23

00010cf8 <teste_lista_insere@@Base>:
   10cf8:	push	{r4, r5, r6, lr}
   10cfc:	ldr	r1, [pc, #760]	; 10ffc <teste_lista_insere@@Base+0x304>
   10d00:	mov	r2, r1
   10d04:	mov	r0, #2
   10d08:	bl	10b44 <_l@@Base>
   10d0c:	mov	r4, r0
   10d10:	ldr	r0, [pc, #744]	; 11000 <teste_lista_insere@@Base+0x308>
   10d14:	bl	1098c <printf@plt>
   10d18:	ldr	r3, [r4]
   10d1c:	ldr	r2, [r3, #4]
   10d20:	ldr	r1, [pc, #732]	; 11004 <teste_lista_insere@@Base+0x30c>
   10d24:	mov	r0, r4
   10d28:	bl	117c4 <lista_insere@@Base>
   10d2c:	cmp	r0, #0
   10d30:	movne	r5, #0
   10d34:	beq	10d74 <teste_lista_insere@@Base+0x7c>
   10d38:	ldr	r3, [r4, #8]
   10d3c:	cmp	r3, #3
   10d40:	beq	10d90 <teste_lista_insere@@Base+0x98>
   10d44:	ldr	r0, [pc, #700]	; 11008 <teste_lista_insere@@Base+0x310>
   10d48:	bl	1098c <printf@plt>
   10d4c:	add	r5, r5, #1
   10d50:	ldr	r3, [r4, #8]
   10d54:	cmp	r3, #3
   10d58:	beq	10d90 <teste_lista_insere@@Base+0x98>
   10d5c:	cmp	r5, #0
   10d60:	bne	10d84 <teste_lista_insere@@Base+0x8c>
   10d64:	ldr	r0, [pc, #672]	; 1100c <teste_lista_insere@@Base+0x314>
   10d68:	bl	109bc <puts@plt>
   10d6c:	mov	r0, r5
   10d70:	pop	{r4, r5, r6, pc}
   10d74:	ldr	r0, [pc, #660]	; 11010 <teste_lista_insere@@Base+0x318>
   10d78:	bl	1098c <printf@plt>
   10d7c:	mov	r5, #1
   10d80:	b	10d38 <teste_lista_insere@@Base+0x40>
   10d84:	mov	r0, #10
   10d88:	bl	10a04 <putchar@plt>
   10d8c:	b	10d6c <teste_lista_insere@@Base+0x74>
   10d90:	ldr	r6, [r4]
   10d94:	ldr	r1, [pc, #608]	; 10ffc <teste_lista_insere@@Base+0x304>
   10d98:	ldr	r0, [r6]
   10d9c:	bl	10980 <strcmp@plt>
   10da0:	cmp	r0, #0
   10da4:	bne	10dd8 <teste_lista_insere@@Base+0xe0>
   10da8:	ldr	r6, [r6, #4]
   10dac:	ldr	r1, [pc, #592]	; 11004 <teste_lista_insere@@Base+0x30c>
   10db0:	ldr	r0, [r6]
   10db4:	bl	10980 <strcmp@plt>
   10db8:	cmp	r0, #0
   10dbc:	bne	10dd8 <teste_lista_insere@@Base+0xe0>
   10dc0:	ldr	r3, [r6, #4]
   10dc4:	ldr	r1, [pc, #560]	; 10ffc <teste_lista_insere@@Base+0x304>
   10dc8:	ldr	r0, [r3]
   10dcc:	bl	10980 <strcmp@plt>
   10dd0:	cmp	r0, #0
   10dd4:	beq	10de4 <teste_lista_insere@@Base+0xec>
   10dd8:	ldr	r0, [pc, #564]	; 11014 <teste_lista_insere@@Base+0x31c>
   10ddc:	bl	1098c <printf@plt>
   10de0:	add	r5, r5, #1
   10de4:	ldr	r2, [r4]
   10de8:	ldr	r1, [pc, #532]	; 11004 <teste_lista_insere@@Base+0x30c>
   10dec:	mov	r0, r4
   10df0:	bl	117c4 <lista_insere@@Base>
   10df4:	ldr	r3, [r4]
   10df8:	cmp	r3, r0
   10dfc:	beq	10e0c <teste_lista_insere@@Base+0x114>
   10e00:	ldr	r0, [pc, #528]	; 11018 <teste_lista_insere@@Base+0x320>
   10e04:	bl	1098c <printf@plt>
   10e08:	add	r5, r5, #1
   10e0c:	ldr	r3, [r4, #8]
   10e10:	cmp	r3, #4
   10e14:	beq	10e50 <teste_lista_insere@@Base+0x158>
   10e18:	ldr	r0, [pc, #508]	; 1101c <teste_lista_insere@@Base+0x324>
   10e1c:	bl	1098c <printf@plt>
   10e20:	add	r5, r5, #1
   10e24:	ldr	r3, [r4, #8]
   10e28:	cmp	r3, #4
   10e2c:	beq	10e50 <teste_lista_insere@@Base+0x158>
   10e30:	cmp	r5, #0
   10e34:	bne	10e44 <teste_lista_insere@@Base+0x14c>
   10e38:	ldr	r0, [pc, #460]	; 1100c <teste_lista_insere@@Base+0x314>
   10e3c:	bl	109bc <puts@plt>
   10e40:	b	10d6c <teste_lista_insere@@Base+0x74>
   10e44:	mov	r0, #10
   10e48:	bl	10a04 <putchar@plt>
   10e4c:	b	10d6c <teste_lista_insere@@Base+0x74>
   10e50:	ldr	r6, [r4]
   10e54:	ldr	r1, [pc, #424]	; 11004 <teste_lista_insere@@Base+0x30c>
   10e58:	ldr	r0, [r6]
   10e5c:	bl	10980 <strcmp@plt>
   10e60:	cmp	r0, #0
   10e64:	bne	10eb0 <teste_lista_insere@@Base+0x1b8>
   10e68:	ldr	r6, [r6, #4]
   10e6c:	ldr	r1, [pc, #392]	; 10ffc <teste_lista_insere@@Base+0x304>
   10e70:	ldr	r0, [r6]
   10e74:	bl	10980 <strcmp@plt>
   10e78:	cmp	r0, #0
   10e7c:	bne	10eb0 <teste_lista_insere@@Base+0x1b8>
   10e80:	ldr	r6, [r6, #4]
   10e84:	ldr	r1, [pc, #376]	; 11004 <teste_lista_insere@@Base+0x30c>
   10e88:	ldr	r0, [r6]
   10e8c:	bl	10980 <strcmp@plt>
   10e90:	cmp	r0, #0
   10e94:	bne	10eb0 <teste_lista_insere@@Base+0x1b8>
   10e98:	ldr	r3, [r6, #4]
   10e9c:	ldr	r1, [pc, #344]	; 10ffc <teste_lista_insere@@Base+0x304>
   10ea0:	ldr	r0, [r3]
   10ea4:	bl	10980 <strcmp@plt>
   10ea8:	cmp	r0, #0
   10eac:	beq	10ebc <teste_lista_insere@@Base+0x1c4>
   10eb0:	ldr	r0, [pc, #348]	; 11014 <teste_lista_insere@@Base+0x31c>
   10eb4:	bl	1098c <printf@plt>
   10eb8:	add	r5, r5, #1
   10ebc:	mov	r2, #0
   10ec0:	ldr	r1, [pc, #316]	; 11004 <teste_lista_insere@@Base+0x30c>
   10ec4:	mov	r0, r4
   10ec8:	bl	117c4 <lista_insere@@Base>
   10ecc:	ldr	r3, [r4, #8]
   10ed0:	cmp	r3, #5
   10ed4:	beq	10f10 <teste_lista_insere@@Base+0x218>
   10ed8:	ldr	r0, [pc, #320]	; 11020 <teste_lista_insere@@Base+0x328>
   10edc:	bl	1098c <printf@plt>
   10ee0:	add	r5, r5, #1
   10ee4:	ldr	r3, [r4, #8]
   10ee8:	cmp	r3, #5
   10eec:	beq	10f10 <teste_lista_insere@@Base+0x218>
   10ef0:	cmp	r5, #0
   10ef4:	bne	10f04 <teste_lista_insere@@Base+0x20c>
   10ef8:	ldr	r0, [pc, #268]	; 1100c <teste_lista_insere@@Base+0x314>
   10efc:	bl	109bc <puts@plt>
   10f00:	b	10d6c <teste_lista_insere@@Base+0x74>
   10f04:	mov	r0, #10
   10f08:	bl	10a04 <putchar@plt>
   10f0c:	b	10d6c <teste_lista_insere@@Base+0x74>
   10f10:	ldr	r3, [r4]
   10f14:	ldr	r3, [r3, #4]
   10f18:	ldr	r3, [r3, #4]
   10f1c:	ldr	r3, [r3, #4]
   10f20:	ldr	r3, [r3, #4]
   10f24:	ldr	r1, [pc, #216]	; 11004 <teste_lista_insere@@Base+0x30c>
   10f28:	ldr	r0, [r3]
   10f2c:	bl	10980 <strcmp@plt>
   10f30:	cmp	r0, #0
   10f34:	bne	10f90 <teste_lista_insere@@Base+0x298>
   10f38:	mov	r0, r4
   10f3c:	bl	1172c <lista_apaga@@Base>
   10f40:	bl	11710 <lista_nova@@Base>
   10f44:	mov	r4, r0
   10f48:	mov	r2, #0
   10f4c:	ldr	r1, [pc, #176]	; 11004 <teste_lista_insere@@Base+0x30c>
   10f50:	bl	117c4 <lista_insere@@Base>
   10f54:	ldr	r3, [r4, #8]
   10f58:	cmp	r3, #1
   10f5c:	beq	10f6c <teste_lista_insere@@Base+0x274>
   10f60:	ldr	r0, [pc, #188]	; 11024 <teste_lista_insere@@Base+0x32c>
   10f64:	bl	1098c <printf@plt>
   10f68:	add	r5, r5, #1
   10f6c:	mov	r0, r4
   10f70:	bl	11794 <lista_tamanho@@Base>
   10f74:	cmp	r0, #1
   10f78:	beq	10fac <teste_lista_insere@@Base+0x2b4>
   10f7c:	cmp	r5, #0
   10f80:	bne	10fa0 <teste_lista_insere@@Base+0x2a8>
   10f84:	ldr	r0, [pc, #128]	; 1100c <teste_lista_insere@@Base+0x314>
   10f88:	bl	109bc <puts@plt>
   10f8c:	b	10d6c <teste_lista_insere@@Base+0x74>
   10f90:	ldr	r0, [pc, #124]	; 11014 <teste_lista_insere@@Base+0x31c>
   10f94:	bl	1098c <printf@plt>
   10f98:	add	r5, r5, #1
   10f9c:	b	10f38 <teste_lista_insere@@Base+0x240>
   10fa0:	mov	r0, #10
   10fa4:	bl	10a04 <putchar@plt>
   10fa8:	b	10d6c <teste_lista_insere@@Base+0x74>
   10fac:	ldr	r3, [r4]
   10fb0:	ldr	r1, [pc, #76]	; 11004 <teste_lista_insere@@Base+0x30c>
   10fb4:	ldr	r0, [r3]
   10fb8:	bl	10980 <strcmp@plt>
   10fbc:	cmp	r0, #0
   10fc0:	bne	10fe0 <teste_lista_insere@@Base+0x2e8>
   10fc4:	mov	r0, r4
   10fc8:	bl	1172c <lista_apaga@@Base>
   10fcc:	cmp	r5, #0
   10fd0:	beq	10ff0 <teste_lista_insere@@Base+0x2f8>
   10fd4:	mov	r0, #10
   10fd8:	bl	10a04 <putchar@plt>
   10fdc:	b	10d6c <teste_lista_insere@@Base+0x74>
   10fe0:	ldr	r0, [pc, #44]	; 11014 <teste_lista_insere@@Base+0x31c>
   10fe4:	bl	1098c <printf@plt>
   10fe8:	add	r5, r5, #1
   10fec:	b	10fc4 <teste_lista_insere@@Base+0x2cc>
   10ff0:	ldr	r0, [pc, #20]	; 1100c <teste_lista_insere@@Base+0x314>
   10ff4:	bl	109bc <puts@plt>
   10ff8:	b	10d6c <teste_lista_insere@@Base+0x74>
   10ffc:			; <UNDEFINED> instruction: 0x00011bb0
   11000:			; <UNDEFINED> instruction: 0x00011bb4
   11004:	andeq	r1, r1, r8, asr #23
   11008:	strdeq	r1, [r1], -ip
   1100c:	andeq	r1, r1, ip, lsr #23
   11010:	ldrdeq	r1, [r1], -r0
   11014:	andeq	r1, r1, r8, lsr ip
   11018:	andeq	r1, r1, r0, ror ip
   1101c:	andeq	r1, r1, r0, lsr #25
   11020:	ldrdeq	r1, [r1], -ip
   11024:	andeq	r1, r1, r8, lsl sp

00011028 <teste_lista_remove@@Base>:
   11028:	push	{r4, r5, r6, lr}
   1102c:	sub	sp, sp, #8
   11030:	ldr	r3, [pc, #304]	; 11168 <teste_lista_remove@@Base+0x140>
   11034:	str	r3, [sp, #4]
   11038:	ldr	r3, [pc, #300]	; 1116c <teste_lista_remove@@Base+0x144>
   1103c:	str	r3, [sp]
   11040:	ldr	r3, [pc, #296]	; 11170 <teste_lista_remove@@Base+0x148>
   11044:	ldr	r2, [pc, #296]	; 11174 <teste_lista_remove@@Base+0x14c>
   11048:	ldr	r1, [pc, #296]	; 11178 <teste_lista_remove@@Base+0x150>
   1104c:	mov	r0, #5
   11050:	bl	10b44 <_l@@Base>
   11054:	mov	r4, r0
   11058:	ldr	r0, [pc, #284]	; 1117c <teste_lista_remove@@Base+0x154>
   1105c:	bl	1098c <printf@plt>
   11060:	ldr	r3, [r4]
   11064:	ldr	r3, [r3, #4]
   11068:	ldr	r3, [r3, #4]
   1106c:	ldr	r1, [r3, #4]
   11070:	mov	r0, r4
   11074:	bl	1188c <lista_remove@@Base>
   11078:	ldr	r3, [r4, #4]
   1107c:	cmp	r3, r0
   11080:	moveq	r5, #0
   11084:	beq	11094 <teste_lista_remove@@Base+0x6c>
   11088:	ldr	r0, [pc, #240]	; 11180 <teste_lista_remove@@Base+0x158>
   1108c:	bl	1098c <printf@plt>
   11090:	mov	r5, #1
   11094:	ldr	r3, [r4, #8]
   11098:	cmp	r3, #4
   1109c:	beq	110ac <teste_lista_remove@@Base+0x84>
   110a0:	ldr	r0, [pc, #220]	; 11184 <teste_lista_remove@@Base+0x15c>
   110a4:	bl	1098c <printf@plt>
   110a8:	add	r5, r5, #1
   110ac:	ldr	r6, [r4]
   110b0:	ldr	r1, [pc, #192]	; 11178 <teste_lista_remove@@Base+0x150>
   110b4:	ldr	r0, [r6]
   110b8:	bl	10980 <strcmp@plt>
   110bc:	cmp	r0, #0
   110c0:	bne	1110c <teste_lista_remove@@Base+0xe4>
   110c4:	ldr	r6, [r6, #4]
   110c8:	ldr	r1, [pc, #164]	; 11174 <teste_lista_remove@@Base+0x14c>
   110cc:	ldr	r0, [r6]
   110d0:	bl	10980 <strcmp@plt>
   110d4:	cmp	r0, #0
   110d8:	bne	1110c <teste_lista_remove@@Base+0xe4>
   110dc:	ldr	r6, [r6, #4]
   110e0:	ldr	r1, [pc, #136]	; 11170 <teste_lista_remove@@Base+0x148>
   110e4:	ldr	r0, [r6]
   110e8:	bl	10980 <strcmp@plt>
   110ec:	cmp	r0, #0
   110f0:	bne	1110c <teste_lista_remove@@Base+0xe4>
   110f4:	ldr	r3, [r6, #4]
   110f8:	ldr	r1, [pc, #104]	; 11168 <teste_lista_remove@@Base+0x140>
   110fc:	ldr	r0, [r3]
   11100:	bl	10980 <strcmp@plt>
   11104:	cmp	r0, #0
   11108:	beq	11118 <teste_lista_remove@@Base+0xf0>
   1110c:	ldr	r0, [pc, #116]	; 11188 <teste_lista_remove@@Base+0x160>
   11110:	bl	1098c <printf@plt>
   11114:	add	r5, r5, #1
   11118:	mov	r1, #0
   1111c:	mov	r0, r4
   11120:	bl	1188c <lista_remove@@Base>
   11124:	cmp	r0, #0
   11128:	beq	11138 <teste_lista_remove@@Base+0x110>
   1112c:	ldr	r0, [pc, #88]	; 1118c <teste_lista_remove@@Base+0x164>
   11130:	bl	1098c <printf@plt>
   11134:	add	r5, r5, #1
   11138:	mov	r0, r4
   1113c:	bl	1172c <lista_apaga@@Base>
   11140:	cmp	r5, #0
   11144:	beq	1115c <teste_lista_remove@@Base+0x134>
   11148:	mov	r0, #10
   1114c:	bl	10a04 <putchar@plt>
   11150:	mov	r0, r5
   11154:	add	sp, sp, #8
   11158:	pop	{r4, r5, r6, pc}
   1115c:	ldr	r0, [pc, #44]	; 11190 <teste_lista_remove@@Base+0x168>
   11160:	bl	109bc <puts@plt>
   11164:	b	11150 <teste_lista_remove@@Base+0x128>
   11168:	andeq	r1, r1, r0, ror #26
   1116c:	andeq	r1, r1, r4, ror #26
   11170:	andeq	r1, r1, r4, asr sp
   11174:	andeq	r1, r1, r8, asr sp
   11178:	andeq	r1, r1, ip, asr sp
   1117c:	andeq	r1, r1, r8, ror #26
   11180:	andeq	r1, r1, ip, ror sp
   11184:			; <UNDEFINED> instruction: 0x00011db8
   11188:	strdeq	r1, [r1], -r4
   1118c:	andeq	r1, r1, ip, lsr #28
   11190:	andeq	r1, r1, ip, lsr #23

00011194 <teste_lista_pesquisa@@Base>:
   11194:	push	{r4, r5, lr}
   11198:	sub	sp, sp, #20
   1119c:	ldr	r1, [pc, #288]	; 112c4 <teste_lista_pesquisa@@Base+0x130>
   111a0:	str	r1, [sp, #12]
   111a4:	str	r1, [sp, #8]
   111a8:	ldr	r5, [pc, #280]	; 112c8 <teste_lista_pesquisa@@Base+0x134>
   111ac:	str	r5, [sp, #4]
   111b0:	str	r1, [sp]
   111b4:	mov	r3, r1
   111b8:	mov	r2, r1
   111bc:	mov	r0, #7
   111c0:	bl	10b44 <_l@@Base>
   111c4:	mov	r4, r0
   111c8:	ldr	r0, [pc, #252]	; 112cc <teste_lista_pesquisa@@Base+0x138>
   111cc:	bl	1098c <printf@plt>
   111d0:	mov	r2, #0
   111d4:	mov	r1, r5
   111d8:	mov	r0, r4
   111dc:	bl	11918 <lista_pesquisa@@Base>
   111e0:	ldr	r3, [r4]
   111e4:	ldr	r3, [r3, #4]
   111e8:	ldr	r3, [r3, #4]
   111ec:	ldr	r3, [r3, #4]
   111f0:	ldr	r3, [r3, #4]
   111f4:	cmp	r3, r0
   111f8:	moveq	r5, #0
   111fc:	beq	1120c <teste_lista_pesquisa@@Base+0x78>
   11200:	ldr	r0, [pc, #200]	; 112d0 <teste_lista_pesquisa@@Base+0x13c>
   11204:	bl	1098c <printf@plt>
   11208:	mov	r5, #1
   1120c:	mov	r2, #0
   11210:	ldr	r1, [pc, #188]	; 112d4 <teste_lista_pesquisa@@Base+0x140>
   11214:	mov	r0, r4
   11218:	bl	11918 <lista_pesquisa@@Base>
   1121c:	cmp	r0, #0
   11220:	beq	11230 <teste_lista_pesquisa@@Base+0x9c>
   11224:	ldr	r0, [pc, #172]	; 112d8 <teste_lista_pesquisa@@Base+0x144>
   11228:	bl	1098c <printf@plt>
   1122c:	add	r5, r5, #1
   11230:	mov	r2, #1
   11234:	ldr	r1, [pc, #136]	; 112c4 <teste_lista_pesquisa@@Base+0x130>
   11238:	mov	r0, r4
   1123c:	bl	11918 <lista_pesquisa@@Base>
   11240:	ldr	r3, [r4]
   11244:	ldr	r3, [r3, #4]
   11248:	ldr	r3, [r3, #4]
   1124c:	ldr	r3, [r3, #4]
   11250:	ldr	r3, [r3, #4]
   11254:	ldr	r3, [r3, #4]
   11258:	ldr	r3, [r3, #4]
   1125c:	cmp	r3, r0
   11260:	beq	11270 <teste_lista_pesquisa@@Base+0xdc>
   11264:	ldr	r0, [pc, #100]	; 112d0 <teste_lista_pesquisa@@Base+0x13c>
   11268:	bl	1098c <printf@plt>
   1126c:	add	r5, r5, #1
   11270:	mov	r2, #1
   11274:	ldr	r1, [pc, #88]	; 112d4 <teste_lista_pesquisa@@Base+0x140>
   11278:	mov	r0, r4
   1127c:	bl	11918 <lista_pesquisa@@Base>
   11280:	cmp	r0, #0
   11284:	beq	11294 <teste_lista_pesquisa@@Base+0x100>
   11288:	ldr	r0, [pc, #72]	; 112d8 <teste_lista_pesquisa@@Base+0x144>
   1128c:	bl	1098c <printf@plt>
   11290:	add	r5, r5, #1
   11294:	mov	r0, r4
   11298:	bl	1172c <lista_apaga@@Base>
   1129c:	cmp	r5, #0
   112a0:	beq	112b8 <teste_lista_pesquisa@@Base+0x124>
   112a4:	mov	r0, #10
   112a8:	bl	10a04 <putchar@plt>
   112ac:	mov	r0, r5
   112b0:	add	sp, sp, #20
   112b4:	pop	{r4, r5, pc}
   112b8:	ldr	r0, [pc, #28]	; 112dc <teste_lista_pesquisa@@Base+0x148>
   112bc:	bl	109bc <puts@plt>
   112c0:	b	112ac <teste_lista_pesquisa@@Base+0x118>
   112c4:			; <UNDEFINED> instruction: 0x00011bb0
   112c8:	andeq	r1, r1, r0, ror #28
   112cc:	andeq	r1, r1, r4, ror #28
   112d0:	andeq	r1, r1, r8, ror lr
   112d4:	andeq	r1, r1, r0, asr #29
   112d8:	andeq	r1, r1, r8, asr #29
   112dc:	andeq	r1, r1, ip, lsr #23

000112e0 <teste_lista_ordena@@Base>:
   112e0:	push	{r4, r5, r6, lr}
   112e4:	sub	sp, sp, #8
   112e8:	ldr	r3, [pc, #392]	; 11478 <teste_lista_ordena@@Base+0x198>
   112ec:	str	r3, [sp, #4]
   112f0:	ldr	r3, [pc, #388]	; 1147c <teste_lista_ordena@@Base+0x19c>
   112f4:	str	r3, [sp]
   112f8:	ldr	r3, [pc, #384]	; 11480 <teste_lista_ordena@@Base+0x1a0>
   112fc:	ldr	r2, [pc, #384]	; 11484 <teste_lista_ordena@@Base+0x1a4>
   11300:	ldr	r1, [pc, #384]	; 11488 <teste_lista_ordena@@Base+0x1a8>
   11304:	mov	r0, #5
   11308:	bl	10b44 <_l@@Base>
   1130c:	mov	r5, r0
   11310:	ldr	r0, [pc, #372]	; 1148c <teste_lista_ordena@@Base+0x1ac>
   11314:	bl	1098c <printf@plt>
   11318:	mov	r0, #0
   1131c:	bl	119d8 <lista_ordena@@Base>
   11320:	cmn	r0, #1
   11324:	moveq	r4, #0
   11328:	beq	11338 <teste_lista_ordena@@Base+0x58>
   1132c:	ldr	r0, [pc, #348]	; 11490 <teste_lista_ordena@@Base+0x1b0>
   11330:	bl	1098c <printf@plt>
   11334:	mov	r4, #1
   11338:	mov	r0, r5
   1133c:	bl	119d8 <lista_ordena@@Base>
   11340:	ldr	r6, [r5]
   11344:	ldr	r1, [pc, #316]	; 11488 <teste_lista_ordena@@Base+0x1a8>
   11348:	ldr	r0, [r6]
   1134c:	bl	10980 <strcmp@plt>
   11350:	cmp	r0, #0
   11354:	bne	113b8 <teste_lista_ordena@@Base+0xd8>
   11358:	ldr	r6, [r6, #4]
   1135c:	ldr	r1, [pc, #288]	; 11484 <teste_lista_ordena@@Base+0x1a4>
   11360:	ldr	r0, [r6]
   11364:	bl	10980 <strcmp@plt>
   11368:	cmp	r0, #0
   1136c:	bne	113b8 <teste_lista_ordena@@Base+0xd8>
   11370:	ldr	r6, [r6, #4]
   11374:	ldr	r1, [pc, #256]	; 1147c <teste_lista_ordena@@Base+0x19c>
   11378:	ldr	r0, [r6]
   1137c:	bl	10980 <strcmp@plt>
   11380:	cmp	r0, #0
   11384:	bne	113b8 <teste_lista_ordena@@Base+0xd8>
   11388:	ldr	r6, [r6, #4]
   1138c:	ldr	r1, [pc, #228]	; 11478 <teste_lista_ordena@@Base+0x198>
   11390:	ldr	r0, [r6]
   11394:	bl	10980 <strcmp@plt>
   11398:	cmp	r0, #0
   1139c:	bne	113b8 <teste_lista_ordena@@Base+0xd8>
   113a0:	ldr	r3, [r6, #4]
   113a4:	ldr	r1, [pc, #212]	; 11480 <teste_lista_ordena@@Base+0x1a0>
   113a8:	ldr	r0, [r3]
   113ac:	bl	10980 <strcmp@plt>
   113b0:	cmp	r0, #0
   113b4:	beq	113c4 <teste_lista_ordena@@Base+0xe4>
   113b8:	ldr	r0, [pc, #212]	; 11494 <teste_lista_ordena@@Base+0x1b4>
   113bc:	bl	1098c <printf@plt>
   113c0:	add	r4, r4, #1
   113c4:	ldr	r6, [r5, #4]
   113c8:	ldr	r1, [pc, #176]	; 11480 <teste_lista_ordena@@Base+0x1a0>
   113cc:	ldr	r0, [r6]
   113d0:	bl	10980 <strcmp@plt>
   113d4:	cmp	r0, #0
   113d8:	bne	1143c <teste_lista_ordena@@Base+0x15c>
   113dc:	ldr	r6, [r6, #8]
   113e0:	ldr	r1, [pc, #144]	; 11478 <teste_lista_ordena@@Base+0x198>
   113e4:	ldr	r0, [r6]
   113e8:	bl	10980 <strcmp@plt>
   113ec:	cmp	r0, #0
   113f0:	bne	1143c <teste_lista_ordena@@Base+0x15c>
   113f4:	ldr	r6, [r6, #8]
   113f8:	ldr	r1, [pc, #124]	; 1147c <teste_lista_ordena@@Base+0x19c>
   113fc:	ldr	r0, [r6]
   11400:	bl	10980 <strcmp@plt>
   11404:	cmp	r0, #0
   11408:	bne	1143c <teste_lista_ordena@@Base+0x15c>
   1140c:	ldr	r6, [r6, #8]
   11410:	ldr	r1, [pc, #108]	; 11484 <teste_lista_ordena@@Base+0x1a4>
   11414:	ldr	r0, [r6]
   11418:	bl	10980 <strcmp@plt>
   1141c:	cmp	r0, #0
   11420:	bne	1143c <teste_lista_ordena@@Base+0x15c>
   11424:	ldr	r3, [r6, #8]
   11428:	ldr	r1, [pc, #88]	; 11488 <teste_lista_ordena@@Base+0x1a8>
   1142c:	ldr	r0, [r3]
   11430:	bl	10980 <strcmp@plt>
   11434:	cmp	r0, #0
   11438:	beq	11448 <teste_lista_ordena@@Base+0x168>
   1143c:	ldr	r0, [pc, #84]	; 11498 <teste_lista_ordena@@Base+0x1b8>
   11440:	bl	1098c <printf@plt>
   11444:	add	r4, r4, #1
   11448:	mov	r0, r5
   1144c:	bl	1172c <lista_apaga@@Base>
   11450:	cmp	r4, #0
   11454:	beq	1146c <teste_lista_ordena@@Base+0x18c>
   11458:	mov	r0, #10
   1145c:	bl	10a04 <putchar@plt>
   11460:	mov	r0, r4
   11464:	add	sp, sp, #8
   11468:	pop	{r4, r5, r6, pc}
   1146c:	ldr	r0, [pc, #40]	; 1149c <teste_lista_ordena@@Base+0x1bc>
   11470:	bl	109bc <puts@plt>
   11474:	b	11460 <teste_lista_ordena@@Base+0x180>
   11478:	andeq	r1, r1, r4, lsl pc
   1147c:	andeq	r1, r1, r8, lsl pc
   11480:	andeq	r1, r1, r8, lsl #30
   11484:	andeq	r1, r1, ip, lsl #30
   11488:	andeq	r1, r1, r0, lsl pc
   1148c:	andeq	r1, r1, ip, lsl pc
   11490:	andeq	r1, r1, r0, lsr pc
   11494:	andeq	r1, r1, r0, ror #30
   11498:	andeq	r1, r1, r0, lsr #31
   1149c:	andeq	r1, r1, ip, lsr #23

000114a0 <teste_lista_inverte@@Base>:
   114a0:	push	{r4, r5, r6, lr}
   114a4:	sub	sp, sp, #8
   114a8:	ldr	r3, [pc, #416]	; 11650 <teste_lista_inverte@@Base+0x1b0>
   114ac:	str	r3, [sp, #4]
   114b0:	ldr	r3, [pc, #412]	; 11654 <teste_lista_inverte@@Base+0x1b4>
   114b4:	str	r3, [sp]
   114b8:	ldr	r3, [pc, #408]	; 11658 <teste_lista_inverte@@Base+0x1b8>
   114bc:	ldr	r2, [pc, #408]	; 1165c <teste_lista_inverte@@Base+0x1bc>
   114c0:	ldr	r1, [pc, #408]	; 11660 <teste_lista_inverte@@Base+0x1c0>
   114c4:	mov	r0, #5
   114c8:	bl	10b44 <_l@@Base>
   114cc:	mov	r5, r0
   114d0:	ldr	r0, [pc, #396]	; 11664 <teste_lista_inverte@@Base+0x1c4>
   114d4:	bl	1098c <printf@plt>
   114d8:	mov	r0, #0
   114dc:	bl	11a6c <lista_inverte@@Base>
   114e0:	cmn	r0, #1
   114e4:	moveq	r4, #0
   114e8:	beq	114f8 <teste_lista_inverte@@Base+0x58>
   114ec:	ldr	r0, [pc, #372]	; 11668 <teste_lista_inverte@@Base+0x1c8>
   114f0:	bl	1098c <printf@plt>
   114f4:	mov	r4, #1
   114f8:	mov	r0, r5
   114fc:	bl	11a6c <lista_inverte@@Base>
   11500:	ldr	r3, [r5, #8]
   11504:	cmp	r3, #5
   11508:	beq	11518 <teste_lista_inverte@@Base+0x78>
   1150c:	ldr	r0, [pc, #344]	; 1166c <teste_lista_inverte@@Base+0x1cc>
   11510:	bl	1098c <printf@plt>
   11514:	add	r4, r4, #1
   11518:	ldr	r6, [r5]
   1151c:	ldr	r1, [pc, #300]	; 11650 <teste_lista_inverte@@Base+0x1b0>
   11520:	ldr	r0, [r6]
   11524:	bl	10980 <strcmp@plt>
   11528:	cmp	r0, #0
   1152c:	bne	11590 <teste_lista_inverte@@Base+0xf0>
   11530:	ldr	r6, [r6, #4]
   11534:	ldr	r1, [pc, #280]	; 11654 <teste_lista_inverte@@Base+0x1b4>
   11538:	ldr	r0, [r6]
   1153c:	bl	10980 <strcmp@plt>
   11540:	cmp	r0, #0
   11544:	bne	11590 <teste_lista_inverte@@Base+0xf0>
   11548:	ldr	r6, [r6, #4]
   1154c:	ldr	r1, [pc, #260]	; 11658 <teste_lista_inverte@@Base+0x1b8>
   11550:	ldr	r0, [r6]
   11554:	bl	10980 <strcmp@plt>
   11558:	cmp	r0, #0
   1155c:	bne	11590 <teste_lista_inverte@@Base+0xf0>
   11560:	ldr	r6, [r6, #4]
   11564:	ldr	r1, [pc, #240]	; 1165c <teste_lista_inverte@@Base+0x1bc>
   11568:	ldr	r0, [r6]
   1156c:	bl	10980 <strcmp@plt>
   11570:	cmp	r0, #0
   11574:	bne	11590 <teste_lista_inverte@@Base+0xf0>
   11578:	ldr	r3, [r6, #4]
   1157c:	ldr	r1, [pc, #220]	; 11660 <teste_lista_inverte@@Base+0x1c0>
   11580:	ldr	r0, [r3]
   11584:	bl	10980 <strcmp@plt>
   11588:	cmp	r0, #0
   1158c:	beq	1159c <teste_lista_inverte@@Base+0xfc>
   11590:	ldr	r0, [pc, #216]	; 11670 <teste_lista_inverte@@Base+0x1d0>
   11594:	bl	1098c <printf@plt>
   11598:	add	r4, r4, #1
   1159c:	ldr	r6, [r5, #4]
   115a0:	ldr	r1, [pc, #184]	; 11660 <teste_lista_inverte@@Base+0x1c0>
   115a4:	ldr	r0, [r6]
   115a8:	bl	10980 <strcmp@plt>
   115ac:	cmp	r0, #0
   115b0:	bne	11614 <teste_lista_inverte@@Base+0x174>
   115b4:	ldr	r6, [r6, #8]
   115b8:	ldr	r1, [pc, #156]	; 1165c <teste_lista_inverte@@Base+0x1bc>
   115bc:	ldr	r0, [r6]
   115c0:	bl	10980 <strcmp@plt>
   115c4:	cmp	r0, #0
   115c8:	bne	11614 <teste_lista_inverte@@Base+0x174>
   115cc:	ldr	r6, [r6, #8]
   115d0:	ldr	r1, [pc, #128]	; 11658 <teste_lista_inverte@@Base+0x1b8>
   115d4:	ldr	r0, [r6]
   115d8:	bl	10980 <strcmp@plt>
   115dc:	cmp	r0, #0
   115e0:	bne	11614 <teste_lista_inverte@@Base+0x174>
   115e4:	ldr	r6, [r6, #8]
   115e8:	ldr	r1, [pc, #100]	; 11654 <teste_lista_inverte@@Base+0x1b4>
   115ec:	ldr	r0, [r6]
   115f0:	bl	10980 <strcmp@plt>
   115f4:	cmp	r0, #0
   115f8:	bne	11614 <teste_lista_inverte@@Base+0x174>
   115fc:	ldr	r3, [r6, #8]
   11600:	ldr	r1, [pc, #72]	; 11650 <teste_lista_inverte@@Base+0x1b0>
   11604:	ldr	r0, [r3]
   11608:	bl	10980 <strcmp@plt>
   1160c:	cmp	r0, #0
   11610:	beq	11620 <teste_lista_inverte@@Base+0x180>
   11614:	ldr	r0, [pc, #88]	; 11674 <teste_lista_inverte@@Base+0x1d4>
   11618:	bl	1098c <printf@plt>
   1161c:	add	r4, r4, #1
   11620:	mov	r0, r5
   11624:	bl	1172c <lista_apaga@@Base>
   11628:	cmp	r4, #0
   1162c:	beq	11644 <teste_lista_inverte@@Base+0x1a4>
   11630:	mov	r0, #10
   11634:	bl	10a04 <putchar@plt>
   11638:	mov	r0, r4
   1163c:	add	sp, sp, #8
   11640:	pop	{r4, r5, r6, pc}
   11644:	ldr	r0, [pc, #44]	; 11678 <teste_lista_inverte@@Base+0x1d8>
   11648:	bl	109bc <puts@plt>
   1164c:	b	11638 <teste_lista_inverte@@Base+0x198>
   11650:	andeq	r1, r1, r4, lsl pc
   11654:	andeq	r1, r1, r8, lsl pc
   11658:	andeq	r1, r1, r8, lsl #30
   1165c:	andeq	r1, r1, ip, lsl #30
   11660:	andeq	r1, r1, r0, lsl pc
   11664:	andeq	r1, r1, r0, ror #31
   11668:	andeq	r1, r1, r0, lsr pc
   1166c:	strdeq	r1, [r1], -r4
   11670:	andeq	r2, r1, r0, lsr #32
   11674:	andeq	r1, r1, r0, lsr #31
   11678:	andeq	r1, r1, ip, lsr #23

0001167c <main@@Base>:
   1167c:	push	{r4, lr}
   11680:	mov	r3, #0
   11684:	mov	r2, #2
   11688:	mov	r1, r3
   1168c:	ldr	r0, [pc, #108]	; 11700 <main@@Base+0x84>
   11690:	ldr	r0, [r0]
   11694:	bl	109f8 <setvbuf@plt>
   11698:	mov	r3, #0
   1169c:	mov	r2, #2
   116a0:	mov	r1, r3
   116a4:	ldr	r0, [pc, #88]	; 11704 <main@@Base+0x88>
   116a8:	ldr	r0, [r0]
   116ac:	bl	109f8 <setvbuf@plt>
   116b0:	bl	10c74 <teste_lista_nova@@Base>
   116b4:	mov	r4, r0
   116b8:	bl	10cf8 <teste_lista_insere@@Base>
   116bc:	add	r4, r4, r0
   116c0:	bl	11028 <teste_lista_remove@@Base>
   116c4:	add	r4, r4, r0
   116c8:	bl	11194 <teste_lista_pesquisa@@Base>
   116cc:	add	r4, r4, r0
   116d0:	bl	112e0 <teste_lista_ordena@@Base>
   116d4:	add	r4, r4, r0
   116d8:	bl	114a0 <teste_lista_inverte@@Base>
   116dc:	adds	r1, r4, r0
   116e0:	beq	116f4 <main@@Base+0x78>
   116e4:	ldr	r0, [pc, #28]	; 11708 <main@@Base+0x8c>
   116e8:	bl	1098c <printf@plt>
   116ec:	mov	r0, #0
   116f0:	pop	{r4, pc}
   116f4:	ldr	r0, [pc, #16]	; 1170c <main@@Base+0x90>
   116f8:	bl	109bc <puts@plt>
   116fc:	b	116ec <main@@Base+0x70>
   11700:	andeq	r3, r2, r4, asr r0
   11704:	andeq	r3, r2, r0, asr r0
   11708:	andeq	r2, r1, r8, ror r0
   1170c:	andeq	r2, r1, r0, rrx

00011710 <lista_nova@@Base>:
   11710:	push	{r4, lr}
   11714:	mov	r0, #12
   11718:	bl	109c8 <malloc@plt>
   1171c:	cmp	r0, #0
   11720:	movne	r3, #0
   11724:	strne	r3, [r0, #8]
   11728:	pop	{r4, pc}

0001172c <lista_apaga@@Base>:
   1172c:	push	{r4, r5, r6, lr}
   11730:	subs	r6, r0, #0
   11734:	popeq	{r4, r5, r6, pc}
   11738:	ldr	r3, [r6, #8]
   1173c:	cmp	r3, #0
   11740:	beq	11788 <lista_apaga@@Base+0x5c>
   11744:	ldr	r4, [r6]
   11748:	cmp	r4, #0
   1174c:	beq	1177c <lista_apaga@@Base+0x50>
   11750:	ldr	r3, [r4, #4]
   11754:	cmp	r3, #0
   11758:	beq	1177c <lista_apaga@@Base+0x50>
   1175c:	ldr	r5, [r4, #4]
   11760:	ldr	r0, [r4]
   11764:	bl	10998 <free@plt>
   11768:	mov	r0, r4
   1176c:	bl	10998 <free@plt>
   11770:	mov	r4, r5
   11774:	cmp	r5, #0
   11778:	bne	1175c <lista_apaga@@Base+0x30>
   1177c:	mov	r0, r6
   11780:	bl	10998 <free@plt>
   11784:	pop	{r4, r5, r6, pc}
   11788:	mov	r0, r6
   1178c:	bl	10998 <free@plt>
   11790:	pop	{r4, r5, r6, pc}

00011794 <lista_tamanho@@Base>:
   11794:	cmp	r0, #0
   11798:	ldrne	r0, [r0, #8]
   1179c:	mvneq	r0, #0
   117a0:	bx	lr

000117a4 <lista_inicio@@Base>:
   117a4:	cmp	r0, #0
   117a8:	ldrne	r0, [r0]
   117ac:	moveq	r0, #0
   117b0:	bx	lr

000117b4 <lista_fim@@Base>:
   117b4:	cmp	r0, #0
   117b8:	ldrne	r0, [r0, #4]
   117bc:	moveq	r0, #0
   117c0:	bx	lr

000117c4 <lista_insere@@Base>:
   117c4:	push	{r4, r5, r6, r7, r8, lr}
   117c8:	subs	r4, r0, #0
   117cc:	beq	11884 <lista_insere@@Base+0xc0>
   117d0:	mov	r6, r2
   117d4:	mov	r7, r1
   117d8:	mov	r0, #12
   117dc:	bl	109c8 <malloc@plt>
   117e0:	mov	r5, r0
   117e4:	mov	r0, r7
   117e8:	bl	109ec <strlen@plt>
   117ec:	add	r0, r0, #1
   117f0:	bl	109c8 <malloc@plt>
   117f4:	str	r0, [r5]
   117f8:	mov	r1, r7
   117fc:	bl	109b0 <strcpy@plt>
   11800:	ldr	r3, [r4, #8]
   11804:	cmp	r3, #0
   11808:	bne	11830 <lista_insere@@Base+0x6c>
   1180c:	str	r3, [r5, #8]
   11810:	str	r3, [r5, #4]
   11814:	str	r5, [r4]
   11818:	str	r5, [r4, #4]
   1181c:	ldr	r3, [r4, #8]
   11820:	add	r3, r3, #1
   11824:	str	r3, [r4, #8]
   11828:	mov	r0, r5
   1182c:	pop	{r4, r5, r6, r7, r8, pc}
   11830:	cmp	r6, #0
   11834:	beq	11868 <lista_insere@@Base+0xa4>
   11838:	ldr	r3, [r4]
   1183c:	cmp	r6, r3
   11840:	streq	r6, [r5, #4]
   11844:	streq	r5, [r4]
   11848:	streq	r5, [r5, #8]
   1184c:	ldrne	r3, [r6, #8]
   11850:	strne	r5, [r3, #4]
   11854:	ldrne	r3, [r6, #8]
   11858:	strne	r3, [r5, #8]
   1185c:	strne	r6, [r5, #4]
   11860:	strne	r5, [r6, #8]
   11864:	b	1181c <lista_insere@@Base+0x58>
   11868:	mov	r3, #0
   1186c:	str	r3, [r5, #4]
   11870:	ldr	r3, [r4, #4]
   11874:	str	r3, [r5, #8]
   11878:	str	r5, [r3, #4]
   1187c:	str	r5, [r4, #4]
   11880:	b	1181c <lista_insere@@Base+0x58>
   11884:	mov	r5, #0
   11888:	b	11828 <lista_insere@@Base+0x64>

0001188c <lista_remove@@Base>:
   1188c:	push	{r4, r5, r6, lr}
   11890:	subs	r4, r1, #0
   11894:	beq	11910 <lista_remove@@Base+0x84>
   11898:	ldr	r6, [r4, #4]
   1189c:	ldr	r3, [r0]
   118a0:	cmp	r4, r3
   118a4:	beq	118fc <lista_remove@@Base+0x70>
   118a8:	ldr	r3, [r0, #4]
   118ac:	cmp	r4, r3
   118b0:	ldr	r3, [r4, #8]
   118b4:	moveq	r2, #0
   118b8:	streq	r2, [r3, #4]
   118bc:	ldreq	r3, [r4, #8]
   118c0:	streq	r3, [r0, #4]
   118c4:	strne	r6, [r3, #4]
   118c8:	ldrne	r3, [r4, #4]
   118cc:	ldrne	r2, [r4, #8]
   118d0:	strne	r2, [r3, #8]
   118d4:	mov	r5, r0
   118d8:	ldr	r0, [r4]
   118dc:	bl	10998 <free@plt>
   118e0:	mov	r0, r4
   118e4:	bl	10998 <free@plt>
   118e8:	ldr	r3, [r5, #8]
   118ec:	sub	r3, r3, #1
   118f0:	str	r3, [r5, #8]
   118f4:	mov	r0, r6
   118f8:	pop	{r4, r5, r6, pc}
   118fc:	mov	r3, #0
   11900:	str	r3, [r6, #8]
   11904:	ldr	r3, [r4, #4]
   11908:	str	r3, [r0]
   1190c:	b	118d4 <lista_remove@@Base+0x48>
   11910:	mov	r6, r4
   11914:	b	118f4 <lista_remove@@Base+0x68>

00011918 <lista_pesquisa@@Base>:
   11918:	push	{r4, r5, r6, r7, r8, lr}
   1191c:	cmp	r0, #0
   11920:	beq	119c0 <lista_pesquisa@@Base+0xa8>
   11924:	mov	r6, r1
   11928:	mov	r5, r2
   1192c:	cmp	r2, #0
   11930:	bne	11974 <lista_pesquisa@@Base+0x5c>
   11934:	ldr	r4, [r0]
   11938:	ldr	r7, [r0, #8]
   1193c:	cmp	r7, #0
   11940:	ble	119c8 <lista_pesquisa@@Base+0xb0>
   11944:	mov	r1, r6
   11948:	ldr	r0, [r4]
   1194c:	bl	10980 <strcmp@plt>
   11950:	cmp	r0, #0
   11954:	beq	1196c <lista_pesquisa@@Base+0x54>
   11958:	ldr	r4, [r4, #4]
   1195c:	add	r5, r5, #1
   11960:	cmp	r5, r7
   11964:	bne	11944 <lista_pesquisa@@Base+0x2c>
   11968:	mov	r4, #0
   1196c:	mov	r0, r4
   11970:	pop	{r4, r5, r6, r7, r8, pc}
   11974:	cmp	r2, #1
   11978:	movne	r4, #0
   1197c:	bne	1196c <lista_pesquisa@@Base+0x54>
   11980:	ldr	r4, [r0, #4]
   11984:	ldr	r7, [r0, #8]
   11988:	cmp	r7, #0
   1198c:	ble	119d0 <lista_pesquisa@@Base+0xb8>
   11990:	mov	r5, #0
   11994:	mov	r1, r6
   11998:	ldr	r0, [r4]
   1199c:	bl	10980 <strcmp@plt>
   119a0:	cmp	r0, #0
   119a4:	beq	1196c <lista_pesquisa@@Base+0x54>
   119a8:	ldr	r4, [r4, #8]
   119ac:	add	r5, r5, #1
   119b0:	cmp	r5, r7
   119b4:	bne	11994 <lista_pesquisa@@Base+0x7c>
   119b8:	mov	r4, #0
   119bc:	b	1196c <lista_pesquisa@@Base+0x54>
   119c0:	mov	r4, #0
   119c4:	b	1196c <lista_pesquisa@@Base+0x54>
   119c8:	mov	r4, #0
   119cc:	b	1196c <lista_pesquisa@@Base+0x54>
   119d0:	mov	r4, #0
   119d4:	b	1196c <lista_pesquisa@@Base+0x54>

000119d8 <lista_ordena@@Base>:
   119d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   119dc:	subs	r8, r0, #0
   119e0:	beq	11a5c <lista_ordena@@Base+0x84>
   119e4:	ldr	r0, [r8, #8]
   119e8:	cmp	r0, #0
   119ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   119f0:	ldr	r4, [r8]
   119f4:	ldr	r3, [r8, #4]
   119f8:	cmp	r4, r3
   119fc:	movne	r9, r4
   11a00:	bne	11a24 <lista_ordena@@Base+0x4c>
   11a04:	mov	r0, #0
   11a08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a0c:	str	r6, [r4]
   11a10:	str	r5, [r7]
   11a14:	ldr	r3, [r8]
   11a18:	cmp	r4, r3
   11a1c:	ldrne	r4, [r4, #8]
   11a20:	moveq	r4, r3
   11a24:	ldr	r5, [r4]
   11a28:	ldr	r7, [r4, #4]
   11a2c:	ldr	r6, [r7]
   11a30:	mov	r1, r6
   11a34:	mov	r0, r5
   11a38:	bl	10980 <strcmp@plt>
   11a3c:	cmp	r0, #0
   11a40:	bgt	11a0c <lista_ordena@@Base+0x34>
   11a44:	ldr	r4, [r9, #4]
   11a48:	ldr	r3, [r8, #4]
   11a4c:	cmp	r3, r4
   11a50:	beq	11a64 <lista_ordena@@Base+0x8c>
   11a54:	mov	r9, r4
   11a58:	b	11a24 <lista_ordena@@Base+0x4c>
   11a5c:	mvn	r0, #0
   11a60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a64:	mov	r0, #0
   11a68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011a6c <lista_inverte@@Base>:
   11a6c:	push	{r4, r5, r6, r7, r8, lr}
   11a70:	subs	r8, r0, #0
   11a74:	beq	11ae0 <lista_inverte@@Base+0x74>
   11a78:	ldr	r0, [r8, #8]
   11a7c:	cmp	r0, #0
   11a80:	popeq	{r4, r5, r6, r7, r8, pc}
   11a84:	ldr	r4, [r8]
   11a88:	ldr	r5, [r8, #4]
   11a8c:	cmp	r0, #1
   11a90:	ble	11ae8 <lista_inverte@@Base+0x7c>
   11a94:	mov	r6, #0
   11a98:	ldr	r0, [r4]
   11a9c:	bl	109a4 <strdup@plt>
   11aa0:	mov	r7, r0
   11aa4:	ldr	r0, [r5]
   11aa8:	bl	109a4 <strdup@plt>
   11aac:	str	r0, [r4]
   11ab0:	mov	r0, r7
   11ab4:	bl	109a4 <strdup@plt>
   11ab8:	str	r0, [r5]
   11abc:	ldr	r4, [r4, #4]
   11ac0:	ldr	r5, [r5, #8]
   11ac4:	add	r6, r6, #1
   11ac8:	ldr	r3, [r8, #8]
   11acc:	add	r3, r3, r3, lsr #31
   11ad0:	cmp	r6, r3, asr #1
   11ad4:	blt	11a98 <lista_inverte@@Base+0x2c>
   11ad8:	mov	r0, #0
   11adc:	pop	{r4, r5, r6, r7, r8, pc}
   11ae0:	mvn	r0, #0
   11ae4:	pop	{r4, r5, r6, r7, r8, pc}
   11ae8:	mov	r0, #0
   11aec:	pop	{r4, r5, r6, r7, r8, pc}

00011af0 <__libc_csu_init@@Base>:
   11af0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11af4:	mov	r7, r0
   11af8:	ldr	r6, [pc, #72]	; 11b48 <__libc_csu_init@@Base+0x58>
   11afc:	ldr	r5, [pc, #72]	; 11b4c <__libc_csu_init@@Base+0x5c>
   11b00:	add	r6, pc, r6
   11b04:	add	r5, pc, r5
   11b08:	sub	r6, r6, r5
   11b0c:	mov	r8, r1
   11b10:	mov	r9, r2
   11b14:	bl	10960 <strcmp@plt-0x20>
   11b18:	asrs	r6, r6, #2
   11b1c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b20:	mov	r4, #0
   11b24:	add	r4, r4, #1
   11b28:	ldr	r3, [r5], #4
   11b2c:	mov	r2, r9
   11b30:	mov	r1, r8
   11b34:	mov	r0, r7
   11b38:	blx	r3
   11b3c:	cmp	r6, r4
   11b40:	bne	11b24 <__libc_csu_init@@Base+0x34>
   11b44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b48:	andeq	r1, r1, r8, lsl #8
   11b4c:	andeq	r1, r1, r0, lsl #8

00011b50 <__libc_csu_fini@@Base>:
   11b50:	bx	lr

Disassembly of section .fini:

00011b54 <.fini>:
   11b54:	push	{r3, lr}
   11b58:	pop	{r3, pc}
