
../repos/charybdis/modules/core/.libs/m_error.so:     file format elf32-littlearm


Disassembly of section .init:

00000560 <_init>:
 560:	push	{r3, lr}
 564:	bl	610 <call_weak_fn>
 568:	pop	{r3, pc}

Disassembly of section .plt:

0000056c <.plt>:
 56c:	push	{lr}		; (str lr, [sp, #-4]!)
 570:	ldr	lr, [pc, #4]	; 57c <.plt+0x10>
 574:	add	lr, pc, lr
 578:	ldr	pc, [lr, #8]!
 57c:	.word	0x00010a84

00000580 <__cxa_finalize@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #16, 20	; 0x10000
 588:	ldr	pc, [ip, #2692]!	; 0xa84

0000058c <rb_strncasecmp@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2684]!	; 0xa7c

00000598 <sendto_realops_snomask@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2676]!	; 0xa74

000005a4 <__gmon_start__@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2668]!	; 0xa6c

000005b0 <strlen@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2660]!	; 0xa64

000005bc <strchr@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2652]!	; 0xa5c

000005c8 <snprintf@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2644]!	; 0xa54

000005d4 <is_remote_connect@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2636]!	; 0xa4c

000005e0 <ilog@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2628]!	; 0xa44

000005ec <log_client_name@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2620]!	; 0xa3c

000005f8 <exit_client@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #16, 20	; 0x10000
 600:	ldr	pc, [ip, #2612]!	; 0xa34

00000604 <strncmp@plt>:
 604:	add	ip, pc, #0, 12
 608:	add	ip, ip, #16, 20	; 0x10000
 60c:	ldr	pc, [ip, #2604]!	; 0xa2c

Disassembly of section .text:

00000610 <call_weak_fn>:
 610:	ldr	r3, [pc, #20]	; 62c <call_weak_fn+0x1c>
 614:	ldr	r2, [pc, #20]	; 630 <call_weak_fn+0x20>
 618:	add	r3, pc, r3
 61c:	ldr	r2, [r3, r2]
 620:	cmp	r2, #0
 624:	bxeq	lr
 628:	b	5a4 <__gmon_start__@plt>
 62c:	.word	0x000109e0
 630:	.word	0x00000044

00000634 <deregister_tm_clones>:
 634:	ldr	r3, [pc, #52]	; 670 <deregister_tm_clones+0x3c>
 638:	ldr	r0, [pc, #52]	; 674 <deregister_tm_clones+0x40>
 63c:	add	r3, pc, r3
 640:	add	r0, pc, r0
 644:	add	r3, r3, #3
 648:	sub	r3, r3, r0
 64c:	cmp	r3, #6
 650:	ldr	r3, [pc, #32]	; 678 <deregister_tm_clones+0x44>
 654:	add	r3, pc, r3
 658:	bxls	lr
 65c:	ldr	r2, [pc, #24]	; 67c <deregister_tm_clones+0x48>
 660:	ldr	r3, [r3, r2]
 664:	cmp	r3, #0
 668:	bxeq	lr
 66c:	bx	r3
 670:	.word	0x00010a8c
 674:	.word	0x00010a88
 678:	.word	0x000109a4
 67c:	.word	0x00000040

00000680 <register_tm_clones>:
 680:	ldr	r1, [pc, #56]	; 6c0 <register_tm_clones+0x40>
 684:	ldr	r0, [pc, #56]	; 6c4 <register_tm_clones+0x44>
 688:	add	r1, pc, r1
 68c:	add	r0, pc, r0
 690:	sub	r1, r1, r0
 694:	ldr	r3, [pc, #44]	; 6c8 <register_tm_clones+0x48>
 698:	asr	r1, r1, #2
 69c:	add	r3, pc, r3
 6a0:	add	r1, r1, r1, lsr #31
 6a4:	asrs	r1, r1, #1
 6a8:	bxeq	lr
 6ac:	ldr	r2, [pc, #24]	; 6cc <register_tm_clones+0x4c>
 6b0:	ldr	r3, [r3, r2]
 6b4:	cmp	r3, #0
 6b8:	bxeq	lr
 6bc:	bx	r3
 6c0:	.word	0x00010a40
 6c4:	.word	0x00010a3c
 6c8:	.word	0x0001095c
 6cc:	.word	0x0000004c

000006d0 <__do_global_dtors_aux>:
 6d0:	ldr	r3, [pc, #76]	; 724 <__do_global_dtors_aux+0x54>
 6d4:	ldr	r2, [pc, #76]	; 728 <__do_global_dtors_aux+0x58>
 6d8:	add	r3, pc, r3
 6dc:	add	r2, pc, r2
 6e0:	ldrb	r3, [r3]
 6e4:	cmp	r3, #0
 6e8:	bxne	lr
 6ec:	ldr	r3, [pc, #56]	; 72c <__do_global_dtors_aux+0x5c>
 6f0:	push	{r4, lr}
 6f4:	ldr	r3, [r2, r3]
 6f8:	cmp	r3, #0
 6fc:	beq	70c <__do_global_dtors_aux+0x3c>
 700:	ldr	r3, [pc, #40]	; 730 <__do_global_dtors_aux+0x60>
 704:	ldr	r0, [pc, r3]
 708:	bl	580 <__cxa_finalize@plt>
 70c:	bl	634 <deregister_tm_clones>
 710:	ldr	r3, [pc, #28]	; 734 <__do_global_dtors_aux+0x64>
 714:	mov	r2, #1
 718:	add	r3, pc, r3
 71c:	strb	r2, [r3]
 720:	pop	{r4, pc}
 724:	.word	0x000109f0
 728:	.word	0x0001091c
 72c:	.word	0x0000003c
 730:	.word	0x0001094c
 734:	.word	0x000109b0

00000738 <frame_dummy>:
 738:	ldr	r0, [pc, #56]	; 778 <frame_dummy+0x40>
 73c:	ldr	r3, [pc, #56]	; 77c <frame_dummy+0x44>
 740:	add	r0, pc, r0
 744:	ldr	r2, [r0]
 748:	add	r3, pc, r3
 74c:	cmp	r2, #0
 750:	bne	758 <frame_dummy+0x20>
 754:	b	680 <register_tm_clones>
 758:	ldr	r2, [pc, #32]	; 780 <frame_dummy+0x48>
 75c:	ldr	r3, [r3, r2]
 760:	cmp	r3, #0
 764:	beq	754 <frame_dummy+0x1c>
 768:	push	{r4, lr}
 76c:	blx	r3
 770:	pop	{r4, lr}
 774:	b	680 <register_tm_clones>
 778:	.word	0x000107b4
 77c:	.word	0x000108b0
 780:	.word	0x00000048

00000784 <is_safe_error>:
 784:	push	{r4, fp, lr}
 788:	add	fp, sp, #8
 78c:	sub	sp, sp, #116	; 0x74
 790:	str	r0, [fp, #-120]	; 0xffffff88
 794:	ldr	r4, [pc, #396]	; 928 <is_safe_error+0x1a4>
 798:	add	r4, pc, r4
 79c:	mov	r2, #25
 7a0:	ldr	r3, [pc, #388]	; 92c <is_safe_error+0x1a8>
 7a4:	add	r3, pc, r3
 7a8:	mov	r1, r3
 7ac:	ldr	r0, [fp, #-120]	; 0xffffff88
 7b0:	bl	604 <strncmp@plt>
 7b4:	mov	r3, r0
 7b8:	cmp	r3, #0
 7bc:	bne	7c8 <is_safe_error+0x44>
 7c0:	mov	r3, #1
 7c4:	b	91c <is_safe_error+0x198>
 7c8:	sub	r0, fp, #116	; 0x74
 7cc:	ldr	r3, [pc, #348]	; 930 <is_safe_error+0x1ac>
 7d0:	ldr	r3, [r4, r3]
 7d4:	add	r3, r3, #88	; 0x58
 7d8:	ldr	r2, [pc, #340]	; 934 <is_safe_error+0x1b0>
 7dc:	add	r2, pc, r2
 7e0:	mov	r1, #100	; 0x64
 7e4:	bl	5c8 <snprintf@plt>
 7e8:	sub	r3, fp, #116	; 0x74
 7ec:	mov	r0, r3
 7f0:	bl	5b0 <strlen@plt>
 7f4:	mov	r2, r0
 7f8:	sub	r3, fp, #116	; 0x74
 7fc:	mov	r1, r3
 800:	ldr	r0, [fp, #-120]	; 0xffffff88
 804:	bl	604 <strncmp@plt>
 808:	mov	r3, r0
 80c:	cmp	r3, #0
 810:	bne	81c <is_safe_error+0x98>
 814:	mov	r3, #1
 818:	b	91c <is_safe_error+0x198>
 81c:	mov	r2, #11
 820:	ldr	r3, [pc, #272]	; 938 <is_safe_error+0x1b4>
 824:	add	r3, pc, r3
 828:	mov	r1, r3
 82c:	ldr	r0, [fp, #-120]	; 0xffffff88
 830:	bl	604 <strncmp@plt>
 834:	mov	r3, r0
 838:	cmp	r3, #0
 83c:	bne	848 <is_safe_error+0xc4>
 840:	mov	r3, #1
 844:	b	91c <is_safe_error+0x198>
 848:	mov	r2, #14
 84c:	ldr	r3, [pc, #232]	; 93c <is_safe_error+0x1b8>
 850:	add	r3, pc, r3
 854:	mov	r1, r3
 858:	ldr	r0, [fp, #-120]	; 0xffffff88
 85c:	bl	604 <strncmp@plt>
 860:	mov	r3, r0
 864:	cmp	r3, #0
 868:	bne	874 <is_safe_error+0xf0>
 86c:	mov	r3, #1
 870:	b	91c <is_safe_error+0x198>
 874:	mov	r2, #12
 878:	ldr	r3, [pc, #192]	; 940 <is_safe_error+0x1bc>
 87c:	add	r3, pc, r3
 880:	mov	r1, r3
 884:	ldr	r0, [fp, #-120]	; 0xffffff88
 888:	bl	58c <rb_strncasecmp@plt>
 88c:	mov	r3, r0
 890:	cmp	r3, #0
 894:	bne	8a0 <is_safe_error+0x11c>
 898:	mov	r3, #0
 89c:	b	91c <is_safe_error+0x198>
 8a0:	mov	r1, #91	; 0x5b
 8a4:	ldr	r0, [fp, #-120]	; 0xffffff88
 8a8:	bl	5bc <strchr@plt>
 8ac:	mov	r3, r0
 8b0:	cmp	r3, #0
 8b4:	beq	8c0 <is_safe_error+0x13c>
 8b8:	mov	r3, #0
 8bc:	b	91c <is_safe_error+0x198>
 8c0:	mov	r1, #46	; 0x2e
 8c4:	ldr	r0, [fp, #-120]	; 0xffffff88
 8c8:	bl	5bc <strchr@plt>
 8cc:	str	r0, [fp, #-16]
 8d0:	ldr	r3, [fp, #-16]
 8d4:	cmp	r3, #0
 8d8:	beq	8f8 <is_safe_error+0x174>
 8dc:	ldr	r3, [fp, #-16]
 8e0:	add	r3, r3, #1
 8e4:	ldrb	r3, [r3]
 8e8:	cmp	r3, #0
 8ec:	beq	8f8 <is_safe_error+0x174>
 8f0:	mov	r3, #0
 8f4:	b	91c <is_safe_error+0x198>
 8f8:	mov	r1, #58	; 0x3a
 8fc:	ldr	r0, [fp, #-120]	; 0xffffff88
 900:	bl	5bc <strchr@plt>
 904:	mov	r3, r0
 908:	cmp	r3, #0
 90c:	beq	918 <is_safe_error+0x194>
 910:	mov	r3, #0
 914:	b	91c <is_safe_error+0x198>
 918:	mov	r3, #1
 91c:	mov	r0, r3
 920:	sub	sp, fp, #8
 924:	pop	{r4, fp, pc}
 928:	.word	0x00010860
 92c:	.word	0x0000056c
 930:	.word	0x00000050
 934:	.word	0x00000550
 938:	.word	0x00000528
 93c:	.word	0x00000508
 940:	.word	0x000004ec

00000944 <m_error>:
 944:	push	{r4, fp, lr}
 948:	add	fp, sp, #8
 94c:	sub	sp, sp, #36	; 0x24
 950:	str	r0, [fp, #-24]	; 0xffffffe8
 954:	str	r1, [fp, #-28]	; 0xffffffe4
 958:	str	r2, [fp, #-32]	; 0xffffffe0
 95c:	str	r3, [fp, #-36]	; 0xffffffdc
 960:	ldr	r2, [pc, #468]	; b3c <m_error+0x1f8>
 964:	add	r2, pc, r2
 968:	ldr	r3, [pc, #464]	; b40 <m_error+0x1fc>
 96c:	ldr	r3, [r2, r3]
 970:	ldr	r3, [r3, #208]	; 0xd0
 974:	str	r3, [fp, #-16]
 978:	ldr	r3, [fp, #-36]	; 0xffffffdc
 97c:	cmp	r3, #1
 980:	ble	9a8 <m_error+0x64>
 984:	ldr	r3, [fp, #4]
 988:	add	r3, r3, #4
 98c:	ldr	r3, [r3]
 990:	ldrb	r3, [r3]
 994:	cmp	r3, #0
 998:	beq	9a8 <m_error+0x64>
 99c:	ldr	r3, [fp, #4]
 9a0:	ldr	r3, [r3, #4]
 9a4:	b	9b0 <m_error+0x6c>
 9a8:	ldr	r3, [pc, #404]	; b44 <m_error+0x200>
 9ac:	add	r3, pc, r3
 9b0:	str	r3, [fp, #-20]	; 0xffffffec
 9b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 9b8:	ldrh	r3, [r3, #80]	; 0x50
 9bc:	cmp	r3, #32
 9c0:	beq	9e4 <m_error+0xa0>
 9c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 9c8:	ldrh	r3, [r3, #80]	; 0x50
 9cc:	cmp	r3, #2
 9d0:	beq	9e4 <m_error+0xa0>
 9d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 9d8:	ldrh	r3, [r3, #80]	; 0x50
 9dc:	cmp	r3, #1
 9e0:	bne	a08 <m_error+0xc4>
 9e4:	mov	r1, #1
 9e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
 9ec:	bl	5ec <log_client_name@plt>
 9f0:	mov	r2, r0
 9f4:	ldr	r3, [fp, #-20]	; 0xffffffec
 9f8:	ldr	r1, [pc, #328]	; b48 <m_error+0x204>
 9fc:	add	r1, pc, r1
 a00:	mov	r0, #5
 a04:	bl	5e0 <ilog@plt>
 a08:	ldr	r0, [fp, #-20]	; 0xffffffec
 a0c:	bl	784 <is_safe_error>
 a10:	mov	r3, r0
 a14:	cmp	r3, #0
 a18:	beq	a24 <m_error+0xe0>
 a1c:	mov	r3, #0
 a20:	str	r3, [fp, #-16]
 a24:	ldr	r3, [fp, #-28]	; 0xffffffe4
 a28:	ldrh	r3, [r3, #80]	; 0x50
 a2c:	cmp	r3, #32
 a30:	beq	a54 <m_error+0x110>
 a34:	ldr	r3, [fp, #-28]	; 0xffffffe4
 a38:	ldrh	r3, [r3, #80]	; 0x50
 a3c:	cmp	r3, #2
 a40:	beq	a54 <m_error+0x110>
 a44:	ldr	r3, [fp, #-28]	; 0xffffffe4
 a48:	ldrh	r3, [r3, #80]	; 0x50
 a4c:	cmp	r3, #1
 a50:	bne	b18 <m_error+0x1d4>
 a54:	ldr	r3, [fp, #-16]
 a58:	cmp	r3, #1
 a5c:	bgt	ab8 <m_error+0x174>
 a60:	ldr	r3, [fp, #-16]
 a64:	cmp	r3, #0
 a68:	bne	a90 <m_error+0x14c>
 a6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
 a70:	bl	5d4 <is_remote_connect@plt>
 a74:	mov	r3, r0
 a78:	cmp	r3, #0
 a7c:	beq	a88 <m_error+0x144>
 a80:	mov	r1, #256	; 0x100
 a84:	b	a94 <m_error+0x150>
 a88:	mov	r1, #0
 a8c:	b	a94 <m_error+0x150>
 a90:	mov	r1, #2
 a94:	ldr	r3, [fp, #-28]	; 0xffffffe4
 a98:	add	r2, r3, #88	; 0x58
 a9c:	ldr	r3, [fp, #-20]	; 0xffffffec
 aa0:	str	r3, [sp]
 aa4:	mov	r3, r2
 aa8:	ldr	r2, [pc, #156]	; b4c <m_error+0x208>
 aac:	add	r2, pc, r2
 ab0:	mov	r0, #256	; 0x100
 ab4:	bl	598 <sendto_realops_snomask@plt>
 ab8:	ldr	r3, [fp, #-16]
 abc:	cmp	r3, #0
 ac0:	ble	b18 <m_error+0x1d4>
 ac4:	ldr	r3, [fp, #-16]
 ac8:	cmp	r3, #1
 acc:	moveq	r3, #1
 ad0:	movne	r3, #0
 ad4:	uxtb	r3, r3
 ad8:	mov	r4, r3
 adc:	ldr	r0, [fp, #-28]	; 0xffffffe4
 ae0:	bl	5d4 <is_remote_connect@plt>
 ae4:	mov	r3, r0
 ae8:	cmp	r3, #0
 aec:	beq	af8 <m_error+0x1b4>
 af0:	mov	r3, #256	; 0x100
 af4:	b	afc <m_error+0x1b8>
 af8:	mov	r3, #0
 afc:	orr	r1, r4, r3
 b00:	ldr	r3, [fp, #-28]	; 0xffffffe4
 b04:	add	r3, r3, #88	; 0x58
 b08:	ldr	r2, [pc, #64]	; b50 <m_error+0x20c>
 b0c:	add	r2, pc, r2
 b10:	mov	r0, #256	; 0x100
 b14:	bl	598 <sendto_realops_snomask@plt>
 b18:	ldr	r3, [pc, #52]	; b54 <m_error+0x210>
 b1c:	add	r3, pc, r3
 b20:	ldr	r2, [fp, #-32]	; 0xffffffe0
 b24:	ldr	r1, [fp, #-32]	; 0xffffffe0
 b28:	ldr	r0, [fp, #-28]	; 0xffffffe4
 b2c:	bl	5f8 <exit_client@plt>
 b30:	nop			; (mov r0, r0)
 b34:	sub	sp, fp, #8
 b38:	pop	{r4, fp, pc}
 b3c:	.word	0x00010694
 b40:	.word	0x00000054
 b44:	.word	0x000003cc
 b48:	.word	0x00000380
 b4c:	.word	0x000002f4
 b50:	.word	0x000002ac
 b54:	.word	0x000001ec

00000b58 <ms_error>:
 b58:	push	{fp, lr}
 b5c:	add	fp, sp, #4
 b60:	sub	sp, sp, #32
 b64:	str	r0, [fp, #-16]
 b68:	str	r1, [fp, #-20]	; 0xffffffec
 b6c:	str	r2, [fp, #-24]	; 0xffffffe8
 b70:	str	r3, [fp, #-28]	; 0xffffffe4
 b74:	ldr	r2, [pc, #320]	; cbc <ms_error+0x164>
 b78:	add	r2, pc, r2
 b7c:	ldr	r3, [pc, #316]	; cc0 <ms_error+0x168>
 b80:	ldr	r3, [r2, r3]
 b84:	ldr	r3, [r3, #208]	; 0xd0
 b88:	str	r3, [fp, #-8]
 b8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 b90:	cmp	r3, #1
 b94:	ble	bbc <ms_error+0x64>
 b98:	ldr	r3, [fp, #4]
 b9c:	add	r3, r3, #4
 ba0:	ldr	r3, [r3]
 ba4:	ldrb	r3, [r3]
 ba8:	cmp	r3, #0
 bac:	beq	bbc <ms_error+0x64>
 bb0:	ldr	r3, [fp, #4]
 bb4:	ldr	r3, [r3, #4]
 bb8:	b	bc4 <ms_error+0x6c>
 bbc:	ldr	r3, [pc, #256]	; cc4 <ms_error+0x16c>
 bc0:	add	r3, pc, r3
 bc4:	str	r3, [fp, #-12]
 bc8:	mov	r1, #1
 bcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
 bd0:	bl	5ec <log_client_name@plt>
 bd4:	mov	r2, r0
 bd8:	ldr	r3, [fp, #-12]
 bdc:	ldr	r1, [pc, #228]	; cc8 <ms_error+0x170>
 be0:	add	r1, pc, r1
 be4:	mov	r0, #5
 be8:	bl	5e0 <ilog@plt>
 bec:	ldr	r0, [fp, #-12]
 bf0:	bl	784 <is_safe_error>
 bf4:	mov	r3, r0
 bf8:	cmp	r3, #0
 bfc:	beq	c08 <ms_error+0xb0>
 c00:	mov	r3, #0
 c04:	str	r3, [fp, #-8]
 c08:	ldr	r3, [fp, #-8]
 c0c:	cmp	r3, #2
 c10:	beq	cb0 <ms_error+0x158>
 c14:	ldr	r2, [fp, #-20]	; 0xffffffec
 c18:	ldr	r3, [fp, #-24]	; 0xffffffe8
 c1c:	cmp	r2, r3
 c20:	bne	c64 <ms_error+0x10c>
 c24:	ldr	r3, [fp, #-8]
 c28:	cmp	r3, #0
 c2c:	beq	c38 <ms_error+0xe0>
 c30:	mov	r1, #2
 c34:	b	c3c <ms_error+0xe4>
 c38:	mov	r1, #0
 c3c:	ldr	r3, [fp, #-20]	; 0xffffffec
 c40:	add	r2, r3, #88	; 0x58
 c44:	ldr	r3, [fp, #-12]
 c48:	str	r3, [sp]
 c4c:	mov	r3, r2
 c50:	ldr	r2, [pc, #116]	; ccc <ms_error+0x174>
 c54:	add	r2, pc, r2
 c58:	mov	r0, #256	; 0x100
 c5c:	bl	598 <sendto_realops_snomask@plt>
 c60:	b	cb4 <ms_error+0x15c>
 c64:	ldr	r3, [fp, #-8]
 c68:	cmp	r3, #0
 c6c:	beq	c78 <ms_error+0x120>
 c70:	mov	r1, #2
 c74:	b	c7c <ms_error+0x124>
 c78:	mov	r1, #0
 c7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 c80:	add	r0, r3, #88	; 0x58
 c84:	ldr	r3, [fp, #-20]	; 0xffffffec
 c88:	add	r3, r3, #88	; 0x58
 c8c:	ldr	r2, [fp, #-12]
 c90:	str	r2, [sp, #4]
 c94:	str	r3, [sp]
 c98:	mov	r3, r0
 c9c:	ldr	r2, [pc, #44]	; cd0 <ms_error+0x178>
 ca0:	add	r2, pc, r2
 ca4:	mov	r0, #256	; 0x100
 ca8:	bl	598 <sendto_realops_snomask@plt>
 cac:	b	cb4 <ms_error+0x15c>
 cb0:	nop			; (mov r0, r0)
 cb4:	sub	sp, fp, #4
 cb8:	pop	{fp, pc}
 cbc:	.word	0x00010480
 cc0:	.word	0x00000054
 cc4:	.word	0x000001b8
 cc8:	.word	0x0000019c
 ccc:	.word	0x0000014c
 cd0:	.word	0x00000134

Disassembly of section .fini:

00000cd4 <_fini>:
 cd4:	push	{r3, lr}
 cd8:	pop	{r3, pc}
