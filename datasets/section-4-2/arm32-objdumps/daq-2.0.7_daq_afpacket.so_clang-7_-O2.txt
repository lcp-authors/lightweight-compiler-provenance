
../repos/daq-2.0.7/os-daq-modules/.libs/daq_afpacket.so:     file format elf32-littlearm


Disassembly of section .init:

00000944 <_init>:
 944:	push	{r3, lr}
 948:	bl	b00 <call_weak_fn>
 94c:	pop	{r3, pc}

Disassembly of section .plt:

00000950 <.plt>:
 950:	push	{lr}		; (str lr, [sp, #-4]!)
 954:	ldr	lr, [pc, #4]	; 960 <.plt+0x10>
 958:	add	lr, pc, lr
 95c:	ldr	pc, [lr, #8]!
 960:	.word	0x000126a0

00000964 <calloc@plt>:
 964:	add	ip, pc, #0, 12
 968:	add	ip, ip, #73728	; 0x12000
 96c:	ldr	pc, [ip, #1696]!	; 0x6a0

00000970 <strstr@plt>:
 970:	add	ip, pc, #0, 12
 974:	add	ip, ip, #73728	; 0x12000
 978:	ldr	pc, [ip, #1688]!	; 0x698

0000097c <strcmp@plt>:
 97c:	add	ip, pc, #0, 12
 980:	add	ip, ip, #73728	; 0x12000
 984:	ldr	pc, [ip, #1680]!	; 0x690

00000988 <__cxa_finalize@plt>:
 988:	add	ip, pc, #0, 12
 98c:	add	ip, ip, #73728	; 0x12000
 990:	ldr	pc, [ip, #1672]!	; 0x688

00000994 <setsockopt@plt>:
 994:	add	ip, pc, #0, 12
 998:	add	ip, ip, #73728	; 0x12000
 99c:	ldr	pc, [ip, #1664]!	; 0x680

000009a0 <strcspn@plt>:
 9a0:	add	ip, pc, #0, 12
 9a4:	add	ip, ip, #73728	; 0x12000
 9a8:	ldr	pc, [ip, #1656]!	; 0x678

000009ac <printf@plt>:
 9ac:	add	ip, pc, #0, 12
 9b0:	add	ip, ip, #73728	; 0x12000
 9b4:	ldr	pc, [ip, #1648]!	; 0x670

000009b8 <free@plt>:
 9b8:	add	ip, pc, #0, 12
 9bc:	add	ip, ip, #73728	; 0x12000
 9c0:	ldr	pc, [ip, #1640]!	; 0x668

000009c4 <memcpy@plt>:
 9c4:	add	ip, pc, #0, 12
 9c8:	add	ip, ip, #73728	; 0x12000
 9cc:	ldr	pc, [ip, #1632]!	; 0x660

000009d0 <strdup@plt>:
 9d0:	add	ip, pc, #0, 12
 9d4:	add	ip, ip, #73728	; 0x12000
 9d8:	ldr	pc, [ip, #1624]!	; 0x658

000009dc <poll@plt>:
 9dc:	add	ip, pc, #0, 12
 9e0:	add	ip, ip, #73728	; 0x12000
 9e4:	ldr	pc, [ip, #1616]!	; 0x650

000009e8 <getsockopt@plt>:
 9e8:	add	ip, pc, #0, 12
 9ec:	add	ip, ip, #73728	; 0x12000
 9f0:	ldr	pc, [ip, #1608]!	; 0x648

000009f4 <ioctl@plt>:
 9f4:	add	ip, pc, #0, 12
 9f8:	add	ip, ip, #73728	; 0x12000
 9fc:	ldr	pc, [ip, #1600]!	; 0x640

00000a00 <sfbpf_freecode@plt>:
 a00:	add	ip, pc, #0, 12
 a04:	add	ip, ip, #73728	; 0x12000
 a08:	ldr	pc, [ip, #1592]!	; 0x638

00000a0c <getenv@plt>:
 a0c:	add	ip, pc, #0, 12
 a10:	add	ip, ip, #73728	; 0x12000
 a14:	ldr	pc, [ip, #1584]!	; 0x630

00000a18 <puts@plt>:
 a18:	add	ip, pc, #0, 12
 a1c:	add	ip, ip, #73728	; 0x12000
 a20:	ldr	pc, [ip, #1576]!	; 0x628

00000a24 <sfbpf_compile@plt>:
 a24:	add	ip, pc, #0, 12
 a28:	add	ip, ip, #73728	; 0x12000
 a2c:	ldr	pc, [ip, #1568]!	; 0x620

00000a30 <strerror@plt>:
 a30:	add	ip, pc, #0, 12
 a34:	add	ip, ip, #73728	; 0x12000
 a38:	ldr	pc, [ip, #1560]!	; 0x618

00000a3c <__gmon_start__@plt>:
 a3c:	add	ip, pc, #0, 12
 a40:	add	ip, ip, #73728	; 0x12000
 a44:	ldr	pc, [ip, #1552]!	; 0x610

00000a48 <strtoul@plt>:
 a48:	add	ip, pc, #0, 12
 a4c:	add	ip, ip, #73728	; 0x12000
 a50:	ldr	pc, [ip, #1544]!	; 0x608

00000a54 <strlen@plt>:
 a54:	add	ip, pc, #0, 12
 a58:	add	ip, ip, #73728	; 0x12000
 a5c:	ldr	pc, [ip, #1536]!	; 0x600

00000a60 <mmap@plt>:
 a60:	add	ip, pc, #0, 12
 a64:	add	ip, ip, #73728	; 0x12000
 a68:	ldr	pc, [ip, #1528]!	; 0x5f8

00000a6c <fprintf@plt>:
 a6c:	add	ip, pc, #0, 12
 a70:	add	ip, ip, #73728	; 0x12000
 a74:	ldr	pc, [ip, #1520]!	; 0x5f0

00000a78 <getpagesize@plt>:
 a78:	add	ip, pc, #0, 12
 a7c:	add	ip, ip, #73728	; 0x12000
 a80:	ldr	pc, [ip, #1512]!	; 0x5e8

00000a84 <__errno_location@plt>:
 a84:	add	ip, pc, #0, 12
 a88:	add	ip, ip, #73728	; 0x12000
 a8c:	ldr	pc, [ip, #1504]!	; 0x5e0

00000a90 <snprintf@plt>:
 a90:	add	ip, pc, #0, 12
 a94:	add	ip, ip, #73728	; 0x12000
 a98:	ldr	pc, [ip, #1496]!	; 0x5d8

00000a9c <bind@plt>:
 a9c:	add	ip, pc, #0, 12
 aa0:	add	ip, ip, #73728	; 0x12000
 aa4:	ldr	pc, [ip, #1488]!	; 0x5d0

00000aa8 <memset@plt>:
 aa8:	add	ip, pc, #0, 12
 aac:	add	ip, ip, #73728	; 0x12000
 ab0:	ldr	pc, [ip, #1480]!	; 0x5c8

00000ab4 <strncpy@plt>:
 ab4:	add	ip, pc, #0, 12
 ab8:	add	ip, ip, #73728	; 0x12000
 abc:	ldr	pc, [ip, #1472]!	; 0x5c0

00000ac0 <munmap@plt>:
 ac0:	add	ip, pc, #0, 12
 ac4:	add	ip, ip, #73728	; 0x12000
 ac8:	ldr	pc, [ip, #1464]!	; 0x5b8

00000acc <sfbpf_filter@plt>:
 acc:	add	ip, pc, #0, 12
 ad0:	add	ip, ip, #73728	; 0x12000
 ad4:	ldr	pc, [ip, #1456]!	; 0x5b0

00000ad8 <socket@plt>:
 ad8:	add	ip, pc, #0, 12
 adc:	add	ip, ip, #73728	; 0x12000
 ae0:	ldr	pc, [ip, #1448]!	; 0x5a8

00000ae4 <close@plt>:
 ae4:	add	ip, pc, #0, 12
 ae8:	add	ip, ip, #73728	; 0x12000
 aec:	ldr	pc, [ip, #1440]!	; 0x5a0

00000af0 <send@plt>:
 af0:	add	ip, pc, #0, 12
 af4:	add	ip, ip, #73728	; 0x12000
 af8:	ldr	pc, [ip, #1432]!	; 0x598

Disassembly of section .text:

00000b00 <call_weak_fn>:
     b00:	ldr	r3, [pc, #20]	; b1c <call_weak_fn+0x1c>
     b04:	ldr	r2, [pc, #20]	; b20 <call_weak_fn+0x20>
     b08:	add	r3, pc, r3
     b0c:	ldr	r2, [r3, r2]
     b10:	cmp	r2, #0
     b14:	bxeq	lr
     b18:	b	a3c <__gmon_start__@plt>
     b1c:	.word	0x000124f0
     b20:	.word	0x000000a0

00000b24 <deregister_tm_clones>:
     b24:	ldr	r0, [pc, #44]	; b58 <deregister_tm_clones+0x34>
     b28:	ldr	r3, [pc, #44]	; b5c <deregister_tm_clones+0x38>
     b2c:	add	r0, pc, r0
     b30:	add	r3, pc, r3
     b34:	cmp	r3, r0
     b38:	ldr	r3, [pc, #32]	; b60 <deregister_tm_clones+0x3c>
     b3c:	add	r3, pc, r3
     b40:	bxeq	lr
     b44:	ldr	r2, [pc, #24]	; b64 <deregister_tm_clones+0x40>
     b48:	ldr	r3, [r3, r2]
     b4c:	cmp	r3, #0
     b50:	bxeq	lr
     b54:	bx	r3
     b58:	.word	0x00012578
     b5c:	.word	0x00012574
     b60:	.word	0x000124bc
     b64:	.word	0x00000098

00000b68 <register_tm_clones>:
     b68:	ldr	r0, [pc, #56]	; ba8 <register_tm_clones+0x40>
     b6c:	ldr	r3, [pc, #56]	; bac <register_tm_clones+0x44>
     b70:	add	r0, pc, r0
     b74:	add	r3, pc, r3
     b78:	sub	r1, r3, r0
     b7c:	ldr	r3, [pc, #44]	; bb0 <register_tm_clones+0x48>
     b80:	asr	r1, r1, #2
     b84:	add	r3, pc, r3
     b88:	add	r1, r1, r1, lsr #31
     b8c:	asrs	r1, r1, #1
     b90:	bxeq	lr
     b94:	ldr	r2, [pc, #24]	; bb4 <register_tm_clones+0x4c>
     b98:	ldr	r3, [r3, r2]
     b9c:	cmp	r3, #0
     ba0:	bxeq	lr
     ba4:	bx	r3
     ba8:	.word	0x00012534
     bac:	.word	0x00012530
     bb0:	.word	0x00012474
     bb4:	.word	0x000000a4

00000bb8 <__do_global_dtors_aux>:
     bb8:	ldr	r3, [pc, #76]	; c0c <__do_global_dtors_aux+0x54>
     bbc:	ldr	r2, [pc, #76]	; c10 <__do_global_dtors_aux+0x58>
     bc0:	add	r3, pc, r3
     bc4:	add	r2, pc, r2
     bc8:	ldrb	r3, [r3]
     bcc:	cmp	r3, #0
     bd0:	bxne	lr
     bd4:	ldr	r3, [pc, #56]	; c14 <__do_global_dtors_aux+0x5c>
     bd8:	push	{r4, lr}
     bdc:	ldr	r3, [r2, r3]
     be0:	cmp	r3, #0
     be4:	beq	bf4 <__do_global_dtors_aux+0x3c>
     be8:	ldr	r3, [pc, #40]	; c18 <__do_global_dtors_aux+0x60>
     bec:	ldr	r0, [pc, r3]
     bf0:	bl	988 <__cxa_finalize@plt>
     bf4:	bl	b24 <deregister_tm_clones>
     bf8:	ldr	r3, [pc, #28]	; c1c <__do_global_dtors_aux+0x64>
     bfc:	mov	r2, #1
     c00:	add	r3, pc, r3
     c04:	strb	r2, [r3]
     c08:	pop	{r4, pc}
     c0c:	.word	0x000124e4
     c10:	.word	0x00012434
     c14:	.word	0x00000094
     c18:	.word	0x000124b4
     c1c:	.word	0x000124a4

00000c20 <frame_dummy>:
     c20:	b	b68 <register_tm_clones>
	...

00000c30 <afpacket_daq_initialize>:
     c30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     c34:	add	fp, sp, #28
     c38:	sub	sp, sp, #4
     c3c:	vpush	{d8-d9}
     c40:	sub	sp, sp, #80	; 0x50
     c44:	mov	r6, r1
     c48:	mov	sl, r0
     c4c:	mov	r0, #1
     c50:	mov	r1, #408	; 0x198
     c54:	mov	r8, r3
     c58:	mov	r9, r2
     c5c:	bl	964 <calloc@plt>
     c60:	cmp	r0, #0
     c64:	beq	fb0 <afpacket_daq_initialize+0x380>
     c68:	mov	r4, r0
     c6c:	ldr	r0, [sl]
     c70:	bl	9d0 <strdup@plt>
     c74:	cmp	r0, #0
     c78:	str	r0, [r4]
     c7c:	beq	fd4 <afpacket_daq_initialize+0x3a4>
     c80:	mov	r7, r0
     c84:	ldmib	sl, {r0, r1}
     c88:	ldrb	r5, [r7]
     c8c:	cmp	r1, #0
     c90:	mvneq	r1, #0
     c94:	cmp	r5, #58	; 0x3a
     c98:	strd	r0, [r4, #8]
     c9c:	beq	1010 <afpacket_daq_initialize+0x3e0>
     ca0:	mov	r0, r7
     ca4:	bl	a54 <strlen@plt>
     ca8:	cmp	r0, #0
     cac:	beq	cc0 <afpacket_daq_initialize+0x90>
     cb0:	add	r0, r7, r0
     cb4:	ldrb	r0, [r0, #-1]
     cb8:	cmp	r0, #58	; 0x3a
     cbc:	beq	1010 <afpacket_daq_initialize+0x3e0>
     cc0:	ldr	r0, [sl, #12]
     cc4:	cmp	r0, #0
     cc8:	beq	ff8 <afpacket_daq_initialize+0x3c8>
     ccc:	cmp	r5, #0
     cd0:	str	r6, [sp, #8]
     cd4:	beq	11a4 <afpacket_daq_initialize+0x574>
     cd8:	ldr	r5, [pc, #1260]	; 11cc <afpacket_daq_initialize+0x59c>
     cdc:	mov	r6, #0
     ce0:	vmov.i32	q4, #0	; 0x00000000
     ce4:	str	r8, [sp, #20]
     ce8:	str	r9, [sp, #16]
     cec:	str	sl, [sp, #12]
     cf0:	add	r5, pc, r5
     cf4:	mov	r0, r7
     cf8:	mov	r1, r5
     cfc:	bl	9a0 <strcspn@plt>
     d00:	cmp	r0, #16
     d04:	bcs	10b8 <afpacket_daq_initialize+0x488>
     d08:	cmp	r0, #0
     d0c:	beq	e98 <afpacket_daq_initialize+0x268>
     d10:	ldr	r1, [r4, #28]
     d14:	add	r1, r1, #1
     d18:	cmp	r1, #32
     d1c:	str	r1, [r4, #28]
     d20:	bcs	10c8 <afpacket_daq_initialize+0x498>
     d24:	str	r0, [sp, #24]
     d28:	mov	r8, r6
     d2c:	add	r6, sp, #32
     d30:	add	r1, r0, #1
     d34:	mov	r3, r7
     d38:	ldr	r2, [pc, #1176]	; 11d8 <afpacket_daq_initialize+0x5a8>
     d3c:	mov	r0, r6
     d40:	add	r2, pc, r2
     d44:	bl	a90 <snprintf@plt>
     d48:	mov	r0, #1
     d4c:	mov	r1, #116	; 0x74
     d50:	bl	964 <calloc@plt>
     d54:	mov	r5, r0
     d58:	cmp	r0, #0
     d5c:	beq	10dc <afpacket_daq_initialize+0x4ac>
     d60:	mvn	r0, #0
     d64:	str	r0, [r5, #16]
     d68:	mov	r0, r6
     d6c:	bl	9d0 <strdup@plt>
     d70:	cmp	r0, #0
     d74:	str	r0, [r5, #84]	; 0x54
     d78:	beq	10e8 <afpacket_daq_initialize+0x4b8>
     d7c:	mov	r0, #17
     d80:	mov	r1, #3
     d84:	mov	r2, #768	; 0x300
     d88:	bl	ad8 <socket@plt>
     d8c:	cmn	r0, #1
     d90:	str	r0, [r5, #4]
     d94:	beq	10f4 <afpacket_daq_initialize+0x4c4>
     d98:	add	r6, sp, #48	; 0x30
     d9c:	add	r1, sp, #32
     da0:	mov	r2, #16
     da4:	mov	r0, r6
     da8:	vst1.64	{d8-d9}, [r0]!
     dac:	vst1.64	{d8-d9}, [r0]
     db0:	mov	r0, r6
     db4:	bl	ab4 <strncpy@plt>
     db8:	ldr	r0, [r5, #4]
     dbc:	movw	r1, #35123	; 0x8933
     dc0:	mov	r2, r6
     dc4:	bl	9f4 <ioctl@plt>
     dc8:	cmn	r0, #1
     dcc:	beq	1110 <afpacket_daq_initialize+0x4e0>
     dd0:	ldr	r0, [sp, #64]	; 0x40
     dd4:	movw	r1, #17
     dd8:	movt	r1, #768	; 0x300
     ddc:	str	r0, [r5, #88]	; 0x58
     de0:	str	r1, [r5, #96]	; 0x60
     de4:	ldr	r1, [r4, #24]
     de8:	str	r0, [r5, #100]	; 0x64
     dec:	str	r5, [r4, #24]
     df0:	add	r0, r8, #1
     df4:	str	r1, [r5]
     df8:	ldr	r2, [sl, #12]
     dfc:	cmp	r2, #0
     e00:	beq	ea0 <afpacket_daq_initialize+0x270>
     e04:	cmp	r0, #2
     e08:	bne	eb4 <afpacket_daq_initialize+0x284>
     e0c:	ldr	r9, [r5, #84]	; 0x54
     e10:	ldr	sl, [r1, #84]	; 0x54
     e14:	mov	r8, #0
     e18:	mov	r0, #0
     e1c:	str	r0, [sp, #28]
     e20:	ldr	r6, [r5, #84]	; 0x54
     e24:	mov	r1, sl
     e28:	mov	r0, r6
     e2c:	bl	97c <strcmp@plt>
     e30:	cmp	r0, #0
     e34:	beq	e50 <afpacket_daq_initialize+0x220>
     e38:	mov	r0, r6
     e3c:	mov	r1, r9
     e40:	bl	97c <strcmp@plt>
     e44:	cmp	r0, #0
     e48:	moveq	r8, r5
     e4c:	b	e54 <afpacket_daq_initialize+0x224>
     e50:	str	r5, [sp, #28]
     e54:	ldr	r5, [r5]
     e58:	cmp	r5, #0
     e5c:	bne	e20 <afpacket_daq_initialize+0x1f0>
     e60:	ldr	r0, [sp, #28]
     e64:	cmp	r0, #0
     e68:	cmpne	r8, #0
     e6c:	beq	1094 <afpacket_daq_initialize+0x464>
     e70:	str	r8, [r0, #92]	; 0x5c
     e74:	str	r0, [r8, #92]	; 0x5c
     e78:	ldr	r8, [sp, #20]
     e7c:	ldr	r9, [sp, #16]
     e80:	ldr	sl, [sp, #12]
     e84:	mov	r6, #0
     e88:	ldr	r5, [pc, #868]	; 11f4 <afpacket_daq_initialize+0x5c4>
     e8c:	ldr	r1, [sp, #24]
     e90:	add	r5, pc, r5
     e94:	b	ed0 <afpacket_daq_initialize+0x2a0>
     e98:	mov	r1, #1
     e9c:	b	ed0 <afpacket_daq_initialize+0x2a0>
     ea0:	ldr	r5, [pc, #840]	; 11f0 <afpacket_daq_initialize+0x5c0>
     ea4:	ldr	r1, [sp, #24]
     ea8:	mov	r6, r0
     eac:	add	r5, pc, r5
     eb0:	b	ecc <afpacket_daq_initialize+0x29c>
     eb4:	ldr	r1, [sp, #24]
     eb8:	cmp	r8, #1
     ebc:	mov	r6, r0
     ec0:	bgt	1198 <afpacket_daq_initialize+0x568>
     ec4:	ldr	r5, [pc, #820]	; 1200 <afpacket_daq_initialize+0x5d0>
     ec8:	add	r5, pc, r5
     ecc:	ldr	r8, [sp, #20]
     ed0:	ldrb	r0, [r7, r1]!
     ed4:	cmp	r0, #0
     ed8:	bne	cf4 <afpacket_daq_initialize+0xc4>
     edc:	ldr	r5, [r4, #24]
     ee0:	cmp	r5, #0
     ee4:	beq	11a4 <afpacket_daq_initialize+0x574>
     ee8:	cmp	r6, #0
     eec:	ldrne	r0, [sl, #12]
     ef0:	cmpne	r0, #0
     ef4:	bne	11a4 <afpacket_daq_initialize+0x574>
     ef8:	ldr	r7, [sl, #20]
     efc:	cmp	r7, #0
     f00:	beq	f64 <afpacket_daq_initialize+0x334>
     f04:	ldr	sl, [pc, #760]	; 1204 <afpacket_daq_initialize+0x5d4>
     f08:	ldr	r8, [pc, #760]	; 1208 <afpacket_daq_initialize+0x5d8>
     f0c:	mov	r9, #0
     f10:	add	sl, pc, sl
     f14:	add	r8, pc, r8
     f18:	ldr	r6, [r7]
     f1c:	mov	r1, sl
     f20:	mov	r0, r6
     f24:	bl	97c <strcmp@plt>
     f28:	cmp	r0, #0
     f2c:	beq	f4c <afpacket_daq_initialize+0x31c>
     f30:	mov	r0, r6
     f34:	mov	r1, r8
     f38:	bl	97c <strcmp@plt>
     f3c:	cmp	r0, #0
     f40:	moveq	r0, #1
     f44:	streq	r0, [r4, #20]
     f48:	b	f50 <afpacket_daq_initialize+0x320>
     f4c:	ldr	r9, [r7, #4]
     f50:	ldr	r7, [r7, #8]
     f54:	cmp	r7, #0
     f58:	bne	f18 <afpacket_daq_initialize+0x2e8>
     f5c:	cmp	r9, #0
     f60:	bne	f7c <afpacket_daq_initialize+0x34c>
     f64:	ldr	r0, [pc, #672]	; 120c <afpacket_daq_initialize+0x5dc>
     f68:	add	r0, pc, r0
     f6c:	bl	a0c <getenv@plt>
     f70:	mov	r9, r0
     f74:	cmp	r0, #0
     f78:	beq	1140 <afpacket_daq_initialize+0x510>
     f7c:	ldr	r0, [pc, #652]	; 1210 <afpacket_daq_initialize+0x5e0>
     f80:	mov	r1, r9
     f84:	add	r0, pc, r0
     f88:	bl	97c <strcmp@plt>
     f8c:	cmp	r0, #0
     f90:	beq	1140 <afpacket_daq_initialize+0x510>
     f94:	mov	r0, r9
     f98:	mov	r1, #0
     f9c:	mov	r2, #10
     fa0:	bl	a48 <strtoul@plt>
     fa4:	ldr	r5, [r4, #24]
     fa8:	lsl	r0, r0, #20
     fac:	b	1144 <afpacket_daq_initialize+0x514>
     fb0:	ldr	r2, [pc, #504]	; 11b0 <afpacket_daq_initialize+0x580>
     fb4:	ldr	r3, [pc, #504]	; 11b4 <afpacket_daq_initialize+0x584>
     fb8:	mov	r0, r9
     fbc:	mov	r1, r8
     fc0:	add	r2, pc, r2
     fc4:	add	r3, pc, r3
     fc8:	bl	a90 <snprintf@plt>
     fcc:	mvn	r6, #1
     fd0:	b	1080 <afpacket_daq_initialize+0x450>
     fd4:	ldr	r2, [pc, #476]	; 11b8 <afpacket_daq_initialize+0x588>
     fd8:	ldr	r3, [pc, #476]	; 11bc <afpacket_daq_initialize+0x58c>
     fdc:	mov	r0, r9
     fe0:	mov	r1, r8
     fe4:	add	r2, pc, r2
     fe8:	add	r3, pc, r3
     fec:	bl	a90 <snprintf@plt>
     ff0:	mvn	r6, #1
     ff4:	b	1034 <afpacket_daq_initialize+0x404>
     ff8:	ldr	r1, [pc, #448]	; 11c0 <afpacket_daq_initialize+0x590>
     ffc:	mov	r0, r7
    1000:	add	r1, pc, r1
    1004:	bl	970 <strstr@plt>
    1008:	cmp	r0, #0
    100c:	beq	ccc <afpacket_daq_initialize+0x9c>
    1010:	str	r7, [sp]
    1014:	ldr	r2, [pc, #424]	; 11c4 <afpacket_daq_initialize+0x594>
    1018:	add	r2, pc, r2
    101c:	ldr	r3, [pc, #420]	; 11c8 <afpacket_daq_initialize+0x598>
    1020:	mov	r0, r9
    1024:	mov	r1, r8
    1028:	add	r3, pc, r3
    102c:	bl	a90 <snprintf@plt>
    1030:	mvn	r6, #0
    1034:	mov	r0, r4
    1038:	bl	2100 <update_hw_stats>
    103c:	b	104c <afpacket_daq_initialize+0x41c>
    1040:	ldr	r1, [r0]
    1044:	str	r1, [r4, #24]
    1048:	bl	201c <destroy_instance>
    104c:	ldr	r0, [r4, #24]
    1050:	cmp	r0, #0
    1054:	bne	1040 <afpacket_daq_initialize+0x410>
    1058:	add	r0, r4, #32
    105c:	bl	a00 <sfbpf_freecode@plt>
    1060:	mov	r0, #3
    1064:	str	r0, [r4, #144]	; 0x90
    1068:	ldr	r0, [r4]
    106c:	cmp	r0, #0
    1070:	beq	1078 <afpacket_daq_initialize+0x448>
    1074:	bl	9b8 <free@plt>
    1078:	mov	r0, r4
    107c:	bl	9b8 <free@plt>
    1080:	mov	r0, r6
    1084:	sub	sp, fp, #48	; 0x30
    1088:	vpop	{d8-d9}
    108c:	add	sp, sp, #4
    1090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1094:	str	sl, [sp]
    1098:	str	r9, [sp, #4]
    109c:	ldr	r2, [pc, #340]	; 11f8 <afpacket_daq_initialize+0x5c8>
    10a0:	ldr	r3, [pc, #340]	; 11fc <afpacket_daq_initialize+0x5cc>
    10a4:	ldr	r0, [sp, #16]
    10a8:	ldr	r1, [sp, #20]
    10ac:	add	r2, pc, r2
    10b0:	add	r3, pc, r3
    10b4:	b	102c <afpacket_daq_initialize+0x3fc>
    10b8:	str	r0, [sp]
    10bc:	ldr	r2, [pc, #268]	; 11d0 <afpacket_daq_initialize+0x5a0>
    10c0:	add	r2, pc, r2
    10c4:	b	101c <afpacket_daq_initialize+0x3ec>
    10c8:	mov	r0, #32
    10cc:	str	r0, [sp]
    10d0:	ldr	r2, [pc, #252]	; 11d4 <afpacket_daq_initialize+0x5a4>
    10d4:	add	r2, pc, r2
    10d8:	b	101c <afpacket_daq_initialize+0x3ec>
    10dc:	ldr	r2, [pc, #248]	; 11dc <afpacket_daq_initialize+0x5ac>
    10e0:	add	r2, pc, r2
    10e4:	b	1120 <afpacket_daq_initialize+0x4f0>
    10e8:	ldr	r2, [pc, #240]	; 11e0 <afpacket_daq_initialize+0x5b0>
    10ec:	add	r2, pc, r2
    10f0:	b	1120 <afpacket_daq_initialize+0x4f0>
    10f4:	bl	a84 <__errno_location@plt>
    10f8:	ldr	r0, [r0]
    10fc:	bl	a30 <strerror@plt>
    1100:	str	r0, [sp]
    1104:	ldr	r2, [pc, #216]	; 11e4 <afpacket_daq_initialize+0x5b4>
    1108:	add	r2, pc, r2
    110c:	b	1120 <afpacket_daq_initialize+0x4f0>
    1110:	ldr	r0, [r5, #84]	; 0x54
    1114:	str	r0, [sp]
    1118:	ldr	r2, [pc, #200]	; 11e8 <afpacket_daq_initialize+0x5b8>
    111c:	add	r2, pc, r2
    1120:	ldr	r3, [pc, #196]	; 11ec <afpacket_daq_initialize+0x5bc>
    1124:	ldr	r1, [sp, #20]
    1128:	mov	r0, r9
    112c:	add	r3, pc, r3
    1130:	bl	a90 <snprintf@plt>
    1134:	mov	r0, r5
    1138:	bl	201c <destroy_instance>
    113c:	b	1030 <afpacket_daq_initialize+0x400>
    1140:	mov	r0, #134217728	; 0x8000000
    1144:	mov	r6, #0
    1148:	cmp	r5, #0
    114c:	mov	r1, #0
    1150:	beq	117c <afpacket_daq_initialize+0x54c>
    1154:	mov	r1, #0
    1158:	ldr	r3, [r5, #92]	; 0x5c
    115c:	ldr	r2, [r5]
    1160:	cmp	r3, #0
    1164:	mov	r3, #2
    1168:	mov	r5, r2
    116c:	movweq	r3, #1
    1170:	cmp	r2, #0
    1174:	add	r1, r3, r1
    1178:	bne	1158 <afpacket_daq_initialize+0x528>
    117c:	mov	r2, #1
    1180:	udiv	r0, r0, r1
    1184:	str	r2, [r4, #144]	; 0x90
    1188:	str	r0, [r4, #16]
    118c:	ldr	r0, [sp, #8]
    1190:	str	r4, [r0]
    1194:	b	1080 <afpacket_daq_initialize+0x450>
    1198:	ldr	r8, [sp, #20]
    119c:	cmp	r5, #0
    11a0:	bne	ee8 <afpacket_daq_initialize+0x2b8>
    11a4:	ldr	r0, [r4]
    11a8:	str	r0, [sp]
    11ac:	b	1014 <afpacket_daq_initialize+0x3e4>
    11b0:	.word	0x00001561
    11b4:	.word	0x00001598
    11b8:	.word	0x00001590
    11bc:	.word	0x00001574
    11c0:	.word	0x000015a8
    11c4:	.word	0x00001593
    11c8:	.word	0x00001534
    11cc:	.word	0x000018b9
    11d0:	.word	0x00001516
    11d4:	.word	0x00001525
    11d8:	.word	0x00001b04
    11dc:	.word	0x000015ae
    11e0:	.word	0x000015e3
    11e4:	.word	0x000015f9
    11e8:	.word	0x00001611
    11ec:	.word	0x00001593
    11f0:	.word	0x000016fd
    11f4:	.word	0x00001719
    11f8:	.word	0x00001581
    11fc:	.word	0x000014ac
    1200:	.word	0x000016e1
    1204:	.word	0x0000174f
    1208:	.word	0x0000175a
    120c:	.word	0x0000170c
    1210:	.word	0x00001706

00001214 <afpacket_daq_set_filter>:
    1214:	push	{r4, r5, fp, lr}
    1218:	add	fp, sp, #8
    121c:	sub	sp, sp, #16
    1220:	mov	r4, r0
    1224:	ldr	r0, [r0, #4]
    1228:	mov	r5, r1
    122c:	cmp	r0, #0
    1230:	beq	1238 <afpacket_daq_set_filter+0x24>
    1234:	bl	9b8 <free@plt>
    1238:	mov	r0, r5
    123c:	bl	9d0 <strdup@plt>
    1240:	cmp	r0, #0
    1244:	str	r0, [r4, #4]
    1248:	beq	128c <afpacket_daq_set_filter+0x78>
    124c:	mov	r3, r0
    1250:	ldr	r0, [r4, #8]
    1254:	mov	r5, #0
    1258:	mov	r1, #1
    125c:	add	r2, sp, #8
    1260:	stm	sp, {r1, r5}
    1264:	mov	r1, #1
    1268:	bl	a24 <sfbpf_compile@plt>
    126c:	cmn	r0, #1
    1270:	ble	129c <afpacket_daq_set_filter+0x88>
    1274:	add	r0, r4, #32
    1278:	bl	a00 <sfbpf_freecode@plt>
    127c:	ldr	r0, [sp, #8]
    1280:	ldr	r1, [sp, #12]
    1284:	strd	r0, [r4, #32]
    1288:	b	12bc <afpacket_daq_set_filter+0xa8>
    128c:	ldr	r2, [pc, #52]	; 12c8 <afpacket_daq_set_filter+0xb4>
    1290:	add	r0, r4, #148	; 0x94
    1294:	add	r2, pc, r2
    1298:	b	12a8 <afpacket_daq_set_filter+0x94>
    129c:	ldr	r2, [pc, #44]	; 12d0 <afpacket_daq_set_filter+0xbc>
    12a0:	add	r0, r4, #148	; 0x94
    12a4:	add	r2, pc, r2
    12a8:	ldr	r3, [pc, #28]	; 12cc <afpacket_daq_set_filter+0xb8>
    12ac:	mov	r1, #256	; 0x100
    12b0:	add	r3, pc, r3
    12b4:	bl	a90 <snprintf@plt>
    12b8:	mvn	r5, #0
    12bc:	mov	r0, r5
    12c0:	sub	sp, fp, #8
    12c4:	pop	{r4, r5, fp, pc}
    12c8:	.word	0x000014e3
    12cc:	.word	0x000014fb
    12d0:	.word	0x0000151f

000012d4 <afpacket_daq_start>:
    12d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    12d8:	add	fp, sp, #28
    12dc:	sub	sp, sp, #4
    12e0:	vpush	{d8-d9}
    12e4:	sub	sp, sp, #80	; 0x50
    12e8:	ldr	r5, [r0, #24]
    12ec:	mov	r8, r0
    12f0:	cmp	r5, #0
    12f4:	beq	1580 <afpacket_daq_start+0x2ac>
    12f8:	add	r7, sp, #40	; 0x28
    12fc:	mov	r6, #4
    1300:	mov	r9, #1
    1304:	sub	r4, fp, #52	; 0x34
    1308:	vmov.i32	q4, #0	; 0x00000000
    130c:	add	sl, r7, #8
    1310:	mov	r0, #0
    1314:	str	r6, [sp, #36]	; 0x24
    1318:	mov	r1, #768	; 0x300
    131c:	mov	r2, #20
    1320:	str	r0, [sl]
    1324:	str	r0, [sl, #4]
    1328:	str	r0, [sl, #8]
    132c:	mov	r0, #17
    1330:	strh	r0, [sp, #40]	; 0x28
    1334:	ldr	r0, [r5, #88]	; 0x58
    1338:	strh	r1, [sp, #42]	; 0x2a
    133c:	mov	r1, r7
    1340:	str	r0, [sp, #44]	; 0x2c
    1344:	ldr	r0, [r5, #4]
    1348:	bl	a9c <bind@plt>
    134c:	cmn	r0, #1
    1350:	beq	1604 <afpacket_daq_start+0x330>
    1354:	ldr	r0, [r5, #4]
    1358:	add	r1, sp, #36	; 0x24
    135c:	mov	r2, #4
    1360:	mov	r3, r4
    1364:	str	r1, [sp]
    1368:	mov	r1, #1
    136c:	bl	9e8 <getsockopt@plt>
    1370:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1374:	orrs	r0, r1, r0
    1378:	bne	162c <afpacket_daq_start+0x358>
    137c:	add	r3, sp, #16
    1380:	mov	r1, #16
    1384:	mov	r2, #1
    1388:	vst1.64	{d8-d9}, [r3]
    138c:	ldr	r0, [r5, #88]	; 0x58
    1390:	strh	r9, [sp, #20]
    1394:	str	r0, [sp, #16]
    1398:	ldr	r0, [r5, #4]
    139c:	str	r1, [sp]
    13a0:	movw	r1, #263	; 0x107
    13a4:	bl	994 <setsockopt@plt>
    13a8:	cmn	r0, #1
    13ac:	beq	1654 <afpacket_daq_start+0x380>
    13b0:	mov	r0, r7
    13b4:	mov	r2, #16
    13b8:	vst1.64	{d8-d9}, [r0]!
    13bc:	vst1.64	{d8-d9}, [r0]
    13c0:	mov	r0, r7
    13c4:	ldr	r1, [r5, #84]	; 0x54
    13c8:	bl	ab4 <strncpy@plt>
    13cc:	ldr	r0, [r5, #4]
    13d0:	movw	r1, #35111	; 0x8927
    13d4:	mov	r2, r7
    13d8:	bl	9f4 <ioctl@plt>
    13dc:	cmn	r0, #1
    13e0:	beq	167c <afpacket_daq_start+0x3a8>
    13e4:	ldrh	r0, [sp, #56]	; 0x38
    13e8:	cmp	r0, #1
    13ec:	bne	16b4 <afpacket_daq_start+0x3e0>
    13f0:	str	r6, [sp, #40]	; 0x28
    13f4:	str	r9, [fp, #-52]	; 0xffffffcc
    13f8:	movw	r1, #263	; 0x107
    13fc:	mov	r2, #11
    1400:	mov	r3, r4
    1404:	ldr	r0, [r5, #4]
    1408:	str	r7, [sp]
    140c:	bl	9e8 <getsockopt@plt>
    1410:	cmn	r0, #1
    1414:	ble	16dc <afpacket_daq_start+0x408>
    1418:	ldr	r0, [fp, #-52]	; 0xffffffcc
    141c:	movw	r1, #263	; 0x107
    1420:	mov	r2, #10
    1424:	mov	r3, r4
    1428:	str	r0, [r5, #12]
    142c:	str	r9, [fp, #-52]	; 0xffffffcc
    1430:	ldr	r0, [r5, #4]
    1434:	str	r6, [sp]
    1438:	bl	994 <setsockopt@plt>
    143c:	cmn	r0, #1
    1440:	ble	16fc <afpacket_daq_start+0x428>
    1444:	str	r9, [r5, #8]
    1448:	str	r6, [fp, #-52]	; 0xffffffcc
    144c:	movw	r1, #263	; 0x107
    1450:	mov	r2, #12
    1454:	mov	r3, r4
    1458:	ldr	r0, [r5, #4]
    145c:	str	r6, [sp]
    1460:	bl	994 <setsockopt@plt>
    1464:	cmn	r0, #1
    1468:	ble	171c <afpacket_daq_start+0x448>
    146c:	ldr	r0, [r8, #20]
    1470:	cmp	r0, #0
    1474:	beq	1498 <afpacket_daq_start+0x1c4>
    1478:	ldr	r1, [r5, #8]
    147c:	ldr	r0, [pc, #820]	; 17b8 <afpacket_daq_start+0x4e4>
    1480:	add	r0, pc, r0
    1484:	bl	9ac <printf@plt>
    1488:	ldr	r1, [r5, #12]
    148c:	ldr	r0, [pc, #808]	; 17bc <afpacket_daq_start+0x4e8>
    1490:	add	r0, pc, r0
    1494:	bl	9ac <printf@plt>
    1498:	add	r9, r5, #20
    149c:	mov	r0, r8
    14a0:	mov	r1, r5
    14a4:	mov	r3, #5
    14a8:	mov	r2, r9
    14ac:	bl	21f0 <create_ring>
    14b0:	cmp	r0, #0
    14b4:	bne	1774 <afpacket_daq_start+0x4a0>
    14b8:	ldr	r0, [r5, #92]	; 0x5c
    14bc:	cmp	r0, #0
    14c0:	beq	14e0 <afpacket_daq_start+0x20c>
    14c4:	add	r2, r5, #52	; 0x34
    14c8:	mov	r0, r8
    14cc:	mov	r1, r5
    14d0:	mov	r3, #13
    14d4:	bl	21f0 <create_ring>
    14d8:	cmp	r0, #0
    14dc:	bne	1774 <afpacket_daq_start+0x4a0>
    14e0:	ldr	r0, [r5, #4]
    14e4:	ldr	r1, [r5, #36]	; 0x24
    14e8:	ldr	r2, [r5, #68]	; 0x44
    14ec:	mov	r3, #1
    14f0:	str	r0, [sp]
    14f4:	mov	r0, #0
    14f8:	add	r1, r2, r1
    14fc:	mov	r2, #3
    1500:	str	r0, [sp, #4]
    1504:	mov	r0, #0
    1508:	bl	a60 <mmap@plt>
    150c:	cmn	r0, #1
    1510:	str	r0, [r5, #16]
    1514:	beq	1748 <afpacket_daq_start+0x474>
    1518:	str	r0, [r5, #40]	; 0x28
    151c:	mov	r2, r9
    1520:	ldr	r1, [r5, #68]	; 0x44
    1524:	add	r0, r0, r1
    1528:	mov	r1, r5
    152c:	str	r0, [r5, #72]	; 0x48
    1530:	mov	r0, r8
    1534:	bl	23d0 <set_up_ring>
    1538:	cmp	r0, #0
    153c:	bne	1774 <afpacket_daq_start+0x4a0>
    1540:	ldr	r0, [r5, #92]	; 0x5c
    1544:	cmp	r0, #0
    1548:	beq	1564 <afpacket_daq_start+0x290>
    154c:	add	r2, r5, #52	; 0x34
    1550:	mov	r0, r8
    1554:	mov	r1, r5
    1558:	bl	23d0 <set_up_ring>
    155c:	cmp	r0, #0
    1560:	bne	1774 <afpacket_daq_start+0x4a0>
    1564:	ldr	r5, [r5]
    1568:	mov	r9, #1
    156c:	mov	r6, #4
    1570:	cmp	r5, #0
    1574:	bne	1310 <afpacket_daq_start+0x3c>
    1578:	ldr	r6, [r8, #24]
    157c:	b	1584 <afpacket_daq_start+0x2b0>
    1580:	mov	r6, #0
    1584:	mov	r0, #8
    1588:	vmov.i32	q8, #0	; 0x00000000
    158c:	cmp	r6, #0
    1590:	str	r0, [sp, #16]
    1594:	add	r0, r8, #128	; 0x80
    1598:	vst1.64	{d16-d17}, [r0]
    159c:	add	r0, r8, #112	; 0x70
    15a0:	vst1.64	{d16-d17}, [r0]
    15a4:	add	r0, r8, #96	; 0x60
    15a8:	vst1.64	{d16-d17}, [r0]
    15ac:	add	r0, r8, #80	; 0x50
    15b0:	vst1.64	{d16-d17}, [r0]
    15b4:	add	r0, r8, #64	; 0x40
    15b8:	vst1.64	{d16-d17}, [r0]
    15bc:	add	r0, r8, #48	; 0x30
    15c0:	vst1.64	{d16-d17}, [r0]
    15c4:	beq	15f4 <afpacket_daq_start+0x320>
    15c8:	add	r7, sp, #16
    15cc:	add	r5, sp, #40	; 0x28
    15d0:	ldr	r0, [r6, #4]
    15d4:	movw	r1, #263	; 0x107
    15d8:	mov	r2, #6
    15dc:	mov	r3, r5
    15e0:	str	r7, [sp]
    15e4:	bl	9e8 <getsockopt@plt>
    15e8:	ldr	r6, [r6]
    15ec:	cmp	r6, #0
    15f0:	bne	15d0 <afpacket_daq_start+0x2fc>
    15f4:	mov	r0, #2
    15f8:	str	r0, [r8, #144]	; 0x90
    15fc:	mov	r0, #0
    1600:	b	1778 <afpacket_daq_start+0x4a4>
    1604:	ldr	r5, [r5, #84]	; 0x54
    1608:	bl	a84 <__errno_location@plt>
    160c:	ldr	r0, [r0]
    1610:	bl	a30 <strerror@plt>
    1614:	str	r0, [sp, #4]
    1618:	str	r5, [sp]
    161c:	add	r0, r8, #148	; 0x94
    1620:	ldr	r2, [pc, #352]	; 1788 <afpacket_daq_start+0x4b4>
    1624:	add	r2, pc, r2
    1628:	b	1648 <afpacket_daq_start+0x374>
    162c:	bl	a84 <__errno_location@plt>
    1630:	ldr	r0, [r0]
    1634:	bl	a30 <strerror@plt>
    1638:	str	r0, [sp]
    163c:	add	r0, r8, #148	; 0x94
    1640:	ldr	r2, [pc, #324]	; 178c <afpacket_daq_start+0x4b8>
    1644:	add	r2, pc, r2
    1648:	ldr	r3, [pc, #320]	; 1790 <afpacket_daq_start+0x4bc>
    164c:	add	r3, pc, r3
    1650:	b	176c <afpacket_daq_start+0x498>
    1654:	bl	a84 <__errno_location@plt>
    1658:	ldr	r0, [r0]
    165c:	bl	a30 <strerror@plt>
    1660:	str	r0, [sp]
    1664:	add	r0, r8, #148	; 0x94
    1668:	ldr	r2, [pc, #292]	; 1794 <afpacket_daq_start+0x4c0>
    166c:	ldr	r3, [pc, #292]	; 1798 <afpacket_daq_start+0x4c4>
    1670:	add	r2, pc, r2
    1674:	add	r3, pc, r3
    1678:	b	176c <afpacket_daq_start+0x498>
    167c:	ldr	r6, [r5, #84]	; 0x54
    1680:	bl	a84 <__errno_location@plt>
    1684:	ldr	r5, [r0]
    1688:	mov	r0, r5
    168c:	bl	a30 <strerror@plt>
    1690:	str	r0, [sp, #8]
    1694:	str	r6, [sp]
    1698:	str	r5, [sp, #4]
    169c:	add	r0, r8, #148	; 0x94
    16a0:	ldr	r2, [pc, #244]	; 179c <afpacket_daq_start+0x4c8>
    16a4:	ldr	r3, [pc, #244]	; 17a0 <afpacket_daq_start+0x4cc>
    16a8:	add	r2, pc, r2
    16ac:	add	r3, pc, r3
    16b0:	b	176c <afpacket_daq_start+0x498>
    16b4:	ldr	r1, [r5, #84]	; 0x54
    16b8:	mov	r2, #1
    16bc:	str	r1, [sp]
    16c0:	stmib	sp, {r0, r2}
    16c4:	add	r0, r8, #148	; 0x94
    16c8:	ldr	r2, [pc, #212]	; 17a4 <afpacket_daq_start+0x4d0>
    16cc:	ldr	r3, [pc, #212]	; 17a8 <afpacket_daq_start+0x4d4>
    16d0:	add	r2, pc, r2
    16d4:	add	r3, pc, r3
    16d8:	b	176c <afpacket_daq_start+0x498>
    16dc:	bl	a84 <__errno_location@plt>
    16e0:	ldr	r0, [r0]
    16e4:	bl	a30 <strerror@plt>
    16e8:	ldr	r2, [pc, #188]	; 17ac <afpacket_daq_start+0x4d8>
    16ec:	mov	r3, r0
    16f0:	add	r0, r8, #148	; 0x94
    16f4:	add	r2, pc, r2
    16f8:	b	176c <afpacket_daq_start+0x498>
    16fc:	bl	a84 <__errno_location@plt>
    1700:	ldr	r0, [r0]
    1704:	bl	a30 <strerror@plt>
    1708:	ldr	r2, [pc, #160]	; 17b0 <afpacket_daq_start+0x4dc>
    170c:	mov	r3, r0
    1710:	add	r0, r8, #148	; 0x94
    1714:	add	r2, pc, r2
    1718:	b	176c <afpacket_daq_start+0x498>
    171c:	ldr	r5, [fp, #-52]	; 0xffffffcc
    1720:	bl	a84 <__errno_location@plt>
    1724:	ldr	r0, [r0]
    1728:	bl	a30 <strerror@plt>
    172c:	str	r0, [sp]
    1730:	add	r0, r8, #148	; 0x94
    1734:	mov	r1, #256	; 0x100
    1738:	mov	r3, r5
    173c:	ldr	r2, [pc, #112]	; 17b4 <afpacket_daq_start+0x4e0>
    1740:	add	r2, pc, r2
    1744:	b	1770 <afpacket_daq_start+0x49c>
    1748:	bl	a84 <__errno_location@plt>
    174c:	ldr	r0, [r0]
    1750:	bl	a30 <strerror@plt>
    1754:	str	r0, [sp]
    1758:	add	r0, r8, #148	; 0x94
    175c:	ldr	r2, [pc, #92]	; 17c0 <afpacket_daq_start+0x4ec>
    1760:	ldr	r3, [pc, #92]	; 17c4 <afpacket_daq_start+0x4f0>
    1764:	add	r2, pc, r2
    1768:	add	r3, pc, r3
    176c:	mov	r1, #256	; 0x100
    1770:	bl	a90 <snprintf@plt>
    1774:	mvn	r0, #0
    1778:	sub	sp, fp, #48	; 0x30
    177c:	vpop	{d8-d9}
    1780:	add	sp, sp, #4
    1784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1788:	.word	0x00001256
    178c:	.word	0x00001260
    1790:	.word	0x00001240
    1794:	.word	0x0000117d
    1798:	.word	0x0000118c
    179c:	.word	0x00001167
    17a0:	.word	0x00001154
    17a4:	.word	0x00001177
    17a8:	.word	0x0000112c
    17ac:	.word	0x000011c3
    17b0:	.word	0x000011d2
    17b4:	.word	0x000011d8
    17b8:	.word	0x000014d0
    17bc:	.word	0x000014cd
    17c0:	.word	0x00001359
    17c4:	.word	0x00001375
    17c8:	.word	0xe320f000
    17cc:	.word	0xe320f000

000017d0 <afpacket_daq_acquire>:
    17d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    17d4:	add	fp, sp, #28
    17d8:	sub	sp, sp, #372	; 0x174
    17dc:	mov	ip, r0
    17e0:	add	r0, sp, #60	; 0x3c
    17e4:	str	r1, [sp, #24]
    17e8:	mov	sl, r2
    17ec:	add	r1, r0, #6
    17f0:	add	r0, r0, #4
    17f4:	str	ip, [sp, #48]	; 0x30
    17f8:	str	r0, [sp, #16]
    17fc:	add	r0, ip, #88	; 0x58
    1800:	str	r1, [sp, #12]
    1804:	str	r0, [sp, #28]
    1808:	add	r0, ip, #64	; 0x40
    180c:	str	r0, [sp, #32]
    1810:	add	r0, ip, #72	; 0x48
    1814:	str	r0, [sp, #20]
    1818:	sub	r0, fp, #84	; 0x54
    181c:	add	r0, r0, #24
    1820:	str	r0, [sp, #36]	; 0x24
    1824:	mov	r0, #0
    1828:	str	r0, [sp, #52]	; 0x34
    182c:	ldr	r5, [ip, #24]
    1830:	cmp	r5, #0
    1834:	beq	1af0 <afpacket_daq_acquire+0x320>
    1838:	mov	r9, #0
    183c:	mov	r0, #0
    1840:	str	r0, [sp, #40]	; 0x28
    1844:	ldr	r0, [ip, #40]	; 0x28
    1848:	cmp	r0, #0
    184c:	bne	1be8 <afpacket_daq_acquire+0x418>
    1850:	ldr	r0, [r5, #8]
    1854:	cmp	r0, #1
    1858:	bne	1ae0 <afpacket_daq_acquire+0x310>
    185c:	ldr	r0, [r5, #48]	; 0x30
    1860:	ldr	r6, [r0, #4]
    1864:	ldr	r1, [r6]
    1868:	tst	r1, #1
    186c:	beq	1ae0 <afpacket_daq_acquire+0x310>
    1870:	ldr	r2, [r6, #20]
    1874:	movw	r4, #19923	; 0x4dd3
    1878:	ldrh	r0, [r6, #12]
    187c:	ldr	r7, [r6, #8]
    1880:	movt	r4, #4194	; 0x1062
    1884:	umull	r2, r4, r2, r4
    1888:	add	r3, r7, r0
    188c:	ldr	r2, [r5, #28]
    1890:	cmp	r3, r2
    1894:	bhi	1bf4 <afpacket_daq_acquire+0x424>
    1898:	ldrh	r2, [r6, #24]
    189c:	str	r9, [sp, #44]	; 0x2c
    18a0:	mov	r9, sl
    18a4:	ldr	r8, [r6, #4]
    18a8:	ldr	sl, [r6, #16]
    18ac:	add	r0, r6, r0
    18b0:	cmp	r2, #0
    18b4:	beq	18c4 <afpacket_daq_acquire+0xf4>
    18b8:	cmp	r7, #12
    18bc:	bcs	18d4 <afpacket_daq_acquire+0x104>
    18c0:	b	190c <afpacket_daq_acquire+0x13c>
    18c4:	tst	r1, #16
    18c8:	beq	190c <afpacket_daq_acquire+0x13c>
    18cc:	cmp	r7, #11
    18d0:	bls	190c <afpacket_daq_acquire+0x13c>
    18d4:	ldr	r1, [r0, #8]
    18d8:	vld1.8	{d16}, [r0]
    18dc:	mov	r2, #129	; 0x81
    18e0:	add	r8, r8, #4
    18e4:	add	r7, r7, #4
    18e8:	strh	r2, [r0, #8]
    18ec:	str	r1, [r0, #4]
    18f0:	sub	r1, r0, #4
    18f4:	vst1.8	{d16}, [r1]
    18f8:	str	r1, [sp, #56]	; 0x38
    18fc:	ldrh	r1, [r6, #24]
    1900:	rev16	r1, r1
    1904:	strh	r1, [r0, #10]
    1908:	b	1910 <afpacket_daq_acquire+0x140>
    190c:	str	r0, [sp, #56]	; 0x38
    1910:	ldr	r0, [ip, #36]	; 0x24
    1914:	cmp	r0, #0
    1918:	beq	1938 <afpacket_daq_acquire+0x168>
    191c:	ldr	r1, [sp, #56]	; 0x38
    1920:	mov	r2, r8
    1924:	mov	r3, r7
    1928:	bl	acc <sfbpf_filter@plt>
    192c:	ldr	ip, [sp, #48]	; 0x30
    1930:	cmp	r0, #0
    1934:	beq	1a24 <afpacket_daq_acquire+0x254>
    1938:	lsr	r0, r4, #6
    193c:	sub	r1, fp, #80	; 0x50
    1940:	str	sl, [fp, #-84]	; 0xffffffac
    1944:	mov	sl, r9
    1948:	stm	r1, {r0, r7, r8}
    194c:	mov	r8, r5
    1950:	ldr	r0, [r5, #88]	; 0x58
    1954:	str	r0, [fp, #-68]	; 0xffffffbc
    1958:	ldr	r0, [r8, #92]!	; 0x5c
    195c:	cmp	r0, #0
    1960:	ldrne	r0, [r0, #88]	; 0x58
    1964:	add	r1, pc, #820	; 0x334
    1968:	vld1.64	{d16-d17}, [r1 :128]
    196c:	mvneq	r0, #0
    1970:	cmp	r9, #0
    1974:	str	r0, [fp, #-64]	; 0xffffffc0
    1978:	ldr	r0, [sp, #36]	; 0x24
    197c:	vst1.32	{d16-d17}, [r0]
    1980:	mov	r0, #0
    1984:	strh	r0, [fp, #-36]	; 0xffffffdc
    1988:	str	r0, [fp, #-44]	; 0xffffffd4
    198c:	beq	19fc <afpacket_daq_acquire+0x22c>
    1990:	ldr	r0, [fp, #8]
    1994:	ldr	r2, [sp, #56]	; 0x38
    1998:	sub	r1, fp, #84	; 0x54
    199c:	blx	sl
    19a0:	ldr	r1, [sp, #28]
    19a4:	cmp	r0, #6
    19a8:	ldr	ip, [sp, #48]	; 0x30
    19ac:	mov	r9, #1
    19b0:	movwhi	r0, #0
    19b4:	ldr	r2, [r1, r0, lsl #3]!
    19b8:	adds	r2, r2, #1
    19bc:	str	r2, [r1]
    19c0:	ldr	r2, [r1, #4]
    19c4:	adc	r2, r2, #0
    19c8:	str	r2, [r1, #4]
    19cc:	ldr	r1, [sp, #32]
    19d0:	ldrd	r2, [r1]
    19d4:	adds	r2, r2, #1
    19d8:	adc	r3, r3, #0
    19dc:	strd	r2, [r1]
    19e0:	ldr	r1, [sp, #52]	; 0x34
    19e4:	add	r1, r1, #1
    19e8:	str	r1, [sp, #52]	; 0x34
    19ec:	mov	r1, #45	; 0x2d
    19f0:	tst	r9, r1, lsr r0
    19f4:	bne	1a4c <afpacket_daq_acquire+0x27c>
    19f8:	b	1ac4 <afpacket_daq_acquire+0x2f4>
    19fc:	ldr	r2, [sp, #32]
    1a00:	mov	r9, #1
    1a04:	ldrd	r0, [r2]
    1a08:	adds	r0, r0, #1
    1a0c:	adc	r1, r1, #0
    1a10:	strd	r0, [r2]
    1a14:	ldr	r0, [sp, #52]	; 0x34
    1a18:	add	r0, r0, #1
    1a1c:	str	r0, [sp, #52]	; 0x34
    1a20:	b	1a4c <afpacket_daq_acquire+0x27c>
    1a24:	ldr	r2, [sp, #20]
    1a28:	mov	sl, r9
    1a2c:	add	r8, r5, #92	; 0x5c
    1a30:	ldrd	r0, [r2]
    1a34:	adds	r0, r0, #1
    1a38:	adc	r1, r1, #0
    1a3c:	strd	r0, [r2]
    1a40:	mov	r0, #1
    1a44:	ldr	r9, [sp, #44]	; 0x2c
    1a48:	str	r0, [sp, #40]	; 0x28
    1a4c:	ldr	r0, [r8]
    1a50:	cmp	r0, #0
    1a54:	beq	1ac4 <afpacket_daq_acquire+0x2f4>
    1a58:	ldr	r4, [r0, #80]	; 0x50
    1a5c:	ldr	r1, [r4, #4]
    1a60:	ldr	r2, [r1]
    1a64:	cmp	r2, #0
    1a68:	bne	1ac4 <afpacket_daq_acquire+0x2f4>
    1a6c:	ldr	r0, [r0, #12]
    1a70:	mov	r2, r7
    1a74:	add	r0, r0, #15
    1a78:	bic	r0, r0, #15
    1a7c:	add	r0, r1, r0
    1a80:	ldr	r1, [sp, #56]	; 0x38
    1a84:	bl	9c4 <memcpy@plt>
    1a88:	ldr	r0, [r4, #4]
    1a8c:	mov	r1, #1
    1a90:	mov	r2, #0
    1a94:	mov	r3, #0
    1a98:	str	r7, [r0, #4]
    1a9c:	ldr	r0, [r4, #4]
    1aa0:	str	r1, [r0]
    1aa4:	mov	r1, #0
    1aa8:	ldr	r0, [r8]
    1aac:	ldr	r0, [r0, #4]
    1ab0:	bl	af0 <send@plt>
    1ab4:	ldr	ip, [sp, #48]	; 0x30
    1ab8:	ldr	r0, [r4]
    1abc:	ldr	r1, [r8]
    1ac0:	str	r0, [r1, #80]	; 0x50
    1ac4:	ldr	r0, [r5, #8]
    1ac8:	cmp	r0, #1
    1acc:	moveq	r0, #0
    1ad0:	streq	r0, [r6]
    1ad4:	ldr	r0, [r5, #48]	; 0x30
    1ad8:	ldr	r0, [r0]
    1adc:	str	r0, [r5, #48]	; 0x30
    1ae0:	ldr	r5, [r5]
    1ae4:	cmp	r5, #0
    1ae8:	bne	1844 <afpacket_daq_acquire+0x74>
    1aec:	b	1afc <afpacket_daq_acquire+0x32c>
    1af0:	mov	r0, #0
    1af4:	mov	r9, #0
    1af8:	str	r0, [sp, #40]	; 0x28
    1afc:	ldr	r0, [sp, #40]	; 0x28
    1b00:	movw	r4, #8248	; 0x2038
    1b04:	mov	r3, #1
    1b08:	orrs	r0, r9, r0
    1b0c:	beq	1b30 <afpacket_daq_acquire+0x360>
    1b10:	ldr	r0, [sp, #24]
    1b14:	cmp	r0, #1
    1b18:	blt	182c <afpacket_daq_acquire+0x5c>
    1b1c:	ldr	r0, [sp, #24]
    1b20:	ldr	r1, [sp, #52]	; 0x34
    1b24:	cmp	r1, r0
    1b28:	blt	182c <afpacket_daq_acquire+0x5c>
    1b2c:	b	1c2c <afpacket_daq_acquire+0x45c>
    1b30:	ldr	r0, [ip, #24]
    1b34:	cmp	r0, #0
    1b38:	beq	1b58 <afpacket_daq_acquire+0x388>
    1b3c:	ldr	r1, [sp, #16]
    1b40:	ldr	r2, [r0, #4]
    1b44:	stmda	r1, {r2, r3}
    1b48:	add	r1, r1, #8
    1b4c:	ldr	r0, [r0]
    1b50:	cmp	r0, #0
    1b54:	bne	1b40 <afpacket_daq_acquire+0x370>
    1b58:	ldr	r2, [ip, #12]
    1b5c:	ldr	r1, [ip, #28]
    1b60:	add	r0, sp, #60	; 0x3c
    1b64:	bl	9dc <poll@plt>
    1b68:	cmn	r0, #1
    1b6c:	ble	1bb0 <afpacket_daq_acquire+0x3e0>
    1b70:	cmp	r0, #0
    1b74:	beq	1c2c <afpacket_daq_acquire+0x45c>
    1b78:	ldr	ip, [sp, #48]	; 0x30
    1b7c:	ldr	r0, [ip, #28]
    1b80:	cmp	r0, #0
    1b84:	beq	1b10 <afpacket_daq_acquire+0x340>
    1b88:	ldr	r2, [sp, #12]
    1b8c:	mov	r1, #0
    1b90:	ldrh	r3, [r2]
    1b94:	tst	r3, r4
    1b98:	bne	1c0c <afpacket_daq_acquire+0x43c>
    1b9c:	add	r1, r1, #1
    1ba0:	add	r2, r2, #8
    1ba4:	cmp	r1, r0
    1ba8:	bcc	1b90 <afpacket_daq_acquire+0x3c0>
    1bac:	b	1b10 <afpacket_daq_acquire+0x340>
    1bb0:	bl	a84 <__errno_location@plt>
    1bb4:	mov	r7, r0
    1bb8:	ldr	r0, [r0]
    1bbc:	ldr	ip, [sp, #48]	; 0x30
    1bc0:	cmp	r0, #4
    1bc4:	beq	1b10 <afpacket_daq_acquire+0x340>
    1bc8:	mov	r4, ip
    1bcc:	bl	a30 <strerror@plt>
    1bd0:	ldr	r1, [r7]
    1bd4:	stm	sp, {r0, r1}
    1bd8:	add	r0, r4, #148	; 0x94
    1bdc:	ldr	r2, [pc, #208]	; 1cb4 <afpacket_daq_acquire+0x4e4>
    1be0:	add	r2, pc, r2
    1be4:	b	1c74 <afpacket_daq_acquire+0x4a4>
    1be8:	mov	r5, #0
    1bec:	str	r5, [ip, #40]	; 0x28
    1bf0:	b	1c88 <afpacket_daq_acquire+0x4b8>
    1bf4:	stm	sp, {r0, r7}
    1bf8:	str	r2, [sp, #8]
    1bfc:	add	r0, ip, #148	; 0x94
    1c00:	ldr	r2, [pc, #168]	; 1cb0 <afpacket_daq_acquire+0x4e0>
    1c04:	add	r2, pc, r2
    1c08:	b	1c74 <afpacket_daq_acquire+0x4a4>
    1c0c:	sxth	r0, r3
    1c10:	movw	r1, #8208	; 0x2010
    1c14:	tst	r0, r1
    1c18:	beq	1c34 <afpacket_daq_acquire+0x464>
    1c1c:	ldr	r2, [pc, #148]	; 1cb8 <afpacket_daq_acquire+0x4e8>
    1c20:	add	r0, ip, #148	; 0x94
    1c24:	add	r2, pc, r2
    1c28:	b	1c74 <afpacket_daq_acquire+0x4a4>
    1c2c:	mov	r5, #0
    1c30:	b	1c88 <afpacket_daq_acquire+0x4b8>
    1c34:	tst	r0, #8
    1c38:	bne	1c68 <afpacket_daq_acquire+0x498>
    1c3c:	mvn	r5, #0
    1c40:	tst	r0, #32
    1c44:	beq	1c88 <afpacket_daq_acquire+0x4b8>
    1c48:	ldr	r2, [pc, #116]	; 1cc4 <afpacket_daq_acquire+0x4f4>
    1c4c:	ldr	r3, [pc, #116]	; 1cc8 <afpacket_daq_acquire+0x4f8>
    1c50:	add	r0, ip, #148	; 0x94
    1c54:	mov	r1, #256	; 0x100
    1c58:	add	r2, pc, r2
    1c5c:	add	r3, pc, r3
    1c60:	bl	a90 <snprintf@plt>
    1c64:	b	1c88 <afpacket_daq_acquire+0x4b8>
    1c68:	ldr	r2, [pc, #80]	; 1cc0 <afpacket_daq_acquire+0x4f0>
    1c6c:	add	r0, ip, #148	; 0x94
    1c70:	add	r2, pc, r2
    1c74:	ldr	r3, [pc, #64]	; 1cbc <afpacket_daq_acquire+0x4ec>
    1c78:	mov	r1, #256	; 0x100
    1c7c:	add	r3, pc, r3
    1c80:	bl	a90 <snprintf@plt>
    1c84:	mvn	r5, #0
    1c88:	mov	r0, r5
    1c8c:	sub	sp, fp, #28
    1c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1c94:	nop	{0}
    1c98:	nop	{0}
    1c9c:	nop	{0}
    1ca0:	.word	0xffffffff
    1ca4:	.word	0xffffffff
	...
    1cb0:	.word	0x00000f3f
    1cb4:	.word	0x00000fb1
    1cb8:	.word	0x00000f86
    1cbc:	.word	0x00000eb2
    1cc0:	.word	0x00000f59
    1cc4:	.word	0x00000fa4
    1cc8:	.word	0x00000ed2

00001ccc <afpacket_daq_inject>:
    1ccc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1cd0:	add	fp, sp, #24
    1cd4:	sub	sp, sp, #8
    1cd8:	ldr	r7, [r0, #24]
    1cdc:	mvn	r5, #0
    1ce0:	cmp	r7, #0
    1ce4:	beq	1de4 <afpacket_daq_inject+0x118>
    1ce8:	mov	r4, r0
    1cec:	ldr	r0, [fp, #8]
    1cf0:	ldr	r1, [r1, #16]
    1cf4:	mov	r8, r3
    1cf8:	ldr	r3, [r7, #88]	; 0x58
    1cfc:	cmp	r3, r1
    1d00:	beq	1d14 <afpacket_daq_inject+0x48>
    1d04:	ldr	r7, [r7]
    1d08:	cmp	r7, #0
    1d0c:	bne	1cf8 <afpacket_daq_inject+0x2c>
    1d10:	b	1de4 <afpacket_daq_inject+0x118>
    1d14:	cmp	r0, #0
    1d18:	bne	1d28 <afpacket_daq_inject+0x5c>
    1d1c:	ldr	r7, [r7, #92]	; 0x5c
    1d20:	cmp	r7, #0
    1d24:	beq	1de4 <afpacket_daq_inject+0x118>
    1d28:	ldr	r6, [r7, #80]	; 0x50
    1d2c:	mov	r5, #0
    1d30:	ldr	r0, [r6, #4]
    1d34:	ldr	r1, [r0]
    1d38:	cmp	r1, #0
    1d3c:	bne	1de4 <afpacket_daq_inject+0x118>
    1d40:	ldr	r1, [r7, #12]
    1d44:	add	r1, r1, #15
    1d48:	bic	r1, r1, #15
    1d4c:	add	r0, r0, r1
    1d50:	mov	r1, r2
    1d54:	mov	r2, r8
    1d58:	bl	9c4 <memcpy@plt>
    1d5c:	ldr	r0, [r6, #4]
    1d60:	mov	r1, #1
    1d64:	mov	r2, #0
    1d68:	mov	r3, #0
    1d6c:	mov	r5, #0
    1d70:	str	r8, [r0, #4]
    1d74:	ldr	r0, [r6, #4]
    1d78:	str	r1, [r0]
    1d7c:	mov	r1, #0
    1d80:	ldr	r0, [r6]
    1d84:	str	r0, [r7, #80]	; 0x50
    1d88:	ldr	r0, [r7, #4]
    1d8c:	bl	af0 <send@plt>
    1d90:	cmn	r0, #1
    1d94:	ble	1dac <afpacket_daq_inject+0xe0>
    1d98:	ldrd	r0, [r4, #80]	; 0x50
    1d9c:	adds	r0, r0, #1
    1da0:	adc	r1, r1, #0
    1da4:	strd	r0, [r4, #80]	; 0x50
    1da8:	b	1de4 <afpacket_daq_inject+0x118>
    1dac:	bl	a84 <__errno_location@plt>
    1db0:	mov	r5, r0
    1db4:	ldr	r0, [r0]
    1db8:	bl	a30 <strerror@plt>
    1dbc:	ldr	r1, [r5]
    1dc0:	stm	sp, {r0, r1}
    1dc4:	add	r0, r4, #148	; 0x94
    1dc8:	mov	r1, #256	; 0x100
    1dcc:	ldr	r2, [pc, #28]	; 1df0 <afpacket_daq_inject+0x124>
    1dd0:	ldr	r3, [pc, #28]	; 1df4 <afpacket_daq_inject+0x128>
    1dd4:	add	r2, pc, r2
    1dd8:	add	r3, pc, r3
    1ddc:	bl	a90 <snprintf@plt>
    1de0:	mvn	r5, #0
    1de4:	mov	r0, r5
    1de8:	sub	sp, fp, #24
    1dec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1df0:	.word	0x00000e57
    1df4:	.word	0x00000e75

00001df8 <afpacket_daq_breakloop>:
    1df8:	mov	r1, #1
    1dfc:	str	r1, [r0, #40]	; 0x28
    1e00:	mov	r0, #0
    1e04:	bx	lr

00001e08 <afpacket_daq_stop>:
    1e08:	cmp	r0, #0
    1e0c:	beq	1e50 <afpacket_daq_stop+0x48>
    1e10:	push	{r4, sl, fp, lr}
    1e14:	add	fp, sp, #8
    1e18:	mov	r4, r0
    1e1c:	bl	2100 <update_hw_stats>
    1e20:	b	1e30 <afpacket_daq_stop+0x28>
    1e24:	ldr	r1, [r0]
    1e28:	str	r1, [r4, #24]
    1e2c:	bl	201c <destroy_instance>
    1e30:	ldr	r0, [r4, #24]
    1e34:	cmp	r0, #0
    1e38:	bne	1e24 <afpacket_daq_stop+0x1c>
    1e3c:	add	r0, r4, #32
    1e40:	bl	a00 <sfbpf_freecode@plt>
    1e44:	mov	r0, #3
    1e48:	str	r0, [r4, #144]	; 0x90
    1e4c:	pop	{r4, sl, fp, lr}
    1e50:	mov	r0, #0
    1e54:	bx	lr

00001e58 <afpacket_daq_shutdown>:
    1e58:	push	{r4, sl, fp, lr}
    1e5c:	add	fp, sp, #8
    1e60:	mov	r4, r0
    1e64:	cmp	r0, #0
    1e68:	beq	1ea0 <afpacket_daq_shutdown+0x48>
    1e6c:	mov	r0, r4
    1e70:	bl	2100 <update_hw_stats>
    1e74:	b	1e84 <afpacket_daq_shutdown+0x2c>
    1e78:	ldr	r1, [r0]
    1e7c:	str	r1, [r4, #24]
    1e80:	bl	201c <destroy_instance>
    1e84:	ldr	r0, [r4, #24]
    1e88:	cmp	r0, #0
    1e8c:	bne	1e78 <afpacket_daq_shutdown+0x20>
    1e90:	add	r0, r4, #32
    1e94:	bl	a00 <sfbpf_freecode@plt>
    1e98:	mov	r0, #3
    1e9c:	str	r0, [r4, #144]	; 0x90
    1ea0:	ldr	r0, [r4]
    1ea4:	cmp	r0, #0
    1ea8:	beq	1eb0 <afpacket_daq_shutdown+0x58>
    1eac:	bl	9b8 <free@plt>
    1eb0:	ldr	r0, [r4, #4]
    1eb4:	cmp	r0, #0
    1eb8:	beq	1ec0 <afpacket_daq_shutdown+0x68>
    1ebc:	bl	9b8 <free@plt>
    1ec0:	mov	r0, r4
    1ec4:	pop	{r4, sl, fp, lr}
    1ec8:	b	9b8 <free@plt>

00001ecc <afpacket_daq_check_status>:
    1ecc:	ldr	r0, [r0, #144]	; 0x90
    1ed0:	bx	lr

00001ed4 <afpacket_daq_get_stats>:
    1ed4:	push	{r4, r5, fp, lr}
    1ed8:	add	fp, sp, #8
    1edc:	mov	r4, r1
    1ee0:	mov	r5, r0
    1ee4:	bl	2100 <update_hw_stats>
    1ee8:	add	r1, r5, #48	; 0x30
    1eec:	mov	r0, r4
    1ef0:	mov	r2, #96	; 0x60
    1ef4:	bl	9c4 <memcpy@plt>
    1ef8:	mov	r0, #0
    1efc:	pop	{r4, r5, fp, pc}

00001f00 <afpacket_daq_reset_stats>:
    1f00:	push	{r4, r5, r6, sl, fp, lr}
    1f04:	add	fp, sp, #16
    1f08:	sub	sp, sp, #16
    1f0c:	mov	r1, #8
    1f10:	vmov.i32	q8, #0	; 0x00000000
    1f14:	str	r1, [sp, #4]
    1f18:	add	r1, r0, #128	; 0x80
    1f1c:	vst1.64	{d16-d17}, [r1]
    1f20:	add	r1, r0, #112	; 0x70
    1f24:	vst1.64	{d16-d17}, [r1]
    1f28:	add	r1, r0, #96	; 0x60
    1f2c:	vst1.64	{d16-d17}, [r1]
    1f30:	add	r1, r0, #80	; 0x50
    1f34:	vst1.64	{d16-d17}, [r1]
    1f38:	add	r1, r0, #64	; 0x40
    1f3c:	vst1.64	{d16-d17}, [r1]
    1f40:	add	r1, r0, #48	; 0x30
    1f44:	vst1.64	{d16-d17}, [r1]
    1f48:	ldr	r5, [r0, #24]
    1f4c:	cmp	r5, #0
    1f50:	beq	1f80 <afpacket_daq_reset_stats+0x80>
    1f54:	add	r6, sp, #4
    1f58:	add	r4, sp, #8
    1f5c:	ldr	r0, [r5, #4]
    1f60:	movw	r1, #263	; 0x107
    1f64:	mov	r2, #6
    1f68:	mov	r3, r4
    1f6c:	str	r6, [sp]
    1f70:	bl	9e8 <getsockopt@plt>
    1f74:	ldr	r5, [r5]
    1f78:	cmp	r5, #0
    1f7c:	bne	1f5c <afpacket_daq_reset_stats+0x5c>
    1f80:	sub	sp, fp, #16
    1f84:	pop	{r4, r5, r6, sl, fp, pc}

00001f88 <afpacket_daq_get_snaplen>:
    1f88:	ldr	r0, [r0, #8]
    1f8c:	bx	lr

00001f90 <afpacket_daq_get_capabilities>:
    1f90:	movw	r0, #487	; 0x1e7
    1f94:	bx	lr

00001f98 <afpacket_daq_get_datalink_type>:
    1f98:	mov	r0, #1
    1f9c:	bx	lr

00001fa0 <afpacket_daq_get_errbuf>:
    1fa0:	add	r0, r0, #148	; 0x94
    1fa4:	bx	lr

00001fa8 <afpacket_daq_set_errbuf>:
    1fa8:	cmp	r1, #0
    1fac:	bxeq	lr
    1fb0:	ldr	r2, [pc, #16]	; 1fc8 <afpacket_daq_set_errbuf+0x20>
    1fb4:	mov	r3, r1
    1fb8:	add	r0, r0, #148	; 0x94
    1fbc:	mov	r1, #256	; 0x100
    1fc0:	add	r2, pc, r2
    1fc4:	b	a90 <snprintf@plt>
    1fc8:	.word	0x00000884

00001fcc <afpacket_daq_get_device_index>:
    1fcc:	push	{r4, r5, r6, sl, fp, lr}
    1fd0:	add	fp, sp, #16
    1fd4:	ldr	r6, [r0, #24]
    1fd8:	mvn	r4, #2
    1fdc:	cmp	r6, #0
    1fe0:	beq	2008 <afpacket_daq_get_device_index+0x3c>
    1fe4:	mov	r5, r1
    1fe8:	ldr	r1, [r6, #84]	; 0x54
    1fec:	mov	r0, r5
    1ff0:	bl	97c <strcmp@plt>
    1ff4:	cmp	r0, #0
    1ff8:	beq	2010 <afpacket_daq_get_device_index+0x44>
    1ffc:	ldr	r6, [r6]
    2000:	cmp	r6, #0
    2004:	bne	1fe8 <afpacket_daq_get_device_index+0x1c>
    2008:	mov	r0, r4
    200c:	pop	{r4, r5, r6, sl, fp, pc}
    2010:	ldr	r4, [r6, #88]	; 0x58
    2014:	mov	r0, r4
    2018:	pop	{r4, r5, r6, sl, fp, pc}

0000201c <destroy_instance>:
    201c:	cmp	r0, #0
    2020:	bxeq	lr
    2024:	push	{r4, r5, r6, sl, fp, lr}
    2028:	add	fp, sp, #16
    202c:	sub	sp, sp, #24
    2030:	mov	r4, r0
    2034:	ldr	r0, [r0, #4]
    2038:	cmn	r0, #1
    203c:	beq	20dc <destroy_instance+0xc0>
    2040:	ldr	r0, [r4, #44]	; 0x2c
    2044:	cmp	r0, #0
    2048:	beq	2058 <destroy_instance+0x3c>
    204c:	bl	9b8 <free@plt>
    2050:	mov	r0, #0
    2054:	str	r0, [r4, #44]	; 0x2c
    2058:	ldr	r0, [r4, #76]	; 0x4c
    205c:	cmp	r0, #0
    2060:	beq	2070 <destroy_instance+0x54>
    2064:	bl	9b8 <free@plt>
    2068:	mov	r0, #0
    206c:	str	r0, [r4, #76]	; 0x4c
    2070:	ldr	r0, [r4, #16]
    2074:	cmn	r0, #1
    2078:	beq	2094 <destroy_instance+0x78>
    207c:	ldr	r1, [r4, #36]	; 0x24
    2080:	ldr	r2, [r4, #68]	; 0x44
    2084:	add	r1, r2, r1
    2088:	bl	ac0 <munmap@plt>
    208c:	mvn	r0, #0
    2090:	str	r0, [r4, #16]
    2094:	add	r5, sp, #8
    2098:	vmov.i32	q8, #0	; 0x00000000
    209c:	mov	r6, #16
    20a0:	movw	r1, #263	; 0x107
    20a4:	mov	r2, #5
    20a8:	vst1.64	{d16-d17}, [r5]
    20ac:	mov	r3, r5
    20b0:	ldr	r0, [r4, #4]
    20b4:	str	r6, [sp]
    20b8:	bl	994 <setsockopt@plt>
    20bc:	ldr	r0, [r4, #4]
    20c0:	movw	r1, #263	; 0x107
    20c4:	mov	r2, #13
    20c8:	mov	r3, r5
    20cc:	str	r6, [sp]
    20d0:	bl	994 <setsockopt@plt>
    20d4:	ldr	r0, [r4, #4]
    20d8:	bl	ae4 <close@plt>
    20dc:	ldr	r0, [r4, #84]	; 0x54
    20e0:	cmp	r0, #0
    20e4:	beq	20ec <destroy_instance+0xd0>
    20e8:	bl	9b8 <free@plt>
    20ec:	mov	r0, r4
    20f0:	bl	9b8 <free@plt>
    20f4:	sub	sp, fp, #16
    20f8:	pop	{r4, r5, r6, sl, fp, lr}
    20fc:	bx	lr

00002100 <update_hw_stats>:
    2100:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2104:	add	fp, sp, #28
    2108:	sub	sp, sp, #20
    210c:	mov	r1, #8
    2110:	str	r1, [sp, #4]
    2114:	ldr	r1, [r0, #144]	; 0x90
    2118:	cmp	r1, #2
    211c:	bne	21e0 <update_hw_stats+0xe0>
    2120:	ldr	r6, [r0, #24]
    2124:	cmp	r6, #0
    2128:	beq	21e0 <update_hw_stats+0xe0>
    212c:	add	r7, r0, #48	; 0x30
    2130:	mov	r2, #8
    2134:	add	r4, sp, #8
    2138:	add	r8, sp, #4
    213c:	b	2144 <update_hw_stats+0x44>
    2140:	ldr	r2, [sp, #4]
    2144:	mov	r0, r4
    2148:	mov	r1, #0
    214c:	bl	aa8 <memset@plt>
    2150:	ldr	r0, [r6, #4]
    2154:	movw	r1, #263	; 0x107
    2158:	mov	r2, #6
    215c:	mov	r3, r4
    2160:	str	r8, [sp]
    2164:	bl	9e8 <getsockopt@plt>
    2168:	cmp	r0, #0
    216c:	blt	21a0 <update_hw_stats+0xa0>
    2170:	ldr	r0, [sp, #8]
    2174:	ldr	r1, [sp, #12]
    2178:	vld1.64	{d16-d17}, [r7]
    217c:	sub	r0, r0, r1
    2180:	vmov.32	d18[0], r0
    2184:	vmov.32	d18[1], r1
    2188:	vaddw.u32	q8, q8, d18
    218c:	vst1.64	{d16-d17}, [r7]
    2190:	ldr	r6, [r6]
    2194:	cmp	r6, #0
    2198:	bne	2140 <update_hw_stats+0x40>
    219c:	b	21e0 <update_hw_stats+0xe0>
    21a0:	ldr	r9, [r6, #84]	; 0x54
    21a4:	ldr	r0, [pc, #60]	; 21e8 <update_hw_stats+0xe8>
    21a8:	ldr	r0, [pc, r0]
    21ac:	ldr	sl, [r0]
    21b0:	bl	a84 <__errno_location@plt>
    21b4:	ldr	r5, [r0]
    21b8:	mov	r0, r5
    21bc:	bl	a30 <strerror@plt>
    21c0:	str	r0, [sp]
    21c4:	mov	r0, sl
    21c8:	mov	r2, r9
    21cc:	mov	r3, r5
    21d0:	ldr	r1, [pc, #20]	; 21ec <update_hw_stats+0xec>
    21d4:	add	r1, pc, r1
    21d8:	bl	a6c <fprintf@plt>
    21dc:	b	2190 <update_hw_stats+0x90>
    21e0:	sub	sp, fp, #28
    21e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    21e8:	.word	0x00010eec
    21ec:	.word	0x00000580

000021f0 <create_ring>:
    21f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    21f4:	add	fp, sp, #28
    21f8:	sub	sp, sp, #4
    21fc:	mov	r8, r3
    2200:	mov	r6, r2
    2204:	mov	r7, r1
    2208:	mov	r4, r0
    220c:	mov	r9, #3
    2210:	bl	a78 <getpagesize@plt>
    2214:	mov	r5, r0
    2218:	ldr	r1, [r7, #12]
    221c:	ldr	r0, [r4, #8]
    2220:	mov	sl, r9
    2224:	add	r1, r1, #15
    2228:	bic	r1, r1, #15
    222c:	add	r1, r1, #49	; 0x31
    2230:	orr	r1, r1, #5
    2234:	add	r0, r1, r0
    2238:	lsl	r1, r5, r9
    223c:	bic	r0, r0, #15
    2240:	str	r0, [r6, #8]
    2244:	mov	r2, r1
    2248:	lsl	r1, r1, #1
    224c:	cmp	r2, r0
    2250:	bcc	2244 <create_ring+0x54>
    2254:	str	r2, [r6]
    2258:	udiv	r1, r2, r0
    225c:	ldr	r2, [r4, #16]
    2260:	udiv	r0, r2, r0
    2264:	udiv	r0, r0, r1
    2268:	str	r0, [r6, #4]
    226c:	mul	r0, r0, r1
    2270:	str	r0, [r6, #12]
    2274:	ldr	r0, [r4, #20]
    2278:	cmp	r0, #0
    227c:	beq	22d0 <create_ring+0xe0>
    2280:	ldr	r0, [pc, #288]	; 23a8 <create_ring+0x1b8>
    2284:	add	r0, pc, r0
    2288:	bl	a18 <puts@plt>
    228c:	ldr	r1, [r6, #8]
    2290:	ldr	r0, [pc, #276]	; 23ac <create_ring+0x1bc>
    2294:	add	r0, pc, r0
    2298:	bl	9ac <printf@plt>
    229c:	ldr	r1, [r6, #12]
    22a0:	ldr	r0, [pc, #264]	; 23b0 <create_ring+0x1c0>
    22a4:	add	r0, pc, r0
    22a8:	bl	9ac <printf@plt>
    22ac:	ldr	r1, [r6]
    22b0:	ldr	r0, [pc, #252]	; 23b4 <create_ring+0x1c4>
    22b4:	mov	r2, sl
    22b8:	add	r0, pc, r0
    22bc:	bl	9ac <printf@plt>
    22c0:	ldr	r1, [r6, #4]
    22c4:	ldr	r0, [pc, #236]	; 23b8 <create_ring+0x1c8>
    22c8:	add	r0, pc, r0
    22cc:	bl	9ac <printf@plt>
    22d0:	ldr	r0, [r7, #4]
    22d4:	mov	r1, #16
    22d8:	mov	r2, r8
    22dc:	mov	r3, r6
    22e0:	str	r1, [sp]
    22e4:	movw	r1, #263	; 0x107
    22e8:	bl	994 <setsockopt@plt>
    22ec:	cmp	r0, #0
    22f0:	beq	2344 <create_ring+0x154>
    22f4:	bl	a84 <__errno_location@plt>
    22f8:	ldr	r0, [r0]
    22fc:	cmp	r0, #12
    2300:	bne	2374 <create_ring+0x184>
    2304:	ldr	r0, [r4, #20]
    2308:	cmp	r0, #0
    230c:	beq	2324 <create_ring+0x134>
    2310:	ldr	r1, [r7, #84]	; 0x54
    2314:	ldr	r0, [pc, #160]	; 23bc <create_ring+0x1cc>
    2318:	mov	r2, sl
    231c:	add	r0, pc, r0
    2320:	bl	9ac <printf@plt>
    2324:	sub	r9, sl, #1
    2328:	cmp	sl, #0
    232c:	bne	2218 <create_ring+0x28>
    2330:	ldr	r3, [r7, #84]	; 0x54
    2334:	ldr	r2, [pc, #132]	; 23c0 <create_ring+0x1d0>
    2338:	add	r0, r4, #148	; 0x94
    233c:	add	r2, pc, r2
    2340:	b	2390 <create_ring+0x1a0>
    2344:	ldm	r6, {r0, r1}
    2348:	mul	r2, r1, r0
    234c:	str	r2, [r6, #16]
    2350:	ldr	r0, [r4, #20]
    2354:	mov	r4, #0
    2358:	cmp	r0, #0
    235c:	beq	239c <create_ring+0x1ac>
    2360:	ldr	r0, [pc, #100]	; 23cc <create_ring+0x1dc>
    2364:	mov	r1, r8
    2368:	add	r0, pc, r0
    236c:	bl	9ac <printf@plt>
    2370:	b	239c <create_ring+0x1ac>
    2374:	bl	a30 <strerror@plt>
    2378:	str	r0, [sp]
    237c:	add	r0, r4, #148	; 0x94
    2380:	ldr	r2, [pc, #60]	; 23c4 <create_ring+0x1d4>
    2384:	ldr	r3, [pc, #60]	; 23c8 <create_ring+0x1d8>
    2388:	add	r2, pc, r2
    238c:	add	r3, pc, r3
    2390:	mov	r1, #256	; 0x100
    2394:	bl	a90 <snprintf@plt>
    2398:	mvn	r4, #0
    239c:	mov	r0, r4
    23a0:	sub	sp, fp, #28
    23a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    23a8:	.word	0x000009e4
    23ac:	.word	0x000007d6
    23b0:	.word	0x000007d8
    23b4:	.word	0x000007d6
    23b8:	.word	0x000007e3
    23bc:	.word	0x00000654
    23c0:	.word	0x000006ee
    23c4:	.word	0x00000630
    23c8:	.word	0x00000661
    23cc:	.word	0x00000691

000023d0 <set_up_ring>:
    23d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    23d4:	add	fp, sp, #24
    23d8:	sub	sp, sp, #8
    23dc:	ldr	r5, [r2, #12]
    23e0:	mov	r7, r1
    23e4:	mov	r6, r0
    23e8:	mov	r1, #8
    23ec:	mov	r4, r2
    23f0:	mov	r0, r5
    23f4:	bl	964 <calloc@plt>
    23f8:	cmp	r0, #0
    23fc:	str	r0, [r4, #24]
    2400:	beq	24d4 <set_up_ring+0x104>
    2404:	ldr	r7, [r4, #4]
    2408:	cmp	r7, #0
    240c:	beq	24b8 <set_up_ring+0xe8>
    2410:	ldr	r3, [r4]
    2414:	ldr	r2, [r4, #8]
    2418:	mov	ip, #0
    241c:	mov	lr, #0
    2420:	cmp	r2, r3
    2424:	bhi	24a4 <set_up_ring+0xd4>
    2428:	ldr	r0, [r4, #12]
    242c:	cmp	ip, r0
    2430:	bcs	24a0 <set_up_ring+0xd0>
    2434:	mul	r8, r3, lr
    2438:	lsl	r6, ip, #3
    243c:	mov	r5, #0
    2440:	ldr	r1, [r4, #20]
    2444:	ldr	r3, [r4, #24]
    2448:	mov	r0, r5
    244c:	add	r1, r1, r8
    2450:	mla	r1, r2, r5, r1
    2454:	add	r2, r3, r6
    2458:	add	r5, r5, #1
    245c:	str	r1, [r2, #4]
    2460:	ldr	r1, [r4, #24]
    2464:	add	r2, r1, r6
    2468:	add	r2, r2, #8
    246c:	str	r2, [r1, r6]
    2470:	ldr	r3, [r4]
    2474:	ldr	r2, [r4, #8]
    2478:	udiv	r1, r3, r2
    247c:	cmp	r5, r1
    2480:	bcs	2498 <set_up_ring+0xc8>
    2484:	ldr	r7, [r4, #12]
    2488:	add	r1, ip, r5
    248c:	add	r6, r6, #8
    2490:	cmp	r1, r7
    2494:	bcc	2440 <set_up_ring+0x70>
    2498:	add	r0, ip, r0
    249c:	add	ip, r0, #1
    24a0:	ldr	r7, [r4, #4]
    24a4:	add	lr, lr, #1
    24a8:	cmp	lr, r7
    24ac:	bcc	2420 <set_up_ring+0x50>
    24b0:	ldr	r5, [r4, #12]
    24b4:	ldr	r0, [r4, #24]
    24b8:	add	r1, r0, r5, lsl #3
    24bc:	str	r0, [r1, #-8]
    24c0:	ldr	r0, [r4, #24]
    24c4:	str	r0, [r4, #28]
    24c8:	mov	r0, #0
    24cc:	sub	sp, fp, #24
    24d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    24d4:	ldr	r0, [r7, #84]	; 0x54
    24d8:	mov	r1, #256	; 0x100
    24dc:	str	r0, [sp]
    24e0:	add	r0, r6, #148	; 0x94
    24e4:	ldr	r2, [pc, #24]	; 2504 <set_up_ring+0x134>
    24e8:	ldr	r3, [pc, #24]	; 2508 <set_up_ring+0x138>
    24ec:	add	r2, pc, r2
    24f0:	add	r3, pc, r3
    24f4:	bl	a90 <snprintf@plt>
    24f8:	mvn	r0, #1
    24fc:	sub	sp, fp, #24
    2500:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    2504:	.word	0x000005fc
    2508:	.word	0x00000632

Disassembly of section .fini:

0000250c <_fini>:
    250c:	push	{r3, lr}
    2510:	pop	{r3, pc}
