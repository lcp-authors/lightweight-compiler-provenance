
../repos/charybdis/extensions/.libs/ip_cloaking_3.0.so:     file format elf32-littlearm


Disassembly of section .init:

000006c4 <_init>:
 6c4:	push	{r3, lr}
 6c8:	bl	7a4 <call_weak_fn>
 6cc:	pop	{r3, pc}

Disassembly of section .plt:

000006d0 <.plt>:
 6d0:	push	{lr}		; (str lr, [sp, #-4]!)
 6d4:	ldr	lr, [pc, #4]	; 6e0 <.plt+0x10>
 6d8:	add	lr, pc, lr
 6dc:	ldr	pc, [lr, #8]!
 6e0:	.word	0x00011920

000006e4 <calloc@plt>:
 6e4:	add	ip, pc, #0, 12
 6e8:	add	ip, ip, #69632	; 0x11000
 6ec:	ldr	pc, [ip, #2336]!	; 0x920

000006f0 <strcmp@plt>:
 6f0:	add	ip, pc, #0, 12
 6f4:	add	ip, ip, #69632	; 0x11000
 6f8:	ldr	pc, [ip, #2328]!	; 0x918

000006fc <__cxa_finalize@plt>:
 6fc:	add	ip, pc, #0, 12
 700:	add	ip, ip, #69632	; 0x11000
 704:	ldr	pc, [ip, #2320]!	; 0x910

00000708 <rb_outofmemory@plt>:
 708:	add	ip, pc, #0, 12
 70c:	add	ip, ip, #69632	; 0x11000
 710:	ldr	pc, [ip, #2312]!	; 0x908

00000714 <find_umode_slot@plt>:
 714:	add	ip, pc, #0, 12
 718:	add	ip, ip, #69632	; 0x11000
 71c:	ldr	pc, [ip, #2304]!	; 0x900

00000720 <sendto_server@plt>:
 720:	add	ip, pc, #0, 12
 724:	add	ip, ip, #69632	; 0x11000
 728:	ldr	pc, [ip, #2296]!	; 0x8f8

0000072c <__gmon_start__@plt>:
 72c:	add	ip, pc, #0, 12
 730:	add	ip, ip, #69632	; 0x11000
 734:	ldr	pc, [ip, #2288]!	; 0x8f0

00000738 <__ctype_b_loc@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2280]!	; 0x8e8

00000744 <sendto_one_numeric@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2272]!	; 0x8e0

00000750 <snprintf@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2264]!	; 0x8d8

0000075c <strncpy@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #69632	; 0x11000
 764:	ldr	pc, [ip, #2256]!	; 0x8d0

00000768 <strrchr@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #69632	; 0x11000
 770:	ldr	pc, [ip, #2248]!	; 0x8c8

00000774 <change_nick_user_host@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #69632	; 0x11000
 77c:	ldr	pc, [ip, #2240]!	; 0x8c0

00000780 <rb_strlcpy@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2232]!	; 0x8b8

0000078c <irccmp@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2224]!	; 0x8b0

00000798 <construct_umodebuf@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2216]!	; 0x8a8

Disassembly of section .text:

000007a4 <call_weak_fn>:
     7a4:	ldr	r3, [pc, #20]	; 7c0 <call_weak_fn+0x1c>
     7a8:	ldr	r2, [pc, #20]	; 7c4 <call_weak_fn+0x20>
     7ac:	add	r3, pc, r3
     7b0:	ldr	r2, [r3, r2]
     7b4:	cmp	r2, #0
     7b8:	bxeq	lr
     7bc:	b	72c <__gmon_start__@plt>
     7c0:	.word	0x0001184c
     7c4:	.word	0x0000005c

000007c8 <deregister_tm_clones>:
     7c8:	ldr	r0, [pc, #44]	; 7fc <deregister_tm_clones+0x34>
     7cc:	ldr	r3, [pc, #44]	; 800 <deregister_tm_clones+0x38>
     7d0:	add	r0, pc, r0
     7d4:	add	r3, pc, r3
     7d8:	cmp	r3, r0
     7dc:	ldr	r3, [pc, #32]	; 804 <deregister_tm_clones+0x3c>
     7e0:	add	r3, pc, r3
     7e4:	bxeq	lr
     7e8:	ldr	r2, [pc, #24]	; 808 <deregister_tm_clones+0x40>
     7ec:	ldr	r3, [r3, r2]
     7f0:	cmp	r3, #0
     7f4:	bxeq	lr
     7f8:	bx	r3
     7fc:	.word	0x000118e4
     800:	.word	0x000118e0
     804:	.word	0x00011818
     808:	.word	0x00000050

0000080c <register_tm_clones>:
     80c:	ldr	r0, [pc, #56]	; 84c <register_tm_clones+0x40>
     810:	ldr	r3, [pc, #56]	; 850 <register_tm_clones+0x44>
     814:	add	r0, pc, r0
     818:	add	r3, pc, r3
     81c:	sub	r1, r3, r0
     820:	ldr	r3, [pc, #44]	; 854 <register_tm_clones+0x48>
     824:	asr	r1, r1, #2
     828:	add	r3, pc, r3
     82c:	add	r1, r1, r1, lsr #31
     830:	asrs	r1, r1, #1
     834:	bxeq	lr
     838:	ldr	r2, [pc, #24]	; 858 <register_tm_clones+0x4c>
     83c:	ldr	r3, [r3, r2]
     840:	cmp	r3, #0
     844:	bxeq	lr
     848:	bx	r3
     84c:	.word	0x000118a0
     850:	.word	0x0001189c
     854:	.word	0x000117d0
     858:	.word	0x00000064

0000085c <__do_global_dtors_aux>:
     85c:	ldr	r3, [pc, #76]	; 8b0 <__do_global_dtors_aux+0x54>
     860:	ldr	r2, [pc, #76]	; 8b4 <__do_global_dtors_aux+0x58>
     864:	add	r3, pc, r3
     868:	add	r2, pc, r2
     86c:	ldrb	r3, [r3]
     870:	cmp	r3, #0
     874:	bxne	lr
     878:	ldr	r3, [pc, #56]	; 8b8 <__do_global_dtors_aux+0x5c>
     87c:	push	{r4, lr}
     880:	ldr	r3, [r2, r3]
     884:	cmp	r3, #0
     888:	beq	898 <__do_global_dtors_aux+0x3c>
     88c:	ldr	r3, [pc, #40]	; 8bc <__do_global_dtors_aux+0x60>
     890:	ldr	r0, [pc, r3]
     894:	bl	6fc <__cxa_finalize@plt>
     898:	bl	7c8 <deregister_tm_clones>
     89c:	ldr	r3, [pc, #28]	; 8c0 <__do_global_dtors_aux+0x64>
     8a0:	mov	r2, #1
     8a4:	add	r3, pc, r3
     8a8:	strb	r2, [r3]
     8ac:	pop	{r4, pc}
     8b0:	.word	0x00011850
     8b4:	.word	0x00011790
     8b8:	.word	0x0000004c
     8bc:	.word	0x000117d4
     8c0:	.word	0x00011810

000008c4 <frame_dummy>:
     8c4:	b	80c <register_tm_clones>

000008c8 <check_umode_change>:
     8c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     8cc:	add	fp, sp, #28
     8d0:	sub	sp, sp, #20
     8d4:	ldr	r4, [r0]
     8d8:	mov	r7, r4
     8dc:	ldr	r1, [r7, #64]!	; 0x40
     8e0:	tst	r1, #8192	; 0x2000
     8e4:	beq	a90 <check_umode_change+0x1c8>
     8e8:	ldrh	r2, [r4, #80]	; 0x50
     8ec:	cmp	r2, #64	; 0x40
     8f0:	bne	a90 <check_umode_change+0x1c8>
     8f4:	ldr	r0, [r0, #4]
     8f8:	ldr	r5, [r4, #56]	; 0x38
     8fc:	ldr	r2, [pc, #776]	; c0c <check_umode_change+0x344>
     900:	ldr	r2, [pc, r2]
     904:	eor	r0, r5, r0
     908:	ldr	r6, [r2, #416]	; 0x1a0
     90c:	tst	r0, r6
     910:	beq	a90 <check_umode_change+0x1c8>
     914:	tst	r6, r5
     918:	beq	964 <check_umode_change+0x9c>
     91c:	tst	r1, #16777216	; 0x1000000
     920:	bne	954 <check_umode_change+0x8c>
     924:	ldr	r0, [r4, #432]	; 0x1b0
     928:	ldr	sl, [r0, #432]	; 0x1b0
     92c:	cmp	sl, #0
     930:	beq	954 <check_umode_change+0x8c>
     934:	add	r8, r4, #163	; 0xa3
     938:	tst	r1, #131072	; 0x20000
     93c:	beq	a98 <check_umode_change+0x1d0>
     940:	mov	r0, r8
     944:	mov	r1, sl
     948:	bl	6f0 <strcmp@plt>
     94c:	cmp	r0, #0
     950:	beq	a98 <check_umode_change+0x1d0>
     954:	bic	r0, r5, r6
     958:	str	r0, [r4, #56]	; 0x38
     95c:	sub	sp, fp, #28
     960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     964:	ldr	r0, [r4, #432]	; 0x1b0
     968:	ldr	r1, [r0, #432]	; 0x1b0
     96c:	cmp	r1, #0
     970:	beq	a90 <check_umode_change+0x1c8>
     974:	add	r0, r4, #163	; 0xa3
     978:	bl	6f0 <strcmp@plt>
     97c:	cmp	r0, #0
     980:	bne	a90 <check_umode_change+0x1c8>
     984:	ldr	r2, [pc, #688]	; c3c <check_umode_change+0x374>
     988:	add	r8, r4, #227	; 0xe3
     98c:	mov	r0, r4
     990:	mov	r1, #396	; 0x18c
     994:	mov	r3, r8
     998:	add	r2, pc, r2
     99c:	bl	744 <sendto_one_numeric@plt>
     9a0:	ldr	r0, [pc, #664]	; c40 <check_umode_change+0x378>
     9a4:	mov	r6, r4
     9a8:	add	r9, r4, #88	; 0x58
     9ac:	ldr	r0, [pc, r0]
     9b0:	ldr	r0, [r0]
     9b4:	ldr	r1, [pc, #648]	; c44 <check_umode_change+0x37c>
     9b8:	ldr	r1, [pc, r1]
     9bc:	ldr	r1, [r1]
     9c0:	ldr	r5, [pc, #640]	; c48 <check_umode_change+0x380>
     9c4:	ldr	r5, [pc, r5]
     9c8:	ldrb	r3, [r6, #396]!	; 0x18c
     9cc:	ldrb	r2, [r5, #396]!	; 0x18c
     9d0:	ldr	ip, [pc, #628]	; c4c <check_umode_change+0x384>
     9d4:	cmp	r3, #0
     9d8:	mov	r3, r6
     9dc:	moveq	r3, r9
     9e0:	cmp	r2, #0
     9e4:	sub	sl, r5, #308	; 0x134
     9e8:	mov	r2, r5
     9ec:	add	ip, pc, ip
     9f0:	moveq	r2, sl
     9f4:	str	ip, [sp]
     9f8:	stmib	sp, {r2, r3, r8}
     9fc:	orr	r2, r0, r1
     a00:	mov	r0, #0
     a04:	mov	r1, #0
     a08:	mov	r3, #0
     a0c:	bl	720 <sendto_server@plt>
     a10:	ldr	r0, [pc, #568]	; c50 <check_umode_change+0x388>
     a14:	ldr	r0, [pc, r0]
     a18:	ldr	r3, [r0]
     a1c:	ldr	r0, [pc, #560]	; c54 <check_umode_change+0x38c>
     a20:	ldr	r0, [pc, r0]
     a24:	ldrb	r1, [r6]
     a28:	ldr	r2, [r0]
     a2c:	ldrb	r0, [r5]
     a30:	ldr	ip, [pc, #544]	; c58 <check_umode_change+0x390>
     a34:	cmp	r1, #0
     a38:	mov	r1, #0
     a3c:	moveq	r6, r9
     a40:	cmp	r0, #0
     a44:	add	ip, pc, ip
     a48:	mov	r0, #0
     a4c:	moveq	r5, sl
     a50:	str	ip, [sp]
     a54:	stmib	sp, {r5, r6, r8}
     a58:	bl	720 <sendto_server@plt>
     a5c:	ldr	r0, [pc, #504]	; c5c <check_umode_change+0x394>
     a60:	mov	r1, #0
     a64:	add	r2, r4, #152	; 0x98
     a68:	mov	r3, r8
     a6c:	str	r1, [sp]
     a70:	mov	r1, r9
     a74:	add	r0, pc, r0
     a78:	str	r0, [sp, #4]
     a7c:	mov	r0, r4
     a80:	bl	774 <change_nick_user_host@plt>
     a84:	ldr	r0, [r7]
     a88:	bic	r0, r0, #131072	; 0x20000
     a8c:	str	r0, [r7]
     a90:	sub	sp, fp, #28
     a94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     a98:	mov	r0, r8
     a9c:	mov	r1, sl
     aa0:	bl	6f0 <strcmp@plt>
     aa4:	cmp	r0, #0
     aa8:	beq	ac8 <check_umode_change+0x200>
     aac:	add	r0, r4, #227	; 0xe3
     ab0:	cmp	r0, sl
     ab4:	str	r0, [sp, #16]
     ab8:	beq	ae8 <check_umode_change+0x220>
     abc:	ldr	r2, [pc, #332]	; c10 <check_umode_change+0x348>
     ac0:	add	r2, pc, r2
     ac4:	b	af0 <check_umode_change+0x228>
     ac8:	ldr	r2, [pc, #360]	; c38 <check_umode_change+0x370>
     acc:	mov	r0, r4
     ad0:	mov	r1, #396	; 0x18c
     ad4:	mov	r3, r8
     ad8:	add	r2, pc, r2
     adc:	sub	sp, fp, #28
     ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     ae4:	b	744 <sendto_one_numeric@plt>
     ae8:	ldr	r2, [pc, #292]	; c14 <check_umode_change+0x34c>
     aec:	add	r2, pc, r2
     af0:	mov	r0, r4
     af4:	mov	r1, #396	; 0x18c
     af8:	mov	r3, sl
     afc:	bl	744 <sendto_one_numeric@plt>
     b00:	mov	r6, r4
     b04:	add	r9, r4, #88	; 0x58
     b08:	ldrb	r0, [r6, #396]!	; 0x18c
     b0c:	ldr	r1, [pc, #260]	; c18 <check_umode_change+0x350>
     b10:	ldr	r1, [pc, r1]
     b14:	cmp	r0, #0
     b18:	mov	r0, r6
     b1c:	moveq	r0, r9
     b20:	ldr	lr, [r1]
     b24:	ldr	r5, [pc, #240]	; c1c <check_umode_change+0x354>
     b28:	ldr	r5, [pc, r5]
     b2c:	ldrb	r2, [r5, #396]!	; 0x18c
     b30:	ldr	r1, [pc, #232]	; c20 <check_umode_change+0x358>
     b34:	ldr	r1, [pc, r1]
     b38:	cmp	r2, #0
     b3c:	sub	r8, r5, #308	; 0x134
     b40:	mov	r2, r5
     b44:	moveq	r2, r8
     b48:	ldr	r3, [r1]
     b4c:	ldr	ip, [pc, #208]	; c24 <check_umode_change+0x35c>
     b50:	str	r2, [sp, #4]
     b54:	str	r0, [sp, #8]
     b58:	mov	r0, #0
     b5c:	mov	r1, #0
     b60:	str	sl, [sp, #12]
     b64:	add	ip, pc, ip
     b68:	orr	r2, lr, r3
     b6c:	mov	r3, #0
     b70:	str	ip, [sp]
     b74:	bl	720 <sendto_server@plt>
     b78:	ldr	r0, [pc, #168]	; c28 <check_umode_change+0x360>
     b7c:	ldr	r0, [pc, r0]
     b80:	ldr	r3, [r0]
     b84:	ldr	r0, [pc, #160]	; c2c <check_umode_change+0x364>
     b88:	ldr	r0, [pc, r0]
     b8c:	ldrb	r1, [r6]
     b90:	ldr	r2, [r0]
     b94:	ldrb	r0, [r5]
     b98:	ldr	ip, [pc, #144]	; c30 <check_umode_change+0x368>
     b9c:	cmp	r1, #0
     ba0:	mov	r1, #0
     ba4:	moveq	r6, r9
     ba8:	cmp	r0, #0
     bac:	add	ip, pc, ip
     bb0:	mov	r0, #0
     bb4:	moveq	r5, r8
     bb8:	str	ip, [sp]
     bbc:	stmib	sp, {r5, r6, sl}
     bc0:	bl	720 <sendto_server@plt>
     bc4:	ldr	r0, [pc, #104]	; c34 <check_umode_change+0x36c>
     bc8:	mov	r1, #0
     bcc:	add	r2, r4, #152	; 0x98
     bd0:	mov	r3, sl
     bd4:	str	r1, [sp]
     bd8:	mov	r1, r9
     bdc:	add	r0, pc, r0
     be0:	str	r0, [sp, #4]
     be4:	mov	r0, r4
     be8:	bl	774 <change_nick_user_host@plt>
     bec:	ldr	r0, [r7]
     bf0:	ldr	r2, [sp, #16]
     bf4:	bic	r1, r0, #131072	; 0x20000
     bf8:	cmp	r2, sl
     bfc:	orrne	r1, r0, #131072	; 0x20000
     c00:	str	r1, [r7]
     c04:	sub	sp, fp, #28
     c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     c0c:	.word	0x00011750
     c10:	.word	0x0000057d
     c14:	.word	0x0000056d
     c18:	.word	0x0001153c
     c1c:	.word	0x00011538
     c20:	.word	0x00011524
     c24:	.word	0x00000508
     c28:	.word	0x000114dc
     c2c:	.word	0x000114c4
     c30:	.word	0x000004d3
     c34:	.word	0x000004be
     c38:	.word	0x00000565
     c3c:	.word	0x000006c1
     c40:	.word	0x000116a0
     c44:	.word	0x000116a0
     c48:	.word	0x0001169c
     c4c:	.word	0x00000680
     c50:	.word	0x00011644
     c54:	.word	0x0001162c
     c58:	.word	0x0000063b
     c5c:	.word	0x00000626

00000c60 <check_new_user>:
     c60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     c64:	add	fp, sp, #28
     c68:	sub	sp, sp, #84	; 0x54
     c6c:	mov	r4, r0
     c70:	ldrb	r0, [r0, #67]	; 0x43
     c74:	tst	r0, #1
     c78:	bne	d58 <check_new_user+0xf8>
     c7c:	mov	r0, #1
     c80:	mov	r1, #64	; 0x40
     c84:	bl	6e4 <calloc@plt>
     c88:	cmp	r0, #0
     c8c:	beq	fbc <check_new_user+0x35c>
     c90:	ldr	r1, [r4, #432]	; 0x1b0
     c94:	add	r9, r4, #227	; 0xe3
     c98:	add	r8, r4, #64	; 0x40
     c9c:	str	r0, [r1, #432]	; 0x1b0
     ca0:	movw	r0, #291	; 0x123
     ca4:	add	r1, r4, r0
     ca8:	mov	r0, r9
     cac:	bl	78c <irccmp@plt>
     cb0:	ldr	r2, [r4, #432]	; 0x1b0
     cb4:	ldrb	r1, [r4, #227]	; 0xe3
     cb8:	movw	r5, #18604	; 0x48ac
     cbc:	cmp	r0, #0
     cc0:	movt	r5, #35898	; 0x8c3a
     cc4:	ldr	sl, [r2, #432]	; 0x1b0
     cc8:	beq	e44 <check_new_user+0x1e4>
     ccc:	cmp	r1, #0
     cd0:	beq	cf0 <check_new_user+0x90>
     cd4:	add	r2, r4, #228	; 0xe4
     cd8:	mov	r0, #1
     cdc:	uxtab	r0, r0, r1
     ce0:	ldrb	r1, [r2], #1
     ce4:	cmp	r1, #0
     ce8:	bne	cdc <check_new_user+0x7c>
     cec:	mul	r5, r0, r5
     cf0:	str	r8, [sp, #12]
     cf4:	mov	r2, #63	; 0x3f
     cf8:	ldr	r0, [pc, #720]	; fd0 <check_new_user+0x370>
     cfc:	str	r9, [sp, #8]
     d00:	add	r0, pc, r0
     d04:	ldrb	r6, [r0]
     d08:	cmp	r6, #0
     d0c:	moveq	r1, #1
     d10:	movwne	r6, #3376	; 0xd30
     d14:	strbeq	r1, [r0]
     d18:	mov	r0, sl
     d1c:	mov	r1, r9
     d20:	moveq	r6, #3376	; 0xd30
     d24:	bl	75c <strncpy@plt>
     d28:	ldr	r8, [pc, #676]	; fd4 <check_new_user+0x374>
     d2c:	eor	r7, r6, r5
     d30:	movw	r5, #60495	; 0xec4f
     d34:	mov	r6, #26
     d38:	str	sl, [sp, #4]
     d3c:	movt	r5, #20164	; 0x4ec4
     d40:	add	r8, pc, r8
     d44:	ldrb	r9, [sl]
     d48:	cmp	r9, #0
     d4c:	cmpne	r9, #46	; 0x2e
     d50:	beq	dc8 <check_new_user+0x168>
     d54:	b	d8c <check_new_user+0x12c>
     d58:	ldr	r0, [r4, #56]	; 0x38
     d5c:	ldr	r1, [pc, #604]	; fc0 <check_new_user+0x360>
     d60:	ldr	r1, [pc, r1]
     d64:	ldr	r1, [r1, #416]	; 0x1a0
     d68:	bic	r0, r0, r1
     d6c:	str	r0, [r4, #56]	; 0x38
     d70:	sub	sp, fp, #28
     d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     d78:	add	sl, sl, #1
     d7c:	ldrb	r9, [sl]
     d80:	cmp	r9, #0
     d84:	cmpne	r9, #46	; 0x2e
     d88:	beq	dc8 <check_new_user+0x168>
     d8c:	bl	738 <__ctype_b_loc@plt>
     d90:	cmp	r9, #45	; 0x2d
     d94:	beq	d78 <check_new_user+0x118>
     d98:	ldr	r0, [r0]
     d9c:	add	r0, r0, r9, lsl #1
     da0:	ldrh	r0, [r0]
     da4:	ands	r0, r0, #2048	; 0x800
     da8:	bne	d78 <check_new_user+0x118>
     dac:	mul	r0, r7, r9
     db0:	umull	r1, r2, r0, r5
     db4:	lsr	r1, r2, #3
     db8:	mls	r0, r1, r6, r0
     dbc:	ldrb	r0, [r8, r0]
     dc0:	strb	r0, [sl]
     dc4:	b	d78 <check_new_user+0x118>
     dc8:	ldr	r0, [sp, #4]
     dcc:	ldr	r8, [sp, #12]
     dd0:	ldr	r9, [sp, #8]
     dd4:	ldrb	r6, [r0]
     dd8:	cmp	r6, #0
     ddc:	beq	e30 <check_new_user+0x1d0>
     de0:	add	r5, r0, #1
     de4:	bl	738 <__ctype_b_loc@plt>
     de8:	movw	r1, #52429	; 0xcccd
     dec:	movt	r1, #52428	; 0xcccc
     df0:	ldr	r3, [r0]
     df4:	uxtb	r2, r6
     df8:	add	r3, r3, r2, lsl #1
     dfc:	ldrb	r3, [r3, #1]
     e00:	tst	r3, #8
     e04:	beq	e24 <check_new_user+0x1c4>
     e08:	mul	r2, r7, r2
     e0c:	umull	r3, r6, r2, r1
     e10:	lsr	r3, r6, #3
     e14:	add	r3, r3, r3, lsl #2
     e18:	sub	r2, r2, r3, lsl #1
     e1c:	orr	r2, r2, #48	; 0x30
     e20:	strb	r2, [r5, #-1]
     e24:	ldrb	r6, [r5], #1
     e28:	cmp	r6, #0
     e2c:	bne	df0 <check_new_user+0x190>
     e30:	ldrb	r0, [r8, #2]
     e34:	tst	r0, #2
     e38:	bne	f34 <check_new_user+0x2d4>
     e3c:	ldr	r0, [r4, #56]	; 0x38
     e40:	b	f4c <check_new_user+0x2ec>
     e44:	cmp	r1, #0
     e48:	beq	e68 <check_new_user+0x208>
     e4c:	add	r2, r4, #228	; 0xe4
     e50:	mov	r0, #1
     e54:	uxtab	r0, r0, r1
     e58:	ldrb	r1, [r2], #1
     e5c:	cmp	r1, #0
     e60:	bne	e54 <check_new_user+0x1f4>
     e64:	mul	r5, r0, r5
     e68:	ldr	r0, [pc, #340]	; fc4 <check_new_user+0x364>
     e6c:	add	r7, sp, #16
     e70:	vmov.i32	q8, #0	; 0x00000000
     e74:	mov	r2, #63	; 0x3f
     e78:	add	r0, pc, r0
     e7c:	ldrb	r6, [r0]
     e80:	cmp	r6, #0
     e84:	moveq	r1, #1
     e88:	movwne	r6, #3376	; 0xd30
     e8c:	strbeq	r1, [r0]
     e90:	mov	r0, #48	; 0x30
     e94:	mov	r1, r7
     e98:	moveq	r6, #3376	; 0xd30
     e9c:	vst1.64	{d16-d17}, [r1], r0
     ea0:	add	r0, r7, #32
     ea4:	vst1.64	{d16-d17}, [r0]
     ea8:	add	r0, r7, #16
     eac:	vst1.64	{d16-d17}, [r1]
     eb0:	mov	r1, r9
     eb4:	vst1.64	{d16-d17}, [r0]
     eb8:	mov	r0, r7
     ebc:	bl	75c <strncpy@plt>
     ec0:	mov	r0, r7
     ec4:	mov	r1, #46	; 0x2e
     ec8:	eor	r5, r6, r5
     ecc:	bl	768 <strrchr@plt>
     ed0:	cmp	r0, #0
     ed4:	beq	ef0 <check_new_user+0x290>
     ed8:	mov	r1, #0
     edc:	strb	r1, [r0]
     ee0:	str	r5, [sp]
     ee4:	ldr	r2, [pc, #224]	; fcc <check_new_user+0x36c>
     ee8:	add	r2, pc, r2
     eec:	b	f18 <check_new_user+0x2b8>
     ef0:	add	r0, sp, #16
     ef4:	mov	r1, #58	; 0x3a
     ef8:	bl	768 <strrchr@plt>
     efc:	cmp	r0, #0
     f00:	beq	f9c <check_new_user+0x33c>
     f04:	mov	r1, #0
     f08:	strb	r1, [r0]
     f0c:	str	r5, [sp]
     f10:	ldr	r2, [pc, #176]	; fc8 <check_new_user+0x368>
     f14:	add	r2, pc, r2
     f18:	add	r3, sp, #16
     f1c:	mov	r0, sl
     f20:	mov	r1, #63	; 0x3f
     f24:	bl	750 <snprintf@plt>
     f28:	ldrb	r0, [r8, #2]
     f2c:	tst	r0, #2
     f30:	beq	e3c <check_new_user+0x1dc>
     f34:	ldr	r0, [r4, #56]	; 0x38
     f38:	ldr	r1, [pc, #152]	; fd8 <check_new_user+0x378>
     f3c:	ldr	r1, [pc, r1]
     f40:	ldr	r1, [r1, #416]	; 0x1a0
     f44:	bic	r0, r0, r1
     f48:	str	r0, [r4, #56]	; 0x38
     f4c:	ldr	r1, [pc, #136]	; fdc <check_new_user+0x37c>
     f50:	ldr	r1, [pc, r1]
     f54:	ldr	r1, [r1, #416]	; 0x1a0
     f58:	tst	r1, r0
     f5c:	beq	f94 <check_new_user+0x334>
     f60:	ldr	r0, [r4, #432]	; 0x1b0
     f64:	add	r4, r4, #163	; 0xa3
     f68:	mov	r2, #64	; 0x40
     f6c:	ldr	r1, [r0, #432]	; 0x1b0
     f70:	mov	r0, r4
     f74:	bl	780 <rb_strlcpy@plt>
     f78:	mov	r0, r4
     f7c:	mov	r1, r9
     f80:	bl	78c <irccmp@plt>
     f84:	cmp	r0, #0
     f88:	ldrne	r0, [r8]
     f8c:	orrne	r0, r0, #131072	; 0x20000
     f90:	strne	r0, [r8]
     f94:	sub	sp, fp, #28
     f98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f9c:	mov	r0, sl
     fa0:	mov	r1, r9
     fa4:	mov	r2, #63	; 0x3f
     fa8:	bl	75c <strncpy@plt>
     fac:	ldrb	r0, [r8, #2]
     fb0:	tst	r0, #2
     fb4:	beq	e3c <check_new_user+0x1dc>
     fb8:	b	f34 <check_new_user+0x2d4>
     fbc:	bl	708 <rb_outofmemory@plt>
     fc0:	.word	0x000112f0
     fc4:	.word	0x00011240
     fc8:	.word	0x00000194
     fcc:	.word	0x000001c9
     fd0:	.word	0x000113b8
     fd4:	.word	0x0000037a
     fd8:	.word	0x00011114
     fdc:	.word	0x00011100

00000fe0 <_modinit>:
     fe0:	push	{fp, lr}
     fe4:	mov	fp, sp
     fe8:	bl	714 <find_umode_slot@plt>
     fec:	ldr	r1, [pc, #16]	; 1004 <_modinit+0x24>
     ff0:	ldr	r1, [pc, r1]
     ff4:	str	r0, [r1, #416]	; 0x1a0
     ff8:	bl	798 <construct_umodebuf@plt>
     ffc:	mov	r0, #0
    1000:	pop	{fp, pc}
    1004:	.word	0x00011060

00001008 <_moddeinit>:
    1008:	ldr	r0, [pc, #12]	; 101c <_moddeinit+0x14>
    100c:	mov	r1, #0
    1010:	ldr	r0, [pc, r0]
    1014:	str	r1, [r0, #416]	; 0x1a0
    1018:	b	798 <construct_umodebuf@plt>
    101c:	.word	0x00011040

Disassembly of section .fini:

00001020 <_fini>:
    1020:	push	{r3, lr}
    1024:	pop	{r3, pc}
