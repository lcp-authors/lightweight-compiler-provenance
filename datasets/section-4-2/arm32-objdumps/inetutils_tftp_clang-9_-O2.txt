
../repos/inetutils/src/tftp:     file format elf32-littlearm


Disassembly of section .init:

000113fc <.init>:
   113fc:	push	{r3, lr}
   11400:	bl	117dc <__assert_fail@plt+0x48>
   11404:	pop	{r3, pc}

Disassembly of section .plt:

00011408 <fdopen@plt-0x14>:
   11408:	push	{lr}		; (str lr, [sp, #-4]!)
   1140c:	ldr	lr, [pc, #4]	; 11418 <fdopen@plt-0x4>
   11410:	add	lr, pc, lr
   11414:	ldr	pc, [lr, #8]!
   11418:	andeq	fp, r1, r8, ror #23

0001141c <fdopen@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #110592	; 0x1b000
   11424:	ldr	pc, [ip, #3048]!	; 0xbe8

00011428 <calloc@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #110592	; 0x1b000
   11430:	ldr	pc, [ip, #3040]!	; 0xbe0

00011434 <fputs_unlocked@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #110592	; 0x1b000
   1143c:	ldr	pc, [ip, #3032]!	; 0xbd8

00011440 <strcmp@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #110592	; 0x1b000
   11448:	ldr	pc, [ip, #3024]!	; 0xbd0

0001144c <strtol@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #110592	; 0x1b000
   11454:	ldr	pc, [ip, #3016]!	; 0xbc8

00011458 <printf@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #110592	; 0x1b000
   11460:	ldr	pc, [ip, #3008]!	; 0xbc0

00011464 <read@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #110592	; 0x1b000
   1146c:	ldr	pc, [ip, #3000]!	; 0xbb8

00011470 <longjmp@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #110592	; 0x1b000
   11478:	ldr	pc, [ip, #2992]!	; 0xbb0

0001147c <_setjmp@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #110592	; 0x1b000
   11484:	ldr	pc, [ip, #2984]!	; 0xba8

00011488 <memmove@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #110592	; 0x1b000
   11490:	ldr	pc, [ip, #2976]!	; 0xba0

00011494 <strchrnul@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #110592	; 0x1b000
   1149c:	ldr	pc, [ip, #2968]!	; 0xb98

000114a0 <free@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #110592	; 0x1b000
   114a8:	ldr	pc, [ip, #2960]!	; 0xb90

000114ac <gai_strerror@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #110592	; 0x1b000
   114b4:	ldr	pc, [ip, #2952]!	; 0xb88

000114b8 <fgets@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #110592	; 0x1b000
   114c0:	ldr	pc, [ip, #2944]!	; 0xb80

000114c4 <strndup@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #110592	; 0x1b000
   114cc:	ldr	pc, [ip, #2936]!	; 0xb78

000114d0 <memcpy@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #110592	; 0x1b000
   114d8:	ldr	pc, [ip, #2928]!	; 0xb70

000114dc <signal@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #110592	; 0x1b000
   114e4:	ldr	pc, [ip, #2920]!	; 0xb68

000114e8 <fwrite_unlocked@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #110592	; 0x1b000
   114f0:	ldr	pc, [ip, #2912]!	; 0xb60

000114f4 <sleep@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #110592	; 0x1b000
   114fc:	ldr	pc, [ip, #2904]!	; 0xb58

00011500 <recvfrom@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #110592	; 0x1b000
   11508:	ldr	pc, [ip, #2896]!	; 0xb50

0001150c <alarm@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #110592	; 0x1b000
   11514:	ldr	pc, [ip, #2888]!	; 0xb48

00011518 <realloc@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #110592	; 0x1b000
   11520:	ldr	pc, [ip, #2880]!	; 0xb40

00011524 <strcasecmp@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #110592	; 0x1b000
   1152c:	ldr	pc, [ip, #2872]!	; 0xb38

00011530 <funlockfile@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #110592	; 0x1b000
   11538:	ldr	pc, [ip, #2864]!	; 0xb30

0001153c <perror@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #110592	; 0x1b000
   11544:	ldr	pc, [ip, #2856]!	; 0xb28

00011548 <fwrite@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #110592	; 0x1b000
   11550:	ldr	pc, [ip, #2848]!	; 0xb20

00011554 <ioctl@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #110592	; 0x1b000
   1155c:	ldr	pc, [ip, #2840]!	; 0xb18

00011560 <strcpy@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #110592	; 0x1b000
   11568:	ldr	pc, [ip, #2832]!	; 0xb10

0001156c <gettimeofday@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #110592	; 0x1b000
   11574:	ldr	pc, [ip, #2824]!	; 0xb08

00011578 <creat64@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #110592	; 0x1b000
   11580:	ldr	pc, [ip, #2816]!	; 0xb00

00011584 <error@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #110592	; 0x1b000
   1158c:	ldr	pc, [ip, #2808]!	; 0xaf8

00011590 <open64@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #110592	; 0x1b000
   11598:	ldr	pc, [ip, #2800]!	; 0xaf0

0001159c <getenv@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #110592	; 0x1b000
   115a4:	ldr	pc, [ip, #2792]!	; 0xae8

000115a8 <puts@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #110592	; 0x1b000
   115b0:	ldr	pc, [ip, #2784]!	; 0xae0

000115b4 <malloc@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #110592	; 0x1b000
   115bc:	ldr	pc, [ip, #2776]!	; 0xad8

000115c0 <__libc_start_main@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #110592	; 0x1b000
   115c8:	ldr	pc, [ip, #2768]!	; 0xad0

000115cc <strerror@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #110592	; 0x1b000
   115d4:	ldr	pc, [ip, #2760]!	; 0xac8

000115d8 <__ctype_tolower_loc@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #110592	; 0x1b000
   115e0:	ldr	pc, [ip, #2752]!	; 0xac0

000115e4 <__gmon_start__@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #110592	; 0x1b000
   115ec:	ldr	pc, [ip, #2744]!	; 0xab8

000115f0 <__ctype_b_loc@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #110592	; 0x1b000
   115f8:	ldr	pc, [ip, #2736]!	; 0xab0

000115fc <exit@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #110592	; 0x1b000
   11604:	ldr	pc, [ip, #2728]!	; 0xaa8

00011608 <feof@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #110592	; 0x1b000
   11610:	ldr	pc, [ip, #2720]!	; 0xaa0

00011614 <strlen@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #110592	; 0x1b000
   1161c:	ldr	pc, [ip, #2712]!	; 0xa98

00011620 <strchr@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #110592	; 0x1b000
   11628:	ldr	pc, [ip, #2704]!	; 0xa90

0001162c <fprintf@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #110592	; 0x1b000
   11634:	ldr	pc, [ip, #2696]!	; 0xa88

00011638 <__errno_location@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #110592	; 0x1b000
   11640:	ldr	pc, [ip, #2688]!	; 0xa80

00011644 <getservbyname@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #110592	; 0x1b000
   1164c:	ldr	pc, [ip, #2680]!	; 0xa78

00011650 <strerror_r@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #110592	; 0x1b000
   11658:	ldr	pc, [ip, #2672]!	; 0xa70

0001165c <bind@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #110592	; 0x1b000
   11664:	ldr	pc, [ip, #2664]!	; 0xa68

00011668 <memset@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #110592	; 0x1b000
   11670:	ldr	pc, [ip, #2656]!	; 0xa60

00011674 <strncpy@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #110592	; 0x1b000
   1167c:	ldr	pc, [ip, #2648]!	; 0xa58

00011680 <write@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #110592	; 0x1b000
   11688:	ldr	pc, [ip, #2640]!	; 0xa50

0001168c <fileno@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #110592	; 0x1b000
   11694:	ldr	pc, [ip, #2632]!	; 0xa48

00011698 <memchr@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #110592	; 0x1b000
   116a0:	ldr	pc, [ip, #2624]!	; 0xa40

000116a4 <fclose@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #110592	; 0x1b000
   116ac:	ldr	pc, [ip, #2616]!	; 0xa38

000116b0 <fseeko64@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #110592	; 0x1b000
   116b8:	ldr	pc, [ip, #2608]!	; 0xa30

000116bc <sendto@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #110592	; 0x1b000
   116c4:	ldr	pc, [ip, #2600]!	; 0xa28

000116c8 <__overflow@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #110592	; 0x1b000
   116d0:	ldr	pc, [ip, #2592]!	; 0xa20

000116d4 <setlocale@plt>:
   116d4:	add	ip, pc, #0, 12
   116d8:	add	ip, ip, #110592	; 0x1b000
   116dc:	ldr	pc, [ip, #2584]!	; 0xa18

000116e0 <strrchr@plt>:
   116e0:	add	ip, pc, #0, 12
   116e4:	add	ip, ip, #110592	; 0x1b000
   116e8:	ldr	pc, [ip, #2576]!	; 0xa10

000116ec <vfprintf@plt>:
   116ec:	add	ip, pc, #0, 12
   116f0:	add	ip, ip, #110592	; 0x1b000
   116f4:	ldr	pc, [ip, #2568]!	; 0xa08

000116f8 <fputc@plt>:
   116f8:	add	ip, pc, #0, 12
   116fc:	add	ip, ip, #110592	; 0x1b000
   11700:	ldr	pc, [ip, #2560]!	; 0xa00

00011704 <putc@plt>:
   11704:	add	ip, pc, #0, 12
   11708:	add	ip, ip, #110592	; 0x1b000
   1170c:	ldr	pc, [ip, #2552]!	; 0x9f8

00011710 <flockfile@plt>:
   11710:	add	ip, pc, #0, 12
   11714:	add	ip, ip, #110592	; 0x1b000
   11718:	ldr	pc, [ip, #2544]!	; 0x9f0

0001171c <vsnprintf@plt>:
   1171c:	add	ip, pc, #0, 12
   11720:	add	ip, ip, #110592	; 0x1b000
   11724:	ldr	pc, [ip, #2536]!	; 0x9e8

00011728 <qsort@plt>:
   11728:	add	ip, pc, #0, 12
   1172c:	add	ip, ip, #110592	; 0x1b000
   11730:	ldr	pc, [ip, #2528]!	; 0x9e0

00011734 <freeaddrinfo@plt>:
   11734:	add	ip, pc, #0, 12
   11738:	add	ip, ip, #110592	; 0x1b000
   1173c:	ldr	pc, [ip, #2520]!	; 0x9d8

00011740 <getaddrinfo@plt>:
   11740:	add	ip, pc, #0, 12
   11744:	add	ip, ip, #110592	; 0x1b000
   11748:	ldr	pc, [ip, #2512]!	; 0x9d0

0001174c <socket@plt>:
   1174c:	add	ip, pc, #0, 12
   11750:	add	ip, ip, #110592	; 0x1b000
   11754:	ldr	pc, [ip, #2504]!	; 0x9c8

00011758 <isatty@plt>:
   11758:	add	ip, pc, #0, 12
   1175c:	add	ip, ip, #110592	; 0x1b000
   11760:	ldr	pc, [ip, #2496]!	; 0x9c0

00011764 <strncmp@plt>:
   11764:	add	ip, pc, #0, 12
   11768:	add	ip, ip, #110592	; 0x1b000
   1176c:	ldr	pc, [ip, #2488]!	; 0x9b8

00011770 <abort@plt>:
   11770:	add	ip, pc, #0, 12
   11774:	add	ip, ip, #110592	; 0x1b000
   11778:	ldr	pc, [ip, #2480]!	; 0x9b0

0001177c <getc@plt>:
   1177c:	add	ip, pc, #0, 12
   11780:	add	ip, ip, #110592	; 0x1b000
   11784:	ldr	pc, [ip, #2472]!	; 0x9a8

00011788 <close@plt>:
   11788:	add	ip, pc, #0, 12
   1178c:	add	ip, ip, #110592	; 0x1b000
   11790:	ldr	pc, [ip, #2464]!	; 0x9a0

00011794 <__assert_fail@plt>:
   11794:	add	ip, pc, #0, 12
   11798:	add	ip, ip, #110592	; 0x1b000
   1179c:	ldr	pc, [ip, #2456]!	; 0x998

Disassembly of section .text:

000117a0 <argp_help@@Base-0x2cf8>:
   117a0:	mov	fp, #0
   117a4:	mov	lr, #0
   117a8:	pop	{r1}		; (ldr r1, [sp], #4)
   117ac:	mov	r2, sp
   117b0:	push	{r2}		; (str r2, [sp, #-4]!)
   117b4:	push	{r0}		; (str r0, [sp, #-4]!)
   117b8:	ldr	ip, [pc, #16]	; 117d0 <__assert_fail@plt+0x3c>
   117bc:	push	{ip}		; (str ip, [sp, #-4]!)
   117c0:	ldr	r0, [pc, #12]	; 117d4 <__assert_fail@plt+0x40>
   117c4:	ldr	r3, [pc, #12]	; 117d8 <__assert_fail@plt+0x44>
   117c8:	bl	115c0 <__libc_start_main@plt>
   117cc:	bl	11770 <abort@plt>
   117d0:	strdeq	fp, [r1], -r4
   117d4:	andeq	r2, r1, ip, asr #25
   117d8:	muleq	r1, r4, r6
   117dc:	ldr	r3, [pc, #20]	; 117f8 <__assert_fail@plt+0x64>
   117e0:	ldr	r2, [pc, #20]	; 117fc <__assert_fail@plt+0x68>
   117e4:	add	r3, pc, r3
   117e8:	ldr	r2, [r3, r2]
   117ec:	cmp	r2, #0
   117f0:	bxeq	lr
   117f4:	b	115e4 <__gmon_start__@plt>
   117f8:	andeq	fp, r1, r4, lsl r8
   117fc:	andeq	r0, r0, r8, lsr r1
   11800:	ldr	r0, [pc, #24]	; 11820 <__assert_fail@plt+0x8c>
   11804:	ldr	r3, [pc, #24]	; 11824 <__assert_fail@plt+0x90>
   11808:	cmp	r3, r0
   1180c:	bxeq	lr
   11810:	ldr	r3, [pc, #16]	; 11828 <__assert_fail@plt+0x94>
   11814:	cmp	r3, #0
   11818:	bxeq	lr
   1181c:	bx	r3
   11820:	andeq	sp, r2, r4, lsr r4
   11824:	andeq	sp, r2, r4, lsr r4
   11828:	andeq	r0, r0, r0
   1182c:	ldr	r0, [pc, #36]	; 11858 <__assert_fail@plt+0xc4>
   11830:	ldr	r1, [pc, #36]	; 1185c <__assert_fail@plt+0xc8>
   11834:	sub	r1, r1, r0
   11838:	asr	r1, r1, #2
   1183c:	add	r1, r1, r1, lsr #31
   11840:	asrs	r1, r1, #1
   11844:	bxeq	lr
   11848:	ldr	r3, [pc, #16]	; 11860 <__assert_fail@plt+0xcc>
   1184c:	cmp	r3, #0
   11850:	bxeq	lr
   11854:	bx	r3
   11858:	andeq	sp, r2, r4, lsr r4
   1185c:	andeq	sp, r2, r4, lsr r4
   11860:	andeq	r0, r0, r0
   11864:	push	{r4, lr}
   11868:	ldr	r4, [pc, #24]	; 11888 <__assert_fail@plt+0xf4>
   1186c:	ldrb	r3, [r4]
   11870:	cmp	r3, #0
   11874:	popne	{r4, pc}
   11878:	bl	11800 <__assert_fail@plt+0x6c>
   1187c:	mov	r3, #1
   11880:	strb	r3, [r4]
   11884:	pop	{r4, pc}
   11888:	andeq	sp, r2, r0, asr r4
   1188c:	b	1182c <__assert_fail@plt+0x98>
   11890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11894:	add	fp, sp, #28
   11898:	sub	sp, sp, #4
   1189c:	mov	sl, r1
   118a0:	cmp	r0, #1
   118a4:	bgt	119d0 <__assert_fail@plt+0x23c>
   118a8:	movw	r5, #56028	; 0xdadc
   118ac:	movw	r0, #25445	; 0x6365
   118b0:	movt	r5, #2
   118b4:	movt	r0, #116	; 0x74
   118b8:	str	r0, [r5, #4]
   118bc:	movw	r0, #28483	; 0x6f43
   118c0:	movt	r0, #28270	; 0x6e6e
   118c4:	str	r0, [r5]
   118c8:	mov	r0, r5
   118cc:	bl	11614 <strlen@plt>
   118d0:	add	r0, r5, r0
   118d4:	mov	r1, #32
   118d8:	strh	r1, [r0]
   118dc:	movw	r0, #48651	; 0xbe0b
   118e0:	movw	r1, #46963	; 0xb773
   118e4:	movt	r0, #1
   118e8:	movt	r1, #1
   118ec:	bl	11458 <printf@plt>
   118f0:	movw	r0, #54344	; 0xd448
   118f4:	mov	r1, #192	; 0xc0
   118f8:	movt	r0, #2
   118fc:	ldr	r2, [r0]
   11900:	add	r0, r5, #8
   11904:	bl	114b8 <fgets@plt>
   11908:	cmp	r0, #0
   1190c:	beq	11a4c <__assert_fail@plt+0x2b8>
   11910:	ldrb	r7, [r5]
   11914:	movw	sl, #55496	; 0xd8c8
   11918:	movw	r9, #55988	; 0xdab4
   1191c:	mov	r8, #0
   11920:	mov	r6, #0
   11924:	movt	sl, #2
   11928:	movt	r9, #2
   1192c:	mov	r4, sl
   11930:	str	r8, [r9]
   11934:	cmp	r7, #0
   11938:	beq	119c8 <__assert_fail@plt+0x234>
   1193c:	movw	r4, #55496	; 0xd8c8
   11940:	movt	r4, #2
   11944:	bl	115f0 <__ctype_b_loc@plt>
   11948:	mov	r1, #0
   1194c:	ldr	r2, [r0]
   11950:	uxtb	r3, r7
   11954:	add	r3, r2, r3, lsl #1
   11958:	ldrb	r3, [r3, #1]
   1195c:	tst	r3, #32
   11960:	beq	11980 <__assert_fail@plt+0x1ec>
   11964:	ldrb	r3, [r5, #1]!
   11968:	add	r7, r2, r3, lsl #1
   1196c:	ldrb	r7, [r7, #1]
   11970:	tst	r7, #32
   11974:	bne	11964 <__assert_fail@plt+0x1d0>
   11978:	cmp	r3, #0
   1197c:	beq	119c4 <__assert_fail@plt+0x230>
   11980:	ldr	r2, [r9]
   11984:	str	r5, [r4], #4
   11988:	add	r6, r2, #1
   1198c:	str	r6, [r9]
   11990:	ldrb	r2, [r5]
   11994:	cmp	r2, #0
   11998:	beq	119c8 <__assert_fail@plt+0x234>
   1199c:	ldr	r3, [r0]
   119a0:	add	r5, r5, #1
   119a4:	add	r2, r3, r2, lsl #1
   119a8:	ldrb	r2, [r2, #1]
   119ac:	tst	r2, #32
   119b0:	beq	11990 <__assert_fail@plt+0x1fc>
   119b4:	strb	r1, [r5, #-1]
   119b8:	ldrb	r7, [r5]
   119bc:	cmp	r7, #0
   119c0:	bne	1194c <__assert_fail@plt+0x1b8>
   119c4:	ldr	r6, [r9]
   119c8:	str	r8, [r4]
   119cc:	b	119d4 <__assert_fail@plt+0x240>
   119d0:	mov	r6, r0
   119d4:	bic	r0, r6, #1
   119d8:	cmp	r0, #2
   119dc:	bne	11a44 <__assert_fail@plt+0x2b0>
   119e0:	ldr	r0, [sl, #4]
   119e4:	bl	130d4 <__assert_fail@plt+0x1940>
   119e8:	cmn	r0, #1
   119ec:	beq	11ac4 <__assert_fail@plt+0x330>
   119f0:	cmp	r6, #3
   119f4:	bne	11a6c <__assert_fail@plt+0x2d8>
   119f8:	ldr	r0, [sl, #8]
   119fc:	mov	r1, #0
   11a00:	mov	r2, #10
   11a04:	mov	r4, #0
   11a08:	bl	1144c <strtol@plt>
   11a0c:	movw	r1, #54360	; 0xd458
   11a10:	cmp	r0, #0
   11a14:	movt	r1, #2
   11a18:	str	r0, [r1]
   11a1c:	bgt	11ab4 <__assert_fail@plt+0x320>
   11a20:	ldr	r1, [sl, #8]
   11a24:	movw	r0, #46997	; 0xb795
   11a28:	movt	r0, #1
   11a2c:	bl	11458 <printf@plt>
   11a30:	movw	r0, #54368	; 0xd460
   11a34:	movt	r0, #2
   11a38:	strb	r4, [r0]
   11a3c:	sub	sp, fp, #28
   11a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a44:	ldr	r1, [sl]
   11a48:	b	11a58 <__assert_fail@plt+0x2c4>
   11a4c:	movw	r1, #46955	; 0xb76b
   11a50:	movt	r1, #1
   11a54:	str	r1, [sl]
   11a58:	movw	r0, #46969	; 0xb779
   11a5c:	movt	r0, #1
   11a60:	sub	sp, fp, #28
   11a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a68:	b	11458 <printf@plt>
   11a6c:	movw	r0, #46852	; 0xb704
   11a70:	movw	r1, #46951	; 0xb767
   11a74:	movt	r0, #1
   11a78:	movt	r1, #1
   11a7c:	bl	11644 <getservbyname@plt>
   11a80:	mov	r4, r0
   11a84:	cmp	r0, #0
   11a88:	bne	11aa0 <__assert_fail@plt+0x30c>
   11a8c:	movw	r2, #47018	; 0xb7aa
   11a90:	mov	r0, #1
   11a94:	mov	r1, #0
   11a98:	movt	r2, #1
   11a9c:	bl	11584 <error@plt>
   11aa0:	ldrh	r0, [r4, #8]
   11aa4:	movw	r1, #54360	; 0xd458
   11aa8:	movt	r1, #2
   11aac:	rev16	r0, r0
   11ab0:	str	r0, [r1]
   11ab4:	movw	r0, #54368	; 0xd460
   11ab8:	mov	r1, #1
   11abc:	movt	r0, #2
   11ac0:	strb	r1, [r0]
   11ac4:	sub	sp, fp, #28
   11ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11acc:	push	{r4, r5, r6, r7, fp, lr}
   11ad0:	add	fp, sp, #16
   11ad4:	cmp	r0, #1
   11ad8:	bgt	11af4 <__assert_fail@plt+0x360>
   11adc:	movw	r0, #47057	; 0xb7d1
   11ae0:	movt	r0, #1
   11ae4:	movw	r1, #55996	; 0xdabc
   11ae8:	movt	r1, #2
   11aec:	pop	{r4, r5, r6, r7, fp, lr}
   11af0:	b	11458 <printf@plt>
   11af4:	movw	r6, #54068	; 0xd334
   11af8:	mov	r4, r1
   11afc:	cmp	r0, #2
   11b00:	movt	r6, #2
   11b04:	bne	11b50 <__assert_fail@plt+0x3bc>
   11b08:	ldr	r1, [r6]
   11b0c:	ldr	r5, [r4, #4]
   11b10:	cmp	r1, #0
   11b14:	beq	11b40 <__assert_fail@plt+0x3ac>
   11b18:	add	r7, r6, #4
   11b1c:	mov	r0, r5
   11b20:	bl	11440 <strcmp@plt>
   11b24:	cmp	r0, #0
   11b28:	beq	11bbc <__assert_fail@plt+0x428>
   11b2c:	ldr	r1, [r7, #4]
   11b30:	add	r0, r7, #8
   11b34:	mov	r7, r0
   11b38:	cmp	r1, #0
   11b3c:	bne	11b1c <__assert_fail@plt+0x388>
   11b40:	movw	r0, #47091	; 0xb7f3
   11b44:	mov	r1, r5
   11b48:	movt	r0, #1
   11b4c:	bl	11458 <printf@plt>
   11b50:	ldr	r1, [r4]
   11b54:	movw	r0, #47109	; 0xb805
   11b58:	movt	r0, #1
   11b5c:	bl	11458 <printf@plt>
   11b60:	ldr	r2, [r6]
   11b64:	cmp	r2, #0
   11b68:	beq	11bac <__assert_fail@plt+0x418>
   11b6c:	movw	r4, #49168	; 0xc010
   11b70:	movw	r5, #47121	; 0xb811
   11b74:	movw	r7, #47126	; 0xb816
   11b78:	add	r6, r6, #8
   11b7c:	movt	r4, #1
   11b80:	movt	r5, #1
   11b84:	movt	r7, #1
   11b88:	mov	r0, r5
   11b8c:	mov	r1, r4
   11b90:	bl	11458 <printf@plt>
   11b94:	ldrb	r0, [r4]
   11b98:	ldr	r2, [r6], #8
   11b9c:	cmp	r0, #32
   11ba0:	moveq	r4, r7
   11ba4:	cmp	r2, #0
   11ba8:	bne	11b88 <__assert_fail@plt+0x3f4>
   11bac:	movw	r0, #48115	; 0xbbf3
   11bb0:	movt	r0, #1
   11bb4:	pop	{r4, r5, r6, r7, fp, lr}
   11bb8:	b	115a8 <puts@plt>
   11bbc:	ldr	r1, [r7]
   11bc0:	movw	r0, #55996	; 0xdabc
   11bc4:	movt	r0, #2
   11bc8:	bl	11560 <strcpy@plt>
   11bcc:	movw	r0, #54372	; 0xd464
   11bd0:	movt	r0, #2
   11bd4:	ldr	r0, [r0]
   11bd8:	cmp	r0, #0
   11bdc:	beq	11bec <__assert_fail@plt+0x458>
   11be0:	movw	r0, #47750	; 0xba86
   11be4:	movt	r0, #1
   11be8:	b	11ae4 <__assert_fail@plt+0x350>
   11bec:	pop	{r4, r5, r6, r7, fp, pc}
   11bf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bf4:	add	fp, sp, #28
   11bf8:	sub	sp, sp, #12
   11bfc:	mov	r4, r1
   11c00:	cmp	r0, #1
   11c04:	bgt	11d2c <__assert_fail@plt+0x598>
   11c08:	movw	r5, #56028	; 0xdadc
   11c0c:	movw	r0, #25971	; 0x6573
   11c10:	mov	r6, #0
   11c14:	movt	r5, #2
   11c18:	movt	r0, #25710	; 0x646e
   11c1c:	str	r0, [r5]
   11c20:	mov	r0, r5
   11c24:	strb	r6, [r5, #4]
   11c28:	bl	11614 <strlen@plt>
   11c2c:	add	r0, r5, r0
   11c30:	mov	r1, #32
   11c34:	strh	r1, [r0]
   11c38:	movw	r0, #48651	; 0xbe0b
   11c3c:	movw	r1, #47135	; 0xb81f
   11c40:	movt	r0, #1
   11c44:	movt	r1, #1
   11c48:	bl	11458 <printf@plt>
   11c4c:	movw	r0, #54344	; 0xd448
   11c50:	mov	r1, #195	; 0xc3
   11c54:	movt	r0, #2
   11c58:	ldr	r2, [r0]
   11c5c:	add	r0, r5, #5
   11c60:	bl	114b8 <fgets@plt>
   11c64:	cmp	r0, #0
   11c68:	beq	11e44 <__assert_fail@plt+0x6b0>
   11c6c:	movw	r7, #55988	; 0xdab4
   11c70:	movt	r7, #2
   11c74:	str	r6, [r7]
   11c78:	ldrb	r6, [r5]
   11c7c:	cmp	r6, #0
   11c80:	beq	11e94 <__assert_fail@plt+0x700>
   11c84:	movw	r4, #55496	; 0xd8c8
   11c88:	movt	r4, #2
   11c8c:	bl	115f0 <__ctype_b_loc@plt>
   11c90:	mov	r1, #0
   11c94:	ldr	r2, [r0]
   11c98:	uxtb	r3, r6
   11c9c:	add	r3, r2, r3, lsl #1
   11ca0:	ldrb	r3, [r3, #1]
   11ca4:	tst	r3, #32
   11ca8:	beq	11cc8 <__assert_fail@plt+0x534>
   11cac:	ldrb	r3, [r5, #1]!
   11cb0:	add	r6, r2, r3, lsl #1
   11cb4:	ldrb	r6, [r6, #1]
   11cb8:	tst	r6, #32
   11cbc:	bne	11cac <__assert_fail@plt+0x518>
   11cc0:	cmp	r3, #0
   11cc4:	beq	11d0c <__assert_fail@plt+0x578>
   11cc8:	ldr	r2, [r7]
   11ccc:	str	r5, [r4], #4
   11cd0:	add	r9, r2, #1
   11cd4:	str	r9, [r7]
   11cd8:	ldrb	r2, [r5]
   11cdc:	cmp	r2, #0
   11ce0:	beq	11d10 <__assert_fail@plt+0x57c>
   11ce4:	ldr	r3, [r0]
   11ce8:	add	r5, r5, #1
   11cec:	add	r2, r3, r2, lsl #1
   11cf0:	ldrb	r2, [r2, #1]
   11cf4:	tst	r2, #32
   11cf8:	beq	11cd8 <__assert_fail@plt+0x544>
   11cfc:	strb	r1, [r5, #-1]
   11d00:	ldrb	r6, [r5]
   11d04:	cmp	r6, #0
   11d08:	bne	11c94 <__assert_fail@plt+0x500>
   11d0c:	ldr	r9, [r7]
   11d10:	mov	r0, #0
   11d14:	cmp	r9, #1
   11d18:	str	r0, [r4]
   11d1c:	ble	11ea4 <__assert_fail@plt+0x710>
   11d20:	movw	r4, #55496	; 0xd8c8
   11d24:	movt	r4, #2
   11d28:	b	11d30 <__assert_fail@plt+0x59c>
   11d2c:	mov	r9, r0
   11d30:	sub	r5, r9, #1
   11d34:	mov	r1, #58	; 0x3a
   11d38:	ldr	r7, [r4, r5, lsl #2]
   11d3c:	mov	r0, r7
   11d40:	bl	11620 <strchr@plt>
   11d44:	cmp	r0, #0
   11d48:	beq	11dd0 <__assert_fail@plt+0x63c>
   11d4c:	mov	r8, r0
   11d50:	mov	sl, r5
   11d54:	cmp	r5, #2
   11d58:	blt	11d88 <__assert_fail@plt+0x5f4>
   11d5c:	sub	r5, r9, #2
   11d60:	mov	r6, #0
   11d64:	add	r0, r4, r6, lsl #2
   11d68:	mov	r1, #58	; 0x3a
   11d6c:	ldr	r0, [r0, #4]
   11d70:	bl	11620 <strchr@plt>
   11d74:	cmp	r0, #0
   11d78:	bne	11ed8 <__assert_fail@plt+0x744>
   11d7c:	add	r6, r6, #1
   11d80:	cmp	r5, r6
   11d84:	bne	11d64 <__assert_fail@plt+0x5d0>
   11d88:	ldrb	r0, [r7]
   11d8c:	cmp	r0, #91	; 0x5b
   11d90:	bne	11e68 <__assert_fail@plt+0x6d4>
   11d94:	mov	r0, r7
   11d98:	mov	r1, #93	; 0x5d
   11d9c:	bl	11620 <strchr@plt>
   11da0:	cmp	r0, #0
   11da4:	beq	1202c <__assert_fail@plt+0x898>
   11da8:	mov	r1, #0
   11dac:	mov	r5, sl
   11db0:	strb	r1, [r0]
   11db4:	ldrb	r2, [r0, #1]
   11db8:	ldr	r1, [r4, sl, lsl #2]
   11dbc:	cmp	r2, #58	; 0x3a
   11dc0:	bne	120c8 <__assert_fail@plt+0x934>
   11dc4:	add	r8, r0, #2
   11dc8:	add	r7, r1, #1
   11dcc:	b	11e80 <__assert_fail@plt+0x6ec>
   11dd0:	mov	r8, r7
   11dd4:	movw	r0, #54368	; 0xd460
   11dd8:	movt	r0, #2
   11ddc:	ldrb	r0, [r0]
   11de0:	cmp	r0, #0
   11de4:	beq	11e54 <__assert_fail@plt+0x6c0>
   11de8:	cmp	r9, #3
   11dec:	bgt	11ef8 <__assert_fail@plt+0x764>
   11df0:	cmp	r9, #2
   11df4:	bne	12034 <__assert_fail@plt+0x8a0>
   11df8:	ldrb	r0, [r8]
   11dfc:	mov	r4, r8
   11e00:	cmp	r0, #0
   11e04:	beq	12038 <__assert_fail@plt+0x8a4>
   11e08:	mov	r4, #0
   11e0c:	mov	r0, r8
   11e10:	mov	r1, #47	; 0x2f
   11e14:	bl	116e0 <strrchr@plt>
   11e18:	cmp	r0, #0
   11e1c:	beq	11e3c <__assert_fail@plt+0x6a8>
   11e20:	ldrb	r1, [r0, #1]
   11e24:	cmp	r1, #0
   11e28:	bne	12100 <__assert_fail@plt+0x96c>
   11e2c:	strb	r4, [r0]
   11e30:	ldrb	r0, [r8]
   11e34:	cmp	r0, #0
   11e38:	bne	11e0c <__assert_fail@plt+0x678>
   11e3c:	mov	r4, r8
   11e40:	b	12038 <__assert_fail@plt+0x8a4>
   11e44:	movw	r5, #47130	; 0xb81a
   11e48:	movt	r5, #1
   11e4c:	str	r5, [r4]
   11e50:	b	11eb0 <__assert_fail@plt+0x71c>
   11e54:	movw	r0, #48118	; 0xbbf6
   11e58:	movt	r0, #1
   11e5c:	sub	sp, fp, #28
   11e60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e64:	b	115a8 <puts@plt>
   11e68:	mov	r0, #0
   11e6c:	mov	r5, sl
   11e70:	strb	r0, [r8], #1
   11e74:	ldrb	r0, [r7]
   11e78:	cmp	r0, #0
   11e7c:	beq	11dd4 <__assert_fail@plt+0x640>
   11e80:	mov	r0, r7
   11e84:	bl	130d4 <__assert_fail@plt+0x1940>
   11e88:	cmp	r0, #0
   11e8c:	bne	1202c <__assert_fail@plt+0x898>
   11e90:	b	11dd4 <__assert_fail@plt+0x640>
   11e94:	movw	r0, #55496	; 0xd8c8
   11e98:	mov	r1, #0
   11e9c:	movt	r0, #2
   11ea0:	str	r1, [r0]
   11ea4:	movw	r0, #55496	; 0xd8c8
   11ea8:	movt	r0, #2
   11eac:	ldr	r5, [r0]
   11eb0:	movw	r0, #47766	; 0xba96
   11eb4:	mov	r1, r5
   11eb8:	movt	r0, #1
   11ebc:	bl	11458 <printf@plt>
   11ec0:	movw	r0, #47802	; 0xbaba
   11ec4:	mov	r1, r5
   11ec8:	movt	r0, #1
   11ecc:	sub	sp, fp, #28
   11ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ed4:	b	11458 <printf@plt>
   11ed8:	ldr	r4, [r4]
   11edc:	movw	r0, #47766	; 0xba96
   11ee0:	movt	r0, #1
   11ee4:	mov	r1, r4
   11ee8:	bl	11458 <printf@plt>
   11eec:	movw	r0, #47802	; 0xbaba
   11ef0:	mov	r1, r4
   11ef4:	b	11ec8 <__assert_fail@plt+0x734>
   11ef8:	mov	r0, r8
   11efc:	bl	11614 <strlen@plt>
   11f00:	mov	r2, #47	; 0x2f
   11f04:	mov	r1, r8
   11f08:	cmp	r5, #2
   11f0c:	strb	r2, [r1, r0]!
   11f10:	blt	1202c <__assert_fail@plt+0x898>
   11f14:	movw	r6, #55996	; 0xdabc
   11f18:	add	r0, r1, #1
   11f1c:	mov	r9, #1
   11f20:	mov	sl, #0
   11f24:	movt	r6, #2
   11f28:	str	r0, [sp, #8]
   11f2c:	ldr	r7, [r4, r9, lsl #2]
   11f30:	ldrb	r0, [r7]
   11f34:	cmp	r0, #0
   11f38:	beq	11f68 <__assert_fail@plt+0x7d4>
   11f3c:	mov	r0, r7
   11f40:	mov	r1, #47	; 0x2f
   11f44:	bl	116e0 <strrchr@plt>
   11f48:	cmp	r0, #0
   11f4c:	beq	11f68 <__assert_fail@plt+0x7d4>
   11f50:	ldrb	r1, [r0, #1]
   11f54:	cmp	r1, #0
   11f58:	bne	11f64 <__assert_fail@plt+0x7d0>
   11f5c:	strb	sl, [r0]
   11f60:	b	11f30 <__assert_fail@plt+0x79c>
   11f64:	add	r7, r0, #1
   11f68:	ldr	r0, [sp, #8]
   11f6c:	mov	r1, r7
   11f70:	bl	11560 <strcpy@plt>
   11f74:	ldr	r0, [r4, r9, lsl #2]
   11f78:	mov	r1, #0
   11f7c:	bl	11590 <open64@plt>
   11f80:	cmn	r0, #1
   11f84:	ble	12000 <__assert_fail@plt+0x86c>
   11f88:	mov	r7, r0
   11f8c:	movw	r0, #54372	; 0xd464
   11f90:	movt	r0, #2
   11f94:	ldr	r0, [r0]
   11f98:	cmp	r0, #0
   11f9c:	beq	11fc4 <__assert_fail@plt+0x830>
   11fa0:	movw	r0, #55992	; 0xdab8
   11fa4:	ldr	r1, [r4, r9, lsl #2]
   11fa8:	mov	r3, r8
   11fac:	movt	r0, #2
   11fb0:	ldr	r2, [r0]
   11fb4:	movw	r0, #47150	; 0xb82e
   11fb8:	str	r6, [sp]
   11fbc:	movt	r0, #1
   11fc0:	bl	11458 <printf@plt>
   11fc4:	movw	r0, #54360	; 0xd458
   11fc8:	movw	r1, #54376	; 0xd468
   11fcc:	mov	r2, r6
   11fd0:	movt	r0, #2
   11fd4:	movt	r1, #2
   11fd8:	ldrh	r0, [r0]
   11fdc:	rev16	r0, r0
   11fe0:	strh	r0, [r1, #2]
   11fe4:	mov	r0, r7
   11fe8:	mov	r1, r8
   11fec:	bl	13314 <__assert_fail@plt+0x1b80>
   11ff0:	add	r9, r9, #1
   11ff4:	cmp	r9, r5
   11ff8:	bne	11f2c <__assert_fail@plt+0x798>
   11ffc:	b	1202c <__assert_fail@plt+0x898>
   12000:	movw	r0, #54336	; 0xd440
   12004:	mov	r1, #6
   12008:	mov	r2, #1
   1200c:	movt	r0, #2
   12010:	ldr	r3, [r0]
   12014:	movw	r0, #47143	; 0xb827
   12018:	movt	r0, #1
   1201c:	bl	11548 <fwrite@plt>
   12020:	ldr	r0, [r4, r9, lsl #2]
   12024:	bl	1153c <perror@plt>
   12028:	b	11ff0 <__assert_fail@plt+0x85c>
   1202c:	sub	sp, fp, #28
   12030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12034:	ldr	r4, [r4, #4]
   12038:	mov	r0, r4
   1203c:	mov	r1, #0
   12040:	bl	11590 <open64@plt>
   12044:	cmn	r0, #1
   12048:	ble	120d0 <__assert_fail@plt+0x93c>
   1204c:	mov	r6, r0
   12050:	movw	r0, #54372	; 0xd464
   12054:	movt	r0, #2
   12058:	ldr	r0, [r0]
   1205c:	cmp	r0, #0
   12060:	beq	12090 <__assert_fail@plt+0x8fc>
   12064:	movw	r0, #55992	; 0xdab8
   12068:	mov	r1, r4
   1206c:	mov	r3, r8
   12070:	movt	r0, #2
   12074:	ldr	r2, [r0]
   12078:	movw	r0, #55996	; 0xdabc
   1207c:	movt	r0, #2
   12080:	str	r0, [sp]
   12084:	movw	r0, #47150	; 0xb82e
   12088:	movt	r0, #1
   1208c:	bl	11458 <printf@plt>
   12090:	movw	r0, #54360	; 0xd458
   12094:	movw	r1, #54376	; 0xd468
   12098:	movw	r2, #55996	; 0xdabc
   1209c:	movt	r0, #2
   120a0:	movt	r1, #2
   120a4:	movt	r2, #2
   120a8:	ldrh	r0, [r0]
   120ac:	rev16	r0, r0
   120b0:	strh	r0, [r1, #2]
   120b4:	mov	r0, r6
   120b8:	mov	r1, r8
   120bc:	sub	sp, fp, #28
   120c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120c4:	b	13314 <__assert_fail@plt+0x1b80>
   120c8:	mov	r8, r1
   120cc:	b	11dd4 <__assert_fail@plt+0x640>
   120d0:	movw	r0, #54336	; 0xd440
   120d4:	mov	r1, #6
   120d8:	mov	r2, #1
   120dc:	movt	r0, #2
   120e0:	ldr	r3, [r0]
   120e4:	movw	r0, #47143	; 0xb827
   120e8:	movt	r0, #1
   120ec:	bl	11548 <fwrite@plt>
   120f0:	mov	r0, r4
   120f4:	sub	sp, fp, #28
   120f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120fc:	b	1153c <perror@plt>
   12100:	add	r4, r0, #1
   12104:	b	12038 <__assert_fail@plt+0x8a4>
   12108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1210c:	add	fp, sp, #28
   12110:	sub	sp, sp, #4
   12114:	mov	r8, r1
   12118:	cmp	r0, #1
   1211c:	bgt	12244 <__assert_fail@plt+0xab0>
   12120:	movw	r6, #56028	; 0xdadc
   12124:	movw	r0, #25959	; 0x6567
   12128:	movt	r6, #2
   1212c:	movt	r0, #116	; 0x74
   12130:	str	r0, [r6]
   12134:	mov	r0, r6
   12138:	bl	11614 <strlen@plt>
   1213c:	add	r0, r6, r0
   12140:	mov	r1, #32
   12144:	strh	r1, [r0]
   12148:	movw	r0, #48651	; 0xbe0b
   1214c:	movw	r1, #47176	; 0xb848
   12150:	movt	r0, #1
   12154:	movt	r1, #1
   12158:	bl	11458 <printf@plt>
   1215c:	movw	r0, #54344	; 0xd448
   12160:	mov	r1, #196	; 0xc4
   12164:	movt	r0, #2
   12168:	ldr	r2, [r0]
   1216c:	add	r0, r6, #4
   12170:	bl	114b8 <fgets@plt>
   12174:	cmp	r0, #0
   12178:	beq	12464 <__assert_fail@plt+0xcd0>
   1217c:	ldrb	r5, [r6]
   12180:	movw	r7, #55988	; 0xdab4
   12184:	mov	r8, #0
   12188:	movt	r7, #2
   1218c:	str	r8, [r7]
   12190:	cmp	r5, #0
   12194:	beq	12494 <__assert_fail@plt+0xd00>
   12198:	movw	r4, #55496	; 0xd8c8
   1219c:	movt	r4, #2
   121a0:	bl	115f0 <__ctype_b_loc@plt>
   121a4:	ldr	r1, [r0]
   121a8:	uxtb	r2, r5
   121ac:	add	r2, r1, r2, lsl #1
   121b0:	ldrb	r2, [r2, #1]
   121b4:	tst	r2, #32
   121b8:	beq	121d8 <__assert_fail@plt+0xa44>
   121bc:	ldrb	r2, [r6, #1]!
   121c0:	add	r3, r1, r2, lsl #1
   121c4:	ldrb	r3, [r3, #1]
   121c8:	tst	r3, #32
   121cc:	bne	121bc <__assert_fail@plt+0xa28>
   121d0:	cmp	r2, #0
   121d4:	beq	1221c <__assert_fail@plt+0xa88>
   121d8:	ldr	r1, [r7]
   121dc:	str	r6, [r4], #4
   121e0:	add	sl, r1, #1
   121e4:	str	sl, [r7]
   121e8:	ldrb	r1, [r6]
   121ec:	cmp	r1, #0
   121f0:	beq	12220 <__assert_fail@plt+0xa8c>
   121f4:	ldr	r2, [r0]
   121f8:	add	r6, r6, #1
   121fc:	add	r1, r2, r1, lsl #1
   12200:	ldrb	r1, [r1, #1]
   12204:	tst	r1, #32
   12208:	beq	121e8 <__assert_fail@plt+0xa54>
   1220c:	strb	r8, [r6, #-1]
   12210:	ldrb	r5, [r6]
   12214:	cmp	r5, #0
   12218:	bne	121a4 <__assert_fail@plt+0xa10>
   1221c:	ldr	sl, [r7]
   12220:	mov	r0, #0
   12224:	cmp	sl, #1
   12228:	str	r0, [r4]
   1222c:	ble	124a0 <__assert_fail@plt+0xd0c>
   12230:	movw	r8, #55496	; 0xd8c8
   12234:	movt	r8, #2
   12238:	cmp	sl, #2
   1223c:	bge	12250 <__assert_fail@plt+0xabc>
   12240:	b	12288 <__assert_fail@plt+0xaf4>
   12244:	mov	sl, r0
   12248:	cmp	sl, #2
   1224c:	blt	12288 <__assert_fail@plt+0xaf4>
   12250:	movw	r0, #54368	; 0xd460
   12254:	movt	r0, #2
   12258:	ldrb	r0, [r0]
   1225c:	cmp	r0, #0
   12260:	bne	12288 <__assert_fail@plt+0xaf4>
   12264:	mov	r6, #1
   12268:	ldr	r0, [r8, r6, lsl #2]
   1226c:	mov	r1, #58	; 0x3a
   12270:	bl	11620 <strchr@plt>
   12274:	cmp	r0, #0
   12278:	beq	12474 <__assert_fail@plt+0xce0>
   1227c:	add	r6, r6, #1
   12280:	cmp	sl, r6
   12284:	bne	12268 <__assert_fail@plt+0xad4>
   12288:	cmp	sl, #2
   1228c:	blt	1245c <__assert_fail@plt+0xcc8>
   12290:	mov	r9, #1
   12294:	mov	r4, #0
   12298:	b	122dc <__assert_fail@plt+0xb48>
   1229c:	movw	r0, #54360	; 0xd458
   122a0:	movw	r1, #54376	; 0xd468
   122a4:	mov	r2, r4
   122a8:	movt	r0, #2
   122ac:	movt	r1, #2
   122b0:	ldrh	r0, [r0]
   122b4:	rev16	r0, r0
   122b8:	strh	r0, [r1, #2]
   122bc:	mov	r0, r8
   122c0:	mov	r1, r7
   122c4:	bl	13790 <__assert_fail@plt+0x1ffc>
   122c8:	mov	r8, r5
   122cc:	mov	r4, #0
   122d0:	add	r9, r9, #1
   122d4:	cmp	r9, sl
   122d8:	beq	1245c <__assert_fail@plt+0xcc8>
   122dc:	ldr	r6, [r8, r9, lsl #2]
   122e0:	mov	r1, #58	; 0x3a
   122e4:	mov	r0, r6
   122e8:	bl	11620 <strchr@plt>
   122ec:	cmp	r0, #0
   122f0:	beq	12344 <__assert_fail@plt+0xbb0>
   122f4:	mov	r7, r0
   122f8:	cmp	r0, r6
   122fc:	beq	12354 <__assert_fail@plt+0xbc0>
   12300:	ldrb	r0, [r6]
   12304:	cmp	r0, #91	; 0x5b
   12308:	bne	12364 <__assert_fail@plt+0xbd0>
   1230c:	mov	r0, r6
   12310:	mov	r1, #93	; 0x5d
   12314:	bl	11620 <strchr@plt>
   12318:	cmp	r0, #0
   1231c:	beq	12378 <__assert_fail@plt+0xbe4>
   12320:	mov	r1, r0
   12324:	strb	r4, [r1], #2
   12328:	ldrb	r2, [r0, #1]!
   1232c:	cmp	r2, #58	; 0x3a
   12330:	moveq	r0, r1
   12334:	ldr	r1, [r8, r9, lsl #2]
   12338:	mov	r7, r0
   1233c:	add	r6, r1, #1
   12340:	b	12368 <__assert_fail@plt+0xbd4>
   12344:	mov	r7, r6
   12348:	cmp	sl, #3
   1234c:	bgt	12380 <__assert_fail@plt+0xbec>
   12350:	b	124d4 <__assert_fail@plt+0xd40>
   12354:	add	r7, r6, #1
   12358:	cmp	sl, #3
   1235c:	bgt	12380 <__assert_fail@plt+0xbec>
   12360:	b	124d4 <__assert_fail@plt+0xd40>
   12364:	strb	r4, [r7], #1
   12368:	mov	r0, r6
   1236c:	bl	130d4 <__assert_fail@plt+0x1940>
   12370:	cmp	r0, #0
   12374:	bne	122d0 <__assert_fail@plt+0xb3c>
   12378:	cmp	sl, #3
   1237c:	ble	124d4 <__assert_fail@plt+0xd40>
   12380:	ldrb	r0, [r7]
   12384:	mov	r6, r7
   12388:	cmp	r0, #0
   1238c:	beq	123cc <__assert_fail@plt+0xc38>
   12390:	mov	r0, r7
   12394:	mov	r1, #47	; 0x2f
   12398:	bl	116e0 <strrchr@plt>
   1239c:	cmp	r0, #0
   123a0:	beq	123c0 <__assert_fail@plt+0xc2c>
   123a4:	ldrb	r1, [r0, #1]
   123a8:	cmp	r1, #0
   123ac:	bne	123c8 <__assert_fail@plt+0xc34>
   123b0:	strb	r4, [r0]
   123b4:	ldrb	r0, [r7]
   123b8:	cmp	r0, #0
   123bc:	bne	12390 <__assert_fail@plt+0xbfc>
   123c0:	mov	r6, r7
   123c4:	b	123cc <__assert_fail@plt+0xc38>
   123c8:	add	r6, r0, #1
   123cc:	mov	r0, r6
   123d0:	mov	r1, #420	; 0x1a4
   123d4:	mov	r5, r8
   123d8:	bl	11578 <creat64@plt>
   123dc:	cmn	r0, #1
   123e0:	ble	1242c <__assert_fail@plt+0xc98>
   123e4:	mov	r8, r0
   123e8:	movw	r0, #54372	; 0xd464
   123ec:	movw	r4, #55996	; 0xdabc
   123f0:	movt	r0, #2
   123f4:	movt	r4, #2
   123f8:	ldr	r0, [r0]
   123fc:	cmp	r0, #0
   12400:	beq	1229c <__assert_fail@plt+0xb08>
   12404:	movw	r0, #55992	; 0xdab8
   12408:	mov	r2, r7
   1240c:	mov	r3, r6
   12410:	movt	r0, #2
   12414:	ldr	r1, [r0]
   12418:	movw	r0, #47185	; 0xb851
   1241c:	str	r4, [sp]
   12420:	movt	r0, #1
   12424:	bl	11458 <printf@plt>
   12428:	b	1229c <__assert_fail@plt+0xb08>
   1242c:	movw	r0, #54336	; 0xd440
   12430:	mov	r1, #6
   12434:	mov	r2, #1
   12438:	movt	r0, #2
   1243c:	ldr	r3, [r0]
   12440:	movw	r0, #47143	; 0xb827
   12444:	movt	r0, #1
   12448:	bl	11548 <fwrite@plt>
   1244c:	mov	r0, r6
   12450:	bl	1153c <perror@plt>
   12454:	mov	r8, r5
   12458:	b	122d0 <__assert_fail@plt+0xb3c>
   1245c:	sub	sp, fp, #28
   12460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12464:	movw	r5, #46870	; 0xb716
   12468:	movt	r5, #1
   1246c:	str	r5, [r8]
   12470:	b	124ac <__assert_fail@plt+0xd18>
   12474:	ldr	r4, [r8]
   12478:	movw	r0, #47854	; 0xbaee
   1247c:	movt	r0, #1
   12480:	mov	r1, r4
   12484:	bl	11458 <printf@plt>
   12488:	movw	r0, #47898	; 0xbb1a
   1248c:	mov	r1, r4
   12490:	b	124c4 <__assert_fail@plt+0xd30>
   12494:	movw	r0, #55496	; 0xd8c8
   12498:	movt	r0, #2
   1249c:	str	r8, [r0]
   124a0:	movw	r0, #55496	; 0xd8c8
   124a4:	movt	r0, #2
   124a8:	ldr	r5, [r0]
   124ac:	movw	r0, #47854	; 0xbaee
   124b0:	mov	r1, r5
   124b4:	movt	r0, #1
   124b8:	bl	11458 <printf@plt>
   124bc:	movw	r0, #47898	; 0xbb1a
   124c0:	mov	r1, r5
   124c4:	movt	r0, #1
   124c8:	sub	sp, fp, #28
   124cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124d0:	b	11458 <printf@plt>
   124d4:	bne	124e8 <__assert_fail@plt+0xd54>
   124d8:	ldr	r4, [r8, #8]
   124dc:	movw	r6, #55996	; 0xdabc
   124e0:	movt	r6, #2
   124e4:	b	12540 <__assert_fail@plt+0xdac>
   124e8:	ldrb	r0, [r7]
   124ec:	movw	r6, #55996	; 0xdabc
   124f0:	mov	r4, r7
   124f4:	movt	r6, #2
   124f8:	cmp	r0, #0
   124fc:	beq	12540 <__assert_fail@plt+0xdac>
   12500:	mov	r4, #0
   12504:	mov	r0, r7
   12508:	mov	r1, #47	; 0x2f
   1250c:	bl	116e0 <strrchr@plt>
   12510:	cmp	r0, #0
   12514:	beq	12534 <__assert_fail@plt+0xda0>
   12518:	ldrb	r1, [r0, #1]
   1251c:	cmp	r1, #0
   12520:	bne	1253c <__assert_fail@plt+0xda8>
   12524:	strb	r4, [r0]
   12528:	ldrb	r0, [r7]
   1252c:	cmp	r0, #0
   12530:	bne	12504 <__assert_fail@plt+0xd70>
   12534:	mov	r4, r7
   12538:	b	12540 <__assert_fail@plt+0xdac>
   1253c:	add	r4, r0, #1
   12540:	mov	r0, r4
   12544:	mov	r1, #420	; 0x1a4
   12548:	bl	11578 <creat64@plt>
   1254c:	cmn	r0, #1
   12550:	ble	125c8 <__assert_fail@plt+0xe34>
   12554:	mov	r5, r0
   12558:	movw	r0, #54372	; 0xd464
   1255c:	movt	r0, #2
   12560:	ldr	r0, [r0]
   12564:	cmp	r0, #0
   12568:	beq	12590 <__assert_fail@plt+0xdfc>
   1256c:	movw	r0, #55992	; 0xdab8
   12570:	mov	r2, r7
   12574:	mov	r3, r4
   12578:	movt	r0, #2
   1257c:	ldr	r1, [r0]
   12580:	movw	r0, #47185	; 0xb851
   12584:	str	r6, [sp]
   12588:	movt	r0, #1
   1258c:	bl	11458 <printf@plt>
   12590:	movw	r0, #54360	; 0xd458
   12594:	movw	r1, #54376	; 0xd468
   12598:	movw	r2, #55996	; 0xdabc
   1259c:	movt	r0, #2
   125a0:	movt	r1, #2
   125a4:	movt	r2, #2
   125a8:	ldrh	r0, [r0]
   125ac:	rev16	r0, r0
   125b0:	strh	r0, [r1, #2]
   125b4:	mov	r0, r5
   125b8:	mov	r1, r7
   125bc:	sub	sp, fp, #28
   125c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125c4:	b	13790 <__assert_fail@plt+0x1ffc>
   125c8:	movw	r0, #54336	; 0xd440
   125cc:	mov	r1, #6
   125d0:	mov	r2, #1
   125d4:	movt	r0, #2
   125d8:	ldr	r3, [r0]
   125dc:	movw	r0, #47143	; 0xb827
   125e0:	movt	r0, #1
   125e4:	bl	11548 <fwrite@plt>
   125e8:	mov	r0, r4
   125ec:	sub	sp, fp, #28
   125f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125f4:	b	1153c <perror@plt>
   125f8:	push	{fp, lr}
   125fc:	mov	fp, sp
   12600:	mov	r0, #0
   12604:	bl	115fc <exit@plt>
   12608:	movw	r0, #54372	; 0xd464
   1260c:	movt	r0, #2
   12610:	ldr	r2, [r0]
   12614:	clz	r1, r2
   12618:	cmp	r2, #0
   1261c:	lsr	r1, r1, #5
   12620:	str	r1, [r0]
   12624:	movw	r0, #49781	; 0xc275
   12628:	movw	r1, #47309	; 0xb8cd
   1262c:	movt	r0, #1
   12630:	movt	r1, #1
   12634:	moveq	r1, r0
   12638:	movw	r0, #47449	; 0xb959
   1263c:	movt	r0, #1
   12640:	b	11458 <printf@plt>
   12644:	movw	r0, #54504	; 0xd4e8
   12648:	movt	r0, #2
   1264c:	ldr	r2, [r0]
   12650:	clz	r1, r2
   12654:	cmp	r2, #0
   12658:	lsr	r1, r1, #5
   1265c:	str	r1, [r0]
   12660:	movw	r0, #49781	; 0xc275
   12664:	movw	r1, #47309	; 0xb8cd
   12668:	movt	r0, #1
   1266c:	movt	r1, #1
   12670:	moveq	r1, r0
   12674:	movw	r0, #47429	; 0xb945
   12678:	movt	r0, #1
   1267c:	b	11458 <printf@plt>
   12680:	push	{fp, lr}
   12684:	mov	fp, sp
   12688:	movw	r0, #54368	; 0xd460
   1268c:	movt	r0, #2
   12690:	ldrb	r0, [r0]
   12694:	cmp	r0, #1
   12698:	bne	126b8 <__assert_fail@plt+0xf24>
   1269c:	movw	r0, #55992	; 0xdab8
   126a0:	movt	r0, #2
   126a4:	ldr	r1, [r0]
   126a8:	movw	r0, #47257	; 0xb899
   126ac:	movt	r0, #1
   126b0:	bl	11458 <printf@plt>
   126b4:	b	126c4 <__assert_fail@plt+0xf30>
   126b8:	movw	r0, #48147	; 0xbc13
   126bc:	movt	r0, #1
   126c0:	bl	115a8 <puts@plt>
   126c4:	movw	r0, #54372	; 0xd464
   126c8:	movw	r1, #47309	; 0xb8cd
   126cc:	movw	r3, #49781	; 0xc275
   126d0:	movt	r0, #2
   126d4:	movt	r3, #1
   126d8:	movt	r1, #1
   126dc:	ldr	r0, [r0]
   126e0:	mov	r2, r3
   126e4:	cmp	r0, #0
   126e8:	movw	r0, #54504	; 0xd4e8
   126ec:	movt	r0, #2
   126f0:	moveq	r2, r1
   126f4:	ldr	r0, [r0]
   126f8:	cmp	r0, #0
   126fc:	movw	r0, #47275	; 0xb8ab
   12700:	moveq	r3, r1
   12704:	movw	r1, #55996	; 0xdabc
   12708:	movt	r0, #1
   1270c:	movt	r1, #2
   12710:	bl	11458 <printf@plt>
   12714:	movw	r0, #54116	; 0xd364
   12718:	movt	r0, #2
   1271c:	ldr	r1, [r0]
   12720:	movw	r0, #54120	; 0xd368
   12724:	movt	r0, #2
   12728:	ldr	r2, [r0]
   1272c:	movw	r0, #47313	; 0xb8d1
   12730:	movt	r0, #1
   12734:	pop	{fp, lr}
   12738:	b	11458 <printf@plt>
   1273c:	movw	r0, #55996	; 0xdabc
   12740:	mov	r1, #116	; 0x74
   12744:	movt	r0, #2
   12748:	strh	r1, [r0, #4]
   1274c:	movw	r1, #25455	; 0x636f
   12750:	movt	r1, #25972	; 0x6574
   12754:	str	r1, [r0]
   12758:	movw	r0, #54372	; 0xd464
   1275c:	movt	r0, #2
   12760:	ldr	r0, [r0]
   12764:	cmp	r0, #0
   12768:	bxeq	lr
   1276c:	movw	r0, #47750	; 0xba86
   12770:	movw	r1, #55996	; 0xdabc
   12774:	movt	r0, #1
   12778:	movt	r1, #2
   1277c:	b	11458 <printf@plt>
   12780:	movw	r0, #48344	; 0xbcd8
   12784:	mov	r1, #0
   12788:	movt	r0, #1
   1278c:	vldr	d16, [r0]
   12790:	movw	r0, #55996	; 0xdabc
   12794:	movt	r0, #2
   12798:	strb	r1, [r0, #8]
   1279c:	vst1.8	{d16}, [r0]
   127a0:	movw	r0, #54372	; 0xd464
   127a4:	movt	r0, #2
   127a8:	ldr	r0, [r0]
   127ac:	cmp	r0, #0
   127b0:	bxeq	lr
   127b4:	movw	r0, #47750	; 0xba86
   127b8:	movw	r1, #55996	; 0xdabc
   127bc:	movt	r0, #1
   127c0:	movt	r1, #2
   127c4:	b	11458 <printf@plt>
   127c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   127cc:	add	fp, sp, #24
   127d0:	mov	r4, r1
   127d4:	cmp	r0, #1
   127d8:	bgt	12918 <__assert_fail@plt+0x1184>
   127dc:	movw	r6, #48360	; 0xbce8
   127e0:	movw	r5, #56028	; 0xdadc
   127e4:	movt	r6, #1
   127e8:	movt	r5, #2
   127ec:	add	r0, r6, #6
   127f0:	vldr	d16, [r6]
   127f4:	vld1.16	{d17}, [r0]
   127f8:	add	r0, r5, #6
   127fc:	vst1.8	{d16}, [r5]
   12800:	vst1.8	{d17}, [r0]
   12804:	mov	r0, r5
   12808:	bl	11614 <strlen@plt>
   1280c:	add	r0, r5, r0
   12810:	mov	r1, #32
   12814:	strh	r1, [r0]
   12818:	movw	r0, #48651	; 0xbe0b
   1281c:	movw	r1, #47216	; 0xb870
   12820:	movt	r0, #1
   12824:	movt	r1, #1
   12828:	bl	11458 <printf@plt>
   1282c:	movw	r0, #54344	; 0xd448
   12830:	mov	r1, #186	; 0xba
   12834:	movt	r0, #2
   12838:	ldr	r2, [r0]
   1283c:	add	r0, r5, #14
   12840:	bl	114b8 <fgets@plt>
   12844:	cmp	r0, #0
   12848:	beq	12950 <__assert_fail@plt+0x11bc>
   1284c:	ldrb	r7, [r5]
   12850:	movw	r4, #55496	; 0xd8c8
   12854:	movw	r9, #55988	; 0xdab4
   12858:	mov	r8, #0
   1285c:	mov	r1, #0
   12860:	movt	r4, #2
   12864:	movt	r9, #2
   12868:	mov	r6, r4
   1286c:	str	r8, [r9]
   12870:	cmp	r7, #0
   12874:	beq	12904 <__assert_fail@plt+0x1170>
   12878:	movw	r6, #55496	; 0xd8c8
   1287c:	movt	r6, #2
   12880:	bl	115f0 <__ctype_b_loc@plt>
   12884:	mov	r2, #0
   12888:	ldr	r1, [r0]
   1288c:	uxtb	r3, r7
   12890:	add	r3, r1, r3, lsl #1
   12894:	ldrb	r3, [r3, #1]
   12898:	tst	r3, #32
   1289c:	beq	128bc <__assert_fail@plt+0x1128>
   128a0:	ldrb	r3, [r5, #1]!
   128a4:	add	r7, r1, r3, lsl #1
   128a8:	ldrb	r7, [r7, #1]
   128ac:	tst	r7, #32
   128b0:	bne	128a0 <__assert_fail@plt+0x110c>
   128b4:	cmp	r3, #0
   128b8:	beq	12900 <__assert_fail@plt+0x116c>
   128bc:	ldr	r1, [r9]
   128c0:	str	r5, [r6], #4
   128c4:	add	r1, r1, #1
   128c8:	str	r1, [r9]
   128cc:	ldrb	r3, [r5]
   128d0:	cmp	r3, #0
   128d4:	beq	12904 <__assert_fail@plt+0x1170>
   128d8:	ldr	r7, [r0]
   128dc:	add	r5, r5, #1
   128e0:	add	r3, r7, r3, lsl #1
   128e4:	ldrb	r3, [r3, #1]
   128e8:	tst	r3, #32
   128ec:	beq	128cc <__assert_fail@plt+0x1138>
   128f0:	strb	r2, [r5, #-1]
   128f4:	ldrb	r7, [r5]
   128f8:	cmp	r7, #0
   128fc:	bne	12888 <__assert_fail@plt+0x10f4>
   12900:	ldr	r1, [r9]
   12904:	str	r8, [r6]
   12908:	cmp	r1, #2
   1290c:	beq	12924 <__assert_fail@plt+0x1190>
   12910:	ldr	r6, [r4]
   12914:	b	12954 <__assert_fail@plt+0x11c0>
   12918:	mov	r1, r0
   1291c:	cmp	r1, #2
   12920:	bne	12910 <__assert_fail@plt+0x117c>
   12924:	ldr	r4, [r4, #4]
   12928:	mov	r1, #0
   1292c:	mov	r2, #10
   12930:	mov	r0, r4
   12934:	bl	1144c <strtol@plt>
   12938:	cmn	r0, #1
   1293c:	ble	12968 <__assert_fail@plt+0x11d4>
   12940:	movw	r1, #54116	; 0xd364
   12944:	movt	r1, #2
   12948:	str	r0, [r1]
   1294c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12950:	str	r6, [r4]
   12954:	movw	r0, #47225	; 0xb879
   12958:	mov	r1, r6
   1295c:	movt	r0, #1
   12960:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12964:	b	11458 <printf@plt>
   12968:	movw	r0, #47242	; 0xb88a
   1296c:	mov	r1, r4
   12970:	movt	r0, #1
   12974:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12978:	b	11458 <printf@plt>
   1297c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12980:	add	fp, sp, #24
   12984:	mov	r4, r1
   12988:	cmp	r0, #1
   1298c:	bgt	12ac0 <__assert_fail@plt+0x132c>
   12990:	movw	r6, #48376	; 0xbcf8
   12994:	movw	r5, #56028	; 0xdadc
   12998:	movt	r6, #1
   1299c:	movt	r5, #2
   129a0:	vld1.64	{d16-d17}, [r6]
   129a4:	mov	r7, r5
   129a8:	mov	r0, r5
   129ac:	vst1.8	{d16-d17}, [r7]!
   129b0:	bl	11614 <strlen@plt>
   129b4:	add	r0, r5, r0
   129b8:	mov	r1, #32
   129bc:	strh	r1, [r0]
   129c0:	movw	r0, #48651	; 0xbe0b
   129c4:	movw	r1, #47216	; 0xb870
   129c8:	movt	r0, #1
   129cc:	movt	r1, #1
   129d0:	bl	11458 <printf@plt>
   129d4:	movw	r0, #54344	; 0xd448
   129d8:	mov	r1, #184	; 0xb8
   129dc:	movt	r0, #2
   129e0:	ldr	r2, [r0]
   129e4:	mov	r0, r7
   129e8:	bl	114b8 <fgets@plt>
   129ec:	cmp	r0, #0
   129f0:	beq	12af8 <__assert_fail@plt+0x1364>
   129f4:	ldrb	r7, [r5]
   129f8:	movw	r4, #55496	; 0xd8c8
   129fc:	movw	r9, #55988	; 0xdab4
   12a00:	mov	r8, #0
   12a04:	mov	r1, #0
   12a08:	movt	r4, #2
   12a0c:	movt	r9, #2
   12a10:	mov	r6, r4
   12a14:	str	r8, [r9]
   12a18:	cmp	r7, #0
   12a1c:	beq	12aac <__assert_fail@plt+0x1318>
   12a20:	movw	r6, #55496	; 0xd8c8
   12a24:	movt	r6, #2
   12a28:	bl	115f0 <__ctype_b_loc@plt>
   12a2c:	mov	r2, #0
   12a30:	ldr	r1, [r0]
   12a34:	uxtb	r3, r7
   12a38:	add	r3, r1, r3, lsl #1
   12a3c:	ldrb	r3, [r3, #1]
   12a40:	tst	r3, #32
   12a44:	beq	12a64 <__assert_fail@plt+0x12d0>
   12a48:	ldrb	r3, [r5, #1]!
   12a4c:	add	r7, r1, r3, lsl #1
   12a50:	ldrb	r7, [r7, #1]
   12a54:	tst	r7, #32
   12a58:	bne	12a48 <__assert_fail@plt+0x12b4>
   12a5c:	cmp	r3, #0
   12a60:	beq	12aa8 <__assert_fail@plt+0x1314>
   12a64:	ldr	r1, [r9]
   12a68:	str	r5, [r6], #4
   12a6c:	add	r1, r1, #1
   12a70:	str	r1, [r9]
   12a74:	ldrb	r3, [r5]
   12a78:	cmp	r3, #0
   12a7c:	beq	12aac <__assert_fail@plt+0x1318>
   12a80:	ldr	r7, [r0]
   12a84:	add	r5, r5, #1
   12a88:	add	r3, r7, r3, lsl #1
   12a8c:	ldrb	r3, [r3, #1]
   12a90:	tst	r3, #32
   12a94:	beq	12a74 <__assert_fail@plt+0x12e0>
   12a98:	strb	r2, [r5, #-1]
   12a9c:	ldrb	r7, [r5]
   12aa0:	cmp	r7, #0
   12aa4:	bne	12a30 <__assert_fail@plt+0x129c>
   12aa8:	ldr	r1, [r9]
   12aac:	str	r8, [r6]
   12ab0:	cmp	r1, #2
   12ab4:	beq	12acc <__assert_fail@plt+0x1338>
   12ab8:	ldr	r6, [r4]
   12abc:	b	12afc <__assert_fail@plt+0x1368>
   12ac0:	mov	r1, r0
   12ac4:	cmp	r1, #2
   12ac8:	bne	12ab8 <__assert_fail@plt+0x1324>
   12acc:	ldr	r4, [r4, #4]
   12ad0:	mov	r1, #0
   12ad4:	mov	r2, #10
   12ad8:	mov	r0, r4
   12adc:	bl	1144c <strtol@plt>
   12ae0:	cmn	r0, #1
   12ae4:	ble	12b10 <__assert_fail@plt+0x137c>
   12ae8:	movw	r1, #54120	; 0xd368
   12aec:	movt	r1, #2
   12af0:	str	r0, [r1]
   12af4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12af8:	str	r6, [r4]
   12afc:	movw	r0, #47225	; 0xb879
   12b00:	mov	r1, r6
   12b04:	movt	r0, #1
   12b08:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b0c:	b	11458 <printf@plt>
   12b10:	movw	r0, #47242	; 0xb88a
   12b14:	mov	r1, r4
   12b18:	movt	r0, #1
   12b1c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b20:	b	11458 <printf@plt>
   12b24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b28:	add	fp, sp, #28
   12b2c:	sub	sp, sp, #4
   12b30:	cmp	r0, #1
   12b34:	bne	12b88 <__assert_fail@plt+0x13f4>
   12b38:	movw	r0, #48162	; 0xbc22
   12b3c:	movt	r0, #1
   12b40:	bl	115a8 <puts@plt>
   12b44:	movw	r0, #53856	; 0xd260
   12b48:	movt	r0, #2
   12b4c:	ldr	r2, [r0]
   12b50:	cmp	r2, #0
   12b54:	beq	12cc4 <__assert_fail@plt+0x1530>
   12b58:	movw	r4, #47366	; 0xb906
   12b5c:	add	r5, r0, #12
   12b60:	movt	r4, #1
   12b64:	ldr	r3, [r5, #-8]
   12b68:	mov	r0, r4
   12b6c:	mov	r1, #8
   12b70:	bl	11458 <printf@plt>
   12b74:	ldr	r2, [r5]
   12b78:	add	r5, r5, #12
   12b7c:	cmp	r2, #0
   12b80:	bne	12b64 <__assert_fail@plt+0x13d0>
   12b84:	b	12cc4 <__assert_fail@plt+0x1530>
   12b88:	sub	r7, r0, #1
   12b8c:	cmp	r7, #1
   12b90:	blt	12cc4 <__assert_fail@plt+0x1530>
   12b94:	movw	r8, #53856	; 0xd260
   12b98:	mov	r5, r1
   12b9c:	movt	r8, #2
   12ba0:	b	12bb8 <__assert_fail@plt+0x1424>
   12ba4:	ldr	r0, [r4, #4]
   12ba8:	bl	115a8 <puts@plt>
   12bac:	sub	r7, r7, #1
   12bb0:	cmp	r7, #0
   12bb4:	ble	12cc4 <__assert_fail@plt+0x1530>
   12bb8:	ldr	r2, [r8]
   12bbc:	ldr	r1, [r5, #4]!
   12bc0:	cmp	r2, #0
   12bc4:	beq	12ca8 <__assert_fail@plt+0x1514>
   12bc8:	ldrb	ip, [r1]
   12bcc:	str	r5, [sp]
   12bd0:	mov	r6, #0
   12bd4:	mov	r5, #0
   12bd8:	mov	r4, #0
   12bdc:	mov	r3, r8
   12be0:	clz	r0, ip
   12be4:	lsr	lr, r0, #5
   12be8:	mov	r0, r4
   12bec:	ldrb	r4, [r2]
   12bf0:	mov	sl, r5
   12bf4:	mov	r9, r6
   12bf8:	mov	r5, lr
   12bfc:	cmp	ip, r4
   12c00:	mov	r4, r1
   12c04:	bne	12c34 <__assert_fail@plt+0x14a0>
   12c08:	add	r2, r2, #1
   12c0c:	mov	r5, lr
   12c10:	mov	r4, r1
   12c14:	tst	r5, #1
   12c18:	bne	12c78 <__assert_fail@plt+0x14e4>
   12c1c:	ldrb	r8, [r4, #1]!
   12c20:	ldrb	r6, [r2], #1
   12c24:	clz	r5, r8
   12c28:	cmp	r8, r6
   12c2c:	lsr	r5, r5, #5
   12c30:	beq	12c14 <__assert_fail@plt+0x1480>
   12c34:	cmp	r5, #0
   12c38:	beq	12c54 <__assert_fail@plt+0x14c0>
   12c3c:	sub	r6, r4, r1
   12c40:	mov	r5, #1
   12c44:	mov	r4, r3
   12c48:	cmp	r6, r9
   12c4c:	bgt	12c60 <__assert_fail@plt+0x14cc>
   12c50:	addeq	sl, sl, #1
   12c54:	mov	r4, r0
   12c58:	mov	r5, sl
   12c5c:	mov	r6, r9
   12c60:	ldr	r2, [r3, #12]!
   12c64:	cmp	r2, #0
   12c68:	bne	12be8 <__assert_fail@plt+0x1454>
   12c6c:	cmp	r5, #1
   12c70:	mvngt	r4, #0
   12c74:	b	12c7c <__assert_fail@plt+0x14e8>
   12c78:	mov	r4, r3
   12c7c:	ldr	r5, [sp]
   12c80:	movw	r8, #53856	; 0xd260
   12c84:	movt	r8, #2
   12c88:	cmp	r4, #0
   12c8c:	beq	12cb4 <__assert_fail@plt+0x1520>
   12c90:	cmn	r4, #1
   12c94:	bne	12ba4 <__assert_fail@plt+0x1410>
   12c98:	movw	r0, #47375	; 0xb90f
   12c9c:	movt	r0, #1
   12ca0:	bl	11458 <printf@plt>
   12ca4:	b	12bac <__assert_fail@plt+0x1418>
   12ca8:	mov	r4, #0
   12cac:	cmp	r4, #0
   12cb0:	bne	12c90 <__assert_fail@plt+0x14fc>
   12cb4:	movw	r0, #47403	; 0xb92b
   12cb8:	movt	r0, #1
   12cbc:	bl	11458 <printf@plt>
   12cc0:	b	12bac <__assert_fail@plt+0x1418>
   12cc4:	sub	sp, fp, #28
   12cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ccc:	push	{fp, lr}
   12cd0:	mov	fp, sp
   12cd4:	sub	sp, sp, #8
   12cd8:	mov	r5, r0
   12cdc:	ldr	r0, [r1]
   12ce0:	mov	r4, r1
   12ce4:	bl	18ea4 <argp_parse@@Base+0x1404>
   12ce8:	movw	r1, #50829	; 0xc68d
   12cec:	mov	r0, #6
   12cf0:	movt	r1, #1
   12cf4:	bl	116d4 <setlocale@plt>
   12cf8:	movw	r0, #57268	; 0xdfb4
   12cfc:	movw	r1, #46927	; 0xb74f
   12d00:	movw	r6, #46852	; 0xb704
   12d04:	movt	r0, #2
   12d08:	movt	r1, #1
   12d0c:	movt	r6, #1
   12d10:	str	r1, [r0]
   12d14:	movw	r1, #54248	; 0xd3e8
   12d18:	mov	r0, r6
   12d1c:	movt	r1, #2
   12d20:	bl	18c84 <argp_parse@@Base+0x11e4>
   12d24:	movw	r0, #54040	; 0xd318
   12d28:	mov	r7, #0
   12d2c:	mov	r1, r5
   12d30:	mov	r2, r4
   12d34:	mov	r3, #0
   12d38:	movt	r0, #2
   12d3c:	str	r7, [sp]
   12d40:	str	r7, [sp, #4]
   12d44:	bl	17aa0 <argp_parse@@Base>
   12d48:	movw	r1, #46951	; 0xb767
   12d4c:	mov	r0, r6
   12d50:	movt	r1, #1
   12d54:	bl	11644 <getservbyname@plt>
   12d58:	cmp	r0, #0
   12d5c:	mov	r1, #69	; 0x45
   12d60:	ldrhne	r0, [r0, #8]
   12d64:	rev16ne	r1, r0
   12d68:	movw	r0, #54360	; 0xd458
   12d6c:	movt	r0, #2
   12d70:	str	r1, [r0]
   12d74:	mov	r0, #0
   12d78:	bl	11758 <isatty@plt>
   12d7c:	movw	r2, #48344	; 0xbcd8
   12d80:	movw	r1, #54364	; 0xd45c
   12d84:	movt	r2, #1
   12d88:	movt	r1, #2
   12d8c:	vldr	d16, [r2]
   12d90:	str	r0, [r1]
   12d94:	movw	r0, #55996	; 0xdabc
   12d98:	movw	r1, #11808	; 0x2e20
   12d9c:	movt	r0, #2
   12da0:	movt	r1, #1
   12da4:	strb	r7, [r0, #8]
   12da8:	vst1.8	{d16}, [r0]
   12dac:	mov	r0, #2
   12db0:	bl	114dc <signal@plt>
   12db4:	movw	r4, #54036	; 0xd314
   12db8:	movt	r4, #2
   12dbc:	ldr	r0, [r4]
   12dc0:	cmp	r0, #2
   12dc4:	blt	12dec <__assert_fail@plt+0x1658>
   12dc8:	movw	r0, #55576	; 0xd918
   12dcc:	movt	r0, #2
   12dd0:	bl	1147c <_setjmp@plt>
   12dd4:	cmp	r0, #0
   12dd8:	bne	12e18 <__assert_fail@plt+0x1684>
   12ddc:	ldr	r0, [r4]
   12de0:	movw	r1, #54024	; 0xd308
   12de4:	movt	r1, #2
   12de8:	bl	11890 <__assert_fail@plt+0xfc>
   12dec:	movw	r0, #55576	; 0xd918
   12df0:	movt	r0, #2
   12df4:	bl	1147c <_setjmp@plt>
   12df8:	cmp	r0, #0
   12dfc:	beq	12e14 <__assert_fail@plt+0x1680>
   12e00:	movw	r0, #54348	; 0xd44c
   12e04:	movt	r0, #2
   12e08:	ldr	r1, [r0]
   12e0c:	mov	r0, #10
   12e10:	bl	11704 <putc@plt>
   12e14:	bl	12e4c <__assert_fail@plt+0x16b8>
   12e18:	mov	r0, #0
   12e1c:	bl	115fc <exit@plt>
   12e20:	push	{fp, lr}
   12e24:	mov	fp, sp
   12e28:	mov	r0, #14
   12e2c:	mov	r1, #1
   12e30:	bl	114dc <signal@plt>
   12e34:	mov	r0, #0
   12e38:	bl	1150c <alarm@plt>
   12e3c:	movw	r0, #55576	; 0xd918
   12e40:	mvn	r1, #0
   12e44:	movt	r0, #2
   12e48:	bl	11470 <longjmp@plt>
   12e4c:	push	{fp, lr}
   12e50:	mov	fp, sp
   12e54:	movw	r8, #54364	; 0xd45c
   12e58:	movw	r9, #54344	; 0xd448
   12e5c:	movw	r5, #56028	; 0xdadc
   12e60:	movt	r8, #2
   12e64:	movt	r9, #2
   12e68:	movt	r5, #2
   12e6c:	b	12e80 <__assert_fail@plt+0x16ec>
   12e70:	ldr	r0, [r9]
   12e74:	bl	11608 <feof@plt>
   12e78:	cmp	r0, #0
   12e7c:	bne	130cc <__assert_fail@plt+0x1938>
   12e80:	ldr	r0, [r8]
   12e84:	cmp	r0, #0
   12e88:	beq	12ea4 <__assert_fail@plt+0x1710>
   12e8c:	movw	r0, #53576	; 0xd148
   12e90:	movt	r0, #2
   12e94:	ldr	r1, [r0]
   12e98:	movw	r0, #47941	; 0xbb45
   12e9c:	movt	r0, #1
   12ea0:	bl	11458 <printf@plt>
   12ea4:	ldr	r2, [r9]
   12ea8:	mov	r0, r5
   12eac:	mov	r1, #200	; 0xc8
   12eb0:	bl	114b8 <fgets@plt>
   12eb4:	cmp	r0, #0
   12eb8:	beq	12e70 <__assert_fail@plt+0x16dc>
   12ebc:	ldrb	r4, [r5]
   12ec0:	cmp	r4, #0
   12ec4:	beq	12e80 <__assert_fail@plt+0x16ec>
   12ec8:	movw	r0, #55988	; 0xdab4
   12ecc:	mov	r1, #0
   12ed0:	movt	r0, #2
   12ed4:	str	r1, [r0]
   12ed8:	bl	115f0 <__ctype_b_loc@plt>
   12edc:	movw	r2, #55496	; 0xd8c8
   12ee0:	mov	r1, r0
   12ee4:	mov	r3, r5
   12ee8:	movt	r2, #2
   12eec:	ldr	r0, [r1]
   12ef0:	uxtb	r7, r4
   12ef4:	add	r7, r0, r7, lsl #1
   12ef8:	ldrb	r7, [r7, #1]
   12efc:	tst	r7, #32
   12f00:	beq	12f20 <__assert_fail@plt+0x178c>
   12f04:	ldrb	r7, [r3, #1]!
   12f08:	add	r6, r0, r7, lsl #1
   12f0c:	ldrb	r6, [r6, #1]
   12f10:	tst	r6, #32
   12f14:	bne	12f04 <__assert_fail@plt+0x1770>
   12f18:	cmp	r7, #0
   12f1c:	beq	12f74 <__assert_fail@plt+0x17e0>
   12f20:	movw	r0, #55988	; 0xdab4
   12f24:	str	r3, [r2], #4
   12f28:	movt	r0, #2
   12f2c:	mov	r7, r0
   12f30:	ldr	r0, [r0]
   12f34:	add	r0, r0, #1
   12f38:	str	r0, [r7]
   12f3c:	ldrb	r7, [r3]
   12f40:	cmp	r7, #0
   12f44:	beq	12f80 <__assert_fail@plt+0x17ec>
   12f48:	ldr	r6, [r1]
   12f4c:	add	r3, r3, #1
   12f50:	add	r7, r6, r7, lsl #1
   12f54:	ldrb	r7, [r7, #1]
   12f58:	tst	r7, #32
   12f5c:	beq	12f3c <__assert_fail@plt+0x17a8>
   12f60:	mov	r0, #0
   12f64:	strb	r0, [r3, #-1]
   12f68:	ldrb	r4, [r3]
   12f6c:	cmp	r4, #0
   12f70:	bne	12eec <__assert_fail@plt+0x1758>
   12f74:	movw	r0, #55988	; 0xdab4
   12f78:	movt	r0, #2
   12f7c:	ldr	r0, [r0]
   12f80:	mov	r1, #0
   12f84:	cmp	r0, #0
   12f88:	str	r1, [r2]
   12f8c:	beq	12e80 <__assert_fail@plt+0x16ec>
   12f90:	movw	r6, #53856	; 0xd260
   12f94:	movt	r6, #2
   12f98:	ldr	r3, [r6]
   12f9c:	cmp	r3, #0
   12fa0:	beq	1309c <__assert_fail@plt+0x1908>
   12fa4:	movw	r1, #55496	; 0xd8c8
   12fa8:	mov	r7, #0
   12fac:	mov	r5, #0
   12fb0:	mov	r4, #0
   12fb4:	movt	r1, #2
   12fb8:	ldr	r1, [r1]
   12fbc:	ldrb	ip, [r1]
   12fc0:	clz	r2, ip
   12fc4:	lsr	lr, r2, #5
   12fc8:	mov	r2, r4
   12fcc:	ldrb	r4, [r3]
   12fd0:	mov	r8, r5
   12fd4:	mov	r9, r7
   12fd8:	mov	r5, lr
   12fdc:	cmp	ip, r4
   12fe0:	mov	r4, r1
   12fe4:	bne	13014 <__assert_fail@plt+0x1880>
   12fe8:	add	r3, r3, #1
   12fec:	mov	r5, lr
   12ff0:	mov	r4, r1
   12ff4:	tst	r5, #1
   12ff8:	bne	13058 <__assert_fail@plt+0x18c4>
   12ffc:	ldrb	sl, [r4, #1]!
   13000:	ldrb	r7, [r3], #1
   13004:	clz	r5, sl
   13008:	cmp	sl, r7
   1300c:	lsr	r5, r5, #5
   13010:	beq	12ff4 <__assert_fail@plt+0x1860>
   13014:	cmp	r5, #0
   13018:	beq	13034 <__assert_fail@plt+0x18a0>
   1301c:	sub	r7, r4, r1
   13020:	mov	r5, #1
   13024:	mov	r4, r6
   13028:	cmp	r7, r9
   1302c:	bgt	13040 <__assert_fail@plt+0x18ac>
   13030:	addeq	r8, r8, #1
   13034:	mov	r4, r2
   13038:	mov	r5, r8
   1303c:	mov	r7, r9
   13040:	ldr	r3, [r6, #12]!
   13044:	cmp	r3, #0
   13048:	bne	12fc8 <__assert_fail@plt+0x1834>
   1304c:	cmp	r5, #1
   13050:	mvngt	r4, #0
   13054:	b	1305c <__assert_fail@plt+0x18c8>
   13058:	mov	r4, r6
   1305c:	movw	r5, #54364	; 0xd45c
   13060:	movt	r5, #2
   13064:	mov	r8, r5
   13068:	movw	r5, #54344	; 0xd448
   1306c:	movt	r5, #2
   13070:	mov	r9, r5
   13074:	movw	r5, #56028	; 0xdadc
   13078:	movt	r5, #2
   1307c:	cmp	r4, #0
   13080:	beq	130a8 <__assert_fail@plt+0x1914>
   13084:	cmn	r4, #1
   13088:	bne	130b8 <__assert_fail@plt+0x1924>
   1308c:	movw	r0, #48224	; 0xbc60
   13090:	movt	r0, #1
   13094:	bl	115a8 <puts@plt>
   13098:	b	12e80 <__assert_fail@plt+0x16ec>
   1309c:	mov	r4, #0
   130a0:	cmp	r4, #0
   130a4:	bne	13084 <__assert_fail@plt+0x18f0>
   130a8:	movw	r0, #48207	; 0xbc4f
   130ac:	movt	r0, #1
   130b0:	bl	115a8 <puts@plt>
   130b4:	b	12e80 <__assert_fail@plt+0x16ec>
   130b8:	ldr	r2, [r4, #8]
   130bc:	movw	r1, #55496	; 0xd8c8
   130c0:	movt	r1, #2
   130c4:	blx	r2
   130c8:	b	12e80 <__assert_fail@plt+0x16ec>
   130cc:	mov	r0, #0
   130d0:	bl	115fc <exit@plt>
   130d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130d8:	add	fp, sp, #28
   130dc:	sub	sp, sp, #4
   130e0:	vpush	{d8-d9}
   130e4:	sub	sp, sp, #176	; 0xb0
   130e8:	vmov.i32	q8, #0	; 0x00000000
   130ec:	add	r2, sp, #16
   130f0:	mov	r4, r0
   130f4:	movw	r1, #46852	; 0xb704
   130f8:	add	r3, sp, #12
   130fc:	add	r0, r2, #4
   13100:	movt	r1, #1
   13104:	vst1.32	{d16-d17}, [r0]
   13108:	add	r0, r2, #16
   1310c:	vst1.32	{d16-d17}, [r0]
   13110:	mov	r0, #194	; 0xc2
   13114:	str	r0, [sp, #16]
   13118:	mov	r0, #2
   1311c:	str	r0, [sp, #24]
   13120:	mov	r0, r4
   13124:	bl	11740 <getaddrinfo@plt>
   13128:	cmp	r0, #0
   1312c:	bne	13284 <__assert_fail@plt+0x1af0>
   13130:	movw	r6, #54124	; 0xd36c
   13134:	movt	r6, #2
   13138:	ldr	r0, [r6]
   1313c:	cmp	r0, #0
   13140:	bmi	13150 <__assert_fail@plt+0x19bc>
   13144:	bl	11788 <close@plt>
   13148:	mvn	r0, #0
   1314c:	str	r0, [r6]
   13150:	ldr	r5, [sp, #12]
   13154:	cmp	r5, #0
   13158:	beq	13264 <__assert_fail@plt+0x1ad0>
   1315c:	add	r4, sp, #48	; 0x30
   13160:	vmov.i32	q4, #0	; 0x00000000
   13164:	add	r0, r4, #96	; 0x60
   13168:	add	r7, r4, #64	; 0x40
   1316c:	add	r8, r4, #48	; 0x30
   13170:	add	r9, r4, #32
   13174:	add	sl, r4, #16
   13178:	str	r0, [sp, #8]
   1317c:	add	r0, r4, #80	; 0x50
   13180:	str	r0, [sp, #4]
   13184:	b	131a4 <__assert_fail@plt+0x1a10>
   13188:	ldr	r0, [r6]
   1318c:	bl	11788 <close@plt>
   13190:	mvn	r0, #0
   13194:	str	r0, [r6]
   13198:	ldr	r5, [r5, #28]
   1319c:	cmp	r5, #0
   131a0:	beq	13264 <__assert_fail@plt+0x1ad0>
   131a4:	ldmib	r5, {r0, r1, r2}
   131a8:	bl	1174c <socket@plt>
   131ac:	cmp	r0, #0
   131b0:	str	r0, [r6]
   131b4:	bmi	13198 <__assert_fail@plt+0x1a04>
   131b8:	mov	r1, r4
   131bc:	mov	r2, #112	; 0x70
   131c0:	vst1.64	{d8-d9}, [r7]
   131c4:	vst1.64	{d8-d9}, [r8]
   131c8:	vst1.64	{d8-d9}, [r9]
   131cc:	vst1.64	{d8-d9}, [sl]
   131d0:	vst1.64	{d8-d9}, [r1], r2
   131d4:	vst1.64	{d8-d9}, [r1]
   131d8:	ldr	r1, [sp, #8]
   131dc:	vst1.64	{d8-d9}, [r1]
   131e0:	ldr	r1, [sp, #4]
   131e4:	vst1.64	{d8-d9}, [r1]
   131e8:	ldr	r1, [r5, #4]
   131ec:	strh	r1, [sp, #48]	; 0x30
   131f0:	mov	r1, r4
   131f4:	ldr	r2, [r5, #16]
   131f8:	bl	1165c <bind@plt>
   131fc:	cmp	r0, #0
   13200:	bne	13188 <__assert_fail@plt+0x19f4>
   13204:	ldr	r2, [r5, #16]
   13208:	movw	r0, #54508	; 0xd4ec
   1320c:	ldr	r1, [r5, #20]
   13210:	movt	r0, #2
   13214:	str	r2, [r0]
   13218:	movw	r0, #54376	; 0xd468
   1321c:	movt	r0, #2
   13220:	bl	114d0 <memcpy@plt>
   13224:	movw	r0, #54368	; 0xd460
   13228:	movw	r4, #55992	; 0xdab8
   1322c:	mov	r1, #1
   13230:	movt	r0, #2
   13234:	movt	r4, #2
   13238:	strb	r1, [r0]
   1323c:	ldr	r0, [r4]
   13240:	bl	18d7c <argp_parse@@Base+0x12dc>
   13244:	ldr	r0, [r5, #24]
   13248:	cmp	r0, #0
   1324c:	movweq	r0, #47742	; 0xba7e
   13250:	movteq	r0, #1
   13254:	bl	19a10 <argp_parse@@Base+0x1f70>
   13258:	str	r0, [r4]
   1325c:	mov	r4, #0
   13260:	b	13268 <__assert_fail@plt+0x1ad4>
   13264:	mvn	r4, #0
   13268:	ldr	r0, [sp, #12]
   1326c:	bl	11734 <freeaddrinfo@plt>
   13270:	mov	r0, r4
   13274:	sub	sp, fp, #48	; 0x30
   13278:	vpop	{d8-d9}
   1327c:	add	sp, sp, #4
   13280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13284:	movw	r1, #54336	; 0xd440
   13288:	movt	r1, #2
   1328c:	ldr	r5, [r1]
   13290:	bl	114ac <gai_strerror@plt>
   13294:	movw	r1, #47728	; 0xba70
   13298:	mov	r3, r0
   1329c:	mov	r0, r5
   132a0:	mov	r2, r4
   132a4:	movt	r1, #1
   132a8:	bl	1162c <fprintf@plt>
   132ac:	mvn	r4, #0
   132b0:	b	13270 <__assert_fail@plt+0x1adc>
   132b4:	push	{r4, r5, fp, lr}
   132b8:	add	fp, sp, #8
   132bc:	mov	r4, r0
   132c0:	ldrb	r0, [r0]
   132c4:	cmp	r0, #0
   132c8:	beq	13300 <__assert_fail@plt+0x1b6c>
   132cc:	mov	r5, #0
   132d0:	mov	r0, r4
   132d4:	mov	r1, #47	; 0x2f
   132d8:	bl	116e0 <strrchr@plt>
   132dc:	cmp	r0, #0
   132e0:	beq	13300 <__assert_fail@plt+0x1b6c>
   132e4:	ldrb	r1, [r0, #1]
   132e8:	cmp	r1, #0
   132ec:	bne	13308 <__assert_fail@plt+0x1b74>
   132f0:	strb	r5, [r0]
   132f4:	ldrb	r0, [r4]
   132f8:	cmp	r0, #0
   132fc:	bne	132d0 <__assert_fail@plt+0x1b3c>
   13300:	mov	r0, r4
   13304:	pop	{r4, r5, fp, pc}
   13308:	add	r4, r0, #1
   1330c:	mov	r0, r4
   13310:	pop	{r4, r5, fp, pc}
   13314:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13318:	add	fp, sp, #28
   1331c:	sub	sp, sp, #4
   13320:	vpush	{d8}
   13324:	sub	sp, sp, #184	; 0xb8
   13328:	mov	r4, r0
   1332c:	movw	r0, #55972	; 0xdaa4
   13330:	str	r1, [sp, #20]
   13334:	mov	r1, #0
   13338:	mov	r5, r2
   1333c:	mov	r6, #0
   13340:	movt	r0, #2
   13344:	bl	1156c <gettimeofday@plt>
   13348:	bl	140cc <__assert_fail@plt+0x2938>
   1334c:	movw	r1, #47711	; 0xba5f
   13350:	str	r0, [fp, #-44]	; 0xffffffd4
   13354:	mov	r0, r4
   13358:	movt	r1, #1
   1335c:	bl	1141c <fdopen@plt>
   13360:	movw	r1, #48344	; 0xbcd8
   13364:	str	r0, [sp, #28]
   13368:	mov	r0, r5
   1336c:	str	r5, [sp, #24]
   13370:	movt	r1, #1
   13374:	bl	11440 <strcmp@plt>
   13378:	clz	r0, r0
   1337c:	movw	r1, #15700	; 0x3d54
   13380:	lsr	r0, r0, #5
   13384:	movt	r1, #1
   13388:	str	r0, [fp, #-56]	; 0xffffffc8
   1338c:	mov	r0, #14
   13390:	str	r6, [fp, #-48]	; 0xffffffd0
   13394:	str	r6, [fp, #-60]	; 0xffffffc4
   13398:	bl	114dc <signal@plt>
   1339c:	movw	sl, #54504	; 0xd4e8
   133a0:	movw	r7, #54124	; 0xd36c
   133a4:	movw	r4, #54584	; 0xd538
   133a8:	mov	r5, #128	; 0x80
   133ac:	add	r8, sp, #32
   133b0:	add	r6, sp, #36	; 0x24
   133b4:	movt	sl, #2
   133b8:	movt	r7, #2
   133bc:	movt	r4, #2
   133c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   133c4:	cmp	r0, #0
   133c8:	beq	1340c <__assert_fail@plt+0x1c78>
   133cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   133d0:	ldr	r0, [sp, #28]
   133d4:	sub	r1, fp, #44	; 0x2c
   133d8:	bl	14128 <__assert_fail@plt+0x2994>
   133dc:	str	r0, [fp, #-52]	; 0xffffffcc
   133e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   133e4:	cmn	r0, #1
   133e8:	ble	1377c <__assert_fail@plt+0x1fe8>
   133ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133f0:	mov	r1, #768	; 0x300
   133f4:	strh	r1, [r0]
   133f8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   133fc:	rev16	r1, r1
   13400:	strh	r1, [r0, #2]
   13404:	mov	r1, #0
   13408:	b	13484 <__assert_fail@plt+0x1cf0>
   1340c:	ldr	r9, [fp, #-44]	; 0xffffffd4
   13410:	mov	r0, #512	; 0x200
   13414:	str	r9, [sp, #16]
   13418:	strh	r0, [r9], #2
   1341c:	ldr	r0, [sp, #20]
   13420:	bl	11614 <strlen@plt>
   13424:	ldr	r1, [sp, #20]
   13428:	str	r0, [sp, #12]
   1342c:	mov	r0, r9
   13430:	movw	r2, #502	; 0x1f6
   13434:	bl	11674 <strncpy@plt>
   13438:	ldr	r1, [sp, #12]
   1343c:	lsr	r0, r1, #1
   13440:	cmp	r0, #251	; 0xfb
   13444:	movw	r0, #502	; 0x1f6
   13448:	movcs	r1, r0
   1344c:	mov	r0, #0
   13450:	strb	r0, [r9, r1]!
   13454:	ldr	r1, [sp, #24]
   13458:	add	r9, r9, #1
   1345c:	mov	r0, r9
   13460:	bl	11560 <strcpy@plt>
   13464:	ldr	r0, [sp, #24]
   13468:	bl	11614 <strlen@plt>
   1346c:	mov	r1, #0
   13470:	strb	r1, [r9, r0]!
   13474:	ldr	r0, [sp, #16]
   13478:	sub	r0, r9, r0
   1347c:	sub	r0, r0, #3
   13480:	str	r0, [fp, #-52]	; 0xffffffcc
   13484:	movw	r0, #55968	; 0xdaa0
   13488:	movt	r0, #2
   1348c:	str	r1, [r0]
   13490:	movw	r0, #55104	; 0xd740
   13494:	movt	r0, #2
   13498:	bl	1147c <_setjmp@plt>
   1349c:	ldr	r0, [sl]
   134a0:	cmp	r0, #0
   134a4:	beq	134c0 <__assert_fail@plt+0x1d2c>
   134a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   134ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   134b0:	add	r2, r0, #4
   134b4:	movw	r0, #47467	; 0xb96b
   134b8:	movt	r0, #1
   134bc:	bl	13edc <__assert_fail@plt+0x2748>
   134c0:	movw	r1, #54508	; 0xd4ec
   134c4:	ldr	r0, [r7]
   134c8:	movw	r2, #54376	; 0xd468
   134cc:	movt	r1, #2
   134d0:	movt	r2, #2
   134d4:	ldr	ip, [r1]
   134d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   134dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   134e0:	stm	sp, {r2, ip}
   134e4:	add	r2, r3, #4
   134e8:	mov	r3, #0
   134ec:	bl	116bc <sendto@plt>
   134f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   134f4:	add	r1, r1, #4
   134f8:	cmp	r0, r1
   134fc:	bne	1376c <__assert_fail@plt+0x1fd8>
   13500:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13504:	ldr	r0, [sp, #28]
   13508:	bl	14198 <__assert_fail@plt+0x2a04>
   1350c:	b	1351c <__assert_fail@plt+0x1d88>
   13510:	lsr	r1, r1, #16
   13514:	cmp	r1, #5
   13518:	beq	1364c <__assert_fail@plt+0x1eb8>
   1351c:	movw	r0, #54116	; 0xd364
   13520:	movt	r0, #2
   13524:	ldr	r0, [r0]
   13528:	bl	1150c <alarm@plt>
   1352c:	ldr	r0, [r7]
   13530:	mov	r1, r4
   13534:	mov	r2, #516	; 0x204
   13538:	mov	r3, #0
   1353c:	str	r5, [sp, #32]
   13540:	stm	sp, {r6, r8}
   13544:	bl	11500 <recvfrom@plt>
   13548:	cmp	r0, #1
   1354c:	blt	1352c <__assert_fail@plt+0x1d98>
   13550:	mov	r9, r0
   13554:	mov	r0, #0
   13558:	bl	1150c <alarm@plt>
   1355c:	ldrh	r0, [sp, #38]	; 0x26
   13560:	movw	r1, #54376	; 0xd468
   13564:	movt	r1, #2
   13568:	strh	r0, [r1, #2]
   1356c:	ldr	r0, [sl]
   13570:	cmp	r0, #0
   13574:	beq	1358c <__assert_fail@plt+0x1df8>
   13578:	movw	r0, #47485	; 0xb97d
   1357c:	mov	r1, r4
   13580:	mov	r2, r9
   13584:	movt	r0, #1
   13588:	bl	13edc <__assert_fail@plt+0x2748>
   1358c:	ldrh	r0, [r4]
   13590:	rev16	r1, r0
   13594:	strh	r1, [r4]
   13598:	ldrh	r2, [r4, #2]
   1359c:	rev16	r1, r2
   135a0:	strh	r1, [r4, #2]
   135a4:	rev	r1, r0
   135a8:	rev	r0, r2
   135ac:	mov	r2, #4
   135b0:	cmp	r2, r1, lsr #16
   135b4:	lsr	r0, r0, #16
   135b8:	bne	13510 <__assert_fail@plt+0x1d7c>
   135bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   135c0:	cmp	r1, r0
   135c4:	beq	13608 <__assert_fail@plt+0x1e74>
   135c8:	ldr	r0, [r7]
   135cc:	bl	1440c <__assert_fail@plt+0x2c78>
   135d0:	cmp	r0, #0
   135d4:	movne	r1, r0
   135d8:	ldrne	r0, [sl]
   135dc:	cmpne	r0, #0
   135e0:	beq	135f0 <__assert_fail@plt+0x1e5c>
   135e4:	movw	r0, #47513	; 0xb999
   135e8:	movt	r0, #1
   135ec:	bl	11458 <printf@plt>
   135f0:	ldrh	r0, [r4, #2]
   135f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   135f8:	sub	r1, r1, #1
   135fc:	cmp	r1, r0
   13600:	bne	1351c <__assert_fail@plt+0x1d88>
   13604:	b	1349c <__assert_fail@plt+0x1d08>
   13608:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1360c:	cmp	r0, #1
   13610:	blt	13624 <__assert_fail@plt+0x1e90>
   13614:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13618:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1361c:	add	r0, r1, r0
   13620:	str	r0, [fp, #-60]	; 0xffffffc4
   13624:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13628:	add	r0, r0, #1
   1362c:	str	r0, [fp, #-48]	; 0xffffffd0
   13630:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13634:	cmp	r0, #512	; 0x200
   13638:	beq	133c0 <__assert_fail@plt+0x1c2c>
   1363c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13640:	cmp	r0, #1
   13644:	beq	133c0 <__assert_fail@plt+0x1c2c>
   13648:	b	13660 <__assert_fail@plt+0x1ecc>
   1364c:	sxth	r1, r0
   13650:	movw	r0, #47494	; 0xb986
   13654:	add	r2, r4, #4
   13658:	movt	r0, #1
   1365c:	bl	11458 <printf@plt>
   13660:	ldr	r0, [sp, #28]
   13664:	bl	116a4 <fclose@plt>
   13668:	movw	r4, #55980	; 0xdaac
   1366c:	mov	r1, #0
   13670:	movt	r4, #2
   13674:	mov	r0, r4
   13678:	bl	1156c <gettimeofday@plt>
   1367c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13680:	cmp	r0, #0
   13684:	beq	1375c <__assert_fail@plt+0x1fc8>
   13688:	movw	r0, #55972	; 0xdaa4
   1368c:	movw	r1, #46473	; 0xb589
   13690:	vldr	s2, [r4]
   13694:	vmov.f64	d16, #36	; 0x41200000  10.0
   13698:	movt	r0, #2
   1369c:	movt	r1, #5368	; 0x14f8
   136a0:	mov	r3, r0
   136a4:	ldr	r0, [r0, #4]
   136a8:	vldr	s0, [r3]
   136ac:	smmul	r0, r0, r1
   136b0:	asr	r2, r0, #13
   136b4:	add	r0, r2, r0, lsr #31
   136b8:	ldr	r2, [r4, #4]
   136bc:	vcvt.f64.s32	d17, s0
   136c0:	vmov	s4, r0
   136c4:	movw	r0, #48070	; 0xbbc6
   136c8:	movt	r0, #1
   136cc:	smmul	r1, r2, r1
   136d0:	asr	r2, r1, #13
   136d4:	vcvt.f64.s32	d18, s4
   136d8:	vcvt.f64.s32	d19, s2
   136dc:	add	r1, r2, r1, lsr #31
   136e0:	vmov	s6, r1
   136e4:	movw	r1, #47535	; 0xb9af
   136e8:	movt	r1, #1
   136ec:	vmla.f64	d18, d17, d16
   136f0:	vcvt.f64.s32	d20, s6
   136f4:	ldr	r4, [fp, #-60]	; 0xffffffc4
   136f8:	mov	r2, r4
   136fc:	vmla.f64	d20, d19, d16
   13700:	vsub.f64	d17, d20, d18
   13704:	vdiv.f64	d8, d17, d16
   13708:	vstr	d8, [sp]
   1370c:	bl	11458 <printf@plt>
   13710:	movw	r0, #54372	; 0xd464
   13714:	movt	r0, #2
   13718:	ldr	r0, [r0]
   1371c:	cmp	r0, #0
   13720:	beq	13748 <__assert_fail@plt+0x1fb4>
   13724:	vmov	s0, r4
   13728:	vmov.f64	d16, #32	; 0x41000000  8.0
   1372c:	movw	r0, #48098	; 0xbbe2
   13730:	movt	r0, #1
   13734:	vcvt.f64.u32	d17, s0
   13738:	vmul.f64	d16, d17, d16
   1373c:	vdiv.f64	d16, d16, d8
   13740:	vmov	r2, r3, d16
   13744:	bl	11458 <printf@plt>
   13748:	movw	r0, #54348	; 0xd44c
   1374c:	movt	r0, #2
   13750:	ldr	r1, [r0]
   13754:	mov	r0, #10
   13758:	bl	11704 <putc@plt>
   1375c:	sub	sp, fp, #40	; 0x28
   13760:	vpop	{d8}
   13764:	add	sp, sp, #4
   13768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1376c:	movw	r0, #47472	; 0xb970
   13770:	movt	r0, #1
   13774:	bl	1153c <perror@plt>
   13778:	b	13660 <__assert_fail@plt+0x1ecc>
   1377c:	bl	11638 <__errno_location@plt>
   13780:	ldr	r0, [r0]
   13784:	add	r0, r0, #100	; 0x64
   13788:	bl	13dbc <__assert_fail@plt+0x2628>
   1378c:	b	13660 <__assert_fail@plt+0x1ecc>
   13790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13794:	add	fp, sp, #28
   13798:	sub	sp, sp, #4
   1379c:	vpush	{d8}
   137a0:	sub	sp, sp, #176	; 0xb0
   137a4:	mov	r5, r0
   137a8:	movw	r0, #55972	; 0xdaa4
   137ac:	str	r1, [sp, #8]
   137b0:	mov	r1, #0
   137b4:	mov	r4, r2
   137b8:	mov	r7, #0
   137bc:	movt	r0, #2
   137c0:	bl	1156c <gettimeofday@plt>
   137c4:	bl	14074 <__assert_fail@plt+0x28e0>
   137c8:	movw	r1, #47540	; 0xb9b4
   137cc:	str	r0, [fp, #-44]	; 0xffffffd4
   137d0:	mov	r0, r5
   137d4:	movt	r1, #1
   137d8:	bl	1141c <fdopen@plt>
   137dc:	movw	r1, #48344	; 0xbcd8
   137e0:	mov	r6, r0
   137e4:	mov	r0, r4
   137e8:	str	r4, [sp, #12]
   137ec:	movt	r1, #1
   137f0:	bl	11440 <strcmp@plt>
   137f4:	clz	r0, r0
   137f8:	movw	r1, #15700	; 0x3d54
   137fc:	lsr	r0, r0, #5
   13800:	movt	r1, #1
   13804:	str	r0, [sp, #20]
   13808:	mov	r0, #1
   1380c:	str	r0, [fp, #-48]	; 0xffffffd0
   13810:	str	r0, [fp, #-56]	; 0xffffffc8
   13814:	mov	r0, #14
   13818:	str	r7, [fp, #-60]	; 0xffffffc4
   1381c:	bl	114dc <signal@plt>
   13820:	movw	r7, #54584	; 0xd538
   13824:	movw	r4, #54124	; 0xd36c
   13828:	mov	r5, #128	; 0x80
   1382c:	add	r8, sp, #24
   13830:	add	sl, sp, #28
   13834:	str	r6, [sp, #16]
   13838:	movt	r7, #2
   1383c:	movt	r4, #2
   13840:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13844:	cmp	r0, #0
   13848:	beq	138d4 <__assert_fail@plt+0x2140>
   1384c:	mov	r6, r7
   13850:	mov	r0, #256	; 0x100
   13854:	strh	r0, [r6], #2
   13858:	ldr	r0, [sp, #8]
   1385c:	bl	11614 <strlen@plt>
   13860:	ldr	r1, [sp, #8]
   13864:	mov	r9, r7
   13868:	mov	r7, r0
   1386c:	mov	r0, r6
   13870:	movw	r2, #502	; 0x1f6
   13874:	bl	11674 <strncpy@plt>
   13878:	lsr	r0, r7, #1
   1387c:	cmp	r0, #251	; 0xfb
   13880:	movw	r0, #502	; 0x1f6
   13884:	movcs	r7, r0
   13888:	mov	r0, #0
   1388c:	strb	r0, [r6, r7]!
   13890:	ldr	r7, [sp, #12]
   13894:	add	r6, r6, #1
   13898:	mov	r0, r6
   1389c:	mov	r1, r7
   138a0:	bl	11560 <strcpy@plt>
   138a4:	mov	r0, r7
   138a8:	bl	11614 <strlen@plt>
   138ac:	mov	r1, #0
   138b0:	mov	r7, r9
   138b4:	strb	r1, [r6, r0]!
   138b8:	sub	r0, r6, r9
   138bc:	ldr	r6, [sp, #16]
   138c0:	add	r0, r0, #1
   138c4:	str	r0, [fp, #-52]	; 0xffffffcc
   138c8:	mov	r0, #0
   138cc:	str	r0, [fp, #-56]	; 0xffffffc8
   138d0:	b	13904 <__assert_fail@plt+0x2170>
   138d4:	mov	r0, #1024	; 0x400
   138d8:	mov	r1, r7
   138dc:	strh	r0, [r7]
   138e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   138e4:	rev16	r0, r0
   138e8:	strh	r0, [r7, #2]
   138ec:	mov	r0, #4
   138f0:	str	r0, [fp, #-52]	; 0xffffffcc
   138f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   138f8:	add	r0, r0, #1
   138fc:	str	r0, [fp, #-48]	; 0xffffffd0
   13900:	mov	r0, #0
   13904:	movw	r1, #55968	; 0xdaa0
   13908:	movt	r1, #2
   1390c:	str	r0, [r1]
   13910:	movw	r0, #55104	; 0xd740
   13914:	movt	r0, #2
   13918:	bl	1147c <_setjmp@plt>
   1391c:	movw	r0, #54504	; 0xd4e8
   13920:	movt	r0, #2
   13924:	ldr	r0, [r0]
   13928:	cmp	r0, #0
   1392c:	beq	13944 <__assert_fail@plt+0x21b0>
   13930:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13934:	movw	r0, #47467	; 0xb96b
   13938:	mov	r1, r7
   1393c:	movt	r0, #1
   13940:	bl	13edc <__assert_fail@plt+0x2748>
   13944:	movw	r1, #54508	; 0xd4ec
   13948:	movw	r3, #54376	; 0xd468
   1394c:	ldr	r0, [r4]
   13950:	movt	r1, #2
   13954:	movt	r3, #2
   13958:	ldr	r1, [r1]
   1395c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13960:	str	r3, [sp]
   13964:	mov	r3, #0
   13968:	str	r1, [sp, #4]
   1396c:	mov	r1, r7
   13970:	bl	116bc <sendto@plt>
   13974:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13978:	cmp	r0, r1
   1397c:	bne	13c54 <__assert_fail@plt+0x24c0>
   13980:	ldr	r1, [sp, #20]
   13984:	mov	r0, r6
   13988:	bl	14304 <__assert_fail@plt+0x2b70>
   1398c:	b	13998 <__assert_fail@plt+0x2204>
   13990:	cmp	r1, #5
   13994:	beq	13ae4 <__assert_fail@plt+0x2350>
   13998:	movw	r0, #54116	; 0xd364
   1399c:	movt	r0, #2
   139a0:	ldr	r0, [r0]
   139a4:	bl	1150c <alarm@plt>
   139a8:	ldr	r0, [r4]
   139ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   139b0:	mov	r2, #516	; 0x204
   139b4:	mov	r3, #0
   139b8:	str	r5, [sp, #24]
   139bc:	str	sl, [sp]
   139c0:	str	r8, [sp, #4]
   139c4:	bl	11500 <recvfrom@plt>
   139c8:	cmp	r0, #1
   139cc:	blt	139a8 <__assert_fail@plt+0x2214>
   139d0:	mov	r9, r0
   139d4:	mov	r0, #0
   139d8:	bl	1150c <alarm@plt>
   139dc:	ldrh	r0, [sp, #30]
   139e0:	movw	r1, #54376	; 0xd468
   139e4:	movt	r1, #2
   139e8:	strh	r0, [r1, #2]
   139ec:	movw	r0, #54504	; 0xd4e8
   139f0:	movt	r0, #2
   139f4:	ldr	r0, [r0]
   139f8:	cmp	r0, #0
   139fc:	beq	13a14 <__assert_fail@plt+0x2280>
   13a00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a04:	movw	r0, #47485	; 0xb97d
   13a08:	mov	r2, r9
   13a0c:	movt	r0, #1
   13a10:	bl	13edc <__assert_fail@plt+0x2748>
   13a14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a18:	ldrh	r1, [r0]
   13a1c:	rev16	r1, r1
   13a20:	strh	r1, [r0]
   13a24:	ldrh	r1, [r0, #2]
   13a28:	rev16	r1, r1
   13a2c:	strh	r1, [r0, #2]
   13a30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a34:	ldrh	r1, [r0]
   13a38:	cmp	r1, #3
   13a3c:	bne	13990 <__assert_fail@plt+0x21fc>
   13a40:	ldrh	r0, [r0, #2]
   13a44:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13a48:	cmp	r1, r0
   13a4c:	beq	13aa0 <__assert_fail@plt+0x230c>
   13a50:	ldr	r0, [r4]
   13a54:	bl	1440c <__assert_fail@plt+0x2c78>
   13a58:	cmp	r0, #0
   13a5c:	beq	13a84 <__assert_fail@plt+0x22f0>
   13a60:	mov	r1, r0
   13a64:	movw	r0, #54504	; 0xd4e8
   13a68:	movt	r0, #2
   13a6c:	ldr	r0, [r0]
   13a70:	cmp	r0, #0
   13a74:	beq	13a84 <__assert_fail@plt+0x22f0>
   13a78:	movw	r0, #47513	; 0xb999
   13a7c:	movt	r0, #1
   13a80:	bl	11458 <printf@plt>
   13a84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a88:	ldrh	r0, [r0, #2]
   13a8c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13a90:	sub	r1, r1, #1
   13a94:	cmp	r1, r0
   13a98:	bne	13998 <__assert_fail@plt+0x2204>
   13a9c:	b	1391c <__assert_fail@plt+0x2188>
   13aa0:	ldr	r3, [sp, #20]
   13aa4:	sub	r2, r9, #4
   13aa8:	mov	r0, r6
   13aac:	sub	r1, fp, #44	; 0x2c
   13ab0:	bl	14294 <__assert_fail@plt+0x2b00>
   13ab4:	str	r0, [fp, #-52]	; 0xffffffcc
   13ab8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13abc:	cmn	r0, #1
   13ac0:	ble	13c6c <__assert_fail@plt+0x24d8>
   13ac4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13ac8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13acc:	add	r0, r1, r0
   13ad0:	str	r0, [fp, #-60]	; 0xffffffc4
   13ad4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13ad8:	cmp	r0, #512	; 0x200
   13adc:	beq	13840 <__assert_fail@plt+0x20ac>
   13ae0:	b	13af8 <__assert_fail@plt+0x2364>
   13ae4:	ldrsh	r1, [r0, #2]
   13ae8:	add	r2, r0, #4
   13aec:	movw	r0, #47494	; 0xb986
   13af0:	movt	r0, #1
   13af4:	bl	11458 <printf@plt>
   13af8:	mov	r0, #1024	; 0x400
   13afc:	movw	r1, #54508	; 0xd4ec
   13b00:	movw	r2, #54376	; 0xd468
   13b04:	mov	r3, #0
   13b08:	strh	r0, [r7]
   13b0c:	movt	r1, #2
   13b10:	movt	r2, #2
   13b14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13b18:	ldr	r1, [r1]
   13b1c:	str	r2, [sp]
   13b20:	mov	r2, #4
   13b24:	rev16	r0, r0
   13b28:	strh	r0, [r7, #2]
   13b2c:	ldr	r0, [r4]
   13b30:	str	r1, [sp, #4]
   13b34:	mov	r1, r7
   13b38:	bl	116bc <sendto@plt>
   13b3c:	ldr	r1, [sp, #20]
   13b40:	mov	r0, r6
   13b44:	bl	14304 <__assert_fail@plt+0x2b70>
   13b48:	mov	r0, r6
   13b4c:	bl	116a4 <fclose@plt>
   13b50:	movw	r4, #55980	; 0xdaac
   13b54:	mov	r1, #0
   13b58:	movt	r4, #2
   13b5c:	mov	r0, r4
   13b60:	bl	1156c <gettimeofday@plt>
   13b64:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13b68:	cmp	r0, #0
   13b6c:	beq	13c44 <__assert_fail@plt+0x24b0>
   13b70:	movw	r0, #55972	; 0xdaa4
   13b74:	movw	r1, #46473	; 0xb589
   13b78:	vldr	s2, [r4]
   13b7c:	vmov.f64	d16, #36	; 0x41200000  10.0
   13b80:	movt	r0, #2
   13b84:	movt	r1, #5368	; 0x14f8
   13b88:	mov	r3, r0
   13b8c:	ldr	r0, [r0, #4]
   13b90:	vldr	s0, [r3]
   13b94:	smmul	r0, r0, r1
   13b98:	asr	r2, r0, #13
   13b9c:	add	r0, r2, r0, lsr #31
   13ba0:	ldr	r2, [r4, #4]
   13ba4:	vcvt.f64.s32	d17, s0
   13ba8:	vmov	s4, r0
   13bac:	movw	r0, #48070	; 0xbbc6
   13bb0:	movt	r0, #1
   13bb4:	smmul	r1, r2, r1
   13bb8:	asr	r2, r1, #13
   13bbc:	vcvt.f64.s32	d18, s4
   13bc0:	vcvt.f64.s32	d19, s2
   13bc4:	add	r1, r2, r1, lsr #31
   13bc8:	vmov	s6, r1
   13bcc:	movw	r1, #47542	; 0xb9b6
   13bd0:	movt	r1, #1
   13bd4:	vmla.f64	d18, d17, d16
   13bd8:	vcvt.f64.s32	d20, s6
   13bdc:	ldr	r4, [fp, #-60]	; 0xffffffc4
   13be0:	mov	r2, r4
   13be4:	vmla.f64	d20, d19, d16
   13be8:	vsub.f64	d17, d20, d18
   13bec:	vdiv.f64	d8, d17, d16
   13bf0:	vstr	d8, [sp]
   13bf4:	bl	11458 <printf@plt>
   13bf8:	movw	r0, #54372	; 0xd464
   13bfc:	movt	r0, #2
   13c00:	ldr	r0, [r0]
   13c04:	cmp	r0, #0
   13c08:	beq	13c30 <__assert_fail@plt+0x249c>
   13c0c:	vmov	s0, r4
   13c10:	vmov.f64	d16, #32	; 0x41000000  8.0
   13c14:	movw	r0, #48098	; 0xbbe2
   13c18:	movt	r0, #1
   13c1c:	vcvt.f64.u32	d17, s0
   13c20:	vmul.f64	d16, d17, d16
   13c24:	vdiv.f64	d16, d16, d8
   13c28:	vmov	r2, r3, d16
   13c2c:	bl	11458 <printf@plt>
   13c30:	movw	r0, #54348	; 0xd44c
   13c34:	movt	r0, #2
   13c38:	ldr	r1, [r0]
   13c3c:	mov	r0, #10
   13c40:	bl	11704 <putc@plt>
   13c44:	sub	sp, fp, #40	; 0x28
   13c48:	vpop	{d8}
   13c4c:	add	sp, sp, #4
   13c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c54:	mov	r0, #0
   13c58:	bl	1150c <alarm@plt>
   13c5c:	movw	r0, #47472	; 0xb970
   13c60:	movt	r0, #1
   13c64:	bl	1153c <perror@plt>
   13c68:	b	13af8 <__assert_fail@plt+0x2364>
   13c6c:	bl	11638 <__errno_location@plt>
   13c70:	ldr	r0, [r0]
   13c74:	add	r0, r0, #100	; 0x64
   13c78:	bl	13dbc <__assert_fail@plt+0x2628>
   13c7c:	b	13af8 <__assert_fail@plt+0x2364>
   13c80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13c84:	add	fp, sp, #24
   13c88:	mov	r9, r0
   13c8c:	movw	r0, #53856	; 0xd260
   13c90:	movt	r0, #2
   13c94:	ldr	r6, [r0]
   13c98:	cmp	r6, #0
   13c9c:	beq	13d4c <__assert_fail@plt+0x25b8>
   13ca0:	ldrb	ip, [r9]
   13ca4:	mov	r7, #0
   13ca8:	mov	r4, #0
   13cac:	clz	r2, ip
   13cb0:	lsr	lr, r2, #5
   13cb4:	mov	r2, #0
   13cb8:	mov	r8, r2
   13cbc:	ldrb	r2, [r6]
   13cc0:	mov	r3, r7
   13cc4:	mov	r5, r4
   13cc8:	mov	r7, lr
   13ccc:	cmp	ip, r2
   13cd0:	mov	r2, r9
   13cd4:	bne	13d04 <__assert_fail@plt+0x2570>
   13cd8:	add	r4, r6, #1
   13cdc:	mov	r7, lr
   13ce0:	mov	r2, r9
   13ce4:	tst	r7, #1
   13ce8:	bne	13d48 <__assert_fail@plt+0x25b4>
   13cec:	ldrb	r1, [r2, #1]!
   13cf0:	ldrb	r6, [r4], #1
   13cf4:	clz	r7, r1
   13cf8:	cmp	r1, r6
   13cfc:	lsr	r7, r7, #5
   13d00:	beq	13ce4 <__assert_fail@plt+0x2550>
   13d04:	cmp	r7, #0
   13d08:	beq	13d24 <__assert_fail@plt+0x2590>
   13d0c:	sub	r7, r2, r9
   13d10:	mov	r4, #1
   13d14:	mov	r2, r0
   13d18:	cmp	r7, r3
   13d1c:	bgt	13d30 <__assert_fail@plt+0x259c>
   13d20:	addeq	r5, r5, #1
   13d24:	mov	r2, r8
   13d28:	mov	r4, r5
   13d2c:	mov	r7, r3
   13d30:	ldr	r6, [r0, #12]!
   13d34:	cmp	r6, #0
   13d38:	bne	13cb8 <__assert_fail@plt+0x2524>
   13d3c:	cmp	r4, #1
   13d40:	mvngt	r2, #0
   13d44:	mov	r0, r2
   13d48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13d4c:	mov	r0, #0
   13d50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13d54:	push	{fp, lr}
   13d58:	mov	fp, sp
   13d5c:	movw	r0, #54116	; 0xd364
   13d60:	movw	r1, #55968	; 0xdaa0
   13d64:	movt	r0, #2
   13d68:	movt	r1, #2
   13d6c:	ldr	r0, [r0]
   13d70:	ldr	r2, [r1]
   13d74:	add	r0, r2, r0
   13d78:	str	r0, [r1]
   13d7c:	movw	r1, #54120	; 0xd368
   13d80:	movt	r1, #2
   13d84:	ldr	r1, [r1]
   13d88:	cmp	r0, r1
   13d8c:	bge	13da0 <__assert_fail@plt+0x260c>
   13d90:	movw	r0, #55104	; 0xd740
   13d94:	mov	r1, #1
   13d98:	movt	r0, #2
   13d9c:	bl	11470 <longjmp@plt>
   13da0:	movw	r0, #48243	; 0xbc73
   13da4:	movt	r0, #1
   13da8:	bl	115a8 <puts@plt>
   13dac:	movw	r0, #55576	; 0xd918
   13db0:	mvn	r1, #0
   13db4:	movt	r0, #2
   13db8:	bl	11470 <longjmp@plt>
   13dbc:	push	{r4, r5, r6, sl, fp, lr}
   13dc0:	add	fp, sp, #16
   13dc4:	sub	sp, sp, #8
   13dc8:	movw	r6, #54584	; 0xd538
   13dcc:	mov	r1, #1280	; 0x500
   13dd0:	movt	r6, #2
   13dd4:	strh	r1, [r6]
   13dd8:	rev16	r1, r0
   13ddc:	strh	r1, [r6, #2]
   13de0:	movw	r1, #54128	; 0xd370
   13de4:	movt	r1, #2
   13de8:	sub	r2, r1, #4
   13dec:	ldr	r1, [r2, #4]
   13df0:	add	r5, r2, #8
   13df4:	cmp	r1, #0
   13df8:	bmi	13e08 <__assert_fail@plt+0x2674>
   13dfc:	cmp	r1, r0
   13e00:	mov	r2, r5
   13e04:	bne	13dec <__assert_fail@plt+0x2658>
   13e08:	cmp	r1, #0
   13e0c:	bmi	13e18 <__assert_fail@plt+0x2684>
   13e10:	ldr	r4, [r5]
   13e14:	b	13e30 <__assert_fail@plt+0x269c>
   13e18:	sub	r0, r0, #100	; 0x64
   13e1c:	bl	115cc <strerror@plt>
   13e20:	mov	r4, r0
   13e24:	str	r0, [r5]
   13e28:	mov	r0, #0
   13e2c:	strh	r0, [r6, #2]
   13e30:	mov	r0, r4
   13e34:	bl	11614 <strlen@plt>
   13e38:	mov	r5, r0
   13e3c:	add	r0, r6, #4
   13e40:	mov	r1, r4
   13e44:	add	r2, r5, #1
   13e48:	bl	114d0 <memcpy@plt>
   13e4c:	movw	r0, #54504	; 0xd4e8
   13e50:	add	r4, r5, #4
   13e54:	movt	r0, #2
   13e58:	ldr	r0, [r0]
   13e5c:	cmp	r0, #0
   13e60:	beq	13e7c <__assert_fail@plt+0x26e8>
   13e64:	movw	r0, #47467	; 0xb96b
   13e68:	movw	r1, #54584	; 0xd538
   13e6c:	mov	r2, r4
   13e70:	movt	r0, #1
   13e74:	movt	r1, #2
   13e78:	bl	13edc <__assert_fail@plt+0x2748>
   13e7c:	movw	r1, #54508	; 0xd4ec
   13e80:	movw	r0, #54124	; 0xd36c
   13e84:	movw	r2, #54376	; 0xd468
   13e88:	mov	r3, #0
   13e8c:	movt	r1, #2
   13e90:	movt	r0, #2
   13e94:	movt	r2, #2
   13e98:	ldr	r1, [r1]
   13e9c:	ldr	r0, [r0]
   13ea0:	str	r2, [sp]
   13ea4:	mov	r2, r4
   13ea8:	str	r1, [sp, #4]
   13eac:	movw	r1, #54584	; 0xd538
   13eb0:	movt	r1, #2
   13eb4:	bl	116bc <sendto@plt>
   13eb8:	cmp	r0, r4
   13ebc:	bne	13ec8 <__assert_fail@plt+0x2734>
   13ec0:	sub	sp, fp, #16
   13ec4:	pop	{r4, r5, r6, sl, fp, pc}
   13ec8:	movw	r0, #47946	; 0xbb4a
   13ecc:	movt	r0, #1
   13ed0:	sub	sp, fp, #16
   13ed4:	pop	{r4, r5, r6, sl, fp, lr}
   13ed8:	b	1153c <perror@plt>
   13edc:	push	{r4, r5, r6, sl, fp, lr}
   13ee0:	add	fp, sp, #16
   13ee4:	mov	r4, r1
   13ee8:	mov	r1, r0
   13eec:	mov	r5, r2
   13ef0:	ldrh	r0, [r4]
   13ef4:	rev16	r6, r0
   13ef8:	cmp	r0, #0
   13efc:	beq	13f24 <__assert_fail@plt+0x2790>
   13f00:	uxth	r0, r6
   13f04:	cmp	r0, #6
   13f08:	bcs	13f24 <__assert_fail@plt+0x2790>
   13f0c:	movw	r0, #48316	; 0xbcbc
   13f10:	movt	r0, #1
   13f14:	ldr	r2, [r0, r6, lsl #2]
   13f18:	movw	r0, #47990	; 0xbb76
   13f1c:	movt	r0, #1
   13f20:	b	13f30 <__assert_fail@plt+0x279c>
   13f24:	movw	r0, #47976	; 0xbb68
   13f28:	mov	r2, r6
   13f2c:	movt	r0, #1
   13f30:	bl	11458 <printf@plt>
   13f34:	mvn	r0, #0
   13f38:	uxtah	r0, r0, r6
   13f3c:	cmp	r0, #4
   13f40:	bhi	13f88 <__assert_fail@plt+0x27f4>
   13f44:	add	r1, pc, #0
   13f48:	ldr	pc, [r1, r0, lsl #2]
   13f4c:	andeq	r3, r1, r0, ror #30
   13f50:	andeq	r3, r1, r0, ror #30
   13f54:	andeq	r3, r1, ip, lsl #31
   13f58:	andeq	r3, r1, r8, lsr #31
   13f5c:	andeq	r3, r1, r0, asr #31
   13f60:	add	r4, r4, #2
   13f64:	mov	r0, r4
   13f68:	bl	11614 <strlen@plt>
   13f6c:	add	r0, r4, r0
   13f70:	mov	r1, r4
   13f74:	add	r2, r0, #1
   13f78:	movw	r0, #47997	; 0xbb7d
   13f7c:	movt	r0, #1
   13f80:	pop	{r4, r5, r6, sl, fp, lr}
   13f84:	b	11458 <printf@plt>
   13f88:	pop	{r4, r5, r6, sl, fp, pc}
   13f8c:	ldrh	r0, [r4, #2]
   13f90:	sub	r2, r5, #4
   13f94:	rev16	r1, r0
   13f98:	movw	r0, #48017	; 0xbb91
   13f9c:	movt	r0, #1
   13fa0:	pop	{r4, r5, r6, sl, fp, lr}
   13fa4:	b	11458 <printf@plt>
   13fa8:	ldrh	r0, [r4, #2]
   13fac:	rev16	r1, r0
   13fb0:	movw	r0, #48039	; 0xbba7
   13fb4:	movt	r0, #1
   13fb8:	pop	{r4, r5, r6, sl, fp, lr}
   13fbc:	b	11458 <printf@plt>
   13fc0:	ldrh	r0, [r4, #2]
   13fc4:	add	r2, r4, #4
   13fc8:	rev16	r1, r0
   13fcc:	movw	r0, #48051	; 0xbbb3
   13fd0:	movt	r0, #1
   13fd4:	pop	{r4, r5, r6, sl, fp, lr}
   13fd8:	b	11458 <printf@plt>
   13fdc:	push	{r4, r5, fp, lr}
   13fe0:	add	fp, sp, #8
   13fe4:	cmp	r0, #0
   13fe8:	beq	14018 <__assert_fail@plt+0x2884>
   13fec:	mov	r1, r0
   13ff0:	mov	r0, #7
   13ff4:	cmp	r1, #118	; 0x76
   13ff8:	popne	{r4, r5, fp, pc}
   13ffc:	movw	r0, #54372	; 0xd464
   14000:	movt	r0, #2
   14004:	ldr	r1, [r0]
   14008:	add	r1, r1, #1
   1400c:	str	r1, [r0]
   14010:	mov	r0, #0
   14014:	pop	{r4, r5, fp, pc}
   14018:	ldr	r0, [r2, #20]
   1401c:	movw	r5, #54036	; 0xd314
   14020:	mov	r4, r1
   14024:	movt	r5, #2
   14028:	cmp	r0, #1
   1402c:	bhi	1403c <__assert_fail@plt+0x28a8>
   14030:	ldr	r0, [r5]
   14034:	cmp	r0, #3
   14038:	blt	14058 <__assert_fail@plt+0x28c4>
   1403c:	movw	r0, #54336	; 0xd440
   14040:	movt	r0, #2
   14044:	ldr	r1, [r0]
   14048:	mov	r0, r2
   1404c:	movw	r2, #262	; 0x106
   14050:	bl	159d8 <argp_state_help@@Base>
   14054:	ldr	r0, [r5]
   14058:	add	r1, r0, #1
   1405c:	str	r1, [r5]
   14060:	movw	r1, #54024	; 0xd308
   14064:	movt	r1, #2
   14068:	str	r4, [r1, r0, lsl #2]
   1406c:	mov	r0, #0
   14070:	pop	{r4, r5, fp, pc}
   14074:	movw	r0, #54256	; 0xd3f0
   14078:	mvn	r1, #0
   1407c:	mvn	r2, #2
   14080:	movt	r0, #2
   14084:	str	r1, [r0]
   14088:	movw	r0, #54512	; 0xd4f0
   1408c:	mov	r1, #0
   14090:	movt	r0, #2
   14094:	str	r1, [r0]
   14098:	movw	r0, #56228	; 0xdba4
   1409c:	movt	r0, #2
   140a0:	str	r2, [r0]
   140a4:	movw	r2, #54516	; 0xd4f4
   140a8:	movt	r2, #2
   140ac:	str	r1, [r2]
   140b0:	mvn	r2, #1
   140b4:	str	r2, [r0, #520]	; 0x208
   140b8:	movw	r2, #54520	; 0xd4f8
   140bc:	add	r0, r0, #4
   140c0:	movt	r2, #2
   140c4:	str	r1, [r2]
   140c8:	bx	lr
   140cc:	movw	r0, #54256	; 0xd3f0
   140d0:	mvn	r1, #0
   140d4:	mvn	r2, #2
   140d8:	movt	r0, #2
   140dc:	str	r1, [r0]
   140e0:	movw	r0, #54512	; 0xd4f0
   140e4:	mov	r1, #0
   140e8:	movt	r0, #2
   140ec:	str	r1, [r0]
   140f0:	movw	r0, #56228	; 0xdba4
   140f4:	movt	r0, #2
   140f8:	str	r2, [r0]
   140fc:	movw	r2, #54516	; 0xd4f4
   14100:	movt	r2, #2
   14104:	str	r1, [r2]
   14108:	mvn	r1, #1
   1410c:	mov	r2, #1
   14110:	str	r1, [r0, #520]	; 0x208
   14114:	movw	r1, #54520	; 0xd4f8
   14118:	add	r0, r0, #4
   1411c:	movt	r1, #2
   14120:	str	r2, [r1]
   14124:	bx	lr
   14128:	push	{r4, r5, r6, r7, fp, lr}
   1412c:	add	fp, sp, #16
   14130:	mov	r4, r1
   14134:	movw	r1, #54516	; 0xd4f4
   14138:	movw	r5, #56228	; 0xdba4
   1413c:	mvn	r6, #1
   14140:	movt	r1, #2
   14144:	movt	r5, #2
   14148:	ldr	r3, [r1]
   1414c:	add	r7, r3, r3, lsl #6
   14150:	clz	r3, r3
   14154:	str	r6, [r5, r7, lsl #3]
   14158:	lsr	r6, r3, #5
   1415c:	mov	r7, r5
   14160:	str	r6, [r1]
   14164:	orr	r1, r6, r6, lsl #6
   14168:	ldr	r1, [r7, r1, lsl #3]!
   1416c:	cmn	r1, #2
   14170:	bne	14180 <__assert_fail@plt+0x29ec>
   14174:	mov	r1, r2
   14178:	bl	14198 <__assert_fail@plt+0x2a04>
   1417c:	ldr	r1, [r7]
   14180:	add	r0, r6, r6, lsl #6
   14184:	add	r0, r5, r0, lsl #3
   14188:	add	r0, r0, #4
   1418c:	str	r0, [r4]
   14190:	mov	r0, r1
   14194:	pop	{r4, r5, r6, r7, fp, pc}
   14198:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1419c:	add	fp, sp, #28
   141a0:	sub	sp, sp, #4
   141a4:	movw	r3, #54520	; 0xd4f8
   141a8:	movw	r2, #56228	; 0xdba4
   141ac:	mov	sl, r0
   141b0:	movt	r3, #2
   141b4:	movt	r2, #2
   141b8:	ldr	r7, [r3]
   141bc:	mov	r9, r2
   141c0:	add	r0, r7, r7, lsl #6
   141c4:	ldr	r6, [r9, r0, lsl #3]!
   141c8:	cmn	r6, #2
   141cc:	bne	1428c <__assert_fail@plt+0x2af8>
   141d0:	clz	r7, r7
   141d4:	cmp	r1, #0
   141d8:	lsr	r7, r7, #5
   141dc:	str	r7, [r3]
   141e0:	beq	14270 <__assert_fail@plt+0x2adc>
   141e4:	movw	r5, #54512	; 0xd4f0
   141e8:	movw	r4, #54256	; 0xd3f0
   141ec:	add	r8, r2, r0, lsl #3
   141f0:	mov	r7, #0
   141f4:	movt	r5, #2
   141f8:	movt	r4, #2
   141fc:	add	r6, r8, #8
   14200:	ldr	r0, [r5]
   14204:	cmp	r0, #0
   14208:	beq	14220 <__assert_fail@plt+0x2a8c>
   1420c:	ldr	r0, [r4]
   14210:	mov	r1, #0
   14214:	cmp	r0, #10
   14218:	movwne	r0, #0
   1421c:	b	14240 <__assert_fail@plt+0x2aac>
   14220:	mov	r0, sl
   14224:	bl	1177c <getc@plt>
   14228:	cmp	r0, #10
   1422c:	cmpne	r0, #13
   14230:	bne	14258 <__assert_fail@plt+0x2ac4>
   14234:	str	r0, [r4]
   14238:	mov	r0, #13
   1423c:	mov	r1, #1
   14240:	str	r1, [r5]
   14244:	strb	r0, [r6, r7]
   14248:	add	r7, r7, #1
   1424c:	cmp	r7, #512	; 0x200
   14250:	bne	14200 <__assert_fail@plt+0x2a6c>
   14254:	b	14260 <__assert_fail@plt+0x2acc>
   14258:	cmn	r0, #1
   1425c:	bne	14244 <__assert_fail@plt+0x2ab0>
   14260:	add	r0, r8, r7
   14264:	add	r0, r0, #8
   14268:	sub	r0, r0, r6
   1426c:	b	14288 <__assert_fail@plt+0x2af4>
   14270:	add	r4, r2, r0, lsl #3
   14274:	mov	r0, sl
   14278:	bl	1168c <fileno@plt>
   1427c:	add	r1, r4, #8
   14280:	mov	r2, #512	; 0x200
   14284:	bl	11464 <read@plt>
   14288:	str	r0, [r9]
   1428c:	sub	sp, fp, #28
   14290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14294:	push	{r4, r5, r6, r7, fp, lr}
   14298:	add	fp, sp, #16
   1429c:	movw	r7, #54516	; 0xd4f4
   142a0:	mov	r5, r1
   142a4:	movw	r6, #56228	; 0xdba4
   142a8:	mov	r4, r2
   142ac:	movt	r7, #2
   142b0:	movt	r6, #2
   142b4:	ldr	r1, [r7]
   142b8:	add	r2, r1, r1, lsl #6
   142bc:	clz	r1, r1
   142c0:	lsr	r1, r1, #5
   142c4:	str	r4, [r6, r2, lsl #3]
   142c8:	orr	r2, r1, r1, lsl #6
   142cc:	str	r1, [r7]
   142d0:	ldr	r2, [r6, r2, lsl #3]
   142d4:	cmn	r2, #2
   142d8:	beq	142e8 <__assert_fail@plt+0x2b54>
   142dc:	mov	r1, r3
   142e0:	bl	14304 <__assert_fail@plt+0x2b70>
   142e4:	ldr	r1, [r7]
   142e8:	add	r0, r1, r1, lsl #6
   142ec:	mvn	r1, #2
   142f0:	str	r1, [r6, r0, lsl #3]!
   142f4:	add	r0, r6, #4
   142f8:	str	r0, [r5]
   142fc:	mov	r0, r4
   14300:	pop	{r4, r5, r6, r7, fp, pc}
   14304:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14308:	add	fp, sp, #28
   1430c:	sub	sp, sp, #4
   14310:	movw	r7, #54520	; 0xd4f8
   14314:	movw	r5, #56228	; 0xdba4
   14318:	mov	r9, r0
   1431c:	mov	r0, #0
   14320:	movt	r7, #2
   14324:	movt	r5, #2
   14328:	ldr	r6, [r7]
   1432c:	mov	r3, r5
   14330:	add	r2, r6, r6, lsl #6
   14334:	ldr	r4, [r3, r2, lsl #3]!
   14338:	cmn	r4, #1
   1433c:	blt	143dc <__assert_fail@plt+0x2c48>
   14340:	mvn	r0, #1
   14344:	cmp	r4, #1
   14348:	str	r0, [r3]
   1434c:	clz	r0, r6
   14350:	lsr	r0, r0, #5
   14354:	str	r0, [r7]
   14358:	blt	143e4 <__assert_fail@plt+0x2c50>
   1435c:	add	r0, r5, r2, lsl #3
   14360:	cmp	r1, #0
   14364:	add	r6, r0, #8
   14368:	beq	143f0 <__assert_fail@plt+0x2c5c>
   1436c:	movw	r8, #54256	; 0xd3f0
   14370:	mov	r5, #0
   14374:	mov	sl, #1
   14378:	movt	r8, #2
   1437c:	ldr	r0, [r8]
   14380:	b	143a4 <__assert_fail@plt+0x2c10>
   14384:	mov	r0, r7
   14388:	mov	r1, r9
   1438c:	bl	11704 <putc@plt>
   14390:	add	r5, r5, #1
   14394:	mov	r0, r7
   14398:	str	r7, [r8]
   1439c:	cmp	r4, r5
   143a0:	beq	143d8 <__assert_fail@plt+0x2c44>
   143a4:	ldrb	r7, [r6, r5]
   143a8:	cmp	r0, #13
   143ac:	bne	14384 <__assert_fail@plt+0x2bf0>
   143b0:	cmp	r7, #0
   143b4:	beq	14390 <__assert_fail@plt+0x2bfc>
   143b8:	cmp	r7, #10
   143bc:	bne	14384 <__assert_fail@plt+0x2bf0>
   143c0:	mov	r0, r9
   143c4:	mvn	r2, #0
   143c8:	mvn	r3, #0
   143cc:	str	sl, [sp]
   143d0:	bl	116b0 <fseeko64@plt>
   143d4:	b	14384 <__assert_fail@plt+0x2bf0>
   143d8:	mov	r0, r4
   143dc:	sub	sp, fp, #28
   143e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143e4:	mvn	r0, #0
   143e8:	sub	sp, fp, #28
   143ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143f0:	mov	r0, r9
   143f4:	bl	1168c <fileno@plt>
   143f8:	mov	r1, r6
   143fc:	mov	r2, r4
   14400:	sub	sp, fp, #28
   14404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14408:	b	11680 <write@plt>
   1440c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14410:	add	fp, sp, #28
   14414:	sub	sp, sp, #668	; 0x29c
   14418:	sub	r2, fp, #36	; 0x24
   1441c:	movw	r1, #21531	; 0x541b
   14420:	mov	r4, r0
   14424:	bl	18e6c <argp_parse@@Base+0x13cc>
   14428:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1442c:	mov	r5, #0
   14430:	cmp	r0, #0
   14434:	beq	1448c <__assert_fail@plt+0x2cf8>
   14438:	mov	r8, #128	; 0x80
   1443c:	add	r9, sp, #12
   14440:	add	sl, sp, #16
   14444:	add	r6, sp, #144	; 0x90
   14448:	sub	r7, fp, #36	; 0x24
   1444c:	mov	r0, r4
   14450:	mov	r1, r6
   14454:	mov	r2, #516	; 0x204
   14458:	mov	r3, #0
   1445c:	str	r8, [sp, #12]
   14460:	str	sl, [sp]
   14464:	str	r9, [sp, #4]
   14468:	bl	11500 <recvfrom@plt>
   1446c:	mov	r0, r4
   14470:	movw	r1, #21531	; 0x541b
   14474:	mov	r2, r7
   14478:	bl	18e6c <argp_parse@@Base+0x13cc>
   1447c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14480:	add	r5, r5, #1
   14484:	cmp	r0, #0
   14488:	bne	1444c <__assert_fail@plt+0x2cb8>
   1448c:	mov	r0, r5
   14490:	sub	sp, fp, #28
   14494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014498 <argp_help@@Base>:
   14498:	push	{fp, lr}
   1449c:	mov	fp, sp
   144a0:	sub	sp, sp, #8
   144a4:	mov	ip, r2
   144a8:	mov	r2, r1
   144ac:	str	r3, [sp]
   144b0:	mov	r1, #0
   144b4:	mov	r3, ip
   144b8:	bl	144c4 <argp_help@@Base+0x2c>
   144bc:	mov	sp, fp
   144c0:	pop	{fp, pc}
   144c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144c8:	add	fp, sp, #28
   144cc:	sub	sp, sp, #108	; 0x6c
   144d0:	cmp	r2, #0
   144d4:	str	r3, [fp, #-92]	; 0xffffffa4
   144d8:	str	r1, [fp, #-100]	; 0xffffff9c
   144dc:	str	r0, [fp, #-108]	; 0xffffff94
   144e0:	beq	15860 <argp_help@@Base+0x13c8>
   144e4:	ldr	r0, [fp, #8]
   144e8:	mov	r4, r2
   144ec:	str	r0, [fp, #-96]	; 0xffffffa0
   144f0:	mov	r0, r2
   144f4:	bl	11710 <flockfile@plt>
   144f8:	movw	r9, #54264	; 0xd3f8
   144fc:	movt	r9, #2
   14500:	ldr	r0, [r9, #36]	; 0x24
   14504:	cmp	r0, #0
   14508:	bne	14a24 <argp_help@@Base+0x58c>
   1450c:	movw	r0, #48526	; 0xbd8e
   14510:	movt	r0, #1
   14514:	bl	1159c <getenv@plt>
   14518:	mov	r8, r0
   1451c:	mov	r0, #32
   14520:	mov	r1, r9
   14524:	add	r3, r9, #16
   14528:	sub	r2, fp, #88	; 0x58
   1452c:	vld1.64	{d16-d17}, [r1], r0
   14530:	vld1.64	{d18-d19}, [r3]
   14534:	add	r7, r2, #16
   14538:	cmp	r8, #0
   1453c:	vldr	d20, [r1]
   14540:	mov	r1, r2
   14544:	vst1.64	{d16-d17}, [r1], r0
   14548:	vst1.64	{d18-d19}, [r7]
   1454c:	vstr	d20, [r1]
   14550:	beq	14a24 <argp_help@@Base+0x58c>
   14554:	ldrb	r5, [r8]
   14558:	str	r7, [fp, #-116]	; 0xffffff8c
   1455c:	str	r3, [fp, #-112]	; 0xffffff90
   14560:	str	r4, [fp, #-132]	; 0xffffff7c
   14564:	cmp	r5, #0
   14568:	beq	14934 <argp_help@@Base+0x49c>
   1456c:	movw	r7, #49192	; 0xc028
   14570:	movt	r7, #1
   14574:	bl	115f0 <__ctype_b_loc@plt>
   14578:	str	r0, [fp, #-104]	; 0xffffff98
   1457c:	b	145b0 <argp_help@@Base+0x118>
   14580:	ldrb	r0, [r6, #15]
   14584:	sub	r1, fp, #88	; 0x58
   14588:	str	r5, [r1, r0]
   1458c:	mov	r8, r4
   14590:	movw	r9, #54264	; 0xd3f8
   14594:	ldrb	r0, [r8], #1
   14598:	movt	r9, #2
   1459c:	cmp	r0, #44	; 0x2c
   145a0:	movne	r8, r4
   145a4:	ldrb	r5, [r8]
   145a8:	cmp	r5, #0
   145ac:	beq	14934 <argp_help@@Base+0x49c>
   145b0:	ldr	r0, [fp, #-104]	; 0xffffff98
   145b4:	uxtb	r1, r5
   145b8:	ldr	r0, [r0]
   145bc:	add	r1, r0, r1, lsl #1
   145c0:	ldrh	r1, [r1]
   145c4:	tst	r1, #8192	; 0x2000
   145c8:	beq	145d8 <argp_help@@Base+0x140>
   145cc:	ldrb	r5, [r8, #1]!
   145d0:	add	r1, r0, r5, lsl #1
   145d4:	b	145c0 <argp_help@@Base+0x128>
   145d8:	tst	r1, #1024	; 0x400
   145dc:	beq	14908 <argp_help@@Base+0x470>
   145e0:	mov	r3, r5
   145e4:	mov	r2, r8
   145e8:	b	145f0 <argp_help@@Base+0x158>
   145ec:	ldrb	r3, [r2, #1]!
   145f0:	uxtb	r6, r3
   145f4:	add	r1, r0, r6, lsl #1
   145f8:	ldrh	r1, [r1]
   145fc:	tst	r1, #8
   14600:	bne	145ec <argp_help@@Base+0x154>
   14604:	cmp	r6, #95	; 0x5f
   14608:	cmpne	r6, #45	; 0x2d
   1460c:	beq	145ec <argp_help@@Base+0x154>
   14610:	tst	r1, #8192	; 0x2000
   14614:	mov	r4, r2
   14618:	beq	14634 <argp_help@@Base+0x19c>
   1461c:	mov	r4, r2
   14620:	ldrb	r3, [r4, #1]!
   14624:	add	r1, r0, r3, lsl #1
   14628:	ldrh	r1, [r1]
   1462c:	tst	r1, #8192	; 0x2000
   14630:	bne	14620 <argp_help@@Base+0x188>
   14634:	sub	r9, r2, r8
   14638:	uxtb	r2, r3
   1463c:	cmp	r2, #0
   14640:	cmpne	r2, #44	; 0x2c
   14644:	bne	14694 <argp_help@@Base+0x1fc>
   14648:	uxtb	r0, r5
   1464c:	mov	sl, #1
   14650:	cmp	r0, #110	; 0x6e
   14654:	bne	1468c <argp_help@@Base+0x1f4>
   14658:	ldrb	r0, [r8, #1]
   1465c:	mov	sl, #1
   14660:	cmp	r0, #111	; 0x6f
   14664:	bne	1468c <argp_help@@Base+0x1f4>
   14668:	ldrb	r0, [r8, #2]
   1466c:	mov	sl, #1
   14670:	cmp	r0, #45	; 0x2d
   14674:	bne	1468c <argp_help@@Base+0x1f4>
   14678:	sub	r9, r9, #3
   1467c:	add	r8, r8, #3
   14680:	mov	r5, #0
   14684:	mov	sl, #1
   14688:	b	14718 <argp_help@@Base+0x280>
   1468c:	mov	r5, #1
   14690:	b	14718 <argp_help@@Base+0x280>
   14694:	cmp	r2, #61	; 0x3d
   14698:	bne	146b0 <argp_help@@Base+0x218>
   1469c:	ldrb	r1, [r4, #1]!
   146a0:	add	r1, r0, r1, lsl #1
   146a4:	ldrh	r1, [r1]
   146a8:	tst	r1, #8192	; 0x2000
   146ac:	bne	1469c <argp_help@@Base+0x204>
   146b0:	mov	sl, #0
   146b4:	tst	r1, #2048	; 0x800
   146b8:	bne	146c4 <argp_help@@Base+0x22c>
   146bc:	mov	r5, #0
   146c0:	b	14718 <argp_help@@Base+0x280>
   146c4:	mov	r0, r4
   146c8:	mov	r1, #0
   146cc:	mov	r2, #10
   146d0:	bl	1144c <strtol@plt>
   146d4:	mov	r5, r0
   146d8:	ldr	r0, [fp, #-104]	; 0xffffff98
   146dc:	sub	r4, r4, #1
   146e0:	ldr	r0, [r0]
   146e4:	ldrb	r1, [r4, #1]!
   146e8:	add	r1, r0, r1, lsl #1
   146ec:	ldrh	r1, [r1]
   146f0:	tst	r1, #2048	; 0x800
   146f4:	bne	146e4 <argp_help@@Base+0x24c>
   146f8:	mov	sl, #0
   146fc:	tst	r1, #8192	; 0x2000
   14700:	beq	14718 <argp_help@@Base+0x280>
   14704:	ldrb	r1, [r4, #1]!
   14708:	add	r1, r0, r1, lsl #1
   1470c:	ldrb	r1, [r1, #1]
   14710:	tst	r1, #32
   14714:	bne	14704 <argp_help@@Base+0x26c>
   14718:	mov	r0, r7
   1471c:	bl	11614 <strlen@plt>
   14720:	cmp	r0, r9
   14724:	bne	14744 <argp_help@@Base+0x2ac>
   14728:	mov	r0, r8
   1472c:	mov	r1, r7
   14730:	mov	r2, r9
   14734:	bl	11764 <strncmp@plt>
   14738:	cmp	r0, #0
   1473c:	mov	r6, r7
   14740:	beq	148c8 <argp_help@@Base+0x430>
   14744:	add	r6, r7, #16
   14748:	mov	r0, r6
   1474c:	bl	11614 <strlen@plt>
   14750:	cmp	r0, r9
   14754:	bne	14770 <argp_help@@Base+0x2d8>
   14758:	mov	r0, r8
   1475c:	mov	r1, r6
   14760:	mov	r2, r9
   14764:	bl	11764 <strncmp@plt>
   14768:	cmp	r0, #0
   1476c:	beq	148c8 <argp_help@@Base+0x430>
   14770:	add	r6, r7, #32
   14774:	mov	r0, r6
   14778:	bl	11614 <strlen@plt>
   1477c:	cmp	r0, r9
   14780:	bne	1479c <argp_help@@Base+0x304>
   14784:	mov	r0, r8
   14788:	mov	r1, r6
   1478c:	mov	r2, r9
   14790:	bl	11764 <strncmp@plt>
   14794:	cmp	r0, #0
   14798:	beq	148c8 <argp_help@@Base+0x430>
   1479c:	add	r6, r7, #48	; 0x30
   147a0:	mov	r0, r6
   147a4:	bl	11614 <strlen@plt>
   147a8:	cmp	r0, r9
   147ac:	bne	147c8 <argp_help@@Base+0x330>
   147b0:	mov	r0, r8
   147b4:	mov	r1, r6
   147b8:	mov	r2, r9
   147bc:	bl	11764 <strncmp@plt>
   147c0:	cmp	r0, #0
   147c4:	beq	148c8 <argp_help@@Base+0x430>
   147c8:	add	r6, r7, #64	; 0x40
   147cc:	mov	r0, r6
   147d0:	bl	11614 <strlen@plt>
   147d4:	cmp	r0, r9
   147d8:	bne	147f4 <argp_help@@Base+0x35c>
   147dc:	mov	r0, r8
   147e0:	mov	r1, r6
   147e4:	mov	r2, r9
   147e8:	bl	11764 <strncmp@plt>
   147ec:	cmp	r0, #0
   147f0:	beq	148c8 <argp_help@@Base+0x430>
   147f4:	add	r6, r7, #80	; 0x50
   147f8:	mov	r0, r6
   147fc:	bl	11614 <strlen@plt>
   14800:	cmp	r0, r9
   14804:	bne	14820 <argp_help@@Base+0x388>
   14808:	mov	r0, r8
   1480c:	mov	r1, r6
   14810:	mov	r2, r9
   14814:	bl	11764 <strncmp@plt>
   14818:	cmp	r0, #0
   1481c:	beq	148c8 <argp_help@@Base+0x430>
   14820:	add	r6, r7, #96	; 0x60
   14824:	mov	r0, r6
   14828:	bl	11614 <strlen@plt>
   1482c:	cmp	r0, r9
   14830:	bne	1484c <argp_help@@Base+0x3b4>
   14834:	mov	r0, r8
   14838:	mov	r1, r6
   1483c:	mov	r2, r9
   14840:	bl	11764 <strncmp@plt>
   14844:	cmp	r0, #0
   14848:	beq	148c8 <argp_help@@Base+0x430>
   1484c:	add	r6, r7, #112	; 0x70
   14850:	mov	r0, r6
   14854:	bl	11614 <strlen@plt>
   14858:	cmp	r0, r9
   1485c:	bne	14878 <argp_help@@Base+0x3e0>
   14860:	mov	r0, r8
   14864:	mov	r1, r6
   14868:	mov	r2, r9
   1486c:	bl	11764 <strncmp@plt>
   14870:	cmp	r0, #0
   14874:	beq	148c8 <argp_help@@Base+0x430>
   14878:	add	r6, r7, #128	; 0x80
   1487c:	mov	r0, r6
   14880:	bl	11614 <strlen@plt>
   14884:	cmp	r0, r9
   14888:	bne	148a4 <argp_help@@Base+0x40c>
   1488c:	mov	r0, r8
   14890:	mov	r1, r6
   14894:	mov	r2, r9
   14898:	bl	11764 <strncmp@plt>
   1489c:	cmp	r0, #0
   148a0:	beq	148c8 <argp_help@@Base+0x430>
   148a4:	sub	sp, sp, #8
   148a8:	str	r9, [sp]
   148ac:	str	r8, [sp, #4]
   148b0:	movw	r3, #48587	; 0xbdcb
   148b4:	mov	r1, #0
   148b8:	mov	r2, #0
   148bc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   148c0:	movt	r3, #1
   148c4:	b	148fc <argp_help@@Base+0x464>
   148c8:	cmp	sl, #0
   148cc:	beq	14580 <argp_help@@Base+0xe8>
   148d0:	ldrb	r0, [r6, #14]
   148d4:	cmp	r0, #0
   148d8:	bne	14580 <argp_help@@Base+0xe8>
   148dc:	sub	sp, sp, #8
   148e0:	str	r9, [sp]
   148e4:	str	r8, [sp, #4]
   148e8:	movw	r3, #48540	; 0xbd9c
   148ec:	mov	r1, #0
   148f0:	mov	r2, #0
   148f4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   148f8:	movt	r3, #1
   148fc:	bl	15bd8 <argp_failure@@Base>
   14900:	add	sp, sp, #8
   14904:	b	1458c <argp_help@@Base+0xf4>
   14908:	tst	r5, #255	; 0xff
   1490c:	beq	14934 <argp_help@@Base+0x49c>
   14910:	sub	sp, sp, #8
   14914:	str	r8, [sp]
   14918:	movw	r3, #48625	; 0xbdf1
   1491c:	mov	r1, #0
   14920:	mov	r2, #0
   14924:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14928:	movt	r3, #1
   1492c:	bl	15bd8 <argp_failure@@Base>
   14930:	add	sp, sp, #8
   14934:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14938:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1493c:	movw	r0, #49192	; 0xc028
   14940:	movt	r0, #1
   14944:	cmp	r2, r1
   14948:	bge	149cc <argp_help@@Base+0x534>
   1494c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14950:	cmp	r2, r1
   14954:	bge	149d4 <argp_help@@Base+0x53c>
   14958:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1495c:	cmp	r2, r1
   14960:	bge	149dc <argp_help@@Base+0x544>
   14964:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14968:	cmp	r2, r1
   1496c:	bge	149e4 <argp_help@@Base+0x54c>
   14970:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14974:	cmp	r2, r1
   14978:	bge	149ec <argp_help@@Base+0x554>
   1497c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   14980:	ldr	r4, [fp, #-132]	; 0xffffff7c
   14984:	cmp	r2, r1
   14988:	bge	159d0 <argp_help@@Base+0x1538>
   1498c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   14990:	sub	r1, fp, #88	; 0x58
   14994:	mov	r2, r1
   14998:	mov	r1, r9
   1499c:	vld1.64	{d16-d17}, [r0]
   149a0:	mov	r0, #32
   149a4:	vld1.64	{d18-d19}, [r2], r0
   149a8:	ldr	r0, [fp, #-112]	; 0xffffff90
   149ac:	vst1.64	{d16-d17}, [r0]
   149b0:	mov	r0, #36	; 0x24
   149b4:	vst1.64	{d18-d19}, [r1], r0
   149b8:	mov	r0, #1
   149bc:	str	r0, [r1]
   149c0:	ldr	r0, [r2]
   149c4:	str	r0, [r9, #32]
   149c8:	b	14a24 <argp_help@@Base+0x58c>
   149cc:	add	r0, r0, #32
   149d0:	b	149f0 <argp_help@@Base+0x558>
   149d4:	add	r0, r0, #48	; 0x30
   149d8:	b	149f0 <argp_help@@Base+0x558>
   149dc:	add	r0, r0, #64	; 0x40
   149e0:	b	149f0 <argp_help@@Base+0x558>
   149e4:	add	r0, r0, #80	; 0x50
   149e8:	b	149f0 <argp_help@@Base+0x558>
   149ec:	add	r0, r0, #96	; 0x60
   149f0:	ldr	r4, [fp, #-132]	; 0xffffff7c
   149f4:	sub	sp, sp, #8
   149f8:	movw	r1, #48706	; 0xbe42
   149fc:	str	r0, [sp, #4]
   14a00:	movw	r3, #48654	; 0xbe0e
   14a04:	mov	r2, #0
   14a08:	movt	r1, #1
   14a0c:	movt	r3, #1
   14a10:	str	r1, [sp]
   14a14:	mov	r1, #0
   14a18:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14a1c:	bl	15bd8 <argp_failure@@Base>
   14a20:	add	sp, sp, #8
   14a24:	ldr	r2, [r9, #32]
   14a28:	mov	r0, r4
   14a2c:	mov	r1, #0
   14a30:	mov	r3, #0
   14a34:	mov	r5, #0
   14a38:	bl	19b50 <argp_parse@@Base+0x20b0>
   14a3c:	cmp	r0, #0
   14a40:	beq	14e10 <argp_help@@Base+0x978>
   14a44:	mov	sl, r0
   14a48:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14a4c:	str	r4, [fp, #-132]	; 0xffffff7c
   14a50:	tst	r0, #11
   14a54:	beq	14bfc <argp_help@@Base+0x764>
   14a58:	ldr	r0, [fp, #-108]	; 0xffffff94
   14a5c:	mov	r1, #0
   14a60:	bl	15dcc <argp_failure@@Base+0x1f4>
   14a64:	ldr	r9, [r0, #4]
   14a68:	mov	r5, r0
   14a6c:	cmp	r9, #0
   14a70:	beq	14bf4 <argp_help@@Base+0x75c>
   14a74:	ldr	r4, [r5]
   14a78:	movw	r7, #48426	; 0xbd2a
   14a7c:	str	r5, [fp, #-112]	; 0xffffff90
   14a80:	mov	r5, r9
   14a84:	movt	r7, #1
   14a88:	str	r4, [fp, #-104]	; 0xffffff98
   14a8c:	b	14a9c <argp_help@@Base+0x604>
   14a90:	subs	r5, r5, #1
   14a94:	add	r4, r4, #28
   14a98:	beq	14af4 <argp_help@@Base+0x65c>
   14a9c:	ldr	r6, [r4, #4]
   14aa0:	cmp	r6, #0
   14aa4:	beq	14a90 <argp_help@@Base+0x5f8>
   14aa8:	ldr	r0, [r4]
   14aac:	add	r8, r0, #12
   14ab0:	b	14ac0 <argp_help@@Base+0x628>
   14ab4:	subs	r6, r6, #1
   14ab8:	add	r8, r8, #24
   14abc:	beq	14a90 <argp_help@@Base+0x5f8>
   14ac0:	ldr	r0, [r8, #-12]
   14ac4:	cmp	r0, #0
   14ac8:	beq	14ab4 <argp_help@@Base+0x61c>
   14acc:	ldrb	r1, [r8]
   14ad0:	tst	r1, #2
   14ad4:	bne	14ab4 <argp_help@@Base+0x61c>
   14ad8:	mov	r1, r7
   14adc:	bl	11440 <strcmp@plt>
   14ae0:	cmp	r0, #0
   14ae4:	bne	14ab4 <argp_help@@Base+0x61c>
   14ae8:	cmp	r4, #0
   14aec:	mvnne	r0, #0
   14af0:	strne	r0, [r4, #12]
   14af4:	ldr	r4, [fp, #-104]	; 0xffffff98
   14af8:	movw	r8, #49776	; 0xc270
   14afc:	mov	r5, r9
   14b00:	movt	r8, #1
   14b04:	b	14b14 <argp_help@@Base+0x67c>
   14b08:	subs	r5, r5, #1
   14b0c:	add	r4, r4, #28
   14b10:	beq	14b6c <argp_help@@Base+0x6d4>
   14b14:	ldr	r6, [r4, #4]
   14b18:	cmp	r6, #0
   14b1c:	beq	14b08 <argp_help@@Base+0x670>
   14b20:	ldr	r0, [r4]
   14b24:	add	r7, r0, #12
   14b28:	b	14b38 <argp_help@@Base+0x6a0>
   14b2c:	subs	r6, r6, #1
   14b30:	add	r7, r7, #24
   14b34:	beq	14b08 <argp_help@@Base+0x670>
   14b38:	ldr	r0, [r7, #-12]
   14b3c:	cmp	r0, #0
   14b40:	beq	14b2c <argp_help@@Base+0x694>
   14b44:	ldrb	r1, [r7]
   14b48:	tst	r1, #2
   14b4c:	bne	14b2c <argp_help@@Base+0x694>
   14b50:	mov	r1, r8
   14b54:	bl	11440 <strcmp@plt>
   14b58:	cmp	r0, #0
   14b5c:	bne	14b2c <argp_help@@Base+0x694>
   14b60:	cmp	r4, #0
   14b64:	mvnne	r0, #0
   14b68:	strne	r0, [r4, #12]
   14b6c:	ldr	r0, [fp, #-104]	; 0xffffff98
   14b70:	ldr	r5, [fp, #-112]	; 0xffffff90
   14b74:	sub	r2, r9, #1
   14b78:	and	r6, r9, #3
   14b7c:	mov	r1, #0
   14b80:	cmp	r2, #3
   14b84:	mov	r2, r0
   14b88:	bcc	14bc4 <argp_help@@Base+0x72c>
   14b8c:	sub	r3, r9, r6
   14b90:	mov	r1, #0
   14b94:	mov	r2, r0
   14b98:	add	r7, r1, #3
   14b9c:	str	r1, [r2, #24]
   14ba0:	str	r7, [r2, #108]	; 0x6c
   14ba4:	add	r7, r1, #2
   14ba8:	str	r7, [r2, #80]	; 0x50
   14bac:	add	r7, r1, #1
   14bb0:	add	r1, r1, #4
   14bb4:	str	r7, [r2, #52]	; 0x34
   14bb8:	add	r2, r2, #112	; 0x70
   14bbc:	cmp	r3, r1
   14bc0:	bne	14b98 <argp_help@@Base+0x700>
   14bc4:	cmp	r6, #0
   14bc8:	beq	14be0 <argp_help@@Base+0x748>
   14bcc:	add	r2, r2, #24
   14bd0:	str	r1, [r2], #28
   14bd4:	subs	r6, r6, #1
   14bd8:	add	r1, r1, #1
   14bdc:	bne	14bd0 <argp_help@@Base+0x738>
   14be0:	movw	r3, #28760	; 0x7058
   14be4:	mov	r1, r9
   14be8:	mov	r2, #28
   14bec:	movt	r3, #1
   14bf0:	bl	11728 <qsort@plt>
   14bf4:	movw	r9, #54264	; 0xd3f8
   14bf8:	movt	r9, #2
   14bfc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14c00:	str	r5, [fp, #-112]	; 0xffffff90
   14c04:	tst	r0, #3
   14c08:	beq	14e20 <argp_help@@Base+0x988>
   14c0c:	ldr	r0, [fp, #-108]	; 0xffffff94
   14c10:	bl	1648c <argp_failure@@Base+0x8b4>
   14c14:	mov	r2, r0
   14c18:	add	r0, r0, #7
   14c1c:	bic	r0, r0, #7
   14c20:	sub	r5, sp, r0
   14c24:	mov	sp, r5
   14c28:	mov	r0, r5
   14c2c:	mov	r1, #0
   14c30:	bl	11668 <memset@plt>
   14c34:	movw	r7, #48437	; 0xbd35
   14c38:	movw	r6, #48444	; 0xbd3c
   14c3c:	movt	r7, #1
   14c40:	movt	r6, #1
   14c44:	b	14c68 <argp_help@@Base+0x7d0>
   14c48:	add	r1, r0, #1
   14c4c:	str	r1, [sl, #28]
   14c50:	mov	r1, #10
   14c54:	strb	r1, [r0]
   14c58:	cmp	r7, #0
   14c5c:	mov	r7, r6
   14c60:	str	r4, [fp, #-92]	; 0xffffffa4
   14c64:	beq	14e08 <argp_help@@Base+0x970>
   14c68:	ldr	r1, [sl, #24]
   14c6c:	ldr	r2, [sl, #28]
   14c70:	ldr	r0, [sl, #16]
   14c74:	ldr	r4, [r9, #28]
   14c78:	sub	r1, r2, r1
   14c7c:	cmp	r1, r0
   14c80:	bls	14c8c <argp_help@@Base+0x7f4>
   14c84:	mov	r0, sl
   14c88:	bl	19c1c <argp_parse@@Base+0x217c>
   14c8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14c90:	movw	r1, #48431	; 0xbd2f
   14c94:	ldr	r9, [sl, #12]
   14c98:	mov	r0, sl
   14c9c:	mov	r2, r7
   14ca0:	str	r4, [sl, #12]
   14ca4:	str	r5, [fp, #-88]	; 0xffffffa8
   14ca8:	movt	r1, #1
   14cac:	bl	1a238 <argp_parse@@Base+0x2798>
   14cb0:	movw	r0, #54264	; 0xd3f8
   14cb4:	ldr	r1, [sl, #24]
   14cb8:	ldr	r2, [sl, #28]
   14cbc:	movt	r0, #2
   14cc0:	ldr	r4, [r0, #28]
   14cc4:	ldr	r0, [sl, #16]
   14cc8:	sub	r1, r2, r1
   14ccc:	cmp	r1, r0
   14cd0:	bls	14cdc <argp_help@@Base+0x844>
   14cd4:	mov	r0, sl
   14cd8:	bl	19c1c <argp_parse@@Base+0x217c>
   14cdc:	ldr	r8, [sl, #4]
   14ce0:	str	r4, [sl, #4]
   14ce4:	ldr	r4, [fp, #-92]	; 0xffffffa4
   14ce8:	tst	r4, #2
   14cec:	bne	14d04 <argp_help@@Base+0x86c>
   14cf0:	ldr	r0, [fp, #-112]	; 0xffffff90
   14cf4:	mov	r1, sl
   14cf8:	bl	16500 <argp_failure@@Base+0x928>
   14cfc:	orr	r4, r4, #2
   14d00:	b	14d68 <argp_help@@Base+0x8d0>
   14d04:	ldr	r0, [fp, #-112]	; 0xffffff90
   14d08:	ldr	r0, [r0, #4]
   14d0c:	cmp	r0, #0
   14d10:	beq	14d68 <argp_help@@Base+0x8d0>
   14d14:	ldr	r0, [sl, #28]
   14d18:	ldr	r1, [sl, #32]
   14d1c:	add	r2, r0, #12
   14d20:	cmp	r2, r1
   14d24:	bls	14d40 <argp_help@@Base+0x8a8>
   14d28:	mov	r0, sl
   14d2c:	mov	r1, #12
   14d30:	bl	1a14c <argp_parse@@Base+0x26ac>
   14d34:	cmp	r0, #0
   14d38:	beq	14d68 <argp_help@@Base+0x8d0>
   14d3c:	ldr	r0, [sl, #28]
   14d40:	movw	r1, #49176	; 0xc018
   14d44:	movt	r1, #1
   14d48:	vldr	d16, [r1]
   14d4c:	movw	r1, #11822	; 0x2e2e
   14d50:	movt	r1, #23854	; 0x5d2e
   14d54:	str	r1, [r0, #8]
   14d58:	vst1.8	{d16}, [r0]
   14d5c:	ldr	r0, [sl, #28]
   14d60:	add	r0, r0, #12
   14d64:	str	r0, [sl, #28]
   14d68:	sub	sp, sp, #8
   14d6c:	str	sl, [sp]
   14d70:	sub	r2, fp, #88	; 0x58
   14d74:	mov	r3, #1
   14d78:	ldr	r0, [fp, #-108]	; 0xffffff94
   14d7c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   14d80:	bl	168d0 <argp_failure@@Base+0xcf8>
   14d84:	add	sp, sp, #8
   14d88:	mov	r7, r0
   14d8c:	ldr	r2, [sl, #24]
   14d90:	ldr	r0, [sl, #28]
   14d94:	ldr	r1, [sl, #16]
   14d98:	sub	r2, r0, r2
   14d9c:	cmp	r2, r1
   14da0:	bls	14dbc <argp_help@@Base+0x924>
   14da4:	mov	r0, sl
   14da8:	bl	19c1c <argp_parse@@Base+0x217c>
   14dac:	ldr	r2, [sl, #24]
   14db0:	ldr	r0, [sl, #28]
   14db4:	ldr	r1, [sl, #16]
   14db8:	sub	r2, r0, r2
   14dbc:	cmp	r2, r1
   14dc0:	str	r9, [sl, #12]
   14dc4:	bls	14dd4 <argp_help@@Base+0x93c>
   14dc8:	mov	r0, sl
   14dcc:	bl	19c1c <argp_parse@@Base+0x217c>
   14dd0:	ldr	r0, [sl, #28]
   14dd4:	str	r8, [sl, #4]
   14dd8:	movw	r9, #54264	; 0xd3f8
   14ddc:	ldr	r1, [sl, #32]
   14de0:	movt	r9, #2
   14de4:	cmp	r0, r1
   14de8:	bcc	14c48 <argp_help@@Base+0x7b0>
   14dec:	mov	r0, sl
   14df0:	mov	r1, #1
   14df4:	bl	1a14c <argp_parse@@Base+0x26ac>
   14df8:	cmp	r0, #0
   14dfc:	beq	14c58 <argp_help@@Base+0x7c0>
   14e00:	ldr	r0, [sl, #28]
   14e04:	b	14c48 <argp_help@@Base+0x7b0>
   14e08:	mov	r5, #1
   14e0c:	b	14e24 <argp_help@@Base+0x98c>
   14e10:	mov	r0, r4
   14e14:	sub	sp, fp, #28
   14e18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e1c:	b	11530 <funlockfile@plt>
   14e20:	mov	r5, #0
   14e24:	ldr	r4, [fp, #-92]	; 0xffffffa4
   14e28:	tst	r4, #16
   14e2c:	bne	14e44 <argp_help@@Base+0x9ac>
   14e30:	tst	r4, #4
   14e34:	bne	14e74 <argp_help@@Base+0x9dc>
   14e38:	tst	r4, #8
   14e3c:	bne	14e98 <argp_help@@Base+0xa00>
   14e40:	b	15760 <argp_help@@Base+0x12c8>
   14e44:	sub	sp, sp, #8
   14e48:	mov	r0, #1
   14e4c:	mov	r2, #0
   14e50:	mov	r3, #0
   14e54:	stm	sp, {r0, sl}
   14e58:	ldr	r0, [fp, #-108]	; 0xffffff94
   14e5c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   14e60:	bl	16bc8 <argp_failure@@Base+0xff0>
   14e64:	add	sp, sp, #8
   14e68:	orr	r5, r0, r5
   14e6c:	tst	r4, #4
   14e70:	beq	14e38 <argp_help@@Base+0x9a0>
   14e74:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14e78:	movw	r1, #48451	; 0xbd43
   14e7c:	mov	r0, sl
   14e80:	movt	r1, #1
   14e84:	mov	r3, r2
   14e88:	bl	1a238 <argp_parse@@Base+0x2798>
   14e8c:	mov	r5, #1
   14e90:	tst	r4, #8
   14e94:	beq	15760 <argp_help@@Base+0x12c8>
   14e98:	ldr	r0, [fp, #-112]	; 0xffffff90
   14e9c:	ldr	r1, [r0, #4]
   14ea0:	cmp	r1, #0
   14ea4:	beq	15760 <argp_help@@Base+0x12c8>
   14ea8:	cmp	r5, #0
   14eac:	beq	14f0c <argp_help@@Base+0xa74>
   14eb0:	ldr	r0, [sl, #28]
   14eb4:	ldr	r1, [sl, #32]
   14eb8:	ldr	r5, [fp, #-112]	; 0xffffff90
   14ebc:	cmp	r0, r1
   14ec0:	bcc	14edc <argp_help@@Base+0xa44>
   14ec4:	mov	r0, sl
   14ec8:	mov	r1, #1
   14ecc:	bl	1a14c <argp_parse@@Base+0x26ac>
   14ed0:	cmp	r0, #0
   14ed4:	beq	14eec <argp_help@@Base+0xa54>
   14ed8:	ldr	r0, [sl, #28]
   14edc:	add	r1, r0, #1
   14ee0:	str	r1, [sl, #28]
   14ee4:	mov	r1, #10
   14ee8:	strb	r1, [r0]
   14eec:	ldr	r1, [r5, #4]
   14ef0:	mov	r0, #0
   14ef4:	str	r0, [fp, #-44]	; 0xffffffd4
   14ef8:	str	r0, [fp, #-48]	; 0xffffffd0
   14efc:	str	r0, [fp, #-40]	; 0xffffffd8
   14f00:	cmp	r1, #0
   14f04:	bne	14f1c <argp_help@@Base+0xa84>
   14f08:	b	1575c <argp_help@@Base+0x12c4>
   14f0c:	mov	r0, #0
   14f10:	str	r0, [fp, #-44]	; 0xffffffd4
   14f14:	str	r0, [fp, #-48]	; 0xffffffd0
   14f18:	str	r0, [fp, #-40]	; 0xffffffd8
   14f1c:	add	r0, sl, #28
   14f20:	str	r0, [fp, #-96]	; 0xffffffa0
   14f24:	ldr	r0, [fp, #-112]	; 0xffffff90
   14f28:	str	r4, [fp, #-92]	; 0xffffffa4
   14f2c:	ldr	r5, [r0]
   14f30:	b	14f4c <argp_help@@Base+0xab4>
   14f34:	ldr	r1, [fp, #-116]	; 0xffffff8c
   14f38:	ldr	r0, [fp, #-120]	; 0xffffff88
   14f3c:	add	r5, r5, #28
   14f40:	subs	r1, r1, #1
   14f44:	str	r0, [sl, #12]
   14f48:	beq	15748 <argp_help@@Base+0x12b0>
   14f4c:	str	r1, [fp, #-116]	; 0xffffff8c
   14f50:	ldr	r1, [sl, #24]
   14f54:	ldr	r2, [sl, #28]
   14f58:	ldr	r0, [sl, #16]
   14f5c:	ldr	r8, [r5]
   14f60:	mov	r4, r5
   14f64:	ldr	r5, [r5, #8]
   14f68:	sub	r1, r2, r1
   14f6c:	cmp	r1, r0
   14f70:	bls	14f7c <argp_help@@Base+0xae4>
   14f74:	mov	r0, sl
   14f78:	bl	19c1c <argp_parse@@Base+0x217c>
   14f7c:	mov	r0, #0
   14f80:	mov	r3, #0
   14f84:	ldr	r2, [sl, #4]
   14f88:	ldr	r1, [sl, #12]
   14f8c:	str	r0, [fp, #-128]	; 0xffffff80
   14f90:	str	r3, [sl, #4]
   14f94:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14f98:	str	r4, [fp, #-104]	; 0xffffff98
   14f9c:	str	r1, [fp, #-120]	; 0xffffff88
   14fa0:	str	r2, [fp, #-124]	; 0xffffff84
   14fa4:	str	r0, [fp, #-72]	; 0xffffffb8
   14fa8:	mov	r0, #1
   14fac:	str	r0, [fp, #-76]	; 0xffffffb4
   14fb0:	sub	r0, fp, #48	; 0x30
   14fb4:	str	r0, [fp, #-80]	; 0xffffffb0
   14fb8:	str	sl, [fp, #-84]	; 0xffffffac
   14fbc:	str	r4, [fp, #-88]	; 0xffffffa8
   14fc0:	ldrb	r0, [r8, #12]
   14fc4:	tst	r0, #8
   14fc8:	bne	1500c <argp_help@@Base+0xb74>
   14fcc:	ldr	r0, [r4, #4]
   14fd0:	cmp	r0, #0
   14fd4:	beq	1500c <argp_help@@Base+0xb74>
   14fd8:	add	r1, r8, #12
   14fdc:	b	14fec <argp_help@@Base+0xb54>
   14fe0:	add	r1, r1, #24
   14fe4:	subs	r0, r0, #1
   14fe8:	beq	1500c <argp_help@@Base+0xb74>
   14fec:	ldr	r2, [r1, #-12]
   14ff0:	cmp	r2, #0
   14ff4:	beq	14fe0 <argp_help@@Base+0xb48>
   14ff8:	ldrb	r2, [r1]
   14ffc:	tst	r2, #2
   15000:	bne	14fe0 <argp_help@@Base+0xb48>
   15004:	mov	r0, #1
   15008:	str	r0, [fp, #-128]	; 0xffffff80
   1500c:	ldr	r1, [sl, #24]
   15010:	ldr	r2, [sl, #28]
   15014:	ldr	r0, [sl, #16]
   15018:	ldr	r4, [r9, #8]
   1501c:	sub	r1, r2, r1
   15020:	cmp	r1, r0
   15024:	bls	15030 <argp_help@@Base+0xb98>
   15028:	mov	r0, sl
   1502c:	bl	19c1c <argp_parse@@Base+0x217c>
   15030:	ldr	r0, [fp, #-104]	; 0xffffff98
   15034:	str	r4, [sl, #12]
   15038:	ldr	r7, [r0, #4]
   1503c:	cmp	r7, #0
   15040:	beq	151a4 <argp_help@@Base+0xd0c>
   15044:	add	r9, r8, #12
   15048:	b	15068 <argp_help@@Base+0xbd0>
   1504c:	cmp	r2, #0
   15050:	movne	r0, #1
   15054:	strne	r0, [fp, #-40]	; 0xffffffd8
   15058:	add	r5, r5, #1
   1505c:	add	r9, r9, #24
   15060:	subs	r7, r7, #1
   15064:	beq	151a4 <argp_help@@Base+0xd0c>
   15068:	ldr	r4, [r9]
   1506c:	tst	r4, #8
   15070:	bne	1505c <argp_help@@Base+0xbc4>
   15074:	ldr	r6, [r9, #-8]
   15078:	sub	r0, r6, #1
   1507c:	cmp	r0, #254	; 0xfe
   15080:	bhi	1505c <argp_help@@Base+0xbc4>
   15084:	bl	115f0 <__ctype_b_loc@plt>
   15088:	ldr	r0, [r0]
   1508c:	add	r0, r0, r6, lsl #1
   15090:	ldrb	r0, [r0, #1]
   15094:	tst	r0, #64	; 0x40
   15098:	beq	1505c <argp_help@@Base+0xbc4>
   1509c:	ldrb	r0, [r5]
   150a0:	cmp	r6, r0
   150a4:	bne	1505c <argp_help@@Base+0xbc4>
   150a8:	tst	r4, #2
   150ac:	bne	15058 <argp_help@@Base+0xbc0>
   150b0:	movw	r0, #54264	; 0xd3f8
   150b4:	sub	r1, fp, #88	; 0x58
   150b8:	movt	r0, #2
   150bc:	ldr	r0, [r0, #8]
   150c0:	bl	175e8 <argp_failure@@Base+0x1a10>
   150c4:	ldr	r0, [sl, #28]
   150c8:	ldr	r1, [sl, #32]
   150cc:	cmp	r0, r1
   150d0:	bcc	150f0 <argp_help@@Base+0xc58>
   150d4:	mov	r0, sl
   150d8:	mov	r1, #1
   150dc:	bl	1a14c <argp_parse@@Base+0x26ac>
   150e0:	cmp	r0, #0
   150e4:	beq	15104 <argp_help@@Base+0xc6c>
   150e8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   150ec:	ldr	r0, [r0]
   150f0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   150f4:	add	r1, r0, #1
   150f8:	str	r1, [r2]
   150fc:	mov	r1, #45	; 0x2d
   15100:	strb	r1, [r0]
   15104:	ldr	r0, [sl, #28]
   15108:	ldr	r1, [sl, #32]
   1510c:	ldrb	r4, [r5]
   15110:	cmp	r0, r1
   15114:	bcc	15134 <argp_help@@Base+0xc9c>
   15118:	mov	r0, sl
   1511c:	mov	r1, #1
   15120:	bl	1a14c <argp_parse@@Base+0x26ac>
   15124:	cmp	r0, #0
   15128:	beq	15144 <argp_help@@Base+0xcac>
   1512c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15130:	ldr	r0, [r0]
   15134:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15138:	add	r1, r0, #1
   1513c:	str	r1, [r2]
   15140:	strb	r4, [r0]
   15144:	ldr	r0, [fp, #-128]	; 0xffffff80
   15148:	ldr	r2, [r8, #8]
   1514c:	cmp	r0, #0
   15150:	beq	15168 <argp_help@@Base+0xcd0>
   15154:	movw	r0, #54264	; 0xd3f8
   15158:	movt	r0, #2
   1515c:	ldr	r0, [r0]
   15160:	cmp	r0, #0
   15164:	beq	1504c <argp_help@@Base+0xbb4>
   15168:	cmp	r2, #0
   1516c:	beq	15058 <argp_help@@Base+0xbc0>
   15170:	ldrb	r0, [r8, #12]
   15174:	tst	r0, #1
   15178:	bne	15190 <argp_help@@Base+0xcf8>
   1517c:	movw	r1, #48650	; 0xbe0a
   15180:	mov	r0, sl
   15184:	movt	r1, #1
   15188:	bl	1a238 <argp_parse@@Base+0x2798>
   1518c:	b	15058 <argp_help@@Base+0xbc0>
   15190:	movw	r1, #49146	; 0xbffa
   15194:	mov	r0, sl
   15198:	movt	r1, #1
   1519c:	bl	1a238 <argp_parse@@Base+0x2798>
   151a0:	b	15058 <argp_help@@Base+0xbc0>
   151a4:	ldrb	r0, [r8, #12]
   151a8:	movw	r9, #54264	; 0xd3f8
   151ac:	movt	r9, #2
   151b0:	tst	r0, #8
   151b4:	bne	15274 <argp_help@@Base+0xddc>
   151b8:	ldr	r1, [sl, #24]
   151bc:	ldr	r2, [sl, #28]
   151c0:	ldr	r0, [sl, #16]
   151c4:	ldr	r4, [r9, #12]
   151c8:	sub	r1, r2, r1
   151cc:	cmp	r1, r0
   151d0:	bls	151dc <argp_help@@Base+0xd44>
   151d4:	mov	r0, sl
   151d8:	bl	19c1c <argp_parse@@Base+0x217c>
   151dc:	ldr	r0, [fp, #-104]	; 0xffffff98
   151e0:	str	r4, [sl, #12]
   151e4:	ldr	r4, [r0, #4]
   151e8:	cmp	r4, #0
   151ec:	beq	1534c <argp_help@@Base+0xeb4>
   151f0:	add	r5, r8, #12
   151f4:	b	15214 <argp_help@@Base+0xd7c>
   151f8:	movw	r1, #49156	; 0xc004
   151fc:	mov	r0, sl
   15200:	movt	r1, #1
   15204:	bl	1a238 <argp_parse@@Base+0x2798>
   15208:	add	r5, r5, #24
   1520c:	subs	r4, r4, #1
   15210:	beq	1534c <argp_help@@Base+0xeb4>
   15214:	ldr	r0, [r5, #-12]
   15218:	cmp	r0, #0
   1521c:	beq	15208 <argp_help@@Base+0xd70>
   15220:	ldrb	r0, [r5]
   15224:	tst	r0, #2
   15228:	bne	15208 <argp_help@@Base+0xd70>
   1522c:	ldr	r0, [r9, #12]
   15230:	sub	r1, fp, #88	; 0x58
   15234:	bl	175e8 <argp_failure@@Base+0x1a10>
   15238:	ldr	r2, [r5, #-12]
   1523c:	movw	r1, #49151	; 0xbfff
   15240:	mov	r0, sl
   15244:	movt	r1, #1
   15248:	bl	1a238 <argp_parse@@Base+0x2798>
   1524c:	ldr	r2, [r8, #8]
   15250:	cmp	r2, #0
   15254:	beq	15208 <argp_help@@Base+0xd70>
   15258:	ldrb	r0, [r8, #12]
   1525c:	tst	r0, #1
   15260:	beq	151f8 <argp_help@@Base+0xd60>
   15264:	movw	r1, #49160	; 0xc008
   15268:	mov	r0, sl
   1526c:	movt	r1, #1
   15270:	b	15204 <argp_help@@Base+0xd6c>
   15274:	ldr	r1, [sl, #24]
   15278:	ldr	r2, [sl, #28]
   1527c:	ldr	r0, [sl, #16]
   15280:	ldr	r4, [r9, #16]
   15284:	sub	r1, r2, r1
   15288:	cmp	r1, r0
   1528c:	bls	15298 <argp_help@@Base+0xe00>
   15290:	mov	r0, sl
   15294:	bl	19c1c <argp_parse@@Base+0x217c>
   15298:	ldr	r0, [fp, #-104]	; 0xffffff98
   1529c:	str	r4, [sl, #12]
   152a0:	ldr	r6, [r0, #4]
   152a4:	cmp	r6, #0
   152a8:	beq	1534c <argp_help@@Base+0xeb4>
   152ac:	add	r4, r8, #12
   152b0:	b	152dc <argp_help@@Base+0xe44>
   152b4:	mov	r1, r5
   152b8:	mov	r2, r7
   152bc:	bl	114d0 <memcpy@plt>
   152c0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   152c4:	ldr	r0, [r1]
   152c8:	add	r0, r0, r7
   152cc:	str	r0, [r1]
   152d0:	add	r4, r4, #24
   152d4:	subs	r6, r6, #1
   152d8:	beq	1534c <argp_help@@Base+0xeb4>
   152dc:	ldr	r0, [r4, #-12]
   152e0:	cmp	r0, #0
   152e4:	beq	152d0 <argp_help@@Base+0xe38>
   152e8:	ldrb	r0, [r4]
   152ec:	tst	r0, #2
   152f0:	bne	152d0 <argp_help@@Base+0xe38>
   152f4:	ldr	r0, [r9, #16]
   152f8:	sub	r1, fp, #88	; 0x58
   152fc:	bl	175e8 <argp_failure@@Base+0x1a10>
   15300:	ldr	r5, [r4, #-12]
   15304:	mov	r0, r5
   15308:	bl	11614 <strlen@plt>
   1530c:	cmp	r0, #0
   15310:	beq	152d0 <argp_help@@Base+0xe38>
   15314:	mov	r7, r0
   15318:	ldr	r0, [sl, #28]
   1531c:	ldr	r1, [sl, #32]
   15320:	add	r2, r0, r7
   15324:	cmp	r2, r1
   15328:	bls	152b4 <argp_help@@Base+0xe1c>
   1532c:	mov	r0, sl
   15330:	mov	r1, r7
   15334:	bl	1a14c <argp_parse@@Base+0x26ac>
   15338:	cmp	r0, #0
   1533c:	beq	152d0 <argp_help@@Base+0xe38>
   15340:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15344:	ldr	r0, [r0]
   15348:	b	152b4 <argp_help@@Base+0xe1c>
   1534c:	ldr	r1, [sl, #24]
   15350:	ldr	r2, [sl, #28]
   15354:	ldr	r0, [sl, #16]
   15358:	sub	r1, r2, r1
   1535c:	cmp	r1, r0
   15360:	bls	1536c <argp_help@@Base+0xed4>
   15364:	mov	r0, sl
   15368:	bl	19c1c <argp_parse@@Base+0x217c>
   1536c:	mov	r0, #0
   15370:	ldr	r5, [fp, #-104]	; 0xffffff98
   15374:	str	r0, [sl, #4]
   15378:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1537c:	cmp	r0, #0
   15380:	beq	153d8 <argp_help@@Base+0xf40>
   15384:	ldrb	r0, [r8, #12]
   15388:	tst	r0, #8
   1538c:	bne	153b8 <argp_help@@Base+0xf20>
   15390:	ldr	r4, [r8, #4]
   15394:	sub	r0, r4, #1
   15398:	cmp	r0, #254	; 0xfe
   1539c:	bhi	153b8 <argp_help@@Base+0xf20>
   153a0:	bl	115f0 <__ctype_b_loc@plt>
   153a4:	ldr	r0, [r0]
   153a8:	add	r0, r0, r4, lsl #1
   153ac:	ldrb	r0, [r0, #1]
   153b0:	tst	r0, #64	; 0x40
   153b4:	bne	156f8 <argp_help@@Base+0x1260>
   153b8:	ldr	r0, [r8]
   153bc:	cmp	r0, #0
   153c0:	bne	156f8 <argp_help@@Base+0x1260>
   153c4:	ldr	r1, [r5, #20]
   153c8:	ldr	r0, [r8, #16]
   153cc:	sub	r2, fp, #88	; 0x58
   153d0:	bl	177f4 <argp_failure@@Base+0x1c1c>
   153d4:	b	156f4 <argp_help@@Base+0x125c>
   153d8:	ldr	r6, [r5, #20]
   153dc:	ldr	r9, [r8, #16]
   153e0:	cmp	r6, #0
   153e4:	mov	r7, r9
   153e8:	beq	15424 <argp_help@@Base+0xf8c>
   153ec:	ldr	r0, [r6, #20]
   153f0:	mov	r7, r9
   153f4:	cmp	r0, #0
   153f8:	beq	15424 <argp_help@@Base+0xf8c>
   153fc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15400:	ldr	r7, [r8, #4]
   15404:	mov	r0, r6
   15408:	bl	18708 <argp_parse@@Base+0xc68>
   1540c:	ldr	r3, [r6, #20]
   15410:	mov	r2, r0
   15414:	mov	r0, r7
   15418:	mov	r1, r9
   1541c:	blx	r3
   15420:	mov	r7, r0
   15424:	cmp	r7, #0
   15428:	beq	15684 <argp_help@@Base+0x11ec>
   1542c:	ldrb	r0, [r7]
   15430:	cmp	r0, #0
   15434:	beq	15674 <argp_help@@Base+0x11dc>
   15438:	ldr	r1, [sl, #24]
   1543c:	ldr	r2, [sl, #28]
   15440:	ldr	r0, [sl, #16]
   15444:	mov	r8, r5
   15448:	sub	r1, r2, r1
   1544c:	cmp	r1, r0
   15450:	bls	1546c <argp_help@@Base+0xfd4>
   15454:	mov	r0, sl
   15458:	bl	19c1c <argp_parse@@Base+0x217c>
   1545c:	ldr	r1, [sl, #24]
   15460:	ldr	r2, [sl, #28]
   15464:	ldr	r0, [sl, #16]
   15468:	sub	r1, r2, r1
   1546c:	movw	r2, #54264	; 0xd3f8
   15470:	ldr	r5, [sl, #20]
   15474:	cmp	r1, r0
   15478:	movt	r2, #2
   1547c:	ldr	r4, [r2, #20]
   15480:	mov	r6, r4
   15484:	bls	154ac <argp_help@@Base+0x1014>
   15488:	mov	r0, sl
   1548c:	bl	19c1c <argp_parse@@Base+0x217c>
   15490:	movw	r0, #54264	; 0xd3f8
   15494:	ldr	r1, [sl, #24]
   15498:	ldr	r2, [sl, #28]
   1549c:	movt	r0, #2
   154a0:	ldr	r6, [r0, #20]
   154a4:	ldr	r0, [sl, #16]
   154a8:	sub	r1, r2, r1
   154ac:	bic	r5, r5, r5, asr #31
   154b0:	str	r4, [sl, #4]
   154b4:	cmp	r1, r0
   154b8:	mov	r4, r6
   154bc:	bls	154d4 <argp_help@@Base+0x103c>
   154c0:	mov	r0, sl
   154c4:	bl	19c1c <argp_parse@@Base+0x217c>
   154c8:	movw	r0, #54264	; 0xd3f8
   154cc:	movt	r0, #2
   154d0:	ldr	r4, [r0, #20]
   154d4:	add	r0, r4, #3
   154d8:	str	r6, [sl, #12]
   154dc:	cmp	r5, r0
   154e0:	bls	1552c <argp_help@@Base+0x1094>
   154e4:	ldr	r0, [sl, #28]
   154e8:	ldr	r1, [sl, #32]
   154ec:	mov	r5, r8
   154f0:	cmp	r0, r1
   154f4:	bcc	15514 <argp_help@@Base+0x107c>
   154f8:	mov	r0, sl
   154fc:	mov	r1, #1
   15500:	bl	1a14c <argp_parse@@Base+0x26ac>
   15504:	cmp	r0, #0
   15508:	beq	15614 <argp_help@@Base+0x117c>
   1550c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15510:	ldr	r0, [r0]
   15514:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15518:	add	r1, r0, #1
   1551c:	str	r1, [r2]
   15520:	mov	r1, #10
   15524:	strb	r1, [r0]
   15528:	b	15614 <argp_help@@Base+0x117c>
   1552c:	cmp	r5, r4
   15530:	bcs	155c0 <argp_help@@Base+0x1128>
   15534:	ldr	r1, [sl, #24]
   15538:	ldr	r2, [sl, #28]
   1553c:	ldr	r0, [sl, #16]
   15540:	sub	r1, r2, r1
   15544:	cmp	r1, r0
   15548:	bls	15554 <argp_help@@Base+0x10bc>
   1554c:	mov	r0, sl
   15550:	bl	19c1c <argp_parse@@Base+0x217c>
   15554:	ldr	r0, [sl, #20]
   15558:	mov	r5, r8
   1555c:	cmp	r0, #0
   15560:	subgt	r4, r4, r0
   15564:	cmp	r4, #1
   15568:	bge	1558c <argp_help@@Base+0x10f4>
   1556c:	b	15614 <argp_help@@Base+0x117c>
   15570:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15574:	add	r1, r0, #1
   15578:	str	r1, [r2]
   1557c:	mov	r1, #32
   15580:	strb	r1, [r0]
   15584:	cmp	r4, #0
   15588:	ble	15614 <argp_help@@Base+0x117c>
   1558c:	ldr	r0, [sl, #28]
   15590:	ldr	r1, [sl, #32]
   15594:	sub	r4, r4, #1
   15598:	cmp	r0, r1
   1559c:	bcc	15570 <argp_help@@Base+0x10d8>
   155a0:	mov	r0, sl
   155a4:	mov	r1, #1
   155a8:	bl	1a14c <argp_parse@@Base+0x26ac>
   155ac:	cmp	r0, #0
   155b0:	beq	15584 <argp_help@@Base+0x10ec>
   155b4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   155b8:	ldr	r0, [r0]
   155bc:	b	15570 <argp_help@@Base+0x10d8>
   155c0:	ldr	r0, [sl, #28]
   155c4:	ldr	r1, [sl, #32]
   155c8:	mov	r5, r8
   155cc:	add	r2, r0, #3
   155d0:	cmp	r2, r1
   155d4:	bls	155f4 <argp_help@@Base+0x115c>
   155d8:	mov	r0, sl
   155dc:	mov	r1, #3
   155e0:	bl	1a14c <argp_parse@@Base+0x26ac>
   155e4:	cmp	r0, #0
   155e8:	beq	15614 <argp_help@@Base+0x117c>
   155ec:	ldr	r0, [fp, #-96]	; 0xffffffa0
   155f0:	ldr	r0, [r0]
   155f4:	mov	r1, #32
   155f8:	strb	r1, [r0, #2]
   155fc:	movw	r1, #8224	; 0x2020
   15600:	strh	r1, [r0]
   15604:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15608:	ldr	r0, [r1]
   1560c:	add	r0, r0, #3
   15610:	str	r0, [r1]
   15614:	mov	r0, r7
   15618:	bl	11614 <strlen@plt>
   1561c:	cmp	r0, #0
   15620:	beq	15674 <argp_help@@Base+0x11dc>
   15624:	mov	r8, r0
   15628:	ldr	r0, [sl, #28]
   1562c:	ldr	r1, [sl, #32]
   15630:	add	r2, r0, r8
   15634:	cmp	r2, r1
   15638:	bls	15658 <argp_help@@Base+0x11c0>
   1563c:	mov	r0, sl
   15640:	mov	r1, r8
   15644:	bl	1a14c <argp_parse@@Base+0x26ac>
   15648:	cmp	r0, #0
   1564c:	beq	15674 <argp_help@@Base+0x11dc>
   15650:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15654:	ldr	r0, [r0]
   15658:	mov	r1, r7
   1565c:	mov	r2, r8
   15660:	bl	114d0 <memcpy@plt>
   15664:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15668:	ldr	r0, [r1]
   1566c:	add	r0, r0, r8
   15670:	str	r0, [r1]
   15674:	cmp	r7, r9
   15678:	beq	15684 <argp_help@@Base+0x11ec>
   1567c:	mov	r0, r7
   15680:	bl	18d7c <argp_parse@@Base+0x12dc>
   15684:	ldr	r2, [sl, #24]
   15688:	ldr	r0, [sl, #28]
   1568c:	ldr	r1, [sl, #16]
   15690:	sub	r2, r0, r2
   15694:	cmp	r2, r1
   15698:	bls	156a8 <argp_help@@Base+0x1210>
   1569c:	mov	r0, sl
   156a0:	bl	19c1c <argp_parse@@Base+0x217c>
   156a4:	ldr	r0, [sl, #28]
   156a8:	mov	r1, #0
   156ac:	movw	r9, #54264	; 0xd3f8
   156b0:	str	r1, [sl, #4]
   156b4:	movt	r9, #2
   156b8:	ldr	r1, [sl, #32]
   156bc:	cmp	r0, r1
   156c0:	bcc	156e0 <argp_help@@Base+0x1248>
   156c4:	mov	r0, sl
   156c8:	mov	r1, #1
   156cc:	bl	1a14c <argp_parse@@Base+0x26ac>
   156d0:	cmp	r0, #0
   156d4:	beq	156f4 <argp_help@@Base+0x125c>
   156d8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   156dc:	ldr	r0, [r0]
   156e0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   156e4:	add	r1, r0, #1
   156e8:	str	r1, [r2]
   156ec:	mov	r1, #10
   156f0:	strb	r1, [r0]
   156f4:	str	r5, [fp, #-48]	; 0xffffffd0
   156f8:	ldr	r1, [sl, #24]
   156fc:	ldr	r2, [sl, #28]
   15700:	ldr	r0, [sl, #16]
   15704:	sub	r1, r2, r1
   15708:	cmp	r1, r0
   1570c:	bls	15728 <argp_help@@Base+0x1290>
   15710:	mov	r0, sl
   15714:	bl	19c1c <argp_parse@@Base+0x217c>
   15718:	ldr	r1, [sl, #24]
   1571c:	ldr	r2, [sl, #28]
   15720:	ldr	r0, [sl, #16]
   15724:	sub	r1, r2, r1
   15728:	ldr	r2, [fp, #-124]	; 0xffffff84
   1572c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   15730:	cmp	r1, r0
   15734:	str	r2, [sl, #4]
   15738:	bls	14f34 <argp_help@@Base+0xa9c>
   1573c:	mov	r0, sl
   15740:	bl	19c1c <argp_parse@@Base+0x217c>
   15744:	b	14f34 <argp_help@@Base+0xa9c>
   15748:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1574c:	cmp	r0, #0
   15750:	ldrne	r0, [r9, #4]
   15754:	cmpne	r0, #0
   15758:	bne	15868 <argp_help@@Base+0x13d0>
   1575c:	mov	r5, #1
   15760:	tst	r4, #32
   15764:	beq	15790 <argp_help@@Base+0x12f8>
   15768:	sub	sp, sp, #8
   1576c:	mov	r0, #0
   15770:	mov	r2, #1
   15774:	mov	r3, r5
   15778:	stm	sp, {r0, sl}
   1577c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15780:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15784:	bl	16bc8 <argp_failure@@Base+0xff0>
   15788:	add	sp, sp, #8
   1578c:	orr	r5, r0, r5
   15790:	tst	r4, #64	; 0x40
   15794:	beq	15800 <argp_help@@Base+0x1368>
   15798:	movw	r4, #57268	; 0xdfb4
   1579c:	movt	r4, #2
   157a0:	ldr	r0, [r4]
   157a4:	cmp	r0, #0
   157a8:	beq	15800 <argp_help@@Base+0x1368>
   157ac:	cmp	r5, #0
   157b0:	beq	157ec <argp_help@@Base+0x1354>
   157b4:	ldr	r0, [sl, #28]
   157b8:	ldr	r1, [sl, #32]
   157bc:	cmp	r0, r1
   157c0:	bcc	157dc <argp_help@@Base+0x1344>
   157c4:	mov	r0, sl
   157c8:	mov	r1, #1
   157cc:	bl	1a14c <argp_parse@@Base+0x26ac>
   157d0:	cmp	r0, #0
   157d4:	beq	157ec <argp_help@@Base+0x1354>
   157d8:	ldr	r0, [sl, #28]
   157dc:	add	r1, r0, #1
   157e0:	str	r1, [sl, #28]
   157e4:	mov	r1, #10
   157e8:	strb	r1, [r0]
   157ec:	ldr	r2, [r4]
   157f0:	movw	r1, #48506	; 0xbd7a
   157f4:	mov	r0, sl
   157f8:	movt	r1, #1
   157fc:	bl	1a238 <argp_parse@@Base+0x2798>
   15800:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15804:	bl	11530 <funlockfile@plt>
   15808:	ldr	r5, [fp, #-112]	; 0xffffff90
   1580c:	cmp	r5, #0
   15810:	beq	15858 <argp_help@@Base+0x13c0>
   15814:	ldr	r0, [r5, #12]
   15818:	cmp	r0, #0
   1581c:	beq	15834 <argp_help@@Base+0x139c>
   15820:	ldr	r4, [r0, #24]
   15824:	bl	18d7c <argp_parse@@Base+0x12dc>
   15828:	cmp	r4, #0
   1582c:	mov	r0, r4
   15830:	bne	15820 <argp_help@@Base+0x1388>
   15834:	ldr	r0, [r5, #4]
   15838:	cmp	r0, #0
   1583c:	beq	15850 <argp_help@@Base+0x13b8>
   15840:	ldr	r0, [r5]
   15844:	bl	18d7c <argp_parse@@Base+0x12dc>
   15848:	ldr	r0, [r5, #8]
   1584c:	bl	18d7c <argp_parse@@Base+0x12dc>
   15850:	mov	r0, r5
   15854:	bl	18d7c <argp_parse@@Base+0x12dc>
   15858:	mov	r0, sl
   1585c:	bl	19bd8 <argp_parse@@Base+0x2138>
   15860:	sub	sp, fp, #28
   15864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15868:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1586c:	movw	r5, #49030	; 0xbf86
   15870:	movt	r5, #1
   15874:	cmp	r0, #0
   15878:	beq	158c8 <argp_help@@Base+0x1430>
   1587c:	ldr	r6, [r0]
   15880:	cmp	r6, #0
   15884:	beq	158c8 <argp_help@@Base+0x1430>
   15888:	ldr	r0, [r6, #20]
   1588c:	cmp	r0, #0
   15890:	beq	158c8 <argp_help@@Base+0x1430>
   15894:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15898:	mov	r0, r6
   1589c:	bl	18708 <argp_parse@@Base+0xc68>
   158a0:	ldr	r3, [r6, #20]
   158a4:	movw	r1, #49030	; 0xbf86
   158a8:	mov	r2, r0
   158ac:	movw	r0, #5
   158b0:	movt	r0, #512	; 0x200
   158b4:	movt	r1, #1
   158b8:	blx	r3
   158bc:	mov	r5, r0
   158c0:	cmp	r0, #0
   158c4:	beq	1575c <argp_help@@Base+0x12c4>
   158c8:	ldrb	r0, [r5]
   158cc:	cmp	r0, #0
   158d0:	beq	159b4 <argp_help@@Base+0x151c>
   158d4:	ldr	r0, [sl, #28]
   158d8:	ldr	r1, [sl, #32]
   158dc:	cmp	r0, r1
   158e0:	bcc	15900 <argp_help@@Base+0x1468>
   158e4:	mov	r0, sl
   158e8:	mov	r1, #1
   158ec:	bl	1a14c <argp_parse@@Base+0x26ac>
   158f0:	cmp	r0, #0
   158f4:	beq	15914 <argp_help@@Base+0x147c>
   158f8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   158fc:	ldr	r0, [r0]
   15900:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15904:	add	r1, r0, #1
   15908:	str	r1, [r2]
   1590c:	mov	r1, #10
   15910:	strb	r1, [r0]
   15914:	mov	r0, r5
   15918:	bl	11614 <strlen@plt>
   1591c:	cmp	r0, #0
   15920:	beq	15974 <argp_help@@Base+0x14dc>
   15924:	mov	r6, r0
   15928:	ldr	r0, [sl, #28]
   1592c:	ldr	r1, [sl, #32]
   15930:	add	r2, r0, r6
   15934:	cmp	r2, r1
   15938:	bls	15958 <argp_help@@Base+0x14c0>
   1593c:	mov	r0, sl
   15940:	mov	r1, r6
   15944:	bl	1a14c <argp_parse@@Base+0x26ac>
   15948:	cmp	r0, #0
   1594c:	beq	15974 <argp_help@@Base+0x14dc>
   15950:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15954:	ldr	r0, [r0]
   15958:	mov	r1, r5
   1595c:	mov	r2, r6
   15960:	bl	114d0 <memcpy@plt>
   15964:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15968:	ldr	r0, [r1]
   1596c:	add	r0, r0, r6
   15970:	str	r0, [r1]
   15974:	ldr	r0, [sl, #28]
   15978:	ldr	r1, [sl, #32]
   1597c:	cmp	r0, r1
   15980:	bcc	159a0 <argp_help@@Base+0x1508>
   15984:	mov	r0, sl
   15988:	mov	r1, #1
   1598c:	bl	1a14c <argp_parse@@Base+0x26ac>
   15990:	cmp	r0, #0
   15994:	beq	159b4 <argp_help@@Base+0x151c>
   15998:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1599c:	ldr	r0, [r0]
   159a0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   159a4:	add	r1, r0, #1
   159a8:	str	r1, [r2]
   159ac:	mov	r1, #10
   159b0:	strb	r1, [r0]
   159b4:	movw	r0, #49030	; 0xbf86
   159b8:	movt	r0, #1
   159bc:	cmp	r5, r0
   159c0:	beq	1575c <argp_help@@Base+0x12c4>
   159c4:	mov	r0, r5
   159c8:	bl	18d7c <argp_parse@@Base+0x12dc>
   159cc:	b	1575c <argp_help@@Base+0x12c4>
   159d0:	add	r0, r0, #112	; 0x70
   159d4:	b	149f4 <argp_help@@Base+0x55c>

000159d8 <argp_state_help@@Base>:
   159d8:	push	{r4, r5, fp, lr}
   159dc:	add	fp, sp, #8
   159e0:	sub	sp, sp, #8
   159e4:	mov	r4, r2
   159e8:	mov	r2, r1
   159ec:	cmp	r0, #0
   159f0:	beq	15a3c <argp_state_help@@Base+0x64>
   159f4:	cmp	r2, #0
   159f8:	beq	15a74 <argp_state_help@@Base+0x9c>
   159fc:	ldr	r1, [r0, #16]
   15a00:	mov	r5, r0
   15a04:	ands	r0, r1, #2
   15a08:	bne	15a74 <argp_state_help@@Base+0x9c>
   15a0c:	ldr	r3, [r5, #40]	; 0x28
   15a10:	ldr	r0, [r5]
   15a14:	and	r1, r1, #64	; 0x40
   15a18:	orr	r4, r4, r1, lsl #1
   15a1c:	mov	r1, r5
   15a20:	str	r3, [sp]
   15a24:	mov	r3, r4
   15a28:	bl	144c4 <argp_help@@Base+0x2c>
   15a2c:	ldrb	r0, [r5, #16]
   15a30:	tst	r0, #32
   15a34:	beq	15a64 <argp_state_help@@Base+0x8c>
   15a38:	b	15a74 <argp_state_help@@Base+0x9c>
   15a3c:	cmp	r2, #0
   15a40:	beq	15a74 <argp_state_help@@Base+0x9c>
   15a44:	movw	r0, #54328	; 0xd438
   15a48:	mov	r1, #0
   15a4c:	mov	r3, r4
   15a50:	movt	r0, #2
   15a54:	ldr	r0, [r0]
   15a58:	str	r0, [sp]
   15a5c:	mov	r0, #0
   15a60:	bl	144c4 <argp_help@@Base+0x2c>
   15a64:	tst	r4, #256	; 0x100
   15a68:	bne	15a7c <argp_state_help@@Base+0xa4>
   15a6c:	tst	r4, #512	; 0x200
   15a70:	bne	15a8c <argp_state_help@@Base+0xb4>
   15a74:	sub	sp, fp, #8
   15a78:	pop	{r4, r5, fp, pc}
   15a7c:	movw	r0, #54304	; 0xd420
   15a80:	movt	r0, #2
   15a84:	ldr	r0, [r0]
   15a88:	bl	115fc <exit@plt>
   15a8c:	mov	r0, #0
   15a90:	bl	115fc <exit@plt>

00015a94 <argp_error@@Base>:
   15a94:	sub	sp, sp, #8
   15a98:	push	{r4, r5, r6, sl, fp, lr}
   15a9c:	add	fp, sp, #16
   15aa0:	sub	sp, sp, #8
   15aa4:	mov	r6, r1
   15aa8:	mov	r4, r0
   15aac:	cmp	r0, #0
   15ab0:	str	r2, [fp, #8]
   15ab4:	str	r3, [fp, #12]
   15ab8:	beq	15ad0 <argp_error@@Base+0x3c>
   15abc:	ldrb	r0, [r4, #16]
   15ac0:	tst	r0, #2
   15ac4:	bne	15b98 <argp_error@@Base+0x104>
   15ac8:	add	r0, r4, #44	; 0x2c
   15acc:	b	15ad8 <argp_error@@Base+0x44>
   15ad0:	movw	r0, #54336	; 0xd440
   15ad4:	movt	r0, #2
   15ad8:	ldr	r5, [r0]
   15adc:	cmp	r5, #0
   15ae0:	beq	15b98 <argp_error@@Base+0x104>
   15ae4:	mov	r0, r5
   15ae8:	bl	11710 <flockfile@plt>
   15aec:	add	r0, fp, #8
   15af0:	cmp	r4, #0
   15af4:	mov	r1, r5
   15af8:	str	r0, [sp, #4]
   15afc:	movw	r0, #54328	; 0xd438
   15b00:	movt	r0, #2
   15b04:	addne	r0, r4, #40	; 0x28
   15b08:	ldr	r0, [r0]
   15b0c:	bl	11434 <fputs_unlocked@plt>
   15b10:	ldr	r0, [r5, #20]
   15b14:	ldr	r1, [r5, #24]
   15b18:	cmp	r0, r1
   15b1c:	bcs	15ba8 <argp_error@@Base+0x114>
   15b20:	add	r1, r0, #1
   15b24:	str	r1, [r5, #20]
   15b28:	mov	r1, #58	; 0x3a
   15b2c:	strb	r1, [r0]
   15b30:	ldr	r0, [r5, #20]
   15b34:	ldr	r1, [r5, #24]
   15b38:	cmp	r0, r1
   15b3c:	bcs	15bb8 <argp_error@@Base+0x124>
   15b40:	add	r1, r0, #1
   15b44:	str	r1, [r5, #20]
   15b48:	mov	r1, #32
   15b4c:	strb	r1, [r0]
   15b50:	ldr	r2, [sp, #4]
   15b54:	mov	r0, r5
   15b58:	mov	r1, r6
   15b5c:	bl	116ec <vfprintf@plt>
   15b60:	ldr	r0, [r5, #20]
   15b64:	ldr	r1, [r5, #24]
   15b68:	cmp	r0, r1
   15b6c:	bcs	15bc8 <argp_error@@Base+0x134>
   15b70:	add	r1, r0, #1
   15b74:	str	r1, [r5, #20]
   15b78:	mov	r1, #10
   15b7c:	strb	r1, [r0]
   15b80:	mov	r0, r4
   15b84:	mov	r1, r5
   15b88:	mov	r2, #260	; 0x104
   15b8c:	bl	159d8 <argp_state_help@@Base>
   15b90:	mov	r0, r5
   15b94:	bl	11530 <funlockfile@plt>
   15b98:	sub	sp, fp, #16
   15b9c:	pop	{r4, r5, r6, sl, fp, lr}
   15ba0:	add	sp, sp, #8
   15ba4:	bx	lr
   15ba8:	mov	r0, r5
   15bac:	mov	r1, #58	; 0x3a
   15bb0:	bl	116c8 <__overflow@plt>
   15bb4:	b	15b30 <argp_error@@Base+0x9c>
   15bb8:	mov	r0, r5
   15bbc:	mov	r1, #32
   15bc0:	bl	116c8 <__overflow@plt>
   15bc4:	b	15b50 <argp_error@@Base+0xbc>
   15bc8:	mov	r0, r5
   15bcc:	mov	r1, #10
   15bd0:	bl	116c8 <__overflow@plt>
   15bd4:	b	15b80 <argp_error@@Base+0xec>

00015bd8 <argp_failure@@Base>:
   15bd8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15bdc:	add	fp, sp, #24
   15be0:	sub	sp, sp, #200	; 0xc8
   15be4:	mov	r4, r3
   15be8:	mov	r7, r2
   15bec:	mov	r8, r1
   15bf0:	mov	r5, r0
   15bf4:	cmp	r0, #0
   15bf8:	beq	15c10 <argp_failure@@Base+0x38>
   15bfc:	ldrb	r0, [r5, #16]
   15c00:	tst	r0, #2
   15c04:	bne	15d74 <argp_failure@@Base+0x19c>
   15c08:	add	r0, r5, #44	; 0x2c
   15c0c:	b	15c18 <argp_failure@@Base+0x40>
   15c10:	movw	r0, #54336	; 0xd440
   15c14:	movt	r0, #2
   15c18:	ldr	r6, [r0]
   15c1c:	cmp	r6, #0
   15c20:	beq	15d74 <argp_failure@@Base+0x19c>
   15c24:	mov	r0, r6
   15c28:	bl	11710 <flockfile@plt>
   15c2c:	movw	r0, #54328	; 0xd438
   15c30:	cmp	r5, #0
   15c34:	mov	r1, r6
   15c38:	movt	r0, #2
   15c3c:	addne	r0, r5, #40	; 0x28
   15c40:	ldr	r0, [r0]
   15c44:	bl	11434 <fputs_unlocked@plt>
   15c48:	cmp	r4, #0
   15c4c:	beq	15ca8 <argp_failure@@Base+0xd0>
   15c50:	add	r0, fp, #8
   15c54:	str	r0, [sp]
   15c58:	ldr	r0, [r6, #20]
   15c5c:	ldr	r1, [r6, #24]
   15c60:	cmp	r0, r1
   15c64:	bcs	15d8c <argp_failure@@Base+0x1b4>
   15c68:	add	r1, r0, #1
   15c6c:	str	r1, [r6, #20]
   15c70:	mov	r1, #58	; 0x3a
   15c74:	strb	r1, [r0]
   15c78:	ldr	r0, [r6, #20]
   15c7c:	ldr	r1, [r6, #24]
   15c80:	cmp	r0, r1
   15c84:	bcs	15d9c <argp_failure@@Base+0x1c4>
   15c88:	add	r1, r0, #1
   15c8c:	str	r1, [r6, #20]
   15c90:	mov	r1, #32
   15c94:	strb	r1, [r0]
   15c98:	ldr	r2, [sp]
   15c9c:	mov	r0, r6
   15ca0:	mov	r1, r4
   15ca4:	bl	116ec <vfprintf@plt>
   15ca8:	cmp	r7, #0
   15cac:	beq	15d2c <argp_failure@@Base+0x154>
   15cb0:	ldr	r0, [r6, #20]
   15cb4:	ldr	r1, [r6, #24]
   15cb8:	cmp	r0, r1
   15cbc:	bcs	15dac <argp_failure@@Base+0x1d4>
   15cc0:	add	r1, r0, #1
   15cc4:	str	r1, [r6, #20]
   15cc8:	mov	r1, #58	; 0x3a
   15ccc:	strb	r1, [r0]
   15cd0:	ldr	r0, [r6, #20]
   15cd4:	ldr	r1, [r6, #24]
   15cd8:	cmp	r0, r1
   15cdc:	bcs	15dbc <argp_failure@@Base+0x1e4>
   15ce0:	add	r1, r0, #1
   15ce4:	str	r1, [r6, #20]
   15ce8:	mov	r1, #32
   15cec:	strb	r1, [r0]
   15cf0:	mov	r1, sp
   15cf4:	mov	r0, r7
   15cf8:	mov	r2, #200	; 0xc8
   15cfc:	bl	11650 <strerror_r@plt>
   15d00:	cmp	r0, #0
   15d04:	bne	15d24 <argp_failure@@Base+0x14c>
   15d08:	mov	r0, r7
   15d0c:	bl	115cc <strerror@plt>
   15d10:	mov	r1, r0
   15d14:	movw	r0, #48405	; 0xbd15
   15d18:	cmp	r1, #0
   15d1c:	movt	r0, #1
   15d20:	movne	r0, r1
   15d24:	mov	r1, r6
   15d28:	bl	11434 <fputs_unlocked@plt>
   15d2c:	ldr	r0, [r6, #20]
   15d30:	ldr	r1, [r6, #24]
   15d34:	cmp	r0, r1
   15d38:	bcs	15d7c <argp_failure@@Base+0x1a4>
   15d3c:	add	r1, r0, #1
   15d40:	str	r1, [r6, #20]
   15d44:	mov	r1, #10
   15d48:	strb	r1, [r0]
   15d4c:	mov	r0, r6
   15d50:	bl	11530 <funlockfile@plt>
   15d54:	cmp	r8, #0
   15d58:	beq	15d74 <argp_failure@@Base+0x19c>
   15d5c:	cmp	r5, #0
   15d60:	ldrbne	r0, [r5, #16]
   15d64:	tstne	r0, #32
   15d68:	bne	15d74 <argp_failure@@Base+0x19c>
   15d6c:	mov	r0, r8
   15d70:	bl	115fc <exit@plt>
   15d74:	sub	sp, fp, #24
   15d78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15d7c:	mov	r0, r6
   15d80:	mov	r1, #10
   15d84:	bl	116c8 <__overflow@plt>
   15d88:	b	15d4c <argp_failure@@Base+0x174>
   15d8c:	mov	r0, r6
   15d90:	mov	r1, #58	; 0x3a
   15d94:	bl	116c8 <__overflow@plt>
   15d98:	b	15c78 <argp_failure@@Base+0xa0>
   15d9c:	mov	r0, r6
   15da0:	mov	r1, #32
   15da4:	bl	116c8 <__overflow@plt>
   15da8:	b	15c98 <argp_failure@@Base+0xc0>
   15dac:	mov	r0, r6
   15db0:	mov	r1, #58	; 0x3a
   15db4:	bl	116c8 <__overflow@plt>
   15db8:	b	15cd0 <argp_failure@@Base+0xf8>
   15dbc:	mov	r0, r6
   15dc0:	mov	r1, #32
   15dc4:	bl	116c8 <__overflow@plt>
   15dc8:	b	15cf0 <argp_failure@@Base+0x118>
   15dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15dd0:	add	fp, sp, #28
   15dd4:	sub	sp, sp, #44	; 0x2c
   15dd8:	ldr	r4, [r0]
   15ddc:	ldr	r7, [r0, #16]
   15de0:	mov	r8, r0
   15de4:	mov	r0, #16
   15de8:	mov	sl, r1
   15dec:	bl	19acc <argp_parse@@Base+0x202c>
   15df0:	cmp	r0, #0
   15df4:	beq	1642c <argp_failure@@Base+0x854>
   15df8:	mov	r9, r0
   15dfc:	mov	r0, #0
   15e00:	cmp	r4, #0
   15e04:	str	r8, [sp, #32]
   15e08:	mov	r1, r9
   15e0c:	str	r9, [fp, #-32]	; 0xffffffe0
   15e10:	str	r0, [r1, #12]!
   15e14:	str	r1, [sp, #12]
   15e18:	str	r0, [r1, #-8]
   15e1c:	beq	16074 <argp_failure@@Base+0x49c>
   15e20:	ldrb	r0, [r4, #12]
   15e24:	str	r7, [sp, #8]
   15e28:	tst	r0, #4
   15e2c:	bne	16444 <argp_failure@@Base+0x86c>
   15e30:	add	r5, r4, #12
   15e34:	mov	r6, #0
   15e38:	mov	r9, #0
   15e3c:	b	15e44 <argp_failure@@Base+0x26c>
   15e40:	add	r5, r5, #24
   15e44:	ldr	r7, [r5, #-8]
   15e48:	cmp	r7, #0
   15e4c:	bne	15e74 <argp_failure@@Base+0x29c>
   15e50:	ldr	r0, [r5, #-12]
   15e54:	cmp	r0, #0
   15e58:	bne	15e74 <argp_failure@@Base+0x29c>
   15e5c:	ldr	r0, [r5, #4]
   15e60:	cmp	r0, #0
   15e64:	bne	15e74 <argp_failure@@Base+0x29c>
   15e68:	ldr	r0, [r5, #8]
   15e6c:	cmp	r0, #0
   15e70:	beq	15ebc <argp_failure@@Base+0x2e4>
   15e74:	ldr	r0, [r5]
   15e78:	tst	r0, #4
   15e7c:	bne	15e8c <argp_failure@@Base+0x2b4>
   15e80:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15e84:	add	r6, r6, #1
   15e88:	str	r6, [r1, #4]
   15e8c:	sub	r1, r7, #1
   15e90:	cmp	r1, #254	; 0xfe
   15e94:	bhi	15e40 <argp_failure@@Base+0x268>
   15e98:	ands	r0, r0, #8
   15e9c:	bne	15e40 <argp_failure@@Base+0x268>
   15ea0:	bl	115f0 <__ctype_b_loc@plt>
   15ea4:	ldr	r0, [r0]
   15ea8:	add	r0, r0, r7, lsl #1
   15eac:	ldrb	r0, [r0, #1]
   15eb0:	tst	r0, #64	; 0x40
   15eb4:	addne	r9, r9, #1
   15eb8:	b	15e40 <argp_failure@@Base+0x268>
   15ebc:	rsb	r0, r6, r6, lsl #3
   15ec0:	lsl	r0, r0, #2
   15ec4:	bl	19acc <argp_parse@@Base+0x202c>
   15ec8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15ecc:	mov	r5, r0
   15ed0:	str	r0, [r1]
   15ed4:	add	r0, r9, #1
   15ed8:	mov	r8, r1
   15edc:	bl	19acc <argp_parse@@Base+0x202c>
   15ee0:	cmp	r5, #0
   15ee4:	str	r0, [r8, #8]
   15ee8:	movne	r7, r0
   15eec:	cmpne	r0, #0
   15ef0:	bne	15f14 <argp_failure@@Base+0x33c>
   15ef4:	movw	r0, #48810	; 0xbeaa
   15ef8:	movw	r1, #48718	; 0xbe4e
   15efc:	movw	r3, #48730	; 0xbe5a
   15f00:	movw	r2, #474	; 0x1da
   15f04:	movt	r0, #1
   15f08:	movt	r1, #1
   15f0c:	movt	r3, #1
   15f10:	bl	11794 <__assert_fail@plt>
   15f14:	movw	r0, #37450	; 0x924a
   15f18:	movt	r0, #2340	; 0x924
   15f1c:	cmp	r6, r0
   15f20:	bcs	1645c <argp_failure@@Base+0x884>
   15f24:	mov	r9, #0
   15f28:	mov	r0, #0
   15f2c:	b	15f3c <argp_failure@@Base+0x364>
   15f30:	mov	r4, r0
   15f34:	add	r5, r5, #28
   15f38:	mov	r0, r8
   15f3c:	ldr	r1, [r4, #4]
   15f40:	cmp	r1, #0
   15f44:	bne	15f6c <argp_failure@@Base+0x394>
   15f48:	ldr	r2, [r4]
   15f4c:	cmp	r2, #0
   15f50:	bne	15f6c <argp_failure@@Base+0x394>
   15f54:	ldr	r2, [r4, #16]
   15f58:	cmp	r2, #0
   15f5c:	bne	15f6c <argp_failure@@Base+0x394>
   15f60:	ldr	r2, [r4, #20]
   15f64:	cmp	r2, #0
   15f68:	beq	16060 <argp_failure@@Base+0x488>
   15f6c:	stm	r5, {r4, r9}
   15f70:	str	r7, [r5, #8]
   15f74:	ldr	r8, [r4, #20]
   15f78:	cmp	r8, #0
   15f7c:	bne	15f98 <argp_failure@@Base+0x3c0>
   15f80:	ldr	r2, [r4]
   15f84:	cmp	r2, #0
   15f88:	bne	15f94 <argp_failure@@Base+0x3bc>
   15f8c:	cmp	r1, #0
   15f90:	addeq	r0, r0, #1
   15f94:	mov	r8, r0
   15f98:	ldr	r0, [sp, #32]
   15f9c:	mov	r1, #0
   15fa0:	str	r8, [r5, #12]
   15fa4:	str	sl, [r5, #16]
   15fa8:	str	r0, [r5, #20]
   15fac:	add	r0, r1, #1
   15fb0:	str	r0, [r5, #4]
   15fb4:	ldrb	r0, [r4, #12]
   15fb8:	tst	r0, #8
   15fbc:	bne	16014 <argp_failure@@Base+0x43c>
   15fc0:	ldr	r6, [r4, #4]
   15fc4:	sub	r0, r6, #1
   15fc8:	cmp	r0, #254	; 0xfe
   15fcc:	bhi	16014 <argp_failure@@Base+0x43c>
   15fd0:	bl	115f0 <__ctype_b_loc@plt>
   15fd4:	ldr	r0, [r0]
   15fd8:	add	r0, r0, r6, lsl #1
   15fdc:	ldrb	r0, [r0, #1]
   15fe0:	tst	r0, #64	; 0x40
   15fe4:	beq	16014 <argp_failure@@Base+0x43c>
   15fe8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fec:	ldr	r0, [r0, #8]
   15ff0:	cmp	r0, r7
   15ff4:	bcs	16010 <argp_failure@@Base+0x438>
   15ff8:	ldrb	r1, [r0], #1
   15ffc:	uxtb	r2, r6
   16000:	cmp	r1, r2
   16004:	beq	16014 <argp_failure@@Base+0x43c>
   16008:	cmp	r7, r0
   1600c:	bne	15ff8 <argp_failure@@Base+0x420>
   16010:	strb	r6, [r7], #1
   16014:	ldr	r1, [r4, #28]
   16018:	add	r0, r4, #24
   1601c:	cmp	r1, #0
   16020:	bne	16048 <argp_failure@@Base+0x470>
   16024:	ldr	r1, [r0]
   16028:	cmp	r1, #0
   1602c:	bne	16048 <argp_failure@@Base+0x470>
   16030:	ldr	r1, [r4, #40]	; 0x28
   16034:	cmp	r1, #0
   16038:	bne	16048 <argp_failure@@Base+0x470>
   1603c:	ldr	r1, [r4, #44]	; 0x2c
   16040:	cmp	r1, #0
   16044:	beq	15f30 <argp_failure@@Base+0x358>
   16048:	ldrb	r1, [r4, #36]	; 0x24
   1604c:	tst	r1, #4
   16050:	beq	15f30 <argp_failure@@Base+0x358>
   16054:	ldr	r1, [r5, #4]
   16058:	mov	r4, r0
   1605c:	b	15fac <argp_failure@@Base+0x3d4>
   16060:	mov	r0, #0
   16064:	ldr	r8, [sp, #32]
   16068:	ldr	r9, [fp, #-32]	; 0xffffffe0
   1606c:	strb	r0, [r7]
   16070:	ldr	r7, [sp, #8]
   16074:	cmp	r7, #0
   16078:	beq	16400 <argp_failure@@Base+0x828>
   1607c:	ldr	r0, [r7]
   16080:	cmp	r0, #0
   16084:	beq	16400 <argp_failure@@Base+0x828>
   16088:	str	sl, [sp]
   1608c:	b	160c4 <argp_failure@@Base+0x4ec>
   16090:	ldr	r5, [sp, #20]
   16094:	mov	r9, r6
   16098:	ldr	r1, [r5]
   1609c:	ldr	r2, [r5, #8]
   160a0:	str	r1, [r6]
   160a4:	stmib	r6, {r0, r2}
   160a8:	mov	r0, #0
   160ac:	str	r0, [r5, #4]
   160b0:	mov	r0, r5
   160b4:	bl	18d7c <argp_parse@@Base+0x12dc>
   160b8:	ldr	r0, [r7, #16]!
   160bc:	cmp	r0, #0
   160c0:	beq	16400 <argp_failure@@Base+0x828>
   160c4:	ldr	r4, [r7, #12]
   160c8:	cmp	r4, #0
   160cc:	beq	160d8 <argp_failure@@Base+0x500>
   160d0:	ldr	r5, [r7, #8]
   160d4:	b	160e8 <argp_failure@@Base+0x510>
   160d8:	ldr	r5, [r7, #8]
   160dc:	mov	r1, sl
   160e0:	cmp	r5, #0
   160e4:	beq	16140 <argp_failure@@Base+0x568>
   160e8:	ldr	r6, [r8, #16]
   160ec:	mov	r0, #28
   160f0:	bl	19acc <argp_parse@@Base+0x202c>
   160f4:	mov	r1, r0
   160f8:	cmp	r0, #0
   160fc:	beq	16140 <argp_failure@@Base+0x568>
   16100:	sub	r0, r7, r6
   16104:	cmp	sl, #0
   16108:	str	r5, [r1]
   1610c:	asr	r0, r0, #4
   16110:	stmib	r1, {r0, r4, sl}
   16114:	str	r8, [r1, #16]
   16118:	beq	16128 <argp_failure@@Base+0x550>
   1611c:	ldr	r0, [sl, #20]
   16120:	add	r0, r0, #1
   16124:	b	1612c <argp_failure@@Base+0x554>
   16128:	mov	r0, #0
   1612c:	ldr	r3, [sp, #12]
   16130:	str	r0, [r1, #20]
   16134:	ldr	r2, [r3]
   16138:	str	r1, [r3]
   1613c:	str	r2, [r1, #24]
   16140:	ldr	r0, [r7]
   16144:	bl	15dcc <argp_failure@@Base+0x1f4>
   16148:	ldr	r1, [sp, #12]
   1614c:	mov	r5, r0
   16150:	ldr	r2, [r1]
   16154:	mov	r0, r1
   16158:	add	r1, r2, #24
   1615c:	cmp	r2, #0
   16160:	bne	16150 <argp_failure@@Base+0x578>
   16164:	ldr	r1, [r5, #12]
   16168:	str	r1, [r0]
   1616c:	mov	r0, #0
   16170:	str	r0, [r5, #12]
   16174:	ldr	r0, [r5, #4]
   16178:	cmp	r0, #0
   1617c:	beq	160b0 <argp_failure@@Base+0x4d8>
   16180:	mov	r6, r9
   16184:	ldr	r9, [r9, #4]
   16188:	str	r5, [sp, #20]
   1618c:	cmp	r9, #0
   16190:	beq	16090 <argp_failure@@Base+0x4b8>
   16194:	add	r4, r9, r0
   16198:	rsb	r0, r4, r4, lsl #3
   1619c:	lsl	r0, r0, #2
   161a0:	bl	19acc <argp_parse@@Base+0x202c>
   161a4:	ldr	r5, [r6, #8]
   161a8:	str	r0, [sp, #16]
   161ac:	mov	r8, r6
   161b0:	mov	r0, r5
   161b4:	bl	11614 <strlen@plt>
   161b8:	mov	r6, r0
   161bc:	ldr	r0, [sp, #20]
   161c0:	ldr	r0, [r0, #8]
   161c4:	bl	11614 <strlen@plt>
   161c8:	add	r0, r6, r0
   161cc:	str	r6, [sp, #24]
   161d0:	add	r0, r0, #1
   161d4:	bl	19acc <argp_parse@@Base+0x202c>
   161d8:	ldr	r1, [sp, #16]
   161dc:	cmp	r1, #0
   161e0:	cmpne	r0, #0
   161e4:	beq	1640c <argp_failure@@Base+0x834>
   161e8:	str	r0, [sp, #28]
   161ec:	movw	r0, #37450	; 0x924a
   161f0:	str	r4, [sp, #4]
   161f4:	movt	r0, #2340	; 0x924
   161f8:	cmp	r4, r0
   161fc:	bcs	16474 <argp_failure@@Base+0x89c>
   16200:	ldr	r1, [r8]
   16204:	ldr	r8, [sp, #16]
   16208:	rsb	r4, r9, r9, lsl #3
   1620c:	lsl	r2, r4, #2
   16210:	mov	r0, r8
   16214:	bl	114d0 <memcpy@plt>
   16218:	ldr	r2, [sp, #20]
   1621c:	add	r0, r8, r4, lsl #2
   16220:	ldm	r2, {r1, r2}
   16224:	rsb	r2, r2, r2, lsl #3
   16228:	lsl	r2, r2, #2
   1622c:	bl	114d0 <memcpy@plt>
   16230:	ldr	r6, [sp, #28]
   16234:	ldr	r2, [sp, #24]
   16238:	mov	r1, r5
   1623c:	mov	r0, r6
   16240:	bl	114d0 <memcpy@plt>
   16244:	tst	r9, #1
   16248:	mov	r0, r9
   1624c:	mov	r4, r8
   16250:	beq	16270 <argp_failure@@Base+0x698>
   16254:	ldr	r1, [sp, #16]
   16258:	ldr	r0, [r1, #8]
   1625c:	add	r4, r1, #28
   16260:	sub	r0, r0, r5
   16264:	add	r0, r6, r0
   16268:	str	r0, [r1, #8]
   1626c:	sub	r0, r9, #1
   16270:	cmp	r9, #1
   16274:	beq	162a4 <argp_failure@@Base+0x6cc>
   16278:	ldr	r1, [r4, #8]
   1627c:	ldr	r2, [r4, #36]	; 0x24
   16280:	subs	r0, r0, #2
   16284:	sub	r1, r1, r5
   16288:	add	r1, r6, r1
   1628c:	str	r1, [r4, #8]
   16290:	sub	r1, r2, r5
   16294:	add	r1, r6, r1
   16298:	str	r1, [r4, #36]	; 0x24
   1629c:	add	r4, r4, #56	; 0x38
   162a0:	bne	16278 <argp_failure@@Base+0x6a0>
   162a4:	ldr	r0, [sp, #24]
   162a8:	str	r7, [sp, #8]
   162ac:	add	r0, r6, r0
   162b0:	str	r0, [sp, #36]	; 0x24
   162b4:	ldr	r0, [sp, #20]
   162b8:	ldr	r5, [r0, #4]
   162bc:	cmp	r5, #0
   162c0:	beq	16378 <argp_failure@@Base+0x7a0>
   162c4:	ldr	r6, [r0, #8]
   162c8:	b	162d8 <argp_failure@@Base+0x700>
   162cc:	subs	r5, r5, #1
   162d0:	add	r4, r4, #28
   162d4:	beq	16378 <argp_failure@@Base+0x7a0>
   162d8:	ldr	r0, [sp, #36]	; 0x24
   162dc:	str	r0, [r4, #8]
   162e0:	ldr	sl, [r4, #4]
   162e4:	cmp	sl, #0
   162e8:	beq	162cc <argp_failure@@Base+0x6f4>
   162ec:	ldr	r9, [r4]
   162f0:	b	16310 <argp_failure@@Base+0x738>
   162f4:	ldr	r0, [sp, #36]	; 0x24
   162f8:	strb	r8, [r0], #1
   162fc:	str	r0, [sp, #36]	; 0x24
   16300:	add	r6, r6, #1
   16304:	subs	sl, sl, #1
   16308:	add	r9, r9, #24
   1630c:	beq	162cc <argp_failure@@Base+0x6f4>
   16310:	ldrb	r0, [r9, #12]
   16314:	tst	r0, #8
   16318:	bne	16304 <argp_failure@@Base+0x72c>
   1631c:	ldr	r7, [r9, #4]
   16320:	sub	r0, r7, #1
   16324:	cmp	r0, #254	; 0xfe
   16328:	bhi	16304 <argp_failure@@Base+0x72c>
   1632c:	ldrb	r8, [r6]
   16330:	bl	115f0 <__ctype_b_loc@plt>
   16334:	cmp	r7, r8
   16338:	bne	16304 <argp_failure@@Base+0x72c>
   1633c:	ldr	r0, [r0]
   16340:	add	r0, r0, r7, lsl #1
   16344:	ldrh	r0, [r0]
   16348:	ands	r0, r0, #16384	; 0x4000
   1634c:	beq	16304 <argp_failure@@Base+0x72c>
   16350:	ldr	r0, [sp, #24]
   16354:	ldr	r1, [sp, #28]
   16358:	cmp	r0, #1
   1635c:	blt	162f4 <argp_failure@@Base+0x71c>
   16360:	ldrb	r2, [r1], #1
   16364:	cmp	r2, r8
   16368:	beq	16300 <argp_failure@@Base+0x728>
   1636c:	subs	r0, r0, #1
   16370:	bne	16360 <argp_failure@@Base+0x788>
   16374:	b	162f4 <argp_failure@@Base+0x71c>
   16378:	ldr	r1, [sp, #36]	; 0x24
   1637c:	ldr	r9, [fp, #-32]	; 0xffffffe0
   16380:	mov	r0, #0
   16384:	strb	r0, [r1]
   16388:	ldr	r0, [r9]
   1638c:	bl	18d7c <argp_parse@@Base+0x12dc>
   16390:	ldr	r0, [r9, #8]
   16394:	bl	18d7c <argp_parse@@Base+0x12dc>
   16398:	ldr	r0, [sp, #16]
   1639c:	ldr	r5, [sp, #20]
   163a0:	str	r0, [r9]
   163a4:	ldr	r0, [sp, #4]
   163a8:	str	r0, [r9, #4]
   163ac:	ldr	r0, [sp, #28]
   163b0:	str	r0, [r9, #8]
   163b4:	ldr	r0, [r5, #12]
   163b8:	cmp	r0, #0
   163bc:	beq	163d4 <argp_failure@@Base+0x7fc>
   163c0:	ldr	r4, [r0, #24]
   163c4:	bl	18d7c <argp_parse@@Base+0x12dc>
   163c8:	cmp	r4, #0
   163cc:	mov	r0, r4
   163d0:	bne	163c0 <argp_failure@@Base+0x7e8>
   163d4:	ldr	r0, [r5, #4]
   163d8:	ldr	sl, [sp]
   163dc:	ldr	r8, [sp, #32]
   163e0:	ldr	r7, [sp, #8]
   163e4:	cmp	r0, #0
   163e8:	beq	160b0 <argp_failure@@Base+0x4d8>
   163ec:	ldr	r0, [r5]
   163f0:	bl	18d7c <argp_parse@@Base+0x12dc>
   163f4:	ldr	r0, [r5, #8]
   163f8:	bl	18d7c <argp_parse@@Base+0x12dc>
   163fc:	b	160b0 <argp_failure@@Base+0x4d8>
   16400:	mov	r0, r9
   16404:	sub	sp, fp, #28
   16408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1640c:	movw	r0, #48902	; 0xbf06
   16410:	movw	r1, #48718	; 0xbe4e
   16414:	movw	r3, #48927	; 0xbf1f
   16418:	movw	r2, #970	; 0x3ca
   1641c:	movt	r0, #1
   16420:	movt	r1, #1
   16424:	movt	r3, #1
   16428:	bl	11794 <__assert_fail@plt>
   1642c:	movw	r0, #48714	; 0xbe4a
   16430:	movw	r1, #48718	; 0xbe4e
   16434:	movw	r3, #48730	; 0xbe5a
   16438:	movw	r2, #450	; 0x1c2
   1643c:	movt	r0, #1
   16440:	b	15f08 <argp_failure@@Base+0x330>
   16444:	movw	r0, #48794	; 0xbe9a
   16448:	movw	r1, #48718	; 0xbe4e
   1644c:	movw	r3, #48730	; 0xbe5a
   16450:	mov	r2, #460	; 0x1cc
   16454:	movt	r0, #1
   16458:	b	15f08 <argp_failure@@Base+0x330>
   1645c:	movw	r0, #48845	; 0xbecd
   16460:	movw	r1, #48718	; 0xbe4e
   16464:	movw	r3, #48730	; 0xbe5a
   16468:	mov	r2, #476	; 0x1dc
   1646c:	movt	r0, #1
   16470:	b	15f08 <argp_failure@@Base+0x330>
   16474:	movw	r0, #48850	; 0xbed2
   16478:	movw	r1, #48718	; 0xbe4e
   1647c:	movw	r3, #48927	; 0xbf1f
   16480:	mov	r2, #972	; 0x3cc
   16484:	movt	r0, #1
   16488:	b	16420 <argp_failure@@Base+0x848>
   1648c:	push	{r4, r5, fp, lr}
   16490:	add	fp, sp, #8
   16494:	mov	r1, r0
   16498:	ldr	r0, [r0, #8]
   1649c:	ldr	r5, [r1, #16]
   164a0:	cmp	r0, #0
   164a4:	beq	164c8 <argp_failure@@Base+0x8f0>
   164a8:	mov	r1, #10
   164ac:	bl	11620 <strchr@plt>
   164b0:	cmp	r0, #0
   164b4:	mov	r4, r0
   164b8:	movwne	r4, #1
   164bc:	cmp	r5, #0
   164c0:	bne	164d4 <argp_failure@@Base+0x8fc>
   164c4:	b	164f8 <argp_failure@@Base+0x920>
   164c8:	mov	r4, #0
   164cc:	cmp	r5, #0
   164d0:	beq	164f8 <argp_failure@@Base+0x920>
   164d4:	ldr	r0, [r5]
   164d8:	cmp	r0, #0
   164dc:	beq	164f8 <argp_failure@@Base+0x920>
   164e0:	add	r5, r5, #16
   164e4:	bl	1648c <argp_failure@@Base+0x8b4>
   164e8:	add	r4, r0, r4
   164ec:	ldr	r0, [r5], #16
   164f0:	cmp	r0, #0
   164f4:	bne	164e4 <argp_failure@@Base+0x90c>
   164f8:	mov	r0, r4
   164fc:	pop	{r4, r5, fp, pc}
   16500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16504:	add	fp, sp, #28
   16508:	sub	sp, sp, #28
   1650c:	ldr	r4, [r0, #4]
   16510:	str	r1, [fp, #-40]	; 0xffffffd8
   16514:	cmp	r4, #0
   16518:	beq	168c8 <argp_failure@@Base+0xcf0>
   1651c:	mov	r5, r0
   16520:	ldr	r0, [r0, #8]
   16524:	bl	11614 <strlen@plt>
   16528:	add	r0, r0, #8
   1652c:	bic	r0, r0, #7
   16530:	sub	r0, sp, r0
   16534:	mov	sp, r0
   16538:	ldr	r7, [r5]
   1653c:	str	r0, [fp, #-52]	; 0xffffffcc
   16540:	str	r0, [fp, #-48]	; 0xffffffd0
   16544:	str	r5, [fp, #-44]	; 0xffffffd4
   16548:	b	16560 <argp_failure@@Base+0x988>
   1654c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   16550:	ldr	r6, [fp, #-44]	; 0xffffffd4
   16554:	add	r7, r7, #28
   16558:	subs	r4, r4, #1
   1655c:	beq	16618 <argp_failure@@Base+0xa40>
   16560:	ldr	r6, [r7, #4]
   16564:	str	r4, [fp, #-36]	; 0xffffffdc
   16568:	cmp	r6, #0
   1656c:	beq	1654c <argp_failure@@Base+0x974>
   16570:	ldr	r4, [r7]
   16574:	ldr	r5, [r7, #8]
   16578:	mov	sl, r4
   1657c:	b	16590 <argp_failure@@Base+0x9b8>
   16580:	add	r5, r5, #1
   16584:	subs	r6, r6, #1
   16588:	add	sl, sl, #24
   1658c:	beq	1654c <argp_failure@@Base+0x974>
   16590:	ldr	r8, [sl, #12]
   16594:	tst	r8, #8
   16598:	bne	16584 <argp_failure@@Base+0x9ac>
   1659c:	ldr	r9, [sl, #4]
   165a0:	sub	r0, r9, #1
   165a4:	cmp	r0, #254	; 0xfe
   165a8:	bhi	16584 <argp_failure@@Base+0x9ac>
   165ac:	bl	115f0 <__ctype_b_loc@plt>
   165b0:	ldr	r0, [r0]
   165b4:	add	r0, r0, r9, lsl #1
   165b8:	ldrb	r0, [r0, #1]
   165bc:	tst	r0, #64	; 0x40
   165c0:	beq	16584 <argp_failure@@Base+0x9ac>
   165c4:	ldrb	r0, [r5]
   165c8:	cmp	r9, r0
   165cc:	bne	16584 <argp_failure@@Base+0x9ac>
   165d0:	tst	r8, #4
   165d4:	moveq	r4, sl
   165d8:	tst	r8, #2
   165dc:	bne	16580 <argp_failure@@Base+0x9a8>
   165e0:	ldr	r0, [sl, #8]
   165e4:	cmp	r0, #0
   165e8:	bne	16580 <argp_failure@@Base+0x9a8>
   165ec:	ldr	r0, [r4, #8]
   165f0:	cmp	r0, #0
   165f4:	bne	16580 <argp_failure@@Base+0x9a8>
   165f8:	ldr	r0, [r4, #12]
   165fc:	orr	r0, r0, r8
   16600:	tst	r0, #16
   16604:	bne	16580 <argp_failure@@Base+0x9a8>
   16608:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1660c:	strb	r9, [r0], #1
   16610:	str	r0, [fp, #-48]	; 0xffffffd0
   16614:	b	16580 <argp_failure@@Base+0x9a8>
   16618:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1661c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16620:	cmp	r1, r2
   16624:	bls	16640 <argp_failure@@Base+0xa68>
   16628:	mov	r0, #0
   1662c:	strb	r0, [r1]
   16630:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16634:	movw	r1, #48971	; 0xbf4b
   16638:	movt	r1, #1
   1663c:	bl	1a238 <argp_parse@@Base+0x2798>
   16640:	ldr	r5, [r6, #4]
   16644:	cmp	r5, #0
   16648:	beq	168c8 <argp_failure@@Base+0xcf0>
   1664c:	ldr	r8, [r6]
   16650:	b	16660 <argp_failure@@Base+0xa88>
   16654:	subs	r5, r5, #1
   16658:	add	r8, r8, #28
   1665c:	beq	16804 <argp_failure@@Base+0xc2c>
   16660:	ldr	r9, [r8, #4]
   16664:	cmp	r9, #0
   16668:	beq	16654 <argp_failure@@Base+0xa7c>
   1666c:	ldr	sl, [r8]
   16670:	ldr	r4, [r8, #8]
   16674:	str	sl, [fp, #-36]	; 0xffffffdc
   16678:	b	166a0 <argp_failure@@Base+0xac8>
   1667c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16680:	movw	r1, #48978	; 0xbf52
   16684:	mov	r2, r7
   16688:	movt	r1, #1
   1668c:	bl	1a238 <argp_parse@@Base+0x2798>
   16690:	add	r4, r4, #1
   16694:	subs	r9, r9, #1
   16698:	add	sl, sl, #24
   1669c:	beq	16654 <argp_failure@@Base+0xa7c>
   166a0:	ldr	r6, [sl, #12]
   166a4:	tst	r6, #8
   166a8:	bne	16694 <argp_failure@@Base+0xabc>
   166ac:	ldr	r7, [sl, #4]
   166b0:	sub	r0, r7, #1
   166b4:	cmp	r0, #254	; 0xfe
   166b8:	bhi	16694 <argp_failure@@Base+0xabc>
   166bc:	bl	115f0 <__ctype_b_loc@plt>
   166c0:	ldr	r0, [r0]
   166c4:	add	r0, r0, r7, lsl #1
   166c8:	ldrb	r0, [r0, #1]
   166cc:	tst	r0, #64	; 0x40
   166d0:	beq	16694 <argp_failure@@Base+0xabc>
   166d4:	ldrb	r0, [r4]
   166d8:	cmp	r7, r0
   166dc:	bne	16694 <argp_failure@@Base+0xabc>
   166e0:	tst	r6, #4
   166e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   166e8:	moveq	r0, sl
   166ec:	tst	r6, #2
   166f0:	str	r0, [fp, #-36]	; 0xffffffdc
   166f4:	bne	16690 <argp_failure@@Base+0xab8>
   166f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   166fc:	ldr	r3, [sl, #8]
   16700:	ldr	r0, [r0, #12]
   16704:	cmp	r3, #0
   16708:	orr	r0, r0, r6
   1670c:	bne	16718 <argp_failure@@Base+0xb40>
   16710:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16714:	ldr	r3, [r1, #8]
   16718:	tst	r0, #16
   1671c:	bne	16690 <argp_failure@@Base+0xab8>
   16720:	cmp	r3, #0
   16724:	beq	16690 <argp_failure@@Base+0xab8>
   16728:	tst	r0, #1
   1672c:	bne	1667c <argp_failure@@Base+0xaa4>
   16730:	mov	r0, r3
   16734:	str	r3, [fp, #-48]	; 0xffffffd0
   16738:	bl	11614 <strlen@plt>
   1673c:	ldr	r7, [fp, #-40]	; 0xffffffd8
   16740:	add	r6, r0, #6
   16744:	ldr	r2, [r7, #24]
   16748:	ldr	r0, [r7, #28]
   1674c:	ldr	r1, [r7, #16]
   16750:	sub	r2, r0, r2
   16754:	cmp	r2, r1
   16758:	bls	16768 <argp_failure@@Base+0xb90>
   1675c:	mov	r0, r7
   16760:	bl	19c1c <argp_parse@@Base+0x217c>
   16764:	ldr	r0, [r7, #28]
   16768:	ldr	r3, [r7, #20]
   1676c:	ldr	r2, [r7, #8]
   16770:	ldr	r1, [r7, #32]
   16774:	cmp	r3, #0
   16778:	addgt	r6, r6, r3
   1677c:	cmp	r6, r2
   16780:	bcs	167b8 <argp_failure@@Base+0xbe0>
   16784:	ldr	r6, [fp, #-48]	; 0xffffffd0
   16788:	cmp	r0, r1
   1678c:	bcc	167a8 <argp_failure@@Base+0xbd0>
   16790:	mov	r0, r7
   16794:	mov	r1, #1
   16798:	bl	1a14c <argp_parse@@Base+0x26ac>
   1679c:	cmp	r0, #0
   167a0:	beq	167ec <argp_failure@@Base+0xc14>
   167a4:	ldr	r0, [r7, #28]
   167a8:	add	r1, r0, #1
   167ac:	str	r1, [r7, #28]
   167b0:	mov	r1, #32
   167b4:	b	167e8 <argp_failure@@Base+0xc10>
   167b8:	ldr	r6, [fp, #-48]	; 0xffffffd0
   167bc:	cmp	r0, r1
   167c0:	bcc	167dc <argp_failure@@Base+0xc04>
   167c4:	mov	r0, r7
   167c8:	mov	r1, #1
   167cc:	bl	1a14c <argp_parse@@Base+0x26ac>
   167d0:	cmp	r0, #0
   167d4:	beq	167ec <argp_failure@@Base+0xc14>
   167d8:	ldr	r0, [r7, #28]
   167dc:	add	r1, r0, #1
   167e0:	str	r1, [r7, #28]
   167e4:	mov	r1, #10
   167e8:	strb	r1, [r0]
   167ec:	ldr	r2, [sl, #4]
   167f0:	movw	r1, #48989	; 0xbf5d
   167f4:	mov	r0, r7
   167f8:	mov	r3, r6
   167fc:	movt	r1, #1
   16800:	b	1668c <argp_failure@@Base+0xab4>
   16804:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16808:	ldr	r4, [r0, #4]
   1680c:	cmp	r4, #0
   16810:	beq	168c8 <argp_failure@@Base+0xcf0>
   16814:	ldr	r6, [r0]
   16818:	movw	sl, #49022	; 0xbf7e
   1681c:	movw	r9, #48998	; 0xbf66
   16820:	movt	sl, #1
   16824:	movt	r9, #1
   16828:	b	16838 <argp_failure@@Base+0xc60>
   1682c:	subs	r4, r4, #1
   16830:	add	r6, r6, #28
   16834:	beq	168c8 <argp_failure@@Base+0xcf0>
   16838:	ldr	r7, [r6, #4]
   1683c:	cmp	r7, #0
   16840:	beq	1682c <argp_failure@@Base+0xc54>
   16844:	ldr	r8, [r6]
   16848:	mov	r5, r8
   1684c:	b	16868 <argp_failure@@Base+0xc90>
   16850:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16854:	mov	r1, sl
   16858:	bl	1a238 <argp_parse@@Base+0x2798>
   1685c:	subs	r7, r7, #1
   16860:	add	r5, r5, #24
   16864:	beq	1682c <argp_failure@@Base+0xc54>
   16868:	ldr	r2, [r5]
   1686c:	cmp	r2, #0
   16870:	beq	1685c <argp_failure@@Base+0xc84>
   16874:	ldr	r0, [r5, #12]
   16878:	tst	r0, #4
   1687c:	moveq	r8, r5
   16880:	tst	r0, #2
   16884:	bne	1685c <argp_failure@@Base+0xc84>
   16888:	ldr	r3, [r5, #8]
   1688c:	ldr	r1, [r8, #12]
   16890:	cmp	r3, #0
   16894:	orr	r0, r1, r0
   16898:	ldreq	r3, [r8, #8]
   1689c:	tst	r0, #16
   168a0:	bne	1685c <argp_failure@@Base+0xc84>
   168a4:	cmp	r3, #0
   168a8:	beq	16850 <argp_failure@@Base+0xc78>
   168ac:	tst	r0, #1
   168b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   168b4:	movne	r1, r9
   168b8:	movweq	r1, #49011	; 0xbf73
   168bc:	movteq	r1, #1
   168c0:	bl	1a238 <argp_parse@@Base+0x2798>
   168c4:	b	1685c <argp_failure@@Base+0xc84>
   168c8:	sub	sp, fp, #28
   168cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   168d4:	add	fp, sp, #28
   168d8:	sub	sp, sp, #28
   168dc:	ldr	r5, [r0, #8]
   168e0:	mov	r7, r0
   168e4:	ldr	sl, [r0, #16]
   168e8:	ldr	r0, [r2]
   168ec:	mov	r4, r3
   168f0:	mov	r9, r2
   168f4:	mov	r8, r1
   168f8:	cmp	r7, #0
   168fc:	mov	r6, r5
   16900:	str	r0, [sp, #20]
   16904:	beq	16940 <argp_failure@@Base+0xd68>
   16908:	ldr	r0, [r7, #20]
   1690c:	mov	r6, r5
   16910:	cmp	r0, #0
   16914:	beq	16940 <argp_failure@@Base+0xd68>
   16918:	mov	r0, r7
   1691c:	mov	r1, r8
   16920:	bl	18708 <argp_parse@@Base+0xc68>
   16924:	ldr	r3, [r7, #20]
   16928:	mov	r2, r0
   1692c:	movw	r0, #6
   16930:	mov	r1, r5
   16934:	movt	r0, #512	; 0x200
   16938:	blx	r3
   1693c:	mov	r6, r0
   16940:	cmp	r6, #0
   16944:	beq	169a8 <argp_failure@@Base+0xdd0>
   16948:	mov	r0, r6
   1694c:	mov	r1, #10
   16950:	bl	11494 <strchrnul@plt>
   16954:	mov	r7, r0
   16958:	ldrb	r0, [r0]
   1695c:	str	r5, [sp, #12]
   16960:	str	r6, [sp, #16]
   16964:	stmib	sp, {r8, sl}
   16968:	cmp	r0, #0
   1696c:	beq	169c0 <argp_failure@@Base+0xde8>
   16970:	ldr	r0, [sp, #20]
   16974:	ldrb	r6, [r0]
   16978:	cmp	r6, #0
   1697c:	beq	169cc <argp_failure@@Base+0xdf4>
   16980:	mov	r8, #0
   16984:	add	sl, r7, #1
   16988:	mov	r1, #10
   1698c:	mov	r0, sl
   16990:	bl	11494 <strchrnul@plt>
   16994:	add	r8, r8, #1
   16998:	mov	r7, r0
   1699c:	cmp	r8, r6
   169a0:	bcc	16984 <argp_failure@@Base+0xdac>
   169a4:	b	169d0 <argp_failure@@Base+0xdf8>
   169a8:	mov	r0, #0
   169ac:	mov	r7, #0
   169b0:	str	r0, [sp, #24]
   169b4:	cmp	sl, #0
   169b8:	bne	16b30 <argp_failure@@Base+0xf58>
   169bc:	b	16b74 <argp_failure@@Base+0xf9c>
   169c0:	mov	r0, #0
   169c4:	mov	sl, r6
   169c8:	b	169e0 <argp_failure@@Base+0xe08>
   169cc:	ldr	sl, [sp, #16]
   169d0:	ldr	r0, [r9]
   169d4:	add	r0, r0, #1
   169d8:	str	r0, [r9]
   169dc:	mov	r0, #1
   169e0:	str	r0, [sp, #24]
   169e4:	ldr	r8, [fp, #8]
   169e8:	sub	r2, r7, sl
   169ec:	add	r6, r2, #1
   169f0:	ldr	r3, [r8, #24]
   169f4:	ldr	r0, [r8, #28]
   169f8:	ldr	r1, [r8, #16]
   169fc:	sub	r3, r0, r3
   16a00:	cmp	r3, r1
   16a04:	bls	16a1c <argp_failure@@Base+0xe44>
   16a08:	mov	r0, r8
   16a0c:	mov	r5, r2
   16a10:	bl	19c1c <argp_parse@@Base+0x217c>
   16a14:	ldr	r0, [r8, #28]
   16a18:	mov	r2, r5
   16a1c:	ldr	r3, [r8, #20]
   16a20:	ldr	r5, [r8, #8]
   16a24:	ldr	r1, [r8, #32]
   16a28:	cmp	r3, #0
   16a2c:	addgt	r6, r6, r3
   16a30:	cmp	r6, r5
   16a34:	bcs	16a7c <argp_failure@@Base+0xea4>
   16a38:	ldr	r8, [sp, #4]
   16a3c:	cmp	r0, r1
   16a40:	bcc	16a68 <argp_failure@@Base+0xe90>
   16a44:	ldr	r6, [fp, #8]
   16a48:	mov	r1, #1
   16a4c:	mov	r5, r2
   16a50:	mov	r0, r6
   16a54:	bl	1a14c <argp_parse@@Base+0x26ac>
   16a58:	mov	r2, r5
   16a5c:	cmp	r0, #0
   16a60:	beq	16ac0 <argp_failure@@Base+0xee8>
   16a64:	ldr	r0, [r6, #28]
   16a68:	ldr	r6, [fp, #8]
   16a6c:	add	r1, r0, #1
   16a70:	str	r1, [r6, #28]
   16a74:	mov	r1, #32
   16a78:	b	16abc <argp_failure@@Base+0xee4>
   16a7c:	ldr	r8, [sp, #4]
   16a80:	cmp	r0, r1
   16a84:	bcc	16aac <argp_failure@@Base+0xed4>
   16a88:	ldr	r6, [fp, #8]
   16a8c:	mov	r1, #1
   16a90:	mov	r5, r2
   16a94:	mov	r0, r6
   16a98:	bl	1a14c <argp_parse@@Base+0x26ac>
   16a9c:	mov	r2, r5
   16aa0:	cmp	r0, #0
   16aa4:	beq	16ac0 <argp_failure@@Base+0xee8>
   16aa8:	ldr	r0, [r6, #28]
   16aac:	ldr	r6, [fp, #8]
   16ab0:	add	r1, r0, #1
   16ab4:	str	r1, [r6, #28]
   16ab8:	mov	r1, #10
   16abc:	strb	r1, [r0]
   16ac0:	ldr	r0, [r6, #28]
   16ac4:	ldr	r1, [r6, #32]
   16ac8:	add	r3, r0, r2
   16acc:	cmp	r3, r1
   16ad0:	bls	16af8 <argp_failure@@Base+0xf20>
   16ad4:	mov	r0, r6
   16ad8:	mov	r1, r2
   16adc:	mov	r5, r2
   16ae0:	bl	1a14c <argp_parse@@Base+0x26ac>
   16ae4:	cmp	r0, #0
   16ae8:	beq	16b10 <argp_failure@@Base+0xf38>
   16aec:	ldr	r6, [fp, #8]
   16af0:	mov	r2, r5
   16af4:	ldr	r0, [r6, #28]
   16af8:	mov	r1, sl
   16afc:	mov	r5, r2
   16b00:	bl	114d0 <memcpy@plt>
   16b04:	ldr	r0, [r6, #28]
   16b08:	add	r0, r0, r5
   16b0c:	str	r0, [r6, #28]
   16b10:	ldr	r0, [sp, #16]
   16b14:	ldr	r1, [sp, #12]
   16b18:	cmp	r0, r1
   16b1c:	beq	16b24 <argp_failure@@Base+0xf4c>
   16b20:	bl	18d7c <argp_parse@@Base+0x12dc>
   16b24:	ldr	sl, [sp, #8]
   16b28:	cmp	sl, #0
   16b2c:	beq	16b74 <argp_failure@@Base+0xf9c>
   16b30:	ldr	r0, [sl]
   16b34:	cmp	r0, #0
   16b38:	beq	16b74 <argp_failure@@Base+0xf9c>
   16b3c:	add	r6, sl, #16
   16b40:	ldr	r5, [fp, #8]
   16b44:	ldr	sl, [sp, #24]
   16b48:	mov	r1, r8
   16b4c:	mov	r2, r9
   16b50:	mov	r3, r4
   16b54:	str	r5, [sp]
   16b58:	bl	168d0 <argp_failure@@Base+0xcf8>
   16b5c:	clz	r0, r0
   16b60:	lsr	r4, r0, #5
   16b64:	ldr	r0, [r6], #16
   16b68:	cmp	r0, #0
   16b6c:	bne	16b48 <argp_failure@@Base+0xf70>
   16b70:	b	16b78 <argp_failure@@Base+0xfa0>
   16b74:	ldr	sl, [sp, #24]
   16b78:	cmp	sl, #0
   16b7c:	cmpne	r4, #0
   16b80:	bne	16b94 <argp_failure@@Base+0xfbc>
   16b84:	clz	r0, r4
   16b88:	lsr	r0, r0, #5
   16b8c:	sub	sp, fp, #28
   16b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b94:	ldr	r2, [sp, #20]
   16b98:	ldrb	r1, [r7]
   16b9c:	ldrb	r0, [r2]
   16ba0:	cmp	r1, #0
   16ba4:	beq	16bb8 <argp_failure@@Base+0xfe0>
   16ba8:	add	r0, r0, #1
   16bac:	mov	r4, #0
   16bb0:	strb	r0, [r2]
   16bb4:	b	16b84 <argp_failure@@Base+0xfac>
   16bb8:	cmp	r0, #0
   16bbc:	movne	r0, #0
   16bc0:	strbne	r0, [r2]
   16bc4:	b	16b84 <argp_failure@@Base+0xfac>
   16bc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16bcc:	add	fp, sp, #28
   16bd0:	sub	sp, sp, #28
   16bd4:	ldr	r5, [r0, #12]
   16bd8:	mov	r4, r0
   16bdc:	ldr	r0, [r0, #16]
   16be0:	mov	sl, #0
   16be4:	str	r3, [sp, #24]
   16be8:	str	r1, [sp, #20]
   16bec:	str	r2, [sp, #16]
   16bf0:	cmp	r5, #0
   16bf4:	str	r0, [sp, #8]
   16bf8:	beq	16c38 <argp_failure@@Base+0x1060>
   16bfc:	mov	r0, r5
   16c00:	mov	r1, #11
   16c04:	mov	r6, r2
   16c08:	bl	11620 <strchr@plt>
   16c0c:	cmp	r0, #0
   16c10:	mov	r8, r0
   16c14:	mov	r9, r0
   16c18:	subne	r8, r8, r5
   16c1c:	cmp	r6, #0
   16c20:	movne	r8, #0
   16c24:	cmp	r0, #0
   16c28:	addne	r9, r9, #1
   16c2c:	cmp	r6, #0
   16c30:	moveq	r9, r5
   16c34:	b	16c40 <argp_failure@@Base+0x1068>
   16c38:	mov	r8, #0
   16c3c:	mov	r9, #0
   16c40:	ldr	r0, [r4, #20]
   16c44:	movw	r5, #1
   16c48:	str	r4, [sp, #12]
   16c4c:	movt	r5, #512	; 0x200
   16c50:	cmp	r0, #0
   16c54:	beq	16d50 <argp_failure@@Base+0x1178>
   16c58:	cmp	r8, #0
   16c5c:	beq	16c70 <argp_failure@@Base+0x1098>
   16c60:	mov	r0, r9
   16c64:	mov	r1, r8
   16c68:	bl	114c4 <strndup@plt>
   16c6c:	mov	r9, r0
   16c70:	ldr	r1, [sp, #20]
   16c74:	mov	r0, r4
   16c78:	bl	18708 <argp_parse@@Base+0xc68>
   16c7c:	mov	sl, r0
   16c80:	ldr	r0, [sp, #16]
   16c84:	ldr	r3, [r4, #20]
   16c88:	mov	r1, r9
   16c8c:	mov	r2, sl
   16c90:	cmp	r0, #0
   16c94:	mov	r0, r5
   16c98:	addne	r0, r0, #1
   16c9c:	blx	r3
   16ca0:	mov	r6, r0
   16ca4:	cmp	r6, #0
   16ca8:	beq	16d5c <argp_failure@@Base+0x1184>
   16cac:	ldr	r0, [sp, #24]
   16cb0:	cmp	r0, #0
   16cb4:	beq	16cf4 <argp_failure@@Base+0x111c>
   16cb8:	ldr	r0, [fp, #12]
   16cbc:	ldr	r2, [r0, #28]
   16cc0:	ldr	r1, [r0, #32]
   16cc4:	cmp	r2, r1
   16cc8:	bcc	16ce4 <argp_failure@@Base+0x110c>
   16ccc:	mov	r1, #1
   16cd0:	bl	1a14c <argp_parse@@Base+0x26ac>
   16cd4:	cmp	r0, #0
   16cd8:	beq	16cf4 <argp_failure@@Base+0x111c>
   16cdc:	ldr	r0, [fp, #12]
   16ce0:	ldr	r2, [r0, #28]
   16ce4:	add	r1, r2, #1
   16ce8:	str	r1, [r0, #28]
   16cec:	mov	r1, #10
   16cf0:	strb	r1, [r2]
   16cf4:	cmp	r8, #0
   16cf8:	beq	16d68 <argp_failure@@Base+0x1190>
   16cfc:	cmp	r6, r9
   16d00:	bne	16d68 <argp_failure@@Base+0x1190>
   16d04:	ldr	r4, [fp, #12]
   16d08:	mov	r7, r5
   16d0c:	ldr	r0, [r4, #28]
   16d10:	ldr	r1, [r4, #32]
   16d14:	add	r2, r0, r8
   16d18:	cmp	r2, r1
   16d1c:	bls	16d38 <argp_failure@@Base+0x1160>
   16d20:	mov	r0, r4
   16d24:	mov	r1, r8
   16d28:	bl	1a14c <argp_parse@@Base+0x26ac>
   16d2c:	cmp	r0, #0
   16d30:	beq	16dc8 <argp_failure@@Base+0x11f0>
   16d34:	ldr	r0, [r4, #28]
   16d38:	mov	r1, r9
   16d3c:	mov	r2, r8
   16d40:	bl	114d0 <memcpy@plt>
   16d44:	ldr	r0, [r4, #28]
   16d48:	add	r0, r0, r8
   16d4c:	b	16dc4 <argp_failure@@Base+0x11ec>
   16d50:	mov	r6, r9
   16d54:	cmp	r6, #0
   16d58:	bne	16cac <argp_failure@@Base+0x10d4>
   16d5c:	mov	r4, sl
   16d60:	mov	sl, #0
   16d64:	b	16e50 <argp_failure@@Base+0x1278>
   16d68:	mov	r0, r6
   16d6c:	mov	r7, r5
   16d70:	bl	11614 <strlen@plt>
   16d74:	ldr	r4, [fp, #12]
   16d78:	cmp	r0, #0
   16d7c:	beq	16dc8 <argp_failure@@Base+0x11f0>
   16d80:	mov	r5, r0
   16d84:	ldr	r0, [r4, #28]
   16d88:	ldr	r1, [r4, #32]
   16d8c:	add	r2, r0, r5
   16d90:	cmp	r2, r1
   16d94:	bls	16db0 <argp_failure@@Base+0x11d8>
   16d98:	mov	r0, r4
   16d9c:	mov	r1, r5
   16da0:	bl	1a14c <argp_parse@@Base+0x26ac>
   16da4:	cmp	r0, #0
   16da8:	beq	16dc8 <argp_failure@@Base+0x11f0>
   16dac:	ldr	r0, [r4, #28]
   16db0:	mov	r1, r6
   16db4:	mov	r2, r5
   16db8:	bl	114d0 <memcpy@plt>
   16dbc:	ldr	r0, [r4, #28]
   16dc0:	add	r0, r0, r5
   16dc4:	str	r0, [r4, #28]
   16dc8:	ldr	r1, [r4, #24]
   16dcc:	ldr	r2, [r4, #28]
   16dd0:	ldr	r0, [r4, #16]
   16dd4:	sub	r1, r2, r1
   16dd8:	cmp	r1, r0
   16ddc:	bls	16de8 <argp_failure@@Base+0x1210>
   16de0:	mov	r0, r4
   16de4:	bl	19c1c <argp_parse@@Base+0x217c>
   16de8:	ldr	r1, [r4, #20]
   16dec:	ldr	r0, [r4, #4]
   16df0:	mov	r5, r7
   16df4:	bic	r1, r1, r1, asr #31
   16df8:	cmp	r1, r0
   16dfc:	bls	16e38 <argp_failure@@Base+0x1260>
   16e00:	ldr	r0, [r4, #28]
   16e04:	ldr	r1, [r4, #32]
   16e08:	cmp	r0, r1
   16e0c:	bcc	16e28 <argp_failure@@Base+0x1250>
   16e10:	mov	r0, r4
   16e14:	mov	r1, #1
   16e18:	bl	1a14c <argp_parse@@Base+0x26ac>
   16e1c:	cmp	r0, #0
   16e20:	beq	16e38 <argp_failure@@Base+0x1260>
   16e24:	ldr	r0, [r4, #28]
   16e28:	add	r1, r0, #1
   16e2c:	str	r1, [r4, #28]
   16e30:	mov	r1, #10
   16e34:	strb	r1, [r0]
   16e38:	mov	r4, sl
   16e3c:	mov	sl, #1
   16e40:	cmp	r6, r9
   16e44:	beq	16e50 <argp_failure@@Base+0x1278>
   16e48:	mov	r0, r6
   16e4c:	bl	18d7c <argp_parse@@Base+0x12dc>
   16e50:	cmp	r8, #0
   16e54:	cmpne	r9, #0
   16e58:	bne	1703c <argp_failure@@Base+0x1464>
   16e5c:	ldr	r7, [sp, #16]
   16e60:	ldr	r6, [sp, #24]
   16e64:	ldr	r9, [sp, #20]
   16e68:	ldr	r8, [fp, #12]
   16e6c:	cmp	r7, #0
   16e70:	beq	16fd8 <argp_failure@@Base+0x1400>
   16e74:	ldr	r0, [sp, #12]
   16e78:	ldr	r3, [r0, #20]
   16e7c:	cmp	r3, #0
   16e80:	beq	16fc8 <argp_failure@@Base+0x13f0>
   16e84:	add	r0, r5, #3
   16e88:	mov	r1, #0
   16e8c:	mov	r2, r4
   16e90:	blx	r3
   16e94:	cmp	r0, #0
   16e98:	beq	16fc8 <argp_failure@@Base+0x13f0>
   16e9c:	mov	r4, r0
   16ea0:	orrs	r0, sl, r6
   16ea4:	beq	16ee0 <argp_failure@@Base+0x1308>
   16ea8:	ldr	r0, [r8, #28]
   16eac:	ldr	r1, [r8, #32]
   16eb0:	cmp	r0, r1
   16eb4:	bcc	16ed0 <argp_failure@@Base+0x12f8>
   16eb8:	mov	r0, r8
   16ebc:	mov	r1, #1
   16ec0:	bl	1a14c <argp_parse@@Base+0x26ac>
   16ec4:	cmp	r0, #0
   16ec8:	beq	16ee0 <argp_failure@@Base+0x1308>
   16ecc:	ldr	r0, [r8, #28]
   16ed0:	add	r1, r0, #1
   16ed4:	str	r1, [r8, #28]
   16ed8:	mov	r1, #10
   16edc:	strb	r1, [r0]
   16ee0:	mov	r0, r4
   16ee4:	bl	11614 <strlen@plt>
   16ee8:	cmp	r0, #0
   16eec:	beq	16f38 <argp_failure@@Base+0x1360>
   16ef0:	mov	r5, r0
   16ef4:	ldr	r0, [r8, #28]
   16ef8:	ldr	r1, [r8, #32]
   16efc:	add	r2, r0, r5
   16f00:	cmp	r2, r1
   16f04:	bls	16f20 <argp_failure@@Base+0x1348>
   16f08:	mov	r0, r8
   16f0c:	mov	r1, r5
   16f10:	bl	1a14c <argp_parse@@Base+0x26ac>
   16f14:	cmp	r0, #0
   16f18:	beq	16f38 <argp_failure@@Base+0x1360>
   16f1c:	ldr	r0, [r8, #28]
   16f20:	mov	r1, r4
   16f24:	mov	r2, r5
   16f28:	bl	114d0 <memcpy@plt>
   16f2c:	ldr	r0, [r8, #28]
   16f30:	add	r0, r0, r5
   16f34:	str	r0, [r8, #28]
   16f38:	mov	r0, r4
   16f3c:	bl	18d7c <argp_parse@@Base+0x12dc>
   16f40:	ldr	r1, [r8, #24]
   16f44:	ldr	r2, [r8, #28]
   16f48:	ldr	r0, [r8, #16]
   16f4c:	sub	r1, r2, r1
   16f50:	cmp	r1, r0
   16f54:	bls	16f60 <argp_failure@@Base+0x1388>
   16f58:	mov	r0, r8
   16f5c:	bl	19c1c <argp_parse@@Base+0x217c>
   16f60:	ldr	r1, [r8, #20]
   16f64:	ldr	r0, [r8, #4]
   16f68:	ldr	r4, [sp, #8]
   16f6c:	mov	sl, #1
   16f70:	bic	r1, r1, r1, asr #31
   16f74:	cmp	r1, r0
   16f78:	bls	16fdc <argp_failure@@Base+0x1404>
   16f7c:	ldr	r0, [r8, #28]
   16f80:	ldr	r1, [r8, #32]
   16f84:	cmp	r0, r1
   16f88:	bcc	16fa8 <argp_failure@@Base+0x13d0>
   16f8c:	mov	r0, r8
   16f90:	mov	r1, #1
   16f94:	mov	sl, #1
   16f98:	bl	1a14c <argp_parse@@Base+0x26ac>
   16f9c:	cmp	r0, #0
   16fa0:	beq	16fdc <argp_failure@@Base+0x1404>
   16fa4:	ldr	r0, [r8, #28]
   16fa8:	add	r1, r0, #1
   16fac:	mov	sl, #1
   16fb0:	str	r1, [r8, #28]
   16fb4:	mov	r1, #10
   16fb8:	strb	r1, [r0]
   16fbc:	cmp	r4, #0
   16fc0:	bne	16fe4 <argp_failure@@Base+0x140c>
   16fc4:	b	17030 <argp_failure@@Base+0x1458>
   16fc8:	ldr	r4, [sp, #8]
   16fcc:	cmp	r4, #0
   16fd0:	bne	16fe4 <argp_failure@@Base+0x140c>
   16fd4:	b	17030 <argp_failure@@Base+0x1458>
   16fd8:	ldr	r4, [sp, #8]
   16fdc:	cmp	r4, #0
   16fe0:	beq	17030 <argp_failure@@Base+0x1458>
   16fe4:	ldr	r0, [r4]
   16fe8:	cmp	r0, #0
   16fec:	beq	17030 <argp_failure@@Base+0x1458>
   16ff0:	mov	r1, r4
   16ff4:	ldr	r4, [fp, #8]
   16ff8:	add	r5, r1, #16
   16ffc:	cmp	r4, #0
   17000:	cmpne	sl, #0
   17004:	bne	17030 <argp_failure@@Base+0x1458>
   17008:	orrs	r3, sl, r6
   1700c:	mov	r1, r9
   17010:	mov	r2, r7
   17014:	stm	sp, {r4, r8}
   17018:	movwne	r3, #1
   1701c:	bl	16bc8 <argp_failure@@Base+0xff0>
   17020:	orr	sl, r0, sl
   17024:	ldr	r0, [r5], #16
   17028:	cmp	r0, #0
   1702c:	bne	16ffc <argp_failure@@Base+0x1424>
   17030:	mov	r0, sl
   17034:	sub	sp, fp, #28
   17038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1703c:	ldr	r0, [sp, #12]
   17040:	ldr	r0, [r0, #20]
   17044:	cmp	r0, #0
   17048:	beq	16e5c <argp_failure@@Base+0x1284>
   1704c:	mov	r0, r9
   17050:	bl	18d7c <argp_parse@@Base+0x12dc>
   17054:	b	16e5c <argp_failure@@Base+0x1284>
   17058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1705c:	add	fp, sp, #28
   17060:	sub	sp, sp, #28
   17064:	mov	r7, r0
   17068:	ldr	r0, [r0, #16]
   1706c:	mov	r6, r1
   17070:	cmp	r0, #0
   17074:	beq	17094 <argp_failure@@Base+0x14bc>
   17078:	mov	r2, r0
   1707c:	mov	r1, r2
   17080:	ldr	r2, [r2, #12]
   17084:	cmp	r2, #0
   17088:	bne	1707c <argp_failure@@Base+0x14a4>
   1708c:	add	r2, r1, #8
   17090:	b	17098 <argp_failure@@Base+0x14c0>
   17094:	add	r2, r7, #12
   17098:	ldr	r1, [r6, #16]
   1709c:	ldr	r3, [r2]
   170a0:	cmp	r1, #0
   170a4:	beq	170c4 <argp_failure@@Base+0x14ec>
   170a8:	mov	r2, r1
   170ac:	mov	r5, r2
   170b0:	ldr	r2, [r2, #12]
   170b4:	cmp	r2, #0
   170b8:	bne	170ac <argp_failure@@Base+0x14d4>
   170bc:	add	r2, r5, #8
   170c0:	b	170c8 <argp_failure@@Base+0x14f0>
   170c4:	add	r2, r6, #12
   170c8:	ldr	r5, [r2]
   170cc:	orr	r4, r5, r3
   170d0:	sub	r2, r3, r5
   170d4:	cmn	r4, #1
   170d8:	mov	r4, r2
   170dc:	suble	r4, r5, r3
   170e0:	ands	r3, r5, r3
   170e4:	movmi	r4, r2
   170e8:	cmp	r4, #0
   170ec:	bne	1710c <argp_failure@@Base+0x1534>
   170f0:	cmp	r0, #0
   170f4:	mov	r4, r0
   170f8:	movwne	r4, #1
   170fc:	cmp	r1, #0
   17100:	subne	r4, r4, #1
   17104:	cmp	r4, #0
   17108:	beq	17118 <argp_failure@@Base+0x1540>
   1710c:	mov	r0, r4
   17110:	sub	sp, fp, #28
   17114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17118:	cmp	r0, #0
   1711c:	beq	1718c <argp_failure@@Base+0x15b4>
   17120:	ldr	r3, [r1, #20]
   17124:	ldr	r2, [r0, #20]
   17128:	cmp	r2, r3
   1712c:	ble	17154 <argp_failure@@Base+0x157c>
   17130:	ldr	r0, [r0, #12]
   17134:	ldr	r2, [r0, #20]
   17138:	cmp	r2, r3
   1713c:	bgt	17130 <argp_failure@@Base+0x1558>
   17140:	bl	1757c <argp_failure@@Base+0x19a4>
   17144:	cmp	r0, #0
   17148:	mov	r4, r0
   1714c:	movweq	r4, #1
   17150:	b	1710c <argp_failure@@Base+0x1534>
   17154:	bge	1717c <argp_failure@@Base+0x15a4>
   17158:	ldr	r1, [r1, #12]
   1715c:	ldr	r3, [r1, #20]
   17160:	cmp	r2, r3
   17164:	blt	17158 <argp_failure@@Base+0x1580>
   17168:	bl	1757c <argp_failure@@Base+0x19a4>
   1716c:	cmp	r0, #0
   17170:	mov	r4, r0
   17174:	mvneq	r4, #0
   17178:	b	1710c <argp_failure@@Base+0x1534>
   1717c:	bl	1757c <argp_failure@@Base+0x19a4>
   17180:	mov	r4, r0
   17184:	cmp	r0, #0
   17188:	bne	1710c <argp_failure@@Base+0x1534>
   1718c:	ldr	r0, [r7, #12]
   17190:	ldr	r1, [r6, #12]
   17194:	orr	r2, r1, r0
   17198:	sub	r3, r0, r1
   1719c:	cmn	r2, #1
   171a0:	mov	r4, r3
   171a4:	suble	r4, r1, r0
   171a8:	ands	r0, r1, r0
   171ac:	movmi	r4, r3
   171b0:	cmp	r4, #0
   171b4:	bne	1710c <argp_failure@@Base+0x1534>
   171b8:	ldr	r3, [r7, #4]
   171bc:	mov	sl, #0
   171c0:	cmp	r3, #0
   171c4:	beq	17204 <argp_failure@@Base+0x162c>
   171c8:	ldr	r0, [r7]
   171cc:	mov	r1, r3
   171d0:	add	r0, r0, #12
   171d4:	b	171e4 <argp_failure@@Base+0x160c>
   171d8:	add	r0, r0, #24
   171dc:	subs	r1, r1, #1
   171e0:	beq	17200 <argp_failure@@Base+0x1628>
   171e4:	ldr	sl, [r0, #-12]
   171e8:	cmp	sl, #0
   171ec:	beq	171d8 <argp_failure@@Base+0x1600>
   171f0:	ldrb	r2, [r0]
   171f4:	tst	r2, #2
   171f8:	bne	171d8 <argp_failure@@Base+0x1600>
   171fc:	b	17204 <argp_failure@@Base+0x162c>
   17200:	mov	sl, #0
   17204:	ldr	r8, [r6, #4]
   17208:	cmp	r8, #0
   1720c:	beq	17248 <argp_failure@@Base+0x1670>
   17210:	ldr	r0, [r6]
   17214:	mov	r1, r8
   17218:	add	r0, r0, #12
   1721c:	b	1722c <argp_failure@@Base+0x1654>
   17220:	add	r0, r0, #24
   17224:	subs	r1, r1, #1
   17228:	beq	17248 <argp_failure@@Base+0x1670>
   1722c:	ldr	r5, [r0, #-12]
   17230:	cmp	r5, #0
   17234:	beq	17220 <argp_failure@@Base+0x1648>
   17238:	ldrb	r2, [r0]
   1723c:	tst	r2, #2
   17240:	bne	17220 <argp_failure@@Base+0x1648>
   17244:	b	1724c <argp_failure@@Base+0x1674>
   17248:	mov	r5, #0
   1724c:	ldr	r4, [r7]
   17250:	mov	r9, #0
   17254:	cmp	sl, #0
   17258:	str	r3, [sp, #20]
   1725c:	str	r8, [sp, #16]
   17260:	ldr	r1, [r4, #12]
   17264:	str	r4, [sp, #4]
   17268:	beq	172d0 <argp_failure@@Base+0x16f8>
   1726c:	ands	r0, r1, #8
   17270:	beq	172d0 <argp_failure@@Base+0x16f8>
   17274:	str	r1, [sp, #24]
   17278:	bl	115f0 <__ctype_b_loc@plt>
   1727c:	ldrb	r1, [sl]
   17280:	ldr	r0, [r0]
   17284:	add	r2, r0, r1, lsl #1
   17288:	ldrb	r2, [r2, #1]
   1728c:	tst	r2, #32
   17290:	beq	1729c <argp_failure@@Base+0x16c4>
   17294:	ldrb	r1, [sl, #1]!
   17298:	b	17284 <argp_failure@@Base+0x16ac>
   1729c:	subs	r4, r1, #45	; 0x2d
   172a0:	movwne	r4, #1
   172a4:	cmp	r1, #0
   172a8:	beq	172c8 <argp_failure@@Base+0x16f0>
   172ac:	uxtb	r1, r1
   172b0:	ldrb	r1, [r0, r1, lsl #1]
   172b4:	tst	r1, #8
   172b8:	bne	172c8 <argp_failure@@Base+0x16f0>
   172bc:	ldrb	r1, [sl, #1]!
   172c0:	cmp	r1, #0
   172c4:	bne	172ac <argp_failure@@Base+0x16d4>
   172c8:	ldr	r1, [sp, #24]
   172cc:	b	172d4 <argp_failure@@Base+0x16fc>
   172d0:	mov	r4, #0
   172d4:	ldr	r0, [r6]
   172d8:	cmp	r5, #0
   172dc:	str	r0, [sp, #8]
   172e0:	ldr	r0, [r0, #12]
   172e4:	str	r0, [sp, #12]
   172e8:	andsne	r0, r0, #8
   172ec:	beq	17348 <argp_failure@@Base+0x1770>
   172f0:	mov	r8, r1
   172f4:	bl	115f0 <__ctype_b_loc@plt>
   172f8:	ldrb	r1, [r5]
   172fc:	ldr	r0, [r0]
   17300:	add	r2, r0, r1, lsl #1
   17304:	ldrb	r2, [r2, #1]
   17308:	tst	r2, #32
   1730c:	beq	17318 <argp_failure@@Base+0x1740>
   17310:	ldrb	r1, [r5, #1]!
   17314:	b	17300 <argp_failure@@Base+0x1728>
   17318:	subs	r9, r1, #45	; 0x2d
   1731c:	movwne	r9, #1
   17320:	cmp	r1, #0
   17324:	beq	17344 <argp_failure@@Base+0x176c>
   17328:	uxtb	r1, r1
   1732c:	ldrb	r1, [r0, r1, lsl #1]
   17330:	tst	r1, #8
   17334:	bne	17344 <argp_failure@@Base+0x176c>
   17338:	ldrb	r1, [r5, #1]!
   1733c:	cmp	r1, #0
   17340:	bne	17328 <argp_failure@@Base+0x1750>
   17344:	mov	r1, r8
   17348:	subs	r4, r4, r9
   1734c:	bne	1710c <argp_failure@@Base+0x1534>
   17350:	ldr	r0, [sp, #20]
   17354:	mov	r2, #0
   17358:	cmp	r0, #0
   1735c:	beq	173f4 <argp_failure@@Base+0x181c>
   17360:	sub	r8, r0, #1
   17364:	ldr	r0, [sp, #4]
   17368:	ldr	r4, [r7, #8]
   1736c:	add	r9, r0, #36	; 0x24
   17370:	tst	r1, #8
   17374:	beq	1739c <argp_failure@@Base+0x17c4>
   17378:	mov	r2, #0
   1737c:	cmp	r8, #0
   17380:	beq	173f4 <argp_failure@@Base+0x181c>
   17384:	cmp	r2, #0
   17388:	bne	173f4 <argp_failure@@Base+0x181c>
   1738c:	ldr	r1, [r9], #24
   17390:	sub	r8, r8, #1
   17394:	tst	r1, #8
   17398:	bne	17378 <argp_failure@@Base+0x17a0>
   1739c:	ldr	r7, [r9, #-32]	; 0xffffffe0
   173a0:	sub	r0, r7, #1
   173a4:	cmp	r0, #254	; 0xfe
   173a8:	bhi	17378 <argp_failure@@Base+0x17a0>
   173ac:	str	r1, [sp, #24]
   173b0:	bl	115f0 <__ctype_b_loc@plt>
   173b4:	ldr	r0, [r0]
   173b8:	add	r0, r0, r7, lsl #1
   173bc:	ldrb	r0, [r0, #1]
   173c0:	tst	r0, #64	; 0x40
   173c4:	beq	17378 <argp_failure@@Base+0x17a0>
   173c8:	ldrb	r0, [r4]
   173cc:	mov	r2, r7
   173d0:	cmp	r7, r0
   173d4:	bne	17378 <argp_failure@@Base+0x17a0>
   173d8:	ldr	r0, [sp, #24]
   173dc:	add	r4, r4, #1
   173e0:	tst	r0, #2
   173e4:	mov	r0, #0
   173e8:	movne	r2, r0
   173ec:	cmp	r8, #0
   173f0:	bne	17384 <argp_failure@@Base+0x17ac>
   173f4:	ldr	r3, [sp, #16]
   173f8:	mov	r9, #0
   173fc:	mov	r0, r2
   17400:	str	r2, [sp, #24]
   17404:	cmp	r3, #0
   17408:	beq	174a4 <argp_failure@@Base+0x18cc>
   1740c:	ldr	r0, [sp, #8]
   17410:	ldr	r6, [r6, #8]
   17414:	ldr	r4, [sp, #12]
   17418:	sub	r7, r3, #1
   1741c:	add	r8, r0, #36	; 0x24
   17420:	tst	r4, #8
   17424:	bne	17430 <argp_failure@@Base+0x1858>
   17428:	b	17454 <argp_failure@@Base+0x187c>
   1742c:	ldr	r2, [sp, #24]
   17430:	mov	r9, #0
   17434:	cmp	r7, #0
   17438:	beq	174a4 <argp_failure@@Base+0x18cc>
   1743c:	cmp	r9, #0
   17440:	bne	174a4 <argp_failure@@Base+0x18cc>
   17444:	ldr	r4, [r8], #24
   17448:	sub	r7, r7, #1
   1744c:	tst	r4, #8
   17450:	bne	17430 <argp_failure@@Base+0x1858>
   17454:	ldr	r9, [r8, #-32]	; 0xffffffe0
   17458:	sub	r0, r9, #1
   1745c:	cmp	r0, #254	; 0xfe
   17460:	bhi	17430 <argp_failure@@Base+0x1858>
   17464:	bl	115f0 <__ctype_b_loc@plt>
   17468:	ldr	r0, [r0]
   1746c:	add	r0, r0, r9, lsl #1
   17470:	ldrb	r0, [r0, #1]
   17474:	tst	r0, #64	; 0x40
   17478:	beq	1742c <argp_failure@@Base+0x1854>
   1747c:	ldrb	r0, [r6]
   17480:	ldr	r2, [sp, #24]
   17484:	cmp	r9, r0
   17488:	bne	17430 <argp_failure@@Base+0x1858>
   1748c:	tst	r4, #2
   17490:	mov	r0, #0
   17494:	add	r6, r6, #1
   17498:	movne	r9, r0
   1749c:	cmp	r7, #0
   174a0:	bne	1743c <argp_failure@@Base+0x1864>
   174a4:	tst	r2, #255	; 0xff
   174a8:	mov	r6, r2
   174ac:	bne	174c4 <argp_failure@@Base+0x18ec>
   174b0:	cmp	sl, #0
   174b4:	beq	174c0 <argp_failure@@Base+0x18e8>
   174b8:	ldrb	r6, [sl]
   174bc:	b	174c4 <argp_failure@@Base+0x18ec>
   174c0:	mov	r6, #0
   174c4:	tst	r9, #255	; 0xff
   174c8:	mov	r7, r9
   174cc:	bne	174e4 <argp_failure@@Base+0x190c>
   174d0:	cmp	r5, #0
   174d4:	beq	174e0 <argp_failure@@Base+0x1908>
   174d8:	ldrb	r7, [r5]
   174dc:	b	174e4 <argp_failure@@Base+0x190c>
   174e0:	mov	r7, #0
   174e4:	bl	115d8 <__ctype_tolower_loc@plt>
   174e8:	ldr	r2, [r0]
   174ec:	uxtb	r0, r7
   174f0:	uxtb	r1, r6
   174f4:	ldr	r3, [r2, r0, lsl #2]
   174f8:	ldr	r2, [r2, r1, lsl #2]
   174fc:	subs	r4, r2, r3
   17500:	subseq	r4, r0, r1
   17504:	bne	1710c <argp_failure@@Base+0x1534>
   17508:	ldr	r0, [sp, #24]
   1750c:	uxtb	r4, r0
   17510:	cmp	r4, #0
   17514:	movwne	r4, #1
   17518:	tst	r9, #255	; 0xff
   1751c:	subne	r4, r4, #1
   17520:	cmp	r4, #0
   17524:	bne	1710c <argp_failure@@Base+0x1534>
   17528:	ldr	r0, [sp, #24]
   1752c:	tst	r0, #255	; 0xff
   17530:	beq	1753c <argp_failure@@Base+0x1964>
   17534:	mov	r4, #0
   17538:	b	1710c <argp_failure@@Base+0x1534>
   1753c:	cmp	sl, #0
   17540:	mov	r4, sl
   17544:	movwne	r4, #1
   17548:	cmp	r5, #0
   1754c:	subne	r4, r4, #1
   17550:	cmp	r4, #0
   17554:	bne	1710c <argp_failure@@Base+0x1534>
   17558:	cmp	sl, #0
   1755c:	beq	17534 <argp_failure@@Base+0x195c>
   17560:	mov	r0, sl
   17564:	mov	r1, r5
   17568:	bl	11524 <strcasecmp@plt>
   1756c:	cmp	r0, #0
   17570:	mov	r4, r0
   17574:	moveq	r4, #0
   17578:	b	1710c <argp_failure@@Base+0x1534>
   1757c:	push	{r4, r5, fp, lr}
   17580:	add	fp, sp, #8
   17584:	mov	r4, r1
   17588:	mov	r5, r0
   1758c:	ldr	r1, [r1, #12]
   17590:	ldr	r0, [r0, #12]
   17594:	cmp	r0, r1
   17598:	beq	175ac <argp_failure@@Base+0x19d4>
   1759c:	bl	1757c <argp_failure@@Base+0x19a4>
   175a0:	cmp	r0, #0
   175a4:	beq	175ac <argp_failure@@Base+0x19d4>
   175a8:	pop	{r4, r5, fp, pc}
   175ac:	ldr	r1, [r5, #8]
   175b0:	ldr	r2, [r4, #8]
   175b4:	orr	r0, r2, r1
   175b8:	sub	r3, r1, r2
   175bc:	cmn	r0, #1
   175c0:	mov	r0, r3
   175c4:	suble	r0, r2, r1
   175c8:	ands	r1, r2, r1
   175cc:	movmi	r0, r3
   175d0:	cmp	r0, #0
   175d4:	popne	{r4, r5, fp, pc}
   175d8:	ldr	r0, [r5, #4]
   175dc:	ldr	r1, [r4, #4]
   175e0:	sub	r0, r1, r0
   175e4:	pop	{r4, r5, fp, pc}
   175e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   175ec:	add	fp, sp, #24
   175f0:	mov	r4, r0
   175f4:	ldr	r0, [r1, #12]
   175f8:	mov	r5, r1
   175fc:	cmp	r0, #0
   17600:	beq	1767c <argp_failure@@Base+0x1aa4>
   17604:	ldr	r1, [r5, #8]
   17608:	ldr	r0, [r5]
   1760c:	ldr	r6, [r1]
   17610:	ldr	r7, [r0, #16]
   17614:	cmp	r6, #0
   17618:	ldrne	r1, [r1, #4]
   1761c:	cmpne	r1, #0
   17620:	bne	176c4 <argp_failure@@Base+0x1aec>
   17624:	cmp	r7, #0
   17628:	beq	17764 <argp_failure@@Base+0x1b8c>
   1762c:	ldr	r0, [r7]
   17630:	cmp	r0, #0
   17634:	beq	17764 <argp_failure@@Base+0x1b8c>
   17638:	ldrb	r1, [r0]
   1763c:	cmp	r1, #0
   17640:	beq	17764 <argp_failure@@Base+0x1b8c>
   17644:	cmp	r6, #0
   17648:	beq	17728 <argp_failure@@Base+0x1b50>
   1764c:	ldr	r1, [r6, #16]
   17650:	cmp	r1, r7
   17654:	beq	17764 <argp_failure@@Base+0x1b8c>
   17658:	cmp	r1, #0
   1765c:	beq	1771c <argp_failure@@Base+0x1b44>
   17660:	ldr	r1, [r1, #12]
   17664:	cmp	r1, r7
   17668:	cmpne	r1, #0
   1766c:	bne	17660 <argp_failure@@Base+0x1a88>
   17670:	cmp	r1, r7
   17674:	bne	17728 <argp_failure@@Base+0x1b50>
   17678:	b	17764 <argp_failure@@Base+0x1b8c>
   1767c:	ldr	r6, [r5, #4]
   17680:	ldr	r0, [r6, #28]
   17684:	ldr	r1, [r6, #32]
   17688:	add	r2, r0, #2
   1768c:	cmp	r2, r1
   17690:	bls	176ac <argp_failure@@Base+0x1ad4>
   17694:	mov	r0, r6
   17698:	mov	r1, #2
   1769c:	bl	1a14c <argp_parse@@Base+0x26ac>
   176a0:	cmp	r0, #0
   176a4:	beq	1776c <argp_failure@@Base+0x1b94>
   176a8:	ldr	r0, [r6, #28]
   176ac:	movw	r1, #8236	; 0x202c
   176b0:	strh	r1, [r0]
   176b4:	ldr	r0, [r6, #28]
   176b8:	add	r0, r0, #2
   176bc:	str	r0, [r6, #28]
   176c0:	b	1776c <argp_failure@@Base+0x1b94>
   176c4:	ldr	r1, [r6, #12]
   176c8:	ldr	r0, [r0, #12]
   176cc:	cmp	r0, r1
   176d0:	beq	17624 <argp_failure@@Base+0x1a4c>
   176d4:	ldr	r8, [r5, #4]
   176d8:	ldr	r0, [r8, #28]
   176dc:	ldr	r1, [r8, #32]
   176e0:	cmp	r0, r1
   176e4:	bcc	17700 <argp_failure@@Base+0x1b28>
   176e8:	mov	r0, r8
   176ec:	mov	r1, #1
   176f0:	bl	1a14c <argp_parse@@Base+0x26ac>
   176f4:	cmp	r0, #0
   176f8:	beq	17624 <argp_failure@@Base+0x1a4c>
   176fc:	ldr	r0, [r8, #28]
   17700:	add	r1, r0, #1
   17704:	str	r1, [r8, #28]
   17708:	mov	r1, #10
   1770c:	strb	r1, [r0]
   17710:	cmp	r7, #0
   17714:	bne	1762c <argp_failure@@Base+0x1a54>
   17718:	b	17764 <argp_failure@@Base+0x1b8c>
   1771c:	mov	r1, #0
   17720:	cmp	r1, r7
   17724:	beq	17764 <argp_failure@@Base+0x1b8c>
   17728:	ldr	r1, [r5, #4]
   1772c:	mov	r2, r5
   17730:	ldr	r8, [r1, #12]
   17734:	ldr	r1, [r7, #16]
   17738:	bl	177f4 <argp_failure@@Base+0x1c1c>
   1773c:	ldr	r6, [r5, #4]
   17740:	ldr	r1, [r6, #24]
   17744:	ldr	r2, [r6, #28]
   17748:	ldr	r0, [r6, #16]
   1774c:	sub	r1, r2, r1
   17750:	cmp	r1, r0
   17754:	bls	17760 <argp_failure@@Base+0x1b88>
   17758:	mov	r0, r6
   1775c:	bl	19c1c <argp_parse@@Base+0x217c>
   17760:	str	r8, [r6, #12]
   17764:	mov	r0, #0
   17768:	str	r0, [r5, #12]
   1776c:	ldr	r5, [r5, #4]
   17770:	ldr	r1, [r5, #24]
   17774:	ldr	r2, [r5, #28]
   17778:	ldr	r0, [r5, #16]
   1777c:	sub	r1, r2, r1
   17780:	cmp	r1, r0
   17784:	bls	17790 <argp_failure@@Base+0x1bb8>
   17788:	mov	r0, r5
   1778c:	bl	19c1c <argp_parse@@Base+0x217c>
   17790:	ldr	r0, [r5, #20]
   17794:	cmp	r0, #0
   17798:	subgt	r4, r4, r0
   1779c:	cmp	r4, #1
   177a0:	blt	177f0 <argp_failure@@Base+0x1c18>
   177a4:	mov	r6, #32
   177a8:	b	177c0 <argp_failure@@Base+0x1be8>
   177ac:	add	r1, r0, #1
   177b0:	str	r1, [r5, #28]
   177b4:	strb	r6, [r0]
   177b8:	cmp	r4, #0
   177bc:	ble	177f0 <argp_failure@@Base+0x1c18>
   177c0:	ldr	r0, [r5, #28]
   177c4:	ldr	r1, [r5, #32]
   177c8:	sub	r4, r4, #1
   177cc:	cmp	r0, r1
   177d0:	bcc	177ac <argp_failure@@Base+0x1bd4>
   177d4:	mov	r0, r5
   177d8:	mov	r1, #1
   177dc:	bl	1a14c <argp_parse@@Base+0x26ac>
   177e0:	cmp	r0, #0
   177e4:	beq	177b8 <argp_failure@@Base+0x1be0>
   177e8:	ldr	r0, [r5, #28]
   177ec:	b	177ac <argp_failure@@Base+0x1bd4>
   177f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   177f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   177f8:	add	fp, sp, #28
   177fc:	sub	sp, sp, #4
   17800:	mov	r9, r2
   17804:	mov	r8, r0
   17808:	cmp	r1, #0
   1780c:	mov	r6, r0
   17810:	beq	17850 <argp_failure@@Base+0x1c78>
   17814:	ldr	r0, [r1, #20]
   17818:	mov	r4, r1
   1781c:	mov	r6, r8
   17820:	cmp	r0, #0
   17824:	beq	17850 <argp_failure@@Base+0x1c78>
   17828:	ldr	r1, [r9, #16]
   1782c:	mov	r0, r4
   17830:	bl	18708 <argp_parse@@Base+0xc68>
   17834:	ldr	r3, [r4, #20]
   17838:	mov	r2, r0
   1783c:	movw	r0, #3
   17840:	mov	r1, r8
   17844:	movt	r0, #512	; 0x200
   17848:	blx	r3
   1784c:	mov	r6, r0
   17850:	cmp	r6, #0
   17854:	beq	17a80 <argp_failure@@Base+0x1ea8>
   17858:	ldrb	r0, [r6]
   1785c:	cmp	r0, #0
   17860:	beq	17a74 <argp_failure@@Base+0x1e9c>
   17864:	ldr	r0, [r9, #8]
   17868:	ldr	r0, [r0]
   1786c:	cmp	r0, #0
   17870:	beq	178b0 <argp_failure@@Base+0x1cd8>
   17874:	ldr	r4, [r9, #4]
   17878:	ldr	r0, [r4, #28]
   1787c:	ldr	r1, [r4, #32]
   17880:	cmp	r0, r1
   17884:	bcc	178a0 <argp_failure@@Base+0x1cc8>
   17888:	mov	r0, r4
   1788c:	mov	r1, #1
   17890:	bl	1a14c <argp_parse@@Base+0x26ac>
   17894:	cmp	r0, #0
   17898:	beq	178b0 <argp_failure@@Base+0x1cd8>
   1789c:	ldr	r0, [r4, #28]
   178a0:	add	r1, r0, #1
   178a4:	str	r1, [r4, #28]
   178a8:	mov	r1, #10
   178ac:	strb	r1, [r0]
   178b0:	ldr	r7, [r9, #4]
   178b4:	movw	sl, #54264	; 0xd3f8
   178b8:	movt	sl, #2
   178bc:	ldr	r4, [sl, #24]
   178c0:	ldr	r1, [r7, #24]
   178c4:	ldr	r2, [r7, #28]
   178c8:	ldr	r0, [r7, #16]
   178cc:	sub	r1, r2, r1
   178d0:	cmp	r1, r0
   178d4:	bls	178e0 <argp_failure@@Base+0x1d08>
   178d8:	mov	r0, r7
   178dc:	bl	19c1c <argp_parse@@Base+0x217c>
   178e0:	ldr	r0, [r7, #20]
   178e4:	cmp	r0, #0
   178e8:	subgt	r4, r4, r0
   178ec:	cmp	r4, #1
   178f0:	blt	17940 <argp_failure@@Base+0x1d68>
   178f4:	mov	r5, #32
   178f8:	b	17910 <argp_failure@@Base+0x1d38>
   178fc:	add	r1, r0, #1
   17900:	str	r1, [r7, #28]
   17904:	strb	r5, [r0]
   17908:	cmp	r4, #0
   1790c:	ble	17940 <argp_failure@@Base+0x1d68>
   17910:	ldr	r0, [r7, #28]
   17914:	ldr	r1, [r7, #32]
   17918:	sub	r4, r4, #1
   1791c:	cmp	r0, r1
   17920:	bcc	178fc <argp_failure@@Base+0x1d24>
   17924:	mov	r0, r7
   17928:	mov	r1, #1
   1792c:	bl	1a14c <argp_parse@@Base+0x26ac>
   17930:	cmp	r0, #0
   17934:	beq	17908 <argp_failure@@Base+0x1d30>
   17938:	ldr	r0, [r7, #28]
   1793c:	b	178fc <argp_failure@@Base+0x1d24>
   17940:	ldr	r4, [r9, #4]
   17944:	ldr	r5, [sl, #24]
   17948:	ldr	r1, [r4, #24]
   1794c:	ldr	r2, [r4, #28]
   17950:	ldr	r0, [r4, #16]
   17954:	mov	r7, r4
   17958:	sub	r1, r2, r1
   1795c:	mov	r2, sl
   17960:	mov	sl, r5
   17964:	cmp	r1, r0
   17968:	bls	17990 <argp_failure@@Base+0x1db8>
   1796c:	mov	r0, r4
   17970:	mov	r7, r2
   17974:	bl	19c1c <argp_parse@@Base+0x217c>
   17978:	ldr	sl, [r7, #24]
   1797c:	ldr	r7, [r9, #4]
   17980:	ldr	r1, [r7, #24]
   17984:	ldr	r2, [r7, #28]
   17988:	ldr	r0, [r7, #16]
   1798c:	sub	r1, r2, r1
   17990:	str	r5, [r4, #4]
   17994:	cmp	r1, r0
   17998:	mov	r5, r7
   1799c:	bls	179ac <argp_failure@@Base+0x1dd4>
   179a0:	mov	r0, r7
   179a4:	bl	19c1c <argp_parse@@Base+0x217c>
   179a8:	ldr	r5, [r9, #4]
   179ac:	mov	r0, r6
   179b0:	str	sl, [r7, #12]
   179b4:	bl	11614 <strlen@plt>
   179b8:	cmp	r0, #0
   179bc:	beq	17a08 <argp_failure@@Base+0x1e30>
   179c0:	mov	r4, r0
   179c4:	ldr	r0, [r5, #28]
   179c8:	ldr	r1, [r5, #32]
   179cc:	add	r2, r0, r4
   179d0:	cmp	r2, r1
   179d4:	bls	179f0 <argp_failure@@Base+0x1e18>
   179d8:	mov	r0, r5
   179dc:	mov	r1, r4
   179e0:	bl	1a14c <argp_parse@@Base+0x26ac>
   179e4:	cmp	r0, #0
   179e8:	beq	17a08 <argp_failure@@Base+0x1e30>
   179ec:	ldr	r0, [r5, #28]
   179f0:	mov	r1, r6
   179f4:	mov	r2, r4
   179f8:	bl	114d0 <memcpy@plt>
   179fc:	ldr	r0, [r5, #28]
   17a00:	add	r0, r0, r4
   17a04:	str	r0, [r5, #28]
   17a08:	ldr	r5, [r9, #4]
   17a0c:	ldr	r2, [r5, #24]
   17a10:	ldr	r0, [r5, #28]
   17a14:	ldr	r1, [r5, #16]
   17a18:	mov	r4, r5
   17a1c:	sub	r2, r0, r2
   17a20:	cmp	r2, r1
   17a24:	bls	17a38 <argp_failure@@Base+0x1e60>
   17a28:	mov	r0, r5
   17a2c:	bl	19c1c <argp_parse@@Base+0x217c>
   17a30:	ldr	r4, [r9, #4]
   17a34:	ldr	r0, [r4, #28]
   17a38:	mov	r1, #0
   17a3c:	str	r1, [r5, #4]
   17a40:	ldr	r1, [r4, #32]
   17a44:	cmp	r0, r1
   17a48:	bcc	17a64 <argp_failure@@Base+0x1e8c>
   17a4c:	mov	r0, r4
   17a50:	mov	r1, #1
   17a54:	bl	1a14c <argp_parse@@Base+0x26ac>
   17a58:	cmp	r0, #0
   17a5c:	beq	17a74 <argp_failure@@Base+0x1e9c>
   17a60:	ldr	r0, [r4, #28]
   17a64:	add	r1, r0, #1
   17a68:	str	r1, [r4, #28]
   17a6c:	mov	r1, #10
   17a70:	strb	r1, [r0]
   17a74:	ldr	r0, [r9, #8]
   17a78:	mov	r1, #1
   17a7c:	str	r1, [r0, #4]
   17a80:	cmp	r6, r8
   17a84:	beq	17a98 <argp_failure@@Base+0x1ec0>
   17a88:	mov	r0, r6
   17a8c:	sub	sp, fp, #28
   17a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a94:	b	18d7c <argp_parse@@Base+0x12dc>
   17a98:	sub	sp, fp, #28
   17a9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017aa0 <argp_parse@@Base>:
   17aa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17aa4:	add	fp, sp, #28
   17aa8:	sub	sp, sp, #212	; 0xd4
   17aac:	mov	r4, r3
   17ab0:	mov	r6, r2
   17ab4:	mov	r7, r1
   17ab8:	mov	r5, r0
   17abc:	tst	r3, #1
   17ac0:	bne	17b00 <argp_parse@@Base+0x60>
   17ac4:	movw	r0, #54332	; 0xd43c
   17ac8:	movt	r0, #2
   17acc:	ldr	r1, [r0]
   17ad0:	cmp	r1, #0
   17ad4:	bne	17ae0 <argp_parse@@Base+0x40>
   17ad8:	ldr	r1, [r6]
   17adc:	str	r1, [r0]
   17ae0:	movw	r8, #54328	; 0xd438
   17ae4:	movt	r8, #2
   17ae8:	ldr	r0, [r8]
   17aec:	cmp	r0, #0
   17af0:	bne	17b00 <argp_parse@@Base+0x60>
   17af4:	ldr	r0, [r6]
   17af8:	bl	18cf8 <argp_parse@@Base+0x1258>
   17afc:	str	r0, [r8]
   17b00:	tst	r4, #16
   17b04:	str	r6, [fp, #-228]	; 0xffffff1c
   17b08:	str	r7, [fp, #-232]	; 0xffffff18
   17b0c:	bne	17bbc <argp_parse@@Base+0x11c>
   17b10:	mov	r1, sp
   17b14:	sub	r3, r1, #64	; 0x40
   17b18:	mov	sp, r3
   17b1c:	mov	r2, sp
   17b20:	sub	r0, r2, #32
   17b24:	mov	sp, r0
   17b28:	vmov.i32	q8, #0	; 0x00000000
   17b2c:	sub	r2, r2, #20
   17b30:	cmp	r5, #0
   17b34:	vst1.32	{d16-d17}, [r2]
   17b38:	mov	r2, r0
   17b3c:	vst1.64	{d16-d17}, [r2]!
   17b40:	str	r3, [r2]
   17b44:	sub	r2, r1, #32
   17b48:	sub	r1, r1, #48	; 0x30
   17b4c:	vst1.64	{d16-d17}, [r2]
   17b50:	vst1.64	{d16-d17}, [r1]
   17b54:	mov	r1, #48	; 0x30
   17b58:	mov	r2, r3
   17b5c:	vst1.64	{d16-d17}, [r2], r1
   17b60:	vst1.64	{d16-d17}, [r2]
   17b64:	movw	r2, #49336	; 0xc0b8
   17b68:	strne	r5, [r3], #16
   17b6c:	movt	r2, #1
   17b70:	mov	r1, r3
   17b74:	str	r2, [r1], #16
   17b78:	movw	r2, #57272	; 0xdfb8
   17b7c:	movt	r2, #2
   17b80:	ldr	r2, [r2]
   17b84:	cmp	r2, #0
   17b88:	bne	17ba0 <argp_parse@@Base+0x100>
   17b8c:	movw	r2, #54528	; 0xd500
   17b90:	movt	r2, #2
   17b94:	ldr	r2, [r2]
   17b98:	cmp	r2, #0
   17b9c:	beq	17bb0 <argp_parse@@Base+0x110>
   17ba0:	movw	r2, #49364	; 0xc0d4
   17ba4:	mov	r3, r1
   17ba8:	movt	r2, #1
   17bac:	str	r2, [r1]
   17bb0:	mov	r1, #0
   17bb4:	str	r1, [r3, #16]
   17bb8:	b	17bc0 <argp_parse@@Base+0x120>
   17bbc:	mov	r0, r5
   17bc0:	vmov.i32	q8, #0	; 0x00000000
   17bc4:	sub	r9, fp, #96	; 0x60
   17bc8:	mov	r7, #12
   17bcc:	mov	r5, #0
   17bd0:	cmp	r0, #0
   17bd4:	str	r4, [fp, #-224]	; 0xffffff20
   17bd8:	str	r0, [fp, #-236]	; 0xffffff14
   17bdc:	mov	r1, r9
   17be0:	str	r5, [fp, #-52]	; 0xffffffcc
   17be4:	str	r5, [fp, #-56]	; 0xffffffc8
   17be8:	str	r5, [fp, #-60]	; 0xffffffc4
   17bec:	vst1.64	{d16-d17}, [r1], r7
   17bf0:	vst1.32	{d16-d17}, [r1]
   17bf4:	mov	r1, #1
   17bf8:	bic	r3, r1, r4, lsr #2
   17bfc:	str	r3, [fp, #-64]	; 0xffffffc0
   17c00:	beq	17c38 <argp_parse@@Base+0x198>
   17c04:	sub	r1, fp, #64	; 0x40
   17c08:	bl	188f0 <argp_parse@@Base+0xe50>
   17c0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17c10:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17c14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17c18:	mov	r6, #16
   17c1c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17c20:	add	r2, r2, r2, lsl #3
   17c24:	add	r1, r6, r1, lsl #4
   17c28:	mov	r6, #36	; 0x24
   17c2c:	lsl	r5, r0, #2
   17c30:	add	r8, r6, r2, lsl #2
   17c34:	b	17c40 <argp_parse@@Base+0x1a0>
   17c38:	mov	r8, #36	; 0x24
   17c3c:	mov	r1, #16
   17c40:	add	r4, r8, r5
   17c44:	add	sl, r4, r1
   17c48:	add	r0, r3, sl
   17c4c:	add	r0, r0, #1
   17c50:	bl	19acc <argp_parse@@Base+0x202c>
   17c54:	cmp	r0, #0
   17c58:	str	r0, [fp, #-100]	; 0xffffff9c
   17c5c:	beq	18690 <argp_parse@@Base+0xbf0>
   17c60:	mov	r6, r0
   17c64:	mov	r0, #12
   17c68:	sub	r1, fp, #220	; 0xdc
   17c6c:	mov	r2, r5
   17c70:	vld1.64	{d16-d17}, [r9], r0
   17c74:	add	r0, r1, #20
   17c78:	add	r7, r6, r8
   17c7c:	add	r8, r6, r4
   17c80:	add	r4, r6, sl
   17c84:	vld1.32	{d18-d19}, [r9]
   17c88:	mov	r9, r1
   17c8c:	vst1.32	{d16-d17}, [r0]
   17c90:	add	r0, r1, #32
   17c94:	mov	r1, #0
   17c98:	vst1.32	{d18-d19}, [r0]
   17c9c:	mov	r0, #1
   17ca0:	str	r6, [fp, #-172]	; 0xffffff54
   17ca4:	str	r0, [fp, #-204]	; 0xffffff34
   17ca8:	str	r0, [fp, #-208]	; 0xffffff30
   17cac:	mov	r0, r7
   17cb0:	str	r7, [fp, #-164]	; 0xffffff5c
   17cb4:	str	r8, [fp, #-212]	; 0xffffff2c
   17cb8:	str	r4, [fp, #-216]	; 0xffffff28
   17cbc:	bl	11668 <memset@plt>
   17cc0:	ldr	sl, [fp, #-224]	; 0xffffff20
   17cc4:	mov	r0, #45	; 0x2d
   17cc8:	str	r7, [fp, #-36]	; 0xffffffdc
   17ccc:	str	r8, [fp, #-40]	; 0xffffffd8
   17cd0:	str	r4, [fp, #-44]	; 0xffffffd4
   17cd4:	str	r9, [fp, #-48]	; 0xffffffd0
   17cd8:	tst	sl, #8
   17cdc:	moveq	r0, #43	; 0x2b
   17ce0:	tsteq	sl, #4
   17ce4:	beq	182e0 <argp_parse@@Base+0x840>
   17ce8:	add	r1, r4, #1
   17cec:	strb	r0, [r4]
   17cf0:	str	r1, [fp, #-44]	; 0xffffffd4
   17cf4:	ldr	r0, [fp, #-236]	; 0xffffff14
   17cf8:	ldr	r5, [fp, #-228]	; 0xffffff1c
   17cfc:	ldr	r9, [fp, #-232]	; 0xffffff18
   17d00:	mov	r3, #0
   17d04:	strb	r3, [r1]
   17d08:	str	r3, [r8]
   17d0c:	cmp	r0, #0
   17d10:	str	r0, [fp, #-220]	; 0xffffff24
   17d14:	beq	17d4c <argp_parse@@Base+0x2ac>
   17d18:	sub	sp, sp, #8
   17d1c:	sub	r1, fp, #48	; 0x30
   17d20:	mov	r2, #0
   17d24:	mov	r3, r6
   17d28:	str	r1, [sp]
   17d2c:	mov	r1, #0
   17d30:	bl	189d0 <argp_parse@@Base+0xf30>
   17d34:	add	sp, sp, #8
   17d38:	str	r0, [fp, #-168]	; 0xffffff58
   17d3c:	mov	r6, r0
   17d40:	ldr	r3, [fp, #-220]	; 0xffffff24
   17d44:	ldr	r4, [fp, #-172]	; 0xffffff54
   17d48:	b	17d54 <argp_parse@@Base+0x2b4>
   17d4c:	mov	r4, r6
   17d50:	str	r6, [fp, #-168]	; 0xffffff58
   17d54:	vmov.i32	q8, #0	; 0x00000000
   17d58:	sub	r1, fp, #220	; 0xdc
   17d5c:	mov	r7, #0
   17d60:	mov	r0, #1
   17d64:	mov	r8, r5
   17d68:	cmp	r4, r6
   17d6c:	mov	r2, r1
   17d70:	add	r1, r1, #84	; 0x54
   17d74:	str	r7, [fp, #-116]	; 0xffffff8c
   17d78:	str	r7, [fp, #-120]	; 0xffffff88
   17d7c:	vst1.32	{d16-d17}, [r1]
   17d80:	str	sl, [fp, #-140]	; 0xffffff74
   17d84:	str	r5, [fp, #-148]	; 0xffffff6c
   17d88:	str	r9, [fp, #-152]	; 0xffffff68
   17d8c:	str	r3, [fp, #-156]	; 0xffffff64
   17d90:	str	r2, [fp, #-104]	; 0xffffff98
   17d94:	str	r7, [fp, #-144]	; 0xffffff70
   17d98:	str	r0, [fp, #-160]	; 0xffffff60
   17d9c:	movw	r0, #54336	; 0xd440
   17da0:	add	sl, r2, #64	; 0x40
   17da4:	movt	r0, #2
   17da8:	ldr	r0, [r0]
   17dac:	str	r0, [fp, #-112]	; 0xffffff90
   17db0:	movw	r0, #54348	; 0xd44c
   17db4:	movt	r0, #2
   17db8:	ldr	r0, [r0]
   17dbc:	str	r0, [fp, #-108]	; 0xffffff94
   17dc0:	bcs	17ea0 <argp_parse@@Base+0x400>
   17dc4:	ldr	r0, [fp, #12]
   17dc8:	str	r0, [r4, #24]
   17dcc:	b	17e24 <argp_parse@@Base+0x384>
   17dd0:	ldr	r0, [r4, #32]
   17dd4:	mov	r1, #0
   17dd8:	mov	r2, sl
   17ddc:	str	r0, [fp, #-120]	; 0xffffff88
   17de0:	ldr	r0, [r4, #24]
   17de4:	str	r0, [fp, #-128]	; 0xffffff80
   17de8:	ldr	r0, [r4, #28]
   17dec:	str	r0, [fp, #-124]	; 0xffffff84
   17df0:	ldr	r0, [r4, #12]
   17df4:	str	r0, [fp, #-136]	; 0xffffff78
   17df8:	movw	r0, #6
   17dfc:	movt	r0, #256	; 0x100
   17e00:	sub	r0, r0, #3
   17e04:	blx	r3
   17e08:	mov	r7, r0
   17e0c:	ldr	r0, [fp, #-120]	; 0xffffff88
   17e10:	str	r0, [r4, #32]
   17e14:	ldr	r0, [fp, #-168]	; 0xffffff58
   17e18:	add	r4, r4, #36	; 0x24
   17e1c:	cmp	r4, r0
   17e20:	bcs	17e94 <argp_parse@@Base+0x3f4>
   17e24:	cmp	r7, #7
   17e28:	cmpne	r7, #0
   17e2c:	bne	18690 <argp_parse@@Base+0xbf0>
   17e30:	ldr	r0, [r4, #16]
   17e34:	cmp	r0, #0
   17e38:	beq	17e4c <argp_parse@@Base+0x3ac>
   17e3c:	ldr	r1, [r4, #20]
   17e40:	ldr	r0, [r0, #28]
   17e44:	ldr	r0, [r0, r1, lsl #2]
   17e48:	str	r0, [r4, #24]
   17e4c:	ldr	r3, [r4]
   17e50:	cmp	r3, #0
   17e54:	bne	17dd0 <argp_parse@@Base+0x330>
   17e58:	ldr	r0, [r4, #4]
   17e5c:	mov	r7, #7
   17e60:	ldr	r0, [r0, #16]
   17e64:	cmp	r0, #0
   17e68:	beq	17e14 <argp_parse@@Base+0x374>
   17e6c:	ldr	r0, [r0]
   17e70:	cmp	r0, #0
   17e74:	beq	17e14 <argp_parse@@Base+0x374>
   17e78:	ldr	r0, [r4, #24]
   17e7c:	ldr	r1, [r4, #28]
   17e80:	str	r0, [r1]
   17e84:	ldr	r3, [r4]
   17e88:	cmp	r3, #0
   17e8c:	bne	17dd0 <argp_parse@@Base+0x330>
   17e90:	b	17e14 <argp_parse@@Base+0x374>
   17e94:	cmp	r7, #7
   17e98:	cmpne	r7, #0
   17e9c:	bne	18690 <argp_parse@@Base+0xbf0>
   17ea0:	ldr	r0, [fp, #-140]	; 0xffffff74
   17ea4:	tst	r0, #2
   17ea8:	bne	17eb8 <argp_parse@@Base+0x418>
   17eac:	mov	r0, #1
   17eb0:	str	r0, [fp, #-204]	; 0xffffff34
   17eb4:	b	17ee0 <argp_parse@@Base+0x440>
   17eb8:	mov	r1, #0
   17ebc:	tst	r0, #1
   17ec0:	str	r1, [fp, #-204]	; 0xffffff34
   17ec4:	beq	17ee0 <argp_parse@@Base+0x440>
   17ec8:	ldr	r0, [fp, #-152]	; 0xffffff68
   17ecc:	ldr	r1, [fp, #-148]	; 0xffffff6c
   17ed0:	sub	r1, r1, #4
   17ed4:	add	r0, r0, #1
   17ed8:	str	r1, [fp, #-148]	; 0xffffff6c
   17edc:	str	r0, [fp, #-152]	; 0xffffff68
   17ee0:	ldr	r0, [fp, #-148]	; 0xffffff6c
   17ee4:	cmp	r0, r8
   17ee8:	beq	17efc <argp_parse@@Base+0x45c>
   17eec:	movw	r0, #54328	; 0xd438
   17ef0:	movt	r0, #2
   17ef4:	ldr	r0, [r0]
   17ef8:	b	17f0c <argp_parse@@Base+0x46c>
   17efc:	ldr	r0, [r8]
   17f00:	cmp	r0, #0
   17f04:	beq	17eec <argp_parse@@Base+0x44c>
   17f08:	bl	18cf8 <argp_parse@@Base+0x1258>
   17f0c:	str	r0, [fp, #-116]	; 0xffffff8c
   17f10:	sub	r0, fp, #220	; 0xdc
   17f14:	mov	r8, #0
   17f18:	add	r6, r0, #12
   17f1c:	b	17f30 <argp_parse@@Base+0x490>
   17f20:	cmp	r0, #7
   17f24:	beq	182e8 <argp_parse@@Base+0x848>
   17f28:	cmp	r0, #0
   17f2c:	bne	18480 <argp_parse@@Base+0x9e0>
   17f30:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17f34:	cmp	r0, #0
   17f38:	beq	17f4c <argp_parse@@Base+0x4ac>
   17f3c:	ldr	r9, [fp, #-144]	; 0xffffff70
   17f40:	cmp	r9, r0
   17f44:	bge	18000 <argp_parse@@Base+0x560>
   17f48:	str	r8, [fp, #-132]	; 0xffffff7c
   17f4c:	ldr	r0, [fp, #-160]	; 0xffffff60
   17f50:	ldr	r9, [fp, #-144]	; 0xffffff70
   17f54:	cmp	r0, #0
   17f58:	beq	18000 <argp_parse@@Base+0x560>
   17f5c:	mvn	r0, #0
   17f60:	str	r0, [fp, #-200]	; 0xffffff38
   17f64:	str	r9, [fp, #-208]	; 0xffffff30
   17f68:	ldr	r2, [fp, #-216]	; 0xffffff28
   17f6c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   17f70:	ldr	r0, [fp, #-152]	; 0xffffff68
   17f74:	ldr	r1, [fp, #-148]	; 0xffffff6c
   17f78:	ldrb	r7, [fp, #-140]	; 0xffffff74
   17f7c:	sub	sp, sp, #8
   17f80:	tst	r7, #64	; 0x40
   17f84:	bne	17f98 <argp_parse@@Base+0x4f8>
   17f88:	str	r8, [sp]
   17f8c:	str	r6, [sp, #4]
   17f90:	bl	18dd0 <argp_parse@@Base+0x1330>
   17f94:	b	17fa4 <argp_parse@@Base+0x504>
   17f98:	str	r8, [sp]
   17f9c:	str	r6, [sp, #4]
   17fa0:	bl	18e34 <argp_parse@@Base+0x1394>
   17fa4:	add	sp, sp, #8
   17fa8:	ldr	r9, [fp, #-208]	; 0xffffff30
   17fac:	mov	r7, r0
   17fb0:	cmn	r0, #1
   17fb4:	str	r9, [fp, #-144]	; 0xffffff70
   17fb8:	beq	17fd4 <argp_parse@@Base+0x534>
   17fbc:	cmp	r7, #63	; 0x3f
   17fc0:	beq	1819c <argp_parse@@Base+0x6fc>
   17fc4:	cmp	r7, #1
   17fc8:	bne	181ac <argp_parse@@Base+0x70c>
   17fcc:	ldr	r7, [fp, #-196]	; 0xffffff3c
   17fd0:	b	18038 <argp_parse@@Base+0x598>
   17fd4:	cmp	r9, #2
   17fd8:	str	r8, [fp, #-160]	; 0xffffff60
   17fdc:	blt	18000 <argp_parse@@Base+0x560>
   17fe0:	ldr	r0, [fp, #-148]	; 0xffffff6c
   17fe4:	movw	r1, #49819	; 0xc29b
   17fe8:	movt	r1, #1
   17fec:	add	r0, r0, r9, lsl #2
   17ff0:	ldr	r0, [r0, #-4]
   17ff4:	bl	11440 <strcmp@plt>
   17ff8:	cmp	r0, #0
   17ffc:	streq	r9, [fp, #-132]	; 0xffffff7c
   18000:	ldr	r2, [fp, #-152]	; 0xffffff68
   18004:	mov	r1, #1
   18008:	mov	r0, #7
   1800c:	cmp	r9, r2
   18010:	bge	18304 <argp_parse@@Base+0x864>
   18014:	ldrb	r2, [fp, #-140]	; 0xffffff74
   18018:	tst	r2, #4
   1801c:	bne	18304 <argp_parse@@Base+0x864>
   18020:	add	r0, r9, #1
   18024:	str	r0, [fp, #-144]	; 0xffffff70
   18028:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1802c:	ldr	r7, [r1, r9, lsl #2]
   18030:	mov	r9, r0
   18034:	str	r7, [fp, #-196]	; 0xffffff3c
   18038:	sub	r0, r9, #1
   1803c:	str	r0, [fp, #-144]	; 0xffffff70
   18040:	ldr	r1, [fp, #-172]	; 0xffffff54
   18044:	ldr	r2, [fp, #-168]	; 0xffffff58
   18048:	cmp	r1, r2
   1804c:	bcs	182e8 <argp_parse@@Base+0x848>
   18050:	add	r4, r1, #24
   18054:	add	r1, r0, #1
   18058:	str	r1, [fp, #-144]	; 0xffffff70
   1805c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   18060:	cmp	r3, #0
   18064:	beq	18104 <argp_parse@@Base+0x664>
   18068:	ldr	r0, [r4, #8]
   1806c:	mov	r1, r7
   18070:	mov	r2, sl
   18074:	mov	r5, #0
   18078:	str	r0, [fp, #-120]	; 0xffffff88
   1807c:	ldr	r0, [r4]
   18080:	str	r0, [fp, #-128]	; 0xffffff80
   18084:	ldr	r0, [r4, #4]
   18088:	str	r0, [fp, #-124]	; 0xffffff84
   1808c:	ldr	r0, [r4, #-12]
   18090:	str	r0, [fp, #-136]	; 0xffffff78
   18094:	mov	r0, #0
   18098:	blx	r3
   1809c:	ldr	r1, [fp, #-120]	; 0xffffff88
   180a0:	cmp	r0, #7
   180a4:	str	r1, [r4, #8]
   180a8:	bne	18138 <argp_parse@@Base+0x698>
   180ac:	ldr	r0, [fp, #-144]	; 0xffffff70
   180b0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   180b4:	sub	r0, r0, #1
   180b8:	cmp	r3, #0
   180bc:	str	r0, [fp, #-144]	; 0xffffff70
   180c0:	beq	18108 <argp_parse@@Base+0x668>
   180c4:	ldr	r0, [r4]
   180c8:	mov	r1, #0
   180cc:	mov	r2, sl
   180d0:	str	r0, [fp, #-128]	; 0xffffff80
   180d4:	ldr	r0, [r4, #4]
   180d8:	str	r0, [fp, #-124]	; 0xffffff84
   180dc:	ldr	r0, [r4, #-12]
   180e0:	str	r0, [fp, #-136]	; 0xffffff78
   180e4:	movw	r0, #6
   180e8:	movt	r0, #256	; 0x100
   180ec:	blx	r3
   180f0:	ldr	r1, [fp, #-120]	; 0xffffff88
   180f4:	str	r1, [r4, #8]
   180f8:	cmp	r0, #7
   180fc:	beq	18114 <argp_parse@@Base+0x674>
   18100:	b	18130 <argp_parse@@Base+0x690>
   18104:	str	r0, [fp, #-144]	; 0xffffff70
   18108:	mov	r0, #7
   1810c:	cmp	r0, #7
   18110:	bne	18130 <argp_parse@@Base+0x690>
   18114:	ldr	r2, [fp, #-168]	; 0xffffff58
   18118:	add	r1, r4, #12
   1811c:	cmp	r1, r2
   18120:	bcs	18130 <argp_parse@@Base+0x690>
   18124:	ldr	r0, [fp, #-144]	; 0xffffff70
   18128:	add	r4, r4, #36	; 0x24
   1812c:	b	18054 <argp_parse@@Base+0x5b4>
   18130:	movw	r5, #6
   18134:	movt	r5, #256	; 0x100
   18138:	cmp	r0, #0
   1813c:	bne	17f20 <argp_parse@@Base+0x480>
   18140:	movw	r0, #6
   18144:	movt	r0, #256	; 0x100
   18148:	cmp	r5, r0
   1814c:	bne	18178 <argp_parse@@Base+0x6d8>
   18150:	ldr	r0, [fp, #-152]	; 0xffffff68
   18154:	str	r0, [fp, #-144]	; 0xffffff70
   18158:	cmp	r0, r9
   1815c:	blt	18184 <argp_parse@@Base+0x6e4>
   18160:	ldr	r1, [r4, #-12]
   18164:	sub	r0, r0, r9
   18168:	add	r0, r0, r1
   1816c:	add	r0, r0, #1
   18170:	str	r0, [r4, #-12]
   18174:	b	1818c <argp_parse@@Base+0x6ec>
   18178:	ldr	r0, [fp, #-144]	; 0xffffff70
   1817c:	cmp	r0, r9
   18180:	bge	18160 <argp_parse@@Base+0x6c0>
   18184:	mov	r0, #1
   18188:	str	r0, [fp, #-160]	; 0xffffff60
   1818c:	mov	r0, #0
   18190:	cmp	r0, #0
   18194:	beq	17f30 <argp_parse@@Base+0x490>
   18198:	b	18480 <argp_parse@@Base+0x9e0>
   1819c:	ldr	r0, [fp, #-200]	; 0xffffff38
   181a0:	cmn	r0, #1
   181a4:	beq	18214 <argp_parse@@Base+0x774>
   181a8:	b	186d0 <argp_parse@@Base+0xc30>
   181ac:	cmp	r8, r7, asr #24
   181b0:	beq	18214 <argp_parse@@Base+0x774>
   181b4:	asr	r0, r7, #24
   181b8:	ldr	r1, [fp, #-172]	; 0xffffff54
   181bc:	sub	r0, r0, #1
   181c0:	add	r0, r0, r0, lsl #3
   181c4:	ldr	r3, [r1, r0, lsl #2]
   181c8:	cmp	r3, #0
   181cc:	beq	1869c <argp_parse@@Base+0xbfc>
   181d0:	add	r4, r1, r0, lsl #2
   181d4:	tst	r7, #8388608	; 0x800000
   181d8:	mov	r2, sl
   181dc:	ldr	r0, [r4, #32]!
   181e0:	str	r0, [fp, #-120]	; 0xffffff88
   181e4:	ldr	r0, [r4, #-8]
   181e8:	str	r0, [fp, #-128]	; 0xffffff80
   181ec:	ldr	r0, [r4, #-4]
   181f0:	str	r0, [fp, #-124]	; 0xffffff84
   181f4:	ldr	r0, [r4, #-20]	; 0xffffffec
   181f8:	str	r0, [fp, #-136]	; 0xffffff78
   181fc:	bic	r0, r7, #-16777216	; 0xff000000
   18200:	ldr	r1, [fp, #-196]	; 0xffffff3c
   18204:	orrne	r0, r0, #-16777216	; 0xff000000
   18208:	blx	r3
   1820c:	mov	r1, #0
   18210:	b	182a4 <argp_parse@@Base+0x804>
   18214:	ldr	r0, [fp, #-216]	; 0xffffff28
   18218:	mov	r1, r7
   1821c:	bl	11620 <strchr@plt>
   18220:	cmp	r0, #0
   18224:	beq	182bc <argp_parse@@Base+0x81c>
   18228:	ldr	r1, [fp, #-172]	; 0xffffff54
   1822c:	ldr	r2, [fp, #-168]	; 0xffffff58
   18230:	cmp	r1, r2
   18234:	bcs	182bc <argp_parse@@Base+0x81c>
   18238:	add	r1, r1, #24
   1823c:	ldr	r3, [r1, #-16]
   18240:	cmp	r3, r0
   18244:	bhi	18260 <argp_parse@@Base+0x7c0>
   18248:	add	r3, r1, #36	; 0x24
   1824c:	add	r1, r1, #12
   18250:	cmp	r1, r2
   18254:	mov	r1, r3
   18258:	bcc	1823c <argp_parse@@Base+0x79c>
   1825c:	b	182bc <argp_parse@@Base+0x81c>
   18260:	ldr	r3, [r1, #-24]	; 0xffffffe8
   18264:	cmp	r3, #0
   18268:	beq	182bc <argp_parse@@Base+0x81c>
   1826c:	mov	r4, r1
   18270:	mov	r2, sl
   18274:	ldr	r0, [r4, #8]!
   18278:	str	r0, [fp, #-120]	; 0xffffff88
   1827c:	ldr	r0, [r1]
   18280:	str	r0, [fp, #-128]	; 0xffffff80
   18284:	ldr	r0, [r1, #4]
   18288:	str	r0, [fp, #-124]	; 0xffffff84
   1828c:	ldr	r0, [r1, #-12]
   18290:	str	r0, [fp, #-136]	; 0xffffff78
   18294:	mov	r0, r7
   18298:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1829c:	blx	r3
   182a0:	mov	r1, #1
   182a4:	ldr	r2, [fp, #-120]	; 0xffffff88
   182a8:	cmp	r0, #7
   182ac:	str	r2, [r4]
   182b0:	bne	17f28 <argp_parse@@Base+0x488>
   182b4:	cmp	r1, #0
   182b8:	beq	1869c <argp_parse@@Base+0xbfc>
   182bc:	movw	r1, #49822	; 0xc29e
   182c0:	movw	r3, #49560	; 0xc198
   182c4:	mov	r0, sl
   182c8:	mov	r2, r7
   182cc:	movt	r1, #1
   182d0:	movt	r3, #1
   182d4:	bl	15a94 <argp_error@@Base>
   182d8:	mov	r0, #0
   182dc:	b	182f0 <argp_parse@@Base+0x850>
   182e0:	mov	r1, r4
   182e4:	b	17cf4 <argp_parse@@Base+0x254>
   182e8:	mov	r7, #1
   182ec:	mov	r0, #1
   182f0:	add	r1, r7, #1
   182f4:	clz	r1, r1
   182f8:	lsr	r1, r1, #5
   182fc:	orr	r1, r1, r0
   18300:	mov	r0, #7
   18304:	subs	r7, r0, #7
   18308:	movne	r7, r0
   1830c:	cmp	r1, #0
   18310:	moveq	r7, r0
   18314:	cmp	r7, #0
   18318:	beq	183b8 <argp_parse@@Base+0x918>
   1831c:	cmp	r7, #0
   18320:	beq	18564 <argp_parse@@Base+0xac4>
   18324:	cmp	r7, #7
   18328:	bne	18340 <argp_parse@@Base+0x8a0>
   1832c:	ldr	r1, [fp, #-112]	; 0xffffff90
   18330:	mov	r0, sl
   18334:	mov	r2, #260	; 0x104
   18338:	bl	159d8 <argp_state_help@@Base>
   1833c:	mov	r7, #7
   18340:	ldr	r4, [fp, #-172]	; 0xffffff54
   18344:	ldr	r0, [fp, #-168]	; 0xffffff58
   18348:	cmp	r4, r0
   1834c:	bcs	18608 <argp_parse@@Base+0xb68>
   18350:	movw	r1, #6
   18354:	movt	r1, #256	; 0x100
   18358:	sub	r6, r1, #1
   1835c:	b	1836c <argp_parse@@Base+0x8cc>
   18360:	add	r4, r4, #36	; 0x24
   18364:	cmp	r4, r0
   18368:	bcs	18464 <argp_parse@@Base+0x9c4>
   1836c:	ldr	r3, [r4]
   18370:	cmp	r3, #0
   18374:	beq	18360 <argp_parse@@Base+0x8c0>
   18378:	ldr	r0, [r4, #32]
   1837c:	mov	r1, #0
   18380:	mov	r2, sl
   18384:	str	r0, [fp, #-120]	; 0xffffff88
   18388:	ldr	r0, [r4, #24]
   1838c:	str	r0, [fp, #-128]	; 0xffffff80
   18390:	ldr	r0, [r4, #28]
   18394:	str	r0, [fp, #-124]	; 0xffffff84
   18398:	ldr	r0, [r4, #12]
   1839c:	str	r0, [fp, #-136]	; 0xffffff78
   183a0:	mov	r0, r6
   183a4:	blx	r3
   183a8:	ldr	r0, [fp, #-120]	; 0xffffff88
   183ac:	str	r0, [r4, #32]
   183b0:	ldr	r0, [fp, #-168]	; 0xffffff58
   183b4:	b	18360 <argp_parse@@Base+0x8c0>
   183b8:	ldr	r1, [fp, #-152]	; 0xffffff68
   183bc:	ldr	r0, [fp, #-144]	; 0xffffff70
   183c0:	cmp	r0, r1
   183c4:	bne	1846c <argp_parse@@Base+0x9cc>
   183c8:	ldr	r4, [fp, #-172]	; 0xffffff54
   183cc:	ldr	r1, [fp, #-168]	; 0xffffff58
   183d0:	mov	r0, #0
   183d4:	cmp	r4, r1
   183d8:	bcs	1848c <argp_parse@@Base+0x9ec>
   183dc:	movw	r0, #6
   183e0:	mov	r7, #0
   183e4:	movt	r0, #256	; 0x100
   183e8:	sub	r6, r0, #4
   183ec:	mov	r0, #0
   183f0:	b	18438 <argp_parse@@Base+0x998>
   183f4:	ldr	r0, [r4, #32]
   183f8:	mov	r1, #0
   183fc:	mov	r2, sl
   18400:	str	r0, [fp, #-120]	; 0xffffff88
   18404:	ldr	r0, [r4, #24]
   18408:	str	r0, [fp, #-128]	; 0xffffff80
   1840c:	ldr	r0, [r4, #28]
   18410:	str	r7, [fp, #-136]	; 0xffffff78
   18414:	str	r0, [fp, #-124]	; 0xffffff84
   18418:	mov	r0, r6
   1841c:	blx	r3
   18420:	ldr	r1, [fp, #-120]	; 0xffffff88
   18424:	str	r1, [r4, #32]
   18428:	ldr	r1, [fp, #-168]	; 0xffffff58
   1842c:	add	r4, r4, #36	; 0x24
   18430:	cmp	r4, r1
   18434:	bcs	18488 <argp_parse@@Base+0x9e8>
   18438:	cmp	r0, #7
   1843c:	cmpne	r0, #0
   18440:	bne	18488 <argp_parse@@Base+0x9e8>
   18444:	ldr	r2, [r4, #12]
   18448:	cmp	r2, #0
   1844c:	bne	1842c <argp_parse@@Base+0x98c>
   18450:	ldr	r3, [r4]
   18454:	cmp	r3, #0
   18458:	bne	183f4 <argp_parse@@Base+0x954>
   1845c:	mov	r0, #7
   18460:	b	1842c <argp_parse@@Base+0x98c>
   18464:	ldr	r4, [fp, #-172]	; 0xffffff54
   18468:	b	18608 <argp_parse@@Base+0xb68>
   1846c:	ldr	r1, [fp, #8]
   18470:	cmp	r1, #0
   18474:	beq	1851c <argp_parse@@Base+0xa7c>
   18478:	str	r0, [r1]
   1847c:	b	18564 <argp_parse@@Base+0xac4>
   18480:	mov	r1, #0
   18484:	b	18304 <argp_parse@@Base+0x864>
   18488:	ldr	r4, [fp, #-172]	; 0xffffff54
   1848c:	sub	r7, r1, #36	; 0x24
   18490:	cmp	r7, r4
   18494:	bcc	18510 <argp_parse@@Base+0xa70>
   18498:	movw	r1, #6
   1849c:	movt	r1, #256	; 0x100
   184a0:	sub	r6, r1, #5
   184a4:	b	184f0 <argp_parse@@Base+0xa50>
   184a8:	ldr	r0, [r7, #32]
   184ac:	mov	r1, #0
   184b0:	mov	r2, sl
   184b4:	str	r0, [fp, #-120]	; 0xffffff88
   184b8:	ldr	r0, [r7, #24]
   184bc:	str	r0, [fp, #-128]	; 0xffffff80
   184c0:	ldr	r0, [r7, #28]
   184c4:	str	r0, [fp, #-124]	; 0xffffff84
   184c8:	ldr	r0, [r7, #12]
   184cc:	str	r0, [fp, #-136]	; 0xffffff78
   184d0:	mov	r0, r6
   184d4:	blx	r3
   184d8:	ldr	r1, [fp, #-120]	; 0xffffff88
   184dc:	str	r1, [r7, #32]
   184e0:	ldr	r4, [fp, #-172]	; 0xffffff54
   184e4:	sub	r7, r7, #36	; 0x24
   184e8:	cmp	r7, r4
   184ec:	bcc	18510 <argp_parse@@Base+0xa70>
   184f0:	cmp	r0, #7
   184f4:	cmpne	r0, #0
   184f8:	bne	18548 <argp_parse@@Base+0xaa8>
   184fc:	ldr	r3, [r7]
   18500:	cmp	r3, #0
   18504:	bne	184a8 <argp_parse@@Base+0xa08>
   18508:	mov	r0, #7
   1850c:	b	184e4 <argp_parse@@Base+0xa44>
   18510:	subs	r7, r0, #7
   18514:	movne	r7, r0
   18518:	b	1854c <argp_parse@@Base+0xaac>
   1851c:	ldrb	r0, [fp, #-140]	; 0xffffff74
   18520:	tst	r0, #2
   18524:	bne	1832c <argp_parse@@Base+0x88c>
   18528:	ldr	r0, [fp, #-112]	; 0xffffff90
   1852c:	cmp	r0, #0
   18530:	beq	1832c <argp_parse@@Base+0x88c>
   18534:	ldr	r2, [fp, #-116]	; 0xffffff8c
   18538:	movw	r1, #49843	; 0xc2b3
   1853c:	movt	r1, #1
   18540:	bl	1162c <fprintf@plt>
   18544:	b	1832c <argp_parse@@Base+0x88c>
   18548:	mov	r7, r0
   1854c:	ldr	r1, [fp, #8]
   18550:	cmp	r1, #0
   18554:	ldrne	r0, [fp, #-144]	; 0xffffff70
   18558:	strne	r0, [r1]
   1855c:	cmp	r7, #0
   18560:	bne	18324 <argp_parse@@Base+0x884>
   18564:	ldr	r0, [fp, #-168]	; 0xffffff58
   18568:	ldr	r4, [fp, #-172]	; 0xffffff54
   1856c:	mov	r7, #0
   18570:	sub	r5, r0, #36	; 0x24
   18574:	cmp	r5, r4
   18578:	bcc	18608 <argp_parse@@Base+0xb68>
   1857c:	movw	r1, #6
   18580:	mov	r0, #0
   18584:	movt	r1, #256	; 0x100
   18588:	sub	r6, r1, #2
   1858c:	b	185d8 <argp_parse@@Base+0xb38>
   18590:	ldr	r0, [r5, #32]
   18594:	mov	r1, #0
   18598:	mov	r2, sl
   1859c:	str	r0, [fp, #-120]	; 0xffffff88
   185a0:	ldr	r0, [r5, #24]
   185a4:	str	r0, [fp, #-128]	; 0xffffff80
   185a8:	ldr	r0, [r5, #28]
   185ac:	str	r0, [fp, #-124]	; 0xffffff84
   185b0:	ldr	r0, [r5, #12]
   185b4:	str	r0, [fp, #-136]	; 0xffffff78
   185b8:	mov	r0, r6
   185bc:	blx	r3
   185c0:	ldr	r1, [fp, #-120]	; 0xffffff88
   185c4:	str	r1, [r5, #32]
   185c8:	ldr	r4, [fp, #-172]	; 0xffffff54
   185cc:	sub	r5, r5, #36	; 0x24
   185d0:	cmp	r5, r4
   185d4:	bcc	18600 <argp_parse@@Base+0xb60>
   185d8:	cmp	r0, #7
   185dc:	cmpne	r0, #0
   185e0:	bne	185f8 <argp_parse@@Base+0xb58>
   185e4:	ldr	r3, [r5]
   185e8:	cmp	r3, #0
   185ec:	bne	18590 <argp_parse@@Base+0xaf0>
   185f0:	mov	r0, #7
   185f4:	b	185cc <argp_parse@@Base+0xb2c>
   185f8:	mov	r7, r0
   185fc:	b	18608 <argp_parse@@Base+0xb68>
   18600:	subs	r7, r0, #7
   18604:	movne	r7, r0
   18608:	ldr	r0, [fp, #-168]	; 0xffffff58
   1860c:	sub	r6, r0, #36	; 0x24
   18610:	cmp	r6, r4
   18614:	bcc	18680 <argp_parse@@Base+0xbe0>
   18618:	movw	r0, #6
   1861c:	movt	r0, #256	; 0x100
   18620:	add	r5, r0, #1
   18624:	b	18634 <argp_parse@@Base+0xb94>
   18628:	sub	r6, r6, #36	; 0x24
   1862c:	cmp	r6, r4
   18630:	bcc	18680 <argp_parse@@Base+0xbe0>
   18634:	ldr	r3, [r6]
   18638:	cmp	r3, #0
   1863c:	beq	18628 <argp_parse@@Base+0xb88>
   18640:	ldr	r0, [r6, #32]
   18644:	mov	r1, #0
   18648:	mov	r2, sl
   1864c:	str	r0, [fp, #-120]	; 0xffffff88
   18650:	ldr	r0, [r6, #24]
   18654:	str	r0, [fp, #-128]	; 0xffffff80
   18658:	ldr	r0, [r6, #28]
   1865c:	str	r0, [fp, #-124]	; 0xffffff84
   18660:	ldr	r0, [r6, #12]
   18664:	str	r0, [fp, #-136]	; 0xffffff78
   18668:	mov	r0, r5
   1866c:	blx	r3
   18670:	ldr	r0, [fp, #-120]	; 0xffffff88
   18674:	str	r0, [r6, #32]
   18678:	ldr	r4, [fp, #-172]	; 0xffffff54
   1867c:	b	18628 <argp_parse@@Base+0xb88>
   18680:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18684:	bl	18d7c <argp_parse@@Base+0x12dc>
   18688:	cmp	r7, #7
   1868c:	movweq	r7, #22
   18690:	mov	r0, r7
   18694:	sub	sp, fp, #28
   18698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1869c:	ldr	r0, [fp, #-212]	; 0xffffff2c
   186a0:	ldr	r1, [r0, #12]
   186a4:	cmp	r1, r7
   186a8:	beq	186d8 <argp_parse@@Base+0xc38>
   186ac:	ldr	r1, [r0]
   186b0:	cmp	r1, #0
   186b4:	beq	186d8 <argp_parse@@Base+0xc38>
   186b8:	add	r1, r0, #16
   186bc:	ldr	r0, [r0, #28]
   186c0:	cmp	r0, r7
   186c4:	mov	r0, r1
   186c8:	bne	186ac <argp_parse@@Base+0xc0c>
   186cc:	b	186dc <argp_parse@@Base+0xc3c>
   186d0:	mov	r1, #0
   186d4:	b	18300 <argp_parse@@Base+0x860>
   186d8:	mov	r1, r0
   186dc:	ldr	r0, [r1]
   186e0:	movw	r1, #49830	; 0xc2a6
   186e4:	movw	r3, #49560	; 0xc198
   186e8:	movw	r2, #49839	; 0xc2af
   186ec:	movt	r1, #1
   186f0:	movt	r3, #1
   186f4:	movt	r2, #1
   186f8:	cmp	r0, #0
   186fc:	movne	r2, r0
   18700:	mov	r0, sl
   18704:	b	182d4 <argp_parse@@Base+0x834>
   18708:	mov	ip, r0
   1870c:	mov	r0, #0
   18710:	cmp	r1, #0
   18714:	beq	18744 <argp_parse@@Base+0xca4>
   18718:	ldr	r3, [r1, #52]	; 0x34
   1871c:	ldr	r1, [r3, #48]	; 0x30
   18720:	ldr	r3, [r3, #52]	; 0x34
   18724:	cmp	r1, r3
   18728:	bxcs	lr
   1872c:	ldr	r2, [r1, #4]
   18730:	cmp	r2, ip
   18734:	beq	18740 <argp_parse@@Base+0xca0>
   18738:	add	r1, r1, #36	; 0x24
   1873c:	b	18724 <argp_parse@@Base+0xc84>
   18740:	ldr	r0, [r1, #24]
   18744:	bx	lr
   18748:	push	{r4, r5, r6, sl, fp, lr}
   1874c:	add	fp, sp, #16
   18750:	mov	r5, r2
   18754:	mov	r6, r1
   18758:	mov	r4, #7
   1875c:	cmn	r0, #3
   18760:	bgt	18784 <argp_parse@@Base+0xce4>
   18764:	cmn	r0, #4
   18768:	beq	187b0 <argp_parse@@Base+0xd10>
   1876c:	cmn	r0, #3
   18770:	bne	1884c <argp_parse@@Base+0xdac>
   18774:	ldr	r1, [r5, #48]	; 0x30
   18778:	mov	r0, r5
   1877c:	movw	r2, #513	; 0x201
   18780:	b	187a0 <argp_parse@@Base+0xd00>
   18784:	cmn	r0, #2
   18788:	beq	1880c <argp_parse@@Base+0xd6c>
   1878c:	cmp	r0, #63	; 0x3f
   18790:	bne	1884c <argp_parse@@Base+0xdac>
   18794:	ldr	r1, [r5, #48]	; 0x30
   18798:	mov	r0, r5
   1879c:	movw	r2, #634	; 0x27a
   187a0:	bl	159d8 <argp_state_help@@Base>
   187a4:	mov	r4, #0
   187a8:	mov	r0, r4
   187ac:	pop	{r4, r5, r6, sl, fp, pc}
   187b0:	movw	r0, #49757	; 0xc25d
   187b4:	cmp	r6, #0
   187b8:	mov	r1, #0
   187bc:	mov	r2, #10
   187c0:	mov	r4, #0
   187c4:	movt	r0, #1
   187c8:	movne	r0, r6
   187cc:	bl	1144c <strtol@plt>
   187d0:	movw	r5, #54524	; 0xd4fc
   187d4:	movt	r5, #2
   187d8:	str	r0, [r5]
   187dc:	ldr	r0, [r5]
   187e0:	subs	r0, r0, #1
   187e4:	str	r0, [r5]
   187e8:	blt	1884c <argp_parse@@Base+0xdac>
   187ec:	mov	r0, #1
   187f0:	bl	114f4 <sleep@plt>
   187f4:	ldr	r0, [r5]
   187f8:	sub	r1, r0, #1
   187fc:	cmp	r0, #0
   18800:	str	r1, [r5]
   18804:	bgt	187ec <argp_parse@@Base+0xd4c>
   18808:	b	1884c <argp_parse@@Base+0xdac>
   1880c:	movw	r0, #54332	; 0xd43c
   18810:	movt	r0, #2
   18814:	str	r6, [r0]
   18818:	mov	r0, r6
   1881c:	bl	18cf8 <argp_parse@@Base+0x1258>
   18820:	movw	r1, #54328	; 0xd438
   18824:	str	r0, [r5, #40]	; 0x28
   18828:	mov	r4, #0
   1882c:	movt	r1, #2
   18830:	str	r0, [r1]
   18834:	ldr	r0, [r5, #16]
   18838:	and	r0, r0, #3
   1883c:	cmp	r0, #1
   18840:	bne	1884c <argp_parse@@Base+0xdac>
   18844:	ldr	r0, [r5, #8]
   18848:	str	r6, [r0]
   1884c:	mov	r0, r4
   18850:	pop	{r4, r5, r6, sl, fp, pc}
   18854:	push	{r4, sl, fp, lr}
   18858:	add	fp, sp, #8
   1885c:	mov	r1, r0
   18860:	mov	r0, #7
   18864:	cmp	r1, #86	; 0x56
   18868:	popne	{r4, sl, fp, pc}
   1886c:	movw	r0, #54528	; 0xd500
   18870:	mov	r4, r2
   18874:	movt	r0, #2
   18878:	ldr	r2, [r0]
   1887c:	cmp	r2, #0
   18880:	beq	18894 <argp_parse@@Base+0xdf4>
   18884:	ldr	r0, [r4, #48]	; 0x30
   18888:	mov	r1, r4
   1888c:	blx	r2
   18890:	b	188d4 <argp_parse@@Base+0xe34>
   18894:	movw	r0, #57272	; 0xdfb8
   18898:	movt	r0, #2
   1889c:	ldr	r2, [r0]
   188a0:	cmp	r2, #0
   188a4:	beq	188bc <argp_parse@@Base+0xe1c>
   188a8:	ldr	r0, [r4, #48]	; 0x30
   188ac:	movw	r1, #47371	; 0xb90b
   188b0:	movt	r1, #1
   188b4:	bl	1162c <fprintf@plt>
   188b8:	b	188d4 <argp_parse@@Base+0xe34>
   188bc:	movw	r1, #48651	; 0xbe0b
   188c0:	movw	r2, #49784	; 0xc278
   188c4:	mov	r0, r4
   188c8:	movt	r1, #1
   188cc:	movt	r2, #1
   188d0:	bl	15a94 <argp_error@@Base>
   188d4:	ldrb	r1, [r4, #16]
   188d8:	mov	r0, #0
   188dc:	tst	r1, #32
   188e0:	beq	188e8 <argp_parse@@Base+0xe48>
   188e4:	pop	{r4, sl, fp, pc}
   188e8:	mov	r0, #0
   188ec:	bl	115fc <exit@plt>
   188f0:	push	{r4, r5, fp, lr}
   188f4:	add	fp, sp, #8
   188f8:	ldr	r2, [r0]
   188fc:	ldr	ip, [r0, #16]
   18900:	mov	r4, r1
   18904:	cmp	r2, #0
   18908:	beq	18974 <argp_parse@@Base+0xed4>
   1890c:	ldr	r0, [r4, #8]
   18910:	mov	r3, #0
   18914:	add	r0, r0, #1
   18918:	str	r0, [r4, #8]
   1891c:	mov	r0, #0
   18920:	b	1892c <argp_parse@@Base+0xe8c>
   18924:	add	r3, r3, #3
   18928:	add	r0, r0, #1
   1892c:	add	r5, r2, r3, lsl #3
   18930:	ldr	r1, [r5, #4]
   18934:	cmp	r1, #0
   18938:	bne	18924 <argp_parse@@Base+0xe84>
   1893c:	ldr	r1, [r2, r3, lsl #3]
   18940:	cmp	r1, #0
   18944:	bne	18924 <argp_parse@@Base+0xe84>
   18948:	ldr	r1, [r5, #16]
   1894c:	cmp	r1, #0
   18950:	bne	18924 <argp_parse@@Base+0xe84>
   18954:	ldr	r1, [r5, #20]
   18958:	cmp	r1, #0
   1895c:	bne	18924 <argp_parse@@Base+0xe84>
   18960:	ldr	r1, [r4]
   18964:	mov	r2, r4
   18968:	add	r1, r1, r3
   1896c:	str	r1, [r2], #4
   18970:	b	18988 <argp_parse@@Base+0xee8>
   18974:	ldr	r0, [r0, #4]
   18978:	cmp	r0, #0
   1897c:	beq	18994 <argp_parse@@Base+0xef4>
   18980:	add	r2, r4, #8
   18984:	mov	r0, #1
   18988:	ldr	r1, [r2]
   1898c:	add	r0, r1, r0
   18990:	str	r0, [r2]
   18994:	cmp	ip, #0
   18998:	beq	189cc <argp_parse@@Base+0xf2c>
   1899c:	ldr	r0, [ip]
   189a0:	cmp	r0, #0
   189a4:	popeq	{r4, r5, fp, pc}
   189a8:	add	r5, ip, #16
   189ac:	mov	r1, r4
   189b0:	bl	188f0 <argp_parse@@Base+0xe50>
   189b4:	ldr	r0, [r4, #12]
   189b8:	add	r0, r0, #1
   189bc:	str	r0, [r4, #12]
   189c0:	ldr	r0, [r5], #16
   189c4:	cmp	r0, #0
   189c8:	bne	189ac <argp_parse@@Base+0xf0c>
   189cc:	pop	{r4, r5, fp, pc}
   189d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189d4:	add	fp, sp, #28
   189d8:	sub	sp, sp, #28
   189dc:	ldr	sl, [r0]
   189e0:	ldr	r5, [r0, #16]
   189e4:	ldr	r6, [fp, #8]
   189e8:	mov	r7, r3
   189ec:	cmp	sl, #0
   189f0:	beq	18bc0 <argp_parse@@Base+0x1120>
   189f4:	str	r0, [sp, #8]
   189f8:	add	r0, sp, #16
   189fc:	mov	r8, sl
   18a00:	str	r2, [sp, #12]
   18a04:	stm	r0, {r1, r5, r7}
   18a08:	b	18a7c <argp_parse@@Base+0xfdc>
   18a0c:	ldr	r0, [r6, #8]
   18a10:	str	r5, [r0]
   18a14:	ldr	r1, [sl, #8]
   18a18:	cmp	r1, #0
   18a1c:	beq	18ba0 <argp_parse@@Base+0x1100>
   18a20:	ldrb	r1, [sl, #12]
   18a24:	tst	r1, #1
   18a28:	mov	r1, #2
   18a2c:	movweq	r1, #1
   18a30:	mov	r5, #0
   18a34:	stmib	r0, {r1, r5}
   18a38:	ldr	r1, [r8, #4]
   18a3c:	ldr	r2, [r7, #48]	; 0x30
   18a40:	ldr	r3, [sp, #24]
   18a44:	cmp	r1, #0
   18a48:	sub	r2, r3, r2
   18a4c:	mov	r3, #956301312	; 0x39000000
   18a50:	ldreq	r1, [sl, #4]
   18a54:	lsr	r2, r2, #2
   18a58:	mul	r2, r2, r3
   18a5c:	bic	r1, r1, #-16777216	; 0xff000000
   18a60:	orr	r1, r2, r1
   18a64:	add	r1, r1, #16777216	; 0x1000000
   18a68:	str	r1, [r0, #12]
   18a6c:	add	r1, r0, #16
   18a70:	str	r1, [r6, #8]
   18a74:	str	r5, [r0, #16]
   18a78:	add	r8, r8, #24
   18a7c:	ldr	r5, [r8, #4]
   18a80:	cmp	r5, #0
   18a84:	bne	18aac <argp_parse@@Base+0x100c>
   18a88:	ldr	r0, [r8]
   18a8c:	cmp	r0, #0
   18a90:	bne	18aac <argp_parse@@Base+0x100c>
   18a94:	ldr	r0, [r8, #16]
   18a98:	cmp	r0, #0
   18a9c:	bne	18aac <argp_parse@@Base+0x100c>
   18aa0:	ldr	r0, [r8, #20]
   18aa4:	cmp	r0, #0
   18aa8:	beq	18ba8 <argp_parse@@Base+0x1108>
   18aac:	ldr	r0, [r8, #12]
   18ab0:	tst	r0, #4
   18ab4:	moveq	sl, r8
   18ab8:	ldrb	r1, [sl, #12]
   18abc:	tst	r1, #8
   18ac0:	bne	18a78 <argp_parse@@Base+0xfd8>
   18ac4:	sub	r1, r5, #1
   18ac8:	cmp	r1, #254	; 0xfe
   18acc:	bhi	18b4c <argp_parse@@Base+0x10ac>
   18ad0:	ands	r0, r0, #8
   18ad4:	bne	18b4c <argp_parse@@Base+0x10ac>
   18ad8:	bl	115f0 <__ctype_b_loc@plt>
   18adc:	ldr	r0, [r0]
   18ae0:	add	r0, r0, r5, lsl #1
   18ae4:	ldrb	r0, [r0, #1]
   18ae8:	tst	r0, #64	; 0x40
   18aec:	beq	18b4c <argp_parse@@Base+0x10ac>
   18af0:	ldr	r0, [r6, #4]
   18af4:	add	r1, r0, #1
   18af8:	str	r1, [r6, #4]
   18afc:	strb	r5, [r0]
   18b00:	ldr	r0, [sl, #8]
   18b04:	cmp	r0, #0
   18b08:	beq	18b40 <argp_parse@@Base+0x10a0>
   18b0c:	ldr	r0, [r6, #4]
   18b10:	add	r1, r0, #1
   18b14:	str	r1, [r6, #4]
   18b18:	mov	r1, #58	; 0x3a
   18b1c:	strb	r1, [r0]
   18b20:	ldrb	r0, [sl, #12]
   18b24:	tst	r0, #1
   18b28:	beq	18b40 <argp_parse@@Base+0x10a0>
   18b2c:	ldr	r0, [r6, #4]
   18b30:	add	r1, r0, #1
   18b34:	str	r1, [r6, #4]
   18b38:	mov	r1, #58	; 0x3a
   18b3c:	strb	r1, [r0]
   18b40:	ldr	r0, [r6, #4]
   18b44:	mov	r1, #0
   18b48:	strb	r1, [r0]
   18b4c:	ldr	r5, [r8]
   18b50:	cmp	r5, #0
   18b54:	beq	18a78 <argp_parse@@Base+0xfd8>
   18b58:	ldr	r7, [r6]
   18b5c:	ldr	r9, [r7, #8]
   18b60:	ldr	r0, [r9]
   18b64:	cmp	r0, #0
   18b68:	beq	18a0c <argp_parse@@Base+0xf6c>
   18b6c:	mov	r4, r9
   18b70:	mov	r1, r5
   18b74:	bl	11440 <strcmp@plt>
   18b78:	cmp	r0, #0
   18b7c:	beq	18b90 <argp_parse@@Base+0x10f0>
   18b80:	ldr	r0, [r4, #16]!
   18b84:	cmp	r0, #0
   18b88:	bne	18b70 <argp_parse@@Base+0x10d0>
   18b8c:	b	18a0c <argp_parse@@Base+0xf6c>
   18b90:	sub	r0, r4, r9
   18b94:	cmn	r0, #1
   18b98:	bgt	18a78 <argp_parse@@Base+0xfd8>
   18b9c:	b	18a0c <argp_parse@@Base+0xf6c>
   18ba0:	mov	r1, #0
   18ba4:	b	18a30 <argp_parse@@Base+0xf90>
   18ba8:	ldr	r0, [sp, #8]
   18bac:	add	r7, sp, #16
   18bb0:	ldr	r2, [sp, #12]
   18bb4:	ldm	r7, {r1, r5, r7}
   18bb8:	ldr	r3, [r0, #4]
   18bbc:	b	18bcc <argp_parse@@Base+0x112c>
   18bc0:	ldr	r3, [r0, #4]
   18bc4:	cmp	r3, #0
   18bc8:	beq	18c70 <argp_parse@@Base+0x11d0>
   18bcc:	str	r0, [r7, #4]
   18bd0:	str	r3, [r7]
   18bd4:	mov	r0, #0
   18bd8:	cmp	r5, #0
   18bdc:	add	ip, r7, #12
   18be0:	ldr	r3, [r6, #4]
   18be4:	str	r0, [r7, #32]
   18be8:	str	r0, [r7, #24]
   18bec:	stm	ip, {r0, r1, r2}
   18bf0:	str	r0, [r7, #28]
   18bf4:	str	r3, [r7, #8]
   18bf8:	beq	18c20 <argp_parse@@Base+0x1180>
   18bfc:	ldr	r1, [r5, r0, lsl #2]
   18c00:	add	r0, r0, #4
   18c04:	cmp	r1, #0
   18c08:	bne	18bfc <argp_parse@@Base+0x115c>
   18c0c:	ldr	r1, [r6, #12]
   18c10:	add	r0, r1, r0
   18c14:	str	r1, [r7, #28]
   18c18:	sub	r0, r0, #4
   18c1c:	str	r0, [r6, #12]
   18c20:	add	r3, r7, #36	; 0x24
   18c24:	cmp	r5, #0
   18c28:	beq	18c64 <argp_parse@@Base+0x11c4>
   18c2c:	ldr	r0, [r5]
   18c30:	cmp	r0, #0
   18c34:	beq	18c64 <argp_parse@@Base+0x11c4>
   18c38:	add	r4, r5, #16
   18c3c:	mov	r5, #0
   18c40:	mov	r1, r7
   18c44:	mov	r2, r5
   18c48:	str	r6, [sp]
   18c4c:	bl	189d0 <argp_parse@@Base+0xf30>
   18c50:	mov	r3, r0
   18c54:	ldr	r0, [r4, r5, lsl #4]
   18c58:	add	r5, r5, #1
   18c5c:	cmp	r0, #0
   18c60:	bne	18c40 <argp_parse@@Base+0x11a0>
   18c64:	mov	r0, r3
   18c68:	sub	sp, fp, #28
   18c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18c70:	mov	r3, r7
   18c74:	mov	r7, #0
   18c78:	cmp	r5, #0
   18c7c:	bne	18c2c <argp_parse@@Base+0x118c>
   18c80:	b	18c64 <argp_parse@@Base+0x11c4>
   18c84:	movw	r2, #54532	; 0xd504
   18c88:	movt	r2, #2
   18c8c:	str	r0, [r2]
   18c90:	movw	r0, #54528	; 0xd500
   18c94:	movw	r2, #36020	; 0x8cb4
   18c98:	movt	r0, #2
   18c9c:	movt	r2, #1
   18ca0:	str	r2, [r0]
   18ca4:	movw	r0, #54536	; 0xd508
   18ca8:	movt	r0, #2
   18cac:	str	r1, [r0]
   18cb0:	bx	lr
   18cb4:	push	{fp, lr}
   18cb8:	mov	fp, sp
   18cbc:	sub	sp, sp, #8
   18cc0:	movw	r2, #54536	; 0xd508
   18cc4:	movw	r1, #54532	; 0xd504
   18cc8:	movw	r3, #49881	; 0xc2d9
   18ccc:	movt	r2, #2
   18cd0:	movt	r1, #2
   18cd4:	movt	r3, #1
   18cd8:	ldr	r2, [r2]
   18cdc:	ldr	r1, [r1]
   18ce0:	str	r2, [sp]
   18ce4:	movw	r2, #49867	; 0xc2cb
   18ce8:	movt	r2, #1
   18cec:	bl	191c8 <argp_parse@@Base+0x1728>
   18cf0:	mov	sp, fp
   18cf4:	pop	{fp, pc}
   18cf8:	sub	r0, r0, #1
   18cfc:	ldrb	r3, [r0, #1]!
   18d00:	cmp	r3, #47	; 0x2f
   18d04:	beq	18cfc <argp_parse@@Base+0x125c>
   18d08:	mov	r2, #0
   18d0c:	mov	r1, r0
   18d10:	b	18d1c <argp_parse@@Base+0x127c>
   18d14:	ldrb	r3, [r1, #1]!
   18d18:	mov	r2, #1
   18d1c:	uxtb	r3, r3
   18d20:	cmp	r3, #47	; 0x2f
   18d24:	beq	18d14 <argp_parse@@Base+0x1274>
   18d28:	cmp	r3, #0
   18d2c:	bxeq	lr
   18d30:	tst	r2, #1
   18d34:	mov	r2, #0
   18d38:	movne	r0, r1
   18d3c:	ldrb	r3, [r1, #1]!
   18d40:	b	18d1c <argp_parse@@Base+0x127c>
   18d44:	push	{r4, sl, fp, lr}
   18d48:	add	fp, sp, #8
   18d4c:	mov	r4, r0
   18d50:	bl	11614 <strlen@plt>
   18d54:	mov	r1, r0
   18d58:	sub	r2, r4, #1
   18d5c:	mov	r0, r1
   18d60:	cmp	r1, #2
   18d64:	bcc	18d78 <argp_parse@@Base+0x12d8>
   18d68:	ldrb	r3, [r2, r0]
   18d6c:	sub	r1, r0, #1
   18d70:	cmp	r3, #47	; 0x2f
   18d74:	beq	18d5c <argp_parse@@Base+0x12bc>
   18d78:	pop	{r4, sl, fp, pc}
   18d7c:	push	{r4, r5, r6, sl, fp, lr}
   18d80:	add	fp, sp, #16
   18d84:	mov	r4, r0
   18d88:	bl	11638 <__errno_location@plt>
   18d8c:	ldr	r6, [r0]
   18d90:	mov	r5, r0
   18d94:	mov	r0, r4
   18d98:	bl	114a0 <free@plt>
   18d9c:	str	r6, [r5]
   18da0:	pop	{r4, r5, r6, sl, fp, pc}
   18da4:	push	{fp, lr}
   18da8:	mov	fp, sp
   18dac:	sub	sp, sp, #16
   18db0:	mov	ip, #0
   18db4:	str	ip, [sp, #8]
   18db8:	str	ip, [sp, #4]
   18dbc:	ldr	ip, [fp, #8]
   18dc0:	str	ip, [sp]
   18dc4:	bl	1b55c <argp_parse@@Base+0x3abc>
   18dc8:	mov	sp, fp
   18dcc:	pop	{fp, pc}
   18dd0:	push	{fp, lr}
   18dd4:	mov	fp, sp
   18dd8:	sub	sp, sp, #16
   18ddc:	mov	ip, #0
   18de0:	str	ip, [sp, #12]
   18de4:	str	ip, [sp, #4]
   18de8:	ldr	ip, [fp, #12]
   18dec:	str	ip, [sp, #8]
   18df0:	ldr	ip, [fp, #8]
   18df4:	str	ip, [sp]
   18df8:	bl	1a2c0 <argp_parse@@Base+0x2820>
   18dfc:	mov	sp, fp
   18e00:	pop	{fp, pc}
   18e04:	push	{fp, lr}
   18e08:	mov	fp, sp
   18e0c:	sub	sp, sp, #16
   18e10:	mov	ip, #0
   18e14:	str	ip, [sp, #8]
   18e18:	mov	ip, #1
   18e1c:	str	ip, [sp, #4]
   18e20:	ldr	ip, [fp, #8]
   18e24:	str	ip, [sp]
   18e28:	bl	1b55c <argp_parse@@Base+0x3abc>
   18e2c:	mov	sp, fp
   18e30:	pop	{fp, pc}
   18e34:	push	{fp, lr}
   18e38:	mov	fp, sp
   18e3c:	sub	sp, sp, #16
   18e40:	mov	ip, #0
   18e44:	str	ip, [sp, #12]
   18e48:	mov	ip, #1
   18e4c:	str	ip, [sp, #4]
   18e50:	ldr	ip, [fp, #12]
   18e54:	str	ip, [sp, #8]
   18e58:	ldr	ip, [fp, #8]
   18e5c:	str	ip, [sp]
   18e60:	bl	1a2c0 <argp_parse@@Base+0x2820>
   18e64:	mov	sp, fp
   18e68:	pop	{fp, pc}
   18e6c:	sub	sp, sp, #8
   18e70:	push	{fp, lr}
   18e74:	mov	fp, sp
   18e78:	sub	sp, sp, #8
   18e7c:	str	r3, [fp, #12]
   18e80:	add	r3, fp, #8
   18e84:	str	r2, [fp, #8]
   18e88:	orr	r3, r3, #4
   18e8c:	str	r3, [sp, #4]
   18e90:	bl	11554 <ioctl@plt>
   18e94:	mov	sp, fp
   18e98:	pop	{fp, lr}
   18e9c:	add	sp, sp, #8
   18ea0:	bx	lr
   18ea4:	push	{r4, r5, fp, lr}
   18ea8:	add	fp, sp, #8
   18eac:	cmp	r0, #0
   18eb0:	beq	18f44 <argp_parse@@Base+0x14a4>
   18eb4:	mov	r1, #47	; 0x2f
   18eb8:	mov	r4, r0
   18ebc:	bl	116e0 <strrchr@plt>
   18ec0:	cmp	r0, #0
   18ec4:	mov	r5, r4
   18ec8:	addne	r5, r0, #1
   18ecc:	sub	r0, r5, r4
   18ed0:	cmp	r0, #7
   18ed4:	blt	18f28 <argp_parse@@Base+0x1488>
   18ed8:	movw	r1, #49950	; 0xc31e
   18edc:	sub	r0, r5, #7
   18ee0:	mov	r2, #7
   18ee4:	movt	r1, #1
   18ee8:	bl	11764 <strncmp@plt>
   18eec:	cmp	r0, #0
   18ef0:	bne	18f28 <argp_parse@@Base+0x1488>
   18ef4:	movw	r1, #49958	; 0xc326
   18ef8:	mov	r0, r5
   18efc:	mov	r2, #3
   18f00:	movt	r1, #1
   18f04:	bl	11764 <strncmp@plt>
   18f08:	cmp	r0, #0
   18f0c:	beq	18f18 <argp_parse@@Base+0x1478>
   18f10:	mov	r4, r5
   18f14:	b	18f28 <argp_parse@@Base+0x1488>
   18f18:	movw	r0, #54328	; 0xd438
   18f1c:	add	r4, r5, #3
   18f20:	movt	r0, #2
   18f24:	str	r4, [r0]
   18f28:	movw	r0, #54332	; 0xd43c
   18f2c:	movt	r0, #2
   18f30:	str	r4, [r0]
   18f34:	movw	r0, #54540	; 0xd50c
   18f38:	movt	r0, #2
   18f3c:	str	r4, [r0]
   18f40:	pop	{r4, r5, fp, pc}
   18f44:	movw	r0, #54336	; 0xd440
   18f48:	mov	r1, #55	; 0x37
   18f4c:	mov	r2, #1
   18f50:	movt	r0, #2
   18f54:	ldr	r3, [r0]
   18f58:	movw	r0, #49894	; 0xc2e6
   18f5c:	movt	r0, #1
   18f60:	bl	11548 <fwrite@plt>
   18f64:	bl	11770 <abort@plt>
   18f68:	push	{r4, r5, r6, r7, fp, lr}
   18f6c:	add	fp, sp, #16
   18f70:	sub	sp, sp, #32
   18f74:	ldr	r7, [fp, #12]
   18f78:	ldr	r6, [fp, #8]
   18f7c:	mov	r4, r2
   18f80:	mov	r5, r0
   18f84:	cmp	r1, #0
   18f88:	beq	18fa8 <argp_parse@@Base+0x1508>
   18f8c:	mov	r2, r1
   18f90:	movw	r1, #49962	; 0xc32a
   18f94:	str	r3, [sp]
   18f98:	mov	r0, r5
   18f9c:	mov	r3, r4
   18fa0:	movt	r1, #1
   18fa4:	b	18fb8 <argp_parse@@Base+0x1518>
   18fa8:	movw	r1, #49974	; 0xc336
   18fac:	mov	r0, r5
   18fb0:	mov	r2, r4
   18fb4:	movt	r1, #1
   18fb8:	bl	1162c <fprintf@plt>
   18fbc:	movw	r1, #50738	; 0xc632
   18fc0:	movw	r2, #49981	; 0xc33d
   18fc4:	mov	r0, r5
   18fc8:	movw	r3, #2022	; 0x7e6
   18fcc:	movt	r1, #1
   18fd0:	movt	r2, #1
   18fd4:	bl	1162c <fprintf@plt>
   18fd8:	mov	r0, #10
   18fdc:	mov	r1, r5
   18fe0:	bl	116f8 <fputc@plt>
   18fe4:	movw	r1, #49985	; 0xc341
   18fe8:	movw	r2, #50156	; 0xc3ec
   18fec:	mov	r0, r5
   18ff0:	movt	r1, #1
   18ff4:	movt	r2, #1
   18ff8:	bl	1162c <fprintf@plt>
   18ffc:	mov	r0, #10
   19000:	mov	r1, r5
   19004:	bl	116f8 <fputc@plt>
   19008:	cmp	r7, #9
   1900c:	bhi	19048 <argp_parse@@Base+0x15a8>
   19010:	add	r0, pc, #0
   19014:	ldr	pc, [r0, r7, lsl #2]
   19018:	andeq	r9, r1, r0, asr #32
   1901c:	andeq	r9, r1, ip, ror r0
   19020:	muleq	r1, r8, r0
   19024:	strheq	r9, [r1], -r4
   19028:	andeq	r9, r1, ip, asr #1
   1902c:	andeq	r9, r1, r8, ror #1
   19030:	andeq	r9, r1, r4, lsl #2
   19034:	andeq	r9, r1, r8, lsr #2
   19038:	andeq	r9, r1, r8, lsl #3
   1903c:	andeq	r9, r1, r4, asr r1
   19040:	sub	sp, fp, #16
   19044:	pop	{r4, r5, r6, r7, fp, pc}
   19048:	add	r7, r6, #8
   1904c:	add	lr, r6, #20
   19050:	ldm	r6, {r2, r3}
   19054:	ldr	r6, [r6, #32]
   19058:	ldm	r7, {r0, r1, r7}
   1905c:	ldm	lr, {r4, ip, lr}
   19060:	stm	sp, {r0, r1, r7}
   19064:	movw	r1, #50509	; 0xc54d
   19068:	add	r0, sp, #12
   1906c:	stm	r0, {r4, ip, lr}
   19070:	str	r6, [sp, #24]
   19074:	movt	r1, #1
   19078:	b	191b8 <argp_parse@@Base+0x1718>
   1907c:	ldr	r2, [r6]
   19080:	movw	r1, #50190	; 0xc40e
   19084:	mov	r0, r5
   19088:	movt	r1, #1
   1908c:	sub	sp, fp, #16
   19090:	pop	{r4, r5, r6, r7, fp, lr}
   19094:	b	1162c <fprintf@plt>
   19098:	ldm	r6, {r2, r3}
   1909c:	movw	r1, #50206	; 0xc41e
   190a0:	mov	r0, r5
   190a4:	movt	r1, #1
   190a8:	sub	sp, fp, #16
   190ac:	pop	{r4, r5, r6, r7, fp, lr}
   190b0:	b	1162c <fprintf@plt>
   190b4:	ldr	r0, [r6, #8]
   190b8:	movw	r1, #50229	; 0xc435
   190bc:	ldm	r6, {r2, r3}
   190c0:	movt	r1, #1
   190c4:	str	r0, [sp]
   190c8:	b	191b8 <argp_parse@@Base+0x1718>
   190cc:	ldr	r0, [r6, #8]
   190d0:	ldm	r6, {r2, r3}
   190d4:	ldr	r1, [r6, #12]
   190d8:	stm	sp, {r0, r1}
   190dc:	movw	r1, #50257	; 0xc451
   190e0:	movt	r1, #1
   190e4:	b	191b8 <argp_parse@@Base+0x1718>
   190e8:	add	r7, r6, #8
   190ec:	ldm	r6, {r2, r3}
   190f0:	ldm	r7, {r0, r1, r7}
   190f4:	stm	sp, {r0, r1, r7}
   190f8:	movw	r1, #50289	; 0xc471
   190fc:	movt	r1, #1
   19100:	b	191b8 <argp_parse@@Base+0x1718>
   19104:	add	r7, r6, #8
   19108:	ldm	r6, {r2, r3}
   1910c:	ldr	r6, [r6, #20]
   19110:	ldm	r7, {r0, r1, r7}
   19114:	stm	sp, {r0, r1, r7}
   19118:	movw	r1, #50325	; 0xc495
   1911c:	str	r6, [sp, #12]
   19120:	movt	r1, #1
   19124:	b	191b8 <argp_parse@@Base+0x1718>
   19128:	add	r7, r6, #8
   1912c:	ldm	r6, {r2, r3}
   19130:	ldr	r4, [r6, #20]
   19134:	ldr	r6, [r6, #24]
   19138:	ldm	r7, {r0, r1, r7}
   1913c:	stm	sp, {r0, r1, r7}
   19140:	movw	r1, #50365	; 0xc4bd
   19144:	str	r4, [sp, #12]
   19148:	str	r6, [sp, #16]
   1914c:	movt	r1, #1
   19150:	b	191b8 <argp_parse@@Base+0x1718>
   19154:	add	r7, r6, #8
   19158:	add	lr, r6, #20
   1915c:	ldm	r6, {r2, r3}
   19160:	ldr	r6, [r6, #32]
   19164:	ldm	r7, {r0, r1, r7}
   19168:	ldm	lr, {r4, ip, lr}
   1916c:	stm	sp, {r0, r1, r7}
   19170:	movw	r1, #50457	; 0xc519
   19174:	add	r0, sp, #12
   19178:	stm	r0, {r4, ip, lr}
   1917c:	str	r6, [sp, #24]
   19180:	movt	r1, #1
   19184:	b	191b8 <argp_parse@@Base+0x1718>
   19188:	add	r7, r6, #8
   1918c:	ldm	r6, {r2, r3}
   19190:	ldr	r4, [r6, #20]
   19194:	ldr	ip, [r6, #24]
   19198:	ldr	r6, [r6, #28]
   1919c:	ldm	r7, {r0, r1, r7}
   191a0:	stm	sp, {r0, r1, r7}
   191a4:	movw	r1, #50409	; 0xc4e9
   191a8:	str	r4, [sp, #12]
   191ac:	str	ip, [sp, #16]
   191b0:	str	r6, [sp, #20]
   191b4:	movt	r1, #1
   191b8:	mov	r0, r5
   191bc:	bl	1162c <fprintf@plt>
   191c0:	sub	sp, fp, #16
   191c4:	pop	{r4, r5, r6, r7, fp, pc}
   191c8:	push	{r4, sl, fp, lr}
   191cc:	add	fp, sp, #8
   191d0:	sub	sp, sp, #8
   191d4:	ldr	ip, [fp, #8]
   191d8:	mov	lr, #0
   191dc:	ldr	r4, [ip, lr, lsl #2]
   191e0:	add	lr, lr, #1
   191e4:	cmp	r4, #0
   191e8:	bne	191dc <argp_parse@@Base+0x173c>
   191ec:	sub	r4, lr, #1
   191f0:	str	ip, [sp]
   191f4:	str	r4, [sp, #4]
   191f8:	bl	18f68 <argp_parse@@Base+0x14c8>
   191fc:	sub	sp, fp, #8
   19200:	pop	{r4, sl, fp, pc}
   19204:	push	{fp, lr}
   19208:	mov	fp, sp
   1920c:	sub	sp, sp, #48	; 0x30
   19210:	ldr	ip, [fp, #8]
   19214:	ldr	lr, [ip]
   19218:	cmp	lr, #0
   1921c:	str	lr, [sp, #8]
   19220:	beq	192bc <argp_parse@@Base+0x181c>
   19224:	ldr	lr, [ip, #4]
   19228:	cmp	lr, #0
   1922c:	str	lr, [sp, #12]
   19230:	beq	192c4 <argp_parse@@Base+0x1824>
   19234:	ldr	lr, [ip, #8]
   19238:	cmp	lr, #0
   1923c:	str	lr, [sp, #16]
   19240:	beq	192cc <argp_parse@@Base+0x182c>
   19244:	ldr	lr, [ip, #12]
   19248:	cmp	lr, #0
   1924c:	str	lr, [sp, #20]
   19250:	beq	192d4 <argp_parse@@Base+0x1834>
   19254:	ldr	lr, [ip, #16]
   19258:	cmp	lr, #0
   1925c:	str	lr, [sp, #24]
   19260:	beq	192dc <argp_parse@@Base+0x183c>
   19264:	ldr	lr, [ip, #20]
   19268:	cmp	lr, #0
   1926c:	str	lr, [sp, #28]
   19270:	beq	192e4 <argp_parse@@Base+0x1844>
   19274:	ldr	lr, [ip, #24]
   19278:	cmp	lr, #0
   1927c:	str	lr, [sp, #32]
   19280:	beq	192ec <argp_parse@@Base+0x184c>
   19284:	ldr	lr, [ip, #28]
   19288:	cmp	lr, #0
   1928c:	str	lr, [sp, #36]	; 0x24
   19290:	beq	192f4 <argp_parse@@Base+0x1854>
   19294:	ldr	lr, [ip, #32]
   19298:	cmp	lr, #0
   1929c:	str	lr, [sp, #40]	; 0x28
   192a0:	beq	192fc <argp_parse@@Base+0x185c>
   192a4:	ldr	lr, [ip, #36]	; 0x24
   192a8:	mov	ip, #10
   192ac:	cmp	lr, #0
   192b0:	str	lr, [sp, #44]	; 0x2c
   192b4:	movweq	ip, #9
   192b8:	b	19300 <argp_parse@@Base+0x1860>
   192bc:	mov	ip, #0
   192c0:	b	19300 <argp_parse@@Base+0x1860>
   192c4:	mov	ip, #1
   192c8:	b	19300 <argp_parse@@Base+0x1860>
   192cc:	mov	ip, #2
   192d0:	b	19300 <argp_parse@@Base+0x1860>
   192d4:	mov	ip, #3
   192d8:	b	19300 <argp_parse@@Base+0x1860>
   192dc:	mov	ip, #4
   192e0:	b	19300 <argp_parse@@Base+0x1860>
   192e4:	mov	ip, #5
   192e8:	b	19300 <argp_parse@@Base+0x1860>
   192ec:	mov	ip, #6
   192f0:	b	19300 <argp_parse@@Base+0x1860>
   192f4:	mov	ip, #7
   192f8:	b	19300 <argp_parse@@Base+0x1860>
   192fc:	mov	ip, #8
   19300:	add	lr, sp, #8
   19304:	str	ip, [sp, #4]
   19308:	str	lr, [sp]
   1930c:	bl	18f68 <argp_parse@@Base+0x14c8>
   19310:	mov	sp, fp
   19314:	pop	{fp, pc}
   19318:	push	{fp, lr}
   1931c:	mov	fp, sp
   19320:	sub	sp, sp, #56	; 0x38
   19324:	add	ip, fp, #8
   19328:	str	ip, [sp, #12]
   1932c:	ldr	lr, [fp, #8]
   19330:	cmp	lr, #0
   19334:	str	lr, [sp, #16]
   19338:	beq	193d4 <argp_parse@@Base+0x1934>
   1933c:	ldr	lr, [ip, #4]
   19340:	cmp	lr, #0
   19344:	str	lr, [sp, #20]
   19348:	beq	193dc <argp_parse@@Base+0x193c>
   1934c:	ldr	lr, [ip, #8]
   19350:	cmp	lr, #0
   19354:	str	lr, [sp, #24]
   19358:	beq	193e4 <argp_parse@@Base+0x1944>
   1935c:	ldr	lr, [ip, #12]
   19360:	cmp	lr, #0
   19364:	str	lr, [sp, #28]
   19368:	beq	193ec <argp_parse@@Base+0x194c>
   1936c:	ldr	lr, [ip, #16]
   19370:	cmp	lr, #0
   19374:	str	lr, [sp, #32]
   19378:	beq	193f4 <argp_parse@@Base+0x1954>
   1937c:	ldr	lr, [ip, #20]
   19380:	cmp	lr, #0
   19384:	str	lr, [sp, #36]	; 0x24
   19388:	beq	193fc <argp_parse@@Base+0x195c>
   1938c:	ldr	lr, [ip, #24]
   19390:	cmp	lr, #0
   19394:	str	lr, [sp, #40]	; 0x28
   19398:	beq	19404 <argp_parse@@Base+0x1964>
   1939c:	ldr	lr, [ip, #28]
   193a0:	cmp	lr, #0
   193a4:	str	lr, [sp, #44]	; 0x2c
   193a8:	beq	1940c <argp_parse@@Base+0x196c>
   193ac:	ldr	lr, [ip, #32]
   193b0:	cmp	lr, #0
   193b4:	str	lr, [sp, #48]	; 0x30
   193b8:	beq	19414 <argp_parse@@Base+0x1974>
   193bc:	ldr	lr, [ip, #36]	; 0x24
   193c0:	mov	ip, #10
   193c4:	cmp	lr, #0
   193c8:	str	lr, [sp, #52]	; 0x34
   193cc:	movweq	ip, #9
   193d0:	b	19418 <argp_parse@@Base+0x1978>
   193d4:	mov	ip, #0
   193d8:	b	19418 <argp_parse@@Base+0x1978>
   193dc:	mov	ip, #1
   193e0:	b	19418 <argp_parse@@Base+0x1978>
   193e4:	mov	ip, #2
   193e8:	b	19418 <argp_parse@@Base+0x1978>
   193ec:	mov	ip, #3
   193f0:	b	19418 <argp_parse@@Base+0x1978>
   193f4:	mov	ip, #4
   193f8:	b	19418 <argp_parse@@Base+0x1978>
   193fc:	mov	ip, #5
   19400:	b	19418 <argp_parse@@Base+0x1978>
   19404:	mov	ip, #6
   19408:	b	19418 <argp_parse@@Base+0x1978>
   1940c:	mov	ip, #7
   19410:	b	19418 <argp_parse@@Base+0x1978>
   19414:	mov	ip, #8
   19418:	add	lr, sp, #16
   1941c:	str	ip, [sp, #4]
   19420:	str	lr, [sp]
   19424:	bl	18f68 <argp_parse@@Base+0x14c8>
   19428:	mov	sp, fp
   1942c:	pop	{fp, pc}
   19430:	push	{fp, lr}
   19434:	mov	fp, sp
   19438:	movw	r0, #54348	; 0xd44c
   1943c:	movt	r0, #2
   19440:	ldr	r1, [r0]
   19444:	mov	r0, #10
   19448:	bl	116f8 <fputc@plt>
   1944c:	movw	r0, #50569	; 0xc589
   19450:	movw	r1, #50589	; 0xc59d
   19454:	movt	r0, #1
   19458:	movt	r1, #1
   1945c:	bl	11458 <printf@plt>
   19460:	movw	r0, #50611	; 0xc5b3
   19464:	movw	r1, #49867	; 0xc2cb
   19468:	movw	r2, #50631	; 0xc5c7
   1946c:	movt	r0, #1
   19470:	movt	r1, #1
   19474:	movt	r2, #1
   19478:	bl	11458 <printf@plt>
   1947c:	movw	r0, #50670	; 0xc5ee
   19480:	movw	r1, #50709	; 0xc615
   19484:	movt	r0, #1
   19488:	movt	r1, #1
   1948c:	pop	{fp, lr}
   19490:	b	11458 <printf@plt>
   19494:	push	{r4, r5, r6, sl, fp, lr}
   19498:	add	fp, sp, #16
   1949c:	mov	r4, r2
   194a0:	mov	r5, r1
   194a4:	mov	r6, r0
   194a8:	bl	1b658 <argp_parse@@Base+0x3bb8>
   194ac:	cmp	r0, #0
   194b0:	popne	{r4, r5, r6, sl, fp, pc}
   194b4:	cmp	r6, #0
   194b8:	beq	194cc <argp_parse@@Base+0x1a2c>
   194bc:	cmp	r5, #0
   194c0:	cmpne	r4, #0
   194c4:	bne	194cc <argp_parse@@Base+0x1a2c>
   194c8:	pop	{r4, r5, r6, sl, fp, pc}
   194cc:	bl	19a48 <argp_parse@@Base+0x1fa8>
   194d0:	push	{r4, r5, r6, sl, fp, lr}
   194d4:	add	fp, sp, #16
   194d8:	mov	r4, r2
   194dc:	mov	r5, r1
   194e0:	mov	r6, r0
   194e4:	bl	1b658 <argp_parse@@Base+0x3bb8>
   194e8:	cmp	r0, #0
   194ec:	popne	{r4, r5, r6, sl, fp, pc}
   194f0:	cmp	r6, #0
   194f4:	beq	19508 <argp_parse@@Base+0x1a68>
   194f8:	cmp	r5, #0
   194fc:	cmpne	r4, #0
   19500:	bne	19508 <argp_parse@@Base+0x1a68>
   19504:	pop	{r4, r5, r6, sl, fp, pc}
   19508:	bl	19a48 <argp_parse@@Base+0x1fa8>
   1950c:	push	{fp, lr}
   19510:	mov	fp, sp
   19514:	bl	19acc <argp_parse@@Base+0x202c>
   19518:	cmp	r0, #0
   1951c:	popne	{fp, pc}
   19520:	bl	19a48 <argp_parse@@Base+0x1fa8>
   19524:	push	{fp, lr}
   19528:	mov	fp, sp
   1952c:	bl	19acc <argp_parse@@Base+0x202c>
   19530:	cmp	r0, #0
   19534:	popne	{fp, pc}
   19538:	bl	19a48 <argp_parse@@Base+0x1fa8>
   1953c:	push	{fp, lr}
   19540:	mov	fp, sp
   19544:	bl	19acc <argp_parse@@Base+0x202c>
   19548:	cmp	r0, #0
   1954c:	popne	{fp, pc}
   19550:	bl	19a48 <argp_parse@@Base+0x1fa8>
   19554:	push	{r4, r5, fp, lr}
   19558:	add	fp, sp, #8
   1955c:	mov	r4, r1
   19560:	mov	r5, r0
   19564:	bl	19afc <argp_parse@@Base+0x205c>
   19568:	cmp	r0, #0
   1956c:	popne	{r4, r5, fp, pc}
   19570:	cmp	r5, #0
   19574:	beq	19584 <argp_parse@@Base+0x1ae4>
   19578:	cmp	r4, #0
   1957c:	bne	19584 <argp_parse@@Base+0x1ae4>
   19580:	pop	{r4, r5, fp, pc}
   19584:	bl	19a48 <argp_parse@@Base+0x1fa8>
   19588:	push	{fp, lr}
   1958c:	mov	fp, sp
   19590:	cmp	r1, #0
   19594:	orreq	r1, r1, #1
   19598:	bl	19afc <argp_parse@@Base+0x205c>
   1959c:	cmp	r0, #0
   195a0:	popne	{fp, pc}
   195a4:	bl	19a48 <argp_parse@@Base+0x1fa8>
   195a8:	push	{fp, lr}
   195ac:	mov	fp, sp
   195b0:	clz	r3, r2
   195b4:	lsr	ip, r3, #5
   195b8:	clz	r3, r1
   195bc:	lsr	r3, r3, #5
   195c0:	orrs	r3, r3, ip
   195c4:	movwne	r1, #1
   195c8:	movwne	r2, #1
   195cc:	bl	1b658 <argp_parse@@Base+0x3bb8>
   195d0:	cmp	r0, #0
   195d4:	popne	{fp, pc}
   195d8:	bl	19a48 <argp_parse@@Base+0x1fa8>
   195dc:	push	{fp, lr}
   195e0:	mov	fp, sp
   195e4:	mov	r2, r1
   195e8:	mov	r1, r0
   195ec:	mov	r0, #0
   195f0:	bl	1b658 <argp_parse@@Base+0x3bb8>
   195f4:	cmp	r0, #0
   195f8:	popne	{fp, pc}
   195fc:	bl	19a48 <argp_parse@@Base+0x1fa8>
   19600:	push	{fp, lr}
   19604:	mov	fp, sp
   19608:	mov	r2, r1
   1960c:	mov	r1, r0
   19610:	clz	r0, r2
   19614:	clz	r3, r1
   19618:	lsr	r0, r0, #5
   1961c:	lsr	r3, r3, #5
   19620:	orrs	r0, r3, r0
   19624:	mov	r0, #0
   19628:	movwne	r1, #1
   1962c:	movwne	r2, #1
   19630:	bl	1b658 <argp_parse@@Base+0x3bb8>
   19634:	cmp	r0, #0
   19638:	popne	{fp, pc}
   1963c:	bl	19a48 <argp_parse@@Base+0x1fa8>
   19640:	push	{r4, r5, r6, sl, fp, lr}
   19644:	add	fp, sp, #16
   19648:	ldr	r5, [r1]
   1964c:	mov	r4, r1
   19650:	mov	r6, r0
   19654:	cmp	r0, #0
   19658:	beq	19670 <argp_parse@@Base+0x1bd0>
   1965c:	mov	r0, #1
   19660:	add	r0, r0, r5, lsr #1
   19664:	adds	r5, r5, r0
   19668:	bcc	19678 <argp_parse@@Base+0x1bd8>
   1966c:	b	196b4 <argp_parse@@Base+0x1c14>
   19670:	cmp	r5, #0
   19674:	movweq	r5, #64	; 0x40
   19678:	mov	r0, r6
   1967c:	mov	r1, r5
   19680:	mov	r2, #1
   19684:	bl	1b658 <argp_parse@@Base+0x3bb8>
   19688:	cmp	r5, #0
   1968c:	mov	r1, r5
   19690:	movwne	r1, #1
   19694:	cmp	r0, #0
   19698:	bne	196ac <argp_parse@@Base+0x1c0c>
   1969c:	clz	r2, r6
   196a0:	lsr	r2, r2, #5
   196a4:	orrs	r1, r2, r1
   196a8:	bne	196b4 <argp_parse@@Base+0x1c14>
   196ac:	str	r5, [r4]
   196b0:	pop	{r4, r5, r6, sl, fp, pc}
   196b4:	bl	19a48 <argp_parse@@Base+0x1fa8>
   196b8:	push	{r4, r5, r6, r7, fp, lr}
   196bc:	add	fp, sp, #16
   196c0:	ldr	r5, [r1]
   196c4:	mov	r6, r2
   196c8:	mov	r4, r1
   196cc:	mov	r7, r0
   196d0:	cmp	r0, #0
   196d4:	beq	196ec <argp_parse@@Base+0x1c4c>
   196d8:	mov	r0, #1
   196dc:	add	r0, r0, r5, lsr #1
   196e0:	adds	r5, r5, r0
   196e4:	bcc	19704 <argp_parse@@Base+0x1c64>
   196e8:	b	19738 <argp_parse@@Base+0x1c98>
   196ec:	cmp	r5, #0
   196f0:	bne	19704 <argp_parse@@Base+0x1c64>
   196f4:	mov	r0, #64	; 0x40
   196f8:	cmp	r6, #64	; 0x40
   196fc:	udiv	r5, r0, r6
   19700:	addhi	r5, r5, #1
   19704:	mov	r0, r7
   19708:	mov	r1, r5
   1970c:	mov	r2, r6
   19710:	bl	1b658 <argp_parse@@Base+0x3bb8>
   19714:	cmp	r0, #0
   19718:	bne	19730 <argp_parse@@Base+0x1c90>
   1971c:	cmp	r7, #0
   19720:	beq	19738 <argp_parse@@Base+0x1c98>
   19724:	cmp	r6, #0
   19728:	cmpne	r5, #0
   1972c:	bne	19738 <argp_parse@@Base+0x1c98>
   19730:	str	r5, [r4]
   19734:	pop	{r4, r5, r6, r7, fp, pc}
   19738:	bl	19a48 <argp_parse@@Base+0x1fa8>
   1973c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19740:	add	fp, sp, #24
   19744:	mov	r8, r1
   19748:	ldr	r1, [r1]
   1974c:	mov	r5, r0
   19750:	add	r0, r1, r1, asr #1
   19754:	cmp	r0, r1
   19758:	mvnvs	r0, #-2147483648	; 0x80000000
   1975c:	cmp	r0, r3
   19760:	mov	r7, r0
   19764:	movgt	r7, r3
   19768:	cmn	r3, #1
   1976c:	movle	r7, r0
   19770:	ldr	r0, [fp, #8]
   19774:	cmn	r0, #1
   19778:	ble	197a0 <argp_parse@@Base+0x1d00>
   1977c:	cmp	r0, #0
   19780:	beq	197f4 <argp_parse@@Base+0x1d54>
   19784:	cmn	r7, #1
   19788:	ble	197c8 <argp_parse@@Base+0x1d28>
   1978c:	mvn	r4, #-2147483648	; 0x80000000
   19790:	udiv	r6, r4, r0
   19794:	cmp	r6, r7
   19798:	bge	197f4 <argp_parse@@Base+0x1d54>
   1979c:	b	19804 <argp_parse@@Base+0x1d64>
   197a0:	cmn	r7, #1
   197a4:	ble	197e4 <argp_parse@@Base+0x1d44>
   197a8:	cmn	r0, #1
   197ac:	beq	197f4 <argp_parse@@Base+0x1d54>
   197b0:	mov	r6, #-2147483648	; 0x80000000
   197b4:	mvn	r4, #-2147483648	; 0x80000000
   197b8:	sdiv	r6, r6, r0
   197bc:	cmp	r6, r7
   197c0:	bge	197f4 <argp_parse@@Base+0x1d54>
   197c4:	b	19804 <argp_parse@@Base+0x1d64>
   197c8:	beq	197f4 <argp_parse@@Base+0x1d54>
   197cc:	mov	r6, #-2147483648	; 0x80000000
   197d0:	mvn	r4, #-2147483648	; 0x80000000
   197d4:	sdiv	r6, r6, r7
   197d8:	cmp	r6, r0
   197dc:	bge	197f4 <argp_parse@@Base+0x1d54>
   197e0:	b	19804 <argp_parse@@Base+0x1d64>
   197e4:	mvn	r4, #-2147483648	; 0x80000000
   197e8:	sdiv	r6, r4, r0
   197ec:	cmp	r7, r6
   197f0:	blt	19804 <argp_parse@@Base+0x1d64>
   197f4:	mul	r6, r7, r0
   197f8:	mov	r4, #64	; 0x40
   197fc:	cmp	r6, #63	; 0x3f
   19800:	bgt	1980c <argp_parse@@Base+0x1d6c>
   19804:	sdiv	r7, r4, r0
   19808:	mul	r6, r7, r0
   1980c:	cmp	r5, #0
   19810:	moveq	r4, #0
   19814:	streq	r4, [r8]
   19818:	sub	r4, r7, r1
   1981c:	cmp	r4, r2
   19820:	bge	198cc <argp_parse@@Base+0x1e2c>
   19824:	add	r7, r1, r2
   19828:	mov	r6, #0
   1982c:	mov	r2, #0
   19830:	cmp	r7, r3
   19834:	movwgt	r6, #1
   19838:	cmn	r3, #1
   1983c:	movwgt	r2, #1
   19840:	cmp	r7, r1
   19844:	bvs	19900 <argp_parse@@Base+0x1e60>
   19848:	ands	r1, r2, r6
   1984c:	bne	19900 <argp_parse@@Base+0x1e60>
   19850:	cmn	r0, #1
   19854:	ble	1987c <argp_parse@@Base+0x1ddc>
   19858:	cmp	r0, #0
   1985c:	beq	198c8 <argp_parse@@Base+0x1e28>
   19860:	cmn	r7, #1
   19864:	ble	198a0 <argp_parse@@Base+0x1e00>
   19868:	mvn	r1, #-2147483648	; 0x80000000
   1986c:	udiv	r1, r1, r0
   19870:	cmp	r1, r7
   19874:	bge	198c8 <argp_parse@@Base+0x1e28>
   19878:	b	19900 <argp_parse@@Base+0x1e60>
   1987c:	cmn	r7, #1
   19880:	ble	198b8 <argp_parse@@Base+0x1e18>
   19884:	cmn	r0, #1
   19888:	beq	198c8 <argp_parse@@Base+0x1e28>
   1988c:	mov	r1, #-2147483648	; 0x80000000
   19890:	sdiv	r1, r1, r0
   19894:	cmp	r1, r7
   19898:	bge	198c8 <argp_parse@@Base+0x1e28>
   1989c:	b	19900 <argp_parse@@Base+0x1e60>
   198a0:	beq	198c8 <argp_parse@@Base+0x1e28>
   198a4:	mov	r1, #-2147483648	; 0x80000000
   198a8:	sdiv	r1, r1, r7
   198ac:	cmp	r1, r0
   198b0:	bge	198c8 <argp_parse@@Base+0x1e28>
   198b4:	b	19900 <argp_parse@@Base+0x1e60>
   198b8:	mvn	r1, #-2147483648	; 0x80000000
   198bc:	sdiv	r1, r1, r0
   198c0:	cmp	r7, r1
   198c4:	blt	19900 <argp_parse@@Base+0x1e60>
   198c8:	mul	r6, r7, r0
   198cc:	mov	r0, r5
   198d0:	mov	r1, r6
   198d4:	bl	19afc <argp_parse@@Base+0x205c>
   198d8:	cmp	r6, #0
   198dc:	movwne	r6, #1
   198e0:	cmp	r0, #0
   198e4:	bne	198f8 <argp_parse@@Base+0x1e58>
   198e8:	clz	r1, r5
   198ec:	lsr	r1, r1, #5
   198f0:	orrs	r1, r1, r6
   198f4:	bne	19900 <argp_parse@@Base+0x1e60>
   198f8:	str	r7, [r8]
   198fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19900:	bl	19a48 <argp_parse@@Base+0x1fa8>
   19904:	push	{fp, lr}
   19908:	mov	fp, sp
   1990c:	mov	r1, #1
   19910:	bl	19a78 <argp_parse@@Base+0x1fd8>
   19914:	cmp	r0, #0
   19918:	popne	{fp, pc}
   1991c:	bl	19a48 <argp_parse@@Base+0x1fa8>
   19920:	push	{fp, lr}
   19924:	mov	fp, sp
   19928:	bl	19a78 <argp_parse@@Base+0x1fd8>
   1992c:	cmp	r0, #0
   19930:	popne	{fp, pc}
   19934:	bl	19a48 <argp_parse@@Base+0x1fa8>
   19938:	push	{fp, lr}
   1993c:	mov	fp, sp
   19940:	mov	r1, #1
   19944:	bl	19a78 <argp_parse@@Base+0x1fd8>
   19948:	cmp	r0, #0
   1994c:	popne	{fp, pc}
   19950:	bl	19a48 <argp_parse@@Base+0x1fa8>
   19954:	push	{fp, lr}
   19958:	mov	fp, sp
   1995c:	bl	19a78 <argp_parse@@Base+0x1fd8>
   19960:	cmp	r0, #0
   19964:	popne	{fp, pc}
   19968:	bl	19a48 <argp_parse@@Base+0x1fa8>
   1996c:	push	{r4, r5, fp, lr}
   19970:	add	fp, sp, #8
   19974:	mov	r5, r0
   19978:	mov	r0, r1
   1997c:	mov	r4, r1
   19980:	bl	19acc <argp_parse@@Base+0x202c>
   19984:	cmp	r0, #0
   19988:	beq	1999c <argp_parse@@Base+0x1efc>
   1998c:	mov	r1, r5
   19990:	mov	r2, r4
   19994:	pop	{r4, r5, fp, lr}
   19998:	b	114d0 <memcpy@plt>
   1999c:	bl	19a48 <argp_parse@@Base+0x1fa8>
   199a0:	push	{r4, r5, fp, lr}
   199a4:	add	fp, sp, #8
   199a8:	mov	r5, r0
   199ac:	mov	r0, r1
   199b0:	mov	r4, r1
   199b4:	bl	19acc <argp_parse@@Base+0x202c>
   199b8:	cmp	r0, #0
   199bc:	beq	199d0 <argp_parse@@Base+0x1f30>
   199c0:	mov	r1, r5
   199c4:	mov	r2, r4
   199c8:	pop	{r4, r5, fp, lr}
   199cc:	b	114d0 <memcpy@plt>
   199d0:	bl	19a48 <argp_parse@@Base+0x1fa8>
   199d4:	push	{r4, r5, fp, lr}
   199d8:	add	fp, sp, #8
   199dc:	mov	r5, r0
   199e0:	add	r0, r1, #1
   199e4:	mov	r4, r1
   199e8:	bl	19acc <argp_parse@@Base+0x202c>
   199ec:	cmp	r0, #0
   199f0:	beq	19a0c <argp_parse@@Base+0x1f6c>
   199f4:	mov	r1, #0
   199f8:	mov	r2, r4
   199fc:	strb	r1, [r0, r4]
   19a00:	mov	r1, r5
   19a04:	pop	{r4, r5, fp, lr}
   19a08:	b	114d0 <memcpy@plt>
   19a0c:	bl	19a48 <argp_parse@@Base+0x1fa8>
   19a10:	push	{r4, r5, fp, lr}
   19a14:	add	fp, sp, #8
   19a18:	mov	r4, r0
   19a1c:	bl	11614 <strlen@plt>
   19a20:	add	r5, r0, #1
   19a24:	mov	r0, r5
   19a28:	bl	19acc <argp_parse@@Base+0x202c>
   19a2c:	cmp	r0, #0
   19a30:	beq	19a44 <argp_parse@@Base+0x1fa4>
   19a34:	mov	r1, r4
   19a38:	mov	r2, r5
   19a3c:	pop	{r4, r5, fp, lr}
   19a40:	b	114d0 <memcpy@plt>
   19a44:	bl	19a48 <argp_parse@@Base+0x1fa8>
   19a48:	push	{fp, lr}
   19a4c:	mov	fp, sp
   19a50:	movw	r0, #54308	; 0xd424
   19a54:	movw	r2, #48651	; 0xbe0b
   19a58:	movw	r3, #50785	; 0xc661
   19a5c:	mov	r1, #0
   19a60:	movt	r0, #2
   19a64:	movt	r2, #1
   19a68:	movt	r3, #1
   19a6c:	ldr	r0, [r0]
   19a70:	bl	11584 <error@plt>
   19a74:	bl	11770 <abort@plt>
   19a78:	clz	r2, r1
   19a7c:	clz	r3, r0
   19a80:	lsr	r2, r2, #5
   19a84:	lsr	r3, r3, #5
   19a88:	orrs	r2, r3, r2
   19a8c:	movwne	r1, #1
   19a90:	movwne	r0, #1
   19a94:	cmp	r1, #0
   19a98:	beq	19ac8 <argp_parse@@Base+0x2028>
   19a9c:	mvn	r2, #-2147483648	; 0x80000000
   19aa0:	udiv	r2, r2, r1
   19aa4:	cmp	r2, r0
   19aa8:	bcs	19ac8 <argp_parse@@Base+0x2028>
   19aac:	push	{fp, lr}
   19ab0:	mov	fp, sp
   19ab4:	bl	11638 <__errno_location@plt>
   19ab8:	mov	r1, #12
   19abc:	str	r1, [r0]
   19ac0:	mov	r0, #0
   19ac4:	pop	{fp, pc}
   19ac8:	b	11428 <calloc@plt>
   19acc:	cmp	r0, #0
   19ad0:	movweq	r0, #1
   19ad4:	cmn	r0, #1
   19ad8:	ble	19ae0 <argp_parse@@Base+0x2040>
   19adc:	b	115b4 <malloc@plt>
   19ae0:	push	{fp, lr}
   19ae4:	mov	fp, sp
   19ae8:	bl	11638 <__errno_location@plt>
   19aec:	mov	r1, #12
   19af0:	str	r1, [r0]
   19af4:	mov	r0, #0
   19af8:	pop	{fp, pc}
   19afc:	push	{fp, lr}
   19b00:	mov	fp, sp
   19b04:	cmp	r0, #0
   19b08:	beq	19b24 <argp_parse@@Base+0x2084>
   19b0c:	cmp	r1, #0
   19b10:	beq	19b30 <argp_parse@@Base+0x2090>
   19b14:	cmn	r1, #1
   19b18:	ble	19b3c <argp_parse@@Base+0x209c>
   19b1c:	pop	{fp, lr}
   19b20:	b	11518 <realloc@plt>
   19b24:	mov	r0, r1
   19b28:	pop	{fp, lr}
   19b2c:	b	19acc <argp_parse@@Base+0x202c>
   19b30:	bl	18d7c <argp_parse@@Base+0x12dc>
   19b34:	mov	r0, #0
   19b38:	pop	{fp, pc}
   19b3c:	bl	11638 <__errno_location@plt>
   19b40:	mov	r1, #12
   19b44:	str	r1, [r0]
   19b48:	mov	r0, #0
   19b4c:	pop	{fp, pc}
   19b50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19b54:	add	fp, sp, #24
   19b58:	mov	r7, r0
   19b5c:	mov	r0, #36	; 0x24
   19b60:	mov	r8, r3
   19b64:	mov	r9, r2
   19b68:	mov	r6, r1
   19b6c:	bl	19acc <argp_parse@@Base+0x202c>
   19b70:	cmp	r0, #0
   19b74:	beq	19bbc <argp_parse@@Base+0x211c>
   19b78:	mov	r5, #0
   19b7c:	str	r7, [r0]
   19b80:	stmib	r0, {r6, r9}
   19b84:	str	r8, [r0, #12]
   19b88:	mov	r4, r0
   19b8c:	str	r5, [r0, #16]
   19b90:	str	r5, [r0, #20]
   19b94:	mov	r0, #200	; 0xc8
   19b98:	bl	19acc <argp_parse@@Base+0x202c>
   19b9c:	cmp	r0, #0
   19ba0:	str	r0, [r4, #24]
   19ba4:	beq	19bc8 <argp_parse@@Base+0x2128>
   19ba8:	add	r1, r0, #200	; 0xc8
   19bac:	str	r0, [r4, #28]
   19bb0:	mov	r0, r4
   19bb4:	str	r1, [r4, #32]
   19bb8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19bbc:	mov	r5, #0
   19bc0:	mov	r0, r5
   19bc4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19bc8:	mov	r0, r4
   19bcc:	bl	18d7c <argp_parse@@Base+0x12dc>
   19bd0:	mov	r0, r5
   19bd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19bd8:	push	{r4, sl, fp, lr}
   19bdc:	add	fp, sp, #8
   19be0:	mov	r4, r0
   19be4:	bl	19c1c <argp_parse@@Base+0x217c>
   19be8:	ldr	r0, [r4, #24]
   19bec:	ldr	r1, [r4, #28]
   19bf0:	cmp	r1, r0
   19bf4:	bls	19c08 <argp_parse@@Base+0x2168>
   19bf8:	ldr	r3, [r4]
   19bfc:	sub	r2, r1, r0
   19c00:	mov	r1, #1
   19c04:	bl	114e8 <fwrite_unlocked@plt>
   19c08:	ldr	r0, [r4, #24]
   19c0c:	bl	18d7c <argp_parse@@Base+0x12dc>
   19c10:	mov	r0, r4
   19c14:	pop	{r4, sl, fp, lr}
   19c18:	b	18d7c <argp_parse@@Base+0x12dc>
   19c1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c20:	add	fp, sp, #28
   19c24:	sub	sp, sp, #12
   19c28:	mov	sl, r0
   19c2c:	ldr	r0, [r0, #16]
   19c30:	ldr	r1, [sl, #24]
   19c34:	ldr	r8, [sl, #28]
   19c38:	add	r5, r1, r0
   19c3c:	cmp	r5, r8
   19c40:	bcs	1a138 <argp_parse@@Base+0x2698>
   19c44:	ldr	r7, [sl, #20]
   19c48:	mov	r3, #32
   19c4c:	cmp	r7, #0
   19c50:	bne	19c88 <argp_parse@@Base+0x21e8>
   19c54:	b	19c90 <argp_parse@@Base+0x21f0>
   19c58:	ldr	r0, [sp, #8]
   19c5c:	cmp	r7, #0
   19c60:	mvneq	r7, #0
   19c64:	str	r7, [sl, #20]
   19c68:	sub	r0, r0, r6
   19c6c:	add	r0, r0, r9
   19c70:	add	r8, r5, r0
   19c74:	str	r8, [sl, #28]
   19c78:	cmp	r5, r8
   19c7c:	bcs	1a138 <argp_parse@@Base+0x2698>
   19c80:	cmp	r7, #0
   19c84:	beq	19c90 <argp_parse@@Base+0x21f0>
   19c88:	mov	r9, r5
   19c8c:	b	19d30 <argp_parse@@Base+0x2290>
   19c90:	ldr	r7, [sl, #4]
   19c94:	cmp	r7, #0
   19c98:	beq	19e60 <argp_parse@@Base+0x23c0>
   19c9c:	ldr	r1, [sl, #32]
   19ca0:	add	r0, r8, r7
   19ca4:	mov	r4, r7
   19ca8:	cmp	r0, r1
   19cac:	bcs	19ce4 <argp_parse@@Base+0x2244>
   19cb0:	add	r9, r5, r7
   19cb4:	sub	r2, r8, r5
   19cb8:	mov	r1, r5
   19cbc:	mov	r0, r9
   19cc0:	bl	11488 <memmove@plt>
   19cc4:	ldr	r0, [sl, #28]
   19cc8:	mov	r1, #32
   19ccc:	mov	r2, r7
   19cd0:	add	r0, r0, r7
   19cd4:	str	r0, [sl, #28]
   19cd8:	mov	r0, r5
   19cdc:	bl	11668 <memset@plt>
   19ce0:	b	19d28 <argp_parse@@Base+0x2288>
   19ce4:	ldr	r0, [sl]
   19ce8:	ldr	r1, [r0, #20]
   19cec:	ldr	r2, [r0, #24]
   19cf0:	cmp	r1, r2
   19cf4:	bcs	19d10 <argp_parse@@Base+0x2270>
   19cf8:	add	r2, r1, #1
   19cfc:	str	r2, [r0, #20]
   19d00:	strb	r3, [r1]
   19d04:	subs	r4, r4, #1
   19d08:	bne	19ce4 <argp_parse@@Base+0x2244>
   19d0c:	b	19d24 <argp_parse@@Base+0x2284>
   19d10:	mov	r1, #32
   19d14:	bl	116c8 <__overflow@plt>
   19d18:	mov	r3, #32
   19d1c:	subs	r4, r4, #1
   19d20:	bne	19ce4 <argp_parse@@Base+0x2244>
   19d24:	mov	r9, r5
   19d28:	str	r7, [sl, #20]
   19d2c:	ldr	r8, [sl, #28]
   19d30:	sub	r6, r8, r9
   19d34:	mov	r0, r9
   19d38:	mov	r1, #10
   19d3c:	mov	r2, r6
   19d40:	bl	11698 <memchr@plt>
   19d44:	cmn	r7, #1
   19d48:	mov	r4, r0
   19d4c:	movle	r7, #0
   19d50:	strle	r7, [sl, #20]
   19d54:	cmp	r4, #0
   19d58:	beq	19d8c <argp_parse@@Base+0x22ec>
   19d5c:	ldr	r5, [sl, #8]
   19d60:	sub	r0, r4, r9
   19d64:	mov	r3, #32
   19d68:	add	r0, r0, r7
   19d6c:	cmp	r0, r5
   19d70:	bge	19da0 <argp_parse@@Base+0x2300>
   19d74:	mov	r7, #0
   19d78:	add	r5, r4, #1
   19d7c:	str	r7, [sl, #20]
   19d80:	cmp	r5, r8
   19d84:	bcc	19c80 <argp_parse@@Base+0x21e0>
   19d88:	b	1a138 <argp_parse@@Base+0x2698>
   19d8c:	ldr	r5, [sl, #8]
   19d90:	add	r0, r7, r6
   19d94:	mov	r4, r8
   19d98:	cmp	r0, r5
   19d9c:	bcc	1a11c <argp_parse@@Base+0x267c>
   19da0:	ldr	r0, [sl, #12]
   19da4:	cmn	r0, #1
   19da8:	str	r0, [sp, #4]
   19dac:	ble	19dfc <argp_parse@@Base+0x235c>
   19db0:	subs	r0, r5, r7
   19db4:	mov	r1, #0
   19db8:	str	r6, [sp, #8]
   19dbc:	add	r5, r9, r0
   19dc0:	bmi	19e58 <argp_parse@@Base+0x23b8>
   19dc4:	str	r0, [sp]
   19dc8:	bl	115f0 <__ctype_b_loc@plt>
   19dcc:	ldr	r0, [r0]
   19dd0:	mov	r7, r5
   19dd4:	ldrb	r1, [r7]
   19dd8:	ldrb	r1, [r0, r1, lsl #1]
   19ddc:	tst	r1, #1
   19de0:	bne	19e68 <argp_parse@@Base+0x23c8>
   19de4:	sub	r7, r7, #1
   19de8:	cmp	r7, r9
   19dec:	bcs	19dd4 <argp_parse@@Base+0x2334>
   19df0:	ldr	r0, [sp]
   19df4:	mov	r1, #0
   19df8:	b	19e70 <argp_parse@@Base+0x23d0>
   19dfc:	mov	r0, r6
   19e00:	sub	r6, r5, #1
   19e04:	cmp	r4, r8
   19e08:	bcs	1a124 <argp_parse@@Base+0x2684>
   19e0c:	sub	r0, r6, r7
   19e10:	sub	r2, r8, r4
   19e14:	mov	r1, r4
   19e18:	add	r0, r9, r0
   19e1c:	bl	11488 <memmove@plt>
   19e20:	ldr	r0, [sl, #20]
   19e24:	ldr	r1, [sl, #28]
   19e28:	mov	r7, #0
   19e2c:	mov	r3, #32
   19e30:	add	r5, r9, r5
   19e34:	str	r7, [sl, #20]
   19e38:	sub	r0, r6, r0
   19e3c:	add	r0, r9, r0
   19e40:	sub	r0, r4, r0
   19e44:	add	r8, r1, r0
   19e48:	str	r8, [sl, #28]
   19e4c:	cmp	r5, r8
   19e50:	bcc	19c80 <argp_parse@@Base+0x21e0>
   19e54:	b	1a138 <argp_parse@@Base+0x2698>
   19e58:	mov	r7, r5
   19e5c:	b	19e70 <argp_parse@@Base+0x23d0>
   19e60:	mov	r7, #0
   19e64:	b	19c88 <argp_parse@@Base+0x21e8>
   19e68:	ldr	r0, [sp]
   19e6c:	mov	r1, #1
   19e70:	add	r6, r7, #1
   19e74:	cmp	r6, r9
   19e78:	bls	19eb8 <argp_parse@@Base+0x2418>
   19e7c:	cmp	r1, #0
   19e80:	beq	19f1c <argp_parse@@Base+0x247c>
   19e84:	ldr	r4, [sp, #4]
   19e88:	sub	r1, r7, #1
   19e8c:	mov	r7, r1
   19e90:	cmp	r1, r9
   19e94:	bcc	19f20 <argp_parse@@Base+0x2480>
   19e98:	bl	115f0 <__ctype_b_loc@plt>
   19e9c:	mov	r1, r7
   19ea0:	ldr	r0, [r0]
   19ea4:	ldrb	r2, [r1], #-1
   19ea8:	ldrb	r0, [r0, r2, lsl #1]
   19eac:	tst	r0, #1
   19eb0:	bne	19e8c <argp_parse@@Base+0x23ec>
   19eb4:	b	19f20 <argp_parse@@Base+0x2480>
   19eb8:	cmp	r5, r4
   19ebc:	bcs	19ef0 <argp_parse@@Base+0x2450>
   19ec0:	add	r0, r9, r0
   19ec4:	add	r1, r0, #1
   19ec8:	mov	r5, r1
   19ecc:	cmp	r1, r4
   19ed0:	bcs	19ef0 <argp_parse@@Base+0x2450>
   19ed4:	bl	115f0 <__ctype_b_loc@plt>
   19ed8:	mov	r1, r5
   19edc:	ldr	r0, [r0]
   19ee0:	ldrb	r2, [r1], #1
   19ee4:	ldrb	r0, [r0, r2, lsl #1]
   19ee8:	tst	r0, #1
   19eec:	beq	19ec8 <argp_parse@@Base+0x2428>
   19ef0:	cmp	r5, r4
   19ef4:	beq	1a0f0 <argp_parse@@Base+0x2650>
   19ef8:	bl	115f0 <__ctype_b_loc@plt>
   19efc:	ldr	r0, [r0]
   19f00:	mov	r6, r5
   19f04:	ldrb	r1, [r6, #1]!
   19f08:	ldrb	r1, [r0, r1, lsl #1]
   19f0c:	tst	r1, #1
   19f10:	bne	19f04 <argp_parse@@Base+0x2464>
   19f14:	ldr	r4, [sp, #4]
   19f18:	b	19f24 <argp_parse@@Base+0x2484>
   19f1c:	ldr	r4, [sp, #4]
   19f20:	add	r5, r7, #1
   19f24:	mov	r3, #32
   19f28:	add	r0, r8, #1
   19f2c:	cmp	r6, r0
   19f30:	beq	19f54 <argp_parse@@Base+0x24b4>
   19f34:	cmp	r8, r6
   19f38:	bls	19fbc <argp_parse@@Base+0x251c>
   19f3c:	mvn	r0, r5
   19f40:	add	r0, r0, r6
   19f44:	cmp	r0, r4
   19f48:	bge	19fbc <argp_parse@@Base+0x251c>
   19f4c:	ldr	r0, [sl, #32]
   19f50:	b	19f6c <argp_parse@@Base+0x24cc>
   19f54:	cmp	r8, r6
   19f58:	bls	19fbc <argp_parse@@Base+0x251c>
   19f5c:	ldr	r0, [sl, #32]
   19f60:	sub	r1, r0, r5
   19f64:	cmp	r1, r4
   19f68:	bgt	19fbc <argp_parse@@Base+0x251c>
   19f6c:	sub	r0, r0, r8
   19f70:	add	r1, r4, #1
   19f74:	cmp	r0, r1
   19f78:	ble	19fc8 <argp_parse@@Base+0x2528>
   19f7c:	mov	r0, r4
   19f80:	sub	r4, r8, r6
   19f84:	add	r7, r5, #1
   19f88:	mov	r1, r6
   19f8c:	add	r0, r7, r0
   19f90:	mov	r2, r4
   19f94:	bl	11488 <memmove@plt>
   19f98:	ldr	r0, [sl, #12]
   19f9c:	mov	r1, #10
   19fa0:	mov	r3, #32
   19fa4:	strb	r1, [r5]
   19fa8:	mov	r5, r7
   19fac:	add	r6, r7, r0
   19fb0:	add	r0, r6, r4
   19fb4:	sub	r0, r0, r9
   19fb8:	b	1a018 <argp_parse@@Base+0x2578>
   19fbc:	mov	r0, #10
   19fc0:	strb	r0, [r5], #1
   19fc4:	b	1a01c <argp_parse@@Base+0x257c>
   19fc8:	ldr	r0, [sl, #24]
   19fcc:	cmp	r5, r0
   19fd0:	bls	19fe8 <argp_parse@@Base+0x2548>
   19fd4:	ldr	r3, [sl]
   19fd8:	sub	r2, r5, r0
   19fdc:	mov	r1, #1
   19fe0:	bl	114e8 <fwrite_unlocked@plt>
   19fe4:	mov	r3, #32
   19fe8:	ldr	r0, [sl]
   19fec:	ldr	r1, [r0, #20]
   19ff0:	ldr	r2, [r0, #24]
   19ff4:	cmp	r1, r2
   19ff8:	bcs	1a10c <argp_parse@@Base+0x266c>
   19ffc:	add	r2, r1, #1
   1a000:	str	r2, [r0, #20]
   1a004:	mov	r0, #10
   1a008:	strb	r0, [r1]
   1a00c:	ldr	r5, [sl, #24]
   1a010:	sub	r0, r8, r5
   1a014:	mov	r9, r5
   1a018:	str	r0, [sp, #8]
   1a01c:	ldr	r7, [sl, #12]
   1a020:	sub	r0, r6, r5
   1a024:	cmp	r0, r7
   1a028:	bge	1a0a0 <argp_parse@@Base+0x2600>
   1a02c:	ldr	r0, [sp, #8]
   1a030:	add	r0, r9, r0
   1a034:	add	r0, r0, #1
   1a038:	cmp	r6, r0
   1a03c:	bne	1a050 <argp_parse@@Base+0x25b0>
   1a040:	ldr	r0, [sl, #32]
   1a044:	sub	r0, r0, r6
   1a048:	cmp	r0, r7
   1a04c:	bge	1a0a0 <argp_parse@@Base+0x2600>
   1a050:	cmp	r7, #1
   1a054:	blt	1a0c4 <argp_parse@@Base+0x2624>
   1a058:	mov	r4, #0
   1a05c:	ldr	r0, [sl]
   1a060:	ldr	r1, [r0, #20]
   1a064:	ldr	r2, [r0, #24]
   1a068:	cmp	r1, r2
   1a06c:	bcs	1a090 <argp_parse@@Base+0x25f0>
   1a070:	add	r2, r1, #1
   1a074:	str	r2, [r0, #20]
   1a078:	strb	r3, [r1]
   1a07c:	ldr	r7, [sl, #12]
   1a080:	add	r4, r4, #1
   1a084:	cmp	r4, r7
   1a088:	blt	1a05c <argp_parse@@Base+0x25bc>
   1a08c:	b	1a0c4 <argp_parse@@Base+0x2624>
   1a090:	mov	r1, #32
   1a094:	bl	116c8 <__overflow@plt>
   1a098:	mov	r3, #32
   1a09c:	b	1a07c <argp_parse@@Base+0x25dc>
   1a0a0:	cmp	r7, #1
   1a0a4:	blt	1a0c4 <argp_parse@@Base+0x2624>
   1a0a8:	mov	r0, #0
   1a0ac:	strb	r3, [r5, r0]
   1a0b0:	add	r0, r0, #1
   1a0b4:	ldr	r7, [sl, #12]
   1a0b8:	cmp	r0, r7
   1a0bc:	blt	1a0ac <argp_parse@@Base+0x260c>
   1a0c0:	add	r5, r5, r0
   1a0c4:	cmp	r5, r6
   1a0c8:	bcs	19c58 <argp_parse@@Base+0x21b8>
   1a0cc:	ldr	r0, [sp, #8]
   1a0d0:	mov	r1, r6
   1a0d4:	add	r0, r9, r0
   1a0d8:	sub	r2, r0, r6
   1a0dc:	mov	r0, r5
   1a0e0:	bl	11488 <memmove@plt>
   1a0e4:	ldr	r7, [sl, #12]
   1a0e8:	mov	r3, #32
   1a0ec:	b	19c58 <argp_parse@@Base+0x21b8>
   1a0f0:	mov	r7, #0
   1a0f4:	add	r5, r4, #1
   1a0f8:	mov	r3, #32
   1a0fc:	str	r7, [sl, #20]
   1a100:	cmp	r5, r8
   1a104:	bcc	19c80 <argp_parse@@Base+0x21e0>
   1a108:	b	1a138 <argp_parse@@Base+0x2698>
   1a10c:	mov	r1, #10
   1a110:	bl	116c8 <__overflow@plt>
   1a114:	mov	r3, #32
   1a118:	b	1a00c <argp_parse@@Base+0x256c>
   1a11c:	str	r0, [sl, #20]
   1a120:	b	1a138 <argp_parse@@Base+0x2698>
   1a124:	add	r0, r7, r0
   1a128:	str	r0, [sl, #20]
   1a12c:	sub	r0, r6, r0
   1a130:	add	r8, r8, r0
   1a134:	str	r8, [sl, #28]
   1a138:	ldr	r0, [sl, #24]
   1a13c:	sub	r0, r8, r0
   1a140:	str	r0, [sl, #16]
   1a144:	sub	sp, fp, #28
   1a148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a14c:	push	{r4, r5, r6, sl, fp, lr}
   1a150:	add	fp, sp, #16
   1a154:	mov	r4, r0
   1a158:	mov	r5, r1
   1a15c:	ldr	r0, [r0, #28]
   1a160:	mov	r6, #1
   1a164:	ldr	r1, [r4, #32]
   1a168:	sub	r0, r1, r0
   1a16c:	cmp	r0, r5
   1a170:	bcs	1a230 <argp_parse@@Base+0x2790>
   1a174:	mov	r0, r4
   1a178:	bl	19c1c <argp_parse@@Base+0x217c>
   1a17c:	ldr	r0, [r4, #24]
   1a180:	ldr	r1, [r4, #28]
   1a184:	ldr	r3, [r4]
   1a188:	sub	r2, r1, r0
   1a18c:	mov	r1, #1
   1a190:	bl	114e8 <fwrite_unlocked@plt>
   1a194:	mov	r1, r0
   1a198:	ldr	r0, [r4, #24]
   1a19c:	ldr	r2, [r4, #28]
   1a1a0:	sub	r3, r2, r0
   1a1a4:	cmp	r1, r3
   1a1a8:	bne	1a1fc <argp_parse@@Base+0x275c>
   1a1ac:	mov	r1, #0
   1a1b0:	mov	r6, #1
   1a1b4:	str	r1, [r4, #16]
   1a1b8:	str	r0, [r4, #28]
   1a1bc:	ldr	r1, [r4, #32]
   1a1c0:	sub	r1, r1, r0
   1a1c4:	cmp	r1, r5
   1a1c8:	bcs	1a230 <argp_parse@@Base+0x2790>
   1a1cc:	adds	r5, r1, r5
   1a1d0:	bcs	1a220 <argp_parse@@Base+0x2780>
   1a1d4:	mov	r1, r5
   1a1d8:	bl	19afc <argp_parse@@Base+0x205c>
   1a1dc:	cmp	r0, #0
   1a1e0:	beq	1a220 <argp_parse@@Base+0x2780>
   1a1e4:	str	r0, [r4, #24]
   1a1e8:	add	r1, r0, r5
   1a1ec:	str	r0, [r4, #28]
   1a1f0:	mov	r0, r6
   1a1f4:	str	r1, [r4, #32]
   1a1f8:	pop	{r4, r5, r6, sl, fp, pc}
   1a1fc:	sub	r2, r2, r1
   1a200:	str	r2, [r4, #28]
   1a204:	sub	r2, r2, r0
   1a208:	ldr	r3, [r4, #16]
   1a20c:	sub	r3, r3, r1
   1a210:	add	r1, r0, r1
   1a214:	str	r3, [r4, #16]
   1a218:	bl	11488 <memmove@plt>
   1a21c:	b	1a22c <argp_parse@@Base+0x278c>
   1a220:	bl	11638 <__errno_location@plt>
   1a224:	mov	r1, #12
   1a228:	str	r1, [r0]
   1a22c:	mov	r6, #0
   1a230:	mov	r0, r6
   1a234:	pop	{r4, r5, r6, sl, fp, pc}
   1a238:	sub	sp, sp, #8
   1a23c:	push	{r4, r5, r6, r7, fp, lr}
   1a240:	add	fp, sp, #16
   1a244:	sub	sp, sp, #8
   1a248:	mov	r5, r1
   1a24c:	mov	r4, r0
   1a250:	mov	r1, #150	; 0x96
   1a254:	add	r6, fp, #8
   1a258:	str	r2, [fp, #8]
   1a25c:	str	r3, [fp, #12]
   1a260:	mov	r0, r4
   1a264:	bl	1a14c <argp_parse@@Base+0x26ac>
   1a268:	cmp	r0, #0
   1a26c:	beq	1a2ac <argp_parse@@Base+0x280c>
   1a270:	str	r6, [sp, #4]
   1a274:	mov	r2, r5
   1a278:	mov	r3, r6
   1a27c:	ldr	r0, [r4, #28]
   1a280:	ldr	r1, [r4, #32]
   1a284:	sub	r7, r1, r0
   1a288:	mov	r1, r7
   1a28c:	bl	1171c <vsnprintf@plt>
   1a290:	add	r1, r0, #1
   1a294:	cmp	r0, r7
   1a298:	bcs	1a260 <argp_parse@@Base+0x27c0>
   1a29c:	ldr	r1, [r4, #28]
   1a2a0:	add	r1, r1, r0
   1a2a4:	str	r1, [r4, #28]
   1a2a8:	b	1a2b0 <argp_parse@@Base+0x2810>
   1a2ac:	mvn	r0, #0
   1a2b0:	sub	sp, fp, #16
   1a2b4:	pop	{r4, r5, r6, r7, fp, lr}
   1a2b8:	add	sp, sp, #8
   1a2bc:	bx	lr
   1a2c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a2c4:	add	fp, sp, #28
   1a2c8:	sub	sp, sp, #92	; 0x5c
   1a2cc:	mvn	r4, #0
   1a2d0:	cmp	r0, #1
   1a2d4:	blt	1adb8 <argp_parse@@Base+0x3318>
   1a2d8:	ldr	ip, [fp, #16]
   1a2dc:	mov	r9, r2
   1a2e0:	mov	r2, r0
   1a2e4:	mov	r8, r1
   1a2e8:	mov	r0, #0
   1a2ec:	str	r3, [fp, #-48]	; 0xffffffd0
   1a2f0:	ldr	r6, [ip]
   1a2f4:	ldr	r4, [ip, #4]
   1a2f8:	str	r0, [ip, #12]
   1a2fc:	cmp	r6, #0
   1a300:	beq	1a324 <argp_parse@@Base+0x2884>
   1a304:	ldr	r0, [ip, #16]
   1a308:	cmp	r0, #0
   1a30c:	beq	1a32c <argp_parse@@Base+0x288c>
   1a310:	ldrb	r0, [r9]
   1a314:	cmp	r0, #45	; 0x2d
   1a318:	cmpne	r0, #43	; 0x2b
   1a31c:	addeq	r9, r9, #1
   1a320:	b	1a3a0 <argp_parse@@Base+0x2900>
   1a324:	mov	r6, #1
   1a328:	str	r6, [ip]
   1a32c:	mov	r0, #0
   1a330:	str	r6, [ip, #28]
   1a334:	str	r6, [ip, #32]
   1a338:	str	r0, [ip, #20]
   1a33c:	ldrb	r1, [r9]
   1a340:	cmp	r1, #43	; 0x2b
   1a344:	beq	1a354 <argp_parse@@Base+0x28b4>
   1a348:	cmp	r1, #45	; 0x2d
   1a34c:	bne	1a360 <argp_parse@@Base+0x28c0>
   1a350:	mov	r0, #2
   1a354:	str	r0, [ip, #24]
   1a358:	add	r9, r9, #1
   1a35c:	b	1a398 <argp_parse@@Base+0x28f8>
   1a360:	ldr	r0, [fp, #20]
   1a364:	cmp	r0, #0
   1a368:	bne	1a390 <argp_parse@@Base+0x28f0>
   1a36c:	movw	r0, #50875	; 0xc6bb
   1a370:	mov	r5, ip
   1a374:	mov	r7, r2
   1a378:	movt	r0, #1
   1a37c:	bl	1159c <getenv@plt>
   1a380:	mov	r2, r7
   1a384:	mov	ip, r5
   1a388:	cmp	r0, #0
   1a38c:	beq	1adc4 <argp_parse@@Base+0x3324>
   1a390:	mov	r0, #0
   1a394:	str	r0, [ip, #24]
   1a398:	mov	r0, #1
   1a39c:	str	r0, [ip, #16]
   1a3a0:	ldrb	r0, [r9]
   1a3a4:	ldr	r5, [ip, #20]
   1a3a8:	str	r8, [fp, #-32]	; 0xffffffe0
   1a3ac:	subs	r1, r0, #58	; 0x3a
   1a3b0:	movne	r1, r4
   1a3b4:	cmp	r5, #0
   1a3b8:	str	r1, [fp, #-44]	; 0xffffffd4
   1a3bc:	beq	1a428 <argp_parse@@Base+0x2988>
   1a3c0:	ldrb	r0, [r5]
   1a3c4:	cmp	r0, #0
   1a3c8:	beq	1a428 <argp_parse@@Base+0x2988>
   1a3cc:	str	r2, [fp, #-36]	; 0xffffffdc
   1a3d0:	add	r8, r5, #1
   1a3d4:	mov	r0, r9
   1a3d8:	mov	r7, ip
   1a3dc:	str	r8, [ip, #20]
   1a3e0:	ldrb	r4, [r5]
   1a3e4:	mov	r1, r4
   1a3e8:	bl	11620 <strchr@plt>
   1a3ec:	ldrb	r1, [r5, #1]
   1a3f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a3f4:	cmp	r1, #0
   1a3f8:	orr	r1, r4, #1
   1a3fc:	addeq	r6, r6, #1
   1a400:	streq	r6, [r7]
   1a404:	cmp	r1, #59	; 0x3b
   1a408:	cmpne	r0, #0
   1a40c:	bne	1a488 <argp_parse@@Base+0x29e8>
   1a410:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a414:	cmp	r0, #0
   1a418:	bne	1adf8 <argp_parse@@Base+0x3358>
   1a41c:	str	r4, [r7, #8]
   1a420:	mov	r4, #63	; 0x3f
   1a424:	b	1adb8 <argp_parse@@Base+0x3318>
   1a428:	mov	r3, ip
   1a42c:	str	r9, [sp, #48]	; 0x30
   1a430:	mov	r5, ip
   1a434:	ldr	r9, [r3, #32]!
   1a438:	cmp	r9, r6
   1a43c:	strgt	r6, [r3]
   1a440:	movgt	r9, r6
   1a444:	ldr	r7, [r5, #28]!
   1a448:	cmp	r7, r6
   1a44c:	strgt	r6, [r5]
   1a450:	movgt	r7, r6
   1a454:	ldr	r4, [ip, #24]
   1a458:	cmp	r4, #1
   1a45c:	bne	1a900 <argp_parse@@Base+0x2e60>
   1a460:	cmp	r7, r9
   1a464:	cmpne	r9, r6
   1a468:	bne	1a50c <argp_parse@@Base+0x2a6c>
   1a46c:	cmp	r9, r6
   1a470:	mov	r1, r5
   1a474:	mov	r0, r6
   1a478:	bne	1a8ac <argp_parse@@Base+0x2e0c>
   1a47c:	cmp	r6, r2
   1a480:	blt	1a8d0 <argp_parse@@Base+0x2e30>
   1a484:	b	1a8ec <argp_parse@@Base+0x2e4c>
   1a488:	ldrb	r2, [r0]
   1a48c:	ldrb	r1, [r0, #1]
   1a490:	cmp	r2, #87	; 0x57
   1a494:	bne	1a4e4 <argp_parse@@Base+0x2a44>
   1a498:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a49c:	cmp	r2, #0
   1a4a0:	beq	1a4e4 <argp_parse@@Base+0x2a44>
   1a4a4:	cmp	r1, #59	; 0x3b
   1a4a8:	bne	1a4e4 <argp_parse@@Base+0x2a44>
   1a4ac:	ldrb	r0, [r8]
   1a4b0:	cmp	r0, #0
   1a4b4:	bne	1ae28 <argp_parse@@Base+0x3388>
   1a4b8:	cmp	r6, r3
   1a4bc:	bne	1ae20 <argp_parse@@Base+0x3380>
   1a4c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4c4:	cmp	r0, #0
   1a4c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a4cc:	bne	1af20 <argp_parse@@Base+0x3480>
   1a4d0:	str	r4, [r7, #8]
   1a4d4:	ldrb	r4, [r9]
   1a4d8:	cmp	r4, #58	; 0x3a
   1a4dc:	movwne	r4, #63	; 0x3f
   1a4e0:	b	1adb8 <argp_parse@@Base+0x3318>
   1a4e4:	cmp	r1, #58	; 0x3a
   1a4e8:	bne	1adb8 <argp_parse@@Base+0x3318>
   1a4ec:	ldrb	r0, [r0, #2]
   1a4f0:	ldrb	r1, [r8]
   1a4f4:	cmp	r0, #58	; 0x3a
   1a4f8:	bne	1aa08 <argp_parse@@Base+0x2f68>
   1a4fc:	cmp	r1, #0
   1a500:	bne	1aa10 <argp_parse@@Base+0x2f70>
   1a504:	mov	r0, #0
   1a508:	b	1aee8 <argp_parse@@Base+0x3448>
   1a50c:	cmp	r6, r9
   1a510:	str	r4, [sp, #28]
   1a514:	str	r5, [sp, #56]	; 0x38
   1a518:	str	r7, [fp, #-40]	; 0xffffffd8
   1a51c:	str	r3, [sp, #52]	; 0x34
   1a520:	str	r2, [fp, #-36]	; 0xffffffdc
   1a524:	ble	1a888 <argp_parse@@Base+0x2de8>
   1a528:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a52c:	cmp	r0, r9
   1a530:	bge	1a888 <argp_parse@@Base+0x2de8>
   1a534:	add	r0, r8, r9, lsl #2
   1a538:	ldr	lr, [fp, #-40]	; 0xffffffd8
   1a53c:	mov	r2, r6
   1a540:	str	r0, [fp, #-52]	; 0xffffffcc
   1a544:	sub	r0, r8, r9, lsl #2
   1a548:	str	r0, [sp, #32]
   1a54c:	rsb	r0, r9, #1
   1a550:	add	r0, r8, r0, lsl #2
   1a554:	str	r0, [sp, #44]	; 0x2c
   1a558:	mvn	r0, r9
   1a55c:	str	r0, [fp, #-56]	; 0xffffffc8
   1a560:	add	r0, r8, r0, lsl #2
   1a564:	add	r0, r0, #4
   1a568:	str	r0, [sp, #24]
   1a56c:	add	r0, r8, #4
   1a570:	str	r0, [sp, #60]	; 0x3c
   1a574:	b	1a588 <argp_parse@@Base+0x2ae8>
   1a578:	mov	r2, sl
   1a57c:	cmp	r2, r9
   1a580:	cmpgt	r9, lr
   1a584:	ble	1a888 <argp_parse@@Base+0x2de8>
   1a588:	sub	r4, r9, lr
   1a58c:	sub	r0, r2, r9
   1a590:	cmp	r0, r4
   1a594:	ble	1a644 <argp_parse@@Base+0x2ba4>
   1a598:	sub	sl, r2, r4
   1a59c:	cmp	r4, #1
   1a5a0:	blt	1a578 <argp_parse@@Base+0x2ad8>
   1a5a4:	mov	r3, #0
   1a5a8:	cmp	r4, #4
   1a5ac:	bcc	1a72c <argp_parse@@Base+0x2c8c>
   1a5b0:	add	r5, r8, r2, lsl #2
   1a5b4:	add	r1, r8, lr, lsl #2
   1a5b8:	cmp	r1, r5
   1a5bc:	bcs	1a5d0 <argp_parse@@Base+0x2b30>
   1a5c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a5c4:	add	r5, r8, sl, lsl #2
   1a5c8:	cmp	r5, r0
   1a5cc:	bcc	1a72c <argp_parse@@Base+0x2c8c>
   1a5d0:	bic	r3, r4, #3
   1a5d4:	mov	r0, #1
   1a5d8:	str	sl, [sp, #40]	; 0x28
   1a5dc:	subs	r5, r3, #4
   1a5e0:	add	r5, r0, r5, lsr #2
   1a5e4:	and	r0, r5, #1
   1a5e8:	str	r0, [sp, #36]	; 0x24
   1a5ec:	beq	1a6e8 <argp_parse@@Base+0x2c48>
   1a5f0:	sub	r8, r5, r0
   1a5f4:	ldr	r0, [sp, #24]
   1a5f8:	add	r5, r2, lr
   1a5fc:	mov	r7, #0
   1a600:	add	sl, r0, r5, lsl #2
   1a604:	mov	r5, #0
   1a608:	add	ip, r1, r5
   1a60c:	add	r0, sl, r5
   1a610:	add	r5, r5, #32
   1a614:	subs	r8, r8, #2
   1a618:	add	r7, r7, #8
   1a61c:	vld1.32	{d16-d17}, [r0]
   1a620:	vld1.32	{d18-d19}, [ip]
   1a624:	vst1.32	{d16-d17}, [ip]!
   1a628:	vst1.32	{d18-d19}, [r0]!
   1a62c:	vld1.32	{d16-d17}, [r0]
   1a630:	vld1.32	{d18-d19}, [ip]
   1a634:	vst1.32	{d16-d17}, [ip]
   1a638:	vst1.32	{d18-d19}, [r0]
   1a63c:	bne	1a608 <argp_parse@@Base+0x2b68>
   1a640:	b	1a6ec <argp_parse@@Base+0x2c4c>
   1a644:	cmp	r0, #1
   1a648:	blt	1a87c <argp_parse@@Base+0x2ddc>
   1a64c:	mov	sl, #0
   1a650:	cmp	r0, #3
   1a654:	bls	1a7f8 <argp_parse@@Base+0x2d58>
   1a658:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a65c:	add	r1, r3, r2, lsl #2
   1a660:	add	r8, r3, lr, lsl #2
   1a664:	cmp	r8, r1
   1a668:	bcs	1a684 <argp_parse@@Base+0x2be4>
   1a66c:	ldr	r3, [sp, #32]
   1a670:	add	r1, r2, lr
   1a674:	add	r1, r3, r1, lsl #2
   1a678:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a67c:	cmp	r3, r1
   1a680:	bcc	1a7f8 <argp_parse@@Base+0x2d58>
   1a684:	bic	sl, r0, #3
   1a688:	mov	r3, #1
   1a68c:	subs	r1, sl, #4
   1a690:	add	r1, r3, r1, lsr #2
   1a694:	and	r3, r1, #1
   1a698:	str	r3, [sp, #40]	; 0x28
   1a69c:	beq	1a7b8 <argp_parse@@Base+0x2d18>
   1a6a0:	sub	r7, r3, r1
   1a6a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a6a8:	mov	r1, #0
   1a6ac:	mov	ip, #32
   1a6b0:	mov	r5, r3
   1a6b4:	mov	r4, r8
   1a6b8:	adds	r7, r7, #2
   1a6bc:	add	r1, r1, #8
   1a6c0:	vld1.32	{d16-d17}, [r5]!
   1a6c4:	vld1.32	{d18-d19}, [r4]!
   1a6c8:	vst1.32	{d16-d17}, [r8], ip
   1a6cc:	vst1.32	{d18-d19}, [r3], ip
   1a6d0:	vld1.32	{d16-d17}, [r5]
   1a6d4:	vld1.32	{d18-d19}, [r4]
   1a6d8:	vst1.32	{d16-d17}, [r4]
   1a6dc:	vst1.32	{d18-d19}, [r5]
   1a6e0:	bne	1a6b0 <argp_parse@@Base+0x2c10>
   1a6e4:	b	1a7bc <argp_parse@@Base+0x2d1c>
   1a6e8:	mov	r7, #0
   1a6ec:	ldr	r0, [sp, #36]	; 0x24
   1a6f0:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1a6f4:	ldr	sl, [sp, #40]	; 0x28
   1a6f8:	cmp	r0, #0
   1a6fc:	beq	1a720 <argp_parse@@Base+0x2c80>
   1a700:	add	r0, r7, lr
   1a704:	add	r1, r7, sl
   1a708:	add	r0, r8, r0, lsl #2
   1a70c:	add	r1, r8, r1, lsl #2
   1a710:	vld1.32	{d16-d17}, [r1]
   1a714:	vld1.32	{d18-d19}, [r0]
   1a718:	vst1.32	{d16-d17}, [r0]
   1a71c:	vst1.32	{d18-d19}, [r1]
   1a720:	ldr	ip, [fp, #16]
   1a724:	cmp	r4, r3
   1a728:	beq	1a578 <argp_parse@@Base+0x2ad8>
   1a72c:	mvn	r0, r3
   1a730:	tst	r4, #1
   1a734:	add	r1, r9, r0
   1a738:	beq	1a758 <argp_parse@@Base+0x2cb8>
   1a73c:	add	r0, r3, lr
   1a740:	add	r5, r3, sl
   1a744:	orr	r3, r3, #1
   1a748:	ldr	r7, [r8, r0, lsl #2]
   1a74c:	ldr	r4, [r8, r5, lsl #2]
   1a750:	str	r4, [r8, r0, lsl #2]
   1a754:	str	r7, [r8, r5, lsl #2]
   1a758:	cmp	r1, lr
   1a75c:	beq	1a578 <argp_parse@@Base+0x2ad8>
   1a760:	ldr	r4, [sp, #60]	; 0x3c
   1a764:	add	r0, lr, r3
   1a768:	sub	r1, r9, r3
   1a76c:	add	r4, r4, r0, lsl #2
   1a770:	add	r0, r2, lr
   1a774:	ldr	r2, [sp, #44]	; 0x2c
   1a778:	add	r0, r0, r3
   1a77c:	add	r2, r2, r0, lsl #2
   1a780:	ldr	r0, [r4, #-4]
   1a784:	ldr	r3, [r2, #-4]
   1a788:	sub	r1, r1, #2
   1a78c:	cmp	lr, r1
   1a790:	str	r3, [r4, #-4]
   1a794:	str	r0, [r2, #-4]
   1a798:	ldr	r0, [r4]
   1a79c:	ldr	r3, [r2]
   1a7a0:	str	r3, [r4]
   1a7a4:	str	r0, [r2]
   1a7a8:	add	r2, r2, #8
   1a7ac:	add	r4, r4, #8
   1a7b0:	bne	1a780 <argp_parse@@Base+0x2ce0>
   1a7b4:	b	1a578 <argp_parse@@Base+0x2ad8>
   1a7b8:	mov	r1, #0
   1a7bc:	ldr	r3, [sp, #40]	; 0x28
   1a7c0:	ldr	ip, [fp, #16]
   1a7c4:	cmp	r3, #0
   1a7c8:	beq	1a7f0 <argp_parse@@Base+0x2d50>
   1a7cc:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1a7d0:	add	r3, r1, lr
   1a7d4:	add	r1, r1, r9
   1a7d8:	add	r3, r4, r3, lsl #2
   1a7dc:	add	r1, r4, r1, lsl #2
   1a7e0:	vld1.32	{d16-d17}, [r1]
   1a7e4:	vld1.32	{d18-d19}, [r3]
   1a7e8:	vst1.32	{d16-d17}, [r3]
   1a7ec:	vst1.32	{d18-d19}, [r1]
   1a7f0:	cmp	r0, sl
   1a7f4:	beq	1a87c <argp_parse@@Base+0x2ddc>
   1a7f8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1a7fc:	tst	r0, #1
   1a800:	mov	r4, sl
   1a804:	add	r1, r2, r1
   1a808:	beq	1a82c <argp_parse@@Base+0x2d8c>
   1a80c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a810:	add	r7, sl, r9
   1a814:	add	r4, sl, lr
   1a818:	ldr	r5, [r3, r7, lsl #2]
   1a81c:	ldr	r8, [r3, r4, lsl #2]
   1a820:	str	r5, [r3, r4, lsl #2]
   1a824:	orr	r4, sl, #1
   1a828:	str	r8, [r3, r7, lsl #2]
   1a82c:	cmp	r1, sl
   1a830:	beq	1a87c <argp_parse@@Base+0x2ddc>
   1a834:	ldr	r3, [sp, #60]	; 0x3c
   1a838:	add	r1, lr, r4
   1a83c:	add	r4, r9, r4
   1a840:	add	r1, r3, r1, lsl #2
   1a844:	add	r3, r3, r4, lsl #2
   1a848:	sub	r4, r4, r2
   1a84c:	ldr	r7, [r1, #-4]
   1a850:	ldr	r5, [r3, #-4]
   1a854:	adds	r4, r4, #2
   1a858:	str	r5, [r1, #-4]
   1a85c:	str	r7, [r3, #-4]
   1a860:	ldr	r7, [r1]
   1a864:	ldr	r5, [r3]
   1a868:	str	r5, [r1]
   1a86c:	str	r7, [r3]
   1a870:	add	r1, r1, #8
   1a874:	add	r3, r3, #8
   1a878:	bne	1a84c <argp_parse@@Base+0x2dac>
   1a87c:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1a880:	add	lr, r0, lr
   1a884:	b	1a57c <argp_parse@@Base+0x2adc>
   1a888:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a88c:	ldr	r3, [sp, #52]	; 0x34
   1a890:	ldr	r5, [sp, #56]	; 0x38
   1a894:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a898:	ldr	r4, [sp, #28]
   1a89c:	add	r0, r0, r6
   1a8a0:	mov	r1, r3
   1a8a4:	sub	r0, r0, r9
   1a8a8:	str	r0, [r5]
   1a8ac:	mov	r7, r0
   1a8b0:	str	r6, [r1]
   1a8b4:	cmp	r6, r2
   1a8b8:	blt	1a8d0 <argp_parse@@Base+0x2e30>
   1a8bc:	b	1a8ec <argp_parse@@Base+0x2e4c>
   1a8c0:	add	r6, r6, #1
   1a8c4:	cmp	r2, r6
   1a8c8:	str	r6, [ip]
   1a8cc:	beq	1a8f4 <argp_parse@@Base+0x2e54>
   1a8d0:	ldr	r0, [r8, r6, lsl #2]
   1a8d4:	ldrb	r1, [r0]
   1a8d8:	cmp	r1, #45	; 0x2d
   1a8dc:	bne	1a8c0 <argp_parse@@Base+0x2e20>
   1a8e0:	ldrb	r0, [r0, #1]
   1a8e4:	cmp	r0, #0
   1a8e8:	beq	1a8c0 <argp_parse@@Base+0x2e20>
   1a8ec:	mov	r9, r6
   1a8f0:	b	1a8f8 <argp_parse@@Base+0x2e58>
   1a8f4:	mov	r9, r2
   1a8f8:	mov	r6, r9
   1a8fc:	str	r9, [r3]
   1a900:	cmp	r6, r2
   1a904:	beq	1adac <argp_parse@@Base+0x330c>
   1a908:	mov	sl, r4
   1a90c:	movw	r4, #49819	; 0xc29b
   1a910:	ldr	r0, [r8, r6, lsl #2]
   1a914:	str	r5, [sp, #56]	; 0x38
   1a918:	str	r7, [fp, #-40]	; 0xffffffd8
   1a91c:	str	r3, [sp, #52]	; 0x34
   1a920:	str	r2, [fp, #-36]	; 0xffffffdc
   1a924:	movt	r4, #1
   1a928:	mov	r1, r4
   1a92c:	bl	11440 <strcmp@plt>
   1a930:	cmp	r0, #0
   1a934:	beq	1a9b8 <argp_parse@@Base+0x2f18>
   1a938:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a93c:	ldr	ip, [fp, #16]
   1a940:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1a944:	cmp	r6, r2
   1a948:	beq	1adac <argp_parse@@Base+0x330c>
   1a94c:	ldr	r5, [r8, r6, lsl #2]
   1a950:	mov	r3, r4
   1a954:	mvn	r4, #0
   1a958:	ldrb	r0, [r5]
   1a95c:	cmp	r0, #45	; 0x2d
   1a960:	bne	1a9f0 <argp_parse@@Base+0x2f50>
   1a964:	mov	r7, r5
   1a968:	ldrb	r1, [r7, #1]!
   1a96c:	cmp	r1, #0
   1a970:	beq	1a9f0 <argp_parse@@Base+0x2f50>
   1a974:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a978:	cmp	r0, #0
   1a97c:	beq	1af10 <argp_parse@@Base+0x3470>
   1a980:	ldr	r9, [fp, #12]
   1a984:	cmp	r1, #45	; 0x2d
   1a988:	bne	1ae74 <argp_parse@@Base+0x33d4>
   1a98c:	add	r0, r5, #2
   1a990:	mov	r1, r8
   1a994:	str	r0, [ip, #20]
   1a998:	ldr	r0, [fp, #8]
   1a99c:	stm	sp, {r0, r9, ip}
   1a9a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9a4:	str	r3, [sp, #16]
   1a9a8:	str	r0, [sp, #12]
   1a9ac:	mov	r0, r2
   1a9b0:	ldr	r2, [sp, #48]	; 0x30
   1a9b4:	b	1ae64 <argp_parse@@Base+0x33c4>
   1a9b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a9bc:	ldr	ip, [fp, #16]
   1a9c0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1a9c4:	add	r2, r6, #1
   1a9c8:	cmp	r0, r9
   1a9cc:	str	r2, [ip]
   1a9d0:	cmpne	r9, r2
   1a9d4:	bne	1aa20 <argp_parse@@Base+0x2f80>
   1a9d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a9dc:	ldr	r1, [sp, #56]	; 0x38
   1a9e0:	cmp	r0, r9
   1a9e4:	mov	r0, r2
   1a9e8:	beq	1ad94 <argp_parse@@Base+0x32f4>
   1a9ec:	b	1ad9c <argp_parse@@Base+0x32fc>
   1a9f0:	cmp	sl, #0
   1a9f4:	addne	r0, r6, #1
   1a9f8:	strne	r5, [ip, #12]
   1a9fc:	movne	r4, #1
   1aa00:	strne	r0, [ip]
   1aa04:	b	1adb8 <argp_parse@@Base+0x3318>
   1aa08:	cmp	r1, #0
   1aa0c:	beq	1adcc <argp_parse@@Base+0x332c>
   1aa10:	add	r0, r6, #1
   1aa14:	str	r8, [r7, #12]
   1aa18:	str	r0, [r7]
   1aa1c:	b	1aeec <argp_parse@@Base+0x344c>
   1aa20:	cmp	r6, r9
   1aa24:	str	r2, [sp, #48]	; 0x30
   1aa28:	blt	1ad74 <argp_parse@@Base+0x32d4>
   1aa2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aa30:	cmp	r0, r9
   1aa34:	bge	1ad74 <argp_parse@@Base+0x32d4>
   1aa38:	add	r0, r8, r9, lsl #2
   1aa3c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1aa40:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa44:	sub	r0, r8, r9, lsl #2
   1aa48:	str	r0, [sp, #44]	; 0x2c
   1aa4c:	rsb	r0, r9, #1
   1aa50:	add	r0, r8, r0, lsl #2
   1aa54:	str	r0, [fp, #-56]	; 0xffffffc8
   1aa58:	mvn	r0, r9
   1aa5c:	str	r0, [fp, #-48]	; 0xffffffd0
   1aa60:	add	r0, r8, r0, lsl #2
   1aa64:	add	r0, r0, #4
   1aa68:	str	r0, [sp, #40]	; 0x28
   1aa6c:	add	r0, r8, #4
   1aa70:	str	r0, [fp, #-52]	; 0xffffffcc
   1aa74:	ldr	r0, [sp, #48]	; 0x30
   1aa78:	b	1aa8c <argp_parse@@Base+0x2fec>
   1aa7c:	mov	r0, r3
   1aa80:	cmp	r0, r9
   1aa84:	cmpgt	r9, ip
   1aa88:	ble	1ad74 <argp_parse@@Base+0x32d4>
   1aa8c:	sub	r4, r9, ip
   1aa90:	sub	sl, r0, r9
   1aa94:	cmp	sl, r4
   1aa98:	ble	1ab44 <argp_parse@@Base+0x30a4>
   1aa9c:	sub	r3, r0, r4
   1aaa0:	cmp	r4, #1
   1aaa4:	blt	1aa7c <argp_parse@@Base+0x2fdc>
   1aaa8:	mov	r1, #0
   1aaac:	cmp	r4, #4
   1aab0:	bcc	1ac24 <argp_parse@@Base+0x3184>
   1aab4:	add	r2, r8, r0, lsl #2
   1aab8:	add	r7, r8, ip, lsl #2
   1aabc:	cmp	r7, r2
   1aac0:	bcs	1aad4 <argp_parse@@Base+0x3034>
   1aac4:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1aac8:	add	r2, r8, r3, lsl #2
   1aacc:	cmp	r2, r5
   1aad0:	bcc	1ac24 <argp_parse@@Base+0x3184>
   1aad4:	bic	r1, r4, #3
   1aad8:	mov	r6, #1
   1aadc:	subs	r2, r1, #4
   1aae0:	add	r2, r6, r2, lsr #2
   1aae4:	and	r6, r2, #1
   1aae8:	str	r6, [sp, #60]	; 0x3c
   1aaec:	beq	1abe4 <argp_parse@@Base+0x3144>
   1aaf0:	ldr	r5, [sp, #40]	; 0x28
   1aaf4:	sub	r2, r6, r2
   1aaf8:	add	r6, ip, r0
   1aafc:	add	lr, r5, r6, lsl #2
   1ab00:	mov	r5, #0
   1ab04:	mov	r6, #0
   1ab08:	add	sl, r7, r5
   1ab0c:	add	r8, lr, r5
   1ab10:	adds	r2, r2, #2
   1ab14:	add	r5, r5, #32
   1ab18:	add	r6, r6, #8
   1ab1c:	vld1.32	{d16-d17}, [r8]
   1ab20:	vld1.32	{d18-d19}, [sl]
   1ab24:	vst1.32	{d16-d17}, [sl]!
   1ab28:	vst1.32	{d18-d19}, [r8]!
   1ab2c:	vld1.32	{d16-d17}, [r8]
   1ab30:	vld1.32	{d18-d19}, [sl]
   1ab34:	vst1.32	{d16-d17}, [sl]
   1ab38:	vst1.32	{d18-d19}, [r8]
   1ab3c:	bne	1ab08 <argp_parse@@Base+0x3068>
   1ab40:	b	1abe8 <argp_parse@@Base+0x3148>
   1ab44:	cmp	sl, #1
   1ab48:	blt	1ad6c <argp_parse@@Base+0x32cc>
   1ab4c:	mov	r1, #0
   1ab50:	cmp	sl, #3
   1ab54:	bls	1acec <argp_parse@@Base+0x324c>
   1ab58:	add	r2, r8, r0, lsl #2
   1ab5c:	add	r7, r8, ip, lsl #2
   1ab60:	cmp	r7, r2
   1ab64:	bcs	1ab80 <argp_parse@@Base+0x30e0>
   1ab68:	ldr	r3, [sp, #44]	; 0x2c
   1ab6c:	add	r2, ip, r0
   1ab70:	add	r2, r3, r2, lsl #2
   1ab74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ab78:	cmp	r3, r2
   1ab7c:	bcc	1acec <argp_parse@@Base+0x324c>
   1ab80:	bic	r1, sl, #3
   1ab84:	mov	r3, #1
   1ab88:	subs	r2, r1, #4
   1ab8c:	add	r2, r3, r2, lsr #2
   1ab90:	and	r3, r2, #1
   1ab94:	str	r3, [sp, #60]	; 0x3c
   1ab98:	beq	1acb0 <argp_parse@@Base+0x3210>
   1ab9c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1aba0:	sub	r6, r3, r2
   1aba4:	mov	r4, #0
   1aba8:	mov	lr, #32
   1abac:	mov	r2, r5
   1abb0:	mov	r3, r7
   1abb4:	adds	r6, r6, #2
   1abb8:	add	r4, r4, #8
   1abbc:	vld1.32	{d16-d17}, [r2]!
   1abc0:	vld1.32	{d18-d19}, [r3]!
   1abc4:	vst1.32	{d16-d17}, [r7], lr
   1abc8:	vst1.32	{d18-d19}, [r5], lr
   1abcc:	vld1.32	{d16-d17}, [r2]
   1abd0:	vld1.32	{d18-d19}, [r3]
   1abd4:	vst1.32	{d16-d17}, [r3]
   1abd8:	vst1.32	{d18-d19}, [r2]
   1abdc:	bne	1abac <argp_parse@@Base+0x310c>
   1abe0:	b	1acb4 <argp_parse@@Base+0x3214>
   1abe4:	mov	r6, #0
   1abe8:	ldr	r2, [sp, #60]	; 0x3c
   1abec:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1abf0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1abf4:	cmp	r2, #0
   1abf8:	beq	1ac1c <argp_parse@@Base+0x317c>
   1abfc:	add	r2, r6, ip
   1ac00:	add	r7, r6, r3
   1ac04:	add	r2, r8, r2, lsl #2
   1ac08:	add	r7, r8, r7, lsl #2
   1ac0c:	vld1.32	{d16-d17}, [r7]
   1ac10:	vld1.32	{d18-d19}, [r2]
   1ac14:	vst1.32	{d16-d17}, [r2]
   1ac18:	vst1.32	{d18-d19}, [r7]
   1ac1c:	cmp	r4, r1
   1ac20:	beq	1aa7c <argp_parse@@Base+0x2fdc>
   1ac24:	mvn	r2, r1
   1ac28:	tst	r4, #1
   1ac2c:	add	r2, r9, r2
   1ac30:	beq	1ac50 <argp_parse@@Base+0x31b0>
   1ac34:	add	r7, r1, ip
   1ac38:	add	r5, r1, r3
   1ac3c:	orr	r1, r1, #1
   1ac40:	ldr	r6, [r8, r7, lsl #2]
   1ac44:	ldr	r4, [r8, r5, lsl #2]
   1ac48:	str	r4, [r8, r7, lsl #2]
   1ac4c:	str	r6, [r8, r5, lsl #2]
   1ac50:	cmp	r2, ip
   1ac54:	beq	1aa7c <argp_parse@@Base+0x2fdc>
   1ac58:	add	r0, ip, r0
   1ac5c:	sub	r2, r9, r1
   1ac60:	add	r7, ip, r1
   1ac64:	ldr	r4, [fp, #-52]	; 0xffffffcc
   1ac68:	add	r0, r0, r1
   1ac6c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1ac70:	add	r7, r4, r7, lsl #2
   1ac74:	add	r0, r1, r0, lsl #2
   1ac78:	ldr	r1, [r7, #-4]
   1ac7c:	ldr	r6, [r0, #-4]
   1ac80:	sub	r2, r2, #2
   1ac84:	cmp	ip, r2
   1ac88:	str	r6, [r7, #-4]
   1ac8c:	str	r1, [r0, #-4]
   1ac90:	ldr	r1, [r7]
   1ac94:	ldr	r6, [r0]
   1ac98:	str	r6, [r7]
   1ac9c:	str	r1, [r0]
   1aca0:	add	r0, r0, #8
   1aca4:	add	r7, r7, #8
   1aca8:	bne	1ac78 <argp_parse@@Base+0x31d8>
   1acac:	b	1aa7c <argp_parse@@Base+0x2fdc>
   1acb0:	mov	r4, #0
   1acb4:	ldr	r2, [sp, #60]	; 0x3c
   1acb8:	cmp	r2, #0
   1acbc:	beq	1ace0 <argp_parse@@Base+0x3240>
   1acc0:	add	r2, r4, ip
   1acc4:	add	r3, r4, r9
   1acc8:	add	r2, r8, r2, lsl #2
   1accc:	add	r3, r8, r3, lsl #2
   1acd0:	vld1.32	{d16-d17}, [r3]
   1acd4:	vld1.32	{d18-d19}, [r2]
   1acd8:	vst1.32	{d16-d17}, [r2]
   1acdc:	vst1.32	{d18-d19}, [r3]
   1ace0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1ace4:	cmp	sl, r1
   1ace8:	beq	1ad6c <argp_parse@@Base+0x32cc>
   1acec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1acf0:	tst	sl, #1
   1acf4:	mov	r3, r1
   1acf8:	add	r2, r0, r2
   1acfc:	beq	1ad1c <argp_parse@@Base+0x327c>
   1ad00:	add	r6, r1, r9
   1ad04:	add	r3, r1, ip
   1ad08:	ldr	r5, [r8, r6, lsl #2]
   1ad0c:	ldr	r7, [r8, r3, lsl #2]
   1ad10:	str	r5, [r8, r3, lsl #2]
   1ad14:	orr	r3, r1, #1
   1ad18:	str	r7, [r8, r6, lsl #2]
   1ad1c:	cmp	r2, r1
   1ad20:	beq	1ad6c <argp_parse@@Base+0x32cc>
   1ad24:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ad28:	add	r1, ip, r3
   1ad2c:	add	r3, r9, r3
   1ad30:	add	r1, r2, r1, lsl #2
   1ad34:	add	r2, r2, r3, lsl #2
   1ad38:	sub	r3, r3, r0
   1ad3c:	ldr	r7, [r1, #-4]
   1ad40:	ldr	r6, [r2, #-4]
   1ad44:	adds	r3, r3, #2
   1ad48:	str	r6, [r1, #-4]
   1ad4c:	str	r7, [r2, #-4]
   1ad50:	ldr	r7, [r1]
   1ad54:	ldr	r6, [r2]
   1ad58:	str	r6, [r1]
   1ad5c:	str	r7, [r2]
   1ad60:	add	r1, r1, #8
   1ad64:	add	r2, r2, #8
   1ad68:	bne	1ad3c <argp_parse@@Base+0x329c>
   1ad6c:	add	ip, sl, ip
   1ad70:	b	1aa80 <argp_parse@@Base+0x2fe0>
   1ad74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad78:	ldr	r2, [sp, #48]	; 0x30
   1ad7c:	ldr	r1, [sp, #56]	; 0x38
   1ad80:	ldr	ip, [fp, #16]
   1ad84:	add	r0, r0, r2
   1ad88:	sub	r0, r0, r9
   1ad8c:	str	r0, [r1]
   1ad90:	ldr	r1, [sp, #52]	; 0x34
   1ad94:	str	r2, [r1]
   1ad98:	str	r0, [fp, #-40]	; 0xffffffd8
   1ad9c:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1ada0:	str	lr, [ip]
   1ada4:	str	lr, [ip, #32]
   1ada8:	mov	r9, lr
   1adac:	cmp	r7, r9
   1adb0:	mvn	r4, #0
   1adb4:	strne	r7, [ip]
   1adb8:	mov	r0, r4
   1adbc:	sub	sp, fp, #28
   1adc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1adc4:	mov	r0, #1
   1adc8:	b	1a394 <argp_parse@@Base+0x28f4>
   1adcc:	cmp	r6, r3
   1add0:	bne	1aed8 <argp_parse@@Base+0x3438>
   1add4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1add8:	cmp	r0, #0
   1addc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ade0:	bne	1af44 <argp_parse@@Base+0x34a4>
   1ade4:	str	r4, [r7, #8]
   1ade8:	ldrb	r4, [r9]
   1adec:	cmp	r4, #58	; 0x3a
   1adf0:	movwne	r4, #63	; 0x3f
   1adf4:	b	1aeec <argp_parse@@Base+0x344c>
   1adf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1adfc:	movw	r1, #50802	; 0xc672
   1ae00:	mov	r3, r4
   1ae04:	movt	r1, #1
   1ae08:	ldr	r2, [r0]
   1ae0c:	movw	r0, #54336	; 0xd440
   1ae10:	movt	r0, #2
   1ae14:	ldr	r0, [r0]
   1ae18:	bl	1162c <fprintf@plt>
   1ae1c:	b	1a41c <argp_parse@@Base+0x297c>
   1ae20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ae24:	ldr	r8, [r0, r6, lsl #2]
   1ae28:	ldr	r2, [fp, #8]
   1ae2c:	movw	r1, #50871	; 0xc6b7
   1ae30:	str	r8, [r7, #12]
   1ae34:	mov	r0, #0
   1ae38:	movt	r1, #1
   1ae3c:	str	r0, [r7, #12]
   1ae40:	str	r8, [r7, #20]
   1ae44:	str	r2, [sp]
   1ae48:	stmib	sp, {r0, r7}
   1ae4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae50:	str	r1, [sp, #16]
   1ae54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ae58:	mov	r2, r9
   1ae5c:	str	r0, [sp, #12]
   1ae60:	mov	r0, r3
   1ae64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ae68:	bl	1af68 <argp_parse@@Base+0x34c8>
   1ae6c:	sub	sp, fp, #28
   1ae70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae74:	cmp	r9, #0
   1ae78:	beq	1af10 <argp_parse@@Base+0x3470>
   1ae7c:	ldrb	r0, [r5, #2]
   1ae80:	cmp	r0, #0
   1ae84:	beq	1aef8 <argp_parse@@Base+0x3458>
   1ae88:	ldr	r1, [fp, #8]
   1ae8c:	movw	r0, #49820	; 0xc29c
   1ae90:	str	r7, [ip, #20]
   1ae94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ae98:	movt	r0, #1
   1ae9c:	stm	sp, {r1, r9, ip}
   1aea0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aea4:	str	r0, [sp, #16]
   1aea8:	mov	r0, r2
   1aeac:	ldr	r2, [sp, #48]	; 0x30
   1aeb0:	str	r1, [sp, #12]
   1aeb4:	mov	r1, r8
   1aeb8:	bl	1af68 <argp_parse@@Base+0x34c8>
   1aebc:	ldr	ip, [fp, #16]
   1aec0:	mov	r4, r0
   1aec4:	cmn	r0, #1
   1aec8:	bne	1adb8 <argp_parse@@Base+0x3318>
   1aecc:	ldr	r6, [ip]
   1aed0:	ldr	r5, [r8, r6, lsl #2]
   1aed4:	b	1af10 <argp_parse@@Base+0x3470>
   1aed8:	add	r0, r6, #1
   1aedc:	str	r0, [r7]
   1aee0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aee4:	ldr	r0, [r0, r6, lsl #2]
   1aee8:	str	r0, [r7, #12]
   1aeec:	mov	r0, #0
   1aef0:	str	r0, [r7, #20]
   1aef4:	b	1adb8 <argp_parse@@Base+0x3318>
   1aef8:	ldr	r0, [sp, #48]	; 0x30
   1aefc:	bl	11620 <strchr@plt>
   1af00:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1af04:	ldr	ip, [fp, #16]
   1af08:	cmp	r0, #0
   1af0c:	beq	1ae88 <argp_parse@@Base+0x33e8>
   1af10:	ldr	r9, [sp, #48]	; 0x30
   1af14:	add	r5, r5, #1
   1af18:	str	r5, [ip, #20]
   1af1c:	b	1a3d0 <argp_parse@@Base+0x2930>
   1af20:	ldr	r2, [r0]
   1af24:	movw	r0, #54336	; 0xd440
   1af28:	movw	r1, #50830	; 0xc68e
   1af2c:	mov	r3, r4
   1af30:	movt	r0, #2
   1af34:	movt	r1, #1
   1af38:	ldr	r0, [r0]
   1af3c:	bl	1162c <fprintf@plt>
   1af40:	b	1a4d0 <argp_parse@@Base+0x2a30>
   1af44:	ldr	r2, [r0]
   1af48:	movw	r0, #54336	; 0xd440
   1af4c:	movw	r1, #50830	; 0xc68e
   1af50:	mov	r3, r4
   1af54:	movt	r0, #2
   1af58:	movt	r1, #1
   1af5c:	ldr	r0, [r0]
   1af60:	bl	1162c <fprintf@plt>
   1af64:	b	1ade4 <argp_parse@@Base+0x3344>
   1af68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af6c:	add	fp, sp, #28
   1af70:	sub	sp, sp, #44	; 0x2c
   1af74:	str	r0, [sp, #12]
   1af78:	ldr	r0, [fp, #16]
   1af7c:	ldr	r5, [fp, #8]
   1af80:	str	r2, [sp, #16]
   1af84:	str	r1, [sp, #20]
   1af88:	ldr	r9, [r0, #20]
   1af8c:	mov	r6, r9
   1af90:	b	1af98 <argp_parse@@Base+0x34f8>
   1af94:	add	r6, r6, #1
   1af98:	ldrb	r0, [r6]
   1af9c:	cmp	r0, #0
   1afa0:	cmpne	r0, #61	; 0x3d
   1afa4:	bne	1af94 <argp_parse@@Base+0x34f4>
   1afa8:	ldr	sl, [r3]
   1afac:	mvn	ip, #0
   1afb0:	str	r3, [fp, #-32]	; 0xffffffe0
   1afb4:	cmp	sl, #0
   1afb8:	beq	1b1c8 <argp_parse@@Base+0x3728>
   1afbc:	sub	r4, r6, r9
   1afc0:	mov	r8, #0
   1afc4:	mov	r5, sl
   1afc8:	mov	r7, r3
   1afcc:	b	1afe0 <argp_parse@@Base+0x3540>
   1afd0:	ldr	r5, [r7, #16]!
   1afd4:	add	r8, r8, #1
   1afd8:	cmp	r5, #0
   1afdc:	beq	1b014 <argp_parse@@Base+0x3574>
   1afe0:	mov	r0, r5
   1afe4:	mov	r1, r9
   1afe8:	mov	r2, r4
   1afec:	bl	11764 <strncmp@plt>
   1aff0:	cmp	r0, #0
   1aff4:	bne	1afd0 <argp_parse@@Base+0x3530>
   1aff8:	mov	r0, r5
   1affc:	bl	11614 <strlen@plt>
   1b000:	cmp	r4, r0
   1b004:	bne	1afd0 <argp_parse@@Base+0x3530>
   1b008:	ldr	r5, [fp, #8]
   1b00c:	mov	ip, r8
   1b010:	b	1b278 <argp_parse@@Base+0x37d8>
   1b014:	cmp	sl, #0
   1b018:	beq	1b1f4 <argp_parse@@Base+0x3754>
   1b01c:	mvn	r0, #0
   1b020:	str	r4, [sp, #36]	; 0x24
   1b024:	mov	r4, #0
   1b028:	mov	r5, #0
   1b02c:	mov	r7, #0
   1b030:	str	r0, [sp, #24]
   1b034:	mov	r0, #0
   1b038:	str	r0, [sp, #32]
   1b03c:	mov	r0, #0
   1b040:	str	r0, [sp, #8]
   1b044:	mov	r0, #0
   1b048:	str	r0, [sp, #28]
   1b04c:	ldr	r2, [sp, #36]	; 0x24
   1b050:	mov	r0, sl
   1b054:	mov	r1, r9
   1b058:	bl	11764 <strncmp@plt>
   1b05c:	cmp	r0, #0
   1b060:	beq	1b094 <argp_parse@@Base+0x35f4>
   1b064:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b068:	mov	r1, r4
   1b06c:	add	r0, r3, r5, lsl #4
   1b070:	ldr	sl, [r0, #16]
   1b074:	cmp	sl, #0
   1b078:	beq	1b1e0 <argp_parse@@Base+0x3740>
   1b07c:	ldr	r0, [fp, #16]
   1b080:	add	r1, r1, #16
   1b084:	add	r5, r5, #1
   1b088:	mov	r4, r1
   1b08c:	ldr	r9, [r0, #20]
   1b090:	b	1b04c <argp_parse@@Base+0x35ac>
   1b094:	cmp	r7, #0
   1b098:	beq	1b14c <argp_parse@@Base+0x36ac>
   1b09c:	ldr	r0, [fp, #12]
   1b0a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b0a4:	cmp	r0, #0
   1b0a8:	bne	1b0d0 <argp_parse@@Base+0x3630>
   1b0ac:	add	r0, r3, r5, lsl #4
   1b0b0:	ldr	r2, [r7, #4]
   1b0b4:	ldr	r1, [r0, #4]
   1b0b8:	cmp	r2, r1
   1b0bc:	bne	1b0d0 <argp_parse@@Base+0x3630>
   1b0c0:	ldr	r1, [r0, #8]
   1b0c4:	ldr	r2, [r7, #8]
   1b0c8:	cmp	r2, r1
   1b0cc:	beq	1b184 <argp_parse@@Base+0x36e4>
   1b0d0:	ldr	r0, [sp, #32]
   1b0d4:	mov	r1, r4
   1b0d8:	cmp	r0, #0
   1b0dc:	bne	1b06c <argp_parse@@Base+0x35cc>
   1b0e0:	ldr	r0, [fp, #20]
   1b0e4:	cmp	r0, #0
   1b0e8:	beq	1b160 <argp_parse@@Base+0x36c0>
   1b0ec:	ldr	r9, [sp, #28]
   1b0f0:	mov	r0, #0
   1b0f4:	str	r0, [sp, #32]
   1b0f8:	cmp	r9, #0
   1b0fc:	bne	1b174 <argp_parse@@Base+0x36d4>
   1b100:	mov	r0, r8
   1b104:	bl	19acc <argp_parse@@Base+0x202c>
   1b108:	cmp	r0, #0
   1b10c:	beq	1b1b4 <argp_parse@@Base+0x3714>
   1b110:	mov	r9, r0
   1b114:	mov	r0, #0
   1b118:	mov	r1, #0
   1b11c:	mov	r2, r8
   1b120:	str	r0, [sp, #32]
   1b124:	mov	r0, r9
   1b128:	bl	11668 <memset@plt>
   1b12c:	ldr	r0, [sp, #24]
   1b130:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b134:	mov	r1, #1
   1b138:	mov	r2, #1
   1b13c:	str	r1, [sp, #8]
   1b140:	mov	r1, r4
   1b144:	strb	r2, [r9, r0]
   1b148:	b	1b174 <argp_parse@@Base+0x36d4>
   1b14c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b150:	mov	r1, r4
   1b154:	str	r5, [sp, #24]
   1b158:	add	r7, r3, r4
   1b15c:	b	1b06c <argp_parse@@Base+0x35cc>
   1b160:	ldr	r9, [sp, #28]
   1b164:	mov	r0, #1
   1b168:	str	r0, [sp, #32]
   1b16c:	cmp	r9, #0
   1b170:	beq	1b1a8 <argp_parse@@Base+0x3708>
   1b174:	mov	r0, #1
   1b178:	str	r9, [sp, #28]
   1b17c:	strb	r0, [r9, r5]
   1b180:	b	1b06c <argp_parse@@Base+0x35cc>
   1b184:	ldr	r1, [sp, #32]
   1b188:	cmp	r1, #0
   1b18c:	bne	1b068 <argp_parse@@Base+0x35c8>
   1b190:	ldr	r0, [r0, #12]
   1b194:	ldr	r1, [r7, #12]
   1b198:	cmp	r1, r0
   1b19c:	mov	r1, r4
   1b1a0:	bne	1b0e0 <argp_parse@@Base+0x3640>
   1b1a4:	b	1b06c <argp_parse@@Base+0x35cc>
   1b1a8:	mov	r0, #0
   1b1ac:	str	r0, [sp, #28]
   1b1b0:	b	1b06c <argp_parse@@Base+0x35cc>
   1b1b4:	mov	r0, #1
   1b1b8:	str	r0, [sp, #32]
   1b1bc:	mov	r0, #0
   1b1c0:	str	r0, [sp, #28]
   1b1c4:	b	1b064 <argp_parse@@Base+0x35c4>
   1b1c8:	mov	r0, #0
   1b1cc:	mov	r8, #0
   1b1d0:	mov	r7, #0
   1b1d4:	mov	sl, #0
   1b1d8:	mov	r4, #0
   1b1dc:	b	1b20c <argp_parse@@Base+0x376c>
   1b1e0:	ldr	r5, [fp, #8]
   1b1e4:	ldr	ip, [sp, #24]
   1b1e8:	ldr	sl, [sp, #28]
   1b1ec:	ldr	r4, [sp, #8]
   1b1f0:	b	1b210 <argp_parse@@Base+0x3770>
   1b1f4:	ldr	r5, [fp, #8]
   1b1f8:	mov	r0, #0
   1b1fc:	mov	r7, #0
   1b200:	mov	sl, #0
   1b204:	mov	r4, #0
   1b208:	mvn	ip, #0
   1b20c:	str	r0, [sp, #32]
   1b210:	cmp	sl, #0
   1b214:	ldreq	r0, [sp, #32]
   1b218:	cmpeq	r0, #0
   1b21c:	beq	1b270 <argp_parse@@Base+0x37d0>
   1b220:	ldr	r0, [fp, #20]
   1b224:	cmp	r0, #0
   1b228:	bne	1b3dc <argp_parse@@Base+0x393c>
   1b22c:	cmp	r4, #0
   1b230:	beq	1b23c <argp_parse@@Base+0x379c>
   1b234:	mov	r0, sl
   1b238:	bl	18d7c <argp_parse@@Base+0x12dc>
   1b23c:	ldr	r0, [fp, #16]
   1b240:	ldr	r4, [r0, #20]
   1b244:	mov	r5, r0
   1b248:	mov	r0, r4
   1b24c:	bl	11614 <strlen@plt>
   1b250:	mov	r1, #0
   1b254:	add	r0, r4, r0
   1b258:	str	r1, [r5, #8]
   1b25c:	str	r0, [r5, #20]
   1b260:	ldr	r0, [r5]
   1b264:	add	r0, r0, #1
   1b268:	str	r0, [r5]
   1b26c:	b	1b3a0 <argp_parse@@Base+0x3900>
   1b270:	cmp	r7, #0
   1b274:	beq	1b310 <argp_parse@@Base+0x3870>
   1b278:	ldr	r1, [fp, #16]
   1b27c:	mov	r0, #0
   1b280:	str	r0, [r1, #20]
   1b284:	mov	r2, r1
   1b288:	ldr	r1, [r1]
   1b28c:	add	r0, r1, #1
   1b290:	str	r0, [r2]
   1b294:	ldrb	r3, [r6]
   1b298:	ldr	r2, [r7, #4]
   1b29c:	cmp	r3, #0
   1b2a0:	beq	1b2bc <argp_parse@@Base+0x381c>
   1b2a4:	cmp	r2, #0
   1b2a8:	beq	1b388 <argp_parse@@Base+0x38e8>
   1b2ac:	ldr	r1, [fp, #16]
   1b2b0:	add	r0, r6, #1
   1b2b4:	str	r0, [r1, #12]
   1b2b8:	b	1b2e8 <argp_parse@@Base+0x3848>
   1b2bc:	cmp	r2, #1
   1b2c0:	bne	1b2e8 <argp_parse@@Base+0x3848>
   1b2c4:	ldr	r2, [sp, #12]
   1b2c8:	cmp	r0, r2
   1b2cc:	bge	1b3ac <argp_parse@@Base+0x390c>
   1b2d0:	ldr	r2, [fp, #16]
   1b2d4:	add	r1, r1, #2
   1b2d8:	str	r1, [r2]
   1b2dc:	ldr	r1, [sp, #20]
   1b2e0:	ldr	r0, [r1, r0, lsl #2]
   1b2e4:	str	r0, [r2, #12]
   1b2e8:	cmp	r5, #0
   1b2ec:	strne	ip, [r5]
   1b2f0:	ldr	r1, [r7, #8]
   1b2f4:	ldr	r0, [r7, #12]
   1b2f8:	cmp	r1, #0
   1b2fc:	beq	1b3d4 <argp_parse@@Base+0x3934>
   1b300:	str	r0, [r1]
   1b304:	mov	r0, #0
   1b308:	sub	sp, fp, #28
   1b30c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b310:	ldr	r0, [fp, #12]
   1b314:	cmp	r0, #0
   1b318:	beq	1b35c <argp_parse@@Base+0x38bc>
   1b31c:	ldr	r0, [fp, #16]
   1b320:	ldr	r1, [sp, #20]
   1b324:	ldr	r0, [r0]
   1b328:	ldr	r0, [r1, r0, lsl #2]
   1b32c:	ldrb	r0, [r0, #1]
   1b330:	cmp	r0, #45	; 0x2d
   1b334:	beq	1b35c <argp_parse@@Base+0x38bc>
   1b338:	ldr	r0, [fp, #16]
   1b33c:	ldr	r0, [r0, #20]
   1b340:	ldrb	r1, [r0]
   1b344:	ldr	r0, [sp, #16]
   1b348:	bl	11620 <strchr@plt>
   1b34c:	mov	r1, r0
   1b350:	mvn	r0, #0
   1b354:	cmp	r1, #0
   1b358:	bne	1b3d4 <argp_parse@@Base+0x3934>
   1b35c:	ldr	r0, [fp, #20]
   1b360:	cmp	r0, #0
   1b364:	bne	1b4c8 <argp_parse@@Base+0x3a28>
   1b368:	ldr	r1, [fp, #16]
   1b36c:	mov	r0, #0
   1b370:	str	r0, [r1, #20]
   1b374:	str	r0, [r1, #8]
   1b378:	ldr	r0, [r1]
   1b37c:	add	r0, r0, #1
   1b380:	str	r0, [r1]
   1b384:	b	1b3a0 <argp_parse@@Base+0x3900>
   1b388:	ldr	r0, [fp, #20]
   1b38c:	cmp	r0, #0
   1b390:	bne	1b4fc <argp_parse@@Base+0x3a5c>
   1b394:	ldr	r0, [r7, #12]
   1b398:	ldr	r1, [fp, #16]
   1b39c:	str	r0, [r1, #8]
   1b3a0:	mov	r0, #63	; 0x3f
   1b3a4:	sub	sp, fp, #28
   1b3a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b3ac:	ldr	r0, [fp, #20]
   1b3b0:	cmp	r0, #0
   1b3b4:	bne	1b52c <argp_parse@@Base+0x3a8c>
   1b3b8:	ldr	r0, [r7, #12]
   1b3bc:	ldr	r1, [fp, #16]
   1b3c0:	str	r0, [r1, #8]
   1b3c4:	ldr	r0, [sp, #16]
   1b3c8:	ldrb	r0, [r0]
   1b3cc:	cmp	r0, #58	; 0x3a
   1b3d0:	movwne	r0, #63	; 0x3f
   1b3d4:	sub	sp, fp, #28
   1b3d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b3dc:	movw	r5, #54336	; 0xd440
   1b3e0:	ldr	r1, [sp, #32]
   1b3e4:	movt	r5, #2
   1b3e8:	ldr	r0, [r5]
   1b3ec:	cmp	r1, #0
   1b3f0:	beq	1b424 <argp_parse@@Base+0x3984>
   1b3f4:	ldr	r1, [sp, #20]
   1b3f8:	ldr	r3, [fp, #24]
   1b3fc:	ldr	r2, [r1]
   1b400:	ldr	r1, [fp, #16]
   1b404:	ldr	r1, [r1, #20]
   1b408:	str	r1, [sp]
   1b40c:	movw	r1, #50891	; 0xc6cb
   1b410:	movt	r1, #1
   1b414:	bl	1162c <fprintf@plt>
   1b418:	cmp	r4, #0
   1b41c:	bne	1b234 <argp_parse@@Base+0x3794>
   1b420:	b	1b23c <argp_parse@@Base+0x379c>
   1b424:	bl	11710 <flockfile@plt>
   1b428:	ldr	r1, [fp, #16]
   1b42c:	ldr	r0, [sp, #20]
   1b430:	ldr	r9, [fp, #24]
   1b434:	ldr	r1, [r1, #20]
   1b438:	ldr	r2, [r0]
   1b43c:	ldr	r0, [r5]
   1b440:	mov	r3, r9
   1b444:	str	r1, [sp]
   1b448:	movw	r1, #50923	; 0xc6eb
   1b44c:	movt	r1, #1
   1b450:	bl	1162c <fprintf@plt>
   1b454:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b458:	cmp	r8, #0
   1b45c:	beq	1b4a8 <argp_parse@@Base+0x3a08>
   1b460:	mov	r6, sl
   1b464:	ldrb	r0, [r6]
   1b468:	cmp	r0, #0
   1b46c:	bne	1b484 <argp_parse@@Base+0x39e4>
   1b470:	add	r1, r1, #16
   1b474:	add	r6, r6, #1
   1b478:	subs	r8, r8, #1
   1b47c:	bne	1b464 <argp_parse@@Base+0x39c4>
   1b480:	b	1b4a8 <argp_parse@@Base+0x3a08>
   1b484:	ldr	r3, [r1]
   1b488:	ldr	r0, [r5]
   1b48c:	mov	r7, r1
   1b490:	movw	r1, #50970	; 0xc71a
   1b494:	mov	r2, r9
   1b498:	movt	r1, #1
   1b49c:	bl	1162c <fprintf@plt>
   1b4a0:	mov	r1, r7
   1b4a4:	b	1b470 <argp_parse@@Base+0x39d0>
   1b4a8:	ldr	r1, [r5]
   1b4ac:	mov	r0, #10
   1b4b0:	bl	116f8 <fputc@plt>
   1b4b4:	ldr	r0, [r5]
   1b4b8:	bl	11530 <funlockfile@plt>
   1b4bc:	cmp	r4, #0
   1b4c0:	bne	1b234 <argp_parse@@Base+0x3794>
   1b4c4:	b	1b23c <argp_parse@@Base+0x379c>
   1b4c8:	ldr	r1, [fp, #16]
   1b4cc:	ldr	r0, [sp, #20]
   1b4d0:	ldr	r3, [fp, #24]
   1b4d4:	ldr	r2, [r0]
   1b4d8:	movw	r0, #54336	; 0xd440
   1b4dc:	ldr	r1, [r1, #20]
   1b4e0:	movt	r0, #2
   1b4e4:	ldr	r0, [r0]
   1b4e8:	str	r1, [sp]
   1b4ec:	movw	r1, #50978	; 0xc722
   1b4f0:	movt	r1, #1
   1b4f4:	bl	1162c <fprintf@plt>
   1b4f8:	b	1b368 <argp_parse@@Base+0x38c8>
   1b4fc:	ldr	r0, [sp, #20]
   1b500:	ldr	r1, [r7]
   1b504:	ldr	r3, [fp, #24]
   1b508:	ldr	r2, [r0]
   1b50c:	movw	r0, #54336	; 0xd440
   1b510:	str	r1, [sp]
   1b514:	movw	r1, #51010	; 0xc742
   1b518:	movt	r0, #2
   1b51c:	movt	r1, #1
   1b520:	ldr	r0, [r0]
   1b524:	bl	1162c <fprintf@plt>
   1b528:	b	1b394 <argp_parse@@Base+0x38f4>
   1b52c:	ldr	r0, [sp, #20]
   1b530:	ldr	r1, [r7]
   1b534:	ldr	r3, [fp, #24]
   1b538:	ldr	r2, [r0]
   1b53c:	movw	r0, #54336	; 0xd440
   1b540:	str	r1, [sp]
   1b544:	movw	r1, #51055	; 0xc76f
   1b548:	movt	r0, #2
   1b54c:	movt	r1, #1
   1b550:	ldr	r0, [r0]
   1b554:	bl	1162c <fprintf@plt>
   1b558:	b	1b3b8 <argp_parse@@Base+0x3918>
   1b55c:	push	{r4, r5, r6, r7, fp, lr}
   1b560:	add	fp, sp, #16
   1b564:	sub	sp, sp, #16
   1b568:	movw	r7, #54312	; 0xd428
   1b56c:	movw	r6, #54544	; 0xd510
   1b570:	movw	r5, #54316	; 0xd42c
   1b574:	movt	r7, #2
   1b578:	movt	r5, #2
   1b57c:	movt	r6, #2
   1b580:	ldr	r4, [r7]
   1b584:	ldr	r5, [r5]
   1b588:	str	r6, [sp, #8]
   1b58c:	stm	r6, {r4, r5}
   1b590:	ldr	r5, [fp, #16]
   1b594:	str	r5, [sp, #12]
   1b598:	ldr	r5, [fp, #12]
   1b59c:	str	r5, [sp, #4]
   1b5a0:	ldr	r5, [fp, #8]
   1b5a4:	str	r5, [sp]
   1b5a8:	bl	1a2c0 <argp_parse@@Base+0x2820>
   1b5ac:	ldr	r1, [r6]
   1b5b0:	ldr	r3, [r6, #12]
   1b5b4:	ldr	r2, [r6, #8]
   1b5b8:	str	r1, [r7]
   1b5bc:	movw	r1, #57276	; 0xdfbc
   1b5c0:	movt	r1, #2
   1b5c4:	str	r3, [r1]
   1b5c8:	movw	r1, #54320	; 0xd430
   1b5cc:	movt	r1, #2
   1b5d0:	str	r2, [r1]
   1b5d4:	sub	sp, fp, #16
   1b5d8:	pop	{r4, r5, r6, r7, fp, pc}
   1b5dc:	push	{r4, r5, r6, sl, fp, lr}
   1b5e0:	add	fp, sp, #16
   1b5e4:	sub	sp, sp, #16
   1b5e8:	movw	r6, #54312	; 0xd428
   1b5ec:	movw	r5, #54544	; 0xd510
   1b5f0:	movw	r4, #54316	; 0xd42c
   1b5f4:	movt	r6, #2
   1b5f8:	movt	r4, #2
   1b5fc:	movt	r5, #2
   1b600:	ldr	r3, [r6]
   1b604:	ldr	r4, [r4]
   1b608:	stm	r5, {r3, r4}
   1b60c:	mov	r4, #0
   1b610:	mov	r3, #1
   1b614:	str	r4, [sp]
   1b618:	stmib	sp, {r4, r5}
   1b61c:	str	r3, [sp, #12]
   1b620:	mov	r3, #0
   1b624:	bl	1a2c0 <argp_parse@@Base+0x2820>
   1b628:	ldr	r1, [r5]
   1b62c:	ldr	r3, [r5, #12]
   1b630:	ldr	r2, [r5, #8]
   1b634:	str	r1, [r6]
   1b638:	movw	r1, #57276	; 0xdfbc
   1b63c:	movt	r1, #2
   1b640:	str	r3, [r1]
   1b644:	movw	r1, #54320	; 0xd430
   1b648:	movt	r1, #2
   1b64c:	str	r2, [r1]
   1b650:	sub	sp, fp, #16
   1b654:	pop	{r4, r5, r6, sl, fp, pc}
   1b658:	cmp	r2, #0
   1b65c:	beq	1b68c <argp_parse@@Base+0x3bec>
   1b660:	mvn	r3, #0
   1b664:	udiv	r3, r3, r2
   1b668:	cmp	r3, r1
   1b66c:	bcs	1b68c <argp_parse@@Base+0x3bec>
   1b670:	push	{fp, lr}
   1b674:	mov	fp, sp
   1b678:	bl	11638 <__errno_location@plt>
   1b67c:	mov	r1, #12
   1b680:	str	r1, [r0]
   1b684:	mov	r0, #0
   1b688:	pop	{fp, pc}
   1b68c:	mul	r1, r2, r1
   1b690:	b	19afc <argp_parse@@Base+0x205c>
   1b694:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b698:	mov	r7, r0
   1b69c:	ldr	r6, [pc, #72]	; 1b6ec <argp_parse@@Base+0x3c4c>
   1b6a0:	ldr	r5, [pc, #72]	; 1b6f0 <argp_parse@@Base+0x3c50>
   1b6a4:	add	r6, pc, r6
   1b6a8:	add	r5, pc, r5
   1b6ac:	sub	r6, r6, r5
   1b6b0:	mov	r8, r1
   1b6b4:	mov	r9, r2
   1b6b8:	bl	113fc <fdopen@plt-0x20>
   1b6bc:	asrs	r6, r6, #2
   1b6c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b6c4:	mov	r4, #0
   1b6c8:	add	r4, r4, #1
   1b6cc:	ldr	r3, [r5], #4
   1b6d0:	mov	r2, r9
   1b6d4:	mov	r1, r8
   1b6d8:	mov	r0, r7
   1b6dc:	blx	r3
   1b6e0:	cmp	r6, r4
   1b6e4:	bne	1b6c8 <argp_parse@@Base+0x3c28>
   1b6e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b6ec:	andeq	r1, r1, r8, asr r8
   1b6f0:	andeq	r1, r1, r0, asr r8
   1b6f4:	bx	lr

Disassembly of section .fini:

0001b6f8 <.fini>:
   1b6f8:	push	{r3, lr}
   1b6fc:	pop	{r3, pc}
