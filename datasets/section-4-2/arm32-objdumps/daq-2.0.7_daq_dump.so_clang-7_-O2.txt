
../repos/daq-2.0.7/os-daq-modules/.libs/daq_dump.so:     file format elf32-littlearm


Disassembly of section .init:

000005f0 <_init>:
 5f0:	push	{r3, lr}
 5f4:	bl	6c4 <call_weak_fn>
 5f8:	pop	{r3, pc}

Disassembly of section .plt:

000005fc <.plt>:
 5fc:	push	{lr}		; (str lr, [sp, #-4]!)
 600:	ldr	lr, [pc, #4]	; 60c <.plt+0x10>
 604:	add	lr, pc, lr
 608:	ldr	pc, [lr, #8]!
 60c:	.word	0x000119f4

00000610 <calloc@plt>:
 610:	add	ip, pc, #0, 12
 614:	add	ip, ip, #69632	; 0x11000
 618:	ldr	pc, [ip, #2548]!	; 0x9f4

0000061c <strcmp@plt>:
 61c:	add	ip, pc, #0, 12
 620:	add	ip, ip, #69632	; 0x11000
 624:	ldr	pc, [ip, #2540]!	; 0x9ec

00000628 <__cxa_finalize@plt>:
 628:	add	ip, pc, #0, 12
 62c:	add	ip, ip, #69632	; 0x11000
 630:	ldr	pc, [ip, #2532]!	; 0x9e4

00000634 <free@plt>:
 634:	add	ip, pc, #0, 12
 638:	add	ip, ip, #69632	; 0x11000
 63c:	ldr	pc, [ip, #2524]!	; 0x9dc

00000640 <ferror@plt>:
 640:	add	ip, pc, #0, 12
 644:	add	ip, ip, #69632	; 0x11000
 648:	ldr	pc, [ip, #2516]!	; 0x9d4

0000064c <strdup@plt>:
 64c:	add	ip, pc, #0, 12
 650:	add	ip, ip, #69632	; 0x11000
 654:	ldr	pc, [ip, #2508]!	; 0x9cc

00000658 <pcap_close@plt>:
 658:	add	ip, pc, #0, 12
 65c:	add	ip, ip, #69632	; 0x11000
 660:	ldr	pc, [ip, #2500]!	; 0x9c4

00000664 <strcasecmp@plt>:
 664:	add	ip, pc, #0, 12
 668:	add	ip, ip, #69632	; 0x11000
 66c:	ldr	pc, [ip, #2492]!	; 0x9bc

00000670 <pcap_open_dead@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #69632	; 0x11000
 678:	ldr	pc, [ip, #2484]!	; 0x9b4

0000067c <pcap_dump@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #69632	; 0x11000
 684:	ldr	pc, [ip, #2476]!	; 0x9ac

00000688 <__gmon_start__@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #69632	; 0x11000
 690:	ldr	pc, [ip, #2468]!	; 0x9a4

00000694 <snprintf@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #69632	; 0x11000
 69c:	ldr	pc, [ip, #2460]!	; 0x99c

000006a0 <pcap_dump_file@plt>:
 6a0:	add	ip, pc, #0, 12
 6a4:	add	ip, ip, #69632	; 0x11000
 6a8:	ldr	pc, [ip, #2452]!	; 0x994

000006ac <pcap_dump_close@plt>:
 6ac:	add	ip, pc, #0, 12
 6b0:	add	ip, ip, #69632	; 0x11000
 6b4:	ldr	pc, [ip, #2444]!	; 0x98c

000006b8 <pcap_dump_open@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #69632	; 0x11000
 6c0:	ldr	pc, [ip, #2436]!	; 0x984

Disassembly of section .text:

000006c4 <call_weak_fn>:
 6c4:	ldr	r3, [pc, #20]	; 6e0 <call_weak_fn+0x1c>
 6c8:	ldr	r2, [pc, #20]	; 6e4 <call_weak_fn+0x20>
 6cc:	add	r3, pc, r3
 6d0:	ldr	r2, [r3, r2]
 6d4:	cmp	r2, #0
 6d8:	bxeq	lr
 6dc:	b	688 <__gmon_start__@plt>
 6e0:	.word	0x0001192c
 6e4:	.word	0x00000050

000006e8 <deregister_tm_clones>:
 6e8:	ldr	r0, [pc, #44]	; 71c <deregister_tm_clones+0x34>
 6ec:	ldr	r3, [pc, #44]	; 720 <deregister_tm_clones+0x38>
 6f0:	add	r0, pc, r0
 6f4:	add	r3, pc, r3
 6f8:	cmp	r3, r0
 6fc:	ldr	r3, [pc, #32]	; 724 <deregister_tm_clones+0x3c>
 700:	add	r3, pc, r3
 704:	bxeq	lr
 708:	ldr	r2, [pc, #24]	; 728 <deregister_tm_clones+0x40>
 70c:	ldr	r3, [r3, r2]
 710:	cmp	r3, #0
 714:	bxeq	lr
 718:	bx	r3
 71c:	.word	0x000119cc
 720:	.word	0x000119c8
 724:	.word	0x000118f8
 728:	.word	0x0000004c

0000072c <register_tm_clones>:
 72c:	ldr	r0, [pc, #56]	; 76c <register_tm_clones+0x40>
 730:	ldr	r3, [pc, #56]	; 770 <register_tm_clones+0x44>
 734:	add	r0, pc, r0
 738:	add	r3, pc, r3
 73c:	sub	r1, r3, r0
 740:	ldr	r3, [pc, #44]	; 774 <register_tm_clones+0x48>
 744:	asr	r1, r1, #2
 748:	add	r3, pc, r3
 74c:	add	r1, r1, r1, lsr #31
 750:	asrs	r1, r1, #1
 754:	bxeq	lr
 758:	ldr	r2, [pc, #24]	; 778 <register_tm_clones+0x4c>
 75c:	ldr	r3, [r3, r2]
 760:	cmp	r3, #0
 764:	bxeq	lr
 768:	bx	r3
 76c:	.word	0x00011988
 770:	.word	0x00011984
 774:	.word	0x000118b0
 778:	.word	0x00000054

0000077c <__do_global_dtors_aux>:
 77c:	ldr	r3, [pc, #76]	; 7d0 <__do_global_dtors_aux+0x54>
 780:	ldr	r2, [pc, #76]	; 7d4 <__do_global_dtors_aux+0x58>
 784:	add	r3, pc, r3
 788:	add	r2, pc, r2
 78c:	ldrb	r3, [r3]
 790:	cmp	r3, #0
 794:	bxne	lr
 798:	ldr	r3, [pc, #56]	; 7d8 <__do_global_dtors_aux+0x5c>
 79c:	push	{r4, lr}
 7a0:	ldr	r3, [r2, r3]
 7a4:	cmp	r3, #0
 7a8:	beq	7b8 <__do_global_dtors_aux+0x3c>
 7ac:	ldr	r3, [pc, #40]	; 7dc <__do_global_dtors_aux+0x60>
 7b0:	ldr	r0, [pc, r3]
 7b4:	bl	628 <__cxa_finalize@plt>
 7b8:	bl	6e8 <deregister_tm_clones>
 7bc:	ldr	r3, [pc, #28]	; 7e0 <__do_global_dtors_aux+0x64>
 7c0:	mov	r2, #1
 7c4:	add	r3, pc, r3
 7c8:	strb	r2, [r3]
 7cc:	pop	{r4, pc}
 7d0:	.word	0x00011938
 7d4:	.word	0x00011870
 7d8:	.word	0x00000048
 7dc:	.word	0x000118a0
 7e0:	.word	0x000118f8

000007e4 <frame_dummy>:
 7e4:	b	72c <register_tm_clones>

000007e8 <dump_daq_initialize>:
 7e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 7ec:	add	fp, sp, #28
 7f0:	sub	sp, sp, #44	; 0x2c
 7f4:	mov	r6, r1
 7f8:	mov	r5, r0
 7fc:	mov	r0, #1
 800:	mov	r1, #120	; 0x78
 804:	mov	r8, r3
 808:	mov	r7, r2
 80c:	bl	610 <calloc@plt>
 810:	mov	r4, r0
 814:	mov	r0, #12
 818:	ldr	r9, [r5, #24]
 81c:	add	r1, sp, #16
 820:	vld1.32	{d16-d17}, [r5], r0
 824:	cmp	r4, #0
 828:	vld1.32	{d18-d19}, [r5]
 82c:	vst1.64	{d16-d17}, [r1], r0
 830:	vst1.32	{d18-d19}, [r1]
 834:	beq	874 <dump_daq_initialize+0x8c>
 838:	cmp	r9, #0
 83c:	ldrbne	r0, [r9, #12]
 840:	tstne	r0, #1
 844:	bne	898 <dump_daq_initialize+0xb0>
 848:	ldr	r2, [pc, #408]	; 9e8 <dump_daq_initialize+0x200>
 84c:	ldr	r3, [pc, #408]	; 9ec <dump_daq_initialize+0x204>
 850:	mov	r0, r7
 854:	mov	r1, r8
 858:	add	r2, pc, r2
 85c:	add	r3, pc, r3
 860:	bl	694 <snprintf@plt>
 864:	mov	r0, r4
 868:	bl	634 <free@plt>
 86c:	mvn	r5, #0
 870:	b	9d4 <dump_daq_initialize+0x1ec>
 874:	ldr	r2, [pc, #356]	; 9e0 <dump_daq_initialize+0x1f8>
 878:	ldr	r3, [pc, #356]	; 9e4 <dump_daq_initialize+0x1fc>
 87c:	mov	r0, r7
 880:	mov	r1, r8
 884:	add	r2, pc, r2
 888:	add	r3, pc, r3
 88c:	bl	694 <snprintf@plt>
 890:	mvn	r5, #1
 894:	b	9d4 <dump_daq_initialize+0x1ec>
 898:	ldr	sl, [sp, #36]	; 0x24
 89c:	str	r6, [sp, #8]
 8a0:	str	r7, [sp, #12]
 8a4:	cmp	sl, #0
 8a8:	beq	994 <dump_daq_initialize+0x1ac>
 8ac:	str	r8, [sp, #4]
 8b0:	mov	r7, #0
 8b4:	ldr	r5, [pc, #308]	; 9f0 <dump_daq_initialize+0x208>
 8b8:	ldr	r6, [pc, #308]	; 9f4 <dump_daq_initialize+0x20c>
 8bc:	add	r5, pc, r5
 8c0:	add	r6, pc, r6
 8c4:	ldr	r8, [sl]
 8c8:	mov	r1, r5
 8cc:	mov	r0, r8
 8d0:	bl	61c <strcmp@plt>
 8d4:	cmp	r0, #0
 8d8:	beq	900 <dump_daq_initialize+0x118>
 8dc:	mov	r0, r8
 8e0:	mov	r1, r6
 8e4:	bl	61c <strcmp@plt>
 8e8:	cmp	r0, #0
 8ec:	bne	904 <dump_daq_initialize+0x11c>
 8f0:	ldr	r0, [sl, #4]
 8f4:	bl	64c <strdup@plt>
 8f8:	str	r0, [r4, #12]
 8fc:	b	904 <dump_daq_initialize+0x11c>
 900:	ldr	r7, [sl, #4]
 904:	ldr	sl, [sl, #8]
 908:	cmp	sl, #0
 90c:	bne	8c4 <dump_daq_initialize+0xdc>
 910:	ldr	r8, [sp, #4]
 914:	cmp	r7, #0
 918:	beq	994 <dump_daq_initialize+0x1ac>
 91c:	ldr	r1, [pc, #212]	; 9f8 <dump_daq_initialize+0x210>
 920:	mov	r0, r7
 924:	add	r1, pc, r1
 928:	bl	664 <strcasecmp@plt>
 92c:	cmp	r0, #0
 930:	beq	97c <dump_daq_initialize+0x194>
 934:	ldr	r1, [pc, #192]	; 9fc <dump_daq_initialize+0x214>
 938:	mov	r0, r7
 93c:	add	r1, pc, r1
 940:	bl	664 <strcasecmp@plt>
 944:	cmp	r0, #0
 948:	beq	984 <dump_daq_initialize+0x19c>
 94c:	ldr	r1, [pc, #172]	; a00 <dump_daq_initialize+0x218>
 950:	mov	r0, r7
 954:	add	r1, pc, r1
 958:	bl	664 <strcasecmp@plt>
 95c:	cmp	r0, #0
 960:	beq	98c <dump_daq_initialize+0x1a4>
 964:	ldr	r2, [pc, #152]	; a04 <dump_daq_initialize+0x21c>
 968:	ldr	r0, [sp, #12]
 96c:	mov	r1, r8
 970:	mov	r3, r7
 974:	add	r2, pc, r2
 978:	b	860 <dump_daq_initialize+0x78>
 97c:	mov	r0, #2
 980:	b	990 <dump_daq_initialize+0x1a8>
 984:	mov	r0, #0
 988:	b	990 <dump_daq_initialize+0x1a8>
 98c:	mov	r0, #1
 990:	str	r0, [sp, #28]
 994:	ldr	r7, [r9, #16]
 998:	ldr	r2, [sp, #12]
 99c:	add	r1, r4, #4
 9a0:	add	r0, sp, #16
 9a4:	mov	r3, r8
 9a8:	blx	r7
 9ac:	cmp	r0, #0
 9b0:	beq	9c4 <dump_daq_initialize+0x1dc>
 9b4:	mov	r5, r0
 9b8:	mov	r0, r4
 9bc:	bl	634 <free@plt>
 9c0:	b	9d4 <dump_daq_initialize+0x1ec>
 9c4:	ldr	r0, [sp, #8]
 9c8:	mov	r5, #0
 9cc:	str	r9, [r4]
 9d0:	str	r4, [r0]
 9d4:	mov	r0, r5
 9d8:	sub	sp, fp, #28
 9dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 9e0:	.word	0x000005fd
 9e4:	.word	0x0000062a
 9e8:	.word	0x0000066e
 9ec:	.word	0x00000656
 9f0:	.word	0x0000062b
 9f4:	.word	0x00000681
 9f8:	.word	0x000005cd
 9fc:	.word	0x000005bf
 a00:	.word	0x000005af
 a04:	.word	0x00000596

00000a08 <dump_daq_set_filter>:
 a08:	ldm	r0, {r0, r3}
 a0c:	ldr	r2, [r0, #20]
 a10:	mov	r0, r3
 a14:	bx	r2

00000a18 <dump_daq_start>:
 a18:	push	{r4, r5, r6, sl, fp, lr}
 a1c:	add	fp, sp, #16
 a20:	mov	r4, r0
 a24:	ldrd	r0, [r0]
 a28:	ldr	r2, [r4, #12]
 a2c:	ldr	r5, [pc, #180]	; ae8 <dump_daq_start+0xd0>
 a30:	add	r5, pc, r5
 a34:	cmp	r2, #0
 a38:	movne	r5, r2
 a3c:	ldr	r2, [r0, #24]
 a40:	mov	r0, r1
 a44:	blx	r2
 a48:	cmp	r0, #0
 a4c:	popne	{r4, r5, r6, sl, fp, pc}
 a50:	ldrd	r0, [r4]
 a54:	ldr	r2, [r0, #68]	; 0x44
 a58:	mov	r0, r1
 a5c:	blx	r2
 a60:	mov	r6, r0
 a64:	ldrd	r0, [r4]
 a68:	ldr	r2, [r0, #60]	; 0x3c
 a6c:	mov	r0, r1
 a70:	blx	r2
 a74:	mov	r1, r0
 a78:	mov	r0, r6
 a7c:	bl	670 <pcap_open_dead@plt>
 a80:	cmp	r0, #0
 a84:	beq	ab0 <dump_daq_start+0x98>
 a88:	mov	r1, r5
 a8c:	mov	r6, r0
 a90:	bl	6b8 <pcap_dump_open@plt>
 a94:	cmp	r0, #0
 a98:	str	r0, [r4, #8]
 a9c:	beq	ab8 <dump_daq_start+0xa0>
 aa0:	mov	r0, r6
 aa4:	bl	658 <pcap_close@plt>
 aa8:	mov	r0, #0
 aac:	pop	{r4, r5, r6, sl, fp, pc}
 ab0:	mov	r0, #0
 ab4:	str	r0, [r4, #8]
 ab8:	ldrd	r0, [r4]
 abc:	ldr	r2, [r0, #40]	; 0x28
 ac0:	mov	r0, r1
 ac4:	blx	r2
 ac8:	ldm	r4, {r0, r3}
 acc:	ldr	r2, [r0, #76]	; 0x4c
 ad0:	ldr	r1, [pc, #20]	; aec <dump_daq_start+0xd4>
 ad4:	mov	r0, r3
 ad8:	add	r1, pc, r1
 adc:	blx	r2
 ae0:	mvn	r0, #0
 ae4:	pop	{r4, r5, r6, sl, fp, pc}
 ae8:	.word	0x000004f1
 aec:	.word	0x00000459

00000af0 <dump_daq_acquire>:
 af0:	push	{r5, sl, fp, lr}
 af4:	add	fp, sp, #8
 af8:	sub	sp, sp, #8
 afc:	str	r2, [r0, #16]
 b00:	ldr	r2, [fp, #8]
 b04:	str	r2, [r0, #20]
 b08:	ldm	r0, {r2, r5}
 b0c:	ldr	ip, [r2, #28]
 b10:	str	r0, [sp]
 b14:	mov	r0, r5
 b18:	ldr	r2, [pc, #12]	; b2c <dump_daq_acquire+0x3c>
 b1c:	add	r2, pc, r2
 b20:	blx	ip
 b24:	sub	sp, fp, #8
 b28:	pop	{r5, sl, fp, pc}
 b2c:	.word	0x000002e8

00000b30 <dump_daq_inject>:
 b30:	push	{r4, r5, fp, lr}
 b34:	add	fp, sp, #8
 b38:	sub	sp, sp, #56	; 0x38
 b3c:	mov	r5, r0
 b40:	add	r0, r1, #16
 b44:	add	r4, r1, #32
 b48:	mov	lr, #48	; 0x30
 b4c:	mov	ip, sp
 b50:	vld1.32	{d16-d17}, [r4]
 b54:	vld1.32	{d18-d19}, [r0]
 b58:	vld1.32	{d20-d21}, [r1], lr
 b5c:	add	r4, ip, #32
 b60:	add	r0, ip, #16
 b64:	vst1.64	{d16-d17}, [r4]
 b68:	vst1.64	{d18-d19}, [r0]
 b6c:	mov	r4, ip
 b70:	ldr	r0, [r1]
 b74:	mov	r1, #12
 b78:	vst1.64	{d20-d21}, [r4], r1
 b7c:	mov	r1, ip
 b80:	str	r3, [r4]
 b84:	str	r3, [sp, #8]
 b88:	str	r0, [sp, #48]	; 0x30
 b8c:	ldr	r0, [r5, #8]
 b90:	bl	67c <pcap_dump@plt>
 b94:	ldr	r0, [r5, #8]
 b98:	bl	6a0 <pcap_dump_file@plt>
 b9c:	bl	640 <ferror@plt>
 ba0:	cmp	r0, #0
 ba4:	beq	bcc <dump_daq_inject+0x9c>
 ba8:	ldm	r5, {r0, r3}
 bac:	ldr	r2, [r0, #76]	; 0x4c
 bb0:	ldr	r1, [pc, #48]	; be8 <dump_daq_inject+0xb8>
 bb4:	mov	r0, r3
 bb8:	add	r1, pc, r1
 bbc:	blx	r2
 bc0:	mvn	r0, #0
 bc4:	sub	sp, fp, #8
 bc8:	pop	{r4, r5, fp, pc}
 bcc:	ldrd	r0, [r5, #56]	; 0x38
 bd0:	adds	r0, r0, #1
 bd4:	adc	r1, r1, #0
 bd8:	strd	r0, [r5, #56]	; 0x38
 bdc:	mov	r0, #0
 be0:	sub	sp, fp, #8
 be4:	pop	{r4, r5, fp, pc}
 be8:	.word	0x0000038e

00000bec <dump_daq_breakloop>:
 bec:	ldrd	r0, [r0]
 bf0:	ldr	r2, [r0, #36]	; 0x24
 bf4:	mov	r0, r1
 bf8:	bx	r2

00000bfc <dump_daq_stop>:
 bfc:	push	{r4, r5, fp, lr}
 c00:	add	fp, sp, #8
 c04:	mov	r4, r0
 c08:	ldrd	r0, [r0]
 c0c:	ldr	r2, [r0, #40]	; 0x28
 c10:	mov	r0, r1
 c14:	blx	r2
 c18:	mov	r5, r0
 c1c:	cmp	r0, #0
 c20:	bne	c3c <dump_daq_stop+0x40>
 c24:	ldr	r0, [r4, #8]
 c28:	cmp	r0, #0
 c2c:	beq	c3c <dump_daq_stop+0x40>
 c30:	bl	6ac <pcap_dump_close@plt>
 c34:	mov	r0, #0
 c38:	str	r0, [r4, #8]
 c3c:	mov	r0, r5
 c40:	pop	{r4, r5, fp, pc}

00000c44 <dump_daq_shutdown>:
 c44:	push	{r4, sl, fp, lr}
 c48:	add	fp, sp, #8
 c4c:	mov	r4, r0
 c50:	ldrd	r0, [r0]
 c54:	ldr	r2, [r0, #44]	; 0x2c
 c58:	mov	r0, r1
 c5c:	blx	r2
 c60:	ldr	r0, [r4, #12]
 c64:	cmp	r0, #0
 c68:	beq	c70 <dump_daq_shutdown+0x2c>
 c6c:	bl	634 <free@plt>
 c70:	mov	r0, r4
 c74:	pop	{r4, sl, fp, lr}
 c78:	b	634 <free@plt>

00000c7c <dump_daq_check_status>:
 c7c:	ldrd	r0, [r0]
 c80:	ldr	r2, [r0, #48]	; 0x30
 c84:	mov	r0, r1
 c88:	bx	r2

00000c8c <dump_daq_get_stats>:
 c8c:	push	{r4, r5, fp, lr}
 c90:	add	fp, sp, #8
 c94:	mov	r4, r1
 c98:	mov	r5, r0
 c9c:	ldrd	r0, [r0]
 ca0:	ldr	r2, [r0, #52]	; 0x34
 ca4:	mov	r0, r1
 ca8:	mov	r1, r4
 cac:	blx	r2
 cb0:	ldr	r1, [r5, #64]	; 0x40
 cb4:	ldr	r2, [r5, #68]	; 0x44
 cb8:	str	r2, [r4, #44]	; 0x2c
 cbc:	str	r1, [r4, #40]	; 0x28
 cc0:	ldr	r1, [r5, #72]	; 0x48
 cc4:	ldr	r2, [r5, #76]	; 0x4c
 cc8:	str	r2, [r4, #52]	; 0x34
 ccc:	str	r1, [r4, #48]	; 0x30
 cd0:	ldr	r1, [r5, #80]	; 0x50
 cd4:	ldr	r2, [r5, #84]	; 0x54
 cd8:	str	r2, [r4, #60]	; 0x3c
 cdc:	str	r1, [r4, #56]	; 0x38
 ce0:	ldr	r1, [r5, #88]	; 0x58
 ce4:	ldr	r2, [r5, #92]	; 0x5c
 ce8:	str	r2, [r4, #68]	; 0x44
 cec:	str	r1, [r4, #64]	; 0x40
 cf0:	ldr	r1, [r5, #96]	; 0x60
 cf4:	ldr	r2, [r5, #100]	; 0x64
 cf8:	str	r2, [r4, #76]	; 0x4c
 cfc:	str	r1, [r4, #72]	; 0x48
 d00:	ldr	r1, [r5, #104]	; 0x68
 d04:	ldr	r2, [r5, #108]	; 0x6c
 d08:	str	r2, [r4, #84]	; 0x54
 d0c:	str	r1, [r4, #80]	; 0x50
 d10:	ldr	r1, [r5, #112]	; 0x70
 d14:	ldr	r2, [r5, #116]	; 0x74
 d18:	str	r2, [r4, #92]	; 0x5c
 d1c:	str	r1, [r4, #88]	; 0x58
 d20:	ldr	r1, [r5, #56]	; 0x38
 d24:	ldr	r2, [r5, #60]	; 0x3c
 d28:	str	r2, [r4, #36]	; 0x24
 d2c:	str	r1, [r4, #32]
 d30:	pop	{r4, r5, fp, pc}

00000d34 <dump_daq_reset_stats>:
 d34:	push	{r4, sl, fp, lr}
 d38:	add	fp, sp, #8
 d3c:	mov	r4, r0
 d40:	ldrd	r0, [r0]
 d44:	ldr	r2, [r0, #56]	; 0x38
 d48:	mov	r0, r1
 d4c:	blx	r2
 d50:	vmov.i32	q8, #0	; 0x00000000
 d54:	add	r0, r4, #104	; 0x68
 d58:	vst1.64	{d16-d17}, [r0]
 d5c:	add	r0, r4, #88	; 0x58
 d60:	vst1.64	{d16-d17}, [r0]
 d64:	add	r0, r4, #72	; 0x48
 d68:	vst1.64	{d16-d17}, [r0]
 d6c:	add	r0, r4, #56	; 0x38
 d70:	vst1.64	{d16-d17}, [r0]
 d74:	add	r0, r4, #40	; 0x28
 d78:	vst1.64	{d16-d17}, [r0]
 d7c:	add	r0, r4, #24
 d80:	vst1.64	{d16-d17}, [r0]
 d84:	pop	{r4, sl, fp, pc}

00000d88 <dump_daq_get_snaplen>:
 d88:	ldrd	r0, [r0]
 d8c:	ldr	r2, [r0, #60]	; 0x3c
 d90:	mov	r0, r1
 d94:	bx	r2

00000d98 <dump_daq_get_capabilities>:
 d98:	push	{fp, lr}
 d9c:	mov	fp, sp
 da0:	ldrd	r0, [r0]
 da4:	ldr	r2, [r0, #64]	; 0x40
 da8:	mov	r0, r1
 dac:	blx	r2
 db0:	orr	r0, r0, #7
 db4:	pop	{fp, pc}

00000db8 <dump_daq_get_datalink_type>:
 db8:	ldrd	r0, [r0]
 dbc:	ldr	r2, [r0, #68]	; 0x44
 dc0:	mov	r0, r1
 dc4:	bx	r2

00000dc8 <dump_daq_get_errbuf>:
 dc8:	ldrd	r0, [r0]
 dcc:	ldr	r2, [r0, #72]	; 0x48
 dd0:	mov	r0, r1
 dd4:	bx	r2

00000dd8 <dump_daq_set_errbuf>:
 dd8:	ldr	r2, [pc, #24]	; df8 <dump_daq_set_errbuf+0x20>
 ddc:	ldm	r0, {r0, r3}
 de0:	cmp	r1, #0
 de4:	add	r2, pc, r2
 de8:	moveq	r1, r2
 dec:	ldr	r2, [r0, #76]	; 0x4c
 df0:	mov	r0, r3
 df4:	bx	r2
 df8:	.word	0x0000013c

00000dfc <dump_daq_get_device_index>:
 dfc:	ldm	r0, {r0, r3}
 e00:	ldr	r2, [r0, #80]	; 0x50
 e04:	mov	r0, r3
 e08:	bx	r2

00000e0c <daq_dump_capture>:
 e0c:	push	{r4, r5, r6, r7, fp, lr}
 e10:	add	fp, sp, #16
 e14:	mov	r5, r1
 e18:	ldr	r6, [r0, #16]
 e1c:	ldr	r1, [r0, #20]
 e20:	mov	r7, r0
 e24:	mov	r4, r2
 e28:	mov	r0, r1
 e2c:	mov	r1, r5
 e30:	blx	r6
 e34:	mov	r6, r0
 e38:	cmp	r0, #6
 e3c:	mov	r1, #1
 e40:	movwhi	r6, #1
 e44:	add	r0, r7, r6, lsl #3
 e48:	ldrd	r2, [r0, #64]	; 0x40
 e4c:	adds	r2, r2, #1
 e50:	adc	r3, r3, #0
 e54:	strd	r2, [r0, #64]	; 0x40
 e58:	mov	r0, #45	; 0x2d
 e5c:	tst	r1, r0, lsr r6
 e60:	beq	e74 <daq_dump_capture+0x68>
 e64:	ldr	r0, [r7, #8]
 e68:	mov	r1, r5
 e6c:	mov	r2, r4
 e70:	bl	67c <pcap_dump@plt>
 e74:	mov	r0, r6
 e78:	pop	{r4, r5, r6, r7, fp, pc}

Disassembly of section .fini:

00000e7c <_fini>:
 e7c:	push	{r3, lr}
 e80:	pop	{r3, pc}
