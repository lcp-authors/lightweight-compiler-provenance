
../repos/coreutils/src/basename:     file format elf32-littlearm


Disassembly of section .init:

00010c4c <.init>:
   10c4c:	push	{r3, lr}
   10c50:	bl	10eac <putchar_unlocked@plt+0x48>
   10c54:	pop	{r3, pc}

Disassembly of section .plt:

00010c58 <calloc@plt-0x14>:
   10c58:	push	{lr}		; (str lr, [sp, #-4]!)
   10c5c:	ldr	lr, [pc, #4]	; 10c68 <calloc@plt-0x4>
   10c60:	add	lr, pc, lr
   10c64:	ldr	pc, [lr, #8]!
   10c68:	muleq	r1, r8, r3

00010c6c <calloc@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #86016	; 0x15000
   10c74:	ldr	pc, [ip, #920]!	; 0x398

00010c78 <fputs_unlocked@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #86016	; 0x15000
   10c80:	ldr	pc, [ip, #912]!	; 0x390

00010c84 <strcmp@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #86016	; 0x15000
   10c8c:	ldr	pc, [ip, #904]!	; 0x388

00010c90 <fflush@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #86016	; 0x15000
   10c98:	ldr	pc, [ip, #896]!	; 0x380

00010c9c <free@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #86016	; 0x15000
   10ca4:	ldr	pc, [ip, #888]!	; 0x378

00010ca8 <_exit@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #86016	; 0x15000
   10cb0:	ldr	pc, [ip, #880]!	; 0x370

00010cb4 <memcpy@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #86016	; 0x15000
   10cbc:	ldr	pc, [ip, #872]!	; 0x368

00010cc0 <mbsinit@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #86016	; 0x15000
   10cc8:	ldr	pc, [ip, #864]!	; 0x360

00010ccc <memcmp@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #856]!	; 0x358

00010cd8 <dcgettext@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #848]!	; 0x350

00010ce4 <realloc@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #840]!	; 0x348

00010cf0 <textdomain@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #832]!	; 0x340

00010cfc <iswprint@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #824]!	; 0x338

00010d08 <fwrite@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #816]!	; 0x330

00010d14 <lseek64@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #808]!	; 0x328

00010d20 <__ctype_get_mb_cur_max@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #800]!	; 0x320

00010d2c <__fpending@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #792]!	; 0x318

00010d38 <ferror_unlocked@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #784]!	; 0x310

00010d44 <mbrtowc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #776]!	; 0x308

00010d50 <error@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #768]!	; 0x300

00010d5c <malloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #760]!	; 0x2f8

00010d68 <__libc_start_main@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #752]!	; 0x2f0

00010d74 <__freading@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d80 <__gmon_start__@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #736]!	; 0x2e0

00010d8c <getopt_long@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #728]!	; 0x2d8

00010d98 <__ctype_b_loc@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #720]!	; 0x2d0

00010da4 <exit@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #712]!	; 0x2c8

00010db0 <strlen@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #704]!	; 0x2c0

00010dbc <__errno_location@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc8 <__cxa_atexit@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd4 <memset@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #680]!	; 0x2a8

00010de0 <__printf_chk@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dec <fileno@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #664]!	; 0x298

00010df8 <__fprintf_chk@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #656]!	; 0x290

00010e04 <fclose@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #648]!	; 0x288

00010e10 <fseeko64@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #640]!	; 0x280

00010e1c <setlocale@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #632]!	; 0x278

00010e28 <strrchr@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #624]!	; 0x270

00010e34 <nl_langinfo@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #616]!	; 0x268

00010e40 <bindtextdomain@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #608]!	; 0x260

00010e4c <strncmp@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #600]!	; 0x258

00010e58 <abort@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #592]!	; 0x250

00010e64 <putchar_unlocked@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #584]!	; 0x248

Disassembly of section .text:

00010e70 <.text>:
   10e70:	mov	fp, #0
   10e74:	mov	lr, #0
   10e78:	pop	{r1}		; (ldr r1, [sp], #4)
   10e7c:	mov	r2, sp
   10e80:	push	{r2}		; (str r2, [sp, #-4]!)
   10e84:	push	{r0}		; (str r0, [sp, #-4]!)
   10e88:	ldr	ip, [pc, #16]	; 10ea0 <putchar_unlocked@plt+0x3c>
   10e8c:	push	{ip}		; (str ip, [sp, #-4]!)
   10e90:	ldr	r0, [pc, #12]	; 10ea4 <putchar_unlocked@plt+0x40>
   10e94:	ldr	r3, [pc, #12]	; 10ea8 <putchar_unlocked@plt+0x44>
   10e98:	bl	10d68 <__libc_start_main@plt>
   10e9c:	bl	10e58 <abort@plt>
   10ea0:	andeq	r4, r1, r0, lsr #11
   10ea4:	andeq	r1, r1, r8, asr r2
   10ea8:	andeq	r4, r1, r0, asr #10
   10eac:	ldr	r3, [pc, #20]	; 10ec8 <putchar_unlocked@plt+0x64>
   10eb0:	ldr	r2, [pc, #20]	; 10ecc <putchar_unlocked@plt+0x68>
   10eb4:	add	r3, pc, r3
   10eb8:	ldr	r2, [r3, r2]
   10ebc:	cmp	r2, #0
   10ec0:	bxeq	lr
   10ec4:	b	10d80 <__gmon_start__@plt>
   10ec8:	andeq	r5, r1, r4, asr #2
   10ecc:	strheq	r0, [r0], -r8
   10ed0:	ldr	r0, [pc, #24]	; 10ef0 <putchar_unlocked@plt+0x8c>
   10ed4:	ldr	r3, [pc, #24]	; 10ef4 <putchar_unlocked@plt+0x90>
   10ed8:	cmp	r3, r0
   10edc:	bxeq	lr
   10ee0:	ldr	r3, [pc, #16]	; 10ef8 <putchar_unlocked@plt+0x94>
   10ee4:	cmp	r3, #0
   10ee8:	bxeq	lr
   10eec:	bx	r3
   10ef0:	andeq	r6, r2, r0, lsl r1
   10ef4:	andeq	r6, r2, r0, lsl r1
   10ef8:	andeq	r0, r0, r0
   10efc:	ldr	r0, [pc, #36]	; 10f28 <putchar_unlocked@plt+0xc4>
   10f00:	ldr	r1, [pc, #36]	; 10f2c <putchar_unlocked@plt+0xc8>
   10f04:	sub	r1, r1, r0
   10f08:	asr	r1, r1, #2
   10f0c:	add	r1, r1, r1, lsr #31
   10f10:	asrs	r1, r1, #1
   10f14:	bxeq	lr
   10f18:	ldr	r3, [pc, #16]	; 10f30 <putchar_unlocked@plt+0xcc>
   10f1c:	cmp	r3, #0
   10f20:	bxeq	lr
   10f24:	bx	r3
   10f28:	andeq	r6, r2, r0, lsl r1
   10f2c:	andeq	r6, r2, r0, lsl r1
   10f30:	andeq	r0, r0, r0
   10f34:	push	{r4, lr}
   10f38:	ldr	r4, [pc, #24]	; 10f58 <putchar_unlocked@plt+0xf4>
   10f3c:	ldrb	r3, [r4]
   10f40:	cmp	r3, #0
   10f44:	popne	{r4, pc}
   10f48:	bl	10ed0 <putchar_unlocked@plt+0x6c>
   10f4c:	mov	r3, #1
   10f50:	strb	r3, [r4]
   10f54:	pop	{r4, pc}
   10f58:	andeq	r6, r2, ip, lsr #2
   10f5c:	b	10efc <putchar_unlocked@plt+0x98>
   10f60:	push	{fp, lr}
   10f64:	mov	fp, sp
   10f68:	sub	sp, sp, #8
   10f6c:	mov	r4, r0
   10f70:	cmp	r0, #0
   10f74:	bne	11060 <putchar_unlocked@plt+0x1fc>
   10f78:	movw	r1, #17907	; 0x45f3
   10f7c:	movt	r1, #1
   10f80:	mov	r0, #0
   10f84:	mov	r2, #5
   10f88:	bl	10cd8 <dcgettext@plt>
   10f8c:	mov	r1, r0
   10f90:	movw	r5, #24888	; 0x6138
   10f94:	movt	r5, #2
   10f98:	ldr	r2, [r5]
   10f9c:	mov	r0, #1
   10fa0:	mov	r3, r2
   10fa4:	bl	10de0 <__printf_chk@plt>
   10fa8:	movw	r1, #17960	; 0x4628
   10fac:	movt	r1, #1
   10fb0:	mov	r0, #0
   10fb4:	mov	r2, #5
   10fb8:	bl	10cd8 <dcgettext@plt>
   10fbc:	movw	r6, #24868	; 0x6124
   10fc0:	movt	r6, #2
   10fc4:	ldr	r1, [r6]
   10fc8:	bl	10c78 <fputs_unlocked@plt>
   10fcc:	bl	110a4 <putchar_unlocked@plt+0x240>
   10fd0:	movw	r1, #18064	; 0x4690
   10fd4:	movt	r1, #1
   10fd8:	mov	r0, #0
   10fdc:	mov	r2, #5
   10fe0:	bl	10cd8 <dcgettext@plt>
   10fe4:	ldr	r1, [r6]
   10fe8:	bl	10c78 <fputs_unlocked@plt>
   10fec:	movw	r1, #18266	; 0x475a
   10ff0:	movt	r1, #1
   10ff4:	mov	r0, #0
   10ff8:	mov	r2, #5
   10ffc:	bl	10cd8 <dcgettext@plt>
   11000:	ldr	r1, [r6]
   11004:	bl	10c78 <fputs_unlocked@plt>
   11008:	movw	r1, #18311	; 0x4787
   1100c:	movt	r1, #1
   11010:	mov	r0, #0
   11014:	mov	r2, #5
   11018:	bl	10cd8 <dcgettext@plt>
   1101c:	ldr	r1, [r6]
   11020:	bl	10c78 <fputs_unlocked@plt>
   11024:	movw	r1, #18365	; 0x47bd
   11028:	movt	r1, #1
   1102c:	mov	r0, #0
   11030:	mov	r2, #5
   11034:	bl	10cd8 <dcgettext@plt>
   11038:	mov	r1, r0
   1103c:	ldr	r2, [r5]
   11040:	str	r2, [sp]
   11044:	str	r2, [sp, #4]
   11048:	mov	r0, #1
   1104c:	mov	r3, r2
   11050:	bl	10de0 <__printf_chk@plt>
   11054:	bl	110d4 <putchar_unlocked@plt+0x270>
   11058:	mov	r0, r4
   1105c:	bl	10da4 <exit@plt>
   11060:	movw	r0, #24864	; 0x6120
   11064:	movt	r0, #2
   11068:	ldr	r5, [r0]
   1106c:	movw	r1, #17868	; 0x45cc
   11070:	movt	r1, #1
   11074:	mov	r0, #0
   11078:	mov	r2, #5
   1107c:	bl	10cd8 <dcgettext@plt>
   11080:	mov	r2, r0
   11084:	movw	r0, #24888	; 0x6138
   11088:	movt	r0, #2
   1108c:	ldr	r3, [r0]
   11090:	mov	r0, r5
   11094:	mov	r1, #1
   11098:	bl	10df8 <__fprintf_chk@plt>
   1109c:	mov	r0, r4
   110a0:	bl	10da4 <exit@plt>
   110a4:	push	{fp, lr}
   110a8:	mov	fp, sp
   110ac:	movw	r1, #18652	; 0x48dc
   110b0:	movt	r1, #1
   110b4:	mov	r0, #0
   110b8:	mov	r2, #5
   110bc:	bl	10cd8 <dcgettext@plt>
   110c0:	movw	r1, #24868	; 0x6124
   110c4:	movt	r1, #2
   110c8:	ldr	r1, [r1]
   110cc:	pop	{fp, lr}
   110d0:	b	10c78 <fputs_unlocked@plt>
   110d4:	push	{r4, r5, fp, lr}
   110d8:	add	fp, sp, #8
   110dc:	sub	sp, sp, #56	; 0x38
   110e0:	movw	r0, #19168	; 0x4ae0
   110e4:	movt	r0, #1
   110e8:	add	r1, r0, #32
   110ec:	mov	r5, sp
   110f0:	mov	r2, #48	; 0x30
   110f4:	vld1.64	{d16-d17}, [r1]
   110f8:	add	r1, r5, #32
   110fc:	add	r3, r0, #16
   11100:	vld1.64	{d18-d19}, [r0], r2
   11104:	vld1.64	{d20-d21}, [r3]
   11108:	vldr	d22, [r0]
   1110c:	vst1.64	{d16-d17}, [r1]
   11110:	add	r0, r5, #16
   11114:	vst1.64	{d20-d21}, [r0]
   11118:	mov	r0, r5
   1111c:	vst1.64	{d18-d19}, [r0], r2
   11120:	vstr	d22, [r0]
   11124:	ldr	r1, [sp]
   11128:	cmp	r1, #0
   1112c:	beq	11154 <putchar_unlocked@plt+0x2f0>
   11130:	mov	r5, sp
   11134:	movw	r4, #18550	; 0x4876
   11138:	movt	r4, #1
   1113c:	mov	r0, r4
   11140:	bl	10c84 <strcmp@plt>
   11144:	cmp	r0, #0
   11148:	ldrne	r1, [r5, #8]!
   1114c:	cmpne	r1, #0
   11150:	bne	1113c <putchar_unlocked@plt+0x2d8>
   11154:	ldr	r4, [r5, #4]
   11158:	movw	r1, #18822	; 0x4986
   1115c:	movt	r1, #1
   11160:	mov	r0, #0
   11164:	mov	r2, #5
   11168:	bl	10cd8 <dcgettext@plt>
   1116c:	mov	r1, r0
   11170:	movw	r2, #18589	; 0x489d
   11174:	movt	r2, #1
   11178:	movw	r3, #18845	; 0x499d
   1117c:	movt	r3, #1
   11180:	mov	r0, #1
   11184:	bl	10de0 <__printf_chk@plt>
   11188:	movw	r5, #18550	; 0x4876
   1118c:	movt	r5, #1
   11190:	cmp	r4, #0
   11194:	moveq	r4, r5
   11198:	mov	r0, #5
   1119c:	mov	r1, #0
   111a0:	bl	10e1c <setlocale@plt>
   111a4:	cmp	r0, #0
   111a8:	beq	111e8 <putchar_unlocked@plt+0x384>
   111ac:	movw	r1, #18885	; 0x49c5
   111b0:	movt	r1, #1
   111b4:	mov	r2, #3
   111b8:	bl	10e4c <strncmp@plt>
   111bc:	cmp	r0, #0
   111c0:	beq	111e8 <putchar_unlocked@plt+0x384>
   111c4:	movw	r1, #18889	; 0x49c9
   111c8:	movt	r1, #1
   111cc:	mov	r0, #0
   111d0:	mov	r2, #5
   111d4:	bl	10cd8 <dcgettext@plt>
   111d8:	movw	r1, #24868	; 0x6124
   111dc:	movt	r1, #2
   111e0:	ldr	r1, [r1]
   111e4:	bl	10c78 <fputs_unlocked@plt>
   111e8:	movw	r1, #18960	; 0x4a10
   111ec:	movt	r1, #1
   111f0:	mov	r0, #0
   111f4:	mov	r2, #5
   111f8:	bl	10cd8 <dcgettext@plt>
   111fc:	mov	r1, r0
   11200:	movw	r2, #18845	; 0x499d
   11204:	movt	r2, #1
   11208:	mov	r0, #1
   1120c:	mov	r3, r5
   11210:	bl	10de0 <__printf_chk@plt>
   11214:	movw	r1, #18987	; 0x4a2b
   11218:	movt	r1, #1
   1121c:	mov	r0, #0
   11220:	mov	r2, #5
   11224:	bl	10cd8 <dcgettext@plt>
   11228:	mov	r1, r0
   1122c:	movw	r0, #18755	; 0x4943
   11230:	movt	r0, #1
   11234:	movw	r3, #18549	; 0x4875
   11238:	movt	r3, #1
   1123c:	cmp	r4, r5
   11240:	moveq	r3, r0
   11244:	mov	r0, #1
   11248:	mov	r2, r4
   1124c:	bl	10de0 <__printf_chk@plt>
   11250:	sub	sp, fp, #8
   11254:	pop	{r4, r5, fp, pc}
   11258:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1125c:	add	fp, sp, #28
   11260:	sub	sp, sp, #12
   11264:	mov	r8, r1
   11268:	mov	r5, r0
   1126c:	ldr	r0, [r1]
   11270:	bl	11758 <putchar_unlocked@plt+0x8f4>
   11274:	movw	r1, #18549	; 0x4875
   11278:	movt	r1, #1
   1127c:	mov	r0, #6
   11280:	bl	10e1c <setlocale@plt>
   11284:	movw	r6, #18593	; 0x48a1
   11288:	movt	r6, #1
   1128c:	movw	r1, #18559	; 0x487f
   11290:	movt	r1, #1
   11294:	mov	r0, r6
   11298:	bl	10e40 <bindtextdomain@plt>
   1129c:	mov	r0, r6
   112a0:	bl	10cf0 <textdomain@plt>
   112a4:	movw	r0, #5520	; 0x1590
   112a8:	movt	r0, #1
   112ac:	bl	145a4 <putchar_unlocked@plt+0x3740>
   112b0:	mov	r2, #0
   112b4:	movw	r4, #18583	; 0x4897
   112b8:	movt	r4, #1
   112bc:	movw	r9, #19072	; 0x4a80
   112c0:	movt	r9, #1
   112c4:	mov	r6, #0
   112c8:	mov	sl, #0
   112cc:	mov	r1, #0
   112d0:	b	112e0 <putchar_unlocked@plt+0x47c>
   112d4:	mov	sl, #1
   112d8:	mov	r1, r7
   112dc:	mov	r2, #0
   112e0:	mov	r7, r1
   112e4:	str	r2, [sp]
   112e8:	mov	r0, r5
   112ec:	mov	r1, r8
   112f0:	mov	r2, r4
   112f4:	mov	r3, r9
   112f8:	bl	10d8c <getopt_long@plt>
   112fc:	cmp	r0, #96	; 0x60
   11300:	ble	1133c <putchar_unlocked@plt+0x4d8>
   11304:	cmp	r0, #97	; 0x61
   11308:	beq	112d4 <putchar_unlocked@plt+0x470>
   1130c:	mov	r1, #1
   11310:	cmp	r0, #122	; 0x7a
   11314:	mov	r2, #0
   11318:	beq	112e0 <putchar_unlocked@plt+0x47c>
   1131c:	cmp	r0, #115	; 0x73
   11320:	bne	11438 <putchar_unlocked@plt+0x5d4>
   11324:	movw	r0, #24872	; 0x6128
   11328:	movt	r0, #2
   1132c:	ldr	r6, [r0]
   11330:	mov	sl, #1
   11334:	mov	r1, r7
   11338:	b	112e0 <putchar_unlocked@plt+0x47c>
   1133c:	cmn	r0, #1
   11340:	bne	113d8 <putchar_unlocked@plt+0x574>
   11344:	movw	r4, #24856	; 0x6118
   11348:	movt	r4, #2
   1134c:	ldr	r2, [r4]
   11350:	cmp	r2, r5
   11354:	bge	11440 <putchar_unlocked@plt+0x5dc>
   11358:	add	r3, r2, #2
   1135c:	cmp	r3, r5
   11360:	bge	11370 <putchar_unlocked@plt+0x50c>
   11364:	eor	r0, sl, #1
   11368:	tst	r0, #1
   1136c:	bne	1146c <putchar_unlocked@plt+0x608>
   11370:	tst	sl, #1
   11374:	beq	113b0 <putchar_unlocked@plt+0x54c>
   11378:	ldr	r0, [r4]
   1137c:	cmp	r0, r5
   11380:	bge	113cc <putchar_unlocked@plt+0x568>
   11384:	and	r7, r7, #1
   11388:	ldr	r0, [r8, r0, lsl #2]
   1138c:	mov	r1, r6
   11390:	mov	r2, r7
   11394:	bl	114b0 <putchar_unlocked@plt+0x64c>
   11398:	ldr	r0, [r4]
   1139c:	add	r0, r0, #1
   113a0:	str	r0, [r4]
   113a4:	cmp	r0, r5
   113a8:	blt	11388 <putchar_unlocked@plt+0x524>
   113ac:	b	113cc <putchar_unlocked@plt+0x568>
   113b0:	ldr	r0, [r8, r2, lsl #2]
   113b4:	mov	r1, #0
   113b8:	cmp	r3, r5
   113bc:	addeq	r1, r8, r2, lsl #2
   113c0:	ldreq	r1, [r1, #4]
   113c4:	and	r2, r7, #1
   113c8:	bl	114b0 <putchar_unlocked@plt+0x64c>
   113cc:	mov	r0, #0
   113d0:	sub	sp, fp, #28
   113d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113d8:	cmn	r0, #3
   113dc:	bne	11428 <putchar_unlocked@plt+0x5c4>
   113e0:	movw	r0, #24776	; 0x60c8
   113e4:	movt	r0, #2
   113e8:	ldr	r3, [r0]
   113ec:	movw	r0, #24868	; 0x6124
   113f0:	movt	r0, #2
   113f4:	ldr	r0, [r0]
   113f8:	mov	r1, #0
   113fc:	movw	r2, #18603	; 0x48ab
   11400:	movt	r2, #1
   11404:	str	r2, [sp]
   11408:	str	r1, [sp, #4]
   1140c:	movw	r1, #18550	; 0x4876
   11410:	movt	r1, #1
   11414:	movw	r2, #18589	; 0x489d
   11418:	movt	r2, #1
   1141c:	bl	13760 <putchar_unlocked@plt+0x28fc>
   11420:	mov	r0, #0
   11424:	bl	10da4 <exit@plt>
   11428:	cmn	r0, #2
   1142c:	bne	11438 <putchar_unlocked@plt+0x5d4>
   11430:	mov	r0, #0
   11434:	bl	10f60 <putchar_unlocked@plt+0xfc>
   11438:	mov	r0, #1
   1143c:	bl	10f60 <putchar_unlocked@plt+0xfc>
   11440:	movw	r1, #18619	; 0x48bb
   11444:	movt	r1, #1
   11448:	mov	r0, #0
   1144c:	mov	r2, #5
   11450:	bl	10cd8 <dcgettext@plt>
   11454:	mov	r2, r0
   11458:	mov	r0, #0
   1145c:	mov	r1, #0
   11460:	bl	10d50 <error@plt>
   11464:	mov	r0, #1
   11468:	bl	10f60 <putchar_unlocked@plt+0xfc>
   1146c:	movw	r1, #18635	; 0x48cb
   11470:	movt	r1, #1
   11474:	mov	r0, #0
   11478:	mov	r2, #5
   1147c:	bl	10cd8 <dcgettext@plt>
   11480:	mov	r5, r0
   11484:	ldr	r0, [r4]
   11488:	add	r0, r8, r0, lsl #2
   1148c:	ldr	r0, [r0, #8]
   11490:	bl	12f90 <putchar_unlocked@plt+0x212c>
   11494:	mov	r3, r0
   11498:	mov	r0, #0
   1149c:	mov	r1, #0
   114a0:	mov	r2, r5
   114a4:	bl	10d50 <error@plt>
   114a8:	mov	r0, #1
   114ac:	bl	10f60 <putchar_unlocked@plt+0xfc>
   114b0:	push	{r4, r5, r6, sl, fp, lr}
   114b4:	add	fp, sp, #16
   114b8:	mov	r5, r2
   114bc:	mov	r6, r1
   114c0:	bl	11678 <putchar_unlocked@plt+0x814>
   114c4:	mov	r4, r0
   114c8:	bl	116ec <putchar_unlocked@plt+0x888>
   114cc:	cmp	r6, #0
   114d0:	ldrbne	r0, [r4]
   114d4:	cmpne	r0, #47	; 0x2f
   114d8:	bne	1150c <putchar_unlocked@plt+0x6a8>
   114dc:	movw	r0, #24868	; 0x6124
   114e0:	movt	r0, #2
   114e4:	ldr	r1, [r0]
   114e8:	mov	r0, r4
   114ec:	bl	10c78 <fputs_unlocked@plt>
   114f0:	mov	r0, #10
   114f4:	cmp	r5, #0
   114f8:	movwne	r0, #0
   114fc:	bl	10e64 <putchar_unlocked@plt>
   11500:	mov	r0, r4
   11504:	pop	{r4, r5, r6, sl, fp, lr}
   11508:	b	11730 <putchar_unlocked@plt+0x8cc>
   1150c:	mov	r0, r4
   11510:	mov	r1, r6
   11514:	bl	1151c <putchar_unlocked@plt+0x6b8>
   11518:	b	114dc <putchar_unlocked@plt+0x678>
   1151c:	push	{r4, r5, r6, sl, fp, lr}
   11520:	add	fp, sp, #16
   11524:	mov	r5, r1
   11528:	mov	r4, r0
   1152c:	bl	10db0 <strlen@plt>
   11530:	add	r6, r4, r0
   11534:	mov	r0, r5
   11538:	bl	10db0 <strlen@plt>
   1153c:	add	r0, r5, r0
   11540:	b	11554 <putchar_unlocked@plt+0x6f0>
   11544:	ldrb	r1, [r0, #-1]!
   11548:	ldrb	r2, [r6, #-1]!
   1154c:	cmp	r2, r1
   11550:	popne	{r4, r5, r6, sl, fp, pc}
   11554:	cmp	r6, r4
   11558:	cmphi	r0, r5
   1155c:	bhi	11544 <putchar_unlocked@plt+0x6e0>
   11560:	cmp	r6, r4
   11564:	movhi	r0, #0
   11568:	strbhi	r0, [r6]
   1156c:	pop	{r4, r5, r6, sl, fp, pc}
   11570:	movw	r1, #24880	; 0x6130
   11574:	movt	r1, #2
   11578:	str	r0, [r1]
   1157c:	bx	lr
   11580:	movw	r1, #24884	; 0x6134
   11584:	movt	r1, #2
   11588:	strb	r0, [r1]
   1158c:	bx	lr
   11590:	push	{r4, r5, r6, sl, fp, lr}
   11594:	add	fp, sp, #16
   11598:	sub	sp, sp, #8
   1159c:	movw	r0, #24868	; 0x6124
   115a0:	movt	r0, #2
   115a4:	ldr	r0, [r0]
   115a8:	bl	140dc <putchar_unlocked@plt+0x3278>
   115ac:	cmp	r0, #0
   115b0:	beq	115d8 <putchar_unlocked@plt+0x774>
   115b4:	movw	r0, #24884	; 0x6134
   115b8:	movt	r0, #2
   115bc:	ldrb	r0, [r0]
   115c0:	cmp	r0, #0
   115c4:	beq	115f8 <putchar_unlocked@plt+0x794>
   115c8:	bl	10dbc <__errno_location@plt>
   115cc:	ldr	r0, [r0]
   115d0:	cmp	r0, #32
   115d4:	bne	115f8 <putchar_unlocked@plt+0x794>
   115d8:	movw	r0, #24864	; 0x6120
   115dc:	movt	r0, #2
   115e0:	ldr	r0, [r0]
   115e4:	bl	140dc <putchar_unlocked@plt+0x3278>
   115e8:	cmp	r0, #0
   115ec:	subeq	sp, fp, #16
   115f0:	popeq	{r4, r5, r6, sl, fp, pc}
   115f4:	b	11668 <putchar_unlocked@plt+0x804>
   115f8:	movw	r1, #19239	; 0x4b27
   115fc:	movt	r1, #1
   11600:	mov	r0, #0
   11604:	mov	r2, #5
   11608:	bl	10cd8 <dcgettext@plt>
   1160c:	mov	r4, r0
   11610:	movw	r0, #24880	; 0x6130
   11614:	movt	r0, #2
   11618:	ldr	r6, [r0]
   1161c:	bl	10dbc <__errno_location@plt>
   11620:	ldr	r5, [r0]
   11624:	cmp	r6, #0
   11628:	bne	11644 <putchar_unlocked@plt+0x7e0>
   1162c:	movw	r2, #19255	; 0x4b37
   11630:	movt	r2, #1
   11634:	mov	r0, #0
   11638:	mov	r1, r5
   1163c:	mov	r3, r4
   11640:	b	11664 <putchar_unlocked@plt+0x800>
   11644:	mov	r0, r6
   11648:	bl	12e40 <putchar_unlocked@plt+0x1fdc>
   1164c:	mov	r3, r0
   11650:	str	r4, [sp]
   11654:	movw	r2, #19251	; 0x4b33
   11658:	movt	r2, #1
   1165c:	mov	r0, #0
   11660:	mov	r1, r5
   11664:	bl	10d50 <error@plt>
   11668:	movw	r0, #24780	; 0x60cc
   1166c:	movt	r0, #2
   11670:	ldr	r0, [r0]
   11674:	bl	10ca8 <_exit@plt>
   11678:	push	{r4, r5, r6, sl, fp, lr}
   1167c:	add	fp, sp, #16
   11680:	mov	r6, r0
   11684:	bl	13d34 <putchar_unlocked@plt+0x2ed0>
   11688:	mov	r4, r0
   1168c:	ldrb	r0, [r0]
   11690:	cmp	r0, #0
   11694:	beq	116b4 <putchar_unlocked@plt+0x850>
   11698:	mov	r0, r4
   1169c:	bl	13d80 <putchar_unlocked@plt+0x2f1c>
   116a0:	mov	r5, r0
   116a4:	ldrb	r0, [r4, r0]
   116a8:	cmp	r0, #47	; 0x2f
   116ac:	addeq	r5, r5, #1
   116b0:	b	116c4 <putchar_unlocked@plt+0x860>
   116b4:	mov	r0, r6
   116b8:	bl	13d80 <putchar_unlocked@plt+0x2f1c>
   116bc:	mov	r5, r0
   116c0:	mov	r4, r6
   116c4:	add	r0, r5, #1
   116c8:	bl	13890 <putchar_unlocked@plt+0x2a2c>
   116cc:	mov	r6, r0
   116d0:	mov	r1, r4
   116d4:	mov	r2, r5
   116d8:	bl	10cb4 <memcpy@plt>
   116dc:	mov	r0, #0
   116e0:	strb	r0, [r6, r5]
   116e4:	mov	r0, r6
   116e8:	pop	{r4, r5, r6, sl, fp, pc}
   116ec:	push	{r4, r5, fp, lr}
   116f0:	add	fp, sp, #8
   116f4:	mov	r4, r0
   116f8:	bl	13d34 <putchar_unlocked@plt+0x2ed0>
   116fc:	mov	r5, r0
   11700:	ldrb	r0, [r0]
   11704:	cmp	r0, #0
   11708:	moveq	r5, r4
   1170c:	mov	r0, r5
   11710:	bl	13d80 <putchar_unlocked@plt+0x2f1c>
   11714:	ldrb	r1, [r5, r0]
   11718:	mov	r2, #0
   1171c:	strb	r2, [r5, r0]
   11720:	cmp	r1, #0
   11724:	movwne	r1, #1
   11728:	mov	r0, r1
   1172c:	pop	{r4, r5, fp, pc}
   11730:	push	{r4, r5, r6, sl, fp, lr}
   11734:	add	fp, sp, #16
   11738:	mov	r4, r0
   1173c:	bl	10dbc <__errno_location@plt>
   11740:	mov	r5, r0
   11744:	ldr	r6, [r0]
   11748:	mov	r0, r4
   1174c:	bl	10c9c <free@plt>
   11750:	str	r6, [r5]
   11754:	pop	{r4, r5, r6, sl, fp, pc}
   11758:	push	{r4, r5, fp, lr}
   1175c:	add	fp, sp, #8
   11760:	cmp	r0, #0
   11764:	beq	117f8 <putchar_unlocked@plt+0x994>
   11768:	mov	r4, r0
   1176c:	mov	r1, #47	; 0x2f
   11770:	bl	10e28 <strrchr@plt>
   11774:	cmp	r0, #0
   11778:	mov	r5, r4
   1177c:	addne	r5, r0, #1
   11780:	sub	r0, r5, r4
   11784:	cmp	r0, #7
   11788:	blt	117dc <putchar_unlocked@plt+0x978>
   1178c:	sub	r0, r5, #7
   11790:	movw	r1, #19314	; 0x4b72
   11794:	movt	r1, #1
   11798:	mov	r2, #7
   1179c:	bl	10e4c <strncmp@plt>
   117a0:	cmp	r0, #0
   117a4:	bne	117dc <putchar_unlocked@plt+0x978>
   117a8:	movw	r1, #19322	; 0x4b7a
   117ac:	movt	r1, #1
   117b0:	mov	r0, r5
   117b4:	mov	r2, #3
   117b8:	bl	10e4c <strncmp@plt>
   117bc:	cmp	r0, #0
   117c0:	beq	117cc <putchar_unlocked@plt+0x968>
   117c4:	mov	r4, r5
   117c8:	b	117dc <putchar_unlocked@plt+0x978>
   117cc:	add	r4, r5, #3
   117d0:	movw	r0, #24848	; 0x6110
   117d4:	movt	r0, #2
   117d8:	str	r4, [r0]
   117dc:	movw	r0, #24852	; 0x6114
   117e0:	movt	r0, #2
   117e4:	str	r4, [r0]
   117e8:	movw	r0, #24888	; 0x6138
   117ec:	movt	r0, #2
   117f0:	str	r4, [r0]
   117f4:	pop	{r4, r5, fp, pc}
   117f8:	movw	r0, #24864	; 0x6120
   117fc:	movt	r0, #2
   11800:	ldr	r3, [r0]
   11804:	movw	r0, #19258	; 0x4b3a
   11808:	movt	r0, #1
   1180c:	mov	r1, #55	; 0x37
   11810:	mov	r2, #1
   11814:	bl	10d08 <fwrite@plt>
   11818:	bl	10e58 <abort@plt>
   1181c:	push	{r4, r5, r6, sl, fp, lr}
   11820:	add	fp, sp, #16
   11824:	mov	r4, r0
   11828:	movw	r0, #24896	; 0x6140
   1182c:	movt	r0, #2
   11830:	cmp	r4, #0
   11834:	moveq	r4, r0
   11838:	bl	10dbc <__errno_location@plt>
   1183c:	mov	r5, r0
   11840:	ldr	r6, [r0]
   11844:	mov	r0, r4
   11848:	mov	r1, #48	; 0x30
   1184c:	bl	13b5c <putchar_unlocked@plt+0x2cf8>
   11850:	str	r6, [r5]
   11854:	pop	{r4, r5, r6, sl, fp, pc}
   11858:	movw	r1, #24896	; 0x6140
   1185c:	movt	r1, #2
   11860:	cmp	r0, #0
   11864:	movne	r1, r0
   11868:	ldr	r0, [r1]
   1186c:	bx	lr
   11870:	movw	r2, #24896	; 0x6140
   11874:	movt	r2, #2
   11878:	cmp	r0, #0
   1187c:	movne	r2, r0
   11880:	str	r1, [r2]
   11884:	bx	lr
   11888:	movw	r3, #24896	; 0x6140
   1188c:	movt	r3, #2
   11890:	cmp	r0, #0
   11894:	movne	r3, r0
   11898:	ubfx	r0, r1, #5, #3
   1189c:	add	r0, r3, r0, lsl #2
   118a0:	ldr	r3, [r0, #8]
   118a4:	and	r1, r1, #31
   118a8:	eor	r2, r2, r3, lsr r1
   118ac:	and	r2, r2, #1
   118b0:	eor	r2, r3, r2, lsl r1
   118b4:	str	r2, [r0, #8]
   118b8:	mov	r0, #1
   118bc:	and	r0, r0, r3, lsr r1
   118c0:	bx	lr
   118c4:	movw	r2, #24896	; 0x6140
   118c8:	movt	r2, #2
   118cc:	cmp	r0, #0
   118d0:	movne	r2, r0
   118d4:	ldr	r0, [r2, #4]
   118d8:	str	r1, [r2, #4]
   118dc:	bx	lr
   118e0:	movw	r3, #24896	; 0x6140
   118e4:	movt	r3, #2
   118e8:	cmp	r0, #0
   118ec:	movne	r3, r0
   118f0:	mov	r0, #10
   118f4:	str	r0, [r3]
   118f8:	cmp	r1, #0
   118fc:	cmpne	r2, #0
   11900:	bne	11910 <putchar_unlocked@plt+0xaac>
   11904:	push	{fp, lr}
   11908:	mov	fp, sp
   1190c:	bl	10e58 <abort@plt>
   11910:	str	r1, [r3, #40]	; 0x28
   11914:	str	r2, [r3, #44]	; 0x2c
   11918:	bx	lr
   1191c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11920:	add	fp, sp, #28
   11924:	sub	sp, sp, #20
   11928:	mov	r8, r3
   1192c:	mov	r9, r2
   11930:	mov	sl, r1
   11934:	mov	r7, r0
   11938:	ldr	r0, [fp, #8]
   1193c:	movw	r5, #24896	; 0x6140
   11940:	movt	r5, #2
   11944:	cmp	r0, #0
   11948:	movne	r5, r0
   1194c:	bl	10dbc <__errno_location@plt>
   11950:	mov	r4, r0
   11954:	ldm	r5, {r0, r1}
   11958:	ldr	r2, [r5, #40]	; 0x28
   1195c:	ldr	r3, [r5, #44]	; 0x2c
   11960:	ldr	r6, [r4]
   11964:	add	r5, r5, #8
   11968:	stm	sp, {r0, r1, r5}
   1196c:	str	r2, [sp, #12]
   11970:	str	r3, [sp, #16]
   11974:	mov	r0, r7
   11978:	mov	r1, sl
   1197c:	mov	r2, r9
   11980:	mov	r3, r8
   11984:	bl	11994 <putchar_unlocked@plt+0xb30>
   11988:	str	r6, [r4]
   1198c:	sub	sp, fp, #28
   11990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11994:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11998:	add	fp, sp, #28
   1199c:	sub	sp, sp, #156	; 0x9c
   119a0:	mov	r9, r3
   119a4:	str	r2, [fp, #-84]	; 0xffffffac
   119a8:	mov	r6, r1
   119ac:	mov	r7, r0
   119b0:	ldr	r0, [fp, #12]
   119b4:	and	r1, r0, #4
   119b8:	str	r1, [sp, #32]
   119bc:	and	r1, r0, #1
   119c0:	str	r1, [sp, #36]	; 0x24
   119c4:	ubfx	sl, r0, #1, #1
   119c8:	bl	10d20 <__ctype_get_mb_cur_max@plt>
   119cc:	str	r0, [sp, #40]	; 0x28
   119d0:	ldr	r0, [fp, #24]
   119d4:	str	r0, [sp, #76]	; 0x4c
   119d8:	ldr	r0, [fp, #20]
   119dc:	str	r0, [sp, #68]	; 0x44
   119e0:	ldr	r0, [fp, #8]
   119e4:	str	r0, [fp, #-60]	; 0xffffffc4
   119e8:	mov	r0, #0
   119ec:	str	r0, [sp, #72]	; 0x48
   119f0:	mov	r0, #0
   119f4:	str	r0, [sp, #92]	; 0x5c
   119f8:	mov	r0, #0
   119fc:	str	r0, [fp, #-72]	; 0xffffffb8
   11a00:	mov	r0, #0
   11a04:	mov	r1, #0
   11a08:	str	r1, [fp, #-56]	; 0xffffffc8
   11a0c:	mov	r1, #0
   11a10:	str	r1, [sp, #56]	; 0x38
   11a14:	mov	r5, #1
   11a18:	str	r7, [sp, #80]	; 0x50
   11a1c:	mov	r4, r6
   11a20:	ldr	r6, [fp, #-60]	; 0xffffffc4
   11a24:	cmp	r6, #10
   11a28:	bhi	12990 <putchar_unlocked@plt+0x1b2c>
   11a2c:	add	r1, pc, #20
   11a30:	mov	r8, #0
   11a34:	mov	r2, #1
   11a38:	mov	r3, #0
   11a3c:	ldr	ip, [fp, #-84]	; 0xffffffac
   11a40:	mov	lr, r9
   11a44:	ldr	pc, [r1, r6, lsl #2]
   11a48:	andeq	r1, r1, r0, lsr #22
   11a4c:	andeq	r1, r1, r0, asr fp
   11a50:	andeq	r1, r1, r0, lsl fp
   11a54:	andeq	r1, r1, r8, lsl #22
   11a58:	andeq	r1, r1, r4, asr #22
   11a5c:	andeq	r1, r1, r4, lsr #23
   11a60:	andeq	r1, r1, r0, lsr fp
   11a64:	andeq	r1, r1, r0, lsl #24
   11a68:	andeq	r1, r1, r4, ror sl
   11a6c:	andeq	r1, r1, r4, ror sl
   11a70:	muleq	r1, ip, sl
   11a74:	movw	r0, #19406	; 0x4bce
   11a78:	movt	r0, #1
   11a7c:	mov	r1, r6
   11a80:	bl	12f9c <putchar_unlocked@plt+0x2138>
   11a84:	str	r0, [sp, #68]	; 0x44
   11a88:	movw	r0, #19408	; 0x4bd0
   11a8c:	movt	r0, #1
   11a90:	mov	r1, r6
   11a94:	bl	12f9c <putchar_unlocked@plt+0x2138>
   11a98:	str	r0, [sp, #76]	; 0x4c
   11a9c:	mov	r8, #0
   11aa0:	tst	sl, #1
   11aa4:	bne	11adc <putchar_unlocked@plt+0xc78>
   11aa8:	ldr	r0, [sp, #68]	; 0x44
   11aac:	ldrb	r0, [r0]
   11ab0:	cmp	r0, #0
   11ab4:	beq	11adc <putchar_unlocked@plt+0xc78>
   11ab8:	ldr	r1, [sp, #68]	; 0x44
   11abc:	add	r1, r1, #1
   11ac0:	mov	r8, #0
   11ac4:	cmp	r8, r4
   11ac8:	strbcc	r0, [r7, r8]
   11acc:	ldrb	r0, [r1, r8]
   11ad0:	add	r8, r8, #1
   11ad4:	cmp	r0, #0
   11ad8:	bne	11ac4 <putchar_unlocked@plt+0xc60>
   11adc:	ldr	r6, [sp, #76]	; 0x4c
   11ae0:	mov	r0, r6
   11ae4:	bl	10db0 <strlen@plt>
   11ae8:	str	r0, [fp, #-72]	; 0xffffffb8
   11aec:	str	r6, [sp, #92]	; 0x5c
   11af0:	mov	r2, #1
   11af4:	mov	r3, sl
   11af8:	ldr	ip, [fp, #-84]	; 0xffffffac
   11afc:	mov	lr, r9
   11b00:	ldr	r6, [fp, #-60]	; 0xffffffc4
   11b04:	b	11c00 <putchar_unlocked@plt+0xd9c>
   11b08:	mov	r0, #1
   11b0c:	b	11b50 <putchar_unlocked@plt+0xcec>
   11b10:	tst	sl, #1
   11b14:	bne	11b50 <putchar_unlocked@plt+0xcec>
   11b18:	mov	r2, r0
   11b1c:	b	11b78 <putchar_unlocked@plt+0xd14>
   11b20:	mov	r6, #0
   11b24:	mov	r8, #0
   11b28:	mov	r2, r0
   11b2c:	b	11bfc <putchar_unlocked@plt+0xd98>
   11b30:	mov	r0, #1
   11b34:	str	r0, [fp, #-72]	; 0xffffffb8
   11b38:	mov	r8, #0
   11b3c:	mov	r6, #5
   11b40:	b	11bbc <putchar_unlocked@plt+0xd58>
   11b44:	mov	r2, #1
   11b48:	tst	sl, #1
   11b4c:	beq	11b78 <putchar_unlocked@plt+0xd14>
   11b50:	mov	r1, #1
   11b54:	str	r1, [fp, #-72]	; 0xffffffb8
   11b58:	mov	r8, #0
   11b5c:	mov	r6, #2
   11b60:	movw	r1, #19408	; 0x4bd0
   11b64:	movt	r1, #1
   11b68:	str	r1, [sp, #92]	; 0x5c
   11b6c:	mov	r2, r0
   11b70:	mov	r3, #1
   11b74:	b	11c00 <putchar_unlocked@plt+0xd9c>
   11b78:	mov	r8, #1
   11b7c:	mov	r6, #2
   11b80:	cmp	r4, #0
   11b84:	movne	r0, #39	; 0x27
   11b88:	strbne	r0, [r7]
   11b8c:	movw	r0, #19408	; 0x4bd0
   11b90:	movt	r0, #1
   11b94:	str	r0, [sp, #92]	; 0x5c
   11b98:	mov	r0, #1
   11b9c:	str	r0, [fp, #-72]	; 0xffffffb8
   11ba0:	b	11bfc <putchar_unlocked@plt+0xd98>
   11ba4:	mov	r6, #5
   11ba8:	tst	sl, #1
   11bac:	beq	11bd4 <putchar_unlocked@plt+0xd70>
   11bb0:	mov	r0, #1
   11bb4:	str	r0, [fp, #-72]	; 0xffffffb8
   11bb8:	mov	r8, #0
   11bbc:	movw	r0, #19404	; 0x4bcc
   11bc0:	movt	r0, #1
   11bc4:	str	r0, [sp, #92]	; 0x5c
   11bc8:	mov	r2, #1
   11bcc:	mov	r3, #1
   11bd0:	b	11c00 <putchar_unlocked@plt+0xd9c>
   11bd4:	cmp	r4, #0
   11bd8:	movne	r0, #34	; 0x22
   11bdc:	strbne	r0, [r7]
   11be0:	mov	r8, #1
   11be4:	movw	r0, #19404	; 0x4bcc
   11be8:	movt	r0, #1
   11bec:	str	r0, [sp, #92]	; 0x5c
   11bf0:	mov	r0, #1
   11bf4:	str	r0, [fp, #-72]	; 0xffffffb8
   11bf8:	mov	r2, #1
   11bfc:	mov	r3, #0
   11c00:	ldr	r0, [fp, #16]
   11c04:	cmp	r0, #0
   11c08:	movwne	r0, #1
   11c0c:	and	r0, r0, r3
   11c10:	str	r0, [fp, #-88]	; 0xffffffa8
   11c14:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11c18:	cmp	r0, #0
   11c1c:	movwne	r0, #1
   11c20:	and	r1, r0, r3
   11c24:	and	r1, r2, r1
   11c28:	str	r1, [sp, #48]	; 0x30
   11c2c:	str	r6, [fp, #-60]	; 0xffffffc4
   11c30:	subs	r6, r6, #2
   11c34:	clz	r1, r6
   11c38:	lsr	r1, r1, #5
   11c3c:	and	r1, r1, r3
   11c40:	str	r1, [sp, #60]	; 0x3c
   11c44:	str	r6, [fp, #-80]	; 0xffffffb0
   11c48:	mov	r1, r6
   11c4c:	movwne	r1, #1
   11c50:	str	r3, [fp, #-76]	; 0xffffffb4
   11c54:	eor	r3, r3, #1
   11c58:	str	r3, [sp, #88]	; 0x58
   11c5c:	orr	r3, r1, r3
   11c60:	str	r3, [sp, #64]	; 0x40
   11c64:	and	r1, r1, r2
   11c68:	str	r1, [fp, #-68]	; 0xffffffbc
   11c6c:	and	r0, r0, r1
   11c70:	str	r0, [fp, #-64]	; 0xffffffc0
   11c74:	str	r2, [sp, #84]	; 0x54
   11c78:	eor	r0, r2, #1
   11c7c:	str	r0, [sp, #52]	; 0x34
   11c80:	mov	r6, #0
   11c84:	cmn	lr, #1
   11c88:	beq	11c98 <putchar_unlocked@plt+0xe34>
   11c8c:	cmp	r6, lr
   11c90:	bne	11ca4 <putchar_unlocked@plt+0xe40>
   11c94:	b	12810 <putchar_unlocked@plt+0x19ac>
   11c98:	ldrb	r0, [ip, r6]
   11c9c:	cmp	r0, #0
   11ca0:	beq	12810 <putchar_unlocked@plt+0x19ac>
   11ca4:	str	r5, [fp, #-48]	; 0xffffffd0
   11ca8:	mov	sl, #0
   11cac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11cb0:	cmp	r0, #0
   11cb4:	beq	11ce8 <putchar_unlocked@plt+0xe84>
   11cb8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11cbc:	add	r5, r6, r0
   11cc0:	cmp	r0, #2
   11cc4:	bcc	11ce0 <putchar_unlocked@plt+0xe7c>
   11cc8:	cmn	lr, #1
   11ccc:	bne	11ce0 <putchar_unlocked@plt+0xe7c>
   11cd0:	mov	r0, ip
   11cd4:	bl	10db0 <strlen@plt>
   11cd8:	ldr	ip, [fp, #-84]	; 0xffffffac
   11cdc:	mov	lr, r0
   11ce0:	cmp	r5, lr
   11ce4:	bls	11cf4 <putchar_unlocked@plt+0xe90>
   11ce8:	mov	r0, #0
   11cec:	str	r0, [fp, #-52]	; 0xffffffcc
   11cf0:	b	11d40 <putchar_unlocked@plt+0xedc>
   11cf4:	mov	r5, r4
   11cf8:	mov	r4, lr
   11cfc:	add	r0, ip, r6
   11d00:	ldr	r1, [sp, #92]	; 0x5c
   11d04:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11d08:	bl	10ccc <memcmp@plt>
   11d0c:	cmp	r0, #0
   11d10:	mov	r1, r0
   11d14:	movwne	r1, #1
   11d18:	ldr	r2, [sp, #88]	; 0x58
   11d1c:	orr	r1, r1, r2
   11d20:	tst	r1, #1
   11d24:	beq	128d4 <putchar_unlocked@plt+0x1a70>
   11d28:	clz	r0, r0
   11d2c:	lsr	r0, r0, #5
   11d30:	str	r0, [fp, #-52]	; 0xffffffcc
   11d34:	ldr	ip, [fp, #-84]	; 0xffffffac
   11d38:	mov	lr, r4
   11d3c:	mov	r4, r5
   11d40:	ldrb	r5, [ip, r6]
   11d44:	cmp	r5, #126	; 0x7e
   11d48:	bhi	12104 <putchar_unlocked@plt+0x12a0>
   11d4c:	mov	r9, #1
   11d50:	mov	r2, #110	; 0x6e
   11d54:	mov	r0, #97	; 0x61
   11d58:	add	r3, pc, #4
   11d5c:	mov	r1, #0
   11d60:	ldr	pc, [r3, r5, lsl #2]
   11d64:	strdeq	r1, [r1], -ip
   11d68:	andeq	r2, r1, r4, lsl #2
   11d6c:	andeq	r2, r1, r4, lsl #2
   11d70:	andeq	r2, r1, r4, lsl #2
   11d74:	andeq	r2, r1, r4, lsl #2
   11d78:	andeq	r2, r1, r4, lsl #2
   11d7c:	andeq	r2, r1, r4, lsl #2
   11d80:	andeq	r2, r1, r8, asr #3
   11d84:	ldrdeq	r1, [r1], -ip
   11d88:	ldrdeq	r1, [r1], -r4
   11d8c:	andeq	r1, r1, r8, ror #31
   11d90:	andeq	r2, r1, ip, rrx
   11d94:	andeq	r1, r1, ip, asr #31
   11d98:	andeq	r1, r1, r4, ror #31
   11d9c:	andeq	r2, r1, r4, lsl #2
   11da0:	andeq	r2, r1, r4, lsl #2
   11da4:	andeq	r2, r1, r4, lsl #2
   11da8:	andeq	r2, r1, r4, lsl #2
   11dac:	andeq	r2, r1, r4, lsl #2
   11db0:	andeq	r2, r1, r4, lsl #2
   11db4:	andeq	r2, r1, r4, lsl #2
   11db8:	andeq	r2, r1, r4, lsl #2
   11dbc:	andeq	r2, r1, r4, lsl #2
   11dc0:	andeq	r2, r1, r4, lsl #2
   11dc4:	andeq	r2, r1, r4, lsl #2
   11dc8:	andeq	r2, r1, r4, lsl #2
   11dcc:	andeq	r2, r1, r4, lsl #2
   11dd0:	andeq	r2, r1, r4, lsl #2
   11dd4:	andeq	r2, r1, r4, lsl #2
   11dd8:	andeq	r2, r1, r4, lsl #2
   11ddc:	andeq	r2, r1, r4, lsl #2
   11de0:	andeq	r2, r1, r4, lsl #2
   11de4:	andeq	r2, r1, r8, ror r1
   11de8:	andeq	r2, r1, ip, ror r1
   11dec:	andeq	r2, r1, ip, ror r1
   11df0:	andeq	r1, r1, r4, ror pc
   11df4:	andeq	r2, r1, ip, ror r1
   11df8:	andeq	r1, r1, r0, ror #30
   11dfc:	andeq	r2, r1, ip, ror r1
   11e00:	andeq	r2, r1, r4, ror r0
   11e04:	andeq	r2, r1, ip, ror r1
   11e08:	andeq	r2, r1, ip, ror r1
   11e0c:	andeq	r2, r1, ip, ror r1
   11e10:	andeq	r1, r1, r0, ror #30
   11e14:	andeq	r1, r1, r0, ror #30
   11e18:	andeq	r1, r1, r0, ror #30
   11e1c:	andeq	r1, r1, r0, ror #30
   11e20:	andeq	r1, r1, r0, ror #30
   11e24:	andeq	r1, r1, r0, ror #30
   11e28:	andeq	r1, r1, r0, ror #30
   11e2c:	andeq	r1, r1, r0, ror #30
   11e30:	andeq	r1, r1, r0, ror #30
   11e34:	andeq	r1, r1, r0, ror #30
   11e38:	andeq	r1, r1, r0, ror #30
   11e3c:	andeq	r1, r1, r0, ror #30
   11e40:	andeq	r1, r1, r0, ror #30
   11e44:	andeq	r1, r1, r0, ror #30
   11e48:	andeq	r1, r1, r0, ror #30
   11e4c:	andeq	r1, r1, r0, ror #30
   11e50:	andeq	r2, r1, ip, ror r1
   11e54:	andeq	r2, r1, ip, ror r1
   11e58:	andeq	r2, r1, ip, ror r1
   11e5c:	andeq	r2, r1, ip, ror r1
   11e60:	andeq	r2, r1, ip, lsr r0
   11e64:	andeq	r2, r1, r4, lsl #2
   11e68:	andeq	r1, r1, r0, ror #30
   11e6c:	andeq	r1, r1, r0, ror #30
   11e70:	andeq	r1, r1, r0, ror #30
   11e74:	andeq	r1, r1, r0, ror #30
   11e78:	andeq	r1, r1, r0, ror #30
   11e7c:	andeq	r1, r1, r0, ror #30
   11e80:	andeq	r1, r1, r0, ror #30
   11e84:	andeq	r1, r1, r0, ror #30
   11e88:	andeq	r1, r1, r0, ror #30
   11e8c:	andeq	r1, r1, r0, ror #30
   11e90:	andeq	r1, r1, r0, ror #30
   11e94:	andeq	r1, r1, r0, ror #30
   11e98:	andeq	r1, r1, r0, ror #30
   11e9c:	andeq	r1, r1, r0, ror #30
   11ea0:	andeq	r1, r1, r0, ror #30
   11ea4:	andeq	r1, r1, r0, ror #30
   11ea8:	andeq	r1, r1, r0, ror #30
   11eac:	andeq	r1, r1, r0, ror #30
   11eb0:	andeq	r1, r1, r0, ror #30
   11eb4:	andeq	r1, r1, r0, ror #30
   11eb8:	andeq	r1, r1, r0, ror #30
   11ebc:	andeq	r1, r1, r0, ror #30
   11ec0:	andeq	r1, r1, r0, ror #30
   11ec4:	andeq	r1, r1, r0, ror #30
   11ec8:	andeq	r1, r1, r0, ror #30
   11ecc:	andeq	r1, r1, r0, ror #30
   11ed0:	andeq	r2, r1, ip, ror r1
   11ed4:	andeq	r1, r1, r8, lsr #31
   11ed8:	andeq	r1, r1, r0, ror #30
   11edc:	andeq	r2, r1, ip, ror r1
   11ee0:	andeq	r1, r1, r0, ror #30
   11ee4:	andeq	r2, r1, ip, ror r1
   11ee8:	andeq	r1, r1, r0, ror #30
   11eec:	andeq	r1, r1, r0, ror #30
   11ef0:	andeq	r1, r1, r0, ror #30
   11ef4:	andeq	r1, r1, r0, ror #30
   11ef8:	andeq	r1, r1, r0, ror #30
   11efc:	andeq	r1, r1, r0, ror #30
   11f00:	andeq	r1, r1, r0, ror #30
   11f04:	andeq	r1, r1, r0, ror #30
   11f08:	andeq	r1, r1, r0, ror #30
   11f0c:	andeq	r1, r1, r0, ror #30
   11f10:	andeq	r1, r1, r0, ror #30
   11f14:	andeq	r1, r1, r0, ror #30
   11f18:	andeq	r1, r1, r0, ror #30
   11f1c:	andeq	r1, r1, r0, ror #30
   11f20:	andeq	r1, r1, r0, ror #30
   11f24:	andeq	r1, r1, r0, ror #30
   11f28:	andeq	r1, r1, r0, ror #30
   11f2c:	andeq	r1, r1, r0, ror #30
   11f30:	andeq	r1, r1, r0, ror #30
   11f34:	andeq	r1, r1, r0, ror #30
   11f38:	andeq	r1, r1, r0, ror #30
   11f3c:	andeq	r1, r1, r0, ror #30
   11f40:	andeq	r1, r1, r0, ror #30
   11f44:	andeq	r1, r1, r0, ror #30
   11f48:	andeq	r1, r1, r0, ror #30
   11f4c:	andeq	r1, r1, r0, ror #30
   11f50:	andeq	r1, r1, r8, lsl #31
   11f54:	andeq	r2, r1, ip, ror r1
   11f58:	andeq	r1, r1, r8, lsl #31
   11f5c:	andeq	r1, r1, r4, ror pc
   11f60:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11f64:	cmp	r0, #0
   11f68:	beq	121dc <putchar_unlocked@plt+0x1378>
   11f6c:	ldr	r0, [fp, #16]
   11f70:	b	121e0 <putchar_unlocked@plt+0x137c>
   11f74:	mov	r9, #0
   11f78:	cmp	r6, #0
   11f7c:	beq	12178 <putchar_unlocked@plt+0x1314>
   11f80:	mov	sl, #0
   11f84:	b	11f60 <putchar_unlocked@plt+0x10fc>
   11f88:	mov	r9, #0
   11f8c:	cmn	lr, #1
   11f90:	beq	1215c <putchar_unlocked@plt+0x12f8>
   11f94:	cmp	r6, #0
   11f98:	bne	11f80 <putchar_unlocked@plt+0x111c>
   11f9c:	cmp	lr, #1
   11fa0:	beq	12178 <putchar_unlocked@plt+0x1314>
   11fa4:	b	11f80 <putchar_unlocked@plt+0x111c>
   11fa8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11fac:	cmp	r0, #2
   11fb0:	bne	121a4 <putchar_unlocked@plt+0x1340>
   11fb4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11fb8:	tst	r0, #1
   11fbc:	bne	128ec <putchar_unlocked@plt+0x1a88>
   11fc0:	mov	sl, #0
   11fc4:	mov	r0, #92	; 0x5c
   11fc8:	b	121b8 <putchar_unlocked@plt+0x1354>
   11fcc:	mov	r0, #102	; 0x66
   11fd0:	b	121c8 <putchar_unlocked@plt+0x1364>
   11fd4:	mov	r2, #116	; 0x74
   11fd8:	b	11fe8 <putchar_unlocked@plt+0x1184>
   11fdc:	mov	r0, #98	; 0x62
   11fe0:	b	121c8 <putchar_unlocked@plt+0x1364>
   11fe4:	mov	r2, #114	; 0x72
   11fe8:	ldr	r0, [sp, #64]	; 0x40
   11fec:	tst	r0, #1
   11ff0:	mov	r0, r2
   11ff4:	bne	121c8 <putchar_unlocked@plt+0x1364>
   11ff8:	b	128ec <putchar_unlocked@plt+0x1a88>
   11ffc:	ldr	r0, [sp, #84]	; 0x54
   12000:	tst	r0, #1
   12004:	beq	122b8 <putchar_unlocked@plt+0x1454>
   12008:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1200c:	tst	r0, #1
   12010:	bne	128ec <putchar_unlocked@plt+0x1a88>
   12014:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12018:	cmp	r0, #2
   1201c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12020:	movwne	r0, #1
   12024:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12028:	orr	r0, r0, r2
   1202c:	tst	r0, #1
   12030:	beq	126ac <putchar_unlocked@plt+0x1848>
   12034:	mov	r0, r8
   12038:	b	126e0 <putchar_unlocked@plt+0x187c>
   1203c:	mov	sl, #0
   12040:	mov	r5, #63	; 0x3f
   12044:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12048:	cmp	r0, #5
   1204c:	beq	1246c <putchar_unlocked@plt+0x1608>
   12050:	cmp	r0, #2
   12054:	bne	1250c <putchar_unlocked@plt+0x16a8>
   12058:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1205c:	tst	r0, #1
   12060:	mov	r9, #0
   12064:	beq	11f60 <putchar_unlocked@plt+0x10fc>
   12068:	b	128ec <putchar_unlocked@plt+0x1a88>
   1206c:	mov	r0, #118	; 0x76
   12070:	b	121c8 <putchar_unlocked@plt+0x1364>
   12074:	mov	r5, #39	; 0x27
   12078:	mov	r0, #1
   1207c:	str	r0, [sp, #56]	; 0x38
   12080:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12084:	cmp	r0, #2
   12088:	bne	122d8 <putchar_unlocked@plt+0x1474>
   1208c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12090:	tst	r0, #1
   12094:	bne	128ec <putchar_unlocked@plt+0x1a88>
   12098:	ldr	r2, [sp, #72]	; 0x48
   1209c:	cmp	r2, #0
   120a0:	mov	r0, r2
   120a4:	movwne	r0, #1
   120a8:	clz	r1, r4
   120ac:	lsr	r1, r1, #5
   120b0:	orrs	r0, r0, r1
   120b4:	moveq	r2, r4
   120b8:	str	r2, [sp, #72]	; 0x48
   120bc:	moveq	r4, r0
   120c0:	cmp	r8, r4
   120c4:	movcc	r0, #39	; 0x27
   120c8:	strbcc	r0, [r7, r8]
   120cc:	add	r0, r8, #1
   120d0:	cmp	r0, r4
   120d4:	movcc	r1, #92	; 0x5c
   120d8:	strbcc	r1, [r7, r0]
   120dc:	add	r0, r8, #2
   120e0:	cmp	r0, r4
   120e4:	movcc	r1, #39	; 0x27
   120e8:	strbcc	r1, [r7, r0]
   120ec:	add	r8, r8, #3
   120f0:	mov	r0, #0
   120f4:	str	r0, [fp, #-56]	; 0xffffffc8
   120f8:	mov	sl, #0
   120fc:	mov	r9, #1
   12100:	b	11f60 <putchar_unlocked@plt+0x10fc>
   12104:	str	r4, [sp, #24]
   12108:	ldr	r0, [sp, #40]	; 0x28
   1210c:	cmp	r0, #1
   12110:	bne	122e0 <putchar_unlocked@plt+0x147c>
   12114:	str	lr, [sp, #28]
   12118:	bl	10d98 <__ctype_b_loc@plt>
   1211c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12120:	ldr	r0, [r0]
   12124:	add	r0, r0, r5, lsl #1
   12128:	ldrb	r0, [r0, #1]
   1212c:	ubfx	r9, r0, #6, #1
   12130:	mov	r1, #1
   12134:	ldr	r4, [sp, #24]
   12138:	ldr	r0, [sp, #52]	; 0x34
   1213c:	orr	r0, r9, r0
   12140:	mov	r2, r1
   12144:	cmp	r1, #1
   12148:	bhi	12514 <putchar_unlocked@plt+0x16b0>
   1214c:	tst	r0, #1
   12150:	beq	12514 <putchar_unlocked@plt+0x16b0>
   12154:	ldr	lr, [sp, #28]
   12158:	b	11f60 <putchar_unlocked@plt+0x10fc>
   1215c:	cmp	r6, #0
   12160:	ldrbeq	r0, [ip, #1]
   12164:	cmpeq	r0, #0
   12168:	beq	12178 <putchar_unlocked@plt+0x1314>
   1216c:	mvn	lr, #0
   12170:	mov	sl, #0
   12174:	b	11f60 <putchar_unlocked@plt+0x10fc>
   12178:	mov	r1, #1
   1217c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12180:	cmp	r0, #2
   12184:	bne	1219c <putchar_unlocked@plt+0x1338>
   12188:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1218c:	tst	r0, #1
   12190:	mov	r9, r1
   12194:	beq	11f60 <putchar_unlocked@plt+0x10fc>
   12198:	b	128ec <putchar_unlocked@plt+0x1a88>
   1219c:	mov	r9, r1
   121a0:	b	11f60 <putchar_unlocked@plt+0x10fc>
   121a4:	mov	sl, #0
   121a8:	mov	r0, #92	; 0x5c
   121ac:	ldr	r1, [sp, #48]	; 0x30
   121b0:	cmp	r1, #0
   121b4:	beq	121c8 <putchar_unlocked@plt+0x1364>
   121b8:	mov	r9, #0
   121bc:	cmp	sl, #0
   121c0:	beq	12778 <putchar_unlocked@plt+0x1914>
   121c4:	b	127b4 <putchar_unlocked@plt+0x1950>
   121c8:	mov	r9, #0
   121cc:	ldr	r1, [sp, #84]	; 0x54
   121d0:	tst	r1, #1
   121d4:	mov	sl, #0
   121d8:	bne	12218 <putchar_unlocked@plt+0x13b4>
   121dc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   121e0:	cmp	r0, #0
   121e4:	mov	r0, r5
   121e8:	beq	1220c <putchar_unlocked@plt+0x13a8>
   121ec:	ubfx	r0, r5, #5, #3
   121f0:	ldr	r1, [fp, #16]
   121f4:	ldr	r0, [r1, r0, lsl #2]
   121f8:	and	r1, r5, #31
   121fc:	mov	r2, #1
   12200:	tst	r0, r2, lsl r1
   12204:	mov	r0, r5
   12208:	bne	12218 <putchar_unlocked@plt+0x13b4>
   1220c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12210:	cmp	r1, #0
   12214:	beq	12770 <putchar_unlocked@plt+0x190c>
   12218:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1221c:	tst	r1, #1
   12220:	bne	128ec <putchar_unlocked@plt+0x1a88>
   12224:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12228:	cmp	r1, #2
   1222c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12230:	movwne	r1, #1
   12234:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12238:	orr	r1, r1, r2
   1223c:	tst	r1, #1
   12240:	beq	1224c <putchar_unlocked@plt+0x13e8>
   12244:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12248:	b	12288 <putchar_unlocked@plt+0x1424>
   1224c:	cmp	r8, r4
   12250:	movcc	r1, #39	; 0x27
   12254:	strbcc	r1, [r7, r8]
   12258:	add	r1, r8, #1
   1225c:	cmp	r1, r4
   12260:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12264:	movcc	r2, #36	; 0x24
   12268:	strbcc	r2, [r7, r1]
   1226c:	add	r1, r8, #2
   12270:	cmp	r1, r4
   12274:	movcc	r2, #39	; 0x27
   12278:	strbcc	r2, [r7, r1]
   1227c:	add	r8, r8, #3
   12280:	mov	r1, #1
   12284:	str	r1, [fp, #-56]	; 0xffffffc8
   12288:	cmp	r8, r4
   1228c:	movcc	r1, #92	; 0x5c
   12290:	strbcc	r1, [r7, r8]
   12294:	add	r8, r8, #1
   12298:	cmp	r8, r4
   1229c:	strbcc	r0, [r7, r8]
   122a0:	and	r5, r5, r9
   122a4:	add	r8, r8, #1
   122a8:	add	r6, r6, #1
   122ac:	cmn	lr, #1
   122b0:	bne	11c8c <putchar_unlocked@plt+0xe28>
   122b4:	b	11c98 <putchar_unlocked@plt+0xe34>
   122b8:	mov	r9, #0
   122bc:	ldr	r0, [sp, #36]	; 0x24
   122c0:	cmp	r0, #0
   122c4:	mov	sl, #0
   122c8:	mov	r5, #0
   122cc:	beq	121dc <putchar_unlocked@plt+0x1378>
   122d0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   122d4:	b	122a8 <putchar_unlocked@plt+0x1444>
   122d8:	mov	r9, #1
   122dc:	b	11f60 <putchar_unlocked@plt+0x10fc>
   122e0:	mov	r0, #0
   122e4:	str	r0, [fp, #-36]	; 0xffffffdc
   122e8:	str	r0, [fp, #-40]	; 0xffffffd8
   122ec:	cmn	lr, #1
   122f0:	bne	12304 <putchar_unlocked@plt+0x14a0>
   122f4:	mov	r0, ip
   122f8:	bl	10db0 <strlen@plt>
   122fc:	ldr	ip, [fp, #-84]	; 0xffffffac
   12300:	mov	lr, r0
   12304:	add	r0, ip, r6
   12308:	str	r0, [sp, #20]
   1230c:	mov	r9, #1
   12310:	mov	r7, #0
   12314:	sub	r4, fp, #40	; 0x28
   12318:	str	lr, [sp, #28]
   1231c:	str	r7, [sp, #44]	; 0x2c
   12320:	add	r7, r7, r6
   12324:	add	r1, ip, r7
   12328:	sub	r2, lr, r7
   1232c:	sub	r0, fp, #44	; 0x2c
   12330:	mov	r3, r4
   12334:	bl	14398 <putchar_unlocked@plt+0x3534>
   12338:	cmp	r0, #0
   1233c:	beq	127fc <putchar_unlocked@plt+0x1998>
   12340:	cmn	r0, #1
   12344:	beq	127bc <putchar_unlocked@plt+0x1958>
   12348:	cmn	r0, #2
   1234c:	ldr	lr, [sp, #28]
   12350:	beq	127c4 <putchar_unlocked@plt+0x1960>
   12354:	cmp	r0, #2
   12358:	mov	r1, #0
   1235c:	movwcc	r1, #1
   12360:	ldr	r2, [sp, #60]	; 0x3c
   12364:	eor	r2, r2, #1
   12368:	orrs	r1, r2, r1
   1236c:	ldr	r4, [sp, #24]
   12370:	bne	12430 <putchar_unlocked@plt+0x15cc>
   12374:	ldr	r1, [sp, #44]	; 0x2c
   12378:	ldr	r2, [sp, #20]
   1237c:	add	r1, r2, r1
   12380:	mov	r2, #1
   12384:	ldrb	r3, [r1, r2]
   12388:	sub	r3, r3, #91	; 0x5b
   1238c:	cmp	r3, #33	; 0x21
   12390:	bhi	12424 <putchar_unlocked@plt+0x15c0>
   12394:	add	r7, pc, #0
   12398:	ldr	pc, [r7, r3, lsl #2]
   1239c:	andeq	r2, r1, r4, ror #17
   123a0:	andeq	r2, r1, r4, ror #17
   123a4:	andeq	r2, r1, r4, lsr #8
   123a8:	andeq	r2, r1, r4, ror #17
   123ac:	andeq	r2, r1, r4, lsr #8
   123b0:	andeq	r2, r1, r4, ror #17
   123b4:	andeq	r2, r1, r4, lsr #8
   123b8:	andeq	r2, r1, r4, lsr #8
   123bc:	andeq	r2, r1, r4, lsr #8
   123c0:	andeq	r2, r1, r4, lsr #8
   123c4:	andeq	r2, r1, r4, lsr #8
   123c8:	andeq	r2, r1, r4, lsr #8
   123cc:	andeq	r2, r1, r4, lsr #8
   123d0:	andeq	r2, r1, r4, lsr #8
   123d4:	andeq	r2, r1, r4, lsr #8
   123d8:	andeq	r2, r1, r4, lsr #8
   123dc:	andeq	r2, r1, r4, lsr #8
   123e0:	andeq	r2, r1, r4, lsr #8
   123e4:	andeq	r2, r1, r4, lsr #8
   123e8:	andeq	r2, r1, r4, lsr #8
   123ec:	andeq	r2, r1, r4, lsr #8
   123f0:	andeq	r2, r1, r4, lsr #8
   123f4:	andeq	r2, r1, r4, lsr #8
   123f8:	andeq	r2, r1, r4, lsr #8
   123fc:	andeq	r2, r1, r4, lsr #8
   12400:	andeq	r2, r1, r4, lsr #8
   12404:	andeq	r2, r1, r4, lsr #8
   12408:	andeq	r2, r1, r4, lsr #8
   1240c:	andeq	r2, r1, r4, lsr #8
   12410:	andeq	r2, r1, r4, lsr #8
   12414:	andeq	r2, r1, r4, lsr #8
   12418:	andeq	r2, r1, r4, lsr #8
   1241c:	andeq	r2, r1, r4, lsr #8
   12420:	andeq	r2, r1, r4, ror #17
   12424:	add	r2, r2, #1
   12428:	cmp	r2, r0
   1242c:	bcc	12384 <putchar_unlocked@plt+0x1520>
   12430:	ldr	r7, [sp, #44]	; 0x2c
   12434:	add	r7, r0, r7
   12438:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1243c:	bl	10cfc <iswprint@plt>
   12440:	cmp	r0, #0
   12444:	movwne	r0, #1
   12448:	and	r9, r9, r0
   1244c:	sub	r4, fp, #40	; 0x28
   12450:	mov	r0, r4
   12454:	bl	10cc0 <mbsinit@plt>
   12458:	ldr	lr, [sp, #28]
   1245c:	cmp	r0, #0
   12460:	ldr	ip, [fp, #-84]	; 0xffffffac
   12464:	beq	1231c <putchar_unlocked@plt+0x14b8>
   12468:	b	12804 <putchar_unlocked@plt+0x19a0>
   1246c:	ldr	r0, [sp, #32]
   12470:	cmp	r0, #0
   12474:	beq	1250c <putchar_unlocked@plt+0x16a8>
   12478:	add	r0, r6, #2
   1247c:	cmp	r0, lr
   12480:	bcs	1250c <putchar_unlocked@plt+0x16a8>
   12484:	add	r1, ip, r6
   12488:	ldrb	r1, [r1, #1]
   1248c:	cmp	r1, #63	; 0x3f
   12490:	bne	1250c <putchar_unlocked@plt+0x16a8>
   12494:	ldrb	r9, [ip, r0]
   12498:	sub	r2, r9, #33	; 0x21
   1249c:	cmp	r2, #29
   124a0:	bhi	1250c <putchar_unlocked@plt+0x16a8>
   124a4:	mov	r3, #1
   124a8:	movw	r1, #20929	; 0x51c1
   124ac:	movt	r1, #14336	; 0x3800
   124b0:	tst	r1, r3, lsl r2
   124b4:	beq	1250c <putchar_unlocked@plt+0x16a8>
   124b8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   124bc:	tst	r1, #1
   124c0:	bne	128ec <putchar_unlocked@plt+0x1a88>
   124c4:	cmp	r8, r4
   124c8:	movcc	r1, #63	; 0x3f
   124cc:	strbcc	r1, [r7, r8]
   124d0:	add	r2, r8, #1
   124d4:	cmp	r2, r4
   124d8:	movcc	r1, #34	; 0x22
   124dc:	strbcc	r1, [r7, r2]
   124e0:	add	r2, r8, #2
   124e4:	cmp	r2, r4
   124e8:	movcc	r1, #34	; 0x22
   124ec:	strbcc	r1, [r7, r2]
   124f0:	add	r2, r8, #3
   124f4:	cmp	r2, r4
   124f8:	movcc	r1, #63	; 0x3f
   124fc:	strbcc	r1, [r7, r2]
   12500:	add	r8, r8, #4
   12504:	mov	r6, r0
   12508:	mov	r5, r9
   1250c:	mov	r9, #0
   12510:	b	11f60 <putchar_unlocked@plt+0x10fc>
   12514:	add	r1, r2, r6
   12518:	str	r1, [sp, #44]	; 0x2c
   1251c:	add	r1, r6, #1
   12520:	mov	r3, #0
   12524:	ldr	lr, [sp, #28]
   12528:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1252c:	tst	r0, #1
   12530:	bne	12624 <putchar_unlocked@plt+0x17c0>
   12534:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12538:	tst	r2, #1
   1253c:	bne	128ec <putchar_unlocked@plt+0x1a88>
   12540:	cmp	r6, #2
   12544:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12548:	movwne	r3, #1
   1254c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12550:	orr	r3, r3, r2
   12554:	tst	r3, #1
   12558:	bne	12594 <putchar_unlocked@plt+0x1730>
   1255c:	cmp	r8, r4
   12560:	movcc	r2, #39	; 0x27
   12564:	strbcc	r2, [r7, r8]
   12568:	add	r3, r8, #1
   1256c:	cmp	r3, r4
   12570:	movcc	r2, #36	; 0x24
   12574:	strbcc	r2, [r7, r3]
   12578:	add	r3, r8, #2
   1257c:	cmp	r3, r4
   12580:	movcc	r2, #39	; 0x27
   12584:	strbcc	r2, [r7, r3]
   12588:	add	r8, r8, #3
   1258c:	mov	r2, #1
   12590:	str	r2, [fp, #-56]	; 0xffffffc8
   12594:	cmp	r8, r4
   12598:	movcc	r2, #92	; 0x5c
   1259c:	strbcc	r2, [r7, r8]
   125a0:	add	r3, r8, #1
   125a4:	cmp	r3, r4
   125a8:	bcs	125c8 <putchar_unlocked@plt+0x1764>
   125ac:	and	r7, r5, #192	; 0xc0
   125b0:	mov	r2, #48	; 0x30
   125b4:	orr	r7, r2, r7, lsr #6
   125b8:	ldr	r6, [sp, #80]	; 0x50
   125bc:	strb	r7, [r6, r3]
   125c0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   125c4:	ldr	r7, [sp, #80]	; 0x50
   125c8:	add	r3, r8, #2
   125cc:	cmp	r3, r4
   125d0:	bcs	125f0 <putchar_unlocked@plt+0x178c>
   125d4:	lsr	r7, r5, #3
   125d8:	mov	r2, #6
   125dc:	bfi	r7, r2, #3, #29
   125e0:	ldr	r6, [sp, #80]	; 0x50
   125e4:	strb	r7, [r6, r3]
   125e8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   125ec:	ldr	r7, [sp, #80]	; 0x50
   125f0:	mov	r2, #6
   125f4:	bfi	r5, r2, #3, #29
   125f8:	add	r8, r8, #3
   125fc:	mov	r3, #1
   12600:	b	12648 <putchar_unlocked@plt+0x17e4>
   12604:	ldr	r7, [sp, #80]	; 0x50
   12608:	cmp	r8, r4
   1260c:	strbcc	r5, [r7, r8]
   12610:	ldrb	r5, [ip, r1]
   12614:	add	r1, r1, #1
   12618:	add	r8, r8, #1
   1261c:	tst	r0, #1
   12620:	beq	12534 <putchar_unlocked@plt+0x16d0>
   12624:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12628:	tst	r2, #1
   1262c:	beq	12640 <putchar_unlocked@plt+0x17dc>
   12630:	cmp	r8, r4
   12634:	movcc	r2, #92	; 0x5c
   12638:	strbcc	r2, [r7, r8]
   1263c:	add	r8, r8, #1
   12640:	mov	r2, #0
   12644:	str	r2, [fp, #-52]	; 0xffffffcc
   12648:	and	sl, r3, #1
   1264c:	ldr	r2, [sp, #44]	; 0x2c
   12650:	cmp	r2, r1
   12654:	bls	12760 <putchar_unlocked@plt+0x18fc>
   12658:	cmp	sl, #0
   1265c:	movwne	sl, #1
   12660:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12664:	mvn	r7, r2
   12668:	orr	r7, r7, sl
   1266c:	tst	r7, #1
   12670:	bne	12604 <putchar_unlocked@plt+0x17a0>
   12674:	cmp	r8, r4
   12678:	ldrcc	r7, [sp, #80]	; 0x50
   1267c:	movcc	r2, #39	; 0x27
   12680:	strbcc	r2, [r7, r8]
   12684:	add	r7, r8, #1
   12688:	cmp	r7, r4
   1268c:	ldrcc	r6, [sp, #80]	; 0x50
   12690:	movcc	r2, #39	; 0x27
   12694:	strbcc	r2, [r6, r7]
   12698:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   1269c:	add	r8, r8, #2
   126a0:	mov	r2, #0
   126a4:	str	r2, [fp, #-56]	; 0xffffffc8
   126a8:	b	12604 <putchar_unlocked@plt+0x17a0>
   126ac:	cmp	r8, r4
   126b0:	movcc	r0, #39	; 0x27
   126b4:	strbcc	r0, [r7, r8]
   126b8:	add	r0, r8, #1
   126bc:	cmp	r0, r4
   126c0:	movcc	r1, #36	; 0x24
   126c4:	strbcc	r1, [r7, r0]
   126c8:	add	r0, r8, #2
   126cc:	cmp	r0, r4
   126d0:	movcc	r1, #39	; 0x27
   126d4:	strbcc	r1, [r7, r0]
   126d8:	add	r0, r8, #3
   126dc:	mov	r2, #1
   126e0:	cmp	r0, r4
   126e4:	movcc	r1, #92	; 0x5c
   126e8:	strbcc	r1, [r7, r0]
   126ec:	str	r2, [fp, #-56]	; 0xffffffc8
   126f0:	add	r8, r0, #1
   126f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   126f8:	cmp	r1, #2
   126fc:	beq	12750 <putchar_unlocked@plt+0x18ec>
   12700:	add	r1, r6, #1
   12704:	mov	r9, #0
   12708:	mov	sl, #1
   1270c:	mov	r5, #48	; 0x30
   12710:	cmp	r1, lr
   12714:	bcs	11f60 <putchar_unlocked@plt+0x10fc>
   12718:	ldrb	r1, [ip, r1]
   1271c:	sub	r1, r1, #48	; 0x30
   12720:	uxtb	r1, r1
   12724:	cmp	r1, #9
   12728:	bhi	11f60 <putchar_unlocked@plt+0x10fc>
   1272c:	cmp	r8, r4
   12730:	movcc	r1, #48	; 0x30
   12734:	strbcc	r1, [r7, r8]
   12738:	add	r1, r0, #2
   1273c:	cmp	r1, r4
   12740:	movcc	r2, #48	; 0x30
   12744:	strbcc	r2, [r7, r1]
   12748:	add	r8, r0, #3
   1274c:	b	11f60 <putchar_unlocked@plt+0x10fc>
   12750:	mov	r0, #48	; 0x30
   12754:	mov	sl, #1
   12758:	mov	r9, #0
   1275c:	b	1220c <putchar_unlocked@plt+0x13a8>
   12760:	sub	r6, r1, #1
   12764:	cmp	sl, #0
   12768:	movwne	sl, #1
   1276c:	mov	r0, r5
   12770:	cmp	sl, #0
   12774:	bne	127b4 <putchar_unlocked@plt+0x1950>
   12778:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1277c:	tst	r1, #1
   12780:	beq	127b4 <putchar_unlocked@plt+0x1950>
   12784:	cmp	r8, r4
   12788:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1278c:	movcc	r1, #39	; 0x27
   12790:	strbcc	r1, [r7, r8]
   12794:	add	r1, r8, #1
   12798:	cmp	r1, r4
   1279c:	movcc	r2, #39	; 0x27
   127a0:	strbcc	r2, [r7, r1]
   127a4:	add	r8, r8, #2
   127a8:	mov	r1, #0
   127ac:	str	r1, [fp, #-56]	; 0xffffffc8
   127b0:	b	12298 <putchar_unlocked@plt+0x1434>
   127b4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   127b8:	b	12298 <putchar_unlocked@plt+0x1434>
   127bc:	mov	r9, #0
   127c0:	b	127fc <putchar_unlocked@plt+0x1998>
   127c4:	mov	r9, #0
   127c8:	cmp	r7, lr
   127cc:	bcs	127fc <putchar_unlocked@plt+0x1998>
   127d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   127d4:	ldr	r7, [sp, #44]	; 0x2c
   127d8:	ldr	r0, [sp, #20]
   127dc:	ldrb	r0, [r0, r7]
   127e0:	cmp	r0, #0
   127e4:	beq	12804 <putchar_unlocked@plt+0x19a0>
   127e8:	add	r7, r7, #1
   127ec:	add	r0, r6, r7
   127f0:	cmp	r0, lr
   127f4:	bcc	127d8 <putchar_unlocked@plt+0x1974>
   127f8:	b	12804 <putchar_unlocked@plt+0x19a0>
   127fc:	ldr	ip, [fp, #-84]	; 0xffffffac
   12800:	ldr	r7, [sp, #44]	; 0x2c
   12804:	mov	r1, r7
   12808:	ldr	r7, [sp, #80]	; 0x50
   1280c:	b	12134 <putchar_unlocked@plt+0x12d0>
   12810:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12814:	eor	r0, r1, #2
   12818:	orr	r0, r0, r8
   1281c:	clz	r0, r0
   12820:	lsr	r0, r0, #5
   12824:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12828:	tst	r2, r0
   1282c:	bne	128ec <putchar_unlocked@plt+0x1a88>
   12830:	cmp	r1, #2
   12834:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12838:	movwne	r0, #1
   1283c:	orr	r0, r2, r0
   12840:	tst	r0, #1
   12844:	ldreq	r0, [sp, #56]	; 0x38
   12848:	eoreq	r0, r0, #1
   1284c:	tsteq	r0, #1
   12850:	bne	12884 <putchar_unlocked@plt+0x1a20>
   12854:	mov	r9, lr
   12858:	tst	r5, #1
   1285c:	bne	12954 <putchar_unlocked@plt+0x1af0>
   12860:	ldr	r0, [sp, #72]	; 0x48
   12864:	cmp	r0, #0
   12868:	beq	12884 <putchar_unlocked@plt+0x1a20>
   1286c:	mov	r5, #0
   12870:	cmp	r4, #0
   12874:	ldr	r0, [sp, #84]	; 0x54
   12878:	mov	sl, r2
   1287c:	ldr	r6, [sp, #72]	; 0x48
   12880:	beq	11a1c <putchar_unlocked@plt+0xbb8>
   12884:	ldr	r1, [sp, #92]	; 0x5c
   12888:	clz	r0, r1
   1288c:	lsr	r0, r0, #5
   12890:	orr	r0, r0, r2
   12894:	tst	r0, #1
   12898:	bne	128c4 <putchar_unlocked@plt+0x1a60>
   1289c:	ldrb	r0, [r1]
   128a0:	cmp	r0, #0
   128a4:	beq	128c4 <putchar_unlocked@plt+0x1a60>
   128a8:	add	r1, r1, #1
   128ac:	cmp	r8, r4
   128b0:	strbcc	r0, [r7, r8]
   128b4:	add	r8, r8, #1
   128b8:	ldrb	r0, [r1], #1
   128bc:	cmp	r0, #0
   128c0:	bne	128ac <putchar_unlocked@plt+0x1a48>
   128c4:	cmp	r8, r4
   128c8:	movcc	r0, #0
   128cc:	strbcc	r0, [r7, r8]
   128d0:	b	12948 <putchar_unlocked@plt+0x1ae4>
   128d4:	ldr	ip, [fp, #-84]	; 0xffffffac
   128d8:	mov	lr, r4
   128dc:	mov	r4, r5
   128e0:	b	128ec <putchar_unlocked@plt+0x1a88>
   128e4:	ldr	r7, [sp, #80]	; 0x50
   128e8:	ldr	ip, [fp, #-84]	; 0xffffffac
   128ec:	mov	r0, #0
   128f0:	ldr	r1, [fp, #12]
   128f4:	bic	r1, r1, #2
   128f8:	ldr	r2, [sp, #84]	; 0x54
   128fc:	tst	r2, #1
   12900:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12904:	mov	r2, r3
   12908:	movwne	r2, #4
   1290c:	cmp	r3, #2
   12910:	movne	r2, r3
   12914:	str	r2, [sp]
   12918:	str	r1, [sp, #4]
   1291c:	str	r0, [sp, #8]
   12920:	ldr	r0, [sp, #68]	; 0x44
   12924:	str	r0, [sp, #12]
   12928:	ldr	r0, [sp, #76]	; 0x4c
   1292c:	str	r0, [sp, #16]
   12930:	mov	r0, r7
   12934:	mov	r1, r4
   12938:	mov	r2, ip
   1293c:	mov	r3, lr
   12940:	bl	11994 <putchar_unlocked@plt+0xb30>
   12944:	mov	r8, r0
   12948:	mov	r0, r8
   1294c:	sub	sp, fp, #28
   12950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12954:	mov	r0, #5
   12958:	str	r0, [sp]
   1295c:	ldr	r0, [fp, #12]
   12960:	str	r0, [sp, #4]
   12964:	ldr	r0, [fp, #16]
   12968:	str	r0, [sp, #8]
   1296c:	ldr	r0, [sp, #68]	; 0x44
   12970:	str	r0, [sp, #12]
   12974:	ldr	r0, [sp, #76]	; 0x4c
   12978:	str	r0, [sp, #16]
   1297c:	mov	r0, r7
   12980:	ldr	r1, [sp, #72]	; 0x48
   12984:	ldr	r2, [fp, #-84]	; 0xffffffac
   12988:	mov	r3, r9
   1298c:	b	12940 <putchar_unlocked@plt+0x1adc>
   12990:	bl	10e58 <abort@plt>
   12994:	mov	r3, r2
   12998:	mov	r2, #0
   1299c:	b	129a0 <putchar_unlocked@plt+0x1b3c>
   129a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129a4:	add	fp, sp, #28
   129a8:	sub	sp, sp, #36	; 0x24
   129ac:	mov	r4, r2
   129b0:	str	r2, [sp, #24]
   129b4:	mov	r5, r1
   129b8:	mov	r6, r0
   129bc:	str	r0, [sp, #20]
   129c0:	movw	r8, #24896	; 0x6140
   129c4:	movt	r8, #2
   129c8:	cmp	r3, #0
   129cc:	movne	r8, r3
   129d0:	bl	10dbc <__errno_location@plt>
   129d4:	str	r0, [sp, #28]
   129d8:	ldm	r8, {r3, r9}
   129dc:	ldr	r1, [r8, #40]	; 0x28
   129e0:	ldr	r2, [r8, #44]	; 0x2c
   129e4:	ldr	r7, [r0]
   129e8:	str	r7, [sp, #32]
   129ec:	add	sl, r8, #8
   129f0:	cmp	r4, #0
   129f4:	orreq	r9, r9, #1
   129f8:	stm	sp, {r3, r9, sl}
   129fc:	str	r1, [sp, #12]
   12a00:	str	r2, [sp, #16]
   12a04:	mov	r0, #0
   12a08:	mov	r1, #0
   12a0c:	mov	r2, r6
   12a10:	mov	r3, r5
   12a14:	mov	r7, r5
   12a18:	bl	11994 <putchar_unlocked@plt+0xb30>
   12a1c:	mov	r5, r0
   12a20:	add	r4, r0, #1
   12a24:	mov	r0, r4
   12a28:	bl	138a4 <putchar_unlocked@plt+0x2a40>
   12a2c:	mov	r6, r0
   12a30:	ldr	r0, [r8]
   12a34:	ldr	r1, [r8, #40]	; 0x28
   12a38:	ldr	r2, [r8, #44]	; 0x2c
   12a3c:	stm	sp, {r0, r9, sl}
   12a40:	str	r1, [sp, #12]
   12a44:	str	r2, [sp, #16]
   12a48:	mov	r0, r6
   12a4c:	mov	r1, r4
   12a50:	ldr	r2, [sp, #20]
   12a54:	mov	r3, r7
   12a58:	bl	11994 <putchar_unlocked@plt+0xb30>
   12a5c:	ldr	r0, [sp, #24]
   12a60:	ldr	r1, [sp, #32]
   12a64:	ldr	r2, [sp, #28]
   12a68:	str	r1, [r2]
   12a6c:	cmp	r0, #0
   12a70:	strne	r5, [r0]
   12a74:	mov	r0, r6
   12a78:	sub	sp, fp, #28
   12a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12a84:	add	fp, sp, #24
   12a88:	movw	r8, #24784	; 0x60d0
   12a8c:	movt	r8, #2
   12a90:	ldr	r4, [r8]
   12a94:	movw	r5, #24788	; 0x60d4
   12a98:	movt	r5, #2
   12a9c:	ldr	r0, [r5]
   12aa0:	cmp	r0, #2
   12aa4:	blt	12ad0 <putchar_unlocked@plt+0x1c6c>
   12aa8:	add	r7, r4, #12
   12aac:	mov	r6, #0
   12ab0:	ldr	r0, [r7, r6, lsl #3]
   12ab4:	bl	11730 <putchar_unlocked@plt+0x8cc>
   12ab8:	add	r0, r6, #1
   12abc:	ldr	r1, [r5]
   12ac0:	add	r2, r6, #2
   12ac4:	cmp	r2, r1
   12ac8:	mov	r6, r0
   12acc:	blt	12ab0 <putchar_unlocked@plt+0x1c4c>
   12ad0:	ldr	r0, [r4, #4]
   12ad4:	movw	r7, #24944	; 0x6170
   12ad8:	movt	r7, #2
   12adc:	cmp	r0, r7
   12ae0:	beq	12af8 <putchar_unlocked@plt+0x1c94>
   12ae4:	bl	11730 <putchar_unlocked@plt+0x8cc>
   12ae8:	movw	r0, #24792	; 0x60d8
   12aec:	movt	r0, #2
   12af0:	mov	r6, #256	; 0x100
   12af4:	strd	r6, [r0]
   12af8:	movw	r6, #24792	; 0x60d8
   12afc:	movt	r6, #2
   12b00:	cmp	r4, r6
   12b04:	beq	12b14 <putchar_unlocked@plt+0x1cb0>
   12b08:	mov	r0, r4
   12b0c:	bl	11730 <putchar_unlocked@plt+0x8cc>
   12b10:	str	r6, [r8]
   12b14:	mov	r0, #1
   12b18:	str	r0, [r5]
   12b1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12b20:	movw	r3, #24896	; 0x6140
   12b24:	movt	r3, #2
   12b28:	mvn	r2, #0
   12b2c:	b	12b30 <putchar_unlocked@plt+0x1ccc>
   12b30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b34:	add	fp, sp, #28
   12b38:	sub	sp, sp, #44	; 0x2c
   12b3c:	mov	r7, r3
   12b40:	str	r2, [sp, #36]	; 0x24
   12b44:	str	r1, [sp, #32]
   12b48:	mov	r5, r0
   12b4c:	bl	10dbc <__errno_location@plt>
   12b50:	cmp	r5, #0
   12b54:	blt	12cc0 <putchar_unlocked@plt+0x1e5c>
   12b58:	cmn	r5, #-2147483647	; 0x80000001
   12b5c:	beq	12cc0 <putchar_unlocked@plt+0x1e5c>
   12b60:	movw	r4, #24784	; 0x60d0
   12b64:	movt	r4, #2
   12b68:	ldr	r6, [r4]
   12b6c:	str	r0, [sp, #28]
   12b70:	ldr	r0, [r0]
   12b74:	str	r0, [sp, #24]
   12b78:	movw	r8, #24788	; 0x60d4
   12b7c:	movt	r8, #2
   12b80:	ldr	r1, [r8]
   12b84:	cmp	r1, r5
   12b88:	ble	12b94 <putchar_unlocked@plt+0x1d30>
   12b8c:	mov	sl, r6
   12b90:	b	12bfc <putchar_unlocked@plt+0x1d98>
   12b94:	str	r1, [fp, #-32]	; 0xffffffe0
   12b98:	mov	r0, #8
   12b9c:	str	r0, [sp]
   12ba0:	movw	r9, #24792	; 0x60d8
   12ba4:	movt	r9, #2
   12ba8:	subs	r0, r6, r9
   12bac:	movne	r0, r6
   12bb0:	add	r2, r5, #1
   12bb4:	sub	r2, r2, r1
   12bb8:	sub	r1, fp, #32
   12bbc:	mvn	r3, #-2147483648	; 0x80000000
   12bc0:	bl	1398c <putchar_unlocked@plt+0x2b28>
   12bc4:	mov	sl, r0
   12bc8:	str	r0, [r4]
   12bcc:	cmp	r6, r9
   12bd0:	ldrdeq	r0, [r9]
   12bd4:	stmeq	sl, {r0, r1}
   12bd8:	ldr	r1, [r8]
   12bdc:	add	r0, sl, r1, lsl #3
   12be0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12be4:	sub	r1, r2, r1
   12be8:	lsl	r2, r1, #3
   12bec:	mov	r1, #0
   12bf0:	bl	10dd4 <memset@plt>
   12bf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12bf8:	str	r0, [r8]
   12bfc:	mov	r9, sl
   12c00:	ldr	r6, [r9, r5, lsl #3]!
   12c04:	ldr	r4, [r9, #4]!
   12c08:	ldm	r7, {r0, r1}
   12c0c:	ldr	r2, [r7, #40]	; 0x28
   12c10:	ldr	r3, [r7, #44]	; 0x2c
   12c14:	orr	r8, r1, #1
   12c18:	add	r1, r7, #8
   12c1c:	stm	sp, {r0, r8}
   12c20:	str	r1, [sp, #20]
   12c24:	add	r0, sp, #8
   12c28:	stm	r0, {r1, r2, r3}
   12c2c:	mov	r0, r4
   12c30:	mov	r1, r6
   12c34:	ldr	r2, [sp, #32]
   12c38:	ldr	r3, [sp, #36]	; 0x24
   12c3c:	bl	11994 <putchar_unlocked@plt+0xb30>
   12c40:	cmp	r6, r0
   12c44:	bhi	12ca8 <putchar_unlocked@plt+0x1e44>
   12c48:	add	r6, r0, #1
   12c4c:	str	r6, [sl, r5, lsl #3]
   12c50:	movw	r0, #24944	; 0x6170
   12c54:	movt	r0, #2
   12c58:	cmp	r4, r0
   12c5c:	beq	12c68 <putchar_unlocked@plt+0x1e04>
   12c60:	mov	r0, r4
   12c64:	bl	11730 <putchar_unlocked@plt+0x8cc>
   12c68:	mov	r0, r6
   12c6c:	bl	138a4 <putchar_unlocked@plt+0x2a40>
   12c70:	mov	r4, r0
   12c74:	str	r0, [r9]
   12c78:	ldr	r0, [r7]
   12c7c:	ldr	r1, [r7, #40]	; 0x28
   12c80:	ldr	r2, [r7, #44]	; 0x2c
   12c84:	stm	sp, {r0, r8}
   12c88:	ldr	r0, [sp, #20]
   12c8c:	add	r3, sp, #8
   12c90:	stm	r3, {r0, r1, r2}
   12c94:	mov	r0, r4
   12c98:	mov	r1, r6
   12c9c:	ldr	r2, [sp, #32]
   12ca0:	ldr	r3, [sp, #36]	; 0x24
   12ca4:	bl	11994 <putchar_unlocked@plt+0xb30>
   12ca8:	ldr	r0, [sp, #28]
   12cac:	ldr	r1, [sp, #24]
   12cb0:	str	r1, [r0]
   12cb4:	mov	r0, r4
   12cb8:	sub	sp, fp, #28
   12cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cc0:	bl	10e58 <abort@plt>
   12cc4:	movw	r3, #24896	; 0x6140
   12cc8:	movt	r3, #2
   12ccc:	b	12b30 <putchar_unlocked@plt+0x1ccc>
   12cd0:	mov	r1, r0
   12cd4:	mov	r0, #0
   12cd8:	b	12b20 <putchar_unlocked@plt+0x1cbc>
   12cdc:	mov	r2, r1
   12ce0:	mov	r1, r0
   12ce4:	mov	r0, #0
   12ce8:	b	12cc4 <putchar_unlocked@plt+0x1e60>
   12cec:	push	{r4, r5, r6, sl, fp, lr}
   12cf0:	add	fp, sp, #16
   12cf4:	sub	sp, sp, #48	; 0x30
   12cf8:	mov	r4, r2
   12cfc:	mov	r5, r0
   12d00:	mov	r6, sp
   12d04:	mov	r0, r6
   12d08:	bl	12d28 <putchar_unlocked@plt+0x1ec4>
   12d0c:	mov	r0, r5
   12d10:	mov	r1, r4
   12d14:	mvn	r2, #0
   12d18:	mov	r3, r6
   12d1c:	bl	12b30 <putchar_unlocked@plt+0x1ccc>
   12d20:	sub	sp, fp, #16
   12d24:	pop	{r4, r5, r6, sl, fp, pc}
   12d28:	vmov.i32	q8, #0	; 0x00000000
   12d2c:	mov	r2, #32
   12d30:	mov	r3, r0
   12d34:	vst1.32	{d16-d17}, [r3], r2
   12d38:	vst1.32	{d16-d17}, [r3]
   12d3c:	add	r2, r0, #16
   12d40:	vst1.32	{d16-d17}, [r2]
   12d44:	cmp	r1, #10
   12d48:	strne	r1, [r0]
   12d4c:	bxne	lr
   12d50:	push	{fp, lr}
   12d54:	mov	fp, sp
   12d58:	bl	10e58 <abort@plt>
   12d5c:	push	{r4, r5, r6, r7, fp, lr}
   12d60:	add	fp, sp, #16
   12d64:	sub	sp, sp, #48	; 0x30
   12d68:	mov	r4, r3
   12d6c:	mov	r5, r2
   12d70:	mov	r6, r0
   12d74:	mov	r7, sp
   12d78:	mov	r0, r7
   12d7c:	bl	12d28 <putchar_unlocked@plt+0x1ec4>
   12d80:	mov	r0, r6
   12d84:	mov	r1, r5
   12d88:	mov	r2, r4
   12d8c:	mov	r3, r7
   12d90:	bl	12b30 <putchar_unlocked@plt+0x1ccc>
   12d94:	sub	sp, fp, #16
   12d98:	pop	{r4, r5, r6, r7, fp, pc}
   12d9c:	mov	r2, r1
   12da0:	mov	r1, r0
   12da4:	mov	r0, #0
   12da8:	b	12cec <putchar_unlocked@plt+0x1e88>
   12dac:	mov	r3, r2
   12db0:	mov	r2, r1
   12db4:	mov	r1, r0
   12db8:	mov	r0, #0
   12dbc:	b	12d5c <putchar_unlocked@plt+0x1ef8>
   12dc0:	push	{r4, r5, r6, sl, fp, lr}
   12dc4:	add	fp, sp, #16
   12dc8:	sub	sp, sp, #48	; 0x30
   12dcc:	mov	r4, r1
   12dd0:	mov	r5, r0
   12dd4:	mov	r0, #32
   12dd8:	movw	r1, #24896	; 0x6140
   12ddc:	movt	r1, #2
   12de0:	add	r3, r1, #16
   12de4:	vld1.64	{d16-d17}, [r1], r0
   12de8:	mov	r6, sp
   12dec:	vld1.64	{d18-d19}, [r3]
   12df0:	add	r3, r6, #16
   12df4:	vld1.64	{d20-d21}, [r1]
   12df8:	vst1.64	{d18-d19}, [r3]
   12dfc:	mov	r1, r6
   12e00:	vst1.64	{d16-d17}, [r1], r0
   12e04:	vst1.64	{d20-d21}, [r1]
   12e08:	mov	r0, r6
   12e0c:	mov	r1, r2
   12e10:	mov	r2, #1
   12e14:	bl	11888 <putchar_unlocked@plt+0xa24>
   12e18:	mov	r0, #0
   12e1c:	mov	r1, r5
   12e20:	mov	r2, r4
   12e24:	mov	r3, r6
   12e28:	bl	12b30 <putchar_unlocked@plt+0x1ccc>
   12e2c:	sub	sp, fp, #16
   12e30:	pop	{r4, r5, r6, sl, fp, pc}
   12e34:	mov	r2, r1
   12e38:	mvn	r1, #0
   12e3c:	b	12dc0 <putchar_unlocked@plt+0x1f5c>
   12e40:	mov	r1, #58	; 0x3a
   12e44:	b	12e34 <putchar_unlocked@plt+0x1fd0>
   12e48:	mov	r2, #58	; 0x3a
   12e4c:	b	12dc0 <putchar_unlocked@plt+0x1f5c>
   12e50:	push	{r4, r5, r6, sl, fp, lr}
   12e54:	add	fp, sp, #16
   12e58:	sub	sp, sp, #48	; 0x30
   12e5c:	mov	r4, r2
   12e60:	mov	r5, r0
   12e64:	mov	r6, sp
   12e68:	mov	r0, r6
   12e6c:	bl	12d28 <putchar_unlocked@plt+0x1ec4>
   12e70:	mov	r0, r6
   12e74:	mov	r1, #58	; 0x3a
   12e78:	mov	r2, #1
   12e7c:	bl	11888 <putchar_unlocked@plt+0xa24>
   12e80:	mov	r0, r5
   12e84:	mov	r1, r4
   12e88:	mvn	r2, #0
   12e8c:	mov	r3, r6
   12e90:	bl	12b30 <putchar_unlocked@plt+0x1ccc>
   12e94:	sub	sp, fp, #16
   12e98:	pop	{r4, r5, r6, sl, fp, pc}
   12e9c:	push	{fp, lr}
   12ea0:	mov	fp, sp
   12ea4:	sub	sp, sp, #8
   12ea8:	mvn	ip, #0
   12eac:	str	ip, [sp]
   12eb0:	bl	12ebc <putchar_unlocked@plt+0x2058>
   12eb4:	mov	sp, fp
   12eb8:	pop	{fp, pc}
   12ebc:	push	{r4, r5, r6, r7, fp, lr}
   12ec0:	add	fp, sp, #16
   12ec4:	sub	sp, sp, #48	; 0x30
   12ec8:	mov	r7, r3
   12ecc:	mov	r5, r0
   12ed0:	mov	r0, #32
   12ed4:	movw	r3, #24896	; 0x6140
   12ed8:	movt	r3, #2
   12edc:	add	r4, r3, #16
   12ee0:	vld1.64	{d16-d17}, [r3], r0
   12ee4:	mov	r6, sp
   12ee8:	vld1.64	{d18-d19}, [r4]
   12eec:	add	r4, r6, #16
   12ef0:	vld1.64	{d20-d21}, [r3]
   12ef4:	vst1.64	{d18-d19}, [r4]
   12ef8:	mov	r3, r6
   12efc:	vst1.64	{d16-d17}, [r3], r0
   12f00:	vst1.64	{d20-d21}, [r3]
   12f04:	mov	r0, r6
   12f08:	bl	118e0 <putchar_unlocked@plt+0xa7c>
   12f0c:	ldr	r2, [fp, #8]
   12f10:	mov	r0, r5
   12f14:	mov	r1, r7
   12f18:	mov	r3, r6
   12f1c:	bl	12b30 <putchar_unlocked@plt+0x1ccc>
   12f20:	sub	sp, fp, #16
   12f24:	pop	{r4, r5, r6, r7, fp, pc}
   12f28:	mov	r3, r2
   12f2c:	mov	r2, r1
   12f30:	mov	r1, r0
   12f34:	mov	r0, #0
   12f38:	b	12e9c <putchar_unlocked@plt+0x2038>
   12f3c:	push	{fp, lr}
   12f40:	mov	fp, sp
   12f44:	sub	sp, sp, #8
   12f48:	mov	ip, r2
   12f4c:	mov	r2, r1
   12f50:	mov	r1, r0
   12f54:	str	r3, [sp]
   12f58:	mov	r0, #0
   12f5c:	mov	r3, ip
   12f60:	bl	12ebc <putchar_unlocked@plt+0x2058>
   12f64:	mov	sp, fp
   12f68:	pop	{fp, pc}
   12f6c:	movw	r3, #24800	; 0x60e0
   12f70:	movt	r3, #2
   12f74:	b	12b30 <putchar_unlocked@plt+0x1ccc>
   12f78:	mov	r2, r1
   12f7c:	mov	r1, r0
   12f80:	mov	r0, #0
   12f84:	b	12f6c <putchar_unlocked@plt+0x2108>
   12f88:	mvn	r2, #0
   12f8c:	b	12f6c <putchar_unlocked@plt+0x2108>
   12f90:	mov	r1, r0
   12f94:	mov	r0, #0
   12f98:	b	12f88 <putchar_unlocked@plt+0x2124>
   12f9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12fa0:	add	fp, sp, #24
   12fa4:	sub	sp, sp, #16
   12fa8:	mov	r4, r1
   12fac:	mov	r5, r0
   12fb0:	mov	r7, #0
   12fb4:	mov	r0, #0
   12fb8:	mov	r1, r5
   12fbc:	mov	r2, #5
   12fc0:	bl	10cd8 <dcgettext@plt>
   12fc4:	cmp	r0, r5
   12fc8:	beq	12fd4 <putchar_unlocked@plt+0x2170>
   12fcc:	sub	sp, fp, #24
   12fd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12fd4:	bl	14360 <putchar_unlocked@plt+0x34fc>
   12fd8:	mov	r6, r0
   12fdc:	mov	r8, #56	; 0x38
   12fe0:	mov	r0, #45	; 0x2d
   12fe4:	stm	sp, {r0, r8}
   12fe8:	str	r7, [sp, #8]
   12fec:	str	r7, [sp, #12]
   12ff0:	mov	r0, r6
   12ff4:	mov	r1, #85	; 0x55
   12ff8:	mov	r2, #84	; 0x54
   12ffc:	mov	r3, #70	; 0x46
   13000:	bl	13098 <putchar_unlocked@plt+0x2234>
   13004:	cmp	r0, #0
   13008:	beq	13024 <putchar_unlocked@plt+0x21c0>
   1300c:	ldrb	r1, [r5]
   13010:	movw	r2, #19410	; 0x4bd2
   13014:	movt	r2, #1
   13018:	movw	r0, #19414	; 0x4bd6
   1301c:	movt	r0, #1
   13020:	b	13068 <putchar_unlocked@plt+0x2204>
   13024:	mov	r0, #48	; 0x30
   13028:	mov	r1, #51	; 0x33
   1302c:	str	r8, [sp]
   13030:	stmib	sp, {r0, r1}
   13034:	str	r0, [sp, #12]
   13038:	mov	r0, r6
   1303c:	mov	r1, #71	; 0x47
   13040:	mov	r2, #66	; 0x42
   13044:	mov	r3, #49	; 0x31
   13048:	bl	13098 <putchar_unlocked@plt+0x2234>
   1304c:	cmp	r0, #0
   13050:	beq	13078 <putchar_unlocked@plt+0x2214>
   13054:	ldrb	r1, [r5]
   13058:	movw	r2, #19418	; 0x4bda
   1305c:	movt	r2, #1
   13060:	movw	r0, #19422	; 0x4bde
   13064:	movt	r0, #1
   13068:	cmp	r1, #96	; 0x60
   1306c:	moveq	r0, r2
   13070:	sub	sp, fp, #24
   13074:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13078:	movw	r1, #19404	; 0x4bcc
   1307c:	movt	r1, #1
   13080:	movw	r0, #19408	; 0x4bd0
   13084:	movt	r0, #1
   13088:	cmp	r4, #9
   1308c:	moveq	r0, r1
   13090:	sub	sp, fp, #24
   13094:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13098:	push	{r4, r5, r6, r7, fp, lr}
   1309c:	add	fp, sp, #16
   130a0:	sub	sp, sp, #16
   130a4:	mov	r4, r3
   130a8:	mov	r5, r2
   130ac:	mov	r7, r1
   130b0:	mov	r6, r0
   130b4:	mov	r0, r1
   130b8:	bl	1406c <putchar_unlocked@plt+0x3208>
   130bc:	ldrb	r1, [r6]
   130c0:	cmp	r0, #0
   130c4:	andne	r1, r1, #223	; 0xdf
   130c8:	mov	r0, #0
   130cc:	cmp	r1, r7
   130d0:	bne	13110 <putchar_unlocked@plt+0x22ac>
   130d4:	cmp	r7, #0
   130d8:	moveq	r0, #1
   130dc:	subeq	sp, fp, #16
   130e0:	popeq	{r4, r5, r6, r7, fp, pc}
   130e4:	ldr	r0, [fp, #20]
   130e8:	ldr	r1, [fp, #16]
   130ec:	ldr	r2, [fp, #12]
   130f0:	ldr	r3, [fp, #8]
   130f4:	str	r2, [sp]
   130f8:	str	r1, [sp, #4]
   130fc:	str	r0, [sp, #8]
   13100:	mov	r0, r6
   13104:	mov	r1, r5
   13108:	mov	r2, r4
   1310c:	bl	13118 <putchar_unlocked@plt+0x22b4>
   13110:	sub	sp, fp, #16
   13114:	pop	{r4, r5, r6, r7, fp, pc}
   13118:	push	{r4, r5, r6, r7, fp, lr}
   1311c:	add	fp, sp, #16
   13120:	sub	sp, sp, #8
   13124:	mov	r4, r3
   13128:	mov	r5, r2
   1312c:	mov	r7, r1
   13130:	mov	r6, r0
   13134:	mov	r0, r1
   13138:	bl	1406c <putchar_unlocked@plt+0x3208>
   1313c:	ldrb	r1, [r6, #1]
   13140:	cmp	r0, #0
   13144:	andne	r1, r1, #223	; 0xdf
   13148:	mov	r0, #0
   1314c:	cmp	r1, r7
   13150:	bne	13188 <putchar_unlocked@plt+0x2324>
   13154:	cmp	r7, #0
   13158:	moveq	r0, #1
   1315c:	subeq	sp, fp, #16
   13160:	popeq	{r4, r5, r6, r7, fp, pc}
   13164:	ldr	r0, [fp, #16]
   13168:	ldr	r1, [fp, #12]
   1316c:	ldr	r3, [fp, #8]
   13170:	str	r1, [sp]
   13174:	str	r0, [sp, #4]
   13178:	mov	r0, r6
   1317c:	mov	r1, r5
   13180:	mov	r2, r4
   13184:	bl	13190 <putchar_unlocked@plt+0x232c>
   13188:	sub	sp, fp, #16
   1318c:	pop	{r4, r5, r6, r7, fp, pc}
   13190:	push	{r4, r5, r6, r7, fp, lr}
   13194:	add	fp, sp, #16
   13198:	sub	sp, sp, #8
   1319c:	mov	r4, r3
   131a0:	mov	r5, r2
   131a4:	mov	r7, r1
   131a8:	mov	r6, r0
   131ac:	mov	r0, r1
   131b0:	bl	1406c <putchar_unlocked@plt+0x3208>
   131b4:	ldrb	r1, [r6, #2]
   131b8:	cmp	r0, #0
   131bc:	andne	r1, r1, #223	; 0xdf
   131c0:	mov	r0, #0
   131c4:	cmp	r1, r7
   131c8:	bne	131f8 <putchar_unlocked@plt+0x2394>
   131cc:	cmp	r7, #0
   131d0:	moveq	r0, #1
   131d4:	subeq	sp, fp, #16
   131d8:	popeq	{r4, r5, r6, r7, fp, pc}
   131dc:	ldr	r0, [fp, #12]
   131e0:	ldr	r3, [fp, #8]
   131e4:	str	r0, [sp]
   131e8:	mov	r0, r6
   131ec:	mov	r1, r5
   131f0:	mov	r2, r4
   131f4:	bl	13200 <putchar_unlocked@plt+0x239c>
   131f8:	sub	sp, fp, #16
   131fc:	pop	{r4, r5, r6, r7, fp, pc}
   13200:	push	{r4, r5, r6, r7, fp, lr}
   13204:	add	fp, sp, #16
   13208:	mov	r4, r3
   1320c:	mov	r5, r2
   13210:	mov	r7, r1
   13214:	mov	r6, r0
   13218:	mov	r0, r1
   1321c:	bl	1406c <putchar_unlocked@plt+0x3208>
   13220:	ldrb	r1, [r6, #3]
   13224:	ldr	r3, [fp, #8]
   13228:	cmp	r0, #0
   1322c:	andne	r1, r1, #223	; 0xdf
   13230:	mov	r0, #0
   13234:	cmp	r1, r7
   13238:	popne	{r4, r5, r6, r7, fp, pc}
   1323c:	cmp	r7, #0
   13240:	beq	13258 <putchar_unlocked@plt+0x23f4>
   13244:	mov	r0, r6
   13248:	mov	r1, r5
   1324c:	mov	r2, r4
   13250:	pop	{r4, r5, r6, r7, fp, lr}
   13254:	b	13260 <putchar_unlocked@plt+0x23fc>
   13258:	mov	r0, #1
   1325c:	pop	{r4, r5, r6, r7, fp, pc}
   13260:	push	{r4, r5, r6, r7, fp, lr}
   13264:	add	fp, sp, #16
   13268:	mov	r4, r3
   1326c:	mov	r5, r2
   13270:	mov	r7, r1
   13274:	mov	r6, r0
   13278:	mov	r0, r1
   1327c:	bl	1406c <putchar_unlocked@plt+0x3208>
   13280:	ldrb	r1, [r6, #4]
   13284:	cmp	r0, #0
   13288:	andne	r1, r1, #223	; 0xdf
   1328c:	mov	r0, #0
   13290:	cmp	r1, r7
   13294:	popne	{r4, r5, r6, r7, fp, pc}
   13298:	cmp	r7, #0
   1329c:	beq	132b4 <putchar_unlocked@plt+0x2450>
   132a0:	mov	r0, r6
   132a4:	mov	r1, r5
   132a8:	mov	r2, r4
   132ac:	pop	{r4, r5, r6, r7, fp, lr}
   132b0:	b	132bc <putchar_unlocked@plt+0x2458>
   132b4:	mov	r0, #1
   132b8:	pop	{r4, r5, r6, r7, fp, pc}
   132bc:	push	{r4, r5, r6, sl, fp, lr}
   132c0:	add	fp, sp, #16
   132c4:	mov	r4, r2
   132c8:	mov	r6, r1
   132cc:	mov	r5, r0
   132d0:	mov	r0, r1
   132d4:	bl	1406c <putchar_unlocked@plt+0x3208>
   132d8:	ldrb	r1, [r5, #5]
   132dc:	cmp	r0, #0
   132e0:	andne	r1, r1, #223	; 0xdf
   132e4:	mov	r0, #0
   132e8:	cmp	r1, r6
   132ec:	popne	{r4, r5, r6, sl, fp, pc}
   132f0:	cmp	r6, #0
   132f4:	beq	13308 <putchar_unlocked@plt+0x24a4>
   132f8:	mov	r0, r5
   132fc:	mov	r1, r4
   13300:	pop	{r4, r5, r6, sl, fp, lr}
   13304:	b	13310 <putchar_unlocked@plt+0x24ac>
   13308:	mov	r0, #1
   1330c:	pop	{r4, r5, r6, sl, fp, pc}
   13310:	push	{r4, r5, fp, lr}
   13314:	add	fp, sp, #8
   13318:	mov	r5, r1
   1331c:	mov	r4, r0
   13320:	mov	r0, r1
   13324:	bl	1406c <putchar_unlocked@plt+0x3208>
   13328:	ldrb	r1, [r4, #6]
   1332c:	cmp	r0, #0
   13330:	andne	r1, r1, #223	; 0xdf
   13334:	mov	r0, #0
   13338:	cmp	r1, r5
   1333c:	popne	{r4, r5, fp, pc}
   13340:	cmp	r5, #0
   13344:	beq	13354 <putchar_unlocked@plt+0x24f0>
   13348:	mov	r0, r4
   1334c:	pop	{r4, r5, fp, lr}
   13350:	b	1335c <putchar_unlocked@plt+0x24f8>
   13354:	mov	r0, #1
   13358:	pop	{r4, r5, fp, pc}
   1335c:	push	{r4, sl, fp, lr}
   13360:	add	fp, sp, #8
   13364:	mov	r4, r0
   13368:	mov	r0, #0
   1336c:	bl	1406c <putchar_unlocked@plt+0x3208>
   13370:	ldrb	r1, [r4, #7]
   13374:	cmp	r0, #0
   13378:	beq	13390 <putchar_unlocked@plt+0x252c>
   1337c:	tst	r1, #223	; 0xdf
   13380:	moveq	r0, #1
   13384:	popeq	{r4, sl, fp, pc}
   13388:	mov	r0, #0
   1338c:	pop	{r4, sl, fp, pc}
   13390:	cmp	r1, #0
   13394:	moveq	r0, #1
   13398:	popeq	{r4, sl, fp, pc}
   1339c:	mov	r0, #0
   133a0:	pop	{r4, sl, fp, pc}
   133a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   133a8:	add	fp, sp, #24
   133ac:	sub	sp, sp, #32
   133b0:	mov	r4, r2
   133b4:	mov	r8, r0
   133b8:	ldr	r6, [fp, #12]
   133bc:	ldr	r7, [fp, #8]
   133c0:	cmp	r1, #0
   133c4:	beq	133ec <putchar_unlocked@plt+0x2588>
   133c8:	mov	r5, r1
   133cc:	str	r4, [sp]
   133d0:	str	r3, [sp, #4]
   133d4:	movw	r2, #19512	; 0x4c38
   133d8:	movt	r2, #1
   133dc:	mov	r0, r8
   133e0:	mov	r1, #1
   133e4:	mov	r3, r5
   133e8:	b	13404 <putchar_unlocked@plt+0x25a0>
   133ec:	str	r3, [sp]
   133f0:	movw	r2, #19524	; 0x4c44
   133f4:	movt	r2, #1
   133f8:	mov	r0, r8
   133fc:	mov	r1, #1
   13400:	mov	r3, r4
   13404:	bl	10df8 <__fprintf_chk@plt>
   13408:	movw	r1, #19531	; 0x4c4b
   1340c:	movt	r1, #1
   13410:	mov	r0, #0
   13414:	mov	r2, #5
   13418:	bl	10cd8 <dcgettext@plt>
   1341c:	mov	r3, r0
   13420:	movw	r0, #2022	; 0x7e6
   13424:	str	r0, [sp]
   13428:	movw	r2, #20249	; 0x4f19
   1342c:	movt	r2, #1
   13430:	mov	r0, r8
   13434:	mov	r1, #1
   13438:	bl	10df8 <__fprintf_chk@plt>
   1343c:	movw	r4, #18548	; 0x4874
   13440:	movt	r4, #1
   13444:	mov	r0, r4
   13448:	mov	r1, r8
   1344c:	bl	10c78 <fputs_unlocked@plt>
   13450:	movw	r1, #19535	; 0x4c4f
   13454:	movt	r1, #1
   13458:	mov	r0, #0
   1345c:	mov	r2, #5
   13460:	bl	10cd8 <dcgettext@plt>
   13464:	mov	r2, r0
   13468:	movw	r3, #19706	; 0x4cfa
   1346c:	movt	r3, #1
   13470:	mov	r0, r8
   13474:	mov	r1, #1
   13478:	bl	10df8 <__fprintf_chk@plt>
   1347c:	mov	r0, r4
   13480:	mov	r1, r8
   13484:	bl	10c78 <fputs_unlocked@plt>
   13488:	cmp	r6, #9
   1348c:	bhi	134c8 <putchar_unlocked@plt+0x2664>
   13490:	add	r0, pc, #0
   13494:	ldr	pc, [r0, r6, lsl #2]
   13498:	andeq	r3, r1, r0, asr #9
   1349c:	ldrdeq	r3, [r1], -r4
   134a0:	andeq	r3, r1, r4, lsl #10
   134a4:	andeq	r3, r1, ip, lsr #10
   134a8:	andeq	r3, r1, r4, asr r5
   134ac:	andeq	r3, r1, ip, ror r5
   134b0:	andeq	r3, r1, r4, lsr #11
   134b4:	ldrdeq	r3, [r1], -ip
   134b8:	andeq	r3, r1, ip, ror r6
   134bc:	andeq	r3, r1, r4, lsr #12
   134c0:	sub	sp, fp, #24
   134c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   134c8:	movw	r1, #20059	; 0x4e5b
   134cc:	movt	r1, #1
   134d0:	b	1362c <putchar_unlocked@plt+0x27c8>
   134d4:	movw	r1, #19740	; 0x4d1c
   134d8:	movt	r1, #1
   134dc:	mov	r0, #0
   134e0:	mov	r2, #5
   134e4:	bl	10cd8 <dcgettext@plt>
   134e8:	mov	r2, r0
   134ec:	ldr	r3, [r7]
   134f0:	mov	r0, r8
   134f4:	mov	r1, #1
   134f8:	sub	sp, fp, #24
   134fc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13500:	b	10df8 <__fprintf_chk@plt>
   13504:	movw	r1, #19756	; 0x4d2c
   13508:	movt	r1, #1
   1350c:	mov	r0, #0
   13510:	mov	r2, #5
   13514:	bl	10cd8 <dcgettext@plt>
   13518:	mov	r2, r0
   1351c:	ldr	r3, [r7]
   13520:	ldr	r0, [r7, #4]
   13524:	str	r0, [sp]
   13528:	b	13618 <putchar_unlocked@plt+0x27b4>
   1352c:	movw	r1, #19779	; 0x4d43
   13530:	movt	r1, #1
   13534:	mov	r0, #0
   13538:	mov	r2, #5
   1353c:	bl	10cd8 <dcgettext@plt>
   13540:	mov	r2, r0
   13544:	ldr	r3, [r7]
   13548:	ldmib	r7, {r0, r1}
   1354c:	stm	sp, {r0, r1}
   13550:	b	13618 <putchar_unlocked@plt+0x27b4>
   13554:	movw	r1, #19807	; 0x4d5f
   13558:	movt	r1, #1
   1355c:	mov	r0, #0
   13560:	mov	r2, #5
   13564:	bl	10cd8 <dcgettext@plt>
   13568:	mov	r2, r0
   1356c:	ldr	r3, [r7]
   13570:	ldmib	r7, {r0, r1, r7}
   13574:	stm	sp, {r0, r1, r7}
   13578:	b	13618 <putchar_unlocked@plt+0x27b4>
   1357c:	movw	r1, #19839	; 0x4d7f
   13580:	movt	r1, #1
   13584:	mov	r0, #0
   13588:	mov	r2, #5
   1358c:	bl	10cd8 <dcgettext@plt>
   13590:	mov	r2, r0
   13594:	ldr	r3, [r7]
   13598:	ldmib	r7, {r0, r1, r6, r7}
   1359c:	stm	sp, {r0, r1, r6, r7}
   135a0:	b	13618 <putchar_unlocked@plt+0x27b4>
   135a4:	movw	r1, #19875	; 0x4da3
   135a8:	movt	r1, #1
   135ac:	mov	r0, #0
   135b0:	mov	r2, #5
   135b4:	bl	10cd8 <dcgettext@plt>
   135b8:	mov	r2, r0
   135bc:	ldr	r3, [r7]
   135c0:	ldmib	r7, {r0, r1, r6}
   135c4:	ldr	r5, [r7, #16]
   135c8:	ldr	r7, [r7, #20]
   135cc:	stm	sp, {r0, r1, r6}
   135d0:	str	r5, [sp, #12]
   135d4:	str	r7, [sp, #16]
   135d8:	b	13618 <putchar_unlocked@plt+0x27b4>
   135dc:	movw	r1, #19915	; 0x4dcb
   135e0:	movt	r1, #1
   135e4:	mov	r0, #0
   135e8:	mov	r2, #5
   135ec:	bl	10cd8 <dcgettext@plt>
   135f0:	mov	r2, r0
   135f4:	ldr	r3, [r7]
   135f8:	ldmib	r7, {r0, r1, r6}
   135fc:	ldr	r5, [r7, #16]
   13600:	ldr	r4, [r7, #20]
   13604:	ldr	r7, [r7, #24]
   13608:	stm	sp, {r0, r1, r6}
   1360c:	str	r5, [sp, #12]
   13610:	str	r4, [sp, #16]
   13614:	str	r7, [sp, #20]
   13618:	mov	r0, r8
   1361c:	mov	r1, #1
   13620:	b	136cc <putchar_unlocked@plt+0x2868>
   13624:	movw	r1, #20007	; 0x4e27
   13628:	movt	r1, #1
   1362c:	mov	r0, #0
   13630:	mov	r2, #5
   13634:	bl	10cd8 <dcgettext@plt>
   13638:	mov	ip, r0
   1363c:	ldr	r3, [r7]
   13640:	ldr	r0, [r7, #4]
   13644:	ldr	r1, [r7, #8]
   13648:	ldr	r6, [r7, #12]
   1364c:	ldr	r5, [r7, #16]
   13650:	ldr	r4, [r7, #20]
   13654:	ldr	r2, [r7, #24]
   13658:	ldr	lr, [r7, #28]
   1365c:	ldr	r7, [r7, #32]
   13660:	stm	sp, {r0, r1, r6}
   13664:	str	r5, [sp, #12]
   13668:	str	r4, [sp, #16]
   1366c:	str	r2, [sp, #20]
   13670:	str	lr, [sp, #24]
   13674:	str	r7, [sp, #28]
   13678:	b	136c0 <putchar_unlocked@plt+0x285c>
   1367c:	movw	r1, #19959	; 0x4df7
   13680:	movt	r1, #1
   13684:	mov	r0, #0
   13688:	mov	r2, #5
   1368c:	bl	10cd8 <dcgettext@plt>
   13690:	mov	ip, r0
   13694:	ldr	r3, [r7]
   13698:	ldmib	r7, {r0, r1, r6}
   1369c:	ldr	r5, [r7, #16]
   136a0:	ldr	r4, [r7, #20]
   136a4:	ldr	r2, [r7, #24]
   136a8:	ldr	r7, [r7, #28]
   136ac:	stm	sp, {r0, r1, r6}
   136b0:	str	r5, [sp, #12]
   136b4:	str	r4, [sp, #16]
   136b8:	str	r2, [sp, #20]
   136bc:	str	r7, [sp, #24]
   136c0:	mov	r0, r8
   136c4:	mov	r1, #1
   136c8:	mov	r2, ip
   136cc:	bl	10df8 <__fprintf_chk@plt>
   136d0:	sub	sp, fp, #24
   136d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   136d8:	push	{r4, sl, fp, lr}
   136dc:	add	fp, sp, #8
   136e0:	sub	sp, sp, #8
   136e4:	mov	lr, #0
   136e8:	ldr	ip, [fp, #8]
   136ec:	ldr	r4, [ip, lr, lsl #2]
   136f0:	add	lr, lr, #1
   136f4:	cmp	r4, #0
   136f8:	bne	136ec <putchar_unlocked@plt+0x2888>
   136fc:	sub	r4, lr, #1
   13700:	str	ip, [sp]
   13704:	str	r4, [sp, #4]
   13708:	bl	133a4 <putchar_unlocked@plt+0x2540>
   1370c:	sub	sp, fp, #8
   13710:	pop	{r4, sl, fp, pc}
   13714:	push	{r4, r5, fp, lr}
   13718:	add	fp, sp, #8
   1371c:	sub	sp, sp, #48	; 0x30
   13720:	mov	ip, #0
   13724:	ldr	r4, [fp, #8]
   13728:	add	lr, sp, #8
   1372c:	ldr	r5, [r4]
   13730:	str	r5, [lr, ip, lsl #2]
   13734:	cmp	r5, #0
   13738:	beq	1374c <putchar_unlocked@plt+0x28e8>
   1373c:	add	ip, ip, #1
   13740:	add	r4, r4, #4
   13744:	cmp	ip, #10
   13748:	bcc	1372c <putchar_unlocked@plt+0x28c8>
   1374c:	str	lr, [sp]
   13750:	str	ip, [sp, #4]
   13754:	bl	133a4 <putchar_unlocked@plt+0x2540>
   13758:	sub	sp, fp, #8
   1375c:	pop	{r4, r5, fp, pc}
   13760:	push	{fp, lr}
   13764:	mov	fp, sp
   13768:	sub	sp, sp, #8
   1376c:	add	ip, fp, #8
   13770:	str	ip, [sp, #4]
   13774:	str	ip, [sp]
   13778:	bl	13714 <putchar_unlocked@plt+0x28b0>
   1377c:	mov	sp, fp
   13780:	pop	{fp, pc}
   13784:	push	{fp, lr}
   13788:	mov	fp, sp
   1378c:	movw	r0, #24868	; 0x6124
   13790:	movt	r0, #2
   13794:	ldr	r1, [r0]
   13798:	movw	r0, #18548	; 0x4874
   1379c:	movt	r0, #1
   137a0:	bl	10c78 <fputs_unlocked@plt>
   137a4:	movw	r1, #20119	; 0x4e97
   137a8:	movt	r1, #1
   137ac:	mov	r0, #0
   137b0:	mov	r2, #5
   137b4:	bl	10cd8 <dcgettext@plt>
   137b8:	mov	r1, r0
   137bc:	movw	r2, #20139	; 0x4eab
   137c0:	movt	r2, #1
   137c4:	mov	r0, #1
   137c8:	bl	10de0 <__printf_chk@plt>
   137cc:	movw	r1, #20161	; 0x4ec1
   137d0:	movt	r1, #1
   137d4:	mov	r0, #0
   137d8:	mov	r2, #5
   137dc:	bl	10cd8 <dcgettext@plt>
   137e0:	mov	r1, r0
   137e4:	movw	r2, #18589	; 0x489d
   137e8:	movt	r2, #1
   137ec:	movw	r3, #18845	; 0x499d
   137f0:	movt	r3, #1
   137f4:	mov	r0, #1
   137f8:	bl	10de0 <__printf_chk@plt>
   137fc:	movw	r1, #20181	; 0x4ed5
   13800:	movt	r1, #1
   13804:	mov	r0, #0
   13808:	mov	r2, #5
   1380c:	bl	10cd8 <dcgettext@plt>
   13810:	mov	r1, r0
   13814:	movw	r2, #20220	; 0x4efc
   13818:	movt	r2, #1
   1381c:	mov	r0, #1
   13820:	pop	{fp, lr}
   13824:	b	10de0 <__printf_chk@plt>
   13828:	b	1382c <putchar_unlocked@plt+0x29c8>
   1382c:	push	{r4, r5, r6, sl, fp, lr}
   13830:	add	fp, sp, #16
   13834:	mov	r4, r2
   13838:	mov	r5, r1
   1383c:	mov	r6, r0
   13840:	bl	143f8 <putchar_unlocked@plt+0x3594>
   13844:	cmp	r0, #0
   13848:	popne	{r4, r5, r6, sl, fp, pc}
   1384c:	cmp	r6, #0
   13850:	beq	13864 <putchar_unlocked@plt+0x2a00>
   13854:	cmp	r5, #0
   13858:	cmpne	r4, #0
   1385c:	bne	13864 <putchar_unlocked@plt+0x2a00>
   13860:	pop	{r4, r5, r6, sl, fp, pc}
   13864:	bl	13c18 <putchar_unlocked@plt+0x2db4>
   13868:	push	{fp, lr}
   1386c:	mov	fp, sp
   13870:	bl	13cb0 <putchar_unlocked@plt+0x2e4c>
   13874:	bl	1387c <putchar_unlocked@plt+0x2a18>
   13878:	pop	{fp, pc}
   1387c:	cmp	r0, #0
   13880:	bxne	lr
   13884:	push	{fp, lr}
   13888:	mov	fp, sp
   1388c:	bl	13c18 <putchar_unlocked@plt+0x2db4>
   13890:	push	{fp, lr}
   13894:	mov	fp, sp
   13898:	bl	1432c <putchar_unlocked@plt+0x34c8>
   1389c:	bl	1387c <putchar_unlocked@plt+0x2a18>
   138a0:	pop	{fp, pc}
   138a4:	b	13868 <putchar_unlocked@plt+0x2a04>
   138a8:	push	{r4, r5, fp, lr}
   138ac:	add	fp, sp, #8
   138b0:	mov	r4, r1
   138b4:	mov	r5, r0
   138b8:	bl	13ce0 <putchar_unlocked@plt+0x2e7c>
   138bc:	cmp	r0, #0
   138c0:	popne	{r4, r5, fp, pc}
   138c4:	cmp	r5, #0
   138c8:	beq	138d8 <putchar_unlocked@plt+0x2a74>
   138cc:	cmp	r4, #0
   138d0:	bne	138d8 <putchar_unlocked@plt+0x2a74>
   138d4:	pop	{r4, r5, fp, pc}
   138d8:	bl	13c18 <putchar_unlocked@plt+0x2db4>
   138dc:	push	{fp, lr}
   138e0:	mov	fp, sp
   138e4:	bl	14330 <putchar_unlocked@plt+0x34cc>
   138e8:	bl	1387c <putchar_unlocked@plt+0x2a18>
   138ec:	pop	{fp, pc}
   138f0:	push	{fp, lr}
   138f4:	mov	fp, sp
   138f8:	bl	14340 <putchar_unlocked@plt+0x34dc>
   138fc:	bl	1387c <putchar_unlocked@plt+0x2a18>
   13900:	pop	{fp, pc}
   13904:	push	{fp, lr}
   13908:	mov	fp, sp
   1390c:	mov	r2, r1
   13910:	mov	r1, r0
   13914:	mov	r0, #0
   13918:	bl	1382c <putchar_unlocked@plt+0x29c8>
   1391c:	pop	{fp, pc}
   13920:	mov	r2, r1
   13924:	mov	r1, r0
   13928:	mov	r0, #0
   1392c:	b	138f0 <putchar_unlocked@plt+0x2a8c>
   13930:	mov	r2, #1
   13934:	b	13938 <putchar_unlocked@plt+0x2ad4>
   13938:	push	{r4, r5, fp, lr}
   1393c:	add	fp, sp, #8
   13940:	mov	r4, r1
   13944:	ldr	r5, [r1]
   13948:	cmp	r0, #0
   1394c:	beq	13964 <putchar_unlocked@plt+0x2b00>
   13950:	mov	r1, #1
   13954:	add	r1, r1, r5, lsr #1
   13958:	adds	r5, r5, r1
   1395c:	bcc	1397c <putchar_unlocked@plt+0x2b18>
   13960:	bl	13c18 <putchar_unlocked@plt+0x2db4>
   13964:	cmp	r5, #0
   13968:	bne	1397c <putchar_unlocked@plt+0x2b18>
   1396c:	mov	r1, #64	; 0x40
   13970:	udiv	r5, r1, r2
   13974:	cmp	r2, #64	; 0x40
   13978:	addhi	r5, r5, #1
   1397c:	mov	r1, r5
   13980:	bl	1382c <putchar_unlocked@plt+0x29c8>
   13984:	str	r5, [r4]
   13988:	pop	{r4, r5, fp, pc}
   1398c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13990:	add	fp, sp, #24
   13994:	mov	r8, r1
   13998:	ldr	r6, [r1]
   1399c:	add	r1, r6, r6, asr #1
   139a0:	cmp	r1, r6
   139a4:	mvnvs	r1, #-2147483648	; 0x80000000
   139a8:	cmp	r1, r3
   139ac:	mov	r5, r1
   139b0:	movgt	r5, r3
   139b4:	cmn	r3, #1
   139b8:	movle	r5, r1
   139bc:	ldr	r4, [fp, #8]
   139c0:	cmn	r4, #1
   139c4:	ble	139ec <putchar_unlocked@plt+0x2b88>
   139c8:	cmp	r4, #0
   139cc:	beq	13a40 <putchar_unlocked@plt+0x2bdc>
   139d0:	cmn	r5, #1
   139d4:	ble	13a14 <putchar_unlocked@plt+0x2bb0>
   139d8:	mvn	r7, #-2147483648	; 0x80000000
   139dc:	udiv	r1, r7, r4
   139e0:	cmp	r1, r5
   139e4:	bge	13a40 <putchar_unlocked@plt+0x2bdc>
   139e8:	b	13a50 <putchar_unlocked@plt+0x2bec>
   139ec:	cmn	r5, #1
   139f0:	ble	13a30 <putchar_unlocked@plt+0x2bcc>
   139f4:	cmn	r4, #1
   139f8:	beq	13a40 <putchar_unlocked@plt+0x2bdc>
   139fc:	mov	r1, #-2147483648	; 0x80000000
   13a00:	sdiv	r1, r1, r4
   13a04:	mvn	r7, #-2147483648	; 0x80000000
   13a08:	cmp	r1, r5
   13a0c:	bge	13a40 <putchar_unlocked@plt+0x2bdc>
   13a10:	b	13a50 <putchar_unlocked@plt+0x2bec>
   13a14:	beq	13a40 <putchar_unlocked@plt+0x2bdc>
   13a18:	mov	r1, #-2147483648	; 0x80000000
   13a1c:	sdiv	r1, r1, r5
   13a20:	mvn	r7, #-2147483648	; 0x80000000
   13a24:	cmp	r1, r4
   13a28:	bge	13a40 <putchar_unlocked@plt+0x2bdc>
   13a2c:	b	13a50 <putchar_unlocked@plt+0x2bec>
   13a30:	mvn	r7, #-2147483648	; 0x80000000
   13a34:	sdiv	r1, r7, r4
   13a38:	cmp	r5, r1
   13a3c:	blt	13a50 <putchar_unlocked@plt+0x2bec>
   13a40:	mul	r1, r5, r4
   13a44:	mov	r7, #64	; 0x40
   13a48:	cmp	r1, #63	; 0x3f
   13a4c:	bgt	13a58 <putchar_unlocked@plt+0x2bf4>
   13a50:	sdiv	r5, r7, r4
   13a54:	mul	r1, r5, r4
   13a58:	cmp	r0, #0
   13a5c:	moveq	r7, #0
   13a60:	streq	r7, [r8]
   13a64:	sub	r7, r5, r6
   13a68:	cmp	r7, r2
   13a6c:	bge	13b18 <putchar_unlocked@plt+0x2cb4>
   13a70:	add	r5, r6, r2
   13a74:	mov	r1, #0
   13a78:	cmp	r5, r3
   13a7c:	mov	r2, #0
   13a80:	movwgt	r2, #1
   13a84:	cmn	r3, #1
   13a88:	movwgt	r1, #1
   13a8c:	cmp	r5, r6
   13a90:	bvs	13b00 <putchar_unlocked@plt+0x2c9c>
   13a94:	ands	r1, r1, r2
   13a98:	bne	13b00 <putchar_unlocked@plt+0x2c9c>
   13a9c:	cmn	r4, #1
   13aa0:	ble	13ac8 <putchar_unlocked@plt+0x2c64>
   13aa4:	cmp	r4, #0
   13aa8:	beq	13b14 <putchar_unlocked@plt+0x2cb0>
   13aac:	cmn	r5, #1
   13ab0:	ble	13aec <putchar_unlocked@plt+0x2c88>
   13ab4:	mvn	r1, #-2147483648	; 0x80000000
   13ab8:	udiv	r1, r1, r4
   13abc:	cmp	r1, r5
   13ac0:	bge	13b14 <putchar_unlocked@plt+0x2cb0>
   13ac4:	b	13b00 <putchar_unlocked@plt+0x2c9c>
   13ac8:	cmn	r5, #1
   13acc:	ble	13b04 <putchar_unlocked@plt+0x2ca0>
   13ad0:	cmn	r4, #1
   13ad4:	beq	13b14 <putchar_unlocked@plt+0x2cb0>
   13ad8:	mov	r1, #-2147483648	; 0x80000000
   13adc:	sdiv	r1, r1, r4
   13ae0:	cmp	r1, r5
   13ae4:	bge	13b14 <putchar_unlocked@plt+0x2cb0>
   13ae8:	b	13b00 <putchar_unlocked@plt+0x2c9c>
   13aec:	beq	13b14 <putchar_unlocked@plt+0x2cb0>
   13af0:	mov	r1, #-2147483648	; 0x80000000
   13af4:	sdiv	r1, r1, r5
   13af8:	cmp	r1, r4
   13afc:	bge	13b14 <putchar_unlocked@plt+0x2cb0>
   13b00:	bl	13c18 <putchar_unlocked@plt+0x2db4>
   13b04:	mvn	r1, #-2147483648	; 0x80000000
   13b08:	sdiv	r1, r1, r4
   13b0c:	cmp	r5, r1
   13b10:	blt	13b00 <putchar_unlocked@plt+0x2c9c>
   13b14:	mul	r1, r5, r4
   13b18:	bl	138a8 <putchar_unlocked@plt+0x2a44>
   13b1c:	str	r5, [r8]
   13b20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13b24:	mov	r1, #1
   13b28:	b	13b2c <putchar_unlocked@plt+0x2cc8>
   13b2c:	push	{fp, lr}
   13b30:	mov	fp, sp
   13b34:	bl	13c5c <putchar_unlocked@plt+0x2df8>
   13b38:	bl	1387c <putchar_unlocked@plt+0x2a18>
   13b3c:	pop	{fp, pc}
   13b40:	mov	r1, #1
   13b44:	b	13b48 <putchar_unlocked@plt+0x2ce4>
   13b48:	push	{fp, lr}
   13b4c:	mov	fp, sp
   13b50:	bl	1433c <putchar_unlocked@plt+0x34d8>
   13b54:	bl	1387c <putchar_unlocked@plt+0x2a18>
   13b58:	pop	{fp, pc}
   13b5c:	push	{r4, r5, r6, sl, fp, lr}
   13b60:	add	fp, sp, #16
   13b64:	mov	r4, r1
   13b68:	mov	r5, r0
   13b6c:	mov	r0, r1
   13b70:	bl	13868 <putchar_unlocked@plt+0x2a04>
   13b74:	mov	r6, r0
   13b78:	mov	r1, r5
   13b7c:	mov	r2, r4
   13b80:	bl	10cb4 <memcpy@plt>
   13b84:	mov	r0, r6
   13b88:	pop	{r4, r5, r6, sl, fp, pc}
   13b8c:	push	{r4, r5, r6, sl, fp, lr}
   13b90:	add	fp, sp, #16
   13b94:	mov	r4, r1
   13b98:	mov	r5, r0
   13b9c:	mov	r0, r1
   13ba0:	bl	13890 <putchar_unlocked@plt+0x2a2c>
   13ba4:	mov	r6, r0
   13ba8:	mov	r1, r5
   13bac:	mov	r2, r4
   13bb0:	bl	10cb4 <memcpy@plt>
   13bb4:	mov	r0, r6
   13bb8:	pop	{r4, r5, r6, sl, fp, pc}
   13bbc:	push	{r4, r5, r6, sl, fp, lr}
   13bc0:	add	fp, sp, #16
   13bc4:	mov	r4, r1
   13bc8:	mov	r5, r0
   13bcc:	add	r0, r1, #1
   13bd0:	bl	13890 <putchar_unlocked@plt+0x2a2c>
   13bd4:	mov	r6, r0
   13bd8:	mov	r0, #0
   13bdc:	strb	r0, [r6, r4]
   13be0:	mov	r0, r6
   13be4:	mov	r1, r5
   13be8:	mov	r2, r4
   13bec:	bl	10cb4 <memcpy@plt>
   13bf0:	mov	r0, r6
   13bf4:	pop	{r4, r5, r6, sl, fp, pc}
   13bf8:	push	{r4, sl, fp, lr}
   13bfc:	add	fp, sp, #8
   13c00:	mov	r4, r0
   13c04:	bl	10db0 <strlen@plt>
   13c08:	add	r1, r0, #1
   13c0c:	mov	r0, r4
   13c10:	pop	{r4, sl, fp, lr}
   13c14:	b	13b5c <putchar_unlocked@plt+0x2cf8>
   13c18:	push	{fp, lr}
   13c1c:	mov	fp, sp
   13c20:	movw	r0, #24780	; 0x60cc
   13c24:	movt	r0, #2
   13c28:	ldr	r4, [r0]
   13c2c:	movw	r1, #20296	; 0x4f48
   13c30:	movt	r1, #1
   13c34:	mov	r0, #0
   13c38:	mov	r2, #5
   13c3c:	bl	10cd8 <dcgettext@plt>
   13c40:	mov	r3, r0
   13c44:	movw	r2, #19255	; 0x4b37
   13c48:	movt	r2, #1
   13c4c:	mov	r0, r4
   13c50:	mov	r1, #0
   13c54:	bl	10d50 <error@plt>
   13c58:	bl	10e58 <abort@plt>
   13c5c:	clz	r2, r1
   13c60:	lsr	r2, r2, #5
   13c64:	clz	r3, r0
   13c68:	lsr	r3, r3, #5
   13c6c:	orrs	r2, r3, r2
   13c70:	movwne	r1, #1
   13c74:	movwne	r0, #1
   13c78:	cmp	r1, #0
   13c7c:	beq	13cac <putchar_unlocked@plt+0x2e48>
   13c80:	mvn	r2, #-2147483648	; 0x80000000
   13c84:	udiv	r2, r2, r1
   13c88:	cmp	r2, r0
   13c8c:	bcs	13cac <putchar_unlocked@plt+0x2e48>
   13c90:	push	{fp, lr}
   13c94:	mov	fp, sp
   13c98:	bl	10dbc <__errno_location@plt>
   13c9c:	mov	r1, #12
   13ca0:	str	r1, [r0]
   13ca4:	mov	r0, #0
   13ca8:	pop	{fp, pc}
   13cac:	b	10c6c <calloc@plt>
   13cb0:	cmp	r0, #0
   13cb4:	movweq	r0, #1
   13cb8:	cmn	r0, #1
   13cbc:	ble	13cc4 <putchar_unlocked@plt+0x2e60>
   13cc0:	b	10d5c <malloc@plt>
   13cc4:	push	{fp, lr}
   13cc8:	mov	fp, sp
   13ccc:	bl	10dbc <__errno_location@plt>
   13cd0:	mov	r1, #12
   13cd4:	str	r1, [r0]
   13cd8:	mov	r0, #0
   13cdc:	pop	{fp, pc}
   13ce0:	push	{fp, lr}
   13ce4:	mov	fp, sp
   13ce8:	cmp	r0, #0
   13cec:	beq	13d08 <putchar_unlocked@plt+0x2ea4>
   13cf0:	cmp	r1, #0
   13cf4:	beq	13d14 <putchar_unlocked@plt+0x2eb0>
   13cf8:	cmn	r1, #1
   13cfc:	ble	13d20 <putchar_unlocked@plt+0x2ebc>
   13d00:	pop	{fp, lr}
   13d04:	b	10ce4 <realloc@plt>
   13d08:	mov	r0, r1
   13d0c:	pop	{fp, lr}
   13d10:	b	13cb0 <putchar_unlocked@plt+0x2e4c>
   13d14:	bl	11730 <putchar_unlocked@plt+0x8cc>
   13d18:	mov	r0, #0
   13d1c:	pop	{fp, pc}
   13d20:	bl	10dbc <__errno_location@plt>
   13d24:	mov	r1, #12
   13d28:	str	r1, [r0]
   13d2c:	mov	r0, #0
   13d30:	pop	{fp, pc}
   13d34:	sub	r0, r0, #1
   13d38:	ldrb	r3, [r0, #1]!
   13d3c:	cmp	r3, #47	; 0x2f
   13d40:	beq	13d38 <putchar_unlocked@plt+0x2ed4>
   13d44:	mov	r2, #0
   13d48:	mov	r1, r0
   13d4c:	b	13d68 <putchar_unlocked@plt+0x2f04>
   13d50:	cmp	r3, #0
   13d54:	bxeq	lr
   13d58:	tst	r2, #1
   13d5c:	movne	r0, r1
   13d60:	mov	r2, #0
   13d64:	ldrb	r3, [r1, #1]!
   13d68:	uxtb	r3, r3
   13d6c:	cmp	r3, #47	; 0x2f
   13d70:	bne	13d50 <putchar_unlocked@plt+0x2eec>
   13d74:	mov	r2, #1
   13d78:	ldrb	r3, [r1, #1]!
   13d7c:	b	13d68 <putchar_unlocked@plt+0x2f04>
   13d80:	push	{r4, sl, fp, lr}
   13d84:	add	fp, sp, #8
   13d88:	mov	r4, r0
   13d8c:	bl	10db0 <strlen@plt>
   13d90:	mov	r1, r0
   13d94:	sub	r2, r4, #1
   13d98:	mov	r0, r1
   13d9c:	cmp	r1, #2
   13da0:	popcc	{r4, sl, fp, pc}
   13da4:	ldrb	r3, [r2, r0]
   13da8:	sub	r1, r0, #1
   13dac:	cmp	r3, #47	; 0x2f
   13db0:	beq	13d98 <putchar_unlocked@plt+0x2f34>
   13db4:	pop	{r4, sl, fp, pc}
   13db8:	mov	r1, r0
   13dbc:	sub	r2, r0, #65	; 0x41
   13dc0:	mov	r0, #1
   13dc4:	cmp	r2, #26
   13dc8:	subcs	r2, r1, #97	; 0x61
   13dcc:	cmpcs	r2, #26
   13dd0:	bcs	13dd8 <putchar_unlocked@plt+0x2f74>
   13dd4:	bx	lr
   13dd8:	sub	r1, r1, #48	; 0x30
   13ddc:	cmp	r1, #10
   13de0:	movcs	r0, #0
   13de4:	bx	lr
   13de8:	mov	r1, r0
   13dec:	sub	r2, r0, #65	; 0x41
   13df0:	mov	r0, #1
   13df4:	cmp	r2, #26
   13df8:	subcs	r1, r1, #97	; 0x61
   13dfc:	cmpcs	r1, #26
   13e00:	movcs	r0, #0
   13e04:	bx	lr
   13e08:	mov	r1, #0
   13e0c:	cmp	r0, #128	; 0x80
   13e10:	movwcc	r1, #1
   13e14:	mov	r0, r1
   13e18:	bx	lr
   13e1c:	sub	r1, r0, #9
   13e20:	clz	r1, r1
   13e24:	lsr	r1, r1, #5
   13e28:	sub	r0, r0, #32
   13e2c:	clz	r0, r0
   13e30:	lsr	r0, r0, #5
   13e34:	orr	r0, r0, r1
   13e38:	bx	lr
   13e3c:	mov	r1, r0
   13e40:	mov	r0, #1
   13e44:	cmp	r1, #32
   13e48:	bxcc	lr
   13e4c:	cmp	r1, #127	; 0x7f
   13e50:	movne	r0, #0
   13e54:	bx	lr
   13e58:	sub	r1, r0, #48	; 0x30
   13e5c:	mov	r0, #0
   13e60:	cmp	r1, #10
   13e64:	movwcc	r0, #1
   13e68:	bx	lr
   13e6c:	sub	r1, r0, #33	; 0x21
   13e70:	mov	r0, #0
   13e74:	cmp	r1, #94	; 0x5e
   13e78:	movwcc	r0, #1
   13e7c:	bx	lr
   13e80:	sub	r1, r0, #97	; 0x61
   13e84:	mov	r0, #0
   13e88:	cmp	r1, #26
   13e8c:	movwcc	r0, #1
   13e90:	bx	lr
   13e94:	sub	r1, r0, #32
   13e98:	mov	r0, #0
   13e9c:	cmp	r1, #95	; 0x5f
   13ea0:	movwcc	r0, #1
   13ea4:	bx	lr
   13ea8:	sub	r1, r0, #33	; 0x21
   13eac:	cmp	r1, #93	; 0x5d
   13eb0:	bhi	1403c <putchar_unlocked@plt+0x31d8>
   13eb4:	mov	r0, #1
   13eb8:	add	r2, pc, #0
   13ebc:	ldr	pc, [r2, r1, lsl #2]
   13ec0:	andeq	r4, r1, r8, lsr r0
   13ec4:	andeq	r4, r1, r8, lsr r0
   13ec8:	andeq	r4, r1, r8, lsr r0
   13ecc:	andeq	r4, r1, r8, lsr r0
   13ed0:	andeq	r4, r1, r8, lsr r0
   13ed4:	andeq	r4, r1, r8, lsr r0
   13ed8:	andeq	r4, r1, r8, lsr r0
   13edc:	andeq	r4, r1, r8, lsr r0
   13ee0:	andeq	r4, r1, r8, lsr r0
   13ee4:	andeq	r4, r1, r8, lsr r0
   13ee8:	andeq	r4, r1, r8, lsr r0
   13eec:	andeq	r4, r1, r8, lsr r0
   13ef0:	andeq	r4, r1, r8, lsr r0
   13ef4:	andeq	r4, r1, r8, lsr r0
   13ef8:	andeq	r4, r1, r8, lsr r0
   13efc:	andeq	r4, r1, ip, lsr r0
   13f00:	andeq	r4, r1, ip, lsr r0
   13f04:	andeq	r4, r1, ip, lsr r0
   13f08:	andeq	r4, r1, ip, lsr r0
   13f0c:	andeq	r4, r1, ip, lsr r0
   13f10:	andeq	r4, r1, ip, lsr r0
   13f14:	andeq	r4, r1, ip, lsr r0
   13f18:	andeq	r4, r1, ip, lsr r0
   13f1c:	andeq	r4, r1, ip, lsr r0
   13f20:	andeq	r4, r1, ip, lsr r0
   13f24:	andeq	r4, r1, r8, lsr r0
   13f28:	andeq	r4, r1, r8, lsr r0
   13f2c:	andeq	r4, r1, r8, lsr r0
   13f30:	andeq	r4, r1, r8, lsr r0
   13f34:	andeq	r4, r1, r8, lsr r0
   13f38:	andeq	r4, r1, r8, lsr r0
   13f3c:	andeq	r4, r1, r8, lsr r0
   13f40:	andeq	r4, r1, ip, lsr r0
   13f44:	andeq	r4, r1, ip, lsr r0
   13f48:	andeq	r4, r1, ip, lsr r0
   13f4c:	andeq	r4, r1, ip, lsr r0
   13f50:	andeq	r4, r1, ip, lsr r0
   13f54:	andeq	r4, r1, ip, lsr r0
   13f58:	andeq	r4, r1, ip, lsr r0
   13f5c:	andeq	r4, r1, ip, lsr r0
   13f60:	andeq	r4, r1, ip, lsr r0
   13f64:	andeq	r4, r1, ip, lsr r0
   13f68:	andeq	r4, r1, ip, lsr r0
   13f6c:	andeq	r4, r1, ip, lsr r0
   13f70:	andeq	r4, r1, ip, lsr r0
   13f74:	andeq	r4, r1, ip, lsr r0
   13f78:	andeq	r4, r1, ip, lsr r0
   13f7c:	andeq	r4, r1, ip, lsr r0
   13f80:	andeq	r4, r1, ip, lsr r0
   13f84:	andeq	r4, r1, ip, lsr r0
   13f88:	andeq	r4, r1, ip, lsr r0
   13f8c:	andeq	r4, r1, ip, lsr r0
   13f90:	andeq	r4, r1, ip, lsr r0
   13f94:	andeq	r4, r1, ip, lsr r0
   13f98:	andeq	r4, r1, ip, lsr r0
   13f9c:	andeq	r4, r1, ip, lsr r0
   13fa0:	andeq	r4, r1, ip, lsr r0
   13fa4:	andeq	r4, r1, ip, lsr r0
   13fa8:	andeq	r4, r1, r8, lsr r0
   13fac:	andeq	r4, r1, r8, lsr r0
   13fb0:	andeq	r4, r1, r8, lsr r0
   13fb4:	andeq	r4, r1, r8, lsr r0
   13fb8:	andeq	r4, r1, r8, lsr r0
   13fbc:	andeq	r4, r1, r8, lsr r0
   13fc0:	andeq	r4, r1, ip, lsr r0
   13fc4:	andeq	r4, r1, ip, lsr r0
   13fc8:	andeq	r4, r1, ip, lsr r0
   13fcc:	andeq	r4, r1, ip, lsr r0
   13fd0:	andeq	r4, r1, ip, lsr r0
   13fd4:	andeq	r4, r1, ip, lsr r0
   13fd8:	andeq	r4, r1, ip, lsr r0
   13fdc:	andeq	r4, r1, ip, lsr r0
   13fe0:	andeq	r4, r1, ip, lsr r0
   13fe4:	andeq	r4, r1, ip, lsr r0
   13fe8:	andeq	r4, r1, ip, lsr r0
   13fec:	andeq	r4, r1, ip, lsr r0
   13ff0:	andeq	r4, r1, ip, lsr r0
   13ff4:	andeq	r4, r1, ip, lsr r0
   13ff8:	andeq	r4, r1, ip, lsr r0
   13ffc:	andeq	r4, r1, ip, lsr r0
   14000:	andeq	r4, r1, ip, lsr r0
   14004:	andeq	r4, r1, ip, lsr r0
   14008:	andeq	r4, r1, ip, lsr r0
   1400c:	andeq	r4, r1, ip, lsr r0
   14010:	andeq	r4, r1, ip, lsr r0
   14014:	andeq	r4, r1, ip, lsr r0
   14018:	andeq	r4, r1, ip, lsr r0
   1401c:	andeq	r4, r1, ip, lsr r0
   14020:	andeq	r4, r1, ip, lsr r0
   14024:	andeq	r4, r1, ip, lsr r0
   14028:	andeq	r4, r1, r8, lsr r0
   1402c:	andeq	r4, r1, r8, lsr r0
   14030:	andeq	r4, r1, r8, lsr r0
   14034:	andeq	r4, r1, r8, lsr r0
   14038:	bx	lr
   1403c:	mov	r0, #0
   14040:	bx	lr
   14044:	sub	r0, r0, #9
   14048:	cmp	r0, #23
   1404c:	movhi	r0, #0
   14050:	bxhi	lr
   14054:	bic	r0, r0, #-16777216	; 0xff000000
   14058:	movw	r1, #31
   1405c:	movt	r1, #128	; 0x80
   14060:	mov	r2, #1
   14064:	and	r0, r2, r1, lsr r0
   14068:	bx	lr
   1406c:	sub	r1, r0, #65	; 0x41
   14070:	mov	r0, #0
   14074:	cmp	r1, #26
   14078:	movwcc	r0, #1
   1407c:	bx	lr
   14080:	mov	r1, r0
   14084:	sub	r2, r0, #48	; 0x30
   14088:	mov	r0, #1
   1408c:	cmp	r2, #22
   14090:	bhi	140a8 <putchar_unlocked@plt+0x3244>
   14094:	mov	ip, #1
   14098:	movw	r3, #1023	; 0x3ff
   1409c:	movt	r3, #126	; 0x7e
   140a0:	tst	r3, ip, lsl r2
   140a4:	bxne	lr
   140a8:	sub	r1, r1, #97	; 0x61
   140ac:	cmp	r1, #6
   140b0:	movcs	r0, #0
   140b4:	bxcs	lr
   140b8:	bx	lr
   140bc:	sub	r1, r0, #65	; 0x41
   140c0:	cmp	r1, #26
   140c4:	addcc	r0, r0, #32
   140c8:	bx	lr
   140cc:	sub	r1, r0, #97	; 0x61
   140d0:	cmp	r1, #26
   140d4:	subcc	r0, r0, #32
   140d8:	bx	lr
   140dc:	push	{r4, r5, r6, sl, fp, lr}
   140e0:	add	fp, sp, #16
   140e4:	mov	r4, r0
   140e8:	bl	10d2c <__fpending@plt>
   140ec:	mov	r5, r0
   140f0:	mov	r0, r4
   140f4:	bl	10d38 <ferror_unlocked@plt>
   140f8:	mov	r6, r0
   140fc:	mov	r0, r4
   14100:	bl	14164 <putchar_unlocked@plt+0x3300>
   14104:	cmp	r6, #0
   14108:	beq	14128 <putchar_unlocked@plt+0x32c4>
   1410c:	mvn	r4, #0
   14110:	cmp	r0, #0
   14114:	bne	1415c <putchar_unlocked@plt+0x32f8>
   14118:	bl	10dbc <__errno_location@plt>
   1411c:	mov	r1, #0
   14120:	str	r1, [r0]
   14124:	b	1415c <putchar_unlocked@plt+0x32f8>
   14128:	cmp	r0, #0
   1412c:	mov	r4, r0
   14130:	mvnne	r4, #0
   14134:	cmp	r5, #0
   14138:	bne	1415c <putchar_unlocked@plt+0x32f8>
   1413c:	cmp	r0, #0
   14140:	beq	1415c <putchar_unlocked@plt+0x32f8>
   14144:	bl	10dbc <__errno_location@plt>
   14148:	ldr	r0, [r0]
   1414c:	subs	r4, r0, #9
   14150:	mvnne	r4, #0
   14154:	mov	r0, r4
   14158:	pop	{r4, r5, r6, sl, fp, pc}
   1415c:	mov	r0, r4
   14160:	pop	{r4, r5, r6, sl, fp, pc}
   14164:	push	{r4, r5, fp, lr}
   14168:	add	fp, sp, #8
   1416c:	sub	sp, sp, #8
   14170:	mov	r4, r0
   14174:	bl	10dec <fileno@plt>
   14178:	cmn	r0, #1
   1417c:	ble	141f4 <putchar_unlocked@plt+0x3390>
   14180:	mov	r0, r4
   14184:	bl	10d74 <__freading@plt>
   14188:	cmp	r0, #0
   1418c:	beq	141b8 <putchar_unlocked@plt+0x3354>
   14190:	mov	r0, r4
   14194:	bl	10dec <fileno@plt>
   14198:	mov	r1, #1
   1419c:	str	r1, [sp]
   141a0:	mov	r2, #0
   141a4:	mov	r3, #0
   141a8:	bl	10d14 <lseek64@plt>
   141ac:	and	r0, r0, r1
   141b0:	cmn	r0, #1
   141b4:	beq	141f4 <putchar_unlocked@plt+0x3390>
   141b8:	mov	r0, r4
   141bc:	bl	14204 <putchar_unlocked@plt+0x33a0>
   141c0:	cmp	r0, #0
   141c4:	beq	141f4 <putchar_unlocked@plt+0x3390>
   141c8:	bl	10dbc <__errno_location@plt>
   141cc:	ldr	r5, [r0]
   141d0:	mov	r0, r4
   141d4:	bl	10e04 <fclose@plt>
   141d8:	cmp	r5, #0
   141dc:	beq	141ec <putchar_unlocked@plt+0x3388>
   141e0:	bl	10dbc <__errno_location@plt>
   141e4:	str	r5, [r0]
   141e8:	mvn	r0, #0
   141ec:	sub	sp, fp, #8
   141f0:	pop	{r4, r5, fp, pc}
   141f4:	mov	r0, r4
   141f8:	sub	sp, fp, #8
   141fc:	pop	{r4, r5, fp, lr}
   14200:	b	10e04 <fclose@plt>
   14204:	push	{r4, sl, fp, lr}
   14208:	add	fp, sp, #8
   1420c:	mov	r4, r0
   14210:	cmp	r0, #0
   14214:	beq	1422c <putchar_unlocked@plt+0x33c8>
   14218:	mov	r0, r4
   1421c:	bl	10d74 <__freading@plt>
   14220:	cmp	r0, #0
   14224:	movne	r0, r4
   14228:	blne	14238 <putchar_unlocked@plt+0x33d4>
   1422c:	mov	r0, r4
   14230:	pop	{r4, sl, fp, lr}
   14234:	b	10c90 <fflush@plt>
   14238:	ldrb	r1, [r0, #1]
   1423c:	tst	r1, #1
   14240:	bxeq	lr
   14244:	push	{fp, lr}
   14248:	mov	fp, sp
   1424c:	sub	sp, sp, #8
   14250:	mov	r1, #1
   14254:	str	r1, [sp]
   14258:	mov	r2, #0
   1425c:	mov	r3, #0
   14260:	bl	1426c <putchar_unlocked@plt+0x3408>
   14264:	mov	sp, fp
   14268:	pop	{fp, pc}
   1426c:	push	{r4, r5, r6, r7, fp, lr}
   14270:	add	fp, sp, #16
   14274:	sub	sp, sp, #8
   14278:	mov	r5, r3
   1427c:	mov	r6, r2
   14280:	mov	r4, r0
   14284:	ldr	r0, [r0, #4]
   14288:	ldr	r1, [r4, #8]
   1428c:	cmp	r1, r0
   14290:	bne	142ac <putchar_unlocked@plt+0x3448>
   14294:	ldrd	r0, [r4, #16]
   14298:	cmp	r1, r0
   1429c:	bne	142ac <putchar_unlocked@plt+0x3448>
   142a0:	ldr	r0, [r4, #36]	; 0x24
   142a4:	cmp	r0, #0
   142a8:	beq	142c4 <putchar_unlocked@plt+0x3460>
   142ac:	mov	r0, r4
   142b0:	mov	r2, r6
   142b4:	mov	r3, r5
   142b8:	sub	sp, fp, #16
   142bc:	pop	{r4, r5, r6, r7, fp, lr}
   142c0:	b	10e10 <fseeko64@plt>
   142c4:	ldr	r7, [fp, #8]
   142c8:	mov	r0, r4
   142cc:	bl	10dec <fileno@plt>
   142d0:	str	r7, [sp]
   142d4:	mov	r2, r6
   142d8:	mov	r3, r5
   142dc:	bl	10d14 <lseek64@plt>
   142e0:	and	r2, r0, r1
   142e4:	cmn	r2, #1
   142e8:	mvneq	r0, #0
   142ec:	subeq	sp, fp, #16
   142f0:	popeq	{r4, r5, r6, r7, fp, pc}
   142f4:	strd	r0, [r4, #80]	; 0x50
   142f8:	ldr	r0, [r4]
   142fc:	bic	r0, r0, #16
   14300:	str	r0, [r4]
   14304:	mov	r0, #0
   14308:	sub	sp, fp, #16
   1430c:	pop	{r4, r5, r6, r7, fp, pc}
   14310:	push	{fp, lr}
   14314:	mov	fp, sp
   14318:	bl	10dbc <__errno_location@plt>
   1431c:	mov	r1, #12
   14320:	str	r1, [r0]
   14324:	mov	r0, #0
   14328:	pop	{fp, pc}
   1432c:	b	13cb0 <putchar_unlocked@plt+0x2e4c>
   14330:	cmp	r1, #0
   14334:	orreq	r1, r1, #1
   14338:	b	13ce0 <putchar_unlocked@plt+0x2e7c>
   1433c:	b	13c5c <putchar_unlocked@plt+0x2df8>
   14340:	clz	r3, r2
   14344:	lsr	ip, r3, #5
   14348:	clz	r3, r1
   1434c:	lsr	r3, r3, #5
   14350:	orrs	r3, r3, ip
   14354:	movwne	r1, #1
   14358:	movwne	r2, #1
   1435c:	b	143f8 <putchar_unlocked@plt+0x3594>
   14360:	push	{fp, lr}
   14364:	mov	fp, sp
   14368:	mov	r0, #14
   1436c:	bl	10e34 <nl_langinfo@plt>
   14370:	movw	r1, #18549	; 0x4875
   14374:	movt	r1, #1
   14378:	cmp	r0, #0
   1437c:	movne	r1, r0
   14380:	ldrb	r2, [r1]
   14384:	movw	r0, #20313	; 0x4f59
   14388:	movt	r0, #1
   1438c:	cmp	r2, #0
   14390:	movne	r0, r1
   14394:	pop	{fp, pc}
   14398:	push	{r4, r5, r6, r7, fp, lr}
   1439c:	add	fp, sp, #16
   143a0:	sub	sp, sp, #8
   143a4:	mov	r7, r2
   143a8:	mov	r4, r1
   143ac:	add	r5, sp, #4
   143b0:	cmp	r0, #0
   143b4:	movne	r5, r0
   143b8:	mov	r0, r5
   143bc:	bl	10d44 <mbrtowc@plt>
   143c0:	mov	r6, r0
   143c4:	cmp	r7, #0
   143c8:	beq	143ec <putchar_unlocked@plt+0x3588>
   143cc:	cmn	r6, #2
   143d0:	bcc	143ec <putchar_unlocked@plt+0x3588>
   143d4:	mov	r0, #0
   143d8:	bl	14434 <putchar_unlocked@plt+0x35d0>
   143dc:	cmp	r0, #0
   143e0:	ldrbeq	r0, [r4]
   143e4:	streq	r0, [r5]
   143e8:	moveq	r6, #1
   143ec:	mov	r0, r6
   143f0:	sub	sp, fp, #16
   143f4:	pop	{r4, r5, r6, r7, fp, pc}
   143f8:	cmp	r2, #0
   143fc:	beq	1442c <putchar_unlocked@plt+0x35c8>
   14400:	mvn	r3, #0
   14404:	udiv	r3, r3, r2
   14408:	cmp	r3, r1
   1440c:	bcs	1442c <putchar_unlocked@plt+0x35c8>
   14410:	push	{fp, lr}
   14414:	mov	fp, sp
   14418:	bl	10dbc <__errno_location@plt>
   1441c:	mov	r1, #12
   14420:	str	r1, [r0]
   14424:	mov	r0, #0
   14428:	pop	{fp, pc}
   1442c:	mul	r1, r2, r1
   14430:	b	13ce0 <putchar_unlocked@plt+0x2e7c>
   14434:	push	{r4, sl, fp, lr}
   14438:	add	fp, sp, #8
   1443c:	sub	sp, sp, #264	; 0x108
   14440:	add	r1, sp, #7
   14444:	movw	r2, #257	; 0x101
   14448:	bl	14498 <putchar_unlocked@plt+0x3634>
   1444c:	mov	r4, #0
   14450:	cmp	r0, #0
   14454:	bne	1448c <putchar_unlocked@plt+0x3628>
   14458:	add	r0, sp, #7
   1445c:	movw	r1, #20319	; 0x4f5f
   14460:	movt	r1, #1
   14464:	bl	10c84 <strcmp@plt>
   14468:	cmp	r0, #0
   1446c:	beq	1448c <putchar_unlocked@plt+0x3628>
   14470:	add	r0, sp, #7
   14474:	movw	r1, #20321	; 0x4f61
   14478:	movt	r1, #1
   1447c:	bl	10c84 <strcmp@plt>
   14480:	mov	r4, r0
   14484:	cmp	r0, #0
   14488:	movwne	r4, #1
   1448c:	mov	r0, r4
   14490:	sub	sp, fp, #8
   14494:	pop	{r4, sl, fp, pc}
   14498:	b	1449c <putchar_unlocked@plt+0x3638>
   1449c:	push	{r4, r5, r6, r7, fp, lr}
   144a0:	add	fp, sp, #16
   144a4:	mov	r6, r2
   144a8:	mov	r4, r1
   144ac:	bl	14538 <putchar_unlocked@plt+0x36d4>
   144b0:	cmp	r0, #0
   144b4:	beq	144e4 <putchar_unlocked@plt+0x3680>
   144b8:	mov	r7, r0
   144bc:	bl	10db0 <strlen@plt>
   144c0:	cmp	r0, r6
   144c4:	bcs	14504 <putchar_unlocked@plt+0x36a0>
   144c8:	add	r2, r0, #1
   144cc:	mov	r0, r4
   144d0:	mov	r1, r7
   144d4:	bl	10cb4 <memcpy@plt>
   144d8:	mov	r5, #0
   144dc:	mov	r0, r5
   144e0:	pop	{r4, r5, r6, r7, fp, pc}
   144e4:	mov	r5, #22
   144e8:	cmp	r6, #0
   144ec:	movne	r0, #0
   144f0:	strbne	r0, [r4]
   144f4:	movne	r0, r5
   144f8:	popne	{r4, r5, r6, r7, fp, pc}
   144fc:	mov	r0, r5
   14500:	pop	{r4, r5, r6, r7, fp, pc}
   14504:	mov	r5, #34	; 0x22
   14508:	cmp	r6, #0
   1450c:	beq	1452c <putchar_unlocked@plt+0x36c8>
   14510:	sub	r6, r6, #1
   14514:	mov	r0, r4
   14518:	mov	r1, r7
   1451c:	mov	r2, r6
   14520:	bl	10cb4 <memcpy@plt>
   14524:	mov	r0, #0
   14528:	strb	r0, [r4, r6]
   1452c:	mov	r0, r5
   14530:	pop	{r4, r5, r6, r7, fp, pc}
   14534:	b	14538 <putchar_unlocked@plt+0x36d4>
   14538:	mov	r1, #0
   1453c:	b	10e1c <setlocale@plt>
   14540:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14544:	mov	r7, r0
   14548:	ldr	r6, [pc, #72]	; 14598 <putchar_unlocked@plt+0x3734>
   1454c:	ldr	r5, [pc, #72]	; 1459c <putchar_unlocked@plt+0x3738>
   14550:	add	r6, pc, r6
   14554:	add	r5, pc, r5
   14558:	sub	r6, r6, r5
   1455c:	mov	r8, r1
   14560:	mov	r9, r2
   14564:	bl	10c4c <calloc@plt-0x20>
   14568:	asrs	r6, r6, #2
   1456c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14570:	mov	r4, #0
   14574:	add	r4, r4, #1
   14578:	ldr	r3, [r5], #4
   1457c:	mov	r2, r9
   14580:	mov	r1, r8
   14584:	mov	r0, r7
   14588:	blx	r3
   1458c:	cmp	r6, r4
   14590:	bne	14574 <putchar_unlocked@plt+0x3710>
   14594:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14598:			; <UNDEFINED> instruction: 0x000119b4
   1459c:	andeq	r1, r1, ip, lsr #19
   145a0:	bx	lr
   145a4:	ldr	r3, [pc, #12]	; 145b8 <putchar_unlocked@plt+0x3754>
   145a8:	mov	r1, #0
   145ac:	add	r3, pc, r3
   145b0:	ldr	r2, [r3]
   145b4:	b	10dc8 <__cxa_atexit@plt>
   145b8:	andeq	r1, r1, r0, lsl fp

Disassembly of section .fini:

000145bc <.fini>:
   145bc:	push	{r3, lr}
   145c0:	pop	{r3, pc}
