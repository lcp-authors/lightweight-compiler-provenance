
../repos/prog2/3.e.3:     file format elf32-littlearm


Disassembly of section .init:

00010694 <.init>:
   10694:	push	{r3, lr}
   10698:	bl	107a4 <_start@@Base+0x3c>
   1069c:	pop	{r3, pc}

Disassembly of section .plt:

000106a0 <__isoc99_fscanf@plt-0x14>:
   106a0:	push	{lr}		; (str lr, [sp, #-4]!)
   106a4:	ldr	lr, [pc, #4]	; 106b0 <__isoc99_fscanf@plt-0x4>
   106a8:	add	lr, pc, lr
   106ac:	ldr	pc, [lr, #8]!
   106b0:	andeq	r0, r1, r0, asr r9

000106b4 <__isoc99_fscanf@plt>:
   106b4:	add	ip, pc, #0, 12
   106b8:	add	ip, ip, #16, 20	; 0x10000
   106bc:	ldr	pc, [ip, #2384]!	; 0x950

000106c0 <fopen@plt>:
   106c0:	add	ip, pc, #0, 12
   106c4:	add	ip, ip, #16, 20	; 0x10000
   106c8:	ldr	pc, [ip, #2376]!	; 0x948

000106cc <realloc@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #16, 20	; 0x10000
   106d4:	ldr	pc, [ip, #2368]!	; 0x940

000106d8 <fwrite@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #16, 20	; 0x10000
   106e0:	ldr	pc, [ip, #2360]!	; 0x938

000106e4 <malloc@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #16, 20	; 0x10000
   106ec:	ldr	pc, [ip, #2352]!	; 0x930

000106f0 <__libc_start_main@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #16, 20	; 0x10000
   106f8:	ldr	pc, [ip, #2344]!	; 0x928

000106fc <__gmon_start__@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #16, 20	; 0x10000
   10704:	ldr	pc, [ip, #2336]!	; 0x920

00010708 <fprintf@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #16, 20	; 0x10000
   10710:	ldr	pc, [ip, #2328]!	; 0x918

00010714 <fclose@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #16, 20	; 0x10000
   1071c:	ldr	pc, [ip, #2320]!	; 0x910

00010720 <abort@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #16, 20	; 0x10000
   10728:	ldr	pc, [ip, #2312]!	; 0x908

Disassembly of section .text:

0001072c <main@@Base>:
   1072c:	push	{r4, lr}
   10730:	sub	sp, sp, #8
   10734:	add	r1, sp, #8
   10738:	mov	r4, #0
   1073c:	str	r4, [r1, #-4]!
   10740:	mov	r0, r4
   10744:	bl	10890 <analisarFicheiro@@Base>
   10748:	ldr	r2, [sp, #4]
   1074c:	mov	r1, r0
   10750:	ldr	r0, [pc, #12]	; 10764 <main@@Base+0x38>
   10754:	bl	10928 <gerarRelatorio@@Base>
   10758:	mov	r0, r4
   1075c:	add	sp, sp, #8
   10760:	pop	{r4, pc}
   10764:	muleq	r1, r0, sl

00010768 <_start@@Base>:
   10768:	mov	fp, #0
   1076c:	mov	lr, #0
   10770:	pop	{r1}		; (ldr r1, [sp], #4)
   10774:	mov	r2, sp
   10778:	push	{r2}		; (str r2, [sp, #-4]!)
   1077c:	push	{r0}		; (str r0, [sp, #-4]!)
   10780:	ldr	ip, [pc, #16]	; 10798 <_start@@Base+0x30>
   10784:	push	{ip}		; (str ip, [sp, #-4]!)
   10788:	ldr	r0, [pc, #12]	; 1079c <_start@@Base+0x34>
   1078c:	ldr	r3, [pc, #12]	; 107a0 <_start@@Base+0x38>
   10790:	bl	106f0 <__libc_start_main@plt>
   10794:	bl	10720 <abort@plt>
   10798:	andeq	r0, r1, ip, lsr sl
   1079c:	andeq	r0, r1, ip, lsr #14
   107a0:	ldrdeq	r0, [r1], -ip
   107a4:	ldr	r3, [pc, #20]	; 107c0 <_start@@Base+0x58>
   107a8:	ldr	r2, [pc, #20]	; 107c4 <_start@@Base+0x5c>
   107ac:	add	r3, pc, r3
   107b0:	ldr	r2, [r3, r2]
   107b4:	cmp	r2, #0
   107b8:	bxeq	lr
   107bc:	b	106fc <__gmon_start__@plt>
   107c0:	andeq	r0, r1, ip, asr #16
   107c4:	andeq	r0, r0, r4, lsr r0
   107c8:	ldr	r3, [pc, #28]	; 107ec <_start@@Base+0x84>
   107cc:	ldr	r0, [pc, #28]	; 107f0 <_start@@Base+0x88>
   107d0:	sub	r3, r3, r0
   107d4:	cmp	r3, #6
   107d8:	bxls	lr
   107dc:	ldr	r3, [pc, #16]	; 107f4 <_start@@Base+0x8c>
   107e0:	cmp	r3, #0
   107e4:	bxeq	lr
   107e8:	bx	r3
   107ec:	andeq	r1, r2, r3, asr #32
   107f0:	andeq	r1, r2, r0, asr #32
   107f4:	andeq	r0, r0, r0
   107f8:	ldr	r1, [pc, #36]	; 10824 <_start@@Base+0xbc>
   107fc:	ldr	r0, [pc, #36]	; 10828 <_start@@Base+0xc0>
   10800:	sub	r1, r1, r0
   10804:	asr	r1, r1, #2
   10808:	add	r1, r1, r1, lsr #31
   1080c:	asrs	r1, r1, #1
   10810:	bxeq	lr
   10814:	ldr	r3, [pc, #16]	; 1082c <_start@@Base+0xc4>
   10818:	cmp	r3, #0
   1081c:	bxeq	lr
   10820:	bx	r3
   10824:	andeq	r1, r2, r0, asr #32
   10828:	andeq	r1, r2, r0, asr #32
   1082c:	andeq	r0, r0, r0
   10830:	push	{r4, lr}
   10834:	ldr	r4, [pc, #24]	; 10854 <_start@@Base+0xec>
   10838:	ldrb	r3, [r4]
   1083c:	cmp	r3, #0
   10840:	popne	{r4, pc}
   10844:	bl	107c8 <_start@@Base+0x60>
   10848:	mov	r3, #1
   1084c:	strb	r3, [r4]
   10850:	pop	{r4, pc}
   10854:	andeq	r1, r2, r0, asr #32
   10858:	ldr	r0, [pc, #40]	; 10888 <_start@@Base+0x120>
   1085c:	ldr	r3, [r0]
   10860:	cmp	r3, #0
   10864:	bne	1086c <_start@@Base+0x104>
   10868:	b	107f8 <_start@@Base+0x90>
   1086c:	ldr	r3, [pc, #24]	; 1088c <_start@@Base+0x124>
   10870:	cmp	r3, #0
   10874:	beq	10868 <_start@@Base+0x100>
   10878:	push	{r4, lr}
   1087c:	blx	r3
   10880:	pop	{r4, lr}
   10884:	b	107f8 <_start@@Base+0x90>
   10888:	andeq	r0, r2, r4, lsl pc
   1088c:	andeq	r0, r0, r0

00010890 <analisarFicheiro@@Base>:
   10890:	push	{r4, r5, r6, r7, r8, r9, lr}
   10894:	mov	r9, r1
   10898:	sub	sp, sp, #12
   1089c:	ldr	r1, [pc, #120]	; 1091c <analisarFicheiro@@Base+0x8c>
   108a0:	ldr	r0, [pc, #120]	; 10920 <analisarFicheiro@@Base+0x90>
   108a4:	bl	106c0 <fopen@plt>
   108a8:	mov	r4, #0
   108ac:	mov	r6, r4
   108b0:	ldr	r8, [pc, #108]	; 10924 <analisarFicheiro@@Base+0x94>
   108b4:	mov	r7, r0
   108b8:	mov	r0, #104	; 0x68
   108bc:	bl	106e4 <malloc@plt>
   108c0:	mov	r5, r0
   108c4:	b	108d4 <analisarFicheiro@@Base+0x44>
   108c8:	bl	106cc <realloc@plt>
   108cc:	add	r6, r6, #1
   108d0:	mov	r5, r0
   108d4:	add	r2, r5, r4
   108d8:	add	r3, r2, #100	; 0x64
   108dc:	str	r3, [sp]
   108e0:	mov	r1, r8
   108e4:	add	r3, r2, #50	; 0x32
   108e8:	mov	r0, r7
   108ec:	bl	106b4 <__isoc99_fscanf@plt>
   108f0:	add	r4, r4, #104	; 0x68
   108f4:	mov	r1, r4
   108f8:	cmp	r0, #3
   108fc:	mov	r0, r5
   10900:	beq	108c8 <analisarFicheiro@@Base+0x38>
   10904:	str	r6, [r9]
   10908:	mov	r0, r7
   1090c:	bl	10714 <fclose@plt>
   10910:	mov	r0, r5
   10914:	add	sp, sp, #12
   10918:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1091c:	andeq	r0, r1, ip, asr #20
   10920:	andeq	r0, r1, r0, asr sl
   10924:	andeq	r0, r1, r0, ror #20

00010928 <gerarRelatorio@@Base>:
   10928:	push	{r4, r5, r6, r7, r8, r9, lr}
   1092c:	sub	sp, sp, #12
   10930:	ldr	r1, [pc, #152]	; 109d0 <gerarRelatorio@@Base+0xa8>
   10934:	mov	r8, r2
   10938:	bl	106c0 <fopen@plt>
   1093c:	mov	r2, #10
   10940:	mov	r1, #1
   10944:	mov	r3, r0
   10948:	mov	r7, r0
   1094c:	ldr	r0, [pc, #128]	; 109d4 <gerarRelatorio@@Base+0xac>
   10950:	bl	106d8 <fwrite@plt>
   10954:	mov	r0, #104	; 0x68
   10958:	bl	106e4 <malloc@plt>
   1095c:	cmp	r8, #0
   10960:	ble	109c0 <gerarRelatorio@@Base+0x98>
   10964:	ldr	r9, [pc, #108]	; 109d8 <gerarRelatorio@@Base+0xb0>
   10968:	mov	r6, r0
   1096c:	mov	r5, #104	; 0x68
   10970:	mov	r4, #0
   10974:	mov	r1, r5
   10978:	mov	r0, r6
   1097c:	bl	106cc <realloc@plt>
   10980:	sub	r2, r5, #104	; 0x68
   10984:	add	r5, r5, #104	; 0x68
   10988:	add	r2, r0, r2
   1098c:	mov	r6, r0
   10990:	ldr	r1, [r2, #100]	; 0x64
   10994:	add	r0, r4, #1
   10998:	add	r3, r2, #50	; 0x32
   1099c:	str	r1, [sp, #4]
   109a0:	str	r2, [sp]
   109a4:	mov	r1, r9
   109a8:	mov	r2, r4
   109ac:	mov	r4, r0
   109b0:	mov	r0, r7
   109b4:	bl	10708 <fprintf@plt>
   109b8:	cmp	r8, r4
   109bc:	bne	10974 <gerarRelatorio@@Base+0x4c>
   109c0:	mov	r0, r7
   109c4:	add	sp, sp, #12
   109c8:	pop	{r4, r5, r6, r7, r8, r9, lr}
   109cc:	b	10714 <fclose@plt>
   109d0:	andeq	r0, r1, ip, ror #20
   109d4:	andeq	r0, r1, r0, ror sl
   109d8:	andeq	r0, r1, ip, ror sl

000109dc <__libc_csu_init@@Base>:
   109dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109e0:	mov	r7, r0
   109e4:	ldr	r6, [pc, #72]	; 10a34 <__libc_csu_init@@Base+0x58>
   109e8:	ldr	r5, [pc, #72]	; 10a38 <__libc_csu_init@@Base+0x5c>
   109ec:	add	r6, pc, r6
   109f0:	add	r5, pc, r5
   109f4:	sub	r6, r6, r5
   109f8:	mov	r8, r1
   109fc:	mov	r9, r2
   10a00:	bl	10694 <__isoc99_fscanf@plt-0x20>
   10a04:	asrs	r6, r6, #2
   10a08:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a0c:	mov	r4, #0
   10a10:	add	r4, r4, #1
   10a14:	ldr	r3, [r5], #4
   10a18:	mov	r2, r9
   10a1c:	mov	r1, r8
   10a20:	mov	r0, r7
   10a24:	blx	r3
   10a28:	cmp	r6, r4
   10a2c:	bne	10a10 <__libc_csu_init@@Base+0x34>
   10a30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a34:	andeq	r0, r1, ip, lsl r5
   10a38:	andeq	r0, r1, r4, lsl r5

00010a3c <__libc_csu_fini@@Base>:
   10a3c:	bx	lr

Disassembly of section .fini:

00010a40 <.fini>:
   10a40:	push	{r3, lr}
   10a44:	pop	{r3, pc}
