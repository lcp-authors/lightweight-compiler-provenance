
../repos/charybdis/modules/.libs/m_list.so:     file format elf32-littlearm


Disassembly of section .init:

00000940 <_init>:
 940:	push	{r3, lr}
 944:	bl	ac8 <call_weak_fn>
 948:	pop	{r3, pc}

Disassembly of section .plt:

0000094c <.plt>:
 94c:	push	{lr}		; (str lr, [sp, #-4]!)
 950:	ldr	lr, [pc, #4]	; 95c <.plt+0x10>
 954:	add	lr, pc, lr
 958:	ldr	pc, [lr, #8]!
 95c:	.word	0x000126a4

00000960 <calloc@plt>:
 960:	add	ip, pc, #0, 12
 964:	add	ip, ip, #73728	; 0x12000
 968:	ldr	pc, [ip, #1700]!	; 0x6a4

0000096c <delete_isupport@plt>:
 96c:	add	ip, pc, #0, 12
 970:	add	ip, ip, #73728	; 0x12000
 974:	ldr	pc, [ip, #1692]!	; 0x69c

00000978 <rb_current_time@plt>:
 978:	add	ip, pc, #0, 12
 97c:	add	ip, ip, #73728	; 0x12000
 980:	ldr	pc, [ip, #1684]!	; 0x694

00000984 <rb_event_add@plt>:
 984:	add	ip, pc, #0, 12
 988:	add	ip, ip, #73728	; 0x12000
 98c:	ldr	pc, [ip, #1676]!	; 0x68c

00000990 <__cxa_finalize@plt>:
 990:	add	ip, pc, #0, 12
 994:	add	ip, ip, #73728	; 0x12000
 998:	ldr	pc, [ip, #1668]!	; 0x684

0000099c <sendto_one@plt>:
 99c:	add	ip, pc, #0, 12
 9a0:	add	ip, ip, #73728	; 0x12000
 9a4:	ldr	pc, [ip, #1660]!	; 0x67c

000009a8 <rb_event_delete@plt>:
 9a8:	add	ip, pc, #0, 12
 9ac:	add	ip, ip, #73728	; 0x12000
 9b0:	ldr	pc, [ip, #1652]!	; 0x674

000009b4 <free@plt>:
 9b4:	add	ip, pc, #0, 12
 9b8:	add	ip, ip, #73728	; 0x12000
 9bc:	ldr	pc, [ip, #1644]!	; 0x66c

000009c0 <rb_radixtree_foreach_start_from@plt>:
 9c0:	add	ip, pc, #0, 12
 9c4:	add	ip, ip, #73728	; 0x12000
 9c8:	ldr	pc, [ip, #1636]!	; 0x664

000009cc <rb_outofmemory@plt>:
 9cc:	add	ip, pc, #0, 12
 9d0:	add	ip, ip, #73728	; 0x12000
 9d4:	ldr	pc, [ip, #1628]!	; 0x65c

000009d8 <rb_radixtree_foreach_next@plt>:
 9d8:	add	ip, pc, #0, 12
 9dc:	add	ip, ip, #73728	; 0x12000
 9e0:	ldr	pc, [ip, #1620]!	; 0x654

000009e4 <find_channel@plt>:
 9e4:	add	ip, pc, #0, 12
 9e8:	add	ip, ip, #73728	; 0x12000
 9ec:	ldr	pc, [ip, #1612]!	; 0x64c

000009f0 <rb_free_rb_dlink_node@plt>:
 9f0:	add	ip, pc, #0, 12
 9f4:	add	ip, ip, #73728	; 0x12000
 9f8:	ldr	pc, [ip, #1604]!	; 0x644

000009fc <strcpy@plt>:
 9fc:	add	ip, pc, #0, 12
 a00:	add	ip, ip, #73728	; 0x12000
 a04:	ldr	pc, [ip, #1596]!	; 0x63c

00000a08 <find_channel_membership@plt>:
 a08:	add	ip, pc, #0, 12
 a0c:	add	ip, ip, #73728	; 0x12000
 a10:	ldr	pc, [ip, #1588]!	; 0x634

00000a14 <malloc@plt>:
 a14:	add	ip, pc, #0, 12
 a18:	add	ip, ip, #73728	; 0x12000
 a1c:	ldr	pc, [ip, #1580]!	; 0x62c

00000a20 <__gmon_start__@plt>:
 a20:	add	ip, pc, #0, 12
 a24:	add	ip, ip, #73728	; 0x12000
 a28:	ldr	pc, [ip, #1572]!	; 0x624

00000a2c <rb_make_rb_dlink_node@plt>:
 a2c:	add	ip, pc, #0, 12
 a30:	add	ip, ip, #73728	; 0x12000
 a34:	ldr	pc, [ip, #1564]!	; 0x61c

00000a38 <get_sendq@plt>:
 a38:	add	ip, pc, #0, 12
 a3c:	add	ip, ip, #73728	; 0x12000
 a40:	ldr	pc, [ip, #1556]!	; 0x614

00000a44 <sendto_one_numeric@plt>:
 a44:	add	ip, pc, #0, 12
 a48:	add	ip, ip, #73728	; 0x12000
 a4c:	ldr	pc, [ip, #1548]!	; 0x60c

00000a50 <strlen@plt>:
 a50:	add	ip, pc, #0, 12
 a54:	add	ip, ip, #73728	; 0x12000
 a58:	ldr	pc, [ip, #1540]!	; 0x604

00000a5c <strchr@plt>:
 a5c:	add	ip, pc, #0, 12
 a60:	add	ip, ip, #73728	; 0x12000
 a64:	ldr	pc, [ip, #1532]!	; 0x5fc

00000a68 <report_operspy@plt>:
 a68:	add	ip, pc, #0, 12
 a6c:	add	ip, ip, #73728	; 0x12000
 a70:	ldr	pc, [ip, #1524]!	; 0x5f4

00000a74 <rb_radixtree_foreach_cur@plt>:
 a74:	add	ip, pc, #0, 12
 a78:	add	ip, ip, #73728	; 0x12000
 a7c:	ldr	pc, [ip, #1516]!	; 0x5ec

00000a80 <sendto_one_notice@plt>:
 a80:	add	ip, pc, #0, 12
 a84:	add	ip, ip, #73728	; 0x12000
 a88:	ldr	pc, [ip, #1508]!	; 0x5e4

00000a8c <atoi@plt>:
 a8c:	add	ip, pc, #0, 12
 a90:	add	ip, ip, #73728	; 0x12000
 a94:	ldr	pc, [ip, #1500]!	; 0x5dc

00000a98 <add_isupport@plt>:
 a98:	add	ip, pc, #0, 12
 a9c:	add	ip, ip, #73728	; 0x12000
 aa0:	ldr	pc, [ip, #1492]!	; 0x5d4

00000aa4 <rb_strlcpy@plt>:
 aa4:	add	ip, pc, #0, 12
 aa8:	add	ip, ip, #73728	; 0x12000
 aac:	ldr	pc, [ip, #1484]!	; 0x5cc

00000ab0 <privilegeset_in_set@plt>:
 ab0:	add	ip, pc, #0, 12
 ab4:	add	ip, ip, #73728	; 0x12000
 ab8:	ldr	pc, [ip, #1476]!	; 0x5c4

00000abc <__assert_fail@plt>:
 abc:	add	ip, pc, #0, 12
 ac0:	add	ip, ip, #73728	; 0x12000
 ac4:	ldr	pc, [ip, #1468]!	; 0x5bc

Disassembly of section .text:

00000ac8 <call_weak_fn>:
     ac8:	ldr	r3, [pc, #20]	; ae4 <call_weak_fn+0x1c>
     acc:	ldr	r2, [pc, #20]	; ae8 <call_weak_fn+0x20>
     ad0:	add	r3, pc, r3
     ad4:	ldr	r2, [r3, r2]
     ad8:	cmp	r2, #0
     adc:	bxeq	lr
     ae0:	b	a20 <__gmon_start__@plt>
     ae4:	.word	0x00012528
     ae8:	.word	0x0000008c

00000aec <deregister_tm_clones>:
     aec:	ldr	r3, [pc, #52]	; b28 <deregister_tm_clones+0x3c>
     af0:	ldr	r0, [pc, #52]	; b2c <deregister_tm_clones+0x40>
     af4:	add	r3, pc, r3
     af8:	add	r0, pc, r0
     afc:	add	r3, r3, #3
     b00:	sub	r3, r3, r0
     b04:	cmp	r3, #6
     b08:	ldr	r3, [pc, #32]	; b30 <deregister_tm_clones+0x44>
     b0c:	add	r3, pc, r3
     b10:	bxls	lr
     b14:	ldr	r2, [pc, #24]	; b34 <deregister_tm_clones+0x48>
     b18:	ldr	r3, [r3, r2]
     b1c:	cmp	r3, #0
     b20:	bxeq	lr
     b24:	bx	r3
     b28:	.word	0x00012644
     b2c:	.word	0x00012640
     b30:	.word	0x000124ec
     b34:	.word	0x00000088

00000b38 <register_tm_clones>:
     b38:	ldr	r1, [pc, #56]	; b78 <register_tm_clones+0x40>
     b3c:	ldr	r0, [pc, #56]	; b7c <register_tm_clones+0x44>
     b40:	add	r1, pc, r1
     b44:	add	r0, pc, r0
     b48:	sub	r1, r1, r0
     b4c:	ldr	r3, [pc, #44]	; b80 <register_tm_clones+0x48>
     b50:	asr	r1, r1, #2
     b54:	add	r3, pc, r3
     b58:	add	r1, r1, r1, lsr #31
     b5c:	asrs	r1, r1, #1
     b60:	bxeq	lr
     b64:	ldr	r2, [pc, #24]	; b84 <register_tm_clones+0x4c>
     b68:	ldr	r3, [r3, r2]
     b6c:	cmp	r3, #0
     b70:	bxeq	lr
     b74:	bx	r3
     b78:	.word	0x000125f8
     b7c:	.word	0x000125f4
     b80:	.word	0x000124a4
     b84:	.word	0x000000a4

00000b88 <__do_global_dtors_aux>:
     b88:	ldr	r3, [pc, #76]	; bdc <__do_global_dtors_aux+0x54>
     b8c:	ldr	r2, [pc, #76]	; be0 <__do_global_dtors_aux+0x58>
     b90:	add	r3, pc, r3
     b94:	add	r2, pc, r2
     b98:	ldrb	r3, [r3]
     b9c:	cmp	r3, #0
     ba0:	bxne	lr
     ba4:	ldr	r3, [pc, #56]	; be4 <__do_global_dtors_aux+0x5c>
     ba8:	push	{r4, lr}
     bac:	ldr	r3, [r2, r3]
     bb0:	cmp	r3, #0
     bb4:	beq	bc4 <__do_global_dtors_aux+0x3c>
     bb8:	ldr	r3, [pc, #40]	; be8 <__do_global_dtors_aux+0x60>
     bbc:	ldr	r0, [pc, r3]
     bc0:	bl	990 <__cxa_finalize@plt>
     bc4:	bl	aec <deregister_tm_clones>
     bc8:	ldr	r3, [pc, #28]	; bec <__do_global_dtors_aux+0x64>
     bcc:	mov	r2, #1
     bd0:	add	r3, pc, r3
     bd4:	strb	r2, [r3]
     bd8:	pop	{r4, pc}
     bdc:	.word	0x000125a8
     be0:	.word	0x00012464
     be4:	.word	0x00000084
     be8:	.word	0x000124ec
     bec:	.word	0x00012568

00000bf0 <frame_dummy>:
     bf0:	ldr	r0, [pc, #56]	; c30 <frame_dummy+0x40>
     bf4:	ldr	r3, [pc, #56]	; c34 <frame_dummy+0x44>
     bf8:	add	r0, pc, r0
     bfc:	ldr	r2, [r0]
     c00:	add	r3, pc, r3
     c04:	cmp	r2, #0
     c08:	bne	c10 <frame_dummy+0x20>
     c0c:	b	b38 <register_tm_clones>
     c10:	ldr	r2, [pc, #32]	; c38 <frame_dummy+0x48>
     c14:	ldr	r3, [r3, r2]
     c18:	cmp	r3, #0
     c1c:	beq	c0c <frame_dummy+0x1c>
     c20:	push	{r4, lr}
     c24:	blx	r3
     c28:	pop	{r4, lr}
     c2c:	b	b38 <register_tm_clones>
     c30:	.word	0x000122fc
     c34:	.word	0x000123f8
     c38:	.word	0x00000098

00000c3c <rb_dlinkAdd>:
     c3c:	push	{fp, lr}
     c40:	add	fp, sp, #4
     c44:	sub	sp, sp, #16
     c48:	str	r0, [fp, #-8]
     c4c:	str	r1, [fp, #-12]
     c50:	str	r2, [fp, #-16]
     c54:	ldr	r3, [fp, #-8]
     c58:	cmp	r3, #0
     c5c:	bne	c80 <rb_dlinkAdd+0x44>
     c60:	ldr	r3, [pc, #260]	; d6c <rb_dlinkAdd+0x130>
     c64:	add	r3, pc, r3
     c68:	mov	r2, #143	; 0x8f
     c6c:	ldr	r1, [pc, #252]	; d70 <rb_dlinkAdd+0x134>
     c70:	add	r1, pc, r1
     c74:	ldr	r0, [pc, #248]	; d74 <rb_dlinkAdd+0x138>
     c78:	add	r0, pc, r0
     c7c:	bl	abc <__assert_fail@plt>
     c80:	ldr	r3, [fp, #-12]
     c84:	cmp	r3, #0
     c88:	bne	cac <rb_dlinkAdd+0x70>
     c8c:	ldr	r3, [pc, #228]	; d78 <rb_dlinkAdd+0x13c>
     c90:	add	r3, pc, r3
     c94:	mov	r2, #144	; 0x90
     c98:	ldr	r1, [pc, #220]	; d7c <rb_dlinkAdd+0x140>
     c9c:	add	r1, pc, r1
     ca0:	ldr	r0, [pc, #216]	; d80 <rb_dlinkAdd+0x144>
     ca4:	add	r0, pc, r0
     ca8:	bl	abc <__assert_fail@plt>
     cac:	ldr	r3, [fp, #-16]
     cb0:	cmp	r3, #0
     cb4:	bne	cd8 <rb_dlinkAdd+0x9c>
     cb8:	ldr	r3, [pc, #196]	; d84 <rb_dlinkAdd+0x148>
     cbc:	add	r3, pc, r3
     cc0:	mov	r2, #145	; 0x91
     cc4:	ldr	r1, [pc, #188]	; d88 <rb_dlinkAdd+0x14c>
     cc8:	add	r1, pc, r1
     ccc:	ldr	r0, [pc, #184]	; d8c <rb_dlinkAdd+0x150>
     cd0:	add	r0, pc, r0
     cd4:	bl	abc <__assert_fail@plt>
     cd8:	ldr	r3, [fp, #-12]
     cdc:	ldr	r2, [fp, #-8]
     ce0:	str	r2, [r3]
     ce4:	ldr	r3, [fp, #-12]
     ce8:	mov	r2, #0
     cec:	str	r2, [r3, #4]
     cf0:	ldr	r3, [fp, #-16]
     cf4:	ldr	r2, [r3]
     cf8:	ldr	r3, [fp, #-12]
     cfc:	str	r2, [r3, #8]
     d00:	ldr	r3, [fp, #-16]
     d04:	ldr	r3, [r3]
     d08:	cmp	r3, #0
     d0c:	beq	d24 <rb_dlinkAdd+0xe8>
     d10:	ldr	r3, [fp, #-16]
     d14:	ldr	r3, [r3]
     d18:	ldr	r2, [fp, #-12]
     d1c:	str	r2, [r3, #4]
     d20:	b	d40 <rb_dlinkAdd+0x104>
     d24:	ldr	r3, [fp, #-16]
     d28:	ldr	r3, [r3, #4]
     d2c:	cmp	r3, #0
     d30:	bne	d40 <rb_dlinkAdd+0x104>
     d34:	ldr	r3, [fp, #-16]
     d38:	ldr	r2, [fp, #-12]
     d3c:	str	r2, [r3, #4]
     d40:	ldr	r3, [fp, #-16]
     d44:	ldr	r2, [fp, #-12]
     d48:	str	r2, [r3]
     d4c:	ldr	r3, [fp, #-16]
     d50:	ldr	r3, [r3, #8]
     d54:	add	r2, r3, #1
     d58:	ldr	r3, [fp, #-16]
     d5c:	str	r2, [r3, #8]
     d60:	nop			; (mov r0, r0)
     d64:	sub	sp, fp, #4
     d68:	pop	{fp, pc}
     d6c:	.word	0x00001a14
     d70:	.word	0x00001834
     d74:	.word	0x00001848
     d78:	.word	0x000019e8
     d7c:	.word	0x00001808
     d80:	.word	0x0000182c
     d84:	.word	0x000019bc
     d88:	.word	0x000017dc
     d8c:	.word	0x0000180c

00000d90 <rb_dlinkFindDelete>:
     d90:	push	{fp, lr}
     d94:	add	fp, sp, #4
     d98:	sub	sp, sp, #16
     d9c:	str	r0, [fp, #-16]
     da0:	str	r1, [fp, #-20]	; 0xffffffec
     da4:	ldr	r3, [fp, #-20]	; 0xffffffec
     da8:	cmp	r3, #0
     dac:	bne	dd0 <rb_dlinkFindDelete+0x40>
     db0:	ldr	r3, [pc, #316]	; ef4 <rb_dlinkFindDelete+0x164>
     db4:	add	r3, pc, r3
     db8:	ldr	r2, [pc, #312]	; ef8 <rb_dlinkFindDelete+0x168>
     dbc:	ldr	r1, [pc, #312]	; efc <rb_dlinkFindDelete+0x16c>
     dc0:	add	r1, pc, r1
     dc4:	ldr	r0, [pc, #308]	; f00 <rb_dlinkFindDelete+0x170>
     dc8:	add	r0, pc, r0
     dcc:	bl	abc <__assert_fail@plt>
     dd0:	ldr	r3, [fp, #-16]
     dd4:	cmp	r3, #0
     dd8:	bne	dfc <rb_dlinkFindDelete+0x6c>
     ddc:	ldr	r3, [pc, #288]	; f04 <rb_dlinkFindDelete+0x174>
     de0:	add	r3, pc, r3
     de4:	ldr	r2, [pc, #284]	; f08 <rb_dlinkFindDelete+0x178>
     de8:	ldr	r1, [pc, #284]	; f0c <rb_dlinkFindDelete+0x17c>
     dec:	add	r1, pc, r1
     df0:	ldr	r0, [pc, #280]	; f10 <rb_dlinkFindDelete+0x180>
     df4:	add	r0, pc, r0
     df8:	bl	abc <__assert_fail@plt>
     dfc:	ldr	r3, [fp, #-20]	; 0xffffffec
     e00:	ldr	r3, [r3]
     e04:	str	r3, [fp, #-8]
     e08:	b	ed8 <rb_dlinkFindDelete+0x148>
     e0c:	ldr	r3, [fp, #-8]
     e10:	ldr	r2, [r3]
     e14:	ldr	r3, [fp, #-16]
     e18:	cmp	r2, r3
     e1c:	beq	e30 <rb_dlinkFindDelete+0xa0>
     e20:	ldr	r3, [fp, #-8]
     e24:	ldr	r3, [r3, #8]
     e28:	str	r3, [fp, #-8]
     e2c:	b	ed8 <rb_dlinkFindDelete+0x148>
     e30:	ldr	r3, [fp, #-8]
     e34:	ldr	r3, [r3, #8]
     e38:	cmp	r3, #0
     e3c:	beq	e58 <rb_dlinkFindDelete+0xc8>
     e40:	ldr	r3, [fp, #-8]
     e44:	ldr	r3, [r3, #8]
     e48:	ldr	r2, [fp, #-8]
     e4c:	ldr	r2, [r2, #4]
     e50:	str	r2, [r3, #4]
     e54:	b	e68 <rb_dlinkFindDelete+0xd8>
     e58:	ldr	r3, [fp, #-8]
     e5c:	ldr	r2, [r3, #4]
     e60:	ldr	r3, [fp, #-20]	; 0xffffffec
     e64:	str	r2, [r3, #4]
     e68:	ldr	r3, [fp, #-8]
     e6c:	ldr	r3, [r3, #4]
     e70:	cmp	r3, #0
     e74:	beq	e90 <rb_dlinkFindDelete+0x100>
     e78:	ldr	r3, [fp, #-8]
     e7c:	ldr	r3, [r3, #4]
     e80:	ldr	r2, [fp, #-8]
     e84:	ldr	r2, [r2, #8]
     e88:	str	r2, [r3, #8]
     e8c:	b	ea0 <rb_dlinkFindDelete+0x110>
     e90:	ldr	r3, [fp, #-8]
     e94:	ldr	r2, [r3, #8]
     e98:	ldr	r3, [fp, #-20]	; 0xffffffec
     e9c:	str	r2, [r3]
     ea0:	ldr	r3, [fp, #-8]
     ea4:	mov	r2, #0
     ea8:	str	r2, [r3, #4]
     eac:	ldr	r3, [fp, #-8]
     eb0:	ldr	r2, [r3, #4]
     eb4:	ldr	r3, [fp, #-8]
     eb8:	str	r2, [r3, #8]
     ebc:	ldr	r3, [fp, #-20]	; 0xffffffec
     ec0:	ldr	r3, [r3, #8]
     ec4:	sub	r2, r3, #1
     ec8:	ldr	r3, [fp, #-20]	; 0xffffffec
     ecc:	str	r2, [r3, #8]
     ed0:	ldr	r3, [fp, #-8]
     ed4:	b	ee8 <rb_dlinkFindDelete+0x158>
     ed8:	ldr	r3, [fp, #-8]
     edc:	cmp	r3, #0
     ee0:	bne	e0c <rb_dlinkFindDelete+0x7c>
     ee4:	mov	r3, #0
     ee8:	mov	r0, r3
     eec:	sub	sp, fp, #4
     ef0:	pop	{fp, pc}
     ef4:	.word	0x000018e4
     ef8:	.word	0x00000102
     efc:	.word	0x000016e4
     f00:	.word	0x00001714
     f04:	.word	0x000018b8
     f08:	.word	0x00000103
     f0c:	.word	0x000016b8
     f10:	.word	0x000016cc

00000f14 <rb_dlinkFindDestroy>:
     f14:	push	{fp, lr}
     f18:	add	fp, sp, #4
     f1c:	sub	sp, sp, #16
     f20:	str	r0, [fp, #-16]
     f24:	str	r1, [fp, #-20]	; 0xffffffec
     f28:	ldr	r3, [fp, #-20]	; 0xffffffec
     f2c:	cmp	r3, #0
     f30:	bne	f54 <rb_dlinkFindDestroy+0x40>
     f34:	ldr	r3, [pc, #128]	; fbc <rb_dlinkFindDestroy+0xa8>
     f38:	add	r3, pc, r3
     f3c:	ldr	r2, [pc, #124]	; fc0 <rb_dlinkFindDestroy+0xac>
     f40:	ldr	r1, [pc, #124]	; fc4 <rb_dlinkFindDestroy+0xb0>
     f44:	add	r1, pc, r1
     f48:	ldr	r0, [pc, #120]	; fc8 <rb_dlinkFindDestroy+0xb4>
     f4c:	add	r0, pc, r0
     f50:	bl	abc <__assert_fail@plt>
     f54:	ldr	r3, [fp, #-16]
     f58:	cmp	r3, #0
     f5c:	bne	f80 <rb_dlinkFindDestroy+0x6c>
     f60:	ldr	r3, [pc, #100]	; fcc <rb_dlinkFindDestroy+0xb8>
     f64:	add	r3, pc, r3
     f68:	mov	r2, #288	; 0x120
     f6c:	ldr	r1, [pc, #92]	; fd0 <rb_dlinkFindDestroy+0xbc>
     f70:	add	r1, pc, r1
     f74:	ldr	r0, [pc, #88]	; fd4 <rb_dlinkFindDestroy+0xc0>
     f78:	add	r0, pc, r0
     f7c:	bl	abc <__assert_fail@plt>
     f80:	ldr	r1, [fp, #-20]	; 0xffffffec
     f84:	ldr	r0, [fp, #-16]
     f88:	bl	d90 <rb_dlinkFindDelete>
     f8c:	str	r0, [fp, #-8]
     f90:	ldr	r3, [fp, #-8]
     f94:	cmp	r3, #0
     f98:	beq	fac <rb_dlinkFindDestroy+0x98>
     f9c:	ldr	r0, [fp, #-8]
     fa0:	bl	9f0 <rb_free_rb_dlink_node@plt>
     fa4:	mov	r3, #1
     fa8:	b	fb0 <rb_dlinkFindDestroy+0x9c>
     fac:	mov	r3, #0
     fb0:	mov	r0, r3
     fb4:	sub	sp, fp, #4
     fb8:	pop	{fp, pc}
     fbc:	.word	0x0000174c
     fc0:	.word	0x0000011f
     fc4:	.word	0x00001560
     fc8:	.word	0x00001590
     fcc:	.word	0x00001720
     fd0:	.word	0x00001534
     fd4:	.word	0x00001548

00000fd8 <rb_malloc>:
     fd8:	push	{fp, lr}
     fdc:	add	fp, sp, #4
     fe0:	sub	sp, sp, #16
     fe4:	str	r0, [fp, #-16]
     fe8:	ldr	r1, [fp, #-16]
     fec:	mov	r0, #1
     ff0:	bl	960 <calloc@plt>
     ff4:	mov	r3, r0
     ff8:	str	r3, [fp, #-8]
     ffc:	ldr	r3, [fp, #-8]
    1000:	cmp	r3, #0
    1004:	moveq	r3, #1
    1008:	movne	r3, #0
    100c:	uxtb	r3, r3
    1010:	cmp	r3, #0
    1014:	beq	101c <rb_malloc+0x44>
    1018:	bl	9cc <rb_outofmemory@plt>
    101c:	ldr	r3, [fp, #-8]
    1020:	mov	r0, r3
    1024:	sub	sp, fp, #4
    1028:	pop	{fp, pc}

0000102c <rb_strdup>:
    102c:	push	{fp, lr}
    1030:	add	fp, sp, #4
    1034:	sub	sp, sp, #16
    1038:	str	r0, [fp, #-16]
    103c:	ldr	r0, [fp, #-16]
    1040:	bl	a50 <strlen@plt>
    1044:	mov	r3, r0
    1048:	add	r3, r3, #1
    104c:	mov	r0, r3
    1050:	bl	a14 <malloc@plt>
    1054:	mov	r3, r0
    1058:	str	r3, [fp, #-8]
    105c:	ldr	r3, [fp, #-8]
    1060:	cmp	r3, #0
    1064:	moveq	r3, #1
    1068:	movne	r3, #0
    106c:	uxtb	r3, r3
    1070:	cmp	r3, #0
    1074:	beq	107c <rb_strdup+0x50>
    1078:	bl	9cc <rb_outofmemory@plt>
    107c:	ldr	r1, [fp, #-16]
    1080:	ldr	r0, [fp, #-8]
    1084:	bl	9fc <strcpy@plt>
    1088:	ldr	r3, [fp, #-8]
    108c:	mov	r0, r3
    1090:	sub	sp, fp, #4
    1094:	pop	{fp, pc}

00001098 <rb_free>:
    1098:	push	{fp, lr}
    109c:	add	fp, sp, #4
    10a0:	sub	sp, sp, #8
    10a4:	str	r0, [fp, #-8]
    10a8:	ldr	r3, [fp, #-8]
    10ac:	cmp	r3, #0
    10b0:	movne	r3, #1
    10b4:	moveq	r3, #0
    10b8:	uxtb	r3, r3
    10bc:	cmp	r3, #0
    10c0:	beq	10cc <rb_free+0x34>
    10c4:	ldr	r0, [fp, #-8]
    10c8:	bl	9b4 <free@plt>
    10cc:	nop			; (mov r0, r0)
    10d0:	sub	sp, fp, #4
    10d4:	pop	{fp, pc}

000010d8 <strip_colour>:
    10d8:	push	{fp}		; (str fp, [sp, #-4]!)
    10dc:	add	fp, sp, #0
    10e0:	sub	sp, sp, #28
    10e4:	str	r0, [fp, #-24]	; 0xffffffe8
    10e8:	ldr	r3, [pc, #580]	; 1334 <strip_colour+0x25c>
    10ec:	add	r3, pc, r3
    10f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    10f4:	str	r2, [fp, #-8]
    10f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    10fc:	str	r2, [fp, #-12]
    1100:	mov	r2, #0
    1104:	str	r2, [fp, #-16]
    1108:	b	12e0 <strip_colour+0x208>
    110c:	ldr	r2, [fp, #-8]
    1110:	ldrb	r2, [r2]
    1114:	sub	r2, r2, #2
    1118:	cmp	r2, #30
    111c:	addls	pc, pc, r2, lsl #2
    1120:	b	12a4 <strip_colour+0x1cc>
    1124:	b	12c8 <strip_colour+0x1f0>
    1128:	b	11a0 <strip_colour+0xc8>
    112c:	b	12c8 <strip_colour+0x1f0>
    1130:	b	12a4 <strip_colour+0x1cc>
    1134:	b	12c8 <strip_colour+0x1f0>
    1138:	b	12c8 <strip_colour+0x1f0>
    113c:	b	12a4 <strip_colour+0x1cc>
    1140:	b	12a4 <strip_colour+0x1cc>
    1144:	b	12a4 <strip_colour+0x1cc>
    1148:	b	12a4 <strip_colour+0x1cc>
    114c:	b	12a4 <strip_colour+0x1cc>
    1150:	b	12a4 <strip_colour+0x1cc>
    1154:	b	12a4 <strip_colour+0x1cc>
    1158:	b	12c8 <strip_colour+0x1f0>
    115c:	b	12a4 <strip_colour+0x1cc>
    1160:	b	12a4 <strip_colour+0x1cc>
    1164:	b	12a4 <strip_colour+0x1cc>
    1168:	b	12a4 <strip_colour+0x1cc>
    116c:	b	12a4 <strip_colour+0x1cc>
    1170:	b	12a4 <strip_colour+0x1cc>
    1174:	b	12c8 <strip_colour+0x1f0>
    1178:	b	12c8 <strip_colour+0x1f0>
    117c:	b	12a4 <strip_colour+0x1cc>
    1180:	b	12a4 <strip_colour+0x1cc>
    1184:	b	12a4 <strip_colour+0x1cc>
    1188:	b	12c8 <strip_colour+0x1f0>
    118c:	b	12a4 <strip_colour+0x1cc>
    1190:	b	12c8 <strip_colour+0x1f0>
    1194:	b	12a4 <strip_colour+0x1cc>
    1198:	b	12c8 <strip_colour+0x1f0>
    119c:	b	1288 <strip_colour+0x1b0>
    11a0:	ldr	r2, [fp, #-8]
    11a4:	add	r2, r2, #1
    11a8:	ldrb	r2, [r2]
    11ac:	mov	r1, r2
    11b0:	ldr	r2, [pc, #384]	; 1338 <strip_colour+0x260>
    11b4:	ldr	r2, [r3, r2]
    11b8:	ldr	r2, [r2, r1, lsl #2]
    11bc:	and	r2, r2, #16
    11c0:	cmp	r2, #0
    11c4:	beq	12d0 <strip_colour+0x1f8>
    11c8:	ldr	r2, [fp, #-8]
    11cc:	add	r2, r2, #1
    11d0:	str	r2, [fp, #-8]
    11d4:	ldr	r2, [fp, #-8]
    11d8:	add	r2, r2, #1
    11dc:	ldrb	r2, [r2]
    11e0:	mov	r1, r2
    11e4:	ldr	r2, [pc, #332]	; 1338 <strip_colour+0x260>
    11e8:	ldr	r2, [r3, r2]
    11ec:	ldr	r2, [r2, r1, lsl #2]
    11f0:	and	r2, r2, #16
    11f4:	cmp	r2, #0
    11f8:	beq	1208 <strip_colour+0x130>
    11fc:	ldr	r2, [fp, #-8]
    1200:	add	r2, r2, #1
    1204:	str	r2, [fp, #-8]
    1208:	ldr	r2, [fp, #-8]
    120c:	add	r2, r2, #1
    1210:	ldrb	r2, [r2]
    1214:	cmp	r2, #44	; 0x2c
    1218:	bne	12d0 <strip_colour+0x1f8>
    121c:	ldr	r2, [fp, #-8]
    1220:	add	r2, r2, #2
    1224:	ldrb	r2, [r2]
    1228:	mov	r1, r2
    122c:	ldr	r2, [pc, #260]	; 1338 <strip_colour+0x260>
    1230:	ldr	r2, [r3, r2]
    1234:	ldr	r2, [r2, r1, lsl #2]
    1238:	and	r2, r2, #16
    123c:	cmp	r2, #0
    1240:	beq	12d0 <strip_colour+0x1f8>
    1244:	ldr	r2, [fp, #-8]
    1248:	add	r2, r2, #2
    124c:	str	r2, [fp, #-8]
    1250:	ldr	r2, [fp, #-8]
    1254:	add	r2, r2, #1
    1258:	ldrb	r2, [r2]
    125c:	mov	r1, r2
    1260:	ldr	r2, [pc, #208]	; 1338 <strip_colour+0x260>
    1264:	ldr	r2, [r3, r2]
    1268:	ldr	r2, [r2, r1, lsl #2]
    126c:	and	r2, r2, #16
    1270:	cmp	r2, #0
    1274:	beq	12d0 <strip_colour+0x1f8>
    1278:	ldr	r2, [fp, #-8]
    127c:	add	r2, r2, #1
    1280:	str	r2, [fp, #-8]
    1284:	b	12d0 <strip_colour+0x1f8>
    1288:	ldr	r2, [fp, #-12]
    128c:	add	r1, r2, #1
    1290:	str	r1, [fp, #-12]
    1294:	ldr	r1, [fp, #-8]
    1298:	ldrb	r1, [r1]
    129c:	strb	r1, [r2]
    12a0:	b	12d4 <strip_colour+0x1fc>
    12a4:	ldr	r2, [fp, #-12]
    12a8:	add	r1, r2, #1
    12ac:	str	r1, [fp, #-12]
    12b0:	ldr	r1, [fp, #-8]
    12b4:	ldrb	r1, [r1]
    12b8:	strb	r1, [r2]
    12bc:	ldr	r2, [fp, #-12]
    12c0:	str	r2, [fp, #-16]
    12c4:	b	12d4 <strip_colour+0x1fc>
    12c8:	nop			; (mov r0, r0)
    12cc:	b	12d4 <strip_colour+0x1fc>
    12d0:	nop			; (mov r0, r0)
    12d4:	ldr	r2, [fp, #-8]
    12d8:	add	r2, r2, #1
    12dc:	str	r2, [fp, #-8]
    12e0:	ldr	r2, [fp, #-8]
    12e4:	cmp	r2, #0
    12e8:	beq	12fc <strip_colour+0x224>
    12ec:	ldr	r2, [fp, #-8]
    12f0:	ldrb	r2, [r2]
    12f4:	cmp	r2, #0
    12f8:	bne	110c <strip_colour+0x34>
    12fc:	ldr	r3, [fp, #-12]
    1300:	mov	r2, #0
    1304:	strb	r2, [r3]
    1308:	ldr	r3, [fp, #-16]
    130c:	cmp	r3, #0
    1310:	beq	1320 <strip_colour+0x248>
    1314:	ldr	r3, [fp, #-16]
    1318:	mov	r2, #0
    131c:	strb	r2, [r3]
    1320:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1324:	mov	r0, r3
    1328:	add	sp, fp, #0
    132c:	pop	{fp}		; (ldr fp, [sp], #4)
    1330:	bx	lr
    1334:	.word	0x00011f0c
    1338:	.word	0x00000090

0000133c <_modinit>:
    133c:	push	{r4, r5, fp, lr}
    1340:	add	fp, sp, #12
    1344:	ldr	r4, [pc, #136]	; 13d4 <_modinit+0x98>
    1348:	add	r4, pc, r4
    134c:	mov	r3, #3
    1350:	mov	r2, #0
    1354:	ldr	r1, [pc, #124]	; 13d8 <_modinit+0x9c>
    1358:	add	r1, pc, r1
    135c:	ldr	r0, [pc, #120]	; 13dc <_modinit+0xa0>
    1360:	add	r0, pc, r0
    1364:	bl	984 <rb_event_add@plt>
    1368:	mov	r2, r0
    136c:	ldr	r3, [pc, #108]	; 13e0 <_modinit+0xa4>
    1370:	add	r3, pc, r3
    1374:	str	r2, [r3]
    1378:	ldr	r3, [pc, #100]	; 13e4 <_modinit+0xa8>
    137c:	add	r3, pc, r3
    1380:	mov	r2, r3
    1384:	ldr	r3, [pc, #92]	; 13e8 <_modinit+0xac>
    1388:	ldr	r3, [r4, r3]
    138c:	mov	r1, r3
    1390:	ldr	r3, [pc, #84]	; 13ec <_modinit+0xb0>
    1394:	add	r3, pc, r3
    1398:	mov	r0, r3
    139c:	bl	a98 <add_isupport@plt>
    13a0:	ldr	r3, [pc, #72]	; 13f0 <_modinit+0xb4>
    13a4:	add	r3, pc, r3
    13a8:	mov	r2, r3
    13ac:	ldr	r3, [pc, #52]	; 13e8 <_modinit+0xac>
    13b0:	ldr	r3, [r4, r3]
    13b4:	mov	r1, r3
    13b8:	ldr	r3, [pc, #52]	; 13f4 <_modinit+0xb8>
    13bc:	add	r3, pc, r3
    13c0:	mov	r0, r3
    13c4:	bl	a98 <add_isupport@plt>
    13c8:	mov	r3, #0
    13cc:	mov	r0, r3
    13d0:	pop	{r4, r5, fp, pc}
    13d4:	.word	0x00011cb0
    13d8:	.word	0x000010ac
    13dc:	.word	0x000011e4
    13e0:	.word	0x00011dd8
    13e4:	.word	0x000011e4
    13e8:	.word	0x0000009c
    13ec:	.word	0x000011d0
    13f0:	.word	0x000011cc
    13f4:	.word	0x000011b8

000013f8 <_moddeinit>:
    13f8:	push	{fp, lr}
    13fc:	add	fp, sp, #4
    1400:	ldr	r3, [pc, #52]	; 143c <_moddeinit+0x44>
    1404:	add	r3, pc, r3
    1408:	ldr	r3, [r3]
    140c:	mov	r0, r3
    1410:	bl	9a8 <rb_event_delete@plt>
    1414:	ldr	r3, [pc, #36]	; 1440 <_moddeinit+0x48>
    1418:	add	r3, pc, r3
    141c:	mov	r0, r3
    1420:	bl	96c <delete_isupport@plt>
    1424:	ldr	r3, [pc, #24]	; 1444 <_moddeinit+0x4c>
    1428:	add	r3, pc, r3
    142c:	mov	r0, r3
    1430:	bl	96c <delete_isupport@plt>
    1434:	nop			; (mov r0, r0)
    1438:	pop	{fp, pc}
    143c:	.word	0x00011d44
    1440:	.word	0x0000114c
    1444:	.word	0x0000114c

00001448 <safelist_check_cliexit>:
    1448:	push	{fp, lr}
    144c:	add	fp, sp, #4
    1450:	sub	sp, sp, #8
    1454:	str	r0, [fp, #-8]
    1458:	ldr	r3, [fp, #-8]
    145c:	ldr	r3, [r3, #4]
    1460:	ldrd	r2, [r3, #64]	; 0x40
    1464:	mov	r0, #8192	; 0x2000
    1468:	mov	r1, #0
    146c:	and	r2, r2, r0
    1470:	and	r3, r3, r1
    1474:	orrs	r3, r2, r3
    1478:	beq	14b8 <safelist_check_cliexit+0x70>
    147c:	ldr	r3, [fp, #-8]
    1480:	ldr	r3, [r3, #4]
    1484:	ldrh	r3, [r3, #80]	; 0x50
    1488:	cmp	r3, #64	; 0x40
    148c:	bne	14b8 <safelist_check_cliexit+0x70>
    1490:	ldr	r3, [fp, #-8]
    1494:	ldr	r3, [r3, #4]
    1498:	ldr	r3, [r3, #432]	; 0x1b0
    149c:	ldr	r3, [r3, #428]	; 0x1ac
    14a0:	cmp	r3, #0
    14a4:	beq	14b8 <safelist_check_cliexit+0x70>
    14a8:	ldr	r3, [fp, #-8]
    14ac:	ldr	r3, [r3, #4]
    14b0:	mov	r0, r3
    14b4:	bl	1e60 <safelist_client_release>
    14b8:	nop			; (mov r0, r0)
    14bc:	sub	sp, fp, #4
    14c0:	pop	{fp, pc}

000014c4 <m_list>:
    14c4:	push	{r4, r5, fp, lr}
    14c8:	add	fp, sp, #12
    14cc:	sub	sp, sp, #24
    14d0:	str	r0, [fp, #-16]
    14d4:	str	r1, [fp, #-20]	; 0xffffffec
    14d8:	str	r2, [fp, #-24]	; 0xffffffe8
    14dc:	str	r3, [fp, #-28]	; 0xffffffe4
    14e0:	ldr	r4, [pc, #316]	; 1624 <m_list+0x160>
    14e4:	add	r4, pc, r4
    14e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    14ec:	ldr	r3, [r3, #432]	; 0x1b0
    14f0:	ldr	r3, [r3, #428]	; 0x1ac
    14f4:	cmp	r3, #0
    14f8:	beq	151c <m_list+0x58>
    14fc:	ldr	r3, [pc, #292]	; 1628 <m_list+0x164>
    1500:	add	r3, pc, r3
    1504:	mov	r1, r3
    1508:	ldr	r0, [fp, #-24]	; 0xffffffe8
    150c:	bl	a80 <sendto_one_notice@plt>
    1510:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1514:	bl	1e60 <safelist_client_release>
    1518:	b	161c <m_list+0x158>
    151c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1520:	cmp	r3, #1
    1524:	ble	1568 <m_list+0xa4>
    1528:	ldr	r3, [fp, #4]
    152c:	add	r3, r3, #4
    1530:	ldr	r3, [r3]
    1534:	cmp	r3, #0
    1538:	beq	1568 <m_list+0xa4>
    153c:	ldr	r3, [fp, #4]
    1540:	add	r3, r3, #4
    1544:	ldr	r3, [r3]
    1548:	ldrb	r3, [r3]
    154c:	mov	r2, r3
    1550:	ldr	r3, [pc, #212]	; 162c <m_list+0x168>
    1554:	ldr	r3, [r4, r3]
    1558:	ldr	r3, [r3, r2, lsl #2]
    155c:	and	r3, r3, #512	; 0x200
    1560:	cmp	r3, #0
    1564:	bne	1600 <m_list+0x13c>
    1568:	ldr	r3, [pc, #192]	; 1630 <m_list+0x16c>
    156c:	ldr	r3, [r4, r3]
    1570:	ldr	r2, [r3, #184]	; 0xb8
    1574:	ldr	r3, [pc, #184]	; 1634 <m_list+0x170>
    1578:	add	r3, pc, r3
    157c:	ldr	r3, [r3]
    1580:	add	r5, r2, r3
    1584:	bl	978 <rb_current_time@plt>
    1588:	mov	r3, r0
    158c:	cmp	r5, r3
    1590:	ble	15ec <m_list+0x128>
    1594:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1598:	add	r3, r3, #88	; 0x58
    159c:	ldr	r2, [pc, #148]	; 1638 <m_list+0x174>
    15a0:	add	r2, pc, r2
    15a4:	str	r2, [sp]
    15a8:	ldr	r2, [pc, #140]	; 163c <m_list+0x178>
    15ac:	ldr	r2, [r4, r2]
    15b0:	add	r2, r2, #88	; 0x58
    15b4:	ldr	r1, [pc, #132]	; 1640 <m_list+0x17c>
    15b8:	add	r1, pc, r1
    15bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    15c0:	bl	99c <sendto_one@plt>
    15c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    15c8:	add	r3, r3, #88	; 0x58
    15cc:	ldr	r2, [pc, #104]	; 163c <m_list+0x178>
    15d0:	ldr	r2, [r4, r2]
    15d4:	add	r2, r2, #88	; 0x58
    15d8:	ldr	r1, [pc, #100]	; 1644 <m_list+0x180>
    15dc:	add	r1, pc, r1
    15e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    15e4:	bl	99c <sendto_one@plt>
    15e8:	b	161c <m_list+0x158>
    15ec:	bl	978 <rb_current_time@plt>
    15f0:	mov	r2, r0
    15f4:	ldr	r3, [pc, #76]	; 1648 <m_list+0x184>
    15f8:	add	r3, pc, r3
    15fc:	str	r2, [r3]
    1600:	ldr	r3, [fp, #4]
    1604:	str	r3, [sp]
    1608:	ldr	r3, [fp, #-28]	; 0xffffffe4
    160c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1610:	ldr	r1, [fp, #-20]	; 0xffffffec
    1614:	ldr	r0, [fp, #-16]
    1618:	bl	164c <mo_list>
    161c:	sub	sp, fp, #12
    1620:	pop	{r4, r5, fp, pc}
    1624:	.word	0x00011b14
    1628:	.word	0x0000107c
    162c:	.word	0x00000090
    1630:	.word	0x000000ac
    1634:	.word	0x00011bd4
    1638:	.word	0x00000f90
    163c:	.word	0x000000a8
    1640:	.word	0x00000fd4
    1644:	.word	0x0000101c
    1648:	.word	0x00011b54

0000164c <mo_list>:
    164c:	push	{r4, r5, fp, lr}
    1650:	add	fp, sp, #12
    1654:	sub	sp, sp, #40	; 0x28
    1658:	str	r0, [fp, #-40]	; 0xffffffd8
    165c:	str	r1, [fp, #-44]	; 0xffffffd4
    1660:	str	r2, [fp, #-48]	; 0xffffffd0
    1664:	str	r3, [fp, #-52]	; 0xffffffcc
    1668:	ldr	r4, [pc, #1536]	; 1c70 <mo_list+0x624>
    166c:	add	r4, pc, r4
    1670:	mov	r3, #0
    1674:	str	r3, [fp, #-20]	; 0xffffffec
    1678:	mov	r3, #0
    167c:	str	r3, [fp, #-28]	; 0xffffffe4
    1680:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1684:	ldr	r3, [r3, #432]	; 0x1b0
    1688:	ldr	r3, [r3, #428]	; 0x1ac
    168c:	cmp	r3, #0
    1690:	beq	16b4 <mo_list+0x68>
    1694:	ldr	r3, [pc, #1496]	; 1c74 <mo_list+0x628>
    1698:	add	r3, pc, r3
    169c:	mov	r1, r3
    16a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    16a4:	bl	a80 <sendto_one_notice@plt>
    16a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    16ac:	bl	1e60 <safelist_client_release>
    16b0:	b	1c68 <mo_list+0x61c>
    16b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16b8:	cmp	r3, #1
    16bc:	ble	1724 <mo_list+0xd8>
    16c0:	ldr	r3, [fp, #4]
    16c4:	add	r3, r3, #4
    16c8:	ldr	r3, [r3]
    16cc:	mov	r0, r3
    16d0:	bl	a50 <strlen@plt>
    16d4:	mov	r3, r0
    16d8:	add	r3, r3, #1
    16dc:	add	r3, r3, #7
    16e0:	add	r3, r3, #7
    16e4:	lsr	r3, r3, #3
    16e8:	lsl	r3, r3, #3
    16ec:	sub	sp, sp, r3
    16f0:	mov	r3, sp
    16f4:	add	r3, r3, #7
    16f8:	lsr	r3, r3, #3
    16fc:	lsl	r3, r3, #3
    1700:	str	r3, [fp, #-32]	; 0xffffffe0
    1704:	ldr	r3, [fp, #4]
    1708:	add	r3, r3, #4
    170c:	ldr	r3, [r3]
    1710:	mov	r1, r3
    1714:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1718:	bl	9fc <strcpy@plt>
    171c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1720:	str	r3, [fp, #-20]	; 0xffffffec
    1724:	ldr	r3, [fp, #-20]	; 0xffffffec
    1728:	cmp	r3, #0
    172c:	beq	17bc <mo_list+0x170>
    1730:	ldr	r3, [fp, #-20]	; 0xffffffec
    1734:	ldrb	r3, [r3]
    1738:	cmp	r3, #33	; 0x21
    173c:	bne	17bc <mo_list+0x170>
    1740:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1744:	ldr	r3, [r3, #24]
    1748:	cmp	r3, #0
    174c:	beq	17bc <mo_list+0x170>
    1750:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1754:	ldr	r3, [r3, #24]
    1758:	ldr	r3, [r3, #36]	; 0x24
    175c:	cmp	r3, #0
    1760:	beq	17bc <mo_list+0x170>
    1764:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1768:	ldr	r3, [r3, #24]
    176c:	ldr	r3, [r3, #36]	; 0x24
    1770:	ldr	r2, [pc, #1280]	; 1c78 <mo_list+0x62c>
    1774:	add	r2, pc, r2
    1778:	mov	r1, r2
    177c:	mov	r0, r3
    1780:	bl	ab0 <privilegeset_in_set@plt>
    1784:	mov	r3, r0
    1788:	cmp	r3, #0
    178c:	beq	17bc <mo_list+0x170>
    1790:	ldr	r3, [fp, #-20]	; 0xffffffec
    1794:	add	r3, r3, #1
    1798:	str	r3, [fp, #-20]	; 0xffffffec
    179c:	ldr	r2, [fp, #-20]	; 0xffffffec
    17a0:	ldr	r3, [pc, #1236]	; 1c7c <mo_list+0x630>
    17a4:	add	r3, pc, r3
    17a8:	mov	r1, r3
    17ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    17b0:	bl	a68 <report_operspy@plt>
    17b4:	mov	r3, #1
    17b8:	str	r3, [fp, #-28]	; 0xffffffe4
    17bc:	ldr	r3, [fp, #-20]	; 0xffffffec
    17c0:	cmp	r3, #0
    17c4:	beq	180c <mo_list+0x1c0>
    17c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    17cc:	cmp	r3, #0
    17d0:	beq	180c <mo_list+0x1c0>
    17d4:	ldr	r3, [fp, #-20]	; 0xffffffec
    17d8:	ldrb	r3, [r3]
    17dc:	mov	r2, r3
    17e0:	ldr	r3, [pc, #1176]	; 1c80 <mo_list+0x634>
    17e4:	ldr	r3, [r4, r3]
    17e8:	ldr	r3, [r3, r2, lsl #2]
    17ec:	and	r3, r3, #512	; 0x200
    17f0:	cmp	r3, #0
    17f4:	beq	180c <mo_list+0x1c0>
    17f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    17fc:	ldr	r1, [fp, #-20]	; 0xffffffec
    1800:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1804:	bl	1f3c <safelist_channel_named>
    1808:	b	1c68 <mo_list+0x61c>
    180c:	mov	r0, #32
    1810:	bl	fd8 <rb_malloc>
    1814:	str	r0, [fp, #-36]	; 0xffffffdc
    1818:	ldr	r3, [pc, #1124]	; 1c84 <mo_list+0x638>
    181c:	ldr	r3, [r4, r3]
    1820:	ldr	r3, [r3, #84]	; 0x54
    1824:	mov	r2, r3
    1828:	ldr	r3, [fp, #-36]	; 0xffffffdc
    182c:	str	r2, [r3, #4]
    1830:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1834:	mvn	r2, #-2147483648	; 0x80000000
    1838:	str	r2, [r3, #8]
    183c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1840:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1844:	str	r2, [r3, #28]
    1848:	ldr	r3, [fp, #-36]	; 0xffffffdc
    184c:	mov	r2, #0
    1850:	str	r2, [r3, #24]
    1854:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1858:	ldr	r2, [r3, #24]
    185c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1860:	str	r2, [r3, #16]
    1864:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1868:	ldr	r2, [r3, #16]
    186c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1870:	str	r2, [r3, #20]
    1874:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1878:	ldr	r2, [r3, #20]
    187c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1880:	str	r2, [r3, #12]
    1884:	ldr	r3, [fp, #-20]	; 0xffffffec
    1888:	cmp	r3, #0
    188c:	beq	1c5c <mo_list+0x610>
    1890:	ldr	r3, [fp, #-20]	; 0xffffffec
    1894:	cmp	r3, #0
    1898:	beq	1c5c <mo_list+0x610>
    189c:	ldr	r3, [fp, #-20]	; 0xffffffec
    18a0:	ldrb	r3, [r3]
    18a4:	cmp	r3, #0
    18a8:	beq	1c5c <mo_list+0x610>
    18ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    18b0:	mov	r2, #0
    18b4:	str	r2, [r3, #4]
    18b8:	mov	r3, #0
    18bc:	str	r3, [fp, #-24]	; 0xffffffe8
    18c0:	b	1c50 <mo_list+0x604>
    18c4:	mov	r1, #44	; 0x2c
    18c8:	ldr	r0, [fp, #-20]	; 0xffffffec
    18cc:	bl	a5c <strchr@plt>
    18d0:	str	r0, [fp, #-16]
    18d4:	ldr	r3, [fp, #-16]
    18d8:	cmp	r3, #0
    18dc:	beq	18f4 <mo_list+0x2a8>
    18e0:	ldr	r3, [fp, #-16]
    18e4:	add	r2, r3, #1
    18e8:	str	r2, [fp, #-16]
    18ec:	mov	r2, #0
    18f0:	strb	r2, [r3]
    18f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    18f8:	ldrb	r3, [r3]
    18fc:	cmp	r3, #60	; 0x3c
    1900:	bne	1984 <mo_list+0x338>
    1904:	ldr	r3, [fp, #-20]	; 0xffffffec
    1908:	add	r3, r3, #1
    190c:	str	r3, [fp, #-20]	; 0xffffffec
    1910:	ldr	r3, [fp, #-20]	; 0xffffffec
    1914:	ldrb	r3, [r3]
    1918:	mov	r2, r3
    191c:	ldr	r3, [pc, #860]	; 1c80 <mo_list+0x634>
    1920:	ldr	r3, [r4, r3]
    1924:	ldr	r3, [r3, r2, lsl #2]
    1928:	and	r3, r3, #16
    192c:	cmp	r3, #0
    1930:	beq	1c20 <mo_list+0x5d4>
    1934:	ldr	r0, [fp, #-20]	; 0xffffffec
    1938:	bl	a8c <atoi@plt>
    193c:	mov	r3, r0
    1940:	mov	r2, r3
    1944:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1948:	str	r2, [r3, #8]
    194c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1950:	ldr	r3, [r3, #8]
    1954:	cmp	r3, #0
    1958:	bne	196c <mo_list+0x320>
    195c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1960:	mvn	r2, #-2147483648	; 0x80000000
    1964:	str	r2, [r3, #8]
    1968:	b	1c20 <mo_list+0x5d4>
    196c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1970:	ldr	r3, [r3, #8]
    1974:	sub	r2, r3, #1
    1978:	ldr	r3, [fp, #-36]	; 0xffffffdc
    197c:	str	r2, [r3, #8]
    1980:	b	1c20 <mo_list+0x5d4>
    1984:	ldr	r3, [fp, #-20]	; 0xffffffec
    1988:	ldrb	r3, [r3]
    198c:	cmp	r3, #62	; 0x3e
    1990:	bne	19f4 <mo_list+0x3a8>
    1994:	ldr	r3, [fp, #-20]	; 0xffffffec
    1998:	add	r3, r3, #1
    199c:	str	r3, [fp, #-20]	; 0xffffffec
    19a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    19a4:	ldrb	r3, [r3]
    19a8:	mov	r2, r3
    19ac:	ldr	r3, [pc, #716]	; 1c80 <mo_list+0x634>
    19b0:	ldr	r3, [r4, r3]
    19b4:	ldr	r3, [r3, r2, lsl #2]
    19b8:	and	r3, r3, #16
    19bc:	cmp	r3, #0
    19c0:	beq	19e4 <mo_list+0x398>
    19c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    19c8:	bl	a8c <atoi@plt>
    19cc:	mov	r3, r0
    19d0:	add	r3, r3, #1
    19d4:	mov	r2, r3
    19d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    19dc:	str	r2, [r3, #4]
    19e0:	b	1c20 <mo_list+0x5d4>
    19e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    19e8:	mov	r2, #0
    19ec:	str	r2, [r3, #4]
    19f0:	b	1c20 <mo_list+0x5d4>
    19f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    19f8:	ldrb	r3, [r3]
    19fc:	cmp	r3, #67	; 0x43
    1a00:	beq	1a14 <mo_list+0x3c8>
    1a04:	ldr	r3, [fp, #-20]	; 0xffffffec
    1a08:	ldrb	r3, [r3]
    1a0c:	cmp	r3, #99	; 0x63
    1a10:	bne	1b08 <mo_list+0x4bc>
    1a14:	ldr	r3, [fp, #-20]	; 0xffffffec
    1a18:	add	r3, r3, #1
    1a1c:	str	r3, [fp, #-20]	; 0xffffffec
    1a20:	ldr	r3, [fp, #-20]	; 0xffffffec
    1a24:	ldrb	r3, [r3]
    1a28:	cmp	r3, #62	; 0x3e
    1a2c:	bne	1a94 <mo_list+0x448>
    1a30:	ldr	r3, [fp, #-20]	; 0xffffffec
    1a34:	add	r3, r3, #1
    1a38:	str	r3, [fp, #-20]	; 0xffffffec
    1a3c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1a40:	ldrb	r3, [r3]
    1a44:	mov	r2, r3
    1a48:	ldr	r3, [pc, #560]	; 1c80 <mo_list+0x634>
    1a4c:	ldr	r3, [r4, r3]
    1a50:	ldr	r3, [r3, r2, lsl #2]
    1a54:	and	r3, r3, #16
    1a58:	cmp	r3, #0
    1a5c:	beq	1c1c <mo_list+0x5d0>
    1a60:	bl	978 <rb_current_time@plt>
    1a64:	mov	r5, r0
    1a68:	ldr	r0, [fp, #-20]	; 0xffffffec
    1a6c:	bl	a8c <atoi@plt>
    1a70:	mov	r2, r0
    1a74:	mov	r3, r2
    1a78:	lsl	r2, r2, #4
    1a7c:	sub	r3, r3, r2
    1a80:	lsl	r3, r3, #2
    1a84:	add	r2, r5, r3
    1a88:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1a8c:	str	r2, [r3, #16]
    1a90:	b	1c1c <mo_list+0x5d0>
    1a94:	ldr	r3, [fp, #-20]	; 0xffffffec
    1a98:	ldrb	r3, [r3]
    1a9c:	cmp	r3, #60	; 0x3c
    1aa0:	bne	1c1c <mo_list+0x5d0>
    1aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
    1aa8:	add	r3, r3, #1
    1aac:	str	r3, [fp, #-20]	; 0xffffffec
    1ab0:	ldr	r3, [fp, #-20]	; 0xffffffec
    1ab4:	ldrb	r3, [r3]
    1ab8:	mov	r2, r3
    1abc:	ldr	r3, [pc, #444]	; 1c80 <mo_list+0x634>
    1ac0:	ldr	r3, [r4, r3]
    1ac4:	ldr	r3, [r3, r2, lsl #2]
    1ac8:	and	r3, r3, #16
    1acc:	cmp	r3, #0
    1ad0:	beq	1c1c <mo_list+0x5d0>
    1ad4:	bl	978 <rb_current_time@plt>
    1ad8:	mov	r5, r0
    1adc:	ldr	r0, [fp, #-20]	; 0xffffffec
    1ae0:	bl	a8c <atoi@plt>
    1ae4:	mov	r2, r0
    1ae8:	mov	r3, r2
    1aec:	lsl	r2, r2, #4
    1af0:	sub	r3, r3, r2
    1af4:	lsl	r3, r3, #2
    1af8:	add	r2, r5, r3
    1afc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1b00:	str	r2, [r3, #12]
    1b04:	b	1c1c <mo_list+0x5d0>
    1b08:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b0c:	ldrb	r3, [r3]
    1b10:	cmp	r3, #84	; 0x54
    1b14:	beq	1b28 <mo_list+0x4dc>
    1b18:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b1c:	ldrb	r3, [r3]
    1b20:	cmp	r3, #116	; 0x74
    1b24:	bne	1c20 <mo_list+0x5d4>
    1b28:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b2c:	add	r3, r3, #1
    1b30:	str	r3, [fp, #-20]	; 0xffffffec
    1b34:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b38:	ldrb	r3, [r3]
    1b3c:	cmp	r3, #62	; 0x3e
    1b40:	bne	1ba8 <mo_list+0x55c>
    1b44:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b48:	add	r3, r3, #1
    1b4c:	str	r3, [fp, #-20]	; 0xffffffec
    1b50:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b54:	ldrb	r3, [r3]
    1b58:	mov	r2, r3
    1b5c:	ldr	r3, [pc, #284]	; 1c80 <mo_list+0x634>
    1b60:	ldr	r3, [r4, r3]
    1b64:	ldr	r3, [r3, r2, lsl #2]
    1b68:	and	r3, r3, #16
    1b6c:	cmp	r3, #0
    1b70:	beq	1c20 <mo_list+0x5d4>
    1b74:	bl	978 <rb_current_time@plt>
    1b78:	mov	r5, r0
    1b7c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1b80:	bl	a8c <atoi@plt>
    1b84:	mov	r2, r0
    1b88:	mov	r3, r2
    1b8c:	lsl	r2, r2, #4
    1b90:	sub	r3, r3, r2
    1b94:	lsl	r3, r3, #2
    1b98:	add	r2, r5, r3
    1b9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1ba0:	str	r2, [r3, #24]
    1ba4:	b	1c20 <mo_list+0x5d4>
    1ba8:	ldr	r3, [fp, #-20]	; 0xffffffec
    1bac:	ldrb	r3, [r3]
    1bb0:	cmp	r3, #60	; 0x3c
    1bb4:	bne	1c20 <mo_list+0x5d4>
    1bb8:	ldr	r3, [fp, #-20]	; 0xffffffec
    1bbc:	add	r3, r3, #1
    1bc0:	str	r3, [fp, #-20]	; 0xffffffec
    1bc4:	ldr	r3, [fp, #-20]	; 0xffffffec
    1bc8:	ldrb	r3, [r3]
    1bcc:	mov	r2, r3
    1bd0:	ldr	r3, [pc, #168]	; 1c80 <mo_list+0x634>
    1bd4:	ldr	r3, [r4, r3]
    1bd8:	ldr	r3, [r3, r2, lsl #2]
    1bdc:	and	r3, r3, #16
    1be0:	cmp	r3, #0
    1be4:	beq	1c20 <mo_list+0x5d4>
    1be8:	bl	978 <rb_current_time@plt>
    1bec:	mov	r5, r0
    1bf0:	ldr	r0, [fp, #-20]	; 0xffffffec
    1bf4:	bl	a8c <atoi@plt>
    1bf8:	mov	r2, r0
    1bfc:	mov	r3, r2
    1c00:	lsl	r2, r2, #4
    1c04:	sub	r3, r3, r2
    1c08:	lsl	r3, r3, #2
    1c0c:	add	r2, r5, r3
    1c10:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1c14:	str	r2, [r3, #20]
    1c18:	b	1c20 <mo_list+0x5d4>
    1c1c:	nop			; (mov r0, r0)
    1c20:	ldr	r3, [fp, #-16]
    1c24:	cmp	r3, #0
    1c28:	beq	1c5c <mo_list+0x610>
    1c2c:	ldr	r3, [fp, #-16]
    1c30:	ldrb	r3, [r3]
    1c34:	cmp	r3, #0
    1c38:	beq	1c5c <mo_list+0x610>
    1c3c:	ldr	r3, [fp, #-16]
    1c40:	str	r3, [fp, #-20]	; 0xffffffec
    1c44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c48:	add	r3, r3, #1
    1c4c:	str	r3, [fp, #-24]	; 0xffffffe8
    1c50:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c54:	cmp	r3, #6
    1c58:	ble	18c4 <mo_list+0x278>
    1c5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1c60:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1c64:	bl	1dd0 <safelist_client_instantiate>
    1c68:	sub	sp, fp, #12
    1c6c:	pop	{r4, r5, fp, pc}
    1c70:	.word	0x0001198c
    1c74:	.word	0x00000ee4
    1c78:	.word	0x00000ea0
    1c7c:	.word	0x00000d8c
    1c80:	.word	0x00000090
    1c84:	.word	0x000000a0

00001c88 <list_one_channel>:
    1c88:	push	{r4, fp, lr}
    1c8c:	add	fp, sp, #8
    1c90:	sub	sp, sp, #428	; 0x1ac
    1c94:	str	r0, [fp, #-408]	; 0xfffffe68
    1c98:	str	r1, [fp, #-412]	; 0xfffffe64
    1c9c:	str	r2, [fp, #-416]	; 0xfffffe60
    1ca0:	ldr	r4, [pc, #192]	; 1d68 <list_one_channel+0xe0>
    1ca4:	add	r4, pc, r4
    1ca8:	ldr	r3, [fp, #-412]	; 0xfffffe64
    1cac:	ldr	r3, [r3, #108]	; 0x6c
    1cb0:	cmp	r3, #0
    1cb4:	beq	1cd4 <list_one_channel+0x4c>
    1cb8:	ldr	r3, [fp, #-412]	; 0xfffffe64
    1cbc:	ldr	r1, [r3, #108]	; 0x6c
    1cc0:	sub	r3, fp, #404	; 0x194
    1cc4:	ldr	r2, [pc, #160]	; 1d6c <list_one_channel+0xe4>
    1cc8:	mov	r0, r3
    1ccc:	bl	aa4 <rb_strlcpy@plt>
    1cd0:	b	1cdc <list_one_channel+0x54>
    1cd4:	mov	r3, #0
    1cd8:	strb	r3, [fp, #-404]	; 0xfffffe6c
    1cdc:	sub	r3, fp, #404	; 0x194
    1ce0:	mov	r0, r3
    1ce4:	bl	10d8 <strip_colour>
    1ce8:	ldr	r3, [fp, #-408]	; 0xfffffe68
    1cec:	add	ip, r3, #88	; 0x58
    1cf0:	ldr	r3, [fp, #-416]	; 0xfffffe60
    1cf4:	cmp	r3, #0
    1cf8:	beq	1d0c <list_one_channel+0x84>
    1cfc:	ldr	r3, [pc, #108]	; 1d70 <list_one_channel+0xe8>
    1d00:	add	r3, pc, r3
    1d04:	mov	r0, r3
    1d08:	b	1d18 <list_one_channel+0x90>
    1d0c:	ldr	r3, [pc, #96]	; 1d74 <list_one_channel+0xec>
    1d10:	add	r3, pc, r3
    1d14:	mov	r0, r3
    1d18:	ldr	r3, [fp, #-412]	; 0xfffffe64
    1d1c:	ldr	r3, [r3, #236]	; 0xec
    1d20:	ldr	r2, [fp, #-412]	; 0xfffffe64
    1d24:	ldr	r2, [r2, #132]	; 0x84
    1d28:	sub	r1, fp, #404	; 0x194
    1d2c:	str	r1, [sp, #12]
    1d30:	str	r2, [sp, #8]
    1d34:	str	r3, [sp, #4]
    1d38:	str	r0, [sp]
    1d3c:	mov	r3, ip
    1d40:	ldr	r2, [pc, #48]	; 1d78 <list_one_channel+0xf0>
    1d44:	ldr	r2, [r4, r2]
    1d48:	add	r2, r2, #88	; 0x58
    1d4c:	ldr	r1, [pc, #40]	; 1d7c <list_one_channel+0xf4>
    1d50:	add	r1, pc, r1
    1d54:	ldr	r0, [fp, #-408]	; 0xfffffe68
    1d58:	bl	99c <sendto_one@plt>
    1d5c:	nop			; (mov r0, r0)
    1d60:	sub	sp, fp, #8
    1d64:	pop	{r4, fp, pc}
    1d68:	.word	0x00011354
    1d6c:	.word	0x00000187
    1d70:	.word	0x00000860
    1d74:	.word	0x00000910
    1d78:	.word	0x000000a8
    1d7c:	.word	0x000008d4

00001d80 <safelist_sendq_exceeded>:
    1d80:	push	{r4, fp, lr}
    1d84:	add	fp, sp, #8
    1d88:	sub	sp, sp, #12
    1d8c:	str	r0, [fp, #-16]
    1d90:	ldr	r3, [fp, #-16]
    1d94:	ldr	r3, [r3, #432]	; 0x1b0
    1d98:	ldr	r4, [r3, #64]	; 0x40
    1d9c:	ldr	r0, [fp, #-16]
    1da0:	bl	a38 <get_sendq@plt>
    1da4:	mov	r3, r0
    1da8:	lsr	r2, r3, #31
    1dac:	add	r3, r2, r3
    1db0:	asr	r3, r3, #1
    1db4:	cmp	r4, r3
    1db8:	movgt	r3, #1
    1dbc:	movle	r3, #0
    1dc0:	uxtb	r3, r3
    1dc4:	mov	r0, r3
    1dc8:	sub	sp, fp, #8
    1dcc:	pop	{r4, fp, pc}

00001dd0 <safelist_client_instantiate>:
    1dd0:	push	{fp, lr}
    1dd4:	add	fp, sp, #4
    1dd8:	sub	sp, sp, #8
    1ddc:	str	r0, [fp, #-8]
    1de0:	str	r1, [fp, #-12]
    1de4:	ldr	r1, [pc, #100]	; 1e50 <safelist_client_instantiate+0x80>
    1de8:	add	r1, pc, r1
    1dec:	ldr	r3, [fp, #-8]
    1df0:	ldr	r3, [r3, #432]	; 0x1b0
    1df4:	ldr	r2, [fp, #-12]
    1df8:	str	r2, [r3, #428]	; 0x1ac
    1dfc:	ldr	r3, [fp, #-8]
    1e00:	add	r3, r3, #88	; 0x58
    1e04:	ldr	r2, [pc, #72]	; 1e54 <safelist_client_instantiate+0x84>
    1e08:	ldr	r2, [r1, r2]
    1e0c:	add	r2, r2, #88	; 0x58
    1e10:	ldr	r1, [pc, #64]	; 1e58 <safelist_client_instantiate+0x88>
    1e14:	add	r1, pc, r1
    1e18:	ldr	r0, [fp, #-8]
    1e1c:	bl	99c <sendto_one@plt>
    1e20:	bl	a2c <rb_make_rb_dlink_node@plt>
    1e24:	mov	r1, r0
    1e28:	ldr	r3, [pc, #44]	; 1e5c <safelist_client_instantiate+0x8c>
    1e2c:	add	r3, pc, r3
    1e30:	mov	r2, r3
    1e34:	ldr	r0, [fp, #-8]
    1e38:	bl	c3c <rb_dlinkAdd>
    1e3c:	ldr	r0, [fp, #-8]
    1e40:	bl	22f0 <safelist_iterate_client>
    1e44:	nop			; (mov r0, r0)
    1e48:	sub	sp, fp, #4
    1e4c:	pop	{fp, pc}
    1e50:	.word	0x00011210
    1e54:	.word	0x000000a8
    1e58:	.word	0x00000828
    1e5c:	.word	0x00011310

00001e60 <safelist_client_release>:
    1e60:	push	{r4, fp, lr}
    1e64:	add	fp, sp, #8
    1e68:	sub	sp, sp, #12
    1e6c:	str	r0, [fp, #-16]
    1e70:	ldr	r4, [pc, #180]	; 1f2c <safelist_client_release+0xcc>
    1e74:	add	r4, pc, r4
    1e78:	ldr	r3, [fp, #-16]
    1e7c:	ldrd	r2, [r3, #64]	; 0x40
    1e80:	mov	r0, #8192	; 0x2000
    1e84:	mov	r1, #0
    1e88:	and	r2, r2, r0
    1e8c:	and	r3, r3, r1
    1e90:	orrs	r3, r2, r3
    1e94:	beq	1f20 <safelist_client_release+0xc0>
    1e98:	ldr	r3, [fp, #-16]
    1e9c:	ldrh	r3, [r3, #80]	; 0x50
    1ea0:	cmp	r3, #64	; 0x40
    1ea4:	bne	1f20 <safelist_client_release+0xc0>
    1ea8:	ldr	r3, [pc, #128]	; 1f30 <safelist_client_release+0xd0>
    1eac:	add	r3, pc, r3
    1eb0:	mov	r1, r3
    1eb4:	ldr	r0, [fp, #-16]
    1eb8:	bl	f14 <rb_dlinkFindDestroy>
    1ebc:	ldr	r3, [fp, #-16]
    1ec0:	ldr	r3, [r3, #432]	; 0x1b0
    1ec4:	ldr	r3, [r3, #428]	; 0x1ac
    1ec8:	ldr	r3, [r3]
    1ecc:	mov	r0, r3
    1ed0:	bl	1098 <rb_free>
    1ed4:	ldr	r3, [fp, #-16]
    1ed8:	ldr	r3, [r3, #432]	; 0x1b0
    1edc:	ldr	r3, [r3, #428]	; 0x1ac
    1ee0:	mov	r0, r3
    1ee4:	bl	1098 <rb_free>
    1ee8:	ldr	r3, [fp, #-16]
    1eec:	ldr	r3, [r3, #432]	; 0x1b0
    1ef0:	mov	r2, #0
    1ef4:	str	r2, [r3, #428]	; 0x1ac
    1ef8:	ldr	r3, [fp, #-16]
    1efc:	add	r3, r3, #88	; 0x58
    1f00:	ldr	r2, [pc, #44]	; 1f34 <safelist_client_release+0xd4>
    1f04:	ldr	r2, [r4, r2]
    1f08:	add	r2, r2, #88	; 0x58
    1f0c:	ldr	r1, [pc, #36]	; 1f38 <safelist_client_release+0xd8>
    1f10:	add	r1, pc, r1
    1f14:	ldr	r0, [fp, #-16]
    1f18:	bl	99c <sendto_one@plt>
    1f1c:	b	1f24 <safelist_client_release+0xc4>
    1f20:	nop			; (mov r0, r0)
    1f24:	sub	sp, fp, #8
    1f28:	pop	{r4, fp, pc}
    1f2c:	.word	0x00011184
    1f30:	.word	0x00011290
    1f34:	.word	0x000000a8
    1f38:	.word	0x000006e8

00001f3c <safelist_channel_named>:
    1f3c:	push	{r4, fp, lr}
    1f40:	add	fp, sp, #8
    1f44:	sub	sp, sp, #36	; 0x24
    1f48:	str	r0, [fp, #-32]	; 0xffffffe0
    1f4c:	str	r1, [fp, #-36]	; 0xffffffdc
    1f50:	str	r2, [fp, #-40]	; 0xffffffd8
    1f54:	ldr	r4, [pc, #432]	; 210c <safelist_channel_named+0x1d0>
    1f58:	add	r4, pc, r4
    1f5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1f60:	add	r3, r3, #88	; 0x58
    1f64:	ldr	r2, [pc, #420]	; 2110 <safelist_channel_named+0x1d4>
    1f68:	ldr	r2, [r4, r2]
    1f6c:	add	r2, r2, #88	; 0x58
    1f70:	ldr	r1, [pc, #412]	; 2114 <safelist_channel_named+0x1d8>
    1f74:	add	r1, pc, r1
    1f78:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1f7c:	bl	99c <sendto_one@plt>
    1f80:	mov	r1, #44	; 0x2c
    1f84:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1f88:	bl	a5c <strchr@plt>
    1f8c:	str	r0, [fp, #-16]
    1f90:	ldr	r3, [fp, #-16]
    1f94:	cmp	r3, #0
    1f98:	beq	1fa8 <safelist_channel_named+0x6c>
    1f9c:	ldr	r3, [fp, #-16]
    1fa0:	mov	r2, #0
    1fa4:	strb	r2, [r3]
    1fa8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1fac:	ldrb	r3, [r3]
    1fb0:	cmp	r3, #0
    1fb4:	bne	1ff8 <safelist_channel_named+0xbc>
    1fb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1fbc:	ldr	r2, [pc, #340]	; 2118 <safelist_channel_named+0x1dc>
    1fc0:	add	r2, pc, r2
    1fc4:	ldr	r1, [pc, #336]	; 211c <safelist_channel_named+0x1e0>
    1fc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1fcc:	bl	a44 <sendto_one_numeric@plt>
    1fd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1fd4:	add	r3, r3, #88	; 0x58
    1fd8:	ldr	r2, [pc, #304]	; 2110 <safelist_channel_named+0x1d4>
    1fdc:	ldr	r2, [r4, r2]
    1fe0:	add	r2, r2, #88	; 0x58
    1fe4:	ldr	r1, [pc, #308]	; 2120 <safelist_channel_named+0x1e4>
    1fe8:	add	r1, pc, r1
    1fec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1ff0:	bl	99c <sendto_one@plt>
    1ff4:	b	2104 <safelist_channel_named+0x1c8>
    1ff8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1ffc:	bl	9e4 <find_channel@plt>
    2000:	str	r0, [fp, #-20]	; 0xffffffec
    2004:	ldr	r3, [fp, #-20]	; 0xffffffec
    2008:	cmp	r3, #0
    200c:	bne	2050 <safelist_channel_named+0x114>
    2010:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2014:	ldr	r2, [pc, #264]	; 2124 <safelist_channel_named+0x1e8>
    2018:	add	r2, pc, r2
    201c:	ldr	r1, [pc, #248]	; 211c <safelist_channel_named+0x1e0>
    2020:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2024:	bl	a44 <sendto_one_numeric@plt>
    2028:	ldr	r3, [fp, #-32]	; 0xffffffe0
    202c:	add	r3, r3, #88	; 0x58
    2030:	ldr	r2, [pc, #216]	; 2110 <safelist_channel_named+0x1d4>
    2034:	ldr	r2, [r4, r2]
    2038:	add	r2, r2, #88	; 0x58
    203c:	ldr	r1, [pc, #228]	; 2128 <safelist_channel_named+0x1ec>
    2040:	add	r1, pc, r1
    2044:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2048:	bl	99c <sendto_one@plt>
    204c:	b	2104 <safelist_channel_named+0x1c8>
    2050:	ldr	r3, [fp, #-20]	; 0xffffffec
    2054:	cmp	r3, #0
    2058:	beq	20a4 <safelist_channel_named+0x168>
    205c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2060:	ldr	r3, [r3, #12]
    2064:	and	r3, r3, #2
    2068:	cmp	r3, #0
    206c:	beq	20a4 <safelist_channel_named+0x168>
    2070:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2074:	cmp	r3, #0
    2078:	beq	20ac <safelist_channel_named+0x170>
    207c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2080:	ldr	r3, [r3, #24]
    2084:	cmp	r3, #0
    2088:	beq	20ac <safelist_channel_named+0x170>
    208c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2090:	ldr	r0, [fp, #-20]	; 0xffffffec
    2094:	bl	a08 <find_channel_membership@plt>
    2098:	mov	r3, r0
    209c:	cmp	r3, #0
    20a0:	beq	20ac <safelist_channel_named+0x170>
    20a4:	mov	r3, #1
    20a8:	b	20b0 <safelist_channel_named+0x174>
    20ac:	mov	r3, #0
    20b0:	str	r3, [fp, #-24]	; 0xffffffe8
    20b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    20b8:	cmp	r3, #0
    20bc:	bne	20cc <safelist_channel_named+0x190>
    20c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    20c4:	cmp	r3, #0
    20c8:	beq	20dc <safelist_channel_named+0x1a0>
    20cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    20d0:	ldr	r1, [fp, #-20]	; 0xffffffec
    20d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    20d8:	bl	1c88 <list_one_channel>
    20dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20e0:	add	r3, r3, #88	; 0x58
    20e4:	ldr	r2, [pc, #36]	; 2110 <safelist_channel_named+0x1d4>
    20e8:	ldr	r2, [r4, r2]
    20ec:	add	r2, r2, #88	; 0x58
    20f0:	ldr	r1, [pc, #52]	; 212c <safelist_channel_named+0x1f0>
    20f4:	add	r1, pc, r1
    20f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    20fc:	bl	99c <sendto_one@plt>
    2100:	nop			; (mov r0, r0)
    2104:	sub	sp, fp, #8
    2108:	pop	{r4, fp, pc}
    210c:	.word	0x000110a0
    2110:	.word	0x000000a8
    2114:	.word	0x000006c8
    2118:	.word	0x0000069c
    211c:	.word	0x00000191
    2120:	.word	0x00000610
    2124:	.word	0x00000644
    2128:	.word	0x000005b8
    212c:	.word	0x00000504

00002130 <safelist_one_channel>:
    2130:	push	{fp, lr}
    2134:	add	fp, sp, #4
    2138:	sub	sp, sp, #24
    213c:	str	r0, [fp, #-16]
    2140:	str	r1, [fp, #-20]	; 0xffffffec
    2144:	str	r2, [fp, #-24]	; 0xffffffe8
    2148:	ldr	r3, [fp, #-20]	; 0xffffffec
    214c:	cmp	r3, #0
    2150:	beq	219c <safelist_one_channel+0x6c>
    2154:	ldr	r3, [fp, #-20]	; 0xffffffec
    2158:	ldr	r3, [r3, #12]
    215c:	and	r3, r3, #2
    2160:	cmp	r3, #0
    2164:	beq	219c <safelist_one_channel+0x6c>
    2168:	ldr	r3, [fp, #-16]
    216c:	cmp	r3, #0
    2170:	beq	21a4 <safelist_one_channel+0x74>
    2174:	ldr	r3, [fp, #-16]
    2178:	ldr	r3, [r3, #24]
    217c:	cmp	r3, #0
    2180:	beq	21a4 <safelist_one_channel+0x74>
    2184:	ldr	r1, [fp, #-16]
    2188:	ldr	r0, [fp, #-20]	; 0xffffffec
    218c:	bl	a08 <find_channel_membership@plt>
    2190:	mov	r3, r0
    2194:	cmp	r3, #0
    2198:	beq	21a4 <safelist_one_channel+0x74>
    219c:	mov	r3, #1
    21a0:	b	21a8 <safelist_one_channel+0x78>
    21a4:	mov	r3, #0
    21a8:	str	r3, [fp, #-8]
    21ac:	ldr	r3, [fp, #-8]
    21b0:	cmp	r3, #0
    21b4:	bne	21c8 <safelist_one_channel+0x98>
    21b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    21bc:	ldr	r3, [r3, #28]
    21c0:	cmp	r3, #0
    21c4:	beq	22bc <safelist_one_channel+0x18c>
    21c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    21cc:	ldr	r2, [r3, #132]	; 0x84
    21d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    21d4:	ldr	r3, [r3, #4]
    21d8:	cmp	r2, r3
    21dc:	bcc	22c4 <safelist_one_channel+0x194>
    21e0:	ldr	r3, [fp, #-20]	; 0xffffffec
    21e4:	ldr	r2, [r3, #132]	; 0x84
    21e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    21ec:	ldr	r3, [r3, #8]
    21f0:	cmp	r2, r3
    21f4:	bhi	22c4 <safelist_one_channel+0x194>
    21f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    21fc:	ldr	r3, [r3, #20]
    2200:	cmp	r3, #0
    2204:	beq	2220 <safelist_one_channel+0xf0>
    2208:	ldr	r3, [fp, #-20]	; 0xffffffec
    220c:	ldr	r2, [r3, #116]	; 0x74
    2210:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2214:	ldr	r3, [r3, #20]
    2218:	cmp	r2, r3
    221c:	blt	22cc <safelist_one_channel+0x19c>
    2220:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2224:	ldr	r3, [r3, #24]
    2228:	cmp	r3, #0
    222c:	beq	2258 <safelist_one_channel+0x128>
    2230:	ldr	r3, [fp, #-20]	; 0xffffffec
    2234:	ldr	r2, [r3, #116]	; 0x74
    2238:	ldr	r3, [fp, #-24]	; 0xffffffe8
    223c:	ldr	r3, [r3, #24]
    2240:	cmp	r2, r3
    2244:	bgt	22d4 <safelist_one_channel+0x1a4>
    2248:	ldr	r3, [fp, #-20]	; 0xffffffec
    224c:	ldr	r3, [r3, #116]	; 0x74
    2250:	cmp	r3, #0
    2254:	beq	22d4 <safelist_one_channel+0x1a4>
    2258:	ldr	r3, [fp, #-24]	; 0xffffffe8
    225c:	ldr	r3, [r3, #12]
    2260:	cmp	r3, #0
    2264:	beq	2280 <safelist_one_channel+0x150>
    2268:	ldr	r3, [fp, #-20]	; 0xffffffec
    226c:	ldr	r2, [r3, #232]	; 0xe8
    2270:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2274:	ldr	r3, [r3, #12]
    2278:	cmp	r2, r3
    227c:	blt	22dc <safelist_one_channel+0x1ac>
    2280:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2284:	ldr	r3, [r3, #16]
    2288:	cmp	r3, #0
    228c:	beq	22a8 <safelist_one_channel+0x178>
    2290:	ldr	r3, [fp, #-20]	; 0xffffffec
    2294:	ldr	r2, [r3, #232]	; 0xe8
    2298:	ldr	r3, [fp, #-24]	; 0xffffffe8
    229c:	ldr	r3, [r3, #16]
    22a0:	cmp	r2, r3
    22a4:	bgt	22e4 <safelist_one_channel+0x1b4>
    22a8:	ldr	r2, [fp, #-8]
    22ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    22b0:	ldr	r0, [fp, #-16]
    22b4:	bl	1c88 <list_one_channel>
    22b8:	b	22e8 <safelist_one_channel+0x1b8>
    22bc:	nop			; (mov r0, r0)
    22c0:	b	22e8 <safelist_one_channel+0x1b8>
    22c4:	nop			; (mov r0, r0)
    22c8:	b	22e8 <safelist_one_channel+0x1b8>
    22cc:	nop			; (mov r0, r0)
    22d0:	b	22e8 <safelist_one_channel+0x1b8>
    22d4:	nop			; (mov r0, r0)
    22d8:	b	22e8 <safelist_one_channel+0x1b8>
    22dc:	nop			; (mov r0, r0)
    22e0:	b	22e8 <safelist_one_channel+0x1b8>
    22e4:	nop			; (mov r0, r0)
    22e8:	sub	sp, fp, #4
    22ec:	pop	{fp, pc}

000022f0 <safelist_iterate_client>:
    22f0:	push	{r4, fp, lr}
    22f4:	add	fp, sp, #8
    22f8:	sub	sp, sp, #60	; 0x3c
    22fc:	str	r0, [fp, #-64]	; 0xffffffc0
    2300:	ldr	r4, [pc, #252]	; 2404 <safelist_iterate_client+0x114>
    2304:	add	r4, pc, r4
    2308:	ldr	r3, [pc, #248]	; 2408 <safelist_iterate_client+0x118>
    230c:	ldr	r3, [r4, r3]
    2310:	ldr	r0, [r3]
    2314:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2318:	ldr	r3, [r3, #432]	; 0x1b0
    231c:	ldr	r3, [r3, #428]	; 0x1ac
    2320:	ldr	r2, [r3]
    2324:	sub	r3, fp, #56	; 0x38
    2328:	mov	r1, r3
    232c:	bl	9c0 <rb_radixtree_foreach_start_from@plt>
    2330:	b	23c8 <safelist_iterate_client+0xd8>
    2334:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2338:	ldr	r3, [r3, #36]	; 0x24
    233c:	mov	r0, r3
    2340:	bl	1d80 <safelist_sendq_exceeded>
    2344:	mov	r3, r0
    2348:	cmp	r3, #0
    234c:	beq	2390 <safelist_iterate_client+0xa0>
    2350:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2354:	ldr	r3, [r3, #432]	; 0x1b0
    2358:	ldr	r3, [r3, #428]	; 0x1ac
    235c:	ldr	r3, [r3]
    2360:	mov	r0, r3
    2364:	bl	1098 <rb_free>
    2368:	ldr	r3, [fp, #-64]	; 0xffffffc0
    236c:	ldr	r3, [r3, #432]	; 0x1b0
    2370:	ldr	r4, [r3, #428]	; 0x1ac
    2374:	ldr	r3, [fp, #-16]
    2378:	ldr	r3, [r3, #236]	; 0xec
    237c:	mov	r0, r3
    2380:	bl	102c <rb_strdup>
    2384:	mov	r3, r0
    2388:	str	r3, [r4]
    238c:	b	23fc <safelist_iterate_client+0x10c>
    2390:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2394:	ldr	r3, [r3, #432]	; 0x1b0
    2398:	ldr	r3, [r3, #428]	; 0x1ac
    239c:	mov	r2, r3
    23a0:	ldr	r1, [fp, #-16]
    23a4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    23a8:	bl	2130 <safelist_one_channel>
    23ac:	ldr	r3, [pc, #84]	; 2408 <safelist_iterate_client+0x118>
    23b0:	ldr	r3, [r4, r3]
    23b4:	ldr	r3, [r3]
    23b8:	sub	r2, fp, #56	; 0x38
    23bc:	mov	r1, r2
    23c0:	mov	r0, r3
    23c4:	bl	9d8 <rb_radixtree_foreach_next@plt>
    23c8:	ldr	r3, [pc, #56]	; 2408 <safelist_iterate_client+0x118>
    23cc:	ldr	r3, [r4, r3]
    23d0:	ldr	r3, [r3]
    23d4:	sub	r2, fp, #56	; 0x38
    23d8:	mov	r1, r2
    23dc:	mov	r0, r3
    23e0:	bl	a74 <rb_radixtree_foreach_cur@plt>
    23e4:	str	r0, [fp, #-16]
    23e8:	ldr	r3, [fp, #-16]
    23ec:	cmp	r3, #0
    23f0:	bne	2334 <safelist_iterate_client+0x44>
    23f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    23f8:	bl	1e60 <safelist_client_release>
    23fc:	sub	sp, fp, #8
    2400:	pop	{r4, fp, pc}
    2404:	.word	0x00010cf4
    2408:	.word	0x00000094

0000240c <safelist_iterate_clients>:
    240c:	push	{fp, lr}
    2410:	add	fp, sp, #4
    2414:	sub	sp, sp, #16
    2418:	str	r0, [fp, #-16]
    241c:	ldr	r3, [pc, #124]	; 24a0 <safelist_iterate_clients+0x94>
    2420:	add	r3, pc, r3
    2424:	ldr	r3, [r3]
    2428:	str	r3, [fp, #-8]
    242c:	ldr	r3, [fp, #-8]
    2430:	cmp	r3, #0
    2434:	beq	2444 <safelist_iterate_clients+0x38>
    2438:	ldr	r3, [fp, #-8]
    243c:	ldr	r3, [r3, #8]
    2440:	b	2448 <safelist_iterate_clients+0x3c>
    2444:	mov	r3, #0
    2448:	str	r3, [fp, #-12]
    244c:	b	2488 <safelist_iterate_clients+0x7c>
    2450:	ldr	r3, [fp, #-8]
    2454:	ldr	r3, [r3]
    2458:	mov	r0, r3
    245c:	bl	22f0 <safelist_iterate_client>
    2460:	ldr	r3, [fp, #-12]
    2464:	str	r3, [fp, #-8]
    2468:	ldr	r3, [fp, #-8]
    246c:	cmp	r3, #0
    2470:	beq	2480 <safelist_iterate_clients+0x74>
    2474:	ldr	r3, [fp, #-8]
    2478:	ldr	r3, [r3, #8]
    247c:	b	2484 <safelist_iterate_clients+0x78>
    2480:	mov	r3, #0
    2484:	str	r3, [fp, #-12]
    2488:	ldr	r3, [fp, #-8]
    248c:	cmp	r3, #0
    2490:	bne	2450 <safelist_iterate_clients+0x44>
    2494:	nop			; (mov r0, r0)
    2498:	sub	sp, fp, #4
    249c:	pop	{fp, pc}
    24a0:	.word	0x00010d1c

Disassembly of section .fini:

000024a4 <_fini>:
    24a4:	push	{r3, lr}
    24a8:	pop	{r3, pc}
