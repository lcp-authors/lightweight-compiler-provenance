
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

00011484 <.init>:
   11484:	push	{r3, lr}
   11488:	bl	118d0 <sprintf@plt+0x48>
   1148c:	pop	{r3, pc}

Disassembly of section .plt:

00011490 <sigemptyset@plt-0x14>:
   11490:	push	{lr}		; (str lr, [sp, #-4]!)
   11494:	ldr	lr, [pc, #4]	; 114a0 <sigemptyset@plt-0x4>
   11498:	add	lr, pc, lr
   1149c:	ldr	pc, [lr, #8]!
   114a0:	andeq	r8, r1, r0, ror #22

000114a4 <sigemptyset@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #24, 20	; 0x18000
   114ac:	ldr	pc, [ip, #2912]!	; 0xb60

000114b0 <strerror@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #24, 20	; 0x18000
   114b8:	ldr	pc, [ip, #2904]!	; 0xb58

000114bc <rb_helper_loop@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #24, 20	; 0x18000
   114c4:	ldr	pc, [ip, #2896]!	; 0xb50

000114c8 <abort@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #24, 20	; 0x18000
   114d0:	ldr	pc, [ip, #2888]!	; 0xb48

000114d4 <rb_event_addish@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #24, 20	; 0x18000
   114dc:	ldr	pc, [ip, #2880]!	; 0xb40

000114e0 <getsockname@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #24, 20	; 0x18000
   114e8:	ldr	pc, [ip, #2872]!	; 0xb38

000114ec <rb_ignore_errno@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #24, 20	; 0x18000
   114f4:	ldr	pc, [ip, #2864]!	; 0xb30

000114f8 <rb_connect_tcp_ssl@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #24, 20	; 0x18000
   11500:	ldr	pc, [ip, #2856]!	; 0xb28

00011504 <rb_connect_tcp@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #24, 20	; 0x18000
   1150c:	ldr	pc, [ip, #2848]!	; 0xb20

00011510 <__libc_start_main@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #24, 20	; 0x18000
   11518:	ldr	pc, [ip, #2840]!	; 0xb18

0001151c <rb_event_delete@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #24, 20	; 0x18000
   11524:	ldr	pc, [ip, #2832]!	; 0xb10

00011528 <rb_setselect@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #24, 20	; 0x18000
   11530:	ldr	pc, [ip, #2824]!	; 0xb08

00011534 <rb_get_fd@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #24, 20	; 0x18000
   1153c:	ldr	pc, [ip, #2816]!	; 0xb00

00011540 <__gmon_start__@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #24, 20	; 0x18000
   11548:	ldr	pc, [ip, #2808]!	; 0xaf8

0001154c <vsnprintf@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #24, 20	; 0x18000
   11554:	ldr	pc, [ip, #2800]!	; 0xaf0

00011558 <rb_socket@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #24, 20	; 0x18000
   11560:	ldr	pc, [ip, #2792]!	; 0xae8

00011564 <fclose@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #24, 20	; 0x18000
   1156c:	ldr	pc, [ip, #2784]!	; 0xae0

00011570 <rb_strtok_r@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #24, 20	; 0x18000
   11578:	ldr	pc, [ip, #2776]!	; 0xad8

0001157c <strchr@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #24, 20	; 0x18000
   11584:	ldr	pc, [ip, #2768]!	; 0xad0

00011588 <rb_dictionary_foreach_cur@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #24, 20	; 0x18000
   11590:	ldr	pc, [ip, #2760]!	; 0xac8

00011594 <strcasecmp@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #24, 20	; 0x18000
   1159c:	ldr	pc, [ip, #2752]!	; 0xac0

000115a0 <calloc@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #24, 20	; 0x18000
   115a8:	ldr	pc, [ip, #2744]!	; 0xab8

000115ac <rb_helper_child@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #24, 20	; 0x18000
   115b4:	ldr	pc, [ip, #2736]!	; 0xab0

000115b8 <sendto@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #24, 20	; 0x18000
   115c0:	ldr	pc, [ip, #2728]!	; 0xaa8

000115c4 <fopen@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #24, 20	; 0x18000
   115cc:	ldr	pc, [ip, #2720]!	; 0xaa0

000115d0 <memset@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #24, 20	; 0x18000
   115d8:	ldr	pc, [ip, #2712]!	; 0xa98

000115dc <freeaddrinfo@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #24, 20	; 0x18000
   115e4:	ldr	pc, [ip, #2704]!	; 0xa90

000115e8 <strrchr@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #24, 20	; 0x18000
   115f0:	ldr	pc, [ip, #2696]!	; 0xa88

000115f4 <rb_write@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #24, 20	; 0x18000
   115fc:	ldr	pc, [ip, #2688]!	; 0xa80

00011600 <__assert_fail@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #24, 20	; 0x18000
   11608:	ldr	pc, [ip, #2680]!	; 0xa78

0001160c <fgets_unlocked@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #24, 20	; 0x18000
   11614:	ldr	pc, [ip, #2672]!	; 0xa70

00011618 <rb_strlcpy@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #24, 20	; 0x18000
   11620:	ldr	pc, [ip, #2664]!	; 0xa68

00011624 <strtoull@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #24, 20	; 0x18000
   1162c:	ldr	pc, [ip, #2656]!	; 0xa60

00011630 <rb_dictionary_foreach_next@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #24, 20	; 0x18000
   11638:	ldr	pc, [ip, #2648]!	; 0xa58

0001163c <free@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #24, 20	; 0x18000
   11644:	ldr	pc, [ip, #2640]!	; 0xa50

00011648 <rb_string_to_array@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #24, 20	; 0x18000
   11650:	ldr	pc, [ip, #2632]!	; 0xa48

00011654 <rb_read@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #24, 20	; 0x18000
   1165c:	ldr	pc, [ip, #2624]!	; 0xa40

00011660 <rb_strcasecmp@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #24, 20	; 0x18000
   11668:	ldr	pc, [ip, #2616]!	; 0xa38

0001166c <getaddrinfo@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #24, 20	; 0x18000
   11674:	ldr	pc, [ip, #2608]!	; 0xa30

00011678 <rb_dictionary_foreach_start@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #24, 20	; 0x18000
   11680:	ldr	pc, [ip, #2600]!	; 0xa28

00011684 <rb_inet_pton_sock@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #24, 20	; 0x18000
   1168c:	ldr	pc, [ip, #2592]!	; 0xa20

00011690 <strlen@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #24, 20	; 0x18000
   11698:	ldr	pc, [ip, #2584]!	; 0xa18

0001169c <rb_current_time@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #24, 20	; 0x18000
   116a4:	ldr	pc, [ip, #2576]!	; 0xa10

000116a8 <rb_dictionary_delete@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #24, 20	; 0x18000
   116b0:	ldr	pc, [ip, #2568]!	; 0xa08

000116b4 <memcpy@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #24, 20	; 0x18000
   116bc:	ldr	pc, [ip, #2560]!	; 0xa00

000116c0 <rb_free_rb_dlink_node@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #24, 20	; 0x18000
   116c8:	ldr	pc, [ip, #2552]!	; 0x9f8

000116cc <bcmp@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #24, 20	; 0x18000
   116d4:	ldr	pc, [ip, #2544]!	; 0x9f0

000116d8 <rb_close@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #24, 20	; 0x18000
   116e0:	ldr	pc, [ip, #2536]!	; 0x9e8

000116e4 <strtol@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #24, 20	; 0x18000
   116ec:	ldr	pc, [ip, #2528]!	; 0x9e0

000116f0 <sigaddset@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #24, 20	; 0x18000
   116f8:	ldr	pc, [ip, #2520]!	; 0x9d8

000116fc <strcpy@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #24, 20	; 0x18000
   11704:	ldr	pc, [ip, #2512]!	; 0x9d0

00011708 <rb_dictionary_destroy@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #24, 20	; 0x18000
   11710:	ldr	pc, [ip, #2504]!	; 0x9c8

00011714 <bind@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #24, 20	; 0x18000
   1171c:	ldr	pc, [ip, #2496]!	; 0x9c0

00011720 <strstr@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #24, 20	; 0x18000
   11728:	ldr	pc, [ip, #2488]!	; 0x9b8

0001172c <fwrite@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #24, 20	; 0x18000
   11734:	ldr	pc, [ip, #2480]!	; 0x9b0

00011738 <rb_init_prng@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #24, 20	; 0x18000
   11740:	ldr	pc, [ip, #2472]!	; 0x9a8

00011744 <rb_dictionary_retrieve@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #24, 20	; 0x18000
   1174c:	ldr	pc, [ip, #2464]!	; 0x9a0

00011750 <rb_outofmemory@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #24, 20	; 0x18000
   11758:	ldr	pc, [ip, #2456]!	; 0x998

0001175c <__ctype_b_loc@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #24, 20	; 0x18000
   11764:	ldr	pc, [ip, #2448]!	; 0x990

00011768 <rb_dictionary_add@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #24, 20	; 0x18000
   11770:	ldr	pc, [ip, #2440]!	; 0x988

00011774 <rb_set_time@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #24, 20	; 0x18000
   1177c:	ldr	pc, [ip, #2432]!	; 0x980

00011780 <malloc@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #24, 20	; 0x18000
   11788:	ldr	pc, [ip, #2424]!	; 0x978

0001178c <sigaction@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #24, 20	; 0x18000
   11794:	ldr	pc, [ip, #2416]!	; 0x970

00011798 <rb_helper_read@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #24, 20	; 0x18000
   117a0:	ldr	pc, [ip, #2408]!	; 0x968

000117a4 <rb_inet_ntop_sock@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #24, 20	; 0x18000
   117ac:	ldr	pc, [ip, #2400]!	; 0x960

000117b0 <rb_dictionary_find@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #24, 20	; 0x18000
   117b8:	ldr	pc, [ip, #2392]!	; 0x958

000117bc <rb_dictionary_create@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #24, 20	; 0x18000
   117c4:	ldr	pc, [ip, #2384]!	; 0x950

000117c8 <memmove@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #24, 20	; 0x18000
   117d0:	ldr	pc, [ip, #2376]!	; 0x948

000117d4 <rb_accept_tcp@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #24, 20	; 0x18000
   117dc:	ldr	pc, [ip, #2368]!	; 0x940

000117e0 <rb_helper_write@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #24, 20	; 0x18000
   117e8:	ldr	pc, [ip, #2360]!	; 0x938

000117ec <rb_event_add@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #24, 20	; 0x18000
   117f4:	ldr	pc, [ip, #2352]!	; 0x930

000117f8 <rb_get_random@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #24, 20	; 0x18000
   11800:	ldr	pc, [ip, #2344]!	; 0x928

00011804 <rb_make_rb_dlink_node@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #24, 20	; 0x18000
   1180c:	ldr	pc, [ip, #2336]!	; 0x920

00011810 <snprintf@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #24, 20	; 0x18000
   11818:	ldr	pc, [ip, #2328]!	; 0x918

0001181c <rb_listen@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #24, 20	; 0x18000
   11824:	ldr	pc, [ip, #2320]!	; 0x910

00011828 <strncmp@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #24, 20	; 0x18000
   11830:	ldr	pc, [ip, #2312]!	; 0x908

00011834 <recvfrom@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #24, 20	; 0x18000
   1183c:	ldr	pc, [ip, #2304]!	; 0x900

00011840 <setsockopt@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #24, 20	; 0x18000
   11848:	ldr	pc, [ip, #2296]!	; 0x8f8

0001184c <strpbrk@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #24, 20	; 0x18000
   11854:	ldr	pc, [ip, #2288]!	; 0x8f0

00011858 <memchr@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #24, 20	; 0x18000
   11860:	ldr	pc, [ip, #2280]!	; 0x8e8

00011864 <strcmp@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #24, 20	; 0x18000
   1186c:	ldr	pc, [ip, #2272]!	; 0x8e0

00011870 <exit@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #24, 20	; 0x18000
   11878:	ldr	pc, [ip, #2264]!	; 0x8d8

0001187c <__errno_location@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #24, 20	; 0x18000
   11884:	ldr	pc, [ip, #2256]!	; 0x8d0

00011888 <sprintf@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #24, 20	; 0x18000
   11890:	ldr	pc, [ip, #2248]!	; 0x8c8

Disassembly of section .text:

00011894 <.text>:
   11894:	mov	fp, #0
   11898:	mov	lr, #0
   1189c:	pop	{r1}		; (ldr r1, [sp], #4)
   118a0:	mov	r2, sp
   118a4:	push	{r2}		; (str r2, [sp, #-4]!)
   118a8:	push	{r0}		; (str r0, [sp, #-4]!)
   118ac:	ldr	ip, [pc, #16]	; 118c4 <sprintf@plt+0x3c>
   118b0:	push	{ip}		; (str ip, [sp, #-4]!)
   118b4:	ldr	r0, [pc, #12]	; 118c8 <sprintf@plt+0x40>
   118b8:	ldr	r3, [pc, #12]	; 118cc <sprintf@plt+0x44>
   118bc:	bl	11510 <__libc_start_main@plt>
   118c0:	bl	114c8 <abort@plt>
   118c4:	andeq	r8, r1, r0, ror #20
   118c8:	andeq	r1, r1, r4, lsr #22
   118cc:	andeq	r8, r1, r0, lsl #20
   118d0:	ldr	r3, [pc, #20]	; 118ec <sprintf@plt+0x64>
   118d4:	ldr	r2, [pc, #20]	; 118f0 <sprintf@plt+0x68>
   118d8:	add	r3, pc, r3
   118dc:	ldr	r2, [r3, r2]
   118e0:	cmp	r2, #0
   118e4:	bxeq	lr
   118e8:	b	11540 <__gmon_start__@plt>
   118ec:	andeq	r8, r1, r0, lsr #14
   118f0:	andeq	r0, r0, ip, asr r1
   118f4:	ldr	r0, [pc, #24]	; 11914 <sprintf@plt+0x8c>
   118f8:	ldr	r3, [pc, #24]	; 11918 <sprintf@plt+0x90>
   118fc:	cmp	r3, r0
   11900:	bxeq	lr
   11904:	ldr	r3, [pc, #16]	; 1191c <sprintf@plt+0x94>
   11908:	cmp	r3, #0
   1190c:	bxeq	lr
   11910:	bx	r3
   11914:	andeq	sl, r2, r4, asr #30
   11918:	andeq	sl, r2, r4, asr #30
   1191c:	andeq	r0, r0, r0
   11920:	ldr	r0, [pc, #36]	; 1194c <sprintf@plt+0xc4>
   11924:	ldr	r1, [pc, #36]	; 11950 <sprintf@plt+0xc8>
   11928:	sub	r1, r1, r0
   1192c:	asr	r1, r1, #2
   11930:	add	r1, r1, r1, lsr #31
   11934:	asrs	r1, r1, #1
   11938:	bxeq	lr
   1193c:	ldr	r3, [pc, #16]	; 11954 <sprintf@plt+0xcc>
   11940:	cmp	r3, #0
   11944:	bxeq	lr
   11948:	bx	r3
   1194c:	andeq	sl, r2, r4, asr #30
   11950:	andeq	sl, r2, r4, asr #30
   11954:	andeq	r0, r0, r0
   11958:	push	{r4, lr}
   1195c:	ldr	r4, [pc, #24]	; 1197c <sprintf@plt+0xf4>
   11960:	ldrb	r3, [r4]
   11964:	cmp	r3, #0
   11968:	popne	{r4, pc}
   1196c:	bl	118f4 <sprintf@plt+0x6c>
   11970:	mov	r3, #1
   11974:	strb	r3, [r4]
   11978:	pop	{r4, pc}
   1197c:	andeq	sl, r2, ip, asr #30
   11980:	b	11920 <sprintf@plt+0x98>
   11984:	push	{r4, r5, fp, lr}
   11988:	add	fp, sp, #8
   1198c:	mov	r4, r0
   11990:	cmp	r0, #1
   11994:	bgt	119b0 <sprintf@plt+0x128>
   11998:	movw	r1, #35635	; 0x8b33
   1199c:	mov	r0, #67	; 0x43
   119a0:	mov	r2, r4
   119a4:	movt	r1, #1
   119a8:	pop	{r4, r5, fp, lr}
   119ac:	b	12500 <sprintf@plt+0xc78>
   119b0:	movw	r0, #61816	; 0xf178
   119b4:	mov	r5, r1
   119b8:	ldr	r1, [r1, #4]
   119bc:	movt	r0, #2
   119c0:	ldr	r0, [r0]
   119c4:	bl	11744 <rb_dictionary_retrieve@plt>
   119c8:	cmp	r0, #0
   119cc:	beq	119f8 <sprintf@plt+0x170>
   119d0:	ldr	r2, [r0, #4]
   119d4:	sub	r1, r4, #2
   119d8:	cmp	r1, r2
   119dc:	bge	11a10 <sprintf@plt+0x188>
   119e0:	movw	r1, #35758	; 0x8bae
   119e4:	mov	r0, #67	; 0x43
   119e8:	mov	r3, r4
   119ec:	movt	r1, #1
   119f0:	pop	{r4, r5, fp, lr}
   119f4:	b	12500 <sprintf@plt+0xc78>
   119f8:	ldr	r2, [r5, #4]
   119fc:	movw	r1, #35713	; 0x8b81
   11a00:	mov	r0, #67	; 0x43
   11a04:	movt	r1, #1
   11a08:	pop	{r4, r5, fp, lr}
   11a0c:	b	12500 <sprintf@plt+0xc78>
   11a10:	ldr	r3, [r5, #4]
   11a14:	ldr	ip, [r0, #8]
   11a18:	add	r2, r5, #8
   11a1c:	mov	r0, r3
   11a20:	pop	{r4, r5, fp, lr}
   11a24:	bx	ip
   11a28:	push	{r4, r5, fp, lr}
   11a2c:	add	fp, sp, #8
   11a30:	cmp	r0, #2
   11a34:	bgt	11a80 <sprintf@plt+0x1f8>
   11a38:	movw	r5, #43368	; 0xa968
   11a3c:	mov	r4, #0
   11a40:	movt	r5, #2
   11a44:	ldr	r1, [r5, r4, lsl #2]
   11a48:	cmp	r1, #0
   11a4c:	bne	11a68 <sprintf@plt+0x1e0>
   11a50:	add	r4, r4, #1
   11a54:	cmp	r4, #256	; 0x100
   11a58:	beq	11a7c <sprintf@plt+0x1f4>
   11a5c:	ldr	r1, [r5, r4, lsl #2]
   11a60:	cmp	r1, #0
   11a64:	beq	11a50 <sprintf@plt+0x1c8>
   11a68:	mov	r0, #0
   11a6c:	blx	r1
   11a70:	add	r4, r4, #1
   11a74:	cmp	r4, #256	; 0x100
   11a78:	bne	11a5c <sprintf@plt+0x1d4>
   11a7c:	pop	{r4, r5, fp, pc}
   11a80:	ldr	r0, [r1, #4]
   11a84:	movw	r1, #43368	; 0xa968
   11a88:	movt	r1, #2
   11a8c:	ldrb	r0, [r0]
   11a90:	ldr	r1, [r1, r0, lsl #2]
   11a94:	cmp	r1, #0
   11a98:	popeq	{r4, r5, fp, pc}
   11a9c:	pop	{r4, r5, fp, lr}
   11aa0:	bx	r1
   11aa4:	push	{r4, sl, fp, lr}
   11aa8:	add	fp, sp, #8
   11aac:	cmp	r0, #2
   11ab0:	bgt	11acc <sprintf@plt+0x244>
   11ab4:	movw	r1, #35510	; 0x8ab6
   11ab8:	mov	r2, r0
   11abc:	movt	r1, #1
   11ac0:	mov	r0, #67	; 0x43
   11ac4:	pop	{r4, sl, fp, lr}
   11ac8:	b	12500 <sprintf@plt+0xc78>
   11acc:	ldr	r0, [r1, #4]
   11ad0:	mov	r4, r1
   11ad4:	mov	r1, #0
   11ad8:	mov	r2, #16
   11adc:	bl	11624 <strtoull@plt>
   11ae0:	cmp	r1, #0
   11ae4:	beq	11b00 <sprintf@plt+0x278>
   11ae8:	ldr	r2, [r4, #4]
   11aec:	movw	r1, #35585	; 0x8b01
   11af0:	movt	r1, #1
   11af4:	mov	r0, #67	; 0x43
   11af8:	pop	{r4, sl, fp, lr}
   11afc:	b	12500 <sprintf@plt+0xc78>
   11b00:	ldr	r1, [r4, #8]
   11b04:	movw	r2, #42344	; 0xa568
   11b08:	movt	r2, #2
   11b0c:	ldrb	r1, [r1]
   11b10:	ldr	r2, [r2, r1, lsl #2]
   11b14:	cmp	r2, #0
   11b18:	popeq	{r4, sl, fp, pc}
   11b1c:	pop	{r4, sl, fp, lr}
   11b20:	bx	r2
   11b24:	push	{fp, lr}
   11b28:	mov	fp, sp
   11b2c:	sub	sp, sp, #160	; 0xa0
   11b30:	add	r4, sp, #20
   11b34:	mov	r0, #1
   11b38:	mov	r6, #0
   11b3c:	add	r5, r4, #4
   11b40:	str	r0, [sp, #20]
   11b44:	str	r6, [sp, #152]	; 0x98
   11b48:	mov	r0, r5
   11b4c:	bl	114a4 <sigemptyset@plt>
   11b50:	mov	r0, r5
   11b54:	mov	r1, #13
   11b58:	bl	116f0 <sigaddset@plt>
   11b5c:	mov	r0, r5
   11b60:	mov	r1, #14
   11b64:	bl	116f0 <sigaddset@plt>
   11b68:	mov	r0, r5
   11b6c:	mov	r1, #5
   11b70:	bl	116f0 <sigaddset@plt>
   11b74:	mov	r0, r5
   11b78:	mov	r1, #28
   11b7c:	bl	116f0 <sigaddset@plt>
   11b80:	mov	r0, #28
   11b84:	mov	r1, r4
   11b88:	mov	r2, #0
   11b8c:	bl	1178c <sigaction@plt>
   11b90:	mov	r0, #13
   11b94:	mov	r1, r4
   11b98:	mov	r2, #0
   11b9c:	bl	1178c <sigaction@plt>
   11ba0:	mov	r0, #5
   11ba4:	mov	r1, r4
   11ba8:	mov	r2, #0
   11bac:	bl	1178c <sigaction@plt>
   11bb0:	movw	r0, #7636	; 0x1dd4
   11bb4:	mov	r1, r4
   11bb8:	mov	r2, #0
   11bbc:	movt	r0, #1
   11bc0:	str	r0, [sp, #20]
   11bc4:	mov	r0, #14
   11bc8:	bl	1178c <sigaction@plt>
   11bcc:	mov	r0, #256	; 0x100
   11bd0:	movw	r1, #7620	; 0x1dc4
   11bd4:	mov	r2, #0
   11bd8:	mov	r3, #0
   11bdc:	str	r6, [sp]
   11be0:	str	r0, [sp, #4]
   11be4:	str	r0, [sp, #8]
   11be8:	str	r0, [sp, #12]
   11bec:	movw	r0, #7472	; 0x1d30
   11bf0:	movt	r1, #1
   11bf4:	movt	r0, #1
   11bf8:	bl	115ac <rb_helper_child@plt>
   11bfc:	movw	r4, #44880	; 0xaf50
   11c00:	cmp	r0, #0
   11c04:	movt	r4, #2
   11c08:	str	r0, [r4]
   11c0c:	bne	11c38 <sprintf@plt+0x3b0>
   11c10:	movw	r0, #44872	; 0xaf48
   11c14:	mov	r1, #46	; 0x2e
   11c18:	mov	r2, #1
   11c1c:	movt	r0, #2
   11c20:	ldr	r3, [r0]
   11c24:	movw	r0, #35440	; 0x8a70
   11c28:	movt	r0, #1
   11c2c:	bl	1172c <fwrite@plt>
   11c30:	mov	r0, #1
   11c34:	bl	11870 <exit@plt>
   11c38:	bl	11774 <rb_set_time@plt>
   11c3c:	bl	11c80 <sprintf@plt+0x3f8>
   11c40:	movw	r0, #35487	; 0x8a9f
   11c44:	movw	r1, #5728	; 0x1660
   11c48:	movt	r0, #1
   11c4c:	movt	r1, #1
   11c50:	bl	117bc <rb_dictionary_create@plt>
   11c54:	movw	r1, #61816	; 0xf178
   11c58:	movt	r1, #2
   11c5c:	str	r0, [r1]
   11c60:	bl	13598 <sprintf@plt+0x1d10>
   11c64:	bl	1265c <sprintf@plt+0xdd4>
   11c68:	mov	r0, #0
   11c6c:	mov	r1, #1
   11c70:	bl	11738 <rb_init_prng@plt>
   11c74:	ldr	r0, [r4]
   11c78:	mov	r1, #0
   11c7c:	bl	114bc <rb_helper_loop@plt>
   11c80:	push	{r4, r5, fp, lr}
   11c84:	add	fp, sp, #8
   11c88:	sub	sp, sp, #144	; 0x90
   11c8c:	mov	r0, #1
   11c90:	add	r4, sp, #4
   11c94:	str	r0, [sp, #4]
   11c98:	mov	r0, #0
   11c9c:	add	r5, r4, #4
   11ca0:	str	r0, [sp, #136]	; 0x88
   11ca4:	mov	r0, r5
   11ca8:	bl	114a4 <sigemptyset@plt>
   11cac:	mov	r0, r5
   11cb0:	mov	r1, #13
   11cb4:	bl	116f0 <sigaddset@plt>
   11cb8:	mov	r0, r5
   11cbc:	mov	r1, #14
   11cc0:	bl	116f0 <sigaddset@plt>
   11cc4:	mov	r0, r5
   11cc8:	mov	r1, #5
   11ccc:	bl	116f0 <sigaddset@plt>
   11cd0:	mov	r0, r5
   11cd4:	mov	r1, #28
   11cd8:	bl	116f0 <sigaddset@plt>
   11cdc:	mov	r0, #28
   11ce0:	mov	r1, r4
   11ce4:	mov	r2, #0
   11ce8:	bl	1178c <sigaction@plt>
   11cec:	mov	r0, #13
   11cf0:	mov	r1, r4
   11cf4:	mov	r2, #0
   11cf8:	bl	1178c <sigaction@plt>
   11cfc:	mov	r0, #5
   11d00:	mov	r1, r4
   11d04:	mov	r2, #0
   11d08:	bl	1178c <sigaction@plt>
   11d0c:	movw	r0, #7636	; 0x1dd4
   11d10:	mov	r1, r4
   11d14:	mov	r2, #0
   11d18:	movt	r0, #1
   11d1c:	str	r0, [sp, #4]
   11d20:	mov	r0, #14
   11d24:	bl	1178c <sigaction@plt>
   11d28:	sub	sp, fp, #8
   11d2c:	pop	{r4, r5, fp, pc}
   11d30:	push	{r4, r5, r6, r7, fp, lr}
   11d34:	add	fp, sp, #16
   11d38:	movw	r1, #44928	; 0xaf80
   11d3c:	mov	r2, #16384	; 0x4000
   11d40:	mov	r4, r0
   11d44:	movt	r1, #2
   11d48:	bl	11798 <rb_helper_read@plt>
   11d4c:	cmp	r0, #1
   11d50:	blt	11dc0 <sprintf@plt+0x538>
   11d54:	movw	r5, #44928	; 0xaf80
   11d58:	movw	r6, #44884	; 0xaf54
   11d5c:	movw	r7, #41320	; 0xa168
   11d60:	movt	r5, #2
   11d64:	movt	r6, #2
   11d68:	movt	r7, #2
   11d6c:	b	11d88 <sprintf@plt+0x500>
   11d70:	mov	r0, r4
   11d74:	mov	r1, r5
   11d78:	mov	r2, #16384	; 0x4000
   11d7c:	bl	11798 <rb_helper_read@plt>
   11d80:	cmp	r0, #0
   11d84:	ble	11dc0 <sprintf@plt+0x538>
   11d88:	mov	r0, r5
   11d8c:	mov	r1, r6
   11d90:	mov	r2, #10
   11d94:	bl	11648 <rb_string_to_array@plt>
   11d98:	cmp	r0, #1
   11d9c:	blt	11d70 <sprintf@plt+0x4e8>
   11da0:	ldr	r1, [r6]
   11da4:	ldrb	r1, [r1]
   11da8:	ldr	r2, [r7, r1, lsl #2]
   11dac:	cmp	r2, #0
   11db0:	beq	11d70 <sprintf@plt+0x4e8>
   11db4:	mov	r1, r6
   11db8:	blx	r2
   11dbc:	b	11d70 <sprintf@plt+0x4e8>
   11dc0:	pop	{r4, r5, r6, r7, fp, pc}
   11dc4:	push	{fp, lr}
   11dc8:	mov	fp, sp
   11dcc:	mov	r0, #1
   11dd0:	bl	11870 <exit@plt>
   11dd4:	bx	lr
   11dd8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11ddc:	add	fp, sp, #24
   11de0:	mov	r6, r1
   11de4:	mov	r8, r0
   11de8:	mov	r0, #1
   11dec:	mov	r1, #160	; 0xa0
   11df0:	mov	r9, r3
   11df4:	mov	r7, r2
   11df8:	mov	r5, #1
   11dfc:	bl	115a0 <calloc@plt>
   11e00:	cmp	r0, #0
   11e04:	beq	11e90 <sprintf@plt+0x608>
   11e08:	mov	r4, r0
   11e0c:	cmp	r6, #2
   11e10:	beq	11e28 <sprintf@plt+0x5a0>
   11e14:	cmp	r6, #10
   11e18:	bne	11e7c <sprintf@plt+0x5f4>
   11e1c:	mov	r5, #28
   11e20:	mov	r0, #54	; 0x36
   11e24:	b	11e2c <sprintf@plt+0x5a4>
   11e28:	mov	r0, #52	; 0x34
   11e2c:	str	r0, [r4, #8]
   11e30:	movw	r0, #61312	; 0xef80
   11e34:	movt	r0, #2
   11e38:	ldrd	r2, [r0]
   11e3c:	adds	r6, r2, #1
   11e40:	adc	r1, r3, #0
   11e44:	str	r6, [r0]
   11e48:	str	r1, [r0, #4]
   11e4c:	add	r0, r4, #144	; 0x90
   11e50:	mov	r1, r4
   11e54:	stm	r0, {r2, r3, r7, r9}
   11e58:	movw	r0, #7828	; 0x1e94
   11e5c:	mov	r2, r5
   11e60:	movt	r0, #1
   11e64:	str	r0, [r4, #4]
   11e68:	mov	r0, r8
   11e6c:	str	r4, [r4]
   11e70:	bl	13708 <sprintf@plt+0x1e80>
   11e74:	mov	r0, r4
   11e78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e7c:	mov	r0, r4
   11e80:	bl	1163c <free@plt>
   11e84:	mov	r4, #0
   11e88:	mov	r0, r4
   11e8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e90:	bl	11750 <rb_outofmemory@plt>
   11e94:	push	{r4, r5, fp, lr}
   11e98:	add	fp, sp, #8
   11e9c:	sub	sp, sp, #56	; 0x38
   11ea0:	vmov.i32	q8, #0	; 0x00000000
   11ea4:	mov	r4, r0
   11ea8:	mov	r0, sp
   11eac:	add	r2, r0, #33	; 0x21
   11eb0:	cmp	r4, #0
   11eb4:	vst1.8	{d16-d17}, [r2]
   11eb8:	add	r2, r0, #17
   11ebc:	orr	r0, r0, #1
   11ec0:	vst1.8	{d16-d17}, [r0]
   11ec4:	mov	r0, #0
   11ec8:	vst1.8	{d16-d17}, [r2]
   11ecc:	str	r0, [sp, #49]	; 0x31
   11ed0:	mov	r0, #42	; 0x2a
   11ed4:	strb	r0, [sp]
   11ed8:	beq	11fac <sprintf@plt+0x724>
   11edc:	cmp	r1, #0
   11ee0:	beq	11f74 <sprintf@plt+0x6ec>
   11ee4:	ldr	r2, [r4, #8]
   11ee8:	cmp	r2, #54	; 0x36
   11eec:	beq	11f28 <sprintf@plt+0x6a0>
   11ef0:	cmp	r2, #52	; 0x34
   11ef4:	bne	11fc4 <sprintf@plt+0x73c>
   11ef8:	ldrh	r0, [r1, #4]!
   11efc:	cmp	r0, #2
   11f00:	bne	11f74 <sprintf@plt+0x6ec>
   11f04:	mov	r2, sp
   11f08:	mov	r0, r1
   11f0c:	mov	r1, r2
   11f10:	mov	r2, #53	; 0x35
   11f14:	bl	117a4 <rb_inet_ntop_sock@plt>
   11f18:	ldr	r5, [r4, #152]	; 0x98
   11f1c:	cmp	r5, #0
   11f20:	bne	11f80 <sprintf@plt+0x6f8>
   11f24:	b	11f9c <sprintf@plt+0x714>
   11f28:	ldrh	r0, [r1, #4]!
   11f2c:	cmp	r0, #10
   11f30:	bne	11f74 <sprintf@plt+0x6ec>
   11f34:	mov	r5, sp
   11f38:	mov	r0, r1
   11f3c:	mov	r2, #53	; 0x35
   11f40:	mov	r1, r5
   11f44:	bl	117a4 <rb_inet_ntop_sock@plt>
   11f48:	ldrb	r0, [sp]
   11f4c:	cmp	r0, #58	; 0x3a
   11f50:	bne	11f74 <sprintf@plt+0x6ec>
   11f54:	mov	r0, r5
   11f58:	bl	11690 <strlen@plt>
   11f5c:	mov	r2, r0
   11f60:	orr	r0, r5, #1
   11f64:	mov	r1, r5
   11f68:	bl	117c8 <memmove@plt>
   11f6c:	mov	r0, #48	; 0x30
   11f70:	strb	r0, [sp]
   11f74:	ldr	r5, [r4, #152]	; 0x98
   11f78:	cmp	r5, #0
   11f7c:	beq	11f9c <sprintf@plt+0x714>
   11f80:	ldrb	r0, [sp]
   11f84:	ldr	r2, [r4, #8]
   11f88:	ldr	r3, [r4, #156]	; 0x9c
   11f8c:	subs	r1, r0, #42	; 0x2a
   11f90:	mov	r0, sp
   11f94:	movwne	r1, #1
   11f98:	blx	r5
   11f9c:	mov	r0, r4
   11fa0:	bl	1163c <free@plt>
   11fa4:	sub	sp, fp, #8
   11fa8:	pop	{r4, r5, fp, pc}
   11fac:	movw	r1, #35965	; 0x8c7d
   11fb0:	mov	r0, #67	; 0x43
   11fb4:	movt	r1, #1
   11fb8:	bl	12500 <sprintf@plt+0xc78>
   11fbc:	mov	r0, #2
   11fc0:	bl	11870 <exit@plt>
   11fc4:	movw	r1, #36009	; 0x8ca9
   11fc8:	mov	r0, #67	; 0x43
   11fcc:	movt	r1, #1
   11fd0:	bl	12500 <sprintf@plt+0xc78>
   11fd4:	mov	r0, #2
   11fd8:	bl	11870 <exit@plt>
   11fdc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11fe0:	add	fp, sp, #24
   11fe4:	mov	r6, r1
   11fe8:	mov	r5, r0
   11fec:	mov	r0, #1
   11ff0:	mov	r1, #160	; 0xa0
   11ff4:	mov	r8, r2
   11ff8:	bl	115a0 <calloc@plt>
   11ffc:	cmp	r0, #0
   12000:	beq	1209c <sprintf@plt+0x814>
   12004:	add	r7, r0, #12
   12008:	mov	r4, r0
   1200c:	mov	r0, r5
   12010:	mov	r1, r7
   12014:	bl	11684 <rb_inet_pton_sock@plt>
   12018:	cmp	r0, #0
   1201c:	beq	1203c <sprintf@plt+0x7b4>
   12020:	ldrh	r0, [r7]
   12024:	cmp	r0, #2
   12028:	beq	12050 <sprintf@plt+0x7c8>
   1202c:	cmp	r0, #10
   12030:	bne	1203c <sprintf@plt+0x7b4>
   12034:	mov	r0, #83	; 0x53
   12038:	b	12054 <sprintf@plt+0x7cc>
   1203c:	mov	r0, r4
   12040:	bl	1163c <free@plt>
   12044:	mov	r4, #0
   12048:	mov	r0, r4
   1204c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12050:	mov	r0, #82	; 0x52
   12054:	str	r0, [r4, #8]
   12058:	movw	r0, #61312	; 0xef80
   1205c:	movt	r0, #2
   12060:	ldrd	r2, [r0]
   12064:	adds	r1, r2, #1
   12068:	adc	r5, r3, #0
   1206c:	stm	r0, {r1, r5}
   12070:	add	r0, r4, #144	; 0x90
   12074:	mov	r1, r4
   12078:	stm	r0, {r2, r3, r6, r8}
   1207c:	movw	r0, #8352	; 0x20a0
   12080:	movt	r0, #1
   12084:	str	r0, [r4, #4]
   12088:	mov	r0, r7
   1208c:	str	r4, [r4]
   12090:	bl	13820 <sprintf@plt+0x1f98>
   12094:	mov	r0, r4
   12098:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1209c:	bl	11750 <rb_outofmemory@plt>
   120a0:	push	{r4, r5, r6, sl, fp, lr}
   120a4:	add	fp, sp, #16
   120a8:	cmp	r0, #0
   120ac:	beq	12148 <sprintf@plt+0x8c0>
   120b0:	mov	r6, r1
   120b4:	mov	r4, r0
   120b8:	mov	r5, #0
   120bc:	cmp	r1, #0
   120c0:	beq	12114 <sprintf@plt+0x88c>
   120c4:	ldr	r2, [r4, #8]
   120c8:	cmp	r2, #83	; 0x53
   120cc:	beq	120f8 <sprintf@plt+0x870>
   120d0:	cmp	r2, #82	; 0x52
   120d4:	bne	12160 <sprintf@plt+0x8d8>
   120d8:	ldr	r0, [r6, #8]
   120dc:	ldr	r1, [r4, #16]
   120e0:	cmp	r1, r0
   120e4:	ldreq	r5, [r6]
   120e8:	ldr	r6, [r4, #152]	; 0x98
   120ec:	cmp	r6, #0
   120f0:	bne	12120 <sprintf@plt+0x898>
   120f4:	b	1213c <sprintf@plt+0x8b4>
   120f8:	add	r0, r4, #20
   120fc:	add	r1, r6, #12
   12100:	mov	r2, #16
   12104:	bl	116cc <bcmp@plt>
   12108:	cmp	r0, #0
   1210c:	bne	12114 <sprintf@plt+0x88c>
   12110:	ldr	r5, [r6]
   12114:	ldr	r6, [r4, #152]	; 0x98
   12118:	cmp	r6, #0
   1211c:	beq	1213c <sprintf@plt+0x8b4>
   12120:	ldr	r2, [r4, #8]
   12124:	ldr	r3, [r4, #156]	; 0x9c
   12128:	cmp	r5, #0
   1212c:	mov	r1, r5
   12130:	mov	r0, r5
   12134:	movwne	r1, #1
   12138:	blx	r6
   1213c:	mov	r0, r4
   12140:	pop	{r4, r5, r6, sl, fp, lr}
   12144:	b	1163c <free@plt>
   12148:	movw	r1, #36060	; 0x8cdc
   1214c:	mov	r0, #67	; 0x43
   12150:	movt	r1, #1
   12154:	bl	12500 <sprintf@plt+0xc78>
   12158:	mov	r0, #2
   1215c:	bl	11870 <exit@plt>
   12160:	movw	r1, #36110	; 0x8d0e
   12164:	mov	r0, #67	; 0x43
   12168:	movt	r1, #1
   1216c:	bl	12500 <sprintf@plt+0xc78>
   12170:	mov	r0, #2
   12174:	bl	11870 <exit@plt>
   12178:	mov	r1, #0
   1217c:	str	r1, [r0, #152]	; 0x98
   12180:	str	r1, [r0, #156]	; 0x9c
   12184:	bx	lr
   12188:	push	{r4, r5, r6, r8, r9, sl, fp, lr}
   1218c:	add	fp, sp, #24
   12190:	ldr	r6, [r1, #4]
   12194:	mov	r5, r1
   12198:	mov	r0, r6
   1219c:	bl	11690 <strlen@plt>
   121a0:	add	r0, r0, #1
   121a4:	bl	11780 <malloc@plt>
   121a8:	cmp	r0, #0
   121ac:	beq	122b0 <sprintf@plt+0xa28>
   121b0:	mov	r1, r6
   121b4:	mov	r4, r0
   121b8:	bl	116fc <strcpy@plt>
   121bc:	ldr	r0, [r5, #8]
   121c0:	ldr	r5, [r5, #12]
   121c4:	ldrb	r2, [r0]
   121c8:	sub	r0, r2, #82	; 0x52
   121cc:	cmp	r0, #2
   121d0:	bcc	12208 <sprintf@plt+0x980>
   121d4:	cmp	r2, #54	; 0x36
   121d8:	beq	1223c <sprintf@plt+0x9b4>
   121dc:	cmp	r2, #52	; 0x34
   121e0:	bne	122b4 <sprintf@plt+0xa2c>
   121e4:	mov	r0, #1
   121e8:	mov	r1, #160	; 0xa0
   121ec:	mov	r6, #1
   121f0:	bl	115a0 <calloc@plt>
   121f4:	cmp	r0, #0
   121f8:	beq	122b0 <sprintf@plt+0xa28>
   121fc:	mov	r1, r0
   12200:	mov	r0, #52	; 0x34
   12204:	b	1225c <sprintf@plt+0x9d4>
   12208:	movw	r1, #8908	; 0x22cc
   1220c:	mov	r0, r5
   12210:	mov	r2, r4
   12214:	movt	r1, #1
   12218:	bl	11fdc <sprintf@plt+0x754>
   1221c:	cmp	r0, #0
   12220:	popne	{r4, r5, r6, r8, r9, sl, fp, pc}
   12224:	movw	r1, #36167	; 0x8d47
   12228:	mov	r0, #67	; 0x43
   1222c:	movt	r1, #1
   12230:	bl	12500 <sprintf@plt+0xc78>
   12234:	mov	r0, #2
   12238:	bl	11870 <exit@plt>
   1223c:	mov	r0, #1
   12240:	mov	r1, #160	; 0xa0
   12244:	bl	115a0 <calloc@plt>
   12248:	cmp	r0, #0
   1224c:	beq	122b0 <sprintf@plt+0xa28>
   12250:	mov	r1, r0
   12254:	mov	r6, #28
   12258:	mov	r0, #54	; 0x36
   1225c:	str	r0, [r1, #8]
   12260:	movw	r0, #61312	; 0xef80
   12264:	movt	r0, #2
   12268:	ldrd	r2, [r0]
   1226c:	adds	r8, r2, #1
   12270:	str	r2, [r1, #144]	; 0x90
   12274:	str	r3, [r1, #148]	; 0x94
   12278:	mov	r2, r6
   1227c:	adc	r9, r3, #0
   12280:	strd	r8, [r0]
   12284:	movw	r0, #8908	; 0x22cc
   12288:	movt	r0, #1
   1228c:	str	r0, [r1, #152]	; 0x98
   12290:	movw	r0, #7828	; 0x1e94
   12294:	str	r4, [r1, #156]	; 0x9c
   12298:	movt	r0, #1
   1229c:	str	r0, [r1, #4]
   122a0:	str	r1, [r1]
   122a4:	mov	r0, r5
   122a8:	pop	{r4, r5, r6, r8, r9, sl, fp, lr}
   122ac:	b	13708 <sprintf@plt+0x1e80>
   122b0:	bl	11750 <rb_outofmemory@plt>
   122b4:	movw	r1, #35837	; 0x8bfd
   122b8:	mov	r0, #67	; 0x43
   122bc:	movt	r1, #1
   122c0:	bl	12500 <sprintf@plt+0xc78>
   122c4:	mov	r0, #2
   122c8:	bl	11870 <exit@plt>
   122cc:	push	{r4, sl, fp, lr}
   122d0:	add	fp, sp, #8
   122d4:	sub	sp, sp, #8
   122d8:	cmp	r2, #0
   122dc:	movne	r4, r3
   122e0:	cmpne	r3, #0
   122e4:	bne	12300 <sprintf@plt+0xa78>
   122e8:	movw	r1, #36167	; 0x8d47
   122ec:	mov	r0, #67	; 0x43
   122f0:	movt	r1, #1
   122f4:	bl	12500 <sprintf@plt+0xc78>
   122f8:	mov	r0, #2
   122fc:	bl	11870 <exit@plt>
   12300:	mov	r3, r2
   12304:	movw	r2, #44880	; 0xaf50
   12308:	cmp	r0, #0
   1230c:	movt	r2, #2
   12310:	cmpne	r1, #0
   12314:	ldr	r2, [r2]
   12318:	bne	12328 <sprintf@plt+0xaa0>
   1231c:	movw	r1, #36210	; 0x8d72
   12320:	movt	r1, #1
   12324:	b	12334 <sprintf@plt+0xaac>
   12328:	movw	r1, #36222	; 0x8d7e
   1232c:	str	r0, [sp]
   12330:	movt	r1, #1
   12334:	mov	r0, r2
   12338:	mov	r2, r4
   1233c:	bl	117e0 <rb_helper_write@plt>
   12340:	mov	r0, r4
   12344:	sub	sp, fp, #8
   12348:	pop	{r4, sl, fp, lr}
   1234c:	b	1163c <free@plt>
   12350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12354:	add	fp, sp, #28
   12358:	sub	sp, sp, #612	; 0x264
   1235c:	mov	r5, r0
   12360:	movw	r0, #61408	; 0xefe0
   12364:	mov	r4, r1
   12368:	movt	r0, #2
   1236c:	ldr	r0, [r0]
   12370:	cmp	r0, #0
   12374:	beq	12464 <sprintf@plt+0xbdc>
   12378:	cmp	r0, #1
   1237c:	blt	1241c <sprintf@plt+0xb94>
   12380:	movw	r6, #62112	; 0xf2a0
   12384:	str	r4, [sp, #8]
   12388:	movw	r4, #35961	; 0x8c79
   1238c:	mov	r9, #0
   12390:	add	r7, sp, #15
   12394:	add	r8, sp, #68	; 0x44
   12398:	mov	sl, #0
   1239c:	str	r5, [sp, #4]
   123a0:	movt	r6, #2
   123a4:	movt	r4, #1
   123a8:	mov	r0, r6
   123ac:	mov	r1, r7
   123b0:	mov	r2, #53	; 0x35
   123b4:	bl	117a4 <rb_inet_ntop_sock@plt>
   123b8:	ldrb	r0, [sp, #15]
   123bc:	cmp	r0, #0
   123c0:	beq	1243c <sprintf@plt+0xbb4>
   123c4:	mov	r0, r7
   123c8:	bl	11690 <strlen@plt>
   123cc:	mov	r5, r0
   123d0:	add	r0, r8, r9
   123d4:	rsb	r1, r9, #540	; 0x21c
   123d8:	mov	r2, r4
   123dc:	mov	r3, r7
   123e0:	bl	11810 <snprintf@plt>
   123e4:	movw	r1, #61408	; 0xefe0
   123e8:	add	r0, r9, r5
   123ec:	add	sl, sl, #1
   123f0:	add	r6, r6, #128	; 0x80
   123f4:	movt	r1, #2
   123f8:	add	r9, r0, #1
   123fc:	ldr	r1, [r1]
   12400:	cmp	sl, r1
   12404:	blt	123a8 <sprintf@plt+0xb20>
   12408:	ldr	r4, [sp, #8]
   1240c:	ldr	r5, [sp, #4]
   12410:	cmp	r9, #0
   12414:	movne	r1, #0
   12418:	strbne	r1, [r8, r0]
   1241c:	movw	r2, #39548	; 0x9a7c
   12420:	add	r3, sp, #68	; 0x44
   12424:	mov	r0, r5
   12428:	mov	r1, r4
   1242c:	movt	r2, #1
   12430:	bl	1256c <sprintf@plt+0xce4>
   12434:	sub	sp, fp, #28
   12438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1243c:	movw	r1, #35922	; 0x8c52
   12440:	mov	r0, #67	; 0x43
   12444:	movt	r1, #1
   12448:	bl	12500 <sprintf@plt+0xc78>
   1244c:	ldmib	sp, {r0, r1}
   12450:	movw	r2, #35943	; 0x8c67
   12454:	movt	r2, #1
   12458:	bl	125d4 <sprintf@plt+0xd4c>
   1245c:	mov	r0, #2
   12460:	bl	11870 <exit@plt>
   12464:	movw	r1, #35886	; 0x8c2e
   12468:	mov	r0, #67	; 0x43
   1246c:	movt	r1, #1
   12470:	bl	12500 <sprintf@plt+0xc78>
   12474:	movw	r2, #35908	; 0x8c44
   12478:	mov	r0, r5
   1247c:	mov	r1, r4
   12480:	movt	r2, #1
   12484:	bl	125d4 <sprintf@plt+0xd4c>
   12488:	mov	r0, #2
   1248c:	bl	11870 <exit@plt>
   12490:	b	13644 <sprintf@plt+0x1dbc>
   12494:	sub	sp, sp, #8
   12498:	push	{r4, r5, r6, r7, fp, lr}
   1249c:	add	fp, sp, #16
   124a0:	sub	sp, sp, #520	; 0x208
   124a4:	mov	ip, r1
   124a8:	add	r5, sp, #8
   124ac:	mov	r4, r0
   124b0:	str	r2, [fp, #8]
   124b4:	str	r3, [fp, #12]
   124b8:	add	r3, fp, #8
   124bc:	mov	r1, #512	; 0x200
   124c0:	mov	r0, r5
   124c4:	mov	r2, ip
   124c8:	str	r3, [sp, #4]
   124cc:	bl	1154c <vsnprintf@plt>
   124d0:	movw	r0, #44880	; 0xaf50
   124d4:	movw	r1, #36235	; 0x8d8b
   124d8:	mov	r2, r4
   124dc:	mov	r3, r5
   124e0:	movt	r0, #2
   124e4:	movt	r1, #1
   124e8:	ldr	r0, [r0]
   124ec:	bl	117e0 <rb_helper_write@plt>
   124f0:	sub	sp, fp, #16
   124f4:	pop	{r4, r5, r6, r7, fp, lr}
   124f8:	add	sp, sp, #8
   124fc:	bx	lr
   12500:	sub	sp, sp, #8
   12504:	push	{r4, r5, r6, r7, fp, lr}
   12508:	add	fp, sp, #16
   1250c:	sub	sp, sp, #520	; 0x208
   12510:	mov	ip, r1
   12514:	add	r5, sp, #8
   12518:	mov	r4, r0
   1251c:	str	r2, [fp, #8]
   12520:	str	r3, [fp, #12]
   12524:	add	r3, fp, #8
   12528:	mov	r1, #512	; 0x200
   1252c:	mov	r0, r5
   12530:	mov	r2, ip
   12534:	str	r3, [sp, #4]
   12538:	bl	1154c <vsnprintf@plt>
   1253c:	movw	r0, #44880	; 0xaf50
   12540:	movw	r1, #36244	; 0x8d94
   12544:	mov	r2, r4
   12548:	mov	r3, r5
   1254c:	movt	r0, #2
   12550:	movt	r1, #1
   12554:	ldr	r0, [r0]
   12558:	bl	117e0 <rb_helper_write@plt>
   1255c:	sub	sp, fp, #16
   12560:	pop	{r4, r5, r6, r7, fp, lr}
   12564:	add	sp, sp, #8
   12568:	bx	lr
   1256c:	sub	sp, sp, #4
   12570:	push	{r4, r5, r6, sl, fp, lr}
   12574:	add	fp, sp, #16
   12578:	sub	sp, sp, #524	; 0x20c
   1257c:	add	r6, sp, #12
   12580:	mov	r4, r1
   12584:	mov	r5, r0
   12588:	str	r3, [fp, #8]
   1258c:	add	r3, fp, #8
   12590:	mov	r1, #512	; 0x200
   12594:	mov	r0, r6
   12598:	str	r3, [sp, #8]
   1259c:	bl	1154c <vsnprintf@plt>
   125a0:	movw	r0, #44880	; 0xaf50
   125a4:	movw	r1, #36253	; 0x8d9d
   125a8:	mov	r2, r5
   125ac:	mov	r3, r4
   125b0:	str	r6, [sp]
   125b4:	movt	r0, #2
   125b8:	movt	r1, #1
   125bc:	ldr	r0, [r0]
   125c0:	bl	117e0 <rb_helper_write@plt>
   125c4:	sub	sp, fp, #16
   125c8:	pop	{r4, r5, r6, sl, fp, lr}
   125cc:	add	sp, sp, #4
   125d0:	bx	lr
   125d4:	sub	sp, sp, #4
   125d8:	push	{r4, r5, r6, sl, fp, lr}
   125dc:	add	fp, sp, #16
   125e0:	sub	sp, sp, #524	; 0x20c
   125e4:	add	r6, sp, #12
   125e8:	mov	r4, r1
   125ec:	mov	r5, r0
   125f0:	str	r3, [fp, #8]
   125f4:	add	r3, fp, #8
   125f8:	mov	r1, #512	; 0x200
   125fc:	mov	r0, r6
   12600:	str	r3, [sp, #8]
   12604:	bl	1154c <vsnprintf@plt>
   12608:	movw	r0, #44880	; 0xaf50
   1260c:	movw	r1, #36264	; 0x8da8
   12610:	mov	r2, r5
   12614:	mov	r3, r4
   12618:	str	r6, [sp]
   1261c:	movt	r0, #2
   12620:	movt	r1, #1
   12624:	ldr	r0, [r0]
   12628:	bl	117e0 <rb_helper_write@plt>
   1262c:	sub	sp, fp, #16
   12630:	pop	{r4, r5, r6, sl, fp, lr}
   12634:	add	sp, sp, #4
   12638:	bx	lr
   1263c:	mov	r2, r0
   12640:	movw	r0, #44880	; 0xaf50
   12644:	mov	r3, r1
   12648:	movw	r1, #36275	; 0x8db3
   1264c:	movt	r0, #2
   12650:	movt	r1, #1
   12654:	ldr	r0, [r0]
   12658:	b	117e0 <rb_helper_write@plt>
   1265c:	push	{fp, lr}
   12660:	mov	fp, sp
   12664:	movw	r0, #36283	; 0x8dbb
   12668:	movw	r1, #9952	; 0x26e0
   1266c:	movt	r0, #1
   12670:	movt	r1, #1
   12674:	bl	117bc <rb_dictionary_create@plt>
   12678:	movw	r1, #61820	; 0xf17c
   1267c:	mov	r2, #0
   12680:	mov	r3, #1
   12684:	movt	r1, #2
   12688:	str	r0, [r1]
   1268c:	movw	r0, #36304	; 0x8dd0
   12690:	movw	r1, #9960	; 0x26e8
   12694:	movt	r0, #1
   12698:	movt	r1, #1
   1269c:	bl	114d4 <rb_event_addish@plt>
   126a0:	movw	r1, #61320	; 0xef88
   126a4:	movt	r1, #2
   126a8:	str	r0, [r1]
   126ac:	movw	r0, #44456	; 0xada8
   126b0:	movt	r0, #2
   126b4:	bl	1281c <sprintf@plt+0xf94>
   126b8:	movw	r0, #44808	; 0xaf08
   126bc:	movt	r0, #2
   126c0:	bl	1281c <sprintf@plt+0xf94>
   126c4:	movw	r0, #44648	; 0xae68
   126c8:	movt	r0, #2
   126cc:	bl	1281c <sprintf@plt+0xf94>
   126d0:	movw	r0, #44560	; 0xae10
   126d4:	movt	r0, #2
   126d8:	pop	{fp, lr}
   126dc:	b	1281c <sprintf@plt+0xf94>
   126e0:	sub	r0, r1, r0
   126e4:	bx	lr
   126e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   126ec:	add	fp, sp, #24
   126f0:	sub	sp, sp, #8
   126f4:	bl	1169c <rb_current_time@plt>
   126f8:	movw	r7, #61820	; 0xf17c
   126fc:	mov	r4, r0
   12700:	mov	r5, sp
   12704:	movt	r7, #2
   12708:	mov	r1, r5
   1270c:	ldr	r0, [r7]
   12710:	bl	11678 <rb_dictionary_foreach_start@plt>
   12714:	ldr	r0, [r7]
   12718:	mov	r1, r5
   1271c:	bl	11588 <rb_dictionary_foreach_cur@plt>
   12720:	cmp	r0, #0
   12724:	beq	12814 <sprintf@plt+0xf8c>
   12728:	movw	r8, #61824	; 0xf180
   1272c:	mov	r6, r0
   12730:	mov	r9, sp
   12734:	movt	r8, #2
   12738:	b	12760 <sprintf@plt+0xed8>
   1273c:	ldr	r0, [r7]
   12740:	mov	r1, r9
   12744:	bl	11630 <rb_dictionary_foreach_next@plt>
   12748:	ldr	r0, [r7]
   1274c:	mov	r1, r9
   12750:	bl	11588 <rb_dictionary_foreach_cur@plt>
   12754:	mov	r6, r0
   12758:	cmp	r0, #0
   1275c:	beq	12814 <sprintf@plt+0xf8c>
   12760:	ldr	r0, [r6, #460]	; 0x1cc
   12764:	add	r0, r0, #1
   12768:	str	r0, [r6, #460]	; 0x1cc
   1276c:	ldr	r5, [r8]
   12770:	cmp	r5, #0
   12774:	bne	12794 <sprintf@plt+0xf0c>
   12778:	subs	r0, r0, #1
   1277c:	str	r0, [r6, #460]	; 0x1cc
   12780:	bne	1273c <sprintf@plt+0xeb4>
   12784:	b	127ec <sprintf@plt+0xf64>
   12788:	ldr	r5, [r5, #8]
   1278c:	cmp	r5, #0
   12790:	beq	127dc <sprintf@plt+0xf54>
   12794:	ldr	r0, [r5]
   12798:	ldr	r1, [r6, #464]	; 0x1d0
   1279c:	ldr	r2, [r0, #12]
   127a0:	add	r1, r1, r2, lsl #4
   127a4:	ldr	r2, [r1, #12]
   127a8:	cmp	r2, #1
   127ac:	bne	12788 <sprintf@plt+0xf00>
   127b0:	ldr	r1, [r1, #4]
   127b4:	cmp	r1, r4
   127b8:	bge	12788 <sprintf@plt+0xf00>
   127bc:	cmp	r1, #1
   127c0:	blt	12788 <sprintf@plt+0xf00>
   127c4:	ldr	r1, [r0, #40]	; 0x28
   127c8:	cmp	r1, #0
   127cc:	beq	12788 <sprintf@plt+0xf00>
   127d0:	mov	r0, r6
   127d4:	blx	r1
   127d8:	b	12788 <sprintf@plt+0xf00>
   127dc:	ldr	r0, [r6, #460]	; 0x1cc
   127e0:	subs	r0, r0, #1
   127e4:	str	r0, [r6, #460]	; 0x1cc
   127e8:	bne	1273c <sprintf@plt+0xeb4>
   127ec:	ldr	r1, [r6]
   127f0:	ldr	r0, [r7]
   127f4:	bl	116a8 <rb_dictionary_delete@plt>
   127f8:	ldr	r0, [r6, #464]	; 0x1d0
   127fc:	cmp	r0, #0
   12800:	beq	12808 <sprintf@plt+0xf80>
   12804:	bl	1163c <free@plt>
   12808:	mov	r0, r6
   1280c:	bl	1163c <free@plt>
   12810:	b	1273c <sprintf@plt+0xeb4>
   12814:	sub	sp, fp, #24
   12818:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1281c:	push	{r4, r5, r6, sl, fp, lr}
   12820:	add	fp, sp, #16
   12824:	movw	r1, #61324	; 0xef8c
   12828:	mov	r4, r0
   1282c:	movt	r1, #2
   12830:	ldr	r2, [r1, #12]
   12834:	cmp	r2, #0
   12838:	beq	1286c <sprintf@plt+0xfe4>
   1283c:	ldr	r0, [r1, #4]
   12840:	ldr	r3, [r0]
   12844:	cmp	r0, #0
   12848:	str	r3, [r4, #12]
   1284c:	beq	12998 <sprintf@plt+0x1110>
   12850:	ldr	r3, [r0, #8]
   12854:	ldr	r5, [r0, #4]
   12858:	cmp	r3, #0
   1285c:	beq	12890 <sprintf@plt+0x1008>
   12860:	str	r5, [r3, #4]
   12864:	ldr	r5, [r0, #4]
   12868:	b	12894 <sprintf@plt+0x100c>
   1286c:	ldr	r0, [r1]
   12870:	cmp	r0, #32
   12874:	cmnne	r0, #1
   12878:	bne	1297c <sprintf@plt+0x10f4>
   1287c:	movw	r1, #36402	; 0x8e32
   12880:	mov	r0, #87	; 0x57
   12884:	movt	r1, #1
   12888:	pop	{r4, r5, r6, sl, fp, lr}
   1288c:	b	12500 <sprintf@plt+0xc78>
   12890:	str	r5, [r1, #8]
   12894:	cmp	r5, #0
   12898:	add	r6, r5, #8
   1289c:	sub	r2, r2, #1
   128a0:	addeq	r6, r1, #4
   128a4:	cmp	r5, #0
   128a8:	str	r3, [r6]
   128ac:	mov	r6, #0
   128b0:	str	r6, [r0, #4]
   128b4:	str	r6, [r0, #8]
   128b8:	moveq	r0, r3
   128bc:	str	r2, [r1, #12]
   128c0:	bl	116c0 <rb_free_rb_dlink_node@plt>
   128c4:	ldr	r5, [r4, #56]	; 0x38
   128c8:	cmp	r5, #0
   128cc:	beq	128fc <sprintf@plt+0x1074>
   128d0:	ldr	r1, [r5]
   128d4:	cmp	r1, #0
   128d8:	beq	128fc <sprintf@plt+0x1074>
   128dc:	movw	r6, #61816	; 0xf178
   128e0:	movt	r6, #2
   128e4:	ldr	r0, [r6]
   128e8:	mov	r2, r5
   128ec:	bl	11768 <rb_dictionary_add@plt>
   128f0:	ldr	r1, [r5, #12]!
   128f4:	cmp	r1, #0
   128f8:	bne	128e4 <sprintf@plt+0x105c>
   128fc:	ldrb	r0, [r4, #48]	; 0x30
   12900:	cmp	r0, #0
   12904:	beq	12918 <sprintf@plt+0x1090>
   12908:	ldr	r1, [r4, #52]	; 0x34
   1290c:	movw	r2, #42344	; 0xa568
   12910:	movt	r2, #2
   12914:	str	r1, [r2, r0, lsl #2]
   12918:	ldr	r0, [r4, #24]
   1291c:	cmp	r0, #0
   12920:	beq	12928 <sprintf@plt+0x10a0>
   12924:	blx	r0
   12928:	mov	r0, #0
   1292c:	str	r0, [r4, #4]
   12930:	movw	r0, #61824	; 0xf180
   12934:	str	r4, [r4]
   12938:	movt	r0, #2
   1293c:	ldr	r1, [r0]
   12940:	cmp	r1, #0
   12944:	str	r1, [r4, #8]
   12948:	beq	12958 <sprintf@plt+0x10d0>
   1294c:	add	r1, r1, #4
   12950:	str	r4, [r1]
   12954:	b	12968 <sprintf@plt+0x10e0>
   12958:	mov	r1, r0
   1295c:	ldr	r2, [r1, #4]!
   12960:	cmp	r2, #0
   12964:	streq	r4, [r1]
   12968:	str	r4, [r0]
   1296c:	ldr	r1, [r0, #8]
   12970:	add	r1, r1, #1
   12974:	str	r1, [r0, #8]
   12978:	pop	{r4, r5, r6, sl, fp, pc}
   1297c:	add	r2, r0, #1
   12980:	str	r2, [r1]
   12984:	str	r0, [r4, #12]
   12988:	ldr	r5, [r4, #56]	; 0x38
   1298c:	cmp	r5, #0
   12990:	bne	128d0 <sprintf@plt+0x1048>
   12994:	b	128fc <sprintf@plt+0x1074>
   12998:	movw	r0, #36696	; 0x8f58
   1299c:	movw	r1, #36706	; 0x8f62
   129a0:	movw	r3, #36734	; 0x8f7e
   129a4:	mov	r2, #235	; 0xeb
   129a8:	movt	r0, #1
   129ac:	movt	r1, #1
   129b0:	movt	r3, #1
   129b4:	bl	11600 <__assert_fail@plt>
   129b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   129bc:	add	fp, sp, #24
   129c0:	sub	sp, sp, #8
   129c4:	movw	r9, #61820	; 0xf17c
   129c8:	mov	r5, sp
   129cc:	movt	r9, #2
   129d0:	mov	r1, r5
   129d4:	ldr	r0, [r9]
   129d8:	bl	11678 <rb_dictionary_foreach_start@plt>
   129dc:	ldr	r0, [r9]
   129e0:	mov	r1, r5
   129e4:	bl	11588 <rb_dictionary_foreach_cur@plt>
   129e8:	cmp	r0, #0
   129ec:	beq	12a88 <sprintf@plt+0x1200>
   129f0:	movw	r8, #36327	; 0x8de7
   129f4:	movw	r5, #36335	; 0x8def
   129f8:	mov	r7, r0
   129fc:	mov	r6, sp
   12a00:	movt	r8, #1
   12a04:	movt	r5, #1
   12a08:	b	12a30 <sprintf@plt+0x11a8>
   12a0c:	ldr	r0, [r9]
   12a10:	mov	r1, r6
   12a14:	bl	11630 <rb_dictionary_foreach_next@plt>
   12a18:	ldr	r0, [r9]
   12a1c:	mov	r1, r6
   12a20:	bl	11588 <rb_dictionary_foreach_cur@plt>
   12a24:	mov	r7, r0
   12a28:	cmp	r0, #0
   12a2c:	beq	12a88 <sprintf@plt+0x1200>
   12a30:	ldr	r0, [r7, #460]	; 0x1cc
   12a34:	mvn	r1, #0
   12a38:	mov	r2, r8
   12a3c:	mov	r3, r5
   12a40:	add	r0, r0, #1
   12a44:	str	r0, [r7, #460]	; 0x1cc
   12a48:	mov	r0, r7
   12a4c:	bl	12b34 <sprintf@plt+0x12ac>
   12a50:	ldr	r0, [r7, #460]	; 0x1cc
   12a54:	subs	r0, r0, #1
   12a58:	str	r0, [r7, #460]	; 0x1cc
   12a5c:	bne	12a0c <sprintf@plt+0x1184>
   12a60:	ldr	r1, [r7]
   12a64:	ldr	r0, [r9]
   12a68:	bl	116a8 <rb_dictionary_delete@plt>
   12a6c:	ldr	r0, [r7, #464]	; 0x1d0
   12a70:	cmp	r0, #0
   12a74:	beq	12a7c <sprintf@plt+0x11f4>
   12a78:	bl	1163c <free@plt>
   12a7c:	mov	r0, r7
   12a80:	bl	1163c <free@plt>
   12a84:	b	12a0c <sprintf@plt+0x1184>
   12a88:	movw	r5, #61824	; 0xf180
   12a8c:	movt	r5, #2
   12a90:	ldr	r7, [r5]
   12a94:	cmp	r7, #0
   12a98:	beq	12b0c <sprintf@plt+0x1284>
   12a9c:	mov	r6, #0
   12aa0:	b	12ad8 <sprintf@plt+0x1250>
   12aa4:	str	r1, [r5, #4]
   12aa8:	cmp	r1, #0
   12aac:	mov	r2, r5
   12ab0:	addne	r2, r1, #8
   12ab4:	cmp	r4, #0
   12ab8:	str	r0, [r2]
   12abc:	str	r6, [r7, #4]
   12ac0:	str	r6, [r7, #8]
   12ac4:	mov	r7, r4
   12ac8:	ldr	r0, [r5, #8]
   12acc:	sub	r0, r0, #1
   12ad0:	str	r0, [r5, #8]
   12ad4:	beq	12b0c <sprintf@plt+0x1284>
   12ad8:	ldr	r0, [r7]
   12adc:	ldr	r4, [r7, #8]
   12ae0:	ldr	r0, [r0, #28]
   12ae4:	cmp	r0, #0
   12ae8:	beq	12af0 <sprintf@plt+0x1268>
   12aec:	blx	r0
   12af0:	ldr	r0, [r7, #8]
   12af4:	ldr	r1, [r7, #4]
   12af8:	cmp	r0, #0
   12afc:	beq	12aa4 <sprintf@plt+0x121c>
   12b00:	str	r1, [r0, #4]
   12b04:	ldr	r1, [r7, #4]
   12b08:	b	12aa8 <sprintf@plt+0x1220>
   12b0c:	ldr	r0, [r9]
   12b10:	mov	r1, #0
   12b14:	mov	r2, #0
   12b18:	bl	11708 <rb_dictionary_destroy@plt>
   12b1c:	movw	r0, #61320	; 0xef88
   12b20:	movt	r0, #2
   12b24:	ldr	r0, [r0]
   12b28:	bl	1151c <rb_event_delete@plt>
   12b2c:	sub	sp, fp, #24
   12b30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12b34:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b38:	add	fp, sp, #24
   12b3c:	sub	sp, sp, #536	; 0x218
   12b40:	mov	r6, r3
   12b44:	add	r8, sp, #24
   12b48:	mov	r7, r2
   12b4c:	mov	r5, r1
   12b50:	mov	r4, r0
   12b54:	add	r3, fp, #8
   12b58:	mov	r1, #512	; 0x200
   12b5c:	mov	r0, r8
   12b60:	mov	r2, r6
   12b64:	str	r3, [sp, #20]
   12b68:	bl	1154c <vsnprintf@plt>
   12b6c:	movw	r0, #44880	; 0xaf50
   12b70:	ldr	r2, [r4]
   12b74:	cmn	r5, #1
   12b78:	movt	r0, #2
   12b7c:	ldr	r0, [r0]
   12b80:	beq	12bec <sprintf@plt+0x1364>
   12b84:	ldr	r1, [r4, #464]	; 0x1d0
   12b88:	cmp	r7, #0
   12b8c:	add	r6, r4, #440	; 0x1b8
   12b90:	ldr	r1, [r1, r5, lsl #4]
   12b94:	ldrb	r3, [r1, #20]
   12b98:	movw	r1, #36220	; 0x8d7c
   12b9c:	movt	r1, #1
   12ba0:	movne	r1, r7
   12ba4:	add	r7, r4, #376	; 0x178
   12ba8:	stm	sp, {r6, r7}
   12bac:	str	r8, [sp, #12]
   12bb0:	str	r1, [sp, #8]
   12bb4:	movw	r1, #36448	; 0x8e60
   12bb8:	movt	r1, #1
   12bbc:	bl	117e0 <rb_helper_write@plt>
   12bc0:	ldr	r0, [r4, #464]	; 0x1d0
   12bc4:	mov	r1, #2
   12bc8:	add	r0, r0, r5, lsl #4
   12bcc:	str	r1, [r0, #12]
   12bd0:	ldr	r0, [r4, #456]	; 0x1c8
   12bd4:	sub	r0, r0, #1
   12bd8:	str	r0, [r4, #456]	; 0x1c8
   12bdc:	ldrb	r0, [r4, #452]	; 0x1c4
   12be0:	cmp	r0, #0
   12be4:	bne	12c9c <sprintf@plt+0x1414>
   12be8:	b	12c30 <sprintf@plt+0x13a8>
   12bec:	movw	r1, #36220	; 0x8d7c
   12bf0:	cmp	r7, #0
   12bf4:	add	r3, r4, #376	; 0x178
   12bf8:	str	r8, [sp, #12]
   12bfc:	movt	r1, #1
   12c00:	movne	r1, r7
   12c04:	add	r7, r4, #440	; 0x1b8
   12c08:	str	r3, [sp, #4]
   12c0c:	mov	r3, #42	; 0x2a
   12c10:	str	r1, [sp, #8]
   12c14:	movw	r1, #36448	; 0x8e60
   12c18:	str	r7, [sp]
   12c1c:	movt	r1, #1
   12c20:	bl	117e0 <rb_helper_write@plt>
   12c24:	ldrb	r0, [r4, #452]	; 0x1c4
   12c28:	cmp	r0, #0
   12c2c:	bne	12c9c <sprintf@plt+0x1414>
   12c30:	mov	r0, #1
   12c34:	strb	r0, [r4, #452]	; 0x1c4
   12c38:	ldr	r0, [r4, #456]	; 0x1c8
   12c3c:	cmp	r0, #0
   12c40:	beq	12c9c <sprintf@plt+0x1414>
   12c44:	movw	r0, #61824	; 0xf180
   12c48:	movt	r0, #2
   12c4c:	ldr	r5, [r0]
   12c50:	cmp	r5, #0
   12c54:	bne	12c68 <sprintf@plt+0x13e0>
   12c58:	b	12c9c <sprintf@plt+0x1414>
   12c5c:	ldr	r5, [r5, #8]
   12c60:	cmp	r5, #0
   12c64:	beq	12c9c <sprintf@plt+0x1414>
   12c68:	ldr	r0, [r5]
   12c6c:	ldr	r1, [r0, #36]	; 0x24
   12c70:	cmp	r1, #0
   12c74:	beq	12c5c <sprintf@plt+0x13d4>
   12c78:	ldr	r0, [r0, #12]
   12c7c:	ldr	r2, [r4, #464]	; 0x1d0
   12c80:	add	r0, r2, r0, lsl #4
   12c84:	ldr	r0, [r0, #12]
   12c88:	cmp	r0, #1
   12c8c:	bne	12c5c <sprintf@plt+0x13d4>
   12c90:	mov	r0, r4
   12c94:	blx	r1
   12c98:	b	12c5c <sprintf@plt+0x13d4>
   12c9c:	sub	sp, fp, #24
   12ca0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12ca4:	push	{r4, r5, r6, sl, fp, lr}
   12ca8:	add	fp, sp, #16
   12cac:	mov	r4, r0
   12cb0:	ldr	r0, [r0, #56]	; 0x38
   12cb4:	cmp	r0, #0
   12cb8:	beq	12ce8 <sprintf@plt+0x1460>
   12cbc:	ldr	r1, [r0]
   12cc0:	cmp	r1, #0
   12cc4:	beq	12ce8 <sprintf@plt+0x1460>
   12cc8:	movw	r6, #61816	; 0xf178
   12ccc:	add	r5, r0, #12
   12cd0:	movt	r6, #2
   12cd4:	ldr	r0, [r6]
   12cd8:	bl	116a8 <rb_dictionary_delete@plt>
   12cdc:	ldr	r1, [r5], #12
   12ce0:	cmp	r1, #0
   12ce4:	bne	12cd4 <sprintf@plt+0x144c>
   12ce8:	ldrb	r0, [r4, #48]	; 0x30
   12cec:	cmp	r0, #0
   12cf0:	movwne	r1, #42344	; 0xa568
   12cf4:	movne	r2, #0
   12cf8:	movtne	r1, #2
   12cfc:	strne	r2, [r1, r0, lsl #2]
   12d00:	ldr	r0, [r4, #28]
   12d04:	cmp	r0, #0
   12d08:	beq	12d10 <sprintf@plt+0x1488>
   12d0c:	blx	r0
   12d10:	ldr	r1, [r4, #8]
   12d14:	ldr	r2, [r4, #4]
   12d18:	movw	r0, #61824	; 0xf180
   12d1c:	movt	r0, #2
   12d20:	cmp	r1, #0
   12d24:	beq	12d34 <sprintf@plt+0x14ac>
   12d28:	str	r2, [r1, #4]
   12d2c:	ldr	r2, [r4, #4]
   12d30:	b	12d38 <sprintf@plt+0x14b0>
   12d34:	str	r2, [r0, #4]
   12d38:	cmp	r2, #0
   12d3c:	mov	r3, r0
   12d40:	addne	r3, r2, #8
   12d44:	str	r1, [r3]
   12d48:	mov	r1, #0
   12d4c:	str	r1, [r4, #4]
   12d50:	str	r1, [r4, #8]
   12d54:	ldr	r1, [r0, #8]
   12d58:	sub	r1, r1, #1
   12d5c:	str	r1, [r0, #8]
   12d60:	ldr	r4, [r4, #12]
   12d64:	bl	11804 <rb_make_rb_dlink_node@plt>
   12d68:	cmp	r4, #0
   12d6c:	beq	12dcc <sprintf@plt+0x1544>
   12d70:	cmp	r0, #0
   12d74:	beq	12dec <sprintf@plt+0x1564>
   12d78:	mov	r1, #0
   12d7c:	str	r1, [r0, #4]
   12d80:	movw	r1, #61324	; 0xef8c
   12d84:	str	r4, [r0]
   12d88:	movt	r1, #2
   12d8c:	ldr	r2, [r1, #4]
   12d90:	cmp	r2, #0
   12d94:	str	r2, [r0, #8]
   12d98:	beq	12da8 <sprintf@plt+0x1520>
   12d9c:	add	r2, r2, #4
   12da0:	str	r0, [r2]
   12da4:	b	12db8 <sprintf@plt+0x1530>
   12da8:	mov	r2, r1
   12dac:	ldr	r3, [r2, #8]!
   12db0:	cmp	r3, #0
   12db4:	streq	r0, [r2]
   12db8:	str	r0, [r1, #4]
   12dbc:	ldr	r0, [r1, #12]
   12dc0:	add	r0, r0, #1
   12dc4:	str	r0, [r1, #12]
   12dc8:	pop	{r4, r5, r6, sl, fp, pc}
   12dcc:	movw	r0, #36788	; 0x8fb4
   12dd0:	movw	r1, #36706	; 0x8f62
   12dd4:	movw	r3, #36801	; 0x8fc1
   12dd8:	mov	r2, #143	; 0x8f
   12ddc:	movt	r0, #1
   12de0:	movt	r1, #1
   12de4:	movt	r3, #1
   12de8:	bl	11600 <__assert_fail@plt>
   12dec:	movw	r0, #36696	; 0x8f58
   12df0:	movw	r1, #36706	; 0x8f62
   12df4:	movw	r3, #36801	; 0x8fc1
   12df8:	mov	r2, #144	; 0x90
   12dfc:	movt	r0, #1
   12e00:	movt	r1, #1
   12e04:	movt	r3, #1
   12e08:	bl	11600 <__assert_fail@plt>
   12e0c:	push	{r4, sl, fp, lr}
   12e10:	add	fp, sp, #8
   12e14:	mov	r4, r0
   12e18:	ldr	r1, [r0]
   12e1c:	movw	r0, #61820	; 0xf17c
   12e20:	movt	r0, #2
   12e24:	ldr	r0, [r0]
   12e28:	bl	116a8 <rb_dictionary_delete@plt>
   12e2c:	ldr	r0, [r4, #464]	; 0x1d0
   12e30:	cmp	r0, #0
   12e34:	beq	12e3c <sprintf@plt+0x15b4>
   12e38:	bl	1163c <free@plt>
   12e3c:	mov	r0, r4
   12e40:	pop	{r4, sl, fp, lr}
   12e44:	b	1163c <free@plt>
   12e48:	push	{r4, r5, fp, lr}
   12e4c:	add	fp, sp, #8
   12e50:	mov	r4, r0
   12e54:	ldrb	r0, [r0, #452]	; 0x1c4
   12e58:	cmp	r0, #0
   12e5c:	bne	12ecc <sprintf@plt+0x1644>
   12e60:	mov	r0, #1
   12e64:	strb	r0, [r4, #452]	; 0x1c4
   12e68:	ldr	r0, [r4, #456]	; 0x1c8
   12e6c:	cmp	r0, #0
   12e70:	popeq	{r4, r5, fp, pc}
   12e74:	movw	r0, #61824	; 0xf180
   12e78:	movt	r0, #2
   12e7c:	ldr	r5, [r0]
   12e80:	cmp	r5, #0
   12e84:	bne	12e98 <sprintf@plt+0x1610>
   12e88:	b	12ecc <sprintf@plt+0x1644>
   12e8c:	ldr	r5, [r5, #8]
   12e90:	cmp	r5, #0
   12e94:	beq	12ecc <sprintf@plt+0x1644>
   12e98:	ldr	r0, [r5]
   12e9c:	ldr	r1, [r0, #36]	; 0x24
   12ea0:	cmp	r1, #0
   12ea4:	beq	12e8c <sprintf@plt+0x1604>
   12ea8:	ldr	r0, [r0, #12]
   12eac:	ldr	r2, [r4, #464]	; 0x1d0
   12eb0:	add	r0, r2, r0, lsl #4
   12eb4:	ldr	r0, [r0, #12]
   12eb8:	cmp	r0, #1
   12ebc:	bne	12e8c <sprintf@plt+0x1604>
   12ec0:	mov	r0, r4
   12ec4:	blx	r1
   12ec8:	b	12e8c <sprintf@plt+0x1604>
   12ecc:	pop	{r4, r5, fp, pc}
   12ed0:	push	{r4, r5, r6, sl, fp, lr}
   12ed4:	add	fp, sp, #16
   12ed8:	sub	sp, sp, #8
   12edc:	mov	r4, r0
   12ee0:	ldr	r0, [r0, #464]	; 0x1d0
   12ee4:	mov	r5, r1
   12ee8:	add	r0, r0, r1, lsl #4
   12eec:	mov	r1, #2
   12ef0:	str	r1, [r0, #12]
   12ef4:	ldr	r0, [r4, #456]	; 0x1c8
   12ef8:	subs	r0, r0, #1
   12efc:	str	r0, [r4, #456]	; 0x1c8
   12f00:	bne	12f10 <sprintf@plt+0x1688>
   12f04:	ldrb	r0, [r4, #451]	; 0x1c3
   12f08:	cmp	r0, #0
   12f0c:	beq	12f6c <sprintf@plt+0x16e4>
   12f10:	movw	r0, #61824	; 0xf180
   12f14:	movt	r0, #2
   12f18:	ldr	r6, [r0]
   12f1c:	cmp	r6, #0
   12f20:	bne	12f34 <sprintf@plt+0x16ac>
   12f24:	b	1300c <sprintf@plt+0x1784>
   12f28:	ldr	r6, [r6, #8]
   12f2c:	cmp	r6, #0
   12f30:	beq	1300c <sprintf@plt+0x1784>
   12f34:	ldr	r0, [r6]
   12f38:	ldr	r2, [r0, #44]	; 0x2c
   12f3c:	cmp	r2, #0
   12f40:	beq	12f28 <sprintf@plt+0x16a0>
   12f44:	ldr	r0, [r0, #12]
   12f48:	ldr	r1, [r4, #464]	; 0x1d0
   12f4c:	add	r0, r1, r0, lsl #4
   12f50:	ldr	r0, [r0, #12]
   12f54:	cmp	r0, #1
   12f58:	bne	12f28 <sprintf@plt+0x16a0>
   12f5c:	mov	r0, r4
   12f60:	mov	r1, r5
   12f64:	blx	r2
   12f68:	b	12f28 <sprintf@plt+0x16a0>
   12f6c:	movw	r0, #44880	; 0xaf50
   12f70:	ldr	r2, [r4]
   12f74:	add	r1, r4, #376	; 0x178
   12f78:	add	r3, r4, #440	; 0x1b8
   12f7c:	movt	r0, #2
   12f80:	str	r1, [sp]
   12f84:	movw	r1, #36469	; 0x8e75
   12f88:	movt	r1, #1
   12f8c:	ldr	r0, [r0]
   12f90:	bl	117e0 <rb_helper_write@plt>
   12f94:	ldrb	r0, [r4, #452]	; 0x1c4
   12f98:	cmp	r0, #0
   12f9c:	bne	1300c <sprintf@plt+0x1784>
   12fa0:	mov	r0, #1
   12fa4:	strb	r0, [r4, #452]	; 0x1c4
   12fa8:	ldr	r0, [r4, #456]	; 0x1c8
   12fac:	cmp	r0, #0
   12fb0:	beq	1300c <sprintf@plt+0x1784>
   12fb4:	movw	r0, #61824	; 0xf180
   12fb8:	movt	r0, #2
   12fbc:	ldr	r5, [r0]
   12fc0:	cmp	r5, #0
   12fc4:	bne	12fd8 <sprintf@plt+0x1750>
   12fc8:	b	1300c <sprintf@plt+0x1784>
   12fcc:	ldr	r5, [r5, #8]
   12fd0:	cmp	r5, #0
   12fd4:	beq	1300c <sprintf@plt+0x1784>
   12fd8:	ldr	r0, [r5]
   12fdc:	ldr	r1, [r0, #36]	; 0x24
   12fe0:	cmp	r1, #0
   12fe4:	beq	12fcc <sprintf@plt+0x1744>
   12fe8:	ldr	r0, [r0, #12]
   12fec:	ldr	r2, [r4, #464]	; 0x1d0
   12ff0:	add	r0, r2, r0, lsl #4
   12ff4:	ldr	r0, [r0, #12]
   12ff8:	cmp	r0, #1
   12ffc:	bne	12fcc <sprintf@plt+0x1744>
   13000:	mov	r0, r4
   13004:	blx	r1
   13008:	b	12fcc <sprintf@plt+0x1744>
   1300c:	sub	sp, fp, #16
   13010:	pop	{r4, r5, r6, sl, fp, pc}
   13014:	push	{r4, r5, fp, lr}
   13018:	add	fp, sp, #8
   1301c:	sub	sp, sp, #8
   13020:	mov	r4, r0
   13024:	ldr	r2, [r0]
   13028:	movw	r0, #44880	; 0xaf50
   1302c:	movt	r0, #2
   13030:	add	r1, r4, #376	; 0x178
   13034:	add	r3, r4, #440	; 0x1b8
   13038:	str	r1, [sp]
   1303c:	movw	r1, #36469	; 0x8e75
   13040:	ldr	r0, [r0]
   13044:	movt	r1, #1
   13048:	bl	117e0 <rb_helper_write@plt>
   1304c:	ldrb	r0, [r4, #452]	; 0x1c4
   13050:	cmp	r0, #0
   13054:	bne	130c4 <sprintf@plt+0x183c>
   13058:	mov	r0, #1
   1305c:	strb	r0, [r4, #452]	; 0x1c4
   13060:	ldr	r0, [r4, #456]	; 0x1c8
   13064:	cmp	r0, #0
   13068:	beq	130c4 <sprintf@plt+0x183c>
   1306c:	movw	r0, #61824	; 0xf180
   13070:	movt	r0, #2
   13074:	ldr	r5, [r0]
   13078:	cmp	r5, #0
   1307c:	bne	13090 <sprintf@plt+0x1808>
   13080:	b	130c4 <sprintf@plt+0x183c>
   13084:	ldr	r5, [r5, #8]
   13088:	cmp	r5, #0
   1308c:	beq	130c4 <sprintf@plt+0x183c>
   13090:	ldr	r0, [r5]
   13094:	ldr	r1, [r0, #36]	; 0x24
   13098:	cmp	r1, #0
   1309c:	beq	13084 <sprintf@plt+0x17fc>
   130a0:	ldr	r0, [r0, #12]
   130a4:	ldr	r2, [r4, #464]	; 0x1d0
   130a8:	add	r0, r2, r0, lsl #4
   130ac:	ldr	r0, [r0, #12]
   130b0:	cmp	r0, #1
   130b4:	bne	13084 <sprintf@plt+0x17fc>
   130b8:	mov	r0, r4
   130bc:	blx	r1
   130c0:	b	13084 <sprintf@plt+0x17fc>
   130c4:	sub	sp, fp, #8
   130c8:	pop	{r4, r5, fp, pc}
   130cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130d0:	add	fp, sp, #28
   130d4:	sub	sp, sp, #28
   130d8:	mov	r2, r0
   130dc:	cmp	r0, #5
   130e0:	ble	13404 <sprintf@plt+0x1b7c>
   130e4:	ldr	sl, [r1, #4]
   130e8:	ldr	r9, [r1, #8]
   130ec:	ldr	r7, [r1, #12]
   130f0:	ldr	r5, [r1, #16]
   130f4:	ldr	r4, [r1, #20]
   130f8:	cmp	r2, #6
   130fc:	bne	1310c <sprintf@plt+0x1884>
   13100:	movw	r6, #36920	; 0x9038
   13104:	movt	r6, #1
   13108:	b	13110 <sprintf@plt+0x1888>
   1310c:	ldr	r6, [r1, #24]
   13110:	mov	r0, sl
   13114:	mov	r1, #0
   13118:	mov	r2, #16
   1311c:	bl	11624 <strtoull@plt>
   13120:	mov	r8, r0
   13124:	subs	r0, r0, #1
   13128:	mvn	r2, #1
   1312c:	sbc	r1, r1, #0
   13130:	subs	r0, r2, r0
   13134:	rscs	r0, r1, #0
   13138:	bcc	133d0 <sprintf@plt+0x1b48>
   1313c:	mov	r0, #1
   13140:	mov	r1, #468	; 0x1d4
   13144:	str	r6, [sp, #8]
   13148:	str	r9, [sp, #12]
   1314c:	str	r5, [sp, #16]
   13150:	str	r7, [sp, #20]
   13154:	str	r4, [sp, #24]
   13158:	mov	r5, #1
   1315c:	bl	115a0 <calloc@plt>
   13160:	cmp	r0, #0
   13164:	beq	1341c <sprintf@plt+0x1b94>
   13168:	movw	r9, #61820	; 0xf17c
   1316c:	str	r8, [r0]
   13170:	mov	r4, r0
   13174:	str	r5, [r0, #460]	; 0x1cc
   13178:	mov	r1, r8
   1317c:	movt	r9, #2
   13180:	ldr	r0, [r9]
   13184:	bl	117b0 <rb_dictionary_find@plt>
   13188:	cmp	r0, #0
   1318c:	bne	13420 <sprintf@plt+0x1b98>
   13190:	ldr	r1, [r4]
   13194:	ldr	r0, [r9]
   13198:	mov	r2, r4
   1319c:	bl	11768 <rb_dictionary_add@plt>
   131a0:	ldr	r0, [sp, #8]
   131a4:	mov	r1, #0
   131a8:	mov	r2, #16
   131ac:	bl	11624 <strtoull@plt>
   131b0:	ldr	r5, [sp, #12]
   131b4:	str	r0, [r4, #4]
   131b8:	add	r0, r4, #8
   131bc:	mov	r2, #54	; 0x36
   131c0:	mov	r1, r5
   131c4:	bl	11618 <rb_strlcpy@plt>
   131c8:	ldr	r0, [sp, #20]
   131cc:	mov	r1, #0
   131d0:	mov	r2, #10
   131d4:	bl	116e4 <strtol@plt>
   131d8:	strh	r0, [r4, #62]	; 0x3e
   131dc:	add	r1, r4, #64	; 0x40
   131e0:	mov	r0, r5
   131e4:	bl	11684 <rb_inet_pton_sock@plt>
   131e8:	ldrh	r0, [r4, #62]	; 0x3e
   131ec:	ldr	r5, [sp, #16]
   131f0:	mov	r2, #54	; 0x36
   131f4:	rev16	r0, r0
   131f8:	mov	r1, r5
   131fc:	strh	r0, [r4, #66]	; 0x42
   13200:	add	r0, r4, #192	; 0xc0
   13204:	bl	11618 <rb_strlcpy@plt>
   13208:	ldr	r0, [sp, #24]
   1320c:	mov	r1, #0
   13210:	mov	r2, #10
   13214:	bl	116e4 <strtol@plt>
   13218:	strh	r0, [r4, #246]	; 0xf6
   1321c:	add	r1, r4, #248	; 0xf8
   13220:	mov	r0, r5
   13224:	bl	11684 <rb_inet_pton_sock@plt>
   13228:	ldrh	r0, [r4, #246]	; 0xf6
   1322c:	movw	r7, #36220	; 0x8d7c
   13230:	add	r9, r4, #376	; 0x178
   13234:	mov	r2, #64	; 0x40
   13238:	movt	r7, #1
   1323c:	mov	r1, r7
   13240:	rev16	r0, r0
   13244:	strh	r0, [r4, #250]	; 0xfa
   13248:	mov	r0, r9
   1324c:	bl	11618 <rb_strlcpy@plt>
   13250:	add	r6, r4, #440	; 0x1b8
   13254:	mov	r1, r7
   13258:	mov	r2, #11
   1325c:	mov	r0, r6
   13260:	bl	11618 <rb_strlcpy@plt>
   13264:	movw	r0, #61324	; 0xef8c
   13268:	mov	r5, #1
   1326c:	movt	r0, #2
   13270:	ldr	r0, [r0]
   13274:	lsl	r1, r0, #4
   13278:	mov	r0, #1
   1327c:	bl	115a0 <calloc@plt>
   13280:	cmp	r0, #0
   13284:	beq	1341c <sprintf@plt+0x1b94>
   13288:	movw	r8, #61824	; 0xf180
   1328c:	movw	sl, #61820	; 0xf17c
   13290:	strb	r5, [r4, #451]	; 0x1c3
   13294:	str	r0, [r4, #464]	; 0x1d0
   13298:	movt	r8, #2
   1329c:	movt	sl, #2
   132a0:	ldr	r7, [r8]
   132a4:	cmp	r7, #0
   132a8:	beq	13318 <sprintf@plt+0x1a90>
   132ac:	ldr	r1, [r7]
   132b0:	mov	r5, #1
   132b4:	ldr	r2, [r1, #12]
   132b8:	str	r1, [r0, r2, lsl #4]!
   132bc:	ldr	r2, [r4, #456]	; 0x1c8
   132c0:	add	r2, r2, #1
   132c4:	str	r2, [r4, #456]	; 0x1c8
   132c8:	str	r5, [r0, #12]
   132cc:	mov	r0, r4
   132d0:	ldr	r1, [r1, #32]
   132d4:	blx	r1
   132d8:	cmp	r0, #0
   132dc:	beq	133c0 <sprintf@plt+0x1b38>
   132e0:	ldrb	r0, [r4, #452]	; 0x1c4
   132e4:	cmp	r0, #0
   132e8:	bne	13318 <sprintf@plt+0x1a90>
   132ec:	ldr	r7, [r7, #8]
   132f0:	cmp	r7, #0
   132f4:	beq	13318 <sprintf@plt+0x1a90>
   132f8:	ldr	r1, [r7]
   132fc:	ldr	r0, [r4, #464]	; 0x1d0
   13300:	ldr	r2, [r1, #12]
   13304:	str	r1, [r0, r2, lsl #4]!
   13308:	ldr	r2, [r4, #456]	; 0x1c8
   1330c:	add	r2, r2, #1
   13310:	str	r2, [r4, #456]	; 0x1c8
   13314:	b	132c8 <sprintf@plt+0x1a40>
   13318:	mov	r0, #0
   1331c:	strb	r0, [r4, #451]	; 0x1c3
   13320:	ldr	r0, [r4, #456]	; 0x1c8
   13324:	cmp	r0, #0
   13328:	bne	133c0 <sprintf@plt+0x1b38>
   1332c:	movw	r0, #44880	; 0xaf50
   13330:	ldr	r2, [r4]
   13334:	movw	r1, #36469	; 0x8e75
   13338:	mov	r3, r6
   1333c:	movt	r0, #2
   13340:	movt	r1, #1
   13344:	ldr	r0, [r0]
   13348:	str	r9, [sp]
   1334c:	bl	117e0 <rb_helper_write@plt>
   13350:	ldrb	r0, [r4, #452]	; 0x1c4
   13354:	cmp	r0, #0
   13358:	bne	133c0 <sprintf@plt+0x1b38>
   1335c:	mov	r0, #1
   13360:	strb	r0, [r4, #452]	; 0x1c4
   13364:	ldr	r0, [r4, #456]	; 0x1c8
   13368:	cmp	r0, #0
   1336c:	beq	133c0 <sprintf@plt+0x1b38>
   13370:	ldr	r5, [r8]
   13374:	cmp	r5, #0
   13378:	bne	1338c <sprintf@plt+0x1b04>
   1337c:	b	133c0 <sprintf@plt+0x1b38>
   13380:	ldr	r5, [r5, #8]
   13384:	cmp	r5, #0
   13388:	beq	133c0 <sprintf@plt+0x1b38>
   1338c:	ldr	r0, [r5]
   13390:	ldr	r1, [r0, #36]	; 0x24
   13394:	cmp	r1, #0
   13398:	beq	13380 <sprintf@plt+0x1af8>
   1339c:	ldr	r0, [r0, #12]
   133a0:	ldr	r2, [r4, #464]	; 0x1d0
   133a4:	add	r0, r2, r0, lsl #4
   133a8:	ldr	r0, [r0, #12]
   133ac:	cmp	r0, #1
   133b0:	bne	13380 <sprintf@plt+0x1af8>
   133b4:	mov	r0, r4
   133b8:	blx	r1
   133bc:	b	13380 <sprintf@plt+0x1af8>
   133c0:	ldr	r0, [r4, #460]	; 0x1cc
   133c4:	subs	r0, r0, #1
   133c8:	str	r0, [r4, #460]	; 0x1cc
   133cc:	beq	133d8 <sprintf@plt+0x1b50>
   133d0:	sub	sp, fp, #28
   133d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133d8:	ldr	r1, [r4]
   133dc:	ldr	r0, [sl]
   133e0:	bl	116a8 <rb_dictionary_delete@plt>
   133e4:	ldr	r0, [r4, #464]	; 0x1d0
   133e8:	cmp	r0, #0
   133ec:	beq	133f4 <sprintf@plt+0x1b6c>
   133f0:	bl	1163c <free@plt>
   133f4:	mov	r0, r4
   133f8:	sub	sp, fp, #28
   133fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13400:	b	1163c <free@plt>
   13404:	movw	r1, #36480	; 0x8e80
   13408:	mov	r0, #67	; 0x43
   1340c:	movt	r1, #1
   13410:	bl	12500 <sprintf@plt+0xc78>
   13414:	mov	r0, #3
   13418:	bl	11870 <exit@plt>
   1341c:	bl	11750 <rb_outofmemory@plt>
   13420:	movw	r1, #36860	; 0x8ffc
   13424:	mov	r0, #67	; 0x43
   13428:	mov	r2, sl
   1342c:	movt	r1, #1
   13430:	bl	12500 <sprintf@plt+0xc78>
   13434:	mov	r0, #3
   13438:	bl	11870 <exit@plt>
   1343c:	push	{r4, r5, r6, sl, fp, lr}
   13440:	add	fp, sp, #16
   13444:	cmp	r0, #1
   13448:	ble	13560 <sprintf@plt+0x1cd8>
   1344c:	ldr	r0, [r1, #4]
   13450:	mov	r4, r1
   13454:	mov	r1, #0
   13458:	mov	r2, #16
   1345c:	bl	11624 <strtoull@plt>
   13460:	mov	r2, r0
   13464:	subs	r0, r0, #1
   13468:	mvn	r3, #0
   1346c:	sbc	r1, r1, #0
   13470:	subs	r0, r0, r3
   13474:	sbcs	r0, r1, #0
   13478:	bcs	1357c <sprintf@plt+0x1cf4>
   1347c:	movw	r5, #61820	; 0xf17c
   13480:	mov	r1, r2
   13484:	movt	r5, #2
   13488:	ldr	r0, [r5]
   1348c:	bl	11744 <rb_dictionary_retrieve@plt>
   13490:	cmp	r0, #0
   13494:	beq	134e8 <sprintf@plt+0x1c60>
   13498:	mov	r4, r0
   1349c:	ldr	r0, [r0, #460]	; 0x1cc
   134a0:	add	r0, r0, #1
   134a4:	str	r0, [r4, #460]	; 0x1cc
   134a8:	ldrb	r1, [r4, #452]	; 0x1c4
   134ac:	cmp	r1, #0
   134b0:	beq	134ec <sprintf@plt+0x1c64>
   134b4:	subs	r0, r0, #1
   134b8:	str	r0, [r4, #460]	; 0x1cc
   134bc:	popne	{r4, r5, r6, sl, fp, pc}
   134c0:	ldr	r1, [r4]
   134c4:	ldr	r0, [r5]
   134c8:	bl	116a8 <rb_dictionary_delete@plt>
   134cc:	ldr	r0, [r4, #464]	; 0x1d0
   134d0:	cmp	r0, #0
   134d4:	beq	134dc <sprintf@plt+0x1c54>
   134d8:	bl	1163c <free@plt>
   134dc:	mov	r0, r4
   134e0:	pop	{r4, r5, r6, sl, fp, lr}
   134e4:	b	1163c <free@plt>
   134e8:	pop	{r4, r5, r6, sl, fp, pc}
   134ec:	mov	r1, #1
   134f0:	strb	r1, [r4, #452]	; 0x1c4
   134f4:	ldr	r1, [r4, #456]	; 0x1c8
   134f8:	cmp	r1, #0
   134fc:	beq	134b4 <sprintf@plt+0x1c2c>
   13500:	movw	r1, #61824	; 0xf180
   13504:	movt	r1, #2
   13508:	ldr	r6, [r1]
   1350c:	cmp	r6, #0
   13510:	bne	13524 <sprintf@plt+0x1c9c>
   13514:	b	134b4 <sprintf@plt+0x1c2c>
   13518:	ldr	r6, [r6, #8]
   1351c:	cmp	r6, #0
   13520:	beq	13558 <sprintf@plt+0x1cd0>
   13524:	ldr	r0, [r6]
   13528:	ldr	r1, [r0, #36]	; 0x24
   1352c:	cmp	r1, #0
   13530:	beq	13518 <sprintf@plt+0x1c90>
   13534:	ldr	r0, [r0, #12]
   13538:	ldr	r2, [r4, #464]	; 0x1d0
   1353c:	add	r0, r2, r0, lsl #4
   13540:	ldr	r0, [r0, #12]
   13544:	cmp	r0, #1
   13548:	bne	13518 <sprintf@plt+0x1c90>
   1354c:	mov	r0, r4
   13550:	blx	r1
   13554:	b	13518 <sprintf@plt+0x1c90>
   13558:	ldr	r0, [r4, #460]	; 0x1cc
   1355c:	b	134b4 <sprintf@plt+0x1c2c>
   13560:	movw	r1, #36554	; 0x8eca
   13564:	mov	r2, r0
   13568:	movt	r1, #1
   1356c:	mov	r0, #67	; 0x43
   13570:	bl	12500 <sprintf@plt+0xc78>
   13574:	mov	r0, #3
   13578:	bl	11870 <exit@plt>
   1357c:	ldr	r2, [r4, #4]
   13580:	movw	r1, #36628	; 0x8f14
   13584:	movt	r1, #1
   13588:	mov	r0, #67	; 0x43
   1358c:	bl	12500 <sprintf@plt+0xc78>
   13590:	mov	r0, #3
   13594:	bl	11870 <exit@plt>
   13598:	push	{r4, sl, fp, lr}
   1359c:	add	fp, sp, #8
   135a0:	bl	14680 <sprintf@plt+0x2df8>
   135a4:	movw	r0, #61408	; 0xefe0
   135a8:	movw	r4, #61344	; 0xefa0
   135ac:	movt	r0, #2
   135b0:	movt	r4, #2
   135b4:	ldr	r1, [r0]
   135b8:	cmp	r1, #1
   135bc:	blt	135d0 <sprintf@plt+0x1d48>
   135c0:	lsl	r2, r1, #2
   135c4:	add	r0, r4, #24
   135c8:	mov	r1, #0
   135cc:	bl	115d0 <memset@plt>
   135d0:	ldr	r0, [r4]
   135d4:	cmp	r0, #0
   135d8:	beq	135e0 <sprintf@plt+0x1d58>
   135dc:	pop	{r4, sl, fp, pc}
   135e0:	movw	r0, #62112	; 0xf2a0
   135e4:	movw	r3, #37127	; 0x9107
   135e8:	mov	r1, #2
   135ec:	mov	r2, #0
   135f0:	movt	r0, #2
   135f4:	movt	r3, #1
   135f8:	ldrh	r0, [r0]
   135fc:	bl	11558 <rb_socket@plt>
   13600:	cmp	r0, #0
   13604:	str	r0, [r4]
   13608:	popeq	{r4, sl, fp, pc}
   1360c:	movw	r2, #14976	; 0x3a80
   13610:	mov	r1, #1
   13614:	mov	r3, #0
   13618:	movt	r2, #1
   1361c:	bl	11528 <rb_setselect@plt>
   13620:	movw	r0, #37147	; 0x911b
   13624:	movw	r1, #15032	; 0x3ab8
   13628:	mov	r2, #0
   1362c:	mov	r3, #1
   13630:	movt	r0, #1
   13634:	movt	r1, #1
   13638:	bl	117ec <rb_event_add@plt>
   1363c:	str	r0, [r4, #4]
   13640:	pop	{r4, sl, fp, pc}
   13644:	push	{r4, sl, fp, lr}
   13648:	add	fp, sp, #8
   1364c:	movw	r4, #61344	; 0xefa0
   13650:	movt	r4, #2
   13654:	ldr	r0, [r4]
   13658:	bl	116d8 <rb_close@plt>
   1365c:	mov	r0, #0
   13660:	str	r0, [r4]
   13664:	ldr	r0, [r4, #4]
   13668:	bl	1151c <rb_event_delete@plt>
   1366c:	bl	14680 <sprintf@plt+0x2df8>
   13670:	movw	r0, #61408	; 0xefe0
   13674:	movt	r0, #2
   13678:	ldr	r1, [r0]
   1367c:	cmp	r1, #1
   13680:	blt	13694 <sprintf@plt+0x1e0c>
   13684:	lsl	r2, r1, #2
   13688:	add	r0, r4, #24
   1368c:	mov	r1, #0
   13690:	bl	115d0 <memset@plt>
   13694:	ldr	r0, [r4]
   13698:	cmp	r0, #0
   1369c:	beq	136a4 <sprintf@plt+0x1e1c>
   136a0:	pop	{r4, sl, fp, pc}
   136a4:	movw	r0, #62112	; 0xf2a0
   136a8:	movw	r3, #37127	; 0x9107
   136ac:	mov	r1, #2
   136b0:	mov	r2, #0
   136b4:	movt	r0, #2
   136b8:	movt	r3, #1
   136bc:	ldrh	r0, [r0]
   136c0:	bl	11558 <rb_socket@plt>
   136c4:	cmp	r0, #0
   136c8:	str	r0, [r4]
   136cc:	popeq	{r4, sl, fp, pc}
   136d0:	movw	r2, #14976	; 0x3a80
   136d4:	mov	r1, #1
   136d8:	mov	r3, #0
   136dc:	movt	r2, #1
   136e0:	bl	11528 <rb_setselect@plt>
   136e4:	movw	r0, #37147	; 0x911b
   136e8:	movw	r1, #15032	; 0x3ab8
   136ec:	mov	r2, #0
   136f0:	mov	r3, #1
   136f4:	movt	r0, #1
   136f8:	movt	r1, #1
   136fc:	bl	117ec <rb_event_add@plt>
   13700:	str	r0, [r4, #4]
   13704:	pop	{r4, sl, fp, pc}
   13708:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1370c:	add	fp, sp, #24
   13710:	sub	sp, sp, #256	; 0x100
   13714:	cmp	r0, #0
   13718:	beq	137fc <sprintf@plt+0x1f74>
   1371c:	mov	r6, sp
   13720:	mov	r4, r2
   13724:	mov	r5, r1
   13728:	mov	r1, r0
   1372c:	mov	r2, #256	; 0x100
   13730:	mov	r0, r6
   13734:	bl	11618 <rb_strlcpy@plt>
   13738:	mov	r0, r6
   1373c:	mov	r1, #46	; 0x2e
   13740:	bl	1157c <strchr@plt>
   13744:	cmp	r0, #0
   13748:	bne	137a4 <sprintf@plt+0x1f1c>
   1374c:	movw	r0, #61856	; 0xf1a0
   13750:	movt	r0, #2
   13754:	ldrb	r0, [r0]
   13758:	cmp	r0, #0
   1375c:	beq	137a4 <sprintf@plt+0x1f1c>
   13760:	mov	r6, sp
   13764:	mov	r0, r6
   13768:	bl	11690 <strlen@plt>
   1376c:	mov	r7, r0
   13770:	movw	r0, #61856	; 0xf1a0
   13774:	movt	r0, #2
   13778:	bl	11690 <strlen@plt>
   1377c:	add	r0, r7, r0
   13780:	add	r0, r0, #2
   13784:	cmp	r0, #254	; 0xfe
   13788:	bhi	137a4 <sprintf@plt+0x1f1c>
   1378c:	add	r0, r6, r7
   13790:	mov	r1, #46	; 0x2e
   13794:	strb	r1, [r0], #1
   13798:	movw	r1, #61856	; 0xf1a0
   1379c:	movt	r1, #2
   137a0:	bl	116fc <strcpy@plt>
   137a4:	mov	r0, r5
   137a8:	bl	14394 <sprintf@plt+0x2b0c>
   137ac:	mov	r5, r0
   137b0:	mov	r0, sp
   137b4:	bl	11690 <strlen@plt>
   137b8:	add	r0, r0, #1
   137bc:	bl	11780 <malloc@plt>
   137c0:	cmp	r0, #0
   137c4:	beq	1381c <sprintf@plt+0x1f94>
   137c8:	mov	r6, sp
   137cc:	mov	r1, r6
   137d0:	bl	116fc <strcpy@plt>
   137d4:	str	r0, [r5, #420]	; 0x1a4
   137d8:	add	r0, r5, #21
   137dc:	mov	r1, r6
   137e0:	mov	r2, #256	; 0x100
   137e4:	bl	11618 <rb_strlcpy@plt>
   137e8:	mov	r0, r5
   137ec:	strb	r4, [r5, #20]
   137f0:	bl	14484 <sprintf@plt+0x2bfc>
   137f4:	sub	sp, fp, #24
   137f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   137fc:	movw	r0, #36912	; 0x9030
   13800:	movw	r1, #36922	; 0x903a
   13804:	movw	r3, #36928	; 0x9040
   13808:	mov	r2, #412	; 0x19c
   1380c:	movt	r0, #1
   13810:	movt	r1, #1
   13814:	movt	r3, #1
   13818:	bl	11600 <__assert_fail@plt>
   1381c:	bl	11750 <rb_outofmemory@plt>
   13820:	push	{r4, r5, fp, lr}
   13824:	add	fp, sp, #8
   13828:	mov	r5, r0
   1382c:	mov	r0, r1
   13830:	bl	14394 <sprintf@plt+0x2b0c>
   13834:	mov	r4, r0
   13838:	add	r0, r0, #292	; 0x124
   1383c:	mov	r1, r5
   13840:	mov	r2, #128	; 0x80
   13844:	bl	116b4 <memcpy@plt>
   13848:	mov	r0, #1
   1384c:	mov	r1, #256	; 0x100
   13850:	bl	115a0 <calloc@plt>
   13854:	cmp	r0, #0
   13858:	beq	13888 <sprintf@plt+0x2000>
   1385c:	str	r0, [r4, #420]	; 0x1a4
   13860:	add	r0, r4, #21
   13864:	mov	r1, #256	; 0x100
   13868:	mov	r2, r5
   1386c:	mov	r3, #0
   13870:	bl	1388c <sprintf@plt+0x2004>
   13874:	mov	r0, #12
   13878:	strb	r0, [r4, #20]
   1387c:	mov	r0, r4
   13880:	pop	{r4, r5, fp, lr}
   13884:	b	14484 <sprintf@plt+0x2bfc>
   13888:	bl	11750 <rb_outofmemory@plt>
   1388c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13890:	add	fp, sp, #28
   13894:	sub	sp, sp, #172	; 0xac
   13898:	ldrh	r7, [r2]
   1389c:	cmp	r7, #10
   138a0:	beq	138e4 <sprintf@plt+0x205c>
   138a4:	cmp	r7, #2
   138a8:	bne	13a78 <sprintf@plt+0x21f0>
   138ac:	movw	r7, #37006	; 0x908e
   138b0:	cmp	r3, #0
   138b4:	ldrb	r4, [r2, #6]
   138b8:	ldrb	r6, [r2, #4]
   138bc:	ldrb	r5, [r2, #5]
   138c0:	movt	r7, #1
   138c4:	movne	r7, r3
   138c8:	ldrb	r3, [r2, #7]
   138cc:	movw	r2, #36991	; 0x907f
   138d0:	movt	r2, #1
   138d4:	stm	sp, {r4, r5, r6, r7}
   138d8:	bl	11810 <snprintf@plt>
   138dc:	sub	sp, fp, #28
   138e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138e4:	movw	r5, #37118	; 0x90fe
   138e8:	cmp	r3, #0
   138ec:	ldrb	r8, [r2, #8]
   138f0:	ldrb	r6, [r2, #15]
   138f4:	ldrb	ip, [r2, #13]
   138f8:	ldrb	lr, [r2, #12]
   138fc:	ldrb	r9, [r2, #9]
   13900:	ldrb	sl, [r2, #10]
   13904:	str	r0, [fp, #-52]	; 0xffffffcc
   13908:	str	r1, [fp, #-44]	; 0xffffffd4
   1390c:	movt	r5, #1
   13910:	movne	r5, r3
   13914:	ldrb	r3, [r2, #23]
   13918:	lsr	r4, r8, #4
   1391c:	lsr	r0, sl, #4
   13920:	lsr	r1, r9, #4
   13924:	and	r8, r8, #15
   13928:	and	r9, r9, #15
   1392c:	and	sl, sl, #15
   13930:	str	r3, [fp, #-32]	; 0xffffffe0
   13934:	ldrb	r3, [r2, #22]
   13938:	str	r3, [fp, #-36]	; 0xffffffdc
   1393c:	ldrb	r3, [r2, #21]
   13940:	str	r3, [fp, #-40]	; 0xffffffd8
   13944:	ldrb	r3, [r2, #20]
   13948:	str	r3, [fp, #-48]	; 0xffffffd0
   1394c:	ldrb	r3, [r2, #19]
   13950:	str	r3, [fp, #-56]	; 0xffffffc8
   13954:	ldrb	r3, [r2, #18]
   13958:	str	r3, [fp, #-60]	; 0xffffffc4
   1395c:	ldrb	r3, [r2, #17]
   13960:	str	r3, [fp, #-64]	; 0xffffffc0
   13964:	ldrb	r3, [r2, #16]
   13968:	str	r3, [fp, #-68]	; 0xffffffbc
   1396c:	ldrb	r3, [r2, #14]
   13970:	ldrb	r2, [r2, #11]
   13974:	str	r0, [sp, #104]	; 0x68
   13978:	str	r4, [sp, #120]	; 0x78
   1397c:	str	r5, [sp, #124]	; 0x7c
   13980:	mov	r0, r6
   13984:	lsr	r6, r6, #4
   13988:	and	r5, ip, #15
   1398c:	str	r1, [sp, #112]	; 0x70
   13990:	str	r8, [sp, #116]	; 0x74
   13994:	str	sl, [sp, #100]	; 0x64
   13998:	str	r9, [sp, #108]	; 0x6c
   1399c:	lsr	r1, lr, #4
   139a0:	str	r6, [sp, #64]	; 0x40
   139a4:	lsr	r7, r2, #4
   139a8:	lsr	r4, r3, #4
   139ac:	and	r3, r3, #15
   139b0:	and	r8, r2, #15
   139b4:	and	r2, lr, #15
   139b8:	add	lr, sp, #32
   139bc:	str	r7, [sp, #96]	; 0x60
   139c0:	lsr	r7, ip, #4
   139c4:	add	ip, sp, #68	; 0x44
   139c8:	stm	ip, {r3, r4, r5, r7}
   139cc:	and	ip, r0, #15
   139d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   139d4:	str	r2, [sp, #84]	; 0x54
   139d8:	str	r1, [sp, #88]	; 0x58
   139dc:	str	r8, [sp, #92]	; 0x5c
   139e0:	lsr	r1, r0, #4
   139e4:	and	r2, r0, #15
   139e8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   139ec:	lsr	r3, r0, #4
   139f0:	and	r7, r0, #15
   139f4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   139f8:	lsr	r6, r0, #4
   139fc:	and	r5, r0, #15
   13a00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13a04:	lsr	r4, r0, #4
   13a08:	stm	lr, {r4, r5, r6, r7}
   13a0c:	str	ip, [sp, #60]	; 0x3c
   13a10:	and	ip, r0, #15
   13a14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13a18:	str	r2, [sp, #52]	; 0x34
   13a1c:	str	r1, [sp, #56]	; 0x38
   13a20:	str	r3, [sp, #48]	; 0x30
   13a24:	lsr	r1, r0, #4
   13a28:	and	r2, r0, #15
   13a2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13a30:	lsr	r3, r0, #4
   13a34:	and	r7, r0, #15
   13a38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13a3c:	lsr	r6, r0, #4
   13a40:	and	r5, r0, #15
   13a44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a48:	lsr	r4, r0, #4
   13a4c:	stm	sp, {r4, r5, r6, r7}
   13a50:	str	r3, [sp, #16]
   13a54:	str	r1, [sp, #24]
   13a58:	and	r3, r0, #15
   13a5c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13a60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a64:	str	r2, [sp, #20]
   13a68:	movw	r2, #37019	; 0x909b
   13a6c:	str	ip, [sp, #28]
   13a70:	movt	r2, #1
   13a74:	bl	11810 <snprintf@plt>
   13a78:	sub	sp, fp, #28
   13a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a80:	push	{r4, sl, fp, lr}
   13a84:	add	fp, sp, #8
   13a88:	mov	r4, r0
   13a8c:	mov	r0, r4
   13a90:	bl	13b30 <sprintf@plt+0x22a8>
   13a94:	cmp	r0, #0
   13a98:	bne	13a8c <sprintf@plt+0x2204>
   13a9c:	movw	r2, #14976	; 0x3a80
   13aa0:	mov	r0, r4
   13aa4:	mov	r1, #1
   13aa8:	mov	r3, #0
   13aac:	movt	r2, #1
   13ab0:	pop	{r4, sl, fp, lr}
   13ab4:	b	11528 <rb_setselect@plt>
   13ab8:	push	{r4, r5, r6, sl, fp, lr}
   13abc:	add	fp, sp, #16
   13ac0:	bl	1169c <rb_current_time@plt>
   13ac4:	movw	r5, #61344	; 0xefa0
   13ac8:	movt	r5, #2
   13acc:	ldr	r6, [r5, #12]
   13ad0:	cmp	r6, #0
   13ad4:	beq	13b2c <sprintf@plt+0x22a4>
   13ad8:	mov	r4, r0
   13adc:	b	13ae8 <sprintf@plt+0x2260>
   13ae0:	cmp	r6, #0
   13ae4:	beq	13b2c <sprintf@plt+0x22a4>
   13ae8:	ldr	r0, [r6]
   13aec:	ldr	r6, [r6, #8]
   13af0:	ldr	r2, [r0, #280]	; 0x118
   13af4:	ldr	r1, [r0, #284]	; 0x11c
   13af8:	add	r2, r1, r2
   13afc:	cmp	r2, r4
   13b00:	bgt	13ae0 <sprintf@plt+0x2258>
   13b04:	ldr	r2, [r0, #288]	; 0x120
   13b08:	lsl	r1, r1, #1
   13b0c:	add	r2, r5, r2, lsl #2
   13b10:	ldr	r3, [r2, #24]
   13b14:	add	r3, r3, #1
   13b18:	str	r3, [r2, #24]
   13b1c:	str	r4, [r0, #280]	; 0x118
   13b20:	str	r1, [r0, #284]	; 0x11c
   13b24:	bl	14298 <sprintf@plt+0x2a10>
   13b28:	b	13ae0 <sprintf@plt+0x2258>
   13b2c:	pop	{r4, r5, r6, sl, fp, pc}
   13b30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b34:	add	fp, sp, #28
   13b38:	sub	sp, sp, #532	; 0x214
   13b3c:	sub	sp, sp, #1024	; 0x400
   13b40:	mov	r1, #128	; 0x80
   13b44:	str	r1, [sp, #156]	; 0x9c
   13b48:	bl	11534 <rb_get_fd@plt>
   13b4c:	add	r1, sp, #156	; 0x9c
   13b50:	add	r6, sp, #160	; 0xa0
   13b54:	add	r4, sp, #28
   13b58:	movw	r2, #1036	; 0x40c
   13b5c:	mov	r3, #0
   13b60:	mov	sl, #0
   13b64:	str	r1, [sp, #4]
   13b68:	mov	r1, r6
   13b6c:	str	r4, [sp]
   13b70:	bl	11834 <recvfrom@plt>
   13b74:	mov	r7, r0
   13b78:	add	r0, r0, #1
   13b7c:	cmp	r0, #2
   13b80:	bcc	14260 <sprintf@plt+0x29d8>
   13b84:	mov	sl, #1
   13b88:	cmp	r7, #13
   13b8c:	blt	14260 <sprintf@plt+0x29d8>
   13b90:	ldr	r0, [sp, #168]	; 0xa8
   13b94:	ldr	r9, [sp, #164]	; 0xa4
   13b98:	lsr	r2, r0, #16
   13b9c:	rev	r1, r0
   13ba0:	rev	r2, r2
   13ba4:	orr	r1, r2, r1, lsr #16
   13ba8:	str	r1, [sp, #168]	; 0xa8
   13bac:	lsr	r1, r9, #16
   13bb0:	orr	r0, r1, r0, lsl #16
   13bb4:	rev	r1, r9
   13bb8:	rev	r0, r0
   13bbc:	pkhtb	r0, r0, r1, asr #16
   13bc0:	str	r0, [sp, #164]	; 0xa4
   13bc4:	movw	r0, #61344	; 0xefa0
   13bc8:	movt	r0, #2
   13bcc:	ldr	r0, [r0, #12]
   13bd0:	cmp	r0, #0
   13bd4:	beq	14260 <sprintf@plt+0x29d8>
   13bd8:	ldrh	r1, [sp, #160]	; 0xa0
   13bdc:	ldr	r5, [r0]
   13be0:	ldr	r2, [r5, #12]
   13be4:	cmp	r2, r1
   13be8:	beq	13bfc <sprintf@plt+0x2374>
   13bec:	ldr	r0, [r0, #8]
   13bf0:	cmp	r0, #0
   13bf4:	bne	13bdc <sprintf@plt+0x2354>
   13bf8:	b	14260 <sprintf@plt+0x29d8>
   13bfc:	cmp	r5, #0
   13c00:	beq	14260 <sprintf@plt+0x29d8>
   13c04:	movw	r0, #61408	; 0xefe0
   13c08:	movt	r0, #2
   13c0c:	ldr	r8, [r0]
   13c10:	cmp	r8, #1
   13c14:	blt	13d94 <sprintf@plt+0x250c>
   13c18:	ldrh	r3, [sp, #28]
   13c1c:	ldrh	r1, [sp, #30]
   13c20:	add	r0, r4, #8
   13c24:	str	r0, [sp, #24]
   13c28:	cmp	r3, #2
   13c2c:	str	r1, [sp, #20]
   13c30:	bne	13d08 <sprintf@plt+0x2480>
   13c34:	movw	r0, #62112	; 0xf2a0
   13c38:	ldr	r4, [sp, #32]
   13c3c:	str	r3, [sp, #16]
   13c40:	movt	r0, #2
   13c44:	add	sl, r0, #4
   13c48:	str	r4, [sp, #12]
   13c4c:	ldrh	r0, [sl, #-4]
   13c50:	cmp	r0, #10
   13c54:	bne	13c74 <sprintf@plt+0x23ec>
   13c58:	b	13ca4 <sprintf@plt+0x241c>
   13c5c:	add	sl, sl, #128	; 0x80
   13c60:	subs	r8, r8, #1
   13c64:	beq	13d94 <sprintf@plt+0x250c>
   13c68:	ldrh	r0, [sl, #-4]
   13c6c:	cmp	r0, #10
   13c70:	beq	13ca4 <sprintf@plt+0x241c>
   13c74:	cmp	r0, #2
   13c78:	bne	13c5c <sprintf@plt+0x23d4>
   13c7c:	ldrh	r0, [sl, #-2]
   13c80:	cmp	r0, r1
   13c84:	bne	13c5c <sprintf@plt+0x23d4>
   13c88:	ldr	r0, [sl]
   13c8c:	mov	r2, #1
   13c90:	cmp	r0, #0
   13c94:	beq	13d98 <sprintf@plt+0x2510>
   13c98:	cmp	r0, r4
   13c9c:	bne	13c5c <sprintf@plt+0x23d4>
   13ca0:	b	13d98 <sprintf@plt+0x2510>
   13ca4:	cmp	r3, #10
   13ca8:	bne	13c5c <sprintf@plt+0x23d4>
   13cac:	ldrh	r0, [sl, #-2]
   13cb0:	cmp	r0, r1
   13cb4:	bne	13c5c <sprintf@plt+0x23d4>
   13cb8:	ldr	r1, [sp, #24]
   13cbc:	add	r4, sl, #4
   13cc0:	mov	r2, #16
   13cc4:	mov	r0, r4
   13cc8:	bl	116cc <bcmp@plt>
   13ccc:	mov	r2, #1
   13cd0:	cmp	r0, #0
   13cd4:	beq	13d98 <sprintf@plt+0x2510>
   13cd8:	movw	r1, #40680	; 0x9ee8
   13cdc:	mov	r0, r4
   13ce0:	mov	r2, #16
   13ce4:	movt	r1, #2
   13ce8:	bl	116cc <bcmp@plt>
   13cec:	ldr	r1, [sp, #20]
   13cf0:	ldr	r3, [sp, #16]
   13cf4:	ldr	r4, [sp, #12]
   13cf8:	mov	r2, #1
   13cfc:	cmp	r0, #0
   13d00:	bne	13c5c <sprintf@plt+0x23d4>
   13d04:	b	13d98 <sprintf@plt+0x2510>
   13d08:	cmp	r3, #10
   13d0c:	bne	13d94 <sprintf@plt+0x250c>
   13d10:	movw	r0, #62112	; 0xf2a0
   13d14:	movw	sl, #40680	; 0x9ee8
   13d18:	movt	r0, #2
   13d1c:	movt	sl, #2
   13d20:	add	r4, r0, #8
   13d24:	ldrh	r0, [r4, #-8]
   13d28:	cmp	r0, #10
   13d2c:	beq	13d48 <sprintf@plt+0x24c0>
   13d30:	add	r4, r4, #128	; 0x80
   13d34:	subs	r8, r8, #1
   13d38:	beq	13d94 <sprintf@plt+0x250c>
   13d3c:	ldrh	r0, [r4, #-8]
   13d40:	cmp	r0, #10
   13d44:	bne	13d30 <sprintf@plt+0x24a8>
   13d48:	ldrh	r0, [r4, #-6]
   13d4c:	cmp	r0, r1
   13d50:	bne	13d30 <sprintf@plt+0x24a8>
   13d54:	ldr	r1, [sp, #24]
   13d58:	mov	r0, r4
   13d5c:	mov	r2, #16
   13d60:	bl	116cc <bcmp@plt>
   13d64:	mov	r2, #1
   13d68:	cmp	r0, #0
   13d6c:	beq	13d98 <sprintf@plt+0x2510>
   13d70:	mov	r0, r4
   13d74:	mov	r1, sl
   13d78:	mov	r2, #16
   13d7c:	bl	116cc <bcmp@plt>
   13d80:	ldr	r1, [sp, #20]
   13d84:	mov	r2, #1
   13d88:	cmp	r0, #0
   13d8c:	bne	13d30 <sprintf@plt+0x24a8>
   13d90:	b	13d98 <sprintf@plt+0x2510>
   13d94:	mov	r2, #0
   13d98:	ldr	r0, [r5, #288]	; 0x120
   13d9c:	movw	r8, #61344	; 0xefa0
   13da0:	movt	r8, #2
   13da4:	cmp	r2, r0
   13da8:	beq	13dbc <sprintf@plt+0x2534>
   13dac:	add	r0, r8, r2, lsl #2
   13db0:	ldr	r1, [r0, #24]
   13db4:	add	r1, r1, #3
   13db8:	str	r1, [r0, #24]
   13dbc:	uxth	r0, r9
   13dc0:	mov	sl, #1
   13dc4:	str	r2, [sp, #24]
   13dc8:	cmp	r0, #256	; 0x100
   13dcc:	bne	14260 <sprintf@plt+0x29d8>
   13dd0:	add	r4, r6, r7
   13dd4:	mov	r0, #256	; 0x100
   13dd8:	add	r7, r6, #12
   13ddc:	sub	lr, fp, #256	; 0x100
   13de0:	str	r0, [sp]
   13de4:	sub	r3, lr, #131	; 0x83
   13de8:	mov	r0, r6
   13dec:	mov	r1, r4
   13df0:	mov	r2, r7
   13df4:	bl	14960 <sprintf@plt+0x30d8>
   13df8:	cmp	r0, #0
   13dfc:	ble	14260 <sprintf@plt+0x29d8>
   13e00:	sub	lr, fp, #256	; 0x100
   13e04:	add	r1, r5, #21
   13e08:	sub	r0, lr, #131	; 0x83
   13e0c:	bl	11660 <rb_strcasecmp@plt>
   13e10:	cmp	r0, #0
   13e14:	bne	14260 <sprintf@plt+0x29d8>
   13e18:	ldr	r1, [sp, #160]	; 0xa0
   13e1c:	tst	r1, #251658240	; 0xf000000
   13e20:	bne	13e80 <sprintf@plt+0x25f8>
   13e24:	ldr	r2, [sp, #164]	; 0xa4
   13e28:	mov	r0, r2
   13e2c:	bfc	r0, #0, #16
   13e30:	cmp	r0, #0
   13e34:	beq	13e80 <sprintf@plt+0x25f8>
   13e38:	movw	r8, #65535	; 0xffff
   13e3c:	tst	r2, r8
   13e40:	beq	13eac <sprintf@plt+0x2624>
   13e44:	mov	r0, r7
   13e48:	mov	r1, r4
   13e4c:	bl	14f64 <sprintf@plt+0x36dc>
   13e50:	cmp	r0, #0
   13e54:	bmi	1423c <sprintf@plt+0x29b4>
   13e58:	add	r3, sp, #160	; 0xa0
   13e5c:	add	r0, r0, r7
   13e60:	ldm	r3, {r1, r2, r3}
   13e64:	sub	r6, r2, #1
   13e68:	add	r7, r0, #4
   13e6c:	pkhbt	r2, r6, r2
   13e70:	tst	r6, r8
   13e74:	str	r2, [sp, #164]	; 0xa4
   13e78:	bne	13e44 <sprintf@plt+0x25bc>
   13e7c:	b	13eb0 <sprintf@plt+0x2628>
   13e80:	ubfx	r0, r1, #24, #4
   13e84:	sub	r1, r0, #4
   13e88:	cmp	r1, #2
   13e8c:	ldr	r1, [sp, #24]
   13e90:	bcc	13ea4 <sprintf@plt+0x261c>
   13e94:	cmp	r0, #3
   13e98:	beq	1402c <sprintf@plt+0x27a4>
   13e9c:	cmp	r0, #2
   13ea0:	bne	14044 <sprintf@plt+0x27bc>
   13ea4:	add	r0, r8, r1, lsl #2
   13ea8:	b	1424c <sprintf@plt+0x29c4>
   13eac:	ldr	r3, [sp, #168]	; 0xa8
   13eb0:	cmp	r7, r4
   13eb4:	bcs	13f98 <sprintf@plt+0x2710>
   13eb8:	lsr	r0, r2, #16
   13ebc:	orr	r0, r0, r3, lsl #16
   13ec0:	uxth	r6, r0
   13ec4:	cmp	r6, #0
   13ec8:	beq	13f98 <sprintf@plt+0x2710>
   13ecc:	sub	lr, fp, #256	; 0x100
   13ed0:	mov	r8, r4
   13ed4:	sub	r6, lr, #131	; 0x83
   13ed8:	sub	r0, r0, #1
   13edc:	str	r1, [sp, #160]	; 0xa0
   13ee0:	str	r3, [sp, #168]	; 0xa8
   13ee4:	mov	r1, r8
   13ee8:	mov	r3, r6
   13eec:	mov	r4, r8
   13ef0:	pkhbt	r0, r2, r0, lsl #16
   13ef4:	mov	r2, r7
   13ef8:	str	r0, [sp, #164]	; 0xa4
   13efc:	movw	r0, #355	; 0x163
   13f00:	str	r0, [sp]
   13f04:	add	r0, sp, #160	; 0xa0
   13f08:	bl	14960 <sprintf@plt+0x30d8>
   13f0c:	cmp	r0, #1
   13f10:	blt	1423c <sprintf@plt+0x29b4>
   13f14:	add	r9, r7, r0
   13f18:	mov	r1, #0
   13f1c:	add	r7, r9, #10
   13f20:	strb	r1, [fp, #-132]	; 0xffffff7c
   13f24:	cmp	r7, r4
   13f28:	bcs	13f98 <sprintf@plt+0x2710>
   13f2c:	mov	r0, r9
   13f30:	bl	1501c <sprintf@plt+0x3794>
   13f34:	mov	r4, r0
   13f38:	add	r0, r9, #2
   13f3c:	bl	1501c <sprintf@plt+0x3794>
   13f40:	add	r0, r9, #4
   13f44:	bl	1502c <sprintf@plt+0x37a4>
   13f48:	str	r0, [r5, #16]
   13f4c:	add	r0, r9, #8
   13f50:	bl	1501c <sprintf@plt+0x3794>
   13f54:	cmp	r4, #28
   13f58:	beq	14120 <sprintf@plt+0x2898>
   13f5c:	cmp	r4, #12
   13f60:	mov	r1, r8
   13f64:	beq	140cc <sprintf@plt+0x2844>
   13f68:	cmp	r4, #1
   13f6c:	beq	1422c <sprintf@plt+0x29a4>
   13f70:	add	r7, r7, r0
   13f74:	cmp	r7, r1
   13f78:	bcs	13f98 <sprintf@plt+0x2710>
   13f7c:	add	r3, sp, #160	; 0xa0
   13f80:	ldm	r3, {r1, r2, r3}
   13f84:	lsr	r0, r2, #16
   13f88:	orr	r0, r0, r3, lsl #16
   13f8c:	uxth	r4, r0
   13f90:	cmp	r4, #0
   13f94:	bne	13ed8 <sprintf@plt+0x2650>
   13f98:	ldrb	r0, [r5, #20]
   13f9c:	cmp	r0, #12
   13fa0:	bne	14158 <sprintf@plt+0x28d0>
   13fa4:	ldr	r6, [r5, #420]	; 0x1a4
   13fa8:	movw	r7, #61344	; 0xefa0
   13fac:	movt	r7, #2
   13fb0:	cmp	r6, #0
   13fb4:	beq	140c0 <sprintf@plt+0x2838>
   13fb8:	mov	r0, #292	; 0x124
   13fbc:	ldrh	r9, [r5, r0]
   13fc0:	ldr	r0, [r5, #424]	; 0x1a8
   13fc4:	bl	14394 <sprintf@plt+0x2b0c>
   13fc8:	mov	r4, r0
   13fcc:	mov	r0, r6
   13fd0:	bl	11690 <strlen@plt>
   13fd4:	add	r0, r0, #1
   13fd8:	bl	11780 <malloc@plt>
   13fdc:	cmp	r9, #10
   13fe0:	moveq	r9, #28
   13fe4:	movne	r9, #1
   13fe8:	cmp	r0, #0
   13fec:	beq	14294 <sprintf@plt+0x2a0c>
   13ff0:	mov	r1, r6
   13ff4:	bl	116fc <strcpy@plt>
   13ff8:	str	r0, [r4, #420]	; 0x1a4
   13ffc:	add	r0, r4, #21
   14000:	mov	r1, r6
   14004:	mov	r2, #256	; 0x100
   14008:	bl	11618 <rb_strlcpy@plt>
   1400c:	mov	r0, r4
   14010:	strb	r9, [r4, #20]
   14014:	bl	14484 <sprintf@plt+0x2bfc>
   14018:	ldr	r0, [r5, #8]
   1401c:	ldr	r1, [r5, #4]
   14020:	cmp	r0, #0
   14024:	bne	141b4 <sprintf@plt+0x292c>
   14028:	b	141c0 <sprintf@plt+0x2938>
   1402c:	add	r0, r8, r1, lsl #2
   14030:	ldr	r1, [r0, #24]
   14034:	asr	r2, r1, #31
   14038:	add	r1, r1, r2, lsr #30
   1403c:	asr	r1, r1, #2
   14040:	str	r1, [r0, #24]
   14044:	ldr	r1, [r5, #424]	; 0x1a8
   14048:	ldm	r1, {r0, r2}
   1404c:	mov	r1, #0
   14050:	blx	r2
   14054:	ldr	r0, [r5, #8]
   14058:	ldr	r1, [r5, #4]
   1405c:	cmp	r0, #0
   14060:	beq	14070 <sprintf@plt+0x27e8>
   14064:	str	r1, [r0, #4]
   14068:	ldr	r1, [r5, #4]
   1406c:	b	14074 <sprintf@plt+0x27ec>
   14070:	str	r1, [r8, #16]
   14074:	cmp	r1, #0
   14078:	add	r2, r1, #8
   1407c:	addeq	r2, r8, #12
   14080:	str	r0, [r2]
   14084:	mov	r0, #0
   14088:	str	r0, [r5, #4]
   1408c:	str	r0, [r5, #8]
   14090:	ldr	r0, [r8, #20]
   14094:	sub	r0, r0, #1
   14098:	str	r0, [r8, #20]
   1409c:	ldr	r0, [r5, #420]	; 0x1a4
   140a0:	cmp	r0, #0
   140a4:	beq	140ac <sprintf@plt+0x2824>
   140a8:	bl	1163c <free@plt>
   140ac:	mov	r0, r5
   140b0:	bl	1163c <free@plt>
   140b4:	mov	r0, sl
   140b8:	sub	sp, fp, #28
   140bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140c0:	ldr	r0, [sp, #24]
   140c4:	add	r0, r7, r0, lsl #2
   140c8:	b	1424c <sprintf@plt+0x29c4>
   140cc:	ldrb	r0, [r5, #20]
   140d0:	cmp	r0, #12
   140d4:	bne	1423c <sprintf@plt+0x29b4>
   140d8:	movw	r0, #355	; 0x163
   140dc:	sub	lr, fp, #256	; 0x100
   140e0:	mov	r2, r7
   140e4:	str	r0, [sp]
   140e8:	add	r0, sp, #160	; 0xa0
   140ec:	sub	r3, lr, #131	; 0x83
   140f0:	bl	14960 <sprintf@plt+0x30d8>
   140f4:	cmp	r0, #1
   140f8:	blt	1423c <sprintf@plt+0x29b4>
   140fc:	ldr	r0, [r5, #420]	; 0x1a4
   14100:	sub	lr, fp, #256	; 0x100
   14104:	mov	r2, #256	; 0x100
   14108:	sub	r1, lr, #131	; 0x83
   1410c:	bl	11618 <rb_strlcpy@plt>
   14110:	ldrb	r0, [r5, #20]
   14114:	cmp	r0, #12
   14118:	beq	13fa4 <sprintf@plt+0x271c>
   1411c:	b	14158 <sprintf@plt+0x28d0>
   14120:	cmp	r0, #16
   14124:	ldrbeq	r0, [r5, #20]
   14128:	cmpeq	r0, #28
   1412c:	bne	1423c <sprintf@plt+0x29b4>
   14130:	mov	r0, #292	; 0x124
   14134:	mov	r1, #10
   14138:	mov	r2, r5
   1413c:	strh	r1, [r2, r0]!
   14140:	vld1.8	{d16-d17}, [r7]
   14144:	add	r0, r2, #8
   14148:	vst1.8	{d16-d17}, [r0]
   1414c:	ldrb	r0, [r5, #20]
   14150:	cmp	r0, #12
   14154:	beq	13fa4 <sprintf@plt+0x271c>
   14158:	mov	r0, #1
   1415c:	mov	r1, #132	; 0x84
   14160:	bl	115a0 <calloc@plt>
   14164:	movw	r7, #61344	; 0xefa0
   14168:	cmp	r0, #0
   1416c:	movt	r7, #2
   14170:	beq	14294 <sprintf@plt+0x2a0c>
   14174:	ldr	r1, [r5, #420]	; 0x1a4
   14178:	mov	r4, r0
   1417c:	mov	r2, #128	; 0x80
   14180:	str	r1, [r0], #4
   14184:	add	r1, r5, #292	; 0x124
   14188:	bl	116b4 <memcpy@plt>
   1418c:	ldr	r1, [r5, #424]	; 0x1a8
   14190:	ldm	r1, {r0, r2}
   14194:	mov	r1, r4
   14198:	blx	r2
   1419c:	mov	r0, r4
   141a0:	bl	1163c <free@plt>
   141a4:	ldr	r0, [r5, #8]
   141a8:	ldr	r1, [r5, #4]
   141ac:	cmp	r0, #0
   141b0:	beq	141c0 <sprintf@plt+0x2938>
   141b4:	str	r1, [r0, #4]
   141b8:	ldr	r1, [r5, #4]
   141bc:	b	141c4 <sprintf@plt+0x293c>
   141c0:	str	r1, [r7, #16]
   141c4:	cmp	r1, #0
   141c8:	add	r2, r1, #8
   141cc:	addeq	r2, r7, #12
   141d0:	str	r0, [r2]
   141d4:	mov	r0, #0
   141d8:	str	r0, [r5, #4]
   141dc:	str	r0, [r5, #8]
   141e0:	ldr	r0, [r7, #20]
   141e4:	sub	r0, r0, #1
   141e8:	str	r0, [r7, #20]
   141ec:	ldr	r0, [r5, #420]	; 0x1a4
   141f0:	cmp	r0, #0
   141f4:	beq	141fc <sprintf@plt+0x2974>
   141f8:	bl	1163c <free@plt>
   141fc:	mov	r0, r5
   14200:	bl	1163c <free@plt>
   14204:	ldr	r0, [sp, #24]
   14208:	add	r0, r7, r0, lsl #2
   1420c:	ldr	r1, [r0, #24]
   14210:	asr	r2, r1, #31
   14214:	add	r1, r1, r2, lsr #30
   14218:	asr	r1, r1, #2
   1421c:	str	r1, [r0, #24]
   14220:	mov	r0, sl
   14224:	sub	sp, fp, #28
   14228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1422c:	cmp	r0, #4
   14230:	ldrbeq	r0, [r5, #20]
   14234:	cmpeq	r0, #1
   14238:	beq	1426c <sprintf@plt+0x29e4>
   1423c:	ldr	r1, [sp, #24]
   14240:	movw	r0, #61344	; 0xefa0
   14244:	movt	r0, #2
   14248:	add	r0, r0, r1, lsl #2
   1424c:	ldr	r1, [r0, #24]
   14250:	add	r1, r1, #1
   14254:	str	r1, [r0, #24]
   14258:	mov	r0, r5
   1425c:	bl	14298 <sprintf@plt+0x2a10>
   14260:	mov	r0, sl
   14264:	sub	sp, fp, #28
   14268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1426c:	mov	r0, #292	; 0x124
   14270:	mov	r1, #2
   14274:	mov	r2, r5
   14278:	strh	r1, [r2, r0]!
   1427c:	ldr	r0, [r7]
   14280:	str	r0, [r2, #4]
   14284:	ldrb	r0, [r5, #20]
   14288:	cmp	r0, #12
   1428c:	beq	13fa4 <sprintf@plt+0x271c>
   14290:	b	14158 <sprintf@plt+0x28d0>
   14294:	bl	11750 <rb_outofmemory@plt>
   14298:	push	{r4, r5, fp, lr}
   1429c:	add	fp, sp, #8
   142a0:	mov	r4, r0
   142a4:	ldrb	r0, [r0, #277]	; 0x115
   142a8:	sub	r0, r0, #1
   142ac:	tst	r0, #255	; 0xff
   142b0:	strb	r0, [r4, #277]	; 0x115
   142b4:	beq	142e8 <sprintf@plt+0x2a60>
   142b8:	ldrb	r5, [r4, #20]
   142bc:	cmp	r5, #1
   142c0:	cmpne	r5, #28
   142c4:	bne	1431c <sprintf@plt+0x2a94>
   142c8:	ldr	r1, [r4, #420]	; 0x1a4
   142cc:	add	r0, r4, #21
   142d0:	mov	r2, #256	; 0x100
   142d4:	bl	11618 <rb_strlcpy@plt>
   142d8:	strb	r5, [r4, #20]
   142dc:	mov	r0, r4
   142e0:	pop	{r4, r5, fp, lr}
   142e4:	b	14484 <sprintf@plt+0x2bfc>
   142e8:	ldr	r1, [r4, #424]	; 0x1a8
   142ec:	ldm	r1, {r0, r2}
   142f0:	mov	r1, #0
   142f4:	blx	r2
   142f8:	ldr	r1, [r4, #8]
   142fc:	ldr	r2, [r4, #4]
   14300:	movw	r0, #61344	; 0xefa0
   14304:	movt	r0, #2
   14308:	cmp	r1, #0
   1430c:	beq	1434c <sprintf@plt+0x2ac4>
   14310:	str	r2, [r1, #4]
   14314:	ldr	r2, [r4, #4]
   14318:	b	14350 <sprintf@plt+0x2ac8>
   1431c:	cmp	r5, #12
   14320:	popne	{r4, r5, fp, pc}
   14324:	add	r0, r4, #21
   14328:	add	r2, r4, #292	; 0x124
   1432c:	mov	r1, #256	; 0x100
   14330:	mov	r3, #0
   14334:	bl	1388c <sprintf@plt+0x2004>
   14338:	mov	r0, #12
   1433c:	strb	r0, [r4, #20]
   14340:	mov	r0, r4
   14344:	pop	{r4, r5, fp, lr}
   14348:	b	14484 <sprintf@plt+0x2bfc>
   1434c:	str	r2, [r0, #16]
   14350:	cmp	r2, #0
   14354:	add	r3, r2, #8
   14358:	addeq	r3, r0, #12
   1435c:	str	r1, [r3]
   14360:	mov	r1, #0
   14364:	str	r1, [r4, #4]
   14368:	str	r1, [r4, #8]
   1436c:	ldr	r1, [r0, #20]
   14370:	sub	r1, r1, #1
   14374:	str	r1, [r0, #20]
   14378:	ldr	r0, [r4, #420]	; 0x1a4
   1437c:	cmp	r0, #0
   14380:	beq	14388 <sprintf@plt+0x2b00>
   14384:	bl	1163c <free@plt>
   14388:	mov	r0, r4
   1438c:	pop	{r4, r5, fp, lr}
   14390:	b	1163c <free@plt>
   14394:	push	{r4, r5, r6, r7, fp, lr}
   14398:	add	fp, sp, #16
   1439c:	sub	sp, sp, #8
   143a0:	mov	r5, r0
   143a4:	mov	r0, #1
   143a8:	mov	r1, #428	; 0x1ac
   143ac:	bl	115a0 <calloc@plt>
   143b0:	cmp	r0, #0
   143b4:	beq	14480 <sprintf@plt+0x2bf8>
   143b8:	mov	r4, r0
   143bc:	bl	1169c <rb_current_time@plt>
   143c0:	movw	r6, #61344	; 0xefa0
   143c4:	str	r5, [r4, #424]	; 0x1a8
   143c8:	str	r0, [r4, #280]	; 0x118
   143cc:	mov	r1, #4
   143d0:	mov	r0, #3
   143d4:	add	r7, sp, #6
   143d8:	movt	r6, #2
   143dc:	str	r1, [r4, #284]	; 0x11c
   143e0:	strb	r0, [r4, #277]	; 0x115
   143e4:	mov	r0, r7
   143e8:	mov	r1, #2
   143ec:	bl	117f8 <rb_get_random@plt>
   143f0:	ldr	r0, [r6, #12]
   143f4:	ldrh	r1, [sp, #6]
   143f8:	cmp	r0, #0
   143fc:	mov	r2, r0
   14400:	beq	1442c <sprintf@plt+0x2ba4>
   14404:	ldr	r3, [r2]
   14408:	ldr	r5, [r3, #12]
   1440c:	cmp	r5, r1
   14410:	beq	14424 <sprintf@plt+0x2b9c>
   14414:	ldr	r2, [r2, #8]
   14418:	cmp	r2, #0
   1441c:	bne	14404 <sprintf@plt+0x2b7c>
   14420:	b	1442c <sprintf@plt+0x2ba4>
   14424:	cmp	r3, #0
   14428:	bne	143e4 <sprintf@plt+0x2b5c>
   1442c:	cmp	r0, #0
   14430:	mov	r2, #0
   14434:	str	r4, [r4]
   14438:	str	r2, [r4, #4]
   1443c:	str	r0, [r4, #8]
   14440:	str	r1, [r4, #12]
   14444:	beq	14454 <sprintf@plt+0x2bcc>
   14448:	add	r0, r0, #4
   1444c:	str	r4, [r0]
   14450:	b	14464 <sprintf@plt+0x2bdc>
   14454:	mov	r0, r6
   14458:	ldr	r1, [r0, #16]!
   1445c:	cmp	r1, #0
   14460:	streq	r4, [r0]
   14464:	str	r4, [r6, #12]
   14468:	ldr	r0, [r6, #20]
   1446c:	add	r0, r0, #1
   14470:	str	r0, [r6, #20]
   14474:	mov	r0, r4
   14478:	sub	sp, fp, #16
   1447c:	pop	{r4, r5, r6, r7, fp, pc}
   14480:	bl	11750 <rb_outofmemory@plt>
   14484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14488:	add	fp, sp, #28
   1448c:	sub	sp, sp, #12
   14490:	sub	sp, sp, #1024	; 0x400
   14494:	add	r5, sp, #8
   14498:	mov	r9, r0
   1449c:	mov	r1, #0
   144a0:	mov	r2, #1024	; 0x400
   144a4:	mov	r4, #1024	; 0x400
   144a8:	mov	r0, r5
   144ac:	bl	115d0 <memset@plt>
   144b0:	ldrb	r2, [r9, #20]
   144b4:	add	r0, r9, #21
   144b8:	mov	r1, #1
   144bc:	mov	r3, r5
   144c0:	str	r4, [sp]
   144c4:	bl	15050 <sprintf@plt+0x37c8>
   144c8:	cmp	r0, #1
   144cc:	blt	14678 <sprintf@plt+0x2df0>
   144d0:	mov	r5, r0
   144d4:	ldrh	r0, [r9, #12]
   144d8:	ldrh	r1, [sp, #10]
   144dc:	movw	r7, #61344	; 0xefa0
   144e0:	movt	r7, #2
   144e4:	orr	r0, r0, r1, lsl #16
   144e8:	str	r0, [sp, #8]
   144ec:	ldrb	r0, [r9, #278]	; 0x116
   144f0:	add	r1, r0, #1
   144f4:	strb	r1, [r9, #278]	; 0x116
   144f8:	ldr	r0, [r7, #8]
   144fc:	add	r0, r0, #1
   14500:	str	r0, [r7, #8]
   14504:	movw	r0, #61408	; 0xefe0
   14508:	movt	r0, #2
   1450c:	ldr	r0, [r0]
   14510:	cmp	r0, #1
   14514:	blt	14678 <sprintf@plt+0x2df0>
   14518:	mvn	r2, #0
   1451c:	mov	r8, #0
   14520:	add	r6, sp, #8
   14524:	uxtab	r4, r2, r1
   14528:	b	14548 <sprintf@plt+0x2cc0>
   1452c:	sdiv	r3, r1, r2
   14530:	mls	r1, r3, r2, r1
   14534:	cmp	r1, #0
   14538:	beq	14588 <sprintf@plt+0x2d00>
   1453c:	add	r8, r8, #1
   14540:	cmp	r8, r0
   14544:	bge	145e4 <sprintf@plt+0x2d5c>
   14548:	add	r1, r4, r8
   1454c:	sdiv	r2, r1, r0
   14550:	mls	sl, r2, r0, r1
   14554:	add	r1, r7, sl, lsl #2
   14558:	ldr	r1, [r1, #24]
   1455c:	cmp	r1, #0
   14560:	beq	14588 <sprintf@plt+0x2d00>
   14564:	sub	r3, r1, #1
   14568:	ldr	r1, [r7, #8]
   1456c:	mov	r2, #243	; 0xf3
   14570:	cmp	r3, #3
   14574:	bhi	1452c <sprintf@plt+0x2ca4>
   14578:	movw	r2, #37164	; 0x912c
   1457c:	movt	r2, #1
   14580:	ldr	r2, [r2, r3, lsl #2]
   14584:	b	1452c <sprintf@plt+0x2ca4>
   14588:	ldr	r0, [r7]
   1458c:	bl	11534 <rb_get_fd@plt>
   14590:	movw	r2, #62112	; 0xf2a0
   14594:	lsl	r1, sl, #7
   14598:	mov	r3, #0
   1459c:	movt	r2, #2
   145a0:	ldrh	r1, [r2, r1]!	; <UNPREDICTABLE>
   145a4:	str	r2, [sp]
   145a8:	mov	r2, r5
   145ac:	cmp	r1, #2
   145b0:	mov	r1, #28
   145b4:	movweq	r1, #16
   145b8:	str	r1, [sp, #4]
   145bc:	mov	r1, r6
   145c0:	bl	115b8 <sendto@plt>
   145c4:	cmp	r0, r5
   145c8:	beq	14670 <sprintf@plt+0x2de8>
   145cc:	movw	r0, #61408	; 0xefe0
   145d0:	movt	r0, #2
   145d4:	ldr	r0, [r0]
   145d8:	add	r8, r8, #1
   145dc:	cmp	r8, r0
   145e0:	blt	14548 <sprintf@plt+0x2cc0>
   145e4:	cmp	r0, #1
   145e8:	blt	14678 <sprintf@plt+0x2df0>
   145ec:	mov	r6, #0
   145f0:	add	r8, sp, #8
   145f4:	b	14610 <sprintf@plt+0x2d88>
   145f8:	movw	r0, #61408	; 0xefe0
   145fc:	movt	r0, #2
   14600:	ldr	r0, [r0]
   14604:	add	r6, r6, #1
   14608:	cmp	r6, r0
   1460c:	bge	14678 <sprintf@plt+0x2df0>
   14610:	add	r1, r4, r6
   14614:	sdiv	r2, r1, r0
   14618:	mls	sl, r2, r0, r1
   1461c:	add	r1, r7, sl, lsl #2
   14620:	ldr	r1, [r1, #24]
   14624:	cmp	r1, #0
   14628:	beq	14604 <sprintf@plt+0x2d7c>
   1462c:	ldr	r0, [r7]
   14630:	bl	11534 <rb_get_fd@plt>
   14634:	movw	r2, #62112	; 0xf2a0
   14638:	lsl	r1, sl, #7
   1463c:	mov	r3, #0
   14640:	movt	r2, #2
   14644:	ldrh	r1, [r2, r1]!	; <UNPREDICTABLE>
   14648:	str	r2, [sp]
   1464c:	mov	r2, r5
   14650:	cmp	r1, #2
   14654:	mov	r1, #28
   14658:	movweq	r1, #16
   1465c:	str	r1, [sp, #4]
   14660:	mov	r1, r8
   14664:	bl	115b8 <sendto@plt>
   14668:	cmp	r0, r5
   1466c:	bne	145f8 <sprintf@plt+0x2d70>
   14670:	cmn	sl, #1
   14674:	strne	sl, [r9, #288]	; 0x120
   14678:	sub	sp, fp, #28
   1467c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14680:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14684:	add	fp, sp, #28
   14688:	sub	sp, sp, #4
   1468c:	vpush	{d8-d9}
   14690:	sub	sp, sp, #168	; 0xa8
   14694:	movw	r6, #61408	; 0xefe0
   14698:	mov	r0, #0
   1469c:	movw	r1, #38671	; 0x970f
   146a0:	movt	r6, #2
   146a4:	movt	r1, #1
   146a8:	str	r0, [r6]
   146ac:	movw	r0, #37190	; 0x9146
   146b0:	movt	r0, #1
   146b4:	bl	115c4 <fopen@plt>
   146b8:	cmp	r0, #0
   146bc:	beq	148c0 <sprintf@plt+0x3038>
   146c0:	mov	r4, r0
   146c4:	add	r5, sp, #4
   146c8:	mov	r1, #128	; 0x80
   146cc:	mov	r0, r5
   146d0:	mov	r2, r4
   146d4:	bl	1160c <fgets_unlocked@plt>
   146d8:	cmp	r0, #0
   146dc:	beq	148b0 <sprintf@plt+0x3028>
   146e0:	sub	r0, fp, #80	; 0x50
   146e4:	sub	sl, r5, #1
   146e8:	add	r0, r0, #4
   146ec:	str	r0, [sp]
   146f0:	bl	1175c <__ctype_b_loc@plt>
   146f4:	movw	r6, #39305	; 0x9989
   146f8:	vmov.i32	q4, #0	; 0x00000000
   146fc:	mov	r7, r0
   14700:	movt	r6, #1
   14704:	b	14734 <sprintf@plt+0x2eac>
   14708:	movw	r0, #61856	; 0xf1a0
   1470c:	mov	r1, r9
   14710:	mov	r2, #256	; 0x100
   14714:	movt	r0, #2
   14718:	bl	11618 <rb_strlcpy@plt>
   1471c:	mov	r0, r5
   14720:	mov	r1, #128	; 0x80
   14724:	mov	r2, r4
   14728:	bl	1160c <fgets_unlocked@plt>
   1472c:	cmp	r0, #0
   14730:	beq	148b0 <sprintf@plt+0x3028>
   14734:	mov	r0, r5
   14738:	mov	r1, r6
   1473c:	bl	1184c <strpbrk@plt>
   14740:	cmp	r0, #0
   14744:	mov	r8, sl
   14748:	movne	r1, #0
   1474c:	strbne	r1, [r0]
   14750:	ldr	r0, [r7]
   14754:	ldrb	r1, [r8, #1]!
   14758:	add	r2, r0, r1, lsl #1
   1475c:	ldrb	r2, [r2, #1]
   14760:	tst	r2, #32
   14764:	bne	14754 <sprintf@plt+0x2ecc>
   14768:	cmp	r1, #0
   1476c:	cmpne	r1, #35	; 0x23
   14770:	beq	1471c <sprintf@plt+0x2e94>
   14774:	cmp	r1, #59	; 0x3b
   14778:	mov	r9, r8
   1477c:	beq	1471c <sprintf@plt+0x2e94>
   14780:	ldrb	r1, [r9, #1]!
   14784:	cmp	r1, #0
   14788:	beq	1479c <sprintf@plt+0x2f14>
   1478c:	add	r2, r0, r1, lsl #1
   14790:	ldrh	r2, [r2]
   14794:	ands	r2, r2, #8192	; 0x2000
   14798:	beq	14780 <sprintf@plt+0x2ef8>
   1479c:	cmp	r1, #0
   147a0:	beq	1471c <sprintf@plt+0x2e94>
   147a4:	mov	r0, #0
   147a8:	strb	r0, [r9]
   147ac:	ldr	r0, [r7]
   147b0:	ldrb	r1, [r9, #1]!
   147b4:	add	r1, r0, r1, lsl #1
   147b8:	ldrb	r1, [r1, #1]
   147bc:	tst	r1, #32
   147c0:	bne	147b0 <sprintf@plt+0x2f28>
   147c4:	movw	r1, #37207	; 0x9157
   147c8:	mov	r0, r9
   147cc:	movt	r1, #1
   147d0:	bl	1184c <strpbrk@plt>
   147d4:	cmp	r0, #0
   147d8:	movne	r1, #0
   147dc:	strbne	r1, [r0]
   147e0:	movw	r1, #37210	; 0x915a
   147e4:	mov	r0, r8
   147e8:	movt	r1, #1
   147ec:	bl	11660 <rb_strcasecmp@plt>
   147f0:	cmp	r0, #0
   147f4:	beq	14708 <sprintf@plt+0x2e80>
   147f8:	movw	r1, #37217	; 0x9161
   147fc:	mov	r0, r8
   14800:	movt	r1, #1
   14804:	bl	11660 <rb_strcasecmp@plt>
   14808:	cmp	r0, #0
   1480c:	bne	1471c <sprintf@plt+0x2e94>
   14810:	movw	r0, #61408	; 0xefe0
   14814:	movt	r0, #2
   14818:	ldr	r0, [r0]
   1481c:	cmp	r0, #9
   14820:	bgt	1471c <sprintf@plt+0x2e94>
   14824:	ldr	r0, [sp]
   14828:	mov	r1, #12
   1482c:	sub	r2, fp, #80	; 0x50
   14830:	sub	r3, fp, #84	; 0x54
   14834:	vst1.32	{d8-d9}, [r0], r1
   14838:	movw	r1, #37210	; 0x915a
   1483c:	vst1.32	{d8-d9}, [r0]
   14840:	mov	r0, #5
   14844:	movt	r1, #1
   14848:	str	r0, [fp, #-80]	; 0xffffffb0
   1484c:	mov	r0, #2
   14850:	str	r0, [fp, #-72]	; 0xffffffb8
   14854:	mov	r0, r9
   14858:	bl	1166c <getaddrinfo@plt>
   1485c:	cmp	r0, #0
   14860:	bne	1471c <sprintf@plt+0x2e94>
   14864:	ldr	r8, [fp, #-84]	; 0xffffffac
   14868:	cmp	r8, #0
   1486c:	beq	1471c <sprintf@plt+0x2e94>
   14870:	movw	r0, #61408	; 0xefe0
   14874:	ldr	r2, [r8, #16]
   14878:	ldr	r1, [r8, #20]
   1487c:	movt	r0, #2
   14880:	ldr	r9, [r0]
   14884:	movw	r0, #62112	; 0xf2a0
   14888:	movt	r0, #2
   1488c:	add	r0, r0, r9, lsl #7
   14890:	bl	116b4 <memcpy@plt>
   14894:	movw	r1, #61408	; 0xefe0
   14898:	add	r0, r9, #1
   1489c:	movt	r1, #2
   148a0:	str	r0, [r1]
   148a4:	mov	r0, r8
   148a8:	bl	115dc <freeaddrinfo@plt>
   148ac:	b	1471c <sprintf@plt+0x2e94>
   148b0:	mov	r0, r4
   148b4:	bl	11564 <fclose@plt>
   148b8:	movw	r6, #61408	; 0xefe0
   148bc:	movt	r6, #2
   148c0:	ldr	r0, [r6]
   148c4:	cmp	r0, #0
   148c8:	bne	1494c <sprintf@plt+0x30c4>
   148cc:	vmov.i32	q8, #0	; 0x00000000
   148d0:	add	r2, sp, #4
   148d4:	movw	r1, #37210	; 0x915a
   148d8:	sub	r3, fp, #80	; 0x50
   148dc:	add	r0, r2, #4
   148e0:	movt	r1, #1
   148e4:	vst1.32	{d16-d17}, [r0]
   148e8:	add	r0, r2, #16
   148ec:	vst1.32	{d16-d17}, [r0]
   148f0:	mov	r0, #5
   148f4:	str	r0, [sp, #4]
   148f8:	mov	r0, #2
   148fc:	str	r0, [sp, #12]
   14900:	movw	r0, #37180	; 0x913c
   14904:	movt	r0, #1
   14908:	bl	1166c <getaddrinfo@plt>
   1490c:	cmp	r0, #0
   14910:	bne	1494c <sprintf@plt+0x30c4>
   14914:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14918:	cmp	r4, #0
   1491c:	beq	1494c <sprintf@plt+0x30c4>
   14920:	ldr	r5, [r6]
   14924:	movw	r0, #62112	; 0xf2a0
   14928:	ldr	r2, [r4, #16]
   1492c:	ldr	r1, [r4, #20]
   14930:	movt	r0, #2
   14934:	add	r0, r0, r5, lsl #7
   14938:	bl	116b4 <memcpy@plt>
   1493c:	add	r0, r5, #1
   14940:	str	r0, [r6]
   14944:	mov	r0, r4
   14948:	bl	115dc <freeaddrinfo@plt>
   1494c:	mov	r0, #0
   14950:	sub	sp, fp, #48	; 0x30
   14954:	vpop	{d8-d9}
   14958:	add	sp, sp, #4
   1495c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14964:	add	fp, sp, #28
   14968:	sub	sp, sp, #284	; 0x11c
   1496c:	cmp	r2, r0
   14970:	bcc	14f40 <sprintf@plt+0x36b8>
   14974:	mov	ip, r1
   14978:	cmp	r2, r1
   1497c:	bcs	14f40 <sprintf@plt+0x36b8>
   14980:	ldrb	r6, [r2]
   14984:	ldr	r1, [fp, #8]
   14988:	mov	r8, r3
   1498c:	cmp	r6, #0
   14990:	beq	14ed8 <sprintf@plt+0x3650>
   14994:	str	r0, [sp, #20]
   14998:	sub	r0, ip, r0
   1499c:	add	r7, sp, #25
   149a0:	str	r8, [sp, #8]
   149a4:	str	r2, [sp, #4]
   149a8:	add	r1, r2, #1
   149ac:	mvn	r4, #0
   149b0:	mov	r8, #0
   149b4:	mov	sl, #0
   149b8:	str	r0, [sp, #16]
   149bc:	rsb	r0, r2, #1
   149c0:	mov	r2, r7
   149c4:	str	r0, [sp, #12]
   149c8:	ands	r3, r6, #192	; 0xc0
   149cc:	beq	14a14 <sprintf@plt+0x318c>
   149d0:	cmp	r3, #192	; 0xc0
   149d4:	beq	14a6c <sprintf@plt+0x31e4>
   149d8:	cmp	r3, #64	; 0x40
   149dc:	uxtbeq	r3, r6
   149e0:	cmpeq	r3, #65	; 0x41
   149e4:	bne	14f40 <sprintf@plt+0x36b8>
   149e8:	ldrb	r3, [r1]
   149ec:	mov	r0, #1
   149f0:	add	r5, r3, #7
   149f4:	cmp	r3, #0
   149f8:	add	r5, r0, r5, lsr #3
   149fc:	movweq	r5, #33	; 0x21
   14a00:	add	r3, sl, #1
   14a04:	add	sl, r5, r3
   14a08:	cmp	sl, #254	; 0xfe
   14a0c:	ble	14a28 <sprintf@plt+0x31a0>
   14a10:	b	14f40 <sprintf@plt+0x36b8>
   14a14:	uxtb	r5, r6
   14a18:	add	r3, sl, #1
   14a1c:	add	sl, r5, r3
   14a20:	cmp	sl, #254	; 0xfe
   14a24:	bgt	14f40 <sprintf@plt+0x36b8>
   14a28:	add	r9, r1, r5
   14a2c:	cmp	r9, ip
   14a30:	bcs	14f40 <sprintf@plt+0x36b8>
   14a34:	strb	r6, [r2]
   14a38:	add	r0, r7, r3
   14a3c:	mov	r2, r5
   14a40:	mov	r6, ip
   14a44:	bl	116b4 <memcpy@plt>
   14a48:	add	r0, r8, r5
   14a4c:	mov	ip, r6
   14a50:	mov	r1, r9
   14a54:	add	r8, r0, #1
   14a58:	ldrb	r6, [r1], #1
   14a5c:	add	r2, r7, sl
   14a60:	cmp	r6, #0
   14a64:	bne	149c8 <sprintf@plt+0x3140>
   14a68:	b	14abc <sprintf@plt+0x3234>
   14a6c:	cmp	r1, ip
   14a70:	ldrbcc	r2, [r1]
   14a74:	andcc	r0, r6, #63	; 0x3f
   14a78:	orrcc	r0, r2, r0, lsl #8
   14a7c:	ldrcc	r2, [sp, #20]
   14a80:	addcc	r0, r2, r0
   14a84:	cmpcc	r0, ip
   14a88:	bcs	14f40 <sprintf@plt+0x36b8>
   14a8c:	ldr	r2, [sp, #12]
   14a90:	cmp	r4, #0
   14a94:	add	r8, r8, #2
   14a98:	addmi	r4, r2, r1
   14a9c:	ldr	r1, [sp, #16]
   14aa0:	cmp	r8, r1
   14aa4:	mov	r1, r0
   14aa8:	bge	14f40 <sprintf@plt+0x36b8>
   14aac:	ldrb	r6, [r1], #1
   14ab0:	add	r2, r7, sl
   14ab4:	cmp	r6, #0
   14ab8:	bne	149c8 <sprintf@plt+0x3140>
   14abc:	ldr	r8, [sp, #8]
   14ac0:	mov	r0, #0
   14ac4:	cmn	r4, #1
   14ac8:	strb	r0, [r2]
   14acc:	bgt	14ae0 <sprintf@plt+0x3258>
   14ad0:	ldr	r0, [sp, #4]
   14ad4:	sub	r4, r1, r0
   14ad8:	cmn	r4, #1
   14adc:	beq	14f4c <sprintf@plt+0x36c4>
   14ae0:	ldr	r1, [fp, #8]
   14ae4:	ldrb	r6, [sp, #25]
   14ae8:	str	r4, [sp, #16]
   14aec:	add	sl, r8, r1
   14af0:	cmp	r6, #0
   14af4:	beq	14f34 <sprintf@plt+0x36ac>
   14af8:	movw	r1, #37228	; 0x916c
   14afc:	add	r9, sp, #25
   14b00:	mov	ip, #92	; 0x5c
   14b04:	mov	r4, r8
   14b08:	movt	r1, #1
   14b0c:	uxtb	r3, r6
   14b10:	cmp	r3, #192	; 0xc0
   14b14:	bcs	14f40 <sprintf@plt+0x36b8>
   14b18:	cmp	r4, r8
   14b1c:	mov	r2, r6
   14b20:	mov	lr, r8
   14b24:	beq	14b40 <sprintf@plt+0x32b8>
   14b28:	cmp	r4, sl
   14b2c:	bcs	14f40 <sprintf@plt+0x36b8>
   14b30:	mov	r0, #46	; 0x2e
   14b34:	strb	r0, [r4], #1
   14b38:	ldrb	r2, [r9]
   14b3c:	mov	lr, r4
   14b40:	and	r0, r2, #192	; 0xc0
   14b44:	add	r4, r9, #1
   14b48:	cmp	r0, #64	; 0x40
   14b4c:	beq	14b6c <sprintf@plt+0x32e4>
   14b50:	cmp	r0, #192	; 0xc0
   14b54:	beq	14f40 <sprintf@plt+0x36b8>
   14b58:	uxtb	r5, r2
   14b5c:	add	r0, lr, r5
   14b60:	cmp	r0, sl
   14b64:	bcc	14b9c <sprintf@plt+0x3314>
   14b68:	b	14f40 <sprintf@plt+0x36b8>
   14b6c:	uxtb	r0, r2
   14b70:	cmp	r0, #65	; 0x41
   14b74:	bne	14f40 <sprintf@plt+0x36b8>
   14b78:	ldrb	r0, [r4]
   14b7c:	mov	r7, #1
   14b80:	add	r2, r0, #7
   14b84:	cmp	r0, #0
   14b88:	add	r5, r7, r2, lsr #3
   14b8c:	movweq	r5, #33	; 0x21
   14b90:	add	r0, lr, r5
   14b94:	cmp	r0, sl
   14b98:	bcs	14f40 <sprintf@plt+0x36b8>
   14b9c:	and	r0, r6, #192	; 0xc0
   14ba0:	cmp	r0, #64	; 0x40
   14ba4:	bne	14c48 <sprintf@plt+0x33c0>
   14ba8:	cmp	r3, #65	; 0x41
   14bac:	bne	14f58 <sprintf@plt+0x36d0>
   14bb0:	ldrb	r6, [r4]
   14bb4:	mov	r0, #7
   14bb8:	cmp	r6, #0
   14bbc:	movweq	r6, #256	; 0x100
   14bc0:	cmp	r6, #9
   14bc4:	add	r2, r6, #3
   14bc8:	movwhi	r0, #8
   14bcc:	cmp	r6, #99	; 0x63
   14bd0:	movwhi	r0, #9
   14bd4:	add	r0, r0, r2, lsr #2
   14bd8:	add	r0, lr, r0
   14bdc:	cmp	r0, sl
   14be0:	bcs	14f40 <sprintf@plt+0x36b8>
   14be4:	movw	r0, #23388	; 0x5b5c
   14be8:	mov	r7, lr
   14bec:	add	r9, r9, #2
   14bf0:	cmp	r6, #8
   14bf4:	movt	r0, #120	; 0x78
   14bf8:	str	r0, [r7], #3
   14bfc:	bcc	14e2c <sprintf@plt+0x35a4>
   14c00:	mov	r5, lr
   14c04:	mov	r4, r6
   14c08:	ldrb	r2, [r9], #1
   14c0c:	mov	r0, r7
   14c10:	bl	11888 <sprintf@plt>
   14c14:	movw	r1, #37228	; 0x916c
   14c18:	sub	r4, r4, #8
   14c1c:	add	r7, r7, r0
   14c20:	movt	r1, #1
   14c24:	cmp	r4, #7
   14c28:	bgt	14c08 <sprintf@plt+0x3380>
   14c2c:	sub	r0, r9, #1
   14c30:	mov	lr, r5
   14c34:	str	r0, [sp, #20]
   14c38:	mov	r5, lr
   14c3c:	cmp	r4, #5
   14c40:	bge	14e40 <sprintf@plt+0x35b8>
   14c44:	b	14e50 <sprintf@plt+0x35c8>
   14c48:	mov	r9, r4
   14c4c:	cmp	r5, #1
   14c50:	mov	r4, lr
   14c54:	blt	14eb8 <sprintf@plt+0x3630>
   14c58:	ldrb	r2, [r9], #1
   14c5c:	sub	r3, r2, #34	; 0x22
   14c60:	cmp	r3, #58	; 0x3a
   14c64:	bhi	14d84 <sprintf@plt+0x34fc>
   14c68:	add	r7, pc, #0
   14c6c:	ldr	pc, [r7, r3, lsl #2]
   14c70:	andeq	r4, r1, ip, asr sp
   14c74:	andeq	r4, r1, r4, lsl #27
   14c78:	andeq	r4, r1, ip, asr sp
   14c7c:	andeq	r4, r1, r4, lsl #27
   14c80:	andeq	r4, r1, r4, lsl #27
   14c84:	andeq	r4, r1, r4, lsl #27
   14c88:	andeq	r4, r1, ip, asr sp
   14c8c:	andeq	r4, r1, ip, asr sp
   14c90:	andeq	r4, r1, r4, lsl #27
   14c94:	andeq	r4, r1, r4, lsl #27
   14c98:	andeq	r4, r1, r4, lsl #27
   14c9c:	andeq	r4, r1, r4, lsl #27
   14ca0:	andeq	r4, r1, ip, asr sp
   14ca4:	andeq	r4, r1, r4, lsl #27
   14ca8:	andeq	r4, r1, r4, lsl #27
   14cac:	andeq	r4, r1, r4, lsl #27
   14cb0:	andeq	r4, r1, r4, lsl #27
   14cb4:	andeq	r4, r1, r4, lsl #27
   14cb8:	andeq	r4, r1, r4, lsl #27
   14cbc:	andeq	r4, r1, r4, lsl #27
   14cc0:	andeq	r4, r1, r4, lsl #27
   14cc4:	andeq	r4, r1, r4, lsl #27
   14cc8:	andeq	r4, r1, r4, lsl #27
   14ccc:	andeq	r4, r1, r4, lsl #27
   14cd0:	andeq	r4, r1, r4, lsl #27
   14cd4:	andeq	r4, r1, ip, asr sp
   14cd8:	andeq	r4, r1, r4, lsl #27
   14cdc:	andeq	r4, r1, r4, lsl #27
   14ce0:	andeq	r4, r1, r4, lsl #27
   14ce4:	andeq	r4, r1, r4, lsl #27
   14ce8:	andeq	r4, r1, ip, asr sp
   14cec:	andeq	r4, r1, r4, lsl #27
   14cf0:	andeq	r4, r1, r4, lsl #27
   14cf4:	andeq	r4, r1, r4, lsl #27
   14cf8:	andeq	r4, r1, r4, lsl #27
   14cfc:	andeq	r4, r1, r4, lsl #27
   14d00:	andeq	r4, r1, r4, lsl #27
   14d04:	andeq	r4, r1, r4, lsl #27
   14d08:	andeq	r4, r1, r4, lsl #27
   14d0c:	andeq	r4, r1, r4, lsl #27
   14d10:	andeq	r4, r1, r4, lsl #27
   14d14:	andeq	r4, r1, r4, lsl #27
   14d18:	andeq	r4, r1, r4, lsl #27
   14d1c:	andeq	r4, r1, r4, lsl #27
   14d20:	andeq	r4, r1, r4, lsl #27
   14d24:	andeq	r4, r1, r4, lsl #27
   14d28:	andeq	r4, r1, r4, lsl #27
   14d2c:	andeq	r4, r1, r4, lsl #27
   14d30:	andeq	r4, r1, r4, lsl #27
   14d34:	andeq	r4, r1, r4, lsl #27
   14d38:	andeq	r4, r1, r4, lsl #27
   14d3c:	andeq	r4, r1, r4, lsl #27
   14d40:	andeq	r4, r1, r4, lsl #27
   14d44:	andeq	r4, r1, r4, lsl #27
   14d48:	andeq	r4, r1, r4, lsl #27
   14d4c:	andeq	r4, r1, r4, lsl #27
   14d50:	andeq	r4, r1, r4, lsl #27
   14d54:	andeq	r4, r1, r4, lsl #27
   14d58:	andeq	r4, r1, ip, asr sp
   14d5c:	add	r3, r4, #1
   14d60:	cmp	r3, sl
   14d64:	bcs	14f40 <sprintf@plt+0x36b8>
   14d68:	strb	r2, [r4, #1]
   14d6c:	strb	ip, [r4]
   14d70:	add	r4, r4, #2
   14d74:	sub	r5, r5, #1
   14d78:	cmp	r5, #0
   14d7c:	bgt	14c58 <sprintf@plt+0x33d0>
   14d80:	b	14eb8 <sprintf@plt+0x3630>
   14d84:	sub	r3, r2, #33	; 0x21
   14d88:	cmp	r3, #94	; 0x5e
   14d8c:	bcc	14e10 <sprintf@plt+0x3588>
   14d90:	add	r3, r4, #3
   14d94:	cmp	r3, sl
   14d98:	bcs	14f40 <sprintf@plt+0x36b8>
   14d9c:	movw	r0, #34079	; 0x851f
   14da0:	strb	ip, [r4]
   14da4:	movt	r0, #20971	; 0x51eb
   14da8:	umull	r3, r7, r2, r0
   14dac:	movw	r0, #37242	; 0x917a
   14db0:	movt	r0, #1
   14db4:	ldrb	r3, [r0, r7, lsr #5]
   14db8:	strb	r3, [r4, #1]
   14dbc:	movw	r3, #52429	; 0xcccd
   14dc0:	movt	r3, #52428	; 0xcccc
   14dc4:	mov	lr, r3
   14dc8:	umull	r3, r6, r2, r3
   14dcc:	lsr	r3, r6, #3
   14dd0:	mov	r6, #100	; 0x64
   14dd4:	add	r3, r3, r3, lsl #2
   14dd8:	sub	r3, r2, r3, lsl #1
   14ddc:	ldrb	r3, [r0, r3]
   14de0:	strb	r3, [r4, #3]
   14de4:	lsr	r3, r7, #5
   14de8:	mls	r2, r3, r6, r2
   14dec:	uxtb	r2, r2
   14df0:	umull	r2, r3, r2, lr
   14df4:	ldrb	r2, [r0, r3, lsr #3]
   14df8:	strb	r2, [r4, #2]
   14dfc:	add	r4, r4, #4
   14e00:	sub	r5, r5, #1
   14e04:	cmp	r5, #0
   14e08:	bgt	14c58 <sprintf@plt+0x33d0>
   14e0c:	b	14eb8 <sprintf@plt+0x3630>
   14e10:	cmp	r4, sl
   14e14:	bcs	14f40 <sprintf@plt+0x36b8>
   14e18:	strb	r2, [r4], #1
   14e1c:	sub	r5, r5, #1
   14e20:	cmp	r5, #0
   14e24:	bgt	14c58 <sprintf@plt+0x33d0>
   14e28:	b	14eb8 <sprintf@plt+0x3630>
   14e2c:	str	r4, [sp, #20]
   14e30:	mov	r4, r6
   14e34:	mov	r5, lr
   14e38:	cmp	r4, #5
   14e3c:	blt	14e50 <sprintf@plt+0x35c8>
   14e40:	ldrb	r0, [r9]
   14e44:	mov	r2, #255	; 0xff
   14e48:	mov	r3, #8
   14e4c:	b	14e70 <sprintf@plt+0x35e8>
   14e50:	cmp	r4, #1
   14e54:	blt	14e8c <sprintf@plt+0x3604>
   14e58:	ldrb	r0, [r9]
   14e5c:	movw	r1, #37233	; 0x9171
   14e60:	mov	r2, #15
   14e64:	mov	r3, #4
   14e68:	movt	r1, #1
   14e6c:	lsr	r0, r0, #4
   14e70:	sub	r3, r3, r4
   14e74:	and	r2, r0, r2, lsl r3
   14e78:	mov	r0, r7
   14e7c:	bl	11888 <sprintf@plt>
   14e80:	add	r7, r7, r0
   14e84:	ldr	r0, [sp, #20]
   14e88:	add	r9, r0, #2
   14e8c:	movw	r1, #37237	; 0x9175
   14e90:	mov	r0, r7
   14e94:	mov	r2, r6
   14e98:	movt	r1, #1
   14e9c:	bl	11888 <sprintf@plt>
   14ea0:	add	r4, r7, r0
   14ea4:	mov	ip, #92	; 0x5c
   14ea8:	subs	r1, r4, r5
   14eac:	movw	r1, #37228	; 0x916c
   14eb0:	movt	r1, #1
   14eb4:	bmi	14f40 <sprintf@plt+0x36b8>
   14eb8:	ldrb	r6, [r9]
   14ebc:	cmp	r6, #0
   14ec0:	bne	14b0c <sprintf@plt+0x3284>
   14ec4:	ldr	r0, [sp, #16]
   14ec8:	ldr	r1, [fp, #8]
   14ecc:	cmp	r4, r8
   14ed0:	bne	14efc <sprintf@plt+0x3674>
   14ed4:	b	14ee8 <sprintf@plt+0x3660>
   14ed8:	mov	r0, #0
   14edc:	add	sl, r8, r1
   14ee0:	strb	r0, [sp, #25]
   14ee4:	mov	r0, #1
   14ee8:	cmp	r1, #0
   14eec:	ble	14f40 <sprintf@plt+0x36b8>
   14ef0:	mov	r1, #46	; 0x2e
   14ef4:	mov	r4, r8
   14ef8:	strb	r1, [r4], #1
   14efc:	cmp	r4, sl
   14f00:	bcs	14f40 <sprintf@plt+0x36b8>
   14f04:	mov	r1, #0
   14f08:	strb	r1, [r4], -r8
   14f0c:	cmn	r4, #2
   14f10:	beq	14f4c <sprintf@plt+0x36c4>
   14f14:	cmp	r0, #1
   14f18:	blt	14f2c <sprintf@plt+0x36a4>
   14f1c:	ldrb	r1, [r8]
   14f20:	cmp	r1, #46	; 0x2e
   14f24:	moveq	r1, #0
   14f28:	strbeq	r1, [r8]
   14f2c:	sub	sp, fp, #28
   14f30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f34:	ldr	r0, [sp, #16]
   14f38:	cmp	r1, #0
   14f3c:	bgt	14ef0 <sprintf@plt+0x3668>
   14f40:	bl	1187c <__errno_location@plt>
   14f44:	mov	r1, #90	; 0x5a
   14f48:	str	r1, [r0]
   14f4c:	mvn	r0, #0
   14f50:	sub	sp, fp, #28
   14f54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f58:	bl	1187c <__errno_location@plt>
   14f5c:	mov	r1, #22
   14f60:	b	14f48 <sprintf@plt+0x36c0>
   14f64:	push	{r4, sl, fp, lr}
   14f68:	add	fp, sp, #8
   14f6c:	cmp	r0, r1
   14f70:	mov	lr, r0
   14f74:	bcs	14fe4 <sprintf@plt+0x375c>
   14f78:	mov	ip, #1
   14f7c:	mov	lr, r0
   14f80:	mov	r2, lr
   14f84:	ldrb	r3, [r2], #1
   14f88:	cmp	r3, #0
   14f8c:	bne	14fb0 <sprintf@plt+0x3728>
   14f90:	b	14fe0 <sprintf@plt+0x3758>
   14f94:	add	lr, r2, r3
   14f98:	cmp	lr, r1
   14f9c:	bcs	14fe4 <sprintf@plt+0x375c>
   14fa0:	mov	r2, lr
   14fa4:	ldrb	r3, [r2], #1
   14fa8:	cmp	r3, #0
   14fac:	beq	14fe0 <sprintf@plt+0x3758>
   14fb0:	ands	r4, r3, #192	; 0xc0
   14fb4:	beq	14f94 <sprintf@plt+0x370c>
   14fb8:	cmp	r4, #64	; 0x40
   14fbc:	bne	15000 <sprintf@plt+0x3778>
   14fc0:	cmp	r3, #65	; 0x41
   14fc4:	bne	14fec <sprintf@plt+0x3764>
   14fc8:	ldrb	r4, [r2]
   14fcc:	add	r3, r4, #7
   14fd0:	cmp	r4, #0
   14fd4:	add	r3, ip, r3, lsr #3
   14fd8:	movweq	r3, #33	; 0x21
   14fdc:	b	14f94 <sprintf@plt+0x370c>
   14fe0:	mov	lr, r2
   14fe4:	cmp	lr, r1
   14fe8:	bls	15014 <sprintf@plt+0x378c>
   14fec:	bl	1187c <__errno_location@plt>
   14ff0:	mov	r1, #90	; 0x5a
   14ff4:	str	r1, [r0]
   14ff8:	mvn	r0, #0
   14ffc:	pop	{r4, sl, fp, pc}
   15000:	cmp	r4, #192	; 0xc0
   15004:	bne	14fec <sprintf@plt+0x3764>
   15008:	add	lr, lr, #2
   1500c:	cmp	lr, r1
   15010:	bhi	14fec <sprintf@plt+0x3764>
   15014:	sub	r0, lr, r0
   15018:	pop	{r4, sl, fp, pc}
   1501c:	ldrb	r1, [r0]
   15020:	ldrb	r0, [r0, #1]
   15024:	orr	r0, r0, r1, lsl #8
   15028:	bx	lr
   1502c:	ldr	r0, [r0]
   15030:	rev	r0, r0
   15034:	bx	lr
   15038:	rev16	r0, r0
   1503c:	strh	r0, [r1]
   15040:	bx	lr
   15044:	rev	r0, r0
   15048:	str	r0, [r1]
   1504c:	bx	lr
   15050:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15054:	add	fp, sp, #28
   15058:	sub	sp, sp, #396	; 0x18c
   1505c:	mov	r7, r0
   15060:	mvn	r0, #0
   15064:	cmp	r3, #0
   15068:	beq	15950 <sprintf@plt+0x40c8>
   1506c:	ldr	r6, [fp, #8]
   15070:	cmp	r6, #12
   15074:	blt	15950 <sprintf@plt+0x40c8>
   15078:	mov	r4, #0
   1507c:	mov	r5, #65536	; 0x10000
   15080:	subs	r6, r6, #16
   15084:	str	r5, [r3]
   15088:	str	r4, [r3, #4]
   1508c:	str	r4, [r3, #8]
   15090:	str	r4, [sp, #52]	; 0x34
   15094:	str	r3, [sp, #48]	; 0x30
   15098:	bmi	15950 <sprintf@plt+0x40c8>
   1509c:	add	r4, sp, #129	; 0x81
   150a0:	str	r1, [sp, #24]
   150a4:	str	r6, [sp, #32]
   150a8:	str	r2, [sp, #40]	; 0x28
   150ac:	str	r3, [sp, #36]	; 0x24
   150b0:	add	r0, r4, #1
   150b4:	add	r1, r4, #255	; 0xff
   150b8:	str	r0, [fp, #-40]	; 0xffffffd8
   150bc:	str	r1, [sp, #44]	; 0x2c
   150c0:	ldrb	r1, [r7]
   150c4:	cmp	r1, #0
   150c8:	beq	15488 <sprintf@plt+0x3c00>
   150cc:	movw	r6, #37242	; 0x917a
   150d0:	sub	r0, fp, #40	; 0x28
   150d4:	movt	r6, #1
   150d8:	add	r3, r0, #4
   150dc:	str	r3, [sp, #20]
   150e0:	mov	r0, #0
   150e4:	str	r4, [sp, #28]
   150e8:	uxtb	r9, r1
   150ec:	add	r8, r7, #1
   150f0:	cmp	r0, #0
   150f4:	beq	151a0 <sprintf@plt+0x3918>
   150f8:	cmp	r9, #91	; 0x5b
   150fc:	beq	151e8 <sprintf@plt+0x3960>
   15100:	mov	r0, r6
   15104:	mov	r1, r9
   15108:	mov	r2, #11
   1510c:	bl	11858 <memchr@plt>
   15110:	cmp	r0, #0
   15114:	beq	151b4 <sprintf@plt+0x392c>
   15118:	ldrb	r1, [r7, #1]
   1511c:	mov	r5, #90	; 0x5a
   15120:	cmp	r1, #0
   15124:	beq	1582c <sprintf@plt+0x3fa4>
   15128:	mov	sl, r0
   1512c:	mov	r0, r6
   15130:	mov	r2, #11
   15134:	bl	11858 <memchr@plt>
   15138:	cmp	r0, #0
   1513c:	ldrbne	r1, [r7, #2]
   15140:	cmpne	r1, #0
   15144:	beq	1582c <sprintf@plt+0x3fa4>
   15148:	mov	r4, r0
   1514c:	mov	r0, r6
   15150:	mov	r2, #11
   15154:	bl	11858 <memchr@plt>
   15158:	cmp	r0, #0
   1515c:	beq	1582c <sprintf@plt+0x3fa4>
   15160:	sub	r1, sl, r6
   15164:	mov	r2, #100	; 0x64
   15168:	sub	r0, r0, r6
   1516c:	mul	r1, r1, r2
   15170:	sub	r2, r4, r6
   15174:	add	r2, r2, r2, lsl #2
   15178:	add	r1, r1, r2, lsl #1
   1517c:	add	r9, r1, r0
   15180:	cmp	r9, #255	; 0xff
   15184:	bgt	1582c <sprintf@plt+0x3fa4>
   15188:	add	r8, r7, #3
   1518c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15190:	ldr	r1, [sp, #44]	; 0x2c
   15194:	cmp	r0, r1
   15198:	bcc	151c4 <sprintf@plt+0x393c>
   1519c:	b	15828 <sprintf@plt+0x3fa0>
   151a0:	mov	r0, #1
   151a4:	cmp	r9, #92	; 0x5c
   151a8:	beq	151d4 <sprintf@plt+0x394c>
   151ac:	cmp	r9, #46	; 0x2e
   151b0:	beq	1528c <sprintf@plt+0x3a04>
   151b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   151b8:	ldr	r1, [sp, #44]	; 0x2c
   151bc:	cmp	r0, r1
   151c0:	bcs	15828 <sprintf@plt+0x3fa0>
   151c4:	add	r1, r0, #1
   151c8:	str	r1, [fp, #-40]	; 0xffffffd8
   151cc:	strb	r9, [r0]
   151d0:	mov	r0, #0
   151d4:	ldrb	r1, [r8]
   151d8:	mov	r7, r8
   151dc:	cmp	r1, #0
   151e0:	bne	150e8 <sprintf@plt+0x3860>
   151e4:	b	1581c <sprintf@plt+0x3f94>
   151e8:	mov	r0, r8
   151ec:	mov	r1, #93	; 0x5d
   151f0:	bl	1157c <strchr@plt>
   151f4:	cmp	r0, #0
   151f8:	beq	15858 <sprintf@plt+0x3fd0>
   151fc:	mov	r4, r0
   15200:	mov	r0, #0
   15204:	add	r9, r4, #2
   15208:	str	r0, [fp, #-36]	; 0xffffffdc
   1520c:	sub	r0, r9, r8
   15210:	cmp	r0, #2
   15214:	blt	15858 <sprintf@plt+0x3fd0>
   15218:	ldrb	r0, [r7, #1]
   1521c:	cmp	r0, #120	; 0x78
   15220:	bne	15858 <sprintf@plt+0x3fd0>
   15224:	add	r8, r7, #2
   15228:	bl	1175c <__ctype_b_loc@plt>
   1522c:	ldrb	r1, [r8]
   15230:	ldr	r2, [r0]
   15234:	add	r2, r2, r1, lsl #1
   15238:	ldrb	r2, [r2, #1]
   1523c:	tst	r2, #16
   15240:	beq	15858 <sprintf@plt+0x3fd0>
   15244:	ldr	r2, [sp, #44]	; 0x2c
   15248:	ldr	r3, [sp, #20]
   1524c:	mov	ip, #0
   15250:	cmp	r2, r3
   15254:	bls	15388 <sprintf@plt+0x3b00>
   15258:	cmp	r7, r4
   1525c:	mov	sl, #0
   15260:	mov	r4, r3
   15264:	mov	r2, #0
   15268:	bcs	15394 <sprintf@plt+0x3b0c>
   1526c:	ldr	r4, [sp, #20]
   15270:	add	r8, r7, #3
   15274:	mov	sl, #0
   15278:	mov	r5, #0
   1527c:	mov	ip, #0
   15280:	mov	r7, #0
   15284:	mov	r3, #0
   15288:	b	152e4 <sprintf@plt+0x3a5c>
   1528c:	ldr	r2, [sp, #28]
   15290:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15294:	mov	r5, #90	; 0x5a
   15298:	mvn	r0, r2
   1529c:	add	r0, r1, r0
   152a0:	tst	r0, #192	; 0xc0
   152a4:	bne	1582c <sprintf@plt+0x3fa4>
   152a8:	ldr	r1, [sp, #44]	; 0x2c
   152ac:	cmp	r1, r2
   152b0:	bls	1582c <sprintf@plt+0x3fa4>
   152b4:	strb	r0, [r2]
   152b8:	ldrb	r1, [r8]
   152bc:	cmp	r1, #0
   152c0:	beq	158a4 <sprintf@plt+0x401c>
   152c4:	cmp	r0, #0
   152c8:	cmpne	r1, #46	; 0x2e
   152cc:	beq	1582c <sprintf@plt+0x3fa4>
   152d0:	ldr	r4, [fp, #-40]	; 0xffffffd8
   152d4:	add	r0, r4, #1
   152d8:	str	r0, [fp, #-40]	; 0xffffffd8
   152dc:	b	15414 <sprintf@plt+0x3b8c>
   152e0:	ldrb	r1, [r8], #1
   152e4:	uxtb	r1, r1
   152e8:	cmp	r1, #47	; 0x2f
   152ec:	beq	1532c <sprintf@plt+0x3aa4>
   152f0:	cmp	r1, #93	; 0x5d
   152f4:	beq	15428 <sprintf@plt+0x3ba0>
   152f8:	ldr	r2, [r0]
   152fc:	cmp	r3, #0
   15300:	add	r2, r2, r1, lsl #1
   15304:	ldrh	r2, [r2]
   15308:	beq	15334 <sprintf@plt+0x3aac>
   1530c:	tst	r2, #2048	; 0x800
   15310:	beq	15858 <sprintf@plt+0x3fd0>
   15314:	cmp	r7, #0
   15318:	bne	15370 <sprintf@plt+0x3ae8>
   1531c:	cmp	r1, #48	; 0x30
   15320:	beq	15858 <sprintf@plt+0x3fd0>
   15324:	sub	r7, r8, #1
   15328:	b	15370 <sprintf@plt+0x3ae8>
   1532c:	mov	r3, #1
   15330:	b	15370 <sprintf@plt+0x3ae8>
   15334:	tst	r2, #4096	; 0x1000
   15338:	beq	15858 <sprintf@plt+0x3fd0>
   1533c:	add	sl, sl, #4
   15340:	cmp	sl, #256	; 0x100
   15344:	bgt	15858 <sprintf@plt+0x3fd0>
   15348:	movw	r2, #37253	; 0x9185
   1534c:	add	r5, r5, #4
   15350:	mov	r3, #0
   15354:	movt	r2, #1
   15358:	cmp	r5, #8
   1535c:	moveq	r3, #0
   15360:	moveq	r5, #0
   15364:	ldrb	r1, [r2, r1]
   15368:	add	ip, r1, ip, lsl #4
   1536c:	strbeq	ip, [r4], #1
   15370:	cmp	r8, r9
   15374:	mov	r2, #0
   15378:	ldrcc	r1, [sp, #44]	; 0x2c
   1537c:	cmpcc	r4, r1
   15380:	bcs	15394 <sprintf@plt+0x3b0c>
   15384:	b	152e0 <sprintf@plt+0x3a58>
   15388:	mov	sl, #0
   1538c:	mov	r4, r3
   15390:	mov	r2, #0
   15394:	mov	r5, #90	; 0x5a
   15398:	cmp	r8, r9
   1539c:	bcs	1582c <sprintf@plt+0x3fa4>
   153a0:	ldr	r0, [sp, #44]	; 0x2c
   153a4:	ldr	r1, [sp, #28]
   153a8:	cmp	r4, r0
   153ac:	bcs	1582c <sprintf@plt+0x3fa4>
   153b0:	cmp	r2, #1
   153b4:	blt	153e4 <sprintf@plt+0x3b5c>
   153b8:	add	r0, r2, #3
   153bc:	bic	r0, r0, #3
   153c0:	cmp	r0, sl
   153c4:	bne	15858 <sprintf@plt+0x3fd0>
   153c8:	sub	r0, r2, sl
   153cc:	mov	r7, #255	; 0xff
   153d0:	mov	r5, #22
   153d4:	add	r0, r0, #8
   153d8:	tst	ip, r7, lsr r0
   153dc:	beq	153e8 <sprintf@plt+0x3b60>
   153e0:	b	1582c <sprintf@plt+0x3fa4>
   153e4:	mov	r2, sl
   153e8:	mov	r0, #65	; 0x41
   153ec:	strb	r0, [r1]
   153f0:	subs	r0, r2, #256	; 0x100
   153f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   153f8:	movne	r0, r2
   153fc:	strb	r0, [r1]
   15400:	add	r0, r4, #1
   15404:	str	r0, [fp, #-40]	; 0xffffffd8
   15408:	ldrb	r1, [r8], #1
   1540c:	cmp	r1, #46	; 0x2e
   15410:	bne	15890 <sprintf@plt+0x4008>
   15414:	ldrb	r1, [r8]
   15418:	mov	r7, r8
   1541c:	cmp	r1, #0
   15420:	bne	150e0 <sprintf@plt+0x3858>
   15424:	b	1548c <sprintf@plt+0x3c04>
   15428:	cmp	r3, #0
   1542c:	beq	15468 <sprintf@plt+0x3be0>
   15430:	cmp	r7, #0
   15434:	str	ip, [sp, #16]
   15438:	beq	15858 <sprintf@plt+0x3fd0>
   1543c:	mov	r0, r7
   15440:	sub	r1, fp, #36	; 0x24
   15444:	mov	r2, #10
   15448:	bl	116e4 <strtol@plt>
   1544c:	mov	r2, r0
   15450:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15454:	ldrb	r0, [r0]
   15458:	cmp	r0, #93	; 0x5d
   1545c:	bne	15858 <sprintf@plt+0x3fd0>
   15460:	ldr	ip, [sp, #16]
   15464:	b	1546c <sprintf@plt+0x3be4>
   15468:	mov	r2, #0
   1546c:	cmp	r5, #0
   15470:	lslne	r0, ip, #4
   15474:	strbne	r0, [r4], #1
   15478:	mov	r5, #90	; 0x5a
   1547c:	cmp	r8, r9
   15480:	bcc	153a0 <sprintf@plt+0x3b18>
   15484:	b	1582c <sprintf@plt+0x3fa4>
   15488:	add	r4, sp, #129	; 0x81
   1548c:	mvn	r1, r4
   15490:	mov	r5, #90	; 0x5a
   15494:	add	r0, r0, r1
   15498:	tst	r0, #192	; 0xc0
   1549c:	bne	1582c <sprintf@plt+0x3fa4>
   154a0:	ldr	r1, [sp, #44]	; 0x2c
   154a4:	mov	r2, r4
   154a8:	mov	r5, #90	; 0x5a
   154ac:	cmp	r4, r1
   154b0:	bcs	1582c <sprintf@plt+0x3fa4>
   154b4:	cmp	r0, #0
   154b8:	strb	r0, [r2]
   154bc:	beq	154e0 <sprintf@plt+0x3c58>
   154c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   154c4:	ldr	r1, [sp, #44]	; 0x2c
   154c8:	cmp	r0, r1
   154cc:	bcs	1582c <sprintf@plt+0x3fa4>
   154d0:	add	r1, r0, #1
   154d4:	str	r1, [fp, #-40]	; 0xffffffd8
   154d8:	mov	r1, #0
   154dc:	strb	r1, [r0]
   154e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   154e4:	add	r1, sp, #129	; 0x81
   154e8:	sub	r0, r0, r1
   154ec:	cmp	r0, #256	; 0x100
   154f0:	bge	1582c <sprintf@plt+0x3fa4>
   154f4:	ldr	r0, [sp, #36]	; 0x24
   154f8:	ldr	r9, [sp, #48]	; 0x30
   154fc:	ldr	r8, [sp, #40]	; 0x28
   15500:	ldr	r3, [sp, #32]
   15504:	add	r1, sp, #48	; 0x30
   15508:	mov	r7, #0
   1550c:	add	r4, r0, #12
   15510:	mov	r0, #0
   15514:	cmp	r9, #0
   15518:	beq	1552c <sprintf@plt+0x3ca4>
   1551c:	mov	r7, r1
   15520:	ldr	r2, [r7, #4]!
   15524:	cmp	r2, #0
   15528:	bne	15520 <sprintf@plt+0x3c98>
   1552c:	add	r1, r1, #4
   15530:	mov	r2, #1
   15534:	str	r1, [sp, #20]
   15538:	add	r1, r4, r3
   1553c:	str	r1, [sp, #32]
   15540:	add	r1, sp, #129	; 0x81
   15544:	ldrb	r3, [r1]
   15548:	cmp	r3, #192	; 0xc0
   1554c:	bcs	15878 <sprintf@plt+0x3ff0>
   15550:	and	r6, r3, #192	; 0xc0
   15554:	cmp	r6, #64	; 0x40
   15558:	beq	1556c <sprintf@plt+0x3ce4>
   1555c:	cmp	r6, #192	; 0xc0
   15560:	mov	r6, r3
   15564:	bne	15588 <sprintf@plt+0x3d00>
   15568:	b	15840 <sprintf@plt+0x3fb8>
   1556c:	cmp	r3, #65	; 0x41
   15570:	bne	15840 <sprintf@plt+0x3fb8>
   15574:	ldrb	r5, [r1, #1]
   15578:	add	r6, r5, #7
   1557c:	cmp	r5, #0
   15580:	add	r6, r2, r6, lsr #3
   15584:	movweq	r6, #33	; 0x21
   15588:	add	r6, r6, #1
   1558c:	add	r0, r6, r0
   15590:	cmp	r0, #256	; 0x100
   15594:	bge	15878 <sprintf@plt+0x3ff0>
   15598:	add	r1, r1, r6
   1559c:	cmp	r3, #0
   155a0:	bne	15544 <sprintf@plt+0x3cbc>
   155a4:	add	r0, sp, #48	; 0x30
   155a8:	mov	r6, r4
   155ac:	add	sl, sp, #129	; 0x81
   155b0:	str	r4, [sp]
   155b4:	str	r7, [sp, #12]
   155b8:	add	r0, r0, #76	; 0x4c
   155bc:	str	r0, [sp, #8]
   155c0:	mov	r0, #1
   155c4:	ldrb	r3, [sl]
   155c8:	cmp	r9, #0
   155cc:	str	r0, [sp, #44]	; 0x2c
   155d0:	cmpne	r3, #0
   155d4:	bne	15620 <sprintf@plt+0x3d98>
   155d8:	cmp	r3, #191	; 0xbf
   155dc:	bhi	1586c <sprintf@plt+0x3fe4>
   155e0:	ldrb	r0, [sl]
   155e4:	mvn	r5, #0
   155e8:	and	r1, r0, #192	; 0xc0
   155ec:	cmp	r1, #192	; 0xc0
   155f0:	beq	15764 <sprintf@plt+0x3edc>
   155f4:	cmp	r1, #64	; 0x40
   155f8:	bne	15760 <sprintf@plt+0x3ed8>
   155fc:	cmp	r0, #65	; 0x41
   15600:	bne	15764 <sprintf@plt+0x3edc>
   15604:	ldrb	r0, [sl, #1]
   15608:	mov	r2, #1
   1560c:	add	r1, r0, #7
   15610:	cmp	r0, #0
   15614:	add	r5, r2, r1, lsr #3
   15618:	movweq	r5, #33	; 0x21
   1561c:	b	15764 <sprintf@plt+0x3edc>
   15620:	ldr	r0, [sp, #20]
   15624:	mov	r4, #2
   15628:	str	r3, [sp, #28]
   1562c:	cmp	r0, r7
   15630:	bcs	157b0 <sprintf@plt+0x3f28>
   15634:	str	r6, [sp, #4]
   15638:	ldr	r1, [r0]
   1563c:	str	r0, [sp, #16]
   15640:	ldrb	r8, [r1]
   15644:	sub	r0, r8, #1
   15648:	uxtb	r0, r0
   1564c:	cmp	r0, #62	; 0x3e
   15650:	bls	15680 <sprintf@plt+0x3df8>
   15654:	ldr	r0, [sp, #16]
   15658:	add	r0, r0, #4
   1565c:	cmp	r0, r7
   15660:	bcc	15638 <sprintf@plt+0x3db0>
   15664:	b	157a8 <sprintf@plt+0x3f20>
   15668:	uxtab	r1, r1, r8
   1566c:	ldrb	r8, [r1, #1]!
   15670:	sub	r0, r8, #1
   15674:	uxtb	r0, r0
   15678:	cmp	r0, #63	; 0x3f
   1567c:	bcs	15654 <sprintf@plt+0x3dcc>
   15680:	sub	ip, r1, r9
   15684:	cmp	ip, #16384	; 0x4000
   15688:	bge	15654 <sprintf@plt+0x3dcc>
   1568c:	mov	r2, r8
   15690:	mov	lr, sl
   15694:	mov	r6, r1
   15698:	tst	r2, #255	; 0xff
   1569c:	beq	15668 <sprintf@plt+0x3de0>
   156a0:	and	r0, r2, #192	; 0xc0
   156a4:	add	r6, r6, #1
   156a8:	cmp	r0, #192	; 0xc0
   156ac:	bne	156d0 <sprintf@plt+0x3e48>
   156b0:	ldrb	r0, [r6]
   156b4:	and	r2, r2, #63	; 0x3f
   156b8:	mov	r6, r9
   156bc:	orr	r0, r0, r2, lsl #8
   156c0:	ldrb	r2, [r6, r0]!
   156c4:	cmp	r2, #0
   156c8:	bne	156a0 <sprintf@plt+0x3e18>
   156cc:	b	15668 <sprintf@plt+0x3de0>
   156d0:	cmp	r0, #0
   156d4:	bne	157a4 <sprintf@plt+0x3f1c>
   156d8:	ldrb	r0, [lr]
   156dc:	uxtb	r2, r2
   156e0:	cmp	r2, r0
   156e4:	bne	15668 <sprintf@plt+0x3de0>
   156e8:	ldrb	r5, [lr, #1]
   156ec:	add	r0, lr, #2
   156f0:	mvn	r3, #64	; 0x40
   156f4:	uxtb	r4, r5
   156f8:	uxtab	r3, r3, r5
   156fc:	cmp	r3, #26
   15700:	mov	r3, #32
   15704:	uxtabcc	r4, r3, r5
   15708:	ldrb	r3, [r6]
   1570c:	sub	r5, r3, #65	; 0x41
   15710:	cmp	r5, #26
   15714:	addcc	r3, r3, #32
   15718:	cmp	r4, r3
   1571c:	mov	r4, #2
   15720:	bne	15668 <sprintf@plt+0x3de0>
   15724:	ldrb	r5, [r0], #1
   15728:	subs	r2, r2, #1
   1572c:	add	r6, r6, #1
   15730:	bne	156f0 <sprintf@plt+0x3e68>
   15734:	ldrb	r2, [r6]
   15738:	sub	lr, r0, #1
   1573c:	cmp	r5, #0
   15740:	bne	15698 <sprintf@plt+0x3e10>
   15744:	cmp	r2, #0
   15748:	bne	15668 <sprintf@plt+0x3de0>
   1574c:	ldr	r8, [sp, #40]	; 0x28
   15750:	ldr	r6, [sp, #4]
   15754:	cmp	ip, #0
   15758:	bmi	157b8 <sprintf@plt+0x3f30>
   1575c:	b	158e4 <sprintf@plt+0x405c>
   15760:	mov	r5, r0
   15764:	ldr	r1, [sp, #32]
   15768:	add	r0, r6, r5
   1576c:	add	r0, r0, #1
   15770:	cmp	r0, r1
   15774:	bcs	1586c <sprintf@plt+0x3fe4>
   15778:	add	r4, r5, #1
   1577c:	mov	r0, r6
   15780:	mov	r1, sl
   15784:	mov	r2, r4
   15788:	bl	116b4 <memcpy@plt>
   1578c:	ldr	r0, [sp, #44]	; 0x2c
   15790:	add	r6, r6, r4
   15794:	add	sl, sl, r4
   15798:	cmp	r5, #0
   1579c:	bne	155c4 <sprintf@plt+0x3d3c>
   157a0:	b	15860 <sprintf@plt+0x3fd8>
   157a4:	mov	r4, #90	; 0x5a
   157a8:	ldr	r8, [sp, #40]	; 0x28
   157ac:	ldr	r6, [sp, #4]
   157b0:	bl	1187c <__errno_location@plt>
   157b4:	str	r4, [r0]
   157b8:	ldr	r0, [sp, #8]
   157bc:	ldr	r1, [sp, #12]
   157c0:	cmp	r1, r0
   157c4:	bcs	1580c <sprintf@plt+0x3f84>
   157c8:	ldr	r3, [sp, #28]
   157cc:	sub	r0, r6, r9
   157d0:	cmp	r0, #16384	; 0x4000
   157d4:	bge	155d8 <sprintf@plt+0x3d50>
   157d8:	ldr	r0, [sp, #44]	; 0x2c
   157dc:	cmp	r0, #0
   157e0:	beq	155d8 <sprintf@plt+0x3d50>
   157e4:	ldr	r0, [sp, #12]
   157e8:	mov	r2, #0
   157ec:	mov	r1, #0
   157f0:	str	r1, [sp, #44]	; 0x2c
   157f4:	str	r6, [r0]
   157f8:	str	r2, [r0, #4]!
   157fc:	str	r0, [sp, #12]
   15800:	cmp	r3, #191	; 0xbf
   15804:	bls	155e0 <sprintf@plt+0x3d58>
   15808:	b	1586c <sprintf@plt+0x3fe4>
   1580c:	ldr	r3, [sp, #28]
   15810:	cmp	r3, #191	; 0xbf
   15814:	bls	155e0 <sprintf@plt+0x3d58>
   15818:	b	1586c <sprintf@plt+0x3fe4>
   1581c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15820:	ldr	r4, [sp, #28]
   15824:	b	1548c <sprintf@plt+0x3c04>
   15828:	mov	r5, #90	; 0x5a
   1582c:	bl	1187c <__errno_location@plt>
   15830:	str	r5, [r0]
   15834:	mvn	r0, #0
   15838:	sub	sp, fp, #28
   1583c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15840:	bl	1187c <__errno_location@plt>
   15844:	mov	r1, #22
   15848:	str	r1, [r0]
   1584c:	mvn	r0, #0
   15850:	sub	sp, fp, #28
   15854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15858:	mov	r5, #22
   1585c:	b	1582c <sprintf@plt+0x3fa4>
   15860:	ldr	r0, [sp, #32]
   15864:	cmp	r6, r0
   15868:	bls	15908 <sprintf@plt+0x4080>
   1586c:	cmp	r9, #0
   15870:	movne	r0, #0
   15874:	strne	r0, [r7]
   15878:	bl	1187c <__errno_location@plt>
   1587c:	mov	r1, #90	; 0x5a
   15880:	str	r1, [r0]
   15884:	mvn	r0, #0
   15888:	sub	sp, fp, #28
   1588c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15890:	mov	r5, #22
   15894:	cmp	r1, #0
   15898:	bne	1582c <sprintf@plt+0x3fa4>
   1589c:	mov	r0, #0
   158a0:	b	154a0 <sprintf@plt+0x3c18>
   158a4:	cmp	r0, #0
   158a8:	beq	158cc <sprintf@plt+0x4044>
   158ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   158b0:	ldr	r1, [sp, #44]	; 0x2c
   158b4:	cmp	r0, r1
   158b8:	bcs	1582c <sprintf@plt+0x3fa4>
   158bc:	add	r1, r0, #1
   158c0:	str	r1, [fp, #-40]	; 0xffffffd8
   158c4:	mov	r1, #0
   158c8:	strb	r1, [r0]
   158cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   158d0:	add	r1, sp, #129	; 0x81
   158d4:	sub	r0, r0, r1
   158d8:	cmp	r0, #255	; 0xff
   158dc:	ble	154f4 <sprintf@plt+0x3c6c>
   158e0:	b	1582c <sprintf@plt+0x3fa4>
   158e4:	ldr	r1, [sp, #32]
   158e8:	add	r0, r6, #1
   158ec:	cmp	r0, r1
   158f0:	bcs	1586c <sprintf@plt+0x3fe4>
   158f4:	mov	r0, #192	; 0xc0
   158f8:	strb	ip, [r6, #1]
   158fc:	orr	r0, r0, ip, lsr #8
   15900:	strb	r0, [r6]
   15904:	add	r6, r6, #2
   15908:	ldr	r0, [sp]
   1590c:	subs	r0, r6, r0
   15910:	mvn	r0, #0
   15914:	bmi	15950 <sprintf@plt+0x40c8>
   15918:	ldr	r0, [sp, #24]
   1591c:	ldr	r2, [sp, #36]	; 0x24
   15920:	mov	r1, #256	; 0x100
   15924:	strb	r0, [r6, #3]
   15928:	lsr	r0, r0, #8
   1592c:	strb	r8, [r6, #1]
   15930:	strb	r0, [r6, #2]
   15934:	lsr	r0, r8, #8
   15938:	strb	r0, [r6]
   1593c:	ldr	r0, [r2, #4]
   15940:	bfi	r0, r1, #0, #16
   15944:	str	r0, [r2, #4]
   15948:	sub	r0, r6, r2
   1594c:	add	r0, r0, #4
   15950:	sub	sp, fp, #28
   15954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1595c:	add	fp, sp, #28
   15960:	sub	sp, sp, #20
   15964:	ldr	r4, [r2, #8]
   15968:	mov	r5, r2
   1596c:	mov	r0, r4
   15970:	bl	11690 <strlen@plt>
   15974:	add	r0, r0, #1
   15978:	bl	11780 <malloc@plt>
   1597c:	cmp	r0, #0
   15980:	beq	15cd0 <sprintf@plt+0x4448>
   15984:	mov	r1, r4
   15988:	str	r5, [sp, #4]
   1598c:	bl	116fc <strcpy@plt>
   15990:	ldrb	r1, [r0]
   15994:	mov	r5, #0
   15998:	str	r0, [sp]
   1599c:	cmp	r1, #42	; 0x2a
   159a0:	bne	159b4 <sprintf@plt+0x412c>
   159a4:	mov	r0, #0
   159a8:	mov	r6, #0
   159ac:	str	r0, [sp, #8]
   159b0:	b	15af0 <sprintf@plt+0x4268>
   159b4:	movw	r1, #37545	; 0x92a9
   159b8:	add	r2, sp, #16
   159bc:	movt	r1, #1
   159c0:	bl	11570 <rb_strtok_r@plt>
   159c4:	mov	r8, r0
   159c8:	cmp	r0, #0
   159cc:	mov	r0, #0
   159d0:	mov	r6, #0
   159d4:	str	r0, [sp, #8]
   159d8:	beq	15af0 <sprintf@plt+0x4268>
   159dc:	mov	r0, #0
   159e0:	mov	r6, #0
   159e4:	mov	sl, #0
   159e8:	str	r0, [sp, #8]
   159ec:	b	15a2c <sprintf@plt+0x41a4>
   159f0:	ldr	r0, [sp, #8]
   159f4:	cmp	r0, #0
   159f8:	moveq	r0, r5
   159fc:	str	r0, [sp, #8]
   15a00:	movw	r1, #37545	; 0x92a9
   15a04:	ldr	r6, [sp, #12]
   15a08:	mov	r0, #0
   15a0c:	add	r2, sp, #16
   15a10:	movt	r1, #1
   15a14:	bl	11570 <rb_strtok_r@plt>
   15a18:	mov	r8, r0
   15a1c:	add	r6, r6, #1
   15a20:	cmp	r0, #0
   15a24:	mov	sl, r5
   15a28:	beq	15af0 <sprintf@plt+0x4268>
   15a2c:	mov	r0, #1
   15a30:	mov	r1, #72	; 0x48
   15a34:	str	r6, [sp, #12]
   15a38:	bl	115a0 <calloc@plt>
   15a3c:	cmp	r0, #0
   15a40:	beq	15cd0 <sprintf@plt+0x4448>
   15a44:	mov	r5, r0
   15a48:	mov	r9, #2
   15a4c:	mov	r7, #0
   15a50:	mov	r4, r8
   15a54:	ldrb	r6, [r4]
   15a58:	cmp	r6, #46	; 0x2e
   15a5c:	bne	15a74 <sprintf@plt+0x41ec>
   15a60:	b	15a98 <sprintf@plt+0x4210>
   15a64:	add	r4, r4, #1
   15a68:	ldrb	r6, [r4]
   15a6c:	cmp	r6, #46	; 0x2e
   15a70:	beq	15a98 <sprintf@plt+0x4210>
   15a74:	cmp	r6, #0
   15a78:	beq	15aac <sprintf@plt+0x4224>
   15a7c:	bl	1175c <__ctype_b_loc@plt>
   15a80:	ldr	r0, [r0]
   15a84:	add	r0, r0, r6, lsl #1
   15a88:	ldrb	r0, [r0, #1]
   15a8c:	tst	r0, #8
   15a90:	bne	15a64 <sprintf@plt+0x41dc>
   15a94:	b	15c9c <sprintf@plt+0x4414>
   15a98:	cmp	r7, #3
   15a9c:	bge	15cb8 <sprintf@plt+0x4430>
   15aa0:	add	r7, r7, #1
   15aa4:	mov	r9, #1
   15aa8:	b	15a64 <sprintf@plt+0x41dc>
   15aac:	sub	r0, r7, #1
   15ab0:	cmp	r0, #2
   15ab4:	bcc	15cd4 <sprintf@plt+0x444c>
   15ab8:	add	r0, r5, #4
   15abc:	mov	r1, r8
   15ac0:	mov	r2, #53	; 0x35
   15ac4:	str	r9, [r5]
   15ac8:	bl	11618 <rb_strlcpy@plt>
   15acc:	mov	r0, #0
   15ad0:	str	r5, [r5, #60]	; 0x3c
   15ad4:	cmp	sl, #0
   15ad8:	str	r0, [r5, #64]	; 0x40
   15adc:	str	sl, [r5, #68]	; 0x44
   15ae0:	add	r5, r5, #60	; 0x3c
   15ae4:	beq	159f0 <sprintf@plt+0x4168>
   15ae8:	str	r5, [sl, #4]
   15aec:	b	15a00 <sprintf@plt+0x4178>
   15af0:	ldr	r0, [sp]
   15af4:	bl	1163c <free@plt>
   15af8:	ldr	r4, [sp, #4]
   15afc:	mov	r1, #0
   15b00:	mov	r2, #10
   15b04:	ldr	r0, [r4, #4]
   15b08:	bl	116e4 <strtol@plt>
   15b0c:	ands	r0, r0, #3
   15b10:	str	r0, [sp, #12]
   15b14:	beq	15b2c <sprintf@plt+0x42a4>
   15b18:	ldr	r9, [r4]
   15b1c:	cmp	r9, #0
   15b20:	ldrne	r8, [r4, #12]
   15b24:	cmpne	r8, #0
   15b28:	bne	15b44 <sprintf@plt+0x42bc>
   15b2c:	movw	r1, #37747	; 0x9373
   15b30:	movt	r1, #1
   15b34:	mov	r0, #67	; 0x43
   15b38:	bl	12500 <sprintf@plt+0xc78>
   15b3c:	mov	r0, #3
   15b40:	bl	11870 <exit@plt>
   15b44:	movw	sl, #61412	; 0xefe4
   15b48:	movt	sl, #2
   15b4c:	ldr	r7, [sl]
   15b50:	cmp	r7, #0
   15b54:	beq	15b7c <sprintf@plt+0x42f4>
   15b58:	ldr	r4, [r7]
   15b5c:	mov	r1, r9
   15b60:	mov	r0, r4
   15b64:	bl	11594 <strcasecmp@plt>
   15b68:	cmp	r0, #0
   15b6c:	beq	15bc8 <sprintf@plt+0x4340>
   15b70:	ldr	r7, [r7, #8]
   15b74:	cmp	r7, #0
   15b78:	bne	15b58 <sprintf@plt+0x42d0>
   15b7c:	mov	r0, #1
   15b80:	mov	r1, #800	; 0x320
   15b84:	bl	115a0 <calloc@plt>
   15b88:	cmp	r0, #0
   15b8c:	beq	15cd0 <sprintf@plt+0x4448>
   15b90:	mov	r4, r0
   15b94:	bl	11804 <rb_make_rb_dlink_node@plt>
   15b98:	cmp	r0, #0
   15b9c:	beq	15cec <sprintf@plt+0x4464>
   15ba0:	mov	r1, #0
   15ba4:	str	r1, [r0, #4]
   15ba8:	str	r4, [r0]
   15bac:	ldr	r1, [sl]
   15bb0:	cmp	r1, #0
   15bb4:	str	r1, [r0, #8]
   15bb8:	beq	15bdc <sprintf@plt+0x4354>
   15bbc:	add	r1, r1, #4
   15bc0:	str	r0, [r1]
   15bc4:	b	15bec <sprintf@plt+0x4364>
   15bc8:	cmp	r4, #0
   15bcc:	beq	15b7c <sprintf@plt+0x42f4>
   15bd0:	mov	r0, #0
   15bd4:	strb	r0, [r4, #784]	; 0x310
   15bd8:	b	15bfc <sprintf@plt+0x4374>
   15bdc:	mov	r1, sl
   15be0:	ldr	r2, [r1, #4]!
   15be4:	cmp	r2, #0
   15be8:	streq	r0, [r1]
   15bec:	str	r0, [sl]
   15bf0:	ldr	r0, [sl, #8]
   15bf4:	add	r0, r0, #1
   15bf8:	str	r0, [sl, #8]
   15bfc:	mov	r0, r4
   15c00:	mov	r1, r9
   15c04:	mov	r2, #256	; 0x100
   15c08:	bl	11618 <rb_strlcpy@plt>
   15c0c:	add	r0, r4, #256	; 0x100
   15c10:	mov	r1, r8
   15c14:	mov	r2, #512	; 0x200
   15c18:	bl	11618 <rb_strlcpy@plt>
   15c1c:	ldr	r0, [sp, #12]
   15c20:	cmp	r5, #0
   15c24:	strb	r0, [r4, #768]	; 0x300
   15c28:	beq	15c64 <sprintf@plt+0x43dc>
   15c2c:	ldr	r0, [r4, #772]	; 0x304
   15c30:	cmp	r0, #0
   15c34:	beq	15c7c <sprintf@plt+0x43f4>
   15c38:	ldr	r1, [sp, #8]
   15c3c:	str	r0, [r1, #8]
   15c40:	str	r1, [r0, #4]
   15c44:	str	r5, [r4, #772]	; 0x304
   15c48:	ldr	r0, [r4, #780]	; 0x30c
   15c4c:	add	r0, r0, r6
   15c50:	str	r0, [r4, #780]	; 0x30c
   15c54:	mov	r0, #0
   15c58:	str	r0, [r4, #796]	; 0x31c
   15c5c:	sub	sp, fp, #28
   15c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c64:	mov	r0, #0
   15c68:	cmp	r4, #0
   15c6c:	str	r0, [r4, #796]	; 0x31c
   15c70:	beq	15b2c <sprintf@plt+0x42a4>
   15c74:	sub	sp, fp, #28
   15c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c7c:	ldr	r0, [sp, #8]
   15c80:	str	r5, [r4, #772]	; 0x304
   15c84:	str	r0, [r4, #776]	; 0x308
   15c88:	str	r6, [r4, #780]	; 0x30c
   15c8c:	mov	r0, #0
   15c90:	str	r0, [r4, #796]	; 0x31c
   15c94:	sub	sp, fp, #28
   15c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c9c:	movw	r1, #37605	; 0x92e5
   15ca0:	mov	r0, #67	; 0x43
   15ca4:	mov	r2, r6
   15ca8:	movt	r1, #1
   15cac:	bl	12500 <sprintf@plt+0xc78>
   15cb0:	mov	r0, #3
   15cb4:	bl	11870 <exit@plt>
   15cb8:	movw	r1, #37547	; 0x92ab
   15cbc:	movt	r1, #1
   15cc0:	mov	r0, #67	; 0x43
   15cc4:	bl	12500 <sprintf@plt+0xc78>
   15cc8:	mov	r0, #3
   15ccc:	bl	11870 <exit@plt>
   15cd0:	bl	11750 <rb_outofmemory@plt>
   15cd4:	movw	r1, #37685	; 0x9335
   15cd8:	movt	r1, #1
   15cdc:	mov	r0, #67	; 0x43
   15ce0:	bl	12500 <sprintf@plt+0xc78>
   15ce4:	mov	r0, #3
   15ce8:	bl	11870 <exit@plt>
   15cec:	movw	r0, #36696	; 0x8f58
   15cf0:	movw	r1, #36706	; 0x8f62
   15cf4:	movw	r3, #36801	; 0x8fc1
   15cf8:	mov	r2, #144	; 0x90
   15cfc:	movt	r0, #1
   15d00:	movt	r1, #1
   15d04:	movt	r3, #1
   15d08:	bl	11600 <__assert_fail@plt>
   15d0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15d10:	add	fp, sp, #24
   15d14:	movw	r8, #61412	; 0xefe4
   15d18:	ldr	r5, [r2]
   15d1c:	movt	r8, #2
   15d20:	ldr	r6, [r8]
   15d24:	cmp	r6, #0
   15d28:	beq	15da0 <sprintf@plt+0x4518>
   15d2c:	mov	r7, r6
   15d30:	ldr	r4, [r7]
   15d34:	mov	r1, r5
   15d38:	mov	r0, r4
   15d3c:	bl	11594 <strcasecmp@plt>
   15d40:	cmp	r0, #0
   15d44:	beq	15d58 <sprintf@plt+0x44d0>
   15d48:	ldr	r7, [r7, #8]
   15d4c:	cmp	r7, #0
   15d50:	bne	15d30 <sprintf@plt+0x44a8>
   15d54:	b	15da0 <sprintf@plt+0x4518>
   15d58:	cmp	r4, #0
   15d5c:	beq	15da0 <sprintf@plt+0x4518>
   15d60:	ldr	r0, [r4, #788]	; 0x314
   15d64:	cmp	r0, #0
   15d68:	ble	15d8c <sprintf@plt+0x4504>
   15d6c:	mov	r0, #1
   15d70:	strb	r0, [r4, #784]	; 0x310
   15d74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15d78:	ldr	r1, [r6]
   15d7c:	mov	r0, r6
   15d80:	ldr	r6, [r6, #8]
   15d84:	cmp	r1, r4
   15d88:	beq	15db8 <sprintf@plt+0x4530>
   15d8c:	cmp	r6, #0
   15d90:	bne	15d78 <sprintf@plt+0x44f0>
   15d94:	mov	r0, r4
   15d98:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15d9c:	b	1163c <free@plt>
   15da0:	movw	r1, #37792	; 0x93a0
   15da4:	mov	r0, #87	; 0x57
   15da8:	mov	r2, r5
   15dac:	movt	r1, #1
   15db0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15db4:	b	12500 <sprintf@plt+0xc78>
   15db8:	ldr	r1, [r0, #4]
   15dbc:	cmp	r6, #0
   15dc0:	beq	15dd0 <sprintf@plt+0x4548>
   15dc4:	str	r1, [r6, #4]
   15dc8:	ldr	r1, [r0, #4]
   15dcc:	b	15dd4 <sprintf@plt+0x454c>
   15dd0:	str	r1, [r8, #4]
   15dd4:	cmp	r1, #0
   15dd8:	mov	r2, r8
   15ddc:	addne	r2, r1, #8
   15de0:	mov	r1, #0
   15de4:	str	r6, [r2]
   15de8:	str	r1, [r0, #4]
   15dec:	str	r1, [r0, #8]
   15df0:	ldr	r1, [r8, #8]
   15df4:	sub	r1, r1, #1
   15df8:	str	r1, [r8, #8]
   15dfc:	bl	116c0 <rb_free_rb_dlink_node@plt>
   15e00:	mov	r0, r4
   15e04:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15e08:	b	1163c <free@plt>
   15e0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15e10:	add	fp, sp, #24
   15e14:	movw	r5, #61412	; 0xefe4
   15e18:	movt	r5, #2
   15e1c:	ldr	r6, [r5]
   15e20:	cmp	r6, #0
   15e24:	beq	15ec8 <sprintf@plt+0x4640>
   15e28:	mov	r7, #1
   15e2c:	mov	r8, #0
   15e30:	b	15e40 <sprintf@plt+0x45b8>
   15e34:	strb	r7, [r4, #784]	; 0x310
   15e38:	cmp	r6, #0
   15e3c:	beq	15ec8 <sprintf@plt+0x4640>
   15e40:	ldr	r4, [r6]
   15e44:	ldr	r6, [r6, #8]
   15e48:	ldr	r0, [r4, #788]	; 0x314
   15e4c:	cmp	r0, #1
   15e50:	bge	15e34 <sprintf@plt+0x45ac>
   15e54:	ldr	r1, [r5]
   15e58:	cmp	r1, #0
   15e5c:	beq	15eb8 <sprintf@plt+0x4630>
   15e60:	ldr	r2, [r1]
   15e64:	mov	r0, r1
   15e68:	ldr	r1, [r1, #8]
   15e6c:	cmp	r2, r4
   15e70:	bne	15e58 <sprintf@plt+0x45d0>
   15e74:	ldr	r2, [r0, #4]
   15e78:	cmp	r1, #0
   15e7c:	beq	15e8c <sprintf@plt+0x4604>
   15e80:	str	r2, [r1, #4]
   15e84:	ldr	r2, [r0, #4]
   15e88:	b	15e90 <sprintf@plt+0x4608>
   15e8c:	str	r2, [r5, #4]
   15e90:	cmp	r2, #0
   15e94:	mov	r3, r5
   15e98:	addne	r3, r2, #8
   15e9c:	str	r1, [r3]
   15ea0:	str	r8, [r0, #4]
   15ea4:	str	r8, [r0, #8]
   15ea8:	ldr	r1, [r5, #8]
   15eac:	sub	r1, r1, #1
   15eb0:	str	r1, [r5, #8]
   15eb4:	bl	116c0 <rb_free_rb_dlink_node@plt>
   15eb8:	mov	r0, r4
   15ebc:	bl	1163c <free@plt>
   15ec0:	cmp	r6, #0
   15ec4:	bne	15e40 <sprintf@plt+0x45b8>
   15ec8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15ecc:	push	{fp, lr}
   15ed0:	mov	fp, sp
   15ed4:	ldr	r0, [r2]
   15ed8:	mov	r1, #0
   15edc:	mov	r2, #10
   15ee0:	bl	116e4 <strtol@plt>
   15ee4:	cmn	r0, #1
   15ee8:	mov	r2, r0
   15eec:	movwgt	r0, #44452	; 0xada4
   15ef0:	movtgt	r0, #2
   15ef4:	strgt	r2, [r0]
   15ef8:	popgt	{fp, pc}
   15efc:	movw	r1, #37836	; 0x93cc
   15f00:	mov	r0, #67	; 0x43
   15f04:	movt	r1, #1
   15f08:	bl	12500 <sprintf@plt+0xc78>
   15f0c:	mov	r0, #3
   15f10:	bl	11870 <exit@plt>
   15f14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15f18:	add	fp, sp, #24
   15f1c:	sub	sp, sp, #8
   15f20:	movw	r6, #61820	; 0xf17c
   15f24:	mov	r4, sp
   15f28:	movt	r6, #2
   15f2c:	mov	r1, r4
   15f30:	ldr	r0, [r6]
   15f34:	bl	11678 <rb_dictionary_foreach_start@plt>
   15f38:	ldr	r0, [r6]
   15f3c:	mov	r1, r4
   15f40:	bl	11588 <rb_dictionary_foreach_cur@plt>
   15f44:	cmp	r0, #0
   15f48:	beq	15f80 <sprintf@plt+0x46f8>
   15f4c:	movw	r4, #38088	; 0x94c8
   15f50:	mov	r5, sp
   15f54:	movt	r4, #1
   15f58:	mov	r1, r4
   15f5c:	bl	167f0 <sprintf@plt+0x4f68>
   15f60:	ldr	r0, [r6]
   15f64:	mov	r1, r5
   15f68:	bl	11630 <rb_dictionary_foreach_next@plt>
   15f6c:	ldr	r0, [r6]
   15f70:	mov	r1, r5
   15f74:	bl	11588 <rb_dictionary_foreach_cur@plt>
   15f78:	cmp	r0, #0
   15f7c:	bne	15f58 <sprintf@plt+0x46d0>
   15f80:	movw	r5, #61412	; 0xefe4
   15f84:	movt	r5, #2
   15f88:	ldr	r6, [r5]
   15f8c:	cmp	r6, #0
   15f90:	beq	16034 <sprintf@plt+0x47ac>
   15f94:	mov	r7, #1
   15f98:	mov	r8, #0
   15f9c:	b	15fac <sprintf@plt+0x4724>
   15fa0:	strb	r7, [r4, #784]	; 0x310
   15fa4:	cmp	r6, #0
   15fa8:	beq	16034 <sprintf@plt+0x47ac>
   15fac:	ldr	r4, [r6]
   15fb0:	ldr	r6, [r6, #8]
   15fb4:	ldr	r0, [r4, #788]	; 0x314
   15fb8:	cmp	r0, #1
   15fbc:	bge	15fa0 <sprintf@plt+0x4718>
   15fc0:	ldr	r1, [r5]
   15fc4:	cmp	r1, #0
   15fc8:	beq	16024 <sprintf@plt+0x479c>
   15fcc:	ldr	r2, [r1]
   15fd0:	mov	r0, r1
   15fd4:	ldr	r1, [r1, #8]
   15fd8:	cmp	r2, r4
   15fdc:	bne	15fc4 <sprintf@plt+0x473c>
   15fe0:	ldr	r2, [r0, #4]
   15fe4:	cmp	r1, #0
   15fe8:	beq	15ff8 <sprintf@plt+0x4770>
   15fec:	str	r2, [r1, #4]
   15ff0:	ldr	r2, [r0, #4]
   15ff4:	b	15ffc <sprintf@plt+0x4774>
   15ff8:	str	r2, [r5, #4]
   15ffc:	cmp	r2, #0
   16000:	mov	r3, r5
   16004:	addne	r3, r2, #8
   16008:	str	r1, [r3]
   1600c:	str	r8, [r0, #4]
   16010:	str	r8, [r0, #8]
   16014:	ldr	r1, [r5, #8]
   16018:	sub	r1, r1, #1
   1601c:	str	r1, [r5, #8]
   16020:	bl	116c0 <rb_free_rb_dlink_node@plt>
   16024:	mov	r0, r4
   16028:	bl	1163c <free@plt>
   1602c:	cmp	r6, #0
   16030:	bne	15fac <sprintf@plt+0x4724>
   16034:	sub	sp, fp, #24
   16038:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1603c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16040:	add	fp, sp, #24
   16044:	mov	r9, r0
   16048:	movw	r0, #61412	; 0xefe4
   1604c:	movt	r0, #2
   16050:	ldr	r0, [r0, #8]
   16054:	cmp	r0, #0
   16058:	beq	160dc <sprintf@plt+0x4854>
   1605c:	ldr	r0, [r9, #460]	; 0x1cc
   16060:	mov	r1, #16
   16064:	add	r0, r0, #1
   16068:	str	r0, [r9, #460]	; 0x1cc
   1606c:	movw	r0, #44452	; 0xada4
   16070:	movt	r0, #2
   16074:	ldr	r5, [r0, #16]
   16078:	mov	r0, #1
   1607c:	bl	115a0 <calloc@plt>
   16080:	cmp	r0, #0
   16084:	beq	16184 <sprintf@plt+0x48fc>
   16088:	ldr	r8, [r9, #464]	; 0x1d0
   1608c:	add	r1, r8, r5, lsl #4
   16090:	str	r0, [r1, #8]
   16094:	movw	r0, #61824	; 0xf180
   16098:	movt	r0, #2
   1609c:	ldr	r6, [r0]
   160a0:	cmp	r6, #0
   160a4:	beq	1615c <sprintf@plt+0x48d4>
   160a8:	movw	r5, #37873	; 0x93f1
   160ac:	mov	r7, r6
   160b0:	movt	r5, #1
   160b4:	ldr	r4, [r7]
   160b8:	mov	r1, r5
   160bc:	ldr	r0, [r4, #16]
   160c0:	bl	11594 <strcasecmp@plt>
   160c4:	cmp	r0, #0
   160c8:	beq	160f8 <sprintf@plt+0x4870>
   160cc:	ldr	r7, [r7, #8]
   160d0:	cmp	r7, #0
   160d4:	bne	160b4 <sprintf@plt+0x482c>
   160d8:	b	16114 <sprintf@plt+0x488c>
   160dc:	movw	r0, #44452	; 0xada4
   160e0:	movt	r0, #2
   160e4:	ldr	r1, [r0, #16]
   160e8:	mov	r0, r9
   160ec:	bl	12ed0 <sprintf@plt+0x1648>
   160f0:	mov	r0, #1
   160f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   160f8:	cmp	r4, #0
   160fc:	beq	16114 <sprintf@plt+0x488c>
   16100:	ldr	r0, [r4, #12]
   16104:	add	r0, r8, r0, lsl #4
   16108:	ldr	r0, [r0, #12]
   1610c:	cmp	r0, #2
   16110:	bne	1617c <sprintf@plt+0x48f4>
   16114:	ldr	r5, [r6]
   16118:	movw	r1, #38353	; 0x95d1
   1611c:	movt	r1, #1
   16120:	ldr	r0, [r5, #16]
   16124:	bl	11594 <strcasecmp@plt>
   16128:	cmp	r0, #0
   1612c:	beq	16140 <sprintf@plt+0x48b8>
   16130:	ldr	r6, [r6, #8]
   16134:	cmp	r6, #0
   16138:	bne	16114 <sprintf@plt+0x488c>
   1613c:	b	1615c <sprintf@plt+0x48d4>
   16140:	cmp	r5, #0
   16144:	beq	1615c <sprintf@plt+0x48d4>
   16148:	ldr	r0, [r5, #12]
   1614c:	add	r0, r8, r0, lsl #4
   16150:	ldr	r0, [r0, #12]
   16154:	cmp	r0, #2
   16158:	bne	1617c <sprintf@plt+0x48f4>
   1615c:	mov	r0, r9
   16160:	bl	162ac <sprintf@plt+0x4a24>
   16164:	cmp	r0, #0
   16168:	bne	1617c <sprintf@plt+0x48f4>
   1616c:	movw	r1, #38061	; 0x94ad
   16170:	mov	r0, r9
   16174:	movt	r1, #1
   16178:	bl	167f0 <sprintf@plt+0x4f68>
   1617c:	mov	r0, #1
   16180:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16184:	bl	11750 <rb_outofmemory@plt>
   16188:	movw	r1, #38088	; 0x94c8
   1618c:	movt	r1, #1
   16190:	b	167f0 <sprintf@plt+0x4f68>
   16194:	movw	r1, #38114	; 0x94e2
   16198:	movt	r1, #1
   1619c:	b	167f0 <sprintf@plt+0x4f68>
   161a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   161a4:	add	fp, sp, #24
   161a8:	mov	r8, r0
   161ac:	movw	r0, #44452	; 0xada4
   161b0:	movt	r0, #2
   161b4:	ldr	r9, [r8, #464]	; 0x1d0
   161b8:	ldr	r0, [r0, #16]
   161bc:	add	r0, r9, r0, lsl #4
   161c0:	ldr	r0, [r0, #8]
   161c4:	cmp	r0, #0
   161c8:	beq	16294 <sprintf@plt+0x4a0c>
   161cc:	ldrb	r0, [r0]
   161d0:	cmp	r0, #0
   161d4:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   161d8:	movw	r0, #61824	; 0xf180
   161dc:	movt	r0, #2
   161e0:	ldr	r4, [r0]
   161e4:	cmp	r4, #0
   161e8:	beq	16284 <sprintf@plt+0x49fc>
   161ec:	movw	r5, #37873	; 0x93f1
   161f0:	mov	r7, r4
   161f4:	movt	r5, #1
   161f8:	ldr	r6, [r7]
   161fc:	mov	r1, r5
   16200:	ldr	r0, [r6, #16]
   16204:	bl	11594 <strcasecmp@plt>
   16208:	cmp	r0, #0
   1620c:	beq	16220 <sprintf@plt+0x4998>
   16210:	ldr	r7, [r7, #8]
   16214:	cmp	r7, #0
   16218:	bne	161f8 <sprintf@plt+0x4970>
   1621c:	b	1623c <sprintf@plt+0x49b4>
   16220:	cmp	r6, #0
   16224:	beq	1623c <sprintf@plt+0x49b4>
   16228:	ldr	r0, [r6, #12]
   1622c:	add	r0, r9, r0, lsl #4
   16230:	ldr	r0, [r0, #12]
   16234:	cmp	r0, #2
   16238:	bne	16294 <sprintf@plt+0x4a0c>
   1623c:	ldr	r5, [r4]
   16240:	movw	r1, #38353	; 0x95d1
   16244:	movt	r1, #1
   16248:	ldr	r0, [r5, #16]
   1624c:	bl	11594 <strcasecmp@plt>
   16250:	cmp	r0, #0
   16254:	beq	16268 <sprintf@plt+0x49e0>
   16258:	ldr	r4, [r4, #8]
   1625c:	cmp	r4, #0
   16260:	bne	1623c <sprintf@plt+0x49b4>
   16264:	b	16284 <sprintf@plt+0x49fc>
   16268:	cmp	r5, #0
   1626c:	beq	16284 <sprintf@plt+0x49fc>
   16270:	ldr	r0, [r5, #12]
   16274:	add	r0, r9, r0, lsl #4
   16278:	ldr	r0, [r0, #12]
   1627c:	cmp	r0, #2
   16280:	bne	16294 <sprintf@plt+0x4a0c>
   16284:	mov	r0, r8
   16288:	bl	162ac <sprintf@plt+0x4a24>
   1628c:	cmp	r0, #0
   16290:	beq	16298 <sprintf@plt+0x4a10>
   16294:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16298:	movw	r1, #38061	; 0x94ad
   1629c:	mov	r0, r8
   162a0:	movt	r1, #1
   162a4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   162a8:	b	167f0 <sprintf@plt+0x4f68>
   162ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162b0:	add	fp, sp, #28
   162b4:	sub	sp, sp, #268	; 0x10c
   162b8:	mov	r4, r0
   162bc:	movw	r0, #44452	; 0xada4
   162c0:	mov	r2, #1
   162c4:	mov	r9, #1
   162c8:	movt	r0, #2
   162cc:	ldr	r1, [r4, #464]	; 0x1d0
   162d0:	ldr	r0, [r0, #16]
   162d4:	add	r0, r1, r0, lsl #4
   162d8:	ldrh	r1, [r4, #248]	; 0xf8
   162dc:	ldr	r3, [r0, #8]
   162e0:	mov	r0, #0
   162e4:	cmp	r1, #2
   162e8:	beq	162f8 <sprintf@plt+0x4a70>
   162ec:	cmp	r1, #10
   162f0:	bne	164ac <sprintf@plt+0x4c24>
   162f4:	mov	r9, #2
   162f8:	strb	r2, [r3]
   162fc:	movw	r1, #37878	; 0x93f6
   16300:	str	r3, [sp]
   16304:	ldr	r0, [r4]
   16308:	movt	r1, #1
   1630c:	bl	12494 <sprintf@plt+0xc0c>
   16310:	movw	r0, #61412	; 0xefe4
   16314:	movt	r0, #2
   16318:	ldr	r8, [r0]
   1631c:	cmp	r8, #0
   16320:	beq	16470 <sprintf@plt+0x4be8>
   16324:	add	r0, r4, #248	; 0xf8
   16328:	str	r0, [sp, #4]
   1632c:	ldr	r5, [r8]
   16330:	ldrb	r0, [r5, #784]	; 0x310
   16334:	cmp	r0, #0
   16338:	bne	16348 <sprintf@plt+0x4ac0>
   1633c:	b	16364 <sprintf@plt+0x4adc>
   16340:	mov	r0, r7
   16344:	bl	1163c <free@plt>
   16348:	ldr	r8, [r8, #8]
   1634c:	cmp	r8, #0
   16350:	beq	16470 <sprintf@plt+0x4be8>
   16354:	ldr	r5, [r8]
   16358:	ldrb	r0, [r5, #784]	; 0x310
   1635c:	cmp	r0, #0
   16360:	bne	16348 <sprintf@plt+0x4ac0>
   16364:	ldrb	r0, [r5, #768]	; 0x300
   16368:	tst	r9, r0
   1636c:	beq	16348 <sprintf@plt+0x4ac0>
   16370:	mov	r0, #1
   16374:	mov	r1, #24
   16378:	bl	115a0 <calloc@plt>
   1637c:	cmp	r0, #0
   16380:	beq	164b4 <sprintf@plt+0x4c2c>
   16384:	mov	r7, r0
   16388:	movw	r0, #44452	; 0xada4
   1638c:	ldr	r1, [r4, #464]	; 0x1d0
   16390:	movt	r0, #2
   16394:	ldr	r0, [r0, #16]
   16398:	add	r0, r1, r0, lsl #4
   1639c:	ldr	sl, [r0, #8]
   163a0:	str	r5, [r7]
   163a4:	str	r4, [r7, #4]
   163a8:	ldrh	r0, [r4, #248]	; 0xf8
   163ac:	cmp	r0, #10
   163b0:	beq	163cc <sprintf@plt+0x4b44>
   163b4:	cmp	r0, #2
   163b8:	bne	163d8 <sprintf@plt+0x4b50>
   163bc:	ldrb	r0, [r5, #768]	; 0x300
   163c0:	tst	r0, #1
   163c4:	beq	16340 <sprintf@plt+0x4ab8>
   163c8:	b	163d8 <sprintf@plt+0x4b50>
   163cc:	ldrb	r0, [r5, #768]	; 0x300
   163d0:	tst	r0, #2
   163d4:	beq	16340 <sprintf@plt+0x4ab8>
   163d8:	ldr	r2, [sp, #4]
   163dc:	add	r6, sp, #8
   163e0:	mov	r1, #256	; 0x100
   163e4:	mov	r3, r5
   163e8:	mov	r0, r6
   163ec:	bl	1388c <sprintf@plt+0x2004>
   163f0:	movw	r2, #25784	; 0x64b8
   163f4:	mov	r0, r6
   163f8:	mov	r1, #2
   163fc:	mov	r3, r7
   16400:	movt	r2, #1
   16404:	bl	11dd8 <sprintf@plt+0x550>
   16408:	mov	r1, #0
   1640c:	str	r1, [r7, #16]
   16410:	str	r0, [r7, #8]
   16414:	str	r7, [r7, #12]
   16418:	add	r0, r7, #12
   1641c:	ldr	r1, [sl, #4]
   16420:	cmp	r1, #0
   16424:	str	r1, [r7, #20]
   16428:	beq	16438 <sprintf@plt+0x4bb0>
   1642c:	add	r1, r1, #4
   16430:	str	r0, [r1]
   16434:	b	16448 <sprintf@plt+0x4bc0>
   16438:	mov	r1, sl
   1643c:	ldr	r2, [r1, #8]!
   16440:	cmp	r2, #0
   16444:	streq	r0, [r1]
   16448:	str	r0, [sl, #4]
   1644c:	ldr	r0, [sl, #12]
   16450:	add	r0, r0, #1
   16454:	str	r0, [sl, #12]
   16458:	ldr	r0, [r5, #788]	; 0x314
   1645c:	add	r0, r0, #1
   16460:	str	r0, [r5, #788]	; 0x314
   16464:	ldr	r8, [r8, #8]
   16468:	cmp	r8, #0
   1646c:	bne	16354 <sprintf@plt+0x4acc>
   16470:	ldr	r0, [sp]
   16474:	ldr	r0, [r0, #12]
   16478:	cmp	r0, #0
   1647c:	mov	r0, #0
   16480:	beq	164ac <sprintf@plt+0x4c24>
   16484:	movw	r0, #44452	; 0xada4
   16488:	movt	r0, #2
   1648c:	ldr	r5, [r0]
   16490:	ldr	r6, [r0, #16]
   16494:	bl	1169c <rb_current_time@plt>
   16498:	ldr	r1, [r4, #464]	; 0x1d0
   1649c:	add	r0, r0, r5
   164a0:	add	r1, r1, r6, lsl #4
   164a4:	str	r0, [r1, #4]
   164a8:	mov	r0, #1
   164ac:	sub	sp, fp, #28
   164b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164b4:	bl	11750 <rb_outofmemory@plt>
   164b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164bc:	add	fp, sp, #28
   164c0:	sub	sp, sp, #4
   164c4:	ldr	r8, [r3, #4]
   164c8:	mov	r4, r0
   164cc:	movw	r0, #44452	; 0xada4
   164d0:	movt	r0, #2
   164d4:	ldr	r7, [r0, #16]
   164d8:	ldr	r0, [r8, #464]	; 0x1d0
   164dc:	add	r0, r0, r7, lsl #4
   164e0:	ldr	r5, [r0, #8]
   164e4:	cmp	r5, #0
   164e8:	beq	16634 <sprintf@plt+0x4dac>
   164ec:	ldr	r9, [r3]
   164f0:	cmp	r4, #0
   164f4:	mov	r6, r3
   164f8:	cmpne	r1, #0
   164fc:	bne	1652c <sprintf@plt+0x4ca4>
   16500:	mov	r0, r9
   16504:	bl	166d8 <sprintf@plt+0x4e50>
   16508:	ldr	r0, [r6, #8]
   1650c:	bl	12178 <sprintf@plt+0x8f0>
   16510:	ldr	r0, [r6, #20]
   16514:	ldr	r1, [r6, #16]
   16518:	cmp	r0, #0
   1651c:	beq	165a8 <sprintf@plt+0x4d20>
   16520:	str	r1, [r0, #4]
   16524:	ldr	r1, [r6, #16]
   16528:	b	165ac <sprintf@plt+0x4d24>
   1652c:	ldr	r0, [r9, #780]	; 0x30c
   16530:	cmp	r0, #0
   16534:	beq	1663c <sprintf@plt+0x4db4>
   16538:	mov	r0, r4
   1653c:	mov	r1, #46	; 0x2e
   16540:	bl	115e8 <strrchr@plt>
   16544:	cmp	r0, #0
   16548:	beq	16674 <sprintf@plt+0x4dec>
   1654c:	ldrb	r1, [r0, #1]!
   16550:	cmp	r1, #0
   16554:	beq	16674 <sprintf@plt+0x4dec>
   16558:	ldr	sl, [r9, #772]	; 0x304
   1655c:	str	r0, [sp]
   16560:	cmp	sl, #0
   16564:	beq	16500 <sprintf@plt+0x4c78>
   16568:	ldr	r1, [sl]
   1656c:	mov	r0, r4
   16570:	ldr	r3, [r1]
   16574:	cmp	r3, #1
   16578:	beq	16588 <sprintf@plt+0x4d00>
   1657c:	ldr	r0, [sp]
   16580:	cmp	r3, #2
   16584:	bne	166bc <sprintf@plt+0x4e34>
   16588:	add	r1, r1, #4
   1658c:	bl	11864 <strcmp@plt>
   16590:	cmp	r0, #0
   16594:	beq	1663c <sprintf@plt+0x4db4>
   16598:	ldr	sl, [sl, #8]
   1659c:	cmp	sl, #0
   165a0:	bne	16568 <sprintf@plt+0x4ce0>
   165a4:	b	16500 <sprintf@plt+0x4c78>
   165a8:	str	r1, [r5, #8]
   165ac:	cmp	r1, #0
   165b0:	add	r2, r1, #8
   165b4:	mov	r4, #0
   165b8:	movw	r7, #44452	; 0xada4
   165bc:	addeq	r2, r5, #4
   165c0:	movt	r7, #2
   165c4:	str	r0, [r2]
   165c8:	str	r4, [r6, #16]
   165cc:	str	r4, [r6, #20]
   165d0:	ldr	r0, [r5, #12]
   165d4:	sub	r0, r0, #1
   165d8:	str	r0, [r5, #12]
   165dc:	mov	r0, r6
   165e0:	bl	1163c <free@plt>
   165e4:	ldr	r0, [r5, #12]
   165e8:	cmp	r0, #0
   165ec:	bne	16634 <sprintf@plt+0x4dac>
   165f0:	ldr	r0, [r8]
   165f4:	movw	r1, #37914	; 0x941a
   165f8:	movt	r1, #1
   165fc:	bl	12494 <sprintf@plt+0xc0c>
   16600:	mov	r0, r5
   16604:	bl	1163c <free@plt>
   16608:	ldr	r1, [r7, #16]
   1660c:	ldr	r0, [r8, #464]	; 0x1d0
   16610:	add	r0, r0, r1, lsl #4
   16614:	str	r4, [r0, #4]
   16618:	str	r4, [r0, #8]
   1661c:	mov	r0, r8
   16620:	bl	12ed0 <sprintf@plt+0x1648>
   16624:	ldr	r0, [r8, #460]	; 0x1cc
   16628:	subs	r0, r0, #1
   1662c:	str	r0, [r8, #460]	; 0x1cc
   16630:	beq	166ac <sprintf@plt+0x4e24>
   16634:	sub	sp, fp, #28
   16638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1663c:	ldr	r0, [r9, #792]	; 0x318
   16640:	add	r3, r9, #256	; 0x100
   16644:	mov	r1, r7
   16648:	mov	r2, r9
   1664c:	add	r0, r0, #1
   16650:	str	r0, [r9, #792]	; 0x318
   16654:	mov	r0, r8
   16658:	bl	12b34 <sprintf@plt+0x12ac>
   1665c:	movw	r1, #38088	; 0x94c8
   16660:	mov	r0, r8
   16664:	movt	r1, #1
   16668:	sub	sp, fp, #28
   1666c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16670:	b	167f0 <sprintf@plt+0x4f68>
   16674:	ldr	r0, [r9, #796]	; 0x31c
   16678:	add	r7, r0, #3600	; 0xe10
   1667c:	bl	1169c <rb_current_time@plt>
   16680:	cmp	r7, r0
   16684:	bge	16500 <sprintf@plt+0x4c78>
   16688:	movw	r1, #37998	; 0x946e
   1668c:	mov	r0, #87	; 0x57
   16690:	mov	r2, r9
   16694:	mov	r3, r4
   16698:	movt	r1, #1
   1669c:	bl	12500 <sprintf@plt+0xc78>
   166a0:	bl	1169c <rb_current_time@plt>
   166a4:	str	r0, [r9, #796]	; 0x31c
   166a8:	b	16500 <sprintf@plt+0x4c78>
   166ac:	mov	r0, r8
   166b0:	sub	sp, fp, #28
   166b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166b8:	b	12e0c <sprintf@plt+0x1584>
   166bc:	movw	r1, #37951	; 0x943f
   166c0:	mov	r0, #67	; 0x43
   166c4:	mov	r2, r9
   166c8:	movt	r1, #1
   166cc:	bl	12500 <sprintf@plt+0xc78>
   166d0:	mov	r0, #3
   166d4:	bl	11870 <exit@plt>
   166d8:	push	{r4, r5, r6, r7, fp, lr}
   166dc:	add	fp, sp, #16
   166e0:	mov	r4, r0
   166e4:	ldr	r0, [r0, #788]	; 0x314
   166e8:	subs	r0, r0, #1
   166ec:	str	r0, [r4, #788]	; 0x314
   166f0:	bgt	16770 <sprintf@plt+0x4ee8>
   166f4:	ldrb	r0, [r4, #784]	; 0x310
   166f8:	cmp	r0, #0
   166fc:	beq	16770 <sprintf@plt+0x4ee8>
   16700:	mov	r5, r4
   16704:	ldr	r0, [r5, #772]!	; 0x304
   16708:	cmp	r0, #0
   1670c:	beq	16774 <sprintf@plt+0x4eec>
   16710:	mov	r6, #0
   16714:	ldmib	r0, {r1, r7}
   16718:	cmp	r7, #0
   1671c:	bne	16764 <sprintf@plt+0x4edc>
   16720:	str	r1, [r4, #776]	; 0x308
   16724:	cmp	r1, #0
   16728:	mov	r2, r5
   1672c:	addne	r2, r1, #8
   16730:	str	r7, [r2]
   16734:	str	r6, [r0, #4]
   16738:	str	r6, [r0, #8]
   1673c:	ldr	r1, [r4, #780]	; 0x30c
   16740:	sub	r1, r1, #1
   16744:	str	r1, [r4, #780]	; 0x30c
   16748:	bl	1163c <free@plt>
   1674c:	cmp	r7, #0
   16750:	mov	r0, r7
   16754:	beq	16774 <sprintf@plt+0x4eec>
   16758:	ldmib	r0, {r1, r7}
   1675c:	cmp	r7, #0
   16760:	beq	16720 <sprintf@plt+0x4e98>
   16764:	str	r1, [r7, #4]
   16768:	ldr	r1, [r0, #4]
   1676c:	b	16724 <sprintf@plt+0x4e9c>
   16770:	pop	{r4, r5, r6, r7, fp, pc}
   16774:	movw	r7, #61412	; 0xefe4
   16778:	movt	r7, #2
   1677c:	ldr	r2, [r7]
   16780:	cmp	r2, #0
   16784:	beq	167e4 <sprintf@plt+0x4f5c>
   16788:	ldr	r3, [r2]
   1678c:	mov	r0, r2
   16790:	ldr	r2, [r2, #8]
   16794:	cmp	r3, r4
   16798:	bne	16780 <sprintf@plt+0x4ef8>
   1679c:	ldr	r3, [r0, #4]
   167a0:	cmp	r2, #0
   167a4:	beq	167b4 <sprintf@plt+0x4f2c>
   167a8:	str	r3, [r2, #4]
   167ac:	ldr	r3, [r0, #4]
   167b0:	b	167b8 <sprintf@plt+0x4f30>
   167b4:	str	r3, [r7, #4]
   167b8:	cmp	r3, #0
   167bc:	mov	r1, r7
   167c0:	addne	r1, r3, #8
   167c4:	str	r2, [r1]
   167c8:	mov	r1, #0
   167cc:	str	r1, [r0, #4]
   167d0:	str	r1, [r0, #8]
   167d4:	ldr	r1, [r7, #8]
   167d8:	sub	r1, r1, #1
   167dc:	str	r1, [r7, #8]
   167e0:	bl	116c0 <rb_free_rb_dlink_node@plt>
   167e4:	mov	r0, r4
   167e8:	pop	{r4, r5, r6, r7, fp, lr}
   167ec:	b	1163c <free@plt>
   167f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167f4:	add	fp, sp, #28
   167f8:	sub	sp, sp, #4
   167fc:	movw	r8, #44452	; 0xada4
   16800:	mov	r9, r0
   16804:	movt	r8, #2
   16808:	ldr	r2, [r9, #464]	; 0x1d0
   1680c:	ldr	r0, [r8, #16]
   16810:	add	r0, r2, r0, lsl #4
   16814:	ldr	r5, [r0, #8]
   16818:	cmp	r5, #0
   1681c:	beq	168f4 <sprintf@plt+0x506c>
   16820:	ldr	r0, [r5, #12]
   16824:	cmp	r0, #0
   16828:	beq	168bc <sprintf@plt+0x5034>
   1682c:	ldr	r0, [r9]
   16830:	add	sl, r5, #4
   16834:	bl	12494 <sprintf@plt+0xc0c>
   16838:	ldr	r4, [sl]
   1683c:	cmp	r4, #0
   16840:	beq	168bc <sprintf@plt+0x5034>
   16844:	mov	r7, #0
   16848:	ldr	r6, [r4]
   1684c:	ldr	r4, [r4, #8]
   16850:	ldr	r0, [r6, #8]
   16854:	bl	12178 <sprintf@plt+0x8f0>
   16858:	ldr	r0, [r6]
   1685c:	bl	166d8 <sprintf@plt+0x4e50>
   16860:	ldr	r0, [r6, #20]
   16864:	ldr	r1, [r6, #16]
   16868:	cmp	r0, #0
   1686c:	beq	1687c <sprintf@plt+0x4ff4>
   16870:	str	r1, [r0, #4]
   16874:	ldr	r1, [r6, #16]
   16878:	b	16880 <sprintf@plt+0x4ff8>
   1687c:	str	r1, [r5, #8]
   16880:	cmp	r1, #0
   16884:	mov	r2, sl
   16888:	addne	r2, r1, #8
   1688c:	cmp	r6, #0
   16890:	str	r0, [r2]
   16894:	str	r7, [r6, #16]
   16898:	str	r7, [r6, #20]
   1689c:	ldr	r0, [r5, #12]
   168a0:	sub	r0, r0, #1
   168a4:	str	r0, [r5, #12]
   168a8:	beq	168b4 <sprintf@plt+0x502c>
   168ac:	mov	r0, r6
   168b0:	bl	1163c <free@plt>
   168b4:	cmp	r4, #0
   168b8:	bne	16848 <sprintf@plt+0x4fc0>
   168bc:	mov	r0, r5
   168c0:	bl	1163c <free@plt>
   168c4:	ldr	r1, [r8, #16]
   168c8:	ldr	r0, [r9, #464]	; 0x1d0
   168cc:	mov	r2, #0
   168d0:	add	r0, r0, r1, lsl #4
   168d4:	str	r2, [r0, #4]
   168d8:	str	r2, [r0, #8]
   168dc:	mov	r0, r9
   168e0:	bl	12ed0 <sprintf@plt+0x1648>
   168e4:	ldr	r0, [r9, #460]	; 0x1cc
   168e8:	subs	r0, r0, #1
   168ec:	str	r0, [r9, #460]	; 0x1cc
   168f0:	beq	168fc <sprintf@plt+0x5074>
   168f4:	sub	sp, fp, #28
   168f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168fc:	mov	r0, r9
   16900:	sub	sp, fp, #28
   16904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16908:	b	12e0c <sprintf@plt+0x1584>
   1690c:	push	{fp, lr}
   16910:	mov	fp, sp
   16914:	ldr	r0, [r2]
   16918:	mov	r1, #0
   1691c:	mov	r2, #10
   16920:	bl	116e4 <strtol@plt>
   16924:	cmn	r0, #1
   16928:	mov	r2, r0
   1692c:	movwgt	r0, #44552	; 0xae08
   16930:	movtgt	r0, #2
   16934:	strgt	r2, [r0, #4]
   16938:	popgt	{fp, pc}
   1693c:	movw	r1, #38170	; 0x951a
   16940:	mov	r0, #67	; 0x43
   16944:	movt	r1, #1
   16948:	bl	12500 <sprintf@plt+0xc78>
   1694c:	mov	r0, #3
   16950:	bl	11870 <exit@plt>
   16954:	ldr	r0, [r2]
   16958:	movw	r1, #44552	; 0xae08
   1695c:	movt	r1, #2
   16960:	ldrb	r0, [r0]
   16964:	sub	r0, r0, #49	; 0x31
   16968:	clz	r0, r0
   1696c:	lsr	r0, r0, #5
   16970:	strb	r0, [r1]
   16974:	bx	lr
   16978:	push	{r4, r5, r6, sl, fp, lr}
   1697c:	add	fp, sp, #16
   16980:	sub	sp, sp, #8
   16984:	movw	r5, #61820	; 0xf17c
   16988:	mov	r4, sp
   1698c:	movt	r5, #2
   16990:	mov	r1, r4
   16994:	ldr	r0, [r5]
   16998:	bl	11678 <rb_dictionary_foreach_start@plt>
   1699c:	ldr	r0, [r5]
   169a0:	mov	r1, r4
   169a4:	bl	11588 <rb_dictionary_foreach_cur@plt>
   169a8:	cmp	r0, #0
   169ac:	beq	169f8 <sprintf@plt+0x5170>
   169b0:	movw	r6, #44552	; 0xae08
   169b4:	mov	r4, sp
   169b8:	movt	r6, #2
   169bc:	ldr	r1, [r6, #20]
   169c0:	ldr	r2, [r0, #464]	; 0x1d0
   169c4:	add	r1, r2, r1, lsl #4
   169c8:	ldr	r1, [r1, #8]
   169cc:	cmp	r1, #0
   169d0:	movne	r1, #2
   169d4:	blne	16bac <sprintf@plt+0x5324>
   169d8:	ldr	r0, [r5]
   169dc:	mov	r1, r4
   169e0:	bl	11630 <rb_dictionary_foreach_next@plt>
   169e4:	ldr	r0, [r5]
   169e8:	mov	r1, r4
   169ec:	bl	11588 <rb_dictionary_foreach_cur@plt>
   169f0:	cmp	r0, #0
   169f4:	bne	169bc <sprintf@plt+0x5134>
   169f8:	sub	sp, fp, #16
   169fc:	pop	{r4, r5, r6, sl, fp, pc}
   16a00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a04:	add	fp, sp, #28
   16a08:	sub	sp, sp, #268	; 0x10c
   16a0c:	mov	r4, r0
   16a10:	mov	r0, #1
   16a14:	mov	r1, #4
   16a18:	bl	115a0 <calloc@plt>
   16a1c:	cmp	r0, #0
   16a20:	beq	16b80 <sprintf@plt+0x52f8>
   16a24:	movw	sl, #44552	; 0xae08
   16a28:	mov	r5, r0
   16a2c:	movt	sl, #2
   16a30:	ldrb	r0, [sl]
   16a34:	cmp	r0, #0
   16a38:	beq	16b18 <sprintf@plt+0x5290>
   16a3c:	ldr	r1, [r4, #460]	; 0x1cc
   16a40:	ldr	r0, [r4]
   16a44:	add	r1, r1, #1
   16a48:	str	r1, [r4, #460]	; 0x1cc
   16a4c:	movw	r1, #38207	; 0x953f
   16a50:	ldrh	r8, [r4, #248]	; 0xf8
   16a54:	movt	r1, #1
   16a58:	bl	12494 <sprintf@plt+0xc0c>
   16a5c:	ldr	r7, [sl, #20]
   16a60:	ldr	r0, [r4, #464]	; 0x1d0
   16a64:	add	r0, r0, r7, lsl #4
   16a68:	str	r5, [r0, #8]
   16a6c:	ldr	r6, [sl, #4]
   16a70:	bl	1169c <rb_current_time@plt>
   16a74:	ldr	r1, [r4, #464]	; 0x1d0
   16a78:	add	r0, r0, r6
   16a7c:	movw	r3, #38353	; 0x95d1
   16a80:	movt	r3, #1
   16a84:	add	r1, r1, r7, lsl #4
   16a88:	str	r0, [r1, #4]
   16a8c:	mov	r0, r8
   16a90:	mov	r1, #1
   16a94:	ldr	r2, [r4, #4]
   16a98:	bl	11558 <rb_socket@plt>
   16a9c:	cmp	r0, #0
   16aa0:	str	r0, [r5]
   16aa4:	beq	16b48 <sprintf@plt+0x52c0>
   16aa8:	add	r8, sp, #136	; 0x88
   16aac:	mov	r6, r0
   16ab0:	add	r1, r4, #64	; 0x40
   16ab4:	mov	r2, #128	; 0x80
   16ab8:	add	r5, r4, #248	; 0xf8
   16abc:	mov	r0, r8
   16ac0:	bl	116b4 <memcpy@plt>
   16ac4:	add	r9, sp, #8
   16ac8:	mov	r1, r5
   16acc:	mov	r2, #128	; 0x80
   16ad0:	mov	r0, r9
   16ad4:	bl	116b4 <memcpy@plt>
   16ad8:	mov	r0, #0
   16adc:	movw	r3, #27740	; 0x6c5c
   16ae0:	mov	r1, r9
   16ae4:	mov	r2, r8
   16ae8:	str	r4, [sp]
   16aec:	strh	r0, [sp, #138]	; 0x8a
   16af0:	mov	r0, #28928	; 0x7100
   16af4:	movt	r3, #1
   16af8:	strh	r0, [sp, #10]
   16afc:	ldr	r0, [sl, #4]
   16b00:	str	r0, [sp, #4]
   16b04:	mov	r0, r6
   16b08:	bl	11504 <rb_connect_tcp@plt>
   16b0c:	mov	r0, #1
   16b10:	sub	sp, fp, #28
   16b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b18:	mov	r0, r5
   16b1c:	bl	1163c <free@plt>
   16b20:	ldr	r0, [r4]
   16b24:	movw	r1, #38320	; 0x95b0
   16b28:	movt	r1, #1
   16b2c:	bl	12494 <sprintf@plt+0xc0c>
   16b30:	ldr	r1, [sl, #20]
   16b34:	mov	r0, r4
   16b38:	bl	12ed0 <sprintf@plt+0x1648>
   16b3c:	mov	r0, #1
   16b40:	sub	sp, fp, #28
   16b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b48:	bl	1187c <__errno_location@plt>
   16b4c:	ldr	r0, [r0]
   16b50:	bl	114b0 <strerror@plt>
   16b54:	movw	r1, #38359	; 0x95d7
   16b58:	mov	r2, r0
   16b5c:	mov	r0, #68	; 0x44
   16b60:	movt	r1, #1
   16b64:	bl	12500 <sprintf@plt+0xc78>
   16b68:	mov	r0, r4
   16b6c:	mov	r1, #2
   16b70:	bl	16bac <sprintf@plt+0x5324>
   16b74:	mov	r0, #1
   16b78:	sub	sp, fp, #28
   16b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b80:	bl	11750 <rb_outofmemory@plt>
   16b84:	movw	r1, #44552	; 0xae08
   16b88:	ldr	r2, [r0, #464]	; 0x1d0
   16b8c:	movt	r1, #2
   16b90:	ldr	r1, [r1, #20]
   16b94:	add	r1, r2, r1, lsl #4
   16b98:	ldr	r1, [r1, #8]
   16b9c:	cmp	r1, #0
   16ba0:	bxeq	lr
   16ba4:	mov	r1, #2
   16ba8:	b	16bac <sprintf@plt+0x5324>
   16bac:	push	{r4, r5, r6, r7, fp, lr}
   16bb0:	add	fp, sp, #16
   16bb4:	movw	r7, #44552	; 0xae08
   16bb8:	mov	r4, r0
   16bbc:	mov	r5, r1
   16bc0:	mov	r2, #11
   16bc4:	movt	r7, #2
   16bc8:	ldr	r1, [r4, #464]	; 0x1d0
   16bcc:	ldr	r0, [r7, #20]
   16bd0:	add	r0, r1, r0, lsl #4
   16bd4:	movw	r1, #36220	; 0x8d7c
   16bd8:	movt	r1, #1
   16bdc:	ldr	r6, [r0, #8]
   16be0:	add	r0, r4, #440	; 0x1b8
   16be4:	bl	11618 <rb_strlcpy@plt>
   16be8:	ldr	r0, [r6]
   16bec:	cmp	r0, #0
   16bf0:	beq	16bf8 <sprintf@plt+0x5370>
   16bf4:	bl	116d8 <rb_close@plt>
   16bf8:	cmp	r6, #0
   16bfc:	beq	16c08 <sprintf@plt+0x5380>
   16c00:	mov	r0, r6
   16c04:	bl	1163c <free@plt>
   16c08:	ldr	r0, [r7, #20]
   16c0c:	ldr	r1, [r4, #464]	; 0x1d0
   16c10:	add	r0, r1, r0, lsl #4
   16c14:	mov	r1, #0
   16c18:	str	r1, [r0, #4]
   16c1c:	str	r1, [r0, #8]
   16c20:	movw	r0, #38412	; 0x960c
   16c24:	movt	r0, #1
   16c28:	ldr	r1, [r0, r5, lsl #2]
   16c2c:	ldr	r0, [r4]
   16c30:	bl	12494 <sprintf@plt+0xc0c>
   16c34:	ldr	r1, [r7, #20]
   16c38:	mov	r0, r4
   16c3c:	bl	12ed0 <sprintf@plt+0x1648>
   16c40:	ldr	r0, [r4, #460]	; 0x1cc
   16c44:	subs	r0, r0, #1
   16c48:	str	r0, [r4, #460]	; 0x1cc
   16c4c:	popne	{r4, r5, r6, r7, fp, pc}
   16c50:	mov	r0, r4
   16c54:	pop	{r4, r5, r6, r7, fp, lr}
   16c58:	b	12e0c <sprintf@plt+0x1584>
   16c5c:	push	{r4, r5, r6, r7, fp, lr}
   16c60:	add	fp, sp, #16
   16c64:	sub	sp, sp, #40	; 0x28
   16c68:	mov	r4, r2
   16c6c:	cmp	r1, #0
   16c70:	bne	16ce8 <sprintf@plt+0x5460>
   16c74:	movw	r0, #44552	; 0xae08
   16c78:	ldr	r1, [r4, #464]	; 0x1d0
   16c7c:	ldrh	r3, [r4, #246]	; 0xf6
   16c80:	movw	r2, #38393	; 0x95f9
   16c84:	add	r5, sp, #8
   16c88:	movt	r0, #2
   16c8c:	movt	r2, #1
   16c90:	ldr	r0, [r0, #20]
   16c94:	add	r0, r1, r0, lsl #4
   16c98:	mov	r1, #32
   16c9c:	ldr	r7, [r0, #8]
   16ca0:	ldrh	r0, [r4, #62]	; 0x3e
   16ca4:	str	r0, [sp]
   16ca8:	mov	r0, r5
   16cac:	bl	11810 <snprintf@plt>
   16cb0:	mov	r0, r5
   16cb4:	bl	11690 <strlen@plt>
   16cb8:	mov	r6, r0
   16cbc:	ldr	r0, [r7]
   16cc0:	mov	r1, r5
   16cc4:	mov	r2, r6
   16cc8:	bl	115f4 <rb_write@plt>
   16ccc:	cmp	r0, r6
   16cd0:	bne	16ce8 <sprintf@plt+0x5460>
   16cd4:	ldr	r0, [r7]
   16cd8:	mov	r1, r4
   16cdc:	bl	16cfc <sprintf@plt+0x5474>
   16ce0:	sub	sp, fp, #16
   16ce4:	pop	{r4, r5, r6, r7, fp, pc}
   16ce8:	mov	r0, r4
   16cec:	mov	r1, #2
   16cf0:	bl	16bac <sprintf@plt+0x5324>
   16cf4:	sub	sp, fp, #16
   16cf8:	pop	{r4, r5, r6, r7, fp, pc}
   16cfc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16d00:	add	fp, sp, #24
   16d04:	sub	sp, sp, #136	; 0x88
   16d08:	mov	r4, sp
   16d0c:	mov	r8, r1
   16d10:	mov	r5, r0
   16d14:	mov	r1, #0
   16d18:	mov	r2, #129	; 0x81
   16d1c:	mov	r0, r4
   16d20:	bl	115d0 <memset@plt>
   16d24:	mov	r0, r5
   16d28:	mov	r1, r4
   16d2c:	mov	r2, #128	; 0x80
   16d30:	bl	11654 <rb_read@plt>
   16d34:	cmn	r0, #1
   16d38:	ble	16e98 <sprintf@plt+0x5610>
   16d3c:	cmp	r0, #0
   16d40:	beq	16ecc <sprintf@plt+0x5644>
   16d44:	mov	r0, sp
   16d48:	mov	r1, #58	; 0x3a
   16d4c:	bl	1157c <strchr@plt>
   16d50:	mov	r5, #3
   16d54:	cmp	r0, #0
   16d58:	beq	16ed0 <sprintf@plt+0x5648>
   16d5c:	mov	r6, r0
   16d60:	mov	r4, #0
   16d64:	mov	r1, #58	; 0x3a
   16d68:	strb	r4, [r6], #1
   16d6c:	mov	r0, r6
   16d70:	bl	1157c <strchr@plt>
   16d74:	cmp	r0, #0
   16d78:	beq	16ed0 <sprintf@plt+0x5648>
   16d7c:	mov	r7, r0
   16d80:	mov	r0, sp
   16d84:	mov	r1, #44	; 0x2c
   16d88:	strb	r4, [r7], #1
   16d8c:	bl	1157c <strchr@plt>
   16d90:	cmp	r0, #0
   16d94:	beq	16ed0 <sprintf@plt+0x5648>
   16d98:	mov	r4, r0
   16d9c:	mov	r0, #0
   16da0:	mov	r1, #0
   16da4:	mov	r2, #10
   16da8:	strb	r0, [r4]
   16dac:	mov	r0, sp
   16db0:	bl	116e4 <strtol@plt>
   16db4:	cmp	r0, #0
   16db8:	beq	16ed0 <sprintf@plt+0x5648>
   16dbc:	add	r0, r4, #1
   16dc0:	mov	r1, #0
   16dc4:	mov	r2, #10
   16dc8:	bl	116e4 <strtol@plt>
   16dcc:	cmp	r0, #0
   16dd0:	beq	16ed0 <sprintf@plt+0x5648>
   16dd4:	movw	r1, #38403	; 0x9603
   16dd8:	mov	r0, r6
   16ddc:	movt	r1, #1
   16de0:	bl	11720 <strstr@plt>
   16de4:	cmp	r0, #0
   16de8:	beq	16ed0 <sprintf@plt+0x5648>
   16dec:	mov	r0, r7
   16df0:	mov	r1, #58	; 0x3a
   16df4:	bl	1157c <strchr@plt>
   16df8:	cmp	r0, #0
   16dfc:	beq	16ed0 <sprintf@plt+0x5648>
   16e00:	mov	r1, #0
   16e04:	strb	r1, [r0]
   16e08:	mov	r1, r0
   16e0c:	ldrb	r7, [r0, #1]!
   16e10:	orr	r2, r7, #32
   16e14:	cmp	r2, #126	; 0x7e
   16e18:	beq	16e08 <sprintf@plt+0x5580>
   16e1c:	add	r0, r8, #440	; 0x1b8
   16e20:	cmp	r7, #0
   16e24:	beq	16ee4 <sprintf@plt+0x565c>
   16e28:	mov	r2, #10
   16e2c:	mov	r3, #2
   16e30:	uxtb	r6, r7
   16e34:	cmp	r6, #57	; 0x39
   16e38:	ble	16e68 <sprintf@plt+0x55e0>
   16e3c:	cmp	r6, #58	; 0x3a
   16e40:	cmpne	r6, #91	; 0x5b
   16e44:	bne	16e84 <sprintf@plt+0x55fc>
   16e48:	ldrb	r7, [r1, r3]
   16e4c:	cmp	r7, #0
   16e50:	addne	r3, r3, #1
   16e54:	cmpne	r2, #0
   16e58:	beq	16ee4 <sprintf@plt+0x565c>
   16e5c:	uxtb	r6, r7
   16e60:	cmp	r6, #57	; 0x39
   16e64:	bgt	16e3c <sprintf@plt+0x55b4>
   16e68:	cmp	r6, #32
   16e6c:	beq	16e48 <sprintf@plt+0x55c0>
   16e70:	cmp	r6, #10
   16e74:	beq	16ee4 <sprintf@plt+0x565c>
   16e78:	cmp	r6, #13
   16e7c:	bne	16e8c <sprintf@plt+0x5604>
   16e80:	b	16ee4 <sprintf@plt+0x565c>
   16e84:	cmp	r6, #64	; 0x40
   16e88:	beq	16ee4 <sprintf@plt+0x565c>
   16e8c:	strb	r7, [r0], #1
   16e90:	sub	r2, r2, #1
   16e94:	b	16e48 <sprintf@plt+0x55c0>
   16e98:	bl	1187c <__errno_location@plt>
   16e9c:	ldr	r0, [r0]
   16ea0:	bl	114ec <rb_ignore_errno@plt>
   16ea4:	cmp	r0, #0
   16ea8:	beq	16ecc <sprintf@plt+0x5644>
   16eac:	movw	r2, #27900	; 0x6cfc
   16eb0:	mov	r0, r5
   16eb4:	mov	r1, #1
   16eb8:	mov	r3, r8
   16ebc:	movt	r2, #1
   16ec0:	bl	11528 <rb_setselect@plt>
   16ec4:	sub	sp, fp, #24
   16ec8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16ecc:	mov	r5, #2
   16ed0:	mov	r0, r8
   16ed4:	mov	r1, r5
   16ed8:	bl	16bac <sprintf@plt+0x5324>
   16edc:	sub	sp, fp, #24
   16ee0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16ee4:	movw	r5, #44552	; 0xae08
   16ee8:	mov	r1, #0
   16eec:	movt	r5, #2
   16ef0:	strb	r1, [r0]
   16ef4:	ldr	r1, [r8, #464]	; 0x1d0
   16ef8:	ldr	r0, [r5, #20]
   16efc:	add	r0, r1, r0, lsl #4
   16f00:	ldr	r4, [r0, #8]
   16f04:	ldr	r0, [r4]
   16f08:	cmp	r0, #0
   16f0c:	beq	16f14 <sprintf@plt+0x568c>
   16f10:	bl	116d8 <rb_close@plt>
   16f14:	cmp	r4, #0
   16f18:	beq	16f24 <sprintf@plt+0x569c>
   16f1c:	mov	r0, r4
   16f20:	bl	1163c <free@plt>
   16f24:	ldr	r0, [r5, #20]
   16f28:	ldr	r1, [r8, #464]	; 0x1d0
   16f2c:	add	r0, r1, r0, lsl #4
   16f30:	mov	r1, #0
   16f34:	str	r1, [r0, #4]
   16f38:	str	r1, [r0, #8]
   16f3c:	movw	r1, #38226	; 0x9552
   16f40:	ldr	r0, [r8]
   16f44:	movt	r1, #1
   16f48:	bl	12494 <sprintf@plt+0xc0c>
   16f4c:	ldr	r1, [r5, #20]
   16f50:	mov	r0, r8
   16f54:	bl	12ed0 <sprintf@plt+0x1648>
   16f58:	ldr	r0, [r8, #460]	; 0x1cc
   16f5c:	subs	r0, r0, #1
   16f60:	str	r0, [r8, #460]	; 0x1cc
   16f64:	bne	16f70 <sprintf@plt+0x56e8>
   16f68:	mov	r0, r8
   16f6c:	bl	12e0c <sprintf@plt+0x1584>
   16f70:	sub	sp, fp, #24
   16f74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16f78:	push	{fp, lr}
   16f7c:	mov	fp, sp
   16f80:	ldr	r0, [r2]
   16f84:	mov	r1, #0
   16f88:	mov	r2, #10
   16f8c:	bl	116e4 <strtol@plt>
   16f90:	cmn	r0, #1
   16f94:	mov	r2, r0
   16f98:	movwgt	r0, #44644	; 0xae64
   16f9c:	movtgt	r0, #2
   16fa0:	strgt	r2, [r0]
   16fa4:	popgt	{fp, pc}
   16fa8:	movw	r1, #38445	; 0x962d
   16fac:	mov	r0, #67	; 0x43
   16fb0:	movt	r1, #1
   16fb4:	bl	12500 <sprintf@plt+0xc78>
   16fb8:	mov	r0, #3
   16fbc:	bl	11870 <exit@plt>
   16fc0:	push	{r4, r5, r6, sl, fp, lr}
   16fc4:	add	fp, sp, #16
   16fc8:	sub	sp, sp, #8
   16fcc:	movw	r5, #61820	; 0xf17c
   16fd0:	mov	r4, sp
   16fd4:	movt	r5, #2
   16fd8:	mov	r1, r4
   16fdc:	ldr	r0, [r5]
   16fe0:	bl	11678 <rb_dictionary_foreach_start@plt>
   16fe4:	ldr	r0, [r5]
   16fe8:	mov	r1, r4
   16fec:	bl	11588 <rb_dictionary_foreach_cur@plt>
   16ff0:	cmp	r0, #0
   16ff4:	beq	17040 <sprintf@plt+0x57b8>
   16ff8:	movw	r6, #44644	; 0xae64
   16ffc:	mov	r4, sp
   17000:	movt	r6, #2
   17004:	ldr	r1, [r6, #16]
   17008:	ldr	r2, [r0, #464]	; 0x1d0
   1700c:	add	r1, r2, r1, lsl #4
   17010:	ldr	r1, [r1, #8]
   17014:	cmp	r1, #0
   17018:	movne	r1, #1
   1701c:	blne	17104 <sprintf@plt+0x587c>
   17020:	ldr	r0, [r5]
   17024:	mov	r1, r4
   17028:	bl	11630 <rb_dictionary_foreach_next@plt>
   1702c:	ldr	r0, [r5]
   17030:	mov	r1, r4
   17034:	bl	11588 <rb_dictionary_foreach_cur@plt>
   17038:	cmp	r0, #0
   1703c:	bne	17004 <sprintf@plt+0x577c>
   17040:	sub	sp, fp, #16
   17044:	pop	{r4, r5, r6, sl, fp, pc}
   17048:	push	{r4, r5, r6, r7, fp, lr}
   1704c:	add	fp, sp, #16
   17050:	mov	r4, r0
   17054:	mov	r0, #1
   17058:	mov	r1, #4
   1705c:	bl	115a0 <calloc@plt>
   17060:	cmp	r0, #0
   17064:	beq	170d8 <sprintf@plt+0x5850>
   17068:	mov	r5, r0
   1706c:	ldr	r0, [r4, #460]	; 0x1cc
   17070:	ldr	r1, [r4, #464]	; 0x1d0
   17074:	add	r0, r0, #1
   17078:	str	r0, [r4, #460]	; 0x1cc
   1707c:	movw	r0, #44644	; 0xae64
   17080:	movt	r0, #2
   17084:	ldr	r6, [r0, #16]
   17088:	add	r1, r1, r6, lsl #4
   1708c:	str	r5, [r1, #8]
   17090:	ldr	r7, [r0]
   17094:	bl	1169c <rb_current_time@plt>
   17098:	ldr	r1, [r4, #464]	; 0x1d0
   1709c:	add	r0, r0, r7
   170a0:	mov	r2, r4
   170a4:	add	r1, r1, r6, lsl #4
   170a8:	str	r0, [r1, #4]
   170ac:	movw	r1, #29096	; 0x71a8
   170b0:	add	r0, r4, #192	; 0xc0
   170b4:	movt	r1, #1
   170b8:	bl	11fdc <sprintf@plt+0x754>
   170bc:	str	r0, [r5]
   170c0:	movw	r1, #38479	; 0x964f
   170c4:	ldr	r0, [r4]
   170c8:	movt	r1, #1
   170cc:	bl	12494 <sprintf@plt+0xc0c>
   170d0:	mov	r0, #1
   170d4:	pop	{r4, r5, r6, r7, fp, pc}
   170d8:	bl	11750 <rb_outofmemory@plt>
   170dc:	movw	r1, #44644	; 0xae64
   170e0:	ldr	r2, [r0, #464]	; 0x1d0
   170e4:	movt	r1, #2
   170e8:	ldr	r1, [r1, #16]
   170ec:	add	r1, r2, r1, lsl #4
   170f0:	ldr	r1, [r1, #8]
   170f4:	cmp	r1, #0
   170f8:	bxeq	lr
   170fc:	mov	r1, #1
   17100:	b	17104 <sprintf@plt+0x587c>
   17104:	push	{r4, r5, r6, r7, fp, lr}
   17108:	add	fp, sp, #16
   1710c:	movw	r7, #44644	; 0xae64
   17110:	mov	r4, r0
   17114:	mov	r6, r1
   17118:	mov	r2, #64	; 0x40
   1711c:	movt	r7, #2
   17120:	ldr	r1, [r4, #464]	; 0x1d0
   17124:	ldr	r0, [r7, #16]
   17128:	add	r0, r1, r0, lsl #4
   1712c:	movw	r1, #36220	; 0x8d7c
   17130:	movt	r1, #1
   17134:	ldr	r5, [r0, #8]
   17138:	add	r0, r4, #376	; 0x178
   1713c:	bl	11618 <rb_strlcpy@plt>
   17140:	movw	r0, #38624	; 0x96e0
   17144:	movt	r0, #1
   17148:	ldr	r1, [r0, r6, lsl #2]
   1714c:	ldr	r0, [r4]
   17150:	bl	12494 <sprintf@plt+0xc0c>
   17154:	ldr	r0, [r5]
   17158:	bl	12178 <sprintf@plt+0x8f0>
   1715c:	cmp	r5, #0
   17160:	beq	1716c <sprintf@plt+0x58e4>
   17164:	mov	r0, r5
   17168:	bl	1163c <free@plt>
   1716c:	ldr	r1, [r7, #16]
   17170:	ldr	r0, [r4, #464]	; 0x1d0
   17174:	mov	r2, #0
   17178:	add	r0, r0, r1, lsl #4
   1717c:	str	r2, [r0, #4]
   17180:	str	r2, [r0, #8]
   17184:	mov	r0, r4
   17188:	bl	12ed0 <sprintf@plt+0x1648>
   1718c:	ldr	r0, [r4, #460]	; 0x1cc
   17190:	subs	r0, r0, #1
   17194:	str	r0, [r4, #460]	; 0x1cc
   17198:	popne	{r4, r5, r6, r7, fp, pc}
   1719c:	mov	r0, r4
   171a0:	pop	{r4, r5, r6, r7, fp, lr}
   171a4:	b	12e0c <sprintf@plt+0x1584>
   171a8:	push	{r4, r5, r6, r7, fp, lr}
   171ac:	add	fp, sp, #16
   171b0:	cmp	r0, #0
   171b4:	mov	r4, r3
   171b8:	cmpne	r1, #0
   171bc:	bne	171d0 <sprintf@plt+0x5948>
   171c0:	mov	r0, r4
   171c4:	mov	r1, #1
   171c8:	pop	{r4, r5, r6, r7, fp, lr}
   171cc:	b	17104 <sprintf@plt+0x587c>
   171d0:	mov	r5, r0
   171d4:	bl	11690 <strlen@plt>
   171d8:	cmp	r0, #64	; 0x40
   171dc:	bcc	171f0 <sprintf@plt+0x5968>
   171e0:	mov	r0, r4
   171e4:	mov	r1, #2
   171e8:	pop	{r4, r5, r6, r7, fp, lr}
   171ec:	b	17104 <sprintf@plt+0x587c>
   171f0:	add	r6, r4, #376	; 0x178
   171f4:	mov	r1, r5
   171f8:	mov	r2, #64	; 0x40
   171fc:	mov	r0, r6
   17200:	bl	11618 <rb_strlcpy@plt>
   17204:	movw	r7, #44644	; 0xae64
   17208:	ldr	r2, [r4, #464]	; 0x1d0
   1720c:	ldr	r0, [r4]
   17210:	movt	r7, #2
   17214:	ldr	r1, [r7, #16]
   17218:	add	r1, r2, r1, lsl #4
   1721c:	mov	r2, r6
   17220:	ldr	r5, [r1, #8]
   17224:	movw	r1, #38595	; 0x96c3
   17228:	movt	r1, #1
   1722c:	bl	12494 <sprintf@plt+0xc0c>
   17230:	ldr	r0, [r5]
   17234:	bl	12178 <sprintf@plt+0x8f0>
   17238:	cmp	r5, #0
   1723c:	beq	17248 <sprintf@plt+0x59c0>
   17240:	mov	r0, r5
   17244:	bl	1163c <free@plt>
   17248:	ldr	r1, [r7, #16]
   1724c:	ldr	r0, [r4, #464]	; 0x1d0
   17250:	mov	r2, #0
   17254:	add	r0, r0, r1, lsl #4
   17258:	str	r2, [r0, #4]
   1725c:	str	r2, [r0, #8]
   17260:	mov	r0, r4
   17264:	bl	12ed0 <sprintf@plt+0x1648>
   17268:	ldr	r0, [r4, #460]	; 0x1cc
   1726c:	subs	r0, r0, #1
   17270:	str	r0, [r4, #460]	; 0x1cc
   17274:	popne	{r4, r5, r6, r7, fp, pc}
   17278:	mov	r0, r4
   1727c:	pop	{r4, r5, r6, r7, fp, lr}
   17280:	b	12e0c <sprintf@plt+0x1584>
   17284:	push	{fp, lr}
   17288:	mov	fp, sp
   1728c:	ldr	r0, [r2]
   17290:	mov	r1, #0
   17294:	mov	r2, #10
   17298:	bl	116e4 <strtol@plt>
   1729c:	mov	r2, r0
   172a0:	cmn	r0, #1
   172a4:	ble	172b8 <sprintf@plt+0x5a30>
   172a8:	movw	r0, #44804	; 0xaf04
   172ac:	movt	r0, #2
   172b0:	str	r2, [r0]
   172b4:	pop	{fp, pc}
   172b8:	movw	r1, #38746	; 0x975a
   172bc:	mov	r0, #67	; 0x43
   172c0:	movt	r1, #1
   172c4:	pop	{fp, lr}
   172c8:	b	12500 <sprintf@plt+0xc78>
   172cc:	push	{r4, r5, r6, sl, fp, lr}
   172d0:	add	fp, sp, #16
   172d4:	sub	sp, sp, #8
   172d8:	ldr	r0, [r2]
   172dc:	movw	r4, #61424	; 0xeff0
   172e0:	movt	r4, #2
   172e4:	ldrb	r0, [r0]
   172e8:	subs	r0, r0, #49	; 0x31
   172ec:	clz	r0, r0
   172f0:	lsr	r5, r0, #5
   172f4:	bne	17350 <sprintf@plt+0x5ac8>
   172f8:	ldrb	r0, [r4]
   172fc:	cmp	r0, #0
   17300:	beq	17324 <sprintf@plt+0x5a9c>
   17304:	ldrh	r1, [r4, #54]	; 0x36
   17308:	cmp	r1, #0
   1730c:	beq	17324 <sprintf@plt+0x5a9c>
   17310:	ldr	r0, [r4, #184]	; 0xb8
   17314:	cmp	r0, #0
   17318:	movweq	r0, #61424	; 0xeff0
   1731c:	movteq	r0, #2
   17320:	bleq	17e7c <sprintf@plt+0x65f4>
   17324:	ldrb	r0, [r4, #188]	; 0xbc
   17328:	cmp	r0, #0
   1732c:	beq	173e0 <sprintf@plt+0x5b58>
   17330:	ldrh	r1, [r4, #242]	; 0xf2
   17334:	cmp	r1, #0
   17338:	beq	173e0 <sprintf@plt+0x5b58>
   1733c:	ldr	r0, [r4, #372]	; 0x174
   17340:	cmp	r0, #0
   17344:	addeq	r0, r4, #188	; 0xbc
   17348:	bleq	17e7c <sprintf@plt+0x65f4>
   1734c:	b	173e0 <sprintf@plt+0x5b58>
   17350:	ldr	r1, [r4, #184]	; 0xb8
   17354:	ldr	r0, [r4, #372]	; 0x174
   17358:	orrs	r2, r1, r0
   1735c:	beq	173e0 <sprintf@plt+0x5b58>
   17360:	cmp	r1, #0
   17364:	beq	17374 <sprintf@plt+0x5aec>
   17368:	mov	r0, r1
   1736c:	bl	116d8 <rb_close@plt>
   17370:	ldr	r0, [r4, #372]	; 0x174
   17374:	cmp	r0, #0
   17378:	beq	17380 <sprintf@plt+0x5af8>
   1737c:	bl	116d8 <rb_close@plt>
   17380:	movw	r6, #61820	; 0xf17c
   17384:	mov	r0, #0
   17388:	movt	r6, #2
   1738c:	str	r0, [r4, #184]	; 0xb8
   17390:	str	r0, [r4, #372]	; 0x174
   17394:	mov	r4, sp
   17398:	mov	r1, r4
   1739c:	ldr	r0, [r6]
   173a0:	bl	11678 <rb_dictionary_foreach_start@plt>
   173a4:	ldr	r0, [r6]
   173a8:	mov	r1, r4
   173ac:	bl	11588 <rb_dictionary_foreach_cur@plt>
   173b0:	cmp	r0, #0
   173b4:	beq	173e0 <sprintf@plt+0x5b58>
   173b8:	mov	r4, sp
   173bc:	bl	17cd0 <sprintf@plt+0x6448>
   173c0:	ldr	r0, [r6]
   173c4:	mov	r1, r4
   173c8:	bl	11630 <rb_dictionary_foreach_next@plt>
   173cc:	ldr	r0, [r6]
   173d0:	mov	r1, r4
   173d4:	bl	11588 <rb_dictionary_foreach_cur@plt>
   173d8:	cmp	r0, #0
   173dc:	bne	173bc <sprintf@plt+0x5b34>
   173e0:	movw	r0, #61800	; 0xf168
   173e4:	movt	r0, #2
   173e8:	strb	r5, [r0]
   173ec:	sub	sp, fp, #16
   173f0:	pop	{r4, r5, r6, sl, fp, pc}
   173f4:	push	{r4, r5, fp, lr}
   173f8:	add	fp, sp, #8
   173fc:	ldm	r2, {r4, r5}
   17400:	mov	r0, r5
   17404:	mov	r1, #0
   17408:	mov	r2, #10
   1740c:	bl	116e4 <strtol@plt>
   17410:	sub	r1, r0, #1
   17414:	movw	r2, #65535	; 0xffff
   17418:	cmp	r1, r2
   1741c:	bcs	17430 <sprintf@plt+0x5ba8>
   17420:	uxth	r1, r0
   17424:	mov	r0, r4
   17428:	pop	{r4, r5, fp, lr}
   1742c:	b	17e7c <sprintf@plt+0x65f4>
   17430:	movw	r1, #39028	; 0x9874
   17434:	mov	r0, #67	; 0x43
   17438:	mov	r2, r4
   1743c:	mov	r3, r5
   17440:	movt	r1, #1
   17444:	bl	12500 <sprintf@plt+0xc78>
   17448:	mov	r0, #3
   1744c:	bl	11870 <exit@plt>
   17450:	push	{r4, sl, fp, lr}
   17454:	add	fp, sp, #8
   17458:	movw	r4, #61424	; 0xeff0
   1745c:	movt	r4, #2
   17460:	ldr	r0, [r4, #184]	; 0xb8
   17464:	cmp	r0, #0
   17468:	beq	17470 <sprintf@plt+0x5be8>
   1746c:	bl	116d8 <rb_close@plt>
   17470:	ldr	r0, [r4, #372]	; 0x174
   17474:	cmp	r0, #0
   17478:	beq	17480 <sprintf@plt+0x5bf8>
   1747c:	bl	116d8 <rb_close@plt>
   17480:	movw	r0, #61424	; 0xeff0
   17484:	mov	r1, #0
   17488:	mov	r2, #376	; 0x178
   1748c:	movt	r0, #2
   17490:	pop	{r4, sl, fp, lr}
   17494:	b	115d0 <memset@plt>
   17498:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1749c:	add	fp, sp, #24
   174a0:	ldr	r0, [r2, #4]
   174a4:	mov	r8, r2
   174a8:	mov	r1, #0
   174ac:	mov	r2, #10
   174b0:	bl	116e4 <strtol@plt>
   174b4:	mov	r6, r0
   174b8:	mov	r0, #1
   174bc:	mov	r1, #40	; 0x28
   174c0:	bl	115a0 <calloc@plt>
   174c4:	cmp	r0, #0
   174c8:	beq	176cc <sprintf@plt+0x5e44>
   174cc:	mov	r5, r0
   174d0:	sub	r0, r6, #1
   174d4:	movw	r1, #65535	; 0xffff
   174d8:	cmp	r0, r1
   174dc:	bcs	176d0 <sprintf@plt+0x5e48>
   174e0:	strh	r6, [r5, #20]
   174e4:	movw	r1, #39241	; 0x9949
   174e8:	ldr	r7, [r8]
   174ec:	movt	r1, #1
   174f0:	mov	r0, r7
   174f4:	bl	11594 <strcasecmp@plt>
   174f8:	cmp	r0, #0
   174fc:	beq	1757c <sprintf@plt+0x5cf4>
   17500:	movw	r1, #39248	; 0x9950
   17504:	mov	r0, r7
   17508:	movt	r1, #1
   1750c:	bl	11594 <strcasecmp@plt>
   17510:	cmp	r0, #0
   17514:	beq	175a8 <sprintf@plt+0x5d20>
   17518:	movw	r1, #39255	; 0x9957
   1751c:	mov	r0, r7
   17520:	movt	r1, #1
   17524:	bl	11594 <strcasecmp@plt>
   17528:	cmp	r0, #0
   1752c:	beq	175d4 <sprintf@plt+0x5d4c>
   17530:	movw	r1, #39267	; 0x9963
   17534:	mov	r0, r7
   17538:	movt	r1, #1
   1753c:	bl	11594 <strcasecmp@plt>
   17540:	cmp	r0, #0
   17544:	bne	176ec <sprintf@plt+0x5e64>
   17548:	movw	r2, #39134	; 0x98de
   1754c:	mov	r0, #4
   17550:	uxth	r3, r6
   17554:	mov	r1, #16
   17558:	movt	r2, #1
   1755c:	str	r0, [r5, #16]
   17560:	mov	r0, r5
   17564:	bl	11810 <snprintf@plt>
   17568:	movw	r0, #34124	; 0x854c
   1756c:	movt	r0, #1
   17570:	str	r0, [r5, #24]
   17574:	mov	r0, #1
   17578:	b	17604 <sprintf@plt+0x5d7c>
   1757c:	movw	r2, #39096	; 0x98b8
   17580:	mov	r0, #1
   17584:	uxth	r3, r6
   17588:	mov	r1, #16
   1758c:	movt	r2, #1
   17590:	str	r0, [r5, #16]
   17594:	mov	r0, r5
   17598:	bl	11810 <snprintf@plt>
   1759c:	movw	r0, #33804	; 0x840c
   175a0:	movt	r0, #1
   175a4:	b	175fc <sprintf@plt+0x5d74>
   175a8:	movw	r2, #39107	; 0x98c3
   175ac:	mov	r0, #2
   175b0:	uxth	r3, r6
   175b4:	mov	r1, #16
   175b8:	movt	r2, #1
   175bc:	str	r0, [r5, #16]
   175c0:	mov	r0, r5
   175c4:	bl	11810 <snprintf@plt>
   175c8:	movw	r0, #33920	; 0x8480
   175cc:	movt	r0, #1
   175d0:	b	175fc <sprintf@plt+0x5d74>
   175d4:	movw	r2, #39118	; 0x98ce
   175d8:	mov	r0, #3
   175dc:	uxth	r3, r6
   175e0:	mov	r1, #16
   175e4:	movt	r2, #1
   175e8:	str	r0, [r5, #16]
   175ec:	mov	r0, r5
   175f0:	bl	11810 <snprintf@plt>
   175f4:	movw	r0, #34124	; 0x854c
   175f8:	movt	r0, #1
   175fc:	str	r0, [r5, #24]
   17600:	mov	r0, #0
   17604:	strb	r0, [r5, #22]
   17608:	movw	r0, #61800	; 0xf168
   1760c:	movt	r0, #2
   17610:	ldr	r7, [r0, #4]
   17614:	cmp	r7, #0
   17618:	beq	17680 <sprintf@plt+0x5df8>
   1761c:	ldrh	r3, [r5, #20]
   17620:	ldr	r2, [r5, #16]
   17624:	mov	r1, r7
   17628:	ldr	r6, [r1]
   1762c:	ldr	r4, [r6, #16]
   17630:	cmp	r4, r2
   17634:	beq	17654 <sprintf@plt+0x5dcc>
   17638:	ldr	r1, [r1, #8]
   1763c:	cmp	r1, #0
   17640:	beq	17680 <sprintf@plt+0x5df8>
   17644:	ldr	r6, [r1]
   17648:	ldr	r4, [r6, #16]
   1764c:	cmp	r4, r2
   17650:	bne	17638 <sprintf@plt+0x5db0>
   17654:	ldrh	r6, [r6, #20]
   17658:	cmp	r6, r3
   1765c:	bne	17638 <sprintf@plt+0x5db0>
   17660:	ldr	r2, [r8]
   17664:	movw	r1, #39197	; 0x991d
   17668:	mov	r0, #67	; 0x43
   1766c:	movt	r1, #1
   17670:	bl	12500 <sprintf@plt+0xc78>
   17674:	mov	r0, r5
   17678:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1767c:	b	1163c <free@plt>
   17680:	mov	r1, #0
   17684:	add	r2, r5, #28
   17688:	cmp	r7, #0
   1768c:	str	r5, [r5, #28]
   17690:	str	r1, [r5, #32]
   17694:	str	r7, [r5, #36]	; 0x24
   17698:	beq	176a8 <sprintf@plt+0x5e20>
   1769c:	add	r1, r7, #4
   176a0:	str	r2, [r1]
   176a4:	b	176b8 <sprintf@plt+0x5e30>
   176a8:	mov	r1, r0
   176ac:	ldr	r3, [r1, #8]!
   176b0:	cmp	r3, #0
   176b4:	streq	r2, [r1]
   176b8:	str	r2, [r0, #4]
   176bc:	ldr	r1, [r0, #12]
   176c0:	add	r1, r1, #1
   176c4:	str	r1, [r0, #12]
   176c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   176cc:	bl	11750 <rb_outofmemory@plt>
   176d0:	ldm	r8, {r2, r3}
   176d4:	movw	r1, #39059	; 0x9893
   176d8:	mov	r0, #67	; 0x43
   176dc:	movt	r1, #1
   176e0:	bl	12500 <sprintf@plt+0xc78>
   176e4:	mov	r0, #3
   176e8:	bl	11870 <exit@plt>
   176ec:	movw	r1, #39151	; 0x98ef
   176f0:	uxth	r3, r6
   176f4:	mov	r0, #67	; 0x43
   176f8:	mov	r2, r7
   176fc:	movt	r1, #1
   17700:	bl	12500 <sprintf@plt+0xc78>
   17704:	mov	r0, #3
   17708:	bl	11870 <exit@plt>
   1770c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17710:	add	fp, sp, #28
   17714:	sub	sp, sp, #12
   17718:	ldr	r4, [r2]
   1771c:	movw	r1, #39241	; 0x9949
   17720:	mov	r5, r2
   17724:	movt	r1, #1
   17728:	mov	r0, r4
   1772c:	bl	11594 <strcasecmp@plt>
   17730:	cmp	r0, #0
   17734:	beq	17788 <sprintf@plt+0x5f00>
   17738:	movw	r1, #39248	; 0x9950
   1773c:	mov	r0, r4
   17740:	movt	r1, #1
   17744:	bl	11594 <strcasecmp@plt>
   17748:	cmp	r0, #0
   1774c:	beq	17790 <sprintf@plt+0x5f08>
   17750:	movw	r1, #39255	; 0x9957
   17754:	mov	r0, r4
   17758:	movt	r1, #1
   1775c:	bl	11594 <strcasecmp@plt>
   17760:	cmp	r0, #0
   17764:	beq	17798 <sprintf@plt+0x5f10>
   17768:	movw	r1, #39267	; 0x9963
   1776c:	mov	r0, r4
   17770:	movt	r1, #1
   17774:	bl	11594 <strcasecmp@plt>
   17778:	clz	r0, r0
   1777c:	lsr	r0, r0, #5
   17780:	lsl	r6, r0, #2
   17784:	b	1779c <sprintf@plt+0x5f14>
   17788:	mov	r6, #1
   1778c:	b	1779c <sprintf@plt+0x5f14>
   17790:	mov	r6, #2
   17794:	b	1779c <sprintf@plt+0x5f14>
   17798:	mov	r6, #3
   1779c:	ldr	r0, [r5, #4]
   177a0:	mov	r1, #0
   177a4:	mov	r2, #10
   177a8:	bl	116e4 <strtol@plt>
   177ac:	mov	r3, r0
   177b0:	sub	r0, r0, #1
   177b4:	movw	r1, #65535	; 0xffff
   177b8:	cmp	r0, r1
   177bc:	bcs	179f4 <sprintf@plt+0x616c>
   177c0:	cmp	r6, #0
   177c4:	beq	17a10 <sprintf@plt+0x6188>
   177c8:	movw	r0, #61800	; 0xf168
   177cc:	movt	r0, #2
   177d0:	ldr	r0, [r0, #4]
   177d4:	cmp	r0, #0
   177d8:	beq	179d8 <sprintf@plt+0x6150>
   177dc:	uxth	r1, r3
   177e0:	ldr	r4, [r0]
   177e4:	ldr	r2, [r4, #16]
   177e8:	cmp	r2, r6
   177ec:	beq	1780c <sprintf@plt+0x5f84>
   177f0:	ldr	r0, [r0, #8]
   177f4:	cmp	r0, #0
   177f8:	beq	179d8 <sprintf@plt+0x6150>
   177fc:	ldr	r4, [r0]
   17800:	ldr	r2, [r4, #16]
   17804:	cmp	r2, r6
   17808:	bne	177f0 <sprintf@plt+0x5f68>
   1780c:	ldrh	r2, [r4, #20]
   17810:	cmp	r2, r1
   17814:	bne	177f0 <sprintf@plt+0x5f68>
   17818:	movw	sl, #61820	; 0xf17c
   1781c:	add	r5, sp, #4
   17820:	movt	sl, #2
   17824:	mov	r1, r5
   17828:	ldr	r0, [sl]
   1782c:	bl	11678 <rb_dictionary_foreach_start@plt>
   17830:	ldr	r0, [sl]
   17834:	mov	r1, r5
   17838:	bl	11588 <rb_dictionary_foreach_cur@plt>
   1783c:	cmp	r0, #0
   17840:	beq	17964 <sprintf@plt+0x60dc>
   17844:	movw	r9, #44804	; 0xaf04
   17848:	mov	r6, r0
   1784c:	add	r5, sp, #4
   17850:	movt	r9, #2
   17854:	b	1788c <sprintf@plt+0x6004>
   17858:	ldr	r0, [r6, #460]	; 0x1cc
   1785c:	subs	r0, r0, #1
   17860:	str	r0, [r6, #460]	; 0x1cc
   17864:	beq	17910 <sprintf@plt+0x6088>
   17868:	ldr	r0, [sl]
   1786c:	mov	r1, r5
   17870:	bl	11630 <rb_dictionary_foreach_next@plt>
   17874:	ldr	r0, [sl]
   17878:	mov	r1, r5
   1787c:	bl	11588 <rb_dictionary_foreach_cur@plt>
   17880:	mov	r6, r0
   17884:	cmp	r0, #0
   17888:	beq	17964 <sprintf@plt+0x60dc>
   1788c:	ldr	r0, [r9, #16]
   17890:	ldr	r1, [r6, #464]	; 0x1d0
   17894:	add	r0, r1, r0, lsl #4
   17898:	ldr	r8, [r0, #8]
   1789c:	cmp	r8, #0
   178a0:	beq	17868 <sprintf@plt+0x5fe0>
   178a4:	ldr	r0, [r6, #460]	; 0x1cc
   178a8:	add	r0, r0, #1
   178ac:	str	r0, [r6, #460]	; 0x1cc
   178b0:	ldr	r1, [r8]
   178b4:	cmp	r1, #0
   178b8:	beq	17858 <sprintf@plt+0x5fd0>
   178bc:	ldrh	r2, [r4, #20]
   178c0:	b	178d0 <sprintf@plt+0x6048>
   178c4:	ldr	r1, [r1, #8]
   178c8:	cmp	r1, #0
   178cc:	beq	17858 <sprintf@plt+0x5fd0>
   178d0:	ldr	r0, [r1]
   178d4:	ldr	r3, [r0, #8]
   178d8:	ldrh	r7, [r3, #20]
   178dc:	cmp	r7, r2
   178e0:	bne	178c4 <sprintf@plt+0x603c>
   178e4:	ldr	r7, [r4, #16]
   178e8:	ldr	r3, [r3, #16]
   178ec:	cmp	r3, r7
   178f0:	bne	178c4 <sprintf@plt+0x603c>
   178f4:	ldr	r1, [r0, #24]
   178f8:	ldr	r2, [r0, #20]
   178fc:	cmp	r1, #0
   17900:	beq	1791c <sprintf@plt+0x6094>
   17904:	str	r2, [r1, #4]
   17908:	ldr	r2, [r0, #20]
   1790c:	b	17920 <sprintf@plt+0x6098>
   17910:	mov	r0, r6
   17914:	bl	12e0c <sprintf@plt+0x1584>
   17918:	b	17868 <sprintf@plt+0x5fe0>
   1791c:	str	r2, [r8, #4]
   17920:	cmp	r2, #0
   17924:	mov	r3, r8
   17928:	addne	r3, r2, #8
   1792c:	str	r1, [r3]
   17930:	mov	r1, #0
   17934:	str	r1, [r0, #20]
   17938:	str	r1, [r0, #24]
   1793c:	ldr	r1, [r8, #8]
   17940:	sub	r1, r1, #1
   17944:	str	r1, [r8, #8]
   17948:	bl	1163c <free@plt>
   1794c:	ldr	r0, [r8, #8]
   17950:	cmp	r0, #0
   17954:	bne	17858 <sprintf@plt+0x5fd0>
   17958:	mov	r0, r6
   1795c:	bl	17cd0 <sprintf@plt+0x6448>
   17960:	b	17858 <sprintf@plt+0x5fd0>
   17964:	ldr	r0, [r4, #36]	; 0x24
   17968:	ldr	r1, [r4, #32]
   1796c:	cmp	r0, #0
   17970:	beq	17988 <sprintf@plt+0x6100>
   17974:	str	r1, [r0, #4]
   17978:	movw	r6, #61800	; 0xf168
   1797c:	ldr	r1, [r4, #32]
   17980:	movt	r6, #2
   17984:	b	17994 <sprintf@plt+0x610c>
   17988:	movw	r6, #61800	; 0xf168
   1798c:	movt	r6, #2
   17990:	str	r1, [r6, #8]
   17994:	cmp	r1, #0
   17998:	add	r2, r1, #8
   1799c:	mov	r5, #0
   179a0:	addeq	r2, r6, #4
   179a4:	str	r0, [r2]
   179a8:	str	r5, [r4, #32]
   179ac:	str	r5, [r4, #36]	; 0x24
   179b0:	ldr	r0, [r6, #12]
   179b4:	sub	r0, r0, #1
   179b8:	str	r0, [r6, #12]
   179bc:	mov	r0, r4
   179c0:	bl	1163c <free@plt>
   179c4:	ldr	r0, [r6, #12]
   179c8:	cmp	r0, #0
   179cc:	strbeq	r5, [r6]
   179d0:	sub	sp, fp, #28
   179d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179d8:	ldr	r2, [r5]
   179dc:	movw	r1, #39423	; 0x99ff
   179e0:	movt	r1, #1
   179e4:	mov	r0, #67	; 0x43
   179e8:	bl	12500 <sprintf@plt+0xc78>
   179ec:	mov	r0, #3
   179f0:	bl	11870 <exit@plt>
   179f4:	ldm	r5, {r2, r3}
   179f8:	movw	r1, #39321	; 0x9999
   179fc:	movt	r1, #1
   17a00:	mov	r0, #67	; 0x43
   17a04:	bl	12500 <sprintf@plt+0xc78>
   17a08:	mov	r0, #3
   17a0c:	bl	11870 <exit@plt>
   17a10:	ldr	r2, [r5]
   17a14:	movw	r1, #39368	; 0x99c8
   17a18:	movt	r1, #1
   17a1c:	mov	r0, #67	; 0x43
   17a20:	bl	12500 <sprintf@plt+0xc78>
   17a24:	mov	r0, #3
   17a28:	bl	11870 <exit@plt>
   17a2c:	push	{r4, r5, r6, r7, fp, lr}
   17a30:	add	fp, sp, #16
   17a34:	sub	sp, sp, #8
   17a38:	movw	r5, #61800	; 0xf168
   17a3c:	movt	r5, #2
   17a40:	ldr	r6, [r5, #4]
   17a44:	cmp	r6, #0
   17a48:	beq	17ac8 <sprintf@plt+0x6240>
   17a4c:	mov	r4, #0
   17a50:	ldr	r0, [r6]
   17a54:	ldr	r7, [r6, #8]
   17a58:	cmp	r0, #0
   17a5c:	bne	17aa8 <sprintf@plt+0x6220>
   17a60:	b	17aac <sprintf@plt+0x6224>
   17a64:	str	r1, [r5, #8]
   17a68:	cmp	r1, #0
   17a6c:	add	r2, r1, #8
   17a70:	addeq	r2, r5, #4
   17a74:	cmp	r7, #0
   17a78:	str	r0, [r2]
   17a7c:	str	r4, [r6, #4]
   17a80:	str	r4, [r6, #8]
   17a84:	mov	r6, r7
   17a88:	ldr	r0, [r5, #12]
   17a8c:	sub	r0, r0, #1
   17a90:	str	r0, [r5, #12]
   17a94:	beq	17ac8 <sprintf@plt+0x6240>
   17a98:	ldr	r0, [r6]
   17a9c:	ldr	r7, [r6, #8]
   17aa0:	cmp	r0, #0
   17aa4:	beq	17aac <sprintf@plt+0x6224>
   17aa8:	bl	1163c <free@plt>
   17aac:	ldr	r0, [r6, #8]
   17ab0:	ldr	r1, [r6, #4]
   17ab4:	cmp	r0, #0
   17ab8:	beq	17a64 <sprintf@plt+0x61dc>
   17abc:	str	r1, [r0, #4]
   17ac0:	ldr	r1, [r6, #4]
   17ac4:	b	17a68 <sprintf@plt+0x61e0>
   17ac8:	movw	r6, #61820	; 0xf17c
   17acc:	mov	r4, sp
   17ad0:	movt	r6, #2
   17ad4:	mov	r1, r4
   17ad8:	ldr	r0, [r6]
   17adc:	bl	11678 <rb_dictionary_foreach_start@plt>
   17ae0:	ldr	r0, [r6]
   17ae4:	mov	r1, r4
   17ae8:	bl	11588 <rb_dictionary_foreach_cur@plt>
   17aec:	cmp	r0, #0
   17af0:	beq	17b1c <sprintf@plt+0x6294>
   17af4:	mov	r4, sp
   17af8:	bl	17cd0 <sprintf@plt+0x6448>
   17afc:	ldr	r0, [r6]
   17b00:	mov	r1, r4
   17b04:	bl	11630 <rb_dictionary_foreach_next@plt>
   17b08:	ldr	r0, [r6]
   17b0c:	mov	r1, r4
   17b10:	bl	11588 <rb_dictionary_foreach_cur@plt>
   17b14:	cmp	r0, #0
   17b18:	bne	17af8 <sprintf@plt+0x6270>
   17b1c:	mov	r0, #0
   17b20:	strb	r0, [r5]
   17b24:	sub	sp, fp, #16
   17b28:	pop	{r4, r5, r6, r7, fp, pc}
   17b2c:	push	{r4, r5, fp, lr}
   17b30:	add	fp, sp, #8
   17b34:	sub	sp, sp, #8
   17b38:	movw	r5, #61820	; 0xf17c
   17b3c:	mov	r4, sp
   17b40:	movt	r5, #2
   17b44:	mov	r1, r4
   17b48:	ldr	r0, [r5]
   17b4c:	bl	11678 <rb_dictionary_foreach_start@plt>
   17b50:	ldr	r0, [r5]
   17b54:	mov	r1, r4
   17b58:	bl	11588 <rb_dictionary_foreach_cur@plt>
   17b5c:	cmp	r0, #0
   17b60:	beq	17b8c <sprintf@plt+0x6304>
   17b64:	mov	r4, sp
   17b68:	bl	17cd0 <sprintf@plt+0x6448>
   17b6c:	ldr	r0, [r5]
   17b70:	mov	r1, r4
   17b74:	bl	11630 <rb_dictionary_foreach_next@plt>
   17b78:	ldr	r0, [r5]
   17b7c:	mov	r1, r4
   17b80:	bl	11588 <rb_dictionary_foreach_cur@plt>
   17b84:	cmp	r0, #0
   17b88:	bne	17b68 <sprintf@plt+0x62e0>
   17b8c:	sub	sp, fp, #8
   17b90:	pop	{r4, r5, fp, pc}
   17b94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17b98:	add	fp, sp, #24
   17b9c:	mov	r9, r0
   17ba0:	movw	r0, #61800	; 0xf168
   17ba4:	movt	r0, #2
   17ba8:	ldrb	r1, [r0]
   17bac:	cmp	r1, #0
   17bb0:	ldrne	r0, [r0, #12]
   17bb4:	cmpne	r0, #0
   17bb8:	bne	17bd8 <sprintf@plt+0x6350>
   17bbc:	movw	r0, #44804	; 0xaf04
   17bc0:	movt	r0, #2
   17bc4:	ldr	r1, [r0, #16]
   17bc8:	mov	r0, r9
   17bcc:	bl	12ed0 <sprintf@plt+0x1648>
   17bd0:	mov	r0, #1
   17bd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17bd8:	ldr	r0, [r9, #460]	; 0x1cc
   17bdc:	mov	r1, #16
   17be0:	add	r0, r0, #1
   17be4:	str	r0, [r9, #460]	; 0x1cc
   17be8:	movw	r0, #44804	; 0xaf04
   17bec:	movt	r0, #2
   17bf0:	ldr	r5, [r0, #16]
   17bf4:	mov	r0, #1
   17bf8:	bl	115a0 <calloc@plt>
   17bfc:	cmp	r0, #0
   17c00:	beq	17ccc <sprintf@plt+0x6444>
   17c04:	ldr	r8, [r9, #464]	; 0x1d0
   17c08:	add	r1, r8, r5, lsl #4
   17c0c:	str	r0, [r1, #8]
   17c10:	movw	r0, #61824	; 0xf180
   17c14:	movt	r0, #2
   17c18:	ldr	r6, [r0]
   17c1c:	cmp	r6, #0
   17c20:	beq	17cbc <sprintf@plt+0x6434>
   17c24:	movw	r5, #37873	; 0x93f1
   17c28:	mov	r7, r6
   17c2c:	movt	r5, #1
   17c30:	ldr	r4, [r7]
   17c34:	mov	r1, r5
   17c38:	ldr	r0, [r4, #16]
   17c3c:	bl	11594 <strcasecmp@plt>
   17c40:	cmp	r0, #0
   17c44:	beq	17c58 <sprintf@plt+0x63d0>
   17c48:	ldr	r7, [r7, #8]
   17c4c:	cmp	r7, #0
   17c50:	bne	17c30 <sprintf@plt+0x63a8>
   17c54:	b	17c74 <sprintf@plt+0x63ec>
   17c58:	cmp	r4, #0
   17c5c:	beq	17c74 <sprintf@plt+0x63ec>
   17c60:	ldr	r0, [r4, #12]
   17c64:	add	r0, r8, r0, lsl #4
   17c68:	ldr	r0, [r0, #12]
   17c6c:	cmp	r0, #2
   17c70:	bne	17cc4 <sprintf@plt+0x643c>
   17c74:	ldr	r5, [r6]
   17c78:	movw	r1, #38353	; 0x95d1
   17c7c:	movt	r1, #1
   17c80:	ldr	r0, [r5, #16]
   17c84:	bl	11594 <strcasecmp@plt>
   17c88:	cmp	r0, #0
   17c8c:	beq	17ca0 <sprintf@plt+0x6418>
   17c90:	ldr	r6, [r6, #8]
   17c94:	cmp	r6, #0
   17c98:	bne	17c74 <sprintf@plt+0x63ec>
   17c9c:	b	17cbc <sprintf@plt+0x6434>
   17ca0:	cmp	r5, #0
   17ca4:	beq	17cbc <sprintf@plt+0x6434>
   17ca8:	ldr	r0, [r5, #12]
   17cac:	add	r0, r8, r0, lsl #4
   17cb0:	ldr	r0, [r0, #12]
   17cb4:	cmp	r0, #2
   17cb8:	bne	17cc4 <sprintf@plt+0x643c>
   17cbc:	mov	r0, r9
   17cc0:	bl	185e4 <sprintf@plt+0x6d5c>
   17cc4:	mov	r0, #1
   17cc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17ccc:	bl	11750 <rb_outofmemory@plt>
   17cd0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17cd4:	add	fp, sp, #24
   17cd8:	movw	r8, #44804	; 0xaf04
   17cdc:	mov	r4, r0
   17ce0:	movt	r8, #2
   17ce4:	ldr	r1, [r4, #464]	; 0x1d0
   17ce8:	ldr	r0, [r8, #16]
   17cec:	add	r0, r1, r0, lsl #4
   17cf0:	ldr	r5, [r0, #8]
   17cf4:	cmp	r5, #0
   17cf8:	beq	17d84 <sprintf@plt+0x64fc>
   17cfc:	ldr	r0, [r4]
   17d00:	movw	r1, #39551	; 0x9a7f
   17d04:	movt	r1, #1
   17d08:	bl	12494 <sprintf@plt+0xc0c>
   17d0c:	ldr	r7, [r5]
   17d10:	cmp	r7, #0
   17d14:	beq	17d40 <sprintf@plt+0x64b8>
   17d18:	ldr	r6, [r7]
   17d1c:	ldr	r7, [r7, #8]
   17d20:	ldr	r0, [r6, #4]
   17d24:	bl	116d8 <rb_close@plt>
   17d28:	cmp	r6, #0
   17d2c:	beq	17d10 <sprintf@plt+0x6488>
   17d30:	mov	r0, r6
   17d34:	bl	1163c <free@plt>
   17d38:	cmp	r7, #0
   17d3c:	bne	17d18 <sprintf@plt+0x6490>
   17d40:	mov	r0, r5
   17d44:	bl	1163c <free@plt>
   17d48:	ldr	r1, [r8, #16]
   17d4c:	ldr	r0, [r4, #464]	; 0x1d0
   17d50:	mov	r2, #0
   17d54:	add	r0, r0, r1, lsl #4
   17d58:	str	r2, [r0, #4]
   17d5c:	str	r2, [r0, #8]
   17d60:	mov	r0, r4
   17d64:	bl	12ed0 <sprintf@plt+0x1648>
   17d68:	ldr	r0, [r4, #460]	; 0x1cc
   17d6c:	subs	r0, r0, #1
   17d70:	str	r0, [r4, #460]	; 0x1cc
   17d74:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   17d78:	mov	r0, r4
   17d7c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   17d80:	b	12e0c <sprintf@plt+0x1584>
   17d84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17d88:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17d8c:	add	fp, sp, #24
   17d90:	mov	r8, r0
   17d94:	movw	r0, #44804	; 0xaf04
   17d98:	movt	r0, #2
   17d9c:	ldr	r9, [r8, #464]	; 0x1d0
   17da0:	ldr	r0, [r0, #16]
   17da4:	add	r0, r9, r0, lsl #4
   17da8:	ldr	r0, [r0, #8]
   17dac:	cmp	r0, #0
   17db0:	beq	17e78 <sprintf@plt+0x65f0>
   17db4:	ldrb	r0, [r0, #12]
   17db8:	cmp	r0, #0
   17dbc:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   17dc0:	movw	r0, #61824	; 0xf180
   17dc4:	movt	r0, #2
   17dc8:	ldr	r4, [r0]
   17dcc:	cmp	r4, #0
   17dd0:	beq	17e6c <sprintf@plt+0x65e4>
   17dd4:	movw	r5, #37873	; 0x93f1
   17dd8:	mov	r7, r4
   17ddc:	movt	r5, #1
   17de0:	ldr	r6, [r7]
   17de4:	mov	r1, r5
   17de8:	ldr	r0, [r6, #16]
   17dec:	bl	11594 <strcasecmp@plt>
   17df0:	cmp	r0, #0
   17df4:	beq	17e08 <sprintf@plt+0x6580>
   17df8:	ldr	r7, [r7, #8]
   17dfc:	cmp	r7, #0
   17e00:	bne	17de0 <sprintf@plt+0x6558>
   17e04:	b	17e24 <sprintf@plt+0x659c>
   17e08:	cmp	r6, #0
   17e0c:	beq	17e24 <sprintf@plt+0x659c>
   17e10:	ldr	r0, [r6, #12]
   17e14:	add	r0, r9, r0, lsl #4
   17e18:	ldr	r0, [r0, #12]
   17e1c:	cmp	r0, #2
   17e20:	bne	17e78 <sprintf@plt+0x65f0>
   17e24:	ldr	r5, [r4]
   17e28:	movw	r1, #38353	; 0x95d1
   17e2c:	movt	r1, #1
   17e30:	ldr	r0, [r5, #16]
   17e34:	bl	11594 <strcasecmp@plt>
   17e38:	cmp	r0, #0
   17e3c:	beq	17e50 <sprintf@plt+0x65c8>
   17e40:	ldr	r4, [r4, #8]
   17e44:	cmp	r4, #0
   17e48:	bne	17e24 <sprintf@plt+0x659c>
   17e4c:	b	17e6c <sprintf@plt+0x65e4>
   17e50:	cmp	r5, #0
   17e54:	beq	17e6c <sprintf@plt+0x65e4>
   17e58:	ldr	r0, [r5, #12]
   17e5c:	add	r0, r9, r0, lsl #4
   17e60:	ldr	r0, [r0, #12]
   17e64:	cmp	r0, #2
   17e68:	bne	17e78 <sprintf@plt+0x65f0>
   17e6c:	mov	r0, r8
   17e70:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17e74:	b	185e4 <sprintf@plt+0x6d5c>
   17e78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17e7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17e80:	add	fp, sp, #24
   17e84:	sub	sp, sp, #144	; 0x90
   17e88:	mov	r5, r0
   17e8c:	mov	r0, #1
   17e90:	mov	r8, r1
   17e94:	add	r1, sp, #16
   17e98:	str	r0, [sp, #4]
   17e9c:	mov	r0, r5
   17ea0:	bl	11684 <rb_inet_pton_sock@plt>
   17ea4:	cmp	r0, #0
   17ea8:	beq	180fc <sprintf@plt+0x6874>
   17eac:	rev16	r1, r8
   17eb0:	strh	r1, [sp, #18]
   17eb4:	ldrh	r0, [sp, #16]
   17eb8:	cmp	r0, #10
   17ebc:	bne	17f2c <sprintf@plt+0x66a4>
   17ec0:	movw	r2, #61424	; 0xeff0
   17ec4:	ldr	r7, [sp, #24]
   17ec8:	movt	r2, #2
   17ecc:	ldr	r3, [r2, #252]	; 0xfc
   17ed0:	add	r6, r2, #188	; 0xbc
   17ed4:	cmp	r7, r3
   17ed8:	bne	17f70 <sprintf@plt+0x66e8>
   17edc:	ldr	r3, [r2, #256]	; 0x100
   17ee0:	ldr	r7, [sp, #28]
   17ee4:	cmp	r7, r3
   17ee8:	bne	17f70 <sprintf@plt+0x66e8>
   17eec:	ldr	r3, [r2, #260]	; 0x104
   17ef0:	ldr	r7, [sp, #32]
   17ef4:	cmp	r7, r3
   17ef8:	bne	17f70 <sprintf@plt+0x66e8>
   17efc:	ldr	r3, [r2, #264]	; 0x108
   17f00:	ldr	r7, [sp, #36]	; 0x24
   17f04:	cmp	r7, r3
   17f08:	bne	17f70 <sprintf@plt+0x66e8>
   17f0c:	ldrh	r3, [r2, #246]	; 0xf6
   17f10:	uxth	r1, r1
   17f14:	cmp	r1, r3
   17f18:	bne	17f70 <sprintf@plt+0x66e8>
   17f1c:	ldr	r1, [r2, #372]	; 0x174
   17f20:	cmp	r1, #0
   17f24:	bne	17f68 <sprintf@plt+0x66e0>
   17f28:	b	17f70 <sprintf@plt+0x66e8>
   17f2c:	movw	r6, #61424	; 0xeff0
   17f30:	ldr	r3, [sp, #20]
   17f34:	movt	r6, #2
   17f38:	ldr	r2, [r6, #60]	; 0x3c
   17f3c:	cmp	r3, r2
   17f40:	bne	17f70 <sprintf@plt+0x66e8>
   17f44:	movw	r6, #61424	; 0xeff0
   17f48:	uxth	r1, r1
   17f4c:	movt	r6, #2
   17f50:	ldrh	r2, [r6, #58]	; 0x3a
   17f54:	cmp	r1, r2
   17f58:	bne	17f70 <sprintf@plt+0x66e8>
   17f5c:	ldr	r1, [r6, #184]	; 0xb8
   17f60:	cmp	r1, #0
   17f64:	beq	17f70 <sprintf@plt+0x66e8>
   17f68:	sub	sp, fp, #24
   17f6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17f70:	movw	r3, #38811	; 0x979b
   17f74:	mov	r1, #1
   17f78:	mov	r2, #0
   17f7c:	movt	r3, #1
   17f80:	bl	11558 <rb_socket@plt>
   17f84:	cmp	r0, #0
   17f88:	beq	1811c <sprintf@plt+0x6894>
   17f8c:	mov	r7, r0
   17f90:	bl	11534 <rb_get_fd@plt>
   17f94:	mov	r1, #4
   17f98:	add	r3, sp, #4
   17f9c:	mov	r2, #2
   17fa0:	str	r1, [sp]
   17fa4:	mov	r1, #1
   17fa8:	bl	11840 <setsockopt@plt>
   17fac:	cmp	r0, #0
   17fb0:	bne	18144 <sprintf@plt+0x68bc>
   17fb4:	mov	r0, r7
   17fb8:	bl	11534 <rb_get_fd@plt>
   17fbc:	ldrh	r1, [sp, #16]
   17fc0:	mov	r2, #28
   17fc4:	cmp	r1, #2
   17fc8:	add	r1, sp, #16
   17fcc:	movweq	r2, #16
   17fd0:	bl	11714 <bind@plt>
   17fd4:	cmp	r0, #0
   17fd8:	beq	17ff8 <sprintf@plt+0x6770>
   17fdc:	bl	1187c <__errno_location@plt>
   17fe0:	ldr	r0, [r0]
   17fe4:	bl	114b0 <strerror@plt>
   17fe8:	movw	r1, #38899	; 0x97f3
   17fec:	mov	r2, r0
   17ff0:	movt	r1, #1
   17ff4:	b	18028 <sprintf@plt+0x67a0>
   17ff8:	mov	r0, r7
   17ffc:	mov	r1, #128	; 0x80
   18000:	mov	r2, #0
   18004:	bl	1181c <rb_listen@plt>
   18008:	cmp	r0, #0
   1800c:	beq	18040 <sprintf@plt+0x67b8>
   18010:	bl	1187c <__errno_location@plt>
   18014:	ldr	r0, [r0]
   18018:	bl	114b0 <strerror@plt>
   1801c:	movw	r1, #38930	; 0x9812
   18020:	mov	r2, r0
   18024:	movt	r1, #1
   18028:	mov	r0, #87	; 0x57
   1802c:	bl	12500 <sprintf@plt+0xc78>
   18030:	mov	r0, r7
   18034:	bl	116d8 <rb_close@plt>
   18038:	sub	sp, fp, #24
   1803c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18040:	ldr	r0, [r6, #184]	; 0xb8
   18044:	cmp	r0, #0
   18048:	beq	18050 <sprintf@plt+0x67c8>
   1804c:	bl	116d8 <rb_close@plt>
   18050:	movw	r4, #61820	; 0xf17c
   18054:	str	r7, [r6, #184]	; 0xb8
   18058:	add	r7, sp, #8
   1805c:	movt	r4, #2
   18060:	mov	r1, r7
   18064:	ldr	r0, [r4]
   18068:	bl	11678 <rb_dictionary_foreach_start@plt>
   1806c:	ldr	r0, [r4]
   18070:	mov	r1, r7
   18074:	bl	11588 <rb_dictionary_foreach_cur@plt>
   18078:	cmp	r0, #0
   1807c:	beq	180a8 <sprintf@plt+0x6820>
   18080:	add	r7, sp, #8
   18084:	bl	17cd0 <sprintf@plt+0x6448>
   18088:	ldr	r0, [r4]
   1808c:	mov	r1, r7
   18090:	bl	11630 <rb_dictionary_foreach_next@plt>
   18094:	ldr	r0, [r4]
   18098:	mov	r1, r7
   1809c:	bl	11588 <rb_dictionary_foreach_cur@plt>
   180a0:	cmp	r0, #0
   180a4:	bne	18084 <sprintf@plt+0x67fc>
   180a8:	mov	r0, r6
   180ac:	mov	r1, r5
   180b0:	mov	r2, #53	; 0x35
   180b4:	bl	11618 <rb_strlcpy@plt>
   180b8:	add	r0, r6, #56	; 0x38
   180bc:	add	r1, sp, #16
   180c0:	mov	r2, #128	; 0x80
   180c4:	strh	r8, [r6, #54]	; 0x36
   180c8:	bl	116b4 <memcpy@plt>
   180cc:	movw	r0, #61800	; 0xf168
   180d0:	mov	r1, #1
   180d4:	movw	r2, #33132	; 0x816c
   180d8:	mov	r3, r6
   180dc:	movt	r0, #2
   180e0:	movt	r2, #1
   180e4:	strb	r1, [r0]
   180e8:	ldr	r0, [r6, #184]	; 0xb8
   180ec:	mov	r1, #0
   180f0:	bl	117d4 <rb_accept_tcp@plt>
   180f4:	sub	sp, fp, #24
   180f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   180fc:	movw	r1, #38779	; 0x977b
   18100:	mov	r0, #67	; 0x43
   18104:	mov	r2, r5
   18108:	mov	r3, r8
   1810c:	movt	r1, #1
   18110:	bl	12500 <sprintf@plt+0xc78>
   18114:	mov	r0, #3
   18118:	bl	11870 <exit@plt>
   1811c:	bl	1187c <__errno_location@plt>
   18120:	ldr	r0, [r0]
   18124:	bl	114b0 <strerror@plt>
   18128:	movw	r1, #38831	; 0x97af
   1812c:	mov	r2, r0
   18130:	movt	r1, #1
   18134:	mov	r0, #67	; 0x43
   18138:	bl	12500 <sprintf@plt+0xc78>
   1813c:	mov	r0, #3
   18140:	bl	11870 <exit@plt>
   18144:	bl	1187c <__errno_location@plt>
   18148:	ldr	r0, [r0]
   1814c:	bl	114b0 <strerror@plt>
   18150:	movw	r1, #38861	; 0x97cd
   18154:	mov	r2, r0
   18158:	movt	r1, #1
   1815c:	mov	r0, #67	; 0x43
   18160:	bl	12500 <sprintf@plt+0xc78>
   18164:	mov	r0, #3
   18168:	bl	11870 <exit@plt>
   1816c:	push	{r4, r5, r6, sl, fp, lr}
   18170:	add	fp, sp, #16
   18174:	sub	sp, sp, #144	; 0x90
   18178:	mov	r4, r0
   1817c:	mov	r0, #128	; 0x80
   18180:	cmp	r1, #0
   18184:	str	r0, [sp, #12]
   18188:	bne	18290 <sprintf@plt+0x6a08>
   1818c:	ldr	r0, [fp, #8]
   18190:	cmp	r0, #0
   18194:	beq	18290 <sprintf@plt+0x6a08>
   18198:	mov	r0, r4
   1819c:	bl	11534 <rb_get_fd@plt>
   181a0:	add	r1, sp, #16
   181a4:	add	r2, sp, #12
   181a8:	bl	114e0 <getsockname@plt>
   181ac:	cmp	r0, #0
   181b0:	bne	18290 <sprintf@plt+0x6a08>
   181b4:	movw	r6, #61820	; 0xf17c
   181b8:	add	r5, sp, #4
   181bc:	movt	r6, #2
   181c0:	mov	r1, r5
   181c4:	ldr	r0, [r6]
   181c8:	bl	11678 <rb_dictionary_foreach_start@plt>
   181cc:	ldr	r0, [r6]
   181d0:	mov	r1, r5
   181d4:	bl	11588 <rb_dictionary_foreach_cur@plt>
   181d8:	cmp	r0, #0
   181dc:	beq	18290 <sprintf@plt+0x6a08>
   181e0:	mov	r3, r0
   181e4:	add	r5, sp, #4
   181e8:	ldrh	r0, [r3, #248]	; 0xf8
   181ec:	ldrh	r1, [sp, #16]
   181f0:	cmp	r0, r1
   181f4:	bne	18204 <sprintf@plt+0x697c>
   181f8:	b	18238 <sprintf@plt+0x69b0>
   181fc:	cmp	r1, r0
   18200:	beq	182a0 <sprintf@plt+0x6a18>
   18204:	ldr	r0, [r6]
   18208:	mov	r1, r5
   1820c:	bl	11630 <rb_dictionary_foreach_next@plt>
   18210:	ldr	r0, [r6]
   18214:	mov	r1, r5
   18218:	bl	11588 <rb_dictionary_foreach_cur@plt>
   1821c:	mov	r3, r0
   18220:	cmp	r0, #0
   18224:	beq	18290 <sprintf@plt+0x6a08>
   18228:	ldrh	r0, [r3, #248]	; 0xf8
   1822c:	ldrh	r1, [sp, #16]
   18230:	cmp	r0, r1
   18234:	bne	18204 <sprintf@plt+0x697c>
   18238:	cmp	r0, #10
   1823c:	beq	18254 <sprintf@plt+0x69cc>
   18240:	cmp	r0, #2
   18244:	bne	182bc <sprintf@plt+0x6a34>
   18248:	ldr	r0, [r3, #252]	; 0xfc
   1824c:	ldr	r1, [sp, #20]
   18250:	b	181fc <sprintf@plt+0x6974>
   18254:	ldr	r0, [r3, #256]	; 0x100
   18258:	ldr	r1, [sp, #24]
   1825c:	cmp	r1, r0
   18260:	bne	18204 <sprintf@plt+0x697c>
   18264:	ldr	r0, [r3, #260]	; 0x104
   18268:	ldr	r1, [sp, #28]
   1826c:	cmp	r1, r0
   18270:	bne	18204 <sprintf@plt+0x697c>
   18274:	ldr	r0, [r3, #264]	; 0x108
   18278:	ldr	r1, [sp, #32]
   1827c:	cmp	r1, r0
   18280:	bne	18204 <sprintf@plt+0x697c>
   18284:	ldr	r0, [r3, #268]	; 0x10c
   18288:	ldr	r1, [sp, #36]	; 0x24
   1828c:	b	181fc <sprintf@plt+0x6974>
   18290:	mov	r0, r4
   18294:	bl	116d8 <rb_close@plt>
   18298:	sub	sp, fp, #16
   1829c:	pop	{r4, r5, r6, sl, fp, pc}
   182a0:	movw	r2, #33492	; 0x82d4
   182a4:	mov	r0, r4
   182a8:	mov	r1, #1
   182ac:	movt	r2, #1
   182b0:	bl	11528 <rb_setselect@plt>
   182b4:	sub	sp, fp, #16
   182b8:	pop	{r4, r5, r6, sl, fp, pc}
   182bc:	movw	r1, #38963	; 0x9833
   182c0:	mov	r0, #67	; 0x43
   182c4:	movt	r1, #1
   182c8:	bl	12500 <sprintf@plt+0xc78>
   182cc:	mov	r0, #3
   182d0:	bl	11870 <exit@plt>
   182d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   182d8:	add	fp, sp, #28
   182dc:	sub	sp, sp, #132	; 0x84
   182e0:	movw	r9, #44804	; 0xaf04
   182e4:	mov	sl, r1
   182e8:	mov	r4, r0
   182ec:	ldr	r1, [r1, #464]	; 0x1d0
   182f0:	mov	r2, #128	; 0x80
   182f4:	movt	r9, #2
   182f8:	ldr	r0, [r9, #16]
   182fc:	add	r0, r1, r0, lsl #4
   18300:	add	r1, sp, #4
   18304:	ldr	r8, [r0, #8]
   18308:	mov	r0, r4
   1830c:	bl	11654 <rb_read@plt>
   18310:	cmn	r0, #1
   18314:	ble	1836c <sprintf@plt+0x6ae4>
   18318:	cmp	r0, #0
   1831c:	beq	183fc <sprintf@plt+0x6b74>
   18320:	movw	r0, #61800	; 0xf168
   18324:	movt	r0, #2
   18328:	ldr	r5, [r0, #4]
   1832c:	cmp	r5, #0
   18330:	beq	183fc <sprintf@plt+0x6b74>
   18334:	add	r7, sp, #4
   18338:	ldr	r6, [r5]
   1833c:	mov	r0, r6
   18340:	bl	11690 <strlen@plt>
   18344:	mov	r2, r0
   18348:	mov	r0, r6
   1834c:	mov	r1, r7
   18350:	bl	11828 <strncmp@plt>
   18354:	cmp	r0, #0
   18358:	beq	183a0 <sprintf@plt+0x6b18>
   1835c:	ldr	r5, [r5, #8]
   18360:	cmp	r5, #0
   18364:	bne	18338 <sprintf@plt+0x6ab0>
   18368:	b	183fc <sprintf@plt+0x6b74>
   1836c:	bl	1187c <__errno_location@plt>
   18370:	ldr	r0, [r0]
   18374:	bl	114ec <rb_ignore_errno@plt>
   18378:	cmp	r0, #0
   1837c:	beq	183fc <sprintf@plt+0x6b74>
   18380:	movw	r2, #33492	; 0x82d4
   18384:	mov	r0, r4
   18388:	mov	r1, #1
   1838c:	mov	r3, sl
   18390:	movt	r2, #1
   18394:	bl	11528 <rb_setselect@plt>
   18398:	sub	sp, fp, #28
   1839c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183a0:	ldr	r5, [r8]
   183a4:	cmp	r5, #0
   183a8:	beq	183dc <sprintf@plt+0x6b54>
   183ac:	ldr	r7, [r5]
   183b0:	ldr	r5, [r5, #8]
   183b4:	ldr	r0, [r7, #4]
   183b8:	bl	116d8 <rb_close@plt>
   183bc:	cmp	r7, #0
   183c0:	beq	183cc <sprintf@plt+0x6b44>
   183c4:	mov	r0, r7
   183c8:	bl	1163c <free@plt>
   183cc:	cmp	r5, #0
   183d0:	bne	183ac <sprintf@plt+0x6b24>
   183d4:	cmp	r8, #0
   183d8:	beq	183e4 <sprintf@plt+0x6b5c>
   183dc:	mov	r0, r8
   183e0:	bl	1163c <free@plt>
   183e4:	ldr	r1, [r9, #16]
   183e8:	movw	r3, #39008	; 0x9860
   183ec:	add	r2, sp, #4
   183f0:	mov	r0, sl
   183f4:	movt	r3, #1
   183f8:	bl	12b34 <sprintf@plt+0x12ac>
   183fc:	mov	r0, r4
   18400:	bl	116d8 <rb_close@plt>
   18404:	sub	sp, fp, #28
   18408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1840c:	push	{r4, r5, fp, lr}
   18410:	add	fp, sp, #8
   18414:	sub	sp, sp, #16
   18418:	mov	r4, r0
   1841c:	mov	r0, #260	; 0x104
   18420:	mov	r2, #9
   18424:	strh	r0, [sp, #6]
   18428:	ldr	r0, [r4, #12]
   1842c:	ldrh	r1, [r0, #58]	; 0x3a
   18430:	strh	r1, [sp, #8]
   18434:	mov	r1, #0
   18438:	ldr	r0, [r0, #60]	; 0x3c
   1843c:	strb	r1, [sp, #14]
   18440:	add	r1, sp, #6
   18444:	str	r0, [sp, #10]
   18448:	ldr	r0, [r4, #4]
   1844c:	bl	115f4 <rb_write@plt>
   18450:	cmp	r0, #0
   18454:	bmi	18478 <sprintf@plt+0x6bf0>
   18458:	ldr	r5, [r4, #4]
   1845c:	ldr	r4, [r4, #8]
   18460:	mov	r0, r4
   18464:	bl	11690 <strlen@plt>
   18468:	add	r2, r0, #1
   1846c:	mov	r0, r5
   18470:	mov	r1, r4
   18474:	bl	115f4 <rb_write@plt>
   18478:	sub	sp, fp, #8
   1847c:	pop	{r4, r5, fp, pc}
   18480:	push	{r4, r5, fp, lr}
   18484:	add	fp, sp, #8
   18488:	sub	sp, sp, #32
   1848c:	mov	r1, #1
   18490:	mov	r4, r0
   18494:	ldr	r0, [r0]
   18498:	strh	r1, [sp, #4]
   1849c:	movw	r1, #261	; 0x105
   184a0:	movt	r1, #1280	; 0x500
   184a4:	str	r1, [sp]
   184a8:	ldrh	r0, [r0, #248]	; 0xf8
   184ac:	cmp	r0, #10
   184b0:	beq	184dc <sprintf@plt+0x6c54>
   184b4:	cmp	r0, #2
   184b8:	bne	18544 <sprintf@plt+0x6cbc>
   184bc:	mov	r0, #1
   184c0:	mvn	r2, #12
   184c4:	mov	r3, #11
   184c8:	strb	r0, [sp, #6]
   184cc:	ldr	r0, [r4, #12]
   184d0:	ldr	r1, [r0, #60]	; 0x3c
   184d4:	str	r1, [sp, #7]
   184d8:	b	18504 <sprintf@plt+0x6c7c>
   184dc:	mov	r0, #4
   184e0:	mvn	r2, #24
   184e4:	mov	r3, #23
   184e8:	strb	r0, [sp, #6]
   184ec:	ldr	r0, [r4, #12]
   184f0:	add	r1, r0, #64	; 0x40
   184f4:	vld1.8	{d16-d17}, [r1]
   184f8:	mov	r1, sp
   184fc:	orr	r1, r1, #7
   18500:	vst1.8	{d16-d17}, [r1]
   18504:	ldrh	r0, [r0, #58]	; 0x3a
   18508:	mov	r1, sp
   1850c:	add	r3, r1, r3
   18510:	strh	r0, [r3]
   18514:	ldr	r0, [r4, #4]
   18518:	bl	115f4 <rb_write@plt>
   1851c:	cmp	r0, #1
   18520:	blt	18544 <sprintf@plt+0x6cbc>
   18524:	ldr	r5, [r4, #4]
   18528:	ldr	r4, [r4, #8]
   1852c:	mov	r0, r4
   18530:	bl	11690 <strlen@plt>
   18534:	add	r2, r0, #1
   18538:	mov	r0, r5
   1853c:	mov	r1, r4
   18540:	bl	115f4 <rb_write@plt>
   18544:	sub	sp, fp, #8
   18548:	pop	{r4, r5, fp, pc}
   1854c:	push	{r4, r5, r6, sl, fp, lr}
   18550:	add	fp, sp, #16
   18554:	sub	sp, sp, #136	; 0x88
   18558:	ldr	r3, [r0, #12]
   1855c:	mov	r4, r0
   18560:	movw	r2, #39280	; 0x9970
   18564:	add	r5, sp, #8
   18568:	mov	r1, #128	; 0x80
   1856c:	movt	r2, #1
   18570:	ldrh	r0, [r3, #54]	; 0x36
   18574:	str	r0, [sp]
   18578:	mov	r0, r5
   1857c:	bl	11810 <snprintf@plt>
   18580:	ldr	r6, [r4, #4]
   18584:	mov	r0, r5
   18588:	bl	11690 <strlen@plt>
   1858c:	mov	r2, r0
   18590:	mov	r0, r6
   18594:	mov	r1, r5
   18598:	bl	115f4 <rb_write@plt>
   1859c:	cmp	r0, #1
   185a0:	blt	185dc <sprintf@plt+0x6d54>
   185a4:	ldmib	r4, {r5, r6}
   185a8:	mov	r0, r6
   185ac:	bl	11690 <strlen@plt>
   185b0:	add	r2, r0, #1
   185b4:	mov	r0, r5
   185b8:	mov	r1, r6
   185bc:	bl	115f4 <rb_write@plt>
   185c0:	cmp	r0, #1
   185c4:	blt	185dc <sprintf@plt+0x6d54>
   185c8:	ldr	r0, [r4, #4]
   185cc:	movw	r1, #39305	; 0x9989
   185d0:	mov	r2, #2
   185d4:	movt	r1, #1
   185d8:	bl	115f4 <rb_write@plt>
   185dc:	sub	sp, fp, #16
   185e0:	pop	{r4, r5, r6, sl, fp, pc}
   185e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185e8:	add	fp, sp, #28
   185ec:	sub	sp, sp, #284	; 0x11c
   185f0:	mov	sl, r0
   185f4:	movw	r0, #44804	; 0xaf04
   185f8:	movt	r0, #2
   185fc:	ldr	r4, [r0]
   18600:	ldr	r5, [r0, #16]
   18604:	ldr	r0, [sl, #464]	; 0x1d0
   18608:	add	r0, r0, r5, lsl #4
   1860c:	ldr	r6, [r0, #8]
   18610:	bl	1169c <rb_current_time@plt>
   18614:	add	r1, r0, r4
   18618:	ldr	r0, [sl, #464]	; 0x1d0
   1861c:	add	r2, r0, r5, lsl #4
   18620:	str	r1, [r2, #4]
   18624:	mov	r1, #1
   18628:	strb	r1, [r6, #12]
   1862c:	movw	r1, #61800	; 0xf168
   18630:	movt	r1, #2
   18634:	ldr	r7, [r1, #4]
   18638:	cmp	r7, #0
   1863c:	beq	188a4 <sprintf@plt+0x701c>
   18640:	movw	r1, #44804	; 0xaf04
   18644:	ldr	r9, [r7]
   18648:	movt	r1, #2
   1864c:	ldr	r1, [r1, #16]
   18650:	add	r0, r0, r1, lsl #4
   18654:	mov	r1, #28
   18658:	ldr	r4, [r0, #8]
   1865c:	mov	r0, #1
   18660:	bl	115a0 <calloc@plt>
   18664:	cmp	r0, #0
   18668:	beq	188a0 <sprintf@plt+0x7018>
   1866c:	mov	r8, r0
   18670:	add	r0, sl, #248	; 0xf8
   18674:	str	r0, [sp, #16]
   18678:	movw	r0, #61424	; 0xeff0
   1867c:	movt	r0, #2
   18680:	add	r0, r0, #188	; 0xbc
   18684:	str	r0, [sp, #12]
   18688:	mov	r0, #1
   1868c:	movw	r5, #61424	; 0xeff0
   18690:	str	r0, [sp, #20]
   18694:	ldr	r0, [sp, #16]
   18698:	movt	r5, #2
   1869c:	ldrh	r6, [r0]
   186a0:	cmp	r6, #10
   186a4:	bne	186b8 <sprintf@plt+0x6e30>
   186a8:	ldr	r0, [r9, #16]
   186ac:	ldr	r5, [sp, #12]
   186b0:	cmp	r0, #1
   186b4:	beq	18778 <sprintf@plt+0x6ef0>
   186b8:	ldr	r0, [r5, #184]	; 0xb8
   186bc:	cmp	r0, #0
   186c0:	beq	18778 <sprintf@plt+0x6ef0>
   186c4:	ldr	r1, [sp, #16]
   186c8:	add	r0, sp, #152	; 0x98
   186cc:	mov	r2, #128	; 0x80
   186d0:	bl	116b4 <memcpy@plt>
   186d4:	add	r1, r5, #56	; 0x38
   186d8:	add	r0, sp, #24
   186dc:	mov	r2, #128	; 0x80
   186e0:	bl	116b4 <memcpy@plt>
   186e4:	mov	r0, r6
   186e8:	mov	r1, #1
   186ec:	mov	r2, #0
   186f0:	mov	r3, r9
   186f4:	str	r9, [r8, #8]
   186f8:	str	r5, [r8, #12]
   186fc:	mov	r5, sl
   18700:	str	sl, [r8]
   18704:	bl	11558 <rb_socket@plt>
   18708:	cmp	r0, #0
   1870c:	str	r0, [r8, #4]
   18710:	beq	18790 <sprintf@plt+0x6f08>
   18714:	mov	sl, r0
   18718:	bl	11534 <rb_get_fd@plt>
   1871c:	mov	r1, #4
   18720:	mov	r2, #1
   18724:	add	r3, sp, #20
   18728:	str	r1, [sp]
   1872c:	mov	r1, #6
   18730:	bl	11840 <setsockopt@plt>
   18734:	mov	r1, #0
   18738:	cmp	r4, #0
   1873c:	strh	r1, [sp, #26]
   18740:	ldrh	r0, [r9, #20]
   18744:	rev16	r0, r0
   18748:	strh	r0, [sp, #154]	; 0x9a
   1874c:	beq	188bc <sprintf@plt+0x7034>
   18750:	str	r1, [r8, #20]
   18754:	str	r8, [r8, #16]
   18758:	add	r0, r8, #16
   1875c:	ldr	r1, [r4]
   18760:	cmp	r1, #0
   18764:	str	r1, [r8, #24]
   18768:	beq	187d0 <sprintf@plt+0x6f48>
   1876c:	add	r1, r1, #4
   18770:	str	r0, [r1]
   18774:	b	187e0 <sprintf@plt+0x6f58>
   18778:	mov	r0, r8
   1877c:	bl	1163c <free@plt>
   18780:	ldr	r7, [r7, #8]
   18784:	cmp	r7, #0
   18788:	bne	1886c <sprintf@plt+0x6fe4>
   1878c:	b	188a4 <sprintf@plt+0x701c>
   18790:	bl	1187c <__errno_location@plt>
   18794:	ldr	r0, [r0]
   18798:	bl	114b0 <strerror@plt>
   1879c:	movw	r1, #39503	; 0x9a4f
   187a0:	mov	r3, r0
   187a4:	mov	r0, #87	; 0x57
   187a8:	mov	r2, r9
   187ac:	movt	r1, #1
   187b0:	bl	12500 <sprintf@plt+0xc78>
   187b4:	mov	r0, r8
   187b8:	bl	1163c <free@plt>
   187bc:	mov	sl, r5
   187c0:	ldr	r7, [r7, #8]
   187c4:	cmp	r7, #0
   187c8:	bne	1886c <sprintf@plt+0x6fe4>
   187cc:	b	188a4 <sprintf@plt+0x701c>
   187d0:	mov	r1, r4
   187d4:	ldr	r2, [r1, #4]!
   187d8:	cmp	r2, #0
   187dc:	streq	r0, [r1]
   187e0:	str	r0, [r4]
   187e4:	ldr	r0, [r4, #8]
   187e8:	add	r0, r0, #1
   187ec:	str	r0, [r4, #8]
   187f0:	movw	r0, #44804	; 0xaf04
   187f4:	movt	r0, #2
   187f8:	ldrb	r1, [r9, #22]
   187fc:	ldr	r0, [r0]
   18800:	cmp	r1, #0
   18804:	beq	1883c <sprintf@plt+0x6fb4>
   18808:	movw	r3, #35036	; 0x88dc
   1880c:	str	r0, [sp, #4]
   18810:	mov	r0, sl
   18814:	add	r1, sp, #152	; 0x98
   18818:	add	r2, sp, #24
   1881c:	str	r8, [sp]
   18820:	movt	r3, #1
   18824:	bl	114f8 <rb_connect_tcp_ssl@plt>
   18828:	mov	sl, r5
   1882c:	ldr	r7, [r7, #8]
   18830:	cmp	r7, #0
   18834:	bne	1886c <sprintf@plt+0x6fe4>
   18838:	b	188a4 <sprintf@plt+0x701c>
   1883c:	movw	r3, #35036	; 0x88dc
   18840:	str	r0, [sp, #4]
   18844:	mov	r0, sl
   18848:	add	r1, sp, #152	; 0x98
   1884c:	add	r2, sp, #24
   18850:	str	r8, [sp]
   18854:	movt	r3, #1
   18858:	bl	11504 <rb_connect_tcp@plt>
   1885c:	mov	sl, r5
   18860:	ldr	r7, [r7, #8]
   18864:	cmp	r7, #0
   18868:	beq	188a4 <sprintf@plt+0x701c>
   1886c:	movw	r0, #44804	; 0xaf04
   18870:	ldr	r1, [sl, #464]	; 0x1d0
   18874:	ldr	r9, [r7]
   18878:	movt	r0, #2
   1887c:	ldr	r0, [r0, #16]
   18880:	add	r0, r1, r0, lsl #4
   18884:	mov	r1, #28
   18888:	ldr	r4, [r0, #8]
   1888c:	mov	r0, #1
   18890:	bl	115a0 <calloc@plt>
   18894:	mov	r8, r0
   18898:	cmp	r0, #0
   1889c:	bne	18688 <sprintf@plt+0x6e00>
   188a0:	bl	11750 <rb_outofmemory@plt>
   188a4:	ldr	r0, [sl]
   188a8:	movw	r1, #39470	; 0x9a2e
   188ac:	movt	r1, #1
   188b0:	bl	12494 <sprintf@plt+0xc0c>
   188b4:	sub	sp, fp, #28
   188b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   188bc:	movw	r0, #39308	; 0x998c
   188c0:	movw	r1, #36706	; 0x8f62
   188c4:	movw	r3, #36801	; 0x8fc1
   188c8:	mov	r2, #145	; 0x91
   188cc:	movt	r0, #1
   188d0:	movt	r1, #1
   188d4:	movt	r3, #1
   188d8:	bl	11600 <__assert_fail@plt>
   188dc:	push	{r4, r5, fp, lr}
   188e0:	add	fp, sp, #8
   188e4:	mov	r4, r2
   188e8:	ldr	r2, [r2]
   188ec:	movw	r0, #44804	; 0xaf04
   188f0:	cmp	r1, #0
   188f4:	movt	r0, #2
   188f8:	ldr	r0, [r0, #16]
   188fc:	ldr	r3, [r2, #464]	; 0x1d0
   18900:	add	r0, r3, r0, lsl #4
   18904:	ldr	r5, [r0, #8]
   18908:	bne	1897c <sprintf@plt+0x70f4>
   1890c:	movw	r0, #61800	; 0xf168
   18910:	movt	r0, #2
   18914:	ldrb	r0, [r0]
   18918:	cmp	r0, #0
   1891c:	beq	1897c <sprintf@plt+0x70f4>
   18920:	ldrh	r1, [r2, #248]	; 0xf8
   18924:	ldr	r0, [r4, #8]
   18928:	cmp	r1, #10
   1892c:	beq	18950 <sprintf@plt+0x70c8>
   18930:	cmp	r1, #2
   18934:	bne	1897c <sprintf@plt+0x70f4>
   18938:	movw	r1, #61424	; 0xeff0
   1893c:	movt	r1, #2
   18940:	ldr	r1, [r1, #184]	; 0xb8
   18944:	cmp	r1, #0
   18948:	bne	18970 <sprintf@plt+0x70e8>
   1894c:	b	1897c <sprintf@plt+0x70f4>
   18950:	ldrb	r1, [r0, #23]
   18954:	cmp	r1, #0
   18958:	beq	1897c <sprintf@plt+0x70f4>
   1895c:	movw	r1, #61424	; 0xeff0
   18960:	movt	r1, #2
   18964:	ldr	r1, [r1, #372]	; 0x174
   18968:	cmp	r1, #0
   1896c:	beq	1897c <sprintf@plt+0x70f4>
   18970:	ldr	r1, [r0, #24]
   18974:	mov	r0, r4
   18978:	blx	r1
   1897c:	ldr	r0, [r4, #4]
   18980:	bl	116d8 <rb_close@plt>
   18984:	cmp	r5, #0
   18988:	beq	189e0 <sprintf@plt+0x7158>
   1898c:	ldr	r0, [r4, #24]
   18990:	ldr	r1, [r4, #20]
   18994:	cmp	r0, #0
   18998:	beq	189a8 <sprintf@plt+0x7120>
   1899c:	str	r1, [r0, #4]
   189a0:	ldr	r1, [r4, #20]
   189a4:	b	189ac <sprintf@plt+0x7124>
   189a8:	str	r1, [r5, #4]
   189ac:	cmp	r1, #0
   189b0:	mov	r2, r5
   189b4:	addne	r2, r1, #8
   189b8:	str	r0, [r2]
   189bc:	mov	r0, #0
   189c0:	str	r0, [r4, #20]
   189c4:	str	r0, [r4, #24]
   189c8:	ldr	r0, [r5, #8]
   189cc:	sub	r0, r0, #1
   189d0:	str	r0, [r5, #8]
   189d4:	mov	r0, r4
   189d8:	pop	{r4, r5, fp, lr}
   189dc:	b	1163c <free@plt>
   189e0:	movw	r0, #39308	; 0x998c
   189e4:	movw	r1, #36706	; 0x8f62
   189e8:	movw	r3, #36734	; 0x8f7e
   189ec:	mov	r2, #236	; 0xec
   189f0:	movt	r0, #1
   189f4:	movt	r1, #1
   189f8:	movt	r3, #1
   189fc:	bl	11600 <__assert_fail@plt>
   18a00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18a04:	mov	r7, r0
   18a08:	ldr	r6, [pc, #72]	; 18a58 <sprintf@plt+0x71d0>
   18a0c:	ldr	r5, [pc, #72]	; 18a5c <sprintf@plt+0x71d4>
   18a10:	add	r6, pc, r6
   18a14:	add	r5, pc, r5
   18a18:	sub	r6, r6, r5
   18a1c:	mov	r8, r1
   18a20:	mov	r9, r2
   18a24:	bl	11484 <sigemptyset@plt-0x20>
   18a28:	asrs	r6, r6, #2
   18a2c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18a30:	mov	r4, #0
   18a34:	add	r4, r4, #1
   18a38:	ldr	r3, [r5], #4
   18a3c:	mov	r2, r9
   18a40:	mov	r1, r8
   18a44:	mov	r0, r7
   18a48:	blx	r3
   18a4c:	cmp	r6, r4
   18a50:	bne	18a34 <sprintf@plt+0x71ac>
   18a54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18a58:	andeq	r1, r1, ip, asr #9
   18a5c:	andeq	r1, r1, r4, asr #9
   18a60:	bx	lr

Disassembly of section .fini:

00018a64 <.fini>:
   18a64:	push	{r3, lr}
   18a68:	pop	{r3, pc}
