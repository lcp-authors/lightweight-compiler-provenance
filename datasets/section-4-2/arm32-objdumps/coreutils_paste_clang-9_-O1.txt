
../repos/coreutils/src/paste:     file format elf32-littlearm


Disassembly of section .init:

00010d64 <.init>:
   10d64:	push	{r3, lr}
   10d68:	bl	11000 <putchar_unlocked@plt+0x48>
   10d6c:	pop	{r3, pc}

Disassembly of section .plt:

00010d70 <calloc@plt-0x14>:
   10d70:	push	{lr}		; (str lr, [sp, #-4]!)
   10d74:	ldr	lr, [pc, #4]	; 10d80 <calloc@plt-0x4>
   10d78:	add	lr, pc, lr
   10d7c:	ldr	pc, [lr, #8]!
   10d80:	andeq	r5, r1, r0, lsl #5

00010d84 <calloc@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #86016	; 0x15000
   10d8c:	ldr	pc, [ip, #640]!	; 0x280

00010d90 <fputs_unlocked@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #86016	; 0x15000
   10d98:	ldr	pc, [ip, #632]!	; 0x278

00010d9c <strcmp@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #86016	; 0x15000
   10da4:	ldr	pc, [ip, #624]!	; 0x270

00010da8 <posix_fadvise64@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #86016	; 0x15000
   10db0:	ldr	pc, [ip, #616]!	; 0x268

00010db4 <fflush@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #86016	; 0x15000
   10dbc:	ldr	pc, [ip, #608]!	; 0x260

00010dc0 <free@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #86016	; 0x15000
   10dc8:	ldr	pc, [ip, #600]!	; 0x258

00010dcc <_exit@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #86016	; 0x15000
   10dd4:	ldr	pc, [ip, #592]!	; 0x250

00010dd8 <memcpy@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #86016	; 0x15000
   10de0:	ldr	pc, [ip, #584]!	; 0x248

00010de4 <mbsinit@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #86016	; 0x15000
   10dec:	ldr	pc, [ip, #576]!	; 0x240

00010df0 <fwrite_unlocked@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #86016	; 0x15000
   10df8:	ldr	pc, [ip, #568]!	; 0x238

00010dfc <getc_unlocked@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #86016	; 0x15000
   10e04:	ldr	pc, [ip, #560]!	; 0x230

00010e08 <dcgettext@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #86016	; 0x15000
   10e10:	ldr	pc, [ip, #552]!	; 0x228

00010e14 <realloc@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #86016	; 0x15000
   10e1c:	ldr	pc, [ip, #544]!	; 0x220

00010e20 <textdomain@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #86016	; 0x15000
   10e28:	ldr	pc, [ip, #536]!	; 0x218

00010e2c <iswprint@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #86016	; 0x15000
   10e34:	ldr	pc, [ip, #528]!	; 0x210

00010e38 <fwrite@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #86016	; 0x15000
   10e40:	ldr	pc, [ip, #520]!	; 0x208

00010e44 <lseek64@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #86016	; 0x15000
   10e4c:	ldr	pc, [ip, #512]!	; 0x200

00010e50 <__ctype_get_mb_cur_max@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #86016	; 0x15000
   10e58:	ldr	pc, [ip, #504]!	; 0x1f8

00010e5c <__fpending@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #86016	; 0x15000
   10e64:	ldr	pc, [ip, #496]!	; 0x1f0

00010e68 <ferror_unlocked@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #86016	; 0x15000
   10e70:	ldr	pc, [ip, #488]!	; 0x1e8

00010e74 <mbrtowc@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #86016	; 0x15000
   10e7c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e80 <error@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #86016	; 0x15000
   10e88:	ldr	pc, [ip, #472]!	; 0x1d8

00010e8c <malloc@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #86016	; 0x15000
   10e94:	ldr	pc, [ip, #464]!	; 0x1d0

00010e98 <__libc_start_main@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #86016	; 0x15000
   10ea0:	ldr	pc, [ip, #456]!	; 0x1c8

00010ea4 <__freading@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #86016	; 0x15000
   10eac:	ldr	pc, [ip, #448]!	; 0x1c0

00010eb0 <__gmon_start__@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #86016	; 0x15000
   10eb8:	ldr	pc, [ip, #440]!	; 0x1b8

00010ebc <getopt_long@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #86016	; 0x15000
   10ec4:	ldr	pc, [ip, #432]!	; 0x1b0

00010ec8 <__ctype_b_loc@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #86016	; 0x15000
   10ed0:	ldr	pc, [ip, #424]!	; 0x1a8

00010ed4 <exit@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #86016	; 0x15000
   10edc:	ldr	pc, [ip, #416]!	; 0x1a0

00010ee0 <bcmp@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #86016	; 0x15000
   10ee8:	ldr	pc, [ip, #408]!	; 0x198

00010eec <strlen@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #86016	; 0x15000
   10ef4:	ldr	pc, [ip, #400]!	; 0x190

00010ef8 <__errno_location@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #86016	; 0x15000
   10f00:	ldr	pc, [ip, #392]!	; 0x188

00010f04 <__cxa_atexit@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #86016	; 0x15000
   10f0c:	ldr	pc, [ip, #384]!	; 0x180

00010f10 <memset@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #86016	; 0x15000
   10f18:	ldr	pc, [ip, #376]!	; 0x178

00010f1c <__printf_chk@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #86016	; 0x15000
   10f24:	ldr	pc, [ip, #368]!	; 0x170

00010f28 <fileno@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #86016	; 0x15000
   10f30:	ldr	pc, [ip, #360]!	; 0x168

00010f34 <__fprintf_chk@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #86016	; 0x15000
   10f3c:	ldr	pc, [ip, #352]!	; 0x160

00010f40 <fclose@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #86016	; 0x15000
   10f48:	ldr	pc, [ip, #344]!	; 0x158

00010f4c <fseeko64@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #86016	; 0x15000
   10f54:	ldr	pc, [ip, #336]!	; 0x150

00010f58 <setlocale@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #86016	; 0x15000
   10f60:	ldr	pc, [ip, #328]!	; 0x148

00010f64 <strrchr@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #86016	; 0x15000
   10f6c:	ldr	pc, [ip, #320]!	; 0x140

00010f70 <nl_langinfo@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #86016	; 0x15000
   10f78:	ldr	pc, [ip, #312]!	; 0x138

00010f7c <clearerr_unlocked@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #86016	; 0x15000
   10f84:	ldr	pc, [ip, #304]!	; 0x130

00010f88 <fopen64@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #86016	; 0x15000
   10f90:	ldr	pc, [ip, #296]!	; 0x128

00010f94 <bindtextdomain@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #86016	; 0x15000
   10f9c:	ldr	pc, [ip, #288]!	; 0x120

00010fa0 <strncmp@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #86016	; 0x15000
   10fa8:	ldr	pc, [ip, #280]!	; 0x118

00010fac <abort@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #86016	; 0x15000
   10fb4:	ldr	pc, [ip, #272]!	; 0x110

00010fb8 <putchar_unlocked@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #86016	; 0x15000
   10fc0:	ldr	pc, [ip, #264]!	; 0x108

Disassembly of section .text:

00010fc4 <.text>:
   10fc4:	mov	fp, #0
   10fc8:	mov	lr, #0
   10fcc:	pop	{r1}		; (ldr r1, [sp], #4)
   10fd0:	mov	r2, sp
   10fd4:	push	{r2}		; (str r2, [sp, #-4]!)
   10fd8:	push	{r0}		; (str r0, [sp, #-4]!)
   10fdc:	ldr	ip, [pc, #16]	; 10ff4 <putchar_unlocked@plt+0x3c>
   10fe0:	push	{ip}		; (str ip, [sp, #-4]!)
   10fe4:	ldr	r0, [pc, #12]	; 10ff8 <putchar_unlocked@plt+0x40>
   10fe8:	ldr	r3, [pc, #12]	; 10ffc <putchar_unlocked@plt+0x44>
   10fec:	bl	10e98 <__libc_start_main@plt>
   10ff0:	bl	10fac <abort@plt>
   10ff4:	andeq	r4, r1, r4, lsl #29
   10ff8:	andeq	r1, r1, r8, asr #7
   10ffc:	andeq	r4, r1, r4, lsr #28
   11000:	ldr	r3, [pc, #20]	; 1101c <putchar_unlocked@plt+0x64>
   11004:	ldr	r2, [pc, #20]	; 11020 <putchar_unlocked@plt+0x68>
   11008:	add	r3, pc, r3
   1100c:	ldr	r2, [r3, r2]
   11010:	cmp	r2, #0
   11014:	bxeq	lr
   11018:	b	10eb0 <__gmon_start__@plt>
   1101c:	strdeq	r4, [r1], -r0
   11020:	andeq	r0, r0, ip, asr #1
   11024:	ldr	r0, [pc, #24]	; 11044 <putchar_unlocked@plt+0x8c>
   11028:	ldr	r3, [pc, #24]	; 11048 <putchar_unlocked@plt+0x90>
   1102c:	cmp	r3, r0
   11030:	bxeq	lr
   11034:	ldr	r3, [pc, #16]	; 1104c <putchar_unlocked@plt+0x94>
   11038:	cmp	r3, #0
   1103c:	bxeq	lr
   11040:	bx	r3
   11044:	andeq	r6, r2, r0, lsr #2
   11048:	andeq	r6, r2, r0, lsr #2
   1104c:	andeq	r0, r0, r0
   11050:	ldr	r0, [pc, #36]	; 1107c <putchar_unlocked@plt+0xc4>
   11054:	ldr	r1, [pc, #36]	; 11080 <putchar_unlocked@plt+0xc8>
   11058:	sub	r1, r1, r0
   1105c:	asr	r1, r1, #2
   11060:	add	r1, r1, r1, lsr #31
   11064:	asrs	r1, r1, #1
   11068:	bxeq	lr
   1106c:	ldr	r3, [pc, #16]	; 11084 <putchar_unlocked@plt+0xcc>
   11070:	cmp	r3, #0
   11074:	bxeq	lr
   11078:	bx	r3
   1107c:	andeq	r6, r2, r0, lsr #2
   11080:	andeq	r6, r2, r0, lsr #2
   11084:	andeq	r0, r0, r0
   11088:	push	{r4, lr}
   1108c:	ldr	r4, [pc, #24]	; 110ac <putchar_unlocked@plt+0xf4>
   11090:	ldrb	r3, [r4]
   11094:	cmp	r3, #0
   11098:	popne	{r4, pc}
   1109c:	bl	11024 <putchar_unlocked@plt+0x6c>
   110a0:	mov	r3, #1
   110a4:	strb	r3, [r4]
   110a8:	pop	{r4, pc}
   110ac:	andeq	r6, r2, r4, asr #2
   110b0:	b	11050 <putchar_unlocked@plt+0x98>
   110b4:	push	{fp, lr}
   110b8:	mov	fp, sp
   110bc:	mov	r4, r0
   110c0:	cmp	r0, #0
   110c4:	bne	1119c <putchar_unlocked@plt+0x1e4>
   110c8:	movw	r1, #20179	; 0x4ed3
   110cc:	movt	r1, #1
   110d0:	mov	r0, #0
   110d4:	mov	r2, #5
   110d8:	bl	10e08 <dcgettext@plt>
   110dc:	mov	r1, r0
   110e0:	movw	r0, #24924	; 0x615c
   110e4:	movt	r0, #2
   110e8:	ldr	r2, [r0]
   110ec:	mov	r0, #1
   110f0:	bl	10f1c <__printf_chk@plt>
   110f4:	movw	r1, #20212	; 0x4ef4
   110f8:	movt	r1, #1
   110fc:	mov	r0, #0
   11100:	mov	r2, #5
   11104:	bl	10e08 <dcgettext@plt>
   11108:	movw	r5, #24892	; 0x613c
   1110c:	movt	r5, #2
   11110:	ldr	r1, [r5]
   11114:	bl	10d90 <fputs_unlocked@plt>
   11118:	bl	111e0 <putchar_unlocked@plt+0x228>
   1111c:	bl	11210 <putchar_unlocked@plt+0x258>
   11120:	movw	r1, #20331	; 0x4f6b
   11124:	movt	r1, #1
   11128:	mov	r0, #0
   1112c:	mov	r2, #5
   11130:	bl	10e08 <dcgettext@plt>
   11134:	ldr	r1, [r5]
   11138:	bl	10d90 <fputs_unlocked@plt>
   1113c:	movw	r1, #20475	; 0x4ffb
   11140:	movt	r1, #1
   11144:	mov	r0, #0
   11148:	mov	r2, #5
   1114c:	bl	10e08 <dcgettext@plt>
   11150:	ldr	r1, [r5]
   11154:	bl	10d90 <fputs_unlocked@plt>
   11158:	movw	r1, #20538	; 0x503a
   1115c:	movt	r1, #1
   11160:	mov	r0, #0
   11164:	mov	r2, #5
   11168:	bl	10e08 <dcgettext@plt>
   1116c:	ldr	r1, [r5]
   11170:	bl	10d90 <fputs_unlocked@plt>
   11174:	movw	r1, #20583	; 0x5067
   11178:	movt	r1, #1
   1117c:	mov	r0, #0
   11180:	mov	r2, #5
   11184:	bl	10e08 <dcgettext@plt>
   11188:	ldr	r1, [r5]
   1118c:	bl	10d90 <fputs_unlocked@plt>
   11190:	bl	11240 <putchar_unlocked@plt+0x288>
   11194:	mov	r0, r4
   11198:	bl	10ed4 <exit@plt>
   1119c:	movw	r0, #24880	; 0x6130
   111a0:	movt	r0, #2
   111a4:	ldr	r5, [r0]
   111a8:	movw	r1, #20140	; 0x4eac
   111ac:	movt	r1, #1
   111b0:	mov	r0, #0
   111b4:	mov	r2, #5
   111b8:	bl	10e08 <dcgettext@plt>
   111bc:	mov	r2, r0
   111c0:	movw	r0, #24924	; 0x615c
   111c4:	movt	r0, #2
   111c8:	ldr	r3, [r0]
   111cc:	mov	r0, r5
   111d0:	mov	r1, #1
   111d4:	bl	10f34 <__fprintf_chk@plt>
   111d8:	mov	r0, r4
   111dc:	bl	10ed4 <exit@plt>
   111e0:	push	{fp, lr}
   111e4:	mov	fp, sp
   111e8:	movw	r1, #20774	; 0x5126
   111ec:	movt	r1, #1
   111f0:	mov	r0, #0
   111f4:	mov	r2, #5
   111f8:	bl	10e08 <dcgettext@plt>
   111fc:	movw	r1, #24892	; 0x613c
   11200:	movt	r1, #2
   11204:	ldr	r1, [r1]
   11208:	pop	{fp, lr}
   1120c:	b	10d90 <fputs_unlocked@plt>
   11210:	push	{fp, lr}
   11214:	mov	fp, sp
   11218:	movw	r1, #20830	; 0x515e
   1121c:	movt	r1, #1
   11220:	mov	r0, #0
   11224:	mov	r2, #5
   11228:	bl	10e08 <dcgettext@plt>
   1122c:	movw	r1, #24892	; 0x613c
   11230:	movt	r1, #2
   11234:	ldr	r1, [r1]
   11238:	pop	{fp, lr}
   1123c:	b	10d90 <fputs_unlocked@plt>
   11240:	push	{r4, r5, r6, sl, fp, lr}
   11244:	add	fp, sp, #16
   11248:	sub	sp, sp, #56	; 0x38
   1124c:	movw	r0, #21400	; 0x5398
   11250:	movt	r0, #1
   11254:	add	r1, r0, #32
   11258:	mov	r2, #48	; 0x30
   1125c:	vld1.64	{d16-d17}, [r1]
   11260:	mov	r6, sp
   11264:	add	r1, r6, #32
   11268:	add	r3, r0, #16
   1126c:	vld1.64	{d18-d19}, [r0], r2
   11270:	vld1.64	{d20-d21}, [r3]
   11274:	vldr	d22, [r0]
   11278:	vst1.64	{d16-d17}, [r1]
   1127c:	add	r0, r6, #16
   11280:	vst1.64	{d20-d21}, [r0]
   11284:	mov	r0, r6
   11288:	vst1.64	{d18-d19}, [r0], r2
   1128c:	vstr	d22, [r0]
   11290:	ldr	r1, [sp]
   11294:	cmp	r1, #0
   11298:	movw	r4, #20637	; 0x509d
   1129c:	movt	r4, #1
   112a0:	beq	112c8 <putchar_unlocked@plt+0x310>
   112a4:	mov	r6, sp
   112a8:	movw	r5, #20637	; 0x509d
   112ac:	movt	r5, #1
   112b0:	mov	r0, r5
   112b4:	bl	10d9c <strcmp@plt>
   112b8:	cmp	r0, #0
   112bc:	ldrne	r1, [r6, #8]!
   112c0:	cmpne	r1, #0
   112c4:	bne	112b0 <putchar_unlocked@plt+0x2f8>
   112c8:	ldr	r5, [r6, #4]
   112cc:	movw	r1, #21000	; 0x5208
   112d0:	movt	r1, #1
   112d4:	mov	r0, #0
   112d8:	mov	r2, #5
   112dc:	bl	10e08 <dcgettext@plt>
   112e0:	mov	r1, r0
   112e4:	movw	r2, #20677	; 0x50c5
   112e8:	movt	r2, #1
   112ec:	movw	r3, #21023	; 0x521f
   112f0:	movt	r3, #1
   112f4:	mov	r0, #1
   112f8:	bl	10f1c <__printf_chk@plt>
   112fc:	cmp	r5, #0
   11300:	moveq	r5, r4
   11304:	mov	r0, #5
   11308:	mov	r1, #0
   1130c:	bl	10f58 <setlocale@plt>
   11310:	cmp	r0, #0
   11314:	beq	11354 <putchar_unlocked@plt+0x39c>
   11318:	movw	r1, #21063	; 0x5247
   1131c:	movt	r1, #1
   11320:	mov	r2, #3
   11324:	bl	10fa0 <strncmp@plt>
   11328:	cmp	r0, #0
   1132c:	beq	11354 <putchar_unlocked@plt+0x39c>
   11330:	movw	r1, #21067	; 0x524b
   11334:	movt	r1, #1
   11338:	mov	r0, #0
   1133c:	mov	r2, #5
   11340:	bl	10e08 <dcgettext@plt>
   11344:	movw	r1, #24892	; 0x613c
   11348:	movt	r1, #2
   1134c:	ldr	r1, [r1]
   11350:	bl	10d90 <fputs_unlocked@plt>
   11354:	movw	r1, #21138	; 0x5292
   11358:	movt	r1, #1
   1135c:	mov	r0, #0
   11360:	mov	r2, #5
   11364:	bl	10e08 <dcgettext@plt>
   11368:	mov	r1, r0
   1136c:	movw	r2, #21023	; 0x521f
   11370:	movt	r2, #1
   11374:	mov	r0, #1
   11378:	mov	r3, r4
   1137c:	bl	10f1c <__printf_chk@plt>
   11380:	movw	r0, #20933	; 0x51c5
   11384:	movt	r0, #1
   11388:	movw	r6, #20644	; 0x50a4
   1138c:	movt	r6, #1
   11390:	cmp	r5, r4
   11394:	moveq	r6, r0
   11398:	movw	r1, #21165	; 0x52ad
   1139c:	movt	r1, #1
   113a0:	mov	r0, #0
   113a4:	mov	r2, #5
   113a8:	bl	10e08 <dcgettext@plt>
   113ac:	mov	r1, r0
   113b0:	mov	r0, #1
   113b4:	mov	r2, r5
   113b8:	mov	r3, r6
   113bc:	sub	sp, fp, #16
   113c0:	pop	{r4, r5, r6, sl, fp, lr}
   113c4:	b	10f1c <__printf_chk@plt>
   113c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113cc:	add	fp, sp, #28
   113d0:	sub	sp, sp, #12
   113d4:	mov	r4, r1
   113d8:	mov	r5, r0
   113dc:	ldr	r0, [r1]
   113e0:	bl	122cc <putchar_unlocked@plt+0x1314>
   113e4:	movw	r1, #20644	; 0x50a4
   113e8:	movt	r1, #1
   113ec:	mov	r0, #6
   113f0:	bl	10f58 <setlocale@plt>
   113f4:	movw	r6, #20681	; 0x50c9
   113f8:	movt	r6, #1
   113fc:	movw	r1, #20645	; 0x50a5
   11400:	movt	r1, #1
   11404:	mov	r0, r6
   11408:	bl	10f94 <bindtextdomain@plt>
   1140c:	mov	r0, r6
   11410:	bl	10e20 <textdomain@plt>
   11414:	movw	r0, #8140	; 0x1fcc
   11418:	movt	r0, #1
   1141c:	bl	14e88 <putchar_unlocked@plt+0x3ed0>
   11420:	movw	r0, #24904	; 0x6148
   11424:	movt	r0, #2
   11428:	mov	r7, #0
   1142c:	strb	r7, [r0]
   11430:	movw	r9, #24905	; 0x6149
   11434:	movt	r9, #2
   11438:	strb	r7, [r9]
   1143c:	movw	r6, #20643	; 0x50a3
   11440:	movt	r6, #1
   11444:	movw	r8, #20669	; 0x50bd
   11448:	movt	r8, #1
   1144c:	movw	sl, #21304	; 0x5338
   11450:	movt	sl, #1
   11454:	str	r7, [sp]
   11458:	mov	r0, r5
   1145c:	mov	r1, r4
   11460:	mov	r2, r8
   11464:	mov	r3, sl
   11468:	bl	10ebc <getopt_long@plt>
   1146c:	cmp	r0, #99	; 0x63
   11470:	ble	114c8 <putchar_unlocked@plt+0x510>
   11474:	cmp	r0, #122	; 0x7a
   11478:	beq	114b4 <putchar_unlocked@plt+0x4fc>
   1147c:	cmp	r0, #115	; 0x73
   11480:	mov	r1, r9
   11484:	beq	114bc <putchar_unlocked@plt+0x504>
   11488:	cmp	r0, #100	; 0x64
   1148c:	bne	115f0 <putchar_unlocked@plt+0x638>
   11490:	movw	r0, #24896	; 0x6140
   11494:	movt	r0, #2
   11498:	ldr	r6, [r0]
   1149c:	ldrb	r0, [r6]
   114a0:	cmp	r0, #0
   114a4:	movw	r0, #20674	; 0x50c2
   114a8:	movt	r0, #1
   114ac:	moveq	r6, r0
   114b0:	b	11454 <putchar_unlocked@plt+0x49c>
   114b4:	movw	r1, #24906	; 0x614a
   114b8:	movt	r1, #2
   114bc:	mov	r0, #1
   114c0:	strb	r0, [r1]
   114c4:	b	11454 <putchar_unlocked@plt+0x49c>
   114c8:	cmn	r0, #1
   114cc:	bne	11584 <putchar_unlocked@plt+0x5cc>
   114d0:	movw	r7, #24872	; 0x6128
   114d4:	movt	r7, #2
   114d8:	ldr	r0, [r7]
   114dc:	subs	r5, r5, r0
   114e0:	bne	114f4 <putchar_unlocked@plt+0x53c>
   114e4:	movw	r1, #21544	; 0x5428
   114e8:	movt	r1, #1
   114ec:	str	r1, [r4, r0, lsl #2]
   114f0:	mov	r5, #1
   114f4:	mov	r0, r6
   114f8:	bl	1164c <putchar_unlocked@plt+0x694>
   114fc:	cmp	r0, #0
   11500:	bne	115f8 <putchar_unlocked@plt+0x640>
   11504:	movw	r0, #24905	; 0x6149
   11508:	movt	r0, #2
   1150c:	ldrb	r0, [r0]
   11510:	movw	r1, #6212	; 0x1844
   11514:	movt	r1, #1
   11518:	movw	r2, #6836	; 0x1ab4
   1151c:	movt	r2, #1
   11520:	cmp	r0, #0
   11524:	movne	r2, r1
   11528:	ldr	r0, [r7]
   1152c:	add	r1, r4, r0, lsl #2
   11530:	mov	r0, r5
   11534:	blx	r2
   11538:	mov	r4, r0
   1153c:	movw	r0, #24908	; 0x614c
   11540:	movt	r0, #2
   11544:	ldr	r0, [r0]
   11548:	bl	121fc <putchar_unlocked@plt+0x1244>
   1154c:	movw	r0, #24904	; 0x6148
   11550:	movt	r0, #2
   11554:	ldrb	r0, [r0]
   11558:	cmp	r0, #1
   1155c:	bne	11578 <putchar_unlocked@plt+0x5c0>
   11560:	movw	r0, #24888	; 0x6138
   11564:	movt	r0, #2
   11568:	ldr	r0, [r0]
   1156c:	bl	120f4 <putchar_unlocked@plt+0x113c>
   11570:	cmn	r0, #1
   11574:	beq	11634 <putchar_unlocked@plt+0x67c>
   11578:	eor	r0, r4, #1
   1157c:	sub	sp, fp, #28
   11580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11584:	cmn	r0, #3
   11588:	bne	115e0 <putchar_unlocked@plt+0x628>
   1158c:	movw	r0, #24792	; 0x60d8
   11590:	movt	r0, #2
   11594:	ldr	r3, [r0]
   11598:	movw	r0, #24892	; 0x613c
   1159c:	movt	r0, #2
   115a0:	ldr	r0, [r0]
   115a4:	mov	r1, #0
   115a8:	movw	r2, #20706	; 0x50e2
   115ac:	movt	r2, #1
   115b0:	movw	r7, #20691	; 0x50d3
   115b4:	movt	r7, #1
   115b8:	str	r7, [sp]
   115bc:	str	r2, [sp, #4]
   115c0:	str	r1, [sp, #8]
   115c4:	movw	r1, #20637	; 0x509d
   115c8:	movt	r1, #1
   115cc:	movw	r2, #20677	; 0x50c5
   115d0:	movt	r2, #1
   115d4:	bl	14298 <putchar_unlocked@plt+0x32e0>
   115d8:	mov	r0, #0
   115dc:	bl	10ed4 <exit@plt>
   115e0:	cmn	r0, #2
   115e4:	bne	115f0 <putchar_unlocked@plt+0x638>
   115e8:	mov	r0, #0
   115ec:	bl	110b4 <putchar_unlocked@plt+0xfc>
   115f0:	mov	r0, #1
   115f4:	bl	110b4 <putchar_unlocked@plt+0xfc>
   115f8:	movw	r1, #20722	; 0x50f2
   115fc:	movt	r1, #1
   11600:	mov	r0, #0
   11604:	mov	r2, #5
   11608:	bl	10e08 <dcgettext@plt>
   1160c:	mov	r4, r0
   11610:	mov	r0, #0
   11614:	mov	r1, #6
   11618:	mov	r2, r6
   1161c:	bl	13980 <putchar_unlocked@plt+0x29c8>
   11620:	mov	r3, r0
   11624:	mov	r0, #1
   11628:	mov	r1, #0
   1162c:	mov	r2, r4
   11630:	bl	10e80 <error@plt>
   11634:	bl	10ef8 <__errno_location@plt>
   11638:	ldr	r1, [r0]
   1163c:	movw	r2, #21544	; 0x5428
   11640:	movt	r2, #1
   11644:	mov	r0, #1
   11648:	bl	10e80 <error@plt>
   1164c:	push	{r4, sl, fp, lr}
   11650:	add	fp, sp, #8
   11654:	mov	r4, r0
   11658:	bl	14708 <putchar_unlocked@plt+0x3750>
   1165c:	movw	r1, #24908	; 0x614c
   11660:	movt	r1, #2
   11664:	str	r0, [r1]
   11668:	ldrb	r2, [r4]
   1166c:	mov	ip, #0
   11670:	cmp	r2, #0
   11674:	bne	11694 <putchar_unlocked@plt+0x6dc>
   11678:	b	11830 <putchar_unlocked@plt+0x878>
   1167c:	strb	r2, [r0]
   11680:	mov	r4, r3
   11684:	add	r0, r0, #1
   11688:	ldrb	r2, [r4]
   1168c:	cmp	r2, #0
   11690:	beq	11830 <putchar_unlocked@plt+0x878>
   11694:	add	r3, r4, #1
   11698:	uxtb	r1, r2
   1169c:	cmp	r1, #92	; 0x5c
   116a0:	bne	1167c <putchar_unlocked@plt+0x6c4>
   116a4:	ldrb	r3, [r3]
   116a8:	sub	r1, r3, #48	; 0x30
   116ac:	cmp	r1, #70	; 0x46
   116b0:	bhi	11814 <putchar_unlocked@plt+0x85c>
   116b4:	mov	lr, #0
   116b8:	add	r2, pc, #0
   116bc:	ldr	pc, [r2, r1, lsl #2]
   116c0:	andeq	r1, r1, r0, lsr #16
   116c4:	andeq	r1, r1, ip, lsl r8
   116c8:	andeq	r1, r1, ip, lsl r8
   116cc:	andeq	r1, r1, ip, lsl r8
   116d0:	andeq	r1, r1, ip, lsl r8
   116d4:	andeq	r1, r1, ip, lsl r8
   116d8:	andeq	r1, r1, ip, lsl r8
   116dc:	andeq	r1, r1, ip, lsl r8
   116e0:	andeq	r1, r1, ip, lsl r8
   116e4:	andeq	r1, r1, ip, lsl r8
   116e8:	andeq	r1, r1, ip, lsl r8
   116ec:	andeq	r1, r1, ip, lsl r8
   116f0:	andeq	r1, r1, ip, lsl r8
   116f4:	andeq	r1, r1, ip, lsl r8
   116f8:	andeq	r1, r1, ip, lsl r8
   116fc:	andeq	r1, r1, ip, lsl r8
   11700:	andeq	r1, r1, ip, lsl r8
   11704:	andeq	r1, r1, ip, lsl r8
   11708:	andeq	r1, r1, ip, lsl r8
   1170c:	andeq	r1, r1, ip, lsl r8
   11710:	andeq	r1, r1, ip, lsl r8
   11714:	andeq	r1, r1, ip, lsl r8
   11718:	andeq	r1, r1, ip, lsl r8
   1171c:	andeq	r1, r1, ip, lsl r8
   11720:	andeq	r1, r1, ip, lsl r8
   11724:	andeq	r1, r1, ip, lsl r8
   11728:	andeq	r1, r1, ip, lsl r8
   1172c:	andeq	r1, r1, ip, lsl r8
   11730:	andeq	r1, r1, ip, lsl r8
   11734:	andeq	r1, r1, ip, lsl r8
   11738:	andeq	r1, r1, ip, lsl r8
   1173c:	andeq	r1, r1, ip, lsl r8
   11740:	andeq	r1, r1, ip, lsl r8
   11744:	andeq	r1, r1, ip, lsl r8
   11748:	andeq	r1, r1, ip, lsl r8
   1174c:	andeq	r1, r1, ip, lsl r8
   11750:	andeq	r1, r1, ip, lsl r8
   11754:	andeq	r1, r1, ip, lsl r8
   11758:	andeq	r1, r1, ip, lsl r8
   1175c:	andeq	r1, r1, ip, lsl r8
   11760:	andeq	r1, r1, ip, lsl r8
   11764:	andeq	r1, r1, ip, lsl r8
   11768:	andeq	r1, r1, ip, lsl r8
   1176c:	andeq	r1, r1, ip, lsl r8
   11770:	ldrdeq	r1, [r1], -ip
   11774:	andeq	r1, r1, ip, lsl r8
   11778:	andeq	r1, r1, ip, lsl r8
   1177c:	andeq	r1, r1, ip, lsl r8
   11780:	andeq	r1, r1, ip, lsl r8
   11784:	andeq	r1, r1, ip, lsl r8
   11788:	andeq	r1, r1, r4, ror #15
   1178c:	andeq	r1, r1, ip, lsl r8
   11790:	andeq	r1, r1, ip, lsl r8
   11794:	andeq	r1, r1, ip, lsl r8
   11798:	andeq	r1, r1, ip, ror #15
   1179c:	andeq	r1, r1, ip, lsl r8
   117a0:	andeq	r1, r1, ip, lsl r8
   117a4:	andeq	r1, r1, ip, lsl r8
   117a8:	andeq	r1, r1, ip, lsl r8
   117ac:	andeq	r1, r1, ip, lsl r8
   117b0:	andeq	r1, r1, ip, lsl r8
   117b4:	andeq	r1, r1, ip, lsl r8
   117b8:	strdeq	r1, [r1], -r4
   117bc:	andeq	r1, r1, ip, lsl r8
   117c0:	andeq	r1, r1, ip, lsl r8
   117c4:	andeq	r1, r1, ip, lsl r8
   117c8:	strdeq	r1, [r1], -ip
   117cc:	andeq	r1, r1, ip, lsl r8
   117d0:	andeq	r1, r1, r4, lsl #16
   117d4:	andeq	r1, r1, ip, lsl r8
   117d8:	andeq	r1, r1, ip, lsl #16
   117dc:	mov	lr, #92	; 0x5c
   117e0:	b	11820 <putchar_unlocked@plt+0x868>
   117e4:	mov	lr, #8
   117e8:	b	11820 <putchar_unlocked@plt+0x868>
   117ec:	mov	lr, #12
   117f0:	b	11820 <putchar_unlocked@plt+0x868>
   117f4:	mov	lr, #10
   117f8:	b	11820 <putchar_unlocked@plt+0x868>
   117fc:	mov	lr, #13
   11800:	b	11820 <putchar_unlocked@plt+0x868>
   11804:	mov	lr, #9
   11808:	b	11820 <putchar_unlocked@plt+0x868>
   1180c:	mov	lr, #11
   11810:	b	11820 <putchar_unlocked@plt+0x868>
   11814:	cmp	r3, #0
   11818:	beq	1182c <putchar_unlocked@plt+0x874>
   1181c:	mov	lr, r3
   11820:	strb	lr, [r0]
   11824:	add	r4, r4, #2
   11828:	b	11684 <putchar_unlocked@plt+0x6cc>
   1182c:	mov	ip, #1
   11830:	movw	r1, #24912	; 0x6150
   11834:	movt	r1, #2
   11838:	str	r0, [r1]
   1183c:	mov	r0, ip
   11840:	pop	{r4, sl, fp, pc}
   11844:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11848:	add	fp, sp, #28
   1184c:	sub	sp, sp, #20
   11850:	cmp	r0, #0
   11854:	beq	11a9c <putchar_unlocked@plt+0xae4>
   11858:	mov	r8, r1
   1185c:	mov	r7, r0
   11860:	movw	sl, #21544	; 0x5428
   11864:	movt	sl, #1
   11868:	movw	r9, #24908	; 0x614c
   1186c:	movt	r9, #2
   11870:	movw	r4, #24906	; 0x614a
   11874:	movt	r4, #2
   11878:	mov	r0, #1
   1187c:	str	r0, [sp, #4]
   11880:	b	118dc <putchar_unlocked@plt+0x924>
   11884:	bl	10ef8 <__errno_location@plt>
   11888:	ldr	r9, [r0]
   1188c:	ldr	r2, [r8]
   11890:	mov	r0, #0
   11894:	str	r0, [sp, #4]
   11898:	mov	r0, #0
   1189c:	mov	r1, #3
   118a0:	bl	13980 <putchar_unlocked@plt+0x29c8>
   118a4:	mov	r3, r0
   118a8:	mov	r0, #0
   118ac:	mov	r1, r9
   118b0:	movw	r2, #20771	; 0x5123
   118b4:	movt	r2, #1
   118b8:	bl	10e80 <error@plt>
   118bc:	add	r8, r8, #4
   118c0:	subs	r7, r7, #1
   118c4:	movw	r4, #24908	; 0x614c
   118c8:	movt	r4, #2
   118cc:	mov	r9, r4
   118d0:	movw	r4, #24906	; 0x614a
   118d4:	movt	r4, #2
   118d8:	beq	11aa4 <putchar_unlocked@plt+0xaec>
   118dc:	ldr	r6, [r8]
   118e0:	mov	r0, r6
   118e4:	mov	r1, sl
   118e8:	bl	10d9c <strcmp@plt>
   118ec:	mov	r5, r0
   118f0:	cmp	r0, #0
   118f4:	beq	11928 <putchar_unlocked@plt+0x970>
   118f8:	mov	r0, r6
   118fc:	movw	r1, #21273	; 0x5319
   11900:	movt	r1, #1
   11904:	bl	10f88 <fopen64@plt>
   11908:	cmp	r0, #0
   1190c:	beq	11884 <putchar_unlocked@plt+0x8cc>
   11910:	mov	r6, r0
   11914:	str	r5, [sp, #12]
   11918:	str	r7, [sp, #16]
   1191c:	mov	r1, #2
   11920:	bl	120b8 <putchar_unlocked@plt+0x1100>
   11924:	b	1194c <putchar_unlocked@plt+0x994>
   11928:	str	r5, [sp, #12]
   1192c:	str	r7, [sp, #16]
   11930:	mov	r0, #1
   11934:	movw	r1, #24904	; 0x6148
   11938:	movt	r1, #2
   1193c:	strb	r0, [r1]
   11940:	movw	r0, #24888	; 0x6138
   11944:	movt	r0, #2
   11948:	ldr	r6, [r0]
   1194c:	ldr	r7, [r9]
   11950:	mov	r0, r6
   11954:	bl	10dfc <getc_unlocked@plt>
   11958:	mov	sl, r0
   1195c:	bl	10ef8 <__errno_location@plt>
   11960:	cmn	sl, #1
   11964:	str	r0, [sp, #8]
   11968:	beq	11a1c <putchar_unlocked@plt+0xa64>
   1196c:	mov	r0, r6
   11970:	bl	10dfc <getc_unlocked@plt>
   11974:	cmn	r0, #1
   11978:	bne	1199c <putchar_unlocked@plt+0x9e4>
   1197c:	b	119e8 <putchar_unlocked@plt+0xa30>
   11980:	uxtb	r0, sl
   11984:	bl	11f60 <putchar_unlocked@plt+0xfa8>
   11988:	mov	r0, r6
   1198c:	bl	10dfc <getc_unlocked@plt>
   11990:	cmn	r0, #1
   11994:	mov	sl, r5
   11998:	beq	119e8 <putchar_unlocked@plt+0xa30>
   1199c:	mov	r5, r0
   119a0:	ldrb	r0, [r4]
   119a4:	cmp	r0, #0
   119a8:	mov	r0, #10
   119ac:	movwne	r0, #0
   119b0:	cmp	sl, r0
   119b4:	bne	11980 <putchar_unlocked@plt+0x9c8>
   119b8:	ldrb	r0, [r7]
   119bc:	cmp	r0, #0
   119c0:	blne	11f60 <putchar_unlocked@plt+0xfa8>
   119c4:	movw	r0, #24912	; 0x6150
   119c8:	movt	r0, #2
   119cc:	ldr	r0, [r0]
   119d0:	ldr	r1, [r9]
   119d4:	add	r2, r7, #1
   119d8:	cmp	r2, r0
   119dc:	movne	r1, r2
   119e0:	mov	r7, r1
   119e4:	b	11988 <putchar_unlocked@plt+0x9d0>
   119e8:	ldr	r0, [sp, #8]
   119ec:	ldr	r9, [r0]
   119f0:	uxtb	r0, sl
   119f4:	bl	11f60 <putchar_unlocked@plt+0xfa8>
   119f8:	ldrb	r0, [r4]
   119fc:	cmp	r0, #0
   11a00:	mov	r0, #10
   11a04:	movwne	r0, #0
   11a08:	cmp	sl, r0
   11a0c:	movw	sl, #21544	; 0x5428
   11a10:	movt	sl, #1
   11a14:	blne	11f60 <putchar_unlocked@plt+0xfa8>
   11a18:	b	11a40 <putchar_unlocked@plt+0xa88>
   11a1c:	mov	r1, r0
   11a20:	ldrb	r0, [r4]
   11a24:	cmp	r0, #0
   11a28:	mov	r0, #10
   11a2c:	movwne	r0, #0
   11a30:	ldr	r9, [r1]
   11a34:	movw	sl, #21544	; 0x5428
   11a38:	movt	sl, #1
   11a3c:	bl	11f60 <putchar_unlocked@plt+0xfa8>
   11a40:	mov	r0, r6
   11a44:	bl	10e68 <ferror_unlocked@plt>
   11a48:	cmp	r0, #0
   11a4c:	moveq	r9, r0
   11a50:	ldr	r0, [sp, #12]
   11a54:	cmp	r0, #0
   11a58:	ldr	r7, [sp, #16]
   11a5c:	mov	r0, r6
   11a60:	beq	11a8c <putchar_unlocked@plt+0xad4>
   11a64:	bl	120f4 <putchar_unlocked@plt+0x113c>
   11a68:	cmp	r9, #0
   11a6c:	bne	11a80 <putchar_unlocked@plt+0xac8>
   11a70:	cmp	r0, #0
   11a74:	beq	11a80 <putchar_unlocked@plt+0xac8>
   11a78:	ldr	r0, [sp, #8]
   11a7c:	ldr	r9, [r0]
   11a80:	cmp	r9, #0
   11a84:	bne	1188c <putchar_unlocked@plt+0x8d4>
   11a88:	b	118bc <putchar_unlocked@plt+0x904>
   11a8c:	bl	10f7c <clearerr_unlocked@plt>
   11a90:	cmp	r9, #0
   11a94:	bne	1188c <putchar_unlocked@plt+0x8d4>
   11a98:	b	118bc <putchar_unlocked@plt+0x904>
   11a9c:	mov	r0, #1
   11aa0:	str	r0, [sp, #4]
   11aa4:	ldr	r0, [sp, #4]
   11aa8:	and	r0, r0, #1
   11aac:	sub	sp, fp, #28
   11ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ab4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ab8:	add	fp, sp, #28
   11abc:	sub	sp, sp, #28
   11ac0:	str	r1, [sp, #4]
   11ac4:	mov	r5, r0
   11ac8:	add	r0, r0, #2
   11acc:	bl	143a0 <putchar_unlocked@plt+0x33e8>
   11ad0:	str	r0, [sp, #8]
   11ad4:	add	r0, r5, #1
   11ad8:	mov	r1, #4
   11adc:	bl	1443c <putchar_unlocked@plt+0x3484>
   11ae0:	mov	r7, r0
   11ae4:	cmp	r5, #0
   11ae8:	beq	11edc <putchar_unlocked@plt+0xf24>
   11aec:	mov	r9, #0
   11af0:	movw	r4, #21544	; 0x5428
   11af4:	movt	r4, #1
   11af8:	mov	sl, #1
   11afc:	movw	r8, #21273	; 0x5319
   11b00:	movt	r8, #1
   11b04:	mov	r6, #0
   11b08:	str	r5, [sp, #12]
   11b0c:	b	11b3c <putchar_unlocked@plt+0xb84>
   11b10:	movw	r0, #24904	; 0x6148
   11b14:	movt	r0, #2
   11b18:	strb	sl, [r0]
   11b1c:	movw	r0, #24888	; 0x6138
   11b20:	movt	r0, #2
   11b24:	ldr	r0, [r0]
   11b28:	str	r0, [r7, r9, lsl #2]
   11b2c:	add	r9, r9, #1
   11b30:	ldr	r5, [sp, #12]
   11b34:	cmp	r5, r9
   11b38:	beq	11b94 <putchar_unlocked@plt+0xbdc>
   11b3c:	ldr	r0, [sp, #4]
   11b40:	ldr	r5, [r0, r9, lsl #2]
   11b44:	mov	r0, r5
   11b48:	mov	r1, r4
   11b4c:	bl	10d9c <strcmp@plt>
   11b50:	cmp	r0, #0
   11b54:	beq	11b10 <putchar_unlocked@plt+0xb58>
   11b58:	mov	r0, r5
   11b5c:	mov	r1, r8
   11b60:	bl	10f88 <fopen64@plt>
   11b64:	str	r0, [r7, r9, lsl #2]
   11b68:	cmp	r0, #0
   11b6c:	beq	11f08 <putchar_unlocked@plt+0xf50>
   11b70:	bl	10f28 <fileno@plt>
   11b74:	mov	r5, r0
   11b78:	ldr	r0, [r7, r9, lsl #2]
   11b7c:	mov	r1, #2
   11b80:	bl	120b8 <putchar_unlocked@plt+0x1100>
   11b84:	clz	r0, r5
   11b88:	lsr	r0, r0, #5
   11b8c:	orr	r6, r6, r0
   11b90:	b	11b2c <putchar_unlocked@plt+0xb74>
   11b94:	tst	r6, #1
   11b98:	beq	11bb0 <putchar_unlocked@plt+0xbf8>
   11b9c:	movw	r0, #24904	; 0x6148
   11ba0:	movt	r0, #2
   11ba4:	ldrb	r0, [r0]
   11ba8:	cmp	r0, #1
   11bac:	beq	11f3c <putchar_unlocked@plt+0xf84>
   11bb0:	mov	r0, #1
   11bb4:	str	r0, [sp]
   11bb8:	movw	sl, #24906	; 0x614a
   11bbc:	movt	sl, #2
   11bc0:	mov	r8, r9
   11bc4:	b	11bd0 <putchar_unlocked@plt+0xc18>
   11bc8:	cmp	r8, #0
   11bcc:	beq	11ee4 <putchar_unlocked@plt+0xf2c>
   11bd0:	cmp	r5, #0
   11bd4:	cmpne	r8, #0
   11bd8:	beq	11bc8 <putchar_unlocked@plt+0xc10>
   11bdc:	movw	r0, #24908	; 0x614c
   11be0:	movt	r0, #2
   11be4:	ldr	r0, [r0]
   11be8:	str	r0, [sp, #24]
   11bec:	mov	r0, #0
   11bf0:	str	r0, [sp, #16]
   11bf4:	mov	r6, #0
   11bf8:	mov	r4, #0
   11bfc:	ldr	r0, [r7, r6, lsl #2]
   11c00:	cmp	r0, #0
   11c04:	beq	11cd0 <putchar_unlocked@plt+0xd18>
   11c08:	str	r8, [sp, #20]
   11c0c:	bl	10dfc <getc_unlocked@plt>
   11c10:	mov	r8, r0
   11c14:	bl	10ef8 <__errno_location@plt>
   11c18:	ldr	r5, [r0]
   11c1c:	cmp	r4, #0
   11c20:	beq	11cd8 <putchar_unlocked@plt+0xd20>
   11c24:	cmn	r8, #1
   11c28:	beq	11cd8 <putchar_unlocked@plt+0xd20>
   11c2c:	movw	r0, #24892	; 0x613c
   11c30:	movt	r0, #2
   11c34:	ldr	r3, [r0]
   11c38:	ldr	r0, [sp, #8]
   11c3c:	mov	r1, #1
   11c40:	mov	r2, r4
   11c44:	bl	10df0 <fwrite_unlocked@plt>
   11c48:	mov	r9, #0
   11c4c:	cmp	r0, r4
   11c50:	bne	11f04 <putchar_unlocked@plt+0xf4c>
   11c54:	cmn	r8, #1
   11c58:	beq	11ce4 <putchar_unlocked@plt+0xd2c>
   11c5c:	ldr	r5, [sp, #12]
   11c60:	ldrb	r0, [sl]
   11c64:	cmp	r0, #0
   11c68:	mov	r0, #10
   11c6c:	movwne	r0, #0
   11c70:	cmp	r8, r0
   11c74:	beq	11c98 <putchar_unlocked@plt+0xce0>
   11c78:	uxtb	r0, r8
   11c7c:	bl	11f60 <putchar_unlocked@plt+0xfa8>
   11c80:	ldr	r0, [r7, r6, lsl #2]
   11c84:	bl	10dfc <getc_unlocked@plt>
   11c88:	mov	r8, r0
   11c8c:	cmn	r0, #1
   11c90:	bne	11c60 <putchar_unlocked@plt+0xca8>
   11c94:	mvn	r8, #0
   11c98:	add	r0, r6, #1
   11c9c:	cmp	r0, r5
   11ca0:	bne	11d78 <putchar_unlocked@plt+0xdc0>
   11ca4:	ldrb	r0, [sl]
   11ca8:	cmp	r0, #0
   11cac:	mov	r0, #10
   11cb0:	movwne	r0, #0
   11cb4:	cmn	r8, #1
   11cb8:	movne	r0, r8
   11cbc:	uxtb	r0, r0
   11cc0:	bl	11f60 <putchar_unlocked@plt+0xfa8>
   11cc4:	mov	r0, #1
   11cc8:	str	r0, [sp, #16]
   11ccc:	b	11ddc <putchar_unlocked@plt+0xe24>
   11cd0:	mov	r9, r4
   11cd4:	b	11dec <putchar_unlocked@plt+0xe34>
   11cd8:	mov	r9, r4
   11cdc:	cmn	r8, #1
   11ce0:	bne	11c5c <putchar_unlocked@plt+0xca4>
   11ce4:	ldr	r0, [r7, r6, lsl #2]
   11ce8:	cmp	r0, #0
   11cec:	beq	11de4 <putchar_unlocked@plt+0xe2c>
   11cf0:	bl	10e68 <ferror_unlocked@plt>
   11cf4:	cmp	r0, #0
   11cf8:	moveq	r5, r0
   11cfc:	ldr	r0, [r7, r6, lsl #2]
   11d00:	movw	r1, #24888	; 0x6138
   11d04:	movt	r1, #2
   11d08:	ldr	r1, [r1]
   11d0c:	cmp	r0, r1
   11d10:	ldr	r8, [sp, #20]
   11d14:	beq	11eb8 <putchar_unlocked@plt+0xf00>
   11d18:	bl	120f4 <putchar_unlocked@plt+0x113c>
   11d1c:	cmp	r5, #0
   11d20:	cmneq	r0, #1
   11d24:	beq	11ec8 <putchar_unlocked@plt+0xf10>
   11d28:	cmp	r5, #0
   11d2c:	beq	11d64 <putchar_unlocked@plt+0xdac>
   11d30:	ldr	r0, [sp, #4]
   11d34:	ldr	r2, [r0, r6, lsl #2]
   11d38:	mov	r0, #0
   11d3c:	str	r0, [sp]
   11d40:	mov	r0, #0
   11d44:	mov	r1, #3
   11d48:	bl	13980 <putchar_unlocked@plt+0x29c8>
   11d4c:	mov	r3, r0
   11d50:	mov	r0, #0
   11d54:	mov	r1, r5
   11d58:	movw	r2, #20771	; 0x5123
   11d5c:	movt	r2, #1
   11d60:	bl	10e80 <error@plt>
   11d64:	mov	r0, #0
   11d68:	str	r0, [r7, r6, lsl #2]
   11d6c:	sub	r8, r8, #1
   11d70:	ldr	r5, [sp, #12]
   11d74:	b	11dec <putchar_unlocked@plt+0xe34>
   11d78:	ldrb	r0, [sl]
   11d7c:	cmp	r0, #0
   11d80:	mov	r0, #10
   11d84:	movwne	r0, #0
   11d88:	cmn	r8, #1
   11d8c:	cmpne	r8, r0
   11d90:	uxtbne	r0, r8
   11d94:	blne	11f60 <putchar_unlocked@plt+0xfa8>
   11d98:	ldr	r0, [sp, #24]
   11d9c:	ldrb	r0, [r0]
   11da0:	cmp	r0, #0
   11da4:	blne	11f60 <putchar_unlocked@plt+0xfa8>
   11da8:	movw	r0, #24912	; 0x6150
   11dac:	movt	r0, #2
   11db0:	ldr	r0, [r0]
   11db4:	movw	r1, #24908	; 0x614c
   11db8:	movt	r1, #2
   11dbc:	ldr	r1, [r1]
   11dc0:	ldr	r2, [sp, #24]
   11dc4:	add	r2, r2, #1
   11dc8:	cmp	r2, r0
   11dcc:	movne	r1, r2
   11dd0:	mov	r0, #1
   11dd4:	str	r0, [sp, #16]
   11dd8:	str	r1, [sp, #24]
   11ddc:	ldr	r8, [sp, #20]
   11de0:	b	11e9c <putchar_unlocked@plt+0xee4>
   11de4:	ldr	r5, [sp, #12]
   11de8:	ldr	r8, [sp, #20]
   11dec:	add	r0, r6, #1
   11df0:	cmp	r0, r5
   11df4:	bne	11e4c <putchar_unlocked@plt+0xe94>
   11df8:	ldr	r0, [sp, #16]
   11dfc:	tst	r0, #1
   11e00:	beq	11e94 <putchar_unlocked@plt+0xedc>
   11e04:	cmp	r9, #0
   11e08:	beq	11e30 <putchar_unlocked@plt+0xe78>
   11e0c:	movw	r0, #24892	; 0x613c
   11e10:	movt	r0, #2
   11e14:	ldr	r3, [r0]
   11e18:	ldr	r0, [sp, #8]
   11e1c:	mov	r1, #1
   11e20:	mov	r2, r9
   11e24:	bl	10df0 <fwrite_unlocked@plt>
   11e28:	cmp	r0, r9
   11e2c:	bne	11f04 <putchar_unlocked@plt+0xf4c>
   11e30:	ldrb	r0, [sl]
   11e34:	cmp	r0, #0
   11e38:	mov	r0, #10
   11e3c:	movwne	r0, #0
   11e40:	bl	11f60 <putchar_unlocked@plt+0xfa8>
   11e44:	mov	r9, #0
   11e48:	b	11e9c <putchar_unlocked@plt+0xee4>
   11e4c:	ldr	r0, [sp, #24]
   11e50:	ldrb	r0, [r0]
   11e54:	cmp	r0, #0
   11e58:	ldrne	r1, [sp, #8]
   11e5c:	strbne	r0, [r1, r9]
   11e60:	addne	r9, r9, #1
   11e64:	movw	r0, #24912	; 0x6150
   11e68:	movt	r0, #2
   11e6c:	ldr	r0, [r0]
   11e70:	movw	r1, #24908	; 0x614c
   11e74:	movt	r1, #2
   11e78:	ldr	r1, [r1]
   11e7c:	ldr	r2, [sp, #24]
   11e80:	add	r2, r2, #1
   11e84:	cmp	r2, r0
   11e88:	movne	r1, r2
   11e8c:	str	r1, [sp, #24]
   11e90:	b	11e9c <putchar_unlocked@plt+0xee4>
   11e94:	mov	r0, #0
   11e98:	str	r0, [sp, #16]
   11e9c:	add	r6, r6, #1
   11ea0:	cmp	r6, r5
   11ea4:	bcs	11bc8 <putchar_unlocked@plt+0xc10>
   11ea8:	cmp	r8, #0
   11eac:	mov	r4, r9
   11eb0:	bne	11bfc <putchar_unlocked@plt+0xc44>
   11eb4:	b	11bc8 <putchar_unlocked@plt+0xc10>
   11eb8:	bl	10f7c <clearerr_unlocked@plt>
   11ebc:	cmp	r5, #0
   11ec0:	bne	11d30 <putchar_unlocked@plt+0xd78>
   11ec4:	b	11d64 <putchar_unlocked@plt+0xdac>
   11ec8:	bl	10ef8 <__errno_location@plt>
   11ecc:	ldr	r5, [r0]
   11ed0:	cmp	r5, #0
   11ed4:	bne	11d30 <putchar_unlocked@plt+0xd78>
   11ed8:	b	11d64 <putchar_unlocked@plt+0xdac>
   11edc:	mov	r0, #1
   11ee0:	str	r0, [sp]
   11ee4:	mov	r0, r7
   11ee8:	bl	121fc <putchar_unlocked@plt+0x1244>
   11eec:	ldr	r0, [sp, #8]
   11ef0:	bl	121fc <putchar_unlocked@plt+0x1244>
   11ef4:	ldr	r0, [sp]
   11ef8:	and	r0, r0, #1
   11efc:	sub	sp, fp, #28
   11f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f04:	bl	11f78 <putchar_unlocked@plt+0xfc0>
   11f08:	bl	10ef8 <__errno_location@plt>
   11f0c:	ldr	r1, [sp, #4]
   11f10:	ldr	r2, [r1, r9, lsl #2]
   11f14:	ldr	r4, [r0]
   11f18:	mov	r0, #0
   11f1c:	mov	r1, #3
   11f20:	bl	13980 <putchar_unlocked@plt+0x29c8>
   11f24:	mov	r3, r0
   11f28:	movw	r2, #20771	; 0x5123
   11f2c:	movt	r2, #1
   11f30:	mov	r0, #1
   11f34:	mov	r1, r4
   11f38:	bl	10e80 <error@plt>
   11f3c:	movw	r1, #21275	; 0x531b
   11f40:	movt	r1, #1
   11f44:	mov	r0, #0
   11f48:	mov	r2, #5
   11f4c:	bl	10e08 <dcgettext@plt>
   11f50:	mov	r2, r0
   11f54:	mov	r0, #1
   11f58:	mov	r1, #0
   11f5c:	bl	10e80 <error@plt>
   11f60:	push	{fp, lr}
   11f64:	mov	fp, sp
   11f68:	bl	10fb8 <putchar_unlocked@plt>
   11f6c:	cmn	r0, #1
   11f70:	popgt	{fp, pc}
   11f74:	bl	11f78 <putchar_unlocked@plt+0xfc0>
   11f78:	push	{fp, lr}
   11f7c:	mov	fp, sp
   11f80:	bl	10ef8 <__errno_location@plt>
   11f84:	ldr	r4, [r0]
   11f88:	movw	r1, #21263	; 0x530f
   11f8c:	movt	r1, #1
   11f90:	mov	r0, #0
   11f94:	mov	r2, #5
   11f98:	bl	10e08 <dcgettext@plt>
   11f9c:	mov	r2, r0
   11fa0:	mov	r0, #1
   11fa4:	mov	r1, r4
   11fa8:	bl	10e80 <error@plt>
   11fac:	movw	r1, #24916	; 0x6154
   11fb0:	movt	r1, #2
   11fb4:	str	r0, [r1]
   11fb8:	bx	lr
   11fbc:	movw	r1, #24920	; 0x6158
   11fc0:	movt	r1, #2
   11fc4:	strb	r0, [r1]
   11fc8:	bx	lr
   11fcc:	push	{r4, r5, r6, sl, fp, lr}
   11fd0:	add	fp, sp, #16
   11fd4:	sub	sp, sp, #8
   11fd8:	movw	r0, #24892	; 0x613c
   11fdc:	movt	r0, #2
   11fe0:	ldr	r0, [r0]
   11fe4:	bl	14b68 <putchar_unlocked@plt+0x3bb0>
   11fe8:	cmp	r0, #0
   11fec:	beq	12014 <putchar_unlocked@plt+0x105c>
   11ff0:	movw	r0, #24920	; 0x6158
   11ff4:	movt	r0, #2
   11ff8:	ldrb	r0, [r0]
   11ffc:	cmp	r0, #0
   12000:	beq	12034 <putchar_unlocked@plt+0x107c>
   12004:	bl	10ef8 <__errno_location@plt>
   12008:	ldr	r0, [r0]
   1200c:	cmp	r0, #32
   12010:	bne	12034 <putchar_unlocked@plt+0x107c>
   12014:	movw	r0, #24880	; 0x6130
   12018:	movt	r0, #2
   1201c:	ldr	r0, [r0]
   12020:	bl	14b68 <putchar_unlocked@plt+0x3bb0>
   12024:	cmp	r0, #0
   12028:	subeq	sp, fp, #16
   1202c:	popeq	{r4, r5, r6, sl, fp, pc}
   12030:	b	120a4 <putchar_unlocked@plt+0x10ec>
   12034:	movw	r1, #21263	; 0x530f
   12038:	movt	r1, #1
   1203c:	mov	r0, #0
   12040:	mov	r2, #5
   12044:	bl	10e08 <dcgettext@plt>
   12048:	mov	r4, r0
   1204c:	movw	r0, #24916	; 0x6154
   12050:	movt	r0, #2
   12054:	ldr	r6, [r0]
   12058:	bl	10ef8 <__errno_location@plt>
   1205c:	ldr	r5, [r0]
   12060:	cmp	r6, #0
   12064:	bne	12080 <putchar_unlocked@plt+0x10c8>
   12068:	movw	r2, #20771	; 0x5123
   1206c:	movt	r2, #1
   12070:	mov	r0, #0
   12074:	mov	r1, r5
   12078:	mov	r3, r4
   1207c:	b	120a0 <putchar_unlocked@plt+0x10e8>
   12080:	mov	r0, r6
   12084:	bl	13970 <putchar_unlocked@plt+0x29b8>
   12088:	mov	r3, r0
   1208c:	str	r4, [sp]
   12090:	movw	r2, #21471	; 0x53df
   12094:	movt	r2, #1
   12098:	mov	r0, #0
   1209c:	mov	r1, r5
   120a0:	bl	10e80 <error@plt>
   120a4:	movw	r0, #24796	; 0x60dc
   120a8:	movt	r0, #2
   120ac:	ldr	r0, [r0]
   120b0:	bl	10dcc <_exit@plt>
   120b4:	b	10da8 <posix_fadvise64@plt>
   120b8:	cmp	r0, #0
   120bc:	bxeq	lr
   120c0:	push	{r4, sl, fp, lr}
   120c4:	add	fp, sp, #8
   120c8:	sub	sp, sp, #16
   120cc:	mov	r4, r1
   120d0:	bl	10f28 <fileno@plt>
   120d4:	mov	r1, #0
   120d8:	str	r1, [sp]
   120dc:	stmib	sp, {r1, r4}
   120e0:	mov	r2, #0
   120e4:	mov	r3, #0
   120e8:	bl	120b4 <putchar_unlocked@plt+0x10fc>
   120ec:	sub	sp, fp, #8
   120f0:	pop	{r4, sl, fp, pc}
   120f4:	push	{r4, r5, fp, lr}
   120f8:	add	fp, sp, #8
   120fc:	sub	sp, sp, #8
   12100:	mov	r4, r0
   12104:	bl	10f28 <fileno@plt>
   12108:	cmn	r0, #1
   1210c:	ble	12184 <putchar_unlocked@plt+0x11cc>
   12110:	mov	r0, r4
   12114:	bl	10ea4 <__freading@plt>
   12118:	cmp	r0, #0
   1211c:	beq	12148 <putchar_unlocked@plt+0x1190>
   12120:	mov	r0, r4
   12124:	bl	10f28 <fileno@plt>
   12128:	mov	r1, #1
   1212c:	str	r1, [sp]
   12130:	mov	r2, #0
   12134:	mov	r3, #0
   12138:	bl	10e44 <lseek64@plt>
   1213c:	and	r0, r0, r1
   12140:	cmn	r0, #1
   12144:	beq	12184 <putchar_unlocked@plt+0x11cc>
   12148:	mov	r0, r4
   1214c:	bl	12194 <putchar_unlocked@plt+0x11dc>
   12150:	cmp	r0, #0
   12154:	beq	12184 <putchar_unlocked@plt+0x11cc>
   12158:	bl	10ef8 <__errno_location@plt>
   1215c:	ldr	r5, [r0]
   12160:	mov	r0, r4
   12164:	bl	10f40 <fclose@plt>
   12168:	cmp	r5, #0
   1216c:	beq	1217c <putchar_unlocked@plt+0x11c4>
   12170:	bl	10ef8 <__errno_location@plt>
   12174:	str	r5, [r0]
   12178:	mvn	r0, #0
   1217c:	sub	sp, fp, #8
   12180:	pop	{r4, r5, fp, pc}
   12184:	mov	r0, r4
   12188:	sub	sp, fp, #8
   1218c:	pop	{r4, r5, fp, lr}
   12190:	b	10f40 <fclose@plt>
   12194:	push	{r4, sl, fp, lr}
   12198:	add	fp, sp, #8
   1219c:	mov	r4, r0
   121a0:	cmp	r0, #0
   121a4:	beq	121bc <putchar_unlocked@plt+0x1204>
   121a8:	mov	r0, r4
   121ac:	bl	10ea4 <__freading@plt>
   121b0:	cmp	r0, #0
   121b4:	movne	r0, r4
   121b8:	blne	121c8 <putchar_unlocked@plt+0x1210>
   121bc:	mov	r0, r4
   121c0:	pop	{r4, sl, fp, lr}
   121c4:	b	10db4 <fflush@plt>
   121c8:	push	{fp, lr}
   121cc:	mov	fp, sp
   121d0:	sub	sp, sp, #8
   121d4:	ldrb	r1, [r0, #1]
   121d8:	tst	r1, #1
   121dc:	beq	121f4 <putchar_unlocked@plt+0x123c>
   121e0:	mov	r1, #1
   121e4:	str	r1, [sp]
   121e8:	mov	r2, #0
   121ec:	mov	r3, #0
   121f0:	bl	12224 <putchar_unlocked@plt+0x126c>
   121f4:	mov	sp, fp
   121f8:	pop	{fp, pc}
   121fc:	push	{r4, r5, r6, sl, fp, lr}
   12200:	add	fp, sp, #16
   12204:	mov	r4, r0
   12208:	bl	10ef8 <__errno_location@plt>
   1220c:	mov	r5, r0
   12210:	ldr	r6, [r0]
   12214:	mov	r0, r4
   12218:	bl	10dc0 <free@plt>
   1221c:	str	r6, [r5]
   12220:	pop	{r4, r5, r6, sl, fp, pc}
   12224:	push	{r4, r5, r6, r7, fp, lr}
   12228:	add	fp, sp, #16
   1222c:	sub	sp, sp, #8
   12230:	mov	r5, r3
   12234:	mov	r6, r2
   12238:	mov	r4, r0
   1223c:	ldr	r0, [r0, #4]
   12240:	ldr	r1, [r4, #8]
   12244:	cmp	r1, r0
   12248:	bne	12264 <putchar_unlocked@plt+0x12ac>
   1224c:	ldrd	r0, [r4, #16]
   12250:	cmp	r1, r0
   12254:	bne	12264 <putchar_unlocked@plt+0x12ac>
   12258:	ldr	r0, [r4, #36]	; 0x24
   1225c:	cmp	r0, #0
   12260:	beq	1227c <putchar_unlocked@plt+0x12c4>
   12264:	mov	r0, r4
   12268:	mov	r2, r6
   1226c:	mov	r3, r5
   12270:	sub	sp, fp, #16
   12274:	pop	{r4, r5, r6, r7, fp, lr}
   12278:	b	10f4c <fseeko64@plt>
   1227c:	ldr	r7, [fp, #8]
   12280:	mov	r0, r4
   12284:	bl	10f28 <fileno@plt>
   12288:	str	r7, [sp]
   1228c:	mov	r2, r6
   12290:	mov	r3, r5
   12294:	bl	10e44 <lseek64@plt>
   12298:	and	r2, r0, r1
   1229c:	cmn	r2, #1
   122a0:	beq	122c0 <putchar_unlocked@plt+0x1308>
   122a4:	strd	r0, [r4, #80]	; 0x50
   122a8:	ldr	r0, [r4]
   122ac:	bic	r0, r0, #16
   122b0:	str	r0, [r4]
   122b4:	mov	r0, #0
   122b8:	sub	sp, fp, #16
   122bc:	pop	{r4, r5, r6, r7, fp, pc}
   122c0:	mvn	r0, #0
   122c4:	sub	sp, fp, #16
   122c8:	pop	{r4, r5, r6, r7, fp, pc}
   122cc:	push	{r4, r5, fp, lr}
   122d0:	add	fp, sp, #8
   122d4:	cmp	r0, #0
   122d8:	beq	1236c <putchar_unlocked@plt+0x13b4>
   122dc:	mov	r4, r0
   122e0:	mov	r1, #47	; 0x2f
   122e4:	bl	10f64 <strrchr@plt>
   122e8:	cmp	r0, #0
   122ec:	mov	r5, r4
   122f0:	addne	r5, r0, #1
   122f4:	sub	r0, r5, r4
   122f8:	cmp	r0, #7
   122fc:	blt	12350 <putchar_unlocked@plt+0x1398>
   12300:	sub	r0, r5, #7
   12304:	movw	r1, #21534	; 0x541e
   12308:	movt	r1, #1
   1230c:	mov	r2, #7
   12310:	bl	10fa0 <strncmp@plt>
   12314:	cmp	r0, #0
   12318:	bne	12350 <putchar_unlocked@plt+0x1398>
   1231c:	movw	r1, #21542	; 0x5426
   12320:	movt	r1, #1
   12324:	mov	r0, r5
   12328:	mov	r2, #3
   1232c:	bl	10fa0 <strncmp@plt>
   12330:	cmp	r0, #0
   12334:	beq	12340 <putchar_unlocked@plt+0x1388>
   12338:	mov	r4, r5
   1233c:	b	12350 <putchar_unlocked@plt+0x1398>
   12340:	add	r4, r5, #3
   12344:	movw	r0, #24864	; 0x6120
   12348:	movt	r0, #2
   1234c:	str	r4, [r0]
   12350:	movw	r0, #24868	; 0x6124
   12354:	movt	r0, #2
   12358:	str	r4, [r0]
   1235c:	movw	r0, #24924	; 0x615c
   12360:	movt	r0, #2
   12364:	str	r4, [r0]
   12368:	pop	{r4, r5, fp, pc}
   1236c:	movw	r0, #24880	; 0x6130
   12370:	movt	r0, #2
   12374:	ldr	r3, [r0]
   12378:	movw	r0, #21478	; 0x53e6
   1237c:	movt	r0, #1
   12380:	mov	r1, #55	; 0x37
   12384:	mov	r2, #1
   12388:	bl	10e38 <fwrite@plt>
   1238c:	bl	10fac <abort@plt>
   12390:	push	{r4, r5, r6, sl, fp, lr}
   12394:	add	fp, sp, #16
   12398:	mov	r4, r0
   1239c:	movw	r0, #24928	; 0x6160
   123a0:	movt	r0, #2
   123a4:	cmp	r4, #0
   123a8:	moveq	r4, r0
   123ac:	bl	10ef8 <__errno_location@plt>
   123b0:	mov	r5, r0
   123b4:	ldr	r6, [r0]
   123b8:	mov	r0, r4
   123bc:	mov	r1, #48	; 0x30
   123c0:	bl	14688 <putchar_unlocked@plt+0x36d0>
   123c4:	str	r6, [r5]
   123c8:	pop	{r4, r5, r6, sl, fp, pc}
   123cc:	movw	r1, #24928	; 0x6160
   123d0:	movt	r1, #2
   123d4:	cmp	r0, #0
   123d8:	movne	r1, r0
   123dc:	ldr	r0, [r1]
   123e0:	bx	lr
   123e4:	movw	r2, #24928	; 0x6160
   123e8:	movt	r2, #2
   123ec:	cmp	r0, #0
   123f0:	movne	r2, r0
   123f4:	str	r1, [r2]
   123f8:	bx	lr
   123fc:	movw	r3, #24928	; 0x6160
   12400:	movt	r3, #2
   12404:	cmp	r0, #0
   12408:	movne	r3, r0
   1240c:	ubfx	r0, r1, #5, #3
   12410:	add	ip, r3, r0, lsl #2
   12414:	ldr	r3, [ip, #8]
   12418:	and	r1, r1, #31
   1241c:	mov	r0, #1
   12420:	and	r0, r0, r3, lsr r1
   12424:	and	r2, r2, #1
   12428:	eor	r2, r0, r2
   1242c:	eor	r1, r3, r2, lsl r1
   12430:	str	r1, [ip, #8]
   12434:	bx	lr
   12438:	movw	r2, #24928	; 0x6160
   1243c:	movt	r2, #2
   12440:	cmp	r0, #0
   12444:	movne	r2, r0
   12448:	ldr	r0, [r2, #4]
   1244c:	str	r1, [r2, #4]
   12450:	bx	lr
   12454:	push	{fp, lr}
   12458:	mov	fp, sp
   1245c:	movw	r3, #24928	; 0x6160
   12460:	movt	r3, #2
   12464:	cmp	r0, #0
   12468:	movne	r3, r0
   1246c:	mov	r0, #10
   12470:	str	r0, [r3]
   12474:	cmp	r1, #0
   12478:	cmpne	r2, #0
   1247c:	bne	12484 <putchar_unlocked@plt+0x14cc>
   12480:	bl	10fac <abort@plt>
   12484:	str	r1, [r3, #40]	; 0x28
   12488:	str	r2, [r3, #44]	; 0x2c
   1248c:	pop	{fp, pc}
   12490:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12494:	add	fp, sp, #28
   12498:	sub	sp, sp, #20
   1249c:	mov	r8, r3
   124a0:	mov	r9, r2
   124a4:	mov	sl, r1
   124a8:	mov	r7, r0
   124ac:	ldr	r0, [fp, #8]
   124b0:	movw	r5, #24928	; 0x6160
   124b4:	movt	r5, #2
   124b8:	cmp	r0, #0
   124bc:	movne	r5, r0
   124c0:	bl	10ef8 <__errno_location@plt>
   124c4:	mov	r4, r0
   124c8:	ldm	r5, {r0, r1}
   124cc:	ldr	r2, [r5, #40]	; 0x28
   124d0:	ldr	r3, [r5, #44]	; 0x2c
   124d4:	ldr	r6, [r4]
   124d8:	add	r5, r5, #8
   124dc:	stm	sp, {r0, r1, r5}
   124e0:	str	r2, [sp, #12]
   124e4:	str	r3, [sp, #16]
   124e8:	mov	r0, r7
   124ec:	mov	r1, sl
   124f0:	mov	r2, r9
   124f4:	mov	r3, r8
   124f8:	bl	12508 <putchar_unlocked@plt+0x1550>
   124fc:	str	r6, [r4]
   12500:	sub	sp, fp, #28
   12504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1250c:	add	fp, sp, #28
   12510:	sub	sp, sp, #156	; 0x9c
   12514:	mov	r9, r3
   12518:	mov	r7, r1
   1251c:	mov	r6, r0
   12520:	str	r2, [fp, #-80]	; 0xffffffb0
   12524:	add	r0, r2, #1
   12528:	str	r0, [sp, #76]	; 0x4c
   1252c:	ldr	r0, [fp, #12]
   12530:	and	r1, r0, #1
   12534:	str	r1, [sp, #40]	; 0x28
   12538:	and	r1, r0, #4
   1253c:	str	r1, [sp, #36]	; 0x24
   12540:	ubfx	r4, r0, #1, #1
   12544:	bl	10e50 <__ctype_get_mb_cur_max@plt>
   12548:	str	r0, [sp, #44]	; 0x2c
   1254c:	ldr	r0, [fp, #24]
   12550:	str	r0, [sp, #88]	; 0x58
   12554:	ldr	r0, [fp, #20]
   12558:	str	r0, [sp, #80]	; 0x50
   1255c:	ldr	r1, [fp, #8]
   12560:	mov	r0, #0
   12564:	str	r0, [sp, #84]	; 0x54
   12568:	mov	r0, #0
   1256c:	str	r0, [fp, #-84]	; 0xffffffac
   12570:	mov	r0, #0
   12574:	str	r0, [fp, #-72]	; 0xffffffb8
   12578:	mov	r0, #0
   1257c:	mov	r2, #0
   12580:	str	r2, [fp, #-56]	; 0xffffffc8
   12584:	mov	r2, #0
   12588:	str	r2, [sp, #64]	; 0x40
   1258c:	mov	r2, #1
   12590:	str	r2, [fp, #-48]	; 0xffffffd0
   12594:	cmp	r1, #10
   12598:	bhi	134c4 <putchar_unlocked@plt+0x250c>
   1259c:	mov	sl, r7
   125a0:	mov	r7, r1
   125a4:	add	r1, pc, #24
   125a8:	mov	r8, #0
   125ac:	mov	r2, #1
   125b0:	mov	r3, #0
   125b4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   125b8:	mov	lr, r9
   125bc:	mov	r5, r6
   125c0:	ldr	pc, [r1, r7, lsl #2]
   125c4:	muleq	r1, r8, r6
   125c8:	ldrdeq	r2, [r1], -r8
   125cc:	andeq	r2, r1, r8, lsr #13
   125d0:	muleq	r1, r0, r6
   125d4:	andeq	r2, r1, ip, asr #13
   125d8:	andeq	r2, r1, ip, lsr #14
   125dc:			; <UNDEFINED> instruction: 0x000126b8
   125e0:	andeq	r2, r1, r8, lsl #15
   125e4:	strdeq	r2, [r1], -r0
   125e8:	strdeq	r2, [r1], -r0
   125ec:	andeq	r2, r1, ip, lsl r6
   125f0:	movw	r0, #21626	; 0x547a
   125f4:	movt	r0, #1
   125f8:	mov	r1, r7
   125fc:	bl	13acc <putchar_unlocked@plt+0x2b14>
   12600:	str	r0, [sp, #80]	; 0x50
   12604:	movw	r0, #21628	; 0x547c
   12608:	movt	r0, #1
   1260c:	mov	r1, r7
   12610:	bl	13acc <putchar_unlocked@plt+0x2b14>
   12614:	mov	r5, r6
   12618:	str	r0, [sp, #88]	; 0x58
   1261c:	mov	r8, #0
   12620:	tst	r4, #1
   12624:	str	r7, [fp, #-64]	; 0xffffffc0
   12628:	bne	12660 <putchar_unlocked@plt+0x16a8>
   1262c:	ldr	r0, [sp, #80]	; 0x50
   12630:	ldrb	r0, [r0]
   12634:	cmp	r0, #0
   12638:	beq	12660 <putchar_unlocked@plt+0x16a8>
   1263c:	ldr	r1, [sp, #80]	; 0x50
   12640:	add	r1, r1, #1
   12644:	mov	r8, #0
   12648:	cmp	r8, sl
   1264c:	strbcc	r0, [r5, r8]
   12650:	ldrb	r0, [r1, r8]
   12654:	add	r8, r8, #1
   12658:	cmp	r0, #0
   1265c:	bne	12648 <putchar_unlocked@plt+0x1690>
   12660:	ldr	r7, [sp, #88]	; 0x58
   12664:	mov	r0, r7
   12668:	bl	10eec <strlen@plt>
   1266c:	mov	r5, r6
   12670:	str	r0, [fp, #-72]	; 0xffffffb8
   12674:	str	r7, [fp, #-84]	; 0xffffffac
   12678:	mov	r2, #1
   1267c:	mov	r3, r4
   12680:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12684:	mov	lr, r9
   12688:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1268c:	b	12788 <putchar_unlocked@plt+0x17d0>
   12690:	mov	r0, #1
   12694:	b	126d8 <putchar_unlocked@plt+0x1720>
   12698:	mov	r7, #0
   1269c:	mov	r8, #0
   126a0:	mov	r2, r0
   126a4:	b	12784 <putchar_unlocked@plt+0x17cc>
   126a8:	tst	r4, #1
   126ac:	bne	126d8 <putchar_unlocked@plt+0x1720>
   126b0:	mov	r2, r0
   126b4:	b	12700 <putchar_unlocked@plt+0x1748>
   126b8:	mov	r0, #1
   126bc:	str	r0, [fp, #-72]	; 0xffffffb8
   126c0:	mov	r8, #0
   126c4:	mov	r7, #5
   126c8:	b	12744 <putchar_unlocked@plt+0x178c>
   126cc:	mov	r2, #1
   126d0:	tst	r4, #1
   126d4:	beq	12700 <putchar_unlocked@plt+0x1748>
   126d8:	mov	r1, #1
   126dc:	str	r1, [fp, #-72]	; 0xffffffb8
   126e0:	mov	r8, #0
   126e4:	mov	r7, #2
   126e8:	movw	r1, #21628	; 0x547c
   126ec:	movt	r1, #1
   126f0:	str	r1, [fp, #-84]	; 0xffffffac
   126f4:	mov	r2, r0
   126f8:	mov	r3, #1
   126fc:	b	12788 <putchar_unlocked@plt+0x17d0>
   12700:	mov	r8, #1
   12704:	mov	r7, #2
   12708:	cmp	sl, #0
   1270c:	movne	r0, #39	; 0x27
   12710:	strbne	r0, [r5]
   12714:	movw	r0, #21628	; 0x547c
   12718:	movt	r0, #1
   1271c:	str	r0, [fp, #-84]	; 0xffffffac
   12720:	mov	r0, #1
   12724:	str	r0, [fp, #-72]	; 0xffffffb8
   12728:	b	12784 <putchar_unlocked@plt+0x17cc>
   1272c:	mov	r7, #5
   12730:	tst	r4, #1
   12734:	beq	1275c <putchar_unlocked@plt+0x17a4>
   12738:	mov	r0, #1
   1273c:	str	r0, [fp, #-72]	; 0xffffffb8
   12740:	mov	r8, #0
   12744:	movw	r0, #21624	; 0x5478
   12748:	movt	r0, #1
   1274c:	str	r0, [fp, #-84]	; 0xffffffac
   12750:	mov	r2, #1
   12754:	mov	r3, #1
   12758:	b	12788 <putchar_unlocked@plt+0x17d0>
   1275c:	cmp	sl, #0
   12760:	movne	r0, #34	; 0x22
   12764:	strbne	r0, [r5]
   12768:	mov	r8, #1
   1276c:	movw	r0, #21624	; 0x5478
   12770:	movt	r0, #1
   12774:	str	r0, [fp, #-84]	; 0xffffffac
   12778:	mov	r0, #1
   1277c:	str	r0, [fp, #-72]	; 0xffffffb8
   12780:	mov	r2, #1
   12784:	mov	r3, #0
   12788:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1278c:	cmp	r0, #0
   12790:	movwne	r0, #1
   12794:	and	r1, r0, r3
   12798:	and	r1, r2, r1
   1279c:	str	r1, [sp, #56]	; 0x38
   127a0:	sub	r1, r7, #2
   127a4:	clz	r1, r1
   127a8:	lsr	r1, r1, #5
   127ac:	and	r1, r1, r3
   127b0:	str	r1, [sp, #68]	; 0x44
   127b4:	str	r7, [fp, #-64]	; 0xffffffc0
   127b8:	subs	r1, r7, #2
   127bc:	movwne	r1, #1
   127c0:	eor	r4, r3, #1
   127c4:	str	r4, [fp, #-88]	; 0xffffffa8
   127c8:	orr	r4, r1, r4
   127cc:	str	r4, [sp, #72]	; 0x48
   127d0:	and	r1, r1, r2
   127d4:	and	r0, r0, r1
   127d8:	str	r0, [fp, #-60]	; 0xffffffc4
   127dc:	str	r3, [fp, #-76]	; 0xffffffb4
   127e0:	orr	r0, r1, r3
   127e4:	eor	r0, r0, #1
   127e8:	ldr	r1, [fp, #16]
   127ec:	clz	r1, r1
   127f0:	lsr	r1, r1, #5
   127f4:	orr	r0, r1, r0
   127f8:	str	r0, [fp, #-68]	; 0xffffffbc
   127fc:	str	r2, [sp, #92]	; 0x5c
   12800:	eor	r0, r2, #1
   12804:	str	r0, [sp, #60]	; 0x3c
   12808:	mov	r7, #0
   1280c:	cmn	lr, #1
   12810:	beq	12820 <putchar_unlocked@plt+0x1868>
   12814:	cmp	r7, lr
   12818:	bne	1282c <putchar_unlocked@plt+0x1874>
   1281c:	b	13338 <putchar_unlocked@plt+0x2380>
   12820:	ldrb	r0, [ip, r7]
   12824:	cmp	r0, #0
   12828:	beq	13338 <putchar_unlocked@plt+0x2380>
   1282c:	mov	r9, #0
   12830:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12834:	cmp	r0, #0
   12838:	beq	1286c <putchar_unlocked@plt+0x18b4>
   1283c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12840:	add	r4, r7, r0
   12844:	cmp	r0, #2
   12848:	bcc	12864 <putchar_unlocked@plt+0x18ac>
   1284c:	cmn	lr, #1
   12850:	bne	12864 <putchar_unlocked@plt+0x18ac>
   12854:	mov	r0, ip
   12858:	bl	10eec <strlen@plt>
   1285c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12860:	mov	lr, r0
   12864:	cmp	r4, lr
   12868:	bls	12878 <putchar_unlocked@plt+0x18c0>
   1286c:	mov	r0, #0
   12870:	str	r0, [fp, #-52]	; 0xffffffcc
   12874:	b	128bc <putchar_unlocked@plt+0x1904>
   12878:	mov	r4, lr
   1287c:	add	r0, ip, r7
   12880:	ldr	r1, [fp, #-84]	; 0xffffffac
   12884:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12888:	bl	10ee0 <bcmp@plt>
   1288c:	cmp	r0, #0
   12890:	mov	r1, r0
   12894:	movwne	r1, #1
   12898:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1289c:	orr	r1, r1, r2
   128a0:	tst	r1, #1
   128a4:	beq	1340c <putchar_unlocked@plt+0x2454>
   128a8:	clz	r0, r0
   128ac:	lsr	r0, r0, #5
   128b0:	str	r0, [fp, #-52]	; 0xffffffcc
   128b4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   128b8:	mov	lr, r4
   128bc:	ldrb	r4, [ip, r7]
   128c0:	cmp	r4, #126	; 0x7e
   128c4:	bhi	12df4 <putchar_unlocked@plt+0x1e3c>
   128c8:	mov	r6, #1
   128cc:	mov	r2, #110	; 0x6e
   128d0:	mov	r0, #97	; 0x61
   128d4:	add	r3, pc, #4
   128d8:	mov	r1, #0
   128dc:	ldr	pc, [r3, r4, lsl #2]
   128e0:	andeq	r2, r1, r4, asr ip
   128e4:	strdeq	r2, [r1], -r4
   128e8:	strdeq	r2, [r1], -r4
   128ec:	strdeq	r2, [r1], -r4
   128f0:	strdeq	r2, [r1], -r4
   128f4:	strdeq	r2, [r1], -r4
   128f8:	strdeq	r2, [r1], -r4
   128fc:	andeq	r2, r1, r8, asr #29
   12900:	andeq	r2, r1, r4, lsr ip
   12904:	andeq	r2, r1, ip, lsr #24
   12908:	andeq	r2, r1, r0, asr #24
   1290c:	andeq	r2, r1, ip, asr sp
   12910:	andeq	r2, r1, r4, lsr #24
   12914:	andeq	r2, r1, ip, lsr ip
   12918:	strdeq	r2, [r1], -r4
   1291c:	strdeq	r2, [r1], -r4
   12920:	strdeq	r2, [r1], -r4
   12924:	strdeq	r2, [r1], -r4
   12928:	strdeq	r2, [r1], -r4
   1292c:	strdeq	r2, [r1], -r4
   12930:	strdeq	r2, [r1], -r4
   12934:	strdeq	r2, [r1], -r4
   12938:	strdeq	r2, [r1], -r4
   1293c:	strdeq	r2, [r1], -r4
   12940:	strdeq	r2, [r1], -r4
   12944:	strdeq	r2, [r1], -r4
   12948:	strdeq	r2, [r1], -r4
   1294c:	strdeq	r2, [r1], -r4
   12950:	strdeq	r2, [r1], -r4
   12954:	strdeq	r2, [r1], -r4
   12958:	strdeq	r2, [r1], -r4
   1295c:	strdeq	r2, [r1], -r4
   12960:	ldrdeq	r2, [r1], -r8
   12964:	ldrdeq	r2, [r1], -ip
   12968:	ldrdeq	r2, [r1], -ip
   1296c:	andeq	r2, r1, r4, asr #23
   12970:	ldrdeq	r2, [r1], -ip
   12974:	ldrdeq	r2, [r1], -ip
   12978:	ldrdeq	r2, [r1], -ip
   1297c:	andeq	r2, r1, r4, ror #26
   12980:	ldrdeq	r2, [r1], -ip
   12984:	ldrdeq	r2, [r1], -ip
   12988:	ldrdeq	r2, [r1], -ip
   1298c:	ldrdeq	r2, [r1], -ip
   12990:	ldrdeq	r2, [r1], -ip
   12994:	ldrdeq	r2, [r1], -ip
   12998:	ldrdeq	r2, [r1], -ip
   1299c:	ldrdeq	r2, [r1], -ip
   129a0:	ldrdeq	r2, [r1], -ip
   129a4:	ldrdeq	r2, [r1], -ip
   129a8:	ldrdeq	r2, [r1], -ip
   129ac:	ldrdeq	r2, [r1], -ip
   129b0:	ldrdeq	r2, [r1], -ip
   129b4:	ldrdeq	r2, [r1], -ip
   129b8:	ldrdeq	r2, [r1], -ip
   129bc:	ldrdeq	r2, [r1], -ip
   129c0:	ldrdeq	r2, [r1], -ip
   129c4:	ldrdeq	r2, [r1], -ip
   129c8:	ldrdeq	r2, [r1], -ip
   129cc:	ldrdeq	r2, [r1], -ip
   129d0:	ldrdeq	r2, [r1], -ip
   129d4:	ldrdeq	r2, [r1], -ip
   129d8:	ldrdeq	r2, [r1], -ip
   129dc:	andeq	r2, r1, ip, lsr #26
   129e0:	strdeq	r2, [r1], -r4
   129e4:	ldrdeq	r2, [r1], -ip
   129e8:	ldrdeq	r2, [r1], -ip
   129ec:	ldrdeq	r2, [r1], -ip
   129f0:	ldrdeq	r2, [r1], -ip
   129f4:	ldrdeq	r2, [r1], -ip
   129f8:	ldrdeq	r2, [r1], -ip
   129fc:	ldrdeq	r2, [r1], -ip
   12a00:	ldrdeq	r2, [r1], -ip
   12a04:	ldrdeq	r2, [r1], -ip
   12a08:	ldrdeq	r2, [r1], -ip
   12a0c:	ldrdeq	r2, [r1], -ip
   12a10:	ldrdeq	r2, [r1], -ip
   12a14:	ldrdeq	r2, [r1], -ip
   12a18:	ldrdeq	r2, [r1], -ip
   12a1c:	ldrdeq	r2, [r1], -ip
   12a20:	ldrdeq	r2, [r1], -ip
   12a24:	ldrdeq	r2, [r1], -ip
   12a28:	ldrdeq	r2, [r1], -ip
   12a2c:	ldrdeq	r2, [r1], -ip
   12a30:	ldrdeq	r2, [r1], -ip
   12a34:	ldrdeq	r2, [r1], -ip
   12a38:	ldrdeq	r2, [r1], -ip
   12a3c:	ldrdeq	r2, [r1], -ip
   12a40:	ldrdeq	r2, [r1], -ip
   12a44:	ldrdeq	r2, [r1], -ip
   12a48:	ldrdeq	r2, [r1], -ip
   12a4c:	ldrdeq	r2, [r1], -ip
   12a50:	andeq	r2, r1, r4, lsl #24
   12a54:	ldrdeq	r2, [r1], -ip
   12a58:	ldrdeq	r2, [r1], -ip
   12a5c:	ldrdeq	r2, [r1], -ip
   12a60:	ldrdeq	r2, [r1], -ip
   12a64:	ldrdeq	r2, [r1], -ip
   12a68:	ldrdeq	r2, [r1], -ip
   12a6c:	ldrdeq	r2, [r1], -ip
   12a70:	ldrdeq	r2, [r1], -ip
   12a74:	ldrdeq	r2, [r1], -ip
   12a78:	ldrdeq	r2, [r1], -ip
   12a7c:	ldrdeq	r2, [r1], -ip
   12a80:	ldrdeq	r2, [r1], -ip
   12a84:	ldrdeq	r2, [r1], -ip
   12a88:	ldrdeq	r2, [r1], -ip
   12a8c:	ldrdeq	r2, [r1], -ip
   12a90:	ldrdeq	r2, [r1], -ip
   12a94:	ldrdeq	r2, [r1], -ip
   12a98:	ldrdeq	r2, [r1], -ip
   12a9c:	ldrdeq	r2, [r1], -ip
   12aa0:	ldrdeq	r2, [r1], -ip
   12aa4:	ldrdeq	r2, [r1], -ip
   12aa8:	ldrdeq	r2, [r1], -ip
   12aac:	ldrdeq	r2, [r1], -ip
   12ab0:	ldrdeq	r2, [r1], -ip
   12ab4:	ldrdeq	r2, [r1], -ip
   12ab8:	ldrdeq	r2, [r1], -ip
   12abc:	ldrdeq	r2, [r1], -ip
   12ac0:	ldrdeq	r2, [r1], -ip
   12ac4:	ldrdeq	r2, [r1], -ip
   12ac8:	ldrdeq	r2, [r1], -ip
   12acc:	muleq	r1, r8, fp
   12ad0:	ldrdeq	r2, [r1], -ip
   12ad4:	muleq	r1, r8, fp
   12ad8:	andeq	r2, r1, r4, asr #23
   12adc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12ae0:	tst	r0, #1
   12ae4:	bne	12b10 <putchar_unlocked@plt+0x1b58>
   12ae8:	ubfx	r0, r4, #5, #3
   12aec:	ldr	r1, [fp, #16]
   12af0:	ldr	r0, [r1, r0, lsl #2]
   12af4:	and	r1, r4, #31
   12af8:	mov	r2, #1
   12afc:	tst	r0, r2, lsl r1
   12b00:	beq	12b10 <putchar_unlocked@plt+0x1b58>
   12b04:	mov	r0, r4
   12b08:	mov	r1, r6
   12b0c:	b	12b24 <putchar_unlocked@plt+0x1b6c>
   12b10:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12b14:	cmp	r0, #0
   12b18:	mov	r0, r4
   12b1c:	mov	r1, r6
   12b20:	beq	12e5c <putchar_unlocked@plt+0x1ea4>
   12b24:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12b28:	tst	r2, #1
   12b2c:	bne	13420 <putchar_unlocked@plt+0x2468>
   12b30:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12b34:	subs	r2, r2, #2
   12b38:	movwne	r2, #1
   12b3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12b40:	orr	r2, r2, r3
   12b44:	tst	r2, #1
   12b48:	bne	12b84 <putchar_unlocked@plt+0x1bcc>
   12b4c:	cmp	r8, sl
   12b50:	movcc	r2, #39	; 0x27
   12b54:	strbcc	r2, [r5, r8]
   12b58:	add	r2, r8, #1
   12b5c:	cmp	r2, sl
   12b60:	movcc	r3, #36	; 0x24
   12b64:	strbcc	r3, [r5, r2]
   12b68:	add	r2, r8, #2
   12b6c:	cmp	r2, sl
   12b70:	movcc	r3, #39	; 0x27
   12b74:	strbcc	r3, [r5, r2]
   12b78:	add	r8, r8, #3
   12b7c:	mov	r2, #1
   12b80:	str	r2, [fp, #-56]	; 0xffffffc8
   12b84:	cmp	r8, sl
   12b88:	movcc	r2, #92	; 0x5c
   12b8c:	strbcc	r2, [r5, r8]
   12b90:	add	r8, r8, #1
   12b94:	b	12ea0 <putchar_unlocked@plt+0x1ee8>
   12b98:	cmp	lr, #1
   12b9c:	beq	12bc4 <putchar_unlocked@plt+0x1c0c>
   12ba0:	mov	r6, #0
   12ba4:	cmn	lr, #1
   12ba8:	bne	12bd0 <putchar_unlocked@plt+0x1c18>
   12bac:	ldrb	r0, [ip, #1]
   12bb0:	cmp	r0, #0
   12bb4:	beq	12bc4 <putchar_unlocked@plt+0x1c0c>
   12bb8:	mvn	lr, #0
   12bbc:	mov	r9, #0
   12bc0:	b	12adc <putchar_unlocked@plt+0x1b24>
   12bc4:	mov	r6, #0
   12bc8:	cmp	r7, #0
   12bcc:	beq	12bd8 <putchar_unlocked@plt+0x1c20>
   12bd0:	mov	r9, #0
   12bd4:	b	12adc <putchar_unlocked@plt+0x1b24>
   12bd8:	mov	r1, #1
   12bdc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12be0:	cmp	r0, #2
   12be4:	bne	12bfc <putchar_unlocked@plt+0x1c44>
   12be8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12bec:	tst	r0, #1
   12bf0:	mov	r6, r1
   12bf4:	beq	12adc <putchar_unlocked@plt+0x1b24>
   12bf8:	b	13420 <putchar_unlocked@plt+0x2468>
   12bfc:	mov	r6, r1
   12c00:	b	12adc <putchar_unlocked@plt+0x1b24>
   12c04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12c08:	cmp	r0, #2
   12c0c:	bne	12e40 <putchar_unlocked@plt+0x1e88>
   12c10:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12c14:	tst	r0, #1
   12c18:	bne	13420 <putchar_unlocked@plt+0x2468>
   12c1c:	mov	r9, #0
   12c20:	b	12e54 <putchar_unlocked@plt+0x1e9c>
   12c24:	mov	r0, #102	; 0x66
   12c28:	b	12ec8 <putchar_unlocked@plt+0x1f10>
   12c2c:	mov	r2, #116	; 0x74
   12c30:	b	12c40 <putchar_unlocked@plt+0x1c88>
   12c34:	mov	r0, #98	; 0x62
   12c38:	b	12ec8 <putchar_unlocked@plt+0x1f10>
   12c3c:	mov	r2, #114	; 0x72
   12c40:	ldr	r0, [sp, #72]	; 0x48
   12c44:	tst	r0, #1
   12c48:	mov	r0, r2
   12c4c:	bne	12ec8 <putchar_unlocked@plt+0x1f10>
   12c50:	b	13420 <putchar_unlocked@plt+0x2468>
   12c54:	ldr	r0, [sp, #92]	; 0x5c
   12c58:	tst	r0, #1
   12c5c:	beq	12ee4 <putchar_unlocked@plt+0x1f2c>
   12c60:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12c64:	tst	r0, #1
   12c68:	bne	13420 <putchar_unlocked@plt+0x2468>
   12c6c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12c70:	subs	r0, r0, #2
   12c74:	movwne	r0, #1
   12c78:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12c7c:	orr	r0, r0, r1
   12c80:	tst	r0, #1
   12c84:	bne	12cc0 <putchar_unlocked@plt+0x1d08>
   12c88:	cmp	r8, sl
   12c8c:	movcc	r0, #39	; 0x27
   12c90:	strbcc	r0, [r5, r8]
   12c94:	add	r0, r8, #1
   12c98:	cmp	r0, sl
   12c9c:	movcc	r1, #36	; 0x24
   12ca0:	strbcc	r1, [r5, r0]
   12ca4:	add	r0, r8, #2
   12ca8:	cmp	r0, sl
   12cac:	movcc	r1, #39	; 0x27
   12cb0:	strbcc	r1, [r5, r0]
   12cb4:	add	r8, r8, #3
   12cb8:	mov	r0, #1
   12cbc:	str	r0, [fp, #-56]	; 0xffffffc8
   12cc0:	cmp	r8, sl
   12cc4:	movcc	r0, #92	; 0x5c
   12cc8:	strbcc	r0, [r5, r8]
   12ccc:	add	r0, r8, #1
   12cd0:	mov	r6, #0
   12cd4:	mov	r9, #1
   12cd8:	mov	r4, #48	; 0x30
   12cdc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12ce0:	cmp	r1, #2
   12ce4:	beq	130a8 <putchar_unlocked@plt+0x20f0>
   12ce8:	add	r1, r7, #1
   12cec:	cmp	r1, lr
   12cf0:	bcs	130a8 <putchar_unlocked@plt+0x20f0>
   12cf4:	ldrb	r1, [ip, r1]
   12cf8:	sub	r1, r1, #48	; 0x30
   12cfc:	uxtb	r1, r1
   12d00:	cmp	r1, #9
   12d04:	bhi	130a8 <putchar_unlocked@plt+0x20f0>
   12d08:	cmp	r0, sl
   12d0c:	movcc	r1, #48	; 0x30
   12d10:	strbcc	r1, [r5, r0]
   12d14:	add	r0, r8, #2
   12d18:	cmp	r0, sl
   12d1c:	movcc	r1, #48	; 0x30
   12d20:	strbcc	r1, [r5, r0]
   12d24:	add	r8, r8, #3
   12d28:	b	12adc <putchar_unlocked@plt+0x1b24>
   12d2c:	mov	r9, #0
   12d30:	mov	r4, #63	; 0x3f
   12d34:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12d38:	cmp	r0, #5
   12d3c:	beq	130b0 <putchar_unlocked@plt+0x20f8>
   12d40:	cmp	r0, #2
   12d44:	bne	13158 <putchar_unlocked@plt+0x21a0>
   12d48:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12d4c:	tst	r0, #1
   12d50:	mov	r6, #0
   12d54:	beq	12adc <putchar_unlocked@plt+0x1b24>
   12d58:	b	13420 <putchar_unlocked@plt+0x2468>
   12d5c:	mov	r0, #118	; 0x76
   12d60:	b	12ec8 <putchar_unlocked@plt+0x1f10>
   12d64:	mov	r4, #39	; 0x27
   12d68:	mov	r0, #1
   12d6c:	str	r0, [sp, #64]	; 0x40
   12d70:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12d74:	cmp	r0, #2
   12d78:	bne	12f00 <putchar_unlocked@plt+0x1f48>
   12d7c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12d80:	tst	r0, #1
   12d84:	bne	13420 <putchar_unlocked@plt+0x2468>
   12d88:	ldr	r2, [sp, #84]	; 0x54
   12d8c:	cmp	r2, #0
   12d90:	mov	r0, r2
   12d94:	movwne	r0, #1
   12d98:	clz	r1, sl
   12d9c:	lsr	r1, r1, #5
   12da0:	orrs	r0, r0, r1
   12da4:	moveq	r2, sl
   12da8:	str	r2, [sp, #84]	; 0x54
   12dac:	moveq	sl, r0
   12db0:	cmp	r8, sl
   12db4:	movcc	r0, #39	; 0x27
   12db8:	strbcc	r0, [r5, r8]
   12dbc:	add	r0, r8, #1
   12dc0:	cmp	r0, sl
   12dc4:	movcc	r1, #92	; 0x5c
   12dc8:	strbcc	r1, [r5, r0]
   12dcc:	add	r0, r8, #2
   12dd0:	cmp	r0, sl
   12dd4:	movcc	r1, #39	; 0x27
   12dd8:	strbcc	r1, [r5, r0]
   12ddc:	add	r8, r8, #3
   12de0:	mov	r0, #0
   12de4:	str	r0, [fp, #-56]	; 0xffffffc8
   12de8:	mov	r9, #0
   12dec:	mov	r6, #1
   12df0:	b	12adc <putchar_unlocked@plt+0x1b24>
   12df4:	ldr	r0, [sp, #44]	; 0x2c
   12df8:	cmp	r0, #1
   12dfc:	bne	12f08 <putchar_unlocked@plt+0x1f50>
   12e00:	str	lr, [sp, #32]
   12e04:	bl	10ec8 <__ctype_b_loc@plt>
   12e08:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12e0c:	ldr	r0, [r0]
   12e10:	add	r0, r0, r4, lsl #1
   12e14:	ldrb	r0, [r0, #1]
   12e18:	ubfx	r6, r0, #6, #1
   12e1c:	mov	r2, #1
   12e20:	ldr	r0, [sp, #60]	; 0x3c
   12e24:	orr	r1, r6, r0
   12e28:	cmp	r2, #1
   12e2c:	bhi	13160 <putchar_unlocked@plt+0x21a8>
   12e30:	tst	r1, #1
   12e34:	beq	13160 <putchar_unlocked@plt+0x21a8>
   12e38:	ldr	lr, [sp, #32]
   12e3c:	b	12adc <putchar_unlocked@plt+0x1b24>
   12e40:	mov	r9, #0
   12e44:	mov	r0, #92	; 0x5c
   12e48:	ldr	r1, [sp, #56]	; 0x38
   12e4c:	cmp	r1, #0
   12e50:	beq	12ec8 <putchar_unlocked@plt+0x1f10>
   12e54:	mov	r4, #92	; 0x5c
   12e58:	mov	r6, #0
   12e5c:	cmp	r9, #0
   12e60:	bne	12e98 <putchar_unlocked@plt+0x1ee0>
   12e64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12e68:	tst	r0, #1
   12e6c:	beq	12e98 <putchar_unlocked@plt+0x1ee0>
   12e70:	cmp	r8, sl
   12e74:	movcc	r0, #39	; 0x27
   12e78:	strbcc	r0, [r5, r8]
   12e7c:	add	r0, r8, #1
   12e80:	cmp	r0, sl
   12e84:	movcc	r1, #39	; 0x27
   12e88:	strbcc	r1, [r5, r0]
   12e8c:	add	r8, r8, #2
   12e90:	mov	r0, #0
   12e94:	str	r0, [fp, #-56]	; 0xffffffc8
   12e98:	mov	r1, r6
   12e9c:	mov	r0, r4
   12ea0:	cmp	r8, sl
   12ea4:	strbcc	r0, [r5, r8]
   12ea8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12eac:	and	r0, r0, r1
   12eb0:	str	r0, [fp, #-48]	; 0xffffffd0
   12eb4:	add	r8, r8, #1
   12eb8:	add	r7, r7, #1
   12ebc:	cmn	lr, #1
   12ec0:	bne	12814 <putchar_unlocked@plt+0x185c>
   12ec4:	b	12820 <putchar_unlocked@plt+0x1868>
   12ec8:	mov	r9, #0
   12ecc:	ldr	r1, [sp, #92]	; 0x5c
   12ed0:	tst	r1, #1
   12ed4:	mov	r6, #0
   12ed8:	mov	r1, #0
   12edc:	beq	12adc <putchar_unlocked@plt+0x1b24>
   12ee0:	b	12b24 <putchar_unlocked@plt+0x1b6c>
   12ee4:	mov	r4, #0
   12ee8:	ldr	r0, [sp, #40]	; 0x28
   12eec:	cmp	r0, #0
   12ef0:	mov	r9, #0
   12ef4:	mov	r6, #0
   12ef8:	beq	12adc <putchar_unlocked@plt+0x1b24>
   12efc:	b	12eb8 <putchar_unlocked@plt+0x1f00>
   12f00:	mov	r6, #1
   12f04:	b	12adc <putchar_unlocked@plt+0x1b24>
   12f08:	mov	r0, #0
   12f0c:	str	r0, [fp, #-36]	; 0xffffffdc
   12f10:	str	r0, [fp, #-40]	; 0xffffffd8
   12f14:	cmn	lr, #1
   12f18:	bne	12f2c <putchar_unlocked@plt+0x1f74>
   12f1c:	mov	r0, ip
   12f20:	bl	10eec <strlen@plt>
   12f24:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12f28:	mov	lr, r0
   12f2c:	ldr	r0, [sp, #76]	; 0x4c
   12f30:	add	r0, r0, r7
   12f34:	str	r0, [sp, #24]
   12f38:	mov	r6, #1
   12f3c:	mov	r2, #0
   12f40:	sub	r0, fp, #40	; 0x28
   12f44:	mov	r3, r0
   12f48:	str	r5, [sp, #28]
   12f4c:	str	lr, [sp, #32]
   12f50:	b	12f94 <putchar_unlocked@plt+0x1fdc>
   12f54:	ldr	r5, [sp, #52]	; 0x34
   12f58:	add	r5, r0, r5
   12f5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12f60:	bl	10e2c <iswprint@plt>
   12f64:	cmp	r0, #0
   12f68:	movwne	r0, #1
   12f6c:	and	r6, r6, r0
   12f70:	sub	r0, fp, #40	; 0x28
   12f74:	bl	10de4 <mbsinit@plt>
   12f78:	sub	r3, fp, #40	; 0x28
   12f7c:	mov	r2, r5
   12f80:	ldr	lr, [sp, #32]
   12f84:	cmp	r0, #0
   12f88:	ldr	r5, [sp, #28]
   12f8c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12f90:	bne	12e20 <putchar_unlocked@plt+0x1e68>
   12f94:	str	r2, [sp, #52]	; 0x34
   12f98:	add	r0, r2, r7
   12f9c:	add	r1, ip, r0
   12fa0:	str	r0, [sp, #48]	; 0x30
   12fa4:	sub	r2, lr, r0
   12fa8:	sub	r0, fp, #44	; 0x2c
   12fac:	bl	14c74 <putchar_unlocked@plt+0x3cbc>
   12fb0:	cmp	r0, #0
   12fb4:	beq	1332c <putchar_unlocked@plt+0x2374>
   12fb8:	cmn	r0, #1
   12fbc:	beq	132e8 <putchar_unlocked@plt+0x2330>
   12fc0:	cmn	r0, #2
   12fc4:	ldr	lr, [sp, #32]
   12fc8:	beq	132f0 <putchar_unlocked@plt+0x2338>
   12fcc:	cmp	r0, #2
   12fd0:	mov	r1, #0
   12fd4:	movwcc	r1, #1
   12fd8:	ldr	r2, [sp, #68]	; 0x44
   12fdc:	eor	r2, r2, #1
   12fe0:	orrs	r1, r2, r1
   12fe4:	bne	12f54 <putchar_unlocked@plt+0x1f9c>
   12fe8:	ldr	r1, [sp, #52]	; 0x34
   12fec:	ldr	r2, [sp, #24]
   12ff0:	add	r1, r2, r1
   12ff4:	sub	r2, r0, #1
   12ff8:	b	13008 <putchar_unlocked@plt+0x2050>
   12ffc:	add	r1, r1, #1
   13000:	subs	r2, r2, #1
   13004:	beq	12f54 <putchar_unlocked@plt+0x1f9c>
   13008:	ldrb	r3, [r1]
   1300c:	sub	r3, r3, #91	; 0x5b
   13010:	cmp	r3, #33	; 0x21
   13014:	bhi	12ffc <putchar_unlocked@plt+0x2044>
   13018:	add	r5, pc, #0
   1301c:	ldr	pc, [r5, r3, lsl #2]
   13020:	andeq	r3, r1, r8, lsl r4
   13024:	andeq	r3, r1, r8, lsl r4
   13028:	strdeq	r2, [r1], -ip
   1302c:	andeq	r3, r1, r8, lsl r4
   13030:	strdeq	r2, [r1], -ip
   13034:	andeq	r3, r1, r8, lsl r4
   13038:	strdeq	r2, [r1], -ip
   1303c:	strdeq	r2, [r1], -ip
   13040:	strdeq	r2, [r1], -ip
   13044:	strdeq	r2, [r1], -ip
   13048:	strdeq	r2, [r1], -ip
   1304c:	strdeq	r2, [r1], -ip
   13050:	strdeq	r2, [r1], -ip
   13054:	strdeq	r2, [r1], -ip
   13058:	strdeq	r2, [r1], -ip
   1305c:	strdeq	r2, [r1], -ip
   13060:	strdeq	r2, [r1], -ip
   13064:	strdeq	r2, [r1], -ip
   13068:	strdeq	r2, [r1], -ip
   1306c:	strdeq	r2, [r1], -ip
   13070:	strdeq	r2, [r1], -ip
   13074:	strdeq	r2, [r1], -ip
   13078:	strdeq	r2, [r1], -ip
   1307c:	strdeq	r2, [r1], -ip
   13080:	strdeq	r2, [r1], -ip
   13084:	strdeq	r2, [r1], -ip
   13088:	strdeq	r2, [r1], -ip
   1308c:	strdeq	r2, [r1], -ip
   13090:	strdeq	r2, [r1], -ip
   13094:	strdeq	r2, [r1], -ip
   13098:	strdeq	r2, [r1], -ip
   1309c:	strdeq	r2, [r1], -ip
   130a0:	strdeq	r2, [r1], -ip
   130a4:	andeq	r3, r1, r8, lsl r4
   130a8:	mov	r8, r0
   130ac:	b	12adc <putchar_unlocked@plt+0x1b24>
   130b0:	ldr	r0, [sp, #36]	; 0x24
   130b4:	cmp	r0, #0
   130b8:	beq	13158 <putchar_unlocked@plt+0x21a0>
   130bc:	add	r0, r7, #2
   130c0:	cmp	r0, lr
   130c4:	bcs	13158 <putchar_unlocked@plt+0x21a0>
   130c8:	add	r1, r7, ip
   130cc:	ldrb	r1, [r1, #1]
   130d0:	cmp	r1, #63	; 0x3f
   130d4:	bne	13158 <putchar_unlocked@plt+0x21a0>
   130d8:	ldrb	r1, [ip, r0]
   130dc:	sub	r2, r1, #33	; 0x21
   130e0:	cmp	r2, #29
   130e4:	bhi	13158 <putchar_unlocked@plt+0x21a0>
   130e8:	mov	r3, #1
   130ec:	movw	r6, #20929	; 0x51c1
   130f0:	movt	r6, #14336	; 0x3800
   130f4:	tst	r6, r3, lsl r2
   130f8:	beq	13158 <putchar_unlocked@plt+0x21a0>
   130fc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13100:	tst	r2, #1
   13104:	bne	13420 <putchar_unlocked@plt+0x2468>
   13108:	cmp	r8, sl
   1310c:	movcc	r2, #63	; 0x3f
   13110:	strbcc	r2, [r5, r8]
   13114:	add	r2, r8, #1
   13118:	cmp	r2, sl
   1311c:	movcc	r3, #34	; 0x22
   13120:	strbcc	r3, [r5, r2]
   13124:	add	r2, r8, #2
   13128:	cmp	r2, sl
   1312c:	movcc	r3, #34	; 0x22
   13130:	strbcc	r3, [r5, r2]
   13134:	add	r2, r8, #3
   13138:	cmp	r2, sl
   1313c:	movcc	r3, #63	; 0x3f
   13140:	strbcc	r3, [r5, r2]
   13144:	add	r8, r8, #4
   13148:	mov	r7, r0
   1314c:	mov	r4, r1
   13150:	mov	r6, #0
   13154:	b	12adc <putchar_unlocked@plt+0x1b24>
   13158:	mov	r6, #0
   1315c:	b	12adc <putchar_unlocked@plt+0x1b24>
   13160:	add	r0, r2, r7
   13164:	str	r0, [sp, #52]	; 0x34
   13168:	mov	r2, #0
   1316c:	ldr	lr, [sp, #32]
   13170:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13174:	str	r1, [sp, #48]	; 0x30
   13178:	tst	r1, #1
   1317c:	bne	13258 <putchar_unlocked@plt+0x22a0>
   13180:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13184:	tst	r1, #1
   13188:	bne	13420 <putchar_unlocked@plt+0x2468>
   1318c:	mov	r3, r0
   13190:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13194:	subs	r1, r0, #2
   13198:	movwne	r1, #1
   1319c:	orr	r1, r1, r3
   131a0:	tst	r1, #1
   131a4:	bne	131dc <putchar_unlocked@plt+0x2224>
   131a8:	cmp	r8, sl
   131ac:	movcc	r0, #39	; 0x27
   131b0:	strbcc	r0, [r5, r8]
   131b4:	add	r2, r8, #1
   131b8:	cmp	r2, sl
   131bc:	movcc	r0, #36	; 0x24
   131c0:	strbcc	r0, [r5, r2]
   131c4:	add	r2, r8, #2
   131c8:	cmp	r2, sl
   131cc:	movcc	r0, #39	; 0x27
   131d0:	strbcc	r0, [r5, r2]
   131d4:	add	r8, r8, #3
   131d8:	mov	r3, #1
   131dc:	cmp	r8, sl
   131e0:	movcc	r1, #92	; 0x5c
   131e4:	strbcc	r1, [r5, r8]
   131e8:	add	r2, r8, #1
   131ec:	cmp	r2, sl
   131f0:	bcs	13204 <putchar_unlocked@plt+0x224c>
   131f4:	uxtb	r1, r4
   131f8:	mov	r0, #48	; 0x30
   131fc:	orr	r1, r0, r1, lsr #6
   13200:	strb	r1, [r5, r2]
   13204:	add	r2, r8, #2
   13208:	cmp	r2, sl
   1320c:	lsrcc	r1, r4, #3
   13210:	movcc	r0, #6
   13214:	bficc	r1, r0, #3, #29
   13218:	strbcc	r1, [r5, r2]
   1321c:	mov	r0, #6
   13220:	bfi	r4, r0, #3, #29
   13224:	add	r8, r8, #3
   13228:	mov	r2, #1
   1322c:	mov	r0, r3
   13230:	b	1327c <putchar_unlocked@plt+0x22c4>
   13234:	cmp	r8, sl
   13238:	strbcc	r4, [r5, r8]
   1323c:	ldr	r1, [sp, #76]	; 0x4c
   13240:	ldrb	r4, [r1, r7]
   13244:	add	r8, r8, #1
   13248:	mov	r7, r3
   1324c:	ldr	r1, [sp, #48]	; 0x30
   13250:	tst	r1, #1
   13254:	beq	13180 <putchar_unlocked@plt+0x21c8>
   13258:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1325c:	tst	r1, #1
   13260:	beq	13274 <putchar_unlocked@plt+0x22bc>
   13264:	cmp	r8, sl
   13268:	movcc	r1, #92	; 0x5c
   1326c:	strbcc	r1, [r5, r8]
   13270:	add	r8, r8, #1
   13274:	mov	r1, #0
   13278:	str	r1, [fp, #-52]	; 0xffffffcc
   1327c:	and	r9, r2, #1
   13280:	add	r3, r7, #1
   13284:	ldr	r1, [sp, #52]	; 0x34
   13288:	cmp	r1, r3
   1328c:	bls	132d0 <putchar_unlocked@plt+0x2318>
   13290:	cmp	r9, #0
   13294:	movwne	r9, #1
   13298:	mvn	r1, r0
   1329c:	orr	r1, r1, r9
   132a0:	tst	r1, #1
   132a4:	bne	13234 <putchar_unlocked@plt+0x227c>
   132a8:	cmp	r8, sl
   132ac:	movcc	r1, #39	; 0x27
   132b0:	strbcc	r1, [r5, r8]
   132b4:	add	r1, r8, #1
   132b8:	cmp	r1, sl
   132bc:	movcc	r0, #39	; 0x27
   132c0:	strbcc	r0, [r5, r1]
   132c4:	add	r8, r8, #2
   132c8:	mov	r0, #0
   132cc:	b	13234 <putchar_unlocked@plt+0x227c>
   132d0:	str	r0, [fp, #-56]	; 0xffffffc8
   132d4:	cmp	r9, #0
   132d8:	movwne	r9, #1
   132dc:	cmp	r9, #0
   132e0:	beq	12e64 <putchar_unlocked@plt+0x1eac>
   132e4:	b	12e98 <putchar_unlocked@plt+0x1ee0>
   132e8:	mov	r6, #0
   132ec:	b	1332c <putchar_unlocked@plt+0x2374>
   132f0:	mov	r6, #0
   132f4:	ldr	r0, [sp, #48]	; 0x30
   132f8:	cmp	r0, lr
   132fc:	bcs	1332c <putchar_unlocked@plt+0x2374>
   13300:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13304:	add	r0, ip, r7
   13308:	ldr	r2, [sp, #52]	; 0x34
   1330c:	ldrb	r1, [r0, r2]
   13310:	cmp	r1, #0
   13314:	beq	12e20 <putchar_unlocked@plt+0x1e68>
   13318:	add	r2, r2, #1
   1331c:	add	r1, r7, r2
   13320:	cmp	r1, lr
   13324:	bcc	1330c <putchar_unlocked@plt+0x2354>
   13328:	b	12e20 <putchar_unlocked@plt+0x1e68>
   1332c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13330:	ldr	r2, [sp, #52]	; 0x34
   13334:	b	12e20 <putchar_unlocked@plt+0x1e68>
   13338:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1333c:	eor	r0, r1, #2
   13340:	orr	r0, r0, r8
   13344:	clz	r0, r0
   13348:	lsr	r0, r0, #5
   1334c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13350:	tst	r3, r0
   13354:	bne	13420 <putchar_unlocked@plt+0x2468>
   13358:	mov	r6, r5
   1335c:	subs	r0, r1, #2
   13360:	movwne	r0, #1
   13364:	orr	r0, r3, r0
   13368:	tst	r0, #1
   1336c:	ldr	r2, [sp, #92]	; 0x5c
   13370:	ldreq	r0, [sp, #64]	; 0x40
   13374:	eoreq	r0, r0, #1
   13378:	tsteq	r0, #1
   1337c:	bne	133bc <putchar_unlocked@plt+0x2404>
   13380:	mov	r9, lr
   13384:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13388:	tst	r0, #1
   1338c:	bne	13488 <putchar_unlocked@plt+0x24d0>
   13390:	ldr	r0, [sp, #84]	; 0x54
   13394:	cmp	r0, #0
   13398:	beq	133bc <putchar_unlocked@plt+0x2404>
   1339c:	mov	r0, #0
   133a0:	str	r0, [fp, #-48]	; 0xffffffd0
   133a4:	mov	r1, #2
   133a8:	cmp	sl, #0
   133ac:	mov	r0, r2
   133b0:	mov	r4, r3
   133b4:	ldr	r7, [sp, #84]	; 0x54
   133b8:	beq	12594 <putchar_unlocked@plt+0x15dc>
   133bc:	ldr	r1, [fp, #-84]	; 0xffffffac
   133c0:	clz	r0, r1
   133c4:	lsr	r0, r0, #5
   133c8:	orr	r0, r0, r3
   133cc:	tst	r0, #1
   133d0:	bne	133fc <putchar_unlocked@plt+0x2444>
   133d4:	ldrb	r0, [r1]
   133d8:	cmp	r0, #0
   133dc:	beq	133fc <putchar_unlocked@plt+0x2444>
   133e0:	add	r1, r1, #1
   133e4:	cmp	r8, sl
   133e8:	strbcc	r0, [r6, r8]
   133ec:	add	r8, r8, #1
   133f0:	ldrb	r0, [r1], #1
   133f4:	cmp	r0, #0
   133f8:	bne	133e4 <putchar_unlocked@plt+0x242c>
   133fc:	cmp	r8, sl
   13400:	movcc	r0, #0
   13404:	strbcc	r0, [r6, r8]
   13408:	b	1347c <putchar_unlocked@plt+0x24c4>
   1340c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13410:	mov	lr, r4
   13414:	b	13420 <putchar_unlocked@plt+0x2468>
   13418:	ldr	r5, [sp, #28]
   1341c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13420:	mov	r0, #0
   13424:	ldr	r1, [fp, #12]
   13428:	bic	r1, r1, #2
   1342c:	mov	r2, #2
   13430:	ldr	r3, [sp, #92]	; 0x5c
   13434:	tst	r3, #1
   13438:	movwne	r2, #4
   1343c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13440:	cmp	r3, #2
   13444:	movne	r2, r3
   13448:	str	r2, [sp]
   1344c:	str	r1, [sp, #4]
   13450:	str	r0, [sp, #8]
   13454:	ldr	r0, [sp, #80]	; 0x50
   13458:	str	r0, [sp, #12]
   1345c:	ldr	r0, [sp, #88]	; 0x58
   13460:	str	r0, [sp, #16]
   13464:	mov	r0, r5
   13468:	mov	r1, sl
   1346c:	mov	r2, ip
   13470:	mov	r3, lr
   13474:	bl	12508 <putchar_unlocked@plt+0x1550>
   13478:	mov	r8, r0
   1347c:	mov	r0, r8
   13480:	sub	sp, fp, #28
   13484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13488:	mov	r0, #5
   1348c:	str	r0, [sp]
   13490:	ldr	r0, [fp, #12]
   13494:	str	r0, [sp, #4]
   13498:	ldr	r0, [fp, #16]
   1349c:	str	r0, [sp, #8]
   134a0:	ldr	r0, [sp, #80]	; 0x50
   134a4:	str	r0, [sp, #12]
   134a8:	ldr	r0, [sp, #88]	; 0x58
   134ac:	str	r0, [sp, #16]
   134b0:	mov	r0, r6
   134b4:	ldr	r1, [sp, #84]	; 0x54
   134b8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   134bc:	mov	r3, r9
   134c0:	b	13474 <putchar_unlocked@plt+0x24bc>
   134c4:	bl	10fac <abort@plt>
   134c8:	mov	r3, r2
   134cc:	mov	r2, #0
   134d0:	b	134d4 <putchar_unlocked@plt+0x251c>
   134d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134d8:	add	fp, sp, #28
   134dc:	sub	sp, sp, #36	; 0x24
   134e0:	mov	r4, r2
   134e4:	str	r2, [sp, #24]
   134e8:	mov	r5, r1
   134ec:	mov	r6, r0
   134f0:	str	r0, [sp, #20]
   134f4:	movw	r8, #24928	; 0x6160
   134f8:	movt	r8, #2
   134fc:	cmp	r3, #0
   13500:	movne	r8, r3
   13504:	bl	10ef8 <__errno_location@plt>
   13508:	str	r0, [sp, #28]
   1350c:	ldm	r8, {r3, r9}
   13510:	ldr	r1, [r8, #40]	; 0x28
   13514:	ldr	r2, [r8, #44]	; 0x2c
   13518:	ldr	r7, [r0]
   1351c:	str	r7, [sp, #32]
   13520:	add	sl, r8, #8
   13524:	cmp	r4, #0
   13528:	orreq	r9, r9, #1
   1352c:	stm	sp, {r3, r9, sl}
   13530:	str	r1, [sp, #12]
   13534:	str	r2, [sp, #16]
   13538:	mov	r0, #0
   1353c:	mov	r1, #0
   13540:	mov	r2, r6
   13544:	mov	r3, r5
   13548:	mov	r7, r5
   1354c:	bl	12508 <putchar_unlocked@plt+0x1550>
   13550:	mov	r5, r0
   13554:	add	r4, r0, #1
   13558:	mov	r0, r4
   1355c:	bl	143dc <putchar_unlocked@plt+0x3424>
   13560:	mov	r6, r0
   13564:	ldr	r0, [r8]
   13568:	ldr	r1, [r8, #40]	; 0x28
   1356c:	ldr	r2, [r8, #44]	; 0x2c
   13570:	stm	sp, {r0, r9, sl}
   13574:	str	r1, [sp, #12]
   13578:	str	r2, [sp, #16]
   1357c:	mov	r0, r6
   13580:	mov	r1, r4
   13584:	ldr	r2, [sp, #20]
   13588:	mov	r3, r7
   1358c:	bl	12508 <putchar_unlocked@plt+0x1550>
   13590:	ldr	r0, [sp, #24]
   13594:	ldr	r1, [sp, #32]
   13598:	ldr	r2, [sp, #28]
   1359c:	str	r1, [r2]
   135a0:	cmp	r0, #0
   135a4:	strne	r5, [r0]
   135a8:	mov	r0, r6
   135ac:	sub	sp, fp, #28
   135b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   135b8:	add	fp, sp, #24
   135bc:	movw	r8, #24800	; 0x60e0
   135c0:	movt	r8, #2
   135c4:	ldr	r4, [r8]
   135c8:	movw	r5, #24804	; 0x60e4
   135cc:	movt	r5, #2
   135d0:	ldr	r0, [r5]
   135d4:	cmp	r0, #2
   135d8:	blt	13604 <putchar_unlocked@plt+0x264c>
   135dc:	add	r7, r4, #12
   135e0:	mov	r6, #0
   135e4:	ldr	r0, [r7, r6, lsl #3]
   135e8:	bl	121fc <putchar_unlocked@plt+0x1244>
   135ec:	add	r0, r6, #1
   135f0:	ldr	r1, [r5]
   135f4:	add	r2, r6, #2
   135f8:	cmp	r2, r1
   135fc:	mov	r6, r0
   13600:	blt	135e4 <putchar_unlocked@plt+0x262c>
   13604:	ldr	r0, [r4, #4]
   13608:	movw	r9, #24976	; 0x6190
   1360c:	movt	r9, #2
   13610:	cmp	r0, r9
   13614:	movw	r7, #24808	; 0x60e8
   13618:	movt	r7, #2
   1361c:	beq	1362c <putchar_unlocked@plt+0x2674>
   13620:	bl	121fc <putchar_unlocked@plt+0x1244>
   13624:	mov	r0, #256	; 0x100
   13628:	stm	r7, {r0, r9}
   1362c:	cmp	r4, r7
   13630:	beq	13640 <putchar_unlocked@plt+0x2688>
   13634:	mov	r0, r4
   13638:	bl	121fc <putchar_unlocked@plt+0x1244>
   1363c:	str	r7, [r8]
   13640:	mov	r0, #1
   13644:	str	r0, [r5]
   13648:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1364c:	movw	r3, #24928	; 0x6160
   13650:	movt	r3, #2
   13654:	mvn	r2, #0
   13658:	b	1365c <putchar_unlocked@plt+0x26a4>
   1365c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13660:	add	fp, sp, #28
   13664:	sub	sp, sp, #44	; 0x2c
   13668:	mov	r7, r3
   1366c:	str	r2, [sp, #36]	; 0x24
   13670:	str	r1, [sp, #32]
   13674:	mov	r5, r0
   13678:	bl	10ef8 <__errno_location@plt>
   1367c:	cmp	r5, #0
   13680:	bmi	137f0 <putchar_unlocked@plt+0x2838>
   13684:	cmn	r5, #-2147483647	; 0x80000001
   13688:	beq	137f0 <putchar_unlocked@plt+0x2838>
   1368c:	movw	r4, #24800	; 0x60e0
   13690:	movt	r4, #2
   13694:	ldr	r6, [r4]
   13698:	str	r0, [sp, #28]
   1369c:	ldr	r0, [r0]
   136a0:	str	r0, [sp, #24]
   136a4:	movw	r8, #24804	; 0x60e4
   136a8:	movt	r8, #2
   136ac:	ldr	r1, [r8]
   136b0:	cmp	r1, r5
   136b4:	ble	136c0 <putchar_unlocked@plt+0x2708>
   136b8:	mov	sl, r6
   136bc:	b	1372c <putchar_unlocked@plt+0x2774>
   136c0:	str	r1, [fp, #-32]	; 0xffffffe0
   136c4:	mov	r0, #8
   136c8:	str	r0, [sp]
   136cc:	movw	r9, #24808	; 0x60e8
   136d0:	movt	r9, #2
   136d4:	subs	r0, r6, r9
   136d8:	movne	r0, r6
   136dc:	sub	r1, r5, r1
   136e0:	add	r2, r1, #1
   136e4:	sub	r1, fp, #32
   136e8:	mvn	r3, #-2147483648	; 0x80000000
   136ec:	bl	144b8 <putchar_unlocked@plt+0x3500>
   136f0:	mov	sl, r0
   136f4:	str	r0, [r4]
   136f8:	cmp	r6, r9
   136fc:	bne	13708 <putchar_unlocked@plt+0x2750>
   13700:	ldrd	r0, [r9]
   13704:	stm	sl, {r0, r1}
   13708:	ldr	r1, [r8]
   1370c:	add	r0, sl, r1, lsl #3
   13710:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13714:	sub	r1, r2, r1
   13718:	lsl	r2, r1, #3
   1371c:	mov	r1, #0
   13720:	bl	10f10 <memset@plt>
   13724:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13728:	str	r0, [r8]
   1372c:	mov	r9, sl
   13730:	ldr	r6, [r9, r5, lsl #3]!
   13734:	ldr	r4, [r9, #4]!
   13738:	ldm	r7, {r0, r1}
   1373c:	ldr	r2, [r7, #40]	; 0x28
   13740:	ldr	r3, [r7, #44]	; 0x2c
   13744:	orr	r8, r1, #1
   13748:	add	r1, r7, #8
   1374c:	stm	sp, {r0, r8}
   13750:	str	r1, [sp, #20]
   13754:	add	r0, sp, #8
   13758:	stm	r0, {r1, r2, r3}
   1375c:	mov	r0, r4
   13760:	mov	r1, r6
   13764:	ldr	r2, [sp, #32]
   13768:	ldr	r3, [sp, #36]	; 0x24
   1376c:	bl	12508 <putchar_unlocked@plt+0x1550>
   13770:	cmp	r6, r0
   13774:	bhi	137d8 <putchar_unlocked@plt+0x2820>
   13778:	add	r6, r0, #1
   1377c:	str	r6, [sl, r5, lsl #3]
   13780:	movw	r0, #24976	; 0x6190
   13784:	movt	r0, #2
   13788:	cmp	r4, r0
   1378c:	beq	13798 <putchar_unlocked@plt+0x27e0>
   13790:	mov	r0, r4
   13794:	bl	121fc <putchar_unlocked@plt+0x1244>
   13798:	mov	r0, r6
   1379c:	bl	143dc <putchar_unlocked@plt+0x3424>
   137a0:	mov	r4, r0
   137a4:	str	r0, [r9]
   137a8:	ldr	r0, [r7]
   137ac:	ldr	r1, [r7, #40]	; 0x28
   137b0:	ldr	r2, [r7, #44]	; 0x2c
   137b4:	stm	sp, {r0, r8}
   137b8:	ldr	r0, [sp, #20]
   137bc:	add	r3, sp, #8
   137c0:	stm	r3, {r0, r1, r2}
   137c4:	mov	r0, r4
   137c8:	mov	r1, r6
   137cc:	ldr	r2, [sp, #32]
   137d0:	ldr	r3, [sp, #36]	; 0x24
   137d4:	bl	12508 <putchar_unlocked@plt+0x1550>
   137d8:	ldr	r0, [sp, #28]
   137dc:	ldr	r1, [sp, #24]
   137e0:	str	r1, [r0]
   137e4:	mov	r0, r4
   137e8:	sub	sp, fp, #28
   137ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137f0:	bl	10fac <abort@plt>
   137f4:	movw	r3, #24928	; 0x6160
   137f8:	movt	r3, #2
   137fc:	b	1365c <putchar_unlocked@plt+0x26a4>
   13800:	mov	r1, r0
   13804:	mov	r0, #0
   13808:	b	1364c <putchar_unlocked@plt+0x2694>
   1380c:	mov	r2, r1
   13810:	mov	r1, r0
   13814:	mov	r0, #0
   13818:	b	137f4 <putchar_unlocked@plt+0x283c>
   1381c:	push	{r4, r5, r6, sl, fp, lr}
   13820:	add	fp, sp, #16
   13824:	sub	sp, sp, #48	; 0x30
   13828:	mov	r4, r2
   1382c:	mov	r5, r0
   13830:	mov	r6, sp
   13834:	mov	r0, r6
   13838:	bl	13858 <putchar_unlocked@plt+0x28a0>
   1383c:	mov	r0, r5
   13840:	mov	r1, r4
   13844:	mvn	r2, #0
   13848:	mov	r3, r6
   1384c:	bl	1365c <putchar_unlocked@plt+0x26a4>
   13850:	sub	sp, fp, #16
   13854:	pop	{r4, r5, r6, sl, fp, pc}
   13858:	push	{fp, lr}
   1385c:	mov	fp, sp
   13860:	vmov.i32	q8, #0	; 0x00000000
   13864:	mov	r2, #32
   13868:	mov	r3, r0
   1386c:	vst1.32	{d16-d17}, [r3], r2
   13870:	vst1.32	{d16-d17}, [r3]
   13874:	add	r2, r0, #16
   13878:	vst1.32	{d16-d17}, [r2]
   1387c:	cmp	r1, #10
   13880:	strne	r1, [r0]
   13884:	popne	{fp, pc}
   13888:	bl	10fac <abort@plt>
   1388c:	push	{r4, r5, r6, r7, fp, lr}
   13890:	add	fp, sp, #16
   13894:	sub	sp, sp, #48	; 0x30
   13898:	mov	r4, r3
   1389c:	mov	r5, r2
   138a0:	mov	r6, r0
   138a4:	mov	r7, sp
   138a8:	mov	r0, r7
   138ac:	bl	13858 <putchar_unlocked@plt+0x28a0>
   138b0:	mov	r0, r6
   138b4:	mov	r1, r5
   138b8:	mov	r2, r4
   138bc:	mov	r3, r7
   138c0:	bl	1365c <putchar_unlocked@plt+0x26a4>
   138c4:	sub	sp, fp, #16
   138c8:	pop	{r4, r5, r6, r7, fp, pc}
   138cc:	mov	r2, r1
   138d0:	mov	r1, r0
   138d4:	mov	r0, #0
   138d8:	b	1381c <putchar_unlocked@plt+0x2864>
   138dc:	mov	r3, r2
   138e0:	mov	r2, r1
   138e4:	mov	r1, r0
   138e8:	mov	r0, #0
   138ec:	b	1388c <putchar_unlocked@plt+0x28d4>
   138f0:	push	{r4, r5, r6, sl, fp, lr}
   138f4:	add	fp, sp, #16
   138f8:	sub	sp, sp, #48	; 0x30
   138fc:	mov	r4, r1
   13900:	mov	r5, r0
   13904:	movw	r0, #24928	; 0x6160
   13908:	movt	r0, #2
   1390c:	add	r1, r0, #16
   13910:	mov	r3, #32
   13914:	vld1.64	{d16-d17}, [r0], r3
   13918:	vld1.64	{d18-d19}, [r1]
   1391c:	mov	r6, sp
   13920:	add	r1, r6, #16
   13924:	vld1.64	{d20-d21}, [r0]
   13928:	vst1.64	{d18-d19}, [r1]
   1392c:	mov	r0, r6
   13930:	vst1.64	{d16-d17}, [r0], r3
   13934:	vst1.64	{d20-d21}, [r0]
   13938:	mov	r0, r6
   1393c:	mov	r1, r2
   13940:	mov	r2, #1
   13944:	bl	123fc <putchar_unlocked@plt+0x1444>
   13948:	mov	r0, #0
   1394c:	mov	r1, r5
   13950:	mov	r2, r4
   13954:	mov	r3, r6
   13958:	bl	1365c <putchar_unlocked@plt+0x26a4>
   1395c:	sub	sp, fp, #16
   13960:	pop	{r4, r5, r6, sl, fp, pc}
   13964:	mov	r2, r1
   13968:	mvn	r1, #0
   1396c:	b	138f0 <putchar_unlocked@plt+0x2938>
   13970:	mov	r1, #58	; 0x3a
   13974:	b	13964 <putchar_unlocked@plt+0x29ac>
   13978:	mov	r2, #58	; 0x3a
   1397c:	b	138f0 <putchar_unlocked@plt+0x2938>
   13980:	push	{r4, r5, r6, sl, fp, lr}
   13984:	add	fp, sp, #16
   13988:	sub	sp, sp, #48	; 0x30
   1398c:	mov	r4, r2
   13990:	mov	r5, r0
   13994:	mov	r6, sp
   13998:	mov	r0, r6
   1399c:	bl	13858 <putchar_unlocked@plt+0x28a0>
   139a0:	mov	r0, r6
   139a4:	mov	r1, #58	; 0x3a
   139a8:	mov	r2, #1
   139ac:	bl	123fc <putchar_unlocked@plt+0x1444>
   139b0:	mov	r0, r5
   139b4:	mov	r1, r4
   139b8:	mvn	r2, #0
   139bc:	mov	r3, r6
   139c0:	bl	1365c <putchar_unlocked@plt+0x26a4>
   139c4:	sub	sp, fp, #16
   139c8:	pop	{r4, r5, r6, sl, fp, pc}
   139cc:	push	{fp, lr}
   139d0:	mov	fp, sp
   139d4:	sub	sp, sp, #8
   139d8:	mvn	ip, #0
   139dc:	str	ip, [sp]
   139e0:	bl	139ec <putchar_unlocked@plt+0x2a34>
   139e4:	mov	sp, fp
   139e8:	pop	{fp, pc}
   139ec:	push	{r4, r5, r6, r7, fp, lr}
   139f0:	add	fp, sp, #16
   139f4:	sub	sp, sp, #48	; 0x30
   139f8:	mov	r7, r3
   139fc:	mov	r5, r0
   13a00:	movw	r0, #24928	; 0x6160
   13a04:	movt	r0, #2
   13a08:	add	r3, r0, #16
   13a0c:	mov	r4, #32
   13a10:	vld1.64	{d16-d17}, [r0], r4
   13a14:	vld1.64	{d18-d19}, [r3]
   13a18:	mov	r6, sp
   13a1c:	add	r3, r6, #16
   13a20:	vld1.64	{d20-d21}, [r0]
   13a24:	vst1.64	{d18-d19}, [r3]
   13a28:	mov	r0, r6
   13a2c:	vst1.64	{d16-d17}, [r0], r4
   13a30:	vst1.64	{d20-d21}, [r0]
   13a34:	mov	r0, r6
   13a38:	bl	12454 <putchar_unlocked@plt+0x149c>
   13a3c:	ldr	r2, [fp, #8]
   13a40:	mov	r0, r5
   13a44:	mov	r1, r7
   13a48:	mov	r3, r6
   13a4c:	bl	1365c <putchar_unlocked@plt+0x26a4>
   13a50:	sub	sp, fp, #16
   13a54:	pop	{r4, r5, r6, r7, fp, pc}
   13a58:	mov	r3, r2
   13a5c:	mov	r2, r1
   13a60:	mov	r1, r0
   13a64:	mov	r0, #0
   13a68:	b	139cc <putchar_unlocked@plt+0x2a14>
   13a6c:	push	{fp, lr}
   13a70:	mov	fp, sp
   13a74:	sub	sp, sp, #8
   13a78:	mov	ip, r2
   13a7c:	mov	r2, r1
   13a80:	mov	r1, r0
   13a84:	str	r3, [sp]
   13a88:	mov	r0, #0
   13a8c:	mov	r3, ip
   13a90:	bl	139ec <putchar_unlocked@plt+0x2a34>
   13a94:	mov	sp, fp
   13a98:	pop	{fp, pc}
   13a9c:	movw	r3, #24816	; 0x60f0
   13aa0:	movt	r3, #2
   13aa4:	b	1365c <putchar_unlocked@plt+0x26a4>
   13aa8:	mov	r2, r1
   13aac:	mov	r1, r0
   13ab0:	mov	r0, #0
   13ab4:	b	13a9c <putchar_unlocked@plt+0x2ae4>
   13ab8:	mvn	r2, #0
   13abc:	b	13a9c <putchar_unlocked@plt+0x2ae4>
   13ac0:	mov	r1, r0
   13ac4:	mov	r0, #0
   13ac8:	b	13ab8 <putchar_unlocked@plt+0x2b00>
   13acc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ad0:	add	fp, sp, #24
   13ad4:	sub	sp, sp, #16
   13ad8:	mov	r4, r1
   13adc:	mov	r5, r0
   13ae0:	mov	r7, #0
   13ae4:	mov	r0, #0
   13ae8:	mov	r1, r5
   13aec:	mov	r2, #5
   13af0:	bl	10e08 <dcgettext@plt>
   13af4:	cmp	r0, r5
   13af8:	beq	13b04 <putchar_unlocked@plt+0x2b4c>
   13afc:	sub	sp, fp, #24
   13b00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13b04:	bl	14c3c <putchar_unlocked@plt+0x3c84>
   13b08:	mov	r6, r0
   13b0c:	mov	r8, #56	; 0x38
   13b10:	mov	r0, #45	; 0x2d
   13b14:	stm	sp, {r0, r8}
   13b18:	str	r7, [sp, #8]
   13b1c:	str	r7, [sp, #12]
   13b20:	mov	r0, r6
   13b24:	mov	r1, #85	; 0x55
   13b28:	mov	r2, #84	; 0x54
   13b2c:	mov	r3, #70	; 0x46
   13b30:	bl	13bc8 <putchar_unlocked@plt+0x2c10>
   13b34:	cmp	r0, #0
   13b38:	beq	13b54 <putchar_unlocked@plt+0x2b9c>
   13b3c:	ldrb	r1, [r5]
   13b40:	movw	r2, #21630	; 0x547e
   13b44:	movt	r2, #1
   13b48:	movw	r0, #21634	; 0x5482
   13b4c:	movt	r0, #1
   13b50:	b	13b98 <putchar_unlocked@plt+0x2be0>
   13b54:	mov	r0, #48	; 0x30
   13b58:	mov	r1, #51	; 0x33
   13b5c:	str	r8, [sp]
   13b60:	stmib	sp, {r0, r1}
   13b64:	str	r0, [sp, #12]
   13b68:	mov	r0, r6
   13b6c:	mov	r1, #71	; 0x47
   13b70:	mov	r2, #66	; 0x42
   13b74:	mov	r3, #49	; 0x31
   13b78:	bl	13bc8 <putchar_unlocked@plt+0x2c10>
   13b7c:	cmp	r0, #0
   13b80:	beq	13ba8 <putchar_unlocked@plt+0x2bf0>
   13b84:	ldrb	r1, [r5]
   13b88:	movw	r2, #21638	; 0x5486
   13b8c:	movt	r2, #1
   13b90:	movw	r0, #21642	; 0x548a
   13b94:	movt	r0, #1
   13b98:	cmp	r1, #96	; 0x60
   13b9c:	moveq	r0, r2
   13ba0:	sub	sp, fp, #24
   13ba4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13ba8:	movw	r1, #21624	; 0x5478
   13bac:	movt	r1, #1
   13bb0:	movw	r0, #21628	; 0x547c
   13bb4:	movt	r0, #1
   13bb8:	cmp	r4, #9
   13bbc:	moveq	r0, r1
   13bc0:	sub	sp, fp, #24
   13bc4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13bc8:	push	{r4, r5, r6, r7, fp, lr}
   13bcc:	add	fp, sp, #16
   13bd0:	sub	sp, sp, #16
   13bd4:	mov	r4, r3
   13bd8:	mov	r5, r2
   13bdc:	mov	r7, r1
   13be0:	mov	r6, r0
   13be4:	mov	r0, r1
   13be8:	bl	14af8 <putchar_unlocked@plt+0x3b40>
   13bec:	ldrb	r1, [r6]
   13bf0:	cmp	r0, #0
   13bf4:	andne	r1, r1, #223	; 0xdf
   13bf8:	mov	r0, #0
   13bfc:	cmp	r1, r7
   13c00:	bne	13c38 <putchar_unlocked@plt+0x2c80>
   13c04:	cmp	r7, #0
   13c08:	beq	13c40 <putchar_unlocked@plt+0x2c88>
   13c0c:	ldr	r0, [fp, #20]
   13c10:	ldr	r1, [fp, #16]
   13c14:	ldr	r2, [fp, #12]
   13c18:	ldr	r3, [fp, #8]
   13c1c:	str	r2, [sp]
   13c20:	str	r1, [sp, #4]
   13c24:	str	r0, [sp, #8]
   13c28:	mov	r0, r6
   13c2c:	mov	r1, r5
   13c30:	mov	r2, r4
   13c34:	bl	13c4c <putchar_unlocked@plt+0x2c94>
   13c38:	sub	sp, fp, #16
   13c3c:	pop	{r4, r5, r6, r7, fp, pc}
   13c40:	mov	r0, #1
   13c44:	sub	sp, fp, #16
   13c48:	pop	{r4, r5, r6, r7, fp, pc}
   13c4c:	push	{r4, r5, r6, r7, fp, lr}
   13c50:	add	fp, sp, #16
   13c54:	sub	sp, sp, #8
   13c58:	mov	r4, r3
   13c5c:	mov	r5, r2
   13c60:	mov	r7, r1
   13c64:	mov	r6, r0
   13c68:	mov	r0, r1
   13c6c:	bl	14af8 <putchar_unlocked@plt+0x3b40>
   13c70:	ldrb	r1, [r6, #1]
   13c74:	cmp	r0, #0
   13c78:	andne	r1, r1, #223	; 0xdf
   13c7c:	mov	r0, #0
   13c80:	cmp	r1, r7
   13c84:	bne	13cb4 <putchar_unlocked@plt+0x2cfc>
   13c88:	cmp	r7, #0
   13c8c:	beq	13cbc <putchar_unlocked@plt+0x2d04>
   13c90:	ldr	r0, [fp, #16]
   13c94:	ldr	r1, [fp, #12]
   13c98:	ldr	r3, [fp, #8]
   13c9c:	str	r1, [sp]
   13ca0:	str	r0, [sp, #4]
   13ca4:	mov	r0, r6
   13ca8:	mov	r1, r5
   13cac:	mov	r2, r4
   13cb0:	bl	13cc8 <putchar_unlocked@plt+0x2d10>
   13cb4:	sub	sp, fp, #16
   13cb8:	pop	{r4, r5, r6, r7, fp, pc}
   13cbc:	mov	r0, #1
   13cc0:	sub	sp, fp, #16
   13cc4:	pop	{r4, r5, r6, r7, fp, pc}
   13cc8:	push	{r4, r5, r6, r7, fp, lr}
   13ccc:	add	fp, sp, #16
   13cd0:	sub	sp, sp, #8
   13cd4:	mov	r4, r3
   13cd8:	mov	r5, r2
   13cdc:	mov	r7, r1
   13ce0:	mov	r6, r0
   13ce4:	mov	r0, r1
   13ce8:	bl	14af8 <putchar_unlocked@plt+0x3b40>
   13cec:	ldrb	r1, [r6, #2]
   13cf0:	cmp	r0, #0
   13cf4:	andne	r1, r1, #223	; 0xdf
   13cf8:	mov	r0, #0
   13cfc:	cmp	r1, r7
   13d00:	bne	13d28 <putchar_unlocked@plt+0x2d70>
   13d04:	cmp	r7, #0
   13d08:	beq	13d30 <putchar_unlocked@plt+0x2d78>
   13d0c:	ldr	r0, [fp, #12]
   13d10:	ldr	r3, [fp, #8]
   13d14:	str	r0, [sp]
   13d18:	mov	r0, r6
   13d1c:	mov	r1, r5
   13d20:	mov	r2, r4
   13d24:	bl	13d3c <putchar_unlocked@plt+0x2d84>
   13d28:	sub	sp, fp, #16
   13d2c:	pop	{r4, r5, r6, r7, fp, pc}
   13d30:	mov	r0, #1
   13d34:	sub	sp, fp, #16
   13d38:	pop	{r4, r5, r6, r7, fp, pc}
   13d3c:	push	{r4, r5, r6, r7, fp, lr}
   13d40:	add	fp, sp, #16
   13d44:	mov	r4, r3
   13d48:	mov	r5, r2
   13d4c:	mov	r7, r1
   13d50:	mov	r6, r0
   13d54:	mov	r0, r1
   13d58:	bl	14af8 <putchar_unlocked@plt+0x3b40>
   13d5c:	ldrb	r1, [r6, #3]
   13d60:	ldr	r3, [fp, #8]
   13d64:	cmp	r0, #0
   13d68:	andne	r1, r1, #223	; 0xdf
   13d6c:	mov	r0, #0
   13d70:	cmp	r1, r7
   13d74:	bne	13d98 <putchar_unlocked@plt+0x2de0>
   13d78:	cmp	r7, #0
   13d7c:	beq	13d94 <putchar_unlocked@plt+0x2ddc>
   13d80:	mov	r0, r6
   13d84:	mov	r1, r5
   13d88:	mov	r2, r4
   13d8c:	pop	{r4, r5, r6, r7, fp, lr}
   13d90:	b	13d9c <putchar_unlocked@plt+0x2de4>
   13d94:	mov	r0, #1
   13d98:	pop	{r4, r5, r6, r7, fp, pc}
   13d9c:	push	{r4, r5, r6, r7, fp, lr}
   13da0:	add	fp, sp, #16
   13da4:	mov	r4, r3
   13da8:	mov	r5, r2
   13dac:	mov	r7, r1
   13db0:	mov	r6, r0
   13db4:	mov	r0, r1
   13db8:	bl	14af8 <putchar_unlocked@plt+0x3b40>
   13dbc:	ldrb	r1, [r6, #4]
   13dc0:	cmp	r0, #0
   13dc4:	andne	r1, r1, #223	; 0xdf
   13dc8:	mov	r0, #0
   13dcc:	cmp	r1, r7
   13dd0:	bne	13df4 <putchar_unlocked@plt+0x2e3c>
   13dd4:	cmp	r7, #0
   13dd8:	beq	13df0 <putchar_unlocked@plt+0x2e38>
   13ddc:	mov	r0, r6
   13de0:	mov	r1, r5
   13de4:	mov	r2, r4
   13de8:	pop	{r4, r5, r6, r7, fp, lr}
   13dec:	b	13df8 <putchar_unlocked@plt+0x2e40>
   13df0:	mov	r0, #1
   13df4:	pop	{r4, r5, r6, r7, fp, pc}
   13df8:	push	{r4, r5, r6, sl, fp, lr}
   13dfc:	add	fp, sp, #16
   13e00:	mov	r4, r2
   13e04:	mov	r6, r1
   13e08:	mov	r5, r0
   13e0c:	mov	r0, r1
   13e10:	bl	14af8 <putchar_unlocked@plt+0x3b40>
   13e14:	ldrb	r1, [r5, #5]
   13e18:	cmp	r0, #0
   13e1c:	andne	r1, r1, #223	; 0xdf
   13e20:	mov	r0, #0
   13e24:	cmp	r1, r6
   13e28:	bne	13e48 <putchar_unlocked@plt+0x2e90>
   13e2c:	cmp	r6, #0
   13e30:	beq	13e44 <putchar_unlocked@plt+0x2e8c>
   13e34:	mov	r0, r5
   13e38:	mov	r1, r4
   13e3c:	pop	{r4, r5, r6, sl, fp, lr}
   13e40:	b	13e4c <putchar_unlocked@plt+0x2e94>
   13e44:	mov	r0, #1
   13e48:	pop	{r4, r5, r6, sl, fp, pc}
   13e4c:	push	{r4, r5, fp, lr}
   13e50:	add	fp, sp, #8
   13e54:	mov	r5, r1
   13e58:	mov	r4, r0
   13e5c:	mov	r0, r1
   13e60:	bl	14af8 <putchar_unlocked@plt+0x3b40>
   13e64:	ldrb	r1, [r4, #6]
   13e68:	cmp	r0, #0
   13e6c:	andne	r1, r1, #223	; 0xdf
   13e70:	mov	r0, #0
   13e74:	cmp	r1, r5
   13e78:	popne	{r4, r5, fp, pc}
   13e7c:	cmp	r5, #0
   13e80:	beq	13e90 <putchar_unlocked@plt+0x2ed8>
   13e84:	mov	r0, r4
   13e88:	pop	{r4, r5, fp, lr}
   13e8c:	b	13e98 <putchar_unlocked@plt+0x2ee0>
   13e90:	mov	r0, #1
   13e94:	pop	{r4, r5, fp, pc}
   13e98:	push	{r4, sl, fp, lr}
   13e9c:	add	fp, sp, #8
   13ea0:	mov	r4, r0
   13ea4:	mov	r0, #0
   13ea8:	bl	14af8 <putchar_unlocked@plt+0x3b40>
   13eac:	ldrb	r1, [r4, #7]
   13eb0:	cmp	r0, #0
   13eb4:	beq	13ec8 <putchar_unlocked@plt+0x2f10>
   13eb8:	tst	r1, #223	; 0xdf
   13ebc:	bne	13ed0 <putchar_unlocked@plt+0x2f18>
   13ec0:	mov	r0, #1
   13ec4:	pop	{r4, sl, fp, pc}
   13ec8:	cmp	r1, #0
   13ecc:	beq	13ec0 <putchar_unlocked@plt+0x2f08>
   13ed0:	mov	r0, #0
   13ed4:	pop	{r4, sl, fp, pc}
   13ed8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13edc:	add	fp, sp, #24
   13ee0:	sub	sp, sp, #32
   13ee4:	mov	r4, r2
   13ee8:	mov	r8, r0
   13eec:	ldr	r6, [fp, #12]
   13ef0:	ldr	r7, [fp, #8]
   13ef4:	cmp	r1, #0
   13ef8:	beq	13f20 <putchar_unlocked@plt+0x2f68>
   13efc:	mov	r5, r1
   13f00:	str	r4, [sp]
   13f04:	str	r3, [sp, #4]
   13f08:	movw	r2, #21732	; 0x54e4
   13f0c:	movt	r2, #1
   13f10:	mov	r0, r8
   13f14:	mov	r1, #1
   13f18:	mov	r3, r5
   13f1c:	b	13f38 <putchar_unlocked@plt+0x2f80>
   13f20:	str	r3, [sp]
   13f24:	movw	r2, #21744	; 0x54f0
   13f28:	movt	r2, #1
   13f2c:	mov	r0, r8
   13f30:	mov	r1, #1
   13f34:	mov	r3, r4
   13f38:	bl	10f34 <__fprintf_chk@plt>
   13f3c:	movw	r1, #21751	; 0x54f7
   13f40:	movt	r1, #1
   13f44:	mov	r0, #0
   13f48:	mov	r2, #5
   13f4c:	bl	10e08 <dcgettext@plt>
   13f50:	mov	r3, r0
   13f54:	movw	r0, #2022	; 0x7e6
   13f58:	str	r0, [sp]
   13f5c:	movw	r2, #22469	; 0x57c5
   13f60:	movt	r2, #1
   13f64:	mov	r0, r8
   13f68:	mov	r1, #1
   13f6c:	bl	10f34 <__fprintf_chk@plt>
   13f70:	movw	r4, #21214	; 0x52de
   13f74:	movt	r4, #1
   13f78:	mov	r0, r4
   13f7c:	mov	r1, r8
   13f80:	bl	10d90 <fputs_unlocked@plt>
   13f84:	movw	r1, #21755	; 0x54fb
   13f88:	movt	r1, #1
   13f8c:	mov	r0, #0
   13f90:	mov	r2, #5
   13f94:	bl	10e08 <dcgettext@plt>
   13f98:	mov	r2, r0
   13f9c:	movw	r3, #21926	; 0x55a6
   13fa0:	movt	r3, #1
   13fa4:	mov	r0, r8
   13fa8:	mov	r1, #1
   13fac:	bl	10f34 <__fprintf_chk@plt>
   13fb0:	mov	r0, r4
   13fb4:	mov	r1, r8
   13fb8:	bl	10d90 <fputs_unlocked@plt>
   13fbc:	cmp	r6, #9
   13fc0:	bhi	13ffc <putchar_unlocked@plt+0x3044>
   13fc4:	add	r0, pc, #0
   13fc8:	ldr	pc, [r0, r6, lsl #2]
   13fcc:	strdeq	r3, [r1], -r4
   13fd0:	andeq	r4, r1, r8
   13fd4:	andeq	r4, r1, r8, lsr r0
   13fd8:	andeq	r4, r1, r0, rrx
   13fdc:	andeq	r4, r1, r8, lsl #1
   13fe0:	strheq	r4, [r1], -r0
   13fe4:	ldrdeq	r4, [r1], -r8
   13fe8:	andeq	r4, r1, r0, lsl r1
   13fec:			; <UNDEFINED> instruction: 0x000141b0
   13ff0:	andeq	r4, r1, r8, asr r1
   13ff4:	sub	sp, fp, #24
   13ff8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13ffc:	movw	r1, #22279	; 0x5707
   14000:	movt	r1, #1
   14004:	b	14160 <putchar_unlocked@plt+0x31a8>
   14008:	movw	r1, #21960	; 0x55c8
   1400c:	movt	r1, #1
   14010:	mov	r0, #0
   14014:	mov	r2, #5
   14018:	bl	10e08 <dcgettext@plt>
   1401c:	mov	r2, r0
   14020:	ldr	r3, [r7]
   14024:	mov	r0, r8
   14028:	mov	r1, #1
   1402c:	sub	sp, fp, #24
   14030:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14034:	b	10f34 <__fprintf_chk@plt>
   14038:	movw	r1, #21976	; 0x55d8
   1403c:	movt	r1, #1
   14040:	mov	r0, #0
   14044:	mov	r2, #5
   14048:	bl	10e08 <dcgettext@plt>
   1404c:	mov	r2, r0
   14050:	ldr	r3, [r7]
   14054:	ldr	r0, [r7, #4]
   14058:	str	r0, [sp]
   1405c:	b	1414c <putchar_unlocked@plt+0x3194>
   14060:	movw	r1, #21999	; 0x55ef
   14064:	movt	r1, #1
   14068:	mov	r0, #0
   1406c:	mov	r2, #5
   14070:	bl	10e08 <dcgettext@plt>
   14074:	mov	r2, r0
   14078:	ldr	r3, [r7]
   1407c:	ldmib	r7, {r0, r1}
   14080:	stm	sp, {r0, r1}
   14084:	b	1414c <putchar_unlocked@plt+0x3194>
   14088:	movw	r1, #22027	; 0x560b
   1408c:	movt	r1, #1
   14090:	mov	r0, #0
   14094:	mov	r2, #5
   14098:	bl	10e08 <dcgettext@plt>
   1409c:	mov	r2, r0
   140a0:	ldr	r3, [r7]
   140a4:	ldmib	r7, {r0, r1, r7}
   140a8:	stm	sp, {r0, r1, r7}
   140ac:	b	1414c <putchar_unlocked@plt+0x3194>
   140b0:	movw	r1, #22059	; 0x562b
   140b4:	movt	r1, #1
   140b8:	mov	r0, #0
   140bc:	mov	r2, #5
   140c0:	bl	10e08 <dcgettext@plt>
   140c4:	mov	r2, r0
   140c8:	ldr	r3, [r7]
   140cc:	ldmib	r7, {r0, r1, r6, r7}
   140d0:	stm	sp, {r0, r1, r6, r7}
   140d4:	b	1414c <putchar_unlocked@plt+0x3194>
   140d8:	movw	r1, #22095	; 0x564f
   140dc:	movt	r1, #1
   140e0:	mov	r0, #0
   140e4:	mov	r2, #5
   140e8:	bl	10e08 <dcgettext@plt>
   140ec:	mov	r2, r0
   140f0:	ldr	r3, [r7]
   140f4:	ldmib	r7, {r0, r1, r6}
   140f8:	ldr	r5, [r7, #16]
   140fc:	ldr	r7, [r7, #20]
   14100:	stm	sp, {r0, r1, r6}
   14104:	str	r5, [sp, #12]
   14108:	str	r7, [sp, #16]
   1410c:	b	1414c <putchar_unlocked@plt+0x3194>
   14110:	movw	r1, #22135	; 0x5677
   14114:	movt	r1, #1
   14118:	mov	r0, #0
   1411c:	mov	r2, #5
   14120:	bl	10e08 <dcgettext@plt>
   14124:	mov	r2, r0
   14128:	ldr	r3, [r7]
   1412c:	ldmib	r7, {r0, r1, r6}
   14130:	ldr	r5, [r7, #16]
   14134:	ldr	r4, [r7, #20]
   14138:	ldr	r7, [r7, #24]
   1413c:	stm	sp, {r0, r1, r6}
   14140:	str	r5, [sp, #12]
   14144:	str	r4, [sp, #16]
   14148:	str	r7, [sp, #20]
   1414c:	mov	r0, r8
   14150:	mov	r1, #1
   14154:	b	14200 <putchar_unlocked@plt+0x3248>
   14158:	movw	r1, #22227	; 0x56d3
   1415c:	movt	r1, #1
   14160:	mov	r0, #0
   14164:	mov	r2, #5
   14168:	bl	10e08 <dcgettext@plt>
   1416c:	mov	ip, r0
   14170:	ldr	r3, [r7]
   14174:	ldr	r0, [r7, #4]
   14178:	ldr	r1, [r7, #8]
   1417c:	ldr	r6, [r7, #12]
   14180:	ldr	r5, [r7, #16]
   14184:	ldr	r4, [r7, #20]
   14188:	ldr	r2, [r7, #24]
   1418c:	ldr	lr, [r7, #28]
   14190:	ldr	r7, [r7, #32]
   14194:	stm	sp, {r0, r1, r6}
   14198:	str	r5, [sp, #12]
   1419c:	str	r4, [sp, #16]
   141a0:	str	r2, [sp, #20]
   141a4:	str	lr, [sp, #24]
   141a8:	str	r7, [sp, #28]
   141ac:	b	141f4 <putchar_unlocked@plt+0x323c>
   141b0:	movw	r1, #22179	; 0x56a3
   141b4:	movt	r1, #1
   141b8:	mov	r0, #0
   141bc:	mov	r2, #5
   141c0:	bl	10e08 <dcgettext@plt>
   141c4:	mov	ip, r0
   141c8:	ldr	r3, [r7]
   141cc:	ldmib	r7, {r0, r1, r6}
   141d0:	ldr	r5, [r7, #16]
   141d4:	ldr	r4, [r7, #20]
   141d8:	ldr	r2, [r7, #24]
   141dc:	ldr	r7, [r7, #28]
   141e0:	stm	sp, {r0, r1, r6}
   141e4:	str	r5, [sp, #12]
   141e8:	str	r4, [sp, #16]
   141ec:	str	r2, [sp, #20]
   141f0:	str	r7, [sp, #24]
   141f4:	mov	r0, r8
   141f8:	mov	r1, #1
   141fc:	mov	r2, ip
   14200:	bl	10f34 <__fprintf_chk@plt>
   14204:	sub	sp, fp, #24
   14208:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1420c:	push	{r4, sl, fp, lr}
   14210:	add	fp, sp, #8
   14214:	sub	sp, sp, #8
   14218:	mov	lr, #0
   1421c:	ldr	ip, [fp, #8]
   14220:	ldr	r4, [ip, lr, lsl #2]
   14224:	add	lr, lr, #1
   14228:	cmp	r4, #0
   1422c:	bne	14220 <putchar_unlocked@plt+0x3268>
   14230:	sub	r4, lr, #1
   14234:	str	ip, [sp]
   14238:	str	r4, [sp, #4]
   1423c:	bl	13ed8 <putchar_unlocked@plt+0x2f20>
   14240:	sub	sp, fp, #8
   14244:	pop	{r4, sl, fp, pc}
   14248:	push	{r4, r5, fp, lr}
   1424c:	add	fp, sp, #8
   14250:	sub	sp, sp, #48	; 0x30
   14254:	mov	ip, #0
   14258:	ldr	r4, [fp, #8]
   1425c:	add	lr, sp, #8
   14260:	ldr	r5, [r4]
   14264:	str	r5, [lr, ip, lsl #2]
   14268:	cmp	r5, #0
   1426c:	beq	14284 <putchar_unlocked@plt+0x32cc>
   14270:	add	ip, ip, #1
   14274:	add	r4, r4, #4
   14278:	cmp	ip, #10
   1427c:	bne	14260 <putchar_unlocked@plt+0x32a8>
   14280:	mov	ip, #10
   14284:	str	lr, [sp]
   14288:	str	ip, [sp, #4]
   1428c:	bl	13ed8 <putchar_unlocked@plt+0x2f20>
   14290:	sub	sp, fp, #8
   14294:	pop	{r4, r5, fp, pc}
   14298:	push	{fp, lr}
   1429c:	mov	fp, sp
   142a0:	sub	sp, sp, #8
   142a4:	add	ip, fp, #8
   142a8:	str	ip, [sp, #4]
   142ac:	str	ip, [sp]
   142b0:	bl	14248 <putchar_unlocked@plt+0x3290>
   142b4:	mov	sp, fp
   142b8:	pop	{fp, pc}
   142bc:	push	{fp, lr}
   142c0:	mov	fp, sp
   142c4:	movw	r0, #24892	; 0x613c
   142c8:	movt	r0, #2
   142cc:	ldr	r1, [r0]
   142d0:	movw	r0, #21214	; 0x52de
   142d4:	movt	r0, #1
   142d8:	bl	10d90 <fputs_unlocked@plt>
   142dc:	movw	r1, #22339	; 0x5743
   142e0:	movt	r1, #1
   142e4:	mov	r0, #0
   142e8:	mov	r2, #5
   142ec:	bl	10e08 <dcgettext@plt>
   142f0:	mov	r1, r0
   142f4:	movw	r2, #22359	; 0x5757
   142f8:	movt	r2, #1
   142fc:	mov	r0, #1
   14300:	bl	10f1c <__printf_chk@plt>
   14304:	movw	r1, #22381	; 0x576d
   14308:	movt	r1, #1
   1430c:	mov	r0, #0
   14310:	mov	r2, #5
   14314:	bl	10e08 <dcgettext@plt>
   14318:	mov	r1, r0
   1431c:	movw	r2, #20677	; 0x50c5
   14320:	movt	r2, #1
   14324:	movw	r3, #21023	; 0x521f
   14328:	movt	r3, #1
   1432c:	mov	r0, #1
   14330:	bl	10f1c <__printf_chk@plt>
   14334:	movw	r1, #22401	; 0x5781
   14338:	movt	r1, #1
   1433c:	mov	r0, #0
   14340:	mov	r2, #5
   14344:	bl	10e08 <dcgettext@plt>
   14348:	mov	r1, r0
   1434c:	movw	r2, #22440	; 0x57a8
   14350:	movt	r2, #1
   14354:	mov	r0, #1
   14358:	pop	{fp, lr}
   1435c:	b	10f1c <__printf_chk@plt>
   14360:	b	14364 <putchar_unlocked@plt+0x33ac>
   14364:	push	{r4, r5, r6, sl, fp, lr}
   14368:	add	fp, sp, #16
   1436c:	mov	r4, r2
   14370:	mov	r5, r1
   14374:	mov	r6, r0
   14378:	bl	14cd8 <putchar_unlocked@plt+0x3d20>
   1437c:	cmp	r0, #0
   14380:	popne	{r4, r5, r6, sl, fp, pc}
   14384:	cmp	r6, #0
   14388:	beq	1439c <putchar_unlocked@plt+0x33e4>
   1438c:	cmp	r5, #0
   14390:	cmpne	r4, #0
   14394:	bne	1439c <putchar_unlocked@plt+0x33e4>
   14398:	pop	{r4, r5, r6, sl, fp, pc}
   1439c:	bl	14728 <putchar_unlocked@plt+0x3770>
   143a0:	push	{fp, lr}
   143a4:	mov	fp, sp
   143a8:	bl	147c0 <putchar_unlocked@plt+0x3808>
   143ac:	pop	{fp, lr}
   143b0:	b	143b4 <putchar_unlocked@plt+0x33fc>
   143b4:	cmp	r0, #0
   143b8:	bxne	lr
   143bc:	push	{fp, lr}
   143c0:	mov	fp, sp
   143c4:	bl	14728 <putchar_unlocked@plt+0x3770>
   143c8:	push	{fp, lr}
   143cc:	mov	fp, sp
   143d0:	bl	14c08 <putchar_unlocked@plt+0x3c50>
   143d4:	pop	{fp, lr}
   143d8:	b	143b4 <putchar_unlocked@plt+0x33fc>
   143dc:	b	143a0 <putchar_unlocked@plt+0x33e8>
   143e0:	push	{r4, r5, fp, lr}
   143e4:	add	fp, sp, #8
   143e8:	mov	r4, r1
   143ec:	mov	r5, r0
   143f0:	bl	147f0 <putchar_unlocked@plt+0x3838>
   143f4:	cmp	r0, #0
   143f8:	popne	{r4, r5, fp, pc}
   143fc:	cmp	r5, #0
   14400:	beq	14410 <putchar_unlocked@plt+0x3458>
   14404:	cmp	r4, #0
   14408:	bne	14410 <putchar_unlocked@plt+0x3458>
   1440c:	pop	{r4, r5, fp, pc}
   14410:	bl	14728 <putchar_unlocked@plt+0x3770>
   14414:	push	{fp, lr}
   14418:	mov	fp, sp
   1441c:	bl	14c0c <putchar_unlocked@plt+0x3c54>
   14420:	pop	{fp, lr}
   14424:	b	143b4 <putchar_unlocked@plt+0x33fc>
   14428:	push	{fp, lr}
   1442c:	mov	fp, sp
   14430:	bl	14c1c <putchar_unlocked@plt+0x3c64>
   14434:	pop	{fp, lr}
   14438:	b	143b4 <putchar_unlocked@plt+0x33fc>
   1443c:	mov	r2, r1
   14440:	mov	r1, r0
   14444:	mov	r0, #0
   14448:	b	14364 <putchar_unlocked@plt+0x33ac>
   1444c:	mov	r2, r1
   14450:	mov	r1, r0
   14454:	mov	r0, #0
   14458:	b	14428 <putchar_unlocked@plt+0x3470>
   1445c:	mov	r2, #1
   14460:	b	14464 <putchar_unlocked@plt+0x34ac>
   14464:	push	{r4, r5, fp, lr}
   14468:	add	fp, sp, #8
   1446c:	mov	r4, r1
   14470:	ldr	r5, [r1]
   14474:	cmp	r0, #0
   14478:	beq	14490 <putchar_unlocked@plt+0x34d8>
   1447c:	mov	r1, #1
   14480:	add	r1, r1, r5, lsr #1
   14484:	adds	r5, r5, r1
   14488:	bcc	144a8 <putchar_unlocked@plt+0x34f0>
   1448c:	bl	14728 <putchar_unlocked@plt+0x3770>
   14490:	cmp	r5, #0
   14494:	bne	144a8 <putchar_unlocked@plt+0x34f0>
   14498:	mov	r1, #64	; 0x40
   1449c:	udiv	r5, r1, r2
   144a0:	cmp	r2, #64	; 0x40
   144a4:	addhi	r5, r5, #1
   144a8:	mov	r1, r5
   144ac:	bl	14364 <putchar_unlocked@plt+0x33ac>
   144b0:	str	r5, [r4]
   144b4:	pop	{r4, r5, fp, pc}
   144b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   144bc:	add	fp, sp, #24
   144c0:	mov	r8, r1
   144c4:	ldr	r6, [r1]
   144c8:	add	r1, r6, r6, asr #1
   144cc:	cmp	r1, r6
   144d0:	mvnvs	r1, #-2147483648	; 0x80000000
   144d4:	cmp	r1, r3
   144d8:	mov	r5, r1
   144dc:	movgt	r5, r3
   144e0:	cmn	r3, #1
   144e4:	movle	r5, r1
   144e8:	ldr	r4, [fp, #8]
   144ec:	cmn	r4, #1
   144f0:	ble	14518 <putchar_unlocked@plt+0x3560>
   144f4:	cmp	r4, #0
   144f8:	beq	1456c <putchar_unlocked@plt+0x35b4>
   144fc:	cmn	r5, #1
   14500:	ble	14540 <putchar_unlocked@plt+0x3588>
   14504:	mvn	r7, #-2147483648	; 0x80000000
   14508:	udiv	r1, r7, r4
   1450c:	cmp	r1, r5
   14510:	bge	1456c <putchar_unlocked@plt+0x35b4>
   14514:	b	1457c <putchar_unlocked@plt+0x35c4>
   14518:	cmn	r5, #1
   1451c:	ble	1455c <putchar_unlocked@plt+0x35a4>
   14520:	cmn	r4, #1
   14524:	beq	1456c <putchar_unlocked@plt+0x35b4>
   14528:	mov	r1, #-2147483648	; 0x80000000
   1452c:	sdiv	r1, r1, r4
   14530:	mvn	r7, #-2147483648	; 0x80000000
   14534:	cmp	r1, r5
   14538:	bge	1456c <putchar_unlocked@plt+0x35b4>
   1453c:	b	1457c <putchar_unlocked@plt+0x35c4>
   14540:	beq	1456c <putchar_unlocked@plt+0x35b4>
   14544:	mov	r1, #-2147483648	; 0x80000000
   14548:	sdiv	r1, r1, r5
   1454c:	mvn	r7, #-2147483648	; 0x80000000
   14550:	cmp	r1, r4
   14554:	bge	1456c <putchar_unlocked@plt+0x35b4>
   14558:	b	1457c <putchar_unlocked@plt+0x35c4>
   1455c:	mvn	r7, #-2147483648	; 0x80000000
   14560:	sdiv	r1, r7, r4
   14564:	cmp	r5, r1
   14568:	blt	1457c <putchar_unlocked@plt+0x35c4>
   1456c:	mul	r1, r5, r4
   14570:	mov	r7, #64	; 0x40
   14574:	cmp	r1, #63	; 0x3f
   14578:	bgt	14584 <putchar_unlocked@plt+0x35cc>
   1457c:	sdiv	r5, r7, r4
   14580:	mul	r1, r5, r4
   14584:	cmp	r0, #0
   14588:	moveq	r7, #0
   1458c:	streq	r7, [r8]
   14590:	sub	r7, r5, r6
   14594:	cmp	r7, r2
   14598:	bge	14644 <putchar_unlocked@plt+0x368c>
   1459c:	add	r5, r6, r2
   145a0:	mov	r1, #0
   145a4:	cmp	r5, r3
   145a8:	mov	r2, #0
   145ac:	movwgt	r2, #1
   145b0:	cmn	r3, #1
   145b4:	movwgt	r1, #1
   145b8:	cmp	r5, r6
   145bc:	bvs	1462c <putchar_unlocked@plt+0x3674>
   145c0:	ands	r1, r1, r2
   145c4:	bne	1462c <putchar_unlocked@plt+0x3674>
   145c8:	cmn	r4, #1
   145cc:	ble	145f4 <putchar_unlocked@plt+0x363c>
   145d0:	cmp	r4, #0
   145d4:	beq	14640 <putchar_unlocked@plt+0x3688>
   145d8:	cmn	r5, #1
   145dc:	ble	14618 <putchar_unlocked@plt+0x3660>
   145e0:	mvn	r1, #-2147483648	; 0x80000000
   145e4:	udiv	r1, r1, r4
   145e8:	cmp	r1, r5
   145ec:	bge	14640 <putchar_unlocked@plt+0x3688>
   145f0:	b	1462c <putchar_unlocked@plt+0x3674>
   145f4:	cmn	r5, #1
   145f8:	ble	14630 <putchar_unlocked@plt+0x3678>
   145fc:	cmn	r4, #1
   14600:	beq	14640 <putchar_unlocked@plt+0x3688>
   14604:	mov	r1, #-2147483648	; 0x80000000
   14608:	sdiv	r1, r1, r4
   1460c:	cmp	r1, r5
   14610:	bge	14640 <putchar_unlocked@plt+0x3688>
   14614:	b	1462c <putchar_unlocked@plt+0x3674>
   14618:	beq	14640 <putchar_unlocked@plt+0x3688>
   1461c:	mov	r1, #-2147483648	; 0x80000000
   14620:	sdiv	r1, r1, r5
   14624:	cmp	r1, r4
   14628:	bge	14640 <putchar_unlocked@plt+0x3688>
   1462c:	bl	14728 <putchar_unlocked@plt+0x3770>
   14630:	mvn	r1, #-2147483648	; 0x80000000
   14634:	sdiv	r1, r1, r4
   14638:	cmp	r5, r1
   1463c:	blt	1462c <putchar_unlocked@plt+0x3674>
   14640:	mul	r1, r5, r4
   14644:	bl	143e0 <putchar_unlocked@plt+0x3428>
   14648:	str	r5, [r8]
   1464c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14650:	mov	r1, #1
   14654:	b	14658 <putchar_unlocked@plt+0x36a0>
   14658:	push	{fp, lr}
   1465c:	mov	fp, sp
   14660:	bl	1476c <putchar_unlocked@plt+0x37b4>
   14664:	pop	{fp, lr}
   14668:	b	143b4 <putchar_unlocked@plt+0x33fc>
   1466c:	mov	r1, #1
   14670:	b	14674 <putchar_unlocked@plt+0x36bc>
   14674:	push	{fp, lr}
   14678:	mov	fp, sp
   1467c:	bl	14c18 <putchar_unlocked@plt+0x3c60>
   14680:	pop	{fp, lr}
   14684:	b	143b4 <putchar_unlocked@plt+0x33fc>
   14688:	push	{r4, r5, fp, lr}
   1468c:	add	fp, sp, #8
   14690:	mov	r4, r1
   14694:	mov	r5, r0
   14698:	mov	r0, r1
   1469c:	bl	143a0 <putchar_unlocked@plt+0x33e8>
   146a0:	mov	r1, r5
   146a4:	mov	r2, r4
   146a8:	pop	{r4, r5, fp, lr}
   146ac:	b	10dd8 <memcpy@plt>
   146b0:	push	{r4, r5, fp, lr}
   146b4:	add	fp, sp, #8
   146b8:	mov	r4, r1
   146bc:	mov	r5, r0
   146c0:	mov	r0, r1
   146c4:	bl	143c8 <putchar_unlocked@plt+0x3410>
   146c8:	mov	r1, r5
   146cc:	mov	r2, r4
   146d0:	pop	{r4, r5, fp, lr}
   146d4:	b	10dd8 <memcpy@plt>
   146d8:	push	{r4, r5, fp, lr}
   146dc:	add	fp, sp, #8
   146e0:	mov	r4, r1
   146e4:	mov	r5, r0
   146e8:	add	r0, r1, #1
   146ec:	bl	143c8 <putchar_unlocked@plt+0x3410>
   146f0:	mov	r1, #0
   146f4:	strb	r1, [r0, r4]
   146f8:	mov	r1, r5
   146fc:	mov	r2, r4
   14700:	pop	{r4, r5, fp, lr}
   14704:	b	10dd8 <memcpy@plt>
   14708:	push	{r4, sl, fp, lr}
   1470c:	add	fp, sp, #8
   14710:	mov	r4, r0
   14714:	bl	10eec <strlen@plt>
   14718:	add	r1, r0, #1
   1471c:	mov	r0, r4
   14720:	pop	{r4, sl, fp, lr}
   14724:	b	14688 <putchar_unlocked@plt+0x36d0>
   14728:	push	{fp, lr}
   1472c:	mov	fp, sp
   14730:	movw	r0, #24796	; 0x60dc
   14734:	movt	r0, #2
   14738:	ldr	r4, [r0]
   1473c:	movw	r1, #22516	; 0x57f4
   14740:	movt	r1, #1
   14744:	mov	r0, #0
   14748:	mov	r2, #5
   1474c:	bl	10e08 <dcgettext@plt>
   14750:	mov	r3, r0
   14754:	movw	r2, #20771	; 0x5123
   14758:	movt	r2, #1
   1475c:	mov	r0, r4
   14760:	mov	r1, #0
   14764:	bl	10e80 <error@plt>
   14768:	bl	10fac <abort@plt>
   1476c:	clz	r2, r1
   14770:	lsr	r2, r2, #5
   14774:	clz	r3, r0
   14778:	lsr	r3, r3, #5
   1477c:	orrs	r2, r3, r2
   14780:	movwne	r1, #1
   14784:	movwne	r0, #1
   14788:	cmp	r1, #0
   1478c:	beq	147bc <putchar_unlocked@plt+0x3804>
   14790:	mvn	r2, #-2147483648	; 0x80000000
   14794:	udiv	r2, r2, r1
   14798:	cmp	r2, r0
   1479c:	bcs	147bc <putchar_unlocked@plt+0x3804>
   147a0:	push	{fp, lr}
   147a4:	mov	fp, sp
   147a8:	bl	10ef8 <__errno_location@plt>
   147ac:	mov	r1, #12
   147b0:	str	r1, [r0]
   147b4:	mov	r0, #0
   147b8:	pop	{fp, pc}
   147bc:	b	10d84 <calloc@plt>
   147c0:	cmp	r0, #0
   147c4:	movweq	r0, #1
   147c8:	cmn	r0, #1
   147cc:	ble	147d4 <putchar_unlocked@plt+0x381c>
   147d0:	b	10e8c <malloc@plt>
   147d4:	push	{fp, lr}
   147d8:	mov	fp, sp
   147dc:	bl	10ef8 <__errno_location@plt>
   147e0:	mov	r1, #12
   147e4:	str	r1, [r0]
   147e8:	mov	r0, #0
   147ec:	pop	{fp, pc}
   147f0:	push	{fp, lr}
   147f4:	mov	fp, sp
   147f8:	cmp	r0, #0
   147fc:	beq	14818 <putchar_unlocked@plt+0x3860>
   14800:	cmp	r1, #0
   14804:	beq	14824 <putchar_unlocked@plt+0x386c>
   14808:	cmn	r1, #1
   1480c:	ble	14830 <putchar_unlocked@plt+0x3878>
   14810:	pop	{fp, lr}
   14814:	b	10e14 <realloc@plt>
   14818:	mov	r0, r1
   1481c:	pop	{fp, lr}
   14820:	b	147c0 <putchar_unlocked@plt+0x3808>
   14824:	bl	121fc <putchar_unlocked@plt+0x1244>
   14828:	mov	r0, #0
   1482c:	pop	{fp, pc}
   14830:	bl	10ef8 <__errno_location@plt>
   14834:	mov	r1, #12
   14838:	str	r1, [r0]
   1483c:	mov	r0, #0
   14840:	pop	{fp, pc}
   14844:	mov	r1, r0
   14848:	sub	r2, r0, #65	; 0x41
   1484c:	mov	r0, #1
   14850:	cmp	r2, #26
   14854:	subcs	r2, r1, #97	; 0x61
   14858:	cmpcs	r2, #26
   1485c:	bcs	14864 <putchar_unlocked@plt+0x38ac>
   14860:	bx	lr
   14864:	sub	r1, r1, #48	; 0x30
   14868:	cmp	r1, #10
   1486c:	movcs	r0, #0
   14870:	bx	lr
   14874:	mov	r1, r0
   14878:	sub	r2, r0, #65	; 0x41
   1487c:	mov	r0, #1
   14880:	cmp	r2, #26
   14884:	subcs	r1, r1, #97	; 0x61
   14888:	cmpcs	r1, #26
   1488c:	movcs	r0, #0
   14890:	bx	lr
   14894:	mov	r1, #0
   14898:	cmp	r0, #128	; 0x80
   1489c:	movwcc	r1, #1
   148a0:	mov	r0, r1
   148a4:	bx	lr
   148a8:	sub	r1, r0, #9
   148ac:	clz	r1, r1
   148b0:	lsr	r1, r1, #5
   148b4:	sub	r0, r0, #32
   148b8:	clz	r0, r0
   148bc:	lsr	r0, r0, #5
   148c0:	orr	r0, r0, r1
   148c4:	bx	lr
   148c8:	mov	r1, r0
   148cc:	mov	r0, #1
   148d0:	cmp	r1, #32
   148d4:	bxcc	lr
   148d8:	cmp	r1, #127	; 0x7f
   148dc:	movne	r0, #0
   148e0:	bx	lr
   148e4:	sub	r1, r0, #48	; 0x30
   148e8:	mov	r0, #0
   148ec:	cmp	r1, #10
   148f0:	movwcc	r0, #1
   148f4:	bx	lr
   148f8:	sub	r1, r0, #33	; 0x21
   148fc:	mov	r0, #0
   14900:	cmp	r1, #94	; 0x5e
   14904:	movwcc	r0, #1
   14908:	bx	lr
   1490c:	sub	r1, r0, #97	; 0x61
   14910:	mov	r0, #0
   14914:	cmp	r1, #26
   14918:	movwcc	r0, #1
   1491c:	bx	lr
   14920:	sub	r1, r0, #32
   14924:	mov	r0, #0
   14928:	cmp	r1, #95	; 0x5f
   1492c:	movwcc	r0, #1
   14930:	bx	lr
   14934:	sub	r1, r0, #33	; 0x21
   14938:	cmp	r1, #93	; 0x5d
   1493c:	bhi	14ac8 <putchar_unlocked@plt+0x3b10>
   14940:	mov	r0, #1
   14944:	add	r2, pc, #0
   14948:	ldr	pc, [r2, r1, lsl #2]
   1494c:	andeq	r4, r1, r4, asr #21
   14950:	andeq	r4, r1, r4, asr #21
   14954:	andeq	r4, r1, r4, asr #21
   14958:	andeq	r4, r1, r4, asr #21
   1495c:	andeq	r4, r1, r4, asr #21
   14960:	andeq	r4, r1, r4, asr #21
   14964:	andeq	r4, r1, r4, asr #21
   14968:	andeq	r4, r1, r4, asr #21
   1496c:	andeq	r4, r1, r4, asr #21
   14970:	andeq	r4, r1, r4, asr #21
   14974:	andeq	r4, r1, r4, asr #21
   14978:	andeq	r4, r1, r4, asr #21
   1497c:	andeq	r4, r1, r4, asr #21
   14980:	andeq	r4, r1, r4, asr #21
   14984:	andeq	r4, r1, r4, asr #21
   14988:	andeq	r4, r1, r8, asr #21
   1498c:	andeq	r4, r1, r8, asr #21
   14990:	andeq	r4, r1, r8, asr #21
   14994:	andeq	r4, r1, r8, asr #21
   14998:	andeq	r4, r1, r8, asr #21
   1499c:	andeq	r4, r1, r8, asr #21
   149a0:	andeq	r4, r1, r8, asr #21
   149a4:	andeq	r4, r1, r8, asr #21
   149a8:	andeq	r4, r1, r8, asr #21
   149ac:	andeq	r4, r1, r8, asr #21
   149b0:	andeq	r4, r1, r4, asr #21
   149b4:	andeq	r4, r1, r4, asr #21
   149b8:	andeq	r4, r1, r4, asr #21
   149bc:	andeq	r4, r1, r4, asr #21
   149c0:	andeq	r4, r1, r4, asr #21
   149c4:	andeq	r4, r1, r4, asr #21
   149c8:	andeq	r4, r1, r4, asr #21
   149cc:	andeq	r4, r1, r8, asr #21
   149d0:	andeq	r4, r1, r8, asr #21
   149d4:	andeq	r4, r1, r8, asr #21
   149d8:	andeq	r4, r1, r8, asr #21
   149dc:	andeq	r4, r1, r8, asr #21
   149e0:	andeq	r4, r1, r8, asr #21
   149e4:	andeq	r4, r1, r8, asr #21
   149e8:	andeq	r4, r1, r8, asr #21
   149ec:	andeq	r4, r1, r8, asr #21
   149f0:	andeq	r4, r1, r8, asr #21
   149f4:	andeq	r4, r1, r8, asr #21
   149f8:	andeq	r4, r1, r8, asr #21
   149fc:	andeq	r4, r1, r8, asr #21
   14a00:	andeq	r4, r1, r8, asr #21
   14a04:	andeq	r4, r1, r8, asr #21
   14a08:	andeq	r4, r1, r8, asr #21
   14a0c:	andeq	r4, r1, r8, asr #21
   14a10:	andeq	r4, r1, r8, asr #21
   14a14:	andeq	r4, r1, r8, asr #21
   14a18:	andeq	r4, r1, r8, asr #21
   14a1c:	andeq	r4, r1, r8, asr #21
   14a20:	andeq	r4, r1, r8, asr #21
   14a24:	andeq	r4, r1, r8, asr #21
   14a28:	andeq	r4, r1, r8, asr #21
   14a2c:	andeq	r4, r1, r8, asr #21
   14a30:	andeq	r4, r1, r8, asr #21
   14a34:	andeq	r4, r1, r4, asr #21
   14a38:	andeq	r4, r1, r4, asr #21
   14a3c:	andeq	r4, r1, r4, asr #21
   14a40:	andeq	r4, r1, r4, asr #21
   14a44:	andeq	r4, r1, r4, asr #21
   14a48:	andeq	r4, r1, r4, asr #21
   14a4c:	andeq	r4, r1, r8, asr #21
   14a50:	andeq	r4, r1, r8, asr #21
   14a54:	andeq	r4, r1, r8, asr #21
   14a58:	andeq	r4, r1, r8, asr #21
   14a5c:	andeq	r4, r1, r8, asr #21
   14a60:	andeq	r4, r1, r8, asr #21
   14a64:	andeq	r4, r1, r8, asr #21
   14a68:	andeq	r4, r1, r8, asr #21
   14a6c:	andeq	r4, r1, r8, asr #21
   14a70:	andeq	r4, r1, r8, asr #21
   14a74:	andeq	r4, r1, r8, asr #21
   14a78:	andeq	r4, r1, r8, asr #21
   14a7c:	andeq	r4, r1, r8, asr #21
   14a80:	andeq	r4, r1, r8, asr #21
   14a84:	andeq	r4, r1, r8, asr #21
   14a88:	andeq	r4, r1, r8, asr #21
   14a8c:	andeq	r4, r1, r8, asr #21
   14a90:	andeq	r4, r1, r8, asr #21
   14a94:	andeq	r4, r1, r8, asr #21
   14a98:	andeq	r4, r1, r8, asr #21
   14a9c:	andeq	r4, r1, r8, asr #21
   14aa0:	andeq	r4, r1, r8, asr #21
   14aa4:	andeq	r4, r1, r8, asr #21
   14aa8:	andeq	r4, r1, r8, asr #21
   14aac:	andeq	r4, r1, r8, asr #21
   14ab0:	andeq	r4, r1, r8, asr #21
   14ab4:	andeq	r4, r1, r4, asr #21
   14ab8:	andeq	r4, r1, r4, asr #21
   14abc:	andeq	r4, r1, r4, asr #21
   14ac0:	andeq	r4, r1, r4, asr #21
   14ac4:	bx	lr
   14ac8:	mov	r0, #0
   14acc:	bx	lr
   14ad0:	sub	r0, r0, #9
   14ad4:	cmp	r0, #23
   14ad8:	movhi	r0, #0
   14adc:	bxhi	lr
   14ae0:	bic	r0, r0, #-16777216	; 0xff000000
   14ae4:	movw	r1, #31
   14ae8:	movt	r1, #128	; 0x80
   14aec:	mov	r2, #1
   14af0:	and	r0, r2, r1, lsr r0
   14af4:	bx	lr
   14af8:	sub	r1, r0, #65	; 0x41
   14afc:	mov	r0, #0
   14b00:	cmp	r1, #26
   14b04:	movwcc	r0, #1
   14b08:	bx	lr
   14b0c:	mov	r1, r0
   14b10:	sub	r2, r0, #48	; 0x30
   14b14:	mov	r0, #1
   14b18:	cmp	r2, #22
   14b1c:	bhi	14b34 <putchar_unlocked@plt+0x3b7c>
   14b20:	mov	ip, #1
   14b24:	movw	r3, #1023	; 0x3ff
   14b28:	movt	r3, #126	; 0x7e
   14b2c:	tst	r3, ip, lsl r2
   14b30:	bxne	lr
   14b34:	sub	r1, r1, #97	; 0x61
   14b38:	cmp	r1, #6
   14b3c:	movcs	r0, #0
   14b40:	bxcs	lr
   14b44:	bx	lr
   14b48:	sub	r1, r0, #65	; 0x41
   14b4c:	cmp	r1, #26
   14b50:	addcc	r0, r0, #32
   14b54:	bx	lr
   14b58:	sub	r1, r0, #97	; 0x61
   14b5c:	cmp	r1, #26
   14b60:	subcc	r0, r0, #32
   14b64:	bx	lr
   14b68:	push	{r4, r5, r6, sl, fp, lr}
   14b6c:	add	fp, sp, #16
   14b70:	mov	r4, r0
   14b74:	bl	10e5c <__fpending@plt>
   14b78:	mov	r5, r0
   14b7c:	mov	r0, r4
   14b80:	bl	10e68 <ferror_unlocked@plt>
   14b84:	mov	r6, r0
   14b88:	mov	r0, r4
   14b8c:	bl	120f4 <putchar_unlocked@plt+0x113c>
   14b90:	cmp	r6, #0
   14b94:	beq	14bb8 <putchar_unlocked@plt+0x3c00>
   14b98:	mvn	r4, #0
   14b9c:	cmp	r0, #0
   14ba0:	bne	14be4 <putchar_unlocked@plt+0x3c2c>
   14ba4:	bl	10ef8 <__errno_location@plt>
   14ba8:	mov	r1, #0
   14bac:	str	r1, [r0]
   14bb0:	mov	r0, r4
   14bb4:	pop	{r4, r5, r6, sl, fp, pc}
   14bb8:	cmp	r0, #0
   14bbc:	mov	r4, r0
   14bc0:	mvnne	r4, #0
   14bc4:	cmp	r5, #0
   14bc8:	bne	14be4 <putchar_unlocked@plt+0x3c2c>
   14bcc:	cmp	r0, #0
   14bd0:	beq	14be4 <putchar_unlocked@plt+0x3c2c>
   14bd4:	bl	10ef8 <__errno_location@plt>
   14bd8:	ldr	r0, [r0]
   14bdc:	subs	r4, r0, #9
   14be0:	mvnne	r4, #0
   14be4:	mov	r0, r4
   14be8:	pop	{r4, r5, r6, sl, fp, pc}
   14bec:	push	{fp, lr}
   14bf0:	mov	fp, sp
   14bf4:	bl	10ef8 <__errno_location@plt>
   14bf8:	mov	r1, #12
   14bfc:	str	r1, [r0]
   14c00:	mov	r0, #0
   14c04:	pop	{fp, pc}
   14c08:	b	147c0 <putchar_unlocked@plt+0x3808>
   14c0c:	cmp	r1, #0
   14c10:	orreq	r1, r1, #1
   14c14:	b	147f0 <putchar_unlocked@plt+0x3838>
   14c18:	b	1476c <putchar_unlocked@plt+0x37b4>
   14c1c:	clz	r3, r2
   14c20:	lsr	ip, r3, #5
   14c24:	clz	r3, r1
   14c28:	lsr	r3, r3, #5
   14c2c:	orrs	r3, r3, ip
   14c30:	movwne	r1, #1
   14c34:	movwne	r2, #1
   14c38:	b	14cd8 <putchar_unlocked@plt+0x3d20>
   14c3c:	push	{fp, lr}
   14c40:	mov	fp, sp
   14c44:	mov	r0, #14
   14c48:	bl	10f70 <nl_langinfo@plt>
   14c4c:	movw	r1, #20644	; 0x50a4
   14c50:	movt	r1, #1
   14c54:	cmp	r0, #0
   14c58:	movne	r1, r0
   14c5c:	ldrb	r2, [r1]
   14c60:	movw	r0, #22533	; 0x5805
   14c64:	movt	r0, #1
   14c68:	cmp	r2, #0
   14c6c:	movne	r0, r1
   14c70:	pop	{fp, pc}
   14c74:	push	{r4, r5, r6, r7, fp, lr}
   14c78:	add	fp, sp, #16
   14c7c:	sub	sp, sp, #8
   14c80:	mov	r7, r2
   14c84:	mov	r4, r1
   14c88:	add	r5, sp, #4
   14c8c:	cmp	r0, #0
   14c90:	movne	r5, r0
   14c94:	mov	r0, r5
   14c98:	bl	10e74 <mbrtowc@plt>
   14c9c:	mov	r6, r0
   14ca0:	cmp	r7, #0
   14ca4:	beq	14ccc <putchar_unlocked@plt+0x3d14>
   14ca8:	cmn	r6, #2
   14cac:	bcc	14ccc <putchar_unlocked@plt+0x3d14>
   14cb0:	mov	r0, #0
   14cb4:	bl	14d14 <putchar_unlocked@plt+0x3d5c>
   14cb8:	cmp	r0, #0
   14cbc:	bne	14ccc <putchar_unlocked@plt+0x3d14>
   14cc0:	ldrb	r0, [r4]
   14cc4:	str	r0, [r5]
   14cc8:	mov	r6, #1
   14ccc:	mov	r0, r6
   14cd0:	sub	sp, fp, #16
   14cd4:	pop	{r4, r5, r6, r7, fp, pc}
   14cd8:	cmp	r2, #0
   14cdc:	beq	14d0c <putchar_unlocked@plt+0x3d54>
   14ce0:	mvn	r3, #0
   14ce4:	udiv	r3, r3, r2
   14ce8:	cmp	r3, r1
   14cec:	bcs	14d0c <putchar_unlocked@plt+0x3d54>
   14cf0:	push	{fp, lr}
   14cf4:	mov	fp, sp
   14cf8:	bl	10ef8 <__errno_location@plt>
   14cfc:	mov	r1, #12
   14d00:	str	r1, [r0]
   14d04:	mov	r0, #0
   14d08:	pop	{fp, pc}
   14d0c:	mul	r1, r2, r1
   14d10:	b	147f0 <putchar_unlocked@plt+0x3838>
   14d14:	push	{r4, sl, fp, lr}
   14d18:	add	fp, sp, #8
   14d1c:	sub	sp, sp, #264	; 0x108
   14d20:	add	r1, sp, #7
   14d24:	movw	r2, #257	; 0x101
   14d28:	bl	14d80 <putchar_unlocked@plt+0x3dc8>
   14d2c:	mov	r4, #0
   14d30:	cmp	r0, #0
   14d34:	bne	14d74 <putchar_unlocked@plt+0x3dbc>
   14d38:	add	r0, sp, #7
   14d3c:	movw	r1, #22539	; 0x580b
   14d40:	movt	r1, #1
   14d44:	mov	r2, #2
   14d48:	bl	10ee0 <bcmp@plt>
   14d4c:	cmp	r0, #0
   14d50:	beq	14d74 <putchar_unlocked@plt+0x3dbc>
   14d54:	add	r0, sp, #7
   14d58:	movw	r1, #22541	; 0x580d
   14d5c:	movt	r1, #1
   14d60:	mov	r2, #6
   14d64:	bl	10ee0 <bcmp@plt>
   14d68:	mov	r4, r0
   14d6c:	cmp	r0, #0
   14d70:	movwne	r4, #1
   14d74:	mov	r0, r4
   14d78:	sub	sp, fp, #8
   14d7c:	pop	{r4, sl, fp, pc}
   14d80:	b	14d84 <putchar_unlocked@plt+0x3dcc>
   14d84:	push	{r4, r5, r6, r7, fp, lr}
   14d88:	add	fp, sp, #16
   14d8c:	mov	r6, r2
   14d90:	mov	r4, r1
   14d94:	bl	14e1c <putchar_unlocked@plt+0x3e64>
   14d98:	cmp	r0, #0
   14d9c:	beq	14dcc <putchar_unlocked@plt+0x3e14>
   14da0:	mov	r7, r0
   14da4:	bl	10eec <strlen@plt>
   14da8:	cmp	r0, r6
   14dac:	bcs	14de8 <putchar_unlocked@plt+0x3e30>
   14db0:	add	r2, r0, #1
   14db4:	mov	r0, r4
   14db8:	mov	r1, r7
   14dbc:	bl	10dd8 <memcpy@plt>
   14dc0:	mov	r5, #0
   14dc4:	mov	r0, r5
   14dc8:	pop	{r4, r5, r6, r7, fp, pc}
   14dcc:	mov	r5, #22
   14dd0:	cmp	r6, #0
   14dd4:	beq	14e10 <putchar_unlocked@plt+0x3e58>
   14dd8:	mov	r0, #0
   14ddc:	strb	r0, [r4]
   14de0:	mov	r0, r5
   14de4:	pop	{r4, r5, r6, r7, fp, pc}
   14de8:	mov	r5, #34	; 0x22
   14dec:	cmp	r6, #0
   14df0:	beq	14e10 <putchar_unlocked@plt+0x3e58>
   14df4:	sub	r6, r6, #1
   14df8:	mov	r0, r4
   14dfc:	mov	r1, r7
   14e00:	mov	r2, r6
   14e04:	bl	10dd8 <memcpy@plt>
   14e08:	mov	r0, #0
   14e0c:	strb	r0, [r4, r6]
   14e10:	mov	r0, r5
   14e14:	pop	{r4, r5, r6, r7, fp, pc}
   14e18:	b	14e1c <putchar_unlocked@plt+0x3e64>
   14e1c:	mov	r1, #0
   14e20:	b	10f58 <setlocale@plt>
   14e24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14e28:	mov	r7, r0
   14e2c:	ldr	r6, [pc, #72]	; 14e7c <putchar_unlocked@plt+0x3ec4>
   14e30:	ldr	r5, [pc, #72]	; 14e80 <putchar_unlocked@plt+0x3ec8>
   14e34:	add	r6, pc, r6
   14e38:	add	r5, pc, r5
   14e3c:	sub	r6, r6, r5
   14e40:	mov	r8, r1
   14e44:	mov	r9, r2
   14e48:	bl	10d64 <calloc@plt-0x20>
   14e4c:	asrs	r6, r6, #2
   14e50:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e54:	mov	r4, #0
   14e58:	add	r4, r4, #1
   14e5c:	ldr	r3, [r5], #4
   14e60:	mov	r2, r9
   14e64:	mov	r1, r8
   14e68:	mov	r0, r7
   14e6c:	blx	r3
   14e70:	cmp	r6, r4
   14e74:	bne	14e58 <putchar_unlocked@plt+0x3ea0>
   14e78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e7c:	ldrdeq	r1, [r1], -r0
   14e80:	andeq	r1, r1, r8, asr #1
   14e84:	bx	lr
   14e88:	ldr	r3, [pc, #12]	; 14e9c <putchar_unlocked@plt+0x3ee4>
   14e8c:	mov	r1, #0
   14e90:	add	r3, pc, r3
   14e94:	ldr	r2, [r3]
   14e98:	b	10f04 <__cxa_atexit@plt>
   14e9c:	andeq	r1, r1, ip, lsr r2

Disassembly of section .fini:

00014ea0 <.fini>:
   14ea0:	push	{r3, lr}
   14ea4:	pop	{r3, pc}
