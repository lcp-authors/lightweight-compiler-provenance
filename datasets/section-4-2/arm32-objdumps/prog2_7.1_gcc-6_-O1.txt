
../repos/prog2/7.1:     file format elf32-littlearm


Disassembly of section .init:

00010c4c <.init>:
   10c4c:	push	{r3, lr}
   10c50:	bl	10d68 <_start@@Base+0x3c>
   10c54:	pop	{r3, pc}

Disassembly of section .plt:

00010c58 <strcmp@plt-0x14>:
   10c58:	push	{lr}		; (str lr, [sp, #-4]!)
   10c5c:	ldr	lr, [pc, #4]	; 10c68 <strcmp@plt-0x4>
   10c60:	add	lr, pc, lr
   10c64:	ldr	pc, [lr, #8]!
   10c68:	muleq	r1, r8, r3

00010c6c <strcmp@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #69632	; 0x11000
   10c74:	ldr	pc, [ip, #920]!	; 0x398

00010c78 <printf@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #69632	; 0x11000
   10c80:	ldr	pc, [ip, #912]!	; 0x390

00010c84 <fopen@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #69632	; 0x11000
   10c8c:	ldr	pc, [ip, #904]!	; 0x388

00010c90 <free@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #69632	; 0x11000
   10c98:	ldr	pc, [ip, #896]!	; 0x380

00010c9c <fgets@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #69632	; 0x11000
   10ca4:	ldr	pc, [ip, #888]!	; 0x378

00010ca8 <realloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #69632	; 0x11000
   10cb0:	ldr	pc, [ip, #880]!	; 0x370

00010cb4 <strcpy@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #69632	; 0x11000
   10cbc:	ldr	pc, [ip, #872]!	; 0x368

00010cc0 <puts@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #69632	; 0x11000
   10cc8:	ldr	pc, [ip, #864]!	; 0x360

00010ccc <malloc@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #69632	; 0x11000
   10cd4:	ldr	pc, [ip, #856]!	; 0x358

00010cd8 <__libc_start_main@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #69632	; 0x11000
   10ce0:	ldr	pc, [ip, #848]!	; 0x350

00010ce4 <__gmon_start__@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #69632	; 0x11000
   10cec:	ldr	pc, [ip, #840]!	; 0x348

00010cf0 <strlen@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #69632	; 0x11000
   10cf8:	ldr	pc, [ip, #832]!	; 0x340

00010cfc <putchar@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #69632	; 0x11000
   10d04:	ldr	pc, [ip, #824]!	; 0x338

00010d08 <fclose@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #69632	; 0x11000
   10d10:	ldr	pc, [ip, #816]!	; 0x330

00010d14 <strtok@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #69632	; 0x11000
   10d1c:	ldr	pc, [ip, #808]!	; 0x328

00010d20 <abort@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #69632	; 0x11000
   10d28:	ldr	pc, [ip, #800]!	; 0x320

Disassembly of section .text:

00010d2c <_start@@Base>:
   10d2c:	mov	fp, #0
   10d30:	mov	lr, #0
   10d34:	pop	{r1}		; (ldr r1, [sp], #4)
   10d38:	mov	r2, sp
   10d3c:	push	{r2}		; (str r2, [sp, #-4]!)
   10d40:	push	{r0}		; (str r0, [sp, #-4]!)
   10d44:	ldr	ip, [pc, #16]	; 10d5c <_start@@Base+0x30>
   10d48:	push	{ip}		; (str ip, [sp, #-4]!)
   10d4c:	ldr	r0, [pc, #12]	; 10d60 <_start@@Base+0x34>
   10d50:	ldr	r3, [pc, #12]	; 10d64 <_start@@Base+0x38>
   10d54:	bl	10cd8 <__libc_start_main@plt>
   10d58:	bl	10d20 <abort@plt>
   10d5c:	andeq	r1, r1, r4, ror fp
   10d60:	andeq	r0, r1, r4, asr lr
   10d64:	andeq	r1, r1, r4, lsl fp
   10d68:	ldr	r3, [pc, #20]	; 10d84 <_start@@Base+0x58>
   10d6c:	ldr	r2, [pc, #20]	; 10d88 <_start@@Base+0x5c>
   10d70:	add	r3, pc, r3
   10d74:	ldr	r2, [r3, r2]
   10d78:	cmp	r2, #0
   10d7c:	bxeq	lr
   10d80:	b	10ce4 <__gmon_start__@plt>
   10d84:	andeq	r1, r1, r8, lsl #5
   10d88:	andeq	r0, r0, ip, asr #32
   10d8c:	ldr	r3, [pc, #28]	; 10db0 <_start@@Base+0x84>
   10d90:	ldr	r0, [pc, #28]	; 10db4 <_start@@Base+0x88>
   10d94:	sub	r3, r3, r0
   10d98:	cmp	r3, #6
   10d9c:	bxls	lr
   10da0:	ldr	r3, [pc, #16]	; 10db8 <_start@@Base+0x8c>
   10da4:	cmp	r3, #0
   10da8:	bxeq	lr
   10dac:	bx	r3
   10db0:	andeq	r2, r2, fp, asr r0
   10db4:	andeq	r2, r2, r8, asr r0
   10db8:	andeq	r0, r0, r0
   10dbc:	ldr	r1, [pc, #36]	; 10de8 <_start@@Base+0xbc>
   10dc0:	ldr	r0, [pc, #36]	; 10dec <_start@@Base+0xc0>
   10dc4:	sub	r1, r1, r0
   10dc8:	asr	r1, r1, #2
   10dcc:	add	r1, r1, r1, lsr #31
   10dd0:	asrs	r1, r1, #1
   10dd4:	bxeq	lr
   10dd8:	ldr	r3, [pc, #16]	; 10df0 <_start@@Base+0xc4>
   10ddc:	cmp	r3, #0
   10de0:	bxeq	lr
   10de4:	bx	r3
   10de8:	andeq	r2, r2, r8, asr r0
   10dec:	andeq	r2, r2, r8, asr r0
   10df0:	andeq	r0, r0, r0
   10df4:	push	{r4, lr}
   10df8:	ldr	r4, [pc, #24]	; 10e18 <_start@@Base+0xec>
   10dfc:	ldrb	r3, [r4]
   10e00:	cmp	r3, #0
   10e04:	popne	{r4, pc}
   10e08:	bl	10d8c <_start@@Base+0x60>
   10e0c:	mov	r3, #1
   10e10:	strb	r3, [r4]
   10e14:	pop	{r4, pc}
   10e18:	andeq	r2, r2, r8, asr r0
   10e1c:	ldr	r0, [pc, #40]	; 10e4c <_start@@Base+0x120>
   10e20:	ldr	r3, [r0]
   10e24:	cmp	r3, #0
   10e28:	bne	10e30 <_start@@Base+0x104>
   10e2c:	b	10dbc <_start@@Base+0x90>
   10e30:	ldr	r3, [pc, #24]	; 10e50 <_start@@Base+0x124>
   10e34:	cmp	r3, #0
   10e38:	beq	10e2c <_start@@Base+0x100>
   10e3c:	push	{r4, lr}
   10e40:	blx	r3
   10e44:	pop	{r4, lr}
   10e48:	b	10dbc <_start@@Base+0x90>
   10e4c:	andeq	r1, r2, r4, lsl pc
   10e50:	andeq	r0, r0, r0

00010e54 <main@@Base>:
   10e54:	push	{r4, r5, r6, r7, r8, lr}
   10e58:	sub	sp, sp, #144	; 0x90
   10e5c:	ldr	r0, [pc, #376]	; 10fdc <main@@Base+0x188>
   10e60:	bl	10cc0 <puts@plt>
   10e64:	add	ip, sp, #104	; 0x68
   10e68:	ldr	lr, [pc, #368]	; 10fe0 <main@@Base+0x18c>
   10e6c:	ldm	lr!, {r0, r1, r2, r3}
   10e70:	stmia	ip!, {r0, r1, r2, r3}
   10e74:	ldm	lr!, {r0, r1, r2, r3}
   10e78:	stmia	ip!, {r0, r1, r2, r3}
   10e7c:	ldm	lr, {r0, r1}
   10e80:	stm	ip, {r0, r1}
   10e84:	bl	116c8 <bst_nova@@Base>
   10e88:	mov	r5, r0
   10e8c:	add	r4, sp, #100	; 0x64
   10e90:	add	r6, sp, #140	; 0x8c
   10e94:	ldr	r1, [r4, #4]!
   10e98:	mov	r0, r5
   10e9c:	bl	118a0 <bst_insere@@Base>
   10ea0:	cmp	r4, r6
   10ea4:	bne	10e94 <main@@Base+0x40>
   10ea8:	ldr	r0, [r5]
   10eac:	bl	11a60 <bst_altura@@Base>
   10eb0:	mov	r1, r0
   10eb4:	ldr	r0, [pc, #296]	; 10fe4 <main@@Base+0x190>
   10eb8:	bl	10c78 <printf@plt>
   10ebc:	mov	r0, r5
   10ec0:	bl	11ae8 <bst_imprime@@Base>
   10ec4:	ldr	r0, [pc, #284]	; 10fe8 <main@@Base+0x194>
   10ec8:	bl	10cc0 <puts@plt>
   10ecc:	bl	11008 <avl_nova@@Base>
   10ed0:	mov	r6, r0
   10ed4:	ldr	r1, [pc, #272]	; 10fec <main@@Base+0x198>
   10ed8:	ldr	r0, [pc, #272]	; 10ff0 <main@@Base+0x19c>
   10edc:	bl	10c84 <fopen@plt>
   10ee0:	mov	r7, r0
   10ee4:	mov	r8, #100	; 0x64
   10ee8:	ldr	r5, [pc, #260]	; 10ff4 <main@@Base+0x1a0>
   10eec:	mov	r4, #0
   10ef0:	b	10f44 <main@@Base+0xf0>
   10ef4:	mov	r1, r5
   10ef8:	add	r0, sp, #4
   10efc:	bl	10d14 <strtok@plt>
   10f00:	mov	r1, r0
   10f04:	add	r0, sp, #4
   10f08:	bl	10cb4 <strcpy@plt>
   10f0c:	mov	r1, r5
   10f10:	mov	r0, r4
   10f14:	bl	10d14 <strtok@plt>
   10f18:	mov	r1, r0
   10f1c:	add	r0, sp, #4
   10f20:	bl	10cb4 <strcpy@plt>
   10f24:	add	r0, sp, #4
   10f28:	bl	10cf0 <strlen@plt>
   10f2c:	add	r3, sp, #144	; 0x90
   10f30:	add	r0, r3, r0
   10f34:	strb	r4, [r0, #-141]	; 0xffffff73
   10f38:	add	r1, sp, #4
   10f3c:	mov	r0, r6
   10f40:	bl	113c0 <avl_insere@@Base>
   10f44:	mov	r2, r7
   10f48:	mov	r1, r8
   10f4c:	add	r0, sp, #4
   10f50:	bl	10c9c <fgets@plt>
   10f54:	cmp	r0, #0
   10f58:	bne	10ef4 <main@@Base+0xa0>
   10f5c:	mov	r0, r7
   10f60:	bl	10d08 <fclose@plt>
   10f64:	ldr	r1, [pc, #140]	; 10ff8 <main@@Base+0x1a4>
   10f68:	mov	r0, r6
   10f6c:	bl	1126c <avl_pesquisa@@Base>
   10f70:	cmp	r0, #0
   10f74:	beq	10f88 <main@@Base+0x134>
   10f78:	ldr	r2, [r0, #16]
   10f7c:	ldr	r1, [r0]
   10f80:	ldr	r0, [pc, #116]	; 10ffc <main@@Base+0x1a8>
   10f84:	bl	10c78 <printf@plt>
   10f88:	ldr	r1, [pc, #112]	; 11000 <main@@Base+0x1ac>
   10f8c:	mov	r0, r6
   10f90:	bl	1126c <avl_pesquisa@@Base>
   10f94:	cmp	r0, #0
   10f98:	beq	10fac <main@@Base+0x158>
   10f9c:	ldr	r2, [r0, #16]
   10fa0:	ldr	r1, [r0]
   10fa4:	ldr	r0, [pc, #80]	; 10ffc <main@@Base+0x1a8>
   10fa8:	bl	10c78 <printf@plt>
   10fac:	ldr	r1, [pc, #80]	; 11004 <main@@Base+0x1b0>
   10fb0:	mov	r0, r6
   10fb4:	bl	1126c <avl_pesquisa@@Base>
   10fb8:	cmp	r0, #0
   10fbc:	beq	10fd0 <main@@Base+0x17c>
   10fc0:	ldr	r2, [r0, #16]
   10fc4:	ldr	r1, [r0]
   10fc8:	ldr	r0, [pc, #44]	; 10ffc <main@@Base+0x1a8>
   10fcc:	bl	10c78 <printf@plt>
   10fd0:	mov	r0, #0
   10fd4:	add	sp, sp, #144	; 0x90
   10fd8:	pop	{r4, r5, r6, r7, r8, pc}
   10fdc:	andeq	r1, r1, ip, lsr #23
   10fe0:	andeq	r1, r1, r4, lsl #23
   10fe4:			; <UNDEFINED> instruction: 0x00011bb0
   10fe8:	andeq	r1, r1, r4, asr #23
   10fec:	andeq	r1, r1, r8, asr #23
   10ff0:	andeq	r1, r1, ip, asr #23
   10ff4:	ldrdeq	r1, [r1], -r8
   10ff8:	ldrdeq	r1, [r1], -ip
   10ffc:	andeq	r1, r1, r8, ror #23
   11000:	strdeq	r1, [r1], -r4
   11004:	strdeq	r1, [r1], -ip

00011008 <avl_nova@@Base>:
   11008:	push	{r4, lr}
   1100c:	mov	r0, #4
   11010:	bl	10ccc <malloc@plt>
   11014:	cmp	r0, #0
   11018:	movne	r3, #0
   1101c:	strne	r3, [r0]
   11020:	pop	{r4, pc}

00011024 <avl_min@@Base>:
   11024:	cmp	r0, #0
   11028:	beq	1104c <avl_min@@Base+0x28>
   1102c:	ldr	r2, [r0]
   11030:	b	11038 <avl_min@@Base+0x14>
   11034:	mov	r2, r3
   11038:	ldr	r3, [r2, #4]
   1103c:	cmp	r3, #0
   11040:	bne	11034 <avl_min@@Base+0x10>
   11044:	ldr	r0, [r2]
   11048:	bx	lr
   1104c:	mov	r0, #0
   11050:	bx	lr

00011054 <avl_max@@Base>:
   11054:	cmp	r0, #0
   11058:	beq	1107c <avl_max@@Base+0x28>
   1105c:	ldr	r2, [r0]
   11060:	b	11068 <avl_max@@Base+0x14>
   11064:	mov	r2, r3
   11068:	ldr	r3, [r2, #8]
   1106c:	cmp	r3, #0
   11070:	bne	11064 <avl_max@@Base+0x10>
   11074:	ldr	r0, [r2]
   11078:	bx	lr
   1107c:	mov	r0, #0
   11080:	bx	lr

00011084 <avl_altura@@Base>:
   11084:	cmp	r0, #0
   11088:	ldrne	r0, [r0, #12]
   1108c:	mvneq	r0, #0
   11090:	bx	lr

00011094 <max@@Base>:
   11094:	cmp	r1, r0
   11098:	movge	r0, r1
   1109c:	bx	lr

000110a0 <avl_novo_no@@Base>:
   110a0:	push	{r4, r5, r6, lr}
   110a4:	mov	r5, r0
   110a8:	mov	r0, #20
   110ac:	bl	10ccc <malloc@plt>
   110b0:	mov	r4, r0
   110b4:	mov	r0, r5
   110b8:	bl	10cf0 <strlen@plt>
   110bc:	add	r0, r0, #1
   110c0:	bl	10ccc <malloc@plt>
   110c4:	str	r0, [r4]
   110c8:	mov	r1, r5
   110cc:	bl	10cb4 <strcpy@plt>
   110d0:	mov	r3, #0
   110d4:	str	r3, [r4, #4]
   110d8:	str	r3, [r4, #8]
   110dc:	str	r3, [r4, #12]
   110e0:	mov	r3, #1
   110e4:	str	r3, [r4, #16]
   110e8:	mov	r0, r4
   110ec:	pop	{r4, r5, r6, pc}

000110f0 <roda_direita@@Base>:
   110f0:	ldr	r3, [r0, #4]
   110f4:	ldr	r2, [r3, #8]
   110f8:	str	r0, [r3, #8]
   110fc:	str	r2, [r0, #4]
   11100:	cmp	r2, #0
   11104:	ldrne	r1, [r2, #12]
   11108:	mvneq	r1, #0
   1110c:	ldr	r2, [r0, #8]
   11110:	cmp	r2, #0
   11114:	ldrne	r2, [r2, #12]
   11118:	mvneq	r2, #0
   1111c:	cmp	r2, r1
   11120:	movlt	r2, r1
   11124:	add	r2, r2, #1
   11128:	str	r2, [r0, #12]
   1112c:	ldr	r2, [r3, #4]
   11130:	cmp	r2, #0
   11134:	ldrne	r1, [r2, #12]
   11138:	mvneq	r1, #0
   1113c:	ldr	r2, [r3, #8]
   11140:	cmp	r2, #0
   11144:	ldrne	r2, [r2, #12]
   11148:	mvneq	r2, #0
   1114c:	cmp	r2, r1
   11150:	movlt	r2, r1
   11154:	add	r2, r2, #1
   11158:	str	r2, [r3, #12]
   1115c:	mov	r0, r3
   11160:	bx	lr

00011164 <roda_esquerda@@Base>:
   11164:	ldr	r3, [r0, #8]
   11168:	ldr	r1, [r3, #4]
   1116c:	str	r0, [r3, #4]
   11170:	str	r1, [r0, #8]
   11174:	ldr	r2, [r0, #4]
   11178:	cmp	r2, #0
   1117c:	ldrne	ip, [r2, #12]
   11180:	mvneq	ip, #0
   11184:	cmp	r1, #0
   11188:	ldrne	r2, [r1, #12]
   1118c:	mvneq	r2, #0
   11190:	cmp	r2, ip
   11194:	movlt	r2, ip
   11198:	add	r2, r2, #1
   1119c:	str	r2, [r0, #12]
   111a0:	ldr	r2, [r3, #4]
   111a4:	cmp	r2, #0
   111a8:	ldrne	r1, [r2, #12]
   111ac:	mvneq	r1, #0
   111b0:	ldr	r2, [r3, #8]
   111b4:	cmp	r2, #0
   111b8:	ldrne	r2, [r2, #12]
   111bc:	mvneq	r2, #0
   111c0:	cmp	r2, r1
   111c4:	movlt	r2, r1
   111c8:	add	r2, r2, #1
   111cc:	str	r2, [r3, #12]
   111d0:	mov	r0, r3
   111d4:	bx	lr

000111d8 <calc_balanceamento@@Base>:
   111d8:	cmp	r0, #0
   111dc:	beq	11208 <calc_balanceamento@@Base+0x30>
   111e0:	ldr	r3, [r0, #8]
   111e4:	cmp	r3, #0
   111e8:	ldrne	r3, [r3, #12]
   111ec:	mvneq	r3, #0
   111f0:	ldr	r2, [r0, #4]
   111f4:	cmp	r2, #0
   111f8:	ldrne	r0, [r2, #12]
   111fc:	mvneq	r0, #0
   11200:	sub	r0, r3, r0
   11204:	bx	lr
   11208:	mov	r0, #0
   1120c:	bx	lr

00011210 <avl_pesquisa_impl@@Base>:
   11210:	push	{r4, r5, r6, lr}
   11214:	subs	r4, r0, #0
   11218:	beq	1125c <avl_pesquisa_impl@@Base+0x4c>
   1121c:	mov	r5, r1
   11220:	ldr	r1, [r4]
   11224:	mov	r0, r5
   11228:	bl	10c6c <strcmp@plt>
   1122c:	cmp	r0, #0
   11230:	blt	1124c <avl_pesquisa_impl@@Base+0x3c>
   11234:	cmp	r0, #0
   11238:	ble	11264 <avl_pesquisa_impl@@Base+0x54>
   1123c:	mov	r1, r5
   11240:	ldr	r0, [r4, #8]
   11244:	bl	11210 <avl_pesquisa_impl@@Base>
   11248:	pop	{r4, r5, r6, pc}
   1124c:	mov	r1, r5
   11250:	ldr	r0, [r4, #4]
   11254:	bl	11210 <avl_pesquisa_impl@@Base>
   11258:	pop	{r4, r5, r6, pc}
   1125c:	mov	r0, r4
   11260:	pop	{r4, r5, r6, pc}
   11264:	mov	r0, r4
   11268:	pop	{r4, r5, r6, pc}

0001126c <avl_pesquisa@@Base>:
   1126c:	cmp	r1, #0
   11270:	cmpne	r0, #0
   11274:	beq	11288 <avl_pesquisa@@Base+0x1c>
   11278:	push	{r4, lr}
   1127c:	ldr	r0, [r0]
   11280:	bl	11210 <avl_pesquisa_impl@@Base>
   11284:	pop	{r4, pc}
   11288:	mov	r0, #0
   1128c:	bx	lr

00011290 <avl_insere_impl@@Base>:
   11290:	push	{r4, r5, r6, lr}
   11294:	mov	r5, r1
   11298:	subs	r4, r0, #0
   1129c:	beq	11328 <avl_insere_impl@@Base+0x98>
   112a0:	ldr	r1, [r4]
   112a4:	mov	r0, r5
   112a8:	bl	10c6c <strcmp@plt>
   112ac:	cmp	r0, #0
   112b0:	blt	11334 <avl_insere_impl@@Base+0xa4>
   112b4:	cmp	r0, #0
   112b8:	ble	11348 <avl_insere_impl@@Base+0xb8>
   112bc:	mov	r1, r5
   112c0:	ldr	r0, [r4, #8]
   112c4:	bl	11290 <avl_insere_impl@@Base>
   112c8:	str	r0, [r4, #8]
   112cc:	ldr	r6, [r4, #4]
   112d0:	cmp	r6, #0
   112d4:	ldrne	r2, [r6, #12]
   112d8:	mvneq	r2, #0
   112dc:	ldr	r5, [r4, #8]
   112e0:	cmp	r5, #0
   112e4:	ldrne	r3, [r5, #12]
   112e8:	mvneq	r3, #0
   112ec:	cmp	r3, r2
   112f0:	movlt	r3, r2
   112f4:	add	r3, r3, #1
   112f8:	str	r3, [r4, #12]
   112fc:	mov	r0, r4
   11300:	bl	111d8 <calc_balanceamento@@Base>
   11304:	cmp	r0, #1
   11308:	ble	1137c <avl_insere_impl@@Base+0xec>
   1130c:	mov	r0, r5
   11310:	bl	111d8 <calc_balanceamento@@Base>
   11314:	cmp	r0, #0
   11318:	blt	11364 <avl_insere_impl@@Base+0xd4>
   1131c:	mov	r0, r4
   11320:	bl	11164 <roda_esquerda@@Base>
   11324:	pop	{r4, r5, r6, pc}
   11328:	mov	r0, r1
   1132c:	bl	110a0 <avl_novo_no@@Base>
   11330:	pop	{r4, r5, r6, pc}
   11334:	mov	r1, r5
   11338:	ldr	r0, [r4, #4]
   1133c:	bl	11290 <avl_insere_impl@@Base>
   11340:	str	r0, [r4, #4]
   11344:	b	112cc <avl_insere_impl@@Base+0x3c>
   11348:	cmp	r0, #0
   1134c:	bne	112cc <avl_insere_impl@@Base+0x3c>
   11350:	ldr	r3, [r4, #16]
   11354:	add	r3, r3, #1
   11358:	str	r3, [r4, #16]
   1135c:	mov	r0, r4
   11360:	pop	{r4, r5, r6, pc}
   11364:	mov	r0, r5
   11368:	bl	110f0 <roda_direita@@Base>
   1136c:	str	r0, [r4, #8]
   11370:	mov	r0, r4
   11374:	bl	11164 <roda_esquerda@@Base>
   11378:	pop	{r4, r5, r6, pc}
   1137c:	cmn	r0, #1
   11380:	blt	1138c <avl_insere_impl@@Base+0xfc>
   11384:	mov	r0, r4
   11388:	pop	{r4, r5, r6, pc}
   1138c:	mov	r0, r6
   11390:	bl	111d8 <calc_balanceamento@@Base>
   11394:	cmp	r0, #0
   11398:	ble	113b4 <avl_insere_impl@@Base+0x124>
   1139c:	mov	r0, r6
   113a0:	bl	11164 <roda_esquerda@@Base>
   113a4:	str	r0, [r4, #4]
   113a8:	mov	r0, r4
   113ac:	bl	110f0 <roda_direita@@Base>
   113b0:	pop	{r4, r5, r6, pc}
   113b4:	mov	r0, r4
   113b8:	bl	110f0 <roda_direita@@Base>
   113bc:	pop	{r4, r5, r6, pc}

000113c0 <avl_insere@@Base>:
   113c0:	cmp	r1, #0
   113c4:	cmpne	r0, #0
   113c8:	beq	113e8 <avl_insere@@Base+0x28>
   113cc:	push	{r4, lr}
   113d0:	mov	r4, r0
   113d4:	ldr	r0, [r0]
   113d8:	bl	11290 <avl_insere_impl@@Base>
   113dc:	str	r0, [r4]
   113e0:	mov	r0, #0
   113e4:	pop	{r4, pc}
   113e8:	mvn	r0, #0
   113ec:	bx	lr

000113f0 <avl_no_valormin@@Base>:
   113f0:	b	113f8 <avl_no_valormin@@Base+0x8>
   113f4:	mov	r0, r3
   113f8:	ldr	r3, [r0, #4]
   113fc:	cmp	r3, #0
   11400:	bne	113f4 <avl_no_valormin@@Base+0x4>
   11404:	bx	lr

00011408 <avl_no_valormax@@Base>:
   11408:	b	11410 <avl_no_valormax@@Base+0x8>
   1140c:	mov	r0, r3
   11410:	ldr	r3, [r0, #8]
   11414:	cmp	r3, #0
   11418:	bne	1140c <avl_no_valormax@@Base+0x4>
   1141c:	bx	lr

00011420 <avl_remove_impl@@Base>:
   11420:	push	{r4, r5, r6, r7, r8, lr}
   11424:	subs	r4, r0, #0
   11428:	beq	11604 <avl_remove_impl@@Base+0x1e4>
   1142c:	mov	r5, r1
   11430:	ldr	r7, [r4]
   11434:	mov	r1, r7
   11438:	mov	r0, r5
   1143c:	bl	10c6c <strcmp@plt>
   11440:	cmp	r0, #0
   11444:	blt	114c4 <avl_remove_impl@@Base+0xa4>
   11448:	cmp	r0, #0
   1144c:	ble	114d8 <avl_remove_impl@@Base+0xb8>
   11450:	mov	r1, r5
   11454:	ldr	r0, [r4, #8]
   11458:	bl	11420 <avl_remove_impl@@Base>
   1145c:	str	r0, [r4, #8]
   11460:	ldr	r6, [r4, #4]
   11464:	cmp	r6, #0
   11468:	ldrne	r2, [r6, #12]
   1146c:	mvneq	r2, #0
   11470:	ldr	r5, [r4, #8]
   11474:	cmp	r5, #0
   11478:	ldrne	r3, [r5, #12]
   1147c:	mvneq	r3, #0
   11480:	cmp	r3, r2
   11484:	movlt	r3, r2
   11488:	add	r3, r3, #1
   1148c:	str	r3, [r4, #12]
   11490:	mov	r0, r4
   11494:	bl	111d8 <calc_balanceamento@@Base>
   11498:	cmp	r0, #1
   1149c:	ble	115bc <avl_remove_impl@@Base+0x19c>
   114a0:	mov	r0, r5
   114a4:	bl	111d8 <calc_balanceamento@@Base>
   114a8:	cmp	r0, #0
   114ac:	blt	115a0 <avl_remove_impl@@Base+0x180>
   114b0:	mov	r0, r4
   114b4:	bl	11164 <roda_esquerda@@Base>
   114b8:	mov	r6, r0
   114bc:	mov	r0, r6
   114c0:	pop	{r4, r5, r6, r7, r8, pc}
   114c4:	mov	r1, r5
   114c8:	ldr	r0, [r4, #4]
   114cc:	bl	11420 <avl_remove_impl@@Base>
   114d0:	str	r0, [r4, #4]
   114d4:	b	11460 <avl_remove_impl@@Base+0x40>
   114d8:	ldr	r6, [r4, #4]
   114dc:	cmp	r6, #0
   114e0:	beq	1153c <avl_remove_impl@@Base+0x11c>
   114e4:	ldr	r5, [r4, #8]
   114e8:	cmp	r5, #0
   114ec:	bne	11560 <avl_remove_impl@@Base+0x140>
   114f0:	ldr	r0, [r6]
   114f4:	bl	10cf0 <strlen@plt>
   114f8:	add	r1, r0, #1
   114fc:	mov	r0, r7
   11500:	bl	10ca8 <realloc@plt>
   11504:	str	r0, [r4]
   11508:	ldr	r1, [r6]
   1150c:	bl	10cb4 <strcpy@plt>
   11510:	ldr	r3, [r6, #4]
   11514:	str	r3, [r4, #4]
   11518:	ldr	r3, [r6, #8]
   1151c:	str	r3, [r4, #8]
   11520:	ldr	r3, [r6, #12]
   11524:	str	r3, [r4, #12]
   11528:	ldr	r0, [r6]
   1152c:	bl	10c90 <free@plt>
   11530:	mov	r0, r6
   11534:	bl	10c90 <free@plt>
   11538:	b	11460 <avl_remove_impl@@Base+0x40>
   1153c:	ldr	r6, [r4, #8]
   11540:	cmp	r6, #0
   11544:	bne	114f0 <avl_remove_impl@@Base+0xd0>
   11548:	ldr	r0, [r4]
   1154c:	bl	10c90 <free@plt>
   11550:	mov	r0, r4
   11554:	bl	10c90 <free@plt>
   11558:	b	114bc <avl_remove_impl@@Base+0x9c>
   1155c:	mov	r5, r3
   11560:	ldr	r3, [r5, #4]
   11564:	cmp	r3, #0
   11568:	bne	1155c <avl_remove_impl@@Base+0x13c>
   1156c:	ldr	r0, [r5]
   11570:	bl	10cf0 <strlen@plt>
   11574:	add	r1, r0, #1
   11578:	mov	r0, r7
   1157c:	bl	10ca8 <realloc@plt>
   11580:	str	r0, [r4]
   11584:	ldr	r1, [r5]
   11588:	bl	10cb4 <strcpy@plt>
   1158c:	ldr	r1, [r5]
   11590:	ldr	r0, [r4, #8]
   11594:	bl	11420 <avl_remove_impl@@Base>
   11598:	str	r0, [r4, #8]
   1159c:	b	11460 <avl_remove_impl@@Base+0x40>
   115a0:	mov	r0, r5
   115a4:	bl	110f0 <roda_direita@@Base>
   115a8:	str	r0, [r4, #8]
   115ac:	mov	r0, r4
   115b0:	bl	11164 <roda_esquerda@@Base>
   115b4:	mov	r6, r0
   115b8:	b	114bc <avl_remove_impl@@Base+0x9c>
   115bc:	cmn	r0, #1
   115c0:	movge	r6, r4
   115c4:	bge	114bc <avl_remove_impl@@Base+0x9c>
   115c8:	mov	r0, r6
   115cc:	bl	111d8 <calc_balanceamento@@Base>
   115d0:	cmp	r0, #0
   115d4:	ble	115f4 <avl_remove_impl@@Base+0x1d4>
   115d8:	mov	r0, r6
   115dc:	bl	11164 <roda_esquerda@@Base>
   115e0:	str	r0, [r4, #4]
   115e4:	mov	r0, r4
   115e8:	bl	110f0 <roda_direita@@Base>
   115ec:	mov	r6, r0
   115f0:	b	114bc <avl_remove_impl@@Base+0x9c>
   115f4:	mov	r0, r4
   115f8:	bl	110f0 <roda_direita@@Base>
   115fc:	mov	r6, r0
   11600:	b	114bc <avl_remove_impl@@Base+0x9c>
   11604:	mov	r6, r4
   11608:	b	114bc <avl_remove_impl@@Base+0x9c>

0001160c <avl_apaga@@Base>:
   1160c:	push	{r4, lr}
   11610:	subs	r4, r0, #0
   11614:	popeq	{r4, pc}
   11618:	ldr	r0, [r4]
   1161c:	cmp	r0, #0
   11620:	beq	11638 <avl_apaga@@Base+0x2c>
   11624:	ldr	r1, [r0]
   11628:	bl	11420 <avl_remove_impl@@Base>
   1162c:	str	r0, [r4]
   11630:	cmp	r0, #0
   11634:	bne	11624 <avl_apaga@@Base+0x18>
   11638:	mov	r0, r4
   1163c:	bl	10c90 <free@plt>
   11640:	pop	{r4, pc}

00011644 <avl_remove@@Base>:
   11644:	cmp	r1, #0
   11648:	cmpne	r0, #0
   1164c:	beq	1166c <avl_remove@@Base+0x28>
   11650:	push	{r4, lr}
   11654:	mov	r4, r0
   11658:	ldr	r0, [r0]
   1165c:	bl	11420 <avl_remove_impl@@Base>
   11660:	str	r0, [r4]
   11664:	mov	r0, #0
   11668:	pop	{r4, pc}
   1166c:	mvn	r0, #0
   11670:	bx	lr

00011674 <avl_preordem_impl@@Base>:
   11674:	push	{r4, lr}
   11678:	subs	r4, r0, #0
   1167c:	popeq	{r4, pc}
   11680:	ldr	r2, [r4, #16]
   11684:	ldr	r1, [r4]
   11688:	ldr	r0, [pc, #20]	; 116a4 <avl_preordem_impl@@Base+0x30>
   1168c:	bl	10c78 <printf@plt>
   11690:	ldr	r0, [r4, #4]
   11694:	bl	11674 <avl_preordem_impl@@Base>
   11698:	ldr	r0, [r4, #8]
   1169c:	bl	11674 <avl_preordem_impl@@Base>
   116a0:	pop	{r4, pc}
   116a4:	andeq	r1, r1, ip, lsr #24

000116a8 <avl_imprime@@Base>:
   116a8:	cmp	r0, #0
   116ac:	bxeq	lr
   116b0:	push	{r4, lr}
   116b4:	ldr	r0, [r0]
   116b8:	bl	11674 <avl_preordem_impl@@Base>
   116bc:	mov	r0, #10
   116c0:	bl	10cfc <putchar@plt>
   116c4:	pop	{r4, pc}

000116c8 <bst_nova@@Base>:
   116c8:	push	{r4, lr}
   116cc:	mov	r0, #4
   116d0:	bl	10ccc <malloc@plt>
   116d4:	cmp	r0, #0
   116d8:	movne	r3, #0
   116dc:	strne	r3, [r0]
   116e0:	pop	{r4, pc}

000116e4 <bst_min@@Base>:
   116e4:	cmp	r0, #0
   116e8:	beq	1170c <bst_min@@Base+0x28>
   116ec:	ldr	r2, [r0]
   116f0:	b	116f8 <bst_min@@Base+0x14>
   116f4:	mov	r2, r3
   116f8:	ldr	r3, [r2, #4]
   116fc:	cmp	r3, #0
   11700:	bne	116f4 <bst_min@@Base+0x10>
   11704:	ldr	r0, [r2]
   11708:	bx	lr
   1170c:	mov	r0, #0
   11710:	bx	lr

00011714 <bst_max@@Base>:
   11714:	cmp	r0, #0
   11718:	beq	1173c <bst_max@@Base+0x28>
   1171c:	ldr	r2, [r0]
   11720:	b	11728 <bst_max@@Base+0x14>
   11724:	mov	r2, r3
   11728:	ldr	r3, [r2, #8]
   1172c:	cmp	r3, #0
   11730:	bne	11724 <bst_max@@Base+0x10>
   11734:	ldr	r0, [r2]
   11738:	bx	lr
   1173c:	mov	r0, #0
   11740:	bx	lr

00011744 <bst_novo_no@@Base>:
   11744:	push	{r4, r5, r6, lr}
   11748:	mov	r5, r0
   1174c:	mov	r0, #12
   11750:	bl	10ccc <malloc@plt>
   11754:	mov	r4, r0
   11758:	mov	r0, r5
   1175c:	bl	10cf0 <strlen@plt>
   11760:	add	r0, r0, #1
   11764:	bl	10ccc <malloc@plt>
   11768:	str	r0, [r4]
   1176c:	mov	r1, r5
   11770:	bl	10cb4 <strcpy@plt>
   11774:	mov	r3, #0
   11778:	str	r3, [r4, #4]
   1177c:	str	r3, [r4, #8]
   11780:	mov	r0, r4
   11784:	pop	{r4, r5, r6, pc}

00011788 <bst_no_valormin@@Base>:
   11788:	b	11790 <bst_no_valormin@@Base+0x8>
   1178c:	mov	r0, r3
   11790:	ldr	r3, [r0, #4]
   11794:	cmp	r3, #0
   11798:	bne	1178c <bst_no_valormin@@Base+0x4>
   1179c:	bx	lr

000117a0 <bst_no_valormax@@Base>:
   117a0:	b	117a8 <bst_no_valormax@@Base+0x8>
   117a4:	mov	r0, r3
   117a8:	ldr	r3, [r0, #8]
   117ac:	cmp	r3, #0
   117b0:	bne	117a4 <bst_no_valormax@@Base+0x4>
   117b4:	bx	lr

000117b8 <bst_pesquisa_impl@@Base>:
   117b8:	push	{r4, r5, r6, lr}
   117bc:	subs	r4, r0, #0
   117c0:	beq	11804 <bst_pesquisa_impl@@Base+0x4c>
   117c4:	mov	r5, r1
   117c8:	ldr	r1, [r4]
   117cc:	mov	r0, r5
   117d0:	bl	10c6c <strcmp@plt>
   117d4:	cmp	r0, #0
   117d8:	blt	117f4 <bst_pesquisa_impl@@Base+0x3c>
   117dc:	cmp	r0, #0
   117e0:	ble	1180c <bst_pesquisa_impl@@Base+0x54>
   117e4:	mov	r1, r5
   117e8:	ldr	r0, [r4, #8]
   117ec:	bl	117b8 <bst_pesquisa_impl@@Base>
   117f0:	pop	{r4, r5, r6, pc}
   117f4:	mov	r1, r5
   117f8:	ldr	r0, [r4, #4]
   117fc:	bl	117b8 <bst_pesquisa_impl@@Base>
   11800:	pop	{r4, r5, r6, pc}
   11804:	mov	r0, r4
   11808:	pop	{r4, r5, r6, pc}
   1180c:	mov	r0, r4
   11810:	pop	{r4, r5, r6, pc}

00011814 <bst_pesquisa@@Base>:
   11814:	cmp	r1, #0
   11818:	cmpne	r0, #0
   1181c:	beq	11830 <bst_pesquisa@@Base+0x1c>
   11820:	push	{r4, lr}
   11824:	ldr	r0, [r0]
   11828:	bl	117b8 <bst_pesquisa_impl@@Base>
   1182c:	pop	{r4, pc}
   11830:	mov	r0, #0
   11834:	bx	lr

00011838 <bst_insere_impl@@Base>:
   11838:	push	{r4, r5, r6, lr}
   1183c:	mov	r5, r1
   11840:	subs	r4, r0, #0
   11844:	beq	1187c <bst_insere_impl@@Base+0x44>
   11848:	ldr	r1, [r4]
   1184c:	mov	r0, r5
   11850:	bl	10c6c <strcmp@plt>
   11854:	cmp	r0, #0
   11858:	blt	1188c <bst_insere_impl@@Base+0x54>
   1185c:	cmp	r0, #0
   11860:	ble	11874 <bst_insere_impl@@Base+0x3c>
   11864:	mov	r1, r5
   11868:	ldr	r0, [r4, #8]
   1186c:	bl	11838 <bst_insere_impl@@Base>
   11870:	str	r0, [r4, #8]
   11874:	mov	r0, r4
   11878:	pop	{r4, r5, r6, pc}
   1187c:	mov	r0, r1
   11880:	bl	11744 <bst_novo_no@@Base>
   11884:	mov	r4, r0
   11888:	b	11874 <bst_insere_impl@@Base+0x3c>
   1188c:	mov	r1, r5
   11890:	ldr	r0, [r4, #4]
   11894:	bl	11838 <bst_insere_impl@@Base>
   11898:	str	r0, [r4, #4]
   1189c:	b	11874 <bst_insere_impl@@Base+0x3c>

000118a0 <bst_insere@@Base>:
   118a0:	cmp	r1, #0
   118a4:	cmpne	r0, #0
   118a8:	beq	118c8 <bst_insere@@Base+0x28>
   118ac:	push	{r4, lr}
   118b0:	mov	r4, r0
   118b4:	ldr	r0, [r0]
   118b8:	bl	11838 <bst_insere_impl@@Base>
   118bc:	str	r0, [r4]
   118c0:	mov	r0, #0
   118c4:	pop	{r4, pc}
   118c8:	mvn	r0, #0
   118cc:	bx	lr

000118d0 <bst_remove_impl@@Base>:
   118d0:	push	{r4, r5, r6, r7, r8, lr}
   118d4:	subs	r4, r0, #0
   118d8:	beq	119f4 <bst_remove_impl@@Base+0x124>
   118dc:	mov	r5, r1
   118e0:	ldr	r6, [r4]
   118e4:	mov	r1, r6
   118e8:	mov	r0, r5
   118ec:	bl	10c6c <strcmp@plt>
   118f0:	cmp	r0, #0
   118f4:	blt	11960 <bst_remove_impl@@Base+0x90>
   118f8:	cmp	r0, #0
   118fc:	bgt	11978 <bst_remove_impl@@Base+0xa8>
   11900:	ldr	r7, [r4, #4]
   11904:	cmp	r7, #0
   11908:	beq	11994 <bst_remove_impl@@Base+0xc4>
   1190c:	ldr	r5, [r4, #8]
   11910:	cmp	r5, #0
   11914:	bne	119b0 <bst_remove_impl@@Base+0xe0>
   11918:	ldr	r0, [r7]
   1191c:	bl	10cf0 <strlen@plt>
   11920:	add	r1, r0, #1
   11924:	mov	r0, r6
   11928:	bl	10ca8 <realloc@plt>
   1192c:	str	r0, [r4]
   11930:	ldr	r1, [r7]
   11934:	bl	10cb4 <strcpy@plt>
   11938:	ldr	r3, [r7, #4]
   1193c:	str	r3, [r4, #4]
   11940:	ldr	r3, [r7, #8]
   11944:	str	r3, [r4, #8]
   11948:	mov	r5, r4
   1194c:	ldr	r0, [r7]
   11950:	bl	10c90 <free@plt>
   11954:	mov	r0, r7
   11958:	bl	10c90 <free@plt>
   1195c:	b	1198c <bst_remove_impl@@Base+0xbc>
   11960:	mov	r1, r5
   11964:	ldr	r0, [r4, #4]
   11968:	bl	118d0 <bst_remove_impl@@Base>
   1196c:	str	r0, [r4, #4]
   11970:	mov	r5, r4
   11974:	b	1198c <bst_remove_impl@@Base+0xbc>
   11978:	mov	r1, r5
   1197c:	ldr	r0, [r4, #8]
   11980:	bl	118d0 <bst_remove_impl@@Base>
   11984:	str	r0, [r4, #8]
   11988:	mov	r5, r4
   1198c:	mov	r0, r5
   11990:	pop	{r4, r5, r6, r7, r8, pc}
   11994:	ldr	r5, [r4, #8]
   11998:	cmp	r5, #0
   1199c:	moveq	r7, r4
   119a0:	beq	1194c <bst_remove_impl@@Base+0x7c>
   119a4:	mov	r7, r5
   119a8:	b	11918 <bst_remove_impl@@Base+0x48>
   119ac:	mov	r5, r3
   119b0:	ldr	r3, [r5, #4]
   119b4:	cmp	r3, #0
   119b8:	bne	119ac <bst_remove_impl@@Base+0xdc>
   119bc:	ldr	r0, [r5]
   119c0:	bl	10cf0 <strlen@plt>
   119c4:	add	r1, r0, #1
   119c8:	mov	r0, r6
   119cc:	bl	10ca8 <realloc@plt>
   119d0:	str	r0, [r4]
   119d4:	ldr	r1, [r5]
   119d8:	bl	10cb4 <strcpy@plt>
   119dc:	ldr	r1, [r5]
   119e0:	ldr	r0, [r4, #8]
   119e4:	bl	118d0 <bst_remove_impl@@Base>
   119e8:	str	r0, [r4, #8]
   119ec:	mov	r5, r4
   119f0:	b	1198c <bst_remove_impl@@Base+0xbc>
   119f4:	mov	r5, r4
   119f8:	b	1198c <bst_remove_impl@@Base+0xbc>

000119fc <bst_apaga@@Base>:
   119fc:	push	{r4, lr}
   11a00:	mov	r4, r0
   11a04:	ldr	r0, [r0]
   11a08:	cmp	r0, #0
   11a0c:	beq	11a24 <bst_apaga@@Base+0x28>
   11a10:	ldr	r1, [r0]
   11a14:	bl	118d0 <bst_remove_impl@@Base>
   11a18:	str	r0, [r4]
   11a1c:	cmp	r0, #0
   11a20:	bne	11a10 <bst_apaga@@Base+0x14>
   11a24:	mov	r0, r4
   11a28:	bl	10c90 <free@plt>
   11a2c:	pop	{r4, pc}

00011a30 <bst_remove@@Base>:
   11a30:	cmp	r1, #0
   11a34:	cmpne	r0, #0
   11a38:	beq	11a58 <bst_remove@@Base+0x28>
   11a3c:	push	{r4, lr}
   11a40:	mov	r4, r0
   11a44:	ldr	r0, [r0]
   11a48:	bl	118d0 <bst_remove_impl@@Base>
   11a4c:	str	r0, [r4]
   11a50:	mov	r0, #0
   11a54:	pop	{r4, pc}
   11a58:	mvn	r0, #0
   11a5c:	bx	lr

00011a60 <bst_altura@@Base>:
   11a60:	cmp	r0, #0
   11a64:	beq	11ab0 <bst_altura@@Base+0x50>
   11a68:	push	{r4, r5, r6, lr}
   11a6c:	ldr	r4, [r0, #8]
   11a70:	cmp	r4, #0
   11a74:	beq	11a9c <bst_altura@@Base+0x3c>
   11a78:	ldr	r0, [r0, #4]
   11a7c:	bl	11a60 <bst_altura@@Base>
   11a80:	mov	r5, r0
   11a84:	mov	r0, r4
   11a88:	bl	11a60 <bst_altura@@Base>
   11a8c:	cmp	r5, r0
   11a90:	addgt	r0, r5, #1
   11a94:	addle	r0, r0, #1
   11a98:	pop	{r4, r5, r6, pc}
   11a9c:	ldr	r3, [r0, #4]
   11aa0:	cmp	r3, #0
   11aa4:	bne	11a78 <bst_altura@@Base+0x18>
   11aa8:	mov	r0, #0
   11aac:	pop	{r4, r5, r6, pc}
   11ab0:	mvn	r0, #0
   11ab4:	bx	lr

00011ab8 <bst_preordem_impl@@Base>:
   11ab8:	push	{r4, lr}
   11abc:	subs	r4, r0, #0
   11ac0:	popeq	{r4, pc}
   11ac4:	ldr	r1, [r4]
   11ac8:	ldr	r0, [pc, #20]	; 11ae4 <bst_preordem_impl@@Base+0x2c>
   11acc:	bl	10c78 <printf@plt>
   11ad0:	ldr	r0, [r4, #4]
   11ad4:	bl	11ab8 <bst_preordem_impl@@Base>
   11ad8:	ldr	r0, [r4, #8]
   11adc:	bl	11ab8 <bst_preordem_impl@@Base>
   11ae0:	pop	{r4, pc}
   11ae4:	andeq	r1, r1, r4, lsr ip

00011ae8 <bst_imprime@@Base>:
   11ae8:	push	{r4, lr}
   11aec:	subs	r4, r0, #0
   11af0:	popeq	{r4, pc}
   11af4:	ldr	r0, [pc, #20]	; 11b10 <bst_imprime@@Base+0x28>
   11af8:	bl	10c78 <printf@plt>
   11afc:	ldr	r0, [r4]
   11b00:	bl	11ab8 <bst_preordem_impl@@Base>
   11b04:	mov	r0, #10
   11b08:	bl	10cfc <putchar@plt>
   11b0c:	pop	{r4, pc}
   11b10:	andeq	r1, r1, r8, lsr ip

00011b14 <__libc_csu_init@@Base>:
   11b14:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b18:	mov	r7, r0
   11b1c:	ldr	r6, [pc, #72]	; 11b6c <__libc_csu_init@@Base+0x58>
   11b20:	ldr	r5, [pc, #72]	; 11b70 <__libc_csu_init@@Base+0x5c>
   11b24:	add	r6, pc, r6
   11b28:	add	r5, pc, r5
   11b2c:	sub	r6, r6, r5
   11b30:	mov	r8, r1
   11b34:	mov	r9, r2
   11b38:	bl	10c4c <strcmp@plt-0x20>
   11b3c:	asrs	r6, r6, #2
   11b40:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b44:	mov	r4, #0
   11b48:	add	r4, r4, #1
   11b4c:	ldr	r3, [r5], #4
   11b50:	mov	r2, r9
   11b54:	mov	r1, r8
   11b58:	mov	r0, r7
   11b5c:	blx	r3
   11b60:	cmp	r6, r4
   11b64:	bne	11b48 <__libc_csu_init@@Base+0x34>
   11b68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b6c:	andeq	r0, r1, r4, ror #7
   11b70:	ldrdeq	r0, [r1], -ip

00011b74 <__libc_csu_fini@@Base>:
   11b74:	bx	lr

Disassembly of section .fini:

00011b78 <.fini>:
   11b78:	push	{r3, lr}
   11b7c:	pop	{r3, pc}
