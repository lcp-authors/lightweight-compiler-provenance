
../repos/coreutils/src/basename:     file format elf32-littlearm


Disassembly of section .init:

00010b0c <.init>:
   10b0c:	push	{r3, lr}
   10b10:	bl	10f98 <putchar_unlocked@plt+0x268>
   10b14:	pop	{r3, pc}

Disassembly of section .plt:

00010b18 <calloc@plt-0x14>:
   10b18:	push	{lr}		; (str lr, [sp, #-4]!)
   10b1c:	ldr	lr, [pc, #4]	; 10b28 <calloc@plt-0x4>
   10b20:	add	lr, pc, lr
   10b24:	ldr	pc, [lr, #8]!
   10b28:	ldrdeq	r4, [r1], -r8

00010b2c <calloc@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #20, 20	; 0x14000
   10b34:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b38 <fputs_unlocked@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #20, 20	; 0x14000
   10b40:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b44 <strcmp@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #20, 20	; 0x14000
   10b4c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b50 <fflush@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #20, 20	; 0x14000
   10b58:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b5c <free@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #20, 20	; 0x14000
   10b64:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b68 <_exit@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #20, 20	; 0x14000
   10b70:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b74 <memcpy@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #20, 20	; 0x14000
   10b7c:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b80 <mbsinit@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #20, 20	; 0x14000
   10b88:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b8c <memcmp@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #20, 20	; 0x14000
   10b94:	ldr	pc, [ip, #1176]!	; 0x498

00010b98 <fputc_unlocked@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #20, 20	; 0x14000
   10ba0:	ldr	pc, [ip, #1168]!	; 0x490

00010ba4 <dcgettext@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #20, 20	; 0x14000
   10bac:	ldr	pc, [ip, #1160]!	; 0x488

00010bb0 <realloc@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #20, 20	; 0x14000
   10bb8:	ldr	pc, [ip, #1152]!	; 0x480

00010bbc <textdomain@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #20, 20	; 0x14000
   10bc4:	ldr	pc, [ip, #1144]!	; 0x478

00010bc8 <iswprint@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #20, 20	; 0x14000
   10bd0:	ldr	pc, [ip, #1136]!	; 0x470

00010bd4 <lseek64@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #20, 20	; 0x14000
   10bdc:	ldr	pc, [ip, #1128]!	; 0x468

00010be0 <__ctype_get_mb_cur_max@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #20, 20	; 0x14000
   10be8:	ldr	pc, [ip, #1120]!	; 0x460

00010bec <__fpending@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #20, 20	; 0x14000
   10bf4:	ldr	pc, [ip, #1112]!	; 0x458

00010bf8 <ferror_unlocked@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #20, 20	; 0x14000
   10c00:	ldr	pc, [ip, #1104]!	; 0x450

00010c04 <mbrtowc@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #20, 20	; 0x14000
   10c0c:	ldr	pc, [ip, #1096]!	; 0x448

00010c10 <error@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #1088]!	; 0x440

00010c1c <malloc@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #1080]!	; 0x438

00010c28 <__libc_start_main@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #1072]!	; 0x430

00010c34 <__freading@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #1064]!	; 0x428

00010c40 <__gmon_start__@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #1056]!	; 0x420

00010c4c <getopt_long@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #1048]!	; 0x418

00010c58 <__ctype_b_loc@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #1040]!	; 0x410

00010c64 <exit@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #1032]!	; 0x408

00010c70 <strlen@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #1024]!	; 0x400

00010c7c <__errno_location@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c88 <__cxa_atexit@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c94 <memset@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #1000]!	; 0x3e8

00010ca0 <__printf_chk@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #992]!	; 0x3e0

00010cac <fileno@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #984]!	; 0x3d8

00010cb8 <__fprintf_chk@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #976]!	; 0x3d0

00010cc4 <fclose@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #968]!	; 0x3c8

00010cd0 <fseeko64@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #960]!	; 0x3c0

00010cdc <setlocale@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #952]!	; 0x3b8

00010ce8 <strrchr@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #944]!	; 0x3b0

00010cf4 <nl_langinfo@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #936]!	; 0x3a8

00010d00 <bindtextdomain@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #928]!	; 0x3a0

00010d0c <fputs@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #920]!	; 0x398

00010d18 <strncmp@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #912]!	; 0x390

00010d24 <abort@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #904]!	; 0x388

00010d30 <putchar_unlocked@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #896]!	; 0x380

Disassembly of section .text:

00010d3c <.text>:
   10d3c:	push	{r4, lr}
   10d40:	bl	10c7c <__errno_location@plt>
   10d44:	mov	r3, #12
   10d48:	str	r3, [r0]
   10d4c:	mov	r0, #0
   10d50:	pop	{r4, pc}
   10d54:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d58:	mov	r7, r0
   10d5c:	mov	r5, r1
   10d60:	mov	r8, #0
   10d64:	mov	r9, r8
   10d68:	mov	r4, r8
   10d6c:	ldr	r0, [r1]
   10d70:	bl	1155c <putchar_unlocked@plt+0x82c>
   10d74:	ldr	r1, [pc, #420]	; 10f20 <putchar_unlocked@plt+0x1f0>
   10d78:	mov	r0, #6
   10d7c:	bl	10cdc <setlocale@plt>
   10d80:	ldr	r1, [pc, #412]	; 10f24 <putchar_unlocked@plt+0x1f4>
   10d84:	ldr	r0, [pc, #412]	; 10f28 <putchar_unlocked@plt+0x1f8>
   10d88:	bl	10d00 <bindtextdomain@plt>
   10d8c:	ldr	r0, [pc, #404]	; 10f28 <putchar_unlocked@plt+0x1f8>
   10d90:	bl	10bbc <textdomain@plt>
   10d94:	ldr	r0, [pc, #400]	; 10f2c <putchar_unlocked@plt+0x1fc>
   10d98:	ldr	sl, [pc, #400]	; 10f30 <putchar_unlocked@plt+0x200>
   10d9c:	ldr	fp, [pc, #400]	; 10f34 <putchar_unlocked@plt+0x204>
   10da0:	bl	138cc <putchar_unlocked@plt+0x2b9c>
   10da4:	mov	r6, #0
   10da8:	mov	r3, sl
   10dac:	mov	r2, fp
   10db0:	mov	r1, r5
   10db4:	mov	r0, r7
   10db8:	str	r6, [sp]
   10dbc:	bl	10c4c <getopt_long@plt>
   10dc0:	cmn	r0, #1
   10dc4:	beq	10e44 <putchar_unlocked@plt+0x114>
   10dc8:	cmp	r0, #97	; 0x61
   10dcc:	beq	10e10 <putchar_unlocked@plt+0xe0>
   10dd0:	bgt	10df0 <putchar_unlocked@plt+0xc0>
   10dd4:	cmn	r0, #3
   10dd8:	beq	10e18 <putchar_unlocked@plt+0xe8>
   10ddc:	cmn	r0, #2
   10de0:	moveq	r0, r6
   10de4:	beq	10dec <putchar_unlocked@plt+0xbc>
   10de8:	mov	r0, #1
   10dec:	bl	110f0 <putchar_unlocked@plt+0x3c0>
   10df0:	cmp	r0, #115	; 0x73
   10df4:	beq	10e08 <putchar_unlocked@plt+0xd8>
   10df8:	cmp	r0, #122	; 0x7a
   10dfc:	bne	10de8 <putchar_unlocked@plt+0xb8>
   10e00:	mov	r9, #1
   10e04:	b	10da4 <putchar_unlocked@plt+0x74>
   10e08:	ldr	r3, [pc, #296]	; 10f38 <putchar_unlocked@plt+0x208>
   10e0c:	ldr	r8, [r3]
   10e10:	mov	r4, #1
   10e14:	b	10da4 <putchar_unlocked@plt+0x74>
   10e18:	ldr	r3, [pc, #284]	; 10f3c <putchar_unlocked@plt+0x20c>
   10e1c:	ldr	r0, [pc, #284]	; 10f40 <putchar_unlocked@plt+0x210>
   10e20:	ldr	r2, [pc, #284]	; 10f44 <putchar_unlocked@plt+0x214>
   10e24:	stm	sp, {r3, r6}
   10e28:	ldr	r3, [pc, #280]	; 10f48 <putchar_unlocked@plt+0x218>
   10e2c:	ldr	r1, [pc, #280]	; 10f4c <putchar_unlocked@plt+0x21c>
   10e30:	ldr	r0, [r0]
   10e34:	ldr	r3, [r3]
   10e38:	bl	12fa8 <putchar_unlocked@plt+0x2278>
   10e3c:	mov	r0, r6
   10e40:	bl	10c64 <exit@plt>
   10e44:	ldr	fp, [pc, #260]	; 10f50 <putchar_unlocked@plt+0x220>
   10e48:	ldr	r3, [fp]
   10e4c:	mov	sl, fp
   10e50:	cmp	r3, r7
   10e54:	blt	10e7c <putchar_unlocked@plt+0x14c>
   10e58:	mov	r2, #5
   10e5c:	ldr	r1, [pc, #240]	; 10f54 <putchar_unlocked@plt+0x224>
   10e60:	mov	r0, r6
   10e64:	bl	10ba4 <dcgettext@plt>
   10e68:	mov	r2, r0
   10e6c:	mov	r1, r6
   10e70:	mov	r0, r6
   10e74:	bl	10c10 <error@plt>
   10e78:	b	10de8 <putchar_unlocked@plt+0xb8>
   10e7c:	cmp	r4, #0
   10e80:	bne	10ee8 <putchar_unlocked@plt+0x1b8>
   10e84:	add	r2, r3, #2
   10e88:	cmp	r2, r7
   10e8c:	bge	10f00 <putchar_unlocked@plt+0x1d0>
   10e90:	mov	r2, #5
   10e94:	ldr	r1, [pc, #188]	; 10f58 <putchar_unlocked@plt+0x228>
   10e98:	mov	r0, r4
   10e9c:	bl	10ba4 <dcgettext@plt>
   10ea0:	ldr	r3, [fp]
   10ea4:	mov	r6, r0
   10ea8:	add	r3, r3, #2
   10eac:	ldr	r0, [r5, r3, lsl #2]
   10eb0:	bl	12b5c <putchar_unlocked@plt+0x1e2c>
   10eb4:	mov	r3, r0
   10eb8:	mov	r2, r6
   10ebc:	mov	r1, r4
   10ec0:	mov	r0, r4
   10ec4:	bl	10c10 <error@plt>
   10ec8:	b	10de8 <putchar_unlocked@plt+0xb8>
   10ecc:	mov	r2, r9
   10ed0:	mov	r1, r8
   10ed4:	ldr	r0, [r5, r3, lsl #2]
   10ed8:	bl	1104c <putchar_unlocked@plt+0x31c>
   10edc:	ldr	r3, [sl]
   10ee0:	add	r3, r3, #1
   10ee4:	str	r3, [sl]
   10ee8:	ldr	r3, [sl]
   10eec:	cmp	r3, r7
   10ef0:	blt	10ecc <putchar_unlocked@plt+0x19c>
   10ef4:	mov	r0, #0
   10ef8:	add	sp, sp, #12
   10efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f00:	lsl	r2, r3, #2
   10f04:	ldr	r0, [r5, r3, lsl #2]
   10f08:	movne	r1, r4
   10f0c:	addeq	r5, r5, r2
   10f10:	mov	r2, r9
   10f14:	ldreq	r1, [r5, #4]
   10f18:	bl	1104c <putchar_unlocked@plt+0x31c>
   10f1c:	b	10ef4 <putchar_unlocked@plt+0x1c4>
   10f20:	andeq	r3, r1, r5, lsl #25
   10f24:	andeq	r3, r1, ip, ror #26
   10f28:	andeq	r3, r1, r9, asr #25
   10f2c:	muleq	r1, ip, r3
   10f30:	andeq	r3, r1, r8, lsr #18
   10f34:	andeq	r3, r1, r4, lsl #27
   10f38:	andeq	r5, r2, r8, lsr #2
   10f3c:	andeq	r3, r1, sl, lsl #27
   10f40:	andeq	r5, r2, r4, lsr #2
   10f44:	andeq	r3, r1, r5, asr #25
   10f48:	andeq	r5, r2, r8, asr #1
   10f4c:	andeq	r3, r1, r8, lsl #19
   10f50:	andeq	r5, r2, r8, lsl r1
   10f54:	muleq	r1, sl, sp
   10f58:	andeq	r3, r1, sl, lsr #27
   10f5c:	mov	fp, #0
   10f60:	mov	lr, #0
   10f64:	pop	{r1}		; (ldr r1, [sp], #4)
   10f68:	mov	r2, sp
   10f6c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f70:	push	{r0}		; (str r0, [sp, #-4]!)
   10f74:	ldr	ip, [pc, #16]	; 10f8c <putchar_unlocked@plt+0x25c>
   10f78:	push	{ip}		; (str ip, [sp, #-4]!)
   10f7c:	ldr	r0, [pc, #12]	; 10f90 <putchar_unlocked@plt+0x260>
   10f80:	ldr	r3, [pc, #12]	; 10f94 <putchar_unlocked@plt+0x264>
   10f84:	bl	10c28 <__libc_start_main@plt>
   10f88:	bl	10d24 <abort@plt>
   10f8c:	andeq	r3, r1, r8, asr #17
   10f90:	andeq	r0, r1, r4, asr sp
   10f94:	andeq	r3, r1, r8, ror #16
   10f98:	ldr	r3, [pc, #20]	; 10fb4 <putchar_unlocked@plt+0x284>
   10f9c:	ldr	r2, [pc, #20]	; 10fb8 <putchar_unlocked@plt+0x288>
   10fa0:	add	r3, pc, r3
   10fa4:	ldr	r2, [r3, r2]
   10fa8:	cmp	r2, #0
   10fac:	bxeq	lr
   10fb0:	b	10c40 <__gmon_start__@plt>
   10fb4:	andeq	r4, r1, r8, asr r0
   10fb8:	strheq	r0, [r0], -ip
   10fbc:	ldr	r0, [pc, #24]	; 10fdc <putchar_unlocked@plt+0x2ac>
   10fc0:	ldr	r3, [pc, #24]	; 10fe0 <putchar_unlocked@plt+0x2b0>
   10fc4:	cmp	r3, r0
   10fc8:	bxeq	lr
   10fcc:	ldr	r3, [pc, #16]	; 10fe4 <putchar_unlocked@plt+0x2b4>
   10fd0:	cmp	r3, #0
   10fd4:	bxeq	lr
   10fd8:	bx	r3
   10fdc:	andeq	r5, r2, r0, lsl r1
   10fe0:	andeq	r5, r2, r0, lsl r1
   10fe4:	andeq	r0, r0, r0
   10fe8:	ldr	r0, [pc, #36]	; 11014 <putchar_unlocked@plt+0x2e4>
   10fec:	ldr	r1, [pc, #36]	; 11018 <putchar_unlocked@plt+0x2e8>
   10ff0:	sub	r1, r1, r0
   10ff4:	asr	r1, r1, #2
   10ff8:	add	r1, r1, r1, lsr #31
   10ffc:	asrs	r1, r1, #1
   11000:	bxeq	lr
   11004:	ldr	r3, [pc, #16]	; 1101c <putchar_unlocked@plt+0x2ec>
   11008:	cmp	r3, #0
   1100c:	bxeq	lr
   11010:	bx	r3
   11014:	andeq	r5, r2, r0, lsl r1
   11018:	andeq	r5, r2, r0, lsl r1
   1101c:	andeq	r0, r0, r0
   11020:	push	{r4, lr}
   11024:	ldr	r4, [pc, #24]	; 11044 <putchar_unlocked@plt+0x314>
   11028:	ldrb	r3, [r4]
   1102c:	cmp	r3, #0
   11030:	popne	{r4, pc}
   11034:	bl	10fbc <putchar_unlocked@plt+0x28c>
   11038:	mov	r3, #1
   1103c:	strb	r3, [r4]
   11040:	pop	{r4, pc}
   11044:	andeq	r5, r2, ip, lsr #2
   11048:	b	10fe8 <putchar_unlocked@plt+0x2b8>
   1104c:	push	{r4, r5, r6, r7, r8, lr}
   11050:	mov	r6, r1
   11054:	mov	r7, r2
   11058:	bl	11470 <putchar_unlocked@plt+0x740>
   1105c:	mov	r4, r0
   11060:	bl	114d4 <putchar_unlocked@plt+0x7a4>
   11064:	cmp	r6, #0
   11068:	beq	110c0 <putchar_unlocked@plt+0x390>
   1106c:	ldrb	r3, [r4]
   11070:	cmp	r3, #47	; 0x2f
   11074:	beq	110c0 <putchar_unlocked@plt+0x390>
   11078:	mov	r0, r4
   1107c:	bl	10c70 <strlen@plt>
   11080:	add	r5, r4, r0
   11084:	mov	r0, r6
   11088:	bl	10c70 <strlen@plt>
   1108c:	add	r0, r6, r0
   11090:	cmp	r4, r5
   11094:	cmpcc	r6, r0
   11098:	movcc	r3, #1
   1109c:	movcs	r3, #0
   110a0:	bcc	110b0 <putchar_unlocked@plt+0x380>
   110a4:	cmp	r4, r5
   110a8:	strbcc	r3, [r5]
   110ac:	b	110c0 <putchar_unlocked@plt+0x390>
   110b0:	ldrb	r2, [r5, #-1]!
   110b4:	ldrb	r3, [r0, #-1]!
   110b8:	cmp	r2, r3
   110bc:	beq	11090 <putchar_unlocked@plt+0x360>
   110c0:	ldr	r3, [pc, #36]	; 110ec <putchar_unlocked@plt+0x3bc>
   110c4:	mov	r0, r4
   110c8:	ldr	r1, [r3]
   110cc:	bl	10b38 <fputs_unlocked@plt>
   110d0:	cmp	r7, #0
   110d4:	moveq	r0, #10
   110d8:	movne	r0, #0
   110dc:	bl	10d30 <putchar_unlocked@plt>
   110e0:	mov	r0, r4
   110e4:	pop	{r4, r5, r6, r7, r8, lr}
   110e8:	b	1150c <putchar_unlocked@plt+0x7dc>
   110ec:	andeq	r5, r2, r4, lsr #2
   110f0:	subs	r5, r0, #0
   110f4:	push	{r7, lr}
   110f8:	sub	sp, sp, #64	; 0x40
   110fc:	ldr	r6, [pc, #544]	; 11324 <putchar_unlocked@plt+0x5f4>
   11100:	beq	11138 <putchar_unlocked@plt+0x408>
   11104:	mov	r2, #5
   11108:	mov	r0, #0
   1110c:	ldr	r3, [pc, #532]	; 11328 <putchar_unlocked@plt+0x5f8>
   11110:	ldr	r1, [pc, #532]	; 1132c <putchar_unlocked@plt+0x5fc>
   11114:	ldr	r4, [r3]
   11118:	bl	10ba4 <dcgettext@plt>
   1111c:	mov	r2, r0
   11120:	mov	r1, #1
   11124:	ldr	r3, [r6]
   11128:	mov	r0, r4
   1112c:	bl	10cb8 <__fprintf_chk@plt>
   11130:	mov	r0, r5
   11134:	bl	10c64 <exit@plt>
   11138:	mov	r2, #5
   1113c:	ldr	r1, [pc, #492]	; 11330 <putchar_unlocked@plt+0x600>
   11140:	bl	10ba4 <dcgettext@plt>
   11144:	ldr	r3, [r6]
   11148:	mov	r1, r0
   1114c:	mov	r0, #1
   11150:	ldr	r4, [pc, #476]	; 11334 <putchar_unlocked@plt+0x604>
   11154:	ldr	r7, [pc, #476]	; 11338 <putchar_unlocked@plt+0x608>
   11158:	mov	r2, r3
   1115c:	bl	10ca0 <__printf_chk@plt>
   11160:	mov	r2, #5
   11164:	ldr	r1, [pc, #464]	; 1133c <putchar_unlocked@plt+0x60c>
   11168:	mov	r0, r5
   1116c:	bl	10ba4 <dcgettext@plt>
   11170:	ldr	r1, [r4]
   11174:	bl	10b38 <fputs_unlocked@plt>
   11178:	mov	r2, #5
   1117c:	ldr	r1, [pc, #444]	; 11340 <putchar_unlocked@plt+0x610>
   11180:	mov	r0, r5
   11184:	bl	10ba4 <dcgettext@plt>
   11188:	ldr	r1, [r4]
   1118c:	bl	10b38 <fputs_unlocked@plt>
   11190:	mov	r2, #5
   11194:	ldr	r1, [pc, #424]	; 11344 <putchar_unlocked@plt+0x614>
   11198:	mov	r0, r5
   1119c:	bl	10ba4 <dcgettext@plt>
   111a0:	ldr	r1, [r4]
   111a4:	bl	10b38 <fputs_unlocked@plt>
   111a8:	mov	r2, #5
   111ac:	ldr	r1, [pc, #404]	; 11348 <putchar_unlocked@plt+0x618>
   111b0:	mov	r0, r5
   111b4:	bl	10ba4 <dcgettext@plt>
   111b8:	ldr	r1, [r4]
   111bc:	bl	10b38 <fputs_unlocked@plt>
   111c0:	mov	r2, #5
   111c4:	ldr	r1, [pc, #384]	; 1134c <putchar_unlocked@plt+0x61c>
   111c8:	mov	r0, r5
   111cc:	bl	10ba4 <dcgettext@plt>
   111d0:	ldr	r1, [r4]
   111d4:	bl	10b38 <fputs_unlocked@plt>
   111d8:	mov	r2, #5
   111dc:	ldr	r1, [pc, #364]	; 11350 <putchar_unlocked@plt+0x620>
   111e0:	mov	r0, r5
   111e4:	bl	10ba4 <dcgettext@plt>
   111e8:	ldr	r3, [r6]
   111ec:	mov	r1, r0
   111f0:	mov	r0, #1
   111f4:	add	r6, sp, #8
   111f8:	mov	r2, r3
   111fc:	str	r3, [sp]
   11200:	str	r3, [sp, #4]
   11204:	bl	10ca0 <__printf_chk@plt>
   11208:	ldr	lr, [pc, #324]	; 11354 <putchar_unlocked@plt+0x624>
   1120c:	add	ip, sp, #8
   11210:	ldm	lr!, {r0, r1, r2, r3}
   11214:	stmia	ip!, {r0, r1, r2, r3}
   11218:	ldm	lr!, {r0, r1, r2, r3}
   1121c:	stmia	ip!, {r0, r1, r2, r3}
   11220:	ldm	lr!, {r0, r1, r2, r3}
   11224:	stmia	ip!, {r0, r1, r2, r3}
   11228:	ldm	lr, {r0, r1}
   1122c:	stm	ip, {r0, r1}
   11230:	ldr	r1, [r6]
   11234:	cmp	r1, #0
   11238:	bne	112dc <putchar_unlocked@plt+0x5ac>
   1123c:	ldr	r6, [r6, #4]
   11240:	mov	r2, #5
   11244:	mov	r0, #0
   11248:	ldr	r7, [pc, #232]	; 11338 <putchar_unlocked@plt+0x608>
   1124c:	ldr	r1, [pc, #260]	; 11358 <putchar_unlocked@plt+0x628>
   11250:	cmp	r6, #0
   11254:	moveq	r6, r7
   11258:	bl	10ba4 <dcgettext@plt>
   1125c:	mov	r1, r0
   11260:	ldr	r3, [pc, #244]	; 1135c <putchar_unlocked@plt+0x62c>
   11264:	mov	r0, #1
   11268:	ldr	r2, [pc, #240]	; 11360 <putchar_unlocked@plt+0x630>
   1126c:	bl	10ca0 <__printf_chk@plt>
   11270:	mov	r1, #0
   11274:	mov	r0, #5
   11278:	bl	10cdc <setlocale@plt>
   1127c:	cmp	r0, #0
   11280:	bne	112f4 <putchar_unlocked@plt+0x5c4>
   11284:	mov	r2, #5
   11288:	ldr	r1, [pc, #212]	; 11364 <putchar_unlocked@plt+0x634>
   1128c:	mov	r0, #0
   11290:	bl	10ba4 <dcgettext@plt>
   11294:	mov	r1, r0
   11298:	ldr	r3, [pc, #152]	; 11338 <putchar_unlocked@plt+0x608>
   1129c:	mov	r0, #1
   112a0:	ldr	r2, [pc, #180]	; 1135c <putchar_unlocked@plt+0x62c>
   112a4:	bl	10ca0 <__printf_chk@plt>
   112a8:	mov	r2, #5
   112ac:	ldr	r1, [pc, #180]	; 11368 <putchar_unlocked@plt+0x638>
   112b0:	mov	r0, #0
   112b4:	bl	10ba4 <dcgettext@plt>
   112b8:	ldr	r2, [pc, #172]	; 1136c <putchar_unlocked@plt+0x63c>
   112bc:	cmp	r6, r7
   112c0:	mov	r1, r0
   112c4:	mov	r0, #1
   112c8:	ldr	r3, [pc, #160]	; 11370 <putchar_unlocked@plt+0x640>
   112cc:	moveq	r3, r2
   112d0:	mov	r2, r6
   112d4:	bl	10ca0 <__printf_chk@plt>
   112d8:	b	11130 <putchar_unlocked@plt+0x400>
   112dc:	mov	r0, r7
   112e0:	bl	10b44 <strcmp@plt>
   112e4:	cmp	r0, #0
   112e8:	beq	1123c <putchar_unlocked@plt+0x50c>
   112ec:	add	r6, r6, #8
   112f0:	b	11230 <putchar_unlocked@plt+0x500>
   112f4:	mov	r2, #3
   112f8:	ldr	r1, [pc, #116]	; 11374 <putchar_unlocked@plt+0x644>
   112fc:	bl	10d18 <strncmp@plt>
   11300:	cmp	r0, #0
   11304:	beq	11284 <putchar_unlocked@plt+0x554>
   11308:	mov	r2, #5
   1130c:	ldr	r1, [pc, #100]	; 11378 <putchar_unlocked@plt+0x648>
   11310:	mov	r0, #0
   11314:	bl	10ba4 <dcgettext@plt>
   11318:	ldr	r1, [r4]
   1131c:	bl	10b38 <fputs_unlocked@plt>
   11320:	b	11284 <putchar_unlocked@plt+0x554>
   11324:	andeq	r5, r2, r8, lsr r1
   11328:	andeq	r5, r2, r0, lsr #2
   1132c:	muleq	r1, r1, r9
   11330:			; <UNDEFINED> instruction: 0x000139b8
   11334:	andeq	r5, r2, r4, lsr #2
   11338:	andeq	r3, r1, r8, lsl #19
   1133c:	andeq	r3, r1, sp, ror #19
   11340:	andeq	r3, r1, r5, asr sl
   11344:	andeq	r3, r1, r0, lsr #21
   11348:	andeq	r3, r1, sl, ror #22
   1134c:	muleq	r1, r7, fp
   11350:	andeq	r3, r1, sp, asr #23
   11354:	strdeq	r3, [r1], -r0
   11358:	andeq	r3, r1, r6, lsl #25
   1135c:	muleq	r1, sp, ip
   11360:	andeq	r3, r1, r5, asr #25
   11364:	andeq	r3, r1, lr, lsl sp
   11368:	andeq	r3, r1, r9, lsr sp
   1136c:	ldrdeq	r3, [r1], -r7
   11370:	andeq	r3, r1, r5, lsl #25
   11374:	ldrdeq	r3, [r1], -r3	; <UNPREDICTABLE>
   11378:	ldrdeq	r3, [r1], -r7
   1137c:	ldr	r3, [pc, #4]	; 11388 <putchar_unlocked@plt+0x658>
   11380:	str	r0, [r3]
   11384:	bx	lr
   11388:	andeq	r5, r2, r0, lsr r1
   1138c:	ldr	r3, [pc, #4]	; 11398 <putchar_unlocked@plt+0x668>
   11390:	strb	r0, [r3, #4]
   11394:	bx	lr
   11398:	andeq	r5, r2, r0, lsr r1
   1139c:	ldr	r3, [pc, #176]	; 11454 <putchar_unlocked@plt+0x724>
   113a0:	push	{r0, r1, r4, r5, r6, lr}
   113a4:	ldr	r0, [r3]
   113a8:	bl	134b0 <putchar_unlocked@plt+0x2780>
   113ac:	cmp	r0, #0
   113b0:	beq	11438 <putchar_unlocked@plt+0x708>
   113b4:	ldr	r4, [pc, #156]	; 11458 <putchar_unlocked@plt+0x728>
   113b8:	bl	10c7c <__errno_location@plt>
   113bc:	mov	r5, r0
   113c0:	ldrb	r6, [r4, #4]
   113c4:	cmp	r6, #0
   113c8:	beq	113d8 <putchar_unlocked@plt+0x6a8>
   113cc:	ldr	r3, [r0]
   113d0:	cmp	r3, #32
   113d4:	beq	11438 <putchar_unlocked@plt+0x708>
   113d8:	mov	r2, #5
   113dc:	ldr	r1, [pc, #120]	; 1145c <putchar_unlocked@plt+0x72c>
   113e0:	mov	r0, #0
   113e4:	bl	10ba4 <dcgettext@plt>
   113e8:	mov	r6, r0
   113ec:	ldr	r0, [r4]
   113f0:	cmp	r0, #0
   113f4:	beq	11424 <putchar_unlocked@plt+0x6f4>
   113f8:	ldr	r4, [r5]
   113fc:	bl	12a0c <putchar_unlocked@plt+0x1cdc>
   11400:	mov	r3, r0
   11404:	ldr	r2, [pc, #84]	; 11460 <putchar_unlocked@plt+0x730>
   11408:	mov	r0, #0
   1140c:	str	r6, [sp]
   11410:	mov	r1, r4
   11414:	bl	10c10 <error@plt>
   11418:	ldr	r3, [pc, #68]	; 11464 <putchar_unlocked@plt+0x734>
   1141c:	ldr	r0, [r3]
   11420:	bl	10b68 <_exit@plt>
   11424:	mov	r3, r6
   11428:	ldr	r2, [pc, #56]	; 11468 <putchar_unlocked@plt+0x738>
   1142c:	ldr	r1, [r5]
   11430:	bl	10c10 <error@plt>
   11434:	b	11418 <putchar_unlocked@plt+0x6e8>
   11438:	ldr	r3, [pc, #44]	; 1146c <putchar_unlocked@plt+0x73c>
   1143c:	ldr	r0, [r3]
   11440:	bl	134b0 <putchar_unlocked@plt+0x2780>
   11444:	cmp	r0, #0
   11448:	bne	11418 <putchar_unlocked@plt+0x6e8>
   1144c:	add	sp, sp, #8
   11450:	pop	{r4, r5, r6, pc}
   11454:	andeq	r5, r2, r4, lsr #2
   11458:	andeq	r5, r2, r0, lsr r1
   1145c:	andeq	r3, r1, fp, asr #28
   11460:	andeq	r3, r1, r7, asr lr
   11464:	andeq	r5, r2, ip, asr #1
   11468:	andeq	r3, r1, fp, asr lr
   1146c:	andeq	r5, r2, r0, lsr #2
   11470:	push	{r4, r5, r6, lr}
   11474:	mov	r6, r0
   11478:	bl	1342c <putchar_unlocked@plt+0x26fc>
   1147c:	ldrb	r3, [r0]
   11480:	cmp	r3, #0
   11484:	beq	114c0 <putchar_unlocked@plt+0x790>
   11488:	mov	r5, r0
   1148c:	bl	13484 <putchar_unlocked@plt+0x2754>
   11490:	ldrb	r4, [r5, r0]
   11494:	cmp	r4, #47	; 0x2f
   11498:	movne	r4, r0
   1149c:	addeq	r4, r0, #1
   114a0:	add	r0, r4, #1
   114a4:	bl	13084 <putchar_unlocked@plt+0x2354>
   114a8:	mov	r2, r4
   114ac:	mov	r1, r5
   114b0:	bl	10b74 <memcpy@plt>
   114b4:	mov	r2, #0
   114b8:	strb	r2, [r0, r4]
   114bc:	pop	{r4, r5, r6, pc}
   114c0:	mov	r0, r6
   114c4:	mov	r5, r6
   114c8:	bl	13484 <putchar_unlocked@plt+0x2754>
   114cc:	mov	r4, r0
   114d0:	b	114a0 <putchar_unlocked@plt+0x770>
   114d4:	push	{r4, lr}
   114d8:	mov	r4, r0
   114dc:	bl	1342c <putchar_unlocked@plt+0x26fc>
   114e0:	ldrb	r3, [r0]
   114e4:	cmp	r3, #0
   114e8:	movne	r4, r0
   114ec:	mov	r0, r4
   114f0:	bl	13484 <putchar_unlocked@plt+0x2754>
   114f4:	ldrb	r3, [r4, r0]
   114f8:	mov	r2, #0
   114fc:	strb	r2, [r4, r0]
   11500:	subs	r0, r3, r2
   11504:	movne	r0, #1
   11508:	pop	{r4, pc}
   1150c:	push	{r0, r1, r2, r4, r5, lr}
   11510:	mov	r5, r0
   11514:	bl	10c7c <__errno_location@plt>
   11518:	mov	r4, r0
   1151c:	mov	r0, r5
   11520:	ldr	r3, [r4]
   11524:	str	r3, [sp]
   11528:	str	r3, [sp, #4]
   1152c:	mov	r3, #0
   11530:	str	r3, [r4]
   11534:	bl	10b5c <free@plt>
   11538:	ldr	r3, [r4]
   1153c:	add	r2, sp, #8
   11540:	clz	r3, r3
   11544:	lsr	r3, r3, #5
   11548:	add	r3, r2, r3, lsl #2
   1154c:	ldr	r3, [r3, #-8]
   11550:	str	r3, [r4]
   11554:	add	sp, sp, #12
   11558:	pop	{r4, r5, pc}
   1155c:	push	{r4, r5, r6, lr}
   11560:	subs	r4, r0, #0
   11564:	bne	1157c <putchar_unlocked@plt+0x84c>
   11568:	ldr	r3, [pc, #124]	; 115ec <putchar_unlocked@plt+0x8bc>
   1156c:	ldr	r0, [pc, #124]	; 115f0 <putchar_unlocked@plt+0x8c0>
   11570:	ldr	r1, [r3]
   11574:	bl	10d0c <fputs@plt>
   11578:	bl	10d24 <abort@plt>
   1157c:	mov	r1, #47	; 0x2f
   11580:	bl	10ce8 <strrchr@plt>
   11584:	subs	r6, r0, #0
   11588:	beq	115d8 <putchar_unlocked@plt+0x8a8>
   1158c:	add	r5, r6, #1
   11590:	sub	r3, r5, r4
   11594:	cmp	r3, #6
   11598:	ble	115d8 <putchar_unlocked@plt+0x8a8>
   1159c:	mov	r2, #7
   115a0:	ldr	r1, [pc, #76]	; 115f4 <putchar_unlocked@plt+0x8c4>
   115a4:	sub	r0, r6, #6
   115a8:	bl	10d18 <strncmp@plt>
   115ac:	cmp	r0, #0
   115b0:	bne	115d8 <putchar_unlocked@plt+0x8a8>
   115b4:	mov	r2, #3
   115b8:	ldr	r1, [pc, #56]	; 115f8 <putchar_unlocked@plt+0x8c8>
   115bc:	mov	r0, r5
   115c0:	bl	10d18 <strncmp@plt>
   115c4:	cmp	r0, #0
   115c8:	ldreq	r3, [pc, #44]	; 115fc <putchar_unlocked@plt+0x8cc>
   115cc:	addeq	r4, r6, #4
   115d0:	movne	r4, r5
   115d4:	streq	r4, [r3]
   115d8:	ldr	r3, [pc, #32]	; 11600 <putchar_unlocked@plt+0x8d0>
   115dc:	str	r4, [r3]
   115e0:	ldr	r3, [pc, #28]	; 11604 <putchar_unlocked@plt+0x8d4>
   115e4:	str	r4, [r3]
   115e8:	pop	{r4, r5, r6, pc}
   115ec:	andeq	r5, r2, r0, lsr #2
   115f0:	andeq	r3, r1, lr, asr lr
   115f4:	muleq	r1, r6, lr
   115f8:	muleq	r1, lr, lr
   115fc:	andeq	r5, r2, r0, lsl r1
   11600:	andeq	r5, r2, r8, lsr r1
   11604:	andeq	r5, r2, r4, lsl r1
   11608:	push	{r4, lr}
   1160c:	mov	r2, #48	; 0x30
   11610:	mov	r4, r1
   11614:	mov	r1, #0
   11618:	bl	10c94 <memset@plt>
   1161c:	cmp	r4, #10
   11620:	bne	11628 <putchar_unlocked@plt+0x8f8>
   11624:	bl	10d24 <abort@plt>
   11628:	str	r4, [r0]
   1162c:	pop	{r4, pc}
   11630:	push	{r4, r5, r6, lr}
   11634:	mov	r2, #5
   11638:	mov	r6, r0
   1163c:	mov	r5, r1
   11640:	mov	r1, r0
   11644:	mov	r0, #0
   11648:	bl	10ba4 <dcgettext@plt>
   1164c:	cmp	r6, r0
   11650:	mov	r4, r0
   11654:	bne	116c4 <putchar_unlocked@plt+0x994>
   11658:	bl	136d8 <putchar_unlocked@plt+0x29a8>
   1165c:	ldrb	r3, [r0]
   11660:	bic	r3, r3, #32
   11664:	cmp	r3, #85	; 0x55
   11668:	bne	116cc <putchar_unlocked@plt+0x99c>
   1166c:	ldrb	r3, [r0, #1]
   11670:	bic	r3, r3, #32
   11674:	cmp	r3, #84	; 0x54
   11678:	bne	1173c <putchar_unlocked@plt+0xa0c>
   1167c:	ldrb	r3, [r0, #2]
   11680:	bic	r3, r3, #32
   11684:	cmp	r3, #70	; 0x46
   11688:	bne	1173c <putchar_unlocked@plt+0xa0c>
   1168c:	ldrb	r3, [r0, #3]
   11690:	cmp	r3, #45	; 0x2d
   11694:	bne	1173c <putchar_unlocked@plt+0xa0c>
   11698:	ldrb	r3, [r0, #4]
   1169c:	cmp	r3, #56	; 0x38
   116a0:	bne	1173c <putchar_unlocked@plt+0xa0c>
   116a4:	ldrb	r3, [r0, #5]
   116a8:	cmp	r3, #0
   116ac:	bne	1173c <putchar_unlocked@plt+0xa0c>
   116b0:	ldrb	r2, [r4]
   116b4:	ldr	r3, [pc, #144]	; 1174c <putchar_unlocked@plt+0xa1c>
   116b8:	ldr	r4, [pc, #144]	; 11750 <putchar_unlocked@plt+0xa20>
   116bc:	cmp	r2, #96	; 0x60
   116c0:	movne	r4, r3
   116c4:	mov	r0, r4
   116c8:	pop	{r4, r5, r6, pc}
   116cc:	cmp	r3, #71	; 0x47
   116d0:	bne	1173c <putchar_unlocked@plt+0xa0c>
   116d4:	ldrb	r3, [r0, #1]
   116d8:	bic	r3, r3, #32
   116dc:	cmp	r3, #66	; 0x42
   116e0:	bne	1173c <putchar_unlocked@plt+0xa0c>
   116e4:	ldrb	r3, [r0, #2]
   116e8:	cmp	r3, #49	; 0x31
   116ec:	bne	1173c <putchar_unlocked@plt+0xa0c>
   116f0:	ldrb	r3, [r0, #3]
   116f4:	cmp	r3, #56	; 0x38
   116f8:	bne	1173c <putchar_unlocked@plt+0xa0c>
   116fc:	ldrb	r3, [r0, #4]
   11700:	cmp	r3, #48	; 0x30
   11704:	bne	1173c <putchar_unlocked@plt+0xa0c>
   11708:	ldrb	r3, [r0, #5]
   1170c:	cmp	r3, #51	; 0x33
   11710:	bne	1173c <putchar_unlocked@plt+0xa0c>
   11714:	ldrb	r3, [r0, #6]
   11718:	cmp	r3, #48	; 0x30
   1171c:	bne	1173c <putchar_unlocked@plt+0xa0c>
   11720:	ldrb	r3, [r0, #7]
   11724:	cmp	r3, #0
   11728:	bne	1173c <putchar_unlocked@plt+0xa0c>
   1172c:	ldrb	r2, [r4]
   11730:	ldr	r3, [pc, #28]	; 11754 <putchar_unlocked@plt+0xa24>
   11734:	ldr	r4, [pc, #28]	; 11758 <putchar_unlocked@plt+0xa28>
   11738:	b	116bc <putchar_unlocked@plt+0x98c>
   1173c:	ldr	r4, [pc, #24]	; 1175c <putchar_unlocked@plt+0xa2c>
   11740:	cmp	r5, #9
   11744:	ldr	r3, [pc, #20]	; 11760 <putchar_unlocked@plt+0xa30>
   11748:	b	116c0 <putchar_unlocked@plt+0x990>
   1174c:	strdeq	r3, [r1], -sl
   11750:	andeq	r3, r1, r5, lsl #30
   11754:	strdeq	r3, [r1], -lr
   11758:	andeq	r3, r1, r1, lsl #30
   1175c:	strdeq	r3, [r1], -r8
   11760:	andeq	r3, r1, r9, lsl #30
   11764:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11768:	sub	sp, sp, #108	; 0x6c
   1176c:	mov	r8, r0
   11770:	mov	r5, r1
   11774:	mov	r6, #0
   11778:	str	r3, [sp, #40]	; 0x28
   1177c:	str	r2, [sp, #48]	; 0x30
   11780:	ldr	sl, [sp, #144]	; 0x90
   11784:	bl	10be0 <__ctype_get_mb_cur_max@plt>
   11788:	ldr	r3, [sp, #148]	; 0x94
   1178c:	str	r6, [sp, #24]
   11790:	str	r6, [sp, #32]
   11794:	str	r6, [sp, #44]	; 0x2c
   11798:	str	r6, [sp, #52]	; 0x34
   1179c:	ubfx	r7, r3, #1, #1
   117a0:	mov	r3, #1
   117a4:	str	r6, [sp, #60]	; 0x3c
   117a8:	str	r3, [sp, #72]	; 0x48
   117ac:	str	r0, [sp, #76]	; 0x4c
   117b0:	cmp	sl, #10
   117b4:	ldrls	pc, [pc, sl, lsl #2]
   117b8:	b	119fc <putchar_unlocked@plt+0xccc>
   117bc:	andeq	r1, r1, r8, ror #15
   117c0:	andeq	r1, r1, r4, lsl sl
   117c4:	muleq	r1, r8, r9
   117c8:			; <UNDEFINED> instruction: 0x000119b0
   117cc:	andeq	r1, r1, r0, lsl #19
   117d0:	ldrdeq	r1, [r1], -r8
   117d4:			; <UNDEFINED> instruction: 0x000118b8
   117d8:	andeq	r1, r1, r0, lsl #20
   117dc:	andeq	r1, r1, r8, lsl #18
   117e0:	andeq	r1, r1, r8, lsl #18
   117e4:	andeq	r1, r1, r8, lsl #18
   117e8:	mov	r4, sl
   117ec:	mov	r7, #0
   117f0:	mov	r9, r5
   117f4:	mov	r3, #0
   117f8:	str	r6, [sp, #68]	; 0x44
   117fc:	str	r3, [sp, #28]
   11800:	ldr	r3, [sp, #40]	; 0x28
   11804:	cmn	r3, #1
   11808:	bne	123a8 <putchar_unlocked@plt+0x1678>
   1180c:	ldr	r2, [sp, #28]
   11810:	ldr	r3, [sp, #48]	; 0x30
   11814:	ldrb	r3, [r3, r2]
   11818:	adds	r3, r3, #0
   1181c:	movne	r3, #1
   11820:	str	r3, [sp, #36]	; 0x24
   11824:	ldr	r3, [sp, #36]	; 0x24
   11828:	cmp	r3, #0
   1182c:	bne	11a38 <putchar_unlocked@plt+0xd08>
   11830:	sub	r3, sl, #2
   11834:	cmp	r4, #0
   11838:	clz	r3, r3
   1183c:	movne	r2, #0
   11840:	lsr	r3, r3, #5
   11844:	andeq	r2, r3, r7
   11848:	cmp	r2, #0
   1184c:	bne	11bfc <putchar_unlocked@plt+0xecc>
   11850:	eor	r7, r7, #1
   11854:	ands	r3, r3, r7
   11858:	beq	12420 <putchar_unlocked@plt+0x16f0>
   1185c:	ldr	r2, [sp, #68]	; 0x44
   11860:	cmp	r2, #0
   11864:	beq	123e8 <putchar_unlocked@plt+0x16b8>
   11868:	ldr	r3, [sp, #72]	; 0x48
   1186c:	cmp	r3, #0
   11870:	beq	123bc <putchar_unlocked@plt+0x168c>
   11874:	ldr	r2, [sp, #48]	; 0x30
   11878:	ldr	r3, [sp, #160]	; 0xa0
   1187c:	ldr	r1, [sp, #60]	; 0x3c
   11880:	str	r3, [sp, #16]
   11884:	ldr	r3, [sp, #156]	; 0x9c
   11888:	str	r3, [sp, #12]
   1188c:	ldr	r3, [sp, #152]	; 0x98
   11890:	str	r3, [sp, #8]
   11894:	ldr	r3, [sp, #148]	; 0x94
   11898:	str	r3, [sp, #4]
   1189c:	mov	r3, #5
   118a0:	str	r3, [sp]
   118a4:	ldr	r3, [sp, #40]	; 0x28
   118a8:	mov	r0, r8
   118ac:	bl	11764 <putchar_unlocked@plt+0xa34>
   118b0:	mov	r4, r0
   118b4:	b	12414 <putchar_unlocked@plt+0x16e4>
   118b8:	ldr	r3, [pc, #2948]	; 12444 <putchar_unlocked@plt+0x1714>
   118bc:	mov	r7, #1
   118c0:	mov	r4, #0
   118c4:	mov	sl, #5
   118c8:	str	r7, [sp, #24]
   118cc:	str	r7, [sp, #32]
   118d0:	str	r3, [sp, #44]	; 0x2c
   118d4:	b	117f0 <putchar_unlocked@plt+0xac0>
   118d8:	cmp	r7, #0
   118dc:	bne	11a20 <putchar_unlocked@plt+0xcf0>
   118e0:	cmp	r5, #0
   118e4:	mov	r4, #1
   118e8:	movne	r3, #34	; 0x22
   118ec:	strbne	r3, [r8]
   118f0:	mov	r3, #1
   118f4:	str	r3, [sp, #24]
   118f8:	str	r3, [sp, #32]
   118fc:	ldr	r3, [pc, #2880]	; 12444 <putchar_unlocked@plt+0x1714>
   11900:	str	r3, [sp, #44]	; 0x2c
   11904:	b	117f0 <putchar_unlocked@plt+0xac0>
   11908:	cmp	sl, #10
   1190c:	beq	11930 <putchar_unlocked@plt+0xc00>
   11910:	mov	r1, sl
   11914:	ldr	r0, [pc, #2860]	; 12448 <putchar_unlocked@plt+0x1718>
   11918:	bl	11630 <putchar_unlocked@plt+0x900>
   1191c:	mov	r1, sl
   11920:	str	r0, [sp, #156]	; 0x9c
   11924:	ldr	r0, [pc, #2848]	; 1244c <putchar_unlocked@plt+0x171c>
   11928:	bl	11630 <putchar_unlocked@plt+0x900>
   1192c:	str	r0, [sp, #160]	; 0xa0
   11930:	cmp	r7, #0
   11934:	moveq	r4, r7
   11938:	beq	11950 <putchar_unlocked@plt+0xc20>
   1193c:	mov	r4, #0
   11940:	b	11960 <putchar_unlocked@plt+0xc30>
   11944:	cmp	r5, r4
   11948:	strbhi	r3, [r8, r4]
   1194c:	add	r4, r4, #1
   11950:	ldr	r3, [sp, #156]	; 0x9c
   11954:	ldrb	r3, [r3, r4]
   11958:	cmp	r3, #0
   1195c:	bne	11944 <putchar_unlocked@plt+0xc14>
   11960:	ldr	r0, [sp, #160]	; 0xa0
   11964:	bl	10c70 <strlen@plt>
   11968:	ldr	r3, [sp, #160]	; 0xa0
   1196c:	str	r0, [sp, #32]
   11970:	str	r3, [sp, #44]	; 0x2c
   11974:	mov	r3, #1
   11978:	str	r3, [sp, #24]
   1197c:	b	117f0 <putchar_unlocked@plt+0xac0>
   11980:	mov	r3, #1
   11984:	cmp	r7, #0
   11988:	streq	r3, [sp, #24]
   1198c:	beq	119d0 <putchar_unlocked@plt+0xca0>
   11990:	str	r3, [sp, #32]
   11994:	b	119bc <putchar_unlocked@plt+0xc8c>
   11998:	cmp	r7, #0
   1199c:	beq	119d0 <putchar_unlocked@plt+0xca0>
   119a0:	mov	r3, #1
   119a4:	str	r3, [sp, #32]
   119a8:	ldr	r3, [pc, #2716]	; 1244c <putchar_unlocked@plt+0x171c>
   119ac:	b	11a30 <putchar_unlocked@plt+0xd00>
   119b0:	mov	r7, #1
   119b4:	str	r7, [sp, #24]
   119b8:	str	r7, [sp, #32]
   119bc:	ldr	r3, [pc, #2696]	; 1244c <putchar_unlocked@plt+0x171c>
   119c0:	mov	r4, #0
   119c4:	str	r3, [sp, #44]	; 0x2c
   119c8:	mov	sl, #2
   119cc:	b	117f0 <putchar_unlocked@plt+0xac0>
   119d0:	cmp	r5, #0
   119d4:	movne	r3, #39	; 0x27
   119d8:	movne	r7, #0
   119dc:	strbne	r3, [r8]
   119e0:	moveq	r7, r5
   119e4:	mov	r3, #1
   119e8:	mov	r4, #1
   119ec:	str	r3, [sp, #32]
   119f0:	ldr	r3, [pc, #2644]	; 1244c <putchar_unlocked@plt+0x171c>
   119f4:	str	r3, [sp, #44]	; 0x2c
   119f8:	b	119c8 <putchar_unlocked@plt+0xc98>
   119fc:	bl	10d24 <abort@plt>
   11a00:	mov	r3, #1
   11a04:	mov	r7, #0
   11a08:	str	r3, [sp, #24]
   11a0c:	mov	r4, #0
   11a10:	b	117f0 <putchar_unlocked@plt+0xac0>
   11a14:	mov	r7, #1
   11a18:	str	sl, [sp, #32]
   11a1c:	b	119bc <putchar_unlocked@plt+0xc8c>
   11a20:	mov	r3, #1
   11a24:	str	r7, [sp, #24]
   11a28:	str	r3, [sp, #32]
   11a2c:	ldr	r3, [pc, #2576]	; 12444 <putchar_unlocked@plt+0x1714>
   11a30:	str	r3, [sp, #44]	; 0x2c
   11a34:	b	11a0c <putchar_unlocked@plt+0xcdc>
   11a38:	ldr	fp, [sp, #24]
   11a3c:	ldr	r3, [sp, #32]
   11a40:	cmp	sl, #2
   11a44:	moveq	fp, #0
   11a48:	andne	fp, fp, #1
   11a4c:	adds	r5, r3, #0
   11a50:	movne	r5, #1
   11a54:	ands	r3, fp, r5
   11a58:	str	r3, [sp, #64]	; 0x40
   11a5c:	beq	11b2c <putchar_unlocked@plt+0xdfc>
   11a60:	ldr	r3, [sp, #28]
   11a64:	ldr	r2, [sp, #32]
   11a68:	cmp	r2, #1
   11a6c:	add	r6, r3, r2
   11a70:	mov	r3, r2
   11a74:	ldr	r2, [sp, #40]	; 0x28
   11a78:	movls	r3, #0
   11a7c:	movhi	r3, #1
   11a80:	cmn	r2, #1
   11a84:	movne	r3, #0
   11a88:	cmp	r3, #0
   11a8c:	beq	11a9c <putchar_unlocked@plt+0xd6c>
   11a90:	ldr	r0, [sp, #48]	; 0x30
   11a94:	bl	10c70 <strlen@plt>
   11a98:	str	r0, [sp, #40]	; 0x28
   11a9c:	ldr	r3, [sp, #40]	; 0x28
   11aa0:	cmp	r6, r3
   11aa4:	bhi	11b24 <putchar_unlocked@plt+0xdf4>
   11aa8:	ldr	r0, [sp, #28]
   11aac:	ldr	r2, [sp, #32]
   11ab0:	ldr	r3, [sp, #48]	; 0x30
   11ab4:	ldr	r1, [sp, #44]	; 0x2c
   11ab8:	add	r0, r3, r0
   11abc:	bl	10b8c <memcmp@plt>
   11ac0:	cmp	r0, #0
   11ac4:	bne	11b24 <putchar_unlocked@plt+0xdf4>
   11ac8:	cmp	r7, #0
   11acc:	beq	11b2c <putchar_unlocked@plt+0xdfc>
   11ad0:	str	r7, [sp, #24]
   11ad4:	ldr	r3, [sp, #24]
   11ad8:	mov	r1, r9
   11adc:	ldr	r2, [sp, #48]	; 0x30
   11ae0:	cmp	sl, #2
   11ae4:	movne	r3, #0
   11ae8:	andeq	r3, r3, #1
   11aec:	cmp	r3, #0
   11af0:	ldr	r3, [sp, #160]	; 0xa0
   11af4:	movne	sl, #4
   11af8:	str	sl, [sp]
   11afc:	str	r3, [sp, #16]
   11b00:	ldr	r3, [sp, #156]	; 0x9c
   11b04:	str	r3, [sp, #12]
   11b08:	mov	r3, #0
   11b0c:	str	r3, [sp, #8]
   11b10:	ldr	r3, [sp, #148]	; 0x94
   11b14:	bic	r3, r3, #2
   11b18:	str	r3, [sp, #4]
   11b1c:	ldr	r3, [sp, #40]	; 0x28
   11b20:	b	118a8 <putchar_unlocked@plt+0xb78>
   11b24:	mov	r3, #0
   11b28:	str	r3, [sp, #64]	; 0x40
   11b2c:	ldr	r2, [sp, #28]
   11b30:	ldr	r3, [sp, #48]	; 0x30
   11b34:	add	r3, r3, r2
   11b38:	str	r3, [sp, #80]	; 0x50
   11b3c:	ldr	r3, [sp, #48]	; 0x30
   11b40:	ldrb	r6, [r3, r2]
   11b44:	cmp	r6, #58	; 0x3a
   11b48:	bhi	11cac <putchar_unlocked@plt+0xf7c>
   11b4c:	cmp	r6, #43	; 0x2b
   11b50:	bcs	11e6c <putchar_unlocked@plt+0x113c>
   11b54:	cmp	r6, #32
   11b58:	beq	11ec0 <putchar_unlocked@plt+0x1190>
   11b5c:	bhi	11c04 <putchar_unlocked@plt+0xed4>
   11b60:	cmp	r6, #9
   11b64:	beq	12068 <putchar_unlocked@plt+0x1338>
   11b68:	bhi	11bc8 <putchar_unlocked@plt+0xe98>
   11b6c:	cmp	r6, #7
   11b70:	beq	12078 <putchar_unlocked@plt+0x1348>
   11b74:	bhi	12094 <putchar_unlocked@plt+0x1364>
   11b78:	cmp	r6, #0
   11b7c:	beq	11edc <putchar_unlocked@plt+0x11ac>
   11b80:	ldr	r3, [sp, #76]	; 0x4c
   11b84:	cmp	r3, #1
   11b88:	bne	120e0 <putchar_unlocked@plt+0x13b0>
   11b8c:	bl	10c58 <__ctype_b_loc@plt>
   11b90:	ldr	r2, [r0]
   11b94:	sxth	r3, r6
   11b98:	lsl	r3, r3, #1
   11b9c:	ldrh	r5, [r2, r3]
   11ba0:	ldr	r3, [sp, #76]	; 0x4c
   11ba4:	ubfx	r5, r5, #14, #1
   11ba8:	str	r3, [sp, #56]	; 0x38
   11bac:	ldr	r3, [sp, #24]
   11bb0:	eor	fp, r5, #1
   11bb4:	and	fp, fp, r3
   11bb8:	ands	fp, fp, #255	; 0xff
   11bbc:	beq	11d9c <putchar_unlocked@plt+0x106c>
   11bc0:	mov	r5, #0
   11bc4:	b	1218c <putchar_unlocked@plt+0x145c>
   11bc8:	cmp	r6, #11
   11bcc:	beq	1209c <putchar_unlocked@plt+0x136c>
   11bd0:	bcc	12070 <putchar_unlocked@plt+0x1340>
   11bd4:	cmp	r6, #12
   11bd8:	beq	120a4 <putchar_unlocked@plt+0x1374>
   11bdc:	cmp	r6, #13
   11be0:	moveq	r3, #114	; 0x72
   11be4:	bne	11b80 <putchar_unlocked@plt+0xe50>
   11be8:	cmp	sl, #2
   11bec:	movne	r2, #0
   11bf0:	andeq	r2, r7, #1
   11bf4:	cmp	r2, #0
   11bf8:	beq	1207c <putchar_unlocked@plt+0x134c>
   11bfc:	mov	sl, #2
   11c00:	b	11ad4 <putchar_unlocked@plt+0xda4>
   11c04:	cmp	r6, #37	; 0x25
   11c08:	beq	11e6c <putchar_unlocked@plt+0x113c>
   11c0c:	bhi	11c20 <putchar_unlocked@plt+0xef0>
   11c10:	cmp	r6, #35	; 0x23
   11c14:	beq	11eb4 <putchar_unlocked@plt+0x1184>
   11c18:	mov	r5, #0
   11c1c:	b	11ec4 <putchar_unlocked@plt+0x1194>
   11c20:	cmp	r6, #39	; 0x27
   11c24:	bne	11c18 <putchar_unlocked@plt+0xee8>
   11c28:	cmp	sl, #2
   11c2c:	ldrne	r5, [sp, #36]	; 0x24
   11c30:	movne	r3, r5
   11c34:	strne	r3, [sp, #68]	; 0x44
   11c38:	bne	11fb8 <putchar_unlocked@plt+0x1288>
   11c3c:	cmp	r7, #0
   11c40:	bne	11ad4 <putchar_unlocked@plt+0xda4>
   11c44:	ldr	r3, [sp, #60]	; 0x3c
   11c48:	cmp	r9, #0
   11c4c:	clz	r3, r3
   11c50:	lsr	r3, r3, #5
   11c54:	moveq	r3, #0
   11c58:	cmp	r3, #0
   11c5c:	strne	r9, [sp, #60]	; 0x3c
   11c60:	movne	r9, #0
   11c64:	bne	11c74 <putchar_unlocked@plt+0xf44>
   11c68:	cmp	r9, r4
   11c6c:	movhi	r3, #39	; 0x27
   11c70:	strbhi	r3, [r8, r4]
   11c74:	add	r3, r4, #1
   11c78:	ldr	r5, [sp, #36]	; 0x24
   11c7c:	mov	fp, #0
   11c80:	cmp	r3, r9
   11c84:	movcc	r2, #92	; 0x5c
   11c88:	str	fp, [sp, #52]	; 0x34
   11c8c:	strbcc	r2, [r8, r3]
   11c90:	add	r3, r4, #2
   11c94:	add	r4, r4, #3
   11c98:	cmp	r3, r9
   11c9c:	str	r5, [sp, #68]	; 0x44
   11ca0:	movcc	r2, #39	; 0x27
   11ca4:	strbcc	r2, [r8, r3]
   11ca8:	b	11d9c <putchar_unlocked@plt+0x106c>
   11cac:	cmp	r6, #94	; 0x5e
   11cb0:	beq	11c18 <putchar_unlocked@plt+0xee8>
   11cb4:	bhi	11e74 <putchar_unlocked@plt+0x1144>
   11cb8:	cmp	r6, #90	; 0x5a
   11cbc:	bhi	11e60 <putchar_unlocked@plt+0x1130>
   11cc0:	cmp	r6, #65	; 0x41
   11cc4:	bcs	11e6c <putchar_unlocked@plt+0x113c>
   11cc8:	cmp	r6, #62	; 0x3e
   11ccc:	bls	11c18 <putchar_unlocked@plt+0xee8>
   11cd0:	cmp	r6, #63	; 0x3f
   11cd4:	bne	11b80 <putchar_unlocked@plt+0xe50>
   11cd8:	cmp	sl, #2
   11cdc:	beq	11fc0 <putchar_unlocked@plt+0x1290>
   11ce0:	cmp	sl, #5
   11ce4:	movne	fp, #0
   11ce8:	bne	12390 <putchar_unlocked@plt+0x1660>
   11cec:	ldr	r3, [sp, #148]	; 0x94
   11cf0:	tst	r3, #4
   11cf4:	beq	11fc8 <putchar_unlocked@plt+0x1298>
   11cf8:	ldr	r3, [sp, #28]
   11cfc:	add	r2, r3, #2
   11d00:	ldr	r3, [sp, #40]	; 0x28
   11d04:	cmp	r2, r3
   11d08:	bcs	11fc8 <putchar_unlocked@plt+0x1298>
   11d0c:	ldr	r1, [sp, #28]
   11d10:	ldr	r3, [sp, #48]	; 0x30
   11d14:	add	r3, r3, r1
   11d18:	ldrb	r1, [r3, #1]
   11d1c:	cmp	r1, #63	; 0x3f
   11d20:	bne	11fc8 <putchar_unlocked@plt+0x1298>
   11d24:	ldr	r3, [sp, #48]	; 0x30
   11d28:	ldrb	r6, [r3, r2]
   11d2c:	sub	r3, r6, #33	; 0x21
   11d30:	uxtb	r3, r3
   11d34:	cmp	r3, #29
   11d38:	bhi	12398 <putchar_unlocked@plt+0x1668>
   11d3c:	ldr	r0, [pc, #1804]	; 12450 <putchar_unlocked@plt+0x1720>
   11d40:	mov	r5, #1
   11d44:	ands	r5, r0, r5, lsl r3
   11d48:	beq	123a0 <putchar_unlocked@plt+0x1670>
   11d4c:	cmp	r7, #0
   11d50:	bne	11ad4 <putchar_unlocked@plt+0xda4>
   11d54:	cmp	r9, r4
   11d58:	add	r3, r4, #1
   11d5c:	str	r2, [sp, #28]
   11d60:	mov	r5, #0
   11d64:	strbhi	r1, [r8, r4]
   11d68:	cmp	r9, r3
   11d6c:	mov	fp, r5
   11d70:	movhi	r1, #34	; 0x22
   11d74:	strbhi	r1, [r8, r3]
   11d78:	add	r3, r4, #2
   11d7c:	cmp	r9, r3
   11d80:	movhi	r1, #34	; 0x22
   11d84:	strbhi	r1, [r8, r3]
   11d88:	add	r3, r4, #3
   11d8c:	add	r4, r4, #4
   11d90:	cmp	r9, r3
   11d94:	movhi	r1, #63	; 0x3f
   11d98:	strbhi	r1, [r8, r3]
   11d9c:	ldr	r3, [sp, #24]
   11da0:	eor	r3, r3, #1
   11da4:	cmp	sl, #2
   11da8:	orreq	r3, r3, #1
   11dac:	eor	r3, r3, #1
   11db0:	orr	r3, r7, r3
   11db4:	tst	r3, #255	; 0xff
   11db8:	beq	11de4 <putchar_unlocked@plt+0x10b4>
   11dbc:	ldr	r3, [sp, #152]	; 0x98
   11dc0:	cmp	r3, #0
   11dc4:	beq	11de4 <putchar_unlocked@plt+0x10b4>
   11dc8:	ldr	r1, [sp, #152]	; 0x98
   11dcc:	ubfx	r2, r6, #5, #8
   11dd0:	and	r3, r6, #31
   11dd4:	ldr	r2, [r1, r2, lsl #2]
   11dd8:	lsr	r3, r2, r3
   11ddc:	tst	r3, #1
   11de0:	bne	11df0 <putchar_unlocked@plt+0x10c0>
   11de4:	ldr	r3, [sp, #64]	; 0x40
   11de8:	cmp	r3, #0
   11dec:	beq	11fe8 <putchar_unlocked@plt+0x12b8>
   11df0:	sub	r3, sl, #2
   11df4:	cmp	r7, #0
   11df8:	clz	r3, r3
   11dfc:	lsr	r3, r3, #5
   11e00:	bne	11ad4 <putchar_unlocked@plt+0xda4>
   11e04:	ldr	r2, [sp, #52]	; 0x34
   11e08:	eor	r2, r2, #1
   11e0c:	ands	r3, r3, r2
   11e10:	beq	11e48 <putchar_unlocked@plt+0x1118>
   11e14:	cmp	r9, r4
   11e18:	str	r3, [sp, #52]	; 0x34
   11e1c:	movhi	r2, #39	; 0x27
   11e20:	strbhi	r2, [r8, r4]
   11e24:	add	r2, r4, #1
   11e28:	cmp	r9, r2
   11e2c:	movhi	r1, #36	; 0x24
   11e30:	strbhi	r1, [r8, r2]
   11e34:	add	r2, r4, #2
   11e38:	add	r4, r4, #3
   11e3c:	cmp	r9, r2
   11e40:	movhi	r1, #39	; 0x27
   11e44:	strbhi	r1, [r8, r2]
   11e48:	cmp	r9, r4
   11e4c:	ldr	fp, [sp, #36]	; 0x24
   11e50:	movhi	r3, #92	; 0x5c
   11e54:	strbhi	r3, [r8, r4]
   11e58:	add	r4, r4, #1
   11e5c:	b	11fe8 <putchar_unlocked@plt+0x12b8>
   11e60:	cmp	r6, #92	; 0x5c
   11e64:	beq	11fd0 <putchar_unlocked@plt+0x12a0>
   11e68:	bls	11c18 <putchar_unlocked@plt+0xee8>
   11e6c:	ldr	r5, [sp, #36]	; 0x24
   11e70:	b	11fb8 <putchar_unlocked@plt+0x1288>
   11e74:	cmp	r6, #122	; 0x7a
   11e78:	bhi	11e98 <putchar_unlocked@plt+0x1168>
   11e7c:	cmp	r6, #97	; 0x61
   11e80:	bcs	11e6c <putchar_unlocked@plt+0x113c>
   11e84:	cmp	r6, #95	; 0x5f
   11e88:	beq	11e6c <putchar_unlocked@plt+0x113c>
   11e8c:	cmp	r6, #96	; 0x60
   11e90:	bne	11b80 <putchar_unlocked@plt+0xe50>
   11e94:	b	11c18 <putchar_unlocked@plt+0xee8>
   11e98:	cmp	r6, #124	; 0x7c
   11e9c:	beq	11c18 <putchar_unlocked@plt+0xee8>
   11ea0:	bcc	120ac <putchar_unlocked@plt+0x137c>
   11ea4:	cmp	r6, #125	; 0x7d
   11ea8:	beq	120ac <putchar_unlocked@plt+0x137c>
   11eac:	cmp	r6, #126	; 0x7e
   11eb0:	bne	11b80 <putchar_unlocked@plt+0xe50>
   11eb4:	ldr	r3, [sp, #28]
   11eb8:	cmp	r3, #0
   11ebc:	bne	11fc8 <putchar_unlocked@plt+0x1298>
   11ec0:	ldr	r5, [sp, #36]	; 0x24
   11ec4:	cmp	sl, #2
   11ec8:	movne	fp, #0
   11ecc:	andeq	fp, r7, #1
   11ed0:	cmp	fp, #0
   11ed4:	beq	11d9c <putchar_unlocked@plt+0x106c>
   11ed8:	b	11bfc <putchar_unlocked@plt+0xecc>
   11edc:	ldr	r3, [sp, #24]
   11ee0:	cmp	r3, #0
   11ee4:	beq	11fac <putchar_unlocked@plt+0x127c>
   11ee8:	sub	r2, sl, #2
   11eec:	cmp	r7, #0
   11ef0:	clz	r2, r2
   11ef4:	lsr	r2, r2, #5
   11ef8:	bne	11ad0 <putchar_unlocked@plt+0xda0>
   11efc:	ldr	r3, [sp, #52]	; 0x34
   11f00:	eor	r3, r3, #1
   11f04:	ands	r2, r2, r3
   11f08:	moveq	r3, r4
   11f0c:	beq	11f44 <putchar_unlocked@plt+0x1214>
   11f10:	cmp	r9, r4
   11f14:	str	r2, [sp, #52]	; 0x34
   11f18:	movhi	r3, #39	; 0x27
   11f1c:	strbhi	r3, [r8, r4]
   11f20:	add	r3, r4, #1
   11f24:	cmp	r9, r3
   11f28:	movhi	r1, #36	; 0x24
   11f2c:	strbhi	r1, [r8, r3]
   11f30:	add	r3, r4, #2
   11f34:	cmp	r9, r3
   11f38:	movhi	r1, #39	; 0x27
   11f3c:	strbhi	r1, [r8, r3]
   11f40:	add	r3, r4, #3
   11f44:	cmp	r9, r3
   11f48:	add	r4, r3, #1
   11f4c:	movhi	r2, #92	; 0x5c
   11f50:	strbhi	r2, [r8, r3]
   11f54:	cmp	fp, #0
   11f58:	beq	12380 <putchar_unlocked@plt+0x1650>
   11f5c:	ldr	r2, [sp, #28]
   11f60:	ldr	r1, [sp, #40]	; 0x28
   11f64:	add	r2, r2, #1
   11f68:	cmp	r2, r1
   11f6c:	bcs	11fa4 <putchar_unlocked@plt+0x1274>
   11f70:	ldr	r1, [sp, #48]	; 0x30
   11f74:	mov	r6, #48	; 0x30
   11f78:	ldrb	r2, [r1, r2]
   11f7c:	sub	r2, r2, #48	; 0x30
   11f80:	cmp	r2, #9
   11f84:	bhi	12390 <putchar_unlocked@plt+0x1660>
   11f88:	cmp	r9, r4
   11f8c:	add	r2, r3, #2
   11f90:	strbhi	r6, [r8, r4]
   11f94:	cmp	r9, r2
   11f98:	add	r4, r3, #3
   11f9c:	movhi	r1, #48	; 0x30
   11fa0:	strbhi	r1, [r8, r2]
   11fa4:	mov	r5, #0
   11fa8:	b	12388 <putchar_unlocked@plt+0x1658>
   11fac:	ldr	r3, [sp, #148]	; 0x94
   11fb0:	ands	r5, r3, #1
   11fb4:	bne	1203c <putchar_unlocked@plt+0x130c>
   11fb8:	mov	fp, #0
   11fbc:	b	11d9c <putchar_unlocked@plt+0x106c>
   11fc0:	cmp	r7, #0
   11fc4:	bne	11ad4 <putchar_unlocked@plt+0xda4>
   11fc8:	mov	r5, #0
   11fcc:	b	11fb8 <putchar_unlocked@plt+0x1288>
   11fd0:	cmp	sl, #2
   11fd4:	bne	12048 <putchar_unlocked@plt+0x1318>
   11fd8:	cmp	r7, #0
   11fdc:	bne	11ad4 <putchar_unlocked@plt+0xda4>
   11fe0:	mov	r5, r7
   11fe4:	mov	fp, r7
   11fe8:	ldr	r3, [sp, #52]	; 0x34
   11fec:	eor	fp, fp, #1
   11ff0:	tst	r3, fp
   11ff4:	beq	12020 <putchar_unlocked@plt+0x12f0>
   11ff8:	cmp	r9, r4
   11ffc:	movhi	r3, #39	; 0x27
   12000:	strbhi	r3, [r8, r4]
   12004:	add	r3, r4, #1
   12008:	add	r4, r4, #2
   1200c:	cmp	r9, r3
   12010:	movhi	r2, #39	; 0x27
   12014:	strbhi	r2, [r8, r3]
   12018:	mov	r3, #0
   1201c:	str	r3, [sp, #52]	; 0x34
   12020:	cmp	r9, r4
   12024:	ldr	r3, [sp, #72]	; 0x48
   12028:	strbhi	r6, [r8, r4]
   1202c:	cmp	r5, #0
   12030:	add	r4, r4, #1
   12034:	moveq	r3, #0
   12038:	str	r3, [sp, #72]	; 0x48
   1203c:	ldr	r3, [sp, #28]
   12040:	add	r3, r3, #1
   12044:	b	117fc <putchar_unlocked@plt+0xacc>
   12048:	ldr	r3, [sp, #24]
   1204c:	and	r3, r3, r7
   12050:	tst	r5, r3
   12054:	moveq	r3, r6
   12058:	beq	11be8 <putchar_unlocked@plt+0xeb8>
   1205c:	mov	fp, #0
   12060:	mov	r5, fp
   12064:	b	11fe8 <putchar_unlocked@plt+0x12b8>
   12068:	mov	r3, #116	; 0x74
   1206c:	b	11be8 <putchar_unlocked@plt+0xeb8>
   12070:	mov	r3, #110	; 0x6e
   12074:	b	11be8 <putchar_unlocked@plt+0xeb8>
   12078:	mov	r3, #97	; 0x61
   1207c:	ldr	r2, [sp, #24]
   12080:	cmp	r2, #0
   12084:	beq	11fc8 <putchar_unlocked@plt+0x1298>
   12088:	mov	r6, r3
   1208c:	mov	r5, #0
   12090:	b	11df0 <putchar_unlocked@plt+0x10c0>
   12094:	mov	r3, #98	; 0x62
   12098:	b	1207c <putchar_unlocked@plt+0x134c>
   1209c:	mov	r3, #118	; 0x76
   120a0:	b	1207c <putchar_unlocked@plt+0x134c>
   120a4:	mov	r3, #102	; 0x66
   120a8:	b	1207c <putchar_unlocked@plt+0x134c>
   120ac:	ldr	r3, [sp, #40]	; 0x28
   120b0:	cmn	r3, #1
   120b4:	bne	120d4 <putchar_unlocked@plt+0x13a4>
   120b8:	ldr	r3, [sp, #48]	; 0x30
   120bc:	ldrb	r3, [r3, #1]
   120c0:	adds	r3, r3, #0
   120c4:	movne	r3, #1
   120c8:	cmp	r3, #0
   120cc:	bne	11fc8 <putchar_unlocked@plt+0x1298>
   120d0:	b	11eb4 <putchar_unlocked@plt+0x1184>
   120d4:	ldr	r3, [sp, #40]	; 0x28
   120d8:	subs	r3, r3, #1
   120dc:	b	120c4 <putchar_unlocked@plt+0x1394>
   120e0:	mov	r3, #0
   120e4:	mov	r2, #0
   120e8:	strd	r2, [sp, #96]	; 0x60
   120ec:	ldr	r3, [sp, #40]	; 0x28
   120f0:	cmn	r3, #1
   120f4:	bne	12104 <putchar_unlocked@plt+0x13d4>
   120f8:	ldr	r0, [sp, #48]	; 0x30
   120fc:	bl	10c70 <strlen@plt>
   12100:	str	r0, [sp, #40]	; 0x28
   12104:	ldr	r5, [sp, #36]	; 0x24
   12108:	mov	r3, #0
   1210c:	str	r3, [sp, #56]	; 0x38
   12110:	ldr	r3, [sp, #28]
   12114:	add	r0, sp, #92	; 0x5c
   12118:	ldr	r1, [sp, #40]	; 0x28
   1211c:	ldr	r2, [sp, #56]	; 0x38
   12120:	add	r2, r3, r2
   12124:	ldr	r3, [sp, #48]	; 0x30
   12128:	add	fp, r3, r2
   1212c:	sub	r2, r1, r2
   12130:	add	r3, sp, #96	; 0x60
   12134:	mov	r1, fp
   12138:	bl	1370c <putchar_unlocked@plt+0x29dc>
   1213c:	subs	r2, r0, #0
   12140:	beq	12180 <putchar_unlocked@plt+0x1450>
   12144:	cmn	r2, #1
   12148:	beq	12354 <putchar_unlocked@plt+0x1624>
   1214c:	cmn	r2, #2
   12150:	bne	122c4 <putchar_unlocked@plt+0x1594>
   12154:	ldr	r3, [sp, #28]
   12158:	ldr	r2, [sp, #56]	; 0x38
   1215c:	add	r3, r3, r2
   12160:	ldr	r2, [sp, #40]	; 0x28
   12164:	cmp	r2, r3
   12168:	bls	12354 <putchar_unlocked@plt+0x1624>
   1216c:	ldr	r2, [sp, #56]	; 0x38
   12170:	ldr	r3, [sp, #80]	; 0x50
   12174:	ldrb	r5, [r3, r2]
   12178:	cmp	r5, #0
   1217c:	bne	122b4 <putchar_unlocked@plt+0x1584>
   12180:	ldr	r3, [sp, #56]	; 0x38
   12184:	cmp	r3, #1
   12188:	bls	11bac <putchar_unlocked@plt+0xe7c>
   1218c:	ldr	r3, [sp, #28]
   12190:	mov	fp, #0
   12194:	mov	ip, #92	; 0x5c
   12198:	ldr	r2, [sp, #56]	; 0x38
   1219c:	add	r3, r3, r2
   121a0:	ldr	r2, [sp, #24]
   121a4:	str	r3, [sp, #36]	; 0x24
   121a8:	eor	r3, r5, #1
   121ac:	and	r3, r3, r2
   121b0:	mov	r2, #39	; 0x27
   121b4:	uxtb	r3, r3
   121b8:	cmp	r3, #0
   121bc:	beq	1235c <putchar_unlocked@plt+0x162c>
   121c0:	sub	r0, sl, #2
   121c4:	cmp	r7, #0
   121c8:	clz	r0, r0
   121cc:	lsr	r0, r0, #5
   121d0:	bne	11ad0 <putchar_unlocked@plt+0xda0>
   121d4:	ldr	r1, [sp, #52]	; 0x34
   121d8:	eor	r1, r1, #1
   121dc:	ands	r1, r0, r1
   121e0:	beq	12210 <putchar_unlocked@plt+0x14e0>
   121e4:	cmp	r9, r4
   121e8:	add	r0, r4, #1
   121ec:	str	r1, [sp, #52]	; 0x34
   121f0:	strbhi	r2, [r8, r4]
   121f4:	cmp	r9, r0
   121f8:	movhi	lr, #36	; 0x24
   121fc:	strbhi	lr, [r8, r0]
   12200:	add	r0, r4, #2
   12204:	add	r4, r4, #3
   12208:	cmp	r9, r0
   1220c:	strbhi	r2, [r8, r0]
   12210:	cmp	r9, r4
   12214:	add	r0, r4, #1
   12218:	mov	fp, r3
   1221c:	strbhi	ip, [r8, r4]
   12220:	cmp	r9, r0
   12224:	lsrhi	r1, r6, #6
   12228:	addhi	r1, r1, #48	; 0x30
   1222c:	strbhi	r1, [r8, r0]
   12230:	add	r0, r4, #2
   12234:	add	r4, r4, #3
   12238:	cmp	r9, r0
   1223c:	ubfxhi	r1, r6, #3, #3
   12240:	and	r6, r6, #7
   12244:	add	r6, r6, #48	; 0x30
   12248:	addhi	r1, r1, #48	; 0x30
   1224c:	strbhi	r1, [r8, r0]
   12250:	eor	r0, fp, #1
   12254:	ldr	r1, [sp, #28]
   12258:	ldr	lr, [sp, #52]	; 0x34
   1225c:	add	r1, r1, #1
   12260:	and	r0, r0, lr
   12264:	ldr	lr, [sp, #36]	; 0x24
   12268:	cmp	r1, lr
   1226c:	bcs	11fe8 <putchar_unlocked@plt+0x12b8>
   12270:	cmp	r0, #0
   12274:	beq	12298 <putchar_unlocked@plt+0x1568>
   12278:	cmp	r9, r4
   1227c:	add	r0, r4, #1
   12280:	strbhi	r2, [r8, r4]
   12284:	cmp	r9, r0
   12288:	add	r4, r4, #2
   1228c:	strbhi	r2, [r8, r0]
   12290:	mov	r0, #0
   12294:	str	r0, [sp, #52]	; 0x34
   12298:	ldr	r0, [sp, #48]	; 0x30
   1229c:	cmp	r9, r4
   122a0:	str	r1, [sp, #28]
   122a4:	strbhi	r6, [r8, r4]
   122a8:	add	r4, r4, #1
   122ac:	ldrb	r6, [r0, r1]
   122b0:	b	121b8 <putchar_unlocked@plt+0x1488>
   122b4:	ldr	r3, [sp, #56]	; 0x38
   122b8:	add	r3, r3, #1
   122bc:	str	r3, [sp, #56]	; 0x38
   122c0:	b	12154 <putchar_unlocked@plt+0x1424>
   122c4:	cmp	sl, #2
   122c8:	movne	r3, #0
   122cc:	andeq	r3, r7, #1
   122d0:	cmp	r3, #0
   122d4:	movne	r1, #1
   122d8:	bne	12334 <putchar_unlocked@plt+0x1604>
   122dc:	ldr	r0, [sp, #92]	; 0x5c
   122e0:	str	r2, [sp, #84]	; 0x54
   122e4:	bl	10bc8 <iswprint@plt>
   122e8:	ldr	r3, [sp, #56]	; 0x38
   122ec:	cmp	r0, #0
   122f0:	add	r0, sp, #96	; 0x60
   122f4:	moveq	r5, #0
   122f8:	ldr	r2, [sp, #84]	; 0x54
   122fc:	add	r3, r3, r2
   12300:	str	r3, [sp, #56]	; 0x38
   12304:	bl	10b80 <mbsinit@plt>
   12308:	cmp	r0, #0
   1230c:	beq	12110 <putchar_unlocked@plt+0x13e0>
   12310:	b	12180 <putchar_unlocked@plt+0x1450>
   12314:	ldrb	r3, [fp, #1]!
   12318:	cmp	r3, #94	; 0x5e
   1231c:	beq	11bfc <putchar_unlocked@plt+0xecc>
   12320:	bhi	12340 <putchar_unlocked@plt+0x1610>
   12324:	sub	r3, r3, #91	; 0x5b
   12328:	cmp	r3, #1
   1232c:	bls	11bfc <putchar_unlocked@plt+0xecc>
   12330:	add	r1, r1, #1
   12334:	cmp	r1, r2
   12338:	bne	12314 <putchar_unlocked@plt+0x15e4>
   1233c:	b	122dc <putchar_unlocked@plt+0x15ac>
   12340:	cmp	r3, #96	; 0x60
   12344:	beq	11bfc <putchar_unlocked@plt+0xecc>
   12348:	cmp	r3, #124	; 0x7c
   1234c:	bne	12330 <putchar_unlocked@plt+0x1600>
   12350:	b	11bfc <putchar_unlocked@plt+0xecc>
   12354:	mov	r5, #0
   12358:	b	12180 <putchar_unlocked@plt+0x1450>
   1235c:	ldr	r1, [sp, #64]	; 0x40
   12360:	cmp	r1, #0
   12364:	beq	12250 <putchar_unlocked@plt+0x1520>
   12368:	cmp	r9, r4
   1236c:	mov	r1, #0
   12370:	strbhi	ip, [r8, r4]
   12374:	add	r4, r4, #1
   12378:	str	r1, [sp, #64]	; 0x40
   1237c:	b	12250 <putchar_unlocked@plt+0x1520>
   12380:	mov	r5, fp
   12384:	ldr	fp, [sp, #24]
   12388:	mov	r6, #48	; 0x30
   1238c:	b	11d9c <putchar_unlocked@plt+0x106c>
   12390:	mov	r5, #0
   12394:	b	11d9c <putchar_unlocked@plt+0x106c>
   12398:	mov	r6, r1
   1239c:	b	11fc8 <putchar_unlocked@plt+0x1298>
   123a0:	mov	r6, r1
   123a4:	b	11fb8 <putchar_unlocked@plt+0x1288>
   123a8:	ldr	r2, [sp, #28]
   123ac:	ldr	r3, [sp, #40]	; 0x28
   123b0:	subs	r3, r3, r2
   123b4:	movne	r3, #1
   123b8:	b	11820 <putchar_unlocked@plt+0xaf0>
   123bc:	ldr	r3, [sp, #60]	; 0x3c
   123c0:	mov	sl, #2
   123c4:	ldr	r7, [sp, #72]	; 0x48
   123c8:	adds	r6, r3, #0
   123cc:	mov	r5, r3
   123d0:	movne	r6, #1
   123d4:	cmp	r9, #0
   123d8:	movne	r6, #0
   123dc:	cmp	r6, #0
   123e0:	bne	117b0 <putchar_unlocked@plt+0xa80>
   123e4:	ldr	r3, [sp, #68]	; 0x44
   123e8:	ldr	r2, [sp, #44]	; 0x2c
   123ec:	cmp	r2, #0
   123f0:	moveq	r3, #0
   123f4:	andne	r3, r3, #1
   123f8:	cmp	r3, #0
   123fc:	movne	r3, r2
   12400:	subne	r3, r3, #1
   12404:	bne	12434 <putchar_unlocked@plt+0x1704>
   12408:	cmp	r9, r4
   1240c:	movhi	r3, #0
   12410:	strbhi	r3, [r8, r4]
   12414:	mov	r0, r4
   12418:	add	sp, sp, #108	; 0x6c
   1241c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12420:	mov	r3, r7
   12424:	b	123e8 <putchar_unlocked@plt+0x16b8>
   12428:	cmp	r9, r4
   1242c:	strbhi	r2, [r8, r4]
   12430:	add	r4, r4, #1
   12434:	ldrb	r2, [r3, #1]!
   12438:	cmp	r2, #0
   1243c:	bne	12428 <putchar_unlocked@plt+0x16f8>
   12440:	b	12408 <putchar_unlocked@plt+0x16d8>
   12444:	strdeq	r3, [r1], -r8
   12448:	andeq	r3, r1, fp, lsl #30
   1244c:	andeq	r3, r1, r9, lsl #30
   12450:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12454:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12458:	sub	sp, sp, #52	; 0x34
   1245c:	mov	r6, r0
   12460:	mov	r5, r3
   12464:	mov	r8, r1
   12468:	mov	r9, r2
   1246c:	bl	10c7c <__errno_location@plt>
   12470:	ldr	r3, [r0]
   12474:	cmn	r6, #-2147483647	; 0x80000001
   12478:	str	r0, [sp, #24]
   1247c:	ldr	r7, [pc, #368]	; 125f4 <putchar_unlocked@plt+0x18c4>
   12480:	str	r3, [sp, #32]
   12484:	movne	r3, #0
   12488:	moveq	r3, #1
   1248c:	orrs	r3, r3, r6, lsr #31
   12490:	ldr	r4, [r7]
   12494:	beq	1249c <putchar_unlocked@plt+0x176c>
   12498:	bl	10d24 <abort@plt>
   1249c:	ldr	r2, [r7, #4]
   124a0:	cmp	r2, r6
   124a4:	bgt	12514 <putchar_unlocked@plt+0x17e4>
   124a8:	add	sl, r7, #8
   124ac:	mov	r3, #8
   124b0:	cmp	r4, sl
   124b4:	add	r1, sp, #44	; 0x2c
   124b8:	str	r2, [sp, #44]	; 0x2c
   124bc:	sub	r2, r6, r2
   124c0:	movne	r0, r4
   124c4:	moveq	r0, #0
   124c8:	add	r2, r2, #1
   124cc:	str	r3, [sp]
   124d0:	mvn	r3, #-2147483648	; 0x80000000
   124d4:	bl	131a8 <putchar_unlocked@plt+0x2478>
   124d8:	cmp	r4, sl
   124dc:	mov	fp, r0
   124e0:	str	r0, [r7]
   124e4:	ldmeq	r4, {r0, r1}
   124e8:	mov	r4, fp
   124ec:	ldr	r2, [sp, #44]	; 0x2c
   124f0:	stmeq	fp, {r0, r1}
   124f4:	mov	r1, #0
   124f8:	ldr	r0, [r7, #4]
   124fc:	sub	r2, r2, r0
   12500:	add	r0, fp, r0, lsl #3
   12504:	lsl	r2, r2, #3
   12508:	bl	10c94 <memset@plt>
   1250c:	ldr	r3, [sp, #44]	; 0x2c
   12510:	str	r3, [r7, #4]
   12514:	ldr	r3, [r5, #4]
   12518:	add	sl, r4, r6, lsl #3
   1251c:	mov	r2, r8
   12520:	ldr	fp, [r4, r6, lsl #3]
   12524:	ldr	r7, [sl, #4]
   12528:	orr	r3, r3, #1
   1252c:	str	r3, [sp, #28]
   12530:	add	r3, r5, #8
   12534:	mov	r1, fp
   12538:	str	r3, [sp, #36]	; 0x24
   1253c:	mov	r0, r7
   12540:	ldr	r3, [r5, #44]	; 0x2c
   12544:	str	r3, [sp, #16]
   12548:	ldr	r3, [r5, #40]	; 0x28
   1254c:	str	r3, [sp, #12]
   12550:	add	r3, r5, #8
   12554:	str	r3, [sp, #8]
   12558:	ldr	r3, [sp, #28]
   1255c:	str	r3, [sp, #4]
   12560:	ldr	r3, [r5]
   12564:	str	r3, [sp]
   12568:	mov	r3, r9
   1256c:	bl	11764 <putchar_unlocked@plt+0xa34>
   12570:	cmp	fp, r0
   12574:	bhi	125dc <putchar_unlocked@plt+0x18ac>
   12578:	ldr	r3, [pc, #120]	; 125f8 <putchar_unlocked@plt+0x18c8>
   1257c:	add	fp, r0, #1
   12580:	str	fp, [r4, r6, lsl #3]
   12584:	cmp	r7, r3
   12588:	beq	12594 <putchar_unlocked@plt+0x1864>
   1258c:	mov	r0, r7
   12590:	bl	1150c <putchar_unlocked@plt+0x7dc>
   12594:	mov	r0, fp
   12598:	bl	13098 <putchar_unlocked@plt+0x2368>
   1259c:	ldr	r3, [r5, #44]	; 0x2c
   125a0:	mov	r2, r8
   125a4:	mov	r1, fp
   125a8:	str	r0, [sl, #4]
   125ac:	mov	r7, r0
   125b0:	str	r3, [sp, #16]
   125b4:	ldr	r3, [r5, #40]	; 0x28
   125b8:	str	r3, [sp, #12]
   125bc:	add	r3, r5, #8
   125c0:	str	r3, [sp, #8]
   125c4:	ldr	r3, [sp, #28]
   125c8:	str	r3, [sp, #4]
   125cc:	ldr	r3, [r5]
   125d0:	str	r3, [sp]
   125d4:	mov	r3, r9
   125d8:	bl	11764 <putchar_unlocked@plt+0xa34>
   125dc:	ldr	r3, [sp, #24]
   125e0:	mov	r0, r7
   125e4:	ldr	r2, [sp, #32]
   125e8:	str	r2, [r3]
   125ec:	add	sp, sp, #52	; 0x34
   125f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125f4:	ldrdeq	r5, [r2], -r0
   125f8:	andeq	r5, r2, ip, lsr r1
   125fc:	push	{r4, r5, r6, lr}
   12600:	mov	r5, r0
   12604:	bl	10c7c <__errno_location@plt>
   12608:	mov	r4, r0
   1260c:	cmp	r5, #0
   12610:	ldr	r0, [pc, #20]	; 1262c <putchar_unlocked@plt+0x18fc>
   12614:	mov	r1, #48	; 0x30
   12618:	movne	r0, r5
   1261c:	ldr	r6, [r4]
   12620:	bl	13298 <putchar_unlocked@plt+0x2568>
   12624:	str	r6, [r4]
   12628:	pop	{r4, r5, r6, pc}
   1262c:	andeq	r5, r2, ip, lsr r2
   12630:	ldr	r3, [pc, #12]	; 12644 <putchar_unlocked@plt+0x1914>
   12634:	cmp	r0, #0
   12638:	moveq	r0, r3
   1263c:	ldr	r0, [r0]
   12640:	bx	lr
   12644:	andeq	r5, r2, ip, lsr r2
   12648:	ldr	r3, [pc, #12]	; 1265c <putchar_unlocked@plt+0x192c>
   1264c:	cmp	r0, #0
   12650:	moveq	r0, r3
   12654:	str	r1, [r0]
   12658:	bx	lr
   1265c:	andeq	r5, r2, ip, lsr r2
   12660:	ldr	r3, [pc, #52]	; 1269c <putchar_unlocked@plt+0x196c>
   12664:	cmp	r0, #0
   12668:	push	{lr}		; (str lr, [sp, #-4]!)
   1266c:	lsr	lr, r1, #5
   12670:	and	r1, r1, #31
   12674:	moveq	r0, r3
   12678:	add	r3, r0, #8
   1267c:	ldr	ip, [r3, lr, lsl #2]
   12680:	lsr	r0, ip, r1
   12684:	eor	r2, r2, r0
   12688:	and	r0, r0, #1
   1268c:	and	r2, r2, #1
   12690:	eor	r1, ip, r2, lsl r1
   12694:	str	r1, [r3, lr, lsl #2]
   12698:	pop	{pc}		; (ldr pc, [sp], #4)
   1269c:	andeq	r5, r2, ip, lsr r2
   126a0:	ldr	r3, [pc, #16]	; 126b8 <putchar_unlocked@plt+0x1988>
   126a4:	cmp	r0, #0
   126a8:	movne	r3, r0
   126ac:	ldr	r0, [r3, #4]
   126b0:	str	r1, [r3, #4]
   126b4:	bx	lr
   126b8:	andeq	r5, r2, ip, lsr r2
   126bc:	ldr	r3, [pc, #44]	; 126f0 <putchar_unlocked@plt+0x19c0>
   126c0:	cmp	r0, #0
   126c4:	moveq	r0, r3
   126c8:	mov	r3, #10
   126cc:	cmp	r2, #0
   126d0:	cmpne	r1, #0
   126d4:	str	r3, [r0]
   126d8:	bne	126e4 <putchar_unlocked@plt+0x19b4>
   126dc:	push	{r4, lr}
   126e0:	bl	10d24 <abort@plt>
   126e4:	str	r1, [r0, #40]	; 0x28
   126e8:	str	r2, [r0, #44]	; 0x2c
   126ec:	bx	lr
   126f0:	andeq	r5, r2, ip, lsr r2
   126f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   126f8:	sub	sp, sp, #24
   126fc:	mov	sl, r3
   12700:	mov	r7, r0
   12704:	mov	r8, r1
   12708:	mov	r9, r2
   1270c:	ldr	r4, [sp, #56]	; 0x38
   12710:	ldr	r3, [pc, #88]	; 12770 <putchar_unlocked@plt+0x1a40>
   12714:	cmp	r4, #0
   12718:	moveq	r4, r3
   1271c:	bl	10c7c <__errno_location@plt>
   12720:	ldr	r3, [r4, #44]	; 0x2c
   12724:	mov	r5, r0
   12728:	mov	r2, r9
   1272c:	mov	r1, r8
   12730:	mov	r0, r7
   12734:	ldr	r6, [r5]
   12738:	str	r3, [sp, #16]
   1273c:	ldr	r3, [r4, #40]	; 0x28
   12740:	str	r3, [sp, #12]
   12744:	add	r3, r4, #8
   12748:	str	r3, [sp, #8]
   1274c:	ldr	r3, [r4, #4]
   12750:	str	r3, [sp, #4]
   12754:	ldr	r3, [r4]
   12758:	str	r3, [sp]
   1275c:	mov	r3, sl
   12760:	bl	11764 <putchar_unlocked@plt+0xa34>
   12764:	str	r6, [r5]
   12768:	add	sp, sp, #24
   1276c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12770:	andeq	r5, r2, ip, lsr r2
   12774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12778:	cmp	r3, #0
   1277c:	sub	sp, sp, #44	; 0x2c
   12780:	mov	r6, r2
   12784:	mov	sl, r1
   12788:	mov	r9, r0
   1278c:	ldr	r4, [pc, #176]	; 12844 <putchar_unlocked@plt+0x1b14>
   12790:	movne	r4, r3
   12794:	bl	10c7c <__errno_location@plt>
   12798:	ldr	r3, [r0]
   1279c:	mov	r1, #0
   127a0:	mov	r2, r9
   127a4:	mov	r8, r0
   127a8:	mov	r0, r1
   127ac:	ldr	r5, [r4, #4]
   127b0:	add	fp, r4, #8
   127b4:	str	r3, [sp, #28]
   127b8:	ldr	r3, [r4, #44]	; 0x2c
   127bc:	cmp	r6, #0
   127c0:	orreq	r5, r5, #1
   127c4:	str	r3, [sp, #16]
   127c8:	ldr	r3, [r4, #40]	; 0x28
   127cc:	stmib	sp, {r5, fp}
   127d0:	str	r3, [sp, #12]
   127d4:	ldr	r3, [r4]
   127d8:	str	r3, [sp]
   127dc:	mov	r3, sl
   127e0:	bl	11764 <putchar_unlocked@plt+0xa34>
   127e4:	add	r1, r0, #1
   127e8:	mov	r7, r0
   127ec:	mov	r0, r1
   127f0:	str	r1, [sp, #36]	; 0x24
   127f4:	bl	13098 <putchar_unlocked@plt+0x2368>
   127f8:	ldr	r3, [r4, #44]	; 0x2c
   127fc:	mov	r2, r9
   12800:	ldr	r1, [sp, #36]	; 0x24
   12804:	str	r3, [sp, #16]
   12808:	ldr	r3, [r4, #40]	; 0x28
   1280c:	stmib	sp, {r5, fp}
   12810:	str	r0, [sp, #32]
   12814:	str	r3, [sp, #12]
   12818:	ldr	r3, [r4]
   1281c:	str	r3, [sp]
   12820:	mov	r3, sl
   12824:	bl	11764 <putchar_unlocked@plt+0xa34>
   12828:	ldr	r3, [sp, #28]
   1282c:	cmp	r6, #0
   12830:	ldr	r0, [sp, #32]
   12834:	str	r3, [r8]
   12838:	strne	r7, [r6]
   1283c:	add	sp, sp, #44	; 0x2c
   12840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12844:	andeq	r5, r2, ip, lsr r2
   12848:	mov	r3, r2
   1284c:	mov	r2, #0
   12850:	b	12774 <putchar_unlocked@plt+0x1a44>
   12854:	push	{r4, r5, r6, r7, r8, lr}
   12858:	mov	r6, #1
   1285c:	ldr	r4, [pc, #100]	; 128c8 <putchar_unlocked@plt+0x1b98>
   12860:	ldr	r5, [r4]
   12864:	add	r7, r5, #4
   12868:	ldr	r3, [r4, #4]
   1286c:	cmp	r3, r6
   12870:	bgt	128b8 <putchar_unlocked@plt+0x1b88>
   12874:	ldr	r6, [pc, #80]	; 128cc <putchar_unlocked@plt+0x1b9c>
   12878:	ldr	r0, [r5, #4]
   1287c:	cmp	r0, r6
   12880:	beq	12894 <putchar_unlocked@plt+0x1b64>
   12884:	bl	1150c <putchar_unlocked@plt+0x7dc>
   12888:	mov	r3, #256	; 0x100
   1288c:	str	r3, [r4, #8]
   12890:	str	r6, [r4, #12]
   12894:	ldr	r6, [pc, #52]	; 128d0 <putchar_unlocked@plt+0x1ba0>
   12898:	cmp	r5, r6
   1289c:	beq	128ac <putchar_unlocked@plt+0x1b7c>
   128a0:	mov	r0, r5
   128a4:	bl	1150c <putchar_unlocked@plt+0x7dc>
   128a8:	str	r6, [r4]
   128ac:	mov	r3, #1
   128b0:	str	r3, [r4, #4]
   128b4:	pop	{r4, r5, r6, r7, r8, pc}
   128b8:	ldr	r0, [r7, r6, lsl #3]
   128bc:	add	r6, r6, #1
   128c0:	bl	1150c <putchar_unlocked@plt+0x7dc>
   128c4:	b	12868 <putchar_unlocked@plt+0x1b38>
   128c8:	ldrdeq	r5, [r2], -r0
   128cc:	andeq	r5, r2, ip, lsr r1
   128d0:	ldrdeq	r5, [r2], -r8
   128d4:	ldr	r3, [pc, #4]	; 128e0 <putchar_unlocked@plt+0x1bb0>
   128d8:	mvn	r2, #0
   128dc:	b	12454 <putchar_unlocked@plt+0x1724>
   128e0:	andeq	r5, r2, ip, lsr r2
   128e4:	ldr	r3, [pc]	; 128ec <putchar_unlocked@plt+0x1bbc>
   128e8:	b	12454 <putchar_unlocked@plt+0x1724>
   128ec:	andeq	r5, r2, ip, lsr r2
   128f0:	mov	r1, r0
   128f4:	mov	r0, #0
   128f8:	b	128d4 <putchar_unlocked@plt+0x1ba4>
   128fc:	mov	r2, r1
   12900:	mov	r1, r0
   12904:	mov	r0, #0
   12908:	b	128e4 <putchar_unlocked@plt+0x1bb4>
   1290c:	push	{r4, r5, lr}
   12910:	sub	sp, sp, #52	; 0x34
   12914:	mov	r5, r2
   12918:	mov	r4, r0
   1291c:	mov	r0, sp
   12920:	bl	11608 <putchar_unlocked@plt+0x8d8>
   12924:	mov	r3, sp
   12928:	mvn	r2, #0
   1292c:	mov	r1, r5
   12930:	mov	r0, r4
   12934:	bl	12454 <putchar_unlocked@plt+0x1724>
   12938:	add	sp, sp, #52	; 0x34
   1293c:	pop	{r4, r5, pc}
   12940:	push	{r4, r5, r6, lr}
   12944:	sub	sp, sp, #48	; 0x30
   12948:	mov	r5, r2
   1294c:	mov	r6, r3
   12950:	mov	r4, r0
   12954:	mov	r0, sp
   12958:	bl	11608 <putchar_unlocked@plt+0x8d8>
   1295c:	mov	r3, sp
   12960:	mov	r2, r6
   12964:	mov	r1, r5
   12968:	mov	r0, r4
   1296c:	bl	12454 <putchar_unlocked@plt+0x1724>
   12970:	add	sp, sp, #48	; 0x30
   12974:	pop	{r4, r5, r6, pc}
   12978:	mov	r2, r1
   1297c:	mov	r1, r0
   12980:	mov	r0, #0
   12984:	b	1290c <putchar_unlocked@plt+0x1bdc>
   12988:	mov	r3, r2
   1298c:	mov	r2, r1
   12990:	mov	r1, r0
   12994:	mov	r0, #0
   12998:	b	12940 <putchar_unlocked@plt+0x1c10>
   1299c:	push	{r4, r5, r6, lr}
   129a0:	mov	r4, r0
   129a4:	mov	r5, r1
   129a8:	mov	r6, r2
   129ac:	sub	sp, sp, #48	; 0x30
   129b0:	mov	ip, sp
   129b4:	ldr	lr, [pc, #64]	; 129fc <putchar_unlocked@plt+0x1ccc>
   129b8:	ldm	lr!, {r0, r1, r2, r3}
   129bc:	stmia	ip!, {r0, r1, r2, r3}
   129c0:	ldm	lr!, {r0, r1, r2, r3}
   129c4:	stmia	ip!, {r0, r1, r2, r3}
   129c8:	ldm	lr, {r0, r1, r2, r3}
   129cc:	stm	ip, {r0, r1, r2, r3}
   129d0:	mov	r1, r6
   129d4:	mov	r2, #1
   129d8:	mov	r0, sp
   129dc:	bl	12660 <putchar_unlocked@plt+0x1930>
   129e0:	mov	r3, sp
   129e4:	mov	r2, r5
   129e8:	mov	r1, r4
   129ec:	mov	r0, #0
   129f0:	bl	12454 <putchar_unlocked@plt+0x1724>
   129f4:	add	sp, sp, #48	; 0x30
   129f8:	pop	{r4, r5, r6, pc}
   129fc:	andeq	r5, r2, ip, lsr r2
   12a00:	mov	r2, r1
   12a04:	mvn	r1, #0
   12a08:	b	1299c <putchar_unlocked@plt+0x1c6c>
   12a0c:	mov	r1, #58	; 0x3a
   12a10:	b	12a00 <putchar_unlocked@plt+0x1cd0>
   12a14:	mov	r2, #58	; 0x3a
   12a18:	b	1299c <putchar_unlocked@plt+0x1c6c>
   12a1c:	push	{r4, r5, lr}
   12a20:	sub	sp, sp, #100	; 0x64
   12a24:	mov	r4, r0
   12a28:	mov	r0, sp
   12a2c:	mov	r5, r2
   12a30:	bl	11608 <putchar_unlocked@plt+0x8d8>
   12a34:	mov	ip, sp
   12a38:	add	lr, sp, #48	; 0x30
   12a3c:	ldm	ip!, {r0, r1, r2, r3}
   12a40:	stmia	lr!, {r0, r1, r2, r3}
   12a44:	ldm	ip!, {r0, r1, r2, r3}
   12a48:	stmia	lr!, {r0, r1, r2, r3}
   12a4c:	ldm	ip, {r0, r1, r2, r3}
   12a50:	stm	lr, {r0, r1, r2, r3}
   12a54:	mov	r2, #1
   12a58:	mov	r1, #58	; 0x3a
   12a5c:	add	r0, sp, #48	; 0x30
   12a60:	bl	12660 <putchar_unlocked@plt+0x1930>
   12a64:	add	r3, sp, #48	; 0x30
   12a68:	mvn	r2, #0
   12a6c:	mov	r1, r5
   12a70:	mov	r0, r4
   12a74:	bl	12454 <putchar_unlocked@plt+0x1724>
   12a78:	add	sp, sp, #100	; 0x64
   12a7c:	pop	{r4, r5, pc}
   12a80:	push	{r4, r5, r6, r7, lr}
   12a84:	mov	r4, r0
   12a88:	mov	r6, r1
   12a8c:	mov	r7, r2
   12a90:	mov	r5, r3
   12a94:	sub	sp, sp, #52	; 0x34
   12a98:	ldr	lr, [pc, #68]	; 12ae4 <putchar_unlocked@plt+0x1db4>
   12a9c:	mov	ip, sp
   12aa0:	ldm	lr!, {r0, r1, r2, r3}
   12aa4:	stmia	ip!, {r0, r1, r2, r3}
   12aa8:	ldm	lr!, {r0, r1, r2, r3}
   12aac:	stmia	ip!, {r0, r1, r2, r3}
   12ab0:	ldm	lr, {r0, r1, r2, r3}
   12ab4:	stm	ip, {r0, r1, r2, r3}
   12ab8:	mov	r2, r7
   12abc:	mov	r1, r6
   12ac0:	mov	r0, sp
   12ac4:	bl	126bc <putchar_unlocked@plt+0x198c>
   12ac8:	ldr	r2, [sp, #72]	; 0x48
   12acc:	mov	r3, sp
   12ad0:	mov	r1, r5
   12ad4:	mov	r0, r4
   12ad8:	bl	12454 <putchar_unlocked@plt+0x1724>
   12adc:	add	sp, sp, #52	; 0x34
   12ae0:	pop	{r4, r5, r6, r7, pc}
   12ae4:	andeq	r5, r2, ip, lsr r2
   12ae8:	mvn	ip, #0
   12aec:	push	{r0, r1, r2, lr}
   12af0:	str	ip, [sp]
   12af4:	bl	12a80 <putchar_unlocked@plt+0x1d50>
   12af8:	add	sp, sp, #12
   12afc:	pop	{pc}		; (ldr pc, [sp], #4)
   12b00:	mov	r3, r2
   12b04:	mov	r2, r1
   12b08:	mov	r1, r0
   12b0c:	mov	r0, #0
   12b10:	b	12ae8 <putchar_unlocked@plt+0x1db8>
   12b14:	push	{r0, r1, r2, lr}
   12b18:	str	r3, [sp]
   12b1c:	mov	r3, r2
   12b20:	mov	r2, r1
   12b24:	mov	r1, r0
   12b28:	mov	r0, #0
   12b2c:	bl	12a80 <putchar_unlocked@plt+0x1d50>
   12b30:	add	sp, sp, #12
   12b34:	pop	{pc}		; (ldr pc, [sp], #4)
   12b38:	ldr	r3, [pc]	; 12b40 <putchar_unlocked@plt+0x1e10>
   12b3c:	b	12454 <putchar_unlocked@plt+0x1724>
   12b40:	andeq	r5, r2, r0, ror #1
   12b44:	mov	r2, r1
   12b48:	mov	r1, r0
   12b4c:	mov	r0, #0
   12b50:	b	12b38 <putchar_unlocked@plt+0x1e08>
   12b54:	mvn	r2, #0
   12b58:	b	12b38 <putchar_unlocked@plt+0x1e08>
   12b5c:	mov	r1, r0
   12b60:	mov	r0, #0
   12b64:	b	12b54 <putchar_unlocked@plt+0x1e24>
   12b68:	push	{r4, r5, r6, lr}
   12b6c:	cmp	r1, #0
   12b70:	sub	sp, sp, #32
   12b74:	mov	r5, r0
   12b78:	ldr	r4, [sp, #48]	; 0x30
   12b7c:	ldr	r6, [sp, #52]	; 0x34
   12b80:	beq	12c34 <putchar_unlocked@plt+0x1f04>
   12b84:	strd	r2, [sp]
   12b88:	mov	r3, r1
   12b8c:	mov	r1, #1
   12b90:	ldr	r2, [pc, #856]	; 12ef0 <putchar_unlocked@plt+0x21c0>
   12b94:	bl	10cb8 <__fprintf_chk@plt>
   12b98:	mov	r2, #5
   12b9c:	ldr	r1, [pc, #848]	; 12ef4 <putchar_unlocked@plt+0x21c4>
   12ba0:	mov	r0, #0
   12ba4:	bl	10ba4 <dcgettext@plt>
   12ba8:	movw	r3, #2022	; 0x7e6
   12bac:	ldr	r2, [pc, #836]	; 12ef8 <putchar_unlocked@plt+0x21c8>
   12bb0:	mov	r1, #1
   12bb4:	str	r3, [sp]
   12bb8:	mov	r3, r0
   12bbc:	mov	r0, r5
   12bc0:	bl	10cb8 <__fprintf_chk@plt>
   12bc4:	mov	r1, r5
   12bc8:	mov	r0, #10
   12bcc:	bl	10b98 <fputc_unlocked@plt>
   12bd0:	mov	r2, #5
   12bd4:	ldr	r1, [pc, #800]	; 12efc <putchar_unlocked@plt+0x21cc>
   12bd8:	mov	r0, #0
   12bdc:	bl	10ba4 <dcgettext@plt>
   12be0:	mov	r2, r0
   12be4:	mov	r1, #1
   12be8:	ldr	r3, [pc, #784]	; 12f00 <putchar_unlocked@plt+0x21d0>
   12bec:	mov	r0, r5
   12bf0:	bl	10cb8 <__fprintf_chk@plt>
   12bf4:	mov	r1, r5
   12bf8:	mov	r0, #10
   12bfc:	bl	10b98 <fputc_unlocked@plt>
   12c00:	cmp	r6, #9
   12c04:	ldrls	pc, [pc, r6, lsl #2]
   12c08:	b	12ee4 <putchar_unlocked@plt+0x21b4>
   12c0c:	andeq	r2, r1, r4, lsr #26
   12c10:	andeq	r2, r1, ip, asr #24
   12c14:	andeq	r2, r1, r8, ror ip
   12c18:	andeq	r2, r1, ip, lsr #25
   12c1c:	andeq	r2, r1, r8, ror #25
   12c20:	andeq	r2, r1, ip, lsr #26
   12c24:	andeq	r2, r1, r4, ror sp
   12c28:	andeq	r2, r1, r4, asr #27
   12c2c:	andeq	r2, r1, ip, lsl lr
   12c30:	andeq	r2, r1, ip, ror lr
   12c34:	mov	r1, #1
   12c38:	str	r3, [sp]
   12c3c:	mov	r3, r2
   12c40:	ldr	r2, [pc, #700]	; 12f04 <putchar_unlocked@plt+0x21d4>
   12c44:	bl	10cb8 <__fprintf_chk@plt>
   12c48:	b	12b98 <putchar_unlocked@plt+0x1e68>
   12c4c:	mov	r2, #5
   12c50:	ldr	r1, [pc, #688]	; 12f08 <putchar_unlocked@plt+0x21d8>
   12c54:	mov	r0, #0
   12c58:	bl	10ba4 <dcgettext@plt>
   12c5c:	ldr	r3, [r4]
   12c60:	mov	r2, r0
   12c64:	mov	r1, #1
   12c68:	mov	r0, r5
   12c6c:	add	sp, sp, #32
   12c70:	pop	{r4, r5, r6, lr}
   12c74:	b	10cb8 <__fprintf_chk@plt>
   12c78:	mov	r2, #5
   12c7c:	ldr	r1, [pc, #648]	; 12f0c <putchar_unlocked@plt+0x21dc>
   12c80:	mov	r0, #0
   12c84:	bl	10ba4 <dcgettext@plt>
   12c88:	ldr	r3, [r4, #4]
   12c8c:	mov	r2, r0
   12c90:	mov	r1, #1
   12c94:	mov	r0, r5
   12c98:	str	r3, [sp, #48]	; 0x30
   12c9c:	ldr	r3, [r4]
   12ca0:	add	sp, sp, #32
   12ca4:	pop	{r4, r5, r6, lr}
   12ca8:	b	10cb8 <__fprintf_chk@plt>
   12cac:	mov	r2, #5
   12cb0:	ldr	r1, [pc, #600]	; 12f10 <putchar_unlocked@plt+0x21e0>
   12cb4:	mov	r0, #0
   12cb8:	bl	10ba4 <dcgettext@plt>
   12cbc:	ldr	r3, [r4, #8]
   12cc0:	mov	r2, r0
   12cc4:	mov	r1, #1
   12cc8:	mov	r0, r5
   12ccc:	str	r3, [sp, #52]	; 0x34
   12cd0:	ldr	r3, [r4, #4]
   12cd4:	str	r3, [sp, #48]	; 0x30
   12cd8:	ldr	r3, [r4]
   12cdc:	add	sp, sp, #32
   12ce0:	pop	{r4, r5, r6, lr}
   12ce4:	b	10cb8 <__fprintf_chk@plt>
   12ce8:	mov	r2, #5
   12cec:	ldr	r1, [pc, #544]	; 12f14 <putchar_unlocked@plt+0x21e4>
   12cf0:	mov	r0, #0
   12cf4:	bl	10ba4 <dcgettext@plt>
   12cf8:	ldr	r3, [r4, #12]
   12cfc:	mov	r2, r0
   12d00:	mov	r1, #1
   12d04:	mov	r0, r5
   12d08:	str	r3, [sp, #8]
   12d0c:	ldr	r3, [r4, #8]
   12d10:	str	r3, [sp, #4]
   12d14:	ldr	r3, [r4, #4]
   12d18:	str	r3, [sp]
   12d1c:	ldr	r3, [r4]
   12d20:	bl	10cb8 <__fprintf_chk@plt>
   12d24:	add	sp, sp, #32
   12d28:	pop	{r4, r5, r6, pc}
   12d2c:	mov	r2, #5
   12d30:	ldr	r1, [pc, #480]	; 12f18 <putchar_unlocked@plt+0x21e8>
   12d34:	mov	r0, #0
   12d38:	bl	10ba4 <dcgettext@plt>
   12d3c:	ldr	r3, [r4, #16]
   12d40:	mov	r2, r0
   12d44:	mov	r1, #1
   12d48:	mov	r0, r5
   12d4c:	str	r3, [sp, #12]
   12d50:	ldr	r3, [r4, #12]
   12d54:	str	r3, [sp, #8]
   12d58:	ldr	r3, [r4, #8]
   12d5c:	str	r3, [sp, #4]
   12d60:	ldr	r3, [r4, #4]
   12d64:	str	r3, [sp]
   12d68:	ldr	r3, [r4]
   12d6c:	bl	10cb8 <__fprintf_chk@plt>
   12d70:	b	12d24 <putchar_unlocked@plt+0x1ff4>
   12d74:	mov	r2, #5
   12d78:	ldr	r1, [pc, #412]	; 12f1c <putchar_unlocked@plt+0x21ec>
   12d7c:	mov	r0, #0
   12d80:	bl	10ba4 <dcgettext@plt>
   12d84:	ldr	r3, [r4, #20]
   12d88:	mov	r2, r0
   12d8c:	mov	r1, #1
   12d90:	mov	r0, r5
   12d94:	str	r3, [sp, #16]
   12d98:	ldr	r3, [r4, #16]
   12d9c:	str	r3, [sp, #12]
   12da0:	ldr	r3, [r4, #12]
   12da4:	str	r3, [sp, #8]
   12da8:	ldr	r3, [r4, #8]
   12dac:	str	r3, [sp, #4]
   12db0:	ldr	r3, [r4, #4]
   12db4:	str	r3, [sp]
   12db8:	ldr	r3, [r4]
   12dbc:	bl	10cb8 <__fprintf_chk@plt>
   12dc0:	b	12d24 <putchar_unlocked@plt+0x1ff4>
   12dc4:	mov	r2, #5
   12dc8:	ldr	r1, [pc, #336]	; 12f20 <putchar_unlocked@plt+0x21f0>
   12dcc:	mov	r0, #0
   12dd0:	bl	10ba4 <dcgettext@plt>
   12dd4:	ldr	r3, [r4, #24]
   12dd8:	mov	r2, r0
   12ddc:	mov	r1, #1
   12de0:	mov	r0, r5
   12de4:	str	r3, [sp, #20]
   12de8:	ldr	r3, [r4, #20]
   12dec:	str	r3, [sp, #16]
   12df0:	ldr	r3, [r4, #16]
   12df4:	str	r3, [sp, #12]
   12df8:	ldr	r3, [r4, #12]
   12dfc:	str	r3, [sp, #8]
   12e00:	ldr	r3, [r4, #8]
   12e04:	str	r3, [sp, #4]
   12e08:	ldr	r3, [r4, #4]
   12e0c:	str	r3, [sp]
   12e10:	ldr	r3, [r4]
   12e14:	bl	10cb8 <__fprintf_chk@plt>
   12e18:	b	12d24 <putchar_unlocked@plt+0x1ff4>
   12e1c:	mov	r2, #5
   12e20:	ldr	r1, [pc, #252]	; 12f24 <putchar_unlocked@plt+0x21f4>
   12e24:	mov	r0, #0
   12e28:	bl	10ba4 <dcgettext@plt>
   12e2c:	ldr	r3, [r4, #28]
   12e30:	mov	r2, r0
   12e34:	mov	r1, #1
   12e38:	mov	r0, r5
   12e3c:	str	r3, [sp, #24]
   12e40:	ldr	r3, [r4, #24]
   12e44:	str	r3, [sp, #20]
   12e48:	ldr	r3, [r4, #20]
   12e4c:	str	r3, [sp, #16]
   12e50:	ldr	r3, [r4, #16]
   12e54:	str	r3, [sp, #12]
   12e58:	ldr	r3, [r4, #12]
   12e5c:	str	r3, [sp, #8]
   12e60:	ldr	r3, [r4, #8]
   12e64:	str	r3, [sp, #4]
   12e68:	ldr	r3, [r4, #4]
   12e6c:	str	r3, [sp]
   12e70:	ldr	r3, [r4]
   12e74:	bl	10cb8 <__fprintf_chk@plt>
   12e78:	b	12d24 <putchar_unlocked@plt+0x1ff4>
   12e7c:	ldr	r1, [pc, #164]	; 12f28 <putchar_unlocked@plt+0x21f8>
   12e80:	mov	r2, #5
   12e84:	mov	r0, #0
   12e88:	bl	10ba4 <dcgettext@plt>
   12e8c:	ldr	r3, [r4, #32]
   12e90:	mov	r2, r0
   12e94:	mov	r1, #1
   12e98:	mov	r0, r5
   12e9c:	str	r3, [sp, #28]
   12ea0:	ldr	r3, [r4, #28]
   12ea4:	str	r3, [sp, #24]
   12ea8:	ldr	r3, [r4, #24]
   12eac:	str	r3, [sp, #20]
   12eb0:	ldr	r3, [r4, #20]
   12eb4:	str	r3, [sp, #16]
   12eb8:	ldr	r3, [r4, #16]
   12ebc:	str	r3, [sp, #12]
   12ec0:	ldr	r3, [r4, #12]
   12ec4:	str	r3, [sp, #8]
   12ec8:	ldr	r3, [r4, #8]
   12ecc:	str	r3, [sp, #4]
   12ed0:	ldr	r3, [r4, #4]
   12ed4:	str	r3, [sp]
   12ed8:	ldr	r3, [r4]
   12edc:	bl	10cb8 <__fprintf_chk@plt>
   12ee0:	b	12d24 <putchar_unlocked@plt+0x1ff4>
   12ee4:	mov	r2, #5
   12ee8:	ldr	r1, [pc, #60]	; 12f2c <putchar_unlocked@plt+0x21fc>
   12eec:	b	12e84 <putchar_unlocked@plt+0x2154>
   12ef0:	andeq	r3, r1, fp, asr pc
   12ef4:	andeq	r3, r1, lr, ror #30
   12ef8:	andeq	r4, r1, ip, lsr r2
   12efc:	andeq	r3, r1, r2, ror pc
   12f00:	andeq	r4, r1, sp, lsl r0
   12f04:	andeq	r3, r1, r7, ror #30
   12f08:	andeq	r4, r1, pc, lsr r0
   12f0c:	andeq	r4, r1, pc, asr #32
   12f10:	andeq	r4, r1, r6, rrx
   12f14:	andeq	r4, r1, r2, lsl #1
   12f18:	andeq	r4, r1, r2, lsr #1
   12f1c:	andeq	r4, r1, r6, asr #1
   12f20:	andeq	r4, r1, lr, ror #1
   12f24:	andeq	r4, r1, sl, lsl r1
   12f28:	andeq	r4, r1, sl, asr #2
   12f2c:	andeq	r4, r1, lr, ror r1
   12f30:	push	{r0, r1, r4, lr}
   12f34:	mov	ip, #0
   12f38:	ldr	lr, [sp, #16]
   12f3c:	ldr	r4, [lr, ip, lsl #2]
   12f40:	cmp	r4, #0
   12f44:	bne	12f5c <putchar_unlocked@plt+0x222c>
   12f48:	str	lr, [sp]
   12f4c:	str	ip, [sp, #4]
   12f50:	bl	12b68 <putchar_unlocked@plt+0x1e38>
   12f54:	add	sp, sp, #8
   12f58:	pop	{r4, pc}
   12f5c:	add	ip, ip, #1
   12f60:	b	12f3c <putchar_unlocked@plt+0x220c>
   12f64:	push	{r4, r5, r6, lr}
   12f68:	sub	sp, sp, #48	; 0x30
   12f6c:	mov	ip, #0
   12f70:	add	lr, sp, #8
   12f74:	mov	r5, lr
   12f78:	ldr	r6, [sp, #64]	; 0x40
   12f7c:	ldr	r4, [r6, ip, lsl #2]
   12f80:	cmp	r4, #0
   12f84:	str	r4, [lr], #4
   12f88:	beq	12f98 <putchar_unlocked@plt+0x2268>
   12f8c:	add	ip, ip, #1
   12f90:	cmp	ip, #10
   12f94:	bne	12f7c <putchar_unlocked@plt+0x224c>
   12f98:	stm	sp, {r5, ip}
   12f9c:	bl	12b68 <putchar_unlocked@plt+0x1e38>
   12fa0:	add	sp, sp, #48	; 0x30
   12fa4:	pop	{r4, r5, r6, pc}
   12fa8:	push	{r3}		; (str r3, [sp, #-4]!)
   12fac:	push	{r0, r1, r2, r3, lr}
   12fb0:	add	r3, sp, #24
   12fb4:	str	r3, [sp]
   12fb8:	str	r3, [sp, #12]
   12fbc:	ldr	r3, [sp, #20]
   12fc0:	bl	12f64 <putchar_unlocked@plt+0x2234>
   12fc4:	add	sp, sp, #16
   12fc8:	pop	{lr}		; (ldr lr, [sp], #4)
   12fcc:	add	sp, sp, #4
   12fd0:	bx	lr
   12fd4:	ldr	r3, [pc, #116]	; 13050 <putchar_unlocked@plt+0x2320>
   12fd8:	mov	r0, #10
   12fdc:	push	{r4, lr}
   12fe0:	ldr	r1, [r3]
   12fe4:	bl	10b98 <fputc_unlocked@plt>
   12fe8:	mov	r2, #5
   12fec:	ldr	r1, [pc, #96]	; 13054 <putchar_unlocked@plt+0x2324>
   12ff0:	mov	r0, #0
   12ff4:	bl	10ba4 <dcgettext@plt>
   12ff8:	mov	r1, r0
   12ffc:	ldr	r2, [pc, #84]	; 13058 <putchar_unlocked@plt+0x2328>
   13000:	mov	r0, #1
   13004:	bl	10ca0 <__printf_chk@plt>
   13008:	mov	r2, #5
   1300c:	ldr	r1, [pc, #72]	; 1305c <putchar_unlocked@plt+0x232c>
   13010:	mov	r0, #0
   13014:	bl	10ba4 <dcgettext@plt>
   13018:	mov	r1, r0
   1301c:	ldr	r3, [pc, #60]	; 13060 <putchar_unlocked@plt+0x2330>
   13020:	mov	r0, #1
   13024:	ldr	r2, [pc, #56]	; 13064 <putchar_unlocked@plt+0x2334>
   13028:	bl	10ca0 <__printf_chk@plt>
   1302c:	mov	r2, #5
   13030:	ldr	r1, [pc, #48]	; 13068 <putchar_unlocked@plt+0x2338>
   13034:	mov	r0, #0
   13038:	bl	10ba4 <dcgettext@plt>
   1303c:	mov	r1, r0
   13040:	ldr	r2, [pc, #36]	; 1306c <putchar_unlocked@plt+0x233c>
   13044:	mov	r0, #1
   13048:	pop	{r4, lr}
   1304c:	b	10ca0 <__printf_chk@plt>
   13050:	andeq	r5, r2, r4, lsr #2
   13054:			; <UNDEFINED> instruction: 0x000141ba
   13058:	andeq	r4, r1, lr, asr #3
   1305c:	andeq	r4, r1, r4, ror #3
   13060:	muleq	r1, sp, ip
   13064:	andeq	r3, r1, r5, asr #25
   13068:	strdeq	r4, [r1], -r8
   1306c:	andeq	r4, r1, pc, lsl r2
   13070:	push	{r4, lr}
   13074:	bl	133bc <putchar_unlocked@plt+0x268c>
   13078:	cmp	r0, #0
   1307c:	popne	{r4, pc}
   13080:	bl	13328 <putchar_unlocked@plt+0x25f8>
   13084:	push	{r4, lr}
   13088:	bl	133bc <putchar_unlocked@plt+0x268c>
   1308c:	cmp	r0, #0
   13090:	popne	{r4, pc}
   13094:	bl	13328 <putchar_unlocked@plt+0x25f8>
   13098:	b	13070 <putchar_unlocked@plt+0x2340>
   1309c:	push	{r4, r5, r6, lr}
   130a0:	mov	r5, r0
   130a4:	mov	r4, r1
   130a8:	bl	133e8 <putchar_unlocked@plt+0x26b8>
   130ac:	cmp	r0, #0
   130b0:	popne	{r4, r5, r6, pc}
   130b4:	adds	r4, r4, #0
   130b8:	movne	r4, #1
   130bc:	cmp	r5, #0
   130c0:	moveq	r4, #1
   130c4:	cmp	r4, #0
   130c8:	popeq	{r4, r5, r6, pc}
   130cc:	bl	13328 <putchar_unlocked@plt+0x25f8>
   130d0:	push	{r4, lr}
   130d4:	bl	136b4 <putchar_unlocked@plt+0x2984>
   130d8:	cmp	r0, #0
   130dc:	popne	{r4, pc}
   130e0:	bl	13328 <putchar_unlocked@plt+0x25f8>
   130e4:	push	{r4, r5, r6, lr}
   130e8:	mov	r6, r0
   130ec:	mov	r5, r1
   130f0:	mov	r4, r2
   130f4:	bl	1375c <putchar_unlocked@plt+0x2a2c>
   130f8:	cmp	r0, #0
   130fc:	popne	{r4, r5, r6, pc}
   13100:	cmp	r6, #0
   13104:	beq	13114 <putchar_unlocked@plt+0x23e4>
   13108:	cmp	r5, #0
   1310c:	cmpne	r4, #0
   13110:	popeq	{r4, r5, r6, pc}
   13114:	bl	13328 <putchar_unlocked@plt+0x25f8>
   13118:	b	130e4 <putchar_unlocked@plt+0x23b4>
   1311c:	push	{r4, lr}
   13120:	bl	136c4 <putchar_unlocked@plt+0x2994>
   13124:	cmp	r0, #0
   13128:	popne	{r4, pc}
   1312c:	bl	13328 <putchar_unlocked@plt+0x25f8>
   13130:	mov	r2, r1
   13134:	mov	r1, r0
   13138:	mov	r0, #0
   1313c:	b	130e4 <putchar_unlocked@plt+0x23b4>
   13140:	mov	r2, r1
   13144:	mov	r1, r0
   13148:	mov	r0, #0
   1314c:	b	1311c <putchar_unlocked@plt+0x23ec>
   13150:	cmp	r0, #0
   13154:	push	{r4, r5, r6, lr}
   13158:	mov	r5, r1
   1315c:	ldr	r4, [r1]
   13160:	bne	1318c <putchar_unlocked@plt+0x245c>
   13164:	cmp	r4, #0
   13168:	bne	1317c <putchar_unlocked@plt+0x244c>
   1316c:	mov	r4, #64	; 0x40
   13170:	udiv	r4, r4, r2
   13174:	cmp	r2, #64	; 0x40
   13178:	addhi	r4, r4, #1
   1317c:	mov	r1, r4
   13180:	bl	130e4 <putchar_unlocked@plt+0x23b4>
   13184:	str	r4, [r5]
   13188:	pop	{r4, r5, r6, pc}
   1318c:	lsr	r3, r4, #1
   13190:	add	r3, r3, #1
   13194:	adds	r4, r4, r3
   13198:	bcc	1317c <putchar_unlocked@plt+0x244c>
   1319c:	bl	13328 <putchar_unlocked@plt+0x25f8>
   131a0:	mov	r2, #1
   131a4:	b	13150 <putchar_unlocked@plt+0x2420>
   131a8:	ldr	ip, [r1]
   131ac:	push	{r4, r5, r6, r7, r8, lr}
   131b0:	mov	r5, r1
   131b4:	mvn	r8, r3
   131b8:	lsr	r8, r8, #31
   131bc:	ldr	lr, [sp, #24]
   131c0:	asr	r1, ip, #1
   131c4:	adds	r4, ip, r1
   131c8:	mvnvs	r4, #-2147483648	; 0x80000000
   131cc:	cmp	r3, r4
   131d0:	movge	r1, #0
   131d4:	andlt	r1, r8, #1
   131d8:	cmp	r1, #0
   131dc:	movne	r4, r3
   131e0:	smull	r6, r7, r4, lr
   131e4:	cmp	r7, r6, asr #31
   131e8:	bne	13200 <putchar_unlocked@plt+0x24d0>
   131ec:	cmp	r6, #63	; 0x3f
   131f0:	mov	r1, r6
   131f4:	bgt	13210 <putchar_unlocked@plt+0x24e0>
   131f8:	mov	r1, #64	; 0x40
   131fc:	b	13204 <putchar_unlocked@plt+0x24d4>
   13200:	mvn	r1, #-2147483648	; 0x80000000
   13204:	sdiv	r4, r1, lr
   13208:	mls	r6, lr, r4, r1
   1320c:	sub	r1, r1, r6
   13210:	cmp	r0, #0
   13214:	sub	r6, r4, ip
   13218:	streq	r0, [r5]
   1321c:	cmp	r6, r2
   13220:	bge	13254 <putchar_unlocked@plt+0x2524>
   13224:	adds	r4, ip, r2
   13228:	bvs	13250 <putchar_unlocked@plt+0x2520>
   1322c:	cmp	r4, r3
   13230:	movle	r3, #0
   13234:	andgt	r3, r8, #1
   13238:	cmp	r3, #0
   1323c:	bne	13250 <putchar_unlocked@plt+0x2520>
   13240:	smull	r2, r3, r4, lr
   13244:	cmp	r3, r2, asr #31
   13248:	mov	r1, r2
   1324c:	beq	13254 <putchar_unlocked@plt+0x2524>
   13250:	bl	13328 <putchar_unlocked@plt+0x25f8>
   13254:	bl	1309c <putchar_unlocked@plt+0x236c>
   13258:	str	r4, [r5]
   1325c:	pop	{r4, r5, r6, r7, r8, pc}
   13260:	push	{r4, lr}
   13264:	bl	13368 <putchar_unlocked@plt+0x2638>
   13268:	cmp	r0, #0
   1326c:	popne	{r4, pc}
   13270:	bl	13328 <putchar_unlocked@plt+0x25f8>
   13274:	mov	r1, #1
   13278:	b	13260 <putchar_unlocked@plt+0x2530>
   1327c:	push	{r4, lr}
   13280:	bl	13368 <putchar_unlocked@plt+0x2638>
   13284:	cmp	r0, #0
   13288:	popne	{r4, pc}
   1328c:	bl	13328 <putchar_unlocked@plt+0x25f8>
   13290:	mov	r1, #1
   13294:	b	1327c <putchar_unlocked@plt+0x254c>
   13298:	push	{r4, r5, r6, lr}
   1329c:	mov	r4, r1
   132a0:	mov	r5, r0
   132a4:	mov	r0, r1
   132a8:	bl	13070 <putchar_unlocked@plt+0x2340>
   132ac:	mov	r2, r4
   132b0:	mov	r1, r5
   132b4:	pop	{r4, r5, r6, lr}
   132b8:	b	10b74 <memcpy@plt>
   132bc:	push	{r4, r5, r6, lr}
   132c0:	mov	r4, r1
   132c4:	mov	r5, r0
   132c8:	mov	r0, r1
   132cc:	bl	13084 <putchar_unlocked@plt+0x2354>
   132d0:	mov	r2, r4
   132d4:	mov	r1, r5
   132d8:	pop	{r4, r5, r6, lr}
   132dc:	b	10b74 <memcpy@plt>
   132e0:	push	{r4, r5, r6, lr}
   132e4:	mov	r5, r0
   132e8:	add	r0, r1, #1
   132ec:	mov	r4, r1
   132f0:	bl	13084 <putchar_unlocked@plt+0x2354>
   132f4:	mov	r2, #0
   132f8:	mov	r1, r5
   132fc:	strb	r2, [r0, r4]
   13300:	mov	r2, r4
   13304:	pop	{r4, r5, r6, lr}
   13308:	b	10b74 <memcpy@plt>
   1330c:	push	{r4, lr}
   13310:	mov	r4, r0
   13314:	bl	10c70 <strlen@plt>
   13318:	add	r1, r0, #1
   1331c:	mov	r0, r4
   13320:	pop	{r4, lr}
   13324:	b	13298 <putchar_unlocked@plt+0x2568>
   13328:	ldr	r3, [pc, #44]	; 1335c <putchar_unlocked@plt+0x262c>
   1332c:	mov	r2, #5
   13330:	mov	r0, #0
   13334:	push	{r4, lr}
   13338:	ldr	r1, [pc, #32]	; 13360 <putchar_unlocked@plt+0x2630>
   1333c:	ldr	r4, [r3]
   13340:	bl	10ba4 <dcgettext@plt>
   13344:	mov	r3, r0
   13348:	ldr	r2, [pc, #20]	; 13364 <putchar_unlocked@plt+0x2634>
   1334c:	mov	r1, #0
   13350:	mov	r0, r4
   13354:	bl	10c10 <error@plt>
   13358:	bl	10d24 <abort@plt>
   1335c:	andeq	r5, r2, ip, asr #1
   13360:	andeq	r4, r1, fp, ror #4
   13364:	andeq	r3, r1, fp, asr lr
   13368:	cmp	r1, #0
   1336c:	cmpne	r0, #0
   13370:	beq	133a8 <putchar_unlocked@plt+0x2678>
   13374:	push	{r4, r5, r6, lr}
   13378:	umull	r4, r5, r0, r1
   1337c:	adds	r3, r5, #0
   13380:	movne	r3, #1
   13384:	cmp	r4, #0
   13388:	blt	13394 <putchar_unlocked@plt+0x2664>
   1338c:	cmp	r3, #0
   13390:	beq	133b4 <putchar_unlocked@plt+0x2684>
   13394:	bl	10c7c <__errno_location@plt>
   13398:	mov	r3, #12
   1339c:	str	r3, [r0]
   133a0:	mov	r0, #0
   133a4:	pop	{r4, r5, r6, pc}
   133a8:	mov	r1, #1
   133ac:	mov	r0, r1
   133b0:	b	10b2c <calloc@plt>
   133b4:	pop	{r4, r5, r6, lr}
   133b8:	b	133b0 <putchar_unlocked@plt+0x2680>
   133bc:	cmp	r0, #0
   133c0:	beq	133e0 <putchar_unlocked@plt+0x26b0>
   133c4:	bge	133e4 <putchar_unlocked@plt+0x26b4>
   133c8:	push	{r4, lr}
   133cc:	bl	10c7c <__errno_location@plt>
   133d0:	mov	r3, #12
   133d4:	str	r3, [r0]
   133d8:	mov	r0, #0
   133dc:	pop	{r4, pc}
   133e0:	mov	r0, #1
   133e4:	b	10c1c <malloc@plt>
   133e8:	cmp	r0, #0
   133ec:	bne	133f8 <putchar_unlocked@plt+0x26c8>
   133f0:	mov	r0, r1
   133f4:	b	133bc <putchar_unlocked@plt+0x268c>
   133f8:	cmp	r1, #0
   133fc:	push	{r4, lr}
   13400:	bne	13410 <putchar_unlocked@plt+0x26e0>
   13404:	bl	1150c <putchar_unlocked@plt+0x7dc>
   13408:	mov	r0, #0
   1340c:	pop	{r4, pc}
   13410:	blt	1341c <putchar_unlocked@plt+0x26ec>
   13414:	pop	{r4, lr}
   13418:	b	10bb0 <realloc@plt>
   1341c:	bl	10c7c <__errno_location@plt>
   13420:	mov	r3, #12
   13424:	str	r3, [r0]
   13428:	b	13408 <putchar_unlocked@plt+0x26d8>
   1342c:	mov	r3, r0
   13430:	mov	r2, r3
   13434:	mov	r0, r3
   13438:	ldrb	r1, [r2], #1
   1343c:	cmp	r1, #47	; 0x2f
   13440:	beq	1344c <putchar_unlocked@plt+0x271c>
   13444:	mov	r2, #0
   13448:	b	13468 <putchar_unlocked@plt+0x2738>
   1344c:	mov	r3, r2
   13450:	b	13430 <putchar_unlocked@plt+0x2700>
   13454:	cmp	r1, #47	; 0x2f
   13458:	moveq	r2, #1
   1345c:	beq	13468 <putchar_unlocked@plt+0x2738>
   13460:	cmp	r2, #0
   13464:	bne	1347c <putchar_unlocked@plt+0x274c>
   13468:	mov	ip, r3
   1346c:	ldrb	r1, [r3], #1
   13470:	cmp	r1, #0
   13474:	bne	13454 <putchar_unlocked@plt+0x2724>
   13478:	bx	lr
   1347c:	mov	r0, ip
   13480:	b	13444 <putchar_unlocked@plt+0x2714>
   13484:	push	{r4, lr}
   13488:	mov	r4, r0
   1348c:	bl	10c70 <strlen@plt>
   13490:	cmp	r0, #1
   13494:	popls	{r4, pc}
   13498:	sub	r3, r0, #1
   1349c:	ldrb	r2, [r4, r3]
   134a0:	cmp	r2, #47	; 0x2f
   134a4:	popne	{r4, pc}
   134a8:	mov	r0, r3
   134ac:	b	13490 <putchar_unlocked@plt+0x2760>
   134b0:	push	{r4, r5, r6, lr}
   134b4:	mov	r4, r0
   134b8:	bl	10bec <__fpending@plt>
   134bc:	mov	r5, r0
   134c0:	mov	r0, r4
   134c4:	bl	10bf8 <ferror_unlocked@plt>
   134c8:	mov	r6, r0
   134cc:	mov	r0, r4
   134d0:	bl	13520 <putchar_unlocked@plt+0x27f0>
   134d4:	cmp	r6, #0
   134d8:	mov	r4, r0
   134dc:	bne	13508 <putchar_unlocked@plt+0x27d8>
   134e0:	cmp	r0, #0
   134e4:	beq	13500 <putchar_unlocked@plt+0x27d0>
   134e8:	cmp	r5, #0
   134ec:	bne	13518 <putchar_unlocked@plt+0x27e8>
   134f0:	bl	10c7c <__errno_location@plt>
   134f4:	ldr	r4, [r0]
   134f8:	subs	r4, r4, #9
   134fc:	mvnne	r4, #0
   13500:	mov	r0, r4
   13504:	pop	{r4, r5, r6, pc}
   13508:	cmp	r0, #0
   1350c:	bne	13518 <putchar_unlocked@plt+0x27e8>
   13510:	bl	10c7c <__errno_location@plt>
   13514:	str	r4, [r0]
   13518:	mvn	r4, #0
   1351c:	b	13500 <putchar_unlocked@plt+0x27d0>
   13520:	push	{r0, r1, r2, r4, r5, lr}
   13524:	mov	r4, r0
   13528:	bl	10cac <fileno@plt>
   1352c:	cmp	r0, #0
   13530:	mov	r0, r4
   13534:	bge	13544 <putchar_unlocked@plt+0x2814>
   13538:	add	sp, sp, #12
   1353c:	pop	{r4, r5, lr}
   13540:	b	10cc4 <fclose@plt>
   13544:	bl	10c34 <__freading@plt>
   13548:	cmp	r0, #0
   1354c:	bne	13588 <putchar_unlocked@plt+0x2858>
   13550:	mov	r0, r4
   13554:	bl	135c8 <putchar_unlocked@plt+0x2898>
   13558:	cmp	r0, #0
   1355c:	bne	135bc <putchar_unlocked@plt+0x288c>
   13560:	mov	r5, #0
   13564:	mov	r0, r4
   13568:	bl	10cc4 <fclose@plt>
   1356c:	cmp	r5, #0
   13570:	beq	13580 <putchar_unlocked@plt+0x2850>
   13574:	bl	10c7c <__errno_location@plt>
   13578:	str	r5, [r0]
   1357c:	mvn	r0, #0
   13580:	add	sp, sp, #12
   13584:	pop	{r4, r5, pc}
   13588:	mov	r0, r4
   1358c:	bl	10cac <fileno@plt>
   13590:	mov	r3, #1
   13594:	mov	r2, #0
   13598:	str	r3, [sp]
   1359c:	mov	r3, #0
   135a0:	bl	10bd4 <lseek64@plt>
   135a4:	mvn	r3, #0
   135a8:	mvn	r2, #0
   135ac:	cmp	r1, r3
   135b0:	cmpeq	r0, r2
   135b4:	bne	13550 <putchar_unlocked@plt+0x2820>
   135b8:	b	13560 <putchar_unlocked@plt+0x2830>
   135bc:	bl	10c7c <__errno_location@plt>
   135c0:	ldr	r5, [r0]
   135c4:	b	13564 <putchar_unlocked@plt+0x2834>
   135c8:	push	{r0, r1, r4, lr}
   135cc:	subs	r4, r0, #0
   135d0:	bne	135e4 <putchar_unlocked@plt+0x28b4>
   135d4:	mov	r0, r4
   135d8:	add	sp, sp, #8
   135dc:	pop	{r4, lr}
   135e0:	b	10b50 <fflush@plt>
   135e4:	bl	10c34 <__freading@plt>
   135e8:	cmp	r0, #0
   135ec:	beq	135d4 <putchar_unlocked@plt+0x28a4>
   135f0:	ldr	r3, [r4]
   135f4:	tst	r3, #256	; 0x100
   135f8:	beq	135d4 <putchar_unlocked@plt+0x28a4>
   135fc:	mov	r3, #1
   13600:	mov	r2, #0
   13604:	mov	r0, r4
   13608:	str	r3, [sp]
   1360c:	mov	r3, #0
   13610:	bl	13618 <putchar_unlocked@plt+0x28e8>
   13614:	b	135d4 <putchar_unlocked@plt+0x28a4>
   13618:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1361c:	mov	r4, r0
   13620:	ldmib	r0, {ip, lr}
   13624:	ldr	r8, [sp, #32]
   13628:	cmp	lr, ip
   1362c:	bne	1369c <putchar_unlocked@plt+0x296c>
   13630:	ldr	ip, [r0, #16]
   13634:	ldr	lr, [r0, #20]
   13638:	cmp	lr, ip
   1363c:	bne	1369c <putchar_unlocked@plt+0x296c>
   13640:	ldr	r5, [r0, #36]	; 0x24
   13644:	cmp	r5, #0
   13648:	bne	1369c <putchar_unlocked@plt+0x296c>
   1364c:	mov	r6, r2
   13650:	mov	r7, r3
   13654:	bl	10cac <fileno@plt>
   13658:	mov	r2, r6
   1365c:	mov	r3, r7
   13660:	str	r8, [sp]
   13664:	bl	10bd4 <lseek64@plt>
   13668:	mvn	r3, #0
   1366c:	mvn	r2, #0
   13670:	cmp	r1, r3
   13674:	cmpeq	r0, r2
   13678:	mvneq	r0, #0
   1367c:	beq	13694 <putchar_unlocked@plt+0x2964>
   13680:	ldr	r3, [r4]
   13684:	strd	r0, [r4, #80]	; 0x50
   13688:	mov	r0, r5
   1368c:	bic	r3, r3, #16
   13690:	str	r3, [r4]
   13694:	add	sp, sp, #8
   13698:	pop	{r4, r5, r6, r7, r8, pc}
   1369c:	mov	r0, r4
   136a0:	str	r8, [sp, #32]
   136a4:	add	sp, sp, #8
   136a8:	pop	{r4, r5, r6, r7, r8, lr}
   136ac:	b	10cd0 <fseeko64@plt>
   136b0:	b	133bc <putchar_unlocked@plt+0x268c>
   136b4:	cmp	r1, #0
   136b8:	orreq	r1, r1, #1
   136bc:	b	133e8 <putchar_unlocked@plt+0x26b8>
   136c0:	b	13368 <putchar_unlocked@plt+0x2638>
   136c4:	cmp	r2, #0
   136c8:	cmpne	r1, #0
   136cc:	moveq	r2, #1
   136d0:	moveq	r1, r2
   136d4:	b	1375c <putchar_unlocked@plt+0x2a2c>
   136d8:	push	{r4, lr}
   136dc:	mov	r0, #14
   136e0:	bl	10cf4 <nl_langinfo@plt>
   136e4:	cmp	r0, #0
   136e8:	beq	13700 <putchar_unlocked@plt+0x29d0>
   136ec:	ldrb	r2, [r0]
   136f0:	ldr	r3, [pc, #16]	; 13708 <putchar_unlocked@plt+0x29d8>
   136f4:	cmp	r2, #0
   136f8:	moveq	r0, r3
   136fc:	pop	{r4, pc}
   13700:	ldr	r0, [pc]	; 13708 <putchar_unlocked@plt+0x29d8>
   13704:	pop	{r4, pc}
   13708:	andeq	r4, r1, ip, ror r2
   1370c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13710:	subs	r5, r0, #0
   13714:	mov	r7, r2
   13718:	addeq	r5, sp, #4
   1371c:	mov	r6, r1
   13720:	mov	r0, r5
   13724:	bl	10c04 <mbrtowc@plt>
   13728:	cmp	r7, #0
   1372c:	cmnne	r0, #3
   13730:	mov	r4, r0
   13734:	bls	13750 <putchar_unlocked@plt+0x2a20>
   13738:	mov	r0, #0
   1373c:	bl	13788 <putchar_unlocked@plt+0x2a58>
   13740:	cmp	r0, #0
   13744:	ldrbeq	r3, [r6]
   13748:	moveq	r4, #1
   1374c:	streq	r3, [r5]
   13750:	mov	r0, r4
   13754:	add	sp, sp, #12
   13758:	pop	{r4, r5, r6, r7, pc}
   1375c:	umull	r2, r3, r1, r2
   13760:	cmp	r3, #0
   13764:	bne	13770 <putchar_unlocked@plt+0x2a40>
   13768:	mov	r1, r2
   1376c:	b	133e8 <putchar_unlocked@plt+0x26b8>
   13770:	push	{r4, lr}
   13774:	bl	10c7c <__errno_location@plt>
   13778:	mov	r3, #12
   1377c:	str	r3, [r0]
   13780:	mov	r0, #0
   13784:	pop	{r4, pc}
   13788:	push	{lr}		; (str lr, [sp, #-4]!)
   1378c:	sub	sp, sp, #268	; 0x10c
   13790:	movw	r2, #257	; 0x101
   13794:	add	r1, sp, #4
   13798:	bl	137e4 <putchar_unlocked@plt+0x2ab4>
   1379c:	cmp	r0, #0
   137a0:	movne	r0, #0
   137a4:	bne	137d4 <putchar_unlocked@plt+0x2aa4>
   137a8:	ldr	r1, [pc, #44]	; 137dc <putchar_unlocked@plt+0x2aac>
   137ac:	add	r0, sp, #4
   137b0:	bl	10b44 <strcmp@plt>
   137b4:	cmp	r0, #0
   137b8:	beq	137d0 <putchar_unlocked@plt+0x2aa0>
   137bc:	ldr	r1, [pc, #28]	; 137e0 <putchar_unlocked@plt+0x2ab0>
   137c0:	add	r0, sp, #4
   137c4:	bl	10b44 <strcmp@plt>
   137c8:	adds	r0, r0, #0
   137cc:	movne	r0, #1
   137d0:	and	r0, r0, #1
   137d4:	add	sp, sp, #268	; 0x10c
   137d8:	pop	{pc}		; (ldr pc, [sp], #4)
   137dc:	andeq	r4, r1, r2, lsl #5
   137e0:	andeq	r4, r1, r4, lsl #5
   137e4:	push	{r4, r5, r6, lr}
   137e8:	mov	r5, r1
   137ec:	mov	r1, #0
   137f0:	mov	r4, r2
   137f4:	bl	10cdc <setlocale@plt>
   137f8:	subs	r6, r0, #0
   137fc:	bne	13810 <putchar_unlocked@plt+0x2ae0>
   13800:	cmp	r4, #0
   13804:	mov	r0, #22
   13808:	strbne	r6, [r5]
   1380c:	pop	{r4, r5, r6, pc}
   13810:	bl	10c70 <strlen@plt>
   13814:	cmp	r4, r0
   13818:	bls	13834 <putchar_unlocked@plt+0x2b04>
   1381c:	add	r2, r0, #1
   13820:	mov	r1, r6
   13824:	mov	r0, r5
   13828:	bl	10b74 <memcpy@plt>
   1382c:	mov	r0, #0
   13830:	pop	{r4, r5, r6, pc}
   13834:	cmp	r4, #0
   13838:	beq	13858 <putchar_unlocked@plt+0x2b28>
   1383c:	sub	r4, r4, #1
   13840:	mov	r1, r6
   13844:	mov	r2, r4
   13848:	mov	r0, r5
   1384c:	bl	10b74 <memcpy@plt>
   13850:	mov	r3, #0
   13854:	strb	r3, [r5, r4]
   13858:	mov	r0, #34	; 0x22
   1385c:	pop	{r4, r5, r6, pc}
   13860:	mov	r1, #0
   13864:	b	10cdc <setlocale@plt>
   13868:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1386c:	mov	r7, r0
   13870:	ldr	r6, [pc, #72]	; 138c0 <putchar_unlocked@plt+0x2b90>
   13874:	ldr	r5, [pc, #72]	; 138c4 <putchar_unlocked@plt+0x2b94>
   13878:	add	r6, pc, r6
   1387c:	add	r5, pc, r5
   13880:	sub	r6, r6, r5
   13884:	mov	r8, r1
   13888:	mov	r9, r2
   1388c:	bl	10b0c <calloc@plt-0x20>
   13890:	asrs	r6, r6, #2
   13894:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13898:	mov	r4, #0
   1389c:	add	r4, r4, #1
   138a0:	ldr	r3, [r5], #4
   138a4:	mov	r2, r9
   138a8:	mov	r1, r8
   138ac:	mov	r0, r7
   138b0:	blx	r3
   138b4:	cmp	r6, r4
   138b8:	bne	1389c <putchar_unlocked@plt+0x2b6c>
   138bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   138c0:	muleq	r1, r4, r6
   138c4:	andeq	r1, r1, ip, lsl #13
   138c8:	bx	lr
   138cc:	ldr	r3, [pc, #12]	; 138e0 <putchar_unlocked@plt+0x2bb0>
   138d0:	mov	r1, #0
   138d4:	add	r3, pc, r3
   138d8:	ldr	r2, [r3]
   138dc:	b	10c88 <__cxa_atexit@plt>
   138e0:	andeq	r1, r1, r8, ror #15

Disassembly of section .fini:

000138e4 <.fini>:
   138e4:	push	{r3, lr}
   138e8:	pop	{r3, pc}
