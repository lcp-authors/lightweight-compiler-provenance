
../repos/charybdis/librb/src/.libs/librb.so:     file format elf32-littlearm


Disassembly of section .init:

00004d00 <_init>:
    4d00:	push	{r3, lr}
    4d04:	bl	5704 <call_weak_fn>
    4d08:	pop	{r3, pc}

Disassembly of section .plt:

00004d0c <.plt>:
    4d0c:	push	{lr}		; (str lr, [sp, #-4]!)
    4d10:	ldr	lr, [pc, #4]	; 4d1c <.plt+0x10>
    4d14:	add	lr, pc, lr
    4d18:	ldr	pc, [lr, #8]!
    4d1c:	.word	0x0002f2e4

00004d20 <rb_helper_run@plt>:
    4d20:	add	ip, pc, #0, 12
    4d24:	add	ip, ip, #192512	; 0x2f000
    4d28:	ldr	pc, [ip, #740]!	; 0x2e4

00004d2c <TLS_method@plt>:
    4d2c:	add	ip, pc, #0, 12
    4d30:	add	ip, ip, #192512	; 0x2f000
    4d34:	ldr	pc, [ip, #732]!	; 0x2dc

00004d38 <open@plt>:
    4d38:	add	ip, pc, #0, 12
    4d3c:	add	ip, ip, #192512	; 0x2f000
    4d40:	ldr	pc, [ip, #724]!	; 0x2d4

00004d44 <rb_init_netio@plt>:
    4d44:	add	ip, pc, #0, 12
    4d48:	add	ip, ip, #192512	; 0x2f000
    4d4c:	ldr	pc, [ip, #716]!	; 0x2cc

00004d50 <sigemptyset@plt>:
    4d50:	add	ip, pc, #0, 12
    4d54:	add	ip, ip, #192512	; 0x2f000
    4d58:	ldr	pc, [ip, #708]!	; 0x2c4

00004d5c <strerror@plt>:
    4d5c:	add	ip, pc, #0, 12
    4d60:	add	ip, ip, #192512	; 0x2f000
    4d64:	ldr	pc, [ip, #700]!	; 0x2bc

00004d68 <rb_radixtree_elem_delete@plt>:
    4d68:	add	ip, pc, #0, 12
    4d6c:	add	ip, ip, #192512	; 0x2f000
    4d70:	ldr	pc, [ip, #692]!	; 0x2b4

00004d74 <getdtablesize@plt>:
    4d74:	add	ip, pc, #0, 12
    4d78:	add	ip, ip, #192512	; 0x2f000
    4d7c:	ldr	pc, [ip, #684]!	; 0x2ac

00004d80 <abort@plt>:
    4d80:	add	ip, pc, #0, 12
    4d84:	add	ip, ip, #192512	; 0x2f000
    4d88:	ldr	pc, [ip, #676]!	; 0x2a4

00004d8c <connect@plt>:
    4d8c:	add	ip, pc, #0, 12
    4d90:	add	ip, ip, #192512	; 0x2f000
    4d94:	ldr	pc, [ip, #668]!	; 0x29c

00004d98 <rb_ignore_errno@plt>:
    4d98:	add	ip, pc, #0, 12
    4d9c:	add	ip, ip, #192512	; 0x2f000
    4da0:	ldr	pc, [ip, #660]!	; 0x294

00004da4 <rb_settimeout@plt>:
    4da4:	add	ip, pc, #0, 12
    4da8:	add	ip, ip, #192512	; 0x2f000
    4dac:	ldr	pc, [ip, #652]!	; 0x28c

00004db0 <SSL_CTX_set_cipher_list@plt>:
    4db0:	add	ip, pc, #0, 12
    4db4:	add	ip, ip, #192512	; 0x2f000
    4db8:	ldr	pc, [ip, #644]!	; 0x284

00004dbc <ERR_get_error@plt>:
    4dbc:	add	ip, pc, #0, 12
    4dc0:	add	ip, ip, #192512	; 0x2f000
    4dc4:	ldr	pc, [ip, #636]!	; 0x27c

00004dc8 <rb_radixtree_foreach_start@plt>:
    4dc8:	add	ip, pc, #0, 12
    4dcc:	add	ip, ip, #192512	; 0x2f000
    4dd0:	ldr	pc, [ip, #628]!	; 0x274

00004dd4 <strcasestr@plt>:
    4dd4:	add	ip, pc, #0, 12
    4dd8:	add	ip, ip, #192512	; 0x2f000
    4ddc:	ldr	pc, [ip, #620]!	; 0x26c

00004de0 <rb_connect_tcp@plt>:
    4de0:	add	ip, pc, #0, 12
    4de4:	add	ip, ip, #192512	; 0x2f000
    4de8:	ldr	pc, [ip, #612]!	; 0x264

00004dec <RAND_load_file@plt>:
    4dec:	add	ip, pc, #0, 12
    4df0:	add	ip, ip, #192512	; 0x2f000
    4df4:	ldr	pc, [ip, #604]!	; 0x25c

00004df8 <signalfd@plt>:
    4df8:	add	ip, pc, #0, 12
    4dfc:	add	ip, ip, #192512	; 0x2f000
    4e00:	ldr	pc, [ip, #596]!	; 0x254

00004e04 <rb_radixtree_foreach_next@plt>:
    4e04:	add	ip, pc, #0, 12
    4e08:	add	ip, ip, #192512	; 0x2f000
    4e0c:	ldr	pc, [ip, #588]!	; 0x24c

00004e10 <memcmp@plt>:
    4e10:	add	ip, pc, #0, 12
    4e14:	add	ip, ip, #192512	; 0x2f000
    4e18:	ldr	pc, [ip, #580]!	; 0x244

00004e1c <SSL_CTX_free@plt>:
    4e1c:	add	ip, pc, #0, 12
    4e20:	add	ip, ip, #192512	; 0x2f000
    4e24:	ldr	pc, [ip, #572]!	; 0x23c

00004e28 <rb_getmaxconnect@plt>:
    4e28:	add	ip, pc, #0, 12
    4e2c:	add	ip, ip, #192512	; 0x2f000
    4e30:	ldr	pc, [ip, #564]!	; 0x234

00004e34 <sigwaitinfo@plt>:
    4e34:	add	ip, pc, #0, 12
    4e38:	add	ip, ip, #192512	; 0x2f000
    4e3c:	ldr	pc, [ip, #556]!	; 0x22c

00004e40 <__libc_current_sigrtmin@plt>:
    4e40:	add	ip, pc, #0, 12
    4e44:	add	ip, ip, #192512	; 0x2f000
    4e48:	ldr	pc, [ip, #548]!	; 0x224

00004e4c <__xstat@plt>:
    4e4c:	add	ip, pc, #0, 12
    4e50:	add	ip, ip, #192512	; 0x2f000
    4e54:	ldr	pc, [ip, #540]!	; 0x21c

00004e58 <rb_event_delete@plt>:
    4e58:	add	ip, pc, #0, 12
    4e5c:	add	ip, ip, #192512	; 0x2f000
    4e60:	ldr	pc, [ip, #532]!	; 0x214

00004e64 <rb_setselect@plt>:
    4e64:	add	ip, pc, #0, 12
    4e68:	add	ip, ip, #192512	; 0x2f000
    4e6c:	ldr	pc, [ip, #524]!	; 0x20c

00004e70 <rb_fd_ssl@plt>:
    4e70:	add	ip, pc, #0, 12
    4e74:	add	ip, ip, #192512	; 0x2f000
    4e78:	ldr	pc, [ip, #516]!	; 0x204

00004e7c <sigtimedwait@plt>:
    4e7c:	add	ip, pc, #0, 12
    4e80:	add	ip, ip, #192512	; 0x2f000
    4e84:	ldr	pc, [ip, #508]!	; 0x1fc

00004e88 <rb_setenv@plt>:
    4e88:	add	ip, pc, #0, 12
    4e8c:	add	ip, ip, #192512	; 0x2f000
    4e90:	ldr	pc, [ip, #500]!	; 0x1f4

00004e94 <signal@plt>:
    4e94:	add	ip, pc, #0, 12
    4e98:	add	ip, ip, #192512	; 0x2f000
    4e9c:	ldr	pc, [ip, #492]!	; 0x1ec

00004ea0 <rb_get_fd@plt>:
    4ea0:	add	ip, pc, #0, 12
    4ea4:	add	ip, ip, #192512	; 0x2f000
    4ea8:	ldr	pc, [ip, #484]!	; 0x1e4

00004eac <labs@plt>:
    4eac:	add	ip, pc, #0, 12
    4eb0:	add	ip, ip, #192512	; 0x2f000
    4eb4:	ldr	pc, [ip, #476]!	; 0x1dc

00004eb8 <epoll_create@plt>:
    4eb8:	add	ip, pc, #0, 12
    4ebc:	add	ip, ip, #192512	; 0x2f000
    4ec0:	ldr	pc, [ip, #468]!	; 0x1d4

00004ec4 <rb_clear_patricia@plt>:
    4ec4:	add	ip, pc, #0, 12
    4ec8:	add	ip, ip, #192512	; 0x2f000
    4ecc:	ldr	pc, [ip, #460]!	; 0x1cc

00004ed0 <__gmon_start__@plt>:
    4ed0:	add	ip, pc, #0, 12
    4ed4:	add	ip, ip, #192512	; 0x2f000
    4ed8:	ldr	pc, [ip, #452]!	; 0x1c4

00004edc <SSL_CTX_clear_options@plt>:
    4edc:	add	ip, pc, #0, 12
    4ee0:	add	ip, ip, #192512	; 0x2f000
    4ee4:	ldr	pc, [ip, #444]!	; 0x1bc

00004ee8 <SSL_get_current_cipher@plt>:
    4ee8:	add	ip, pc, #0, 12
    4eec:	add	ip, ip, #192512	; 0x2f000
    4ef0:	ldr	pc, [ip, #436]!	; 0x1b4

00004ef4 <timer_create@plt>:
    4ef4:	add	ip, pc, #0, 12
    4ef8:	add	ip, ip, #192512	; 0x2f000
    4efc:	ldr	pc, [ip, #428]!	; 0x1ac

00004f00 <X509_get_X509_PUBKEY@plt>:
    4f00:	add	ip, pc, #0, 12
    4f04:	add	ip, ip, #192512	; 0x2f000
    4f08:	ldr	pc, [ip, #420]!	; 0x1a4

00004f0c <rb_select@plt>:
    4f0c:	add	ip, pc, #0, 12
    4f10:	add	ip, ip, #192512	; 0x2f000
    4f14:	ldr	pc, [ip, #412]!	; 0x19c

00004f18 <rb_patricia_search_best@plt>:
    4f18:	add	ip, pc, #0, 12
    4f1c:	add	ip, ip, #192512	; 0x2f000
    4f20:	ldr	pc, [ip, #404]!	; 0x194

00004f24 <vsnprintf@plt>:
    4f24:	add	ip, pc, #0, 12
    4f28:	add	ip, ip, #192512	; 0x2f000
    4f2c:	ldr	pc, [ip, #396]!	; 0x18c

00004f30 <socketpair@plt>:
    4f30:	add	ip, pc, #0, 12
    4f34:	add	ip, ip, #192512	; 0x2f000
    4f38:	ldr	pc, [ip, #388]!	; 0x184

00004f3c <strncpy@plt>:
    4f3c:	add	ip, pc, #0, 12
    4f40:	add	ip, ip, #192512	; 0x2f000
    4f44:	ldr	pc, [ip, #380]!	; 0x17c

00004f48 <fclose@plt>:
    4f48:	add	ip, pc, #0, 12
    4f4c:	add	ip, ip, #192512	; 0x2f000
    4f50:	ldr	pc, [ip, #372]!	; 0x174

00004f54 <recv@plt>:
    4f54:	add	ip, pc, #0, 12
    4f58:	add	ip, ip, #192512	; 0x2f000
    4f5c:	ldr	pc, [ip, #364]!	; 0x16c

00004f60 <getenv@plt>:
    4f60:	add	ip, pc, #0, 12
    4f64:	add	ip, ip, #192512	; 0x2f000
    4f68:	ldr	pc, [ip, #356]!	; 0x164

00004f6c <ERR_error_string_n@plt>:
    4f6c:	add	ip, pc, #0, 12
    4f70:	add	ip, ip, #192512	; 0x2f000
    4f74:	ldr	pc, [ip, #348]!	; 0x15c

00004f78 <strchr@plt>:
    4f78:	add	ip, pc, #0, 12
    4f7c:	add	ip, ip, #192512	; 0x2f000
    4f80:	ldr	pc, [ip, #340]!	; 0x154

00004f84 <rb_gettimeofday@plt>:
    4f84:	add	ip, pc, #0, 12
    4f88:	add	ip, ip, #192512	; 0x2f000
    4f8c:	ldr	pc, [ip, #332]!	; 0x14c

00004f90 <strcasecmp@plt>:
    4f90:	add	ip, pc, #0, 12
    4f94:	add	ip, ip, #192512	; 0x2f000
    4f98:	ldr	pc, [ip, #324]!	; 0x144

00004f9c <rb_helper_restart@plt>:
    4f9c:	add	ip, pc, #0, 12
    4fa0:	add	ip, ip, #192512	; 0x2f000
    4fa4:	ldr	pc, [ip, #316]!	; 0x13c

00004fa8 <listen@plt>:
    4fa8:	add	ip, pc, #0, 12
    4fac:	add	ip, ip, #192512	; 0x2f000
    4fb0:	ldr	pc, [ip, #308]!	; 0x134

00004fb4 <calloc@plt>:
    4fb4:	add	ip, pc, #0, 12
    4fb8:	add	ip, ip, #192512	; 0x2f000
    4fbc:	ldr	pc, [ip, #300]!	; 0x12c

00004fc0 <SSL_write@plt>:
    4fc0:	add	ip, pc, #0, 12
    4fc4:	add	ip, ip, #192512	; 0x2f000
    4fc8:	ldr	pc, [ip, #292]!	; 0x124

00004fcc <rb_event_init@plt>:
    4fcc:	add	ip, pc, #0, 12
    4fd0:	add	ip, ip, #192512	; 0x2f000
    4fd4:	ldr	pc, [ip, #284]!	; 0x11c

00004fd8 <fopen@plt>:
    4fd8:	add	ip, pc, #0, 12
    4fdc:	add	ip, ip, #192512	; 0x2f000
    4fe0:	ldr	pc, [ip, #276]!	; 0x114

00004fe4 <rb_set_nb@plt>:
    4fe4:	add	ip, pc, #0, 12
    4fe8:	add	ip, ip, #192512	; 0x2f000
    4fec:	ldr	pc, [ip, #268]!	; 0x10c

00004ff0 <memset@plt>:
    4ff0:	add	ip, pc, #0, 12
    4ff4:	add	ip, ip, #192512	; 0x2f000
    4ff8:	ldr	pc, [ip, #260]!	; 0x104

00004ffc <rb_inet_pton@plt>:
    4ffc:	add	ip, pc, #0, 12
    5000:	add	ip, ip, #192512	; 0x2f000
    5004:	ldr	pc, [ip, #252]!	; 0xfc

00005008 <rb_radixtree_stats@plt>:
    5008:	add	ip, pc, #0, 12
    500c:	add	ip, ip, #192512	; 0x2f000
    5010:	ldr	pc, [ip, #244]!	; 0xf4

00005014 <strrchr@plt>:
    5014:	add	ip, pc, #0, 12
    5018:	add	ip, ip, #192512	; 0x2f000
    501c:	ldr	pc, [ip, #236]!	; 0xec

00005020 <rb_write@plt>:
    5020:	add	ip, pc, #0, 12
    5024:	add	ip, ip, #192512	; 0x2f000
    5028:	ldr	pc, [ip, #228]!	; 0xe4

0000502c <SSL_set_fd@plt>:
    502c:	add	ip, pc, #0, 12
    5030:	add	ip, ip, #192512	; 0x2f000
    5034:	ldr	pc, [ip, #220]!	; 0xdc

00005038 <SSL_CTX_ctrl@plt>:
    5038:	add	ip, pc, #0, 12
    503c:	add	ip, ip, #192512	; 0x2f000
    5040:	ldr	pc, [ip, #212]!	; 0xd4

00005044 <rb_linebuf_parse@plt>:
    5044:	add	ip, pc, #0, 12
    5048:	add	ip, ip, #192512	; 0x2f000
    504c:	ldr	pc, [ip, #204]!	; 0xcc

00005050 <writev@plt>:
    5050:	add	ip, pc, #0, 12
    5054:	add	ip, ip, #192512	; 0x2f000
    5058:	ldr	pc, [ip, #196]!	; 0xc4

0000505c <rb_fsnprint@plt>:
    505c:	add	ip, pc, #0, 12
    5060:	add	ip, ip, #192512	; 0x2f000
    5064:	ldr	pc, [ip, #188]!	; 0xbc

00005068 <rb_strlcpy@plt>:
    5068:	add	ip, pc, #0, 12
    506c:	add	ip, ip, #192512	; 0x2f000
    5070:	ldr	pc, [ip, #180]!	; 0xb4

00005074 <ntohl@plt>:
    5074:	add	ip, pc, #0, 12
    5078:	add	ip, ip, #192512	; 0x2f000
    507c:	ldr	pc, [ip, #172]!	; 0xac

00005080 <rb_patricia_search_best2@plt>:
    5080:	add	ip, pc, #0, 12
    5084:	add	ip, ip, #192512	; 0x2f000
    5088:	ldr	pc, [ip, #164]!	; 0xa4

0000508c <SSL_CIPHER_get_name@plt>:
    508c:	add	ip, pc, #0, 12
    5090:	add	ip, ip, #192512	; 0x2f000
    5094:	ldr	pc, [ip, #156]!	; 0x9c

00005098 <posix_spawnattr_init@plt>:
    5098:	add	ip, pc, #0, 12
    509c:	add	ip, ip, #192512	; 0x2f000
    50a0:	ldr	pc, [ip, #148]!	; 0x94

000050a4 <OpenSSL_version_num@plt>:
    50a4:	add	ip, pc, #0, 12
    50a8:	add	ip, ip, #192512	; 0x2f000
    50ac:	ldr	pc, [ip, #140]!	; 0x8c

000050b0 <rb_dictionary_foreach_next@plt>:
    50b0:	add	ip, pc, #0, 12
    50b4:	add	ip, ip, #192512	; 0x2f000
    50b8:	ldr	pc, [ip, #132]!	; 0x84

000050bc <rb_kill@plt>:
    50bc:	add	ip, pc, #0, 12
    50c0:	add	ip, ip, #192512	; 0x2f000
    50c4:	ldr	pc, [ip, #124]!	; 0x7c

000050c8 <free@plt>:
    50c8:	add	ip, pc, #0, 12
    50cc:	add	ip, ip, #192512	; 0x2f000
    50d0:	ldr	pc, [ip, #116]!	; 0x74

000050d4 <sendmsg@plt>:
    50d4:	add	ip, pc, #0, 12
    50d8:	add	ip, ip, #192512	; 0x2f000
    50dc:	ldr	pc, [ip, #108]!	; 0x6c

000050e0 <read@plt>:
    50e0:	add	ip, pc, #0, 12
    50e4:	add	ip, ip, #192512	; 0x2f000
    50e8:	ldr	pc, [ip, #100]!	; 0x64

000050ec <rb_radixtree_elem_add@plt>:
    50ec:	add	ip, pc, #0, 12
    50f0:	add	ip, ip, #192512	; 0x2f000
    50f4:	ldr	pc, [ip, #92]!	; 0x5c

000050f8 <write@plt>:
    50f8:	add	ip, pc, #0, 12
    50fc:	add	ip, ip, #192512	; 0x2f000
    5100:	ldr	pc, [ip, #84]!	; 0x54

00005104 <SSL_new@plt>:
    5104:	add	ip, pc, #0, 12
    5108:	add	ip, ip, #192512	; 0x2f000
    510c:	ldr	pc, [ip, #76]!	; 0x4c

00005110 <access@plt>:
    5110:	add	ip, pc, #0, 12
    5114:	add	ip, ip, #192512	; 0x2f000
    5118:	ldr	pc, [ip, #68]!	; 0x44

0000511c <rb_lib_loop@plt>:
    511c:	add	ip, pc, #0, 12
    5120:	add	ip, ip, #192512	; 0x2f000
    5124:	ldr	pc, [ip, #60]!	; 0x3c

00005128 <timer_settime@plt>:
    5128:	add	ip, pc, #0, 12
    512c:	add	ip, ip, #192512	; 0x2f000
    5130:	ldr	pc, [ip, #52]!	; 0x34

00005134 <gettimeofday@plt>:
    5134:	add	ip, pc, #0, 12
    5138:	add	ip, ip, #192512	; 0x2f000
    513c:	ldr	pc, [ip, #44]!	; 0x2c

00005140 <accept@plt>:
    5140:	add	ip, pc, #0, 12
    5144:	add	ip, ip, #192512	; 0x2f000
    5148:	ldr	pc, [ip, #36]!	; 0x24

0000514c <SSL_read@plt>:
    514c:	add	ip, pc, #0, 12
    5150:	add	ip, ip, #192512	; 0x2f000
    5154:	ldr	pc, [ip, #28]!

00005158 <rb_read@plt>:
    5158:	add	ip, pc, #0, 12
    515c:	add	ip, ip, #192512	; 0x2f000
    5160:	ldr	pc, [ip, #20]!

00005164 <socket@plt>:
    5164:	add	ip, pc, #0, 12
    5168:	add	ip, ip, #192512	; 0x2f000
    516c:	ldr	pc, [ip, #12]!

00005170 <rb_linebuf_get@plt>:
    5170:	add	ip, pc, #0, 12
    5174:	add	ip, ip, #192512	; 0x2f000
    5178:	ldr	pc, [ip, #4]!

0000517c <rb_radixtree_foreach_cur@plt>:
    517c:	add	ip, pc, #0, 12
    5180:	add	ip, ip, #188416	; 0x2e000
    5184:	ldr	pc, [ip, #4092]!	; 0xffc

00005188 <epoll_wait@plt>:
    5188:	add	ip, pc, #0, 12
    518c:	add	ip, ip, #188416	; 0x2e000
    5190:	ldr	pc, [ip, #4084]!	; 0xff4

00005194 <SSL_do_handshake@plt>:
    5194:	add	ip, pc, #0, 12
    5198:	add	ip, ip, #188416	; 0x2e000
    519c:	ldr	pc, [ip, #4076]!	; 0xfec

000051a0 <rb_linebuf_flush@plt>:
    51a0:	add	ip, pc, #0, 12
    51a4:	add	ip, ip, #188416	; 0x2e000
    51a8:	ldr	pc, [ip, #4068]!	; 0xfe4

000051ac <posix_spawn@plt>:
    51ac:	add	ip, pc, #0, 12
    51b0:	add	ip, ip, #188416	; 0x2e000
    51b4:	ldr	pc, [ip, #4060]!	; 0xfdc

000051b8 <strlen@plt>:
    51b8:	add	ip, pc, #0, 12
    51bc:	add	ip, ip, #188416	; 0x2e000
    51c0:	ldr	pc, [ip, #4052]!	; 0xfd4

000051c4 <rb_current_time@plt>:
    51c4:	add	ip, pc, #0, 12
    51c8:	add	ip, ip, #188416	; 0x2e000
    51cc:	ldr	pc, [ip, #4044]!	; 0xfcc

000051d0 <strtoul@plt>:
    51d0:	add	ip, pc, #0, 12
    51d4:	add	ip, ip, #188416	; 0x2e000
    51d8:	ldr	pc, [ip, #4036]!	; 0xfc4

000051dc <memcpy@plt>:
    51dc:	add	ip, pc, #0, 12
    51e0:	add	ip, ip, #188416	; 0x2e000
    51e4:	ldr	pc, [ip, #4028]!	; 0xfbc

000051e8 <PEM_read_X509@plt>:
    51e8:	add	ip, pc, #0, 12
    51ec:	add	ip, ip, #188416	; 0x2e000
    51f0:	ldr	pc, [ip, #4020]!	; 0xfb4

000051f4 <posix_spawnattr_setflags@plt>:
    51f4:	add	ip, pc, #0, 12
    51f8:	add	ip, ip, #188416	; 0x2e000
    51fc:	ldr	pc, [ip, #4012]!	; 0xfac

00005200 <SSL_CTX_use_certificate_chain_file@plt>:
    5200:	add	ip, pc, #0, 12
    5204:	add	ip, ip, #188416	; 0x2e000
    5208:	ldr	pc, [ip, #4004]!	; 0xfa4

0000520c <rb_free_rb_dlink_node@plt>:
    520c:	add	ip, pc, #0, 12
    5210:	add	ip, ip, #188416	; 0x2e000
    5214:	ldr	pc, [ip, #3996]!	; 0xf9c

00005218 <SSL_CTX_set_options@plt>:
    5218:	add	ip, pc, #0, 12
    521c:	add	ip, ip, #188416	; 0x2e000
    5220:	ldr	pc, [ip, #3988]!	; 0xf94

00005224 <posix_spawnattr_destroy@plt>:
    5224:	add	ip, pc, #0, 12
    5228:	add	ip, ip, #188416	; 0x2e000
    522c:	ldr	pc, [ip, #3980]!	; 0xf8c

00005230 <rb_close@plt>:
    5230:	add	ip, pc, #0, 12
    5234:	add	ip, ip, #188416	; 0x2e000
    5238:	ldr	pc, [ip, #3972]!	; 0xf84

0000523c <strtol@plt>:
    523c:	add	ip, pc, #0, 12
    5240:	add	ip, ip, #188416	; 0x2e000
    5244:	ldr	pc, [ip, #3964]!	; 0xf7c

00005248 <sigaddset@plt>:
    5248:	add	ip, pc, #0, 12
    524c:	add	ip, ip, #188416	; 0x2e000
    5250:	ldr	pc, [ip, #3956]!	; 0xf74

00005254 <strcpy@plt>:
    5254:	add	ip, pc, #0, 12
    5258:	add	ip, ip, #188416	; 0x2e000
    525c:	ldr	pc, [ip, #3948]!	; 0xf6c

00005260 <waitpid@plt>:
    5260:	add	ip, pc, #0, 12
    5264:	add	ip, ip, #188416	; 0x2e000
    5268:	ldr	pc, [ip, #3940]!	; 0xf64

0000526c <rb_run_one_event@plt>:
    526c:	add	ip, pc, #0, 12
    5270:	add	ip, ip, #188416	; 0x2e000
    5274:	ldr	pc, [ip, #3932]!	; 0xf5c

00005278 <rb_patricia_search_exact@plt>:
    5278:	add	ip, pc, #0, 12
    527c:	add	ip, ip, #188416	; 0x2e000
    5280:	ldr	pc, [ip, #3924]!	; 0xf54

00005284 <strncat@plt>:
    5284:	add	ip, pc, #0, 12
    5288:	add	ip, ip, #188416	; 0x2e000
    528c:	ldr	pc, [ip, #3916]!	; 0xf4c

00005290 <atol@plt>:
    5290:	add	ip, pc, #0, 12
    5294:	add	ip, ip, #188416	; 0x2e000
    5298:	ldr	pc, [ip, #3908]!	; 0xf44

0000529c <rb_bh_free@plt>:
    529c:	add	ip, pc, #0, 12
    52a0:	add	ip, ip, #188416	; 0x2e000
    52a4:	ldr	pc, [ip, #3900]!	; 0xf3c

000052a8 <rb_init_rb_dlink_nodes@plt>:
    52a8:	add	ip, pc, #0, 12
    52ac:	add	ip, ip, #188416	; 0x2e000
    52b0:	ldr	pc, [ip, #3892]!	; 0xf34

000052b4 <EVP_sha1@plt>:
    52b4:	add	ip, pc, #0, 12
    52b8:	add	ip, ip, #188416	; 0x2e000
    52bc:	ldr	pc, [ip, #3884]!	; 0xf2c

000052c0 <rb_patricia_lookup@plt>:
    52c0:	add	ip, pc, #0, 12
    52c4:	add	ip, ip, #188416	; 0x2e000
    52c8:	ldr	pc, [ip, #3876]!	; 0xf24

000052cc <shutdown@plt>:
    52cc:	add	ip, pc, #0, 12
    52d0:	add	ip, ip, #188416	; 0x2e000
    52d4:	ldr	pc, [ip, #3868]!	; 0xf1c

000052d8 <bind@plt>:
    52d8:	add	ip, pc, #0, 12
    52dc:	add	ip, ip, #188416	; 0x2e000
    52e0:	ldr	pc, [ip, #3860]!	; 0xf14

000052e4 <rb_lib_log@plt>:
    52e4:	add	ip, pc, #0, 12
    52e8:	add	ip, ip, #188416	; 0x2e000
    52ec:	ldr	pc, [ip, #3852]!	; 0xf0c

000052f0 <SSL_CTX_use_PrivateKey_file@plt>:
    52f0:	add	ip, pc, #0, 12
    52f4:	add	ip, ip, #188416	; 0x2e000
    52f8:	ldr	pc, [ip, #3844]!	; 0xf04

000052fc <select@plt>:
    52fc:	add	ip, pc, #0, 12
    5300:	add	ip, ip, #188416	; 0x2e000
    5304:	ldr	pc, [ip, #3836]!	; 0xefc

00005308 <close@plt>:
    5308:	add	ip, pc, #0, 12
    530c:	add	ip, ip, #188416	; 0x2e000
    5310:	ldr	pc, [ip, #3828]!	; 0xef4

00005314 <rb_inet_ntop@plt>:
    5314:	add	ip, pc, #0, 12
    5318:	add	ip, ip, #188416	; 0x2e000
    531c:	ldr	pc, [ip, #3820]!	; 0xeec

00005320 <rb_bh_alloc@plt>:
    5320:	add	ip, pc, #0, 12
    5324:	add	ip, ip, #188416	; 0x2e000
    5328:	ldr	pc, [ip, #3812]!	; 0xee4

0000532c <SSL_free@plt>:
    532c:	add	ip, pc, #0, 12
    5330:	add	ip, ip, #188416	; 0x2e000
    5334:	ldr	pc, [ip, #3804]!	; 0xedc

00005338 <rb_pipe@plt>:
    5338:	add	ip, pc, #0, 12
    533c:	add	ip, ip, #188416	; 0x2e000
    5340:	ldr	pc, [ip, #3796]!	; 0xed4

00005344 <strncasecmp@plt>:
    5344:	add	ip, pc, #0, 12
    5348:	add	ip, ip, #188416	; 0x2e000
    534c:	ldr	pc, [ip, #3788]!	; 0xecc

00005350 <rb_outofmemory@plt>:
    5350:	add	ip, pc, #0, 12
    5354:	add	ip, ip, #188416	; 0x2e000
    5358:	ldr	pc, [ip, #3780]!	; 0xec4

0000535c <rb_set_time@plt>:
    535c:	add	ip, pc, #0, 12
    5360:	add	ip, ip, #188416	; 0x2e000
    5364:	ldr	pc, [ip, #3772]!	; 0xebc

00005368 <rb_dictionary_stats@plt>:
    5368:	add	ip, pc, #0, 12
    536c:	add	ip, ip, #188416	; 0x2e000
    5370:	ldr	pc, [ip, #3764]!	; 0xeb4

00005374 <malloc@plt>:
    5374:	add	ip, pc, #0, 12
    5378:	add	ip, ip, #188416	; 0x2e000
    537c:	ldr	pc, [ip, #3756]!	; 0xeac

00005380 <sigprocmask@plt>:
    5380:	add	ip, pc, #0, 12
    5384:	add	ip, ip, #188416	; 0x2e000
    5388:	ldr	pc, [ip, #3748]!	; 0xea4

0000538c <rb_event_run@plt>:
    538c:	add	ip, pc, #0, 12
    5390:	add	ip, ip, #188416	; 0x2e000
    5394:	ldr	pc, [ip, #3740]!	; 0xe9c

00005398 <SSL_set_accept_state@plt>:
    5398:	add	ip, pc, #0, 12
    539c:	add	ip, ip, #188416	; 0x2e000
    53a0:	ldr	pc, [ip, #3732]!	; 0xe94

000053a4 <rb_init_bh@plt>:
    53a4:	add	ip, pc, #0, 12
    53a8:	add	ip, ip, #188416	; 0x2e000
    53ac:	ldr	pc, [ip, #3724]!	; 0xe8c

000053b0 <PEM_read_DHparams@plt>:
    53b0:	add	ip, pc, #0, 12
    53b4:	add	ip, ip, #188416	; 0x2e000
    53b8:	ldr	pc, [ip, #3716]!	; 0xe84

000053bc <gmtime_r@plt>:
    53bc:	add	ip, pc, #0, 12
    53c0:	add	ip, ip, #188416	; 0x2e000
    53c4:	ldr	pc, [ip, #3708]!	; 0xe7c

000053c8 <poll@plt>:
    53c8:	add	ip, pc, #0, 12
    53cc:	add	ip, ip, #188416	; 0x2e000
    53d0:	ldr	pc, [ip, #3700]!	; 0xe74

000053d4 <ASN1_item_digest@plt>:
    53d4:	add	ip, pc, #0, 12
    53d8:	add	ip, ip, #188416	; 0x2e000
    53dc:	ldr	pc, [ip, #3692]!	; 0xe6c

000053e0 <strnlen@plt>:
    53e0:	add	ip, pc, #0, 12
    53e4:	add	ip, ip, #188416	; 0x2e000
    53e8:	ldr	pc, [ip, #3684]!	; 0xe64

000053ec <SSL_get_peer_certificate@plt>:
    53ec:	add	ip, pc, #0, 12
    53f0:	add	ip, ip, #188416	; 0x2e000
    53f4:	ldr	pc, [ip, #3676]!	; 0xe5c

000053f8 <rb_dictionary_find@plt>:
    53f8:	add	ip, pc, #0, 12
    53fc:	add	ip, ip, #188416	; 0x2e000
    5400:	ldr	pc, [ip, #3668]!	; 0xe54

00005404 <rb_lib_init@plt>:
    5404:	add	ip, pc, #0, 12
    5408:	add	ip, ip, #188416	; 0x2e000
    540c:	ldr	pc, [ip, #3660]!	; 0xe4c

00005410 <SSL_get_verify_result@plt>:
    5410:	add	ip, pc, #0, 12
    5414:	add	ip, ip, #188416	; 0x2e000
    5418:	ldr	pc, [ip, #3652]!	; 0xe44

0000541c <strtok_r@plt>:
    541c:	add	ip, pc, #0, 12
    5420:	add	ip, ip, #188416	; 0x2e000
    5424:	ldr	pc, [ip, #3644]!	; 0xe3c

00005428 <rb_lib_restart@plt>:
    5428:	add	ip, pc, #0, 12
    542c:	add	ip, ip, #188416	; 0x2e000
    5430:	ldr	pc, [ip, #3636]!	; 0xe34

00005434 <DH_free@plt>:
    5434:	add	ip, pc, #0, 12
    5438:	add	ip, ip, #188416	; 0x2e000
    543c:	ldr	pc, [ip, #3628]!	; 0xe2c

00005440 <timer_delete@plt>:
    5440:	add	ip, pc, #0, 12
    5444:	add	ip, ip, #188416	; 0x2e000
    5448:	ldr	pc, [ip, #3620]!	; 0xe24

0000544c <rb_open@plt>:
    544c:	add	ip, pc, #0, 12
    5450:	add	ip, ip, #188416	; 0x2e000
    5454:	ldr	pc, [ip, #3612]!	; 0xe1c

00005458 <rb_get_sockerr@plt>:
    5458:	add	ip, pc, #0, 12
    545c:	add	ip, ip, #188416	; 0x2e000
    5460:	ldr	pc, [ip, #3604]!	; 0xe14

00005464 <send@plt>:
    5464:	add	ip, pc, #0, 12
    5468:	add	ip, ip, #188416	; 0x2e000
    546c:	ldr	pc, [ip, #3596]!	; 0xe0c

00005470 <SSL_shutdown@plt>:
    5470:	add	ip, pc, #0, 12
    5474:	add	ip, ip, #188416	; 0x2e000
    5478:	ldr	pc, [ip, #3588]!	; 0xe04

0000547c <rb_bh_create@plt>:
    547c:	add	ip, pc, #0, 12
    5480:	add	ip, ip, #188416	; 0x2e000
    5484:	ldr	pc, [ip, #3580]!	; 0xdfc

00005488 <dup2@plt>:
    5488:	add	ip, pc, #0, 12
    548c:	add	ip, ip, #188416	; 0x2e000
    5490:	ldr	pc, [ip, #3572]!	; 0xdf4

00005494 <getpid@plt>:
    5494:	add	ip, pc, #0, 12
    5498:	add	ip, ip, #188416	; 0x2e000
    549c:	ldr	pc, [ip, #3564]!	; 0xdec

000054a0 <rb_writev@plt>:
    54a0:	add	ip, pc, #0, 12
    54a4:	add	ip, ip, #188416	; 0x2e000
    54a8:	ldr	pc, [ip, #3556]!	; 0xde4

000054ac <RAND_bytes@plt>:
    54ac:	add	ip, pc, #0, 12
    54b0:	add	ip, ip, #188416	; 0x2e000
    54b4:	ldr	pc, [ip, #3548]!	; 0xddc

000054b8 <rb_linebuf_newbuf@plt>:
    54b8:	add	ip, pc, #0, 12
    54bc:	add	ip, ip, #188416	; 0x2e000
    54c0:	ldr	pc, [ip, #3540]!	; 0xdd4

000054c4 <rb_fdlist_init@plt>:
    54c4:	add	ip, pc, #0, 12
    54c8:	add	ip, ip, #188416	; 0x2e000
    54cc:	ldr	pc, [ip, #3532]!	; 0xdcc

000054d0 <rb_event_add@plt>:
    54d0:	add	ip, pc, #0, 12
    54d4:	add	ip, ip, #188416	; 0x2e000
    54d8:	ldr	pc, [ip, #3524]!	; 0xdc4

000054dc <readlink@plt>:
    54dc:	add	ip, pc, #0, 12
    54e0:	add	ip, ip, #188416	; 0x2e000
    54e4:	ldr	pc, [ip, #3516]!	; 0xdbc

000054e8 <htonl@plt>:
    54e8:	add	ip, pc, #0, 12
    54ec:	add	ip, ip, #188416	; 0x2e000
    54f0:	ldr	pc, [ip, #3508]!	; 0xdb4

000054f4 <SSL_CTX_new@plt>:
    54f4:	add	ip, pc, #0, 12
    54f8:	add	ip, ip, #188416	; 0x2e000
    54fc:	ldr	pc, [ip, #3500]!	; 0xdac

00005500 <rb_setup_fd@plt>:
    5500:	add	ip, pc, #0, 12
    5504:	add	ip, ip, #188416	; 0x2e000
    5508:	ldr	pc, [ip, #3492]!	; 0xda4

0000550c <recvmsg@plt>:
    550c:	add	ip, pc, #0, 12
    5510:	add	ip, ip, #188416	; 0x2e000
    5514:	ldr	pc, [ip, #3484]!	; 0xd9c

00005518 <rand@plt>:
    5518:	add	ip, pc, #0, 12
    551c:	add	ip, ip, #188416	; 0x2e000
    5520:	ldr	pc, [ip, #3476]!	; 0xd94

00005524 <rb_linebuf_init@plt>:
    5524:	add	ip, pc, #0, 12
    5528:	add	ip, ip, #188416	; 0x2e000
    552c:	ldr	pc, [ip, #3468]!	; 0xd8c

00005530 <__fxstat@plt>:
    5530:	add	ip, pc, #0, 12
    5534:	add	ip, ip, #188416	; 0x2e000
    5538:	ldr	pc, [ip, #3460]!	; 0xd84

0000553c <SSL_set_connect_state@plt>:
    553c:	add	ip, pc, #0, 12
    5540:	add	ip, ip, #188416	; 0x2e000
    5544:	ldr	pc, [ip, #3452]!	; 0xd7c

00005548 <rb_radixtree_elem_find@plt>:
    5548:	add	ip, pc, #0, 12
    554c:	add	ip, ip, #188416	; 0x2e000
    5550:	ldr	pc, [ip, #3444]!	; 0xd74

00005554 <rb_make_rb_dlink_node@plt>:
    5554:	add	ip, pc, #0, 12
    5558:	add	ip, ip, #188416	; 0x2e000
    555c:	ldr	pc, [ip, #3436]!	; 0xd6c

00005560 <rb_strlcat@plt>:
    5560:	add	ip, pc, #0, 12
    5564:	add	ip, ip, #188416	; 0x2e000
    5568:	ldr	pc, [ip, #3428]!	; 0xd64

0000556c <rb_spawn_process@plt>:
    556c:	add	ip, pc, #0, 12
    5570:	add	ip, ip, #188416	; 0x2e000
    5574:	ldr	pc, [ip, #3420]!	; 0xd5c

00005578 <EVP_sha512@plt>:
    5578:	add	ip, pc, #0, 12
    557c:	add	ip, ip, #188416	; 0x2e000
    5580:	ldr	pc, [ip, #3412]!	; 0xd54

00005584 <snprintf@plt>:
    5584:	add	ip, pc, #0, 12
    5588:	add	ip, ip, #188416	; 0x2e000
    558c:	ldr	pc, [ip, #3404]!	; 0xd4c

00005590 <RAND_status@plt>:
    5590:	add	ip, pc, #0, 12
    5594:	add	ip, ip, #188416	; 0x2e000
    5598:	ldr	pc, [ip, #3396]!	; 0xd44

0000559c <timerfd_create@plt>:
    559c:	add	ip, pc, #0, 12
    55a0:	add	ip, ip, #188416	; 0x2e000
    55a4:	ldr	pc, [ip, #3388]!	; 0xd3c

000055a8 <EVP_sha256@plt>:
    55a8:	add	ip, pc, #0, 12
    55ac:	add	ip, ip, #188416	; 0x2e000
    55b0:	ldr	pc, [ip, #3380]!	; 0xd34

000055b4 <strcspn@plt>:
    55b4:	add	ip, pc, #0, 12
    55b8:	add	ip, ip, #188416	; 0x2e000
    55bc:	ldr	pc, [ip, #3372]!	; 0xd2c

000055c0 <rb_linebuf_put@plt>:
    55c0:	add	ip, pc, #0, 12
    55c4:	add	ip, ip, #188416	; 0x2e000
    55c8:	ldr	pc, [ip, #3364]!	; 0xd24

000055cc <rb_listen@plt>:
    55cc:	add	ip, pc, #0, 12
    55d0:	add	ip, ip, #188416	; 0x2e000
    55d4:	ldr	pc, [ip, #3356]!	; 0xd1c

000055d8 <fcntl@plt>:
    55d8:	add	ip, pc, #0, 12
    55dc:	add	ip, ip, #188416	; 0x2e000
    55e0:	ldr	pc, [ip, #3348]!	; 0xd14

000055e4 <strncmp@plt>:
    55e4:	add	ip, pc, #0, 12
    55e8:	add	ip, ip, #188416	; 0x2e000
    55ec:	ldr	pc, [ip, #3340]!	; 0xd0c

000055f0 <kill@plt>:
    55f0:	add	ip, pc, #0, 12
    55f4:	add	ip, ip, #188416	; 0x2e000
    55f8:	ldr	pc, [ip, #3332]!	; 0xd04

000055fc <nanosleep@plt>:
    55fc:	add	ip, pc, #0, 12
    5600:	add	ip, ip, #188416	; 0x2e000
    5604:	ldr	pc, [ip, #3324]!	; 0xcfc

00005608 <rb_event_next@plt>:
    5608:	add	ip, pc, #0, 12
    560c:	add	ip, ip, #188416	; 0x2e000
    5610:	ldr	pc, [ip, #3316]!	; 0xcf4

00005614 <realloc@plt>:
    5614:	add	ip, pc, #0, 12
    5618:	add	ip, ip, #188416	; 0x2e000
    561c:	ldr	pc, [ip, #3308]!	; 0xcec

00005620 <timerfd_settime@plt>:
    5620:	add	ip, pc, #0, 12
    5624:	add	ip, ip, #188416	; 0x2e000
    5628:	ldr	pc, [ip, #3300]!	; 0xce4

0000562c <epoll_ctl@plt>:
    562c:	add	ip, pc, #0, 12
    5630:	add	ip, ip, #188416	; 0x2e000
    5634:	ldr	pc, [ip, #3292]!	; 0xcdc

00005638 <X509_free@plt>:
    5638:	add	ip, pc, #0, 12
    563c:	add	ip, ip, #188416	; 0x2e000
    5640:	ldr	pc, [ip, #3284]!	; 0xcd4

00005644 <readv@plt>:
    5644:	add	ip, pc, #0, 12
    5648:	add	ip, ip, #188416	; 0x2e000
    564c:	ldr	pc, [ip, #3276]!	; 0xccc

00005650 <getsockopt@plt>:
    5650:	add	ip, pc, #0, 12
    5654:	add	ip, ip, #188416	; 0x2e000
    5658:	ldr	pc, [ip, #3268]!	; 0xcc4

0000565c <pipe@plt>:
    565c:	add	ip, pc, #0, 12
    5660:	add	ip, ip, #188416	; 0x2e000
    5664:	ldr	pc, [ip, #3260]!	; 0xcbc

00005668 <OpenSSL_version@plt>:
    5668:	add	ip, pc, #0, 12
    566c:	add	ip, ip, #188416	; 0x2e000
    5670:	ldr	pc, [ip, #3252]!	; 0xcb4

00005674 <setsockopt@plt>:
    5674:	add	ip, pc, #0, 12
    5678:	add	ip, ip, #188416	; 0x2e000
    567c:	ldr	pc, [ip, #3244]!	; 0xcac

00005680 <SSL_get_error@plt>:
    5680:	add	ip, pc, #0, 12
    5684:	add	ip, ip, #188416	; 0x2e000
    5688:	ldr	pc, [ip, #3236]!	; 0xca4

0000568c <SSL_get_version@plt>:
    568c:	add	ip, pc, #0, 12
    5690:	add	ip, ip, #188416	; 0x2e000
    5694:	ldr	pc, [ip, #3228]!	; 0xc9c

00005698 <rb_radixtree_delete@plt>:
    5698:	add	ip, pc, #0, 12
    569c:	add	ip, ip, #188416	; 0x2e000
    56a0:	ldr	pc, [ip, #3220]!	; 0xc94

000056a4 <tolower@plt>:
    56a4:	add	ip, pc, #0, 12
    56a8:	add	ip, ip, #188416	; 0x2e000
    56ac:	ldr	pc, [ip, #3212]!	; 0xc8c

000056b0 <setenv@plt>:
    56b0:	add	ip, pc, #0, 12
    56b4:	add	ip, ip, #188416	; 0x2e000
    56b8:	ldr	pc, [ip, #3204]!	; 0xc84

000056bc <strcmp@plt>:
    56bc:	add	ip, pc, #0, 12
    56c0:	add	ip, ip, #188416	; 0x2e000
    56c4:	ldr	pc, [ip, #3196]!	; 0xc7c

000056c8 <__errno_location@plt>:
    56c8:	add	ip, pc, #0, 12
    56cc:	add	ip, ip, #188416	; 0x2e000
    56d0:	ldr	pc, [ip, #3188]!	; 0xc74

000056d4 <__cxa_finalize@plt>:
    56d4:	add	ip, pc, #0, 12
    56d8:	add	ip, ip, #188416	; 0x2e000
    56dc:	ldr	pc, [ip, #3180]!	; 0xc6c

000056e0 <sprintf@plt>:
    56e0:	add	ip, pc, #0, 12
    56e4:	add	ip, ip, #188416	; 0x2e000
    56e8:	ldr	pc, [ip, #3172]!	; 0xc64

000056ec <rb_bh_usage@plt>:
    56ec:	add	ip, pc, #0, 12
    56f0:	add	ip, ip, #188416	; 0x2e000
    56f4:	ldr	pc, [ip, #3164]!	; 0xc5c

000056f8 <SSL_CTX_set_verify@plt>:
    56f8:	add	ip, pc, #0, 12
    56fc:	add	ip, ip, #188416	; 0x2e000
    5700:	ldr	pc, [ip, #3156]!	; 0xc54

Disassembly of section .text:

00005704 <call_weak_fn>:
    5704:	ldr	r3, [pc, #20]	; 5720 <call_weak_fn+0x1c>
    5708:	ldr	r2, [pc, #20]	; 5724 <call_weak_fn+0x20>
    570c:	add	r3, pc, r3
    5710:	ldr	r2, [r3, r2]
    5714:	cmp	r2, #0
    5718:	bxeq	lr
    571c:	b	4ed0 <__gmon_start__@plt>
    5720:	.word	0x0002e8ec
    5724:	.word	0x00000368

00005728 <deregister_tm_clones>:
    5728:	ldr	r0, [pc, #44]	; 575c <deregister_tm_clones+0x34>
    572c:	ldr	r3, [pc, #44]	; 5760 <deregister_tm_clones+0x38>
    5730:	add	r0, pc, r0
    5734:	add	r3, pc, r3
    5738:	cmp	r3, r0
    573c:	ldr	r3, [pc, #32]	; 5764 <deregister_tm_clones+0x3c>
    5740:	add	r3, pc, r3
    5744:	bxeq	lr
    5748:	ldr	r2, [pc, #24]	; 5768 <deregister_tm_clones+0x40>
    574c:	ldr	r3, [r3, r2]
    5750:	cmp	r3, #0
    5754:	bxeq	lr
    5758:	bx	r3
    575c:	.word	0x0002f260
    5760:	.word	0x0002f25c
    5764:	.word	0x0002e8b8
    5768:	.word	0x00000384

0000576c <register_tm_clones>:
    576c:	ldr	r0, [pc, #56]	; 57ac <register_tm_clones+0x40>
    5770:	ldr	r3, [pc, #56]	; 57b0 <register_tm_clones+0x44>
    5774:	add	r0, pc, r0
    5778:	add	r3, pc, r3
    577c:	sub	r1, r3, r0
    5780:	ldr	r3, [pc, #44]	; 57b4 <register_tm_clones+0x48>
    5784:	asr	r1, r1, #2
    5788:	add	r3, pc, r3
    578c:	add	r1, r1, r1, lsr #31
    5790:	asrs	r1, r1, #1
    5794:	bxeq	lr
    5798:	ldr	r2, [pc, #24]	; 57b8 <register_tm_clones+0x4c>
    579c:	ldr	r3, [r3, r2]
    57a0:	cmp	r3, #0
    57a4:	bxeq	lr
    57a8:	bx	r3
    57ac:	.word	0x0002f21c
    57b0:	.word	0x0002f218
    57b4:	.word	0x0002e870
    57b8:	.word	0x00000394

000057bc <__do_global_dtors_aux>:
    57bc:	ldr	r3, [pc, #76]	; 5810 <__do_global_dtors_aux+0x54>
    57c0:	ldr	r2, [pc, #76]	; 5814 <__do_global_dtors_aux+0x58>
    57c4:	add	r3, pc, r3
    57c8:	add	r2, pc, r2
    57cc:	ldrb	r3, [r3]
    57d0:	cmp	r3, #0
    57d4:	bxne	lr
    57d8:	ldr	r3, [pc, #56]	; 5818 <__do_global_dtors_aux+0x5c>
    57dc:	push	{r4, lr}
    57e0:	ldr	r3, [r2, r3]
    57e4:	cmp	r3, #0
    57e8:	beq	57f8 <__do_global_dtors_aux+0x3c>
    57ec:	ldr	r3, [pc, #40]	; 581c <__do_global_dtors_aux+0x60>
    57f0:	ldr	r0, [pc, r3]
    57f4:	bl	56d4 <__cxa_finalize@plt>
    57f8:	bl	5728 <deregister_tm_clones>
    57fc:	ldr	r3, [pc, #28]	; 5820 <__do_global_dtors_aux+0x64>
    5800:	mov	r2, #1
    5804:	add	r3, pc, r3
    5808:	strb	r2, [r3]
    580c:	pop	{r4, pc}
    5810:	.word	0x0002f1cc
    5814:	.word	0x0002e830
    5818:	.word	0x00000424
    581c:	.word	0x0002ec34
    5820:	.word	0x0002f18c

00005824 <frame_dummy>:
    5824:	b	576c <register_tm_clones>

00005828 <rb_spawn_process>:
    5828:	push	{r4, r5, fp, lr}
    582c:	add	fp, sp, #8
    5830:	sub	sp, sp, #392	; 0x188
    5834:	str	r0, [fp, #-12]
    5838:	str	r1, [fp, #-16]
    583c:	ldr	r0, [fp, #-16]
    5840:	str	r0, [fp, #-24]	; 0xffffffe8
    5844:	add	r0, sp, #32
    5848:	bl	5098 <posix_spawnattr_init@plt>
    584c:	add	r1, sp, #32
    5850:	str	r0, [sp, #28]
    5854:	mov	r0, r1
    5858:	movw	r1, #64	; 0x40
    585c:	sxth	r1, r1
    5860:	bl	51f4 <posix_spawnattr_setflags@plt>
    5864:	ldr	r1, [pc, #140]	; 58f8 <rb_spawn_process+0xd0>
    5868:	ldr	r1, [pc, r1]
    586c:	ldr	r1, [r1]
    5870:	str	r1, [fp, #-28]	; 0xffffffe4
    5874:	ldr	r1, [fp, #-12]
    5878:	ldr	r2, [fp, #-24]	; 0xffffffe8
    587c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5880:	sub	ip, fp, #20
    5884:	str	r0, [sp, #24]
    5888:	mov	r0, ip
    588c:	movw	ip, #0
    5890:	str	r2, [sp, #20]
    5894:	mov	r2, ip
    5898:	add	ip, sp, #32
    589c:	str	r3, [sp, #16]
    58a0:	mov	r3, ip
    58a4:	ldr	ip, [sp, #20]
    58a8:	str	ip, [sp]
    58ac:	ldr	lr, [sp, #16]
    58b0:	str	lr, [sp, #4]
    58b4:	bl	51ac <posix_spawn@plt>
    58b8:	str	r0, [fp, #-32]	; 0xffffffe0
    58bc:	add	r0, sp, #32
    58c0:	bl	5224 <posix_spawnattr_destroy@plt>
    58c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    58c8:	cmp	r1, #0
    58cc:	beq	58ec <rb_spawn_process+0xc4>
    58d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    58d4:	str	r0, [sp, #12]
    58d8:	bl	56c8 <__errno_location@plt>
    58dc:	ldr	r1, [sp, #12]
    58e0:	str	r1, [r0]
    58e4:	mvn	r0, #0
    58e8:	str	r0, [fp, #-20]	; 0xffffffec
    58ec:	ldr	r0, [fp, #-20]	; 0xffffffec
    58f0:	sub	sp, fp, #8
    58f4:	pop	{r4, r5, fp, pc}
    58f8:	.word	0x0002eb3c

000058fc <rb_gettimeofday>:
    58fc:	push	{fp, lr}
    5900:	mov	fp, sp
    5904:	sub	sp, sp, #8
    5908:	str	r0, [sp, #4]
    590c:	str	r1, [sp]
    5910:	ldr	r0, [sp, #4]
    5914:	ldr	r1, [sp]
    5918:	bl	5134 <gettimeofday@plt>
    591c:	mov	sp, fp
    5920:	pop	{fp, pc}

00005924 <rb_sleep>:
    5924:	push	{fp, lr}
    5928:	mov	fp, sp
    592c:	sub	sp, sp, #16
    5930:	str	r0, [fp, #-4]
    5934:	str	r1, [sp, #8]
    5938:	ldr	r0, [sp, #8]
    593c:	movw	r1, #1000	; 0x3e8
    5940:	mul	r0, r0, r1
    5944:	str	r0, [sp, #4]
    5948:	ldr	r0, [fp, #-4]
    594c:	str	r0, [sp]
    5950:	mov	r0, sp
    5954:	movw	r1, #0
    5958:	bl	55fc <nanosleep@plt>
    595c:	mov	sp, fp
    5960:	pop	{fp, pc}

00005964 <rb_strerror>:
    5964:	push	{fp, lr}
    5968:	mov	fp, sp
    596c:	sub	sp, sp, #8
    5970:	str	r0, [sp, #4]
    5974:	ldr	r0, [sp, #4]
    5978:	bl	4d5c <strerror@plt>
    597c:	mov	sp, fp
    5980:	pop	{fp, pc}

00005984 <rb_kill>:
    5984:	push	{fp, lr}
    5988:	mov	fp, sp
    598c:	sub	sp, sp, #8
    5990:	str	r0, [sp, #4]
    5994:	str	r1, [sp]
    5998:	ldr	r0, [sp, #4]
    599c:	ldr	r1, [sp]
    59a0:	bl	55f0 <kill@plt>
    59a4:	mov	sp, fp
    59a8:	pop	{fp, pc}

000059ac <rb_setenv>:
    59ac:	push	{fp, lr}
    59b0:	mov	fp, sp
    59b4:	sub	sp, sp, #16
    59b8:	str	r0, [fp, #-4]
    59bc:	str	r1, [sp, #8]
    59c0:	str	r2, [sp, #4]
    59c4:	ldr	r0, [fp, #-4]
    59c8:	ldr	r1, [sp, #8]
    59cc:	ldr	r2, [sp, #4]
    59d0:	bl	56b0 <setenv@plt>
    59d4:	mov	sp, fp
    59d8:	pop	{fp, pc}

000059dc <rb_waitpid>:
    59dc:	push	{fp, lr}
    59e0:	mov	fp, sp
    59e4:	sub	sp, sp, #16
    59e8:	str	r0, [fp, #-4]
    59ec:	str	r1, [sp, #8]
    59f0:	str	r2, [sp, #4]
    59f4:	ldr	r0, [fp, #-4]
    59f8:	ldr	r1, [sp, #8]
    59fc:	ldr	r2, [sp, #4]
    5a00:	bl	5260 <waitpid@plt>
    5a04:	mov	sp, fp
    5a08:	pop	{fp, pc}

00005a0c <rb_getpid>:
    5a0c:	push	{fp, lr}
    5a10:	mov	fp, sp
    5a14:	bl	5494 <getpid@plt>
    5a18:	pop	{fp, pc}

00005a1c <rb_path_to_self>:
    5a1c:	push	{fp, lr}
    5a20:	mov	fp, sp
    5a24:	sub	sp, sp, #8
    5a28:	ldr	r0, [pc, #60]	; 5a6c <rb_path_to_self+0x50>
    5a2c:	add	r0, pc, r0
    5a30:	ldr	r1, [pc, #56]	; 5a70 <rb_path_to_self+0x54>
    5a34:	add	r1, pc, r1
    5a38:	movw	r2, #4096	; 0x1000
    5a3c:	bl	54dc <readlink@plt>
    5a40:	cmn	r0, #1
    5a44:	beq	5a58 <rb_path_to_self+0x3c>
    5a48:	ldr	r0, [pc, #36]	; 5a74 <rb_path_to_self+0x58>
    5a4c:	add	r0, pc, r0
    5a50:	str	r0, [sp, #4]
    5a54:	b	5a60 <rb_path_to_self+0x44>
    5a58:	movw	r0, #0
    5a5c:	str	r0, [sp, #4]
    5a60:	ldr	r0, [sp, #4]
    5a64:	mov	sp, fp
    5a68:	pop	{fp, pc}
    5a6c:	.word	0x0001c64c
    5a70:	.word	0x0002ef5d
    5a74:	.word	0x0002ef45

00005a78 <rb_init_netio_win32>:
    5a78:	push	{fp, lr}
    5a7c:	mov	fp, sp
    5a80:	bl	56c8 <__errno_location@plt>
    5a84:	movw	r1, #38	; 0x26
    5a88:	str	r1, [r0]
    5a8c:	mvn	r0, #0
    5a90:	pop	{fp, pc}

00005a94 <rb_setselect_win32>:
    5a94:	push	{fp, lr}
    5a98:	mov	fp, sp
    5a9c:	sub	sp, sp, #16
    5aa0:	str	r0, [fp, #-4]
    5aa4:	str	r1, [sp, #8]
    5aa8:	str	r2, [sp, #4]
    5aac:	str	r3, [sp]
    5ab0:	bl	56c8 <__errno_location@plt>
    5ab4:	movw	r1, #38	; 0x26
    5ab8:	str	r1, [r0]
    5abc:	mov	sp, fp
    5ac0:	pop	{fp, pc}

00005ac4 <rb_select_win32>:
    5ac4:	push	{fp, lr}
    5ac8:	mov	fp, sp
    5acc:	sub	sp, sp, #8
    5ad0:	str	r0, [sp, #4]
    5ad4:	bl	56c8 <__errno_location@plt>
    5ad8:	movw	r1, #38	; 0x26
    5adc:	str	r1, [r0]
    5ae0:	mvn	r0, #0
    5ae4:	mov	sp, fp
    5ae8:	pop	{fp, pc}

00005aec <rb_setup_fd_win32>:
    5aec:	push	{fp, lr}
    5af0:	mov	fp, sp
    5af4:	sub	sp, sp, #8
    5af8:	str	r0, [sp, #4]
    5afc:	bl	56c8 <__errno_location@plt>
    5b00:	movw	r1, #38	; 0x26
    5b04:	str	r1, [r0]
    5b08:	mvn	r0, #0
    5b0c:	mov	sp, fp
    5b10:	pop	{fp, pc}

00005b14 <rb_crypt>:
    5b14:	push	{fp, lr}
    5b18:	mov	fp, sp
    5b1c:	sub	sp, sp, #16
    5b20:	str	r0, [sp, #8]
    5b24:	str	r1, [sp, #4]
    5b28:	ldr	r0, [sp, #4]
    5b2c:	ldrb	r0, [r0]
    5b30:	cmp	r0, #36	; 0x24
    5b34:	bne	5bdc <rb_crypt+0xc8>
    5b38:	ldr	r0, [sp, #4]
    5b3c:	ldrb	r0, [r0, #2]
    5b40:	cmp	r0, #36	; 0x24
    5b44:	beq	5b58 <rb_crypt+0x44>
    5b48:	ldr	r0, [sp, #4]
    5b4c:	ldrb	r0, [r0, #3]
    5b50:	cmp	r0, #36	; 0x24
    5b54:	bne	5bdc <rb_crypt+0xc8>
    5b58:	ldr	r0, [sp, #4]
    5b5c:	ldrb	r0, [r0, #1]
    5b60:	mov	r1, r0
    5b64:	cmp	r0, #49	; 0x31
    5b68:	str	r1, [sp]
    5b6c:	beq	5b94 <rb_crypt+0x80>
    5b70:	b	5b74 <rb_crypt+0x60>
    5b74:	ldr	r0, [sp]
    5b78:	cmp	r0, #53	; 0x35
    5b7c:	beq	5ba8 <rb_crypt+0x94>
    5b80:	b	5b84 <rb_crypt+0x70>
    5b84:	ldr	r0, [sp]
    5b88:	cmp	r0, #54	; 0x36
    5b8c:	beq	5bbc <rb_crypt+0xa8>
    5b90:	b	5bd0 <rb_crypt+0xbc>
    5b94:	ldr	r0, [sp, #8]
    5b98:	ldr	r1, [sp, #4]
    5b9c:	bl	5bf8 <rb_md5_crypt>
    5ba0:	str	r0, [fp, #-4]
    5ba4:	b	5bec <rb_crypt+0xd8>
    5ba8:	ldr	r0, [sp, #8]
    5bac:	ldr	r1, [sp, #4]
    5bb0:	bl	6388 <rb_sha256_crypt>
    5bb4:	str	r0, [fp, #-4]
    5bb8:	b	5bec <rb_crypt+0xd8>
    5bbc:	ldr	r0, [sp, #8]
    5bc0:	ldr	r1, [sp, #4]
    5bc4:	bl	6444 <rb_sha512_crypt>
    5bc8:	str	r0, [fp, #-4]
    5bcc:	b	5bec <rb_crypt+0xd8>
    5bd0:	movw	r0, #0
    5bd4:	str	r0, [fp, #-4]
    5bd8:	b	5bec <rb_crypt+0xd8>
    5bdc:	ldr	r0, [sp, #8]
    5be0:	ldr	r1, [sp, #4]
    5be4:	bl	654c <rb_des_crypt>
    5be8:	str	r0, [fp, #-4]
    5bec:	ldr	r0, [fp, #-4]
    5bf0:	mov	sp, fp
    5bf4:	pop	{fp, pc}

00005bf8 <rb_md5_crypt>:
    5bf8:	push	{r4, r5, fp, lr}
    5bfc:	add	fp, sp, #8
    5c00:	sub	sp, sp, #328	; 0x148
    5c04:	ldr	r2, [pc, #1784]	; 6304 <rb_md5_crypt+0x70c>
    5c08:	add	r2, pc, r2
    5c0c:	ldr	r3, [pc, #1780]	; 6308 <rb_md5_crypt+0x710>
    5c10:	add	r3, pc, r3
    5c14:	str	r0, [fp, #-12]
    5c18:	str	r1, [fp, #-16]
    5c1c:	ldr	r0, [fp, #-16]
    5c20:	str	r0, [r3]
    5c24:	ldr	r0, [r3]
    5c28:	ldr	r1, [r2]
    5c2c:	ldr	r2, [r2]
    5c30:	str	r0, [sp, #108]	; 0x6c
    5c34:	mov	r0, r2
    5c38:	str	r1, [sp, #104]	; 0x68
    5c3c:	bl	51b8 <strlen@plt>
    5c40:	ldr	r1, [sp, #108]	; 0x6c
    5c44:	str	r0, [sp, #100]	; 0x64
    5c48:	mov	r0, r1
    5c4c:	ldr	r1, [sp, #104]	; 0x68
    5c50:	ldr	r2, [sp, #100]	; 0x64
    5c54:	bl	55e4 <strncmp@plt>
    5c58:	cmp	r0, #0
    5c5c:	bne	5c90 <rb_md5_crypt+0x98>
    5c60:	ldr	r0, [pc, #1700]	; 630c <rb_md5_crypt+0x714>
    5c64:	add	r0, pc, r0
    5c68:	ldr	r1, [pc, #1696]	; 6310 <rb_md5_crypt+0x718>
    5c6c:	add	r1, pc, r1
    5c70:	ldr	r1, [r1]
    5c74:	str	r0, [sp, #96]	; 0x60
    5c78:	mov	r0, r1
    5c7c:	bl	51b8 <strlen@plt>
    5c80:	ldr	r1, [sp, #96]	; 0x60
    5c84:	ldr	r2, [r1]
    5c88:	add	r0, r2, r0
    5c8c:	str	r0, [r1]
    5c90:	ldr	r0, [pc, #1660]	; 6314 <rb_md5_crypt+0x71c>
    5c94:	add	r0, pc, r0
    5c98:	ldr	r1, [pc, #1656]	; 6318 <rb_md5_crypt+0x720>
    5c9c:	add	r1, pc, r1
    5ca0:	ldr	r1, [r1]
    5ca4:	str	r1, [r0]
    5ca8:	ldr	r0, [pc, #1644]	; 631c <rb_md5_crypt+0x724>
    5cac:	add	r0, pc, r0
    5cb0:	ldr	r0, [r0]
    5cb4:	ldrb	r0, [r0]
    5cb8:	cmp	r0, #0
    5cbc:	movw	r0, #0
    5cc0:	str	r0, [sp, #92]	; 0x5c
    5cc4:	beq	5d14 <rb_md5_crypt+0x11c>
    5cc8:	ldr	r0, [pc, #1616]	; 6320 <rb_md5_crypt+0x728>
    5ccc:	add	r0, pc, r0
    5cd0:	ldr	r0, [r0]
    5cd4:	ldrb	r0, [r0]
    5cd8:	cmp	r0, #36	; 0x24
    5cdc:	movw	r0, #0
    5ce0:	str	r0, [sp, #92]	; 0x5c
    5ce4:	beq	5d14 <rb_md5_crypt+0x11c>
    5ce8:	ldr	r0, [pc, #1588]	; 6324 <rb_md5_crypt+0x72c>
    5cec:	add	r0, pc, r0
    5cf0:	ldr	r1, [pc, #1584]	; 6328 <rb_md5_crypt+0x730>
    5cf4:	add	r1, pc, r1
    5cf8:	ldr	r1, [r1]
    5cfc:	ldr	r0, [r0]
    5d00:	add	r0, r0, #8
    5d04:	cmp	r1, r0
    5d08:	movw	r0, #0
    5d0c:	movcc	r0, #1
    5d10:	str	r0, [sp, #92]	; 0x5c
    5d14:	ldr	r0, [sp, #92]	; 0x5c
    5d18:	tst	r0, #1
    5d1c:	beq	5d3c <rb_md5_crypt+0x144>
    5d20:	b	5d24 <rb_md5_crypt+0x12c>
    5d24:	ldr	r0, [pc, #1620]	; 6380 <rb_md5_crypt+0x788>
    5d28:	add	r0, pc, r0
    5d2c:	ldr	r1, [r0]
    5d30:	add	r1, r1, #1
    5d34:	str	r1, [r0]
    5d38:	b	5ca8 <rb_md5_crypt+0xb0>
    5d3c:	ldr	r0, [pc, #1524]	; 6338 <rb_md5_crypt+0x740>
    5d40:	add	r0, pc, r0
    5d44:	ldr	r1, [pc, #1520]	; 633c <rb_md5_crypt+0x744>
    5d48:	add	r1, pc, r1
    5d4c:	ldr	r1, [r1]
    5d50:	ldr	r0, [r0]
    5d54:	sub	r0, r1, r0
    5d58:	str	r0, [sp, #136]	; 0x88
    5d5c:	sub	r0, fp, #104	; 0x68
    5d60:	bl	7d84 <MD5Init>
    5d64:	ldr	r1, [fp, #-12]
    5d68:	ldr	r0, [fp, #-12]
    5d6c:	str	r1, [sp, #88]	; 0x58
    5d70:	bl	51b8 <strlen@plt>
    5d74:	sub	r1, fp, #104	; 0x68
    5d78:	str	r0, [sp, #84]	; 0x54
    5d7c:	mov	r0, r1
    5d80:	ldr	r1, [sp, #88]	; 0x58
    5d84:	ldr	r2, [sp, #84]	; 0x54
    5d88:	bl	7df0 <MD5Update>
    5d8c:	ldr	r0, [pc, #1440]	; 6334 <rb_md5_crypt+0x73c>
    5d90:	add	r0, pc, r0
    5d94:	ldr	r1, [r0]
    5d98:	ldr	r0, [r0]
    5d9c:	str	r1, [sp, #80]	; 0x50
    5da0:	bl	51b8 <strlen@plt>
    5da4:	sub	r1, fp, #104	; 0x68
    5da8:	str	r0, [sp, #76]	; 0x4c
    5dac:	mov	r0, r1
    5db0:	ldr	r1, [sp, #80]	; 0x50
    5db4:	ldr	r2, [sp, #76]	; 0x4c
    5db8:	bl	7df0 <MD5Update>
    5dbc:	ldr	r0, [pc, #1388]	; 6330 <rb_md5_crypt+0x738>
    5dc0:	add	r0, pc, r0
    5dc4:	ldr	r1, [r0]
    5dc8:	ldr	r2, [sp, #136]	; 0x88
    5dcc:	sub	r0, fp, #104	; 0x68
    5dd0:	bl	7df0 <MD5Update>
    5dd4:	add	r0, sp, #144	; 0x90
    5dd8:	bl	7d84 <MD5Init>
    5ddc:	ldr	r1, [fp, #-12]
    5de0:	ldr	r0, [fp, #-12]
    5de4:	str	r1, [sp, #72]	; 0x48
    5de8:	bl	51b8 <strlen@plt>
    5dec:	add	r1, sp, #144	; 0x90
    5df0:	str	r0, [sp, #68]	; 0x44
    5df4:	mov	r0, r1
    5df8:	ldr	r1, [sp, #72]	; 0x48
    5dfc:	ldr	r2, [sp, #68]	; 0x44
    5e00:	bl	7df0 <MD5Update>
    5e04:	ldr	r0, [pc, #1312]	; 632c <rb_md5_crypt+0x734>
    5e08:	add	r0, pc, r0
    5e0c:	ldr	r1, [r0]
    5e10:	ldr	r2, [sp, #136]	; 0x88
    5e14:	add	r0, sp, #144	; 0x90
    5e18:	bl	7df0 <MD5Update>
    5e1c:	ldr	r1, [fp, #-12]
    5e20:	ldr	r0, [fp, #-12]
    5e24:	str	r1, [sp, #64]	; 0x40
    5e28:	bl	51b8 <strlen@plt>
    5e2c:	add	r1, sp, #144	; 0x90
    5e30:	str	r0, [sp, #60]	; 0x3c
    5e34:	mov	r0, r1
    5e38:	ldr	r1, [sp, #64]	; 0x40
    5e3c:	ldr	r2, [sp, #60]	; 0x3c
    5e40:	bl	7df0 <MD5Update>
    5e44:	add	r0, sp, #112	; 0x70
    5e48:	add	r1, sp, #144	; 0x90
    5e4c:	bl	7f48 <MD5Final>
    5e50:	ldr	r0, [fp, #-12]
    5e54:	bl	51b8 <strlen@plt>
    5e58:	str	r0, [sp, #132]	; 0x84
    5e5c:	ldr	r0, [sp, #132]	; 0x84
    5e60:	cmp	r0, #0
    5e64:	ble	5ebc <rb_md5_crypt+0x2c4>
    5e68:	add	r1, sp, #112	; 0x70
    5e6c:	ldr	r0, [sp, #132]	; 0x84
    5e70:	cmp	r0, #16
    5e74:	str	r1, [sp, #56]	; 0x38
    5e78:	ble	5e88 <rb_md5_crypt+0x290>
    5e7c:	movw	r0, #16
    5e80:	str	r0, [sp, #52]	; 0x34
    5e84:	b	5e90 <rb_md5_crypt+0x298>
    5e88:	ldr	r0, [sp, #132]	; 0x84
    5e8c:	str	r0, [sp, #52]	; 0x34
    5e90:	ldr	r0, [sp, #52]	; 0x34
    5e94:	sub	r1, fp, #104	; 0x68
    5e98:	str	r0, [sp, #48]	; 0x30
    5e9c:	mov	r0, r1
    5ea0:	ldr	r1, [sp, #56]	; 0x38
    5ea4:	ldr	r2, [sp, #48]	; 0x30
    5ea8:	bl	7df0 <MD5Update>
    5eac:	ldr	r0, [sp, #132]	; 0x84
    5eb0:	sub	r0, r0, #16
    5eb4:	str	r0, [sp, #132]	; 0x84
    5eb8:	b	5e5c <rb_md5_crypt+0x264>
    5ebc:	add	r0, sp, #112	; 0x70
    5ec0:	movw	r1, #0
    5ec4:	and	r1, r1, #255	; 0xff
    5ec8:	movw	r2, #16
    5ecc:	bl	4ff0 <memset@plt>
    5ed0:	ldr	r0, [fp, #-12]
    5ed4:	bl	51b8 <strlen@plt>
    5ed8:	str	r0, [sp, #128]	; 0x80
    5edc:	ldr	r0, [sp, #128]	; 0x80
    5ee0:	cmp	r0, #0
    5ee4:	beq	5f30 <rb_md5_crypt+0x338>
    5ee8:	ldr	r0, [sp, #128]	; 0x80
    5eec:	and	r0, r0, #1
    5ef0:	cmp	r0, #0
    5ef4:	beq	5f0c <rb_md5_crypt+0x314>
    5ef8:	add	r1, sp, #112	; 0x70
    5efc:	sub	r0, fp, #104	; 0x68
    5f00:	movw	r2, #1
    5f04:	bl	7df0 <MD5Update>
    5f08:	b	5f1c <rb_md5_crypt+0x324>
    5f0c:	ldr	r1, [fp, #-12]
    5f10:	sub	r0, fp, #104	; 0x68
    5f14:	movw	r2, #1
    5f18:	bl	7df0 <MD5Update>
    5f1c:	b	5f20 <rb_md5_crypt+0x328>
    5f20:	ldr	r0, [sp, #128]	; 0x80
    5f24:	lsr	r0, r0, #1
    5f28:	str	r0, [sp, #128]	; 0x80
    5f2c:	b	5edc <rb_md5_crypt+0x2e4>
    5f30:	ldr	r0, [pc, #1048]	; 6350 <rb_md5_crypt+0x758>
    5f34:	add	r0, pc, r0
    5f38:	ldr	r1, [pc, #1044]	; 6354 <rb_md5_crypt+0x75c>
    5f3c:	add	r1, pc, r1
    5f40:	ldr	r1, [r1]
    5f44:	movw	r2, #120	; 0x78
    5f48:	bl	5068 <rb_strlcpy@plt>
    5f4c:	ldr	r1, [pc, #1012]	; 6348 <rb_md5_crypt+0x750>
    5f50:	add	r1, pc, r1
    5f54:	ldr	r2, [pc, #1008]	; 634c <rb_md5_crypt+0x754>
    5f58:	add	r2, pc, r2
    5f5c:	ldr	r2, [r2]
    5f60:	ldr	r3, [sp, #136]	; 0x88
    5f64:	str	r0, [sp, #44]	; 0x2c
    5f68:	mov	r0, r1
    5f6c:	mov	r1, r2
    5f70:	mov	r2, r3
    5f74:	bl	5284 <strncat@plt>
    5f78:	ldr	r1, [pc, #960]	; 6340 <rb_md5_crypt+0x748>
    5f7c:	add	r1, pc, r1
    5f80:	ldr	r2, [pc, #956]	; 6344 <rb_md5_crypt+0x74c>
    5f84:	add	r2, pc, r2
    5f88:	str	r0, [sp, #40]	; 0x28
    5f8c:	mov	r0, r1
    5f90:	mov	r1, r2
    5f94:	movw	r2, #120	; 0x78
    5f98:	bl	5560 <rb_strlcat@plt>
    5f9c:	add	r1, sp, #112	; 0x70
    5fa0:	str	r0, [sp, #36]	; 0x24
    5fa4:	mov	r0, r1
    5fa8:	sub	r1, fp, #104	; 0x68
    5fac:	bl	7f48 <MD5Final>
    5fb0:	movw	r0, #0
    5fb4:	str	r0, [sp, #128]	; 0x80
    5fb8:	ldr	r0, [sp, #128]	; 0x80
    5fbc:	cmp	r0, #1000	; 0x3e8
    5fc0:	bcs	6114 <rb_md5_crypt+0x51c>
    5fc4:	add	r0, sp, #144	; 0x90
    5fc8:	bl	7d84 <MD5Init>
    5fcc:	ldr	r0, [sp, #128]	; 0x80
    5fd0:	and	r0, r0, #1
    5fd4:	cmp	r0, #0
    5fd8:	beq	6008 <rb_md5_crypt+0x410>
    5fdc:	ldr	r1, [fp, #-12]
    5fe0:	ldr	r0, [fp, #-12]
    5fe4:	str	r1, [sp, #32]
    5fe8:	bl	51b8 <strlen@plt>
    5fec:	add	r1, sp, #144	; 0x90
    5ff0:	str	r0, [sp, #28]
    5ff4:	mov	r0, r1
    5ff8:	ldr	r1, [sp, #32]
    5ffc:	ldr	r2, [sp, #28]
    6000:	bl	7df0 <MD5Update>
    6004:	b	6018 <rb_md5_crypt+0x420>
    6008:	add	r1, sp, #112	; 0x70
    600c:	add	r0, sp, #144	; 0x90
    6010:	movw	r2, #16
    6014:	bl	7df0 <MD5Update>
    6018:	ldr	r0, [sp, #128]	; 0x80
    601c:	movw	r1, #43691	; 0xaaab
    6020:	movt	r1, #43690	; 0xaaaa
    6024:	umull	r1, r2, r0, r1
    6028:	lsr	r2, r2, #1
    602c:	add	r2, r2, r2, lsl #1
    6030:	sub	r0, r0, r2
    6034:	cmp	r0, #0
    6038:	beq	6054 <rb_md5_crypt+0x45c>
    603c:	ldr	r0, [pc, #824]	; 637c <rb_md5_crypt+0x784>
    6040:	add	r0, pc, r0
    6044:	ldr	r1, [r0]
    6048:	ldr	r2, [sp, #136]	; 0x88
    604c:	add	r0, sp, #144	; 0x90
    6050:	bl	7df0 <MD5Update>
    6054:	ldr	r0, [sp, #128]	; 0x80
    6058:	movw	r1, #18725	; 0x4925
    605c:	movt	r1, #9362	; 0x2492
    6060:	umull	r1, r2, r0, r1
    6064:	sub	r3, r0, r2
    6068:	add	r2, r2, r3, lsr #1
    606c:	lsr	r3, r2, #2
    6070:	lsl	r3, r3, #3
    6074:	sub	r2, r3, r2, lsr #2
    6078:	sub	r0, r0, r2
    607c:	cmp	r0, #0
    6080:	beq	60ac <rb_md5_crypt+0x4b4>
    6084:	ldr	r1, [fp, #-12]
    6088:	ldr	r0, [fp, #-12]
    608c:	str	r1, [sp, #24]
    6090:	bl	51b8 <strlen@plt>
    6094:	add	r1, sp, #144	; 0x90
    6098:	str	r0, [sp, #20]
    609c:	mov	r0, r1
    60a0:	ldr	r1, [sp, #24]
    60a4:	ldr	r2, [sp, #20]
    60a8:	bl	7df0 <MD5Update>
    60ac:	ldr	r0, [sp, #128]	; 0x80
    60b0:	and	r0, r0, #1
    60b4:	cmp	r0, #0
    60b8:	beq	60d0 <rb_md5_crypt+0x4d8>
    60bc:	add	r1, sp, #112	; 0x70
    60c0:	add	r0, sp, #144	; 0x90
    60c4:	movw	r2, #16
    60c8:	bl	7df0 <MD5Update>
    60cc:	b	60f8 <rb_md5_crypt+0x500>
    60d0:	ldr	r1, [fp, #-12]
    60d4:	ldr	r0, [fp, #-12]
    60d8:	str	r1, [sp, #16]
    60dc:	bl	51b8 <strlen@plt>
    60e0:	add	r1, sp, #144	; 0x90
    60e4:	str	r0, [sp, #12]
    60e8:	mov	r0, r1
    60ec:	ldr	r1, [sp, #16]
    60f0:	ldr	r2, [sp, #12]
    60f4:	bl	7df0 <MD5Update>
    60f8:	add	r0, sp, #112	; 0x70
    60fc:	add	r1, sp, #144	; 0x90
    6100:	bl	7f48 <MD5Final>
    6104:	ldr	r0, [sp, #128]	; 0x80
    6108:	add	r0, r0, #1
    610c:	str	r0, [sp, #128]	; 0x80
    6110:	b	5fb8 <rb_md5_crypt+0x3c0>
    6114:	ldr	r0, [pc, #600]	; 6374 <rb_md5_crypt+0x77c>
    6118:	add	r0, pc, r0
    611c:	ldr	r1, [pc, #596]	; 6378 <rb_md5_crypt+0x780>
    6120:	add	r1, pc, r1
    6124:	ldr	r2, [pc, #600]	; 6384 <rb_md5_crypt+0x78c>
    6128:	add	r2, pc, r2
    612c:	str	r0, [sp, #8]
    6130:	mov	r0, r2
    6134:	str	r1, [sp, #4]
    6138:	bl	51b8 <strlen@plt>
    613c:	ldr	r1, [sp, #4]
    6140:	add	r0, r1, r0
    6144:	ldr	r2, [sp, #8]
    6148:	str	r0, [r2]
    614c:	ldrb	r0, [sp, #112]	; 0x70
    6150:	lsl	r0, r0, #16
    6154:	ldrb	r3, [sp, #118]	; 0x76
    6158:	lsl	r3, r3, #8
    615c:	orr	r0, r0, r3
    6160:	ldrb	r3, [sp, #124]	; 0x7c
    6164:	orr	r0, r0, r3
    6168:	str	r0, [sp, #140]	; 0x8c
    616c:	ldr	r0, [r2]
    6170:	ldr	r1, [sp, #140]	; 0x8c
    6174:	movw	r2, #4
    6178:	bl	8008 <_crypt_to64>
    617c:	ldr	r0, [pc, #492]	; 6370 <rb_md5_crypt+0x778>
    6180:	add	r0, pc, r0
    6184:	ldr	r1, [r0]
    6188:	add	r1, r1, #4
    618c:	str	r1, [r0]
    6190:	ldrb	r1, [sp, #113]	; 0x71
    6194:	lsl	r1, r1, #16
    6198:	ldrb	r2, [sp, #119]	; 0x77
    619c:	lsl	r2, r2, #8
    61a0:	orr	r1, r1, r2
    61a4:	ldrb	r2, [sp, #125]	; 0x7d
    61a8:	orr	r1, r1, r2
    61ac:	str	r1, [sp, #140]	; 0x8c
    61b0:	ldr	r0, [r0]
    61b4:	ldr	r1, [sp, #140]	; 0x8c
    61b8:	movw	r2, #4
    61bc:	bl	8008 <_crypt_to64>
    61c0:	ldr	r0, [pc, #420]	; 636c <rb_md5_crypt+0x774>
    61c4:	add	r0, pc, r0
    61c8:	ldr	r1, [r0]
    61cc:	add	r1, r1, #4
    61d0:	str	r1, [r0]
    61d4:	ldrb	r1, [sp, #114]	; 0x72
    61d8:	lsl	r1, r1, #16
    61dc:	ldrb	r2, [sp, #120]	; 0x78
    61e0:	lsl	r2, r2, #8
    61e4:	orr	r1, r1, r2
    61e8:	ldrb	r2, [sp, #126]	; 0x7e
    61ec:	orr	r1, r1, r2
    61f0:	str	r1, [sp, #140]	; 0x8c
    61f4:	ldr	r0, [r0]
    61f8:	ldr	r1, [sp, #140]	; 0x8c
    61fc:	movw	r2, #4
    6200:	bl	8008 <_crypt_to64>
    6204:	ldr	r0, [pc, #348]	; 6368 <rb_md5_crypt+0x770>
    6208:	add	r0, pc, r0
    620c:	ldr	r1, [r0]
    6210:	add	r1, r1, #4
    6214:	str	r1, [r0]
    6218:	ldrb	r1, [sp, #115]	; 0x73
    621c:	lsl	r1, r1, #16
    6220:	ldrb	r2, [sp, #121]	; 0x79
    6224:	lsl	r2, r2, #8
    6228:	orr	r1, r1, r2
    622c:	ldrb	r2, [sp, #127]	; 0x7f
    6230:	orr	r1, r1, r2
    6234:	str	r1, [sp, #140]	; 0x8c
    6238:	ldr	r0, [r0]
    623c:	ldr	r1, [sp, #140]	; 0x8c
    6240:	movw	r2, #4
    6244:	bl	8008 <_crypt_to64>
    6248:	ldr	r0, [pc, #276]	; 6364 <rb_md5_crypt+0x76c>
    624c:	add	r0, pc, r0
    6250:	ldr	r1, [r0]
    6254:	add	r1, r1, #4
    6258:	str	r1, [r0]
    625c:	ldrb	r1, [sp, #116]	; 0x74
    6260:	lsl	r1, r1, #16
    6264:	ldrb	r2, [sp, #122]	; 0x7a
    6268:	lsl	r2, r2, #8
    626c:	orr	r1, r1, r2
    6270:	ldrb	r2, [sp, #117]	; 0x75
    6274:	orr	r1, r1, r2
    6278:	str	r1, [sp, #140]	; 0x8c
    627c:	ldr	r0, [r0]
    6280:	ldr	r1, [sp, #140]	; 0x8c
    6284:	movw	r2, #4
    6288:	bl	8008 <_crypt_to64>
    628c:	ldr	r0, [pc, #204]	; 6360 <rb_md5_crypt+0x768>
    6290:	add	r0, pc, r0
    6294:	ldr	r1, [r0]
    6298:	add	r1, r1, #4
    629c:	str	r1, [r0]
    62a0:	ldrb	r1, [sp, #123]	; 0x7b
    62a4:	str	r1, [sp, #140]	; 0x8c
    62a8:	ldr	r0, [r0]
    62ac:	ldr	r1, [sp, #140]	; 0x8c
    62b0:	movw	r2, #2
    62b4:	bl	8008 <_crypt_to64>
    62b8:	ldr	r0, [pc, #152]	; 6358 <rb_md5_crypt+0x760>
    62bc:	add	r0, pc, r0
    62c0:	add	r1, sp, #112	; 0x70
    62c4:	ldr	r2, [pc, #144]	; 635c <rb_md5_crypt+0x764>
    62c8:	add	r2, pc, r2
    62cc:	ldr	r3, [r2]
    62d0:	add	r3, r3, #2
    62d4:	str	r3, [r2]
    62d8:	ldr	r2, [r2]
    62dc:	movw	r3, #0
    62e0:	strb	r3, [r2]
    62e4:	str	r0, [sp]
    62e8:	mov	r0, r1
    62ec:	and	r1, r3, #255	; 0xff
    62f0:	movw	r2, #16
    62f4:	bl	4ff0 <memset@plt>
    62f8:	ldr	r0, [sp]
    62fc:	sub	sp, fp, #8
    6300:	pop	{r4, r5, fp, pc}
    6304:	.word	0x0002e820
    6308:	.word	0x000411d0
    630c:	.word	0x0004117c
    6310:	.word	0x0002e7bc
    6314:	.word	0x00041150
    6318:	.word	0x00041144
    631c:	.word	0x00041138
    6320:	.word	0x00041118
    6324:	.word	0x000410f4
    6328:	.word	0x000410f0
    632c:	.word	0x00040fd8
    6330:	.word	0x00041020
    6334:	.word	0x0002e698
    6338:	.word	0x000410a0
    633c:	.word	0x0004109c
    6340:	.word	0x00040e6c
    6344:	.word	0x0001c906
    6348:	.word	0x00040e98
    634c:	.word	0x00040e88
    6350:	.word	0x00040eb4
    6354:	.word	0x0002e4ec
    6358:	.word	0x00040b2c
    635c:	.word	0x00040b98
    6360:	.word	0x00040bd0
    6364:	.word	0x00040c14
    6368:	.word	0x00040c58
    636c:	.word	0x00040c9c
    6370:	.word	0x00040ce0
    6374:	.word	0x00040d48
    6378:	.word	0x00040cc8
    637c:	.word	0x00040da0
    6380:	.word	0x000410bc
    6384:	.word	0x00040cc0

00006388 <rb_sha256_crypt>:
    6388:	push	{fp, lr}
    638c:	mov	fp, sp
    6390:	sub	sp, sp, #32
    6394:	str	r0, [fp, #-8]
    6398:	str	r1, [fp, #-12]
    639c:	ldr	r0, [fp, #-12]
    63a0:	bl	51b8 <strlen@plt>
    63a4:	add	r0, r0, #21
    63a8:	add	r0, r0, #1
    63ac:	add	r0, r0, #43	; 0x2b
    63b0:	add	r0, r0, #1
    63b4:	str	r0, [sp, #16]
    63b8:	ldr	r0, [sp, #16]
    63bc:	bl	5374 <malloc@plt>
    63c0:	str	r0, [sp, #12]
    63c4:	ldr	r0, [sp, #12]
    63c8:	movw	r1, #0
    63cc:	cmp	r0, r1
    63d0:	bne	63e0 <rb_sha256_crypt+0x58>
    63d4:	movw	r0, #0
    63d8:	str	r0, [fp, #-4]
    63dc:	b	6430 <rb_sha256_crypt+0xa8>
    63e0:	ldr	r0, [pc, #84]	; 643c <rb_sha256_crypt+0xb4>
    63e4:	add	r0, pc, r0
    63e8:	ldr	r1, [pc, #80]	; 6440 <rb_sha256_crypt+0xb8>
    63ec:	add	r1, pc, r1
    63f0:	ldr	r2, [sp, #12]
    63f4:	str	r2, [r1]
    63f8:	ldr	r2, [sp, #16]
    63fc:	str	r2, [r0]
    6400:	ldr	r2, [fp, #-8]
    6404:	ldr	r3, [fp, #-12]
    6408:	ldr	r1, [r1]
    640c:	ldr	r0, [r0]
    6410:	str	r0, [sp, #8]
    6414:	mov	r0, r2
    6418:	str	r1, [sp, #4]
    641c:	mov	r1, r3
    6420:	ldr	r2, [sp, #4]
    6424:	ldr	r3, [sp, #8]
    6428:	bl	9cec <rb_sha256_crypt_r>
    642c:	str	r0, [fp, #-4]
    6430:	ldr	r0, [fp, #-4]
    6434:	mov	sp, fp
    6438:	pop	{fp, pc}
    643c:	.word	0x00040a84
    6440:	.word	0x00040a78

00006444 <rb_sha512_crypt>:
    6444:	push	{fp, lr}
    6448:	mov	fp, sp
    644c:	sub	sp, sp, #32
    6450:	ldr	r2, [pc, #220]	; 6534 <rb_sha512_crypt+0xf0>
    6454:	add	r2, pc, r2
    6458:	str	r0, [fp, #-8]
    645c:	str	r1, [fp, #-12]
    6460:	ldr	r0, [fp, #-12]
    6464:	str	r2, [sp, #8]
    6468:	bl	51b8 <strlen@plt>
    646c:	add	r0, r0, #21
    6470:	add	r0, r0, #1
    6474:	add	r0, r0, #86	; 0x56
    6478:	add	r0, r0, #1
    647c:	str	r0, [sp, #16]
    6480:	ldr	r0, [sp, #8]
    6484:	ldr	r1, [r0]
    6488:	ldr	r2, [sp, #16]
    648c:	cmp	r1, r2
    6490:	bge	64e8 <rb_sha512_crypt+0xa4>
    6494:	ldr	r0, [pc, #156]	; 6538 <rb_sha512_crypt+0xf4>
    6498:	add	r0, pc, r0
    649c:	ldr	r0, [r0]
    64a0:	ldr	r1, [sp, #16]
    64a4:	bl	5614 <realloc@plt>
    64a8:	str	r0, [sp, #12]
    64ac:	ldr	r0, [sp, #12]
    64b0:	movw	r1, #0
    64b4:	cmp	r0, r1
    64b8:	bne	64c8 <rb_sha512_crypt+0x84>
    64bc:	movw	r0, #0
    64c0:	str	r0, [fp, #-4]
    64c4:	b	6528 <rb_sha512_crypt+0xe4>
    64c8:	ldr	r0, [pc, #108]	; 653c <rb_sha512_crypt+0xf8>
    64cc:	add	r0, pc, r0
    64d0:	ldr	r1, [pc, #104]	; 6540 <rb_sha512_crypt+0xfc>
    64d4:	add	r1, pc, r1
    64d8:	ldr	r2, [sp, #12]
    64dc:	str	r2, [r1]
    64e0:	ldr	r1, [sp, #16]
    64e4:	str	r1, [r0]
    64e8:	ldr	r0, [pc, #84]	; 6544 <rb_sha512_crypt+0x100>
    64ec:	add	r0, pc, r0
    64f0:	ldr	r1, [pc, #80]	; 6548 <rb_sha512_crypt+0x104>
    64f4:	add	r1, pc, r1
    64f8:	ldr	r2, [fp, #-8]
    64fc:	ldr	r3, [fp, #-12]
    6500:	ldr	r1, [r1]
    6504:	ldr	r0, [r0]
    6508:	str	r0, [sp, #4]
    650c:	mov	r0, r2
    6510:	str	r1, [sp]
    6514:	mov	r1, r3
    6518:	ldr	r2, [sp]
    651c:	ldr	r3, [sp, #4]
    6520:	bl	b948 <rb_sha512_crypt_r>
    6524:	str	r0, [fp, #-4]
    6528:	ldr	r0, [fp, #-4]
    652c:	mov	sp, fp
    6530:	pop	{fp, pc}
    6534:	.word	0x00040a1c
    6538:	.word	0x000409d4
    653c:	.word	0x000409a4
    6540:	.word	0x00040998
    6544:	.word	0x00040984
    6548:	.word	0x00040978

0000654c <rb_des_crypt>:
    654c:	push	{fp, lr}
    6550:	mov	fp, sp
    6554:	sub	sp, sp, #64	; 0x40
    6558:	str	r0, [fp, #-8]
    655c:	str	r1, [fp, #-12]
    6560:	bl	68a8 <rb_des_init>
    6564:	add	r0, sp, #24
    6568:	str	r0, [sp, #16]
    656c:	add	r0, sp, #24
    6570:	ldr	r1, [sp, #16]
    6574:	sub	r0, r1, r0
    6578:	sub	r0, r0, #8
    657c:	cmp	r0, #0
    6580:	beq	65c0 <rb_des_crypt+0x74>
    6584:	ldr	r0, [fp, #-8]
    6588:	ldrb	r0, [r0]
    658c:	lsl	r0, r0, #1
    6590:	ldr	r1, [sp, #16]
    6594:	add	r2, r1, #1
    6598:	str	r2, [sp, #16]
    659c:	strb	r0, [r1]
    65a0:	ldr	r0, [sp, #16]
    65a4:	ldrsb	r0, [r0, #-1]
    65a8:	cmp	r0, #0
    65ac:	beq	65bc <rb_des_crypt+0x70>
    65b0:	ldr	r0, [fp, #-8]
    65b4:	add	r0, r0, #1
    65b8:	str	r0, [fp, #-8]
    65bc:	b	656c <rb_des_crypt+0x20>
    65c0:	add	r0, sp, #24
    65c4:	bl	72d0 <rb_des_setkey>
    65c8:	cmp	r0, #0
    65cc:	beq	65dc <rb_des_crypt+0x90>
    65d0:	movw	r0, #0
    65d4:	str	r0, [fp, #-4]
    65d8:	b	6888 <rb_des_crypt+0x33c>
    65dc:	movw	r0, #25
    65e0:	str	r0, [fp, #-16]
    65e4:	ldr	r0, [fp, #-12]
    65e8:	ldrb	r0, [r0, #1]
    65ec:	bl	76c8 <rb_ascii_to_bin>
    65f0:	lsl	r0, r0, #6
    65f4:	ldr	r1, [fp, #-12]
    65f8:	ldrb	r1, [r1]
    65fc:	str	r0, [sp, #12]
    6600:	mov	r0, r1
    6604:	bl	76c8 <rb_ascii_to_bin>
    6608:	ldr	r1, [pc, #644]	; 6894 <rb_des_crypt+0x348>
    660c:	add	r1, pc, r1
    6610:	ldr	r2, [sp, #12]
    6614:	orr	r0, r2, r0
    6618:	str	r0, [fp, #-20]	; 0xffffffec
    661c:	ldr	r0, [fp, #-12]
    6620:	ldrb	r0, [r0]
    6624:	strb	r0, [r1]
    6628:	ldr	r0, [fp, #-12]
    662c:	ldrb	r0, [r0, #1]
    6630:	cmp	r0, #0
    6634:	beq	6648 <rb_des_crypt+0xfc>
    6638:	ldr	r0, [fp, #-12]
    663c:	ldrb	r0, [r0, #1]
    6640:	str	r0, [sp, #8]
    6644:	b	6658 <rb_des_crypt+0x10c>
    6648:	ldr	r0, [pc, #584]	; 6898 <rb_des_crypt+0x34c>
    664c:	add	r0, pc, r0
    6650:	ldrb	r0, [r0]
    6654:	str	r0, [sp, #8]
    6658:	ldr	r0, [sp, #8]
    665c:	ldr	r1, [pc, #568]	; 689c <rb_des_crypt+0x350>
    6660:	add	r1, pc, r1
    6664:	add	r2, r1, #2
    6668:	strb	r0, [r1, #1]
    666c:	str	r2, [sp, #20]
    6670:	ldr	r0, [fp, #-20]	; 0xffffffec
    6674:	bl	7788 <rb_setup_salt>
    6678:	ldr	r0, [fp, #-16]
    667c:	movw	r1, #0
    6680:	str	r0, [sp, #4]
    6684:	mov	r0, r1
    6688:	sub	r2, fp, #28
    668c:	add	r3, sp, #32
    6690:	ldr	ip, [sp, #4]
    6694:	str	ip, [sp]
    6698:	bl	785c <rb_do_des>
    669c:	cmp	r0, #0
    66a0:	beq	66b0 <rb_des_crypt+0x164>
    66a4:	movw	r0, #0
    66a8:	str	r0, [fp, #-4]
    66ac:	b	6888 <rb_des_crypt+0x33c>
    66b0:	ldr	r0, [pc, #488]	; 68a0 <rb_des_crypt+0x354>
    66b4:	add	r0, pc, r0
    66b8:	ldr	r1, [pc, #484]	; 68a4 <rb_des_crypt+0x358>
    66bc:	add	r1, pc, r1
    66c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    66c4:	lsr	r2, r2, #8
    66c8:	str	r2, [fp, #-24]	; 0xffffffe8
    66cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    66d0:	lsr	r2, r2, #18
    66d4:	and	r2, r2, #63	; 0x3f
    66d8:	add	r2, r1, r2
    66dc:	ldrb	r2, [r2]
    66e0:	ldr	r3, [sp, #20]
    66e4:	add	ip, r3, #1
    66e8:	str	ip, [sp, #20]
    66ec:	strb	r2, [r3]
    66f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    66f4:	lsr	r2, r2, #12
    66f8:	and	r2, r2, #63	; 0x3f
    66fc:	add	r2, r1, r2
    6700:	ldrb	r2, [r2]
    6704:	ldr	r3, [sp, #20]
    6708:	add	ip, r3, #1
    670c:	str	ip, [sp, #20]
    6710:	strb	r2, [r3]
    6714:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6718:	lsr	r2, r2, #6
    671c:	and	r2, r2, #63	; 0x3f
    6720:	add	r2, r1, r2
    6724:	ldrb	r2, [r2]
    6728:	ldr	r3, [sp, #20]
    672c:	add	ip, r3, #1
    6730:	str	ip, [sp, #20]
    6734:	strb	r2, [r3]
    6738:	ldr	r2, [fp, #-24]	; 0xffffffe8
    673c:	and	r2, r2, #63	; 0x3f
    6740:	add	r2, r1, r2
    6744:	ldrb	r2, [r2]
    6748:	ldr	r3, [sp, #20]
    674c:	add	ip, r3, #1
    6750:	str	ip, [sp, #20]
    6754:	strb	r2, [r3]
    6758:	ldr	r2, [fp, #-28]	; 0xffffffe4
    675c:	lsl	r2, r2, #16
    6760:	ldr	r3, [sp, #32]
    6764:	lsr	r3, r3, #16
    6768:	movw	ip, #65535	; 0xffff
    676c:	and	r3, r3, ip
    6770:	orr	r2, r2, r3
    6774:	str	r2, [fp, #-24]	; 0xffffffe8
    6778:	ldr	r2, [fp, #-24]	; 0xffffffe8
    677c:	lsr	r2, r2, #18
    6780:	and	r2, r2, #63	; 0x3f
    6784:	add	r2, r1, r2
    6788:	ldrb	r2, [r2]
    678c:	ldr	r3, [sp, #20]
    6790:	add	ip, r3, #1
    6794:	str	ip, [sp, #20]
    6798:	strb	r2, [r3]
    679c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    67a0:	lsr	r2, r2, #12
    67a4:	and	r2, r2, #63	; 0x3f
    67a8:	add	r2, r1, r2
    67ac:	ldrb	r2, [r2]
    67b0:	ldr	r3, [sp, #20]
    67b4:	add	ip, r3, #1
    67b8:	str	ip, [sp, #20]
    67bc:	strb	r2, [r3]
    67c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    67c4:	lsr	r2, r2, #6
    67c8:	and	r2, r2, #63	; 0x3f
    67cc:	add	r2, r1, r2
    67d0:	ldrb	r2, [r2]
    67d4:	ldr	r3, [sp, #20]
    67d8:	add	ip, r3, #1
    67dc:	str	ip, [sp, #20]
    67e0:	strb	r2, [r3]
    67e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    67e8:	and	r2, r2, #63	; 0x3f
    67ec:	add	r2, r1, r2
    67f0:	ldrb	r2, [r2]
    67f4:	ldr	r3, [sp, #20]
    67f8:	add	ip, r3, #1
    67fc:	str	ip, [sp, #20]
    6800:	strb	r2, [r3]
    6804:	ldr	r2, [sp, #32]
    6808:	lsl	r2, r2, #2
    680c:	str	r2, [fp, #-24]	; 0xffffffe8
    6810:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6814:	lsr	r2, r2, #12
    6818:	and	r2, r2, #63	; 0x3f
    681c:	add	r2, r1, r2
    6820:	ldrb	r2, [r2]
    6824:	ldr	r3, [sp, #20]
    6828:	add	ip, r3, #1
    682c:	str	ip, [sp, #20]
    6830:	strb	r2, [r3]
    6834:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6838:	lsr	r2, r2, #6
    683c:	and	r2, r2, #63	; 0x3f
    6840:	add	r2, r1, r2
    6844:	ldrb	r2, [r2]
    6848:	ldr	r3, [sp, #20]
    684c:	add	ip, r3, #1
    6850:	str	ip, [sp, #20]
    6854:	strb	r2, [r3]
    6858:	ldr	r2, [fp, #-24]	; 0xffffffe8
    685c:	and	r2, r2, #63	; 0x3f
    6860:	add	r1, r1, r2
    6864:	ldrb	r1, [r1]
    6868:	ldr	r2, [sp, #20]
    686c:	add	r3, r2, #1
    6870:	str	r3, [sp, #20]
    6874:	strb	r1, [r2]
    6878:	ldr	r1, [sp, #20]
    687c:	movw	r2, #0
    6880:	strb	r2, [r1]
    6884:	str	r0, [fp, #-4]
    6888:	ldr	r0, [fp, #-4]
    688c:	mov	sp, fp
    6890:	pop	{fp, pc}
    6894:	.word	0x0002f388
    6898:	.word	0x0002f348
    689c:	.word	0x0002f334
    68a0:	.word	0x0002f2e0
    68a4:	.word	0x0001b9cc

000068a8 <rb_des_init>:
    68a8:	push	{r4, r5, r6, sl, fp, lr}
    68ac:	add	fp, sp, #16
    68b0:	sub	sp, sp, #44	; 0x2c
    68b4:	ldr	r0, [pc, #2348]	; 71e8 <rb_des_init+0x940>
    68b8:	add	r0, pc, r0
    68bc:	ldr	r0, [r0]
    68c0:	cmp	r0, #1
    68c4:	bne	68cc <rb_des_init+0x24>
    68c8:	b	71e0 <rb_des_init+0x938>
    68cc:	ldr	r0, [pc, #2328]	; 71ec <rb_des_init+0x944>
    68d0:	add	r0, pc, r0
    68d4:	add	r1, r0, #32
    68d8:	ldr	r2, [pc, #2320]	; 71f0 <rb_des_init+0x948>
    68dc:	add	r2, pc, r2
    68e0:	add	r0, r0, #16
    68e4:	ldr	r3, [pc, #2312]	; 71f4 <rb_des_init+0x94c>
    68e8:	add	r3, pc, r3
    68ec:	ldr	ip, [pc, #2308]	; 71f8 <rb_des_init+0x950>
    68f0:	add	ip, pc, ip
    68f4:	ldr	lr, [pc, #2304]	; 71fc <rb_des_init+0x954>
    68f8:	add	lr, pc, lr
    68fc:	ldr	r4, [pc, #2300]	; 7200 <rb_des_init+0x958>
    6900:	add	r4, pc, r4
    6904:	ldr	r5, [pc, #2296]	; 7204 <rb_des_init+0x95c>
    6908:	add	r5, pc, r5
    690c:	movw	r6, #0
    6910:	str	r6, [r5]
    6914:	str	r6, [r4]
    6918:	str	r6, [lr]
    691c:	str	r6, [ip]
    6920:	str	r0, [r3]
    6924:	str	r1, [r2]
    6928:	str	r6, [fp, #-20]	; 0xffffffec
    692c:	ldr	r0, [fp, #-20]	; 0xffffffec
    6930:	cmp	r0, #8
    6934:	bge	69c4 <rb_des_init+0x11c>
    6938:	movw	r0, #0
    693c:	str	r0, [fp, #-24]	; 0xffffffe8
    6940:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6944:	cmp	r0, #64	; 0x40
    6948:	bge	69b0 <rb_des_init+0x108>
    694c:	ldr	r0, [pc, #2332]	; 7270 <rb_des_init+0x9c8>
    6950:	add	r0, pc, r0
    6954:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6958:	and	r2, r1, #32
    695c:	and	r3, r1, #1
    6960:	orr	r2, r2, r3, lsl #4
    6964:	ubfx	r1, r1, #1, #4
    6968:	orr	r1, r2, r1
    696c:	str	r1, [fp, #-28]	; 0xffffffe4
    6970:	ldr	r1, [fp, #-20]	; 0xffffffec
    6974:	ldr	r2, [pc, #2296]	; 7274 <rb_des_init+0x9cc>
    6978:	add	r2, pc, r2
    697c:	add	r2, r2, r1, lsl #6
    6980:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6984:	ldrb	r2, [r2, r3]
    6988:	ldr	r3, [pc, #2280]	; 7278 <rb_des_init+0x9d0>
    698c:	add	r3, pc, r3
    6990:	add	r1, r3, r1, lsl #6
    6994:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6998:	add	r1, r1, r3
    699c:	strb	r2, [r1]
    69a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    69a4:	add	r0, r0, #1
    69a8:	str	r0, [fp, #-24]	; 0xffffffe8
    69ac:	b	6940 <rb_des_init+0x98>
    69b0:	b	69b4 <rb_des_init+0x10c>
    69b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    69b8:	add	r0, r0, #1
    69bc:	str	r0, [fp, #-20]	; 0xffffffec
    69c0:	b	692c <rb_des_init+0x84>
    69c4:	movw	r0, #0
    69c8:	str	r0, [fp, #-28]	; 0xffffffe4
    69cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    69d0:	cmp	r0, #4
    69d4:	bge	6a8c <rb_des_init+0x1e4>
    69d8:	movw	r0, #0
    69dc:	str	r0, [fp, #-20]	; 0xffffffec
    69e0:	ldr	r0, [fp, #-20]	; 0xffffffec
    69e4:	cmp	r0, #64	; 0x40
    69e8:	bge	6a78 <rb_des_init+0x1d0>
    69ec:	movw	r0, #0
    69f0:	str	r0, [fp, #-24]	; 0xffffffe8
    69f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    69f8:	cmp	r0, #64	; 0x40
    69fc:	bge	6a64 <rb_des_init+0x1bc>
    6a00:	ldr	r0, [pc, #2148]	; 726c <rb_des_init+0x9c4>
    6a04:	add	r0, pc, r0
    6a08:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6a0c:	ldr	r2, [pc, #2152]	; 727c <rb_des_init+0x9d4>
    6a10:	add	r2, pc, r2
    6a14:	add	r2, r2, r1, lsl #7
    6a18:	ldr	r3, [fp, #-20]	; 0xffffffec
    6a1c:	ldrb	r3, [r2, r3]
    6a20:	ldr	ip, [fp, #-24]	; 0xffffffe8
    6a24:	add	r2, r2, ip
    6a28:	ldrb	r2, [r2, #64]	; 0x40
    6a2c:	orr	r2, r2, r3, lsl #4
    6a30:	ldr	r3, [pc, #2120]	; 7280 <rb_des_init+0x9d8>
    6a34:	add	r3, pc, r3
    6a38:	add	r1, r3, r1, lsl #12
    6a3c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6a40:	lsl	r3, r3, #6
    6a44:	ldr	ip, [fp, #-24]	; 0xffffffe8
    6a48:	orr	r3, r3, ip
    6a4c:	add	r1, r1, r3
    6a50:	strb	r2, [r1]
    6a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6a58:	add	r0, r0, #1
    6a5c:	str	r0, [fp, #-24]	; 0xffffffe8
    6a60:	b	69f4 <rb_des_init+0x14c>
    6a64:	b	6a68 <rb_des_init+0x1c0>
    6a68:	ldr	r0, [fp, #-20]	; 0xffffffec
    6a6c:	add	r0, r0, #1
    6a70:	str	r0, [fp, #-20]	; 0xffffffec
    6a74:	b	69e0 <rb_des_init+0x138>
    6a78:	b	6a7c <rb_des_init+0x1d4>
    6a7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6a80:	add	r0, r0, #1
    6a84:	str	r0, [fp, #-28]	; 0xffffffe4
    6a88:	b	69cc <rb_des_init+0x124>
    6a8c:	movw	r0, #0
    6a90:	str	r0, [fp, #-20]	; 0xffffffec
    6a94:	ldr	r0, [fp, #-20]	; 0xffffffec
    6a98:	cmp	r0, #64	; 0x40
    6a9c:	bge	6b0c <rb_des_init+0x264>
    6aa0:	ldr	r0, [pc, #1972]	; 725c <rb_des_init+0x9b4>
    6aa4:	add	r0, pc, r0
    6aa8:	ldr	r1, [pc, #1968]	; 7260 <rb_des_init+0x9b8>
    6aac:	add	r1, pc, r1
    6ab0:	ldr	r2, [pc, #1964]	; 7264 <rb_des_init+0x9bc>
    6ab4:	add	r2, pc, r2
    6ab8:	ldr	r3, [pc, #1960]	; 7268 <rb_des_init+0x9c0>
    6abc:	add	r3, pc, r3
    6ac0:	ldr	ip, [fp, #-20]	; 0xffffffec
    6ac4:	ldr	lr, [fp, #-20]	; 0xffffffec
    6ac8:	add	r3, r3, lr
    6acc:	ldrb	r3, [r3]
    6ad0:	sub	r3, r3, #1
    6ad4:	ldr	lr, [fp, #-20]	; 0xffffffec
    6ad8:	add	r2, r2, lr
    6adc:	strb	r3, [r2]
    6ae0:	and	r2, r3, #255	; 0xff
    6ae4:	add	r1, r1, r2
    6ae8:	strb	ip, [r1]
    6aec:	ldr	r1, [fp, #-20]	; 0xffffffec
    6af0:	add	r0, r0, r1
    6af4:	movw	r1, #255	; 0xff
    6af8:	strb	r1, [r0]
    6afc:	ldr	r0, [fp, #-20]	; 0xffffffec
    6b00:	add	r0, r0, #1
    6b04:	str	r0, [fp, #-20]	; 0xffffffec
    6b08:	b	6a94 <rb_des_init+0x1ec>
    6b0c:	movw	r0, #0
    6b10:	str	r0, [fp, #-20]	; 0xffffffec
    6b14:	ldr	r0, [fp, #-20]	; 0xffffffec
    6b18:	cmp	r0, #56	; 0x38
    6b1c:	bge	6b74 <rb_des_init+0x2cc>
    6b20:	ldr	r0, [pc, #1832]	; 7250 <rb_des_init+0x9a8>
    6b24:	add	r0, pc, r0
    6b28:	ldr	r1, [pc, #1828]	; 7254 <rb_des_init+0x9ac>
    6b2c:	add	r1, pc, r1
    6b30:	ldr	r2, [pc, #1824]	; 7258 <rb_des_init+0x9b0>
    6b34:	add	r2, pc, r2
    6b38:	ldr	r3, [fp, #-20]	; 0xffffffec
    6b3c:	ldr	ip, [fp, #-20]	; 0xffffffec
    6b40:	add	r2, r2, ip
    6b44:	ldrb	r2, [r2]
    6b48:	sub	r2, r2, #1
    6b4c:	add	r1, r1, r2
    6b50:	strb	r3, [r1]
    6b54:	ldr	r1, [fp, #-20]	; 0xffffffec
    6b58:	add	r0, r0, r1
    6b5c:	movw	r1, #255	; 0xff
    6b60:	strb	r1, [r0]
    6b64:	ldr	r0, [fp, #-20]	; 0xffffffec
    6b68:	add	r0, r0, #1
    6b6c:	str	r0, [fp, #-20]	; 0xffffffec
    6b70:	b	6b14 <rb_des_init+0x26c>
    6b74:	movw	r0, #0
    6b78:	str	r0, [fp, #-20]	; 0xffffffec
    6b7c:	ldr	r0, [fp, #-20]	; 0xffffffec
    6b80:	cmp	r0, #48	; 0x30
    6b84:	bge	6bc4 <rb_des_init+0x31c>
    6b88:	ldr	r0, [pc, #1720]	; 7248 <rb_des_init+0x9a0>
    6b8c:	add	r0, pc, r0
    6b90:	ldr	r1, [pc, #1716]	; 724c <rb_des_init+0x9a4>
    6b94:	add	r1, pc, r1
    6b98:	ldr	r2, [fp, #-20]	; 0xffffffec
    6b9c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6ba0:	add	r1, r1, r3
    6ba4:	ldrb	r1, [r1]
    6ba8:	sub	r1, r1, #1
    6bac:	add	r0, r0, r1
    6bb0:	strb	r2, [r0]
    6bb4:	ldr	r0, [fp, #-20]	; 0xffffffec
    6bb8:	add	r0, r0, #1
    6bbc:	str	r0, [fp, #-20]	; 0xffffffec
    6bc0:	b	6b7c <rb_des_init+0x2d4>
    6bc4:	movw	r0, #0
    6bc8:	str	r0, [sp, #28]
    6bcc:	ldr	r0, [sp, #28]
    6bd0:	cmp	r0, #8
    6bd4:	bge	7080 <rb_des_init+0x7d8>
    6bd8:	movw	r0, #0
    6bdc:	str	r0, [fp, #-20]	; 0xffffffec
    6be0:	ldr	r0, [fp, #-20]	; 0xffffffec
    6be4:	cmp	r0, #256	; 0x100
    6be8:	bge	6de8 <rb_des_init+0x540>
    6bec:	ldr	r0, [sp, #28]
    6bf0:	ldr	r1, [pc, #1676]	; 7284 <rb_des_init+0x9dc>
    6bf4:	add	r1, pc, r1
    6bf8:	add	r0, r1, r0, lsl #10
    6bfc:	ldr	r1, [fp, #-20]	; 0xffffffec
    6c00:	add	r2, r0, r1, lsl #2
    6c04:	str	r2, [sp, #12]
    6c08:	mov	r2, #0
    6c0c:	str	r2, [r0, r1, lsl #2]
    6c10:	ldr	r0, [sp, #28]
    6c14:	ldr	r1, [pc, #1644]	; 7288 <rb_des_init+0x9e0>
    6c18:	add	r1, pc, r1
    6c1c:	add	r0, r1, r0, lsl #10
    6c20:	ldr	r1, [fp, #-20]	; 0xffffffec
    6c24:	add	r3, r0, r1, lsl #2
    6c28:	str	r3, [sp, #8]
    6c2c:	str	r2, [r0, r1, lsl #2]
    6c30:	ldr	r0, [sp, #28]
    6c34:	ldr	r1, [pc, #1616]	; 728c <rb_des_init+0x9e4>
    6c38:	add	r1, pc, r1
    6c3c:	add	r0, r1, r0, lsl #10
    6c40:	ldr	r1, [fp, #-20]	; 0xffffffec
    6c44:	add	r3, r0, r1, lsl #2
    6c48:	str	r3, [sp, #4]
    6c4c:	str	r2, [r0, r1, lsl #2]
    6c50:	ldr	r0, [sp, #28]
    6c54:	ldr	r1, [pc, #1588]	; 7290 <rb_des_init+0x9e8>
    6c58:	add	r1, pc, r1
    6c5c:	add	r0, r1, r0, lsl #10
    6c60:	ldr	r1, [fp, #-20]	; 0xffffffec
    6c64:	add	r0, r0, r1, lsl #2
    6c68:	str	r0, [sp]
    6c6c:	movw	r1, #0
    6c70:	str	r1, [r0]
    6c74:	str	r1, [fp, #-24]	; 0xffffffe8
    6c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6c7c:	cmp	r0, #8
    6c80:	bge	6dd4 <rb_des_init+0x52c>
    6c84:	ldr	r0, [pc, #1440]	; 722c <rb_des_init+0x984>
    6c88:	add	r0, pc, r0
    6c8c:	ldr	r1, [sp, #28]
    6c90:	lsl	r1, r1, #3
    6c94:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6c98:	add	r1, r1, r2
    6c9c:	str	r1, [sp, #24]
    6ca0:	ldr	r1, [fp, #-20]	; 0xffffffec
    6ca4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6ca8:	add	r0, r0, r2
    6cac:	ldrb	r0, [r0]
    6cb0:	and	r0, r1, r0
    6cb4:	cmp	r0, #0
    6cb8:	beq	6dc0 <rb_des_init+0x518>
    6cbc:	ldr	r0, [pc, #1388]	; 7230 <rb_des_init+0x988>
    6cc0:	add	r0, pc, r0
    6cc4:	ldr	r1, [sp, #24]
    6cc8:	add	r0, r0, r1
    6ccc:	ldrb	r0, [r0]
    6cd0:	str	r0, [sp, #20]
    6cd4:	cmp	r0, #32
    6cd8:	bge	6d0c <rb_des_init+0x464>
    6cdc:	ldr	r0, [pc, #1364]	; 7238 <rb_des_init+0x990>
    6ce0:	add	r0, pc, r0
    6ce4:	ldr	r1, [sp, #20]
    6ce8:	ldr	r2, [pc, #1444]	; 7294 <rb_des_init+0x9ec>
    6cec:	add	r2, pc, r2
    6cf0:	add	r1, r2, r1, lsl #2
    6cf4:	ldr	r1, [r1]
    6cf8:	ldr	r2, [sp, #12]
    6cfc:	ldr	r3, [r2]
    6d00:	orr	r1, r3, r1
    6d04:	str	r1, [r2]
    6d08:	b	6d3c <rb_des_init+0x494>
    6d0c:	ldr	r0, [pc, #1312]	; 7234 <rb_des_init+0x98c>
    6d10:	add	r0, pc, r0
    6d14:	ldr	r1, [sp, #20]
    6d18:	sub	r1, r1, #32
    6d1c:	ldr	r2, [pc, #1396]	; 7298 <rb_des_init+0x9f0>
    6d20:	add	r2, pc, r2
    6d24:	add	r1, r2, r1, lsl #2
    6d28:	ldr	r1, [r1]
    6d2c:	ldr	r2, [sp, #8]
    6d30:	ldr	r3, [r2]
    6d34:	orr	r1, r3, r1
    6d38:	str	r1, [r2]
    6d3c:	ldr	r0, [pc, #1272]	; 723c <rb_des_init+0x994>
    6d40:	add	r0, pc, r0
    6d44:	ldr	r1, [sp, #24]
    6d48:	add	r0, r0, r1
    6d4c:	ldrb	r0, [r0]
    6d50:	str	r0, [sp, #20]
    6d54:	cmp	r0, #32
    6d58:	bge	6d8c <rb_des_init+0x4e4>
    6d5c:	ldr	r0, [pc, #1248]	; 7244 <rb_des_init+0x99c>
    6d60:	add	r0, pc, r0
    6d64:	ldr	r1, [sp, #20]
    6d68:	ldr	r2, [pc, #1324]	; 729c <rb_des_init+0x9f4>
    6d6c:	add	r2, pc, r2
    6d70:	add	r1, r2, r1, lsl #2
    6d74:	ldr	r1, [r1]
    6d78:	ldr	r2, [sp, #4]
    6d7c:	ldr	r3, [r2]
    6d80:	orr	r1, r3, r1
    6d84:	str	r1, [r2]
    6d88:	b	6dbc <rb_des_init+0x514>
    6d8c:	ldr	r0, [pc, #1196]	; 7240 <rb_des_init+0x998>
    6d90:	add	r0, pc, r0
    6d94:	ldr	r1, [sp, #20]
    6d98:	sub	r1, r1, #32
    6d9c:	ldr	r2, [pc, #1276]	; 72a0 <rb_des_init+0x9f8>
    6da0:	add	r2, pc, r2
    6da4:	add	r1, r2, r1, lsl #2
    6da8:	ldr	r1, [r1]
    6dac:	ldr	r2, [sp]
    6db0:	ldr	r3, [r2]
    6db4:	orr	r1, r3, r1
    6db8:	str	r1, [r2]
    6dbc:	b	6dc0 <rb_des_init+0x518>
    6dc0:	b	6dc4 <rb_des_init+0x51c>
    6dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6dc8:	add	r0, r0, #1
    6dcc:	str	r0, [fp, #-24]	; 0xffffffe8
    6dd0:	b	6c78 <rb_des_init+0x3d0>
    6dd4:	b	6dd8 <rb_des_init+0x530>
    6dd8:	ldr	r0, [fp, #-20]	; 0xffffffec
    6ddc:	add	r0, r0, #1
    6de0:	str	r0, [fp, #-20]	; 0xffffffec
    6de4:	b	6be0 <rb_des_init+0x338>
    6de8:	movw	r0, #0
    6dec:	str	r0, [fp, #-20]	; 0xffffffec
    6df0:	ldr	r0, [fp, #-20]	; 0xffffffec
    6df4:	cmp	r0, #128	; 0x80
    6df8:	bge	706c <rb_des_init+0x7c4>
    6dfc:	ldr	r0, [sp, #28]
    6e00:	ldr	r1, [pc, #1180]	; 72a4 <rb_des_init+0x9fc>
    6e04:	add	r1, pc, r1
    6e08:	add	r0, r1, r0, lsl #9
    6e0c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6e10:	add	r2, r0, r1, lsl #2
    6e14:	str	r2, [sp, #12]
    6e18:	mov	r2, #0
    6e1c:	str	r2, [r0, r1, lsl #2]
    6e20:	ldr	r0, [sp, #28]
    6e24:	ldr	r1, [pc, #1148]	; 72a8 <rb_des_init+0xa00>
    6e28:	add	r1, pc, r1
    6e2c:	add	r0, r1, r0, lsl #9
    6e30:	ldr	r1, [fp, #-20]	; 0xffffffec
    6e34:	add	r0, r0, r1, lsl #2
    6e38:	str	r0, [sp, #8]
    6e3c:	movw	r1, #0
    6e40:	str	r1, [r0]
    6e44:	str	r1, [fp, #-24]	; 0xffffffe8
    6e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6e4c:	cmp	r0, #7
    6e50:	bge	6f28 <rb_des_init+0x680>
    6e54:	ldr	r0, [pc, #968]	; 7224 <rb_des_init+0x97c>
    6e58:	add	r0, pc, r0
    6e5c:	ldr	r1, [sp, #28]
    6e60:	lsl	r1, r1, #3
    6e64:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6e68:	add	r1, r1, r2
    6e6c:	str	r1, [sp, #24]
    6e70:	ldr	r1, [fp, #-20]	; 0xffffffec
    6e74:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6e78:	add	r2, r2, #1
    6e7c:	add	r0, r0, r2
    6e80:	ldrb	r0, [r0]
    6e84:	and	r0, r1, r0
    6e88:	cmp	r0, #0
    6e8c:	beq	6f14 <rb_des_init+0x66c>
    6e90:	ldr	r0, [pc, #912]	; 7228 <rb_des_init+0x980>
    6e94:	add	r0, pc, r0
    6e98:	ldr	r1, [sp, #24]
    6e9c:	add	r0, r0, r1
    6ea0:	ldrb	r0, [r0]
    6ea4:	str	r0, [sp, #20]
    6ea8:	cmp	r0, #255	; 0xff
    6eac:	bne	6eb4 <rb_des_init+0x60c>
    6eb0:	b	6f18 <rb_des_init+0x670>
    6eb4:	ldr	r0, [sp, #20]
    6eb8:	cmp	r0, #28
    6ebc:	bge	6ee8 <rb_des_init+0x640>
    6ec0:	ldr	r0, [pc, #996]	; 72ac <rb_des_init+0xa04>
    6ec4:	ldr	r0, [pc, r0]
    6ec8:	ldr	r1, [sp, #20]
    6ecc:	add	r0, r0, r1, lsl #2
    6ed0:	ldr	r0, [r0]
    6ed4:	ldr	r1, [sp, #12]
    6ed8:	ldr	r2, [r1]
    6edc:	orr	r0, r2, r0
    6ee0:	str	r0, [r1]
    6ee4:	b	6f10 <rb_des_init+0x668>
    6ee8:	ldr	r0, [pc, #960]	; 72b0 <rb_des_init+0xa08>
    6eec:	ldr	r0, [pc, r0]
    6ef0:	ldr	r1, [sp, #20]
    6ef4:	sub	r1, r1, #28
    6ef8:	add	r0, r0, r1, lsl #2
    6efc:	ldr	r0, [r0]
    6f00:	ldr	r1, [sp, #8]
    6f04:	ldr	r2, [r1]
    6f08:	orr	r0, r2, r0
    6f0c:	str	r0, [r1]
    6f10:	b	6f14 <rb_des_init+0x66c>
    6f14:	b	6f18 <rb_des_init+0x670>
    6f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6f1c:	add	r0, r0, #1
    6f20:	str	r0, [fp, #-24]	; 0xffffffe8
    6f24:	b	6e48 <rb_des_init+0x5a0>
    6f28:	ldr	r0, [sp, #28]
    6f2c:	ldr	r1, [pc, #896]	; 72b4 <rb_des_init+0xa0c>
    6f30:	add	r1, pc, r1
    6f34:	add	r0, r1, r0, lsl #9
    6f38:	ldr	r1, [fp, #-20]	; 0xffffffec
    6f3c:	add	r2, r0, r1, lsl #2
    6f40:	str	r2, [sp, #12]
    6f44:	mov	r2, #0
    6f48:	str	r2, [r0, r1, lsl #2]
    6f4c:	ldr	r0, [sp, #28]
    6f50:	ldr	r1, [pc, #864]	; 72b8 <rb_des_init+0xa10>
    6f54:	add	r1, pc, r1
    6f58:	add	r0, r1, r0, lsl #9
    6f5c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6f60:	add	r0, r0, r1, lsl #2
    6f64:	str	r0, [sp, #8]
    6f68:	movw	r1, #0
    6f6c:	str	r1, [r0]
    6f70:	str	r1, [fp, #-24]	; 0xffffffe8
    6f74:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6f78:	cmp	r0, #7
    6f7c:	bge	7058 <rb_des_init+0x7b0>
    6f80:	ldr	r0, [pc, #660]	; 721c <rb_des_init+0x974>
    6f84:	add	r0, pc, r0
    6f88:	ldr	r1, [sp, #28]
    6f8c:	movw	r2, #7
    6f90:	mul	r1, r1, r2
    6f94:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6f98:	add	r1, r1, r2
    6f9c:	str	r1, [sp, #24]
    6fa0:	ldr	r1, [fp, #-20]	; 0xffffffec
    6fa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6fa8:	add	r2, r2, #1
    6fac:	add	r0, r0, r2
    6fb0:	ldrb	r0, [r0]
    6fb4:	and	r0, r1, r0
    6fb8:	cmp	r0, #0
    6fbc:	beq	7044 <rb_des_init+0x79c>
    6fc0:	ldr	r0, [pc, #600]	; 7220 <rb_des_init+0x978>
    6fc4:	add	r0, pc, r0
    6fc8:	ldr	r1, [sp, #24]
    6fcc:	add	r0, r0, r1
    6fd0:	ldrb	r0, [r0]
    6fd4:	str	r0, [sp, #20]
    6fd8:	cmp	r0, #255	; 0xff
    6fdc:	bne	6fe4 <rb_des_init+0x73c>
    6fe0:	b	7048 <rb_des_init+0x7a0>
    6fe4:	ldr	r0, [sp, #20]
    6fe8:	cmp	r0, #24
    6fec:	bge	7018 <rb_des_init+0x770>
    6ff0:	ldr	r0, [pc, #708]	; 72bc <rb_des_init+0xa14>
    6ff4:	ldr	r0, [pc, r0]
    6ff8:	ldr	r1, [sp, #20]
    6ffc:	add	r0, r0, r1, lsl #2
    7000:	ldr	r0, [r0]
    7004:	ldr	r1, [sp, #12]
    7008:	ldr	r2, [r1]
    700c:	orr	r0, r2, r0
    7010:	str	r0, [r1]
    7014:	b	7040 <rb_des_init+0x798>
    7018:	ldr	r0, [pc, #672]	; 72c0 <rb_des_init+0xa18>
    701c:	ldr	r0, [pc, r0]
    7020:	ldr	r1, [sp, #20]
    7024:	sub	r1, r1, #24
    7028:	add	r0, r0, r1, lsl #2
    702c:	ldr	r0, [r0]
    7030:	ldr	r1, [sp, #8]
    7034:	ldr	r2, [r1]
    7038:	orr	r0, r2, r0
    703c:	str	r0, [r1]
    7040:	b	7044 <rb_des_init+0x79c>
    7044:	b	7048 <rb_des_init+0x7a0>
    7048:	ldr	r0, [fp, #-24]	; 0xffffffe8
    704c:	add	r0, r0, #1
    7050:	str	r0, [fp, #-24]	; 0xffffffe8
    7054:	b	6f74 <rb_des_init+0x6cc>
    7058:	b	705c <rb_des_init+0x7b4>
    705c:	ldr	r0, [fp, #-20]	; 0xffffffec
    7060:	add	r0, r0, #1
    7064:	str	r0, [fp, #-20]	; 0xffffffec
    7068:	b	6df0 <rb_des_init+0x548>
    706c:	b	7070 <rb_des_init+0x7c8>
    7070:	ldr	r0, [sp, #28]
    7074:	add	r0, r0, #1
    7078:	str	r0, [sp, #28]
    707c:	b	6bcc <rb_des_init+0x324>
    7080:	movw	r0, #0
    7084:	str	r0, [fp, #-20]	; 0xffffffec
    7088:	ldr	r0, [fp, #-20]	; 0xffffffec
    708c:	cmp	r0, #32
    7090:	bge	70d0 <rb_des_init+0x828>
    7094:	ldr	r0, [pc, #376]	; 7214 <rb_des_init+0x96c>
    7098:	add	r0, pc, r0
    709c:	ldr	r1, [pc, #372]	; 7218 <rb_des_init+0x970>
    70a0:	add	r1, pc, r1
    70a4:	ldr	r2, [fp, #-20]	; 0xffffffec
    70a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    70ac:	add	r1, r1, r3
    70b0:	ldrb	r1, [r1]
    70b4:	sub	r1, r1, #1
    70b8:	add	r0, r0, r1
    70bc:	strb	r2, [r0]
    70c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    70c4:	add	r0, r0, #1
    70c8:	str	r0, [fp, #-20]	; 0xffffffec
    70cc:	b	7088 <rb_des_init+0x7e0>
    70d0:	movw	r0, #0
    70d4:	str	r0, [fp, #-28]	; 0xffffffe4
    70d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    70dc:	cmp	r0, #4
    70e0:	bge	71d0 <rb_des_init+0x928>
    70e4:	movw	r0, #0
    70e8:	str	r0, [fp, #-20]	; 0xffffffec
    70ec:	ldr	r0, [fp, #-20]	; 0xffffffec
    70f0:	cmp	r0, #256	; 0x100
    70f4:	bge	71bc <rb_des_init+0x914>
    70f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    70fc:	ldr	r1, [pc, #448]	; 72c4 <rb_des_init+0xa1c>
    7100:	add	r1, pc, r1
    7104:	add	r0, r1, r0, lsl #10
    7108:	ldr	r1, [fp, #-20]	; 0xffffffec
    710c:	add	r0, r0, r1, lsl #2
    7110:	str	r0, [sp, #16]
    7114:	movw	r1, #0
    7118:	str	r1, [r0]
    711c:	str	r1, [fp, #-24]	; 0xffffffe8
    7120:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7124:	cmp	r0, #8
    7128:	bge	71a8 <rb_des_init+0x900>
    712c:	ldr	r0, [pc, #216]	; 720c <rb_des_init+0x964>
    7130:	add	r0, pc, r0
    7134:	ldr	r1, [fp, #-20]	; 0xffffffec
    7138:	ldr	r2, [fp, #-24]	; 0xffffffe8
    713c:	add	r0, r0, r2
    7140:	ldrb	r0, [r0]
    7144:	and	r0, r1, r0
    7148:	cmp	r0, #0
    714c:	beq	7194 <rb_des_init+0x8ec>
    7150:	ldr	r0, [pc, #184]	; 7210 <rb_des_init+0x968>
    7154:	add	r0, pc, r0
    7158:	ldr	r1, [fp, #-28]	; 0xffffffe4
    715c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7160:	add	r1, r2, r1, lsl #3
    7164:	ldr	r2, [pc, #348]	; 72c8 <rb_des_init+0xa20>
    7168:	add	r2, pc, r2
    716c:	ldrb	r1, [r2, r1]
    7170:	mov	r2, r1
    7174:	ldr	r3, [pc, #336]	; 72cc <rb_des_init+0xa24>
    7178:	add	r3, pc, r3
    717c:	add	r1, r3, r1, lsl #2
    7180:	ldr	r1, [r1]
    7184:	ldr	r3, [sp, #16]
    7188:	ldr	ip, [r3]
    718c:	orr	r1, ip, r1
    7190:	str	r1, [r3]
    7194:	b	7198 <rb_des_init+0x8f0>
    7198:	ldr	r0, [fp, #-24]	; 0xffffffe8
    719c:	add	r0, r0, #1
    71a0:	str	r0, [fp, #-24]	; 0xffffffe8
    71a4:	b	7120 <rb_des_init+0x878>
    71a8:	b	71ac <rb_des_init+0x904>
    71ac:	ldr	r0, [fp, #-20]	; 0xffffffec
    71b0:	add	r0, r0, #1
    71b4:	str	r0, [fp, #-20]	; 0xffffffec
    71b8:	b	70ec <rb_des_init+0x844>
    71bc:	b	71c0 <rb_des_init+0x918>
    71c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    71c4:	add	r0, r0, #1
    71c8:	str	r0, [fp, #-28]	; 0xffffffe4
    71cc:	b	70d8 <rb_des_init+0x830>
    71d0:	ldr	r0, [pc, #48]	; 7208 <rb_des_init+0x960>
    71d4:	add	r0, pc, r0
    71d8:	movw	r1, #1
    71dc:	str	r1, [r0]
    71e0:	sub	sp, fp, #16
    71e4:	pop	{r4, r5, r6, sl, fp, pc}
    71e8:	.word	0x0002f0f4
    71ec:	.word	0x0001b7fc
    71f0:	.word	0x0002f0e8
    71f4:	.word	0x0002f0d8
    71f8:	.word	0x0002f0cc
    71fc:	.word	0x0002f0c0
    7200:	.word	0x0002f0b4
    7204:	.word	0x0002f0a8
    7208:	.word	0x0002e7d8
    720c:	.word	0x0001b2c4
    7210:	.word	0x0001af78
    7214:	.word	0x0003ec28
    7218:	.word	0x0001b35c
    721c:	.word	0x0001b470
    7220:	.word	0x00032cc4
    7224:	.word	0x0001b59c
    7228:	.word	0x00032db4
    722c:	.word	0x0001b76c
    7230:	.word	0x00032f08
    7234:	.word	0x0001b3bc
    7238:	.word	0x0001b3ec
    723c:	.word	0x00032ec8
    7240:	.word	0x0001b33c
    7244:	.word	0x0001b36c
    7248:	.word	0x000330fc
    724c:	.word	0x0001b830
    7250:	.word	0x00033164
    7254:	.word	0x0003311c
    7258:	.word	0x0001b858
    725c:	.word	0x000331a4
    7260:	.word	0x0003311c
    7264:	.word	0x00033154
    7268:	.word	0x0001b890
    726c:	.word	0x0002f1c4
    7270:	.word	0x0002f078
    7274:	.word	0x0001b7d4
    7278:	.word	0x0002f03c
    727c:	.word	0x0002efb8
    7280:	.word	0x0002f194
    7284:	.word	0x000330cc
    7288:	.word	0x000350a8
    728c:	.word	0x00037088
    7290:	.word	0x00039068
    7294:	.word	0x0001b3e0
    7298:	.word	0x0001b3ac
    729c:	.word	0x0001b360
    72a0:	.word	0x0001b32c
    72a4:	.word	0x0003aebc
    72a8:	.word	0x0003be98
    72ac:	.word	0x0002eafc
    72b0:	.word	0x0002ead4
    72b4:	.word	0x0003cd90
    72b8:	.word	0x0003dd6c
    72bc:	.word	0x0002e9d0
    72c0:	.word	0x0002e9a8
    72c4:	.word	0x0003ebe0
    72c8:	.word	0x0003eb58
    72cc:	.word	0x0001af54

000072d0 <rb_des_setkey>:
    72d0:	push	{fp, lr}
    72d4:	mov	fp, sp
    72d8:	sub	sp, sp, #40	; 0x28
    72dc:	str	r0, [fp, #-8]
    72e0:	bl	68a8 <rb_des_init>
    72e4:	ldr	r0, [fp, #-8]
    72e8:	ldr	r0, [r0]
    72ec:	bl	5074 <ntohl@plt>
    72f0:	str	r0, [sp, #20]
    72f4:	ldr	r0, [fp, #-8]
    72f8:	ldr	r0, [r0, #4]
    72fc:	bl	5074 <ntohl@plt>
    7300:	str	r0, [sp, #16]
    7304:	ldr	r0, [sp, #20]
    7308:	ldr	r1, [sp, #16]
    730c:	orr	r0, r0, r1
    7310:	cmp	r0, #0
    7314:	beq	7354 <rb_des_setkey+0x84>
    7318:	ldr	r0, [pc, #876]	; 768c <rb_des_setkey+0x3bc>
    731c:	add	r0, pc, r0
    7320:	ldr	r1, [sp, #20]
    7324:	ldr	r0, [r0]
    7328:	cmp	r1, r0
    732c:	bne	7354 <rb_des_setkey+0x84>
    7330:	ldr	r0, [pc, #856]	; 7690 <rb_des_setkey+0x3c0>
    7334:	add	r0, pc, r0
    7338:	ldr	r1, [sp, #16]
    733c:	ldr	r0, [r0]
    7340:	cmp	r1, r0
    7344:	bne	7354 <rb_des_setkey+0x84>
    7348:	movw	r0, #0
    734c:	str	r0, [fp, #-4]
    7350:	b	7680 <rb_des_setkey+0x3b0>
    7354:	ldr	r0, [pc, #824]	; 7694 <rb_des_setkey+0x3c4>
    7358:	add	r0, pc, r0
    735c:	add	r0, r0, #3584	; 0xe00
    7360:	ldr	r1, [sp, #20]
    7364:	ldr	r2, [pc, #816]	; 769c <rb_des_setkey+0x3cc>
    7368:	add	r2, pc, r2
    736c:	str	r1, [r2]
    7370:	ldr	r1, [sp, #16]
    7374:	ldr	r2, [pc, #804]	; 76a0 <rb_des_setkey+0x3d0>
    7378:	add	r2, pc, r2
    737c:	str	r1, [r2]
    7380:	ldr	r1, [sp, #20]
    7384:	lsr	r2, r1, #25
    7388:	ldr	r3, [pc, #788]	; 76a4 <rb_des_setkey+0x3d4>
    738c:	add	r3, pc, r3
    7390:	ldr	r2, [r3, r2, lsl #2]
    7394:	ubfx	ip, r1, #17, #7
    7398:	add	ip, r3, ip, lsl #2
    739c:	ldr	ip, [ip, #512]	; 0x200
    73a0:	orr	r2, r2, ip
    73a4:	ubfx	ip, r1, #9, #7
    73a8:	add	ip, r3, ip, lsl #2
    73ac:	ldr	ip, [ip, #1024]	; 0x400
    73b0:	orr	r2, r2, ip
    73b4:	and	r1, r1, #254	; 0xfe
    73b8:	add	r1, r3, r1, lsl #1
    73bc:	ldr	r1, [r1, #1536]	; 0x600
    73c0:	orr	r1, r2, r1
    73c4:	ldr	r2, [sp, #16]
    73c8:	lsr	ip, r2, #25
    73cc:	add	ip, r3, ip, lsl #2
    73d0:	ldr	ip, [ip, #2048]	; 0x800
    73d4:	orr	r1, r1, ip
    73d8:	ubfx	ip, r2, #17, #7
    73dc:	add	ip, r3, ip, lsl #2
    73e0:	ldr	ip, [ip, #2560]	; 0xa00
    73e4:	orr	r1, r1, ip
    73e8:	ubfx	ip, r2, #9, #7
    73ec:	add	ip, r3, ip, lsl #2
    73f0:	ldr	ip, [ip, #3072]	; 0xc00
    73f4:	orr	r1, r1, ip
    73f8:	and	r2, r2, #254	; 0xfe
    73fc:	add	r2, r3, r2, lsl #1
    7400:	ldr	r2, [r2, #3584]	; 0xe00
    7404:	orr	r1, r1, r2
    7408:	str	r1, [fp, #-12]
    740c:	ldr	r1, [sp, #20]
    7410:	lsr	r2, r1, #25
    7414:	ldr	r3, [pc, #652]	; 76a8 <rb_des_setkey+0x3d8>
    7418:	add	r3, pc, r3
    741c:	ldr	r2, [r3, r2, lsl #2]
    7420:	ubfx	ip, r1, #17, #7
    7424:	add	ip, r3, ip, lsl #2
    7428:	ldr	ip, [ip, #512]	; 0x200
    742c:	orr	r2, r2, ip
    7430:	ubfx	ip, r1, #9, #7
    7434:	add	ip, r3, ip, lsl #2
    7438:	ldr	ip, [ip, #1024]	; 0x400
    743c:	orr	r2, r2, ip
    7440:	and	r1, r1, #254	; 0xfe
    7444:	add	r1, r3, r1, lsl #1
    7448:	ldr	r1, [r1, #1536]	; 0x600
    744c:	orr	r1, r2, r1
    7450:	ldr	r2, [sp, #16]
    7454:	lsr	ip, r2, #25
    7458:	add	ip, r3, ip, lsl #2
    745c:	ldr	ip, [ip, #2048]	; 0x800
    7460:	orr	r1, r1, ip
    7464:	ubfx	ip, r2, #17, #7
    7468:	add	ip, r3, ip, lsl #2
    746c:	ldr	ip, [ip, #2560]	; 0xa00
    7470:	orr	r1, r1, ip
    7474:	ubfx	ip, r2, #9, #7
    7478:	add	ip, r3, ip, lsl #2
    747c:	ldr	ip, [ip, #3072]	; 0xc00
    7480:	orr	r1, r1, ip
    7484:	ubfx	r2, r2, #1, #7
    7488:	mov	ip, r2
    748c:	add	r2, r3, r2, lsl #2
    7490:	add	r2, r2, #3584	; 0xe00
    7494:	ldr	r2, [r2]
    7498:	orr	r1, r1, r2
    749c:	str	r1, [fp, #-16]
    74a0:	movw	r1, #0
    74a4:	str	r1, [sp, #12]
    74a8:	str	r1, [sp, #8]
    74ac:	ldr	r0, [sp, #8]
    74b0:	cmp	r0, #16
    74b4:	bge	7678 <rb_des_setkey+0x3a8>
    74b8:	ldr	r0, [pc, #472]	; 7698 <rb_des_setkey+0x3c8>
    74bc:	add	r0, pc, r0
    74c0:	ldr	r1, [sp, #8]
    74c4:	ldr	r2, [pc, #480]	; 76ac <rb_des_setkey+0x3dc>
    74c8:	add	r2, pc, r2
    74cc:	ldrb	r1, [r2, r1]
    74d0:	ldr	r2, [sp, #12]
    74d4:	add	r1, r2, r1
    74d8:	str	r1, [sp, #12]
    74dc:	ldr	r1, [fp, #-12]
    74e0:	ldr	r2, [sp, #12]
    74e4:	lsl	r3, r1, r2
    74e8:	rsb	r2, r2, #28
    74ec:	orr	r1, r3, r1, lsr r2
    74f0:	str	r1, [sp, #4]
    74f4:	ldr	r1, [fp, #-16]
    74f8:	ldr	r2, [sp, #12]
    74fc:	lsl	r3, r1, r2
    7500:	rsb	r2, r2, #28
    7504:	orr	r1, r3, r1, lsr r2
    7508:	str	r1, [sp]
    750c:	ldr	r1, [sp, #4]
    7510:	ubfx	r2, r1, #21, #7
    7514:	ldr	r3, [pc, #404]	; 76b0 <rb_des_setkey+0x3e0>
    7518:	add	r3, pc, r3
    751c:	ldr	r2, [r3, r2, lsl #2]
    7520:	ubfx	ip, r1, #14, #7
    7524:	add	ip, r3, ip, lsl #2
    7528:	ldr	ip, [ip, #512]	; 0x200
    752c:	orr	r2, r2, ip
    7530:	ubfx	ip, r1, #7, #7
    7534:	add	ip, r3, ip, lsl #2
    7538:	ldr	ip, [ip, #1024]	; 0x400
    753c:	orr	r2, r2, ip
    7540:	and	r1, r1, #127	; 0x7f
    7544:	add	r1, r3, r1, lsl #2
    7548:	ldr	r1, [r1, #1536]	; 0x600
    754c:	orr	r1, r2, r1
    7550:	ldr	r2, [sp]
    7554:	ubfx	ip, r2, #21, #7
    7558:	add	ip, r3, ip, lsl #2
    755c:	ldr	ip, [ip, #2048]	; 0x800
    7560:	orr	r1, r1, ip
    7564:	ubfx	ip, r2, #14, #7
    7568:	add	ip, r3, ip, lsl #2
    756c:	ldr	ip, [ip, #2560]	; 0xa00
    7570:	orr	r1, r1, ip
    7574:	ubfx	ip, r2, #7, #7
    7578:	add	ip, r3, ip, lsl #2
    757c:	ldr	ip, [ip, #3072]	; 0xc00
    7580:	orr	r1, r1, ip
    7584:	and	r2, r2, #127	; 0x7f
    7588:	add	r2, r3, r2, lsl #2
    758c:	ldr	r2, [r2, #3584]	; 0xe00
    7590:	orr	r1, r1, r2
    7594:	ldr	r2, [sp, #8]
    7598:	ldr	r3, [pc, #276]	; 76b4 <rb_des_setkey+0x3e4>
    759c:	add	r3, pc, r3
    75a0:	str	r1, [r3, r2, lsl #2]
    75a4:	ldr	r2, [sp, #8]
    75a8:	rsb	r2, r2, #15
    75ac:	ldr	r3, [pc, #260]	; 76b8 <rb_des_setkey+0x3e8>
    75b0:	add	r3, pc, r3
    75b4:	str	r1, [r3, r2, lsl #2]
    75b8:	ldr	r1, [sp, #4]
    75bc:	ubfx	r2, r1, #21, #7
    75c0:	ldr	r3, [pc, #244]	; 76bc <rb_des_setkey+0x3ec>
    75c4:	add	r3, pc, r3
    75c8:	ldr	r2, [r3, r2, lsl #2]
    75cc:	ubfx	ip, r1, #14, #7
    75d0:	add	ip, r3, ip, lsl #2
    75d4:	ldr	ip, [ip, #512]	; 0x200
    75d8:	orr	r2, r2, ip
    75dc:	ubfx	ip, r1, #7, #7
    75e0:	add	ip, r3, ip, lsl #2
    75e4:	ldr	ip, [ip, #1024]	; 0x400
    75e8:	orr	r2, r2, ip
    75ec:	and	r1, r1, #127	; 0x7f
    75f0:	add	r1, r3, r1, lsl #2
    75f4:	ldr	r1, [r1, #1536]	; 0x600
    75f8:	orr	r1, r2, r1
    75fc:	ldr	r2, [sp]
    7600:	ubfx	ip, r2, #21, #7
    7604:	add	ip, r3, ip, lsl #2
    7608:	ldr	ip, [ip, #2048]	; 0x800
    760c:	orr	r1, r1, ip
    7610:	ubfx	ip, r2, #14, #7
    7614:	add	ip, r3, ip, lsl #2
    7618:	ldr	ip, [ip, #2560]	; 0xa00
    761c:	orr	r1, r1, ip
    7620:	ubfx	ip, r2, #7, #7
    7624:	add	ip, r3, ip, lsl #2
    7628:	ldr	ip, [ip, #3072]	; 0xc00
    762c:	orr	r1, r1, ip
    7630:	and	r2, r2, #127	; 0x7f
    7634:	add	r2, r3, r2, lsl #2
    7638:	ldr	r2, [r2, #3584]	; 0xe00
    763c:	orr	r1, r1, r2
    7640:	ldr	r2, [sp, #8]
    7644:	ldr	r3, [pc, #116]	; 76c0 <rb_des_setkey+0x3f0>
    7648:	add	r3, pc, r3
    764c:	str	r1, [r3, r2, lsl #2]
    7650:	ldr	r2, [sp, #8]
    7654:	rsb	r2, r2, #15
    7658:	ldr	r3, [pc, #100]	; 76c4 <rb_des_setkey+0x3f4>
    765c:	add	r3, pc, r3
    7660:	add	r2, r3, r2, lsl #2
    7664:	str	r1, [r2]
    7668:	ldr	r0, [sp, #8]
    766c:	add	r0, r0, #1
    7670:	str	r0, [sp, #8]
    7674:	b	74ac <rb_des_setkey+0x1dc>
    7678:	movw	r0, #0
    767c:	str	r0, [fp, #-4]
    7680:	ldr	r0, [fp, #-4]
    7684:	mov	sp, fp
    7688:	pop	{fp, pc}
    768c:	.word	0x0002e698
    7690:	.word	0x0002e67c
    7694:	.word	0x0003b968
    7698:	.word	0x0003f8e4
    769c:	.word	0x0002e64c
    76a0:	.word	0x0002e638
    76a4:	.word	0x0003a934
    76a8:	.word	0x0003b8a8
    76ac:	.word	0x0001af54
    76b0:	.word	0x0003c7a8
    76b4:	.word	0x0003f744
    76b8:	.word	0x0003f770
    76bc:	.word	0x0003d6fc
    76c0:	.word	0x0003f718
    76c4:	.word	0x0003f744

000076c8 <rb_ascii_to_bin>:
    76c8:	sub	sp, sp, #8
    76cc:	strb	r0, [sp, #3]
    76d0:	ldrb	r0, [sp, #3]
    76d4:	cmp	r0, #122	; 0x7a
    76d8:	ble	76e8 <rb_ascii_to_bin+0x20>
    76dc:	movw	r0, #0
    76e0:	str	r0, [sp, #4]
    76e4:	b	777c <rb_ascii_to_bin+0xb4>
    76e8:	ldrb	r0, [sp, #3]
    76ec:	cmp	r0, #97	; 0x61
    76f0:	blt	7708 <rb_ascii_to_bin+0x40>
    76f4:	ldrb	r0, [sp, #3]
    76f8:	sub	r0, r0, #97	; 0x61
    76fc:	add	r0, r0, #38	; 0x26
    7700:	str	r0, [sp, #4]
    7704:	b	777c <rb_ascii_to_bin+0xb4>
    7708:	ldrb	r0, [sp, #3]
    770c:	cmp	r0, #90	; 0x5a
    7710:	ble	7720 <rb_ascii_to_bin+0x58>
    7714:	movw	r0, #0
    7718:	str	r0, [sp, #4]
    771c:	b	777c <rb_ascii_to_bin+0xb4>
    7720:	ldrb	r0, [sp, #3]
    7724:	cmp	r0, #65	; 0x41
    7728:	blt	7740 <rb_ascii_to_bin+0x78>
    772c:	ldrb	r0, [sp, #3]
    7730:	sub	r0, r0, #65	; 0x41
    7734:	add	r0, r0, #12
    7738:	str	r0, [sp, #4]
    773c:	b	777c <rb_ascii_to_bin+0xb4>
    7740:	ldrb	r0, [sp, #3]
    7744:	cmp	r0, #57	; 0x39
    7748:	ble	7758 <rb_ascii_to_bin+0x90>
    774c:	movw	r0, #0
    7750:	str	r0, [sp, #4]
    7754:	b	777c <rb_ascii_to_bin+0xb4>
    7758:	ldrb	r0, [sp, #3]
    775c:	cmp	r0, #46	; 0x2e
    7760:	blt	7774 <rb_ascii_to_bin+0xac>
    7764:	ldrb	r0, [sp, #3]
    7768:	sub	r0, r0, #46	; 0x2e
    776c:	str	r0, [sp, #4]
    7770:	b	777c <rb_ascii_to_bin+0xb4>
    7774:	movw	r0, #0
    7778:	str	r0, [sp, #4]
    777c:	ldr	r0, [sp, #4]
    7780:	add	sp, sp, #8
    7784:	bx	lr

00007788 <rb_setup_salt>:
    7788:	sub	sp, sp, #16
    778c:	ldr	r1, [pc, #180]	; 7848 <rb_setup_salt+0xc0>
    7790:	add	r1, pc, r1
    7794:	str	r0, [sp, #12]
    7798:	ldr	r0, [sp, #12]
    779c:	ldr	r1, [r1]
    77a0:	cmp	r0, r1
    77a4:	bne	77ac <rb_setup_salt+0x24>
    77a8:	b	7840 <rb_setup_salt+0xb8>
    77ac:	ldr	r0, [pc, #152]	; 784c <rb_setup_salt+0xc4>
    77b0:	ldr	r1, [pc, #152]	; 7850 <rb_setup_salt+0xc8>
    77b4:	add	r1, pc, r1
    77b8:	ldr	r2, [pc, #148]	; 7854 <rb_setup_salt+0xcc>
    77bc:	add	r2, pc, r2
    77c0:	ldr	r3, [sp, #12]
    77c4:	str	r3, [r2]
    77c8:	movw	r2, #0
    77cc:	str	r2, [r1]
    77d0:	movw	r1, #1
    77d4:	str	r1, [sp, #4]
    77d8:	str	r0, [sp, #8]
    77dc:	str	r2, [sp]
    77e0:	ldr	r0, [sp]
    77e4:	cmp	r0, #24
    77e8:	bge	7840 <rb_setup_salt+0xb8>
    77ec:	ldr	r0, [sp, #12]
    77f0:	ldr	r1, [sp, #4]
    77f4:	and	r0, r0, r1
    77f8:	cmp	r0, #0
    77fc:	beq	7818 <rb_setup_salt+0x90>
    7800:	ldr	r0, [pc, #80]	; 7858 <rb_setup_salt+0xd0>
    7804:	add	r0, pc, r0
    7808:	ldr	r1, [sp, #8]
    780c:	ldr	r2, [r0]
    7810:	orr	r1, r2, r1
    7814:	str	r1, [r0]
    7818:	ldr	r0, [sp, #4]
    781c:	lsl	r0, r0, #1
    7820:	str	r0, [sp, #4]
    7824:	ldr	r0, [sp, #8]
    7828:	lsr	r0, r0, #1
    782c:	str	r0, [sp, #8]
    7830:	ldr	r0, [sp]
    7834:	add	r0, r0, #1
    7838:	str	r0, [sp]
    783c:	b	77e0 <rb_setup_salt+0x58>
    7840:	add	sp, sp, #16
    7844:	bx	lr
    7848:	.word	0x0002e22c
    784c:	.word	0x00800000
    7850:	.word	0x0002e204
    7854:	.word	0x0002e200
    7858:	.word	0x0002e1b4

0000785c <rb_do_des>:
    785c:	push	{r4, r5, fp, lr}
    7860:	add	fp, sp, #8
    7864:	sub	sp, sp, #60	; 0x3c
    7868:	ldr	ip, [fp, #8]
    786c:	str	r0, [fp, #-16]
    7870:	str	r1, [fp, #-20]	; 0xffffffec
    7874:	str	r2, [fp, #-24]	; 0xffffffe8
    7878:	str	r3, [fp, #-28]	; 0xffffffe4
    787c:	movw	r0, #0
    7880:	str	r0, [sp, #12]
    7884:	ldr	r0, [fp, #8]
    7888:	cmp	r0, #0
    788c:	bne	789c <rb_do_des+0x40>
    7890:	movw	r0, #1
    7894:	str	r0, [fp, #-12]
    7898:	b	7d40 <rb_do_des+0x4e4>
    789c:	ldr	r0, [fp, #8]
    78a0:	cmp	r0, #0
    78a4:	ble	78c4 <rb_do_des+0x68>
    78a8:	ldr	r0, [pc, #1188]	; 7d54 <rb_do_des+0x4f8>
    78ac:	add	r0, pc, r0
    78b0:	ldr	r1, [pc, #1184]	; 7d58 <rb_do_des+0x4fc>
    78b4:	add	r1, pc, r1
    78b8:	str	r1, [sp, #20]
    78bc:	str	r0, [sp, #16]
    78c0:	b	78ec <rb_do_des+0x90>
    78c4:	ldr	r0, [pc, #1152]	; 7d4c <rb_do_des+0x4f0>
    78c8:	add	r0, pc, r0
    78cc:	ldr	r1, [pc, #1148]	; 7d50 <rb_do_des+0x4f4>
    78d0:	add	r1, pc, r1
    78d4:	ldr	r2, [fp, #8]
    78d8:	movw	r3, #0
    78dc:	sub	r2, r3, r2
    78e0:	str	r2, [fp, #8]
    78e4:	str	r1, [sp, #20]
    78e8:	str	r0, [sp, #16]
    78ec:	b	78f0 <rb_do_des+0x94>
    78f0:	ldr	r0, [pc, #1124]	; 7d5c <rb_do_des+0x500>
    78f4:	add	r0, pc, r0
    78f8:	add	r0, r0, #7168	; 0x1c00
    78fc:	ldr	r1, [fp, #-16]
    7900:	lsr	r2, r1, #24
    7904:	ldr	r3, [pc, #1116]	; 7d68 <rb_do_des+0x50c>
    7908:	add	r3, pc, r3
    790c:	ldr	r2, [r3, r2, lsl #2]
    7910:	ubfx	ip, r1, #16, #8
    7914:	add	ip, r3, ip, lsl #2
    7918:	ldr	ip, [ip, #1024]	; 0x400
    791c:	orr	r2, r2, ip
    7920:	ubfx	ip, r1, #8, #8
    7924:	add	ip, r3, ip, lsl #2
    7928:	ldr	ip, [ip, #2048]	; 0x800
    792c:	orr	r2, r2, ip
    7930:	uxtb	r1, r1
    7934:	add	r1, r3, r1, lsl #2
    7938:	ldr	r1, [r1, #3072]	; 0xc00
    793c:	orr	r1, r2, r1
    7940:	ldr	r2, [fp, #-20]	; 0xffffffec
    7944:	lsr	ip, r2, #24
    7948:	add	ip, r3, ip, lsl #2
    794c:	mov	lr, #4096	; 0x1000
    7950:	ldr	ip, [ip, lr]
    7954:	orr	r1, r1, ip
    7958:	ubfx	ip, r2, #16, #8
    795c:	add	ip, r3, ip, lsl #2
    7960:	mov	r4, #5120	; 0x1400
    7964:	ldr	ip, [ip, r4]
    7968:	orr	r1, r1, ip
    796c:	ubfx	ip, r2, #8, #8
    7970:	add	ip, r3, ip, lsl #2
    7974:	mov	r5, #6144	; 0x1800
    7978:	ldr	ip, [ip, r5]
    797c:	orr	r1, r1, ip
    7980:	uxtb	r2, r2
    7984:	add	r2, r3, r2, lsl #2
    7988:	mov	r3, #7168	; 0x1c00
    798c:	ldr	r2, [r2, r3]
    7990:	orr	r1, r1, r2
    7994:	str	r1, [fp, #-32]	; 0xffffffe0
    7998:	ldr	r1, [fp, #-16]
    799c:	lsr	r2, r1, #24
    79a0:	ldr	r3, [pc, #964]	; 7d6c <rb_do_des+0x510>
    79a4:	add	r3, pc, r3
    79a8:	ldr	r2, [r3, r2, lsl #2]
    79ac:	ubfx	ip, r1, #16, #8
    79b0:	add	ip, r3, ip, lsl #2
    79b4:	ldr	ip, [ip, #1024]	; 0x400
    79b8:	orr	r2, r2, ip
    79bc:	ubfx	ip, r1, #8, #8
    79c0:	add	ip, r3, ip, lsl #2
    79c4:	ldr	ip, [ip, #2048]	; 0x800
    79c8:	orr	r2, r2, ip
    79cc:	uxtb	r1, r1
    79d0:	add	r1, r3, r1, lsl #2
    79d4:	ldr	r1, [r1, #3072]	; 0xc00
    79d8:	orr	r1, r2, r1
    79dc:	ldr	r2, [fp, #-20]	; 0xffffffec
    79e0:	lsr	ip, r2, #24
    79e4:	add	ip, r3, ip, lsl #2
    79e8:	ldr	ip, [ip, lr]
    79ec:	orr	r1, r1, ip
    79f0:	ubfx	ip, r2, #16, #8
    79f4:	add	ip, r3, ip, lsl #2
    79f8:	ldr	ip, [ip, r4]
    79fc:	orr	r1, r1, ip
    7a00:	ubfx	ip, r2, #8, #8
    7a04:	add	ip, r3, ip, lsl #2
    7a08:	ldr	ip, [ip, r5]
    7a0c:	orr	r1, r1, ip
    7a10:	uxtb	r2, r2
    7a14:	mov	ip, r2
    7a18:	add	r2, r3, r2, lsl #2
    7a1c:	add	r2, r2, #7168	; 0x1c00
    7a20:	ldr	r2, [r2]
    7a24:	orr	r1, r1, r2
    7a28:	str	r1, [sp, #32]
    7a2c:	ldr	r0, [fp, #8]
    7a30:	mvn	r1, #0
    7a34:	add	r1, r0, r1
    7a38:	str	r1, [fp, #8]
    7a3c:	cmp	r0, #0
    7a40:	beq	7bf4 <rb_do_des+0x398>
    7a44:	ldr	r0, [sp, #20]
    7a48:	str	r0, [sp, #28]
    7a4c:	ldr	r0, [sp, #16]
    7a50:	str	r0, [sp, #24]
    7a54:	movw	r0, #16
    7a58:	str	r0, [sp]
    7a5c:	ldr	r0, [sp]
    7a60:	mvn	r1, #0
    7a64:	add	r1, r0, r1
    7a68:	str	r1, [sp]
    7a6c:	cmp	r0, #0
    7a70:	beq	7be0 <rb_do_des+0x384>
    7a74:	ldr	r0, [pc, #744]	; 7d64 <rb_do_des+0x508>
    7a78:	add	r0, pc, r0
    7a7c:	add	r0, r0, #3072	; 0xc00
    7a80:	ldr	r1, [sp, #32]
    7a84:	and	r2, r1, #1
    7a88:	lsl	r2, r2, #23
    7a8c:	and	r3, r1, #-134217728	; 0xf8000000
    7a90:	orr	r2, r2, r3, lsr #9
    7a94:	and	r3, r1, #528482304	; 0x1f800000
    7a98:	orr	r2, r2, r3, lsr #11
    7a9c:	and	r3, r1, #33030144	; 0x1f80000
    7aa0:	orr	r2, r2, r3, lsr #13
    7aa4:	and	r1, r1, #2064384	; 0x1f8000
    7aa8:	orr	r1, r2, r1, lsr #15
    7aac:	str	r1, [sp, #8]
    7ab0:	ldr	r1, [sp, #32]
    7ab4:	and	r2, r1, #129024	; 0x1f800
    7ab8:	lsl	r2, r2, #7
    7abc:	and	r3, r1, #8064	; 0x1f80
    7ac0:	orr	r2, r2, r3, lsl #5
    7ac4:	and	r3, r1, #504	; 0x1f8
    7ac8:	orr	r2, r2, r3, lsl #3
    7acc:	and	r3, r1, #31
    7ad0:	orr	r2, r2, r3, lsl #1
    7ad4:	orr	r1, r2, r1, lsr #31
    7ad8:	str	r1, [sp, #4]
    7adc:	ldr	r1, [sp, #8]
    7ae0:	ldr	r2, [sp, #4]
    7ae4:	eor	r1, r1, r2
    7ae8:	ldr	r2, [pc, #640]	; 7d70 <rb_do_des+0x514>
    7aec:	ldr	r2, [pc, r2]
    7af0:	and	r1, r1, r2
    7af4:	str	r1, [sp, #12]
    7af8:	ldr	r1, [sp, #12]
    7afc:	ldr	r2, [sp, #28]
    7b00:	add	r3, r2, #4
    7b04:	str	r3, [sp, #28]
    7b08:	ldr	r2, [r2]
    7b0c:	eor	r1, r1, r2
    7b10:	ldr	r2, [sp, #8]
    7b14:	eor	r1, r2, r1
    7b18:	str	r1, [sp, #8]
    7b1c:	ldr	r1, [sp, #12]
    7b20:	ldr	r2, [sp, #24]
    7b24:	add	r3, r2, #4
    7b28:	str	r3, [sp, #24]
    7b2c:	ldr	r2, [r2]
    7b30:	eor	r1, r1, r2
    7b34:	ldr	r2, [sp, #4]
    7b38:	eor	r1, r2, r1
    7b3c:	str	r1, [sp, #4]
    7b40:	ldr	r1, [sp, #8]
    7b44:	ldr	r2, [pc, #552]	; 7d74 <rb_do_des+0x518>
    7b48:	add	r2, pc, r2
    7b4c:	ldrb	r3, [r2, r1, lsr #12]
    7b50:	ldr	ip, [pc, #544]	; 7d78 <rb_do_des+0x51c>
    7b54:	add	ip, pc, ip
    7b58:	ldr	r3, [ip, r3, lsl #2]
    7b5c:	bfc	r1, #12, #20
    7b60:	add	r1, r2, r1
    7b64:	mov	lr, #4096	; 0x1000
    7b68:	ldrb	r1, [r1, lr]
    7b6c:	add	r1, ip, r1, lsl #2
    7b70:	ldr	r1, [r1, #1024]	; 0x400
    7b74:	orr	r1, r3, r1
    7b78:	ldr	r3, [sp, #4]
    7b7c:	add	lr, r2, r3, lsr #12
    7b80:	mov	r4, #8192	; 0x2000
    7b84:	ldrb	lr, [lr, r4]
    7b88:	add	lr, ip, lr, lsl #2
    7b8c:	ldr	lr, [lr, #2048]	; 0x800
    7b90:	orr	r1, r1, lr
    7b94:	bfc	r3, #12, #20
    7b98:	add	r2, r2, r3
    7b9c:	mov	r3, #12288	; 0x3000
    7ba0:	ldrb	r2, [r2, r3]
    7ba4:	mov	r3, r2
    7ba8:	add	r2, ip, r2, lsl #2
    7bac:	add	r2, r2, #3072	; 0xc00
    7bb0:	ldr	r2, [r2]
    7bb4:	orr	r1, r1, r2
    7bb8:	str	r1, [sp, #12]
    7bbc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    7bc0:	ldr	r2, [sp, #12]
    7bc4:	eor	r1, r2, r1
    7bc8:	str	r1, [sp, #12]
    7bcc:	ldr	r1, [sp, #32]
    7bd0:	str	r1, [fp, #-32]	; 0xffffffe0
    7bd4:	ldr	r1, [sp, #12]
    7bd8:	str	r1, [sp, #32]
    7bdc:	b	7a5c <rb_do_des+0x200>
    7be0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7be4:	str	r0, [sp, #32]
    7be8:	ldr	r0, [sp, #12]
    7bec:	str	r0, [fp, #-32]	; 0xffffffe0
    7bf0:	b	7a2c <rb_do_des+0x1d0>
    7bf4:	ldr	r0, [pc, #356]	; 7d60 <rb_do_des+0x504>
    7bf8:	add	r0, pc, r0
    7bfc:	add	r0, r0, #7168	; 0x1c00
    7c00:	ldr	r1, [fp, #-32]	; 0xffffffe0
    7c04:	lsr	r2, r1, #24
    7c08:	ldr	r3, [pc, #364]	; 7d7c <rb_do_des+0x520>
    7c0c:	add	r3, pc, r3
    7c10:	ldr	r2, [r3, r2, lsl #2]
    7c14:	ubfx	ip, r1, #16, #8
    7c18:	add	ip, r3, ip, lsl #2
    7c1c:	ldr	ip, [ip, #1024]	; 0x400
    7c20:	orr	r2, r2, ip
    7c24:	ubfx	ip, r1, #8, #8
    7c28:	add	ip, r3, ip, lsl #2
    7c2c:	ldr	ip, [ip, #2048]	; 0x800
    7c30:	orr	r2, r2, ip
    7c34:	uxtb	r1, r1
    7c38:	add	r1, r3, r1, lsl #2
    7c3c:	ldr	r1, [r1, #3072]	; 0xc00
    7c40:	orr	r1, r2, r1
    7c44:	ldr	r2, [sp, #32]
    7c48:	lsr	ip, r2, #24
    7c4c:	add	ip, r3, ip, lsl #2
    7c50:	mov	lr, #4096	; 0x1000
    7c54:	ldr	ip, [ip, lr]
    7c58:	orr	r1, r1, ip
    7c5c:	ubfx	ip, r2, #16, #8
    7c60:	add	ip, r3, ip, lsl #2
    7c64:	mov	r4, #5120	; 0x1400
    7c68:	ldr	ip, [ip, r4]
    7c6c:	orr	r1, r1, ip
    7c70:	ubfx	ip, r2, #8, #8
    7c74:	add	ip, r3, ip, lsl #2
    7c78:	mov	r5, #6144	; 0x1800
    7c7c:	ldr	ip, [ip, r5]
    7c80:	orr	r1, r1, ip
    7c84:	uxtb	r2, r2
    7c88:	add	r2, r3, r2, lsl #2
    7c8c:	mov	r3, #7168	; 0x1c00
    7c90:	ldr	r2, [r2, r3]
    7c94:	orr	r1, r1, r2
    7c98:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7c9c:	str	r1, [r2]
    7ca0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    7ca4:	lsr	r2, r1, #24
    7ca8:	ldr	r3, [pc, #208]	; 7d80 <rb_do_des+0x524>
    7cac:	add	r3, pc, r3
    7cb0:	ldr	r2, [r3, r2, lsl #2]
    7cb4:	ubfx	ip, r1, #16, #8
    7cb8:	add	ip, r3, ip, lsl #2
    7cbc:	ldr	ip, [ip, #1024]	; 0x400
    7cc0:	orr	r2, r2, ip
    7cc4:	ubfx	ip, r1, #8, #8
    7cc8:	add	ip, r3, ip, lsl #2
    7ccc:	ldr	ip, [ip, #2048]	; 0x800
    7cd0:	orr	r2, r2, ip
    7cd4:	uxtb	r1, r1
    7cd8:	add	r1, r3, r1, lsl #2
    7cdc:	ldr	r1, [r1, #3072]	; 0xc00
    7ce0:	orr	r1, r2, r1
    7ce4:	ldr	r2, [sp, #32]
    7ce8:	lsr	ip, r2, #24
    7cec:	add	ip, r3, ip, lsl #2
    7cf0:	ldr	ip, [ip, lr]
    7cf4:	orr	r1, r1, ip
    7cf8:	ubfx	ip, r2, #16, #8
    7cfc:	add	ip, r3, ip, lsl #2
    7d00:	ldr	ip, [ip, r4]
    7d04:	orr	r1, r1, ip
    7d08:	ubfx	ip, r2, #8, #8
    7d0c:	add	ip, r3, ip, lsl #2
    7d10:	ldr	ip, [ip, r5]
    7d14:	orr	r1, r1, ip
    7d18:	uxtb	r2, r2
    7d1c:	mov	ip, r2
    7d20:	add	r2, r3, r2, lsl #2
    7d24:	add	r2, r2, #7168	; 0x1c00
    7d28:	ldr	r2, [r2]
    7d2c:	orr	r1, r1, r2
    7d30:	ldr	r2, [fp, #-28]	; 0xffffffe4
    7d34:	str	r1, [r2]
    7d38:	movw	r1, #0
    7d3c:	str	r1, [fp, #-12]
    7d40:	ldr	r0, [fp, #-12]
    7d44:	sub	sp, fp, #8
    7d48:	pop	{r4, r5, fp, pc}
    7d4c:	.word	0x0003f4d8
    7d50:	.word	0x0003f450
    7d54:	.word	0x0003f4b4
    7d58:	.word	0x0003f42c
    7d5c:	.word	0x000343cc
    7d60:	.word	0x000380c8
    7d64:	.word	0x0003e268
    7d68:	.word	0x000323b8
    7d6c:	.word	0x0003431c
    7d70:	.word	0x0002decc
    7d74:	.word	0x0002e080
    7d78:	.word	0x0003e18c
    7d7c:	.word	0x000360b4
    7d80:	.word	0x00038014

00007d84 <MD5Init>:
    7d84:	push	{fp, lr}
    7d88:	mov	fp, sp
    7d8c:	sub	sp, sp, #4
    7d90:	ldr	r1, [pc, #72]	; 7de0 <MD5Init+0x5c>
    7d94:	ldr	r2, [pc, #72]	; 7de4 <MD5Init+0x60>
    7d98:	ldr	r3, [pc, #72]	; 7de8 <MD5Init+0x64>
    7d9c:	ldr	ip, [pc, #72]	; 7dec <MD5Init+0x68>
    7da0:	str	r0, [sp]
    7da4:	ldr	r0, [sp]
    7da8:	movw	lr, #0
    7dac:	str	lr, [r0, #20]
    7db0:	ldr	r0, [sp]
    7db4:	str	lr, [r0, #16]
    7db8:	ldr	r0, [sp]
    7dbc:	str	ip, [r0]
    7dc0:	ldr	r0, [sp]
    7dc4:	str	r3, [r0, #4]
    7dc8:	ldr	r0, [sp]
    7dcc:	str	r2, [r0, #8]
    7dd0:	ldr	r0, [sp]
    7dd4:	str	r1, [r0, #12]
    7dd8:	mov	sp, fp
    7ddc:	pop	{fp, pc}
    7de0:	.word	0x10325476
    7de4:	.word	0x98badcfe
    7de8:	.word	0xefcdab89
    7dec:	.word	0x67452301

00007df0 <MD5Update>:
    7df0:	push	{fp, lr}
    7df4:	mov	fp, sp
    7df8:	sub	sp, sp, #32
    7dfc:	str	r0, [fp, #-4]
    7e00:	str	r1, [fp, #-8]
    7e04:	str	r2, [fp, #-12]
    7e08:	ldr	r0, [fp, #-8]
    7e0c:	str	r0, [sp, #4]
    7e10:	ldr	r0, [fp, #-4]
    7e14:	ldr	r0, [r0, #16]
    7e18:	lsr	r0, r0, #3
    7e1c:	and	r0, r0, #63	; 0x3f
    7e20:	str	r0, [sp, #12]
    7e24:	ldr	r0, [fp, #-12]
    7e28:	lsl	r0, r0, #3
    7e2c:	ldr	r1, [fp, #-4]
    7e30:	ldr	r2, [r1, #16]
    7e34:	add	r0, r2, r0
    7e38:	str	r0, [r1, #16]
    7e3c:	ldr	r1, [fp, #-12]
    7e40:	lsl	r1, r1, #3
    7e44:	cmp	r0, r1
    7e48:	bcs	7e5c <MD5Update+0x6c>
    7e4c:	ldr	r0, [fp, #-4]
    7e50:	ldr	r1, [r0, #20]
    7e54:	add	r1, r1, #1
    7e58:	str	r1, [r0, #20]
    7e5c:	ldr	r0, [fp, #-12]
    7e60:	lsr	r0, r0, #29
    7e64:	ldr	r1, [fp, #-4]
    7e68:	ldr	r2, [r1, #20]
    7e6c:	add	r0, r2, r0
    7e70:	str	r0, [r1, #20]
    7e74:	ldr	r0, [sp, #12]
    7e78:	movw	r1, #64	; 0x40
    7e7c:	sub	r0, r1, r0
    7e80:	str	r0, [sp, #8]
    7e84:	ldr	r0, [fp, #-12]
    7e88:	ldr	r1, [sp, #8]
    7e8c:	cmp	r0, r1
    7e90:	bcc	7f0c <MD5Update+0x11c>
    7e94:	ldr	r0, [fp, #-4]
    7e98:	add	r0, r0, #24
    7e9c:	ldr	r1, [sp, #12]
    7ea0:	add	r0, r0, r1
    7ea4:	ldr	r1, [sp, #4]
    7ea8:	ldr	r2, [sp, #8]
    7eac:	bl	51dc <memcpy@plt>
    7eb0:	ldr	r0, [fp, #-4]
    7eb4:	ldr	r1, [fp, #-4]
    7eb8:	add	r1, r1, #24
    7ebc:	bl	8074 <MD5Transform>
    7ec0:	ldr	r0, [sp, #8]
    7ec4:	str	r0, [sp, #16]
    7ec8:	ldr	r0, [sp, #16]
    7ecc:	add	r0, r0, #63	; 0x3f
    7ed0:	ldr	r1, [fp, #-12]
    7ed4:	cmp	r0, r1
    7ed8:	bcs	7f00 <MD5Update+0x110>
    7edc:	ldr	r0, [fp, #-4]
    7ee0:	ldr	r1, [sp, #4]
    7ee4:	ldr	r2, [sp, #16]
    7ee8:	add	r1, r1, r2
    7eec:	bl	8074 <MD5Transform>
    7ef0:	ldr	r0, [sp, #16]
    7ef4:	add	r0, r0, #64	; 0x40
    7ef8:	str	r0, [sp, #16]
    7efc:	b	7ec8 <MD5Update+0xd8>
    7f00:	movw	r0, #0
    7f04:	str	r0, [sp, #12]
    7f08:	b	7f14 <MD5Update+0x124>
    7f0c:	movw	r0, #0
    7f10:	str	r0, [sp, #16]
    7f14:	ldr	r0, [fp, #-4]
    7f18:	add	r0, r0, #24
    7f1c:	ldr	r1, [sp, #12]
    7f20:	add	r0, r0, r1
    7f24:	ldr	r1, [sp, #4]
    7f28:	ldr	r2, [sp, #16]
    7f2c:	add	r1, r1, r2
    7f30:	ldr	r2, [fp, #-12]
    7f34:	ldr	r3, [sp, #16]
    7f38:	sub	r2, r2, r3
    7f3c:	bl	51dc <memcpy@plt>
    7f40:	mov	sp, fp
    7f44:	pop	{fp, pc}

00007f48 <MD5Final>:
    7f48:	push	{fp, lr}
    7f4c:	mov	fp, sp
    7f50:	sub	sp, sp, #8
    7f54:	str	r0, [sp, #4]
    7f58:	str	r1, [sp]
    7f5c:	ldr	r0, [sp]
    7f60:	bl	9c1c <MD5Pad>
    7f64:	ldr	r0, [sp, #4]
    7f68:	ldr	r1, [sp]
    7f6c:	ldrb	r2, [r1]
    7f70:	strb	r2, [r0]
    7f74:	ldrb	r2, [r1, #1]
    7f78:	strb	r2, [r0, #1]
    7f7c:	ldrb	r2, [r1, #2]
    7f80:	strb	r2, [r0, #2]
    7f84:	ldrb	r2, [r1, #3]
    7f88:	strb	r2, [r0, #3]
    7f8c:	ldrb	r2, [r1, #4]
    7f90:	strb	r2, [r0, #4]
    7f94:	ldrb	r2, [r1, #5]
    7f98:	strb	r2, [r0, #5]
    7f9c:	ldrb	r2, [r1, #6]
    7fa0:	strb	r2, [r0, #6]
    7fa4:	ldrb	r2, [r1, #7]
    7fa8:	strb	r2, [r0, #7]
    7fac:	ldrb	r2, [r1, #8]
    7fb0:	strb	r2, [r0, #8]
    7fb4:	ldrb	r2, [r1, #9]
    7fb8:	strb	r2, [r0, #9]
    7fbc:	ldrb	r2, [r1, #10]
    7fc0:	strb	r2, [r0, #10]
    7fc4:	ldrb	r2, [r1, #11]
    7fc8:	strb	r2, [r0, #11]
    7fcc:	ldrb	r2, [r1, #12]
    7fd0:	strb	r2, [r0, #12]
    7fd4:	ldrb	r2, [r1, #13]
    7fd8:	strb	r2, [r0, #13]
    7fdc:	ldrb	r2, [r1, #14]
    7fe0:	strb	r2, [r0, #14]
    7fe4:	ldrb	r1, [r1, #15]
    7fe8:	strb	r1, [r0, #15]
    7fec:	ldr	r0, [sp]
    7ff0:	movw	r1, #0
    7ff4:	and	r1, r1, #255	; 0xff
    7ff8:	movw	r2, #88	; 0x58
    7ffc:	bl	4ff0 <memset@plt>
    8000:	mov	sp, fp
    8004:	pop	{fp, pc}

00008008 <_crypt_to64>:
    8008:	sub	sp, sp, #12
    800c:	str	r0, [sp, #8]
    8010:	str	r1, [sp, #4]
    8014:	str	r2, [sp]
    8018:	ldr	r0, [sp]
    801c:	mvn	r1, #0
    8020:	add	r0, r0, r1
    8024:	str	r0, [sp]
    8028:	cmp	r0, #0
    802c:	blt	8068 <_crypt_to64+0x60>
    8030:	ldr	r0, [pc, #56]	; 8070 <_crypt_to64+0x68>
    8034:	add	r0, pc, r0
    8038:	ldr	r1, [sp, #4]
    803c:	and	r1, r1, #63	; 0x3f
    8040:	add	r0, r0, r1
    8044:	ldrb	r0, [r0]
    8048:	ldr	r1, [sp, #8]
    804c:	add	r2, r1, #1
    8050:	str	r2, [sp, #8]
    8054:	strb	r0, [r1]
    8058:	ldr	r0, [sp, #4]
    805c:	lsr	r0, r0, #6
    8060:	str	r0, [sp, #4]
    8064:	b	8018 <_crypt_to64+0x10>
    8068:	add	sp, sp, #12
    806c:	bx	lr
    8070:	.word	0x0001a054

00008074 <MD5Transform>:
    8074:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8078:	add	fp, sp, #28
    807c:	sub	sp, sp, #364	; 0x16c
    8080:	sub	r2, fp, #120	; 0x78
    8084:	ldr	r3, [pc, #4080]	; 907c <MD5Transform+0x1008>
    8088:	ldr	ip, [pc, #4080]	; 9080 <MD5Transform+0x100c>
    808c:	ldr	lr, [pc, #4080]	; 9084 <MD5Transform+0x1010>
    8090:	ldr	r4, [pc, #4080]	; 9088 <MD5Transform+0x1014>
    8094:	ldr	r5, [pc, #4080]	; 908c <MD5Transform+0x1018>
    8098:	ldr	r6, [pc, #4080]	; 9090 <MD5Transform+0x101c>
    809c:	ldr	r7, [pc, #4080]	; 9094 <MD5Transform+0x1020>
    80a0:	ldr	r8, [pc, #4080]	; 9098 <MD5Transform+0x1024>
    80a4:	ldr	r9, [pc, #4080]	; 909c <MD5Transform+0x1028>
    80a8:	ldr	sl, [pc, #4080]	; 90a0 <MD5Transform+0x102c>
    80ac:	str	r0, [fp, #-124]	; 0xffffff84
    80b0:	ldr	r0, [pc, #4076]	; 90a4 <MD5Transform+0x1030>
    80b4:	str	r0, [fp, #-128]	; 0xffffff80
    80b8:	ldr	r0, [pc, #4072]	; 90a8 <MD5Transform+0x1034>
    80bc:	str	r0, [fp, #-132]	; 0xffffff7c
    80c0:	ldr	r0, [pc, #4068]	; 90ac <MD5Transform+0x1038>
    80c4:	str	r0, [fp, #-136]	; 0xffffff78
    80c8:	ldr	r0, [pc, #4064]	; 90b0 <MD5Transform+0x103c>
    80cc:	str	r0, [fp, #-140]	; 0xffffff74
    80d0:	ldr	r0, [pc, #4060]	; 90b4 <MD5Transform+0x1040>
    80d4:	str	r0, [fp, #-144]	; 0xffffff70
    80d8:	ldr	r0, [pc, #4056]	; 90b8 <MD5Transform+0x1044>
    80dc:	str	r0, [fp, #-148]	; 0xffffff6c
    80e0:	ldr	r0, [pc, #4052]	; 90bc <MD5Transform+0x1048>
    80e4:	str	r0, [fp, #-152]	; 0xffffff68
    80e8:	ldr	r0, [pc, #4048]	; 90c0 <MD5Transform+0x104c>
    80ec:	str	r0, [fp, #-156]	; 0xffffff64
    80f0:	ldr	r0, [pc, #4044]	; 90c4 <MD5Transform+0x1050>
    80f4:	str	r0, [fp, #-160]	; 0xffffff60
    80f8:	ldr	r0, [pc, #4040]	; 90c8 <MD5Transform+0x1054>
    80fc:	str	r0, [fp, #-164]	; 0xffffff5c
    8100:	ldr	r0, [pc, #4036]	; 90cc <MD5Transform+0x1058>
    8104:	str	r0, [fp, #-168]	; 0xffffff58
    8108:	ldr	r0, [pc, #4032]	; 90d0 <MD5Transform+0x105c>
    810c:	str	r0, [fp, #-172]	; 0xffffff54
    8110:	ldr	r0, [pc, #4028]	; 90d4 <MD5Transform+0x1060>
    8114:	str	r0, [fp, #-176]	; 0xffffff50
    8118:	ldr	r0, [pc, #4024]	; 90d8 <MD5Transform+0x1064>
    811c:	str	r0, [fp, #-180]	; 0xffffff4c
    8120:	ldr	r0, [pc, #4020]	; 90dc <MD5Transform+0x1068>
    8124:	str	r0, [fp, #-184]	; 0xffffff48
    8128:	ldr	r0, [pc, #4016]	; 90e0 <MD5Transform+0x106c>
    812c:	str	r0, [fp, #-188]	; 0xffffff44
    8130:	ldr	r0, [pc, #4012]	; 90e4 <MD5Transform+0x1070>
    8134:	str	r0, [fp, #-192]	; 0xffffff40
    8138:	ldr	r0, [pc, #4008]	; 90e8 <MD5Transform+0x1074>
    813c:	str	r0, [sp, #196]	; 0xc4
    8140:	ldr	r0, [pc, #4004]	; 90ec <MD5Transform+0x1078>
    8144:	str	r0, [sp, #192]	; 0xc0
    8148:	ldr	r0, [pc, #4000]	; 90f0 <MD5Transform+0x107c>
    814c:	str	r0, [sp, #188]	; 0xbc
    8150:	ldr	r0, [pc, #3996]	; 90f4 <MD5Transform+0x1080>
    8154:	str	r0, [sp, #184]	; 0xb8
    8158:	ldr	r0, [pc, #3992]	; 90f8 <MD5Transform+0x1084>
    815c:	str	r0, [sp, #180]	; 0xb4
    8160:	ldr	r0, [pc, #3988]	; 90fc <MD5Transform+0x1088>
    8164:	str	r0, [sp, #176]	; 0xb0
    8168:	ldr	r0, [pc, #3984]	; 9100 <MD5Transform+0x108c>
    816c:	str	r0, [sp, #172]	; 0xac
    8170:	ldr	r0, [pc, #3980]	; 9104 <MD5Transform+0x1090>
    8174:	str	r0, [sp, #168]	; 0xa8
    8178:	ldr	r0, [pc, #3976]	; 9108 <MD5Transform+0x1094>
    817c:	str	r0, [sp, #164]	; 0xa4
    8180:	ldr	r0, [pc, #3972]	; 910c <MD5Transform+0x1098>
    8184:	str	r0, [sp, #160]	; 0xa0
    8188:	ldr	r0, [pc, #3968]	; 9110 <MD5Transform+0x109c>
    818c:	str	r0, [sp, #156]	; 0x9c
    8190:	ldr	r0, [pc, #3964]	; 9114 <MD5Transform+0x10a0>
    8194:	str	r0, [sp, #152]	; 0x98
    8198:	ldr	r0, [pc, #3960]	; 9118 <MD5Transform+0x10a4>
    819c:	str	r0, [sp, #148]	; 0x94
    81a0:	ldr	r0, [pc, #3956]	; 911c <MD5Transform+0x10a8>
    81a4:	str	r0, [sp, #144]	; 0x90
    81a8:	ldr	r0, [pc, #3952]	; 9120 <MD5Transform+0x10ac>
    81ac:	str	r0, [sp, #140]	; 0x8c
    81b0:	ldr	r0, [pc, #3948]	; 9124 <MD5Transform+0x10b0>
    81b4:	str	r0, [sp, #136]	; 0x88
    81b8:	ldr	r0, [pc, #3944]	; 9128 <MD5Transform+0x10b4>
    81bc:	str	r0, [sp, #132]	; 0x84
    81c0:	ldr	r0, [pc, #3940]	; 912c <MD5Transform+0x10b8>
    81c4:	str	r0, [sp, #128]	; 0x80
    81c8:	ldr	r0, [pc, #3936]	; 9130 <MD5Transform+0x10bc>
    81cc:	str	r0, [sp, #124]	; 0x7c
    81d0:	ldr	r0, [pc, #3932]	; 9134 <MD5Transform+0x10c0>
    81d4:	str	r0, [sp, #120]	; 0x78
    81d8:	ldr	r0, [pc, #3928]	; 9138 <MD5Transform+0x10c4>
    81dc:	str	r0, [sp, #116]	; 0x74
    81e0:	ldr	r0, [pc, #3924]	; 913c <MD5Transform+0x10c8>
    81e4:	str	r0, [sp, #112]	; 0x70
    81e8:	ldr	r0, [pc, #3920]	; 9140 <MD5Transform+0x10cc>
    81ec:	str	r0, [sp, #108]	; 0x6c
    81f0:	ldr	r0, [pc, #3916]	; 9144 <MD5Transform+0x10d0>
    81f4:	str	r0, [sp, #104]	; 0x68
    81f8:	ldr	r0, [pc, #3912]	; 9148 <MD5Transform+0x10d4>
    81fc:	str	r0, [sp, #100]	; 0x64
    8200:	ldr	r0, [pc, #3908]	; 914c <MD5Transform+0x10d8>
    8204:	str	r0, [sp, #96]	; 0x60
    8208:	ldr	r0, [pc, #3904]	; 9150 <MD5Transform+0x10dc>
    820c:	str	r0, [sp, #92]	; 0x5c
    8210:	ldr	r0, [pc, #3900]	; 9154 <MD5Transform+0x10e0>
    8214:	str	r0, [sp, #88]	; 0x58
    8218:	ldr	r0, [pc, #3896]	; 9158 <MD5Transform+0x10e4>
    821c:	str	r0, [sp, #84]	; 0x54
    8220:	ldr	r0, [pc, #3892]	; 915c <MD5Transform+0x10e8>
    8224:	str	r0, [sp, #80]	; 0x50
    8228:	ldr	r0, [pc, #3888]	; 9160 <MD5Transform+0x10ec>
    822c:	str	r0, [sp, #76]	; 0x4c
    8230:	ldr	r0, [pc, #3884]	; 9164 <MD5Transform+0x10f0>
    8234:	str	r0, [sp, #72]	; 0x48
    8238:	ldr	r0, [pc, #3880]	; 9168 <MD5Transform+0x10f4>
    823c:	str	r0, [sp, #68]	; 0x44
    8240:	ldr	r0, [pc, #3876]	; 916c <MD5Transform+0x10f8>
    8244:	str	r0, [sp, #64]	; 0x40
    8248:	ldr	r0, [pc, #3872]	; 9170 <MD5Transform+0x10fc>
    824c:	str	r0, [sp, #60]	; 0x3c
    8250:	ldr	r0, [pc, #3868]	; 9174 <MD5Transform+0x1100>
    8254:	str	r0, [sp, #56]	; 0x38
    8258:	ldr	r0, [pc, #3864]	; 9178 <MD5Transform+0x1104>
    825c:	str	r0, [sp, #52]	; 0x34
    8260:	ldr	r0, [fp, #-124]	; 0xffffff84
    8264:	str	r0, [fp, #-36]	; 0xffffffdc
    8268:	str	r1, [fp, #-40]	; 0xffffffd8
    826c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8270:	ldr	r1, [r1]
    8274:	str	r1, [fp, #-44]	; 0xffffffd4
    8278:	ldr	r1, [fp, #-36]	; 0xffffffdc
    827c:	ldr	r1, [r1, #4]
    8280:	str	r1, [fp, #-48]	; 0xffffffd0
    8284:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8288:	ldr	r1, [r1, #8]
    828c:	str	r1, [fp, #-52]	; 0xffffffcc
    8290:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8294:	ldr	r1, [r1, #12]
    8298:	str	r1, [fp, #-56]	; 0xffffffc8
    829c:	mov	r1, r2
    82a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    82a4:	str	r0, [sp, #48]	; 0x30
    82a8:	mov	r0, r1
    82ac:	ldr	r1, [sp, #48]	; 0x30
    82b0:	str	r2, [sp, #44]	; 0x2c
    82b4:	movw	r2, #64	; 0x40
    82b8:	str	r2, [sp, #40]	; 0x28
    82bc:	str	r3, [sp, #36]	; 0x24
    82c0:	str	ip, [sp, #32]
    82c4:	str	lr, [sp, #28]
    82c8:	str	r4, [sp, #24]
    82cc:	str	r5, [sp, #20]
    82d0:	str	r6, [sp, #16]
    82d4:	str	r7, [sp, #12]
    82d8:	str	r8, [sp, #8]
    82dc:	str	r9, [sp, #4]
    82e0:	str	sl, [sp]
    82e4:	bl	51dc <memcpy@plt>
    82e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    82ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
    82f0:	and	r0, r0, r1
    82f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    82f8:	mvn	r2, #0
    82fc:	eor	r1, r1, r2
    8300:	ldr	r3, [fp, #-56]	; 0xffffffc8
    8304:	and	r1, r1, r3
    8308:	orr	r0, r0, r1
    830c:	ldr	r1, [fp, #-120]	; 0xffffff88
    8310:	add	r0, r0, r1
    8314:	ldr	r1, [sp, #52]	; 0x34
    8318:	add	r0, r0, r1
    831c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8320:	add	r0, r3, r0
    8324:	str	r0, [fp, #-44]	; 0xffffffd4
    8328:	ldr	r0, [fp, #-44]	; 0xffffffd4
    832c:	lsl	r0, r0, #7
    8330:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8334:	lsr	r3, r3, #25
    8338:	orr	r0, r0, r3
    833c:	str	r0, [fp, #-44]	; 0xffffffd4
    8340:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8344:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8348:	add	r0, r3, r0
    834c:	str	r0, [fp, #-44]	; 0xffffffd4
    8350:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8354:	ldr	r3, [fp, #-48]	; 0xffffffd0
    8358:	and	r0, r0, r3
    835c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8360:	eor	r3, r3, r2
    8364:	ldr	ip, [fp, #-52]	; 0xffffffcc
    8368:	and	r3, r3, ip
    836c:	orr	r0, r0, r3
    8370:	ldr	r3, [fp, #-116]	; 0xffffff8c
    8374:	add	r0, r0, r3
    8378:	ldr	r3, [sp, #56]	; 0x38
    837c:	add	r0, r0, r3
    8380:	ldr	ip, [fp, #-56]	; 0xffffffc8
    8384:	add	r0, ip, r0
    8388:	str	r0, [fp, #-56]	; 0xffffffc8
    838c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8390:	lsl	r0, r0, #12
    8394:	ldr	ip, [fp, #-56]	; 0xffffffc8
    8398:	lsr	ip, ip, #20
    839c:	orr	r0, r0, ip
    83a0:	str	r0, [fp, #-56]	; 0xffffffc8
    83a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    83a8:	ldr	ip, [fp, #-56]	; 0xffffffc8
    83ac:	add	r0, ip, r0
    83b0:	str	r0, [fp, #-56]	; 0xffffffc8
    83b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    83b8:	ldr	ip, [fp, #-44]	; 0xffffffd4
    83bc:	and	r0, r0, ip
    83c0:	ldr	ip, [fp, #-56]	; 0xffffffc8
    83c4:	eor	ip, ip, r2
    83c8:	ldr	lr, [fp, #-48]	; 0xffffffd0
    83cc:	and	ip, ip, lr
    83d0:	orr	r0, r0, ip
    83d4:	ldr	ip, [fp, #-112]	; 0xffffff90
    83d8:	add	r0, r0, ip
    83dc:	ldr	ip, [sp, #60]	; 0x3c
    83e0:	add	r0, r0, ip
    83e4:	ldr	lr, [fp, #-52]	; 0xffffffcc
    83e8:	add	r0, lr, r0
    83ec:	str	r0, [fp, #-52]	; 0xffffffcc
    83f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    83f4:	lsl	r0, r0, #17
    83f8:	ldr	lr, [fp, #-52]	; 0xffffffcc
    83fc:	lsr	lr, lr, #15
    8400:	orr	r0, r0, lr
    8404:	str	r0, [fp, #-52]	; 0xffffffcc
    8408:	ldr	r0, [fp, #-56]	; 0xffffffc8
    840c:	ldr	lr, [fp, #-52]	; 0xffffffcc
    8410:	add	r0, lr, r0
    8414:	str	r0, [fp, #-52]	; 0xffffffcc
    8418:	ldr	r0, [fp, #-52]	; 0xffffffcc
    841c:	ldr	lr, [fp, #-56]	; 0xffffffc8
    8420:	and	r0, r0, lr
    8424:	ldr	lr, [fp, #-52]	; 0xffffffcc
    8428:	eor	lr, lr, r2
    842c:	ldr	r4, [fp, #-44]	; 0xffffffd4
    8430:	and	lr, lr, r4
    8434:	orr	r0, r0, lr
    8438:	ldr	lr, [fp, #-108]	; 0xffffff94
    843c:	add	r0, r0, lr
    8440:	ldr	lr, [sp, #64]	; 0x40
    8444:	add	r0, r0, lr
    8448:	ldr	r4, [fp, #-48]	; 0xffffffd0
    844c:	add	r0, r4, r0
    8450:	str	r0, [fp, #-48]	; 0xffffffd0
    8454:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8458:	lsl	r0, r0, #22
    845c:	ldr	r4, [fp, #-48]	; 0xffffffd0
    8460:	lsr	r4, r4, #10
    8464:	orr	r0, r0, r4
    8468:	str	r0, [fp, #-48]	; 0xffffffd0
    846c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8470:	ldr	r4, [fp, #-48]	; 0xffffffd0
    8474:	add	r0, r4, r0
    8478:	str	r0, [fp, #-48]	; 0xffffffd0
    847c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8480:	ldr	r4, [fp, #-52]	; 0xffffffcc
    8484:	and	r0, r0, r4
    8488:	ldr	r4, [fp, #-48]	; 0xffffffd0
    848c:	eor	r4, r4, r2
    8490:	ldr	r5, [fp, #-56]	; 0xffffffc8
    8494:	and	r4, r4, r5
    8498:	orr	r0, r0, r4
    849c:	ldr	r4, [fp, #-104]	; 0xffffff98
    84a0:	add	r0, r0, r4
    84a4:	ldr	r4, [sp, #68]	; 0x44
    84a8:	add	r0, r0, r4
    84ac:	ldr	r5, [fp, #-44]	; 0xffffffd4
    84b0:	add	r0, r5, r0
    84b4:	str	r0, [fp, #-44]	; 0xffffffd4
    84b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    84bc:	lsl	r0, r0, #7
    84c0:	ldr	r5, [fp, #-44]	; 0xffffffd4
    84c4:	lsr	r5, r5, #25
    84c8:	orr	r0, r0, r5
    84cc:	str	r0, [fp, #-44]	; 0xffffffd4
    84d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    84d4:	ldr	r5, [fp, #-44]	; 0xffffffd4
    84d8:	add	r0, r5, r0
    84dc:	str	r0, [fp, #-44]	; 0xffffffd4
    84e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    84e4:	ldr	r5, [fp, #-48]	; 0xffffffd0
    84e8:	and	r0, r0, r5
    84ec:	ldr	r5, [fp, #-44]	; 0xffffffd4
    84f0:	eor	r5, r5, r2
    84f4:	ldr	r6, [fp, #-52]	; 0xffffffcc
    84f8:	and	r5, r5, r6
    84fc:	orr	r0, r0, r5
    8500:	ldr	r5, [fp, #-100]	; 0xffffff9c
    8504:	add	r0, r0, r5
    8508:	ldr	r5, [sp, #72]	; 0x48
    850c:	add	r0, r0, r5
    8510:	ldr	r6, [fp, #-56]	; 0xffffffc8
    8514:	add	r0, r6, r0
    8518:	str	r0, [fp, #-56]	; 0xffffffc8
    851c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8520:	lsl	r0, r0, #12
    8524:	ldr	r6, [fp, #-56]	; 0xffffffc8
    8528:	lsr	r6, r6, #20
    852c:	orr	r0, r0, r6
    8530:	str	r0, [fp, #-56]	; 0xffffffc8
    8534:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8538:	ldr	r6, [fp, #-56]	; 0xffffffc8
    853c:	add	r0, r6, r0
    8540:	str	r0, [fp, #-56]	; 0xffffffc8
    8544:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8548:	ldr	r6, [fp, #-44]	; 0xffffffd4
    854c:	and	r0, r0, r6
    8550:	ldr	r6, [fp, #-56]	; 0xffffffc8
    8554:	eor	r6, r6, r2
    8558:	ldr	r7, [fp, #-48]	; 0xffffffd0
    855c:	and	r6, r6, r7
    8560:	orr	r0, r0, r6
    8564:	ldr	r6, [fp, #-96]	; 0xffffffa0
    8568:	add	r0, r0, r6
    856c:	ldr	r6, [sp, #76]	; 0x4c
    8570:	add	r0, r0, r6
    8574:	ldr	r7, [fp, #-52]	; 0xffffffcc
    8578:	add	r0, r7, r0
    857c:	str	r0, [fp, #-52]	; 0xffffffcc
    8580:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8584:	lsl	r0, r0, #17
    8588:	ldr	r7, [fp, #-52]	; 0xffffffcc
    858c:	lsr	r7, r7, #15
    8590:	orr	r0, r0, r7
    8594:	str	r0, [fp, #-52]	; 0xffffffcc
    8598:	ldr	r0, [fp, #-56]	; 0xffffffc8
    859c:	ldr	r7, [fp, #-52]	; 0xffffffcc
    85a0:	add	r0, r7, r0
    85a4:	str	r0, [fp, #-52]	; 0xffffffcc
    85a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    85ac:	ldr	r7, [fp, #-56]	; 0xffffffc8
    85b0:	and	r0, r0, r7
    85b4:	ldr	r7, [fp, #-52]	; 0xffffffcc
    85b8:	eor	r7, r7, r2
    85bc:	ldr	r8, [fp, #-44]	; 0xffffffd4
    85c0:	and	r7, r7, r8
    85c4:	orr	r0, r0, r7
    85c8:	ldr	r7, [fp, #-92]	; 0xffffffa4
    85cc:	add	r0, r0, r7
    85d0:	ldr	r7, [sp, #80]	; 0x50
    85d4:	add	r0, r0, r7
    85d8:	ldr	r8, [fp, #-48]	; 0xffffffd0
    85dc:	add	r0, r8, r0
    85e0:	str	r0, [fp, #-48]	; 0xffffffd0
    85e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    85e8:	lsl	r0, r0, #22
    85ec:	ldr	r8, [fp, #-48]	; 0xffffffd0
    85f0:	lsr	r8, r8, #10
    85f4:	orr	r0, r0, r8
    85f8:	str	r0, [fp, #-48]	; 0xffffffd0
    85fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8600:	ldr	r8, [fp, #-48]	; 0xffffffd0
    8604:	add	r0, r8, r0
    8608:	str	r0, [fp, #-48]	; 0xffffffd0
    860c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8610:	ldr	r8, [fp, #-52]	; 0xffffffcc
    8614:	and	r0, r0, r8
    8618:	ldr	r8, [fp, #-48]	; 0xffffffd0
    861c:	eor	r8, r8, r2
    8620:	ldr	r9, [fp, #-56]	; 0xffffffc8
    8624:	and	r8, r8, r9
    8628:	orr	r0, r0, r8
    862c:	ldr	r8, [fp, #-88]	; 0xffffffa8
    8630:	add	r0, r0, r8
    8634:	ldr	r8, [sp, #84]	; 0x54
    8638:	add	r0, r0, r8
    863c:	ldr	r9, [fp, #-44]	; 0xffffffd4
    8640:	add	r0, r9, r0
    8644:	str	r0, [fp, #-44]	; 0xffffffd4
    8648:	ldr	r0, [fp, #-44]	; 0xffffffd4
    864c:	lsl	r0, r0, #7
    8650:	ldr	r9, [fp, #-44]	; 0xffffffd4
    8654:	lsr	r9, r9, #25
    8658:	orr	r0, r0, r9
    865c:	str	r0, [fp, #-44]	; 0xffffffd4
    8660:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8664:	ldr	r9, [fp, #-44]	; 0xffffffd4
    8668:	add	r0, r9, r0
    866c:	str	r0, [fp, #-44]	; 0xffffffd4
    8670:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8674:	ldr	r9, [fp, #-48]	; 0xffffffd0
    8678:	and	r0, r0, r9
    867c:	ldr	r9, [fp, #-44]	; 0xffffffd4
    8680:	eor	r9, r9, r2
    8684:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8688:	and	r9, r9, sl
    868c:	orr	r0, r0, r9
    8690:	ldr	r9, [fp, #-84]	; 0xffffffac
    8694:	add	r0, r0, r9
    8698:	ldr	r9, [sp, #88]	; 0x58
    869c:	add	r0, r0, r9
    86a0:	ldr	sl, [fp, #-56]	; 0xffffffc8
    86a4:	add	r0, sl, r0
    86a8:	str	r0, [fp, #-56]	; 0xffffffc8
    86ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
    86b0:	lsl	r0, r0, #12
    86b4:	ldr	sl, [fp, #-56]	; 0xffffffc8
    86b8:	lsr	sl, sl, #20
    86bc:	orr	r0, r0, sl
    86c0:	str	r0, [fp, #-56]	; 0xffffffc8
    86c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    86c8:	ldr	sl, [fp, #-56]	; 0xffffffc8
    86cc:	add	r0, sl, r0
    86d0:	str	r0, [fp, #-56]	; 0xffffffc8
    86d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    86d8:	ldr	sl, [fp, #-44]	; 0xffffffd4
    86dc:	and	r0, r0, sl
    86e0:	ldr	sl, [fp, #-56]	; 0xffffffc8
    86e4:	eor	sl, sl, r2
    86e8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    86ec:	and	r1, sl, r1
    86f0:	orr	r0, r0, r1
    86f4:	ldr	r1, [fp, #-80]	; 0xffffffb0
    86f8:	add	r0, r0, r1
    86fc:	ldr	r1, [sp, #92]	; 0x5c
    8700:	add	r0, r0, r1
    8704:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8708:	add	r0, sl, r0
    870c:	str	r0, [fp, #-52]	; 0xffffffcc
    8710:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8714:	lsl	r0, r0, #17
    8718:	ldr	sl, [fp, #-52]	; 0xffffffcc
    871c:	lsr	sl, sl, #15
    8720:	orr	r0, r0, sl
    8724:	str	r0, [fp, #-52]	; 0xffffffcc
    8728:	ldr	r0, [fp, #-56]	; 0xffffffc8
    872c:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8730:	add	r0, sl, r0
    8734:	str	r0, [fp, #-52]	; 0xffffffcc
    8738:	ldr	r0, [fp, #-52]	; 0xffffffcc
    873c:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8740:	and	r0, r0, sl
    8744:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8748:	eor	sl, sl, r2
    874c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8750:	and	r1, sl, r1
    8754:	orr	r0, r0, r1
    8758:	ldr	r1, [fp, #-76]	; 0xffffffb4
    875c:	add	r0, r0, r1
    8760:	ldr	r1, [sp, #96]	; 0x60
    8764:	add	r0, r0, r1
    8768:	ldr	sl, [fp, #-48]	; 0xffffffd0
    876c:	add	r0, sl, r0
    8770:	str	r0, [fp, #-48]	; 0xffffffd0
    8774:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8778:	lsl	r0, r0, #22
    877c:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8780:	lsr	sl, sl, #10
    8784:	orr	r0, r0, sl
    8788:	str	r0, [fp, #-48]	; 0xffffffd0
    878c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8790:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8794:	add	r0, sl, r0
    8798:	str	r0, [fp, #-48]	; 0xffffffd0
    879c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    87a0:	ldr	sl, [fp, #-52]	; 0xffffffcc
    87a4:	and	r0, r0, sl
    87a8:	ldr	sl, [fp, #-48]	; 0xffffffd0
    87ac:	eor	sl, sl, r2
    87b0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    87b4:	and	r1, sl, r1
    87b8:	orr	r0, r0, r1
    87bc:	ldr	r1, [fp, #-72]	; 0xffffffb8
    87c0:	add	r0, r0, r1
    87c4:	ldr	r1, [sp, #100]	; 0x64
    87c8:	add	r0, r0, r1
    87cc:	ldr	sl, [fp, #-44]	; 0xffffffd4
    87d0:	add	r0, sl, r0
    87d4:	str	r0, [fp, #-44]	; 0xffffffd4
    87d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    87dc:	lsl	r0, r0, #7
    87e0:	ldr	sl, [fp, #-44]	; 0xffffffd4
    87e4:	lsr	sl, sl, #25
    87e8:	orr	r0, r0, sl
    87ec:	str	r0, [fp, #-44]	; 0xffffffd4
    87f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    87f4:	ldr	sl, [fp, #-44]	; 0xffffffd4
    87f8:	add	r0, sl, r0
    87fc:	str	r0, [fp, #-44]	; 0xffffffd4
    8800:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8804:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8808:	and	r0, r0, sl
    880c:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8810:	eor	sl, sl, r2
    8814:	ldr	r1, [fp, #-52]	; 0xffffffcc
    8818:	and	r1, sl, r1
    881c:	orr	r0, r0, r1
    8820:	ldr	r1, [fp, #-68]	; 0xffffffbc
    8824:	add	r0, r0, r1
    8828:	ldr	r1, [sp, #104]	; 0x68
    882c:	add	r0, r0, r1
    8830:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8834:	add	r0, sl, r0
    8838:	str	r0, [fp, #-56]	; 0xffffffc8
    883c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8840:	lsl	r0, r0, #12
    8844:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8848:	lsr	sl, sl, #20
    884c:	orr	r0, r0, sl
    8850:	str	r0, [fp, #-56]	; 0xffffffc8
    8854:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8858:	ldr	sl, [fp, #-56]	; 0xffffffc8
    885c:	add	r0, sl, r0
    8860:	str	r0, [fp, #-56]	; 0xffffffc8
    8864:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8868:	ldr	sl, [fp, #-44]	; 0xffffffd4
    886c:	and	r0, r0, sl
    8870:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8874:	eor	sl, sl, r2
    8878:	ldr	r1, [fp, #-48]	; 0xffffffd0
    887c:	and	r1, sl, r1
    8880:	orr	r0, r0, r1
    8884:	ldr	r1, [fp, #-64]	; 0xffffffc0
    8888:	add	r0, r0, r1
    888c:	ldr	r1, [sp, #108]	; 0x6c
    8890:	add	r0, r0, r1
    8894:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8898:	add	r0, sl, r0
    889c:	str	r0, [fp, #-52]	; 0xffffffcc
    88a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    88a4:	lsl	r0, r0, #17
    88a8:	ldr	sl, [fp, #-52]	; 0xffffffcc
    88ac:	lsr	sl, sl, #15
    88b0:	orr	r0, r0, sl
    88b4:	str	r0, [fp, #-52]	; 0xffffffcc
    88b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    88bc:	ldr	sl, [fp, #-52]	; 0xffffffcc
    88c0:	add	r0, sl, r0
    88c4:	str	r0, [fp, #-52]	; 0xffffffcc
    88c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    88cc:	ldr	sl, [fp, #-56]	; 0xffffffc8
    88d0:	and	r0, r0, sl
    88d4:	ldr	sl, [fp, #-52]	; 0xffffffcc
    88d8:	eor	sl, sl, r2
    88dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    88e0:	and	r1, sl, r1
    88e4:	orr	r0, r0, r1
    88e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    88ec:	add	r0, r0, r1
    88f0:	ldr	r1, [sp, #112]	; 0x70
    88f4:	add	r0, r0, r1
    88f8:	ldr	sl, [fp, #-48]	; 0xffffffd0
    88fc:	add	r0, sl, r0
    8900:	str	r0, [fp, #-48]	; 0xffffffd0
    8904:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8908:	lsl	r0, r0, #22
    890c:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8910:	lsr	sl, sl, #10
    8914:	orr	r0, r0, sl
    8918:	str	r0, [fp, #-48]	; 0xffffffd0
    891c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8920:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8924:	add	r0, sl, r0
    8928:	str	r0, [fp, #-48]	; 0xffffffd0
    892c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8930:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8934:	and	r0, r0, sl
    8938:	ldr	sl, [fp, #-52]	; 0xffffffcc
    893c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    8940:	eor	r1, r1, r2
    8944:	and	r1, sl, r1
    8948:	orr	r0, r0, r1
    894c:	ldr	r1, [fp, #-116]	; 0xffffff8c
    8950:	add	r0, r0, r1
    8954:	ldr	r1, [sp, #116]	; 0x74
    8958:	add	r0, r0, r1
    895c:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8960:	add	r0, sl, r0
    8964:	str	r0, [fp, #-44]	; 0xffffffd4
    8968:	ldr	r0, [fp, #-44]	; 0xffffffd4
    896c:	lsl	r0, r0, #5
    8970:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8974:	lsr	sl, sl, #27
    8978:	orr	r0, r0, sl
    897c:	str	r0, [fp, #-44]	; 0xffffffd4
    8980:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8984:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8988:	add	r0, sl, r0
    898c:	str	r0, [fp, #-44]	; 0xffffffd4
    8990:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8994:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8998:	and	r0, r0, sl
    899c:	ldr	sl, [fp, #-48]	; 0xffffffd0
    89a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    89a4:	eor	r1, r1, r2
    89a8:	and	r1, sl, r1
    89ac:	orr	r0, r0, r1
    89b0:	ldr	r1, [fp, #-96]	; 0xffffffa0
    89b4:	add	r0, r0, r1
    89b8:	ldr	r1, [sp, #120]	; 0x78
    89bc:	add	r0, r0, r1
    89c0:	ldr	sl, [fp, #-56]	; 0xffffffc8
    89c4:	add	r0, sl, r0
    89c8:	str	r0, [fp, #-56]	; 0xffffffc8
    89cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    89d0:	lsl	r0, r0, #9
    89d4:	ldr	sl, [fp, #-56]	; 0xffffffc8
    89d8:	lsr	sl, sl, #23
    89dc:	orr	r0, r0, sl
    89e0:	str	r0, [fp, #-56]	; 0xffffffc8
    89e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    89e8:	ldr	sl, [fp, #-56]	; 0xffffffc8
    89ec:	add	r0, sl, r0
    89f0:	str	r0, [fp, #-56]	; 0xffffffc8
    89f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    89f8:	ldr	sl, [fp, #-48]	; 0xffffffd0
    89fc:	and	r0, r0, sl
    8a00:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8a04:	ldr	r1, [fp, #-48]	; 0xffffffd0
    8a08:	eor	r1, r1, r2
    8a0c:	and	r1, sl, r1
    8a10:	orr	r0, r0, r1
    8a14:	ldr	r1, [fp, #-76]	; 0xffffffb4
    8a18:	add	r0, r0, r1
    8a1c:	ldr	r1, [sp, #124]	; 0x7c
    8a20:	add	r0, r0, r1
    8a24:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8a28:	add	r0, sl, r0
    8a2c:	str	r0, [fp, #-52]	; 0xffffffcc
    8a30:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8a34:	lsl	r0, r0, #14
    8a38:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8a3c:	lsr	sl, sl, #18
    8a40:	orr	r0, r0, sl
    8a44:	str	r0, [fp, #-52]	; 0xffffffcc
    8a48:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8a4c:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8a50:	add	r0, sl, r0
    8a54:	str	r0, [fp, #-52]	; 0xffffffcc
    8a58:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8a5c:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8a60:	and	r0, r0, sl
    8a64:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8a68:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8a6c:	eor	r1, r1, r2
    8a70:	and	r1, sl, r1
    8a74:	orr	r0, r0, r1
    8a78:	ldr	r1, [fp, #-120]	; 0xffffff88
    8a7c:	add	r0, r0, r1
    8a80:	ldr	r1, [sp, #128]	; 0x80
    8a84:	add	r0, r0, r1
    8a88:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8a8c:	add	r0, sl, r0
    8a90:	str	r0, [fp, #-48]	; 0xffffffd0
    8a94:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8a98:	lsl	r0, r0, #20
    8a9c:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8aa0:	lsr	sl, sl, #12
    8aa4:	orr	r0, r0, sl
    8aa8:	str	r0, [fp, #-48]	; 0xffffffd0
    8aac:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8ab0:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8ab4:	add	r0, sl, r0
    8ab8:	str	r0, [fp, #-48]	; 0xffffffd0
    8abc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8ac0:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8ac4:	and	r0, r0, sl
    8ac8:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8acc:	ldr	r1, [fp, #-56]	; 0xffffffc8
    8ad0:	eor	r1, r1, r2
    8ad4:	and	r1, sl, r1
    8ad8:	orr	r0, r0, r1
    8adc:	ldr	r1, [fp, #-100]	; 0xffffff9c
    8ae0:	add	r0, r0, r1
    8ae4:	ldr	r1, [sp, #132]	; 0x84
    8ae8:	add	r0, r0, r1
    8aec:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8af0:	add	r0, sl, r0
    8af4:	str	r0, [fp, #-44]	; 0xffffffd4
    8af8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8afc:	lsl	r0, r0, #5
    8b00:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8b04:	lsr	sl, sl, #27
    8b08:	orr	r0, r0, sl
    8b0c:	str	r0, [fp, #-44]	; 0xffffffd4
    8b10:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8b14:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8b18:	add	r0, sl, r0
    8b1c:	str	r0, [fp, #-44]	; 0xffffffd4
    8b20:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8b24:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8b28:	and	r0, r0, sl
    8b2c:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8b30:	ldr	r1, [fp, #-52]	; 0xffffffcc
    8b34:	eor	r1, r1, r2
    8b38:	and	r1, sl, r1
    8b3c:	orr	r0, r0, r1
    8b40:	ldr	r1, [fp, #-80]	; 0xffffffb0
    8b44:	add	r0, r0, r1
    8b48:	ldr	r1, [sp, #136]	; 0x88
    8b4c:	add	r0, r0, r1
    8b50:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8b54:	add	r0, sl, r0
    8b58:	str	r0, [fp, #-56]	; 0xffffffc8
    8b5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8b60:	lsl	r0, r0, #9
    8b64:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8b68:	lsr	sl, sl, #23
    8b6c:	orr	r0, r0, sl
    8b70:	str	r0, [fp, #-56]	; 0xffffffc8
    8b74:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8b78:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8b7c:	add	r0, sl, r0
    8b80:	str	r0, [fp, #-56]	; 0xffffffc8
    8b84:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8b88:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8b8c:	and	r0, r0, sl
    8b90:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8b94:	ldr	r1, [fp, #-48]	; 0xffffffd0
    8b98:	eor	r1, r1, r2
    8b9c:	and	r1, sl, r1
    8ba0:	orr	r0, r0, r1
    8ba4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8ba8:	add	r0, r0, r1
    8bac:	ldr	r1, [sp, #140]	; 0x8c
    8bb0:	add	r0, r0, r1
    8bb4:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8bb8:	add	r0, sl, r0
    8bbc:	str	r0, [fp, #-52]	; 0xffffffcc
    8bc0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8bc4:	lsl	r0, r0, #14
    8bc8:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8bcc:	lsr	sl, sl, #18
    8bd0:	orr	r0, r0, sl
    8bd4:	str	r0, [fp, #-52]	; 0xffffffcc
    8bd8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8bdc:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8be0:	add	r0, sl, r0
    8be4:	str	r0, [fp, #-52]	; 0xffffffcc
    8be8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8bec:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8bf0:	and	r0, r0, sl
    8bf4:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8bf8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8bfc:	eor	r1, r1, r2
    8c00:	and	r1, sl, r1
    8c04:	orr	r0, r0, r1
    8c08:	ldr	r1, [fp, #-104]	; 0xffffff98
    8c0c:	add	r0, r0, r1
    8c10:	ldr	r1, [sp, #144]	; 0x90
    8c14:	add	r0, r0, r1
    8c18:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8c1c:	add	r0, sl, r0
    8c20:	str	r0, [fp, #-48]	; 0xffffffd0
    8c24:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8c28:	lsl	r0, r0, #20
    8c2c:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8c30:	lsr	sl, sl, #12
    8c34:	orr	r0, r0, sl
    8c38:	str	r0, [fp, #-48]	; 0xffffffd0
    8c3c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8c40:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8c44:	add	r0, sl, r0
    8c48:	str	r0, [fp, #-48]	; 0xffffffd0
    8c4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8c50:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8c54:	and	r0, r0, sl
    8c58:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8c5c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    8c60:	eor	r1, r1, r2
    8c64:	and	r1, sl, r1
    8c68:	orr	r0, r0, r1
    8c6c:	ldr	r1, [fp, #-84]	; 0xffffffac
    8c70:	add	r0, r0, r1
    8c74:	ldr	r1, [sp, #148]	; 0x94
    8c78:	add	r0, r0, r1
    8c7c:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8c80:	add	r0, sl, r0
    8c84:	str	r0, [fp, #-44]	; 0xffffffd4
    8c88:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8c8c:	lsl	r0, r0, #5
    8c90:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8c94:	lsr	sl, sl, #27
    8c98:	orr	r0, r0, sl
    8c9c:	str	r0, [fp, #-44]	; 0xffffffd4
    8ca0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8ca4:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8ca8:	add	r0, sl, r0
    8cac:	str	r0, [fp, #-44]	; 0xffffffd4
    8cb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8cb4:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8cb8:	and	r0, r0, sl
    8cbc:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8cc0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    8cc4:	eor	r1, r1, r2
    8cc8:	and	r1, sl, r1
    8ccc:	orr	r0, r0, r1
    8cd0:	ldr	r1, [fp, #-64]	; 0xffffffc0
    8cd4:	add	r0, r0, r1
    8cd8:	ldr	r1, [sp, #152]	; 0x98
    8cdc:	add	r0, r0, r1
    8ce0:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8ce4:	add	r0, sl, r0
    8ce8:	str	r0, [fp, #-56]	; 0xffffffc8
    8cec:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8cf0:	lsl	r0, r0, #9
    8cf4:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8cf8:	lsr	sl, sl, #23
    8cfc:	orr	r0, r0, sl
    8d00:	str	r0, [fp, #-56]	; 0xffffffc8
    8d04:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8d08:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8d0c:	add	r0, sl, r0
    8d10:	str	r0, [fp, #-56]	; 0xffffffc8
    8d14:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8d18:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8d1c:	and	r0, r0, sl
    8d20:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8d24:	ldr	r1, [fp, #-48]	; 0xffffffd0
    8d28:	eor	r1, r1, r2
    8d2c:	and	r1, sl, r1
    8d30:	orr	r0, r0, r1
    8d34:	ldr	r1, [fp, #-108]	; 0xffffff94
    8d38:	add	r0, r0, r1
    8d3c:	ldr	r1, [sp, #156]	; 0x9c
    8d40:	add	r0, r0, r1
    8d44:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8d48:	add	r0, sl, r0
    8d4c:	str	r0, [fp, #-52]	; 0xffffffcc
    8d50:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8d54:	lsl	r0, r0, #14
    8d58:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8d5c:	lsr	sl, sl, #18
    8d60:	orr	r0, r0, sl
    8d64:	str	r0, [fp, #-52]	; 0xffffffcc
    8d68:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8d6c:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8d70:	add	r0, sl, r0
    8d74:	str	r0, [fp, #-52]	; 0xffffffcc
    8d78:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8d7c:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8d80:	and	r0, r0, sl
    8d84:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8d88:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8d8c:	eor	r1, r1, r2
    8d90:	and	r1, sl, r1
    8d94:	orr	r0, r0, r1
    8d98:	ldr	r1, [fp, #-88]	; 0xffffffa8
    8d9c:	add	r0, r0, r1
    8da0:	ldr	r1, [sp, #160]	; 0xa0
    8da4:	add	r0, r0, r1
    8da8:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8dac:	add	r0, sl, r0
    8db0:	str	r0, [fp, #-48]	; 0xffffffd0
    8db4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8db8:	lsl	r0, r0, #20
    8dbc:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8dc0:	lsr	sl, sl, #12
    8dc4:	orr	r0, r0, sl
    8dc8:	str	r0, [fp, #-48]	; 0xffffffd0
    8dcc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8dd0:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8dd4:	add	r0, sl, r0
    8dd8:	str	r0, [fp, #-48]	; 0xffffffd0
    8ddc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8de0:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8de4:	and	r0, r0, sl
    8de8:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8dec:	ldr	r1, [fp, #-56]	; 0xffffffc8
    8df0:	eor	r1, r1, r2
    8df4:	and	r1, sl, r1
    8df8:	orr	r0, r0, r1
    8dfc:	ldr	r1, [fp, #-68]	; 0xffffffbc
    8e00:	add	r0, r0, r1
    8e04:	ldr	r1, [sp, #164]	; 0xa4
    8e08:	add	r0, r0, r1
    8e0c:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8e10:	add	r0, sl, r0
    8e14:	str	r0, [fp, #-44]	; 0xffffffd4
    8e18:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8e1c:	lsl	r0, r0, #5
    8e20:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8e24:	lsr	sl, sl, #27
    8e28:	orr	r0, r0, sl
    8e2c:	str	r0, [fp, #-44]	; 0xffffffd4
    8e30:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8e34:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8e38:	add	r0, sl, r0
    8e3c:	str	r0, [fp, #-44]	; 0xffffffd4
    8e40:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8e44:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8e48:	and	r0, r0, sl
    8e4c:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8e50:	ldr	r1, [fp, #-52]	; 0xffffffcc
    8e54:	eor	r1, r1, r2
    8e58:	and	r1, sl, r1
    8e5c:	orr	r0, r0, r1
    8e60:	ldr	r1, [fp, #-112]	; 0xffffff90
    8e64:	add	r0, r0, r1
    8e68:	ldr	r1, [sp, #168]	; 0xa8
    8e6c:	add	r0, r0, r1
    8e70:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8e74:	add	r0, sl, r0
    8e78:	str	r0, [fp, #-56]	; 0xffffffc8
    8e7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8e80:	lsl	r0, r0, #9
    8e84:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8e88:	lsr	sl, sl, #23
    8e8c:	orr	r0, r0, sl
    8e90:	str	r0, [fp, #-56]	; 0xffffffc8
    8e94:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8e98:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8e9c:	add	r0, sl, r0
    8ea0:	str	r0, [fp, #-56]	; 0xffffffc8
    8ea4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8ea8:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8eac:	and	r0, r0, sl
    8eb0:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8eb4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    8eb8:	eor	r1, r1, r2
    8ebc:	and	r1, sl, r1
    8ec0:	orr	r0, r0, r1
    8ec4:	ldr	r1, [fp, #-92]	; 0xffffffa4
    8ec8:	add	r0, r0, r1
    8ecc:	ldr	r1, [sp, #172]	; 0xac
    8ed0:	add	r0, r0, r1
    8ed4:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8ed8:	add	r0, sl, r0
    8edc:	str	r0, [fp, #-52]	; 0xffffffcc
    8ee0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8ee4:	lsl	r0, r0, #14
    8ee8:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8eec:	lsr	sl, sl, #18
    8ef0:	orr	r0, r0, sl
    8ef4:	str	r0, [fp, #-52]	; 0xffffffcc
    8ef8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8efc:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8f00:	add	r0, sl, r0
    8f04:	str	r0, [fp, #-52]	; 0xffffffcc
    8f08:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8f0c:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8f10:	and	r0, r0, sl
    8f14:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8f18:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8f1c:	eor	r1, r1, r2
    8f20:	and	r1, sl, r1
    8f24:	orr	r0, r0, r1
    8f28:	ldr	r1, [fp, #-72]	; 0xffffffb8
    8f2c:	add	r0, r0, r1
    8f30:	ldr	r1, [sp, #176]	; 0xb0
    8f34:	add	r0, r0, r1
    8f38:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8f3c:	add	r0, sl, r0
    8f40:	str	r0, [fp, #-48]	; 0xffffffd0
    8f44:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8f48:	lsl	r0, r0, #20
    8f4c:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8f50:	lsr	sl, sl, #12
    8f54:	orr	r0, r0, sl
    8f58:	str	r0, [fp, #-48]	; 0xffffffd0
    8f5c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8f60:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8f64:	add	r0, sl, r0
    8f68:	str	r0, [fp, #-48]	; 0xffffffd0
    8f6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8f70:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8f74:	eor	r0, r0, sl
    8f78:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8f7c:	eor	r0, r0, sl
    8f80:	ldr	sl, [fp, #-100]	; 0xffffff9c
    8f84:	add	r0, r0, sl
    8f88:	ldr	sl, [sp, #180]	; 0xb4
    8f8c:	add	r0, r0, sl
    8f90:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8f94:	add	r0, r1, r0
    8f98:	str	r0, [fp, #-44]	; 0xffffffd4
    8f9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8fa0:	lsl	r0, r0, #4
    8fa4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8fa8:	lsr	r1, r1, #28
    8fac:	orr	r0, r0, r1
    8fb0:	str	r0, [fp, #-44]	; 0xffffffd4
    8fb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8fb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8fbc:	add	r0, r1, r0
    8fc0:	str	r0, [fp, #-44]	; 0xffffffd4
    8fc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8fc8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    8fcc:	eor	r0, r0, r1
    8fd0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    8fd4:	eor	r0, r0, r1
    8fd8:	ldr	r1, [fp, #-88]	; 0xffffffa8
    8fdc:	add	r0, r0, r1
    8fe0:	ldr	r1, [sp, #184]	; 0xb8
    8fe4:	add	r0, r0, r1
    8fe8:	ldr	r1, [fp, #-56]	; 0xffffffc8
    8fec:	add	r0, r1, r0
    8ff0:	str	r0, [fp, #-56]	; 0xffffffc8
    8ff4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8ff8:	lsl	r0, r0, #11
    8ffc:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9000:	lsr	r1, r1, #21
    9004:	orr	r0, r0, r1
    9008:	str	r0, [fp, #-56]	; 0xffffffc8
    900c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9010:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9014:	add	r0, r1, r0
    9018:	str	r0, [fp, #-56]	; 0xffffffc8
    901c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9020:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9024:	eor	r0, r0, r1
    9028:	ldr	r1, [fp, #-48]	; 0xffffffd0
    902c:	eor	r0, r0, r1
    9030:	ldr	r1, [fp, #-76]	; 0xffffffb4
    9034:	add	r0, r0, r1
    9038:	ldr	r1, [sp, #188]	; 0xbc
    903c:	add	r0, r0, r1
    9040:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9044:	add	r0, r1, r0
    9048:	str	r0, [fp, #-52]	; 0xffffffcc
    904c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9050:	lsl	r0, r0, #16
    9054:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9058:	lsr	r1, r1, #16
    905c:	orr	r0, r0, r1
    9060:	str	r0, [fp, #-52]	; 0xffffffcc
    9064:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9068:	ldr	r1, [fp, #-52]	; 0xffffffcc
    906c:	add	r0, r1, r0
    9070:	str	r0, [fp, #-52]	; 0xffffffcc
    9074:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9078:	b	917c <MD5Transform+0x1108>
    907c:	.word	0xeb86d391
    9080:	.word	0x2ad7d2bb
    9084:	.word	0xbd3af235
    9088:	.word	0xf7537e82
    908c:	.word	0x4e0811a1
    9090:	.word	0xa3014314
    9094:	.word	0xfe2ce6e0
    9098:	.word	0x6fa87e4f
    909c:	.word	0x85845dd1
    90a0:	.word	0xffeff47d
    90a4:	.word	0x8f0ccc92
    90a8:	.word	0x655b59c3
    90ac:	.word	0xfc93a039
    90b0:	.word	0xab9423a7
    90b4:	.word	0x432aff97
    90b8:	.word	0xf4292244
    90bc:	.word	0xc4ac5665
    90c0:	.word	0x1fa27cf8
    90c4:	.word	0xe6db99e5
    90c8:	.word	0xd9d4d039
    90cc:	.word	0x04881d05
    90d0:	.word	0xd4ef3085
    90d4:	.word	0xeaa127fa
    90d8:	.word	0x289b7ec6
    90dc:	.word	0xbebfbc70
    90e0:	.word	0xf6bb4b60
    90e4:	.word	0x4bdecfa9
    90e8:	.word	0xa4beea44
    90ec:	.word	0xfde5380c
    90f0:	.word	0x6d9d6122
    90f4:	.word	0x8771f681
    90f8:	.word	0xfffa3942
    90fc:	.word	0x8d2a4c8a
    9100:	.word	0x676f02d9
    9104:	.word	0xfcefa3f8
    9108:	.word	0xa9e3e905
    910c:	.word	0x455a14ed
    9110:	.word	0xf4d50d87
    9114:	.word	0xc33707d6
    9118:	.word	0x21e1cde6
    911c:	.word	0xe7d3fbc8
    9120:	.word	0xd8a1e681
    9124:	.word	0x02441453
    9128:	.word	0xd62f105d
    912c:	.word	0xe9b6c7aa
    9130:	.word	0x265e5a51
    9134:	.word	0xc040b340
    9138:	.word	0xf61e2562
    913c:	.word	0x49b40821
    9140:	.word	0xa679438e
    9144:	.word	0xfd987193
    9148:	.word	0x6b901122
    914c:	.word	0x895cd7be
    9150:	.word	0xffff5bb1
    9154:	.word	0x8b44f7af
    9158:	.word	0x698098d8
    915c:	.word	0xfd469501
    9160:	.word	0xa8304613
    9164:	.word	0x4787c62a
    9168:	.word	0xf57c0faf
    916c:	.word	0xc1bdceee
    9170:	.word	0x242070db
    9174:	.word	0xe8c7b756
    9178:	.word	0xd76aa478
    917c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9180:	eor	r0, r0, r1
    9184:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9188:	eor	r0, r0, r1
    918c:	ldr	r1, [fp, #-64]	; 0xffffffc0
    9190:	add	r0, r0, r1
    9194:	ldr	r1, [sp, #192]	; 0xc0
    9198:	add	r0, r0, r1
    919c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    91a0:	add	r0, r1, r0
    91a4:	str	r0, [fp, #-48]	; 0xffffffd0
    91a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    91ac:	lsl	r0, r0, #23
    91b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    91b4:	lsr	r1, r1, #9
    91b8:	orr	r0, r0, r1
    91bc:	str	r0, [fp, #-48]	; 0xffffffd0
    91c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    91c4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    91c8:	add	r0, r1, r0
    91cc:	str	r0, [fp, #-48]	; 0xffffffd0
    91d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    91d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    91d8:	eor	r0, r0, r1
    91dc:	ldr	r1, [fp, #-56]	; 0xffffffc8
    91e0:	eor	r0, r0, r1
    91e4:	ldr	r1, [fp, #-116]	; 0xffffff8c
    91e8:	add	r0, r0, r1
    91ec:	ldr	r1, [sp, #196]	; 0xc4
    91f0:	add	r0, r0, r1
    91f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    91f8:	add	r0, r1, r0
    91fc:	str	r0, [fp, #-44]	; 0xffffffd4
    9200:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9204:	lsl	r0, r0, #4
    9208:	ldr	r1, [fp, #-44]	; 0xffffffd4
    920c:	lsr	r1, r1, #28
    9210:	orr	r0, r0, r1
    9214:	str	r0, [fp, #-44]	; 0xffffffd4
    9218:	ldr	r0, [fp, #-48]	; 0xffffffd0
    921c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9220:	add	r0, r1, r0
    9224:	str	r0, [fp, #-44]	; 0xffffffd4
    9228:	ldr	r0, [fp, #-44]	; 0xffffffd4
    922c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9230:	eor	r0, r0, r1
    9234:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9238:	eor	r0, r0, r1
    923c:	ldr	r1, [fp, #-104]	; 0xffffff98
    9240:	add	r0, r0, r1
    9244:	ldr	r1, [fp, #-192]	; 0xffffff40
    9248:	add	r0, r0, r1
    924c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9250:	add	r0, r1, r0
    9254:	str	r0, [fp, #-56]	; 0xffffffc8
    9258:	ldr	r0, [fp, #-56]	; 0xffffffc8
    925c:	lsl	r0, r0, #11
    9260:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9264:	lsr	r1, r1, #21
    9268:	orr	r0, r0, r1
    926c:	str	r0, [fp, #-56]	; 0xffffffc8
    9270:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9274:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9278:	add	r0, r1, r0
    927c:	str	r0, [fp, #-56]	; 0xffffffc8
    9280:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9284:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9288:	eor	r0, r0, r1
    928c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9290:	eor	r0, r0, r1
    9294:	ldr	r1, [fp, #-92]	; 0xffffffa4
    9298:	add	r0, r0, r1
    929c:	ldr	r1, [fp, #-188]	; 0xffffff44
    92a0:	add	r0, r0, r1
    92a4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    92a8:	add	r0, r1, r0
    92ac:	str	r0, [fp, #-52]	; 0xffffffcc
    92b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    92b4:	lsl	r0, r0, #16
    92b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    92bc:	lsr	r1, r1, #16
    92c0:	orr	r0, r0, r1
    92c4:	str	r0, [fp, #-52]	; 0xffffffcc
    92c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    92cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    92d0:	add	r0, r1, r0
    92d4:	str	r0, [fp, #-52]	; 0xffffffcc
    92d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    92dc:	ldr	r1, [fp, #-56]	; 0xffffffc8
    92e0:	eor	r0, r0, r1
    92e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    92e8:	eor	r0, r0, r1
    92ec:	ldr	r1, [fp, #-80]	; 0xffffffb0
    92f0:	add	r0, r0, r1
    92f4:	ldr	r1, [fp, #-184]	; 0xffffff48
    92f8:	add	r0, r0, r1
    92fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9300:	add	r0, r1, r0
    9304:	str	r0, [fp, #-48]	; 0xffffffd0
    9308:	ldr	r0, [fp, #-48]	; 0xffffffd0
    930c:	lsl	r0, r0, #23
    9310:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9314:	lsr	r1, r1, #9
    9318:	orr	r0, r0, r1
    931c:	str	r0, [fp, #-48]	; 0xffffffd0
    9320:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9324:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9328:	add	r0, r1, r0
    932c:	str	r0, [fp, #-48]	; 0xffffffd0
    9330:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9334:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9338:	eor	r0, r0, r1
    933c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9340:	eor	r0, r0, r1
    9344:	ldr	r1, [fp, #-68]	; 0xffffffbc
    9348:	add	r0, r0, r1
    934c:	ldr	r1, [fp, #-180]	; 0xffffff4c
    9350:	add	r0, r0, r1
    9354:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9358:	add	r0, r1, r0
    935c:	str	r0, [fp, #-44]	; 0xffffffd4
    9360:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9364:	lsl	r0, r0, #4
    9368:	ldr	r1, [fp, #-44]	; 0xffffffd4
    936c:	lsr	r1, r1, #28
    9370:	orr	r0, r0, r1
    9374:	str	r0, [fp, #-44]	; 0xffffffd4
    9378:	ldr	r0, [fp, #-48]	; 0xffffffd0
    937c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9380:	add	r0, r1, r0
    9384:	str	r0, [fp, #-44]	; 0xffffffd4
    9388:	ldr	r0, [fp, #-44]	; 0xffffffd4
    938c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9390:	eor	r0, r0, r1
    9394:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9398:	eor	r0, r0, r1
    939c:	ldr	r1, [fp, #-120]	; 0xffffff88
    93a0:	add	r0, r0, r1
    93a4:	ldr	r1, [fp, #-176]	; 0xffffff50
    93a8:	add	r0, r0, r1
    93ac:	ldr	r1, [fp, #-56]	; 0xffffffc8
    93b0:	add	r0, r1, r0
    93b4:	str	r0, [fp, #-56]	; 0xffffffc8
    93b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    93bc:	lsl	r0, r0, #11
    93c0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    93c4:	lsr	r1, r1, #21
    93c8:	orr	r0, r0, r1
    93cc:	str	r0, [fp, #-56]	; 0xffffffc8
    93d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    93d4:	ldr	r1, [fp, #-56]	; 0xffffffc8
    93d8:	add	r0, r1, r0
    93dc:	str	r0, [fp, #-56]	; 0xffffffc8
    93e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    93e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    93e8:	eor	r0, r0, r1
    93ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
    93f0:	eor	r0, r0, r1
    93f4:	ldr	r1, [fp, #-108]	; 0xffffff94
    93f8:	add	r0, r0, r1
    93fc:	ldr	r1, [fp, #-172]	; 0xffffff54
    9400:	add	r0, r0, r1
    9404:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9408:	add	r0, r1, r0
    940c:	str	r0, [fp, #-52]	; 0xffffffcc
    9410:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9414:	lsl	r0, r0, #16
    9418:	ldr	r1, [fp, #-52]	; 0xffffffcc
    941c:	lsr	r1, r1, #16
    9420:	orr	r0, r0, r1
    9424:	str	r0, [fp, #-52]	; 0xffffffcc
    9428:	ldr	r0, [fp, #-56]	; 0xffffffc8
    942c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9430:	add	r0, r1, r0
    9434:	str	r0, [fp, #-52]	; 0xffffffcc
    9438:	ldr	r0, [fp, #-52]	; 0xffffffcc
    943c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9440:	eor	r0, r0, r1
    9444:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9448:	eor	r0, r0, r1
    944c:	ldr	r1, [fp, #-96]	; 0xffffffa0
    9450:	add	r0, r0, r1
    9454:	ldr	r1, [fp, #-168]	; 0xffffff58
    9458:	add	r0, r0, r1
    945c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9460:	add	r0, r1, r0
    9464:	str	r0, [fp, #-48]	; 0xffffffd0
    9468:	ldr	r0, [fp, #-48]	; 0xffffffd0
    946c:	lsl	r0, r0, #23
    9470:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9474:	lsr	r1, r1, #9
    9478:	orr	r0, r0, r1
    947c:	str	r0, [fp, #-48]	; 0xffffffd0
    9480:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9484:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9488:	add	r0, r1, r0
    948c:	str	r0, [fp, #-48]	; 0xffffffd0
    9490:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9494:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9498:	eor	r0, r0, r1
    949c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    94a0:	eor	r0, r0, r1
    94a4:	ldr	r1, [fp, #-84]	; 0xffffffac
    94a8:	add	r0, r0, r1
    94ac:	ldr	r1, [fp, #-164]	; 0xffffff5c
    94b0:	add	r0, r0, r1
    94b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    94b8:	add	r0, r1, r0
    94bc:	str	r0, [fp, #-44]	; 0xffffffd4
    94c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    94c4:	lsl	r0, r0, #4
    94c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    94cc:	lsr	r1, r1, #28
    94d0:	orr	r0, r0, r1
    94d4:	str	r0, [fp, #-44]	; 0xffffffd4
    94d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    94dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    94e0:	add	r0, r1, r0
    94e4:	str	r0, [fp, #-44]	; 0xffffffd4
    94e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    94ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
    94f0:	eor	r0, r0, r1
    94f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    94f8:	eor	r0, r0, r1
    94fc:	ldr	r1, [fp, #-72]	; 0xffffffb8
    9500:	add	r0, r0, r1
    9504:	ldr	r1, [fp, #-160]	; 0xffffff60
    9508:	add	r0, r0, r1
    950c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9510:	add	r0, r1, r0
    9514:	str	r0, [fp, #-56]	; 0xffffffc8
    9518:	ldr	r0, [fp, #-56]	; 0xffffffc8
    951c:	lsl	r0, r0, #11
    9520:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9524:	lsr	r1, r1, #21
    9528:	orr	r0, r0, r1
    952c:	str	r0, [fp, #-56]	; 0xffffffc8
    9530:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9534:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9538:	add	r0, r1, r0
    953c:	str	r0, [fp, #-56]	; 0xffffffc8
    9540:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9544:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9548:	eor	r0, r0, r1
    954c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9550:	eor	r0, r0, r1
    9554:	ldr	r1, [fp, #-60]	; 0xffffffc4
    9558:	add	r0, r0, r1
    955c:	ldr	r1, [fp, #-156]	; 0xffffff64
    9560:	add	r0, r0, r1
    9564:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9568:	add	r0, r1, r0
    956c:	str	r0, [fp, #-52]	; 0xffffffcc
    9570:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9574:	lsl	r0, r0, #16
    9578:	ldr	r1, [fp, #-52]	; 0xffffffcc
    957c:	lsr	r1, r1, #16
    9580:	orr	r0, r0, r1
    9584:	str	r0, [fp, #-52]	; 0xffffffcc
    9588:	ldr	r0, [fp, #-56]	; 0xffffffc8
    958c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9590:	add	r0, r1, r0
    9594:	str	r0, [fp, #-52]	; 0xffffffcc
    9598:	ldr	r0, [fp, #-52]	; 0xffffffcc
    959c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    95a0:	eor	r0, r0, r1
    95a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    95a8:	eor	r0, r0, r1
    95ac:	ldr	r1, [fp, #-112]	; 0xffffff90
    95b0:	add	r0, r0, r1
    95b4:	ldr	r1, [fp, #-152]	; 0xffffff68
    95b8:	add	r0, r0, r1
    95bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    95c0:	add	r0, r1, r0
    95c4:	str	r0, [fp, #-48]	; 0xffffffd0
    95c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    95cc:	lsl	r0, r0, #23
    95d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    95d4:	lsr	r1, r1, #9
    95d8:	orr	r0, r0, r1
    95dc:	str	r0, [fp, #-48]	; 0xffffffd0
    95e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    95e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    95e8:	add	r0, r1, r0
    95ec:	str	r0, [fp, #-48]	; 0xffffffd0
    95f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    95f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    95f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    95fc:	eor	r3, r3, r2
    9600:	orr	r1, r1, r3
    9604:	eor	r0, r0, r1
    9608:	ldr	r1, [fp, #-120]	; 0xffffff88
    960c:	add	r0, r0, r1
    9610:	ldr	r1, [fp, #-148]	; 0xffffff6c
    9614:	add	r0, r0, r1
    9618:	ldr	r3, [fp, #-44]	; 0xffffffd4
    961c:	add	r0, r3, r0
    9620:	str	r0, [fp, #-44]	; 0xffffffd4
    9624:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9628:	lsl	r0, r0, #6
    962c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9630:	lsr	r3, r3, #26
    9634:	orr	r0, r0, r3
    9638:	str	r0, [fp, #-44]	; 0xffffffd4
    963c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9640:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9644:	add	r0, r3, r0
    9648:	str	r0, [fp, #-44]	; 0xffffffd4
    964c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9650:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9654:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9658:	eor	r1, r1, r2
    965c:	orr	r1, r3, r1
    9660:	eor	r0, r0, r1
    9664:	ldr	r1, [fp, #-92]	; 0xffffffa4
    9668:	add	r0, r0, r1
    966c:	ldr	r1, [fp, #-144]	; 0xffffff70
    9670:	add	r0, r0, r1
    9674:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9678:	add	r0, r3, r0
    967c:	str	r0, [fp, #-56]	; 0xffffffc8
    9680:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9684:	lsl	r0, r0, #10
    9688:	ldr	r3, [fp, #-56]	; 0xffffffc8
    968c:	lsr	r3, r3, #22
    9690:	orr	r0, r0, r3
    9694:	str	r0, [fp, #-56]	; 0xffffffc8
    9698:	ldr	r0, [fp, #-44]	; 0xffffffd4
    969c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    96a0:	add	r0, r3, r0
    96a4:	str	r0, [fp, #-56]	; 0xffffffc8
    96a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    96ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
    96b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    96b4:	eor	r1, r1, r2
    96b8:	orr	r1, r3, r1
    96bc:	eor	r0, r0, r1
    96c0:	ldr	r1, [fp, #-64]	; 0xffffffc0
    96c4:	add	r0, r0, r1
    96c8:	ldr	r1, [fp, #-140]	; 0xffffff74
    96cc:	add	r0, r0, r1
    96d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    96d4:	add	r0, r3, r0
    96d8:	str	r0, [fp, #-52]	; 0xffffffcc
    96dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    96e0:	lsl	r0, r0, #15
    96e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    96e8:	lsr	r3, r3, #17
    96ec:	orr	r0, r0, r3
    96f0:	str	r0, [fp, #-52]	; 0xffffffcc
    96f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    96f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    96fc:	add	r0, r3, r0
    9700:	str	r0, [fp, #-52]	; 0xffffffcc
    9704:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9708:	ldr	r3, [fp, #-52]	; 0xffffffcc
    970c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9710:	eor	r1, r1, r2
    9714:	orr	r1, r3, r1
    9718:	eor	r0, r0, r1
    971c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    9720:	add	r0, r0, r1
    9724:	ldr	r1, [fp, #-136]	; 0xffffff78
    9728:	add	r0, r0, r1
    972c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9730:	add	r0, r3, r0
    9734:	str	r0, [fp, #-48]	; 0xffffffd0
    9738:	ldr	r0, [fp, #-48]	; 0xffffffd0
    973c:	lsl	r0, r0, #21
    9740:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9744:	lsr	r3, r3, #11
    9748:	orr	r0, r0, r3
    974c:	str	r0, [fp, #-48]	; 0xffffffd0
    9750:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9754:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9758:	add	r0, r3, r0
    975c:	str	r0, [fp, #-48]	; 0xffffffd0
    9760:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9764:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9768:	ldr	r1, [fp, #-56]	; 0xffffffc8
    976c:	eor	r1, r1, r2
    9770:	orr	r1, r3, r1
    9774:	eor	r0, r0, r1
    9778:	ldr	r1, [fp, #-72]	; 0xffffffb8
    977c:	add	r0, r0, r1
    9780:	ldr	r1, [fp, #-132]	; 0xffffff7c
    9784:	add	r0, r0, r1
    9788:	ldr	r3, [fp, #-44]	; 0xffffffd4
    978c:	add	r0, r3, r0
    9790:	str	r0, [fp, #-44]	; 0xffffffd4
    9794:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9798:	lsl	r0, r0, #6
    979c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    97a0:	lsr	r3, r3, #26
    97a4:	orr	r0, r0, r3
    97a8:	str	r0, [fp, #-44]	; 0xffffffd4
    97ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    97b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    97b4:	add	r0, r3, r0
    97b8:	str	r0, [fp, #-44]	; 0xffffffd4
    97bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    97c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    97c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    97c8:	eor	r1, r1, r2
    97cc:	orr	r1, r3, r1
    97d0:	eor	r0, r0, r1
    97d4:	ldr	r1, [fp, #-108]	; 0xffffff94
    97d8:	add	r0, r0, r1
    97dc:	ldr	r1, [fp, #-128]	; 0xffffff80
    97e0:	add	r0, r0, r1
    97e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    97e8:	add	r0, r3, r0
    97ec:	str	r0, [fp, #-56]	; 0xffffffc8
    97f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    97f4:	lsl	r0, r0, #10
    97f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    97fc:	lsr	r3, r3, #22
    9800:	orr	r0, r0, r3
    9804:	str	r0, [fp, #-56]	; 0xffffffc8
    9808:	ldr	r0, [fp, #-44]	; 0xffffffd4
    980c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9810:	add	r0, r3, r0
    9814:	str	r0, [fp, #-56]	; 0xffffffc8
    9818:	ldr	r0, [fp, #-44]	; 0xffffffd4
    981c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9820:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9824:	eor	r1, r1, r2
    9828:	orr	r1, r3, r1
    982c:	eor	r0, r0, r1
    9830:	ldr	r1, [fp, #-80]	; 0xffffffb0
    9834:	add	r0, r0, r1
    9838:	ldr	r1, [sp]
    983c:	add	r0, r0, r1
    9840:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9844:	add	r0, r3, r0
    9848:	str	r0, [fp, #-52]	; 0xffffffcc
    984c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9850:	lsl	r0, r0, #15
    9854:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9858:	lsr	r3, r3, #17
    985c:	orr	r0, r0, r3
    9860:	str	r0, [fp, #-52]	; 0xffffffcc
    9864:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9868:	ldr	r3, [fp, #-52]	; 0xffffffcc
    986c:	add	r0, r3, r0
    9870:	str	r0, [fp, #-52]	; 0xffffffcc
    9874:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9878:	ldr	r3, [fp, #-52]	; 0xffffffcc
    987c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9880:	eor	r1, r1, r2
    9884:	orr	r1, r3, r1
    9888:	eor	r0, r0, r1
    988c:	ldr	r1, [fp, #-116]	; 0xffffff8c
    9890:	add	r0, r0, r1
    9894:	ldr	r1, [sp, #4]
    9898:	add	r0, r0, r1
    989c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    98a0:	add	r0, r3, r0
    98a4:	str	r0, [fp, #-48]	; 0xffffffd0
    98a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    98ac:	lsl	r0, r0, #21
    98b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    98b4:	lsr	r3, r3, #11
    98b8:	orr	r0, r0, r3
    98bc:	str	r0, [fp, #-48]	; 0xffffffd0
    98c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    98c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    98c8:	add	r0, r3, r0
    98cc:	str	r0, [fp, #-48]	; 0xffffffd0
    98d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    98d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    98d8:	ldr	r1, [fp, #-56]	; 0xffffffc8
    98dc:	eor	r1, r1, r2
    98e0:	orr	r1, r3, r1
    98e4:	eor	r0, r0, r1
    98e8:	ldr	r1, [fp, #-88]	; 0xffffffa8
    98ec:	add	r0, r0, r1
    98f0:	ldr	r1, [sp, #8]
    98f4:	add	r0, r0, r1
    98f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    98fc:	add	r0, r3, r0
    9900:	str	r0, [fp, #-44]	; 0xffffffd4
    9904:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9908:	lsl	r0, r0, #6
    990c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9910:	lsr	r3, r3, #26
    9914:	orr	r0, r0, r3
    9918:	str	r0, [fp, #-44]	; 0xffffffd4
    991c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9920:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9924:	add	r0, r3, r0
    9928:	str	r0, [fp, #-44]	; 0xffffffd4
    992c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9930:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9934:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9938:	eor	r1, r1, r2
    993c:	orr	r1, r3, r1
    9940:	eor	r0, r0, r1
    9944:	ldr	r1, [fp, #-60]	; 0xffffffc4
    9948:	add	r0, r0, r1
    994c:	ldr	r1, [sp, #12]
    9950:	add	r0, r0, r1
    9954:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9958:	add	r0, r3, r0
    995c:	str	r0, [fp, #-56]	; 0xffffffc8
    9960:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9964:	lsl	r0, r0, #10
    9968:	ldr	r3, [fp, #-56]	; 0xffffffc8
    996c:	lsr	r3, r3, #22
    9970:	orr	r0, r0, r3
    9974:	str	r0, [fp, #-56]	; 0xffffffc8
    9978:	ldr	r0, [fp, #-44]	; 0xffffffd4
    997c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9980:	add	r0, r3, r0
    9984:	str	r0, [fp, #-56]	; 0xffffffc8
    9988:	ldr	r0, [fp, #-44]	; 0xffffffd4
    998c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9990:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9994:	eor	r1, r1, r2
    9998:	orr	r1, r3, r1
    999c:	eor	r0, r0, r1
    99a0:	ldr	r1, [fp, #-96]	; 0xffffffa0
    99a4:	add	r0, r0, r1
    99a8:	ldr	r1, [sp, #16]
    99ac:	add	r0, r0, r1
    99b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    99b4:	add	r0, r3, r0
    99b8:	str	r0, [fp, #-52]	; 0xffffffcc
    99bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    99c0:	lsl	r0, r0, #15
    99c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    99c8:	lsr	r3, r3, #17
    99cc:	orr	r0, r0, r3
    99d0:	str	r0, [fp, #-52]	; 0xffffffcc
    99d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    99d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    99dc:	add	r0, r3, r0
    99e0:	str	r0, [fp, #-52]	; 0xffffffcc
    99e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    99e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    99ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
    99f0:	eor	r1, r1, r2
    99f4:	orr	r1, r3, r1
    99f8:	eor	r0, r0, r1
    99fc:	ldr	r1, [fp, #-68]	; 0xffffffbc
    9a00:	add	r0, r0, r1
    9a04:	ldr	r1, [sp, #20]
    9a08:	add	r0, r0, r1
    9a0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9a10:	add	r0, r3, r0
    9a14:	str	r0, [fp, #-48]	; 0xffffffd0
    9a18:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9a1c:	lsl	r0, r0, #21
    9a20:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9a24:	lsr	r3, r3, #11
    9a28:	orr	r0, r0, r3
    9a2c:	str	r0, [fp, #-48]	; 0xffffffd0
    9a30:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9a34:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9a38:	add	r0, r3, r0
    9a3c:	str	r0, [fp, #-48]	; 0xffffffd0
    9a40:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9a44:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9a48:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9a4c:	eor	r1, r1, r2
    9a50:	orr	r1, r3, r1
    9a54:	eor	r0, r0, r1
    9a58:	ldr	r1, [fp, #-104]	; 0xffffff98
    9a5c:	add	r0, r0, r1
    9a60:	ldr	r1, [sp, #24]
    9a64:	add	r0, r0, r1
    9a68:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9a6c:	add	r0, r3, r0
    9a70:	str	r0, [fp, #-44]	; 0xffffffd4
    9a74:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9a78:	lsl	r0, r0, #6
    9a7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9a80:	lsr	r3, r3, #26
    9a84:	orr	r0, r0, r3
    9a88:	str	r0, [fp, #-44]	; 0xffffffd4
    9a8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9a90:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9a94:	add	r0, r3, r0
    9a98:	str	r0, [fp, #-44]	; 0xffffffd4
    9a9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9aa0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9aa4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9aa8:	eor	r1, r1, r2
    9aac:	orr	r1, r3, r1
    9ab0:	eor	r0, r0, r1
    9ab4:	ldr	r1, [fp, #-76]	; 0xffffffb4
    9ab8:	add	r0, r0, r1
    9abc:	ldr	r1, [sp, #28]
    9ac0:	add	r0, r0, r1
    9ac4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9ac8:	add	r0, r3, r0
    9acc:	str	r0, [fp, #-56]	; 0xffffffc8
    9ad0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9ad4:	lsl	r0, r0, #10
    9ad8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9adc:	lsr	r3, r3, #22
    9ae0:	orr	r0, r0, r3
    9ae4:	str	r0, [fp, #-56]	; 0xffffffc8
    9ae8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9aec:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9af0:	add	r0, r3, r0
    9af4:	str	r0, [fp, #-56]	; 0xffffffc8
    9af8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9afc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9b00:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9b04:	eor	r1, r1, r2
    9b08:	orr	r1, r3, r1
    9b0c:	eor	r0, r0, r1
    9b10:	ldr	r1, [fp, #-112]	; 0xffffff90
    9b14:	add	r0, r0, r1
    9b18:	ldr	r1, [sp, #32]
    9b1c:	add	r0, r0, r1
    9b20:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9b24:	add	r0, r3, r0
    9b28:	str	r0, [fp, #-52]	; 0xffffffcc
    9b2c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9b30:	lsl	r0, r0, #15
    9b34:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9b38:	lsr	r3, r3, #17
    9b3c:	orr	r0, r0, r3
    9b40:	str	r0, [fp, #-52]	; 0xffffffcc
    9b44:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9b48:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9b4c:	add	r0, r3, r0
    9b50:	str	r0, [fp, #-52]	; 0xffffffcc
    9b54:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9b58:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9b5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9b60:	eor	r1, r1, r2
    9b64:	orr	r1, r3, r1
    9b68:	eor	r0, r0, r1
    9b6c:	ldr	r1, [fp, #-84]	; 0xffffffac
    9b70:	add	r0, r0, r1
    9b74:	ldr	r1, [sp, #36]	; 0x24
    9b78:	add	r0, r0, r1
    9b7c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9b80:	add	r0, r2, r0
    9b84:	str	r0, [fp, #-48]	; 0xffffffd0
    9b88:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9b8c:	lsl	r0, r0, #21
    9b90:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9b94:	lsr	r2, r2, #11
    9b98:	orr	r0, r0, r2
    9b9c:	str	r0, [fp, #-48]	; 0xffffffd0
    9ba0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9ba4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9ba8:	add	r0, r2, r0
    9bac:	str	r0, [fp, #-48]	; 0xffffffd0
    9bb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9bb4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9bb8:	ldr	r3, [r2]
    9bbc:	add	r0, r3, r0
    9bc0:	str	r0, [r2]
    9bc4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9bc8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9bcc:	ldr	r3, [r2, #4]
    9bd0:	add	r0, r3, r0
    9bd4:	str	r0, [r2, #4]
    9bd8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9bdc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9be0:	ldr	r3, [r2, #8]
    9be4:	add	r0, r3, r0
    9be8:	str	r0, [r2, #8]
    9bec:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9bf0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9bf4:	ldr	r3, [r2, #12]
    9bf8:	add	r0, r3, r0
    9bfc:	str	r0, [r2, #12]
    9c00:	ldr	r0, [sp, #44]	; 0x2c
    9c04:	movw	r2, #0
    9c08:	and	r1, r2, #255	; 0xff
    9c0c:	ldr	r2, [sp, #40]	; 0x28
    9c10:	bl	4ff0 <memset@plt>
    9c14:	sub	sp, fp, #28
    9c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00009c1c <MD5Pad>:
    9c1c:	push	{fp, lr}
    9c20:	mov	fp, sp
    9c24:	sub	sp, sp, #24
    9c28:	str	r0, [fp, #-4]
    9c2c:	ldr	r0, [fp, #-4]
    9c30:	ldrb	r1, [r0, #16]
    9c34:	strb	r1, [sp, #12]
    9c38:	ldrb	r1, [r0, #17]
    9c3c:	strb	r1, [sp, #13]
    9c40:	ldrb	r1, [r0, #18]
    9c44:	strb	r1, [sp, #14]
    9c48:	ldrb	r1, [r0, #19]
    9c4c:	strb	r1, [sp, #15]
    9c50:	ldrb	r1, [r0, #20]
    9c54:	strb	r1, [sp, #16]
    9c58:	ldrb	r1, [r0, #21]
    9c5c:	strb	r1, [sp, #17]
    9c60:	ldrb	r1, [r0, #22]
    9c64:	strb	r1, [sp, #18]
    9c68:	ldrb	r0, [r0, #23]
    9c6c:	strb	r0, [sp, #19]
    9c70:	ldr	r0, [fp, #-4]
    9c74:	ldr	r0, [r0, #16]
    9c78:	lsr	r0, r0, #3
    9c7c:	and	r0, r0, #63	; 0x3f
    9c80:	str	r0, [sp, #8]
    9c84:	ldr	r0, [sp, #8]
    9c88:	cmp	r0, #56	; 0x38
    9c8c:	bcs	9ca4 <MD5Pad+0x88>
    9c90:	ldr	r0, [sp, #8]
    9c94:	movw	r1, #56	; 0x38
    9c98:	sub	r0, r1, r0
    9c9c:	str	r0, [sp]
    9ca0:	b	9cb4 <MD5Pad+0x98>
    9ca4:	ldr	r0, [sp, #8]
    9ca8:	movw	r1, #120	; 0x78
    9cac:	sub	r0, r1, r0
    9cb0:	str	r0, [sp]
    9cb4:	ldr	r0, [sp]
    9cb8:	ldr	r1, [pc, #40]	; 9ce8 <MD5Pad+0xcc>
    9cbc:	add	r1, pc, r1
    9cc0:	str	r0, [sp, #4]
    9cc4:	ldr	r0, [fp, #-4]
    9cc8:	ldr	r2, [sp, #4]
    9ccc:	bl	7df0 <MD5Update>
    9cd0:	add	r1, sp, #12
    9cd4:	ldr	r0, [fp, #-4]
    9cd8:	movw	r2, #8
    9cdc:	bl	7df0 <MD5Update>
    9ce0:	mov	sp, fp
    9ce4:	pop	{fp, pc}
    9ce8:	.word	0x0002a770

00009cec <rb_sha256_crypt_r>:
    9cec:	push	{r4, sl, fp, lr}
    9cf0:	add	fp, sp, #8
    9cf4:	sub	sp, sp, #752	; 0x2f0
    9cf8:	ldr	ip, [pc, #4020]	; acb4 <rb_sha256_crypt_r+0xfc8>
    9cfc:	add	ip, pc, ip
    9d00:	str	r0, [fp, #-12]
    9d04:	str	r1, [fp, #-16]
    9d08:	str	r2, [fp, #-20]	; 0xffffffec
    9d0c:	str	r3, [fp, #-24]	; 0xffffffe8
    9d10:	movw	r0, #0
    9d14:	str	r0, [fp, #-452]	; 0xfffffe3c
    9d18:	str	r0, [fp, #-456]	; 0xfffffe38
    9d1c:	movw	r1, #5000	; 0x1388
    9d20:	str	r1, [fp, #-468]	; 0xfffffe2c
    9d24:	str	r0, [fp, #-472]	; 0xfffffe28
    9d28:	ldr	r1, [fp, #-16]
    9d2c:	mov	r0, ip
    9d30:	movw	r2, #3
    9d34:	bl	55e4 <strncmp@plt>
    9d38:	cmp	r0, #0
    9d3c:	bne	9d4c <rb_sha256_crypt_r+0x60>
    9d40:	ldr	r0, [fp, #-16]
    9d44:	add	r0, r0, #3
    9d48:	str	r0, [fp, #-16]
    9d4c:	ldr	r0, [pc, #3940]	; acb8 <rb_sha256_crypt_r+0xfcc>
    9d50:	add	r1, pc, r0
    9d54:	ldr	r0, [fp, #-16]
    9d58:	movw	r2, #7
    9d5c:	bl	55e4 <strncmp@plt>
    9d60:	cmp	r0, #0
    9d64:	bne	9e34 <rb_sha256_crypt_r+0x148>
    9d68:	ldr	r0, [fp, #-16]
    9d6c:	add	r0, r0, #8
    9d70:	mvn	r1, #0
    9d74:	add	r0, r0, r1
    9d78:	str	r0, [fp, #-476]	; 0xfffffe24
    9d7c:	ldr	r0, [fp, #-476]	; 0xfffffe24
    9d80:	sub	r1, fp, #480	; 0x1e0
    9d84:	movw	r2, #10
    9d88:	bl	51d0 <strtoul@plt>
    9d8c:	str	r0, [fp, #-484]	; 0xfffffe1c
    9d90:	ldr	r0, [fp, #-480]	; 0xfffffe20
    9d94:	ldrb	r0, [r0]
    9d98:	cmp	r0, #36	; 0x24
    9d9c:	bne	9e30 <rb_sha256_crypt_r+0x144>
    9da0:	ldr	r0, [pc, #4044]	; ad74 <rb_sha256_crypt_r+0x1088>
    9da4:	ldr	r1, [fp, #-480]	; 0xfffffe20
    9da8:	add	r1, r1, #1
    9dac:	str	r1, [fp, #-16]
    9db0:	ldr	r1, [fp, #-484]	; 0xfffffe1c
    9db4:	cmp	r1, r0
    9db8:	bcs	9dc8 <rb_sha256_crypt_r+0xdc>
    9dbc:	ldr	r0, [fp, #-484]	; 0xfffffe1c
    9dc0:	str	r0, [fp, #-588]	; 0xfffffdb4
    9dc4:	b	9dd4 <rb_sha256_crypt_r+0xe8>
    9dc8:	ldr	r0, [pc, #4004]	; ad74 <rb_sha256_crypt_r+0x1088>
    9dcc:	str	r0, [fp, #-588]	; 0xfffffdb4
    9dd0:	b	9dd4 <rb_sha256_crypt_r+0xe8>
    9dd4:	ldr	r0, [fp, #-588]	; 0xfffffdb4
    9dd8:	movw	r1, #1000	; 0x3e8
    9ddc:	cmp	r1, r0
    9de0:	bls	9df0 <rb_sha256_crypt_r+0x104>
    9de4:	movw	r0, #1000	; 0x3e8
    9de8:	str	r0, [fp, #-592]	; 0xfffffdb0
    9dec:	b	9e20 <rb_sha256_crypt_r+0x134>
    9df0:	ldr	r0, [pc, #3964]	; ad74 <rb_sha256_crypt_r+0x1088>
    9df4:	ldr	r1, [fp, #-484]	; 0xfffffe1c
    9df8:	cmp	r1, r0
    9dfc:	bcs	9e0c <rb_sha256_crypt_r+0x120>
    9e00:	ldr	r0, [fp, #-484]	; 0xfffffe1c
    9e04:	str	r0, [fp, #-596]	; 0xfffffdac
    9e08:	b	9e18 <rb_sha256_crypt_r+0x12c>
    9e0c:	ldr	r0, [pc, #3936]	; ad74 <rb_sha256_crypt_r+0x1088>
    9e10:	str	r0, [fp, #-596]	; 0xfffffdac
    9e14:	b	9e18 <rb_sha256_crypt_r+0x12c>
    9e18:	ldr	r0, [fp, #-596]	; 0xfffffdac
    9e1c:	str	r0, [fp, #-592]	; 0xfffffdb0
    9e20:	ldr	r0, [fp, #-592]	; 0xfffffdb0
    9e24:	str	r0, [fp, #-468]	; 0xfffffe2c
    9e28:	movw	r0, #1
    9e2c:	str	r0, [fp, #-472]	; 0xfffffe28
    9e30:	b	9e34 <rb_sha256_crypt_r+0x148>
    9e34:	ldr	r0, [pc, #4076]	; ae28 <rb_sha256_crypt_r+0x113c>
    9e38:	add	r1, pc, r0
    9e3c:	ldr	r0, [fp, #-16]
    9e40:	bl	55b4 <strcspn@plt>
    9e44:	cmp	r0, #16
    9e48:	bcs	9e64 <rb_sha256_crypt_r+0x178>
    9e4c:	ldr	r0, [pc, #4056]	; ae2c <rb_sha256_crypt_r+0x1140>
    9e50:	add	r1, pc, r0
    9e54:	ldr	r0, [fp, #-16]
    9e58:	bl	55b4 <strcspn@plt>
    9e5c:	str	r0, [fp, #-600]	; 0xfffffda8
    9e60:	b	9e70 <rb_sha256_crypt_r+0x184>
    9e64:	movw	r0, #16
    9e68:	str	r0, [fp, #-600]	; 0xfffffda8
    9e6c:	b	9e70 <rb_sha256_crypt_r+0x184>
    9e70:	ldr	r0, [fp, #-600]	; 0xfffffda8
    9e74:	str	r0, [fp, #-436]	; 0xfffffe4c
    9e78:	ldr	r0, [fp, #-12]
    9e7c:	bl	51b8 <strlen@plt>
    9e80:	str	r0, [fp, #-440]	; 0xfffffe48
    9e84:	ldr	r0, [fp, #-12]
    9e88:	sub	r0, r0, #0
    9e8c:	and	r0, r0, #3
    9e90:	cmp	r0, #0
    9e94:	beq	9ef0 <rb_sha256_crypt_r+0x204>
    9e98:	ldr	r0, [fp, #-440]	; 0xfffffe48
    9e9c:	add	r0, r0, #11
    9ea0:	bic	r0, r0, #7
    9ea4:	mov	r1, sp
    9ea8:	sub	r0, r1, r0
    9eac:	mov	sp, r0
    9eb0:	str	r0, [fp, #-488]	; 0xfffffe18
    9eb4:	ldr	r0, [fp, #-488]	; 0xfffffe18
    9eb8:	add	r0, r0, #4
    9ebc:	ldr	r1, [fp, #-488]	; 0xfffffe18
    9ec0:	sub	r1, r1, #0
    9ec4:	and	r1, r1, #3
    9ec8:	movw	r2, #0
    9ecc:	sub	r1, r2, r1
    9ed0:	add	r0, r0, r1
    9ed4:	ldr	r1, [fp, #-12]
    9ed8:	ldr	r2, [fp, #-440]	; 0xfffffe48
    9edc:	str	r0, [fp, #-604]	; 0xfffffda4
    9ee0:	bl	51dc <memcpy@plt>
    9ee4:	ldr	r0, [fp, #-604]	; 0xfffffda4
    9ee8:	str	r0, [fp, #-452]	; 0xfffffe3c
    9eec:	str	r0, [fp, #-12]
    9ef0:	ldr	r0, [fp, #-16]
    9ef4:	sub	r0, r0, #0
    9ef8:	and	r0, r0, #3
    9efc:	cmp	r0, #0
    9f00:	beq	9f5c <rb_sha256_crypt_r+0x270>
    9f04:	ldr	r0, [fp, #-436]	; 0xfffffe4c
    9f08:	add	r0, r0, #11
    9f0c:	bic	r0, r0, #7
    9f10:	mov	r1, sp
    9f14:	sub	r0, r1, r0
    9f18:	mov	sp, r0
    9f1c:	str	r0, [fp, #-492]	; 0xfffffe14
    9f20:	ldr	r0, [fp, #-492]	; 0xfffffe14
    9f24:	add	r0, r0, #4
    9f28:	ldr	r1, [fp, #-492]	; 0xfffffe14
    9f2c:	sub	r1, r1, #0
    9f30:	and	r1, r1, #3
    9f34:	movw	r2, #0
    9f38:	sub	r1, r2, r1
    9f3c:	add	r0, r0, r1
    9f40:	ldr	r1, [fp, #-16]
    9f44:	ldr	r2, [fp, #-436]	; 0xfffffe4c
    9f48:	str	r0, [fp, #-608]	; 0xfffffda0
    9f4c:	bl	51dc <memcpy@plt>
    9f50:	ldr	r0, [fp, #-608]	; 0xfffffda0
    9f54:	str	r0, [fp, #-456]	; 0xfffffe38
    9f58:	str	r0, [fp, #-16]
    9f5c:	sub	r0, fp, #260	; 0x104
    9f60:	bl	af7c <rb_sha256_init_ctx>
    9f64:	ldr	r0, [fp, #-12]
    9f68:	ldr	r1, [fp, #-440]	; 0xfffffe48
    9f6c:	sub	r2, fp, #260	; 0x104
    9f70:	bl	b030 <rb_sha256_process_bytes>
    9f74:	ldr	r0, [fp, #-16]
    9f78:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    9f7c:	sub	r2, fp, #260	; 0x104
    9f80:	bl	b030 <rb_sha256_process_bytes>
    9f84:	sub	r0, fp, #432	; 0x1b0
    9f88:	bl	af7c <rb_sha256_init_ctx>
    9f8c:	ldr	r0, [fp, #-12]
    9f90:	ldr	r1, [fp, #-440]	; 0xfffffe48
    9f94:	sub	r2, fp, #432	; 0x1b0
    9f98:	bl	b030 <rb_sha256_process_bytes>
    9f9c:	ldr	r0, [fp, #-16]
    9fa0:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    9fa4:	sub	r2, fp, #432	; 0x1b0
    9fa8:	bl	b030 <rb_sha256_process_bytes>
    9fac:	ldr	r0, [fp, #-12]
    9fb0:	ldr	r1, [fp, #-440]	; 0xfffffe48
    9fb4:	sub	r2, fp, #432	; 0x1b0
    9fb8:	bl	b030 <rb_sha256_process_bytes>
    9fbc:	sub	r1, fp, #56	; 0x38
    9fc0:	sub	r0, fp, #432	; 0x1b0
    9fc4:	bl	b2bc <rb_sha256_finish_ctx>
    9fc8:	ldr	r1, [fp, #-440]	; 0xfffffe48
    9fcc:	str	r1, [fp, #-444]	; 0xfffffe44
    9fd0:	ldr	r0, [fp, #-444]	; 0xfffffe44
    9fd4:	cmp	r0, #32
    9fd8:	bls	9ffc <rb_sha256_crypt_r+0x310>
    9fdc:	sub	r0, fp, #56	; 0x38
    9fe0:	movw	r1, #32
    9fe4:	sub	r2, fp, #260	; 0x104
    9fe8:	bl	b030 <rb_sha256_process_bytes>
    9fec:	ldr	r0, [fp, #-444]	; 0xfffffe44
    9ff0:	sub	r0, r0, #32
    9ff4:	str	r0, [fp, #-444]	; 0xfffffe44
    9ff8:	b	9fd0 <rb_sha256_crypt_r+0x2e4>
    9ffc:	sub	r0, fp, #56	; 0x38
    a000:	ldr	r1, [fp, #-444]	; 0xfffffe44
    a004:	sub	r2, fp, #260	; 0x104
    a008:	bl	b030 <rb_sha256_process_bytes>
    a00c:	ldr	r0, [fp, #-440]	; 0xfffffe48
    a010:	str	r0, [fp, #-444]	; 0xfffffe44
    a014:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a018:	cmp	r0, #0
    a01c:	bls	a068 <rb_sha256_crypt_r+0x37c>
    a020:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a024:	and	r0, r0, #1
    a028:	cmp	r0, #0
    a02c:	beq	a044 <rb_sha256_crypt_r+0x358>
    a030:	sub	r0, fp, #56	; 0x38
    a034:	movw	r1, #32
    a038:	sub	r2, fp, #260	; 0x104
    a03c:	bl	b030 <rb_sha256_process_bytes>
    a040:	b	a054 <rb_sha256_crypt_r+0x368>
    a044:	ldr	r0, [fp, #-12]
    a048:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a04c:	sub	r2, fp, #260	; 0x104
    a050:	bl	b030 <rb_sha256_process_bytes>
    a054:	b	a058 <rb_sha256_crypt_r+0x36c>
    a058:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a05c:	lsr	r0, r0, #1
    a060:	str	r0, [fp, #-444]	; 0xfffffe44
    a064:	b	a014 <rb_sha256_crypt_r+0x328>
    a068:	sub	r1, fp, #56	; 0x38
    a06c:	sub	r0, fp, #260	; 0x104
    a070:	bl	b2bc <rb_sha256_finish_ctx>
    a074:	sub	r1, fp, #432	; 0x1b0
    a078:	str	r0, [fp, #-612]	; 0xfffffd9c
    a07c:	mov	r0, r1
    a080:	bl	af7c <rb_sha256_init_ctx>
    a084:	movw	r0, #0
    a088:	str	r0, [fp, #-444]	; 0xfffffe44
    a08c:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a090:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a094:	cmp	r0, r1
    a098:	bcs	a0bc <rb_sha256_crypt_r+0x3d0>
    a09c:	ldr	r0, [fp, #-12]
    a0a0:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a0a4:	sub	r2, fp, #432	; 0x1b0
    a0a8:	bl	b030 <rb_sha256_process_bytes>
    a0ac:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a0b0:	add	r0, r0, #1
    a0b4:	str	r0, [fp, #-444]	; 0xfffffe44
    a0b8:	b	a08c <rb_sha256_crypt_r+0x3a0>
    a0bc:	sub	r0, fp, #432	; 0x1b0
    a0c0:	sub	r1, fp, #88	; 0x58
    a0c4:	bl	b2bc <rb_sha256_finish_ctx>
    a0c8:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a0cc:	add	r1, r1, #7
    a0d0:	bic	r1, r1, #7
    a0d4:	mov	r2, sp
    a0d8:	sub	r1, r2, r1
    a0dc:	mov	sp, r1
    a0e0:	str	r1, [fp, #-460]	; 0xfffffe34
    a0e4:	str	r1, [fp, #-448]	; 0xfffffe40
    a0e8:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a0ec:	str	r1, [fp, #-444]	; 0xfffffe44
    a0f0:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a0f4:	cmp	r0, #32
    a0f8:	bcc	a128 <rb_sha256_crypt_r+0x43c>
    a0fc:	sub	r1, fp, #88	; 0x58
    a100:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a104:	movw	r2, #32
    a108:	bl	51dc <memcpy@plt>
    a10c:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a110:	add	r0, r0, #32
    a114:	str	r0, [fp, #-448]	; 0xfffffe40
    a118:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a11c:	sub	r0, r0, #32
    a120:	str	r0, [fp, #-444]	; 0xfffffe44
    a124:	b	a0f0 <rb_sha256_crypt_r+0x404>
    a128:	sub	r1, fp, #88	; 0x58
    a12c:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a130:	ldr	r2, [fp, #-444]	; 0xfffffe44
    a134:	bl	51dc <memcpy@plt>
    a138:	sub	r0, fp, #432	; 0x1b0
    a13c:	bl	af7c <rb_sha256_init_ctx>
    a140:	movw	r0, #0
    a144:	str	r0, [fp, #-444]	; 0xfffffe44
    a148:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a14c:	ldrb	r1, [fp, #-56]	; 0xffffffc8
    a150:	add	r1, r1, #16
    a154:	cmp	r0, r1
    a158:	bcs	a17c <rb_sha256_crypt_r+0x490>
    a15c:	ldr	r0, [fp, #-16]
    a160:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    a164:	sub	r2, fp, #432	; 0x1b0
    a168:	bl	b030 <rb_sha256_process_bytes>
    a16c:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a170:	add	r0, r0, #1
    a174:	str	r0, [fp, #-444]	; 0xfffffe44
    a178:	b	a148 <rb_sha256_crypt_r+0x45c>
    a17c:	sub	r0, fp, #432	; 0x1b0
    a180:	sub	r1, fp, #88	; 0x58
    a184:	bl	b2bc <rb_sha256_finish_ctx>
    a188:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    a18c:	add	r1, r1, #7
    a190:	bic	r1, r1, #7
    a194:	mov	r2, sp
    a198:	sub	r1, r2, r1
    a19c:	mov	sp, r1
    a1a0:	str	r1, [fp, #-464]	; 0xfffffe30
    a1a4:	str	r1, [fp, #-448]	; 0xfffffe40
    a1a8:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    a1ac:	str	r1, [fp, #-444]	; 0xfffffe44
    a1b0:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a1b4:	cmp	r0, #32
    a1b8:	bcc	a1e8 <rb_sha256_crypt_r+0x4fc>
    a1bc:	sub	r1, fp, #88	; 0x58
    a1c0:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a1c4:	movw	r2, #32
    a1c8:	bl	51dc <memcpy@plt>
    a1cc:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a1d0:	add	r0, r0, #32
    a1d4:	str	r0, [fp, #-448]	; 0xfffffe40
    a1d8:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a1dc:	sub	r0, r0, #32
    a1e0:	str	r0, [fp, #-444]	; 0xfffffe44
    a1e4:	b	a1b0 <rb_sha256_crypt_r+0x4c4>
    a1e8:	sub	r1, fp, #88	; 0x58
    a1ec:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a1f0:	ldr	r2, [fp, #-444]	; 0xfffffe44
    a1f4:	bl	51dc <memcpy@plt>
    a1f8:	movw	r0, #0
    a1fc:	str	r0, [fp, #-444]	; 0xfffffe44
    a200:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a204:	ldr	r1, [fp, #-468]	; 0xfffffe2c
    a208:	cmp	r0, r1
    a20c:	bcs	a310 <rb_sha256_crypt_r+0x624>
    a210:	sub	r0, fp, #260	; 0x104
    a214:	bl	af7c <rb_sha256_init_ctx>
    a218:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a21c:	and	r0, r0, #1
    a220:	cmp	r0, #0
    a224:	beq	a23c <rb_sha256_crypt_r+0x550>
    a228:	ldr	r0, [fp, #-460]	; 0xfffffe34
    a22c:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a230:	sub	r2, fp, #260	; 0x104
    a234:	bl	b030 <rb_sha256_process_bytes>
    a238:	b	a24c <rb_sha256_crypt_r+0x560>
    a23c:	sub	r0, fp, #56	; 0x38
    a240:	movw	r1, #32
    a244:	sub	r2, fp, #260	; 0x104
    a248:	bl	b030 <rb_sha256_process_bytes>
    a24c:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a250:	movw	r1, #43691	; 0xaaab
    a254:	movt	r1, #43690	; 0xaaaa
    a258:	umull	r1, r2, r0, r1
    a25c:	lsr	r2, r2, #1
    a260:	add	r2, r2, r2, lsl #1
    a264:	sub	r0, r0, r2
    a268:	cmp	r0, #0
    a26c:	beq	a280 <rb_sha256_crypt_r+0x594>
    a270:	ldr	r0, [fp, #-464]	; 0xfffffe30
    a274:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    a278:	sub	r2, fp, #260	; 0x104
    a27c:	bl	b030 <rb_sha256_process_bytes>
    a280:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a284:	movw	r1, #18725	; 0x4925
    a288:	movt	r1, #9362	; 0x2492
    a28c:	umull	r1, r2, r0, r1
    a290:	sub	r3, r0, r2
    a294:	add	r2, r2, r3, lsr #1
    a298:	lsr	r3, r2, #2
    a29c:	lsl	r3, r3, #3
    a2a0:	sub	r2, r3, r2, lsr #2
    a2a4:	sub	r0, r0, r2
    a2a8:	cmp	r0, #0
    a2ac:	beq	a2c0 <rb_sha256_crypt_r+0x5d4>
    a2b0:	ldr	r0, [fp, #-460]	; 0xfffffe34
    a2b4:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a2b8:	sub	r2, fp, #260	; 0x104
    a2bc:	bl	b030 <rb_sha256_process_bytes>
    a2c0:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a2c4:	and	r0, r0, #1
    a2c8:	cmp	r0, #0
    a2cc:	beq	a2e4 <rb_sha256_crypt_r+0x5f8>
    a2d0:	sub	r0, fp, #56	; 0x38
    a2d4:	movw	r1, #32
    a2d8:	sub	r2, fp, #260	; 0x104
    a2dc:	bl	b030 <rb_sha256_process_bytes>
    a2e0:	b	a2f4 <rb_sha256_crypt_r+0x608>
    a2e4:	ldr	r0, [fp, #-460]	; 0xfffffe34
    a2e8:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a2ec:	sub	r2, fp, #260	; 0x104
    a2f0:	bl	b030 <rb_sha256_process_bytes>
    a2f4:	sub	r1, fp, #56	; 0x38
    a2f8:	sub	r0, fp, #260	; 0x104
    a2fc:	bl	b2bc <rb_sha256_finish_ctx>
    a300:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a304:	add	r0, r0, #1
    a308:	str	r0, [fp, #-444]	; 0xfffffe44
    a30c:	b	a200 <rb_sha256_crypt_r+0x514>
    a310:	ldr	r0, [fp, #-20]	; 0xffffffec
    a314:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a318:	movw	r2, #0
    a31c:	cmp	r2, r1
    a320:	str	r0, [fp, #-616]	; 0xfffffd98
    a324:	ble	a334 <rb_sha256_crypt_r+0x648>
    a328:	movw	r0, #0
    a32c:	str	r0, [fp, #-620]	; 0xfffffd94
    a330:	b	a33c <rb_sha256_crypt_r+0x650>
    a334:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a338:	str	r0, [fp, #-620]	; 0xfffffd94
    a33c:	ldr	r0, [fp, #-620]	; 0xfffffd94
    a340:	ldr	r1, [fp, #-616]	; 0xfffffd98
    a344:	str	r0, [fp, #-624]	; 0xfffffd90
    a348:	mov	r0, r1
    a34c:	movw	r2, #0
    a350:	and	r1, r2, #255	; 0xff
    a354:	ldr	r2, [fp, #-624]	; 0xfffffd90
    a358:	bl	4ff0 <memset@plt>
    a35c:	ldr	r0, [fp, #-20]	; 0xffffffec
    a360:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a364:	movw	r2, #0
    a368:	cmp	r2, r1
    a36c:	str	r0, [fp, #-628]	; 0xfffffd8c
    a370:	ble	a380 <rb_sha256_crypt_r+0x694>
    a374:	movw	r0, #0
    a378:	str	r0, [fp, #-632]	; 0xfffffd88
    a37c:	b	a388 <rb_sha256_crypt_r+0x69c>
    a380:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a384:	str	r0, [fp, #-632]	; 0xfffffd88
    a388:	ldr	r0, [fp, #-632]	; 0xfffffd88
    a38c:	ldr	r1, [pc, #2992]	; af44 <rb_sha256_crypt_r+0x1258>
    a390:	add	r1, pc, r1
    a394:	ldr	r2, [fp, #-628]	; 0xfffffd8c
    a398:	str	r0, [fp, #-636]	; 0xfffffd84
    a39c:	mov	r0, r2
    a3a0:	ldr	r2, [fp, #-636]	; 0xfffffd84
    a3a4:	bl	4f3c <strncpy@plt>
    a3a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    a3ac:	str	r0, [fp, #-640]	; 0xfffffd80
    a3b0:	mov	r0, r1
    a3b4:	movw	r1, #0
    a3b8:	bl	4f78 <strchr@plt>
    a3bc:	str	r0, [fp, #-448]	; 0xfffffe40
    a3c0:	movw	r1, #0
    a3c4:	cmp	r0, r1
    a3c8:	bne	a408 <rb_sha256_crypt_r+0x71c>
    a3cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    a3d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a3d4:	movw	r2, #0
    a3d8:	cmp	r2, r1
    a3dc:	str	r0, [fp, #-644]	; 0xfffffd7c
    a3e0:	ble	a3f0 <rb_sha256_crypt_r+0x704>
    a3e4:	movw	r0, #0
    a3e8:	str	r0, [fp, #-648]	; 0xfffffd78
    a3ec:	b	a3f8 <rb_sha256_crypt_r+0x70c>
    a3f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a3f4:	str	r0, [fp, #-648]	; 0xfffffd78
    a3f8:	ldr	r0, [fp, #-648]	; 0xfffffd78
    a3fc:	ldr	r1, [fp, #-644]	; 0xfffffd7c
    a400:	add	r0, r1, r0
    a404:	str	r0, [fp, #-448]	; 0xfffffe40
    a408:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a40c:	sub	r0, r0, #3
    a410:	str	r0, [fp, #-24]	; 0xffffffe8
    a414:	ldr	r0, [fp, #-472]	; 0xfffffe28
    a418:	cmp	r0, #0
    a41c:	beq	a4b4 <rb_sha256_crypt_r+0x7c8>
    a420:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a424:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a428:	movw	r2, #0
    a42c:	cmp	r2, r1
    a430:	str	r0, [fp, #-652]	; 0xfffffd74
    a434:	ble	a444 <rb_sha256_crypt_r+0x758>
    a438:	movw	r0, #0
    a43c:	str	r0, [fp, #-656]	; 0xfffffd70
    a440:	b	a44c <rb_sha256_crypt_r+0x760>
    a444:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a448:	str	r0, [fp, #-656]	; 0xfffffd70
    a44c:	ldr	r0, [fp, #-656]	; 0xfffffd70
    a450:	ldr	r1, [pc, #2800]	; af48 <rb_sha256_crypt_r+0x125c>
    a454:	add	r2, pc, r1
    a458:	ldr	r1, [pc, #2796]	; af4c <rb_sha256_crypt_r+0x1260>
    a45c:	add	r3, pc, r1
    a460:	ldr	r1, [fp, #-468]	; 0xfffffe2c
    a464:	sub	sp, sp, #8
    a468:	ldr	ip, [fp, #-652]	; 0xfffffd74
    a46c:	str	r0, [fp, #-660]	; 0xfffffd6c
    a470:	mov	r0, ip
    a474:	ldr	lr, [fp, #-660]	; 0xfffffd6c
    a478:	str	r1, [fp, #-664]	; 0xfffffd68
    a47c:	mov	r1, lr
    a480:	ldr	r4, [fp, #-664]	; 0xfffffd68
    a484:	str	r4, [sp]
    a488:	bl	5584 <snprintf@plt>
    a48c:	add	sp, sp, #8
    a490:	str	r0, [fp, #-496]	; 0xfffffe10
    a494:	ldr	r0, [fp, #-496]	; 0xfffffe10
    a498:	ldr	r1, [fp, #-448]	; 0xfffffe40
    a49c:	add	r0, r1, r0
    a4a0:	str	r0, [fp, #-448]	; 0xfffffe40
    a4a4:	ldr	r0, [fp, #-496]	; 0xfffffe10
    a4a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a4ac:	sub	r0, r1, r0
    a4b0:	str	r0, [fp, #-24]	; 0xffffffe8
    a4b4:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a4b8:	ldr	r2, [fp, #-436]	; 0xfffffe4c
    a4bc:	movw	r1, #0
    a4c0:	and	r1, r1, #255	; 0xff
    a4c4:	bl	4ff0 <memset@plt>
    a4c8:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a4cc:	ldr	r1, [fp, #-16]
    a4d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a4d4:	movw	r3, #0
    a4d8:	cmp	r3, r2
    a4dc:	str	r0, [fp, #-668]	; 0xfffffd64
    a4e0:	str	r1, [fp, #-672]	; 0xfffffd60
    a4e4:	ble	a4f4 <rb_sha256_crypt_r+0x808>
    a4e8:	movw	r0, #0
    a4ec:	str	r0, [fp, #-676]	; 0xfffffd5c
    a4f0:	b	a4fc <rb_sha256_crypt_r+0x810>
    a4f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a4f8:	str	r0, [fp, #-676]	; 0xfffffd5c
    a4fc:	ldr	r0, [fp, #-676]	; 0xfffffd5c
    a500:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    a504:	cmp	r0, r1
    a508:	bcs	a53c <rb_sha256_crypt_r+0x850>
    a50c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a510:	movw	r1, #0
    a514:	cmp	r1, r0
    a518:	ble	a528 <rb_sha256_crypt_r+0x83c>
    a51c:	movw	r0, #0
    a520:	str	r0, [fp, #-680]	; 0xfffffd58
    a524:	b	a530 <rb_sha256_crypt_r+0x844>
    a528:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a52c:	str	r0, [fp, #-680]	; 0xfffffd58
    a530:	ldr	r0, [fp, #-680]	; 0xfffffd58
    a534:	str	r0, [fp, #-684]	; 0xfffffd54
    a538:	b	a544 <rb_sha256_crypt_r+0x858>
    a53c:	ldr	r0, [fp, #-436]	; 0xfffffe4c
    a540:	str	r0, [fp, #-684]	; 0xfffffd54
    a544:	ldr	r0, [fp, #-684]	; 0xfffffd54
    a548:	ldr	r1, [fp, #-668]	; 0xfffffd64
    a54c:	str	r0, [fp, #-688]	; 0xfffffd50
    a550:	mov	r0, r1
    a554:	ldr	r1, [fp, #-672]	; 0xfffffd60
    a558:	ldr	r2, [fp, #-688]	; 0xfffffd50
    a55c:	bl	4f3c <strncpy@plt>
    a560:	ldr	r1, [fp, #-20]	; 0xffffffec
    a564:	str	r0, [fp, #-692]	; 0xfffffd4c
    a568:	mov	r0, r1
    a56c:	movw	r1, #0
    a570:	bl	4f78 <strchr@plt>
    a574:	str	r0, [fp, #-448]	; 0xfffffe40
    a578:	movw	r1, #0
    a57c:	cmp	r0, r1
    a580:	bne	a594 <rb_sha256_crypt_r+0x8a8>
    a584:	ldr	r0, [fp, #-436]	; 0xfffffe4c
    a588:	ldr	r1, [fp, #-448]	; 0xfffffe40
    a58c:	add	r0, r1, r0
    a590:	str	r0, [fp, #-448]	; 0xfffffe40
    a594:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a598:	movw	r1, #0
    a59c:	cmp	r1, r0
    a5a0:	ble	a5b0 <rb_sha256_crypt_r+0x8c4>
    a5a4:	movw	r0, #0
    a5a8:	str	r0, [fp, #-696]	; 0xfffffd48
    a5ac:	b	a5b8 <rb_sha256_crypt_r+0x8cc>
    a5b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a5b4:	str	r0, [fp, #-696]	; 0xfffffd48
    a5b8:	ldr	r0, [fp, #-696]	; 0xfffffd48
    a5bc:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    a5c0:	cmp	r0, r1
    a5c4:	bcs	a5f8 <rb_sha256_crypt_r+0x90c>
    a5c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a5cc:	movw	r1, #0
    a5d0:	cmp	r1, r0
    a5d4:	ble	a5e4 <rb_sha256_crypt_r+0x8f8>
    a5d8:	movw	r0, #0
    a5dc:	str	r0, [fp, #-700]	; 0xfffffd44
    a5e0:	b	a5ec <rb_sha256_crypt_r+0x900>
    a5e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a5e8:	str	r0, [fp, #-700]	; 0xfffffd44
    a5ec:	ldr	r0, [fp, #-700]	; 0xfffffd44
    a5f0:	str	r0, [fp, #-704]	; 0xfffffd40
    a5f4:	b	a600 <rb_sha256_crypt_r+0x914>
    a5f8:	ldr	r0, [fp, #-436]	; 0xfffffe4c
    a5fc:	str	r0, [fp, #-704]	; 0xfffffd40
    a600:	ldr	r0, [fp, #-704]	; 0xfffffd40
    a604:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a608:	sub	r0, r1, r0
    a60c:	str	r0, [fp, #-24]	; 0xffffffe8
    a610:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a614:	cmp	r0, #0
    a618:	ble	a640 <rb_sha256_crypt_r+0x954>
    a61c:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a620:	add	r1, r0, #1
    a624:	str	r1, [fp, #-448]	; 0xfffffe40
    a628:	movw	r1, #36	; 0x24
    a62c:	strb	r1, [r0]
    a630:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a634:	mvn	r1, #0
    a638:	add	r0, r0, r1
    a63c:	str	r0, [fp, #-24]	; 0xffffffe8
    a640:	b	a644 <rb_sha256_crypt_r+0x958>
    a644:	ldrb	r0, [fp, #-56]	; 0xffffffc8
    a648:	lsl	r0, r0, #16
    a64c:	ldrb	r1, [fp, #-46]	; 0xffffffd2
    a650:	lsl	r1, r1, #8
    a654:	orr	r0, r0, r1
    a658:	ldrb	r1, [fp, #-36]	; 0xffffffdc
    a65c:	orr	r0, r0, r1
    a660:	str	r0, [fp, #-500]	; 0xfffffe0c
    a664:	movw	r0, #4
    a668:	str	r0, [fp, #-504]	; 0xfffffe08
    a66c:	ldr	r0, [fp, #-504]	; 0xfffffe08
    a670:	mvn	r1, #0
    a674:	add	r1, r0, r1
    a678:	str	r1, [fp, #-504]	; 0xfffffe08
    a67c:	cmp	r0, #0
    a680:	movw	r0, #0
    a684:	str	r0, [fp, #-708]	; 0xfffffd3c
    a688:	ble	a6a0 <rb_sha256_crypt_r+0x9b4>
    a68c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a690:	cmp	r0, #0
    a694:	movw	r0, #0
    a698:	movgt	r0, #1
    a69c:	str	r0, [fp, #-708]	; 0xfffffd3c
    a6a0:	ldr	r0, [fp, #-708]	; 0xfffffd3c
    a6a4:	tst	r0, #1
    a6a8:	beq	a6f4 <rb_sha256_crypt_r+0xa08>
    a6ac:	ldr	r0, [pc, #2244]	; af78 <rb_sha256_crypt_r+0x128c>
    a6b0:	add	r0, pc, r0
    a6b4:	ldr	r1, [fp, #-500]	; 0xfffffe0c
    a6b8:	and	r1, r1, #63	; 0x3f
    a6bc:	add	r0, r0, r1
    a6c0:	ldrb	r0, [r0]
    a6c4:	ldr	r1, [fp, #-448]	; 0xfffffe40
    a6c8:	add	r2, r1, #1
    a6cc:	str	r2, [fp, #-448]	; 0xfffffe40
    a6d0:	strb	r0, [r1]
    a6d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a6d8:	mvn	r1, #0
    a6dc:	add	r0, r0, r1
    a6e0:	str	r0, [fp, #-24]	; 0xffffffe8
    a6e4:	ldr	r0, [fp, #-500]	; 0xfffffe0c
    a6e8:	lsr	r0, r0, #6
    a6ec:	str	r0, [fp, #-500]	; 0xfffffe0c
    a6f0:	b	a66c <rb_sha256_crypt_r+0x980>
    a6f4:	b	a6f8 <rb_sha256_crypt_r+0xa0c>
    a6f8:	b	a6fc <rb_sha256_crypt_r+0xa10>
    a6fc:	ldrb	r0, [fp, #-35]	; 0xffffffdd
    a700:	lsl	r0, r0, #16
    a704:	ldrb	r1, [fp, #-55]	; 0xffffffc9
    a708:	lsl	r1, r1, #8
    a70c:	orr	r0, r0, r1
    a710:	ldrb	r1, [fp, #-45]	; 0xffffffd3
    a714:	orr	r0, r0, r1
    a718:	str	r0, [fp, #-508]	; 0xfffffe04
    a71c:	movw	r0, #4
    a720:	str	r0, [fp, #-512]	; 0xfffffe00
    a724:	ldr	r0, [fp, #-512]	; 0xfffffe00
    a728:	mvn	r1, #0
    a72c:	add	r1, r0, r1
    a730:	str	r1, [fp, #-512]	; 0xfffffe00
    a734:	cmp	r0, #0
    a738:	movw	r0, #0
    a73c:	str	r0, [fp, #-712]	; 0xfffffd38
    a740:	ble	a758 <rb_sha256_crypt_r+0xa6c>
    a744:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a748:	cmp	r0, #0
    a74c:	movw	r0, #0
    a750:	movgt	r0, #1
    a754:	str	r0, [fp, #-712]	; 0xfffffd38
    a758:	ldr	r0, [fp, #-712]	; 0xfffffd38
    a75c:	tst	r0, #1
    a760:	beq	a7ac <rb_sha256_crypt_r+0xac0>
    a764:	ldr	r0, [pc, #2056]	; af74 <rb_sha256_crypt_r+0x1288>
    a768:	add	r0, pc, r0
    a76c:	ldr	r1, [fp, #-508]	; 0xfffffe04
    a770:	and	r1, r1, #63	; 0x3f
    a774:	add	r0, r0, r1
    a778:	ldrb	r0, [r0]
    a77c:	ldr	r1, [fp, #-448]	; 0xfffffe40
    a780:	add	r2, r1, #1
    a784:	str	r2, [fp, #-448]	; 0xfffffe40
    a788:	strb	r0, [r1]
    a78c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a790:	mvn	r1, #0
    a794:	add	r0, r0, r1
    a798:	str	r0, [fp, #-24]	; 0xffffffe8
    a79c:	ldr	r0, [fp, #-508]	; 0xfffffe04
    a7a0:	lsr	r0, r0, #6
    a7a4:	str	r0, [fp, #-508]	; 0xfffffe04
    a7a8:	b	a724 <rb_sha256_crypt_r+0xa38>
    a7ac:	b	a7b0 <rb_sha256_crypt_r+0xac4>
    a7b0:	b	a7b4 <rb_sha256_crypt_r+0xac8>
    a7b4:	ldrb	r0, [fp, #-44]	; 0xffffffd4
    a7b8:	lsl	r0, r0, #16
    a7bc:	ldrb	r1, [fp, #-34]	; 0xffffffde
    a7c0:	lsl	r1, r1, #8
    a7c4:	orr	r0, r0, r1
    a7c8:	ldrb	r1, [fp, #-54]	; 0xffffffca
    a7cc:	orr	r0, r0, r1
    a7d0:	str	r0, [fp, #-516]	; 0xfffffdfc
    a7d4:	movw	r0, #4
    a7d8:	str	r0, [fp, #-520]	; 0xfffffdf8
    a7dc:	ldr	r0, [fp, #-520]	; 0xfffffdf8
    a7e0:	mvn	r1, #0
    a7e4:	add	r1, r0, r1
    a7e8:	str	r1, [fp, #-520]	; 0xfffffdf8
    a7ec:	cmp	r0, #0
    a7f0:	movw	r0, #0
    a7f4:	str	r0, [fp, #-716]	; 0xfffffd34
    a7f8:	ble	a810 <rb_sha256_crypt_r+0xb24>
    a7fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a800:	cmp	r0, #0
    a804:	movw	r0, #0
    a808:	movgt	r0, #1
    a80c:	str	r0, [fp, #-716]	; 0xfffffd34
    a810:	ldr	r0, [fp, #-716]	; 0xfffffd34
    a814:	tst	r0, #1
    a818:	beq	a864 <rb_sha256_crypt_r+0xb78>
    a81c:	ldr	r0, [pc, #1868]	; af70 <rb_sha256_crypt_r+0x1284>
    a820:	add	r0, pc, r0
    a824:	ldr	r1, [fp, #-516]	; 0xfffffdfc
    a828:	and	r1, r1, #63	; 0x3f
    a82c:	add	r0, r0, r1
    a830:	ldrb	r0, [r0]
    a834:	ldr	r1, [fp, #-448]	; 0xfffffe40
    a838:	add	r2, r1, #1
    a83c:	str	r2, [fp, #-448]	; 0xfffffe40
    a840:	strb	r0, [r1]
    a844:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a848:	mvn	r1, #0
    a84c:	add	r0, r0, r1
    a850:	str	r0, [fp, #-24]	; 0xffffffe8
    a854:	ldr	r0, [fp, #-516]	; 0xfffffdfc
    a858:	lsr	r0, r0, #6
    a85c:	str	r0, [fp, #-516]	; 0xfffffdfc
    a860:	b	a7dc <rb_sha256_crypt_r+0xaf0>
    a864:	b	a868 <rb_sha256_crypt_r+0xb7c>
    a868:	b	a86c <rb_sha256_crypt_r+0xb80>
    a86c:	ldrb	r0, [fp, #-53]	; 0xffffffcb
    a870:	lsl	r0, r0, #16
    a874:	ldrb	r1, [fp, #-43]	; 0xffffffd5
    a878:	lsl	r1, r1, #8
    a87c:	orr	r0, r0, r1
    a880:	ldrb	r1, [fp, #-33]	; 0xffffffdf
    a884:	orr	r0, r0, r1
    a888:	str	r0, [fp, #-524]	; 0xfffffdf4
    a88c:	movw	r0, #4
    a890:	str	r0, [fp, #-528]	; 0xfffffdf0
    a894:	ldr	r0, [fp, #-528]	; 0xfffffdf0
    a898:	mvn	r1, #0
    a89c:	add	r1, r0, r1
    a8a0:	str	r1, [fp, #-528]	; 0xfffffdf0
    a8a4:	cmp	r0, #0
    a8a8:	movw	r0, #0
    a8ac:	str	r0, [fp, #-720]	; 0xfffffd30
    a8b0:	ble	a8c8 <rb_sha256_crypt_r+0xbdc>
    a8b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a8b8:	cmp	r0, #0
    a8bc:	movw	r0, #0
    a8c0:	movgt	r0, #1
    a8c4:	str	r0, [fp, #-720]	; 0xfffffd30
    a8c8:	ldr	r0, [fp, #-720]	; 0xfffffd30
    a8cc:	tst	r0, #1
    a8d0:	beq	a91c <rb_sha256_crypt_r+0xc30>
    a8d4:	ldr	r0, [pc, #1680]	; af6c <rb_sha256_crypt_r+0x1280>
    a8d8:	add	r0, pc, r0
    a8dc:	ldr	r1, [fp, #-524]	; 0xfffffdf4
    a8e0:	and	r1, r1, #63	; 0x3f
    a8e4:	add	r0, r0, r1
    a8e8:	ldrb	r0, [r0]
    a8ec:	ldr	r1, [fp, #-448]	; 0xfffffe40
    a8f0:	add	r2, r1, #1
    a8f4:	str	r2, [fp, #-448]	; 0xfffffe40
    a8f8:	strb	r0, [r1]
    a8fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a900:	mvn	r1, #0
    a904:	add	r0, r0, r1
    a908:	str	r0, [fp, #-24]	; 0xffffffe8
    a90c:	ldr	r0, [fp, #-524]	; 0xfffffdf4
    a910:	lsr	r0, r0, #6
    a914:	str	r0, [fp, #-524]	; 0xfffffdf4
    a918:	b	a894 <rb_sha256_crypt_r+0xba8>
    a91c:	b	a920 <rb_sha256_crypt_r+0xc34>
    a920:	b	a924 <rb_sha256_crypt_r+0xc38>
    a924:	ldrb	r0, [fp, #-32]	; 0xffffffe0
    a928:	lsl	r0, r0, #16
    a92c:	ldrb	r1, [fp, #-52]	; 0xffffffcc
    a930:	lsl	r1, r1, #8
    a934:	orr	r0, r0, r1
    a938:	ldrb	r1, [fp, #-42]	; 0xffffffd6
    a93c:	orr	r0, r0, r1
    a940:	str	r0, [fp, #-532]	; 0xfffffdec
    a944:	movw	r0, #4
    a948:	str	r0, [fp, #-536]	; 0xfffffde8
    a94c:	ldr	r0, [fp, #-536]	; 0xfffffde8
    a950:	mvn	r1, #0
    a954:	add	r1, r0, r1
    a958:	str	r1, [fp, #-536]	; 0xfffffde8
    a95c:	cmp	r0, #0
    a960:	movw	r0, #0
    a964:	str	r0, [fp, #-724]	; 0xfffffd2c
    a968:	ble	a980 <rb_sha256_crypt_r+0xc94>
    a96c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a970:	cmp	r0, #0
    a974:	movw	r0, #0
    a978:	movgt	r0, #1
    a97c:	str	r0, [fp, #-724]	; 0xfffffd2c
    a980:	ldr	r0, [fp, #-724]	; 0xfffffd2c
    a984:	tst	r0, #1
    a988:	beq	a9d4 <rb_sha256_crypt_r+0xce8>
    a98c:	ldr	r0, [pc, #1492]	; af68 <rb_sha256_crypt_r+0x127c>
    a990:	add	r0, pc, r0
    a994:	ldr	r1, [fp, #-532]	; 0xfffffdec
    a998:	and	r1, r1, #63	; 0x3f
    a99c:	add	r0, r0, r1
    a9a0:	ldrb	r0, [r0]
    a9a4:	ldr	r1, [fp, #-448]	; 0xfffffe40
    a9a8:	add	r2, r1, #1
    a9ac:	str	r2, [fp, #-448]	; 0xfffffe40
    a9b0:	strb	r0, [r1]
    a9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a9b8:	mvn	r1, #0
    a9bc:	add	r0, r0, r1
    a9c0:	str	r0, [fp, #-24]	; 0xffffffe8
    a9c4:	ldr	r0, [fp, #-532]	; 0xfffffdec
    a9c8:	lsr	r0, r0, #6
    a9cc:	str	r0, [fp, #-532]	; 0xfffffdec
    a9d0:	b	a94c <rb_sha256_crypt_r+0xc60>
    a9d4:	b	a9d8 <rb_sha256_crypt_r+0xcec>
    a9d8:	b	a9dc <rb_sha256_crypt_r+0xcf0>
    a9dc:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    a9e0:	lsl	r0, r0, #16
    a9e4:	ldrb	r1, [fp, #-31]	; 0xffffffe1
    a9e8:	lsl	r1, r1, #8
    a9ec:	orr	r0, r0, r1
    a9f0:	ldrb	r1, [fp, #-51]	; 0xffffffcd
    a9f4:	orr	r0, r0, r1
    a9f8:	str	r0, [fp, #-540]	; 0xfffffde4
    a9fc:	movw	r0, #4
    aa00:	str	r0, [fp, #-544]	; 0xfffffde0
    aa04:	ldr	r0, [fp, #-544]	; 0xfffffde0
    aa08:	mvn	r1, #0
    aa0c:	add	r1, r0, r1
    aa10:	str	r1, [fp, #-544]	; 0xfffffde0
    aa14:	cmp	r0, #0
    aa18:	movw	r0, #0
    aa1c:	str	r0, [fp, #-728]	; 0xfffffd28
    aa20:	ble	aa38 <rb_sha256_crypt_r+0xd4c>
    aa24:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aa28:	cmp	r0, #0
    aa2c:	movw	r0, #0
    aa30:	movgt	r0, #1
    aa34:	str	r0, [fp, #-728]	; 0xfffffd28
    aa38:	ldr	r0, [fp, #-728]	; 0xfffffd28
    aa3c:	tst	r0, #1
    aa40:	beq	aa8c <rb_sha256_crypt_r+0xda0>
    aa44:	ldr	r0, [pc, #1304]	; af64 <rb_sha256_crypt_r+0x1278>
    aa48:	add	r0, pc, r0
    aa4c:	ldr	r1, [fp, #-540]	; 0xfffffde4
    aa50:	and	r1, r1, #63	; 0x3f
    aa54:	add	r0, r0, r1
    aa58:	ldrb	r0, [r0]
    aa5c:	ldr	r1, [fp, #-448]	; 0xfffffe40
    aa60:	add	r2, r1, #1
    aa64:	str	r2, [fp, #-448]	; 0xfffffe40
    aa68:	strb	r0, [r1]
    aa6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aa70:	mvn	r1, #0
    aa74:	add	r0, r0, r1
    aa78:	str	r0, [fp, #-24]	; 0xffffffe8
    aa7c:	ldr	r0, [fp, #-540]	; 0xfffffde4
    aa80:	lsr	r0, r0, #6
    aa84:	str	r0, [fp, #-540]	; 0xfffffde4
    aa88:	b	aa04 <rb_sha256_crypt_r+0xd18>
    aa8c:	b	aa90 <rb_sha256_crypt_r+0xda4>
    aa90:	b	aa94 <rb_sha256_crypt_r+0xda8>
    aa94:	ldrb	r0, [fp, #-50]	; 0xffffffce
    aa98:	lsl	r0, r0, #16
    aa9c:	ldrb	r1, [fp, #-40]	; 0xffffffd8
    aaa0:	lsl	r1, r1, #8
    aaa4:	orr	r0, r0, r1
    aaa8:	ldrb	r1, [fp, #-30]	; 0xffffffe2
    aaac:	orr	r0, r0, r1
    aab0:	str	r0, [fp, #-548]	; 0xfffffddc
    aab4:	movw	r0, #4
    aab8:	str	r0, [fp, #-552]	; 0xfffffdd8
    aabc:	ldr	r0, [fp, #-552]	; 0xfffffdd8
    aac0:	mvn	r1, #0
    aac4:	add	r1, r0, r1
    aac8:	str	r1, [fp, #-552]	; 0xfffffdd8
    aacc:	cmp	r0, #0
    aad0:	movw	r0, #0
    aad4:	str	r0, [fp, #-732]	; 0xfffffd24
    aad8:	ble	aaf0 <rb_sha256_crypt_r+0xe04>
    aadc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aae0:	cmp	r0, #0
    aae4:	movw	r0, #0
    aae8:	movgt	r0, #1
    aaec:	str	r0, [fp, #-732]	; 0xfffffd24
    aaf0:	ldr	r0, [fp, #-732]	; 0xfffffd24
    aaf4:	tst	r0, #1
    aaf8:	beq	ab44 <rb_sha256_crypt_r+0xe58>
    aafc:	ldr	r0, [pc, #1116]	; af60 <rb_sha256_crypt_r+0x1274>
    ab00:	add	r0, pc, r0
    ab04:	ldr	r1, [fp, #-548]	; 0xfffffddc
    ab08:	and	r1, r1, #63	; 0x3f
    ab0c:	add	r0, r0, r1
    ab10:	ldrb	r0, [r0]
    ab14:	ldr	r1, [fp, #-448]	; 0xfffffe40
    ab18:	add	r2, r1, #1
    ab1c:	str	r2, [fp, #-448]	; 0xfffffe40
    ab20:	strb	r0, [r1]
    ab24:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ab28:	mvn	r1, #0
    ab2c:	add	r0, r0, r1
    ab30:	str	r0, [fp, #-24]	; 0xffffffe8
    ab34:	ldr	r0, [fp, #-548]	; 0xfffffddc
    ab38:	lsr	r0, r0, #6
    ab3c:	str	r0, [fp, #-548]	; 0xfffffddc
    ab40:	b	aabc <rb_sha256_crypt_r+0xdd0>
    ab44:	b	ab48 <rb_sha256_crypt_r+0xe5c>
    ab48:	b	ab4c <rb_sha256_crypt_r+0xe60>
    ab4c:	ldrb	r0, [fp, #-29]	; 0xffffffe3
    ab50:	lsl	r0, r0, #16
    ab54:	ldrb	r1, [fp, #-49]	; 0xffffffcf
    ab58:	lsl	r1, r1, #8
    ab5c:	orr	r0, r0, r1
    ab60:	ldrb	r1, [fp, #-39]	; 0xffffffd9
    ab64:	orr	r0, r0, r1
    ab68:	str	r0, [fp, #-556]	; 0xfffffdd4
    ab6c:	movw	r0, #4
    ab70:	str	r0, [fp, #-560]	; 0xfffffdd0
    ab74:	ldr	r0, [fp, #-560]	; 0xfffffdd0
    ab78:	mvn	r1, #0
    ab7c:	add	r1, r0, r1
    ab80:	str	r1, [fp, #-560]	; 0xfffffdd0
    ab84:	cmp	r0, #0
    ab88:	movw	r0, #0
    ab8c:	str	r0, [fp, #-736]	; 0xfffffd20
    ab90:	ble	aba8 <rb_sha256_crypt_r+0xebc>
    ab94:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ab98:	cmp	r0, #0
    ab9c:	movw	r0, #0
    aba0:	movgt	r0, #1
    aba4:	str	r0, [fp, #-736]	; 0xfffffd20
    aba8:	ldr	r0, [fp, #-736]	; 0xfffffd20
    abac:	tst	r0, #1
    abb0:	beq	abfc <rb_sha256_crypt_r+0xf10>
    abb4:	ldr	r0, [pc, #928]	; af5c <rb_sha256_crypt_r+0x1270>
    abb8:	add	r0, pc, r0
    abbc:	ldr	r1, [fp, #-556]	; 0xfffffdd4
    abc0:	and	r1, r1, #63	; 0x3f
    abc4:	add	r0, r0, r1
    abc8:	ldrb	r0, [r0]
    abcc:	ldr	r1, [fp, #-448]	; 0xfffffe40
    abd0:	add	r2, r1, #1
    abd4:	str	r2, [fp, #-448]	; 0xfffffe40
    abd8:	strb	r0, [r1]
    abdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    abe0:	mvn	r1, #0
    abe4:	add	r0, r0, r1
    abe8:	str	r0, [fp, #-24]	; 0xffffffe8
    abec:	ldr	r0, [fp, #-556]	; 0xfffffdd4
    abf0:	lsr	r0, r0, #6
    abf4:	str	r0, [fp, #-556]	; 0xfffffdd4
    abf8:	b	ab74 <rb_sha256_crypt_r+0xe88>
    abfc:	b	ac00 <rb_sha256_crypt_r+0xf14>
    ac00:	b	ac04 <rb_sha256_crypt_r+0xf18>
    ac04:	ldrb	r0, [fp, #-38]	; 0xffffffda
    ac08:	lsl	r0, r0, #16
    ac0c:	ldrb	r1, [fp, #-28]	; 0xffffffe4
    ac10:	lsl	r1, r1, #8
    ac14:	orr	r0, r0, r1
    ac18:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    ac1c:	orr	r0, r0, r1
    ac20:	str	r0, [fp, #-564]	; 0xfffffdcc
    ac24:	movw	r0, #4
    ac28:	str	r0, [fp, #-568]	; 0xfffffdc8
    ac2c:	ldr	r0, [fp, #-568]	; 0xfffffdc8
    ac30:	mvn	r1, #0
    ac34:	add	r1, r0, r1
    ac38:	str	r1, [fp, #-568]	; 0xfffffdc8
    ac3c:	cmp	r0, #0
    ac40:	movw	r0, #0
    ac44:	str	r0, [fp, #-740]	; 0xfffffd1c
    ac48:	ble	ac60 <rb_sha256_crypt_r+0xf74>
    ac4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ac50:	cmp	r0, #0
    ac54:	movw	r0, #0
    ac58:	movgt	r0, #1
    ac5c:	str	r0, [fp, #-740]	; 0xfffffd1c
    ac60:	ldr	r0, [fp, #-740]	; 0xfffffd1c
    ac64:	tst	r0, #1
    ac68:	beq	acbc <rb_sha256_crypt_r+0xfd0>
    ac6c:	ldr	r0, [pc, #740]	; af58 <rb_sha256_crypt_r+0x126c>
    ac70:	add	r0, pc, r0
    ac74:	ldr	r1, [fp, #-564]	; 0xfffffdcc
    ac78:	and	r1, r1, #63	; 0x3f
    ac7c:	add	r0, r0, r1
    ac80:	ldrb	r0, [r0]
    ac84:	ldr	r1, [fp, #-448]	; 0xfffffe40
    ac88:	add	r2, r1, #1
    ac8c:	str	r2, [fp, #-448]	; 0xfffffe40
    ac90:	strb	r0, [r1]
    ac94:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ac98:	mvn	r1, #0
    ac9c:	add	r0, r0, r1
    aca0:	str	r0, [fp, #-24]	; 0xffffffe8
    aca4:	ldr	r0, [fp, #-564]	; 0xfffffdcc
    aca8:	lsr	r0, r0, #6
    acac:	str	r0, [fp, #-564]	; 0xfffffdcc
    acb0:	b	ac2c <rb_sha256_crypt_r+0xf40>
    acb4:	.word	0x00018730
    acb8:	.word	0x000186e0
    acbc:	b	acc0 <rb_sha256_crypt_r+0xfd4>
    acc0:	b	acc4 <rb_sha256_crypt_r+0xfd8>
    acc4:	ldrb	r0, [fp, #-47]	; 0xffffffd1
    acc8:	lsl	r0, r0, #16
    accc:	ldrb	r1, [fp, #-37]	; 0xffffffdb
    acd0:	lsl	r1, r1, #8
    acd4:	orr	r0, r0, r1
    acd8:	ldrb	r1, [fp, #-27]	; 0xffffffe5
    acdc:	orr	r0, r0, r1
    ace0:	str	r0, [fp, #-572]	; 0xfffffdc4
    ace4:	movw	r0, #4
    ace8:	str	r0, [fp, #-576]	; 0xfffffdc0
    acec:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    acf0:	mvn	r1, #0
    acf4:	add	r1, r0, r1
    acf8:	str	r1, [fp, #-576]	; 0xfffffdc0
    acfc:	cmp	r0, #0
    ad00:	movw	r0, #0
    ad04:	str	r0, [fp, #-744]	; 0xfffffd18
    ad08:	ble	ad20 <rb_sha256_crypt_r+0x1034>
    ad0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ad10:	cmp	r0, #0
    ad14:	movw	r0, #0
    ad18:	movgt	r0, #1
    ad1c:	str	r0, [fp, #-744]	; 0xfffffd18
    ad20:	ldr	r0, [fp, #-744]	; 0xfffffd18
    ad24:	tst	r0, #1
    ad28:	beq	ad78 <rb_sha256_crypt_r+0x108c>
    ad2c:	ldr	r0, [pc, #544]	; af54 <rb_sha256_crypt_r+0x1268>
    ad30:	add	r0, pc, r0
    ad34:	ldr	r1, [fp, #-572]	; 0xfffffdc4
    ad38:	and	r1, r1, #63	; 0x3f
    ad3c:	add	r0, r0, r1
    ad40:	ldrb	r0, [r0]
    ad44:	ldr	r1, [fp, #-448]	; 0xfffffe40
    ad48:	add	r2, r1, #1
    ad4c:	str	r2, [fp, #-448]	; 0xfffffe40
    ad50:	strb	r0, [r1]
    ad54:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ad58:	mvn	r1, #0
    ad5c:	add	r0, r0, r1
    ad60:	str	r0, [fp, #-24]	; 0xffffffe8
    ad64:	ldr	r0, [fp, #-572]	; 0xfffffdc4
    ad68:	lsr	r0, r0, #6
    ad6c:	str	r0, [fp, #-572]	; 0xfffffdc4
    ad70:	b	acec <rb_sha256_crypt_r+0x1000>
    ad74:	.word	0x3b9ac9ff
    ad78:	b	ad7c <rb_sha256_crypt_r+0x1090>
    ad7c:	b	ad80 <rb_sha256_crypt_r+0x1094>
    ad80:	ldrb	r0, [fp, #-25]	; 0xffffffe7
    ad84:	lsl	r0, r0, #8
    ad88:	orr	r0, r0, #0
    ad8c:	ldrb	r1, [fp, #-26]	; 0xffffffe6
    ad90:	orr	r0, r0, r1
    ad94:	str	r0, [fp, #-580]	; 0xfffffdbc
    ad98:	movw	r0, #3
    ad9c:	str	r0, [fp, #-584]	; 0xfffffdb8
    ada0:	ldr	r0, [fp, #-584]	; 0xfffffdb8
    ada4:	mvn	r1, #0
    ada8:	add	r1, r0, r1
    adac:	str	r1, [fp, #-584]	; 0xfffffdb8
    adb0:	cmp	r0, #0
    adb4:	movw	r0, #0
    adb8:	str	r0, [fp, #-748]	; 0xfffffd14
    adbc:	ble	add4 <rb_sha256_crypt_r+0x10e8>
    adc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    adc4:	cmp	r0, #0
    adc8:	movw	r0, #0
    adcc:	movgt	r0, #1
    add0:	str	r0, [fp, #-748]	; 0xfffffd14
    add4:	ldr	r0, [fp, #-748]	; 0xfffffd14
    add8:	tst	r0, #1
    addc:	beq	ae30 <rb_sha256_crypt_r+0x1144>
    ade0:	ldr	r0, [pc, #360]	; af50 <rb_sha256_crypt_r+0x1264>
    ade4:	add	r0, pc, r0
    ade8:	ldr	r1, [fp, #-580]	; 0xfffffdbc
    adec:	and	r1, r1, #63	; 0x3f
    adf0:	add	r0, r0, r1
    adf4:	ldrb	r0, [r0]
    adf8:	ldr	r1, [fp, #-448]	; 0xfffffe40
    adfc:	add	r2, r1, #1
    ae00:	str	r2, [fp, #-448]	; 0xfffffe40
    ae04:	strb	r0, [r1]
    ae08:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ae0c:	mvn	r1, #0
    ae10:	add	r0, r0, r1
    ae14:	str	r0, [fp, #-24]	; 0xffffffe8
    ae18:	ldr	r0, [fp, #-580]	; 0xfffffdbc
    ae1c:	lsr	r0, r0, #6
    ae20:	str	r0, [fp, #-580]	; 0xfffffdbc
    ae24:	b	ada0 <rb_sha256_crypt_r+0x10b4>
    ae28:	.word	0x00018a52
    ae2c:	.word	0x00018a3a
    ae30:	b	ae34 <rb_sha256_crypt_r+0x1148>
    ae34:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ae38:	cmp	r0, #0
    ae3c:	bgt	ae58 <rb_sha256_crypt_r+0x116c>
    ae40:	bl	56c8 <__errno_location@plt>
    ae44:	movw	r1, #34	; 0x22
    ae48:	str	r1, [r0]
    ae4c:	movw	r0, #0
    ae50:	str	r0, [fp, #-20]	; 0xffffffec
    ae54:	b	ae64 <rb_sha256_crypt_r+0x1178>
    ae58:	ldr	r0, [fp, #-448]	; 0xfffffe40
    ae5c:	movw	r1, #0
    ae60:	strb	r1, [r0]
    ae64:	sub	r0, fp, #260	; 0x104
    ae68:	bl	af7c <rb_sha256_init_ctx>
    ae6c:	sub	r1, fp, #56	; 0x38
    ae70:	sub	r0, fp, #260	; 0x104
    ae74:	bl	b2bc <rb_sha256_finish_ctx>
    ae78:	sub	r1, fp, #88	; 0x58
    ae7c:	str	r0, [fp, #-752]	; 0xfffffd10
    ae80:	mov	r0, r1
    ae84:	movw	r1, #0
    ae88:	and	r2, r1, #255	; 0xff
    ae8c:	str	r1, [fp, #-756]	; 0xfffffd0c
    ae90:	mov	r1, r2
    ae94:	movw	r2, #32
    ae98:	bl	4ff0 <memset@plt>
    ae9c:	ldr	r0, [fp, #-460]	; 0xfffffe34
    aea0:	ldr	r2, [fp, #-440]	; 0xfffffe48
    aea4:	ldr	r1, [fp, #-756]	; 0xfffffd0c
    aea8:	and	r1, r1, #255	; 0xff
    aeac:	bl	4ff0 <memset@plt>
    aeb0:	ldr	r0, [fp, #-464]	; 0xfffffe30
    aeb4:	ldr	r2, [fp, #-436]	; 0xfffffe4c
    aeb8:	ldr	r1, [fp, #-756]	; 0xfffffd0c
    aebc:	and	r1, r1, #255	; 0xff
    aec0:	bl	4ff0 <memset@plt>
    aec4:	sub	r0, fp, #260	; 0x104
    aec8:	ldr	r1, [fp, #-756]	; 0xfffffd0c
    aecc:	and	r1, r1, #255	; 0xff
    aed0:	movw	r2, #172	; 0xac
    aed4:	str	r2, [fp, #-760]	; 0xfffffd08
    aed8:	bl	4ff0 <memset@plt>
    aedc:	sub	r0, fp, #432	; 0x1b0
    aee0:	ldr	r1, [fp, #-756]	; 0xfffffd0c
    aee4:	and	r1, r1, #255	; 0xff
    aee8:	ldr	r2, [fp, #-760]	; 0xfffffd08
    aeec:	bl	4ff0 <memset@plt>
    aef0:	ldr	r0, [fp, #-452]	; 0xfffffe3c
    aef4:	movw	r1, #0
    aef8:	cmp	r0, r1
    aefc:	beq	af14 <rb_sha256_crypt_r+0x1228>
    af00:	ldr	r0, [fp, #-452]	; 0xfffffe3c
    af04:	ldr	r2, [fp, #-440]	; 0xfffffe48
    af08:	movw	r1, #0
    af0c:	and	r1, r1, #255	; 0xff
    af10:	bl	4ff0 <memset@plt>
    af14:	ldr	r0, [fp, #-456]	; 0xfffffe38
    af18:	movw	r1, #0
    af1c:	cmp	r0, r1
    af20:	beq	af38 <rb_sha256_crypt_r+0x124c>
    af24:	ldr	r0, [fp, #-456]	; 0xfffffe38
    af28:	ldr	r2, [fp, #-436]	; 0xfffffe4c
    af2c:	movw	r1, #0
    af30:	and	r1, r1, #255	; 0xff
    af34:	bl	4ff0 <memset@plt>
    af38:	ldr	r0, [fp, #-20]	; 0xffffffec
    af3c:	sub	sp, fp, #8
    af40:	pop	{r4, sl, fp, pc}
    af44:	.word	0x0001809c
    af48:	.word	0x00018438
    af4c:	.word	0x00017fd4
    af50:	.word	0x000172a4
    af54:	.word	0x00017358
    af58:	.word	0x00017418
    af5c:	.word	0x000174d0
    af60:	.word	0x00017588
    af64:	.word	0x00017640
    af68:	.word	0x000176f8
    af6c:	.word	0x000177b0
    af70:	.word	0x00017868
    af74:	.word	0x00017920
    af78:	.word	0x000179d8

0000af7c <rb_sha256_init_ctx>:
    af7c:	push	{r4, r5, r6, sl, fp, lr}
    af80:	add	fp, sp, #16
    af84:	sub	sp, sp, #4
    af88:	ldr	r1, [pc, #128]	; b010 <rb_sha256_init_ctx+0x94>
    af8c:	ldr	r2, [pc, #128]	; b014 <rb_sha256_init_ctx+0x98>
    af90:	ldr	r3, [pc, #128]	; b018 <rb_sha256_init_ctx+0x9c>
    af94:	ldr	ip, [pc, #128]	; b01c <rb_sha256_init_ctx+0xa0>
    af98:	ldr	lr, [pc, #128]	; b020 <rb_sha256_init_ctx+0xa4>
    af9c:	ldr	r4, [pc, #128]	; b024 <rb_sha256_init_ctx+0xa8>
    afa0:	ldr	r5, [pc, #128]	; b028 <rb_sha256_init_ctx+0xac>
    afa4:	ldr	r6, [pc, #128]	; b02c <rb_sha256_init_ctx+0xb0>
    afa8:	str	r0, [sp]
    afac:	ldr	r0, [sp]
    afb0:	str	r6, [r0]
    afb4:	ldr	r0, [sp]
    afb8:	str	r5, [r0, #4]
    afbc:	ldr	r0, [sp]
    afc0:	str	r4, [r0, #8]
    afc4:	ldr	r0, [sp]
    afc8:	str	lr, [r0, #12]
    afcc:	ldr	r0, [sp]
    afd0:	str	ip, [r0, #16]
    afd4:	ldr	r0, [sp]
    afd8:	str	r3, [r0, #20]
    afdc:	ldr	r0, [sp]
    afe0:	str	r2, [r0, #24]
    afe4:	ldr	r0, [sp]
    afe8:	str	r1, [r0, #28]
    afec:	ldr	r0, [sp]
    aff0:	movw	r1, #0
    aff4:	str	r1, [r0, #36]	; 0x24
    aff8:	ldr	r0, [sp]
    affc:	str	r1, [r0, #32]
    b000:	ldr	r0, [sp]
    b004:	str	r1, [r0, #40]	; 0x28
    b008:	sub	sp, fp, #16
    b00c:	pop	{r4, r5, r6, sl, fp, pc}
    b010:	.word	0x5be0cd19
    b014:	.word	0x1f83d9ab
    b018:	.word	0x9b05688c
    b01c:	.word	0x510e527f
    b020:	.word	0xa54ff53a
    b024:	.word	0x3c6ef372
    b028:	.word	0xbb67ae85
    b02c:	.word	0x6a09e667

0000b030 <rb_sha256_process_bytes>:
    b030:	push	{fp, lr}
    b034:	mov	fp, sp
    b038:	sub	sp, sp, #40	; 0x28
    b03c:	str	r0, [fp, #-4]
    b040:	str	r1, [fp, #-8]
    b044:	str	r2, [fp, #-12]
    b048:	ldr	r0, [fp, #-12]
    b04c:	ldr	r0, [r0, #40]	; 0x28
    b050:	cmp	r0, #0
    b054:	beq	b164 <rb_sha256_process_bytes+0x134>
    b058:	ldr	r0, [fp, #-12]
    b05c:	ldr	r0, [r0, #40]	; 0x28
    b060:	str	r0, [fp, #-16]
    b064:	ldr	r0, [fp, #-16]
    b068:	movw	r1, #128	; 0x80
    b06c:	sub	r0, r1, r0
    b070:	ldr	r1, [fp, #-8]
    b074:	cmp	r0, r1
    b078:	bls	b088 <rb_sha256_process_bytes+0x58>
    b07c:	ldr	r0, [fp, #-8]
    b080:	str	r0, [sp, #12]
    b084:	b	b098 <rb_sha256_process_bytes+0x68>
    b088:	ldr	r0, [fp, #-16]
    b08c:	movw	r1, #128	; 0x80
    b090:	sub	r0, r1, r0
    b094:	str	r0, [sp, #12]
    b098:	ldr	r0, [sp, #12]
    b09c:	str	r0, [sp, #20]
    b0a0:	ldr	r0, [fp, #-12]
    b0a4:	add	r0, r0, #44	; 0x2c
    b0a8:	ldr	r1, [fp, #-16]
    b0ac:	add	r0, r0, r1
    b0b0:	ldr	r1, [fp, #-4]
    b0b4:	ldr	r2, [sp, #20]
    b0b8:	bl	51dc <memcpy@plt>
    b0bc:	ldr	r0, [sp, #20]
    b0c0:	ldr	r1, [fp, #-12]
    b0c4:	ldr	r2, [r1, #40]	; 0x28
    b0c8:	add	r0, r2, r0
    b0cc:	str	r0, [r1, #40]	; 0x28
    b0d0:	ldr	r0, [fp, #-12]
    b0d4:	ldr	r0, [r0, #40]	; 0x28
    b0d8:	cmp	r0, #64	; 0x40
    b0dc:	bls	b144 <rb_sha256_process_bytes+0x114>
    b0e0:	ldr	r0, [fp, #-12]
    b0e4:	add	r0, r0, #44	; 0x2c
    b0e8:	ldr	r1, [fp, #-12]
    b0ec:	ldr	r1, [r1, #40]	; 0x28
    b0f0:	mvn	r2, #63	; 0x3f
    b0f4:	and	r1, r1, r2
    b0f8:	ldr	r2, [fp, #-12]
    b0fc:	bl	b528 <rb_sha256_process_block>
    b100:	ldr	r0, [fp, #-12]
    b104:	ldr	r1, [r0, #40]	; 0x28
    b108:	and	r1, r1, #63	; 0x3f
    b10c:	str	r1, [r0, #40]	; 0x28
    b110:	ldr	r0, [fp, #-12]
    b114:	add	r0, r0, #44	; 0x2c
    b118:	ldr	r1, [fp, #-12]
    b11c:	add	r1, r1, #44	; 0x2c
    b120:	ldr	r2, [fp, #-16]
    b124:	ldr	r3, [sp, #20]
    b128:	add	r2, r2, r3
    b12c:	mvn	r3, #63	; 0x3f
    b130:	and	r2, r2, r3
    b134:	add	r1, r1, r2
    b138:	ldr	r2, [fp, #-12]
    b13c:	ldr	r2, [r2, #40]	; 0x28
    b140:	bl	51dc <memcpy@plt>
    b144:	ldr	r0, [fp, #-4]
    b148:	ldr	r1, [sp, #20]
    b14c:	add	r0, r0, r1
    b150:	str	r0, [fp, #-4]
    b154:	ldr	r0, [sp, #20]
    b158:	ldr	r1, [fp, #-8]
    b15c:	sub	r0, r1, r0
    b160:	str	r0, [fp, #-8]
    b164:	ldr	r0, [fp, #-8]
    b168:	cmp	r0, #64	; 0x40
    b16c:	bcc	b21c <rb_sha256_process_bytes+0x1ec>
    b170:	ldr	r0, [fp, #-4]
    b174:	and	r0, r0, #3
    b178:	cmp	r0, #0
    b17c:	beq	b1dc <rb_sha256_process_bytes+0x1ac>
    b180:	b	b184 <rb_sha256_process_bytes+0x154>
    b184:	ldr	r0, [fp, #-8]
    b188:	cmp	r0, #64	; 0x40
    b18c:	bls	b1d8 <rb_sha256_process_bytes+0x1a8>
    b190:	ldr	r0, [fp, #-12]
    b194:	add	r0, r0, #44	; 0x2c
    b198:	ldr	r1, [fp, #-4]
    b19c:	str	r0, [sp, #8]
    b1a0:	movw	r2, #64	; 0x40
    b1a4:	str	r2, [sp, #4]
    b1a8:	bl	51dc <memcpy@plt>
    b1ac:	ldr	r2, [fp, #-12]
    b1b0:	ldr	r0, [sp, #8]
    b1b4:	ldr	r1, [sp, #4]
    b1b8:	bl	b528 <rb_sha256_process_block>
    b1bc:	ldr	r0, [fp, #-4]
    b1c0:	add	r0, r0, #64	; 0x40
    b1c4:	str	r0, [fp, #-4]
    b1c8:	ldr	r0, [fp, #-8]
    b1cc:	sub	r0, r0, #64	; 0x40
    b1d0:	str	r0, [fp, #-8]
    b1d4:	b	b184 <rb_sha256_process_bytes+0x154>
    b1d8:	b	b218 <rb_sha256_process_bytes+0x1e8>
    b1dc:	ldr	r0, [fp, #-4]
    b1e0:	ldr	r1, [fp, #-8]
    b1e4:	mvn	r2, #63	; 0x3f
    b1e8:	and	r1, r1, r2
    b1ec:	ldr	r2, [fp, #-12]
    b1f0:	bl	b528 <rb_sha256_process_block>
    b1f4:	ldr	r0, [fp, #-4]
    b1f8:	ldr	r1, [fp, #-8]
    b1fc:	mvn	r2, #63	; 0x3f
    b200:	and	r1, r1, r2
    b204:	add	r0, r0, r1
    b208:	str	r0, [fp, #-4]
    b20c:	ldr	r0, [fp, #-8]
    b210:	and	r0, r0, #63	; 0x3f
    b214:	str	r0, [fp, #-8]
    b218:	b	b21c <rb_sha256_process_bytes+0x1ec>
    b21c:	ldr	r0, [fp, #-8]
    b220:	cmp	r0, #0
    b224:	bls	b2b4 <rb_sha256_process_bytes+0x284>
    b228:	ldr	r0, [fp, #-12]
    b22c:	ldr	r0, [r0, #40]	; 0x28
    b230:	str	r0, [sp, #16]
    b234:	ldr	r0, [fp, #-12]
    b238:	add	r0, r0, #44	; 0x2c
    b23c:	ldr	r1, [sp, #16]
    b240:	add	r0, r0, r1
    b244:	ldr	r1, [fp, #-4]
    b248:	ldr	r2, [fp, #-8]
    b24c:	bl	51dc <memcpy@plt>
    b250:	ldr	r0, [fp, #-8]
    b254:	ldr	r1, [sp, #16]
    b258:	add	r0, r1, r0
    b25c:	str	r0, [sp, #16]
    b260:	ldr	r0, [sp, #16]
    b264:	cmp	r0, #64	; 0x40
    b268:	bcc	b2a8 <rb_sha256_process_bytes+0x278>
    b26c:	ldr	r0, [fp, #-12]
    b270:	add	r0, r0, #44	; 0x2c
    b274:	ldr	r2, [fp, #-12]
    b278:	movw	r1, #64	; 0x40
    b27c:	bl	b528 <rb_sha256_process_block>
    b280:	ldr	r0, [sp, #16]
    b284:	sub	r0, r0, #64	; 0x40
    b288:	str	r0, [sp, #16]
    b28c:	ldr	r0, [fp, #-12]
    b290:	add	r0, r0, #44	; 0x2c
    b294:	ldr	r1, [fp, #-12]
    b298:	add	r1, r1, #44	; 0x2c
    b29c:	add	r1, r1, #64	; 0x40
    b2a0:	ldr	r2, [sp, #16]
    b2a4:	bl	51dc <memcpy@plt>
    b2a8:	ldr	r0, [sp, #16]
    b2ac:	ldr	r1, [fp, #-12]
    b2b0:	str	r0, [r1, #40]	; 0x28
    b2b4:	mov	sp, fp
    b2b8:	pop	{fp, pc}

0000b2bc <rb_sha256_finish_ctx>:
    b2bc:	push	{fp, lr}
    b2c0:	mov	fp, sp
    b2c4:	sub	sp, sp, #32
    b2c8:	str	r0, [fp, #-4]
    b2cc:	str	r1, [fp, #-8]
    b2d0:	ldr	r0, [fp, #-4]
    b2d4:	ldr	r0, [r0, #40]	; 0x28
    b2d8:	str	r0, [fp, #-12]
    b2dc:	ldr	r0, [fp, #-12]
    b2e0:	ldr	r1, [fp, #-4]
    b2e4:	ldr	r2, [r1, #32]
    b2e8:	add	r0, r2, r0
    b2ec:	str	r0, [r1, #32]
    b2f0:	ldr	r0, [fp, #-4]
    b2f4:	ldr	r0, [r0, #32]
    b2f8:	ldr	r1, [fp, #-12]
    b2fc:	cmp	r0, r1
    b300:	bcs	b314 <rb_sha256_finish_ctx+0x58>
    b304:	ldr	r0, [fp, #-4]
    b308:	ldr	r1, [r0, #36]	; 0x24
    b30c:	add	r1, r1, #1
    b310:	str	r1, [r0, #36]	; 0x24
    b314:	ldr	r0, [fp, #-12]
    b318:	cmp	r0, #56	; 0x38
    b31c:	bcc	b334 <rb_sha256_finish_ctx+0x78>
    b320:	ldr	r0, [fp, #-12]
    b324:	movw	r1, #120	; 0x78
    b328:	sub	r0, r1, r0
    b32c:	str	r0, [sp, #4]
    b330:	b	b344 <rb_sha256_finish_ctx+0x88>
    b334:	ldr	r0, [fp, #-12]
    b338:	movw	r1, #56	; 0x38
    b33c:	sub	r0, r1, r0
    b340:	str	r0, [sp, #4]
    b344:	ldr	r0, [sp, #4]
    b348:	ldr	r1, [pc, #468]	; b524 <rb_sha256_finish_ctx+0x268>
    b34c:	add	r1, pc, r1
    b350:	str	r0, [sp, #12]
    b354:	ldr	r0, [fp, #-4]
    b358:	add	r0, r0, #44	; 0x2c
    b35c:	ldr	r2, [fp, #-12]
    b360:	add	r0, r0, r2
    b364:	ldr	r2, [sp, #12]
    b368:	bl	51dc <memcpy@plt>
    b36c:	ldr	r0, [fp, #-4]
    b370:	add	r0, r0, #44	; 0x2c
    b374:	ldr	r1, [fp, #-12]
    b378:	ldr	r2, [sp, #12]
    b37c:	add	r1, r1, r2
    b380:	add	r1, r1, #4
    b384:	add	r0, r0, r1
    b388:	str	r0, [sp, #16]
    b38c:	ldr	r0, [fp, #-4]
    b390:	ldr	r0, [r0, #32]
    b394:	lsl	r0, r0, #3
    b398:	lsl	r0, r0, #24
    b39c:	ldr	r1, [fp, #-4]
    b3a0:	ldr	r1, [r1, #32]
    b3a4:	lsl	r1, r1, #3
    b3a8:	and	r1, r1, #65280	; 0xff00
    b3ac:	lsl	r1, r1, #8
    b3b0:	orr	r0, r0, r1
    b3b4:	ldr	r1, [fp, #-4]
    b3b8:	ldr	r1, [r1, #32]
    b3bc:	lsl	r1, r1, #3
    b3c0:	lsr	r1, r1, #8
    b3c4:	and	r1, r1, #65280	; 0xff00
    b3c8:	orr	r0, r0, r1
    b3cc:	ldr	r1, [fp, #-4]
    b3d0:	ldr	r1, [r1, #32]
    b3d4:	lsl	r1, r1, #3
    b3d8:	lsr	r1, r1, #24
    b3dc:	orr	r0, r0, r1
    b3e0:	ldr	r1, [sp, #16]
    b3e4:	str	r0, [r1]
    b3e8:	ldr	r0, [fp, #-4]
    b3ec:	add	r0, r0, #44	; 0x2c
    b3f0:	ldr	r1, [fp, #-12]
    b3f4:	ldr	r2, [sp, #12]
    b3f8:	add	r1, r1, r2
    b3fc:	add	r0, r0, r1
    b400:	str	r0, [sp, #16]
    b404:	ldr	r0, [fp, #-4]
    b408:	ldr	r0, [r0, #36]	; 0x24
    b40c:	lsl	r0, r0, #3
    b410:	ldr	r1, [fp, #-4]
    b414:	ldr	r1, [r1, #32]
    b418:	lsr	r1, r1, #29
    b41c:	orr	r0, r0, r1
    b420:	lsl	r0, r0, #24
    b424:	ldr	r1, [fp, #-4]
    b428:	ldr	r1, [r1, #36]	; 0x24
    b42c:	lsl	r1, r1, #3
    b430:	ldr	r2, [fp, #-4]
    b434:	ldr	r2, [r2, #32]
    b438:	lsr	r2, r2, #29
    b43c:	orr	r1, r1, r2
    b440:	and	r1, r1, #65280	; 0xff00
    b444:	lsl	r1, r1, #8
    b448:	orr	r0, r0, r1
    b44c:	ldr	r1, [fp, #-4]
    b450:	ldr	r1, [r1, #36]	; 0x24
    b454:	lsl	r1, r1, #3
    b458:	ldr	r2, [fp, #-4]
    b45c:	ldr	r2, [r2, #32]
    b460:	lsr	r2, r2, #29
    b464:	orr	r1, r1, r2
    b468:	lsr	r1, r1, #8
    b46c:	and	r1, r1, #65280	; 0xff00
    b470:	orr	r0, r0, r1
    b474:	ldr	r1, [fp, #-4]
    b478:	ldr	r1, [r1, #36]	; 0x24
    b47c:	lsl	r1, r1, #3
    b480:	ldr	r2, [fp, #-4]
    b484:	ldr	r2, [r2, #32]
    b488:	lsr	r2, r2, #29
    b48c:	orr	r1, r1, r2
    b490:	lsr	r1, r1, #24
    b494:	orr	r0, r0, r1
    b498:	ldr	r1, [sp, #16]
    b49c:	str	r0, [r1]
    b4a0:	ldr	r0, [fp, #-4]
    b4a4:	add	r0, r0, #44	; 0x2c
    b4a8:	ldr	r1, [fp, #-12]
    b4ac:	ldr	r2, [sp, #12]
    b4b0:	add	r1, r1, r2
    b4b4:	add	r1, r1, #8
    b4b8:	ldr	r2, [fp, #-4]
    b4bc:	bl	b528 <rb_sha256_process_block>
    b4c0:	movw	r0, #0
    b4c4:	str	r0, [sp, #8]
    b4c8:	ldr	r0, [sp, #8]
    b4cc:	cmp	r0, #8
    b4d0:	bcs	b518 <rb_sha256_finish_ctx+0x25c>
    b4d4:	ldr	r0, [fp, #-4]
    b4d8:	ldr	r1, [sp, #8]
    b4dc:	ldr	r0, [r0, r1, lsl #2]
    b4e0:	lsl	r2, r0, #24
    b4e4:	and	r3, r0, #65280	; 0xff00
    b4e8:	orr	r2, r2, r3, lsl #8
    b4ec:	mov	r3, #65280	; 0xff00
    b4f0:	and	r3, r3, r0, lsr #8
    b4f4:	orr	r2, r2, r3
    b4f8:	orr	r0, r2, r0, lsr #24
    b4fc:	ldr	r2, [fp, #-8]
    b500:	add	r1, r2, r1, lsl #2
    b504:	str	r0, [r1]
    b508:	ldr	r0, [sp, #8]
    b50c:	add	r0, r0, #1
    b510:	str	r0, [sp, #8]
    b514:	b	b4c8 <rb_sha256_finish_ctx+0x20c>
    b518:	ldr	r0, [fp, #-8]
    b51c:	mov	sp, fp
    b520:	pop	{fp, pc}
    b524:	.word	0x000171ec

0000b528 <rb_sha256_process_block>:
    b528:	push	{r4, r5, fp, lr}
    b52c:	add	fp, sp, #8
    b530:	sub	sp, sp, #352	; 0x160
    b534:	str	r0, [fp, #-12]
    b538:	str	r1, [fp, #-16]
    b53c:	str	r2, [fp, #-20]	; 0xffffffec
    b540:	ldr	r0, [fp, #-12]
    b544:	str	r0, [fp, #-24]	; 0xffffffe8
    b548:	ldr	r0, [fp, #-16]
    b54c:	lsr	r0, r0, #2
    b550:	str	r0, [fp, #-28]	; 0xffffffe4
    b554:	ldr	r0, [fp, #-20]	; 0xffffffec
    b558:	ldr	r0, [r0]
    b55c:	str	r0, [fp, #-32]	; 0xffffffe0
    b560:	ldr	r0, [fp, #-20]	; 0xffffffec
    b564:	ldr	r0, [r0, #4]
    b568:	str	r0, [fp, #-36]	; 0xffffffdc
    b56c:	ldr	r0, [fp, #-20]	; 0xffffffec
    b570:	ldr	r0, [r0, #8]
    b574:	str	r0, [fp, #-40]	; 0xffffffd8
    b578:	ldr	r0, [fp, #-20]	; 0xffffffec
    b57c:	ldr	r0, [r0, #12]
    b580:	str	r0, [fp, #-44]	; 0xffffffd4
    b584:	ldr	r0, [fp, #-20]	; 0xffffffec
    b588:	ldr	r0, [r0, #16]
    b58c:	str	r0, [fp, #-48]	; 0xffffffd0
    b590:	ldr	r0, [fp, #-20]	; 0xffffffec
    b594:	ldr	r0, [r0, #20]
    b598:	str	r0, [fp, #-52]	; 0xffffffcc
    b59c:	ldr	r0, [fp, #-20]	; 0xffffffec
    b5a0:	ldr	r0, [r0, #24]
    b5a4:	str	r0, [fp, #-56]	; 0xffffffc8
    b5a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    b5ac:	ldr	r0, [r0, #28]
    b5b0:	str	r0, [fp, #-60]	; 0xffffffc4
    b5b4:	ldr	r0, [fp, #-16]
    b5b8:	ldr	r1, [fp, #-20]	; 0xffffffec
    b5bc:	ldr	r2, [r1, #32]
    b5c0:	add	r0, r2, r0
    b5c4:	str	r0, [r1, #32]
    b5c8:	ldr	r0, [fp, #-20]	; 0xffffffec
    b5cc:	ldr	r0, [r0, #32]
    b5d0:	ldr	r1, [fp, #-16]
    b5d4:	cmp	r0, r1
    b5d8:	bcs	b5ec <rb_sha256_process_block+0xc4>
    b5dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    b5e0:	ldr	r1, [r0, #36]	; 0x24
    b5e4:	add	r1, r1, #1
    b5e8:	str	r1, [r0, #36]	; 0x24
    b5ec:	b	b5f0 <rb_sha256_process_block+0xc8>
    b5f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b5f4:	cmp	r0, #0
    b5f8:	bls	b8dc <rb_sha256_process_block+0x3b4>
    b5fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b600:	str	r0, [sp, #40]	; 0x28
    b604:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b608:	str	r0, [sp, #36]	; 0x24
    b60c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b610:	str	r0, [sp, #32]
    b614:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b618:	str	r0, [sp, #28]
    b61c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b620:	str	r0, [sp, #24]
    b624:	ldr	r0, [fp, #-52]	; 0xffffffcc
    b628:	str	r0, [sp, #20]
    b62c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    b630:	str	r0, [sp, #16]
    b634:	ldr	r0, [fp, #-60]	; 0xffffffc4
    b638:	str	r0, [sp, #12]
    b63c:	movw	r0, #0
    b640:	str	r0, [sp, #8]
    b644:	ldr	r0, [sp, #8]
    b648:	cmp	r0, #16
    b64c:	bcs	b6a0 <rb_sha256_process_block+0x178>
    b650:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b654:	ldr	r0, [r0]
    b658:	lsl	r1, r0, #24
    b65c:	and	r2, r0, #65280	; 0xff00
    b660:	orr	r1, r1, r2, lsl #8
    b664:	mov	r2, #65280	; 0xff00
    b668:	and	r2, r2, r0, lsr #8
    b66c:	orr	r1, r1, r2
    b670:	orr	r0, r1, r0, lsr #24
    b674:	ldr	r1, [sp, #8]
    b678:	add	r2, sp, #44	; 0x2c
    b67c:	add	r1, r2, r1, lsl #2
    b680:	str	r0, [r1]
    b684:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b688:	add	r0, r0, #4
    b68c:	str	r0, [fp, #-24]	; 0xffffffe8
    b690:	ldr	r0, [sp, #8]
    b694:	add	r0, r0, #1
    b698:	str	r0, [sp, #8]
    b69c:	b	b644 <rb_sha256_process_block+0x11c>
    b6a0:	movw	r0, #16
    b6a4:	str	r0, [sp, #8]
    b6a8:	ldr	r0, [sp, #8]
    b6ac:	cmp	r0, #64	; 0x40
    b6b0:	bcs	b708 <rb_sha256_process_block+0x1e0>
    b6b4:	ldr	r0, [sp, #8]
    b6b8:	add	r1, sp, #44	; 0x2c
    b6bc:	add	r0, r1, r0, lsl #2
    b6c0:	ldr	r1, [r0, #-64]	; 0xffffffc0
    b6c4:	ldr	r2, [r0, #-60]	; 0xffffffc4
    b6c8:	ldr	r3, [r0, #-28]	; 0xffffffe4
    b6cc:	ldr	ip, [r0, #-8]
    b6d0:	ror	lr, ip, #17
    b6d4:	eor	lr, lr, ip, ror #19
    b6d8:	eor	ip, lr, ip, lsr #10
    b6dc:	add	r3, ip, r3
    b6e0:	ror	ip, r2, #7
    b6e4:	eor	ip, ip, r2, ror #18
    b6e8:	eor	r2, ip, r2, lsr #3
    b6ec:	add	r2, r3, r2
    b6f0:	add	r1, r2, r1
    b6f4:	str	r1, [r0]
    b6f8:	ldr	r0, [sp, #8]
    b6fc:	add	r0, r0, #1
    b700:	str	r0, [sp, #8]
    b704:	b	b6a8 <rb_sha256_process_block+0x180>
    b708:	movw	r0, #0
    b70c:	str	r0, [sp, #8]
    b710:	ldr	r0, [sp, #8]
    b714:	cmp	r0, #64	; 0x40
    b718:	bcs	b84c <rb_sha256_process_block+0x324>
    b71c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    b720:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b724:	ror	r2, r1, #6
    b728:	eor	r2, r2, r1, ror #11
    b72c:	eor	r2, r2, r1, ror #25
    b730:	add	r0, r0, r2
    b734:	ldr	r2, [fp, #-52]	; 0xffffffcc
    b738:	and	r2, r1, r2
    b73c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b740:	bic	r1, r3, r1
    b744:	eor	r1, r2, r1
    b748:	add	r0, r0, r1
    b74c:	ldr	r1, [sp, #8]
    b750:	ldr	r2, [pc, #492]	; b944 <rb_sha256_process_block+0x41c>
    b754:	add	r2, pc, r2
    b758:	ldr	r2, [r2, r1, lsl #2]
    b75c:	add	r0, r0, r2
    b760:	add	r2, sp, #44	; 0x2c
    b764:	add	r1, r2, r1, lsl #2
    b768:	ldr	r1, [r1]
    b76c:	add	r0, r0, r1
    b770:	str	r0, [sp, #4]
    b774:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b778:	lsr	r0, r0, #2
    b77c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b780:	lsl	r1, r1, #30
    b784:	orr	r0, r0, r1
    b788:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b78c:	lsr	r1, r1, #13
    b790:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b794:	lsl	r2, r2, #19
    b798:	orr	r1, r1, r2
    b79c:	eor	r0, r0, r1
    b7a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b7a4:	lsr	r1, r1, #22
    b7a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b7ac:	lsl	r2, r2, #10
    b7b0:	orr	r1, r1, r2
    b7b4:	eor	r0, r0, r1
    b7b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b7bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    b7c0:	and	r1, r1, r2
    b7c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b7c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b7cc:	and	r2, r2, r3
    b7d0:	eor	r1, r1, r2
    b7d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    b7d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b7dc:	and	r2, r2, r3
    b7e0:	eor	r1, r1, r2
    b7e4:	add	r0, r0, r1
    b7e8:	str	r0, [sp]
    b7ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
    b7f0:	str	r0, [fp, #-60]	; 0xffffffc4
    b7f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    b7f8:	str	r0, [fp, #-56]	; 0xffffffc8
    b7fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b800:	str	r0, [fp, #-52]	; 0xffffffcc
    b804:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b808:	ldr	r1, [sp, #4]
    b80c:	add	r0, r0, r1
    b810:	str	r0, [fp, #-48]	; 0xffffffd0
    b814:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b818:	str	r0, [fp, #-44]	; 0xffffffd4
    b81c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b820:	str	r0, [fp, #-40]	; 0xffffffd8
    b824:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b828:	str	r0, [fp, #-36]	; 0xffffffdc
    b82c:	ldr	r0, [sp, #4]
    b830:	ldr	r1, [sp]
    b834:	add	r0, r0, r1
    b838:	str	r0, [fp, #-32]	; 0xffffffe0
    b83c:	ldr	r0, [sp, #8]
    b840:	add	r0, r0, #1
    b844:	str	r0, [sp, #8]
    b848:	b	b710 <rb_sha256_process_block+0x1e8>
    b84c:	ldr	r0, [sp, #40]	; 0x28
    b850:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b854:	add	r0, r1, r0
    b858:	str	r0, [fp, #-32]	; 0xffffffe0
    b85c:	ldr	r0, [sp, #36]	; 0x24
    b860:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b864:	add	r0, r1, r0
    b868:	str	r0, [fp, #-36]	; 0xffffffdc
    b86c:	ldr	r0, [sp, #32]
    b870:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b874:	add	r0, r1, r0
    b878:	str	r0, [fp, #-40]	; 0xffffffd8
    b87c:	ldr	r0, [sp, #28]
    b880:	ldr	r1, [fp, #-44]	; 0xffffffd4
    b884:	add	r0, r1, r0
    b888:	str	r0, [fp, #-44]	; 0xffffffd4
    b88c:	ldr	r0, [sp, #24]
    b890:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b894:	add	r0, r1, r0
    b898:	str	r0, [fp, #-48]	; 0xffffffd0
    b89c:	ldr	r0, [sp, #20]
    b8a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    b8a4:	add	r0, r1, r0
    b8a8:	str	r0, [fp, #-52]	; 0xffffffcc
    b8ac:	ldr	r0, [sp, #16]
    b8b0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    b8b4:	add	r0, r1, r0
    b8b8:	str	r0, [fp, #-56]	; 0xffffffc8
    b8bc:	ldr	r0, [sp, #12]
    b8c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    b8c4:	add	r0, r1, r0
    b8c8:	str	r0, [fp, #-60]	; 0xffffffc4
    b8cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b8d0:	sub	r0, r0, #16
    b8d4:	str	r0, [fp, #-28]	; 0xffffffe4
    b8d8:	b	b5f0 <rb_sha256_process_block+0xc8>
    b8dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b8e0:	ldr	r1, [fp, #-20]	; 0xffffffec
    b8e4:	str	r0, [r1]
    b8e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b8ec:	ldr	r1, [fp, #-20]	; 0xffffffec
    b8f0:	str	r0, [r1, #4]
    b8f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b8f8:	ldr	r1, [fp, #-20]	; 0xffffffec
    b8fc:	str	r0, [r1, #8]
    b900:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b904:	ldr	r1, [fp, #-20]	; 0xffffffec
    b908:	str	r0, [r1, #12]
    b90c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b910:	ldr	r1, [fp, #-20]	; 0xffffffec
    b914:	str	r0, [r1, #16]
    b918:	ldr	r0, [fp, #-52]	; 0xffffffcc
    b91c:	ldr	r1, [fp, #-20]	; 0xffffffec
    b920:	str	r0, [r1, #20]
    b924:	ldr	r0, [fp, #-56]	; 0xffffffc8
    b928:	ldr	r1, [fp, #-20]	; 0xffffffec
    b92c:	str	r0, [r1, #24]
    b930:	ldr	r0, [fp, #-60]	; 0xffffffc4
    b934:	ldr	r1, [fp, #-20]	; 0xffffffec
    b938:	str	r0, [r1, #28]
    b93c:	sub	sp, fp, #8
    b940:	pop	{r4, r5, fp, pc}
    b944:	.word	0x00016ce4

0000b948 <rb_sha512_crypt_r>:
    b948:	push	{r4, sl, fp, lr}
    b94c:	add	fp, sp, #8
    b950:	sub	sp, sp, #1312	; 0x520
    b954:	ldr	ip, [pc, #3964]	; c8d8 <rb_sha512_crypt_r+0xf90>
    b958:	add	ip, pc, ip
    b95c:	str	r0, [fp, #-12]
    b960:	str	r1, [fp, #-16]
    b964:	str	r2, [fp, #-20]	; 0xffffffec
    b968:	str	r3, [fp, #-24]	; 0xffffffe8
    b96c:	movw	r0, #0
    b970:	str	r0, [fp, #-860]	; 0xfffffca4
    b974:	str	r0, [fp, #-864]	; 0xfffffca0
    b978:	movw	r1, #5000	; 0x1388
    b97c:	str	r1, [fp, #-876]	; 0xfffffc94
    b980:	str	r0, [fp, #-880]	; 0xfffffc90
    b984:	ldr	r1, [fp, #-16]
    b988:	mov	r0, ip
    b98c:	movw	r2, #3
    b990:	bl	55e4 <strncmp@plt>
    b994:	cmp	r0, #0
    b998:	bne	b9a8 <rb_sha512_crypt_r+0x60>
    b99c:	ldr	r0, [fp, #-16]
    b9a0:	add	r0, r0, #3
    b9a4:	str	r0, [fp, #-16]
    b9a8:	ldr	r0, [pc, #4068]	; c994 <rb_sha512_crypt_r+0x104c>
    b9ac:	add	r1, pc, r0
    b9b0:	ldr	r0, [fp, #-16]
    b9b4:	movw	r2, #7
    b9b8:	bl	55e4 <strncmp@plt>
    b9bc:	cmp	r0, #0
    b9c0:	bne	ba90 <rb_sha512_crypt_r+0x148>
    b9c4:	ldr	r0, [fp, #-16]
    b9c8:	add	r0, r0, #8
    b9cc:	mvn	r1, #0
    b9d0:	add	r0, r0, r1
    b9d4:	str	r0, [fp, #-884]	; 0xfffffc8c
    b9d8:	ldr	r0, [fp, #-884]	; 0xfffffc8c
    b9dc:	sub	r1, fp, #888	; 0x378
    b9e0:	movw	r2, #10
    b9e4:	bl	51d0 <strtoul@plt>
    b9e8:	str	r0, [fp, #-892]	; 0xfffffc84
    b9ec:	ldr	r0, [fp, #-888]	; 0xfffffc88
    b9f0:	ldrb	r0, [r0]
    b9f4:	cmp	r0, #36	; 0x24
    b9f8:	bne	ba8c <rb_sha512_crypt_r+0x144>
    b9fc:	ldr	r0, [pc, #3988]	; c998 <rb_sha512_crypt_r+0x1050>
    ba00:	ldr	r1, [fp, #-888]	; 0xfffffc88
    ba04:	add	r1, r1, #1
    ba08:	str	r1, [fp, #-16]
    ba0c:	ldr	r1, [fp, #-892]	; 0xfffffc84
    ba10:	cmp	r1, r0
    ba14:	bcs	ba24 <rb_sha512_crypt_r+0xdc>
    ba18:	ldr	r0, [fp, #-892]	; 0xfffffc84
    ba1c:	str	r0, [fp, #-1084]	; 0xfffffbc4
    ba20:	b	ba30 <rb_sha512_crypt_r+0xe8>
    ba24:	ldr	r0, [pc, #3948]	; c998 <rb_sha512_crypt_r+0x1050>
    ba28:	str	r0, [fp, #-1084]	; 0xfffffbc4
    ba2c:	b	ba30 <rb_sha512_crypt_r+0xe8>
    ba30:	ldr	r0, [fp, #-1084]	; 0xfffffbc4
    ba34:	movw	r1, #1000	; 0x3e8
    ba38:	cmp	r1, r0
    ba3c:	bls	ba4c <rb_sha512_crypt_r+0x104>
    ba40:	movw	r0, #1000	; 0x3e8
    ba44:	str	r0, [fp, #-1088]	; 0xfffffbc0
    ba48:	b	ba7c <rb_sha512_crypt_r+0x134>
    ba4c:	ldr	r0, [pc, #3908]	; c998 <rb_sha512_crypt_r+0x1050>
    ba50:	ldr	r1, [fp, #-892]	; 0xfffffc84
    ba54:	cmp	r1, r0
    ba58:	bcs	ba68 <rb_sha512_crypt_r+0x120>
    ba5c:	ldr	r0, [fp, #-892]	; 0xfffffc84
    ba60:	str	r0, [fp, #-1092]	; 0xfffffbbc
    ba64:	b	ba74 <rb_sha512_crypt_r+0x12c>
    ba68:	ldr	r0, [pc, #3880]	; c998 <rb_sha512_crypt_r+0x1050>
    ba6c:	str	r0, [fp, #-1092]	; 0xfffffbbc
    ba70:	b	ba74 <rb_sha512_crypt_r+0x12c>
    ba74:	ldr	r0, [fp, #-1092]	; 0xfffffbbc
    ba78:	str	r0, [fp, #-1088]	; 0xfffffbc0
    ba7c:	ldr	r0, [fp, #-1088]	; 0xfffffbc0
    ba80:	str	r0, [fp, #-876]	; 0xfffffc94
    ba84:	movw	r0, #1
    ba88:	str	r0, [fp, #-880]	; 0xfffffc90
    ba8c:	b	ba90 <rb_sha512_crypt_r+0x148>
    ba90:	ldr	r0, [pc, #4028]	; ca54 <rb_sha512_crypt_r+0x110c>
    ba94:	add	r1, pc, r0
    ba98:	ldr	r0, [fp, #-16]
    ba9c:	bl	55b4 <strcspn@plt>
    baa0:	cmp	r0, #16
    baa4:	bcs	bac0 <rb_sha512_crypt_r+0x178>
    baa8:	ldr	r0, [pc, #4008]	; ca58 <rb_sha512_crypt_r+0x1110>
    baac:	add	r1, pc, r0
    bab0:	ldr	r0, [fp, #-16]
    bab4:	bl	55b4 <strcspn@plt>
    bab8:	str	r0, [fp, #-1096]	; 0xfffffbb8
    babc:	b	bacc <rb_sha512_crypt_r+0x184>
    bac0:	movw	r0, #16
    bac4:	str	r0, [fp, #-1096]	; 0xfffffbb8
    bac8:	b	bacc <rb_sha512_crypt_r+0x184>
    bacc:	ldr	r0, [fp, #-1096]	; 0xfffffbb8
    bad0:	str	r0, [fp, #-844]	; 0xfffffcb4
    bad4:	ldr	r0, [fp, #-12]
    bad8:	bl	51b8 <strlen@plt>
    badc:	str	r0, [fp, #-848]	; 0xfffffcb0
    bae0:	ldr	r0, [fp, #-12]
    bae4:	sub	r0, r0, #0
    bae8:	and	r0, r0, #7
    baec:	cmp	r0, #0
    baf0:	beq	bb4c <rb_sha512_crypt_r+0x204>
    baf4:	ldr	r0, [fp, #-848]	; 0xfffffcb0
    baf8:	add	r0, r0, #15
    bafc:	bic	r0, r0, #7
    bb00:	mov	r1, sp
    bb04:	sub	r0, r1, r0
    bb08:	mov	sp, r0
    bb0c:	str	r0, [fp, #-896]	; 0xfffffc80
    bb10:	ldr	r0, [fp, #-896]	; 0xfffffc80
    bb14:	add	r0, r0, #8
    bb18:	ldr	r1, [fp, #-896]	; 0xfffffc80
    bb1c:	sub	r1, r1, #0
    bb20:	and	r1, r1, #7
    bb24:	movw	r2, #0
    bb28:	sub	r1, r2, r1
    bb2c:	add	r0, r0, r1
    bb30:	ldr	r1, [fp, #-12]
    bb34:	ldr	r2, [fp, #-848]	; 0xfffffcb0
    bb38:	str	r0, [fp, #-1100]	; 0xfffffbb4
    bb3c:	bl	51dc <memcpy@plt>
    bb40:	ldr	r0, [fp, #-1100]	; 0xfffffbb4
    bb44:	str	r0, [fp, #-860]	; 0xfffffca4
    bb48:	str	r0, [fp, #-12]
    bb4c:	ldr	r0, [fp, #-16]
    bb50:	sub	r0, r0, #0
    bb54:	and	r0, r0, #7
    bb58:	cmp	r0, #0
    bb5c:	beq	bbb8 <rb_sha512_crypt_r+0x270>
    bb60:	ldr	r0, [fp, #-844]	; 0xfffffcb4
    bb64:	add	r0, r0, #15
    bb68:	bic	r0, r0, #7
    bb6c:	mov	r1, sp
    bb70:	sub	r0, r1, r0
    bb74:	mov	sp, r0
    bb78:	str	r0, [fp, #-900]	; 0xfffffc7c
    bb7c:	ldr	r0, [fp, #-900]	; 0xfffffc7c
    bb80:	add	r0, r0, #8
    bb84:	ldr	r1, [fp, #-900]	; 0xfffffc7c
    bb88:	sub	r1, r1, #0
    bb8c:	and	r1, r1, #7
    bb90:	movw	r2, #0
    bb94:	sub	r1, r2, r1
    bb98:	add	r0, r0, r1
    bb9c:	ldr	r1, [fp, #-16]
    bba0:	ldr	r2, [fp, #-844]	; 0xfffffcb4
    bba4:	str	r0, [fp, #-1104]	; 0xfffffbb0
    bba8:	bl	51dc <memcpy@plt>
    bbac:	ldr	r0, [fp, #-1104]	; 0xfffffbb0
    bbb0:	str	r0, [fp, #-864]	; 0xfffffca0
    bbb4:	str	r0, [fp, #-16]
    bbb8:	sub	r0, fp, #496	; 0x1f0
    bbbc:	bl	d460 <rb_sha512_init_ctx>
    bbc0:	ldr	r0, [fp, #-12]
    bbc4:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bbc8:	sub	r2, fp, #496	; 0x1f0
    bbcc:	bl	d578 <rb_sha512_process_bytes>
    bbd0:	ldr	r0, [fp, #-16]
    bbd4:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    bbd8:	sub	r2, fp, #496	; 0x1f0
    bbdc:	bl	d578 <rb_sha512_process_bytes>
    bbe0:	sub	r0, fp, #840	; 0x348
    bbe4:	bl	d460 <rb_sha512_init_ctx>
    bbe8:	ldr	r0, [fp, #-12]
    bbec:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bbf0:	sub	r2, fp, #840	; 0x348
    bbf4:	bl	d578 <rb_sha512_process_bytes>
    bbf8:	ldr	r0, [fp, #-16]
    bbfc:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    bc00:	sub	r2, fp, #840	; 0x348
    bc04:	bl	d578 <rb_sha512_process_bytes>
    bc08:	ldr	r0, [fp, #-12]
    bc0c:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bc10:	sub	r2, fp, #840	; 0x348
    bc14:	bl	d578 <rb_sha512_process_bytes>
    bc18:	sub	r1, fp, #88	; 0x58
    bc1c:	sub	r0, fp, #840	; 0x348
    bc20:	bl	d83c <rb_sha512_finish_ctx>
    bc24:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bc28:	str	r1, [fp, #-852]	; 0xfffffcac
    bc2c:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bc30:	cmp	r0, #64	; 0x40
    bc34:	bls	bc58 <rb_sha512_crypt_r+0x310>
    bc38:	sub	r0, fp, #88	; 0x58
    bc3c:	movw	r1, #64	; 0x40
    bc40:	sub	r2, fp, #496	; 0x1f0
    bc44:	bl	d578 <rb_sha512_process_bytes>
    bc48:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bc4c:	sub	r0, r0, #64	; 0x40
    bc50:	str	r0, [fp, #-852]	; 0xfffffcac
    bc54:	b	bc2c <rb_sha512_crypt_r+0x2e4>
    bc58:	sub	r0, fp, #88	; 0x58
    bc5c:	ldr	r1, [fp, #-852]	; 0xfffffcac
    bc60:	sub	r2, fp, #496	; 0x1f0
    bc64:	bl	d578 <rb_sha512_process_bytes>
    bc68:	ldr	r0, [fp, #-848]	; 0xfffffcb0
    bc6c:	str	r0, [fp, #-852]	; 0xfffffcac
    bc70:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bc74:	cmp	r0, #0
    bc78:	bls	bcc4 <rb_sha512_crypt_r+0x37c>
    bc7c:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bc80:	and	r0, r0, #1
    bc84:	cmp	r0, #0
    bc88:	beq	bca0 <rb_sha512_crypt_r+0x358>
    bc8c:	sub	r0, fp, #88	; 0x58
    bc90:	movw	r1, #64	; 0x40
    bc94:	sub	r2, fp, #496	; 0x1f0
    bc98:	bl	d578 <rb_sha512_process_bytes>
    bc9c:	b	bcb0 <rb_sha512_crypt_r+0x368>
    bca0:	ldr	r0, [fp, #-12]
    bca4:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bca8:	sub	r2, fp, #496	; 0x1f0
    bcac:	bl	d578 <rb_sha512_process_bytes>
    bcb0:	b	bcb4 <rb_sha512_crypt_r+0x36c>
    bcb4:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bcb8:	lsr	r0, r0, #1
    bcbc:	str	r0, [fp, #-852]	; 0xfffffcac
    bcc0:	b	bc70 <rb_sha512_crypt_r+0x328>
    bcc4:	sub	r1, fp, #88	; 0x58
    bcc8:	sub	r0, fp, #496	; 0x1f0
    bccc:	bl	d83c <rb_sha512_finish_ctx>
    bcd0:	sub	r1, fp, #840	; 0x348
    bcd4:	str	r0, [fp, #-1108]	; 0xfffffbac
    bcd8:	mov	r0, r1
    bcdc:	bl	d460 <rb_sha512_init_ctx>
    bce0:	movw	r0, #0
    bce4:	str	r0, [fp, #-852]	; 0xfffffcac
    bce8:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bcec:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bcf0:	cmp	r0, r1
    bcf4:	bcs	bd18 <rb_sha512_crypt_r+0x3d0>
    bcf8:	ldr	r0, [fp, #-12]
    bcfc:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bd00:	sub	r2, fp, #840	; 0x348
    bd04:	bl	d578 <rb_sha512_process_bytes>
    bd08:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bd0c:	add	r0, r0, #1
    bd10:	str	r0, [fp, #-852]	; 0xfffffcac
    bd14:	b	bce8 <rb_sha512_crypt_r+0x3a0>
    bd18:	sub	r0, fp, #840	; 0x348
    bd1c:	sub	r1, fp, #152	; 0x98
    bd20:	bl	d83c <rb_sha512_finish_ctx>
    bd24:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bd28:	add	r1, r1, #7
    bd2c:	bic	r1, r1, #7
    bd30:	mov	r2, sp
    bd34:	sub	r1, r2, r1
    bd38:	mov	sp, r1
    bd3c:	str	r1, [fp, #-868]	; 0xfffffc9c
    bd40:	str	r1, [fp, #-856]	; 0xfffffca8
    bd44:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bd48:	str	r1, [fp, #-852]	; 0xfffffcac
    bd4c:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bd50:	cmp	r0, #64	; 0x40
    bd54:	bcc	bd84 <rb_sha512_crypt_r+0x43c>
    bd58:	sub	r1, fp, #152	; 0x98
    bd5c:	ldr	r0, [fp, #-856]	; 0xfffffca8
    bd60:	movw	r2, #64	; 0x40
    bd64:	bl	51dc <memcpy@plt>
    bd68:	ldr	r0, [fp, #-856]	; 0xfffffca8
    bd6c:	add	r0, r0, #64	; 0x40
    bd70:	str	r0, [fp, #-856]	; 0xfffffca8
    bd74:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bd78:	sub	r0, r0, #64	; 0x40
    bd7c:	str	r0, [fp, #-852]	; 0xfffffcac
    bd80:	b	bd4c <rb_sha512_crypt_r+0x404>
    bd84:	sub	r1, fp, #152	; 0x98
    bd88:	ldr	r0, [fp, #-856]	; 0xfffffca8
    bd8c:	ldr	r2, [fp, #-852]	; 0xfffffcac
    bd90:	bl	51dc <memcpy@plt>
    bd94:	sub	r0, fp, #840	; 0x348
    bd98:	bl	d460 <rb_sha512_init_ctx>
    bd9c:	movw	r0, #0
    bda0:	str	r0, [fp, #-852]	; 0xfffffcac
    bda4:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bda8:	ldrb	r1, [fp, #-88]	; 0xffffffa8
    bdac:	add	r1, r1, #16
    bdb0:	cmp	r0, r1
    bdb4:	bcs	bdd8 <rb_sha512_crypt_r+0x490>
    bdb8:	ldr	r0, [fp, #-16]
    bdbc:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    bdc0:	sub	r2, fp, #840	; 0x348
    bdc4:	bl	d578 <rb_sha512_process_bytes>
    bdc8:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bdcc:	add	r0, r0, #1
    bdd0:	str	r0, [fp, #-852]	; 0xfffffcac
    bdd4:	b	bda4 <rb_sha512_crypt_r+0x45c>
    bdd8:	sub	r0, fp, #840	; 0x348
    bddc:	sub	r1, fp, #152	; 0x98
    bde0:	bl	d83c <rb_sha512_finish_ctx>
    bde4:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    bde8:	add	r1, r1, #7
    bdec:	bic	r1, r1, #7
    bdf0:	mov	r2, sp
    bdf4:	sub	r1, r2, r1
    bdf8:	mov	sp, r1
    bdfc:	str	r1, [fp, #-872]	; 0xfffffc98
    be00:	str	r1, [fp, #-856]	; 0xfffffca8
    be04:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    be08:	str	r1, [fp, #-852]	; 0xfffffcac
    be0c:	ldr	r0, [fp, #-852]	; 0xfffffcac
    be10:	cmp	r0, #64	; 0x40
    be14:	bcc	be44 <rb_sha512_crypt_r+0x4fc>
    be18:	sub	r1, fp, #152	; 0x98
    be1c:	ldr	r0, [fp, #-856]	; 0xfffffca8
    be20:	movw	r2, #64	; 0x40
    be24:	bl	51dc <memcpy@plt>
    be28:	ldr	r0, [fp, #-856]	; 0xfffffca8
    be2c:	add	r0, r0, #64	; 0x40
    be30:	str	r0, [fp, #-856]	; 0xfffffca8
    be34:	ldr	r0, [fp, #-852]	; 0xfffffcac
    be38:	sub	r0, r0, #64	; 0x40
    be3c:	str	r0, [fp, #-852]	; 0xfffffcac
    be40:	b	be0c <rb_sha512_crypt_r+0x4c4>
    be44:	sub	r1, fp, #152	; 0x98
    be48:	ldr	r0, [fp, #-856]	; 0xfffffca8
    be4c:	ldr	r2, [fp, #-852]	; 0xfffffcac
    be50:	bl	51dc <memcpy@plt>
    be54:	movw	r0, #0
    be58:	str	r0, [fp, #-852]	; 0xfffffcac
    be5c:	ldr	r0, [fp, #-852]	; 0xfffffcac
    be60:	ldr	r1, [fp, #-876]	; 0xfffffc94
    be64:	cmp	r0, r1
    be68:	bcs	bf6c <rb_sha512_crypt_r+0x624>
    be6c:	sub	r0, fp, #496	; 0x1f0
    be70:	bl	d460 <rb_sha512_init_ctx>
    be74:	ldr	r0, [fp, #-852]	; 0xfffffcac
    be78:	and	r0, r0, #1
    be7c:	cmp	r0, #0
    be80:	beq	be98 <rb_sha512_crypt_r+0x550>
    be84:	ldr	r0, [fp, #-868]	; 0xfffffc9c
    be88:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    be8c:	sub	r2, fp, #496	; 0x1f0
    be90:	bl	d578 <rb_sha512_process_bytes>
    be94:	b	bea8 <rb_sha512_crypt_r+0x560>
    be98:	sub	r0, fp, #88	; 0x58
    be9c:	movw	r1, #64	; 0x40
    bea0:	sub	r2, fp, #496	; 0x1f0
    bea4:	bl	d578 <rb_sha512_process_bytes>
    bea8:	ldr	r0, [fp, #-852]	; 0xfffffcac
    beac:	movw	r1, #43691	; 0xaaab
    beb0:	movt	r1, #43690	; 0xaaaa
    beb4:	umull	r1, r2, r0, r1
    beb8:	lsr	r2, r2, #1
    bebc:	add	r2, r2, r2, lsl #1
    bec0:	sub	r0, r0, r2
    bec4:	cmp	r0, #0
    bec8:	beq	bedc <rb_sha512_crypt_r+0x594>
    becc:	ldr	r0, [fp, #-872]	; 0xfffffc98
    bed0:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    bed4:	sub	r2, fp, #496	; 0x1f0
    bed8:	bl	d578 <rb_sha512_process_bytes>
    bedc:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bee0:	movw	r1, #18725	; 0x4925
    bee4:	movt	r1, #9362	; 0x2492
    bee8:	umull	r1, r2, r0, r1
    beec:	sub	r3, r0, r2
    bef0:	add	r2, r2, r3, lsr #1
    bef4:	lsr	r3, r2, #2
    bef8:	lsl	r3, r3, #3
    befc:	sub	r2, r3, r2, lsr #2
    bf00:	sub	r0, r0, r2
    bf04:	cmp	r0, #0
    bf08:	beq	bf1c <rb_sha512_crypt_r+0x5d4>
    bf0c:	ldr	r0, [fp, #-868]	; 0xfffffc9c
    bf10:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bf14:	sub	r2, fp, #496	; 0x1f0
    bf18:	bl	d578 <rb_sha512_process_bytes>
    bf1c:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bf20:	and	r0, r0, #1
    bf24:	cmp	r0, #0
    bf28:	beq	bf40 <rb_sha512_crypt_r+0x5f8>
    bf2c:	sub	r0, fp, #88	; 0x58
    bf30:	movw	r1, #64	; 0x40
    bf34:	sub	r2, fp, #496	; 0x1f0
    bf38:	bl	d578 <rb_sha512_process_bytes>
    bf3c:	b	bf50 <rb_sha512_crypt_r+0x608>
    bf40:	ldr	r0, [fp, #-868]	; 0xfffffc9c
    bf44:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bf48:	sub	r2, fp, #496	; 0x1f0
    bf4c:	bl	d578 <rb_sha512_process_bytes>
    bf50:	sub	r1, fp, #88	; 0x58
    bf54:	sub	r0, fp, #496	; 0x1f0
    bf58:	bl	d83c <rb_sha512_finish_ctx>
    bf5c:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bf60:	add	r0, r0, #1
    bf64:	str	r0, [fp, #-852]	; 0xfffffcac
    bf68:	b	be5c <rb_sha512_crypt_r+0x514>
    bf6c:	ldr	r0, [fp, #-20]	; 0xffffffec
    bf70:	ldr	r1, [fp, #-24]	; 0xffffffe8
    bf74:	movw	r2, #0
    bf78:	cmp	r2, r1
    bf7c:	str	r0, [fp, #-1112]	; 0xfffffba8
    bf80:	ble	bf90 <rb_sha512_crypt_r+0x648>
    bf84:	movw	r0, #0
    bf88:	str	r0, [fp, #-1116]	; 0xfffffba4
    bf8c:	b	bf98 <rb_sha512_crypt_r+0x650>
    bf90:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bf94:	str	r0, [fp, #-1116]	; 0xfffffba4
    bf98:	ldr	r0, [fp, #-1116]	; 0xfffffba4
    bf9c:	ldr	r1, [fp, #-1112]	; 0xfffffba8
    bfa0:	str	r0, [fp, #-1120]	; 0xfffffba0
    bfa4:	mov	r0, r1
    bfa8:	movw	r2, #0
    bfac:	and	r1, r2, #255	; 0xff
    bfb0:	ldr	r2, [fp, #-1120]	; 0xfffffba0
    bfb4:	bl	4ff0 <memset@plt>
    bfb8:	ldr	r0, [fp, #-20]	; 0xffffffec
    bfbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    bfc0:	movw	r2, #0
    bfc4:	cmp	r2, r1
    bfc8:	str	r0, [fp, #-1124]	; 0xfffffb9c
    bfcc:	ble	bfdc <rb_sha512_crypt_r+0x694>
    bfd0:	movw	r0, #0
    bfd4:	str	r0, [fp, #-1128]	; 0xfffffb98
    bfd8:	b	bfe4 <rb_sha512_crypt_r+0x69c>
    bfdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bfe0:	str	r0, [fp, #-1128]	; 0xfffffb98
    bfe4:	ldr	r0, [fp, #-1128]	; 0xfffffb98
    bfe8:	ldr	r1, [pc, #3956]	; cf64 <rb_sha512_crypt_r+0x161c>
    bfec:	add	r1, pc, r1
    bff0:	ldr	r2, [fp, #-1124]	; 0xfffffb9c
    bff4:	str	r0, [fp, #-1132]	; 0xfffffb94
    bff8:	mov	r0, r2
    bffc:	ldr	r2, [fp, #-1132]	; 0xfffffb94
    c000:	bl	4f3c <strncpy@plt>
    c004:	ldr	r1, [fp, #-20]	; 0xffffffec
    c008:	str	r0, [fp, #-1136]	; 0xfffffb90
    c00c:	mov	r0, r1
    c010:	movw	r1, #0
    c014:	bl	4f78 <strchr@plt>
    c018:	str	r0, [fp, #-856]	; 0xfffffca8
    c01c:	movw	r1, #0
    c020:	cmp	r0, r1
    c024:	bne	c064 <rb_sha512_crypt_r+0x71c>
    c028:	ldr	r0, [fp, #-20]	; 0xffffffec
    c02c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c030:	movw	r2, #0
    c034:	cmp	r2, r1
    c038:	str	r0, [fp, #-1140]	; 0xfffffb8c
    c03c:	ble	c04c <rb_sha512_crypt_r+0x704>
    c040:	movw	r0, #0
    c044:	str	r0, [fp, #-1144]	; 0xfffffb88
    c048:	b	c054 <rb_sha512_crypt_r+0x70c>
    c04c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c050:	str	r0, [fp, #-1144]	; 0xfffffb88
    c054:	ldr	r0, [fp, #-1144]	; 0xfffffb88
    c058:	ldr	r1, [fp, #-1140]	; 0xfffffb8c
    c05c:	add	r0, r1, r0
    c060:	str	r0, [fp, #-856]	; 0xfffffca8
    c064:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c068:	sub	r0, r0, #3
    c06c:	str	r0, [fp, #-24]	; 0xffffffe8
    c070:	ldr	r0, [fp, #-880]	; 0xfffffc90
    c074:	cmp	r0, #0
    c078:	beq	c110 <rb_sha512_crypt_r+0x7c8>
    c07c:	ldr	r0, [fp, #-856]	; 0xfffffca8
    c080:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c084:	movw	r2, #0
    c088:	cmp	r2, r1
    c08c:	str	r0, [fp, #-1148]	; 0xfffffb84
    c090:	ble	c0a0 <rb_sha512_crypt_r+0x758>
    c094:	movw	r0, #0
    c098:	str	r0, [fp, #-1152]	; 0xfffffb80
    c09c:	b	c0a8 <rb_sha512_crypt_r+0x760>
    c0a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c0a4:	str	r0, [fp, #-1152]	; 0xfffffb80
    c0a8:	ldr	r0, [fp, #-1152]	; 0xfffffb80
    c0ac:	ldr	r1, [pc, #3948]	; d020 <rb_sha512_crypt_r+0x16d8>
    c0b0:	add	r2, pc, r1
    c0b4:	ldr	r1, [pc, #3944]	; d024 <rb_sha512_crypt_r+0x16dc>
    c0b8:	add	r3, pc, r1
    c0bc:	ldr	r1, [fp, #-876]	; 0xfffffc94
    c0c0:	sub	sp, sp, #8
    c0c4:	ldr	ip, [fp, #-1148]	; 0xfffffb84
    c0c8:	str	r0, [fp, #-1156]	; 0xfffffb7c
    c0cc:	mov	r0, ip
    c0d0:	ldr	lr, [fp, #-1156]	; 0xfffffb7c
    c0d4:	str	r1, [fp, #-1160]	; 0xfffffb78
    c0d8:	mov	r1, lr
    c0dc:	ldr	r4, [fp, #-1160]	; 0xfffffb78
    c0e0:	str	r4, [sp]
    c0e4:	bl	5584 <snprintf@plt>
    c0e8:	add	sp, sp, #8
    c0ec:	str	r0, [fp, #-904]	; 0xfffffc78
    c0f0:	ldr	r0, [fp, #-904]	; 0xfffffc78
    c0f4:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c0f8:	add	r0, r1, r0
    c0fc:	str	r0, [fp, #-856]	; 0xfffffca8
    c100:	ldr	r0, [fp, #-904]	; 0xfffffc78
    c104:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c108:	sub	r0, r1, r0
    c10c:	str	r0, [fp, #-24]	; 0xffffffe8
    c110:	ldr	r0, [fp, #-856]	; 0xfffffca8
    c114:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c118:	movw	r2, #0
    c11c:	cmp	r2, r1
    c120:	str	r0, [fp, #-1164]	; 0xfffffb74
    c124:	ble	c134 <rb_sha512_crypt_r+0x7ec>
    c128:	movw	r0, #0
    c12c:	str	r0, [fp, #-1168]	; 0xfffffb70
    c130:	b	c13c <rb_sha512_crypt_r+0x7f4>
    c134:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c138:	str	r0, [fp, #-1168]	; 0xfffffb70
    c13c:	ldr	r0, [fp, #-1168]	; 0xfffffb70
    c140:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    c144:	cmp	r0, r1
    c148:	bcs	c17c <rb_sha512_crypt_r+0x834>
    c14c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c150:	movw	r1, #0
    c154:	cmp	r1, r0
    c158:	ble	c168 <rb_sha512_crypt_r+0x820>
    c15c:	movw	r0, #0
    c160:	str	r0, [fp, #-1172]	; 0xfffffb6c
    c164:	b	c170 <rb_sha512_crypt_r+0x828>
    c168:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c16c:	str	r0, [fp, #-1172]	; 0xfffffb6c
    c170:	ldr	r0, [fp, #-1172]	; 0xfffffb6c
    c174:	str	r0, [fp, #-1176]	; 0xfffffb68
    c178:	b	c184 <rb_sha512_crypt_r+0x83c>
    c17c:	ldr	r0, [fp, #-844]	; 0xfffffcb4
    c180:	str	r0, [fp, #-1176]	; 0xfffffb68
    c184:	ldr	r0, [fp, #-1176]	; 0xfffffb68
    c188:	ldr	r1, [fp, #-1164]	; 0xfffffb74
    c18c:	str	r0, [fp, #-1180]	; 0xfffffb64
    c190:	mov	r0, r1
    c194:	movw	r2, #0
    c198:	and	r1, r2, #255	; 0xff
    c19c:	ldr	r2, [fp, #-1180]	; 0xfffffb64
    c1a0:	bl	4ff0 <memset@plt>
    c1a4:	ldr	r0, [fp, #-856]	; 0xfffffca8
    c1a8:	ldr	r1, [fp, #-16]
    c1ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    c1b0:	movw	r3, #0
    c1b4:	cmp	r3, r2
    c1b8:	str	r0, [fp, #-1184]	; 0xfffffb60
    c1bc:	str	r1, [fp, #-1188]	; 0xfffffb5c
    c1c0:	ble	c1d0 <rb_sha512_crypt_r+0x888>
    c1c4:	movw	r0, #0
    c1c8:	str	r0, [fp, #-1192]	; 0xfffffb58
    c1cc:	b	c1d8 <rb_sha512_crypt_r+0x890>
    c1d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c1d4:	str	r0, [fp, #-1192]	; 0xfffffb58
    c1d8:	ldr	r0, [fp, #-1192]	; 0xfffffb58
    c1dc:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    c1e0:	cmp	r0, r1
    c1e4:	bcs	c218 <rb_sha512_crypt_r+0x8d0>
    c1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c1ec:	movw	r1, #0
    c1f0:	cmp	r1, r0
    c1f4:	ble	c204 <rb_sha512_crypt_r+0x8bc>
    c1f8:	movw	r0, #0
    c1fc:	str	r0, [fp, #-1196]	; 0xfffffb54
    c200:	b	c20c <rb_sha512_crypt_r+0x8c4>
    c204:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c208:	str	r0, [fp, #-1196]	; 0xfffffb54
    c20c:	ldr	r0, [fp, #-1196]	; 0xfffffb54
    c210:	str	r0, [fp, #-1200]	; 0xfffffb50
    c214:	b	c220 <rb_sha512_crypt_r+0x8d8>
    c218:	ldr	r0, [fp, #-844]	; 0xfffffcb4
    c21c:	str	r0, [fp, #-1200]	; 0xfffffb50
    c220:	ldr	r0, [fp, #-1200]	; 0xfffffb50
    c224:	ldr	r1, [fp, #-1184]	; 0xfffffb60
    c228:	str	r0, [fp, #-1204]	; 0xfffffb4c
    c22c:	mov	r0, r1
    c230:	ldr	r1, [fp, #-1188]	; 0xfffffb5c
    c234:	ldr	r2, [fp, #-1204]	; 0xfffffb4c
    c238:	bl	4f3c <strncpy@plt>
    c23c:	ldr	r1, [fp, #-20]	; 0xffffffec
    c240:	str	r0, [fp, #-1208]	; 0xfffffb48
    c244:	mov	r0, r1
    c248:	movw	r1, #0
    c24c:	bl	4f78 <strchr@plt>
    c250:	str	r0, [fp, #-856]	; 0xfffffca8
    c254:	movw	r1, #0
    c258:	cmp	r0, r1
    c25c:	bne	c270 <rb_sha512_crypt_r+0x928>
    c260:	ldr	r0, [fp, #-20]	; 0xffffffec
    c264:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    c268:	add	r0, r0, r1
    c26c:	str	r0, [fp, #-856]	; 0xfffffca8
    c270:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c274:	movw	r1, #0
    c278:	cmp	r1, r0
    c27c:	ble	c28c <rb_sha512_crypt_r+0x944>
    c280:	movw	r0, #0
    c284:	str	r0, [fp, #-1212]	; 0xfffffb44
    c288:	b	c294 <rb_sha512_crypt_r+0x94c>
    c28c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c290:	str	r0, [fp, #-1212]	; 0xfffffb44
    c294:	ldr	r0, [fp, #-1212]	; 0xfffffb44
    c298:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    c29c:	cmp	r0, r1
    c2a0:	bcs	c2d4 <rb_sha512_crypt_r+0x98c>
    c2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c2a8:	movw	r1, #0
    c2ac:	cmp	r1, r0
    c2b0:	ble	c2c0 <rb_sha512_crypt_r+0x978>
    c2b4:	movw	r0, #0
    c2b8:	str	r0, [fp, #-1216]	; 0xfffffb40
    c2bc:	b	c2c8 <rb_sha512_crypt_r+0x980>
    c2c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c2c4:	str	r0, [fp, #-1216]	; 0xfffffb40
    c2c8:	ldr	r0, [fp, #-1216]	; 0xfffffb40
    c2cc:	str	r0, [fp, #-1220]	; 0xfffffb3c
    c2d0:	b	c2dc <rb_sha512_crypt_r+0x994>
    c2d4:	ldr	r0, [fp, #-844]	; 0xfffffcb4
    c2d8:	str	r0, [fp, #-1220]	; 0xfffffb3c
    c2dc:	ldr	r0, [fp, #-1220]	; 0xfffffb3c
    c2e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c2e4:	sub	r0, r1, r0
    c2e8:	str	r0, [fp, #-24]	; 0xffffffe8
    c2ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c2f0:	cmp	r0, #0
    c2f4:	ble	c31c <rb_sha512_crypt_r+0x9d4>
    c2f8:	ldr	r0, [fp, #-856]	; 0xfffffca8
    c2fc:	add	r1, r0, #1
    c300:	str	r1, [fp, #-856]	; 0xfffffca8
    c304:	movw	r1, #36	; 0x24
    c308:	strb	r1, [r0]
    c30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c310:	mvn	r1, #0
    c314:	add	r0, r0, r1
    c318:	str	r0, [fp, #-24]	; 0xffffffe8
    c31c:	b	c320 <rb_sha512_crypt_r+0x9d8>
    c320:	ldrb	r0, [fp, #-88]	; 0xffffffa8
    c324:	lsl	r0, r0, #16
    c328:	ldrb	r1, [fp, #-67]	; 0xffffffbd
    c32c:	lsl	r1, r1, #8
    c330:	orr	r0, r0, r1
    c334:	ldrb	r1, [fp, #-46]	; 0xffffffd2
    c338:	orr	r0, r0, r1
    c33c:	str	r0, [fp, #-908]	; 0xfffffc74
    c340:	movw	r0, #4
    c344:	str	r0, [fp, #-912]	; 0xfffffc70
    c348:	ldr	r0, [fp, #-912]	; 0xfffffc70
    c34c:	mvn	r1, #0
    c350:	add	r1, r0, r1
    c354:	str	r1, [fp, #-912]	; 0xfffffc70
    c358:	cmp	r0, #0
    c35c:	movw	r0, #0
    c360:	str	r0, [fp, #-1224]	; 0xfffffb38
    c364:	ble	c37c <rb_sha512_crypt_r+0xa34>
    c368:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c36c:	cmp	r0, #0
    c370:	movw	r0, #0
    c374:	movgt	r0, #1
    c378:	str	r0, [fp, #-1224]	; 0xfffffb38
    c37c:	ldr	r0, [fp, #-1224]	; 0xfffffb38
    c380:	tst	r0, #1
    c384:	beq	c3d0 <rb_sha512_crypt_r+0xa88>
    c388:	ldr	r0, [pc, #3980]	; d31c <rb_sha512_crypt_r+0x19d4>
    c38c:	add	r0, pc, r0
    c390:	ldr	r1, [fp, #-908]	; 0xfffffc74
    c394:	and	r1, r1, #63	; 0x3f
    c398:	add	r0, r0, r1
    c39c:	ldrb	r0, [r0]
    c3a0:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c3a4:	add	r2, r1, #1
    c3a8:	str	r2, [fp, #-856]	; 0xfffffca8
    c3ac:	strb	r0, [r1]
    c3b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c3b4:	mvn	r1, #0
    c3b8:	add	r0, r0, r1
    c3bc:	str	r0, [fp, #-24]	; 0xffffffe8
    c3c0:	ldr	r0, [fp, #-908]	; 0xfffffc74
    c3c4:	lsr	r0, r0, #6
    c3c8:	str	r0, [fp, #-908]	; 0xfffffc74
    c3cc:	b	c348 <rb_sha512_crypt_r+0xa00>
    c3d0:	b	c3d4 <rb_sha512_crypt_r+0xa8c>
    c3d4:	b	c3d8 <rb_sha512_crypt_r+0xa90>
    c3d8:	ldrb	r0, [fp, #-66]	; 0xffffffbe
    c3dc:	lsl	r0, r0, #16
    c3e0:	ldrb	r1, [fp, #-45]	; 0xffffffd3
    c3e4:	lsl	r1, r1, #8
    c3e8:	orr	r0, r0, r1
    c3ec:	ldrb	r1, [fp, #-87]	; 0xffffffa9
    c3f0:	orr	r0, r0, r1
    c3f4:	str	r0, [fp, #-916]	; 0xfffffc6c
    c3f8:	movw	r0, #4
    c3fc:	str	r0, [fp, #-920]	; 0xfffffc68
    c400:	ldr	r0, [fp, #-920]	; 0xfffffc68
    c404:	mvn	r1, #0
    c408:	add	r1, r0, r1
    c40c:	str	r1, [fp, #-920]	; 0xfffffc68
    c410:	cmp	r0, #0
    c414:	movw	r0, #0
    c418:	str	r0, [fp, #-1228]	; 0xfffffb34
    c41c:	ble	c434 <rb_sha512_crypt_r+0xaec>
    c420:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c424:	cmp	r0, #0
    c428:	movw	r0, #0
    c42c:	movgt	r0, #1
    c430:	str	r0, [fp, #-1228]	; 0xfffffb34
    c434:	ldr	r0, [fp, #-1228]	; 0xfffffb34
    c438:	tst	r0, #1
    c43c:	beq	c488 <rb_sha512_crypt_r+0xb40>
    c440:	ldr	r0, [pc, #4036]	; d40c <rb_sha512_crypt_r+0x1ac4>
    c444:	add	r0, pc, r0
    c448:	ldr	r1, [fp, #-916]	; 0xfffffc6c
    c44c:	and	r1, r1, #63	; 0x3f
    c450:	add	r0, r0, r1
    c454:	ldrb	r0, [r0]
    c458:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c45c:	add	r2, r1, #1
    c460:	str	r2, [fp, #-856]	; 0xfffffca8
    c464:	strb	r0, [r1]
    c468:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c46c:	mvn	r1, #0
    c470:	add	r0, r0, r1
    c474:	str	r0, [fp, #-24]	; 0xffffffe8
    c478:	ldr	r0, [fp, #-916]	; 0xfffffc6c
    c47c:	lsr	r0, r0, #6
    c480:	str	r0, [fp, #-916]	; 0xfffffc6c
    c484:	b	c400 <rb_sha512_crypt_r+0xab8>
    c488:	b	c48c <rb_sha512_crypt_r+0xb44>
    c48c:	b	c490 <rb_sha512_crypt_r+0xb48>
    c490:	ldrb	r0, [fp, #-44]	; 0xffffffd4
    c494:	lsl	r0, r0, #16
    c498:	ldrb	r1, [fp, #-86]	; 0xffffffaa
    c49c:	lsl	r1, r1, #8
    c4a0:	orr	r0, r0, r1
    c4a4:	ldrb	r1, [fp, #-65]	; 0xffffffbf
    c4a8:	orr	r0, r0, r1
    c4ac:	str	r0, [fp, #-924]	; 0xfffffc64
    c4b0:	movw	r0, #4
    c4b4:	str	r0, [fp, #-928]	; 0xfffffc60
    c4b8:	ldr	r0, [fp, #-928]	; 0xfffffc60
    c4bc:	mvn	r1, #0
    c4c0:	add	r1, r0, r1
    c4c4:	str	r1, [fp, #-928]	; 0xfffffc60
    c4c8:	cmp	r0, #0
    c4cc:	movw	r0, #0
    c4d0:	str	r0, [fp, #-1232]	; 0xfffffb30
    c4d4:	ble	c4ec <rb_sha512_crypt_r+0xba4>
    c4d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c4dc:	cmp	r0, #0
    c4e0:	movw	r0, #0
    c4e4:	movgt	r0, #1
    c4e8:	str	r0, [fp, #-1232]	; 0xfffffb30
    c4ec:	ldr	r0, [fp, #-1232]	; 0xfffffb30
    c4f0:	tst	r0, #1
    c4f4:	beq	c540 <rb_sha512_crypt_r+0xbf8>
    c4f8:	ldr	r0, [pc, #3932]	; d45c <rb_sha512_crypt_r+0x1b14>
    c4fc:	add	r0, pc, r0
    c500:	ldr	r1, [fp, #-924]	; 0xfffffc64
    c504:	and	r1, r1, #63	; 0x3f
    c508:	add	r0, r0, r1
    c50c:	ldrb	r0, [r0]
    c510:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c514:	add	r2, r1, #1
    c518:	str	r2, [fp, #-856]	; 0xfffffca8
    c51c:	strb	r0, [r1]
    c520:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c524:	mvn	r1, #0
    c528:	add	r0, r0, r1
    c52c:	str	r0, [fp, #-24]	; 0xffffffe8
    c530:	ldr	r0, [fp, #-924]	; 0xfffffc64
    c534:	lsr	r0, r0, #6
    c538:	str	r0, [fp, #-924]	; 0xfffffc64
    c53c:	b	c4b8 <rb_sha512_crypt_r+0xb70>
    c540:	b	c544 <rb_sha512_crypt_r+0xbfc>
    c544:	b	c548 <rb_sha512_crypt_r+0xc00>
    c548:	ldrb	r0, [fp, #-85]	; 0xffffffab
    c54c:	lsl	r0, r0, #16
    c550:	ldrb	r1, [fp, #-64]	; 0xffffffc0
    c554:	lsl	r1, r1, #8
    c558:	orr	r0, r0, r1
    c55c:	ldrb	r1, [fp, #-43]	; 0xffffffd5
    c560:	orr	r0, r0, r1
    c564:	str	r0, [fp, #-932]	; 0xfffffc5c
    c568:	movw	r0, #4
    c56c:	str	r0, [fp, #-936]	; 0xfffffc58
    c570:	ldr	r0, [fp, #-936]	; 0xfffffc58
    c574:	mvn	r1, #0
    c578:	add	r1, r0, r1
    c57c:	str	r1, [fp, #-936]	; 0xfffffc58
    c580:	cmp	r0, #0
    c584:	movw	r0, #0
    c588:	str	r0, [fp, #-1236]	; 0xfffffb2c
    c58c:	ble	c5a4 <rb_sha512_crypt_r+0xc5c>
    c590:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c594:	cmp	r0, #0
    c598:	movw	r0, #0
    c59c:	movgt	r0, #1
    c5a0:	str	r0, [fp, #-1236]	; 0xfffffb2c
    c5a4:	ldr	r0, [fp, #-1236]	; 0xfffffb2c
    c5a8:	tst	r0, #1
    c5ac:	beq	c5f8 <rb_sha512_crypt_r+0xcb0>
    c5b0:	ldr	r0, [pc, #3744]	; d458 <rb_sha512_crypt_r+0x1b10>
    c5b4:	add	r0, pc, r0
    c5b8:	ldr	r1, [fp, #-932]	; 0xfffffc5c
    c5bc:	and	r1, r1, #63	; 0x3f
    c5c0:	add	r0, r0, r1
    c5c4:	ldrb	r0, [r0]
    c5c8:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c5cc:	add	r2, r1, #1
    c5d0:	str	r2, [fp, #-856]	; 0xfffffca8
    c5d4:	strb	r0, [r1]
    c5d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c5dc:	mvn	r1, #0
    c5e0:	add	r0, r0, r1
    c5e4:	str	r0, [fp, #-24]	; 0xffffffe8
    c5e8:	ldr	r0, [fp, #-932]	; 0xfffffc5c
    c5ec:	lsr	r0, r0, #6
    c5f0:	str	r0, [fp, #-932]	; 0xfffffc5c
    c5f4:	b	c570 <rb_sha512_crypt_r+0xc28>
    c5f8:	b	c5fc <rb_sha512_crypt_r+0xcb4>
    c5fc:	b	c600 <rb_sha512_crypt_r+0xcb8>
    c600:	ldrb	r0, [fp, #-63]	; 0xffffffc1
    c604:	lsl	r0, r0, #16
    c608:	ldrb	r1, [fp, #-42]	; 0xffffffd6
    c60c:	lsl	r1, r1, #8
    c610:	orr	r0, r0, r1
    c614:	ldrb	r1, [fp, #-84]	; 0xffffffac
    c618:	orr	r0, r0, r1
    c61c:	str	r0, [fp, #-940]	; 0xfffffc54
    c620:	movw	r0, #4
    c624:	str	r0, [fp, #-944]	; 0xfffffc50
    c628:	ldr	r0, [fp, #-944]	; 0xfffffc50
    c62c:	mvn	r1, #0
    c630:	add	r1, r0, r1
    c634:	str	r1, [fp, #-944]	; 0xfffffc50
    c638:	cmp	r0, #0
    c63c:	movw	r0, #0
    c640:	str	r0, [fp, #-1240]	; 0xfffffb28
    c644:	ble	c65c <rb_sha512_crypt_r+0xd14>
    c648:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c64c:	cmp	r0, #0
    c650:	movw	r0, #0
    c654:	movgt	r0, #1
    c658:	str	r0, [fp, #-1240]	; 0xfffffb28
    c65c:	ldr	r0, [fp, #-1240]	; 0xfffffb28
    c660:	tst	r0, #1
    c664:	beq	c6b0 <rb_sha512_crypt_r+0xd68>
    c668:	ldr	r0, [pc, #3556]	; d454 <rb_sha512_crypt_r+0x1b0c>
    c66c:	add	r0, pc, r0
    c670:	ldr	r1, [fp, #-940]	; 0xfffffc54
    c674:	and	r1, r1, #63	; 0x3f
    c678:	add	r0, r0, r1
    c67c:	ldrb	r0, [r0]
    c680:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c684:	add	r2, r1, #1
    c688:	str	r2, [fp, #-856]	; 0xfffffca8
    c68c:	strb	r0, [r1]
    c690:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c694:	mvn	r1, #0
    c698:	add	r0, r0, r1
    c69c:	str	r0, [fp, #-24]	; 0xffffffe8
    c6a0:	ldr	r0, [fp, #-940]	; 0xfffffc54
    c6a4:	lsr	r0, r0, #6
    c6a8:	str	r0, [fp, #-940]	; 0xfffffc54
    c6ac:	b	c628 <rb_sha512_crypt_r+0xce0>
    c6b0:	b	c6b4 <rb_sha512_crypt_r+0xd6c>
    c6b4:	b	c6b8 <rb_sha512_crypt_r+0xd70>
    c6b8:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    c6bc:	lsl	r0, r0, #16
    c6c0:	ldrb	r1, [fp, #-83]	; 0xffffffad
    c6c4:	lsl	r1, r1, #8
    c6c8:	orr	r0, r0, r1
    c6cc:	ldrb	r1, [fp, #-62]	; 0xffffffc2
    c6d0:	orr	r0, r0, r1
    c6d4:	str	r0, [fp, #-948]	; 0xfffffc4c
    c6d8:	movw	r0, #4
    c6dc:	str	r0, [fp, #-952]	; 0xfffffc48
    c6e0:	ldr	r0, [fp, #-952]	; 0xfffffc48
    c6e4:	mvn	r1, #0
    c6e8:	add	r1, r0, r1
    c6ec:	str	r1, [fp, #-952]	; 0xfffffc48
    c6f0:	cmp	r0, #0
    c6f4:	movw	r0, #0
    c6f8:	str	r0, [fp, #-1244]	; 0xfffffb24
    c6fc:	ble	c714 <rb_sha512_crypt_r+0xdcc>
    c700:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c704:	cmp	r0, #0
    c708:	movw	r0, #0
    c70c:	movgt	r0, #1
    c710:	str	r0, [fp, #-1244]	; 0xfffffb24
    c714:	ldr	r0, [fp, #-1244]	; 0xfffffb24
    c718:	tst	r0, #1
    c71c:	beq	c768 <rb_sha512_crypt_r+0xe20>
    c720:	ldr	r0, [pc, #3368]	; d450 <rb_sha512_crypt_r+0x1b08>
    c724:	add	r0, pc, r0
    c728:	ldr	r1, [fp, #-948]	; 0xfffffc4c
    c72c:	and	r1, r1, #63	; 0x3f
    c730:	add	r0, r0, r1
    c734:	ldrb	r0, [r0]
    c738:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c73c:	add	r2, r1, #1
    c740:	str	r2, [fp, #-856]	; 0xfffffca8
    c744:	strb	r0, [r1]
    c748:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c74c:	mvn	r1, #0
    c750:	add	r0, r0, r1
    c754:	str	r0, [fp, #-24]	; 0xffffffe8
    c758:	ldr	r0, [fp, #-948]	; 0xfffffc4c
    c75c:	lsr	r0, r0, #6
    c760:	str	r0, [fp, #-948]	; 0xfffffc4c
    c764:	b	c6e0 <rb_sha512_crypt_r+0xd98>
    c768:	b	c76c <rb_sha512_crypt_r+0xe24>
    c76c:	b	c770 <rb_sha512_crypt_r+0xe28>
    c770:	ldrb	r0, [fp, #-82]	; 0xffffffae
    c774:	lsl	r0, r0, #16
    c778:	ldrb	r1, [fp, #-61]	; 0xffffffc3
    c77c:	lsl	r1, r1, #8
    c780:	orr	r0, r0, r1
    c784:	ldrb	r1, [fp, #-40]	; 0xffffffd8
    c788:	orr	r0, r0, r1
    c78c:	str	r0, [fp, #-956]	; 0xfffffc44
    c790:	movw	r0, #4
    c794:	str	r0, [fp, #-960]	; 0xfffffc40
    c798:	ldr	r0, [fp, #-960]	; 0xfffffc40
    c79c:	mvn	r1, #0
    c7a0:	add	r1, r0, r1
    c7a4:	str	r1, [fp, #-960]	; 0xfffffc40
    c7a8:	cmp	r0, #0
    c7ac:	movw	r0, #0
    c7b0:	str	r0, [fp, #-1248]	; 0xfffffb20
    c7b4:	ble	c7cc <rb_sha512_crypt_r+0xe84>
    c7b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c7bc:	cmp	r0, #0
    c7c0:	movw	r0, #0
    c7c4:	movgt	r0, #1
    c7c8:	str	r0, [fp, #-1248]	; 0xfffffb20
    c7cc:	ldr	r0, [fp, #-1248]	; 0xfffffb20
    c7d0:	tst	r0, #1
    c7d4:	beq	c820 <rb_sha512_crypt_r+0xed8>
    c7d8:	ldr	r0, [pc, #3180]	; d44c <rb_sha512_crypt_r+0x1b04>
    c7dc:	add	r0, pc, r0
    c7e0:	ldr	r1, [fp, #-956]	; 0xfffffc44
    c7e4:	and	r1, r1, #63	; 0x3f
    c7e8:	add	r0, r0, r1
    c7ec:	ldrb	r0, [r0]
    c7f0:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c7f4:	add	r2, r1, #1
    c7f8:	str	r2, [fp, #-856]	; 0xfffffca8
    c7fc:	strb	r0, [r1]
    c800:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c804:	mvn	r1, #0
    c808:	add	r0, r0, r1
    c80c:	str	r0, [fp, #-24]	; 0xffffffe8
    c810:	ldr	r0, [fp, #-956]	; 0xfffffc44
    c814:	lsr	r0, r0, #6
    c818:	str	r0, [fp, #-956]	; 0xfffffc44
    c81c:	b	c798 <rb_sha512_crypt_r+0xe50>
    c820:	b	c824 <rb_sha512_crypt_r+0xedc>
    c824:	b	c828 <rb_sha512_crypt_r+0xee0>
    c828:	ldrb	r0, [fp, #-60]	; 0xffffffc4
    c82c:	lsl	r0, r0, #16
    c830:	ldrb	r1, [fp, #-39]	; 0xffffffd9
    c834:	lsl	r1, r1, #8
    c838:	orr	r0, r0, r1
    c83c:	ldrb	r1, [fp, #-81]	; 0xffffffaf
    c840:	orr	r0, r0, r1
    c844:	str	r0, [fp, #-964]	; 0xfffffc3c
    c848:	movw	r0, #4
    c84c:	str	r0, [fp, #-968]	; 0xfffffc38
    c850:	ldr	r0, [fp, #-968]	; 0xfffffc38
    c854:	mvn	r1, #0
    c858:	add	r1, r0, r1
    c85c:	str	r1, [fp, #-968]	; 0xfffffc38
    c860:	cmp	r0, #0
    c864:	movw	r0, #0
    c868:	str	r0, [fp, #-1252]	; 0xfffffb1c
    c86c:	ble	c884 <rb_sha512_crypt_r+0xf3c>
    c870:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c874:	cmp	r0, #0
    c878:	movw	r0, #0
    c87c:	movgt	r0, #1
    c880:	str	r0, [fp, #-1252]	; 0xfffffb1c
    c884:	ldr	r0, [fp, #-1252]	; 0xfffffb1c
    c888:	tst	r0, #1
    c88c:	beq	c8dc <rb_sha512_crypt_r+0xf94>
    c890:	ldr	r0, [pc, #2992]	; d448 <rb_sha512_crypt_r+0x1b00>
    c894:	add	r0, pc, r0
    c898:	ldr	r1, [fp, #-964]	; 0xfffffc3c
    c89c:	and	r1, r1, #63	; 0x3f
    c8a0:	add	r0, r0, r1
    c8a4:	ldrb	r0, [r0]
    c8a8:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c8ac:	add	r2, r1, #1
    c8b0:	str	r2, [fp, #-856]	; 0xfffffca8
    c8b4:	strb	r0, [r1]
    c8b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c8bc:	mvn	r1, #0
    c8c0:	add	r0, r0, r1
    c8c4:	str	r0, [fp, #-24]	; 0xffffffe8
    c8c8:	ldr	r0, [fp, #-964]	; 0xfffffc3c
    c8cc:	lsr	r0, r0, #6
    c8d0:	str	r0, [fp, #-964]	; 0xfffffc3c
    c8d4:	b	c850 <rb_sha512_crypt_r+0xf08>
    c8d8:	.word	0x00016c20
    c8dc:	b	c8e0 <rb_sha512_crypt_r+0xf98>
    c8e0:	b	c8e4 <rb_sha512_crypt_r+0xf9c>
    c8e4:	ldrb	r0, [fp, #-38]	; 0xffffffda
    c8e8:	lsl	r0, r0, #16
    c8ec:	ldrb	r1, [fp, #-80]	; 0xffffffb0
    c8f0:	lsl	r1, r1, #8
    c8f4:	orr	r0, r0, r1
    c8f8:	ldrb	r1, [fp, #-59]	; 0xffffffc5
    c8fc:	orr	r0, r0, r1
    c900:	str	r0, [fp, #-972]	; 0xfffffc34
    c904:	movw	r0, #4
    c908:	str	r0, [fp, #-976]	; 0xfffffc30
    c90c:	ldr	r0, [fp, #-976]	; 0xfffffc30
    c910:	mvn	r1, #0
    c914:	add	r1, r0, r1
    c918:	str	r1, [fp, #-976]	; 0xfffffc30
    c91c:	cmp	r0, #0
    c920:	movw	r0, #0
    c924:	str	r0, [fp, #-1256]	; 0xfffffb18
    c928:	ble	c940 <rb_sha512_crypt_r+0xff8>
    c92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c930:	cmp	r0, #0
    c934:	movw	r0, #0
    c938:	movgt	r0, #1
    c93c:	str	r0, [fp, #-1256]	; 0xfffffb18
    c940:	ldr	r0, [fp, #-1256]	; 0xfffffb18
    c944:	tst	r0, #1
    c948:	beq	c99c <rb_sha512_crypt_r+0x1054>
    c94c:	ldr	r0, [pc, #2800]	; d444 <rb_sha512_crypt_r+0x1afc>
    c950:	add	r0, pc, r0
    c954:	ldr	r1, [fp, #-972]	; 0xfffffc34
    c958:	and	r1, r1, #63	; 0x3f
    c95c:	add	r0, r0, r1
    c960:	ldrb	r0, [r0]
    c964:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c968:	add	r2, r1, #1
    c96c:	str	r2, [fp, #-856]	; 0xfffffca8
    c970:	strb	r0, [r1]
    c974:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c978:	mvn	r1, #0
    c97c:	add	r0, r0, r1
    c980:	str	r0, [fp, #-24]	; 0xffffffe8
    c984:	ldr	r0, [fp, #-972]	; 0xfffffc34
    c988:	lsr	r0, r0, #6
    c98c:	str	r0, [fp, #-972]	; 0xfffffc34
    c990:	b	c90c <rb_sha512_crypt_r+0xfc4>
    c994:	.word	0x00016bd0
    c998:	.word	0x3b9ac9ff
    c99c:	b	c9a0 <rb_sha512_crypt_r+0x1058>
    c9a0:	b	c9a4 <rb_sha512_crypt_r+0x105c>
    c9a4:	ldrb	r0, [fp, #-79]	; 0xffffffb1
    c9a8:	lsl	r0, r0, #16
    c9ac:	ldrb	r1, [fp, #-58]	; 0xffffffc6
    c9b0:	lsl	r1, r1, #8
    c9b4:	orr	r0, r0, r1
    c9b8:	ldrb	r1, [fp, #-37]	; 0xffffffdb
    c9bc:	orr	r0, r0, r1
    c9c0:	str	r0, [fp, #-980]	; 0xfffffc2c
    c9c4:	movw	r0, #4
    c9c8:	str	r0, [fp, #-984]	; 0xfffffc28
    c9cc:	ldr	r0, [fp, #-984]	; 0xfffffc28
    c9d0:	mvn	r1, #0
    c9d4:	add	r1, r0, r1
    c9d8:	str	r1, [fp, #-984]	; 0xfffffc28
    c9dc:	cmp	r0, #0
    c9e0:	movw	r0, #0
    c9e4:	str	r0, [fp, #-1260]	; 0xfffffb14
    c9e8:	ble	ca00 <rb_sha512_crypt_r+0x10b8>
    c9ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c9f0:	cmp	r0, #0
    c9f4:	movw	r0, #0
    c9f8:	movgt	r0, #1
    c9fc:	str	r0, [fp, #-1260]	; 0xfffffb14
    ca00:	ldr	r0, [fp, #-1260]	; 0xfffffb14
    ca04:	tst	r0, #1
    ca08:	beq	ca5c <rb_sha512_crypt_r+0x1114>
    ca0c:	ldr	r0, [pc, #2604]	; d440 <rb_sha512_crypt_r+0x1af8>
    ca10:	add	r0, pc, r0
    ca14:	ldr	r1, [fp, #-980]	; 0xfffffc2c
    ca18:	and	r1, r1, #63	; 0x3f
    ca1c:	add	r0, r0, r1
    ca20:	ldrb	r0, [r0]
    ca24:	ldr	r1, [fp, #-856]	; 0xfffffca8
    ca28:	add	r2, r1, #1
    ca2c:	str	r2, [fp, #-856]	; 0xfffffca8
    ca30:	strb	r0, [r1]
    ca34:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ca38:	mvn	r1, #0
    ca3c:	add	r0, r0, r1
    ca40:	str	r0, [fp, #-24]	; 0xffffffe8
    ca44:	ldr	r0, [fp, #-980]	; 0xfffffc2c
    ca48:	lsr	r0, r0, #6
    ca4c:	str	r0, [fp, #-980]	; 0xfffffc2c
    ca50:	b	c9cc <rb_sha512_crypt_r+0x1084>
    ca54:	.word	0x00016df6
    ca58:	.word	0x00016dde
    ca5c:	b	ca60 <rb_sha512_crypt_r+0x1118>
    ca60:	b	ca64 <rb_sha512_crypt_r+0x111c>
    ca64:	ldrb	r0, [fp, #-57]	; 0xffffffc7
    ca68:	lsl	r0, r0, #16
    ca6c:	ldrb	r1, [fp, #-36]	; 0xffffffdc
    ca70:	lsl	r1, r1, #8
    ca74:	orr	r0, r0, r1
    ca78:	ldrb	r1, [fp, #-78]	; 0xffffffb2
    ca7c:	orr	r0, r0, r1
    ca80:	str	r0, [fp, #-988]	; 0xfffffc24
    ca84:	movw	r0, #4
    ca88:	str	r0, [fp, #-992]	; 0xfffffc20
    ca8c:	ldr	r0, [fp, #-992]	; 0xfffffc20
    ca90:	mvn	r1, #0
    ca94:	add	r1, r0, r1
    ca98:	str	r1, [fp, #-992]	; 0xfffffc20
    ca9c:	cmp	r0, #0
    caa0:	movw	r0, #0
    caa4:	str	r0, [fp, #-1264]	; 0xfffffb10
    caa8:	ble	cac0 <rb_sha512_crypt_r+0x1178>
    caac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cab0:	cmp	r0, #0
    cab4:	movw	r0, #0
    cab8:	movgt	r0, #1
    cabc:	str	r0, [fp, #-1264]	; 0xfffffb10
    cac0:	ldr	r0, [fp, #-1264]	; 0xfffffb10
    cac4:	tst	r0, #1
    cac8:	beq	cb14 <rb_sha512_crypt_r+0x11cc>
    cacc:	ldr	r0, [pc, #2408]	; d43c <rb_sha512_crypt_r+0x1af4>
    cad0:	add	r0, pc, r0
    cad4:	ldr	r1, [fp, #-988]	; 0xfffffc24
    cad8:	and	r1, r1, #63	; 0x3f
    cadc:	add	r0, r0, r1
    cae0:	ldrb	r0, [r0]
    cae4:	ldr	r1, [fp, #-856]	; 0xfffffca8
    cae8:	add	r2, r1, #1
    caec:	str	r2, [fp, #-856]	; 0xfffffca8
    caf0:	strb	r0, [r1]
    caf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    caf8:	mvn	r1, #0
    cafc:	add	r0, r0, r1
    cb00:	str	r0, [fp, #-24]	; 0xffffffe8
    cb04:	ldr	r0, [fp, #-988]	; 0xfffffc24
    cb08:	lsr	r0, r0, #6
    cb0c:	str	r0, [fp, #-988]	; 0xfffffc24
    cb10:	b	ca8c <rb_sha512_crypt_r+0x1144>
    cb14:	b	cb18 <rb_sha512_crypt_r+0x11d0>
    cb18:	b	cb1c <rb_sha512_crypt_r+0x11d4>
    cb1c:	ldrb	r0, [fp, #-35]	; 0xffffffdd
    cb20:	lsl	r0, r0, #16
    cb24:	ldrb	r1, [fp, #-77]	; 0xffffffb3
    cb28:	lsl	r1, r1, #8
    cb2c:	orr	r0, r0, r1
    cb30:	ldrb	r1, [fp, #-56]	; 0xffffffc8
    cb34:	orr	r0, r0, r1
    cb38:	str	r0, [fp, #-996]	; 0xfffffc1c
    cb3c:	movw	r0, #4
    cb40:	str	r0, [fp, #-1000]	; 0xfffffc18
    cb44:	ldr	r0, [fp, #-1000]	; 0xfffffc18
    cb48:	mvn	r1, #0
    cb4c:	add	r1, r0, r1
    cb50:	str	r1, [fp, #-1000]	; 0xfffffc18
    cb54:	cmp	r0, #0
    cb58:	movw	r0, #0
    cb5c:	str	r0, [fp, #-1268]	; 0xfffffb0c
    cb60:	ble	cb78 <rb_sha512_crypt_r+0x1230>
    cb64:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cb68:	cmp	r0, #0
    cb6c:	movw	r0, #0
    cb70:	movgt	r0, #1
    cb74:	str	r0, [fp, #-1268]	; 0xfffffb0c
    cb78:	ldr	r0, [fp, #-1268]	; 0xfffffb0c
    cb7c:	tst	r0, #1
    cb80:	beq	cbcc <rb_sha512_crypt_r+0x1284>
    cb84:	ldr	r0, [pc, #2220]	; d438 <rb_sha512_crypt_r+0x1af0>
    cb88:	add	r0, pc, r0
    cb8c:	ldr	r1, [fp, #-996]	; 0xfffffc1c
    cb90:	and	r1, r1, #63	; 0x3f
    cb94:	add	r0, r0, r1
    cb98:	ldrb	r0, [r0]
    cb9c:	ldr	r1, [fp, #-856]	; 0xfffffca8
    cba0:	add	r2, r1, #1
    cba4:	str	r2, [fp, #-856]	; 0xfffffca8
    cba8:	strb	r0, [r1]
    cbac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cbb0:	mvn	r1, #0
    cbb4:	add	r0, r0, r1
    cbb8:	str	r0, [fp, #-24]	; 0xffffffe8
    cbbc:	ldr	r0, [fp, #-996]	; 0xfffffc1c
    cbc0:	lsr	r0, r0, #6
    cbc4:	str	r0, [fp, #-996]	; 0xfffffc1c
    cbc8:	b	cb44 <rb_sha512_crypt_r+0x11fc>
    cbcc:	b	cbd0 <rb_sha512_crypt_r+0x1288>
    cbd0:	b	cbd4 <rb_sha512_crypt_r+0x128c>
    cbd4:	ldrb	r0, [fp, #-76]	; 0xffffffb4
    cbd8:	lsl	r0, r0, #16
    cbdc:	ldrb	r1, [fp, #-55]	; 0xffffffc9
    cbe0:	lsl	r1, r1, #8
    cbe4:	orr	r0, r0, r1
    cbe8:	ldrb	r1, [fp, #-34]	; 0xffffffde
    cbec:	orr	r0, r0, r1
    cbf0:	str	r0, [fp, #-1004]	; 0xfffffc14
    cbf4:	movw	r0, #4
    cbf8:	str	r0, [fp, #-1008]	; 0xfffffc10
    cbfc:	ldr	r0, [fp, #-1008]	; 0xfffffc10
    cc00:	mvn	r1, #0
    cc04:	add	r1, r0, r1
    cc08:	str	r1, [fp, #-1008]	; 0xfffffc10
    cc0c:	cmp	r0, #0
    cc10:	movw	r0, #0
    cc14:	str	r0, [fp, #-1272]	; 0xfffffb08
    cc18:	ble	cc30 <rb_sha512_crypt_r+0x12e8>
    cc1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cc20:	cmp	r0, #0
    cc24:	movw	r0, #0
    cc28:	movgt	r0, #1
    cc2c:	str	r0, [fp, #-1272]	; 0xfffffb08
    cc30:	ldr	r0, [fp, #-1272]	; 0xfffffb08
    cc34:	tst	r0, #1
    cc38:	beq	cc84 <rb_sha512_crypt_r+0x133c>
    cc3c:	ldr	r0, [pc, #2032]	; d434 <rb_sha512_crypt_r+0x1aec>
    cc40:	add	r0, pc, r0
    cc44:	ldr	r1, [fp, #-1004]	; 0xfffffc14
    cc48:	and	r1, r1, #63	; 0x3f
    cc4c:	add	r0, r0, r1
    cc50:	ldrb	r0, [r0]
    cc54:	ldr	r1, [fp, #-856]	; 0xfffffca8
    cc58:	add	r2, r1, #1
    cc5c:	str	r2, [fp, #-856]	; 0xfffffca8
    cc60:	strb	r0, [r1]
    cc64:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cc68:	mvn	r1, #0
    cc6c:	add	r0, r0, r1
    cc70:	str	r0, [fp, #-24]	; 0xffffffe8
    cc74:	ldr	r0, [fp, #-1004]	; 0xfffffc14
    cc78:	lsr	r0, r0, #6
    cc7c:	str	r0, [fp, #-1004]	; 0xfffffc14
    cc80:	b	cbfc <rb_sha512_crypt_r+0x12b4>
    cc84:	b	cc88 <rb_sha512_crypt_r+0x1340>
    cc88:	b	cc8c <rb_sha512_crypt_r+0x1344>
    cc8c:	ldrb	r0, [fp, #-54]	; 0xffffffca
    cc90:	lsl	r0, r0, #16
    cc94:	ldrb	r1, [fp, #-33]	; 0xffffffdf
    cc98:	lsl	r1, r1, #8
    cc9c:	orr	r0, r0, r1
    cca0:	ldrb	r1, [fp, #-75]	; 0xffffffb5
    cca4:	orr	r0, r0, r1
    cca8:	str	r0, [fp, #-1012]	; 0xfffffc0c
    ccac:	movw	r0, #4
    ccb0:	str	r0, [fp, #-1016]	; 0xfffffc08
    ccb4:	ldr	r0, [fp, #-1016]	; 0xfffffc08
    ccb8:	mvn	r1, #0
    ccbc:	add	r1, r0, r1
    ccc0:	str	r1, [fp, #-1016]	; 0xfffffc08
    ccc4:	cmp	r0, #0
    ccc8:	movw	r0, #0
    cccc:	str	r0, [fp, #-1276]	; 0xfffffb04
    ccd0:	ble	cce8 <rb_sha512_crypt_r+0x13a0>
    ccd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ccd8:	cmp	r0, #0
    ccdc:	movw	r0, #0
    cce0:	movgt	r0, #1
    cce4:	str	r0, [fp, #-1276]	; 0xfffffb04
    cce8:	ldr	r0, [fp, #-1276]	; 0xfffffb04
    ccec:	tst	r0, #1
    ccf0:	beq	cd3c <rb_sha512_crypt_r+0x13f4>
    ccf4:	ldr	r0, [pc, #1844]	; d430 <rb_sha512_crypt_r+0x1ae8>
    ccf8:	add	r0, pc, r0
    ccfc:	ldr	r1, [fp, #-1012]	; 0xfffffc0c
    cd00:	and	r1, r1, #63	; 0x3f
    cd04:	add	r0, r0, r1
    cd08:	ldrb	r0, [r0]
    cd0c:	ldr	r1, [fp, #-856]	; 0xfffffca8
    cd10:	add	r2, r1, #1
    cd14:	str	r2, [fp, #-856]	; 0xfffffca8
    cd18:	strb	r0, [r1]
    cd1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cd20:	mvn	r1, #0
    cd24:	add	r0, r0, r1
    cd28:	str	r0, [fp, #-24]	; 0xffffffe8
    cd2c:	ldr	r0, [fp, #-1012]	; 0xfffffc0c
    cd30:	lsr	r0, r0, #6
    cd34:	str	r0, [fp, #-1012]	; 0xfffffc0c
    cd38:	b	ccb4 <rb_sha512_crypt_r+0x136c>
    cd3c:	b	cd40 <rb_sha512_crypt_r+0x13f8>
    cd40:	b	cd44 <rb_sha512_crypt_r+0x13fc>
    cd44:	ldrb	r0, [fp, #-32]	; 0xffffffe0
    cd48:	lsl	r0, r0, #16
    cd4c:	ldrb	r1, [fp, #-74]	; 0xffffffb6
    cd50:	lsl	r1, r1, #8
    cd54:	orr	r0, r0, r1
    cd58:	ldrb	r1, [fp, #-53]	; 0xffffffcb
    cd5c:	orr	r0, r0, r1
    cd60:	str	r0, [fp, #-1020]	; 0xfffffc04
    cd64:	movw	r0, #4
    cd68:	str	r0, [fp, #-1024]	; 0xfffffc00
    cd6c:	ldr	r0, [fp, #-1024]	; 0xfffffc00
    cd70:	mvn	r1, #0
    cd74:	add	r1, r0, r1
    cd78:	str	r1, [fp, #-1024]	; 0xfffffc00
    cd7c:	cmp	r0, #0
    cd80:	movw	r0, #0
    cd84:	str	r0, [fp, #-1280]	; 0xfffffb00
    cd88:	ble	cda0 <rb_sha512_crypt_r+0x1458>
    cd8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cd90:	cmp	r0, #0
    cd94:	movw	r0, #0
    cd98:	movgt	r0, #1
    cd9c:	str	r0, [fp, #-1280]	; 0xfffffb00
    cda0:	ldr	r0, [fp, #-1280]	; 0xfffffb00
    cda4:	tst	r0, #1
    cda8:	beq	cdf4 <rb_sha512_crypt_r+0x14ac>
    cdac:	ldr	r0, [pc, #1656]	; d42c <rb_sha512_crypt_r+0x1ae4>
    cdb0:	add	r0, pc, r0
    cdb4:	ldr	r1, [fp, #-1020]	; 0xfffffc04
    cdb8:	and	r1, r1, #63	; 0x3f
    cdbc:	add	r0, r0, r1
    cdc0:	ldrb	r0, [r0]
    cdc4:	ldr	r1, [fp, #-856]	; 0xfffffca8
    cdc8:	add	r2, r1, #1
    cdcc:	str	r2, [fp, #-856]	; 0xfffffca8
    cdd0:	strb	r0, [r1]
    cdd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cdd8:	mvn	r1, #0
    cddc:	add	r0, r0, r1
    cde0:	str	r0, [fp, #-24]	; 0xffffffe8
    cde4:	ldr	r0, [fp, #-1020]	; 0xfffffc04
    cde8:	lsr	r0, r0, #6
    cdec:	str	r0, [fp, #-1020]	; 0xfffffc04
    cdf0:	b	cd6c <rb_sha512_crypt_r+0x1424>
    cdf4:	b	cdf8 <rb_sha512_crypt_r+0x14b0>
    cdf8:	b	cdfc <rb_sha512_crypt_r+0x14b4>
    cdfc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
    ce00:	lsl	r0, r0, #16
    ce04:	ldrb	r1, [fp, #-52]	; 0xffffffcc
    ce08:	lsl	r1, r1, #8
    ce0c:	orr	r0, r0, r1
    ce10:	ldrb	r1, [fp, #-31]	; 0xffffffe1
    ce14:	orr	r0, r0, r1
    ce18:	str	r0, [fp, #-1028]	; 0xfffffbfc
    ce1c:	movw	r0, #4
    ce20:	str	r0, [fp, #-1032]	; 0xfffffbf8
    ce24:	ldr	r0, [fp, #-1032]	; 0xfffffbf8
    ce28:	mvn	r1, #0
    ce2c:	add	r1, r0, r1
    ce30:	str	r1, [fp, #-1032]	; 0xfffffbf8
    ce34:	cmp	r0, #0
    ce38:	movw	r0, #0
    ce3c:	str	r0, [fp, #-1284]	; 0xfffffafc
    ce40:	ble	ce58 <rb_sha512_crypt_r+0x1510>
    ce44:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ce48:	cmp	r0, #0
    ce4c:	movw	r0, #0
    ce50:	movgt	r0, #1
    ce54:	str	r0, [fp, #-1284]	; 0xfffffafc
    ce58:	ldr	r0, [fp, #-1284]	; 0xfffffafc
    ce5c:	tst	r0, #1
    ce60:	beq	ceac <rb_sha512_crypt_r+0x1564>
    ce64:	ldr	r0, [pc, #1468]	; d428 <rb_sha512_crypt_r+0x1ae0>
    ce68:	add	r0, pc, r0
    ce6c:	ldr	r1, [fp, #-1028]	; 0xfffffbfc
    ce70:	and	r1, r1, #63	; 0x3f
    ce74:	add	r0, r0, r1
    ce78:	ldrb	r0, [r0]
    ce7c:	ldr	r1, [fp, #-856]	; 0xfffffca8
    ce80:	add	r2, r1, #1
    ce84:	str	r2, [fp, #-856]	; 0xfffffca8
    ce88:	strb	r0, [r1]
    ce8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ce90:	mvn	r1, #0
    ce94:	add	r0, r0, r1
    ce98:	str	r0, [fp, #-24]	; 0xffffffe8
    ce9c:	ldr	r0, [fp, #-1028]	; 0xfffffbfc
    cea0:	lsr	r0, r0, #6
    cea4:	str	r0, [fp, #-1028]	; 0xfffffbfc
    cea8:	b	ce24 <rb_sha512_crypt_r+0x14dc>
    ceac:	b	ceb0 <rb_sha512_crypt_r+0x1568>
    ceb0:	b	ceb4 <rb_sha512_crypt_r+0x156c>
    ceb4:	ldrb	r0, [fp, #-51]	; 0xffffffcd
    ceb8:	lsl	r0, r0, #16
    cebc:	ldrb	r1, [fp, #-30]	; 0xffffffe2
    cec0:	lsl	r1, r1, #8
    cec4:	orr	r0, r0, r1
    cec8:	ldrb	r1, [fp, #-72]	; 0xffffffb8
    cecc:	orr	r0, r0, r1
    ced0:	str	r0, [fp, #-1036]	; 0xfffffbf4
    ced4:	movw	r0, #4
    ced8:	str	r0, [fp, #-1040]	; 0xfffffbf0
    cedc:	ldr	r0, [fp, #-1040]	; 0xfffffbf0
    cee0:	mvn	r1, #0
    cee4:	add	r1, r0, r1
    cee8:	str	r1, [fp, #-1040]	; 0xfffffbf0
    ceec:	cmp	r0, #0
    cef0:	movw	r0, #0
    cef4:	str	r0, [fp, #-1288]	; 0xfffffaf8
    cef8:	ble	cf10 <rb_sha512_crypt_r+0x15c8>
    cefc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cf00:	cmp	r0, #0
    cf04:	movw	r0, #0
    cf08:	movgt	r0, #1
    cf0c:	str	r0, [fp, #-1288]	; 0xfffffaf8
    cf10:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
    cf14:	tst	r0, #1
    cf18:	beq	cf68 <rb_sha512_crypt_r+0x1620>
    cf1c:	ldr	r0, [pc, #1280]	; d424 <rb_sha512_crypt_r+0x1adc>
    cf20:	add	r0, pc, r0
    cf24:	ldr	r1, [fp, #-1036]	; 0xfffffbf4
    cf28:	and	r1, r1, #63	; 0x3f
    cf2c:	add	r0, r0, r1
    cf30:	ldrb	r0, [r0]
    cf34:	ldr	r1, [fp, #-856]	; 0xfffffca8
    cf38:	add	r2, r1, #1
    cf3c:	str	r2, [fp, #-856]	; 0xfffffca8
    cf40:	strb	r0, [r1]
    cf44:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cf48:	mvn	r1, #0
    cf4c:	add	r0, r0, r1
    cf50:	str	r0, [fp, #-24]	; 0xffffffe8
    cf54:	ldr	r0, [fp, #-1036]	; 0xfffffbf4
    cf58:	lsr	r0, r0, #6
    cf5c:	str	r0, [fp, #-1036]	; 0xfffffbf4
    cf60:	b	cedc <rb_sha512_crypt_r+0x1594>
    cf64:	.word	0x0001658c
    cf68:	b	cf6c <rb_sha512_crypt_r+0x1624>
    cf6c:	b	cf70 <rb_sha512_crypt_r+0x1628>
    cf70:	ldrb	r0, [fp, #-29]	; 0xffffffe3
    cf74:	lsl	r0, r0, #16
    cf78:	ldrb	r1, [fp, #-71]	; 0xffffffb9
    cf7c:	lsl	r1, r1, #8
    cf80:	orr	r0, r0, r1
    cf84:	ldrb	r1, [fp, #-50]	; 0xffffffce
    cf88:	orr	r0, r0, r1
    cf8c:	str	r0, [fp, #-1044]	; 0xfffffbec
    cf90:	movw	r0, #4
    cf94:	str	r0, [fp, #-1048]	; 0xfffffbe8
    cf98:	ldr	r0, [fp, #-1048]	; 0xfffffbe8
    cf9c:	mvn	r1, #0
    cfa0:	add	r1, r0, r1
    cfa4:	str	r1, [fp, #-1048]	; 0xfffffbe8
    cfa8:	cmp	r0, #0
    cfac:	movw	r0, #0
    cfb0:	str	r0, [fp, #-1292]	; 0xfffffaf4
    cfb4:	ble	cfcc <rb_sha512_crypt_r+0x1684>
    cfb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cfbc:	cmp	r0, #0
    cfc0:	movw	r0, #0
    cfc4:	movgt	r0, #1
    cfc8:	str	r0, [fp, #-1292]	; 0xfffffaf4
    cfcc:	ldr	r0, [fp, #-1292]	; 0xfffffaf4
    cfd0:	tst	r0, #1
    cfd4:	beq	d028 <rb_sha512_crypt_r+0x16e0>
    cfd8:	ldr	r0, [pc, #1088]	; d420 <rb_sha512_crypt_r+0x1ad8>
    cfdc:	add	r0, pc, r0
    cfe0:	ldr	r1, [fp, #-1044]	; 0xfffffbec
    cfe4:	and	r1, r1, #63	; 0x3f
    cfe8:	add	r0, r0, r1
    cfec:	ldrb	r0, [r0]
    cff0:	ldr	r1, [fp, #-856]	; 0xfffffca8
    cff4:	add	r2, r1, #1
    cff8:	str	r2, [fp, #-856]	; 0xfffffca8
    cffc:	strb	r0, [r1]
    d000:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d004:	mvn	r1, #0
    d008:	add	r0, r0, r1
    d00c:	str	r0, [fp, #-24]	; 0xffffffe8
    d010:	ldr	r0, [fp, #-1044]	; 0xfffffbec
    d014:	lsr	r0, r0, #6
    d018:	str	r0, [fp, #-1044]	; 0xfffffbec
    d01c:	b	cf98 <rb_sha512_crypt_r+0x1650>
    d020:	.word	0x000167dc
    d024:	.word	0x000164c4
    d028:	b	d02c <rb_sha512_crypt_r+0x16e4>
    d02c:	b	d030 <rb_sha512_crypt_r+0x16e8>
    d030:	ldrb	r0, [fp, #-70]	; 0xffffffba
    d034:	lsl	r0, r0, #16
    d038:	ldrb	r1, [fp, #-49]	; 0xffffffcf
    d03c:	lsl	r1, r1, #8
    d040:	orr	r0, r0, r1
    d044:	ldrb	r1, [fp, #-28]	; 0xffffffe4
    d048:	orr	r0, r0, r1
    d04c:	str	r0, [fp, #-1052]	; 0xfffffbe4
    d050:	movw	r0, #4
    d054:	str	r0, [fp, #-1056]	; 0xfffffbe0
    d058:	ldr	r0, [fp, #-1056]	; 0xfffffbe0
    d05c:	mvn	r1, #0
    d060:	add	r1, r0, r1
    d064:	str	r1, [fp, #-1056]	; 0xfffffbe0
    d068:	cmp	r0, #0
    d06c:	movw	r0, #0
    d070:	str	r0, [fp, #-1296]	; 0xfffffaf0
    d074:	ble	d08c <rb_sha512_crypt_r+0x1744>
    d078:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d07c:	cmp	r0, #0
    d080:	movw	r0, #0
    d084:	movgt	r0, #1
    d088:	str	r0, [fp, #-1296]	; 0xfffffaf0
    d08c:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
    d090:	tst	r0, #1
    d094:	beq	d0e0 <rb_sha512_crypt_r+0x1798>
    d098:	ldr	r0, [pc, #892]	; d41c <rb_sha512_crypt_r+0x1ad4>
    d09c:	add	r0, pc, r0
    d0a0:	ldr	r1, [fp, #-1052]	; 0xfffffbe4
    d0a4:	and	r1, r1, #63	; 0x3f
    d0a8:	add	r0, r0, r1
    d0ac:	ldrb	r0, [r0]
    d0b0:	ldr	r1, [fp, #-856]	; 0xfffffca8
    d0b4:	add	r2, r1, #1
    d0b8:	str	r2, [fp, #-856]	; 0xfffffca8
    d0bc:	strb	r0, [r1]
    d0c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d0c4:	mvn	r1, #0
    d0c8:	add	r0, r0, r1
    d0cc:	str	r0, [fp, #-24]	; 0xffffffe8
    d0d0:	ldr	r0, [fp, #-1052]	; 0xfffffbe4
    d0d4:	lsr	r0, r0, #6
    d0d8:	str	r0, [fp, #-1052]	; 0xfffffbe4
    d0dc:	b	d058 <rb_sha512_crypt_r+0x1710>
    d0e0:	b	d0e4 <rb_sha512_crypt_r+0x179c>
    d0e4:	b	d0e8 <rb_sha512_crypt_r+0x17a0>
    d0e8:	ldrb	r0, [fp, #-48]	; 0xffffffd0
    d0ec:	lsl	r0, r0, #16
    d0f0:	ldrb	r1, [fp, #-27]	; 0xffffffe5
    d0f4:	lsl	r1, r1, #8
    d0f8:	orr	r0, r0, r1
    d0fc:	ldrb	r1, [fp, #-69]	; 0xffffffbb
    d100:	orr	r0, r0, r1
    d104:	str	r0, [fp, #-1060]	; 0xfffffbdc
    d108:	movw	r0, #4
    d10c:	str	r0, [fp, #-1064]	; 0xfffffbd8
    d110:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
    d114:	mvn	r1, #0
    d118:	add	r1, r0, r1
    d11c:	str	r1, [fp, #-1064]	; 0xfffffbd8
    d120:	cmp	r0, #0
    d124:	movw	r0, #0
    d128:	str	r0, [fp, #-1300]	; 0xfffffaec
    d12c:	ble	d144 <rb_sha512_crypt_r+0x17fc>
    d130:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d134:	cmp	r0, #0
    d138:	movw	r0, #0
    d13c:	movgt	r0, #1
    d140:	str	r0, [fp, #-1300]	; 0xfffffaec
    d144:	ldr	r0, [fp, #-1300]	; 0xfffffaec
    d148:	tst	r0, #1
    d14c:	beq	d198 <rb_sha512_crypt_r+0x1850>
    d150:	ldr	r0, [pc, #704]	; d418 <rb_sha512_crypt_r+0x1ad0>
    d154:	add	r0, pc, r0
    d158:	ldr	r1, [fp, #-1060]	; 0xfffffbdc
    d15c:	and	r1, r1, #63	; 0x3f
    d160:	add	r0, r0, r1
    d164:	ldrb	r0, [r0]
    d168:	ldr	r1, [fp, #-856]	; 0xfffffca8
    d16c:	add	r2, r1, #1
    d170:	str	r2, [fp, #-856]	; 0xfffffca8
    d174:	strb	r0, [r1]
    d178:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d17c:	mvn	r1, #0
    d180:	add	r0, r0, r1
    d184:	str	r0, [fp, #-24]	; 0xffffffe8
    d188:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
    d18c:	lsr	r0, r0, #6
    d190:	str	r0, [fp, #-1060]	; 0xfffffbdc
    d194:	b	d110 <rb_sha512_crypt_r+0x17c8>
    d198:	b	d19c <rb_sha512_crypt_r+0x1854>
    d19c:	b	d1a0 <rb_sha512_crypt_r+0x1858>
    d1a0:	ldrb	r0, [fp, #-26]	; 0xffffffe6
    d1a4:	lsl	r0, r0, #16
    d1a8:	ldrb	r1, [fp, #-68]	; 0xffffffbc
    d1ac:	lsl	r1, r1, #8
    d1b0:	orr	r0, r0, r1
    d1b4:	ldrb	r1, [fp, #-47]	; 0xffffffd1
    d1b8:	orr	r0, r0, r1
    d1bc:	str	r0, [fp, #-1068]	; 0xfffffbd4
    d1c0:	movw	r0, #4
    d1c4:	str	r0, [fp, #-1072]	; 0xfffffbd0
    d1c8:	ldr	r0, [fp, #-1072]	; 0xfffffbd0
    d1cc:	mvn	r1, #0
    d1d0:	add	r1, r0, r1
    d1d4:	str	r1, [fp, #-1072]	; 0xfffffbd0
    d1d8:	cmp	r0, #0
    d1dc:	movw	r0, #0
    d1e0:	str	r0, [fp, #-1304]	; 0xfffffae8
    d1e4:	ble	d1fc <rb_sha512_crypt_r+0x18b4>
    d1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d1ec:	cmp	r0, #0
    d1f0:	movw	r0, #0
    d1f4:	movgt	r0, #1
    d1f8:	str	r0, [fp, #-1304]	; 0xfffffae8
    d1fc:	ldr	r0, [fp, #-1304]	; 0xfffffae8
    d200:	tst	r0, #1
    d204:	beq	d250 <rb_sha512_crypt_r+0x1908>
    d208:	ldr	r0, [pc, #516]	; d414 <rb_sha512_crypt_r+0x1acc>
    d20c:	add	r0, pc, r0
    d210:	ldr	r1, [fp, #-1068]	; 0xfffffbd4
    d214:	and	r1, r1, #63	; 0x3f
    d218:	add	r0, r0, r1
    d21c:	ldrb	r0, [r0]
    d220:	ldr	r1, [fp, #-856]	; 0xfffffca8
    d224:	add	r2, r1, #1
    d228:	str	r2, [fp, #-856]	; 0xfffffca8
    d22c:	strb	r0, [r1]
    d230:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d234:	mvn	r1, #0
    d238:	add	r0, r0, r1
    d23c:	str	r0, [fp, #-24]	; 0xffffffe8
    d240:	ldr	r0, [fp, #-1068]	; 0xfffffbd4
    d244:	lsr	r0, r0, #6
    d248:	str	r0, [fp, #-1068]	; 0xfffffbd4
    d24c:	b	d1c8 <rb_sha512_crypt_r+0x1880>
    d250:	b	d254 <rb_sha512_crypt_r+0x190c>
    d254:	b	d258 <rb_sha512_crypt_r+0x1910>
    d258:	ldrb	r0, [fp, #-25]	; 0xffffffe7
    d25c:	orr	r0, r0, #0
    d260:	str	r0, [fp, #-1076]	; 0xfffffbcc
    d264:	movw	r0, #2
    d268:	str	r0, [fp, #-1080]	; 0xfffffbc8
    d26c:	ldr	r0, [fp, #-1080]	; 0xfffffbc8
    d270:	mvn	r1, #0
    d274:	add	r1, r0, r1
    d278:	str	r1, [fp, #-1080]	; 0xfffffbc8
    d27c:	cmp	r0, #0
    d280:	movw	r0, #0
    d284:	str	r0, [fp, #-1308]	; 0xfffffae4
    d288:	ble	d2a0 <rb_sha512_crypt_r+0x1958>
    d28c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d290:	cmp	r0, #0
    d294:	movw	r0, #0
    d298:	movgt	r0, #1
    d29c:	str	r0, [fp, #-1308]	; 0xfffffae4
    d2a0:	ldr	r0, [fp, #-1308]	; 0xfffffae4
    d2a4:	tst	r0, #1
    d2a8:	beq	d2f4 <rb_sha512_crypt_r+0x19ac>
    d2ac:	ldr	r0, [pc, #348]	; d410 <rb_sha512_crypt_r+0x1ac8>
    d2b0:	add	r0, pc, r0
    d2b4:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
    d2b8:	and	r1, r1, #63	; 0x3f
    d2bc:	add	r0, r0, r1
    d2c0:	ldrb	r0, [r0]
    d2c4:	ldr	r1, [fp, #-856]	; 0xfffffca8
    d2c8:	add	r2, r1, #1
    d2cc:	str	r2, [fp, #-856]	; 0xfffffca8
    d2d0:	strb	r0, [r1]
    d2d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d2d8:	mvn	r1, #0
    d2dc:	add	r0, r0, r1
    d2e0:	str	r0, [fp, #-24]	; 0xffffffe8
    d2e4:	ldr	r0, [fp, #-1076]	; 0xfffffbcc
    d2e8:	lsr	r0, r0, #6
    d2ec:	str	r0, [fp, #-1076]	; 0xfffffbcc
    d2f0:	b	d26c <rb_sha512_crypt_r+0x1924>
    d2f4:	b	d2f8 <rb_sha512_crypt_r+0x19b0>
    d2f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d2fc:	cmp	r0, #0
    d300:	bgt	d320 <rb_sha512_crypt_r+0x19d8>
    d304:	bl	56c8 <__errno_location@plt>
    d308:	movw	r1, #34	; 0x22
    d30c:	str	r1, [r0]
    d310:	movw	r0, #0
    d314:	str	r0, [fp, #-20]	; 0xffffffec
    d318:	b	d32c <rb_sha512_crypt_r+0x19e4>
    d31c:	.word	0x00015cfc
    d320:	ldr	r0, [fp, #-856]	; 0xfffffca8
    d324:	movw	r1, #0
    d328:	strb	r1, [r0]
    d32c:	sub	r0, fp, #496	; 0x1f0
    d330:	bl	d460 <rb_sha512_init_ctx>
    d334:	sub	r1, fp, #88	; 0x58
    d338:	sub	r0, fp, #496	; 0x1f0
    d33c:	bl	d83c <rb_sha512_finish_ctx>
    d340:	sub	r1, fp, #152	; 0x98
    d344:	str	r0, [fp, #-1312]	; 0xfffffae0
    d348:	mov	r0, r1
    d34c:	movw	r1, #0
    d350:	and	r2, r1, #255	; 0xff
    d354:	str	r1, [fp, #-1316]	; 0xfffffadc
    d358:	mov	r1, r2
    d35c:	movw	r2, #64	; 0x40
    d360:	bl	4ff0 <memset@plt>
    d364:	ldr	r0, [fp, #-868]	; 0xfffffc9c
    d368:	ldr	r2, [fp, #-848]	; 0xfffffcb0
    d36c:	ldr	r1, [fp, #-1316]	; 0xfffffadc
    d370:	and	r1, r1, #255	; 0xff
    d374:	bl	4ff0 <memset@plt>
    d378:	ldr	r0, [fp, #-872]	; 0xfffffc98
    d37c:	ldr	r2, [fp, #-844]	; 0xfffffcb4
    d380:	ldr	r1, [fp, #-1316]	; 0xfffffadc
    d384:	and	r1, r1, #255	; 0xff
    d388:	bl	4ff0 <memset@plt>
    d38c:	sub	r0, fp, #496	; 0x1f0
    d390:	ldr	r1, [fp, #-1316]	; 0xfffffadc
    d394:	and	r1, r1, #255	; 0xff
    d398:	movw	r2, #344	; 0x158
    d39c:	str	r2, [fp, #-1320]	; 0xfffffad8
    d3a0:	bl	4ff0 <memset@plt>
    d3a4:	sub	r0, fp, #840	; 0x348
    d3a8:	ldr	r1, [fp, #-1316]	; 0xfffffadc
    d3ac:	and	r1, r1, #255	; 0xff
    d3b0:	ldr	r2, [fp, #-1320]	; 0xfffffad8
    d3b4:	bl	4ff0 <memset@plt>
    d3b8:	ldr	r0, [fp, #-860]	; 0xfffffca4
    d3bc:	movw	r1, #0
    d3c0:	cmp	r0, r1
    d3c4:	beq	d3dc <rb_sha512_crypt_r+0x1a94>
    d3c8:	ldr	r0, [fp, #-860]	; 0xfffffca4
    d3cc:	ldr	r2, [fp, #-848]	; 0xfffffcb0
    d3d0:	movw	r1, #0
    d3d4:	and	r1, r1, #255	; 0xff
    d3d8:	bl	4ff0 <memset@plt>
    d3dc:	ldr	r0, [fp, #-864]	; 0xfffffca0
    d3e0:	movw	r1, #0
    d3e4:	cmp	r0, r1
    d3e8:	beq	d400 <rb_sha512_crypt_r+0x1ab8>
    d3ec:	ldr	r0, [fp, #-864]	; 0xfffffca0
    d3f0:	ldr	r2, [fp, #-844]	; 0xfffffcb4
    d3f4:	movw	r1, #0
    d3f8:	and	r1, r1, #255	; 0xff
    d3fc:	bl	4ff0 <memset@plt>
    d400:	ldr	r0, [fp, #-20]	; 0xffffffec
    d404:	sub	sp, fp, #8
    d408:	pop	{r4, sl, fp, pc}
    d40c:	.word	0x00015c44
    d410:	.word	0x00014dd8
    d414:	.word	0x00014e7c
    d418:	.word	0x00014f34
    d41c:	.word	0x00014fec
    d420:	.word	0x000150ac
    d424:	.word	0x00015168
    d428:	.word	0x00015220
    d42c:	.word	0x000152d8
    d430:	.word	0x00015390
    d434:	.word	0x00015448
    d438:	.word	0x00015500
    d43c:	.word	0x000155b8
    d440:	.word	0x00015678
    d444:	.word	0x00015738
    d448:	.word	0x000157f4
    d44c:	.word	0x000158ac
    d450:	.word	0x00015964
    d454:	.word	0x00015a1c
    d458:	.word	0x00015ad4
    d45c:	.word	0x00015b8c

0000d460 <rb_sha512_init_ctx>:
    d460:	sub	sp, sp, #4
    d464:	str	r0, [sp]
    d468:	ldr	r0, [sp]
    d46c:	movw	r1, #58983	; 0xe667
    d470:	movt	r1, #27145	; 0x6a09
    d474:	str	r1, [r0, #4]
    d478:	movw	r1, #51464	; 0xc908
    d47c:	movt	r1, #62396	; 0xf3bc
    d480:	str	r1, [r0]
    d484:	ldr	r0, [sp]
    d488:	movw	r1, #44677	; 0xae85
    d48c:	movt	r1, #47975	; 0xbb67
    d490:	str	r1, [r0, #12]
    d494:	movw	r1, #42811	; 0xa73b
    d498:	movt	r1, #33994	; 0x84ca
    d49c:	str	r1, [r0, #8]
    d4a0:	ldr	r0, [sp]
    d4a4:	movw	r1, #62322	; 0xf372
    d4a8:	movt	r1, #15470	; 0x3c6e
    d4ac:	str	r1, [r0, #20]
    d4b0:	movw	r1, #63531	; 0xf82b
    d4b4:	movt	r1, #65172	; 0xfe94
    d4b8:	str	r1, [r0, #16]
    d4bc:	ldr	r0, [sp]
    d4c0:	movw	r1, #62778	; 0xf53a
    d4c4:	movt	r1, #42319	; 0xa54f
    d4c8:	str	r1, [r0, #28]
    d4cc:	movw	r1, #14065	; 0x36f1
    d4d0:	movt	r1, #24349	; 0x5f1d
    d4d4:	str	r1, [r0, #24]
    d4d8:	ldr	r0, [sp]
    d4dc:	movw	r1, #21119	; 0x527f
    d4e0:	movt	r1, #20750	; 0x510e
    d4e4:	str	r1, [r0, #36]	; 0x24
    d4e8:	movw	r1, #33489	; 0x82d1
    d4ec:	movt	r1, #44518	; 0xade6
    d4f0:	str	r1, [r0, #32]
    d4f4:	ldr	r0, [sp]
    d4f8:	movw	r1, #26764	; 0x688c
    d4fc:	movt	r1, #39685	; 0x9b05
    d500:	str	r1, [r0, #44]	; 0x2c
    d504:	movw	r1, #27679	; 0x6c1f
    d508:	movt	r1, #11070	; 0x2b3e
    d50c:	str	r1, [r0, #40]	; 0x28
    d510:	ldr	r0, [sp]
    d514:	movw	r1, #55723	; 0xd9ab
    d518:	movt	r1, #8067	; 0x1f83
    d51c:	str	r1, [r0, #52]	; 0x34
    d520:	movw	r1, #48491	; 0xbd6b
    d524:	movt	r1, #64321	; 0xfb41
    d528:	str	r1, [r0, #48]	; 0x30
    d52c:	ldr	r0, [sp]
    d530:	movw	r1, #52505	; 0xcd19
    d534:	movt	r1, #23520	; 0x5be0
    d538:	str	r1, [r0, #60]	; 0x3c
    d53c:	movw	r1, #8569	; 0x2179
    d540:	movt	r1, #4990	; 0x137e
    d544:	str	r1, [r0, #56]	; 0x38
    d548:	ldr	r0, [sp]
    d54c:	mov	r1, #0
    d550:	str	r1, [r0, #76]	; 0x4c
    d554:	str	r1, [r0, #72]	; 0x48
    d558:	ldr	r0, [sp]
    d55c:	str	r1, [r0, #68]	; 0x44
    d560:	str	r1, [r0, #64]	; 0x40
    d564:	ldr	r0, [sp]
    d568:	str	r1, [r0, #84]	; 0x54
    d56c:	str	r1, [r0, #80]	; 0x50
    d570:	add	sp, sp, #4
    d574:	bx	lr

0000d578 <rb_sha512_process_bytes>:
    d578:	push	{fp, lr}
    d57c:	mov	fp, sp
    d580:	sub	sp, sp, #48	; 0x30
    d584:	str	r0, [fp, #-4]
    d588:	str	r1, [fp, #-8]
    d58c:	str	r2, [fp, #-12]
    d590:	ldr	r0, [fp, #-12]
    d594:	ldr	r1, [r0, #80]	; 0x50
    d598:	ldr	r0, [r0, #84]	; 0x54
    d59c:	orr	r0, r1, r0
    d5a0:	cmp	r0, #0
    d5a4:	beq	d6dc <rb_sha512_process_bytes+0x164>
    d5a8:	b	d5ac <rb_sha512_process_bytes+0x34>
    d5ac:	ldr	r0, [fp, #-12]
    d5b0:	ldr	r0, [r0, #80]	; 0x50
    d5b4:	str	r0, [fp, #-16]
    d5b8:	ldr	r0, [fp, #-16]
    d5bc:	movw	r1, #256	; 0x100
    d5c0:	sub	r0, r1, r0
    d5c4:	ldr	r1, [fp, #-8]
    d5c8:	cmp	r0, r1
    d5cc:	bls	d5dc <rb_sha512_process_bytes+0x64>
    d5d0:	ldr	r0, [fp, #-8]
    d5d4:	str	r0, [sp, #20]
    d5d8:	b	d5ec <rb_sha512_process_bytes+0x74>
    d5dc:	ldr	r0, [fp, #-16]
    d5e0:	movw	r1, #256	; 0x100
    d5e4:	sub	r0, r1, r0
    d5e8:	str	r0, [sp, #20]
    d5ec:	ldr	r0, [sp, #20]
    d5f0:	str	r0, [fp, #-20]	; 0xffffffec
    d5f4:	ldr	r0, [fp, #-12]
    d5f8:	ldr	r1, [fp, #-16]
    d5fc:	add	r0, r0, r1
    d600:	add	r0, r0, #88	; 0x58
    d604:	ldr	r1, [fp, #-4]
    d608:	ldr	r2, [fp, #-20]	; 0xffffffec
    d60c:	bl	51dc <memcpy@plt>
    d610:	ldr	r1, [fp, #-20]	; 0xffffffec
    d614:	ldr	r2, [fp, #-12]
    d618:	ldr	r3, [r2, #80]	; 0x50
    d61c:	ldr	ip, [r2, #84]	; 0x54
    d620:	adds	r1, r3, r1
    d624:	adc	r3, ip, #0
    d628:	str	r1, [r2, #80]	; 0x50
    d62c:	str	r3, [r2, #84]	; 0x54
    d630:	ldr	r1, [fp, #-12]
    d634:	ldr	r2, [r1, #80]	; 0x50
    d638:	ldr	r1, [r1, #84]	; 0x54
    d63c:	subs	r2, r2, #129	; 0x81
    d640:	sbcs	r1, r1, #0
    d644:	bcc	d6bc <rb_sha512_process_bytes+0x144>
    d648:	b	d64c <rb_sha512_process_bytes+0xd4>
    d64c:	ldr	r0, [fp, #-12]
    d650:	add	r1, r0, #88	; 0x58
    d654:	ldr	r2, [r0, #80]	; 0x50
    d658:	bic	r2, r2, #127	; 0x7f
    d65c:	str	r0, [sp, #16]
    d660:	mov	r0, r1
    d664:	mov	r1, r2
    d668:	ldr	r2, [sp, #16]
    d66c:	bl	daf8 <rb_sha512_process_block>
    d670:	ldr	r0, [fp, #-12]
    d674:	ldr	r1, [r0, #80]	; 0x50
    d678:	and	r1, r1, #127	; 0x7f
    d67c:	mov	r2, #0
    d680:	str	r2, [r0, #84]	; 0x54
    d684:	str	r1, [r0, #80]	; 0x50
    d688:	ldr	r0, [fp, #-12]
    d68c:	add	r1, r0, #88	; 0x58
    d690:	ldr	r2, [fp, #-16]
    d694:	ldr	r3, [fp, #-20]	; 0xffffffec
    d698:	add	r2, r2, r3
    d69c:	bic	r2, r2, #127	; 0x7f
    d6a0:	add	r2, r1, r2
    d6a4:	ldr	r0, [r0, #80]	; 0x50
    d6a8:	str	r0, [sp, #12]
    d6ac:	mov	r0, r1
    d6b0:	mov	r1, r2
    d6b4:	ldr	r2, [sp, #12]
    d6b8:	bl	51dc <memcpy@plt>
    d6bc:	ldr	r0, [fp, #-4]
    d6c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    d6c4:	add	r0, r0, r1
    d6c8:	str	r0, [fp, #-4]
    d6cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    d6d0:	ldr	r1, [fp, #-8]
    d6d4:	sub	r0, r1, r0
    d6d8:	str	r0, [fp, #-8]
    d6dc:	ldr	r0, [fp, #-8]
    d6e0:	cmp	r0, #128	; 0x80
    d6e4:	bcc	d794 <rb_sha512_process_bytes+0x21c>
    d6e8:	ldr	r0, [fp, #-4]
    d6ec:	and	r0, r0, #7
    d6f0:	cmp	r0, #0
    d6f4:	beq	d754 <rb_sha512_process_bytes+0x1dc>
    d6f8:	b	d6fc <rb_sha512_process_bytes+0x184>
    d6fc:	ldr	r0, [fp, #-8]
    d700:	cmp	r0, #128	; 0x80
    d704:	bls	d750 <rb_sha512_process_bytes+0x1d8>
    d708:	ldr	r0, [fp, #-12]
    d70c:	add	r0, r0, #88	; 0x58
    d710:	ldr	r1, [fp, #-4]
    d714:	str	r0, [sp, #8]
    d718:	movw	r2, #128	; 0x80
    d71c:	str	r2, [sp, #4]
    d720:	bl	51dc <memcpy@plt>
    d724:	ldr	r2, [fp, #-12]
    d728:	ldr	r0, [sp, #8]
    d72c:	ldr	r1, [sp, #4]
    d730:	bl	daf8 <rb_sha512_process_block>
    d734:	ldr	r0, [fp, #-4]
    d738:	add	r0, r0, #128	; 0x80
    d73c:	str	r0, [fp, #-4]
    d740:	ldr	r0, [fp, #-8]
    d744:	sub	r0, r0, #128	; 0x80
    d748:	str	r0, [fp, #-8]
    d74c:	b	d6fc <rb_sha512_process_bytes+0x184>
    d750:	b	d790 <rb_sha512_process_bytes+0x218>
    d754:	ldr	r0, [fp, #-4]
    d758:	ldr	r1, [fp, #-8]
    d75c:	mvn	r2, #127	; 0x7f
    d760:	and	r1, r1, r2
    d764:	ldr	r2, [fp, #-12]
    d768:	bl	daf8 <rb_sha512_process_block>
    d76c:	ldr	r0, [fp, #-4]
    d770:	ldr	r1, [fp, #-8]
    d774:	mvn	r2, #127	; 0x7f
    d778:	and	r1, r1, r2
    d77c:	add	r0, r0, r1
    d780:	str	r0, [fp, #-4]
    d784:	ldr	r0, [fp, #-8]
    d788:	and	r0, r0, #127	; 0x7f
    d78c:	str	r0, [fp, #-8]
    d790:	b	d794 <rb_sha512_process_bytes+0x21c>
    d794:	ldr	r0, [fp, #-8]
    d798:	cmp	r0, #0
    d79c:	bls	d834 <rb_sha512_process_bytes+0x2bc>
    d7a0:	ldr	r0, [fp, #-12]
    d7a4:	ldr	r0, [r0, #80]	; 0x50
    d7a8:	str	r0, [sp, #24]
    d7ac:	ldr	r0, [fp, #-12]
    d7b0:	add	r0, r0, #88	; 0x58
    d7b4:	ldr	r1, [sp, #24]
    d7b8:	add	r0, r0, r1
    d7bc:	ldr	r1, [fp, #-4]
    d7c0:	ldr	r2, [fp, #-8]
    d7c4:	bl	51dc <memcpy@plt>
    d7c8:	ldr	r0, [fp, #-8]
    d7cc:	ldr	r1, [sp, #24]
    d7d0:	add	r0, r1, r0
    d7d4:	str	r0, [sp, #24]
    d7d8:	ldr	r0, [sp, #24]
    d7dc:	cmp	r0, #128	; 0x80
    d7e0:	bcc	d820 <rb_sha512_process_bytes+0x2a8>
    d7e4:	ldr	r0, [fp, #-12]
    d7e8:	add	r0, r0, #88	; 0x58
    d7ec:	ldr	r2, [fp, #-12]
    d7f0:	movw	r1, #128	; 0x80
    d7f4:	bl	daf8 <rb_sha512_process_block>
    d7f8:	ldr	r0, [sp, #24]
    d7fc:	sub	r0, r0, #128	; 0x80
    d800:	str	r0, [sp, #24]
    d804:	ldr	r0, [fp, #-12]
    d808:	add	r0, r0, #88	; 0x58
    d80c:	ldr	r1, [fp, #-12]
    d810:	add	r1, r1, #88	; 0x58
    d814:	add	r1, r1, #128	; 0x80
    d818:	ldr	r2, [sp, #24]
    d81c:	bl	51dc <memcpy@plt>
    d820:	ldr	r0, [sp, #24]
    d824:	ldr	r1, [fp, #-12]
    d828:	mov	r2, #0
    d82c:	str	r2, [r1, #84]	; 0x54
    d830:	str	r0, [r1, #80]	; 0x50
    d834:	mov	sp, fp
    d838:	pop	{fp, pc}

0000d83c <rb_sha512_finish_ctx>:
    d83c:	push	{r4, sl, fp, lr}
    d840:	add	fp, sp, #8
    d844:	sub	sp, sp, #48	; 0x30
    d848:	str	r0, [fp, #-12]
    d84c:	str	r1, [fp, #-16]
    d850:	ldr	r0, [fp, #-12]
    d854:	ldr	r1, [r0, #80]	; 0x50
    d858:	ldr	r0, [r0, #84]	; 0x54
    d85c:	str	r0, [fp, #-20]	; 0xffffffec
    d860:	str	r1, [fp, #-24]	; 0xffffffe8
    d864:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d868:	ldr	r1, [fp, #-20]	; 0xffffffec
    d86c:	ldr	r2, [fp, #-12]
    d870:	ldr	r3, [r2, #64]	; 0x40
    d874:	ldr	ip, [r2, #68]	; 0x44
    d878:	adds	r0, r3, r0
    d87c:	adc	r1, ip, r1
    d880:	str	r0, [r2, #64]	; 0x40
    d884:	str	r1, [r2, #68]	; 0x44
    d888:	ldr	r0, [fp, #-12]
    d88c:	ldr	r1, [r0, #64]	; 0x40
    d890:	ldr	r0, [r0, #68]	; 0x44
    d894:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d898:	ldr	r3, [fp, #-20]	; 0xffffffec
    d89c:	subs	r1, r1, r2
    d8a0:	sbcs	r0, r0, r3
    d8a4:	bcs	d8c8 <rb_sha512_finish_ctx+0x8c>
    d8a8:	b	d8ac <rb_sha512_finish_ctx+0x70>
    d8ac:	ldr	r0, [fp, #-12]
    d8b0:	ldr	r1, [r0, #72]	; 0x48
    d8b4:	ldr	r2, [r0, #76]	; 0x4c
    d8b8:	adds	r1, r1, #1
    d8bc:	adc	r2, r2, #0
    d8c0:	str	r1, [r0, #72]	; 0x48
    d8c4:	str	r2, [r0, #76]	; 0x4c
    d8c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d8cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    d8d0:	subs	r0, r0, #112	; 0x70
    d8d4:	sbcs	r1, r1, #0
    d8d8:	bcc	d8fc <rb_sha512_finish_ctx+0xc0>
    d8dc:	b	d8e0 <rb_sha512_finish_ctx+0xa4>
    d8e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d8e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    d8e8:	rsbs	r0, r0, #240	; 0xf0
    d8ec:	rsc	r1, r1, #0
    d8f0:	str	r0, [sp, #16]
    d8f4:	str	r1, [sp, #12]
    d8f8:	b	d918 <rb_sha512_finish_ctx+0xdc>
    d8fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d900:	ldr	r1, [fp, #-20]	; 0xffffffec
    d904:	rsbs	r0, r0, #112	; 0x70
    d908:	rsc	r1, r1, #0
    d90c:	str	r0, [sp, #16]
    d910:	str	r1, [sp, #12]
    d914:	b	d918 <rb_sha512_finish_ctx+0xdc>
    d918:	ldr	r0, [sp, #12]
    d91c:	ldr	r1, [sp, #16]
    d920:	str	r1, [sp, #24]
    d924:	ldr	r1, [fp, #-12]
    d928:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d92c:	add	r1, r1, r2
    d930:	add	r1, r1, #88	; 0x58
    d934:	ldr	r2, [sp, #24]
    d938:	ldr	r3, [pc, #436]	; daf4 <rb_sha512_finish_ctx+0x2b8>
    d93c:	add	r3, pc, r3
    d940:	str	r0, [sp, #8]
    d944:	mov	r0, r1
    d948:	mov	r1, r3
    d94c:	bl	51dc <memcpy@plt>
    d950:	ldr	r1, [fp, #-12]
    d954:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d958:	ldr	r3, [sp, #24]
    d95c:	add	r2, r2, r3
    d960:	add	r1, r2, r1
    d964:	add	r1, r1, #96	; 0x60
    d968:	str	r1, [sp, #28]
    d96c:	ldr	r1, [fp, #-12]
    d970:	ldr	r2, [r1, #64]	; 0x40
    d974:	ldr	r1, [r1, #68]	; 0x44
    d978:	lsl	r3, r1, #3
    d97c:	lsl	ip, r2, #11
    d980:	uxtb16	ip, ip
    d984:	orr	ip, ip, r2, lsl #27
    d988:	mov	lr, #65280	; 0xff00
    d98c:	and	r4, lr, r2, lsr #5
    d990:	orr	ip, ip, r4
    d994:	ubfx	r4, r2, #21, #8
    d998:	orr	ip, ip, r4
    d99c:	lsr	r2, r2, #5
    d9a0:	orr	r2, r2, r1, lsl #27
    d9a4:	and	r2, r2, #-16777216	; 0xff000000
    d9a8:	movw	r4, #8160	; 0x1fe0
    d9ac:	and	r4, r1, r4
    d9b0:	orr	r2, r2, r4, lsl #11
    d9b4:	and	r1, lr, r1, lsr #5
    d9b8:	orr	r1, r2, r1
    d9bc:	orr	r1, r1, r3, lsr #24
    d9c0:	ldr	r2, [sp, #28]
    d9c4:	str	ip, [r2, #4]
    d9c8:	str	r1, [r2]
    d9cc:	ldr	r1, [fp, #-12]
    d9d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d9d4:	ldr	r3, [sp, #24]
    d9d8:	add	r2, r2, r3
    d9dc:	add	r1, r1, r2
    d9e0:	add	r1, r1, #88	; 0x58
    d9e4:	str	r1, [sp, #28]
    d9e8:	ldr	r1, [fp, #-12]
    d9ec:	ldr	r2, [r1, #68]	; 0x44
    d9f0:	ldr	r3, [r1, #72]	; 0x48
    d9f4:	ldr	r1, [r1, #76]	; 0x4c
    d9f8:	lsl	r1, r1, #3
    d9fc:	orr	r1, r1, r3, lsr #29
    da00:	lsl	r3, r3, #3
    da04:	orr	r2, r3, r2, lsr #29
    da08:	lsl	r3, r2, #24
    da0c:	and	ip, r2, #65280	; 0xff00
    da10:	orr	r3, r3, ip, lsl #8
    da14:	and	ip, r2, #16711680	; 0xff0000
    da18:	orr	r3, r3, ip, lsr #8
    da1c:	orr	r2, r3, r2, lsr #24
    da20:	lsl	r3, r1, #8
    da24:	uxtb16	r3, r3
    da28:	orr	r3, r3, r1, lsl #24
    da2c:	and	ip, lr, r1, lsr #8
    da30:	orr	r3, r3, ip
    da34:	orr	r1, r3, r1, lsr #24
    da38:	ldr	r3, [sp, #28]
    da3c:	str	r2, [r3, #4]
    da40:	str	r1, [r3]
    da44:	ldr	r1, [fp, #-12]
    da48:	add	r1, r1, #88	; 0x58
    da4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    da50:	ldr	r3, [sp, #24]
    da54:	add	r2, r2, r3
    da58:	add	r2, r2, #16
    da5c:	ldr	r3, [fp, #-12]
    da60:	str	r0, [sp, #4]
    da64:	mov	r0, r1
    da68:	mov	r1, r2
    da6c:	mov	r2, r3
    da70:	bl	daf8 <rb_sha512_process_block>
    da74:	movw	r0, #0
    da78:	str	r0, [sp, #20]
    da7c:	ldr	r0, [sp, #20]
    da80:	cmp	r0, #8
    da84:	bcs	dae8 <rb_sha512_finish_ctx+0x2ac>
    da88:	ldr	r0, [fp, #-12]
    da8c:	ldr	r1, [sp, #20]
    da90:	ldr	r2, [r0, r1, lsl #3]!
    da94:	ldr	r0, [r0, #4]
    da98:	lsl	r3, r2, #24
    da9c:	and	ip, r2, #65280	; 0xff00
    daa0:	orr	r3, r3, ip, lsl #8
    daa4:	and	ip, r2, #16711680	; 0xff0000
    daa8:	orr	r3, r3, ip, lsr #8
    daac:	orr	r2, r3, r2, lsr #24
    dab0:	lsl	r3, r0, #8
    dab4:	uxtb16	r3, r3
    dab8:	orr	r3, r3, r0, lsl #24
    dabc:	mov	ip, #65280	; 0xff00
    dac0:	and	ip, ip, r0, lsr #8
    dac4:	orr	r3, r3, ip
    dac8:	orr	r0, r3, r0, lsr #24
    dacc:	ldr	r3, [fp, #-16]
    dad0:	str	r0, [r3, r1, lsl #3]!
    dad4:	str	r2, [r3, #4]
    dad8:	ldr	r0, [sp, #20]
    dadc:	add	r0, r0, #1
    dae0:	str	r0, [sp, #20]
    dae4:	b	da7c <rb_sha512_finish_ctx+0x240>
    dae8:	ldr	r0, [fp, #-16]
    daec:	sub	sp, fp, #8
    daf0:	pop	{r4, sl, fp, pc}
    daf4:	.word	0x00014ecc

0000daf8 <rb_sha512_process_block>:
    daf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dafc:	add	fp, sp, #28
    db00:	sub	sp, sp, #820	; 0x334
    db04:	str	r0, [fp, #-36]	; 0xffffffdc
    db08:	str	r1, [fp, #-40]	; 0xffffffd8
    db0c:	str	r2, [fp, #-44]	; 0xffffffd4
    db10:	ldr	r0, [fp, #-36]	; 0xffffffdc
    db14:	str	r0, [fp, #-48]	; 0xffffffd0
    db18:	ldr	r0, [fp, #-40]	; 0xffffffd8
    db1c:	lsr	r0, r0, #3
    db20:	str	r0, [fp, #-52]	; 0xffffffcc
    db24:	ldr	r0, [fp, #-44]	; 0xffffffd4
    db28:	ldr	r1, [r0]
    db2c:	ldr	r0, [r0, #4]
    db30:	str	r0, [fp, #-60]	; 0xffffffc4
    db34:	str	r1, [fp, #-64]	; 0xffffffc0
    db38:	ldr	r0, [fp, #-44]	; 0xffffffd4
    db3c:	ldr	r1, [r0, #8]
    db40:	ldr	r0, [r0, #12]
    db44:	str	r0, [fp, #-68]	; 0xffffffbc
    db48:	str	r1, [fp, #-72]	; 0xffffffb8
    db4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    db50:	ldr	r1, [r0, #16]
    db54:	ldr	r0, [r0, #20]
    db58:	str	r0, [fp, #-76]	; 0xffffffb4
    db5c:	str	r1, [fp, #-80]	; 0xffffffb0
    db60:	ldr	r0, [fp, #-44]	; 0xffffffd4
    db64:	ldr	r1, [r0, #24]
    db68:	ldr	r0, [r0, #28]
    db6c:	str	r0, [fp, #-84]	; 0xffffffac
    db70:	str	r1, [fp, #-88]	; 0xffffffa8
    db74:	ldr	r0, [fp, #-44]	; 0xffffffd4
    db78:	ldr	r1, [r0, #32]
    db7c:	ldr	r0, [r0, #36]	; 0x24
    db80:	str	r0, [fp, #-92]	; 0xffffffa4
    db84:	str	r1, [fp, #-96]	; 0xffffffa0
    db88:	ldr	r0, [fp, #-44]	; 0xffffffd4
    db8c:	ldr	r1, [r0, #40]	; 0x28
    db90:	ldr	r0, [r0, #44]	; 0x2c
    db94:	str	r0, [fp, #-100]	; 0xffffff9c
    db98:	str	r1, [fp, #-104]	; 0xffffff98
    db9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    dba0:	ldr	r1, [r0, #48]	; 0x30
    dba4:	ldr	r0, [r0, #52]	; 0x34
    dba8:	str	r0, [fp, #-108]	; 0xffffff94
    dbac:	str	r1, [fp, #-112]	; 0xffffff90
    dbb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    dbb4:	ldr	r1, [r0, #56]	; 0x38
    dbb8:	ldr	r0, [r0, #60]	; 0x3c
    dbbc:	str	r0, [fp, #-116]	; 0xffffff8c
    dbc0:	str	r1, [fp, #-120]	; 0xffffff88
    dbc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    dbc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    dbcc:	ldr	r2, [r1, #64]	; 0x40
    dbd0:	ldr	r3, [r1, #68]	; 0x44
    dbd4:	adds	r0, r2, r0
    dbd8:	adc	r2, r3, #0
    dbdc:	str	r0, [r1, #64]	; 0x40
    dbe0:	str	r2, [r1, #68]	; 0x44
    dbe4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    dbe8:	ldr	r1, [r0, #64]	; 0x40
    dbec:	ldr	r0, [r0, #68]	; 0x44
    dbf0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    dbf4:	subs	r1, r1, r2
    dbf8:	sbcs	r0, r0, #0
    dbfc:	bcs	dc20 <rb_sha512_process_block+0x128>
    dc00:	b	dc04 <rb_sha512_process_block+0x10c>
    dc04:	ldr	r0, [fp, #-44]	; 0xffffffd4
    dc08:	ldr	r1, [r0, #72]	; 0x48
    dc0c:	ldr	r2, [r0, #76]	; 0x4c
    dc10:	adds	r1, r1, #1
    dc14:	adc	r2, r2, #0
    dc18:	str	r1, [r0, #72]	; 0x48
    dc1c:	str	r2, [r0, #76]	; 0x4c
    dc20:	b	dc24 <rb_sha512_process_block+0x12c>
    dc24:	ldr	r0, [fp, #-52]	; 0xffffffcc
    dc28:	cmp	r0, #0
    dc2c:	bls	e138 <rb_sha512_process_block+0x640>
    dc30:	ldr	r0, [fp, #-64]	; 0xffffffc0
    dc34:	ldr	r1, [fp, #-60]	; 0xffffffc4
    dc38:	str	r1, [sp, #84]	; 0x54
    dc3c:	str	r0, [sp, #80]	; 0x50
    dc40:	ldr	r0, [fp, #-72]	; 0xffffffb8
    dc44:	ldr	r1, [fp, #-68]	; 0xffffffbc
    dc48:	str	r1, [sp, #76]	; 0x4c
    dc4c:	str	r0, [sp, #72]	; 0x48
    dc50:	ldr	r0, [fp, #-80]	; 0xffffffb0
    dc54:	ldr	r1, [fp, #-76]	; 0xffffffb4
    dc58:	str	r1, [sp, #68]	; 0x44
    dc5c:	str	r0, [sp, #64]	; 0x40
    dc60:	ldr	r0, [fp, #-88]	; 0xffffffa8
    dc64:	ldr	r1, [fp, #-84]	; 0xffffffac
    dc68:	str	r1, [sp, #60]	; 0x3c
    dc6c:	str	r0, [sp, #56]	; 0x38
    dc70:	ldr	r0, [fp, #-96]	; 0xffffffa0
    dc74:	ldr	r1, [fp, #-92]	; 0xffffffa4
    dc78:	str	r1, [sp, #52]	; 0x34
    dc7c:	str	r0, [sp, #48]	; 0x30
    dc80:	ldr	r0, [fp, #-104]	; 0xffffff98
    dc84:	ldr	r1, [fp, #-100]	; 0xffffff9c
    dc88:	str	r1, [sp, #44]	; 0x2c
    dc8c:	str	r0, [sp, #40]	; 0x28
    dc90:	ldr	r0, [fp, #-112]	; 0xffffff90
    dc94:	ldr	r1, [fp, #-108]	; 0xffffff94
    dc98:	str	r1, [sp, #36]	; 0x24
    dc9c:	str	r0, [sp, #32]
    dca0:	ldr	r0, [fp, #-120]	; 0xffffff88
    dca4:	ldr	r1, [fp, #-116]	; 0xffffff8c
    dca8:	str	r1, [sp, #28]
    dcac:	str	r0, [sp, #24]
    dcb0:	movw	r0, #0
    dcb4:	str	r0, [sp, #20]
    dcb8:	ldr	r0, [sp, #20]
    dcbc:	cmp	r0, #16
    dcc0:	bcs	dd34 <rb_sha512_process_block+0x23c>
    dcc4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    dcc8:	ldr	r1, [r0]
    dccc:	ldr	r0, [r0, #4]
    dcd0:	lsl	r2, r1, #24
    dcd4:	and	r3, r1, #65280	; 0xff00
    dcd8:	orr	r2, r2, r3, lsl #8
    dcdc:	and	r3, r1, #16711680	; 0xff0000
    dce0:	orr	r2, r2, r3, lsr #8
    dce4:	orr	r1, r2, r1, lsr #24
    dce8:	lsl	r2, r0, #8
    dcec:	uxtb16	r2, r2
    dcf0:	orr	r2, r2, r0, lsl #24
    dcf4:	mov	r3, #65280	; 0xff00
    dcf8:	and	r3, r3, r0, lsr #8
    dcfc:	orr	r2, r2, r3
    dd00:	orr	r0, r2, r0, lsr #24
    dd04:	ldr	r2, [sp, #20]
    dd08:	add	r3, sp, #88	; 0x58
    dd0c:	add	ip, r3, r2, lsl #3
    dd10:	str	r0, [r3, r2, lsl #3]
    dd14:	str	r1, [ip, #4]
    dd18:	ldr	r0, [fp, #-48]	; 0xffffffd0
    dd1c:	add	r0, r0, #8
    dd20:	str	r0, [fp, #-48]	; 0xffffffd0
    dd24:	ldr	r0, [sp, #20]
    dd28:	add	r0, r0, #1
    dd2c:	str	r0, [sp, #20]
    dd30:	b	dcb8 <rb_sha512_process_block+0x1c0>
    dd34:	movw	r0, #16
    dd38:	str	r0, [sp, #20]
    dd3c:	ldr	r0, [sp, #20]
    dd40:	cmp	r0, #80	; 0x50
    dd44:	bcs	de10 <rb_sha512_process_block+0x318>
    dd48:	ldr	r0, [sp, #20]
    dd4c:	add	r1, sp, #88	; 0x58
    dd50:	add	r2, r1, r0, lsl #3
    dd54:	ldr	r3, [r2, #-12]
    dd58:	ldr	ip, [r2, #-16]
    dd5c:	lsr	lr, ip, #19
    dd60:	orr	lr, lr, r3, lsl #13
    dd64:	lsr	r4, r3, #19
    dd68:	orr	r4, r4, ip, lsl #13
    dd6c:	lsr	r5, r3, #29
    dd70:	lsl	r6, r3, #3
    dd74:	orr	r6, r6, ip, lsr #29
    dd78:	orr	r5, r5, ip, lsl #3
    dd7c:	eor	lr, lr, r5
    dd80:	eor	r4, r4, r6
    dd84:	lsr	ip, ip, #6
    dd88:	orr	ip, ip, r3, lsl #26
    dd8c:	eor	r3, r4, r3, lsr #6
    dd90:	eor	ip, lr, ip
    dd94:	ldr	lr, [r2, #-52]	; 0xffffffcc
    dd98:	ldr	r4, [r2, #-56]	; 0xffffffc8
    dd9c:	adds	ip, ip, r4
    dda0:	adc	r3, r3, lr
    dda4:	ldr	lr, [r2, #-128]	; 0xffffff80
    dda8:	ldr	r4, [r2, #-124]	; 0xffffff84
    ddac:	ldr	r5, [r2, #-120]	; 0xffffff88
    ddb0:	ldr	r6, [r2, #-116]	; 0xffffff8c
    ddb4:	lsrs	r7, r6, #1
    ddb8:	rrx	r8, r5
    ddbc:	orr	r7, r7, r5, lsl #31
    ddc0:	lsr	r9, r5, #8
    ddc4:	orr	r9, r9, r6, lsl #24
    ddc8:	lsr	sl, r6, #8
    ddcc:	orr	sl, sl, r5, lsl #24
    ddd0:	eor	r7, r7, sl
    ddd4:	eor	r8, r8, r9
    ddd8:	lsr	r5, r5, #7
    dddc:	orr	r5, r5, r6, lsl #25
    dde0:	eor	r6, r7, r6, lsr #7
    dde4:	eor	r5, r8, r5
    dde8:	adds	ip, ip, r5
    ddec:	adc	r3, r3, r6
    ddf0:	adds	ip, ip, lr
    ddf4:	adc	r3, r3, r4
    ddf8:	str	ip, [r1, r0, lsl #3]
    ddfc:	str	r3, [r2, #4]
    de00:	ldr	r0, [sp, #20]
    de04:	add	r0, r0, #1
    de08:	str	r0, [sp, #20]
    de0c:	b	dd3c <rb_sha512_process_block+0x244>
    de10:	movw	r0, #0
    de14:	str	r0, [sp, #20]
    de18:	ldr	r0, [sp, #20]
    de1c:	cmp	r0, #80	; 0x50
    de20:	bcs	e028 <rb_sha512_process_block+0x530>
    de24:	ldr	r0, [fp, #-120]	; 0xffffff88
    de28:	ldr	r1, [fp, #-116]	; 0xffffff8c
    de2c:	ldr	r2, [fp, #-96]	; 0xffffffa0
    de30:	ldr	r3, [fp, #-92]	; 0xffffffa4
    de34:	lsr	ip, r2, #14
    de38:	orr	ip, ip, r3, lsl #18
    de3c:	lsr	lr, r3, #14
    de40:	orr	lr, lr, r2, lsl #18
    de44:	lsr	r4, r2, #18
    de48:	orr	r4, r4, r3, lsl #14
    de4c:	lsr	r5, r3, #18
    de50:	orr	r5, r5, r2, lsl #14
    de54:	eor	ip, ip, r4
    de58:	eor	lr, lr, r5
    de5c:	lsr	r4, r3, #9
    de60:	lsl	r5, r3, #23
    de64:	orr	r5, r5, r2, lsr #9
    de68:	orr	r4, r4, r2, lsl #23
    de6c:	eor	lr, lr, r5
    de70:	eor	ip, ip, r4
    de74:	adds	r0, r0, ip
    de78:	adc	r1, r1, lr
    de7c:	ldr	ip, [fp, #-104]	; 0xffffff98
    de80:	ldr	lr, [fp, #-100]	; 0xffffff9c
    de84:	and	ip, r2, ip
    de88:	and	lr, r3, lr
    de8c:	ldr	r4, [fp, #-112]	; 0xffffff90
    de90:	ldr	r5, [fp, #-108]	; 0xffffff94
    de94:	bic	r2, r4, r2
    de98:	bic	r3, r5, r3
    de9c:	eor	r3, lr, r3
    dea0:	eor	r2, ip, r2
    dea4:	adds	r0, r0, r2
    dea8:	adc	r1, r1, r3
    deac:	ldr	r2, [sp, #20]
    deb0:	ldr	r3, [pc, #808]	; e1e0 <rb_sha512_process_block+0x6e8>
    deb4:	add	r3, pc, r3
    deb8:	ldr	ip, [r3, r2, lsl #3]!
    debc:	ldr	r3, [r3, #4]
    dec0:	adds	r0, r0, ip
    dec4:	adc	r1, r1, r3
    dec8:	add	r3, sp, #88	; 0x58
    decc:	add	ip, r3, r2, lsl #3
    ded0:	ldr	ip, [ip, #4]
    ded4:	ldr	r2, [r3, r2, lsl #3]
    ded8:	adds	r0, r0, r2
    dedc:	adc	r1, r1, ip
    dee0:	str	r0, [sp, #8]
    dee4:	str	r1, [sp, #12]
    dee8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    deec:	ldr	r1, [fp, #-60]	; 0xffffffc4
    def0:	lsr	r2, r0, #28
    def4:	orr	r2, r2, r1, lsl #4
    def8:	lsr	r3, r1, #28
    defc:	orr	r3, r3, r0, lsl #4
    df00:	lsr	ip, r1, #2
    df04:	lsl	lr, r1, #30
    df08:	orr	lr, lr, r0, lsr #2
    df0c:	orr	ip, ip, r0, lsl #30
    df10:	eor	r2, r2, ip
    df14:	eor	r3, r3, lr
    df18:	lsr	ip, r1, #7
    df1c:	lsl	lr, r1, #25
    df20:	orr	lr, lr, r0, lsr #7
    df24:	orr	ip, ip, r0, lsl #25
    df28:	eor	r3, r3, lr
    df2c:	eor	r2, r2, ip
    df30:	ldr	ip, [fp, #-72]	; 0xffffffb8
    df34:	ldr	lr, [fp, #-68]	; 0xffffffbc
    df38:	and	r4, r1, lr
    df3c:	and	r5, r0, ip
    df40:	ldr	r6, [fp, #-80]	; 0xffffffb0
    df44:	ldr	r7, [fp, #-76]	; 0xffffffb4
    df48:	and	r1, r1, r7
    df4c:	and	r0, r0, r6
    df50:	eor	r0, r5, r0
    df54:	eor	r1, r4, r1
    df58:	and	ip, ip, r6
    df5c:	and	lr, lr, r7
    df60:	eor	r1, r1, lr
    df64:	eor	r0, r0, ip
    df68:	adds	r0, r2, r0
    df6c:	adc	r1, r3, r1
    df70:	str	r0, [sp]
    df74:	str	r1, [sp, #4]
    df78:	ldr	r0, [fp, #-112]	; 0xffffff90
    df7c:	ldr	r1, [fp, #-108]	; 0xffffff94
    df80:	str	r1, [fp, #-116]	; 0xffffff8c
    df84:	str	r0, [fp, #-120]	; 0xffffff88
    df88:	ldr	r0, [fp, #-104]	; 0xffffff98
    df8c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    df90:	str	r1, [fp, #-108]	; 0xffffff94
    df94:	str	r0, [fp, #-112]	; 0xffffff90
    df98:	ldr	r0, [fp, #-96]	; 0xffffffa0
    df9c:	ldr	r1, [fp, #-92]	; 0xffffffa4
    dfa0:	str	r1, [fp, #-100]	; 0xffffff9c
    dfa4:	str	r0, [fp, #-104]	; 0xffffff98
    dfa8:	ldr	r0, [fp, #-88]	; 0xffffffa8
    dfac:	ldr	r1, [fp, #-84]	; 0xffffffac
    dfb0:	ldr	r2, [sp, #8]
    dfb4:	ldr	r3, [sp, #12]
    dfb8:	adds	r0, r0, r2
    dfbc:	adc	r1, r1, r3
    dfc0:	str	r0, [fp, #-96]	; 0xffffffa0
    dfc4:	str	r1, [fp, #-92]	; 0xffffffa4
    dfc8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    dfcc:	ldr	r1, [fp, #-76]	; 0xffffffb4
    dfd0:	str	r1, [fp, #-84]	; 0xffffffac
    dfd4:	str	r0, [fp, #-88]	; 0xffffffa8
    dfd8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    dfdc:	ldr	r1, [fp, #-68]	; 0xffffffbc
    dfe0:	str	r1, [fp, #-76]	; 0xffffffb4
    dfe4:	str	r0, [fp, #-80]	; 0xffffffb0
    dfe8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    dfec:	ldr	r1, [fp, #-60]	; 0xffffffc4
    dff0:	str	r1, [fp, #-68]	; 0xffffffbc
    dff4:	str	r0, [fp, #-72]	; 0xffffffb8
    dff8:	ldr	r0, [sp, #8]
    dffc:	ldr	r1, [sp, #12]
    e000:	ldr	r2, [sp]
    e004:	ldr	r3, [sp, #4]
    e008:	adds	r0, r0, r2
    e00c:	adc	r1, r1, r3
    e010:	str	r0, [fp, #-64]	; 0xffffffc0
    e014:	str	r1, [fp, #-60]	; 0xffffffc4
    e018:	ldr	r0, [sp, #20]
    e01c:	add	r0, r0, #1
    e020:	str	r0, [sp, #20]
    e024:	b	de18 <rb_sha512_process_block+0x320>
    e028:	ldr	r0, [sp, #80]	; 0x50
    e02c:	ldr	r1, [sp, #84]	; 0x54
    e030:	ldr	r2, [fp, #-64]	; 0xffffffc0
    e034:	ldr	r3, [fp, #-60]	; 0xffffffc4
    e038:	adds	r0, r2, r0
    e03c:	adc	r1, r3, r1
    e040:	str	r0, [fp, #-64]	; 0xffffffc0
    e044:	str	r1, [fp, #-60]	; 0xffffffc4
    e048:	ldr	r0, [sp, #72]	; 0x48
    e04c:	ldr	r1, [sp, #76]	; 0x4c
    e050:	ldr	r2, [fp, #-72]	; 0xffffffb8
    e054:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e058:	adds	r0, r2, r0
    e05c:	adc	r1, r3, r1
    e060:	str	r0, [fp, #-72]	; 0xffffffb8
    e064:	str	r1, [fp, #-68]	; 0xffffffbc
    e068:	ldr	r0, [sp, #64]	; 0x40
    e06c:	ldr	r1, [sp, #68]	; 0x44
    e070:	ldr	r2, [fp, #-80]	; 0xffffffb0
    e074:	ldr	r3, [fp, #-76]	; 0xffffffb4
    e078:	adds	r0, r2, r0
    e07c:	adc	r1, r3, r1
    e080:	str	r0, [fp, #-80]	; 0xffffffb0
    e084:	str	r1, [fp, #-76]	; 0xffffffb4
    e088:	ldr	r0, [sp, #56]	; 0x38
    e08c:	ldr	r1, [sp, #60]	; 0x3c
    e090:	ldr	r2, [fp, #-88]	; 0xffffffa8
    e094:	ldr	r3, [fp, #-84]	; 0xffffffac
    e098:	adds	r0, r2, r0
    e09c:	adc	r1, r3, r1
    e0a0:	str	r0, [fp, #-88]	; 0xffffffa8
    e0a4:	str	r1, [fp, #-84]	; 0xffffffac
    e0a8:	ldr	r0, [sp, #48]	; 0x30
    e0ac:	ldr	r1, [sp, #52]	; 0x34
    e0b0:	ldr	r2, [fp, #-96]	; 0xffffffa0
    e0b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
    e0b8:	adds	r0, r2, r0
    e0bc:	adc	r1, r3, r1
    e0c0:	str	r0, [fp, #-96]	; 0xffffffa0
    e0c4:	str	r1, [fp, #-92]	; 0xffffffa4
    e0c8:	ldr	r0, [sp, #40]	; 0x28
    e0cc:	ldr	r1, [sp, #44]	; 0x2c
    e0d0:	ldr	r2, [fp, #-104]	; 0xffffff98
    e0d4:	ldr	r3, [fp, #-100]	; 0xffffff9c
    e0d8:	adds	r0, r2, r0
    e0dc:	adc	r1, r3, r1
    e0e0:	str	r0, [fp, #-104]	; 0xffffff98
    e0e4:	str	r1, [fp, #-100]	; 0xffffff9c
    e0e8:	ldr	r0, [sp, #32]
    e0ec:	ldr	r1, [sp, #36]	; 0x24
    e0f0:	ldr	r2, [fp, #-112]	; 0xffffff90
    e0f4:	ldr	r3, [fp, #-108]	; 0xffffff94
    e0f8:	adds	r0, r2, r0
    e0fc:	adc	r1, r3, r1
    e100:	str	r0, [fp, #-112]	; 0xffffff90
    e104:	str	r1, [fp, #-108]	; 0xffffff94
    e108:	ldr	r0, [sp, #24]
    e10c:	ldr	r1, [sp, #28]
    e110:	ldr	r2, [fp, #-120]	; 0xffffff88
    e114:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e118:	adds	r0, r2, r0
    e11c:	adc	r1, r3, r1
    e120:	str	r0, [fp, #-120]	; 0xffffff88
    e124:	str	r1, [fp, #-116]	; 0xffffff8c
    e128:	ldr	r0, [fp, #-52]	; 0xffffffcc
    e12c:	sub	r0, r0, #16
    e130:	str	r0, [fp, #-52]	; 0xffffffcc
    e134:	b	dc24 <rb_sha512_process_block+0x12c>
    e138:	ldr	r0, [fp, #-64]	; 0xffffffc0
    e13c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    e140:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e144:	str	r1, [r2, #4]
    e148:	str	r0, [r2]
    e14c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    e150:	ldr	r1, [fp, #-68]	; 0xffffffbc
    e154:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e158:	str	r1, [r2, #12]
    e15c:	str	r0, [r2, #8]
    e160:	ldr	r0, [fp, #-80]	; 0xffffffb0
    e164:	ldr	r1, [fp, #-76]	; 0xffffffb4
    e168:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e16c:	str	r1, [r2, #20]
    e170:	str	r0, [r2, #16]
    e174:	ldr	r0, [fp, #-88]	; 0xffffffa8
    e178:	ldr	r1, [fp, #-84]	; 0xffffffac
    e17c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e180:	str	r1, [r2, #28]
    e184:	str	r0, [r2, #24]
    e188:	ldr	r0, [fp, #-96]	; 0xffffffa0
    e18c:	ldr	r1, [fp, #-92]	; 0xffffffa4
    e190:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e194:	str	r1, [r2, #36]	; 0x24
    e198:	str	r0, [r2, #32]
    e19c:	ldr	r0, [fp, #-104]	; 0xffffff98
    e1a0:	ldr	r1, [fp, #-100]	; 0xffffff9c
    e1a4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e1a8:	str	r1, [r2, #44]	; 0x2c
    e1ac:	str	r0, [r2, #40]	; 0x28
    e1b0:	ldr	r0, [fp, #-112]	; 0xffffff90
    e1b4:	ldr	r1, [fp, #-108]	; 0xffffff94
    e1b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e1bc:	str	r1, [r2, #52]	; 0x34
    e1c0:	str	r0, [r2, #48]	; 0x30
    e1c4:	ldr	r0, [fp, #-120]	; 0xffffff88
    e1c8:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e1cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e1d0:	str	r1, [r2, #60]	; 0x3c
    e1d4:	str	r0, [r2, #56]	; 0x38
    e1d8:	sub	sp, fp, #28
    e1dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e1e0:	.word	0x000146d4

0000e1e4 <rb_init_bh>:
    e1e4:	push	{fp, lr}
    e1e8:	mov	fp, sp
    e1ec:	movw	r0, #12
    e1f0:	bl	e21c <rb_malloc>
    e1f4:	ldr	r1, [pc, #24]	; e214 <rb_init_bh+0x30>
    e1f8:	add	r1, pc, r1
    e1fc:	ldr	r2, [pc, #20]	; e218 <rb_init_bh+0x34>
    e200:	add	r2, pc, r2
    e204:	str	r0, [r2]
    e208:	movw	r0, #4
    e20c:	str	r0, [r1]
    e210:	pop	{fp, pc}
    e214:	.word	0x00038c80
    e218:	.word	0x00038c74

0000e21c <rb_malloc>:
    e21c:	push	{fp, lr}
    e220:	mov	fp, sp
    e224:	sub	sp, sp, #8
    e228:	str	r0, [sp, #4]
    e22c:	ldr	r1, [sp, #4]
    e230:	movw	r0, #1
    e234:	bl	4fb4 <calloc@plt>
    e238:	str	r0, [sp]
    e23c:	ldr	r0, [sp]
    e240:	movw	r1, #0
    e244:	cmp	r0, r1
    e248:	movw	r0, #0
    e24c:	moveq	r0, #1
    e250:	mvn	r1, #0
    e254:	eor	r0, r0, r1
    e258:	eor	r0, r0, r1
    e25c:	tst	r0, #1
    e260:	beq	e268 <rb_malloc+0x4c>
    e264:	bl	5350 <rb_outofmemory@plt>
    e268:	ldr	r0, [sp]
    e26c:	mov	sp, fp
    e270:	pop	{fp, pc}

0000e274 <rb_bh_create>:
    e274:	push	{fp, lr}
    e278:	mov	fp, sp
    e27c:	sub	sp, sp, #24
    e280:	str	r0, [fp, #-4]
    e284:	str	r1, [fp, #-8]
    e288:	str	r2, [sp, #12]
    e28c:	ldr	r0, [fp, #-4]
    e290:	cmp	r0, #0
    e294:	beq	e2a4 <rb_bh_create+0x30>
    e298:	ldr	r0, [fp, #-8]
    e29c:	cmp	r0, #0
    e2a0:	bgt	e2bc <rb_bh_create+0x48>
    e2a4:	ldr	r0, [pc, #232]	; e394 <rb_bh_create+0x120>
    e2a8:	add	r0, pc, r0
    e2ac:	ldr	r1, [pc, #228]	; e398 <rb_bh_create+0x124>
    e2b0:	add	r1, pc, r1
    e2b4:	movw	r2, #147	; 0x93
    e2b8:	bl	e39c <_rb_bh_fail>
    e2bc:	ldr	r0, [fp, #-4]
    e2c0:	cmp	r0, #12
    e2c4:	bcs	e2e0 <rb_bh_create+0x6c>
    e2c8:	ldr	r0, [pc, #188]	; e38c <rb_bh_create+0x118>
    e2cc:	add	r0, pc, r0
    e2d0:	ldr	r1, [pc, #184]	; e390 <rb_bh_create+0x11c>
    e2d4:	add	r1, pc, r1
    e2d8:	movw	r2, #151	; 0x97
    e2dc:	bl	e39c <_rb_bh_fail>
    e2e0:	movw	r0, #48	; 0x30
    e2e4:	bl	e21c <rb_malloc>
    e2e8:	str	r0, [sp, #8]
    e2ec:	ldr	r0, [fp, #-4]
    e2f0:	ldr	r1, [sp, #8]
    e2f4:	str	r0, [r1, #12]
    e2f8:	ldr	r0, [fp, #-8]
    e2fc:	ldr	r1, [sp, #8]
    e300:	str	r0, [r1, #16]
    e304:	ldr	r0, [sp, #12]
    e308:	movw	r1, #0
    e30c:	cmp	r0, r1
    e310:	beq	e324 <rb_bh_create+0xb0>
    e314:	ldr	r0, [sp, #12]
    e318:	bl	e3e0 <rb_strdup>
    e31c:	ldr	r1, [sp, #8]
    e320:	str	r0, [r1, #44]	; 0x2c
    e324:	ldr	r0, [sp, #8]
    e328:	movw	r1, #0
    e32c:	cmp	r0, r1
    e330:	bne	e34c <rb_bh_create+0xd8>
    e334:	ldr	r0, [pc, #72]	; e384 <rb_bh_create+0x110>
    e338:	add	r0, pc, r0
    e33c:	ldr	r1, [pc, #68]	; e388 <rb_bh_create+0x114>
    e340:	add	r1, pc, r1
    e344:	movw	r2, #162	; 0xa2
    e348:	bl	e39c <_rb_bh_fail>
    e34c:	ldr	r0, [pc, #44]	; e380 <rb_bh_create+0x10c>
    e350:	add	r0, pc, r0
    e354:	ldr	r1, [sp, #8]
    e358:	ldr	r2, [sp, #8]
    e35c:	ldr	r0, [r0]
    e360:	str	r0, [sp, #4]
    e364:	mov	r0, r1
    e368:	mov	r1, r2
    e36c:	ldr	r2, [sp, #4]
    e370:	bl	e450 <rb_dlinkAdd>
    e374:	ldr	r0, [sp, #8]
    e378:	mov	sp, fp
    e37c:	pop	{fp, pc}
    e380:	.word	0x00038b24
    e384:	.word	0x000145c8
    e388:	.word	0x0001457c
    e38c:	.word	0x000145f9
    e390:	.word	0x000145e8
    e394:	.word	0x000145eb
    e398:	.word	0x0001460c

0000e39c <_rb_bh_fail>:
    e39c:	push	{fp, lr}
    e3a0:	mov	fp, sp
    e3a4:	sub	sp, sp, #16
    e3a8:	ldr	r3, [pc, #44]	; e3dc <_rb_bh_fail+0x40>
    e3ac:	add	r3, pc, r3
    e3b0:	str	r0, [fp, #-4]
    e3b4:	str	r1, [sp, #8]
    e3b8:	str	r2, [sp, #4]
    e3bc:	ldr	r1, [fp, #-4]
    e3c0:	ldr	r2, [sp, #8]
    e3c4:	ldr	r0, [sp, #4]
    e3c8:	str	r0, [sp]
    e3cc:	mov	r0, r3
    e3d0:	ldr	r3, [sp]
    e3d4:	bl	52e4 <rb_lib_log@plt>
    e3d8:	bl	4d80 <abort@plt>
    e3dc:	.word	0x000145ed

0000e3e0 <rb_strdup>:
    e3e0:	push	{fp, lr}
    e3e4:	mov	fp, sp
    e3e8:	sub	sp, sp, #16
    e3ec:	str	r0, [fp, #-4]
    e3f0:	ldr	r0, [fp, #-4]
    e3f4:	bl	51b8 <strlen@plt>
    e3f8:	add	r0, r0, #1
    e3fc:	bl	5374 <malloc@plt>
    e400:	str	r0, [sp, #8]
    e404:	ldr	r0, [sp, #8]
    e408:	movw	r1, #0
    e40c:	cmp	r0, r1
    e410:	movw	r0, #0
    e414:	moveq	r0, #1
    e418:	mvn	r1, #0
    e41c:	eor	r0, r0, r1
    e420:	eor	r0, r0, r1
    e424:	tst	r0, #1
    e428:	beq	e430 <rb_strdup+0x50>
    e42c:	bl	5350 <rb_outofmemory@plt>
    e430:	ldr	r0, [sp, #8]
    e434:	ldr	r1, [fp, #-4]
    e438:	bl	5254 <strcpy@plt>
    e43c:	ldr	r1, [sp, #8]
    e440:	str	r0, [sp, #4]
    e444:	mov	r0, r1
    e448:	mov	sp, fp
    e44c:	pop	{fp, pc}

0000e450 <rb_dlinkAdd>:
    e450:	sub	sp, sp, #12
    e454:	str	r0, [sp, #8]
    e458:	str	r1, [sp, #4]
    e45c:	str	r2, [sp]
    e460:	ldr	r0, [sp, #8]
    e464:	ldr	r1, [sp, #4]
    e468:	str	r0, [r1]
    e46c:	ldr	r0, [sp, #4]
    e470:	movw	r1, #0
    e474:	str	r1, [r0, #4]
    e478:	ldr	r0, [sp]
    e47c:	ldr	r0, [r0]
    e480:	ldr	r2, [sp, #4]
    e484:	str	r0, [r2, #8]
    e488:	ldr	r0, [sp]
    e48c:	ldr	r0, [r0]
    e490:	cmp	r0, r1
    e494:	beq	e4ac <rb_dlinkAdd+0x5c>
    e498:	ldr	r0, [sp, #4]
    e49c:	ldr	r1, [sp]
    e4a0:	ldr	r1, [r1]
    e4a4:	str	r0, [r1, #4]
    e4a8:	b	e4d0 <rb_dlinkAdd+0x80>
    e4ac:	ldr	r0, [sp]
    e4b0:	ldr	r0, [r0, #4]
    e4b4:	movw	r1, #0
    e4b8:	cmp	r0, r1
    e4bc:	bne	e4cc <rb_dlinkAdd+0x7c>
    e4c0:	ldr	r0, [sp, #4]
    e4c4:	ldr	r1, [sp]
    e4c8:	str	r0, [r1, #4]
    e4cc:	b	e4d0 <rb_dlinkAdd+0x80>
    e4d0:	ldr	r0, [sp, #4]
    e4d4:	ldr	r1, [sp]
    e4d8:	str	r0, [r1]
    e4dc:	ldr	r0, [sp]
    e4e0:	ldr	r1, [r0, #8]
    e4e4:	add	r1, r1, #1
    e4e8:	str	r1, [r0, #8]
    e4ec:	add	sp, sp, #12
    e4f0:	bx	lr

0000e4f4 <rb_bh_alloc>:
    e4f4:	push	{fp, lr}
    e4f8:	mov	fp, sp
    e4fc:	sub	sp, sp, #8
    e500:	str	r0, [sp, #4]
    e504:	ldr	r0, [sp, #4]
    e508:	movw	r1, #0
    e50c:	cmp	r0, r1
    e510:	movw	r0, #0
    e514:	moveq	r0, #1
    e518:	mvn	r1, #0
    e51c:	eor	r0, r0, r1
    e520:	eor	r0, r0, r1
    e524:	tst	r0, #1
    e528:	beq	e544 <rb_bh_alloc+0x50>
    e52c:	ldr	r0, [pc, #36]	; e558 <rb_bh_alloc+0x64>
    e530:	add	r0, pc, r0
    e534:	ldr	r1, [pc, #32]	; e55c <rb_bh_alloc+0x68>
    e538:	add	r1, pc, r1
    e53c:	movw	r2, #186	; 0xba
    e540:	bl	e39c <_rb_bh_fail>
    e544:	ldr	r0, [sp, #4]
    e548:	ldr	r0, [r0, #12]
    e54c:	bl	e21c <rb_malloc>
    e550:	mov	sp, fp
    e554:	pop	{fp, pc}
    e558:	.word	0x000143f0
    e55c:	.word	0x00014384

0000e560 <rb_bh_free>:
    e560:	push	{fp, lr}
    e564:	mov	fp, sp
    e568:	sub	sp, sp, #16
    e56c:	str	r0, [sp, #8]
    e570:	str	r1, [sp, #4]
    e574:	ldr	r0, [sp, #8]
    e578:	movw	r1, #0
    e57c:	cmp	r0, r1
    e580:	movw	r0, #0
    e584:	moveq	r0, #1
    e588:	mvn	r1, #0
    e58c:	eor	r0, r0, r1
    e590:	eor	r0, r0, r1
    e594:	tst	r0, #1
    e598:	beq	e5b4 <rb_bh_free+0x54>
    e59c:	ldr	r0, [pc, #112]	; e614 <rb_bh_free+0xb4>
    e5a0:	add	r0, pc, r0
    e5a4:	bl	52e4 <rb_lib_log@plt>
    e5a8:	movw	r0, #1
    e5ac:	str	r0, [fp, #-4]
    e5b0:	b	e604 <rb_bh_free+0xa4>
    e5b4:	ldr	r0, [sp, #4]
    e5b8:	movw	r1, #0
    e5bc:	cmp	r0, r1
    e5c0:	movw	r0, #0
    e5c4:	moveq	r0, #1
    e5c8:	mvn	r1, #0
    e5cc:	eor	r0, r0, r1
    e5d0:	eor	r0, r0, r1
    e5d4:	tst	r0, #1
    e5d8:	beq	e5f4 <rb_bh_free+0x94>
    e5dc:	ldr	r0, [pc, #44]	; e610 <rb_bh_free+0xb0>
    e5e0:	add	r0, pc, r0
    e5e4:	bl	52e4 <rb_lib_log@plt>
    e5e8:	movw	r0, #1
    e5ec:	str	r0, [fp, #-4]
    e5f0:	b	e604 <rb_bh_free+0xa4>
    e5f4:	ldr	r0, [sp, #4]
    e5f8:	bl	e618 <rb_free>
    e5fc:	movw	r0, #0
    e600:	str	r0, [fp, #-4]
    e604:	ldr	r0, [fp, #-4]
    e608:	mov	sp, fp
    e60c:	pop	{fp, pc}
    e610:	.word	0x0001437e
    e614:	.word	0x0001439e

0000e618 <rb_free>:
    e618:	push	{fp, lr}
    e61c:	mov	fp, sp
    e620:	sub	sp, sp, #8
    e624:	str	r0, [sp, #4]
    e628:	ldr	r0, [sp, #4]
    e62c:	movw	r1, #0
    e630:	cmp	r0, r1
    e634:	movw	r0, #0
    e638:	movne	r0, #1
    e63c:	mvn	r1, #0
    e640:	eor	r0, r0, r1
    e644:	eor	r0, r0, r1
    e648:	tst	r0, #1
    e64c:	beq	e658 <rb_free+0x40>
    e650:	ldr	r0, [sp, #4]
    e654:	bl	50c8 <free@plt>
    e658:	mov	sp, fp
    e65c:	pop	{fp, pc}

0000e660 <rb_bh_destroy>:
    e660:	push	{fp, lr}
    e664:	mov	fp, sp
    e668:	sub	sp, sp, #16
    e66c:	str	r0, [sp, #8]
    e670:	ldr	r0, [sp, #8]
    e674:	movw	r1, #0
    e678:	cmp	r0, r1
    e67c:	bne	e68c <rb_bh_destroy+0x2c>
    e680:	movw	r0, #1
    e684:	str	r0, [fp, #-4]
    e688:	b	e6c8 <rb_bh_destroy+0x68>
    e68c:	ldr	r0, [pc, #64]	; e6d4 <rb_bh_destroy+0x74>
    e690:	add	r0, pc, r0
    e694:	ldr	r1, [sp, #8]
    e698:	ldr	r0, [r0]
    e69c:	str	r0, [sp, #4]
    e6a0:	mov	r0, r1
    e6a4:	ldr	r1, [sp, #4]
    e6a8:	bl	e6d8 <rb_dlinkDelete>
    e6ac:	ldr	r0, [sp, #8]
    e6b0:	ldr	r0, [r0, #44]	; 0x2c
    e6b4:	bl	e618 <rb_free>
    e6b8:	ldr	r0, [sp, #8]
    e6bc:	bl	e618 <rb_free>
    e6c0:	movw	r0, #0
    e6c4:	str	r0, [fp, #-4]
    e6c8:	ldr	r0, [fp, #-4]
    e6cc:	mov	sp, fp
    e6d0:	pop	{fp, pc}
    e6d4:	.word	0x000387e4

0000e6d8 <rb_dlinkDelete>:
    e6d8:	sub	sp, sp, #8
    e6dc:	str	r0, [sp, #4]
    e6e0:	str	r1, [sp]
    e6e4:	ldr	r0, [sp, #4]
    e6e8:	ldr	r0, [r0, #8]
    e6ec:	movw	r1, #0
    e6f0:	cmp	r0, r1
    e6f4:	beq	e710 <rb_dlinkDelete+0x38>
    e6f8:	ldr	r0, [sp, #4]
    e6fc:	ldr	r0, [r0, #4]
    e700:	ldr	r1, [sp, #4]
    e704:	ldr	r1, [r1, #8]
    e708:	str	r0, [r1, #4]
    e70c:	b	e720 <rb_dlinkDelete+0x48>
    e710:	ldr	r0, [sp, #4]
    e714:	ldr	r0, [r0, #4]
    e718:	ldr	r1, [sp]
    e71c:	str	r0, [r1, #4]
    e720:	ldr	r0, [sp, #4]
    e724:	ldr	r0, [r0, #4]
    e728:	movw	r1, #0
    e72c:	cmp	r0, r1
    e730:	beq	e74c <rb_dlinkDelete+0x74>
    e734:	ldr	r0, [sp, #4]
    e738:	ldr	r0, [r0, #8]
    e73c:	ldr	r1, [sp, #4]
    e740:	ldr	r1, [r1, #4]
    e744:	str	r0, [r1, #8]
    e748:	b	e75c <rb_dlinkDelete+0x84>
    e74c:	ldr	r0, [sp, #4]
    e750:	ldr	r0, [r0, #8]
    e754:	ldr	r1, [sp]
    e758:	str	r0, [r1]
    e75c:	ldr	r0, [sp, #4]
    e760:	movw	r1, #0
    e764:	str	r1, [r0, #4]
    e768:	ldr	r0, [sp, #4]
    e76c:	str	r1, [r0, #8]
    e770:	ldr	r0, [sp]
    e774:	ldr	r1, [r0, #8]
    e778:	mvn	r2, #0
    e77c:	add	r1, r1, r2
    e780:	str	r1, [r0, #8]
    e784:	add	sp, sp, #8
    e788:	bx	lr

0000e78c <rb_bh_usage>:
    e78c:	sub	sp, sp, #16
    e790:	ldr	ip, [sp, #16]
    e794:	str	r0, [sp, #12]
    e798:	str	r1, [sp, #8]
    e79c:	str	r2, [sp, #4]
    e7a0:	str	r3, [sp]
    e7a4:	ldr	r0, [sp, #8]
    e7a8:	movw	r1, #0
    e7ac:	cmp	r0, r1
    e7b0:	beq	e7c0 <rb_bh_usage+0x34>
    e7b4:	ldr	r0, [sp, #8]
    e7b8:	movw	r1, #0
    e7bc:	str	r1, [r0]
    e7c0:	ldr	r0, [sp, #4]
    e7c4:	movw	r1, #0
    e7c8:	cmp	r0, r1
    e7cc:	beq	e7dc <rb_bh_usage+0x50>
    e7d0:	ldr	r0, [sp, #4]
    e7d4:	movw	r1, #0
    e7d8:	str	r1, [r0]
    e7dc:	ldr	r0, [sp]
    e7e0:	movw	r1, #0
    e7e4:	cmp	r0, r1
    e7e8:	beq	e7f8 <rb_bh_usage+0x6c>
    e7ec:	ldr	r0, [sp]
    e7f0:	movw	r1, #0
    e7f4:	str	r1, [r0]
    e7f8:	ldr	r0, [sp, #16]
    e7fc:	movw	r1, #0
    e800:	cmp	r0, r1
    e804:	beq	e818 <rb_bh_usage+0x8c>
    e808:	ldr	r0, [pc, #16]	; e820 <rb_bh_usage+0x94>
    e80c:	add	r0, pc, r0
    e810:	ldr	r1, [sp, #16]
    e814:	str	r0, [r1]
    e818:	add	sp, sp, #16
    e81c:	bx	lr
    e820:	.word	0x00014171

0000e824 <rb_bh_usage_all>:
    e824:	push	{r4, sl, fp, lr}
    e828:	add	fp, sp, #8
    e82c:	sub	sp, sp, #48	; 0x30
    e830:	ldr	r2, [pc, #300]	; e964 <rb_bh_usage_all+0x140>
    e834:	add	r2, pc, r2
    e838:	str	r0, [fp, #-12]
    e83c:	str	r1, [fp, #-16]
    e840:	ldr	r0, [r2]
    e844:	str	r0, [sp, #12]
    e848:	ldr	r0, [fp, #-12]
    e84c:	movw	r1, #0
    e850:	cmp	r0, r1
    e854:	bne	e85c <rb_bh_usage_all+0x38>
    e858:	b	e95c <rb_bh_usage_all+0x138>
    e85c:	ldr	r0, [pc, #260]	; e968 <rb_bh_usage_all+0x144>
    e860:	add	r0, pc, r0
    e864:	ldr	r0, [r0]
    e868:	ldr	r0, [r0]
    e86c:	str	r0, [fp, #-20]	; 0xffffffec
    e870:	ldr	r0, [fp, #-20]	; 0xffffffec
    e874:	movw	r1, #0
    e878:	cmp	r0, r1
    e87c:	beq	e958 <rb_bh_usage_all+0x134>
    e880:	ldr	r0, [fp, #-20]	; 0xffffffec
    e884:	ldr	r0, [r0]
    e888:	str	r0, [fp, #-24]	; 0xffffffe8
    e88c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    e890:	ldr	r0, [r0, #40]	; 0x28
    e894:	str	r0, [sp, #24]
    e898:	ldr	r0, [fp, #-24]	; 0xffffffe8
    e89c:	ldr	r0, [r0, #28]
    e8a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    e8a4:	ldr	r1, [r1, #16]
    e8a8:	mul	r0, r0, r1
    e8ac:	ldr	r1, [sp, #24]
    e8b0:	sub	r0, r0, r1
    e8b4:	str	r0, [sp, #28]
    e8b8:	ldr	r0, [sp, #28]
    e8bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    e8c0:	ldr	r1, [r1, #12]
    e8c4:	mul	r0, r0, r1
    e8c8:	str	r0, [sp, #20]
    e8cc:	ldr	r0, [sp, #24]
    e8d0:	ldr	r1, [sp, #28]
    e8d4:	add	r0, r0, r1
    e8d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    e8dc:	ldr	r1, [r1, #12]
    e8e0:	mul	r0, r0, r1
    e8e4:	str	r0, [sp, #16]
    e8e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    e8ec:	ldr	r0, [r0, #44]	; 0x2c
    e8f0:	movw	r1, #0
    e8f4:	cmp	r0, r1
    e8f8:	beq	e908 <rb_bh_usage_all+0xe4>
    e8fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    e900:	ldr	r0, [r0, #44]	; 0x2c
    e904:	str	r0, [sp, #12]
    e908:	ldr	r0, [fp, #-12]
    e90c:	ldr	r1, [sp, #28]
    e910:	ldr	r2, [sp, #24]
    e914:	ldr	r3, [sp, #20]
    e918:	ldr	ip, [sp, #16]
    e91c:	ldr	lr, [sp, #12]
    e920:	ldr	r4, [fp, #-16]
    e924:	str	r0, [sp, #8]
    e928:	mov	r0, r1
    e92c:	mov	r1, r2
    e930:	mov	r2, r3
    e934:	mov	r3, ip
    e938:	str	lr, [sp]
    e93c:	str	r4, [sp, #4]
    e940:	ldr	ip, [sp, #8]
    e944:	blx	ip
    e948:	ldr	r0, [fp, #-20]	; 0xffffffec
    e94c:	ldr	r0, [r0, #8]
    e950:	str	r0, [fp, #-20]	; 0xffffffec
    e954:	b	e870 <rb_bh_usage_all+0x4c>
    e958:	b	e95c <rb_bh_usage_all+0x138>
    e95c:	sub	sp, fp, #8
    e960:	pop	{r4, sl, fp, pc}
    e964:	.word	0x00025c38
    e968:	.word	0x00038614

0000e96c <rb_bh_total_usage>:
    e96c:	sub	sp, sp, #32
    e970:	ldr	r2, [pc, #248]	; ea70 <rb_bh_total_usage+0x104>
    e974:	add	r2, pc, r2
    e978:	str	r0, [sp, #28]
    e97c:	str	r1, [sp, #24]
    e980:	movw	r0, #0
    e984:	str	r0, [sp, #16]
    e988:	str	r0, [sp, #12]
    e98c:	ldr	r0, [r2]
    e990:	ldr	r0, [r0]
    e994:	str	r0, [sp, #20]
    e998:	ldr	r0, [sp, #20]
    e99c:	movw	r1, #0
    e9a0:	cmp	r0, r1
    e9a4:	beq	ea30 <rb_bh_total_usage+0xc4>
    e9a8:	ldr	r0, [sp, #20]
    e9ac:	ldr	r0, [r0]
    e9b0:	str	r0, [sp]
    e9b4:	ldr	r0, [sp]
    e9b8:	ldr	r0, [r0, #40]	; 0x28
    e9bc:	str	r0, [sp, #4]
    e9c0:	ldr	r0, [sp]
    e9c4:	ldr	r0, [r0, #28]
    e9c8:	ldr	r1, [sp]
    e9cc:	ldr	r1, [r1, #16]
    e9d0:	mul	r0, r0, r1
    e9d4:	ldr	r1, [sp, #4]
    e9d8:	sub	r0, r0, r1
    e9dc:	str	r0, [sp, #8]
    e9e0:	ldr	r0, [sp, #8]
    e9e4:	ldr	r1, [sp]
    e9e8:	ldr	r1, [r1, #12]
    e9ec:	mul	r0, r0, r1
    e9f0:	ldr	r1, [sp, #12]
    e9f4:	add	r0, r1, r0
    e9f8:	str	r0, [sp, #12]
    e9fc:	ldr	r0, [sp, #4]
    ea00:	ldr	r1, [sp, #8]
    ea04:	add	r0, r0, r1
    ea08:	ldr	r1, [sp]
    ea0c:	ldr	r1, [r1, #12]
    ea10:	mul	r0, r0, r1
    ea14:	ldr	r1, [sp, #16]
    ea18:	add	r0, r1, r0
    ea1c:	str	r0, [sp, #16]
    ea20:	ldr	r0, [sp, #20]
    ea24:	ldr	r0, [r0, #8]
    ea28:	str	r0, [sp, #20]
    ea2c:	b	e998 <rb_bh_total_usage+0x2c>
    ea30:	ldr	r0, [sp, #28]
    ea34:	movw	r1, #0
    ea38:	cmp	r0, r1
    ea3c:	beq	ea4c <rb_bh_total_usage+0xe0>
    ea40:	ldr	r0, [sp, #16]
    ea44:	ldr	r1, [sp, #28]
    ea48:	str	r0, [r1]
    ea4c:	ldr	r0, [sp, #24]
    ea50:	movw	r1, #0
    ea54:	cmp	r0, r1
    ea58:	beq	ea68 <rb_bh_total_usage+0xfc>
    ea5c:	ldr	r0, [sp, #12]
    ea60:	ldr	r1, [sp, #24]
    ea64:	str	r0, [r1]
    ea68:	add	sp, sp, #32
    ea6c:	bx	lr
    ea70:	.word	0x00038500

0000ea74 <rb_get_sockerr>:
    ea74:	push	{fp, lr}
    ea78:	mov	fp, sp
    ea7c:	sub	sp, sp, #32
    ea80:	str	r0, [fp, #-8]
    ea84:	movw	r0, #0
    ea88:	str	r0, [sp, #16]
    ea8c:	movw	r0, #4
    ea90:	str	r0, [sp, #12]
    ea94:	ldr	r0, [fp, #-8]
    ea98:	ldrb	r0, [r0, #17]
    ea9c:	and	r0, r0, #4
    eaa0:	cmp	r0, #0
    eaa4:	bne	eab8 <rb_get_sockerr+0x44>
    eaa8:	bl	56c8 <__errno_location@plt>
    eaac:	ldr	r0, [r0]
    eab0:	str	r0, [fp, #-4]
    eab4:	b	eb3c <rb_get_sockerr+0xc8>
    eab8:	bl	56c8 <__errno_location@plt>
    eabc:	ldr	r0, [r0]
    eac0:	str	r0, [fp, #-12]
    eac4:	ldr	r0, [fp, #-8]
    eac8:	movw	r1, #0
    eacc:	cmp	r0, r1
    ead0:	beq	eb20 <rb_get_sockerr+0xac>
    ead4:	ldr	r0, [fp, #-8]
    ead8:	bl	4ea0 <rb_get_fd@plt>
    eadc:	add	r1, sp, #16
    eae0:	movw	r2, #1
    eae4:	str	r1, [sp, #8]
    eae8:	mov	r1, r2
    eaec:	movw	r2, #4
    eaf0:	ldr	r3, [sp, #8]
    eaf4:	add	ip, sp, #12
    eaf8:	str	ip, [sp]
    eafc:	bl	5650 <getsockopt@plt>
    eb00:	cmp	r0, #0
    eb04:	bne	eb20 <rb_get_sockerr+0xac>
    eb08:	ldr	r0, [sp, #16]
    eb0c:	cmp	r0, #0
    eb10:	beq	eb1c <rb_get_sockerr+0xa8>
    eb14:	ldr	r0, [sp, #16]
    eb18:	str	r0, [fp, #-12]
    eb1c:	b	eb20 <rb_get_sockerr+0xac>
    eb20:	ldr	r0, [fp, #-12]
    eb24:	str	r0, [sp, #4]
    eb28:	bl	56c8 <__errno_location@plt>
    eb2c:	ldr	r1, [sp, #4]
    eb30:	str	r1, [r0]
    eb34:	ldr	r0, [fp, #-12]
    eb38:	str	r0, [fp, #-4]
    eb3c:	ldr	r0, [fp, #-4]
    eb40:	mov	sp, fp
    eb44:	pop	{fp, pc}

0000eb48 <rb_get_fd>:
    eb48:	sub	sp, sp, #8
    eb4c:	str	r0, [sp]
    eb50:	ldr	r0, [sp]
    eb54:	movw	r1, #0
    eb58:	cmp	r0, r1
    eb5c:	bne	eb6c <rb_get_fd+0x24>
    eb60:	mvn	r0, #0
    eb64:	str	r0, [sp, #4]
    eb68:	b	eb78 <rb_get_fd+0x30>
    eb6c:	ldr	r0, [sp]
    eb70:	ldr	r0, [r0, #12]
    eb74:	str	r0, [sp, #4]
    eb78:	ldr	r0, [sp, #4]
    eb7c:	add	sp, sp, #8
    eb80:	bx	lr

0000eb84 <rb_getmaxconnect>:
    eb84:	ldr	r0, [pc, #8]	; eb94 <rb_getmaxconnect+0x10>
    eb88:	ldr	r0, [pc, r0]
    eb8c:	ldr	r0, [r0]
    eb90:	bx	lr
    eb94:	.word	0x00025818

0000eb98 <rb_set_buffers>:
    eb98:	push	{fp, lr}
    eb9c:	mov	fp, sp
    eba0:	sub	sp, sp, #24
    eba4:	str	r0, [fp, #-8]
    eba8:	str	r1, [sp, #12]
    ebac:	ldr	r0, [fp, #-8]
    ebb0:	movw	r1, #0
    ebb4:	cmp	r0, r1
    ebb8:	bne	ebc8 <rb_set_buffers+0x30>
    ebbc:	movw	r0, #0
    ebc0:	str	r0, [fp, #-4]
    ebc4:	b	ec44 <rb_set_buffers+0xac>
    ebc8:	ldr	r0, [fp, #-8]
    ebcc:	ldr	r0, [r0, #12]
    ebd0:	add	r1, sp, #12
    ebd4:	movw	r2, #1
    ebd8:	str	r1, [sp, #8]
    ebdc:	mov	r1, r2
    ebe0:	movw	r2, #8
    ebe4:	ldr	r3, [sp, #8]
    ebe8:	movw	ip, #4
    ebec:	str	ip, [sp]
    ebf0:	bl	5674 <setsockopt@plt>
    ebf4:	cmp	r0, #0
    ebf8:	bne	ec30 <rb_set_buffers+0x98>
    ebfc:	ldr	r0, [fp, #-8]
    ec00:	ldr	r0, [r0, #12]
    ec04:	add	r1, sp, #12
    ec08:	movw	r2, #1
    ec0c:	str	r1, [sp, #4]
    ec10:	mov	r1, r2
    ec14:	movw	r2, #7
    ec18:	ldr	r3, [sp, #4]
    ec1c:	movw	ip, #4
    ec20:	str	ip, [sp]
    ec24:	bl	5674 <setsockopt@plt>
    ec28:	cmp	r0, #0
    ec2c:	beq	ec3c <rb_set_buffers+0xa4>
    ec30:	movw	r0, #0
    ec34:	str	r0, [fp, #-4]
    ec38:	b	ec44 <rb_set_buffers+0xac>
    ec3c:	movw	r0, #1
    ec40:	str	r0, [fp, #-4]
    ec44:	ldr	r0, [fp, #-4]
    ec48:	mov	sp, fp
    ec4c:	pop	{fp, pc}

0000ec50 <rb_set_nb>:
    ec50:	push	{fp, lr}
    ec54:	mov	fp, sp
    ec58:	sub	sp, sp, #24
    ec5c:	str	r0, [fp, #-8]
    ec60:	movw	r0, #0
    ec64:	str	r0, [sp, #12]
    ec68:	ldr	r1, [fp, #-8]
    ec6c:	cmp	r1, r0
    ec70:	bne	ec80 <rb_set_nb+0x30>
    ec74:	movw	r0, #0
    ec78:	str	r0, [fp, #-4]
    ec7c:	b	ed10 <rb_set_nb+0xc0>
    ec80:	ldr	r0, [fp, #-8]
    ec84:	ldr	r0, [r0, #12]
    ec88:	str	r0, [sp, #4]
    ec8c:	ldr	r0, [fp, #-8]
    ec90:	bl	5500 <rb_setup_fd@plt>
    ec94:	str	r0, [sp, #8]
    ec98:	cmp	r0, #0
    ec9c:	beq	ecac <rb_set_nb+0x5c>
    eca0:	ldr	r0, [sp, #8]
    eca4:	str	r0, [fp, #-4]
    eca8:	b	ed10 <rb_set_nb+0xc0>
    ecac:	ldr	r0, [sp, #12]
    ecb0:	orr	r0, r0, #2048	; 0x800
    ecb4:	str	r0, [sp, #12]
    ecb8:	ldr	r0, [sp, #4]
    ecbc:	movw	r1, #3
    ecc0:	movw	r2, #0
    ecc4:	bl	55d8 <fcntl@plt>
    ecc8:	str	r0, [sp, #8]
    eccc:	ldr	r0, [sp, #8]
    ecd0:	mvn	r1, #0
    ecd4:	cmp	r1, r0
    ecd8:	beq	ecfc <rb_set_nb+0xac>
    ecdc:	ldr	r0, [sp, #4]
    ece0:	ldr	r1, [sp, #8]
    ece4:	ldr	r2, [sp, #12]
    ece8:	orr	r2, r1, r2
    ecec:	movw	r1, #4
    ecf0:	bl	55d8 <fcntl@plt>
    ecf4:	cmn	r0, #1
    ecf8:	bne	ed08 <rb_set_nb+0xb8>
    ecfc:	movw	r0, #0
    ed00:	str	r0, [fp, #-4]
    ed04:	b	ed10 <rb_set_nb+0xc0>
    ed08:	movw	r0, #1
    ed0c:	str	r0, [fp, #-4]
    ed10:	ldr	r0, [fp, #-4]
    ed14:	mov	sp, fp
    ed18:	pop	{fp, pc}

0000ed1c <rb_setup_fd>:
    ed1c:	push	{fp, lr}
    ed20:	mov	fp, sp
    ed24:	sub	sp, sp, #8
    ed28:	ldr	r1, [pc, #36]	; ed54 <rb_setup_fd+0x38>
    ed2c:	add	r1, pc, r1
    ed30:	str	r0, [sp, #4]
    ed34:	ldr	r0, [r1]
    ed38:	ldr	r1, [sp, #4]
    ed3c:	str	r0, [sp]
    ed40:	mov	r0, r1
    ed44:	ldr	r1, [sp]
    ed48:	blx	r1
    ed4c:	mov	sp, fp
    ed50:	pop	{fp, pc}
    ed54:	.word	0x000381a4

0000ed58 <rb_settimeout>:
    ed58:	push	{fp, lr}
    ed5c:	mov	fp, sp
    ed60:	sub	sp, sp, #24
    ed64:	str	r0, [fp, #-4]
    ed68:	str	r1, [fp, #-8]
    ed6c:	str	r2, [sp, #12]
    ed70:	str	r3, [sp, #8]
    ed74:	ldr	r0, [fp, #-4]
    ed78:	movw	r1, #0
    ed7c:	cmp	r0, r1
    ed80:	bne	ed88 <rb_settimeout+0x30>
    ed84:	b	eed0 <rb_settimeout+0x178>
    ed88:	ldr	r0, [fp, #-4]
    ed8c:	ldr	r0, [r0, #44]	; 0x2c
    ed90:	str	r0, [sp, #4]
    ed94:	ldr	r0, [sp, #12]
    ed98:	movw	r1, #0
    ed9c:	cmp	r0, r1
    eda0:	bne	ee18 <rb_settimeout+0xc0>
    eda4:	ldr	r0, [sp, #4]
    eda8:	movw	r1, #0
    edac:	cmp	r0, r1
    edb0:	bne	edb8 <rb_settimeout+0x60>
    edb4:	b	eed0 <rb_settimeout+0x178>
    edb8:	ldr	r0, [pc, #304]	; eef0 <rb_settimeout+0x198>
    edbc:	add	r1, pc, r0
    edc0:	ldr	r0, [sp, #4]
    edc4:	add	r0, r0, #4
    edc8:	bl	eefc <rb_dlinkDelete>
    edcc:	ldr	r0, [sp, #4]
    edd0:	bl	efb0 <rb_free>
    edd4:	ldr	r0, [pc, #272]	; eeec <rb_settimeout+0x194>
    edd8:	add	r0, pc, r0
    eddc:	ldr	r1, [fp, #-4]
    ede0:	movw	r2, #0
    ede4:	str	r2, [r1, #44]	; 0x2c
    ede8:	ldr	r0, [r0, #8]
    edec:	cmp	r0, #0
    edf0:	bne	ee14 <rb_settimeout+0xbc>
    edf4:	ldr	r0, [pc, #252]	; eef8 <rb_settimeout+0x1a0>
    edf8:	add	r0, pc, r0
    edfc:	ldr	r0, [r0]
    ee00:	bl	4e58 <rb_event_delete@plt>
    ee04:	ldr	r0, [pc, #232]	; eef4 <rb_settimeout+0x19c>
    ee08:	add	r0, pc, r0
    ee0c:	movw	r1, #0
    ee10:	str	r1, [r0]
    ee14:	b	eed0 <rb_settimeout+0x178>
    ee18:	ldr	r0, [fp, #-4]
    ee1c:	ldr	r0, [r0, #44]	; 0x2c
    ee20:	movw	r1, #0
    ee24:	cmp	r0, r1
    ee28:	bne	ee40 <rb_settimeout+0xe8>
    ee2c:	movw	r0, #28
    ee30:	bl	eff8 <rb_malloc>
    ee34:	ldr	r1, [fp, #-4]
    ee38:	str	r0, [r1, #44]	; 0x2c
    ee3c:	str	r0, [sp, #4]
    ee40:	ldr	r0, [fp, #-4]
    ee44:	ldr	r1, [sp, #4]
    ee48:	str	r0, [r1]
    ee4c:	bl	51c4 <rb_current_time@plt>
    ee50:	ldr	r1, [pc, #132]	; eedc <rb_settimeout+0x184>
    ee54:	add	r2, pc, r1
    ee58:	ldr	r1, [fp, #-8]
    ee5c:	add	r0, r0, r1
    ee60:	ldr	r1, [sp, #4]
    ee64:	str	r0, [r1, #16]
    ee68:	ldr	r0, [sp, #12]
    ee6c:	ldr	r1, [sp, #4]
    ee70:	str	r0, [r1, #20]
    ee74:	ldr	r0, [sp, #8]
    ee78:	ldr	r1, [sp, #4]
    ee7c:	str	r0, [r1, #24]
    ee80:	ldr	r0, [sp, #4]
    ee84:	ldr	r1, [sp, #4]
    ee88:	add	r1, r1, #4
    ee8c:	bl	f050 <rb_dlinkAdd>
    ee90:	ldr	r0, [pc, #64]	; eed8 <rb_settimeout+0x180>
    ee94:	add	r0, pc, r0
    ee98:	ldr	r0, [r0]
    ee9c:	movw	r1, #0
    eea0:	cmp	r0, r1
    eea4:	bne	eed0 <rb_settimeout+0x178>
    eea8:	ldr	r0, [pc, #52]	; eee4 <rb_settimeout+0x18c>
    eeac:	add	r0, pc, r0
    eeb0:	ldr	r1, [pc, #48]	; eee8 <rb_settimeout+0x190>
    eeb4:	ldr	r1, [pc, r1]
    eeb8:	movw	r2, #0
    eebc:	movw	r3, #5
    eec0:	bl	54d0 <rb_event_add@plt>
    eec4:	ldr	r1, [pc, #20]	; eee0 <rb_settimeout+0x188>
    eec8:	add	r1, pc, r1
    eecc:	str	r0, [r1]
    eed0:	mov	sp, fp
    eed4:	pop	{fp, pc}
    eed8:	.word	0x00037ff8
    eedc:	.word	0x0003802c
    eee0:	.word	0x00037fc4
    eee4:	.word	0x00013b13
    eee8:	.word	0x0002549c
    eeec:	.word	0x000380a8
    eef0:	.word	0x000380c4
    eef4:	.word	0x00038084
    eef8:	.word	0x00038094

0000eefc <rb_dlinkDelete>:
    eefc:	sub	sp, sp, #8
    ef00:	str	r0, [sp, #4]
    ef04:	str	r1, [sp]
    ef08:	ldr	r0, [sp, #4]
    ef0c:	ldr	r0, [r0, #8]
    ef10:	movw	r1, #0
    ef14:	cmp	r0, r1
    ef18:	beq	ef34 <rb_dlinkDelete+0x38>
    ef1c:	ldr	r0, [sp, #4]
    ef20:	ldr	r0, [r0, #4]
    ef24:	ldr	r1, [sp, #4]
    ef28:	ldr	r1, [r1, #8]
    ef2c:	str	r0, [r1, #4]
    ef30:	b	ef44 <rb_dlinkDelete+0x48>
    ef34:	ldr	r0, [sp, #4]
    ef38:	ldr	r0, [r0, #4]
    ef3c:	ldr	r1, [sp]
    ef40:	str	r0, [r1, #4]
    ef44:	ldr	r0, [sp, #4]
    ef48:	ldr	r0, [r0, #4]
    ef4c:	movw	r1, #0
    ef50:	cmp	r0, r1
    ef54:	beq	ef70 <rb_dlinkDelete+0x74>
    ef58:	ldr	r0, [sp, #4]
    ef5c:	ldr	r0, [r0, #8]
    ef60:	ldr	r1, [sp, #4]
    ef64:	ldr	r1, [r1, #4]
    ef68:	str	r0, [r1, #8]
    ef6c:	b	ef80 <rb_dlinkDelete+0x84>
    ef70:	ldr	r0, [sp, #4]
    ef74:	ldr	r0, [r0, #8]
    ef78:	ldr	r1, [sp]
    ef7c:	str	r0, [r1]
    ef80:	ldr	r0, [sp, #4]
    ef84:	movw	r1, #0
    ef88:	str	r1, [r0, #4]
    ef8c:	ldr	r0, [sp, #4]
    ef90:	str	r1, [r0, #8]
    ef94:	ldr	r0, [sp]
    ef98:	ldr	r1, [r0, #8]
    ef9c:	mvn	r2, #0
    efa0:	add	r1, r1, r2
    efa4:	str	r1, [r0, #8]
    efa8:	add	sp, sp, #8
    efac:	bx	lr

0000efb0 <rb_free>:
    efb0:	push	{fp, lr}
    efb4:	mov	fp, sp
    efb8:	sub	sp, sp, #8
    efbc:	str	r0, [sp, #4]
    efc0:	ldr	r0, [sp, #4]
    efc4:	movw	r1, #0
    efc8:	cmp	r0, r1
    efcc:	movw	r0, #0
    efd0:	movne	r0, #1
    efd4:	mvn	r1, #0
    efd8:	eor	r0, r0, r1
    efdc:	eor	r0, r0, r1
    efe0:	tst	r0, #1
    efe4:	beq	eff0 <rb_free+0x40>
    efe8:	ldr	r0, [sp, #4]
    efec:	bl	50c8 <free@plt>
    eff0:	mov	sp, fp
    eff4:	pop	{fp, pc}

0000eff8 <rb_malloc>:
    eff8:	push	{fp, lr}
    effc:	mov	fp, sp
    f000:	sub	sp, sp, #8
    f004:	str	r0, [sp, #4]
    f008:	ldr	r1, [sp, #4]
    f00c:	movw	r0, #1
    f010:	bl	4fb4 <calloc@plt>
    f014:	str	r0, [sp]
    f018:	ldr	r0, [sp]
    f01c:	movw	r1, #0
    f020:	cmp	r0, r1
    f024:	movw	r0, #0
    f028:	moveq	r0, #1
    f02c:	mvn	r1, #0
    f030:	eor	r0, r0, r1
    f034:	eor	r0, r0, r1
    f038:	tst	r0, #1
    f03c:	beq	f044 <rb_malloc+0x4c>
    f040:	bl	5350 <rb_outofmemory@plt>
    f044:	ldr	r0, [sp]
    f048:	mov	sp, fp
    f04c:	pop	{fp, pc}

0000f050 <rb_dlinkAdd>:
    f050:	sub	sp, sp, #12
    f054:	str	r0, [sp, #8]
    f058:	str	r1, [sp, #4]
    f05c:	str	r2, [sp]
    f060:	ldr	r0, [sp, #8]
    f064:	ldr	r1, [sp, #4]
    f068:	str	r0, [r1]
    f06c:	ldr	r0, [sp, #4]
    f070:	movw	r1, #0
    f074:	str	r1, [r0, #4]
    f078:	ldr	r0, [sp]
    f07c:	ldr	r0, [r0]
    f080:	ldr	r2, [sp, #4]
    f084:	str	r0, [r2, #8]
    f088:	ldr	r0, [sp]
    f08c:	ldr	r0, [r0]
    f090:	cmp	r0, r1
    f094:	beq	f0ac <rb_dlinkAdd+0x5c>
    f098:	ldr	r0, [sp, #4]
    f09c:	ldr	r1, [sp]
    f0a0:	ldr	r1, [r1]
    f0a4:	str	r0, [r1, #4]
    f0a8:	b	f0d0 <rb_dlinkAdd+0x80>
    f0ac:	ldr	r0, [sp]
    f0b0:	ldr	r0, [r0, #4]
    f0b4:	movw	r1, #0
    f0b8:	cmp	r0, r1
    f0bc:	bne	f0cc <rb_dlinkAdd+0x7c>
    f0c0:	ldr	r0, [sp, #4]
    f0c4:	ldr	r1, [sp]
    f0c8:	str	r0, [r1, #4]
    f0cc:	b	f0d0 <rb_dlinkAdd+0x80>
    f0d0:	ldr	r0, [sp, #4]
    f0d4:	ldr	r1, [sp]
    f0d8:	str	r0, [r1]
    f0dc:	ldr	r0, [sp]
    f0e0:	ldr	r1, [r0, #8]
    f0e4:	add	r1, r1, #1
    f0e8:	str	r1, [r0, #8]
    f0ec:	add	sp, sp, #12
    f0f0:	bx	lr

0000f0f4 <rb_checktimeouts>:
    f0f4:	push	{fp, lr}
    f0f8:	mov	fp, sp
    f0fc:	sub	sp, sp, #48	; 0x30
    f100:	ldr	r1, [pc, #344]	; f260 <rb_checktimeouts+0x16c>
    f104:	add	r1, pc, r1
    f108:	str	r0, [fp, #-4]
    f10c:	ldr	r0, [r1]
    f110:	str	r0, [fp, #-8]
    f114:	ldr	r0, [fp, #-8]
    f118:	movw	r1, #0
    f11c:	cmp	r0, r1
    f120:	beq	f134 <rb_checktimeouts+0x40>
    f124:	ldr	r0, [fp, #-8]
    f128:	ldr	r0, [r0, #8]
    f12c:	str	r0, [sp, #16]
    f130:	b	f140 <rb_checktimeouts+0x4c>
    f134:	movw	r0, #0
    f138:	str	r0, [sp, #16]
    f13c:	b	f140 <rb_checktimeouts+0x4c>
    f140:	ldr	r0, [sp, #16]
    f144:	str	r0, [fp, #-12]
    f148:	ldr	r0, [fp, #-8]
    f14c:	movw	r1, #0
    f150:	cmp	r0, r1
    f154:	beq	f258 <rb_checktimeouts+0x164>
    f158:	ldr	r0, [fp, #-8]
    f15c:	ldr	r0, [r0]
    f160:	str	r0, [fp, #-16]
    f164:	ldr	r0, [fp, #-16]
    f168:	ldr	r0, [r0]
    f16c:	str	r0, [fp, #-20]	; 0xffffffec
    f170:	ldr	r0, [fp, #-20]	; 0xffffffec
    f174:	movw	r1, #0
    f178:	cmp	r0, r1
    f17c:	beq	f194 <rb_checktimeouts+0xa0>
    f180:	ldr	r0, [fp, #-20]	; 0xffffffec
    f184:	ldrb	r0, [r0, #16]
    f188:	and	r0, r0, #1
    f18c:	cmp	r0, #0
    f190:	bne	f198 <rb_checktimeouts+0xa4>
    f194:	b	f218 <rb_checktimeouts+0x124>
    f198:	ldr	r0, [fp, #-16]
    f19c:	ldr	r0, [r0, #16]
    f1a0:	str	r0, [sp, #12]
    f1a4:	bl	51c4 <rb_current_time@plt>
    f1a8:	ldr	r1, [sp, #12]
    f1ac:	cmp	r1, r0
    f1b0:	bge	f214 <rb_checktimeouts+0x120>
    f1b4:	ldr	r0, [pc, #168]	; f264 <rb_checktimeouts+0x170>
    f1b8:	add	r1, pc, r0
    f1bc:	ldr	r0, [fp, #-16]
    f1c0:	ldr	r0, [r0, #20]
    f1c4:	str	r0, [sp, #24]
    f1c8:	ldr	r0, [fp, #-16]
    f1cc:	ldr	r0, [r0, #24]
    f1d0:	str	r0, [sp, #20]
    f1d4:	ldr	r0, [fp, #-16]
    f1d8:	add	r0, r0, #4
    f1dc:	bl	eefc <rb_dlinkDelete>
    f1e0:	ldr	r0, [fp, #-20]	; 0xffffffec
    f1e4:	movw	r1, #0
    f1e8:	str	r1, [r0, #44]	; 0x2c
    f1ec:	ldr	r0, [fp, #-16]
    f1f0:	bl	efb0 <rb_free>
    f1f4:	ldr	r0, [sp, #24]
    f1f8:	ldr	r1, [fp, #-20]	; 0xffffffec
    f1fc:	ldr	r2, [sp, #20]
    f200:	str	r0, [sp, #8]
    f204:	mov	r0, r1
    f208:	mov	r1, r2
    f20c:	ldr	r2, [sp, #8]
    f210:	blx	r2
    f214:	b	f218 <rb_checktimeouts+0x124>
    f218:	ldr	r0, [fp, #-12]
    f21c:	str	r0, [fp, #-8]
    f220:	ldr	r0, [fp, #-8]
    f224:	movw	r1, #0
    f228:	cmp	r0, r1
    f22c:	beq	f240 <rb_checktimeouts+0x14c>
    f230:	ldr	r0, [fp, #-8]
    f234:	ldr	r0, [r0, #8]
    f238:	str	r0, [sp, #4]
    f23c:	b	f24c <rb_checktimeouts+0x158>
    f240:	movw	r0, #0
    f244:	str	r0, [sp, #4]
    f248:	b	f24c <rb_checktimeouts+0x158>
    f24c:	ldr	r0, [sp, #4]
    f250:	str	r0, [fp, #-12]
    f254:	b	f148 <rb_checktimeouts+0x54>
    f258:	mov	sp, fp
    f25c:	pop	{fp, pc}
    f260:	.word	0x00037d7c
    f264:	.word	0x00037cc8

0000f268 <rb_bind>:
    f268:	push	{fp, lr}
    f26c:	mov	fp, sp
    f270:	sub	sp, sp, #24
    f274:	str	r0, [fp, #-8]
    f278:	str	r1, [sp, #12]
    f27c:	ldr	r0, [fp, #-8]
    f280:	bl	f314 <rb_setsockopt_reuseaddr>
    f284:	str	r0, [sp, #8]
    f288:	ldr	r0, [sp, #8]
    f28c:	cmp	r0, #0
    f290:	beq	f2a0 <rb_bind+0x38>
    f294:	ldr	r0, [sp, #8]
    f298:	str	r0, [fp, #-4]
    f29c:	b	f308 <rb_bind+0xa0>
    f2a0:	ldr	r0, [fp, #-8]
    f2a4:	ldr	r0, [r0, #12]
    f2a8:	ldr	r1, [sp, #12]
    f2ac:	str	r1, [sp, #4]
    f2b0:	ldr	r1, [sp, #12]
    f2b4:	ldrh	r1, [r1]
    f2b8:	cmp	r1, #2
    f2bc:	movw	r1, #0
    f2c0:	moveq	r1, #1
    f2c4:	tst	r1, #1
    f2c8:	movw	r1, #16
    f2cc:	moveq	r1, #28
    f2d0:	ldr	r2, [sp, #4]
    f2d4:	str	r1, [sp]
    f2d8:	mov	r1, r2
    f2dc:	ldr	r2, [sp]
    f2e0:	bl	52d8 <bind@plt>
    f2e4:	str	r0, [sp, #8]
    f2e8:	ldr	r0, [sp, #8]
    f2ec:	cmp	r0, #0
    f2f0:	beq	f300 <rb_bind+0x98>
    f2f4:	ldr	r0, [sp, #8]
    f2f8:	str	r0, [fp, #-4]
    f2fc:	b	f308 <rb_bind+0xa0>
    f300:	movw	r0, #0
    f304:	str	r0, [fp, #-4]
    f308:	ldr	r0, [fp, #-4]
    f30c:	mov	sp, fp
    f310:	pop	{fp, pc}

0000f314 <rb_setsockopt_reuseaddr>:
    f314:	push	{fp, lr}
    f318:	mov	fp, sp
    f31c:	sub	sp, sp, #40	; 0x28
    f320:	str	r0, [fp, #-8]
    f324:	movw	r0, #1
    f328:	str	r0, [fp, #-12]
    f32c:	ldr	r1, [fp, #-8]
    f330:	ldr	r1, [r1, #12]
    f334:	sub	r2, fp, #12
    f338:	str	r0, [sp, #20]
    f33c:	mov	r0, r1
    f340:	ldr	r1, [sp, #20]
    f344:	movw	r3, #2
    f348:	str	r2, [sp, #16]
    f34c:	mov	r2, r3
    f350:	ldr	r3, [sp, #16]
    f354:	movw	ip, #4
    f358:	str	ip, [sp]
    f35c:	bl	5674 <setsockopt@plt>
    f360:	str	r0, [fp, #-16]
    f364:	ldr	r0, [fp, #-16]
    f368:	cmp	r0, #0
    f36c:	beq	f3b0 <rb_setsockopt_reuseaddr+0x9c>
    f370:	ldr	r0, [fp, #-8]
    f374:	ldr	r1, [r0, #12]
    f378:	ldr	r0, [fp, #-8]
    f37c:	str	r1, [sp, #12]
    f380:	bl	5458 <rb_get_sockerr@plt>
    f384:	bl	4d5c <strerror@plt>
    f388:	ldr	r1, [pc, #52]	; f3c4 <rb_setsockopt_reuseaddr+0xb0>
    f38c:	add	r1, pc, r1
    f390:	str	r0, [sp, #8]
    f394:	mov	r0, r1
    f398:	ldr	r1, [sp, #12]
    f39c:	ldr	r2, [sp, #8]
    f3a0:	bl	52e4 <rb_lib_log@plt>
    f3a4:	ldr	r0, [fp, #-16]
    f3a8:	str	r0, [fp, #-4]
    f3ac:	b	f3b8 <rb_setsockopt_reuseaddr+0xa4>
    f3b0:	movw	r0, #0
    f3b4:	str	r0, [fp, #-4]
    f3b8:	ldr	r0, [fp, #-4]
    f3bc:	mov	sp, fp
    f3c0:	pop	{fp, pc}
    f3c4:	.word	0x000137fa

0000f3c8 <rb_sctp_bindx>:
    f3c8:	sub	sp, sp, #12
    f3cc:	str	r0, [sp, #8]
    f3d0:	str	r1, [sp, #4]
    f3d4:	str	r2, [sp]
    f3d8:	mvn	r0, #0
    f3dc:	add	sp, sp, #12
    f3e0:	bx	lr

0000f3e4 <rb_inet_get_proto>:
    f3e4:	sub	sp, sp, #4
    f3e8:	str	r0, [sp]
    f3ec:	movw	r0, #6
    f3f0:	add	sp, sp, #4
    f3f4:	bx	lr

0000f3f8 <rb_accept_tcp>:
    f3f8:	push	{fp, lr}
    f3fc:	mov	fp, sp
    f400:	sub	sp, sp, #16
    f404:	str	r0, [fp, #-4]
    f408:	str	r1, [sp, #8]
    f40c:	str	r2, [sp, #4]
    f410:	str	r3, [sp]
    f414:	ldr	r0, [fp, #-4]
    f418:	movw	r1, #0
    f41c:	cmp	r0, r1
    f420:	bne	f428 <rb_accept_tcp+0x30>
    f424:	b	f474 <rb_accept_tcp+0x7c>
    f428:	movw	r0, #144	; 0x90
    f42c:	bl	eff8 <rb_malloc>
    f430:	ldr	r1, [fp, #-4]
    f434:	str	r0, [r1, #52]	; 0x34
    f438:	ldr	r0, [sp, #4]
    f43c:	ldr	r1, [fp, #-4]
    f440:	ldr	r1, [r1, #52]	; 0x34
    f444:	str	r0, [r1, #132]	; 0x84
    f448:	ldr	r0, [sp]
    f44c:	ldr	r1, [fp, #-4]
    f450:	ldr	r1, [r1, #52]	; 0x34
    f454:	str	r0, [r1, #140]	; 0x8c
    f458:	ldr	r0, [sp, #8]
    f45c:	ldr	r1, [fp, #-4]
    f460:	ldr	r1, [r1, #52]	; 0x34
    f464:	str	r0, [r1, #136]	; 0x88
    f468:	ldr	r0, [fp, #-4]
    f46c:	movw	r1, #0
    f470:	bl	f47c <rb_accept_tryaccept>
    f474:	mov	sp, fp
    f478:	pop	{fp, pc}

0000f47c <rb_accept_tryaccept>:
    f47c:	push	{fp, lr}
    f480:	mov	fp, sp
    f484:	sub	sp, sp, #176	; 0xb0
    f488:	str	r0, [fp, #-4]
    f48c:	str	r1, [fp, #-8]
    f490:	add	r0, sp, #40	; 0x28
    f494:	mov	r1, r0
    f498:	str	r0, [sp, #20]
    f49c:	mov	r0, r1
    f4a0:	movw	r1, #0
    f4a4:	and	r1, r1, #255	; 0xff
    f4a8:	movw	r2, #128	; 0x80
    f4ac:	str	r2, [sp, #16]
    f4b0:	bl	4ff0 <memset@plt>
    f4b4:	ldr	r0, [sp, #16]
    f4b8:	str	r0, [sp, #32]
    f4bc:	ldr	r1, [fp, #-4]
    f4c0:	ldr	r0, [r1, #12]
    f4c4:	ldr	r1, [sp, #20]
    f4c8:	str	r1, [sp, #24]
    f4cc:	ldr	r1, [sp, #24]
    f4d0:	add	r2, sp, #32
    f4d4:	bl	5140 <accept@plt>
    f4d8:	str	r0, [sp, #28]
    f4dc:	ldr	r0, [sp, #28]
    f4e0:	cmp	r0, #0
    f4e4:	bge	f508 <rb_accept_tryaccept+0x8c>
    f4e8:	ldr	r0, [pc, #412]	; f68c <rb_accept_tryaccept+0x210>
    f4ec:	add	r2, pc, r0
    f4f0:	ldr	r0, [fp, #-4]
    f4f4:	movw	r1, #1
    f4f8:	movw	r3, #0
    f4fc:	bl	4e64 <rb_setselect@plt>
    f500:	mov	sp, fp
    f504:	pop	{fp, pc}
    f508:	ldr	r0, [pc, #368]	; f680 <rb_accept_tryaccept+0x204>
    f50c:	add	r2, pc, r0
    f510:	ldr	r0, [sp, #28]
    f514:	ldr	r1, [fp, #-4]
    f518:	ldrb	r1, [r1, #17]
    f51c:	and	r1, r1, #128	; 0x80
    f520:	orr	r1, r1, #4
    f524:	and	r1, r1, #255	; 0xff
    f528:	bl	544c <rb_open@plt>
    f52c:	str	r0, [sp, #36]	; 0x24
    f530:	ldr	r0, [sp, #36]	; 0x24
    f534:	movw	r1, #0
    f538:	cmp	r0, r1
    f53c:	bne	f55c <rb_accept_tryaccept+0xe0>
    f540:	ldr	r0, [pc, #320]	; f688 <rb_accept_tryaccept+0x20c>
    f544:	add	r0, pc, r0
    f548:	ldr	r1, [sp, #28]
    f54c:	bl	52e4 <rb_lib_log@plt>
    f550:	ldr	r0, [sp, #28]
    f554:	bl	5308 <close@plt>
    f558:	b	f490 <rb_accept_tryaccept+0x14>
    f55c:	ldr	r0, [sp, #36]	; 0x24
    f560:	bl	4fe4 <rb_set_nb@plt>
    f564:	cmp	r0, #0
    f568:	movw	r0, #0
    f56c:	movne	r0, #1
    f570:	mvn	r1, #0
    f574:	eor	r0, r0, r1
    f578:	eor	r0, r0, r1
    f57c:	eor	r0, r0, r1
    f580:	tst	r0, #1
    f584:	beq	f5a4 <rb_accept_tryaccept+0x128>
    f588:	ldr	r0, [pc, #244]	; f684 <rb_accept_tryaccept+0x208>
    f58c:	add	r0, pc, r0
    f590:	ldr	r1, [sp, #36]	; 0x24
    f594:	ldr	r1, [r1, #12]
    f598:	bl	52e4 <rb_lib_log@plt>
    f59c:	ldr	r0, [sp, #36]	; 0x24
    f5a0:	bl	5230 <rb_close@plt>
    f5a4:	add	r0, sp, #40	; 0x28
    f5a8:	bl	13230 <mangle_mapped_sockaddr>
    f5ac:	ldr	r0, [fp, #-4]
    f5b0:	ldr	r0, [r0, #52]	; 0x34
    f5b4:	ldr	r0, [r0, #136]	; 0x88
    f5b8:	movw	r1, #0
    f5bc:	cmp	r0, r1
    f5c0:	beq	f614 <rb_accept_tryaccept+0x198>
    f5c4:	ldr	r0, [fp, #-4]
    f5c8:	ldr	r0, [r0, #52]	; 0x34
    f5cc:	ldr	r0, [r0, #136]	; 0x88
    f5d0:	ldr	r1, [sp, #36]	; 0x24
    f5d4:	add	r2, sp, #40	; 0x28
    f5d8:	ldr	r3, [sp, #32]
    f5dc:	ldr	ip, [fp, #-4]
    f5e0:	ldr	ip, [ip, #52]	; 0x34
    f5e4:	ldr	ip, [ip, #140]	; 0x8c
    f5e8:	str	r0, [sp, #12]
    f5ec:	mov	r0, r1
    f5f0:	mov	r1, r2
    f5f4:	mov	r2, r3
    f5f8:	mov	r3, ip
    f5fc:	ldr	ip, [sp, #12]
    f600:	blx	ip
    f604:	cmp	r0, #0
    f608:	bne	f610 <rb_accept_tryaccept+0x194>
    f60c:	b	f490 <rb_accept_tryaccept+0x14>
    f610:	b	f614 <rb_accept_tryaccept+0x198>
    f614:	ldr	r0, [fp, #-4]
    f618:	ldrb	r0, [r0, #17]
    f61c:	and	r0, r0, #32
    f620:	cmp	r0, #0
    f624:	beq	f640 <rb_accept_tryaccept+0x1c4>
    f628:	ldr	r0, [fp, #-4]
    f62c:	ldr	r1, [sp, #36]	; 0x24
    f630:	add	r2, sp, #40	; 0x28
    f634:	ldr	r3, [sp, #32]
    f638:	bl	14a4c <rb_ssl_accept_setup>
    f63c:	b	f67c <rb_accept_tryaccept+0x200>
    f640:	ldr	r0, [fp, #-4]
    f644:	ldr	r0, [r0, #52]	; 0x34
    f648:	ldr	r0, [r0, #132]	; 0x84
    f64c:	ldr	r1, [sp, #36]	; 0x24
    f650:	add	r2, sp, #40	; 0x28
    f654:	ldr	r3, [sp, #32]
    f658:	ldr	ip, [fp, #-4]
    f65c:	ldr	ip, [ip, #52]	; 0x34
    f660:	ldr	ip, [ip, #140]	; 0x8c
    f664:	str	r0, [sp, #8]
    f668:	mov	r0, r1
    f66c:	movw	r1, #0
    f670:	str	ip, [sp]
    f674:	ldr	ip, [sp, #8]
    f678:	blx	ip
    f67c:	b	f490 <rb_accept_tryaccept+0x14>
    f680:	.word	0x000136b9
    f684:	.word	0x00013693
    f688:	.word	0x00013695
    f68c:	.word	0xffffff88

0000f690 <rb_connect_tcp>:
    f690:	push	{fp, lr}
    f694:	mov	fp, sp
    f698:	sub	sp, sp, #40	; 0x28
    f69c:	ldr	ip, [fp, #12]
    f6a0:	ldr	lr, [fp, #8]
    f6a4:	str	r0, [fp, #-4]
    f6a8:	str	r1, [fp, #-8]
    f6ac:	str	r2, [fp, #-12]
    f6b0:	str	r3, [fp, #-16]
    f6b4:	ldr	r0, [fp, #-4]
    f6b8:	movw	r1, #0
    f6bc:	cmp	r0, r1
    f6c0:	bne	f6c8 <rb_connect_tcp+0x38>
    f6c4:	b	f864 <rb_connect_tcp+0x1d4>
    f6c8:	movw	r0, #268	; 0x10c
    f6cc:	bl	eff8 <rb_malloc>
    f6d0:	ldr	r1, [fp, #-4]
    f6d4:	str	r0, [r1, #48]	; 0x30
    f6d8:	ldr	r0, [fp, #-16]
    f6dc:	ldr	r1, [fp, #-4]
    f6e0:	ldr	r1, [r1, #48]	; 0x30
    f6e4:	str	r0, [r1, #260]	; 0x104
    f6e8:	ldr	r0, [fp, #8]
    f6ec:	ldr	r1, [fp, #-4]
    f6f0:	ldr	r1, [r1, #48]	; 0x30
    f6f4:	str	r0, [r1, #264]	; 0x108
    f6f8:	ldr	r0, [fp, #-4]
    f6fc:	ldr	r0, [r0, #48]	; 0x30
    f700:	add	r0, r0, #128	; 0x80
    f704:	ldr	r1, [fp, #-8]
    f708:	movw	r2, #128	; 0x80
    f70c:	bl	51dc <memcpy@plt>
    f710:	ldr	r0, [fp, #-12]
    f714:	movw	r1, #0
    f718:	cmp	r0, r1
    f71c:	beq	f77c <rb_connect_tcp+0xec>
    f720:	ldr	r0, [fp, #-4]
    f724:	ldr	r0, [r0, #12]
    f728:	ldr	r1, [fp, #-12]
    f72c:	str	r1, [sp, #16]
    f730:	ldr	r1, [fp, #-12]
    f734:	ldrh	r1, [r1]
    f738:	cmp	r1, #2
    f73c:	movw	r1, #0
    f740:	moveq	r1, #1
    f744:	tst	r1, #1
    f748:	movw	r1, #16
    f74c:	moveq	r1, #28
    f750:	ldr	r2, [sp, #16]
    f754:	str	r1, [sp, #8]
    f758:	mov	r1, r2
    f75c:	ldr	r2, [sp, #8]
    f760:	bl	52d8 <bind@plt>
    f764:	cmp	r0, #0
    f768:	bge	f77c <rb_connect_tcp+0xec>
    f76c:	ldr	r0, [fp, #-4]
    f770:	movw	r1, #1
    f774:	bl	f874 <rb_connect_callback>
    f778:	b	f864 <rb_connect_tcp+0x1d4>
    f77c:	ldr	r0, [pc, #232]	; f86c <rb_connect_tcp+0x1dc>
    f780:	add	r2, pc, r0
    f784:	ldr	r0, [fp, #-4]
    f788:	ldr	r1, [fp, #12]
    f78c:	movw	r3, #0
    f790:	bl	4da4 <rb_settimeout@plt>
    f794:	ldr	r0, [fp, #-4]
    f798:	ldr	r0, [r0, #12]
    f79c:	ldr	r1, [fp, #-4]
    f7a0:	ldr	r1, [r1, #48]	; 0x30
    f7a4:	add	r1, r1, #128	; 0x80
    f7a8:	str	r1, [sp, #12]
    f7ac:	ldr	r1, [fp, #-4]
    f7b0:	ldr	r1, [r1, #48]	; 0x30
    f7b4:	ldrh	r1, [r1, #128]	; 0x80
    f7b8:	cmp	r1, #2
    f7bc:	movw	r1, #0
    f7c0:	moveq	r1, #1
    f7c4:	tst	r1, #1
    f7c8:	movw	r1, #16
    f7cc:	moveq	r1, #28
    f7d0:	ldr	r2, [sp, #12]
    f7d4:	str	r1, [sp, #4]
    f7d8:	mov	r1, r2
    f7dc:	ldr	r2, [sp, #4]
    f7e0:	bl	4d8c <connect@plt>
    f7e4:	str	r0, [sp, #20]
    f7e8:	ldr	r0, [sp, #20]
    f7ec:	cmp	r0, #0
    f7f0:	bge	f858 <rb_connect_tcp+0x1c8>
    f7f4:	bl	56c8 <__errno_location@plt>
    f7f8:	ldr	r0, [r0]
    f7fc:	cmp	r0, #106	; 0x6a
    f800:	bne	f814 <rb_connect_tcp+0x184>
    f804:	ldr	r0, [fp, #-4]
    f808:	movw	r1, #0
    f80c:	bl	f874 <rb_connect_callback>
    f810:	b	f854 <rb_connect_tcp+0x1c4>
    f814:	bl	56c8 <__errno_location@plt>
    f818:	ldr	r0, [r0]
    f81c:	bl	4d98 <rb_ignore_errno@plt>
    f820:	cmp	r0, #0
    f824:	beq	f844 <rb_connect_tcp+0x1b4>
    f828:	ldr	r0, [pc, #64]	; f870 <rb_connect_tcp+0x1e0>
    f82c:	add	r2, pc, r0
    f830:	ldr	r0, [fp, #-4]
    f834:	movw	r1, #2
    f838:	movw	r3, #0
    f83c:	bl	4e64 <rb_setselect@plt>
    f840:	b	f850 <rb_connect_tcp+0x1c0>
    f844:	ldr	r0, [fp, #-4]
    f848:	movw	r1, #4
    f84c:	bl	f874 <rb_connect_callback>
    f850:	b	f854 <rb_connect_tcp+0x1c4>
    f854:	b	f864 <rb_connect_tcp+0x1d4>
    f858:	ldr	r0, [fp, #-4]
    f85c:	movw	r1, #0
    f860:	bl	f874 <rb_connect_callback>
    f864:	mov	sp, fp
    f868:	pop	{fp, pc}
    f86c:	.word	0x000001d0
    f870:	.word	0x0000022c

0000f874 <rb_connect_callback>:
    f874:	push	{fp, lr}
    f878:	mov	fp, sp
    f87c:	sub	sp, sp, #32
    f880:	str	r0, [fp, #-4]
    f884:	str	r1, [fp, #-8]
    f888:	bl	56c8 <__errno_location@plt>
    f88c:	ldr	r0, [r0]
    f890:	str	r0, [sp, #12]
    f894:	ldr	r0, [fp, #-4]
    f898:	movw	r1, #0
    f89c:	cmp	r0, r1
    f8a0:	beq	f8d0 <rb_connect_callback+0x5c>
    f8a4:	ldr	r0, [fp, #-4]
    f8a8:	ldr	r0, [r0, #48]	; 0x30
    f8ac:	movw	r1, #0
    f8b0:	cmp	r0, r1
    f8b4:	beq	f8d0 <rb_connect_callback+0x5c>
    f8b8:	ldr	r0, [fp, #-4]
    f8bc:	ldr	r0, [r0, #48]	; 0x30
    f8c0:	ldr	r0, [r0, #260]	; 0x104
    f8c4:	movw	r1, #0
    f8c8:	cmp	r0, r1
    f8cc:	bne	f8d4 <rb_connect_callback+0x60>
    f8d0:	b	f950 <rb_connect_callback+0xdc>
    f8d4:	ldr	r0, [fp, #-4]
    f8d8:	ldr	r0, [r0, #48]	; 0x30
    f8dc:	ldr	r0, [r0, #260]	; 0x104
    f8e0:	str	r0, [fp, #-12]
    f8e4:	ldr	r0, [fp, #-4]
    f8e8:	ldr	r0, [r0, #48]	; 0x30
    f8ec:	ldr	r0, [r0, #264]	; 0x108
    f8f0:	str	r0, [sp, #16]
    f8f4:	ldr	r0, [fp, #-4]
    f8f8:	ldr	r0, [r0, #48]	; 0x30
    f8fc:	movw	r1, #0
    f900:	str	r1, [r0, #260]	; 0x104
    f904:	ldr	r0, [fp, #-4]
    f908:	str	r1, [sp, #8]
    f90c:	ldr	r2, [sp, #8]
    f910:	ldr	r3, [sp, #8]
    f914:	bl	4da4 <rb_settimeout@plt>
    f918:	ldr	r0, [sp, #12]
    f91c:	str	r0, [sp, #4]
    f920:	bl	56c8 <__errno_location@plt>
    f924:	ldr	r1, [sp, #4]
    f928:	str	r1, [r0]
    f92c:	ldr	r0, [fp, #-12]
    f930:	ldr	r2, [fp, #-4]
    f934:	ldr	r1, [fp, #-8]
    f938:	ldr	r3, [sp, #16]
    f93c:	str	r0, [sp]
    f940:	mov	r0, r2
    f944:	mov	r2, r3
    f948:	ldr	r3, [sp]
    f94c:	blx	r3
    f950:	mov	sp, fp
    f954:	pop	{fp, pc}

0000f958 <rb_connect_timeout>:
    f958:	push	{fp, lr}
    f95c:	mov	fp, sp
    f960:	sub	sp, sp, #8
    f964:	str	r0, [sp, #4]
    f968:	str	r1, [sp]
    f96c:	ldr	r0, [sp, #4]
    f970:	movw	r1, #3
    f974:	bl	f874 <rb_connect_callback>
    f978:	mov	sp, fp
    f97c:	pop	{fp, pc}

0000f980 <rb_ignore_errno>:
    f980:	sub	sp, sp, #12
    f984:	str	r0, [sp, #4]
    f988:	ldr	r0, [sp, #4]
    f98c:	cmp	r0, #4
    f990:	str	r0, [sp]
    f994:	beq	f9dc <rb_ignore_errno+0x5c>
    f998:	b	f99c <rb_ignore_errno+0x1c>
    f99c:	ldr	r0, [sp]
    f9a0:	cmp	r0, #11
    f9a4:	beq	f9dc <rb_ignore_errno+0x5c>
    f9a8:	b	f9ac <rb_ignore_errno+0x2c>
    f9ac:	ldr	r0, [sp]
    f9b0:	cmp	r0, #85	; 0x55
    f9b4:	beq	f9dc <rb_ignore_errno+0x5c>
    f9b8:	b	f9bc <rb_ignore_errno+0x3c>
    f9bc:	ldr	r0, [sp]
    f9c0:	cmp	r0, #105	; 0x69
    f9c4:	beq	f9dc <rb_ignore_errno+0x5c>
    f9c8:	b	f9cc <rb_ignore_errno+0x4c>
    f9cc:	ldr	r0, [sp]
    f9d0:	cmp	r0, #115	; 0x73
    f9d4:	bne	f9e8 <rb_ignore_errno+0x68>
    f9d8:	b	f9dc <rb_ignore_errno+0x5c>
    f9dc:	movw	r0, #1
    f9e0:	str	r0, [sp, #8]
    f9e4:	b	f9f4 <rb_ignore_errno+0x74>
    f9e8:	b	f9ec <rb_ignore_errno+0x6c>
    f9ec:	movw	r0, #0
    f9f0:	str	r0, [sp, #8]
    f9f4:	ldr	r0, [sp, #8]
    f9f8:	add	sp, sp, #12
    f9fc:	bx	lr

0000fa00 <rb_setselect>:
    fa00:	push	{fp, lr}
    fa04:	mov	fp, sp
    fa08:	sub	sp, sp, #24
    fa0c:	ldr	ip, [pc, #72]	; fa5c <rb_setselect+0x5c>
    fa10:	add	ip, pc, ip
    fa14:	str	r0, [fp, #-4]
    fa18:	str	r1, [fp, #-8]
    fa1c:	str	r2, [sp, #12]
    fa20:	str	r3, [sp, #8]
    fa24:	ldr	r0, [ip]
    fa28:	ldr	r1, [fp, #-4]
    fa2c:	ldr	r2, [fp, #-8]
    fa30:	ldr	r3, [sp, #12]
    fa34:	ldr	ip, [sp, #8]
    fa38:	str	r0, [sp, #4]
    fa3c:	mov	r0, r1
    fa40:	mov	r1, r2
    fa44:	mov	r2, r3
    fa48:	mov	r3, ip
    fa4c:	ldr	ip, [sp, #4]
    fa50:	blx	ip
    fa54:	mov	sp, fp
    fa58:	pop	{fp, pc}
    fa5c:	.word	0x000374b8

0000fa60 <rb_connect_outcome>:
    fa60:	push	{fp, lr}
    fa64:	mov	fp, sp
    fa68:	sub	sp, sp, #32
    fa6c:	str	r0, [fp, #-4]
    fa70:	str	r1, [fp, #-8]
    fa74:	movw	r0, #0
    fa78:	str	r0, [sp, #16]
    fa7c:	movw	r1, #4
    fa80:	str	r1, [sp, #12]
    fa84:	ldr	r1, [fp, #-4]
    fa88:	cmp	r1, r0
    fa8c:	beq	fabc <rb_connect_outcome+0x5c>
    fa90:	ldr	r0, [fp, #-4]
    fa94:	ldr	r0, [r0, #48]	; 0x30
    fa98:	movw	r1, #0
    fa9c:	cmp	r0, r1
    faa0:	beq	fabc <rb_connect_outcome+0x5c>
    faa4:	ldr	r0, [fp, #-4]
    faa8:	ldr	r0, [r0, #48]	; 0x30
    faac:	ldr	r0, [r0, #260]	; 0x104
    fab0:	movw	r1, #0
    fab4:	cmp	r0, r1
    fab8:	bne	fac0 <rb_connect_outcome+0x60>
    fabc:	b	fb54 <rb_connect_outcome+0xf4>
    fac0:	ldr	r0, [fp, #-4]
    fac4:	ldr	r0, [r0, #12]
    fac8:	add	r1, sp, #16
    facc:	movw	r2, #1
    fad0:	str	r1, [sp, #8]
    fad4:	mov	r1, r2
    fad8:	movw	r2, #4
    fadc:	ldr	r3, [sp, #8]
    fae0:	add	ip, sp, #12
    fae4:	str	ip, [sp]
    fae8:	bl	5650 <getsockopt@plt>
    faec:	str	r0, [fp, #-12]
    faf0:	ldr	r0, [fp, #-12]
    faf4:	cmp	r0, #0
    faf8:	bge	fb00 <rb_connect_outcome+0xa0>
    fafc:	b	fb2c <rb_connect_outcome+0xcc>
    fb00:	ldr	r0, [sp, #16]
    fb04:	cmp	r0, #0
    fb08:	beq	fb28 <rb_connect_outcome+0xc8>
    fb0c:	ldr	r0, [sp, #16]
    fb10:	str	r0, [sp, #4]
    fb14:	bl	56c8 <__errno_location@plt>
    fb18:	ldr	r1, [sp, #4]
    fb1c:	str	r1, [r0]
    fb20:	mvn	r0, #0
    fb24:	str	r0, [fp, #-12]
    fb28:	b	fb2c <rb_connect_outcome+0xcc>
    fb2c:	ldr	r0, [fp, #-12]
    fb30:	cmp	r0, #0
    fb34:	bge	fb48 <rb_connect_outcome+0xe8>
    fb38:	ldr	r0, [fp, #-4]
    fb3c:	movw	r1, #4
    fb40:	bl	f874 <rb_connect_callback>
    fb44:	b	fb54 <rb_connect_outcome+0xf4>
    fb48:	ldr	r0, [fp, #-4]
    fb4c:	movw	r1, #0
    fb50:	bl	f874 <rb_connect_callback>
    fb54:	mov	sp, fp
    fb58:	pop	{fp, pc}

0000fb5c <rb_connect_sctp>:
    fb5c:	push	{r4, r5, fp, lr}
    fb60:	add	fp, sp, #8
    fb64:	sub	sp, sp, #32
    fb68:	ldr	ip, [fp, #20]
    fb6c:	ldr	lr, [fp, #16]
    fb70:	ldr	r4, [fp, #12]
    fb74:	ldr	r5, [fp, #8]
    fb78:	str	r0, [fp, #-12]
    fb7c:	str	r1, [fp, #-16]
    fb80:	str	r2, [sp, #20]
    fb84:	str	r3, [sp, #16]
    fb88:	ldr	r0, [fp, #-12]
    fb8c:	movw	r1, #4
    fb90:	str	ip, [sp, #12]
    fb94:	str	lr, [sp, #8]
    fb98:	str	r4, [sp, #4]
    fb9c:	str	r5, [sp]
    fba0:	bl	f874 <rb_connect_callback>
    fba4:	sub	sp, fp, #8
    fba8:	pop	{r4, r5, fp, pc}

0000fbac <rb_connect_sockaddr>:
    fbac:	push	{fp, lr}
    fbb0:	mov	fp, sp
    fbb4:	sub	sp, sp, #16
    fbb8:	str	r0, [sp, #8]
    fbbc:	str	r1, [sp, #4]
    fbc0:	str	r2, [sp]
    fbc4:	ldr	r0, [sp, #8]
    fbc8:	movw	r1, #0
    fbcc:	cmp	r0, r1
    fbd0:	bne	fbe0 <rb_connect_sockaddr+0x34>
    fbd4:	movw	r0, #0
    fbd8:	str	r0, [fp, #-4]
    fbdc:	b	fc00 <rb_connect_sockaddr+0x54>
    fbe0:	ldr	r0, [sp, #4]
    fbe4:	ldr	r1, [sp, #8]
    fbe8:	ldr	r1, [r1, #48]	; 0x30
    fbec:	add	r1, r1, #128	; 0x80
    fbf0:	ldr	r2, [sp]
    fbf4:	bl	51dc <memcpy@plt>
    fbf8:	movw	r0, #1
    fbfc:	str	r0, [fp, #-4]
    fc00:	ldr	r0, [fp, #-4]
    fc04:	mov	sp, fp
    fc08:	pop	{fp, pc}

0000fc0c <rb_errstr>:
    fc0c:	sub	sp, sp, #8
    fc10:	str	r0, [sp]
    fc14:	ldr	r0, [sp]
    fc18:	cmp	r0, #0
    fc1c:	blt	fc2c <rb_errstr+0x20>
    fc20:	ldr	r0, [sp]
    fc24:	cmp	r0, #7
    fc28:	blt	fc3c <rb_errstr+0x30>
    fc2c:	ldr	r0, [pc, #56]	; fc6c <rb_errstr+0x60>
    fc30:	add	r0, pc, r0
    fc34:	str	r0, [sp, #4]
    fc38:	b	fc5c <rb_errstr+0x50>
    fc3c:	ldr	r0, [pc, #36]	; fc68 <rb_errstr+0x5c>
    fc40:	add	r0, pc, r0
    fc44:	ldr	r1, [sp]
    fc48:	ldr	r2, [pc, #32]	; fc70 <rb_errstr+0x64>
    fc4c:	add	r2, pc, r2
    fc50:	add	r1, r2, r1, lsl #2
    fc54:	ldr	r1, [r1]
    fc58:	str	r1, [sp, #4]
    fc5c:	ldr	r0, [sp, #4]
    fc60:	add	sp, sp, #8
    fc64:	bx	lr
    fc68:	.word	0x00024830
    fc6c:	.word	0x00012da0
    fc70:	.word	0x00024824

0000fc74 <rb_socketpair>:
    fc74:	push	{r4, r5, fp, lr}
    fc78:	add	fp, sp, #8
    fc7c:	sub	sp, sp, #48	; 0x30
    fc80:	ldr	ip, [fp, #12]
    fc84:	ldr	lr, [fp, #8]
    fc88:	ldr	r4, [pc, #552]	; feb8 <rb_socketpair+0x244>
    fc8c:	ldr	r4, [pc, r4]
    fc90:	ldr	r5, [pc, #548]	; febc <rb_socketpair+0x248>
    fc94:	add	r5, pc, r5
    fc98:	str	r0, [fp, #-16]
    fc9c:	str	r1, [fp, #-20]	; 0xffffffec
    fca0:	str	r2, [fp, #-24]	; 0xffffffe8
    fca4:	str	r3, [sp, #28]
    fca8:	ldr	r0, [r5]
    fcac:	ldr	r1, [r4]
    fcb0:	cmp	r0, r1
    fcb4:	blt	fcd0 <rb_socketpair+0x5c>
    fcb8:	bl	56c8 <__errno_location@plt>
    fcbc:	movw	r1, #23
    fcc0:	str	r1, [r0]
    fcc4:	mvn	r0, #0
    fcc8:	str	r0, [fp, #-12]
    fccc:	b	feac <rb_socketpair+0x238>
    fcd0:	add	r3, sp, #20
    fcd4:	ldr	r0, [fp, #-16]
    fcd8:	ldr	r1, [fp, #-20]	; 0xffffffec
    fcdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    fce0:	bl	4f30 <socketpair@plt>
    fce4:	cmp	r0, #0
    fce8:	beq	fcf8 <rb_socketpair+0x84>
    fcec:	mvn	r0, #0
    fcf0:	str	r0, [fp, #-12]
    fcf4:	b	feac <rb_socketpair+0x238>
    fcf8:	ldr	r0, [sp, #20]
    fcfc:	ldr	r2, [fp, #12]
    fd00:	movw	r1, #4
    fd04:	and	r1, r1, #255	; 0xff
    fd08:	bl	544c <rb_open@plt>
    fd0c:	ldr	r1, [sp, #28]
    fd10:	str	r0, [r1]
    fd14:	ldr	r0, [sp, #24]
    fd18:	ldr	r2, [fp, #12]
    fd1c:	movw	r1, #4
    fd20:	and	r1, r1, #255	; 0xff
    fd24:	bl	544c <rb_open@plt>
    fd28:	ldr	r1, [fp, #8]
    fd2c:	str	r0, [r1]
    fd30:	ldr	r0, [sp, #28]
    fd34:	ldr	r0, [r0]
    fd38:	movw	r1, #0
    fd3c:	cmp	r0, r1
    fd40:	bne	fd70 <rb_socketpair+0xfc>
    fd44:	ldr	r0, [fp, #8]
    fd48:	ldr	r0, [r0]
    fd4c:	movw	r1, #0
    fd50:	cmp	r0, r1
    fd54:	beq	fd64 <rb_socketpair+0xf0>
    fd58:	ldr	r0, [fp, #8]
    fd5c:	ldr	r0, [r0]
    fd60:	bl	5230 <rb_close@plt>
    fd64:	mvn	r0, #0
    fd68:	str	r0, [fp, #-12]
    fd6c:	b	feac <rb_socketpair+0x238>
    fd70:	ldr	r0, [fp, #8]
    fd74:	ldr	r0, [r0]
    fd78:	movw	r1, #0
    fd7c:	cmp	r0, r1
    fd80:	bne	fd9c <rb_socketpair+0x128>
    fd84:	ldr	r0, [sp, #28]
    fd88:	ldr	r0, [r0]
    fd8c:	bl	5230 <rb_close@plt>
    fd90:	mvn	r0, #0
    fd94:	str	r0, [fp, #-12]
    fd98:	b	feac <rb_socketpair+0x238>
    fd9c:	ldr	r0, [sp, #28]
    fda0:	ldr	r0, [r0]
    fda4:	bl	4fe4 <rb_set_nb@plt>
    fda8:	cmp	r0, #0
    fdac:	movw	r0, #0
    fdb0:	movne	r0, #1
    fdb4:	mvn	r1, #0
    fdb8:	eor	r0, r0, r1
    fdbc:	eor	r0, r0, r1
    fdc0:	eor	r0, r0, r1
    fdc4:	tst	r0, #1
    fdc8:	beq	fe20 <rb_socketpair+0x1ac>
    fdcc:	ldr	r1, [sp, #20]
    fdd0:	str	r1, [sp, #16]
    fdd4:	bl	56c8 <__errno_location@plt>
    fdd8:	ldr	r0, [r0]
    fddc:	bl	4d5c <strerror@plt>
    fde0:	ldr	r1, [pc, #220]	; fec4 <rb_socketpair+0x250>
    fde4:	add	r1, pc, r1
    fde8:	str	r0, [sp, #12]
    fdec:	mov	r0, r1
    fdf0:	ldr	r1, [sp, #16]
    fdf4:	ldr	r2, [sp, #12]
    fdf8:	bl	52e4 <rb_lib_log@plt>
    fdfc:	ldr	r0, [sp, #28]
    fe00:	ldr	r0, [r0]
    fe04:	bl	5230 <rb_close@plt>
    fe08:	ldr	r0, [fp, #8]
    fe0c:	ldr	r0, [r0]
    fe10:	bl	5230 <rb_close@plt>
    fe14:	mvn	r0, #0
    fe18:	str	r0, [fp, #-12]
    fe1c:	b	feac <rb_socketpair+0x238>
    fe20:	ldr	r0, [fp, #8]
    fe24:	ldr	r0, [r0]
    fe28:	bl	4fe4 <rb_set_nb@plt>
    fe2c:	cmp	r0, #0
    fe30:	movw	r0, #0
    fe34:	movne	r0, #1
    fe38:	mvn	r1, #0
    fe3c:	eor	r0, r0, r1
    fe40:	eor	r0, r0, r1
    fe44:	eor	r0, r0, r1
    fe48:	tst	r0, #1
    fe4c:	beq	fea4 <rb_socketpair+0x230>
    fe50:	ldr	r1, [sp, #24]
    fe54:	str	r1, [sp, #8]
    fe58:	bl	56c8 <__errno_location@plt>
    fe5c:	ldr	r0, [r0]
    fe60:	bl	4d5c <strerror@plt>
    fe64:	ldr	r1, [pc, #84]	; fec0 <rb_socketpair+0x24c>
    fe68:	add	r1, pc, r1
    fe6c:	str	r0, [sp, #4]
    fe70:	mov	r0, r1
    fe74:	ldr	r1, [sp, #8]
    fe78:	ldr	r2, [sp, #4]
    fe7c:	bl	52e4 <rb_lib_log@plt>
    fe80:	ldr	r0, [sp, #28]
    fe84:	ldr	r0, [r0]
    fe88:	bl	5230 <rb_close@plt>
    fe8c:	ldr	r0, [fp, #8]
    fe90:	ldr	r0, [r0]
    fe94:	bl	5230 <rb_close@plt>
    fe98:	mvn	r0, #0
    fe9c:	str	r0, [fp, #-12]
    fea0:	b	feac <rb_socketpair+0x238>
    fea4:	movw	r0, #0
    fea8:	str	r0, [fp, #-12]
    feac:	ldr	r0, [fp, #-12]
    feb0:	sub	sp, fp, #8
    feb4:	pop	{r4, r5, fp, pc}
    feb8:	.word	0x00024714
    febc:	.word	0x000371fc
    fec0:	.word	0x00012b7e
    fec4:	.word	0x00012c02

0000fec8 <rb_open>:
    fec8:	push	{fp, lr}
    fecc:	mov	fp, sp
    fed0:	sub	sp, sp, #24
    fed4:	str	r0, [fp, #-8]
    fed8:	strb	r1, [fp, #-9]
    fedc:	str	r2, [sp, #8]
    fee0:	ldr	r0, [fp, #-8]
    fee4:	bl	106d8 <add_fd>
    fee8:	str	r0, [sp, #4]
    feec:	ldr	r0, [sp, #4]
    fef0:	ldrb	r0, [r0, #16]
    fef4:	and	r0, r0, #1
    fef8:	cmp	r0, #0
    fefc:	movw	r0, #0
    ff00:	movne	r0, #1
    ff04:	mvn	r1, #0
    ff08:	eor	r0, r0, r1
    ff0c:	eor	r0, r0, r1
    ff10:	tst	r0, #1
    ff14:	beq	ff78 <rb_open+0xb0>
    ff18:	ldr	r0, [sp, #4]
    ff1c:	movw	r1, #0
    ff20:	cmp	r0, r1
    ff24:	beq	ff4c <rb_open+0x84>
    ff28:	ldr	r0, [sp, #4]
    ff2c:	ldr	r0, [r0, #24]
    ff30:	movw	r1, #0
    ff34:	cmp	r0, r1
    ff38:	beq	ff4c <rb_open+0x84>
    ff3c:	ldr	r0, [sp, #4]
    ff40:	ldr	r0, [r0, #24]
    ff44:	str	r0, [sp]
    ff48:	b	ff58 <rb_open+0x90>
    ff4c:	ldr	r0, [pc, #156]	; fff0 <rb_open+0x128>
    ff50:	add	r0, pc, r0
    ff54:	str	r0, [sp]
    ff58:	ldr	r0, [pc, #148]	; fff4 <rb_open+0x12c>
    ff5c:	add	r0, pc, r0
    ff60:	ldr	r1, [fp, #-8]
    ff64:	ldr	r2, [sp]
    ff68:	bl	52e4 <rb_lib_log@plt>
    ff6c:	movw	r0, #0
    ff70:	str	r0, [fp, #-4]
    ff74:	b	ffe0 <rb_open+0x118>
    ff78:	ldr	r0, [fp, #-8]
    ff7c:	ldr	r1, [sp, #4]
    ff80:	str	r0, [r1, #12]
    ff84:	ldrb	r0, [fp, #-9]
    ff88:	ldr	r1, [sp, #4]
    ff8c:	strb	r0, [r1, #17]
    ff90:	ldr	r0, [sp, #4]
    ff94:	ldrb	r1, [r0, #16]
    ff98:	orr	r1, r1, #1
    ff9c:	strb	r1, [r0, #16]
    ffa0:	ldr	r0, [sp, #8]
    ffa4:	movw	r1, #0
    ffa8:	cmp	r0, r1
    ffac:	beq	ffc4 <rb_open+0xfc>
    ffb0:	ldr	r0, [sp, #8]
    ffb4:	movw	r1, #128	; 0x80
    ffb8:	bl	107a0 <rb_strndup>
    ffbc:	ldr	r1, [sp, #4]
    ffc0:	str	r0, [r1, #24]
    ffc4:	ldr	r0, [pc, #32]	; ffec <rb_open+0x124>
    ffc8:	add	r0, pc, r0
    ffcc:	ldr	r1, [r0]
    ffd0:	add	r1, r1, #1
    ffd4:	str	r1, [r0]
    ffd8:	ldr	r0, [sp, #4]
    ffdc:	str	r0, [fp, #-4]
    ffe0:	ldr	r0, [fp, #-4]
    ffe4:	mov	sp, fp
    ffe8:	pop	{fp, pc}
    ffec:	.word	0x00036ec8
    fff0:	.word	0x00012a09
    fff4:	.word	0x00012b3d

0000fff8 <rb_close>:
    fff8:	push	{fp, lr}
    fffc:	mov	fp, sp
   10000:	sub	sp, sp, #24
   10004:	str	r0, [fp, #-4]
   10008:	ldr	r0, [fp, #-4]
   1000c:	movw	r1, #0
   10010:	cmp	r0, r1
   10014:	bne	1001c <rb_close+0x24>
   10018:	b	10138 <rb_close+0x140>
   1001c:	ldr	r0, [fp, #-4]
   10020:	ldr	r0, [r0, #12]
   10024:	str	r0, [sp, #12]
   10028:	ldr	r0, [fp, #-4]
   1002c:	ldrb	r0, [r0, #17]
   10030:	str	r0, [fp, #-8]
   10034:	ldr	r0, [fp, #-8]
   10038:	and	r0, r0, #2
   1003c:	cmp	r0, #0
   10040:	movw	r0, #0
   10044:	movne	r0, #1
   10048:	mvn	r1, #0
   1004c:	eor	r0, r0, r1
   10050:	eor	r0, r0, r1
   10054:	tst	r0, #1
   10058:	beq	10060 <rb_close+0x68>
   1005c:	b	10060 <rb_close+0x68>
   10060:	ldr	r0, [fp, #-8]
   10064:	and	r0, r0, #16
   10068:	cmp	r0, #0
   1006c:	beq	10080 <rb_close+0x88>
   10070:	ldr	r0, [fp, #-4]
   10074:	ldr	r0, [r0, #12]
   10078:	movw	r1, #0
   1007c:	bl	4fa8 <listen@plt>
   10080:	ldr	r0, [fp, #-4]
   10084:	movw	r1, #3
   10088:	movw	r2, #0
   1008c:	str	r2, [sp, #8]
   10090:	ldr	r3, [sp, #8]
   10094:	bl	4e64 <rb_setselect@plt>
   10098:	ldr	r0, [fp, #-4]
   1009c:	movw	r1, #0
   100a0:	str	r1, [sp, #4]
   100a4:	ldr	r2, [sp, #4]
   100a8:	ldr	r3, [sp, #4]
   100ac:	bl	4da4 <rb_settimeout@plt>
   100b0:	ldr	r0, [fp, #-4]
   100b4:	ldr	r0, [r0, #52]	; 0x34
   100b8:	bl	efb0 <rb_free>
   100bc:	ldr	r0, [fp, #-4]
   100c0:	ldr	r0, [r0, #48]	; 0x30
   100c4:	bl	efb0 <rb_free>
   100c8:	ldr	r0, [fp, #-4]
   100cc:	ldr	r0, [r0, #24]
   100d0:	bl	efb0 <rb_free>
   100d4:	ldr	r0, [fp, #-8]
   100d8:	and	r0, r0, #32
   100dc:	cmp	r0, #0
   100e0:	beq	100ec <rb_close+0xf4>
   100e4:	ldr	r0, [fp, #-4]
   100e8:	bl	136a8 <rb_ssl_shutdown>
   100ec:	ldr	r0, [fp, #-4]
   100f0:	ldrb	r0, [r0, #16]
   100f4:	and	r0, r0, #1
   100f8:	cmp	r0, #0
   100fc:	beq	1011c <rb_close+0x124>
   10100:	ldr	r0, [fp, #-4]
   10104:	bl	10810 <remove_fd>
   10108:	ldr	r0, [fp, #-4]
   1010c:	ldrb	r1, [r0, #16]
   10110:	mvn	r2, #1
   10114:	and	r1, r1, r2
   10118:	strb	r1, [r0, #16]
   1011c:	ldr	r0, [fp, #-8]
   10120:	and	r0, r0, #16
   10124:	cmp	r0, #0
   10128:	beq	10138 <rb_close+0x140>
   1012c:	ldr	r0, [sp, #12]
   10130:	movw	r1, #2
   10134:	bl	52cc <shutdown@plt>
   10138:	mov	sp, fp
   1013c:	pop	{fp, pc}

00010140 <rb_pipe>:
   10140:	push	{fp, lr}
   10144:	mov	fp, sp
   10148:	sub	sp, sp, #40	; 0x28
   1014c:	ldr	r3, [pc, #428]	; 10300 <rb_pipe+0x1c0>
   10150:	ldr	r3, [pc, r3]
   10154:	ldr	ip, [pc, #424]	; 10304 <rb_pipe+0x1c4>
   10158:	add	ip, pc, ip
   1015c:	str	r0, [fp, #-8]
   10160:	str	r1, [fp, #-12]
   10164:	str	r2, [fp, #-16]
   10168:	ldr	r0, [ip]
   1016c:	ldr	r1, [r3]
   10170:	cmp	r0, r1
   10174:	blt	10190 <rb_pipe+0x50>
   10178:	bl	56c8 <__errno_location@plt>
   1017c:	movw	r1, #23
   10180:	str	r1, [r0]
   10184:	mvn	r0, #0
   10188:	str	r0, [fp, #-4]
   1018c:	b	102f4 <rb_pipe+0x1b4>
   10190:	add	r0, sp, #16
   10194:	bl	565c <pipe@plt>
   10198:	cmn	r0, #1
   1019c:	bne	101ac <rb_pipe+0x6c>
   101a0:	mvn	r0, #0
   101a4:	str	r0, [fp, #-4]
   101a8:	b	102f4 <rb_pipe+0x1b4>
   101ac:	ldr	r0, [sp, #16]
   101b0:	ldr	r2, [fp, #-16]
   101b4:	movw	r1, #8
   101b8:	and	r1, r1, #255	; 0xff
   101bc:	bl	544c <rb_open@plt>
   101c0:	ldr	r1, [fp, #-8]
   101c4:	str	r0, [r1]
   101c8:	ldr	r0, [sp, #20]
   101cc:	ldr	r2, [fp, #-16]
   101d0:	movw	r1, #8
   101d4:	and	r1, r1, #255	; 0xff
   101d8:	bl	544c <rb_open@plt>
   101dc:	ldr	r1, [fp, #-12]
   101e0:	str	r0, [r1]
   101e4:	ldr	r0, [fp, #-8]
   101e8:	ldr	r0, [r0]
   101ec:	bl	4fe4 <rb_set_nb@plt>
   101f0:	cmp	r0, #0
   101f4:	movw	r0, #0
   101f8:	movne	r0, #1
   101fc:	mvn	r1, #0
   10200:	eor	r0, r0, r1
   10204:	eor	r0, r0, r1
   10208:	eor	r0, r0, r1
   1020c:	tst	r0, #1
   10210:	beq	10268 <rb_pipe+0x128>
   10214:	ldr	r1, [sp, #16]
   10218:	str	r1, [sp, #12]
   1021c:	bl	56c8 <__errno_location@plt>
   10220:	ldr	r0, [r0]
   10224:	bl	4d5c <strerror@plt>
   10228:	ldr	r1, [pc, #220]	; 1030c <rb_pipe+0x1cc>
   1022c:	add	r1, pc, r1
   10230:	str	r0, [sp, #8]
   10234:	mov	r0, r1
   10238:	ldr	r1, [sp, #12]
   1023c:	ldr	r2, [sp, #8]
   10240:	bl	52e4 <rb_lib_log@plt>
   10244:	ldr	r0, [fp, #-8]
   10248:	ldr	r0, [r0]
   1024c:	bl	5230 <rb_close@plt>
   10250:	ldr	r0, [fp, #-12]
   10254:	ldr	r0, [r0]
   10258:	bl	5230 <rb_close@plt>
   1025c:	mvn	r0, #0
   10260:	str	r0, [fp, #-4]
   10264:	b	102f4 <rb_pipe+0x1b4>
   10268:	ldr	r0, [fp, #-12]
   1026c:	ldr	r0, [r0]
   10270:	bl	4fe4 <rb_set_nb@plt>
   10274:	cmp	r0, #0
   10278:	movw	r0, #0
   1027c:	movne	r0, #1
   10280:	mvn	r1, #0
   10284:	eor	r0, r0, r1
   10288:	eor	r0, r0, r1
   1028c:	eor	r0, r0, r1
   10290:	tst	r0, #1
   10294:	beq	102ec <rb_pipe+0x1ac>
   10298:	ldr	r1, [sp, #20]
   1029c:	str	r1, [sp, #4]
   102a0:	bl	56c8 <__errno_location@plt>
   102a4:	ldr	r0, [r0]
   102a8:	bl	4d5c <strerror@plt>
   102ac:	ldr	r1, [pc, #84]	; 10308 <rb_pipe+0x1c8>
   102b0:	add	r1, pc, r1
   102b4:	str	r0, [sp]
   102b8:	mov	r0, r1
   102bc:	ldr	r1, [sp, #4]
   102c0:	ldr	r2, [sp]
   102c4:	bl	52e4 <rb_lib_log@plt>
   102c8:	ldr	r0, [fp, #-8]
   102cc:	ldr	r0, [r0]
   102d0:	bl	5230 <rb_close@plt>
   102d4:	ldr	r0, [fp, #-12]
   102d8:	ldr	r0, [r0]
   102dc:	bl	5230 <rb_close@plt>
   102e0:	mvn	r0, #0
   102e4:	str	r0, [fp, #-4]
   102e8:	b	102f4 <rb_pipe+0x1b4>
   102ec:	movw	r0, #0
   102f0:	str	r0, [fp, #-4]
   102f4:	ldr	r0, [fp, #-4]
   102f8:	mov	sp, fp
   102fc:	pop	{fp, pc}
   10300:	.word	0x00024250
   10304:	.word	0x00036d38
   10308:	.word	0x00012736
   1030c:	.word	0x000127ba

00010310 <rb_socket>:
   10310:	push	{fp, lr}
   10314:	mov	fp, sp
   10318:	sub	sp, sp, #72	; 0x48
   1031c:	ldr	ip, [pc, #548]	; 10548 <rb_socket+0x238>
   10320:	ldr	ip, [pc, ip]
   10324:	ldr	lr, [pc, #544]	; 1054c <rb_socket+0x23c>
   10328:	add	lr, pc, lr
   1032c:	str	r0, [fp, #-8]
   10330:	str	r1, [fp, #-12]
   10334:	str	r2, [fp, #-16]
   10338:	str	r3, [fp, #-20]	; 0xffffffec
   1033c:	ldr	r0, [lr]
   10340:	ldr	r1, [ip]
   10344:	cmp	r0, r1
   10348:	movw	r0, #0
   1034c:	movge	r0, #1
   10350:	mvn	r1, #0
   10354:	eor	r0, r0, r1
   10358:	eor	r0, r0, r1
   1035c:	tst	r0, #1
   10360:	beq	1037c <rb_socket+0x6c>
   10364:	bl	56c8 <__errno_location@plt>
   10368:	movw	r1, #23
   1036c:	str	r1, [r0]
   10370:	movw	r0, #0
   10374:	str	r0, [fp, #-4]
   10378:	b	1053c <rb_socket+0x22c>
   1037c:	ldr	r0, [fp, #-8]
   10380:	ldr	r1, [fp, #-12]
   10384:	ldr	r2, [fp, #-16]
   10388:	bl	5164 <socket@plt>
   1038c:	str	r0, [fp, #-28]	; 0xffffffe4
   10390:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10394:	cmp	r0, #0
   10398:	movw	r0, #0
   1039c:	movlt	r0, #1
   103a0:	mvn	r1, #0
   103a4:	eor	r0, r0, r1
   103a8:	eor	r0, r0, r1
   103ac:	tst	r0, #1
   103b0:	beq	103c0 <rb_socket+0xb0>
   103b4:	movw	r0, #0
   103b8:	str	r0, [fp, #-4]
   103bc:	b	1053c <rb_socket+0x22c>
   103c0:	ldr	r0, [fp, #-8]
   103c4:	cmp	r0, #10
   103c8:	bne	10458 <rb_socket+0x148>
   103cc:	movw	r0, #1
   103d0:	str	r0, [fp, #-32]	; 0xffffffe0
   103d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   103d8:	sub	r1, fp, #32
   103dc:	movw	r2, #41	; 0x29
   103e0:	str	r1, [sp, #36]	; 0x24
   103e4:	mov	r1, r2
   103e8:	movw	r2, #26
   103ec:	ldr	r3, [sp, #36]	; 0x24
   103f0:	movw	ip, #4
   103f4:	str	ip, [sp]
   103f8:	bl	5674 <setsockopt@plt>
   103fc:	cmn	r0, #1
   10400:	bne	10454 <rb_socket+0x144>
   10404:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10408:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1040c:	str	r1, [sp, #32]
   10410:	str	r2, [sp, #28]
   10414:	bl	56c8 <__errno_location@plt>
   10418:	ldr	r0, [r0]
   1041c:	bl	4d5c <strerror@plt>
   10420:	ldr	r1, [pc, #304]	; 10558 <rb_socket+0x248>
   10424:	add	r1, pc, r1
   10428:	str	r0, [sp, #24]
   1042c:	mov	r0, r1
   10430:	ldr	r1, [sp, #32]
   10434:	ldr	r2, [sp, #28]
   10438:	ldr	r3, [sp, #24]
   1043c:	bl	52e4 <rb_lib_log@plt>
   10440:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10444:	bl	5308 <close@plt>
   10448:	movw	r1, #0
   1044c:	str	r1, [fp, #-4]
   10450:	b	1053c <rb_socket+0x22c>
   10454:	b	10458 <rb_socket+0x148>
   10458:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1045c:	ldr	r2, [fp, #-20]	; 0xffffffec
   10460:	movw	r1, #4
   10464:	and	r1, r1, #255	; 0xff
   10468:	bl	544c <rb_open@plt>
   1046c:	str	r0, [fp, #-24]	; 0xffffffe8
   10470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10474:	movw	r1, #0
   10478:	cmp	r0, r1
   1047c:	bne	104c4 <rb_socket+0x1b4>
   10480:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10484:	str	r1, [sp, #20]
   10488:	bl	56c8 <__errno_location@plt>
   1048c:	ldr	r0, [r0]
   10490:	bl	4d5c <strerror@plt>
   10494:	ldr	r1, [pc, #184]	; 10554 <rb_socket+0x244>
   10498:	add	r1, pc, r1
   1049c:	str	r0, [sp, #16]
   104a0:	mov	r0, r1
   104a4:	ldr	r1, [sp, #20]
   104a8:	ldr	r2, [sp, #16]
   104ac:	bl	52e4 <rb_lib_log@plt>
   104b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   104b4:	bl	5308 <close@plt>
   104b8:	movw	r1, #0
   104bc:	str	r1, [fp, #-4]
   104c0:	b	1053c <rb_socket+0x22c>
   104c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   104c8:	bl	4fe4 <rb_set_nb@plt>
   104cc:	cmp	r0, #0
   104d0:	movw	r0, #0
   104d4:	movne	r0, #1
   104d8:	mvn	r1, #0
   104dc:	eor	r0, r0, r1
   104e0:	eor	r0, r0, r1
   104e4:	eor	r0, r0, r1
   104e8:	tst	r0, #1
   104ec:	beq	10534 <rb_socket+0x224>
   104f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   104f4:	str	r1, [sp, #12]
   104f8:	bl	56c8 <__errno_location@plt>
   104fc:	ldr	r0, [r0]
   10500:	bl	4d5c <strerror@plt>
   10504:	ldr	r1, [pc, #68]	; 10550 <rb_socket+0x240>
   10508:	add	r1, pc, r1
   1050c:	str	r0, [sp, #8]
   10510:	mov	r0, r1
   10514:	ldr	r1, [sp, #12]
   10518:	ldr	r2, [sp, #8]
   1051c:	bl	52e4 <rb_lib_log@plt>
   10520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10524:	bl	5230 <rb_close@plt>
   10528:	movw	r0, #0
   1052c:	str	r0, [fp, #-4]
   10530:	b	1053c <rb_socket+0x22c>
   10534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10538:	str	r0, [fp, #-4]
   1053c:	ldr	r0, [fp, #-4]
   10540:	mov	sp, fp
   10544:	pop	{fp, pc}
   10548:	.word	0x00024080
   1054c:	.word	0x00036b68
   10550:	.word	0x000124de
   10554:	.word	0x000125ba
   10558:	.word	0x000125ef

0001055c <rb_listen>:
   1055c:	push	{fp, lr}
   10560:	mov	fp, sp
   10564:	sub	sp, sp, #24
   10568:	str	r0, [fp, #-4]
   1056c:	str	r1, [fp, #-8]
   10570:	str	r2, [sp, #12]
   10574:	ldr	r0, [fp, #-4]
   10578:	ldrb	r0, [r0, #17]
   1057c:	and	r0, r0, #128	; 0x80
   10580:	orr	r0, r0, #20
   10584:	ldr	r1, [fp, #-4]
   10588:	strb	r0, [r1, #17]
   1058c:	ldr	r0, [fp, #-4]
   10590:	ldr	r0, [r0, #12]
   10594:	ldr	r1, [fp, #-8]
   10598:	bl	4fa8 <listen@plt>
   1059c:	str	r0, [sp, #8]
   105a0:	ldr	r0, [sp, #12]
   105a4:	cmp	r0, #0
   105a8:	beq	105e4 <rb_listen+0x88>
   105ac:	ldr	r0, [sp, #8]
   105b0:	cmp	r0, #0
   105b4:	bne	105e4 <rb_listen+0x88>
   105b8:	ldr	r0, [fp, #-4]
   105bc:	ldr	r0, [r0, #12]
   105c0:	sub	r1, fp, #8
   105c4:	movw	r2, #6
   105c8:	str	r1, [sp, #4]
   105cc:	mov	r1, r2
   105d0:	movw	r2, #9
   105d4:	ldr	r3, [sp, #4]
   105d8:	movw	ip, #4
   105dc:	str	ip, [sp]
   105e0:	bl	5674 <setsockopt@plt>
   105e4:	ldr	r0, [sp, #8]
   105e8:	mov	sp, fp
   105ec:	pop	{fp, pc}

000105f0 <rb_fdlist_init>:
   105f0:	push	{fp, lr}
   105f4:	mov	fp, sp
   105f8:	sub	sp, sp, #16
   105fc:	ldr	r3, [pc, #112]	; 10674 <rb_fdlist_init+0x84>
   10600:	add	r3, pc, r3
   10604:	str	r0, [fp, #-4]
   10608:	str	r1, [sp, #8]
   1060c:	str	r2, [sp, #4]
   10610:	ldr	r0, [r3]
   10614:	cmp	r0, #0
   10618:	bne	1064c <rb_fdlist_init+0x5c>
   1061c:	ldr	r0, [pc, #84]	; 10678 <rb_fdlist_init+0x88>
   10620:	ldr	r0, [pc, r0]
   10624:	ldr	r1, [sp, #8]
   10628:	str	r1, [r0]
   1062c:	ldr	r0, [fp, #-4]
   10630:	cmp	r0, #0
   10634:	beq	1063c <rb_fdlist_init+0x4c>
   10638:	bl	10688 <rb_close_all>
   1063c:	ldr	r0, [pc, #56]	; 1067c <rb_fdlist_init+0x8c>
   10640:	add	r0, pc, r0
   10644:	movw	r1, #1
   10648:	str	r1, [r0]
   1064c:	ldr	r0, [pc, #48]	; 10684 <rb_fdlist_init+0x94>
   10650:	add	r2, pc, r0
   10654:	ldr	r1, [sp, #4]
   10658:	movw	r0, #68	; 0x44
   1065c:	bl	547c <rb_bh_create@plt>
   10660:	ldr	r1, [pc, #24]	; 10680 <rb_fdlist_init+0x90>
   10664:	add	r1, pc, r1
   10668:	str	r0, [r1]
   1066c:	mov	sp, fp
   10670:	pop	{fp, pc}
   10674:	.word	0x00036894
   10678:	.word	0x00023d80
   1067c:	.word	0x00036854
   10680:	.word	0x00036834
   10684:	.word	0x0001243b

00010688 <rb_close_all>:
   10688:	push	{fp, lr}
   1068c:	mov	fp, sp
   10690:	sub	sp, sp, #8
   10694:	movw	r0, #3
   10698:	str	r0, [sp, #4]
   1069c:	ldr	r0, [pc, #48]	; 106d4 <rb_close_all+0x4c>
   106a0:	ldr	r0, [pc, r0]
   106a4:	ldr	r1, [sp, #4]
   106a8:	ldr	r0, [r0]
   106ac:	cmp	r1, r0
   106b0:	bge	106cc <rb_close_all+0x44>
   106b4:	ldr	r0, [sp, #4]
   106b8:	bl	5308 <close@plt>
   106bc:	ldr	r0, [sp, #4]
   106c0:	add	r0, r0, #1
   106c4:	str	r0, [sp, #4]
   106c8:	b	1069c <rb_close_all+0x14>
   106cc:	mov	sp, fp
   106d0:	pop	{fp, pc}
   106d4:	.word	0x00023d00

000106d8 <add_fd>:
   106d8:	push	{fp, lr}
   106dc:	mov	fp, sp
   106e0:	sub	sp, sp, #16
   106e4:	str	r0, [sp, #8]
   106e8:	ldr	r0, [sp, #8]
   106ec:	bl	10b04 <rb_find_fd>
   106f0:	str	r0, [sp, #4]
   106f4:	ldr	r0, [sp, #4]
   106f8:	movw	r1, #0
   106fc:	cmp	r0, r1
   10700:	beq	10710 <add_fd+0x38>
   10704:	ldr	r0, [sp, #4]
   10708:	str	r0, [fp, #-4]
   1070c:	b	1078c <add_fd+0xb4>
   10710:	ldr	r0, [pc, #132]	; 1079c <add_fd+0xc4>
   10714:	add	r0, pc, r0
   10718:	ldr	r0, [r0]
   1071c:	bl	5320 <rb_bh_alloc@plt>
   10720:	ldr	r1, [pc, #112]	; 10798 <add_fd+0xc0>
   10724:	ldr	r1, [pc, r1]
   10728:	str	r0, [sp, #4]
   1072c:	ldr	r0, [sp, #8]
   10730:	ldr	r2, [sp, #4]
   10734:	str	r0, [r2, #12]
   10738:	ldr	r0, [sp, #4]
   1073c:	ldr	r2, [sp, #4]
   10740:	ldr	r1, [r1]
   10744:	ldr	r3, [sp, #8]
   10748:	ldr	ip, [sp, #8]
   1074c:	asr	ip, ip, #12
   10750:	eor	r3, r3, ip
   10754:	ldr	ip, [sp, #8]
   10758:	asr	ip, ip, #24
   1075c:	eor	r3, r3, ip
   10760:	movw	ip, #4095	; 0xfff
   10764:	and	r3, r3, ip
   10768:	movw	ip, #12
   1076c:	mul	r3, r3, ip
   10770:	add	r1, r1, r3
   10774:	str	r1, [sp]
   10778:	mov	r1, r2
   1077c:	ldr	r2, [sp]
   10780:	bl	f050 <rb_dlinkAdd>
   10784:	ldr	r0, [sp, #4]
   10788:	str	r0, [fp, #-4]
   1078c:	ldr	r0, [fp, #-4]
   10790:	mov	sp, fp
   10794:	pop	{fp, pc}
   10798:	.word	0x00023c9c
   1079c:	.word	0x00036784

000107a0 <rb_strndup>:
   107a0:	push	{fp, lr}
   107a4:	mov	fp, sp
   107a8:	sub	sp, sp, #16
   107ac:	str	r0, [fp, #-4]
   107b0:	str	r1, [sp, #8]
   107b4:	ldr	r0, [sp, #8]
   107b8:	bl	5374 <malloc@plt>
   107bc:	str	r0, [sp, #4]
   107c0:	ldr	r0, [sp, #4]
   107c4:	movw	r1, #0
   107c8:	cmp	r0, r1
   107cc:	movw	r0, #0
   107d0:	moveq	r0, #1
   107d4:	mvn	r1, #0
   107d8:	eor	r0, r0, r1
   107dc:	eor	r0, r0, r1
   107e0:	tst	r0, #1
   107e4:	beq	107ec <rb_strndup+0x4c>
   107e8:	bl	5350 <rb_outofmemory@plt>
   107ec:	ldr	r0, [sp, #4]
   107f0:	ldr	r1, [fp, #-4]
   107f4:	ldr	r2, [sp, #8]
   107f8:	bl	5068 <rb_strlcpy@plt>
   107fc:	ldr	r1, [sp, #4]
   10800:	str	r0, [sp]
   10804:	mov	r0, r1
   10808:	mov	sp, fp
   1080c:	pop	{fp, pc}

00010810 <remove_fd>:
   10810:	push	{fp, lr}
   10814:	mov	fp, sp
   10818:	sub	sp, sp, #8
   1081c:	str	r0, [sp, #4]
   10820:	ldr	r0, [sp, #4]
   10824:	movw	r1, #0
   10828:	cmp	r0, r1
   1082c:	beq	10844 <remove_fd+0x34>
   10830:	ldr	r0, [sp, #4]
   10834:	ldrb	r0, [r0, #16]
   10838:	and	r0, r0, #1
   1083c:	cmp	r0, #0
   10840:	bne	10848 <remove_fd+0x38>
   10844:	b	108ac <remove_fd+0x9c>
   10848:	ldr	r0, [pc, #100]	; 108b4 <remove_fd+0xa4>
   1084c:	add	r2, pc, r0
   10850:	ldr	r0, [pc, #96]	; 108b8 <remove_fd+0xa8>
   10854:	ldr	r0, [pc, r0]
   10858:	ldr	r1, [sp, #4]
   1085c:	ldr	r0, [r0]
   10860:	ldr	r3, [sp, #4]
   10864:	ldr	r3, [r3, #12]
   10868:	ldr	ip, [sp, #4]
   1086c:	ldr	ip, [ip, #12]
   10870:	asr	ip, ip, #12
   10874:	eor	r3, r3, ip
   10878:	ldr	ip, [sp, #4]
   1087c:	ldr	ip, [ip, #12]
   10880:	asr	ip, ip, #24
   10884:	eor	r3, r3, ip
   10888:	movw	ip, #4095	; 0xfff
   1088c:	and	r3, r3, ip
   10890:	movw	ip, #12
   10894:	mul	r3, r3, ip
   10898:	add	r0, r0, r3
   1089c:	str	r0, [sp]
   108a0:	mov	r0, r1
   108a4:	ldr	r1, [sp]
   108a8:	bl	13358 <rb_dlinkMoveNode>
   108ac:	mov	sp, fp
   108b0:	pop	{fp, pc}
   108b4:	.word	0x00036688
   108b8:	.word	0x00023b6c

000108bc <rb_dump_fd>:
   108bc:	push	{fp, lr}
   108c0:	mov	fp, sp
   108c4:	sub	sp, sp, #40	; 0x28
   108c8:	str	r0, [fp, #-4]
   108cc:	str	r1, [fp, #-8]
   108d0:	movw	r0, #0
   108d4:	str	r0, [sp, #16]
   108d8:	ldr	r0, [sp, #16]
   108dc:	cmp	r0, #4096	; 0x1000
   108e0:	bcs	109f4 <rb_dump_fd+0x138>
   108e4:	ldr	r0, [pc, #272]	; 109fc <rb_dump_fd+0x140>
   108e8:	ldr	r0, [pc, r0]
   108ec:	ldr	r0, [r0]
   108f0:	ldr	r1, [sp, #16]
   108f4:	movw	r2, #12
   108f8:	mul	r1, r1, r2
   108fc:	add	r0, r0, r1
   10900:	str	r0, [fp, #-16]
   10904:	ldr	r0, [fp, #-16]
   10908:	ldr	r0, [r0, #8]
   1090c:	cmp	r0, #0
   10910:	bhi	10918 <rb_dump_fd+0x5c>
   10914:	b	109e4 <rb_dump_fd+0x128>
   10918:	ldr	r0, [fp, #-16]
   1091c:	ldr	r0, [r0]
   10920:	str	r0, [fp, #-12]
   10924:	ldr	r0, [fp, #-12]
   10928:	movw	r1, #0
   1092c:	cmp	r0, r1
   10930:	beq	109e0 <rb_dump_fd+0x124>
   10934:	ldr	r0, [fp, #-12]
   10938:	ldr	r0, [r0]
   1093c:	str	r0, [sp, #20]
   10940:	ldr	r0, [sp, #20]
   10944:	movw	r1, #0
   10948:	cmp	r0, r1
   1094c:	beq	10964 <rb_dump_fd+0xa8>
   10950:	ldr	r0, [sp, #20]
   10954:	ldrb	r0, [r0, #16]
   10958:	and	r0, r0, #1
   1095c:	cmp	r0, #0
   10960:	bne	10968 <rb_dump_fd+0xac>
   10964:	b	109d0 <rb_dump_fd+0x114>
   10968:	ldr	r0, [fp, #-4]
   1096c:	ldr	r1, [sp, #20]
   10970:	ldr	r1, [r1, #12]
   10974:	ldr	r2, [sp, #20]
   10978:	ldr	r2, [r2, #24]
   1097c:	movw	r3, #0
   10980:	cmp	r2, r3
   10984:	str	r0, [sp, #12]
   10988:	str	r1, [sp, #8]
   1098c:	beq	109a0 <rb_dump_fd+0xe4>
   10990:	ldr	r0, [sp, #20]
   10994:	ldr	r0, [r0, #24]
   10998:	str	r0, [sp, #4]
   1099c:	b	109b0 <rb_dump_fd+0xf4>
   109a0:	ldr	r0, [pc, #88]	; 10a00 <rb_dump_fd+0x144>
   109a4:	add	r0, pc, r0
   109a8:	ldr	r0, [r0]
   109ac:	str	r0, [sp, #4]
   109b0:	ldr	r0, [sp, #4]
   109b4:	ldr	r2, [fp, #-8]
   109b8:	ldr	r1, [sp, #8]
   109bc:	str	r0, [sp]
   109c0:	mov	r0, r1
   109c4:	ldr	r1, [sp]
   109c8:	ldr	r3, [sp, #12]
   109cc:	blx	r3
   109d0:	ldr	r0, [fp, #-12]
   109d4:	ldr	r0, [r0, #8]
   109d8:	str	r0, [fp, #-12]
   109dc:	b	10924 <rb_dump_fd+0x68>
   109e0:	b	109e4 <rb_dump_fd+0x128>
   109e4:	ldr	r0, [sp, #16]
   109e8:	add	r0, r0, #1
   109ec:	str	r0, [sp, #16]
   109f0:	b	108d8 <rb_dump_fd+0x1c>
   109f4:	mov	sp, fp
   109f8:	pop	{fp, pc}
   109fc:	.word	0x00023ad8
   10a00:	.word	0x00023ae8

00010a04 <rb_note>:
   10a04:	push	{fp, lr}
   10a08:	mov	fp, sp
   10a0c:	sub	sp, sp, #8
   10a10:	str	r0, [sp, #4]
   10a14:	str	r1, [sp]
   10a18:	ldr	r0, [sp, #4]
   10a1c:	movw	r1, #0
   10a20:	cmp	r0, r1
   10a24:	bne	10a2c <rb_note+0x28>
   10a28:	b	10a4c <rb_note+0x48>
   10a2c:	ldr	r0, [sp, #4]
   10a30:	ldr	r0, [r0, #24]
   10a34:	bl	efb0 <rb_free>
   10a38:	ldr	r0, [sp]
   10a3c:	movw	r1, #128	; 0x80
   10a40:	bl	107a0 <rb_strndup>
   10a44:	ldr	r1, [sp, #4]
   10a48:	str	r0, [r1, #24]
   10a4c:	mov	sp, fp
   10a50:	pop	{fp, pc}

00010a54 <rb_set_type>:
   10a54:	sub	sp, sp, #8
   10a58:	str	r0, [sp, #4]
   10a5c:	strb	r1, [sp, #3]
   10a60:	ldrb	r0, [sp, #3]
   10a64:	ldr	r1, [sp, #4]
   10a68:	strb	r0, [r1, #17]
   10a6c:	add	sp, sp, #8
   10a70:	bx	lr

00010a74 <rb_get_type>:
   10a74:	sub	sp, sp, #4
   10a78:	str	r0, [sp]
   10a7c:	ldr	r0, [sp]
   10a80:	ldrb	r0, [r0, #17]
   10a84:	add	sp, sp, #4
   10a88:	bx	lr

00010a8c <rb_fd_ssl>:
   10a8c:	sub	sp, sp, #8
   10a90:	str	r0, [sp]
   10a94:	ldr	r0, [sp]
   10a98:	movw	r1, #0
   10a9c:	cmp	r0, r1
   10aa0:	bne	10ab0 <rb_fd_ssl+0x24>
   10aa4:	movw	r0, #0
   10aa8:	str	r0, [sp, #4]
   10aac:	b	10ad8 <rb_fd_ssl+0x4c>
   10ab0:	ldr	r0, [sp]
   10ab4:	ldrb	r0, [r0, #17]
   10ab8:	and	r0, r0, #32
   10abc:	cmp	r0, #0
   10ac0:	beq	10ad0 <rb_fd_ssl+0x44>
   10ac4:	movw	r0, #1
   10ac8:	str	r0, [sp, #4]
   10acc:	b	10ad8 <rb_fd_ssl+0x4c>
   10ad0:	movw	r0, #0
   10ad4:	str	r0, [sp, #4]
   10ad8:	ldr	r0, [sp, #4]
   10adc:	add	sp, sp, #8
   10ae0:	bx	lr

00010ae4 <rb_get_fde>:
   10ae4:	push	{fp, lr}
   10ae8:	mov	fp, sp
   10aec:	sub	sp, sp, #8
   10af0:	str	r0, [sp, #4]
   10af4:	ldr	r0, [sp, #4]
   10af8:	bl	10b04 <rb_find_fd>
   10afc:	mov	sp, fp
   10b00:	pop	{fp, pc}

00010b04 <rb_find_fd>:
   10b04:	sub	sp, sp, #20
   10b08:	str	r0, [sp, #12]
   10b0c:	ldr	r0, [sp, #12]
   10b10:	cmp	r0, #0
   10b14:	movw	r0, #0
   10b18:	movlt	r0, #1
   10b1c:	mvn	r1, #0
   10b20:	eor	r0, r0, r1
   10b24:	eor	r0, r0, r1
   10b28:	tst	r0, #1
   10b2c:	beq	10b3c <rb_find_fd+0x38>
   10b30:	movw	r0, #0
   10b34:	str	r0, [sp, #16]
   10b38:	b	10c00 <rb_find_fd+0xfc>
   10b3c:	ldr	r0, [pc, #200]	; 10c0c <rb_find_fd+0x108>
   10b40:	ldr	r0, [pc, r0]
   10b44:	ldr	r0, [r0]
   10b48:	ldr	r1, [sp, #12]
   10b4c:	ldr	r2, [sp, #12]
   10b50:	asr	r2, r2, #12
   10b54:	eor	r1, r1, r2
   10b58:	ldr	r2, [sp, #12]
   10b5c:	asr	r2, r2, #24
   10b60:	eor	r1, r1, r2
   10b64:	movw	r2, #4095	; 0xfff
   10b68:	and	r1, r1, r2
   10b6c:	movw	r2, #12
   10b70:	mul	r1, r1, r2
   10b74:	add	r0, r0, r1
   10b78:	str	r0, [sp, #8]
   10b7c:	ldr	r0, [sp, #8]
   10b80:	ldr	r0, [r0]
   10b84:	movw	r1, #0
   10b88:	cmp	r0, r1
   10b8c:	bne	10b9c <rb_find_fd+0x98>
   10b90:	movw	r0, #0
   10b94:	str	r0, [sp, #16]
   10b98:	b	10c00 <rb_find_fd+0xfc>
   10b9c:	ldr	r0, [sp, #8]
   10ba0:	ldr	r0, [r0]
   10ba4:	str	r0, [sp, #4]
   10ba8:	ldr	r0, [sp, #4]
   10bac:	movw	r1, #0
   10bb0:	cmp	r0, r1
   10bb4:	beq	10bf8 <rb_find_fd+0xf4>
   10bb8:	ldr	r0, [sp, #4]
   10bbc:	ldr	r0, [r0]
   10bc0:	str	r0, [sp]
   10bc4:	ldr	r0, [sp]
   10bc8:	ldr	r0, [r0, #12]
   10bcc:	ldr	r1, [sp, #12]
   10bd0:	cmp	r0, r1
   10bd4:	bne	10be4 <rb_find_fd+0xe0>
   10bd8:	ldr	r0, [sp]
   10bdc:	str	r0, [sp, #16]
   10be0:	b	10c00 <rb_find_fd+0xfc>
   10be4:	b	10be8 <rb_find_fd+0xe4>
   10be8:	ldr	r0, [sp, #4]
   10bec:	ldr	r0, [r0, #8]
   10bf0:	str	r0, [sp, #4]
   10bf4:	b	10ba8 <rb_find_fd+0xa4>
   10bf8:	movw	r0, #0
   10bfc:	str	r0, [sp, #16]
   10c00:	ldr	r0, [sp, #16]
   10c04:	add	sp, sp, #20
   10c08:	bx	lr
   10c0c:	.word	0x00023880

00010c10 <rb_read>:
   10c10:	push	{fp, lr}
   10c14:	mov	fp, sp
   10c18:	sub	sp, sp, #24
   10c1c:	str	r0, [fp, #-8]
   10c20:	str	r1, [sp, #12]
   10c24:	str	r2, [sp, #8]
   10c28:	ldr	r0, [fp, #-8]
   10c2c:	movw	r1, #0
   10c30:	cmp	r0, r1
   10c34:	bne	10c44 <rb_read+0x34>
   10c38:	movw	r0, #0
   10c3c:	str	r0, [fp, #-4]
   10c40:	b	10cd4 <rb_read+0xc4>
   10c44:	ldr	r0, [fp, #-8]
   10c48:	ldrb	r0, [r0, #17]
   10c4c:	and	r0, r0, #32
   10c50:	cmp	r0, #0
   10c54:	beq	10c70 <rb_read+0x60>
   10c58:	ldr	r0, [fp, #-8]
   10c5c:	ldr	r1, [sp, #12]
   10c60:	ldr	r2, [sp, #8]
   10c64:	bl	143b4 <rb_ssl_read>
   10c68:	str	r0, [fp, #-4]
   10c6c:	b	10cd4 <rb_read+0xc4>
   10c70:	ldr	r0, [fp, #-8]
   10c74:	ldrb	r0, [r0, #17]
   10c78:	and	r0, r0, #4
   10c7c:	cmp	r0, #0
   10c80:	beq	10cbc <rb_read+0xac>
   10c84:	ldr	r0, [fp, #-8]
   10c88:	ldr	r0, [r0, #12]
   10c8c:	ldr	r1, [sp, #12]
   10c90:	ldr	r2, [sp, #8]
   10c94:	movw	r3, #0
   10c98:	bl	4f54 <recv@plt>
   10c9c:	str	r0, [sp, #4]
   10ca0:	ldr	r0, [sp, #4]
   10ca4:	cmp	r0, #0
   10ca8:	bge	10cb0 <rb_read+0xa0>
   10cac:	b	10cb0 <rb_read+0xa0>
   10cb0:	ldr	r0, [sp, #4]
   10cb4:	str	r0, [fp, #-4]
   10cb8:	b	10cd4 <rb_read+0xc4>
   10cbc:	ldr	r0, [fp, #-8]
   10cc0:	ldr	r0, [r0, #12]
   10cc4:	ldr	r1, [sp, #12]
   10cc8:	ldr	r2, [sp, #8]
   10ccc:	bl	50e0 <read@plt>
   10cd0:	str	r0, [fp, #-4]
   10cd4:	ldr	r0, [fp, #-4]
   10cd8:	mov	sp, fp
   10cdc:	pop	{fp, pc}

00010ce0 <rb_write>:
   10ce0:	push	{fp, lr}
   10ce4:	mov	fp, sp
   10ce8:	sub	sp, sp, #24
   10cec:	str	r0, [fp, #-8]
   10cf0:	str	r1, [sp, #12]
   10cf4:	str	r2, [sp, #8]
   10cf8:	ldr	r0, [fp, #-8]
   10cfc:	movw	r1, #0
   10d00:	cmp	r0, r1
   10d04:	bne	10d14 <rb_write+0x34>
   10d08:	movw	r0, #0
   10d0c:	str	r0, [fp, #-4]
   10d10:	b	10da4 <rb_write+0xc4>
   10d14:	ldr	r0, [fp, #-8]
   10d18:	ldrb	r0, [r0, #17]
   10d1c:	and	r0, r0, #32
   10d20:	cmp	r0, #0
   10d24:	beq	10d40 <rb_write+0x60>
   10d28:	ldr	r0, [fp, #-8]
   10d2c:	ldr	r1, [sp, #12]
   10d30:	ldr	r2, [sp, #8]
   10d34:	bl	14574 <rb_ssl_write>
   10d38:	str	r0, [fp, #-4]
   10d3c:	b	10da4 <rb_write+0xc4>
   10d40:	ldr	r0, [fp, #-8]
   10d44:	ldrb	r0, [r0, #17]
   10d48:	and	r0, r0, #4
   10d4c:	cmp	r0, #0
   10d50:	beq	10d8c <rb_write+0xac>
   10d54:	ldr	r0, [fp, #-8]
   10d58:	ldr	r0, [r0, #12]
   10d5c:	ldr	r1, [sp, #12]
   10d60:	ldr	r2, [sp, #8]
   10d64:	movw	r3, #16384	; 0x4000
   10d68:	bl	5464 <send@plt>
   10d6c:	str	r0, [sp, #4]
   10d70:	ldr	r0, [sp, #4]
   10d74:	cmp	r0, #0
   10d78:	bge	10d80 <rb_write+0xa0>
   10d7c:	b	10d80 <rb_write+0xa0>
   10d80:	ldr	r0, [sp, #4]
   10d84:	str	r0, [fp, #-4]
   10d88:	b	10da4 <rb_write+0xc4>
   10d8c:	ldr	r0, [fp, #-8]
   10d90:	ldr	r0, [r0, #12]
   10d94:	ldr	r1, [sp, #12]
   10d98:	ldr	r2, [sp, #8]
   10d9c:	bl	50f8 <write@plt>
   10da0:	str	r0, [fp, #-4]
   10da4:	ldr	r0, [fp, #-4]
   10da8:	mov	sp, fp
   10dac:	pop	{fp, pc}

00010db0 <rb_writev>:
   10db0:	push	{fp, lr}
   10db4:	mov	fp, sp
   10db8:	sub	sp, sp, #48	; 0x30
   10dbc:	str	r0, [fp, #-8]
   10dc0:	str	r1, [fp, #-12]
   10dc4:	str	r2, [fp, #-16]
   10dc8:	ldr	r0, [fp, #-8]
   10dcc:	movw	r1, #0
   10dd0:	cmp	r0, r1
   10dd4:	bne	10df0 <rb_writev+0x40>
   10dd8:	bl	56c8 <__errno_location@plt>
   10ddc:	movw	r1, #9
   10de0:	str	r1, [r0]
   10de4:	mvn	r0, #0
   10de8:	str	r0, [fp, #-4]
   10dec:	b	10e94 <rb_writev+0xe4>
   10df0:	ldr	r0, [fp, #-8]
   10df4:	ldrb	r0, [r0, #17]
   10df8:	and	r0, r0, #32
   10dfc:	cmp	r0, #0
   10e00:	beq	10e1c <rb_writev+0x6c>
   10e04:	ldr	r0, [fp, #-8]
   10e08:	ldr	r1, [fp, #-12]
   10e0c:	ldr	r2, [fp, #-16]
   10e10:	bl	10ea0 <rb_fake_writev>
   10e14:	str	r0, [fp, #-4]
   10e18:	b	10e94 <rb_writev+0xe4>
   10e1c:	ldr	r0, [fp, #-8]
   10e20:	ldrb	r0, [r0, #17]
   10e24:	and	r0, r0, #4
   10e28:	cmp	r0, #0
   10e2c:	beq	10e7c <rb_writev+0xcc>
   10e30:	add	r0, sp, #4
   10e34:	mov	r1, r0
   10e38:	str	r0, [sp]
   10e3c:	mov	r0, r1
   10e40:	movw	r1, #0
   10e44:	and	r1, r1, #255	; 0xff
   10e48:	movw	r2, #28
   10e4c:	bl	4ff0 <memset@plt>
   10e50:	ldr	r0, [fp, #-12]
   10e54:	str	r0, [sp, #12]
   10e58:	ldr	r0, [fp, #-16]
   10e5c:	str	r0, [sp, #16]
   10e60:	ldr	r0, [fp, #-8]
   10e64:	ldr	r0, [r0, #12]
   10e68:	ldr	r1, [sp]
   10e6c:	movw	r2, #16384	; 0x4000
   10e70:	bl	50d4 <sendmsg@plt>
   10e74:	str	r0, [fp, #-4]
   10e78:	b	10e94 <rb_writev+0xe4>
   10e7c:	ldr	r0, [fp, #-8]
   10e80:	ldr	r0, [r0, #12]
   10e84:	ldr	r1, [fp, #-12]
   10e88:	ldr	r2, [fp, #-16]
   10e8c:	bl	5050 <writev@plt>
   10e90:	str	r0, [fp, #-4]
   10e94:	ldr	r0, [fp, #-4]
   10e98:	mov	sp, fp
   10e9c:	pop	{fp, pc}

00010ea0 <rb_fake_writev>:
   10ea0:	push	{fp, lr}
   10ea4:	mov	fp, sp
   10ea8:	sub	sp, sp, #24
   10eac:	str	r0, [fp, #-8]
   10eb0:	str	r1, [sp, #12]
   10eb4:	str	r2, [sp, #8]
   10eb8:	movw	r0, #0
   10ebc:	str	r0, [sp, #4]
   10ec0:	ldr	r0, [sp, #8]
   10ec4:	mvn	r1, #0
   10ec8:	add	r1, r0, r1
   10ecc:	str	r1, [sp, #8]
   10ed0:	cmp	r0, #0
   10ed4:	bls	10f44 <rb_fake_writev+0xa4>
   10ed8:	ldr	r0, [fp, #-8]
   10edc:	ldr	r1, [sp, #12]
   10ee0:	ldr	r1, [r1]
   10ee4:	ldr	r2, [sp, #12]
   10ee8:	ldr	r2, [r2, #4]
   10eec:	bl	5020 <rb_write@plt>
   10ef0:	str	r0, [sp]
   10ef4:	ldr	r0, [sp]
   10ef8:	cmp	r0, #0
   10efc:	bgt	10f24 <rb_fake_writev+0x84>
   10f00:	ldr	r0, [sp, #4]
   10f04:	cmp	r0, #0
   10f08:	ble	10f18 <rb_fake_writev+0x78>
   10f0c:	ldr	r0, [sp, #4]
   10f10:	str	r0, [fp, #-4]
   10f14:	b	10f4c <rb_fake_writev+0xac>
   10f18:	ldr	r0, [sp]
   10f1c:	str	r0, [fp, #-4]
   10f20:	b	10f4c <rb_fake_writev+0xac>
   10f24:	ldr	r0, [sp]
   10f28:	ldr	r1, [sp, #4]
   10f2c:	add	r0, r1, r0
   10f30:	str	r0, [sp, #4]
   10f34:	ldr	r0, [sp, #12]
   10f38:	add	r0, r0, #8
   10f3c:	str	r0, [sp, #12]
   10f40:	b	10ec0 <rb_fake_writev+0x20>
   10f44:	ldr	r0, [sp, #4]
   10f48:	str	r0, [fp, #-4]
   10f4c:	ldr	r0, [fp, #-4]
   10f50:	mov	sp, fp
   10f54:	pop	{fp, pc}

00010f58 <rb_inet_pton_sock>:
   10f58:	push	{fp, lr}
   10f5c:	mov	fp, sp
   10f60:	sub	sp, sp, #24
   10f64:	str	r0, [fp, #-8]
   10f68:	str	r1, [sp, #12]
   10f6c:	ldr	r0, [sp, #12]
   10f70:	movw	r1, #0
   10f74:	and	r1, r1, #255	; 0xff
   10f78:	movw	r2, #128	; 0x80
   10f7c:	bl	4ff0 <memset@plt>
   10f80:	ldr	r1, [fp, #-8]
   10f84:	ldr	r0, [sp, #12]
   10f88:	add	r0, r0, #4
   10f8c:	movw	r2, #2
   10f90:	str	r0, [sp, #8]
   10f94:	mov	r0, r2
   10f98:	ldr	r2, [sp, #8]
   10f9c:	bl	4ffc <rb_inet_pton@plt>
   10fa0:	cmp	r0, #0
   10fa4:	beq	11000 <rb_inet_pton_sock+0xa8>
   10fa8:	ldr	r0, [sp, #12]
   10fac:	movw	r1, #2
   10fb0:	strh	r1, [r0]
   10fb4:	ldr	r0, [sp, #12]
   10fb8:	ldrh	r0, [r0]
   10fbc:	cmp	r0, #2
   10fc0:	bne	10fd4 <rb_inet_pton_sock+0x7c>
   10fc4:	ldr	r0, [sp, #12]
   10fc8:	movw	r1, #0
   10fcc:	strh	r1, [r0, #2]
   10fd0:	b	10fe0 <rb_inet_pton_sock+0x88>
   10fd4:	ldr	r0, [sp, #12]
   10fd8:	movw	r1, #0
   10fdc:	strh	r1, [r0, #2]
   10fe0:	b	10fe4 <rb_inet_pton_sock+0x8c>
   10fe4:	ldr	r0, [sp, #12]
   10fe8:	ldrh	r0, [r0]
   10fec:	ldr	r1, [sp, #12]
   10ff0:	strh	r0, [r1]
   10ff4:	movw	r0, #1
   10ff8:	str	r0, [fp, #-4]
   10ffc:	b	1108c <rb_inet_pton_sock+0x134>
   11000:	ldr	r1, [fp, #-8]
   11004:	ldr	r0, [sp, #12]
   11008:	add	r0, r0, #8
   1100c:	movw	r2, #10
   11010:	str	r0, [sp, #4]
   11014:	mov	r0, r2
   11018:	ldr	r2, [sp, #4]
   1101c:	bl	4ffc <rb_inet_pton@plt>
   11020:	cmp	r0, #0
   11024:	beq	11080 <rb_inet_pton_sock+0x128>
   11028:	ldr	r0, [sp, #12]
   1102c:	movw	r1, #10
   11030:	strh	r1, [r0]
   11034:	ldr	r0, [sp, #12]
   11038:	ldrh	r0, [r0]
   1103c:	cmp	r0, #2
   11040:	bne	11054 <rb_inet_pton_sock+0xfc>
   11044:	ldr	r0, [sp, #12]
   11048:	movw	r1, #0
   1104c:	strh	r1, [r0, #2]
   11050:	b	11060 <rb_inet_pton_sock+0x108>
   11054:	ldr	r0, [sp, #12]
   11058:	movw	r1, #0
   1105c:	strh	r1, [r0, #2]
   11060:	b	11064 <rb_inet_pton_sock+0x10c>
   11064:	ldr	r0, [sp, #12]
   11068:	ldrh	r0, [r0]
   1106c:	ldr	r1, [sp, #12]
   11070:	strh	r0, [r1]
   11074:	movw	r0, #1
   11078:	str	r0, [fp, #-4]
   1107c:	b	1108c <rb_inet_pton_sock+0x134>
   11080:	b	11084 <rb_inet_pton_sock+0x12c>
   11084:	movw	r0, #0
   11088:	str	r0, [fp, #-4]
   1108c:	ldr	r0, [fp, #-4]
   11090:	mov	sp, fp
   11094:	pop	{fp, pc}

00011098 <rb_inet_pton>:
   11098:	push	{fp, lr}
   1109c:	mov	fp, sp
   110a0:	sub	sp, sp, #80	; 0x50
   110a4:	str	r0, [fp, #-8]
   110a8:	str	r1, [fp, #-12]
   110ac:	str	r2, [fp, #-16]
   110b0:	ldr	r0, [fp, #-8]
   110b4:	cmp	r0, #2
   110b8:	str	r0, [sp, #4]
   110bc:	beq	110d4 <rb_inet_pton+0x3c>
   110c0:	b	110c4 <rb_inet_pton+0x2c>
   110c4:	ldr	r0, [sp, #4]
   110c8:	cmp	r0, #10
   110cc:	beq	110e8 <rb_inet_pton+0x50>
   110d0:	b	11144 <rb_inet_pton+0xac>
   110d4:	ldr	r0, [fp, #-12]
   110d8:	ldr	r1, [fp, #-16]
   110dc:	bl	117f4 <inet_pton4>
   110e0:	str	r0, [fp, #-4]
   110e4:	b	1114c <rb_inet_pton+0xb4>
   110e8:	ldr	r0, [fp, #-12]
   110ec:	ldr	r1, [fp, #-16]
   110f0:	bl	117f4 <inet_pton4>
   110f4:	cmp	r0, #0
   110f8:	beq	11130 <rb_inet_pton+0x98>
   110fc:	ldr	r0, [pc, #84]	; 11158 <rb_inet_pton+0xc0>
   11100:	add	r1, pc, r0
   11104:	add	r0, sp, #11
   11108:	ldr	r2, [fp, #-12]
   1110c:	bl	56e0 <sprintf@plt>
   11110:	add	r1, sp, #11
   11114:	ldr	r2, [fp, #-16]
   11118:	str	r0, [sp]
   1111c:	mov	r0, r1
   11120:	mov	r1, r2
   11124:	bl	11980 <inet_pton6>
   11128:	str	r0, [fp, #-4]
   1112c:	b	1114c <rb_inet_pton+0xb4>
   11130:	ldr	r0, [fp, #-12]
   11134:	ldr	r1, [fp, #-16]
   11138:	bl	11980 <inet_pton6>
   1113c:	str	r0, [fp, #-4]
   11140:	b	1114c <rb_inet_pton+0xb4>
   11144:	mvn	r0, #0
   11148:	str	r0, [fp, #-4]
   1114c:	ldr	r0, [fp, #-4]
   11150:	mov	sp, fp
   11154:	pop	{fp, pc}
   11158:	.word	0x000119cb

0001115c <rb_inet_ntop_sock>:
   1115c:	push	{fp, lr}
   11160:	mov	fp, sp
   11164:	sub	sp, sp, #32
   11168:	str	r0, [fp, #-8]
   1116c:	str	r1, [fp, #-12]
   11170:	str	r2, [sp, #16]
   11174:	ldr	r0, [fp, #-8]
   11178:	ldrh	r0, [r0]
   1117c:	cmp	r0, #2
   11180:	str	r0, [sp, #12]
   11184:	beq	1119c <rb_inet_ntop_sock+0x40>
   11188:	b	1118c <rb_inet_ntop_sock+0x30>
   1118c:	ldr	r0, [sp, #12]
   11190:	cmp	r0, #10
   11194:	beq	111c8 <rb_inet_ntop_sock+0x6c>
   11198:	b	111f4 <rb_inet_ntop_sock+0x98>
   1119c:	ldr	r0, [fp, #-8]
   111a0:	add	r0, r0, #4
   111a4:	ldr	r2, [fp, #-12]
   111a8:	ldr	r3, [sp, #16]
   111ac:	movw	r1, #2
   111b0:	str	r0, [sp, #8]
   111b4:	mov	r0, r1
   111b8:	ldr	r1, [sp, #8]
   111bc:	bl	5314 <rb_inet_ntop@plt>
   111c0:	str	r0, [fp, #-4]
   111c4:	b	111fc <rb_inet_ntop_sock+0xa0>
   111c8:	ldr	r0, [fp, #-8]
   111cc:	add	r0, r0, #8
   111d0:	ldr	r2, [fp, #-12]
   111d4:	ldr	r3, [sp, #16]
   111d8:	movw	r1, #10
   111dc:	str	r0, [sp, #4]
   111e0:	mov	r0, r1
   111e4:	ldr	r1, [sp, #4]
   111e8:	bl	5314 <rb_inet_ntop@plt>
   111ec:	str	r0, [fp, #-4]
   111f0:	b	111fc <rb_inet_ntop_sock+0xa0>
   111f4:	movw	r0, #0
   111f8:	str	r0, [fp, #-4]
   111fc:	ldr	r0, [fp, #-4]
   11200:	mov	sp, fp
   11204:	pop	{fp, pc}

00011208 <rb_inet_ntop>:
   11208:	push	{fp, lr}
   1120c:	mov	fp, sp
   11210:	sub	sp, sp, #56	; 0x38
   11214:	str	r0, [fp, #-8]
   11218:	str	r1, [fp, #-12]
   1121c:	str	r2, [fp, #-16]
   11220:	str	r3, [fp, #-20]	; 0xffffffec
   11224:	ldr	r0, [fp, #-8]
   11228:	cmp	r0, #2
   1122c:	str	r0, [sp, #16]
   11230:	beq	11248 <rb_inet_ntop+0x40>
   11234:	b	11238 <rb_inet_ntop+0x30>
   11238:	ldr	r0, [sp, #16]
   1123c:	cmp	r0, #10
   11240:	beq	11260 <rb_inet_ntop+0x58>
   11244:	b	11394 <rb_inet_ntop+0x18c>
   11248:	ldr	r0, [fp, #-12]
   1124c:	ldr	r1, [fp, #-16]
   11250:	ldr	r2, [fp, #-20]	; 0xffffffec
   11254:	bl	113a8 <inet_ntop4>
   11258:	str	r0, [fp, #-4]
   1125c:	b	1139c <rb_inet_ntop+0x194>
   11260:	ldr	r0, [fp, #-12]
   11264:	str	r0, [fp, #-24]	; 0xffffffe8
   11268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1126c:	ldr	r0, [r0]
   11270:	cmp	r0, #0
   11274:	movw	r0, #0
   11278:	str	r0, [sp, #12]
   1127c:	bne	112c4 <rb_inet_ntop+0xbc>
   11280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11284:	ldr	r0, [r0, #4]
   11288:	cmp	r0, #0
   1128c:	movw	r0, #0
   11290:	str	r0, [sp, #12]
   11294:	bne	112c4 <rb_inet_ntop+0xbc>
   11298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1129c:	ldr	r0, [r0, #8]
   112a0:	movw	r1, #65535	; 0xffff
   112a4:	str	r0, [sp, #8]
   112a8:	mov	r0, r1
   112ac:	bl	54e8 <htonl@plt>
   112b0:	ldr	r1, [sp, #8]
   112b4:	cmp	r1, r0
   112b8:	movw	r0, #0
   112bc:	moveq	r0, #1
   112c0:	str	r0, [sp, #12]
   112c4:	ldr	r0, [sp, #12]
   112c8:	and	r0, r0, #1
   112cc:	str	r0, [sp, #28]
   112d0:	ldr	r0, [sp, #28]
   112d4:	cmp	r0, #0
   112d8:	bne	11360 <rb_inet_ntop+0x158>
   112dc:	ldr	r0, [fp, #-12]
   112e0:	str	r0, [sp, #24]
   112e4:	ldr	r0, [sp, #24]
   112e8:	ldr	r0, [r0]
   112ec:	cmp	r0, #0
   112f0:	movw	r0, #0
   112f4:	str	r0, [sp, #4]
   112f8:	bne	11348 <rb_inet_ntop+0x140>
   112fc:	ldr	r0, [sp, #24]
   11300:	ldr	r0, [r0, #4]
   11304:	cmp	r0, #0
   11308:	movw	r0, #0
   1130c:	str	r0, [sp, #4]
   11310:	bne	11348 <rb_inet_ntop+0x140>
   11314:	ldr	r0, [sp, #24]
   11318:	ldr	r0, [r0, #8]
   1131c:	cmp	r0, #0
   11320:	movw	r0, #0
   11324:	str	r0, [sp, #4]
   11328:	bne	11348 <rb_inet_ntop+0x140>
   1132c:	ldr	r0, [sp, #24]
   11330:	ldr	r0, [r0, #12]
   11334:	bl	5074 <ntohl@plt>
   11338:	cmp	r0, #1
   1133c:	movw	r0, #0
   11340:	movhi	r0, #1
   11344:	str	r0, [sp, #4]
   11348:	ldr	r0, [sp, #4]
   1134c:	and	r0, r0, #1
   11350:	str	r0, [sp, #20]
   11354:	ldr	r0, [sp, #20]
   11358:	cmp	r0, #0
   1135c:	beq	1137c <rb_inet_ntop+0x174>
   11360:	ldr	r0, [fp, #-12]
   11364:	add	r0, r0, #12
   11368:	ldr	r1, [fp, #-16]
   1136c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11370:	bl	113a8 <inet_ntop4>
   11374:	str	r0, [fp, #-4]
   11378:	b	1139c <rb_inet_ntop+0x194>
   1137c:	ldr	r0, [fp, #-12]
   11380:	ldr	r1, [fp, #-16]
   11384:	ldr	r2, [fp, #-20]	; 0xffffffec
   11388:	bl	11410 <inet_ntop6>
   1138c:	str	r0, [fp, #-4]
   11390:	b	1139c <rb_inet_ntop+0x194>
   11394:	movw	r0, #0
   11398:	str	r0, [fp, #-4]
   1139c:	ldr	r0, [fp, #-4]
   113a0:	mov	sp, fp
   113a4:	pop	{fp, pc}

000113a8 <inet_ntop4>:
   113a8:	push	{fp, lr}
   113ac:	mov	fp, sp
   113b0:	sub	sp, sp, #24
   113b4:	str	r0, [fp, #-8]
   113b8:	str	r1, [sp, #12]
   113bc:	str	r2, [sp, #8]
   113c0:	ldr	r0, [sp, #8]
   113c4:	cmp	r0, #16
   113c8:	bcs	113d8 <inet_ntop4+0x30>
   113cc:	movw	r0, #0
   113d0:	str	r0, [fp, #-4]
   113d4:	b	11404 <inet_ntop4+0x5c>
   113d8:	ldr	r0, [sp, #12]
   113dc:	ldr	r1, [fp, #-8]
   113e0:	str	r0, [sp, #4]
   113e4:	mov	r0, r1
   113e8:	bl	1347c <inetntoa>
   113ec:	ldr	r1, [sp, #4]
   113f0:	str	r0, [sp]
   113f4:	mov	r0, r1
   113f8:	ldr	r1, [sp]
   113fc:	bl	5254 <strcpy@plt>
   11400:	str	r0, [fp, #-4]
   11404:	ldr	r0, [fp, #-4]
   11408:	mov	sp, fp
   1140c:	pop	{fp, pc}

00011410 <inet_ntop6>:
   11410:	push	{fp, lr}
   11414:	mov	fp, sp
   11418:	sub	sp, sp, #136	; 0x88
   1141c:	add	r3, sp, #20
   11420:	str	r0, [fp, #-8]
   11424:	str	r1, [fp, #-12]
   11428:	str	r2, [fp, #-16]
   1142c:	mov	r0, r3
   11430:	movw	r1, #0
   11434:	and	r1, r1, #255	; 0xff
   11438:	movw	r2, #32
   1143c:	bl	4ff0 <memset@plt>
   11440:	movw	r0, #0
   11444:	str	r0, [sp, #16]
   11448:	ldr	r0, [sp, #16]
   1144c:	cmp	r0, #16
   11450:	bge	1148c <inet_ntop6+0x7c>
   11454:	ldr	r0, [fp, #-8]
   11458:	ldr	r1, [sp, #16]
   1145c:	ldrb	r2, [r0, r1]!
   11460:	ldrb	r0, [r0, #1]
   11464:	orr	r0, r0, r2, lsl #8
   11468:	add	r1, r1, r1, lsr #31
   1146c:	asr	r1, r1, #1
   11470:	add	r2, sp, #20
   11474:	add	r1, r2, r1, lsl #2
   11478:	str	r0, [r1]
   1147c:	ldr	r0, [sp, #16]
   11480:	add	r0, r0, #2
   11484:	str	r0, [sp, #16]
   11488:	b	11448 <inet_ntop6+0x38>
   1148c:	mvn	r0, #0
   11490:	str	r0, [sp, #60]	; 0x3c
   11494:	movw	r1, #0
   11498:	str	r1, [sp, #64]	; 0x40
   1149c:	str	r0, [sp, #52]	; 0x34
   114a0:	str	r1, [sp, #56]	; 0x38
   114a4:	str	r1, [sp, #16]
   114a8:	ldr	r0, [sp, #16]
   114ac:	cmp	r0, #8
   114b0:	bge	11554 <inet_ntop6+0x144>
   114b4:	ldr	r0, [sp, #16]
   114b8:	add	r1, sp, #20
   114bc:	add	r0, r1, r0, lsl #2
   114c0:	ldr	r0, [r0]
   114c4:	cmp	r0, #0
   114c8:	bne	114fc <inet_ntop6+0xec>
   114cc:	ldr	r0, [sp, #52]	; 0x34
   114d0:	cmn	r0, #1
   114d4:	bne	114ec <inet_ntop6+0xdc>
   114d8:	ldr	r0, [sp, #16]
   114dc:	str	r0, [sp, #52]	; 0x34
   114e0:	movw	r0, #1
   114e4:	str	r0, [sp, #56]	; 0x38
   114e8:	b	114f8 <inet_ntop6+0xe8>
   114ec:	ldr	r0, [sp, #56]	; 0x38
   114f0:	add	r0, r0, #1
   114f4:	str	r0, [sp, #56]	; 0x38
   114f8:	b	11540 <inet_ntop6+0x130>
   114fc:	ldr	r0, [sp, #52]	; 0x34
   11500:	cmn	r0, #1
   11504:	beq	1153c <inet_ntop6+0x12c>
   11508:	ldr	r0, [sp, #60]	; 0x3c
   1150c:	cmn	r0, #1
   11510:	beq	11524 <inet_ntop6+0x114>
   11514:	ldr	r0, [sp, #56]	; 0x38
   11518:	ldr	r1, [sp, #64]	; 0x40
   1151c:	cmp	r0, r1
   11520:	ble	11534 <inet_ntop6+0x124>
   11524:	ldr	r0, [sp, #52]	; 0x34
   11528:	str	r0, [sp, #60]	; 0x3c
   1152c:	ldr	r0, [sp, #56]	; 0x38
   11530:	str	r0, [sp, #64]	; 0x40
   11534:	mvn	r0, #0
   11538:	str	r0, [sp, #52]	; 0x34
   1153c:	b	11540 <inet_ntop6+0x130>
   11540:	b	11544 <inet_ntop6+0x134>
   11544:	ldr	r0, [sp, #16]
   11548:	add	r0, r0, #1
   1154c:	str	r0, [sp, #16]
   11550:	b	114a8 <inet_ntop6+0x98>
   11554:	ldr	r0, [sp, #52]	; 0x34
   11558:	cmn	r0, #1
   1155c:	beq	11590 <inet_ntop6+0x180>
   11560:	ldr	r0, [sp, #60]	; 0x3c
   11564:	cmn	r0, #1
   11568:	beq	1157c <inet_ntop6+0x16c>
   1156c:	ldr	r0, [sp, #56]	; 0x38
   11570:	ldr	r1, [sp, #64]	; 0x40
   11574:	cmp	r0, r1
   11578:	ble	1158c <inet_ntop6+0x17c>
   1157c:	ldr	r0, [sp, #52]	; 0x34
   11580:	str	r0, [sp, #60]	; 0x3c
   11584:	ldr	r0, [sp, #56]	; 0x38
   11588:	str	r0, [sp, #64]	; 0x40
   1158c:	b	11590 <inet_ntop6+0x180>
   11590:	ldr	r0, [sp, #60]	; 0x3c
   11594:	cmn	r0, #1
   11598:	beq	115b0 <inet_ntop6+0x1a0>
   1159c:	ldr	r0, [sp, #64]	; 0x40
   115a0:	cmp	r0, #2
   115a4:	bge	115b0 <inet_ntop6+0x1a0>
   115a8:	mvn	r0, #0
   115ac:	str	r0, [sp, #60]	; 0x3c
   115b0:	sub	r0, fp, #62	; 0x3e
   115b4:	str	r0, [sp, #68]	; 0x44
   115b8:	movw	r0, #0
   115bc:	str	r0, [sp, #16]
   115c0:	ldr	r0, [sp, #16]
   115c4:	cmp	r0, #8
   115c8:	bge	11748 <inet_ntop6+0x338>
   115cc:	ldr	r0, [sp, #60]	; 0x3c
   115d0:	cmn	r0, #1
   115d4:	beq	11648 <inet_ntop6+0x238>
   115d8:	ldr	r0, [sp, #16]
   115dc:	ldr	r1, [sp, #60]	; 0x3c
   115e0:	cmp	r0, r1
   115e4:	blt	11648 <inet_ntop6+0x238>
   115e8:	ldr	r0, [sp, #16]
   115ec:	ldr	r1, [sp, #60]	; 0x3c
   115f0:	ldr	r2, [sp, #64]	; 0x40
   115f4:	add	r1, r1, r2
   115f8:	cmp	r0, r1
   115fc:	bge	11648 <inet_ntop6+0x238>
   11600:	ldr	r0, [sp, #16]
   11604:	ldr	r1, [sp, #60]	; 0x3c
   11608:	cmp	r0, r1
   1160c:	bne	11644 <inet_ntop6+0x234>
   11610:	ldr	r0, [sp, #16]
   11614:	cmp	r0, #0
   11618:	bne	11630 <inet_ntop6+0x220>
   1161c:	ldr	r0, [sp, #68]	; 0x44
   11620:	add	r1, r0, #1
   11624:	str	r1, [sp, #68]	; 0x44
   11628:	movw	r1, #48	; 0x30
   1162c:	strb	r1, [r0]
   11630:	ldr	r0, [sp, #68]	; 0x44
   11634:	add	r1, r0, #1
   11638:	str	r1, [sp, #68]	; 0x44
   1163c:	movw	r1, #58	; 0x3a
   11640:	strb	r1, [r0]
   11644:	b	11738 <inet_ntop6+0x328>
   11648:	ldr	r0, [sp, #16]
   1164c:	cmp	r0, #0
   11650:	beq	11668 <inet_ntop6+0x258>
   11654:	ldr	r0, [sp, #68]	; 0x44
   11658:	add	r1, r0, #1
   1165c:	str	r1, [sp, #68]	; 0x44
   11660:	movw	r1, #58	; 0x3a
   11664:	strb	r1, [r0]
   11668:	ldr	r0, [sp, #16]
   1166c:	cmp	r0, #6
   11670:	bne	1170c <inet_ntop6+0x2fc>
   11674:	ldr	r0, [sp, #60]	; 0x3c
   11678:	cmp	r0, #0
   1167c:	bne	1170c <inet_ntop6+0x2fc>
   11680:	ldr	r0, [sp, #64]	; 0x40
   11684:	cmp	r0, #6
   11688:	beq	116a8 <inet_ntop6+0x298>
   1168c:	ldr	r0, [sp, #64]	; 0x40
   11690:	cmp	r0, #5
   11694:	bne	1170c <inet_ntop6+0x2fc>
   11698:	ldr	r0, [sp, #40]	; 0x28
   1169c:	movw	r1, #65535	; 0xffff
   116a0:	cmp	r0, r1
   116a4:	bne	1170c <inet_ntop6+0x2fc>
   116a8:	sub	r0, fp, #62	; 0x3e
   116ac:	ldr	r1, [fp, #-8]
   116b0:	add	r1, r1, #12
   116b4:	ldr	r2, [sp, #68]	; 0x44
   116b8:	ldr	r3, [sp, #68]	; 0x44
   116bc:	sub	r0, r3, r0
   116c0:	movw	r3, #46	; 0x2e
   116c4:	sub	r0, r3, r0
   116c8:	str	r0, [sp, #12]
   116cc:	mov	r0, r1
   116d0:	mov	r1, r2
   116d4:	ldr	r2, [sp, #12]
   116d8:	bl	113a8 <inet_ntop4>
   116dc:	movw	r1, #0
   116e0:	cmp	r0, r1
   116e4:	bne	116f4 <inet_ntop6+0x2e4>
   116e8:	movw	r0, #0
   116ec:	str	r0, [fp, #-4]
   116f0:	b	117e4 <inet_ntop6+0x3d4>
   116f4:	ldr	r0, [sp, #68]	; 0x44
   116f8:	bl	51b8 <strlen@plt>
   116fc:	ldr	r1, [sp, #68]	; 0x44
   11700:	add	r0, r1, r0
   11704:	str	r0, [sp, #68]	; 0x44
   11708:	b	11748 <inet_ntop6+0x338>
   1170c:	ldr	r0, [pc, #220]	; 117f0 <inet_ntop6+0x3e0>
   11710:	add	r1, pc, r0
   11714:	ldr	r0, [sp, #68]	; 0x44
   11718:	ldr	r2, [sp, #16]
   1171c:	add	r3, sp, #20
   11720:	add	r2, r3, r2, lsl #2
   11724:	ldr	r2, [r2]
   11728:	bl	56e0 <sprintf@plt>
   1172c:	ldr	r1, [sp, #68]	; 0x44
   11730:	add	r0, r1, r0
   11734:	str	r0, [sp, #68]	; 0x44
   11738:	ldr	r0, [sp, #16]
   1173c:	add	r0, r0, #1
   11740:	str	r0, [sp, #16]
   11744:	b	115c0 <inet_ntop6+0x1b0>
   11748:	ldr	r0, [sp, #60]	; 0x3c
   1174c:	cmn	r0, #1
   11750:	beq	1177c <inet_ntop6+0x36c>
   11754:	ldr	r0, [sp, #60]	; 0x3c
   11758:	ldr	r1, [sp, #64]	; 0x40
   1175c:	add	r0, r0, r1
   11760:	cmp	r0, #8
   11764:	bne	1177c <inet_ntop6+0x36c>
   11768:	ldr	r0, [sp, #68]	; 0x44
   1176c:	add	r1, r0, #1
   11770:	str	r1, [sp, #68]	; 0x44
   11774:	movw	r1, #58	; 0x3a
   11778:	strb	r1, [r0]
   1177c:	sub	r0, fp, #62	; 0x3e
   11780:	ldr	r1, [sp, #68]	; 0x44
   11784:	add	r2, r1, #1
   11788:	str	r2, [sp, #68]	; 0x44
   1178c:	movw	r2, #0
   11790:	strb	r2, [r1]
   11794:	ldr	r1, [sp, #68]	; 0x44
   11798:	sub	r0, r1, r0
   1179c:	ldr	r1, [fp, #-16]
   117a0:	cmp	r0, r1
   117a4:	bls	117b4 <inet_ntop6+0x3a4>
   117a8:	movw	r0, #0
   117ac:	str	r0, [fp, #-4]
   117b0:	b	117e4 <inet_ntop6+0x3d4>
   117b4:	sub	r0, fp, #62	; 0x3e
   117b8:	ldr	r1, [fp, #-12]
   117bc:	ldr	r2, [sp, #68]	; 0x44
   117c0:	sub	r2, r2, r0
   117c4:	str	r0, [sp, #8]
   117c8:	mov	r0, r1
   117cc:	ldr	r3, [sp, #8]
   117d0:	str	r1, [sp, #4]
   117d4:	mov	r1, r3
   117d8:	bl	51dc <memcpy@plt>
   117dc:	ldr	r0, [sp, #4]
   117e0:	str	r0, [fp, #-4]
   117e4:	ldr	r0, [fp, #-4]
   117e8:	mov	sp, fp
   117ec:	pop	{fp, pc}
   117f0:	.word	0x00011820

000117f4 <inet_pton4>:
   117f4:	sub	sp, sp, #36	; 0x24
   117f8:	add	r2, sp, #8
   117fc:	str	r0, [sp, #28]
   11800:	str	r1, [sp, #24]
   11804:	movw	r0, #0
   11808:	str	r0, [sp, #20]
   1180c:	str	r0, [sp, #16]
   11810:	str	r2, [sp, #4]
   11814:	movw	r0, #0
   11818:	strb	r0, [sp, #8]
   1181c:	ldr	r0, [sp, #28]
   11820:	add	r1, r0, #1
   11824:	str	r1, [sp, #28]
   11828:	ldrb	r0, [r0]
   1182c:	str	r0, [sp, #12]
   11830:	cmp	r0, #0
   11834:	beq	11930 <inet_pton4+0x13c>
   11838:	ldr	r0, [sp, #12]
   1183c:	cmp	r0, #48	; 0x30
   11840:	blt	118cc <inet_pton4+0xd8>
   11844:	ldr	r0, [sp, #12]
   11848:	cmp	r0, #57	; 0x39
   1184c:	bgt	118cc <inet_pton4+0xd8>
   11850:	ldr	r0, [sp, #4]
   11854:	ldrb	r0, [r0]
   11858:	movw	r1, #10
   1185c:	mul	r0, r0, r1
   11860:	ldr	r1, [sp, #12]
   11864:	sub	r1, r1, #48	; 0x30
   11868:	add	r0, r0, r1
   1186c:	str	r0, [sp]
   11870:	ldr	r0, [sp]
   11874:	cmp	r0, #255	; 0xff
   11878:	bls	11888 <inet_pton4+0x94>
   1187c:	movw	r0, #0
   11880:	str	r0, [sp, #32]
   11884:	b	11974 <inet_pton4+0x180>
   11888:	ldr	r0, [sp]
   1188c:	ldr	r1, [sp, #4]
   11890:	strb	r0, [r1]
   11894:	ldr	r0, [sp, #20]
   11898:	cmp	r0, #0
   1189c:	bne	118c8 <inet_pton4+0xd4>
   118a0:	ldr	r0, [sp, #16]
   118a4:	add	r0, r0, #1
   118a8:	str	r0, [sp, #16]
   118ac:	cmp	r0, #4
   118b0:	ble	118c0 <inet_pton4+0xcc>
   118b4:	movw	r0, #0
   118b8:	str	r0, [sp, #32]
   118bc:	b	11974 <inet_pton4+0x180>
   118c0:	movw	r0, #1
   118c4:	str	r0, [sp, #20]
   118c8:	b	1192c <inet_pton4+0x138>
   118cc:	ldr	r0, [sp, #12]
   118d0:	cmp	r0, #46	; 0x2e
   118d4:	bne	1191c <inet_pton4+0x128>
   118d8:	ldr	r0, [sp, #20]
   118dc:	cmp	r0, #0
   118e0:	beq	1191c <inet_pton4+0x128>
   118e4:	ldr	r0, [sp, #16]
   118e8:	cmp	r0, #4
   118ec:	bne	118fc <inet_pton4+0x108>
   118f0:	movw	r0, #0
   118f4:	str	r0, [sp, #32]
   118f8:	b	11974 <inet_pton4+0x180>
   118fc:	ldr	r0, [sp, #4]
   11900:	add	r1, r0, #1
   11904:	str	r1, [sp, #4]
   11908:	movw	r1, #0
   1190c:	strb	r1, [r0, #1]
   11910:	movw	r0, #0
   11914:	str	r0, [sp, #20]
   11918:	b	11928 <inet_pton4+0x134>
   1191c:	movw	r0, #0
   11920:	str	r0, [sp, #32]
   11924:	b	11974 <inet_pton4+0x180>
   11928:	b	1192c <inet_pton4+0x138>
   1192c:	b	1181c <inet_pton4+0x28>
   11930:	ldr	r0, [sp, #16]
   11934:	cmp	r0, #4
   11938:	bge	11948 <inet_pton4+0x154>
   1193c:	movw	r0, #0
   11940:	str	r0, [sp, #32]
   11944:	b	11974 <inet_pton4+0x180>
   11948:	ldr	r0, [sp, #24]
   1194c:	ldrb	r1, [sp, #8]
   11950:	strb	r1, [r0]
   11954:	ldrb	r1, [sp, #9]
   11958:	strb	r1, [r0, #1]
   1195c:	ldrb	r1, [sp, #10]
   11960:	strb	r1, [r0, #2]
   11964:	ldrb	r1, [sp, #11]
   11968:	strb	r1, [r0, #3]
   1196c:	movw	r0, #1
   11970:	str	r0, [sp, #32]
   11974:	ldr	r0, [sp, #32]
   11978:	add	sp, sp, #36	; 0x24
   1197c:	bx	lr

00011980 <inet_pton6>:
   11980:	push	{fp, lr}
   11984:	mov	fp, sp
   11988:	sub	sp, sp, #72	; 0x48
   1198c:	sub	r2, fp, #28
   11990:	str	r0, [fp, #-8]
   11994:	str	r1, [fp, #-12]
   11998:	mov	r0, r2
   1199c:	movw	r1, #0
   119a0:	and	r1, r1, #255	; 0xff
   119a4:	movw	r3, #16
   119a8:	str	r2, [sp]
   119ac:	mov	r2, r3
   119b0:	bl	4ff0 <memset@plt>
   119b4:	ldr	r0, [sp]
   119b8:	str	r0, [fp, #-32]	; 0xffffffe0
   119bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   119c0:	add	r1, r1, #16
   119c4:	str	r1, [sp, #36]	; 0x24
   119c8:	movw	r1, #0
   119cc:	str	r1, [sp, #32]
   119d0:	ldr	r1, [fp, #-8]
   119d4:	ldrb	r1, [r1]
   119d8:	cmp	r1, #58	; 0x3a
   119dc:	bne	11a08 <inet_pton6+0x88>
   119e0:	ldr	r0, [fp, #-8]
   119e4:	add	r1, r0, #1
   119e8:	str	r1, [fp, #-8]
   119ec:	ldrb	r0, [r0, #1]
   119f0:	cmp	r0, #58	; 0x3a
   119f4:	beq	11a04 <inet_pton6+0x84>
   119f8:	movw	r0, #0
   119fc:	str	r0, [fp, #-4]
   11a00:	b	11dbc <inet_pton6+0x43c>
   11a04:	b	11a08 <inet_pton6+0x88>
   11a08:	ldr	r0, [fp, #-8]
   11a0c:	str	r0, [sp, #28]
   11a10:	movw	r0, #0
   11a14:	str	r0, [sp, #20]
   11a18:	str	r0, [sp, #16]
   11a1c:	ldr	r0, [fp, #-8]
   11a20:	add	r1, r0, #1
   11a24:	str	r1, [fp, #-8]
   11a28:	ldrb	r0, [r0]
   11a2c:	bl	56a4 <tolower@plt>
   11a30:	str	r0, [sp, #24]
   11a34:	cmp	r0, #0
   11a38:	beq	11bf4 <inet_pton6+0x274>
   11a3c:	ldr	r0, [pc, #900]	; 11dc8 <inet_pton6+0x448>
   11a40:	add	r0, pc, r0
   11a44:	ldr	r1, [sp, #24]
   11a48:	bl	4f78 <strchr@plt>
   11a4c:	str	r0, [sp, #12]
   11a50:	ldr	r0, [sp, #12]
   11a54:	movw	r1, #0
   11a58:	cmp	r0, r1
   11a5c:	beq	11ab0 <inet_pton6+0x130>
   11a60:	ldr	r0, [pc, #868]	; 11dcc <inet_pton6+0x44c>
   11a64:	add	r0, pc, r0
   11a68:	ldr	r1, [sp, #16]
   11a6c:	lsl	r1, r1, #4
   11a70:	str	r1, [sp, #16]
   11a74:	ldr	r1, [sp, #12]
   11a78:	sub	r0, r1, r0
   11a7c:	ldr	r1, [sp, #16]
   11a80:	orr	r0, r1, r0
   11a84:	str	r0, [sp, #16]
   11a88:	ldr	r0, [sp, #16]
   11a8c:	movw	r1, #65535	; 0xffff
   11a90:	cmp	r0, r1
   11a94:	bls	11aa4 <inet_pton6+0x124>
   11a98:	movw	r0, #0
   11a9c:	str	r0, [fp, #-4]
   11aa0:	b	11dbc <inet_pton6+0x43c>
   11aa4:	movw	r0, #1
   11aa8:	str	r0, [sp, #20]
   11aac:	b	11a1c <inet_pton6+0x9c>
   11ab0:	ldr	r0, [sp, #24]
   11ab4:	cmp	r0, #58	; 0x3a
   11ab8:	bne	11b84 <inet_pton6+0x204>
   11abc:	ldr	r0, [fp, #-8]
   11ac0:	str	r0, [sp, #28]
   11ac4:	ldr	r0, [sp, #20]
   11ac8:	cmp	r0, #0
   11acc:	bne	11af8 <inet_pton6+0x178>
   11ad0:	ldr	r0, [sp, #32]
   11ad4:	movw	r1, #0
   11ad8:	cmp	r0, r1
   11adc:	beq	11aec <inet_pton6+0x16c>
   11ae0:	movw	r0, #0
   11ae4:	str	r0, [fp, #-4]
   11ae8:	b	11dbc <inet_pton6+0x43c>
   11aec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11af0:	str	r0, [sp, #32]
   11af4:	b	11a1c <inet_pton6+0x9c>
   11af8:	ldr	r0, [fp, #-8]
   11afc:	ldrb	r0, [r0]
   11b00:	cmp	r0, #0
   11b04:	bne	11b14 <inet_pton6+0x194>
   11b08:	movw	r0, #0
   11b0c:	str	r0, [fp, #-4]
   11b10:	b	11dbc <inet_pton6+0x43c>
   11b14:	b	11b18 <inet_pton6+0x198>
   11b18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11b1c:	add	r0, r0, #2
   11b20:	ldr	r1, [sp, #36]	; 0x24
   11b24:	cmp	r0, r1
   11b28:	bls	11b38 <inet_pton6+0x1b8>
   11b2c:	movw	r0, #0
   11b30:	str	r0, [fp, #-4]
   11b34:	b	11dbc <inet_pton6+0x43c>
   11b38:	ldr	r0, [sp, #16]
   11b3c:	lsr	r0, r0, #8
   11b40:	and	r0, r0, #255	; 0xff
   11b44:	and	r0, r0, #255	; 0xff
   11b48:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11b4c:	add	r2, r1, #1
   11b50:	str	r2, [fp, #-32]	; 0xffffffe0
   11b54:	strb	r0, [r1]
   11b58:	ldr	r0, [sp, #16]
   11b5c:	and	r0, r0, #255	; 0xff
   11b60:	and	r0, r0, #255	; 0xff
   11b64:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11b68:	add	r2, r1, #1
   11b6c:	str	r2, [fp, #-32]	; 0xffffffe0
   11b70:	strb	r0, [r1]
   11b74:	movw	r0, #0
   11b78:	str	r0, [sp, #20]
   11b7c:	str	r0, [sp, #16]
   11b80:	b	11a1c <inet_pton6+0x9c>
   11b84:	ldr	r0, [fp, #-8]
   11b88:	ldrb	r0, [r0]
   11b8c:	cmp	r0, #0
   11b90:	beq	11be4 <inet_pton6+0x264>
   11b94:	ldr	r0, [sp, #24]
   11b98:	cmp	r0, #46	; 0x2e
   11b9c:	bne	11be4 <inet_pton6+0x264>
   11ba0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ba4:	add	r0, r0, #4
   11ba8:	ldr	r1, [sp, #36]	; 0x24
   11bac:	cmp	r0, r1
   11bb0:	bhi	11be0 <inet_pton6+0x260>
   11bb4:	ldr	r0, [sp, #28]
   11bb8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11bbc:	bl	117f4 <inet_pton4>
   11bc0:	cmp	r0, #0
   11bc4:	ble	11be0 <inet_pton6+0x260>
   11bc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11bcc:	add	r0, r0, #4
   11bd0:	str	r0, [fp, #-32]	; 0xffffffe0
   11bd4:	movw	r0, #0
   11bd8:	str	r0, [sp, #20]
   11bdc:	b	11bf4 <inet_pton6+0x274>
   11be0:	b	11be8 <inet_pton6+0x268>
   11be4:	b	11a1c <inet_pton6+0x9c>
   11be8:	movw	r0, #0
   11bec:	str	r0, [fp, #-4]
   11bf0:	b	11dbc <inet_pton6+0x43c>
   11bf4:	ldr	r0, [sp, #20]
   11bf8:	cmp	r0, #0
   11bfc:	beq	11c5c <inet_pton6+0x2dc>
   11c00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c04:	add	r0, r0, #2
   11c08:	ldr	r1, [sp, #36]	; 0x24
   11c0c:	cmp	r0, r1
   11c10:	bls	11c20 <inet_pton6+0x2a0>
   11c14:	movw	r0, #0
   11c18:	str	r0, [fp, #-4]
   11c1c:	b	11dbc <inet_pton6+0x43c>
   11c20:	ldr	r0, [sp, #16]
   11c24:	lsr	r0, r0, #8
   11c28:	and	r0, r0, #255	; 0xff
   11c2c:	and	r0, r0, #255	; 0xff
   11c30:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11c34:	add	r2, r1, #1
   11c38:	str	r2, [fp, #-32]	; 0xffffffe0
   11c3c:	strb	r0, [r1]
   11c40:	ldr	r0, [sp, #16]
   11c44:	and	r0, r0, #255	; 0xff
   11c48:	and	r0, r0, #255	; 0xff
   11c4c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11c50:	add	r2, r1, #1
   11c54:	str	r2, [fp, #-32]	; 0xffffffe0
   11c58:	strb	r0, [r1]
   11c5c:	ldr	r0, [sp, #32]
   11c60:	movw	r1, #0
   11c64:	cmp	r0, r1
   11c68:	beq	11d14 <inet_pton6+0x394>
   11c6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c70:	ldr	r1, [sp, #32]
   11c74:	sub	r0, r0, r1
   11c78:	str	r0, [sp, #8]
   11c7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c80:	ldr	r1, [sp, #36]	; 0x24
   11c84:	cmp	r0, r1
   11c88:	bne	11c98 <inet_pton6+0x318>
   11c8c:	movw	r0, #0
   11c90:	str	r0, [fp, #-4]
   11c94:	b	11dbc <inet_pton6+0x43c>
   11c98:	movw	r0, #1
   11c9c:	str	r0, [sp, #4]
   11ca0:	ldr	r0, [sp, #4]
   11ca4:	ldr	r1, [sp, #8]
   11ca8:	cmp	r0, r1
   11cac:	bgt	11d0c <inet_pton6+0x38c>
   11cb0:	ldr	r0, [sp, #32]
   11cb4:	ldr	r1, [sp, #8]
   11cb8:	ldr	r2, [sp, #4]
   11cbc:	sub	r1, r1, r2
   11cc0:	add	r0, r0, r1
   11cc4:	ldrb	r0, [r0]
   11cc8:	ldr	r1, [sp, #36]	; 0x24
   11ccc:	ldr	r2, [sp, #4]
   11cd0:	movw	r3, #0
   11cd4:	sub	r2, r3, r2
   11cd8:	add	r1, r1, r2
   11cdc:	strb	r0, [r1]
   11ce0:	ldr	r0, [sp, #32]
   11ce4:	ldr	r1, [sp, #8]
   11ce8:	ldr	r2, [sp, #4]
   11cec:	sub	r1, r1, r2
   11cf0:	add	r0, r0, r1
   11cf4:	movw	r1, #0
   11cf8:	strb	r1, [r0]
   11cfc:	ldr	r0, [sp, #4]
   11d00:	add	r0, r0, #1
   11d04:	str	r0, [sp, #4]
   11d08:	b	11ca0 <inet_pton6+0x320>
   11d0c:	ldr	r0, [sp, #36]	; 0x24
   11d10:	str	r0, [fp, #-32]	; 0xffffffe0
   11d14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d18:	ldr	r1, [sp, #36]	; 0x24
   11d1c:	cmp	r0, r1
   11d20:	beq	11d30 <inet_pton6+0x3b0>
   11d24:	movw	r0, #0
   11d28:	str	r0, [fp, #-4]
   11d2c:	b	11dbc <inet_pton6+0x43c>
   11d30:	ldr	r0, [fp, #-12]
   11d34:	ldrb	r1, [fp, #-28]	; 0xffffffe4
   11d38:	strb	r1, [r0]
   11d3c:	ldrb	r1, [fp, #-27]	; 0xffffffe5
   11d40:	strb	r1, [r0, #1]
   11d44:	ldrb	r1, [fp, #-26]	; 0xffffffe6
   11d48:	strb	r1, [r0, #2]
   11d4c:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   11d50:	strb	r1, [r0, #3]
   11d54:	ldrb	r1, [fp, #-24]	; 0xffffffe8
   11d58:	strb	r1, [r0, #4]
   11d5c:	ldrb	r1, [fp, #-23]	; 0xffffffe9
   11d60:	strb	r1, [r0, #5]
   11d64:	ldrb	r1, [fp, #-22]	; 0xffffffea
   11d68:	strb	r1, [r0, #6]
   11d6c:	ldrb	r1, [fp, #-21]	; 0xffffffeb
   11d70:	strb	r1, [r0, #7]
   11d74:	ldrb	r1, [fp, #-20]	; 0xffffffec
   11d78:	strb	r1, [r0, #8]
   11d7c:	ldrb	r1, [fp, #-19]	; 0xffffffed
   11d80:	strb	r1, [r0, #9]
   11d84:	ldrb	r1, [fp, #-18]	; 0xffffffee
   11d88:	strb	r1, [r0, #10]
   11d8c:	ldrb	r1, [fp, #-17]	; 0xffffffef
   11d90:	strb	r1, [r0, #11]
   11d94:	ldrb	r1, [fp, #-16]
   11d98:	strb	r1, [r0, #12]
   11d9c:	ldrb	r1, [fp, #-15]
   11da0:	strb	r1, [r0, #13]
   11da4:	ldrb	r1, [fp, #-14]
   11da8:	strb	r1, [r0, #14]
   11dac:	ldrb	r1, [fp, #-13]
   11db0:	strb	r1, [r0, #15]
   11db4:	movw	r0, #1
   11db8:	str	r0, [fp, #-4]
   11dbc:	ldr	r0, [fp, #-4]
   11dc0:	mov	sp, fp
   11dc4:	pop	{fp, pc}
   11dc8:	.word	0x000114f8
   11dcc:	.word	0x000114d4

00011dd0 <rb_get_iotype>:
   11dd0:	ldr	r0, [pc, #4]	; 11ddc <rb_get_iotype+0xc>
   11dd4:	add	r0, pc, r0
   11dd8:	bx	lr
   11ddc:	.word	0x000350c8

00011de0 <rb_io_sched_event>:
   11de0:	push	{fp, lr}
   11de4:	mov	fp, sp
   11de8:	sub	sp, sp, #16
   11dec:	str	r0, [sp, #8]
   11df0:	str	r1, [sp, #4]
   11df4:	ldr	r0, [sp, #8]
   11df8:	movw	r1, #0
   11dfc:	cmp	r0, r1
   11e00:	beq	11e4c <rb_io_sched_event+0x6c>
   11e04:	ldr	r0, [pc, #132]	; 11e90 <rb_io_sched_event+0xb0>
   11e08:	add	r0, pc, r0
   11e0c:	ldr	r0, [r0]
   11e10:	movw	r1, #0
   11e14:	cmp	r0, r1
   11e18:	beq	11e4c <rb_io_sched_event+0x6c>
   11e1c:	ldr	r0, [pc, #112]	; 11e94 <rb_io_sched_event+0xb4>
   11e20:	add	r0, pc, r0
   11e24:	ldr	r0, [r0]
   11e28:	movw	r1, #0
   11e2c:	cmp	r0, r1
   11e30:	beq	11e4c <rb_io_sched_event+0x6c>
   11e34:	ldr	r0, [pc, #92]	; 11e98 <rb_io_sched_event+0xb8>
   11e38:	add	r0, pc, r0
   11e3c:	ldr	r0, [r0]
   11e40:	blx	r0
   11e44:	cmp	r0, #0
   11e48:	bne	11e58 <rb_io_sched_event+0x78>
   11e4c:	movw	r0, #0
   11e50:	str	r0, [fp, #-4]
   11e54:	b	11e84 <rb_io_sched_event+0xa4>
   11e58:	ldr	r0, [pc, #60]	; 11e9c <rb_io_sched_event+0xbc>
   11e5c:	add	r0, pc, r0
   11e60:	ldr	r0, [r0]
   11e64:	ldr	r1, [sp, #8]
   11e68:	ldr	r2, [sp, #4]
   11e6c:	str	r0, [sp]
   11e70:	mov	r0, r1
   11e74:	mov	r1, r2
   11e78:	ldr	r2, [sp]
   11e7c:	blx	r2
   11e80:	str	r0, [fp, #-4]
   11e84:	ldr	r0, [fp, #-4]
   11e88:	mov	sp, fp
   11e8c:	pop	{fp, pc}
   11e90:	.word	0x000350b0
   11e94:	.word	0x0003509c
   11e98:	.word	0x00035080
   11e9c:	.word	0x00035060

00011ea0 <rb_io_unsched_event>:
   11ea0:	push	{fp, lr}
   11ea4:	mov	fp, sp
   11ea8:	sub	sp, sp, #8
   11eac:	str	r0, [sp, #4]
   11eb0:	ldr	r0, [sp, #4]
   11eb4:	movw	r1, #0
   11eb8:	cmp	r0, r1
   11ebc:	beq	11f08 <rb_io_unsched_event+0x68>
   11ec0:	ldr	r0, [pc, #108]	; 11f34 <rb_io_unsched_event+0x94>
   11ec4:	add	r0, pc, r0
   11ec8:	ldr	r0, [r0]
   11ecc:	movw	r1, #0
   11ed0:	cmp	r0, r1
   11ed4:	beq	11f08 <rb_io_unsched_event+0x68>
   11ed8:	ldr	r0, [pc, #88]	; 11f38 <rb_io_unsched_event+0x98>
   11edc:	add	r0, pc, r0
   11ee0:	ldr	r0, [r0]
   11ee4:	movw	r1, #0
   11ee8:	cmp	r0, r1
   11eec:	beq	11f08 <rb_io_unsched_event+0x68>
   11ef0:	ldr	r0, [pc, #68]	; 11f3c <rb_io_unsched_event+0x9c>
   11ef4:	add	r0, pc, r0
   11ef8:	ldr	r0, [r0]
   11efc:	blx	r0
   11f00:	cmp	r0, #0
   11f04:	bne	11f0c <rb_io_unsched_event+0x6c>
   11f08:	b	11f2c <rb_io_unsched_event+0x8c>
   11f0c:	ldr	r0, [pc, #44]	; 11f40 <rb_io_unsched_event+0xa0>
   11f10:	add	r0, pc, r0
   11f14:	ldr	r0, [r0]
   11f18:	ldr	r1, [sp, #4]
   11f1c:	str	r0, [sp]
   11f20:	mov	r0, r1
   11f24:	ldr	r1, [sp]
   11f28:	blx	r1
   11f2c:	mov	sp, fp
   11f30:	pop	{fp, pc}
   11f34:	.word	0x00034ff4
   11f38:	.word	0x00034fe4
   11f3c:	.word	0x00034fc4
   11f40:	.word	0x00034fb0

00011f44 <rb_io_supports_event>:
   11f44:	push	{fp, lr}
   11f48:	mov	fp, sp
   11f4c:	sub	sp, sp, #8
   11f50:	ldr	r0, [pc, #60]	; 11f94 <rb_io_supports_event+0x50>
   11f54:	add	r0, pc, r0
   11f58:	ldr	r0, [r0]
   11f5c:	movw	r1, #0
   11f60:	cmp	r0, r1
   11f64:	bne	11f74 <rb_io_supports_event+0x30>
   11f68:	movw	r0, #0
   11f6c:	str	r0, [sp, #4]
   11f70:	b	11f88 <rb_io_supports_event+0x44>
   11f74:	ldr	r0, [pc, #28]	; 11f98 <rb_io_supports_event+0x54>
   11f78:	add	r0, pc, r0
   11f7c:	ldr	r0, [r0]
   11f80:	blx	r0
   11f84:	str	r0, [sp, #4]
   11f88:	ldr	r0, [sp, #4]
   11f8c:	mov	sp, fp
   11f90:	pop	{fp, pc}
   11f94:	.word	0x00034f64
   11f98:	.word	0x00034f40

00011f9c <rb_io_init_event>:
   11f9c:	push	{fp, lr}
   11fa0:	mov	fp, sp
   11fa4:	ldr	r0, [pc, #16]	; 11fbc <rb_io_init_event+0x20>
   11fa8:	add	r0, pc, r0
   11fac:	ldr	r0, [r0]
   11fb0:	blx	r0
   11fb4:	bl	15894 <rb_event_io_register_all>
   11fb8:	pop	{fp, pc}
   11fbc:	.word	0x00034f1c

00011fc0 <rb_init_netio>:
   11fc0:	push	{fp, lr}
   11fc4:	mov	fp, sp
   11fc8:	sub	sp, sp, #8
   11fcc:	ldr	r0, [pc, #584]	; 1221c <rb_init_netio+0x25c>
   11fd0:	add	r0, pc, r0
   11fd4:	bl	4f60 <getenv@plt>
   11fd8:	str	r0, [sp, #4]
   11fdc:	movw	r0, #49152	; 0xc000
   11fe0:	bl	eff8 <rb_malloc>
   11fe4:	ldr	r1, [pc, #556]	; 12218 <rb_init_netio+0x258>
   11fe8:	ldr	r1, [pc, r1]
   11fec:	str	r0, [r1]
   11ff0:	bl	137b4 <rb_init_ssl>
   11ff4:	ldr	r1, [sp, #4]
   11ff8:	movw	r2, #0
   11ffc:	cmp	r1, r2
   12000:	beq	12180 <rb_init_netio+0x1c0>
   12004:	ldr	r1, [sp, #4]
   12008:	ldr	r0, [pc, #532]	; 12224 <rb_init_netio+0x264>
   1200c:	add	r0, pc, r0
   12010:	bl	56bc <strcmp@plt>
   12014:	cmp	r0, #0
   12018:	bne	12030 <rb_init_netio+0x70>
   1201c:	bl	12244 <try_epoll>
   12020:	cmp	r0, #0
   12024:	bne	1202c <rb_init_netio+0x6c>
   12028:	b	12210 <rb_init_netio+0x250>
   1202c:	b	12150 <rb_init_netio+0x190>
   12030:	ldr	r1, [sp, #4]
   12034:	ldr	r0, [pc, #492]	; 12228 <rb_init_netio+0x268>
   12038:	add	r0, pc, r0
   1203c:	bl	56bc <strcmp@plt>
   12040:	cmp	r0, #0
   12044:	bne	1205c <rb_init_netio+0x9c>
   12048:	bl	12388 <try_kqueue>
   1204c:	cmp	r0, #0
   12050:	bne	12058 <rb_init_netio+0x98>
   12054:	b	12210 <rb_init_netio+0x250>
   12058:	b	1214c <rb_init_netio+0x18c>
   1205c:	ldr	r1, [sp, #4]
   12060:	ldr	r0, [pc, #452]	; 1222c <rb_init_netio+0x26c>
   12064:	add	r0, pc, r0
   12068:	bl	56bc <strcmp@plt>
   1206c:	cmp	r0, #0
   12070:	bne	12088 <rb_init_netio+0xc8>
   12074:	bl	124cc <try_ports>
   12078:	cmp	r0, #0
   1207c:	bne	12084 <rb_init_netio+0xc4>
   12080:	b	12210 <rb_init_netio+0x250>
   12084:	b	12148 <rb_init_netio+0x188>
   12088:	ldr	r1, [sp, #4]
   1208c:	ldr	r0, [pc, #412]	; 12230 <rb_init_netio+0x270>
   12090:	add	r0, pc, r0
   12094:	bl	56bc <strcmp@plt>
   12098:	cmp	r0, #0
   1209c:	bne	120b4 <rb_init_netio+0xf4>
   120a0:	bl	12610 <try_poll>
   120a4:	cmp	r0, #0
   120a8:	bne	120b0 <rb_init_netio+0xf0>
   120ac:	b	12210 <rb_init_netio+0x250>
   120b0:	b	12144 <rb_init_netio+0x184>
   120b4:	ldr	r1, [sp, #4]
   120b8:	ldr	r0, [pc, #372]	; 12234 <rb_init_netio+0x274>
   120bc:	add	r0, pc, r0
   120c0:	bl	56bc <strcmp@plt>
   120c4:	cmp	r0, #0
   120c8:	bne	120e0 <rb_init_netio+0x120>
   120cc:	bl	1270c <try_devpoll>
   120d0:	cmp	r0, #0
   120d4:	bne	120dc <rb_init_netio+0x11c>
   120d8:	b	12210 <rb_init_netio+0x250>
   120dc:	b	12140 <rb_init_netio+0x180>
   120e0:	ldr	r1, [sp, #4]
   120e4:	ldr	r0, [pc, #332]	; 12238 <rb_init_netio+0x278>
   120e8:	add	r0, pc, r0
   120ec:	bl	56bc <strcmp@plt>
   120f0:	cmp	r0, #0
   120f4:	bne	1210c <rb_init_netio+0x14c>
   120f8:	bl	12808 <try_sigio>
   120fc:	cmp	r0, #0
   12100:	bne	12108 <rb_init_netio+0x148>
   12104:	b	12210 <rb_init_netio+0x250>
   12108:	b	1213c <rb_init_netio+0x17c>
   1210c:	ldr	r1, [sp, #4]
   12110:	ldr	r0, [pc, #292]	; 1223c <rb_init_netio+0x27c>
   12114:	add	r0, pc, r0
   12118:	bl	56bc <strcmp@plt>
   1211c:	cmp	r0, #0
   12120:	bne	12138 <rb_init_netio+0x178>
   12124:	bl	1294c <try_select>
   12128:	cmp	r0, #0
   1212c:	bne	12134 <rb_init_netio+0x174>
   12130:	b	12210 <rb_init_netio+0x250>
   12134:	b	12138 <rb_init_netio+0x178>
   12138:	b	1213c <rb_init_netio+0x17c>
   1213c:	b	12140 <rb_init_netio+0x180>
   12140:	b	12144 <rb_init_netio+0x184>
   12144:	b	12148 <rb_init_netio+0x188>
   12148:	b	1214c <rb_init_netio+0x18c>
   1214c:	b	12150 <rb_init_netio+0x190>
   12150:	ldr	r1, [sp, #4]
   12154:	ldr	r0, [pc, #228]	; 12240 <rb_init_netio+0x280>
   12158:	add	r0, pc, r0
   1215c:	bl	56bc <strcmp@plt>
   12160:	cmp	r0, #0
   12164:	bne	1217c <rb_init_netio+0x1bc>
   12168:	bl	12a48 <try_win32>
   1216c:	cmp	r0, #0
   12170:	bne	12178 <rb_init_netio+0x1b8>
   12174:	b	12210 <rb_init_netio+0x250>
   12178:	b	1217c <rb_init_netio+0x1bc>
   1217c:	b	12180 <rb_init_netio+0x1c0>
   12180:	bl	12388 <try_kqueue>
   12184:	cmp	r0, #0
   12188:	bne	12190 <rb_init_netio+0x1d0>
   1218c:	b	12210 <rb_init_netio+0x250>
   12190:	bl	12244 <try_epoll>
   12194:	cmp	r0, #0
   12198:	bne	121a0 <rb_init_netio+0x1e0>
   1219c:	b	12210 <rb_init_netio+0x250>
   121a0:	bl	124cc <try_ports>
   121a4:	cmp	r0, #0
   121a8:	bne	121b0 <rb_init_netio+0x1f0>
   121ac:	b	12210 <rb_init_netio+0x250>
   121b0:	bl	1270c <try_devpoll>
   121b4:	cmp	r0, #0
   121b8:	bne	121c0 <rb_init_netio+0x200>
   121bc:	b	12210 <rb_init_netio+0x250>
   121c0:	bl	12808 <try_sigio>
   121c4:	cmp	r0, #0
   121c8:	bne	121d0 <rb_init_netio+0x210>
   121cc:	b	12210 <rb_init_netio+0x250>
   121d0:	bl	12610 <try_poll>
   121d4:	cmp	r0, #0
   121d8:	bne	121e0 <rb_init_netio+0x220>
   121dc:	b	12210 <rb_init_netio+0x250>
   121e0:	bl	12a48 <try_win32>
   121e4:	cmp	r0, #0
   121e8:	bne	121f0 <rb_init_netio+0x230>
   121ec:	b	12210 <rb_init_netio+0x250>
   121f0:	bl	1294c <try_select>
   121f4:	cmp	r0, #0
   121f8:	bne	12200 <rb_init_netio+0x240>
   121fc:	b	12210 <rb_init_netio+0x250>
   12200:	ldr	r0, [pc, #24]	; 12220 <rb_init_netio+0x260>
   12204:	add	r0, pc, r0
   12208:	bl	52e4 <rb_lib_log@plt>
   1220c:	bl	4d80 <abort@plt>
   12210:	mov	sp, fp
   12214:	pop	{fp, pc}
   12218:	.word	0x000223d8
   1221c:	.word	0x00010b05
   12220:	.word	0x00010910
   12224:	.word	0x00010ada
   12228:	.word	0x00010ab4
   1222c:	.word	0x00010a8f
   12230:	.word	0x00010a57
   12234:	.word	0x00010a3d
   12238:	.word	0x00010a19
   1223c:	.word	0x000109f3
   12240:	.word	0x000109b6

00012244 <try_epoll>:
   12244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12248:	add	fp, sp, #28
   1224c:	sub	sp, sp, #28
   12250:	bl	1953c <rb_init_netio_epoll>
   12254:	cmp	r0, #0
   12258:	bne	12334 <try_epoll+0xf0>
   1225c:	ldr	r0, [pc, #228]	; 12348 <try_epoll+0x104>
   12260:	add	r0, pc, r0
   12264:	ldr	r1, [pc, #224]	; 1234c <try_epoll+0x108>
   12268:	add	r1, pc, r1
   1226c:	ldr	r2, [pc, #220]	; 12350 <try_epoll+0x10c>
   12270:	ldr	r2, [pc, r2]
   12274:	ldr	r3, [pc, #216]	; 12354 <try_epoll+0x110>
   12278:	add	r3, pc, r3
   1227c:	ldr	ip, [pc, #212]	; 12358 <try_epoll+0x114>
   12280:	ldr	ip, [pc, ip]
   12284:	ldr	lr, [pc, #208]	; 1235c <try_epoll+0x118>
   12288:	add	lr, pc, lr
   1228c:	ldr	r4, [pc, #204]	; 12360 <try_epoll+0x11c>
   12290:	ldr	r4, [pc, r4]
   12294:	ldr	r5, [pc, #200]	; 12364 <try_epoll+0x120>
   12298:	add	r5, pc, r5
   1229c:	ldr	r6, [pc, #196]	; 12368 <try_epoll+0x124>
   122a0:	ldr	r6, [pc, r6]
   122a4:	ldr	r7, [pc, #192]	; 1236c <try_epoll+0x128>
   122a8:	add	r7, pc, r7
   122ac:	ldr	r8, [pc, #188]	; 12370 <try_epoll+0x12c>
   122b0:	ldr	r8, [pc, r8]
   122b4:	ldr	r9, [pc, #184]	; 12374 <try_epoll+0x130>
   122b8:	add	r9, pc, r9
   122bc:	ldr	sl, [pc, #180]	; 12378 <try_epoll+0x134>
   122c0:	ldr	sl, [pc, sl]
   122c4:	str	r0, [sp, #20]
   122c8:	ldr	r0, [pc, #172]	; 1237c <try_epoll+0x138>
   122cc:	add	r0, pc, r0
   122d0:	str	r0, [sp, #16]
   122d4:	ldr	r0, [pc, #164]	; 12380 <try_epoll+0x13c>
   122d8:	ldr	r0, [pc, r0]
   122dc:	str	r0, [sp, #12]
   122e0:	ldr	r0, [pc, #156]	; 12384 <try_epoll+0x140>
   122e4:	add	r0, pc, r0
   122e8:	str	r0, [sp, #8]
   122ec:	ldr	r0, [sp, #12]
   122f0:	str	r1, [sp, #4]
   122f4:	ldr	r1, [sp, #8]
   122f8:	str	r0, [r1]
   122fc:	ldr	r0, [sp, #16]
   12300:	str	sl, [r0]
   12304:	str	r8, [r9]
   12308:	str	r6, [r7]
   1230c:	str	r4, [r5]
   12310:	str	ip, [lr]
   12314:	str	r2, [r3]
   12318:	ldr	r0, [sp, #20]
   1231c:	ldr	r1, [sp, #4]
   12320:	movw	r2, #25
   12324:	bl	5068 <rb_strlcpy@plt>
   12328:	movw	r1, #0
   1232c:	str	r1, [sp, #24]
   12330:	b	1233c <try_epoll+0xf8>
   12334:	mvn	r0, #0
   12338:	str	r0, [sp, #24]
   1233c:	ldr	r0, [sp, #24]
   12340:	sub	sp, fp, #28
   12344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12348:	.word	0x00034c3c
   1234c:	.word	0x0001087e
   12350:	.word	0x000221a8
   12354:	.word	0x00034c4c
   12358:	.word	0x000220d8
   1235c:	.word	0x00034c30
   12360:	.word	0x00022134
   12364:	.word	0x00034c28
   12368:	.word	0x000220e4
   1236c:	.word	0x00034c14
   12370:	.word	0x00022154
   12374:	.word	0x00034c18
   12378:	.word	0x00022108
   1237c:	.word	0x00034c00
   12380:	.word	0x00022090
   12384:	.word	0x00034be4

00012388 <try_kqueue>:
   12388:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1238c:	add	fp, sp, #28
   12390:	sub	sp, sp, #28
   12394:	bl	1c8bc <rb_init_netio_kqueue>
   12398:	cmp	r0, #0
   1239c:	bne	12478 <try_kqueue+0xf0>
   123a0:	ldr	r0, [pc, #228]	; 1248c <try_kqueue+0x104>
   123a4:	add	r0, pc, r0
   123a8:	ldr	r1, [pc, #224]	; 12490 <try_kqueue+0x108>
   123ac:	add	r1, pc, r1
   123b0:	ldr	r2, [pc, #220]	; 12494 <try_kqueue+0x10c>
   123b4:	ldr	r2, [pc, r2]
   123b8:	ldr	r3, [pc, #216]	; 12498 <try_kqueue+0x110>
   123bc:	add	r3, pc, r3
   123c0:	ldr	ip, [pc, #212]	; 1249c <try_kqueue+0x114>
   123c4:	ldr	ip, [pc, ip]
   123c8:	ldr	lr, [pc, #208]	; 124a0 <try_kqueue+0x118>
   123cc:	add	lr, pc, lr
   123d0:	ldr	r4, [pc, #204]	; 124a4 <try_kqueue+0x11c>
   123d4:	ldr	r4, [pc, r4]
   123d8:	ldr	r5, [pc, #200]	; 124a8 <try_kqueue+0x120>
   123dc:	add	r5, pc, r5
   123e0:	ldr	r6, [pc, #196]	; 124ac <try_kqueue+0x124>
   123e4:	ldr	r6, [pc, r6]
   123e8:	ldr	r7, [pc, #192]	; 124b0 <try_kqueue+0x128>
   123ec:	add	r7, pc, r7
   123f0:	ldr	r8, [pc, #188]	; 124b4 <try_kqueue+0x12c>
   123f4:	ldr	r8, [pc, r8]
   123f8:	ldr	r9, [pc, #184]	; 124b8 <try_kqueue+0x130>
   123fc:	add	r9, pc, r9
   12400:	ldr	sl, [pc, #180]	; 124bc <try_kqueue+0x134>
   12404:	ldr	sl, [pc, sl]
   12408:	str	r0, [sp, #20]
   1240c:	ldr	r0, [pc, #172]	; 124c0 <try_kqueue+0x138>
   12410:	add	r0, pc, r0
   12414:	str	r0, [sp, #16]
   12418:	ldr	r0, [pc, #164]	; 124c4 <try_kqueue+0x13c>
   1241c:	ldr	r0, [pc, r0]
   12420:	str	r0, [sp, #12]
   12424:	ldr	r0, [pc, #156]	; 124c8 <try_kqueue+0x140>
   12428:	add	r0, pc, r0
   1242c:	str	r0, [sp, #8]
   12430:	ldr	r0, [sp, #12]
   12434:	str	r1, [sp, #4]
   12438:	ldr	r1, [sp, #8]
   1243c:	str	r0, [r1]
   12440:	ldr	r0, [sp, #16]
   12444:	str	sl, [r0]
   12448:	str	r8, [r9]
   1244c:	str	r6, [r7]
   12450:	str	r4, [r5]
   12454:	str	ip, [lr]
   12458:	str	r2, [r3]
   1245c:	ldr	r0, [sp, #20]
   12460:	ldr	r1, [sp, #4]
   12464:	movw	r2, #25
   12468:	bl	5068 <rb_strlcpy@plt>
   1246c:	movw	r1, #0
   12470:	str	r1, [sp, #24]
   12474:	b	12480 <try_kqueue+0xf8>
   12478:	mvn	r0, #0
   1247c:	str	r0, [sp, #24]
   12480:	ldr	r0, [sp, #24]
   12484:	sub	sp, fp, #28
   12488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1248c:	.word	0x00034af8
   12490:	.word	0x00010740
   12494:	.word	0x00022030
   12498:	.word	0x00034afc
   1249c:	.word	0x00021fd0
   124a0:	.word	0x00034af8
   124a4:	.word	0x00022000
   124a8:	.word	0x00034ae4
   124ac:	.word	0x00021fac
   124b0:	.word	0x00034ad0
   124b4:	.word	0x00021fa4
   124b8:	.word	0x00034ad4
   124bc:	.word	0x00021f74
   124c0:	.word	0x00034abc
   124c4:	.word	0x00021fa0
   124c8:	.word	0x00034aa0

000124cc <try_ports>:
   124cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124d0:	add	fp, sp, #28
   124d4:	sub	sp, sp, #28
   124d8:	bl	1ae8c <rb_init_netio_ports>
   124dc:	cmp	r0, #0
   124e0:	bne	125bc <try_ports+0xf0>
   124e4:	ldr	r0, [pc, #228]	; 125d0 <try_ports+0x104>
   124e8:	add	r0, pc, r0
   124ec:	ldr	r1, [pc, #224]	; 125d4 <try_ports+0x108>
   124f0:	add	r1, pc, r1
   124f4:	ldr	r2, [pc, #220]	; 125d8 <try_ports+0x10c>
   124f8:	ldr	r2, [pc, r2]
   124fc:	ldr	r3, [pc, #216]	; 125dc <try_ports+0x110>
   12500:	add	r3, pc, r3
   12504:	ldr	ip, [pc, #212]	; 125e0 <try_ports+0x114>
   12508:	ldr	ip, [pc, ip]
   1250c:	ldr	lr, [pc, #208]	; 125e4 <try_ports+0x118>
   12510:	add	lr, pc, lr
   12514:	ldr	r4, [pc, #204]	; 125e8 <try_ports+0x11c>
   12518:	ldr	r4, [pc, r4]
   1251c:	ldr	r5, [pc, #200]	; 125ec <try_ports+0x120>
   12520:	add	r5, pc, r5
   12524:	ldr	r6, [pc, #196]	; 125f0 <try_ports+0x124>
   12528:	ldr	r6, [pc, r6]
   1252c:	ldr	r7, [pc, #192]	; 125f4 <try_ports+0x128>
   12530:	add	r7, pc, r7
   12534:	ldr	r8, [pc, #188]	; 125f8 <try_ports+0x12c>
   12538:	ldr	r8, [pc, r8]
   1253c:	ldr	r9, [pc, #184]	; 125fc <try_ports+0x130>
   12540:	add	r9, pc, r9
   12544:	ldr	sl, [pc, #180]	; 12600 <try_ports+0x134>
   12548:	ldr	sl, [pc, sl]
   1254c:	str	r0, [sp, #20]
   12550:	ldr	r0, [pc, #172]	; 12604 <try_ports+0x138>
   12554:	add	r0, pc, r0
   12558:	str	r0, [sp, #16]
   1255c:	ldr	r0, [pc, #164]	; 12608 <try_ports+0x13c>
   12560:	ldr	r0, [pc, r0]
   12564:	str	r0, [sp, #12]
   12568:	ldr	r0, [pc, #156]	; 1260c <try_ports+0x140>
   1256c:	add	r0, pc, r0
   12570:	str	r0, [sp, #8]
   12574:	ldr	r0, [sp, #12]
   12578:	str	r1, [sp, #4]
   1257c:	ldr	r1, [sp, #8]
   12580:	str	r0, [r1]
   12584:	ldr	r0, [sp, #16]
   12588:	str	sl, [r0]
   1258c:	str	r8, [r9]
   12590:	str	r6, [r7]
   12594:	str	r4, [r5]
   12598:	str	ip, [lr]
   1259c:	str	r2, [r3]
   125a0:	ldr	r0, [sp, #20]
   125a4:	ldr	r1, [sp, #4]
   125a8:	movw	r2, #25
   125ac:	bl	5068 <rb_strlcpy@plt>
   125b0:	movw	r1, #0
   125b4:	str	r1, [sp, #24]
   125b8:	b	125c4 <try_ports+0xf8>
   125bc:	mvn	r0, #0
   125c0:	str	r0, [sp, #24]
   125c4:	ldr	r0, [sp, #24]
   125c8:	sub	sp, fp, #28
   125cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125d0:	.word	0x000349b4
   125d4:	.word	0x00010603
   125d8:	.word	0x00021ee8
   125dc:	.word	0x000349b8
   125e0:	.word	0x00021e5c
   125e4:	.word	0x000349b4
   125e8:	.word	0x00021ef4
   125ec:	.word	0x000349a0
   125f0:	.word	0x00021e2c
   125f4:	.word	0x0003498c
   125f8:	.word	0x00021ed8
   125fc:	.word	0x00034990
   12600:	.word	0x00021e40
   12604:	.word	0x00034978
   12608:	.word	0x00021e88
   1260c:	.word	0x0003495c

00012610 <try_poll>:
   12610:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12614:	add	fp, sp, #28
   12618:	sub	sp, sp, #4
   1261c:	bl	1a59c <rb_init_netio_poll>
   12620:	cmp	r0, #0
   12624:	bne	126c4 <try_poll+0xb4>
   12628:	ldr	r0, [pc, #168]	; 126d8 <try_poll+0xc8>
   1262c:	add	r0, pc, r0
   12630:	ldr	r1, [pc, #164]	; 126dc <try_poll+0xcc>
   12634:	add	r1, pc, r1
   12638:	ldr	r2, [pc, #160]	; 126e0 <try_poll+0xd0>
   1263c:	add	r2, pc, r2
   12640:	ldr	r3, [pc, #156]	; 126e4 <try_poll+0xd4>
   12644:	add	r3, pc, r3
   12648:	ldr	ip, [pc, #152]	; 126e8 <try_poll+0xd8>
   1264c:	add	ip, pc, ip
   12650:	ldr	lr, [pc, #148]	; 126ec <try_poll+0xdc>
   12654:	add	lr, pc, lr
   12658:	ldr	r4, [pc, #144]	; 126f0 <try_poll+0xe0>
   1265c:	add	r4, pc, r4
   12660:	ldr	r5, [pc, #140]	; 126f4 <try_poll+0xe4>
   12664:	ldr	r5, [pc, r5]
   12668:	ldr	r6, [pc, #136]	; 126f8 <try_poll+0xe8>
   1266c:	add	r6, pc, r6
   12670:	ldr	r7, [pc, #132]	; 126fc <try_poll+0xec>
   12674:	ldr	r7, [pc, r7]
   12678:	ldr	r8, [pc, #128]	; 12700 <try_poll+0xf0>
   1267c:	add	r8, pc, r8
   12680:	ldr	r9, [pc, #124]	; 12704 <try_poll+0xf4>
   12684:	ldr	r9, [pc, r9]
   12688:	ldr	sl, [pc, #120]	; 12708 <try_poll+0xf8>
   1268c:	add	sl, pc, sl
   12690:	str	r9, [sl]
   12694:	str	r7, [r8]
   12698:	str	r5, [r6]
   1269c:	movw	r5, #0
   126a0:	str	r5, [r4]
   126a4:	str	r5, [lr]
   126a8:	str	r5, [ip]
   126ac:	str	r2, [r3]
   126b0:	movw	r2, #25
   126b4:	bl	5068 <rb_strlcpy@plt>
   126b8:	movw	r1, #0
   126bc:	str	r1, [sp]
   126c0:	b	126cc <try_poll+0xbc>
   126c4:	mvn	r0, #0
   126c8:	str	r0, [sp]
   126cc:	ldr	r0, [sp]
   126d0:	sub	sp, fp, #28
   126d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126d8:	.word	0x00034870
   126dc:	.word	0x000104b3
   126e0:	.word	0x0000105c
   126e4:	.word	0x00034874
   126e8:	.word	0x00034878
   126ec:	.word	0x0003486c
   126f0:	.word	0x00034860
   126f4:	.word	0x00021d1c
   126f8:	.word	0x00034864
   126fc:	.word	0x00021d88
   12700:	.word	0x00034850
   12704:	.word	0x00021d68
   12708:	.word	0x0003483c

0001270c <try_devpoll>:
   1270c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12710:	add	fp, sp, #28
   12714:	sub	sp, sp, #4
   12718:	bl	194b4 <rb_init_netio_devpoll>
   1271c:	cmp	r0, #0
   12720:	bne	127c0 <try_devpoll+0xb4>
   12724:	ldr	r0, [pc, #168]	; 127d4 <try_devpoll+0xc8>
   12728:	add	r0, pc, r0
   1272c:	ldr	r1, [pc, #164]	; 127d8 <try_devpoll+0xcc>
   12730:	add	r1, pc, r1
   12734:	ldr	r2, [pc, #160]	; 127dc <try_devpoll+0xd0>
   12738:	add	r2, pc, r2
   1273c:	ldr	r3, [pc, #156]	; 127e0 <try_devpoll+0xd4>
   12740:	add	r3, pc, r3
   12744:	ldr	ip, [pc, #152]	; 127e4 <try_devpoll+0xd8>
   12748:	add	ip, pc, ip
   1274c:	ldr	lr, [pc, #148]	; 127e8 <try_devpoll+0xdc>
   12750:	add	lr, pc, lr
   12754:	ldr	r4, [pc, #144]	; 127ec <try_devpoll+0xe0>
   12758:	add	r4, pc, r4
   1275c:	ldr	r5, [pc, #140]	; 127f0 <try_devpoll+0xe4>
   12760:	ldr	r5, [pc, r5]
   12764:	ldr	r6, [pc, #136]	; 127f4 <try_devpoll+0xe8>
   12768:	add	r6, pc, r6
   1276c:	ldr	r7, [pc, #132]	; 127f8 <try_devpoll+0xec>
   12770:	ldr	r7, [pc, r7]
   12774:	ldr	r8, [pc, #128]	; 127fc <try_devpoll+0xf0>
   12778:	add	r8, pc, r8
   1277c:	ldr	r9, [pc, #124]	; 12800 <try_devpoll+0xf4>
   12780:	ldr	r9, [pc, r9]
   12784:	ldr	sl, [pc, #120]	; 12804 <try_devpoll+0xf8>
   12788:	add	sl, pc, sl
   1278c:	str	r9, [sl]
   12790:	str	r7, [r8]
   12794:	str	r5, [r6]
   12798:	movw	r5, #0
   1279c:	str	r5, [r4]
   127a0:	str	r5, [lr]
   127a4:	str	r5, [ip]
   127a8:	str	r2, [r3]
   127ac:	movw	r2, #25
   127b0:	bl	5068 <rb_strlcpy@plt>
   127b4:	movw	r1, #0
   127b8:	str	r1, [sp]
   127bc:	b	127c8 <try_devpoll+0xbc>
   127c0:	mvn	r0, #0
   127c4:	str	r0, [sp]
   127c8:	ldr	r0, [sp]
   127cc:	sub	sp, fp, #28
   127d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127d4:	.word	0x00034774
   127d8:	.word	0x000103c9
   127dc:	.word	0x00000f60
   127e0:	.word	0x00034778
   127e4:	.word	0x0003477c
   127e8:	.word	0x00034770
   127ec:	.word	0x00034764
   127f0:	.word	0x00021c54
   127f4:	.word	0x00034768
   127f8:	.word	0x00021c80
   127fc:	.word	0x00034754
   12800:	.word	0x00021c30
   12804:	.word	0x00034740

00012808 <try_sigio>:
   12808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1280c:	add	fp, sp, #28
   12810:	sub	sp, sp, #28
   12814:	bl	1af14 <rb_init_netio_sigio>
   12818:	cmp	r0, #0
   1281c:	bne	128f8 <try_sigio+0xf0>
   12820:	ldr	r0, [pc, #228]	; 1290c <try_sigio+0x104>
   12824:	add	r0, pc, r0
   12828:	ldr	r1, [pc, #224]	; 12910 <try_sigio+0x108>
   1282c:	add	r1, pc, r1
   12830:	ldr	r2, [pc, #220]	; 12914 <try_sigio+0x10c>
   12834:	ldr	r2, [pc, r2]
   12838:	ldr	r3, [pc, #216]	; 12918 <try_sigio+0x110>
   1283c:	add	r3, pc, r3
   12840:	ldr	ip, [pc, #212]	; 1291c <try_sigio+0x114>
   12844:	ldr	ip, [pc, ip]
   12848:	ldr	lr, [pc, #208]	; 12920 <try_sigio+0x118>
   1284c:	add	lr, pc, lr
   12850:	ldr	r4, [pc, #204]	; 12924 <try_sigio+0x11c>
   12854:	ldr	r4, [pc, r4]
   12858:	ldr	r5, [pc, #200]	; 12928 <try_sigio+0x120>
   1285c:	add	r5, pc, r5
   12860:	ldr	r6, [pc, #196]	; 1292c <try_sigio+0x124>
   12864:	ldr	r6, [pc, r6]
   12868:	ldr	r7, [pc, #192]	; 12930 <try_sigio+0x128>
   1286c:	add	r7, pc, r7
   12870:	ldr	r8, [pc, #188]	; 12934 <try_sigio+0x12c>
   12874:	ldr	r8, [pc, r8]
   12878:	ldr	r9, [pc, #184]	; 12938 <try_sigio+0x130>
   1287c:	add	r9, pc, r9
   12880:	ldr	sl, [pc, #180]	; 1293c <try_sigio+0x134>
   12884:	ldr	sl, [pc, sl]
   12888:	str	r0, [sp, #20]
   1288c:	ldr	r0, [pc, #172]	; 12940 <try_sigio+0x138>
   12890:	add	r0, pc, r0
   12894:	str	r0, [sp, #16]
   12898:	ldr	r0, [pc, #164]	; 12944 <try_sigio+0x13c>
   1289c:	ldr	r0, [pc, r0]
   128a0:	str	r0, [sp, #12]
   128a4:	ldr	r0, [pc, #156]	; 12948 <try_sigio+0x140>
   128a8:	add	r0, pc, r0
   128ac:	str	r0, [sp, #8]
   128b0:	ldr	r0, [sp, #12]
   128b4:	str	r1, [sp, #4]
   128b8:	ldr	r1, [sp, #8]
   128bc:	str	r0, [r1]
   128c0:	ldr	r0, [sp, #16]
   128c4:	str	sl, [r0]
   128c8:	str	r8, [r9]
   128cc:	str	r6, [r7]
   128d0:	str	r4, [r5]
   128d4:	str	ip, [lr]
   128d8:	str	r2, [r3]
   128dc:	ldr	r0, [sp, #20]
   128e0:	ldr	r1, [sp, #4]
   128e4:	movw	r2, #25
   128e8:	bl	5068 <rb_strlcpy@plt>
   128ec:	movw	r1, #0
   128f0:	str	r1, [sp, #24]
   128f4:	b	12900 <try_sigio+0xf8>
   128f8:	mvn	r0, #0
   128fc:	str	r0, [sp, #24]
   12900:	ldr	r0, [sp, #24]
   12904:	sub	sp, fp, #28
   12908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1290c:	.word	0x00034678
   12910:	.word	0x000102d5
   12914:	.word	0x00021bc4
   12918:	.word	0x00034688
   1291c:	.word	0x00021b94
   12920:	.word	0x0003466c
   12924:	.word	0x00021b08
   12928:	.word	0x00034664
   1292c:	.word	0x00021b10
   12930:	.word	0x00034650
   12934:	.word	0x00021b68
   12938:	.word	0x00034654
   1293c:	.word	0x00021ae8
   12940:	.word	0x0003463c
   12944:	.word	0x00021b30
   12948:	.word	0x00034620

0001294c <try_select>:
   1294c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12950:	add	fp, sp, #28
   12954:	sub	sp, sp, #4
   12958:	bl	1bff0 <rb_init_netio_select>
   1295c:	cmp	r0, #0
   12960:	bne	12a00 <try_select+0xb4>
   12964:	ldr	r0, [pc, #168]	; 12a14 <try_select+0xc8>
   12968:	add	r0, pc, r0
   1296c:	ldr	r1, [pc, #164]	; 12a18 <try_select+0xcc>
   12970:	add	r1, pc, r1
   12974:	ldr	r2, [pc, #160]	; 12a1c <try_select+0xd0>
   12978:	add	r2, pc, r2
   1297c:	ldr	r3, [pc, #156]	; 12a20 <try_select+0xd4>
   12980:	add	r3, pc, r3
   12984:	ldr	ip, [pc, #152]	; 12a24 <try_select+0xd8>
   12988:	add	ip, pc, ip
   1298c:	ldr	lr, [pc, #148]	; 12a28 <try_select+0xdc>
   12990:	add	lr, pc, lr
   12994:	ldr	r4, [pc, #144]	; 12a2c <try_select+0xe0>
   12998:	add	r4, pc, r4
   1299c:	ldr	r5, [pc, #140]	; 12a30 <try_select+0xe4>
   129a0:	ldr	r5, [pc, r5]
   129a4:	ldr	r6, [pc, #136]	; 12a34 <try_select+0xe8>
   129a8:	add	r6, pc, r6
   129ac:	ldr	r7, [pc, #132]	; 12a38 <try_select+0xec>
   129b0:	ldr	r7, [pc, r7]
   129b4:	ldr	r8, [pc, #128]	; 12a3c <try_select+0xf0>
   129b8:	add	r8, pc, r8
   129bc:	ldr	r9, [pc, #124]	; 12a40 <try_select+0xf4>
   129c0:	ldr	r9, [pc, r9]
   129c4:	ldr	sl, [pc, #120]	; 12a44 <try_select+0xf8>
   129c8:	add	sl, pc, sl
   129cc:	str	r9, [sl]
   129d0:	str	r7, [r8]
   129d4:	str	r5, [r6]
   129d8:	movw	r5, #0
   129dc:	str	r5, [r4]
   129e0:	str	r5, [lr]
   129e4:	str	r5, [ip]
   129e8:	str	r2, [r3]
   129ec:	movw	r2, #25
   129f0:	bl	5068 <rb_strlcpy@plt>
   129f4:	movw	r1, #0
   129f8:	str	r1, [sp]
   129fc:	b	12a08 <try_select+0xbc>
   12a00:	mvn	r0, #0
   12a04:	str	r0, [sp]
   12a08:	ldr	r0, [sp]
   12a0c:	sub	sp, fp, #28
   12a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a14:	.word	0x00034534
   12a18:	.word	0x00010197
   12a1c:	.word	0x00000d20
   12a20:	.word	0x00034538
   12a24:	.word	0x0003453c
   12a28:	.word	0x00034530
   12a2c:	.word	0x00034524
   12a30:	.word	0x00021a60
   12a34:	.word	0x00034528
   12a38:	.word	0x00021a08
   12a3c:	.word	0x00034514
   12a40:	.word	0x00021a60
   12a44:	.word	0x00034500

00012a48 <try_win32>:
   12a48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a4c:	add	fp, sp, #28
   12a50:	sub	sp, sp, #4
   12a54:	bl	5a78 <rb_init_netio_win32>
   12a58:	cmp	r0, #0
   12a5c:	bne	12afc <try_win32+0xb4>
   12a60:	ldr	r0, [pc, #168]	; 12b10 <try_win32+0xc8>
   12a64:	add	r0, pc, r0
   12a68:	ldr	r1, [pc, #164]	; 12b14 <try_win32+0xcc>
   12a6c:	add	r1, pc, r1
   12a70:	ldr	r2, [pc, #160]	; 12b18 <try_win32+0xd0>
   12a74:	add	r2, pc, r2
   12a78:	ldr	r3, [pc, #156]	; 12b1c <try_win32+0xd4>
   12a7c:	add	r3, pc, r3
   12a80:	ldr	ip, [pc, #152]	; 12b20 <try_win32+0xd8>
   12a84:	add	ip, pc, ip
   12a88:	ldr	lr, [pc, #148]	; 12b24 <try_win32+0xdc>
   12a8c:	add	lr, pc, lr
   12a90:	ldr	r4, [pc, #144]	; 12b28 <try_win32+0xe0>
   12a94:	add	r4, pc, r4
   12a98:	ldr	r5, [pc, #140]	; 12b2c <try_win32+0xe4>
   12a9c:	ldr	r5, [pc, r5]
   12aa0:	ldr	r6, [pc, #136]	; 12b30 <try_win32+0xe8>
   12aa4:	add	r6, pc, r6
   12aa8:	ldr	r7, [pc, #132]	; 12b34 <try_win32+0xec>
   12aac:	ldr	r7, [pc, r7]
   12ab0:	ldr	r8, [pc, #128]	; 12b38 <try_win32+0xf0>
   12ab4:	add	r8, pc, r8
   12ab8:	ldr	r9, [pc, #124]	; 12b3c <try_win32+0xf4>
   12abc:	ldr	r9, [pc, r9]
   12ac0:	ldr	sl, [pc, #120]	; 12b40 <try_win32+0xf8>
   12ac4:	add	sl, pc, sl
   12ac8:	str	r9, [sl]
   12acc:	str	r7, [r8]
   12ad0:	str	r5, [r6]
   12ad4:	movw	r5, #0
   12ad8:	str	r5, [r4]
   12adc:	str	r5, [lr]
   12ae0:	str	r5, [ip]
   12ae4:	str	r2, [r3]
   12ae8:	movw	r2, #25
   12aec:	bl	5068 <rb_strlcpy@plt>
   12af0:	movw	r1, #0
   12af4:	str	r1, [sp]
   12af8:	b	12b04 <try_win32+0xbc>
   12afc:	mvn	r0, #0
   12b00:	str	r0, [sp]
   12b04:	ldr	r0, [sp]
   12b08:	sub	sp, fp, #28
   12b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b10:	.word	0x00034438
   12b14:	.word	0x000100a2
   12b18:	.word	0x00000c24
   12b1c:	.word	0x0003443c
   12b20:	.word	0x00034440
   12b24:	.word	0x00034434
   12b28:	.word	0x00034428
   12b2c:	.word	0x000218d4
   12b30:	.word	0x0003442c
   12b34:	.word	0x000218fc
   12b38:	.word	0x00034418
   12b3c:	.word	0x000218e0
   12b40:	.word	0x00034404

00012b44 <rb_select>:
   12b44:	push	{fp, lr}
   12b48:	mov	fp, sp
   12b4c:	sub	sp, sp, #16
   12b50:	ldr	r1, [pc, #48]	; 12b88 <rb_select+0x44>
   12b54:	add	r1, pc, r1
   12b58:	str	r0, [fp, #-4]
   12b5c:	ldr	r0, [r1]
   12b60:	ldr	r1, [fp, #-4]
   12b64:	str	r0, [sp, #4]
   12b68:	mov	r0, r1
   12b6c:	ldr	r1, [sp, #4]
   12b70:	blx	r1
   12b74:	str	r0, [sp, #8]
   12b78:	bl	12b8c <free_fds>
   12b7c:	ldr	r0, [sp, #8]
   12b80:	mov	sp, fp
   12b84:	pop	{fp, pc}
   12b88:	.word	0x00034378

00012b8c <free_fds>:
   12b8c:	push	{fp, lr}
   12b90:	mov	fp, sp
   12b94:	sub	sp, sp, #24
   12b98:	ldr	r0, [pc, #240]	; 12c90 <free_fds+0x104>
   12b9c:	add	r0, pc, r0
   12ba0:	ldr	r0, [r0]
   12ba4:	str	r0, [fp, #-8]
   12ba8:	ldr	r0, [fp, #-8]
   12bac:	movw	r1, #0
   12bb0:	cmp	r0, r1
   12bb4:	beq	12bc8 <free_fds+0x3c>
   12bb8:	ldr	r0, [fp, #-8]
   12bbc:	ldr	r0, [r0, #8]
   12bc0:	str	r0, [sp, #8]
   12bc4:	b	12bd4 <free_fds+0x48>
   12bc8:	movw	r0, #0
   12bcc:	str	r0, [sp, #8]
   12bd0:	b	12bd4 <free_fds+0x48>
   12bd4:	ldr	r0, [sp, #8]
   12bd8:	str	r0, [sp, #12]
   12bdc:	ldr	r0, [fp, #-8]
   12be0:	movw	r1, #0
   12be4:	cmp	r0, r1
   12be8:	beq	12c88 <free_fds+0xfc>
   12bec:	ldr	r0, [pc, #168]	; 12c9c <free_fds+0x110>
   12bf0:	add	r0, pc, r0
   12bf4:	ldr	r1, [fp, #-8]
   12bf8:	ldr	r1, [r1]
   12bfc:	str	r1, [fp, #-4]
   12c00:	ldr	r1, [r0]
   12c04:	mvn	r2, #0
   12c08:	add	r1, r1, r2
   12c0c:	str	r1, [r0]
   12c10:	ldr	r0, [fp, #-4]
   12c14:	ldr	r0, [r0, #12]
   12c18:	bl	5308 <close@plt>
   12c1c:	ldr	r1, [pc, #116]	; 12c98 <free_fds+0x10c>
   12c20:	add	r1, pc, r1
   12c24:	ldr	r2, [fp, #-8]
   12c28:	str	r0, [sp, #4]
   12c2c:	mov	r0, r2
   12c30:	bl	eefc <rb_dlinkDelete>
   12c34:	ldr	r0, [pc, #88]	; 12c94 <free_fds+0x108>
   12c38:	add	r0, pc, r0
   12c3c:	ldr	r0, [r0]
   12c40:	ldr	r1, [fp, #-4]
   12c44:	bl	529c <rb_bh_free@plt>
   12c48:	ldr	r0, [sp, #12]
   12c4c:	str	r0, [fp, #-8]
   12c50:	ldr	r0, [fp, #-8]
   12c54:	movw	r1, #0
   12c58:	cmp	r0, r1
   12c5c:	beq	12c70 <free_fds+0xe4>
   12c60:	ldr	r0, [fp, #-8]
   12c64:	ldr	r0, [r0, #8]
   12c68:	str	r0, [sp]
   12c6c:	b	12c7c <free_fds+0xf0>
   12c70:	movw	r0, #0
   12c74:	str	r0, [sp]
   12c78:	b	12c7c <free_fds+0xf0>
   12c7c:	ldr	r0, [sp]
   12c80:	str	r0, [sp, #12]
   12c84:	b	12bdc <free_fds+0x50>
   12c88:	mov	sp, fp
   12c8c:	pop	{fp, pc}
   12c90:	.word	0x00034338
   12c94:	.word	0x00034260
   12c98:	.word	0x000342b4
   12c9c:	.word	0x000342a0

00012ca0 <rb_recv_fd_buf>:
   12ca0:	push	{r4, r5, fp, lr}
   12ca4:	add	fp, sp, #8
   12ca8:	sub	sp, sp, #192	; 0xc0
   12cac:	ldr	ip, [fp, #8]
   12cb0:	str	r0, [fp, #-16]
   12cb4:	str	r1, [fp, #-20]	; 0xffffffec
   12cb8:	str	r2, [fp, #-24]	; 0xffffffe8
   12cbc:	str	r3, [fp, #-28]	; 0xffffffe4
   12cc0:	mov	r0, #64	; 0x40
   12cc4:	strb	r0, [fp, #-161]	; 0xffffff5f
   12cc8:	ldr	r0, [fp, #8]
   12ccc:	mov	r1, #12
   12cd0:	add	r0, r1, r0, lsl #2
   12cd4:	str	r0, [fp, #-188]	; 0xffffff44
   12cd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12cdc:	str	r0, [fp, #-68]	; 0xffffffbc
   12ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ce4:	str	r0, [fp, #-64]	; 0xffffffc0
   12ce8:	mov	r0, #0
   12cec:	str	r0, [fp, #-56]	; 0xffffffc8
   12cf0:	str	r0, [fp, #-52]	; 0xffffffcc
   12cf4:	sub	r1, fp, #68	; 0x44
   12cf8:	str	r1, [fp, #-48]	; 0xffffffd0
   12cfc:	mov	r1, #1
   12d00:	str	r1, [fp, #-44]	; 0xffffffd4
   12d04:	str	r0, [fp, #-32]	; 0xffffffe0
   12d08:	ldr	r0, [fp, #-188]	; 0xffffff44
   12d0c:	add	r0, r0, #7
   12d10:	bic	r0, r0, #7
   12d14:	mov	r1, sp
   12d18:	sub	r0, r1, r0
   12d1c:	mov	sp, r0
   12d20:	str	r0, [fp, #-60]	; 0xffffffc4
   12d24:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12d28:	str	r0, [fp, #-40]	; 0xffffffd8
   12d2c:	ldr	r0, [fp, #-188]	; 0xffffff44
   12d30:	str	r0, [fp, #-36]	; 0xffffffdc
   12d34:	ldr	r0, [fp, #-16]
   12d38:	str	ip, [fp, #-192]	; 0xffffff40
   12d3c:	bl	4ea0 <rb_get_fd@plt>
   12d40:	sub	r1, fp, #56	; 0x38
   12d44:	movw	r2, #0
   12d48:	bl	550c <recvmsg@plt>
   12d4c:	str	r0, [fp, #-176]	; 0xffffff50
   12d50:	cmp	r0, #0
   12d54:	bgt	12d64 <rb_recv_fd_buf+0xc4>
   12d58:	ldr	r0, [fp, #-176]	; 0xffffff50
   12d5c:	str	r0, [fp, #-12]
   12d60:	b	12f18 <rb_recv_fd_buf+0x278>
   12d64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d68:	cmp	r0, #0
   12d6c:	bls	12f04 <rb_recv_fd_buf+0x264>
   12d70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12d74:	movw	r1, #0
   12d78:	cmp	r0, r1
   12d7c:	beq	12f04 <rb_recv_fd_buf+0x264>
   12d80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d84:	cmp	r0, #12
   12d88:	bcc	12d98 <rb_recv_fd_buf+0xf8>
   12d8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12d90:	str	r0, [fp, #-196]	; 0xffffff3c
   12d94:	b	12da4 <rb_recv_fd_buf+0x104>
   12d98:	movw	r0, #0
   12d9c:	str	r0, [fp, #-196]	; 0xffffff3c
   12da0:	b	12da4 <rb_recv_fd_buf+0x104>
   12da4:	ldr	r0, [fp, #-196]	; 0xffffff3c
   12da8:	str	r0, [fp, #-60]	; 0xffffffc4
   12dac:	movw	r1, #0
   12db0:	cmp	r0, r1
   12db4:	beq	12f04 <rb_recv_fd_buf+0x264>
   12db8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12dbc:	ldr	r0, [r0]
   12dc0:	sub	r0, r0, #12
   12dc4:	lsr	r0, r0, #2
   12dc8:	str	r0, [fp, #-184]	; 0xffffff48
   12dcc:	movw	r0, #0
   12dd0:	str	r0, [fp, #-180]	; 0xffffff4c
   12dd4:	ldr	r0, [fp, #-180]	; 0xffffff4c
   12dd8:	ldr	r1, [fp, #8]
   12ddc:	cmp	r0, r1
   12de0:	movw	r0, #0
   12de4:	str	r0, [fp, #-200]	; 0xffffff38
   12de8:	bge	12e04 <rb_recv_fd_buf+0x164>
   12dec:	ldr	r0, [fp, #-180]	; 0xffffff4c
   12df0:	ldr	r1, [fp, #-184]	; 0xffffff48
   12df4:	cmp	r0, r1
   12df8:	movw	r0, #0
   12dfc:	movlt	r0, #1
   12e00:	str	r0, [fp, #-200]	; 0xffffff38
   12e04:	ldr	r0, [fp, #-200]	; 0xffffff38
   12e08:	tst	r0, #1
   12e0c:	beq	12f00 <rb_recv_fd_buf+0x260>
   12e10:	ldr	r0, [pc, #268]	; 12f24 <rb_recv_fd_buf+0x284>
   12e14:	add	r0, pc, r0
   12e18:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12e1c:	add	r1, r1, #12
   12e20:	ldr	r2, [fp, #-180]	; 0xffffff4c
   12e24:	add	r1, r1, r2, lsl #2
   12e28:	ldr	r1, [r1]
   12e2c:	str	r1, [fp, #-172]	; 0xffffff54
   12e30:	movw	r1, #64	; 0x40
   12e34:	strb	r1, [fp, #-161]	; 0xffffff5f
   12e38:	str	r0, [fp, #-168]	; 0xffffff58
   12e3c:	ldr	r0, [fp, #-172]	; 0xffffff54
   12e40:	sub	r1, fp, #160	; 0xa0
   12e44:	bl	22064 <__fstat>
   12e48:	cmp	r0, #0
   12e4c:	bne	12ed0 <rb_recv_fd_buf+0x230>
   12e50:	ldr	r0, [fp, #-144]	; 0xffffff70
   12e54:	and	r0, r0, #61440	; 0xf000
   12e58:	cmp	r0, #49152	; 0xc000
   12e5c:	bne	12e78 <rb_recv_fd_buf+0x1d8>
   12e60:	ldr	r0, [pc, #200]	; 12f30 <rb_recv_fd_buf+0x290>
   12e64:	add	r0, pc, r0
   12e68:	movw	r1, #4
   12e6c:	strb	r1, [fp, #-161]	; 0xffffff5f
   12e70:	str	r0, [fp, #-168]	; 0xffffff58
   12e74:	b	12ecc <rb_recv_fd_buf+0x22c>
   12e78:	ldr	r0, [fp, #-144]	; 0xffffff70
   12e7c:	and	r0, r0, #61440	; 0xf000
   12e80:	cmp	r0, #4096	; 0x1000
   12e84:	bne	12ea0 <rb_recv_fd_buf+0x200>
   12e88:	ldr	r0, [pc, #156]	; 12f2c <rb_recv_fd_buf+0x28c>
   12e8c:	add	r0, pc, r0
   12e90:	movw	r1, #8
   12e94:	strb	r1, [fp, #-161]	; 0xffffff5f
   12e98:	str	r0, [fp, #-168]	; 0xffffff58
   12e9c:	b	12ec8 <rb_recv_fd_buf+0x228>
   12ea0:	ldr	r0, [fp, #-144]	; 0xffffff70
   12ea4:	and	r0, r0, #61440	; 0xf000
   12ea8:	cmp	r0, #32768	; 0x8000
   12eac:	bne	12ec4 <rb_recv_fd_buf+0x224>
   12eb0:	ldr	r0, [pc, #112]	; 12f28 <rb_recv_fd_buf+0x288>
   12eb4:	add	r0, pc, r0
   12eb8:	movw	r1, #2
   12ebc:	strb	r1, [fp, #-161]	; 0xffffff5f
   12ec0:	str	r0, [fp, #-168]	; 0xffffff58
   12ec4:	b	12ec8 <rb_recv_fd_buf+0x228>
   12ec8:	b	12ecc <rb_recv_fd_buf+0x22c>
   12ecc:	b	12ed0 <rb_recv_fd_buf+0x230>
   12ed0:	ldr	r0, [fp, #-172]	; 0xffffff54
   12ed4:	ldrb	r1, [fp, #-161]	; 0xffffff5f
   12ed8:	ldr	r2, [fp, #-168]	; 0xffffff58
   12edc:	bl	544c <rb_open@plt>
   12ee0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ee4:	ldr	r2, [fp, #-180]	; 0xffffff4c
   12ee8:	add	r1, r1, r2, lsl #2
   12eec:	str	r0, [r1]
   12ef0:	ldr	r0, [fp, #-180]	; 0xffffff4c
   12ef4:	add	r0, r0, #1
   12ef8:	str	r0, [fp, #-180]	; 0xffffff4c
   12efc:	b	12dd4 <rb_recv_fd_buf+0x134>
   12f00:	b	12f10 <rb_recv_fd_buf+0x270>
   12f04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12f08:	movw	r1, #0
   12f0c:	str	r1, [r0]
   12f10:	ldr	r0, [fp, #-176]	; 0xffffff50
   12f14:	str	r0, [fp, #-12]
   12f18:	ldr	r0, [fp, #-12]
   12f1c:	sub	sp, fp, #8
   12f20:	pop	{r4, r5, fp, pc}
   12f24:	.word	0x0000fd3a
   12f28:	.word	0x0000fcc3
   12f2c:	.word	0x0000fcdf
   12f30:	.word	0x0000fcf9

00012f34 <rb_send_fd_buf>:
   12f34:	push	{r4, r5, fp, lr}
   12f38:	add	fp, sp, #8
   12f3c:	sub	sp, sp, #96	; 0x60
   12f40:	ldr	ip, [fp, #12]
   12f44:	ldr	lr, [fp, #8]
   12f48:	str	r0, [fp, #-16]
   12f4c:	str	r1, [fp, #-20]	; 0xffffffec
   12f50:	str	r2, [fp, #-24]	; 0xffffffe8
   12f54:	str	r3, [fp, #-28]	; 0xffffffe4
   12f58:	movw	r0, #48	; 0x30
   12f5c:	strb	r0, [fp, #-69]	; 0xffffffbb
   12f60:	sub	r0, fp, #56	; 0x38
   12f64:	movw	r1, #0
   12f68:	and	r1, r1, #255	; 0xff
   12f6c:	movw	r2, #28
   12f70:	str	ip, [fp, #-96]	; 0xffffffa0
   12f74:	str	lr, [fp, #-100]	; 0xffffff9c
   12f78:	bl	4ff0 <memset@plt>
   12f7c:	ldr	r0, [fp, #8]
   12f80:	cmp	r0, #0
   12f84:	bne	12f9c <rb_send_fd_buf+0x68>
   12f88:	sub	r0, fp, #69	; 0x45
   12f8c:	str	r0, [fp, #-68]	; 0xffffffbc
   12f90:	movw	r0, #1
   12f94:	str	r0, [fp, #-64]	; 0xffffffc0
   12f98:	b	12fac <rb_send_fd_buf+0x78>
   12f9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12fa0:	str	r0, [fp, #-68]	; 0xffffffbc
   12fa4:	ldr	r0, [fp, #8]
   12fa8:	str	r0, [fp, #-64]	; 0xffffffc0
   12fac:	sub	r0, fp, #68	; 0x44
   12fb0:	str	r0, [fp, #-48]	; 0xffffffd0
   12fb4:	movw	r0, #1
   12fb8:	str	r0, [fp, #-44]	; 0xffffffd4
   12fbc:	movw	r0, #0
   12fc0:	str	r0, [fp, #-56]	; 0xffffffc8
   12fc4:	str	r0, [fp, #-52]	; 0xffffffcc
   12fc8:	str	r0, [fp, #-32]	; 0xffffffe0
   12fcc:	str	r0, [fp, #-40]	; 0xffffffd8
   12fd0:	str	r0, [fp, #-36]	; 0xffffffdc
   12fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fd8:	cmp	r0, #0
   12fdc:	ble	130f8 <rb_send_fd_buf+0x1c4>
   12fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fe4:	str	r0, [fp, #-76]	; 0xffffffb4
   12fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fec:	mov	r1, #12
   12ff0:	add	r0, r1, r0, lsl #2
   12ff4:	str	r0, [fp, #-80]	; 0xffffffb0
   12ff8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12ffc:	mov	r1, sp
   13000:	str	r1, [fp, #-84]	; 0xffffffac
   13004:	add	r1, r0, #7
   13008:	bic	r1, r1, #7
   1300c:	mov	r2, sp
   13010:	sub	r1, r2, r1
   13014:	mov	sp, r1
   13018:	str	r0, [fp, #-88]	; 0xffffffa8
   1301c:	str	r1, [fp, #-40]	; 0xffffffd8
   13020:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13024:	str	r0, [fp, #-36]	; 0xffffffdc
   13028:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1302c:	cmp	r0, #12
   13030:	bcc	13040 <rb_send_fd_buf+0x10c>
   13034:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13038:	str	r0, [fp, #-104]	; 0xffffff98
   1303c:	b	1304c <rb_send_fd_buf+0x118>
   13040:	movw	r0, #0
   13044:	str	r0, [fp, #-104]	; 0xffffff98
   13048:	b	1304c <rb_send_fd_buf+0x118>
   1304c:	ldr	r0, [fp, #-104]	; 0xffffff98
   13050:	str	r0, [fp, #-60]	; 0xffffffc4
   13054:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13058:	mov	r1, #1
   1305c:	str	r1, [r0, #4]
   13060:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13064:	str	r1, [r0, #8]
   13068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1306c:	lsl	r0, r0, #2
   13070:	add	r0, r0, #12
   13074:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13078:	str	r0, [r1]
   1307c:	movw	r0, #0
   13080:	str	r0, [fp, #-92]	; 0xffffffa4
   13084:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13088:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1308c:	cmp	r0, r1
   13090:	bcs	130c8 <rb_send_fd_buf+0x194>
   13094:	ldr	r0, [fp, #-20]	; 0xffffffec
   13098:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1309c:	ldr	r0, [r0, r1, lsl #2]
   130a0:	bl	4ea0 <rb_get_fd@plt>
   130a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   130a8:	add	r1, r1, #12
   130ac:	ldr	r2, [fp, #-92]	; 0xffffffa4
   130b0:	add	r1, r1, r2, lsl #2
   130b4:	str	r0, [r1]
   130b8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   130bc:	add	r0, r0, #1
   130c0:	str	r0, [fp, #-92]	; 0xffffffa4
   130c4:	b	13084 <rb_send_fd_buf+0x150>
   130c8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   130cc:	ldr	r0, [r0]
   130d0:	str	r0, [fp, #-36]	; 0xffffffdc
   130d4:	ldr	r0, [fp, #-16]
   130d8:	bl	4ea0 <rb_get_fd@plt>
   130dc:	sub	r1, fp, #56	; 0x38
   130e0:	movw	r2, #16384	; 0x4000
   130e4:	bl	50d4 <sendmsg@plt>
   130e8:	str	r0, [fp, #-12]
   130ec:	ldr	r0, [fp, #-84]	; 0xffffffac
   130f0:	mov	sp, r0
   130f4:	b	13110 <rb_send_fd_buf+0x1dc>
   130f8:	ldr	r0, [fp, #-16]
   130fc:	bl	4ea0 <rb_get_fd@plt>
   13100:	sub	r1, fp, #56	; 0x38
   13104:	movw	r2, #16384	; 0x4000
   13108:	bl	50d4 <sendmsg@plt>
   1310c:	str	r0, [fp, #-12]
   13110:	ldr	r0, [fp, #-12]
   13114:	sub	sp, fp, #8
   13118:	pop	{r4, r5, fp, pc}

0001311c <rb_ipv4_from_ipv6>:
   1311c:	sub	sp, sp, #16
   13120:	str	r0, [sp, #8]
   13124:	str	r1, [sp, #4]
   13128:	ldr	r0, [sp, #8]
   1312c:	add	r0, r0, #8
   13130:	ldrh	r0, [r0]
   13134:	subs	r0, r0, #544	; 0x220
   13138:	movwne	r0, #1
   1313c:	cmp	r0, #0
   13140:	bne	13170 <rb_ipv4_from_ipv6+0x54>
   13144:	ldr	r0, [sp, #4]
   13148:	ldr	r1, [sp, #8]
   1314c:	ldrb	r2, [r1, #10]
   13150:	strb	r2, [r0, #4]
   13154:	ldrb	r2, [r1, #11]
   13158:	strb	r2, [r0, #5]
   1315c:	ldrb	r2, [r1, #12]
   13160:	strb	r2, [r0, #6]
   13164:	ldrb	r1, [r1, #13]
   13168:	strb	r1, [r0, #7]
   1316c:	b	131f4 <rb_ipv4_from_ipv6+0xd8>
   13170:	ldr	r0, [sp, #8]
   13174:	add	r0, r0, #8
   13178:	ldr	r0, [r0]
   1317c:	subs	r0, r0, #288	; 0x120
   13180:	movwne	r0, #1
   13184:	cmp	r0, #0
   13188:	bne	131e4 <rb_ipv4_from_ipv6+0xc8>
   1318c:	movw	r0, #0
   13190:	str	r0, [sp]
   13194:	ldr	r0, [sp]
   13198:	cmp	r0, #4
   1319c:	bge	131e0 <rb_ipv4_from_ipv6+0xc4>
   131a0:	ldr	r0, [sp, #8]
   131a4:	add	r0, r0, #8
   131a8:	ldr	r1, [sp]
   131ac:	add	r1, r1, #12
   131b0:	add	r0, r0, r1
   131b4:	ldrb	r0, [r0]
   131b8:	eor	r0, r0, #255	; 0xff
   131bc:	ldr	r1, [sp, #4]
   131c0:	add	r1, r1, #4
   131c4:	ldr	r2, [sp]
   131c8:	add	r1, r1, r2
   131cc:	strb	r0, [r1]
   131d0:	ldr	r0, [sp]
   131d4:	add	r0, r0, #1
   131d8:	str	r0, [sp]
   131dc:	b	13194 <rb_ipv4_from_ipv6+0x78>
   131e0:	b	131f0 <rb_ipv4_from_ipv6+0xd4>
   131e4:	movw	r0, #0
   131e8:	str	r0, [sp, #12]
   131ec:	b	13224 <rb_ipv4_from_ipv6+0x108>
   131f0:	b	131f4 <rb_ipv4_from_ipv6+0xd8>
   131f4:	ldr	r0, [sp, #4]
   131f8:	ldrh	r0, [r0]
   131fc:	ldr	r1, [sp, #4]
   13200:	strh	r0, [r1]
   13204:	ldr	r0, [sp, #4]
   13208:	movw	r1, #2
   1320c:	strh	r1, [r0]
   13210:	ldr	r0, [sp, #4]
   13214:	movw	r1, #0
   13218:	strh	r1, [r0, #2]
   1321c:	movw	r0, #1
   13220:	str	r0, [sp, #12]
   13224:	ldr	r0, [sp, #12]
   13228:	add	sp, sp, #16
   1322c:	bx	lr

00013230 <mangle_mapped_sockaddr>:
   13230:	push	{fp, lr}
   13234:	mov	fp, sp
   13238:	sub	sp, sp, #40	; 0x28
   1323c:	str	r0, [fp, #-4]
   13240:	ldr	r0, [fp, #-4]
   13244:	str	r0, [fp, #-8]
   13248:	ldr	r0, [fp, #-4]
   1324c:	ldrh	r0, [r0]
   13250:	cmp	r0, #10
   13254:	bne	13350 <mangle_mapped_sockaddr+0x120>
   13258:	ldr	r0, [fp, #-8]
   1325c:	add	r0, r0, #8
   13260:	str	r0, [fp, #-12]
   13264:	ldr	r0, [fp, #-12]
   13268:	ldr	r0, [r0]
   1326c:	cmp	r0, #0
   13270:	movw	r0, #0
   13274:	str	r0, [sp, #4]
   13278:	bne	132c0 <mangle_mapped_sockaddr+0x90>
   1327c:	ldr	r0, [fp, #-12]
   13280:	ldr	r0, [r0, #4]
   13284:	cmp	r0, #0
   13288:	movw	r0, #0
   1328c:	str	r0, [sp, #4]
   13290:	bne	132c0 <mangle_mapped_sockaddr+0x90>
   13294:	ldr	r0, [fp, #-12]
   13298:	ldr	r0, [r0, #8]
   1329c:	movw	r1, #65535	; 0xffff
   132a0:	str	r0, [sp]
   132a4:	mov	r0, r1
   132a8:	bl	54e8 <htonl@plt>
   132ac:	ldr	r1, [sp]
   132b0:	cmp	r1, r0
   132b4:	movw	r0, #0
   132b8:	moveq	r0, #1
   132bc:	str	r0, [sp, #4]
   132c0:	ldr	r0, [sp, #4]
   132c4:	and	r0, r0, #1
   132c8:	str	r0, [fp, #-16]
   132cc:	ldr	r0, [fp, #-16]
   132d0:	cmp	r0, #0
   132d4:	beq	13350 <mangle_mapped_sockaddr+0x120>
   132d8:	add	r0, sp, #8
   132dc:	movw	r1, #0
   132e0:	and	r1, r1, #255	; 0xff
   132e4:	movw	r2, #16
   132e8:	bl	4ff0 <memset@plt>
   132ec:	movw	r0, #2
   132f0:	strh	r0, [sp, #8]
   132f4:	ldr	r0, [fp, #-8]
   132f8:	ldrh	r0, [r0, #2]
   132fc:	strh	r0, [sp, #10]
   13300:	ldr	r0, [fp, #-8]
   13304:	ldr	r0, [r0, #20]
   13308:	str	r0, [sp, #12]
   1330c:	ldr	r0, [fp, #-4]
   13310:	ldrh	r1, [sp, #8]
   13314:	strh	r1, [r0]
   13318:	ldrh	r1, [sp, #10]
   1331c:	strh	r1, [r0, #2]
   13320:	ldrh	r1, [sp, #12]
   13324:	strh	r1, [r0, #4]
   13328:	ldrh	r1, [sp, #14]
   1332c:	strh	r1, [r0, #6]
   13330:	ldrh	r1, [sp, #16]
   13334:	strh	r1, [r0, #8]
   13338:	ldrh	r1, [sp, #18]
   1333c:	strh	r1, [r0, #10]
   13340:	ldrh	r1, [sp, #20]
   13344:	strh	r1, [r0, #12]
   13348:	ldrh	r1, [sp, #22]
   1334c:	strh	r1, [r0, #14]
   13350:	mov	sp, fp
   13354:	pop	{fp, pc}

00013358 <rb_dlinkMoveNode>:
   13358:	sub	sp, sp, #12
   1335c:	str	r0, [sp, #8]
   13360:	str	r1, [sp, #4]
   13364:	str	r2, [sp]
   13368:	ldr	r0, [sp, #8]
   1336c:	ldr	r0, [r0, #8]
   13370:	movw	r1, #0
   13374:	cmp	r0, r1
   13378:	beq	13394 <rb_dlinkMoveNode+0x3c>
   1337c:	ldr	r0, [sp, #8]
   13380:	ldr	r0, [r0, #4]
   13384:	ldr	r1, [sp, #8]
   13388:	ldr	r1, [r1, #8]
   1338c:	str	r0, [r1, #4]
   13390:	b	133a4 <rb_dlinkMoveNode+0x4c>
   13394:	ldr	r0, [sp, #8]
   13398:	ldr	r0, [r0, #4]
   1339c:	ldr	r1, [sp, #4]
   133a0:	str	r0, [r1, #4]
   133a4:	ldr	r0, [sp, #8]
   133a8:	ldr	r0, [r0, #4]
   133ac:	movw	r1, #0
   133b0:	cmp	r0, r1
   133b4:	beq	133d0 <rb_dlinkMoveNode+0x78>
   133b8:	ldr	r0, [sp, #8]
   133bc:	ldr	r0, [r0, #8]
   133c0:	ldr	r1, [sp, #8]
   133c4:	ldr	r1, [r1, #4]
   133c8:	str	r0, [r1, #8]
   133cc:	b	133e0 <rb_dlinkMoveNode+0x88>
   133d0:	ldr	r0, [sp, #8]
   133d4:	ldr	r0, [r0, #8]
   133d8:	ldr	r1, [sp, #4]
   133dc:	str	r0, [r1]
   133e0:	ldr	r0, [sp, #8]
   133e4:	movw	r1, #0
   133e8:	str	r1, [r0, #4]
   133ec:	ldr	r0, [sp]
   133f0:	ldr	r0, [r0]
   133f4:	ldr	r2, [sp, #8]
   133f8:	str	r0, [r2, #8]
   133fc:	ldr	r0, [sp]
   13400:	ldr	r0, [r0]
   13404:	cmp	r0, r1
   13408:	beq	13420 <rb_dlinkMoveNode+0xc8>
   1340c:	ldr	r0, [sp, #8]
   13410:	ldr	r1, [sp]
   13414:	ldr	r1, [r1]
   13418:	str	r0, [r1, #4]
   1341c:	b	13444 <rb_dlinkMoveNode+0xec>
   13420:	ldr	r0, [sp]
   13424:	ldr	r0, [r0, #4]
   13428:	movw	r1, #0
   1342c:	cmp	r0, r1
   13430:	bne	13440 <rb_dlinkMoveNode+0xe8>
   13434:	ldr	r0, [sp, #8]
   13438:	ldr	r1, [sp]
   1343c:	str	r0, [r1, #4]
   13440:	b	13444 <rb_dlinkMoveNode+0xec>
   13444:	ldr	r0, [sp, #8]
   13448:	ldr	r1, [sp]
   1344c:	str	r0, [r1]
   13450:	ldr	r0, [sp, #4]
   13454:	ldr	r1, [r0, #8]
   13458:	mvn	r2, #0
   1345c:	add	r1, r1, r2
   13460:	str	r1, [r0, #8]
   13464:	ldr	r0, [sp]
   13468:	ldr	r1, [r0, #8]
   1346c:	add	r1, r1, #1
   13470:	str	r1, [r0, #8]
   13474:	add	sp, sp, #12
   13478:	bx	lr

0001347c <inetntoa>:
   1347c:	sub	sp, sp, #16
   13480:	ldr	r1, [pc, #496]	; 13678 <inetntoa+0x1fc>
   13484:	add	r1, pc, r1
   13488:	str	r0, [sp, #12]
   1348c:	ldr	r0, [pc, #504]	; 1368c <inetntoa+0x210>
   13490:	add	r0, pc, r0
   13494:	str	r0, [sp, #8]
   13498:	ldr	r0, [sp, #12]
   1349c:	str	r0, [sp, #4]
   134a0:	ldr	r0, [sp, #4]
   134a4:	add	r2, r0, #1
   134a8:	str	r2, [sp, #4]
   134ac:	ldrb	r0, [r0]
   134b0:	mov	r2, r0
   134b4:	ldr	r3, [pc, #468]	; 13690 <inetntoa+0x214>
   134b8:	add	r3, pc, r3
   134bc:	add	r0, r3, r0, lsl #2
   134c0:	ldr	r0, [r0]
   134c4:	str	r0, [sp]
   134c8:	ldr	r0, [sp]
   134cc:	ldrsb	r0, [r0]
   134d0:	cmp	r0, #0
   134d4:	beq	134fc <inetntoa+0x80>
   134d8:	ldr	r0, [sp]
   134dc:	add	r1, r0, #1
   134e0:	str	r1, [sp]
   134e4:	ldrb	r0, [r0]
   134e8:	ldr	r1, [sp, #8]
   134ec:	add	r2, r1, #1
   134f0:	str	r2, [sp, #8]
   134f4:	strb	r0, [r1]
   134f8:	b	134c8 <inetntoa+0x4c>
   134fc:	ldr	r0, [pc, #376]	; 1367c <inetntoa+0x200>
   13500:	add	r0, pc, r0
   13504:	ldr	r1, [sp, #8]
   13508:	add	r2, r1, #1
   1350c:	str	r2, [sp, #8]
   13510:	mov	r2, #46	; 0x2e
   13514:	strb	r2, [r1]
   13518:	ldr	r1, [sp, #4]
   1351c:	add	r2, r1, #1
   13520:	str	r2, [sp, #4]
   13524:	ldrb	r1, [r1]
   13528:	mov	r2, r1
   1352c:	ldr	r3, [pc, #352]	; 13694 <inetntoa+0x218>
   13530:	add	r3, pc, r3
   13534:	add	r1, r3, r1, lsl #2
   13538:	ldr	r1, [r1]
   1353c:	str	r1, [sp]
   13540:	ldr	r0, [sp]
   13544:	ldrsb	r0, [r0]
   13548:	cmp	r0, #0
   1354c:	beq	13574 <inetntoa+0xf8>
   13550:	ldr	r0, [sp]
   13554:	add	r1, r0, #1
   13558:	str	r1, [sp]
   1355c:	ldrb	r0, [r0]
   13560:	ldr	r1, [sp, #8]
   13564:	add	r2, r1, #1
   13568:	str	r2, [sp, #8]
   1356c:	strb	r0, [r1]
   13570:	b	13540 <inetntoa+0xc4>
   13574:	ldr	r0, [pc, #260]	; 13680 <inetntoa+0x204>
   13578:	add	r0, pc, r0
   1357c:	ldr	r1, [sp, #8]
   13580:	add	r2, r1, #1
   13584:	str	r2, [sp, #8]
   13588:	mov	r2, #46	; 0x2e
   1358c:	strb	r2, [r1]
   13590:	ldr	r1, [sp, #4]
   13594:	add	r2, r1, #1
   13598:	str	r2, [sp, #4]
   1359c:	ldrb	r1, [r1]
   135a0:	mov	r2, r1
   135a4:	ldr	r3, [pc, #236]	; 13698 <inetntoa+0x21c>
   135a8:	add	r3, pc, r3
   135ac:	add	r1, r3, r1, lsl #2
   135b0:	ldr	r1, [r1]
   135b4:	str	r1, [sp]
   135b8:	ldr	r0, [sp]
   135bc:	ldrsb	r0, [r0]
   135c0:	cmp	r0, #0
   135c4:	beq	135ec <inetntoa+0x170>
   135c8:	ldr	r0, [sp]
   135cc:	add	r1, r0, #1
   135d0:	str	r1, [sp]
   135d4:	ldrb	r0, [r0]
   135d8:	ldr	r1, [sp, #8]
   135dc:	add	r2, r1, #1
   135e0:	str	r2, [sp, #8]
   135e4:	strb	r0, [r1]
   135e8:	b	135b8 <inetntoa+0x13c>
   135ec:	ldr	r0, [pc, #144]	; 13684 <inetntoa+0x208>
   135f0:	add	r0, pc, r0
   135f4:	ldr	r1, [sp, #8]
   135f8:	add	r2, r1, #1
   135fc:	str	r2, [sp, #8]
   13600:	mov	r2, #46	; 0x2e
   13604:	strb	r2, [r1]
   13608:	ldr	r1, [sp, #4]
   1360c:	ldrb	r1, [r1]
   13610:	mov	r2, r1
   13614:	ldr	r3, [pc, #128]	; 1369c <inetntoa+0x220>
   13618:	add	r3, pc, r3
   1361c:	add	r1, r3, r1, lsl #2
   13620:	ldr	r1, [r1]
   13624:	str	r1, [sp]
   13628:	ldr	r0, [sp]
   1362c:	ldrsb	r0, [r0]
   13630:	cmp	r0, #0
   13634:	beq	1365c <inetntoa+0x1e0>
   13638:	ldr	r0, [sp]
   1363c:	add	r1, r0, #1
   13640:	str	r1, [sp]
   13644:	ldrb	r0, [r0]
   13648:	ldr	r1, [sp, #8]
   1364c:	add	r2, r1, #1
   13650:	str	r2, [sp, #8]
   13654:	strb	r0, [r1]
   13658:	b	13628 <inetntoa+0x1ac>
   1365c:	ldr	r0, [pc, #36]	; 13688 <inetntoa+0x20c>
   13660:	add	r0, pc, r0
   13664:	ldr	r1, [sp, #8]
   13668:	movw	r2, #0
   1366c:	strb	r2, [r1]
   13670:	add	sp, sp, #16
   13674:	bx	lr
   13678:	.word	0x0002100c
   1367c:	.word	0x00020f90
   13680:	.word	0x00020f18
   13684:	.word	0x00020ea0
   13688:	.word	0x00033880
   1368c:	.word	0x00033a50
   13690:	.word	0x00020fd8
   13694:	.word	0x00020f60
   13698:	.word	0x00020ee8
   1369c:	.word	0x00020e78

000136a0 <rb_unsupported_event>:
   136a0:	movw	r0, #0
   136a4:	bx	lr

000136a8 <rb_ssl_shutdown>:
   136a8:	push	{fp, lr}
   136ac:	mov	fp, sp
   136b0:	sub	sp, sp, #16
   136b4:	str	r0, [fp, #-4]
   136b8:	ldr	r0, [fp, #-4]
   136bc:	movw	r1, #0
   136c0:	cmp	r0, r1
   136c4:	beq	136dc <rb_ssl_shutdown+0x34>
   136c8:	ldr	r0, [fp, #-4]
   136cc:	ldr	r0, [r0, #56]	; 0x38
   136d0:	movw	r1, #0
   136d4:	cmp	r0, r1
   136d8:	bne	136e0 <rb_ssl_shutdown+0x38>
   136dc:	b	13770 <rb_ssl_shutdown+0xc8>
   136e0:	bl	13778 <rb_ssl_last_err>
   136e4:	movw	r1, #0
   136e8:	str	r1, [sp, #8]
   136ec:	ldr	r0, [sp, #8]
   136f0:	cmp	r0, #4
   136f4:	bge	13758 <rb_ssl_shutdown+0xb0>
   136f8:	ldr	r0, [fp, #-4]
   136fc:	ldr	r0, [r0, #56]	; 0x38
   13700:	bl	5470 <SSL_shutdown@plt>
   13704:	str	r0, [sp, #4]
   13708:	ldr	r0, [fp, #-4]
   1370c:	ldr	r0, [r0, #56]	; 0x38
   13710:	ldr	r1, [sp, #4]
   13714:	bl	5680 <SSL_get_error@plt>
   13718:	str	r0, [sp]
   1371c:	ldr	r0, [sp, #4]
   13720:	cmp	r0, #0
   13724:	bge	13740 <rb_ssl_shutdown+0x98>
   13728:	ldr	r0, [sp]
   1372c:	cmp	r0, #2
   13730:	beq	13744 <rb_ssl_shutdown+0x9c>
   13734:	ldr	r0, [sp]
   13738:	cmp	r0, #3
   1373c:	beq	13744 <rb_ssl_shutdown+0x9c>
   13740:	b	13758 <rb_ssl_shutdown+0xb0>
   13744:	b	13748 <rb_ssl_shutdown+0xa0>
   13748:	ldr	r0, [sp, #8]
   1374c:	add	r0, r0, #1
   13750:	str	r0, [sp, #8]
   13754:	b	136ec <rb_ssl_shutdown+0x44>
   13758:	ldr	r0, [fp, #-4]
   1375c:	ldr	r0, [r0, #56]	; 0x38
   13760:	bl	532c <SSL_free@plt>
   13764:	ldr	r0, [fp, #-4]
   13768:	movw	r1, #0
   1376c:	str	r1, [r0, #56]	; 0x38
   13770:	mov	sp, fp
   13774:	pop	{fp, pc}

00013778 <rb_ssl_last_err>:
   13778:	push	{fp, lr}
   1377c:	mov	fp, sp
   13780:	sub	sp, sp, #8
   13784:	movw	r0, #0
   13788:	str	r0, [sp]
   1378c:	bl	4dbc <ERR_get_error@plt>
   13790:	str	r0, [sp, #4]
   13794:	cmp	r0, #0
   13798:	beq	137a8 <rb_ssl_last_err+0x30>
   1379c:	ldr	r0, [sp, #4]
   137a0:	str	r0, [sp]
   137a4:	b	1378c <rb_ssl_last_err+0x14>
   137a8:	ldr	r0, [sp]
   137ac:	mov	sp, fp
   137b0:	pop	{fp, pc}

000137b4 <rb_init_ssl>:
   137b4:	push	{fp, lr}
   137b8:	mov	fp, sp
   137bc:	ldr	r0, [pc, #20]	; 137d8 <rb_init_ssl+0x24>
   137c0:	add	r0, pc, r0
   137c4:	ldr	r1, [pc, #16]	; 137dc <rb_init_ssl+0x28>
   137c8:	add	r1, pc, r1
   137cc:	bl	52e4 <rb_lib_log@plt>
   137d0:	movw	r0, #1
   137d4:	pop	{fp, pc}
   137d8:	.word	0x0000f789
   137dc:	.word	0x0000f7a1

000137e0 <rb_setup_ssl_server>:
   137e0:	push	{fp, lr}
   137e4:	mov	fp, sp
   137e8:	sub	sp, sp, #120	; 0x78
   137ec:	str	r0, [fp, #-8]
   137f0:	str	r1, [fp, #-12]
   137f4:	str	r2, [fp, #-16]
   137f8:	str	r3, [fp, #-20]	; 0xffffffec
   137fc:	ldr	r0, [fp, #-8]
   13800:	movw	r1, #0
   13804:	cmp	r0, r1
   13808:	bne	1382c <rb_setup_ssl_server+0x4c>
   1380c:	ldr	r0, [pc, #1128]	; 13c7c <rb_setup_ssl_server+0x49c>
   13810:	add	r0, pc, r0
   13814:	ldr	r1, [pc, #1124]	; 13c80 <rb_setup_ssl_server+0x4a0>
   13818:	add	r1, pc, r1
   1381c:	bl	52e4 <rb_lib_log@plt>
   13820:	movw	r0, #0
   13824:	str	r0, [fp, #-4]
   13828:	b	13c0c <rb_setup_ssl_server+0x42c>
   1382c:	ldr	r0, [fp, #-12]
   13830:	movw	r1, #0
   13834:	cmp	r0, r1
   13838:	bne	13844 <rb_setup_ssl_server+0x64>
   1383c:	ldr	r0, [fp, #-8]
   13840:	str	r0, [fp, #-12]
   13844:	ldr	r0, [fp, #-20]	; 0xffffffec
   13848:	movw	r1, #0
   1384c:	cmp	r0, r1
   13850:	bne	13860 <rb_setup_ssl_server+0x80>
   13854:	ldr	r0, [pc, #956]	; 13c18 <rb_setup_ssl_server+0x438>
   13858:	add	r0, pc, r0
   1385c:	str	r0, [fp, #-20]	; 0xffffffec
   13860:	bl	13778 <rb_ssl_last_err>
   13864:	str	r0, [fp, #-36]	; 0xffffffdc
   13868:	bl	4d2c <TLS_method@plt>
   1386c:	bl	54f4 <SSL_CTX_new@plt>
   13870:	str	r0, [fp, #-24]	; 0xffffffe8
   13874:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13878:	movw	r1, #0
   1387c:	cmp	r0, r1
   13880:	bne	138bc <rb_setup_ssl_server+0xdc>
   13884:	bl	13778 <rb_ssl_last_err>
   13888:	bl	13c84 <rb_ssl_strerror>
   1388c:	ldr	r1, [pc, #992]	; 13c74 <rb_setup_ssl_server+0x494>
   13890:	add	r1, pc, r1
   13894:	ldr	r2, [pc, #988]	; 13c78 <rb_setup_ssl_server+0x498>
   13898:	add	r2, pc, r2
   1389c:	str	r0, [fp, #-40]	; 0xffffffd8
   138a0:	mov	r0, r1
   138a4:	mov	r1, r2
   138a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   138ac:	bl	52e4 <rb_lib_log@plt>
   138b0:	movw	r0, #0
   138b4:	str	r0, [fp, #-4]
   138b8:	b	13c0c <rb_setup_ssl_server+0x42c>
   138bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138c0:	ldr	r1, [fp, #-8]
   138c4:	bl	5200 <SSL_CTX_use_certificate_chain_file@plt>
   138c8:	cmp	r0, #1
   138cc:	beq	1391c <rb_setup_ssl_server+0x13c>
   138d0:	ldr	r2, [fp, #-8]
   138d4:	str	r2, [fp, #-44]	; 0xffffffd4
   138d8:	bl	13778 <rb_ssl_last_err>
   138dc:	bl	13c84 <rb_ssl_strerror>
   138e0:	ldr	r1, [pc, #900]	; 13c6c <rb_setup_ssl_server+0x48c>
   138e4:	add	r1, pc, r1
   138e8:	ldr	r2, [pc, #896]	; 13c70 <rb_setup_ssl_server+0x490>
   138ec:	add	r2, pc, r2
   138f0:	str	r0, [fp, #-48]	; 0xffffffd0
   138f4:	mov	r0, r1
   138f8:	mov	r1, r2
   138fc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13900:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13904:	bl	52e4 <rb_lib_log@plt>
   13908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1390c:	bl	4e1c <SSL_CTX_free@plt>
   13910:	movw	r0, #0
   13914:	str	r0, [fp, #-4]
   13918:	b	13c0c <rb_setup_ssl_server+0x42c>
   1391c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13920:	ldr	r1, [fp, #-12]
   13924:	movw	r2, #1
   13928:	bl	52f0 <SSL_CTX_use_PrivateKey_file@plt>
   1392c:	cmp	r0, #1
   13930:	beq	13980 <rb_setup_ssl_server+0x1a0>
   13934:	ldr	r2, [fp, #-12]
   13938:	str	r2, [fp, #-52]	; 0xffffffcc
   1393c:	bl	13778 <rb_ssl_last_err>
   13940:	bl	13c84 <rb_ssl_strerror>
   13944:	ldr	r1, [pc, #792]	; 13c64 <rb_setup_ssl_server+0x484>
   13948:	add	r1, pc, r1
   1394c:	ldr	r2, [pc, #788]	; 13c68 <rb_setup_ssl_server+0x488>
   13950:	add	r2, pc, r2
   13954:	str	r0, [fp, #-56]	; 0xffffffc8
   13958:	mov	r0, r1
   1395c:	mov	r1, r2
   13960:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13964:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13968:	bl	52e4 <rb_lib_log@plt>
   1396c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13970:	bl	4e1c <SSL_CTX_free@plt>
   13974:	movw	r0, #0
   13978:	str	r0, [fp, #-4]
   1397c:	b	13c0c <rb_setup_ssl_server+0x42c>
   13980:	ldr	r0, [fp, #-16]
   13984:	movw	r1, #0
   13988:	cmp	r0, r1
   1398c:	bne	139a8 <rb_setup_ssl_server+0x1c8>
   13990:	ldr	r0, [pc, #664]	; 13c30 <rb_setup_ssl_server+0x450>
   13994:	add	r0, pc, r0
   13998:	ldr	r1, [pc, #660]	; 13c34 <rb_setup_ssl_server+0x454>
   1399c:	add	r1, pc, r1
   139a0:	bl	52e4 <rb_lib_log@plt>
   139a4:	b	13ab8 <rb_setup_ssl_server+0x2d8>
   139a8:	ldr	r0, [pc, #620]	; 13c1c <rb_setup_ssl_server+0x43c>
   139ac:	add	r1, pc, r0
   139b0:	ldr	r0, [fp, #-16]
   139b4:	bl	4fd8 <fopen@plt>
   139b8:	str	r0, [fp, #-28]	; 0xffffffe4
   139bc:	movw	r0, #0
   139c0:	str	r0, [fp, #-32]	; 0xffffffe0
   139c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   139c8:	cmp	r1, r0
   139cc:	bne	13a10 <rb_setup_ssl_server+0x230>
   139d0:	ldr	r2, [fp, #-16]
   139d4:	str	r2, [sp, #60]	; 0x3c
   139d8:	bl	56c8 <__errno_location@plt>
   139dc:	ldr	r0, [r0]
   139e0:	bl	4d5c <strerror@plt>
   139e4:	ldr	r1, [pc, #572]	; 13c28 <rb_setup_ssl_server+0x448>
   139e8:	add	r1, pc, r1
   139ec:	ldr	r2, [pc, #568]	; 13c2c <rb_setup_ssl_server+0x44c>
   139f0:	add	r2, pc, r2
   139f4:	str	r0, [sp, #56]	; 0x38
   139f8:	mov	r0, r1
   139fc:	mov	r1, r2
   13a00:	ldr	r2, [sp, #60]	; 0x3c
   13a04:	ldr	r3, [sp, #56]	; 0x38
   13a08:	bl	52e4 <rb_lib_log@plt>
   13a0c:	b	13ab4 <rb_setup_ssl_server+0x2d4>
   13a10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13a14:	sub	r1, fp, #32
   13a18:	movw	r2, #0
   13a1c:	str	r2, [sp, #52]	; 0x34
   13a20:	ldr	r3, [sp, #52]	; 0x34
   13a24:	bl	53b0 <PEM_read_DHparams@plt>
   13a28:	movw	r1, #0
   13a2c:	cmp	r0, r1
   13a30:	bne	13a78 <rb_setup_ssl_server+0x298>
   13a34:	ldr	r2, [fp, #-16]
   13a38:	str	r2, [sp, #48]	; 0x30
   13a3c:	bl	13778 <rb_ssl_last_err>
   13a40:	bl	13c84 <rb_ssl_strerror>
   13a44:	ldr	r1, [pc, #468]	; 13c20 <rb_setup_ssl_server+0x440>
   13a48:	add	r1, pc, r1
   13a4c:	ldr	r2, [pc, #464]	; 13c24 <rb_setup_ssl_server+0x444>
   13a50:	add	r2, pc, r2
   13a54:	str	r0, [sp, #44]	; 0x2c
   13a58:	mov	r0, r1
   13a5c:	mov	r1, r2
   13a60:	ldr	r2, [sp, #48]	; 0x30
   13a64:	ldr	r3, [sp, #44]	; 0x2c
   13a68:	bl	52e4 <rb_lib_log@plt>
   13a6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13a70:	bl	4f48 <fclose@plt>
   13a74:	b	13ab0 <rb_setup_ssl_server+0x2d0>
   13a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13a80:	movw	r2, #3
   13a84:	str	r1, [sp, #40]	; 0x28
   13a88:	mov	r1, r2
   13a8c:	movw	r2, #0
   13a90:	ldr	r3, [sp, #40]	; 0x28
   13a94:	bl	5038 <SSL_CTX_ctrl@plt>
   13a98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13a9c:	str	r0, [sp, #36]	; 0x24
   13aa0:	mov	r0, r1
   13aa4:	bl	5434 <DH_free@plt>
   13aa8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13aac:	bl	4f48 <fclose@plt>
   13ab0:	b	13ab4 <rb_setup_ssl_server+0x2d4>
   13ab4:	b	13ab8 <rb_setup_ssl_server+0x2d8>
   13ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13abc:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ac0:	bl	4db0 <SSL_CTX_set_cipher_list@plt>
   13ac4:	cmp	r0, #1
   13ac8:	beq	13af4 <rb_setup_ssl_server+0x314>
   13acc:	ldr	r0, [pc, #392]	; 13c5c <rb_setup_ssl_server+0x47c>
   13ad0:	add	r0, pc, r0
   13ad4:	ldr	r1, [pc, #388]	; 13c60 <rb_setup_ssl_server+0x480>
   13ad8:	add	r1, pc, r1
   13adc:	bl	52e4 <rb_lib_log@plt>
   13ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ae4:	bl	4e1c <SSL_CTX_free@plt>
   13ae8:	movw	r0, #0
   13aec:	str	r0, [fp, #-4]
   13af0:	b	13c0c <rb_setup_ssl_server+0x42c>
   13af4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13af8:	movw	r1, #44	; 0x2c
   13afc:	movw	r2, #0
   13b00:	str	r2, [sp, #32]
   13b04:	ldr	r3, [sp, #32]
   13b08:	bl	5038 <SSL_CTX_ctrl@plt>
   13b0c:	ldr	r1, [pc, #308]	; 13c48 <rb_setup_ssl_server+0x468>
   13b10:	add	r2, pc, r1
   13b14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13b18:	str	r0, [sp, #28]
   13b1c:	mov	r0, r1
   13b20:	movw	r1, #5
   13b24:	bl	56f8 <SSL_CTX_set_verify@plt>
   13b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b2c:	movw	r1, #2048	; 0x800
   13b30:	bl	4edc <SSL_CTX_clear_options@plt>
   13b34:	ldr	r1, [pc, #264]	; 13c44 <rb_setup_ssl_server+0x464>
   13b38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13b3c:	str	r0, [sp, #24]
   13b40:	mov	r0, r2
   13b44:	bl	5218 <SSL_CTX_set_options@plt>
   13b48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13b4c:	str	r0, [sp, #20]
   13b50:	mov	r0, r1
   13b54:	movw	r1, #16384	; 0x4000
   13b58:	bl	5218 <SSL_CTX_set_options@plt>
   13b5c:	ldr	r1, [pc, #220]	; 13c40 <rb_setup_ssl_server+0x460>
   13b60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13b64:	str	r0, [sp, #16]
   13b68:	mov	r0, r2
   13b6c:	bl	5218 <SSL_CTX_set_options@plt>
   13b70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13b74:	str	r0, [sp, #12]
   13b78:	mov	r0, r1
   13b7c:	movw	r1, #0
   13b80:	bl	5218 <SSL_CTX_set_options@plt>
   13b84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13b88:	str	r0, [sp, #8]
   13b8c:	mov	r0, r1
   13b90:	movw	r1, #0
   13b94:	bl	5218 <SSL_CTX_set_options@plt>
   13b98:	ldr	r1, [pc, #156]	; 13c3c <rb_setup_ssl_server+0x45c>
   13b9c:	add	r3, pc, r1
   13ba0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13ba4:	str	r0, [sp, #4]
   13ba8:	mov	r0, r1
   13bac:	movw	r1, #92	; 0x5c
   13bb0:	movw	r2, #0
   13bb4:	bl	5038 <SSL_CTX_ctrl@plt>
   13bb8:	ldr	r1, [pc, #120]	; 13c38 <rb_setup_ssl_server+0x458>
   13bbc:	add	r1, pc, r1
   13bc0:	ldr	r1, [r1]
   13bc4:	movw	r2, #0
   13bc8:	cmp	r1, r2
   13bcc:	beq	13be0 <rb_setup_ssl_server+0x400>
   13bd0:	ldr	r0, [pc, #116]	; 13c4c <rb_setup_ssl_server+0x46c>
   13bd4:	add	r0, pc, r0
   13bd8:	ldr	r0, [r0]
   13bdc:	bl	4e1c <SSL_CTX_free@plt>
   13be0:	ldr	r0, [pc, #104]	; 13c50 <rb_setup_ssl_server+0x470>
   13be4:	add	r0, pc, r0
   13be8:	ldr	r1, [pc, #100]	; 13c54 <rb_setup_ssl_server+0x474>
   13bec:	add	r1, pc, r1
   13bf0:	ldr	r2, [pc, #96]	; 13c58 <rb_setup_ssl_server+0x478>
   13bf4:	add	r2, pc, r2
   13bf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13bfc:	str	r3, [r2]
   13c00:	bl	52e4 <rb_lib_log@plt>
   13c04:	movw	r0, #1
   13c08:	str	r0, [fp, #-4]
   13c0c:	ldr	r0, [fp, #-4]
   13c10:	mov	sp, fp
   13c14:	pop	{fp, pc}
   13c18:	.word	0x0000f9a8
   13c1c:	.word	0x0000fb72
   13c20:	.word	0x0000f60d
   13c24:	.word	0x0000f547
   13c28:	.word	0x0000f658
   13c2c:	.word	0x0000f5a7
   13c30:	.word	0x0000f688
   13c34:	.word	0x0000f5fb
   13c38:	.word	0x00033334
   13c3c:	.word	0x00020cf4
   13c40:	.word	0x00400000
   13c44:	.word	0x04000000
   13c48:	.word	0x000001a8
   13c4c:	.word	0x0003331c
   13c50:	.word	0x0000f4cf
   13c54:	.word	0x0000f3ab
   13c58:	.word	0x000332fc
   13c5c:	.word	0x0000f5a6
   13c60:	.word	0x0000f4bf
   13c64:	.word	0x0000f6a9
   13c68:	.word	0x0000f647
   13c6c:	.word	0x0000f6db
   13c70:	.word	0x0000f6ab
   13c74:	.word	0x0000f71b
   13c78:	.word	0x0000f6ff
   13c7c:	.word	0x0000f765
   13c80:	.word	0x0000f77f

00013c84 <rb_ssl_strerror>:
   13c84:	push	{fp, lr}
   13c88:	mov	fp, sp
   13c8c:	sub	sp, sp, #8
   13c90:	ldr	r1, [pc, #36]	; 13cbc <rb_ssl_strerror+0x38>
   13c94:	add	r1, pc, r1
   13c98:	str	r0, [sp, #4]
   13c9c:	ldr	r0, [sp, #4]
   13ca0:	movw	r2, #512	; 0x200
   13ca4:	bl	4f6c <ERR_error_string_n@plt>
   13ca8:	ldr	r0, [pc, #8]	; 13cb8 <rb_ssl_strerror+0x34>
   13cac:	add	r0, pc, r0
   13cb0:	mov	sp, fp
   13cb4:	pop	{fp, pc}
   13cb8:	.word	0x00033448
   13cbc:	.word	0x00033460

00013cc0 <verify_accept_all_cb>:
   13cc0:	sub	sp, sp, #8
   13cc4:	str	r0, [sp, #4]
   13cc8:	str	r1, [sp]
   13ccc:	movw	r0, #1
   13cd0:	add	sp, sp, #8
   13cd4:	bx	lr

00013cd8 <rb_init_prng>:
   13cd8:	push	{fp, lr}
   13cdc:	mov	fp, sp
   13ce0:	sub	sp, sp, #24
   13ce4:	str	r0, [fp, #-8]
   13ce8:	str	r1, [sp, #12]
   13cec:	bl	13778 <rb_ssl_last_err>
   13cf0:	ldr	r1, [sp, #12]
   13cf4:	cmp	r1, #0
   13cf8:	bne	13d3c <rb_init_prng+0x64>
   13cfc:	ldr	r0, [fp, #-8]
   13d00:	mvn	r1, #0
   13d04:	bl	4dec <RAND_load_file@plt>
   13d08:	cmp	r0, #0
   13d0c:	bge	13d3c <rb_init_prng+0x64>
   13d10:	bl	13778 <rb_ssl_last_err>
   13d14:	bl	13c84 <rb_ssl_strerror>
   13d18:	ldr	r1, [pc, #136]	; 13da8 <rb_init_prng+0xd0>
   13d1c:	add	r1, pc, r1
   13d20:	ldr	r2, [pc, #132]	; 13dac <rb_init_prng+0xd4>
   13d24:	add	r2, pc, r2
   13d28:	str	r0, [sp, #8]
   13d2c:	mov	r0, r1
   13d30:	mov	r1, r2
   13d34:	ldr	r2, [sp, #8]
   13d38:	bl	52e4 <rb_lib_log@plt>
   13d3c:	bl	5590 <RAND_status@plt>
   13d40:	cmp	r0, #1
   13d44:	beq	13d80 <rb_init_prng+0xa8>
   13d48:	bl	13778 <rb_ssl_last_err>
   13d4c:	bl	13c84 <rb_ssl_strerror>
   13d50:	ldr	r1, [pc, #96]	; 13db8 <rb_init_prng+0xe0>
   13d54:	add	r1, pc, r1
   13d58:	ldr	r2, [pc, #92]	; 13dbc <rb_init_prng+0xe4>
   13d5c:	add	r2, pc, r2
   13d60:	str	r0, [sp, #4]
   13d64:	mov	r0, r1
   13d68:	mov	r1, r2
   13d6c:	ldr	r2, [sp, #4]
   13d70:	bl	52e4 <rb_lib_log@plt>
   13d74:	movw	r0, #0
   13d78:	str	r0, [fp, #-4]
   13d7c:	b	13d9c <rb_init_prng+0xc4>
   13d80:	ldr	r0, [pc, #40]	; 13db0 <rb_init_prng+0xd8>
   13d84:	add	r0, pc, r0
   13d88:	ldr	r1, [pc, #36]	; 13db4 <rb_init_prng+0xdc>
   13d8c:	add	r1, pc, r1
   13d90:	bl	52e4 <rb_lib_log@plt>
   13d94:	movw	r0, #1
   13d98:	str	r0, [fp, #-4]
   13d9c:	ldr	r0, [fp, #-4]
   13da0:	mov	sp, fp
   13da4:	pop	{fp, pc}
   13da8:	.word	0x0000f3b8
   13dac:	.word	0x0000f3c7
   13db0:	.word	0x0000f388
   13db4:	.word	0x0000f35f
   13db8:	.word	0x0000f3a4
   13dbc:	.word	0x0000f38f

00013dc0 <rb_get_random>:
   13dc0:	push	{fp, lr}
   13dc4:	mov	fp, sp
   13dc8:	sub	sp, sp, #24
   13dcc:	str	r0, [fp, #-8]
   13dd0:	str	r1, [sp, #12]
   13dd4:	bl	13778 <rb_ssl_last_err>
   13dd8:	ldr	r1, [fp, #-8]
   13ddc:	ldr	r2, [sp, #12]
   13de0:	str	r0, [sp, #8]
   13de4:	mov	r0, r1
   13de8:	mov	r1, r2
   13dec:	bl	54ac <RAND_bytes@plt>
   13df0:	cmp	r0, #1
   13df4:	beq	13e30 <rb_get_random+0x70>
   13df8:	bl	13778 <rb_ssl_last_err>
   13dfc:	bl	13c84 <rb_ssl_strerror>
   13e00:	ldr	r1, [pc, #60]	; 13e44 <rb_get_random+0x84>
   13e04:	add	r1, pc, r1
   13e08:	ldr	r2, [pc, #56]	; 13e48 <rb_get_random+0x88>
   13e0c:	add	r2, pc, r2
   13e10:	str	r0, [sp, #4]
   13e14:	mov	r0, r1
   13e18:	mov	r1, r2
   13e1c:	ldr	r2, [sp, #4]
   13e20:	bl	52e4 <rb_lib_log@plt>
   13e24:	movw	r0, #0
   13e28:	str	r0, [fp, #-4]
   13e2c:	b	13e38 <rb_get_random+0x78>
   13e30:	movw	r0, #1
   13e34:	str	r0, [fp, #-4]
   13e38:	ldr	r0, [fp, #-4]
   13e3c:	mov	sp, fp
   13e40:	pop	{fp, pc}
   13e44:	.word	0x0000f31d
   13e48:	.word	0x0000f328

00013e4c <rb_get_ssl_strerror>:
   13e4c:	push	{fp, lr}
   13e50:	mov	fp, sp
   13e54:	sub	sp, sp, #8
   13e58:	str	r0, [sp, #4]
   13e5c:	ldr	r0, [sp, #4]
   13e60:	ldr	r0, [r0, #64]	; 0x40
   13e64:	bl	13c84 <rb_ssl_strerror>
   13e68:	mov	sp, fp
   13e6c:	pop	{fp, pc}

00013e70 <rb_get_ssl_certfp>:
   13e70:	push	{fp, lr}
   13e74:	mov	fp, sp
   13e78:	sub	sp, sp, #32
   13e7c:	str	r0, [fp, #-8]
   13e80:	str	r1, [fp, #-12]
   13e84:	str	r2, [sp, #16]
   13e88:	ldr	r0, [fp, #-8]
   13e8c:	movw	r1, #0
   13e90:	cmp	r0, r1
   13e94:	beq	13eac <rb_get_ssl_certfp+0x3c>
   13e98:	ldr	r0, [fp, #-8]
   13e9c:	ldr	r0, [r0, #56]	; 0x38
   13ea0:	movw	r1, #0
   13ea4:	cmp	r0, r1
   13ea8:	bne	13eb8 <rb_get_ssl_certfp+0x48>
   13eac:	movw	r0, #0
   13eb0:	str	r0, [fp, #-4]
   13eb4:	b	13f54 <rb_get_ssl_certfp+0xe4>
   13eb8:	ldr	r0, [fp, #-8]
   13ebc:	ldr	r0, [r0, #56]	; 0x38
   13ec0:	bl	53ec <SSL_get_peer_certificate@plt>
   13ec4:	str	r0, [sp, #12]
   13ec8:	ldr	r0, [sp, #12]
   13ecc:	movw	r1, #0
   13ed0:	cmp	r0, r1
   13ed4:	bne	13ee4 <rb_get_ssl_certfp+0x74>
   13ed8:	movw	r0, #0
   13edc:	str	r0, [fp, #-4]
   13ee0:	b	13f54 <rb_get_ssl_certfp+0xe4>
   13ee4:	mov	r0, #0
   13ee8:	str	r0, [sp, #8]
   13eec:	ldr	r0, [fp, #-8]
   13ef0:	ldr	r0, [r0, #56]	; 0x38
   13ef4:	bl	5410 <SSL_get_verify_result@plt>
   13ef8:	mov	r1, r0
   13efc:	cmp	r0, #0
   13f00:	str	r1, [sp, #4]
   13f04:	beq	13f30 <rb_get_ssl_certfp+0xc0>
   13f08:	b	13f0c <rb_get_ssl_certfp+0x9c>
   13f0c:	ldr	r0, [sp, #4]
   13f10:	sub	r1, r0, #18
   13f14:	cmp	r1, #4
   13f18:	bcc	13f30 <rb_get_ssl_certfp+0xc0>
   13f1c:	b	13f20 <rb_get_ssl_certfp+0xb0>
   13f20:	ldr	r0, [sp, #4]
   13f24:	cmp	r0, #27
   13f28:	bne	13f44 <rb_get_ssl_certfp+0xd4>
   13f2c:	b	13f30 <rb_get_ssl_certfp+0xc0>
   13f30:	ldr	r0, [sp, #12]
   13f34:	ldr	r1, [fp, #-12]
   13f38:	ldr	r2, [sp, #16]
   13f3c:	bl	13f60 <make_certfp>
   13f40:	str	r0, [sp, #8]
   13f44:	ldr	r0, [sp, #12]
   13f48:	bl	5638 <X509_free@plt>
   13f4c:	ldr	r0, [sp, #8]
   13f50:	str	r0, [fp, #-4]
   13f54:	ldr	r0, [fp, #-4]
   13f58:	mov	sp, fp
   13f5c:	pop	{fp, pc}

00013f60 <make_certfp>:
   13f60:	push	{fp, lr}
   13f64:	mov	fp, sp
   13f68:	sub	sp, sp, #48	; 0x30
   13f6c:	str	r0, [fp, #-8]
   13f70:	str	r1, [fp, #-12]
   13f74:	str	r2, [fp, #-16]
   13f78:	mov	r0, #0
   13f7c:	str	r0, [fp, #-20]	; 0xffffffec
   13f80:	str	r0, [sp, #24]
   13f84:	str	r0, [sp, #20]
   13f88:	str	r0, [sp, #16]
   13f8c:	ldr	r0, [fp, #-16]
   13f90:	cmp	r0, #0
   13f94:	str	r0, [sp, #12]
   13f98:	beq	13fe8 <make_certfp+0x88>
   13f9c:	b	13fa0 <make_certfp+0x40>
   13fa0:	ldr	r0, [sp, #12]
   13fa4:	cmp	r0, #1
   13fa8:	beq	14010 <make_certfp+0xb0>
   13fac:	b	13fb0 <make_certfp+0x50>
   13fb0:	ldr	r0, [sp, #12]
   13fb4:	cmp	r0, #2
   13fb8:	beq	14038 <make_certfp+0xd8>
   13fbc:	b	13fc0 <make_certfp+0x60>
   13fc0:	movw	r0, #4097	; 0x1001
   13fc4:	ldr	r1, [sp, #12]
   13fc8:	cmp	r1, r0
   13fcc:	beq	14060 <make_certfp+0x100>
   13fd0:	b	13fd4 <make_certfp+0x74>
   13fd4:	movw	r0, #4098	; 0x1002
   13fd8:	ldr	r1, [sp, #12]
   13fdc:	cmp	r1, r0
   13fe0:	beq	1408c <make_certfp+0x12c>
   13fe4:	b	140b8 <make_certfp+0x158>
   13fe8:	movw	r0, #20
   13fec:	str	r0, [fp, #-20]	; 0xffffffec
   13ff0:	bl	52b4 <EVP_sha1@plt>
   13ff4:	ldr	r1, [pc, #328]	; 14144 <make_certfp+0x1e4>
   13ff8:	ldr	r1, [pc, r1]
   13ffc:	str	r0, [sp, #24]
   14000:	str	r1, [sp, #20]
   14004:	ldr	r0, [fp, #-8]
   14008:	str	r0, [sp, #16]
   1400c:	b	140c4 <make_certfp+0x164>
   14010:	movw	r0, #32
   14014:	str	r0, [fp, #-20]	; 0xffffffec
   14018:	bl	55a8 <EVP_sha256@plt>
   1401c:	ldr	r1, [pc, #284]	; 14140 <make_certfp+0x1e0>
   14020:	ldr	r1, [pc, r1]
   14024:	str	r0, [sp, #24]
   14028:	str	r1, [sp, #20]
   1402c:	ldr	r0, [fp, #-8]
   14030:	str	r0, [sp, #16]
   14034:	b	140c4 <make_certfp+0x164>
   14038:	movw	r0, #64	; 0x40
   1403c:	str	r0, [fp, #-20]	; 0xffffffec
   14040:	bl	5578 <EVP_sha512@plt>
   14044:	ldr	r1, [pc, #240]	; 1413c <make_certfp+0x1dc>
   14048:	ldr	r1, [pc, r1]
   1404c:	str	r0, [sp, #24]
   14050:	str	r1, [sp, #20]
   14054:	ldr	r0, [fp, #-8]
   14058:	str	r0, [sp, #16]
   1405c:	b	140c4 <make_certfp+0x164>
   14060:	movw	r0, #32
   14064:	str	r0, [fp, #-20]	; 0xffffffec
   14068:	bl	55a8 <EVP_sha256@plt>
   1406c:	ldr	r1, [pc, #196]	; 14138 <make_certfp+0x1d8>
   14070:	ldr	r1, [pc, r1]
   14074:	str	r0, [sp, #24]
   14078:	str	r1, [sp, #20]
   1407c:	ldr	r0, [fp, #-8]
   14080:	bl	4f00 <X509_get_X509_PUBKEY@plt>
   14084:	str	r0, [sp, #16]
   14088:	b	140c4 <make_certfp+0x164>
   1408c:	movw	r0, #64	; 0x40
   14090:	str	r0, [fp, #-20]	; 0xffffffec
   14094:	bl	5578 <EVP_sha512@plt>
   14098:	ldr	r1, [pc, #148]	; 14134 <make_certfp+0x1d4>
   1409c:	ldr	r1, [pc, r1]
   140a0:	str	r0, [sp, #24]
   140a4:	str	r1, [sp, #20]
   140a8:	ldr	r0, [fp, #-8]
   140ac:	bl	4f00 <X509_get_X509_PUBKEY@plt>
   140b0:	str	r0, [sp, #16]
   140b4:	b	140c4 <make_certfp+0x164>
   140b8:	movw	r0, #0
   140bc:	str	r0, [fp, #-4]
   140c0:	b	14128 <make_certfp+0x1c8>
   140c4:	ldr	r0, [sp, #20]
   140c8:	ldr	r1, [sp, #24]
   140cc:	ldr	r2, [sp, #16]
   140d0:	ldr	r3, [fp, #-12]
   140d4:	sub	ip, fp, #20
   140d8:	str	ip, [sp]
   140dc:	bl	53d4 <ASN1_item_digest@plt>
   140e0:	cmp	r0, #1
   140e4:	beq	14120 <make_certfp+0x1c0>
   140e8:	bl	13778 <rb_ssl_last_err>
   140ec:	bl	13c84 <rb_ssl_strerror>
   140f0:	ldr	r1, [pc, #80]	; 14148 <make_certfp+0x1e8>
   140f4:	add	r1, pc, r1
   140f8:	ldr	r2, [pc, #76]	; 1414c <make_certfp+0x1ec>
   140fc:	add	r2, pc, r2
   14100:	str	r0, [sp, #8]
   14104:	mov	r0, r1
   14108:	mov	r1, r2
   1410c:	ldr	r2, [sp, #8]
   14110:	bl	52e4 <rb_lib_log@plt>
   14114:	movw	r0, #0
   14118:	str	r0, [fp, #-4]
   1411c:	b	14128 <make_certfp+0x1c8>
   14120:	ldr	r0, [fp, #-20]	; 0xffffffec
   14124:	str	r0, [fp, #-4]
   14128:	ldr	r0, [fp, #-4]
   1412c:	mov	sp, fp
   14130:	pop	{fp, pc}
   14134:	.word	0x00020378
   14138:	.word	0x000203a4
   1413c:	.word	0x000203c0
   14140:	.word	0x000203e8
   14144:	.word	0x00020410
   14148:	.word	0x0000f0c8
   1414c:	.word	0x0000f0d9

00014150 <rb_get_ssl_certfp_file>:
   14150:	push	{fp, lr}
   14154:	mov	fp, sp
   14158:	sub	sp, sp, #32
   1415c:	ldr	r3, [pc, #176]	; 14214 <rb_get_ssl_certfp_file+0xc4>
   14160:	add	r3, pc, r3
   14164:	str	r0, [fp, #-8]
   14168:	str	r1, [fp, #-12]
   1416c:	str	r2, [sp, #16]
   14170:	ldr	r0, [fp, #-8]
   14174:	mov	r1, r3
   14178:	bl	4fd8 <fopen@plt>
   1417c:	str	r0, [sp, #12]
   14180:	ldr	r0, [sp, #12]
   14184:	movw	r1, #0
   14188:	cmp	r0, r1
   1418c:	bne	1419c <rb_get_ssl_certfp_file+0x4c>
   14190:	mvn	r0, #0
   14194:	str	r0, [fp, #-4]
   14198:	b	14208 <rb_get_ssl_certfp_file+0xb8>
   1419c:	ldr	r0, [sp, #12]
   141a0:	movw	r1, #0
   141a4:	str	r1, [sp]
   141a8:	ldr	r2, [sp]
   141ac:	ldr	r3, [sp]
   141b0:	bl	51e8 <PEM_read_X509@plt>
   141b4:	str	r0, [sp, #8]
   141b8:	ldr	r0, [sp, #8]
   141bc:	movw	r1, #0
   141c0:	cmp	r0, r1
   141c4:	bne	141dc <rb_get_ssl_certfp_file+0x8c>
   141c8:	ldr	r0, [sp, #12]
   141cc:	bl	4f48 <fclose@plt>
   141d0:	movw	r1, #0
   141d4:	str	r1, [fp, #-4]
   141d8:	b	14208 <rb_get_ssl_certfp_file+0xb8>
   141dc:	ldr	r0, [sp, #8]
   141e0:	ldr	r1, [fp, #-12]
   141e4:	ldr	r2, [sp, #16]
   141e8:	bl	13f60 <make_certfp>
   141ec:	str	r0, [sp, #4]
   141f0:	ldr	r0, [sp, #8]
   141f4:	bl	5638 <X509_free@plt>
   141f8:	ldr	r0, [sp, #12]
   141fc:	bl	4f48 <fclose@plt>
   14200:	ldr	r1, [sp, #4]
   14204:	str	r1, [fp, #-4]
   14208:	ldr	r0, [fp, #-4]
   1420c:	mov	sp, fp
   14210:	pop	{fp, pc}
   14214:	.word	0x0000f3be

00014218 <rb_get_ssl_info>:
   14218:	push	{r4, r5, r6, sl, fp, lr}
   1421c:	add	fp, sp, #16
   14220:	sub	sp, sp, #48	; 0x30
   14224:	str	r0, [fp, #-20]	; 0xffffffec
   14228:	str	r1, [fp, #-24]	; 0xffffffe8
   1422c:	bl	50a4 <OpenSSL_version_num@plt>
   14230:	ldr	r1, [pc, #176]	; 142e8 <rb_get_ssl_info+0xd0>
   14234:	cmp	r0, r1
   14238:	bne	14274 <rb_get_ssl_info+0x5c>
   1423c:	ldr	r0, [pc, #176]	; 142f4 <rb_get_ssl_info+0xdc>
   14240:	add	r2, pc, r0
   14244:	ldr	r3, [pc, #156]	; 142e8 <rb_get_ssl_info+0xd0>
   14248:	ldr	r0, [pc, #168]	; 142f8 <rb_get_ssl_info+0xe0>
   1424c:	add	r0, pc, r0
   14250:	ldr	r1, [fp, #-20]	; 0xffffffec
   14254:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14258:	str	r0, [fp, #-28]	; 0xffffffe4
   1425c:	mov	r0, r1
   14260:	mov	r1, ip
   14264:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14268:	str	ip, [sp]
   1426c:	bl	5584 <snprintf@plt>
   14270:	b	142e0 <rb_get_ssl_info+0xc8>
   14274:	ldr	r0, [fp, #-20]	; 0xffffffec
   14278:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1427c:	str	r0, [sp, #32]
   14280:	str	r1, [sp, #28]
   14284:	bl	50a4 <OpenSSL_version_num@plt>
   14288:	movw	r1, #0
   1428c:	str	r0, [sp, #24]
   14290:	mov	r0, r1
   14294:	bl	5668 <OpenSSL_version@plt>
   14298:	ldr	r1, [pc, #76]	; 142ec <rb_get_ssl_info+0xd4>
   1429c:	add	r2, pc, r1
   142a0:	ldr	r3, [pc, #64]	; 142e8 <rb_get_ssl_info+0xd0>
   142a4:	ldr	r1, [pc, #68]	; 142f0 <rb_get_ssl_info+0xd8>
   142a8:	add	r1, pc, r1
   142ac:	ldr	ip, [sp, #32]
   142b0:	str	r0, [sp, #20]
   142b4:	mov	r0, ip
   142b8:	ldr	lr, [sp, #28]
   142bc:	str	r1, [sp, #16]
   142c0:	mov	r1, lr
   142c4:	ldr	r4, [sp, #16]
   142c8:	str	r4, [sp]
   142cc:	ldr	r5, [sp, #24]
   142d0:	str	r5, [sp, #4]
   142d4:	ldr	r6, [sp, #20]
   142d8:	str	r6, [sp, #8]
   142dc:	bl	5584 <snprintf@plt>
   142e0:	sub	sp, fp, #16
   142e4:	pop	{r4, r5, r6, sl, fp, pc}
   142e8:	.word	0x1010104f
   142ec:	.word	0x0000eee6
   142f0:	.word	0x0000eebe
   142f4:	.word	0x0000ef02
   142f8:	.word	0x0000ef1a

000142fc <rb_ssl_get_cipher>:
   142fc:	push	{fp, lr}
   14300:	mov	fp, sp
   14304:	sub	sp, sp, #24
   14308:	str	r0, [fp, #-8]
   1430c:	ldr	r0, [fp, #-8]
   14310:	movw	r1, #0
   14314:	cmp	r0, r1
   14318:	beq	14330 <rb_ssl_get_cipher+0x34>
   1431c:	ldr	r0, [fp, #-8]
   14320:	ldr	r0, [r0, #56]	; 0x38
   14324:	movw	r1, #0
   14328:	cmp	r0, r1
   1432c:	bne	1433c <rb_ssl_get_cipher+0x40>
   14330:	movw	r0, #0
   14334:	str	r0, [fp, #-4]
   14338:	b	1439c <rb_ssl_get_cipher+0xa0>
   1433c:	ldr	r0, [fp, #-8]
   14340:	ldr	r0, [r0, #56]	; 0x38
   14344:	bl	568c <SSL_get_version@plt>
   14348:	str	r0, [sp, #12]
   1434c:	ldr	r0, [fp, #-8]
   14350:	ldr	r0, [r0, #56]	; 0x38
   14354:	bl	4ee8 <SSL_get_current_cipher@plt>
   14358:	bl	508c <SSL_CIPHER_get_name@plt>
   1435c:	ldr	r1, [pc, #72]	; 143ac <rb_ssl_get_cipher+0xb0>
   14360:	add	r1, pc, r1
   14364:	ldr	r2, [pc, #68]	; 143b0 <rb_ssl_get_cipher+0xb4>
   14368:	add	r2, pc, r2
   1436c:	str	r0, [sp, #8]
   14370:	ldr	r3, [sp, #12]
   14374:	ldr	r0, [sp, #8]
   14378:	str	r0, [sp, #4]
   1437c:	mov	r0, r1
   14380:	movw	r1, #512	; 0x200
   14384:	ldr	ip, [sp, #4]
   14388:	str	ip, [sp]
   1438c:	bl	5584 <snprintf@plt>
   14390:	ldr	r1, [pc, #16]	; 143a8 <rb_ssl_get_cipher+0xac>
   14394:	add	r1, pc, r1
   14398:	str	r1, [fp, #-4]
   1439c:	ldr	r0, [fp, #-4]
   143a0:	mov	sp, fp
   143a4:	pop	{fp, pc}
   143a8:	.word	0x00032b60
   143ac:	.word	0x00032b94
   143b0:	.word	0x0000ee4d

000143b4 <rb_ssl_read>:
   143b4:	push	{fp, lr}
   143b8:	mov	fp, sp
   143bc:	sub	sp, sp, #24
   143c0:	str	r0, [fp, #-4]
   143c4:	str	r1, [fp, #-8]
   143c8:	str	r2, [sp, #12]
   143cc:	ldr	r1, [fp, #-4]
   143d0:	ldr	r2, [fp, #-8]
   143d4:	ldr	r0, [sp, #12]
   143d8:	movw	r3, #0
   143dc:	str	r0, [sp, #8]
   143e0:	mov	r0, r3
   143e4:	ldr	ip, [sp, #8]
   143e8:	str	ip, [sp]
   143ec:	bl	143f8 <rb_ssl_read_or_write>
   143f0:	mov	sp, fp
   143f4:	pop	{fp, pc}

000143f8 <rb_ssl_read_or_write>:
   143f8:	push	{fp, lr}
   143fc:	mov	fp, sp
   14400:	sub	sp, sp, #40	; 0x28
   14404:	ldr	ip, [fp, #8]
   14408:	str	r0, [fp, #-8]
   1440c:	str	r1, [fp, #-12]
   14410:	str	r2, [fp, #-16]
   14414:	str	r3, [sp, #20]
   14418:	str	ip, [sp, #8]
   1441c:	bl	13778 <rb_ssl_last_err>
   14420:	ldr	r1, [fp, #-8]
   14424:	cmp	r1, #0
   14428:	bne	14448 <rb_ssl_read_or_write+0x50>
   1442c:	ldr	r0, [fp, #-12]
   14430:	ldr	r0, [r0, #56]	; 0x38
   14434:	ldr	r1, [fp, #-16]
   14438:	ldr	r2, [fp, #8]
   1443c:	bl	514c <SSL_read@plt>
   14440:	str	r0, [sp, #16]
   14444:	b	14460 <rb_ssl_read_or_write+0x68>
   14448:	ldr	r0, [fp, #-12]
   1444c:	ldr	r0, [r0, #56]	; 0x38
   14450:	ldr	r1, [sp, #20]
   14454:	ldr	r2, [fp, #8]
   14458:	bl	4fc0 <SSL_write@plt>
   1445c:	str	r0, [sp, #16]
   14460:	ldr	r0, [sp, #16]
   14464:	cmp	r0, #0
   14468:	bge	14560 <rb_ssl_read_or_write+0x168>
   1446c:	ldr	r0, [fp, #-12]
   14470:	ldr	r0, [r0, #56]	; 0x38
   14474:	ldr	r1, [sp, #16]
   14478:	bl	5680 <SSL_get_error@plt>
   1447c:	sub	r0, r0, #2
   14480:	cmp	r0, #4
   14484:	str	r0, [sp, #4]
   14488:	bhi	1451c <rb_ssl_read_or_write+0x124>
   1448c:	add	r0, pc, #8
   14490:	ldr	r1, [sp, #4]
   14494:	ldr	r2, [r0, r1, lsl #2]
   14498:	add	pc, r0, r2
   1449c:	.word	0x00000014
   144a0:	.word	0x0000002c
   144a4:	.word	0x00000080
   144a8:	.word	0x00000050
   144ac:	.word	0x00000044
   144b0:	bl	56c8 <__errno_location@plt>
   144b4:	movw	r1, #11
   144b8:	str	r1, [r0]
   144bc:	mvn	r0, #2
   144c0:	str	r0, [fp, #-4]
   144c4:	b	14568 <rb_ssl_read_or_write+0x170>
   144c8:	bl	56c8 <__errno_location@plt>
   144cc:	movw	r1, #11
   144d0:	str	r1, [r0]
   144d4:	mvn	r0, #3
   144d8:	str	r0, [fp, #-4]
   144dc:	b	14568 <rb_ssl_read_or_write+0x170>
   144e0:	movw	r0, #0
   144e4:	str	r0, [fp, #-4]
   144e8:	b	14568 <rb_ssl_read_or_write+0x170>
   144ec:	bl	13778 <rb_ssl_last_err>
   144f0:	str	r0, [sp, #12]
   144f4:	ldr	r0, [sp, #12]
   144f8:	cmp	r0, #0
   144fc:	bne	14518 <rb_ssl_read_or_write+0x120>
   14500:	ldr	r0, [fp, #-12]
   14504:	movw	r1, #0
   14508:	str	r1, [r0, #64]	; 0x40
   1450c:	mvn	r0, #0
   14510:	str	r0, [fp, #-4]
   14514:	b	14568 <rb_ssl_read_or_write+0x170>
   14518:	b	14524 <rb_ssl_read_or_write+0x12c>
   1451c:	bl	13778 <rb_ssl_last_err>
   14520:	str	r0, [sp, #12]
   14524:	ldr	r0, [sp, #12]
   14528:	ldr	r1, [fp, #-12]
   1452c:	str	r0, [r1, #64]	; 0x40
   14530:	ldr	r0, [sp, #12]
   14534:	cmp	r0, #0
   14538:	bls	14554 <rb_ssl_read_or_write+0x15c>
   1453c:	bl	56c8 <__errno_location@plt>
   14540:	movw	r1, #5
   14544:	str	r1, [r0]
   14548:	mvn	r0, #1
   1454c:	str	r0, [fp, #-4]
   14550:	b	14568 <rb_ssl_read_or_write+0x170>
   14554:	mvn	r0, #0
   14558:	str	r0, [fp, #-4]
   1455c:	b	14568 <rb_ssl_read_or_write+0x170>
   14560:	ldr	r0, [sp, #16]
   14564:	str	r0, [fp, #-4]
   14568:	ldr	r0, [fp, #-4]
   1456c:	mov	sp, fp
   14570:	pop	{fp, pc}

00014574 <rb_ssl_write>:
   14574:	push	{fp, lr}
   14578:	mov	fp, sp
   1457c:	sub	sp, sp, #24
   14580:	str	r0, [fp, #-4]
   14584:	str	r1, [fp, #-8]
   14588:	str	r2, [sp, #12]
   1458c:	ldr	r1, [fp, #-4]
   14590:	ldr	r3, [fp, #-8]
   14594:	ldr	r0, [sp, #12]
   14598:	movw	r2, #1
   1459c:	str	r0, [sp, #8]
   145a0:	mov	r0, r2
   145a4:	movw	r2, #0
   145a8:	ldr	ip, [sp, #8]
   145ac:	str	ip, [sp]
   145b0:	bl	143f8 <rb_ssl_read_or_write>
   145b4:	mov	sp, fp
   145b8:	pop	{fp, pc}

000145bc <rb_supports_ssl>:
   145bc:	movw	r0, #1
   145c0:	bx	lr

000145c4 <rb_ssl_handshake_count>:
   145c4:	sub	sp, sp, #4
   145c8:	str	r0, [sp]
   145cc:	ldr	r0, [sp]
   145d0:	ldr	r0, [r0, #60]	; 0x3c
   145d4:	add	sp, sp, #4
   145d8:	bx	lr

000145dc <rb_ssl_clear_handshake_count>:
   145dc:	sub	sp, sp, #4
   145e0:	str	r0, [sp]
   145e4:	ldr	r0, [sp]
   145e8:	movw	r1, #0
   145ec:	str	r1, [r0, #60]	; 0x3c
   145f0:	add	sp, sp, #4
   145f4:	bx	lr

000145f8 <rb_ssl_start_accepted>:
   145f8:	push	{fp, lr}
   145fc:	mov	fp, sp
   14600:	sub	sp, sp, #24
   14604:	str	r0, [fp, #-4]
   14608:	str	r1, [fp, #-8]
   1460c:	str	r2, [sp, #12]
   14610:	str	r3, [sp, #8]
   14614:	ldr	r0, [fp, #-4]
   14618:	ldrb	r1, [r0, #17]
   1461c:	orr	r1, r1, #32
   14620:	strb	r1, [r0, #17]
   14624:	movw	r0, #144	; 0x90
   14628:	bl	146cc <rb_malloc>
   1462c:	ldr	r1, [pc, #148]	; 146c8 <rb_ssl_start_accepted+0xd0>
   14630:	add	r2, pc, r1
   14634:	ldr	r1, [fp, #-4]
   14638:	str	r0, [r1, #52]	; 0x34
   1463c:	ldr	r0, [fp, #-8]
   14640:	ldr	r1, [fp, #-4]
   14644:	ldr	r1, [r1, #52]	; 0x34
   14648:	str	r0, [r1, #132]	; 0x84
   1464c:	ldr	r0, [sp, #12]
   14650:	ldr	r1, [fp, #-4]
   14654:	ldr	r1, [r1, #52]	; 0x34
   14658:	str	r0, [r1, #140]	; 0x8c
   1465c:	ldr	r0, [fp, #-4]
   14660:	ldr	r0, [r0, #52]	; 0x34
   14664:	movw	r1, #0
   14668:	str	r1, [r0, #128]	; 0x80
   1466c:	ldr	r0, [fp, #-4]
   14670:	ldr	r0, [r0, #52]	; 0x34
   14674:	movw	r3, #0
   14678:	and	r3, r3, #255	; 0xff
   1467c:	str	r1, [sp, #4]
   14680:	mov	r1, r3
   14684:	movw	r3, #128	; 0x80
   14688:	str	r2, [sp]
   1468c:	mov	r2, r3
   14690:	bl	4ff0 <memset@plt>
   14694:	ldr	r0, [fp, #-4]
   14698:	ldr	r1, [sp, #8]
   1469c:	ldr	r2, [sp]
   146a0:	ldr	r3, [sp, #4]
   146a4:	bl	4da4 <rb_settimeout@plt>
   146a8:	ldr	r0, [fp, #-4]
   146ac:	movw	r1, #0
   146b0:	bl	14784 <rb_ssl_init_fd>
   146b4:	ldr	r0, [fp, #-4]
   146b8:	movw	r1, #0
   146bc:	bl	14888 <rb_ssl_accept_common>
   146c0:	mov	sp, fp
   146c4:	pop	{fp, pc}
   146c8:	.word	0x000000ec

000146cc <rb_malloc>:
   146cc:	push	{fp, lr}
   146d0:	mov	fp, sp
   146d4:	sub	sp, sp, #8
   146d8:	str	r0, [sp, #4]
   146dc:	ldr	r1, [sp, #4]
   146e0:	movw	r0, #1
   146e4:	bl	4fb4 <calloc@plt>
   146e8:	str	r0, [sp]
   146ec:	ldr	r0, [sp]
   146f0:	movw	r1, #0
   146f4:	cmp	r0, r1
   146f8:	movw	r0, #0
   146fc:	moveq	r0, #1
   14700:	mvn	r1, #0
   14704:	eor	r0, r0, r1
   14708:	eor	r0, r0, r1
   1470c:	tst	r0, #1
   14710:	beq	14718 <rb_malloc+0x4c>
   14714:	bl	5350 <rb_outofmemory@plt>
   14718:	ldr	r0, [sp]
   1471c:	mov	sp, fp
   14720:	pop	{fp, pc}

00014724 <rb_ssl_timeout_cb>:
   14724:	push	{fp, lr}
   14728:	mov	fp, sp
   1472c:	sub	sp, sp, #24
   14730:	str	r0, [fp, #-4]
   14734:	str	r1, [fp, #-8]
   14738:	ldr	r0, [fp, #-4]
   1473c:	ldr	r0, [r0, #52]	; 0x34
   14740:	ldr	r0, [r0, #132]	; 0x84
   14744:	ldr	r1, [fp, #-4]
   14748:	ldr	r2, [fp, #-4]
   1474c:	ldr	r2, [r2, #52]	; 0x34
   14750:	ldr	r2, [r2, #140]	; 0x8c
   14754:	str	r0, [sp, #12]
   14758:	mov	r0, r1
   1475c:	movw	r1, #3
   14760:	movw	r3, #0
   14764:	str	r2, [sp, #8]
   14768:	mov	r2, r3
   1476c:	ldr	ip, [sp, #8]
   14770:	str	ip, [sp]
   14774:	ldr	lr, [sp, #12]
   14778:	blx	lr
   1477c:	mov	sp, fp
   14780:	pop	{fp, pc}

00014784 <rb_ssl_init_fd>:
   14784:	push	{fp, lr}
   14788:	mov	fp, sp
   1478c:	sub	sp, sp, #32
   14790:	str	r0, [fp, #-4]
   14794:	str	r1, [fp, #-8]
   14798:	bl	13778 <rb_ssl_last_err>
   1479c:	ldr	r1, [pc, #216]	; 1487c <rb_ssl_init_fd+0xf8>
   147a0:	add	r1, pc, r1
   147a4:	ldr	r1, [r1]
   147a8:	str	r0, [fp, #-12]
   147ac:	mov	r0, r1
   147b0:	bl	5104 <SSL_new@plt>
   147b4:	ldr	r1, [fp, #-4]
   147b8:	str	r0, [r1, #56]	; 0x38
   147bc:	ldr	r0, [fp, #-4]
   147c0:	ldr	r0, [r0, #56]	; 0x38
   147c4:	movw	r1, #0
   147c8:	cmp	r0, r1
   147cc:	bne	14808 <rb_ssl_init_fd+0x84>
   147d0:	bl	13778 <rb_ssl_last_err>
   147d4:	bl	13c84 <rb_ssl_strerror>
   147d8:	ldr	r1, [pc, #160]	; 14880 <rb_ssl_init_fd+0xfc>
   147dc:	add	r1, pc, r1
   147e0:	ldr	r2, [pc, #156]	; 14884 <rb_ssl_init_fd+0x100>
   147e4:	add	r2, pc, r2
   147e8:	str	r0, [sp, #16]
   147ec:	mov	r0, r1
   147f0:	mov	r1, r2
   147f4:	ldr	r2, [sp, #16]
   147f8:	bl	52e4 <rb_lib_log@plt>
   147fc:	ldr	r0, [fp, #-4]
   14800:	bl	5230 <rb_close@plt>
   14804:	b	14874 <rb_ssl_init_fd+0xf0>
   14808:	ldr	r0, [fp, #-8]
   1480c:	cmp	r0, #0
   14810:	str	r0, [sp, #12]
   14814:	beq	1482c <rb_ssl_init_fd+0xa8>
   14818:	b	1481c <rb_ssl_init_fd+0x98>
   1481c:	ldr	r0, [sp, #12]
   14820:	cmp	r0, #1
   14824:	beq	1483c <rb_ssl_init_fd+0xb8>
   14828:	b	14848 <rb_ssl_init_fd+0xc4>
   1482c:	ldr	r0, [fp, #-4]
   14830:	ldr	r0, [r0, #56]	; 0x38
   14834:	bl	5398 <SSL_set_accept_state@plt>
   14838:	b	14848 <rb_ssl_init_fd+0xc4>
   1483c:	ldr	r0, [fp, #-4]
   14840:	ldr	r0, [r0, #56]	; 0x38
   14844:	bl	553c <SSL_set_connect_state@plt>
   14848:	ldr	r0, [fp, #-4]
   1484c:	ldr	r0, [r0, #56]	; 0x38
   14850:	ldr	r1, [fp, #-4]
   14854:	str	r0, [sp, #8]
   14858:	mov	r0, r1
   1485c:	bl	4ea0 <rb_get_fd@plt>
   14860:	ldr	r1, [sp, #8]
   14864:	str	r0, [sp, #4]
   14868:	mov	r0, r1
   1486c:	ldr	r1, [sp, #4]
   14870:	bl	502c <SSL_set_fd@plt>
   14874:	mov	sp, fp
   14878:	pop	{fp, pc}
   1487c:	.word	0x00032750
   14880:	.word	0x0000ea05
   14884:	.word	0x0000ea0d

00014888 <rb_ssl_accept_common>:
   14888:	push	{fp, lr}
   1488c:	mov	fp, sp
   14890:	sub	sp, sp, #48	; 0x30
   14894:	str	r0, [fp, #-4]
   14898:	str	r1, [fp, #-8]
   1489c:	bl	13778 <rb_ssl_last_err>
   148a0:	ldr	r1, [fp, #-4]
   148a4:	ldr	r1, [r1, #56]	; 0x38
   148a8:	str	r0, [sp, #24]
   148ac:	mov	r0, r1
   148b0:	bl	5194 <SSL_do_handshake@plt>
   148b4:	str	r0, [fp, #-12]
   148b8:	ldr	r0, [fp, #-4]
   148bc:	ldr	r0, [r0, #56]	; 0x38
   148c0:	ldr	r1, [fp, #-12]
   148c4:	bl	5680 <SSL_get_error@plt>
   148c8:	str	r0, [fp, #-16]
   148cc:	ldr	r0, [fp, #-12]
   148d0:	cmp	r0, #1
   148d4:	bne	14978 <rb_ssl_accept_common+0xf0>
   148d8:	ldr	r0, [fp, #-4]
   148dc:	ldr	r1, [r0, #60]	; 0x3c
   148e0:	add	r1, r1, #1
   148e4:	str	r1, [r0, #60]	; 0x3c
   148e8:	ldr	r0, [fp, #-4]
   148ec:	movw	r1, #0
   148f0:	str	r1, [sp, #20]
   148f4:	ldr	r2, [sp, #20]
   148f8:	ldr	r3, [sp, #20]
   148fc:	bl	4da4 <rb_settimeout@plt>
   14900:	ldr	r0, [fp, #-4]
   14904:	movw	r1, #3
   14908:	movw	r2, #0
   1490c:	str	r2, [sp, #16]
   14910:	ldr	r3, [sp, #16]
   14914:	bl	4e64 <rb_setselect@plt>
   14918:	ldr	r0, [fp, #-4]
   1491c:	ldr	r0, [r0, #52]	; 0x34
   14920:	str	r0, [fp, #-20]	; 0xffffffec
   14924:	ldr	r0, [fp, #-4]
   14928:	movw	r1, #0
   1492c:	str	r1, [r0, #52]	; 0x34
   14930:	ldr	r0, [fp, #-20]	; 0xffffffec
   14934:	ldr	r0, [r0, #132]	; 0x84
   14938:	ldr	r2, [fp, #-4]
   1493c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14940:	ldr	ip, [fp, #-20]	; 0xffffffec
   14944:	ldr	ip, [ip, #128]	; 0x80
   14948:	ldr	lr, [fp, #-20]	; 0xffffffec
   1494c:	ldr	lr, [lr, #140]	; 0x8c
   14950:	str	r0, [sp, #12]
   14954:	mov	r0, r2
   14958:	mov	r2, r3
   1495c:	mov	r3, ip
   14960:	str	lr, [sp]
   14964:	ldr	ip, [sp, #12]
   14968:	blx	ip
   1496c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14970:	bl	14f20 <rb_free>
   14974:	b	14a3c <rb_ssl_accept_common+0x1b4>
   14978:	ldr	r0, [fp, #-12]
   1497c:	cmn	r0, #1
   14980:	bne	149ac <rb_ssl_accept_common+0x124>
   14984:	ldr	r0, [fp, #-16]
   14988:	cmp	r0, #2
   1498c:	bne	149ac <rb_ssl_accept_common+0x124>
   14990:	ldr	r0, [pc, #176]	; 14a48 <rb_ssl_accept_common+0x1c0>
   14994:	add	r2, pc, r0
   14998:	ldr	r0, [fp, #-4]
   1499c:	movw	r1, #1
   149a0:	movw	r3, #0
   149a4:	bl	4e64 <rb_setselect@plt>
   149a8:	b	14a3c <rb_ssl_accept_common+0x1b4>
   149ac:	ldr	r0, [fp, #-12]
   149b0:	cmn	r0, #1
   149b4:	bne	149e0 <rb_ssl_accept_common+0x158>
   149b8:	ldr	r0, [fp, #-16]
   149bc:	cmp	r0, #3
   149c0:	bne	149e0 <rb_ssl_accept_common+0x158>
   149c4:	ldr	r0, [pc, #120]	; 14a44 <rb_ssl_accept_common+0x1bc>
   149c8:	add	r2, pc, r0
   149cc:	ldr	r0, [fp, #-4]
   149d0:	movw	r1, #2
   149d4:	movw	r3, #0
   149d8:	bl	4e64 <rb_setselect@plt>
   149dc:	b	14a3c <rb_ssl_accept_common+0x1b4>
   149e0:	bl	56c8 <__errno_location@plt>
   149e4:	movw	r1, #5
   149e8:	str	r1, [r0]
   149ec:	ldr	r0, [fp, #-16]
   149f0:	ldr	r1, [fp, #-4]
   149f4:	str	r0, [r1, #64]	; 0x40
   149f8:	ldr	r0, [fp, #-4]
   149fc:	ldr	r0, [r0, #52]	; 0x34
   14a00:	ldr	r0, [r0, #132]	; 0x84
   14a04:	ldr	r1, [fp, #-4]
   14a08:	ldr	r2, [fp, #-4]
   14a0c:	ldr	r2, [r2, #52]	; 0x34
   14a10:	ldr	r2, [r2, #140]	; 0x8c
   14a14:	str	r0, [sp, #8]
   14a18:	mov	r0, r1
   14a1c:	movw	r1, #6
   14a20:	movw	r3, #0
   14a24:	str	r2, [sp, #4]
   14a28:	mov	r2, r3
   14a2c:	ldr	ip, [sp, #4]
   14a30:	str	ip, [sp]
   14a34:	ldr	lr, [sp, #8]
   14a38:	blx	lr
   14a3c:	mov	sp, fp
   14a40:	pop	{fp, pc}
   14a44:	.word	0xfffffeb8
   14a48:	.word	0xfffffeec

00014a4c <rb_ssl_accept_setup>:
   14a4c:	push	{fp, lr}
   14a50:	mov	fp, sp
   14a54:	sub	sp, sp, #24
   14a58:	str	r0, [fp, #-4]
   14a5c:	str	r1, [fp, #-8]
   14a60:	str	r2, [sp, #12]
   14a64:	str	r3, [sp, #8]
   14a68:	ldr	r0, [fp, #-8]
   14a6c:	ldrb	r1, [r0, #17]
   14a70:	orr	r1, r1, #32
   14a74:	strb	r1, [r0, #17]
   14a78:	movw	r0, #144	; 0x90
   14a7c:	bl	146cc <rb_malloc>
   14a80:	ldr	r1, [pc, #176]	; 14b38 <rb_ssl_accept_setup+0xec>
   14a84:	add	r2, pc, r1
   14a88:	ldr	r1, [fp, #-8]
   14a8c:	str	r0, [r1, #52]	; 0x34
   14a90:	ldr	r0, [fp, #-4]
   14a94:	ldr	r0, [r0, #52]	; 0x34
   14a98:	ldr	r0, [r0, #132]	; 0x84
   14a9c:	ldr	r1, [fp, #-8]
   14aa0:	ldr	r1, [r1, #52]	; 0x34
   14aa4:	str	r0, [r1, #132]	; 0x84
   14aa8:	ldr	r0, [fp, #-4]
   14aac:	ldr	r0, [r0, #52]	; 0x34
   14ab0:	ldr	r0, [r0, #140]	; 0x8c
   14ab4:	ldr	r1, [fp, #-8]
   14ab8:	ldr	r1, [r1, #52]	; 0x34
   14abc:	str	r0, [r1, #140]	; 0x8c
   14ac0:	ldr	r0, [sp, #8]
   14ac4:	ldr	r1, [fp, #-8]
   14ac8:	ldr	r1, [r1, #52]	; 0x34
   14acc:	str	r0, [r1, #128]	; 0x80
   14ad0:	ldr	r0, [fp, #-8]
   14ad4:	ldr	r0, [r0, #52]	; 0x34
   14ad8:	movw	r1, #0
   14adc:	and	r1, r1, #255	; 0xff
   14ae0:	movw	r3, #128	; 0x80
   14ae4:	str	r2, [sp, #4]
   14ae8:	mov	r2, r3
   14aec:	bl	4ff0 <memset@plt>
   14af0:	ldr	r0, [fp, #-8]
   14af4:	ldr	r0, [r0, #52]	; 0x34
   14af8:	ldr	r1, [sp, #12]
   14afc:	ldr	r2, [sp, #8]
   14b00:	bl	51dc <memcpy@plt>
   14b04:	ldr	r0, [fp, #-8]
   14b08:	movw	r1, #10
   14b0c:	ldr	r2, [sp, #4]
   14b10:	movw	r3, #0
   14b14:	bl	4da4 <rb_settimeout@plt>
   14b18:	ldr	r0, [fp, #-8]
   14b1c:	movw	r1, #0
   14b20:	bl	14784 <rb_ssl_init_fd>
   14b24:	ldr	r0, [fp, #-8]
   14b28:	movw	r1, #0
   14b2c:	bl	14888 <rb_ssl_accept_common>
   14b30:	mov	sp, fp
   14b34:	pop	{fp, pc}
   14b38:	.word	0xfffffc98

00014b3c <rb_ssl_listen>:
   14b3c:	push	{fp, lr}
   14b40:	mov	fp, sp
   14b44:	sub	sp, sp, #16
   14b48:	str	r0, [fp, #-4]
   14b4c:	str	r1, [sp, #8]
   14b50:	str	r2, [sp, #4]
   14b54:	ldr	r0, [fp, #-4]
   14b58:	ldr	r1, [sp, #8]
   14b5c:	ldr	r2, [sp, #4]
   14b60:	bl	55cc <rb_listen@plt>
   14b64:	str	r0, [sp]
   14b68:	ldr	r0, [fp, #-4]
   14b6c:	movw	r1, #52	; 0x34
   14b70:	strb	r1, [r0, #17]
   14b74:	ldr	r0, [sp]
   14b78:	mov	sp, fp
   14b7c:	pop	{fp, pc}

00014b80 <rb_connect_tcp_ssl>:
   14b80:	push	{fp, lr}
   14b84:	mov	fp, sp
   14b88:	sub	sp, sp, #32
   14b8c:	ldr	ip, [fp, #12]
   14b90:	ldr	lr, [fp, #8]
   14b94:	str	r0, [fp, #-4]
   14b98:	str	r1, [fp, #-8]
   14b9c:	str	r2, [fp, #-12]
   14ba0:	str	r3, [sp, #16]
   14ba4:	ldr	r0, [fp, #-4]
   14ba8:	movw	r1, #0
   14bac:	cmp	r0, r1
   14bb0:	bne	14bb8 <rb_connect_tcp_ssl+0x38>
   14bb4:	b	14c10 <rb_connect_tcp_ssl+0x90>
   14bb8:	movw	r0, #12
   14bbc:	bl	146cc <rb_malloc>
   14bc0:	ldr	r1, [pc, #80]	; 14c18 <rb_connect_tcp_ssl+0x98>
   14bc4:	add	r3, pc, r1
   14bc8:	str	r0, [sp, #12]
   14bcc:	ldr	r0, [fp, #8]
   14bd0:	ldr	r1, [sp, #12]
   14bd4:	str	r0, [r1, #4]
   14bd8:	ldr	r0, [sp, #16]
   14bdc:	ldr	r1, [sp, #12]
   14be0:	str	r0, [r1]
   14be4:	ldr	r0, [fp, #12]
   14be8:	ldr	r1, [sp, #12]
   14bec:	str	r0, [r1, #8]
   14bf0:	ldr	r0, [fp, #-4]
   14bf4:	ldr	r1, [fp, #-8]
   14bf8:	ldr	r2, [fp, #-12]
   14bfc:	ldr	ip, [sp, #12]
   14c00:	ldr	lr, [fp, #12]
   14c04:	str	ip, [sp]
   14c08:	str	lr, [sp, #4]
   14c0c:	bl	4de0 <rb_connect_tcp@plt>
   14c10:	mov	sp, fp
   14c14:	pop	{fp, pc}
   14c18:	.word	0x00000050

00014c1c <rb_ssl_tryconn>:
   14c1c:	push	{fp, lr}
   14c20:	mov	fp, sp
   14c24:	sub	sp, sp, #16
   14c28:	str	r0, [fp, #-4]
   14c2c:	str	r1, [sp, #8]
   14c30:	str	r2, [sp, #4]
   14c34:	ldr	r0, [sp, #4]
   14c38:	str	r0, [sp]
   14c3c:	ldr	r0, [sp, #8]
   14c40:	cmp	r0, #0
   14c44:	beq	14c5c <rb_ssl_tryconn+0x40>
   14c48:	ldr	r0, [fp, #-4]
   14c4c:	ldr	r1, [sp, #8]
   14c50:	ldr	r2, [sp]
   14c54:	bl	14f68 <rb_ssl_connect_realcb>
   14c58:	b	14ca0 <rb_ssl_tryconn+0x84>
   14c5c:	ldr	r0, [pc, #68]	; 14ca8 <rb_ssl_tryconn+0x8c>
   14c60:	add	r2, pc, r0
   14c64:	ldr	r0, [fp, #-4]
   14c68:	ldrb	r1, [r0, #17]
   14c6c:	orr	r1, r1, #32
   14c70:	strb	r1, [r0, #17]
   14c74:	ldr	r0, [fp, #-4]
   14c78:	ldr	r1, [sp]
   14c7c:	ldr	r1, [r1, #8]
   14c80:	ldr	r3, [sp]
   14c84:	bl	4da4 <rb_settimeout@plt>
   14c88:	ldr	r0, [fp, #-4]
   14c8c:	movw	r1, #1
   14c90:	bl	14784 <rb_ssl_init_fd>
   14c94:	ldr	r0, [fp, #-4]
   14c98:	ldr	r1, [sp]
   14c9c:	bl	14dc4 <rb_ssl_connect_common>
   14ca0:	mov	sp, fp
   14ca4:	pop	{fp, pc}
   14ca8:	.word	0x00000124

00014cac <rb_ssl_start_connected>:
   14cac:	push	{fp, lr}
   14cb0:	mov	fp, sp
   14cb4:	sub	sp, sp, #24
   14cb8:	str	r0, [fp, #-4]
   14cbc:	str	r1, [fp, #-8]
   14cc0:	str	r2, [sp, #12]
   14cc4:	str	r3, [sp, #8]
   14cc8:	ldr	r0, [fp, #-4]
   14ccc:	movw	r1, #0
   14cd0:	cmp	r0, r1
   14cd4:	bne	14cdc <rb_ssl_start_connected+0x30>
   14cd8:	b	14d80 <rb_ssl_start_connected+0xd4>
   14cdc:	movw	r0, #12
   14ce0:	bl	146cc <rb_malloc>
   14ce4:	str	r0, [sp, #4]
   14ce8:	ldr	r0, [sp, #12]
   14cec:	ldr	r1, [sp, #4]
   14cf0:	str	r0, [r1, #4]
   14cf4:	ldr	r0, [fp, #-8]
   14cf8:	ldr	r1, [sp, #4]
   14cfc:	str	r0, [r1]
   14d00:	ldr	r0, [sp, #8]
   14d04:	ldr	r1, [sp, #4]
   14d08:	str	r0, [r1, #8]
   14d0c:	movw	r0, #268	; 0x10c
   14d10:	bl	146cc <rb_malloc>
   14d14:	ldr	r1, [pc, #108]	; 14d88 <rb_ssl_start_connected+0xdc>
   14d18:	add	r2, pc, r1
   14d1c:	ldr	r1, [fp, #-4]
   14d20:	str	r0, [r1, #48]	; 0x30
   14d24:	ldr	r0, [fp, #-8]
   14d28:	ldr	r1, [fp, #-4]
   14d2c:	ldr	r1, [r1, #48]	; 0x30
   14d30:	str	r0, [r1, #260]	; 0x104
   14d34:	ldr	r0, [sp, #12]
   14d38:	ldr	r1, [fp, #-4]
   14d3c:	ldr	r1, [r1, #48]	; 0x30
   14d40:	str	r0, [r1, #264]	; 0x108
   14d44:	ldr	r0, [fp, #-4]
   14d48:	ldrb	r1, [r0, #17]
   14d4c:	orr	r1, r1, #32
   14d50:	strb	r1, [r0, #17]
   14d54:	ldr	r0, [fp, #-4]
   14d58:	ldr	r1, [sp, #4]
   14d5c:	ldr	r1, [r1, #8]
   14d60:	ldr	r3, [sp, #4]
   14d64:	bl	4da4 <rb_settimeout@plt>
   14d68:	ldr	r0, [fp, #-4]
   14d6c:	movw	r1, #1
   14d70:	bl	14784 <rb_ssl_init_fd>
   14d74:	ldr	r0, [fp, #-4]
   14d78:	ldr	r1, [sp, #4]
   14d7c:	bl	14dc4 <rb_ssl_connect_common>
   14d80:	mov	sp, fp
   14d84:	pop	{fp, pc}
   14d88:	.word	0x0000006c

00014d8c <rb_ssl_tryconn_timeout_cb>:
   14d8c:	push	{fp, lr}
   14d90:	mov	fp, sp
   14d94:	sub	sp, sp, #16
   14d98:	str	r0, [fp, #-4]
   14d9c:	str	r1, [sp, #8]
   14da0:	ldr	r0, [fp, #-4]
   14da4:	ldr	r1, [sp, #8]
   14da8:	movw	r2, #3
   14dac:	str	r1, [sp, #4]
   14db0:	mov	r1, r2
   14db4:	ldr	r2, [sp, #4]
   14db8:	bl	14f68 <rb_ssl_connect_realcb>
   14dbc:	mov	sp, fp
   14dc0:	pop	{fp, pc}

00014dc4 <rb_ssl_connect_common>:
   14dc4:	push	{fp, lr}
   14dc8:	mov	fp, sp
   14dcc:	sub	sp, sp, #40	; 0x28
   14dd0:	str	r0, [fp, #-4]
   14dd4:	str	r1, [fp, #-8]
   14dd8:	bl	13778 <rb_ssl_last_err>
   14ddc:	ldr	r1, [fp, #-4]
   14de0:	ldr	r1, [r1, #56]	; 0x38
   14de4:	str	r0, [sp, #20]
   14de8:	mov	r0, r1
   14dec:	bl	5194 <SSL_do_handshake@plt>
   14df0:	str	r0, [fp, #-12]
   14df4:	ldr	r0, [fp, #-4]
   14df8:	ldr	r0, [r0, #56]	; 0x38
   14dfc:	ldr	r1, [fp, #-12]
   14e00:	bl	5680 <SSL_get_error@plt>
   14e04:	str	r0, [fp, #-16]
   14e08:	ldr	r0, [fp, #-12]
   14e0c:	cmp	r0, #1
   14e10:	bne	14e74 <rb_ssl_connect_common+0xb0>
   14e14:	ldr	r0, [fp, #-4]
   14e18:	ldr	r1, [r0, #60]	; 0x3c
   14e1c:	add	r1, r1, #1
   14e20:	str	r1, [r0, #60]	; 0x3c
   14e24:	ldr	r0, [fp, #-4]
   14e28:	movw	r1, #0
   14e2c:	str	r1, [sp, #16]
   14e30:	ldr	r2, [sp, #16]
   14e34:	ldr	r3, [sp, #16]
   14e38:	bl	4da4 <rb_settimeout@plt>
   14e3c:	ldr	r0, [fp, #-4]
   14e40:	movw	r1, #3
   14e44:	movw	r2, #0
   14e48:	str	r2, [sp, #12]
   14e4c:	ldr	r3, [sp, #12]
   14e50:	bl	4e64 <rb_setselect@plt>
   14e54:	ldr	r0, [fp, #-4]
   14e58:	ldr	r1, [fp, #-8]
   14e5c:	movw	r2, #0
   14e60:	str	r1, [sp, #8]
   14e64:	mov	r1, r2
   14e68:	ldr	r2, [sp, #8]
   14e6c:	bl	14f68 <rb_ssl_connect_realcb>
   14e70:	b	14f10 <rb_ssl_connect_common+0x14c>
   14e74:	ldr	r0, [fp, #-12]
   14e78:	cmn	r0, #1
   14e7c:	bne	14ea8 <rb_ssl_connect_common+0xe4>
   14e80:	ldr	r0, [fp, #-16]
   14e84:	cmp	r0, #2
   14e88:	bne	14ea8 <rb_ssl_connect_common+0xe4>
   14e8c:	ldr	r0, [pc, #136]	; 14f1c <rb_ssl_connect_common+0x158>
   14e90:	add	r2, pc, r0
   14e94:	ldr	r0, [fp, #-4]
   14e98:	ldr	r3, [fp, #-8]
   14e9c:	movw	r1, #1
   14ea0:	bl	4e64 <rb_setselect@plt>
   14ea4:	b	14f10 <rb_ssl_connect_common+0x14c>
   14ea8:	ldr	r0, [fp, #-12]
   14eac:	cmn	r0, #1
   14eb0:	bne	14edc <rb_ssl_connect_common+0x118>
   14eb4:	ldr	r0, [fp, #-16]
   14eb8:	cmp	r0, #3
   14ebc:	bne	14edc <rb_ssl_connect_common+0x118>
   14ec0:	ldr	r0, [pc, #80]	; 14f18 <rb_ssl_connect_common+0x154>
   14ec4:	add	r2, pc, r0
   14ec8:	ldr	r0, [fp, #-4]
   14ecc:	ldr	r3, [fp, #-8]
   14ed0:	movw	r1, #2
   14ed4:	bl	4e64 <rb_setselect@plt>
   14ed8:	b	14f10 <rb_ssl_connect_common+0x14c>
   14edc:	bl	56c8 <__errno_location@plt>
   14ee0:	movw	r1, #5
   14ee4:	str	r1, [r0]
   14ee8:	ldr	r0, [fp, #-16]
   14eec:	ldr	r1, [fp, #-4]
   14ef0:	str	r0, [r1, #64]	; 0x40
   14ef4:	ldr	r0, [fp, #-4]
   14ef8:	ldr	r1, [fp, #-8]
   14efc:	movw	r2, #6
   14f00:	str	r1, [sp, #4]
   14f04:	mov	r1, r2
   14f08:	ldr	r2, [sp, #4]
   14f0c:	bl	14f68 <rb_ssl_connect_realcb>
   14f10:	mov	sp, fp
   14f14:	pop	{fp, pc}
   14f18:	.word	0xfffffef8
   14f1c:	.word	0xffffff2c

00014f20 <rb_free>:
   14f20:	push	{fp, lr}
   14f24:	mov	fp, sp
   14f28:	sub	sp, sp, #8
   14f2c:	str	r0, [sp, #4]
   14f30:	ldr	r0, [sp, #4]
   14f34:	movw	r1, #0
   14f38:	cmp	r0, r1
   14f3c:	movw	r0, #0
   14f40:	movne	r0, #1
   14f44:	mvn	r1, #0
   14f48:	eor	r0, r0, r1
   14f4c:	eor	r0, r0, r1
   14f50:	tst	r0, #1
   14f54:	beq	14f60 <rb_free+0x40>
   14f58:	ldr	r0, [sp, #4]
   14f5c:	bl	50c8 <free@plt>
   14f60:	mov	sp, fp
   14f64:	pop	{fp, pc}

00014f68 <rb_ssl_connect_realcb>:
   14f68:	push	{fp, lr}
   14f6c:	mov	fp, sp
   14f70:	sub	sp, sp, #16
   14f74:	str	r0, [fp, #-4]
   14f78:	str	r1, [sp, #8]
   14f7c:	str	r2, [sp, #4]
   14f80:	ldr	r0, [sp, #4]
   14f84:	ldr	r0, [r0]
   14f88:	ldr	r1, [fp, #-4]
   14f8c:	ldr	r1, [r1, #48]	; 0x30
   14f90:	str	r0, [r1, #260]	; 0x104
   14f94:	ldr	r0, [sp, #4]
   14f98:	ldr	r0, [r0, #4]
   14f9c:	ldr	r1, [fp, #-4]
   14fa0:	ldr	r1, [r1, #48]	; 0x30
   14fa4:	str	r0, [r1, #264]	; 0x108
   14fa8:	ldr	r0, [fp, #-4]
   14fac:	ldr	r1, [sp, #8]
   14fb0:	bl	f874 <rb_connect_callback>
   14fb4:	ldr	r0, [sp, #4]
   14fb8:	bl	14f20 <rb_free>
   14fbc:	mov	sp, fp
   14fc0:	pop	{fp, pc}

00014fc4 <rb_event_add>:
   14fc4:	push	{fp, lr}
   14fc8:	mov	fp, sp
   14fcc:	sub	sp, sp, #24
   14fd0:	str	r0, [fp, #-4]
   14fd4:	str	r1, [fp, #-8]
   14fd8:	str	r2, [sp, #12]
   14fdc:	str	r3, [sp, #8]
   14fe0:	ldr	r0, [sp, #8]
   14fe4:	cmp	r0, #0
   14fe8:	movw	r0, #0
   14fec:	movle	r0, #1
   14ff0:	mvn	r1, #0
   14ff4:	eor	r0, r0, r1
   14ff8:	eor	r0, r0, r1
   14ffc:	tst	r0, #1
   15000:	beq	15020 <rb_event_add+0x5c>
   15004:	ldr	r0, [pc, #56]	; 15044 <rb_event_add+0x80>
   15008:	add	r0, pc, r0
   1500c:	ldr	r1, [fp, #-4]
   15010:	ldr	r2, [sp, #8]
   15014:	bl	52e4 <rb_lib_log@plt>
   15018:	movw	r0, #1
   1501c:	str	r0, [sp, #8]
   15020:	ldr	r0, [fp, #-4]
   15024:	ldr	r1, [fp, #-8]
   15028:	ldr	r2, [sp, #12]
   1502c:	ldr	r3, [sp, #8]
   15030:	ldr	ip, [sp, #8]
   15034:	str	ip, [sp]
   15038:	bl	15048 <rb_event_add_common>
   1503c:	mov	sp, fp
   15040:	pop	{fp, pc}
   15044:	.word	0x0000e388

00015048 <rb_event_add_common>:
   15048:	push	{fp, lr}
   1504c:	mov	fp, sp
   15050:	sub	sp, sp, #32
   15054:	ldr	ip, [fp, #8]
   15058:	str	r0, [fp, #-4]
   1505c:	str	r1, [fp, #-8]
   15060:	str	r2, [fp, #-12]
   15064:	str	r3, [sp, #16]
   15068:	movw	r0, #48	; 0x30
   1506c:	str	ip, [sp, #8]
   15070:	bl	15bc0 <rb_malloc>
   15074:	str	r0, [sp, #12]
   15078:	ldr	r0, [fp, #-8]
   1507c:	ldr	r1, [sp, #12]
   15080:	str	r0, [r1, #12]
   15084:	ldr	r0, [fp, #-4]
   15088:	movw	r1, #33	; 0x21
   1508c:	bl	15c18 <rb_strndup>
   15090:	ldr	r1, [sp, #12]
   15094:	str	r0, [r1, #20]
   15098:	ldr	r0, [fp, #-12]
   1509c:	ldr	r1, [sp, #12]
   150a0:	str	r0, [r1, #16]
   150a4:	bl	51c4 <rb_current_time@plt>
   150a8:	ldr	r1, [pc, #164]	; 15154 <rb_event_add_common+0x10c>
   150ac:	add	r1, pc, r1
   150b0:	ldr	r2, [sp, #16]
   150b4:	add	r0, r0, r2
   150b8:	ldr	r2, [sp, #12]
   150bc:	str	r0, [r2, #28]
   150c0:	ldr	r0, [sp, #16]
   150c4:	ldr	r2, [sp, #12]
   150c8:	str	r0, [r2, #32]
   150cc:	ldr	r0, [fp, #8]
   150d0:	ldr	r2, [sp, #12]
   150d4:	str	r0, [r2, #24]
   150d8:	ldr	r0, [sp, #12]
   150dc:	movw	r2, #0
   150e0:	str	r2, [r0, #44]	; 0x2c
   150e4:	ldr	r0, [sp, #12]
   150e8:	ldr	r0, [r0, #28]
   150ec:	ldr	r1, [r1]
   150f0:	cmp	r0, r1
   150f4:	blt	1510c <rb_event_add_common+0xc4>
   150f8:	ldr	r0, [pc, #88]	; 15158 <rb_event_add_common+0x110>
   150fc:	add	r0, pc, r0
   15100:	ldr	r0, [r0]
   15104:	cmn	r0, #1
   15108:	bne	15120 <rb_event_add_common+0xd8>
   1510c:	ldr	r0, [pc, #72]	; 1515c <rb_event_add_common+0x114>
   15110:	add	r0, pc, r0
   15114:	ldr	r1, [sp, #12]
   15118:	ldr	r1, [r1, #28]
   1511c:	str	r1, [r0]
   15120:	ldr	r0, [pc, #56]	; 15160 <rb_event_add_common+0x118>
   15124:	add	r2, pc, r0
   15128:	ldr	r0, [sp, #12]
   1512c:	ldr	r1, [sp, #12]
   15130:	bl	15c88 <rb_dlinkAdd>
   15134:	ldr	r0, [sp, #12]
   15138:	ldr	r1, [sp, #16]
   1513c:	bl	11de0 <rb_io_sched_event>
   15140:	ldr	r1, [sp, #12]
   15144:	str	r0, [sp, #4]
   15148:	mov	r0, r1
   1514c:	mov	sp, fp
   15150:	pop	{fp, pc}
   15154:	.word	0x0001f800
   15158:	.word	0x0001f7b0
   1515c:	.word	0x0001f79c
   15160:	.word	0x000321f4

00015164 <rb_event_addonce>:
   15164:	push	{fp, lr}
   15168:	mov	fp, sp
   1516c:	sub	sp, sp, #24
   15170:	str	r0, [fp, #-4]
   15174:	str	r1, [fp, #-8]
   15178:	str	r2, [sp, #12]
   1517c:	str	r3, [sp, #8]
   15180:	ldr	r0, [sp, #8]
   15184:	cmp	r0, #0
   15188:	movw	r0, #0
   1518c:	movle	r0, #1
   15190:	mvn	r1, #0
   15194:	eor	r0, r0, r1
   15198:	eor	r0, r0, r1
   1519c:	tst	r0, #1
   151a0:	beq	151c0 <rb_event_addonce+0x5c>
   151a4:	ldr	r0, [pc, #56]	; 151e4 <rb_event_addonce+0x80>
   151a8:	add	r0, pc, r0
   151ac:	ldr	r1, [fp, #-4]
   151b0:	ldr	r2, [sp, #8]
   151b4:	bl	52e4 <rb_lib_log@plt>
   151b8:	movw	r0, #1
   151bc:	str	r0, [sp, #8]
   151c0:	ldr	r0, [fp, #-4]
   151c4:	ldr	r1, [fp, #-8]
   151c8:	ldr	r2, [sp, #12]
   151cc:	ldr	r3, [sp, #8]
   151d0:	movw	ip, #0
   151d4:	str	ip, [sp]
   151d8:	bl	15048 <rb_event_add_common>
   151dc:	mov	sp, fp
   151e0:	pop	{fp, pc}
   151e4:	.word	0x0000e22c

000151e8 <rb_event_delete>:
   151e8:	push	{fp, lr}
   151ec:	mov	fp, sp
   151f0:	sub	sp, sp, #8
   151f4:	str	r0, [sp, #4]
   151f8:	ldr	r0, [sp, #4]
   151fc:	movw	r1, #0
   15200:	cmp	r0, r1
   15204:	bne	1520c <rb_event_delete+0x24>
   15208:	b	15220 <rb_event_delete+0x38>
   1520c:	ldr	r0, [sp, #4]
   15210:	movw	r1, #1
   15214:	str	r1, [r0, #44]	; 0x2c
   15218:	ldr	r0, [sp, #4]
   1521c:	bl	11ea0 <rb_io_unsched_event>
   15220:	mov	sp, fp
   15224:	pop	{fp, pc}

00015228 <rb_event_find_delete>:
   15228:	push	{fp, lr}
   1522c:	mov	fp, sp
   15230:	sub	sp, sp, #8
   15234:	str	r0, [sp, #4]
   15238:	str	r1, [sp]
   1523c:	ldr	r0, [sp, #4]
   15240:	ldr	r1, [sp]
   15244:	bl	15254 <rb_event_find>
   15248:	bl	4e58 <rb_event_delete@plt>
   1524c:	mov	sp, fp
   15250:	pop	{fp, pc}

00015254 <rb_event_find>:
   15254:	sub	sp, sp, #20
   15258:	ldr	r2, [pc, #136]	; 152e8 <rb_event_find+0x94>
   1525c:	add	r2, pc, r2
   15260:	str	r0, [sp, #12]
   15264:	str	r1, [sp, #8]
   15268:	ldr	r0, [r2]
   1526c:	str	r0, [sp, #4]
   15270:	ldr	r0, [sp, #4]
   15274:	movw	r1, #0
   15278:	cmp	r0, r1
   1527c:	beq	152d4 <rb_event_find+0x80>
   15280:	ldr	r0, [sp, #4]
   15284:	ldr	r0, [r0]
   15288:	str	r0, [sp]
   1528c:	ldr	r0, [sp]
   15290:	ldr	r0, [r0, #12]
   15294:	ldr	r1, [sp, #12]
   15298:	cmp	r0, r1
   1529c:	bne	152c0 <rb_event_find+0x6c>
   152a0:	ldr	r0, [sp]
   152a4:	ldr	r0, [r0, #16]
   152a8:	ldr	r1, [sp, #8]
   152ac:	cmp	r0, r1
   152b0:	bne	152c0 <rb_event_find+0x6c>
   152b4:	ldr	r0, [sp]
   152b8:	str	r0, [sp, #16]
   152bc:	b	152dc <rb_event_find+0x88>
   152c0:	b	152c4 <rb_event_find+0x70>
   152c4:	ldr	r0, [sp, #4]
   152c8:	ldr	r0, [r0, #8]
   152cc:	str	r0, [sp, #4]
   152d0:	b	15270 <rb_event_find+0x1c>
   152d4:	movw	r0, #0
   152d8:	str	r0, [sp, #16]
   152dc:	ldr	r0, [sp, #16]
   152e0:	add	sp, sp, #20
   152e4:	bx	lr
   152e8:	.word	0x000320bc

000152ec <rb_event_addish>:
   152ec:	push	{fp, lr}
   152f0:	mov	fp, sp
   152f4:	sub	sp, sp, #40	; 0x28
   152f8:	str	r0, [fp, #-4]
   152fc:	str	r1, [fp, #-8]
   15300:	str	r2, [fp, #-12]
   15304:	str	r3, [fp, #-16]
   15308:	ldr	r0, [fp, #-16]
   1530c:	bl	4eac <labs@plt>
   15310:	str	r0, [fp, #-16]
   15314:	ldr	r0, [fp, #-16]
   15318:	vmov	s0, r0
   1531c:	vcvt.f64.s32	d16, s0
   15320:	vmov.f64	d17, #8	; 0x40400000  3.0
   15324:	vcmpe.f64	d16, d17
   15328:	vmrs	APSR_nzcv, fpscr
   1532c:	blt	15340 <rb_event_addish+0x54>
   15330:	ldr	r0, [fp, #-16]
   15334:	movw	r1, #0
   15338:	sub	r0, r1, r0
   1533c:	str	r0, [fp, #-16]
   15340:	ldr	r0, [fp, #-4]
   15344:	ldr	r1, [fp, #-8]
   15348:	ldr	r2, [fp, #-12]
   1534c:	ldr	r3, [fp, #-16]
   15350:	str	r0, [sp, #20]
   15354:	mov	r0, r3
   15358:	str	r1, [sp, #16]
   1535c:	str	r2, [sp, #12]
   15360:	bl	1539c <rb_event_frequency>
   15364:	ldr	r1, [fp, #-16]
   15368:	ldr	r2, [sp, #20]
   1536c:	str	r0, [sp, #8]
   15370:	mov	r0, r2
   15374:	ldr	r3, [sp, #16]
   15378:	str	r1, [sp, #4]
   1537c:	mov	r1, r3
   15380:	ldr	r2, [sp, #12]
   15384:	ldr	r3, [sp, #8]
   15388:	ldr	ip, [sp, #4]
   1538c:	str	ip, [sp]
   15390:	bl	15048 <rb_event_add_common>
   15394:	mov	sp, fp
   15398:	pop	{fp, pc}

0001539c <rb_event_frequency>:
   1539c:	push	{fp, lr}
   153a0:	mov	fp, sp
   153a4:	sub	sp, sp, #16
   153a8:	str	r0, [fp, #-4]
   153ac:	ldr	r0, [fp, #-4]
   153b0:	cmp	r0, #0
   153b4:	bge	15420 <rb_event_frequency+0x84>
   153b8:	ldr	r0, [fp, #-4]
   153bc:	bl	4eac <labs@plt>
   153c0:	lsl	r0, r0, #1
   153c4:	movw	r1, #21846	; 0x5556
   153c8:	movt	r1, #21845	; 0x5555
   153cc:	smmul	r0, r0, r1
   153d0:	add	r0, r0, r0, lsr #31
   153d4:	str	r0, [sp, #8]
   153d8:	ldr	r0, [sp, #8]
   153dc:	str	r0, [sp, #4]
   153e0:	bl	5518 <rand@plt>
   153e4:	mov	r1, r0
   153e8:	movw	r2, #19923	; 0x4dd3
   153ec:	movt	r2, #4194	; 0x1062
   153f0:	smmul	r2, r0, r2
   153f4:	asr	r3, r2, #6
   153f8:	add	r2, r3, r2, lsr #31
   153fc:	mov	r3, #1000	; 0x3e8
   15400:	mls	r0, r2, r3, r0
   15404:	ldr	r2, [sp, #8]
   15408:	mul	r0, r0, r2
   1540c:	movw	r2, #1000	; 0x3e8
   15410:	sdiv	r0, r0, r2
   15414:	ldr	r2, [sp, #4]
   15418:	add	r0, r2, r0
   1541c:	str	r0, [fp, #-4]
   15420:	ldr	r0, [fp, #-4]
   15424:	mov	sp, fp
   15428:	pop	{fp, pc}

0001542c <rb_run_one_event>:
   1542c:	push	{fp, lr}
   15430:	mov	fp, sp
   15434:	sub	sp, sp, #16
   15438:	ldr	r1, [pc, #204]	; 1550c <rb_run_one_event+0xe0>
   1543c:	add	r1, pc, r1
   15440:	str	r0, [fp, #-4]
   15444:	ldr	r0, [fp, #-4]
   15448:	ldr	r0, [r0, #20]
   1544c:	str	r0, [sp, #8]
   15450:	mov	r0, r1
   15454:	ldr	r1, [sp, #8]
   15458:	movw	r2, #33	; 0x21
   1545c:	bl	5068 <rb_strlcpy@plt>
   15460:	ldr	r1, [fp, #-4]
   15464:	ldr	r1, [r1, #12]
   15468:	ldr	r2, [fp, #-4]
   1546c:	ldr	r2, [r2, #16]
   15470:	str	r0, [sp, #4]
   15474:	mov	r0, r2
   15478:	blx	r1
   1547c:	ldr	r0, [fp, #-4]
   15480:	ldr	r0, [r0, #24]
   15484:	cmp	r0, #0
   15488:	bne	15498 <rb_run_one_event+0x6c>
   1548c:	ldr	r0, [fp, #-4]
   15490:	bl	4e58 <rb_event_delete@plt>
   15494:	b	15504 <rb_run_one_event+0xd8>
   15498:	bl	51c4 <rb_current_time@plt>
   1549c:	ldr	r1, [fp, #-4]
   154a0:	ldr	r1, [r1, #24]
   154a4:	str	r0, [sp]
   154a8:	mov	r0, r1
   154ac:	bl	1539c <rb_event_frequency>
   154b0:	ldr	r1, [pc, #88]	; 15510 <rb_run_one_event+0xe4>
   154b4:	add	r1, pc, r1
   154b8:	ldr	r2, [sp]
   154bc:	add	r0, r2, r0
   154c0:	ldr	r2, [fp, #-4]
   154c4:	str	r0, [r2, #28]
   154c8:	ldr	r0, [fp, #-4]
   154cc:	ldr	r0, [r0, #28]
   154d0:	ldr	r1, [r1]
   154d4:	cmp	r0, r1
   154d8:	blt	154f0 <rb_run_one_event+0xc4>
   154dc:	ldr	r0, [pc, #48]	; 15514 <rb_run_one_event+0xe8>
   154e0:	add	r0, pc, r0
   154e4:	ldr	r0, [r0]
   154e8:	cmn	r0, #1
   154ec:	bne	15504 <rb_run_one_event+0xd8>
   154f0:	ldr	r0, [pc, #32]	; 15518 <rb_run_one_event+0xec>
   154f4:	add	r0, pc, r0
   154f8:	ldr	r1, [fp, #-4]
   154fc:	ldr	r1, [r1, #28]
   15500:	str	r1, [r0]
   15504:	mov	sp, fp
   15508:	pop	{fp, pc}
   1550c:	.word	0x00031eb8
   15510:	.word	0x0001f3f8
   15514:	.word	0x0001f3cc
   15518:	.word	0x0001f3b8

0001551c <rb_event_run>:
   1551c:	push	{fp, lr}
   15520:	mov	fp, sp
   15524:	sub	sp, sp, #32
   15528:	bl	11f44 <rb_io_supports_event>
   1552c:	cmp	r0, #0
   15530:	beq	15538 <rb_event_run+0x1c>
   15534:	b	15764 <rb_event_run+0x248>
   15538:	ldr	r0, [pc, #556]	; 1576c <rb_event_run+0x250>
   1553c:	add	r0, pc, r0
   15540:	ldr	r1, [pc, #552]	; 15770 <rb_event_run+0x254>
   15544:	add	r1, pc, r1
   15548:	mvn	r2, #0
   1554c:	str	r2, [r1]
   15550:	ldr	r0, [r0]
   15554:	str	r0, [fp, #-4]
   15558:	ldr	r0, [fp, #-4]
   1555c:	movw	r1, #0
   15560:	cmp	r0, r1
   15564:	beq	15578 <rb_event_run+0x5c>
   15568:	ldr	r0, [fp, #-4]
   1556c:	ldr	r0, [r0, #8]
   15570:	str	r0, [sp, #16]
   15574:	b	15584 <rb_event_run+0x68>
   15578:	movw	r0, #0
   1557c:	str	r0, [sp, #16]
   15580:	b	15584 <rb_event_run+0x68>
   15584:	ldr	r0, [sp, #16]
   15588:	str	r0, [fp, #-8]
   1558c:	ldr	r0, [fp, #-4]
   15590:	movw	r1, #0
   15594:	cmp	r0, r1
   15598:	beq	15764 <rb_event_run+0x248>
   1559c:	ldr	r0, [fp, #-4]
   155a0:	ldr	r0, [r0]
   155a4:	str	r0, [fp, #-12]
   155a8:	ldr	r0, [fp, #-12]
   155ac:	ldr	r0, [r0, #44]	; 0x2c
   155b0:	cmp	r0, #0
   155b4:	beq	155e0 <rb_event_run+0xc4>
   155b8:	ldr	r0, [pc, #468]	; 15794 <rb_event_run+0x278>
   155bc:	add	r1, pc, r0
   155c0:	ldr	r0, [fp, #-12]
   155c4:	bl	15798 <rb_dlinkDelete>
   155c8:	ldr	r0, [fp, #-12]
   155cc:	ldr	r0, [r0, #20]
   155d0:	bl	1584c <rb_free>
   155d4:	ldr	r0, [fp, #-12]
   155d8:	bl	1584c <rb_free>
   155dc:	b	15724 <rb_event_run+0x208>
   155e0:	ldr	r0, [fp, #-12]
   155e4:	ldr	r0, [r0, #28]
   155e8:	str	r0, [sp, #12]
   155ec:	bl	51c4 <rb_current_time@plt>
   155f0:	ldr	r1, [sp, #12]
   155f4:	cmp	r1, r0
   155f8:	bgt	156d8 <rb_event_run+0x1bc>
   155fc:	ldr	r0, [pc, #380]	; 15780 <rb_event_run+0x264>
   15600:	add	r0, pc, r0
   15604:	ldr	r1, [fp, #-12]
   15608:	ldr	r1, [r1, #20]
   1560c:	movw	r2, #33	; 0x21
   15610:	bl	5068 <rb_strlcpy@plt>
   15614:	ldr	r1, [fp, #-12]
   15618:	ldr	r1, [r1, #12]
   1561c:	ldr	r2, [fp, #-12]
   15620:	ldr	r2, [r2, #16]
   15624:	str	r0, [sp, #8]
   15628:	mov	r0, r2
   1562c:	blx	r1
   15630:	ldr	r0, [fp, #-12]
   15634:	ldr	r0, [r0, #24]
   15638:	cmp	r0, #0
   1563c:	beq	156b0 <rb_event_run+0x194>
   15640:	bl	51c4 <rb_current_time@plt>
   15644:	ldr	r1, [fp, #-12]
   15648:	ldr	r1, [r1, #24]
   1564c:	str	r0, [sp, #4]
   15650:	mov	r0, r1
   15654:	bl	1539c <rb_event_frequency>
   15658:	ldr	r1, [pc, #296]	; 15788 <rb_event_run+0x26c>
   1565c:	add	r1, pc, r1
   15660:	ldr	r2, [sp, #4]
   15664:	add	r0, r2, r0
   15668:	ldr	r2, [fp, #-12]
   1566c:	str	r0, [r2, #28]
   15670:	ldr	r0, [fp, #-12]
   15674:	ldr	r0, [r0, #28]
   15678:	ldr	r1, [r1]
   1567c:	cmp	r0, r1
   15680:	blt	15698 <rb_event_run+0x17c>
   15684:	ldr	r0, [pc, #256]	; 1578c <rb_event_run+0x270>
   15688:	add	r0, pc, r0
   1568c:	ldr	r0, [r0]
   15690:	cmn	r0, #1
   15694:	bne	156ac <rb_event_run+0x190>
   15698:	ldr	r0, [pc, #240]	; 15790 <rb_event_run+0x274>
   1569c:	add	r0, pc, r0
   156a0:	ldr	r1, [fp, #-12]
   156a4:	ldr	r1, [r1, #28]
   156a8:	str	r1, [r0]
   156ac:	b	156d4 <rb_event_run+0x1b8>
   156b0:	ldr	r0, [pc, #204]	; 15784 <rb_event_run+0x268>
   156b4:	add	r1, pc, r0
   156b8:	ldr	r0, [fp, #-12]
   156bc:	bl	15798 <rb_dlinkDelete>
   156c0:	ldr	r0, [fp, #-12]
   156c4:	ldr	r0, [r0, #20]
   156c8:	bl	1584c <rb_free>
   156cc:	ldr	r0, [fp, #-12]
   156d0:	bl	1584c <rb_free>
   156d4:	b	15720 <rb_event_run+0x204>
   156d8:	ldr	r0, [pc, #148]	; 15774 <rb_event_run+0x258>
   156dc:	add	r0, pc, r0
   156e0:	ldr	r1, [fp, #-12]
   156e4:	ldr	r1, [r1, #28]
   156e8:	ldr	r0, [r0]
   156ec:	cmp	r1, r0
   156f0:	blt	15708 <rb_event_run+0x1ec>
   156f4:	ldr	r0, [pc, #124]	; 15778 <rb_event_run+0x25c>
   156f8:	add	r0, pc, r0
   156fc:	ldr	r0, [r0]
   15700:	cmn	r0, #1
   15704:	bne	1571c <rb_event_run+0x200>
   15708:	ldr	r0, [pc, #108]	; 1577c <rb_event_run+0x260>
   1570c:	add	r0, pc, r0
   15710:	ldr	r1, [fp, #-12]
   15714:	ldr	r1, [r1, #28]
   15718:	str	r1, [r0]
   1571c:	b	15720 <rb_event_run+0x204>
   15720:	b	15724 <rb_event_run+0x208>
   15724:	ldr	r0, [fp, #-8]
   15728:	str	r0, [fp, #-4]
   1572c:	ldr	r0, [fp, #-4]
   15730:	movw	r1, #0
   15734:	cmp	r0, r1
   15738:	beq	1574c <rb_event_run+0x230>
   1573c:	ldr	r0, [fp, #-4]
   15740:	ldr	r0, [r0, #8]
   15744:	str	r0, [sp]
   15748:	b	15758 <rb_event_run+0x23c>
   1574c:	movw	r0, #0
   15750:	str	r0, [sp]
   15754:	b	15758 <rb_event_run+0x23c>
   15758:	ldr	r0, [sp]
   1575c:	str	r0, [fp, #-8]
   15760:	b	1558c <rb_event_run+0x70>
   15764:	mov	sp, fp
   15768:	pop	{fp, pc}
   1576c:	.word	0x00031ddc
   15770:	.word	0x0001f368
   15774:	.word	0x0001f1d0
   15778:	.word	0x0001f1b4
   1577c:	.word	0x0001f1a0
   15780:	.word	0x00031cf4
   15784:	.word	0x00031c64
   15788:	.word	0x0001f250
   1578c:	.word	0x0001f224
   15790:	.word	0x0001f210
   15794:	.word	0x00031d5c

00015798 <rb_dlinkDelete>:
   15798:	sub	sp, sp, #8
   1579c:	str	r0, [sp, #4]
   157a0:	str	r1, [sp]
   157a4:	ldr	r0, [sp, #4]
   157a8:	ldr	r0, [r0, #8]
   157ac:	movw	r1, #0
   157b0:	cmp	r0, r1
   157b4:	beq	157d0 <rb_dlinkDelete+0x38>
   157b8:	ldr	r0, [sp, #4]
   157bc:	ldr	r0, [r0, #4]
   157c0:	ldr	r1, [sp, #4]
   157c4:	ldr	r1, [r1, #8]
   157c8:	str	r0, [r1, #4]
   157cc:	b	157e0 <rb_dlinkDelete+0x48>
   157d0:	ldr	r0, [sp, #4]
   157d4:	ldr	r0, [r0, #4]
   157d8:	ldr	r1, [sp]
   157dc:	str	r0, [r1, #4]
   157e0:	ldr	r0, [sp, #4]
   157e4:	ldr	r0, [r0, #4]
   157e8:	movw	r1, #0
   157ec:	cmp	r0, r1
   157f0:	beq	1580c <rb_dlinkDelete+0x74>
   157f4:	ldr	r0, [sp, #4]
   157f8:	ldr	r0, [r0, #8]
   157fc:	ldr	r1, [sp, #4]
   15800:	ldr	r1, [r1, #4]
   15804:	str	r0, [r1, #8]
   15808:	b	1581c <rb_dlinkDelete+0x84>
   1580c:	ldr	r0, [sp, #4]
   15810:	ldr	r0, [r0, #8]
   15814:	ldr	r1, [sp]
   15818:	str	r0, [r1]
   1581c:	ldr	r0, [sp, #4]
   15820:	movw	r1, #0
   15824:	str	r1, [r0, #4]
   15828:	ldr	r0, [sp, #4]
   1582c:	str	r1, [r0, #8]
   15830:	ldr	r0, [sp]
   15834:	ldr	r1, [r0, #8]
   15838:	mvn	r2, #0
   1583c:	add	r1, r1, r2
   15840:	str	r1, [r0, #8]
   15844:	add	sp, sp, #8
   15848:	bx	lr

0001584c <rb_free>:
   1584c:	push	{fp, lr}
   15850:	mov	fp, sp
   15854:	sub	sp, sp, #8
   15858:	str	r0, [sp, #4]
   1585c:	ldr	r0, [sp, #4]
   15860:	movw	r1, #0
   15864:	cmp	r0, r1
   15868:	movw	r0, #0
   1586c:	movne	r0, #1
   15870:	mvn	r1, #0
   15874:	eor	r0, r0, r1
   15878:	eor	r0, r0, r1
   1587c:	tst	r0, #1
   15880:	beq	1588c <rb_free+0x40>
   15884:	ldr	r0, [sp, #4]
   15888:	bl	50c8 <free@plt>
   1588c:	mov	sp, fp
   15890:	pop	{fp, pc}

00015894 <rb_event_io_register_all>:
   15894:	push	{fp, lr}
   15898:	mov	fp, sp
   1589c:	sub	sp, sp, #8
   158a0:	bl	11f44 <rb_io_supports_event>
   158a4:	cmp	r0, #0
   158a8:	bne	158b0 <rb_event_io_register_all+0x1c>
   158ac:	b	158fc <rb_event_io_register_all+0x68>
   158b0:	ldr	r0, [pc, #76]	; 15904 <rb_event_io_register_all+0x70>
   158b4:	add	r0, pc, r0
   158b8:	ldr	r0, [r0]
   158bc:	str	r0, [sp, #4]
   158c0:	ldr	r0, [sp, #4]
   158c4:	movw	r1, #0
   158c8:	cmp	r0, r1
   158cc:	beq	158fc <rb_event_io_register_all+0x68>
   158d0:	ldr	r0, [sp, #4]
   158d4:	ldr	r0, [r0]
   158d8:	str	r0, [sp]
   158dc:	ldr	r0, [sp]
   158e0:	ldr	r1, [sp]
   158e4:	ldr	r1, [r1, #32]
   158e8:	bl	11de0 <rb_io_sched_event>
   158ec:	ldr	r0, [sp, #4]
   158f0:	ldr	r0, [r0, #8]
   158f4:	str	r0, [sp, #4]
   158f8:	b	158c0 <rb_event_io_register_all+0x2c>
   158fc:	mov	sp, fp
   15900:	pop	{fp, pc}
   15904:	.word	0x00031a64

00015908 <rb_event_init>:
   15908:	push	{fp, lr}
   1590c:	mov	fp, sp
   15910:	ldr	r0, [pc, #20]	; 1592c <rb_event_init+0x24>
   15914:	add	r0, pc, r0
   15918:	ldr	r1, [pc, #16]	; 15930 <rb_event_init+0x28>
   1591c:	add	r1, pc, r1
   15920:	movw	r2, #33	; 0x21
   15924:	bl	5068 <rb_strlcpy@plt>
   15928:	pop	{fp, pc}
   1592c:	.word	0x000319e0
   15930:	.word	0x0000dafa

00015934 <rb_dump_events>:
   15934:	push	{r4, sl, fp, lr}
   15938:	add	fp, sp, #8
   1593c:	sub	sp, sp, #576	; 0x240
   15940:	ldr	r2, [pc, #336]	; 15a98 <rb_dump_events+0x164>
   15944:	add	r2, pc, r2
   15948:	ldr	r3, [pc, #332]	; 15a9c <rb_dump_events+0x168>
   1594c:	add	r3, pc, r3
   15950:	add	ip, sp, #52	; 0x34
   15954:	str	r0, [fp, #-12]
   15958:	str	r1, [fp, #-16]
   1595c:	movw	r0, #512	; 0x200
   15960:	str	r0, [fp, #-20]	; 0xffffffec
   15964:	ldr	r1, [fp, #-20]	; 0xffffffec
   15968:	mov	r0, ip
   1596c:	bl	5584 <snprintf@plt>
   15970:	add	r1, sp, #52	; 0x34
   15974:	ldr	r2, [fp, #-12]
   15978:	ldr	r3, [fp, #-16]
   1597c:	str	r0, [sp, #40]	; 0x28
   15980:	mov	r0, r1
   15984:	mov	r1, r3
   15988:	blx	r2
   1598c:	ldr	r0, [pc, #256]	; 15a94 <rb_dump_events+0x160>
   15990:	add	r1, pc, r0
   15994:	add	r0, sp, #52	; 0x34
   15998:	ldr	r2, [fp, #-20]	; 0xffffffec
   1599c:	bl	5068 <rb_strlcpy@plt>
   159a0:	add	r1, sp, #52	; 0x34
   159a4:	ldr	r2, [fp, #-12]
   159a8:	ldr	r3, [fp, #-16]
   159ac:	str	r0, [sp, #36]	; 0x24
   159b0:	mov	r0, r1
   159b4:	mov	r1, r3
   159b8:	blx	r2
   159bc:	ldr	r0, [pc, #204]	; 15a90 <rb_dump_events+0x15c>
   159c0:	add	r0, pc, r0
   159c4:	ldr	r0, [r0]
   159c8:	str	r0, [sp, #48]	; 0x30
   159cc:	ldr	r0, [sp, #48]	; 0x30
   159d0:	movw	r1, #0
   159d4:	cmp	r0, r1
   159d8:	beq	15a88 <rb_dump_events+0x154>
   159dc:	add	r0, sp, #52	; 0x34
   159e0:	ldr	r1, [sp, #48]	; 0x30
   159e4:	ldr	r1, [r1]
   159e8:	str	r1, [sp, #44]	; 0x2c
   159ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   159f0:	ldr	r2, [sp, #44]	; 0x2c
   159f4:	ldr	r3, [r2, #20]
   159f8:	ldr	r2, [sp, #44]	; 0x2c
   159fc:	ldr	r2, [r2, #28]
   15a00:	str	r0, [sp, #32]
   15a04:	str	r1, [sp, #28]
   15a08:	str	r3, [sp, #24]
   15a0c:	str	r2, [sp, #20]
   15a10:	bl	51c4 <rb_current_time@plt>
   15a14:	ldr	r1, [pc, #132]	; 15aa0 <rb_dump_events+0x16c>
   15a18:	add	r2, pc, r1
   15a1c:	ldr	r1, [sp, #20]
   15a20:	sub	r0, r1, r0
   15a24:	ldr	r1, [sp, #44]	; 0x2c
   15a28:	ldr	r1, [r1, #24]
   15a2c:	ldr	r3, [sp, #32]
   15a30:	str	r0, [sp, #16]
   15a34:	mov	r0, r3
   15a38:	ldr	ip, [sp, #28]
   15a3c:	str	r1, [sp, #12]
   15a40:	mov	r1, ip
   15a44:	ldr	r3, [sp, #24]
   15a48:	ldr	lr, [sp, #16]
   15a4c:	str	lr, [sp]
   15a50:	ldr	r4, [sp, #12]
   15a54:	str	r4, [sp, #4]
   15a58:	bl	5584 <snprintf@plt>
   15a5c:	add	r1, sp, #52	; 0x34
   15a60:	ldr	r2, [fp, #-12]
   15a64:	ldr	r3, [fp, #-16]
   15a68:	str	r0, [sp, #8]
   15a6c:	mov	r0, r1
   15a70:	mov	r1, r3
   15a74:	blx	r2
   15a78:	ldr	r0, [sp, #48]	; 0x30
   15a7c:	ldr	r0, [r0, #8]
   15a80:	str	r0, [sp, #48]	; 0x30
   15a84:	b	159cc <rb_dump_events+0x98>
   15a88:	sub	sp, fp, #8
   15a8c:	pop	{r4, sl, fp, pc}
   15a90:	.word	0x00031958
   15a94:	.word	0x0000daa1
   15a98:	.word	0x0000dad7
   15a9c:	.word	0x000319a8
   15aa0:	.word	0x0000da45

00015aa4 <rb_set_back_events>:
   15aa4:	sub	sp, sp, #12
   15aa8:	ldr	r1, [pc, #124]	; 15b2c <rb_set_back_events+0x88>
   15aac:	add	r1, pc, r1
   15ab0:	str	r0, [sp, #8]
   15ab4:	ldr	r0, [r1]
   15ab8:	str	r0, [sp, #4]
   15abc:	ldr	r0, [sp, #4]
   15ac0:	movw	r1, #0
   15ac4:	cmp	r0, r1
   15ac8:	beq	15b24 <rb_set_back_events+0x80>
   15acc:	ldr	r0, [sp, #4]
   15ad0:	ldr	r0, [r0]
   15ad4:	str	r0, [sp]
   15ad8:	ldr	r0, [sp]
   15adc:	ldr	r0, [r0, #28]
   15ae0:	ldr	r1, [sp, #8]
   15ae4:	cmp	r0, r1
   15ae8:	ble	15b04 <rb_set_back_events+0x60>
   15aec:	ldr	r0, [sp, #8]
   15af0:	ldr	r1, [sp]
   15af4:	ldr	r2, [r1, #28]
   15af8:	sub	r0, r2, r0
   15afc:	str	r0, [r1, #28]
   15b00:	b	15b10 <rb_set_back_events+0x6c>
   15b04:	ldr	r0, [sp]
   15b08:	movw	r1, #0
   15b0c:	str	r1, [r0, #28]
   15b10:	b	15b14 <rb_set_back_events+0x70>
   15b14:	ldr	r0, [sp, #4]
   15b18:	ldr	r0, [r0, #8]
   15b1c:	str	r0, [sp, #4]
   15b20:	b	15abc <rb_set_back_events+0x18>
   15b24:	add	sp, sp, #12
   15b28:	bx	lr
   15b2c:	.word	0x0003186c

00015b30 <rb_event_update>:
   15b30:	push	{fp, lr}
   15b34:	mov	fp, sp
   15b38:	sub	sp, sp, #16
   15b3c:	str	r0, [fp, #-4]
   15b40:	str	r1, [sp, #8]
   15b44:	ldr	r0, [fp, #-4]
   15b48:	movw	r1, #0
   15b4c:	cmp	r0, r1
   15b50:	bne	15b58 <rb_event_update+0x28>
   15b54:	b	15ba4 <rb_event_update+0x74>
   15b58:	ldr	r0, [sp, #8]
   15b5c:	ldr	r1, [fp, #-4]
   15b60:	str	r0, [r1, #24]
   15b64:	ldr	r0, [sp, #8]
   15b68:	bl	1539c <rb_event_frequency>
   15b6c:	str	r0, [sp, #4]
   15b70:	bl	51c4 <rb_current_time@plt>
   15b74:	ldr	r1, [sp, #4]
   15b78:	add	r0, r0, r1
   15b7c:	ldr	r1, [fp, #-4]
   15b80:	ldr	r1, [r1, #28]
   15b84:	cmp	r0, r1
   15b88:	bge	15ba0 <rb_event_update+0x70>
   15b8c:	bl	51c4 <rb_current_time@plt>
   15b90:	ldr	r1, [sp, #4]
   15b94:	add	r0, r0, r1
   15b98:	ldr	r1, [fp, #-4]
   15b9c:	str	r0, [r1, #28]
   15ba0:	b	15ba4 <rb_event_update+0x74>
   15ba4:	mov	sp, fp
   15ba8:	pop	{fp, pc}

00015bac <rb_event_next>:
   15bac:	ldr	r0, [pc, #8]	; 15bbc <rb_event_next+0x10>
   15bb0:	add	r0, pc, r0
   15bb4:	ldr	r0, [r0]
   15bb8:	bx	lr
   15bbc:	.word	0x0001ecfc

00015bc0 <rb_malloc>:
   15bc0:	push	{fp, lr}
   15bc4:	mov	fp, sp
   15bc8:	sub	sp, sp, #8
   15bcc:	str	r0, [sp, #4]
   15bd0:	ldr	r1, [sp, #4]
   15bd4:	movw	r0, #1
   15bd8:	bl	4fb4 <calloc@plt>
   15bdc:	str	r0, [sp]
   15be0:	ldr	r0, [sp]
   15be4:	movw	r1, #0
   15be8:	cmp	r0, r1
   15bec:	movw	r0, #0
   15bf0:	moveq	r0, #1
   15bf4:	mvn	r1, #0
   15bf8:	eor	r0, r0, r1
   15bfc:	eor	r0, r0, r1
   15c00:	tst	r0, #1
   15c04:	beq	15c0c <rb_malloc+0x4c>
   15c08:	bl	5350 <rb_outofmemory@plt>
   15c0c:	ldr	r0, [sp]
   15c10:	mov	sp, fp
   15c14:	pop	{fp, pc}

00015c18 <rb_strndup>:
   15c18:	push	{fp, lr}
   15c1c:	mov	fp, sp
   15c20:	sub	sp, sp, #16
   15c24:	str	r0, [fp, #-4]
   15c28:	str	r1, [sp, #8]
   15c2c:	ldr	r0, [sp, #8]
   15c30:	bl	5374 <malloc@plt>
   15c34:	str	r0, [sp, #4]
   15c38:	ldr	r0, [sp, #4]
   15c3c:	movw	r1, #0
   15c40:	cmp	r0, r1
   15c44:	movw	r0, #0
   15c48:	moveq	r0, #1
   15c4c:	mvn	r1, #0
   15c50:	eor	r0, r0, r1
   15c54:	eor	r0, r0, r1
   15c58:	tst	r0, #1
   15c5c:	beq	15c64 <rb_strndup+0x4c>
   15c60:	bl	5350 <rb_outofmemory@plt>
   15c64:	ldr	r0, [sp, #4]
   15c68:	ldr	r1, [fp, #-4]
   15c6c:	ldr	r2, [sp, #8]
   15c70:	bl	5068 <rb_strlcpy@plt>
   15c74:	ldr	r1, [sp, #4]
   15c78:	str	r0, [sp]
   15c7c:	mov	r0, r1
   15c80:	mov	sp, fp
   15c84:	pop	{fp, pc}

00015c88 <rb_dlinkAdd>:
   15c88:	sub	sp, sp, #12
   15c8c:	str	r0, [sp, #8]
   15c90:	str	r1, [sp, #4]
   15c94:	str	r2, [sp]
   15c98:	ldr	r0, [sp, #8]
   15c9c:	ldr	r1, [sp, #4]
   15ca0:	str	r0, [r1]
   15ca4:	ldr	r0, [sp, #4]
   15ca8:	movw	r1, #0
   15cac:	str	r1, [r0, #4]
   15cb0:	ldr	r0, [sp]
   15cb4:	ldr	r0, [r0]
   15cb8:	ldr	r2, [sp, #4]
   15cbc:	str	r0, [r2, #8]
   15cc0:	ldr	r0, [sp]
   15cc4:	ldr	r0, [r0]
   15cc8:	cmp	r0, r1
   15ccc:	beq	15ce4 <rb_dlinkAdd+0x5c>
   15cd0:	ldr	r0, [sp, #4]
   15cd4:	ldr	r1, [sp]
   15cd8:	ldr	r1, [r1]
   15cdc:	str	r0, [r1, #4]
   15ce0:	b	15d08 <rb_dlinkAdd+0x80>
   15ce4:	ldr	r0, [sp]
   15ce8:	ldr	r0, [r0, #4]
   15cec:	movw	r1, #0
   15cf0:	cmp	r0, r1
   15cf4:	bne	15d04 <rb_dlinkAdd+0x7c>
   15cf8:	ldr	r0, [sp, #4]
   15cfc:	ldr	r1, [sp]
   15d00:	str	r0, [r1, #4]
   15d04:	b	15d08 <rb_dlinkAdd+0x80>
   15d08:	ldr	r0, [sp, #4]
   15d0c:	ldr	r1, [sp]
   15d10:	str	r0, [r1]
   15d14:	ldr	r0, [sp]
   15d18:	ldr	r1, [r0, #8]
   15d1c:	add	r1, r1, #1
   15d20:	str	r1, [r0, #8]
   15d24:	add	sp, sp, #12
   15d28:	bx	lr

00015d2c <rb_ctime>:
   15d2c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15d30:	add	fp, sp, #24
   15d34:	sub	sp, sp, #104	; 0x68
   15d38:	str	r0, [fp, #-32]	; 0xffffffe0
   15d3c:	str	r1, [fp, #-36]	; 0xffffffdc
   15d40:	str	r2, [fp, #-40]	; 0xffffffd8
   15d44:	sub	r0, fp, #32
   15d48:	add	r1, sp, #32
   15d4c:	bl	53bc <gmtime_r@plt>
   15d50:	str	r0, [fp, #-48]	; 0xffffffd0
   15d54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d58:	movw	r1, #0
   15d5c:	cmp	r0, r1
   15d60:	bne	15d7c <rb_ctime+0x50>
   15d64:	ldr	r0, [pc, #280]	; 15e84 <rb_ctime+0x158>
   15d68:	add	r0, pc, r0
   15d6c:	str	r0, [fp, #-44]	; 0xffffffd4
   15d70:	movw	r0, #128	; 0x80
   15d74:	str	r0, [fp, #-52]	; 0xffffffcc
   15d78:	b	15d8c <rb_ctime+0x60>
   15d7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d80:	str	r0, [fp, #-44]	; 0xffffffd4
   15d84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15d88:	str	r0, [fp, #-52]	; 0xffffffcc
   15d8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d90:	movw	r1, #0
   15d94:	cmp	r0, r1
   15d98:	movw	r0, #0
   15d9c:	moveq	r0, #1
   15da0:	mvn	r1, #0
   15da4:	eor	r0, r0, r1
   15da8:	eor	r0, r0, r1
   15dac:	tst	r0, #1
   15db0:	beq	15dd4 <rb_ctime+0xa8>
   15db4:	ldr	r0, [pc, #212]	; 15e90 <rb_ctime+0x164>
   15db8:	add	r1, pc, r0
   15dbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15dc0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15dc4:	bl	5068 <rb_strlcpy@plt>
   15dc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15dcc:	str	r1, [fp, #-28]	; 0xffffffe4
   15dd0:	b	15e78 <rb_ctime+0x14c>
   15dd4:	ldr	r0, [pc, #172]	; 15e88 <rb_ctime+0x15c>
   15dd8:	add	r2, pc, r0
   15ddc:	ldr	r0, [pc, #168]	; 15e8c <rb_ctime+0x160>
   15de0:	add	r0, pc, r0
   15de4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15de8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15dec:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15df0:	ldr	lr, [ip, #16]
   15df4:	ldr	ip, [ip, #24]
   15df8:	ldr	r4, [pc, #148]	; 15e94 <rb_ctime+0x168>
   15dfc:	add	r4, pc, r4
   15e00:	ldr	ip, [r4, ip, lsl #2]
   15e04:	ldr	r4, [pc, #140]	; 15e98 <rb_ctime+0x16c>
   15e08:	add	r4, pc, r4
   15e0c:	add	lr, r4, lr, lsl #2
   15e10:	ldr	lr, [lr]
   15e14:	ldr	r4, [fp, #-48]	; 0xffffffd0
   15e18:	ldr	r4, [r4, #12]
   15e1c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   15e20:	ldr	r5, [r5, #8]
   15e24:	ldr	r6, [fp, #-48]	; 0xffffffd0
   15e28:	ldr	r6, [r6, #4]
   15e2c:	ldr	r7, [fp, #-48]	; 0xffffffd0
   15e30:	ldr	r7, [r7]
   15e34:	ldr	r8, [fp, #-48]	; 0xffffffd0
   15e38:	ldr	r8, [r8, #20]
   15e3c:	movw	r9, #1900	; 0x76c
   15e40:	add	r8, r8, r9
   15e44:	str	r0, [sp, #28]
   15e48:	mov	r0, r1
   15e4c:	mov	r1, r3
   15e50:	mov	r3, ip
   15e54:	str	lr, [sp]
   15e58:	str	r4, [sp, #4]
   15e5c:	str	r5, [sp, #8]
   15e60:	str	r6, [sp, #12]
   15e64:	str	r7, [sp, #16]
   15e68:	str	r8, [sp, #20]
   15e6c:	bl	5584 <snprintf@plt>
   15e70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e74:	str	r1, [fp, #-28]	; 0xffffffe4
   15e78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15e7c:	sub	sp, fp, #24
   15e80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15e84:	.word	0x000315bc
   15e88:	.word	0x0000d6a8
   15e8c:	.word	0x0001eaec
   15e90:	.word	0x0000cdcd
   15e94:	.word	0x0001eab4
   15e98:	.word	0x0001eac4

00015e9c <rb_date>:
   15e9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15ea0:	add	fp, sp, #24
   15ea4:	sub	sp, sp, #96	; 0x60
   15ea8:	str	r0, [fp, #-32]	; 0xffffffe0
   15eac:	str	r1, [fp, #-36]	; 0xffffffdc
   15eb0:	str	r2, [fp, #-40]	; 0xffffffd8
   15eb4:	sub	r0, fp, #32
   15eb8:	add	r1, sp, #32
   15ebc:	bl	53bc <gmtime_r@plt>
   15ec0:	str	r0, [fp, #-44]	; 0xffffffd4
   15ec4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ec8:	movw	r1, #0
   15ecc:	cmp	r0, r1
   15ed0:	movw	r0, #0
   15ed4:	moveq	r0, #1
   15ed8:	mvn	r1, #0
   15edc:	eor	r0, r0, r1
   15ee0:	eor	r0, r0, r1
   15ee4:	tst	r0, #1
   15ee8:	beq	15f0c <rb_date+0x70>
   15eec:	ldr	r0, [pc, #208]	; 15fc4 <rb_date+0x128>
   15ef0:	add	r1, pc, r0
   15ef4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ef8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15efc:	bl	5068 <rb_strlcpy@plt>
   15f00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15f04:	str	r1, [fp, #-28]	; 0xffffffe4
   15f08:	b	15fb0 <rb_date+0x114>
   15f0c:	ldr	r0, [pc, #168]	; 15fbc <rb_date+0x120>
   15f10:	add	r2, pc, r0
   15f14:	ldr	r0, [pc, #164]	; 15fc0 <rb_date+0x124>
   15f18:	add	r0, pc, r0
   15f1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15f20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f24:	ldr	ip, [fp, #-44]	; 0xffffffd4
   15f28:	ldr	lr, [ip, #16]
   15f2c:	ldr	ip, [ip, #24]
   15f30:	ldr	r4, [pc, #144]	; 15fc8 <rb_date+0x12c>
   15f34:	add	r4, pc, r4
   15f38:	ldr	ip, [r4, ip, lsl #2]
   15f3c:	ldr	r4, [pc, #136]	; 15fcc <rb_date+0x130>
   15f40:	add	r4, pc, r4
   15f44:	add	lr, r4, lr, lsl #2
   15f48:	ldr	lr, [lr]
   15f4c:	ldr	r4, [fp, #-44]	; 0xffffffd4
   15f50:	ldr	r4, [r4, #12]
   15f54:	ldr	r5, [fp, #-44]	; 0xffffffd4
   15f58:	ldr	r5, [r5, #20]
   15f5c:	movw	r6, #1900	; 0x76c
   15f60:	add	r5, r5, r6
   15f64:	ldr	r6, [fp, #-44]	; 0xffffffd4
   15f68:	ldr	r6, [r6, #8]
   15f6c:	ldr	r7, [fp, #-44]	; 0xffffffd4
   15f70:	ldr	r7, [r7, #4]
   15f74:	ldr	r8, [fp, #-44]	; 0xffffffd4
   15f78:	ldr	r8, [r8]
   15f7c:	str	r0, [sp, #28]
   15f80:	mov	r0, r1
   15f84:	mov	r1, r3
   15f88:	mov	r3, ip
   15f8c:	str	lr, [sp]
   15f90:	str	r4, [sp, #4]
   15f94:	str	r5, [sp, #8]
   15f98:	str	r6, [sp, #12]
   15f9c:	str	r7, [sp, #16]
   15fa0:	str	r8, [sp, #20]
   15fa4:	bl	5584 <snprintf@plt>
   15fa8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15fac:	str	r1, [fp, #-28]	; 0xffffffe4
   15fb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15fb4:	sub	sp, fp, #24
   15fb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15fbc:	.word	0x0000d58b
   15fc0:	.word	0x0001ea00
   15fc4:	.word	0x0000cc95
   15fc8:	.word	0x0001e9c8
   15fcc:	.word	0x0001e9d8

00015fd0 <rb_current_time>:
   15fd0:	ldr	r0, [pc, #8]	; 15fe0 <rb_current_time+0x10>
   15fd4:	add	r0, pc, r0
   15fd8:	ldr	r0, [r0]
   15fdc:	bx	lr
   15fe0:	.word	0x000313d0

00015fe4 <rb_current_time_tv>:
   15fe4:	ldr	r0, [pc, #4]	; 15ff0 <rb_current_time_tv+0xc>
   15fe8:	add	r0, pc, r0
   15fec:	bx	lr
   15ff0:	.word	0x000313bc

00015ff4 <rb_lib_log>:
   15ff4:	sub	sp, sp, #12
   15ff8:	push	{fp, lr}
   15ffc:	mov	fp, sp
   16000:	sub	sp, sp, #20
   16004:	str	r3, [fp, #16]
   16008:	str	r2, [fp, #12]
   1600c:	str	r1, [fp, #8]
   16010:	ldr	r1, [pc, #132]	; 1609c <rb_lib_log+0xa8>
   16014:	add	r1, pc, r1
   16018:	str	r0, [fp, #-4]
   1601c:	ldr	r0, [r1]
   16020:	movw	r1, #0
   16024:	cmp	r0, r1
   16028:	bne	16030 <rb_lib_log+0x3c>
   1602c:	b	1608c <rb_lib_log+0x98>
   16030:	ldr	r0, [pc, #112]	; 160a8 <rb_lib_log+0xb4>
   16034:	add	r0, pc, r0
   16038:	add	r1, fp, #8
   1603c:	str	r1, [fp, #-8]
   16040:	ldr	r2, [fp, #-4]
   16044:	ldr	r3, [fp, #-8]
   16048:	ldr	r1, [pc, #92]	; 160ac <rb_lib_log+0xb8>
   1604c:	add	r1, pc, r1
   16050:	mov	ip, #512	; 0x200
   16054:	str	r0, [sp, #8]
   16058:	mov	r0, r1
   1605c:	mov	r1, ip
   16060:	bl	4f24 <vsnprintf@plt>
   16064:	ldr	r1, [pc, #52]	; 160a0 <rb_lib_log+0xac>
   16068:	add	r1, pc, r1
   1606c:	ldr	r2, [pc, #48]	; 160a4 <rb_lib_log+0xb0>
   16070:	add	r2, pc, r2
   16074:	sub	r3, fp, #8
   16078:	ldr	r2, [r2]
   1607c:	str	r0, [sp, #4]
   16080:	mov	r0, r1
   16084:	str	r3, [sp]
   16088:	blx	r2
   1608c:	mov	sp, fp
   16090:	pop	{fp, lr}
   16094:	add	sp, sp, #12
   16098:	bx	lr
   1609c:	.word	0x00031398
   160a0:	.word	0x00031348
   160a4:	.word	0x0003133c
   160a8:	.word	0x0003137c
   160ac:	.word	0x00031364

000160b0 <rb_lib_die>:
   160b0:	sub	sp, sp, #12
   160b4:	push	{fp, lr}
   160b8:	mov	fp, sp
   160bc:	sub	sp, sp, #20
   160c0:	str	r3, [fp, #16]
   160c4:	str	r2, [fp, #12]
   160c8:	str	r1, [fp, #8]
   160cc:	ldr	r1, [pc, #132]	; 16158 <rb_lib_die+0xa8>
   160d0:	add	r1, pc, r1
   160d4:	str	r0, [fp, #-4]
   160d8:	ldr	r0, [r1]
   160dc:	movw	r1, #0
   160e0:	cmp	r0, r1
   160e4:	bne	160ec <rb_lib_die+0x3c>
   160e8:	bl	4d80 <abort@plt>
   160ec:	ldr	r0, [pc, #112]	; 16164 <rb_lib_die+0xb4>
   160f0:	add	r0, pc, r0
   160f4:	add	r1, fp, #8
   160f8:	str	r1, [fp, #-8]
   160fc:	ldr	r2, [fp, #-4]
   16100:	ldr	r3, [fp, #-8]
   16104:	ldr	r1, [pc, #92]	; 16168 <rb_lib_die+0xb8>
   16108:	add	r1, pc, r1
   1610c:	mov	ip, #512	; 0x200
   16110:	str	r0, [sp, #8]
   16114:	mov	r0, r1
   16118:	mov	r1, ip
   1611c:	bl	4f24 <vsnprintf@plt>
   16120:	ldr	r1, [pc, #52]	; 1615c <rb_lib_die+0xac>
   16124:	add	r1, pc, r1
   16128:	ldr	r2, [pc, #48]	; 16160 <rb_lib_die+0xb0>
   1612c:	add	r2, pc, r2
   16130:	sub	r3, fp, #8
   16134:	ldr	r2, [r2]
   16138:	str	r0, [sp, #4]
   1613c:	mov	r0, r1
   16140:	str	r3, [sp]
   16144:	blx	r2
   16148:	mov	sp, fp
   1614c:	pop	{fp, lr}
   16150:	add	sp, sp, #12
   16154:	bx	lr
   16158:	.word	0x000314e0
   1615c:	.word	0x0003128c
   16160:	.word	0x00031484
   16164:	.word	0x000312c0
   16168:	.word	0x000312a8

0001616c <rb_lib_restart>:
   1616c:	sub	sp, sp, #12
   16170:	push	{fp, lr}
   16174:	mov	fp, sp
   16178:	sub	sp, sp, #20
   1617c:	str	r3, [fp, #16]
   16180:	str	r2, [fp, #12]
   16184:	str	r1, [fp, #8]
   16188:	ldr	r1, [pc, #120]	; 16208 <rb_lib_restart+0x9c>
   1618c:	add	r1, pc, r1
   16190:	str	r0, [fp, #-4]
   16194:	ldr	r0, [r1]
   16198:	movw	r1, #0
   1619c:	cmp	r0, r1
   161a0:	bne	161a8 <rb_lib_restart+0x3c>
   161a4:	bl	4d80 <abort@plt>
   161a8:	ldr	r0, [pc, #100]	; 16214 <rb_lib_restart+0xa8>
   161ac:	add	r0, pc, r0
   161b0:	add	r1, fp, #8
   161b4:	str	r1, [fp, #-8]
   161b8:	ldr	r2, [fp, #-4]
   161bc:	ldr	r3, [fp, #-8]
   161c0:	ldr	r1, [pc, #80]	; 16218 <rb_lib_restart+0xac>
   161c4:	add	r1, pc, r1
   161c8:	mov	ip, #512	; 0x200
   161cc:	str	r0, [sp, #8]
   161d0:	mov	r0, r1
   161d4:	mov	r1, ip
   161d8:	bl	4f24 <vsnprintf@plt>
   161dc:	ldr	r1, [pc, #40]	; 1620c <rb_lib_restart+0xa0>
   161e0:	add	r1, pc, r1
   161e4:	ldr	r2, [pc, #36]	; 16210 <rb_lib_restart+0xa4>
   161e8:	add	r2, pc, r2
   161ec:	sub	r3, fp, #8
   161f0:	ldr	r2, [r2]
   161f4:	str	r0, [sp, #4]
   161f8:	mov	r0, r1
   161fc:	str	r3, [sp]
   16200:	blx	r2
   16204:	bl	4d80 <abort@plt>
   16208:	.word	0x00031428
   1620c:	.word	0x000311d0
   16210:	.word	0x000313cc
   16214:	.word	0x00031204
   16218:	.word	0x000311ec

0001621c <rb_set_time>:
   1621c:	push	{fp, lr}
   16220:	mov	fp, sp
   16224:	sub	sp, sp, #16
   16228:	add	r0, sp, #8
   1622c:	movw	r1, #0
   16230:	bl	4f84 <rb_gettimeofday@plt>
   16234:	cmn	r0, #1
   16238:	movw	r0, #0
   1623c:	moveq	r0, #1
   16240:	mvn	r1, #0
   16244:	eor	r0, r0, r1
   16248:	eor	r0, r0, r1
   1624c:	tst	r0, #1
   16250:	beq	16284 <rb_set_time+0x68>
   16254:	bl	56c8 <__errno_location@plt>
   16258:	ldr	r0, [r0]
   1625c:	bl	4d5c <strerror@plt>
   16260:	ldr	r1, [pc, #124]	; 162e4 <rb_set_time+0xc8>
   16264:	add	r1, pc, r1
   16268:	str	r0, [sp, #4]
   1626c:	mov	r0, r1
   16270:	ldr	r1, [sp, #4]
   16274:	bl	52e4 <rb_lib_log@plt>
   16278:	ldr	r0, [pc, #96]	; 162e0 <rb_set_time+0xc4>
   1627c:	add	r0, pc, r0
   16280:	bl	5428 <rb_lib_restart@plt>
   16284:	ldr	r0, [pc, #72]	; 162d4 <rb_set_time+0xb8>
   16288:	add	r0, pc, r0
   1628c:	ldr	r1, [sp, #8]
   16290:	ldr	r0, [r0]
   16294:	cmp	r1, r0
   16298:	bge	162b4 <rb_set_time+0x98>
   1629c:	ldr	r0, [pc, #52]	; 162d8 <rb_set_time+0xbc>
   162a0:	add	r0, pc, r0
   162a4:	ldr	r0, [r0]
   162a8:	ldr	r1, [sp, #8]
   162ac:	sub	r0, r0, r1
   162b0:	bl	15aa4 <rb_set_back_events>
   162b4:	ldr	r0, [pc, #32]	; 162dc <rb_set_time+0xc0>
   162b8:	add	r0, pc, r0
   162bc:	ldr	r1, [sp, #8]
   162c0:	str	r1, [r0]
   162c4:	ldr	r1, [sp, #12]
   162c8:	str	r1, [r0, #4]
   162cc:	mov	sp, fp
   162d0:	pop	{fp, pc}
   162d4:	.word	0x0003111c
   162d8:	.word	0x00031104
   162dc:	.word	0x000310ec
   162e0:	.word	0x0000d257
   162e4:	.word	0x0000d25c

000162e8 <rb_lib_version>:
   162e8:	push	{r4, r5, fp, lr}
   162ec:	add	fp, sp, #8
   162f0:	sub	sp, sp, #528	; 0x210
   162f4:	add	r0, sp, #16
   162f8:	movw	r1, #512	; 0x200
   162fc:	bl	14218 <rb_get_ssl_info>
   16300:	ldr	r0, [pc, #76]	; 16354 <rb_lib_version+0x6c>
   16304:	add	r0, pc, r0
   16308:	ldr	r1, [pc, #72]	; 16358 <rb_lib_version+0x70>
   1630c:	add	r2, pc, r1
   16310:	add	r1, sp, #16
   16314:	ldr	r3, [pc, #64]	; 1635c <rb_lib_version+0x74>
   16318:	ldr	r3, [pc, r3]
   1631c:	ldr	r3, [r3]
   16320:	movw	ip, #640	; 0x280
   16324:	str	r1, [sp, #12]
   16328:	mov	r1, ip
   1632c:	ldr	ip, [sp, #12]
   16330:	str	ip, [sp]
   16334:	bl	5584 <snprintf@plt>
   16338:	ldr	r1, [pc, #16]	; 16350 <rb_lib_version+0x68>
   1633c:	add	r1, pc, r1
   16340:	str	r0, [sp, #8]
   16344:	mov	r0, r1
   16348:	sub	sp, fp, #8
   1634c:	pop	{r4, r5, fp, pc}
   16350:	.word	0x0003127c
   16354:	.word	0x000312b4
   16358:	.word	0x0000d1d5
   1635c:	.word	0x0001e094

00016360 <rb_lib_init>:
   16360:	push	{r4, sl, fp, lr}
   16364:	add	fp, sp, #8
   16368:	sub	sp, sp, #32
   1636c:	ldr	ip, [fp, #16]
   16370:	ldr	lr, [fp, #12]
   16374:	ldr	r4, [fp, #8]
   16378:	str	r0, [fp, #-12]
   1637c:	str	r1, [fp, #-16]
   16380:	str	r2, [sp, #20]
   16384:	str	r3, [sp, #16]
   16388:	str	ip, [sp, #12]
   1638c:	str	lr, [sp, #8]
   16390:	str	r4, [sp, #4]
   16394:	bl	535c <rb_set_time@plt>
   16398:	ldr	r0, [pc, #100]	; 16404 <rb_lib_init+0xa4>
   1639c:	add	r0, pc, r0
   163a0:	ldr	r1, [pc, #96]	; 16408 <rb_lib_init+0xa8>
   163a4:	add	r1, pc, r1
   163a8:	ldr	r2, [pc, #92]	; 1640c <rb_lib_init+0xac>
   163ac:	add	r2, pc, r2
   163b0:	ldr	r3, [fp, #-12]
   163b4:	str	r3, [r2]
   163b8:	ldr	r2, [fp, #-16]
   163bc:	str	r2, [r1]
   163c0:	ldr	r1, [sp, #20]
   163c4:	str	r1, [r0]
   163c8:	bl	4fcc <rb_event_init@plt>
   163cc:	bl	53a4 <rb_init_bh@plt>
   163d0:	ldr	r0, [sp, #16]
   163d4:	ldr	r1, [fp, #8]
   163d8:	ldr	r2, [fp, #16]
   163dc:	bl	54c4 <rb_fdlist_init@plt>
   163e0:	bl	4d44 <rb_init_netio@plt>
   163e4:	ldr	r0, [fp, #12]
   163e8:	bl	52a8 <rb_init_rb_dlink_nodes@plt>
   163ec:	bl	11f44 <rb_io_supports_event>
   163f0:	cmp	r0, #0
   163f4:	beq	163fc <rb_lib_init+0x9c>
   163f8:	bl	11f9c <rb_io_init_event>
   163fc:	sub	sp, fp, #8
   16400:	pop	{r4, sl, fp, pc}
   16404:	.word	0x00031214
   16408:	.word	0x00031210
   1640c:	.word	0x00031000

00016410 <rb_lib_loop>:
   16410:	push	{fp, lr}
   16414:	mov	fp, sp
   16418:	sub	sp, sp, #16
   1641c:	str	r0, [fp, #-4]
   16420:	bl	535c <rb_set_time@plt>
   16424:	bl	11f44 <rb_io_supports_event>
   16428:	cmp	r0, #0
   1642c:	beq	16444 <rb_lib_loop+0x34>
   16430:	b	16434 <rb_lib_loop+0x24>
   16434:	mvn	r0, #0
   16438:	bl	4f0c <rb_select@plt>
   1643c:	str	r0, [sp, #4]
   16440:	b	16434 <rb_lib_loop+0x24>
   16444:	b	16448 <rb_lib_loop+0x38>
   16448:	ldr	r0, [fp, #-4]
   1644c:	cmp	r0, #0
   16450:	bne	164b4 <rb_lib_loop+0xa4>
   16454:	bl	5608 <rb_event_next@plt>
   16458:	str	r0, [sp, #8]
   1645c:	cmp	r0, #0
   16460:	ble	164a0 <rb_lib_loop+0x90>
   16464:	bl	51c4 <rb_current_time@plt>
   16468:	ldr	r1, [sp, #8]
   1646c:	sub	r0, r1, r0
   16470:	str	r0, [sp, #8]
   16474:	ldr	r0, [sp, #8]
   16478:	cmp	r0, #0
   1647c:	bgt	1648c <rb_lib_loop+0x7c>
   16480:	movw	r0, #1000	; 0x3e8
   16484:	str	r0, [sp, #8]
   16488:	b	1649c <rb_lib_loop+0x8c>
   1648c:	ldr	r0, [sp, #8]
   16490:	movw	r1, #1000	; 0x3e8
   16494:	mul	r0, r0, r1
   16498:	str	r0, [sp, #8]
   1649c:	b	164a8 <rb_lib_loop+0x98>
   164a0:	mvn	r0, #0
   164a4:	str	r0, [sp, #8]
   164a8:	ldr	r0, [sp, #8]
   164ac:	bl	4f0c <rb_select@plt>
   164b0:	b	164bc <rb_lib_loop+0xac>
   164b4:	ldr	r0, [fp, #-4]
   164b8:	bl	4f0c <rb_select@plt>
   164bc:	bl	538c <rb_event_run@plt>
   164c0:	b	16448 <rb_lib_loop+0x38>

000164c4 <rb_strtok_r>:
   164c4:	push	{fp, lr}
   164c8:	mov	fp, sp
   164cc:	sub	sp, sp, #16
   164d0:	str	r0, [fp, #-4]
   164d4:	str	r1, [sp, #8]
   164d8:	str	r2, [sp, #4]
   164dc:	ldr	r0, [fp, #-4]
   164e0:	ldr	r1, [sp, #8]
   164e4:	ldr	r2, [sp, #4]
   164e8:	bl	541c <strtok_r@plt>
   164ec:	mov	sp, fp
   164f0:	pop	{fp, pc}

000164f4 <rb_base64_encode>:
   164f4:	push	{fp, lr}
   164f8:	mov	fp, sp
   164fc:	sub	sp, sp, #24
   16500:	str	r0, [fp, #-8]
   16504:	str	r1, [sp, #12]
   16508:	ldr	r0, [fp, #-8]
   1650c:	str	r0, [sp, #8]
   16510:	ldr	r0, [sp, #12]
   16514:	add	r0, r0, #2
   16518:	cmp	r0, #0
   1651c:	blt	16538 <rb_base64_encode+0x44>
   16520:	ldr	r0, [sp, #12]
   16524:	add	r0, r0, #2
   16528:	movw	r1, #3
   1652c:	sdiv	r0, r0, r1
   16530:	cmp	r0, #1073741824	; 0x40000000
   16534:	blt	16544 <rb_base64_encode+0x50>
   16538:	movw	r0, #0
   1653c:	str	r0, [fp, #-4]
   16540:	b	16784 <rb_base64_encode+0x290>
   16544:	ldr	r0, [sp, #12]
   16548:	add	r0, r0, #2
   1654c:	movw	r1, #3
   16550:	sdiv	r0, r0, r1
   16554:	movw	r1, #5
   16558:	mul	r0, r0, r1
   1655c:	bl	167a0 <rb_malloc>
   16560:	str	r0, [sp]
   16564:	ldr	r0, [sp]
   16568:	str	r0, [sp, #4]
   1656c:	ldr	r0, [sp, #12]
   16570:	cmp	r0, #2
   16574:	ble	16654 <rb_base64_encode+0x160>
   16578:	ldr	r0, [pc, #540]	; 1679c <rb_base64_encode+0x2a8>
   1657c:	add	r0, pc, r0
   16580:	ldr	r1, [sp, #8]
   16584:	ldrb	r1, [r1]
   16588:	asr	r1, r1, #2
   1658c:	add	r1, r0, r1
   16590:	ldrb	r1, [r1]
   16594:	ldr	r2, [sp, #4]
   16598:	add	r3, r2, #1
   1659c:	str	r3, [sp, #4]
   165a0:	strb	r1, [r2]
   165a4:	ldr	r1, [sp, #8]
   165a8:	ldrb	r1, [r1]
   165ac:	and	r1, r1, #3
   165b0:	lsl	r1, r1, #4
   165b4:	ldr	r2, [sp, #8]
   165b8:	ldrb	r2, [r2, #1]
   165bc:	asr	r2, r2, #4
   165c0:	add	r1, r1, r2
   165c4:	add	r1, r0, r1
   165c8:	ldrb	r1, [r1]
   165cc:	ldr	r2, [sp, #4]
   165d0:	add	r3, r2, #1
   165d4:	str	r3, [sp, #4]
   165d8:	strb	r1, [r2]
   165dc:	ldr	r1, [sp, #8]
   165e0:	ldrb	r1, [r1, #1]
   165e4:	and	r1, r1, #15
   165e8:	lsl	r1, r1, #2
   165ec:	ldr	r2, [sp, #8]
   165f0:	ldrb	r2, [r2, #2]
   165f4:	asr	r2, r2, #6
   165f8:	add	r1, r1, r2
   165fc:	add	r1, r0, r1
   16600:	ldrb	r1, [r1]
   16604:	ldr	r2, [sp, #4]
   16608:	add	r3, r2, #1
   1660c:	str	r3, [sp, #4]
   16610:	strb	r1, [r2]
   16614:	ldr	r1, [sp, #8]
   16618:	ldrb	r1, [r1, #2]
   1661c:	and	r1, r1, #63	; 0x3f
   16620:	add	r0, r0, r1
   16624:	ldrb	r0, [r0]
   16628:	ldr	r1, [sp, #4]
   1662c:	add	r2, r1, #1
   16630:	str	r2, [sp, #4]
   16634:	strb	r0, [r1]
   16638:	ldr	r0, [sp, #8]
   1663c:	add	r0, r0, #3
   16640:	str	r0, [sp, #8]
   16644:	ldr	r0, [sp, #12]
   16648:	sub	r0, r0, #3
   1664c:	str	r0, [sp, #12]
   16650:	b	1656c <rb_base64_encode+0x78>
   16654:	ldr	r0, [sp, #12]
   16658:	cmp	r0, #0
   1665c:	beq	16770 <rb_base64_encode+0x27c>
   16660:	ldr	r0, [pc, #296]	; 16790 <rb_base64_encode+0x29c>
   16664:	add	r0, pc, r0
   16668:	ldr	r1, [sp, #8]
   1666c:	ldrb	r1, [r1]
   16670:	asr	r1, r1, #2
   16674:	add	r0, r0, r1
   16678:	ldrb	r0, [r0]
   1667c:	ldr	r1, [sp, #4]
   16680:	add	r2, r1, #1
   16684:	str	r2, [sp, #4]
   16688:	strb	r0, [r1]
   1668c:	ldr	r0, [sp, #12]
   16690:	cmp	r0, #1
   16694:	ble	16718 <rb_base64_encode+0x224>
   16698:	ldr	r0, [pc, #248]	; 16798 <rb_base64_encode+0x2a4>
   1669c:	add	r0, pc, r0
   166a0:	ldr	r1, [sp, #8]
   166a4:	ldrb	r1, [r1]
   166a8:	and	r1, r1, #3
   166ac:	lsl	r1, r1, #4
   166b0:	ldr	r2, [sp, #8]
   166b4:	ldrb	r2, [r2, #1]
   166b8:	asr	r2, r2, #4
   166bc:	add	r1, r1, r2
   166c0:	add	r1, r0, r1
   166c4:	ldrb	r1, [r1]
   166c8:	ldr	r2, [sp, #4]
   166cc:	add	r3, r2, #1
   166d0:	str	r3, [sp, #4]
   166d4:	strb	r1, [r2]
   166d8:	ldr	r1, [sp, #8]
   166dc:	ldrb	r1, [r1, #1]
   166e0:	and	r1, r1, #15
   166e4:	lsl	r1, r1, #2
   166e8:	add	r0, r0, r1
   166ec:	ldrb	r0, [r0]
   166f0:	ldr	r1, [sp, #4]
   166f4:	add	r2, r1, #1
   166f8:	str	r2, [sp, #4]
   166fc:	strb	r0, [r1]
   16700:	ldr	r0, [sp, #4]
   16704:	add	r1, r0, #1
   16708:	str	r1, [sp, #4]
   1670c:	movw	r1, #61	; 0x3d
   16710:	strb	r1, [r0]
   16714:	b	1676c <rb_base64_encode+0x278>
   16718:	ldr	r0, [pc, #116]	; 16794 <rb_base64_encode+0x2a0>
   1671c:	add	r0, pc, r0
   16720:	ldr	r1, [sp, #8]
   16724:	ldrb	r1, [r1]
   16728:	and	r1, r1, #3
   1672c:	lsl	r1, r1, #4
   16730:	add	r0, r0, r1
   16734:	ldrb	r0, [r0]
   16738:	ldr	r1, [sp, #4]
   1673c:	add	r2, r1, #1
   16740:	str	r2, [sp, #4]
   16744:	strb	r0, [r1]
   16748:	ldr	r0, [sp, #4]
   1674c:	add	r1, r0, #1
   16750:	str	r1, [sp, #4]
   16754:	movw	r1, #61	; 0x3d
   16758:	strb	r1, [r0]
   1675c:	ldr	r0, [sp, #4]
   16760:	add	r2, r0, #1
   16764:	str	r2, [sp, #4]
   16768:	strb	r1, [r0]
   1676c:	b	16770 <rb_base64_encode+0x27c>
   16770:	ldr	r0, [sp, #4]
   16774:	movw	r1, #0
   16778:	strb	r1, [r0]
   1677c:	ldr	r0, [sp]
   16780:	str	r0, [fp, #-4]
   16784:	ldr	r0, [fp, #-4]
   16788:	mov	sp, fp
   1678c:	pop	{fp, pc}
   16790:	.word	0x0000cf6c
   16794:	.word	0x0000ceb4
   16798:	.word	0x0000cf34
   1679c:	.word	0x0000d054

000167a0 <rb_malloc>:
   167a0:	push	{fp, lr}
   167a4:	mov	fp, sp
   167a8:	sub	sp, sp, #8
   167ac:	str	r0, [sp, #4]
   167b0:	ldr	r1, [sp, #4]
   167b4:	movw	r0, #1
   167b8:	bl	4fb4 <calloc@plt>
   167bc:	str	r0, [sp]
   167c0:	ldr	r0, [sp]
   167c4:	movw	r1, #0
   167c8:	cmp	r0, r1
   167cc:	movw	r0, #0
   167d0:	moveq	r0, #1
   167d4:	mvn	r1, #0
   167d8:	eor	r0, r0, r1
   167dc:	eor	r0, r0, r1
   167e0:	tst	r0, #1
   167e4:	beq	167ec <rb_malloc+0x4c>
   167e8:	bl	5350 <rb_outofmemory@plt>
   167ec:	ldr	r0, [sp]
   167f0:	mov	sp, fp
   167f4:	pop	{fp, pc}

000167f8 <rb_base64_decode>:
   167f8:	push	{fp, lr}
   167fc:	mov	fp, sp
   16800:	sub	sp, sp, #56	; 0x38
   16804:	str	r0, [fp, #-8]
   16808:	str	r1, [fp, #-12]
   1680c:	str	r2, [fp, #-16]
   16810:	ldr	r0, [fp, #-8]
   16814:	str	r0, [fp, #-20]	; 0xffffffec
   16818:	movw	r0, #0
   1681c:	str	r0, [sp, #28]
   16820:	str	r0, [sp, #24]
   16824:	ldr	r0, [fp, #-12]
   16828:	add	r0, r0, #1
   1682c:	bl	167a0 <rb_malloc>
   16830:	str	r0, [sp, #16]
   16834:	ldr	r0, [fp, #-20]	; 0xffffffec
   16838:	add	r1, r0, #1
   1683c:	str	r1, [fp, #-20]	; 0xffffffec
   16840:	ldrb	r0, [r0]
   16844:	str	r0, [fp, #-24]	; 0xffffffe8
   16848:	cmp	r0, #0
   1684c:	movw	r0, #0
   16850:	str	r0, [sp, #12]
   16854:	beq	16878 <rb_base64_decode+0x80>
   16858:	ldr	r0, [fp, #-12]
   1685c:	mvn	r1, #0
   16860:	add	r1, r0, r1
   16864:	str	r1, [fp, #-12]
   16868:	cmp	r0, #0
   1686c:	movw	r0, #0
   16870:	movgt	r0, #1
   16874:	str	r0, [sp, #12]
   16878:	ldr	r0, [sp, #12]
   1687c:	tst	r0, #1
   16880:	beq	169e4 <rb_base64_decode+0x1ec>
   16884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16888:	cmp	r0, #61	; 0x3d
   1688c:	bne	16894 <rb_base64_decode+0x9c>
   16890:	b	169e4 <rb_base64_decode+0x1ec>
   16894:	ldr	r0, [pc, #532]	; 16ab0 <rb_base64_decode+0x2b8>
   16898:	add	r0, pc, r0
   1689c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168a0:	ldr	r2, [pc, #524]	; 16ab4 <rb_base64_decode+0x2bc>
   168a4:	add	r2, pc, r2
   168a8:	add	r1, r2, r1, lsl #1
   168ac:	ldrsh	r1, [r1]
   168b0:	str	r1, [fp, #-24]	; 0xffffffe8
   168b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168b8:	cmp	r1, #0
   168bc:	bge	168c4 <rb_base64_decode+0xcc>
   168c0:	b	16834 <rb_base64_decode+0x3c>
   168c4:	ldr	r0, [sp, #28]
   168c8:	asr	r1, r0, #31
   168cc:	add	r1, r0, r1, lsr #30
   168d0:	bic	r1, r1, #3
   168d4:	sub	r0, r0, r1
   168d8:	cmp	r0, #3
   168dc:	str	r0, [sp, #8]
   168e0:	bhi	169d4 <rb_base64_decode+0x1dc>
   168e4:	add	r0, pc, #8
   168e8:	ldr	r1, [sp, #8]
   168ec:	ldr	r2, [r0, r1, lsl #2]
   168f0:	add	pc, r0, r2
   168f4:	.word	0x00000010
   168f8:	.word	0x0000002c
   168fc:	.word	0x00000074
   16900:	.word	0x000000bc
   16904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16908:	lsl	r0, r0, #2
   1690c:	ldr	r1, [sp, #16]
   16910:	ldr	r2, [sp, #24]
   16914:	add	r1, r1, r2
   16918:	strb	r0, [r1]
   1691c:	b	169d4 <rb_base64_decode+0x1dc>
   16920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16924:	asr	r0, r0, #4
   16928:	ldr	r1, [sp, #16]
   1692c:	ldr	r2, [sp, #24]
   16930:	add	r3, r2, #1
   16934:	str	r3, [sp, #24]
   16938:	add	r1, r1, r2
   1693c:	ldrb	r2, [r1]
   16940:	orr	r0, r2, r0
   16944:	strb	r0, [r1]
   16948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1694c:	and	r0, r0, #15
   16950:	lsl	r0, r0, #4
   16954:	ldr	r1, [sp, #16]
   16958:	ldr	r2, [sp, #24]
   1695c:	add	r1, r1, r2
   16960:	strb	r0, [r1]
   16964:	b	169d4 <rb_base64_decode+0x1dc>
   16968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1696c:	asr	r0, r0, #2
   16970:	ldr	r1, [sp, #16]
   16974:	ldr	r2, [sp, #24]
   16978:	add	r3, r2, #1
   1697c:	str	r3, [sp, #24]
   16980:	add	r1, r1, r2
   16984:	ldrb	r2, [r1]
   16988:	orr	r0, r2, r0
   1698c:	strb	r0, [r1]
   16990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16994:	and	r0, r0, #3
   16998:	lsl	r0, r0, #6
   1699c:	ldr	r1, [sp, #16]
   169a0:	ldr	r2, [sp, #24]
   169a4:	add	r1, r1, r2
   169a8:	strb	r0, [r1]
   169ac:	b	169d4 <rb_base64_decode+0x1dc>
   169b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169b4:	ldr	r1, [sp, #16]
   169b8:	ldr	r2, [sp, #24]
   169bc:	add	r3, r2, #1
   169c0:	str	r3, [sp, #24]
   169c4:	add	r1, r1, r2
   169c8:	ldrb	r2, [r1]
   169cc:	orr	r0, r2, r0
   169d0:	strb	r0, [r1]
   169d4:	ldr	r0, [sp, #28]
   169d8:	add	r0, r0, #1
   169dc:	str	r0, [sp, #28]
   169e0:	b	16834 <rb_base64_decode+0x3c>
   169e4:	ldr	r0, [sp, #24]
   169e8:	str	r0, [sp, #20]
   169ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169f0:	cmp	r0, #61	; 0x3d
   169f4:	bne	16a7c <rb_base64_decode+0x284>
   169f8:	ldr	r0, [sp, #28]
   169fc:	asr	r1, r0, #31
   16a00:	add	r1, r0, r1, lsr #30
   16a04:	bic	r1, r1, #3
   16a08:	sub	r0, r0, r1
   16a0c:	cmp	r0, #1
   16a10:	str	r0, [sp, #4]
   16a14:	beq	16a3c <rb_base64_decode+0x244>
   16a18:	b	16a1c <rb_base64_decode+0x224>
   16a1c:	ldr	r0, [sp, #4]
   16a20:	cmp	r0, #2
   16a24:	beq	16a50 <rb_base64_decode+0x258>
   16a28:	b	16a2c <rb_base64_decode+0x234>
   16a2c:	ldr	r0, [sp, #4]
   16a30:	cmp	r0, #3
   16a34:	beq	16a5c <rb_base64_decode+0x264>
   16a38:	b	16a78 <rb_base64_decode+0x280>
   16a3c:	ldr	r0, [sp, #16]
   16a40:	bl	50c8 <free@plt>
   16a44:	movw	r0, #0
   16a48:	str	r0, [fp, #-4]
   16a4c:	b	16aa4 <rb_base64_decode+0x2ac>
   16a50:	ldr	r0, [sp, #20]
   16a54:	add	r0, r0, #1
   16a58:	str	r0, [sp, #20]
   16a5c:	ldr	r0, [sp, #16]
   16a60:	ldr	r1, [sp, #20]
   16a64:	add	r2, r1, #1
   16a68:	str	r2, [sp, #20]
   16a6c:	add	r0, r0, r1
   16a70:	movw	r1, #0
   16a74:	strb	r1, [r0]
   16a78:	b	16a7c <rb_base64_decode+0x284>
   16a7c:	ldr	r0, [sp, #16]
   16a80:	ldr	r1, [sp, #24]
   16a84:	add	r0, r0, r1
   16a88:	movw	r1, #0
   16a8c:	strb	r1, [r0]
   16a90:	ldr	r0, [sp, #24]
   16a94:	ldr	r1, [fp, #-16]
   16a98:	str	r0, [r1]
   16a9c:	ldr	r0, [sp, #16]
   16aa0:	str	r0, [fp, #-4]
   16aa4:	ldr	r0, [fp, #-4]
   16aa8:	mov	sp, fp
   16aac:	pop	{fp, pc}
   16ab0:	.word	0x0000cd7a
   16ab4:	.word	0x0000cd6e

00016ab8 <rb_outofmemory>:
   16ab8:	push	{fp, lr}
   16abc:	mov	fp, sp
   16ac0:	ldr	r0, [pc, #56]	; 16b00 <rb_outofmemory+0x48>
   16ac4:	add	r0, pc, r0
   16ac8:	ldr	r0, [r0]
   16acc:	cmp	r0, #0
   16ad0:	beq	16ad8 <rb_outofmemory+0x20>
   16ad4:	bl	4d80 <abort@plt>
   16ad8:	ldr	r0, [pc, #40]	; 16b08 <rb_outofmemory+0x50>
   16adc:	add	r0, pc, r0
   16ae0:	ldr	r1, [pc, #36]	; 16b0c <rb_outofmemory+0x54>
   16ae4:	add	r1, pc, r1
   16ae8:	movw	r2, #1
   16aec:	str	r2, [r1]
   16af0:	bl	52e4 <rb_lib_log@plt>
   16af4:	ldr	r0, [pc, #8]	; 16b04 <rb_outofmemory+0x4c>
   16af8:	add	r0, pc, r0
   16afc:	bl	5428 <rb_lib_restart@plt>
   16b00:	.word	0x00030d74
   16b04:	.word	0x0000cd3e
   16b08:	.word	0x0000cd36
   16b0c:	.word	0x00030d54

00016b10 <rb_linebuf_init>:
   16b10:	push	{fp, lr}
   16b14:	mov	fp, sp
   16b18:	sub	sp, sp, #8
   16b1c:	ldr	r1, [pc, #40]	; 16b4c <rb_linebuf_init+0x3c>
   16b20:	add	r2, pc, r1
   16b24:	str	r0, [sp, #4]
   16b28:	ldr	r1, [sp, #4]
   16b2c:	movw	r0, #1036	; 0x40c
   16b30:	bl	547c <rb_bh_create@plt>
   16b34:	ldr	r1, [pc, #12]	; 16b48 <rb_linebuf_init+0x38>
   16b38:	add	r1, pc, r1
   16b3c:	str	r0, [r1]
   16b40:	mov	sp, fp
   16b44:	pop	{fp, pc}
   16b48:	.word	0x00030d04
   16b4c:	.word	0x0000cd24

00016b50 <rb_linebuf_newbuf>:
   16b50:	push	{fp, lr}
   16b54:	mov	fp, sp
   16b58:	sub	sp, sp, #8
   16b5c:	str	r0, [sp, #4]
   16b60:	ldr	r0, [sp, #4]
   16b64:	movw	r1, #0
   16b68:	and	r1, r1, #255	; 0xff
   16b6c:	movw	r2, #28
   16b70:	bl	4ff0 <memset@plt>
   16b74:	mov	sp, fp
   16b78:	pop	{fp, pc}

00016b7c <rb_linebuf_donebuf>:
   16b7c:	push	{fp, lr}
   16b80:	mov	fp, sp
   16b84:	sub	sp, sp, #8
   16b88:	str	r0, [sp, #4]
   16b8c:	ldr	r0, [sp, #4]
   16b90:	ldr	r0, [r0]
   16b94:	movw	r1, #0
   16b98:	cmp	r0, r1
   16b9c:	beq	16bc0 <rb_linebuf_donebuf+0x44>
   16ba0:	ldr	r0, [sp, #4]
   16ba4:	ldr	r1, [sp, #4]
   16ba8:	ldr	r1, [r1]
   16bac:	ldr	r1, [r1]
   16bb0:	ldr	r2, [sp, #4]
   16bb4:	ldr	r2, [r2]
   16bb8:	bl	16bc8 <rb_linebuf_done_line>
   16bbc:	b	16b8c <rb_linebuf_donebuf+0x10>
   16bc0:	mov	sp, fp
   16bc4:	pop	{fp, pc}

00016bc8 <rb_linebuf_done_line>:
   16bc8:	push	{fp, lr}
   16bcc:	mov	fp, sp
   16bd0:	sub	sp, sp, #16
   16bd4:	str	r0, [fp, #-4]
   16bd8:	str	r1, [sp, #8]
   16bdc:	str	r2, [sp, #4]
   16be0:	ldr	r0, [sp, #4]
   16be4:	ldr	r1, [fp, #-4]
   16be8:	bl	17cf0 <rb_dlinkDelete>
   16bec:	ldr	r0, [sp, #4]
   16bf0:	bl	520c <rb_free_rb_dlink_node@plt>
   16bf4:	ldr	r0, [fp, #-4]
   16bf8:	ldr	r1, [r0, #16]
   16bfc:	mvn	r2, #0
   16c00:	add	r1, r1, r2
   16c04:	str	r1, [r0, #16]
   16c08:	ldr	r0, [sp, #8]
   16c0c:	ldr	r0, [r0, #1028]	; 0x404
   16c10:	ldr	r1, [fp, #-4]
   16c14:	ldr	r3, [r1, #12]
   16c18:	sub	r0, r3, r0
   16c1c:	str	r0, [r1, #12]
   16c20:	ldr	r0, [fp, #-4]
   16c24:	ldr	r1, [r0, #24]
   16c28:	add	r1, r1, r2
   16c2c:	str	r1, [r0, #24]
   16c30:	ldr	r0, [sp, #8]
   16c34:	ldr	r1, [r0, #1032]	; 0x408
   16c38:	add	r1, r1, r2
   16c3c:	str	r1, [r0, #1032]	; 0x408
   16c40:	ldr	r0, [sp, #8]
   16c44:	ldr	r0, [r0, #1032]	; 0x408
   16c48:	cmp	r0, #0
   16c4c:	bne	16c70 <rb_linebuf_done_line+0xa8>
   16c50:	ldr	r0, [pc, #32]	; 16c78 <rb_linebuf_done_line+0xb0>
   16c54:	add	r0, pc, r0
   16c58:	ldr	r1, [r0]
   16c5c:	mvn	r2, #0
   16c60:	add	r1, r1, r2
   16c64:	str	r1, [r0]
   16c68:	ldr	r0, [sp, #8]
   16c6c:	bl	17da4 <rb_linebuf_free>
   16c70:	mov	sp, fp
   16c74:	pop	{fp, pc}
   16c78:	.word	0x00032bec

00016c7c <rb_linebuf_parse>:
   16c7c:	push	{fp, lr}
   16c80:	mov	fp, sp
   16c84:	sub	sp, sp, #32
   16c88:	str	r0, [fp, #-8]
   16c8c:	str	r1, [fp, #-12]
   16c90:	str	r2, [sp, #16]
   16c94:	str	r3, [sp, #12]
   16c98:	movw	r0, #0
   16c9c:	str	r0, [sp]
   16ca0:	ldr	r1, [fp, #-8]
   16ca4:	ldr	r1, [r1, #4]
   16ca8:	cmp	r1, r0
   16cac:	beq	16d60 <rb_linebuf_parse+0xe4>
   16cb0:	ldr	r0, [fp, #-8]
   16cb4:	ldr	r0, [r0, #4]
   16cb8:	ldr	r0, [r0]
   16cbc:	str	r0, [sp, #8]
   16cc0:	ldr	r0, [sp, #12]
   16cc4:	cmp	r0, #0
   16cc8:	bne	16ce8 <rb_linebuf_parse+0x6c>
   16ccc:	ldr	r0, [fp, #-8]
   16cd0:	ldr	r1, [sp, #8]
   16cd4:	ldr	r2, [fp, #-12]
   16cd8:	ldr	r3, [sp, #16]
   16cdc:	bl	16e18 <rb_linebuf_copy_line>
   16ce0:	str	r0, [sp, #4]
   16ce4:	b	16d00 <rb_linebuf_parse+0x84>
   16ce8:	ldr	r0, [fp, #-8]
   16cec:	ldr	r1, [sp, #8]
   16cf0:	ldr	r2, [fp, #-12]
   16cf4:	ldr	r3, [sp, #16]
   16cf8:	bl	17144 <rb_linebuf_copy_raw>
   16cfc:	str	r0, [sp, #4]
   16d00:	ldr	r0, [sp, #4]
   16d04:	cmn	r0, #1
   16d08:	bne	16d18 <rb_linebuf_parse+0x9c>
   16d0c:	mvn	r0, #0
   16d10:	str	r0, [fp, #-4]
   16d14:	b	16e0c <rb_linebuf_parse+0x190>
   16d18:	ldr	r0, [sp]
   16d1c:	add	r0, r0, #1
   16d20:	str	r0, [sp]
   16d24:	ldr	r0, [sp, #4]
   16d28:	ldr	r1, [sp, #16]
   16d2c:	cmp	r0, r1
   16d30:	bne	16d40 <rb_linebuf_parse+0xc4>
   16d34:	ldr	r0, [sp]
   16d38:	str	r0, [fp, #-4]
   16d3c:	b	16e0c <rb_linebuf_parse+0x190>
   16d40:	ldr	r0, [sp, #4]
   16d44:	ldr	r1, [sp, #16]
   16d48:	sub	r0, r1, r0
   16d4c:	str	r0, [sp, #16]
   16d50:	ldr	r0, [sp, #4]
   16d54:	ldr	r1, [fp, #-12]
   16d58:	add	r0, r1, r0
   16d5c:	str	r0, [fp, #-12]
   16d60:	b	16d64 <rb_linebuf_parse+0xe8>
   16d64:	ldr	r0, [sp, #16]
   16d68:	cmp	r0, #0
   16d6c:	ble	16e04 <rb_linebuf_parse+0x188>
   16d70:	ldr	r0, [fp, #-8]
   16d74:	bl	1734c <rb_linebuf_new_line>
   16d78:	str	r0, [sp, #8]
   16d7c:	ldr	r0, [sp, #12]
   16d80:	cmp	r0, #0
   16d84:	bne	16da4 <rb_linebuf_parse+0x128>
   16d88:	ldr	r0, [fp, #-8]
   16d8c:	ldr	r1, [sp, #8]
   16d90:	ldr	r2, [fp, #-12]
   16d94:	ldr	r3, [sp, #16]
   16d98:	bl	16e18 <rb_linebuf_copy_line>
   16d9c:	str	r0, [sp, #4]
   16da0:	b	16dbc <rb_linebuf_parse+0x140>
   16da4:	ldr	r0, [fp, #-8]
   16da8:	ldr	r1, [sp, #8]
   16dac:	ldr	r2, [fp, #-12]
   16db0:	ldr	r3, [sp, #16]
   16db4:	bl	17144 <rb_linebuf_copy_raw>
   16db8:	str	r0, [sp, #4]
   16dbc:	ldr	r0, [sp, #4]
   16dc0:	cmn	r0, #1
   16dc4:	bne	16dd4 <rb_linebuf_parse+0x158>
   16dc8:	mvn	r0, #0
   16dcc:	str	r0, [fp, #-4]
   16dd0:	b	16e0c <rb_linebuf_parse+0x190>
   16dd4:	ldr	r0, [sp, #4]
   16dd8:	ldr	r1, [sp, #16]
   16ddc:	sub	r0, r1, r0
   16de0:	str	r0, [sp, #16]
   16de4:	ldr	r0, [sp, #4]
   16de8:	ldr	r1, [fp, #-12]
   16dec:	add	r0, r1, r0
   16df0:	str	r0, [fp, #-12]
   16df4:	ldr	r0, [sp]
   16df8:	add	r0, r0, #1
   16dfc:	str	r0, [sp]
   16e00:	b	16d64 <rb_linebuf_parse+0xe8>
   16e04:	ldr	r0, [sp]
   16e08:	str	r0, [fp, #-4]
   16e0c:	ldr	r0, [fp, #-4]
   16e10:	mov	sp, fp
   16e14:	pop	{fp, pc}

00016e18 <rb_linebuf_copy_line>:
   16e18:	push	{fp, lr}
   16e1c:	mov	fp, sp
   16e20:	sub	sp, sp, #56	; 0x38
   16e24:	str	r0, [fp, #-8]
   16e28:	str	r1, [fp, #-12]
   16e2c:	str	r2, [fp, #-16]
   16e30:	str	r3, [fp, #-20]	; 0xffffffec
   16e34:	movw	r0, #0
   16e38:	str	r0, [fp, #-24]	; 0xffffffe8
   16e3c:	ldr	r1, [fp, #-16]
   16e40:	str	r1, [sp, #28]
   16e44:	ldr	r1, [fp, #-12]
   16e48:	ldr	r2, [fp, #-12]
   16e4c:	ldr	r2, [r2, #1028]	; 0x404
   16e50:	add	r1, r1, r2
   16e54:	str	r1, [sp, #24]
   16e58:	str	r0, [sp, #20]
   16e5c:	ldr	r0, [fp, #-12]
   16e60:	movw	r1, #0
   16e64:	strb	r1, [r0, #1026]	; 0x402
   16e68:	ldr	r0, [fp, #-12]
   16e6c:	ldrb	r0, [r0, #1025]	; 0x401
   16e70:	cmp	r0, #1
   16e74:	bne	16e84 <rb_linebuf_copy_line+0x6c>
   16e78:	movw	r0, #0
   16e7c:	str	r0, [fp, #-4]
   16e80:	b	17138 <rb_linebuf_copy_line+0x320>
   16e84:	ldr	r0, [sp, #28]
   16e88:	ldr	r1, [fp, #-20]	; 0xffffffec
   16e8c:	bl	17dd4 <rb_linebuf_skip_crlf>
   16e90:	str	r0, [fp, #-24]	; 0xffffffe8
   16e94:	str	r0, [sp, #20]
   16e98:	ldr	r0, [sp, #20]
   16e9c:	cmn	r0, #1
   16ea0:	bne	16eb0 <rb_linebuf_copy_line+0x98>
   16ea4:	mvn	r0, #0
   16ea8:	str	r0, [fp, #-4]
   16eac:	b	17138 <rb_linebuf_copy_line+0x320>
   16eb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eb4:	ldr	r1, [fp, #-12]
   16eb8:	ldr	r1, [r1, #1028]	; 0x404
   16ebc:	movw	r2, #1022	; 0x3fe
   16ec0:	sub	r1, r2, r1
   16ec4:	cmp	r0, r1
   16ec8:	ble	16fd8 <rb_linebuf_copy_line+0x1c0>
   16ecc:	ldr	r0, [fp, #-12]
   16ed0:	ldr	r0, [r0, #1028]	; 0x404
   16ed4:	movw	r1, #1022	; 0x3fe
   16ed8:	sub	r0, r1, r0
   16edc:	str	r0, [fp, #-24]	; 0xffffffe8
   16ee0:	ldr	r0, [sp, #24]
   16ee4:	ldr	r2, [sp, #28]
   16ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16eec:	str	r1, [sp, #16]
   16ef0:	mov	r1, r2
   16ef4:	mov	r2, r3
   16ef8:	bl	51dc <memcpy@plt>
   16efc:	ldr	r0, [fp, #-12]
   16f00:	movw	r1, #0
   16f04:	strb	r1, [r0, #1022]	; 0x3fe
   16f08:	ldr	r0, [fp, #-12]
   16f0c:	ldr	r1, [sp, #16]
   16f10:	add	r0, r0, r1
   16f14:	mvn	r2, #0
   16f18:	add	r0, r0, r2
   16f1c:	str	r0, [sp, #24]
   16f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f24:	cmp	r0, #0
   16f28:	movw	r0, #0
   16f2c:	str	r0, [sp, #12]
   16f30:	beq	16f6c <rb_linebuf_copy_line+0x154>
   16f34:	ldr	r0, [sp, #24]
   16f38:	ldrb	r0, [r0]
   16f3c:	cmp	r0, #13
   16f40:	movw	r0, #1
   16f44:	str	r0, [sp, #8]
   16f48:	beq	16f64 <rb_linebuf_copy_line+0x14c>
   16f4c:	ldr	r0, [sp, #24]
   16f50:	ldrb	r0, [r0]
   16f54:	cmp	r0, #10
   16f58:	movw	r0, #0
   16f5c:	moveq	r0, #1
   16f60:	str	r0, [sp, #8]
   16f64:	ldr	r0, [sp, #8]
   16f68:	str	r0, [sp, #12]
   16f6c:	ldr	r0, [sp, #12]
   16f70:	tst	r0, #1
   16f74:	beq	16fa4 <rb_linebuf_copy_line+0x18c>
   16f78:	ldr	r0, [sp, #24]
   16f7c:	movw	r1, #0
   16f80:	strb	r1, [r0]
   16f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f88:	mvn	r1, #0
   16f8c:	add	r0, r0, r1
   16f90:	str	r0, [fp, #-24]	; 0xffffffe8
   16f94:	ldr	r0, [sp, #24]
   16f98:	add	r0, r0, r1
   16f9c:	str	r0, [sp, #24]
   16fa0:	b	16f20 <rb_linebuf_copy_line+0x108>
   16fa4:	ldr	r0, [fp, #-12]
   16fa8:	movw	r1, #1
   16fac:	strb	r1, [r0, #1025]	; 0x401
   16fb0:	ldr	r0, [fp, #-12]
   16fb4:	movw	r1, #1022	; 0x3fe
   16fb8:	str	r1, [r0, #1028]	; 0x404
   16fbc:	ldr	r0, [fp, #-8]
   16fc0:	ldr	r2, [r0, #12]
   16fc4:	add	r1, r2, r1
   16fc8:	str	r1, [r0, #12]
   16fcc:	ldr	r0, [sp, #20]
   16fd0:	str	r0, [fp, #-4]
   16fd4:	b	17138 <rb_linebuf_copy_line+0x320>
   16fd8:	ldr	r0, [sp, #24]
   16fdc:	ldr	r1, [sp, #28]
   16fe0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16fe4:	bl	51dc <memcpy@plt>
   16fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fec:	ldr	r1, [sp, #24]
   16ff0:	add	r0, r1, r0
   16ff4:	str	r0, [sp, #24]
   16ff8:	ldr	r0, [sp, #24]
   16ffc:	movw	r1, #0
   17000:	strb	r1, [r0]
   17004:	ldr	r0, [sp, #24]
   17008:	mvn	r1, #0
   1700c:	add	r0, r0, r1
   17010:	str	r0, [sp, #24]
   17014:	ldr	r0, [sp, #24]
   17018:	ldrb	r0, [r0]
   1701c:	cmp	r0, #13
   17020:	beq	17074 <rb_linebuf_copy_line+0x25c>
   17024:	ldr	r0, [sp, #24]
   17028:	ldrb	r0, [r0]
   1702c:	cmp	r0, #10
   17030:	beq	17074 <rb_linebuf_copy_line+0x25c>
   17034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17038:	ldr	r1, [fp, #-8]
   1703c:	ldr	r2, [r1, #12]
   17040:	add	r0, r2, r0
   17044:	str	r0, [r1, #12]
   17048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1704c:	ldr	r1, [fp, #-12]
   17050:	ldr	r2, [r1, #1028]	; 0x404
   17054:	add	r0, r2, r0
   17058:	str	r0, [r1, #1028]	; 0x404
   1705c:	ldr	r0, [fp, #-12]
   17060:	movw	r1, #0
   17064:	strb	r1, [r0, #1025]	; 0x401
   17068:	ldr	r0, [sp, #20]
   1706c:	str	r0, [fp, #-4]
   17070:	b	17138 <rb_linebuf_copy_line+0x320>
   17074:	b	17078 <rb_linebuf_copy_line+0x260>
   17078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1707c:	cmp	r0, #0
   17080:	movw	r0, #0
   17084:	str	r0, [sp, #4]
   17088:	beq	170c4 <rb_linebuf_copy_line+0x2ac>
   1708c:	ldr	r0, [sp, #24]
   17090:	ldrb	r0, [r0]
   17094:	cmp	r0, #13
   17098:	movw	r0, #1
   1709c:	str	r0, [sp]
   170a0:	beq	170bc <rb_linebuf_copy_line+0x2a4>
   170a4:	ldr	r0, [sp, #24]
   170a8:	ldrb	r0, [r0]
   170ac:	cmp	r0, #10
   170b0:	movw	r0, #0
   170b4:	moveq	r0, #1
   170b8:	str	r0, [sp]
   170bc:	ldr	r0, [sp]
   170c0:	str	r0, [sp, #4]
   170c4:	ldr	r0, [sp, #4]
   170c8:	tst	r0, #1
   170cc:	beq	170fc <rb_linebuf_copy_line+0x2e4>
   170d0:	ldr	r0, [sp, #24]
   170d4:	movw	r1, #0
   170d8:	strb	r1, [r0]
   170dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170e0:	mvn	r1, #0
   170e4:	add	r0, r0, r1
   170e8:	str	r0, [fp, #-24]	; 0xffffffe8
   170ec:	ldr	r0, [sp, #24]
   170f0:	add	r0, r0, r1
   170f4:	str	r0, [sp, #24]
   170f8:	b	17078 <rb_linebuf_copy_line+0x260>
   170fc:	ldr	r0, [fp, #-12]
   17100:	movw	r1, #1
   17104:	strb	r1, [r0, #1025]	; 0x401
   17108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1710c:	ldr	r1, [fp, #-8]
   17110:	ldr	r2, [r1, #12]
   17114:	add	r0, r2, r0
   17118:	str	r0, [r1, #12]
   1711c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17120:	ldr	r1, [fp, #-12]
   17124:	ldr	r2, [r1, #1028]	; 0x404
   17128:	add	r0, r2, r0
   1712c:	str	r0, [r1, #1028]	; 0x404
   17130:	ldr	r0, [sp, #20]
   17134:	str	r0, [fp, #-4]
   17138:	ldr	r0, [fp, #-4]
   1713c:	mov	sp, fp
   17140:	pop	{fp, pc}

00017144 <rb_linebuf_copy_raw>:
   17144:	push	{fp, lr}
   17148:	mov	fp, sp
   1714c:	sub	sp, sp, #40	; 0x28
   17150:	str	r0, [fp, #-8]
   17154:	str	r1, [fp, #-12]
   17158:	str	r2, [fp, #-16]
   1715c:	str	r3, [sp, #20]
   17160:	movw	r0, #0
   17164:	str	r0, [sp, #16]
   17168:	ldr	r1, [fp, #-16]
   1716c:	str	r1, [sp, #12]
   17170:	ldr	r1, [fp, #-12]
   17174:	ldr	r2, [fp, #-12]
   17178:	ldr	r2, [r2, #1028]	; 0x404
   1717c:	add	r1, r1, r2
   17180:	str	r1, [sp, #8]
   17184:	str	r0, [sp, #4]
   17188:	ldr	r0, [fp, #-12]
   1718c:	movw	r1, #1
   17190:	strb	r1, [r0, #1026]	; 0x402
   17194:	ldr	r0, [fp, #-12]
   17198:	ldrb	r0, [r0, #1025]	; 0x401
   1719c:	cmp	r0, #1
   171a0:	bne	171b0 <rb_linebuf_copy_raw+0x6c>
   171a4:	movw	r0, #0
   171a8:	str	r0, [fp, #-4]
   171ac:	b	17340 <rb_linebuf_copy_raw+0x1fc>
   171b0:	ldr	r0, [sp, #12]
   171b4:	ldr	r1, [sp, #20]
   171b8:	bl	17dd4 <rb_linebuf_skip_crlf>
   171bc:	str	r0, [sp, #16]
   171c0:	str	r0, [sp, #4]
   171c4:	ldr	r0, [sp, #4]
   171c8:	cmn	r0, #1
   171cc:	bne	171dc <rb_linebuf_copy_raw+0x98>
   171d0:	mvn	r0, #0
   171d4:	str	r0, [fp, #-4]
   171d8:	b	17340 <rb_linebuf_copy_raw+0x1fc>
   171dc:	ldr	r0, [sp, #16]
   171e0:	ldr	r1, [fp, #-12]
   171e4:	ldr	r1, [r1, #1028]	; 0x404
   171e8:	movw	r2, #1022	; 0x3fe
   171ec:	sub	r1, r2, r1
   171f0:	cmp	r0, r1
   171f4:	ble	17268 <rb_linebuf_copy_raw+0x124>
   171f8:	ldr	r0, [fp, #-12]
   171fc:	ldr	r0, [r0, #1028]	; 0x404
   17200:	movw	r1, #1022	; 0x3fe
   17204:	sub	r0, r1, r0
   17208:	str	r0, [sp, #4]
   1720c:	ldr	r0, [sp, #8]
   17210:	ldr	r2, [sp, #12]
   17214:	ldr	r3, [sp, #4]
   17218:	str	r1, [sp]
   1721c:	mov	r1, r2
   17220:	mov	r2, r3
   17224:	bl	51dc <memcpy@plt>
   17228:	ldr	r0, [fp, #-12]
   1722c:	movw	r1, #0
   17230:	strb	r1, [r0, #1022]	; 0x3fe
   17234:	ldr	r0, [fp, #-12]
   17238:	movw	r1, #1
   1723c:	strb	r1, [r0, #1025]	; 0x401
   17240:	ldr	r0, [fp, #-12]
   17244:	ldr	r1, [sp]
   17248:	str	r1, [r0, #1028]	; 0x404
   1724c:	ldr	r0, [fp, #-8]
   17250:	ldr	r2, [r0, #12]
   17254:	add	r2, r2, r1
   17258:	str	r2, [r0, #12]
   1725c:	ldr	r0, [sp, #4]
   17260:	str	r0, [fp, #-4]
   17264:	b	17340 <rb_linebuf_copy_raw+0x1fc>
   17268:	ldr	r0, [sp, #8]
   1726c:	ldr	r1, [sp, #12]
   17270:	ldr	r2, [sp, #16]
   17274:	bl	51dc <memcpy@plt>
   17278:	ldr	r0, [sp, #16]
   1727c:	ldr	r1, [sp, #8]
   17280:	add	r0, r1, r0
   17284:	str	r0, [sp, #8]
   17288:	ldr	r0, [sp, #8]
   1728c:	movw	r1, #0
   17290:	strb	r1, [r0]
   17294:	ldr	r0, [sp, #8]
   17298:	mvn	r1, #0
   1729c:	add	r0, r0, r1
   172a0:	str	r0, [sp, #8]
   172a4:	ldr	r0, [sp, #8]
   172a8:	ldrb	r0, [r0]
   172ac:	cmp	r0, #13
   172b0:	beq	17304 <rb_linebuf_copy_raw+0x1c0>
   172b4:	ldr	r0, [sp, #8]
   172b8:	ldrb	r0, [r0]
   172bc:	cmp	r0, #10
   172c0:	beq	17304 <rb_linebuf_copy_raw+0x1c0>
   172c4:	ldr	r0, [sp, #16]
   172c8:	ldr	r1, [fp, #-8]
   172cc:	ldr	r2, [r1, #12]
   172d0:	add	r0, r2, r0
   172d4:	str	r0, [r1, #12]
   172d8:	ldr	r0, [sp, #16]
   172dc:	ldr	r1, [fp, #-12]
   172e0:	ldr	r2, [r1, #1028]	; 0x404
   172e4:	add	r0, r2, r0
   172e8:	str	r0, [r1, #1028]	; 0x404
   172ec:	ldr	r0, [fp, #-12]
   172f0:	movw	r1, #0
   172f4:	strb	r1, [r0, #1025]	; 0x401
   172f8:	ldr	r0, [sp, #4]
   172fc:	str	r0, [fp, #-4]
   17300:	b	17340 <rb_linebuf_copy_raw+0x1fc>
   17304:	ldr	r0, [fp, #-12]
   17308:	movw	r1, #1
   1730c:	strb	r1, [r0, #1025]	; 0x401
   17310:	ldr	r0, [sp, #16]
   17314:	ldr	r1, [fp, #-8]
   17318:	ldr	r2, [r1, #12]
   1731c:	add	r0, r2, r0
   17320:	str	r0, [r1, #12]
   17324:	ldr	r0, [sp, #16]
   17328:	ldr	r1, [fp, #-12]
   1732c:	ldr	r2, [r1, #1028]	; 0x404
   17330:	add	r0, r2, r0
   17334:	str	r0, [r1, #1028]	; 0x404
   17338:	ldr	r0, [sp, #4]
   1733c:	str	r0, [fp, #-4]
   17340:	ldr	r0, [fp, #-4]
   17344:	mov	sp, fp
   17348:	pop	{fp, pc}

0001734c <rb_linebuf_new_line>:
   1734c:	push	{fp, lr}
   17350:	mov	fp, sp
   17354:	sub	sp, sp, #24
   17358:	str	r0, [fp, #-8]
   1735c:	bl	17eb0 <rb_linebuf_allocate>
   17360:	str	r0, [sp, #12]
   17364:	ldr	r0, [sp, #12]
   17368:	movw	r1, #0
   1736c:	cmp	r0, r1
   17370:	bne	17380 <rb_linebuf_new_line+0x34>
   17374:	movw	r0, #0
   17378:	str	r0, [fp, #-4]
   1737c:	b	173f0 <rb_linebuf_new_line+0xa4>
   17380:	ldr	r0, [pc, #116]	; 173fc <rb_linebuf_new_line+0xb0>
   17384:	add	r0, pc, r0
   17388:	ldr	r1, [r0]
   1738c:	add	r1, r1, #1
   17390:	str	r1, [r0]
   17394:	ldr	r0, [sp, #12]
   17398:	str	r0, [sp, #8]
   1739c:	bl	5554 <rb_make_rb_dlink_node@plt>
   173a0:	ldr	r2, [fp, #-8]
   173a4:	ldr	r1, [sp, #8]
   173a8:	str	r0, [sp, #4]
   173ac:	mov	r0, r1
   173b0:	ldr	r1, [sp, #4]
   173b4:	bl	176f0 <rb_dlinkAddTail>
   173b8:	ldr	r0, [sp, #12]
   173bc:	ldr	r1, [r0, #1032]	; 0x408
   173c0:	add	r1, r1, #1
   173c4:	str	r1, [r0, #1032]	; 0x408
   173c8:	ldr	r0, [fp, #-8]
   173cc:	ldr	r1, [r0, #16]
   173d0:	add	r1, r1, #1
   173d4:	str	r1, [r0, #16]
   173d8:	ldr	r0, [fp, #-8]
   173dc:	ldr	r1, [r0, #24]
   173e0:	add	r1, r1, #1
   173e4:	str	r1, [r0, #24]
   173e8:	ldr	r0, [sp, #12]
   173ec:	str	r0, [fp, #-4]
   173f0:	ldr	r0, [fp, #-4]
   173f4:	mov	sp, fp
   173f8:	pop	{fp, pc}
   173fc:	.word	0x000324bc

00017400 <rb_linebuf_get>:
   17400:	push	{fp, lr}
   17404:	mov	fp, sp
   17408:	sub	sp, sp, #56	; 0x38
   1740c:	ldr	ip, [fp, #8]
   17410:	str	r0, [fp, #-8]
   17414:	str	r1, [fp, #-12]
   17418:	str	r2, [fp, #-16]
   1741c:	str	r3, [fp, #-20]	; 0xffffffec
   17420:	ldr	r0, [fp, #-8]
   17424:	ldr	r0, [r0]
   17428:	movw	r1, #0
   1742c:	cmp	r0, r1
   17430:	bne	17440 <rb_linebuf_get+0x40>
   17434:	movw	r0, #0
   17438:	str	r0, [fp, #-4]
   1743c:	b	17624 <rb_linebuf_get+0x224>
   17440:	ldr	r0, [fp, #-8]
   17444:	ldr	r0, [r0]
   17448:	ldr	r0, [r0]
   1744c:	str	r0, [fp, #-24]	; 0xffffffe8
   17450:	ldr	r0, [fp, #-20]	; 0xffffffec
   17454:	cmp	r0, #0
   17458:	bne	17478 <rb_linebuf_get+0x78>
   1745c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17460:	ldrb	r0, [r0, #1025]	; 0x401
   17464:	cmp	r0, #0
   17468:	bne	17478 <rb_linebuf_get+0x78>
   1746c:	movw	r0, #0
   17470:	str	r0, [fp, #-4]
   17474:	b	17624 <rb_linebuf_get+0x224>
   17478:	ldr	r0, [fp, #-16]
   1747c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17480:	ldr	r1, [r1, #1028]	; 0x404
   17484:	cmp	r0, r1
   17488:	bge	1749c <rb_linebuf_get+0x9c>
   1748c:	ldr	r0, [fp, #-16]
   17490:	sub	r0, r0, #1
   17494:	str	r0, [sp, #28]
   17498:	b	174a8 <rb_linebuf_get+0xa8>
   1749c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174a0:	ldr	r0, [r0, #1028]	; 0x404
   174a4:	str	r0, [sp, #28]
   174a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174ac:	str	r0, [sp, #24]
   174b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174b4:	ldrb	r0, [r0, #1026]	; 0x402
   174b8:	cmp	r0, #0
   174bc:	beq	175d8 <rb_linebuf_get+0x1d8>
   174c0:	ldr	r0, [fp, #8]
   174c4:	cmp	r0, #0
   174c8:	bne	175d8 <rb_linebuf_get+0x1d8>
   174cc:	b	174d0 <rb_linebuf_get+0xd0>
   174d0:	ldr	r0, [sp, #28]
   174d4:	cmp	r0, #0
   174d8:	movw	r0, #0
   174dc:	str	r0, [sp, #16]
   174e0:	beq	1751c <rb_linebuf_get+0x11c>
   174e4:	ldr	r0, [sp, #24]
   174e8:	ldrb	r0, [r0]
   174ec:	cmp	r0, #13
   174f0:	movw	r0, #1
   174f4:	str	r0, [sp, #12]
   174f8:	beq	17514 <rb_linebuf_get+0x114>
   174fc:	ldr	r0, [sp, #24]
   17500:	ldrb	r0, [r0]
   17504:	cmp	r0, #10
   17508:	movw	r0, #0
   1750c:	moveq	r0, #1
   17510:	str	r0, [sp, #12]
   17514:	ldr	r0, [sp, #12]
   17518:	str	r0, [sp, #16]
   1751c:	ldr	r0, [sp, #16]
   17520:	tst	r0, #1
   17524:	beq	17548 <rb_linebuf_get+0x148>
   17528:	ldr	r0, [sp, #24]
   1752c:	add	r0, r0, #1
   17530:	str	r0, [sp, #24]
   17534:	ldr	r0, [sp, #28]
   17538:	mvn	r1, #0
   1753c:	add	r0, r0, r1
   17540:	str	r0, [sp, #28]
   17544:	b	174d0 <rb_linebuf_get+0xd0>
   17548:	ldr	r0, [sp, #24]
   1754c:	ldr	r1, [sp, #28]
   17550:	sub	r1, r1, #1
   17554:	add	r0, r0, r1
   17558:	str	r0, [sp, #20]
   1755c:	ldr	r0, [sp, #28]
   17560:	cmp	r0, #0
   17564:	movw	r0, #0
   17568:	str	r0, [sp, #8]
   1756c:	beq	175a8 <rb_linebuf_get+0x1a8>
   17570:	ldr	r0, [sp, #20]
   17574:	ldrb	r0, [r0]
   17578:	cmp	r0, #13
   1757c:	movw	r0, #1
   17580:	str	r0, [sp, #4]
   17584:	beq	175a0 <rb_linebuf_get+0x1a0>
   17588:	ldr	r0, [sp, #20]
   1758c:	ldrb	r0, [r0]
   17590:	cmp	r0, #10
   17594:	movw	r0, #0
   17598:	moveq	r0, #1
   1759c:	str	r0, [sp, #4]
   175a0:	ldr	r0, [sp, #4]
   175a4:	str	r0, [sp, #8]
   175a8:	ldr	r0, [sp, #8]
   175ac:	tst	r0, #1
   175b0:	beq	175d4 <rb_linebuf_get+0x1d4>
   175b4:	ldr	r0, [sp, #20]
   175b8:	mvn	r1, #0
   175bc:	add	r0, r0, r1
   175c0:	str	r0, [sp, #20]
   175c4:	ldr	r0, [sp, #28]
   175c8:	add	r0, r0, r1
   175cc:	str	r0, [sp, #28]
   175d0:	b	1755c <rb_linebuf_get+0x15c>
   175d4:	b	175d8 <rb_linebuf_get+0x1d8>
   175d8:	ldr	r0, [fp, #-12]
   175dc:	ldr	r1, [sp, #24]
   175e0:	ldr	r2, [sp, #28]
   175e4:	bl	51dc <memcpy@plt>
   175e8:	ldr	r0, [fp, #8]
   175ec:	cmp	r0, #0
   175f0:	bne	17608 <rb_linebuf_get+0x208>
   175f4:	ldr	r0, [fp, #-12]
   175f8:	ldr	r1, [sp, #28]
   175fc:	add	r0, r0, r1
   17600:	movw	r1, #0
   17604:	strb	r1, [r0]
   17608:	ldr	r0, [fp, #-8]
   1760c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17610:	ldr	r2, [fp, #-8]
   17614:	ldr	r2, [r2]
   17618:	bl	16bc8 <rb_linebuf_done_line>
   1761c:	ldr	r0, [sp, #28]
   17620:	str	r0, [fp, #-4]
   17624:	ldr	r0, [fp, #-4]
   17628:	mov	sp, fp
   1762c:	pop	{fp, pc}

00017630 <rb_linebuf_attach>:
   17630:	push	{fp, lr}
   17634:	mov	fp, sp
   17638:	sub	sp, sp, #24
   1763c:	str	r0, [fp, #-4]
   17640:	str	r1, [fp, #-8]
   17644:	ldr	r0, [fp, #-8]
   17648:	ldr	r0, [r0]
   1764c:	str	r0, [sp, #12]
   17650:	ldr	r0, [sp, #12]
   17654:	movw	r1, #0
   17658:	cmp	r0, r1
   1765c:	beq	176e8 <rb_linebuf_attach+0xb8>
   17660:	ldr	r0, [sp, #12]
   17664:	ldr	r0, [r0]
   17668:	str	r0, [sp, #8]
   1766c:	ldr	r0, [sp, #8]
   17670:	str	r0, [sp, #4]
   17674:	bl	5554 <rb_make_rb_dlink_node@plt>
   17678:	ldr	r2, [fp, #-4]
   1767c:	ldr	r1, [sp, #4]
   17680:	str	r0, [sp]
   17684:	mov	r0, r1
   17688:	ldr	r1, [sp]
   1768c:	bl	176f0 <rb_dlinkAddTail>
   17690:	ldr	r0, [fp, #-4]
   17694:	ldr	r1, [r0, #16]
   17698:	add	r1, r1, #1
   1769c:	str	r1, [r0, #16]
   176a0:	ldr	r0, [sp, #8]
   176a4:	ldr	r0, [r0, #1028]	; 0x404
   176a8:	ldr	r1, [fp, #-4]
   176ac:	ldr	r2, [r1, #12]
   176b0:	add	r0, r2, r0
   176b4:	str	r0, [r1, #12]
   176b8:	ldr	r0, [fp, #-4]
   176bc:	ldr	r1, [r0, #24]
   176c0:	add	r1, r1, #1
   176c4:	str	r1, [r0, #24]
   176c8:	ldr	r0, [sp, #8]
   176cc:	ldr	r1, [r0, #1032]	; 0x408
   176d0:	add	r1, r1, #1
   176d4:	str	r1, [r0, #1032]	; 0x408
   176d8:	ldr	r0, [sp, #12]
   176dc:	ldr	r0, [r0, #8]
   176e0:	str	r0, [sp, #12]
   176e4:	b	17650 <rb_linebuf_attach+0x20>
   176e8:	mov	sp, fp
   176ec:	pop	{fp, pc}

000176f0 <rb_dlinkAddTail>:
   176f0:	sub	sp, sp, #12
   176f4:	str	r0, [sp, #8]
   176f8:	str	r1, [sp, #4]
   176fc:	str	r2, [sp]
   17700:	ldr	r0, [sp, #8]
   17704:	ldr	r1, [sp, #4]
   17708:	str	r0, [r1]
   1770c:	ldr	r0, [sp, #4]
   17710:	movw	r1, #0
   17714:	str	r1, [r0, #8]
   17718:	ldr	r0, [sp]
   1771c:	ldr	r0, [r0, #4]
   17720:	ldr	r2, [sp, #4]
   17724:	str	r0, [r2, #4]
   17728:	ldr	r0, [sp]
   1772c:	ldr	r0, [r0, #4]
   17730:	cmp	r0, r1
   17734:	beq	1774c <rb_dlinkAddTail+0x5c>
   17738:	ldr	r0, [sp, #4]
   1773c:	ldr	r1, [sp]
   17740:	ldr	r1, [r1, #4]
   17744:	str	r0, [r1, #8]
   17748:	b	17770 <rb_dlinkAddTail+0x80>
   1774c:	ldr	r0, [sp]
   17750:	ldr	r0, [r0]
   17754:	movw	r1, #0
   17758:	cmp	r0, r1
   1775c:	bne	1776c <rb_dlinkAddTail+0x7c>
   17760:	ldr	r0, [sp, #4]
   17764:	ldr	r1, [sp]
   17768:	str	r0, [r1]
   1776c:	b	17770 <rb_dlinkAddTail+0x80>
   17770:	ldr	r0, [sp, #4]
   17774:	ldr	r1, [sp]
   17778:	str	r0, [r1, #4]
   1777c:	ldr	r0, [sp]
   17780:	ldr	r1, [r0, #8]
   17784:	add	r1, r1, #1
   17788:	str	r1, [r0, #8]
   1778c:	add	sp, sp, #12
   17790:	bx	lr

00017794 <rb_linebuf_put>:
   17794:	push	{fp, lr}
   17798:	mov	fp, sp
   1779c:	sub	sp, sp, #24
   177a0:	str	r0, [fp, #-4]
   177a4:	str	r1, [fp, #-8]
   177a8:	movw	r0, #0
   177ac:	str	r0, [sp, #8]
   177b0:	ldr	r1, [fp, #-4]
   177b4:	ldr	r1, [r1, #4]
   177b8:	cmp	r1, r0
   177bc:	beq	177d0 <rb_linebuf_put+0x3c>
   177c0:	ldr	r0, [fp, #-4]
   177c4:	ldr	r0, [r0, #4]
   177c8:	ldr	r0, [r0]
   177cc:	str	r0, [sp, #12]
   177d0:	ldr	r0, [fp, #-4]
   177d4:	bl	1734c <rb_linebuf_new_line>
   177d8:	str	r0, [sp, #12]
   177dc:	ldr	r0, [sp, #12]
   177e0:	ldr	r2, [fp, #-8]
   177e4:	movw	r1, #1023	; 0x3ff
   177e8:	bl	505c <rb_fsnprint@plt>
   177ec:	str	r0, [sp, #4]
   177f0:	ldr	r0, [sp, #4]
   177f4:	cmp	r0, #0
   177f8:	ble	1780c <rb_linebuf_put+0x78>
   177fc:	ldr	r0, [sp, #4]
   17800:	ldr	r1, [sp, #8]
   17804:	add	r0, r1, r0
   17808:	str	r0, [sp, #8]
   1780c:	ldr	r0, [sp, #8]
   17810:	movw	r1, #1022	; 0x3fe
   17814:	cmp	r0, r1
   17818:	bls	17824 <rb_linebuf_put+0x90>
   1781c:	movw	r0, #1022	; 0x3fe
   17820:	str	r0, [sp, #8]
   17824:	ldr	r0, [sp, #12]
   17828:	ldr	r1, [sp, #8]
   1782c:	add	r2, r1, #1
   17830:	str	r2, [sp, #8]
   17834:	add	r0, r0, r1
   17838:	movw	r1, #13
   1783c:	strb	r1, [r0]
   17840:	ldr	r0, [sp, #12]
   17844:	ldr	r1, [sp, #8]
   17848:	add	r2, r1, #1
   1784c:	str	r2, [sp, #8]
   17850:	add	r0, r0, r1
   17854:	movw	r1, #10
   17858:	strb	r1, [r0]
   1785c:	ldr	r0, [sp, #12]
   17860:	ldr	r1, [sp, #8]
   17864:	add	r0, r0, r1
   17868:	movw	r1, #0
   1786c:	strb	r1, [r0]
   17870:	ldr	r0, [sp, #12]
   17874:	movw	r1, #1
   17878:	strb	r1, [r0, #1025]	; 0x401
   1787c:	ldr	r0, [sp, #8]
   17880:	ldr	r1, [sp, #12]
   17884:	str	r0, [r1, #1028]	; 0x404
   17888:	ldr	r0, [sp, #8]
   1788c:	ldr	r1, [fp, #-4]
   17890:	ldr	r2, [r1, #12]
   17894:	add	r0, r2, r0
   17898:	str	r0, [r1, #12]
   1789c:	mov	sp, fp
   178a0:	pop	{fp, pc}

000178a4 <rb_linebuf_flush>:
   178a4:	push	{fp, lr}
   178a8:	mov	fp, sp
   178ac:	sub	sp, sp, #40	; 0x28
   178b0:	str	r0, [fp, #-8]
   178b4:	str	r1, [fp, #-12]
   178b8:	ldr	r0, [fp, #-8]
   178bc:	bl	4e70 <rb_fd_ssl@plt>
   178c0:	cmp	r0, #0
   178c4:	bne	17b7c <rb_linebuf_flush+0x2d8>
   178c8:	ldr	r0, [pc, #960]	; 17c90 <rb_linebuf_flush+0x3ec>
   178cc:	add	r0, pc, r0
   178d0:	movw	r1, #0
   178d4:	str	r1, [sp, #12]
   178d8:	movw	r2, #0
   178dc:	and	r2, r2, #255	; 0xff
   178e0:	str	r1, [sp]
   178e4:	mov	r1, r2
   178e8:	movw	r2, #8192	; 0x2000
   178ec:	bl	4ff0 <memset@plt>
   178f0:	ldr	r0, [fp, #-12]
   178f4:	ldr	r0, [r0]
   178f8:	ldr	r1, [sp]
   178fc:	cmp	r0, r1
   17900:	bne	1791c <rb_linebuf_flush+0x78>
   17904:	bl	56c8 <__errno_location@plt>
   17908:	movw	r1, #11
   1790c:	str	r1, [r0]
   17910:	mvn	r0, #0
   17914:	str	r0, [fp, #-4]
   17918:	b	17c84 <rb_linebuf_flush+0x3e0>
   1791c:	ldr	r0, [fp, #-12]
   17920:	ldr	r0, [r0]
   17924:	str	r0, [sp, #16]
   17928:	ldr	r0, [sp, #16]
   1792c:	ldr	r0, [r0]
   17930:	str	r0, [fp, #-16]
   17934:	ldr	r0, [fp, #-16]
   17938:	movw	r1, #1025	; 0x401
   1793c:	add	r0, r0, r1
   17940:	ldrsb	r0, [r0]
   17944:	cmp	r0, #0
   17948:	bne	17964 <rb_linebuf_flush+0xc0>
   1794c:	bl	56c8 <__errno_location@plt>
   17950:	movw	r1, #11
   17954:	str	r1, [r0]
   17958:	mvn	r0, #0
   1795c:	str	r0, [fp, #-4]
   17960:	b	17c84 <rb_linebuf_flush+0x3e0>
   17964:	ldr	r0, [pc, #808]	; 17c94 <rb_linebuf_flush+0x3f0>
   17968:	add	r0, pc, r0
   1796c:	ldr	r1, [fp, #-16]
   17970:	ldr	r2, [fp, #-12]
   17974:	ldr	r2, [r2, #20]
   17978:	add	r1, r1, r2
   1797c:	ldr	r2, [sp, #12]
   17980:	ldr	r3, [pc, #792]	; 17ca0 <rb_linebuf_flush+0x3fc>
   17984:	add	r3, pc, r3
   17988:	str	r1, [r3, r2, lsl #3]
   1798c:	ldr	r1, [fp, #-16]
   17990:	ldr	r1, [r1, #1028]	; 0x404
   17994:	ldr	r2, [fp, #-12]
   17998:	ldr	r2, [r2, #20]
   1799c:	sub	r1, r1, r2
   179a0:	ldr	r2, [sp, #12]
   179a4:	add	ip, r2, #1
   179a8:	str	ip, [sp, #12]
   179ac:	add	r2, r3, r2, lsl #3
   179b0:	str	r1, [r2, #4]
   179b4:	ldr	r1, [sp, #16]
   179b8:	ldr	r1, [r1, #8]
   179bc:	str	r1, [sp, #16]
   179c0:	ldr	r0, [sp, #16]
   179c4:	movw	r1, #0
   179c8:	cmp	r0, r1
   179cc:	bne	179d4 <rb_linebuf_flush+0x130>
   179d0:	b	17a4c <rb_linebuf_flush+0x1a8>
   179d4:	ldr	r0, [sp, #16]
   179d8:	ldr	r0, [r0]
   179dc:	str	r0, [fp, #-16]
   179e0:	ldr	r0, [fp, #-16]
   179e4:	movw	r1, #1025	; 0x401
   179e8:	add	r0, r0, r1
   179ec:	ldrsb	r0, [r0]
   179f0:	cmp	r0, #0
   179f4:	bne	179fc <rb_linebuf_flush+0x158>
   179f8:	b	17a4c <rb_linebuf_flush+0x1a8>
   179fc:	ldr	r0, [pc, #660]	; 17c98 <rb_linebuf_flush+0x3f4>
   17a00:	add	r0, pc, r0
   17a04:	ldr	r1, [fp, #-16]
   17a08:	ldr	r2, [sp, #12]
   17a0c:	ldr	r3, [pc, #656]	; 17ca4 <rb_linebuf_flush+0x400>
   17a10:	add	r3, pc, r3
   17a14:	str	r1, [r3, r2, lsl #3]
   17a18:	ldr	r1, [fp, #-16]
   17a1c:	ldr	r1, [r1, #1028]	; 0x404
   17a20:	ldr	r2, [sp, #12]
   17a24:	add	r2, r3, r2, lsl #3
   17a28:	str	r1, [r2, #4]
   17a2c:	ldr	r1, [sp, #16]
   17a30:	ldr	r1, [r1, #8]
   17a34:	str	r1, [sp, #16]
   17a38:	ldr	r0, [sp, #12]
   17a3c:	add	r0, r0, #1
   17a40:	str	r0, [sp, #12]
   17a44:	cmp	r0, #1024	; 0x400
   17a48:	blt	179c0 <rb_linebuf_flush+0x11c>
   17a4c:	ldr	r0, [sp, #12]
   17a50:	cmp	r0, #0
   17a54:	bne	17a70 <rb_linebuf_flush+0x1cc>
   17a58:	bl	56c8 <__errno_location@plt>
   17a5c:	movw	r1, #11
   17a60:	str	r1, [r0]
   17a64:	mvn	r0, #0
   17a68:	str	r0, [fp, #-4]
   17a6c:	b	17c84 <rb_linebuf_flush+0x3e0>
   17a70:	ldr	r0, [pc, #548]	; 17c9c <rb_linebuf_flush+0x3f8>
   17a74:	add	r1, pc, r0
   17a78:	ldr	r0, [fp, #-8]
   17a7c:	ldr	r2, [sp, #12]
   17a80:	bl	54a0 <rb_writev@plt>
   17a84:	str	r0, [sp, #20]
   17a88:	str	r0, [sp, #4]
   17a8c:	ldr	r0, [sp, #20]
   17a90:	cmp	r0, #0
   17a94:	bgt	17aa4 <rb_linebuf_flush+0x200>
   17a98:	ldr	r0, [sp, #20]
   17a9c:	str	r0, [fp, #-4]
   17aa0:	b	17c84 <rb_linebuf_flush+0x3e0>
   17aa4:	ldr	r0, [fp, #-12]
   17aa8:	ldr	r0, [r0]
   17aac:	str	r0, [sp, #16]
   17ab0:	movw	r0, #0
   17ab4:	str	r0, [sp, #8]
   17ab8:	ldr	r0, [sp, #8]
   17abc:	ldr	r1, [sp, #12]
   17ac0:	cmp	r0, r1
   17ac4:	bge	17b70 <rb_linebuf_flush+0x2cc>
   17ac8:	ldr	r0, [sp, #16]
   17acc:	ldr	r0, [r0]
   17ad0:	str	r0, [fp, #-16]
   17ad4:	ldr	r0, [sp, #4]
   17ad8:	ldr	r1, [fp, #-16]
   17adc:	ldr	r1, [r1, #1028]	; 0x404
   17ae0:	ldr	r2, [fp, #-12]
   17ae4:	ldr	r2, [r2, #20]
   17ae8:	sub	r1, r1, r2
   17aec:	cmp	r0, r1
   17af0:	blt	17b44 <rb_linebuf_flush+0x2a0>
   17af4:	ldr	r0, [fp, #-16]
   17af8:	ldr	r0, [r0, #1028]	; 0x404
   17afc:	ldr	r1, [fp, #-12]
   17b00:	ldr	r1, [r1, #20]
   17b04:	sub	r0, r0, r1
   17b08:	ldr	r1, [sp, #4]
   17b0c:	sub	r0, r1, r0
   17b10:	str	r0, [sp, #4]
   17b14:	ldr	r0, [sp, #16]
   17b18:	ldr	r0, [r0, #8]
   17b1c:	str	r0, [sp, #16]
   17b20:	ldr	r0, [fp, #-12]
   17b24:	ldr	r1, [fp, #-16]
   17b28:	ldr	r2, [fp, #-12]
   17b2c:	ldr	r2, [r2]
   17b30:	bl	16bc8 <rb_linebuf_done_line>
   17b34:	ldr	r0, [fp, #-12]
   17b38:	movw	r1, #0
   17b3c:	str	r1, [r0, #20]
   17b40:	b	17b5c <rb_linebuf_flush+0x2b8>
   17b44:	ldr	r0, [sp, #4]
   17b48:	ldr	r1, [fp, #-12]
   17b4c:	ldr	r2, [r1, #20]
   17b50:	add	r0, r2, r0
   17b54:	str	r0, [r1, #20]
   17b58:	b	17b70 <rb_linebuf_flush+0x2cc>
   17b5c:	b	17b60 <rb_linebuf_flush+0x2bc>
   17b60:	ldr	r0, [sp, #8]
   17b64:	add	r0, r0, #1
   17b68:	str	r0, [sp, #8]
   17b6c:	b	17ab8 <rb_linebuf_flush+0x214>
   17b70:	ldr	r0, [sp, #20]
   17b74:	str	r0, [fp, #-4]
   17b78:	b	17c84 <rb_linebuf_flush+0x3e0>
   17b7c:	ldr	r0, [fp, #-12]
   17b80:	ldr	r0, [r0]
   17b84:	movw	r1, #0
   17b88:	cmp	r0, r1
   17b8c:	bne	17ba8 <rb_linebuf_flush+0x304>
   17b90:	bl	56c8 <__errno_location@plt>
   17b94:	movw	r1, #11
   17b98:	str	r1, [r0]
   17b9c:	mvn	r0, #0
   17ba0:	str	r0, [fp, #-4]
   17ba4:	b	17c84 <rb_linebuf_flush+0x3e0>
   17ba8:	ldr	r0, [fp, #-12]
   17bac:	ldr	r0, [r0]
   17bb0:	ldr	r0, [r0]
   17bb4:	str	r0, [fp, #-16]
   17bb8:	ldr	r0, [fp, #-16]
   17bbc:	movw	r1, #1025	; 0x401
   17bc0:	add	r0, r0, r1
   17bc4:	ldrsb	r0, [r0]
   17bc8:	cmp	r0, #0
   17bcc:	bne	17be8 <rb_linebuf_flush+0x344>
   17bd0:	bl	56c8 <__errno_location@plt>
   17bd4:	movw	r1, #11
   17bd8:	str	r1, [r0]
   17bdc:	mvn	r0, #0
   17be0:	str	r0, [fp, #-4]
   17be4:	b	17c84 <rb_linebuf_flush+0x3e0>
   17be8:	ldr	r0, [fp, #-8]
   17bec:	ldr	r1, [fp, #-16]
   17bf0:	ldr	r2, [fp, #-12]
   17bf4:	ldr	r2, [r2, #20]
   17bf8:	add	r1, r1, r2
   17bfc:	ldr	r2, [fp, #-16]
   17c00:	ldr	r2, [r2, #1028]	; 0x404
   17c04:	ldr	r3, [fp, #-12]
   17c08:	ldr	r3, [r3, #20]
   17c0c:	sub	r2, r2, r3
   17c10:	bl	5020 <rb_write@plt>
   17c14:	str	r0, [sp, #20]
   17c18:	ldr	r0, [sp, #20]
   17c1c:	cmp	r0, #0
   17c20:	bgt	17c30 <rb_linebuf_flush+0x38c>
   17c24:	ldr	r0, [sp, #20]
   17c28:	str	r0, [fp, #-4]
   17c2c:	b	17c84 <rb_linebuf_flush+0x3e0>
   17c30:	ldr	r0, [sp, #20]
   17c34:	ldr	r1, [fp, #-12]
   17c38:	ldr	r2, [r1, #20]
   17c3c:	add	r0, r2, r0
   17c40:	str	r0, [r1, #20]
   17c44:	ldr	r0, [fp, #-12]
   17c48:	ldr	r0, [r0, #20]
   17c4c:	ldr	r1, [fp, #-16]
   17c50:	ldr	r1, [r1, #1028]	; 0x404
   17c54:	cmp	r0, r1
   17c58:	bne	17c7c <rb_linebuf_flush+0x3d8>
   17c5c:	ldr	r0, [fp, #-12]
   17c60:	movw	r1, #0
   17c64:	str	r1, [r0, #20]
   17c68:	ldr	r0, [fp, #-12]
   17c6c:	ldr	r1, [fp, #-16]
   17c70:	ldr	r2, [fp, #-12]
   17c74:	ldr	r2, [r2]
   17c78:	bl	16bc8 <rb_linebuf_done_line>
   17c7c:	ldr	r0, [sp, #20]
   17c80:	str	r0, [fp, #-4]
   17c84:	ldr	r0, [fp, #-4]
   17c88:	mov	sp, fp
   17c8c:	pop	{fp, pc}
   17c90:	.word	0x0002ff74
   17c94:	.word	0x0002fed8
   17c98:	.word	0x0002fe40
   17c9c:	.word	0x0002fdcc
   17ca0:	.word	0x0002febc
   17ca4:	.word	0x0002fe30

00017ca8 <rb_count_rb_linebuf_memory>:
   17ca8:	push	{fp, lr}
   17cac:	mov	fp, sp
   17cb0:	sub	sp, sp, #16
   17cb4:	ldr	r2, [pc, #48]	; 17cec <rb_count_rb_linebuf_memory+0x44>
   17cb8:	add	r2, pc, r2
   17cbc:	str	r0, [fp, #-4]
   17cc0:	str	r1, [sp, #8]
   17cc4:	ldr	r0, [r2]
   17cc8:	ldr	r1, [fp, #-4]
   17ccc:	ldr	r3, [sp, #8]
   17cd0:	movw	r2, #0
   17cd4:	str	r2, [sp, #4]
   17cd8:	ldr	ip, [sp, #4]
   17cdc:	str	ip, [sp]
   17ce0:	bl	56ec <rb_bh_usage@plt>
   17ce4:	mov	sp, fp
   17ce8:	pop	{fp, pc}
   17cec:	.word	0x0002fb84

00017cf0 <rb_dlinkDelete>:
   17cf0:	sub	sp, sp, #8
   17cf4:	str	r0, [sp, #4]
   17cf8:	str	r1, [sp]
   17cfc:	ldr	r0, [sp, #4]
   17d00:	ldr	r0, [r0, #8]
   17d04:	movw	r1, #0
   17d08:	cmp	r0, r1
   17d0c:	beq	17d28 <rb_dlinkDelete+0x38>
   17d10:	ldr	r0, [sp, #4]
   17d14:	ldr	r0, [r0, #4]
   17d18:	ldr	r1, [sp, #4]
   17d1c:	ldr	r1, [r1, #8]
   17d20:	str	r0, [r1, #4]
   17d24:	b	17d38 <rb_dlinkDelete+0x48>
   17d28:	ldr	r0, [sp, #4]
   17d2c:	ldr	r0, [r0, #4]
   17d30:	ldr	r1, [sp]
   17d34:	str	r0, [r1, #4]
   17d38:	ldr	r0, [sp, #4]
   17d3c:	ldr	r0, [r0, #4]
   17d40:	movw	r1, #0
   17d44:	cmp	r0, r1
   17d48:	beq	17d64 <rb_dlinkDelete+0x74>
   17d4c:	ldr	r0, [sp, #4]
   17d50:	ldr	r0, [r0, #8]
   17d54:	ldr	r1, [sp, #4]
   17d58:	ldr	r1, [r1, #4]
   17d5c:	str	r0, [r1, #8]
   17d60:	b	17d74 <rb_dlinkDelete+0x84>
   17d64:	ldr	r0, [sp, #4]
   17d68:	ldr	r0, [r0, #8]
   17d6c:	ldr	r1, [sp]
   17d70:	str	r0, [r1]
   17d74:	ldr	r0, [sp, #4]
   17d78:	movw	r1, #0
   17d7c:	str	r1, [r0, #4]
   17d80:	ldr	r0, [sp, #4]
   17d84:	str	r1, [r0, #8]
   17d88:	ldr	r0, [sp]
   17d8c:	ldr	r1, [r0, #8]
   17d90:	mvn	r2, #0
   17d94:	add	r1, r1, r2
   17d98:	str	r1, [r0, #8]
   17d9c:	add	sp, sp, #8
   17da0:	bx	lr

00017da4 <rb_linebuf_free>:
   17da4:	push	{fp, lr}
   17da8:	mov	fp, sp
   17dac:	sub	sp, sp, #8
   17db0:	ldr	r1, [pc, #24]	; 17dd0 <rb_linebuf_free+0x2c>
   17db4:	add	r1, pc, r1
   17db8:	str	r0, [sp, #4]
   17dbc:	ldr	r0, [r1]
   17dc0:	ldr	r1, [sp, #4]
   17dc4:	bl	529c <rb_bh_free@plt>
   17dc8:	mov	sp, fp
   17dcc:	pop	{fp, pc}
   17dd0:	.word	0x0002fa88

00017dd4 <rb_linebuf_skip_crlf>:
   17dd4:	sub	sp, sp, #12
   17dd8:	str	r0, [sp, #8]
   17ddc:	str	r1, [sp, #4]
   17de0:	ldr	r0, [sp, #4]
   17de4:	str	r0, [sp]
   17de8:	ldr	r0, [sp, #4]
   17dec:	cmp	r0, #0
   17df0:	beq	17e44 <rb_linebuf_skip_crlf+0x70>
   17df4:	ldr	r0, [sp, #8]
   17df8:	ldrb	r0, [r0]
   17dfc:	cmp	r0, #13
   17e00:	bne	17e08 <rb_linebuf_skip_crlf+0x34>
   17e04:	b	17e44 <rb_linebuf_skip_crlf+0x70>
   17e08:	ldr	r0, [sp, #8]
   17e0c:	ldrb	r0, [r0]
   17e10:	cmp	r0, #10
   17e14:	bne	17e1c <rb_linebuf_skip_crlf+0x48>
   17e18:	b	17e44 <rb_linebuf_skip_crlf+0x70>
   17e1c:	b	17e20 <rb_linebuf_skip_crlf+0x4c>
   17e20:	b	17e24 <rb_linebuf_skip_crlf+0x50>
   17e24:	ldr	r0, [sp, #4]
   17e28:	mvn	r1, #0
   17e2c:	add	r0, r0, r1
   17e30:	str	r0, [sp, #4]
   17e34:	ldr	r0, [sp, #8]
   17e38:	add	r0, r0, #1
   17e3c:	str	r0, [sp, #8]
   17e40:	b	17de8 <rb_linebuf_skip_crlf+0x14>
   17e44:	b	17e48 <rb_linebuf_skip_crlf+0x74>
   17e48:	ldr	r0, [sp, #4]
   17e4c:	cmp	r0, #0
   17e50:	beq	17e9c <rb_linebuf_skip_crlf+0xc8>
   17e54:	ldr	r0, [sp, #8]
   17e58:	ldrb	r0, [r0]
   17e5c:	cmp	r0, #13
   17e60:	beq	17e78 <rb_linebuf_skip_crlf+0xa4>
   17e64:	ldr	r0, [sp, #8]
   17e68:	ldrb	r0, [r0]
   17e6c:	cmp	r0, #10
   17e70:	beq	17e78 <rb_linebuf_skip_crlf+0xa4>
   17e74:	b	17e9c <rb_linebuf_skip_crlf+0xc8>
   17e78:	b	17e7c <rb_linebuf_skip_crlf+0xa8>
   17e7c:	ldr	r0, [sp, #4]
   17e80:	mvn	r1, #0
   17e84:	add	r0, r0, r1
   17e88:	str	r0, [sp, #4]
   17e8c:	ldr	r0, [sp, #8]
   17e90:	add	r0, r0, #1
   17e94:	str	r0, [sp, #8]
   17e98:	b	17e48 <rb_linebuf_skip_crlf+0x74>
   17e9c:	ldr	r0, [sp]
   17ea0:	ldr	r1, [sp, #4]
   17ea4:	sub	r0, r0, r1
   17ea8:	add	sp, sp, #12
   17eac:	bx	lr

00017eb0 <rb_linebuf_allocate>:
   17eb0:	push	{fp, lr}
   17eb4:	mov	fp, sp
   17eb8:	sub	sp, sp, #8
   17ebc:	ldr	r0, [pc, #24]	; 17edc <rb_linebuf_allocate+0x2c>
   17ec0:	add	r0, pc, r0
   17ec4:	ldr	r0, [r0]
   17ec8:	bl	5320 <rb_bh_alloc@plt>
   17ecc:	str	r0, [sp, #4]
   17ed0:	ldr	r0, [sp, #4]
   17ed4:	mov	sp, fp
   17ed8:	pop	{fp, pc}
   17edc:	.word	0x0002f97c

00017ee0 <rb_init_rb_dlink_nodes>:
   17ee0:	push	{fp, lr}
   17ee4:	mov	fp, sp
   17ee8:	sub	sp, sp, #8
   17eec:	ldr	r1, [pc, #60]	; 17f30 <rb_init_rb_dlink_nodes+0x50>
   17ef0:	add	r2, pc, r1
   17ef4:	str	r0, [sp, #4]
   17ef8:	ldr	r1, [sp, #4]
   17efc:	movw	r0, #12
   17f00:	bl	547c <rb_bh_create@plt>
   17f04:	ldr	r1, [pc, #32]	; 17f2c <rb_init_rb_dlink_nodes+0x4c>
   17f08:	add	r1, pc, r1
   17f0c:	str	r0, [r1]
   17f10:	ldr	r0, [r1]
   17f14:	movw	r1, #0
   17f18:	cmp	r0, r1
   17f1c:	bne	17f24 <rb_init_rb_dlink_nodes+0x44>
   17f20:	bl	5350 <rb_outofmemory@plt>
   17f24:	mov	sp, fp
   17f28:	pop	{fp, pc}
   17f2c:	.word	0x0003193c
   17f30:	.word	0x0000b967

00017f34 <rb_make_rb_dlink_node>:
   17f34:	push	{fp, lr}
   17f38:	mov	fp, sp
   17f3c:	ldr	r0, [pc, #12]	; 17f50 <rb_make_rb_dlink_node+0x1c>
   17f40:	add	r0, pc, r0
   17f44:	ldr	r0, [r0]
   17f48:	bl	5320 <rb_bh_alloc@plt>
   17f4c:	pop	{fp, pc}
   17f50:	.word	0x00031904

00017f54 <rb_free_rb_dlink_node>:
   17f54:	push	{fp, lr}
   17f58:	mov	fp, sp
   17f5c:	sub	sp, sp, #8
   17f60:	ldr	r1, [pc, #24]	; 17f80 <rb_free_rb_dlink_node+0x2c>
   17f64:	add	r1, pc, r1
   17f68:	str	r0, [sp, #4]
   17f6c:	ldr	r0, [r1]
   17f70:	ldr	r1, [sp, #4]
   17f74:	bl	529c <rb_bh_free@plt>
   17f78:	mov	sp, fp
   17f7c:	pop	{fp, pc}
   17f80:	.word	0x000318e0

00017f84 <rb_string_to_array>:
   17f84:	push	{fp, lr}
   17f88:	mov	fp, sp
   17f8c:	sub	sp, sp, #32
   17f90:	str	r0, [fp, #-8]
   17f94:	str	r1, [fp, #-12]
   17f98:	str	r2, [sp, #16]
   17f9c:	ldr	r0, [fp, #-8]
   17fa0:	str	r0, [sp, #8]
   17fa4:	movw	r0, #0
   17fa8:	str	r0, [sp, #4]
   17fac:	ldr	r1, [fp, #-8]
   17fb0:	cmp	r1, r0
   17fb4:	beq	17fc8 <rb_string_to_array+0x44>
   17fb8:	ldr	r0, [fp, #-8]
   17fbc:	ldrb	r0, [r0]
   17fc0:	cmp	r0, #0
   17fc4:	bne	17fd4 <rb_string_to_array+0x50>
   17fc8:	ldr	r0, [sp, #4]
   17fcc:	str	r0, [fp, #-4]
   17fd0:	b	1815c <rb_string_to_array+0x1d8>
   17fd4:	b	17fd8 <rb_string_to_array+0x54>
   17fd8:	ldr	r0, [sp, #8]
   17fdc:	ldrb	r0, [r0]
   17fe0:	cmp	r0, #32
   17fe4:	bne	17ff8 <rb_string_to_array+0x74>
   17fe8:	ldr	r0, [sp, #8]
   17fec:	add	r0, r0, #1
   17ff0:	str	r0, [sp, #8]
   17ff4:	b	17fd8 <rb_string_to_array+0x54>
   17ff8:	ldr	r0, [sp, #8]
   17ffc:	ldrb	r0, [r0]
   18000:	cmp	r0, #0
   18004:	bne	18014 <rb_string_to_array+0x90>
   18008:	ldr	r0, [sp, #4]
   1800c:	str	r0, [fp, #-4]
   18010:	b	1815c <rb_string_to_array+0x1d8>
   18014:	b	18018 <rb_string_to_array+0x94>
   18018:	ldr	r0, [sp, #8]
   1801c:	ldrb	r0, [r0]
   18020:	cmp	r0, #58	; 0x3a
   18024:	bne	1805c <rb_string_to_array+0xd8>
   18028:	ldr	r0, [sp, #8]
   1802c:	add	r0, r0, #1
   18030:	str	r0, [sp, #8]
   18034:	ldr	r0, [sp, #8]
   18038:	ldr	r1, [fp, #-12]
   1803c:	ldr	r2, [sp, #4]
   18040:	add	r3, r2, #1
   18044:	str	r3, [sp, #4]
   18048:	add	r1, r1, r2, lsl #2
   1804c:	str	r0, [r1]
   18050:	ldr	r0, [sp, #4]
   18054:	str	r0, [fp, #-4]
   18058:	b	1815c <rb_string_to_array+0x1d8>
   1805c:	ldr	r0, [sp, #8]
   18060:	ldr	r1, [fp, #-12]
   18064:	ldr	r2, [sp, #4]
   18068:	add	r3, r2, #1
   1806c:	str	r3, [sp, #4]
   18070:	add	r1, r1, r2, lsl #2
   18074:	str	r0, [r1]
   18078:	ldr	r0, [sp, #8]
   1807c:	movw	r1, #32
   18080:	bl	4f78 <strchr@plt>
   18084:	str	r0, [sp, #12]
   18088:	movw	r1, #0
   1808c:	cmp	r0, r1
   18090:	beq	180b4 <rb_string_to_array+0x130>
   18094:	ldr	r0, [sp, #12]
   18098:	add	r1, r0, #1
   1809c:	str	r1, [sp, #12]
   180a0:	movw	r1, #0
   180a4:	strb	r1, [r0]
   180a8:	ldr	r0, [sp, #12]
   180ac:	str	r0, [sp, #8]
   180b0:	b	180c0 <rb_string_to_array+0x13c>
   180b4:	ldr	r0, [sp, #4]
   180b8:	str	r0, [fp, #-4]
   180bc:	b	1815c <rb_string_to_array+0x1d8>
   180c0:	b	180c4 <rb_string_to_array+0x140>
   180c4:	b	180c8 <rb_string_to_array+0x144>
   180c8:	ldr	r0, [sp, #8]
   180cc:	ldrb	r0, [r0]
   180d0:	cmp	r0, #32
   180d4:	bne	180e8 <rb_string_to_array+0x164>
   180d8:	ldr	r0, [sp, #8]
   180dc:	add	r0, r0, #1
   180e0:	str	r0, [sp, #8]
   180e4:	b	180c8 <rb_string_to_array+0x144>
   180e8:	ldr	r0, [sp, #8]
   180ec:	ldrb	r0, [r0]
   180f0:	cmp	r0, #0
   180f4:	bne	18104 <rb_string_to_array+0x180>
   180f8:	ldr	r0, [sp, #4]
   180fc:	str	r0, [fp, #-4]
   18100:	b	1815c <rb_string_to_array+0x1d8>
   18104:	b	18108 <rb_string_to_array+0x184>
   18108:	ldr	r0, [sp, #4]
   1810c:	ldr	r1, [sp, #16]
   18110:	sub	r1, r1, #1
   18114:	cmp	r0, r1
   18118:	blt	18018 <rb_string_to_array+0x94>
   1811c:	ldr	r0, [sp, #12]
   18120:	ldrb	r0, [r0]
   18124:	cmp	r0, #58	; 0x3a
   18128:	bne	18138 <rb_string_to_array+0x1b4>
   1812c:	ldr	r0, [sp, #12]
   18130:	add	r0, r0, #1
   18134:	str	r0, [sp, #12]
   18138:	ldr	r0, [sp, #12]
   1813c:	ldr	r1, [fp, #-12]
   18140:	ldr	r2, [sp, #4]
   18144:	add	r3, r2, #1
   18148:	str	r3, [sp, #4]
   1814c:	add	r1, r1, r2, lsl #2
   18150:	str	r0, [r1]
   18154:	ldr	r0, [sp, #4]
   18158:	str	r0, [fp, #-4]
   1815c:	ldr	r0, [fp, #-4]
   18160:	mov	sp, fp
   18164:	pop	{fp, pc}

00018168 <rb_strcasecmp>:
   18168:	push	{fp, lr}
   1816c:	mov	fp, sp
   18170:	sub	sp, sp, #8
   18174:	str	r0, [sp, #4]
   18178:	str	r1, [sp]
   1817c:	ldr	r0, [sp, #4]
   18180:	ldr	r1, [sp]
   18184:	bl	4f90 <strcasecmp@plt>
   18188:	mov	sp, fp
   1818c:	pop	{fp, pc}

00018190 <rb_strncasecmp>:
   18190:	push	{fp, lr}
   18194:	mov	fp, sp
   18198:	sub	sp, sp, #16
   1819c:	str	r0, [fp, #-4]
   181a0:	str	r1, [sp, #8]
   181a4:	str	r2, [sp, #4]
   181a8:	ldr	r0, [fp, #-4]
   181ac:	ldr	r1, [sp, #8]
   181b0:	ldr	r2, [sp, #4]
   181b4:	bl	5344 <strncasecmp@plt>
   181b8:	mov	sp, fp
   181bc:	pop	{fp, pc}

000181c0 <rb_strcasestr>:
   181c0:	push	{fp, lr}
   181c4:	mov	fp, sp
   181c8:	sub	sp, sp, #8
   181cc:	str	r0, [sp, #4]
   181d0:	str	r1, [sp]
   181d4:	ldr	r0, [sp, #4]
   181d8:	ldr	r1, [sp]
   181dc:	bl	4dd4 <strcasestr@plt>
   181e0:	mov	sp, fp
   181e4:	pop	{fp, pc}

000181e8 <rb_strlcat>:
   181e8:	push	{fp, lr}
   181ec:	mov	fp, sp
   181f0:	sub	sp, sp, #24
   181f4:	str	r0, [fp, #-4]
   181f8:	str	r1, [fp, #-8]
   181fc:	str	r2, [sp, #12]
   18200:	ldr	r0, [fp, #-4]
   18204:	bl	51b8 <strlen@plt>
   18208:	str	r0, [sp, #8]
   1820c:	ldr	r0, [fp, #-8]
   18210:	bl	51b8 <strlen@plt>
   18214:	str	r0, [sp, #4]
   18218:	ldr	r0, [sp, #8]
   1821c:	ldr	r1, [sp, #4]
   18220:	add	r0, r0, r1
   18224:	str	r0, [sp]
   18228:	ldr	r0, [sp, #8]
   1822c:	ldr	r1, [fp, #-4]
   18230:	add	r0, r1, r0
   18234:	str	r0, [fp, #-4]
   18238:	ldr	r0, [sp, #8]
   1823c:	ldr	r1, [sp, #12]
   18240:	sub	r0, r1, r0
   18244:	str	r0, [sp, #12]
   18248:	ldr	r0, [sp, #4]
   1824c:	ldr	r1, [sp, #12]
   18250:	cmp	r0, r1
   18254:	bcc	18264 <rb_strlcat+0x7c>
   18258:	ldr	r0, [sp, #12]
   1825c:	sub	r0, r0, #1
   18260:	str	r0, [sp, #4]
   18264:	ldr	r0, [fp, #-4]
   18268:	ldr	r1, [fp, #-8]
   1826c:	ldr	r2, [sp, #4]
   18270:	bl	51dc <memcpy@plt>
   18274:	ldr	r0, [fp, #-4]
   18278:	ldr	r1, [sp, #4]
   1827c:	add	r0, r0, r1
   18280:	movw	r1, #0
   18284:	strb	r1, [r0]
   18288:	ldr	r0, [sp]
   1828c:	mov	sp, fp
   18290:	pop	{fp, pc}

00018294 <rb_strlcpy>:
   18294:	push	{fp, lr}
   18298:	mov	fp, sp
   1829c:	sub	sp, sp, #24
   182a0:	str	r0, [fp, #-4]
   182a4:	str	r1, [fp, #-8]
   182a8:	str	r2, [sp, #12]
   182ac:	ldr	r0, [fp, #-8]
   182b0:	bl	51b8 <strlen@plt>
   182b4:	str	r0, [sp, #8]
   182b8:	ldr	r0, [sp, #12]
   182bc:	cmp	r0, #0
   182c0:	beq	18318 <rb_strlcpy+0x84>
   182c4:	ldr	r0, [sp, #8]
   182c8:	ldr	r1, [sp, #12]
   182cc:	cmp	r0, r1
   182d0:	bcc	182e4 <rb_strlcpy+0x50>
   182d4:	ldr	r0, [sp, #12]
   182d8:	sub	r0, r0, #1
   182dc:	str	r0, [sp]
   182e0:	b	182ec <rb_strlcpy+0x58>
   182e4:	ldr	r0, [sp, #8]
   182e8:	str	r0, [sp]
   182ec:	ldr	r0, [sp]
   182f0:	str	r0, [sp, #4]
   182f4:	ldr	r0, [fp, #-4]
   182f8:	ldr	r1, [fp, #-8]
   182fc:	ldr	r2, [sp, #4]
   18300:	bl	51dc <memcpy@plt>
   18304:	ldr	r0, [fp, #-4]
   18308:	ldr	r1, [sp, #4]
   1830c:	add	r0, r0, r1
   18310:	movw	r1, #0
   18314:	strb	r1, [r0]
   18318:	ldr	r0, [sp, #8]
   1831c:	mov	sp, fp
   18320:	pop	{fp, pc}

00018324 <rb_strnlen>:
   18324:	push	{fp, lr}
   18328:	mov	fp, sp
   1832c:	sub	sp, sp, #8
   18330:	str	r0, [sp, #4]
   18334:	str	r1, [sp]
   18338:	ldr	r0, [sp, #4]
   1833c:	ldr	r1, [sp]
   18340:	bl	53e0 <strnlen@plt>
   18344:	mov	sp, fp
   18348:	pop	{fp, pc}

0001834c <rb_snprintf_append>:
   1834c:	sub	sp, sp, #4
   18350:	push	{fp, lr}
   18354:	mov	fp, sp
   18358:	sub	sp, sp, #28
   1835c:	str	r3, [fp, #8]
   18360:	str	r0, [fp, #-8]
   18364:	str	r1, [fp, #-12]
   18368:	str	r2, [sp, #12]
   1836c:	ldr	r0, [fp, #-12]
   18370:	cmp	r0, #0
   18374:	bne	18384 <rb_snprintf_append+0x38>
   18378:	mvn	r0, #0
   1837c:	str	r0, [fp, #-4]
   18380:	b	18420 <rb_snprintf_append+0xd4>
   18384:	ldr	r0, [fp, #-8]
   18388:	bl	51b8 <strlen@plt>
   1838c:	str	r0, [sp, #8]
   18390:	ldr	r0, [fp, #-12]
   18394:	ldr	r1, [sp, #8]
   18398:	cmp	r0, r1
   1839c:	bge	183c8 <rb_snprintf_append+0x7c>
   183a0:	ldr	r0, [fp, #-8]
   183a4:	ldr	r1, [fp, #-12]
   183a8:	sub	r1, r1, #1
   183ac:	add	r0, r0, r1
   183b0:	movw	r1, #0
   183b4:	strb	r1, [r0]
   183b8:	ldr	r0, [fp, #-12]
   183bc:	sub	r0, r0, #1
   183c0:	str	r0, [fp, #-4]
   183c4:	b	18420 <rb_snprintf_append+0xd4>
   183c8:	add	r0, fp, #8
   183cc:	str	r0, [sp, #4]
   183d0:	ldr	r0, [fp, #-8]
   183d4:	ldr	r1, [sp, #8]
   183d8:	add	r0, r0, r1
   183dc:	ldr	r2, [fp, #-12]
   183e0:	sub	r1, r2, r1
   183e4:	ldr	r2, [sp, #12]
   183e8:	ldr	r3, [sp, #4]
   183ec:	bl	4f24 <vsnprintf@plt>
   183f0:	str	r0, [sp]
   183f4:	add	r0, sp, #4
   183f8:	ldr	r1, [sp]
   183fc:	cmp	r1, #0
   18400:	bge	18410 <rb_snprintf_append+0xc4>
   18404:	ldr	r0, [sp]
   18408:	str	r0, [fp, #-4]
   1840c:	b	18420 <rb_snprintf_append+0xd4>
   18410:	ldr	r0, [sp, #8]
   18414:	ldr	r1, [sp]
   18418:	add	r0, r0, r1
   1841c:	str	r0, [fp, #-4]
   18420:	ldr	r0, [fp, #-4]
   18424:	mov	sp, fp
   18428:	pop	{fp, lr}
   1842c:	add	sp, sp, #4
   18430:	bx	lr

00018434 <rb_snprintf_try_append>:
   18434:	sub	sp, sp, #4
   18438:	push	{fp, lr}
   1843c:	mov	fp, sp
   18440:	sub	sp, sp, #28
   18444:	str	r3, [fp, #8]
   18448:	str	r0, [fp, #-8]
   1844c:	str	r1, [fp, #-12]
   18450:	str	r2, [sp, #12]
   18454:	ldr	r0, [fp, #-12]
   18458:	cmp	r0, #0
   1845c:	bne	1846c <rb_snprintf_try_append+0x38>
   18460:	mvn	r0, #0
   18464:	str	r0, [fp, #-4]
   18468:	b	18540 <rb_snprintf_try_append+0x10c>
   1846c:	ldr	r0, [fp, #-8]
   18470:	bl	51b8 <strlen@plt>
   18474:	str	r0, [sp, #8]
   18478:	ldr	r0, [fp, #-12]
   1847c:	ldr	r1, [sp, #8]
   18480:	cmp	r0, r1
   18484:	bge	184ac <rb_snprintf_try_append+0x78>
   18488:	ldr	r0, [fp, #-8]
   1848c:	ldr	r1, [fp, #-12]
   18490:	sub	r1, r1, #1
   18494:	add	r0, r0, r1
   18498:	movw	r1, #0
   1849c:	strb	r1, [r0]
   184a0:	mvn	r0, #0
   184a4:	str	r0, [fp, #-4]
   184a8:	b	18540 <rb_snprintf_try_append+0x10c>
   184ac:	add	r0, fp, #8
   184b0:	str	r0, [sp, #4]
   184b4:	ldr	r0, [fp, #-8]
   184b8:	ldr	r1, [sp, #8]
   184bc:	add	r0, r0, r1
   184c0:	ldr	r2, [fp, #-12]
   184c4:	sub	r1, r2, r1
   184c8:	ldr	r2, [sp, #12]
   184cc:	ldr	r3, [sp, #4]
   184d0:	bl	4f24 <vsnprintf@plt>
   184d4:	str	r0, [sp]
   184d8:	add	r0, sp, #4
   184dc:	ldr	r1, [sp]
   184e0:	cmp	r1, #0
   184e4:	bge	184f4 <rb_snprintf_try_append+0xc0>
   184e8:	ldr	r0, [sp]
   184ec:	str	r0, [fp, #-4]
   184f0:	b	18540 <rb_snprintf_try_append+0x10c>
   184f4:	ldr	r0, [sp, #8]
   184f8:	ldr	r1, [sp]
   184fc:	add	r0, r0, r1
   18500:	ldr	r1, [fp, #-12]
   18504:	sub	r1, r1, #1
   18508:	cmp	r0, r1
   1850c:	ble	18530 <rb_snprintf_try_append+0xfc>
   18510:	ldr	r0, [fp, #-8]
   18514:	ldr	r1, [sp, #8]
   18518:	add	r0, r0, r1
   1851c:	movw	r1, #0
   18520:	strb	r1, [r0]
   18524:	mvn	r0, #0
   18528:	str	r0, [fp, #-4]
   1852c:	b	18540 <rb_snprintf_try_append+0x10c>
   18530:	ldr	r0, [sp, #8]
   18534:	ldr	r1, [sp]
   18538:	add	r0, r0, r1
   1853c:	str	r0, [fp, #-4]
   18540:	ldr	r0, [fp, #-4]
   18544:	mov	sp, fp
   18548:	pop	{fp, lr}
   1854c:	add	sp, sp, #4
   18550:	bx	lr

00018554 <rb_basename>:
   18554:	push	{fp, lr}
   18558:	mov	fp, sp
   1855c:	sub	sp, sp, #8
   18560:	str	r0, [sp, #4]
   18564:	ldr	r0, [sp, #4]
   18568:	movw	r1, #47	; 0x2f
   1856c:	bl	5014 <strrchr@plt>
   18570:	str	r0, [sp]
   18574:	movw	r1, #0
   18578:	cmp	r0, r1
   1857c:	bne	1858c <rb_basename+0x38>
   18580:	ldr	r0, [sp, #4]
   18584:	str	r0, [sp]
   18588:	b	18598 <rb_basename+0x44>
   1858c:	ldr	r0, [sp]
   18590:	add	r0, r0, #1
   18594:	str	r0, [sp]
   18598:	ldr	r0, [sp]
   1859c:	bl	185a8 <rb_strdup>
   185a0:	mov	sp, fp
   185a4:	pop	{fp, pc}

000185a8 <rb_strdup>:
   185a8:	push	{fp, lr}
   185ac:	mov	fp, sp
   185b0:	sub	sp, sp, #16
   185b4:	str	r0, [fp, #-4]
   185b8:	ldr	r0, [fp, #-4]
   185bc:	bl	51b8 <strlen@plt>
   185c0:	add	r0, r0, #1
   185c4:	bl	5374 <malloc@plt>
   185c8:	str	r0, [sp, #8]
   185cc:	ldr	r0, [sp, #8]
   185d0:	movw	r1, #0
   185d4:	cmp	r0, r1
   185d8:	movw	r0, #0
   185dc:	moveq	r0, #1
   185e0:	mvn	r1, #0
   185e4:	eor	r0, r0, r1
   185e8:	eor	r0, r0, r1
   185ec:	tst	r0, #1
   185f0:	beq	185f8 <rb_strdup+0x50>
   185f4:	bl	5350 <rb_outofmemory@plt>
   185f8:	ldr	r0, [sp, #8]
   185fc:	ldr	r1, [fp, #-4]
   18600:	bl	5254 <strcpy@plt>
   18604:	ldr	r1, [sp, #8]
   18608:	str	r0, [sp, #4]
   1860c:	mov	r0, r1
   18610:	mov	sp, fp
   18614:	pop	{fp, pc}

00018618 <rb_dirname>:
   18618:	push	{fp, lr}
   1861c:	mov	fp, sp
   18620:	sub	sp, sp, #16
   18624:	str	r0, [sp, #8]
   18628:	ldr	r0, [sp, #8]
   1862c:	movw	r1, #47	; 0x2f
   18630:	bl	5014 <strrchr@plt>
   18634:	str	r0, [sp, #4]
   18638:	ldr	r0, [sp, #4]
   1863c:	movw	r1, #0
   18640:	cmp	r0, r1
   18644:	bne	1865c <rb_dirname+0x44>
   18648:	ldr	r0, [pc, #136]	; 186d8 <rb_dirname+0xc0>
   1864c:	add	r0, pc, r0
   18650:	bl	185a8 <rb_strdup>
   18654:	str	r0, [fp, #-4]
   18658:	b	186cc <rb_dirname+0xb4>
   1865c:	b	18660 <rb_dirname+0x48>
   18660:	ldr	r0, [sp, #4]
   18664:	ldr	r1, [sp, #8]
   18668:	cmp	r0, r1
   1866c:	movw	r0, #0
   18670:	str	r0, [sp]
   18674:	bls	18690 <rb_dirname+0x78>
   18678:	ldr	r0, [sp, #4]
   1867c:	ldrb	r0, [r0]
   18680:	cmp	r0, #47	; 0x2f
   18684:	movw	r0, #0
   18688:	moveq	r0, #1
   1868c:	str	r0, [sp]
   18690:	ldr	r0, [sp]
   18694:	tst	r0, #1
   18698:	beq	186b0 <rb_dirname+0x98>
   1869c:	ldr	r0, [sp, #4]
   186a0:	mvn	r1, #0
   186a4:	add	r0, r0, r1
   186a8:	str	r0, [sp, #4]
   186ac:	b	18660 <rb_dirname+0x48>
   186b0:	ldr	r0, [sp, #8]
   186b4:	ldr	r1, [sp, #4]
   186b8:	ldr	r2, [sp, #8]
   186bc:	sub	r1, r1, r2
   186c0:	add	r1, r1, #2
   186c4:	bl	186dc <rb_strndup>
   186c8:	str	r0, [fp, #-4]
   186cc:	ldr	r0, [fp, #-4]
   186d0:	mov	sp, fp
   186d4:	pop	{fp, pc}
   186d8:	.word	0x0000b1e8

000186dc <rb_strndup>:
   186dc:	push	{fp, lr}
   186e0:	mov	fp, sp
   186e4:	sub	sp, sp, #16
   186e8:	str	r0, [fp, #-4]
   186ec:	str	r1, [sp, #8]
   186f0:	ldr	r0, [sp, #8]
   186f4:	bl	5374 <malloc@plt>
   186f8:	str	r0, [sp, #4]
   186fc:	ldr	r0, [sp, #4]
   18700:	movw	r1, #0
   18704:	cmp	r0, r1
   18708:	movw	r0, #0
   1870c:	moveq	r0, #1
   18710:	mvn	r1, #0
   18714:	eor	r0, r0, r1
   18718:	eor	r0, r0, r1
   1871c:	tst	r0, #1
   18720:	beq	18728 <rb_strndup+0x4c>
   18724:	bl	5350 <rb_outofmemory@plt>
   18728:	ldr	r0, [sp, #4]
   1872c:	ldr	r1, [fp, #-4]
   18730:	ldr	r2, [sp, #8]
   18734:	bl	5068 <rb_strlcpy@plt>
   18738:	ldr	r1, [sp, #4]
   1873c:	str	r0, [sp]
   18740:	mov	r0, r1
   18744:	mov	sp, fp
   18748:	pop	{fp, pc}

0001874c <rb_fsnprint>:
   1874c:	push	{fp, lr}
   18750:	mov	fp, sp
   18754:	sub	sp, sp, #40	; 0x28
   18758:	str	r0, [fp, #-8]
   1875c:	str	r1, [fp, #-12]
   18760:	str	r2, [fp, #-16]
   18764:	movw	r0, #0
   18768:	str	r0, [sp, #20]
   1876c:	ldr	r0, [fp, #-12]
   18770:	str	r0, [sp, #16]
   18774:	ldr	r0, [fp, #-16]
   18778:	movw	r1, #0
   1877c:	cmp	r0, r1
   18780:	beq	18958 <rb_fsnprint+0x20c>
   18784:	movw	r0, #0
   18788:	str	r0, [sp, #12]
   1878c:	ldr	r0, [fp, #-16]
   18790:	ldr	r0, [r0]
   18794:	cmp	r0, #0
   18798:	beq	187d4 <rb_fsnprint+0x88>
   1879c:	ldr	r0, [fp, #-16]
   187a0:	ldr	r0, [r0]
   187a4:	str	r0, [sp, #16]
   187a8:	ldr	r0, [sp, #16]
   187ac:	ldr	r1, [fp, #-12]
   187b0:	ldr	r2, [sp, #20]
   187b4:	sub	r1, r1, r2
   187b8:	cmp	r0, r1
   187bc:	bls	187d0 <rb_fsnprint+0x84>
   187c0:	ldr	r0, [fp, #-12]
   187c4:	ldr	r1, [sp, #20]
   187c8:	sub	r0, r0, r1
   187cc:	str	r0, [sp, #16]
   187d0:	b	187d4 <rb_fsnprint+0x88>
   187d4:	ldr	r0, [sp, #16]
   187d8:	cmp	r0, #0
   187dc:	bne	187e4 <rb_fsnprint+0x98>
   187e0:	b	18958 <rb_fsnprint+0x20c>
   187e4:	ldr	r0, [fp, #-16]
   187e8:	ldr	r0, [r0, #4]
   187ec:	movw	r1, #0
   187f0:	cmp	r0, r1
   187f4:	beq	18868 <rb_fsnprint+0x11c>
   187f8:	ldr	r0, [fp, #-16]
   187fc:	ldr	r0, [r0, #12]
   18800:	movw	r1, #0
   18804:	cmp	r0, r1
   18808:	beq	18844 <rb_fsnprint+0xf8>
   1880c:	ldr	r0, [fp, #-8]
   18810:	ldr	r1, [sp, #20]
   18814:	add	r0, r0, r1
   18818:	ldr	r1, [sp, #16]
   1881c:	ldr	r2, [fp, #-16]
   18820:	ldr	r3, [r2, #4]
   18824:	ldr	r2, [r2, #12]
   18828:	ldr	r2, [r2]
   1882c:	str	r2, [sp, #8]
   18830:	mov	r2, r3
   18834:	ldr	r3, [sp, #8]
   18838:	bl	4f24 <vsnprintf@plt>
   1883c:	str	r0, [sp, #12]
   18840:	b	18864 <rb_fsnprint+0x118>
   18844:	ldr	r0, [fp, #-8]
   18848:	ldr	r1, [sp, #20]
   1884c:	add	r0, r0, r1
   18850:	ldr	r1, [fp, #-16]
   18854:	ldr	r1, [r1, #4]
   18858:	ldr	r2, [sp, #16]
   1885c:	bl	5068 <rb_strlcpy@plt>
   18860:	str	r0, [sp, #12]
   18864:	b	188bc <rb_fsnprint+0x170>
   18868:	ldr	r0, [fp, #-16]
   1886c:	ldr	r0, [r0, #8]
   18870:	movw	r1, #0
   18874:	cmp	r0, r1
   18878:	beq	188b8 <rb_fsnprint+0x16c>
   1887c:	ldr	r0, [fp, #-16]
   18880:	ldr	r0, [r0, #8]
   18884:	ldr	r1, [fp, #-8]
   18888:	ldr	r2, [sp, #20]
   1888c:	add	r1, r1, r2
   18890:	ldr	r2, [sp, #16]
   18894:	ldr	r3, [fp, #-16]
   18898:	ldr	r3, [r3, #12]
   1889c:	str	r0, [sp, #4]
   188a0:	mov	r0, r1
   188a4:	mov	r1, r2
   188a8:	mov	r2, r3
   188ac:	ldr	r3, [sp, #4]
   188b0:	blx	r3
   188b4:	str	r0, [sp, #12]
   188b8:	b	188bc <rb_fsnprint+0x170>
   188bc:	ldr	r0, [sp, #12]
   188c0:	cmp	r0, #0
   188c4:	bge	188d4 <rb_fsnprint+0x188>
   188c8:	ldr	r0, [sp, #12]
   188cc:	str	r0, [fp, #-4]
   188d0:	b	18960 <rb_fsnprint+0x214>
   188d4:	ldr	r0, [sp, #12]
   188d8:	ldr	r1, [sp, #16]
   188dc:	sub	r1, r1, #1
   188e0:	cmp	r0, r1
   188e4:	bls	18900 <rb_fsnprint+0x1b4>
   188e8:	ldr	r0, [sp, #16]
   188ec:	sub	r0, r0, #1
   188f0:	ldr	r1, [sp, #20]
   188f4:	add	r0, r1, r0
   188f8:	str	r0, [sp, #20]
   188fc:	b	18910 <rb_fsnprint+0x1c4>
   18900:	ldr	r0, [sp, #12]
   18904:	ldr	r1, [sp, #20]
   18908:	add	r0, r1, r0
   1890c:	str	r0, [sp, #20]
   18910:	b	18914 <rb_fsnprint+0x1c8>
   18914:	ldr	r0, [sp, #20]
   18918:	ldr	r1, [fp, #-12]
   1891c:	sub	r1, r1, #1
   18920:	cmp	r0, r1
   18924:	bcc	18938 <rb_fsnprint+0x1ec>
   18928:	ldr	r0, [fp, #-12]
   1892c:	sub	r0, r0, #1
   18930:	str	r0, [sp, #20]
   18934:	b	18958 <rb_fsnprint+0x20c>
   18938:	ldr	r0, [sp, #12]
   1893c:	ldr	r1, [sp, #16]
   18940:	sub	r0, r1, r0
   18944:	str	r0, [sp, #16]
   18948:	ldr	r0, [fp, #-16]
   1894c:	ldr	r0, [r0, #16]
   18950:	str	r0, [fp, #-16]
   18954:	b	18774 <rb_fsnprint+0x28>
   18958:	ldr	r0, [sp, #20]
   1895c:	str	r0, [fp, #-4]
   18960:	ldr	r0, [fp, #-4]
   18964:	mov	sp, fp
   18968:	pop	{fp, pc}

0001896c <rb_fsnprintf>:
   1896c:	push	{fp, lr}
   18970:	mov	fp, sp
   18974:	sub	sp, sp, #48	; 0x30
   18978:	str	r0, [fp, #-4]
   1897c:	str	r1, [fp, #-8]
   18980:	str	r2, [fp, #-12]
   18984:	str	r3, [fp, #-16]
   18988:	movw	r0, #0
   1898c:	str	r0, [sp, #8]
   18990:	ldr	r1, [fp, #-16]
   18994:	str	r1, [sp, #12]
   18998:	str	r0, [sp, #16]
   1899c:	sub	r0, fp, #20
   189a0:	str	r0, [sp, #20]
   189a4:	ldr	r1, [fp, #-12]
   189a8:	str	r1, [sp, #24]
   189ac:	add	r1, fp, #8
   189b0:	str	r1, [r0]
   189b4:	ldr	r0, [fp, #-4]
   189b8:	ldr	r1, [fp, #-8]
   189bc:	add	r2, sp, #8
   189c0:	bl	505c <rb_fsnprint@plt>
   189c4:	str	r0, [sp, #4]
   189c8:	sub	r0, fp, #20
   189cc:	ldr	r1, [sp, #4]
   189d0:	str	r0, [sp]
   189d4:	mov	r0, r1
   189d8:	mov	sp, fp
   189dc:	pop	{fp, pc}

000189e0 <rb_helper_child>:
   189e0:	push	{r4, r5, r6, sl, fp, lr}
   189e4:	add	fp, sp, #16
   189e8:	sub	sp, sp, #88	; 0x58
   189ec:	ldr	ip, [fp, #20]
   189f0:	ldr	lr, [fp, #16]
   189f4:	ldr	r4, [fp, #12]
   189f8:	ldr	r5, [fp, #8]
   189fc:	ldr	r6, [pc, #692]	; 18cb8 <rb_helper_child+0x2d8>
   18a00:	add	r6, pc, r6
   18a04:	str	r0, [fp, #-24]	; 0xffffffe8
   18a08:	str	r1, [fp, #-28]	; 0xffffffe4
   18a0c:	str	r2, [fp, #-32]	; 0xffffffe0
   18a10:	str	r3, [fp, #-36]	; 0xffffffdc
   18a14:	movw	r0, #0
   18a18:	str	r0, [fp, #-48]	; 0xffffffd0
   18a1c:	mov	r0, r6
   18a20:	str	ip, [sp, #32]
   18a24:	str	lr, [sp, #28]
   18a28:	str	r4, [sp, #24]
   18a2c:	str	r5, [sp, #20]
   18a30:	bl	4f60 <getenv@plt>
   18a34:	ldr	r1, [pc, #632]	; 18cb4 <rb_helper_child+0x2d4>
   18a38:	add	r1, pc, r1
   18a3c:	str	r0, [sp, #44]	; 0x2c
   18a40:	mov	r0, r1
   18a44:	bl	4f60 <getenv@plt>
   18a48:	ldr	r1, [pc, #608]	; 18cb0 <rb_helper_child+0x2d0>
   18a4c:	add	r1, pc, r1
   18a50:	str	r0, [sp, #40]	; 0x28
   18a54:	mov	r0, r1
   18a58:	bl	4f60 <getenv@plt>
   18a5c:	str	r0, [sp, #36]	; 0x24
   18a60:	ldr	r0, [sp, #44]	; 0x2c
   18a64:	movw	r1, #0
   18a68:	cmp	r0, r1
   18a6c:	beq	18a90 <rb_helper_child+0xb0>
   18a70:	ldr	r0, [sp, #40]	; 0x28
   18a74:	movw	r1, #0
   18a78:	cmp	r0, r1
   18a7c:	beq	18a90 <rb_helper_child+0xb0>
   18a80:	ldr	r0, [sp, #36]	; 0x24
   18a84:	movw	r1, #0
   18a88:	cmp	r0, r1
   18a8c:	bne	18a9c <rb_helper_child+0xbc>
   18a90:	movw	r0, #0
   18a94:	str	r0, [fp, #-20]	; 0xffffffec
   18a98:	b	18ca4 <rb_helper_child+0x2c4>
   18a9c:	movw	r0, #84	; 0x54
   18aa0:	bl	18cc8 <rb_malloc>
   18aa4:	str	r0, [fp, #-40]	; 0xffffffd8
   18aa8:	ldr	r0, [sp, #44]	; 0x2c
   18aac:	movw	r1, #0
   18ab0:	movw	r2, #10
   18ab4:	bl	523c <strtol@plt>
   18ab8:	str	r0, [sp, #52]	; 0x34
   18abc:	ldr	r0, [sp, #40]	; 0x28
   18ac0:	movw	r1, #0
   18ac4:	movw	r2, #10
   18ac8:	bl	523c <strtol@plt>
   18acc:	str	r0, [sp, #48]	; 0x30
   18ad0:	ldr	r0, [sp, #36]	; 0x24
   18ad4:	movw	r1, #0
   18ad8:	movw	r2, #10
   18adc:	bl	523c <strtol@plt>
   18ae0:	str	r0, [fp, #-44]	; 0xffffffd4
   18ae4:	movw	r0, #0
   18ae8:	str	r0, [fp, #-48]	; 0xffffffd0
   18aec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18af0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18af4:	cmp	r0, r1
   18af8:	bge	18b38 <rb_helper_child+0x158>
   18afc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18b00:	ldr	r1, [sp, #52]	; 0x34
   18b04:	cmp	r0, r1
   18b08:	beq	18b24 <rb_helper_child+0x144>
   18b0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18b10:	ldr	r1, [sp, #48]	; 0x30
   18b14:	cmp	r0, r1
   18b18:	beq	18b24 <rb_helper_child+0x144>
   18b1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18b20:	bl	5308 <close@plt>
   18b24:	b	18b28 <rb_helper_child+0x148>
   18b28:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18b2c:	add	r0, r0, #1
   18b30:	str	r0, [fp, #-48]	; 0xffffffd0
   18b34:	b	18aec <rb_helper_child+0x10c>
   18b38:	ldr	r0, [pc, #380]	; 18cbc <rb_helper_child+0x2dc>
   18b3c:	add	r0, pc, r0
   18b40:	movw	r1, #2
   18b44:	bl	4d38 <open@plt>
   18b48:	str	r0, [fp, #-48]	; 0xffffffd0
   18b4c:	ldr	r0, [sp, #52]	; 0x34
   18b50:	cmp	r0, #0
   18b54:	beq	18b70 <rb_helper_child+0x190>
   18b58:	ldr	r0, [sp, #48]	; 0x30
   18b5c:	cmp	r0, #0
   18b60:	beq	18b70 <rb_helper_child+0x190>
   18b64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18b68:	movw	r1, #0
   18b6c:	bl	5488 <dup2@plt>
   18b70:	ldr	r0, [sp, #52]	; 0x34
   18b74:	cmp	r0, #1
   18b78:	beq	18b94 <rb_helper_child+0x1b4>
   18b7c:	ldr	r0, [sp, #48]	; 0x30
   18b80:	cmp	r0, #1
   18b84:	beq	18b94 <rb_helper_child+0x1b4>
   18b88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18b8c:	movw	r1, #1
   18b90:	bl	5488 <dup2@plt>
   18b94:	ldr	r0, [sp, #52]	; 0x34
   18b98:	cmp	r0, #2
   18b9c:	beq	18bb8 <rb_helper_child+0x1d8>
   18ba0:	ldr	r0, [sp, #48]	; 0x30
   18ba4:	cmp	r0, #2
   18ba8:	beq	18bb8 <rb_helper_child+0x1d8>
   18bac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18bb0:	movw	r1, #2
   18bb4:	bl	5488 <dup2@plt>
   18bb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18bbc:	cmp	r0, #2
   18bc0:	ble	18bcc <rb_helper_child+0x1ec>
   18bc4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18bc8:	bl	5308 <close@plt>
   18bcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18bd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18bd4:	ldr	r2, [fp, #8]
   18bd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18bdc:	ldr	ip, [fp, #16]
   18be0:	ldr	lr, [fp, #20]
   18be4:	movw	r4, #0
   18be8:	str	r3, [sp, #16]
   18bec:	mov	r3, r4
   18bf0:	ldr	r4, [sp, #16]
   18bf4:	str	r4, [sp]
   18bf8:	str	ip, [sp, #4]
   18bfc:	str	lr, [sp, #8]
   18c00:	bl	5404 <rb_lib_init@plt>
   18c04:	ldr	r0, [fp, #12]
   18c08:	bl	5524 <rb_linebuf_init@plt>
   18c0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18c10:	add	r0, r0, #4
   18c14:	bl	54b8 <rb_linebuf_newbuf@plt>
   18c18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18c1c:	add	r0, r0, #32
   18c20:	bl	54b8 <rb_linebuf_newbuf@plt>
   18c24:	ldr	r0, [pc, #152]	; 18cc4 <rb_helper_child+0x2e4>
   18c28:	add	r2, pc, r0
   18c2c:	ldr	r0, [sp, #52]	; 0x34
   18c30:	movw	r1, #8
   18c34:	and	r1, r1, #255	; 0xff
   18c38:	bl	544c <rb_open@plt>
   18c3c:	ldr	r1, [pc, #124]	; 18cc0 <rb_helper_child+0x2e0>
   18c40:	add	r2, pc, r1
   18c44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18c48:	str	r0, [r1, #60]	; 0x3c
   18c4c:	ldr	r0, [sp, #48]	; 0x30
   18c50:	movw	r1, #8
   18c54:	and	r1, r1, #255	; 0xff
   18c58:	bl	544c <rb_open@plt>
   18c5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18c60:	str	r0, [r1, #64]	; 0x40
   18c64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18c68:	ldr	r0, [r0, #60]	; 0x3c
   18c6c:	bl	4fe4 <rb_set_nb@plt>
   18c70:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18c74:	ldr	r1, [r1, #64]	; 0x40
   18c78:	str	r0, [sp, #12]
   18c7c:	mov	r0, r1
   18c80:	bl	4fe4 <rb_set_nb@plt>
   18c84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c88:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18c8c:	str	r1, [r2, #76]	; 0x4c
   18c90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18c94:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18c98:	str	r1, [r2, #80]	; 0x50
   18c9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18ca0:	str	r1, [fp, #-20]	; 0xffffffec
   18ca4:	ldr	r0, [fp, #-20]	; 0xffffffec
   18ca8:	sub	sp, fp, #16
   18cac:	pop	{r4, r5, r6, sl, fp, pc}
   18cb0:	.word	0x0000ae24
   18cb4:	.word	0x0000ae34
   18cb8:	.word	0x0000ae68
   18cbc:	.word	0x0000ad3a
   18cc0:	.word	0x0000ac54
   18cc4:	.word	0x0000ac58

00018cc8 <rb_malloc>:
   18cc8:	push	{fp, lr}
   18ccc:	mov	fp, sp
   18cd0:	sub	sp, sp, #8
   18cd4:	str	r0, [sp, #4]
   18cd8:	ldr	r1, [sp, #4]
   18cdc:	movw	r0, #1
   18ce0:	bl	4fb4 <calloc@plt>
   18ce4:	str	r0, [sp]
   18ce8:	ldr	r0, [sp]
   18cec:	movw	r1, #0
   18cf0:	cmp	r0, r1
   18cf4:	movw	r0, #0
   18cf8:	moveq	r0, #1
   18cfc:	mvn	r1, #0
   18d00:	eor	r0, r0, r1
   18d04:	eor	r0, r0, r1
   18d08:	tst	r0, #1
   18d0c:	beq	18d14 <rb_malloc+0x4c>
   18d10:	bl	5350 <rb_outofmemory@plt>
   18d14:	ldr	r0, [sp]
   18d18:	mov	sp, fp
   18d1c:	pop	{fp, pc}

00018d20 <rb_helper_start>:
   18d20:	push	{r4, r5, fp, lr}
   18d24:	add	fp, sp, #8
   18d28:	sub	sp, sp, #280	; 0x118
   18d2c:	str	r0, [fp, #-16]
   18d30:	str	r1, [fp, #-20]	; 0xffffffec
   18d34:	str	r2, [fp, #-24]	; 0xffffffe8
   18d38:	str	r3, [fp, #-28]	; 0xffffffe4
   18d3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18d40:	movw	r1, #1
   18d44:	bl	5110 <access@plt>
   18d48:	cmn	r0, #1
   18d4c:	bne	18d5c <rb_helper_start+0x3c>
   18d50:	movw	r0, #0
   18d54:	str	r0, [fp, #-12]
   18d58:	b	1901c <rb_helper_start+0x2fc>
   18d5c:	movw	r0, #84	; 0x54
   18d60:	bl	18cc8 <rb_malloc>
   18d64:	ldr	r1, [pc, #700]	; 19028 <rb_helper_start+0x308>
   18d68:	add	r2, pc, r1
   18d6c:	add	r1, sp, #120	; 0x78
   18d70:	str	r0, [fp, #-32]	; 0xffffffe0
   18d74:	ldr	r3, [fp, #-16]
   18d78:	mov	r0, r1
   18d7c:	movw	r1, #128	; 0x80
   18d80:	bl	5584 <snprintf@plt>
   18d84:	add	r2, sp, #120	; 0x78
   18d88:	add	r1, sp, #80	; 0x50
   18d8c:	add	r3, r1, #4
   18d90:	str	r0, [sp, #64]	; 0x40
   18d94:	mov	r0, r1
   18d98:	mov	r1, r3
   18d9c:	bl	5338 <rb_pipe@plt>
   18da0:	cmp	r0, #0
   18da4:	bge	18dbc <rb_helper_start+0x9c>
   18da8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18dac:	bl	1904c <rb_free>
   18db0:	movw	r0, #0
   18db4:	str	r0, [fp, #-12]
   18db8:	b	1901c <rb_helper_start+0x2fc>
   18dbc:	ldr	r0, [pc, #616]	; 1902c <rb_helper_start+0x30c>
   18dc0:	add	r2, pc, r0
   18dc4:	add	r0, sp, #120	; 0x78
   18dc8:	ldr	r3, [fp, #-16]
   18dcc:	movw	r1, #128	; 0x80
   18dd0:	bl	5584 <snprintf@plt>
   18dd4:	add	r2, sp, #120	; 0x78
   18dd8:	add	r1, sp, #72	; 0x48
   18ddc:	add	r3, r1, #4
   18de0:	str	r0, [sp, #60]	; 0x3c
   18de4:	mov	r0, r1
   18de8:	mov	r1, r3
   18dec:	bl	5338 <rb_pipe@plt>
   18df0:	cmp	r0, #0
   18df4:	bge	18e0c <rb_helper_start+0xec>
   18df8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18dfc:	bl	1904c <rb_free>
   18e00:	movw	r0, #0
   18e04:	str	r0, [fp, #-12]
   18e08:	b	1901c <rb_helper_start+0x2fc>
   18e0c:	add	r0, sp, #104	; 0x68
   18e10:	ldr	r1, [sp, #84]	; 0x54
   18e14:	str	r0, [sp, #56]	; 0x38
   18e18:	mov	r0, r1
   18e1c:	bl	4ea0 <rb_get_fd@plt>
   18e20:	ldr	r1, [pc, #544]	; 19048 <rb_helper_start+0x328>
   18e24:	add	r2, pc, r1
   18e28:	ldr	r1, [sp, #56]	; 0x38
   18e2c:	str	r0, [sp, #52]	; 0x34
   18e30:	mov	r0, r1
   18e34:	movw	r1, #16
   18e38:	ldr	r3, [sp, #52]	; 0x34
   18e3c:	bl	5584 <snprintf@plt>
   18e40:	add	r1, sp, #88	; 0x58
   18e44:	ldr	r2, [sp, #72]	; 0x48
   18e48:	str	r0, [sp, #48]	; 0x30
   18e4c:	mov	r0, r2
   18e50:	str	r1, [sp, #44]	; 0x2c
   18e54:	bl	4ea0 <rb_get_fd@plt>
   18e58:	ldr	r1, [pc, #484]	; 19044 <rb_helper_start+0x324>
   18e5c:	add	r2, pc, r1
   18e60:	ldr	r1, [sp, #44]	; 0x2c
   18e64:	str	r0, [sp, #40]	; 0x28
   18e68:	mov	r0, r1
   18e6c:	movw	r1, #16
   18e70:	ldr	r3, [sp, #40]	; 0x28
   18e74:	bl	5584 <snprintf@plt>
   18e78:	ldr	r1, [sp, #80]	; 0x50
   18e7c:	str	r0, [sp, #36]	; 0x24
   18e80:	mov	r0, r1
   18e84:	bl	4fe4 <rb_set_nb@plt>
   18e88:	ldr	r1, [sp, #84]	; 0x54
   18e8c:	str	r0, [sp, #32]
   18e90:	mov	r0, r1
   18e94:	bl	4fe4 <rb_set_nb@plt>
   18e98:	ldr	r1, [sp, #72]	; 0x48
   18e9c:	str	r0, [sp, #28]
   18ea0:	mov	r0, r1
   18ea4:	bl	4fe4 <rb_set_nb@plt>
   18ea8:	ldr	r1, [sp, #76]	; 0x4c
   18eac:	str	r0, [sp, #24]
   18eb0:	mov	r0, r1
   18eb4:	bl	4fe4 <rb_set_nb@plt>
   18eb8:	ldr	r1, [pc, #384]	; 19040 <rb_helper_start+0x320>
   18ebc:	add	r1, pc, r1
   18ec0:	add	r2, sp, #88	; 0x58
   18ec4:	str	r0, [sp, #20]
   18ec8:	mov	r0, r1
   18ecc:	mov	r1, r2
   18ed0:	movw	r2, #1
   18ed4:	bl	4e88 <rb_setenv@plt>
   18ed8:	ldr	r1, [pc, #348]	; 1903c <rb_helper_start+0x31c>
   18edc:	add	r1, pc, r1
   18ee0:	add	r2, sp, #104	; 0x68
   18ee4:	str	r0, [sp, #16]
   18ee8:	mov	r0, r1
   18eec:	mov	r1, r2
   18ef0:	movw	r2, #1
   18ef4:	bl	4e88 <rb_setenv@plt>
   18ef8:	ldr	r1, [pc, #308]	; 19034 <rb_helper_start+0x314>
   18efc:	add	r1, pc, r1
   18f00:	ldr	r2, [pc, #304]	; 19038 <rb_helper_start+0x318>
   18f04:	add	r2, pc, r2
   18f08:	str	r0, [sp, #12]
   18f0c:	mov	r0, r1
   18f10:	mov	r1, r2
   18f14:	movw	r2, #1
   18f18:	bl	4e88 <rb_setenv@plt>
   18f1c:	ldr	r1, [pc, #268]	; 19030 <rb_helper_start+0x310>
   18f20:	add	r2, pc, r1
   18f24:	add	r1, sp, #120	; 0x78
   18f28:	ldr	r3, [fp, #-16]
   18f2c:	str	r0, [sp, #8]
   18f30:	mov	r0, r1
   18f34:	movw	r1, #128	; 0x80
   18f38:	bl	5584 <snprintf@plt>
   18f3c:	sub	r1, fp, #40	; 0x28
   18f40:	add	r2, sp, #120	; 0x78
   18f44:	str	r2, [fp, #-40]	; 0xffffffd8
   18f48:	movw	r2, #0
   18f4c:	str	r2, [fp, #-36]	; 0xffffffdc
   18f50:	ldr	r2, [fp, #-20]	; 0xffffffec
   18f54:	str	r0, [sp, #4]
   18f58:	mov	r0, r2
   18f5c:	bl	556c <rb_spawn_process@plt>
   18f60:	str	r0, [sp, #68]	; 0x44
   18f64:	ldr	r0, [sp, #68]	; 0x44
   18f68:	cmn	r0, #1
   18f6c:	bne	18fa4 <rb_helper_start+0x284>
   18f70:	ldr	r0, [sp, #80]	; 0x50
   18f74:	bl	5230 <rb_close@plt>
   18f78:	ldr	r0, [sp, #84]	; 0x54
   18f7c:	bl	5230 <rb_close@plt>
   18f80:	ldr	r0, [sp, #72]	; 0x48
   18f84:	bl	5230 <rb_close@plt>
   18f88:	ldr	r0, [sp, #76]	; 0x4c
   18f8c:	bl	5230 <rb_close@plt>
   18f90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18f94:	bl	1904c <rb_free>
   18f98:	movw	r0, #0
   18f9c:	str	r0, [fp, #-12]
   18fa0:	b	1901c <rb_helper_start+0x2fc>
   18fa4:	ldr	r0, [sp, #84]	; 0x54
   18fa8:	bl	5230 <rb_close@plt>
   18fac:	ldr	r0, [sp, #72]	; 0x48
   18fb0:	bl	5230 <rb_close@plt>
   18fb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18fb8:	add	r0, r0, #4
   18fbc:	bl	54b8 <rb_linebuf_newbuf@plt>
   18fc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18fc4:	add	r0, r0, #32
   18fc8:	bl	54b8 <rb_linebuf_newbuf@plt>
   18fcc:	ldr	r0, [sp, #80]	; 0x50
   18fd0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18fd4:	str	r0, [r1, #60]	; 0x3c
   18fd8:	ldr	r0, [sp, #76]	; 0x4c
   18fdc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18fe0:	str	r0, [r1, #64]	; 0x40
   18fe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fe8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18fec:	str	r0, [r1, #76]	; 0x4c
   18ff0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18ff4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18ff8:	str	r0, [r1, #80]	; 0x50
   18ffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19000:	movw	r1, #0
   19004:	str	r1, [r0, #72]	; 0x48
   19008:	ldr	r0, [sp, #68]	; 0x44
   1900c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19010:	str	r0, [r1, #68]	; 0x44
   19014:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19018:	str	r0, [fp, #-12]
   1901c:	ldr	r0, [fp, #-12]
   19020:	sub	sp, fp, #8
   19024:	pop	{r4, r5, fp, pc}
   19028:	.word	0x0000ab40
   1902c:	.word	0x0000aaf9
   19030:	.word	0x0000a9af
   19034:	.word	0x0000a974
   19038:	.word	0x0000a9c7
   1903c:	.word	0x0000a990
   19040:	.word	0x0000a9ac
   19044:	.word	0x00009dc0
   19048:	.word	0x00009df8

0001904c <rb_free>:
   1904c:	push	{fp, lr}
   19050:	mov	fp, sp
   19054:	sub	sp, sp, #8
   19058:	str	r0, [sp, #4]
   1905c:	ldr	r0, [sp, #4]
   19060:	movw	r1, #0
   19064:	cmp	r0, r1
   19068:	movw	r0, #0
   1906c:	movne	r0, #1
   19070:	mvn	r1, #0
   19074:	eor	r0, r0, r1
   19078:	eor	r0, r0, r1
   1907c:	tst	r0, #1
   19080:	beq	1908c <rb_free+0x40>
   19084:	ldr	r0, [sp, #4]
   19088:	bl	50c8 <free@plt>
   1908c:	mov	sp, fp
   19090:	pop	{fp, pc}

00019094 <rb_helper_restart>:
   19094:	push	{fp, lr}
   19098:	mov	fp, sp
   1909c:	sub	sp, sp, #8
   190a0:	str	r0, [sp, #4]
   190a4:	ldr	r0, [sp, #4]
   190a8:	ldr	r0, [r0, #80]	; 0x50
   190ac:	ldr	r1, [sp, #4]
   190b0:	str	r0, [sp]
   190b4:	mov	r0, r1
   190b8:	ldr	r1, [sp]
   190bc:	blx	r1
   190c0:	mov	sp, fp
   190c4:	pop	{fp, pc}

000190c8 <rb_helper_write_queue>:
   190c8:	sub	sp, sp, #8
   190cc:	push	{fp, lr}
   190d0:	mov	fp, sp
   190d4:	sub	sp, sp, #32
   190d8:	str	r3, [fp, #12]
   190dc:	str	r2, [fp, #8]
   190e0:	str	r0, [fp, #-4]
   190e4:	str	r1, [fp, #-8]
   190e8:	movw	r0, #0
   190ec:	str	r0, [sp]
   190f0:	ldr	r1, [fp, #-8]
   190f4:	str	r1, [sp, #4]
   190f8:	str	r0, [sp, #8]
   190fc:	sub	r1, fp, #12
   19100:	str	r1, [sp, #12]
   19104:	str	r0, [sp, #16]
   19108:	add	r0, fp, #8
   1910c:	str	r0, [r1]
   19110:	ldr	r0, [fp, #-4]
   19114:	add	r0, r0, #4
   19118:	mov	r1, sp
   1911c:	bl	55c0 <rb_linebuf_put@plt>
   19120:	sub	r0, fp, #12
   19124:	mov	sp, fp
   19128:	pop	{fp, lr}
   1912c:	add	sp, sp, #8
   19130:	bx	lr

00019134 <rb_helper_write_flush>:
   19134:	push	{fp, lr}
   19138:	mov	fp, sp
   1913c:	sub	sp, sp, #8
   19140:	str	r0, [sp, #4]
   19144:	ldr	r0, [sp, #4]
   19148:	ldr	r0, [r0, #64]	; 0x40
   1914c:	ldr	r1, [sp, #4]
   19150:	bl	1915c <rb_helper_write_sendq>
   19154:	mov	sp, fp
   19158:	pop	{fp, pc}

0001915c <rb_helper_write_sendq>:
   1915c:	push	{fp, lr}
   19160:	mov	fp, sp
   19164:	sub	sp, sp, #24
   19168:	str	r0, [fp, #-4]
   1916c:	str	r1, [fp, #-8]
   19170:	ldr	r0, [fp, #-8]
   19174:	str	r0, [sp, #12]
   19178:	ldr	r0, [sp, #12]
   1917c:	ldr	r0, [r0, #16]
   19180:	cmp	r0, #0
   19184:	ble	191e8 <rb_helper_write_sendq+0x8c>
   19188:	b	1918c <rb_helper_write_sendq+0x30>
   1918c:	ldr	r0, [fp, #-4]
   19190:	ldr	r1, [sp, #12]
   19194:	add	r1, r1, #4
   19198:	bl	51a0 <rb_linebuf_flush@plt>
   1919c:	str	r0, [sp, #8]
   191a0:	cmp	r0, #0
   191a4:	ble	191ac <rb_helper_write_sendq+0x50>
   191a8:	b	1918c <rb_helper_write_sendq+0x30>
   191ac:	ldr	r0, [sp, #8]
   191b0:	cmp	r0, #0
   191b4:	beq	191d8 <rb_helper_write_sendq+0x7c>
   191b8:	ldr	r0, [sp, #8]
   191bc:	cmp	r0, #0
   191c0:	bge	191e4 <rb_helper_write_sendq+0x88>
   191c4:	bl	56c8 <__errno_location@plt>
   191c8:	ldr	r0, [r0]
   191cc:	bl	4d98 <rb_ignore_errno@plt>
   191d0:	cmp	r0, #0
   191d4:	bne	191e4 <rb_helper_write_sendq+0x88>
   191d8:	ldr	r0, [sp, #12]
   191dc:	bl	4f9c <rb_helper_restart@plt>
   191e0:	b	19220 <rb_helper_write_sendq+0xc4>
   191e4:	b	191e8 <rb_helper_write_sendq+0x8c>
   191e8:	ldr	r0, [sp, #12]
   191ec:	ldr	r0, [r0, #16]
   191f0:	cmp	r0, #0
   191f4:	ble	19220 <rb_helper_write_sendq+0xc4>
   191f8:	ldr	r0, [pc, #40]	; 19228 <rb_helper_write_sendq+0xcc>
   191fc:	add	r2, pc, r0
   19200:	ldr	r0, [sp, #12]
   19204:	ldr	r0, [r0, #64]	; 0x40
   19208:	ldr	r1, [sp, #12]
   1920c:	movw	r3, #2
   19210:	str	r1, [sp, #4]
   19214:	mov	r1, r3
   19218:	ldr	r3, [sp, #4]
   1921c:	bl	4e64 <rb_setselect@plt>
   19220:	mov	sp, fp
   19224:	pop	{fp, pc}
   19228:	.word	0xffffff58

0001922c <rb_helper_write>:
   1922c:	sub	sp, sp, #8
   19230:	push	{fp, lr}
   19234:	mov	fp, sp
   19238:	sub	sp, sp, #40	; 0x28
   1923c:	str	r3, [fp, #12]
   19240:	str	r2, [fp, #8]
   19244:	str	r0, [fp, #-4]
   19248:	str	r1, [fp, #-8]
   1924c:	movw	r0, #0
   19250:	str	r0, [sp, #8]
   19254:	ldr	r1, [fp, #-8]
   19258:	str	r1, [sp, #12]
   1925c:	str	r0, [sp, #16]
   19260:	sub	r1, fp, #12
   19264:	str	r1, [sp, #20]
   19268:	str	r0, [sp, #24]
   1926c:	add	r0, fp, #8
   19270:	str	r0, [r1]
   19274:	ldr	r0, [fp, #-4]
   19278:	add	r0, r0, #4
   1927c:	add	r1, sp, #8
   19280:	bl	55c0 <rb_linebuf_put@plt>
   19284:	sub	r0, fp, #12
   19288:	ldr	r1, [fp, #-4]
   1928c:	str	r0, [sp, #4]
   19290:	mov	r0, r1
   19294:	bl	19134 <rb_helper_write_flush>
   19298:	mov	sp, fp
   1929c:	pop	{fp, lr}
   192a0:	add	sp, sp, #8
   192a4:	bx	lr

000192a8 <rb_helper_run>:
   192a8:	push	{fp, lr}
   192ac:	mov	fp, sp
   192b0:	sub	sp, sp, #8
   192b4:	str	r0, [sp, #4]
   192b8:	ldr	r0, [sp, #4]
   192bc:	movw	r1, #0
   192c0:	cmp	r0, r1
   192c4:	bne	192cc <rb_helper_run+0x24>
   192c8:	b	192dc <rb_helper_run+0x34>
   192cc:	ldr	r0, [sp, #4]
   192d0:	ldr	r0, [r0, #60]	; 0x3c
   192d4:	ldr	r1, [sp, #4]
   192d8:	bl	192e4 <rb_helper_read_cb>
   192dc:	mov	sp, fp
   192e0:	pop	{fp, pc}

000192e4 <rb_helper_read_cb>:
   192e4:	push	{fp, lr}
   192e8:	mov	fp, sp
   192ec:	sub	sp, sp, #24
   192f0:	str	r0, [fp, #-4]
   192f4:	str	r1, [fp, #-8]
   192f8:	ldr	r0, [fp, #-8]
   192fc:	str	r0, [sp, #12]
   19300:	ldr	r0, [sp, #12]
   19304:	movw	r1, #0
   19308:	cmp	r0, r1
   1930c:	bne	19314 <rb_helper_read_cb+0x30>
   19310:	b	193d4 <rb_helper_read_cb+0xf0>
   19314:	b	19318 <rb_helper_read_cb+0x34>
   19318:	ldr	r0, [pc, #188]	; 193dc <rb_helper_read_cb+0xf8>
   1931c:	add	r1, pc, r0
   19320:	ldr	r0, [sp, #12]
   19324:	ldr	r0, [r0, #60]	; 0x3c
   19328:	movw	r2, #32768	; 0x8000
   1932c:	bl	5158 <rb_read@plt>
   19330:	str	r0, [sp, #8]
   19334:	cmp	r0, #0
   19338:	ble	19374 <rb_helper_read_cb+0x90>
   1933c:	ldr	r0, [pc, #160]	; 193e4 <rb_helper_read_cb+0x100>
   19340:	add	r1, pc, r0
   19344:	ldr	r0, [sp, #12]
   19348:	add	r0, r0, #32
   1934c:	ldr	r2, [sp, #8]
   19350:	movw	r3, #0
   19354:	bl	5044 <rb_linebuf_parse@plt>
   19358:	ldr	r1, [sp, #12]
   1935c:	ldr	r1, [r1, #76]	; 0x4c
   19360:	ldr	r2, [sp, #12]
   19364:	str	r0, [sp, #4]
   19368:	mov	r0, r2
   1936c:	blx	r1
   19370:	b	19318 <rb_helper_read_cb+0x34>
   19374:	ldr	r0, [sp, #8]
   19378:	cmp	r0, #0
   1937c:	beq	193a0 <rb_helper_read_cb+0xbc>
   19380:	ldr	r0, [sp, #8]
   19384:	cmp	r0, #0
   19388:	bge	193ac <rb_helper_read_cb+0xc8>
   1938c:	bl	56c8 <__errno_location@plt>
   19390:	ldr	r0, [r0]
   19394:	bl	4d98 <rb_ignore_errno@plt>
   19398:	cmp	r0, #0
   1939c:	bne	193ac <rb_helper_read_cb+0xc8>
   193a0:	ldr	r0, [sp, #12]
   193a4:	bl	4f9c <rb_helper_restart@plt>
   193a8:	b	193d4 <rb_helper_read_cb+0xf0>
   193ac:	ldr	r0, [pc, #44]	; 193e0 <rb_helper_read_cb+0xfc>
   193b0:	add	r2, pc, r0
   193b4:	ldr	r0, [sp, #12]
   193b8:	ldr	r0, [r0, #60]	; 0x3c
   193bc:	ldr	r1, [sp, #12]
   193c0:	movw	r3, #1
   193c4:	str	r1, [sp]
   193c8:	mov	r1, r3
   193cc:	ldr	r3, [sp]
   193d0:	bl	4e64 <rb_setselect@plt>
   193d4:	mov	sp, fp
   193d8:	pop	{fp, pc}
   193dc:	.word	0x0003052c
   193e0:	.word	0xffffff2c
   193e4:	.word	0x00030508

000193e8 <rb_helper_close>:
   193e8:	push	{fp, lr}
   193ec:	mov	fp, sp
   193f0:	sub	sp, sp, #8
   193f4:	str	r0, [sp, #4]
   193f8:	ldr	r0, [sp, #4]
   193fc:	movw	r1, #0
   19400:	cmp	r0, r1
   19404:	bne	1940c <rb_helper_close+0x24>
   19408:	b	19444 <rb_helper_close+0x5c>
   1940c:	ldr	r0, [sp, #4]
   19410:	ldr	r0, [r0, #68]	; 0x44
   19414:	movw	r1, #9
   19418:	bl	50bc <rb_kill@plt>
   1941c:	ldr	r1, [sp, #4]
   19420:	ldr	r1, [r1, #60]	; 0x3c
   19424:	str	r0, [sp]
   19428:	mov	r0, r1
   1942c:	bl	5230 <rb_close@plt>
   19430:	ldr	r0, [sp, #4]
   19434:	ldr	r0, [r0, #64]	; 0x40
   19438:	bl	5230 <rb_close@plt>
   1943c:	ldr	r0, [sp, #4]
   19440:	bl	1904c <rb_free>
   19444:	mov	sp, fp
   19448:	pop	{fp, pc}

0001944c <rb_helper_read>:
   1944c:	push	{fp, lr}
   19450:	mov	fp, sp
   19454:	sub	sp, sp, #24
   19458:	str	r0, [fp, #-4]
   1945c:	str	r1, [fp, #-8]
   19460:	str	r2, [sp, #12]
   19464:	ldr	r0, [fp, #-4]
   19468:	add	r0, r0, #32
   1946c:	ldr	r1, [fp, #-8]
   19470:	ldr	r2, [sp, #12]
   19474:	movw	r3, #0
   19478:	str	r3, [sp, #8]
   1947c:	ldr	ip, [sp, #8]
   19480:	str	ip, [sp]
   19484:	bl	5170 <rb_linebuf_get@plt>
   19488:	mov	sp, fp
   1948c:	pop	{fp, pc}

00019490 <rb_helper_loop>:
   19490:	push	{fp, lr}
   19494:	mov	fp, sp
   19498:	sub	sp, sp, #8
   1949c:	str	r0, [sp, #4]
   194a0:	str	r1, [sp]
   194a4:	ldr	r0, [sp, #4]
   194a8:	bl	4d20 <rb_helper_run@plt>
   194ac:	ldr	r0, [sp]
   194b0:	bl	511c <rb_lib_loop@plt>

000194b4 <rb_init_netio_devpoll>:
   194b4:	movw	r0, #38	; 0x26
   194b8:	bx	lr

000194bc <rb_setselect_devpoll>:
   194bc:	push	{fp, lr}
   194c0:	mov	fp, sp
   194c4:	sub	sp, sp, #16
   194c8:	str	r0, [fp, #-4]
   194cc:	str	r1, [sp, #8]
   194d0:	str	r2, [sp, #4]
   194d4:	str	r3, [sp]
   194d8:	bl	56c8 <__errno_location@plt>
   194dc:	movw	r1, #38	; 0x26
   194e0:	str	r1, [r0]
   194e4:	mov	sp, fp
   194e8:	pop	{fp, pc}

000194ec <rb_select_devpoll>:
   194ec:	push	{fp, lr}
   194f0:	mov	fp, sp
   194f4:	sub	sp, sp, #8
   194f8:	str	r0, [sp, #4]
   194fc:	bl	56c8 <__errno_location@plt>
   19500:	movw	r1, #38	; 0x26
   19504:	str	r1, [r0]
   19508:	mvn	r0, #0
   1950c:	mov	sp, fp
   19510:	pop	{fp, pc}

00019514 <rb_setup_fd_devpoll>:
   19514:	push	{fp, lr}
   19518:	mov	fp, sp
   1951c:	sub	sp, sp, #8
   19520:	str	r0, [sp, #4]
   19524:	bl	56c8 <__errno_location@plt>
   19528:	movw	r1, #38	; 0x26
   1952c:	str	r1, [r0]
   19530:	mvn	r0, #0
   19534:	mov	sp, fp
   19538:	pop	{fp, pc}

0001953c <rb_init_netio_epoll>:
   1953c:	push	{fp, lr}
   19540:	mov	fp, sp
   19544:	sub	sp, sp, #8
   19548:	ldr	r0, [pc, #220]	; 1962c <rb_init_netio_epoll+0xf0>
   1954c:	add	r0, pc, r0
   19550:	ldr	r1, [pc, #216]	; 19630 <rb_init_netio_epoll+0xf4>
   19554:	add	r1, pc, r1
   19558:	movw	r2, #0
   1955c:	str	r2, [r1]
   19560:	str	r2, [r0]
   19564:	movw	r0, #12
   19568:	bl	19644 <rb_malloc>
   1956c:	ldr	r1, [pc, #180]	; 19628 <rb_init_netio_epoll+0xec>
   19570:	add	r1, pc, r1
   19574:	str	r0, [r1]
   19578:	bl	4d74 <getdtablesize@plt>
   1957c:	ldr	r1, [pc, #160]	; 19624 <rb_init_netio_epoll+0xe8>
   19580:	add	r1, pc, r1
   19584:	ldr	r2, [r1]
   19588:	str	r0, [r2, #8]
   1958c:	ldr	r0, [r1]
   19590:	ldr	r0, [r0, #8]
   19594:	bl	4eb8 <epoll_create@plt>
   19598:	ldr	r1, [pc, #128]	; 19620 <rb_init_netio_epoll+0xe4>
   1959c:	add	r1, pc, r1
   195a0:	ldr	r2, [r1]
   195a4:	str	r0, [r2]
   195a8:	ldr	r0, [r1]
   195ac:	ldr	r0, [r0]
   195b0:	cmp	r0, #0
   195b4:	bge	195c4 <rb_init_netio_epoll+0x88>
   195b8:	mvn	r0, #0
   195bc:	str	r0, [sp, #4]
   195c0:	b	19614 <rb_init_netio_epoll+0xd8>
   195c4:	ldr	r0, [pc, #108]	; 19638 <rb_init_netio_epoll+0xfc>
   195c8:	ldr	r0, [pc, r0]
   195cc:	ldr	r0, [r0]
   195d0:	ldr	r2, [pc, #100]	; 1963c <rb_init_netio_epoll+0x100>
   195d4:	add	r2, pc, r2
   195d8:	mov	r1, #64	; 0x40
   195dc:	bl	544c <rb_open@plt>
   195e0:	ldr	r1, [pc, #88]	; 19640 <rb_init_netio_epoll+0x104>
   195e4:	ldr	r1, [pc, r1]
   195e8:	ldr	r1, [r1, #8]
   195ec:	lsl	r1, r1, #4
   195f0:	str	r0, [sp]
   195f4:	mov	r0, r1
   195f8:	bl	19644 <rb_malloc>
   195fc:	ldr	r1, [pc, #48]	; 19634 <rb_init_netio_epoll+0xf8>
   19600:	add	r1, pc, r1
   19604:	ldr	r1, [r1]
   19608:	str	r0, [r1, #4]
   1960c:	movw	r0, #0
   19610:	str	r0, [sp, #4]
   19614:	ldr	r0, [sp, #4]
   19618:	mov	sp, fp
   1961c:	pop	{fp, pc}
   19620:	.word	0x000382b4
   19624:	.word	0x000382d0
   19628:	.word	0x000382e0
   1962c:	.word	0x00038300
   19630:	.word	0x000382f4
   19634:	.word	0x00038250
   19638:	.word	0x00038288
   1963c:	.word	0x0000a30b
   19640:	.word	0x0003826c

00019644 <rb_malloc>:
   19644:	push	{fp, lr}
   19648:	mov	fp, sp
   1964c:	sub	sp, sp, #8
   19650:	str	r0, [sp, #4]
   19654:	ldr	r1, [sp, #4]
   19658:	movw	r0, #1
   1965c:	bl	4fb4 <calloc@plt>
   19660:	str	r0, [sp]
   19664:	ldr	r0, [sp]
   19668:	movw	r1, #0
   1966c:	cmp	r0, r1
   19670:	movw	r0, #0
   19674:	moveq	r0, #1
   19678:	mvn	r1, #0
   1967c:	eor	r0, r0, r1
   19680:	eor	r0, r0, r1
   19684:	tst	r0, #1
   19688:	beq	19690 <rb_malloc+0x4c>
   1968c:	bl	5350 <rb_outofmemory@plt>
   19690:	ldr	r0, [sp]
   19694:	mov	sp, fp
   19698:	pop	{fp, pc}

0001969c <rb_setup_fd_epoll>:
   1969c:	sub	sp, sp, #4
   196a0:	str	r0, [sp]
   196a4:	movw	r0, #0
   196a8:	add	sp, sp, #4
   196ac:	bx	lr

000196b0 <rb_setselect_epoll>:
   196b0:	push	{fp, lr}
   196b4:	mov	fp, sp
   196b8:	sub	sp, sp, #48	; 0x30
   196bc:	str	r0, [fp, #-4]
   196c0:	str	r1, [fp, #-8]
   196c4:	str	r2, [fp, #-12]
   196c8:	str	r3, [fp, #-16]
   196cc:	ldr	r0, [fp, #-4]
   196d0:	ldr	r0, [r0, #20]
   196d4:	str	r0, [sp, #12]
   196d8:	mvn	r0, #0
   196dc:	str	r0, [sp, #8]
   196e0:	ldr	r0, [fp, #-8]
   196e4:	and	r0, r0, #1
   196e8:	cmp	r0, #0
   196ec:	beq	19740 <rb_setselect_epoll+0x90>
   196f0:	ldr	r0, [fp, #-12]
   196f4:	movw	r1, #0
   196f8:	cmp	r0, r1
   196fc:	beq	19714 <rb_setselect_epoll+0x64>
   19700:	ldr	r0, [fp, #-4]
   19704:	ldr	r1, [r0, #20]
   19708:	orr	r1, r1, #1
   1970c:	str	r1, [r0, #20]
   19710:	b	19728 <rb_setselect_epoll+0x78>
   19714:	ldr	r0, [fp, #-4]
   19718:	ldr	r1, [r0, #20]
   1971c:	mvn	r2, #1
   19720:	and	r1, r1, r2
   19724:	str	r1, [r0, #20]
   19728:	ldr	r0, [fp, #-12]
   1972c:	ldr	r1, [fp, #-4]
   19730:	str	r0, [r1, #28]
   19734:	ldr	r0, [fp, #-16]
   19738:	ldr	r1, [fp, #-4]
   1973c:	str	r0, [r1, #32]
   19740:	ldr	r0, [fp, #-8]
   19744:	and	r0, r0, #2
   19748:	cmp	r0, #0
   1974c:	beq	197a0 <rb_setselect_epoll+0xf0>
   19750:	ldr	r0, [fp, #-12]
   19754:	movw	r1, #0
   19758:	cmp	r0, r1
   1975c:	beq	19774 <rb_setselect_epoll+0xc4>
   19760:	ldr	r0, [fp, #-4]
   19764:	ldr	r1, [r0, #20]
   19768:	orr	r1, r1, #4
   1976c:	str	r1, [r0, #20]
   19770:	b	19788 <rb_setselect_epoll+0xd8>
   19774:	ldr	r0, [fp, #-4]
   19778:	ldr	r1, [r0, #20]
   1977c:	mvn	r2, #4
   19780:	and	r1, r1, r2
   19784:	str	r1, [r0, #20]
   19788:	ldr	r0, [fp, #-12]
   1978c:	ldr	r1, [fp, #-4]
   19790:	str	r0, [r1, #36]	; 0x24
   19794:	ldr	r0, [fp, #-16]
   19798:	ldr	r1, [fp, #-4]
   1979c:	str	r0, [r1, #40]	; 0x28
   197a0:	ldr	r0, [sp, #12]
   197a4:	cmp	r0, #0
   197a8:	bne	197c0 <rb_setselect_epoll+0x110>
   197ac:	ldr	r0, [fp, #-4]
   197b0:	ldr	r0, [r0, #20]
   197b4:	cmp	r0, #0
   197b8:	bne	197c0 <rb_setselect_epoll+0x110>
   197bc:	b	198c8 <rb_setselect_epoll+0x218>
   197c0:	ldr	r0, [fp, #-4]
   197c4:	ldr	r0, [r0, #20]
   197c8:	cmp	r0, #0
   197cc:	bgt	197dc <rb_setselect_epoll+0x12c>
   197d0:	movw	r0, #2
   197d4:	str	r0, [sp, #8]
   197d8:	b	19828 <rb_setselect_epoll+0x178>
   197dc:	ldr	r0, [sp, #12]
   197e0:	cmp	r0, #0
   197e4:	bne	19804 <rb_setselect_epoll+0x154>
   197e8:	ldr	r0, [fp, #-4]
   197ec:	ldr	r0, [r0, #20]
   197f0:	cmp	r0, #0
   197f4:	ble	19804 <rb_setselect_epoll+0x154>
   197f8:	movw	r0, #1
   197fc:	str	r0, [sp, #8]
   19800:	b	19824 <rb_setselect_epoll+0x174>
   19804:	ldr	r0, [fp, #-4]
   19808:	ldr	r0, [r0, #20]
   1980c:	ldr	r1, [sp, #12]
   19810:	cmp	r0, r1
   19814:	beq	19820 <rb_setselect_epoll+0x170>
   19818:	movw	r0, #3
   1981c:	str	r0, [sp, #8]
   19820:	b	19824 <rb_setselect_epoll+0x174>
   19824:	b	19828 <rb_setselect_epoll+0x178>
   19828:	b	1982c <rb_setselect_epoll+0x17c>
   1982c:	ldr	r0, [sp, #8]
   19830:	cmn	r0, #1
   19834:	bne	1983c <rb_setselect_epoll+0x18c>
   19838:	b	198c8 <rb_setselect_epoll+0x218>
   1983c:	ldr	r0, [fp, #-4]
   19840:	ldr	r0, [r0, #20]
   19844:	str	r0, [sp, #16]
   19848:	ldr	r0, [fp, #-4]
   1984c:	str	r0, [sp, #24]
   19850:	ldr	r0, [sp, #8]
   19854:	cmp	r0, #1
   19858:	beq	19868 <rb_setselect_epoll+0x1b8>
   1985c:	ldr	r0, [sp, #8]
   19860:	cmp	r0, #3
   19864:	bne	19874 <rb_setselect_epoll+0x1c4>
   19868:	ldr	r0, [sp, #16]
   1986c:	orr	r0, r0, #-2147483648	; 0x80000000
   19870:	str	r0, [sp, #16]
   19874:	ldr	r0, [pc, #84]	; 198d0 <rb_setselect_epoll+0x220>
   19878:	add	r0, pc, r0
   1987c:	ldr	r0, [r0]
   19880:	ldr	r0, [r0]
   19884:	ldr	r1, [sp, #8]
   19888:	ldr	r2, [fp, #-4]
   1988c:	ldr	r2, [r2, #12]
   19890:	add	r3, sp, #16
   19894:	bl	562c <epoll_ctl@plt>
   19898:	cmp	r0, #0
   1989c:	beq	198c8 <rb_setselect_epoll+0x218>
   198a0:	bl	56c8 <__errno_location@plt>
   198a4:	ldr	r0, [r0]
   198a8:	bl	4d5c <strerror@plt>
   198ac:	ldr	r1, [pc, #32]	; 198d4 <rb_setselect_epoll+0x224>
   198b0:	add	r1, pc, r1
   198b4:	str	r0, [sp, #4]
   198b8:	mov	r0, r1
   198bc:	ldr	r1, [sp, #4]
   198c0:	bl	52e4 <rb_lib_log@plt>
   198c4:	bl	4d80 <abort@plt>
   198c8:	mov	sp, fp
   198cc:	pop	{fp, pc}
   198d0:	.word	0x00037fd8
   198d4:	.word	0x0000a045

000198d8 <rb_select_epoll>:
   198d8:	push	{fp, lr}
   198dc:	mov	fp, sp
   198e0:	sub	sp, sp, #88	; 0x58
   198e4:	ldr	r1, [pc, #820]	; 19c20 <rb_select_epoll+0x348>
   198e8:	add	r1, pc, r1
   198ec:	str	r0, [fp, #-8]
   198f0:	ldr	r0, [r1]
   198f4:	ldr	r0, [r0]
   198f8:	ldr	r2, [r1]
   198fc:	ldr	r2, [r2, #4]
   19900:	ldr	r1, [r1]
   19904:	ldr	r1, [r1, #8]
   19908:	ldr	r3, [fp, #-8]
   1990c:	str	r1, [sp, #20]
   19910:	mov	r1, r2
   19914:	ldr	r2, [sp, #20]
   19918:	bl	5188 <epoll_wait@plt>
   1991c:	str	r0, [fp, #-12]
   19920:	bl	56c8 <__errno_location@plt>
   19924:	ldr	r0, [r0]
   19928:	str	r0, [sp, #36]	; 0x24
   1992c:	bl	535c <rb_set_time@plt>
   19930:	ldr	r0, [sp, #36]	; 0x24
   19934:	str	r0, [sp, #16]
   19938:	bl	56c8 <__errno_location@plt>
   1993c:	ldr	r1, [sp, #16]
   19940:	str	r1, [r0]
   19944:	ldr	r0, [fp, #-12]
   19948:	cmp	r0, #0
   1994c:	bge	1996c <rb_select_epoll+0x94>
   19950:	ldr	r0, [sp, #36]	; 0x24
   19954:	bl	4d98 <rb_ignore_errno@plt>
   19958:	cmp	r0, #0
   1995c:	bne	1996c <rb_select_epoll+0x94>
   19960:	movw	r0, #5
   19964:	str	r0, [fp, #-4]
   19968:	b	19c14 <rb_select_epoll+0x33c>
   1996c:	ldr	r0, [fp, #-12]
   19970:	cmp	r0, #0
   19974:	bgt	19984 <rb_select_epoll+0xac>
   19978:	movw	r0, #0
   1997c:	str	r0, [fp, #-4]
   19980:	b	19c14 <rb_select_epoll+0x33c>
   19984:	movw	r0, #0
   19988:	str	r0, [fp, #-16]
   1998c:	ldr	r0, [fp, #-16]
   19990:	ldr	r1, [fp, #-12]
   19994:	cmp	r0, r1
   19998:	bge	19c0c <rb_select_epoll+0x334>
   1999c:	ldr	r0, [pc, #648]	; 19c2c <rb_select_epoll+0x354>
   199a0:	ldr	r0, [pc, r0]
   199a4:	ldr	r0, [r0, #4]
   199a8:	ldr	r1, [fp, #-16]
   199ac:	add	r0, r0, r1, lsl #4
   199b0:	ldr	r0, [r0, #8]
   199b4:	str	r0, [sp, #24]
   199b8:	ldr	r0, [sp, #24]
   199bc:	ldr	r0, [r0, #20]
   199c0:	str	r0, [fp, #-24]	; 0xffffffe8
   199c4:	ldr	r0, [pc, #612]	; 19c30 <rb_select_epoll+0x358>
   199c8:	ldr	r0, [pc, r0]
   199cc:	ldr	r0, [r0, #4]
   199d0:	ldr	r1, [fp, #-16]
   199d4:	add	r0, r0, r1, lsl #4
   199d8:	ldr	r0, [r0]
   199dc:	and	r0, r0, #25
   199e0:	cmp	r0, #0
   199e4:	beq	19a44 <rb_select_epoll+0x16c>
   199e8:	ldr	r0, [sp, #24]
   199ec:	ldr	r0, [r0, #28]
   199f0:	str	r0, [sp, #28]
   199f4:	ldr	r0, [sp, #24]
   199f8:	ldr	r0, [r0, #32]
   199fc:	str	r0, [sp, #32]
   19a00:	ldr	r0, [sp, #24]
   19a04:	movw	r1, #0
   19a08:	str	r1, [r0, #28]
   19a0c:	ldr	r0, [sp, #24]
   19a10:	str	r1, [r0, #32]
   19a14:	ldr	r0, [sp, #28]
   19a18:	cmp	r0, r1
   19a1c:	beq	19a40 <rb_select_epoll+0x168>
   19a20:	ldr	r0, [sp, #28]
   19a24:	ldr	r1, [sp, #24]
   19a28:	ldr	r2, [sp, #32]
   19a2c:	str	r0, [sp, #12]
   19a30:	mov	r0, r1
   19a34:	mov	r1, r2
   19a38:	ldr	r2, [sp, #12]
   19a3c:	blx	r2
   19a40:	b	19a44 <rb_select_epoll+0x16c>
   19a44:	ldr	r0, [sp, #24]
   19a48:	ldrb	r0, [r0, #16]
   19a4c:	and	r0, r0, #1
   19a50:	cmp	r0, #0
   19a54:	bne	19a5c <rb_select_epoll+0x184>
   19a58:	b	19bfc <rb_select_epoll+0x324>
   19a5c:	ldr	r0, [pc, #464]	; 19c34 <rb_select_epoll+0x35c>
   19a60:	ldr	r0, [pc, r0]
   19a64:	ldr	r0, [r0, #4]
   19a68:	ldr	r1, [fp, #-16]
   19a6c:	add	r0, r0, r1, lsl #4
   19a70:	ldr	r0, [r0]
   19a74:	and	r0, r0, #28
   19a78:	cmp	r0, #0
   19a7c:	beq	19adc <rb_select_epoll+0x204>
   19a80:	ldr	r0, [sp, #24]
   19a84:	ldr	r0, [r0, #36]	; 0x24
   19a88:	str	r0, [sp, #28]
   19a8c:	ldr	r0, [sp, #24]
   19a90:	ldr	r0, [r0, #40]	; 0x28
   19a94:	str	r0, [sp, #32]
   19a98:	ldr	r0, [sp, #24]
   19a9c:	movw	r1, #0
   19aa0:	str	r1, [r0, #36]	; 0x24
   19aa4:	ldr	r0, [sp, #24]
   19aa8:	str	r1, [r0, #40]	; 0x28
   19aac:	ldr	r0, [sp, #28]
   19ab0:	cmp	r0, r1
   19ab4:	beq	19ad8 <rb_select_epoll+0x200>
   19ab8:	ldr	r0, [sp, #28]
   19abc:	ldr	r1, [sp, #24]
   19ac0:	ldr	r2, [sp, #32]
   19ac4:	str	r0, [sp, #8]
   19ac8:	mov	r0, r1
   19acc:	mov	r1, r2
   19ad0:	ldr	r2, [sp, #8]
   19ad4:	blx	r2
   19ad8:	b	19adc <rb_select_epoll+0x204>
   19adc:	ldr	r0, [sp, #24]
   19ae0:	ldrb	r0, [r0, #16]
   19ae4:	and	r0, r0, #1
   19ae8:	cmp	r0, #0
   19aec:	bne	19af4 <rb_select_epoll+0x21c>
   19af0:	b	19bfc <rb_select_epoll+0x324>
   19af4:	movw	r0, #0
   19af8:	str	r0, [fp, #-20]	; 0xffffffec
   19afc:	ldr	r1, [sp, #24]
   19b00:	ldr	r1, [r1, #28]
   19b04:	cmp	r1, r0
   19b08:	beq	19b18 <rb_select_epoll+0x240>
   19b0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19b10:	orr	r0, r0, #1
   19b14:	str	r0, [fp, #-20]	; 0xffffffec
   19b18:	ldr	r0, [sp, #24]
   19b1c:	ldr	r0, [r0, #36]	; 0x24
   19b20:	movw	r1, #0
   19b24:	cmp	r0, r1
   19b28:	beq	19b38 <rb_select_epoll+0x260>
   19b2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19b30:	orr	r0, r0, #4
   19b34:	str	r0, [fp, #-20]	; 0xffffffec
   19b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19b40:	cmp	r0, r1
   19b44:	beq	19bf8 <rb_select_epoll+0x320>
   19b48:	ldr	r0, [fp, #-20]	; 0xffffffec
   19b4c:	cmp	r0, #0
   19b50:	bne	19b60 <rb_select_epoll+0x288>
   19b54:	movw	r0, #2
   19b58:	str	r0, [fp, #-28]	; 0xffffffe4
   19b5c:	b	19b68 <rb_select_epoll+0x290>
   19b60:	movw	r0, #3
   19b64:	str	r0, [fp, #-28]	; 0xffffffe4
   19b68:	ldr	r0, [fp, #-20]	; 0xffffffec
   19b6c:	str	r0, [sp, #40]	; 0x28
   19b70:	ldr	r1, [sp, #24]
   19b74:	str	r0, [r1, #20]
   19b78:	ldr	r0, [sp, #24]
   19b7c:	str	r0, [sp, #48]	; 0x30
   19b80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19b84:	cmp	r0, #3
   19b88:	beq	19b98 <rb_select_epoll+0x2c0>
   19b8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19b90:	cmp	r0, #1
   19b94:	bne	19ba4 <rb_select_epoll+0x2cc>
   19b98:	ldr	r0, [sp, #40]	; 0x28
   19b9c:	orr	r0, r0, #-2147483648	; 0x80000000
   19ba0:	str	r0, [sp, #40]	; 0x28
   19ba4:	ldr	r0, [pc, #120]	; 19c24 <rb_select_epoll+0x34c>
   19ba8:	add	r0, pc, r0
   19bac:	ldr	r0, [r0]
   19bb0:	ldr	r0, [r0]
   19bb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19bb8:	ldr	r2, [sp, #24]
   19bbc:	ldr	r2, [r2, #12]
   19bc0:	add	r3, sp, #40	; 0x28
   19bc4:	bl	562c <epoll_ctl@plt>
   19bc8:	cmp	r0, #0
   19bcc:	beq	19bf4 <rb_select_epoll+0x31c>
   19bd0:	bl	56c8 <__errno_location@plt>
   19bd4:	ldr	r0, [r0]
   19bd8:	bl	4d5c <strerror@plt>
   19bdc:	ldr	r1, [pc, #68]	; 19c28 <rb_select_epoll+0x350>
   19be0:	add	r1, pc, r1
   19be4:	str	r0, [sp, #4]
   19be8:	mov	r0, r1
   19bec:	ldr	r1, [sp, #4]
   19bf0:	bl	52e4 <rb_lib_log@plt>
   19bf4:	b	19bf8 <rb_select_epoll+0x320>
   19bf8:	b	19bfc <rb_select_epoll+0x324>
   19bfc:	ldr	r0, [fp, #-16]
   19c00:	add	r0, r0, #1
   19c04:	str	r0, [fp, #-16]
   19c08:	b	1998c <rb_select_epoll+0xb4>
   19c0c:	movw	r0, #0
   19c10:	str	r0, [fp, #-4]
   19c14:	ldr	r0, [fp, #-4]
   19c18:	mov	sp, fp
   19c1c:	pop	{fp, pc}
   19c20:	.word	0x00037f68
   19c24:	.word	0x00037ca8
   19c28:	.word	0x00009d40
   19c2c:	.word	0x00037eb0
   19c30:	.word	0x00037e88
   19c34:	.word	0x00037df0

00019c38 <rb_epoll_supports_event>:
   19c38:	push	{r4, r5, fp, lr}
   19c3c:	add	fp, sp, #8
   19c40:	sub	sp, sp, #304	; 0x130
   19c44:	ldr	r0, [pc, #376]	; 19dc4 <rb_epoll_supports_event+0x18c>
   19c48:	add	r0, pc, r0
   19c4c:	ldr	r0, [r0]
   19c50:	cmp	r0, #1
   19c54:	bne	19c64 <rb_epoll_supports_event+0x2c>
   19c58:	movw	r0, #1
   19c5c:	str	r0, [fp, #-12]
   19c60:	b	19db8 <rb_epoll_supports_event+0x180>
   19c64:	ldr	r0, [pc, #348]	; 19dc8 <rb_epoll_supports_event+0x190>
   19c68:	add	r0, pc, r0
   19c6c:	ldr	r0, [r0]
   19c70:	cmn	r0, #1
   19c74:	bne	19c84 <rb_epoll_supports_event+0x4c>
   19c78:	movw	r0, #0
   19c7c:	str	r0, [fp, #-12]
   19c80:	b	19db8 <rb_epoll_supports_event+0x180>
   19c84:	ldr	r0, [pc, #320]	; 19dcc <rb_epoll_supports_event+0x194>
   19c88:	add	r0, pc, r0
   19c8c:	add	r1, sp, #144	; 0x90
   19c90:	bl	22054 <__stat>
   19c94:	cmp	r0, #0
   19c98:	bne	19cb8 <rb_epoll_supports_event+0x80>
   19c9c:	ldr	r0, [pc, #320]	; 19de4 <rb_epoll_supports_event+0x1ac>
   19ca0:	add	r0, pc, r0
   19ca4:	mvn	r1, #0
   19ca8:	str	r1, [r0]
   19cac:	movw	r0, #0
   19cb0:	str	r0, [fp, #-12]
   19cb4:	b	19db8 <rb_epoll_supports_event+0x180>
   19cb8:	movw	r0, #0
   19cbc:	str	r0, [sp, #8]
   19cc0:	ldr	r1, [sp, #8]
   19cc4:	bl	559c <timerfd_create@plt>
   19cc8:	str	r0, [sp, #140]	; 0x8c
   19ccc:	cmp	r0, #0
   19cd0:	blt	19d00 <rb_epoll_supports_event+0xc8>
   19cd4:	ldr	r0, [sp, #140]	; 0x8c
   19cd8:	bl	5308 <close@plt>
   19cdc:	ldr	r1, [pc, #248]	; 19ddc <rb_epoll_supports_event+0x1a4>
   19ce0:	add	r1, pc, r1
   19ce4:	ldr	r2, [pc, #244]	; 19de0 <rb_epoll_supports_event+0x1a8>
   19ce8:	add	r2, pc, r2
   19cec:	movw	r3, #1
   19cf0:	str	r3, [r2]
   19cf4:	str	r3, [r1]
   19cf8:	str	r3, [fp, #-12]
   19cfc:	b	19db8 <rb_epoll_supports_event+0x180>
   19d00:	movw	r0, #26
   19d04:	str	r0, [fp, #-76]	; 0xffffffb4
   19d08:	movw	r0, #0
   19d0c:	str	r0, [fp, #-72]	; 0xffffffb8
   19d10:	sub	r1, fp, #80	; 0x50
   19d14:	sub	r2, fp, #16
   19d18:	bl	4ef4 <timer_create@plt>
   19d1c:	cmp	r0, #0
   19d20:	beq	19d40 <rb_epoll_supports_event+0x108>
   19d24:	ldr	r0, [pc, #172]	; 19dd8 <rb_epoll_supports_event+0x1a0>
   19d28:	add	r0, pc, r0
   19d2c:	mvn	r1, #0
   19d30:	str	r1, [r0]
   19d34:	movw	r0, #0
   19d38:	str	r0, [fp, #-12]
   19d3c:	b	19db8 <rb_epoll_supports_event+0x180>
   19d40:	ldr	r0, [fp, #-16]
   19d44:	bl	5440 <timer_delete@plt>
   19d48:	add	r1, sp, #12
   19d4c:	str	r0, [sp, #4]
   19d50:	mov	r0, r1
   19d54:	bl	4d50 <sigemptyset@plt>
   19d58:	mvn	r1, #0
   19d5c:	str	r0, [sp]
   19d60:	mov	r0, r1
   19d64:	add	r1, sp, #12
   19d68:	movw	r2, #0
   19d6c:	bl	4df8 <signalfd@plt>
   19d70:	str	r0, [sp, #140]	; 0x8c
   19d74:	ldr	r0, [sp, #140]	; 0x8c
   19d78:	cmp	r0, #0
   19d7c:	bge	19d9c <rb_epoll_supports_event+0x164>
   19d80:	ldr	r0, [pc, #76]	; 19dd4 <rb_epoll_supports_event+0x19c>
   19d84:	add	r0, pc, r0
   19d88:	mvn	r1, #0
   19d8c:	str	r1, [r0]
   19d90:	movw	r0, #0
   19d94:	str	r0, [fp, #-12]
   19d98:	b	19db8 <rb_epoll_supports_event+0x180>
   19d9c:	ldr	r0, [sp, #140]	; 0x8c
   19da0:	bl	5308 <close@plt>
   19da4:	ldr	r1, [pc, #36]	; 19dd0 <rb_epoll_supports_event+0x198>
   19da8:	add	r1, pc, r1
   19dac:	movw	r2, #1
   19db0:	str	r2, [r1]
   19db4:	str	r2, [fp, #-12]
   19db8:	ldr	r0, [fp, #-12]
   19dbc:	sub	sp, fp, #8
   19dc0:	pop	{r4, r5, fp, pc}
   19dc4:	.word	0x00037c00
   19dc8:	.word	0x00037be0
   19dcc:	.word	0x00009cc0
   19dd0:	.word	0x00037aa0
   19dd4:	.word	0x00037ac4
   19dd8:	.word	0x00037b20
   19ddc:	.word	0x00037b6c
   19de0:	.word	0x00037b60
   19de4:	.word	0x00037ba8

00019de8 <rb_epoll_init_event>:
   19de8:	push	{fp, lr}
   19dec:	mov	fp, sp
   19df0:	sub	sp, sp, #176	; 0xb0
   19df4:	bl	19c38 <rb_epoll_supports_event>
   19df8:	ldr	r1, [pc, #248]	; 19ef8 <rb_epoll_init_event+0x110>
   19dfc:	add	r1, pc, r1
   19e00:	ldr	r1, [r1]
   19e04:	cmp	r1, #0
   19e08:	bne	19ef0 <rb_epoll_init_event+0x108>
   19e0c:	add	r0, sp, #48	; 0x30
   19e10:	bl	4d50 <sigemptyset@plt>
   19e14:	str	r0, [sp, #36]	; 0x24
   19e18:	bl	4e40 <__libc_current_sigrtmin@plt>
   19e1c:	add	r1, sp, #48	; 0x30
   19e20:	str	r0, [sp, #32]
   19e24:	mov	r0, r1
   19e28:	ldr	r1, [sp, #32]
   19e2c:	bl	5248 <sigaddset@plt>
   19e30:	movw	r1, #0
   19e34:	str	r0, [sp, #28]
   19e38:	mov	r0, r1
   19e3c:	add	r2, sp, #48	; 0x30
   19e40:	str	r1, [sp, #24]
   19e44:	mov	r1, r2
   19e48:	ldr	r2, [sp, #24]
   19e4c:	bl	5380 <sigprocmask@plt>
   19e50:	add	r1, sp, #48	; 0x30
   19e54:	str	r0, [sp, #20]
   19e58:	mov	r0, r1
   19e5c:	bl	4d50 <sigemptyset@plt>
   19e60:	str	r0, [sp, #16]
   19e64:	bl	4e40 <__libc_current_sigrtmin@plt>
   19e68:	add	r1, sp, #48	; 0x30
   19e6c:	str	r0, [sp, #12]
   19e70:	mov	r0, r1
   19e74:	ldr	r1, [sp, #12]
   19e78:	bl	5248 <sigaddset@plt>
   19e7c:	mvn	r1, #0
   19e80:	str	r0, [sp, #8]
   19e84:	mov	r0, r1
   19e88:	add	r1, sp, #48	; 0x30
   19e8c:	movw	r2, #0
   19e90:	bl	4df8 <signalfd@plt>
   19e94:	str	r0, [sp, #40]	; 0x28
   19e98:	ldr	r0, [sp, #40]	; 0x28
   19e9c:	cmn	r0, #1
   19ea0:	bne	19eb8 <rb_epoll_init_event+0xd0>
   19ea4:	ldr	r0, [pc, #84]	; 19f00 <rb_epoll_init_event+0x118>
   19ea8:	add	r0, pc, r0
   19eac:	mvn	r1, #0
   19eb0:	str	r1, [r0]
   19eb4:	b	19ef0 <rb_epoll_init_event+0x108>
   19eb8:	ldr	r0, [pc, #60]	; 19efc <rb_epoll_init_event+0x114>
   19ebc:	add	r2, pc, r0
   19ec0:	ldr	r0, [sp, #40]	; 0x28
   19ec4:	movw	r1, #64	; 0x40
   19ec8:	and	r1, r1, #255	; 0xff
   19ecc:	bl	544c <rb_open@plt>
   19ed0:	str	r0, [sp, #44]	; 0x2c
   19ed4:	ldr	r0, [sp, #44]	; 0x2c
   19ed8:	bl	4fe4 <rb_set_nb@plt>
   19edc:	ldr	r1, [sp, #44]	; 0x2c
   19ee0:	str	r0, [sp, #4]
   19ee4:	mov	r0, r1
   19ee8:	movw	r1, #0
   19eec:	bl	19f04 <signalfd_handler>
   19ef0:	mov	sp, fp
   19ef4:	pop	{fp, pc}
   19ef8:	.word	0x00037a50
   19efc:	.word	0x00009aa4
   19f00:	.word	0x000379a0

00019f04 <signalfd_handler>:
   19f04:	push	{fp, lr}
   19f08:	mov	fp, sp
   19f0c:	sub	sp, sp, #24
   19f10:	str	r0, [fp, #-4]
   19f14:	str	r1, [fp, #-8]
   19f18:	movw	r0, #0
   19f1c:	str	r0, [sp, #4]
   19f20:	ldr	r0, [sp, #4]
   19f24:	cmp	r0, #16
   19f28:	bge	19f70 <signalfd_handler+0x6c>
   19f2c:	ldr	r0, [pc, #312]	; 1a06c <signalfd_handler+0x168>
   19f30:	add	r0, pc, r0
   19f34:	ldr	r1, [sp, #4]
   19f38:	ldr	r2, [pc, #304]	; 1a070 <signalfd_handler+0x16c>
   19f3c:	add	r2, pc, r2
   19f40:	add	r2, r2, r1, lsl #7
   19f44:	ldr	r3, [pc, #296]	; 1a074 <signalfd_handler+0x170>
   19f48:	add	r3, pc, r3
   19f4c:	str	r2, [r3, r1, lsl #3]
   19f50:	ldr	r1, [sp, #4]
   19f54:	add	r1, r3, r1, lsl #3
   19f58:	movw	r2, #128	; 0x80
   19f5c:	str	r2, [r1, #4]
   19f60:	ldr	r0, [sp, #4]
   19f64:	add	r0, r0, #1
   19f68:	str	r0, [sp, #4]
   19f6c:	b	19f20 <signalfd_handler+0x1c>
   19f70:	b	19f74 <signalfd_handler+0x70>
   19f74:	ldr	r0, [fp, #-4]
   19f78:	bl	4ea0 <rb_get_fd@plt>
   19f7c:	ldr	r1, [pc, #224]	; 1a064 <signalfd_handler+0x160>
   19f80:	add	r1, pc, r1
   19f84:	movw	r2, #16
   19f88:	bl	5644 <readv@plt>
   19f8c:	str	r0, [sp, #8]
   19f90:	ldr	r0, [sp, #8]
   19f94:	cmp	r0, #0
   19f98:	beq	19fbc <signalfd_handler+0xb8>
   19f9c:	ldr	r0, [sp, #8]
   19fa0:	cmp	r0, #0
   19fa4:	bge	19fcc <signalfd_handler+0xc8>
   19fa8:	bl	56c8 <__errno_location@plt>
   19fac:	ldr	r0, [r0]
   19fb0:	bl	4d98 <rb_ignore_errno@plt>
   19fb4:	cmp	r0, #0
   19fb8:	bne	19fcc <signalfd_handler+0xc8>
   19fbc:	ldr	r0, [fp, #-4]
   19fc0:	bl	5230 <rb_close@plt>
   19fc4:	bl	19de8 <rb_epoll_init_event>
   19fc8:	b	1a05c <signalfd_handler+0x158>
   19fcc:	ldr	r0, [sp, #8]
   19fd0:	cmp	r0, #0
   19fd4:	bge	19ff4 <signalfd_handler+0xf0>
   19fd8:	ldr	r0, [pc, #136]	; 1a068 <signalfd_handler+0x164>
   19fdc:	add	r2, pc, r0
   19fe0:	ldr	r0, [fp, #-4]
   19fe4:	movw	r1, #1
   19fe8:	movw	r3, #0
   19fec:	bl	4e64 <rb_setselect@plt>
   19ff0:	b	1a05c <signalfd_handler+0x158>
   19ff4:	movw	r0, #0
   19ff8:	str	r0, [sp, #4]
   19ffc:	ldr	r0, [sp, #4]
   1a000:	ldr	r1, [sp, #8]
   1a004:	movw	r2, #128	; 0x80
   1a008:	sdiv	r1, r1, r2
   1a00c:	cmp	r0, r1
   1a010:	bge	1a058 <signalfd_handler+0x154>
   1a014:	ldr	r0, [sp, #4]
   1a018:	ldr	r1, [pc, #88]	; 1a078 <signalfd_handler+0x174>
   1a01c:	add	r1, pc, r1
   1a020:	add	r0, r1, r0, lsl #7
   1a024:	ldr	r0, [r0, #48]	; 0x30
   1a028:	str	r0, [sp, #12]
   1a02c:	ldr	r0, [sp, #12]
   1a030:	movw	r1, #0
   1a034:	cmp	r0, r1
   1a038:	bne	1a040 <signalfd_handler+0x13c>
   1a03c:	b	1a048 <signalfd_handler+0x144>
   1a040:	ldr	r0, [sp, #12]
   1a044:	bl	526c <rb_run_one_event@plt>
   1a048:	ldr	r0, [sp, #4]
   1a04c:	add	r0, r0, #1
   1a050:	str	r0, [sp, #4]
   1a054:	b	19ffc <signalfd_handler+0xf8>
   1a058:	b	19f74 <signalfd_handler+0x70>
   1a05c:	mov	sp, fp
   1a060:	pop	{fp, pc}
   1a064:	.word	0x000380d8
   1a068:	.word	0xffffff20
   1a06c:	.word	0x00038128
   1a070:	.word	0x0003791c
   1a074:	.word	0x00038110
   1a078:	.word	0x0003783c

0001a07c <rb_epoll_sched_event>:
   1a07c:	push	{fp, lr}
   1a080:	mov	fp, sp
   1a084:	sub	sp, sp, #16
   1a088:	ldr	r2, [pc, #68]	; 1a0d4 <rb_epoll_sched_event+0x58>
   1a08c:	add	r2, pc, r2
   1a090:	str	r0, [sp, #8]
   1a094:	str	r1, [sp, #4]
   1a098:	ldr	r0, [r2]
   1a09c:	cmp	r0, #0
   1a0a0:	beq	1a0b8 <rb_epoll_sched_event+0x3c>
   1a0a4:	ldr	r0, [sp, #8]
   1a0a8:	ldr	r1, [sp, #4]
   1a0ac:	bl	1a0d8 <rb_epoll_sched_event_timerfd>
   1a0b0:	str	r0, [fp, #-4]
   1a0b4:	b	1a0c8 <rb_epoll_sched_event+0x4c>
   1a0b8:	ldr	r0, [sp, #8]
   1a0bc:	ldr	r1, [sp, #4]
   1a0c0:	bl	1a278 <rb_epoll_sched_event_signalfd>
   1a0c4:	str	r0, [fp, #-4]
   1a0c8:	ldr	r0, [fp, #-4]
   1a0cc:	mov	sp, fp
   1a0d0:	pop	{fp, pc}
   1a0d4:	.word	0x000377c0

0001a0d8 <rb_epoll_sched_event_timerfd>:
   1a0d8:	push	{fp, lr}
   1a0dc:	mov	fp, sp
   1a0e0:	sub	sp, sp, #64	; 0x40
   1a0e4:	str	r0, [fp, #-8]
   1a0e8:	str	r1, [fp, #-12]
   1a0ec:	movw	r0, #0
   1a0f0:	str	r0, [sp, #24]
   1a0f4:	ldr	r1, [sp, #24]
   1a0f8:	bl	559c <timerfd_create@plt>
   1a0fc:	str	r0, [sp, #32]
   1a100:	cmp	r0, #0
   1a104:	bge	1a138 <rb_epoll_sched_event_timerfd+0x60>
   1a108:	bl	56c8 <__errno_location@plt>
   1a10c:	ldr	r0, [r0]
   1a110:	bl	4d5c <strerror@plt>
   1a114:	ldr	r1, [pc, #344]	; 1a274 <rb_epoll_sched_event_timerfd+0x19c>
   1a118:	add	r1, pc, r1
   1a11c:	str	r0, [sp, #20]
   1a120:	mov	r0, r1
   1a124:	ldr	r1, [sp, #20]
   1a128:	bl	52e4 <rb_lib_log@plt>
   1a12c:	movw	r0, #0
   1a130:	str	r0, [fp, #-4]
   1a134:	b	1a254 <rb_epoll_sched_event_timerfd+0x17c>
   1a138:	sub	r0, fp, #28
   1a13c:	movw	r1, #0
   1a140:	and	r1, r1, #255	; 0xff
   1a144:	movw	r2, #16
   1a148:	bl	4ff0 <memset@plt>
   1a14c:	ldr	r0, [fp, #-12]
   1a150:	str	r0, [fp, #-20]	; 0xffffffec
   1a154:	movw	r0, #0
   1a158:	str	r0, [fp, #-16]
   1a15c:	ldr	r0, [fp, #-8]
   1a160:	ldr	r0, [r0, #24]
   1a164:	cmp	r0, #0
   1a168:	beq	1a17c <rb_epoll_sched_event_timerfd+0xa4>
   1a16c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a170:	str	r0, [fp, #-28]	; 0xffffffe4
   1a174:	ldr	r0, [fp, #-16]
   1a178:	str	r0, [fp, #-24]	; 0xffffffe8
   1a17c:	ldr	r0, [sp, #32]
   1a180:	movw	r1, #0
   1a184:	str	r1, [sp, #16]
   1a188:	sub	r2, fp, #28
   1a18c:	ldr	r3, [sp, #16]
   1a190:	bl	5620 <timerfd_settime@plt>
   1a194:	cmp	r0, #0
   1a198:	bge	1a1d4 <rb_epoll_sched_event_timerfd+0xfc>
   1a19c:	bl	56c8 <__errno_location@plt>
   1a1a0:	ldr	r0, [r0]
   1a1a4:	bl	4d5c <strerror@plt>
   1a1a8:	ldr	r1, [pc, #192]	; 1a270 <rb_epoll_sched_event_timerfd+0x198>
   1a1ac:	add	r1, pc, r1
   1a1b0:	str	r0, [sp, #12]
   1a1b4:	mov	r0, r1
   1a1b8:	ldr	r1, [sp, #12]
   1a1bc:	bl	52e4 <rb_lib_log@plt>
   1a1c0:	ldr	r0, [sp, #32]
   1a1c4:	bl	5308 <close@plt>
   1a1c8:	movw	r1, #0
   1a1cc:	str	r1, [fp, #-4]
   1a1d0:	b	1a254 <rb_epoll_sched_event_timerfd+0x17c>
   1a1d4:	ldr	r0, [pc, #140]	; 1a268 <rb_epoll_sched_event_timerfd+0x190>
   1a1d8:	add	r0, pc, r0
   1a1dc:	ldr	r1, [pc, #136]	; 1a26c <rb_epoll_sched_event_timerfd+0x194>
   1a1e0:	add	r2, pc, r1
   1a1e4:	ldr	r1, [fp, #-8]
   1a1e8:	ldr	r3, [r1, #20]
   1a1ec:	movw	r1, #136	; 0x88
   1a1f0:	bl	5584 <snprintf@plt>
   1a1f4:	ldr	r1, [pc, #104]	; 1a264 <rb_epoll_sched_event_timerfd+0x18c>
   1a1f8:	add	r2, pc, r1
   1a1fc:	ldr	r1, [sp, #32]
   1a200:	str	r0, [sp, #8]
   1a204:	mov	r0, r1
   1a208:	movw	r1, #64	; 0x40
   1a20c:	and	r1, r1, #255	; 0xff
   1a210:	bl	544c <rb_open@plt>
   1a214:	str	r0, [sp, #28]
   1a218:	ldr	r0, [sp, #28]
   1a21c:	bl	4fe4 <rb_set_nb@plt>
   1a220:	ldr	r1, [pc, #56]	; 1a260 <rb_epoll_sched_event_timerfd+0x188>
   1a224:	add	r2, pc, r1
   1a228:	ldr	r1, [sp, #28]
   1a22c:	ldr	r3, [fp, #-8]
   1a230:	str	r1, [r3, #40]	; 0x28
   1a234:	ldr	r1, [sp, #28]
   1a238:	ldr	r3, [fp, #-8]
   1a23c:	str	r0, [sp, #4]
   1a240:	mov	r0, r1
   1a244:	movw	r1, #1
   1a248:	bl	4e64 <rb_setselect@plt>
   1a24c:	movw	r0, #1
   1a250:	str	r0, [fp, #-4]
   1a254:	ldr	r0, [fp, #-4]
   1a258:	mov	sp, fp
   1a25c:	pop	{fp, pc}
   1a260:	.word	0x00000268
   1a264:	.word	0x00037ee0
   1a268:	.word	0x00037f00
   1a26c:	.word	0x000097b2
   1a270:	.word	0x000097d1
   1a274:	.word	0x00009851

0001a278 <rb_epoll_sched_event_signalfd>:
   1a278:	push	{fp, lr}
   1a27c:	mov	fp, sp
   1a280:	sub	sp, sp, #112	; 0x70
   1a284:	str	r0, [fp, #-8]
   1a288:	str	r1, [fp, #-12]
   1a28c:	add	r0, sp, #32
   1a290:	movw	r1, #0
   1a294:	and	r1, r1, #255	; 0xff
   1a298:	movw	r2, #64	; 0x40
   1a29c:	bl	4ff0 <memset@plt>
   1a2a0:	movw	r0, #4
   1a2a4:	bl	19644 <rb_malloc>
   1a2a8:	ldr	r1, [fp, #-8]
   1a2ac:	str	r0, [r1, #40]	; 0x28
   1a2b0:	ldr	r0, [fp, #-8]
   1a2b4:	ldr	r0, [r0, #40]	; 0x28
   1a2b8:	str	r0, [fp, #-16]
   1a2bc:	movw	r0, #0
   1a2c0:	str	r0, [sp, #40]	; 0x28
   1a2c4:	bl	4e40 <__libc_current_sigrtmin@plt>
   1a2c8:	str	r0, [sp, #36]	; 0x24
   1a2cc:	ldr	r0, [fp, #-8]
   1a2d0:	str	r0, [sp, #32]
   1a2d4:	ldr	r2, [fp, #-16]
   1a2d8:	movw	r0, #0
   1a2dc:	add	r1, sp, #32
   1a2e0:	bl	4ef4 <timer_create@plt>
   1a2e4:	cmp	r0, #0
   1a2e8:	bge	1a31c <rb_epoll_sched_event_signalfd+0xa4>
   1a2ec:	bl	56c8 <__errno_location@plt>
   1a2f0:	ldr	r0, [r0]
   1a2f4:	bl	4d5c <strerror@plt>
   1a2f8:	ldr	r1, [pc, #204]	; 1a3cc <rb_epoll_sched_event_signalfd+0x154>
   1a2fc:	add	r1, pc, r1
   1a300:	str	r0, [sp, #12]
   1a304:	mov	r0, r1
   1a308:	ldr	r1, [sp, #12]
   1a30c:	bl	52e4 <rb_lib_log@plt>
   1a310:	movw	r0, #0
   1a314:	str	r0, [fp, #-4]
   1a318:	b	1a3bc <rb_epoll_sched_event_signalfd+0x144>
   1a31c:	add	r0, sp, #16
   1a320:	movw	r1, #0
   1a324:	and	r1, r1, #255	; 0xff
   1a328:	movw	r2, #16
   1a32c:	bl	4ff0 <memset@plt>
   1a330:	ldr	r0, [fp, #-12]
   1a334:	str	r0, [sp, #24]
   1a338:	movw	r0, #0
   1a33c:	str	r0, [sp, #28]
   1a340:	ldr	r0, [fp, #-8]
   1a344:	ldr	r0, [r0, #24]
   1a348:	cmp	r0, #0
   1a34c:	beq	1a360 <rb_epoll_sched_event_signalfd+0xe8>
   1a350:	ldr	r0, [sp, #24]
   1a354:	str	r0, [sp, #16]
   1a358:	ldr	r0, [sp, #28]
   1a35c:	str	r0, [sp, #20]
   1a360:	ldr	r0, [fp, #-16]
   1a364:	ldr	r0, [r0]
   1a368:	movw	r1, #0
   1a36c:	str	r1, [sp, #8]
   1a370:	add	r2, sp, #16
   1a374:	ldr	r3, [sp, #8]
   1a378:	bl	5128 <timer_settime@plt>
   1a37c:	cmp	r0, #0
   1a380:	bge	1a3b4 <rb_epoll_sched_event_signalfd+0x13c>
   1a384:	bl	56c8 <__errno_location@plt>
   1a388:	ldr	r0, [r0]
   1a38c:	bl	4d5c <strerror@plt>
   1a390:	ldr	r1, [pc, #48]	; 1a3c8 <rb_epoll_sched_event_signalfd+0x150>
   1a394:	add	r1, pc, r1
   1a398:	str	r0, [sp, #4]
   1a39c:	mov	r0, r1
   1a3a0:	ldr	r1, [sp, #4]
   1a3a4:	bl	52e4 <rb_lib_log@plt>
   1a3a8:	movw	r0, #0
   1a3ac:	str	r0, [fp, #-4]
   1a3b0:	b	1a3bc <rb_epoll_sched_event_signalfd+0x144>
   1a3b4:	movw	r0, #1
   1a3b8:	str	r0, [fp, #-4]
   1a3bc:	ldr	r0, [fp, #-4]
   1a3c0:	mov	sp, fp
   1a3c4:	pop	{fp, pc}
   1a3c8:	.word	0x0000964d
   1a3cc:	.word	0x000096d3

0001a3d0 <rb_epoll_unsched_event>:
   1a3d0:	push	{fp, lr}
   1a3d4:	mov	fp, sp
   1a3d8:	sub	sp, sp, #8
   1a3dc:	ldr	r1, [pc, #100]	; 1a448 <rb_epoll_unsched_event+0x78>
   1a3e0:	add	r1, pc, r1
   1a3e4:	str	r0, [sp, #4]
   1a3e8:	ldr	r0, [r1]
   1a3ec:	cmp	r0, #0
   1a3f0:	beq	1a410 <rb_epoll_unsched_event+0x40>
   1a3f4:	ldr	r0, [sp, #4]
   1a3f8:	ldr	r0, [r0, #40]	; 0x28
   1a3fc:	bl	5230 <rb_close@plt>
   1a400:	ldr	r0, [sp, #4]
   1a404:	movw	r1, #0
   1a408:	str	r1, [r0, #40]	; 0x28
   1a40c:	b	1a440 <rb_epoll_unsched_event+0x70>
   1a410:	ldr	r0, [sp, #4]
   1a414:	ldr	r0, [r0, #40]	; 0x28
   1a418:	ldr	r0, [r0]
   1a41c:	bl	5440 <timer_delete@plt>
   1a420:	ldr	r1, [sp, #4]
   1a424:	ldr	r1, [r1, #40]	; 0x28
   1a428:	str	r0, [sp]
   1a42c:	mov	r0, r1
   1a430:	bl	1a44c <rb_free>
   1a434:	ldr	r0, [sp, #4]
   1a438:	movw	r1, #0
   1a43c:	str	r1, [r0, #40]	; 0x28
   1a440:	mov	sp, fp
   1a444:	pop	{fp, pc}
   1a448:	.word	0x0003746c

0001a44c <rb_free>:
   1a44c:	push	{fp, lr}
   1a450:	mov	fp, sp
   1a454:	sub	sp, sp, #8
   1a458:	str	r0, [sp, #4]
   1a45c:	ldr	r0, [sp, #4]
   1a460:	movw	r1, #0
   1a464:	cmp	r0, r1
   1a468:	movw	r0, #0
   1a46c:	movne	r0, #1
   1a470:	mvn	r1, #0
   1a474:	eor	r0, r0, r1
   1a478:	eor	r0, r0, r1
   1a47c:	tst	r0, #1
   1a480:	beq	1a48c <rb_free+0x40>
   1a484:	ldr	r0, [sp, #4]
   1a488:	bl	50c8 <free@plt>
   1a48c:	mov	sp, fp
   1a490:	pop	{fp, pc}

0001a494 <rb_read_timerfd>:
   1a494:	push	{fp, lr}
   1a498:	mov	fp, sp
   1a49c:	sub	sp, sp, #40	; 0x28
   1a4a0:	str	r0, [fp, #-4]
   1a4a4:	str	r1, [fp, #-8]
   1a4a8:	ldr	r0, [fp, #-8]
   1a4ac:	str	r0, [fp, #-12]
   1a4b0:	ldr	r0, [fp, #-12]
   1a4b4:	movw	r1, #0
   1a4b8:	cmp	r0, r1
   1a4bc:	bne	1a4cc <rb_read_timerfd+0x38>
   1a4c0:	ldr	r0, [fp, #-4]
   1a4c4:	bl	5230 <rb_close@plt>
   1a4c8:	b	1a578 <rb_read_timerfd+0xe4>
   1a4cc:	ldr	r0, [fp, #-4]
   1a4d0:	add	r1, sp, #16
   1a4d4:	movw	r2, #8
   1a4d8:	bl	5158 <rb_read@plt>
   1a4dc:	str	r0, [fp, #-16]
   1a4e0:	ldr	r0, [fp, #-16]
   1a4e4:	cmp	r0, #0
   1a4e8:	beq	1a50c <rb_read_timerfd+0x78>
   1a4ec:	ldr	r0, [fp, #-16]
   1a4f0:	cmp	r0, #0
   1a4f4:	bge	1a54c <rb_read_timerfd+0xb8>
   1a4f8:	bl	56c8 <__errno_location@plt>
   1a4fc:	ldr	r0, [r0]
   1a500:	bl	4d98 <rb_ignore_errno@plt>
   1a504:	cmp	r0, #0
   1a508:	bne	1a54c <rb_read_timerfd+0xb8>
   1a50c:	ldr	r0, [fp, #-4]
   1a510:	bl	5230 <rb_close@plt>
   1a514:	ldr	r0, [fp, #-12]
   1a518:	ldr	r1, [r0, #20]
   1a51c:	str	r1, [sp, #12]
   1a520:	bl	56c8 <__errno_location@plt>
   1a524:	ldr	r0, [r0]
   1a528:	bl	4d5c <strerror@plt>
   1a52c:	ldr	r1, [pc, #80]	; 1a584 <rb_read_timerfd+0xf0>
   1a530:	add	r1, pc, r1
   1a534:	str	r0, [sp, #8]
   1a538:	mov	r0, r1
   1a53c:	ldr	r1, [sp, #12]
   1a540:	ldr	r2, [sp, #8]
   1a544:	bl	52e4 <rb_lib_log@plt>
   1a548:	b	1a578 <rb_read_timerfd+0xe4>
   1a54c:	ldr	r0, [pc, #44]	; 1a580 <rb_read_timerfd+0xec>
   1a550:	add	r2, pc, r0
   1a554:	ldr	r0, [fp, #-4]
   1a558:	ldr	r1, [fp, #-12]
   1a55c:	movw	r3, #1
   1a560:	str	r1, [sp, #4]
   1a564:	mov	r1, r3
   1a568:	ldr	r3, [sp, #4]
   1a56c:	bl	4e64 <rb_setselect@plt>
   1a570:	ldr	r0, [fp, #-12]
   1a574:	bl	526c <rb_run_one_event@plt>
   1a578:	mov	sp, fp
   1a57c:	pop	{fp, pc}
   1a580:	.word	0xffffff3c
   1a584:	.word	0x0000946e

0001a588 <rb_setup_fd_poll>:
   1a588:	sub	sp, sp, #4
   1a58c:	str	r0, [sp]
   1a590:	movw	r0, #0
   1a594:	add	sp, sp, #4
   1a598:	bx	lr

0001a59c <rb_init_netio_poll>:
   1a59c:	push	{fp, lr}
   1a5a0:	mov	fp, sp
   1a5a4:	sub	sp, sp, #16
   1a5a8:	bl	4e28 <rb_getmaxconnect@plt>
   1a5ac:	mov	r1, r0
   1a5b0:	lsl	r0, r0, #3
   1a5b4:	str	r1, [sp, #8]
   1a5b8:	bl	1a64c <rb_malloc>
   1a5bc:	ldr	r1, [pc, #124]	; 1a640 <rb_init_netio_poll+0xa4>
   1a5c0:	add	r1, pc, r1
   1a5c4:	str	r0, [r1]
   1a5c8:	bl	4e28 <rb_getmaxconnect@plt>
   1a5cc:	ldr	r1, [pc, #104]	; 1a63c <rb_init_netio_poll+0xa0>
   1a5d0:	add	r1, pc, r1
   1a5d4:	str	r0, [r1, #8]
   1a5d8:	movw	r0, #0
   1a5dc:	str	r0, [fp, #-4]
   1a5e0:	ldr	r0, [fp, #-4]
   1a5e4:	str	r0, [sp, #4]
   1a5e8:	bl	4e28 <rb_getmaxconnect@plt>
   1a5ec:	ldr	r1, [sp, #4]
   1a5f0:	cmp	r1, r0
   1a5f4:	bge	1a620 <rb_init_netio_poll+0x84>
   1a5f8:	ldr	r0, [pc, #72]	; 1a648 <rb_init_netio_poll+0xac>
   1a5fc:	ldr	r0, [pc, r0]
   1a600:	ldr	r1, [fp, #-4]
   1a604:	add	r0, r0, r1, lsl #3
   1a608:	mvn	r1, #0
   1a60c:	str	r1, [r0]
   1a610:	ldr	r0, [fp, #-4]
   1a614:	add	r0, r0, #1
   1a618:	str	r0, [fp, #-4]
   1a61c:	b	1a5e0 <rb_init_netio_poll+0x44>
   1a620:	ldr	r0, [pc, #28]	; 1a644 <rb_init_netio_poll+0xa8>
   1a624:	add	r0, pc, r0
   1a628:	movw	r1, #0
   1a62c:	str	r1, [r0, #4]
   1a630:	mov	r0, r1
   1a634:	mov	sp, fp
   1a638:	pop	{fp, pc}
   1a63c:	.word	0x00037b90
   1a640:	.word	0x00037ba0
   1a644:	.word	0x00037b3c
   1a648:	.word	0x00037b64

0001a64c <rb_malloc>:
   1a64c:	push	{fp, lr}
   1a650:	mov	fp, sp
   1a654:	sub	sp, sp, #8
   1a658:	str	r0, [sp, #4]
   1a65c:	ldr	r1, [sp, #4]
   1a660:	movw	r0, #1
   1a664:	bl	4fb4 <calloc@plt>
   1a668:	str	r0, [sp]
   1a66c:	ldr	r0, [sp]
   1a670:	movw	r1, #0
   1a674:	cmp	r0, r1
   1a678:	movw	r0, #0
   1a67c:	moveq	r0, #1
   1a680:	mvn	r1, #0
   1a684:	eor	r0, r0, r1
   1a688:	eor	r0, r0, r1
   1a68c:	tst	r0, #1
   1a690:	beq	1a698 <rb_malloc+0x4c>
   1a694:	bl	5350 <rb_outofmemory@plt>
   1a698:	ldr	r0, [sp]
   1a69c:	mov	sp, fp
   1a6a0:	pop	{fp, pc}

0001a6a4 <rb_setselect_poll>:
   1a6a4:	push	{fp, lr}
   1a6a8:	mov	fp, sp
   1a6ac:	sub	sp, sp, #24
   1a6b0:	str	r0, [fp, #-4]
   1a6b4:	str	r1, [fp, #-8]
   1a6b8:	str	r2, [sp, #12]
   1a6bc:	str	r3, [sp, #8]
   1a6c0:	ldr	r0, [fp, #-4]
   1a6c4:	movw	r1, #0
   1a6c8:	cmp	r0, r1
   1a6cc:	bne	1a6d4 <rb_setselect_poll+0x30>
   1a6d0:	b	1a8f4 <rb_setselect_poll+0x250>
   1a6d4:	ldr	r0, [fp, #-8]
   1a6d8:	and	r0, r0, #1
   1a6dc:	cmp	r0, #0
   1a6e0:	beq	1a738 <rb_setselect_poll+0x94>
   1a6e4:	ldr	r0, [sp, #12]
   1a6e8:	ldr	r1, [fp, #-4]
   1a6ec:	str	r0, [r1, #28]
   1a6f0:	ldr	r0, [sp, #8]
   1a6f4:	ldr	r1, [fp, #-4]
   1a6f8:	str	r0, [r1, #32]
   1a6fc:	ldr	r0, [sp, #12]
   1a700:	movw	r1, #0
   1a704:	cmp	r0, r1
   1a708:	beq	1a720 <rb_setselect_poll+0x7c>
   1a70c:	ldr	r0, [fp, #-4]
   1a710:	ldr	r1, [r0, #20]
   1a714:	orr	r1, r1, #64	; 0x40
   1a718:	str	r1, [r0, #20]
   1a71c:	b	1a734 <rb_setselect_poll+0x90>
   1a720:	ldr	r0, [fp, #-4]
   1a724:	ldr	r1, [r0, #20]
   1a728:	mvn	r2, #64	; 0x40
   1a72c:	and	r1, r1, r2
   1a730:	str	r1, [r0, #20]
   1a734:	b	1a738 <rb_setselect_poll+0x94>
   1a738:	ldr	r0, [fp, #-8]
   1a73c:	and	r0, r0, #2
   1a740:	cmp	r0, #0
   1a744:	beq	1a79c <rb_setselect_poll+0xf8>
   1a748:	ldr	r0, [sp, #12]
   1a74c:	ldr	r1, [fp, #-4]
   1a750:	str	r0, [r1, #36]	; 0x24
   1a754:	ldr	r0, [sp, #8]
   1a758:	ldr	r1, [fp, #-4]
   1a75c:	str	r0, [r1, #40]	; 0x28
   1a760:	ldr	r0, [sp, #12]
   1a764:	movw	r1, #0
   1a768:	cmp	r0, r1
   1a76c:	beq	1a784 <rb_setselect_poll+0xe0>
   1a770:	ldr	r0, [fp, #-4]
   1a774:	ldr	r1, [r0, #20]
   1a778:	orr	r1, r1, #256	; 0x100
   1a77c:	str	r1, [r0, #20]
   1a780:	b	1a798 <rb_setselect_poll+0xf4>
   1a784:	ldr	r0, [fp, #-4]
   1a788:	ldr	r1, [r0, #20]
   1a78c:	mvn	r2, #256	; 0x100
   1a790:	and	r1, r1, r2
   1a794:	str	r1, [r0, #20]
   1a798:	b	1a79c <rb_setselect_poll+0xf8>
   1a79c:	ldr	r0, [fp, #-4]
   1a7a0:	ldr	r0, [r0, #12]
   1a7a4:	bl	1a928 <resize_pollarray>
   1a7a8:	ldr	r0, [fp, #-4]
   1a7ac:	ldr	r0, [r0, #20]
   1a7b0:	cmp	r0, #0
   1a7b4:	bgt	1a888 <rb_setselect_poll+0x1e4>
   1a7b8:	ldr	r0, [pc, #324]	; 1a904 <rb_setselect_poll+0x260>
   1a7bc:	add	r0, pc, r0
   1a7c0:	ldr	r1, [pc, #328]	; 1a910 <rb_setselect_poll+0x26c>
   1a7c4:	ldr	r1, [pc, r1]
   1a7c8:	ldr	r2, [fp, #-4]
   1a7cc:	ldr	r2, [r2, #12]
   1a7d0:	add	r1, r1, r2, lsl #3
   1a7d4:	mov	r2, #0
   1a7d8:	strh	r2, [r1, #4]
   1a7dc:	ldr	r1, [pc, #304]	; 1a914 <rb_setselect_poll+0x270>
   1a7e0:	ldr	r1, [pc, r1]
   1a7e4:	ldr	r2, [fp, #-4]
   1a7e8:	ldr	r2, [r2, #12]
   1a7ec:	add	r1, r1, r2, lsl #3
   1a7f0:	mvn	r2, #0
   1a7f4:	str	r2, [r1]
   1a7f8:	ldr	r1, [fp, #-4]
   1a7fc:	ldr	r1, [r1, #12]
   1a800:	ldr	r0, [r0, #4]
   1a804:	cmp	r1, r0
   1a808:	bne	1a884 <rb_setselect_poll+0x1e0>
   1a80c:	b	1a810 <rb_setselect_poll+0x16c>
   1a810:	ldr	r0, [pc, #240]	; 1a908 <rb_setselect_poll+0x264>
   1a814:	add	r0, pc, r0
   1a818:	ldr	r0, [r0, #4]
   1a81c:	cmp	r0, #0
   1a820:	movw	r0, #0
   1a824:	str	r0, [sp, #4]
   1a828:	blt	1a858 <rb_setselect_poll+0x1b4>
   1a82c:	ldr	r0, [pc, #228]	; 1a918 <rb_setselect_poll+0x274>
   1a830:	ldr	r0, [pc, r0]
   1a834:	ldr	r1, [pc, #224]	; 1a91c <rb_setselect_poll+0x278>
   1a838:	add	r1, pc, r1
   1a83c:	ldr	r1, [r1, #4]
   1a840:	add	r0, r0, r1, lsl #3
   1a844:	ldr	r0, [r0]
   1a848:	cmn	r0, #1
   1a84c:	movw	r0, #0
   1a850:	moveq	r0, #1
   1a854:	str	r0, [sp, #4]
   1a858:	ldr	r0, [sp, #4]
   1a85c:	tst	r0, #1
   1a860:	beq	1a880 <rb_setselect_poll+0x1dc>
   1a864:	ldr	r0, [pc, #160]	; 1a90c <rb_setselect_poll+0x268>
   1a868:	add	r0, pc, r0
   1a86c:	ldr	r1, [r0, #4]
   1a870:	mvn	r2, #0
   1a874:	add	r1, r1, r2
   1a878:	str	r1, [r0, #4]
   1a87c:	b	1a810 <rb_setselect_poll+0x16c>
   1a880:	b	1a884 <rb_setselect_poll+0x1e0>
   1a884:	b	1a8f4 <rb_setselect_poll+0x250>
   1a888:	ldr	r0, [pc, #108]	; 1a8fc <rb_setselect_poll+0x258>
   1a88c:	add	r0, pc, r0
   1a890:	ldr	r1, [fp, #-4]
   1a894:	ldr	r2, [r1, #12]
   1a898:	ldr	r1, [r1, #20]
   1a89c:	ldr	r3, [pc, #124]	; 1a920 <rb_setselect_poll+0x27c>
   1a8a0:	ldr	r3, [pc, r3]
   1a8a4:	add	r2, r3, r2, lsl #3
   1a8a8:	strh	r1, [r2, #4]
   1a8ac:	ldr	r1, [fp, #-4]
   1a8b0:	ldr	r1, [r1, #12]
   1a8b4:	mov	r2, r1
   1a8b8:	ldr	r3, [pc, #100]	; 1a924 <rb_setselect_poll+0x280>
   1a8bc:	ldr	r3, [pc, r3]
   1a8c0:	add	r1, r3, r1, lsl #3
   1a8c4:	str	r2, [r1]
   1a8c8:	ldr	r1, [fp, #-4]
   1a8cc:	ldr	r1, [r1, #12]
   1a8d0:	ldr	r0, [r0, #4]
   1a8d4:	cmp	r1, r0
   1a8d8:	ble	1a8f0 <rb_setselect_poll+0x24c>
   1a8dc:	ldr	r0, [pc, #28]	; 1a900 <rb_setselect_poll+0x25c>
   1a8e0:	add	r0, pc, r0
   1a8e4:	ldr	r1, [fp, #-4]
   1a8e8:	ldr	r1, [r1, #12]
   1a8ec:	str	r1, [r0, #4]
   1a8f0:	b	1a8f4 <rb_setselect_poll+0x250>
   1a8f4:	mov	sp, fp
   1a8f8:	pop	{fp, pc}
   1a8fc:	.word	0x000378d4
   1a900:	.word	0x00037880
   1a904:	.word	0x000379a4
   1a908:	.word	0x0003794c
   1a90c:	.word	0x000378f8
   1a910:	.word	0x0003799c
   1a914:	.word	0x00037980
   1a918:	.word	0x00037930
   1a91c:	.word	0x00037928
   1a920:	.word	0x000378c0
   1a924:	.word	0x000378a4

0001a928 <resize_pollarray>:
   1a928:	push	{fp, lr}
   1a92c:	mov	fp, sp
   1a930:	sub	sp, sp, #16
   1a934:	ldr	r1, [pc, #236]	; 1aa28 <resize_pollarray+0x100>
   1a938:	add	r1, pc, r1
   1a93c:	str	r0, [fp, #-4]
   1a940:	ldr	r0, [fp, #-4]
   1a944:	ldr	r1, [r1, #8]
   1a948:	cmp	r0, r1
   1a94c:	movw	r0, #0
   1a950:	movge	r0, #1
   1a954:	mvn	r1, #0
   1a958:	eor	r0, r0, r1
   1a95c:	eor	r0, r0, r1
   1a960:	tst	r0, #1
   1a964:	beq	1aa20 <resize_pollarray+0xf8>
   1a968:	ldr	r0, [pc, #192]	; 1aa30 <resize_pollarray+0x108>
   1a96c:	add	r0, pc, r0
   1a970:	ldr	r1, [r0, #8]
   1a974:	str	r1, [sp, #4]
   1a978:	ldr	r1, [r0, #8]
   1a97c:	add	r1, r1, #1024	; 0x400
   1a980:	str	r1, [r0, #8]
   1a984:	ldr	r1, [pc, #168]	; 1aa34 <resize_pollarray+0x10c>
   1a988:	ldr	r1, [pc, r1]
   1a98c:	ldr	r2, [r0, #8]
   1a990:	lsl	r2, r2, #3
   1a994:	str	r0, [sp]
   1a998:	mov	r0, r1
   1a99c:	mov	r1, r2
   1a9a0:	bl	1add4 <rb_realloc>
   1a9a4:	ldr	r1, [sp]
   1a9a8:	str	r0, [r1]
   1a9ac:	ldr	r0, [pc, #132]	; 1aa38 <resize_pollarray+0x110>
   1a9b0:	ldr	r0, [pc, r0]
   1a9b4:	ldr	r2, [sp, #4]
   1a9b8:	add	r2, r2, #1
   1a9bc:	add	r0, r0, r2, lsl #3
   1a9c0:	movw	r2, #0
   1a9c4:	and	r1, r2, #255	; 0xff
   1a9c8:	movw	r2, #8192	; 0x2000
   1a9cc:	bl	4ff0 <memset@plt>
   1a9d0:	ldr	r0, [sp, #4]
   1a9d4:	add	r0, r0, #1
   1a9d8:	str	r0, [sp, #8]
   1a9dc:	ldr	r0, [pc, #72]	; 1aa2c <resize_pollarray+0x104>
   1a9e0:	add	r0, pc, r0
   1a9e4:	ldr	r1, [sp, #8]
   1a9e8:	ldr	r0, [r0, #8]
   1a9ec:	cmp	r1, r0
   1a9f0:	bge	1aa1c <resize_pollarray+0xf4>
   1a9f4:	ldr	r0, [pc, #64]	; 1aa3c <resize_pollarray+0x114>
   1a9f8:	ldr	r0, [pc, r0]
   1a9fc:	ldr	r1, [sp, #8]
   1aa00:	add	r0, r0, r1, lsl #3
   1aa04:	mvn	r1, #0
   1aa08:	str	r1, [r0]
   1aa0c:	ldr	r0, [sp, #8]
   1aa10:	add	r0, r0, #1
   1aa14:	str	r0, [sp, #8]
   1aa18:	b	1a9dc <resize_pollarray+0xb4>
   1aa1c:	b	1aa20 <resize_pollarray+0xf8>
   1aa20:	mov	sp, fp
   1aa24:	pop	{fp, pc}
   1aa28:	.word	0x00037828
   1aa2c:	.word	0x00037780
   1aa30:	.word	0x000377f4
   1aa34:	.word	0x000377d8
   1aa38:	.word	0x000377b0
   1aa3c:	.word	0x00037768

0001aa40 <rb_select_poll>:
   1aa40:	push	{fp, lr}
   1aa44:	mov	fp, sp
   1aa48:	sub	sp, sp, #56	; 0x38
   1aa4c:	ldr	r1, [pc, #616]	; 1acbc <rb_select_poll+0x27c>
   1aa50:	add	r1, pc, r1
   1aa54:	str	r0, [fp, #-8]
   1aa58:	ldr	r0, [r1]
   1aa5c:	ldr	r1, [r1, #4]
   1aa60:	add	r1, r1, #1
   1aa64:	ldr	r2, [fp, #-8]
   1aa68:	bl	53c8 <poll@plt>
   1aa6c:	str	r0, [fp, #-12]
   1aa70:	bl	535c <rb_set_time@plt>
   1aa74:	ldr	r0, [fp, #-12]
   1aa78:	cmp	r0, #0
   1aa7c:	bge	1aaac <rb_select_poll+0x6c>
   1aa80:	bl	56c8 <__errno_location@plt>
   1aa84:	ldr	r0, [r0]
   1aa88:	bl	4d98 <rb_ignore_errno@plt>
   1aa8c:	cmp	r0, #0
   1aa90:	bne	1aaa0 <rb_select_poll+0x60>
   1aa94:	movw	r0, #0
   1aa98:	str	r0, [fp, #-4]
   1aa9c:	b	1acb0 <rb_select_poll+0x270>
   1aaa0:	movw	r0, #5
   1aaa4:	str	r0, [fp, #-4]
   1aaa8:	b	1acb0 <rb_select_poll+0x270>
   1aaac:	ldr	r0, [fp, #-12]
   1aab0:	cmp	r0, #0
   1aab4:	bne	1aac4 <rb_select_poll+0x84>
   1aab8:	movw	r0, #0
   1aabc:	str	r0, [fp, #-4]
   1aac0:	b	1acb0 <rb_select_poll+0x270>
   1aac4:	movw	r0, #0
   1aac8:	str	r0, [fp, #-20]	; 0xffffffec
   1aacc:	ldr	r0, [pc, #492]	; 1acc0 <rb_select_poll+0x280>
   1aad0:	add	r0, pc, r0
   1aad4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aad8:	ldr	r0, [r0, #4]
   1aadc:	add	r0, r0, #1
   1aae0:	cmp	r1, r0
   1aae4:	bge	1aca8 <rb_select_poll+0x268>
   1aae8:	ldr	r0, [pc, #468]	; 1acc4 <rb_select_poll+0x284>
   1aaec:	ldr	r0, [pc, r0]
   1aaf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aaf4:	add	r0, r0, r1, lsl #3
   1aaf8:	str	r0, [sp, #24]
   1aafc:	ldr	r0, [sp, #24]
   1ab00:	ldrsh	r0, [r0, #6]
   1ab04:	str	r0, [sp, #20]
   1ab08:	ldr	r0, [sp, #24]
   1ab0c:	ldr	r0, [r0]
   1ab10:	str	r0, [fp, #-16]
   1ab14:	ldr	r0, [sp, #20]
   1ab18:	cmp	r0, #0
   1ab1c:	beq	1ab2c <rb_select_poll+0xec>
   1ab20:	ldr	r0, [fp, #-16]
   1ab24:	cmn	r0, #1
   1ab28:	bne	1ab30 <rb_select_poll+0xf0>
   1ab2c:	b	1ac98 <rb_select_poll+0x258>
   1ab30:	ldr	r0, [fp, #-16]
   1ab34:	bl	1acc8 <rb_find_fd>
   1ab38:	str	r0, [sp, #16]
   1ab3c:	ldr	r0, [sp, #16]
   1ab40:	movw	r1, #0
   1ab44:	cmp	r0, r1
   1ab48:	bne	1ab50 <rb_select_poll+0x110>
   1ab4c:	b	1ac98 <rb_select_poll+0x258>
   1ab50:	ldr	r0, [sp, #20]
   1ab54:	and	r0, r0, #89	; 0x59
   1ab58:	cmp	r0, #0
   1ab5c:	beq	1abbc <rb_select_poll+0x17c>
   1ab60:	ldr	r0, [sp, #16]
   1ab64:	ldr	r0, [r0, #28]
   1ab68:	str	r0, [fp, #-24]	; 0xffffffe8
   1ab6c:	ldr	r0, [sp, #16]
   1ab70:	ldr	r0, [r0, #32]
   1ab74:	str	r0, [sp, #28]
   1ab78:	ldr	r0, [sp, #16]
   1ab7c:	movw	r1, #0
   1ab80:	str	r1, [r0, #28]
   1ab84:	ldr	r0, [sp, #16]
   1ab88:	str	r1, [r0, #32]
   1ab8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab90:	cmp	r0, r1
   1ab94:	beq	1abb8 <rb_select_poll+0x178>
   1ab98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab9c:	ldr	r1, [sp, #16]
   1aba0:	ldr	r2, [sp, #28]
   1aba4:	str	r0, [sp, #12]
   1aba8:	mov	r0, r1
   1abac:	mov	r1, r2
   1abb0:	ldr	r2, [sp, #12]
   1abb4:	blx	r2
   1abb8:	b	1abbc <rb_select_poll+0x17c>
   1abbc:	ldr	r0, [sp, #16]
   1abc0:	ldrb	r0, [r0, #16]
   1abc4:	and	r0, r0, #1
   1abc8:	cmp	r0, #0
   1abcc:	beq	1ac3c <rb_select_poll+0x1fc>
   1abd0:	ldr	r0, [sp, #20]
   1abd4:	and	r0, r0, #284	; 0x11c
   1abd8:	cmp	r0, #0
   1abdc:	beq	1ac3c <rb_select_poll+0x1fc>
   1abe0:	ldr	r0, [sp, #16]
   1abe4:	ldr	r0, [r0, #36]	; 0x24
   1abe8:	str	r0, [fp, #-24]	; 0xffffffe8
   1abec:	ldr	r0, [sp, #16]
   1abf0:	ldr	r0, [r0, #40]	; 0x28
   1abf4:	str	r0, [sp, #28]
   1abf8:	ldr	r0, [sp, #16]
   1abfc:	movw	r1, #0
   1ac00:	str	r1, [r0, #36]	; 0x24
   1ac04:	ldr	r0, [sp, #16]
   1ac08:	str	r1, [r0, #40]	; 0x28
   1ac0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac10:	cmp	r0, r1
   1ac14:	beq	1ac38 <rb_select_poll+0x1f8>
   1ac18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac1c:	ldr	r1, [sp, #16]
   1ac20:	ldr	r2, [sp, #28]
   1ac24:	str	r0, [sp, #8]
   1ac28:	mov	r0, r1
   1ac2c:	mov	r1, r2
   1ac30:	ldr	r2, [sp, #8]
   1ac34:	blx	r2
   1ac38:	b	1ac3c <rb_select_poll+0x1fc>
   1ac3c:	ldr	r0, [sp, #16]
   1ac40:	ldr	r0, [r0, #28]
   1ac44:	movw	r1, #0
   1ac48:	cmp	r0, r1
   1ac4c:	bne	1ac68 <rb_select_poll+0x228>
   1ac50:	ldr	r0, [sp, #16]
   1ac54:	movw	r1, #1
   1ac58:	movw	r2, #0
   1ac5c:	str	r2, [sp, #4]
   1ac60:	ldr	r3, [sp, #4]
   1ac64:	bl	1a6a4 <rb_setselect_poll>
   1ac68:	ldr	r0, [sp, #16]
   1ac6c:	ldr	r0, [r0, #36]	; 0x24
   1ac70:	movw	r1, #0
   1ac74:	cmp	r0, r1
   1ac78:	bne	1ac94 <rb_select_poll+0x254>
   1ac7c:	ldr	r0, [sp, #16]
   1ac80:	movw	r1, #2
   1ac84:	movw	r2, #0
   1ac88:	str	r2, [sp]
   1ac8c:	ldr	r3, [sp]
   1ac90:	bl	1a6a4 <rb_setselect_poll>
   1ac94:	b	1ac98 <rb_select_poll+0x258>
   1ac98:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ac9c:	add	r0, r0, #1
   1aca0:	str	r0, [fp, #-20]	; 0xffffffec
   1aca4:	b	1aacc <rb_select_poll+0x8c>
   1aca8:	movw	r0, #0
   1acac:	str	r0, [fp, #-4]
   1acb0:	ldr	r0, [fp, #-4]
   1acb4:	mov	sp, fp
   1acb8:	pop	{fp, pc}
   1acbc:	.word	0x00037710
   1acc0:	.word	0x00037690
   1acc4:	.word	0x00037674

0001acc8 <rb_find_fd>:
   1acc8:	sub	sp, sp, #20
   1accc:	str	r0, [sp, #12]
   1acd0:	ldr	r0, [sp, #12]
   1acd4:	cmp	r0, #0
   1acd8:	movw	r0, #0
   1acdc:	movlt	r0, #1
   1ace0:	mvn	r1, #0
   1ace4:	eor	r0, r0, r1
   1ace8:	eor	r0, r0, r1
   1acec:	tst	r0, #1
   1acf0:	beq	1ad00 <rb_find_fd+0x38>
   1acf4:	movw	r0, #0
   1acf8:	str	r0, [sp, #16]
   1acfc:	b	1adc4 <rb_find_fd+0xfc>
   1ad00:	ldr	r0, [pc, #200]	; 1add0 <rb_find_fd+0x108>
   1ad04:	ldr	r0, [pc, r0]
   1ad08:	ldr	r0, [r0]
   1ad0c:	ldr	r1, [sp, #12]
   1ad10:	ldr	r2, [sp, #12]
   1ad14:	asr	r2, r2, #12
   1ad18:	eor	r1, r1, r2
   1ad1c:	ldr	r2, [sp, #12]
   1ad20:	asr	r2, r2, #24
   1ad24:	eor	r1, r1, r2
   1ad28:	movw	r2, #4095	; 0xfff
   1ad2c:	and	r1, r1, r2
   1ad30:	movw	r2, #12
   1ad34:	mul	r1, r1, r2
   1ad38:	add	r0, r0, r1
   1ad3c:	str	r0, [sp, #8]
   1ad40:	ldr	r0, [sp, #8]
   1ad44:	ldr	r0, [r0]
   1ad48:	movw	r1, #0
   1ad4c:	cmp	r0, r1
   1ad50:	bne	1ad60 <rb_find_fd+0x98>
   1ad54:	movw	r0, #0
   1ad58:	str	r0, [sp, #16]
   1ad5c:	b	1adc4 <rb_find_fd+0xfc>
   1ad60:	ldr	r0, [sp, #8]
   1ad64:	ldr	r0, [r0]
   1ad68:	str	r0, [sp, #4]
   1ad6c:	ldr	r0, [sp, #4]
   1ad70:	movw	r1, #0
   1ad74:	cmp	r0, r1
   1ad78:	beq	1adbc <rb_find_fd+0xf4>
   1ad7c:	ldr	r0, [sp, #4]
   1ad80:	ldr	r0, [r0]
   1ad84:	str	r0, [sp]
   1ad88:	ldr	r0, [sp]
   1ad8c:	ldr	r0, [r0, #12]
   1ad90:	ldr	r1, [sp, #12]
   1ad94:	cmp	r0, r1
   1ad98:	bne	1ada8 <rb_find_fd+0xe0>
   1ad9c:	ldr	r0, [sp]
   1ada0:	str	r0, [sp, #16]
   1ada4:	b	1adc4 <rb_find_fd+0xfc>
   1ada8:	b	1adac <rb_find_fd+0xe4>
   1adac:	ldr	r0, [sp, #4]
   1adb0:	ldr	r0, [r0, #8]
   1adb4:	str	r0, [sp, #4]
   1adb8:	b	1ad6c <rb_find_fd+0xa4>
   1adbc:	movw	r0, #0
   1adc0:	str	r0, [sp, #16]
   1adc4:	ldr	r0, [sp, #16]
   1adc8:	add	sp, sp, #20
   1adcc:	bx	lr
   1add0:	.word	0x000196bc

0001add4 <rb_realloc>:
   1add4:	push	{fp, lr}
   1add8:	mov	fp, sp
   1addc:	sub	sp, sp, #16
   1ade0:	str	r0, [fp, #-4]
   1ade4:	str	r1, [sp, #8]
   1ade8:	ldr	r0, [fp, #-4]
   1adec:	ldr	r1, [sp, #8]
   1adf0:	bl	5614 <realloc@plt>
   1adf4:	str	r0, [sp, #4]
   1adf8:	ldr	r0, [sp, #4]
   1adfc:	movw	r1, #0
   1ae00:	cmp	r0, r1
   1ae04:	movw	r0, #0
   1ae08:	moveq	r0, #1
   1ae0c:	mvn	r1, #0
   1ae10:	eor	r0, r0, r1
   1ae14:	eor	r0, r0, r1
   1ae18:	tst	r0, #1
   1ae1c:	beq	1ae24 <rb_realloc+0x50>
   1ae20:	bl	5350 <rb_outofmemory@plt>
   1ae24:	ldr	r0, [sp, #4]
   1ae28:	mov	sp, fp
   1ae2c:	pop	{fp, pc}

0001ae30 <rb_ports_supports_event>:
   1ae30:	push	{fp, lr}
   1ae34:	mov	fp, sp
   1ae38:	bl	56c8 <__errno_location@plt>
   1ae3c:	movw	r1, #38	; 0x26
   1ae40:	str	r1, [r0]
   1ae44:	movw	r0, #0
   1ae48:	pop	{fp, pc}

0001ae4c <rb_ports_init_event>:
   1ae4c:	bx	lr

0001ae50 <rb_ports_sched_event>:
   1ae50:	push	{fp, lr}
   1ae54:	mov	fp, sp
   1ae58:	sub	sp, sp, #8
   1ae5c:	str	r0, [sp, #4]
   1ae60:	str	r1, [sp]
   1ae64:	bl	56c8 <__errno_location@plt>
   1ae68:	movw	r1, #38	; 0x26
   1ae6c:	str	r1, [r0]
   1ae70:	mvn	r0, #0
   1ae74:	mov	sp, fp
   1ae78:	pop	{fp, pc}

0001ae7c <rb_ports_unsched_event>:
   1ae7c:	sub	sp, sp, #4
   1ae80:	str	r0, [sp]
   1ae84:	add	sp, sp, #4
   1ae88:	bx	lr

0001ae8c <rb_init_netio_ports>:
   1ae8c:	movw	r0, #38	; 0x26
   1ae90:	bx	lr

0001ae94 <rb_setselect_ports>:
   1ae94:	push	{fp, lr}
   1ae98:	mov	fp, sp
   1ae9c:	sub	sp, sp, #16
   1aea0:	str	r0, [fp, #-4]
   1aea4:	str	r1, [sp, #8]
   1aea8:	str	r2, [sp, #4]
   1aeac:	str	r3, [sp]
   1aeb0:	bl	56c8 <__errno_location@plt>
   1aeb4:	movw	r1, #38	; 0x26
   1aeb8:	str	r1, [r0]
   1aebc:	mov	sp, fp
   1aec0:	pop	{fp, pc}

0001aec4 <rb_select_ports>:
   1aec4:	push	{fp, lr}
   1aec8:	mov	fp, sp
   1aecc:	sub	sp, sp, #8
   1aed0:	str	r0, [sp, #4]
   1aed4:	bl	56c8 <__errno_location@plt>
   1aed8:	movw	r1, #38	; 0x26
   1aedc:	str	r1, [r0]
   1aee0:	mvn	r0, #0
   1aee4:	mov	sp, fp
   1aee8:	pop	{fp, pc}

0001aeec <rb_setup_fd_ports>:
   1aeec:	push	{fp, lr}
   1aef0:	mov	fp, sp
   1aef4:	sub	sp, sp, #8
   1aef8:	str	r0, [sp, #4]
   1aefc:	bl	56c8 <__errno_location@plt>
   1af00:	movw	r1, #38	; 0x26
   1af04:	str	r1, [r0]
   1af08:	mvn	r0, #0
   1af0c:	mov	sp, fp
   1af10:	pop	{fp, pc}

0001af14 <rb_init_netio_sigio>:
   1af14:	push	{fp, lr}
   1af18:	mov	fp, sp
   1af1c:	sub	sp, sp, #40	; 0x28
   1af20:	bl	4e28 <rb_getmaxconnect@plt>
   1af24:	mov	r1, r0
   1af28:	lsl	r0, r0, #3
   1af2c:	str	r1, [fp, #-8]
   1af30:	bl	1b078 <rb_malloc>
   1af34:	ldr	r1, [pc, #280]	; 1b054 <rb_init_netio_sigio+0x140>
   1af38:	ldr	r1, [pc, r1]
   1af3c:	str	r0, [r1]
   1af40:	bl	4e28 <rb_getmaxconnect@plt>
   1af44:	ldr	r1, [pc, #260]	; 1b050 <rb_init_netio_sigio+0x13c>
   1af48:	ldr	r1, [pc, r1]
   1af4c:	str	r0, [r1, #8]
   1af50:	movw	r0, #0
   1af54:	str	r0, [fp, #-4]
   1af58:	ldr	r0, [fp, #-4]
   1af5c:	str	r0, [fp, #-12]
   1af60:	bl	4e28 <rb_getmaxconnect@plt>
   1af64:	ldr	r1, [fp, #-12]
   1af68:	cmp	r1, r0
   1af6c:	bge	1af9c <rb_init_netio_sigio+0x88>
   1af70:	ldr	r0, [pc, #252]	; 1b074 <rb_init_netio_sigio+0x160>
   1af74:	ldr	r0, [pc, r0]
   1af78:	ldr	r0, [r0]
   1af7c:	ldr	r1, [fp, #-4]
   1af80:	add	r0, r0, r1, lsl #3
   1af84:	mvn	r1, #0
   1af88:	str	r1, [r0]
   1af8c:	ldr	r0, [fp, #-4]
   1af90:	add	r0, r0, #1
   1af94:	str	r0, [fp, #-4]
   1af98:	b	1af58 <rb_init_netio_sigio+0x44>
   1af9c:	ldr	r0, [pc, #196]	; 1b068 <rb_init_netio_sigio+0x154>
   1afa0:	add	r0, pc, r0
   1afa4:	ldr	r1, [pc, #192]	; 1b06c <rb_init_netio_sigio+0x158>
   1afa8:	add	r1, pc, r1
   1afac:	ldr	r2, [pc, #188]	; 1b070 <rb_init_netio_sigio+0x15c>
   1afb0:	ldr	r2, [pc, r2]
   1afb4:	movw	r3, #0
   1afb8:	str	r3, [r2, #4]
   1afbc:	movw	r2, #1
   1afc0:	str	r2, [r1]
   1afc4:	bl	4d50 <sigemptyset@plt>
   1afc8:	str	r0, [fp, #-16]
   1afcc:	bl	4e40 <__libc_current_sigrtmin@plt>
   1afd0:	ldr	r1, [pc, #140]	; 1b064 <rb_init_netio_sigio+0x150>
   1afd4:	add	r1, pc, r1
   1afd8:	str	r0, [sp, #20]
   1afdc:	mov	r0, r1
   1afe0:	ldr	r1, [sp, #20]
   1afe4:	bl	5248 <sigaddset@plt>
   1afe8:	ldr	r1, [pc, #112]	; 1b060 <rb_init_netio_sigio+0x14c>
   1afec:	add	r1, pc, r1
   1aff0:	str	r0, [sp, #16]
   1aff4:	mov	r0, r1
   1aff8:	movw	r1, #29
   1affc:	bl	5248 <sigaddset@plt>
   1b000:	str	r0, [sp, #12]
   1b004:	bl	4e40 <__libc_current_sigrtmin@plt>
   1b008:	ldr	r1, [pc, #76]	; 1b05c <rb_init_netio_sigio+0x148>
   1b00c:	add	r1, pc, r1
   1b010:	add	r0, r0, #1
   1b014:	str	r0, [sp, #8]
   1b018:	mov	r0, r1
   1b01c:	ldr	r1, [sp, #8]
   1b020:	bl	5248 <sigaddset@plt>
   1b024:	ldr	r1, [pc, #44]	; 1b058 <rb_init_netio_sigio+0x144>
   1b028:	add	r1, pc, r1
   1b02c:	movw	r2, #0
   1b030:	str	r0, [sp, #4]
   1b034:	mov	r0, r2
   1b038:	bl	5380 <sigprocmask@plt>
   1b03c:	movw	r1, #0
   1b040:	str	r0, [sp]
   1b044:	mov	r0, r1
   1b048:	mov	sp, fp
   1b04c:	pop	{fp, pc}
   1b050:	.word	0x00019488
   1b054:	.word	0x00019498
   1b058:	.word	0x00037148
   1b05c:	.word	0x00037164
   1b060:	.word	0x00037184
   1b064:	.word	0x0003719c
   1b068:	.word	0x000371d0
   1b06c:	.word	0x000371c4
   1b070:	.word	0x00019420
   1b074:	.word	0x0001945c

0001b078 <rb_malloc>:
   1b078:	push	{fp, lr}
   1b07c:	mov	fp, sp
   1b080:	sub	sp, sp, #8
   1b084:	str	r0, [sp, #4]
   1b088:	ldr	r1, [sp, #4]
   1b08c:	movw	r0, #1
   1b090:	bl	4fb4 <calloc@plt>
   1b094:	str	r0, [sp]
   1b098:	ldr	r0, [sp]
   1b09c:	movw	r1, #0
   1b0a0:	cmp	r0, r1
   1b0a4:	movw	r0, #0
   1b0a8:	moveq	r0, #1
   1b0ac:	mvn	r1, #0
   1b0b0:	eor	r0, r0, r1
   1b0b4:	eor	r0, r0, r1
   1b0b8:	tst	r0, #1
   1b0bc:	beq	1b0c4 <rb_malloc+0x4c>
   1b0c0:	bl	5350 <rb_outofmemory@plt>
   1b0c4:	ldr	r0, [sp]
   1b0c8:	mov	sp, fp
   1b0cc:	pop	{fp, pc}

0001b0d0 <rb_setup_fd_sigio>:
   1b0d0:	push	{fp, lr}
   1b0d4:	mov	fp, sp
   1b0d8:	sub	sp, sp, #40	; 0x28
   1b0dc:	str	r0, [fp, #-8]
   1b0e0:	movw	r0, #0
   1b0e4:	str	r0, [fp, #-12]
   1b0e8:	ldr	r1, [fp, #-8]
   1b0ec:	ldr	r1, [r1, #12]
   1b0f0:	str	r1, [fp, #-16]
   1b0f4:	ldr	r1, [fp, #-16]
   1b0f8:	str	r0, [sp, #20]
   1b0fc:	mov	r0, r1
   1b100:	movw	r1, #3
   1b104:	ldr	r2, [sp, #20]
   1b108:	bl	55d8 <fcntl@plt>
   1b10c:	str	r0, [fp, #-12]
   1b110:	ldr	r0, [fp, #-12]
   1b114:	cmn	r0, #1
   1b118:	bne	1b128 <rb_setup_fd_sigio+0x58>
   1b11c:	movw	r0, #0
   1b120:	str	r0, [fp, #-4]
   1b124:	b	1b200 <rb_setup_fd_sigio+0x130>
   1b128:	ldr	r0, [fp, #-12]
   1b12c:	and	r0, r0, #8192	; 0x2000
   1b130:	cmp	r0, #0
   1b134:	beq	1b158 <rb_setup_fd_sigio+0x88>
   1b138:	ldr	r0, [fp, #-12]
   1b13c:	mvn	r1, #8192	; 0x2000
   1b140:	and	r0, r0, r1
   1b144:	str	r0, [fp, #-12]
   1b148:	ldr	r0, [fp, #-16]
   1b14c:	ldr	r2, [fp, #-12]
   1b150:	movw	r1, #4
   1b154:	bl	55d8 <fcntl@plt>
   1b158:	ldr	r0, [fp, #-12]
   1b15c:	orr	r0, r0, #10240	; 0x2800
   1b160:	str	r0, [fp, #-12]
   1b164:	ldr	r0, [fp, #-16]
   1b168:	ldr	r2, [fp, #-12]
   1b16c:	movw	r1, #4
   1b170:	bl	55d8 <fcntl@plt>
   1b174:	cmn	r0, #1
   1b178:	bne	1b188 <rb_setup_fd_sigio+0xb8>
   1b17c:	movw	r0, #0
   1b180:	str	r0, [fp, #-4]
   1b184:	b	1b200 <rb_setup_fd_sigio+0x130>
   1b188:	ldr	r0, [fp, #-16]
   1b18c:	str	r0, [sp, #16]
   1b190:	bl	4e40 <__libc_current_sigrtmin@plt>
   1b194:	ldr	r1, [sp, #16]
   1b198:	str	r0, [sp, #12]
   1b19c:	mov	r0, r1
   1b1a0:	movw	r1, #10
   1b1a4:	ldr	r2, [sp, #12]
   1b1a8:	bl	55d8 <fcntl@plt>
   1b1ac:	cmn	r0, #1
   1b1b0:	bne	1b1c0 <rb_setup_fd_sigio+0xf0>
   1b1b4:	movw	r0, #0
   1b1b8:	str	r0, [fp, #-4]
   1b1bc:	b	1b200 <rb_setup_fd_sigio+0x130>
   1b1c0:	ldr	r0, [fp, #-16]
   1b1c4:	str	r0, [sp, #8]
   1b1c8:	bl	5494 <getpid@plt>
   1b1cc:	ldr	r1, [sp, #8]
   1b1d0:	str	r0, [sp, #4]
   1b1d4:	mov	r0, r1
   1b1d8:	movw	r1, #8
   1b1dc:	ldr	r2, [sp, #4]
   1b1e0:	bl	55d8 <fcntl@plt>
   1b1e4:	cmn	r0, #1
   1b1e8:	bne	1b1f8 <rb_setup_fd_sigio+0x128>
   1b1ec:	movw	r0, #0
   1b1f0:	str	r0, [fp, #-4]
   1b1f4:	b	1b200 <rb_setup_fd_sigio+0x130>
   1b1f8:	movw	r0, #1
   1b1fc:	str	r0, [fp, #-4]
   1b200:	ldr	r0, [fp, #-4]
   1b204:	mov	sp, fp
   1b208:	pop	{fp, pc}

0001b20c <rb_setselect_sigio>:
   1b20c:	push	{fp, lr}
   1b210:	mov	fp, sp
   1b214:	sub	sp, sp, #24
   1b218:	str	r0, [fp, #-4]
   1b21c:	str	r1, [fp, #-8]
   1b220:	str	r2, [sp, #12]
   1b224:	str	r3, [sp, #8]
   1b228:	ldr	r0, [fp, #-4]
   1b22c:	movw	r1, #0
   1b230:	cmp	r0, r1
   1b234:	bne	1b23c <rb_setselect_sigio+0x30>
   1b238:	b	1b458 <rb_setselect_sigio+0x24c>
   1b23c:	ldr	r0, [fp, #-8]
   1b240:	and	r0, r0, #1
   1b244:	cmp	r0, #0
   1b248:	beq	1b2a0 <rb_setselect_sigio+0x94>
   1b24c:	ldr	r0, [sp, #12]
   1b250:	ldr	r1, [fp, #-4]
   1b254:	str	r0, [r1, #28]
   1b258:	ldr	r0, [sp, #8]
   1b25c:	ldr	r1, [fp, #-4]
   1b260:	str	r0, [r1, #32]
   1b264:	ldr	r0, [sp, #12]
   1b268:	movw	r1, #0
   1b26c:	cmp	r0, r1
   1b270:	beq	1b288 <rb_setselect_sigio+0x7c>
   1b274:	ldr	r0, [fp, #-4]
   1b278:	ldr	r1, [r0, #20]
   1b27c:	orr	r1, r1, #64	; 0x40
   1b280:	str	r1, [r0, #20]
   1b284:	b	1b29c <rb_setselect_sigio+0x90>
   1b288:	ldr	r0, [fp, #-4]
   1b28c:	ldr	r1, [r0, #20]
   1b290:	mvn	r2, #64	; 0x40
   1b294:	and	r1, r1, r2
   1b298:	str	r1, [r0, #20]
   1b29c:	b	1b2a0 <rb_setselect_sigio+0x94>
   1b2a0:	ldr	r0, [fp, #-8]
   1b2a4:	and	r0, r0, #2
   1b2a8:	cmp	r0, #0
   1b2ac:	beq	1b304 <rb_setselect_sigio+0xf8>
   1b2b0:	ldr	r0, [sp, #12]
   1b2b4:	ldr	r1, [fp, #-4]
   1b2b8:	str	r0, [r1, #36]	; 0x24
   1b2bc:	ldr	r0, [sp, #8]
   1b2c0:	ldr	r1, [fp, #-4]
   1b2c4:	str	r0, [r1, #40]	; 0x28
   1b2c8:	ldr	r0, [sp, #12]
   1b2cc:	movw	r1, #0
   1b2d0:	cmp	r0, r1
   1b2d4:	beq	1b2ec <rb_setselect_sigio+0xe0>
   1b2d8:	ldr	r0, [fp, #-4]
   1b2dc:	ldr	r1, [r0, #20]
   1b2e0:	orr	r1, r1, #256	; 0x100
   1b2e4:	str	r1, [r0, #20]
   1b2e8:	b	1b300 <rb_setselect_sigio+0xf4>
   1b2ec:	ldr	r0, [fp, #-4]
   1b2f0:	ldr	r1, [r0, #20]
   1b2f4:	mvn	r2, #256	; 0x100
   1b2f8:	and	r1, r1, r2
   1b2fc:	str	r1, [r0, #20]
   1b300:	b	1b304 <rb_setselect_sigio+0xf8>
   1b304:	ldr	r0, [fp, #-4]
   1b308:	ldr	r0, [r0, #12]
   1b30c:	bl	1b480 <resize_pollarray>
   1b310:	ldr	r0, [fp, #-4]
   1b314:	ldr	r0, [r0, #20]
   1b318:	cmp	r0, #0
   1b31c:	bgt	1b3ec <rb_setselect_sigio+0x1e0>
   1b320:	ldr	r0, [pc, #320]	; 1b468 <rb_setselect_sigio+0x25c>
   1b324:	ldr	r0, [pc, r0]
   1b328:	ldr	r1, [pc, #324]	; 1b474 <rb_setselect_sigio+0x268>
   1b32c:	ldr	r1, [pc, r1]
   1b330:	ldr	r2, [r1]
   1b334:	ldr	r3, [fp, #-4]
   1b338:	ldr	r3, [r3, #12]
   1b33c:	add	r2, r2, r3, lsl #3
   1b340:	mov	r3, #0
   1b344:	strh	r3, [r2, #4]
   1b348:	ldr	r1, [r1]
   1b34c:	ldr	r2, [fp, #-4]
   1b350:	ldr	r2, [r2, #12]
   1b354:	add	r1, r1, r2, lsl #3
   1b358:	mvn	r2, #0
   1b35c:	str	r2, [r1]
   1b360:	ldr	r1, [fp, #-4]
   1b364:	ldr	r1, [r1, #12]
   1b368:	ldr	r0, [r0, #4]
   1b36c:	cmp	r1, r0
   1b370:	bne	1b3e8 <rb_setselect_sigio+0x1dc>
   1b374:	b	1b378 <rb_setselect_sigio+0x16c>
   1b378:	ldr	r0, [pc, #236]	; 1b46c <rb_setselect_sigio+0x260>
   1b37c:	ldr	r0, [pc, r0]
   1b380:	ldr	r0, [r0, #4]
   1b384:	cmp	r0, #0
   1b388:	movw	r0, #0
   1b38c:	str	r0, [sp, #4]
   1b390:	blt	1b3bc <rb_setselect_sigio+0x1b0>
   1b394:	ldr	r0, [pc, #220]	; 1b478 <rb_setselect_sigio+0x26c>
   1b398:	ldr	r0, [pc, r0]
   1b39c:	ldr	r1, [r0]
   1b3a0:	ldr	r0, [r0, #4]
   1b3a4:	add	r0, r1, r0, lsl #3
   1b3a8:	ldr	r0, [r0]
   1b3ac:	cmn	r0, #1
   1b3b0:	movw	r0, #0
   1b3b4:	moveq	r0, #1
   1b3b8:	str	r0, [sp, #4]
   1b3bc:	ldr	r0, [sp, #4]
   1b3c0:	tst	r0, #1
   1b3c4:	beq	1b3e4 <rb_setselect_sigio+0x1d8>
   1b3c8:	ldr	r0, [pc, #160]	; 1b470 <rb_setselect_sigio+0x264>
   1b3cc:	ldr	r0, [pc, r0]
   1b3d0:	ldr	r1, [r0, #4]
   1b3d4:	mvn	r2, #0
   1b3d8:	add	r1, r1, r2
   1b3dc:	str	r1, [r0, #4]
   1b3e0:	b	1b378 <rb_setselect_sigio+0x16c>
   1b3e4:	b	1b3e8 <rb_setselect_sigio+0x1dc>
   1b3e8:	b	1b458 <rb_setselect_sigio+0x24c>
   1b3ec:	ldr	r0, [pc, #108]	; 1b460 <rb_setselect_sigio+0x254>
   1b3f0:	ldr	r0, [pc, r0]
   1b3f4:	ldr	r1, [fp, #-4]
   1b3f8:	ldr	r2, [r1, #12]
   1b3fc:	ldr	r1, [r1, #20]
   1b400:	ldr	r3, [pc, #116]	; 1b47c <rb_setselect_sigio+0x270>
   1b404:	ldr	r3, [pc, r3]
   1b408:	ldr	ip, [r3]
   1b40c:	add	r2, ip, r2, lsl #3
   1b410:	strh	r1, [r2, #4]
   1b414:	ldr	r1, [fp, #-4]
   1b418:	ldr	r1, [r1, #12]
   1b41c:	mov	r2, r1
   1b420:	ldr	r3, [r3]
   1b424:	add	r1, r3, r1, lsl #3
   1b428:	str	r2, [r1]
   1b42c:	ldr	r1, [fp, #-4]
   1b430:	ldr	r1, [r1, #12]
   1b434:	ldr	r0, [r0, #4]
   1b438:	cmp	r1, r0
   1b43c:	ble	1b454 <rb_setselect_sigio+0x248>
   1b440:	ldr	r0, [pc, #28]	; 1b464 <rb_setselect_sigio+0x258>
   1b444:	ldr	r0, [pc, r0]
   1b448:	ldr	r1, [fp, #-4]
   1b44c:	ldr	r1, [r1, #12]
   1b450:	str	r1, [r0, #4]
   1b454:	b	1b458 <rb_setselect_sigio+0x24c>
   1b458:	mov	sp, fp
   1b45c:	pop	{fp, pc}
   1b460:	.word	0x00018fe0
   1b464:	.word	0x00018f8c
   1b468:	.word	0x000190ac
   1b46c:	.word	0x00019054
   1b470:	.word	0x00019004
   1b474:	.word	0x000190a4
   1b478:	.word	0x00019038
   1b47c:	.word	0x00018fcc

0001b480 <resize_pollarray>:
   1b480:	push	{fp, lr}
   1b484:	mov	fp, sp
   1b488:	sub	sp, sp, #16
   1b48c:	ldr	r1, [pc, #232]	; 1b57c <resize_pollarray+0xfc>
   1b490:	ldr	r1, [pc, r1]
   1b494:	str	r0, [fp, #-4]
   1b498:	ldr	r0, [fp, #-4]
   1b49c:	ldr	r1, [r1, #8]
   1b4a0:	cmp	r0, r1
   1b4a4:	movw	r0, #0
   1b4a8:	movge	r0, #1
   1b4ac:	mvn	r1, #0
   1b4b0:	eor	r0, r0, r1
   1b4b4:	eor	r0, r0, r1
   1b4b8:	tst	r0, #1
   1b4bc:	beq	1b574 <resize_pollarray+0xf4>
   1b4c0:	ldr	r0, [pc, #188]	; 1b584 <resize_pollarray+0x104>
   1b4c4:	ldr	r0, [pc, r0]
   1b4c8:	ldr	r1, [r0, #8]
   1b4cc:	str	r1, [sp, #4]
   1b4d0:	ldr	r1, [r0, #8]
   1b4d4:	add	r1, r1, #1024	; 0x400
   1b4d8:	str	r1, [r0, #8]
   1b4dc:	ldr	r1, [r0]
   1b4e0:	ldr	r2, [r0, #8]
   1b4e4:	lsl	r2, r2, #3
   1b4e8:	str	r0, [sp]
   1b4ec:	mov	r0, r1
   1b4f0:	mov	r1, r2
   1b4f4:	bl	1bf80 <rb_realloc>
   1b4f8:	ldr	r1, [sp]
   1b4fc:	str	r0, [r1]
   1b500:	ldr	r0, [r1]
   1b504:	ldr	r2, [sp, #4]
   1b508:	add	r2, r2, #1
   1b50c:	add	r0, r0, r2, lsl #3
   1b510:	movw	r2, #0
   1b514:	and	r1, r2, #255	; 0xff
   1b518:	movw	r2, #8192	; 0x2000
   1b51c:	bl	4ff0 <memset@plt>
   1b520:	ldr	r0, [sp, #4]
   1b524:	add	r0, r0, #1
   1b528:	str	r0, [sp, #8]
   1b52c:	ldr	r0, [pc, #76]	; 1b580 <resize_pollarray+0x100>
   1b530:	ldr	r0, [pc, r0]
   1b534:	ldr	r1, [sp, #8]
   1b538:	ldr	r0, [r0, #8]
   1b53c:	cmp	r1, r0
   1b540:	bge	1b570 <resize_pollarray+0xf0>
   1b544:	ldr	r0, [pc, #60]	; 1b588 <resize_pollarray+0x108>
   1b548:	ldr	r0, [pc, r0]
   1b54c:	ldr	r0, [r0]
   1b550:	ldr	r1, [sp, #8]
   1b554:	add	r0, r0, r1, lsl #3
   1b558:	mvn	r1, #0
   1b55c:	str	r1, [r0]
   1b560:	ldr	r0, [sp, #8]
   1b564:	add	r0, r0, #1
   1b568:	str	r0, [sp, #8]
   1b56c:	b	1b52c <resize_pollarray+0xac>
   1b570:	b	1b574 <resize_pollarray+0xf4>
   1b574:	mov	sp, fp
   1b578:	pop	{fp, pc}
   1b57c:	.word	0x00018f40
   1b580:	.word	0x00018ea0
   1b584:	.word	0x00018f0c
   1b588:	.word	0x00018e88

0001b58c <rb_select_sigio>:
   1b58c:	push	{fp, lr}
   1b590:	mov	fp, sp
   1b594:	sub	sp, sp, #216	; 0xd8
   1b598:	str	r0, [fp, #-8]
   1b59c:	movw	r0, #0
   1b5a0:	str	r0, [fp, #-12]
   1b5a4:	str	r0, [fp, #-16]
   1b5a8:	bl	1bb74 <rb_sigio_supports_event>
   1b5ac:	cmp	r0, #0
   1b5b0:	bne	1b5c0 <rb_select_sigio+0x34>
   1b5b4:	ldr	r0, [fp, #-8]
   1b5b8:	cmp	r0, #0
   1b5bc:	blt	1b600 <rb_select_sigio+0x74>
   1b5c0:	ldr	r0, [pc, #1388]	; 1bb34 <rb_select_sigio+0x5a8>
   1b5c4:	ldr	r1, [fp, #-8]
   1b5c8:	movw	r2, #19923	; 0x4dd3
   1b5cc:	movt	r2, #4194	; 0x1062
   1b5d0:	smmul	r1, r1, r2
   1b5d4:	asr	r3, r1, #6
   1b5d8:	add	r1, r3, r1, lsr #31
   1b5dc:	str	r1, [sp, #40]	; 0x28
   1b5e0:	ldr	r1, [fp, #-8]
   1b5e4:	smmul	r2, r1, r2
   1b5e8:	asr	r3, r2, #6
   1b5ec:	add	r2, r3, r2, lsr #31
   1b5f0:	mov	r3, #1000	; 0x3e8
   1b5f4:	mls	r1, r2, r3, r1
   1b5f8:	mul	r0, r1, r0
   1b5fc:	str	r0, [sp, #44]	; 0x2c
   1b600:	b	1b604 <rb_select_sigio+0x78>
   1b604:	ldr	r0, [pc, #1324]	; 1bb38 <rb_select_sigio+0x5ac>
   1b608:	add	r0, pc, r0
   1b60c:	ldr	r0, [r0]
   1b610:	cmp	r0, #0
   1b614:	bne	1b848 <rb_select_sigio+0x2bc>
   1b618:	ldr	r0, [pc, #1308]	; 1bb3c <rb_select_sigio+0x5b0>
   1b61c:	add	r0, pc, r0
   1b620:	ldr	r0, [r0]
   1b624:	cmp	r0, #0
   1b628:	bne	1b638 <rb_select_sigio+0xac>
   1b62c:	ldr	r0, [fp, #-8]
   1b630:	cmp	r0, #0
   1b634:	bge	1b650 <rb_select_sigio+0xc4>
   1b638:	ldr	r0, [pc, #1284]	; 1bb44 <rb_select_sigio+0x5b8>
   1b63c:	add	r0, pc, r0
   1b640:	add	r1, sp, #48	; 0x30
   1b644:	bl	4e34 <sigwaitinfo@plt>
   1b648:	str	r0, [fp, #-20]	; 0xffffffec
   1b64c:	b	1b668 <rb_select_sigio+0xdc>
   1b650:	ldr	r0, [pc, #1256]	; 1bb40 <rb_select_sigio+0x5b4>
   1b654:	add	r0, pc, r0
   1b658:	add	r1, sp, #48	; 0x30
   1b65c:	add	r2, sp, #40	; 0x28
   1b660:	bl	4e7c <sigtimedwait@plt>
   1b664:	str	r0, [fp, #-20]	; 0xffffffec
   1b668:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b66c:	cmp	r0, #0
   1b670:	ble	1b840 <rb_select_sigio+0x2b4>
   1b674:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b678:	cmp	r0, #29
   1b67c:	bne	1b6a0 <rb_select_sigio+0x114>
   1b680:	ldr	r0, [pc, #1224]	; 1bb50 <rb_select_sigio+0x5c4>
   1b684:	add	r0, pc, r0
   1b688:	bl	52e4 <rb_lib_log@plt>
   1b68c:	ldr	r0, [pc, #1208]	; 1bb4c <rb_select_sigio+0x5c0>
   1b690:	add	r0, pc, r0
   1b694:	movw	r1, #1
   1b698:	str	r1, [r0]
   1b69c:	b	1b850 <rb_select_sigio+0x2c4>
   1b6a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b6a4:	str	r0, [sp, #32]
   1b6a8:	bl	4e40 <__libc_current_sigrtmin@plt>
   1b6ac:	add	r0, r0, #1
   1b6b0:	ldr	r1, [sp, #32]
   1b6b4:	cmp	r1, r0
   1b6b8:	bne	1b6f8 <rb_select_sigio+0x16c>
   1b6bc:	ldr	r0, [pc, #1156]	; 1bb48 <rb_select_sigio+0x5bc>
   1b6c0:	add	r0, pc, r0
   1b6c4:	ldr	r0, [r0]
   1b6c8:	cmp	r0, #0
   1b6cc:	beq	1b6f8 <rb_select_sigio+0x16c>
   1b6d0:	ldr	r0, [sp, #68]	; 0x44
   1b6d4:	str	r0, [sp, #36]	; 0x24
   1b6d8:	ldr	r0, [sp, #36]	; 0x24
   1b6dc:	movw	r1, #0
   1b6e0:	cmp	r0, r1
   1b6e4:	bne	1b6ec <rb_select_sigio+0x160>
   1b6e8:	b	1b604 <rb_select_sigio+0x78>
   1b6ec:	ldr	r0, [sp, #36]	; 0x24
   1b6f0:	bl	526c <rb_run_one_event@plt>
   1b6f4:	b	1b604 <rb_select_sigio+0x78>
   1b6f8:	ldr	r0, [sp, #64]	; 0x40
   1b6fc:	str	r0, [fp, #-24]	; 0xffffffe8
   1b700:	ldr	r0, [sp, #60]	; 0x3c
   1b704:	ldr	r1, [pc, #1112]	; 1bb64 <rb_select_sigio+0x5d8>
   1b708:	ldr	r1, [pc, r1]
   1b70c:	ldr	r2, [r1]
   1b710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b714:	add	r2, r2, r3, lsl #3
   1b718:	ldrh	r3, [r2, #6]
   1b71c:	orr	r0, r3, r0
   1b720:	strh	r0, [r2, #6]
   1b724:	ldr	r0, [r1]
   1b728:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b72c:	add	r0, r0, r1, lsl #3
   1b730:	ldrsh	r0, [r0, #6]
   1b734:	str	r0, [fp, #-16]
   1b738:	ldr	r0, [fp, #-12]
   1b73c:	add	r0, r0, #1
   1b740:	str	r0, [fp, #-12]
   1b744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b748:	bl	1bc38 <rb_find_fd>
   1b74c:	str	r0, [fp, #-36]	; 0xffffffdc
   1b750:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b754:	movw	r1, #0
   1b758:	cmp	r0, r1
   1b75c:	bne	1b764 <rb_select_sigio+0x1d8>
   1b760:	b	1b604 <rb_select_sigio+0x78>
   1b764:	ldr	r0, [fp, #-16]
   1b768:	and	r0, r0, #89	; 0x59
   1b76c:	cmp	r0, #0
   1b770:	beq	1b7d0 <rb_select_sigio+0x244>
   1b774:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b778:	ldr	r0, [r0, #28]
   1b77c:	str	r0, [fp, #-32]	; 0xffffffe0
   1b780:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b784:	ldr	r0, [r0, #32]
   1b788:	str	r0, [fp, #-40]	; 0xffffffd8
   1b78c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b790:	movw	r1, #0
   1b794:	str	r1, [r0, #28]
   1b798:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b79c:	str	r1, [r0, #32]
   1b7a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b7a4:	cmp	r0, r1
   1b7a8:	beq	1b7cc <rb_select_sigio+0x240>
   1b7ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b7b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b7b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b7b8:	str	r0, [sp, #28]
   1b7bc:	mov	r0, r1
   1b7c0:	mov	r1, r2
   1b7c4:	ldr	r2, [sp, #28]
   1b7c8:	blx	r2
   1b7cc:	b	1b7d0 <rb_select_sigio+0x244>
   1b7d0:	ldr	r0, [fp, #-16]
   1b7d4:	and	r0, r0, #284	; 0x11c
   1b7d8:	cmp	r0, #0
   1b7dc:	beq	1b83c <rb_select_sigio+0x2b0>
   1b7e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b7e4:	ldr	r0, [r0, #36]	; 0x24
   1b7e8:	str	r0, [fp, #-32]	; 0xffffffe0
   1b7ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b7f0:	ldr	r0, [r0, #40]	; 0x28
   1b7f4:	str	r0, [fp, #-40]	; 0xffffffd8
   1b7f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b7fc:	movw	r1, #0
   1b800:	str	r1, [r0, #36]	; 0x24
   1b804:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b808:	str	r1, [r0, #40]	; 0x28
   1b80c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b810:	cmp	r0, r1
   1b814:	beq	1b838 <rb_select_sigio+0x2ac>
   1b818:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b81c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b820:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b824:	str	r0, [sp, #24]
   1b828:	mov	r0, r1
   1b82c:	mov	r1, r2
   1b830:	ldr	r2, [sp, #24]
   1b834:	blx	r2
   1b838:	b	1b83c <rb_select_sigio+0x2b0>
   1b83c:	b	1b844 <rb_select_sigio+0x2b8>
   1b840:	b	1b850 <rb_select_sigio+0x2c4>
   1b844:	b	1b84c <rb_select_sigio+0x2c0>
   1b848:	b	1b850 <rb_select_sigio+0x2c4>
   1b84c:	b	1b604 <rb_select_sigio+0x78>
   1b850:	ldr	r0, [pc, #764]	; 1bb54 <rb_select_sigio+0x5c8>
   1b854:	add	r0, pc, r0
   1b858:	ldr	r0, [r0]
   1b85c:	cmp	r0, #0
   1b860:	bne	1b874 <rb_select_sigio+0x2e8>
   1b864:	bl	535c <rb_set_time@plt>
   1b868:	movw	r0, #0
   1b86c:	str	r0, [fp, #-4]
   1b870:	b	1bb28 <rb_select_sigio+0x59c>
   1b874:	bl	4e40 <__libc_current_sigrtmin@plt>
   1b878:	movw	r1, #1
   1b87c:	bl	4e94 <signal@plt>
   1b880:	str	r0, [sp, #20]
   1b884:	bl	4e40 <__libc_current_sigrtmin@plt>
   1b888:	movw	r1, #0
   1b88c:	bl	4e94 <signal@plt>
   1b890:	ldr	r1, [pc, #704]	; 1bb58 <rb_select_sigio+0x5cc>
   1b894:	ldr	r1, [pc, r1]
   1b898:	ldr	r2, [pc, #700]	; 1bb5c <rb_select_sigio+0x5d0>
   1b89c:	add	r2, pc, r2
   1b8a0:	movw	r3, #0
   1b8a4:	str	r3, [r2]
   1b8a8:	ldr	r2, [r1]
   1b8ac:	ldr	r1, [r1, #4]
   1b8b0:	add	r1, r1, #1
   1b8b4:	ldr	r3, [fp, #-8]
   1b8b8:	str	r0, [sp, #16]
   1b8bc:	mov	r0, r2
   1b8c0:	mov	r2, r3
   1b8c4:	bl	53c8 <poll@plt>
   1b8c8:	str	r0, [fp, #-12]
   1b8cc:	bl	535c <rb_set_time@plt>
   1b8d0:	ldr	r0, [fp, #-12]
   1b8d4:	cmp	r0, #0
   1b8d8:	bge	1b908 <rb_select_sigio+0x37c>
   1b8dc:	bl	56c8 <__errno_location@plt>
   1b8e0:	ldr	r0, [r0]
   1b8e4:	bl	4d98 <rb_ignore_errno@plt>
   1b8e8:	cmp	r0, #0
   1b8ec:	bne	1b8fc <rb_select_sigio+0x370>
   1b8f0:	movw	r0, #0
   1b8f4:	str	r0, [fp, #-4]
   1b8f8:	b	1bb28 <rb_select_sigio+0x59c>
   1b8fc:	movw	r0, #5
   1b900:	str	r0, [fp, #-4]
   1b904:	b	1bb28 <rb_select_sigio+0x59c>
   1b908:	ldr	r0, [fp, #-12]
   1b90c:	cmp	r0, #0
   1b910:	bne	1b920 <rb_select_sigio+0x394>
   1b914:	movw	r0, #0
   1b918:	str	r0, [fp, #-4]
   1b91c:	b	1bb28 <rb_select_sigio+0x59c>
   1b920:	movw	r0, #0
   1b924:	str	r0, [fp, #-28]	; 0xffffffe4
   1b928:	ldr	r0, [pc, #560]	; 1bb60 <rb_select_sigio+0x5d4>
   1b92c:	ldr	r0, [pc, r0]
   1b930:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b934:	ldr	r0, [r0, #4]
   1b938:	add	r0, r0, #1
   1b93c:	cmp	r1, r0
   1b940:	bge	1bb20 <rb_select_sigio+0x594>
   1b944:	ldr	r0, [pc, #540]	; 1bb68 <rb_select_sigio+0x5dc>
   1b948:	ldr	r0, [pc, r0]
   1b94c:	ldr	r0, [r0]
   1b950:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b954:	add	r0, r0, r1, lsl #3
   1b958:	ldrsh	r0, [r0, #6]
   1b95c:	str	r0, [fp, #-16]
   1b960:	cmp	r0, #0
   1b964:	beq	1b988 <rb_select_sigio+0x3fc>
   1b968:	ldr	r0, [pc, #508]	; 1bb6c <rb_select_sigio+0x5e0>
   1b96c:	ldr	r0, [pc, r0]
   1b970:	ldr	r0, [r0]
   1b974:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b978:	add	r0, r0, r1, lsl #3
   1b97c:	ldr	r0, [r0]
   1b980:	cmn	r0, #1
   1b984:	bne	1b98c <rb_select_sigio+0x400>
   1b988:	b	1bb10 <rb_select_sigio+0x584>
   1b98c:	ldr	r0, [pc, #476]	; 1bb70 <rb_select_sigio+0x5e4>
   1b990:	ldr	r0, [pc, r0]
   1b994:	ldr	r0, [r0]
   1b998:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b99c:	add	r0, r0, r1, lsl #3
   1b9a0:	ldr	r0, [r0]
   1b9a4:	str	r0, [fp, #-24]	; 0xffffffe8
   1b9a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b9ac:	bl	1bc38 <rb_find_fd>
   1b9b0:	str	r0, [fp, #-36]	; 0xffffffdc
   1b9b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b9b8:	movw	r1, #0
   1b9bc:	cmp	r0, r1
   1b9c0:	bne	1b9c8 <rb_select_sigio+0x43c>
   1b9c4:	b	1bb10 <rb_select_sigio+0x584>
   1b9c8:	ldr	r0, [fp, #-16]
   1b9cc:	and	r0, r0, #89	; 0x59
   1b9d0:	cmp	r0, #0
   1b9d4:	beq	1ba34 <rb_select_sigio+0x4a8>
   1b9d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b9dc:	ldr	r0, [r0, #28]
   1b9e0:	str	r0, [fp, #-32]	; 0xffffffe0
   1b9e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b9e8:	ldr	r0, [r0, #32]
   1b9ec:	str	r0, [fp, #-40]	; 0xffffffd8
   1b9f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b9f4:	movw	r1, #0
   1b9f8:	str	r1, [r0, #28]
   1b9fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ba00:	str	r1, [r0, #32]
   1ba04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ba08:	cmp	r0, r1
   1ba0c:	beq	1ba30 <rb_select_sigio+0x4a4>
   1ba10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ba14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ba18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ba1c:	str	r0, [sp, #12]
   1ba20:	mov	r0, r1
   1ba24:	mov	r1, r2
   1ba28:	ldr	r2, [sp, #12]
   1ba2c:	blx	r2
   1ba30:	b	1ba34 <rb_select_sigio+0x4a8>
   1ba34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ba38:	ldrb	r0, [r0, #16]
   1ba3c:	and	r0, r0, #1
   1ba40:	cmp	r0, #0
   1ba44:	beq	1bab4 <rb_select_sigio+0x528>
   1ba48:	ldr	r0, [fp, #-16]
   1ba4c:	and	r0, r0, #284	; 0x11c
   1ba50:	cmp	r0, #0
   1ba54:	beq	1bab4 <rb_select_sigio+0x528>
   1ba58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ba5c:	ldr	r0, [r0, #36]	; 0x24
   1ba60:	str	r0, [fp, #-32]	; 0xffffffe0
   1ba64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ba68:	ldr	r0, [r0, #40]	; 0x28
   1ba6c:	str	r0, [fp, #-40]	; 0xffffffd8
   1ba70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ba74:	movw	r1, #0
   1ba78:	str	r1, [r0, #36]	; 0x24
   1ba7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ba80:	str	r1, [r0, #40]	; 0x28
   1ba84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ba88:	cmp	r0, r1
   1ba8c:	beq	1bab0 <rb_select_sigio+0x524>
   1ba90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ba94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ba98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ba9c:	str	r0, [sp, #8]
   1baa0:	mov	r0, r1
   1baa4:	mov	r1, r2
   1baa8:	ldr	r2, [sp, #8]
   1baac:	blx	r2
   1bab0:	b	1bab4 <rb_select_sigio+0x528>
   1bab4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bab8:	ldr	r0, [r0, #28]
   1babc:	movw	r1, #0
   1bac0:	cmp	r0, r1
   1bac4:	bne	1bae0 <rb_select_sigio+0x554>
   1bac8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bacc:	movw	r1, #1
   1bad0:	movw	r2, #0
   1bad4:	str	r2, [sp, #4]
   1bad8:	ldr	r3, [sp, #4]
   1badc:	bl	1b20c <rb_setselect_sigio>
   1bae0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bae4:	ldr	r0, [r0, #36]	; 0x24
   1bae8:	movw	r1, #0
   1baec:	cmp	r0, r1
   1baf0:	bne	1bb0c <rb_select_sigio+0x580>
   1baf4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1baf8:	movw	r1, #2
   1bafc:	movw	r2, #0
   1bb00:	str	r2, [sp]
   1bb04:	ldr	r3, [sp]
   1bb08:	bl	1b20c <rb_setselect_sigio>
   1bb0c:	b	1bb10 <rb_select_sigio+0x584>
   1bb10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bb14:	add	r0, r0, #1
   1bb18:	str	r0, [fp, #-28]	; 0xffffffe4
   1bb1c:	b	1b928 <rb_select_sigio+0x39c>
   1bb20:	movw	r0, #0
   1bb24:	str	r0, [fp, #-4]
   1bb28:	ldr	r0, [fp, #-4]
   1bb2c:	mov	sp, fp
   1bb30:	pop	{fp, pc}
   1bb34:	.word	0x000f4240
   1bb38:	.word	0x00036b64
   1bb3c:	.word	0x00036bd4
   1bb40:	.word	0x00036b1c
   1bb44:	.word	0x00036b34
   1bb48:	.word	0x00036b30
   1bb4c:	.word	0x00036adc
   1bb50:	.word	0x00008370
   1bb54:	.word	0x00036918
   1bb58:	.word	0x00018b3c
   1bb5c:	.word	0x000368d0
   1bb60:	.word	0x00018aa4
   1bb64:	.word	0x00018cc8
   1bb68:	.word	0x00018a88
   1bb6c:	.word	0x00018a64
   1bb70:	.word	0x00018a40

0001bb74 <rb_sigio_supports_event>:
   1bb74:	push	{fp, lr}
   1bb78:	mov	fp, sp
   1bb7c:	sub	sp, sp, #72	; 0x48
   1bb80:	ldr	r0, [pc, #160]	; 1bc28 <rb_sigio_supports_event+0xb4>
   1bb84:	add	r0, pc, r0
   1bb88:	ldr	r0, [r0]
   1bb8c:	cmp	r0, #1
   1bb90:	bne	1bba0 <rb_sigio_supports_event+0x2c>
   1bb94:	movw	r0, #1
   1bb98:	str	r0, [fp, #-4]
   1bb9c:	b	1bc1c <rb_sigio_supports_event+0xa8>
   1bba0:	ldr	r0, [pc, #132]	; 1bc2c <rb_sigio_supports_event+0xb8>
   1bba4:	add	r0, pc, r0
   1bba8:	ldr	r0, [r0]
   1bbac:	cmn	r0, #1
   1bbb0:	bne	1bbc0 <rb_sigio_supports_event+0x4c>
   1bbb4:	movw	r0, #0
   1bbb8:	str	r0, [fp, #-4]
   1bbbc:	b	1bc1c <rb_sigio_supports_event+0xa8>
   1bbc0:	movw	r0, #26
   1bbc4:	str	r0, [sp, #4]
   1bbc8:	movw	r0, #0
   1bbcc:	str	r0, [sp, #8]
   1bbd0:	mov	r1, sp
   1bbd4:	sub	r2, fp, #8
   1bbd8:	bl	4ef4 <timer_create@plt>
   1bbdc:	cmp	r0, #0
   1bbe0:	beq	1bc00 <rb_sigio_supports_event+0x8c>
   1bbe4:	ldr	r0, [pc, #72]	; 1bc34 <rb_sigio_supports_event+0xc0>
   1bbe8:	add	r0, pc, r0
   1bbec:	mvn	r1, #0
   1bbf0:	str	r1, [r0]
   1bbf4:	movw	r0, #0
   1bbf8:	str	r0, [fp, #-4]
   1bbfc:	b	1bc1c <rb_sigio_supports_event+0xa8>
   1bc00:	ldr	r0, [fp, #-8]
   1bc04:	bl	5440 <timer_delete@plt>
   1bc08:	ldr	r1, [pc, #32]	; 1bc30 <rb_sigio_supports_event+0xbc>
   1bc0c:	add	r1, pc, r1
   1bc10:	movw	r2, #1
   1bc14:	str	r2, [r1]
   1bc18:	str	r2, [fp, #-4]
   1bc1c:	ldr	r0, [fp, #-4]
   1bc20:	mov	sp, fp
   1bc24:	pop	{fp, pc}
   1bc28:	.word	0x0003666c
   1bc2c:	.word	0x0003664c
   1bc30:	.word	0x000365e4
   1bc34:	.word	0x00036608

0001bc38 <rb_find_fd>:
   1bc38:	sub	sp, sp, #20
   1bc3c:	str	r0, [sp, #12]
   1bc40:	ldr	r0, [sp, #12]
   1bc44:	cmp	r0, #0
   1bc48:	movw	r0, #0
   1bc4c:	movlt	r0, #1
   1bc50:	mvn	r1, #0
   1bc54:	eor	r0, r0, r1
   1bc58:	eor	r0, r0, r1
   1bc5c:	tst	r0, #1
   1bc60:	beq	1bc70 <rb_find_fd+0x38>
   1bc64:	movw	r0, #0
   1bc68:	str	r0, [sp, #16]
   1bc6c:	b	1bd34 <rb_find_fd+0xfc>
   1bc70:	ldr	r0, [pc, #200]	; 1bd40 <rb_find_fd+0x108>
   1bc74:	ldr	r0, [pc, r0]
   1bc78:	ldr	r0, [r0]
   1bc7c:	ldr	r1, [sp, #12]
   1bc80:	ldr	r2, [sp, #12]
   1bc84:	asr	r2, r2, #12
   1bc88:	eor	r1, r1, r2
   1bc8c:	ldr	r2, [sp, #12]
   1bc90:	asr	r2, r2, #24
   1bc94:	eor	r1, r1, r2
   1bc98:	movw	r2, #4095	; 0xfff
   1bc9c:	and	r1, r1, r2
   1bca0:	movw	r2, #12
   1bca4:	mul	r1, r1, r2
   1bca8:	add	r0, r0, r1
   1bcac:	str	r0, [sp, #8]
   1bcb0:	ldr	r0, [sp, #8]
   1bcb4:	ldr	r0, [r0]
   1bcb8:	movw	r1, #0
   1bcbc:	cmp	r0, r1
   1bcc0:	bne	1bcd0 <rb_find_fd+0x98>
   1bcc4:	movw	r0, #0
   1bcc8:	str	r0, [sp, #16]
   1bccc:	b	1bd34 <rb_find_fd+0xfc>
   1bcd0:	ldr	r0, [sp, #8]
   1bcd4:	ldr	r0, [r0]
   1bcd8:	str	r0, [sp, #4]
   1bcdc:	ldr	r0, [sp, #4]
   1bce0:	movw	r1, #0
   1bce4:	cmp	r0, r1
   1bce8:	beq	1bd2c <rb_find_fd+0xf4>
   1bcec:	ldr	r0, [sp, #4]
   1bcf0:	ldr	r0, [r0]
   1bcf4:	str	r0, [sp]
   1bcf8:	ldr	r0, [sp]
   1bcfc:	ldr	r0, [r0, #12]
   1bd00:	ldr	r1, [sp, #12]
   1bd04:	cmp	r0, r1
   1bd08:	bne	1bd18 <rb_find_fd+0xe0>
   1bd0c:	ldr	r0, [sp]
   1bd10:	str	r0, [sp, #16]
   1bd14:	b	1bd34 <rb_find_fd+0xfc>
   1bd18:	b	1bd1c <rb_find_fd+0xe4>
   1bd1c:	ldr	r0, [sp, #4]
   1bd20:	ldr	r0, [r0, #8]
   1bd24:	str	r0, [sp, #4]
   1bd28:	b	1bcdc <rb_find_fd+0xa4>
   1bd2c:	movw	r0, #0
   1bd30:	str	r0, [sp, #16]
   1bd34:	ldr	r0, [sp, #16]
   1bd38:	add	sp, sp, #20
   1bd3c:	bx	lr
   1bd40:	.word	0x0001874c

0001bd44 <rb_sigio_init_event>:
   1bd44:	push	{fp, lr}
   1bd48:	mov	fp, sp
   1bd4c:	bl	1bb74 <rb_sigio_supports_event>
   1bd50:	pop	{fp, pc}

0001bd54 <rb_sigio_sched_event>:
   1bd54:	push	{fp, lr}
   1bd58:	mov	fp, sp
   1bd5c:	sub	sp, sp, #112	; 0x70
   1bd60:	ldr	r2, [pc, #352]	; 1bec8 <rb_sigio_sched_event+0x174>
   1bd64:	add	r2, pc, r2
   1bd68:	str	r0, [fp, #-8]
   1bd6c:	str	r1, [fp, #-12]
   1bd70:	ldr	r0, [r2]
   1bd74:	cmp	r0, #0
   1bd78:	bgt	1bd88 <rb_sigio_sched_event+0x34>
   1bd7c:	movw	r0, #0
   1bd80:	str	r0, [fp, #-4]
   1bd84:	b	1bebc <rb_sigio_sched_event+0x168>
   1bd88:	add	r0, sp, #32
   1bd8c:	movw	r1, #0
   1bd90:	and	r1, r1, #255	; 0xff
   1bd94:	movw	r2, #64	; 0x40
   1bd98:	bl	4ff0 <memset@plt>
   1bd9c:	movw	r0, #4
   1bda0:	bl	1b078 <rb_malloc>
   1bda4:	ldr	r1, [fp, #-8]
   1bda8:	str	r0, [r1, #40]	; 0x28
   1bdac:	ldr	r0, [fp, #-8]
   1bdb0:	ldr	r0, [r0, #40]	; 0x28
   1bdb4:	str	r0, [fp, #-16]
   1bdb8:	movw	r0, #0
   1bdbc:	str	r0, [sp, #40]	; 0x28
   1bdc0:	bl	4e40 <__libc_current_sigrtmin@plt>
   1bdc4:	add	r0, r0, #1
   1bdc8:	str	r0, [sp, #36]	; 0x24
   1bdcc:	ldr	r0, [fp, #-8]
   1bdd0:	str	r0, [sp, #32]
   1bdd4:	ldr	r2, [fp, #-16]
   1bdd8:	movw	r0, #0
   1bddc:	add	r1, sp, #32
   1bde0:	bl	4ef4 <timer_create@plt>
   1bde4:	cmp	r0, #0
   1bde8:	bge	1be1c <rb_sigio_sched_event+0xc8>
   1bdec:	bl	56c8 <__errno_location@plt>
   1bdf0:	ldr	r0, [r0]
   1bdf4:	bl	4d5c <strerror@plt>
   1bdf8:	ldr	r1, [pc, #208]	; 1bed0 <rb_sigio_sched_event+0x17c>
   1bdfc:	add	r1, pc, r1
   1be00:	str	r0, [sp, #12]
   1be04:	mov	r0, r1
   1be08:	ldr	r1, [sp, #12]
   1be0c:	bl	52e4 <rb_lib_log@plt>
   1be10:	movw	r0, #0
   1be14:	str	r0, [fp, #-4]
   1be18:	b	1bebc <rb_sigio_sched_event+0x168>
   1be1c:	add	r0, sp, #16
   1be20:	movw	r1, #0
   1be24:	and	r1, r1, #255	; 0xff
   1be28:	movw	r2, #16
   1be2c:	bl	4ff0 <memset@plt>
   1be30:	ldr	r0, [fp, #-12]
   1be34:	str	r0, [sp, #24]
   1be38:	movw	r0, #0
   1be3c:	str	r0, [sp, #28]
   1be40:	ldr	r0, [fp, #-8]
   1be44:	ldr	r0, [r0, #24]
   1be48:	cmp	r0, #0
   1be4c:	beq	1be60 <rb_sigio_sched_event+0x10c>
   1be50:	ldr	r0, [sp, #24]
   1be54:	str	r0, [sp, #16]
   1be58:	ldr	r0, [sp, #28]
   1be5c:	str	r0, [sp, #20]
   1be60:	ldr	r0, [fp, #-16]
   1be64:	ldr	r0, [r0]
   1be68:	movw	r1, #0
   1be6c:	str	r1, [sp, #8]
   1be70:	add	r2, sp, #16
   1be74:	ldr	r3, [sp, #8]
   1be78:	bl	5128 <timer_settime@plt>
   1be7c:	cmp	r0, #0
   1be80:	bge	1beb4 <rb_sigio_sched_event+0x160>
   1be84:	bl	56c8 <__errno_location@plt>
   1be88:	ldr	r0, [r0]
   1be8c:	bl	4d5c <strerror@plt>
   1be90:	ldr	r1, [pc, #52]	; 1becc <rb_sigio_sched_event+0x178>
   1be94:	add	r1, pc, r1
   1be98:	str	r0, [sp, #4]
   1be9c:	mov	r0, r1
   1bea0:	ldr	r1, [sp, #4]
   1bea4:	bl	52e4 <rb_lib_log@plt>
   1bea8:	movw	r0, #0
   1beac:	str	r0, [fp, #-4]
   1beb0:	b	1bebc <rb_sigio_sched_event+0x168>
   1beb4:	movw	r0, #1
   1beb8:	str	r0, [fp, #-4]
   1bebc:	ldr	r0, [fp, #-4]
   1bec0:	mov	sp, fp
   1bec4:	pop	{fp, pc}
   1bec8:	.word	0x0003648c
   1becc:	.word	0x00007b4d
   1bed0:	.word	0x00007bd3

0001bed4 <rb_sigio_unsched_event>:
   1bed4:	push	{fp, lr}
   1bed8:	mov	fp, sp
   1bedc:	sub	sp, sp, #8
   1bee0:	ldr	r1, [pc, #76]	; 1bf34 <rb_sigio_unsched_event+0x60>
   1bee4:	add	r1, pc, r1
   1bee8:	str	r0, [sp, #4]
   1beec:	ldr	r0, [r1]
   1bef0:	cmp	r0, #0
   1bef4:	bgt	1befc <rb_sigio_unsched_event+0x28>
   1bef8:	b	1bf2c <rb_sigio_unsched_event+0x58>
   1befc:	ldr	r0, [sp, #4]
   1bf00:	ldr	r0, [r0, #40]	; 0x28
   1bf04:	ldr	r0, [r0]
   1bf08:	bl	5440 <timer_delete@plt>
   1bf0c:	ldr	r1, [sp, #4]
   1bf10:	ldr	r1, [r1, #40]	; 0x28
   1bf14:	str	r0, [sp]
   1bf18:	mov	r0, r1
   1bf1c:	bl	1bf38 <rb_free>
   1bf20:	ldr	r0, [sp, #4]
   1bf24:	movw	r1, #0
   1bf28:	str	r1, [r0, #40]	; 0x28
   1bf2c:	mov	sp, fp
   1bf30:	pop	{fp, pc}
   1bf34:	.word	0x0003630c

0001bf38 <rb_free>:
   1bf38:	push	{fp, lr}
   1bf3c:	mov	fp, sp
   1bf40:	sub	sp, sp, #8
   1bf44:	str	r0, [sp, #4]
   1bf48:	ldr	r0, [sp, #4]
   1bf4c:	movw	r1, #0
   1bf50:	cmp	r0, r1
   1bf54:	movw	r0, #0
   1bf58:	movne	r0, #1
   1bf5c:	mvn	r1, #0
   1bf60:	eor	r0, r0, r1
   1bf64:	eor	r0, r0, r1
   1bf68:	tst	r0, #1
   1bf6c:	beq	1bf78 <rb_free+0x40>
   1bf70:	ldr	r0, [sp, #4]
   1bf74:	bl	50c8 <free@plt>
   1bf78:	mov	sp, fp
   1bf7c:	pop	{fp, pc}

0001bf80 <rb_realloc>:
   1bf80:	push	{fp, lr}
   1bf84:	mov	fp, sp
   1bf88:	sub	sp, sp, #16
   1bf8c:	str	r0, [fp, #-4]
   1bf90:	str	r1, [sp, #8]
   1bf94:	ldr	r0, [fp, #-4]
   1bf98:	ldr	r1, [sp, #8]
   1bf9c:	bl	5614 <realloc@plt>
   1bfa0:	str	r0, [sp, #4]
   1bfa4:	ldr	r0, [sp, #4]
   1bfa8:	movw	r1, #0
   1bfac:	cmp	r0, r1
   1bfb0:	movw	r0, #0
   1bfb4:	moveq	r0, #1
   1bfb8:	mvn	r1, #0
   1bfbc:	eor	r0, r0, r1
   1bfc0:	eor	r0, r0, r1
   1bfc4:	tst	r0, #1
   1bfc8:	beq	1bfd0 <rb_realloc+0x50>
   1bfcc:	bl	5350 <rb_outofmemory@plt>
   1bfd0:	ldr	r0, [sp, #4]
   1bfd4:	mov	sp, fp
   1bfd8:	pop	{fp, pc}

0001bfdc <rb_setup_fd_select>:
   1bfdc:	sub	sp, sp, #4
   1bfe0:	str	r0, [sp]
   1bfe4:	movw	r0, #0
   1bfe8:	add	sp, sp, #4
   1bfec:	bx	lr

0001bff0 <rb_init_netio_select>:
   1bff0:	sub	sp, sp, #16
   1bff4:	ldr	r0, [pc, #192]	; 1c0bc <rb_init_netio_select+0xcc>
   1bff8:	ldr	r0, [pc, r0]
   1bffc:	ldr	r0, [r0]
   1c000:	cmp	r0, #1024	; 0x400
   1c004:	ble	1c018 <rb_init_netio_select+0x28>
   1c008:	ldr	r0, [pc, #176]	; 1c0c0 <rb_init_netio_select+0xd0>
   1c00c:	ldr	r0, [pc, r0]
   1c010:	movw	r1, #1024	; 0x400
   1c014:	str	r1, [r0]
   1c018:	b	1c01c <rb_init_netio_select+0x2c>
   1c01c:	ldr	r0, [pc, #160]	; 1c0c4 <rb_init_netio_select+0xd4>
   1c020:	add	r0, pc, r0
   1c024:	str	r0, [sp, #8]
   1c028:	movw	r0, #0
   1c02c:	str	r0, [sp, #12]
   1c030:	ldr	r0, [sp, #12]
   1c034:	cmp	r0, #32
   1c038:	bcs	1c060 <rb_init_netio_select+0x70>
   1c03c:	ldr	r0, [sp, #8]
   1c040:	ldr	r1, [sp, #12]
   1c044:	add	r0, r0, r1, lsl #2
   1c048:	movw	r1, #0
   1c04c:	str	r1, [r0]
   1c050:	ldr	r0, [sp, #12]
   1c054:	add	r0, r0, #1
   1c058:	str	r0, [sp, #12]
   1c05c:	b	1c030 <rb_init_netio_select+0x40>
   1c060:	b	1c064 <rb_init_netio_select+0x74>
   1c064:	b	1c068 <rb_init_netio_select+0x78>
   1c068:	ldr	r0, [pc, #88]	; 1c0c8 <rb_init_netio_select+0xd8>
   1c06c:	add	r0, pc, r0
   1c070:	str	r0, [sp]
   1c074:	movw	r0, #0
   1c078:	str	r0, [sp, #4]
   1c07c:	ldr	r0, [sp, #4]
   1c080:	cmp	r0, #32
   1c084:	bcs	1c0ac <rb_init_netio_select+0xbc>
   1c088:	ldr	r0, [sp]
   1c08c:	ldr	r1, [sp, #4]
   1c090:	add	r0, r0, r1, lsl #2
   1c094:	movw	r1, #0
   1c098:	str	r1, [r0]
   1c09c:	ldr	r0, [sp, #4]
   1c0a0:	add	r0, r0, #1
   1c0a4:	str	r0, [sp, #4]
   1c0a8:	b	1c07c <rb_init_netio_select+0x8c>
   1c0ac:	b	1c0b0 <rb_init_netio_select+0xc0>
   1c0b0:	movw	r0, #0
   1c0b4:	add	sp, sp, #16
   1c0b8:	bx	lr
   1c0bc:	.word	0x000183a8
   1c0c0:	.word	0x00018394
   1c0c4:	.word	0x000361d4
   1c0c8:	.word	0x00036208

0001c0cc <rb_setselect_select>:
   1c0cc:	push	{fp, lr}
   1c0d0:	mov	fp, sp
   1c0d4:	sub	sp, sp, #16
   1c0d8:	str	r0, [fp, #-4]
   1c0dc:	str	r1, [sp, #8]
   1c0e0:	str	r2, [sp, #4]
   1c0e4:	str	r3, [sp]
   1c0e8:	ldr	r0, [sp, #8]
   1c0ec:	and	r0, r0, #1
   1c0f0:	cmp	r0, #0
   1c0f4:	beq	1c124 <rb_setselect_select+0x58>
   1c0f8:	ldr	r0, [sp, #4]
   1c0fc:	ldr	r1, [fp, #-4]
   1c100:	str	r0, [r1, #28]
   1c104:	ldr	r0, [sp]
   1c108:	ldr	r1, [fp, #-4]
   1c10c:	str	r0, [r1, #32]
   1c110:	ldr	r0, [fp, #-4]
   1c114:	ldr	r2, [sp, #4]
   1c118:	movw	r1, #1
   1c11c:	sxth	r1, r1
   1c120:	bl	1c168 <select_update_selectfds>
   1c124:	ldr	r0, [sp, #8]
   1c128:	and	r0, r0, #2
   1c12c:	cmp	r0, #0
   1c130:	beq	1c160 <rb_setselect_select+0x94>
   1c134:	ldr	r0, [sp, #4]
   1c138:	ldr	r1, [fp, #-4]
   1c13c:	str	r0, [r1, #36]	; 0x24
   1c140:	ldr	r0, [sp]
   1c144:	ldr	r1, [fp, #-4]
   1c148:	str	r0, [r1, #40]	; 0x28
   1c14c:	ldr	r0, [fp, #-4]
   1c150:	ldr	r2, [sp, #4]
   1c154:	movw	r1, #2
   1c158:	sxth	r1, r1
   1c15c:	bl	1c168 <select_update_selectfds>
   1c160:	mov	sp, fp
   1c164:	pop	{fp, pc}

0001c168 <select_update_selectfds>:
   1c168:	sub	sp, sp, #16
   1c16c:	str	r0, [sp, #12]
   1c170:	strh	r1, [sp, #10]
   1c174:	str	r2, [sp, #4]
   1c178:	ldrsh	r0, [sp, #10]
   1c17c:	and	r0, r0, #1
   1c180:	cmp	r0, #0
   1c184:	beq	1c24c <select_update_selectfds+0xe4>
   1c188:	ldr	r0, [sp, #4]
   1c18c:	movw	r1, #0
   1c190:	cmp	r0, r1
   1c194:	beq	1c1f0 <select_update_selectfds+0x88>
   1c198:	ldr	r0, [pc, #720]	; 1c470 <select_update_selectfds+0x308>
   1c19c:	add	r0, pc, r0
   1c1a0:	ldr	r1, [sp, #12]
   1c1a4:	ldr	r1, [r1, #12]
   1c1a8:	asr	r2, r1, #31
   1c1ac:	add	r2, r1, r2, lsr #27
   1c1b0:	bic	r3, r2, #31
   1c1b4:	sub	r1, r1, r3
   1c1b8:	mov	r3, #1
   1c1bc:	lsl	r1, r3, r1
   1c1c0:	asr	r2, r2, #5
   1c1c4:	ldr	r3, [pc, #708]	; 1c490 <select_update_selectfds+0x328>
   1c1c8:	add	r3, pc, r3
   1c1cc:	add	r2, r3, r2, lsl #2
   1c1d0:	ldr	r3, [r2]
   1c1d4:	orr	r1, r3, r1
   1c1d8:	str	r1, [r2]
   1c1dc:	ldr	r1, [sp, #12]
   1c1e0:	ldr	r2, [r1, #20]
   1c1e4:	orr	r2, r2, #1
   1c1e8:	str	r2, [r1, #20]
   1c1ec:	b	1c248 <select_update_selectfds+0xe0>
   1c1f0:	ldr	r0, [pc, #628]	; 1c46c <select_update_selectfds+0x304>
   1c1f4:	add	r0, pc, r0
   1c1f8:	ldr	r1, [sp, #12]
   1c1fc:	ldr	r1, [r1, #12]
   1c200:	asr	r2, r1, #31
   1c204:	add	r2, r1, r2, lsr #27
   1c208:	bic	r3, r2, #31
   1c20c:	sub	r1, r1, r3
   1c210:	mov	r3, #1
   1c214:	mvn	r1, r3, lsl r1
   1c218:	asr	r2, r2, #5
   1c21c:	ldr	r3, [pc, #624]	; 1c494 <select_update_selectfds+0x32c>
   1c220:	add	r3, pc, r3
   1c224:	add	r2, r3, r2, lsl #2
   1c228:	ldr	r3, [r2]
   1c22c:	and	r1, r3, r1
   1c230:	str	r1, [r2]
   1c234:	ldr	r1, [sp, #12]
   1c238:	ldr	r2, [r1, #20]
   1c23c:	mvn	r3, #1
   1c240:	and	r2, r2, r3
   1c244:	str	r2, [r1, #20]
   1c248:	b	1c24c <select_update_selectfds+0xe4>
   1c24c:	ldrsh	r0, [sp, #10]
   1c250:	and	r0, r0, #2
   1c254:	cmp	r0, #0
   1c258:	beq	1c320 <select_update_selectfds+0x1b8>
   1c25c:	ldr	r0, [sp, #4]
   1c260:	movw	r1, #0
   1c264:	cmp	r0, r1
   1c268:	beq	1c2c4 <select_update_selectfds+0x15c>
   1c26c:	ldr	r0, [pc, #516]	; 1c478 <select_update_selectfds+0x310>
   1c270:	add	r0, pc, r0
   1c274:	ldr	r1, [sp, #12]
   1c278:	ldr	r1, [r1, #12]
   1c27c:	asr	r2, r1, #31
   1c280:	add	r2, r1, r2, lsr #27
   1c284:	bic	r3, r2, #31
   1c288:	sub	r1, r1, r3
   1c28c:	mov	r3, #1
   1c290:	lsl	r1, r3, r1
   1c294:	asr	r2, r2, #5
   1c298:	ldr	r3, [pc, #504]	; 1c498 <select_update_selectfds+0x330>
   1c29c:	add	r3, pc, r3
   1c2a0:	add	r2, r3, r2, lsl #2
   1c2a4:	ldr	r3, [r2]
   1c2a8:	orr	r1, r3, r1
   1c2ac:	str	r1, [r2]
   1c2b0:	ldr	r1, [sp, #12]
   1c2b4:	ldr	r2, [r1, #20]
   1c2b8:	orr	r2, r2, #2
   1c2bc:	str	r2, [r1, #20]
   1c2c0:	b	1c31c <select_update_selectfds+0x1b4>
   1c2c4:	ldr	r0, [pc, #424]	; 1c474 <select_update_selectfds+0x30c>
   1c2c8:	add	r0, pc, r0
   1c2cc:	ldr	r1, [sp, #12]
   1c2d0:	ldr	r1, [r1, #12]
   1c2d4:	asr	r2, r1, #31
   1c2d8:	add	r2, r1, r2, lsr #27
   1c2dc:	bic	r3, r2, #31
   1c2e0:	sub	r1, r1, r3
   1c2e4:	mov	r3, #1
   1c2e8:	mvn	r1, r3, lsl r1
   1c2ec:	asr	r2, r2, #5
   1c2f0:	ldr	r3, [pc, #420]	; 1c49c <select_update_selectfds+0x334>
   1c2f4:	add	r3, pc, r3
   1c2f8:	add	r2, r3, r2, lsl #2
   1c2fc:	ldr	r3, [r2]
   1c300:	and	r1, r3, r1
   1c304:	str	r1, [r2]
   1c308:	ldr	r1, [sp, #12]
   1c30c:	ldr	r2, [r1, #20]
   1c310:	mvn	r3, #2
   1c314:	and	r2, r2, r3
   1c318:	str	r2, [r1, #20]
   1c31c:	b	1c320 <select_update_selectfds+0x1b8>
   1c320:	ldr	r0, [sp, #12]
   1c324:	ldr	r0, [r0, #20]
   1c328:	and	r0, r0, #3
   1c32c:	cmp	r0, #0
   1c330:	beq	1c368 <select_update_selectfds+0x200>
   1c334:	ldr	r0, [pc, #332]	; 1c488 <select_update_selectfds+0x320>
   1c338:	add	r0, pc, r0
   1c33c:	ldr	r1, [sp, #12]
   1c340:	ldr	r1, [r1, #12]
   1c344:	ldr	r0, [r0]
   1c348:	cmp	r1, r0
   1c34c:	ble	1c364 <select_update_selectfds+0x1fc>
   1c350:	ldr	r0, [pc, #308]	; 1c48c <select_update_selectfds+0x324>
   1c354:	add	r0, pc, r0
   1c358:	ldr	r1, [sp, #12]
   1c35c:	ldr	r1, [r1, #12]
   1c360:	str	r1, [r0]
   1c364:	b	1c464 <select_update_selectfds+0x2fc>
   1c368:	ldr	r0, [pc, #268]	; 1c47c <select_update_selectfds+0x314>
   1c36c:	add	r0, pc, r0
   1c370:	ldr	r1, [sp, #12]
   1c374:	ldr	r1, [r1, #12]
   1c378:	ldr	r0, [r0]
   1c37c:	cmp	r1, r0
   1c380:	bgt	1c460 <select_update_selectfds+0x2f8>
   1c384:	b	1c388 <select_update_selectfds+0x220>
   1c388:	ldr	r0, [pc, #240]	; 1c480 <select_update_selectfds+0x318>
   1c38c:	add	r0, pc, r0
   1c390:	ldr	r0, [r0]
   1c394:	cmp	r0, #0
   1c398:	movw	r0, #0
   1c39c:	str	r0, [sp]
   1c3a0:	blt	1c434 <select_update_selectfds+0x2cc>
   1c3a4:	ldr	r0, [pc, #244]	; 1c4a0 <select_update_selectfds+0x338>
   1c3a8:	ldr	r0, [pc, r0]
   1c3ac:	ldr	r1, [pc, #240]	; 1c4a4 <select_update_selectfds+0x33c>
   1c3b0:	add	r1, pc, r1
   1c3b4:	asr	r2, r0, #31
   1c3b8:	add	r2, r0, r2, lsr #27
   1c3bc:	asr	r3, r2, #5
   1c3c0:	ldr	r1, [r1, r3, lsl #2]
   1c3c4:	bic	r2, r2, #31
   1c3c8:	sub	r0, r0, r2
   1c3cc:	movw	r2, #1
   1c3d0:	lsl	r0, r2, r0
   1c3d4:	and	r0, r1, r0
   1c3d8:	cmp	r0, #0
   1c3dc:	movw	r0, #0
   1c3e0:	str	r0, [sp]
   1c3e4:	bne	1c434 <select_update_selectfds+0x2cc>
   1c3e8:	ldr	r0, [pc, #184]	; 1c4a8 <select_update_selectfds+0x340>
   1c3ec:	ldr	r0, [pc, r0]
   1c3f0:	ldr	r1, [pc, #180]	; 1c4ac <select_update_selectfds+0x344>
   1c3f4:	add	r1, pc, r1
   1c3f8:	asr	r2, r0, #31
   1c3fc:	add	r2, r0, r2, lsr #27
   1c400:	asr	r3, r2, #5
   1c404:	ldr	r1, [r1, r3, lsl #2]
   1c408:	bic	r2, r2, #31
   1c40c:	sub	r0, r0, r2
   1c410:	movw	r2, #1
   1c414:	lsl	r0, r2, r0
   1c418:	and	r0, r1, r0
   1c41c:	cmp	r0, #0
   1c420:	movw	r0, #0
   1c424:	movne	r0, #1
   1c428:	mvn	r1, #0
   1c42c:	eor	r0, r0, r1
   1c430:	str	r0, [sp]
   1c434:	ldr	r0, [sp]
   1c438:	tst	r0, #1
   1c43c:	beq	1c45c <select_update_selectfds+0x2f4>
   1c440:	ldr	r0, [pc, #60]	; 1c484 <select_update_selectfds+0x31c>
   1c444:	add	r0, pc, r0
   1c448:	ldr	r1, [r0]
   1c44c:	mvn	r2, #0
   1c450:	add	r1, r1, r2
   1c454:	str	r1, [r0]
   1c458:	b	1c388 <select_update_selectfds+0x220>
   1c45c:	b	1c460 <select_update_selectfds+0x2f8>
   1c460:	b	1c464 <select_update_selectfds+0x2fc>
   1c464:	add	sp, sp, #16
   1c468:	bx	lr
   1c46c:	.word	0x00036000
   1c470:	.word	0x00036058
   1c474:	.word	0x00035fac
   1c478:	.word	0x00036004
   1c47c:	.word	0x000185dc
   1c480:	.word	0x000185bc
   1c484:	.word	0x00018504
   1c488:	.word	0x00018610
   1c48c:	.word	0x000185f4
   1c490:	.word	0x0003602c
   1c494:	.word	0x00035fd4
   1c498:	.word	0x00035fd8
   1c49c:	.word	0x00035f80
   1c4a0:	.word	0x000185a0
   1c4a4:	.word	0x00035e44
   1c4a8:	.word	0x0001855c
   1c4ac:	.word	0x00035e80

0001c4b0 <rb_select_select>:
   1c4b0:	push	{fp, lr}
   1c4b4:	mov	fp, sp
   1c4b8:	sub	sp, sp, #56	; 0x38
   1c4bc:	ldr	r1, [pc, #708]	; 1c788 <rb_select_select+0x2d8>
   1c4c0:	add	r1, pc, r1
   1c4c4:	ldr	r2, [pc, #704]	; 1c78c <rb_select_select+0x2dc>
   1c4c8:	add	r2, pc, r2
   1c4cc:	ldr	r3, [pc, #700]	; 1c790 <rb_select_select+0x2e0>
   1c4d0:	add	r3, pc, r3
   1c4d4:	ldr	ip, [pc, #696]	; 1c794 <rb_select_select+0x2e4>
   1c4d8:	add	ip, pc, ip
   1c4dc:	str	r0, [fp, #-8]
   1c4e0:	mov	r0, r3
   1c4e4:	str	r1, [sp, #20]
   1c4e8:	mov	r1, ip
   1c4ec:	movw	r3, #128	; 0x80
   1c4f0:	str	r2, [sp, #16]
   1c4f4:	mov	r2, r3
   1c4f8:	str	r3, [sp, #12]
   1c4fc:	bl	51dc <memcpy@plt>
   1c500:	ldr	r0, [sp, #20]
   1c504:	ldr	r1, [sp, #16]
   1c508:	ldr	r2, [sp, #12]
   1c50c:	bl	51dc <memcpy@plt>
   1c510:	ldr	r0, [pc, #640]	; 1c798 <rb_select_select+0x2e8>
   1c514:	add	r1, pc, r0
   1c518:	ldr	r0, [pc, #636]	; 1c79c <rb_select_select+0x2ec>
   1c51c:	add	r2, pc, r0
   1c520:	ldr	r0, [pc, #632]	; 1c7a0 <rb_select_select+0x2f0>
   1c524:	add	r0, pc, r0
   1c528:	movw	r3, #0
   1c52c:	str	r3, [sp, #24]
   1c530:	ldr	ip, [fp, #-8]
   1c534:	movw	lr, #1000	; 0x3e8
   1c538:	mul	ip, ip, lr
   1c53c:	str	ip, [sp, #28]
   1c540:	ldr	r0, [r0]
   1c544:	add	r0, r0, #1
   1c548:	add	ip, sp, #24
   1c54c:	str	ip, [sp]
   1c550:	bl	52fc <select@plt>
   1c554:	str	r0, [fp, #-12]
   1c558:	ldr	r0, [fp, #-12]
   1c55c:	cmp	r0, #0
   1c560:	blt	1c568 <rb_select_select+0xb8>
   1c564:	b	1c590 <rb_select_select+0xe0>
   1c568:	bl	56c8 <__errno_location@plt>
   1c56c:	ldr	r0, [r0]
   1c570:	bl	4d98 <rb_ignore_errno@plt>
   1c574:	cmp	r0, #0
   1c578:	beq	1c580 <rb_select_select+0xd0>
   1c57c:	b	1c510 <rb_select_select+0x60>
   1c580:	bl	535c <rb_set_time@plt>
   1c584:	mvn	r0, #0
   1c588:	str	r0, [fp, #-4]
   1c58c:	b	1c77c <rb_select_select+0x2cc>
   1c590:	bl	535c <rb_set_time@plt>
   1c594:	ldr	r0, [fp, #-12]
   1c598:	cmp	r0, #0
   1c59c:	bne	1c5ac <rb_select_select+0xfc>
   1c5a0:	movw	r0, #0
   1c5a4:	str	r0, [fp, #-4]
   1c5a8:	b	1c77c <rb_select_select+0x2cc>
   1c5ac:	movw	r0, #0
   1c5b0:	str	r0, [fp, #-16]
   1c5b4:	ldr	r0, [pc, #488]	; 1c7a4 <rb_select_select+0x2f4>
   1c5b8:	add	r0, pc, r0
   1c5bc:	ldr	r1, [fp, #-16]
   1c5c0:	ldr	r0, [r0]
   1c5c4:	add	r0, r0, #1
   1c5c8:	cmp	r1, r0
   1c5cc:	bge	1c774 <rb_select_select+0x2c4>
   1c5d0:	ldr	r0, [fp, #-16]
   1c5d4:	bl	1c7b0 <rb_find_fd>
   1c5d8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c5dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c5e0:	movw	r1, #0
   1c5e4:	cmp	r0, r1
   1c5e8:	bne	1c5f0 <rb_select_select+0x140>
   1c5ec:	b	1c764 <rb_select_select+0x2b4>
   1c5f0:	ldr	r0, [fp, #-16]
   1c5f4:	ldr	r1, [pc, #428]	; 1c7a8 <rb_select_select+0x2f8>
   1c5f8:	add	r1, pc, r1
   1c5fc:	asr	r2, r0, #31
   1c600:	add	r2, r0, r2, lsr #27
   1c604:	asr	r3, r2, #5
   1c608:	ldr	r1, [r1, r3, lsl #2]
   1c60c:	bic	r2, r2, #31
   1c610:	sub	r0, r0, r2
   1c614:	movw	r2, #1
   1c618:	lsl	r0, r2, r0
   1c61c:	and	r0, r1, r0
   1c620:	cmp	r0, #0
   1c624:	beq	1c674 <rb_select_select+0x1c4>
   1c628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c62c:	ldr	r0, [r0, #28]
   1c630:	str	r0, [fp, #-20]	; 0xffffffec
   1c634:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c638:	movw	r1, #0
   1c63c:	str	r1, [r0, #28]
   1c640:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c644:	cmp	r0, r1
   1c648:	beq	1c670 <rb_select_select+0x1c0>
   1c64c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c650:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c654:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c658:	ldr	r2, [r2, #32]
   1c65c:	str	r0, [sp, #8]
   1c660:	mov	r0, r1
   1c664:	mov	r1, r2
   1c668:	ldr	r2, [sp, #8]
   1c66c:	blx	r2
   1c670:	b	1c674 <rb_select_select+0x1c4>
   1c674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c678:	ldrb	r0, [r0, #16]
   1c67c:	and	r0, r0, #1
   1c680:	cmp	r0, #0
   1c684:	bne	1c68c <rb_select_select+0x1dc>
   1c688:	b	1c764 <rb_select_select+0x2b4>
   1c68c:	ldr	r0, [fp, #-16]
   1c690:	ldr	r1, [pc, #276]	; 1c7ac <rb_select_select+0x2fc>
   1c694:	add	r1, pc, r1
   1c698:	asr	r2, r0, #31
   1c69c:	add	r2, r0, r2, lsr #27
   1c6a0:	asr	r3, r2, #5
   1c6a4:	ldr	r1, [r1, r3, lsl #2]
   1c6a8:	bic	r2, r2, #31
   1c6ac:	sub	r0, r0, r2
   1c6b0:	movw	r2, #1
   1c6b4:	lsl	r0, r2, r0
   1c6b8:	and	r0, r1, r0
   1c6bc:	cmp	r0, #0
   1c6c0:	beq	1c710 <rb_select_select+0x260>
   1c6c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c6c8:	ldr	r0, [r0, #36]	; 0x24
   1c6cc:	str	r0, [fp, #-20]	; 0xffffffec
   1c6d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c6d4:	movw	r1, #0
   1c6d8:	str	r1, [r0, #36]	; 0x24
   1c6dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c6e0:	cmp	r0, r1
   1c6e4:	beq	1c70c <rb_select_select+0x25c>
   1c6e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c6ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c6f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c6f4:	ldr	r2, [r2, #40]	; 0x28
   1c6f8:	str	r0, [sp, #4]
   1c6fc:	mov	r0, r1
   1c700:	mov	r1, r2
   1c704:	ldr	r2, [sp, #4]
   1c708:	blx	r2
   1c70c:	b	1c710 <rb_select_select+0x260>
   1c710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c714:	ldr	r0, [r0, #28]
   1c718:	movw	r1, #0
   1c71c:	cmp	r0, r1
   1c720:	bne	1c738 <rb_select_select+0x288>
   1c724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c728:	movw	r1, #1
   1c72c:	sxth	r1, r1
   1c730:	movw	r2, #0
   1c734:	bl	1c168 <select_update_selectfds>
   1c738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c73c:	ldr	r0, [r0, #36]	; 0x24
   1c740:	movw	r1, #0
   1c744:	cmp	r0, r1
   1c748:	bne	1c760 <rb_select_select+0x2b0>
   1c74c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c750:	movw	r1, #2
   1c754:	sxth	r1, r1
   1c758:	movw	r2, #0
   1c75c:	bl	1c168 <select_update_selectfds>
   1c760:	b	1c764 <rb_select_select+0x2b4>
   1c764:	ldr	r0, [fp, #-16]
   1c768:	add	r0, r0, #1
   1c76c:	str	r0, [fp, #-16]
   1c770:	b	1c5b4 <rb_select_select+0x104>
   1c774:	movw	r0, #0
   1c778:	str	r0, [fp, #-4]
   1c77c:	ldr	r0, [fp, #-4]
   1c780:	mov	sp, fp
   1c784:	pop	{fp, pc}
   1c788:	.word	0x00035eb4
   1c78c:	.word	0x00035dac
   1c790:	.word	0x00035e24
   1c794:	.word	0x00035d1c
   1c798:	.word	0x00035de0
   1c79c:	.word	0x00035e58
   1c7a0:	.word	0x00018424
   1c7a4:	.word	0x00018390
   1c7a8:	.word	0x00035cfc
   1c7ac:	.word	0x00035ce0

0001c7b0 <rb_find_fd>:
   1c7b0:	sub	sp, sp, #20
   1c7b4:	str	r0, [sp, #12]
   1c7b8:	ldr	r0, [sp, #12]
   1c7bc:	cmp	r0, #0
   1c7c0:	movw	r0, #0
   1c7c4:	movlt	r0, #1
   1c7c8:	mvn	r1, #0
   1c7cc:	eor	r0, r0, r1
   1c7d0:	eor	r0, r0, r1
   1c7d4:	tst	r0, #1
   1c7d8:	beq	1c7e8 <rb_find_fd+0x38>
   1c7dc:	movw	r0, #0
   1c7e0:	str	r0, [sp, #16]
   1c7e4:	b	1c8ac <rb_find_fd+0xfc>
   1c7e8:	ldr	r0, [pc, #200]	; 1c8b8 <rb_find_fd+0x108>
   1c7ec:	ldr	r0, [pc, r0]
   1c7f0:	ldr	r0, [r0]
   1c7f4:	ldr	r1, [sp, #12]
   1c7f8:	ldr	r2, [sp, #12]
   1c7fc:	asr	r2, r2, #12
   1c800:	eor	r1, r1, r2
   1c804:	ldr	r2, [sp, #12]
   1c808:	asr	r2, r2, #24
   1c80c:	eor	r1, r1, r2
   1c810:	movw	r2, #4095	; 0xfff
   1c814:	and	r1, r1, r2
   1c818:	movw	r2, #12
   1c81c:	mul	r1, r1, r2
   1c820:	add	r0, r0, r1
   1c824:	str	r0, [sp, #8]
   1c828:	ldr	r0, [sp, #8]
   1c82c:	ldr	r0, [r0]
   1c830:	movw	r1, #0
   1c834:	cmp	r0, r1
   1c838:	bne	1c848 <rb_find_fd+0x98>
   1c83c:	movw	r0, #0
   1c840:	str	r0, [sp, #16]
   1c844:	b	1c8ac <rb_find_fd+0xfc>
   1c848:	ldr	r0, [sp, #8]
   1c84c:	ldr	r0, [r0]
   1c850:	str	r0, [sp, #4]
   1c854:	ldr	r0, [sp, #4]
   1c858:	movw	r1, #0
   1c85c:	cmp	r0, r1
   1c860:	beq	1c8a4 <rb_find_fd+0xf4>
   1c864:	ldr	r0, [sp, #4]
   1c868:	ldr	r0, [r0]
   1c86c:	str	r0, [sp]
   1c870:	ldr	r0, [sp]
   1c874:	ldr	r0, [r0, #12]
   1c878:	ldr	r1, [sp, #12]
   1c87c:	cmp	r0, r1
   1c880:	bne	1c890 <rb_find_fd+0xe0>
   1c884:	ldr	r0, [sp]
   1c888:	str	r0, [sp, #16]
   1c88c:	b	1c8ac <rb_find_fd+0xfc>
   1c890:	b	1c894 <rb_find_fd+0xe4>
   1c894:	ldr	r0, [sp, #4]
   1c898:	ldr	r0, [r0, #8]
   1c89c:	str	r0, [sp, #4]
   1c8a0:	b	1c854 <rb_find_fd+0xa4>
   1c8a4:	movw	r0, #0
   1c8a8:	str	r0, [sp, #16]
   1c8ac:	ldr	r0, [sp, #16]
   1c8b0:	add	sp, sp, #20
   1c8b4:	bx	lr
   1c8b8:	.word	0x00017bd4

0001c8bc <rb_init_netio_kqueue>:
   1c8bc:	push	{fp, lr}
   1c8c0:	mov	fp, sp
   1c8c4:	bl	56c8 <__errno_location@plt>
   1c8c8:	movw	r1, #38	; 0x26
   1c8cc:	str	r1, [r0]
   1c8d0:	mvn	r0, #0
   1c8d4:	pop	{fp, pc}

0001c8d8 <rb_setselect_kqueue>:
   1c8d8:	push	{fp, lr}
   1c8dc:	mov	fp, sp
   1c8e0:	sub	sp, sp, #16
   1c8e4:	str	r0, [fp, #-4]
   1c8e8:	str	r1, [sp, #8]
   1c8ec:	str	r2, [sp, #4]
   1c8f0:	str	r3, [sp]
   1c8f4:	bl	56c8 <__errno_location@plt>
   1c8f8:	movw	r1, #38	; 0x26
   1c8fc:	str	r1, [r0]
   1c900:	mov	sp, fp
   1c904:	pop	{fp, pc}

0001c908 <rb_select_kqueue>:
   1c908:	push	{fp, lr}
   1c90c:	mov	fp, sp
   1c910:	sub	sp, sp, #8
   1c914:	str	r0, [sp, #4]
   1c918:	bl	56c8 <__errno_location@plt>
   1c91c:	movw	r1, #38	; 0x26
   1c920:	str	r1, [r0]
   1c924:	mvn	r0, #0
   1c928:	mov	sp, fp
   1c92c:	pop	{fp, pc}

0001c930 <rb_setup_fd_kqueue>:
   1c930:	push	{fp, lr}
   1c934:	mov	fp, sp
   1c938:	sub	sp, sp, #8
   1c93c:	str	r0, [sp, #4]
   1c940:	bl	56c8 <__errno_location@plt>
   1c944:	movw	r1, #38	; 0x26
   1c948:	str	r1, [r0]
   1c94c:	mvn	r0, #0
   1c950:	mov	sp, fp
   1c954:	pop	{fp, pc}

0001c958 <rb_kqueue_init_event>:
   1c958:	bx	lr

0001c95c <rb_kqueue_sched_event>:
   1c95c:	push	{fp, lr}
   1c960:	mov	fp, sp
   1c964:	sub	sp, sp, #8
   1c968:	str	r0, [sp, #4]
   1c96c:	str	r1, [sp]
   1c970:	bl	56c8 <__errno_location@plt>
   1c974:	movw	r1, #38	; 0x26
   1c978:	str	r1, [r0]
   1c97c:	mvn	r0, #0
   1c980:	mov	sp, fp
   1c984:	pop	{fp, pc}

0001c988 <rb_kqueue_unsched_event>:
   1c988:	sub	sp, sp, #4
   1c98c:	str	r0, [sp]
   1c990:	add	sp, sp, #4
   1c994:	bx	lr

0001c998 <rb_kqueue_supports_event>:
   1c998:	push	{fp, lr}
   1c99c:	mov	fp, sp
   1c9a0:	bl	56c8 <__errno_location@plt>
   1c9a4:	movw	r1, #38	; 0x26
   1c9a8:	str	r1, [r0]
   1c9ac:	movw	r0, #0
   1c9b0:	pop	{fp, pc}

0001c9b4 <rb_rawbuf_flush>:
   1c9b4:	push	{fp, lr}
   1c9b8:	mov	fp, sp
   1c9bc:	sub	sp, sp, #24
   1c9c0:	str	r0, [fp, #-8]
   1c9c4:	str	r1, [sp, #12]
   1c9c8:	ldr	r0, [fp, #-8]
   1c9cc:	ldr	r0, [r0]
   1c9d0:	movw	r1, #0
   1c9d4:	cmp	r0, r1
   1c9d8:	bne	1c9f4 <rb_rawbuf_flush+0x40>
   1c9dc:	bl	56c8 <__errno_location@plt>
   1c9e0:	movw	r1, #11
   1c9e4:	str	r1, [r0]
   1c9e8:	mvn	r0, #0
   1c9ec:	str	r0, [fp, #-4]
   1c9f0:	b	1cb14 <rb_rawbuf_flush+0x160>
   1c9f4:	ldr	r0, [sp, #12]
   1c9f8:	bl	4e70 <rb_fd_ssl@plt>
   1c9fc:	cmp	r0, #0
   1ca00:	bne	1ca18 <rb_rawbuf_flush+0x64>
   1ca04:	ldr	r0, [fp, #-8]
   1ca08:	ldr	r1, [sp, #12]
   1ca0c:	bl	1cb24 <rb_rawbuf_flush_writev>
   1ca10:	str	r0, [fp, #-4]
   1ca14:	b	1cb14 <rb_rawbuf_flush+0x160>
   1ca18:	ldr	r0, [fp, #-8]
   1ca1c:	ldr	r0, [r0]
   1ca20:	ldr	r0, [r0]
   1ca24:	str	r0, [sp, #8]
   1ca28:	ldr	r0, [sp, #8]
   1ca2c:	add	r0, r0, #1040	; 0x410
   1ca30:	ldrsb	r0, [r0]
   1ca34:	cmp	r0, #0
   1ca38:	bne	1ca54 <rb_rawbuf_flush+0xa0>
   1ca3c:	ldr	r0, [sp, #8]
   1ca40:	movw	r1, #1
   1ca44:	strb	r1, [r0, #1040]	; 0x410
   1ca48:	ldr	r0, [fp, #-8]
   1ca4c:	movw	r1, #0
   1ca50:	str	r1, [r0, #16]
   1ca54:	ldr	r0, [sp, #12]
   1ca58:	ldr	r1, [sp, #8]
   1ca5c:	add	r1, r1, #12
   1ca60:	ldr	r2, [fp, #-8]
   1ca64:	ldr	r2, [r2, #16]
   1ca68:	add	r1, r1, r2
   1ca6c:	ldr	r2, [sp, #8]
   1ca70:	ldr	r2, [r2, #1036]	; 0x40c
   1ca74:	ldr	r3, [fp, #-8]
   1ca78:	ldr	r3, [r3, #16]
   1ca7c:	sub	r2, r2, r3
   1ca80:	bl	5020 <rb_write@plt>
   1ca84:	str	r0, [sp, #4]
   1ca88:	ldr	r0, [sp, #4]
   1ca8c:	cmp	r0, #0
   1ca90:	bgt	1caa0 <rb_rawbuf_flush+0xec>
   1ca94:	ldr	r0, [sp, #4]
   1ca98:	str	r0, [fp, #-4]
   1ca9c:	b	1cb14 <rb_rawbuf_flush+0x160>
   1caa0:	ldr	r0, [sp, #4]
   1caa4:	ldr	r1, [fp, #-8]
   1caa8:	ldr	r2, [r1, #16]
   1caac:	add	r0, r2, r0
   1cab0:	str	r0, [r1, #16]
   1cab4:	ldr	r0, [fp, #-8]
   1cab8:	ldr	r0, [r0, #16]
   1cabc:	ldr	r1, [sp, #8]
   1cac0:	ldr	r1, [r1, #1036]	; 0x40c
   1cac4:	cmp	r0, r1
   1cac8:	bne	1caf8 <rb_rawbuf_flush+0x144>
   1cacc:	ldr	r0, [fp, #-8]
   1cad0:	movw	r1, #0
   1cad4:	str	r1, [r0, #16]
   1cad8:	ldr	r0, [sp, #8]
   1cadc:	ldr	r1, [fp, #-8]
   1cae0:	bl	1ce98 <rb_dlinkDelete>
   1cae4:	ldr	r0, [pc, #52]	; 1cb20 <rb_rawbuf_flush+0x16c>
   1cae8:	add	r0, pc, r0
   1caec:	ldr	r0, [r0]
   1caf0:	ldr	r1, [sp, #8]
   1caf4:	bl	529c <rb_bh_free@plt>
   1caf8:	ldr	r0, [sp, #4]
   1cafc:	ldr	r1, [fp, #-8]
   1cb00:	ldr	r2, [r1, #12]
   1cb04:	sub	r0, r2, r0
   1cb08:	str	r0, [r1, #12]
   1cb0c:	ldr	r0, [sp, #4]
   1cb10:	str	r0, [fp, #-4]
   1cb14:	ldr	r0, [fp, #-4]
   1cb18:	mov	sp, fp
   1cb1c:	pop	{fp, pc}
   1cb20:	.word	0x0003590c

0001cb24 <rb_rawbuf_flush_writev>:
   1cb24:	push	{r4, r5, fp, lr}
   1cb28:	add	fp, sp, #8
   1cb2c:	sub	sp, sp, #56	; 0x38
   1cb30:	sub	sp, sp, #8192	; 0x2000
   1cb34:	add	r2, sp, #16
   1cb38:	str	r0, [fp, #-16]
   1cb3c:	str	r1, [fp, #-20]	; 0xffffffec
   1cb40:	movw	r0, #0
   1cb44:	str	r0, [fp, #-36]	; 0xffffffdc
   1cb48:	str	r0, [fp, #-40]	; 0xffffffd8
   1cb4c:	str	r0, [sp, #12]
   1cb50:	mov	r0, r2
   1cb54:	movw	r1, #0
   1cb58:	and	r1, r1, #255	; 0xff
   1cb5c:	movw	r2, #8192	; 0x2000
   1cb60:	bl	4ff0 <memset@plt>
   1cb64:	ldr	r0, [fp, #-16]
   1cb68:	ldr	r0, [r0]
   1cb6c:	ldr	r1, [sp, #12]
   1cb70:	cmp	r0, r1
   1cb74:	bne	1cb90 <rb_rawbuf_flush_writev+0x6c>
   1cb78:	bl	56c8 <__errno_location@plt>
   1cb7c:	movw	r1, #11
   1cb80:	str	r1, [r0]
   1cb84:	mvn	r0, #0
   1cb88:	str	r0, [fp, #-12]
   1cb8c:	b	1ce8c <rb_rawbuf_flush_writev+0x368>
   1cb90:	ldr	r0, [fp, #-16]
   1cb94:	ldr	r0, [r0]
   1cb98:	str	r0, [fp, #-24]	; 0xffffffe8
   1cb9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cba0:	movw	r1, #0
   1cba4:	cmp	r0, r1
   1cba8:	beq	1cc68 <rb_rawbuf_flush_writev+0x144>
   1cbac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cbb0:	cmp	r0, #1024	; 0x400
   1cbb4:	blt	1cbbc <rb_rawbuf_flush_writev+0x98>
   1cbb8:	b	1cc68 <rb_rawbuf_flush_writev+0x144>
   1cbbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbc0:	ldr	r0, [r0]
   1cbc4:	str	r0, [fp, #-32]	; 0xffffffe0
   1cbc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cbcc:	add	r0, r0, #1040	; 0x410
   1cbd0:	ldrsb	r0, [r0]
   1cbd4:	cmp	r0, #0
   1cbd8:	beq	1cc28 <rb_rawbuf_flush_writev+0x104>
   1cbdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cbe0:	ldr	r1, [fp, #-16]
   1cbe4:	ldr	r1, [r1, #16]
   1cbe8:	add	r0, r0, r1
   1cbec:	add	r0, r0, #12
   1cbf0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cbf4:	add	r2, sp, #16
   1cbf8:	str	r0, [r2, r1, lsl #3]
   1cbfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cc00:	ldr	r0, [r0, #1036]	; 0x40c
   1cc04:	ldr	r1, [fp, #-16]
   1cc08:	ldr	r1, [r1, #16]
   1cc0c:	sub	r0, r0, r1
   1cc10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cc14:	add	r3, r1, #1
   1cc18:	str	r3, [fp, #-36]	; 0xffffffdc
   1cc1c:	add	r1, r2, r1, lsl #3
   1cc20:	str	r0, [r1, #4]
   1cc24:	b	1cc58 <rb_rawbuf_flush_writev+0x134>
   1cc28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cc2c:	add	r0, r0, #12
   1cc30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cc34:	add	r2, sp, #16
   1cc38:	str	r0, [r2, r1, lsl #3]
   1cc3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cc40:	ldr	r0, [r0, #1036]	; 0x40c
   1cc44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cc48:	add	r3, r1, #1
   1cc4c:	str	r3, [fp, #-36]	; 0xffffffdc
   1cc50:	add	r1, r2, r1, lsl #3
   1cc54:	str	r0, [r1, #4]
   1cc58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc5c:	ldr	r0, [r0, #8]
   1cc60:	str	r0, [fp, #-24]	; 0xffffffe8
   1cc64:	b	1cb9c <rb_rawbuf_flush_writev+0x78>
   1cc68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cc6c:	cmp	r0, #0
   1cc70:	bne	1cc8c <rb_rawbuf_flush_writev+0x168>
   1cc74:	bl	56c8 <__errno_location@plt>
   1cc78:	movw	r1, #11
   1cc7c:	str	r1, [r0]
   1cc80:	mvn	r0, #0
   1cc84:	str	r0, [fp, #-12]
   1cc88:	b	1ce8c <rb_rawbuf_flush_writev+0x368>
   1cc8c:	add	r1, sp, #16
   1cc90:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cc94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cc98:	bl	54a0 <rb_writev@plt>
   1cc9c:	str	r0, [fp, #-48]	; 0xffffffd0
   1cca0:	str	r0, [fp, #-44]	; 0xffffffd4
   1cca4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1cca8:	cmp	r0, #0
   1ccac:	bgt	1ccbc <rb_rawbuf_flush_writev+0x198>
   1ccb0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ccb4:	str	r0, [fp, #-12]
   1ccb8:	b	1ce8c <rb_rawbuf_flush_writev+0x368>
   1ccbc:	ldr	r0, [fp, #-16]
   1ccc0:	ldr	r0, [r0]
   1ccc4:	str	r0, [fp, #-24]	; 0xffffffe8
   1ccc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cccc:	movw	r1, #0
   1ccd0:	cmp	r0, r1
   1ccd4:	beq	1cce8 <rb_rawbuf_flush_writev+0x1c4>
   1ccd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccdc:	ldr	r0, [r0, #8]
   1cce0:	str	r0, [sp, #8]
   1cce4:	b	1ccf4 <rb_rawbuf_flush_writev+0x1d0>
   1cce8:	movw	r0, #0
   1ccec:	str	r0, [sp, #8]
   1ccf0:	b	1ccf4 <rb_rawbuf_flush_writev+0x1d0>
   1ccf4:	ldr	r0, [sp, #8]
   1ccf8:	str	r0, [fp, #-28]	; 0xffffffe4
   1ccfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd00:	movw	r1, #0
   1cd04:	cmp	r0, r1
   1cd08:	beq	1ce84 <rb_rawbuf_flush_writev+0x360>
   1cd0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd10:	ldr	r0, [r0]
   1cd14:	str	r0, [fp, #-32]	; 0xffffffe0
   1cd18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cd1c:	add	r1, r0, #1
   1cd20:	str	r1, [fp, #-40]	; 0xffffffd8
   1cd24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cd28:	cmp	r0, r1
   1cd2c:	blt	1cd34 <rb_rawbuf_flush_writev+0x210>
   1cd30:	b	1ce84 <rb_rawbuf_flush_writev+0x360>
   1cd34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cd38:	add	r0, r0, #1040	; 0x410
   1cd3c:	ldrsb	r0, [r0]
   1cd40:	cmp	r0, #0
   1cd44:	beq	1cdc0 <rb_rawbuf_flush_writev+0x29c>
   1cd48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cd4c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cd50:	ldr	r1, [r1, #1036]	; 0x40c
   1cd54:	ldr	r2, [fp, #-16]
   1cd58:	ldr	r2, [r2, #16]
   1cd5c:	sub	r1, r1, r2
   1cd60:	cmp	r0, r1
   1cd64:	blt	1cdbc <rb_rawbuf_flush_writev+0x298>
   1cd68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cd6c:	ldr	r0, [r0, #1036]	; 0x40c
   1cd70:	ldr	r1, [fp, #-16]
   1cd74:	ldr	r1, [r1, #16]
   1cd78:	sub	r0, r0, r1
   1cd7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cd80:	sub	r0, r1, r0
   1cd84:	str	r0, [fp, #-44]	; 0xffffffd4
   1cd88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cd8c:	ldr	r0, [r0, #1036]	; 0x40c
   1cd90:	ldr	r1, [fp, #-16]
   1cd94:	ldr	r1, [r1, #16]
   1cd98:	sub	r0, r0, r1
   1cd9c:	ldr	r1, [fp, #-16]
   1cda0:	ldr	r2, [r1, #12]
   1cda4:	sub	r0, r2, r0
   1cda8:	str	r0, [r1, #12]
   1cdac:	ldr	r0, [fp, #-16]
   1cdb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cdb4:	bl	1d2bc <rb_rawbuf_done>
   1cdb8:	b	1ce44 <rb_rawbuf_flush_writev+0x320>
   1cdbc:	b	1cdc0 <rb_rawbuf_flush_writev+0x29c>
   1cdc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cdc4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cdc8:	ldr	r1, [r1, #1036]	; 0x40c
   1cdcc:	cmp	r0, r1
   1cdd0:	blt	1ce10 <rb_rawbuf_flush_writev+0x2ec>
   1cdd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cdd8:	ldr	r0, [r0, #1036]	; 0x40c
   1cddc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cde0:	sub	r0, r1, r0
   1cde4:	str	r0, [fp, #-44]	; 0xffffffd4
   1cde8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cdec:	ldr	r0, [r0, #1036]	; 0x40c
   1cdf0:	ldr	r1, [fp, #-16]
   1cdf4:	ldr	r2, [r1, #12]
   1cdf8:	sub	r0, r2, r0
   1cdfc:	str	r0, [r1, #12]
   1ce00:	ldr	r0, [fp, #-16]
   1ce04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ce08:	bl	1d2bc <rb_rawbuf_done>
   1ce0c:	b	1ce40 <rb_rawbuf_flush_writev+0x31c>
   1ce10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ce14:	movw	r1, #1
   1ce18:	strb	r1, [r0, #1040]	; 0x410
   1ce1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ce20:	ldr	r1, [fp, #-16]
   1ce24:	str	r0, [r1, #16]
   1ce28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ce2c:	ldr	r1, [fp, #-16]
   1ce30:	ldr	r2, [r1, #12]
   1ce34:	sub	r0, r2, r0
   1ce38:	str	r0, [r1, #12]
   1ce3c:	b	1ce84 <rb_rawbuf_flush_writev+0x360>
   1ce40:	b	1ce44 <rb_rawbuf_flush_writev+0x320>
   1ce44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce48:	str	r0, [fp, #-24]	; 0xffffffe8
   1ce4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce50:	movw	r1, #0
   1ce54:	cmp	r0, r1
   1ce58:	beq	1ce6c <rb_rawbuf_flush_writev+0x348>
   1ce5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce60:	ldr	r0, [r0, #8]
   1ce64:	str	r0, [sp, #4]
   1ce68:	b	1ce78 <rb_rawbuf_flush_writev+0x354>
   1ce6c:	movw	r0, #0
   1ce70:	str	r0, [sp, #4]
   1ce74:	b	1ce78 <rb_rawbuf_flush_writev+0x354>
   1ce78:	ldr	r0, [sp, #4]
   1ce7c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ce80:	b	1ccfc <rb_rawbuf_flush_writev+0x1d8>
   1ce84:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ce88:	str	r0, [fp, #-12]
   1ce8c:	ldr	r0, [fp, #-12]
   1ce90:	sub	sp, fp, #8
   1ce94:	pop	{r4, r5, fp, pc}

0001ce98 <rb_dlinkDelete>:
   1ce98:	sub	sp, sp, #8
   1ce9c:	str	r0, [sp, #4]
   1cea0:	str	r1, [sp]
   1cea4:	ldr	r0, [sp, #4]
   1cea8:	ldr	r0, [r0, #8]
   1ceac:	movw	r1, #0
   1ceb0:	cmp	r0, r1
   1ceb4:	beq	1ced0 <rb_dlinkDelete+0x38>
   1ceb8:	ldr	r0, [sp, #4]
   1cebc:	ldr	r0, [r0, #4]
   1cec0:	ldr	r1, [sp, #4]
   1cec4:	ldr	r1, [r1, #8]
   1cec8:	str	r0, [r1, #4]
   1cecc:	b	1cee0 <rb_dlinkDelete+0x48>
   1ced0:	ldr	r0, [sp, #4]
   1ced4:	ldr	r0, [r0, #4]
   1ced8:	ldr	r1, [sp]
   1cedc:	str	r0, [r1, #4]
   1cee0:	ldr	r0, [sp, #4]
   1cee4:	ldr	r0, [r0, #4]
   1cee8:	movw	r1, #0
   1ceec:	cmp	r0, r1
   1cef0:	beq	1cf0c <rb_dlinkDelete+0x74>
   1cef4:	ldr	r0, [sp, #4]
   1cef8:	ldr	r0, [r0, #8]
   1cefc:	ldr	r1, [sp, #4]
   1cf00:	ldr	r1, [r1, #4]
   1cf04:	str	r0, [r1, #8]
   1cf08:	b	1cf1c <rb_dlinkDelete+0x84>
   1cf0c:	ldr	r0, [sp, #4]
   1cf10:	ldr	r0, [r0, #8]
   1cf14:	ldr	r1, [sp]
   1cf18:	str	r0, [r1]
   1cf1c:	ldr	r0, [sp, #4]
   1cf20:	movw	r1, #0
   1cf24:	str	r1, [r0, #4]
   1cf28:	ldr	r0, [sp, #4]
   1cf2c:	str	r1, [r0, #8]
   1cf30:	ldr	r0, [sp]
   1cf34:	ldr	r1, [r0, #8]
   1cf38:	mvn	r2, #0
   1cf3c:	add	r1, r1, r2
   1cf40:	str	r1, [r0, #8]
   1cf44:	add	sp, sp, #8
   1cf48:	bx	lr

0001cf4c <rb_rawbuf_append>:
   1cf4c:	push	{fp, lr}
   1cf50:	mov	fp, sp
   1cf54:	sub	sp, sp, #24
   1cf58:	str	r0, [fp, #-4]
   1cf5c:	str	r1, [fp, #-8]
   1cf60:	str	r2, [sp, #12]
   1cf64:	movw	r0, #0
   1cf68:	str	r0, [sp, #8]
   1cf6c:	ldr	r1, [fp, #-4]
   1cf70:	ldr	r1, [r1, #4]
   1cf74:	cmp	r1, r0
   1cf78:	beq	1cf8c <rb_rawbuf_append+0x40>
   1cf7c:	ldr	r0, [fp, #-4]
   1cf80:	ldr	r0, [r0, #4]
   1cf84:	ldr	r0, [r0]
   1cf88:	str	r0, [sp, #8]
   1cf8c:	ldr	r0, [sp, #8]
   1cf90:	movw	r1, #0
   1cf94:	cmp	r0, r1
   1cf98:	beq	1d07c <rb_rawbuf_append+0x130>
   1cf9c:	ldr	r0, [sp, #8]
   1cfa0:	ldr	r0, [r0, #1036]	; 0x40c
   1cfa4:	cmp	r0, #1024	; 0x400
   1cfa8:	bge	1d07c <rb_rawbuf_append+0x130>
   1cfac:	ldr	r0, [sp, #8]
   1cfb0:	add	r0, r0, #1040	; 0x410
   1cfb4:	ldrsb	r0, [r0]
   1cfb8:	cmp	r0, #0
   1cfbc:	bne	1d07c <rb_rawbuf_append+0x130>
   1cfc0:	ldr	r0, [fp, #-4]
   1cfc4:	ldr	r0, [r0, #4]
   1cfc8:	ldr	r0, [r0]
   1cfcc:	str	r0, [sp, #8]
   1cfd0:	ldr	r0, [sp, #8]
   1cfd4:	ldr	r0, [r0, #1036]	; 0x40c
   1cfd8:	movw	r1, #1024	; 0x400
   1cfdc:	sub	r0, r1, r0
   1cfe0:	str	r0, [sp, #4]
   1cfe4:	ldr	r0, [sp, #8]
   1cfe8:	add	r0, r0, #12
   1cfec:	ldr	r1, [sp, #8]
   1cff0:	ldr	r1, [r1, #1036]	; 0x40c
   1cff4:	add	r0, r0, r1
   1cff8:	str	r0, [sp]
   1cffc:	ldr	r0, [sp, #12]
   1d000:	ldr	r1, [sp, #4]
   1d004:	cmp	r0, r1
   1d008:	bge	1d014 <rb_rawbuf_append+0xc8>
   1d00c:	ldr	r0, [sp, #12]
   1d010:	str	r0, [sp, #4]
   1d014:	ldr	r0, [sp]
   1d018:	ldr	r1, [fp, #-8]
   1d01c:	ldr	r2, [sp, #4]
   1d020:	bl	51dc <memcpy@plt>
   1d024:	ldr	r0, [sp, #4]
   1d028:	ldr	r1, [sp, #8]
   1d02c:	ldr	r2, [r1, #1036]	; 0x40c
   1d030:	add	r0, r2, r0
   1d034:	str	r0, [r1, #1036]	; 0x40c
   1d038:	ldr	r0, [sp, #4]
   1d03c:	ldr	r1, [fp, #-4]
   1d040:	ldr	r2, [r1, #12]
   1d044:	add	r0, r2, r0
   1d048:	str	r0, [r1, #12]
   1d04c:	ldr	r0, [sp, #4]
   1d050:	ldr	r1, [sp, #12]
   1d054:	sub	r0, r1, r0
   1d058:	str	r0, [sp, #12]
   1d05c:	ldr	r0, [sp, #12]
   1d060:	cmp	r0, #0
   1d064:	bne	1d06c <rb_rawbuf_append+0x120>
   1d068:	b	1d118 <rb_rawbuf_append+0x1cc>
   1d06c:	ldr	r0, [fp, #-8]
   1d070:	ldr	r1, [sp, #4]
   1d074:	add	r0, r0, r1
   1d078:	str	r0, [fp, #-8]
   1d07c:	b	1d080 <rb_rawbuf_append+0x134>
   1d080:	ldr	r0, [sp, #12]
   1d084:	cmp	r0, #0
   1d088:	ble	1d118 <rb_rawbuf_append+0x1cc>
   1d08c:	ldr	r0, [fp, #-4]
   1d090:	bl	1d120 <rb_rawbuf_newbuf>
   1d094:	str	r0, [sp, #8]
   1d098:	ldr	r0, [sp, #12]
   1d09c:	cmp	r0, #1024	; 0x400
   1d0a0:	blt	1d0b0 <rb_rawbuf_append+0x164>
   1d0a4:	movw	r0, #1024	; 0x400
   1d0a8:	str	r0, [sp, #4]
   1d0ac:	b	1d0b8 <rb_rawbuf_append+0x16c>
   1d0b0:	ldr	r0, [sp, #12]
   1d0b4:	str	r0, [sp, #4]
   1d0b8:	ldr	r0, [sp, #8]
   1d0bc:	add	r0, r0, #12
   1d0c0:	ldr	r1, [fp, #-8]
   1d0c4:	ldr	r2, [sp, #4]
   1d0c8:	bl	51dc <memcpy@plt>
   1d0cc:	ldr	r0, [sp, #4]
   1d0d0:	ldr	r1, [sp, #8]
   1d0d4:	ldr	r2, [r1, #1036]	; 0x40c
   1d0d8:	add	r0, r2, r0
   1d0dc:	str	r0, [r1, #1036]	; 0x40c
   1d0e0:	ldr	r0, [sp, #4]
   1d0e4:	ldr	r1, [sp, #12]
   1d0e8:	sub	r0, r1, r0
   1d0ec:	str	r0, [sp, #12]
   1d0f0:	ldr	r0, [fp, #-8]
   1d0f4:	ldr	r1, [sp, #4]
   1d0f8:	add	r0, r0, r1
   1d0fc:	str	r0, [fp, #-8]
   1d100:	ldr	r0, [sp, #4]
   1d104:	ldr	r1, [fp, #-4]
   1d108:	ldr	r2, [r1, #12]
   1d10c:	add	r0, r2, r0
   1d110:	str	r0, [r1, #12]
   1d114:	b	1d080 <rb_rawbuf_append+0x134>
   1d118:	mov	sp, fp
   1d11c:	pop	{fp, pc}

0001d120 <rb_rawbuf_newbuf>:
   1d120:	push	{fp, lr}
   1d124:	mov	fp, sp
   1d128:	sub	sp, sp, #8
   1d12c:	str	r0, [sp, #4]
   1d130:	bl	1d50c <rb_rawbuf_alloc>
   1d134:	str	r0, [sp]
   1d138:	ldr	r0, [sp]
   1d13c:	ldr	r1, [sp]
   1d140:	ldr	r2, [sp, #4]
   1d144:	bl	1d53c <rb_dlinkAddTail>
   1d148:	ldr	r0, [sp]
   1d14c:	mov	sp, fp
   1d150:	pop	{fp, pc}

0001d154 <rb_rawbuf_get>:
   1d154:	push	{fp, lr}
   1d158:	mov	fp, sp
   1d15c:	sub	sp, sp, #32
   1d160:	str	r0, [fp, #-8]
   1d164:	str	r1, [fp, #-12]
   1d168:	str	r2, [sp, #16]
   1d16c:	ldr	r0, [fp, #-8]
   1d170:	ldr	r0, [r0]
   1d174:	movw	r1, #0
   1d178:	cmp	r0, r1
   1d17c:	bne	1d18c <rb_rawbuf_get+0x38>
   1d180:	movw	r0, #0
   1d184:	str	r0, [fp, #-4]
   1d188:	b	1d2b0 <rb_rawbuf_get+0x15c>
   1d18c:	ldr	r0, [fp, #-8]
   1d190:	ldr	r0, [r0]
   1d194:	ldr	r0, [r0]
   1d198:	str	r0, [sp, #12]
   1d19c:	ldr	r0, [sp, #12]
   1d1a0:	add	r0, r0, #1040	; 0x410
   1d1a4:	ldrsb	r0, [r0]
   1d1a8:	cmp	r0, #0
   1d1ac:	beq	1d1cc <rb_rawbuf_get+0x78>
   1d1b0:	ldr	r0, [sp, #12]
   1d1b4:	add	r0, r0, #12
   1d1b8:	ldr	r1, [fp, #-8]
   1d1bc:	ldr	r1, [r1, #16]
   1d1c0:	add	r0, r0, r1
   1d1c4:	str	r0, [sp, #4]
   1d1c8:	b	1d1d8 <rb_rawbuf_get+0x84>
   1d1cc:	ldr	r0, [sp, #12]
   1d1d0:	add	r0, r0, #12
   1d1d4:	str	r0, [sp, #4]
   1d1d8:	ldr	r0, [sp, #16]
   1d1dc:	ldr	r1, [sp, #12]
   1d1e0:	ldr	r1, [r1, #1036]	; 0x40c
   1d1e4:	cmp	r0, r1
   1d1e8:	ble	1d1fc <rb_rawbuf_get+0xa8>
   1d1ec:	ldr	r0, [sp, #12]
   1d1f0:	ldr	r0, [r0, #1036]	; 0x40c
   1d1f4:	str	r0, [sp, #8]
   1d1f8:	b	1d204 <rb_rawbuf_get+0xb0>
   1d1fc:	ldr	r0, [sp, #16]
   1d200:	str	r0, [sp, #8]
   1d204:	ldr	r0, [fp, #-12]
   1d208:	ldr	r1, [sp, #4]
   1d20c:	ldr	r2, [sp, #8]
   1d210:	bl	51dc <memcpy@plt>
   1d214:	ldr	r0, [sp, #8]
   1d218:	ldr	r1, [sp, #12]
   1d21c:	ldr	r1, [r1, #1036]	; 0x40c
   1d220:	cmp	r0, r1
   1d224:	bne	1d260 <rb_rawbuf_get+0x10c>
   1d228:	ldr	r0, [fp, #-8]
   1d22c:	movw	r1, #0
   1d230:	str	r1, [r0, #16]
   1d234:	ldr	r0, [fp, #-8]
   1d238:	ldr	r1, [sp, #12]
   1d23c:	bl	1d2bc <rb_rawbuf_done>
   1d240:	ldr	r0, [sp, #16]
   1d244:	ldr	r1, [fp, #-8]
   1d248:	ldr	r2, [r1, #12]
   1d24c:	sub	r0, r2, r0
   1d250:	str	r0, [r1, #12]
   1d254:	ldr	r0, [sp, #8]
   1d258:	str	r0, [fp, #-4]
   1d25c:	b	1d2b0 <rb_rawbuf_get+0x15c>
   1d260:	ldr	r0, [sp, #12]
   1d264:	movw	r1, #1
   1d268:	strb	r1, [r0, #1040]	; 0x410
   1d26c:	ldr	r0, [sp, #8]
   1d270:	ldr	r1, [sp, #12]
   1d274:	ldr	r2, [r1, #1036]	; 0x40c
   1d278:	sub	r0, r2, r0
   1d27c:	str	r0, [r1, #1036]	; 0x40c
   1d280:	ldr	r0, [sp, #8]
   1d284:	ldr	r1, [fp, #-8]
   1d288:	ldr	r2, [r1, #12]
   1d28c:	sub	r0, r2, r0
   1d290:	str	r0, [r1, #12]
   1d294:	ldr	r0, [sp, #8]
   1d298:	ldr	r1, [fp, #-8]
   1d29c:	ldr	r2, [r1, #16]
   1d2a0:	add	r0, r2, r0
   1d2a4:	str	r0, [r1, #16]
   1d2a8:	ldr	r0, [sp, #8]
   1d2ac:	str	r0, [fp, #-4]
   1d2b0:	ldr	r0, [fp, #-4]
   1d2b4:	mov	sp, fp
   1d2b8:	pop	{fp, pc}

0001d2bc <rb_rawbuf_done>:
   1d2bc:	push	{fp, lr}
   1d2c0:	mov	fp, sp
   1d2c4:	sub	sp, sp, #16
   1d2c8:	str	r0, [fp, #-4]
   1d2cc:	str	r1, [sp, #8]
   1d2d0:	ldr	r0, [sp, #8]
   1d2d4:	str	r0, [sp, #4]
   1d2d8:	ldr	r0, [sp, #8]
   1d2dc:	ldr	r1, [fp, #-4]
   1d2e0:	bl	1ce98 <rb_dlinkDelete>
   1d2e4:	ldr	r0, [pc, #20]	; 1d300 <rb_rawbuf_done+0x44>
   1d2e8:	add	r0, pc, r0
   1d2ec:	ldr	r0, [r0]
   1d2f0:	ldr	r1, [sp, #4]
   1d2f4:	bl	529c <rb_bh_free@plt>
   1d2f8:	mov	sp, fp
   1d2fc:	pop	{fp, pc}
   1d300:	.word	0x0003510c

0001d304 <rb_rawbuf_length>:
   1d304:	sub	sp, sp, #4
   1d308:	str	r0, [sp]
   1d30c:	ldr	r0, [sp]
   1d310:	ldr	r0, [r0, #8]
   1d314:	cmp	r0, #0
   1d318:	bne	1d32c <rb_rawbuf_length+0x28>
   1d31c:	b	1d32c <rb_rawbuf_length+0x28>
   1d320:	ldr	r0, [sp]
   1d324:	movw	r1, #0
   1d328:	str	r1, [r0, #12]
   1d32c:	ldr	r0, [sp]
   1d330:	ldr	r0, [r0, #12]
   1d334:	add	sp, sp, #4
   1d338:	bx	lr

0001d33c <rb_new_rawbuffer>:
   1d33c:	push	{fp, lr}
   1d340:	mov	fp, sp
   1d344:	movw	r0, #20
   1d348:	bl	1d350 <rb_malloc>
   1d34c:	pop	{fp, pc}

0001d350 <rb_malloc>:
   1d350:	push	{fp, lr}
   1d354:	mov	fp, sp
   1d358:	sub	sp, sp, #8
   1d35c:	str	r0, [sp, #4]
   1d360:	ldr	r1, [sp, #4]
   1d364:	movw	r0, #1
   1d368:	bl	4fb4 <calloc@plt>
   1d36c:	str	r0, [sp]
   1d370:	ldr	r0, [sp]
   1d374:	movw	r1, #0
   1d378:	cmp	r0, r1
   1d37c:	movw	r0, #0
   1d380:	moveq	r0, #1
   1d384:	mvn	r1, #0
   1d388:	eor	r0, r0, r1
   1d38c:	eor	r0, r0, r1
   1d390:	tst	r0, #1
   1d394:	beq	1d39c <rb_malloc+0x4c>
   1d398:	bl	5350 <rb_outofmemory@plt>
   1d39c:	ldr	r0, [sp]
   1d3a0:	mov	sp, fp
   1d3a4:	pop	{fp, pc}

0001d3a8 <rb_free_rawbuffer>:
   1d3a8:	push	{fp, lr}
   1d3ac:	mov	fp, sp
   1d3b0:	sub	sp, sp, #24
   1d3b4:	str	r0, [fp, #-4]
   1d3b8:	ldr	r0, [fp, #-4]
   1d3bc:	ldr	r0, [r0]
   1d3c0:	str	r0, [fp, #-8]
   1d3c4:	ldr	r0, [fp, #-8]
   1d3c8:	movw	r1, #0
   1d3cc:	cmp	r0, r1
   1d3d0:	beq	1d3e4 <rb_free_rawbuffer+0x3c>
   1d3d4:	ldr	r0, [fp, #-8]
   1d3d8:	ldr	r0, [r0, #8]
   1d3dc:	str	r0, [sp, #8]
   1d3e0:	b	1d3f0 <rb_free_rawbuffer+0x48>
   1d3e4:	movw	r0, #0
   1d3e8:	str	r0, [sp, #8]
   1d3ec:	b	1d3f0 <rb_free_rawbuffer+0x48>
   1d3f0:	ldr	r0, [sp, #8]
   1d3f4:	str	r0, [sp, #12]
   1d3f8:	ldr	r0, [fp, #-8]
   1d3fc:	movw	r1, #0
   1d400:	cmp	r0, r1
   1d404:	beq	1d458 <rb_free_rawbuffer+0xb0>
   1d408:	ldr	r0, [fp, #-4]
   1d40c:	ldr	r1, [fp, #-8]
   1d410:	ldr	r1, [r1]
   1d414:	bl	1d2bc <rb_rawbuf_done>
   1d418:	ldr	r0, [sp, #12]
   1d41c:	str	r0, [fp, #-8]
   1d420:	ldr	r0, [fp, #-8]
   1d424:	movw	r1, #0
   1d428:	cmp	r0, r1
   1d42c:	beq	1d440 <rb_free_rawbuffer+0x98>
   1d430:	ldr	r0, [fp, #-8]
   1d434:	ldr	r0, [r0, #8]
   1d438:	str	r0, [sp, #4]
   1d43c:	b	1d44c <rb_free_rawbuffer+0xa4>
   1d440:	movw	r0, #0
   1d444:	str	r0, [sp, #4]
   1d448:	b	1d44c <rb_free_rawbuffer+0xa4>
   1d44c:	ldr	r0, [sp, #4]
   1d450:	str	r0, [sp, #12]
   1d454:	b	1d3f8 <rb_free_rawbuffer+0x50>
   1d458:	ldr	r0, [fp, #-4]
   1d45c:	bl	1d468 <rb_free>
   1d460:	mov	sp, fp
   1d464:	pop	{fp, pc}

0001d468 <rb_free>:
   1d468:	push	{fp, lr}
   1d46c:	mov	fp, sp
   1d470:	sub	sp, sp, #8
   1d474:	str	r0, [sp, #4]
   1d478:	ldr	r0, [sp, #4]
   1d47c:	movw	r1, #0
   1d480:	cmp	r0, r1
   1d484:	movw	r0, #0
   1d488:	movne	r0, #1
   1d48c:	mvn	r1, #0
   1d490:	eor	r0, r0, r1
   1d494:	eor	r0, r0, r1
   1d498:	tst	r0, #1
   1d49c:	beq	1d4a8 <rb_free+0x40>
   1d4a0:	ldr	r0, [sp, #4]
   1d4a4:	bl	50c8 <free@plt>
   1d4a8:	mov	sp, fp
   1d4ac:	pop	{fp, pc}

0001d4b0 <rb_init_rawbuffers>:
   1d4b0:	push	{fp, lr}
   1d4b4:	mov	fp, sp
   1d4b8:	sub	sp, sp, #8
   1d4bc:	ldr	r1, [pc, #60]	; 1d500 <rb_init_rawbuffers+0x50>
   1d4c0:	add	r1, pc, r1
   1d4c4:	str	r0, [sp, #4]
   1d4c8:	ldr	r0, [r1]
   1d4cc:	movw	r1, #0
   1d4d0:	cmp	r0, r1
   1d4d4:	bne	1d4f8 <rb_init_rawbuffers+0x48>
   1d4d8:	ldr	r0, [pc, #40]	; 1d508 <rb_init_rawbuffers+0x58>
   1d4dc:	add	r2, pc, r0
   1d4e0:	ldr	r1, [sp, #4]
   1d4e4:	movw	r0, #1044	; 0x414
   1d4e8:	bl	547c <rb_bh_create@plt>
   1d4ec:	ldr	r1, [pc, #16]	; 1d504 <rb_init_rawbuffers+0x54>
   1d4f0:	add	r1, pc, r1
   1d4f4:	str	r0, [r1]
   1d4f8:	mov	sp, fp
   1d4fc:	pop	{fp, pc}
   1d500:	.word	0x00034f34
   1d504:	.word	0x00034f04
   1d508:	.word	0x00006589

0001d50c <rb_rawbuf_alloc>:
   1d50c:	push	{fp, lr}
   1d510:	mov	fp, sp
   1d514:	sub	sp, sp, #8
   1d518:	ldr	r0, [pc, #24]	; 1d538 <rb_rawbuf_alloc+0x2c>
   1d51c:	add	r0, pc, r0
   1d520:	ldr	r0, [r0]
   1d524:	bl	5320 <rb_bh_alloc@plt>
   1d528:	str	r0, [sp, #4]
   1d52c:	ldr	r0, [sp, #4]
   1d530:	mov	sp, fp
   1d534:	pop	{fp, pc}
   1d538:	.word	0x00034ed8

0001d53c <rb_dlinkAddTail>:
   1d53c:	sub	sp, sp, #12
   1d540:	str	r0, [sp, #8]
   1d544:	str	r1, [sp, #4]
   1d548:	str	r2, [sp]
   1d54c:	ldr	r0, [sp, #8]
   1d550:	ldr	r1, [sp, #4]
   1d554:	str	r0, [r1]
   1d558:	ldr	r0, [sp, #4]
   1d55c:	movw	r1, #0
   1d560:	str	r1, [r0, #8]
   1d564:	ldr	r0, [sp]
   1d568:	ldr	r0, [r0, #4]
   1d56c:	ldr	r2, [sp, #4]
   1d570:	str	r0, [r2, #4]
   1d574:	ldr	r0, [sp]
   1d578:	ldr	r0, [r0, #4]
   1d57c:	cmp	r0, r1
   1d580:	beq	1d598 <rb_dlinkAddTail+0x5c>
   1d584:	ldr	r0, [sp, #4]
   1d588:	ldr	r1, [sp]
   1d58c:	ldr	r1, [r1, #4]
   1d590:	str	r0, [r1, #8]
   1d594:	b	1d5bc <rb_dlinkAddTail+0x80>
   1d598:	ldr	r0, [sp]
   1d59c:	ldr	r0, [r0]
   1d5a0:	movw	r1, #0
   1d5a4:	cmp	r0, r1
   1d5a8:	bne	1d5b8 <rb_dlinkAddTail+0x7c>
   1d5ac:	ldr	r0, [sp, #4]
   1d5b0:	ldr	r1, [sp]
   1d5b4:	str	r0, [r1]
   1d5b8:	b	1d5bc <rb_dlinkAddTail+0x80>
   1d5bc:	ldr	r0, [sp, #4]
   1d5c0:	ldr	r1, [sp]
   1d5c4:	str	r0, [r1, #4]
   1d5c8:	ldr	r0, [sp]
   1d5cc:	ldr	r1, [r0, #8]
   1d5d0:	add	r1, r1, #1
   1d5d4:	str	r1, [r0, #8]
   1d5d8:	add	sp, sp, #12
   1d5dc:	bx	lr

0001d5e0 <rb_init_patricia>:
   1d5e0:	bx	lr

0001d5e4 <rb_new_patricia>:
   1d5e4:	push	{fp, lr}
   1d5e8:	mov	fp, sp
   1d5ec:	sub	sp, sp, #8
   1d5f0:	str	r0, [sp, #4]
   1d5f4:	movw	r0, #12
   1d5f8:	bl	1d644 <rb_malloc>
   1d5fc:	ldr	r1, [pc, #60]	; 1d640 <rb_new_patricia+0x5c>
   1d600:	add	r1, pc, r1
   1d604:	str	r0, [sp]
   1d608:	ldr	r0, [sp, #4]
   1d60c:	ldr	r2, [sp]
   1d610:	str	r0, [r2, #4]
   1d614:	ldr	r0, [sp]
   1d618:	movw	r2, #0
   1d61c:	str	r2, [r0]
   1d620:	ldr	r0, [sp]
   1d624:	str	r2, [r0, #8]
   1d628:	ldr	r0, [r1]
   1d62c:	add	r0, r0, #1
   1d630:	str	r0, [r1]
   1d634:	ldr	r0, [sp]
   1d638:	mov	sp, fp
   1d63c:	pop	{fp, pc}
   1d640:	.word	0x00034df8

0001d644 <rb_malloc>:
   1d644:	push	{fp, lr}
   1d648:	mov	fp, sp
   1d64c:	sub	sp, sp, #8
   1d650:	str	r0, [sp, #4]
   1d654:	ldr	r1, [sp, #4]
   1d658:	movw	r0, #1
   1d65c:	bl	4fb4 <calloc@plt>
   1d660:	str	r0, [sp]
   1d664:	ldr	r0, [sp]
   1d668:	movw	r1, #0
   1d66c:	cmp	r0, r1
   1d670:	movw	r0, #0
   1d674:	moveq	r0, #1
   1d678:	mvn	r1, #0
   1d67c:	eor	r0, r0, r1
   1d680:	eor	r0, r0, r1
   1d684:	tst	r0, #1
   1d688:	beq	1d690 <rb_malloc+0x4c>
   1d68c:	bl	5350 <rb_outofmemory@plt>
   1d690:	ldr	r0, [sp]
   1d694:	mov	sp, fp
   1d698:	pop	{fp, pc}

0001d69c <rb_clear_patricia>:
   1d69c:	push	{r4, r5, fp, lr}
   1d6a0:	add	fp, sp, #8
   1d6a4:	sub	sp, sp, #544	; 0x220
   1d6a8:	str	r0, [fp, #-12]
   1d6ac:	str	r1, [fp, #-16]
   1d6b0:	ldr	r0, [fp, #-12]
   1d6b4:	ldr	r0, [r0]
   1d6b8:	movw	r1, #0
   1d6bc:	cmp	r0, r1
   1d6c0:	beq	1d828 <rb_clear_patricia+0x18c>
   1d6c4:	add	r0, sp, #20
   1d6c8:	str	r0, [sp, #16]
   1d6cc:	ldr	r0, [fp, #-12]
   1d6d0:	ldr	r0, [r0]
   1d6d4:	str	r0, [sp, #12]
   1d6d8:	ldr	r0, [sp, #12]
   1d6dc:	movw	r1, #0
   1d6e0:	cmp	r0, r1
   1d6e4:	beq	1d824 <rb_clear_patricia+0x188>
   1d6e8:	ldr	r0, [sp, #12]
   1d6ec:	ldr	r0, [r0, #8]
   1d6f0:	str	r0, [sp, #8]
   1d6f4:	ldr	r0, [sp, #12]
   1d6f8:	ldr	r0, [r0, #12]
   1d6fc:	str	r0, [sp, #4]
   1d700:	ldr	r0, [sp, #12]
   1d704:	ldr	r0, [r0, #4]
   1d708:	movw	r1, #0
   1d70c:	cmp	r0, r1
   1d710:	beq	1d764 <rb_clear_patricia+0xc8>
   1d714:	ldr	r0, [sp, #12]
   1d718:	ldr	r0, [r0, #4]
   1d71c:	bl	1d838 <Deref_Prefix>
   1d720:	ldr	r0, [sp, #12]
   1d724:	ldr	r0, [r0, #20]
   1d728:	movw	r1, #0
   1d72c:	cmp	r0, r1
   1d730:	beq	1d760 <rb_clear_patricia+0xc4>
   1d734:	ldr	r0, [fp, #-16]
   1d738:	movw	r1, #0
   1d73c:	cmp	r0, r1
   1d740:	beq	1d760 <rb_clear_patricia+0xc4>
   1d744:	ldr	r0, [fp, #-16]
   1d748:	ldr	r1, [sp, #12]
   1d74c:	ldr	r1, [r1, #20]
   1d750:	str	r0, [sp]
   1d754:	mov	r0, r1
   1d758:	ldr	r1, [sp]
   1d75c:	blx	r1
   1d760:	b	1d768 <rb_clear_patricia+0xcc>
   1d764:	b	1d768 <rb_clear_patricia+0xcc>
   1d768:	ldr	r0, [sp, #12]
   1d76c:	bl	1d890 <rb_free>
   1d770:	ldr	r0, [fp, #-12]
   1d774:	ldr	r1, [r0, #8]
   1d778:	mvn	r2, #0
   1d77c:	add	r1, r1, r2
   1d780:	str	r1, [r0, #8]
   1d784:	ldr	r0, [sp, #8]
   1d788:	movw	r1, #0
   1d78c:	cmp	r0, r1
   1d790:	beq	1d7c4 <rb_clear_patricia+0x128>
   1d794:	ldr	r0, [sp, #4]
   1d798:	movw	r1, #0
   1d79c:	cmp	r0, r1
   1d7a0:	beq	1d7b8 <rb_clear_patricia+0x11c>
   1d7a4:	ldr	r0, [sp, #4]
   1d7a8:	ldr	r1, [sp, #16]
   1d7ac:	add	r2, r1, #4
   1d7b0:	str	r2, [sp, #16]
   1d7b4:	str	r0, [r1]
   1d7b8:	ldr	r0, [sp, #8]
   1d7bc:	str	r0, [sp, #12]
   1d7c0:	b	1d820 <rb_clear_patricia+0x184>
   1d7c4:	ldr	r0, [sp, #4]
   1d7c8:	movw	r1, #0
   1d7cc:	cmp	r0, r1
   1d7d0:	beq	1d7e0 <rb_clear_patricia+0x144>
   1d7d4:	ldr	r0, [sp, #4]
   1d7d8:	str	r0, [sp, #12]
   1d7dc:	b	1d81c <rb_clear_patricia+0x180>
   1d7e0:	add	r0, sp, #20
   1d7e4:	ldr	r1, [sp, #16]
   1d7e8:	cmp	r1, r0
   1d7ec:	beq	1d810 <rb_clear_patricia+0x174>
   1d7f0:	ldr	r0, [sp, #16]
   1d7f4:	mvn	r1, #3
   1d7f8:	add	r2, r0, r1
   1d7fc:	str	r2, [sp, #16]
   1d800:	add	r0, r0, r1
   1d804:	ldr	r0, [r0]
   1d808:	str	r0, [sp, #12]
   1d80c:	b	1d818 <rb_clear_patricia+0x17c>
   1d810:	movw	r0, #0
   1d814:	str	r0, [sp, #12]
   1d818:	b	1d81c <rb_clear_patricia+0x180>
   1d81c:	b	1d820 <rb_clear_patricia+0x184>
   1d820:	b	1d6d8 <rb_clear_patricia+0x3c>
   1d824:	b	1d828 <rb_clear_patricia+0x18c>
   1d828:	ldr	r0, [fp, #-12]
   1d82c:	bl	1d890 <rb_free>
   1d830:	sub	sp, fp, #8
   1d834:	pop	{r4, r5, fp, pc}

0001d838 <Deref_Prefix>:
   1d838:	push	{fp, lr}
   1d83c:	mov	fp, sp
   1d840:	sub	sp, sp, #8
   1d844:	str	r0, [sp, #4]
   1d848:	ldr	r0, [sp, #4]
   1d84c:	movw	r1, #0
   1d850:	cmp	r0, r1
   1d854:	bne	1d85c <Deref_Prefix+0x24>
   1d858:	b	1d888 <Deref_Prefix+0x50>
   1d85c:	ldr	r0, [sp, #4]
   1d860:	ldr	r1, [r0, #4]
   1d864:	mvn	r2, #0
   1d868:	add	r1, r1, r2
   1d86c:	str	r1, [r0, #4]
   1d870:	ldr	r0, [sp, #4]
   1d874:	ldr	r0, [r0, #4]
   1d878:	cmp	r0, #0
   1d87c:	bgt	1d888 <Deref_Prefix+0x50>
   1d880:	ldr	r0, [sp, #4]
   1d884:	bl	1d890 <rb_free>
   1d888:	mov	sp, fp
   1d88c:	pop	{fp, pc}

0001d890 <rb_free>:
   1d890:	push	{fp, lr}
   1d894:	mov	fp, sp
   1d898:	sub	sp, sp, #8
   1d89c:	str	r0, [sp, #4]
   1d8a0:	ldr	r0, [sp, #4]
   1d8a4:	movw	r1, #0
   1d8a8:	cmp	r0, r1
   1d8ac:	movw	r0, #0
   1d8b0:	movne	r0, #1
   1d8b4:	mvn	r1, #0
   1d8b8:	eor	r0, r0, r1
   1d8bc:	eor	r0, r0, r1
   1d8c0:	tst	r0, #1
   1d8c4:	beq	1d8d0 <rb_free+0x40>
   1d8c8:	ldr	r0, [sp, #4]
   1d8cc:	bl	50c8 <free@plt>
   1d8d0:	mov	sp, fp
   1d8d4:	pop	{fp, pc}

0001d8d8 <rb_destroy_patricia>:
   1d8d8:	push	{fp, lr}
   1d8dc:	mov	fp, sp
   1d8e0:	sub	sp, sp, #8
   1d8e4:	str	r0, [sp, #4]
   1d8e8:	str	r1, [sp]
   1d8ec:	ldr	r0, [sp, #4]
   1d8f0:	ldr	r1, [sp]
   1d8f4:	bl	4ec4 <rb_clear_patricia@plt>
   1d8f8:	ldr	r0, [pc, #24]	; 1d918 <rb_destroy_patricia+0x40>
   1d8fc:	add	r0, pc, r0
   1d900:	ldr	r1, [r0]
   1d904:	mvn	r2, #0
   1d908:	add	r1, r1, r2
   1d90c:	str	r1, [r0]
   1d910:	mov	sp, fp
   1d914:	pop	{fp, pc}
   1d918:	.word	0x00034afc

0001d91c <rb_patricia_process>:
   1d91c:	push	{r4, r5, fp, lr}
   1d920:	add	fp, sp, #8
   1d924:	sub	sp, sp, #544	; 0x220
   1d928:	str	r0, [fp, #-12]
   1d92c:	str	r1, [fp, #-16]
   1d930:	add	r0, sp, #16
   1d934:	str	r0, [sp, #12]
   1d938:	ldr	r0, [fp, #-12]
   1d93c:	ldr	r0, [r0]
   1d940:	str	r0, [sp, #8]
   1d944:	ldr	r0, [sp, #8]
   1d948:	str	r0, [fp, #-20]	; 0xffffffec
   1d94c:	movw	r1, #0
   1d950:	cmp	r0, r1
   1d954:	beq	1da4c <rb_patricia_process+0x130>
   1d958:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d95c:	ldr	r0, [r0, #4]
   1d960:	movw	r1, #0
   1d964:	cmp	r0, r1
   1d968:	beq	1d994 <rb_patricia_process+0x78>
   1d96c:	ldr	r0, [fp, #-16]
   1d970:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d974:	ldr	r1, [r1, #4]
   1d978:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d97c:	ldr	r2, [r2, #20]
   1d980:	str	r0, [sp, #4]
   1d984:	mov	r0, r1
   1d988:	mov	r1, r2
   1d98c:	ldr	r2, [sp, #4]
   1d990:	blx	r2
   1d994:	ldr	r0, [sp, #8]
   1d998:	ldr	r0, [r0, #8]
   1d99c:	movw	r1, #0
   1d9a0:	cmp	r0, r1
   1d9a4:	beq	1d9e4 <rb_patricia_process+0xc8>
   1d9a8:	ldr	r0, [sp, #8]
   1d9ac:	ldr	r0, [r0, #12]
   1d9b0:	movw	r1, #0
   1d9b4:	cmp	r0, r1
   1d9b8:	beq	1d9d4 <rb_patricia_process+0xb8>
   1d9bc:	ldr	r0, [sp, #8]
   1d9c0:	ldr	r0, [r0, #12]
   1d9c4:	ldr	r1, [sp, #12]
   1d9c8:	add	r2, r1, #4
   1d9cc:	str	r2, [sp, #12]
   1d9d0:	str	r0, [r1]
   1d9d4:	ldr	r0, [sp, #8]
   1d9d8:	ldr	r0, [r0, #8]
   1d9dc:	str	r0, [sp, #8]
   1d9e0:	b	1da48 <rb_patricia_process+0x12c>
   1d9e4:	ldr	r0, [sp, #8]
   1d9e8:	ldr	r0, [r0, #12]
   1d9ec:	movw	r1, #0
   1d9f0:	cmp	r0, r1
   1d9f4:	beq	1da08 <rb_patricia_process+0xec>
   1d9f8:	ldr	r0, [sp, #8]
   1d9fc:	ldr	r0, [r0, #12]
   1da00:	str	r0, [sp, #8]
   1da04:	b	1da44 <rb_patricia_process+0x128>
   1da08:	add	r0, sp, #16
   1da0c:	ldr	r1, [sp, #12]
   1da10:	cmp	r1, r0
   1da14:	beq	1da38 <rb_patricia_process+0x11c>
   1da18:	ldr	r0, [sp, #12]
   1da1c:	mvn	r1, #3
   1da20:	add	r2, r0, r1
   1da24:	str	r2, [sp, #12]
   1da28:	add	r0, r0, r1
   1da2c:	ldr	r0, [r0]
   1da30:	str	r0, [sp, #8]
   1da34:	b	1da40 <rb_patricia_process+0x124>
   1da38:	movw	r0, #0
   1da3c:	str	r0, [sp, #8]
   1da40:	b	1da44 <rb_patricia_process+0x128>
   1da44:	b	1da48 <rb_patricia_process+0x12c>
   1da48:	b	1d944 <rb_patricia_process+0x28>
   1da4c:	b	1da50 <rb_patricia_process+0x134>
   1da50:	sub	sp, fp, #8
   1da54:	pop	{r4, r5, fp, pc}

0001da58 <rb_patricia_search_exact>:
   1da58:	push	{fp, lr}
   1da5c:	mov	fp, sp
   1da60:	sub	sp, sp, #32
   1da64:	str	r0, [fp, #-8]
   1da68:	str	r1, [fp, #-12]
   1da6c:	ldr	r0, [fp, #-8]
   1da70:	ldr	r0, [r0]
   1da74:	movw	r1, #0
   1da78:	cmp	r0, r1
   1da7c:	bne	1da8c <rb_patricia_search_exact+0x34>
   1da80:	movw	r0, #0
   1da84:	str	r0, [fp, #-4]
   1da88:	b	1dbbc <rb_patricia_search_exact+0x164>
   1da8c:	ldr	r0, [fp, #-8]
   1da90:	ldr	r0, [r0]
   1da94:	str	r0, [sp, #16]
   1da98:	ldr	r0, [fp, #-12]
   1da9c:	add	r0, r0, #8
   1daa0:	str	r0, [sp, #12]
   1daa4:	ldr	r0, [fp, #-12]
   1daa8:	ldrh	r0, [r0, #2]
   1daac:	str	r0, [sp, #8]
   1dab0:	ldr	r0, [sp, #16]
   1dab4:	ldr	r0, [r0]
   1dab8:	ldr	r1, [sp, #8]
   1dabc:	cmp	r0, r1
   1dac0:	bcs	1db38 <rb_patricia_search_exact+0xe0>
   1dac4:	ldr	r0, [sp, #12]
   1dac8:	ldr	r1, [sp, #16]
   1dacc:	ldr	r1, [r1]
   1dad0:	lsr	r1, r1, #3
   1dad4:	add	r0, r0, r1
   1dad8:	ldrb	r0, [r0]
   1dadc:	ldr	r1, [sp, #16]
   1dae0:	ldr	r1, [r1]
   1dae4:	and	r1, r1, #7
   1dae8:	movw	r2, #128	; 0x80
   1daec:	asr	r1, r2, r1
   1daf0:	and	r0, r0, r1
   1daf4:	cmp	r0, #0
   1daf8:	beq	1db0c <rb_patricia_search_exact+0xb4>
   1dafc:	ldr	r0, [sp, #16]
   1db00:	ldr	r0, [r0, #12]
   1db04:	str	r0, [sp, #16]
   1db08:	b	1db18 <rb_patricia_search_exact+0xc0>
   1db0c:	ldr	r0, [sp, #16]
   1db10:	ldr	r0, [r0, #8]
   1db14:	str	r0, [sp, #16]
   1db18:	ldr	r0, [sp, #16]
   1db1c:	movw	r1, #0
   1db20:	cmp	r0, r1
   1db24:	bne	1db34 <rb_patricia_search_exact+0xdc>
   1db28:	movw	r0, #0
   1db2c:	str	r0, [fp, #-4]
   1db30:	b	1dbbc <rb_patricia_search_exact+0x164>
   1db34:	b	1dab0 <rb_patricia_search_exact+0x58>
   1db38:	ldr	r0, [sp, #16]
   1db3c:	ldr	r0, [r0]
   1db40:	ldr	r1, [sp, #8]
   1db44:	cmp	r0, r1
   1db48:	bhi	1db60 <rb_patricia_search_exact+0x108>
   1db4c:	ldr	r0, [sp, #16]
   1db50:	ldr	r0, [r0, #4]
   1db54:	movw	r1, #0
   1db58:	cmp	r0, r1
   1db5c:	bne	1db6c <rb_patricia_search_exact+0x114>
   1db60:	movw	r0, #0
   1db64:	str	r0, [fp, #-4]
   1db68:	b	1dbbc <rb_patricia_search_exact+0x164>
   1db6c:	ldr	r0, [sp, #16]
   1db70:	ldr	r0, [r0, #4]
   1db74:	bl	1dc90 <prefix_tochar>
   1db78:	ldr	r1, [fp, #-12]
   1db7c:	str	r0, [sp, #4]
   1db80:	mov	r0, r1
   1db84:	bl	1dc90 <prefix_tochar>
   1db88:	ldr	r2, [sp, #8]
   1db8c:	ldr	r1, [sp, #4]
   1db90:	str	r0, [sp]
   1db94:	mov	r0, r1
   1db98:	ldr	r1, [sp]
   1db9c:	bl	1dbc8 <comp_with_mask>
   1dba0:	cmp	r0, #0
   1dba4:	beq	1dbb4 <rb_patricia_search_exact+0x15c>
   1dba8:	ldr	r0, [sp, #16]
   1dbac:	str	r0, [fp, #-4]
   1dbb0:	b	1dbbc <rb_patricia_search_exact+0x164>
   1dbb4:	movw	r0, #0
   1dbb8:	str	r0, [fp, #-4]
   1dbbc:	ldr	r0, [fp, #-4]
   1dbc0:	mov	sp, fp
   1dbc4:	pop	{fp, pc}

0001dbc8 <comp_with_mask>:
   1dbc8:	push	{fp, lr}
   1dbcc:	mov	fp, sp
   1dbd0:	sub	sp, sp, #24
   1dbd4:	str	r0, [fp, #-8]
   1dbd8:	str	r1, [sp, #12]
   1dbdc:	str	r2, [sp, #8]
   1dbe0:	ldr	r0, [fp, #-8]
   1dbe4:	ldr	r1, [sp, #12]
   1dbe8:	ldr	r2, [sp, #8]
   1dbec:	lsr	r2, r2, #3
   1dbf0:	bl	4e10 <memcmp@plt>
   1dbf4:	cmp	r0, #0
   1dbf8:	bne	1dc7c <comp_with_mask+0xb4>
   1dbfc:	ldr	r0, [sp, #8]
   1dc00:	lsr	r0, r0, #3
   1dc04:	str	r0, [sp, #4]
   1dc08:	ldr	r0, [sp, #8]
   1dc0c:	and	r0, r0, #7
   1dc10:	movw	r1, #8
   1dc14:	sub	r0, r1, r0
   1dc18:	movw	r1, #255	; 0xff
   1dc1c:	lsl	r0, r1, r0
   1dc20:	strb	r0, [sp, #3]
   1dc24:	ldr	r0, [sp, #8]
   1dc28:	and	r0, r0, #7
   1dc2c:	cmp	r0, #0
   1dc30:	beq	1dc6c <comp_with_mask+0xa4>
   1dc34:	ldr	r0, [fp, #-8]
   1dc38:	ldr	r1, [sp, #4]
   1dc3c:	add	r0, r0, r1
   1dc40:	ldrb	r0, [r0]
   1dc44:	ldrb	r1, [sp, #3]
   1dc48:	and	r0, r0, r1
   1dc4c:	ldr	r1, [sp, #12]
   1dc50:	ldr	r2, [sp, #4]
   1dc54:	add	r1, r1, r2
   1dc58:	ldrb	r1, [r1]
   1dc5c:	ldrb	r2, [sp, #3]
   1dc60:	and	r1, r1, r2
   1dc64:	cmp	r0, r1
   1dc68:	bne	1dc78 <comp_with_mask+0xb0>
   1dc6c:	movw	r0, #1
   1dc70:	str	r0, [fp, #-4]
   1dc74:	b	1dc84 <comp_with_mask+0xbc>
   1dc78:	b	1dc7c <comp_with_mask+0xb4>
   1dc7c:	movw	r0, #0
   1dc80:	str	r0, [fp, #-4]
   1dc84:	ldr	r0, [fp, #-4]
   1dc88:	mov	sp, fp
   1dc8c:	pop	{fp, pc}

0001dc90 <prefix_tochar>:
   1dc90:	sub	sp, sp, #8
   1dc94:	str	r0, [sp]
   1dc98:	ldr	r0, [sp]
   1dc9c:	movw	r1, #0
   1dca0:	cmp	r0, r1
   1dca4:	bne	1dcb4 <prefix_tochar+0x24>
   1dca8:	movw	r0, #0
   1dcac:	str	r0, [sp, #4]
   1dcb0:	b	1dcc0 <prefix_tochar+0x30>
   1dcb4:	ldr	r0, [sp]
   1dcb8:	add	r0, r0, #8
   1dcbc:	str	r0, [sp, #4]
   1dcc0:	ldr	r0, [sp, #4]
   1dcc4:	add	sp, sp, #8
   1dcc8:	bx	lr

0001dccc <rb_patricia_search_best2>:
   1dccc:	push	{r4, r5, fp, lr}
   1dcd0:	add	fp, sp, #8
   1dcd4:	sub	sp, sp, #560	; 0x230
   1dcd8:	str	r0, [fp, #-16]
   1dcdc:	str	r1, [fp, #-20]	; 0xffffffec
   1dce0:	str	r2, [fp, #-24]	; 0xffffffe8
   1dce4:	movw	r0, #0
   1dce8:	str	r0, [sp, #12]
   1dcec:	ldr	r1, [fp, #-16]
   1dcf0:	ldr	r1, [r1]
   1dcf4:	cmp	r1, r0
   1dcf8:	bne	1dd08 <rb_patricia_search_best2+0x3c>
   1dcfc:	movw	r0, #0
   1dd00:	str	r0, [fp, #-12]
   1dd04:	b	1decc <rb_patricia_search_best2+0x200>
   1dd08:	ldr	r0, [fp, #-16]
   1dd0c:	ldr	r0, [r0]
   1dd10:	str	r0, [fp, #-28]	; 0xffffffe4
   1dd14:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dd18:	add	r0, r0, #8
   1dd1c:	str	r0, [sp, #20]
   1dd20:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dd24:	ldrh	r0, [r0, #2]
   1dd28:	str	r0, [sp, #16]
   1dd2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dd30:	ldr	r0, [r0]
   1dd34:	ldr	r1, [sp, #16]
   1dd38:	cmp	r0, r1
   1dd3c:	bcs	1dddc <rb_patricia_search_best2+0x110>
   1dd40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dd44:	ldr	r0, [r0, #4]
   1dd48:	movw	r1, #0
   1dd4c:	cmp	r0, r1
   1dd50:	beq	1dd70 <rb_patricia_search_best2+0xa4>
   1dd54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dd58:	ldr	r1, [sp, #12]
   1dd5c:	add	r2, r1, #1
   1dd60:	str	r2, [sp, #12]
   1dd64:	add	r2, sp, #24
   1dd68:	add	r1, r2, r1, lsl #2
   1dd6c:	str	r0, [r1]
   1dd70:	ldr	r0, [sp, #20]
   1dd74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dd78:	ldr	r1, [r1]
   1dd7c:	lsr	r1, r1, #3
   1dd80:	add	r0, r0, r1
   1dd84:	ldrb	r0, [r0]
   1dd88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dd8c:	ldr	r1, [r1]
   1dd90:	and	r1, r1, #7
   1dd94:	movw	r2, #128	; 0x80
   1dd98:	asr	r1, r2, r1
   1dd9c:	and	r0, r0, r1
   1dda0:	cmp	r0, #0
   1dda4:	beq	1ddb8 <rb_patricia_search_best2+0xec>
   1dda8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ddac:	ldr	r0, [r0, #12]
   1ddb0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ddb4:	b	1ddc4 <rb_patricia_search_best2+0xf8>
   1ddb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ddbc:	ldr	r0, [r0, #8]
   1ddc0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ddc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ddc8:	movw	r1, #0
   1ddcc:	cmp	r0, r1
   1ddd0:	bne	1ddd8 <rb_patricia_search_best2+0x10c>
   1ddd4:	b	1dddc <rb_patricia_search_best2+0x110>
   1ddd8:	b	1dd2c <rb_patricia_search_best2+0x60>
   1dddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dde0:	cmp	r0, #0
   1dde4:	beq	1de28 <rb_patricia_search_best2+0x15c>
   1dde8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ddec:	movw	r1, #0
   1ddf0:	cmp	r0, r1
   1ddf4:	beq	1de28 <rb_patricia_search_best2+0x15c>
   1ddf8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ddfc:	ldr	r0, [r0, #4]
   1de00:	movw	r1, #0
   1de04:	cmp	r0, r1
   1de08:	beq	1de28 <rb_patricia_search_best2+0x15c>
   1de0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1de10:	ldr	r1, [sp, #12]
   1de14:	add	r2, r1, #1
   1de18:	str	r2, [sp, #12]
   1de1c:	add	r2, sp, #24
   1de20:	add	r1, r2, r1, lsl #2
   1de24:	str	r0, [r1]
   1de28:	ldr	r0, [sp, #12]
   1de2c:	cmp	r0, #0
   1de30:	bgt	1de40 <rb_patricia_search_best2+0x174>
   1de34:	movw	r0, #0
   1de38:	str	r0, [fp, #-12]
   1de3c:	b	1decc <rb_patricia_search_best2+0x200>
   1de40:	b	1de44 <rb_patricia_search_best2+0x178>
   1de44:	ldr	r0, [sp, #12]
   1de48:	mvn	r1, #0
   1de4c:	add	r0, r0, r1
   1de50:	str	r0, [sp, #12]
   1de54:	cmp	r0, #0
   1de58:	blt	1dec4 <rb_patricia_search_best2+0x1f8>
   1de5c:	ldr	r0, [sp, #12]
   1de60:	add	r1, sp, #24
   1de64:	add	r0, r1, r0, lsl #2
   1de68:	ldr	r0, [r0]
   1de6c:	str	r0, [fp, #-28]	; 0xffffffe4
   1de70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1de74:	ldr	r0, [r0, #4]
   1de78:	bl	1dc90 <prefix_tochar>
   1de7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1de80:	str	r0, [sp, #8]
   1de84:	mov	r0, r1
   1de88:	bl	1dc90 <prefix_tochar>
   1de8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1de90:	ldr	r1, [r1, #4]
   1de94:	ldrh	r2, [r1, #2]
   1de98:	ldr	r1, [sp, #8]
   1de9c:	str	r0, [sp, #4]
   1dea0:	mov	r0, r1
   1dea4:	ldr	r1, [sp, #4]
   1dea8:	bl	1dbc8 <comp_with_mask>
   1deac:	cmp	r0, #0
   1deb0:	beq	1dec0 <rb_patricia_search_best2+0x1f4>
   1deb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1deb8:	str	r0, [fp, #-12]
   1debc:	b	1decc <rb_patricia_search_best2+0x200>
   1dec0:	b	1de44 <rb_patricia_search_best2+0x178>
   1dec4:	movw	r0, #0
   1dec8:	str	r0, [fp, #-12]
   1decc:	ldr	r0, [fp, #-12]
   1ded0:	sub	sp, fp, #8
   1ded4:	pop	{r4, r5, fp, pc}

0001ded8 <rb_patricia_search_best>:
   1ded8:	push	{fp, lr}
   1dedc:	mov	fp, sp
   1dee0:	sub	sp, sp, #8
   1dee4:	str	r0, [sp, #4]
   1dee8:	str	r1, [sp]
   1deec:	ldr	r0, [sp, #4]
   1def0:	ldr	r1, [sp]
   1def4:	movw	r2, #1
   1def8:	bl	5080 <rb_patricia_search_best2@plt>
   1defc:	mov	sp, fp
   1df00:	pop	{fp, pc}

0001df04 <rb_patricia_lookup>:
   1df04:	push	{fp, lr}
   1df08:	mov	fp, sp
   1df0c:	sub	sp, sp, #72	; 0x48
   1df10:	str	r0, [fp, #-8]
   1df14:	str	r1, [fp, #-12]
   1df18:	ldr	r0, [fp, #-8]
   1df1c:	ldr	r0, [r0]
   1df20:	movw	r1, #0
   1df24:	cmp	r0, r1
   1df28:	bne	1dfa4 <rb_patricia_lookup+0xa0>
   1df2c:	movw	r0, #24
   1df30:	bl	1d644 <rb_malloc>
   1df34:	str	r0, [fp, #-16]
   1df38:	ldr	r0, [fp, #-12]
   1df3c:	ldrh	r0, [r0, #2]
   1df40:	ldr	r1, [fp, #-16]
   1df44:	str	r0, [r1]
   1df48:	ldr	r0, [fp, #-12]
   1df4c:	bl	1e5e0 <Ref_Prefix>
   1df50:	ldr	r1, [fp, #-16]
   1df54:	str	r0, [r1, #4]
   1df58:	ldr	r0, [fp, #-16]
   1df5c:	movw	r1, #0
   1df60:	str	r1, [r0, #16]
   1df64:	ldr	r0, [fp, #-16]
   1df68:	str	r1, [r0, #12]
   1df6c:	ldr	r0, [fp, #-16]
   1df70:	str	r1, [r0, #8]
   1df74:	ldr	r0, [fp, #-16]
   1df78:	str	r1, [r0, #20]
   1df7c:	ldr	r0, [fp, #-16]
   1df80:	ldr	r1, [fp, #-8]
   1df84:	str	r0, [r1]
   1df88:	ldr	r0, [fp, #-8]
   1df8c:	ldr	r1, [r0, #8]
   1df90:	add	r1, r1, #1
   1df94:	str	r1, [r0, #8]
   1df98:	ldr	r0, [fp, #-16]
   1df9c:	str	r0, [fp, #-4]
   1dfa0:	b	1e5d4 <rb_patricia_lookup+0x6d0>
   1dfa4:	ldr	r0, [fp, #-12]
   1dfa8:	add	r0, r0, #8
   1dfac:	str	r0, [fp, #-32]	; 0xffffffe0
   1dfb0:	ldr	r0, [fp, #-12]
   1dfb4:	ldrh	r0, [r0, #2]
   1dfb8:	str	r0, [sp, #32]
   1dfbc:	ldr	r0, [fp, #-8]
   1dfc0:	ldr	r0, [r0]
   1dfc4:	str	r0, [fp, #-16]
   1dfc8:	ldr	r0, [fp, #-16]
   1dfcc:	ldr	r0, [r0]
   1dfd0:	ldr	r1, [sp, #32]
   1dfd4:	cmp	r0, r1
   1dfd8:	movw	r0, #1
   1dfdc:	str	r0, [sp, #8]
   1dfe0:	bcc	1e000 <rb_patricia_lookup+0xfc>
   1dfe4:	ldr	r0, [fp, #-16]
   1dfe8:	ldr	r0, [r0, #4]
   1dfec:	movw	r1, #0
   1dff0:	cmp	r0, r1
   1dff4:	movw	r0, #0
   1dff8:	moveq	r0, #1
   1dffc:	str	r0, [sp, #8]
   1e000:	ldr	r0, [sp, #8]
   1e004:	tst	r0, #1
   1e008:	beq	1e0ac <rb_patricia_lookup+0x1a8>
   1e00c:	ldr	r0, [fp, #-16]
   1e010:	ldr	r0, [r0]
   1e014:	ldr	r1, [fp, #-8]
   1e018:	ldr	r1, [r1, #4]
   1e01c:	cmp	r0, r1
   1e020:	bcs	1e084 <rb_patricia_lookup+0x180>
   1e024:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e028:	ldr	r1, [fp, #-16]
   1e02c:	ldr	r1, [r1]
   1e030:	lsr	r1, r1, #3
   1e034:	add	r0, r0, r1
   1e038:	ldrb	r0, [r0]
   1e03c:	ldr	r1, [fp, #-16]
   1e040:	ldr	r1, [r1]
   1e044:	and	r1, r1, #7
   1e048:	movw	r2, #128	; 0x80
   1e04c:	asr	r1, r2, r1
   1e050:	and	r0, r0, r1
   1e054:	cmp	r0, #0
   1e058:	beq	1e084 <rb_patricia_lookup+0x180>
   1e05c:	ldr	r0, [fp, #-16]
   1e060:	ldr	r0, [r0, #12]
   1e064:	movw	r1, #0
   1e068:	cmp	r0, r1
   1e06c:	bne	1e074 <rb_patricia_lookup+0x170>
   1e070:	b	1e0ac <rb_patricia_lookup+0x1a8>
   1e074:	ldr	r0, [fp, #-16]
   1e078:	ldr	r0, [r0, #12]
   1e07c:	str	r0, [fp, #-16]
   1e080:	b	1e0a8 <rb_patricia_lookup+0x1a4>
   1e084:	ldr	r0, [fp, #-16]
   1e088:	ldr	r0, [r0, #8]
   1e08c:	movw	r1, #0
   1e090:	cmp	r0, r1
   1e094:	bne	1e09c <rb_patricia_lookup+0x198>
   1e098:	b	1e0ac <rb_patricia_lookup+0x1a8>
   1e09c:	ldr	r0, [fp, #-16]
   1e0a0:	ldr	r0, [r0, #8]
   1e0a4:	str	r0, [fp, #-16]
   1e0a8:	b	1dfc8 <rb_patricia_lookup+0xc4>
   1e0ac:	ldr	r0, [fp, #-16]
   1e0b0:	ldr	r0, [r0, #4]
   1e0b4:	add	r0, r0, #8
   1e0b8:	str	r0, [sp, #36]	; 0x24
   1e0bc:	ldr	r0, [fp, #-16]
   1e0c0:	ldr	r0, [r0]
   1e0c4:	ldr	r1, [sp, #32]
   1e0c8:	cmp	r0, r1
   1e0cc:	bcs	1e0e0 <rb_patricia_lookup+0x1dc>
   1e0d0:	ldr	r0, [fp, #-16]
   1e0d4:	ldr	r0, [r0]
   1e0d8:	str	r0, [sp, #4]
   1e0dc:	b	1e0e8 <rb_patricia_lookup+0x1e4>
   1e0e0:	ldr	r0, [sp, #32]
   1e0e4:	str	r0, [sp, #4]
   1e0e8:	ldr	r0, [sp, #4]
   1e0ec:	str	r0, [sp, #28]
   1e0f0:	movw	r0, #0
   1e0f4:	str	r0, [sp, #24]
   1e0f8:	str	r0, [sp, #20]
   1e0fc:	ldr	r0, [sp, #20]
   1e100:	lsl	r0, r0, #3
   1e104:	ldr	r1, [sp, #28]
   1e108:	cmp	r0, r1
   1e10c:	bcs	1e1c4 <rb_patricia_lookup+0x2c0>
   1e110:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e114:	ldr	r1, [sp, #20]
   1e118:	add	r0, r0, r1
   1e11c:	ldrb	r0, [r0]
   1e120:	ldr	r1, [sp, #36]	; 0x24
   1e124:	ldr	r2, [sp, #20]
   1e128:	add	r1, r1, r2
   1e12c:	ldrb	r1, [r1]
   1e130:	eor	r0, r0, r1
   1e134:	str	r0, [sp, #12]
   1e138:	cmp	r0, #0
   1e13c:	bne	1e154 <rb_patricia_lookup+0x250>
   1e140:	ldr	r0, [sp, #20]
   1e144:	add	r0, r0, #1
   1e148:	lsl	r0, r0, #3
   1e14c:	str	r0, [sp, #24]
   1e150:	b	1e1b4 <rb_patricia_lookup+0x2b0>
   1e154:	movw	r0, #0
   1e158:	str	r0, [sp, #16]
   1e15c:	ldr	r0, [sp, #16]
   1e160:	cmp	r0, #8
   1e164:	bcs	1e19c <rb_patricia_lookup+0x298>
   1e168:	ldr	r0, [sp, #12]
   1e16c:	ldr	r1, [sp, #16]
   1e170:	movw	r2, #128	; 0x80
   1e174:	asr	r1, r2, r1
   1e178:	and	r0, r0, r1
   1e17c:	cmp	r0, #0
   1e180:	beq	1e188 <rb_patricia_lookup+0x284>
   1e184:	b	1e19c <rb_patricia_lookup+0x298>
   1e188:	b	1e18c <rb_patricia_lookup+0x288>
   1e18c:	ldr	r0, [sp, #16]
   1e190:	add	r0, r0, #1
   1e194:	str	r0, [sp, #16]
   1e198:	b	1e15c <rb_patricia_lookup+0x258>
   1e19c:	ldr	r0, [sp, #20]
   1e1a0:	lsl	r0, r0, #3
   1e1a4:	ldr	r1, [sp, #16]
   1e1a8:	add	r0, r0, r1
   1e1ac:	str	r0, [sp, #24]
   1e1b0:	b	1e1c4 <rb_patricia_lookup+0x2c0>
   1e1b4:	ldr	r0, [sp, #20]
   1e1b8:	add	r0, r0, #1
   1e1bc:	str	r0, [sp, #20]
   1e1c0:	b	1e0fc <rb_patricia_lookup+0x1f8>
   1e1c4:	ldr	r0, [sp, #24]
   1e1c8:	ldr	r1, [sp, #28]
   1e1cc:	cmp	r0, r1
   1e1d0:	bls	1e1dc <rb_patricia_lookup+0x2d8>
   1e1d4:	ldr	r0, [sp, #28]
   1e1d8:	str	r0, [sp, #24]
   1e1dc:	ldr	r0, [fp, #-16]
   1e1e0:	ldr	r0, [r0, #16]
   1e1e4:	str	r0, [fp, #-24]	; 0xffffffe8
   1e1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1ec:	movw	r1, #0
   1e1f0:	cmp	r0, r1
   1e1f4:	movw	r0, #0
   1e1f8:	str	r0, [sp]
   1e1fc:	beq	1e21c <rb_patricia_lookup+0x318>
   1e200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e204:	ldr	r0, [r0]
   1e208:	ldr	r1, [sp, #24]
   1e20c:	cmp	r0, r1
   1e210:	movw	r0, #0
   1e214:	movcs	r0, #1
   1e218:	str	r0, [sp]
   1e21c:	ldr	r0, [sp]
   1e220:	tst	r0, #1
   1e224:	beq	1e240 <rb_patricia_lookup+0x33c>
   1e228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e22c:	str	r0, [fp, #-16]
   1e230:	ldr	r0, [fp, #-16]
   1e234:	ldr	r0, [r0, #16]
   1e238:	str	r0, [fp, #-24]	; 0xffffffe8
   1e23c:	b	1e1e8 <rb_patricia_lookup+0x2e4>
   1e240:	ldr	r0, [sp, #24]
   1e244:	ldr	r1, [sp, #32]
   1e248:	cmp	r0, r1
   1e24c:	bne	1e2a0 <rb_patricia_lookup+0x39c>
   1e250:	ldr	r0, [fp, #-16]
   1e254:	ldr	r0, [r0]
   1e258:	ldr	r1, [sp, #32]
   1e25c:	cmp	r0, r1
   1e260:	bne	1e2a0 <rb_patricia_lookup+0x39c>
   1e264:	ldr	r0, [fp, #-16]
   1e268:	ldr	r0, [r0, #4]
   1e26c:	movw	r1, #0
   1e270:	cmp	r0, r1
   1e274:	beq	1e284 <rb_patricia_lookup+0x380>
   1e278:	ldr	r0, [fp, #-16]
   1e27c:	str	r0, [fp, #-4]
   1e280:	b	1e5d4 <rb_patricia_lookup+0x6d0>
   1e284:	ldr	r0, [fp, #-12]
   1e288:	bl	1e5e0 <Ref_Prefix>
   1e28c:	ldr	r1, [fp, #-16]
   1e290:	str	r0, [r1, #4]
   1e294:	ldr	r0, [fp, #-16]
   1e298:	str	r0, [fp, #-4]
   1e29c:	b	1e5d4 <rb_patricia_lookup+0x6d0>
   1e2a0:	movw	r0, #24
   1e2a4:	bl	1d644 <rb_malloc>
   1e2a8:	str	r0, [fp, #-20]	; 0xffffffec
   1e2ac:	ldr	r0, [fp, #-12]
   1e2b0:	ldrh	r0, [r0, #2]
   1e2b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e2b8:	str	r0, [r1]
   1e2bc:	ldr	r0, [fp, #-12]
   1e2c0:	bl	1e5e0 <Ref_Prefix>
   1e2c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e2c8:	str	r0, [r1, #4]
   1e2cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e2d0:	movw	r1, #0
   1e2d4:	str	r1, [r0, #16]
   1e2d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e2dc:	str	r1, [r0, #12]
   1e2e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e2e4:	str	r1, [r0, #8]
   1e2e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e2ec:	str	r1, [r0, #20]
   1e2f0:	ldr	r0, [fp, #-8]
   1e2f4:	ldr	r1, [r0, #8]
   1e2f8:	add	r1, r1, #1
   1e2fc:	str	r1, [r0, #8]
   1e300:	ldr	r0, [fp, #-16]
   1e304:	ldr	r0, [r0]
   1e308:	ldr	r1, [sp, #24]
   1e30c:	cmp	r0, r1
   1e310:	bne	1e398 <rb_patricia_lookup+0x494>
   1e314:	ldr	r0, [fp, #-16]
   1e318:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e31c:	str	r0, [r1, #16]
   1e320:	ldr	r0, [fp, #-16]
   1e324:	ldr	r0, [r0]
   1e328:	ldr	r1, [fp, #-8]
   1e32c:	ldr	r1, [r1, #4]
   1e330:	cmp	r0, r1
   1e334:	bcs	1e380 <rb_patricia_lookup+0x47c>
   1e338:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e33c:	ldr	r1, [fp, #-16]
   1e340:	ldr	r1, [r1]
   1e344:	lsr	r1, r1, #3
   1e348:	add	r0, r0, r1
   1e34c:	ldrb	r0, [r0]
   1e350:	ldr	r1, [fp, #-16]
   1e354:	ldr	r1, [r1]
   1e358:	and	r1, r1, #7
   1e35c:	movw	r2, #128	; 0x80
   1e360:	asr	r1, r2, r1
   1e364:	and	r0, r0, r1
   1e368:	cmp	r0, #0
   1e36c:	beq	1e380 <rb_patricia_lookup+0x47c>
   1e370:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e374:	ldr	r1, [fp, #-16]
   1e378:	str	r0, [r1, #12]
   1e37c:	b	1e38c <rb_patricia_lookup+0x488>
   1e380:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e384:	ldr	r1, [fp, #-16]
   1e388:	str	r0, [r1, #8]
   1e38c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e390:	str	r0, [fp, #-4]
   1e394:	b	1e5d4 <rb_patricia_lookup+0x6d0>
   1e398:	ldr	r0, [sp, #32]
   1e39c:	ldr	r1, [sp, #24]
   1e3a0:	cmp	r0, r1
   1e3a4:	bne	1e48c <rb_patricia_lookup+0x588>
   1e3a8:	ldr	r0, [sp, #32]
   1e3ac:	ldr	r1, [fp, #-8]
   1e3b0:	ldr	r1, [r1, #4]
   1e3b4:	cmp	r0, r1
   1e3b8:	bcs	1e3fc <rb_patricia_lookup+0x4f8>
   1e3bc:	ldr	r0, [sp, #36]	; 0x24
   1e3c0:	ldr	r1, [sp, #32]
   1e3c4:	lsr	r1, r1, #3
   1e3c8:	add	r0, r0, r1
   1e3cc:	ldrb	r0, [r0]
   1e3d0:	ldr	r1, [sp, #32]
   1e3d4:	and	r1, r1, #7
   1e3d8:	movw	r2, #128	; 0x80
   1e3dc:	asr	r1, r2, r1
   1e3e0:	and	r0, r0, r1
   1e3e4:	cmp	r0, #0
   1e3e8:	beq	1e3fc <rb_patricia_lookup+0x4f8>
   1e3ec:	ldr	r0, [fp, #-16]
   1e3f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e3f4:	str	r0, [r1, #12]
   1e3f8:	b	1e408 <rb_patricia_lookup+0x504>
   1e3fc:	ldr	r0, [fp, #-16]
   1e400:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e404:	str	r0, [r1, #8]
   1e408:	ldr	r0, [fp, #-16]
   1e40c:	ldr	r0, [r0, #16]
   1e410:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e414:	str	r0, [r1, #16]
   1e418:	ldr	r0, [fp, #-16]
   1e41c:	ldr	r0, [r0, #16]
   1e420:	movw	r1, #0
   1e424:	cmp	r0, r1
   1e428:	bne	1e43c <rb_patricia_lookup+0x538>
   1e42c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e430:	ldr	r1, [fp, #-8]
   1e434:	str	r0, [r1]
   1e438:	b	1e47c <rb_patricia_lookup+0x578>
   1e43c:	ldr	r0, [fp, #-16]
   1e440:	ldr	r0, [r0, #16]
   1e444:	ldr	r0, [r0, #12]
   1e448:	ldr	r1, [fp, #-16]
   1e44c:	cmp	r0, r1
   1e450:	bne	1e468 <rb_patricia_lookup+0x564>
   1e454:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e458:	ldr	r1, [fp, #-16]
   1e45c:	ldr	r1, [r1, #16]
   1e460:	str	r0, [r1, #12]
   1e464:	b	1e478 <rb_patricia_lookup+0x574>
   1e468:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e46c:	ldr	r1, [fp, #-16]
   1e470:	ldr	r1, [r1, #16]
   1e474:	str	r0, [r1, #8]
   1e478:	b	1e47c <rb_patricia_lookup+0x578>
   1e47c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e480:	ldr	r1, [fp, #-16]
   1e484:	str	r0, [r1, #16]
   1e488:	b	1e5cc <rb_patricia_lookup+0x6c8>
   1e48c:	movw	r0, #24
   1e490:	bl	1d644 <rb_malloc>
   1e494:	str	r0, [fp, #-28]	; 0xffffffe4
   1e498:	ldr	r0, [sp, #24]
   1e49c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e4a0:	str	r0, [r1]
   1e4a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e4a8:	movw	r1, #0
   1e4ac:	str	r1, [r0, #4]
   1e4b0:	ldr	r0, [fp, #-16]
   1e4b4:	ldr	r0, [r0, #16]
   1e4b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e4bc:	str	r0, [r2, #16]
   1e4c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e4c4:	str	r1, [r0, #20]
   1e4c8:	ldr	r0, [fp, #-8]
   1e4cc:	ldr	r1, [r0, #8]
   1e4d0:	add	r1, r1, #1
   1e4d4:	str	r1, [r0, #8]
   1e4d8:	ldr	r0, [sp, #24]
   1e4dc:	ldr	r1, [fp, #-8]
   1e4e0:	ldr	r1, [r1, #4]
   1e4e4:	cmp	r0, r1
   1e4e8:	bcs	1e538 <rb_patricia_lookup+0x634>
   1e4ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e4f0:	ldr	r1, [sp, #24]
   1e4f4:	lsr	r1, r1, #3
   1e4f8:	add	r0, r0, r1
   1e4fc:	ldrb	r0, [r0]
   1e500:	ldr	r1, [sp, #24]
   1e504:	and	r1, r1, #7
   1e508:	movw	r2, #128	; 0x80
   1e50c:	asr	r1, r2, r1
   1e510:	and	r0, r0, r1
   1e514:	cmp	r0, #0
   1e518:	beq	1e538 <rb_patricia_lookup+0x634>
   1e51c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e520:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e524:	str	r0, [r1, #12]
   1e528:	ldr	r0, [fp, #-16]
   1e52c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e530:	str	r0, [r1, #8]
   1e534:	b	1e550 <rb_patricia_lookup+0x64c>
   1e538:	ldr	r0, [fp, #-16]
   1e53c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e540:	str	r0, [r1, #12]
   1e544:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e548:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e54c:	str	r0, [r1, #8]
   1e550:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e554:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e558:	str	r0, [r1, #16]
   1e55c:	ldr	r0, [fp, #-16]
   1e560:	ldr	r0, [r0, #16]
   1e564:	movw	r1, #0
   1e568:	cmp	r0, r1
   1e56c:	bne	1e580 <rb_patricia_lookup+0x67c>
   1e570:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e574:	ldr	r1, [fp, #-8]
   1e578:	str	r0, [r1]
   1e57c:	b	1e5c0 <rb_patricia_lookup+0x6bc>
   1e580:	ldr	r0, [fp, #-16]
   1e584:	ldr	r0, [r0, #16]
   1e588:	ldr	r0, [r0, #12]
   1e58c:	ldr	r1, [fp, #-16]
   1e590:	cmp	r0, r1
   1e594:	bne	1e5ac <rb_patricia_lookup+0x6a8>
   1e598:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e59c:	ldr	r1, [fp, #-16]
   1e5a0:	ldr	r1, [r1, #16]
   1e5a4:	str	r0, [r1, #12]
   1e5a8:	b	1e5bc <rb_patricia_lookup+0x6b8>
   1e5ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e5b0:	ldr	r1, [fp, #-16]
   1e5b4:	ldr	r1, [r1, #16]
   1e5b8:	str	r0, [r1, #8]
   1e5bc:	b	1e5c0 <rb_patricia_lookup+0x6bc>
   1e5c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e5c4:	ldr	r1, [fp, #-16]
   1e5c8:	str	r0, [r1, #16]
   1e5cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e5d0:	str	r0, [fp, #-4]
   1e5d4:	ldr	r0, [fp, #-4]
   1e5d8:	mov	sp, fp
   1e5dc:	pop	{fp, pc}

0001e5e0 <Ref_Prefix>:
   1e5e0:	push	{fp, lr}
   1e5e4:	mov	fp, sp
   1e5e8:	sub	sp, sp, #8
   1e5ec:	str	r0, [sp]
   1e5f0:	ldr	r0, [sp]
   1e5f4:	movw	r1, #0
   1e5f8:	cmp	r0, r1
   1e5fc:	bne	1e60c <Ref_Prefix+0x2c>
   1e600:	movw	r0, #0
   1e604:	str	r0, [sp, #4]
   1e608:	b	1e65c <Ref_Prefix+0x7c>
   1e60c:	ldr	r0, [sp]
   1e610:	ldr	r0, [r0, #4]
   1e614:	cmp	r0, #0
   1e618:	bne	1e644 <Ref_Prefix+0x64>
   1e61c:	ldr	r0, [sp]
   1e620:	ldrh	r0, [r0]
   1e624:	ldr	r1, [sp]
   1e628:	add	r1, r1, #8
   1e62c:	ldr	r2, [sp]
   1e630:	ldrh	r2, [r2, #2]
   1e634:	movw	r3, #0
   1e638:	bl	1ef94 <New_Prefix2>
   1e63c:	str	r0, [sp, #4]
   1e640:	b	1e65c <Ref_Prefix+0x7c>
   1e644:	ldr	r0, [sp]
   1e648:	ldr	r1, [r0, #4]
   1e64c:	add	r1, r1, #1
   1e650:	str	r1, [r0, #4]
   1e654:	ldr	r0, [sp]
   1e658:	str	r0, [sp, #4]
   1e65c:	ldr	r0, [sp, #4]
   1e660:	mov	sp, fp
   1e664:	pop	{fp, pc}

0001e668 <rb_patricia_remove>:
   1e668:	push	{fp, lr}
   1e66c:	mov	fp, sp
   1e670:	sub	sp, sp, #16
   1e674:	str	r0, [fp, #-4]
   1e678:	str	r1, [sp, #8]
   1e67c:	ldr	r0, [sp, #8]
   1e680:	ldr	r0, [r0, #12]
   1e684:	movw	r1, #0
   1e688:	cmp	r0, r1
   1e68c:	beq	1e6dc <rb_patricia_remove+0x74>
   1e690:	ldr	r0, [sp, #8]
   1e694:	ldr	r0, [r0, #8]
   1e698:	movw	r1, #0
   1e69c:	cmp	r0, r1
   1e6a0:	beq	1e6dc <rb_patricia_remove+0x74>
   1e6a4:	ldr	r0, [sp, #8]
   1e6a8:	ldr	r0, [r0, #4]
   1e6ac:	movw	r1, #0
   1e6b0:	cmp	r0, r1
   1e6b4:	beq	1e6c4 <rb_patricia_remove+0x5c>
   1e6b8:	ldr	r0, [sp, #8]
   1e6bc:	ldr	r0, [r0, #4]
   1e6c0:	bl	1d838 <Deref_Prefix>
   1e6c4:	ldr	r0, [sp, #8]
   1e6c8:	movw	r1, #0
   1e6cc:	str	r1, [r0, #4]
   1e6d0:	ldr	r0, [sp, #8]
   1e6d4:	str	r1, [r0, #20]
   1e6d8:	b	1e90c <rb_patricia_remove+0x2a4>
   1e6dc:	ldr	r0, [sp, #8]
   1e6e0:	ldr	r0, [r0, #12]
   1e6e4:	movw	r1, #0
   1e6e8:	cmp	r0, r1
   1e6ec:	bne	1e84c <rb_patricia_remove+0x1e4>
   1e6f0:	ldr	r0, [sp, #8]
   1e6f4:	ldr	r0, [r0, #8]
   1e6f8:	movw	r1, #0
   1e6fc:	cmp	r0, r1
   1e700:	bne	1e84c <rb_patricia_remove+0x1e4>
   1e704:	ldr	r0, [sp, #8]
   1e708:	ldr	r0, [r0, #16]
   1e70c:	str	r0, [sp, #4]
   1e710:	ldr	r0, [sp, #8]
   1e714:	ldr	r0, [r0, #4]
   1e718:	bl	1d838 <Deref_Prefix>
   1e71c:	ldr	r0, [sp, #8]
   1e720:	bl	1d890 <rb_free>
   1e724:	ldr	r0, [fp, #-4]
   1e728:	ldr	r1, [r0, #8]
   1e72c:	mvn	r2, #0
   1e730:	add	r1, r1, r2
   1e734:	str	r1, [r0, #8]
   1e738:	ldr	r0, [sp, #4]
   1e73c:	movw	r1, #0
   1e740:	cmp	r0, r1
   1e744:	bne	1e758 <rb_patricia_remove+0xf0>
   1e748:	ldr	r0, [fp, #-4]
   1e74c:	movw	r1, #0
   1e750:	str	r1, [r0]
   1e754:	b	1e90c <rb_patricia_remove+0x2a4>
   1e758:	ldr	r0, [sp, #4]
   1e75c:	ldr	r0, [r0, #12]
   1e760:	ldr	r1, [sp, #8]
   1e764:	cmp	r0, r1
   1e768:	bne	1e788 <rb_patricia_remove+0x120>
   1e76c:	ldr	r0, [sp, #4]
   1e770:	movw	r1, #0
   1e774:	str	r1, [r0, #12]
   1e778:	ldr	r0, [sp, #4]
   1e77c:	ldr	r0, [r0, #8]
   1e780:	str	r0, [sp]
   1e784:	b	1e7a0 <rb_patricia_remove+0x138>
   1e788:	ldr	r0, [sp, #4]
   1e78c:	movw	r1, #0
   1e790:	str	r1, [r0, #8]
   1e794:	ldr	r0, [sp, #4]
   1e798:	ldr	r0, [r0, #12]
   1e79c:	str	r0, [sp]
   1e7a0:	ldr	r0, [sp, #4]
   1e7a4:	ldr	r0, [r0, #4]
   1e7a8:	movw	r1, #0
   1e7ac:	cmp	r0, r1
   1e7b0:	beq	1e7b8 <rb_patricia_remove+0x150>
   1e7b4:	b	1e90c <rb_patricia_remove+0x2a4>
   1e7b8:	ldr	r0, [sp, #4]
   1e7bc:	ldr	r0, [r0, #16]
   1e7c0:	movw	r1, #0
   1e7c4:	cmp	r0, r1
   1e7c8:	bne	1e7dc <rb_patricia_remove+0x174>
   1e7cc:	ldr	r0, [sp]
   1e7d0:	ldr	r1, [fp, #-4]
   1e7d4:	str	r0, [r1]
   1e7d8:	b	1e81c <rb_patricia_remove+0x1b4>
   1e7dc:	ldr	r0, [sp, #4]
   1e7e0:	ldr	r0, [r0, #16]
   1e7e4:	ldr	r0, [r0, #12]
   1e7e8:	ldr	r1, [sp, #4]
   1e7ec:	cmp	r0, r1
   1e7f0:	bne	1e808 <rb_patricia_remove+0x1a0>
   1e7f4:	ldr	r0, [sp]
   1e7f8:	ldr	r1, [sp, #4]
   1e7fc:	ldr	r1, [r1, #16]
   1e800:	str	r0, [r1, #12]
   1e804:	b	1e818 <rb_patricia_remove+0x1b0>
   1e808:	ldr	r0, [sp]
   1e80c:	ldr	r1, [sp, #4]
   1e810:	ldr	r1, [r1, #16]
   1e814:	str	r0, [r1, #8]
   1e818:	b	1e81c <rb_patricia_remove+0x1b4>
   1e81c:	ldr	r0, [sp, #4]
   1e820:	ldr	r0, [r0, #16]
   1e824:	ldr	r1, [sp]
   1e828:	str	r0, [r1, #16]
   1e82c:	ldr	r0, [sp, #4]
   1e830:	bl	1d890 <rb_free>
   1e834:	ldr	r0, [fp, #-4]
   1e838:	ldr	r1, [r0, #8]
   1e83c:	mvn	r2, #0
   1e840:	add	r1, r1, r2
   1e844:	str	r1, [r0, #8]
   1e848:	b	1e90c <rb_patricia_remove+0x2a4>
   1e84c:	ldr	r0, [sp, #8]
   1e850:	ldr	r0, [r0, #12]
   1e854:	movw	r1, #0
   1e858:	cmp	r0, r1
   1e85c:	beq	1e870 <rb_patricia_remove+0x208>
   1e860:	ldr	r0, [sp, #8]
   1e864:	ldr	r0, [r0, #12]
   1e868:	str	r0, [sp]
   1e86c:	b	1e87c <rb_patricia_remove+0x214>
   1e870:	ldr	r0, [sp, #8]
   1e874:	ldr	r0, [r0, #8]
   1e878:	str	r0, [sp]
   1e87c:	ldr	r0, [sp, #8]
   1e880:	ldr	r0, [r0, #16]
   1e884:	str	r0, [sp, #4]
   1e888:	ldr	r0, [sp, #4]
   1e88c:	ldr	r1, [sp]
   1e890:	str	r0, [r1, #16]
   1e894:	ldr	r0, [sp, #8]
   1e898:	ldr	r0, [r0, #4]
   1e89c:	bl	1d838 <Deref_Prefix>
   1e8a0:	ldr	r0, [sp, #8]
   1e8a4:	bl	1d890 <rb_free>
   1e8a8:	ldr	r0, [fp, #-4]
   1e8ac:	ldr	r1, [r0, #8]
   1e8b0:	mvn	r2, #0
   1e8b4:	add	r1, r1, r2
   1e8b8:	str	r1, [r0, #8]
   1e8bc:	ldr	r0, [sp, #4]
   1e8c0:	movw	r1, #0
   1e8c4:	cmp	r0, r1
   1e8c8:	bne	1e8dc <rb_patricia_remove+0x274>
   1e8cc:	ldr	r0, [sp]
   1e8d0:	ldr	r1, [fp, #-4]
   1e8d4:	str	r0, [r1]
   1e8d8:	b	1e90c <rb_patricia_remove+0x2a4>
   1e8dc:	ldr	r0, [sp, #4]
   1e8e0:	ldr	r0, [r0, #12]
   1e8e4:	ldr	r1, [sp, #8]
   1e8e8:	cmp	r0, r1
   1e8ec:	bne	1e900 <rb_patricia_remove+0x298>
   1e8f0:	ldr	r0, [sp]
   1e8f4:	ldr	r1, [sp, #4]
   1e8f8:	str	r0, [r1, #12]
   1e8fc:	b	1e90c <rb_patricia_remove+0x2a4>
   1e900:	ldr	r0, [sp]
   1e904:	ldr	r1, [sp, #4]
   1e908:	str	r0, [r1, #8]
   1e90c:	mov	sp, fp
   1e910:	pop	{fp, pc}

0001e914 <make_and_lookup_ip>:
   1e914:	push	{fp, lr}
   1e918:	mov	fp, sp
   1e91c:	sub	sp, sp, #32
   1e920:	str	r0, [fp, #-8]
   1e924:	str	r1, [fp, #-12]
   1e928:	str	r2, [sp, #16]
   1e92c:	movw	r0, #0
   1e930:	str	r0, [sp, #4]
   1e934:	ldr	r0, [fp, #-12]
   1e938:	ldrh	r0, [r0]
   1e93c:	cmp	r0, #10
   1e940:	bne	1e954 <make_and_lookup_ip+0x40>
   1e944:	ldr	r0, [fp, #-12]
   1e948:	add	r0, r0, #8
   1e94c:	str	r0, [sp, #4]
   1e950:	b	1e960 <make_and_lookup_ip+0x4c>
   1e954:	ldr	r0, [fp, #-12]
   1e958:	add	r0, r0, #4
   1e95c:	str	r0, [sp, #4]
   1e960:	ldr	r0, [fp, #-12]
   1e964:	ldrh	r0, [r0]
   1e968:	ldr	r1, [sp, #4]
   1e96c:	ldr	r2, [sp, #16]
   1e970:	bl	1e9c0 <New_Prefix>
   1e974:	str	r0, [sp, #12]
   1e978:	ldr	r0, [sp, #12]
   1e97c:	movw	r1, #0
   1e980:	cmp	r0, r1
   1e984:	bne	1e994 <make_and_lookup_ip+0x80>
   1e988:	movw	r0, #0
   1e98c:	str	r0, [fp, #-4]
   1e990:	b	1e9b4 <make_and_lookup_ip+0xa0>
   1e994:	ldr	r0, [fp, #-8]
   1e998:	ldr	r1, [sp, #12]
   1e99c:	bl	52c0 <rb_patricia_lookup@plt>
   1e9a0:	str	r0, [sp, #8]
   1e9a4:	ldr	r0, [sp, #12]
   1e9a8:	bl	1d838 <Deref_Prefix>
   1e9ac:	ldr	r0, [sp, #8]
   1e9b0:	str	r0, [fp, #-4]
   1e9b4:	ldr	r0, [fp, #-4]
   1e9b8:	mov	sp, fp
   1e9bc:	pop	{fp, pc}

0001e9c0 <New_Prefix>:
   1e9c0:	push	{fp, lr}
   1e9c4:	mov	fp, sp
   1e9c8:	sub	sp, sp, #16
   1e9cc:	str	r0, [fp, #-4]
   1e9d0:	str	r1, [sp, #8]
   1e9d4:	str	r2, [sp, #4]
   1e9d8:	ldr	r0, [fp, #-4]
   1e9dc:	ldr	r1, [sp, #8]
   1e9e0:	ldr	r2, [sp, #4]
   1e9e4:	movw	r3, #0
   1e9e8:	bl	1ef94 <New_Prefix2>
   1e9ec:	mov	sp, fp
   1e9f0:	pop	{fp, pc}

0001e9f4 <make_and_lookup>:
   1e9f4:	push	{fp, lr}
   1e9f8:	mov	fp, sp
   1e9fc:	sub	sp, sp, #24
   1ea00:	str	r0, [fp, #-8]
   1ea04:	str	r1, [sp, #12]
   1ea08:	ldr	r1, [sp, #12]
   1ea0c:	movw	r0, #2
   1ea10:	bl	1ea94 <ascii2prefix>
   1ea14:	str	r0, [sp, #8]
   1ea18:	movw	r1, #0
   1ea1c:	cmp	r0, r1
   1ea20:	beq	1ea38 <make_and_lookup+0x44>
   1ea24:	ldr	r0, [fp, #-8]
   1ea28:	ldr	r1, [sp, #8]
   1ea2c:	bl	52c0 <rb_patricia_lookup@plt>
   1ea30:	str	r0, [sp, #4]
   1ea34:	b	1ea78 <make_and_lookup+0x84>
   1ea38:	ldr	r1, [sp, #12]
   1ea3c:	movw	r0, #10
   1ea40:	bl	1ea94 <ascii2prefix>
   1ea44:	str	r0, [sp, #8]
   1ea48:	movw	r1, #0
   1ea4c:	cmp	r0, r1
   1ea50:	beq	1ea68 <make_and_lookup+0x74>
   1ea54:	ldr	r0, [fp, #-8]
   1ea58:	ldr	r1, [sp, #8]
   1ea5c:	bl	52c0 <rb_patricia_lookup@plt>
   1ea60:	str	r0, [sp, #4]
   1ea64:	b	1ea74 <make_and_lookup+0x80>
   1ea68:	movw	r0, #0
   1ea6c:	str	r0, [fp, #-4]
   1ea70:	b	1ea88 <make_and_lookup+0x94>
   1ea74:	b	1ea78 <make_and_lookup+0x84>
   1ea78:	ldr	r0, [sp, #8]
   1ea7c:	bl	1d838 <Deref_Prefix>
   1ea80:	ldr	r0, [sp, #4]
   1ea84:	str	r0, [fp, #-4]
   1ea88:	ldr	r0, [fp, #-4]
   1ea8c:	mov	sp, fp
   1ea90:	pop	{fp, pc}

0001ea94 <ascii2prefix>:
   1ea94:	push	{r4, r5, fp, lr}
   1ea98:	add	fp, sp, #8
   1ea9c:	sub	sp, sp, #72	; 0x48
   1eaa0:	sub	sp, sp, #1024	; 0x400
   1eaa4:	str	r0, [fp, #-16]
   1eaa8:	str	r1, [fp, #-20]	; 0xffffffec
   1eaac:	movw	r0, #0
   1eab0:	str	r0, [fp, #-28]	; 0xffffffe4
   1eab4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1eab8:	cmp	r1, r0
   1eabc:	bne	1eacc <ascii2prefix+0x38>
   1eac0:	movw	r0, #0
   1eac4:	str	r0, [fp, #-12]
   1eac8:	b	1ecac <ascii2prefix+0x218>
   1eacc:	ldr	r0, [fp, #-16]
   1ead0:	cmp	r0, #0
   1ead4:	bne	1eb04 <ascii2prefix+0x70>
   1ead8:	movw	r0, #2
   1eadc:	str	r0, [fp, #-16]
   1eae0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eae4:	movw	r1, #58	; 0x3a
   1eae8:	bl	4f78 <strchr@plt>
   1eaec:	movw	r1, #0
   1eaf0:	cmp	r0, r1
   1eaf4:	beq	1eb00 <ascii2prefix+0x6c>
   1eaf8:	movw	r0, #10
   1eafc:	str	r0, [fp, #-16]
   1eb00:	b	1eb04 <ascii2prefix+0x70>
   1eb04:	ldr	r0, [fp, #-16]
   1eb08:	cmp	r0, #2
   1eb0c:	bne	1eb1c <ascii2prefix+0x88>
   1eb10:	movw	r0, #32
   1eb14:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb18:	b	1eb34 <ascii2prefix+0xa0>
   1eb1c:	ldr	r0, [fp, #-16]
   1eb20:	cmp	r0, #10
   1eb24:	bne	1eb30 <ascii2prefix+0x9c>
   1eb28:	movw	r0, #128	; 0x80
   1eb2c:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb30:	b	1eb34 <ascii2prefix+0xa0>
   1eb34:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eb38:	movw	r1, #47	; 0x2f
   1eb3c:	bl	4f78 <strchr@plt>
   1eb40:	str	r0, [fp, #-32]	; 0xffffffe0
   1eb44:	movw	r1, #0
   1eb48:	cmp	r0, r1
   1eb4c:	beq	1ebd4 <ascii2prefix+0x140>
   1eb50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eb54:	add	r0, r0, #1
   1eb58:	bl	5290 <atol@plt>
   1eb5c:	add	r1, sp, #24
   1eb60:	str	r0, [fp, #-24]	; 0xffffffe8
   1eb64:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eb68:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1eb6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eb70:	sub	r2, r2, r3
   1eb74:	str	r0, [sp, #20]
   1eb78:	mov	r0, r1
   1eb7c:	ldr	r3, [sp, #20]
   1eb80:	str	r1, [sp, #16]
   1eb84:	mov	r1, r3
   1eb88:	bl	51dc <memcpy@plt>
   1eb8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eb90:	ldr	r1, [fp, #-20]	; 0xffffffec
   1eb94:	sub	r0, r0, r1
   1eb98:	ldr	r1, [sp, #16]
   1eb9c:	add	r0, r1, r0
   1eba0:	movw	r2, #0
   1eba4:	strb	r2, [r0]
   1eba8:	str	r1, [fp, #-20]	; 0xffffffec
   1ebac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebb0:	cmp	r0, #0
   1ebb4:	ble	1ebc8 <ascii2prefix+0x134>
   1ebb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ebc0:	cmp	r0, r1
   1ebc4:	ble	1ebd0 <ascii2prefix+0x13c>
   1ebc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ebcc:	str	r0, [fp, #-24]	; 0xffffffe8
   1ebd0:	b	1ebdc <ascii2prefix+0x148>
   1ebd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ebd8:	str	r0, [fp, #-24]	; 0xffffffe8
   1ebdc:	ldr	r0, [fp, #-16]
   1ebe0:	cmp	r0, #2
   1ebe4:	bne	1ec40 <ascii2prefix+0x1ac>
   1ebe8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ebec:	sub	r0, fp, #36	; 0x24
   1ebf0:	movw	r2, #2
   1ebf4:	str	r0, [sp, #12]
   1ebf8:	mov	r0, r2
   1ebfc:	ldr	r2, [sp, #12]
   1ec00:	bl	4ffc <rb_inet_pton@plt>
   1ec04:	str	r0, [fp, #-56]	; 0xffffffc8
   1ec08:	cmp	r0, #0
   1ec0c:	bgt	1ec1c <ascii2prefix+0x188>
   1ec10:	movw	r0, #0
   1ec14:	str	r0, [fp, #-12]
   1ec18:	b	1ecac <ascii2prefix+0x218>
   1ec1c:	sub	r0, fp, #36	; 0x24
   1ec20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ec24:	movw	r1, #2
   1ec28:	str	r0, [sp, #8]
   1ec2c:	mov	r0, r1
   1ec30:	ldr	r1, [sp, #8]
   1ec34:	bl	1e9c0 <New_Prefix>
   1ec38:	str	r0, [fp, #-12]
   1ec3c:	b	1ecac <ascii2prefix+0x218>
   1ec40:	ldr	r0, [fp, #-16]
   1ec44:	cmp	r0, #10
   1ec48:	bne	1eca4 <ascii2prefix+0x210>
   1ec4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ec50:	sub	r0, fp, #52	; 0x34
   1ec54:	movw	r2, #10
   1ec58:	str	r0, [sp, #4]
   1ec5c:	mov	r0, r2
   1ec60:	ldr	r2, [sp, #4]
   1ec64:	bl	4ffc <rb_inet_pton@plt>
   1ec68:	str	r0, [fp, #-56]	; 0xffffffc8
   1ec6c:	cmp	r0, #0
   1ec70:	bgt	1ec80 <ascii2prefix+0x1ec>
   1ec74:	movw	r0, #0
   1ec78:	str	r0, [fp, #-12]
   1ec7c:	b	1ecac <ascii2prefix+0x218>
   1ec80:	sub	r0, fp, #52	; 0x34
   1ec84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ec88:	movw	r1, #10
   1ec8c:	str	r0, [sp]
   1ec90:	mov	r0, r1
   1ec94:	ldr	r1, [sp]
   1ec98:	bl	1e9c0 <New_Prefix>
   1ec9c:	str	r0, [fp, #-12]
   1eca0:	b	1ecac <ascii2prefix+0x218>
   1eca4:	movw	r0, #0
   1eca8:	str	r0, [fp, #-12]
   1ecac:	ldr	r0, [fp, #-12]
   1ecb0:	sub	sp, fp, #8
   1ecb4:	pop	{r4, r5, fp, pc}

0001ecb8 <rb_match_ip>:
   1ecb8:	push	{fp, lr}
   1ecbc:	mov	fp, sp
   1ecc0:	sub	sp, sp, #32
   1ecc4:	str	r0, [fp, #-8]
   1ecc8:	str	r1, [fp, #-12]
   1eccc:	ldr	r0, [fp, #-12]
   1ecd0:	ldrh	r0, [r0]
   1ecd4:	cmp	r0, #10
   1ecd8:	bne	1ecfc <rb_match_ip+0x44>
   1ecdc:	movw	r0, #128	; 0x80
   1ece0:	str	r0, [sp, #4]
   1ece4:	movw	r0, #10
   1ece8:	str	r0, [sp]
   1ecec:	ldr	r0, [fp, #-12]
   1ecf0:	add	r0, r0, #8
   1ecf4:	str	r0, [sp, #8]
   1ecf8:	b	1ed18 <rb_match_ip+0x60>
   1ecfc:	movw	r0, #32
   1ed00:	str	r0, [sp, #4]
   1ed04:	movw	r0, #2
   1ed08:	str	r0, [sp]
   1ed0c:	ldr	r0, [fp, #-12]
   1ed10:	add	r0, r0, #4
   1ed14:	str	r0, [sp, #8]
   1ed18:	ldr	r0, [sp]
   1ed1c:	ldr	r1, [sp, #8]
   1ed20:	ldr	r2, [sp, #4]
   1ed24:	bl	1e9c0 <New_Prefix>
   1ed28:	str	r0, [sp, #16]
   1ed2c:	movw	r1, #0
   1ed30:	cmp	r0, r1
   1ed34:	beq	1ed5c <rb_match_ip+0xa4>
   1ed38:	ldr	r0, [fp, #-8]
   1ed3c:	ldr	r1, [sp, #16]
   1ed40:	bl	4f18 <rb_patricia_search_best@plt>
   1ed44:	str	r0, [sp, #12]
   1ed48:	ldr	r0, [sp, #16]
   1ed4c:	bl	1d838 <Deref_Prefix>
   1ed50:	ldr	r0, [sp, #12]
   1ed54:	str	r0, [fp, #-4]
   1ed58:	b	1ed64 <rb_match_ip+0xac>
   1ed5c:	movw	r0, #0
   1ed60:	str	r0, [fp, #-4]
   1ed64:	ldr	r0, [fp, #-4]
   1ed68:	mov	sp, fp
   1ed6c:	pop	{fp, pc}

0001ed70 <rb_match_ip_exact>:
   1ed70:	push	{fp, lr}
   1ed74:	mov	fp, sp
   1ed78:	sub	sp, sp, #32
   1ed7c:	str	r0, [fp, #-8]
   1ed80:	str	r1, [fp, #-12]
   1ed84:	str	r2, [sp, #16]
   1ed88:	ldr	r0, [fp, #-12]
   1ed8c:	ldrh	r0, [r0]
   1ed90:	cmp	r0, #10
   1ed94:	bne	1edc4 <rb_match_ip_exact+0x54>
   1ed98:	ldr	r0, [sp, #16]
   1ed9c:	cmp	r0, #128	; 0x80
   1eda0:	bls	1edac <rb_match_ip_exact+0x3c>
   1eda4:	movw	r0, #128	; 0x80
   1eda8:	str	r0, [sp, #16]
   1edac:	movw	r0, #10
   1edb0:	str	r0, [sp]
   1edb4:	ldr	r0, [fp, #-12]
   1edb8:	add	r0, r0, #8
   1edbc:	str	r0, [sp, #4]
   1edc0:	b	1edec <rb_match_ip_exact+0x7c>
   1edc4:	ldr	r0, [sp, #16]
   1edc8:	cmp	r0, #32
   1edcc:	bls	1edd8 <rb_match_ip_exact+0x68>
   1edd0:	movw	r0, #32
   1edd4:	str	r0, [sp, #16]
   1edd8:	movw	r0, #2
   1eddc:	str	r0, [sp]
   1ede0:	ldr	r0, [fp, #-12]
   1ede4:	add	r0, r0, #4
   1ede8:	str	r0, [sp, #4]
   1edec:	ldr	r0, [sp]
   1edf0:	ldr	r1, [sp, #4]
   1edf4:	ldr	r2, [sp, #16]
   1edf8:	bl	1e9c0 <New_Prefix>
   1edfc:	str	r0, [sp, #12]
   1ee00:	movw	r1, #0
   1ee04:	cmp	r0, r1
   1ee08:	beq	1ee30 <rb_match_ip_exact+0xc0>
   1ee0c:	ldr	r0, [fp, #-8]
   1ee10:	ldr	r1, [sp, #12]
   1ee14:	bl	5278 <rb_patricia_search_exact@plt>
   1ee18:	str	r0, [sp, #8]
   1ee1c:	ldr	r0, [sp, #12]
   1ee20:	bl	1d838 <Deref_Prefix>
   1ee24:	ldr	r0, [sp, #8]
   1ee28:	str	r0, [fp, #-4]
   1ee2c:	b	1ee38 <rb_match_ip_exact+0xc8>
   1ee30:	movw	r0, #0
   1ee34:	str	r0, [fp, #-4]
   1ee38:	ldr	r0, [fp, #-4]
   1ee3c:	mov	sp, fp
   1ee40:	pop	{fp, pc}

0001ee44 <rb_match_string>:
   1ee44:	push	{fp, lr}
   1ee48:	mov	fp, sp
   1ee4c:	sub	sp, sp, #24
   1ee50:	str	r0, [fp, #-8]
   1ee54:	str	r1, [sp, #12]
   1ee58:	ldr	r1, [sp, #12]
   1ee5c:	movw	r0, #2
   1ee60:	bl	1ea94 <ascii2prefix>
   1ee64:	str	r0, [sp, #4]
   1ee68:	movw	r1, #0
   1ee6c:	cmp	r0, r1
   1ee70:	beq	1ee90 <rb_match_string+0x4c>
   1ee74:	ldr	r0, [fp, #-8]
   1ee78:	ldr	r1, [sp, #4]
   1ee7c:	bl	4f18 <rb_patricia_search_best@plt>
   1ee80:	str	r0, [sp, #8]
   1ee84:	ldr	r0, [sp, #4]
   1ee88:	bl	1d838 <Deref_Prefix>
   1ee8c:	b	1eed8 <rb_match_string+0x94>
   1ee90:	ldr	r1, [sp, #12]
   1ee94:	movw	r0, #10
   1ee98:	bl	1ea94 <ascii2prefix>
   1ee9c:	str	r0, [sp, #4]
   1eea0:	movw	r1, #0
   1eea4:	cmp	r0, r1
   1eea8:	beq	1eec8 <rb_match_string+0x84>
   1eeac:	ldr	r0, [fp, #-8]
   1eeb0:	ldr	r1, [sp, #4]
   1eeb4:	bl	4f18 <rb_patricia_search_best@plt>
   1eeb8:	str	r0, [sp, #8]
   1eebc:	ldr	r0, [sp, #4]
   1eec0:	bl	1d838 <Deref_Prefix>
   1eec4:	b	1eed4 <rb_match_string+0x90>
   1eec8:	movw	r0, #0
   1eecc:	str	r0, [fp, #-4]
   1eed0:	b	1eee0 <rb_match_string+0x9c>
   1eed4:	b	1eed8 <rb_match_string+0x94>
   1eed8:	ldr	r0, [sp, #8]
   1eedc:	str	r0, [fp, #-4]
   1eee0:	ldr	r0, [fp, #-4]
   1eee4:	mov	sp, fp
   1eee8:	pop	{fp, pc}

0001eeec <rb_match_exact_string>:
   1eeec:	push	{fp, lr}
   1eef0:	mov	fp, sp
   1eef4:	sub	sp, sp, #24
   1eef8:	str	r0, [fp, #-8]
   1eefc:	str	r1, [sp, #12]
   1ef00:	ldr	r1, [sp, #12]
   1ef04:	movw	r0, #2
   1ef08:	bl	1ea94 <ascii2prefix>
   1ef0c:	str	r0, [sp, #8]
   1ef10:	movw	r1, #0
   1ef14:	cmp	r0, r1
   1ef18:	beq	1ef38 <rb_match_exact_string+0x4c>
   1ef1c:	ldr	r0, [fp, #-8]
   1ef20:	ldr	r1, [sp, #8]
   1ef24:	bl	5278 <rb_patricia_search_exact@plt>
   1ef28:	str	r0, [sp, #4]
   1ef2c:	ldr	r0, [sp, #8]
   1ef30:	bl	1d838 <Deref_Prefix>
   1ef34:	b	1ef80 <rb_match_exact_string+0x94>
   1ef38:	ldr	r1, [sp, #12]
   1ef3c:	movw	r0, #10
   1ef40:	bl	1ea94 <ascii2prefix>
   1ef44:	str	r0, [sp, #8]
   1ef48:	movw	r1, #0
   1ef4c:	cmp	r0, r1
   1ef50:	beq	1ef70 <rb_match_exact_string+0x84>
   1ef54:	ldr	r0, [fp, #-8]
   1ef58:	ldr	r1, [sp, #8]
   1ef5c:	bl	5278 <rb_patricia_search_exact@plt>
   1ef60:	str	r0, [sp, #4]
   1ef64:	ldr	r0, [sp, #8]
   1ef68:	bl	1d838 <Deref_Prefix>
   1ef6c:	b	1ef7c <rb_match_exact_string+0x90>
   1ef70:	movw	r0, #0
   1ef74:	str	r0, [fp, #-4]
   1ef78:	b	1ef88 <rb_match_exact_string+0x9c>
   1ef7c:	b	1ef80 <rb_match_exact_string+0x94>
   1ef80:	ldr	r0, [sp, #4]
   1ef84:	str	r0, [fp, #-4]
   1ef88:	ldr	r0, [fp, #-4]
   1ef8c:	mov	sp, fp
   1ef90:	pop	{fp, pc}

0001ef94 <New_Prefix2>:
   1ef94:	push	{fp, lr}
   1ef98:	mov	fp, sp
   1ef9c:	sub	sp, sp, #32
   1efa0:	str	r0, [fp, #-8]
   1efa4:	str	r1, [fp, #-12]
   1efa8:	str	r2, [sp, #16]
   1efac:	str	r3, [sp, #12]
   1efb0:	movw	r0, #0
   1efb4:	str	r0, [sp, #8]
   1efb8:	movw	r0, #128	; 0x80
   1efbc:	str	r0, [sp, #4]
   1efc0:	ldr	r0, [fp, #-8]
   1efc4:	cmp	r0, #10
   1efc8:	bne	1f088 <New_Prefix2+0xf4>
   1efcc:	movw	r0, #128	; 0x80
   1efd0:	str	r0, [sp, #4]
   1efd4:	ldr	r0, [sp, #12]
   1efd8:	movw	r1, #0
   1efdc:	cmp	r0, r1
   1efe0:	bne	1effc <New_Prefix2+0x68>
   1efe4:	movw	r0, #24
   1efe8:	bl	1d644 <rb_malloc>
   1efec:	str	r0, [sp, #12]
   1eff0:	ldr	r0, [sp, #8]
   1eff4:	add	r0, r0, #1
   1eff8:	str	r0, [sp, #8]
   1effc:	ldr	r0, [sp, #12]
   1f000:	ldr	r1, [fp, #-12]
   1f004:	ldrb	r2, [r1]
   1f008:	strb	r2, [r0, #8]
   1f00c:	ldrb	r2, [r1, #1]
   1f010:	strb	r2, [r0, #9]
   1f014:	ldrb	r2, [r1, #2]
   1f018:	strb	r2, [r0, #10]
   1f01c:	ldrb	r2, [r1, #3]
   1f020:	strb	r2, [r0, #11]
   1f024:	ldrb	r2, [r1, #4]
   1f028:	strb	r2, [r0, #12]
   1f02c:	ldrb	r2, [r1, #5]
   1f030:	strb	r2, [r0, #13]
   1f034:	ldrb	r2, [r1, #6]
   1f038:	strb	r2, [r0, #14]
   1f03c:	ldrb	r2, [r1, #7]
   1f040:	strb	r2, [r0, #15]
   1f044:	ldrb	r2, [r1, #8]
   1f048:	strb	r2, [r0, #16]
   1f04c:	ldrb	r2, [r1, #9]
   1f050:	strb	r2, [r0, #17]
   1f054:	ldrb	r2, [r1, #10]
   1f058:	strb	r2, [r0, #18]
   1f05c:	ldrb	r2, [r1, #11]
   1f060:	strb	r2, [r0, #19]
   1f064:	ldrb	r2, [r1, #12]
   1f068:	strb	r2, [r0, #20]
   1f06c:	ldrb	r2, [r1, #13]
   1f070:	strb	r2, [r0, #21]
   1f074:	ldrb	r2, [r1, #14]
   1f078:	strb	r2, [r0, #22]
   1f07c:	ldrb	r1, [r1, #15]
   1f080:	strb	r1, [r0, #23]
   1f084:	b	1f0f8 <New_Prefix2+0x164>
   1f088:	ldr	r0, [fp, #-8]
   1f08c:	cmp	r0, #2
   1f090:	bne	1f0e8 <New_Prefix2+0x154>
   1f094:	ldr	r0, [sp, #12]
   1f098:	movw	r1, #0
   1f09c:	cmp	r0, r1
   1f0a0:	bne	1f0bc <New_Prefix2+0x128>
   1f0a4:	movw	r0, #24
   1f0a8:	bl	1d644 <rb_malloc>
   1f0ac:	str	r0, [sp, #12]
   1f0b0:	ldr	r0, [sp, #8]
   1f0b4:	add	r0, r0, #1
   1f0b8:	str	r0, [sp, #8]
   1f0bc:	ldr	r0, [sp, #12]
   1f0c0:	ldr	r1, [fp, #-12]
   1f0c4:	ldrb	r2, [r1]
   1f0c8:	strb	r2, [r0, #8]
   1f0cc:	ldrb	r2, [r1, #1]
   1f0d0:	strb	r2, [r0, #9]
   1f0d4:	ldrb	r2, [r1, #2]
   1f0d8:	strb	r2, [r0, #10]
   1f0dc:	ldrb	r1, [r1, #3]
   1f0e0:	strb	r1, [r0, #11]
   1f0e4:	b	1f0f4 <New_Prefix2+0x160>
   1f0e8:	movw	r0, #0
   1f0ec:	str	r0, [fp, #-4]
   1f0f0:	b	1f160 <New_Prefix2+0x1cc>
   1f0f4:	b	1f0f8 <New_Prefix2+0x164>
   1f0f8:	ldr	r0, [sp, #16]
   1f0fc:	cmp	r0, #0
   1f100:	blt	1f110 <New_Prefix2+0x17c>
   1f104:	ldr	r0, [sp, #16]
   1f108:	str	r0, [sp]
   1f10c:	b	1f118 <New_Prefix2+0x184>
   1f110:	ldr	r0, [sp, #4]
   1f114:	str	r0, [sp]
   1f118:	ldr	r0, [sp]
   1f11c:	ldr	r1, [sp, #12]
   1f120:	strh	r0, [r1, #2]
   1f124:	ldr	r0, [fp, #-8]
   1f128:	ldr	r1, [sp, #12]
   1f12c:	strh	r0, [r1]
   1f130:	ldr	r0, [sp, #12]
   1f134:	movw	r1, #0
   1f138:	str	r1, [r0, #4]
   1f13c:	ldr	r0, [sp, #8]
   1f140:	cmp	r0, #0
   1f144:	beq	1f158 <New_Prefix2+0x1c4>
   1f148:	ldr	r0, [sp, #12]
   1f14c:	ldr	r1, [r0, #4]
   1f150:	add	r1, r1, #1
   1f154:	str	r1, [r0, #4]
   1f158:	ldr	r0, [sp, #12]
   1f15c:	str	r0, [fp, #-4]
   1f160:	ldr	r0, [fp, #-4]
   1f164:	mov	sp, fp
   1f168:	pop	{fp, pc}

0001f16c <rb_dictionary_create>:
   1f16c:	push	{fp, lr}
   1f170:	mov	fp, sp
   1f174:	sub	sp, sp, #16
   1f178:	str	r0, [fp, #-4]
   1f17c:	str	r1, [sp, #8]
   1f180:	movw	r0, #40	; 0x28
   1f184:	bl	1f1d0 <rb_malloc>
   1f188:	str	r0, [sp, #4]
   1f18c:	ldr	r0, [sp, #8]
   1f190:	ldr	r1, [sp, #4]
   1f194:	str	r0, [r1]
   1f198:	ldr	r0, [fp, #-4]
   1f19c:	bl	1f228 <rb_strdup>
   1f1a0:	ldr	r1, [pc, #36]	; 1f1cc <rb_dictionary_create+0x60>
   1f1a4:	add	r2, pc, r1
   1f1a8:	ldr	r1, [sp, #4]
   1f1ac:	str	r0, [r1, #20]
   1f1b0:	ldr	r0, [sp, #4]
   1f1b4:	ldr	r1, [sp, #4]
   1f1b8:	add	r1, r1, #28
   1f1bc:	bl	1f298 <rb_dlinkAdd>
   1f1c0:	ldr	r0, [sp, #4]
   1f1c4:	mov	sp, fp
   1f1c8:	pop	{fp, pc}
   1f1cc:	.word	0x00033258

0001f1d0 <rb_malloc>:
   1f1d0:	push	{fp, lr}
   1f1d4:	mov	fp, sp
   1f1d8:	sub	sp, sp, #8
   1f1dc:	str	r0, [sp, #4]
   1f1e0:	ldr	r1, [sp, #4]
   1f1e4:	movw	r0, #1
   1f1e8:	bl	4fb4 <calloc@plt>
   1f1ec:	str	r0, [sp]
   1f1f0:	ldr	r0, [sp]
   1f1f4:	movw	r1, #0
   1f1f8:	cmp	r0, r1
   1f1fc:	movw	r0, #0
   1f200:	moveq	r0, #1
   1f204:	mvn	r1, #0
   1f208:	eor	r0, r0, r1
   1f20c:	eor	r0, r0, r1
   1f210:	tst	r0, #1
   1f214:	beq	1f21c <rb_malloc+0x4c>
   1f218:	bl	5350 <rb_outofmemory@plt>
   1f21c:	ldr	r0, [sp]
   1f220:	mov	sp, fp
   1f224:	pop	{fp, pc}

0001f228 <rb_strdup>:
   1f228:	push	{fp, lr}
   1f22c:	mov	fp, sp
   1f230:	sub	sp, sp, #16
   1f234:	str	r0, [fp, #-4]
   1f238:	ldr	r0, [fp, #-4]
   1f23c:	bl	51b8 <strlen@plt>
   1f240:	add	r0, r0, #1
   1f244:	bl	5374 <malloc@plt>
   1f248:	str	r0, [sp, #8]
   1f24c:	ldr	r0, [sp, #8]
   1f250:	movw	r1, #0
   1f254:	cmp	r0, r1
   1f258:	movw	r0, #0
   1f25c:	moveq	r0, #1
   1f260:	mvn	r1, #0
   1f264:	eor	r0, r0, r1
   1f268:	eor	r0, r0, r1
   1f26c:	tst	r0, #1
   1f270:	beq	1f278 <rb_strdup+0x50>
   1f274:	bl	5350 <rb_outofmemory@plt>
   1f278:	ldr	r0, [sp, #8]
   1f27c:	ldr	r1, [fp, #-4]
   1f280:	bl	5254 <strcpy@plt>
   1f284:	ldr	r1, [sp, #8]
   1f288:	str	r0, [sp, #4]
   1f28c:	mov	r0, r1
   1f290:	mov	sp, fp
   1f294:	pop	{fp, pc}

0001f298 <rb_dlinkAdd>:
   1f298:	sub	sp, sp, #12
   1f29c:	str	r0, [sp, #8]
   1f2a0:	str	r1, [sp, #4]
   1f2a4:	str	r2, [sp]
   1f2a8:	ldr	r0, [sp, #8]
   1f2ac:	ldr	r1, [sp, #4]
   1f2b0:	str	r0, [r1]
   1f2b4:	ldr	r0, [sp, #4]
   1f2b8:	movw	r1, #0
   1f2bc:	str	r1, [r0, #4]
   1f2c0:	ldr	r0, [sp]
   1f2c4:	ldr	r0, [r0]
   1f2c8:	ldr	r2, [sp, #4]
   1f2cc:	str	r0, [r2, #8]
   1f2d0:	ldr	r0, [sp]
   1f2d4:	ldr	r0, [r0]
   1f2d8:	cmp	r0, r1
   1f2dc:	beq	1f2f4 <rb_dlinkAdd+0x5c>
   1f2e0:	ldr	r0, [sp, #4]
   1f2e4:	ldr	r1, [sp]
   1f2e8:	ldr	r1, [r1]
   1f2ec:	str	r0, [r1, #4]
   1f2f0:	b	1f318 <rb_dlinkAdd+0x80>
   1f2f4:	ldr	r0, [sp]
   1f2f8:	ldr	r0, [r0, #4]
   1f2fc:	movw	r1, #0
   1f300:	cmp	r0, r1
   1f304:	bne	1f314 <rb_dlinkAdd+0x7c>
   1f308:	ldr	r0, [sp, #4]
   1f30c:	ldr	r1, [sp]
   1f310:	str	r0, [r1, #4]
   1f314:	b	1f318 <rb_dlinkAdd+0x80>
   1f318:	ldr	r0, [sp, #4]
   1f31c:	ldr	r1, [sp]
   1f320:	str	r0, [r1]
   1f324:	ldr	r0, [sp]
   1f328:	ldr	r1, [r0, #8]
   1f32c:	add	r1, r1, #1
   1f330:	str	r1, [r0, #8]
   1f334:	add	sp, sp, #12
   1f338:	bx	lr

0001f33c <rb_dictionary_set_comparator_func>:
   1f33c:	sub	sp, sp, #8
   1f340:	str	r0, [sp, #4]
   1f344:	str	r1, [sp]
   1f348:	ldr	r0, [sp]
   1f34c:	ldr	r1, [sp, #4]
   1f350:	str	r0, [r1]
   1f354:	add	sp, sp, #8
   1f358:	bx	lr

0001f35c <rb_dictionary_get_comparator_func>:
   1f35c:	sub	sp, sp, #4
   1f360:	str	r0, [sp]
   1f364:	ldr	r0, [sp]
   1f368:	ldr	r0, [r0]
   1f36c:	add	sp, sp, #4
   1f370:	bx	lr

0001f374 <rb_dictionary_get_linear_index>:
   1f374:	push	{fp, lr}
   1f378:	mov	fp, sp
   1f37c:	sub	sp, sp, #24
   1f380:	str	r0, [fp, #-8]
   1f384:	str	r1, [sp, #12]
   1f388:	ldr	r0, [fp, #-8]
   1f38c:	ldr	r1, [sp, #12]
   1f390:	bl	53f8 <rb_dictionary_find@plt>
   1f394:	str	r0, [sp, #8]
   1f398:	ldr	r0, [sp, #8]
   1f39c:	movw	r1, #0
   1f3a0:	cmp	r0, r1
   1f3a4:	bne	1f3b4 <rb_dictionary_get_linear_index+0x40>
   1f3a8:	mvn	r0, #0
   1f3ac:	str	r0, [fp, #-4]
   1f3b0:	b	1f444 <rb_dictionary_get_linear_index+0xd0>
   1f3b4:	ldr	r0, [fp, #-8]
   1f3b8:	ldrb	r0, [r0, #24]
   1f3bc:	and	r0, r0, #1
   1f3c0:	and	r0, r0, #255	; 0xff
   1f3c4:	cmp	r0, #0
   1f3c8:	bne	1f3dc <rb_dictionary_get_linear_index+0x68>
   1f3cc:	ldr	r0, [sp, #8]
   1f3d0:	ldr	r0, [r0, #24]
   1f3d4:	str	r0, [fp, #-4]
   1f3d8:	b	1f444 <rb_dictionary_get_linear_index+0xd0>
   1f3dc:	ldr	r0, [fp, #-8]
   1f3e0:	ldr	r0, [r0, #8]
   1f3e4:	str	r0, [sp, #4]
   1f3e8:	movw	r0, #0
   1f3ec:	str	r0, [sp]
   1f3f0:	ldr	r0, [sp, #4]
   1f3f4:	movw	r1, #0
   1f3f8:	cmp	r0, r1
   1f3fc:	beq	1f428 <rb_dictionary_get_linear_index+0xb4>
   1f400:	ldr	r0, [sp]
   1f404:	ldr	r1, [sp, #4]
   1f408:	str	r0, [r1, #24]
   1f40c:	ldr	r0, [sp, #4]
   1f410:	ldr	r0, [r0, #12]
   1f414:	str	r0, [sp, #4]
   1f418:	ldr	r0, [sp]
   1f41c:	add	r0, r0, #1
   1f420:	str	r0, [sp]
   1f424:	b	1f3f0 <rb_dictionary_get_linear_index+0x7c>
   1f428:	ldr	r0, [fp, #-8]
   1f42c:	ldrb	r1, [r0, #24]
   1f430:	bic	r1, r1, #1
   1f434:	strb	r1, [r0, #24]
   1f438:	ldr	r0, [sp, #8]
   1f43c:	ldr	r0, [r0, #24]
   1f440:	str	r0, [fp, #-4]
   1f444:	ldr	r0, [fp, #-4]
   1f448:	mov	sp, fp
   1f44c:	pop	{fp, pc}

0001f450 <rb_dictionary_find>:
   1f450:	push	{fp, lr}
   1f454:	mov	fp, sp
   1f458:	sub	sp, sp, #16
   1f45c:	str	r0, [sp, #8]
   1f460:	str	r1, [sp, #4]
   1f464:	ldr	r0, [sp, #8]
   1f468:	ldr	r1, [sp, #4]
   1f46c:	bl	1fa24 <rb_dictionary_retune>
   1f470:	ldr	r0, [sp, #8]
   1f474:	ldr	r0, [r0, #4]
   1f478:	movw	r1, #0
   1f47c:	cmp	r0, r1
   1f480:	beq	1f4c8 <rb_dictionary_find+0x78>
   1f484:	ldr	r0, [sp, #8]
   1f488:	ldr	r0, [r0]
   1f48c:	ldr	r1, [sp, #4]
   1f490:	ldr	r2, [sp, #8]
   1f494:	ldr	r2, [r2, #4]
   1f498:	ldr	r2, [r2, #20]
   1f49c:	str	r0, [sp]
   1f4a0:	mov	r0, r1
   1f4a4:	mov	r1, r2
   1f4a8:	ldr	r2, [sp]
   1f4ac:	blx	r2
   1f4b0:	cmp	r0, #0
   1f4b4:	bne	1f4c8 <rb_dictionary_find+0x78>
   1f4b8:	ldr	r0, [sp, #8]
   1f4bc:	ldr	r0, [r0, #4]
   1f4c0:	str	r0, [fp, #-4]
   1f4c4:	b	1f4d0 <rb_dictionary_find+0x80>
   1f4c8:	movw	r0, #0
   1f4cc:	str	r0, [fp, #-4]
   1f4d0:	ldr	r0, [fp, #-4]
   1f4d4:	mov	sp, fp
   1f4d8:	pop	{fp, pc}

0001f4dc <rb_dictionary_destroy>:
   1f4dc:	push	{fp, lr}
   1f4e0:	mov	fp, sp
   1f4e4:	sub	sp, sp, #32
   1f4e8:	str	r0, [fp, #-4]
   1f4ec:	str	r1, [fp, #-8]
   1f4f0:	str	r2, [fp, #-12]
   1f4f4:	ldr	r0, [fp, #-4]
   1f4f8:	ldr	r0, [r0, #8]
   1f4fc:	str	r0, [sp, #16]
   1f500:	ldr	r0, [sp, #16]
   1f504:	movw	r1, #0
   1f508:	cmp	r0, r1
   1f50c:	beq	1f520 <rb_dictionary_destroy+0x44>
   1f510:	ldr	r0, [sp, #16]
   1f514:	ldr	r0, [r0, #12]
   1f518:	str	r0, [sp, #8]
   1f51c:	b	1f52c <rb_dictionary_destroy+0x50>
   1f520:	movw	r0, #0
   1f524:	str	r0, [sp, #8]
   1f528:	b	1f52c <rb_dictionary_destroy+0x50>
   1f52c:	ldr	r0, [sp, #8]
   1f530:	str	r0, [sp, #12]
   1f534:	ldr	r0, [sp, #16]
   1f538:	movw	r1, #0
   1f53c:	cmp	r0, r1
   1f540:	beq	1f5bc <rb_dictionary_destroy+0xe0>
   1f544:	ldr	r0, [fp, #-8]
   1f548:	movw	r1, #0
   1f54c:	cmp	r0, r1
   1f550:	beq	1f574 <rb_dictionary_destroy+0x98>
   1f554:	ldr	r0, [fp, #-8]
   1f558:	ldr	r1, [sp, #16]
   1f55c:	ldr	r2, [fp, #-12]
   1f560:	str	r0, [sp, #4]
   1f564:	mov	r0, r1
   1f568:	mov	r1, r2
   1f56c:	ldr	r2, [sp, #4]
   1f570:	blx	r2
   1f574:	ldr	r0, [sp, #16]
   1f578:	bl	1f5f0 <rb_free>
   1f57c:	ldr	r0, [sp, #12]
   1f580:	str	r0, [sp, #16]
   1f584:	ldr	r0, [sp, #16]
   1f588:	movw	r1, #0
   1f58c:	cmp	r0, r1
   1f590:	beq	1f5a4 <rb_dictionary_destroy+0xc8>
   1f594:	ldr	r0, [sp, #16]
   1f598:	ldr	r0, [r0, #12]
   1f59c:	str	r0, [sp]
   1f5a0:	b	1f5b0 <rb_dictionary_destroy+0xd4>
   1f5a4:	movw	r0, #0
   1f5a8:	str	r0, [sp]
   1f5ac:	b	1f5b0 <rb_dictionary_destroy+0xd4>
   1f5b0:	ldr	r0, [sp]
   1f5b4:	str	r0, [sp, #12]
   1f5b8:	b	1f534 <rb_dictionary_destroy+0x58>
   1f5bc:	ldr	r0, [pc, #40]	; 1f5ec <rb_dictionary_destroy+0x110>
   1f5c0:	add	r1, pc, r0
   1f5c4:	ldr	r0, [fp, #-4]
   1f5c8:	add	r0, r0, #28
   1f5cc:	bl	1f638 <rb_dlinkDelete>
   1f5d0:	ldr	r0, [fp, #-4]
   1f5d4:	ldr	r0, [r0, #20]
   1f5d8:	bl	1f5f0 <rb_free>
   1f5dc:	ldr	r0, [fp, #-4]
   1f5e0:	bl	1f5f0 <rb_free>
   1f5e4:	mov	sp, fp
   1f5e8:	pop	{fp, pc}
   1f5ec:	.word	0x00032e3c

0001f5f0 <rb_free>:
   1f5f0:	push	{fp, lr}
   1f5f4:	mov	fp, sp
   1f5f8:	sub	sp, sp, #8
   1f5fc:	str	r0, [sp, #4]
   1f600:	ldr	r0, [sp, #4]
   1f604:	movw	r1, #0
   1f608:	cmp	r0, r1
   1f60c:	movw	r0, #0
   1f610:	movne	r0, #1
   1f614:	mvn	r1, #0
   1f618:	eor	r0, r0, r1
   1f61c:	eor	r0, r0, r1
   1f620:	tst	r0, #1
   1f624:	beq	1f630 <rb_free+0x40>
   1f628:	ldr	r0, [sp, #4]
   1f62c:	bl	50c8 <free@plt>
   1f630:	mov	sp, fp
   1f634:	pop	{fp, pc}

0001f638 <rb_dlinkDelete>:
   1f638:	sub	sp, sp, #8
   1f63c:	str	r0, [sp, #4]
   1f640:	str	r1, [sp]
   1f644:	ldr	r0, [sp, #4]
   1f648:	ldr	r0, [r0, #8]
   1f64c:	movw	r1, #0
   1f650:	cmp	r0, r1
   1f654:	beq	1f670 <rb_dlinkDelete+0x38>
   1f658:	ldr	r0, [sp, #4]
   1f65c:	ldr	r0, [r0, #4]
   1f660:	ldr	r1, [sp, #4]
   1f664:	ldr	r1, [r1, #8]
   1f668:	str	r0, [r1, #4]
   1f66c:	b	1f680 <rb_dlinkDelete+0x48>
   1f670:	ldr	r0, [sp, #4]
   1f674:	ldr	r0, [r0, #4]
   1f678:	ldr	r1, [sp]
   1f67c:	str	r0, [r1, #4]
   1f680:	ldr	r0, [sp, #4]
   1f684:	ldr	r0, [r0, #4]
   1f688:	movw	r1, #0
   1f68c:	cmp	r0, r1
   1f690:	beq	1f6ac <rb_dlinkDelete+0x74>
   1f694:	ldr	r0, [sp, #4]
   1f698:	ldr	r0, [r0, #8]
   1f69c:	ldr	r1, [sp, #4]
   1f6a0:	ldr	r1, [r1, #4]
   1f6a4:	str	r0, [r1, #8]
   1f6a8:	b	1f6bc <rb_dlinkDelete+0x84>
   1f6ac:	ldr	r0, [sp, #4]
   1f6b0:	ldr	r0, [r0, #8]
   1f6b4:	ldr	r1, [sp]
   1f6b8:	str	r0, [r1]
   1f6bc:	ldr	r0, [sp, #4]
   1f6c0:	movw	r1, #0
   1f6c4:	str	r1, [r0, #4]
   1f6c8:	ldr	r0, [sp, #4]
   1f6cc:	str	r1, [r0, #8]
   1f6d0:	ldr	r0, [sp]
   1f6d4:	ldr	r1, [r0, #8]
   1f6d8:	mvn	r2, #0
   1f6dc:	add	r1, r1, r2
   1f6e0:	str	r1, [r0, #8]
   1f6e4:	add	sp, sp, #8
   1f6e8:	bx	lr

0001f6ec <rb_dictionary_foreach>:
   1f6ec:	push	{fp, lr}
   1f6f0:	mov	fp, sp
   1f6f4:	sub	sp, sp, #40	; 0x28
   1f6f8:	str	r0, [fp, #-4]
   1f6fc:	str	r1, [fp, #-8]
   1f700:	str	r2, [fp, #-12]
   1f704:	ldr	r0, [fp, #-4]
   1f708:	ldr	r0, [r0, #8]
   1f70c:	str	r0, [fp, #-16]
   1f710:	ldr	r0, [fp, #-16]
   1f714:	movw	r1, #0
   1f718:	cmp	r0, r1
   1f71c:	beq	1f730 <rb_dictionary_foreach+0x44>
   1f720:	ldr	r0, [fp, #-16]
   1f724:	ldr	r0, [r0, #12]
   1f728:	str	r0, [sp, #12]
   1f72c:	b	1f73c <rb_dictionary_foreach+0x50>
   1f730:	movw	r0, #0
   1f734:	str	r0, [sp, #12]
   1f738:	b	1f73c <rb_dictionary_foreach+0x50>
   1f73c:	ldr	r0, [sp, #12]
   1f740:	str	r0, [sp, #20]
   1f744:	ldr	r0, [fp, #-16]
   1f748:	movw	r1, #0
   1f74c:	cmp	r0, r1
   1f750:	beq	1f7d0 <rb_dictionary_foreach+0xe4>
   1f754:	ldr	r0, [fp, #-16]
   1f758:	str	r0, [sp, #16]
   1f75c:	ldr	r0, [fp, #-8]
   1f760:	movw	r1, #0
   1f764:	cmp	r0, r1
   1f768:	beq	1f78c <rb_dictionary_foreach+0xa0>
   1f76c:	ldr	r0, [fp, #-8]
   1f770:	ldr	r1, [sp, #16]
   1f774:	ldr	r2, [fp, #-12]
   1f778:	str	r0, [sp, #8]
   1f77c:	mov	r0, r1
   1f780:	mov	r1, r2
   1f784:	ldr	r2, [sp, #8]
   1f788:	blx	r2
   1f78c:	b	1f790 <rb_dictionary_foreach+0xa4>
   1f790:	ldr	r0, [sp, #20]
   1f794:	str	r0, [fp, #-16]
   1f798:	ldr	r0, [fp, #-16]
   1f79c:	movw	r1, #0
   1f7a0:	cmp	r0, r1
   1f7a4:	beq	1f7b8 <rb_dictionary_foreach+0xcc>
   1f7a8:	ldr	r0, [fp, #-16]
   1f7ac:	ldr	r0, [r0, #12]
   1f7b0:	str	r0, [sp, #4]
   1f7b4:	b	1f7c4 <rb_dictionary_foreach+0xd8>
   1f7b8:	movw	r0, #0
   1f7bc:	str	r0, [sp, #4]
   1f7c0:	b	1f7c4 <rb_dictionary_foreach+0xd8>
   1f7c4:	ldr	r0, [sp, #4]
   1f7c8:	str	r0, [sp, #20]
   1f7cc:	b	1f744 <rb_dictionary_foreach+0x58>
   1f7d0:	mov	sp, fp
   1f7d4:	pop	{fp, pc}

0001f7d8 <rb_dictionary_search>:
   1f7d8:	push	{fp, lr}
   1f7dc:	mov	fp, sp
   1f7e0:	sub	sp, sp, #40	; 0x28
   1f7e4:	str	r0, [fp, #-4]
   1f7e8:	str	r1, [fp, #-8]
   1f7ec:	str	r2, [fp, #-12]
   1f7f0:	movw	r0, #0
   1f7f4:	str	r0, [sp, #16]
   1f7f8:	ldr	r1, [fp, #-4]
   1f7fc:	ldr	r1, [r1, #8]
   1f800:	str	r1, [fp, #-16]
   1f804:	ldr	r1, [fp, #-16]
   1f808:	cmp	r1, r0
   1f80c:	beq	1f820 <rb_dictionary_search+0x48>
   1f810:	ldr	r0, [fp, #-16]
   1f814:	ldr	r0, [r0, #12]
   1f818:	str	r0, [sp, #8]
   1f81c:	b	1f82c <rb_dictionary_search+0x54>
   1f820:	movw	r0, #0
   1f824:	str	r0, [sp, #8]
   1f828:	b	1f82c <rb_dictionary_search+0x54>
   1f82c:	ldr	r0, [sp, #8]
   1f830:	str	r0, [sp, #20]
   1f834:	ldr	r0, [fp, #-16]
   1f838:	movw	r1, #0
   1f83c:	cmp	r0, r1
   1f840:	beq	1f8d8 <rb_dictionary_search+0x100>
   1f844:	ldr	r0, [fp, #-16]
   1f848:	str	r0, [sp, #12]
   1f84c:	ldr	r0, [fp, #-8]
   1f850:	movw	r1, #0
   1f854:	cmp	r0, r1
   1f858:	beq	1f880 <rb_dictionary_search+0xa8>
   1f85c:	ldr	r0, [fp, #-8]
   1f860:	ldr	r1, [sp, #12]
   1f864:	ldr	r2, [fp, #-12]
   1f868:	str	r0, [sp, #4]
   1f86c:	mov	r0, r1
   1f870:	mov	r1, r2
   1f874:	ldr	r2, [sp, #4]
   1f878:	blx	r2
   1f87c:	str	r0, [sp, #16]
   1f880:	ldr	r0, [sp, #16]
   1f884:	movw	r1, #0
   1f888:	cmp	r0, r1
   1f88c:	beq	1f894 <rb_dictionary_search+0xbc>
   1f890:	b	1f8d8 <rb_dictionary_search+0x100>
   1f894:	b	1f898 <rb_dictionary_search+0xc0>
   1f898:	ldr	r0, [sp, #20]
   1f89c:	str	r0, [fp, #-16]
   1f8a0:	ldr	r0, [fp, #-16]
   1f8a4:	movw	r1, #0
   1f8a8:	cmp	r0, r1
   1f8ac:	beq	1f8c0 <rb_dictionary_search+0xe8>
   1f8b0:	ldr	r0, [fp, #-16]
   1f8b4:	ldr	r0, [r0, #12]
   1f8b8:	str	r0, [sp]
   1f8bc:	b	1f8cc <rb_dictionary_search+0xf4>
   1f8c0:	movw	r0, #0
   1f8c4:	str	r0, [sp]
   1f8c8:	b	1f8cc <rb_dictionary_search+0xf4>
   1f8cc:	ldr	r0, [sp]
   1f8d0:	str	r0, [sp, #20]
   1f8d4:	b	1f834 <rb_dictionary_search+0x5c>
   1f8d8:	ldr	r0, [sp, #16]
   1f8dc:	mov	sp, fp
   1f8e0:	pop	{fp, pc}

0001f8e4 <rb_dictionary_foreach_start>:
   1f8e4:	push	{fp, lr}
   1f8e8:	mov	fp, sp
   1f8ec:	sub	sp, sp, #8
   1f8f0:	str	r0, [sp, #4]
   1f8f4:	str	r1, [sp]
   1f8f8:	ldr	r0, [sp]
   1f8fc:	movw	r1, #0
   1f900:	str	r1, [r0]
   1f904:	ldr	r0, [sp]
   1f908:	str	r1, [r0, #4]
   1f90c:	ldr	r0, [sp, #4]
   1f910:	ldr	r0, [r0, #8]
   1f914:	ldr	r2, [sp]
   1f918:	str	r0, [r2]
   1f91c:	ldr	r0, [sp]
   1f920:	ldr	r0, [r0]
   1f924:	cmp	r0, r1
   1f928:	bne	1f930 <rb_dictionary_foreach_start+0x4c>
   1f92c:	b	1f94c <rb_dictionary_foreach_start+0x68>
   1f930:	ldr	r0, [sp]
   1f934:	ldr	r0, [r0]
   1f938:	ldr	r1, [sp]
   1f93c:	str	r0, [r1, #4]
   1f940:	ldr	r0, [sp, #4]
   1f944:	ldr	r1, [sp]
   1f948:	bl	50b0 <rb_dictionary_foreach_next@plt>
   1f94c:	mov	sp, fp
   1f950:	pop	{fp, pc}

0001f954 <rb_dictionary_foreach_next>:
   1f954:	push	{fp, lr}
   1f958:	mov	fp, sp
   1f95c:	sub	sp, sp, #8
   1f960:	str	r0, [sp, #4]
   1f964:	str	r1, [sp]
   1f968:	ldr	r0, [sp]
   1f96c:	ldr	r0, [r0]
   1f970:	movw	r1, #0
   1f974:	cmp	r0, r1
   1f978:	bne	1f990 <rb_dictionary_foreach_next+0x3c>
   1f97c:	ldr	r0, [pc, #80]	; 1f9d4 <rb_dictionary_foreach_next+0x80>
   1f980:	add	r0, pc, r0
   1f984:	ldr	r1, [sp, #4]
   1f988:	bl	52e4 <rb_lib_log@plt>
   1f98c:	b	1f9cc <rb_dictionary_foreach_next+0x78>
   1f990:	ldr	r0, [sp]
   1f994:	ldr	r0, [r0, #4]
   1f998:	ldr	r1, [sp]
   1f99c:	str	r0, [r1]
   1f9a0:	ldr	r0, [sp]
   1f9a4:	ldr	r0, [r0, #4]
   1f9a8:	movw	r1, #0
   1f9ac:	cmp	r0, r1
   1f9b0:	bne	1f9b8 <rb_dictionary_foreach_next+0x64>
   1f9b4:	b	1f9cc <rb_dictionary_foreach_next+0x78>
   1f9b8:	ldr	r0, [sp]
   1f9bc:	ldr	r0, [r0, #4]
   1f9c0:	ldr	r0, [r0, #12]
   1f9c4:	ldr	r1, [sp]
   1f9c8:	str	r0, [r1, #4]
   1f9cc:	mov	sp, fp
   1f9d0:	pop	{fp, pc}
   1f9d4:	.word	0x000040f7

0001f9d8 <rb_dictionary_foreach_cur>:
   1f9d8:	sub	sp, sp, #12
   1f9dc:	str	r0, [sp, #8]
   1f9e0:	str	r1, [sp, #4]
   1f9e4:	ldr	r0, [sp, #4]
   1f9e8:	ldr	r0, [r0]
   1f9ec:	movw	r1, #0
   1f9f0:	cmp	r0, r1
   1f9f4:	beq	1fa0c <rb_dictionary_foreach_cur+0x34>
   1f9f8:	ldr	r0, [sp, #4]
   1f9fc:	ldr	r0, [r0]
   1fa00:	ldr	r0, [r0, #16]
   1fa04:	str	r0, [sp]
   1fa08:	b	1fa18 <rb_dictionary_foreach_cur+0x40>
   1fa0c:	movw	r0, #0
   1fa10:	str	r0, [sp]
   1fa14:	b	1fa18 <rb_dictionary_foreach_cur+0x40>
   1fa18:	ldr	r0, [sp]
   1fa1c:	add	sp, sp, #12
   1fa20:	bx	lr

0001fa24 <rb_dictionary_retune>:
   1fa24:	push	{fp, lr}
   1fa28:	mov	fp, sp
   1fa2c:	sub	sp, sp, #72	; 0x48
   1fa30:	str	r0, [fp, #-4]
   1fa34:	str	r1, [fp, #-8]
   1fa38:	ldr	r0, [fp, #-4]
   1fa3c:	ldr	r0, [r0, #4]
   1fa40:	movw	r1, #0
   1fa44:	cmp	r0, r1
   1fa48:	bne	1fa50 <rb_dictionary_retune+0x2c>
   1fa4c:	b	1fc7c <rb_dictionary_retune+0x258>
   1fa50:	movw	r0, #0
   1fa54:	str	r0, [sp, #40]	; 0x28
   1fa58:	str	r0, [sp, #36]	; 0x24
   1fa5c:	add	r0, sp, #36	; 0x24
   1fa60:	str	r0, [sp, #24]
   1fa64:	str	r0, [sp, #28]
   1fa68:	ldr	r0, [fp, #-4]
   1fa6c:	ldr	r0, [r0, #4]
   1fa70:	str	r0, [sp, #20]
   1fa74:	ldr	r0, [fp, #-4]
   1fa78:	ldr	r0, [r0]
   1fa7c:	ldr	r1, [fp, #-8]
   1fa80:	ldr	r2, [sp, #20]
   1fa84:	ldr	r2, [r2, #20]
   1fa88:	str	r0, [sp, #12]
   1fa8c:	mov	r0, r1
   1fa90:	mov	r1, r2
   1fa94:	ldr	r2, [sp, #12]
   1fa98:	blx	r2
   1fa9c:	str	r0, [sp, #16]
   1faa0:	cmp	r0, #0
   1faa4:	bne	1faac <rb_dictionary_retune+0x88>
   1faa8:	b	1fc38 <rb_dictionary_retune+0x214>
   1faac:	ldr	r0, [sp, #16]
   1fab0:	cmp	r0, #0
   1fab4:	bge	1fb78 <rb_dictionary_retune+0x154>
   1fab8:	ldr	r0, [sp, #20]
   1fabc:	ldr	r0, [r0]
   1fac0:	movw	r1, #0
   1fac4:	cmp	r0, r1
   1fac8:	bne	1fad0 <rb_dictionary_retune+0xac>
   1facc:	b	1fc38 <rb_dictionary_retune+0x214>
   1fad0:	ldr	r0, [fp, #-4]
   1fad4:	ldr	r0, [r0]
   1fad8:	ldr	r1, [fp, #-8]
   1fadc:	ldr	r2, [sp, #20]
   1fae0:	ldr	r2, [r2]
   1fae4:	ldr	r2, [r2, #20]
   1fae8:	str	r0, [sp, #8]
   1faec:	mov	r0, r1
   1faf0:	mov	r1, r2
   1faf4:	ldr	r2, [sp, #8]
   1faf8:	blx	r2
   1fafc:	str	r0, [sp, #16]
   1fb00:	cmp	r0, #0
   1fb04:	bge	1fb54 <rb_dictionary_retune+0x130>
   1fb08:	ldr	r0, [sp, #20]
   1fb0c:	ldr	r0, [r0]
   1fb10:	str	r0, [sp, #32]
   1fb14:	ldr	r0, [sp, #32]
   1fb18:	ldr	r0, [r0, #4]
   1fb1c:	ldr	r1, [sp, #20]
   1fb20:	str	r0, [r1]
   1fb24:	ldr	r0, [sp, #20]
   1fb28:	ldr	r1, [sp, #32]
   1fb2c:	str	r0, [r1, #4]
   1fb30:	ldr	r0, [sp, #32]
   1fb34:	str	r0, [sp, #20]
   1fb38:	ldr	r0, [sp, #20]
   1fb3c:	ldr	r0, [r0]
   1fb40:	movw	r1, #0
   1fb44:	cmp	r0, r1
   1fb48:	bne	1fb50 <rb_dictionary_retune+0x12c>
   1fb4c:	b	1fc38 <rb_dictionary_retune+0x214>
   1fb50:	b	1fb54 <rb_dictionary_retune+0x130>
   1fb54:	ldr	r0, [sp, #20]
   1fb58:	ldr	r1, [sp, #24]
   1fb5c:	str	r0, [r1]
   1fb60:	ldr	r0, [sp, #20]
   1fb64:	str	r0, [sp, #24]
   1fb68:	ldr	r0, [sp, #20]
   1fb6c:	ldr	r0, [r0]
   1fb70:	str	r0, [sp, #20]
   1fb74:	b	1fc34 <rb_dictionary_retune+0x210>
   1fb78:	ldr	r0, [sp, #20]
   1fb7c:	ldr	r0, [r0, #4]
   1fb80:	movw	r1, #0
   1fb84:	cmp	r0, r1
   1fb88:	bne	1fb90 <rb_dictionary_retune+0x16c>
   1fb8c:	b	1fc38 <rb_dictionary_retune+0x214>
   1fb90:	ldr	r0, [fp, #-4]
   1fb94:	ldr	r0, [r0]
   1fb98:	ldr	r1, [fp, #-8]
   1fb9c:	ldr	r2, [sp, #20]
   1fba0:	ldr	r2, [r2, #4]
   1fba4:	ldr	r2, [r2, #20]
   1fba8:	str	r0, [sp, #4]
   1fbac:	mov	r0, r1
   1fbb0:	mov	r1, r2
   1fbb4:	ldr	r2, [sp, #4]
   1fbb8:	blx	r2
   1fbbc:	str	r0, [sp, #16]
   1fbc0:	cmp	r0, #0
   1fbc4:	ble	1fc14 <rb_dictionary_retune+0x1f0>
   1fbc8:	ldr	r0, [sp, #20]
   1fbcc:	ldr	r0, [r0, #4]
   1fbd0:	str	r0, [sp, #32]
   1fbd4:	ldr	r0, [sp, #32]
   1fbd8:	ldr	r0, [r0]
   1fbdc:	ldr	r1, [sp, #20]
   1fbe0:	str	r0, [r1, #4]
   1fbe4:	ldr	r0, [sp, #20]
   1fbe8:	ldr	r1, [sp, #32]
   1fbec:	str	r0, [r1]
   1fbf0:	ldr	r0, [sp, #32]
   1fbf4:	str	r0, [sp, #20]
   1fbf8:	ldr	r0, [sp, #20]
   1fbfc:	ldr	r0, [r0, #4]
   1fc00:	movw	r1, #0
   1fc04:	cmp	r0, r1
   1fc08:	bne	1fc10 <rb_dictionary_retune+0x1ec>
   1fc0c:	b	1fc38 <rb_dictionary_retune+0x214>
   1fc10:	b	1fc14 <rb_dictionary_retune+0x1f0>
   1fc14:	ldr	r0, [sp, #20]
   1fc18:	ldr	r1, [sp, #28]
   1fc1c:	str	r0, [r1, #4]
   1fc20:	ldr	r0, [sp, #20]
   1fc24:	str	r0, [sp, #28]
   1fc28:	ldr	r0, [sp, #20]
   1fc2c:	ldr	r0, [r0, #4]
   1fc30:	str	r0, [sp, #20]
   1fc34:	b	1fa74 <rb_dictionary_retune+0x50>
   1fc38:	ldr	r0, [sp, #20]
   1fc3c:	ldr	r0, [r0]
   1fc40:	ldr	r1, [sp, #28]
   1fc44:	str	r0, [r1, #4]
   1fc48:	ldr	r0, [sp, #20]
   1fc4c:	ldr	r0, [r0, #4]
   1fc50:	ldr	r1, [sp, #24]
   1fc54:	str	r0, [r1]
   1fc58:	ldr	r0, [sp, #40]	; 0x28
   1fc5c:	ldr	r1, [sp, #20]
   1fc60:	str	r0, [r1]
   1fc64:	ldr	r0, [sp, #36]	; 0x24
   1fc68:	ldr	r1, [sp, #20]
   1fc6c:	str	r0, [r1, #4]
   1fc70:	ldr	r0, [sp, #20]
   1fc74:	ldr	r1, [fp, #-4]
   1fc78:	str	r0, [r1, #4]
   1fc7c:	mov	sp, fp
   1fc80:	pop	{fp, pc}

0001fc84 <rb_dictionary_add>:
   1fc84:	push	{fp, lr}
   1fc88:	mov	fp, sp
   1fc8c:	sub	sp, sp, #16
   1fc90:	str	r0, [fp, #-4]
   1fc94:	str	r1, [sp, #8]
   1fc98:	str	r2, [sp, #4]
   1fc9c:	movw	r0, #28
   1fca0:	bl	1f1d0 <rb_malloc>
   1fca4:	str	r0, [sp]
   1fca8:	ldr	r0, [sp, #8]
   1fcac:	ldr	r1, [sp]
   1fcb0:	str	r0, [r1, #20]
   1fcb4:	ldr	r0, [sp, #4]
   1fcb8:	ldr	r1, [sp]
   1fcbc:	str	r0, [r1, #16]
   1fcc0:	ldr	r0, [fp, #-4]
   1fcc4:	ldr	r1, [sp]
   1fcc8:	bl	1fcd4 <rb_dictionary_link>
   1fccc:	mov	sp, fp
   1fcd0:	pop	{fp, pc}

0001fcd4 <rb_dictionary_link>:
   1fcd4:	push	{fp, lr}
   1fcd8:	mov	fp, sp
   1fcdc:	sub	sp, sp, #16
   1fce0:	str	r0, [fp, #-4]
   1fce4:	str	r1, [sp, #8]
   1fce8:	ldr	r0, [fp, #-4]
   1fcec:	ldrb	r1, [r0, #24]
   1fcf0:	bic	r1, r1, #1
   1fcf4:	movw	r2, #1
   1fcf8:	orr	r1, r1, r2
   1fcfc:	strb	r1, [r0, #24]
   1fd00:	ldr	r0, [fp, #-4]
   1fd04:	ldr	r1, [r0, #16]
   1fd08:	add	r1, r1, #1
   1fd0c:	str	r1, [r0, #16]
   1fd10:	ldr	r0, [fp, #-4]
   1fd14:	ldr	r0, [r0, #4]
   1fd18:	movw	r1, #0
   1fd1c:	cmp	r0, r1
   1fd20:	bne	1fd68 <rb_dictionary_link+0x94>
   1fd24:	ldr	r0, [sp, #8]
   1fd28:	movw	r1, #0
   1fd2c:	str	r1, [r0, #4]
   1fd30:	ldr	r0, [sp, #8]
   1fd34:	str	r1, [r0]
   1fd38:	ldr	r0, [sp, #8]
   1fd3c:	str	r1, [r0, #8]
   1fd40:	ldr	r0, [sp, #8]
   1fd44:	str	r1, [r0, #12]
   1fd48:	ldr	r0, [sp, #8]
   1fd4c:	ldr	r1, [fp, #-4]
   1fd50:	str	r0, [r1, #4]
   1fd54:	ldr	r1, [fp, #-4]
   1fd58:	str	r0, [r1, #12]
   1fd5c:	ldr	r1, [fp, #-4]
   1fd60:	str	r0, [r1, #8]
   1fd64:	b	1ff78 <rb_dictionary_link+0x2a4>
   1fd68:	ldr	r0, [fp, #-4]
   1fd6c:	ldr	r1, [sp, #8]
   1fd70:	ldr	r1, [r1, #20]
   1fd74:	bl	1fa24 <rb_dictionary_retune>
   1fd78:	ldr	r0, [fp, #-4]
   1fd7c:	ldr	r0, [r0]
   1fd80:	ldr	r1, [sp, #8]
   1fd84:	ldr	r1, [r1, #20]
   1fd88:	ldr	r2, [fp, #-4]
   1fd8c:	ldr	r2, [r2, #4]
   1fd90:	ldr	r2, [r2, #20]
   1fd94:	str	r0, [sp]
   1fd98:	mov	r0, r1
   1fd9c:	mov	r1, r2
   1fda0:	ldr	r2, [sp]
   1fda4:	blx	r2
   1fda8:	str	r0, [sp, #4]
   1fdac:	cmp	r0, #0
   1fdb0:	bge	1fe64 <rb_dictionary_link+0x190>
   1fdb4:	ldr	r0, [fp, #-4]
   1fdb8:	ldr	r0, [r0, #4]
   1fdbc:	ldr	r0, [r0]
   1fdc0:	ldr	r1, [sp, #8]
   1fdc4:	str	r0, [r1]
   1fdc8:	ldr	r0, [fp, #-4]
   1fdcc:	ldr	r0, [r0, #4]
   1fdd0:	ldr	r1, [sp, #8]
   1fdd4:	str	r0, [r1, #4]
   1fdd8:	ldr	r0, [fp, #-4]
   1fddc:	ldr	r0, [r0, #4]
   1fde0:	movw	r1, #0
   1fde4:	str	r1, [r0]
   1fde8:	ldr	r0, [fp, #-4]
   1fdec:	ldr	r0, [r0, #4]
   1fdf0:	ldr	r0, [r0, #8]
   1fdf4:	cmp	r0, r1
   1fdf8:	beq	1fe14 <rb_dictionary_link+0x140>
   1fdfc:	ldr	r0, [sp, #8]
   1fe00:	ldr	r1, [fp, #-4]
   1fe04:	ldr	r1, [r1, #4]
   1fe08:	ldr	r1, [r1, #8]
   1fe0c:	str	r0, [r1, #12]
   1fe10:	b	1fe20 <rb_dictionary_link+0x14c>
   1fe14:	ldr	r0, [sp, #8]
   1fe18:	ldr	r1, [fp, #-4]
   1fe1c:	str	r0, [r1, #8]
   1fe20:	ldr	r0, [fp, #-4]
   1fe24:	ldr	r0, [r0, #4]
   1fe28:	ldr	r0, [r0, #8]
   1fe2c:	ldr	r1, [sp, #8]
   1fe30:	str	r0, [r1, #8]
   1fe34:	ldr	r0, [fp, #-4]
   1fe38:	ldr	r0, [r0, #4]
   1fe3c:	ldr	r1, [sp, #8]
   1fe40:	str	r0, [r1, #12]
   1fe44:	ldr	r0, [sp, #8]
   1fe48:	ldr	r1, [fp, #-4]
   1fe4c:	ldr	r1, [r1, #4]
   1fe50:	str	r0, [r1, #8]
   1fe54:	ldr	r0, [sp, #8]
   1fe58:	ldr	r1, [fp, #-4]
   1fe5c:	str	r0, [r1, #4]
   1fe60:	b	1ff74 <rb_dictionary_link+0x2a0>
   1fe64:	ldr	r0, [sp, #4]
   1fe68:	cmp	r0, #0
   1fe6c:	ble	1ff20 <rb_dictionary_link+0x24c>
   1fe70:	ldr	r0, [fp, #-4]
   1fe74:	ldr	r0, [r0, #4]
   1fe78:	ldr	r0, [r0, #4]
   1fe7c:	ldr	r1, [sp, #8]
   1fe80:	str	r0, [r1, #4]
   1fe84:	ldr	r0, [fp, #-4]
   1fe88:	ldr	r0, [r0, #4]
   1fe8c:	ldr	r1, [sp, #8]
   1fe90:	str	r0, [r1]
   1fe94:	ldr	r0, [fp, #-4]
   1fe98:	ldr	r0, [r0, #4]
   1fe9c:	movw	r1, #0
   1fea0:	str	r1, [r0, #4]
   1fea4:	ldr	r0, [fp, #-4]
   1fea8:	ldr	r0, [r0, #4]
   1feac:	ldr	r0, [r0, #12]
   1feb0:	cmp	r0, r1
   1feb4:	beq	1fed0 <rb_dictionary_link+0x1fc>
   1feb8:	ldr	r0, [sp, #8]
   1febc:	ldr	r1, [fp, #-4]
   1fec0:	ldr	r1, [r1, #4]
   1fec4:	ldr	r1, [r1, #12]
   1fec8:	str	r0, [r1, #8]
   1fecc:	b	1fedc <rb_dictionary_link+0x208>
   1fed0:	ldr	r0, [sp, #8]
   1fed4:	ldr	r1, [fp, #-4]
   1fed8:	str	r0, [r1, #12]
   1fedc:	ldr	r0, [fp, #-4]
   1fee0:	ldr	r0, [r0, #4]
   1fee4:	ldr	r0, [r0, #12]
   1fee8:	ldr	r1, [sp, #8]
   1feec:	str	r0, [r1, #12]
   1fef0:	ldr	r0, [fp, #-4]
   1fef4:	ldr	r0, [r0, #4]
   1fef8:	ldr	r1, [sp, #8]
   1fefc:	str	r0, [r1, #8]
   1ff00:	ldr	r0, [sp, #8]
   1ff04:	ldr	r1, [fp, #-4]
   1ff08:	ldr	r1, [r1, #4]
   1ff0c:	str	r0, [r1, #12]
   1ff10:	ldr	r0, [sp, #8]
   1ff14:	ldr	r1, [fp, #-4]
   1ff18:	str	r0, [r1, #4]
   1ff1c:	b	1ff70 <rb_dictionary_link+0x29c>
   1ff20:	ldr	r0, [sp, #8]
   1ff24:	ldr	r0, [r0, #20]
   1ff28:	ldr	r1, [fp, #-4]
   1ff2c:	ldr	r1, [r1, #4]
   1ff30:	str	r0, [r1, #20]
   1ff34:	ldr	r0, [sp, #8]
   1ff38:	ldr	r0, [r0, #16]
   1ff3c:	ldr	r1, [fp, #-4]
   1ff40:	ldr	r1, [r1, #4]
   1ff44:	str	r0, [r1, #16]
   1ff48:	ldr	r0, [fp, #-4]
   1ff4c:	ldr	r1, [r0, #16]
   1ff50:	mvn	r2, #0
   1ff54:	add	r1, r1, r2
   1ff58:	str	r1, [r0, #16]
   1ff5c:	ldr	r0, [sp, #8]
   1ff60:	bl	1f5f0 <rb_free>
   1ff64:	ldr	r0, [fp, #-4]
   1ff68:	ldr	r0, [r0, #4]
   1ff6c:	str	r0, [sp, #8]
   1ff70:	b	1ff74 <rb_dictionary_link+0x2a0>
   1ff74:	b	1ff78 <rb_dictionary_link+0x2a4>
   1ff78:	ldr	r0, [sp, #8]
   1ff7c:	mov	sp, fp
   1ff80:	pop	{fp, pc}

0001ff84 <rb_dictionary_delete>:
   1ff84:	push	{fp, lr}
   1ff88:	mov	fp, sp
   1ff8c:	sub	sp, sp, #24
   1ff90:	str	r0, [fp, #-8]
   1ff94:	str	r1, [sp, #12]
   1ff98:	ldr	r0, [fp, #-8]
   1ff9c:	ldr	r1, [sp, #12]
   1ffa0:	bl	53f8 <rb_dictionary_find@plt>
   1ffa4:	str	r0, [sp, #8]
   1ffa8:	ldr	r0, [sp, #8]
   1ffac:	movw	r1, #0
   1ffb0:	cmp	r0, r1
   1ffb4:	bne	1ffc4 <rb_dictionary_delete+0x40>
   1ffb8:	movw	r0, #0
   1ffbc:	str	r0, [fp, #-4]
   1ffc0:	b	1ffe8 <rb_dictionary_delete+0x64>
   1ffc4:	ldr	r0, [sp, #8]
   1ffc8:	ldr	r0, [r0, #16]
   1ffcc:	str	r0, [sp, #4]
   1ffd0:	ldr	r0, [fp, #-8]
   1ffd4:	bl	1fff4 <rb_dictionary_unlink_root>
   1ffd8:	ldr	r0, [sp, #8]
   1ffdc:	bl	1f5f0 <rb_free>
   1ffe0:	ldr	r0, [sp, #4]
   1ffe4:	str	r0, [fp, #-4]
   1ffe8:	ldr	r0, [fp, #-4]
   1ffec:	mov	sp, fp
   1fff0:	pop	{fp, pc}

0001fff4 <rb_dictionary_unlink_root>:
   1fff4:	sub	sp, sp, #20
   1fff8:	str	r0, [sp, #16]
   1fffc:	ldr	r0, [sp, #16]
   20000:	ldrb	r1, [r0, #24]
   20004:	bic	r1, r1, #1
   20008:	movw	r2, #1
   2000c:	orr	r1, r1, r2
   20010:	strb	r1, [r0, #24]
   20014:	ldr	r0, [sp, #16]
   20018:	ldr	r0, [r0, #4]
   2001c:	str	r0, [sp, #12]
   20020:	ldr	r0, [sp, #12]
   20024:	movw	r1, #0
   20028:	cmp	r0, r1
   2002c:	bne	20034 <rb_dictionary_unlink_root+0x40>
   20030:	b	20230 <rb_dictionary_unlink_root+0x23c>
   20034:	ldr	r0, [sp, #16]
   20038:	ldr	r0, [r0, #4]
   2003c:	ldr	r0, [r0]
   20040:	movw	r1, #0
   20044:	cmp	r0, r1
   20048:	bne	20064 <rb_dictionary_unlink_root+0x70>
   2004c:	ldr	r0, [sp, #16]
   20050:	ldr	r0, [r0, #4]
   20054:	ldr	r0, [r0, #4]
   20058:	ldr	r1, [sp, #16]
   2005c:	str	r0, [r1, #4]
   20060:	b	20184 <rb_dictionary_unlink_root+0x190>
   20064:	ldr	r0, [sp, #16]
   20068:	ldr	r0, [r0, #4]
   2006c:	ldr	r0, [r0, #4]
   20070:	movw	r1, #0
   20074:	cmp	r0, r1
   20078:	bne	20094 <rb_dictionary_unlink_root+0xa0>
   2007c:	ldr	r0, [sp, #16]
   20080:	ldr	r0, [r0, #4]
   20084:	ldr	r0, [r0]
   20088:	ldr	r1, [sp, #16]
   2008c:	str	r0, [r1, #4]
   20090:	b	20180 <rb_dictionary_unlink_root+0x18c>
   20094:	ldr	r0, [sp, #12]
   20098:	ldr	r0, [r0, #12]
   2009c:	str	r0, [sp, #8]
   200a0:	ldr	r0, [sp, #8]
   200a4:	ldr	r1, [sp, #12]
   200a8:	ldr	r1, [r1, #4]
   200ac:	cmp	r0, r1
   200b0:	bne	200d8 <rb_dictionary_unlink_root+0xe4>
   200b4:	ldr	r0, [sp, #8]
   200b8:	ldr	r1, [sp, #16]
   200bc:	str	r0, [r1, #4]
   200c0:	ldr	r0, [sp, #12]
   200c4:	ldr	r0, [r0]
   200c8:	ldr	r1, [sp, #16]
   200cc:	ldr	r1, [r1, #4]
   200d0:	str	r0, [r1]
   200d4:	b	2017c <rb_dictionary_unlink_root+0x188>
   200d8:	ldr	r0, [sp, #12]
   200dc:	ldr	r0, [r0, #4]
   200e0:	str	r0, [sp, #4]
   200e4:	ldr	r0, [sp, #4]
   200e8:	ldr	r0, [r0]
   200ec:	movw	r1, #0
   200f0:	cmp	r0, r1
   200f4:	movw	r0, #0
   200f8:	str	r0, [sp]
   200fc:	beq	2011c <rb_dictionary_unlink_root+0x128>
   20100:	ldr	r0, [sp, #4]
   20104:	ldr	r0, [r0]
   20108:	ldr	r1, [sp, #8]
   2010c:	cmp	r0, r1
   20110:	movw	r0, #0
   20114:	movne	r0, #1
   20118:	str	r0, [sp]
   2011c:	ldr	r0, [sp]
   20120:	tst	r0, #1
   20124:	beq	20138 <rb_dictionary_unlink_root+0x144>
   20128:	ldr	r0, [sp, #4]
   2012c:	ldr	r0, [r0]
   20130:	str	r0, [sp, #4]
   20134:	b	200e4 <rb_dictionary_unlink_root+0xf0>
   20138:	ldr	r0, [sp, #8]
   2013c:	ldr	r0, [r0, #4]
   20140:	ldr	r1, [sp, #4]
   20144:	str	r0, [r1]
   20148:	ldr	r0, [sp, #8]
   2014c:	ldr	r1, [sp, #16]
   20150:	str	r0, [r1, #4]
   20154:	ldr	r0, [sp, #12]
   20158:	ldr	r0, [r0]
   2015c:	ldr	r1, [sp, #16]
   20160:	ldr	r1, [r1, #4]
   20164:	str	r0, [r1]
   20168:	ldr	r0, [sp, #12]
   2016c:	ldr	r0, [r0, #4]
   20170:	ldr	r1, [sp, #16]
   20174:	ldr	r1, [r1, #4]
   20178:	str	r0, [r1, #4]
   2017c:	b	20180 <rb_dictionary_unlink_root+0x18c>
   20180:	b	20184 <rb_dictionary_unlink_root+0x190>
   20184:	ldr	r0, [sp, #12]
   20188:	ldr	r0, [r0, #8]
   2018c:	movw	r1, #0
   20190:	cmp	r0, r1
   20194:	beq	201ac <rb_dictionary_unlink_root+0x1b8>
   20198:	ldr	r0, [sp, #12]
   2019c:	ldr	r0, [r0, #12]
   201a0:	ldr	r1, [sp, #12]
   201a4:	ldr	r1, [r1, #8]
   201a8:	str	r0, [r1, #12]
   201ac:	ldr	r0, [sp, #16]
   201b0:	ldr	r0, [r0, #8]
   201b4:	ldr	r1, [sp, #12]
   201b8:	cmp	r0, r1
   201bc:	bne	201d0 <rb_dictionary_unlink_root+0x1dc>
   201c0:	ldr	r0, [sp, #12]
   201c4:	ldr	r0, [r0, #12]
   201c8:	ldr	r1, [sp, #16]
   201cc:	str	r0, [r1, #8]
   201d0:	ldr	r0, [sp, #12]
   201d4:	ldr	r0, [r0, #12]
   201d8:	movw	r1, #0
   201dc:	cmp	r0, r1
   201e0:	beq	201f8 <rb_dictionary_unlink_root+0x204>
   201e4:	ldr	r0, [sp, #12]
   201e8:	ldr	r0, [r0, #8]
   201ec:	ldr	r1, [sp, #12]
   201f0:	ldr	r1, [r1, #12]
   201f4:	str	r0, [r1, #8]
   201f8:	ldr	r0, [sp, #16]
   201fc:	ldr	r0, [r0, #12]
   20200:	ldr	r1, [sp, #12]
   20204:	cmp	r0, r1
   20208:	bne	2021c <rb_dictionary_unlink_root+0x228>
   2020c:	ldr	r0, [sp, #12]
   20210:	ldr	r0, [r0, #8]
   20214:	ldr	r1, [sp, #16]
   20218:	str	r0, [r1, #12]
   2021c:	ldr	r0, [sp, #16]
   20220:	ldr	r1, [r0, #16]
   20224:	mvn	r2, #0
   20228:	add	r1, r1, r2
   2022c:	str	r1, [r0, #16]
   20230:	add	sp, sp, #20
   20234:	bx	lr

00020238 <rb_dictionary_retrieve>:
   20238:	push	{fp, lr}
   2023c:	mov	fp, sp
   20240:	sub	sp, sp, #16
   20244:	str	r0, [sp, #8]
   20248:	str	r1, [sp, #4]
   2024c:	ldr	r0, [sp, #8]
   20250:	ldr	r1, [sp, #4]
   20254:	bl	53f8 <rb_dictionary_find@plt>
   20258:	str	r0, [sp]
   2025c:	ldr	r0, [sp]
   20260:	movw	r1, #0
   20264:	cmp	r0, r1
   20268:	beq	2027c <rb_dictionary_retrieve+0x44>
   2026c:	ldr	r0, [sp]
   20270:	ldr	r0, [r0, #16]
   20274:	str	r0, [fp, #-4]
   20278:	b	20284 <rb_dictionary_retrieve+0x4c>
   2027c:	movw	r0, #0
   20280:	str	r0, [fp, #-4]
   20284:	ldr	r0, [fp, #-4]
   20288:	mov	sp, fp
   2028c:	pop	{fp, pc}

00020290 <rb_dictionary_size>:
   20290:	sub	sp, sp, #4
   20294:	str	r0, [sp]
   20298:	ldr	r0, [sp]
   2029c:	ldr	r0, [r0, #16]
   202a0:	add	sp, sp, #4
   202a4:	bx	lr

000202a8 <rb_dictionary_stats>:
   202a8:	push	{r4, r5, r6, sl, fp, lr}
   202ac:	add	fp, sp, #16
   202b0:	sub	sp, sp, #320	; 0x140
   202b4:	str	r0, [fp, #-20]	; 0xffffffec
   202b8:	str	r1, [fp, #-24]	; 0xffffffe8
   202bc:	str	r2, [fp, #-28]	; 0xffffffe4
   202c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   202c4:	ldr	r0, [r0, #16]
   202c8:	cmp	r0, #0
   202cc:	beq	2036c <rb_dictionary_stats+0xc4>
   202d0:	movw	r0, #0
   202d4:	str	r0, [sp, #44]	; 0x2c
   202d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   202dc:	ldr	r1, [r1, #4]
   202e0:	str	r0, [sp, #40]	; 0x28
   202e4:	mov	r0, r1
   202e8:	ldr	r1, [sp, #40]	; 0x28
   202ec:	add	r2, sp, #44	; 0x2c
   202f0:	bl	20400 <stats_recurse>
   202f4:	ldr	r1, [pc, #252]	; 203f8 <rb_dictionary_stats+0x150>
   202f8:	add	r2, pc, r1
   202fc:	ldr	r1, [pc, #248]	; 203fc <rb_dictionary_stats+0x154>
   20300:	add	r1, pc, r1
   20304:	add	r3, sp, #52	; 0x34
   20308:	str	r0, [sp, #48]	; 0x30
   2030c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20310:	ldr	r0, [r0, #20]
   20314:	ldr	ip, [fp, #-20]	; 0xffffffec
   20318:	ldr	ip, [ip, #16]
   2031c:	ldr	lr, [sp, #48]	; 0x30
   20320:	ldr	r4, [sp, #48]	; 0x30
   20324:	ldr	r5, [fp, #-20]	; 0xffffffec
   20328:	ldr	r5, [r5, #16]
   2032c:	udiv	r4, r4, r5
   20330:	ldr	r5, [sp, #44]	; 0x2c
   20334:	str	r0, [sp, #36]	; 0x24
   20338:	mov	r0, r3
   2033c:	movw	r3, #256	; 0x100
   20340:	str	r1, [sp, #32]
   20344:	mov	r1, r3
   20348:	ldr	r3, [sp, #36]	; 0x24
   2034c:	ldr	r6, [sp, #32]
   20350:	str	r6, [sp]
   20354:	str	ip, [sp, #4]
   20358:	str	lr, [sp, #8]
   2035c:	str	r4, [sp, #12]
   20360:	str	r5, [sp, #16]
   20364:	bl	5584 <snprintf@plt>
   20368:	b	203c8 <rb_dictionary_stats+0x120>
   2036c:	ldr	r0, [pc, #120]	; 203ec <rb_dictionary_stats+0x144>
   20370:	add	r2, pc, r0
   20374:	ldr	r0, [pc, #116]	; 203f0 <rb_dictionary_stats+0x148>
   20378:	add	r0, pc, r0
   2037c:	ldr	r1, [pc, #112]	; 203f4 <rb_dictionary_stats+0x14c>
   20380:	add	r1, pc, r1
   20384:	add	r3, sp, #52	; 0x34
   20388:	ldr	ip, [fp, #-20]	; 0xffffffec
   2038c:	ldr	ip, [ip, #20]
   20390:	str	r0, [sp, #28]
   20394:	mov	r0, r3
   20398:	movw	r3, #256	; 0x100
   2039c:	str	r1, [sp, #24]
   203a0:	mov	r1, r3
   203a4:	mov	r3, ip
   203a8:	ldr	ip, [sp, #28]
   203ac:	str	ip, [sp]
   203b0:	ldr	lr, [sp, #24]
   203b4:	str	lr, [sp, #4]
   203b8:	str	lr, [sp, #8]
   203bc:	str	lr, [sp, #12]
   203c0:	str	lr, [sp, #16]
   203c4:	bl	5584 <snprintf@plt>
   203c8:	add	r0, sp, #52	; 0x34
   203cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   203d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   203d4:	str	r1, [sp, #20]
   203d8:	mov	r1, r2
   203dc:	ldr	r2, [sp, #20]
   203e0:	blx	r2
   203e4:	sub	sp, fp, #16
   203e8:	pop	{r4, r5, r6, sl, fp, pc}
   203ec:	.word	0x00003781
   203f0:	.word	0x00003774
   203f4:	.word	0x00002942
   203f8:	.word	0x000037d0
   203fc:	.word	0x000037ec

00020400 <stats_recurse>:
   20400:	push	{fp, lr}
   20404:	mov	fp, sp
   20408:	sub	sp, sp, #16
   2040c:	str	r0, [fp, #-4]
   20410:	str	r1, [sp, #8]
   20414:	str	r2, [sp, #4]
   20418:	ldr	r0, [sp, #8]
   2041c:	ldr	r1, [sp, #4]
   20420:	ldr	r1, [r1]
   20424:	cmp	r0, r1
   20428:	ble	20438 <stats_recurse+0x38>
   2042c:	ldr	r0, [sp, #8]
   20430:	ldr	r1, [sp, #4]
   20434:	str	r0, [r1]
   20438:	ldr	r0, [sp, #8]
   2043c:	str	r0, [sp]
   20440:	ldr	r0, [fp, #-4]
   20444:	movw	r1, #0
   20448:	cmp	r0, r1
   2044c:	beq	20488 <stats_recurse+0x88>
   20450:	ldr	r0, [fp, #-4]
   20454:	ldr	r0, [r0]
   20458:	movw	r1, #0
   2045c:	cmp	r0, r1
   20460:	beq	20488 <stats_recurse+0x88>
   20464:	ldr	r0, [fp, #-4]
   20468:	ldr	r0, [r0]
   2046c:	ldr	r1, [sp, #8]
   20470:	add	r1, r1, #1
   20474:	ldr	r2, [sp, #4]
   20478:	bl	20400 <stats_recurse>
   2047c:	ldr	r1, [sp]
   20480:	add	r0, r1, r0
   20484:	str	r0, [sp]
   20488:	ldr	r0, [fp, #-4]
   2048c:	movw	r1, #0
   20490:	cmp	r0, r1
   20494:	beq	204d0 <stats_recurse+0xd0>
   20498:	ldr	r0, [fp, #-4]
   2049c:	ldr	r0, [r0, #4]
   204a0:	movw	r1, #0
   204a4:	cmp	r0, r1
   204a8:	beq	204d0 <stats_recurse+0xd0>
   204ac:	ldr	r0, [fp, #-4]
   204b0:	ldr	r0, [r0, #4]
   204b4:	ldr	r1, [sp, #8]
   204b8:	add	r1, r1, #1
   204bc:	ldr	r2, [sp, #4]
   204c0:	bl	20400 <stats_recurse>
   204c4:	ldr	r1, [sp]
   204c8:	add	r0, r1, r0
   204cc:	str	r0, [sp]
   204d0:	ldr	r0, [sp]
   204d4:	mov	sp, fp
   204d8:	pop	{fp, pc}

000204dc <rb_dictionary_stats_walk>:
   204dc:	push	{fp, lr}
   204e0:	mov	fp, sp
   204e4:	sub	sp, sp, #16
   204e8:	ldr	r2, [pc, #76]	; 2053c <rb_dictionary_stats_walk+0x60>
   204ec:	add	r2, pc, r2
   204f0:	str	r0, [fp, #-4]
   204f4:	str	r1, [sp, #8]
   204f8:	ldr	r0, [r2]
   204fc:	str	r0, [sp, #4]
   20500:	ldr	r0, [sp, #4]
   20504:	movw	r1, #0
   20508:	cmp	r0, r1
   2050c:	beq	20534 <rb_dictionary_stats_walk+0x58>
   20510:	ldr	r0, [sp, #4]
   20514:	ldr	r0, [r0]
   20518:	ldr	r1, [fp, #-4]
   2051c:	ldr	r2, [sp, #8]
   20520:	bl	5368 <rb_dictionary_stats@plt>
   20524:	ldr	r0, [sp, #4]
   20528:	ldr	r0, [r0, #8]
   2052c:	str	r0, [sp, #4]
   20530:	b	20500 <rb_dictionary_stats_walk+0x24>
   20534:	mov	sp, fp
   20538:	pop	{fp, pc}
   2053c:	.word	0x00031f10

00020540 <rb_radixtree_create>:
   20540:	push	{fp, lr}
   20544:	mov	fp, sp
   20548:	sub	sp, sp, #16
   2054c:	str	r0, [fp, #-4]
   20550:	str	r1, [sp, #8]
   20554:	movw	r0, #28
   20558:	bl	205b0 <rb_malloc>
   2055c:	str	r0, [sp, #4]
   20560:	ldr	r0, [sp, #8]
   20564:	ldr	r1, [sp, #4]
   20568:	str	r0, [r1]
   2056c:	ldr	r0, [fp, #-4]
   20570:	bl	20608 <rb_strdup>
   20574:	ldr	r1, [pc, #48]	; 205ac <rb_radixtree_create+0x6c>
   20578:	ldr	r2, [pc, r1]
   2057c:	ldr	r1, [sp, #4]
   20580:	str	r0, [r1, #12]
   20584:	ldr	r0, [sp, #4]
   20588:	movw	r1, #0
   2058c:	str	r1, [r0, #4]
   20590:	ldr	r0, [sp, #4]
   20594:	ldr	r1, [sp, #4]
   20598:	add	r1, r1, #16
   2059c:	bl	20678 <rb_dlinkAdd>
   205a0:	ldr	r0, [sp, #4]
   205a4:	mov	sp, fp
   205a8:	pop	{fp, pc}
   205ac:	.word	0x00013e7c

000205b0 <rb_malloc>:
   205b0:	push	{fp, lr}
   205b4:	mov	fp, sp
   205b8:	sub	sp, sp, #8
   205bc:	str	r0, [sp, #4]
   205c0:	ldr	r1, [sp, #4]
   205c4:	movw	r0, #1
   205c8:	bl	4fb4 <calloc@plt>
   205cc:	str	r0, [sp]
   205d0:	ldr	r0, [sp]
   205d4:	movw	r1, #0
   205d8:	cmp	r0, r1
   205dc:	movw	r0, #0
   205e0:	moveq	r0, #1
   205e4:	mvn	r1, #0
   205e8:	eor	r0, r0, r1
   205ec:	eor	r0, r0, r1
   205f0:	tst	r0, #1
   205f4:	beq	205fc <rb_malloc+0x4c>
   205f8:	bl	5350 <rb_outofmemory@plt>
   205fc:	ldr	r0, [sp]
   20600:	mov	sp, fp
   20604:	pop	{fp, pc}

00020608 <rb_strdup>:
   20608:	push	{fp, lr}
   2060c:	mov	fp, sp
   20610:	sub	sp, sp, #16
   20614:	str	r0, [fp, #-4]
   20618:	ldr	r0, [fp, #-4]
   2061c:	bl	51b8 <strlen@plt>
   20620:	add	r0, r0, #1
   20624:	bl	5374 <malloc@plt>
   20628:	str	r0, [sp, #8]
   2062c:	ldr	r0, [sp, #8]
   20630:	movw	r1, #0
   20634:	cmp	r0, r1
   20638:	movw	r0, #0
   2063c:	moveq	r0, #1
   20640:	mvn	r1, #0
   20644:	eor	r0, r0, r1
   20648:	eor	r0, r0, r1
   2064c:	tst	r0, #1
   20650:	beq	20658 <rb_strdup+0x50>
   20654:	bl	5350 <rb_outofmemory@plt>
   20658:	ldr	r0, [sp, #8]
   2065c:	ldr	r1, [fp, #-4]
   20660:	bl	5254 <strcpy@plt>
   20664:	ldr	r1, [sp, #8]
   20668:	str	r0, [sp, #4]
   2066c:	mov	r0, r1
   20670:	mov	sp, fp
   20674:	pop	{fp, pc}

00020678 <rb_dlinkAdd>:
   20678:	sub	sp, sp, #12
   2067c:	str	r0, [sp, #8]
   20680:	str	r1, [sp, #4]
   20684:	str	r2, [sp]
   20688:	ldr	r0, [sp, #8]
   2068c:	ldr	r1, [sp, #4]
   20690:	str	r0, [r1]
   20694:	ldr	r0, [sp, #4]
   20698:	movw	r1, #0
   2069c:	str	r1, [r0, #4]
   206a0:	ldr	r0, [sp]
   206a4:	ldr	r0, [r0]
   206a8:	ldr	r2, [sp, #4]
   206ac:	str	r0, [r2, #8]
   206b0:	ldr	r0, [sp]
   206b4:	ldr	r0, [r0]
   206b8:	cmp	r0, r1
   206bc:	beq	206d4 <rb_dlinkAdd+0x5c>
   206c0:	ldr	r0, [sp, #4]
   206c4:	ldr	r1, [sp]
   206c8:	ldr	r1, [r1]
   206cc:	str	r0, [r1, #4]
   206d0:	b	206f8 <rb_dlinkAdd+0x80>
   206d4:	ldr	r0, [sp]
   206d8:	ldr	r0, [r0, #4]
   206dc:	movw	r1, #0
   206e0:	cmp	r0, r1
   206e4:	bne	206f4 <rb_dlinkAdd+0x7c>
   206e8:	ldr	r0, [sp, #4]
   206ec:	ldr	r1, [sp]
   206f0:	str	r0, [r1, #4]
   206f4:	b	206f8 <rb_dlinkAdd+0x80>
   206f8:	ldr	r0, [sp, #4]
   206fc:	ldr	r1, [sp]
   20700:	str	r0, [r1]
   20704:	ldr	r0, [sp]
   20708:	ldr	r1, [r0, #8]
   2070c:	add	r1, r1, #1
   20710:	str	r1, [r0, #8]
   20714:	add	sp, sp, #12
   20718:	bx	lr

0002071c <rb_radixtree_destroy>:
   2071c:	push	{fp, lr}
   20720:	mov	fp, sp
   20724:	sub	sp, sp, #64	; 0x40
   20728:	str	r0, [fp, #-4]
   2072c:	str	r1, [fp, #-8]
   20730:	str	r2, [fp, #-12]
   20734:	ldr	r0, [fp, #-4]
   20738:	add	r1, sp, #12
   2073c:	bl	4dc8 <rb_radixtree_foreach_start@plt>
   20740:	ldr	r0, [fp, #-4]
   20744:	add	r1, sp, #12
   20748:	bl	517c <rb_radixtree_foreach_cur@plt>
   2074c:	str	r0, [sp, #4]
   20750:	movw	r1, #0
   20754:	cmp	r0, r1
   20758:	beq	207c4 <rb_radixtree_destroy+0xa8>
   2075c:	ldr	r0, [sp, #20]
   20760:	str	r0, [sp, #8]
   20764:	ldr	r0, [fp, #-8]
   20768:	movw	r1, #0
   2076c:	cmp	r0, r1
   20770:	beq	207a4 <rb_radixtree_destroy+0x88>
   20774:	ldr	r0, [fp, #-8]
   20778:	ldr	r1, [sp, #8]
   2077c:	ldr	r1, [r1, #8]
   20780:	ldr	r2, [sp, #8]
   20784:	ldr	r2, [r2, #4]
   20788:	ldr	r3, [fp, #-12]
   2078c:	str	r0, [sp]
   20790:	mov	r0, r1
   20794:	mov	r1, r2
   20798:	mov	r2, r3
   2079c:	ldr	r3, [sp]
   207a0:	blx	r3
   207a4:	ldr	r0, [fp, #-4]
   207a8:	ldr	r1, [sp, #8]
   207ac:	ldr	r1, [r1, #8]
   207b0:	bl	5698 <rb_radixtree_delete@plt>
   207b4:	ldr	r0, [fp, #-4]
   207b8:	add	r1, sp, #12
   207bc:	bl	4e04 <rb_radixtree_foreach_next@plt>
   207c0:	b	20740 <rb_radixtree_destroy+0x24>
   207c4:	ldr	r0, [pc, #40]	; 207f4 <rb_radixtree_destroy+0xd8>
   207c8:	ldr	r1, [pc, r0]
   207cc:	ldr	r0, [fp, #-4]
   207d0:	add	r0, r0, #16
   207d4:	bl	20b54 <rb_dlinkDelete>
   207d8:	ldr	r0, [fp, #-4]
   207dc:	ldr	r0, [r0, #12]
   207e0:	bl	20c08 <rb_free>
   207e4:	ldr	r0, [fp, #-4]
   207e8:	bl	20c08 <rb_free>
   207ec:	mov	sp, fp
   207f0:	pop	{fp, pc}
   207f4:	.word	0x00013c2c

000207f8 <rb_radixtree_foreach_start>:
   207f8:	push	{fp, lr}
   207fc:	mov	fp, sp
   20800:	sub	sp, sp, #8
   20804:	str	r0, [sp, #4]
   20808:	str	r1, [sp]
   2080c:	ldr	r0, [sp, #4]
   20810:	movw	r1, #0
   20814:	cmp	r0, r1
   20818:	bne	20820 <rb_radixtree_foreach_start+0x28>
   2081c:	b	2088c <rb_radixtree_foreach_start+0x94>
   20820:	ldr	r0, [sp, #4]
   20824:	ldr	r0, [r0, #4]
   20828:	movw	r1, #0
   2082c:	cmp	r0, r1
   20830:	beq	2084c <rb_radixtree_foreach_start+0x54>
   20834:	ldr	r0, [sp, #4]
   20838:	ldr	r0, [r0, #4]
   2083c:	bl	21020 <first_leaf>
   20840:	ldr	r1, [sp]
   20844:	str	r0, [r1, #12]
   20848:	b	20858 <rb_radixtree_foreach_start+0x60>
   2084c:	ldr	r0, [sp]
   20850:	movw	r1, #0
   20854:	str	r1, [r0, #12]
   20858:	ldr	r0, [sp]
   2085c:	ldr	r0, [r0, #12]
   20860:	ldr	r1, [sp]
   20864:	str	r0, [r1, #8]
   20868:	ldr	r0, [sp]
   2086c:	ldr	r0, [r0, #12]
   20870:	movw	r1, #0
   20874:	cmp	r0, r1
   20878:	bne	20880 <rb_radixtree_foreach_start+0x88>
   2087c:	b	2088c <rb_radixtree_foreach_start+0x94>
   20880:	ldr	r0, [sp, #4]
   20884:	ldr	r1, [sp]
   20888:	bl	4e04 <rb_radixtree_foreach_next@plt>
   2088c:	mov	sp, fp
   20890:	pop	{fp, pc}

00020894 <rb_radixtree_foreach_cur>:
   20894:	sub	sp, sp, #16
   20898:	str	r0, [sp, #8]
   2089c:	str	r1, [sp, #4]
   208a0:	ldr	r0, [sp, #8]
   208a4:	movw	r1, #0
   208a8:	cmp	r0, r1
   208ac:	bne	208bc <rb_radixtree_foreach_cur+0x28>
   208b0:	movw	r0, #0
   208b4:	str	r0, [sp, #12]
   208b8:	b	208f8 <rb_radixtree_foreach_cur+0x64>
   208bc:	ldr	r0, [sp, #4]
   208c0:	ldr	r0, [r0, #8]
   208c4:	movw	r1, #0
   208c8:	cmp	r0, r1
   208cc:	beq	208e4 <rb_radixtree_foreach_cur+0x50>
   208d0:	ldr	r0, [sp, #4]
   208d4:	ldr	r0, [r0, #8]
   208d8:	ldr	r0, [r0, #4]
   208dc:	str	r0, [sp]
   208e0:	b	208f0 <rb_radixtree_foreach_cur+0x5c>
   208e4:	movw	r0, #0
   208e8:	str	r0, [sp]
   208ec:	b	208f0 <rb_radixtree_foreach_cur+0x5c>
   208f0:	ldr	r0, [sp]
   208f4:	str	r0, [sp, #12]
   208f8:	ldr	r0, [sp, #12]
   208fc:	add	sp, sp, #16
   20900:	bx	lr

00020904 <rb_radixtree_delete>:
   20904:	push	{fp, lr}
   20908:	mov	fp, sp
   2090c:	sub	sp, sp, #24
   20910:	str	r0, [fp, #-8]
   20914:	str	r1, [sp, #12]
   20918:	ldr	r0, [fp, #-8]
   2091c:	ldr	r1, [sp, #12]
   20920:	movw	r2, #0
   20924:	bl	5548 <rb_radixtree_elem_find@plt>
   20928:	str	r0, [sp, #4]
   2092c:	ldr	r0, [sp, #4]
   20930:	movw	r1, #0
   20934:	cmp	r0, r1
   20938:	bne	20948 <rb_radixtree_delete+0x44>
   2093c:	movw	r0, #0
   20940:	str	r0, [fp, #-4]
   20944:	b	20968 <rb_radixtree_delete+0x64>
   20948:	ldr	r0, [sp, #4]
   2094c:	ldr	r0, [r0, #4]
   20950:	str	r0, [sp, #8]
   20954:	ldr	r0, [fp, #-8]
   20958:	ldr	r1, [sp, #4]
   2095c:	bl	4d68 <rb_radixtree_elem_delete@plt>
   20960:	ldr	r0, [sp, #8]
   20964:	str	r0, [fp, #-4]
   20968:	ldr	r0, [fp, #-4]
   2096c:	mov	sp, fp
   20970:	pop	{fp, pc}

00020974 <rb_radixtree_foreach_next>:
   20974:	push	{fp, lr}
   20978:	mov	fp, sp
   2097c:	sub	sp, sp, #32
   20980:	str	r0, [fp, #-4]
   20984:	str	r1, [fp, #-8]
   20988:	ldr	r0, [fp, #-4]
   2098c:	movw	r1, #0
   20990:	cmp	r0, r1
   20994:	bne	2099c <rb_radixtree_foreach_next+0x28>
   20998:	b	20b4c <rb_radixtree_foreach_next+0x1d8>
   2099c:	ldr	r0, [fp, #-8]
   209a0:	ldr	r0, [r0, #8]
   209a4:	movw	r1, #0
   209a8:	cmp	r0, r1
   209ac:	bne	209b4 <rb_radixtree_foreach_next+0x40>
   209b0:	b	20b4c <rb_radixtree_foreach_next+0x1d8>
   209b4:	ldr	r0, [fp, #-8]
   209b8:	ldr	r0, [r0, #12]
   209bc:	ldr	r1, [fp, #-8]
   209c0:	str	r0, [r1, #8]
   209c4:	ldr	r0, [fp, #-8]
   209c8:	ldr	r0, [r0, #12]
   209cc:	movw	r1, #0
   209d0:	cmp	r0, r1
   209d4:	bne	209dc <rb_radixtree_foreach_next+0x68>
   209d8:	b	20b4c <rb_radixtree_foreach_next+0x1d8>
   209dc:	ldr	r0, [fp, #-8]
   209e0:	ldr	r0, [r0, #12]
   209e4:	str	r0, [fp, #-12]
   209e8:	ldr	r0, [fp, #-12]
   209ec:	ldr	r0, [r0, #12]
   209f0:	str	r0, [sp, #16]
   209f4:	ldr	r0, [fp, #-12]
   209f8:	ldrb	r0, [r0, #16]
   209fc:	str	r0, [sp, #8]
   20a00:	ldr	r0, [sp, #16]
   20a04:	movw	r1, #0
   20a08:	cmp	r0, r1
   20a0c:	beq	20b40 <rb_radixtree_foreach_next+0x1cc>
   20a10:	b	20a14 <rb_radixtree_foreach_next+0xa0>
   20a14:	ldr	r0, [sp, #16]
   20a18:	add	r0, r0, #4
   20a1c:	ldr	r1, [sp, #8]
   20a20:	add	r2, r1, #1
   20a24:	str	r2, [sp, #8]
   20a28:	add	r0, r0, r1, lsl #2
   20a2c:	ldr	r0, [r0]
   20a30:	str	r0, [sp, #12]
   20a34:	ldr	r0, [sp, #12]
   20a38:	movw	r1, #0
   20a3c:	cmp	r0, r1
   20a40:	movw	r0, #0
   20a44:	str	r0, [sp, #4]
   20a48:	bne	20a60 <rb_radixtree_foreach_next+0xec>
   20a4c:	ldr	r0, [sp, #8]
   20a50:	cmp	r0, #16
   20a54:	movw	r0, #0
   20a58:	movlt	r0, #1
   20a5c:	str	r0, [sp, #4]
   20a60:	ldr	r0, [sp, #4]
   20a64:	tst	r0, #1
   20a68:	bne	20a14 <rb_radixtree_foreach_next+0xa0>
   20a6c:	ldr	r0, [sp, #12]
   20a70:	movw	r1, #0
   20a74:	cmp	r0, r1
   20a78:	beq	20af0 <rb_radixtree_foreach_next+0x17c>
   20a7c:	ldr	r0, [sp, #12]
   20a80:	ldr	r0, [r0]
   20a84:	cmn	r0, #1
   20a88:	bne	20adc <rb_radixtree_foreach_next+0x168>
   20a8c:	ldr	r0, [sp, #12]
   20a90:	ldr	r1, [fp, #-12]
   20a94:	cmp	r0, r1
   20a98:	beq	20ad8 <rb_radixtree_foreach_next+0x164>
   20a9c:	ldr	r0, [sp, #12]
   20aa0:	ldr	r0, [r0, #8]
   20aa4:	ldr	r1, [fp, #-12]
   20aa8:	ldr	r1, [r1, #8]
   20aac:	bl	56bc <strcmp@plt>
   20ab0:	cmp	r0, #0
   20ab4:	bge	20ac8 <rb_radixtree_foreach_next+0x154>
   20ab8:	ldr	r0, [fp, #-8]
   20abc:	movw	r1, #0
   20ac0:	str	r1, [r0, #12]
   20ac4:	b	20b4c <rb_radixtree_foreach_next+0x1d8>
   20ac8:	ldr	r0, [sp, #12]
   20acc:	ldr	r1, [fp, #-8]
   20ad0:	str	r0, [r1, #12]
   20ad4:	b	20b4c <rb_radixtree_foreach_next+0x1d8>
   20ad8:	b	20aec <rb_radixtree_foreach_next+0x178>
   20adc:	ldr	r0, [sp, #12]
   20ae0:	str	r0, [sp, #16]
   20ae4:	movw	r0, #0
   20ae8:	str	r0, [sp, #8]
   20aec:	b	20af0 <rb_radixtree_foreach_next+0x17c>
   20af0:	b	20af4 <rb_radixtree_foreach_next+0x180>
   20af4:	ldr	r0, [sp, #8]
   20af8:	cmp	r0, #16
   20afc:	blt	20b3c <rb_radixtree_foreach_next+0x1c8>
   20b00:	ldr	r0, [sp, #16]
   20b04:	ldrb	r0, [r0, #72]	; 0x48
   20b08:	str	r0, [sp, #8]
   20b0c:	ldr	r0, [sp, #16]
   20b10:	ldr	r0, [r0, #68]	; 0x44
   20b14:	str	r0, [sp, #16]
   20b18:	ldr	r0, [sp, #16]
   20b1c:	movw	r1, #0
   20b20:	cmp	r0, r1
   20b24:	bne	20b2c <rb_radixtree_foreach_next+0x1b8>
   20b28:	b	20b3c <rb_radixtree_foreach_next+0x1c8>
   20b2c:	ldr	r0, [sp, #8]
   20b30:	add	r0, r0, #1
   20b34:	str	r0, [sp, #8]
   20b38:	b	20af4 <rb_radixtree_foreach_next+0x180>
   20b3c:	b	20a00 <rb_radixtree_foreach_next+0x8c>
   20b40:	ldr	r0, [fp, #-8]
   20b44:	movw	r1, #0
   20b48:	str	r1, [r0, #12]
   20b4c:	mov	sp, fp
   20b50:	pop	{fp, pc}

00020b54 <rb_dlinkDelete>:
   20b54:	sub	sp, sp, #8
   20b58:	str	r0, [sp, #4]
   20b5c:	str	r1, [sp]
   20b60:	ldr	r0, [sp, #4]
   20b64:	ldr	r0, [r0, #8]
   20b68:	movw	r1, #0
   20b6c:	cmp	r0, r1
   20b70:	beq	20b8c <rb_dlinkDelete+0x38>
   20b74:	ldr	r0, [sp, #4]
   20b78:	ldr	r0, [r0, #4]
   20b7c:	ldr	r1, [sp, #4]
   20b80:	ldr	r1, [r1, #8]
   20b84:	str	r0, [r1, #4]
   20b88:	b	20b9c <rb_dlinkDelete+0x48>
   20b8c:	ldr	r0, [sp, #4]
   20b90:	ldr	r0, [r0, #4]
   20b94:	ldr	r1, [sp]
   20b98:	str	r0, [r1, #4]
   20b9c:	ldr	r0, [sp, #4]
   20ba0:	ldr	r0, [r0, #4]
   20ba4:	movw	r1, #0
   20ba8:	cmp	r0, r1
   20bac:	beq	20bc8 <rb_dlinkDelete+0x74>
   20bb0:	ldr	r0, [sp, #4]
   20bb4:	ldr	r0, [r0, #8]
   20bb8:	ldr	r1, [sp, #4]
   20bbc:	ldr	r1, [r1, #4]
   20bc0:	str	r0, [r1, #8]
   20bc4:	b	20bd8 <rb_dlinkDelete+0x84>
   20bc8:	ldr	r0, [sp, #4]
   20bcc:	ldr	r0, [r0, #8]
   20bd0:	ldr	r1, [sp]
   20bd4:	str	r0, [r1]
   20bd8:	ldr	r0, [sp, #4]
   20bdc:	movw	r1, #0
   20be0:	str	r1, [r0, #4]
   20be4:	ldr	r0, [sp, #4]
   20be8:	str	r1, [r0, #8]
   20bec:	ldr	r0, [sp]
   20bf0:	ldr	r1, [r0, #8]
   20bf4:	mvn	r2, #0
   20bf8:	add	r1, r1, r2
   20bfc:	str	r1, [r0, #8]
   20c00:	add	sp, sp, #8
   20c04:	bx	lr

00020c08 <rb_free>:
   20c08:	push	{fp, lr}
   20c0c:	mov	fp, sp
   20c10:	sub	sp, sp, #8
   20c14:	str	r0, [sp, #4]
   20c18:	ldr	r0, [sp, #4]
   20c1c:	movw	r1, #0
   20c20:	cmp	r0, r1
   20c24:	movw	r0, #0
   20c28:	movne	r0, #1
   20c2c:	mvn	r1, #0
   20c30:	eor	r0, r0, r1
   20c34:	eor	r0, r0, r1
   20c38:	tst	r0, #1
   20c3c:	beq	20c48 <rb_free+0x40>
   20c40:	ldr	r0, [sp, #4]
   20c44:	bl	50c8 <free@plt>
   20c48:	mov	sp, fp
   20c4c:	pop	{fp, pc}

00020c50 <rb_radixtree_foreach>:
   20c50:	push	{fp, lr}
   20c54:	mov	fp, sp
   20c58:	sub	sp, sp, #40	; 0x28
   20c5c:	str	r0, [fp, #-4]
   20c60:	str	r1, [fp, #-8]
   20c64:	str	r2, [fp, #-12]
   20c68:	ldr	r0, [fp, #-4]
   20c6c:	ldr	r0, [r0, #4]
   20c70:	str	r0, [fp, #-16]
   20c74:	ldr	r0, [fp, #-16]
   20c78:	movw	r1, #0
   20c7c:	cmp	r0, r1
   20c80:	bne	20c88 <rb_radixtree_foreach+0x38>
   20c84:	b	20e18 <rb_radixtree_foreach+0x1c8>
   20c88:	ldr	r0, [fp, #-16]
   20c8c:	ldr	r0, [r0]
   20c90:	cmn	r0, #1
   20c94:	bne	20cdc <rb_radixtree_foreach+0x8c>
   20c98:	ldr	r0, [fp, #-8]
   20c9c:	movw	r1, #0
   20ca0:	cmp	r0, r1
   20ca4:	beq	20cd8 <rb_radixtree_foreach+0x88>
   20ca8:	ldr	r0, [fp, #-8]
   20cac:	ldr	r1, [fp, #-16]
   20cb0:	ldr	r1, [r1, #8]
   20cb4:	ldr	r2, [fp, #-16]
   20cb8:	ldr	r2, [r2, #4]
   20cbc:	ldr	r3, [fp, #-12]
   20cc0:	str	r0, [sp, #12]
   20cc4:	mov	r0, r1
   20cc8:	mov	r1, r2
   20ccc:	mov	r2, r3
   20cd0:	ldr	r3, [sp, #12]
   20cd4:	blx	r3
   20cd8:	b	20e18 <rb_radixtree_foreach+0x1c8>
   20cdc:	movw	r0, #0
   20ce0:	str	r0, [sp, #16]
   20ce4:	b	20ce8 <rb_radixtree_foreach+0x98>
   20ce8:	ldr	r0, [fp, #-16]
   20cec:	add	r0, r0, #4
   20cf0:	ldr	r1, [sp, #16]
   20cf4:	add	r2, r1, #1
   20cf8:	str	r2, [sp, #16]
   20cfc:	add	r0, r0, r1, lsl #2
   20d00:	ldr	r0, [r0]
   20d04:	str	r0, [sp, #20]
   20d08:	ldr	r0, [sp, #20]
   20d0c:	movw	r1, #0
   20d10:	cmp	r0, r1
   20d14:	movw	r0, #0
   20d18:	str	r0, [sp, #8]
   20d1c:	bne	20d34 <rb_radixtree_foreach+0xe4>
   20d20:	ldr	r0, [sp, #16]
   20d24:	cmp	r0, #16
   20d28:	movw	r0, #0
   20d2c:	movlt	r0, #1
   20d30:	str	r0, [sp, #8]
   20d34:	ldr	r0, [sp, #8]
   20d38:	tst	r0, #1
   20d3c:	bne	20ce8 <rb_radixtree_foreach+0x98>
   20d40:	ldr	r0, [sp, #20]
   20d44:	movw	r1, #0
   20d48:	cmp	r0, r1
   20d4c:	beq	20db8 <rb_radixtree_foreach+0x168>
   20d50:	ldr	r0, [sp, #20]
   20d54:	ldr	r0, [r0]
   20d58:	cmn	r0, #1
   20d5c:	bne	20da4 <rb_radixtree_foreach+0x154>
   20d60:	ldr	r0, [fp, #-8]
   20d64:	movw	r1, #0
   20d68:	cmp	r0, r1
   20d6c:	beq	20da0 <rb_radixtree_foreach+0x150>
   20d70:	ldr	r0, [fp, #-8]
   20d74:	ldr	r1, [sp, #20]
   20d78:	ldr	r1, [r1, #8]
   20d7c:	ldr	r2, [sp, #20]
   20d80:	ldr	r2, [r2, #4]
   20d84:	ldr	r3, [fp, #-12]
   20d88:	str	r0, [sp, #4]
   20d8c:	mov	r0, r1
   20d90:	mov	r1, r2
   20d94:	mov	r2, r3
   20d98:	ldr	r3, [sp, #4]
   20d9c:	blx	r3
   20da0:	b	20db4 <rb_radixtree_foreach+0x164>
   20da4:	ldr	r0, [sp, #20]
   20da8:	str	r0, [fp, #-16]
   20dac:	movw	r0, #0
   20db0:	str	r0, [sp, #16]
   20db4:	b	20db8 <rb_radixtree_foreach+0x168>
   20db8:	b	20dbc <rb_radixtree_foreach+0x16c>
   20dbc:	ldr	r0, [sp, #16]
   20dc0:	cmp	r0, #16
   20dc4:	blt	20e04 <rb_radixtree_foreach+0x1b4>
   20dc8:	ldr	r0, [fp, #-16]
   20dcc:	ldrb	r0, [r0, #72]	; 0x48
   20dd0:	str	r0, [sp, #16]
   20dd4:	ldr	r0, [fp, #-16]
   20dd8:	ldr	r0, [r0, #68]	; 0x44
   20ddc:	str	r0, [fp, #-16]
   20de0:	ldr	r0, [fp, #-16]
   20de4:	movw	r1, #0
   20de8:	cmp	r0, r1
   20dec:	bne	20df4 <rb_radixtree_foreach+0x1a4>
   20df0:	b	20e04 <rb_radixtree_foreach+0x1b4>
   20df4:	ldr	r0, [sp, #16]
   20df8:	add	r0, r0, #1
   20dfc:	str	r0, [sp, #16]
   20e00:	b	20dbc <rb_radixtree_foreach+0x16c>
   20e04:	b	20e08 <rb_radixtree_foreach+0x1b8>
   20e08:	ldr	r0, [fp, #-16]
   20e0c:	movw	r1, #0
   20e10:	cmp	r0, r1
   20e14:	bne	20ce4 <rb_radixtree_foreach+0x94>
   20e18:	mov	sp, fp
   20e1c:	pop	{fp, pc}

00020e20 <rb_radixtree_search>:
   20e20:	push	{fp, lr}
   20e24:	mov	fp, sp
   20e28:	sub	sp, sp, #48	; 0x30
   20e2c:	str	r0, [fp, #-8]
   20e30:	str	r1, [fp, #-12]
   20e34:	str	r2, [fp, #-16]
   20e38:	movw	r0, #0
   20e3c:	str	r0, [sp, #16]
   20e40:	ldr	r1, [fp, #-8]
   20e44:	ldr	r1, [r1, #4]
   20e48:	str	r1, [fp, #-20]	; 0xffffffec
   20e4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20e50:	cmp	r1, r0
   20e54:	bne	20e64 <rb_radixtree_search+0x44>
   20e58:	movw	r0, #0
   20e5c:	str	r0, [fp, #-4]
   20e60:	b	21014 <rb_radixtree_search+0x1f4>
   20e64:	ldr	r0, [fp, #-20]	; 0xffffffec
   20e68:	ldr	r0, [r0]
   20e6c:	cmn	r0, #1
   20e70:	bne	20ec8 <rb_radixtree_search+0xa8>
   20e74:	ldr	r0, [fp, #-12]
   20e78:	movw	r1, #0
   20e7c:	cmp	r0, r1
   20e80:	beq	20ebc <rb_radixtree_search+0x9c>
   20e84:	ldr	r0, [fp, #-12]
   20e88:	ldr	r1, [fp, #-20]	; 0xffffffec
   20e8c:	ldr	r1, [r1, #8]
   20e90:	ldr	r2, [fp, #-20]	; 0xffffffec
   20e94:	ldr	r2, [r2, #4]
   20e98:	ldr	r3, [fp, #-16]
   20e9c:	str	r0, [sp, #12]
   20ea0:	mov	r0, r1
   20ea4:	mov	r1, r2
   20ea8:	mov	r2, r3
   20eac:	ldr	r3, [sp, #12]
   20eb0:	blx	r3
   20eb4:	str	r0, [fp, #-4]
   20eb8:	b	21014 <rb_radixtree_search+0x1f4>
   20ebc:	movw	r0, #0
   20ec0:	str	r0, [fp, #-4]
   20ec4:	b	21014 <rb_radixtree_search+0x1f4>
   20ec8:	movw	r0, #0
   20ecc:	str	r0, [sp, #20]
   20ed0:	b	20ed4 <rb_radixtree_search+0xb4>
   20ed4:	ldr	r0, [fp, #-20]	; 0xffffffec
   20ed8:	add	r0, r0, #4
   20edc:	ldr	r1, [sp, #20]
   20ee0:	add	r2, r1, #1
   20ee4:	str	r2, [sp, #20]
   20ee8:	add	r0, r0, r1, lsl #2
   20eec:	ldr	r0, [r0]
   20ef0:	str	r0, [sp, #24]
   20ef4:	ldr	r0, [sp, #24]
   20ef8:	movw	r1, #0
   20efc:	cmp	r0, r1
   20f00:	movw	r0, #0
   20f04:	str	r0, [sp, #8]
   20f08:	bne	20f20 <rb_radixtree_search+0x100>
   20f0c:	ldr	r0, [sp, #20]
   20f10:	cmp	r0, #16
   20f14:	movw	r0, #0
   20f18:	movlt	r0, #1
   20f1c:	str	r0, [sp, #8]
   20f20:	ldr	r0, [sp, #8]
   20f24:	tst	r0, #1
   20f28:	bne	20ed4 <rb_radixtree_search+0xb4>
   20f2c:	ldr	r0, [sp, #24]
   20f30:	movw	r1, #0
   20f34:	cmp	r0, r1
   20f38:	beq	20fbc <rb_radixtree_search+0x19c>
   20f3c:	ldr	r0, [sp, #24]
   20f40:	ldr	r0, [r0]
   20f44:	cmn	r0, #1
   20f48:	bne	20fa8 <rb_radixtree_search+0x188>
   20f4c:	ldr	r0, [fp, #-12]
   20f50:	movw	r1, #0
   20f54:	cmp	r0, r1
   20f58:	beq	20f90 <rb_radixtree_search+0x170>
   20f5c:	ldr	r0, [fp, #-12]
   20f60:	ldr	r1, [sp, #24]
   20f64:	ldr	r1, [r1, #8]
   20f68:	ldr	r2, [sp, #24]
   20f6c:	ldr	r2, [r2, #4]
   20f70:	ldr	r3, [fp, #-16]
   20f74:	str	r0, [sp, #4]
   20f78:	mov	r0, r1
   20f7c:	mov	r1, r2
   20f80:	mov	r2, r3
   20f84:	ldr	r3, [sp, #4]
   20f88:	blx	r3
   20f8c:	str	r0, [sp, #16]
   20f90:	ldr	r0, [sp, #16]
   20f94:	movw	r1, #0
   20f98:	cmp	r0, r1
   20f9c:	beq	20fa4 <rb_radixtree_search+0x184>
   20fa0:	b	2100c <rb_radixtree_search+0x1ec>
   20fa4:	b	20fb8 <rb_radixtree_search+0x198>
   20fa8:	ldr	r0, [sp, #24]
   20fac:	str	r0, [fp, #-20]	; 0xffffffec
   20fb0:	movw	r0, #0
   20fb4:	str	r0, [sp, #20]
   20fb8:	b	20fbc <rb_radixtree_search+0x19c>
   20fbc:	b	20fc0 <rb_radixtree_search+0x1a0>
   20fc0:	ldr	r0, [sp, #20]
   20fc4:	cmp	r0, #16
   20fc8:	blt	21008 <rb_radixtree_search+0x1e8>
   20fcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   20fd0:	ldrb	r0, [r0, #72]	; 0x48
   20fd4:	str	r0, [sp, #20]
   20fd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   20fdc:	ldr	r0, [r0, #68]	; 0x44
   20fe0:	str	r0, [fp, #-20]	; 0xffffffec
   20fe4:	ldr	r0, [fp, #-20]	; 0xffffffec
   20fe8:	movw	r1, #0
   20fec:	cmp	r0, r1
   20ff0:	bne	20ff8 <rb_radixtree_search+0x1d8>
   20ff4:	b	21008 <rb_radixtree_search+0x1e8>
   20ff8:	ldr	r0, [sp, #20]
   20ffc:	add	r0, r0, #1
   21000:	str	r0, [sp, #20]
   21004:	b	20fc0 <rb_radixtree_search+0x1a0>
   21008:	b	20ed0 <rb_radixtree_search+0xb0>
   2100c:	ldr	r0, [sp, #16]
   21010:	str	r0, [fp, #-4]
   21014:	ldr	r0, [fp, #-4]
   21018:	mov	sp, fp
   2101c:	pop	{fp, pc}

00021020 <first_leaf>:
   21020:	sub	sp, sp, #8
   21024:	str	r0, [sp, #4]
   21028:	ldr	r0, [sp, #4]
   2102c:	ldr	r0, [r0]
   21030:	cmn	r0, #1
   21034:	movw	r0, #0
   21038:	moveq	r0, #1
   2103c:	mvn	r1, #0
   21040:	eor	r0, r0, r1
   21044:	tst	r0, #1
   21048:	beq	210b4 <first_leaf+0x94>
   2104c:	movw	r0, #0
   21050:	str	r0, [sp]
   21054:	ldr	r0, [sp]
   21058:	cmp	r0, #16
   2105c:	bge	210b0 <first_leaf+0x90>
   21060:	ldr	r0, [sp, #4]
   21064:	add	r0, r0, #4
   21068:	ldr	r1, [sp]
   2106c:	add	r0, r0, r1, lsl #2
   21070:	ldr	r0, [r0]
   21074:	movw	r1, #0
   21078:	cmp	r0, r1
   2107c:	beq	2109c <first_leaf+0x7c>
   21080:	ldr	r0, [sp, #4]
   21084:	add	r0, r0, #4
   21088:	ldr	r1, [sp]
   2108c:	add	r0, r0, r1, lsl #2
   21090:	ldr	r0, [r0]
   21094:	str	r0, [sp, #4]
   21098:	b	210b0 <first_leaf+0x90>
   2109c:	b	210a0 <first_leaf+0x80>
   210a0:	ldr	r0, [sp]
   210a4:	add	r0, r0, #1
   210a8:	str	r0, [sp]
   210ac:	b	21054 <first_leaf+0x34>
   210b0:	b	21028 <first_leaf+0x8>
   210b4:	ldr	r0, [sp, #4]
   210b8:	add	sp, sp, #8
   210bc:	bx	lr

000210c0 <rb_radixtree_elem_find>:
   210c0:	push	{r4, r5, fp, lr}
   210c4:	add	fp, sp, #8
   210c8:	sub	sp, sp, #304	; 0x130
   210cc:	str	r0, [fp, #-12]
   210d0:	str	r1, [fp, #-16]
   210d4:	str	r2, [fp, #-20]	; 0xffffffec
   210d8:	movw	r0, #0
   210dc:	str	r0, [sp, #32]
   210e0:	ldr	r1, [fp, #-16]
   210e4:	str	r0, [sp, #12]
   210e8:	mov	r0, r1
   210ec:	bl	51b8 <strlen@plt>
   210f0:	str	r0, [sp, #16]
   210f4:	ldr	r0, [fp, #-12]
   210f8:	ldr	r0, [r0]
   210fc:	ldr	r1, [sp, #12]
   21100:	cmp	r0, r1
   21104:	bne	21114 <rb_radixtree_elem_find+0x54>
   21108:	ldr	r0, [fp, #-16]
   2110c:	str	r0, [sp, #28]
   21110:	b	21188 <rb_radixtree_elem_find+0xc8>
   21114:	ldr	r0, [sp, #16]
   21118:	cmp	r0, #256	; 0x100
   2111c:	blt	21154 <rb_radixtree_elem_find+0x94>
   21120:	ldr	r0, [fp, #-16]
   21124:	bl	20608 <rb_strdup>
   21128:	str	r0, [sp, #32]
   2112c:	ldr	r0, [fp, #-12]
   21130:	ldr	r0, [r0]
   21134:	ldr	r1, [sp, #32]
   21138:	str	r0, [sp, #8]
   2113c:	mov	r0, r1
   21140:	ldr	r1, [sp, #8]
   21144:	blx	r1
   21148:	ldr	r0, [sp, #32]
   2114c:	str	r0, [sp, #28]
   21150:	b	21184 <rb_radixtree_elem_find+0xc4>
   21154:	add	r0, sp, #36	; 0x24
   21158:	ldr	r1, [fp, #-16]
   2115c:	movw	r2, #256	; 0x100
   21160:	bl	5068 <rb_strlcpy@plt>
   21164:	add	r1, sp, #36	; 0x24
   21168:	ldr	r2, [fp, #-12]
   2116c:	ldr	r2, [r2]
   21170:	str	r0, [sp, #4]
   21174:	mov	r0, r1
   21178:	blx	r2
   2117c:	add	r0, sp, #36	; 0x24
   21180:	str	r0, [sp, #28]
   21184:	b	21188 <rb_radixtree_elem_find+0xc8>
   21188:	ldr	r0, [fp, #-12]
   2118c:	ldr	r0, [r0, #4]
   21190:	str	r0, [sp, #24]
   21194:	ldr	r0, [sp, #24]
   21198:	movw	r1, #0
   2119c:	cmp	r0, r1
   211a0:	movw	r0, #0
   211a4:	str	r0, [sp]
   211a8:	beq	211cc <rb_radixtree_elem_find+0x10c>
   211ac:	ldr	r0, [sp, #24]
   211b0:	ldr	r0, [r0]
   211b4:	cmn	r0, #1
   211b8:	movw	r0, #0
   211bc:	moveq	r0, #1
   211c0:	mvn	r1, #0
   211c4:	eor	r0, r0, r1
   211c8:	str	r0, [sp]
   211cc:	ldr	r0, [sp]
   211d0:	tst	r0, #1
   211d4:	beq	21268 <rb_radixtree_elem_find+0x1a8>
   211d8:	ldr	r0, [sp, #24]
   211dc:	ldr	r0, [r0]
   211e0:	movw	r1, #2
   211e4:	sdiv	r0, r0, r1
   211e8:	ldr	r1, [sp, #16]
   211ec:	cmp	r0, r1
   211f0:	bge	21244 <rb_radixtree_elem_find+0x184>
   211f4:	ldr	r0, [sp, #28]
   211f8:	ldr	r1, [sp, #24]
   211fc:	ldr	r1, [r1]
   21200:	movw	r2, #2
   21204:	sdiv	r1, r1, r2
   21208:	add	r0, r0, r1
   2120c:	ldrb	r0, [r0]
   21210:	ldr	r1, [sp, #24]
   21214:	ldr	r1, [r1]
   21218:	and	r1, r1, #1
   2121c:	cmp	r1, #0
   21220:	movw	r1, #0
   21224:	movne	r1, #1
   21228:	tst	r1, #1
   2122c:	movw	r1, #0
   21230:	moveq	r1, #4
   21234:	asr	r0, r0, r1
   21238:	and	r0, r0, #15
   2123c:	str	r0, [sp, #20]
   21240:	b	2124c <rb_radixtree_elem_find+0x18c>
   21244:	movw	r0, #0
   21248:	str	r0, [sp, #20]
   2124c:	ldr	r0, [sp, #24]
   21250:	add	r0, r0, #4
   21254:	ldr	r1, [sp, #20]
   21258:	add	r0, r0, r1, lsl #2
   2125c:	ldr	r0, [r0]
   21260:	str	r0, [sp, #24]
   21264:	b	21194 <rb_radixtree_elem_find+0xd4>
   21268:	ldr	r0, [sp, #24]
   2126c:	movw	r1, #0
   21270:	cmp	r0, r1
   21274:	beq	212a4 <rb_radixtree_elem_find+0x1e4>
   21278:	ldr	r0, [fp, #-20]	; 0xffffffec
   2127c:	cmp	r0, #0
   21280:	bne	212a4 <rb_radixtree_elem_find+0x1e4>
   21284:	ldr	r0, [sp, #24]
   21288:	ldr	r0, [r0, #8]
   2128c:	ldr	r1, [sp, #28]
   21290:	bl	56bc <strcmp@plt>
   21294:	cmp	r0, #0
   21298:	beq	212a4 <rb_radixtree_elem_find+0x1e4>
   2129c:	movw	r0, #0
   212a0:	str	r0, [sp, #24]
   212a4:	ldr	r0, [sp, #32]
   212a8:	movw	r1, #0
   212ac:	cmp	r0, r1
   212b0:	beq	212bc <rb_radixtree_elem_find+0x1fc>
   212b4:	ldr	r0, [sp, #32]
   212b8:	bl	20c08 <rb_free>
   212bc:	ldr	r0, [sp, #24]
   212c0:	sub	sp, fp, #8
   212c4:	pop	{r4, r5, fp, pc}

000212c8 <rb_radixtree_foreach_start_from>:
   212c8:	push	{fp, lr}
   212cc:	mov	fp, sp
   212d0:	sub	sp, sp, #16
   212d4:	str	r0, [fp, #-4]
   212d8:	str	r1, [sp, #8]
   212dc:	str	r2, [sp, #4]
   212e0:	ldr	r0, [sp, #4]
   212e4:	movw	r1, #0
   212e8:	cmp	r0, r1
   212ec:	beq	21324 <rb_radixtree_foreach_start_from+0x5c>
   212f0:	ldr	r0, [sp, #8]
   212f4:	movw	r1, #0
   212f8:	str	r1, [r0, #8]
   212fc:	ldr	r0, [fp, #-4]
   21300:	ldr	r1, [sp, #4]
   21304:	movw	r2, #1
   21308:	bl	5548 <rb_radixtree_elem_find@plt>
   2130c:	ldr	r1, [sp, #8]
   21310:	str	r0, [r1, #12]
   21314:	ldr	r0, [fp, #-4]
   21318:	ldr	r1, [sp, #8]
   2131c:	bl	4e04 <rb_radixtree_foreach_next@plt>
   21320:	b	21330 <rb_radixtree_foreach_start_from+0x68>
   21324:	ldr	r0, [fp, #-4]
   21328:	ldr	r1, [sp, #8]
   2132c:	bl	4dc8 <rb_radixtree_foreach_start@plt>
   21330:	mov	sp, fp
   21334:	pop	{fp, pc}

00021338 <rb_radixtree_elem_add>:
   21338:	push	{fp, lr}
   2133c:	mov	fp, sp
   21340:	sub	sp, sp, #64	; 0x40
   21344:	str	r0, [fp, #-8]
   21348:	str	r1, [fp, #-12]
   2134c:	str	r2, [fp, #-16]
   21350:	ldr	r0, [fp, #-12]
   21354:	bl	51b8 <strlen@plt>
   21358:	str	r0, [sp, #20]
   2135c:	ldr	r0, [fp, #-12]
   21360:	bl	20608 <rb_strdup>
   21364:	str	r0, [fp, #-20]	; 0xffffffec
   21368:	ldr	r0, [fp, #-20]	; 0xffffffec
   2136c:	movw	r1, #0
   21370:	cmp	r0, r1
   21374:	bne	21384 <rb_radixtree_elem_add+0x4c>
   21378:	movw	r0, #0
   2137c:	str	r0, [fp, #-4]
   21380:	b	21a70 <rb_radixtree_elem_add+0x738>
   21384:	ldr	r0, [fp, #-8]
   21388:	ldr	r0, [r0]
   2138c:	movw	r1, #0
   21390:	cmp	r0, r1
   21394:	beq	213b4 <rb_radixtree_elem_add+0x7c>
   21398:	ldr	r0, [fp, #-8]
   2139c:	ldr	r0, [r0]
   213a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   213a4:	str	r0, [sp, #8]
   213a8:	mov	r0, r1
   213ac:	ldr	r1, [sp, #8]
   213b0:	blx	r1
   213b4:	movw	r0, #0
   213b8:	str	r0, [fp, #-28]	; 0xffffffe4
   213bc:	movw	r0, #18
   213c0:	str	r0, [sp, #24]
   213c4:	ldr	r0, [fp, #-8]
   213c8:	ldr	r0, [r0, #4]
   213cc:	str	r0, [fp, #-24]	; 0xffffffe8
   213d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   213d4:	movw	r1, #0
   213d8:	cmp	r0, r1
   213dc:	movw	r0, #0
   213e0:	str	r0, [sp, #4]
   213e4:	beq	21408 <rb_radixtree_elem_add+0xd0>
   213e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   213ec:	ldr	r0, [r0]
   213f0:	cmn	r0, #1
   213f4:	movw	r0, #0
   213f8:	moveq	r0, #1
   213fc:	mvn	r1, #0
   21400:	eor	r0, r0, r1
   21404:	str	r0, [sp, #4]
   21408:	ldr	r0, [sp, #4]
   2140c:	tst	r0, #1
   21410:	beq	214ac <rb_radixtree_elem_add+0x174>
   21414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21418:	str	r0, [fp, #-28]	; 0xffffffe4
   2141c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21420:	ldr	r0, [r0]
   21424:	movw	r1, #2
   21428:	sdiv	r0, r0, r1
   2142c:	ldr	r1, [sp, #20]
   21430:	cmp	r0, r1
   21434:	bge	21488 <rb_radixtree_elem_add+0x150>
   21438:	ldr	r0, [fp, #-20]	; 0xffffffec
   2143c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21440:	ldr	r1, [r1]
   21444:	movw	r2, #2
   21448:	sdiv	r1, r1, r2
   2144c:	add	r0, r0, r1
   21450:	ldrb	r0, [r0]
   21454:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21458:	ldr	r1, [r1]
   2145c:	and	r1, r1, #1
   21460:	cmp	r1, #0
   21464:	movw	r1, #0
   21468:	movne	r1, #1
   2146c:	tst	r1, #1
   21470:	movw	r1, #0
   21474:	moveq	r1, #4
   21478:	asr	r0, r0, r1
   2147c:	and	r0, r0, #15
   21480:	str	r0, [sp, #24]
   21484:	b	21490 <rb_radixtree_elem_add+0x158>
   21488:	movw	r0, #0
   2148c:	str	r0, [sp, #24]
   21490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21494:	add	r0, r0, #4
   21498:	ldr	r1, [sp, #24]
   2149c:	add	r0, r0, r1, lsl #2
   214a0:	ldr	r0, [r0]
   214a4:	str	r0, [fp, #-24]	; 0xffffffe8
   214a8:	b	213d0 <rb_radixtree_elem_add+0x98>
   214ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   214b0:	movw	r1, #0
   214b4:	cmp	r0, r1
   214b8:	beq	214e8 <rb_radixtree_elem_add+0x1b0>
   214bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   214c0:	ldr	r0, [r0, #8]
   214c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   214c8:	bl	56bc <strcmp@plt>
   214cc:	cmp	r0, #0
   214d0:	bne	214e8 <rb_radixtree_elem_add+0x1b0>
   214d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   214d8:	bl	20c08 <rb_free>
   214dc:	movw	r0, #0
   214e0:	str	r0, [fp, #-4]
   214e4:	b	21a70 <rb_radixtree_elem_add+0x738>
   214e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   214ec:	movw	r1, #0
   214f0:	cmp	r0, r1
   214f4:	bne	21514 <rb_radixtree_elem_add+0x1dc>
   214f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   214fc:	movw	r1, #0
   21500:	cmp	r0, r1
   21504:	beq	21514 <rb_radixtree_elem_add+0x1dc>
   21508:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2150c:	bl	21020 <first_leaf>
   21510:	str	r0, [fp, #-24]	; 0xffffffe8
   21514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21518:	movw	r1, #0
   2151c:	cmp	r0, r1
   21520:	bne	215b0 <rb_radixtree_elem_add+0x278>
   21524:	ldr	r0, [fp, #-8]
   21528:	add	r0, r0, #4
   2152c:	str	r0, [sp, #28]
   21530:	movw	r0, #20
   21534:	bl	205b0 <rb_malloc>
   21538:	ldr	r1, [sp, #28]
   2153c:	str	r0, [r1]
   21540:	ldr	r0, [sp, #28]
   21544:	ldr	r0, [r0]
   21548:	mvn	r1, #0
   2154c:	str	r1, [r0]
   21550:	ldr	r0, [fp, #-16]
   21554:	ldr	r1, [sp, #28]
   21558:	ldr	r1, [r1]
   2155c:	str	r0, [r1, #4]
   21560:	ldr	r0, [fp, #-20]	; 0xffffffec
   21564:	ldr	r1, [sp, #28]
   21568:	ldr	r1, [r1]
   2156c:	str	r0, [r1, #8]
   21570:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21574:	ldr	r1, [sp, #28]
   21578:	ldr	r1, [r1]
   2157c:	str	r0, [r1, #12]
   21580:	ldr	r0, [sp, #24]
   21584:	ldr	r1, [sp, #28]
   21588:	ldr	r1, [r1]
   2158c:	strb	r0, [r1, #16]
   21590:	ldr	r0, [fp, #-8]
   21594:	ldr	r1, [r0, #8]
   21598:	add	r1, r1, #1
   2159c:	str	r1, [r0, #8]
   215a0:	ldr	r0, [sp, #28]
   215a4:	ldr	r0, [r0]
   215a8:	str	r0, [fp, #-4]
   215ac:	b	21a70 <rb_radixtree_elem_add+0x738>
   215b0:	movw	r0, #0
   215b4:	str	r0, [sp, #16]
   215b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   215bc:	ldr	r1, [sp, #16]
   215c0:	movw	r2, #2
   215c4:	sdiv	r1, r1, r2
   215c8:	add	r0, r0, r1
   215cc:	ldrb	r0, [r0]
   215d0:	ldr	r1, [sp, #16]
   215d4:	and	r1, r1, #1
   215d8:	cmp	r1, #0
   215dc:	movw	r1, #0
   215e0:	movne	r1, #1
   215e4:	tst	r1, #1
   215e8:	movw	r1, #0
   215ec:	mov	r3, r1
   215f0:	moveq	r3, #4
   215f4:	asr	r0, r0, r3
   215f8:	and	r0, r0, #15
   215fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21600:	ldr	r3, [r3, #8]
   21604:	ldr	ip, [sp, #16]
   21608:	sdiv	r2, ip, r2
   2160c:	add	r2, r3, r2
   21610:	ldrb	r2, [r2]
   21614:	ldr	r3, [sp, #16]
   21618:	and	r3, r3, #1
   2161c:	cmp	r3, #0
   21620:	movw	r3, #0
   21624:	movne	r3, #1
   21628:	tst	r3, #1
   2162c:	moveq	r1, #4
   21630:	asr	r1, r2, r1
   21634:	and	r1, r1, #15
   21638:	cmp	r0, r1
   2163c:	bne	21654 <rb_radixtree_elem_add+0x31c>
   21640:	b	21644 <rb_radixtree_elem_add+0x30c>
   21644:	ldr	r0, [sp, #16]
   21648:	add	r0, r0, #1
   2164c:	str	r0, [sp, #16]
   21650:	b	215b8 <rb_radixtree_elem_add+0x280>
   21654:	b	21658 <rb_radixtree_elem_add+0x320>
   21658:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2165c:	movw	r1, #0
   21660:	cmp	r0, r1
   21664:	movw	r0, #0
   21668:	str	r0, [sp]
   2166c:	beq	2168c <rb_radixtree_elem_add+0x354>
   21670:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21674:	ldr	r0, [r0]
   21678:	ldr	r1, [sp, #16]
   2167c:	cmp	r0, r1
   21680:	movw	r0, #0
   21684:	movgt	r0, #1
   21688:	str	r0, [sp]
   2168c:	ldr	r0, [sp]
   21690:	tst	r0, #1
   21694:	beq	216b4 <rb_radixtree_elem_add+0x37c>
   21698:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2169c:	ldrb	r0, [r0, #72]	; 0x48
   216a0:	str	r0, [sp, #24]
   216a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   216a8:	ldr	r0, [r0, #68]	; 0x44
   216ac:	str	r0, [fp, #-28]	; 0xffffffe4
   216b0:	b	21658 <rb_radixtree_elem_add+0x320>
   216b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   216b8:	movw	r1, #0
   216bc:	cmp	r0, r1
   216c0:	beq	216d8 <rb_radixtree_elem_add+0x3a0>
   216c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   216c8:	ldr	r0, [r0]
   216cc:	ldr	r1, [sp, #16]
   216d0:	cmp	r0, r1
   216d4:	bge	219b0 <rb_radixtree_elem_add+0x678>
   216d8:	movw	r0, #76	; 0x4c
   216dc:	bl	205b0 <rb_malloc>
   216e0:	str	r0, [sp, #32]
   216e4:	ldr	r0, [sp, #16]
   216e8:	ldr	r1, [sp, #32]
   216ec:	str	r0, [r1]
   216f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   216f4:	ldr	r1, [sp, #32]
   216f8:	str	r0, [r1, #68]	; 0x44
   216fc:	ldr	r0, [sp, #24]
   21700:	ldr	r1, [sp, #32]
   21704:	strb	r0, [r1, #72]	; 0x48
   21708:	movw	r0, #0
   2170c:	str	r0, [sp, #12]
   21710:	ldr	r0, [sp, #12]
   21714:	cmp	r0, #16
   21718:	bge	21744 <rb_radixtree_elem_add+0x40c>
   2171c:	ldr	r0, [sp, #32]
   21720:	add	r0, r0, #4
   21724:	ldr	r1, [sp, #12]
   21728:	add	r0, r0, r1, lsl #2
   2172c:	movw	r1, #0
   21730:	str	r1, [r0]
   21734:	ldr	r0, [sp, #12]
   21738:	add	r0, r0, #1
   2173c:	str	r0, [sp, #12]
   21740:	b	21710 <rb_radixtree_elem_add+0x3d8>
   21744:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21748:	movw	r1, #0
   2174c:	cmp	r0, r1
   21750:	bne	2187c <rb_radixtree_elem_add+0x544>
   21754:	ldr	r0, [fp, #-8]
   21758:	ldr	r0, [r0, #4]
   2175c:	ldr	r1, [sp, #32]
   21760:	add	r1, r1, #4
   21764:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21768:	ldr	r2, [r2, #8]
   2176c:	ldr	r3, [sp, #16]
   21770:	add	ip, r3, r3, lsr #31
   21774:	ldrb	r2, [r2, ip, asr #1]
   21778:	mov	ip, #1
   2177c:	bic	r3, ip, r3
   21780:	lsl	r3, r3, #2
   21784:	mov	ip, #15
   21788:	and	r2, ip, r2, lsr r3
   2178c:	add	r1, r1, r2, lsl #2
   21790:	str	r0, [r1]
   21794:	ldr	r0, [fp, #-8]
   21798:	ldr	r0, [r0, #4]
   2179c:	ldr	r0, [r0]
   217a0:	cmn	r0, #1
   217a4:	bne	2180c <rb_radixtree_elem_add+0x4d4>
   217a8:	ldr	r0, [sp, #32]
   217ac:	ldr	r1, [fp, #-8]
   217b0:	ldr	r1, [r1, #4]
   217b4:	str	r0, [r1, #12]
   217b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   217bc:	ldr	r0, [r0, #8]
   217c0:	ldr	r1, [sp, #16]
   217c4:	movw	r2, #2
   217c8:	sdiv	r1, r1, r2
   217cc:	add	r0, r0, r1
   217d0:	ldrb	r0, [r0]
   217d4:	ldr	r1, [sp, #16]
   217d8:	and	r1, r1, #1
   217dc:	cmp	r1, #0
   217e0:	movw	r1, #0
   217e4:	movne	r1, #1
   217e8:	tst	r1, #1
   217ec:	movw	r1, #0
   217f0:	moveq	r1, #4
   217f4:	asr	r0, r0, r1
   217f8:	and	r0, r0, #15
   217fc:	ldr	r1, [fp, #-8]
   21800:	ldr	r1, [r1, #4]
   21804:	strb	r0, [r1, #16]
   21808:	b	2186c <rb_radixtree_elem_add+0x534>
   2180c:	ldr	r0, [sp, #32]
   21810:	ldr	r1, [fp, #-8]
   21814:	ldr	r1, [r1, #4]
   21818:	str	r0, [r1, #68]	; 0x44
   2181c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21820:	ldr	r0, [r0, #8]
   21824:	ldr	r1, [sp, #16]
   21828:	movw	r2, #2
   2182c:	sdiv	r1, r1, r2
   21830:	add	r0, r0, r1
   21834:	ldrb	r0, [r0]
   21838:	ldr	r1, [sp, #16]
   2183c:	and	r1, r1, #1
   21840:	cmp	r1, #0
   21844:	movw	r1, #0
   21848:	movne	r1, #1
   2184c:	tst	r1, #1
   21850:	movw	r1, #0
   21854:	moveq	r1, #4
   21858:	asr	r0, r0, r1
   2185c:	and	r0, r0, #15
   21860:	ldr	r1, [fp, #-8]
   21864:	ldr	r1, [r1, #4]
   21868:	strb	r0, [r1, #72]	; 0x48
   2186c:	ldr	r0, [sp, #32]
   21870:	ldr	r1, [fp, #-8]
   21874:	str	r0, [r1, #4]
   21878:	b	219ac <rb_radixtree_elem_add+0x674>
   2187c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21880:	ldr	r1, [sp, #24]
   21884:	add	r0, r0, r1, lsl #2
   21888:	ldr	r0, [r0, #4]
   2188c:	ldr	r1, [sp, #32]
   21890:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21894:	ldr	r2, [r2, #8]
   21898:	ldr	r3, [sp, #16]
   2189c:	add	ip, r3, r3, lsr #31
   218a0:	ldrb	r2, [r2, ip, asr #1]
   218a4:	mov	ip, #1
   218a8:	bic	r3, ip, r3
   218ac:	lsl	r3, r3, #2
   218b0:	mov	ip, #15
   218b4:	and	r2, ip, r2, lsr r3
   218b8:	add	r1, r1, r2, lsl #2
   218bc:	str	r0, [r1, #4]
   218c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   218c4:	add	r0, r0, #4
   218c8:	ldr	r1, [sp, #24]
   218cc:	add	r0, r0, r1, lsl #2
   218d0:	ldr	r0, [r0]
   218d4:	ldr	r0, [r0]
   218d8:	cmn	r0, #1
   218dc:	bne	2193c <rb_radixtree_elem_add+0x604>
   218e0:	ldr	r0, [sp, #32]
   218e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   218e8:	ldr	r2, [sp, #24]
   218ec:	add	r1, r1, r2, lsl #2
   218f0:	ldr	r1, [r1, #4]
   218f4:	str	r0, [r1, #12]
   218f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   218fc:	ldr	r0, [r0, #8]
   21900:	ldr	r1, [sp, #16]
   21904:	add	r2, r1, r1, lsr #31
   21908:	ldrb	r0, [r0, r2, asr #1]
   2190c:	mov	r2, #1
   21910:	bic	r1, r2, r1
   21914:	lsl	r1, r1, #2
   21918:	mov	r2, #15
   2191c:	and	r0, r2, r0, lsr r1
   21920:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21924:	add	r1, r1, #4
   21928:	ldr	r2, [sp, #24]
   2192c:	add	r1, r1, r2, lsl #2
   21930:	ldr	r1, [r1]
   21934:	strb	r0, [r1, #16]
   21938:	b	21994 <rb_radixtree_elem_add+0x65c>
   2193c:	ldr	r0, [sp, #32]
   21940:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21944:	ldr	r2, [sp, #24]
   21948:	add	r1, r1, r2, lsl #2
   2194c:	ldr	r1, [r1, #4]
   21950:	str	r0, [r1, #68]	; 0x44
   21954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21958:	ldr	r0, [r0, #8]
   2195c:	ldr	r1, [sp, #16]
   21960:	add	r2, r1, r1, lsr #31
   21964:	ldrb	r0, [r0, r2, asr #1]
   21968:	mov	r2, #1
   2196c:	bic	r1, r2, r1
   21970:	lsl	r1, r1, #2
   21974:	mov	r2, #15
   21978:	and	r0, r2, r0, lsr r1
   2197c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21980:	add	r1, r1, #4
   21984:	ldr	r2, [sp, #24]
   21988:	add	r1, r1, r2, lsl #2
   2198c:	ldr	r1, [r1]
   21990:	strb	r0, [r1, #72]	; 0x48
   21994:	ldr	r0, [sp, #32]
   21998:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2199c:	add	r1, r1, #4
   219a0:	ldr	r2, [sp, #24]
   219a4:	add	r1, r1, r2, lsl #2
   219a8:	str	r0, [r1]
   219ac:	b	219b8 <rb_radixtree_elem_add+0x680>
   219b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   219b4:	str	r0, [sp, #32]
   219b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   219bc:	ldr	r1, [sp, #16]
   219c0:	add	r2, r1, r1, lsr #31
   219c4:	ldrb	r0, [r0, r2, asr #1]
   219c8:	mov	r2, #1
   219cc:	bic	r1, r2, r1
   219d0:	lsl	r1, r1, #2
   219d4:	mov	r2, #15
   219d8:	and	r0, r2, r0, lsr r1
   219dc:	str	r0, [sp, #24]
   219e0:	ldr	r0, [sp, #32]
   219e4:	add	r0, r0, #4
   219e8:	ldr	r1, [sp, #24]
   219ec:	add	r0, r0, r1, lsl #2
   219f0:	str	r0, [sp, #28]
   219f4:	movw	r0, #20
   219f8:	bl	205b0 <rb_malloc>
   219fc:	ldr	r1, [sp, #28]
   21a00:	str	r0, [r1]
   21a04:	ldr	r0, [sp, #28]
   21a08:	ldr	r0, [r0]
   21a0c:	mvn	r1, #0
   21a10:	str	r1, [r0]
   21a14:	ldr	r0, [fp, #-16]
   21a18:	ldr	r1, [sp, #28]
   21a1c:	ldr	r1, [r1]
   21a20:	str	r0, [r1, #4]
   21a24:	ldr	r0, [fp, #-20]	; 0xffffffec
   21a28:	ldr	r1, [sp, #28]
   21a2c:	ldr	r1, [r1]
   21a30:	str	r0, [r1, #8]
   21a34:	ldr	r0, [sp, #32]
   21a38:	ldr	r1, [sp, #28]
   21a3c:	ldr	r1, [r1]
   21a40:	str	r0, [r1, #12]
   21a44:	ldr	r0, [sp, #24]
   21a48:	ldr	r1, [sp, #28]
   21a4c:	ldr	r1, [r1]
   21a50:	strb	r0, [r1, #16]
   21a54:	ldr	r0, [fp, #-8]
   21a58:	ldr	r1, [r0, #8]
   21a5c:	add	r1, r1, #1
   21a60:	str	r1, [r0, #8]
   21a64:	ldr	r0, [sp, #28]
   21a68:	ldr	r0, [r0]
   21a6c:	str	r0, [fp, #-4]
   21a70:	ldr	r0, [fp, #-4]
   21a74:	mov	sp, fp
   21a78:	pop	{fp, pc}

00021a7c <rb_radixtree_add>:
   21a7c:	push	{fp, lr}
   21a80:	mov	fp, sp
   21a84:	sub	sp, sp, #16
   21a88:	str	r0, [fp, #-4]
   21a8c:	str	r1, [sp, #8]
   21a90:	str	r2, [sp, #4]
   21a94:	ldr	r0, [fp, #-4]
   21a98:	ldr	r1, [sp, #8]
   21a9c:	ldr	r2, [sp, #4]
   21aa0:	bl	50ec <rb_radixtree_elem_add@plt>
   21aa4:	movw	r1, #0
   21aa8:	cmp	r0, r1
   21aac:	movw	r0, #0
   21ab0:	movne	r0, #1
   21ab4:	and	r0, r0, #1
   21ab8:	mov	sp, fp
   21abc:	pop	{fp, pc}

00021ac0 <rb_radixtree_elem_delete>:
   21ac0:	push	{fp, lr}
   21ac4:	mov	fp, sp
   21ac8:	sub	sp, sp, #40	; 0x28
   21acc:	str	r0, [fp, #-4]
   21ad0:	str	r1, [fp, #-8]
   21ad4:	ldr	r0, [fp, #-8]
   21ad8:	str	r0, [fp, #-12]
   21adc:	ldr	r0, [fp, #-12]
   21ae0:	ldrb	r0, [r0, #16]
   21ae4:	str	r0, [sp, #16]
   21ae8:	ldr	r0, [fp, #-12]
   21aec:	ldr	r0, [r0, #12]
   21af0:	str	r0, [fp, #-16]
   21af4:	ldr	r0, [fp, #-12]
   21af8:	ldr	r0, [r0, #8]
   21afc:	bl	20c08 <rb_free>
   21b00:	ldr	r0, [fp, #-12]
   21b04:	bl	20c08 <rb_free>
   21b08:	ldr	r0, [fp, #-16]
   21b0c:	movw	r1, #0
   21b10:	cmp	r0, r1
   21b14:	beq	21c74 <rb_radixtree_elem_delete+0x1b4>
   21b18:	ldr	r0, [fp, #-16]
   21b1c:	add	r0, r0, #4
   21b20:	ldr	r1, [sp, #16]
   21b24:	add	r0, r0, r1, lsl #2
   21b28:	movw	r1, #0
   21b2c:	str	r1, [r0]
   21b30:	ldr	r0, [fp, #-16]
   21b34:	str	r0, [fp, #-12]
   21b38:	mvn	r0, #0
   21b3c:	str	r0, [sp, #8]
   21b40:	str	r1, [sp, #12]
   21b44:	ldr	r0, [sp, #12]
   21b48:	cmp	r0, #16
   21b4c:	bge	21bb0 <rb_radixtree_elem_delete+0xf0>
   21b50:	ldr	r0, [fp, #-12]
   21b54:	add	r0, r0, #4
   21b58:	ldr	r1, [sp, #12]
   21b5c:	add	r0, r0, r1, lsl #2
   21b60:	ldr	r0, [r0]
   21b64:	movw	r1, #0
   21b68:	cmp	r0, r1
   21b6c:	beq	21b9c <rb_radixtree_elem_delete+0xdc>
   21b70:	ldr	r0, [sp, #8]
   21b74:	cmn	r0, #1
   21b78:	bne	21b88 <rb_radixtree_elem_delete+0xc8>
   21b7c:	ldr	r0, [sp, #12]
   21b80:	str	r0, [sp, #4]
   21b84:	b	21b94 <rb_radixtree_elem_delete+0xd4>
   21b88:	mvn	r0, #1
   21b8c:	str	r0, [sp, #4]
   21b90:	b	21b94 <rb_radixtree_elem_delete+0xd4>
   21b94:	ldr	r0, [sp, #4]
   21b98:	str	r0, [sp, #8]
   21b9c:	b	21ba0 <rb_radixtree_elem_delete+0xe0>
   21ba0:	ldr	r0, [sp, #12]
   21ba4:	add	r0, r0, #1
   21ba8:	str	r0, [sp, #12]
   21bac:	b	21b44 <rb_radixtree_elem_delete+0x84>
   21bb0:	ldr	r0, [sp, #8]
   21bb4:	cmp	r0, #0
   21bb8:	blt	21c70 <rb_radixtree_elem_delete+0x1b0>
   21bbc:	ldr	r0, [fp, #-12]
   21bc0:	add	r0, r0, #4
   21bc4:	ldr	r1, [sp, #8]
   21bc8:	add	r0, r0, r1, lsl #2
   21bcc:	ldr	r0, [r0]
   21bd0:	str	r0, [sp, #20]
   21bd4:	ldr	r0, [fp, #-12]
   21bd8:	ldrb	r0, [r0, #72]	; 0x48
   21bdc:	str	r0, [sp, #16]
   21be0:	ldr	r0, [fp, #-12]
   21be4:	ldr	r0, [r0, #68]	; 0x44
   21be8:	str	r0, [fp, #-16]
   21bec:	ldr	r0, [fp, #-16]
   21bf0:	movw	r1, #0
   21bf4:	cmp	r0, r1
   21bf8:	beq	21c18 <rb_radixtree_elem_delete+0x158>
   21bfc:	ldr	r0, [sp, #20]
   21c00:	ldr	r1, [fp, #-16]
   21c04:	add	r1, r1, #4
   21c08:	ldr	r2, [sp, #16]
   21c0c:	add	r1, r1, r2, lsl #2
   21c10:	str	r0, [r1]
   21c14:	b	21c24 <rb_radixtree_elem_delete+0x164>
   21c18:	ldr	r0, [sp, #20]
   21c1c:	ldr	r1, [fp, #-4]
   21c20:	str	r0, [r1, #4]
   21c24:	ldr	r0, [sp, #20]
   21c28:	ldr	r0, [r0]
   21c2c:	cmn	r0, #1
   21c30:	bne	21c50 <rb_radixtree_elem_delete+0x190>
   21c34:	ldr	r0, [fp, #-16]
   21c38:	ldr	r1, [sp, #20]
   21c3c:	str	r0, [r1, #12]
   21c40:	ldr	r0, [sp, #16]
   21c44:	ldr	r1, [sp, #20]
   21c48:	strb	r0, [r1, #16]
   21c4c:	b	21c68 <rb_radixtree_elem_delete+0x1a8>
   21c50:	ldr	r0, [fp, #-16]
   21c54:	ldr	r1, [sp, #20]
   21c58:	str	r0, [r1, #68]	; 0x44
   21c5c:	ldr	r0, [sp, #16]
   21c60:	ldr	r1, [sp, #20]
   21c64:	strb	r0, [r1, #72]	; 0x48
   21c68:	ldr	r0, [fp, #-12]
   21c6c:	bl	20c08 <rb_free>
   21c70:	b	21c80 <rb_radixtree_elem_delete+0x1c0>
   21c74:	ldr	r0, [fp, #-4]
   21c78:	movw	r1, #0
   21c7c:	str	r1, [r0, #4]
   21c80:	ldr	r0, [fp, #-4]
   21c84:	ldr	r1, [r0, #8]
   21c88:	mvn	r2, #0
   21c8c:	add	r1, r1, r2
   21c90:	str	r1, [r0, #8]
   21c94:	ldr	r0, [fp, #-4]
   21c98:	ldr	r0, [r0, #8]
   21c9c:	cmp	r0, #0
   21ca0:	bne	21cb0 <rb_radixtree_elem_delete+0x1f0>
   21ca4:	ldr	r0, [fp, #-4]
   21ca8:	movw	r1, #0
   21cac:	str	r1, [r0, #4]
   21cb0:	mov	sp, fp
   21cb4:	pop	{fp, pc}

00021cb8 <rb_radixtree_retrieve>:
   21cb8:	push	{fp, lr}
   21cbc:	mov	fp, sp
   21cc0:	sub	sp, sp, #16
   21cc4:	str	r0, [sp, #8]
   21cc8:	str	r1, [sp, #4]
   21ccc:	ldr	r0, [sp, #8]
   21cd0:	ldr	r1, [sp, #4]
   21cd4:	movw	r2, #0
   21cd8:	bl	5548 <rb_radixtree_elem_find@plt>
   21cdc:	str	r0, [sp]
   21ce0:	ldr	r0, [sp]
   21ce4:	movw	r1, #0
   21ce8:	cmp	r0, r1
   21cec:	beq	21d00 <rb_radixtree_retrieve+0x48>
   21cf0:	ldr	r0, [sp]
   21cf4:	ldr	r0, [r0, #4]
   21cf8:	str	r0, [fp, #-4]
   21cfc:	b	21d08 <rb_radixtree_retrieve+0x50>
   21d00:	movw	r0, #0
   21d04:	str	r0, [fp, #-4]
   21d08:	ldr	r0, [fp, #-4]
   21d0c:	mov	sp, fp
   21d10:	pop	{fp, pc}

00021d14 <rb_radixtree_elem_get_key>:
   21d14:	sub	sp, sp, #4
   21d18:	str	r0, [sp]
   21d1c:	ldr	r0, [sp]
   21d20:	ldr	r0, [r0, #8]
   21d24:	add	sp, sp, #4
   21d28:	bx	lr

00021d2c <rb_radixtree_elem_set_data>:
   21d2c:	sub	sp, sp, #8
   21d30:	str	r0, [sp, #4]
   21d34:	str	r1, [sp]
   21d38:	ldr	r0, [sp]
   21d3c:	ldr	r1, [sp, #4]
   21d40:	str	r0, [r1, #4]
   21d44:	add	sp, sp, #8
   21d48:	bx	lr

00021d4c <rb_radixtree_elem_get_data>:
   21d4c:	sub	sp, sp, #4
   21d50:	str	r0, [sp]
   21d54:	ldr	r0, [sp]
   21d58:	ldr	r0, [r0, #4]
   21d5c:	add	sp, sp, #4
   21d60:	bx	lr

00021d64 <rb_radixtree_size>:
   21d64:	sub	sp, sp, #4
   21d68:	str	r0, [sp]
   21d6c:	ldr	r0, [sp]
   21d70:	ldr	r0, [r0, #8]
   21d74:	add	sp, sp, #4
   21d78:	bx	lr

00021d7c <rb_radixtree_stats>:
   21d7c:	push	{r4, r5, r6, sl, fp, lr}
   21d80:	add	fp, sp, #16
   21d84:	sub	sp, sp, #320	; 0x140
   21d88:	str	r0, [fp, #-20]	; 0xffffffec
   21d8c:	str	r1, [fp, #-24]	; 0xffffffe8
   21d90:	str	r2, [fp, #-28]	; 0xffffffe4
   21d94:	movw	r0, #0
   21d98:	str	r0, [sp, #44]	; 0x2c
   21d9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21da0:	ldr	r0, [r0, #8]
   21da4:	cmp	r0, #0
   21da8:	bls	21e38 <rb_radixtree_stats+0xbc>
   21dac:	ldr	r0, [fp, #-20]	; 0xffffffec
   21db0:	ldr	r0, [r0, #4]
   21db4:	movw	r1, #0
   21db8:	add	r2, sp, #44	; 0x2c
   21dbc:	bl	21ecc <stats_recurse>
   21dc0:	ldr	r1, [pc, #252]	; 21ec4 <rb_radixtree_stats+0x148>
   21dc4:	add	r2, pc, r1
   21dc8:	ldr	r1, [pc, #248]	; 21ec8 <rb_radixtree_stats+0x14c>
   21dcc:	add	r1, pc, r1
   21dd0:	add	r3, sp, #52	; 0x34
   21dd4:	str	r0, [sp, #48]	; 0x30
   21dd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   21ddc:	ldr	r0, [r0, #12]
   21de0:	ldr	ip, [fp, #-20]	; 0xffffffec
   21de4:	ldr	ip, [ip, #8]
   21de8:	ldr	lr, [sp, #48]	; 0x30
   21dec:	ldr	r4, [sp, #48]	; 0x30
   21df0:	ldr	r5, [fp, #-20]	; 0xffffffec
   21df4:	ldr	r5, [r5, #8]
   21df8:	udiv	r4, r4, r5
   21dfc:	ldr	r5, [sp, #44]	; 0x2c
   21e00:	str	r0, [sp, #40]	; 0x28
   21e04:	mov	r0, r3
   21e08:	movw	r3, #256	; 0x100
   21e0c:	str	r1, [sp, #36]	; 0x24
   21e10:	mov	r1, r3
   21e14:	ldr	r3, [sp, #40]	; 0x28
   21e18:	ldr	r6, [sp, #36]	; 0x24
   21e1c:	str	r6, [sp]
   21e20:	str	ip, [sp, #4]
   21e24:	str	lr, [sp, #8]
   21e28:	str	r4, [sp, #12]
   21e2c:	str	r5, [sp, #16]
   21e30:	bl	5584 <snprintf@plt>
   21e34:	b	21e94 <rb_radixtree_stats+0x118>
   21e38:	ldr	r0, [pc, #120]	; 21eb8 <rb_radixtree_stats+0x13c>
   21e3c:	add	r2, pc, r0
   21e40:	ldr	r0, [pc, #116]	; 21ebc <rb_radixtree_stats+0x140>
   21e44:	add	r0, pc, r0
   21e48:	ldr	r1, [pc, #112]	; 21ec0 <rb_radixtree_stats+0x144>
   21e4c:	add	r1, pc, r1
   21e50:	add	r3, sp, #52	; 0x34
   21e54:	ldr	ip, [fp, #-20]	; 0xffffffec
   21e58:	ldr	ip, [ip, #12]
   21e5c:	str	r0, [sp, #32]
   21e60:	mov	r0, r3
   21e64:	movw	r3, #256	; 0x100
   21e68:	str	r1, [sp, #28]
   21e6c:	mov	r1, r3
   21e70:	mov	r3, ip
   21e74:	ldr	ip, [sp, #32]
   21e78:	str	ip, [sp]
   21e7c:	ldr	lr, [sp, #28]
   21e80:	str	lr, [sp, #4]
   21e84:	str	lr, [sp, #8]
   21e88:	str	lr, [sp, #12]
   21e8c:	str	lr, [sp, #16]
   21e90:	bl	5584 <snprintf@plt>
   21e94:	add	r0, sp, #52	; 0x34
   21e98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21e9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21ea0:	str	r1, [sp, #24]
   21ea4:	mov	r1, r2
   21ea8:	ldr	r2, [sp, #24]
   21eac:	blx	r2
   21eb0:	sub	sp, fp, #16
   21eb4:	pop	{r4, r5, r6, sl, fp, pc}
   21eb8:	.word	0x00001cb5
   21ebc:	.word	0x00001cd1
   21ec0:	.word	0x00000e76
   21ec4:	.word	0x00001d04
   21ec8:	.word	0x00001d49

00021ecc <stats_recurse>:
   21ecc:	push	{fp, lr}
   21ed0:	mov	fp, sp
   21ed4:	sub	sp, sp, #32
   21ed8:	str	r0, [fp, #-8]
   21edc:	str	r1, [fp, #-12]
   21ee0:	str	r2, [sp, #16]
   21ee4:	movw	r0, #0
   21ee8:	str	r0, [sp, #12]
   21eec:	ldr	r0, [fp, #-12]
   21ef0:	ldr	r1, [sp, #16]
   21ef4:	ldr	r1, [r1]
   21ef8:	cmp	r0, r1
   21efc:	ble	21f0c <stats_recurse+0x40>
   21f00:	ldr	r0, [fp, #-12]
   21f04:	ldr	r1, [sp, #16]
   21f08:	str	r0, [r1]
   21f0c:	ldr	r0, [fp, #-12]
   21f10:	cmp	r0, #0
   21f14:	bne	21f34 <stats_recurse+0x68>
   21f18:	ldr	r0, [fp, #-8]
   21f1c:	ldr	r0, [r0]
   21f20:	cmn	r0, #1
   21f24:	bne	21f2c <stats_recurse+0x60>
   21f28:	b	21f30 <stats_recurse+0x64>
   21f2c:	b	21f30 <stats_recurse+0x64>
   21f30:	b	21f34 <stats_recurse+0x68>
   21f34:	ldr	r0, [fp, #-8]
   21f38:	ldr	r0, [r0]
   21f3c:	cmn	r0, #1
   21f40:	bne	21f50 <stats_recurse+0x84>
   21f44:	ldr	r0, [fp, #-12]
   21f48:	str	r0, [fp, #-4]
   21f4c:	b	21fe4 <stats_recurse+0x118>
   21f50:	movw	r0, #0
   21f54:	str	r0, [sp, #8]
   21f58:	ldr	r0, [sp, #8]
   21f5c:	cmp	r0, #16
   21f60:	bge	21fdc <stats_recurse+0x110>
   21f64:	ldr	r0, [fp, #-8]
   21f68:	add	r0, r0, #4
   21f6c:	ldr	r1, [sp, #8]
   21f70:	add	r0, r0, r1, lsl #2
   21f74:	ldr	r0, [r0]
   21f78:	str	r0, [sp, #4]
   21f7c:	ldr	r0, [sp, #4]
   21f80:	movw	r1, #0
   21f84:	cmp	r0, r1
   21f88:	bne	21f90 <stats_recurse+0xc4>
   21f8c:	b	21fcc <stats_recurse+0x100>
   21f90:	ldr	r0, [sp, #4]
   21f94:	ldr	r1, [fp, #-12]
   21f98:	add	r1, r1, #1
   21f9c:	ldr	r2, [sp, #16]
   21fa0:	bl	21ecc <stats_recurse>
   21fa4:	ldr	r1, [sp, #12]
   21fa8:	add	r0, r1, r0
   21fac:	str	r0, [sp, #12]
   21fb0:	ldr	r0, [sp, #4]
   21fb4:	ldr	r0, [r0]
   21fb8:	cmn	r0, #1
   21fbc:	bne	21fc4 <stats_recurse+0xf8>
   21fc0:	b	21fc8 <stats_recurse+0xfc>
   21fc4:	b	21fc8 <stats_recurse+0xfc>
   21fc8:	b	21fcc <stats_recurse+0x100>
   21fcc:	ldr	r0, [sp, #8]
   21fd0:	add	r0, r0, #1
   21fd4:	str	r0, [sp, #8]
   21fd8:	b	21f58 <stats_recurse+0x8c>
   21fdc:	ldr	r0, [sp, #12]
   21fe0:	str	r0, [fp, #-4]
   21fe4:	ldr	r0, [fp, #-4]
   21fe8:	mov	sp, fp
   21fec:	pop	{fp, pc}

00021ff0 <rb_radixtree_stats_walk>:
   21ff0:	push	{fp, lr}
   21ff4:	mov	fp, sp
   21ff8:	sub	sp, sp, #16
   21ffc:	ldr	r2, [pc, #76]	; 22050 <rb_radixtree_stats_walk+0x60>
   22000:	ldr	r2, [pc, r2]
   22004:	str	r0, [fp, #-4]
   22008:	str	r1, [sp, #8]
   2200c:	ldr	r0, [r2]
   22010:	str	r0, [sp, #4]
   22014:	ldr	r0, [sp, #4]
   22018:	movw	r1, #0
   2201c:	cmp	r0, r1
   22020:	beq	22048 <rb_radixtree_stats_walk+0x58>
   22024:	ldr	r0, [sp, #4]
   22028:	ldr	r0, [r0]
   2202c:	ldr	r1, [fp, #-4]
   22030:	ldr	r2, [sp, #8]
   22034:	bl	5008 <rb_radixtree_stats@plt>
   22038:	ldr	r0, [sp, #4]
   2203c:	ldr	r0, [r0, #8]
   22040:	str	r0, [sp, #4]
   22044:	b	22014 <rb_radixtree_stats_walk+0x24>
   22048:	mov	sp, fp
   2204c:	pop	{fp, pc}
   22050:	.word	0x000123f4

00022054 <__stat>:
   22054:	mov	r2, r1
   22058:	mov	r1, r0
   2205c:	mov	r0, #3
   22060:	b	4e4c <__xstat@plt>

00022064 <__fstat>:
   22064:	mov	r2, r1
   22068:	mov	r1, r0
   2206c:	mov	r0, #3
   22070:	b	5530 <__fxstat@plt>

Disassembly of section .fini:

00022074 <_fini>:
   22074:	push	{r3, lr}
   22078:	pop	{r3, pc}
