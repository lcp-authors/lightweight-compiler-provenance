
../repos/coreutils/src/sleep:     file format elf32-littlearm


Disassembly of section .init:

00010b94 <.init>:
   10b94:	push	{r3, lr}
   10b98:	bl	110f8 <abort@plt+0x310>
   10b9c:	pop	{r3, pc}

Disassembly of section .plt:

00010ba0 <calloc@plt-0x14>:
   10ba0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ba4:	ldr	lr, [pc, #4]	; 10bb0 <calloc@plt-0x4>
   10ba8:	add	lr, pc, lr
   10bac:	ldr	pc, [lr, #8]!
   10bb0:	andeq	r5, r1, r0, asr r4

00010bb4 <calloc@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #86016	; 0x15000
   10bbc:	ldr	pc, [ip, #1104]!	; 0x450

00010bc0 <fputs_unlocked@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #86016	; 0x15000
   10bc8:	ldr	pc, [ip, #1096]!	; 0x448

00010bcc <raise@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #86016	; 0x15000
   10bd4:	ldr	pc, [ip, #1088]!	; 0x440

00010bd8 <strcmp@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #86016	; 0x15000
   10be0:	ldr	pc, [ip, #1080]!	; 0x438

00010be4 <pause@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #86016	; 0x15000
   10bec:	ldr	pc, [ip, #1072]!	; 0x430

00010bf0 <fflush@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #86016	; 0x15000
   10bf8:	ldr	pc, [ip, #1064]!	; 0x428

00010bfc <free@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #86016	; 0x15000
   10c04:	ldr	pc, [ip, #1056]!	; 0x420

00010c08 <nanosleep@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #86016	; 0x15000
   10c10:	ldr	pc, [ip, #1048]!	; 0x418

00010c14 <_exit@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #86016	; 0x15000
   10c1c:	ldr	pc, [ip, #1040]!	; 0x410

00010c20 <memcpy@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #86016	; 0x15000
   10c28:	ldr	pc, [ip, #1032]!	; 0x408

00010c2c <mbsinit@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #86016	; 0x15000
   10c34:	ldr	pc, [ip, #1024]!	; 0x400

00010c38 <memcmp@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #86016	; 0x15000
   10c40:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c44 <fputc_unlocked@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #86016	; 0x15000
   10c4c:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c50 <dcgettext@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #86016	; 0x15000
   10c58:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c5c <realloc@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #86016	; 0x15000
   10c64:	ldr	pc, [ip, #992]!	; 0x3e0

00010c68 <textdomain@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #86016	; 0x15000
   10c70:	ldr	pc, [ip, #984]!	; 0x3d8

00010c74 <iswprint@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #86016	; 0x15000
   10c7c:	ldr	pc, [ip, #976]!	; 0x3d0

00010c80 <fwrite@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #86016	; 0x15000
   10c88:	ldr	pc, [ip, #968]!	; 0x3c8

00010c8c <lseek64@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #86016	; 0x15000
   10c94:	ldr	pc, [ip, #960]!	; 0x3c0

00010c98 <__ctype_get_mb_cur_max@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #86016	; 0x15000
   10ca0:	ldr	pc, [ip, #952]!	; 0x3b8

00010ca4 <__fpending@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #86016	; 0x15000
   10cac:	ldr	pc, [ip, #944]!	; 0x3b0

00010cb0 <mbrtowc@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #86016	; 0x15000
   10cb8:	ldr	pc, [ip, #936]!	; 0x3a8

00010cbc <error@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #86016	; 0x15000
   10cc4:	ldr	pc, [ip, #928]!	; 0x3a0

00010cc8 <malloc@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #86016	; 0x15000
   10cd0:	ldr	pc, [ip, #920]!	; 0x398

00010cd4 <__libc_start_main@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #86016	; 0x15000
   10cdc:	ldr	pc, [ip, #912]!	; 0x390

00010ce0 <__freading@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #86016	; 0x15000
   10ce8:	ldr	pc, [ip, #904]!	; 0x388

00010cec <__gmon_start__@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #86016	; 0x15000
   10cf4:	ldr	pc, [ip, #896]!	; 0x380

00010cf8 <getopt_long@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #86016	; 0x15000
   10d00:	ldr	pc, [ip, #888]!	; 0x378

00010d04 <__ctype_b_loc@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #86016	; 0x15000
   10d0c:	ldr	pc, [ip, #880]!	; 0x370

00010d10 <exit@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #86016	; 0x15000
   10d18:	ldr	pc, [ip, #872]!	; 0x368

00010d1c <strlen@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #86016	; 0x15000
   10d24:	ldr	pc, [ip, #864]!	; 0x360

00010d28 <__errno_location@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #86016	; 0x15000
   10d30:	ldr	pc, [ip, #856]!	; 0x358

00010d34 <__cxa_atexit@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #86016	; 0x15000
   10d3c:	ldr	pc, [ip, #848]!	; 0x350

00010d40 <memset@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #86016	; 0x15000
   10d48:	ldr	pc, [ip, #840]!	; 0x348

00010d4c <__printf_chk@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #86016	; 0x15000
   10d54:	ldr	pc, [ip, #832]!	; 0x340

00010d58 <strtod@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #86016	; 0x15000
   10d60:	ldr	pc, [ip, #824]!	; 0x338

00010d64 <fileno@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #86016	; 0x15000
   10d6c:	ldr	pc, [ip, #816]!	; 0x330

00010d70 <__fprintf_chk@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #86016	; 0x15000
   10d78:	ldr	pc, [ip, #808]!	; 0x328

00010d7c <fclose@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #86016	; 0x15000
   10d84:	ldr	pc, [ip, #800]!	; 0x320

00010d88 <fseeko64@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #86016	; 0x15000
   10d90:	ldr	pc, [ip, #792]!	; 0x318

00010d94 <strtod_l@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #86016	; 0x15000
   10d9c:	ldr	pc, [ip, #784]!	; 0x310

00010da0 <setlocale@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #86016	; 0x15000
   10da8:	ldr	pc, [ip, #776]!	; 0x308

00010dac <strrchr@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #86016	; 0x15000
   10db4:	ldr	pc, [ip, #768]!	; 0x300

00010db8 <nl_langinfo@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #86016	; 0x15000
   10dc0:	ldr	pc, [ip, #760]!	; 0x2f8

00010dc4 <newlocale@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #752]!	; 0x2f0

00010dd0 <bindtextdomain@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #744]!	; 0x2e8

00010ddc <strncmp@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #736]!	; 0x2e0

00010de8 <abort@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #728]!	; 0x2d8

Disassembly of section .text:

00010df8 <.text>:
   10df8:	push	{r4, r5, r6, r7, r8, lr}
   10dfc:	vpush	{d8-d13}
   10e00:	mov	r7, r0
   10e04:	ldr	r0, [r1]
   10e08:	mov	r4, r1
   10e0c:	sub	sp, sp, #40	; 0x28
   10e10:	bl	117a4 <abort@plt+0x9bc>
   10e14:	ldr	r1, [pc, #612]	; 11080 <abort@plt+0x298>
   10e18:	mov	r0, #6
   10e1c:	bl	10da0 <setlocale@plt>
   10e20:	ldr	r1, [pc, #604]	; 11084 <abort@plt+0x29c>
   10e24:	ldr	r0, [pc, #604]	; 11088 <abort@plt+0x2a0>
   10e28:	bl	10dd0 <bindtextdomain@plt>
   10e2c:	ldr	r0, [pc, #596]	; 11088 <abort@plt+0x2a0>
   10e30:	bl	10c68 <textdomain@plt>
   10e34:	ldr	r0, [pc, #592]	; 1108c <abort@plt+0x2a4>
   10e38:	bl	14d84 <abort@plt+0x3f9c>
   10e3c:	ldr	r3, [pc, #588]	; 11090 <abort@plt+0x2a8>
   10e40:	ldr	ip, [pc, #588]	; 11094 <abort@plt+0x2ac>
   10e44:	ldr	r2, [pc, #588]	; 11098 <abort@plt+0x2b0>
   10e48:	ldr	r1, [r3]
   10e4c:	ldr	r3, [pc, #584]	; 1109c <abort@plt+0x2b4>
   10e50:	mov	r6, #1
   10e54:	mov	r5, #0
   10e58:	str	r1, [sp]
   10e5c:	str	r2, [sp, #12]
   10e60:	str	r3, [sp, #8]
   10e64:	mov	r1, r4
   10e68:	mov	r0, r7
   10e6c:	str	ip, [sp, #16]
   10e70:	str	r5, [sp, #20]
   10e74:	str	r6, [sp, #4]
   10e78:	ldr	r3, [pc, #544]	; 110a0 <abort@plt+0x2b8>
   10e7c:	ldr	r2, [pc, #544]	; 110a4 <abort@plt+0x2bc>
   10e80:	bl	116cc <abort@plt+0x8e4>
   10e84:	cmp	r7, r6
   10e88:	beq	10ffc <abort@plt+0x214>
   10e8c:	ldr	r3, [pc, #532]	; 110a8 <abort@plt+0x2c0>
   10e90:	vldr	d8, [pc, #448]	; 11058 <abort@plt+0x270>
   10e94:	ldr	r5, [r3]
   10e98:	cmp	r7, r5
   10e9c:	ble	10fd8 <abort@plt+0x1f0>
   10ea0:	vldr	d10, [pc, #440]	; 11060 <abort@plt+0x278>
   10ea4:	vldr	d13, [pc, #444]	; 11068 <abort@plt+0x280>
   10ea8:	vldr	d12, [pc, #448]	; 11070 <abort@plt+0x288>
   10eac:	vmov.f64	d9, d8
   10eb0:	vldr	d11, [pc, #448]	; 11078 <abort@plt+0x290>
   10eb4:	ldr	r8, [pc, #496]	; 110ac <abort@plt+0x2c4>
   10eb8:	add	r4, r4, r5, lsl #2
   10ebc:	b	10f1c <abort@plt+0x134>
   10ec0:	bl	10d28 <__errno_location@plt>
   10ec4:	ldr	r3, [r0]
   10ec8:	cmp	r3, #34	; 0x22
   10ecc:	beq	10f38 <abort@plt+0x150>
   10ed0:	mov	r2, #5
   10ed4:	ldr	r1, [pc, #468]	; 110b0 <abort@plt+0x2c8>
   10ed8:	mov	r0, #0
   10edc:	bl	10c50 <dcgettext@plt>
   10ee0:	mov	r6, r0
   10ee4:	ldr	r0, [r4]
   10ee8:	bl	13664 <abort@plt+0x287c>
   10eec:	mov	r1, #0
   10ef0:	mov	r2, r6
   10ef4:	mov	r6, #0
   10ef8:	mov	r3, r0
   10efc:	mov	r0, r1
   10f00:	bl	10cbc <error@plt>
   10f04:	vldr	d7, [sp, #32]
   10f08:	add	r5, r5, #1
   10f0c:	cmp	r7, r5
   10f10:	vadd.f64	d8, d8, d7
   10f14:	add	r4, r4, #4
   10f18:	beq	10fd0 <abort@plt+0x1e8>
   10f1c:	mov	r3, r8
   10f20:	add	r2, sp, #32
   10f24:	add	r1, sp, #28
   10f28:	ldr	r0, [r4]
   10f2c:	bl	141c8 <abort@plt+0x33e0>
   10f30:	cmp	r0, #0
   10f34:	beq	10ec0 <abort@plt+0xd8>
   10f38:	vldr	d7, [sp, #32]
   10f3c:	vcmpe.f64	d7, d9
   10f40:	vmrs	APSR_nzcv, fpscr
   10f44:	blt	10ed0 <abort@plt+0xe8>
   10f48:	ldr	r2, [sp, #28]
   10f4c:	ldrb	r3, [r2]
   10f50:	cmp	r3, #0
   10f54:	beq	10fc8 <abort@plt+0x1e0>
   10f58:	ldrb	r2, [r2, #1]
   10f5c:	cmp	r2, #0
   10f60:	bne	10ed0 <abort@plt+0xe8>
   10f64:	sub	r3, r3, #100	; 0x64
   10f68:	cmp	r3, #15
   10f6c:	ldrls	pc, [pc, r3, lsl #2]
   10f70:	b	10ed0 <abort@plt+0xe8>
   10f74:	andeq	r0, r1, r0, asr #31
   10f78:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f7c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f80:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f84:			; <UNDEFINED> instruction: 0x00010fb4
   10f88:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f8c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f90:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f94:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f98:	strdeq	r0, [r1], -r4
   10f9c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10fa0:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10fa4:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10fa8:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10fac:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10fb0:	andeq	r0, r1, r8, asr #31
   10fb4:	vmov.f64	d6, d11
   10fb8:	vmul.f64	d7, d7, d6
   10fbc:	b	10f08 <abort@plt+0x120>
   10fc0:	vmov.f64	d6, d12
   10fc4:	b	10fb8 <abort@plt+0x1d0>
   10fc8:	vmov.f64	d6, d10
   10fcc:	b	10fb8 <abort@plt+0x1d0>
   10fd0:	cmp	r6, #0
   10fd4:	beq	11024 <abort@plt+0x23c>
   10fd8:	vmov.f64	d0, d8
   10fdc:	bl	14128 <abort@plt+0x3340>
   10fe0:	cmp	r0, #0
   10fe4:	bne	1102c <abort@plt+0x244>
   10fe8:	add	sp, sp, #40	; 0x28
   10fec:	vpop	{d8-d13}
   10ff0:	pop	{r4, r5, r6, r7, r8, pc}
   10ff4:	vmov.f64	d6, d13
   10ff8:	b	10fb8 <abort@plt+0x1d0>
   10ffc:	mov	r2, #5
   11000:	ldr	r1, [pc, #172]	; 110b4 <abort@plt+0x2cc>
   11004:	mov	r0, r5
   11008:	bl	10c50 <dcgettext@plt>
   1100c:	mov	r1, r5
   11010:	mov	r2, r0
   11014:	mov	r0, r5
   11018:	bl	10cbc <error@plt>
   1101c:	mov	r0, r7
   11020:	bl	111e4 <abort@plt+0x3fc>
   11024:	mov	r0, #1
   11028:	bl	111e4 <abort@plt+0x3fc>
   1102c:	bl	10d28 <__errno_location@plt>
   11030:	mov	r2, #5
   11034:	ldr	r1, [pc, #124]	; 110b8 <abort@plt+0x2d0>
   11038:	ldr	r4, [r0]
   1103c:	mov	r0, #0
   11040:	bl	10c50 <dcgettext@plt>
   11044:	mov	r1, r4
   11048:	mov	r2, r0
   1104c:	mov	r0, #1
   11050:	bl	10cbc <error@plt>
   11054:	nop			; (mov r0, r0)
	...
   11064:	svccc	0x00f00000	; IMB
   11068:	andeq	r0, r0, r0
   1106c:	submi	r0, lr, r0
   11070:	andeq	r0, r0, r0
   11074:	rscsmi	r1, r5, r0, lsl #16
   11078:	andeq	r0, r0, r0
   1107c:	adcmi	r2, ip, r0
   11080:	andeq	r4, r1, r4, ror #30
   11084:	andeq	r5, r1, ip, lsl #1
   11088:	andeq	r4, r1, r4, ror #31
   1108c:	andeq	r1, r1, r0, lsr r5
   11090:	ldrdeq	r6, [r2], -r8
   11094:	andeq	r5, r1, r4, lsr #1
   11098:	strheq	r5, [r1], -r0
   1109c:	andeq	r1, r1, r4, ror #3
   110a0:	andeq	r4, r1, r0, ror #31
   110a4:	andeq	r4, r1, r0, ror #27
   110a8:	andeq	r6, r2, r8, lsr #2
   110ac:	muleq	r1, r4, r4
   110b0:	ldrdeq	r5, [r1], -r0
   110b4:	andeq	r5, r1, r0, asr #1
   110b8:	andeq	r5, r1, ip, ror #1
   110bc:	mov	fp, #0
   110c0:	mov	lr, #0
   110c4:	pop	{r1}		; (ldr r1, [sp], #4)
   110c8:	mov	r2, sp
   110cc:	push	{r2}		; (str r2, [sp, #-4]!)
   110d0:	push	{r0}		; (str r0, [sp, #-4]!)
   110d4:	ldr	ip, [pc, #16]	; 110ec <abort@plt+0x304>
   110d8:	push	{ip}		; (str ip, [sp, #-4]!)
   110dc:	ldr	r0, [pc, #12]	; 110f0 <abort@plt+0x308>
   110e0:	ldr	r3, [pc, #12]	; 110f4 <abort@plt+0x30c>
   110e4:	bl	10cd4 <__libc_start_main@plt>
   110e8:	bl	10de8 <abort@plt>
   110ec:	andeq	r4, r1, r0, lsl #27
   110f0:	strdeq	r0, [r1], -r8
   110f4:	andeq	r4, r1, r0, lsr #26
   110f8:	ldr	r3, [pc, #20]	; 11114 <abort@plt+0x32c>
   110fc:	ldr	r2, [pc, #20]	; 11118 <abort@plt+0x330>
   11100:	add	r3, pc, r3
   11104:	ldr	r2, [r3, r2]
   11108:	cmp	r2, #0
   1110c:	bxeq	lr
   11110:	b	10cec <__gmon_start__@plt>
   11114:	strdeq	r4, [r1], -r8
   11118:	andeq	r0, r0, ip, asr #1
   1111c:	ldr	r3, [pc, #28]	; 11140 <abort@plt+0x358>
   11120:	ldr	r0, [pc, #28]	; 11144 <abort@plt+0x35c>
   11124:	sub	r3, r3, r0
   11128:	cmp	r3, #6
   1112c:	bxls	lr
   11130:	ldr	r3, [pc, #16]	; 11148 <abort@plt+0x360>
   11134:	cmp	r3, #0
   11138:	bxeq	lr
   1113c:	bx	r3
   11140:	andeq	r6, r2, r3, lsr #2
   11144:	andeq	r6, r2, r0, lsr #2
   11148:	andeq	r0, r0, r0
   1114c:	ldr	r1, [pc, #36]	; 11178 <abort@plt+0x390>
   11150:	ldr	r0, [pc, #36]	; 1117c <abort@plt+0x394>
   11154:	sub	r1, r1, r0
   11158:	asr	r1, r1, #2
   1115c:	add	r1, r1, r1, lsr #31
   11160:	asrs	r1, r1, #1
   11164:	bxeq	lr
   11168:	ldr	r3, [pc, #16]	; 11180 <abort@plt+0x398>
   1116c:	cmp	r3, #0
   11170:	bxeq	lr
   11174:	bx	r3
   11178:	andeq	r6, r2, r0, lsr #2
   1117c:	andeq	r6, r2, r0, lsr #2
   11180:	andeq	r0, r0, r0
   11184:	push	{r4, lr}
   11188:	ldr	r4, [pc, #24]	; 111a8 <abort@plt+0x3c0>
   1118c:	ldrb	r3, [r4]
   11190:	cmp	r3, #0
   11194:	popne	{r4, pc}
   11198:	bl	1111c <abort@plt+0x334>
   1119c:	mov	r3, #1
   111a0:	strb	r3, [r4]
   111a4:	pop	{r4, pc}
   111a8:	andeq	r6, r2, ip, lsr r1
   111ac:	ldr	r0, [pc, #40]	; 111dc <abort@plt+0x3f4>
   111b0:	ldr	r3, [r0]
   111b4:	cmp	r3, #0
   111b8:	bne	111c0 <abort@plt+0x3d8>
   111bc:	b	1114c <abort@plt+0x364>
   111c0:	ldr	r3, [pc, #24]	; 111e0 <abort@plt+0x3f8>
   111c4:	cmp	r3, #0
   111c8:	beq	111bc <abort@plt+0x3d4>
   111cc:	push	{r4, lr}
   111d0:	blx	r3
   111d4:	pop	{r4, lr}
   111d8:	b	1114c <abort@plt+0x364>
   111dc:	andeq	r5, r2, r4, lsl pc
   111e0:	andeq	r0, r0, r0
   111e4:	subs	r6, r0, #0
   111e8:	push	{r7, lr}
   111ec:	sub	sp, sp, #56	; 0x38
   111f0:	beq	1122c <abort@plt+0x444>
   111f4:	ldr	r3, [pc, #592]	; 1144c <abort@plt+0x664>
   111f8:	mov	r2, #5
   111fc:	ldr	r1, [pc, #588]	; 11450 <abort@plt+0x668>
   11200:	mov	r0, #0
   11204:	ldr	r4, [r3]
   11208:	bl	10c50 <dcgettext@plt>
   1120c:	ldr	r3, [pc, #576]	; 11454 <abort@plt+0x66c>
   11210:	mov	r1, #1
   11214:	ldr	r3, [r3]
   11218:	mov	r2, r0
   1121c:	mov	r0, r4
   11220:	bl	10d70 <__fprintf_chk@plt>
   11224:	mov	r0, r6
   11228:	bl	10d10 <exit@plt>
   1122c:	mov	r2, #5
   11230:	ldr	r1, [pc, #544]	; 11458 <abort@plt+0x670>
   11234:	bl	10c50 <dcgettext@plt>
   11238:	ldr	r3, [pc, #532]	; 11454 <abort@plt+0x66c>
   1123c:	ldr	r7, [pc, #536]	; 1145c <abort@plt+0x674>
   11240:	ldr	r4, [pc, #536]	; 11460 <abort@plt+0x678>
   11244:	ldr	r3, [r3]
   11248:	mov	r2, r3
   1124c:	mov	r1, r0
   11250:	mov	r0, #1
   11254:	bl	10d4c <__printf_chk@plt>
   11258:	mov	r2, #5
   1125c:	ldr	r1, [pc, #512]	; 11464 <abort@plt+0x67c>
   11260:	mov	r0, r6
   11264:	bl	10c50 <dcgettext@plt>
   11268:	ldr	r1, [r7]
   1126c:	bl	10bc0 <fputs_unlocked@plt>
   11270:	mov	r2, #5
   11274:	ldr	r1, [pc, #492]	; 11468 <abort@plt+0x680>
   11278:	mov	r0, r6
   1127c:	bl	10c50 <dcgettext@plt>
   11280:	ldr	r1, [r7]
   11284:	bl	10bc0 <fputs_unlocked@plt>
   11288:	ldm	r4!, {r0, r1, r2, r3}
   1128c:	mov	lr, sp
   11290:	stmia	lr!, {r0, r1, r2, r3}
   11294:	ldm	r4!, {r0, r1, r2, r3}
   11298:	ldr	ip, [sp]
   1129c:	stmia	lr!, {r0, r1, r2, r3}
   112a0:	cmp	ip, #0
   112a4:	ldm	r4!, {r0, r1, r2, r3}
   112a8:	stmia	lr!, {r0, r1, r2, r3}
   112ac:	ldm	r4, {r0, r1}
   112b0:	moveq	r4, sp
   112b4:	stm	lr, {r0, r1}
   112b8:	beq	112e8 <abort@plt+0x500>
   112bc:	ldr	r5, [pc, #424]	; 1146c <abort@plt+0x684>
   112c0:	mov	r4, sp
   112c4:	b	112d4 <abort@plt+0x4ec>
   112c8:	ldr	ip, [r4, #8]!
   112cc:	cmp	ip, #0
   112d0:	beq	112e8 <abort@plt+0x500>
   112d4:	mov	r1, ip
   112d8:	mov	r0, r5
   112dc:	bl	10bd8 <strcmp@plt>
   112e0:	cmp	r0, #0
   112e4:	bne	112c8 <abort@plt+0x4e0>
   112e8:	ldr	r4, [r4, #4]
   112ec:	mov	r2, #5
   112f0:	cmp	r4, #0
   112f4:	ldr	r1, [pc, #372]	; 11470 <abort@plt+0x688>
   112f8:	beq	113a0 <abort@plt+0x5b8>
   112fc:	mov	r0, #0
   11300:	bl	10c50 <dcgettext@plt>
   11304:	ldr	r3, [pc, #360]	; 11474 <abort@plt+0x68c>
   11308:	ldr	r2, [pc, #360]	; 11478 <abort@plt+0x690>
   1130c:	mov	r1, r0
   11310:	mov	r0, #1
   11314:	bl	10d4c <__printf_chk@plt>
   11318:	mov	r1, #0
   1131c:	mov	r0, #5
   11320:	bl	10da0 <setlocale@plt>
   11324:	cmp	r0, #0
   11328:	ldreq	r5, [pc, #316]	; 1146c <abort@plt+0x684>
   1132c:	beq	11348 <abort@plt+0x560>
   11330:	mov	r2, #3
   11334:	ldr	r1, [pc, #320]	; 1147c <abort@plt+0x694>
   11338:	bl	10ddc <strncmp@plt>
   1133c:	ldr	r5, [pc, #296]	; 1146c <abort@plt+0x684>
   11340:	cmp	r0, #0
   11344:	bne	11430 <abort@plt+0x648>
   11348:	mov	r2, #5
   1134c:	ldr	r1, [pc, #300]	; 11480 <abort@plt+0x698>
   11350:	mov	r0, #0
   11354:	bl	10c50 <dcgettext@plt>
   11358:	ldr	r3, [pc, #268]	; 1146c <abort@plt+0x684>
   1135c:	ldr	r2, [pc, #272]	; 11474 <abort@plt+0x68c>
   11360:	mov	r1, r0
   11364:	mov	r0, #1
   11368:	bl	10d4c <__printf_chk@plt>
   1136c:	mov	r2, #5
   11370:	ldr	r1, [pc, #268]	; 11484 <abort@plt+0x69c>
   11374:	mov	r0, #0
   11378:	bl	10c50 <dcgettext@plt>
   1137c:	ldr	r2, [pc, #260]	; 11488 <abort@plt+0x6a0>
   11380:	cmp	r4, r5
   11384:	ldr	r3, [pc, #256]	; 1148c <abort@plt+0x6a4>
   11388:	movne	r3, r2
   1138c:	mov	r1, r0
   11390:	mov	r2, r4
   11394:	mov	r0, #1
   11398:	bl	10d4c <__printf_chk@plt>
   1139c:	b	11224 <abort@plt+0x43c>
   113a0:	mov	r0, r4
   113a4:	bl	10c50 <dcgettext@plt>
   113a8:	ldr	r3, [pc, #196]	; 11474 <abort@plt+0x68c>
   113ac:	ldr	r2, [pc, #196]	; 11478 <abort@plt+0x690>
   113b0:	mov	r1, r0
   113b4:	mov	r0, #1
   113b8:	bl	10d4c <__printf_chk@plt>
   113bc:	mov	r1, r4
   113c0:	mov	r0, #5
   113c4:	bl	10da0 <setlocale@plt>
   113c8:	cmp	r0, #0
   113cc:	beq	113e4 <abort@plt+0x5fc>
   113d0:	mov	r2, #3
   113d4:	ldr	r1, [pc, #160]	; 1147c <abort@plt+0x694>
   113d8:	bl	10ddc <strncmp@plt>
   113dc:	cmp	r0, #0
   113e0:	bne	11428 <abort@plt+0x640>
   113e4:	mov	r2, #5
   113e8:	ldr	r1, [pc, #144]	; 11480 <abort@plt+0x698>
   113ec:	mov	r0, #0
   113f0:	bl	10c50 <dcgettext@plt>
   113f4:	ldr	r3, [pc, #112]	; 1146c <abort@plt+0x684>
   113f8:	ldr	r2, [pc, #116]	; 11474 <abort@plt+0x68c>
   113fc:	mov	r4, r3
   11400:	mov	r1, r0
   11404:	mov	r0, #1
   11408:	bl	10d4c <__printf_chk@plt>
   1140c:	ldr	r1, [pc, #112]	; 11484 <abort@plt+0x69c>
   11410:	mov	r2, #5
   11414:	mov	r0, #0
   11418:	bl	10c50 <dcgettext@plt>
   1141c:	ldr	r3, [pc, #104]	; 1148c <abort@plt+0x6a4>
   11420:	mov	r1, r0
   11424:	b	11390 <abort@plt+0x5a8>
   11428:	ldr	r5, [pc, #60]	; 1146c <abort@plt+0x684>
   1142c:	mov	r4, r5
   11430:	mov	r2, #5
   11434:	ldr	r1, [pc, #84]	; 11490 <abort@plt+0x6a8>
   11438:	mov	r0, #0
   1143c:	bl	10c50 <dcgettext@plt>
   11440:	ldr	r1, [r7]
   11444:	bl	10bc0 <fputs_unlocked@plt>
   11448:	b	11348 <abort@plt+0x560>
   1144c:	andeq	r6, r2, r0, lsr r1
   11450:	andeq	r4, r1, r8, ror #27
   11454:	andeq	r6, r2, r8, asr #2
   11458:	andeq	r4, r1, r0, lsl lr
   1145c:	andeq	r6, r2, r4, lsr r1
   11460:	andeq	r4, r1, r8, lsr #27
   11464:	andeq	r4, r1, r8, lsr pc
   11468:	andeq	r4, r1, r8, ror #30
   1146c:	andeq	r4, r1, r0, ror #27
   11470:	andeq	r4, r1, r0, lsr #31
   11474:			; <UNDEFINED> instruction: 0x00014fb8
   11478:	andeq	r4, r1, r0, ror #31
   1147c:	strdeq	r4, [r1], -r0
   11480:	andeq	r5, r1, ip, lsr r0
   11484:	andeq	r5, r1, r8, asr r0
   11488:	andeq	r4, r1, r4, ror #30
   1148c:	andeq	r5, r1, r0, lsl r1
   11490:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11494:	push	{r4, r5, r6, lr}
   11498:	vpush	{d8}
   1149c:	mov	r4, r1
   114a0:	mov	r5, r0
   114a4:	sub	sp, sp, #8
   114a8:	mov	r1, sp
   114ac:	bl	10d58 <strtod@plt>
   114b0:	ldr	r3, [sp]
   114b4:	ldrb	r3, [r3]
   114b8:	cmp	r3, #0
   114bc:	vmov.f64	d8, d0
   114c0:	bne	114e0 <abort@plt+0x6f8>
   114c4:	cmp	r4, #0
   114c8:	vmov.f64	d0, d8
   114cc:	ldrne	r3, [sp]
   114d0:	strne	r3, [r4]
   114d4:	add	sp, sp, #8
   114d8:	vpop	{d8}
   114dc:	pop	{r4, r5, r6, pc}
   114e0:	bl	10d28 <__errno_location@plt>
   114e4:	add	r1, sp, #4
   114e8:	mov	r6, r0
   114ec:	mov	r0, r5
   114f0:	ldr	r5, [r6]
   114f4:	bl	14340 <abort@plt+0x3558>
   114f8:	ldm	sp, {r2, r3}
   114fc:	cmp	r2, r3
   11500:	strcc	r3, [sp]
   11504:	strcs	r5, [r6]
   11508:	vmovcc.f64	d8, d0
   1150c:	b	114c4 <abort@plt+0x6dc>
   11510:	ldr	r3, [pc, #4]	; 1151c <abort@plt+0x734>
   11514:	str	r0, [r3]
   11518:	bx	lr
   1151c:	andeq	r6, r2, r0, asr #2
   11520:	ldr	r3, [pc, #4]	; 1152c <abort@plt+0x744>
   11524:	strb	r0, [r3, #4]
   11528:	bx	lr
   1152c:	andeq	r6, r2, r0, asr #2
   11530:	ldr	r3, [pc, #192]	; 115f8 <abort@plt+0x810>
   11534:	push	{r4, r5, r6, lr}
   11538:	sub	sp, sp, #8
   1153c:	ldr	r0, [r3]
   11540:	bl	143bc <abort@plt+0x35d4>
   11544:	cmp	r0, #0
   11548:	beq	1156c <abort@plt+0x784>
   1154c:	ldr	r4, [pc, #168]	; 115fc <abort@plt+0x814>
   11550:	ldrb	r3, [r4, #4]
   11554:	cmp	r3, #0
   11558:	beq	11588 <abort@plt+0x7a0>
   1155c:	bl	10d28 <__errno_location@plt>
   11560:	ldr	r3, [r0]
   11564:	cmp	r3, #32
   11568:	bne	11588 <abort@plt+0x7a0>
   1156c:	ldr	r3, [pc, #140]	; 11600 <abort@plt+0x818>
   11570:	ldr	r0, [r3]
   11574:	bl	143bc <abort@plt+0x35d4>
   11578:	cmp	r0, #0
   1157c:	bne	115d0 <abort@plt+0x7e8>
   11580:	add	sp, sp, #8
   11584:	pop	{r4, r5, r6, pc}
   11588:	mov	r2, #5
   1158c:	ldr	r1, [pc, #112]	; 11604 <abort@plt+0x81c>
   11590:	mov	r0, #0
   11594:	bl	10c50 <dcgettext@plt>
   11598:	ldr	r4, [r4]
   1159c:	cmp	r4, #0
   115a0:	mov	r5, r0
   115a4:	beq	115dc <abort@plt+0x7f4>
   115a8:	bl	10d28 <__errno_location@plt>
   115ac:	ldr	r6, [r0]
   115b0:	mov	r0, r4
   115b4:	bl	134cc <abort@plt+0x26e4>
   115b8:	mov	r1, r6
   115bc:	str	r5, [sp]
   115c0:	ldr	r2, [pc, #64]	; 11608 <abort@plt+0x820>
   115c4:	mov	r3, r0
   115c8:	mov	r0, #0
   115cc:	bl	10cbc <error@plt>
   115d0:	ldr	r3, [pc, #52]	; 1160c <abort@plt+0x824>
   115d4:	ldr	r0, [r3]
   115d8:	bl	10c14 <_exit@plt>
   115dc:	bl	10d28 <__errno_location@plt>
   115e0:	mov	r3, r5
   115e4:	ldr	r2, [pc, #36]	; 11610 <abort@plt+0x828>
   115e8:	ldr	r1, [r0]
   115ec:	mov	r0, r4
   115f0:	bl	10cbc <error@plt>
   115f4:	b	115d0 <abort@plt+0x7e8>
   115f8:	andeq	r6, r2, r4, lsr r1
   115fc:	andeq	r6, r2, r0, asr #2
   11600:	andeq	r6, r2, r0, lsr r1
   11604:	andeq	r5, r1, r4, lsl #3
   11608:	muleq	r1, r0, r1
   1160c:	ldrdeq	r6, [r2], -ip
   11610:	muleq	r1, r4, r1
   11614:	push	{r4, r5, r6, r7, r8, lr}
   11618:	cmp	r0, #2
   1161c:	ldr	r4, [pc, #148]	; 116b8 <abort@plt+0x8d0>
   11620:	mov	r5, #0
   11624:	sub	sp, sp, #16
   11628:	ldr	r6, [r4]
   1162c:	str	r5, [r4]
   11630:	beq	1164c <abort@plt+0x864>
   11634:	ldr	r3, [pc, #128]	; 116bc <abort@plt+0x8d4>
   11638:	mov	r2, #0
   1163c:	str	r6, [r4]
   11640:	str	r2, [r3]
   11644:	add	sp, sp, #16
   11648:	pop	{r4, r5, r6, r7, r8, pc}
   1164c:	mov	r8, r3
   11650:	mov	r7, r2
   11654:	str	r5, [sp]
   11658:	ldr	r3, [pc, #96]	; 116c0 <abort@plt+0x8d8>
   1165c:	ldr	r2, [pc, #96]	; 116c4 <abort@plt+0x8dc>
   11660:	bl	10cf8 <getopt_long@plt>
   11664:	cmn	r0, #1
   11668:	beq	11634 <abort@plt+0x84c>
   1166c:	cmp	r0, #104	; 0x68
   11670:	beq	116a8 <abort@plt+0x8c0>
   11674:	cmp	r0, #118	; 0x76
   11678:	bne	11634 <abort@plt+0x84c>
   1167c:	ldr	r3, [pc, #68]	; 116c8 <abort@plt+0x8e0>
   11680:	add	ip, sp, #48	; 0x30
   11684:	mov	r2, r8
   11688:	ldr	r0, [r3]
   1168c:	mov	r1, r7
   11690:	str	ip, [sp]
   11694:	ldr	r3, [sp, #40]	; 0x28
   11698:	str	ip, [sp, #12]
   1169c:	bl	13a54 <abort@plt+0x2c6c>
   116a0:	mov	r0, r5
   116a4:	bl	10d10 <exit@plt>
   116a8:	mov	r0, r5
   116ac:	ldr	r3, [sp, #44]	; 0x2c
   116b0:	blx	r3
   116b4:	b	11634 <abort@plt+0x84c>
   116b8:	andeq	r6, r2, r8, lsr r1
   116bc:	andeq	r6, r2, r8, lsr #2
   116c0:	muleq	r1, r8, r1
   116c4:	andeq	r5, r1, r8, asr #3
   116c8:	andeq	r6, r2, r4, lsr r1
   116cc:	push	{r4, r5, r6, r7, r8, lr}
   116d0:	sub	sp, sp, #16
   116d4:	ldr	r5, [pc, #176]	; 1178c <abort@plt+0x9a4>
   116d8:	ldrb	r8, [sp, #44]	; 0x2c
   116dc:	ldr	r4, [pc, #172]	; 11790 <abort@plt+0x9a8>
   116e0:	ldr	lr, [pc, #172]	; 11794 <abort@plt+0x9ac>
   116e4:	cmp	r8, #0
   116e8:	mov	r6, r2
   116ec:	movne	r2, r5
   116f0:	mov	r5, #0
   116f4:	mov	ip, #1
   116f8:	moveq	r2, lr
   116fc:	mov	r7, r3
   11700:	str	r5, [sp]
   11704:	ldr	r3, [pc, #140]	; 11798 <abort@plt+0x9b0>
   11708:	ldr	r8, [r4]
   1170c:	str	ip, [r4]
   11710:	bl	10cf8 <getopt_long@plt>
   11714:	cmn	r0, #1
   11718:	beq	11768 <abort@plt+0x980>
   1171c:	cmp	r0, #104	; 0x68
   11720:	beq	11774 <abort@plt+0x98c>
   11724:	cmp	r0, #118	; 0x76
   11728:	bne	11758 <abort@plt+0x970>
   1172c:	ldr	r3, [pc, #104]	; 1179c <abort@plt+0x9b4>
   11730:	add	ip, sp, #52	; 0x34
   11734:	mov	r2, r7
   11738:	ldr	r0, [r3]
   1173c:	mov	r1, r6
   11740:	str	ip, [sp]
   11744:	ldr	r3, [sp, #40]	; 0x28
   11748:	str	ip, [sp, #12]
   1174c:	bl	13a54 <abort@plt+0x2c6c>
   11750:	mov	r0, r5
   11754:	bl	10d10 <exit@plt>
   11758:	ldr	r3, [pc, #64]	; 117a0 <abort@plt+0x9b8>
   1175c:	ldr	r0, [r3]
   11760:	ldr	r3, [sp, #48]	; 0x30
   11764:	blx	r3
   11768:	str	r8, [r4]
   1176c:	add	sp, sp, #16
   11770:	pop	{r4, r5, r6, r7, r8, pc}
   11774:	mov	r0, r5
   11778:	ldr	r3, [sp, #48]	; 0x30
   1177c:	blx	r3
   11780:	str	r8, [r4]
   11784:	add	sp, sp, #16
   11788:	pop	{r4, r5, r6, r7, r8, pc}
   1178c:	andeq	r4, r1, r4, ror #30
   11790:	andeq	r6, r2, r8, lsr r1
   11794:	andeq	r5, r1, r8, asr #3
   11798:	muleq	r1, r8, r1
   1179c:	andeq	r6, r2, r4, lsr r1
   117a0:	ldrdeq	r6, [r2], -ip
   117a4:	push	{r4, r5, r6, lr}
   117a8:	subs	r4, r0, #0
   117ac:	beq	11820 <abort@plt+0xa38>
   117b0:	mov	r1, #47	; 0x2f
   117b4:	bl	10dac <strrchr@plt>
   117b8:	subs	r5, r0, #0
   117bc:	beq	1180c <abort@plt+0xa24>
   117c0:	add	r6, r5, #1
   117c4:	sub	r3, r6, r4
   117c8:	cmp	r3, #6
   117cc:	ble	1180c <abort@plt+0xa24>
   117d0:	mov	r2, #7
   117d4:	ldr	r1, [pc, #96]	; 1183c <abort@plt+0xa54>
   117d8:	sub	r0, r5, #6
   117dc:	bl	10ddc <strncmp@plt>
   117e0:	cmp	r0, #0
   117e4:	bne	1180c <abort@plt+0xa24>
   117e8:	mov	r2, #3
   117ec:	ldr	r1, [pc, #76]	; 11840 <abort@plt+0xa58>
   117f0:	mov	r0, r6
   117f4:	bl	10ddc <strncmp@plt>
   117f8:	cmp	r0, #0
   117fc:	movne	r4, r6
   11800:	ldreq	r3, [pc, #60]	; 11844 <abort@plt+0xa5c>
   11804:	addeq	r4, r5, #4
   11808:	streq	r4, [r3]
   1180c:	ldr	r2, [pc, #52]	; 11848 <abort@plt+0xa60>
   11810:	ldr	r3, [pc, #52]	; 1184c <abort@plt+0xa64>
   11814:	str	r4, [r2]
   11818:	str	r4, [r3]
   1181c:	pop	{r4, r5, r6, pc}
   11820:	ldr	r3, [pc, #40]	; 11850 <abort@plt+0xa68>
   11824:	mov	r2, #55	; 0x37
   11828:	mov	r1, #1
   1182c:	ldr	r3, [r3]
   11830:	ldr	r0, [pc, #28]	; 11854 <abort@plt+0xa6c>
   11834:	bl	10c80 <fwrite@plt>
   11838:	bl	10de8 <abort@plt>
   1183c:	andeq	r5, r1, r4, lsl r2
   11840:	andeq	r5, r1, ip, lsl r2
   11844:	andeq	r6, r2, r0, lsr #2
   11848:	andeq	r6, r2, r8, asr #2
   1184c:	andeq	r6, r2, r4, lsr #2
   11850:	andeq	r6, r2, r0, lsr r1
   11854:	ldrdeq	r5, [r1], -ip
   11858:	push	{r4, r5, r6, lr}
   1185c:	mov	r2, #48	; 0x30
   11860:	mov	r4, r1
   11864:	mov	r1, #0
   11868:	mov	r5, r0
   1186c:	bl	10d40 <memset@plt>
   11870:	cmp	r4, #10
   11874:	beq	11884 <abort@plt+0xa9c>
   11878:	str	r4, [r5]
   1187c:	mov	r0, r5
   11880:	pop	{r4, r5, r6, pc}
   11884:	bl	10de8 <abort@plt>
   11888:	push	{r4, r5, r6, lr}
   1188c:	mov	r4, r0
   11890:	mov	r5, r1
   11894:	bl	146fc <abort@plt+0x3914>
   11898:	ldrb	r3, [r0]
   1189c:	bic	r3, r3, #32
   118a0:	cmp	r3, #85	; 0x55
   118a4:	bne	11904 <abort@plt+0xb1c>
   118a8:	ldrb	r3, [r0, #1]
   118ac:	bic	r3, r3, #32
   118b0:	cmp	r3, #84	; 0x54
   118b4:	bne	11940 <abort@plt+0xb58>
   118b8:	ldrb	r3, [r0, #2]
   118bc:	bic	r3, r3, #32
   118c0:	cmp	r3, #70	; 0x46
   118c4:	bne	11940 <abort@plt+0xb58>
   118c8:	ldrb	r3, [r0, #3]
   118cc:	cmp	r3, #45	; 0x2d
   118d0:	bne	11940 <abort@plt+0xb58>
   118d4:	ldrb	r3, [r0, #4]
   118d8:	cmp	r3, #56	; 0x38
   118dc:	bne	11940 <abort@plt+0xb58>
   118e0:	ldrb	r3, [r0, #5]
   118e4:	cmp	r3, #0
   118e8:	bne	11940 <abort@plt+0xb58>
   118ec:	ldrb	r2, [r4]
   118f0:	ldr	r3, [pc, #152]	; 11990 <abort@plt+0xba8>
   118f4:	ldr	r0, [pc, #152]	; 11994 <abort@plt+0xbac>
   118f8:	cmp	r2, #96	; 0x60
   118fc:	movne	r0, r3
   11900:	pop	{r4, r5, r6, pc}
   11904:	cmp	r3, #71	; 0x47
   11908:	bne	11940 <abort@plt+0xb58>
   1190c:	ldrb	r3, [r0, #1]
   11910:	bic	r3, r3, #32
   11914:	cmp	r3, #66	; 0x42
   11918:	bne	11940 <abort@plt+0xb58>
   1191c:	ldrb	r3, [r0, #2]
   11920:	cmp	r3, #49	; 0x31
   11924:	bne	11940 <abort@plt+0xb58>
   11928:	ldrb	r3, [r0, #3]
   1192c:	cmp	r3, #56	; 0x38
   11930:	bne	11940 <abort@plt+0xb58>
   11934:	ldrb	r3, [r0, #4]
   11938:	cmp	r3, #48	; 0x30
   1193c:	beq	11954 <abort@plt+0xb6c>
   11940:	ldr	r3, [pc, #80]	; 11998 <abort@plt+0xbb0>
   11944:	cmp	r5, #9
   11948:	ldr	r0, [pc, #76]	; 1199c <abort@plt+0xbb4>
   1194c:	movne	r0, r3
   11950:	pop	{r4, r5, r6, pc}
   11954:	ldrb	r3, [r0, #5]
   11958:	cmp	r3, #51	; 0x33
   1195c:	bne	11940 <abort@plt+0xb58>
   11960:	ldrb	r3, [r0, #6]
   11964:	cmp	r3, #48	; 0x30
   11968:	bne	11940 <abort@plt+0xb58>
   1196c:	ldrb	r3, [r0, #7]
   11970:	cmp	r3, #0
   11974:	bne	11940 <abort@plt+0xb58>
   11978:	ldrb	r2, [r4]
   1197c:	ldr	r3, [pc, #28]	; 119a0 <abort@plt+0xbb8>
   11980:	ldr	r0, [pc, #28]	; 119a4 <abort@plt+0xbbc>
   11984:	cmp	r2, #96	; 0x60
   11988:	movne	r0, r3
   1198c:	pop	{r4, r5, r6, pc}
   11990:	andeq	r5, r1, r8, ror r2
   11994:	andeq	r5, r1, r4, ror r2
   11998:	andeq	r5, r1, r8, lsl #5
   1199c:	andeq	r5, r1, r4, lsl #5
   119a0:	andeq	r5, r1, r0, lsl #5
   119a4:	andeq	r5, r1, ip, ror r2
   119a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119ac:	sub	sp, sp, #116	; 0x74
   119b0:	mov	sl, r0
   119b4:	str	r3, [sp, #24]
   119b8:	mov	r3, #1
   119bc:	mov	r8, r1
   119c0:	str	r2, [sp, #56]	; 0x38
   119c4:	str	r3, [sp, #36]	; 0x24
   119c8:	bl	10c98 <__ctype_get_mb_cur_max@plt>
   119cc:	ldr	r3, [sp, #156]	; 0x9c
   119d0:	mov	fp, r8
   119d4:	mov	r2, #0
   119d8:	lsr	r3, r3, #1
   119dc:	and	r3, r3, #1
   119e0:	str	r2, [sp, #68]	; 0x44
   119e4:	str	r3, [sp, #28]
   119e8:	str	r2, [sp, #40]	; 0x28
   119ec:	str	r2, [sp, #44]	; 0x2c
   119f0:	str	r2, [sp, #52]	; 0x34
   119f4:	str	r2, [sp, #64]	; 0x40
   119f8:	str	r2, [sp, #72]	; 0x48
   119fc:	str	sl, [sp, #32]
   11a00:	str	r0, [sp, #76]	; 0x4c
   11a04:	ldr	r3, [sp, #152]	; 0x98
   11a08:	cmp	r3, #10
   11a0c:	ldrls	pc, [pc, r3, lsl #2]
   11a10:	b	12bd0 <abort@plt+0x1de8>
   11a14:	andeq	r1, r1, r0, asr #20
   11a18:	andeq	r1, r1, r8, lsr #26
   11a1c:	andeq	r1, r1, ip, asr #26
   11a20:	andeq	r1, r1, r0, ror sp
   11a24:	muleq	r1, ip, lr
   11a28:	andeq	r1, r1, r0, ror lr
   11a2c:	andeq	r1, r1, r8, asr #28
   11a30:	andeq	r1, r1, r4, lsl #27
   11a34:	muleq	r1, ip, sp
   11a38:	muleq	r1, ip, sp
   11a3c:	muleq	r1, ip, sp
   11a40:	mov	r3, #0
   11a44:	mov	r7, r3
   11a48:	str	r3, [sp, #28]
   11a4c:	ldr	r3, [sp, #44]	; 0x2c
   11a50:	mov	sl, #0
   11a54:	eor	r3, r3, #1
   11a58:	str	r3, [sp, #60]	; 0x3c
   11a5c:	ldr	r3, [sp, #24]
   11a60:	cmn	r3, #1
   11a64:	beq	11fc8 <abort@plt+0x11e0>
   11a68:	ldr	r3, [sp, #24]
   11a6c:	subs	r5, r3, sl
   11a70:	movne	r5, #1
   11a74:	cmp	r5, #0
   11a78:	beq	11fe0 <abort@plt+0x11f8>
   11a7c:	ldr	r3, [sp, #152]	; 0x98
   11a80:	ldr	r8, [sp, #44]	; 0x2c
   11a84:	cmp	r3, #2
   11a88:	moveq	r8, #0
   11a8c:	andne	r8, r8, #1
   11a90:	ldr	r3, [sp, #52]	; 0x34
   11a94:	adds	r9, r3, #0
   11a98:	movne	r9, #1
   11a9c:	ands	r6, r9, r8
   11aa0:	beq	12448 <abort@plt+0x1660>
   11aa4:	ldr	r2, [sp, #52]	; 0x34
   11aa8:	ldr	r1, [sp, #24]
   11aac:	cmp	r2, #1
   11ab0:	mov	r3, r2
   11ab4:	movls	r3, #0
   11ab8:	movhi	r3, #1
   11abc:	cmn	r1, #1
   11ac0:	movne	r3, #0
   11ac4:	cmp	r3, #0
   11ac8:	add	r4, sl, r2
   11acc:	beq	11adc <abort@plt+0xcf4>
   11ad0:	ldr	r0, [sp, #56]	; 0x38
   11ad4:	bl	10d1c <strlen@plt>
   11ad8:	str	r0, [sp, #24]
   11adc:	ldr	r3, [sp, #24]
   11ae0:	cmp	r3, r4
   11ae4:	ldr	r3, [sp, #56]	; 0x38
   11ae8:	add	r3, r3, sl
   11aec:	str	r3, [sp, #48]	; 0x30
   11af0:	bcc	12454 <abort@plt+0x166c>
   11af4:	mov	r0, r3
   11af8:	ldr	r2, [sp, #52]	; 0x34
   11afc:	ldr	r1, [sp, #64]	; 0x40
   11b00:	bl	10c38 <memcmp@plt>
   11b04:	cmp	r0, #0
   11b08:	bne	12454 <abort@plt+0x166c>
   11b0c:	ldr	r3, [sp, #28]
   11b10:	cmp	r3, #0
   11b14:	bne	12cd0 <abort@plt+0x1ee8>
   11b18:	ldr	r3, [sp, #48]	; 0x30
   11b1c:	ldrb	r4, [r3]
   11b20:	cmp	r4, #126	; 0x7e
   11b24:	ldrls	pc, [pc, r4, lsl #2]
   11b28:	b	123e8 <abort@plt+0x1600>
   11b2c:	andeq	r2, r1, ip, lsl #4
   11b30:	andeq	r2, r1, r8, ror #7
   11b34:	andeq	r2, r1, r8, ror #7
   11b38:	andeq	r2, r1, r8, ror #7
   11b3c:	andeq	r2, r1, r8, ror #7
   11b40:	andeq	r2, r1, r8, ror #7
   11b44:	andeq	r2, r1, r8, ror #7
   11b48:	strdeq	r2, [r1], -r0
   11b4c:	ldrdeq	r2, [r1], -r4
   11b50:	ldrdeq	r2, [r1], -r0
   11b54:	andeq	r2, r1, r4, lsr r1
   11b58:	andeq	r2, r1, r8, lsl r1
   11b5c:	andeq	r2, r1, ip, lsr #7
   11b60:	andeq	r2, r1, r8, lsl #7
   11b64:	andeq	r2, r1, r8, ror #7
   11b68:	andeq	r2, r1, r8, ror #7
   11b6c:	andeq	r2, r1, r8, ror #7
   11b70:	andeq	r2, r1, r8, ror #7
   11b74:	andeq	r2, r1, r8, ror #7
   11b78:	andeq	r2, r1, r8, ror #7
   11b7c:	andeq	r2, r1, r8, ror #7
   11b80:	andeq	r2, r1, r8, ror #7
   11b84:	andeq	r2, r1, r8, ror #7
   11b88:	andeq	r2, r1, r8, ror #7
   11b8c:	andeq	r2, r1, r8, ror #7
   11b90:	andeq	r2, r1, r8, ror #7
   11b94:	andeq	r2, r1, r8, ror #7
   11b98:	andeq	r2, r1, r8, ror #7
   11b9c:	andeq	r2, r1, r8, ror #7
   11ba0:	andeq	r2, r1, r8, ror #7
   11ba4:	andeq	r2, r1, r8, ror #7
   11ba8:	andeq	r2, r1, r8, ror #7
   11bac:	andeq	r2, r1, r8, asr #7
   11bb0:	strdeq	r2, [r1], -ip
   11bb4:	strdeq	r2, [r1], -ip
   11bb8:	andeq	r1, r1, ip, lsl #30
   11bbc:	strdeq	r2, [r1], -ip
   11bc0:	muleq	r1, r4, r3
   11bc4:	strdeq	r2, [r1], -ip
   11bc8:	andeq	r2, r1, r8, ror #6
   11bcc:	strdeq	r2, [r1], -ip
   11bd0:	strdeq	r2, [r1], -ip
   11bd4:	strdeq	r2, [r1], -ip
   11bd8:	muleq	r1, r4, r3
   11bdc:	muleq	r1, r4, r3
   11be0:	muleq	r1, r4, r3
   11be4:	muleq	r1, r4, r3
   11be8:	muleq	r1, r4, r3
   11bec:	muleq	r1, r4, r3
   11bf0:	muleq	r1, r4, r3
   11bf4:	muleq	r1, r4, r3
   11bf8:	muleq	r1, r4, r3
   11bfc:	muleq	r1, r4, r3
   11c00:	muleq	r1, r4, r3
   11c04:	muleq	r1, r4, r3
   11c08:	muleq	r1, r4, r3
   11c0c:	muleq	r1, r4, r3
   11c10:	muleq	r1, r4, r3
   11c14:	muleq	r1, r4, r3
   11c18:	strdeq	r2, [r1], -ip
   11c1c:	strdeq	r2, [r1], -ip
   11c20:	strdeq	r2, [r1], -ip
   11c24:	strdeq	r2, [r1], -ip
   11c28:	andeq	r2, r1, r8, lsr r3
   11c2c:	andeq	r2, r1, r8, ror #7
   11c30:	muleq	r1, r4, r3
   11c34:	muleq	r1, r4, r3
   11c38:	muleq	r1, r4, r3
   11c3c:	muleq	r1, r4, r3
   11c40:	muleq	r1, r4, r3
   11c44:	muleq	r1, r4, r3
   11c48:	muleq	r1, r4, r3
   11c4c:	muleq	r1, r4, r3
   11c50:	muleq	r1, r4, r3
   11c54:	muleq	r1, r4, r3
   11c58:	muleq	r1, r4, r3
   11c5c:	muleq	r1, r4, r3
   11c60:	muleq	r1, r4, r3
   11c64:	muleq	r1, r4, r3
   11c68:	muleq	r1, r4, r3
   11c6c:	muleq	r1, r4, r3
   11c70:	muleq	r1, r4, r3
   11c74:	muleq	r1, r4, r3
   11c78:	muleq	r1, r4, r3
   11c7c:	muleq	r1, r4, r3
   11c80:	muleq	r1, r4, r3
   11c84:	muleq	r1, r4, r3
   11c88:	muleq	r1, r4, r3
   11c8c:	muleq	r1, r4, r3
   11c90:	muleq	r1, r4, r3
   11c94:	muleq	r1, r4, r3
   11c98:	strdeq	r2, [r1], -ip
   11c9c:	andeq	r2, r1, r8, asr r0
   11ca0:	muleq	r1, r4, r3
   11ca4:	strdeq	r2, [r1], -ip
   11ca8:	muleq	r1, r4, r3
   11cac:	strdeq	r2, [r1], -ip
   11cb0:	muleq	r1, r4, r3
   11cb4:	muleq	r1, r4, r3
   11cb8:	muleq	r1, r4, r3
   11cbc:	muleq	r1, r4, r3
   11cc0:	muleq	r1, r4, r3
   11cc4:	muleq	r1, r4, r3
   11cc8:	muleq	r1, r4, r3
   11ccc:	muleq	r1, r4, r3
   11cd0:	muleq	r1, r4, r3
   11cd4:	muleq	r1, r4, r3
   11cd8:	muleq	r1, r4, r3
   11cdc:	muleq	r1, r4, r3
   11ce0:	muleq	r1, r4, r3
   11ce4:	muleq	r1, r4, r3
   11ce8:	muleq	r1, r4, r3
   11cec:	muleq	r1, r4, r3
   11cf0:	muleq	r1, r4, r3
   11cf4:	muleq	r1, r4, r3
   11cf8:	muleq	r1, r4, r3
   11cfc:	muleq	r1, r4, r3
   11d00:	muleq	r1, r4, r3
   11d04:	muleq	r1, r4, r3
   11d08:	muleq	r1, r4, r3
   11d0c:	muleq	r1, r4, r3
   11d10:	muleq	r1, r4, r3
   11d14:	muleq	r1, r4, r3
   11d18:	andeq	r1, r1, ip, ror #29
   11d1c:	strdeq	r2, [r1], -ip
   11d20:	andeq	r1, r1, ip, ror #29
   11d24:	andeq	r1, r1, ip, lsl #30
   11d28:	mov	r3, #1
   11d2c:	str	r3, [sp, #28]
   11d30:	str	r3, [sp, #52]	; 0x34
   11d34:	ldr	r3, [pc, #4000]	; 12cdc <abort@plt+0x1ef4>
   11d38:	mov	r7, #0
   11d3c:	str	r3, [sp, #64]	; 0x40
   11d40:	mov	r3, #2
   11d44:	str	r3, [sp, #152]	; 0x98
   11d48:	b	11a4c <abort@plt+0xc64>
   11d4c:	ldr	r3, [sp, #28]
   11d50:	cmp	r3, #0
   11d54:	beq	11eb0 <abort@plt+0x10c8>
   11d58:	mov	r3, #1
   11d5c:	str	r3, [sp, #52]	; 0x34
   11d60:	ldr	r3, [pc, #3956]	; 12cdc <abort@plt+0x1ef4>
   11d64:	mov	r7, #0
   11d68:	str	r3, [sp, #64]	; 0x40
   11d6c:	b	11a4c <abort@plt+0xc64>
   11d70:	mov	r3, #1
   11d74:	str	r3, [sp, #44]	; 0x2c
   11d78:	str	r3, [sp, #52]	; 0x34
   11d7c:	str	r3, [sp, #28]
   11d80:	b	11d34 <abort@plt+0xf4c>
   11d84:	mov	r3, #0
   11d88:	str	r3, [sp, #28]
   11d8c:	mov	r3, #1
   11d90:	str	r3, [sp, #44]	; 0x2c
   11d94:	mov	r7, #0
   11d98:	b	11a4c <abort@plt+0xc64>
   11d9c:	ldr	r3, [sp, #152]	; 0x98
   11da0:	cmp	r3, #10
   11da4:	beq	11de8 <abort@plt+0x1000>
   11da8:	mov	r2, #5
   11dac:	ldr	r1, [pc, #3884]	; 12ce0 <abort@plt+0x1ef8>
   11db0:	mov	r0, #0
   11db4:	bl	10c50 <dcgettext@plt>
   11db8:	ldr	r2, [pc, #3872]	; 12ce0 <abort@plt+0x1ef8>
   11dbc:	cmp	r0, r2
   11dc0:	str	r0, [sp, #164]	; 0xa4
   11dc4:	beq	12dcc <abort@plt+0x1fe4>
   11dc8:	mov	r2, #5
   11dcc:	ldr	r1, [pc, #3848]	; 12cdc <abort@plt+0x1ef4>
   11dd0:	mov	r0, #0
   11dd4:	bl	10c50 <dcgettext@plt>
   11dd8:	ldr	r2, [pc, #3836]	; 12cdc <abort@plt+0x1ef4>
   11ddc:	cmp	r0, r2
   11de0:	str	r0, [sp, #168]	; 0xa8
   11de4:	beq	12dbc <abort@plt+0x1fd4>
   11de8:	ldr	r7, [sp, #28]
   11dec:	cmp	r7, #0
   11df0:	movne	r7, #0
   11df4:	bne	11e28 <abort@plt+0x1040>
   11df8:	ldr	r3, [sp, #164]	; 0xa4
   11dfc:	ldrb	r3, [r3]
   11e00:	cmp	r3, #0
   11e04:	beq	12ddc <abort@plt+0x1ff4>
   11e08:	ldr	r2, [sp, #164]	; 0xa4
   11e0c:	ldr	r1, [sp, #32]
   11e10:	cmp	fp, r7
   11e14:	strbhi	r3, [r1, r7]
   11e18:	ldrb	r3, [r2, #1]!
   11e1c:	add	r7, r7, #1
   11e20:	cmp	r3, #0
   11e24:	bne	11e10 <abort@plt+0x1028>
   11e28:	ldr	r0, [sp, #168]	; 0xa8
   11e2c:	bl	10d1c <strlen@plt>
   11e30:	ldr	r3, [sp, #168]	; 0xa8
   11e34:	str	r3, [sp, #64]	; 0x40
   11e38:	mov	r3, #1
   11e3c:	str	r3, [sp, #44]	; 0x2c
   11e40:	str	r0, [sp, #52]	; 0x34
   11e44:	b	11a4c <abort@plt+0xc64>
   11e48:	mov	r3, #1
   11e4c:	str	r3, [sp, #44]	; 0x2c
   11e50:	str	r3, [sp, #52]	; 0x34
   11e54:	str	r3, [sp, #28]
   11e58:	ldr	r3, [pc, #3716]	; 12ce4 <abort@plt+0x1efc>
   11e5c:	mov	r7, #0
   11e60:	str	r3, [sp, #64]	; 0x40
   11e64:	mov	r3, #5
   11e68:	str	r3, [sp, #152]	; 0x98
   11e6c:	b	11a4c <abort@plt+0xc64>
   11e70:	ldr	r3, [sp, #28]
   11e74:	cmp	r3, #0
   11e78:	beq	12b78 <abort@plt+0x1d90>
   11e7c:	ldr	r3, [sp, #28]
   11e80:	mov	r7, #0
   11e84:	str	r3, [sp, #44]	; 0x2c
   11e88:	mov	r3, #1
   11e8c:	str	r3, [sp, #52]	; 0x34
   11e90:	ldr	r3, [pc, #3660]	; 12ce4 <abort@plt+0x1efc>
   11e94:	str	r3, [sp, #64]	; 0x40
   11e98:	b	11a4c <abort@plt+0xc64>
   11e9c:	ldr	r3, [sp, #28]
   11ea0:	cmp	r3, #0
   11ea4:	mov	r3, #1
   11ea8:	streq	r3, [sp, #44]	; 0x2c
   11eac:	bne	11d30 <abort@plt+0xf48>
   11eb0:	cmp	fp, #0
   11eb4:	beq	12ba8 <abort@plt+0x1dc0>
   11eb8:	ldr	r3, [sp, #32]
   11ebc:	mov	r2, #39	; 0x27
   11ec0:	mov	r7, #1
   11ec4:	strb	r2, [r3]
   11ec8:	mov	r3, #0
   11ecc:	str	r3, [sp, #28]
   11ed0:	mov	r3, #1
   11ed4:	str	r3, [sp, #52]	; 0x34
   11ed8:	ldr	r3, [pc, #3580]	; 12cdc <abort@plt+0x1ef4>
   11edc:	str	r3, [sp, #64]	; 0x40
   11ee0:	mov	r3, #2
   11ee4:	str	r3, [sp, #152]	; 0x98
   11ee8:	b	11a4c <abort@plt+0xc64>
   11eec:	ldr	r3, [sp, #24]
   11ef0:	cmn	r3, #1
   11ef4:	beq	12b0c <abort@plt+0x1d24>
   11ef8:	ldr	r3, [sp, #24]
   11efc:	subs	r3, r3, #1
   11f00:	movne	r3, #1
   11f04:	cmp	r3, #0
   11f08:	bne	11f14 <abort@plt+0x112c>
   11f0c:	cmp	sl, #0
   11f10:	beq	12300 <abort@plt+0x1518>
   11f14:	ldr	r3, [sp, #152]	; 0x98
   11f18:	mov	r5, #0
   11f1c:	sub	r2, r3, #2
   11f20:	mov	r8, r5
   11f24:	clz	r2, r2
   11f28:	lsr	r2, r2, #5
   11f2c:	ldr	r3, [sp, #60]	; 0x3c
   11f30:	ldr	r1, [sp, #28]
   11f34:	orr	r3, r2, r3
   11f38:	eor	r3, r3, #1
   11f3c:	orr	r3, r1, r3
   11f40:	tst	r3, #255	; 0xff
   11f44:	bne	12670 <abort@plt+0x1888>
   11f48:	cmp	r6, #0
   11f4c:	bne	1209c <abort@plt+0x12b4>
   11f50:	ldr	r3, [sp, #40]	; 0x28
   11f54:	eor	r8, r8, #1
   11f58:	and	r8, r8, r3
   11f5c:	add	sl, sl, #1
   11f60:	uxtb	r6, r8
   11f64:	cmp	r6, #0
   11f68:	beq	11f9c <abort@plt+0x11b4>
   11f6c:	cmp	fp, r7
   11f70:	movhi	r2, #39	; 0x27
   11f74:	ldrhi	r3, [sp, #32]
   11f78:	strbhi	r2, [r3, r7]
   11f7c:	add	r3, r7, #1
   11f80:	cmp	fp, r3
   11f84:	movhi	r1, #39	; 0x27
   11f88:	ldrhi	r2, [sp, #32]
   11f8c:	add	r7, r7, #2
   11f90:	strbhi	r1, [r2, r3]
   11f94:	mov	r3, #0
   11f98:	str	r3, [sp, #40]	; 0x28
   11f9c:	cmp	r7, fp
   11fa0:	ldrcc	r3, [sp, #32]
   11fa4:	strbcc	r4, [r3, r7]
   11fa8:	ldr	r3, [sp, #36]	; 0x24
   11fac:	cmp	r5, #0
   11fb0:	moveq	r3, #0
   11fb4:	str	r3, [sp, #36]	; 0x24
   11fb8:	ldr	r3, [sp, #24]
   11fbc:	add	r7, r7, #1
   11fc0:	cmn	r3, #1
   11fc4:	bne	11a68 <abort@plt+0xc80>
   11fc8:	ldr	r3, [sp, #56]	; 0x38
   11fcc:	ldrb	r5, [r3, sl]
   11fd0:	adds	r5, r5, #0
   11fd4:	movne	r5, #1
   11fd8:	cmp	r5, #0
   11fdc:	bne	11a7c <abort@plt+0xc94>
   11fe0:	ldr	r3, [sp, #152]	; 0x98
   11fe4:	ldr	r1, [sp, #28]
   11fe8:	sub	r3, r3, #2
   11fec:	clz	r3, r3
   11ff0:	lsr	r3, r3, #5
   11ff4:	and	r9, r1, r3
   11ff8:	cmp	r7, #0
   11ffc:	movne	r2, #0
   12000:	andeq	r2, r9, #1
   12004:	cmp	r2, #0
   12008:	bne	129e4 <abort@plt+0x1bfc>
   1200c:	eor	r2, r1, #1
   12010:	ands	r3, r3, r2
   12014:	beq	12ea0 <abort@plt+0x20b8>
   12018:	ldr	r2, [sp, #68]	; 0x44
   1201c:	cmp	r2, #0
   12020:	beq	12e8c <abort@plt+0x20a4>
   12024:	ldr	r3, [sp, #36]	; 0x24
   12028:	cmp	r3, #0
   1202c:	bne	12e44 <abort@plt+0x205c>
   12030:	ldr	r2, [sp, #72]	; 0x48
   12034:	clz	r3, fp
   12038:	cmp	r2, #0
   1203c:	lsr	r3, r3, #5
   12040:	moveq	r3, #0
   12044:	cmp	r3, #0
   12048:	beq	12de4 <abort@plt+0x1ffc>
   1204c:	str	r3, [sp, #68]	; 0x44
   12050:	ldr	fp, [sp, #72]	; 0x48
   12054:	b	11a04 <abort@plt+0xc1c>
   12058:	ldr	r3, [sp, #152]	; 0x98
   1205c:	cmp	r3, #2
   12060:	beq	126b4 <abort@plt+0x18cc>
   12064:	ldr	r3, [sp, #44]	; 0x2c
   12068:	ldr	r2, [sp, #28]
   1206c:	and	r2, r3, r2
   12070:	ands	r2, r9, r2
   12074:	bne	126c0 <abort@plt+0x18d8>
   12078:	mov	r4, #92	; 0x5c
   1207c:	mov	r3, r4
   12080:	ldr	r1, [sp, #44]	; 0x2c
   12084:	cmp	r1, #0
   12088:	moveq	r5, #0
   1208c:	moveq	r8, r1
   12090:	beq	11f2c <abort@plt+0x1144>
   12094:	mov	r4, r3
   12098:	mov	r5, #0
   1209c:	ldr	r3, [sp, #28]
   120a0:	cmp	r3, #0
   120a4:	bne	126a8 <abort@plt+0x18c0>
   120a8:	ldr	r3, [sp, #40]	; 0x28
   120ac:	eor	r9, r3, #1
   120b0:	and	r9, r9, r2
   120b4:	ands	r9, r9, #255	; 0xff
   120b8:	beq	120fc <abort@plt+0x1314>
   120bc:	cmp	fp, r7
   120c0:	movhi	r2, #39	; 0x27
   120c4:	ldrhi	r3, [sp, #32]
   120c8:	str	r9, [sp, #40]	; 0x28
   120cc:	strbhi	r2, [r3, r7]
   120d0:	add	r3, r7, #1
   120d4:	cmp	fp, r3
   120d8:	movhi	r1, #36	; 0x24
   120dc:	ldrhi	r2, [sp, #32]
   120e0:	strbhi	r1, [r2, r3]
   120e4:	add	r3, r7, #2
   120e8:	cmp	fp, r3
   120ec:	add	r7, r7, #3
   120f0:	ldrhi	r2, [sp, #32]
   120f4:	movhi	r1, #39	; 0x27
   120f8:	strbhi	r1, [r2, r3]
   120fc:	cmp	fp, r7
   12100:	movhi	r2, #92	; 0x5c
   12104:	ldrhi	r3, [sp, #32]
   12108:	add	sl, sl, #1
   1210c:	strbhi	r2, [r3, r7]
   12110:	add	r7, r7, #1
   12114:	b	11f9c <abort@plt+0x11b4>
   12118:	ldr	r3, [sp, #152]	; 0x98
   1211c:	mov	r4, #11
   12120:	sub	r2, r3, #2
   12124:	mov	r3, #118	; 0x76
   12128:	clz	r2, r2
   1212c:	lsr	r2, r2, #5
   12130:	b	12080 <abort@plt+0x1298>
   12134:	mov	r4, #10
   12138:	mov	r3, #110	; 0x6e
   1213c:	ldr	r2, [sp, #152]	; 0x98
   12140:	ldr	r1, [sp, #28]
   12144:	sub	r2, r2, #2
   12148:	clz	r2, r2
   1214c:	lsr	r2, r2, #5
   12150:	ands	r1, r1, r2
   12154:	beq	12080 <abort@plt+0x1298>
   12158:	ldr	sl, [sp, #32]
   1215c:	mov	r8, fp
   12160:	mov	r2, r1
   12164:	mov	r3, #2
   12168:	str	r3, [sp, #152]	; 0x98
   1216c:	ldr	r9, [sp, #44]	; 0x2c
   12170:	ldr	r3, [sp, #152]	; 0x98
   12174:	and	r9, r9, r2
   12178:	tst	r9, #255	; 0xff
   1217c:	movne	r3, #4
   12180:	str	r3, [sp, #152]	; 0x98
   12184:	ldr	r3, [sp, #156]	; 0x9c
   12188:	mov	ip, #0
   1218c:	bic	r3, r3, #2
   12190:	str	r3, [sp, #4]
   12194:	ldr	r3, [sp, #168]	; 0xa8
   12198:	ldr	r2, [sp, #56]	; 0x38
   1219c:	str	r3, [sp, #16]
   121a0:	ldr	r3, [sp, #164]	; 0xa4
   121a4:	mov	r1, r8
   121a8:	str	r3, [sp, #12]
   121ac:	ldr	r3, [sp, #152]	; 0x98
   121b0:	mov	r0, sl
   121b4:	str	r3, [sp]
   121b8:	str	ip, [sp, #8]
   121bc:	ldr	r3, [sp, #24]
   121c0:	bl	119a8 <abort@plt+0xbc0>
   121c4:	mov	fp, r0
   121c8:	mov	r0, fp
   121cc:	add	sp, sp, #116	; 0x74
   121d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121d4:	ldr	r3, [sp, #152]	; 0x98
   121d8:	mov	r4, #8
   121dc:	sub	r2, r3, #2
   121e0:	mov	r3, #98	; 0x62
   121e4:	clz	r2, r2
   121e8:	lsr	r2, r2, #5
   121ec:	b	12080 <abort@plt+0x1298>
   121f0:	ldr	r3, [sp, #152]	; 0x98
   121f4:	mov	r4, #7
   121f8:	sub	r2, r3, #2
   121fc:	mov	r3, #97	; 0x61
   12200:	clz	r2, r2
   12204:	lsr	r2, r2, #5
   12208:	b	12080 <abort@plt+0x1298>
   1220c:	ldr	r3, [sp, #44]	; 0x2c
   12210:	cmp	r3, #0
   12214:	beq	129f8 <abort@plt+0x1c10>
   12218:	ldr	r3, [sp, #28]
   1221c:	cmp	r3, #0
   12220:	bne	12cd0 <abort@plt+0x1ee8>
   12224:	ldr	r3, [sp, #152]	; 0x98
   12228:	sub	r2, r3, #2
   1222c:	ldr	r3, [sp, #40]	; 0x28
   12230:	clz	r2, r2
   12234:	eor	r3, r3, #1
   12238:	lsr	r2, r2, #5
   1223c:	ands	r3, r2, r3
   12240:	moveq	r1, r7
   12244:	beq	12288 <abort@plt+0x14a0>
   12248:	cmp	fp, r7
   1224c:	movhi	r0, #39	; 0x27
   12250:	ldrhi	r1, [sp, #32]
   12254:	str	r3, [sp, #40]	; 0x28
   12258:	strbhi	r0, [r1, r7]
   1225c:	add	r1, r7, #1
   12260:	cmp	fp, r1
   12264:	movhi	ip, #36	; 0x24
   12268:	ldrhi	r0, [sp, #32]
   1226c:	strbhi	ip, [r0, r1]
   12270:	add	r1, r7, #2
   12274:	cmp	fp, r1
   12278:	movhi	ip, #39	; 0x27
   1227c:	ldrhi	r0, [sp, #32]
   12280:	strbhi	ip, [r0, r1]
   12284:	add	r1, r7, #3
   12288:	cmp	fp, r1
   1228c:	movhi	r0, #92	; 0x5c
   12290:	ldrhi	r3, [sp, #32]
   12294:	add	r7, r1, #1
   12298:	strbhi	r0, [r3, r1]
   1229c:	cmp	r8, #0
   122a0:	beq	12be4 <abort@plt+0x1dfc>
   122a4:	ldr	r0, [sp, #24]
   122a8:	add	r3, sl, #1
   122ac:	cmp	r3, r0
   122b0:	bcs	12b20 <abort@plt+0x1d38>
   122b4:	ldr	r0, [sp, #56]	; 0x38
   122b8:	ldrb	r3, [r0, r3]
   122bc:	sub	r3, r3, #48	; 0x30
   122c0:	cmp	r3, #9
   122c4:	bhi	12b20 <abort@plt+0x1d38>
   122c8:	cmp	fp, r7
   122cc:	movhi	r3, #48	; 0x30
   122d0:	ldrhi	r0, [sp, #32]
   122d4:	ldr	r5, [sp, #28]
   122d8:	mov	r4, #48	; 0x30
   122dc:	strbhi	r3, [r0, r7]
   122e0:	add	r3, r1, #2
   122e4:	cmp	fp, r3
   122e8:	movhi	r0, #48	; 0x30
   122ec:	ldrhi	ip, [sp, #32]
   122f0:	add	r7, r1, #3
   122f4:	strbhi	r0, [ip, r3]
   122f8:	b	11f2c <abort@plt+0x1144>
   122fc:	mov	r5, #0
   12300:	ldr	r3, [sp, #152]	; 0x98
   12304:	sub	r2, r3, #2
   12308:	ldr	r3, [sp, #28]
   1230c:	clz	r2, r2
   12310:	lsr	r2, r2, #5
   12314:	ands	r8, r3, r2
   12318:	beq	11f2c <abort@plt+0x1144>
   1231c:	mov	r3, r8
   12320:	mov	r2, r3
   12324:	mov	r3, #2
   12328:	ldr	sl, [sp, #32]
   1232c:	mov	r8, fp
   12330:	str	r3, [sp, #152]	; 0x98
   12334:	b	1216c <abort@plt+0x1384>
   12338:	ldr	r3, [sp, #152]	; 0x98
   1233c:	cmp	r3, #2
   12340:	beq	12a64 <abort@plt+0x1c7c>
   12344:	cmp	r3, #5
   12348:	beq	12a24 <abort@plt+0x1c3c>
   1234c:	mov	r5, #0
   12350:	sub	r2, r3, #2
   12354:	mov	r8, r5
   12358:	clz	r2, r2
   1235c:	mov	r4, #63	; 0x3f
   12360:	lsr	r2, r2, #5
   12364:	b	11f2c <abort@plt+0x1144>
   12368:	ldr	r3, [sp, #152]	; 0x98
   1236c:	cmp	r3, #2
   12370:	beq	12a84 <abort@plt+0x1c9c>
   12374:	mov	r2, #0
   12378:	str	r5, [sp, #68]	; 0x44
   1237c:	mov	r8, r2
   12380:	mov	r4, #39	; 0x27
   12384:	b	11f2c <abort@plt+0x1144>
   12388:	mov	r4, #13
   1238c:	mov	r3, #114	; 0x72
   12390:	b	1213c <abort@plt+0x1354>
   12394:	ldr	r3, [sp, #152]	; 0x98
   12398:	mov	r8, #0
   1239c:	sub	r2, r3, #2
   123a0:	clz	r2, r2
   123a4:	lsr	r2, r2, #5
   123a8:	b	11f2c <abort@plt+0x1144>
   123ac:	ldr	r3, [sp, #152]	; 0x98
   123b0:	mov	r4, #12
   123b4:	sub	r2, r3, #2
   123b8:	mov	r3, #102	; 0x66
   123bc:	clz	r2, r2
   123c0:	lsr	r2, r2, #5
   123c4:	b	12080 <abort@plt+0x1298>
   123c8:	mov	r5, r6
   123cc:	b	12300 <abort@plt+0x1518>
   123d0:	ldr	r3, [sp, #152]	; 0x98
   123d4:	sub	r2, r3, #2
   123d8:	mov	r3, #116	; 0x74
   123dc:	clz	r2, r2
   123e0:	lsr	r2, r2, #5
   123e4:	b	12080 <abort@plt+0x1298>
   123e8:	ldr	r8, [sp, #76]	; 0x4c
   123ec:	cmp	r8, #1
   123f0:	bne	128a0 <abort@plt+0x1ab8>
   123f4:	bl	10d04 <__ctype_b_loc@plt>
   123f8:	sxth	r3, r4
   123fc:	mov	ip, r8
   12400:	lsl	r3, r3, #1
   12404:	ldr	r2, [r0]
   12408:	ldrh	r3, [r2, r3]
   1240c:	and	r3, r3, #16384	; 0x4000
   12410:	cmp	r3, #0
   12414:	movne	r5, #1
   12418:	moveq	r5, #0
   1241c:	moveq	r3, #1
   12420:	movne	r3, #0
   12424:	ldr	r2, [sp, #44]	; 0x2c
   12428:	and	r3, r3, r2
   1242c:	ands	r8, r3, #255	; 0xff
   12430:	bne	12734 <abort@plt+0x194c>
   12434:	ldr	r3, [sp, #152]	; 0x98
   12438:	sub	r2, r3, #2
   1243c:	clz	r2, r2
   12440:	lsr	r2, r2, #5
   12444:	b	11f2c <abort@plt+0x1144>
   12448:	ldr	r3, [sp, #56]	; 0x38
   1244c:	add	r3, r3, sl
   12450:	str	r3, [sp, #48]	; 0x30
   12454:	ldr	r3, [sp, #48]	; 0x30
   12458:	mov	r6, #0
   1245c:	ldrb	r4, [r3]
   12460:	cmp	r4, #126	; 0x7e
   12464:	ldrls	pc, [pc, r4, lsl #2]
   12468:	b	123e8 <abort@plt+0x1600>
   1246c:	andeq	r2, r1, ip, lsl #4
   12470:	andeq	r2, r1, r8, ror #7
   12474:	andeq	r2, r1, r8, ror #7
   12478:	andeq	r2, r1, r8, ror #7
   1247c:	andeq	r2, r1, r8, ror #7
   12480:	andeq	r2, r1, r8, ror #7
   12484:	andeq	r2, r1, r8, ror #7
   12488:	strdeq	r2, [r1], -r0
   1248c:	ldrdeq	r2, [r1], -r4
   12490:	andeq	r2, r1, r8, ror #12
   12494:	andeq	r2, r1, r4, lsr r1
   12498:	andeq	r2, r1, r8, lsl r1
   1249c:	andeq	r2, r1, ip, lsr #7
   124a0:	andeq	r2, r1, r8, lsl #7
   124a4:	andeq	r2, r1, r8, ror #7
   124a8:	andeq	r2, r1, r8, ror #7
   124ac:	andeq	r2, r1, r8, ror #7
   124b0:	andeq	r2, r1, r8, ror #7
   124b4:	andeq	r2, r1, r8, ror #7
   124b8:	andeq	r2, r1, r8, ror #7
   124bc:	andeq	r2, r1, r8, ror #7
   124c0:	andeq	r2, r1, r8, ror #7
   124c4:	andeq	r2, r1, r8, ror #7
   124c8:	andeq	r2, r1, r8, ror #7
   124cc:	andeq	r2, r1, r8, ror #7
   124d0:	andeq	r2, r1, r8, ror #7
   124d4:	andeq	r2, r1, r8, ror #7
   124d8:	andeq	r2, r1, r8, ror #7
   124dc:	andeq	r2, r1, r8, ror #7
   124e0:	andeq	r2, r1, r8, ror #7
   124e4:	andeq	r2, r1, r8, ror #7
   124e8:	andeq	r2, r1, r8, ror #7
   124ec:	andeq	r2, r1, r0, lsl #6
   124f0:	strdeq	r2, [r1], -ip
   124f4:	strdeq	r2, [r1], -ip
   124f8:	andeq	r1, r1, ip, lsl #30
   124fc:	strdeq	r2, [r1], -ip
   12500:	muleq	r1, r4, r3
   12504:	strdeq	r2, [r1], -ip
   12508:	andeq	r2, r1, r8, ror #6
   1250c:	strdeq	r2, [r1], -ip
   12510:	strdeq	r2, [r1], -ip
   12514:	strdeq	r2, [r1], -ip
   12518:	muleq	r1, r4, r3
   1251c:	muleq	r1, r4, r3
   12520:	muleq	r1, r4, r3
   12524:	muleq	r1, r4, r3
   12528:	muleq	r1, r4, r3
   1252c:	muleq	r1, r4, r3
   12530:	muleq	r1, r4, r3
   12534:	muleq	r1, r4, r3
   12538:	muleq	r1, r4, r3
   1253c:	muleq	r1, r4, r3
   12540:	muleq	r1, r4, r3
   12544:	muleq	r1, r4, r3
   12548:	muleq	r1, r4, r3
   1254c:	muleq	r1, r4, r3
   12550:	muleq	r1, r4, r3
   12554:	muleq	r1, r4, r3
   12558:	strdeq	r2, [r1], -ip
   1255c:	strdeq	r2, [r1], -ip
   12560:	strdeq	r2, [r1], -ip
   12564:	strdeq	r2, [r1], -ip
   12568:	andeq	r2, r1, r8, lsr r3
   1256c:	andeq	r2, r1, r8, ror #7
   12570:	muleq	r1, r4, r3
   12574:	muleq	r1, r4, r3
   12578:	muleq	r1, r4, r3
   1257c:	muleq	r1, r4, r3
   12580:	muleq	r1, r4, r3
   12584:	muleq	r1, r4, r3
   12588:	muleq	r1, r4, r3
   1258c:	muleq	r1, r4, r3
   12590:	muleq	r1, r4, r3
   12594:	muleq	r1, r4, r3
   12598:	muleq	r1, r4, r3
   1259c:	muleq	r1, r4, r3
   125a0:	muleq	r1, r4, r3
   125a4:	muleq	r1, r4, r3
   125a8:	muleq	r1, r4, r3
   125ac:	muleq	r1, r4, r3
   125b0:	muleq	r1, r4, r3
   125b4:	muleq	r1, r4, r3
   125b8:	muleq	r1, r4, r3
   125bc:	muleq	r1, r4, r3
   125c0:	muleq	r1, r4, r3
   125c4:	muleq	r1, r4, r3
   125c8:	muleq	r1, r4, r3
   125cc:	muleq	r1, r4, r3
   125d0:	muleq	r1, r4, r3
   125d4:	muleq	r1, r4, r3
   125d8:	strdeq	r2, [r1], -ip
   125dc:	andeq	r2, r1, r8, asr r0
   125e0:	muleq	r1, r4, r3
   125e4:	strdeq	r2, [r1], -ip
   125e8:	muleq	r1, r4, r3
   125ec:	strdeq	r2, [r1], -ip
   125f0:	muleq	r1, r4, r3
   125f4:	muleq	r1, r4, r3
   125f8:	muleq	r1, r4, r3
   125fc:	muleq	r1, r4, r3
   12600:	muleq	r1, r4, r3
   12604:	muleq	r1, r4, r3
   12608:	muleq	r1, r4, r3
   1260c:	muleq	r1, r4, r3
   12610:	muleq	r1, r4, r3
   12614:	muleq	r1, r4, r3
   12618:	muleq	r1, r4, r3
   1261c:	muleq	r1, r4, r3
   12620:	muleq	r1, r4, r3
   12624:	muleq	r1, r4, r3
   12628:	muleq	r1, r4, r3
   1262c:	muleq	r1, r4, r3
   12630:	muleq	r1, r4, r3
   12634:	muleq	r1, r4, r3
   12638:	muleq	r1, r4, r3
   1263c:	muleq	r1, r4, r3
   12640:	muleq	r1, r4, r3
   12644:	muleq	r1, r4, r3
   12648:	muleq	r1, r4, r3
   1264c:	muleq	r1, r4, r3
   12650:	muleq	r1, r4, r3
   12654:	muleq	r1, r4, r3
   12658:	andeq	r1, r1, ip, ror #29
   1265c:	strdeq	r2, [r1], -ip
   12660:	andeq	r1, r1, ip, ror #29
   12664:	andeq	r1, r1, ip, lsl #30
   12668:	mov	r3, #116	; 0x74
   1266c:	b	1213c <abort@plt+0x1354>
   12670:	ldr	r3, [sp, #160]	; 0xa0
   12674:	cmp	r3, #0
   12678:	beq	11f48 <abort@plt+0x1160>
   1267c:	lsr	r3, r4, #5
   12680:	ldr	r0, [sp, #160]	; 0xa0
   12684:	uxtb	r3, r3
   12688:	and	r1, r4, #31
   1268c:	ldr	r0, [r0, r3, lsl #2]
   12690:	lsr	r3, r0, r1
   12694:	tst	r3, #1
   12698:	beq	11f48 <abort@plt+0x1160>
   1269c:	ldr	r3, [sp, #28]
   126a0:	cmp	r3, #0
   126a4:	beq	120a8 <abort@plt+0x12c0>
   126a8:	ldr	sl, [sp, #32]
   126ac:	mov	r8, fp
   126b0:	b	1216c <abort@plt+0x1384>
   126b4:	ldr	r3, [sp, #28]
   126b8:	cmp	r3, #0
   126bc:	bne	12c10 <abort@plt+0x1e28>
   126c0:	add	sl, sl, #1
   126c4:	ldr	r6, [sp, #40]	; 0x28
   126c8:	mov	r5, #0
   126cc:	mov	r4, #92	; 0x5c
   126d0:	b	11f64 <abort@plt+0x117c>
   126d4:	cmp	r9, r8
   126d8:	bne	12948 <abort@plt+0x1b60>
   126dc:	ldr	r0, [sp, #100]	; 0x64
   126e0:	bl	10c74 <iswprint@plt>
   126e4:	add	r5, r5, r4
   126e8:	cmp	r0, #0
   126ec:	add	r0, sp, #104	; 0x68
   126f0:	moveq	r6, #0
   126f4:	bl	10c2c <mbsinit@plt>
   126f8:	cmp	r0, #0
   126fc:	beq	128dc <abort@plt+0x1af4>
   12700:	mov	r2, r6
   12704:	mov	ip, r5
   12708:	eor	r5, r2, #1
   1270c:	ldr	r4, [sp, #80]	; 0x50
   12710:	ldr	r6, [sp, #84]	; 0x54
   12714:	ldr	r7, [sp, #88]	; 0x58
   12718:	uxtb	r5, r5
   1271c:	cmp	ip, #1
   12720:	bls	12c20 <abort@plt+0x1e38>
   12724:	ldr	r3, [sp, #44]	; 0x2c
   12728:	and	r8, r3, r5
   1272c:	mov	r5, r2
   12730:	uxtb	r8, r8
   12734:	add	r2, sl, ip
   12738:	ldr	r0, [sp, #48]	; 0x30
   1273c:	mov	r1, #0
   12740:	str	r5, [sp, #48]	; 0x30
   12744:	ldr	r9, [sp, #28]
   12748:	ldr	ip, [sp, #40]	; 0x28
   1274c:	ldr	r3, [sp, #32]
   12750:	ldr	r5, [sp, #152]	; 0x98
   12754:	b	12810 <abort@plt+0x1a28>
   12758:	cmp	r9, #0
   1275c:	bne	12b34 <abort@plt+0x1d4c>
   12760:	eor	r1, ip, #1
   12764:	cmp	r5, #2
   12768:	movne	r1, #0
   1276c:	andeq	r1, r1, #1
   12770:	cmp	r1, #0
   12774:	beq	127ac <abort@plt+0x19c4>
   12778:	cmp	fp, r7
   1277c:	movhi	ip, #39	; 0x27
   12780:	strbhi	ip, [r3, r7]
   12784:	add	ip, r7, #1
   12788:	cmp	fp, ip
   1278c:	movhi	lr, #36	; 0x24
   12790:	strbhi	lr, [r3, ip]
   12794:	add	ip, r7, #2
   12798:	cmp	fp, ip
   1279c:	movhi	lr, #39	; 0x27
   127a0:	strbhi	lr, [r3, ip]
   127a4:	add	r7, r7, #3
   127a8:	mov	ip, r1
   127ac:	cmp	fp, r7
   127b0:	movhi	r1, #92	; 0x5c
   127b4:	strbhi	r1, [r3, r7]
   127b8:	add	r1, r7, #1
   127bc:	cmp	fp, r1
   127c0:	lsrhi	lr, r4, #6
   127c4:	addhi	lr, lr, #48	; 0x30
   127c8:	strbhi	lr, [r3, r1]
   127cc:	add	lr, r7, #2
   127d0:	cmp	fp, lr
   127d4:	lsrhi	r1, r4, #3
   127d8:	andhi	r1, r1, #7
   127dc:	addhi	r1, r1, #48	; 0x30
   127e0:	add	sl, sl, #1
   127e4:	strbhi	r1, [r3, lr]
   127e8:	and	r4, r4, #7
   127ec:	cmp	r2, sl
   127f0:	add	r4, r4, #48	; 0x30
   127f4:	add	r7, r7, #3
   127f8:	bls	12b58 <abort@plt+0x1d70>
   127fc:	mov	r1, r8
   12800:	cmp	fp, r7
   12804:	strbhi	r4, [r3, r7]
   12808:	ldrb	r4, [r0, #1]!
   1280c:	add	r7, r7, #1
   12810:	cmp	r8, #0
   12814:	bne	12758 <abort@plt+0x1970>
   12818:	cmp	r6, #0
   1281c:	bne	1286c <abort@plt+0x1a84>
   12820:	eor	r6, r1, #1
   12824:	and	r6, r6, ip
   12828:	add	sl, sl, #1
   1282c:	cmp	r2, sl
   12830:	uxtb	r6, r6
   12834:	bls	12894 <abort@plt+0x1aac>
   12838:	cmp	r6, #0
   1283c:	beq	12800 <abort@plt+0x1a18>
   12840:	cmp	fp, r7
   12844:	movhi	ip, #39	; 0x27
   12848:	strbhi	ip, [r3, r7]
   1284c:	add	ip, r7, #1
   12850:	cmp	fp, ip
   12854:	movhi	lr, #39	; 0x27
   12858:	strbhi	lr, [r3, ip]
   1285c:	add	r7, r7, #2
   12860:	mov	r6, r8
   12864:	mov	ip, r8
   12868:	b	12800 <abort@plt+0x1a18>
   1286c:	cmp	fp, r7
   12870:	eor	r6, r1, #1
   12874:	movhi	lr, #92	; 0x5c
   12878:	and	r6, r6, ip
   1287c:	add	sl, sl, #1
   12880:	strbhi	lr, [r3, r7]
   12884:	cmp	r2, sl
   12888:	add	r7, r7, #1
   1288c:	uxtb	r6, r6
   12890:	bhi	12838 <abort@plt+0x1a50>
   12894:	str	ip, [sp, #40]	; 0x28
   12898:	ldr	r5, [sp, #48]	; 0x30
   1289c:	b	11f64 <abort@plt+0x117c>
   128a0:	ldr	r3, [sp, #24]
   128a4:	cmn	r3, #1
   128a8:	mov	r3, #0
   128ac:	str	r3, [sp, #104]	; 0x68
   128b0:	str	r3, [sp, #108]	; 0x6c
   128b4:	beq	12bd4 <abort@plt+0x1dec>
   128b8:	mov	r2, r5
   128bc:	mov	r3, #0
   128c0:	str	r7, [sp, #88]	; 0x58
   128c4:	ldr	r7, [sp, #152]	; 0x98
   128c8:	str	r5, [sp, #92]	; 0x5c
   128cc:	str	r6, [sp, #84]	; 0x54
   128d0:	mov	r5, r3
   128d4:	mov	r6, r2
   128d8:	str	r4, [sp, #80]	; 0x50
   128dc:	ldr	r3, [sp, #56]	; 0x38
   128e0:	add	r9, sl, r5
   128e4:	add	r8, r3, r9
   128e8:	ldr	r3, [sp, #24]
   128ec:	mov	r1, r8
   128f0:	sub	r2, r3, r9
   128f4:	add	r0, sp, #100	; 0x64
   128f8:	add	r3, sp, #104	; 0x68
   128fc:	bl	14730 <abort@plt+0x3948>
   12900:	subs	r4, r0, #0
   12904:	beq	12cac <abort@plt+0x1ec4>
   12908:	cmn	r4, #1
   1290c:	beq	12c8c <abort@plt+0x1ea4>
   12910:	cmn	r4, #2
   12914:	beq	12c2c <abort@plt+0x1e44>
   12918:	ldr	r2, [sp, #28]
   1291c:	cmp	r7, #2
   12920:	movne	r2, #0
   12924:	andeq	r2, r2, #1
   12928:	cmp	r2, #0
   1292c:	beq	126dc <abort@plt+0x18f4>
   12930:	cmp	r4, #1
   12934:	beq	126dc <abort@plt+0x18f4>
   12938:	sub	r3, r4, #1
   1293c:	add	r9, r3, r9
   12940:	ldr	r3, [sp, #56]	; 0x38
   12944:	add	r9, r3, r9
   12948:	ldrb	r3, [r8, #1]!
   1294c:	sub	r3, r3, #91	; 0x5b
   12950:	cmp	r3, #33	; 0x21
   12954:	ldrls	pc, [pc, r3, lsl #2]
   12958:	b	126d4 <abort@plt+0x18ec>
   1295c:	andeq	r2, r1, r4, ror #19
   12960:	andeq	r2, r1, r4, ror #19
   12964:	ldrdeq	r2, [r1], -r4
   12968:	andeq	r2, r1, r4, ror #19
   1296c:	ldrdeq	r2, [r1], -r4
   12970:	andeq	r2, r1, r4, ror #19
   12974:	ldrdeq	r2, [r1], -r4
   12978:	ldrdeq	r2, [r1], -r4
   1297c:	ldrdeq	r2, [r1], -r4
   12980:	ldrdeq	r2, [r1], -r4
   12984:	ldrdeq	r2, [r1], -r4
   12988:	ldrdeq	r2, [r1], -r4
   1298c:	ldrdeq	r2, [r1], -r4
   12990:	ldrdeq	r2, [r1], -r4
   12994:	ldrdeq	r2, [r1], -r4
   12998:	ldrdeq	r2, [r1], -r4
   1299c:	ldrdeq	r2, [r1], -r4
   129a0:	ldrdeq	r2, [r1], -r4
   129a4:	ldrdeq	r2, [r1], -r4
   129a8:	ldrdeq	r2, [r1], -r4
   129ac:	ldrdeq	r2, [r1], -r4
   129b0:	ldrdeq	r2, [r1], -r4
   129b4:	ldrdeq	r2, [r1], -r4
   129b8:	ldrdeq	r2, [r1], -r4
   129bc:	ldrdeq	r2, [r1], -r4
   129c0:	ldrdeq	r2, [r1], -r4
   129c4:	ldrdeq	r2, [r1], -r4
   129c8:	ldrdeq	r2, [r1], -r4
   129cc:	ldrdeq	r2, [r1], -r4
   129d0:	ldrdeq	r2, [r1], -r4
   129d4:	ldrdeq	r2, [r1], -r4
   129d8:	ldrdeq	r2, [r1], -r4
   129dc:	ldrdeq	r2, [r1], -r4
   129e0:	andeq	r2, r1, r4, ror #19
   129e4:	mov	r3, #2
   129e8:	ldr	sl, [sp, #32]
   129ec:	mov	r8, fp
   129f0:	str	r3, [sp, #152]	; 0x98
   129f4:	b	1216c <abort@plt+0x1384>
   129f8:	ldr	r3, [sp, #156]	; 0x9c
   129fc:	tst	r3, #1
   12a00:	bne	12b2c <abort@plt+0x1d44>
   12a04:	ldr	r3, [sp, #152]	; 0x98
   12a08:	ldr	r4, [sp, #44]	; 0x2c
   12a0c:	sub	r2, r3, #2
   12a10:	mov	r5, #0
   12a14:	clz	r2, r2
   12a18:	mov	r8, r4
   12a1c:	lsr	r2, r2, #5
   12a20:	b	11f2c <abort@plt+0x1144>
   12a24:	ldr	r3, [sp, #156]	; 0x9c
   12a28:	ands	r9, r3, #4
   12a2c:	beq	12b64 <abort@plt+0x1d7c>
   12a30:	ldr	r2, [sp, #24]
   12a34:	add	r3, sl, #2
   12a38:	cmp	r3, r2
   12a3c:	bcs	12a50 <abort@plt+0x1c68>
   12a40:	ldr	r2, [sp, #48]	; 0x30
   12a44:	ldrb	r4, [r2, #1]
   12a48:	cmp	r4, #63	; 0x3f
   12a4c:	beq	12cec <abort@plt+0x1f04>
   12a50:	mov	r2, #0
   12a54:	mov	r8, r2
   12a58:	mov	r5, r2
   12a5c:	mov	r4, #63	; 0x3f
   12a60:	b	11f2c <abort@plt+0x1144>
   12a64:	ldr	r3, [sp, #28]
   12a68:	cmp	r3, #0
   12a6c:	bne	12d90 <abort@plt+0x1fa8>
   12a70:	mov	r2, r5
   12a74:	mov	r8, r3
   12a78:	mov	r5, #0
   12a7c:	mov	r4, #63	; 0x3f
   12a80:	b	11f2c <abort@plt+0x1144>
   12a84:	ldr	r3, [sp, #28]
   12a88:	cmp	r3, #0
   12a8c:	bne	12d90 <abort@plt+0x1fa8>
   12a90:	ldr	r2, [sp, #72]	; 0x48
   12a94:	adds	r3, fp, #0
   12a98:	movne	r3, #1
   12a9c:	cmp	r2, #0
   12aa0:	movne	r3, #0
   12aa4:	cmp	r3, #0
   12aa8:	strne	fp, [sp, #72]	; 0x48
   12aac:	movne	fp, #0
   12ab0:	bne	12aec <abort@plt+0x1d04>
   12ab4:	cmp	fp, r7
   12ab8:	movhi	r2, #39	; 0x27
   12abc:	ldrhi	r3, [sp, #32]
   12ac0:	strbhi	r2, [r3, r7]
   12ac4:	add	r3, r7, #1
   12ac8:	cmp	fp, r3
   12acc:	movhi	r1, #92	; 0x5c
   12ad0:	ldrhi	r2, [sp, #32]
   12ad4:	strbhi	r1, [r2, r3]
   12ad8:	add	r3, r7, #2
   12adc:	cmp	fp, r3
   12ae0:	movhi	r1, #39	; 0x27
   12ae4:	ldrhi	r2, [sp, #32]
   12ae8:	strbhi	r1, [r2, r3]
   12aec:	ldr	r3, [sp, #28]
   12af0:	add	r7, r7, #3
   12af4:	mov	r2, r5
   12af8:	mov	r8, r3
   12afc:	str	r5, [sp, #68]	; 0x44
   12b00:	str	r3, [sp, #40]	; 0x28
   12b04:	mov	r4, #39	; 0x27
   12b08:	b	11f2c <abort@plt+0x1144>
   12b0c:	ldr	r3, [sp, #56]	; 0x38
   12b10:	ldrb	r3, [r3, #1]
   12b14:	adds	r3, r3, #0
   12b18:	movne	r3, #1
   12b1c:	b	11f04 <abort@plt+0x111c>
   12b20:	ldr	r5, [sp, #28]
   12b24:	mov	r4, #48	; 0x30
   12b28:	b	11f2c <abort@plt+0x1144>
   12b2c:	add	sl, sl, #1
   12b30:	b	11a5c <abort@plt+0xc74>
   12b34:	mov	sl, r3
   12b38:	ldr	r3, [sp, #28]
   12b3c:	mov	r8, fp
   12b40:	str	r3, [sp, #44]	; 0x2c
   12b44:	ldr	r3, [sp, #152]	; 0x98
   12b48:	sub	r2, r3, #2
   12b4c:	clz	r2, r2
   12b50:	lsr	r2, r2, #5
   12b54:	b	1216c <abort@plt+0x1384>
   12b58:	str	ip, [sp, #40]	; 0x28
   12b5c:	ldr	r5, [sp, #48]	; 0x30
   12b60:	b	11f9c <abort@plt+0x11b4>
   12b64:	mov	r2, r9
   12b68:	mov	r8, r9
   12b6c:	mov	r5, #0
   12b70:	mov	r4, #63	; 0x3f
   12b74:	b	11f2c <abort@plt+0x1144>
   12b78:	cmp	fp, #0
   12b7c:	beq	12bf4 <abort@plt+0x1e0c>
   12b80:	ldr	r1, [sp, #32]
   12b84:	mov	r3, #34	; 0x22
   12b88:	mov	r2, #1
   12b8c:	strb	r3, [r1]
   12b90:	ldr	r3, [pc, #332]	; 12ce4 <abort@plt+0x1efc>
   12b94:	str	r2, [sp, #52]	; 0x34
   12b98:	mov	r7, r2
   12b9c:	str	r2, [sp, #44]	; 0x2c
   12ba0:	str	r3, [sp, #64]	; 0x40
   12ba4:	b	11a4c <abort@plt+0xc64>
   12ba8:	ldr	r3, [pc, #300]	; 12cdc <abort@plt+0x1ef4>
   12bac:	str	r3, [sp, #64]	; 0x40
   12bb0:	mov	r3, #0
   12bb4:	str	r3, [sp, #28]
   12bb8:	mov	r3, #1
   12bbc:	str	r3, [sp, #52]	; 0x34
   12bc0:	mov	r7, r3
   12bc4:	mov	r3, #2
   12bc8:	str	r3, [sp, #152]	; 0x98
   12bcc:	b	11a4c <abort@plt+0xc64>
   12bd0:	bl	10de8 <abort@plt>
   12bd4:	ldr	r0, [sp, #56]	; 0x38
   12bd8:	bl	10d1c <strlen@plt>
   12bdc:	str	r0, [sp, #24]
   12be0:	b	128b8 <abort@plt+0x1ad0>
   12be4:	mov	r5, r8
   12be8:	mov	r4, #48	; 0x30
   12bec:	ldr	r8, [sp, #44]	; 0x2c
   12bf0:	b	11f2c <abort@plt+0x1144>
   12bf4:	mov	r3, #1
   12bf8:	str	r3, [sp, #52]	; 0x34
   12bfc:	mov	r7, r3
   12c00:	str	r3, [sp, #44]	; 0x2c
   12c04:	ldr	r3, [pc, #216]	; 12ce4 <abort@plt+0x1efc>
   12c08:	str	r3, [sp, #64]	; 0x40
   12c0c:	b	11a4c <abort@plt+0xc64>
   12c10:	ldr	sl, [sp, #32]
   12c14:	mov	r8, fp
   12c18:	mov	r2, r3
   12c1c:	b	1216c <abort@plt+0x1384>
   12c20:	mov	r3, r5
   12c24:	mov	r5, r2
   12c28:	b	12424 <abort@plt+0x163c>
   12c2c:	ldr	r1, [sp, #24]
   12c30:	mov	r2, r5
   12c34:	cmp	r1, r9
   12c38:	mov	ip, r5
   12c3c:	ldr	r4, [sp, #80]	; 0x50
   12c40:	ldr	r5, [sp, #92]	; 0x5c
   12c44:	ldr	r6, [sp, #84]	; 0x54
   12c48:	ldr	r7, [sp, #88]	; 0x58
   12c4c:	bls	12c80 <abort@plt+0x1e98>
   12c50:	ldrb	r3, [r8]
   12c54:	cmp	r3, #0
   12c58:	bne	12c6c <abort@plt+0x1e84>
   12c5c:	b	12c84 <abort@plt+0x1e9c>
   12c60:	ldrb	r3, [r8, #1]!
   12c64:	cmp	r3, #0
   12c68:	beq	12d84 <abort@plt+0x1f9c>
   12c6c:	add	r2, r2, #1
   12c70:	add	r3, sl, r2
   12c74:	cmp	r1, r3
   12c78:	bhi	12c60 <abort@plt+0x1e78>
   12c7c:	mov	ip, r2
   12c80:	mov	r3, #0
   12c84:	mov	r2, r3
   12c88:	b	1271c <abort@plt+0x1934>
   12c8c:	mov	r3, #0
   12c90:	mov	ip, r5
   12c94:	ldr	r4, [sp, #80]	; 0x50
   12c98:	ldr	r5, [sp, #92]	; 0x5c
   12c9c:	ldr	r6, [sp, #84]	; 0x54
   12ca0:	ldr	r7, [sp, #88]	; 0x58
   12ca4:	mov	r2, r3
   12ca8:	b	1271c <abort@plt+0x1934>
   12cac:	mov	r3, r6
   12cb0:	mov	ip, r5
   12cb4:	eor	r5, r3, #1
   12cb8:	mov	r2, r6
   12cbc:	ldr	r4, [sp, #80]	; 0x50
   12cc0:	ldr	r6, [sp, #84]	; 0x54
   12cc4:	ldr	r7, [sp, #88]	; 0x58
   12cc8:	uxtb	r5, r5
   12ccc:	b	1271c <abort@plt+0x1934>
   12cd0:	ldr	sl, [sp, #32]
   12cd4:	mov	r8, fp
   12cd8:	b	12b40 <abort@plt+0x1d58>
   12cdc:	andeq	r5, r1, r8, lsl #5
   12ce0:	andeq	r5, r1, ip, lsl #5
   12ce4:	andeq	r5, r1, r4, lsl #5
   12ce8:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12cec:	ldr	r2, [sp, #56]	; 0x38
   12cf0:	ldrb	r1, [r2, r3]
   12cf4:	sub	r2, r1, #33	; 0x21
   12cf8:	uxtb	r2, r2
   12cfc:	cmp	r2, #29
   12d00:	bhi	12da0 <abort@plt+0x1fb8>
   12d04:	ldr	r0, [pc, #-36]	; 12ce8 <abort@plt+0x1f00>
   12d08:	mov	ip, #1
   12d0c:	ands	r2, r0, ip, lsl r2
   12d10:	beq	12db0 <abort@plt+0x1fc8>
   12d14:	ldr	r2, [sp, #28]
   12d18:	cmp	r2, #0
   12d1c:	bne	12eb0 <abort@plt+0x20c8>
   12d20:	cmp	fp, r7
   12d24:	ldr	r8, [sp, #28]
   12d28:	ldrhi	r2, [sp, #32]
   12d2c:	mov	sl, r3
   12d30:	mov	r5, r8
   12d34:	strbhi	r4, [r2, r7]
   12d38:	add	r2, r7, #1
   12d3c:	cmp	fp, r2
   12d40:	movhi	r0, #34	; 0x22
   12d44:	ldrhi	ip, [sp, #32]
   12d48:	mov	r4, r1
   12d4c:	strbhi	r0, [ip, r2]
   12d50:	add	r2, r7, #2
   12d54:	cmp	fp, r2
   12d58:	movhi	r0, #34	; 0x22
   12d5c:	ldrhi	ip, [sp, #32]
   12d60:	strbhi	r0, [ip, r2]
   12d64:	add	r2, r7, #3
   12d68:	cmp	fp, r2
   12d6c:	movhi	r0, #63	; 0x3f
   12d70:	ldrhi	ip, [sp, #32]
   12d74:	add	r7, r7, #4
   12d78:	strbhi	r0, [ip, r2]
   12d7c:	mov	r2, r8
   12d80:	b	11f2c <abort@plt+0x1144>
   12d84:	mov	ip, r2
   12d88:	mov	r2, r3
   12d8c:	b	1271c <abort@plt+0x1934>
   12d90:	ldr	sl, [sp, #32]
   12d94:	mov	r8, fp
   12d98:	ldr	r2, [sp, #28]
   12d9c:	b	1216c <abort@plt+0x1384>
   12da0:	mov	r2, #0
   12da4:	mov	r8, r2
   12da8:	mov	r5, r2
   12dac:	b	11f2c <abort@plt+0x1144>
   12db0:	mov	r8, r2
   12db4:	mov	r5, #0
   12db8:	b	11f2c <abort@plt+0x1144>
   12dbc:	ldr	r1, [sp, #152]	; 0x98
   12dc0:	bl	11888 <abort@plt+0xaa0>
   12dc4:	str	r0, [sp, #168]	; 0xa8
   12dc8:	b	11de8 <abort@plt+0x1000>
   12dcc:	ldr	r1, [sp, #152]	; 0x98
   12dd0:	bl	11888 <abort@plt+0xaa0>
   12dd4:	str	r0, [sp, #164]	; 0xa4
   12dd8:	b	11dc8 <abort@plt+0xfe0>
   12ddc:	ldr	r7, [sp, #28]
   12de0:	b	11e28 <abort@plt+0x1040>
   12de4:	ldr	sl, [sp, #32]
   12de8:	ldr	r2, [sp, #68]	; 0x44
   12dec:	mov	r8, fp
   12df0:	mov	fp, r7
   12df4:	ldr	r3, [sp, #64]	; 0x40
   12df8:	cmp	r3, #0
   12dfc:	moveq	r2, #0
   12e00:	andne	r2, r2, #1
   12e04:	cmp	r2, #0
   12e08:	beq	12e34 <abort@plt+0x204c>
   12e0c:	mov	r2, r3
   12e10:	ldrb	r3, [r3]
   12e14:	cmp	r3, #0
   12e18:	beq	12e34 <abort@plt+0x204c>
   12e1c:	cmp	r8, fp
   12e20:	strbhi	r3, [sl, fp]
   12e24:	ldrb	r3, [r2, #1]!
   12e28:	add	fp, fp, #1
   12e2c:	cmp	r3, #0
   12e30:	bne	12e1c <abort@plt+0x2034>
   12e34:	cmp	r8, fp
   12e38:	movhi	r3, #0
   12e3c:	strbhi	r3, [sl, fp]
   12e40:	b	121c8 <abort@plt+0x13e0>
   12e44:	ldr	r3, [sp, #168]	; 0xa8
   12e48:	ldr	sl, [sp, #32]
   12e4c:	str	r3, [sp, #16]
   12e50:	ldr	r3, [sp, #164]	; 0xa4
   12e54:	mov	ip, #5
   12e58:	str	r3, [sp, #12]
   12e5c:	ldr	r3, [sp, #160]	; 0xa0
   12e60:	ldr	r2, [sp, #56]	; 0x38
   12e64:	str	r3, [sp, #8]
   12e68:	ldr	r3, [sp, #156]	; 0x9c
   12e6c:	ldr	r1, [sp, #72]	; 0x48
   12e70:	str	r3, [sp, #4]
   12e74:	mov	r0, sl
   12e78:	ldr	r3, [sp, #24]
   12e7c:	str	ip, [sp]
   12e80:	bl	119a8 <abort@plt+0xbc0>
   12e84:	mov	fp, r0
   12e88:	b	121c8 <abort@plt+0x13e0>
   12e8c:	mov	r8, fp
   12e90:	ldr	sl, [sp, #32]
   12e94:	mov	fp, r7
   12e98:	mov	r2, r3
   12e9c:	b	12df4 <abort@plt+0x200c>
   12ea0:	mov	r8, fp
   12ea4:	ldr	sl, [sp, #32]
   12ea8:	mov	fp, r7
   12eac:	b	12df4 <abort@plt+0x200c>
   12eb0:	ldr	sl, [sp, #32]
   12eb4:	mov	r8, fp
   12eb8:	b	12184 <abort@plt+0x139c>
   12ebc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ec0:	sub	sp, sp, #52	; 0x34
   12ec4:	mov	r4, r0
   12ec8:	mov	r5, r3
   12ecc:	mov	sl, r1
   12ed0:	mov	fp, r2
   12ed4:	bl	10d28 <__errno_location@plt>
   12ed8:	ldr	r7, [pc, #412]	; 1307c <abort@plt+0x2294>
   12edc:	cmn	r4, #-2147483647	; 0x80000001
   12ee0:	ldr	r6, [r7]
   12ee4:	mov	r8, r0
   12ee8:	movne	r0, #0
   12eec:	moveq	r0, #1
   12ef0:	ldr	r3, [r8]
   12ef4:	orrs	r0, r0, r4, lsr #31
   12ef8:	str	r3, [sp, #24]
   12efc:	bne	13078 <abort@plt+0x2290>
   12f00:	ldr	r2, [r7, #4]
   12f04:	cmp	r4, r2
   12f08:	blt	12f68 <abort@plt+0x2180>
   12f0c:	add	r9, r7, #8
   12f10:	cmp	r6, r9
   12f14:	str	r2, [sp, #44]	; 0x2c
   12f18:	beq	13048 <abort@plt+0x2260>
   12f1c:	mov	r3, #8
   12f20:	sub	r2, r4, r2
   12f24:	mov	r0, r6
   12f28:	str	r3, [sp]
   12f2c:	add	r2, r2, #1
   12f30:	mvn	r3, #-2147483648	; 0x80000000
   12f34:	add	r1, sp, #44	; 0x2c
   12f38:	bl	13d28 <abort@plt+0x2f40>
   12f3c:	mov	r6, r0
   12f40:	str	r0, [r7]
   12f44:	ldr	r0, [r7, #4]
   12f48:	ldr	r2, [sp, #44]	; 0x2c
   12f4c:	mov	r1, #0
   12f50:	sub	r2, r2, r0
   12f54:	add	r0, r6, r0, lsl #3
   12f58:	lsl	r2, r2, #3
   12f5c:	bl	10d40 <memset@plt>
   12f60:	ldr	r3, [sp, #44]	; 0x2c
   12f64:	str	r3, [r7, #4]
   12f68:	add	r3, r6, r4, lsl #3
   12f6c:	ldr	r1, [r5, #4]
   12f70:	ldr	r7, [r3, #4]
   12f74:	ldr	r9, [r6, r4, lsl #3]
   12f78:	ldr	r2, [r5, #40]	; 0x28
   12f7c:	ldr	ip, [r5, #44]	; 0x2c
   12f80:	add	r0, r5, #8
   12f84:	str	r3, [sp, #28]
   12f88:	ldr	r3, [r5]
   12f8c:	orr	r1, r1, #1
   12f90:	mov	lr, r0
   12f94:	str	r1, [sp, #32]
   12f98:	str	r0, [sp, #36]	; 0x24
   12f9c:	str	r1, [sp, #4]
   12fa0:	str	r2, [sp, #12]
   12fa4:	str	r3, [sp]
   12fa8:	mov	r0, r7
   12fac:	mov	r1, r9
   12fb0:	str	ip, [sp, #16]
   12fb4:	str	lr, [sp, #8]
   12fb8:	mov	r3, fp
   12fbc:	mov	r2, sl
   12fc0:	bl	119a8 <abort@plt+0xbc0>
   12fc4:	cmp	r9, r0
   12fc8:	bhi	13034 <abort@plt+0x224c>
   12fcc:	ldr	r3, [pc, #172]	; 13080 <abort@plt+0x2298>
   12fd0:	add	r9, r0, #1
   12fd4:	cmp	r7, r3
   12fd8:	str	r9, [r6, r4, lsl #3]
   12fdc:	beq	12fe8 <abort@plt+0x2200>
   12fe0:	mov	r0, r7
   12fe4:	bl	14604 <abort@plt+0x381c>
   12fe8:	mov	r0, r9
   12fec:	bl	13bc4 <abort@plt+0x2ddc>
   12ff0:	ldr	lr, [sp, #28]
   12ff4:	ldr	ip, [r5, #44]	; 0x2c
   12ff8:	ldr	r4, [r5, #40]	; 0x28
   12ffc:	mov	r3, fp
   13000:	mov	r2, sl
   13004:	mov	r1, r9
   13008:	str	r0, [lr, #4]
   1300c:	ldr	lr, [r5]
   13010:	ldr	r5, [sp, #36]	; 0x24
   13014:	str	ip, [sp, #16]
   13018:	str	r5, [sp, #8]
   1301c:	ldr	r5, [sp, #32]
   13020:	str	r4, [sp, #12]
   13024:	str	r5, [sp, #4]
   13028:	str	lr, [sp]
   1302c:	mov	r7, r0
   13030:	bl	119a8 <abort@plt+0xbc0>
   13034:	ldr	r3, [sp, #24]
   13038:	mov	r0, r7
   1303c:	str	r3, [r8]
   13040:	add	sp, sp, #52	; 0x34
   13044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13048:	mov	r3, #8
   1304c:	sub	r2, r4, r2
   13050:	str	r3, [sp]
   13054:	add	r1, sp, #44	; 0x2c
   13058:	add	r2, r2, #1
   1305c:	mvn	r3, #-2147483648	; 0x80000000
   13060:	bl	13d28 <abort@plt+0x2f40>
   13064:	mov	r6, r0
   13068:	ldm	r9, {r0, r1}
   1306c:	str	r6, [r7]
   13070:	stm	r6, {r0, r1}
   13074:	b	12f44 <abort@plt+0x215c>
   13078:	bl	10de8 <abort@plt>
   1307c:	andeq	r6, r2, r0, ror #1
   13080:	andeq	r6, r2, ip, asr #2
   13084:	push	{r4, r5, r6, lr}
   13088:	mov	r5, r0
   1308c:	bl	10d28 <__errno_location@plt>
   13090:	cmp	r5, #0
   13094:	mov	r1, #48	; 0x30
   13098:	mov	r4, r0
   1309c:	ldr	r0, [pc, #16]	; 130b4 <abort@plt+0x22cc>
   130a0:	ldr	r6, [r4]
   130a4:	movne	r0, r5
   130a8:	bl	14024 <abort@plt+0x323c>
   130ac:	str	r6, [r4]
   130b0:	pop	{r4, r5, r6, pc}
   130b4:	andeq	r6, r2, ip, asr #4
   130b8:	ldr	r3, [pc, #12]	; 130cc <abort@plt+0x22e4>
   130bc:	cmp	r0, #0
   130c0:	moveq	r0, r3
   130c4:	ldr	r0, [r0]
   130c8:	bx	lr
   130cc:	andeq	r6, r2, ip, asr #4
   130d0:	ldr	r3, [pc, #12]	; 130e4 <abort@plt+0x22fc>
   130d4:	cmp	r0, #0
   130d8:	moveq	r0, r3
   130dc:	str	r1, [r0]
   130e0:	bx	lr
   130e4:	andeq	r6, r2, ip, asr #4
   130e8:	ldr	r3, [pc, #52]	; 13124 <abort@plt+0x233c>
   130ec:	cmp	r0, #0
   130f0:	moveq	r0, r3
   130f4:	add	r3, r0, #8
   130f8:	push	{lr}		; (str lr, [sp, #-4]!)
   130fc:	lsr	lr, r1, #5
   13100:	and	r1, r1, #31
   13104:	ldr	ip, [r3, lr, lsl #2]
   13108:	lsr	r0, ip, r1
   1310c:	eor	r2, r2, r0
   13110:	and	r2, r2, #1
   13114:	and	r0, r0, #1
   13118:	eor	r1, ip, r2, lsl r1
   1311c:	str	r1, [r3, lr, lsl #2]
   13120:	pop	{pc}		; (ldr pc, [sp], #4)
   13124:	andeq	r6, r2, ip, asr #4
   13128:	ldr	r3, [pc, #16]	; 13140 <abort@plt+0x2358>
   1312c:	cmp	r0, #0
   13130:	movne	r3, r0
   13134:	ldr	r0, [r3, #4]
   13138:	str	r1, [r3, #4]
   1313c:	bx	lr
   13140:	andeq	r6, r2, ip, asr #4
   13144:	ldr	r3, [pc, #44]	; 13178 <abort@plt+0x2390>
   13148:	cmp	r0, #0
   1314c:	moveq	r0, r3
   13150:	mov	ip, #10
   13154:	cmp	r2, #0
   13158:	cmpne	r1, #0
   1315c:	str	ip, [r0]
   13160:	beq	13170 <abort@plt+0x2388>
   13164:	str	r1, [r0, #40]	; 0x28
   13168:	str	r2, [r0, #44]	; 0x2c
   1316c:	bx	lr
   13170:	push	{r4, lr}
   13174:	bl	10de8 <abort@plt>
   13178:	andeq	r6, r2, ip, asr #4
   1317c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13180:	sub	sp, sp, #24
   13184:	ldr	ip, [pc, #108]	; 131f8 <abort@plt+0x2410>
   13188:	ldr	r4, [sp, #56]	; 0x38
   1318c:	mov	r9, r2
   13190:	cmp	r4, #0
   13194:	moveq	r4, ip
   13198:	mov	sl, r3
   1319c:	mov	r7, r0
   131a0:	mov	r8, r1
   131a4:	bl	10d28 <__errno_location@plt>
   131a8:	ldr	r3, [r4, #44]	; 0x2c
   131ac:	mov	r1, r8
   131b0:	ldr	r6, [r0]
   131b4:	str	r3, [sp, #16]
   131b8:	ldr	r2, [r4, #40]	; 0x28
   131bc:	add	r3, r4, #8
   131c0:	str	r3, [sp, #8]
   131c4:	str	r2, [sp, #12]
   131c8:	ldr	r2, [r4, #4]
   131cc:	mov	r5, r0
   131d0:	str	r2, [sp, #4]
   131d4:	ldr	ip, [r4]
   131d8:	mov	r3, sl
   131dc:	mov	r2, r9
   131e0:	mov	r0, r7
   131e4:	str	ip, [sp]
   131e8:	bl	119a8 <abort@plt+0xbc0>
   131ec:	str	r6, [r5]
   131f0:	add	sp, sp, #24
   131f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131f8:	andeq	r6, r2, ip, asr #4
   131fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13200:	cmp	r3, #0
   13204:	sub	sp, sp, #44	; 0x2c
   13208:	ldr	r4, [pc, #192]	; 132d0 <abort@plt+0x24e8>
   1320c:	mov	r6, r2
   13210:	movne	r4, r3
   13214:	mov	r9, r1
   13218:	mov	r8, r0
   1321c:	bl	10d28 <__errno_location@plt>
   13220:	ldr	r3, [r4, #44]	; 0x2c
   13224:	ldr	r5, [r4, #4]
   13228:	add	sl, r4, #8
   1322c:	cmp	r6, #0
   13230:	orreq	r5, r5, #1
   13234:	mov	r1, #0
   13238:	ldr	r2, [r0]
   1323c:	str	r3, [sp, #16]
   13240:	ldr	r3, [r4, #40]	; 0x28
   13244:	stmib	sp, {r5, sl}
   13248:	str	r3, [sp, #12]
   1324c:	ldr	r3, [r4]
   13250:	mov	r7, r0
   13254:	str	r2, [sp, #28]
   13258:	str	r3, [sp]
   1325c:	mov	r2, r8
   13260:	mov	r3, r9
   13264:	mov	r0, r1
   13268:	bl	119a8 <abort@plt+0xbc0>
   1326c:	add	r1, r0, #1
   13270:	mov	fp, r0
   13274:	mov	r0, r1
   13278:	str	r1, [sp, #36]	; 0x24
   1327c:	bl	13bc4 <abort@plt+0x2ddc>
   13280:	ldr	r3, [r4, #44]	; 0x2c
   13284:	mov	r2, r8
   13288:	str	r3, [sp, #16]
   1328c:	ldr	r3, [r4, #40]	; 0x28
   13290:	str	r5, [sp, #4]
   13294:	str	r3, [sp, #12]
   13298:	str	sl, [sp, #8]
   1329c:	ldr	ip, [r4]
   132a0:	ldr	r1, [sp, #36]	; 0x24
   132a4:	mov	r3, r9
   132a8:	str	ip, [sp]
   132ac:	str	r0, [sp, #32]
   132b0:	bl	119a8 <abort@plt+0xbc0>
   132b4:	ldr	r2, [sp, #28]
   132b8:	cmp	r6, #0
   132bc:	str	r2, [r7]
   132c0:	ldr	r0, [sp, #32]
   132c4:	strne	fp, [r6]
   132c8:	add	sp, sp, #44	; 0x2c
   132cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132d0:	andeq	r6, r2, ip, asr #4
   132d4:	mov	r3, r2
   132d8:	mov	r2, #0
   132dc:	b	131fc <abort@plt+0x2414>
   132e0:	push	{r4, r5, r6, r7, r8, lr}
   132e4:	ldr	r6, [pc, #116]	; 13360 <abort@plt+0x2578>
   132e8:	ldr	r3, [r6, #4]
   132ec:	ldr	r7, [r6]
   132f0:	cmp	r3, #1
   132f4:	movgt	r5, r7
   132f8:	movgt	r4, #1
   132fc:	ble	1331c <abort@plt+0x2534>
   13300:	ldr	r0, [r5, #12]
   13304:	bl	14604 <abort@plt+0x381c>
   13308:	ldr	r3, [r6, #4]
   1330c:	add	r4, r4, #1
   13310:	cmp	r3, r4
   13314:	add	r5, r5, #8
   13318:	bgt	13300 <abort@plt+0x2518>
   1331c:	ldr	r0, [r7, #4]
   13320:	ldr	r4, [pc, #60]	; 13364 <abort@plt+0x257c>
   13324:	cmp	r0, r4
   13328:	beq	1333c <abort@plt+0x2554>
   1332c:	bl	14604 <abort@plt+0x381c>
   13330:	mov	r3, #256	; 0x100
   13334:	str	r4, [r6, #12]
   13338:	str	r3, [r6, #8]
   1333c:	ldr	r4, [pc, #36]	; 13368 <abort@plt+0x2580>
   13340:	cmp	r7, r4
   13344:	beq	13354 <abort@plt+0x256c>
   13348:	mov	r0, r7
   1334c:	bl	14604 <abort@plt+0x381c>
   13350:	str	r4, [r6]
   13354:	mov	r3, #1
   13358:	str	r3, [r6, #4]
   1335c:	pop	{r4, r5, r6, r7, r8, pc}
   13360:	andeq	r6, r2, r0, ror #1
   13364:	andeq	r6, r2, ip, asr #2
   13368:	andeq	r6, r2, r8, ror #1
   1336c:	ldr	r3, [pc, #4]	; 13378 <abort@plt+0x2590>
   13370:	mvn	r2, #0
   13374:	b	12ebc <abort@plt+0x20d4>
   13378:	andeq	r6, r2, ip, asr #4
   1337c:	ldr	r3, [pc]	; 13384 <abort@plt+0x259c>
   13380:	b	12ebc <abort@plt+0x20d4>
   13384:	andeq	r6, r2, ip, asr #4
   13388:	mov	r1, r0
   1338c:	ldr	r3, [pc, #8]	; 1339c <abort@plt+0x25b4>
   13390:	mvn	r2, #0
   13394:	mov	r0, #0
   13398:	b	12ebc <abort@plt+0x20d4>
   1339c:	andeq	r6, r2, ip, asr #4
   133a0:	mov	r2, r1
   133a4:	ldr	r3, [pc, #8]	; 133b4 <abort@plt+0x25cc>
   133a8:	mov	r1, r0
   133ac:	mov	r0, #0
   133b0:	b	12ebc <abort@plt+0x20d4>
   133b4:	andeq	r6, r2, ip, asr #4
   133b8:	push	{r4, r5, lr}
   133bc:	sub	sp, sp, #52	; 0x34
   133c0:	mov	r5, r2
   133c4:	mov	r4, r0
   133c8:	mov	r0, sp
   133cc:	bl	11858 <abort@plt+0xa70>
   133d0:	mov	r3, sp
   133d4:	mov	r1, r5
   133d8:	mov	r0, r4
   133dc:	mvn	r2, #0
   133e0:	bl	12ebc <abort@plt+0x20d4>
   133e4:	add	sp, sp, #52	; 0x34
   133e8:	pop	{r4, r5, pc}
   133ec:	push	{r4, r5, r6, lr}
   133f0:	sub	sp, sp, #48	; 0x30
   133f4:	mov	r5, r2
   133f8:	mov	r6, r3
   133fc:	mov	r4, r0
   13400:	mov	r0, sp
   13404:	bl	11858 <abort@plt+0xa70>
   13408:	mov	r3, sp
   1340c:	mov	r2, r6
   13410:	mov	r1, r5
   13414:	mov	r0, r4
   13418:	bl	12ebc <abort@plt+0x20d4>
   1341c:	add	sp, sp, #48	; 0x30
   13420:	pop	{r4, r5, r6, pc}
   13424:	mov	r2, r1
   13428:	mov	r1, r0
   1342c:	mov	r0, #0
   13430:	b	133b8 <abort@plt+0x25d0>
   13434:	mov	r3, r2
   13438:	mov	r2, r1
   1343c:	mov	r1, r0
   13440:	mov	r0, #0
   13444:	b	133ec <abort@plt+0x2604>
   13448:	push	{r4, r5, r6, r7, r8, lr}
   1344c:	mov	r7, r0
   13450:	ldr	lr, [pc, #100]	; 134bc <abort@plt+0x26d4>
   13454:	mov	r8, r1
   13458:	mov	r4, r2
   1345c:	ldm	lr!, {r0, r1, r2, r3}
   13460:	sub	sp, sp, #48	; 0x30
   13464:	mov	ip, sp
   13468:	lsr	r5, r4, #5
   1346c:	stmia	ip!, {r0, r1, r2, r3}
   13470:	add	r6, sp, #8
   13474:	ldm	lr!, {r0, r1, r2, r3}
   13478:	and	r4, r4, #31
   1347c:	stmia	ip!, {r0, r1, r2, r3}
   13480:	ldm	lr, {r0, r1, r2, r3}
   13484:	stm	ip, {r0, r1, r2, r3}
   13488:	mov	r2, r8
   1348c:	ldr	lr, [r6, r5, lsl #2]
   13490:	mov	r1, r7
   13494:	mov	r3, sp
   13498:	lsr	ip, lr, r4
   1349c:	eor	ip, ip, #1
   134a0:	and	ip, ip, #1
   134a4:	mov	r0, #0
   134a8:	eor	r4, lr, ip, lsl r4
   134ac:	str	r4, [r6, r5, lsl #2]
   134b0:	bl	12ebc <abort@plt+0x20d4>
   134b4:	add	sp, sp, #48	; 0x30
   134b8:	pop	{r4, r5, r6, r7, r8, pc}
   134bc:	andeq	r6, r2, ip, asr #4
   134c0:	mov	r2, r1
   134c4:	mvn	r1, #0
   134c8:	b	13448 <abort@plt+0x2660>
   134cc:	mov	r2, #58	; 0x3a
   134d0:	mvn	r1, #0
   134d4:	b	13448 <abort@plt+0x2660>
   134d8:	mov	r2, #58	; 0x3a
   134dc:	b	13448 <abort@plt+0x2660>
   134e0:	push	{r4, r5, r6, r7, lr}
   134e4:	sub	sp, sp, #100	; 0x64
   134e8:	mov	r6, r0
   134ec:	mov	r0, sp
   134f0:	mov	r7, r2
   134f4:	bl	11858 <abort@plt+0xa70>
   134f8:	mov	ip, sp
   134fc:	add	lr, sp, #48	; 0x30
   13500:	ldm	ip!, {r0, r1, r2, r3}
   13504:	stmia	lr!, {r0, r1, r2, r3}
   13508:	ldm	ip!, {r0, r1, r2, r3}
   1350c:	ldr	r5, [sp, #60]	; 0x3c
   13510:	stmia	lr!, {r0, r1, r2, r3}
   13514:	mvn	r4, r5
   13518:	ldm	ip, {r0, r1, r2, r3}
   1351c:	and	ip, r4, #67108864	; 0x4000000
   13520:	eor	ip, ip, r5
   13524:	str	ip, [sp, #60]	; 0x3c
   13528:	stm	lr, {r0, r1, r2, r3}
   1352c:	mov	r1, r7
   13530:	mov	r0, r6
   13534:	add	r3, sp, #48	; 0x30
   13538:	mvn	r2, #0
   1353c:	bl	12ebc <abort@plt+0x20d4>
   13540:	add	sp, sp, #100	; 0x64
   13544:	pop	{r4, r5, r6, r7, pc}
   13548:	push	{r4, r5, r6, r7, r8, lr}
   1354c:	mov	r5, r1
   13550:	ldr	lr, [pc, #100]	; 135bc <abort@plt+0x27d4>
   13554:	mov	r4, r2
   13558:	mov	r7, r0
   1355c:	mov	r8, r3
   13560:	ldm	lr!, {r0, r1, r2, r3}
   13564:	sub	sp, sp, #48	; 0x30
   13568:	mov	ip, sp
   1356c:	mov	r6, #10
   13570:	stmia	ip!, {r0, r1, r2, r3}
   13574:	cmp	r4, #0
   13578:	cmpne	r5, #0
   1357c:	ldm	lr!, {r0, r1, r2, r3}
   13580:	str	r6, [sp]
   13584:	stmia	ip!, {r0, r1, r2, r3}
   13588:	ldm	lr, {r0, r1, r2, r3}
   1358c:	stm	ip, {r0, r1, r2, r3}
   13590:	beq	135b8 <abort@plt+0x27d0>
   13594:	mov	r3, sp
   13598:	mov	r1, r8
   1359c:	mov	r0, r7
   135a0:	ldr	r2, [sp, #72]	; 0x48
   135a4:	str	r5, [sp, #40]	; 0x28
   135a8:	str	r4, [sp, #44]	; 0x2c
   135ac:	bl	12ebc <abort@plt+0x20d4>
   135b0:	add	sp, sp, #48	; 0x30
   135b4:	pop	{r4, r5, r6, r7, r8, pc}
   135b8:	bl	10de8 <abort@plt>
   135bc:	andeq	r6, r2, ip, asr #4
   135c0:	push	{lr}		; (str lr, [sp, #-4]!)
   135c4:	sub	sp, sp, #12
   135c8:	mvn	ip, #0
   135cc:	str	ip, [sp]
   135d0:	bl	13548 <abort@plt+0x2760>
   135d4:	add	sp, sp, #12
   135d8:	pop	{pc}		; (ldr pc, [sp], #4)
   135dc:	push	{lr}		; (str lr, [sp, #-4]!)
   135e0:	sub	sp, sp, #12
   135e4:	mvn	ip, #0
   135e8:	mov	r3, r2
   135ec:	str	ip, [sp]
   135f0:	mov	r2, r1
   135f4:	mov	r1, r0
   135f8:	mov	r0, #0
   135fc:	bl	13548 <abort@plt+0x2760>
   13600:	add	sp, sp, #12
   13604:	pop	{pc}		; (ldr pc, [sp], #4)
   13608:	push	{lr}		; (str lr, [sp, #-4]!)
   1360c:	sub	sp, sp, #12
   13610:	str	r3, [sp]
   13614:	mov	r3, r2
   13618:	mov	r2, r1
   1361c:	mov	r1, r0
   13620:	mov	r0, #0
   13624:	bl	13548 <abort@plt+0x2760>
   13628:	add	sp, sp, #12
   1362c:	pop	{pc}		; (ldr pc, [sp], #4)
   13630:	ldr	r3, [pc]	; 13638 <abort@plt+0x2850>
   13634:	b	12ebc <abort@plt+0x20d4>
   13638:	strdeq	r6, [r2], -r0
   1363c:	mov	r2, r1
   13640:	ldr	r3, [pc, #8]	; 13650 <abort@plt+0x2868>
   13644:	mov	r1, r0
   13648:	mov	r0, #0
   1364c:	b	12ebc <abort@plt+0x20d4>
   13650:	strdeq	r6, [r2], -r0
   13654:	ldr	r3, [pc, #4]	; 13660 <abort@plt+0x2878>
   13658:	mvn	r2, #0
   1365c:	b	12ebc <abort@plt+0x20d4>
   13660:	strdeq	r6, [r2], -r0
   13664:	mov	r1, r0
   13668:	ldr	r3, [pc, #8]	; 13678 <abort@plt+0x2890>
   1366c:	mvn	r2, #0
   13670:	mov	r0, #0
   13674:	b	12ebc <abort@plt+0x20d4>
   13678:	strdeq	r6, [r2], -r0
   1367c:	push	{r4, r5, r6, lr}
   13680:	sub	sp, sp, #32
   13684:	cmp	r1, #0
   13688:	mov	r4, r0
   1368c:	ldr	r5, [sp, #48]	; 0x30
   13690:	ldr	r6, [sp, #52]	; 0x34
   13694:	beq	139ac <abort@plt+0x2bc4>
   13698:	stm	sp, {r2, r3}
   1369c:	mov	r3, r1
   136a0:	ldr	r2, [pc, #808]	; 139d0 <abort@plt+0x2be8>
   136a4:	mov	r1, #1
   136a8:	bl	10d70 <__fprintf_chk@plt>
   136ac:	mov	r2, #5
   136b0:	ldr	r1, [pc, #796]	; 139d4 <abort@plt+0x2bec>
   136b4:	mov	r0, #0
   136b8:	bl	10c50 <dcgettext@plt>
   136bc:	ldr	r3, [pc, #788]	; 139d8 <abort@plt+0x2bf0>
   136c0:	ldr	r2, [pc, #788]	; 139dc <abort@plt+0x2bf4>
   136c4:	str	r3, [sp]
   136c8:	mov	r1, #1
   136cc:	mov	r3, r0
   136d0:	mov	r0, r4
   136d4:	bl	10d70 <__fprintf_chk@plt>
   136d8:	mov	r1, r4
   136dc:	mov	r0, #10
   136e0:	bl	10c44 <fputc_unlocked@plt>
   136e4:	mov	r2, #5
   136e8:	ldr	r1, [pc, #752]	; 139e0 <abort@plt+0x2bf8>
   136ec:	mov	r0, #0
   136f0:	bl	10c50 <dcgettext@plt>
   136f4:	mov	r1, #1
   136f8:	ldr	r3, [pc, #740]	; 139e4 <abort@plt+0x2bfc>
   136fc:	mov	r2, r0
   13700:	mov	r0, r4
   13704:	bl	10d70 <__fprintf_chk@plt>
   13708:	mov	r1, r4
   1370c:	mov	r0, #10
   13710:	bl	10c44 <fputc_unlocked@plt>
   13714:	cmp	r6, #9
   13718:	ldrls	pc, [pc, r6, lsl #2]
   1371c:	b	139c4 <abort@plt+0x2bdc>
   13720:	andeq	r3, r1, r4, lsr #15
   13724:	andeq	r3, r1, ip, lsr #15
   13728:	ldrdeq	r3, [r1], -r8
   1372c:	andeq	r3, r1, ip, lsl #16
   13730:	andeq	r3, r1, r8, asr #16
   13734:	andeq	r3, r1, r4, lsl #17
   13738:	andeq	r3, r1, r0, asr #17
   1373c:	andeq	r3, r1, r4, lsl #18
   13740:	andeq	r3, r1, r4, asr r9
   13744:	andeq	r3, r1, r8, asr #14
   13748:	ldr	r1, [pc, #664]	; 139e8 <abort@plt+0x2c00>
   1374c:	mov	r2, #5
   13750:	mov	r0, #0
   13754:	bl	10c50 <dcgettext@plt>
   13758:	ldr	ip, [r5, #32]
   1375c:	ldr	r1, [r5, #28]
   13760:	ldr	r2, [r5, #24]
   13764:	ldr	r3, [r5]
   13768:	ldr	r6, [r5, #20]
   1376c:	str	ip, [sp, #28]
   13770:	ldr	lr, [r5, #16]
   13774:	str	r1, [sp, #24]
   13778:	ldr	ip, [r5, #12]
   1377c:	str	r2, [sp, #20]
   13780:	ldr	r1, [r5, #8]
   13784:	ldr	r2, [r5, #4]
   13788:	str	r6, [sp, #16]
   1378c:	stmib	sp, {r1, ip, lr}
   13790:	mov	r1, #1
   13794:	str	r2, [sp]
   13798:	mov	r2, r0
   1379c:	mov	r0, r4
   137a0:	bl	10d70 <__fprintf_chk@plt>
   137a4:	add	sp, sp, #32
   137a8:	pop	{r4, r5, r6, pc}
   137ac:	mov	r2, #5
   137b0:	ldr	r1, [pc, #564]	; 139ec <abort@plt+0x2c04>
   137b4:	mov	r0, #0
   137b8:	bl	10c50 <dcgettext@plt>
   137bc:	ldr	r3, [r5]
   137c0:	mov	r1, #1
   137c4:	mov	r2, r0
   137c8:	mov	r0, r4
   137cc:	add	sp, sp, #32
   137d0:	pop	{r4, r5, r6, lr}
   137d4:	b	10d70 <__fprintf_chk@plt>
   137d8:	mov	r2, #5
   137dc:	ldr	r1, [pc, #524]	; 139f0 <abort@plt+0x2c08>
   137e0:	mov	r0, #0
   137e4:	bl	10c50 <dcgettext@plt>
   137e8:	ldr	r2, [r5, #4]
   137ec:	ldr	r3, [r5]
   137f0:	mov	r1, #1
   137f4:	str	r2, [sp, #48]	; 0x30
   137f8:	mov	r2, r0
   137fc:	mov	r0, r4
   13800:	add	sp, sp, #32
   13804:	pop	{r4, r5, r6, lr}
   13808:	b	10d70 <__fprintf_chk@plt>
   1380c:	mov	r2, #5
   13810:	ldr	r1, [pc, #476]	; 139f4 <abort@plt+0x2c0c>
   13814:	mov	r0, #0
   13818:	bl	10c50 <dcgettext@plt>
   1381c:	ldr	r1, [r5, #8]
   13820:	ldr	r2, [r5, #4]
   13824:	ldr	r3, [r5]
   13828:	str	r1, [sp, #52]	; 0x34
   1382c:	str	r2, [sp, #48]	; 0x30
   13830:	mov	r1, #1
   13834:	mov	r2, r0
   13838:	mov	r0, r4
   1383c:	add	sp, sp, #32
   13840:	pop	{r4, r5, r6, lr}
   13844:	b	10d70 <__fprintf_chk@plt>
   13848:	mov	r2, #5
   1384c:	ldr	r1, [pc, #420]	; 139f8 <abort@plt+0x2c10>
   13850:	mov	r0, #0
   13854:	bl	10c50 <dcgettext@plt>
   13858:	ldr	r1, [r5, #8]
   1385c:	ldr	ip, [r5, #12]
   13860:	ldr	r2, [r5, #4]
   13864:	ldr	r3, [r5]
   13868:	stmib	sp, {r1, ip}
   1386c:	str	r2, [sp]
   13870:	mov	r1, #1
   13874:	mov	r2, r0
   13878:	mov	r0, r4
   1387c:	bl	10d70 <__fprintf_chk@plt>
   13880:	b	137a4 <abort@plt+0x29bc>
   13884:	mov	r2, #5
   13888:	ldr	r1, [pc, #364]	; 139fc <abort@plt+0x2c14>
   1388c:	mov	r0, #0
   13890:	bl	10c50 <dcgettext@plt>
   13894:	add	r1, r5, #8
   13898:	ldr	r2, [r5, #4]
   1389c:	ldm	r1, {r1, ip, lr}
   138a0:	ldr	r3, [r5]
   138a4:	str	r2, [sp]
   138a8:	stmib	sp, {r1, ip, lr}
   138ac:	mov	r1, #1
   138b0:	mov	r2, r0
   138b4:	mov	r0, r4
   138b8:	bl	10d70 <__fprintf_chk@plt>
   138bc:	b	137a4 <abort@plt+0x29bc>
   138c0:	mov	r2, #5
   138c4:	ldr	r1, [pc, #308]	; 13a00 <abort@plt+0x2c18>
   138c8:	mov	r0, #0
   138cc:	bl	10c50 <dcgettext@plt>
   138d0:	add	r1, r5, #8
   138d4:	ldr	r2, [r5, #4]
   138d8:	ldm	r1, {r1, ip, lr}
   138dc:	ldr	r6, [r5, #20]
   138e0:	ldr	r3, [r5]
   138e4:	stmib	sp, {r1, ip, lr}
   138e8:	mov	r1, #1
   138ec:	str	r2, [sp]
   138f0:	str	r6, [sp, #16]
   138f4:	mov	r2, r0
   138f8:	mov	r0, r4
   138fc:	bl	10d70 <__fprintf_chk@plt>
   13900:	b	137a4 <abort@plt+0x29bc>
   13904:	mov	r2, #5
   13908:	ldr	r1, [pc, #244]	; 13a04 <abort@plt+0x2c1c>
   1390c:	mov	r0, #0
   13910:	bl	10c50 <dcgettext@plt>
   13914:	ldr	r2, [r5, #24]
   13918:	ldr	r3, [r5]
   1391c:	ldr	r6, [r5, #20]
   13920:	ldr	lr, [r5, #16]
   13924:	ldr	ip, [r5, #12]
   13928:	str	r2, [sp, #20]
   1392c:	ldr	r1, [r5, #8]
   13930:	ldr	r2, [r5, #4]
   13934:	str	r6, [sp, #16]
   13938:	stmib	sp, {r1, ip, lr}
   1393c:	mov	r1, #1
   13940:	str	r2, [sp]
   13944:	mov	r2, r0
   13948:	mov	r0, r4
   1394c:	bl	10d70 <__fprintf_chk@plt>
   13950:	b	137a4 <abort@plt+0x29bc>
   13954:	mov	r2, #5
   13958:	ldr	r1, [pc, #168]	; 13a08 <abort@plt+0x2c20>
   1395c:	mov	r0, #0
   13960:	bl	10c50 <dcgettext@plt>
   13964:	ldr	r1, [r5, #28]
   13968:	ldr	r2, [r5, #24]
   1396c:	ldr	r3, [r5]
   13970:	ldr	r6, [r5, #20]
   13974:	ldr	lr, [r5, #16]
   13978:	str	r1, [sp, #24]
   1397c:	ldr	ip, [r5, #12]
   13980:	str	r2, [sp, #20]
   13984:	ldr	r1, [r5, #8]
   13988:	ldr	r2, [r5, #4]
   1398c:	str	r6, [sp, #16]
   13990:	stmib	sp, {r1, ip, lr}
   13994:	mov	r1, #1
   13998:	str	r2, [sp]
   1399c:	mov	r2, r0
   139a0:	mov	r0, r4
   139a4:	bl	10d70 <__fprintf_chk@plt>
   139a8:	b	137a4 <abort@plt+0x29bc>
   139ac:	str	r3, [sp]
   139b0:	mov	r1, #1
   139b4:	mov	r3, r2
   139b8:	ldr	r2, [pc, #76]	; 13a0c <abort@plt+0x2c24>
   139bc:	bl	10d70 <__fprintf_chk@plt>
   139c0:	b	136ac <abort@plt+0x28c4>
   139c4:	mov	r2, #5
   139c8:	ldr	r1, [pc, #64]	; 13a10 <abort@plt+0x2c28>
   139cc:	b	13750 <abort@plt+0x2968>
   139d0:	strdeq	r5, [r1], -r8
   139d4:	andeq	r5, r1, ip, lsl #6
   139d8:	andeq	r0, r0, r6, ror #15
   139dc:	andeq	r5, r1, r4, ror #11
   139e0:	andeq	r5, r1, r0, lsl r3
   139e4:			; <UNDEFINED> instruction: 0x000153bc
   139e8:	andeq	r5, r1, ip, ror #9
   139ec:	andeq	r5, r1, r0, ror #7
   139f0:	strdeq	r5, [r1], -r0
   139f4:	andeq	r5, r1, r8, lsl #8
   139f8:	andeq	r5, r1, r4, lsr #8
   139fc:	andeq	r5, r1, r4, asr #8
   13a00:	andeq	r5, r1, r8, ror #8
   13a04:	muleq	r1, r0, r4
   13a08:			; <UNDEFINED> instruction: 0x000154bc
   13a0c:	andeq	r5, r1, r4, lsl #6
   13a10:	andeq	r5, r1, r0, lsr #10
   13a14:	push	{r4, r5, lr}
   13a18:	sub	sp, sp, #12
   13a1c:	ldr	r5, [sp, #24]
   13a20:	ldr	ip, [r5]
   13a24:	cmp	ip, #0
   13a28:	beq	13a44 <abort@plt+0x2c5c>
   13a2c:	mov	lr, r5
   13a30:	mov	ip, #0
   13a34:	ldr	r4, [lr, #4]!
   13a38:	add	ip, ip, #1
   13a3c:	cmp	r4, #0
   13a40:	bne	13a34 <abort@plt+0x2c4c>
   13a44:	stm	sp, {r5, ip}
   13a48:	bl	1367c <abort@plt+0x2894>
   13a4c:	add	sp, sp, #12
   13a50:	pop	{r4, r5, pc}
   13a54:	push	{r4, r5, lr}
   13a58:	sub	sp, sp, #52	; 0x34
   13a5c:	add	r5, sp, #4
   13a60:	ldr	r4, [sp, #64]	; 0x40
   13a64:	mov	ip, #0
   13a68:	sub	r4, r4, #4
   13a6c:	ldr	lr, [r4, #4]!
   13a70:	cmp	lr, #0
   13a74:	str	lr, [r5, #4]!
   13a78:	beq	13a88 <abort@plt+0x2ca0>
   13a7c:	add	ip, ip, #1
   13a80:	cmp	ip, #10
   13a84:	bne	13a6c <abort@plt+0x2c84>
   13a88:	add	lr, sp, #8
   13a8c:	str	ip, [sp, #4]
   13a90:	str	lr, [sp]
   13a94:	bl	1367c <abort@plt+0x2894>
   13a98:	add	sp, sp, #52	; 0x34
   13a9c:	pop	{r4, r5, pc}
   13aa0:	push	{r3}		; (str r3, [sp, #-4]!)
   13aa4:	push	{r4, lr}
   13aa8:	sub	sp, sp, #60	; 0x3c
   13aac:	add	lr, sp, #56	; 0x38
   13ab0:	add	r3, sp, #72	; 0x48
   13ab4:	str	r3, [lr, #-44]!	; 0xffffffd4
   13ab8:	add	r4, sp, #68	; 0x44
   13abc:	mov	r3, #0
   13ac0:	ldr	ip, [r4, #4]!
   13ac4:	cmp	ip, #0
   13ac8:	str	ip, [lr, #4]!
   13acc:	beq	13adc <abort@plt+0x2cf4>
   13ad0:	add	r3, r3, #1
   13ad4:	cmp	r3, #10
   13ad8:	bne	13ac0 <abort@plt+0x2cd8>
   13adc:	add	ip, sp, #16
   13ae0:	str	r3, [sp, #4]
   13ae4:	str	ip, [sp]
   13ae8:	ldr	r3, [sp, #68]	; 0x44
   13aec:	bl	1367c <abort@plt+0x2894>
   13af0:	add	sp, sp, #60	; 0x3c
   13af4:	pop	{r4, lr}
   13af8:	add	sp, sp, #4
   13afc:	bx	lr
   13b00:	ldr	r3, [pc, #116]	; 13b7c <abort@plt+0x2d94>
   13b04:	push	{r4, lr}
   13b08:	mov	r0, #10
   13b0c:	ldr	r1, [r3]
   13b10:	bl	10c44 <fputc_unlocked@plt>
   13b14:	mov	r2, #5
   13b18:	ldr	r1, [pc, #96]	; 13b80 <abort@plt+0x2d98>
   13b1c:	mov	r0, #0
   13b20:	bl	10c50 <dcgettext@plt>
   13b24:	ldr	r2, [pc, #88]	; 13b84 <abort@plt+0x2d9c>
   13b28:	mov	r1, r0
   13b2c:	mov	r0, #1
   13b30:	bl	10d4c <__printf_chk@plt>
   13b34:	mov	r2, #5
   13b38:	ldr	r1, [pc, #72]	; 13b88 <abort@plt+0x2da0>
   13b3c:	mov	r0, #0
   13b40:	bl	10c50 <dcgettext@plt>
   13b44:	ldr	r3, [pc, #64]	; 13b8c <abort@plt+0x2da4>
   13b48:	ldr	r2, [pc, #64]	; 13b90 <abort@plt+0x2da8>
   13b4c:	mov	r1, r0
   13b50:	mov	r0, #1
   13b54:	bl	10d4c <__printf_chk@plt>
   13b58:	mov	r2, #5
   13b5c:	ldr	r1, [pc, #48]	; 13b94 <abort@plt+0x2dac>
   13b60:	mov	r0, #0
   13b64:	bl	10c50 <dcgettext@plt>
   13b68:	ldr	r2, [pc, #40]	; 13b98 <abort@plt+0x2db0>
   13b6c:	pop	{r4, lr}
   13b70:	mov	r1, r0
   13b74:	mov	r0, #1
   13b78:	b	10d4c <__printf_chk@plt>
   13b7c:	andeq	r6, r2, r4, lsr r1
   13b80:	andeq	r5, r1, ip, asr r5
   13b84:	andeq	r5, r1, r0, ror r5
   13b88:	andeq	r5, r1, r8, lsl #11
   13b8c:			; <UNDEFINED> instruction: 0x00014fb8
   13b90:	andeq	r4, r1, r0, ror #31
   13b94:	muleq	r1, ip, r5
   13b98:	andeq	r5, r1, r4, asr #11
   13b9c:	push	{r4, lr}
   13ba0:	bl	142b8 <abort@plt+0x34d0>
   13ba4:	cmp	r0, #0
   13ba8:	popne	{r4, pc}
   13bac:	bl	140e4 <abort@plt+0x32fc>
   13bb0:	push	{r4, lr}
   13bb4:	bl	142b8 <abort@plt+0x34d0>
   13bb8:	cmp	r0, #0
   13bbc:	popne	{r4, pc}
   13bc0:	bl	140e4 <abort@plt+0x32fc>
   13bc4:	push	{r4, lr}
   13bc8:	bl	142b8 <abort@plt+0x34d0>
   13bcc:	cmp	r0, #0
   13bd0:	popne	{r4, pc}
   13bd4:	bl	140e4 <abort@plt+0x32fc>
   13bd8:	push	{r4, r5, r6, lr}
   13bdc:	mov	r5, r0
   13be0:	mov	r4, r1
   13be4:	bl	142e4 <abort@plt+0x34fc>
   13be8:	cmp	r0, #0
   13bec:	popne	{r4, r5, r6, pc}
   13bf0:	adds	r4, r4, #0
   13bf4:	movne	r4, #1
   13bf8:	cmp	r5, #0
   13bfc:	orreq	r4, r4, #1
   13c00:	cmp	r4, #0
   13c04:	popeq	{r4, r5, r6, pc}
   13c08:	bl	140e4 <abort@plt+0x32fc>
   13c0c:	push	{r4, lr}
   13c10:	cmp	r1, #0
   13c14:	orreq	r1, r1, #1
   13c18:	bl	142e4 <abort@plt+0x34fc>
   13c1c:	cmp	r0, #0
   13c20:	popne	{r4, pc}
   13c24:	bl	140e4 <abort@plt+0x32fc>
   13c28:	push	{r4, r5, r6, lr}
   13c2c:	mov	r6, r0
   13c30:	mov	r5, r1
   13c34:	mov	r4, r2
   13c38:	bl	14784 <abort@plt+0x399c>
   13c3c:	cmp	r0, #0
   13c40:	popne	{r4, r5, r6, pc}
   13c44:	cmp	r6, #0
   13c48:	beq	13c58 <abort@plt+0x2e70>
   13c4c:	cmp	r5, #0
   13c50:	cmpne	r4, #0
   13c54:	popeq	{r4, r5, r6, pc}
   13c58:	bl	140e4 <abort@plt+0x32fc>
   13c5c:	b	13c28 <abort@plt+0x2e40>
   13c60:	cmp	r2, #0
   13c64:	cmpne	r1, #0
   13c68:	moveq	r2, #1
   13c6c:	moveq	r1, r2
   13c70:	push	{r4, lr}
   13c74:	bl	14784 <abort@plt+0x399c>
   13c78:	cmp	r0, #0
   13c7c:	popne	{r4, pc}
   13c80:	bl	140e4 <abort@plt+0x32fc>
   13c84:	mov	r2, r1
   13c88:	mov	r1, r0
   13c8c:	mov	r0, #0
   13c90:	b	13c28 <abort@plt+0x2e40>
   13c94:	mov	r2, r1
   13c98:	mov	r1, r0
   13c9c:	mov	r0, #0
   13ca0:	b	13c60 <abort@plt+0x2e78>
   13ca4:	push	{r4, r5, r6, lr}
   13ca8:	subs	r6, r0, #0
   13cac:	sub	sp, sp, #8
   13cb0:	mov	r5, r1
   13cb4:	ldr	r4, [r1]
   13cb8:	beq	13cf4 <abort@plt+0x2f0c>
   13cbc:	lsr	r1, r4, #1
   13cc0:	add	r3, r1, #1
   13cc4:	mvn	r3, r3
   13cc8:	cmp	r4, r3
   13ccc:	bhi	13cf0 <abort@plt+0x2f08>
   13cd0:	add	r4, r4, #1
   13cd4:	add	r4, r4, r1
   13cd8:	mov	r0, r6
   13cdc:	mov	r1, r4
   13ce0:	bl	13c28 <abort@plt+0x2e40>
   13ce4:	str	r4, [r5]
   13ce8:	add	sp, sp, #8
   13cec:	pop	{r4, r5, r6, pc}
   13cf0:	bl	140e4 <abort@plt+0x32fc>
   13cf4:	cmp	r4, #0
   13cf8:	bne	13cd8 <abort@plt+0x2ef0>
   13cfc:	mov	r1, r2
   13d00:	mov	r0, #64	; 0x40
   13d04:	str	r2, [sp, #4]
   13d08:	bl	148c4 <abort@plt+0x3adc>
   13d0c:	ldr	r2, [sp, #4]
   13d10:	cmp	r0, #0
   13d14:	movne	r4, r0
   13d18:	addeq	r4, r0, #1
   13d1c:	b	13cd8 <abort@plt+0x2ef0>
   13d20:	mov	r2, #1
   13d24:	b	13ca4 <abort@plt+0x2ebc>
   13d28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d2c:	sub	sp, sp, #12
   13d30:	ldr	r6, [r1]
   13d34:	mov	sl, r1
   13d38:	mov	r9, r0
   13d3c:	asrs	r4, r6, #1
   13d40:	mov	r5, r2
   13d44:	mov	fp, r3
   13d48:	ldr	r7, [sp, #48]	; 0x30
   13d4c:	bmi	13eb8 <abort@plt+0x30d0>
   13d50:	mvn	r3, #-2147483648	; 0x80000000
   13d54:	sub	r3, r3, r4
   13d58:	cmp	r6, r3
   13d5c:	movle	r3, #0
   13d60:	movgt	r3, #1
   13d64:	mvn	r8, fp
   13d68:	cmp	r3, #0
   13d6c:	addeq	r4, r4, r6
   13d70:	mvnne	r4, #-2147483648	; 0x80000000
   13d74:	lsr	r8, r8, #31
   13d78:	cmp	fp, r4
   13d7c:	movge	r3, #0
   13d80:	andlt	r3, r8, #1
   13d84:	cmp	r3, #0
   13d88:	beq	13e70 <abort@plt+0x3088>
   13d8c:	cmp	r7, #0
   13d90:	blt	13f40 <abort@plt+0x3158>
   13d94:	bne	13f38 <abort@plt+0x3150>
   13d98:	mov	r2, #64	; 0x40
   13d9c:	mov	r1, r7
   13da0:	mov	r0, r2
   13da4:	str	r2, [sp, #4]
   13da8:	bl	14ad0 <abort@plt+0x3ce8>
   13dac:	ldr	r2, [sp, #4]
   13db0:	mov	r1, r7
   13db4:	mov	r4, r0
   13db8:	mov	r0, r2
   13dbc:	bl	14cf0 <abort@plt+0x3f08>
   13dc0:	ldr	r2, [sp, #4]
   13dc4:	sub	r1, r2, r1
   13dc8:	cmp	r9, #0
   13dcc:	sub	r3, r4, r6
   13dd0:	streq	r9, [sl]
   13dd4:	cmp	r3, r5
   13dd8:	bge	13e5c <abort@plt+0x3074>
   13ddc:	cmp	r5, #0
   13de0:	blt	13ecc <abort@plt+0x30e4>
   13de4:	cmp	r6, #0
   13de8:	blt	13e08 <abort@plt+0x3020>
   13dec:	mvn	r3, #-2147483648	; 0x80000000
   13df0:	sub	r3, r3, r5
   13df4:	cmp	r6, r3
   13df8:	movle	r3, #0
   13dfc:	movgt	r3, #1
   13e00:	cmp	r3, #0
   13e04:	bne	13fc8 <abort@plt+0x31e0>
   13e08:	add	r5, r6, r5
   13e0c:	cmp	fp, r5
   13e10:	movge	r8, #0
   13e14:	andlt	r8, r8, #1
   13e18:	cmp	r8, #0
   13e1c:	mov	r4, r5
   13e20:	bne	13fc8 <abort@plt+0x31e0>
   13e24:	cmp	r7, #0
   13e28:	blt	13ee0 <abort@plt+0x30f8>
   13e2c:	beq	13e58 <abort@plt+0x3070>
   13e30:	cmp	r5, #0
   13e34:	blt	13f88 <abort@plt+0x31a0>
   13e38:	mov	r1, r7
   13e3c:	mvn	r0, #-2147483648	; 0x80000000
   13e40:	bl	14ad0 <abort@plt+0x3ce8>
   13e44:	cmp	r5, r0
   13e48:	movle	r0, #0
   13e4c:	movgt	r0, #1
   13e50:	cmp	r0, #0
   13e54:	bne	13fc8 <abort@plt+0x31e0>
   13e58:	mul	r1, r5, r7
   13e5c:	mov	r0, r9
   13e60:	bl	13bd8 <abort@plt+0x2df0>
   13e64:	str	r4, [sl]
   13e68:	add	sp, sp, #12
   13e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e70:	cmp	r7, #0
   13e74:	blt	13f0c <abort@plt+0x3124>
   13e78:	beq	13d98 <abort@plt+0x2fb0>
   13e7c:	cmp	r4, #0
   13e80:	blt	13f48 <abort@plt+0x3160>
   13e84:	mov	r1, r7
   13e88:	mvn	r0, #-2147483648	; 0x80000000
   13e8c:	bl	14ad0 <abort@plt+0x3ce8>
   13e90:	cmp	r0, r4
   13e94:	movge	r0, #0
   13e98:	movlt	r0, #1
   13e9c:	cmp	r0, #0
   13ea0:	mvnne	r2, #-2147483648	; 0x80000000
   13ea4:	bne	13d9c <abort@plt+0x2fb4>
   13ea8:	mul	r1, r7, r4
   13eac:	cmp	r1, #63	; 0x3f
   13eb0:	bgt	13dc8 <abort@plt+0x2fe0>
   13eb4:	b	13d98 <abort@plt+0x2fb0>
   13eb8:	rsb	r3, r4, #-2147483648	; 0x80000000
   13ebc:	cmp	r6, r3
   13ec0:	movge	r3, #0
   13ec4:	movlt	r3, #1
   13ec8:	b	13d64 <abort@plt+0x2f7c>
   13ecc:	rsb	r3, r5, #-2147483648	; 0x80000000
   13ed0:	cmp	r6, r3
   13ed4:	movge	r3, #0
   13ed8:	movlt	r3, #1
   13edc:	b	13e00 <abort@plt+0x3018>
   13ee0:	cmp	r5, #0
   13ee4:	blt	13f6c <abort@plt+0x3184>
   13ee8:	cmn	r7, #1
   13eec:	beq	13e58 <abort@plt+0x3070>
   13ef0:	mov	r1, r7
   13ef4:	mov	r0, #-2147483648	; 0x80000000
   13ef8:	bl	14ad0 <abort@plt+0x3ce8>
   13efc:	cmp	r5, r0
   13f00:	movle	r0, #0
   13f04:	movgt	r0, #1
   13f08:	b	13e50 <abort@plt+0x3068>
   13f0c:	cmp	r4, #0
   13f10:	blt	13fac <abort@plt+0x31c4>
   13f14:	cmn	r7, #1
   13f18:	beq	13ea8 <abort@plt+0x30c0>
   13f1c:	mov	r1, r7
   13f20:	mov	r0, #-2147483648	; 0x80000000
   13f24:	bl	14ad0 <abort@plt+0x3ce8>
   13f28:	cmp	r0, r4
   13f2c:	movge	r0, #0
   13f30:	movlt	r0, #1
   13f34:	b	13e9c <abort@plt+0x30b4>
   13f38:	mov	r4, fp
   13f3c:	b	13e84 <abort@plt+0x309c>
   13f40:	mov	r4, fp
   13f44:	b	13f14 <abort@plt+0x312c>
   13f48:	cmn	r4, #1
   13f4c:	beq	13ea8 <abort@plt+0x30c0>
   13f50:	mov	r1, r4
   13f54:	mov	r0, #-2147483648	; 0x80000000
   13f58:	bl	14ad0 <abort@plt+0x3ce8>
   13f5c:	cmp	r7, r0
   13f60:	movle	r0, #0
   13f64:	movgt	r0, #1
   13f68:	b	13e9c <abort@plt+0x30b4>
   13f6c:	mov	r1, r7
   13f70:	mvn	r0, #-2147483648	; 0x80000000
   13f74:	bl	14ad0 <abort@plt+0x3ce8>
   13f78:	cmp	r5, r0
   13f7c:	movge	r0, #0
   13f80:	movlt	r0, #1
   13f84:	b	13e50 <abort@plt+0x3068>
   13f88:	cmn	r5, #1
   13f8c:	beq	13e58 <abort@plt+0x3070>
   13f90:	mov	r1, r5
   13f94:	mov	r0, #-2147483648	; 0x80000000
   13f98:	bl	14ad0 <abort@plt+0x3ce8>
   13f9c:	cmp	r7, r0
   13fa0:	movle	r0, #0
   13fa4:	movgt	r0, #1
   13fa8:	b	13e50 <abort@plt+0x3068>
   13fac:	mov	r1, r7
   13fb0:	mvn	r0, #-2147483648	; 0x80000000
   13fb4:	bl	14ad0 <abort@plt+0x3ce8>
   13fb8:	cmp	r0, r4
   13fbc:	movle	r0, #0
   13fc0:	movgt	r0, #1
   13fc4:	b	13e9c <abort@plt+0x30b4>
   13fc8:	bl	140e4 <abort@plt+0x32fc>
   13fcc:	push	{r4, lr}
   13fd0:	mov	r1, #1
   13fd4:	bl	14270 <abort@plt+0x3488>
   13fd8:	cmp	r0, #0
   13fdc:	popne	{r4, pc}
   13fe0:	bl	140e4 <abort@plt+0x32fc>
   13fe4:	push	{r4, lr}
   13fe8:	mov	r1, #1
   13fec:	bl	14270 <abort@plt+0x3488>
   13ff0:	cmp	r0, #0
   13ff4:	popne	{r4, pc}
   13ff8:	bl	140e4 <abort@plt+0x32fc>
   13ffc:	push	{r4, lr}
   14000:	bl	14270 <abort@plt+0x3488>
   14004:	cmp	r0, #0
   14008:	popne	{r4, pc}
   1400c:	bl	140e4 <abort@plt+0x32fc>
   14010:	push	{r4, lr}
   14014:	bl	14270 <abort@plt+0x3488>
   14018:	cmp	r0, #0
   1401c:	popne	{r4, pc}
   14020:	bl	140e4 <abort@plt+0x32fc>
   14024:	push	{r4, r5, r6, lr}
   14028:	mov	r6, r0
   1402c:	mov	r0, r1
   14030:	mov	r4, r1
   14034:	bl	142b8 <abort@plt+0x34d0>
   14038:	subs	r5, r0, #0
   1403c:	beq	14054 <abort@plt+0x326c>
   14040:	mov	r2, r4
   14044:	mov	r1, r6
   14048:	bl	10c20 <memcpy@plt>
   1404c:	mov	r0, r5
   14050:	pop	{r4, r5, r6, pc}
   14054:	bl	140e4 <abort@plt+0x32fc>
   14058:	push	{r4, r5, r6, lr}
   1405c:	mov	r6, r0
   14060:	mov	r0, r1
   14064:	mov	r4, r1
   14068:	bl	142b8 <abort@plt+0x34d0>
   1406c:	subs	r5, r0, #0
   14070:	beq	14088 <abort@plt+0x32a0>
   14074:	mov	r2, r4
   14078:	mov	r1, r6
   1407c:	bl	10c20 <memcpy@plt>
   14080:	mov	r0, r5
   14084:	pop	{r4, r5, r6, pc}
   14088:	bl	140e4 <abort@plt+0x32fc>
   1408c:	push	{r4, r5, r6, lr}
   14090:	mov	r6, r0
   14094:	add	r0, r1, #1
   14098:	mov	r4, r1
   1409c:	bl	142b8 <abort@plt+0x34d0>
   140a0:	subs	r5, r0, #0
   140a4:	beq	140c4 <abort@plt+0x32dc>
   140a8:	mov	r3, #0
   140ac:	mov	r1, r6
   140b0:	strb	r3, [r5, r4]
   140b4:	mov	r2, r4
   140b8:	bl	10c20 <memcpy@plt>
   140bc:	mov	r0, r5
   140c0:	pop	{r4, r5, r6, pc}
   140c4:	bl	140e4 <abort@plt+0x32fc>
   140c8:	push	{r4, lr}
   140cc:	mov	r4, r0
   140d0:	bl	10d1c <strlen@plt>
   140d4:	add	r1, r0, #1
   140d8:	mov	r0, r4
   140dc:	pop	{r4, lr}
   140e0:	b	14024 <abort@plt+0x323c>
   140e4:	ldr	r3, [pc, #44]	; 14118 <abort@plt+0x3330>
   140e8:	push	{r4, lr}
   140ec:	mov	r2, #5
   140f0:	ldr	r1, [pc, #36]	; 1411c <abort@plt+0x3334>
   140f4:	mov	r0, #0
   140f8:	ldr	r4, [r3]
   140fc:	bl	10c50 <dcgettext@plt>
   14100:	ldr	r2, [pc, #24]	; 14120 <abort@plt+0x3338>
   14104:	mov	r1, #0
   14108:	mov	r3, r0
   1410c:	mov	r0, r4
   14110:	bl	10cbc <error@plt>
   14114:	bl	10de8 <abort@plt>
   14118:	ldrdeq	r6, [r2], -ip
   1411c:	andeq	r5, r1, r4, lsl r6
   14120:	muleq	r1, r4, r1
   14124:	andeq	r0, r0, r0
   14128:	vldr	d7, [pc, #144]	; 141c0 <abort@plt+0x33d8>
   1412c:	push	{r4, r5, lr}
   14130:	vpush	{d8}
   14134:	vmov.f64	d8, d0
   14138:	vcmpe.f64	d0, d7
   1413c:	sub	sp, sp, #12
   14140:	vmrs	APSR_nzcv, fpscr
   14144:	bge	14194 <abort@plt+0x33ac>
   14148:	bl	10d28 <__errno_location@plt>
   1414c:	mov	r4, r0
   14150:	vmov.f64	d0, d8
   14154:	mov	r0, sp
   14158:	bl	14438 <abort@plt+0x3650>
   1415c:	mov	r5, #0
   14160:	b	14170 <abort@plt+0x3388>
   14164:	ldr	r3, [r4]
   14168:	bics	r3, r3, #4
   1416c:	bne	141b0 <abort@plt+0x33c8>
   14170:	str	r5, [r4]
   14174:	mov	r1, sp
   14178:	mov	r0, sp
   1417c:	bl	10c08 <nanosleep@plt>
   14180:	cmp	r0, #0
   14184:	bne	14164 <abort@plt+0x337c>
   14188:	add	sp, sp, #12
   1418c:	vpop	{d8}
   14190:	pop	{r4, r5, pc}
   14194:	bl	10d28 <__errno_location@plt>
   14198:	mov	r4, r0
   1419c:	bl	10be4 <pause@plt>
   141a0:	ldr	r3, [r4]
   141a4:	cmp	r3, #4
   141a8:	beq	1419c <abort@plt+0x33b4>
   141ac:	b	14150 <abort@plt+0x3368>
   141b0:	mvn	r0, #0
   141b4:	add	sp, sp, #12
   141b8:	vpop	{d8}
   141bc:	pop	{r4, r5, pc}
   141c0:	andeq	r0, r0, r0
   141c4:	mvnmi	r0, r0
   141c8:	push	{r4, r5, r6, r7, r8, r9, lr}
   141cc:	sub	sp, sp, #12
   141d0:	mov	r6, r0
   141d4:	mov	r9, r3
   141d8:	mov	r5, r1
   141dc:	mov	r8, r2
   141e0:	bl	10d28 <__errno_location@plt>
   141e4:	mov	r4, #0
   141e8:	add	r1, sp, #4
   141ec:	str	r4, [r0]
   141f0:	mov	r7, r0
   141f4:	mov	r0, r6
   141f8:	blx	r9
   141fc:	ldr	r3, [sp, #4]
   14200:	cmp	r6, r3
   14204:	beq	14244 <abort@plt+0x345c>
   14208:	cmp	r5, r4
   1420c:	beq	1424c <abort@plt+0x3464>
   14210:	vcmp.f64	d0, #0.0
   14214:	vmrs	APSR_nzcv, fpscr
   14218:	moveq	r0, #1
   1421c:	beq	14234 <abort@plt+0x344c>
   14220:	ldr	r0, [r7]
   14224:	subs	r0, r0, #34	; 0x22
   14228:	movne	r0, #1
   1422c:	cmp	r5, #0
   14230:	beq	14238 <abort@plt+0x3450>
   14234:	str	r3, [r5]
   14238:	vstr	d0, [r8]
   1423c:	add	sp, sp, #12
   14240:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14244:	mov	r0, r4
   14248:	b	1422c <abort@plt+0x3444>
   1424c:	ldrb	r2, [r3]
   14250:	cmp	r2, r4
   14254:	movne	r0, r5
   14258:	bne	14238 <abort@plt+0x3450>
   1425c:	vcmp.f64	d0, #0.0
   14260:	vmrs	APSR_nzcv, fpscr
   14264:	bne	14220 <abort@plt+0x3438>
   14268:	mov	r0, #1
   1426c:	b	14238 <abort@plt+0x3450>
   14270:	cmp	r1, #0
   14274:	cmpne	r0, #0
   14278:	moveq	r1, #1
   1427c:	moveq	r0, r1
   14280:	umull	r2, r3, r0, r1
   14284:	adds	r3, r3, #0
   14288:	movne	r3, #1
   1428c:	cmp	r2, #0
   14290:	blt	142a0 <abort@plt+0x34b8>
   14294:	cmp	r3, #0
   14298:	bne	142a0 <abort@plt+0x34b8>
   1429c:	b	10bb4 <calloc@plt>
   142a0:	push	{r4, lr}
   142a4:	bl	10d28 <__errno_location@plt>
   142a8:	mov	r3, #12
   142ac:	str	r3, [r0]
   142b0:	mov	r0, #0
   142b4:	pop	{r4, pc}
   142b8:	cmp	r0, #0
   142bc:	moveq	r0, #1
   142c0:	cmp	r0, #0
   142c4:	blt	142cc <abort@plt+0x34e4>
   142c8:	b	10cc8 <malloc@plt>
   142cc:	push	{r4, lr}
   142d0:	bl	10d28 <__errno_location@plt>
   142d4:	mov	r3, #12
   142d8:	str	r3, [r0]
   142dc:	mov	r0, #0
   142e0:	pop	{r4, pc}
   142e4:	cmp	r0, #0
   142e8:	beq	1430c <abort@plt+0x3524>
   142ec:	cmp	r1, #0
   142f0:	push	{lr}		; (str lr, [sp, #-4]!)
   142f4:	sub	sp, sp, #12
   142f8:	beq	14314 <abort@plt+0x352c>
   142fc:	blt	1432c <abort@plt+0x3544>
   14300:	add	sp, sp, #12
   14304:	pop	{lr}		; (ldr lr, [sp], #4)
   14308:	b	10c5c <realloc@plt>
   1430c:	mov	r0, r1
   14310:	b	142b8 <abort@plt+0x34d0>
   14314:	str	r1, [sp, #4]
   14318:	bl	14604 <abort@plt+0x381c>
   1431c:	ldr	r3, [sp, #4]
   14320:	mov	r0, r3
   14324:	add	sp, sp, #12
   14328:	pop	{pc}		; (ldr pc, [sp], #4)
   1432c:	bl	10d28 <__errno_location@plt>
   14330:	mov	r2, #12
   14334:	mov	r3, #0
   14338:	str	r2, [r0]
   1433c:	b	14320 <abort@plt+0x3538>
   14340:	push	{r4, r5, r6, lr}
   14344:	mov	r6, r0
   14348:	ldr	r4, [pc, #96]	; 143b0 <abort@plt+0x35c8>
   1434c:	mov	r5, r1
   14350:	ldr	r2, [r4]
   14354:	cmp	r2, #0
   14358:	beq	1438c <abort@plt+0x35a4>
   1435c:	ldr	r2, [r4]
   14360:	cmp	r2, #0
   14364:	beq	14378 <abort@plt+0x3590>
   14368:	mov	r1, r5
   1436c:	mov	r0, r6
   14370:	pop	{r4, r5, r6, lr}
   14374:	b	10d94 <strtod_l@plt>
   14378:	cmp	r5, #0
   1437c:	beq	143a0 <abort@plt+0x35b8>
   14380:	str	r6, [r5]
   14384:	vldr	d0, [pc, #28]	; 143a8 <abort@plt+0x35c0>
   14388:	pop	{r4, r5, r6, pc}
   1438c:	ldr	r1, [pc, #32]	; 143b4 <abort@plt+0x35cc>
   14390:	ldr	r0, [pc, #32]	; 143b8 <abort@plt+0x35d0>
   14394:	bl	10dc4 <newlocale@plt>
   14398:	str	r0, [r4]
   1439c:	b	1435c <abort@plt+0x3574>
   143a0:	vldr	d0, [pc]	; 143a8 <abort@plt+0x35c0>
   143a4:	pop	{r4, r5, r6, pc}
	...
   143b0:	andeq	r6, r2, ip, ror r2
   143b4:	andeq	r5, r1, r8, lsr #12
   143b8:			; <UNDEFINED> instruction: 0x00001fbf
   143bc:	push	{r4, r5, r6, lr}
   143c0:	mov	r4, r0
   143c4:	bl	10ca4 <__fpending@plt>
   143c8:	ldr	r5, [r4]
   143cc:	and	r5, r5, #32
   143d0:	mov	r6, r0
   143d4:	mov	r0, r4
   143d8:	bl	14504 <abort@plt+0x371c>
   143dc:	cmp	r5, #0
   143e0:	mov	r4, r0
   143e4:	bne	14404 <abort@plt+0x361c>
   143e8:	cmp	r0, #0
   143ec:	beq	143fc <abort@plt+0x3614>
   143f0:	cmp	r6, #0
   143f4:	beq	14420 <abort@plt+0x3638>
   143f8:	mvn	r4, #0
   143fc:	mov	r0, r4
   14400:	pop	{r4, r5, r6, pc}
   14404:	cmp	r0, #0
   14408:	bne	143f8 <abort@plt+0x3610>
   1440c:	bl	10d28 <__errno_location@plt>
   14410:	str	r4, [r0]
   14414:	mvn	r4, #0
   14418:	mov	r0, r4
   1441c:	pop	{r4, r5, r6, pc}
   14420:	bl	10d28 <__errno_location@plt>
   14424:	ldr	r4, [r0]
   14428:	subs	r4, r4, #9
   1442c:	mvnne	r4, #0
   14430:	mov	r0, r4
   14434:	pop	{r4, r5, r6, pc}
   14438:	vldr	d7, [pc, #160]	; 144e0 <abort@plt+0x36f8>
   1443c:	vcmpe.f64	d0, d7
   14440:	vmrs	APSR_nzcv, fpscr
   14444:	ble	144d0 <abort@plt+0x36e8>
   14448:	vldr	d7, [pc, #152]	; 144e8 <abort@plt+0x3700>
   1444c:	vcmpe.f64	d0, d7
   14450:	vmrs	APSR_nzcv, fpscr
   14454:	bpl	144c0 <abort@plt+0x36d8>
   14458:	vcvt.s32.f64	s14, d0
   1445c:	vldr	d6, [pc, #140]	; 144f0 <abort@plt+0x3708>
   14460:	ldr	r2, [pc, #144]	; 144f8 <abort@plt+0x3710>
   14464:	ldr	ip, [pc, #144]	; 144fc <abort@plt+0x3714>
   14468:	vcvt.f64.s32	d5, s14
   1446c:	vsub.f64	d0, d0, d5
   14470:	vmul.f64	d0, d0, d6
   14474:	vcvt.s32.f64	s15, d0
   14478:	vcvt.f64.s32	d6, s15
   1447c:	vmov	r1, s15
   14480:	vcmpe.f64	d0, d6
   14484:	vmrs	APSR_nzcv, fpscr
   14488:	movgt	r3, #1
   1448c:	movle	r3, #0
   14490:	add	r3, r1, r3
   14494:	smull	r2, r1, r2, r3
   14498:	asr	r2, r3, #31
   1449c:	rsb	r2, r2, r1, asr #28
   144a0:	vmov	r1, s14
   144a4:	add	r1, r2, r1
   144a8:	mul	r2, ip, r2
   144ac:	subs	r3, r3, r2
   144b0:	submi	r1, r1, #1
   144b4:	addmi	r3, r3, ip
   144b8:	stm	r0, {r1, r3}
   144bc:	bx	lr
   144c0:	ldr	r3, [pc, #56]	; 14500 <abort@plt+0x3718>
   144c4:	mvn	r2, #-2147483648	; 0x80000000
   144c8:	stm	r0, {r2, r3}
   144cc:	bx	lr
   144d0:	mov	r2, #-2147483648	; 0x80000000
   144d4:	mov	r3, #0
   144d8:	stm	r0, {r2, r3}
   144dc:	bx	lr
   144e0:	andeq	r0, r0, r0
   144e4:	mvngt	r0, r0
   144e8:	andeq	r0, r0, r0
   144ec:	mvnmi	r0, r0
   144f0:	andeq	r0, r0, r0
   144f4:	bicmi	ip, sp, r5, ror #26
   144f8:	ldrtmi	r2, [r8], #4001	; 0xfa1
   144fc:	blcc	fe6c6d04 <opterr@@GLIBC_2.4+0xfe6a0bcc>
   14500:	blcc	fe6c6d04 <opterr@@GLIBC_2.4+0xfe6a0bcc>
   14504:	push	{r4, r5, lr}
   14508:	sub	sp, sp, #12
   1450c:	mov	r4, r0
   14510:	bl	10d64 <fileno@plt>
   14514:	cmp	r0, #0
   14518:	mov	r0, r4
   1451c:	blt	14598 <abort@plt+0x37b0>
   14520:	bl	10ce0 <__freading@plt>
   14524:	cmp	r0, #0
   14528:	bne	14564 <abort@plt+0x377c>
   1452c:	mov	r0, r4
   14530:	bl	145a4 <abort@plt+0x37bc>
   14534:	cmp	r0, #0
   14538:	beq	14594 <abort@plt+0x37ac>
   1453c:	bl	10d28 <__errno_location@plt>
   14540:	mov	r5, r0
   14544:	mov	r0, r4
   14548:	ldr	r4, [r5]
   1454c:	bl	10d7c <fclose@plt>
   14550:	cmp	r4, #0
   14554:	mvnne	r0, #0
   14558:	strne	r4, [r5]
   1455c:	add	sp, sp, #12
   14560:	pop	{r4, r5, pc}
   14564:	mov	r0, r4
   14568:	bl	10d64 <fileno@plt>
   1456c:	mov	r3, #1
   14570:	str	r3, [sp]
   14574:	mov	r2, #0
   14578:	mov	r3, #0
   1457c:	bl	10c8c <lseek64@plt>
   14580:	mvn	r3, #0
   14584:	mvn	r2, #0
   14588:	cmp	r1, r3
   1458c:	cmpeq	r0, r2
   14590:	bne	1452c <abort@plt+0x3744>
   14594:	mov	r0, r4
   14598:	add	sp, sp, #12
   1459c:	pop	{r4, r5, lr}
   145a0:	b	10d7c <fclose@plt>
   145a4:	push	{r4, lr}
   145a8:	subs	r4, r0, #0
   145ac:	sub	sp, sp, #8
   145b0:	beq	145cc <abort@plt+0x37e4>
   145b4:	bl	10ce0 <__freading@plt>
   145b8:	cmp	r0, #0
   145bc:	beq	145cc <abort@plt+0x37e4>
   145c0:	ldr	r3, [r4]
   145c4:	tst	r3, #256	; 0x100
   145c8:	bne	145dc <abort@plt+0x37f4>
   145cc:	mov	r0, r4
   145d0:	add	sp, sp, #8
   145d4:	pop	{r4, lr}
   145d8:	b	10bf0 <fflush@plt>
   145dc:	mov	r3, #1
   145e0:	str	r3, [sp]
   145e4:	mov	r2, #0
   145e8:	mov	r3, #0
   145ec:	mov	r0, r4
   145f0:	bl	1465c <abort@plt+0x3874>
   145f4:	mov	r0, r4
   145f8:	add	sp, sp, #8
   145fc:	pop	{r4, lr}
   14600:	b	10bf0 <fflush@plt>
   14604:	push	{r4, r5, lr}
   14608:	sub	sp, sp, #12
   1460c:	mov	r5, r0
   14610:	bl	10d28 <__errno_location@plt>
   14614:	mov	r2, #0
   14618:	mov	r4, r0
   1461c:	ldr	r3, [r0]
   14620:	str	r2, [r4]
   14624:	mov	r0, r5
   14628:	str	r3, [sp]
   1462c:	str	r3, [sp, #4]
   14630:	bl	10bfc <free@plt>
   14634:	ldr	r3, [r4]
   14638:	add	r2, sp, #8
   1463c:	cmp	r3, #0
   14640:	moveq	r3, #4
   14644:	movne	r3, #0
   14648:	add	r3, r2, r3
   1464c:	ldr	r3, [r3, #-8]
   14650:	str	r3, [r4]
   14654:	add	sp, sp, #12
   14658:	pop	{r4, r5, pc}
   1465c:	push	{r4, r5, r6, r7, r8, lr}
   14660:	sub	sp, sp, #8
   14664:	ldmib	r0, {ip, lr}
   14668:	mov	r4, r0
   1466c:	ldr	r5, [sp, #32]
   14670:	cmp	lr, ip
   14674:	beq	1468c <abort@plt+0x38a4>
   14678:	str	r5, [sp, #32]
   1467c:	mov	r0, r4
   14680:	add	sp, sp, #8
   14684:	pop	{r4, r5, r6, r7, r8, lr}
   14688:	b	10d88 <fseeko64@plt>
   1468c:	ldr	lr, [r0, #20]
   14690:	ldr	ip, [r0, #16]
   14694:	cmp	lr, ip
   14698:	bne	14678 <abort@plt+0x3890>
   1469c:	ldr	r8, [r0, #36]	; 0x24
   146a0:	cmp	r8, #0
   146a4:	bne	14678 <abort@plt+0x3890>
   146a8:	mov	r6, r2
   146ac:	mov	r7, r3
   146b0:	bl	10d64 <fileno@plt>
   146b4:	mov	r2, r6
   146b8:	mov	r3, r7
   146bc:	str	r5, [sp]
   146c0:	bl	10c8c <lseek64@plt>
   146c4:	mvn	r3, #0
   146c8:	mvn	r2, #0
   146cc:	cmp	r1, r3
   146d0:	cmpeq	r0, r2
   146d4:	beq	146f4 <abort@plt+0x390c>
   146d8:	ldr	r3, [r4]
   146dc:	strd	r0, [r4, #80]	; 0x50
   146e0:	mov	r0, r8
   146e4:	bic	r3, r3, #16
   146e8:	str	r3, [r4]
   146ec:	add	sp, sp, #8
   146f0:	pop	{r4, r5, r6, r7, r8, pc}
   146f4:	mvn	r0, #0
   146f8:	b	146ec <abort@plt+0x3904>
   146fc:	push	{r4, lr}
   14700:	mov	r0, #14
   14704:	bl	10db8 <nl_langinfo@plt>
   14708:	cmp	r0, #0
   1470c:	beq	14724 <abort@plt+0x393c>
   14710:	ldrb	r2, [r0]
   14714:	ldr	r3, [pc, #16]	; 1472c <abort@plt+0x3944>
   14718:	cmp	r2, #0
   1471c:	moveq	r0, r3
   14720:	pop	{r4, pc}
   14724:	ldr	r0, [pc]	; 1472c <abort@plt+0x3944>
   14728:	pop	{r4, pc}
   1472c:	andeq	r5, r1, ip, lsr #12
   14730:	push	{r4, r5, r6, r7, lr}
   14734:	subs	r6, r0, #0
   14738:	sub	sp, sp, #12
   1473c:	addeq	r6, sp, #4
   14740:	mov	r0, r6
   14744:	mov	r5, r2
   14748:	mov	r7, r1
   1474c:	bl	10cb0 <mbrtowc@plt>
   14750:	cmp	r5, #0
   14754:	cmnne	r0, #3
   14758:	mov	r4, r0
   1475c:	bls	14778 <abort@plt+0x3990>
   14760:	mov	r0, #0
   14764:	bl	147d0 <abort@plt+0x39e8>
   14768:	cmp	r0, #0
   1476c:	moveq	r4, #1
   14770:	ldrbeq	r3, [r7]
   14774:	streq	r3, [r6]
   14778:	mov	r0, r4
   1477c:	add	sp, sp, #12
   14780:	pop	{r4, r5, r6, r7, pc}
   14784:	push	{r4, r5, r6, lr}
   14788:	subs	r4, r2, #0
   1478c:	mov	r6, r0
   14790:	mov	r5, r1
   14794:	beq	147c0 <abort@plt+0x39d8>
   14798:	mov	r1, r4
   1479c:	mvn	r0, #0
   147a0:	bl	148c4 <abort@plt+0x3adc>
   147a4:	cmp	r0, r5
   147a8:	bcs	147c0 <abort@plt+0x39d8>
   147ac:	bl	10d28 <__errno_location@plt>
   147b0:	mov	r3, #12
   147b4:	str	r3, [r0]
   147b8:	mov	r0, #0
   147bc:	pop	{r4, r5, r6, pc}
   147c0:	mul	r1, r5, r4
   147c4:	mov	r0, r6
   147c8:	pop	{r4, r5, r6, lr}
   147cc:	b	142e4 <abort@plt+0x34fc>
   147d0:	push	{lr}		; (str lr, [sp, #-4]!)
   147d4:	sub	sp, sp, #268	; 0x10c
   147d8:	add	r1, sp, #4
   147dc:	ldr	r2, [pc, #60]	; 14820 <abort@plt+0x3a38>
   147e0:	bl	1482c <abort@plt+0x3a44>
   147e4:	cmp	r0, #0
   147e8:	movne	r0, #0
   147ec:	bne	14818 <abort@plt+0x3a30>
   147f0:	ldr	r1, [pc, #44]	; 14824 <abort@plt+0x3a3c>
   147f4:	add	r0, sp, #4
   147f8:	bl	10bd8 <strcmp@plt>
   147fc:	cmp	r0, #0
   14800:	beq	14818 <abort@plt+0x3a30>
   14804:	add	r0, sp, #4
   14808:	ldr	r1, [pc, #24]	; 14828 <abort@plt+0x3a40>
   1480c:	bl	10bd8 <strcmp@plt>
   14810:	adds	r0, r0, #0
   14814:	movne	r0, #1
   14818:	add	sp, sp, #268	; 0x10c
   1481c:	pop	{pc}		; (ldr pc, [sp], #4)
   14820:	andeq	r0, r0, r1, lsl #2
   14824:	andeq	r5, r1, r8, lsr #12
   14828:	andeq	r5, r1, r4, lsr r6
   1482c:	push	{r4, r5, r6, lr}
   14830:	mov	r5, r1
   14834:	mov	r1, #0
   14838:	mov	r4, r2
   1483c:	bl	10da0 <setlocale@plt>
   14840:	subs	r6, r0, #0
   14844:	beq	148a0 <abort@plt+0x3ab8>
   14848:	bl	10d1c <strlen@plt>
   1484c:	cmp	r4, r0
   14850:	bhi	14888 <abort@plt+0x3aa0>
   14854:	cmp	r4, #0
   14858:	bne	14864 <abort@plt+0x3a7c>
   1485c:	mov	r0, #34	; 0x22
   14860:	pop	{r4, r5, r6, pc}
   14864:	sub	r4, r4, #1
   14868:	mov	r1, r6
   1486c:	mov	r2, r4
   14870:	mov	r0, r5
   14874:	bl	10c20 <memcpy@plt>
   14878:	mov	r3, #0
   1487c:	strb	r3, [r5, r4]
   14880:	mov	r0, #34	; 0x22
   14884:	pop	{r4, r5, r6, pc}
   14888:	add	r2, r0, #1
   1488c:	mov	r1, r6
   14890:	mov	r0, r5
   14894:	bl	10c20 <memcpy@plt>
   14898:	mov	r0, #0
   1489c:	pop	{r4, r5, r6, pc}
   148a0:	cmp	r4, #0
   148a4:	beq	148b4 <abort@plt+0x3acc>
   148a8:	strb	r6, [r5]
   148ac:	mov	r0, #22
   148b0:	pop	{r4, r5, r6, pc}
   148b4:	mov	r0, #22
   148b8:	pop	{r4, r5, r6, pc}
   148bc:	mov	r1, #0
   148c0:	b	10da0 <setlocale@plt>
   148c4:	subs	r2, r1, #1
   148c8:	bxeq	lr
   148cc:	bcc	14aa4 <abort@plt+0x3cbc>
   148d0:	cmp	r0, r1
   148d4:	bls	14a88 <abort@plt+0x3ca0>
   148d8:	tst	r1, r2
   148dc:	beq	14a94 <abort@plt+0x3cac>
   148e0:	clz	r3, r0
   148e4:	clz	r2, r1
   148e8:	sub	r3, r2, r3
   148ec:	rsbs	r3, r3, #31
   148f0:	addne	r3, r3, r3, lsl #1
   148f4:	mov	r2, #0
   148f8:	addne	pc, pc, r3, lsl #2
   148fc:	nop			; (mov r0, r0)
   14900:	cmp	r0, r1, lsl #31
   14904:	adc	r2, r2, r2
   14908:	subcs	r0, r0, r1, lsl #31
   1490c:	cmp	r0, r1, lsl #30
   14910:	adc	r2, r2, r2
   14914:	subcs	r0, r0, r1, lsl #30
   14918:	cmp	r0, r1, lsl #29
   1491c:	adc	r2, r2, r2
   14920:	subcs	r0, r0, r1, lsl #29
   14924:	cmp	r0, r1, lsl #28
   14928:	adc	r2, r2, r2
   1492c:	subcs	r0, r0, r1, lsl #28
   14930:	cmp	r0, r1, lsl #27
   14934:	adc	r2, r2, r2
   14938:	subcs	r0, r0, r1, lsl #27
   1493c:	cmp	r0, r1, lsl #26
   14940:	adc	r2, r2, r2
   14944:	subcs	r0, r0, r1, lsl #26
   14948:	cmp	r0, r1, lsl #25
   1494c:	adc	r2, r2, r2
   14950:	subcs	r0, r0, r1, lsl #25
   14954:	cmp	r0, r1, lsl #24
   14958:	adc	r2, r2, r2
   1495c:	subcs	r0, r0, r1, lsl #24
   14960:	cmp	r0, r1, lsl #23
   14964:	adc	r2, r2, r2
   14968:	subcs	r0, r0, r1, lsl #23
   1496c:	cmp	r0, r1, lsl #22
   14970:	adc	r2, r2, r2
   14974:	subcs	r0, r0, r1, lsl #22
   14978:	cmp	r0, r1, lsl #21
   1497c:	adc	r2, r2, r2
   14980:	subcs	r0, r0, r1, lsl #21
   14984:	cmp	r0, r1, lsl #20
   14988:	adc	r2, r2, r2
   1498c:	subcs	r0, r0, r1, lsl #20
   14990:	cmp	r0, r1, lsl #19
   14994:	adc	r2, r2, r2
   14998:	subcs	r0, r0, r1, lsl #19
   1499c:	cmp	r0, r1, lsl #18
   149a0:	adc	r2, r2, r2
   149a4:	subcs	r0, r0, r1, lsl #18
   149a8:	cmp	r0, r1, lsl #17
   149ac:	adc	r2, r2, r2
   149b0:	subcs	r0, r0, r1, lsl #17
   149b4:	cmp	r0, r1, lsl #16
   149b8:	adc	r2, r2, r2
   149bc:	subcs	r0, r0, r1, lsl #16
   149c0:	cmp	r0, r1, lsl #15
   149c4:	adc	r2, r2, r2
   149c8:	subcs	r0, r0, r1, lsl #15
   149cc:	cmp	r0, r1, lsl #14
   149d0:	adc	r2, r2, r2
   149d4:	subcs	r0, r0, r1, lsl #14
   149d8:	cmp	r0, r1, lsl #13
   149dc:	adc	r2, r2, r2
   149e0:	subcs	r0, r0, r1, lsl #13
   149e4:	cmp	r0, r1, lsl #12
   149e8:	adc	r2, r2, r2
   149ec:	subcs	r0, r0, r1, lsl #12
   149f0:	cmp	r0, r1, lsl #11
   149f4:	adc	r2, r2, r2
   149f8:	subcs	r0, r0, r1, lsl #11
   149fc:	cmp	r0, r1, lsl #10
   14a00:	adc	r2, r2, r2
   14a04:	subcs	r0, r0, r1, lsl #10
   14a08:	cmp	r0, r1, lsl #9
   14a0c:	adc	r2, r2, r2
   14a10:	subcs	r0, r0, r1, lsl #9
   14a14:	cmp	r0, r1, lsl #8
   14a18:	adc	r2, r2, r2
   14a1c:	subcs	r0, r0, r1, lsl #8
   14a20:	cmp	r0, r1, lsl #7
   14a24:	adc	r2, r2, r2
   14a28:	subcs	r0, r0, r1, lsl #7
   14a2c:	cmp	r0, r1, lsl #6
   14a30:	adc	r2, r2, r2
   14a34:	subcs	r0, r0, r1, lsl #6
   14a38:	cmp	r0, r1, lsl #5
   14a3c:	adc	r2, r2, r2
   14a40:	subcs	r0, r0, r1, lsl #5
   14a44:	cmp	r0, r1, lsl #4
   14a48:	adc	r2, r2, r2
   14a4c:	subcs	r0, r0, r1, lsl #4
   14a50:	cmp	r0, r1, lsl #3
   14a54:	adc	r2, r2, r2
   14a58:	subcs	r0, r0, r1, lsl #3
   14a5c:	cmp	r0, r1, lsl #2
   14a60:	adc	r2, r2, r2
   14a64:	subcs	r0, r0, r1, lsl #2
   14a68:	cmp	r0, r1, lsl #1
   14a6c:	adc	r2, r2, r2
   14a70:	subcs	r0, r0, r1, lsl #1
   14a74:	cmp	r0, r1
   14a78:	adc	r2, r2, r2
   14a7c:	subcs	r0, r0, r1
   14a80:	mov	r0, r2
   14a84:	bx	lr
   14a88:	moveq	r0, #1
   14a8c:	movne	r0, #0
   14a90:	bx	lr
   14a94:	clz	r2, r1
   14a98:	rsb	r2, r2, #31
   14a9c:	lsr	r0, r0, r2
   14aa0:	bx	lr
   14aa4:	cmp	r0, #0
   14aa8:	mvnne	r0, #0
   14aac:	b	14d10 <abort@plt+0x3f28>
   14ab0:	cmp	r1, #0
   14ab4:	beq	14aa4 <abort@plt+0x3cbc>
   14ab8:	push	{r0, r1, lr}
   14abc:	bl	148c4 <abort@plt+0x3adc>
   14ac0:	pop	{r1, r2, lr}
   14ac4:	mul	r3, r2, r0
   14ac8:	sub	r1, r1, r3
   14acc:	bx	lr
   14ad0:	cmp	r1, #0
   14ad4:	beq	14ce0 <abort@plt+0x3ef8>
   14ad8:	eor	ip, r0, r1
   14adc:	rsbmi	r1, r1, #0
   14ae0:	subs	r2, r1, #1
   14ae4:	beq	14cac <abort@plt+0x3ec4>
   14ae8:	movs	r3, r0
   14aec:	rsbmi	r3, r0, #0
   14af0:	cmp	r3, r1
   14af4:	bls	14cb8 <abort@plt+0x3ed0>
   14af8:	tst	r1, r2
   14afc:	beq	14cc8 <abort@plt+0x3ee0>
   14b00:	clz	r2, r3
   14b04:	clz	r0, r1
   14b08:	sub	r2, r0, r2
   14b0c:	rsbs	r2, r2, #31
   14b10:	addne	r2, r2, r2, lsl #1
   14b14:	mov	r0, #0
   14b18:	addne	pc, pc, r2, lsl #2
   14b1c:	nop			; (mov r0, r0)
   14b20:	cmp	r3, r1, lsl #31
   14b24:	adc	r0, r0, r0
   14b28:	subcs	r3, r3, r1, lsl #31
   14b2c:	cmp	r3, r1, lsl #30
   14b30:	adc	r0, r0, r0
   14b34:	subcs	r3, r3, r1, lsl #30
   14b38:	cmp	r3, r1, lsl #29
   14b3c:	adc	r0, r0, r0
   14b40:	subcs	r3, r3, r1, lsl #29
   14b44:	cmp	r3, r1, lsl #28
   14b48:	adc	r0, r0, r0
   14b4c:	subcs	r3, r3, r1, lsl #28
   14b50:	cmp	r3, r1, lsl #27
   14b54:	adc	r0, r0, r0
   14b58:	subcs	r3, r3, r1, lsl #27
   14b5c:	cmp	r3, r1, lsl #26
   14b60:	adc	r0, r0, r0
   14b64:	subcs	r3, r3, r1, lsl #26
   14b68:	cmp	r3, r1, lsl #25
   14b6c:	adc	r0, r0, r0
   14b70:	subcs	r3, r3, r1, lsl #25
   14b74:	cmp	r3, r1, lsl #24
   14b78:	adc	r0, r0, r0
   14b7c:	subcs	r3, r3, r1, lsl #24
   14b80:	cmp	r3, r1, lsl #23
   14b84:	adc	r0, r0, r0
   14b88:	subcs	r3, r3, r1, lsl #23
   14b8c:	cmp	r3, r1, lsl #22
   14b90:	adc	r0, r0, r0
   14b94:	subcs	r3, r3, r1, lsl #22
   14b98:	cmp	r3, r1, lsl #21
   14b9c:	adc	r0, r0, r0
   14ba0:	subcs	r3, r3, r1, lsl #21
   14ba4:	cmp	r3, r1, lsl #20
   14ba8:	adc	r0, r0, r0
   14bac:	subcs	r3, r3, r1, lsl #20
   14bb0:	cmp	r3, r1, lsl #19
   14bb4:	adc	r0, r0, r0
   14bb8:	subcs	r3, r3, r1, lsl #19
   14bbc:	cmp	r3, r1, lsl #18
   14bc0:	adc	r0, r0, r0
   14bc4:	subcs	r3, r3, r1, lsl #18
   14bc8:	cmp	r3, r1, lsl #17
   14bcc:	adc	r0, r0, r0
   14bd0:	subcs	r3, r3, r1, lsl #17
   14bd4:	cmp	r3, r1, lsl #16
   14bd8:	adc	r0, r0, r0
   14bdc:	subcs	r3, r3, r1, lsl #16
   14be0:	cmp	r3, r1, lsl #15
   14be4:	adc	r0, r0, r0
   14be8:	subcs	r3, r3, r1, lsl #15
   14bec:	cmp	r3, r1, lsl #14
   14bf0:	adc	r0, r0, r0
   14bf4:	subcs	r3, r3, r1, lsl #14
   14bf8:	cmp	r3, r1, lsl #13
   14bfc:	adc	r0, r0, r0
   14c00:	subcs	r3, r3, r1, lsl #13
   14c04:	cmp	r3, r1, lsl #12
   14c08:	adc	r0, r0, r0
   14c0c:	subcs	r3, r3, r1, lsl #12
   14c10:	cmp	r3, r1, lsl #11
   14c14:	adc	r0, r0, r0
   14c18:	subcs	r3, r3, r1, lsl #11
   14c1c:	cmp	r3, r1, lsl #10
   14c20:	adc	r0, r0, r0
   14c24:	subcs	r3, r3, r1, lsl #10
   14c28:	cmp	r3, r1, lsl #9
   14c2c:	adc	r0, r0, r0
   14c30:	subcs	r3, r3, r1, lsl #9
   14c34:	cmp	r3, r1, lsl #8
   14c38:	adc	r0, r0, r0
   14c3c:	subcs	r3, r3, r1, lsl #8
   14c40:	cmp	r3, r1, lsl #7
   14c44:	adc	r0, r0, r0
   14c48:	subcs	r3, r3, r1, lsl #7
   14c4c:	cmp	r3, r1, lsl #6
   14c50:	adc	r0, r0, r0
   14c54:	subcs	r3, r3, r1, lsl #6
   14c58:	cmp	r3, r1, lsl #5
   14c5c:	adc	r0, r0, r0
   14c60:	subcs	r3, r3, r1, lsl #5
   14c64:	cmp	r3, r1, lsl #4
   14c68:	adc	r0, r0, r0
   14c6c:	subcs	r3, r3, r1, lsl #4
   14c70:	cmp	r3, r1, lsl #3
   14c74:	adc	r0, r0, r0
   14c78:	subcs	r3, r3, r1, lsl #3
   14c7c:	cmp	r3, r1, lsl #2
   14c80:	adc	r0, r0, r0
   14c84:	subcs	r3, r3, r1, lsl #2
   14c88:	cmp	r3, r1, lsl #1
   14c8c:	adc	r0, r0, r0
   14c90:	subcs	r3, r3, r1, lsl #1
   14c94:	cmp	r3, r1
   14c98:	adc	r0, r0, r0
   14c9c:	subcs	r3, r3, r1
   14ca0:	cmp	ip, #0
   14ca4:	rsbmi	r0, r0, #0
   14ca8:	bx	lr
   14cac:	teq	ip, r0
   14cb0:	rsbmi	r0, r0, #0
   14cb4:	bx	lr
   14cb8:	movcc	r0, #0
   14cbc:	asreq	r0, ip, #31
   14cc0:	orreq	r0, r0, #1
   14cc4:	bx	lr
   14cc8:	clz	r2, r1
   14ccc:	rsb	r2, r2, #31
   14cd0:	cmp	ip, #0
   14cd4:	lsr	r0, r3, r2
   14cd8:	rsbmi	r0, r0, #0
   14cdc:	bx	lr
   14ce0:	cmp	r0, #0
   14ce4:	mvngt	r0, #-2147483648	; 0x80000000
   14ce8:	movlt	r0, #-2147483648	; 0x80000000
   14cec:	b	14d10 <abort@plt+0x3f28>
   14cf0:	cmp	r1, #0
   14cf4:	beq	14ce0 <abort@plt+0x3ef8>
   14cf8:	push	{r0, r1, lr}
   14cfc:	bl	14ad8 <abort@plt+0x3cf0>
   14d00:	pop	{r1, r2, lr}
   14d04:	mul	r3, r2, r0
   14d08:	sub	r1, r1, r3
   14d0c:	bx	lr
   14d10:	push	{r1, lr}
   14d14:	mov	r0, #8
   14d18:	bl	10bcc <raise@plt>
   14d1c:	pop	{r1, pc}
   14d20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14d24:	mov	r7, r0
   14d28:	ldr	r6, [pc, #72]	; 14d78 <abort@plt+0x3f90>
   14d2c:	ldr	r5, [pc, #72]	; 14d7c <abort@plt+0x3f94>
   14d30:	add	r6, pc, r6
   14d34:	add	r5, pc, r5
   14d38:	sub	r6, r6, r5
   14d3c:	mov	r8, r1
   14d40:	mov	r9, r2
   14d44:	bl	10b94 <calloc@plt-0x20>
   14d48:	asrs	r6, r6, #2
   14d4c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d50:	mov	r4, #0
   14d54:	add	r4, r4, #1
   14d58:	ldr	r3, [r5], #4
   14d5c:	mov	r2, r9
   14d60:	mov	r1, r8
   14d64:	mov	r0, r7
   14d68:	blx	r3
   14d6c:	cmp	r6, r4
   14d70:	bne	14d54 <abort@plt+0x3f6c>
   14d74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d78:	ldrdeq	r1, [r1], -r8
   14d7c:	ldrdeq	r1, [r1], -r0
   14d80:	bx	lr
   14d84:	ldr	r3, [pc, #12]	; 14d98 <abort@plt+0x3fb0>
   14d88:	mov	r1, #0
   14d8c:	add	r3, pc, r3
   14d90:	ldr	r2, [r3]
   14d94:	b	10d34 <__cxa_atexit@plt>
   14d98:	andeq	r1, r1, r0, asr #6

Disassembly of section .fini:

00014d9c <.fini>:
   14d9c:	push	{r3, lr}
   14da0:	pop	{r3, pc}
