
../repos/prog2/0.4:     file format elf32-littlearm


Disassembly of section .init:

000105bc <.init>:
   105bc:	push	{r3, lr}
   105c0:	bl	1066c <_start@@Base+0x3c>
   105c4:	pop	{r3, pc}

Disassembly of section .plt:

000105c8 <printf@plt-0x14>:
   105c8:	push	{lr}		; (str lr, [sp, #-4]!)
   105cc:	ldr	lr, [pc, #4]	; 105d8 <printf@plt-0x4>
   105d0:	add	lr, pc, lr
   105d4:	ldr	pc, [lr, #8]!
   105d8:	andeq	r0, r1, r8, lsr #20

000105dc <printf@plt>:
   105dc:	add	ip, pc, #0, 12
   105e0:	add	ip, ip, #16, 20	; 0x10000
   105e4:	ldr	pc, [ip, #2600]!	; 0xa28

000105e8 <puts@plt>:
   105e8:	add	ip, pc, #0, 12
   105ec:	add	ip, ip, #16, 20	; 0x10000
   105f0:	ldr	pc, [ip, #2592]!	; 0xa20

000105f4 <malloc@plt>:
   105f4:	add	ip, pc, #0, 12
   105f8:	add	ip, ip, #16, 20	; 0x10000
   105fc:	ldr	pc, [ip, #2584]!	; 0xa18

00010600 <__libc_start_main@plt>:
   10600:	add	ip, pc, #0, 12
   10604:	add	ip, ip, #16, 20	; 0x10000
   10608:	ldr	pc, [ip, #2576]!	; 0xa10

0001060c <__gmon_start__@plt>:
   1060c:	add	ip, pc, #0, 12
   10610:	add	ip, ip, #16, 20	; 0x10000
   10614:	ldr	pc, [ip, #2568]!	; 0xa08

00010618 <__isoc99_scanf@plt>:
   10618:	add	ip, pc, #0, 12
   1061c:	add	ip, ip, #16, 20	; 0x10000
   10620:	ldr	pc, [ip, #2560]!	; 0xa00

00010624 <abort@plt>:
   10624:	add	ip, pc, #0, 12
   10628:	add	ip, ip, #16, 20	; 0x10000
   1062c:	ldr	pc, [ip, #2552]!	; 0x9f8

Disassembly of section .text:

00010630 <_start@@Base>:
   10630:	mov	fp, #0
   10634:	mov	lr, #0
   10638:	pop	{r1}		; (ldr r1, [sp], #4)
   1063c:	mov	r2, sp
   10640:	push	{r2}		; (str r2, [sp, #-4]!)
   10644:	push	{r0}		; (str r0, [sp, #-4]!)
   10648:	ldr	ip, [pc, #16]	; 10660 <_start@@Base+0x30>
   1064c:	push	{ip}		; (str ip, [sp, #-4]!)
   10650:	ldr	r0, [pc, #12]	; 10664 <_start@@Base+0x34>
   10654:	ldr	r3, [pc, #12]	; 10668 <_start@@Base+0x38>
   10658:	bl	10600 <__libc_start_main@plt>
   1065c:	bl	10624 <abort@plt>
   10660:	andeq	r0, r1, r4, lsr #18
   10664:	andeq	r0, r1, r0, lsl #15
   10668:	andeq	r0, r1, r4, asr #17
   1066c:	ldr	r3, [pc, #20]	; 10688 <_start@@Base+0x58>
   10670:	ldr	r2, [pc, #20]	; 1068c <_start@@Base+0x5c>
   10674:	add	r3, pc, r3
   10678:	ldr	r2, [r3, r2]
   1067c:	cmp	r2, #0
   10680:	bxeq	lr
   10684:	b	1060c <__gmon_start__@plt>
   10688:	andeq	r0, r1, r4, lsl #19
   1068c:	andeq	r0, r0, r8, lsr #32
   10690:	ldr	r0, [pc, #24]	; 106b0 <_start@@Base+0x80>
   10694:	ldr	r3, [pc, #24]	; 106b4 <_start@@Base+0x84>
   10698:	cmp	r3, r0
   1069c:	bxeq	lr
   106a0:	ldr	r3, [pc, #16]	; 106b8 <_start@@Base+0x88>
   106a4:	cmp	r3, #0
   106a8:	bxeq	lr
   106ac:	bx	r3
   106b0:	andeq	r1, r2, r4, lsr r0
   106b4:	andeq	r1, r2, r4, lsr r0
   106b8:	andeq	r0, r0, r0
   106bc:	ldr	r0, [pc, #36]	; 106e8 <_start@@Base+0xb8>
   106c0:	ldr	r1, [pc, #36]	; 106ec <_start@@Base+0xbc>
   106c4:	sub	r1, r1, r0
   106c8:	asr	r1, r1, #2
   106cc:	add	r1, r1, r1, lsr #31
   106d0:	asrs	r1, r1, #1
   106d4:	bxeq	lr
   106d8:	ldr	r3, [pc, #16]	; 106f0 <_start@@Base+0xc0>
   106dc:	cmp	r3, #0
   106e0:	bxeq	lr
   106e4:	bx	r3
   106e8:	andeq	r1, r2, r4, lsr r0
   106ec:	andeq	r1, r2, r4, lsr r0
   106f0:	andeq	r0, r0, r0
   106f4:	push	{r4, lr}
   106f8:	ldr	r4, [pc, #24]	; 10718 <_start@@Base+0xe8>
   106fc:	ldrb	r3, [r4]
   10700:	cmp	r3, #0
   10704:	popne	{r4, pc}
   10708:	bl	10690 <_start@@Base+0x60>
   1070c:	mov	r3, #1
   10710:	strb	r3, [r4]
   10714:	pop	{r4, pc}
   10718:	andeq	r1, r2, r4, lsr r0
   1071c:	b	106bc <_start@@Base+0x8c>

00010720 <ordenado@@Base>:
   10720:	ldr	r3, [r0]
   10724:	cmp	r1, #1
   10728:	ble	10768 <ordenado@@Base+0x48>
   1072c:	ldr	ip, [r0, #4]
   10730:	cmp	r3, ip
   10734:	bgt	10770 <ordenado@@Base+0x50>
   10738:	add	r0, r0, #4
   1073c:	mov	r3, #1
   10740:	add	r3, r3, #1
   10744:	cmp	r1, r3
   10748:	beq	10760 <ordenado@@Base+0x40>
   1074c:	ldr	r2, [r0, #4]!
   10750:	cmp	r2, ip
   10754:	blt	10778 <ordenado@@Base+0x58>
   10758:	mov	ip, r2
   1075c:	b	10740 <ordenado@@Base+0x20>
   10760:	mov	r0, #1
   10764:	bx	lr
   10768:	mov	r0, #1
   1076c:	bx	lr
   10770:	mov	r0, #0
   10774:	bx	lr
   10778:	mov	r0, #0
   1077c:	bx	lr

00010780 <main@@Base>:
   10780:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10784:	strd	r6, [sp, #8]
   10788:	str	r8, [sp, #16]
   1078c:	str	lr, [sp, #20]
   10790:	sub	sp, sp, #8
   10794:	movw	r0, #2356	; 0x934
   10798:	movt	r0, #1
   1079c:	bl	105dc <printf@plt>
   107a0:	add	r1, sp, #4
   107a4:	movw	r0, #2392	; 0x958
   107a8:	movt	r0, #1
   107ac:	bl	10618 <__isoc99_scanf@plt>
   107b0:	ldr	r3, [sp, #4]
   107b4:	cmp	r3, #100	; 0x64
   107b8:	bgt	1089c <main@@Base+0x11c>
   107bc:	ldr	r0, [sp, #4]
   107c0:	lsl	r0, r0, #2
   107c4:	bl	105f4 <malloc@plt>
   107c8:	mov	r8, r0
   107cc:	ldr	r1, [sp, #4]
   107d0:	cmp	r1, #0
   107d4:	ble	1081c <main@@Base+0x9c>
   107d8:	mov	r5, r0
   107dc:	mov	r4, #0
   107e0:	movw	r7, #2444	; 0x98c
   107e4:	movt	r7, #1
   107e8:	movw	r6, #2392	; 0x958
   107ec:	movt	r6, #1
   107f0:	add	r4, r4, #1
   107f4:	mov	r1, r4
   107f8:	mov	r0, r7
   107fc:	bl	105dc <printf@plt>
   10800:	mov	r1, r5
   10804:	mov	r0, r6
   10808:	bl	10618 <__isoc99_scanf@plt>
   1080c:	ldr	r1, [sp, #4]
   10810:	add	r5, r5, #4
   10814:	cmp	r4, r1
   10818:	blt	107f0 <main@@Base+0x70>
   1081c:	mov	r0, r8
   10820:	bl	10720 <ordenado@@Base>
   10824:	cmp	r0, #0
   10828:	beq	108b4 <main@@Base+0x134>
   1082c:	movw	r0, #2468	; 0x9a4
   10830:	movt	r0, #1
   10834:	bl	105dc <printf@plt>
   10838:	ldr	r4, [sp, #4]
   1083c:	sub	r3, r4, #1
   10840:	cmp	r3, #0
   10844:	ble	10870 <main@@Base+0xf0>
   10848:	add	r4, r8, r4, lsl #2
   1084c:	add	r6, r8, #4
   10850:	movw	r5, #2536	; 0x9e8
   10854:	movt	r5, #1
   10858:	ldr	r1, [r4, #-4]!
   1085c:	mov	r0, r5
   10860:	bl	105dc <printf@plt>
   10864:	cmp	r4, r6
   10868:	bne	10858 <main@@Base+0xd8>
   1086c:	mov	r3, #0
   10870:	ldr	r1, [r8, r3, lsl #2]
   10874:	movw	r0, #2540	; 0x9ec
   10878:	movt	r0, #1
   1087c:	bl	105dc <printf@plt>
   10880:	mov	r0, #0
   10884:	add	sp, sp, #8
   10888:	ldrd	r4, [sp]
   1088c:	ldrd	r6, [sp, #8]
   10890:	ldr	r8, [sp, #16]
   10894:	add	sp, sp, #20
   10898:	pop	{pc}		; (ldr pc, [sp], #4)
   1089c:	movw	r0, #2396	; 0x95c
   108a0:	movt	r0, #1
   108a4:	bl	105dc <printf@plt>
   108a8:	mov	r3, #100	; 0x64
   108ac:	str	r3, [sp, #4]
   108b0:	b	107bc <main@@Base+0x3c>
   108b4:	movw	r0, #2548	; 0x9f4
   108b8:	movt	r0, #1
   108bc:	bl	105e8 <puts@plt>
   108c0:	b	10880 <main@@Base+0x100>

000108c4 <__libc_csu_init@@Base>:
   108c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   108c8:	mov	r7, r0
   108cc:	ldr	r6, [pc, #72]	; 1091c <__libc_csu_init@@Base+0x58>
   108d0:	ldr	r5, [pc, #72]	; 10920 <__libc_csu_init@@Base+0x5c>
   108d4:	add	r6, pc, r6
   108d8:	add	r5, pc, r5
   108dc:	sub	r6, r6, r5
   108e0:	mov	r8, r1
   108e4:	mov	r9, r2
   108e8:	bl	105bc <printf@plt-0x20>
   108ec:	asrs	r6, r6, #2
   108f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   108f4:	mov	r4, #0
   108f8:	add	r4, r4, #1
   108fc:	ldr	r3, [r5], #4
   10900:	mov	r2, r9
   10904:	mov	r1, r8
   10908:	mov	r0, r7
   1090c:	blx	r3
   10910:	cmp	r6, r4
   10914:	bne	108f8 <__libc_csu_init@@Base+0x34>
   10918:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1091c:	andeq	r0, r1, r8, lsr r6
   10920:	andeq	r0, r1, r0, lsr r6

00010924 <__libc_csu_fini@@Base>:
   10924:	bx	lr

Disassembly of section .fini:

00010928 <.fini>:
   10928:	push	{r3, lr}
   1092c:	pop	{r3, pc}
