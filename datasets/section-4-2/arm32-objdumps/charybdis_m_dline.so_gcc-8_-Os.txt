
../repos/charybdis/modules/.libs/m_dline.so:     file format elf32-littlearm


Disassembly of section .init:

0000099c <_init>:
 99c:	push	{r3, lr}
 9a0:	bl	b60 <call_weak_fn>
 9a4:	pop	{r3, pc}

Disassembly of section .plt:

000009a8 <.plt>:
 9a8:	push	{lr}		; (str lr, [sp, #-4]!)
 9ac:	ldr	lr, [pc, #4]	; 9b8 <.plt+0x10>
 9b0:	add	lr, pc, lr
 9b4:	ldr	pc, [lr, #8]!
 9b8:	.word	0x00011648

000009bc <make_conf@plt>:
 9bc:	add	ip, pc, #0, 12
 9c0:	add	ip, ip, #69632	; 0x11000
 9c4:	ldr	pc, [ip, #1608]!	; 0x648

000009c8 <parse_netmask_strict@plt>:
 9c8:	add	ip, pc, #0, 12
 9cc:	add	ip, ip, #69632	; 0x11000
 9d0:	ldr	pc, [ip, #1600]!	; 0x640

000009d4 <rb_current_time@plt>:
 9d4:	add	ip, pc, #0, 12
 9d8:	add	ip, ip, #69632	; 0x11000
 9dc:	ldr	pc, [ip, #1592]!	; 0x638

000009e0 <sendto_match_servs@plt>:
 9e0:	add	ip, pc, #0, 12
 9e4:	add	ip, ip, #69632	; 0x11000
 9e8:	ldr	pc, [ip, #1584]!	; 0x630

000009ec <__cxa_finalize@plt>:
 9ec:	add	ip, pc, #0, 12
 9f0:	add	ip, ip, #69632	; 0x11000
 9f4:	ldr	pc, [ip, #1576]!	; 0x628

000009f8 <sendto_one@plt>:
 9f8:	add	ip, pc, #0, 12
 9fc:	add	ip, ip, #69632	; 0x11000
 a00:	ldr	pc, [ip, #1568]!	; 0x620

00000a04 <rb_outofmemory@plt>:
 a04:	add	ip, pc, #0, 12
 a08:	add	ip, ip, #69632	; 0x11000
 a0c:	ldr	pc, [ip, #1560]!	; 0x618

00000a10 <parse_netmask@plt>:
 a10:	add	ip, pc, #0, 12
 a14:	add	ip, ip, #69632	; 0x11000
 a18:	ldr	pc, [ip, #1552]!	; 0x610

00000a1c <sendto_realops_snomask@plt>:
 a1c:	add	ip, pc, #0, 12
 a20:	add	ip, ip, #69632	; 0x11000
 a24:	ldr	pc, [ip, #1544]!	; 0x608

00000a28 <bandb_add@plt>:
 a28:	add	ip, pc, #0, 12
 a2c:	add	ip, ip, #69632	; 0x11000
 a30:	ldr	pc, [ip, #1536]!	; 0x600

00000a34 <get_oper_name@plt>:
 a34:	add	ip, pc, #0, 12
 a38:	add	ip, ip, #69632	; 0x11000
 a3c:	ldr	pc, [ip, #1528]!	; 0x5f8

00000a40 <rb_free_rb_dlink_node@plt>:
 a40:	add	ip, pc, #0, 12
 a44:	add	ip, ip, #69632	; 0x11000
 a48:	ldr	pc, [ip, #1520]!	; 0x5f0

00000a4c <operhash_add@plt>:
 a4c:	add	ip, pc, #0, 12
 a50:	add	ip, ip, #69632	; 0x11000
 a54:	ldr	pc, [ip, #1512]!	; 0x5e8

00000a58 <strcpy@plt>:
 a58:	add	ip, pc, #0, 12
 a5c:	add	ip, ip, #69632	; 0x11000
 a60:	ldr	pc, [ip, #1504]!	; 0x5e0

00000a64 <add_temp_dline@plt>:
 a64:	add	ip, pc, #0, 12
 a68:	add	ip, ip, #69632	; 0x11000
 a6c:	ldr	pc, [ip, #1496]!	; 0x5d8

00000a70 <rb_set_time@plt>:
 a70:	add	ip, pc, #0, 12
 a74:	add	ip, ip, #69632	; 0x11000
 a78:	ldr	pc, [ip, #1488]!	; 0x5d0

00000a7c <malloc@plt>:
 a7c:	add	ip, pc, #0, 12
 a80:	add	ip, ip, #69632	; 0x11000
 a84:	ldr	pc, [ip, #1480]!	; 0x5c8

00000a88 <add_conf_by_address@plt>:
 a88:	add	ip, pc, #0, 12
 a8c:	add	ip, ip, #69632	; 0x11000
 a90:	ldr	pc, [ip, #1472]!	; 0x5c0

00000a94 <__gmon_start__@plt>:
 a94:	add	ip, pc, #0, 12
 a98:	add	ip, ip, #69632	; 0x11000
 a9c:	ldr	pc, [ip, #1464]!	; 0x5b8

00000aa0 <strlen@plt>:
 aa0:	add	ip, pc, #0, 12
 aa4:	add	ip, ip, #69632	; 0x11000
 aa8:	ldr	pc, [ip, #1456]!	; 0x5b0

00000aac <strchr@plt>:
 aac:	add	ip, pc, #0, 12
 ab0:	add	ip, ip, #69632	; 0x11000
 ab4:	ldr	pc, [ip, #1448]!	; 0x5a8

00000ab8 <delete_one_address_conf@plt>:
 ab8:	add	ip, pc, #0, 12
 abc:	add	ip, ip, #69632	; 0x11000
 ac0:	ldr	pc, [ip, #1440]!	; 0x5a0

00000ac4 <ilog@plt>:
 ac4:	add	ip, pc, #0, 12
 ac8:	add	ip, ip, #69632	; 0x11000
 acc:	ldr	pc, [ip, #1432]!	; 0x598

00000ad0 <match@plt>:
 ad0:	add	ip, pc, #0, 12
 ad4:	add	ip, ip, #69632	; 0x11000
 ad8:	ldr	pc, [ip, #1424]!	; 0x590

00000adc <valid_temp_time@plt>:
 adc:	add	ip, pc, #0, 12
 ae0:	add	ip, ip, #69632	; 0x11000
 ae4:	ldr	pc, [ip, #1416]!	; 0x588

00000ae8 <check_dlines@plt>:
 ae8:	add	ip, pc, #0, 12
 aec:	add	ip, ip, #69632	; 0x11000
 af0:	ldr	pc, [ip, #1408]!	; 0x580

00000af4 <sendto_one_notice@plt>:
 af4:	add	ip, pc, #0, 12
 af8:	add	ip, ip, #69632	; 0x11000
 afc:	ldr	pc, [ip, #1400]!	; 0x578

00000b00 <bandb_del@plt>:
 b00:	add	ip, pc, #0, 12
 b04:	add	ip, ip, #69632	; 0x11000
 b08:	ldr	pc, [ip, #1392]!	; 0x570

00000b0c <atoi@plt>:
 b0c:	add	ip, pc, #0, 12
 b10:	add	ip, ip, #69632	; 0x11000
 b14:	ldr	pc, [ip, #1384]!	; 0x568

00000b18 <find_exact_conf_by_address@plt>:
 b18:	add	ip, pc, #0, 12
 b1c:	add	ip, ip, #69632	; 0x11000
 b20:	ldr	pc, [ip, #1376]!	; 0x560

00000b24 <rb_strlcpy@plt>:
 b24:	add	ip, pc, #0, 12
 b28:	add	ip, ip, #69632	; 0x11000
 b2c:	ldr	pc, [ip, #1368]!	; 0x558

00000b30 <find_shared_conf@plt>:
 b30:	add	ip, pc, #0, 12
 b34:	add	ip, ip, #69632	; 0x11000
 b38:	ldr	pc, [ip, #1360]!	; 0x550

00000b3c <privilegeset_in_set@plt>:
 b3c:	add	ip, pc, #0, 12
 b40:	add	ip, ip, #69632	; 0x11000
 b44:	ldr	pc, [ip, #1352]!	; 0x548

00000b48 <irccmp@plt>:
 b48:	add	ip, pc, #0, 12
 b4c:	add	ip, ip, #69632	; 0x11000
 b50:	ldr	pc, [ip, #1344]!	; 0x540

00000b54 <find_dline@plt>:
 b54:	add	ip, pc, #0, 12
 b58:	add	ip, ip, #69632	; 0x11000
 b5c:	ldr	pc, [ip, #1336]!	; 0x538

Disassembly of section .text:

00000b60 <call_weak_fn>:
     b60:	ldr	r3, [pc, #20]	; b7c <call_weak_fn+0x1c>
     b64:	ldr	r2, [pc, #20]	; b80 <call_weak_fn+0x20>
     b68:	add	r3, pc, r3
     b6c:	ldr	r2, [r3, r2]
     b70:	cmp	r2, #0
     b74:	bxeq	lr
     b78:	b	a94 <__gmon_start__@plt>
     b7c:	.word	0x00011490
     b80:	.word	0x000000a0

00000b84 <deregister_tm_clones>:
     b84:	ldr	r0, [pc, #44]	; bb8 <deregister_tm_clones+0x34>
     b88:	ldr	r3, [pc, #44]	; bbc <deregister_tm_clones+0x38>
     b8c:	add	r0, pc, r0
     b90:	add	r3, pc, r3
     b94:	cmp	r3, r0
     b98:	ldr	r3, [pc, #32]	; bc0 <deregister_tm_clones+0x3c>
     b9c:	add	r3, pc, r3
     ba0:	bxeq	lr
     ba4:	ldr	r2, [pc, #24]	; bc4 <deregister_tm_clones+0x40>
     ba8:	ldr	r3, [r3, r2]
     bac:	cmp	r3, #0
     bb0:	bxeq	lr
     bb4:	bx	r3
     bb8:	.word	0x000115e4
     bbc:	.word	0x000115e0
     bc0:	.word	0x0001145c
     bc4:	.word	0x0000009c

00000bc8 <register_tm_clones>:
     bc8:	ldr	r0, [pc, #56]	; c08 <register_tm_clones+0x40>
     bcc:	ldr	r3, [pc, #56]	; c0c <register_tm_clones+0x44>
     bd0:	add	r0, pc, r0
     bd4:	add	r3, pc, r3
     bd8:	sub	r1, r3, r0
     bdc:	ldr	r3, [pc, #44]	; c10 <register_tm_clones+0x48>
     be0:	asr	r1, r1, #2
     be4:	add	r3, pc, r3
     be8:	add	r1, r1, r1, lsr #31
     bec:	asrs	r1, r1, #1
     bf0:	bxeq	lr
     bf4:	ldr	r2, [pc, #24]	; c14 <register_tm_clones+0x4c>
     bf8:	ldr	r3, [r3, r2]
     bfc:	cmp	r3, #0
     c00:	bxeq	lr
     c04:	bx	r3
     c08:	.word	0x000115a0
     c0c:	.word	0x0001159c
     c10:	.word	0x00011414
     c14:	.word	0x000000a8

00000c18 <__do_global_dtors_aux>:
     c18:	ldr	r3, [pc, #76]	; c6c <__do_global_dtors_aux+0x54>
     c1c:	ldr	r2, [pc, #76]	; c70 <__do_global_dtors_aux+0x58>
     c20:	add	r3, pc, r3
     c24:	add	r2, pc, r2
     c28:	ldrb	r3, [r3]
     c2c:	cmp	r3, #0
     c30:	bxne	lr
     c34:	ldr	r3, [pc, #56]	; c74 <__do_global_dtors_aux+0x5c>
     c38:	push	{r4, lr}
     c3c:	ldr	r3, [r2, r3]
     c40:	cmp	r3, #0
     c44:	beq	c54 <__do_global_dtors_aux+0x3c>
     c48:	ldr	r3, [pc, #40]	; c78 <__do_global_dtors_aux+0x60>
     c4c:	ldr	r0, [pc, r3]
     c50:	bl	9ec <__cxa_finalize@plt>
     c54:	bl	b84 <deregister_tm_clones>
     c58:	ldr	r3, [pc, #28]	; c7c <__do_global_dtors_aux+0x64>
     c5c:	mov	r2, #1
     c60:	add	r3, pc, r3
     c64:	strb	r2, [r3]
     c68:	pop	{r4, pc}
     c6c:	.word	0x00011550
     c70:	.word	0x000113d4
     c74:	.word	0x00000098
     c78:	.word	0x00011464
     c7c:	.word	0x00011510

00000c80 <frame_dummy>:
     c80:	b	bc8 <register_tm_clones>

00000c84 <rb_strdup>:
     c84:	push	{r4, r5, r6, lr}
     c88:	mov	r5, r0
     c8c:	bl	aa0 <strlen@plt>
     c90:	add	r0, r0, #1
     c94:	bl	a7c <malloc@plt>
     c98:	subs	r4, r0, #0
     c9c:	bne	ca4 <rb_strdup+0x20>
     ca0:	bl	a04 <rb_outofmemory@plt>
     ca4:	mov	r1, r5
     ca8:	bl	a58 <strcpy@plt>
     cac:	mov	r0, r4
     cb0:	pop	{r4, r5, r6, pc}

00000cb4 <apply_dline>:
     cb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     cb8:	sub	sp, sp, #152	; 0x98
     cbc:	mov	r7, r1
     cc0:	add	r4, sp, #24
     cc4:	mov	r5, r0
     cc8:	mov	r8, r2
     ccc:	mov	r1, r4
     cd0:	ldr	r9, [pc, #1108]	; 112c <apply_dline+0x478>
     cd4:	add	r2, sp, #16
     cd8:	mov	r0, r7
     cdc:	mov	r6, r3
     ce0:	bl	9c8 <parse_netmask_strict@plt>
     ce4:	sub	r3, r0, #2
     ce8:	cmp	r3, #1
     cec:	add	r9, pc, r9
     cf0:	bls	d1c <apply_dline+0x68>
     cf4:	ldr	r3, [pc, #1076]	; 1130 <apply_dline+0x47c>
     cf8:	mov	r0, r5
     cfc:	ldr	r1, [pc, #1072]	; 1134 <apply_dline+0x480>
     d00:	ldr	r2, [r9, r3]
     d04:	add	r3, r5, #88	; 0x58
     d08:	add	r1, pc, r1
     d0c:	add	r2, r2, #88	; 0x58
     d10:	bl	9f8 <sendto_one@plt>
     d14:	add	sp, sp, #152	; 0x98
     d18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
     d1c:	ldr	r3, [r5, #24]
     d20:	cmp	r0, #3
     d24:	moveq	sl, #10
     d28:	movne	sl, #2
     d2c:	cmp	r3, #0
     d30:	bne	d58 <apply_dline+0xa4>
     d34:	ldr	r3, [r5, #24]
     d38:	cmp	r3, #0
     d3c:	bne	d98 <apply_dline+0xe4>
     d40:	ldr	r3, [sp, #16]
     d44:	cmp	r3, #15
     d48:	bgt	dbc <apply_dline+0x108>
     d4c:	ldr	r1, [pc, #996]	; 1138 <apply_dline+0x484>
     d50:	add	r1, pc, r1
     d54:	b	d8c <apply_dline+0xd8>
     d58:	ldr	r0, [r3, #36]	; 0x24
     d5c:	cmp	r0, #0
     d60:	beq	d34 <apply_dline+0x80>
     d64:	ldr	r1, [pc, #976]	; 113c <apply_dline+0x488>
     d68:	add	r1, pc, r1
     d6c:	bl	b3c <privilegeset_in_set@plt>
     d70:	cmp	r0, #0
     d74:	beq	d34 <apply_dline+0x80>
     d78:	ldr	r3, [sp, #16]
     d7c:	cmp	r3, #7
     d80:	bgt	dbc <apply_dline+0x108>
     d84:	ldr	r1, [pc, #948]	; 1140 <apply_dline+0x48c>
     d88:	add	r1, pc, r1
     d8c:	mov	r0, r5
     d90:	bl	af4 <sendto_one_notice@plt>
     d94:	b	d14 <apply_dline+0x60>
     d98:	ldr	r0, [r3, #36]	; 0x24
     d9c:	cmp	r0, #0
     da0:	beq	d40 <apply_dline+0x8c>
     da4:	ldr	r1, [pc, #920]	; 1144 <apply_dline+0x490>
     da8:	add	r1, pc, r1
     dac:	bl	b3c <privilegeset_in_set@plt>
     db0:	cmp	r0, #0
     db4:	bne	d78 <apply_dline+0xc4>
     db8:	b	d40 <apply_dline+0x8c>
     dbc:	ldr	r3, [pc, #900]	; 1148 <apply_dline+0x494>
     dc0:	ldr	r3, [r9, r3]
     dc4:	ldr	r3, [r3, #140]	; 0x8c
     dc8:	cmp	r3, #0
     dcc:	beq	e60 <apply_dline+0x1ac>
     dd0:	mov	r0, r4
     dd4:	mov	r1, sl
     dd8:	bl	b54 <find_dline@plt>
     ddc:	subs	r4, r0, #0
     de0:	beq	e60 <apply_dline+0x1ac>
     de4:	add	r2, sp, #20
     de8:	mov	r1, #0
     dec:	ldr	r0, [r4, #16]
     df0:	bl	9c8 <parse_netmask_strict@plt>
     df4:	cmp	r0, #0
     df8:	beq	e60 <apply_dline+0x1ac>
     dfc:	ldrd	r2, [sp, #16]
     e00:	cmp	r2, r3
     e04:	blt	e60 <apply_dline+0x1ac>
     e08:	ldr	r1, [r4, #20]
     e0c:	cmp	r1, #0
     e10:	ldreq	r1, [pc, #820]	; 114c <apply_dline+0x498>
     e14:	addeq	r1, pc, r1
     e18:	ldr	r2, [r4, #4]
     e1c:	add	r3, r5, #88	; 0x58
     e20:	ldr	r0, [r4, #16]
     e24:	tst	r2, #64	; 0x40
     e28:	ldr	r2, [pc, #768]	; 1130 <apply_dline+0x47c>
     e2c:	ldr	r2, [r9, r2]
     e30:	str	r7, [sp]
     e34:	strd	r0, [sp, #4]
     e38:	add	r2, r2, #88	; 0x58
     e3c:	beq	e54 <apply_dline+0x1a0>
     e40:	ldr	r1, [pc, #776]	; 1150 <apply_dline+0x49c>
     e44:	add	r1, pc, r1
     e48:	mov	r0, r5
     e4c:	bl	9f8 <sendto_one@plt>
     e50:	b	d14 <apply_dline+0x60>
     e54:	ldr	r1, [pc, #760]	; 1154 <apply_dline+0x4a0>
     e58:	add	r1, pc, r1
     e5c:	b	e48 <apply_dline+0x194>
     e60:	bl	a70 <rb_set_time@plt>
     e64:	bl	9bc <make_conf@plt>
     e68:	mov	r3, #131072	; 0x20000
     e6c:	mov	r4, r0
     e70:	str	r3, [r0]
     e74:	bl	9d4 <rb_current_time@plt>
     e78:	str	r0, [r4, #40]	; 0x28
     e7c:	mov	r0, r7
     e80:	bl	c84 <rb_strdup>
     e84:	str	r0, [r4, #16]
     e88:	mov	r0, r6
     e8c:	bl	c84 <rb_strdup>
     e90:	str	r0, [r4, #20]
     e94:	mov	r0, r5
     e98:	bl	a34 <get_oper_name@plt>
     e9c:	bl	a4c <operhash_add@plt>
     ea0:	str	r0, [r4, #12]
     ea4:	mov	r0, r6
     ea8:	bl	aa0 <strlen@plt>
     eac:	movw	r3, #390	; 0x186
     eb0:	mov	r1, #124	; 0x7c
     eb4:	cmp	r0, r3
     eb8:	mov	r0, r6
     ebc:	movhi	r3, #0
     ec0:	strbhi	r3, [r6, #390]	; 0x186
     ec4:	bl	aac <strchr@plt>
     ec8:	cmp	r0, #0
     ecc:	bne	f98 <apply_dline+0x2e4>
     ed0:	mov	r7, #0
     ed4:	cmp	r8, #0
     ed8:	ble	1024 <apply_dline+0x370>
     edc:	bl	9d4 <rb_current_time@plt>
     ee0:	add	r0, r0, r8
     ee4:	str	r0, [r4, #36]	; 0x24
     ee8:	mov	r0, r4
     eec:	bl	a64 <add_temp_dline@plt>
     ef0:	mov	r3, #60	; 0x3c
     ef4:	cmp	r7, #0
     ef8:	mov	r0, r5
     efc:	sdiv	r8, r8, r3
     f00:	beq	f10 <apply_dline+0x25c>
     f04:	ldrb	r3, [r7]
     f08:	cmp	r3, #0
     f0c:	bne	fc8 <apply_dline+0x314>
     f10:	bl	a34 <get_oper_name@plt>
     f14:	ldr	r2, [pc, #572]	; 1158 <apply_dline+0x4a4>
     f18:	mov	r1, #0
     f1c:	str	r6, [sp, #8]
     f20:	ldr	r3, [r4, #16]
     f24:	str	r8, [sp]
     f28:	add	r2, pc, r2
     f2c:	str	r3, [sp, #4]
     f30:	mov	r3, r0
     f34:	mov	r0, #256	; 0x100
     f38:	bl	a1c <sendto_realops_snomask@plt>
     f3c:	mov	r0, r5
     f40:	bl	a34 <get_oper_name@plt>
     f44:	ldr	r1, [pc, #528]	; 115c <apply_dline+0x4a8>
     f48:	mov	r2, r0
     f4c:	mov	r0, #7
     f50:	str	r6, [sp, #4]
     f54:	ldr	r3, [r4, #16]
     f58:	add	r1, pc, r1
     f5c:	str	r3, [sp]
     f60:	mov	r3, r8
     f64:	bl	ac4 <ilog@plt>
     f68:	ldr	r3, [pc, #448]	; 1130 <apply_dline+0x47c>
     f6c:	mov	r0, r5
     f70:	ldr	r1, [pc, #488]	; 1160 <apply_dline+0x4ac>
     f74:	ldr	r2, [r9, r3]
     f78:	ldr	r3, [r4, #16]
     f7c:	add	r1, pc, r1
     f80:	str	r8, [sp]
     f84:	add	r2, r2, #88	; 0x58
     f88:	str	r3, [sp, #4]
     f8c:	add	r3, r5, #88	; 0x58
     f90:	bl	9f8 <sendto_one@plt>
     f94:	b	d14 <apply_dline+0x60>
     f98:	mov	r7, r0
     f9c:	mov	r3, #0
     fa0:	strb	r3, [r7], #1
     fa4:	cmp	r7, r3
     fa8:	beq	ed0 <apply_dline+0x21c>
     fac:	ldrb	r3, [r0, #1]
     fb0:	cmp	r3, #0
     fb4:	beq	ed4 <apply_dline+0x220>
     fb8:	mov	r0, r7
     fbc:	bl	c84 <rb_strdup>
     fc0:	str	r0, [r4, #24]
     fc4:	b	ed4 <apply_dline+0x220>
     fc8:	bl	a34 <get_oper_name@plt>
     fcc:	ldr	r2, [pc, #400]	; 1164 <apply_dline+0x4b0>
     fd0:	mov	r1, #0
     fd4:	strd	r6, [sp, #8]
     fd8:	ldr	r3, [r4, #16]
     fdc:	str	r8, [sp]
     fe0:	add	r2, pc, r2
     fe4:	str	r3, [sp, #4]
     fe8:	mov	r3, r0
     fec:	mov	r0, #256	; 0x100
     ff0:	bl	a1c <sendto_realops_snomask@plt>
     ff4:	mov	r0, r5
     ff8:	bl	a34 <get_oper_name@plt>
     ffc:	ldr	r1, [pc, #356]	; 1168 <apply_dline+0x4b4>
    1000:	mov	r2, r0
    1004:	mov	r0, #7
    1008:	strd	r6, [sp, #4]
    100c:	ldr	r3, [r4, #16]
    1010:	add	r1, pc, r1
    1014:	str	r3, [sp]
    1018:	mov	r3, r8
    101c:	bl	ac4 <ilog@plt>
    1020:	b	f68 <apply_dline+0x2b4>
    1024:	mov	r3, #0
    1028:	mov	r1, #131072	; 0x20000
    102c:	str	r4, [sp]
    1030:	mov	r2, r3
    1034:	ldr	r0, [r4, #16]
    1038:	bl	a88 <add_conf_by_address@plt>
    103c:	ldr	r2, [r4, #16]
    1040:	ldr	r3, [r4, #24]
    1044:	cmp	r3, #0
    1048:	beq	1058 <apply_dline+0x3a4>
    104c:	ldrb	r1, [r3]
    1050:	cmp	r1, #0
    1054:	moveq	r3, #0
    1058:	mov	r8, #0
    105c:	mov	r0, #1
    1060:	str	r6, [sp]
    1064:	mov	r1, r5
    1068:	stmib	sp, {r3, r8}
    106c:	mov	r3, r8
    1070:	bl	a28 <bandb_add@plt>
    1074:	cmp	r7, r8
    1078:	mov	r0, r5
    107c:	beq	108c <apply_dline+0x3d8>
    1080:	ldrb	r3, [r7]
    1084:	cmp	r3, r8
    1088:	bne	10dc <apply_dline+0x428>
    108c:	bl	a34 <get_oper_name@plt>
    1090:	ldr	r2, [pc, #212]	; 116c <apply_dline+0x4b8>
    1094:	mov	r1, #0
    1098:	str	r6, [sp, #4]
    109c:	ldr	r3, [r4, #16]
    10a0:	add	r2, pc, r2
    10a4:	str	r3, [sp]
    10a8:	mov	r3, r0
    10ac:	mov	r0, #256	; 0x100
    10b0:	bl	a1c <sendto_realops_snomask@plt>
    10b4:	mov	r0, r5
    10b8:	bl	a34 <get_oper_name@plt>
    10bc:	ldr	r1, [pc, #172]	; 1170 <apply_dline+0x4bc>
    10c0:	mov	r2, r0
    10c4:	mov	r0, #7
    10c8:	str	r6, [sp]
    10cc:	ldr	r3, [r4, #16]
    10d0:	add	r1, pc, r1
    10d4:	bl	ac4 <ilog@plt>
    10d8:	b	d14 <apply_dline+0x60>
    10dc:	bl	a34 <get_oper_name@plt>
    10e0:	ldr	r2, [pc, #140]	; 1174 <apply_dline+0x4c0>
    10e4:	mov	r1, r8
    10e8:	strd	r6, [sp, #4]
    10ec:	ldr	r3, [r4, #16]
    10f0:	add	r2, pc, r2
    10f4:	str	r3, [sp]
    10f8:	mov	r3, r0
    10fc:	mov	r0, #256	; 0x100
    1100:	bl	a1c <sendto_realops_snomask@plt>
    1104:	mov	r0, r5
    1108:	bl	a34 <get_oper_name@plt>
    110c:	ldr	r1, [pc, #100]	; 1178 <apply_dline+0x4c4>
    1110:	mov	r2, r0
    1114:	mov	r0, #7
    1118:	strd	r6, [sp]
    111c:	ldr	r3, [r4, #16]
    1120:	add	r1, pc, r1
    1124:	bl	ac4 <ilog@plt>
    1128:	b	d14 <apply_dline+0x60>
    112c:	.word	0x0001130c
    1130:	.word	0x000000ac
    1134:	.word	0x00000c50
    1138:	.word	0x00000c7a
    113c:	.word	0x00000c0e
    1140:	.word	0x00000c0b
    1144:	.word	0x00000bd9
    1148:	.word	0x000000b4
    114c:	.word	0x00000b38
    1150:	.word	0x00000bb8
    1154:	.word	0x00000bd3
    1158:	.word	0x00000b34
    115c:	.word	0x00000b34
    1160:	.word	0x00000b62
    1164:	.word	0x00000aba
    1168:	.word	0x00000abd
    116c:	.word	0x00000a75
    1170:	.word	0x00000a63
    1174:	.word	0x00000a50
    1178:	.word	0x00000a41

0000117c <mo_dline>:
    117c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1180:	mov	r5, r2
    1184:	add	fp, sp, #32
    1188:	sub	sp, sp, #116	; 0x74
    118c:	mov	sl, r3
    1190:	sub	r3, fp, #112	; 0x70
    1194:	ldr	r2, [pc, #624]	; 140c <mo_dline+0x290>
    1198:	ldr	r8, [pc, #624]	; 1410 <mo_dline+0x294>
    119c:	add	r2, pc, r2
    11a0:	ldr	r0, [r2]
    11a4:	add	r8, pc, r8
    11a8:	ldr	r1, [r2, #4]
    11ac:	ldrh	r2, [r2, #8]
    11b0:	stmia	r3!, {r0, r1}
    11b4:	strh	r2, [r3]
    11b8:	ldr	r3, [r5, #24]
    11bc:	cmp	r3, #0
    11c0:	bne	11f4 <mo_dline+0x78>
    11c4:	ldr	r3, [pc, #584]	; 1414 <mo_dline+0x298>
    11c8:	ldr	r1, [pc, #584]	; 1418 <mo_dline+0x29c>
    11cc:	ldr	r2, [r8, r3]
    11d0:	ldr	r3, [pc, #580]	; 141c <mo_dline+0x2a0>
    11d4:	add	r1, pc, r1
    11d8:	add	r2, r2, #88	; 0x58
    11dc:	add	r3, pc, r3
    11e0:	str	r3, [sp]
    11e4:	add	r3, r5, #88	; 0x58
    11e8:	mov	r0, r5
    11ec:	bl	9f8 <sendto_one@plt>
    11f0:	b	126c <mo_dline+0xf0>
    11f4:	ldr	r0, [r3, #36]	; 0x24
    11f8:	cmp	r0, #0
    11fc:	beq	11c4 <mo_dline+0x48>
    1200:	ldr	r1, [pc, #536]	; 1420 <mo_dline+0x2a4>
    1204:	add	r1, pc, r1
    1208:	bl	b3c <privilegeset_in_set@plt>
    120c:	cmp	r0, #0
    1210:	beq	11c4 <mo_dline+0x48>
    1214:	ldr	r3, [fp, #4]
    1218:	ldr	r0, [r3, #4]
    121c:	bl	adc <valid_temp_time@plt>
    1220:	subs	r3, r0, #0
    1224:	mov	r2, #64	; 0x40
    1228:	movlt	r9, #1
    122c:	movge	r9, #2
    1230:	str	r3, [fp, #-120]	; 0xffffff88
    1234:	sub	r0, fp, #100	; 0x64
    1238:	lsl	r7, r9, #2
    123c:	ldr	r3, [fp, #4]
    1240:	ldr	r6, [r3, r9, lsl #2]
    1244:	mov	r1, r6
    1248:	bl	b24 <rb_strlcpy@plt>
    124c:	ldrb	r3, [r6]
    1250:	cmp	r3, #58	; 0x3a
    1254:	bne	1274 <mo_dline+0xf8>
    1258:	ldr	r1, [pc, #452]	; 1424 <mo_dline+0x2a8>
    125c:	mov	r2, r6
    1260:	add	r1, pc, r1
    1264:	mov	r0, r5
    1268:	bl	af4 <sendto_one_notice@plt>
    126c:	sub	sp, fp, #32
    1270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1274:	mov	r2, #0
    1278:	mov	r0, r6
    127c:	mov	r1, r2
    1280:	bl	9c8 <parse_netmask_strict@plt>
    1284:	sub	r0, r0, #2
    1288:	cmp	r0, #1
    128c:	bls	12a0 <mo_dline+0x124>
    1290:	ldr	r1, [pc, #400]	; 1428 <mo_dline+0x2ac>
    1294:	mov	r2, r6
    1298:	add	r1, pc, r1
    129c:	b	1264 <mo_dline+0xe8>
    12a0:	add	r2, r9, #2
    12a4:	sub	r4, fp, #112	; 0x70
    12a8:	cmp	r2, sl
    12ac:	add	r3, r9, #1
    12b0:	bge	13fc <mo_dline+0x280>
    12b4:	str	r3, [fp, #-124]	; 0xffffff84
    12b8:	ldr	r3, [fp, #4]
    12bc:	ldr	r1, [pc, #360]	; 142c <mo_dline+0x2b0>
    12c0:	add	r7, r3, r7
    12c4:	ldr	r0, [r7, #4]
    12c8:	add	r1, pc, r1
    12cc:	bl	b48 <irccmp@plt>
    12d0:	cmp	r0, #0
    12d4:	ldr	r3, [fp, #-124]	; 0xffffff84
    12d8:	bne	1404 <mo_dline+0x288>
    12dc:	ldr	r3, [r5, #24]
    12e0:	cmp	r3, #0
    12e4:	bne	1310 <mo_dline+0x194>
    12e8:	ldr	r3, [pc, #292]	; 1414 <mo_dline+0x298>
    12ec:	ldr	r1, [pc, #316]	; 1430 <mo_dline+0x2b4>
    12f0:	ldr	r2, [r8, r3]
    12f4:	ldr	r3, [pc, #312]	; 1434 <mo_dline+0x2b8>
    12f8:	add	r1, pc, r1
    12fc:	add	r2, r2, #88	; 0x58
    1300:	add	r3, pc, r3
    1304:	str	r3, [sp]
    1308:	add	r3, r5, #88	; 0x58
    130c:	b	11e8 <mo_dline+0x6c>
    1310:	ldr	r0, [r3, #36]	; 0x24
    1314:	cmp	r0, #0
    1318:	beq	12e8 <mo_dline+0x16c>
    131c:	ldr	r1, [pc, #276]	; 1438 <mo_dline+0x2bc>
    1320:	add	r1, pc, r1
    1324:	bl	b3c <privilegeset_in_set@plt>
    1328:	cmp	r0, #0
    132c:	beq	12e8 <mo_dline+0x16c>
    1330:	add	r3, r9, #3
    1334:	ldr	r7, [r7, #8]
    1338:	cmp	sl, r3
    133c:	ble	1380 <mo_dline+0x204>
    1340:	ldr	r2, [fp, #4]
    1344:	ldr	r9, [r2, r3, lsl #2]
    1348:	cmp	r9, #0
    134c:	beq	1380 <mo_dline+0x204>
    1350:	ldrb	r3, [r9]
    1354:	cmp	r3, #0
    1358:	beq	1380 <mo_dline+0x204>
    135c:	mov	r0, r9
    1360:	bl	aa0 <strlen@plt>
    1364:	add	r0, r0, #8
    1368:	mov	r1, r9
    136c:	bic	r0, r0, #7
    1370:	sub	sp, sp, r0
    1374:	add	r4, sp, #24
    1378:	mov	r0, r4
    137c:	bl	a58 <strcpy@plt>
    1380:	cmp	r7, #0
    1384:	beq	13e0 <mo_dline+0x264>
    1388:	ldr	r3, [pc, #172]	; 143c <mo_dline+0x2c0>
    138c:	mov	r1, r7
    1390:	mov	r0, r5
    1394:	ldr	r2, [r8, r3]
    1398:	str	r7, [sp, #4]
    139c:	ldr	r3, [fp, #-120]	; 0xffffff88
    13a0:	str	r3, [sp, #8]
    13a4:	ldr	r3, [pc, #148]	; 1440 <mo_dline+0x2c4>
    13a8:	str	r6, [sp, #12]
    13ac:	str	r4, [sp, #16]
    13b0:	add	r3, pc, r3
    13b4:	str	r3, [sp]
    13b8:	mov	r3, #0
    13bc:	ldr	r2, [r2]
    13c0:	bl	9e0 <sendto_match_servs@plt>
    13c4:	ldr	r3, [pc, #72]	; 1414 <mo_dline+0x298>
    13c8:	mov	r0, r7
    13cc:	ldr	r1, [r8, r3]
    13d0:	add	r1, r1, #88	; 0x58
    13d4:	bl	ad0 <match@plt>
    13d8:	cmp	r0, #0
    13dc:	beq	126c <mo_dline+0xf0>
    13e0:	mov	r3, r4
    13e4:	mov	r1, r6
    13e8:	ldr	r2, [fp, #-120]	; 0xffffff88
    13ec:	mov	r0, r5
    13f0:	bl	cb4 <apply_dline>
    13f4:	bl	ae8 <check_dlines@plt>
    13f8:	b	126c <mo_dline+0xf0>
    13fc:	cmp	r3, sl
    1400:	bge	13e0 <mo_dline+0x264>
    1404:	mov	r7, #0
    1408:	b	1340 <mo_dline+0x1c4>
    140c:	.word	0x00000a93
    1410:	.word	0x00010e54
    1414:	.word	0x000000ac
    1418:	.word	0x0000099d
    141c:	.word	0x000009c1
    1420:	.word	0x00000994
    1424:	.word	0x00000943
    1428:	.word	0x00000939
    142c:	.word	0x0000093c
    1430:	.word	0x00000879
    1434:	.word	0x0000090c
    1438:	.word	0x000008e7
    143c:	.word	0x000000b0
    1440:	.word	0x00000866

00001444 <me_dline>:
    1444:	ldrh	r3, [r2, #80]	; 0x50
    1448:	push	{r4, r5, r6, r7, fp, lr}
    144c:	add	fp, sp, #20
    1450:	ldr	r5, [fp, #4]
    1454:	cmp	r3, #64	; 0x40
    1458:	bne	14e0 <me_dline+0x9c>
    145c:	ldr	r3, [r2, #24]
    1460:	cmp	r3, #0
    1464:	beq	14e0 <me_dline+0x9c>
    1468:	mov	r4, r2
    146c:	ldr	r0, [r5, #4]
    1470:	bl	b0c <atoi@plt>
    1474:	ldr	r2, [r4, #32]
    1478:	subs	r7, r0, #0
    147c:	add	r1, r4, #163	; 0xa3
    1480:	movgt	r3, #2048	; 0x800
    1484:	movle	r3, #4096	; 0x1000
    1488:	add	r0, r4, #152	; 0x98
    148c:	add	r2, r2, #88	; 0x58
    1490:	bl	b30 <find_shared_conf@plt>
    1494:	cmp	r0, #0
    1498:	beq	14e0 <me_dline+0x9c>
    149c:	ldr	r6, [r5, #8]
    14a0:	ldr	r5, [r5, #12]
    14a4:	mov	r0, r5
    14a8:	bl	aa0 <strlen@plt>
    14ac:	add	r0, r0, #8
    14b0:	mov	r1, r5
    14b4:	bic	r0, r0, #7
    14b8:	sub	sp, sp, r0
    14bc:	mov	r3, sp
    14c0:	mov	r0, r3
    14c4:	bl	a58 <strcpy@plt>
    14c8:	mov	r3, r0
    14cc:	mov	r2, r7
    14d0:	mov	r1, r6
    14d4:	mov	r0, r4
    14d8:	bl	cb4 <apply_dline>
    14dc:	bl	ae8 <check_dlines@plt>
    14e0:	sub	sp, fp, #20
    14e4:	pop	{r4, r5, r6, r7, fp, pc}

000014e8 <apply_undline>:
    14e8:	push	{r4, r5, r6, r7, r8, r9, lr}
    14ec:	mov	r2, #0
    14f0:	mov	r4, r1
    14f4:	sub	sp, sp, #524	; 0x20c
    14f8:	mov	r5, r0
    14fc:	mov	r1, r2
    1500:	mov	r0, r4
    1504:	ldr	r7, [pc, #524]	; 1718 <apply_undline+0x230>
    1508:	bl	a10 <parse_netmask@plt>
    150c:	sub	r0, r0, #2
    1510:	cmp	r0, #1
    1514:	add	r7, pc, r7
    1518:	bls	1538 <apply_undline+0x50>
    151c:	ldr	r1, [pc, #504]	; 171c <apply_undline+0x234>
    1520:	mov	r2, r4
    1524:	add	r1, pc, r1
    1528:	mov	r0, r5
    152c:	bl	af4 <sendto_one_notice@plt>
    1530:	add	sp, sp, #524	; 0x20c
    1534:	pop	{r4, r5, r6, r7, r8, r9, pc}
    1538:	mov	r2, #0
    153c:	mov	r1, #131072	; 0x20000
    1540:	mov	r0, r4
    1544:	bl	b18 <find_exact_conf_by_address@plt>
    1548:	subs	r6, r0, #0
    154c:	bne	1560 <apply_undline+0x78>
    1550:	ldr	r1, [pc, #456]	; 1720 <apply_undline+0x238>
    1554:	mov	r2, r4
    1558:	add	r1, pc, r1
    155c:	b	1528 <apply_undline+0x40>
    1560:	add	r8, sp, #8
    1564:	mov	r2, #512	; 0x200
    1568:	ldr	r1, [r6, #16]
    156c:	mov	r0, r8
    1570:	bl	b24 <rb_strlcpy@plt>
    1574:	ldr	r2, [pc, #424]	; 1724 <apply_undline+0x23c>
    1578:	mov	r3, #0
    157c:	mov	r0, #12
    1580:	ldr	r1, [r7, r2]
    1584:	mul	r2, r0, r3
    1588:	ldr	r4, [r2, r1]
    158c:	cmp	r4, #0
    1590:	bne	1630 <apply_undline+0x148>
    1594:	add	r3, r3, #1
    1598:	cmp	r3, #4
    159c:	bne	1584 <apply_undline+0x9c>
    15a0:	mov	r2, r4
    15a4:	mov	r0, #1
    15a8:	ldr	r1, [r6, #16]
    15ac:	bl	b00 <bandb_del@plt>
    15b0:	ldr	r3, [pc, #368]	; 1728 <apply_undline+0x240>
    15b4:	mov	r0, r5
    15b8:	ldr	r1, [pc, #364]	; 172c <apply_undline+0x244>
    15bc:	ldr	r2, [r7, r3]
    15c0:	ldr	r3, [r6, #16]
    15c4:	add	r1, pc, r1
    15c8:	add	r2, r2, #88	; 0x58
    15cc:	str	r3, [sp]
    15d0:	add	r3, r5, #88	; 0x58
    15d4:	bl	9f8 <sendto_one@plt>
    15d8:	mov	r0, r5
    15dc:	bl	a34 <get_oper_name@plt>
    15e0:	ldr	r2, [pc, #328]	; 1730 <apply_undline+0x248>
    15e4:	mov	r1, r4
    15e8:	ldr	r3, [r6, #16]
    15ec:	add	r2, pc, r2
    15f0:	str	r3, [sp]
    15f4:	mov	r3, r0
    15f8:	mov	r0, #256	; 0x100
    15fc:	bl	a1c <sendto_realops_snomask@plt>
    1600:	mov	r0, r5
    1604:	bl	a34 <get_oper_name@plt>
    1608:	ldr	r1, [pc, #292]	; 1734 <apply_undline+0x24c>
    160c:	mov	r2, r0
    1610:	mov	r0, #7
    1614:	ldr	r3, [r6, #16]
    1618:	add	r1, pc, r1
    161c:	bl	ac4 <ilog@plt>
    1620:	mov	r1, r6
    1624:	ldr	r0, [r6, #16]
    1628:	bl	ab8 <delete_one_address_conf@plt>
    162c:	b	1530 <apply_undline+0x48>
    1630:	ldr	ip, [r4]
    1634:	ldr	r2, [r4, #8]
    1638:	cmp	r6, ip
    163c:	bne	1710 <apply_undline+0x228>
    1640:	cmp	r2, #0
    1644:	ldr	ip, [r4, #4]
    1648:	mov	r9, #0
    164c:	moveq	r0, #12
    1650:	mlaeq	r0, r0, r3, r1
    1654:	strne	ip, [r2, #4]
    1658:	streq	ip, [r0, #4]
    165c:	ldr	r0, [r4, #4]
    1660:	cmp	r0, #0
    1664:	moveq	r0, #12
    1668:	strne	r2, [r0, #8]
    166c:	muleq	r0, r0, r3
    1670:	streq	r2, [r1, r0]
    1674:	mov	r2, #12
    1678:	mov	r0, r4
    167c:	mla	r3, r2, r3, r1
    1680:	ldr	r2, [r3, #8]
    1684:	str	r9, [r4, #4]
    1688:	str	r9, [r4, #8]
    168c:	sub	r2, r2, #1
    1690:	str	r2, [r3, #8]
    1694:	bl	a40 <rb_free_rb_dlink_node@plt>
    1698:	mov	r1, r6
    169c:	ldr	r0, [r6, #16]
    16a0:	bl	ab8 <delete_one_address_conf@plt>
    16a4:	ldr	r3, [pc, #124]	; 1728 <apply_undline+0x240>
    16a8:	mov	r0, r5
    16ac:	ldr	r1, [pc, #132]	; 1738 <apply_undline+0x250>
    16b0:	ldr	r2, [r7, r3]
    16b4:	add	r3, r5, #88	; 0x58
    16b8:	str	r8, [sp]
    16bc:	add	r1, pc, r1
    16c0:	add	r2, r2, #88	; 0x58
    16c4:	bl	9f8 <sendto_one@plt>
    16c8:	mov	r0, r5
    16cc:	bl	a34 <get_oper_name@plt>
    16d0:	ldr	r2, [pc, #100]	; 173c <apply_undline+0x254>
    16d4:	mov	r3, r0
    16d8:	mov	r1, r9
    16dc:	mov	r0, #256	; 0x100
    16e0:	str	r8, [sp]
    16e4:	add	r2, pc, r2
    16e8:	bl	a1c <sendto_realops_snomask@plt>
    16ec:	mov	r0, r5
    16f0:	bl	a34 <get_oper_name@plt>
    16f4:	ldr	r1, [pc, #68]	; 1740 <apply_undline+0x258>
    16f8:	mov	r2, r0
    16fc:	mov	r3, r8
    1700:	mov	r0, #7
    1704:	add	r1, pc, r1
    1708:	bl	ac4 <ilog@plt>
    170c:	b	1530 <apply_undline+0x48>
    1710:	mov	r4, r2
    1714:	b	158c <apply_undline+0xa4>
    1718:	.word	0x00010ae4
    171c:	.word	0x000006ad
    1720:	.word	0x000006e1
    1724:	.word	0x000000a4
    1728:	.word	0x000000ac
    172c:	.word	0x000006f3
    1730:	.word	0x000006f5
    1734:	.word	0x00000696
    1738:	.word	0x0000058f
    173c:	.word	0x0000059c
    1740:	.word	0x000005aa

00001744 <mo_undline>:
    1744:	push	{r4, r5, r6, r7, r8, r9, lr}
    1748:	mov	r4, r2
    174c:	sub	sp, sp, #20
    1750:	ldr	r2, [r2, #24]
    1754:	ldr	r5, [pc, #312]	; 1894 <mo_undline+0x150>
    1758:	ldr	r6, [sp, #48]	; 0x30
    175c:	cmp	r2, #0
    1760:	add	r5, pc, r5
    1764:	bne	179c <mo_undline+0x58>
    1768:	ldr	r3, [pc, #296]	; 1898 <mo_undline+0x154>
    176c:	ldr	r1, [pc, #296]	; 189c <mo_undline+0x158>
    1770:	ldr	r2, [r5, r3]
    1774:	ldr	r3, [pc, #292]	; 18a0 <mo_undline+0x15c>
    1778:	add	r1, pc, r1
    177c:	add	r2, r2, #88	; 0x58
    1780:	add	r3, pc, r3
    1784:	str	r3, [sp, #48]	; 0x30
    1788:	add	r3, r4, #88	; 0x58
    178c:	mov	r0, r4
    1790:	add	sp, sp, #20
    1794:	pop	{r4, r5, r6, r7, r8, r9, lr}
    1798:	b	9f8 <sendto_one@plt>
    179c:	ldr	r0, [r2, #36]	; 0x24
    17a0:	cmp	r0, #0
    17a4:	beq	1768 <mo_undline+0x24>
    17a8:	ldr	r1, [pc, #244]	; 18a4 <mo_undline+0x160>
    17ac:	mov	r7, r3
    17b0:	add	r1, pc, r1
    17b4:	bl	b3c <privilegeset_in_set@plt>
    17b8:	cmp	r0, #0
    17bc:	beq	1768 <mo_undline+0x24>
    17c0:	cmp	r7, #3
    17c4:	ldr	r8, [r6, #4]
    17c8:	bgt	17e0 <mo_undline+0x9c>
    17cc:	mov	r1, r8
    17d0:	mov	r0, r4
    17d4:	add	sp, sp, #20
    17d8:	pop	{r4, r5, r6, r7, r8, r9, lr}
    17dc:	b	14e8 <apply_undline>
    17e0:	ldr	r1, [pc, #192]	; 18a8 <mo_undline+0x164>
    17e4:	ldr	r0, [r6, #8]
    17e8:	add	r1, pc, r1
    17ec:	bl	b48 <irccmp@plt>
    17f0:	subs	r9, r0, #0
    17f4:	bne	17cc <mo_undline+0x88>
    17f8:	ldr	r2, [r4, #24]
    17fc:	ldr	r3, [pc, #148]	; 1898 <mo_undline+0x154>
    1800:	cmp	r2, #0
    1804:	ldr	r7, [r5, r3]
    1808:	bne	182c <mo_undline+0xe8>
    180c:	ldr	r3, [pc, #152]	; 18ac <mo_undline+0x168>
    1810:	add	r2, r7, #88	; 0x58
    1814:	ldr	r1, [pc, #148]	; 18b0 <mo_undline+0x16c>
    1818:	add	r3, pc, r3
    181c:	add	r1, pc, r1
    1820:	str	r3, [sp, #48]	; 0x30
    1824:	add	r3, r4, #88	; 0x58
    1828:	b	178c <mo_undline+0x48>
    182c:	ldr	r0, [r2, #36]	; 0x24
    1830:	cmp	r0, #0
    1834:	beq	180c <mo_undline+0xc8>
    1838:	ldr	r1, [pc, #116]	; 18b4 <mo_undline+0x170>
    183c:	add	r1, pc, r1
    1840:	bl	b3c <privilegeset_in_set@plt>
    1844:	cmp	r0, #0
    1848:	beq	180c <mo_undline+0xc8>
    184c:	ldr	r3, [pc, #100]	; 18b8 <mo_undline+0x174>
    1850:	mov	r0, r4
    1854:	ldr	r6, [r6, #12]
    1858:	ldr	r2, [r5, r3]
    185c:	ldr	r3, [pc, #88]	; 18bc <mo_undline+0x178>
    1860:	mov	r1, r6
    1864:	add	r3, pc, r3
    1868:	stm	sp, {r3, r6, r8}
    186c:	mov	r3, r9
    1870:	ldr	r2, [r2]
    1874:	bl	9e0 <sendto_match_servs@plt>
    1878:	add	r1, r7, #88	; 0x58
    187c:	mov	r0, r6
    1880:	bl	ad0 <match@plt>
    1884:	cmp	r0, #0
    1888:	bne	17cc <mo_undline+0x88>
    188c:	add	sp, sp, #20
    1890:	pop	{r4, r5, r6, r7, r8, r9, pc}
    1894:	.word	0x00010898
    1898:	.word	0x000000ac
    189c:	.word	0x000003f9
    18a0:	.word	0x00000585
    18a4:	.word	0x000003e8
    18a8:	.word	0x0000041c
    18ac:	.word	0x000003f4
    18b0:	.word	0x00000355
    18b4:	.word	0x000003cb
    18b8:	.word	0x000000b0
    18bc:	.word	0x000004a9

000018c0 <me_undline>:
    18c0:	ldrh	r3, [r2, #80]	; 0x50
    18c4:	push	{r4, r5, r6, lr}
    18c8:	ldr	r5, [sp, #16]
    18cc:	cmp	r3, #64	; 0x40
    18d0:	popne	{r4, r5, r6, pc}
    18d4:	ldr	r3, [r2, #24]
    18d8:	cmp	r3, #0
    18dc:	popeq	{r4, r5, r6, pc}
    18e0:	add	r1, r2, #163	; 0xa3
    18e4:	add	r0, r2, #152	; 0x98
    18e8:	mov	r4, r2
    18ec:	ldr	r2, [r2, #32]
    18f0:	mov	r3, #8192	; 0x2000
    18f4:	add	r2, r2, #88	; 0x58
    18f8:	bl	b30 <find_shared_conf@plt>
    18fc:	cmp	r0, #0
    1900:	popeq	{r4, r5, r6, pc}
    1904:	mov	r0, r4
    1908:	ldr	r1, [r5, #4]
    190c:	pop	{r4, r5, r6, lr}
    1910:	b	14e8 <apply_undline>

Disassembly of section .fini:

00001914 <_fini>:
    1914:	push	{r3, lr}
    1918:	pop	{r3, pc}
