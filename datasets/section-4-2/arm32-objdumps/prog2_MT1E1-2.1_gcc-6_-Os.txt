
../repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010b04 <.init>:
   10b04:	push	{r3, lr}
   10b08:	bl	10ea0 <_start@@Base+0x3c>
   10b0c:	pop	{r3, pc}

Disassembly of section .plt:

00010b10 <calloc@plt-0x14>:
   10b10:	push	{lr}		; (str lr, [sp, #-4]!)
   10b14:	ldr	lr, [pc, #4]	; 10b20 <calloc@plt-0x4>
   10b18:	add	lr, pc, lr
   10b1c:	ldr	pc, [lr, #8]!
   10b20:	andeq	r1, r1, r0, ror #9

00010b24 <calloc@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b30 <strcmp@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b3c <free@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b48 <realloc@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b54 <strcpy@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b60 <puts@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b6c <malloc@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b78 <__libc_start_main@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b84 <__gmon_start__@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b90 <strlen@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1176]!	; 0x498

00010b9c <fprintf@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1168]!	; 0x490

00010ba8 <sprintf@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1160]!	; 0x488

00010bb4 <fputs@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #69632	; 0x11000
   10bbc:	ldr	pc, [ip, #1152]!	; 0x480

00010bc0 <abort@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1144]!	; 0x478

Disassembly of section .text:

00010bcc <main@@Base>:
   10bcc:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10bd0:	bl	11140 <vetor_novo@@Base>
   10bd4:	ldr	r5, [pc, #596]	; 10e30 <main@@Base+0x264>
   10bd8:	mov	r4, #0
   10bdc:	mov	r8, r5
   10be0:	mov	r7, r0
   10be4:	mov	r2, r4
   10be8:	ldr	r1, [r5, r4, lsl #2]
   10bec:	mov	r0, r7
   10bf0:	add	r4, r4, #1
   10bf4:	bl	11284 <vetor_insere@@Base>
   10bf8:	cmp	r4, #4
   10bfc:	bne	10be4 <main@@Base+0x18>
   10c00:	bl	114f4 <lista_nova@@Base>
   10c04:	ldr	r6, [pc, #552]	; 10e34 <main@@Base+0x268>
   10c08:	mov	r5, #0
   10c0c:	mov	r4, r0
   10c10:	ldr	r1, [r6, r5, lsl #2]
   10c14:	mov	r0, r4
   10c18:	add	r5, r5, #1
   10c1c:	bl	110a8 <insere_carta@@Base>
   10c20:	cmp	r5, #52	; 0x34
   10c24:	bne	10c10 <main@@Base+0x44>
   10c28:	bl	114f4 <lista_nova@@Base>
   10c2c:	mov	r5, #0
   10c30:	ldr	r9, [pc, #512]	; 10e38 <main@@Base+0x26c>
   10c34:	mov	sl, r5
   10c38:	mov	r6, r0
   10c3c:	ldr	r1, [r9, r5, lsl #2]
   10c40:	mov	r2, sl
   10c44:	mov	r0, r6
   10c48:	add	r5, r5, #1
   10c4c:	bl	11580 <lista_insere@@Base>
   10c50:	cmp	r5, #13
   10c54:	bne	10c3c <main@@Base+0x70>
   10c58:	ldr	r5, [pc, #476]	; 10e3c <main@@Base+0x270>
   10c5c:	mov	r1, r6
   10c60:	mov	r0, r4
   10c64:	ldr	r9, [r5]
   10c68:	bl	10f8c <tira_carta@@Base>
   10c6c:	ldr	r1, [pc, #460]	; 10e40 <main@@Base+0x274>
   10c70:	ldr	fp, [pc, #460]	; 10e44 <main@@Base+0x278>
   10c74:	mov	sl, #0
   10c78:	mov	r2, r0
   10c7c:	mov	r0, r9
   10c80:	bl	10b9c <fprintf@plt>
   10c84:	mov	r1, r6
   10c88:	mov	r0, r4
   10c8c:	ldr	r9, [r5]
   10c90:	bl	10f8c <tira_carta@@Base>
   10c94:	ldr	r1, [pc, #428]	; 10e48 <main@@Base+0x27c>
   10c98:	mov	r2, r0
   10c9c:	mov	r0, r9
   10ca0:	bl	10b9c <fprintf@plt>
   10ca4:	mov	r1, r6
   10ca8:	mov	r0, r4
   10cac:	ldr	r9, [r5]
   10cb0:	bl	10f8c <tira_carta@@Base>
   10cb4:	ldr	r1, [pc, #400]	; 10e4c <main@@Base+0x280>
   10cb8:	mov	r2, r0
   10cbc:	mov	r0, r9
   10cc0:	bl	10b9c <fprintf@plt>
   10cc4:	ldr	r1, [r8, #212]	; 0xd4
   10cc8:	mov	r0, r4
   10ccc:	bl	110a8 <insere_carta@@Base>
   10cd0:	ldr	r1, [r8, #216]	; 0xd8
   10cd4:	mov	r0, r4
   10cd8:	bl	110a8 <insere_carta@@Base>
   10cdc:	ldr	r1, [r8, #220]	; 0xdc
   10ce0:	mov	r0, r4
   10ce4:	bl	110a8 <insere_carta@@Base>
   10ce8:	bl	11140 <vetor_novo@@Base>
   10cec:	mov	r9, r0
   10cf0:	mov	r1, r4
   10cf4:	mov	r2, r6
   10cf8:	mov	r0, r7
   10cfc:	bl	10fd8 <faz_jogada@@Base>
   10d00:	subs	r1, r0, #0
   10d04:	beq	10d14 <main@@Base+0x148>
   10d08:	mov	r2, sl
   10d0c:	mov	r0, r9
   10d10:	bl	11284 <vetor_insere@@Base>
   10d14:	mov	r0, r7
   10d18:	bl	11240 <vetor_tamanho@@Base>
   10d1c:	cmp	r0, #4
   10d20:	beq	10d30 <main@@Base+0x164>
   10d24:	ldr	r1, [r5]
   10d28:	mov	r0, fp
   10d2c:	bl	10bb4 <fputs@plt>
   10d30:	add	sl, sl, #1
   10d34:	cmp	sl, #13
   10d38:	bne	10cf0 <main@@Base+0x124>
   10d3c:	ldr	r0, [pc, #268]	; 10e50 <main@@Base+0x284>
   10d40:	bl	10b60 <puts@plt>
   10d44:	mov	r1, #0
   10d48:	ldr	r3, [r9]
   10d4c:	cmp	r1, #2
   10d50:	cmple	r1, r3
   10d54:	movlt	fp, #1
   10d58:	movge	fp, #0
   10d5c:	blt	10e04 <main@@Base+0x238>
   10d60:	mov	r0, r9
   10d64:	bl	11164 <vetor_apaga@@Base>
   10d68:	bl	11140 <vetor_novo@@Base>
   10d6c:	mov	r9, fp
   10d70:	ldr	fp, [pc, #220]	; 10e54 <main@@Base+0x288>
   10d74:	mov	sl, r0
   10d78:	mov	r2, r9
   10d7c:	ldr	r1, [fp, r9, lsl #2]
   10d80:	mov	r0, sl
   10d84:	add	r9, r9, #1
   10d88:	bl	11284 <vetor_insere@@Base>
   10d8c:	cmp	r9, #13
   10d90:	bne	10d78 <main@@Base+0x1ac>
   10d94:	ldr	r0, [pc, #188]	; 10e58 <main@@Base+0x28c>
   10d98:	bl	10b60 <puts@plt>
   10d9c:	mov	r9, #0
   10da0:	ldr	r2, [r8, r9, lsl #2]
   10da4:	mov	r0, sl
   10da8:	mov	r1, r2
   10dac:	str	r2, [sp, #4]
   10db0:	bl	11060 <numero_vitorias@@Base>
   10db4:	ldr	fp, [r5]
   10db8:	ldr	r2, [sp, #4]
   10dbc:	ldr	r1, [pc, #152]	; 10e5c <main@@Base+0x290>
   10dc0:	add	r9, r9, #1
   10dc4:	mov	r3, r0
   10dc8:	mov	r0, fp
   10dcc:	bl	10b9c <fprintf@plt>
   10dd0:	cmp	r9, #4
   10dd4:	bne	10da0 <main@@Base+0x1d4>
   10dd8:	mov	r0, r7
   10ddc:	bl	11164 <vetor_apaga@@Base>
   10de0:	mov	r0, r4
   10de4:	bl	11518 <lista_apaga@@Base>
   10de8:	mov	r0, r6
   10dec:	bl	11518 <lista_apaga@@Base>
   10df0:	mov	r0, sl
   10df4:	bl	11164 <vetor_apaga@@Base>
   10df8:	mov	r0, #0
   10dfc:	add	sp, sp, #12
   10e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e04:	mov	r0, r9
   10e08:	add	sl, r1, #1
   10e0c:	ldr	fp, [r5]
   10e10:	bl	11250 <vetor_elemento@@Base>
   10e14:	ldr	r1, [pc, #68]	; 10e60 <main@@Base+0x294>
   10e18:	mov	r2, sl
   10e1c:	mov	r3, r0
   10e20:	mov	r0, fp
   10e24:	bl	10b9c <fprintf@plt>
   10e28:	mov	r1, sl
   10e2c:	b	10d48 <main@@Base+0x17c>
   10e30:	andeq	r2, r2, r0, asr r0
   10e34:	andeq	r2, r2, r0, rrx
   10e38:	andeq	r2, r2, r0, lsr r1
   10e3c:	muleq	r2, r8, r1
   10e40:	andeq	r1, r1, lr, lsl #17
   10e44:	andeq	r1, r1, r4, ror #17
   10e48:	andeq	r1, r1, fp, lsr #17
   10e4c:	andeq	r1, r1, r7, asr #17
   10e50:	andeq	r1, r1, r1, lsl r9
   10e54:	andeq	r2, r2, r4, ror #2
   10e58:	andeq	r1, r1, r0, lsl r9
   10e5c:	andeq	r1, r1, r5, asr #18
   10e60:	andeq	r1, r1, r6, lsr r9

00010e64 <_start@@Base>:
   10e64:	mov	fp, #0
   10e68:	mov	lr, #0
   10e6c:	pop	{r1}		; (ldr r1, [sp], #4)
   10e70:	mov	r2, sp
   10e74:	push	{r2}		; (str r2, [sp, #-4]!)
   10e78:	push	{r0}		; (str r0, [sp, #-4]!)
   10e7c:	ldr	ip, [pc, #16]	; 10e94 <_start@@Base+0x30>
   10e80:	push	{ip}		; (str ip, [sp, #-4]!)
   10e84:	ldr	r0, [pc, #12]	; 10e98 <_start@@Base+0x34>
   10e88:	ldr	r3, [pc, #12]	; 10e9c <_start@@Base+0x38>
   10e8c:	bl	10b78 <__libc_start_main@plt>
   10e90:	bl	10bc0 <abort@plt>
   10e94:	andeq	r1, r1, r0, ror r8
   10e98:	andeq	r0, r1, ip, asr #23
   10e9c:	andeq	r1, r1, r0, lsl r8
   10ea0:	ldr	r3, [pc, #20]	; 10ebc <_start@@Base+0x58>
   10ea4:	ldr	r2, [pc, #20]	; 10ec0 <_start@@Base+0x5c>
   10ea8:	add	r3, pc, r3
   10eac:	ldr	r2, [r3, r2]
   10eb0:	cmp	r2, #0
   10eb4:	bxeq	lr
   10eb8:	b	10b84 <__gmon_start__@plt>
   10ebc:	andeq	r1, r1, r0, asr r1
   10ec0:	andeq	r0, r0, r4, asr #32
   10ec4:	ldr	r3, [pc, #28]	; 10ee8 <_start@@Base+0x84>
   10ec8:	ldr	r0, [pc, #28]	; 10eec <_start@@Base+0x88>
   10ecc:	sub	r3, r3, r0
   10ed0:	cmp	r3, #6
   10ed4:	bxls	lr
   10ed8:	ldr	r3, [pc, #16]	; 10ef0 <_start@@Base+0x8c>
   10edc:	cmp	r3, #0
   10ee0:	bxeq	lr
   10ee4:	bx	r3
   10ee8:	muleq	r2, fp, r1
   10eec:	muleq	r2, r8, r1
   10ef0:	andeq	r0, r0, r0
   10ef4:	ldr	r1, [pc, #36]	; 10f20 <_start@@Base+0xbc>
   10ef8:	ldr	r0, [pc, #36]	; 10f24 <_start@@Base+0xc0>
   10efc:	sub	r1, r1, r0
   10f00:	asr	r1, r1, #2
   10f04:	add	r1, r1, r1, lsr #31
   10f08:	asrs	r1, r1, #1
   10f0c:	bxeq	lr
   10f10:	ldr	r3, [pc, #16]	; 10f28 <_start@@Base+0xc4>
   10f14:	cmp	r3, #0
   10f18:	bxeq	lr
   10f1c:	bx	r3
   10f20:	muleq	r2, r8, r1
   10f24:	muleq	r2, r8, r1
   10f28:	andeq	r0, r0, r0
   10f2c:	push	{r4, lr}
   10f30:	ldr	r4, [pc, #24]	; 10f50 <_start@@Base+0xec>
   10f34:	ldrb	r3, [r4]
   10f38:	cmp	r3, #0
   10f3c:	popne	{r4, pc}
   10f40:	bl	10ec4 <_start@@Base+0x60>
   10f44:	mov	r3, #1
   10f48:	strb	r3, [r4]
   10f4c:	pop	{r4, pc}
   10f50:	muleq	r2, ip, r1
   10f54:	ldr	r0, [pc, #40]	; 10f84 <_start@@Base+0x120>
   10f58:	ldr	r3, [r0]
   10f5c:	cmp	r3, #0
   10f60:	bne	10f68 <_start@@Base+0x104>
   10f64:	b	10ef4 <_start@@Base+0x90>
   10f68:	ldr	r3, [pc, #24]	; 10f88 <_start@@Base+0x124>
   10f6c:	cmp	r3, #0
   10f70:	beq	10f64 <_start@@Base+0x100>
   10f74:	push	{r4, lr}
   10f78:	blx	r3
   10f7c:	pop	{r4, lr}
   10f80:	b	10ef4 <_start@@Base+0x90>
   10f84:	andeq	r1, r2, r4, lsl pc
   10f88:	andeq	r0, r0, r0

00010f8c <tira_carta@@Base>:
   10f8c:	push	{r4, r5, r6, r7, r8, lr}
   10f90:	mov	r6, r0
   10f94:	ldr	r3, [r1]
   10f98:	ldr	r7, [r6]
   10f9c:	mov	r4, #0
   10fa0:	ldm	r3, {r0, r5}
   10fa4:	ldr	r8, [r7]
   10fa8:	mov	r1, r8
   10fac:	bl	10b30 <strcmp@plt>
   10fb0:	cmp	r0, #0
   10fb4:	bne	10fcc <tira_carta@@Base+0x40>
   10fb8:	mov	r1, r7
   10fbc:	mov	r0, r6
   10fc0:	bl	11624 <lista_remove@@Base>
   10fc4:	mov	r0, r4
   10fc8:	pop	{r4, r5, r6, r7, r8, pc}
   10fcc:	ldm	r5, {r0, r5}
   10fd0:	add	r4, r4, #1
   10fd4:	b	10fa8 <tira_carta@@Base+0x1c>

00010fd8 <faz_jogada@@Base>:
   10fd8:	push	{r4, r5, r6, r7, r8, lr}
   10fdc:	mov	r5, r0
   10fe0:	ldr	r0, [r0]
   10fe4:	mov	r7, r1
   10fe8:	mov	r8, r2
   10fec:	lsl	r0, r0, #2
   10ff0:	bl	10b6c <malloc@plt>
   10ff4:	mov	r4, #0
   10ff8:	mov	r6, r0
   10ffc:	ldr	r1, [r5]
   11000:	cmp	r4, r1
   11004:	blt	11030 <faz_jogada@@Base+0x58>
   11008:	mvn	r4, #0
   1100c:	mov	r2, r4
   11010:	mov	r3, #0
   11014:	cmp	r3, r1
   11018:	blt	11048 <faz_jogada@@Base+0x70>
   1101c:	mov	r0, r6
   11020:	bl	10b3c <free@plt>
   11024:	ldr	r3, [r5, #8]
   11028:	ldr	r0, [r3, r4, lsl #2]
   1102c:	pop	{r4, r5, r6, r7, r8, pc}
   11030:	mov	r1, r8
   11034:	mov	r0, r7
   11038:	bl	10f8c <tira_carta@@Base>
   1103c:	str	r0, [r6, r4, lsl #2]
   11040:	add	r4, r4, #1
   11044:	b	10ffc <faz_jogada@@Base+0x24>
   11048:	ldr	r0, [r6, r3, lsl #2]
   1104c:	cmp	r2, r0
   11050:	movlt	r4, r3
   11054:	movlt	r2, r0
   11058:	add	r3, r3, #1
   1105c:	b	11014 <faz_jogada@@Base+0x3c>

00011060 <numero_vitorias@@Base>:
   11060:	push	{r4, r5, r6, r7, r8, lr}
   11064:	mov	r4, #0
   11068:	ldr	r7, [r0]
   1106c:	mov	r6, r0
   11070:	mov	r8, r1
   11074:	mov	r5, r4
   11078:	cmp	r5, r7
   1107c:	blt	11088 <numero_vitorias@@Base+0x28>
   11080:	mov	r0, r4
   11084:	pop	{r4, r5, r6, r7, r8, pc}
   11088:	ldr	r3, [r6, #8]
   1108c:	mov	r0, r8
   11090:	ldr	r1, [r3, r5, lsl #2]
   11094:	bl	10b30 <strcmp@plt>
   11098:	add	r5, r5, #1
   1109c:	cmp	r0, #0
   110a0:	addeq	r4, r4, #1
   110a4:	b	11078 <numero_vitorias@@Base+0x18>

000110a8 <insere_carta@@Base>:
   110a8:	cmp	r1, #7
   110ac:	push	{r0, r1, r4, lr}
   110b0:	mov	r4, r0
   110b4:	bgt	110e0 <insere_carta@@Base+0x38>
   110b8:	add	r2, r1, #50	; 0x32
   110bc:	add	r0, sp, #4
   110c0:	ldr	r1, [pc, #96]	; 11128 <insere_carta@@Base+0x80>
   110c4:	bl	10ba8 <sprintf@plt>
   110c8:	ldr	r2, [r4]
   110cc:	add	r1, sp, #4
   110d0:	mov	r0, r4
   110d4:	bl	11580 <lista_insere@@Base>
   110d8:	add	sp, sp, #8
   110dc:	pop	{r4, pc}
   110e0:	cmp	r1, #8
   110e4:	ldreq	r1, [pc, #64]	; 1112c <insere_carta@@Base+0x84>
   110e8:	beq	1111c <insere_carta@@Base+0x74>
   110ec:	cmp	r1, #9
   110f0:	ldreq	r1, [pc, #56]	; 11130 <insere_carta@@Base+0x88>
   110f4:	beq	1111c <insere_carta@@Base+0x74>
   110f8:	cmp	r1, #10
   110fc:	ldreq	r1, [pc, #48]	; 11134 <insere_carta@@Base+0x8c>
   11100:	beq	1111c <insere_carta@@Base+0x74>
   11104:	cmp	r1, #11
   11108:	ldreq	r1, [pc, #40]	; 11138 <insere_carta@@Base+0x90>
   1110c:	beq	1111c <insere_carta@@Base+0x74>
   11110:	cmp	r1, #12
   11114:	bne	110c8 <insere_carta@@Base+0x20>
   11118:	ldr	r1, [pc, #28]	; 1113c <insere_carta@@Base+0x94>
   1111c:	add	r0, sp, #4
   11120:	bl	10b54 <strcpy@plt>
   11124:	b	110c8 <insere_carta@@Base+0x20>
   11128:	andeq	r1, r1, r0, lsl #17
   1112c:	andeq	r1, r1, r3, lsl #17
   11130:	andeq	r1, r1, r6, lsl #17
   11134:	andeq	r1, r1, r8, lsl #17
   11138:	andeq	r1, r1, sl, lsl #17
   1113c:	andeq	r1, r1, ip, lsl #17

00011140 <vetor_novo@@Base>:
   11140:	push	{r4, lr}
   11144:	mov	r0, #12
   11148:	bl	10b6c <malloc@plt>
   1114c:	cmp	r0, #0
   11150:	movne	r3, #0
   11154:	strne	r3, [r0]
   11158:	strne	r3, [r0, #4]
   1115c:	strne	r3, [r0, #8]
   11160:	pop	{r4, pc}

00011164 <vetor_apaga@@Base>:
   11164:	push	{r4, r5, r6, lr}
   11168:	subs	r4, r0, #0
   1116c:	movne	r5, #0
   11170:	bne	11188 <vetor_apaga@@Base+0x24>
   11174:	pop	{r4, r5, r6, pc}
   11178:	ldr	r3, [r4, #8]
   1117c:	ldr	r0, [r3, r5, lsl #2]
   11180:	bl	10b3c <free@plt>
   11184:	add	r5, r5, #1
   11188:	ldr	r3, [r4]
   1118c:	cmp	r5, r3
   11190:	blt	11178 <vetor_apaga@@Base+0x14>
   11194:	ldr	r0, [r4, #8]
   11198:	bl	10b3c <free@plt>
   1119c:	mov	r0, r4
   111a0:	pop	{r4, r5, r6, lr}
   111a4:	b	10b3c <free@plt>

000111a8 <vetor_atribui@@Base>:
   111a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   111ac:	mov	r5, r0
   111b0:	clz	r0, r0
   111b4:	lsr	r0, r0, #5
   111b8:	orrs	r3, r0, r1, lsr #31
   111bc:	beq	111cc <vetor_atribui@@Base+0x24>
   111c0:	mvn	r4, #0
   111c4:	mov	r0, r4
   111c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   111cc:	ldr	r3, [r5]
   111d0:	mov	r4, r1
   111d4:	cmp	r1, r3
   111d8:	bge	111c0 <vetor_atribui@@Base+0x18>
   111dc:	mov	r0, r2
   111e0:	mov	r9, r2
   111e4:	bl	10b90 <strlen@plt>
   111e8:	ldr	r6, [r5, #8]
   111ec:	lsl	sl, r4, #2
   111f0:	ldr	r7, [r6, r4, lsl #2]
   111f4:	mov	r8, r0
   111f8:	mov	r0, r7
   111fc:	bl	10b90 <strlen@plt>
   11200:	cmp	r8, r0
   11204:	bhi	1121c <vetor_atribui@@Base+0x74>
   11208:	ldr	r3, [r5, #8]
   1120c:	mov	r1, r9
   11210:	ldr	r0, [r3, sl]
   11214:	bl	10b54 <strcpy@plt>
   11218:	b	111c4 <vetor_atribui@@Base+0x1c>
   1121c:	add	r1, r8, #1
   11220:	mov	r0, r7
   11224:	bl	10b48 <realloc@plt>
   11228:	ldr	r3, [r5, #8]
   1122c:	str	r0, [r6, r4, lsl #2]
   11230:	ldr	r3, [r3, r4, lsl #2]
   11234:	cmp	r3, #0
   11238:	bne	11208 <vetor_atribui@@Base+0x60>
   1123c:	b	111c0 <vetor_atribui@@Base+0x18>

00011240 <vetor_tamanho@@Base>:
   11240:	cmp	r0, #0
   11244:	ldrne	r0, [r0]
   11248:	mvneq	r0, #0
   1124c:	bx	lr

00011250 <vetor_elemento@@Base>:
   11250:	lsr	r3, r1, #31
   11254:	cmp	r0, #0
   11258:	orreq	r3, r3, #1
   1125c:	cmp	r3, #0
   11260:	bne	1127c <vetor_elemento@@Base+0x2c>
   11264:	ldr	r2, [r0]
   11268:	cmp	r1, r2
   1126c:	bge	1127c <vetor_elemento@@Base+0x2c>
   11270:	ldr	r3, [r0, #8]
   11274:	ldr	r0, [r3, r1, lsl #2]
   11278:	bx	lr
   1127c:	mov	r0, #0
   11280:	bx	lr

00011284 <vetor_insere@@Base>:
   11284:	push	{r4, r5, r6, r7, r8, lr}
   11288:	mov	r4, r0
   1128c:	clz	r0, r0
   11290:	lsr	r0, r0, #5
   11294:	orrs	r3, r0, r2, lsr #31
   11298:	beq	112a8 <vetor_insere@@Base+0x24>
   1129c:	mvn	r5, #0
   112a0:	mov	r0, r5
   112a4:	pop	{r4, r5, r6, r7, r8, pc}
   112a8:	ldr	r3, [r4]
   112ac:	mov	r5, r2
   112b0:	cmp	r2, r3
   112b4:	bgt	1129c <vetor_insere@@Base+0x18>
   112b8:	ldr	r2, [r4, #4]
   112bc:	mov	r8, r1
   112c0:	cmp	r3, r2
   112c4:	beq	11318 <vetor_insere@@Base+0x94>
   112c8:	ldr	r6, [r4]
   112cc:	sub	r3, r6, #1
   112d0:	lsl	r2, r6, #2
   112d4:	cmp	r3, r5
   112d8:	sub	r1, r2, #4
   112dc:	ldr	r7, [r4, #8]
   112e0:	bge	11348 <vetor_insere@@Base+0xc4>
   112e4:	mov	r0, r8
   112e8:	bl	10b90 <strlen@plt>
   112ec:	mov	r1, #1
   112f0:	add	r0, r0, r1
   112f4:	bl	10b24 <calloc@plt>
   112f8:	cmp	r0, #0
   112fc:	str	r0, [r7, r5, lsl #2]
   11300:	beq	1129c <vetor_insere@@Base+0x18>
   11304:	mov	r1, r8
   11308:	add	r6, r6, #1
   1130c:	bl	10b54 <strcpy@plt>
   11310:	str	r6, [r4]
   11314:	b	112a0 <vetor_insere@@Base+0x1c>
   11318:	cmp	r3, #0
   1131c:	moveq	r3, #1
   11320:	lslne	r3, r3, #1
   11324:	str	r3, [r4, #4]
   11328:	ldr	r1, [r4, #4]
   1132c:	ldr	r0, [r4, #8]
   11330:	lsl	r1, r1, #2
   11334:	bl	10b48 <realloc@plt>
   11338:	cmp	r0, #0
   1133c:	str	r0, [r4, #8]
   11340:	bne	112c8 <vetor_insere@@Base+0x44>
   11344:	b	1129c <vetor_insere@@Base+0x18>
   11348:	ldr	r0, [r7, r1]
   1134c:	sub	r3, r3, #1
   11350:	str	r0, [r7, r2]
   11354:	mov	r2, r1
   11358:	b	112d4 <vetor_insere@@Base+0x50>

0001135c <vetor_remove@@Base>:
   1135c:	push	{r4, r5, r6, lr}
   11360:	mov	r5, r0
   11364:	clz	r0, r0
   11368:	lsr	r0, r0, #5
   1136c:	orrs	r3, r0, r1, lsr #31
   11370:	bne	113d4 <vetor_remove@@Base+0x78>
   11374:	ldr	r3, [r5]
   11378:	cmp	r1, r3
   1137c:	bge	113d4 <vetor_remove@@Base+0x78>
   11380:	ldr	r3, [r5, #8]
   11384:	mov	r4, r1
   11388:	lsl	r6, r1, #2
   1138c:	ldr	r0, [r3, r1, lsl #2]
   11390:	bl	10b3c <free@plt>
   11394:	add	r4, r4, #1
   11398:	mov	r3, r6
   1139c:	ldr	r2, [r5]
   113a0:	add	r1, r3, #4
   113a4:	cmp	r4, r2
   113a8:	blt	113bc <vetor_remove@@Base+0x60>
   113ac:	sub	r2, r2, #1
   113b0:	str	r2, [r5]
   113b4:	mov	r0, #0
   113b8:	pop	{r4, r5, r6, pc}
   113bc:	ldr	r2, [r5, #8]
   113c0:	add	r4, r4, #1
   113c4:	ldr	r0, [r2, r1]
   113c8:	str	r0, [r2, r3]
   113cc:	mov	r3, r1
   113d0:	b	1139c <vetor_remove@@Base+0x40>
   113d4:	mvn	r0, #0
   113d8:	pop	{r4, r5, r6, pc}

000113dc <vetor_pesquisa@@Base>:
   113dc:	push	{r4, r5, r6, r7, r8, lr}
   113e0:	subs	r5, r0, #0
   113e4:	movne	r6, r1
   113e8:	ldrne	r7, [r5]
   113ec:	movne	r4, #0
   113f0:	bne	1141c <vetor_pesquisa@@Base+0x40>
   113f4:	mvn	r4, #0
   113f8:	mov	r0, r4
   113fc:	pop	{r4, r5, r6, r7, r8, pc}
   11400:	ldr	r3, [r5, #8]
   11404:	mov	r1, r6
   11408:	ldr	r0, [r3, r4, lsl #2]
   1140c:	bl	10b30 <strcmp@plt>
   11410:	cmp	r0, #0
   11414:	beq	113f8 <vetor_pesquisa@@Base+0x1c>
   11418:	add	r4, r4, #1
   1141c:	cmp	r4, r7
   11420:	blt	11400 <vetor_pesquisa@@Base+0x24>
   11424:	b	113f4 <vetor_pesquisa@@Base+0x18>

00011428 <vetor_ordena@@Base>:
   11428:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1142c:	subs	r5, r0, #0
   11430:	movne	r4, #1
   11434:	bne	1147c <vetor_ordena@@Base+0x54>
   11438:	mvn	r0, #0
   1143c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11440:	ldr	r8, [r5, #8]
   11444:	mov	r6, r4
   11448:	add	r7, r8, r4, lsl #2
   1144c:	ldr	r9, [r8, r4, lsl #2]
   11450:	ldr	r1, [r7, #-4]
   11454:	mov	r0, r9
   11458:	bl	10b30 <strcmp@plt>
   1145c:	cmp	r0, #0
   11460:	bge	11474 <vetor_ordena@@Base+0x4c>
   11464:	ldr	r3, [r7, #-4]!
   11468:	subs	r6, r6, #1
   1146c:	str	r3, [r7, #4]
   11470:	bne	11450 <vetor_ordena@@Base+0x28>
   11474:	add	r4, r4, #1
   11478:	str	r9, [r8, r6, lsl #2]
   1147c:	ldr	r3, [r5]
   11480:	cmp	r4, r3
   11484:	blt	11440 <vetor_ordena@@Base+0x18>
   11488:	mov	r0, #0
   1148c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011490 <novo_str@@Base>:
   11490:	push	{r4, r5, r6, r7, r8, lr}
   11494:	mov	r7, r0
   11498:	mov	r0, #12
   1149c:	bl	10b6c <malloc@plt>
   114a0:	subs	r4, r0, #0
   114a4:	beq	114d8 <novo_str@@Base+0x48>
   114a8:	mov	r0, r7
   114ac:	bl	10b90 <strlen@plt>
   114b0:	mov	r6, #0
   114b4:	add	r0, r0, #1
   114b8:	bl	10b6c <malloc@plt>
   114bc:	cmp	r0, #0
   114c0:	mov	r5, r0
   114c4:	str	r0, [r4]
   114c8:	bne	114e0 <novo_str@@Base+0x50>
   114cc:	mov	r0, r4
   114d0:	bl	10b3c <free@plt>
   114d4:	mov	r4, r5
   114d8:	mov	r0, r4
   114dc:	pop	{r4, r5, r6, r7, r8, pc}
   114e0:	mov	r1, r7
   114e4:	bl	10b54 <strcpy@plt>
   114e8:	str	r6, [r4, #4]
   114ec:	str	r6, [r4, #8]
   114f0:	b	114d8 <novo_str@@Base+0x48>

000114f4 <lista_nova@@Base>:
   114f4:	push	{r4, lr}
   114f8:	mov	r0, #12
   114fc:	bl	10b6c <malloc@plt>
   11500:	cmp	r0, #0
   11504:	movne	r3, #0
   11508:	strne	r3, [r0]
   1150c:	strne	r3, [r0, #4]
   11510:	strne	r3, [r0, #8]
   11514:	pop	{r4, pc}

00011518 <lista_apaga@@Base>:
   11518:	push	{r4, r5, r6, lr}
   1151c:	subs	r5, r0, #0
   11520:	bne	11540 <lista_apaga@@Base+0x28>
   11524:	pop	{r4, r5, r6, pc}
   11528:	ldr	r3, [r4, #4]
   1152c:	ldr	r0, [r4]
   11530:	str	r3, [r5]
   11534:	bl	10b3c <free@plt>
   11538:	mov	r0, r4
   1153c:	bl	10b3c <free@plt>
   11540:	ldr	r4, [r5]
   11544:	cmp	r4, #0
   11548:	bne	11528 <lista_apaga@@Base+0x10>
   1154c:	mov	r0, r5
   11550:	pop	{r4, r5, r6, lr}
   11554:	b	10b3c <free@plt>

00011558 <lista_tamanho@@Base>:
   11558:	cmp	r0, #0
   1155c:	ldrne	r0, [r0, #8]
   11560:	mvneq	r0, #0
   11564:	bx	lr

00011568 <lista_inicio@@Base>:
   11568:	cmp	r0, #0
   1156c:	ldrne	r0, [r0]
   11570:	bx	lr

00011574 <lista_fim@@Base>:
   11574:	cmp	r0, #0
   11578:	ldrne	r0, [r0, #4]
   1157c:	bx	lr

00011580 <lista_insere@@Base>:
   11580:	cmp	r1, #0
   11584:	cmpne	r0, #0
   11588:	bne	1159c <lista_insere@@Base+0x1c>
   1158c:	mov	r0, #0
   11590:	bx	lr
   11594:	mov	r0, #0
   11598:	pop	{r4, r5, r6, pc}
   1159c:	push	{r4, r5, r6, lr}
   115a0:	mov	r4, r0
   115a4:	mov	r0, r1
   115a8:	mov	r5, r2
   115ac:	bl	11490 <novo_str@@Base>
   115b0:	cmp	r0, #0
   115b4:	beq	11594 <lista_insere@@Base+0x14>
   115b8:	ldr	r3, [r4, #8]
   115bc:	cmp	r5, #0
   115c0:	add	r3, r3, #1
   115c4:	str	r3, [r4, #8]
   115c8:	ldr	r3, [r4]
   115cc:	bne	115f0 <lista_insere@@Base+0x70>
   115d0:	cmp	r3, #0
   115d4:	streq	r0, [r4, #4]
   115d8:	beq	11600 <lista_insere@@Base+0x80>
   115dc:	ldr	r3, [r4, #4]
   115e0:	str	r3, [r0, #8]
   115e4:	str	r0, [r3, #4]
   115e8:	str	r0, [r4, #4]
   115ec:	pop	{r4, r5, r6, pc}
   115f0:	cmp	r5, r3
   115f4:	bne	11608 <lista_insere@@Base+0x88>
   115f8:	str	r5, [r0, #4]
   115fc:	str	r0, [r5, #8]
   11600:	str	r0, [r4]
   11604:	pop	{r4, r5, r6, pc}
   11608:	ldr	r3, [r5, #8]
   1160c:	str	r5, [r0, #4]
   11610:	str	r3, [r0, #8]
   11614:	ldr	r3, [r5, #8]
   11618:	str	r0, [r3, #4]
   1161c:	str	r0, [r5, #8]
   11620:	pop	{r4, r5, r6, pc}

00011624 <lista_remove@@Base>:
   11624:	cmp	r1, #0
   11628:	cmpne	r0, #0
   1162c:	push	{r4, r5, r6, lr}
   11630:	moveq	r5, #0
   11634:	beq	1167c <lista_remove@@Base+0x58>
   11638:	ldr	r3, [r0, #8]
   1163c:	ldr	r2, [r1, #4]
   11640:	sub	r3, r3, #1
   11644:	str	r3, [r0, #8]
   11648:	ldr	r3, [r1, #8]
   1164c:	mov	r4, r1
   11650:	cmp	r3, #0
   11654:	strne	r2, [r3, #4]
   11658:	ldr	r5, [r1, #4]
   1165c:	streq	r2, [r0]
   11660:	cmp	r5, #0
   11664:	streq	r3, [r0, #4]
   11668:	strne	r3, [r5, #8]
   1166c:	ldr	r0, [r1]
   11670:	bl	10b3c <free@plt>
   11674:	mov	r0, r4
   11678:	bl	10b3c <free@plt>
   1167c:	mov	r0, r5
   11680:	pop	{r4, r5, r6, pc}

00011684 <lista_pesquisa@@Base>:
   11684:	cmp	r1, #0
   11688:	cmpne	r0, #0
   1168c:	push	{r4, r5, r6, lr}
   11690:	moveq	r4, #1
   11694:	movne	r4, #0
   11698:	moveq	r4, #0
   1169c:	beq	11700 <lista_pesquisa@@Base+0x7c>
   116a0:	cmp	r2, #1
   116a4:	bhi	11700 <lista_pesquisa@@Base+0x7c>
   116a8:	cmp	r2, #0
   116ac:	mov	r5, r1
   116b0:	ldreq	r4, [r0]
   116b4:	beq	116f8 <lista_pesquisa@@Base+0x74>
   116b8:	ldr	r4, [r0, #4]
   116bc:	cmp	r4, #0
   116c0:	beq	11700 <lista_pesquisa@@Base+0x7c>
   116c4:	mov	r1, r5
   116c8:	ldr	r0, [r4]
   116cc:	bl	10b30 <strcmp@plt>
   116d0:	cmp	r0, #0
   116d4:	beq	11700 <lista_pesquisa@@Base+0x7c>
   116d8:	ldr	r4, [r4, #8]
   116dc:	b	116bc <lista_pesquisa@@Base+0x38>
   116e0:	mov	r1, r5
   116e4:	ldr	r0, [r4]
   116e8:	bl	10b30 <strcmp@plt>
   116ec:	cmp	r0, #0
   116f0:	beq	11700 <lista_pesquisa@@Base+0x7c>
   116f4:	ldr	r4, [r4, #4]
   116f8:	cmp	r4, #0
   116fc:	bne	116e0 <lista_pesquisa@@Base+0x5c>
   11700:	mov	r0, r4
   11704:	pop	{r4, r5, r6, pc}

00011708 <lista_ordena@@Base>:
   11708:	cmp	r0, #0
   1170c:	beq	11770 <lista_ordena@@Base+0x68>
   11710:	push	{r4, r5, r6, r7, r8, lr}
   11714:	ldr	r5, [r0]
   11718:	ldr	r4, [r5, #4]
   1171c:	cmp	r4, #0
   11720:	bne	1172c <lista_ordena@@Base+0x24>
   11724:	mov	r0, r4
   11728:	pop	{r4, r5, r6, r7, r8, pc}
   1172c:	mov	r6, r5
   11730:	mov	r7, r4
   11734:	ldr	r1, [r6]
   11738:	ldr	r0, [r7]
   1173c:	bl	10b30 <strcmp@plt>
   11740:	cmp	r0, #0
   11744:	movlt	r6, r7
   11748:	ldr	r7, [r7, #4]
   1174c:	cmp	r7, #0
   11750:	bne	11734 <lista_ordena@@Base+0x2c>
   11754:	cmp	r5, r6
   11758:	ldrne	r3, [r5]
   1175c:	ldrne	r2, [r6]
   11760:	strne	r2, [r5]
   11764:	strne	r3, [r6]
   11768:	mov	r5, r4
   1176c:	b	11718 <lista_ordena@@Base+0x10>
   11770:	mvn	r0, #0
   11774:	bx	lr

00011778 <lista_inverte@@Base>:
   11778:	subs	r3, r0, #0
   1177c:	beq	11800 <lista_inverte@@Base+0x88>
   11780:	ldr	r1, [r3, #8]
   11784:	cmp	r1, #1
   11788:	ble	11808 <lista_inverte@@Base+0x90>
   1178c:	ldr	r2, [r3]
   11790:	mov	ip, #0
   11794:	sub	r0, r1, #2
   11798:	ldr	r2, [r2, #4]
   1179c:	push	{r4, lr}
   117a0:	cmp	ip, r0
   117a4:	ldr	r1, [r3]
   117a8:	blt	117d4 <lista_inverte@@Base+0x5c>
   117ac:	ldr	r2, [r3, #4]
   117b0:	mov	r0, #0
   117b4:	ldr	ip, [r2, #8]
   117b8:	str	ip, [r3, #4]
   117bc:	str	r0, [ip, #4]
   117c0:	str	r0, [r2, #8]
   117c4:	str	r1, [r2, #4]
   117c8:	str	r2, [r1, #8]
   117cc:	str	r2, [r3]
   117d0:	pop	{r4, pc}
   117d4:	ldr	r4, [r2, #8]
   117d8:	ldr	lr, [r2, #4]
   117dc:	add	ip, ip, #1
   117e0:	str	lr, [r4, #4]
   117e4:	ldr	lr, [r2, #4]
   117e8:	str	r4, [lr, #8]
   117ec:	str	r1, [r2, #4]
   117f0:	str	r2, [r1, #8]
   117f4:	str	r2, [r3]
   117f8:	mov	r2, lr
   117fc:	b	117a0 <lista_inverte@@Base+0x28>
   11800:	mvn	r0, #0
   11804:	bx	lr
   11808:	mov	r0, #0
   1180c:	bx	lr

00011810 <__libc_csu_init@@Base>:
   11810:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11814:	mov	r7, r0
   11818:	ldr	r6, [pc, #72]	; 11868 <__libc_csu_init@@Base+0x58>
   1181c:	ldr	r5, [pc, #72]	; 1186c <__libc_csu_init@@Base+0x5c>
   11820:	add	r6, pc, r6
   11824:	add	r5, pc, r5
   11828:	sub	r6, r6, r5
   1182c:	mov	r8, r1
   11830:	mov	r9, r2
   11834:	bl	10b04 <calloc@plt-0x20>
   11838:	asrs	r6, r6, #2
   1183c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11840:	mov	r4, #0
   11844:	add	r4, r4, #1
   11848:	ldr	r3, [r5], #4
   1184c:	mov	r2, r9
   11850:	mov	r1, r8
   11854:	mov	r0, r7
   11858:	blx	r3
   1185c:	cmp	r6, r4
   11860:	bne	11844 <__libc_csu_init@@Base+0x34>
   11864:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11868:	andeq	r0, r1, r8, ror #13
   1186c:	andeq	r0, r1, r0, ror #13

00011870 <__libc_csu_fini@@Base>:
   11870:	bx	lr

Disassembly of section .fini:

00011874 <.fini>:
   11874:	push	{r3, lr}
   11878:	pop	{r3, pc}
