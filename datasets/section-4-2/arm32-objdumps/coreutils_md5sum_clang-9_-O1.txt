
../repos/coreutils/src/md5sum:     file format elf32-littlearm


Disassembly of section .init:

00010ed4 <.init>:
   10ed4:	push	{r3, lr}
   10ed8:	bl	111dc <putchar_unlocked@plt+0x48>
   10edc:	pop	{r3, pc}

Disassembly of section .plt:

00010ee0 <fdopen@plt-0x14>:
   10ee0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ee4:	ldr	lr, [pc, #4]	; 10ef0 <fdopen@plt-0x4>
   10ee8:	add	lr, pc, lr
   10eec:	ldr	pc, [lr, #8]!
   10ef0:	andeq	r7, r1, r0, lsl r1

00010ef4 <fdopen@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #94208	; 0x17000
   10efc:	ldr	pc, [ip, #272]!	; 0x110

00010f00 <calloc@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #94208	; 0x17000
   10f08:	ldr	pc, [ip, #264]!	; 0x108

00010f0c <fputs_unlocked@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #94208	; 0x17000
   10f14:	ldr	pc, [ip, #256]!	; 0x100

00010f18 <raise@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #94208	; 0x17000
   10f20:	ldr	pc, [ip, #248]!	; 0xf8

00010f24 <strcmp@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #94208	; 0x17000
   10f2c:	ldr	pc, [ip, #240]!	; 0xf0

00010f30 <posix_fadvise64@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #94208	; 0x17000
   10f38:	ldr	pc, [ip, #232]!	; 0xe8

00010f3c <fflush@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #94208	; 0x17000
   10f44:	ldr	pc, [ip, #224]!	; 0xe0

00010f48 <free@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #94208	; 0x17000
   10f50:	ldr	pc, [ip, #216]!	; 0xd8

00010f54 <_exit@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #94208	; 0x17000
   10f5c:	ldr	pc, [ip, #208]!	; 0xd0

00010f60 <memcpy@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #94208	; 0x17000
   10f68:	ldr	pc, [ip, #200]!	; 0xc8

00010f6c <mbsinit@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #94208	; 0x17000
   10f74:	ldr	pc, [ip, #192]!	; 0xc0

00010f78 <dcgettext@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #94208	; 0x17000
   10f80:	ldr	pc, [ip, #184]!	; 0xb8

00010f84 <realloc@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #94208	; 0x17000
   10f8c:	ldr	pc, [ip, #176]!	; 0xb0

00010f90 <textdomain@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #94208	; 0x17000
   10f98:	ldr	pc, [ip, #168]!	; 0xa8

00010f9c <iswprint@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #94208	; 0x17000
   10fa4:	ldr	pc, [ip, #160]!	; 0xa0

00010fa8 <fwrite@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #94208	; 0x17000
   10fb0:	ldr	pc, [ip, #152]!	; 0x98

00010fb4 <lseek64@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #94208	; 0x17000
   10fbc:	ldr	pc, [ip, #144]!	; 0x90

00010fc0 <__ctype_get_mb_cur_max@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #94208	; 0x17000
   10fc8:	ldr	pc, [ip, #136]!	; 0x88

00010fcc <__fpending@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #94208	; 0x17000
   10fd4:	ldr	pc, [ip, #128]!	; 0x80

00010fd8 <ferror_unlocked@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #94208	; 0x17000
   10fe0:	ldr	pc, [ip, #120]!	; 0x78

00010fe4 <mbrtowc@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #94208	; 0x17000
   10fec:	ldr	pc, [ip, #112]!	; 0x70

00010ff0 <error@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #94208	; 0x17000
   10ff8:	ldr	pc, [ip, #104]!	; 0x68

00010ffc <malloc@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #94208	; 0x17000
   11004:	ldr	pc, [ip, #96]!	; 0x60

00011008 <__libc_start_main@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #94208	; 0x17000
   11010:	ldr	pc, [ip, #88]!	; 0x58

00011014 <__freading@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #94208	; 0x17000
   1101c:	ldr	pc, [ip, #80]!	; 0x50

00011020 <__ctype_tolower_loc@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #94208	; 0x17000
   11028:	ldr	pc, [ip, #72]!	; 0x48

0001102c <__gmon_start__@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #94208	; 0x17000
   11034:	ldr	pc, [ip, #64]!	; 0x40

00011038 <getopt_long@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #94208	; 0x17000
   11040:	ldr	pc, [ip, #56]!	; 0x38

00011044 <__ctype_b_loc@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #94208	; 0x17000
   1104c:	ldr	pc, [ip, #48]!	; 0x30

00011050 <exit@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #94208	; 0x17000
   11058:	ldr	pc, [ip, #40]!	; 0x28

0001105c <bcmp@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #94208	; 0x17000
   11064:	ldr	pc, [ip, #32]!

00011068 <strlen@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #94208	; 0x17000
   11070:	ldr	pc, [ip, #24]!

00011074 <strchr@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #94208	; 0x17000
   1107c:	ldr	pc, [ip, #16]!

00011080 <__errno_location@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #94208	; 0x17000
   11088:	ldr	pc, [ip, #8]!

0001108c <__cxa_atexit@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #94208	; 0x17000
   11094:	ldr	pc, [ip, #0]!

00011098 <setvbuf@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #90112	; 0x16000
   110a0:	ldr	pc, [ip, #4088]!	; 0xff8

000110a4 <memset@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #90112	; 0x16000
   110ac:	ldr	pc, [ip, #4080]!	; 0xff0

000110b0 <__printf_chk@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #90112	; 0x16000
   110b8:	ldr	pc, [ip, #4072]!	; 0xfe8

000110bc <fileno@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #90112	; 0x16000
   110c4:	ldr	pc, [ip, #4064]!	; 0xfe0

000110c8 <__fprintf_chk@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #90112	; 0x16000
   110d0:	ldr	pc, [ip, #4056]!	; 0xfd8

000110d4 <fclose@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #90112	; 0x16000
   110dc:	ldr	pc, [ip, #4048]!	; 0xfd0

000110e0 <fseeko64@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #90112	; 0x16000
   110e8:	ldr	pc, [ip, #4040]!	; 0xfc8

000110ec <fcntl64@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #90112	; 0x16000
   110f4:	ldr	pc, [ip, #4032]!	; 0xfc0

000110f8 <setlocale@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #90112	; 0x16000
   11100:	ldr	pc, [ip, #4024]!	; 0xfb8

00011104 <strrchr@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #90112	; 0x16000
   1110c:	ldr	pc, [ip, #4016]!	; 0xfb0

00011110 <nl_langinfo@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #90112	; 0x16000
   11118:	ldr	pc, [ip, #4008]!	; 0xfa8

0001111c <clearerr_unlocked@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #90112	; 0x16000
   11124:	ldr	pc, [ip, #4000]!	; 0xfa0

00011128 <fopen64@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #90112	; 0x16000
   11130:	ldr	pc, [ip, #3992]!	; 0xf98

00011134 <bindtextdomain@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #90112	; 0x16000
   1113c:	ldr	pc, [ip, #3984]!	; 0xf90

00011140 <fread_unlocked@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #90112	; 0x16000
   11148:	ldr	pc, [ip, #3976]!	; 0xf88

0001114c <getline@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #90112	; 0x16000
   11154:	ldr	pc, [ip, #3968]!	; 0xf80

00011158 <strncmp@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #90112	; 0x16000
   11160:	ldr	pc, [ip, #3960]!	; 0xf78

00011164 <abort@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #90112	; 0x16000
   1116c:	ldr	pc, [ip, #3952]!	; 0xf70

00011170 <feof_unlocked@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #90112	; 0x16000
   11178:	ldr	pc, [ip, #3944]!	; 0xf68

0001117c <close@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #90112	; 0x16000
   11184:	ldr	pc, [ip, #3936]!	; 0xf60

00011188 <dcngettext@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #90112	; 0x16000
   11190:	ldr	pc, [ip, #3928]!	; 0xf58

00011194 <putchar_unlocked@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #90112	; 0x16000
   1119c:	ldr	pc, [ip, #3920]!	; 0xf50

Disassembly of section .text:

000111a0 <.text>:
   111a0:	mov	fp, #0
   111a4:	mov	lr, #0
   111a8:	pop	{r1}		; (ldr r1, [sp], #4)
   111ac:	mov	r2, sp
   111b0:	push	{r2}		; (str r2, [sp, #-4]!)
   111b4:	push	{r0}		; (str r0, [sp, #-4]!)
   111b8:	ldr	ip, [pc, #16]	; 111d0 <putchar_unlocked@plt+0x3c>
   111bc:	push	{ip}		; (str ip, [sp, #-4]!)
   111c0:	ldr	r0, [pc, #12]	; 111d4 <putchar_unlocked@plt+0x40>
   111c4:	ldr	r3, [pc, #12]	; 111d8 <putchar_unlocked@plt+0x44>
   111c8:	bl	11008 <__libc_start_main@plt>
   111cc:	bl	11164 <abort@plt>
   111d0:	andeq	r6, r1, r4, asr sp
   111d4:	andeq	r1, r1, r4, lsr r6
   111d8:	strdeq	r6, [r1], -r4
   111dc:	ldr	r3, [pc, #20]	; 111f8 <putchar_unlocked@plt+0x64>
   111e0:	ldr	r2, [pc, #20]	; 111fc <putchar_unlocked@plt+0x68>
   111e4:	add	r3, pc, r3
   111e8:	ldr	r2, [r3, r2]
   111ec:	cmp	r2, #0
   111f0:	bxeq	lr
   111f4:	b	1102c <__gmon_start__@plt>
   111f8:	andeq	r6, r1, r4, lsl lr
   111fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11200:	ldr	r0, [pc, #24]	; 11220 <putchar_unlocked@plt+0x8c>
   11204:	ldr	r3, [pc, #24]	; 11224 <putchar_unlocked@plt+0x90>
   11208:	cmp	r3, r0
   1120c:	bxeq	lr
   11210:	ldr	r3, [pc, #16]	; 11228 <putchar_unlocked@plt+0x94>
   11214:	cmp	r3, #0
   11218:	bxeq	lr
   1121c:	bx	r3
   11220:	andeq	r8, r2, r0, asr r1
   11224:	andeq	r8, r2, r0, asr r1
   11228:	andeq	r0, r0, r0
   1122c:	ldr	r0, [pc, #36]	; 11258 <putchar_unlocked@plt+0xc4>
   11230:	ldr	r1, [pc, #36]	; 1125c <putchar_unlocked@plt+0xc8>
   11234:	sub	r1, r1, r0
   11238:	asr	r1, r1, #2
   1123c:	add	r1, r1, r1, lsr #31
   11240:	asrs	r1, r1, #1
   11244:	bxeq	lr
   11248:	ldr	r3, [pc, #16]	; 11260 <putchar_unlocked@plt+0xcc>
   1124c:	cmp	r3, #0
   11250:	bxeq	lr
   11254:	bx	r3
   11258:	andeq	r8, r2, r0, asr r1
   1125c:	andeq	r8, r2, r0, asr r1
   11260:	andeq	r0, r0, r0
   11264:	push	{r4, lr}
   11268:	ldr	r4, [pc, #24]	; 11288 <putchar_unlocked@plt+0xf4>
   1126c:	ldrb	r3, [r4]
   11270:	cmp	r3, #0
   11274:	popne	{r4, pc}
   11278:	bl	11200 <putchar_unlocked@plt+0x6c>
   1127c:	mov	r3, #1
   11280:	strb	r3, [r4]
   11284:	pop	{r4, pc}
   11288:	andeq	r8, r2, r0, ror r1
   1128c:	b	1122c <putchar_unlocked@plt+0x98>
   11290:	push	{fp, lr}
   11294:	mov	fp, sp
   11298:	mov	r4, r0
   1129c:	cmp	r0, #0
   112a0:	bne	11438 <putchar_unlocked@plt+0x2a4>
   112a4:	movw	r1, #28067	; 0x6da3
   112a8:	movt	r1, #1
   112ac:	mov	r0, #0
   112b0:	mov	r2, #5
   112b4:	bl	10f78 <dcgettext@plt>
   112b8:	mov	r1, r0
   112bc:	movw	r0, #33164	; 0x818c
   112c0:	movt	r0, #2
   112c4:	ldr	r2, [r0]
   112c8:	mov	r0, #1
   112cc:	bl	110b0 <__printf_chk@plt>
   112d0:	movw	r1, #28100	; 0x6dc4
   112d4:	movt	r1, #1
   112d8:	mov	r0, #0
   112dc:	mov	r2, #5
   112e0:	bl	10f78 <dcgettext@plt>
   112e4:	mov	r1, r0
   112e8:	movw	r2, #28139	; 0x6deb
   112ec:	movt	r2, #1
   112f0:	mov	r0, #1
   112f4:	mov	r3, #128	; 0x80
   112f8:	bl	110b0 <__printf_chk@plt>
   112fc:	bl	1147c <putchar_unlocked@plt+0x2e8>
   11300:	movw	r1, #28143	; 0x6def
   11304:	movt	r1, #1
   11308:	mov	r0, #0
   1130c:	mov	r2, #5
   11310:	bl	10f78 <dcgettext@plt>
   11314:	movw	r5, #33132	; 0x816c
   11318:	movt	r5, #2
   1131c:	ldr	r1, [r5]
   11320:	bl	10f0c <fputs_unlocked@plt>
   11324:	movw	r1, #28188	; 0x6e1c
   11328:	movt	r1, #1
   1132c:	mov	r0, #0
   11330:	mov	r2, #5
   11334:	bl	10f78 <dcgettext@plt>
   11338:	ldr	r1, [r5]
   1133c:	bl	10f0c <fputs_unlocked@plt>
   11340:	movw	r1, #28258	; 0x6e62
   11344:	movt	r1, #1
   11348:	mov	r0, #0
   1134c:	mov	r2, #5
   11350:	bl	10f78 <dcgettext@plt>
   11354:	ldr	r1, [r5]
   11358:	bl	10f0c <fputs_unlocked@plt>
   1135c:	movw	r1, #28311	; 0x6e97
   11360:	movt	r1, #1
   11364:	mov	r0, #0
   11368:	mov	r2, #5
   1136c:	bl	10f78 <dcgettext@plt>
   11370:	ldr	r1, [r5]
   11374:	bl	10f0c <fputs_unlocked@plt>
   11378:	movw	r1, #28364	; 0x6ecc
   1137c:	movt	r1, #1
   11380:	mov	r0, #0
   11384:	mov	r2, #5
   11388:	bl	10f78 <dcgettext@plt>
   1138c:	ldr	r1, [r5]
   11390:	bl	10f0c <fputs_unlocked@plt>
   11394:	movw	r1, #28490	; 0x6f4a
   11398:	movt	r1, #1
   1139c:	mov	r0, #0
   113a0:	mov	r2, #5
   113a4:	bl	10f78 <dcgettext@plt>
   113a8:	ldr	r1, [r5]
   113ac:	bl	10f0c <fputs_unlocked@plt>
   113b0:	movw	r1, #28929	; 0x7101
   113b4:	movt	r1, #1
   113b8:	mov	r0, #0
   113bc:	mov	r2, #5
   113c0:	bl	10f78 <dcgettext@plt>
   113c4:	ldr	r1, [r5]
   113c8:	bl	10f0c <fputs_unlocked@plt>
   113cc:	movw	r1, #28974	; 0x712e
   113d0:	movt	r1, #1
   113d4:	mov	r0, #0
   113d8:	mov	r2, #5
   113dc:	bl	10f78 <dcgettext@plt>
   113e0:	ldr	r1, [r5]
   113e4:	bl	10f0c <fputs_unlocked@plt>
   113e8:	movw	r1, #29028	; 0x7164
   113ec:	movt	r1, #1
   113f0:	mov	r0, #0
   113f4:	mov	r2, #5
   113f8:	bl	10f78 <dcgettext@plt>
   113fc:	mov	r1, r0
   11400:	movw	r2, #29072	; 0x7190
   11404:	movt	r2, #1
   11408:	mov	r0, #1
   1140c:	bl	110b0 <__printf_chk@plt>
   11410:	movw	r1, #29081	; 0x7199
   11414:	movt	r1, #1
   11418:	mov	r0, #0
   1141c:	mov	r2, #5
   11420:	bl	10f78 <dcgettext@plt>
   11424:	ldr	r1, [r5]
   11428:	bl	10f0c <fputs_unlocked@plt>
   1142c:	bl	114ac <putchar_unlocked@plt+0x318>
   11430:	mov	r0, r4
   11434:	bl	11050 <exit@plt>
   11438:	movw	r0, #33120	; 0x8160
   1143c:	movt	r0, #2
   11440:	ldr	r5, [r0]
   11444:	movw	r1, #28028	; 0x6d7c
   11448:	movt	r1, #1
   1144c:	mov	r0, #0
   11450:	mov	r2, #5
   11454:	bl	10f78 <dcgettext@plt>
   11458:	mov	r2, r0
   1145c:	movw	r0, #33164	; 0x818c
   11460:	movt	r0, #2
   11464:	ldr	r3, [r0]
   11468:	mov	r0, r5
   1146c:	mov	r1, #1
   11470:	bl	110c8 <__fprintf_chk@plt>
   11474:	mov	r0, r4
   11478:	bl	11050 <exit@plt>
   1147c:	push	{fp, lr}
   11480:	mov	fp, sp
   11484:	movw	r1, #30071	; 0x7577
   11488:	movt	r1, #1
   1148c:	mov	r0, #0
   11490:	mov	r2, #5
   11494:	bl	10f78 <dcgettext@plt>
   11498:	movw	r1, #33132	; 0x816c
   1149c:	movt	r1, #2
   114a0:	ldr	r1, [r1]
   114a4:	pop	{fp, lr}
   114a8:	b	10f0c <fputs_unlocked@plt>
   114ac:	push	{r4, r5, r6, sl, fp, lr}
   114b0:	add	fp, sp, #16
   114b4:	sub	sp, sp, #56	; 0x38
   114b8:	movw	r0, #31216	; 0x79f0
   114bc:	movt	r0, #1
   114c0:	add	r1, r0, #32
   114c4:	mov	r2, #48	; 0x30
   114c8:	vld1.64	{d16-d17}, [r1]
   114cc:	mov	r6, sp
   114d0:	add	r1, r6, #32
   114d4:	add	r3, r0, #16
   114d8:	vld1.64	{d18-d19}, [r0], r2
   114dc:	vld1.64	{d20-d21}, [r3]
   114e0:	vldr	d22, [r0]
   114e4:	vst1.64	{d16-d17}, [r1]
   114e8:	add	r0, r6, #16
   114ec:	vst1.64	{d20-d21}, [r0]
   114f0:	mov	r0, r6
   114f4:	vst1.64	{d18-d19}, [r0], r2
   114f8:	vstr	d22, [r0]
   114fc:	ldr	r1, [sp]
   11500:	cmp	r1, #0
   11504:	movw	r4, #29414	; 0x72e6
   11508:	movt	r4, #1
   1150c:	beq	11534 <putchar_unlocked@plt+0x3a0>
   11510:	mov	r6, sp
   11514:	movw	r5, #29414	; 0x72e6
   11518:	movt	r5, #1
   1151c:	mov	r0, r5
   11520:	bl	10f24 <strcmp@plt>
   11524:	cmp	r0, #0
   11528:	ldrne	r1, [r6, #8]!
   1152c:	cmpne	r1, #0
   11530:	bne	1151c <putchar_unlocked@plt+0x388>
   11534:	ldr	r5, [r6, #4]
   11538:	movw	r1, #30222	; 0x760e
   1153c:	movt	r1, #1
   11540:	mov	r0, #0
   11544:	mov	r2, #5
   11548:	bl	10f78 <dcgettext@plt>
   1154c:	mov	r1, r0
   11550:	movw	r2, #29451	; 0x730b
   11554:	movt	r2, #1
   11558:	movw	r3, #30245	; 0x7625
   1155c:	movt	r3, #1
   11560:	mov	r0, #1
   11564:	bl	110b0 <__printf_chk@plt>
   11568:	cmp	r5, #0
   1156c:	moveq	r5, r4
   11570:	mov	r0, #5
   11574:	mov	r1, #0
   11578:	bl	110f8 <setlocale@plt>
   1157c:	cmp	r0, #0
   11580:	beq	115c0 <putchar_unlocked@plt+0x42c>
   11584:	movw	r1, #30285	; 0x764d
   11588:	movt	r1, #1
   1158c:	mov	r2, #3
   11590:	bl	11158 <strncmp@plt>
   11594:	cmp	r0, #0
   11598:	beq	115c0 <putchar_unlocked@plt+0x42c>
   1159c:	movw	r1, #30289	; 0x7651
   115a0:	movt	r1, #1
   115a4:	mov	r0, #0
   115a8:	mov	r2, #5
   115ac:	bl	10f78 <dcgettext@plt>
   115b0:	movw	r1, #33132	; 0x816c
   115b4:	movt	r1, #2
   115b8:	ldr	r1, [r1]
   115bc:	bl	10f0c <fputs_unlocked@plt>
   115c0:	movw	r1, #30360	; 0x7698
   115c4:	movt	r1, #1
   115c8:	mov	r0, #0
   115cc:	mov	r2, #5
   115d0:	bl	10f78 <dcgettext@plt>
   115d4:	mov	r1, r0
   115d8:	movw	r2, #30245	; 0x7625
   115dc:	movt	r2, #1
   115e0:	mov	r0, #1
   115e4:	mov	r3, r4
   115e8:	bl	110b0 <__printf_chk@plt>
   115ec:	movw	r0, #30155	; 0x75cb
   115f0:	movt	r0, #1
   115f4:	movw	r6, #28928	; 0x7100
   115f8:	movt	r6, #1
   115fc:	cmp	r5, r4
   11600:	moveq	r6, r0
   11604:	movw	r1, #30387	; 0x76b3
   11608:	movt	r1, #1
   1160c:	mov	r0, #0
   11610:	mov	r2, #5
   11614:	bl	10f78 <dcgettext@plt>
   11618:	mov	r1, r0
   1161c:	mov	r0, #1
   11620:	mov	r2, r5
   11624:	mov	r3, r6
   11628:	sub	sp, fp, #16
   1162c:	pop	{r4, r5, r6, sl, fp, lr}
   11630:	b	110b0 <__printf_chk@plt>
   11634:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11638:	add	fp, sp, #28
   1163c:	sub	sp, sp, #52	; 0x34
   11640:	mov	r6, r1
   11644:	mov	r8, r0
   11648:	add	r0, sp, #32
   1164c:	bl	11be4 <putchar_unlocked@plt+0xa50>
   11650:	str	r0, [sp, #24]
   11654:	ldr	r0, [r6]
   11658:	bl	13e38 <putchar_unlocked@plt+0x2ca4>
   1165c:	movw	r1, #28928	; 0x7100
   11660:	movt	r1, #1
   11664:	mov	r0, #6
   11668:	bl	110f8 <setlocale@plt>
   1166c:	movw	r5, #29455	; 0x730f
   11670:	movt	r5, #1
   11674:	movw	r1, #29421	; 0x72ed
   11678:	movt	r1, #1
   1167c:	mov	r0, r5
   11680:	bl	11134 <bindtextdomain@plt>
   11684:	mov	r0, r5
   11688:	bl	10f90 <textdomain@plt>
   1168c:	movw	r0, #11264	; 0x2c00
   11690:	movt	r0, #1
   11694:	bl	16d58 <putchar_unlocked@plt+0x5bc4>
   11698:	movw	r0, #33132	; 0x816c
   1169c:	movt	r0, #2
   116a0:	ldr	r0, [r0]
   116a4:	mov	r9, #0
   116a8:	mov	r1, #0
   116ac:	mov	r2, #1
   116b0:	mov	r3, #0
   116b4:	bl	11098 <setvbuf@plt>
   116b8:	mvn	r0, #0
   116bc:	str	r0, [sp, #20]
   116c0:	movw	r2, #29445	; 0x7305
   116c4:	movt	r2, #1
   116c8:	movw	r3, #31008	; 0x7920
   116cc:	movt	r3, #1
   116d0:	mov	r7, #0
   116d4:	mov	r0, #0
   116d8:	mov	sl, r0
   116dc:	str	r9, [sp]
   116e0:	mov	r5, r8
   116e4:	mov	r0, r8
   116e8:	mov	r4, r6
   116ec:	mov	r1, r6
   116f0:	mov	r9, r2
   116f4:	mov	r8, r3
   116f8:	bl	11038 <getopt_long@plt>
   116fc:	cmp	r0, #97	; 0x61
   11700:	ble	118ac <putchar_unlocked@plt+0x718>
   11704:	sub	r1, r0, #98	; 0x62
   11708:	cmp	r1, #24
   1170c:	bls	11758 <putchar_unlocked@plt+0x5c4>
   11710:	sub	r0, r0, #256	; 0x100
   11714:	cmp	r0, #4
   11718:	mov	r2, r9
   1171c:	mov	r9, #0
   11720:	bhi	11b24 <putchar_unlocked@plt+0x990>
   11724:	mov	r3, r8
   11728:	mov	r8, r5
   1172c:	mov	r6, r4
   11730:	add	r1, pc, #0
   11734:	ldr	pc, [r1, r0, lsl #2]
   11738:	andeq	r1, r1, ip, asr #14
   1173c:	andeq	r1, r1, ip, ror r8
   11740:	andeq	r1, r1, r4, lsl r8
   11744:	andeq	r1, r1, r4, asr #16
   11748:	andeq	r1, r1, r4, ror #15
   1174c:	movw	r0, #33143	; 0x8177
   11750:	movt	r0, #2
   11754:	b	11834 <putchar_unlocked@plt+0x6a0>
   11758:	add	ip, pc, #24
   1175c:	mov	r0, #1
   11760:	mov	r2, r9
   11764:	mov	r3, r8
   11768:	mov	r9, #0
   1176c:	mov	r8, r5
   11770:	mov	r6, r4
   11774:	ldr	pc, [ip, r1, lsl #2]
   11778:	ldrdeq	r1, [r1], -ip
   1177c:	ldrdeq	r1, [r1], -r8
   11780:	andeq	r1, r1, r4, lsr #22
   11784:	andeq	r1, r1, r4, lsr #22
   11788:	andeq	r1, r1, r4, lsr #22
   1178c:	andeq	r1, r1, r4, lsr #22
   11790:	andeq	r1, r1, r4, lsr #22
   11794:	andeq	r1, r1, r4, lsr #22
   11798:	andeq	r1, r1, r4, lsr #22
   1179c:	andeq	r1, r1, r4, lsr #22
   117a0:	andeq	r1, r1, r4, lsr #22
   117a4:	andeq	r1, r1, r4, lsr #22
   117a8:	andeq	r1, r1, r4, lsr #22
   117ac:	andeq	r1, r1, r4, lsr #22
   117b0:	andeq	r1, r1, r4, lsr #22
   117b4:	andeq	r1, r1, r4, lsr #22
   117b8:	andeq	r1, r1, r4, lsr #22
   117bc:	andeq	r1, r1, r4, lsr #22
   117c0:	andeq	r1, r1, r4, lsl #16
   117c4:	andeq	r1, r1, r4, lsr #22
   117c8:	andeq	r1, r1, r4, lsr #22
   117cc:	andeq	r1, r1, ip, asr r8
   117d0:	andeq	r1, r1, r4, lsr #22
   117d4:	andeq	r1, r1, r4, lsr #22
   117d8:	strdeq	r1, [r1], -r8
   117dc:	mov	r0, #1
   117e0:	b	11808 <putchar_unlocked@plt+0x674>
   117e4:	mov	r0, #1
   117e8:	str	r0, [sp, #20]
   117ec:	mov	r7, #1
   117f0:	mov	r0, sl
   117f4:	b	116d8 <putchar_unlocked@plt+0x544>
   117f8:	movw	r0, #33145	; 0x8179
   117fc:	movt	r0, #2
   11800:	b	11834 <putchar_unlocked@plt+0x6a0>
   11804:	mov	r0, #0
   11808:	str	r0, [sp, #20]
   1180c:	mov	r0, sl
   11810:	b	116d8 <putchar_unlocked@plt+0x544>
   11814:	movw	r0, #33141	; 0x8175
   11818:	movt	r0, #2
   1181c:	strb	r9, [r0]
   11820:	movw	r0, #33140	; 0x8174
   11824:	movt	r0, #2
   11828:	strb	r9, [r0]
   1182c:	movw	r0, #33142	; 0x8176
   11830:	movt	r0, #2
   11834:	mov	r1, #1
   11838:	strb	r1, [r0]
   1183c:	mov	r0, sl
   11840:	b	116d8 <putchar_unlocked@plt+0x544>
   11844:	mov	r0, #1
   11848:	movw	r1, #33144	; 0x8178
   1184c:	movt	r1, #2
   11850:	strb	r0, [r1]
   11854:	mov	r0, sl
   11858:	b	116d8 <putchar_unlocked@plt+0x544>
   1185c:	movw	r0, #33141	; 0x8175
   11860:	movt	r0, #2
   11864:	mov	r1, #1
   11868:	strb	r1, [r0]
   1186c:	movw	r0, #33140	; 0x8174
   11870:	movt	r0, #2
   11874:	strb	r9, [r0]
   11878:	b	11898 <putchar_unlocked@plt+0x704>
   1187c:	movw	r0, #33141	; 0x8175
   11880:	movt	r0, #2
   11884:	strb	r9, [r0]
   11888:	movw	r0, #33140	; 0x8174
   1188c:	movt	r0, #2
   11890:	mov	r1, #1
   11894:	strb	r1, [r0]
   11898:	movw	r0, #33142	; 0x8176
   1189c:	movt	r0, #2
   118a0:	strb	r9, [r0]
   118a4:	mov	r0, sl
   118a8:	b	116d8 <putchar_unlocked@plt+0x544>
   118ac:	cmn	r0, #1
   118b0:	bne	11ab0 <putchar_unlocked@plt+0x91c>
   118b4:	movw	r0, #33152	; 0x8180
   118b8:	movt	r0, #2
   118bc:	mov	r1, #1
   118c0:	strb	r1, [r0]
   118c4:	movw	r0, #33148	; 0x817c
   118c8:	movt	r0, #2
   118cc:	strb	r1, [r0]
   118d0:	eor	r1, r7, #1
   118d4:	ldr	r3, [sp, #20]
   118d8:	cmp	r3, #0
   118dc:	mov	r6, r5
   118e0:	tsteq	r1, #1
   118e4:	beq	11b2c <putchar_unlocked@plt+0x998>
   118e8:	eor	r0, sl, #1
   118ec:	tst	r0, #1
   118f0:	bne	11908 <putchar_unlocked@plt+0x774>
   118f4:	movw	r2, #33145	; 0x8179
   118f8:	movt	r2, #2
   118fc:	ldrb	r2, [r2]
   11900:	cmp	r2, #0
   11904:	bne	11b38 <putchar_unlocked@plt+0x9a4>
   11908:	orr	r1, r1, r0
   1190c:	tst	r1, #1
   11910:	beq	11b44 <putchar_unlocked@plt+0x9b0>
   11914:	mov	r1, #0
   11918:	cmp	r3, #0
   1191c:	movwmi	r1, #1
   11920:	orr	r1, r1, r0
   11924:	tst	r1, #1
   11928:	beq	11b50 <putchar_unlocked@plt+0x9bc>
   1192c:	movw	r1, #33143	; 0x8177
   11930:	movt	r1, #2
   11934:	ldrb	r1, [r1]
   11938:	mvn	r1, r1
   1193c:	orr	r1, sl, r1
   11940:	tst	r1, #1
   11944:	beq	11b5c <putchar_unlocked@plt+0x9c8>
   11948:	movw	r1, #33140	; 0x8174
   1194c:	movt	r1, #2
   11950:	ldrb	r1, [r1]
   11954:	mvn	r1, r1
   11958:	orr	r1, sl, r1
   1195c:	tst	r1, #1
   11960:	beq	11b68 <putchar_unlocked@plt+0x9d4>
   11964:	movw	r1, #33141	; 0x8175
   11968:	movt	r1, #2
   1196c:	ldrb	r1, [r1]
   11970:	mvn	r1, r1
   11974:	orr	r1, sl, r1
   11978:	tst	r1, #1
   1197c:	beq	11b74 <putchar_unlocked@plt+0x9e0>
   11980:	movw	r1, #33142	; 0x8176
   11984:	movt	r1, #2
   11988:	ldrb	r1, [r1]
   1198c:	mvn	r1, r1
   11990:	orr	r1, sl, r1
   11994:	tst	r1, #1
   11998:	beq	11b80 <putchar_unlocked@plt+0x9ec>
   1199c:	movw	r1, #33144	; 0x8178
   119a0:	movt	r1, #2
   119a4:	ldrb	r1, [r1]
   119a8:	and	r0, r1, r0
   119ac:	tst	r0, #1
   119b0:	bne	11b8c <putchar_unlocked@plt+0x9f8>
   119b4:	add	r8, r4, r6, lsl #2
   119b8:	movw	r0, #33112	; 0x8158
   119bc:	movt	r0, #2
   119c0:	ldr	r0, [r0]
   119c4:	cmp	r0, r6
   119c8:	movweq	r1, #31458	; 0x7ae2
   119cc:	movteq	r1, #1
   119d0:	streq	r1, [r8], #4
   119d4:	add	r6, r4, r0, lsl #2
   119d8:	mov	r9, #1
   119dc:	cmp	r6, r8
   119e0:	bcs	11a74 <putchar_unlocked@plt+0x8e0>
   119e4:	bic	r5, r3, r3, asr #31
   119e8:	mov	r9, #1
   119ec:	and	r7, r7, #1
   119f0:	b	11a04 <putchar_unlocked@plt+0x870>
   119f4:	mov	r9, r1
   119f8:	add	r6, r6, #4
   119fc:	cmp	r6, r8
   11a00:	bcs	11a74 <putchar_unlocked@plt+0x8e0>
   11a04:	ldr	r4, [r6]
   11a08:	tst	sl, #1
   11a0c:	beq	11a20 <putchar_unlocked@plt+0x88c>
   11a10:	mov	r0, r4
   11a14:	bl	11bf4 <putchar_unlocked@plt+0xa60>
   11a18:	and	r9, r9, r0
   11a1c:	b	119f8 <putchar_unlocked@plt+0x864>
   11a20:	mov	r0, r4
   11a24:	ldr	r1, [sp, #24]
   11a28:	add	r2, sp, #31
   11a2c:	bl	1247c <putchar_unlocked@plt+0x12e8>
   11a30:	mov	r1, #0
   11a34:	cmp	r0, #0
   11a38:	beq	119f4 <putchar_unlocked@plt+0x860>
   11a3c:	movw	r0, #33145	; 0x8179
   11a40:	movt	r0, #2
   11a44:	ldrb	r0, [r0]
   11a48:	cmp	r0, #0
   11a4c:	mov	r0, #10
   11a50:	movwne	r0, #0
   11a54:	str	r0, [sp]
   11a58:	mov	r0, r4
   11a5c:	mov	r1, r5
   11a60:	ldr	r2, [sp, #24]
   11a64:	mov	r3, r7
   11a68:	bl	125fc <putchar_unlocked@plt+0x1468>
   11a6c:	mov	r1, r9
   11a70:	b	119f4 <putchar_unlocked@plt+0x860>
   11a74:	movw	r0, #33153	; 0x8181
   11a78:	movt	r0, #2
   11a7c:	ldrb	r0, [r0]
   11a80:	cmp	r0, #0
   11a84:	beq	11aa0 <putchar_unlocked@plt+0x90c>
   11a88:	movw	r0, #33128	; 0x8168
   11a8c:	movt	r0, #2
   11a90:	ldr	r0, [r0]
   11a94:	bl	13bb0 <putchar_unlocked@plt+0x2a1c>
   11a98:	cmn	r0, #1
   11a9c:	beq	11bb8 <putchar_unlocked@plt+0xa24>
   11aa0:	mov	r0, #1
   11aa4:	bic	r0, r0, r9
   11aa8:	sub	sp, fp, #28
   11aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ab0:	cmn	r0, #3
   11ab4:	bne	11b14 <putchar_unlocked@plt+0x980>
   11ab8:	movw	r0, #33028	; 0x8104
   11abc:	movt	r0, #2
   11ac0:	ldr	r3, [r0]
   11ac4:	movw	r0, #33132	; 0x816c
   11ac8:	movt	r0, #2
   11acc:	ldr	r0, [r0]
   11ad0:	mov	r1, #0
   11ad4:	movw	r2, #29493	; 0x7335
   11ad8:	movt	r2, #1
   11adc:	movw	r7, #29480	; 0x7328
   11ae0:	movt	r7, #1
   11ae4:	movw	r6, #29465	; 0x7319
   11ae8:	movt	r6, #1
   11aec:	stm	sp, {r6, r7}
   11af0:	str	r2, [sp, #8]
   11af4:	str	r1, [sp, #12]
   11af8:	movw	r1, #29414	; 0x72e6
   11afc:	movt	r1, #1
   11b00:	movw	r2, #29451	; 0x730b
   11b04:	movt	r2, #1
   11b08:	bl	15e10 <putchar_unlocked@plt+0x4c7c>
   11b0c:	mov	r0, #0
   11b10:	bl	11050 <exit@plt>
   11b14:	cmn	r0, #2
   11b18:	bne	11b24 <putchar_unlocked@plt+0x990>
   11b1c:	mov	r0, #0
   11b20:	bl	11290 <putchar_unlocked@plt+0xfc>
   11b24:	mov	r0, #1
   11b28:	bl	11290 <putchar_unlocked@plt+0xfc>
   11b2c:	movw	r1, #29506	; 0x7342
   11b30:	movt	r1, #1
   11b34:	b	11b94 <putchar_unlocked@plt+0xa00>
   11b38:	movw	r1, #29541	; 0x7365
   11b3c:	movt	r1, #1
   11b40:	b	11b94 <putchar_unlocked@plt+0xa00>
   11b44:	movw	r1, #29601	; 0x73a1
   11b48:	movt	r1, #1
   11b4c:	b	11b94 <putchar_unlocked@plt+0xa00>
   11b50:	movw	r1, #29658	; 0x73da
   11b54:	movt	r1, #1
   11b58:	b	11b94 <putchar_unlocked@plt+0xa00>
   11b5c:	movw	r1, #29731	; 0x7423
   11b60:	movt	r1, #1
   11b64:	b	11b94 <putchar_unlocked@plt+0xa00>
   11b68:	movw	r1, #29803	; 0x746b
   11b6c:	movt	r1, #1
   11b70:	b	11b94 <putchar_unlocked@plt+0xa00>
   11b74:	movw	r1, #29867	; 0x74ab
   11b78:	movt	r1, #1
   11b7c:	b	11b94 <putchar_unlocked@plt+0xa00>
   11b80:	movw	r1, #29929	; 0x74e9
   11b84:	movt	r1, #1
   11b88:	b	11b94 <putchar_unlocked@plt+0xa00>
   11b8c:	movw	r1, #29992	; 0x7528
   11b90:	movt	r1, #1
   11b94:	mov	r0, #0
   11b98:	mov	r2, #5
   11b9c:	bl	10f78 <dcgettext@plt>
   11ba0:	mov	r2, r0
   11ba4:	mov	r0, #0
   11ba8:	mov	r1, #0
   11bac:	bl	10ff0 <error@plt>
   11bb0:	mov	r0, #1
   11bb4:	bl	11290 <putchar_unlocked@plt+0xfc>
   11bb8:	bl	11080 <__errno_location@plt>
   11bbc:	ldr	r4, [r0]
   11bc0:	movw	r1, #30056	; 0x7568
   11bc4:	movt	r1, #1
   11bc8:	mov	r0, #0
   11bcc:	mov	r2, #5
   11bd0:	bl	10f78 <dcgettext@plt>
   11bd4:	mov	r2, r0
   11bd8:	mov	r0, #1
   11bdc:	mov	r1, r4
   11be0:	bl	10ff0 <error@plt>
   11be4:	add	r0, r0, #3
   11be8:	and	r1, r0, #3
   11bec:	sub	r0, r0, r1
   11bf0:	bx	lr
   11bf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bf8:	add	fp, sp, #28
   11bfc:	sub	sp, sp, #124	; 0x7c
   11c00:	mov	r8, r0
   11c04:	sub	r0, fp, #48	; 0x30
   11c08:	bl	11be4 <putchar_unlocked@plt+0xa50>
   11c0c:	str	r0, [sp, #68]	; 0x44
   11c10:	movw	r1, #31458	; 0x7ae2
   11c14:	movt	r1, #1
   11c18:	mov	r0, r8
   11c1c:	bl	10f24 <strcmp@plt>
   11c20:	str	r0, [sp, #64]	; 0x40
   11c24:	cmp	r0, #0
   11c28:	beq	11c4c <putchar_unlocked@plt+0xab8>
   11c2c:	movw	r1, #30985	; 0x7909
   11c30:	movt	r1, #1
   11c34:	mov	r0, r8
   11c38:	bl	13cb8 <putchar_unlocked@plt+0x2b24>
   11c3c:	cmp	r0, #0
   11c40:	beq	12380 <putchar_unlocked@plt+0x11ec>
   11c44:	mov	r9, r0
   11c48:	b	11c80 <putchar_unlocked@plt+0xaec>
   11c4c:	movw	r0, #33153	; 0x8181
   11c50:	movt	r0, #2
   11c54:	mov	r1, #1
   11c58:	strb	r1, [r0]
   11c5c:	movw	r1, #30056	; 0x7568
   11c60:	movt	r1, #1
   11c64:	mov	r0, #0
   11c68:	mov	r2, #5
   11c6c:	bl	10f78 <dcgettext@plt>
   11c70:	mov	r8, r0
   11c74:	movw	r0, #33128	; 0x8168
   11c78:	movt	r0, #2
   11c7c:	ldr	r9, [r0]
   11c80:	mov	r6, #0
   11c84:	str	r6, [fp, #-56]	; 0xffffffc8
   11c88:	str	r6, [fp, #-52]	; 0xffffffcc
   11c8c:	mov	r0, #0
   11c90:	str	r0, [sp, #36]	; 0x24
   11c94:	mov	r7, #0
   11c98:	mov	sl, #0
   11c9c:	mov	r0, #0
   11ca0:	str	r0, [sp, #52]	; 0x34
   11ca4:	mov	r0, #0
   11ca8:	str	r0, [sp, #60]	; 0x3c
   11cac:	mov	r0, #0
   11cb0:	str	r0, [sp, #56]	; 0x38
   11cb4:	mov	r0, #0
   11cb8:	str	r0, [sp, #44]	; 0x2c
   11cbc:	mov	r0, #0
   11cc0:	str	r0, [sp, #40]	; 0x28
   11cc4:	mov	r4, #0
   11cc8:	mov	r5, #0
   11ccc:	mov	r0, #0
   11cd0:	str	r0, [sp, #72]	; 0x48
   11cd4:	mov	r0, #0
   11cd8:	str	r0, [sp, #76]	; 0x4c
   11cdc:	adds	r7, r7, #1
   11ce0:	adcs	sl, sl, #0
   11ce4:	adc	r0, r6, #0
   11ce8:	cmp	r0, #1
   11cec:	beq	12440 <putchar_unlocked@plt+0x12ac>
   11cf0:	sub	r0, fp, #52	; 0x34
   11cf4:	sub	r1, fp, #56	; 0x38
   11cf8:	mov	r2, r9
   11cfc:	bl	1114c <getline@plt>
   11d00:	cmp	r0, #1
   11d04:	blt	12120 <putchar_unlocked@plt+0xf8c>
   11d08:	mov	r1, r0
   11d0c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11d10:	ldrb	r2, [r0]
   11d14:	cmp	r2, #35	; 0x23
   11d18:	beq	12100 <putchar_unlocked@plt+0xf6c>
   11d1c:	sub	r2, r1, #1
   11d20:	ldrb	r3, [r0, r2]
   11d24:	cmp	r3, #10
   11d28:	moveq	r1, r2
   11d2c:	sub	r2, r1, #1
   11d30:	cmp	r1, #0
   11d34:	mov	r3, r1
   11d38:	movgt	r3, r2
   11d3c:	ldrb	r3, [r0, r3]
   11d40:	cmp	r3, #13
   11d44:	moveq	r1, r2
   11d48:	cmp	r1, #0
   11d4c:	beq	12100 <putchar_unlocked@plt+0xf6c>
   11d50:	strb	r6, [r0, r1]
   11d54:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11d58:	sub	r2, fp, #60	; 0x3c
   11d5c:	str	r2, [sp]
   11d60:	sub	r2, fp, #68	; 0x44
   11d64:	sub	r3, fp, #64	; 0x40
   11d68:	bl	12748 <putchar_unlocked@plt+0x15b4>
   11d6c:	cmp	r0, #0
   11d70:	beq	11eec <putchar_unlocked@plt+0xd58>
   11d74:	ldr	r0, [sp, #64]	; 0x40
   11d78:	cmp	r0, #0
   11d7c:	bne	11d98 <putchar_unlocked@plt+0xc04>
   11d80:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11d84:	movw	r1, #31458	; 0x7ae2
   11d88:	movt	r1, #1
   11d8c:	bl	10f24 <strcmp@plt>
   11d90:	cmp	r0, #0
   11d94:	beq	11eec <putchar_unlocked@plt+0xd58>
   11d98:	movw	r0, #33140	; 0x8174
   11d9c:	movt	r0, #2
   11da0:	ldrb	r0, [r0]
   11da4:	mov	r6, #0
   11da8:	cmp	r0, #0
   11dac:	bne	11dc8 <putchar_unlocked@plt+0xc34>
   11db0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11db4:	mov	r1, #10
   11db8:	bl	11074 <strchr@plt>
   11dbc:	mov	r6, r0
   11dc0:	cmp	r0, #0
   11dc4:	movwne	r6, #1
   11dc8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11dcc:	str	r0, [sp, #52]	; 0x34
   11dd0:	ldr	r1, [sp, #68]	; 0x44
   11dd4:	sub	r2, fp, #69	; 0x45
   11dd8:	bl	1247c <putchar_unlocked@plt+0x12e8>
   11ddc:	cmp	r0, #0
   11de0:	beq	11f7c <putchar_unlocked@plt+0xde8>
   11de4:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   11de8:	cmp	r0, #0
   11dec:	beq	11e04 <putchar_unlocked@plt+0xc70>
   11df0:	movw	r0, #33143	; 0x8177
   11df4:	movt	r0, #2
   11df8:	ldrb	r0, [r0]
   11dfc:	cmp	r0, #0
   11e00:	bne	11fa8 <putchar_unlocked@plt+0xe14>
   11e04:	str	r6, [sp, #24]
   11e08:	str	r5, [sp, #28]
   11e0c:	str	r4, [sp, #48]	; 0x30
   11e10:	str	r8, [sp, #32]
   11e14:	movw	r0, #33152	; 0x8180
   11e18:	movt	r0, #2
   11e1c:	ldrb	r4, [r0]
   11e20:	cmp	r4, #0
   11e24:	movwne	r4, #16
   11e28:	mov	r8, #0
   11e2c:	beq	11e88 <putchar_unlocked@plt+0xcf4>
   11e30:	bl	11020 <__ctype_tolower_loc@plt>
   11e34:	movw	r6, #31272	; 0x7a28
   11e38:	movt	r6, #1
   11e3c:	ldr	r0, [r0]
   11e40:	mov	r8, #0
   11e44:	ldr	r1, [fp, #-68]	; 0xffffffbc
   11e48:	ldr	r2, [sp, #68]	; 0x44
   11e4c:	ldrb	r2, [r2, r8]
   11e50:	ldrb	r3, [r6, r2, lsr #4]
   11e54:	ldrb	r5, [r1, r8, lsl #1]
   11e58:	ldr	r5, [r0, r5, lsl #2]
   11e5c:	cmp	r5, r3
   11e60:	andeq	r2, r2, #15
   11e64:	ldrbeq	r2, [r6, r2]
   11e68:	addeq	r3, r1, r8, lsl #1
   11e6c:	ldrbeq	r3, [r3, #1]
   11e70:	ldreq	r3, [r0, r3, lsl #2]
   11e74:	cmpeq	r3, r2
   11e78:	bne	11e88 <putchar_unlocked@plt+0xcf4>
   11e7c:	add	r8, r8, #1
   11e80:	cmp	r8, r4
   11e84:	bcc	11e48 <putchar_unlocked@plt+0xcb4>
   11e88:	ldr	r0, [sp, #44]	; 0x2c
   11e8c:	adds	r3, r0, #1
   11e90:	ldr	r1, [sp, #40]	; 0x28
   11e94:	adc	r6, r1, #0
   11e98:	cmp	r8, r4
   11e9c:	movne	r0, r3
   11ea0:	movne	r1, r6
   11ea4:	movw	r2, #33140	; 0x8174
   11ea8:	movt	r2, #2
   11eac:	ldrb	r2, [r2]
   11eb0:	cmp	r2, #0
   11eb4:	beq	11ffc <putchar_unlocked@plt+0xe68>
   11eb8:	sub	r2, r8, r4
   11ebc:	clz	r2, r2
   11ec0:	lsr	r2, r2, #5
   11ec4:	ldr	r3, [sp, #36]	; 0x24
   11ec8:	orr	r3, r3, r2
   11ecc:	str	r3, [sp, #36]	; 0x24
   11ed0:	str	r0, [sp, #44]	; 0x2c
   11ed4:	str	r1, [sp, #40]	; 0x28
   11ed8:	ldr	r8, [sp, #32]
   11edc:	ldr	r4, [sp, #48]	; 0x30
   11ee0:	ldr	r5, [sp, #28]
   11ee4:	mov	r6, #0
   11ee8:	b	120f8 <putchar_unlocked@plt+0xf64>
   11eec:	ldr	r0, [sp, #72]	; 0x48
   11ef0:	adds	r0, r0, #1
   11ef4:	str	r0, [sp, #72]	; 0x48
   11ef8:	ldr	r0, [sp, #76]	; 0x4c
   11efc:	adc	r0, r0, #0
   11f00:	str	r0, [sp, #76]	; 0x4c
   11f04:	movw	r0, #33141	; 0x8175
   11f08:	movt	r0, #2
   11f0c:	ldrb	r0, [r0]
   11f10:	cmp	r0, #1
   11f14:	bne	11f70 <putchar_unlocked@plt+0xddc>
   11f18:	mov	r0, #0
   11f1c:	movw	r1, #30546	; 0x7752
   11f20:	movt	r1, #1
   11f24:	mov	r2, #5
   11f28:	bl	10f78 <dcgettext@plt>
   11f2c:	mov	r6, r5
   11f30:	mov	r5, r0
   11f34:	mov	r0, #0
   11f38:	mov	r1, #3
   11f3c:	mov	r2, r8
   11f40:	bl	154ec <putchar_unlocked@plt+0x4358>
   11f44:	mov	r3, r0
   11f48:	stm	sp, {r7, sl}
   11f4c:	movw	r0, #28139	; 0x6deb
   11f50:	movt	r0, #1
   11f54:	str	r0, [sp, #8]
   11f58:	mov	r0, #0
   11f5c:	mov	r1, #0
   11f60:	mov	r2, r5
   11f64:	mov	r5, r6
   11f68:	mov	r6, #0
   11f6c:	bl	10ff0 <error@plt>
   11f70:	adds	r4, r4, #1
   11f74:	adc	r5, r5, #0
   11f78:	b	12100 <putchar_unlocked@plt+0xf6c>
   11f7c:	ldr	r0, [sp, #60]	; 0x3c
   11f80:	adds	r0, r0, #1
   11f84:	str	r0, [sp, #60]	; 0x3c
   11f88:	ldr	r0, [sp, #56]	; 0x38
   11f8c:	adc	r0, r0, #0
   11f90:	str	r0, [sp, #56]	; 0x38
   11f94:	movw	r0, #33140	; 0x8174
   11f98:	movt	r0, #2
   11f9c:	ldrb	r0, [r0]
   11fa0:	cmp	r0, #0
   11fa4:	beq	11fb0 <putchar_unlocked@plt+0xe1c>
   11fa8:	mov	r6, #0
   11fac:	b	120f8 <putchar_unlocked@plt+0xf64>
   11fb0:	cmp	r6, #0
   11fb4:	beq	11fc0 <putchar_unlocked@plt+0xe2c>
   11fb8:	mov	r0, #92	; 0x5c
   11fbc:	bl	11194 <putchar_unlocked@plt>
   11fc0:	ldr	r0, [sp, #52]	; 0x34
   11fc4:	mov	r1, r6
   11fc8:	bl	12924 <putchar_unlocked@plt+0x1790>
   11fcc:	mov	r0, #0
   11fd0:	movw	r1, #30594	; 0x7782
   11fd4:	movt	r1, #1
   11fd8:	mov	r2, #5
   11fdc:	bl	10f78 <dcgettext@plt>
   11fe0:	mov	r2, r0
   11fe4:	mov	r0, #1
   11fe8:	movw	r1, #32265	; 0x7e09
   11fec:	movt	r1, #1
   11ff0:	bl	110b0 <__printf_chk@plt>
   11ff4:	mov	r6, #0
   11ff8:	b	120f8 <putchar_unlocked@plt+0xf64>
   11ffc:	cmp	r8, r4
   12000:	ldr	r5, [sp, #28]
   12004:	bne	12028 <putchar_unlocked@plt+0xe94>
   12008:	movw	r0, #33142	; 0x8176
   1200c:	movt	r0, #2
   12010:	ldrb	r0, [r0]
   12014:	cmp	r0, #0
   12018:	beq	12028 <putchar_unlocked@plt+0xe94>
   1201c:	mov	r0, #1
   12020:	str	r0, [sp, #36]	; 0x24
   12024:	b	12090 <putchar_unlocked@plt+0xefc>
   12028:	str	r6, [sp, #16]
   1202c:	str	r3, [sp, #20]
   12030:	ldr	r6, [sp, #24]
   12034:	cmp	r6, #0
   12038:	beq	12044 <putchar_unlocked@plt+0xeb0>
   1203c:	mov	r0, #92	; 0x5c
   12040:	bl	11194 <putchar_unlocked@plt>
   12044:	ldr	r0, [sp, #52]	; 0x34
   12048:	mov	r1, r6
   1204c:	bl	12924 <putchar_unlocked@plt+0x1790>
   12050:	cmp	r8, r4
   12054:	beq	120a0 <putchar_unlocked@plt+0xf0c>
   12058:	mov	r0, #0
   1205c:	movw	r1, #30614	; 0x7796
   12060:	movt	r1, #1
   12064:	mov	r2, #5
   12068:	bl	10f78 <dcgettext@plt>
   1206c:	mov	r2, r0
   12070:	mov	r0, #1
   12074:	movw	r1, #32265	; 0x7e09
   12078:	movt	r1, #1
   1207c:	bl	110b0 <__printf_chk@plt>
   12080:	ldr	r0, [sp, #20]
   12084:	str	r0, [sp, #44]	; 0x2c
   12088:	ldr	r0, [sp, #16]
   1208c:	str	r0, [sp, #40]	; 0x28
   12090:	ldr	r8, [sp, #32]
   12094:	ldr	r4, [sp, #48]	; 0x30
   12098:	mov	r6, #0
   1209c:	b	120f8 <putchar_unlocked@plt+0xf64>
   120a0:	movw	r0, #33142	; 0x8176
   120a4:	movt	r0, #2
   120a8:	ldrb	r0, [r0]
   120ac:	mov	r1, #1
   120b0:	str	r1, [sp, #36]	; 0x24
   120b4:	cmp	r0, #0
   120b8:	ldr	r8, [sp, #32]
   120bc:	ldr	r4, [sp, #48]	; 0x30
   120c0:	mov	r6, #0
   120c4:	bne	120f8 <putchar_unlocked@plt+0xf64>
   120c8:	mov	r0, #0
   120cc:	movw	r1, #30621	; 0x779d
   120d0:	movt	r1, #1
   120d4:	mov	r2, #5
   120d8:	bl	10f78 <dcgettext@plt>
   120dc:	mov	r2, r0
   120e0:	mov	r0, #1
   120e4:	str	r0, [sp, #36]	; 0x24
   120e8:	mov	r0, #1
   120ec:	movw	r1, #32265	; 0x7e09
   120f0:	movt	r1, #1
   120f4:	bl	110b0 <__printf_chk@plt>
   120f8:	mov	r0, #1
   120fc:	str	r0, [sp, #52]	; 0x34
   12100:	mov	r0, r9
   12104:	bl	11170 <feof_unlocked@plt>
   12108:	cmp	r0, #0
   1210c:	bne	12120 <putchar_unlocked@plt+0xf8c>
   12110:	mov	r0, r9
   12114:	bl	10fd8 <ferror_unlocked@plt>
   12118:	cmp	r0, #0
   1211c:	beq	11cdc <putchar_unlocked@plt+0xb48>
   12120:	str	r4, [sp, #48]	; 0x30
   12124:	mov	sl, r5
   12128:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1212c:	bl	13d68 <putchar_unlocked@plt+0x2bd4>
   12130:	mov	r0, r9
   12134:	bl	10fd8 <ferror_unlocked@plt>
   12138:	mov	r5, r0
   1213c:	mov	r4, #0
   12140:	cmp	r0, #0
   12144:	mvneq	r4, #0
   12148:	ldr	r0, [sp, #64]	; 0x40
   1214c:	cmp	r0, #0
   12150:	beq	12198 <putchar_unlocked@plt+0x1004>
   12154:	mov	r0, r9
   12158:	bl	13bb0 <putchar_unlocked@plt+0x2a1c>
   1215c:	cmp	r5, #0
   12160:	bne	121a0 <putchar_unlocked@plt+0x100c>
   12164:	cmp	r0, #0
   12168:	ldr	r6, [sp, #60]	; 0x3c
   1216c:	ldr	r7, [sp, #56]	; 0x38
   12170:	ldr	r5, [sp, #76]	; 0x4c
   12174:	beq	12180 <putchar_unlocked@plt+0xfec>
   12178:	bl	11080 <__errno_location@plt>
   1217c:	ldr	r4, [r0]
   12180:	cmp	r4, #0
   12184:	bmi	121b4 <putchar_unlocked@plt+0x1020>
   12188:	beq	123b4 <putchar_unlocked@plt+0x1220>
   1218c:	movw	r5, #31319	; 0x7a57
   12190:	movt	r5, #1
   12194:	b	123cc <putchar_unlocked@plt+0x1238>
   12198:	mov	r0, r9
   1219c:	bl	1111c <clearerr_unlocked@plt>
   121a0:	ldr	r6, [sp, #60]	; 0x3c
   121a4:	ldr	r7, [sp, #56]	; 0x38
   121a8:	ldr	r5, [sp, #76]	; 0x4c
   121ac:	cmp	r4, #0
   121b0:	bpl	12188 <putchar_unlocked@plt+0xff4>
   121b4:	ldr	r0, [sp, #52]	; 0x34
   121b8:	tst	r0, #1
   121bc:	beq	123f4 <putchar_unlocked@plt+0x1260>
   121c0:	movw	r0, #33140	; 0x8174
   121c4:	movt	r0, #2
   121c8:	ldrb	r0, [r0]
   121cc:	cmp	r0, #0
   121d0:	ldr	r4, [sp, #48]	; 0x30
   121d4:	bne	1232c <putchar_unlocked@plt+0x1198>
   121d8:	ldr	r4, [sp, #72]	; 0x48
   121dc:	orrs	r0, r4, r5
   121e0:	beq	12228 <putchar_unlocked@plt+0x1094>
   121e4:	mov	r0, r4
   121e8:	mov	r1, r5
   121ec:	bl	129d8 <putchar_unlocked@plt+0x1844>
   121f0:	mov	r3, r0
   121f4:	mov	r0, #5
   121f8:	str	r0, [sp]
   121fc:	movw	r1, #30686	; 0x77de
   12200:	movt	r1, #1
   12204:	movw	r2, #30729	; 0x7809
   12208:	movt	r2, #1
   1220c:	mov	r0, #0
   12210:	bl	11188 <dcngettext@plt>
   12214:	mov	r2, r0
   12218:	stm	sp, {r4, r5}
   1221c:	mov	r0, #0
   12220:	mov	r1, #0
   12224:	bl	10ff0 <error@plt>
   12228:	orrs	r0, r6, r7
   1222c:	beq	12274 <putchar_unlocked@plt+0x10e0>
   12230:	mov	r0, r6
   12234:	mov	r1, r7
   12238:	bl	129d8 <putchar_unlocked@plt+0x1844>
   1223c:	mov	r3, r0
   12240:	mov	r0, #5
   12244:	str	r0, [sp]
   12248:	movw	r1, #30774	; 0x7836
   1224c:	movt	r1, #1
   12250:	movw	r2, #30818	; 0x7862
   12254:	movt	r2, #1
   12258:	mov	r0, #0
   1225c:	bl	11188 <dcngettext@plt>
   12260:	mov	r2, r0
   12264:	stm	sp, {r6, r7}
   12268:	mov	r0, #0
   1226c:	mov	r1, #0
   12270:	bl	10ff0 <error@plt>
   12274:	ldr	r4, [sp, #44]	; 0x2c
   12278:	ldr	r9, [sp, #40]	; 0x28
   1227c:	orrs	r0, r4, r9
   12280:	beq	122c8 <putchar_unlocked@plt+0x1134>
   12284:	mov	r0, r4
   12288:	mov	r1, r9
   1228c:	bl	129d8 <putchar_unlocked@plt+0x1844>
   12290:	mov	r3, r0
   12294:	mov	r0, #5
   12298:	str	r0, [sp]
   1229c:	movw	r1, #30863	; 0x788f
   122a0:	movt	r1, #1
   122a4:	movw	r2, #30909	; 0x78bd
   122a8:	movt	r2, #1
   122ac:	mov	r0, #0
   122b0:	bl	11188 <dcngettext@plt>
   122b4:	mov	r2, r0
   122b8:	stm	sp, {r4, r9}
   122bc:	mov	r0, #0
   122c0:	mov	r1, #0
   122c4:	bl	10ff0 <error@plt>
   122c8:	movw	r0, #33143	; 0x8177
   122cc:	movt	r0, #2
   122d0:	ldrb	r0, [r0]
   122d4:	mvn	r0, r0
   122d8:	ldr	r1, [sp, #36]	; 0x24
   122dc:	orr	r0, r1, r0
   122e0:	tst	r0, #1
   122e4:	ldr	r4, [sp, #48]	; 0x30
   122e8:	bne	1232c <putchar_unlocked@plt+0x1198>
   122ec:	movw	r1, #30956	; 0x78ec
   122f0:	movt	r1, #1
   122f4:	mov	r0, #0
   122f8:	mov	r2, #5
   122fc:	bl	10f78 <dcgettext@plt>
   12300:	mov	r4, r0
   12304:	mov	r0, #0
   12308:	mov	r1, #3
   1230c:	mov	r2, r8
   12310:	bl	154ec <putchar_unlocked@plt+0x4358>
   12314:	mov	r3, r0
   12318:	mov	r0, #0
   1231c:	mov	r1, #0
   12320:	mov	r2, r4
   12324:	ldr	r4, [sp, #48]	; 0x30
   12328:	bl	10ff0 <error@plt>
   1232c:	ldr	r0, [sp, #44]	; 0x2c
   12330:	orr	r0, r6, r0
   12334:	ldr	r1, [sp, #40]	; 0x28
   12338:	orr	r1, r7, r1
   1233c:	orrs	r0, r0, r1
   12340:	movwne	r0, #1
   12344:	ldr	r1, [sp, #36]	; 0x24
   12348:	mvn	r1, r1
   1234c:	orr	r0, r1, r0
   12350:	mov	r6, #0
   12354:	tst	r0, #1
   12358:	bne	12434 <putchar_unlocked@plt+0x12a0>
   1235c:	orr	r0, r4, sl
   12360:	clz	r0, r0
   12364:	lsr	r0, r0, #5
   12368:	movw	r1, #33144	; 0x8178
   1236c:	movt	r1, #2
   12370:	ldrb	r1, [r1]
   12374:	eor	r1, r1, #1
   12378:	orr	r6, r0, r1
   1237c:	b	12434 <putchar_unlocked@plt+0x12a0>
   12380:	bl	11080 <__errno_location@plt>
   12384:	ldr	r4, [r0]
   12388:	mov	r6, #0
   1238c:	mov	r0, #0
   12390:	mov	r1, #3
   12394:	mov	r2, r8
   12398:	bl	154ec <putchar_unlocked@plt+0x4358>
   1239c:	mov	r3, r0
   123a0:	movw	r2, #31319	; 0x7a57
   123a4:	movt	r2, #1
   123a8:	mov	r0, #0
   123ac:	mov	r1, r4
   123b0:	b	12430 <putchar_unlocked@plt+0x129c>
   123b4:	movw	r1, #30624	; 0x77a0
   123b8:	movt	r1, #1
   123bc:	mov	r0, #0
   123c0:	mov	r2, #5
   123c4:	bl	10f78 <dcgettext@plt>
   123c8:	mov	r5, r0
   123cc:	mov	r6, #0
   123d0:	mov	r0, #0
   123d4:	mov	r1, #3
   123d8:	mov	r2, r8
   123dc:	bl	154ec <putchar_unlocked@plt+0x4358>
   123e0:	mov	r3, r0
   123e4:	mov	r0, #0
   123e8:	mov	r1, r4
   123ec:	mov	r2, r5
   123f0:	b	12430 <putchar_unlocked@plt+0x129c>
   123f4:	mov	r6, #0
   123f8:	movw	r1, #30639	; 0x77af
   123fc:	movt	r1, #1
   12400:	mov	r0, #0
   12404:	mov	r2, #5
   12408:	bl	10f78 <dcgettext@plt>
   1240c:	mov	r4, r0
   12410:	mov	r0, #0
   12414:	mov	r1, #3
   12418:	mov	r2, r8
   1241c:	bl	154ec <putchar_unlocked@plt+0x4358>
   12420:	mov	r3, r0
   12424:	mov	r0, #0
   12428:	mov	r1, #0
   1242c:	mov	r2, r4
   12430:	bl	10ff0 <error@plt>
   12434:	and	r0, r6, #1
   12438:	sub	sp, fp, #28
   1243c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12440:	movw	r1, #30518	; 0x7736
   12444:	movt	r1, #1
   12448:	mov	r0, #0
   1244c:	mov	r2, #5
   12450:	bl	10f78 <dcgettext@plt>
   12454:	mov	r4, r0
   12458:	mov	r0, #0
   1245c:	mov	r1, #3
   12460:	mov	r2, r8
   12464:	bl	154ec <putchar_unlocked@plt+0x4358>
   12468:	mov	r3, r0
   1246c:	mov	r0, #1
   12470:	mov	r1, #0
   12474:	mov	r2, r4
   12478:	bl	10ff0 <error@plt>
   1247c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12480:	add	fp, sp, #24
   12484:	mov	r7, r2
   12488:	mov	r6, r1
   1248c:	mov	r8, r0
   12490:	movw	r1, #31458	; 0x7ae2
   12494:	movt	r1, #1
   12498:	bl	10f24 <strcmp@plt>
   1249c:	mov	r5, r0
   124a0:	mov	r0, #0
   124a4:	strb	r0, [r7]
   124a8:	cmp	r5, #0
   124ac:	beq	12500 <putchar_unlocked@plt+0x136c>
   124b0:	movw	r1, #30985	; 0x7909
   124b4:	movt	r1, #1
   124b8:	mov	r0, r8
   124bc:	bl	13cb8 <putchar_unlocked@plt+0x2b24>
   124c0:	mov	r4, r0
   124c4:	cmp	r0, #0
   124c8:	bne	1251c <putchar_unlocked@plt+0x1388>
   124cc:	movw	r0, #33143	; 0x8177
   124d0:	movt	r0, #2
   124d4:	ldrb	r0, [r0]
   124d8:	cmp	r0, #1
   124dc:	bne	125c0 <putchar_unlocked@plt+0x142c>
   124e0:	bl	11080 <__errno_location@plt>
   124e4:	ldr	r0, [r0]
   124e8:	cmp	r0, #2
   124ec:	bne	125c0 <putchar_unlocked@plt+0x142c>
   124f0:	mov	r4, #1
   124f4:	strb	r4, [r7]
   124f8:	mov	r0, r4
   124fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12500:	movw	r0, #33153	; 0x8181
   12504:	movt	r0, #2
   12508:	mov	r1, #1
   1250c:	strb	r1, [r0]
   12510:	movw	r0, #33128	; 0x8168
   12514:	movt	r0, #2
   12518:	ldr	r4, [r0]
   1251c:	mov	r0, r4
   12520:	mov	r1, #2
   12524:	bl	13b74 <putchar_unlocked@plt+0x29e0>
   12528:	mov	r0, r4
   1252c:	mov	r1, r6
   12530:	bl	12ce8 <putchar_unlocked@plt+0x1b54>
   12534:	cmp	r0, #0
   12538:	beq	12548 <putchar_unlocked@plt+0x13b4>
   1253c:	bl	11080 <__errno_location@plt>
   12540:	ldr	r6, [r0]
   12544:	b	1254c <putchar_unlocked@plt+0x13b8>
   12548:	mov	r6, #0
   1254c:	mov	r0, r4
   12550:	cmp	r5, #0
   12554:	beq	125a8 <putchar_unlocked@plt+0x1414>
   12558:	bl	13bb0 <putchar_unlocked@plt+0x2a1c>
   1255c:	cmp	r6, #0
   12560:	bne	12574 <putchar_unlocked@plt+0x13e0>
   12564:	cmp	r0, #0
   12568:	beq	12574 <putchar_unlocked@plt+0x13e0>
   1256c:	bl	11080 <__errno_location@plt>
   12570:	ldr	r6, [r0]
   12574:	cmp	r6, #0
   12578:	beq	125b4 <putchar_unlocked@plt+0x1420>
   1257c:	mov	r4, #0
   12580:	mov	r0, #0
   12584:	mov	r1, #3
   12588:	mov	r2, r8
   1258c:	bl	154ec <putchar_unlocked@plt+0x4358>
   12590:	mov	r3, r0
   12594:	movw	r2, #31319	; 0x7a57
   12598:	movt	r2, #1
   1259c:	mov	r0, #0
   125a0:	mov	r1, r6
   125a4:	b	125f0 <putchar_unlocked@plt+0x145c>
   125a8:	bl	1111c <clearerr_unlocked@plt>
   125ac:	cmp	r6, #0
   125b0:	bne	1257c <putchar_unlocked@plt+0x13e8>
   125b4:	mov	r4, #1
   125b8:	mov	r0, r4
   125bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   125c0:	bl	11080 <__errno_location@plt>
   125c4:	ldr	r5, [r0]
   125c8:	mov	r4, #0
   125cc:	mov	r0, #0
   125d0:	mov	r1, #3
   125d4:	mov	r2, r8
   125d8:	bl	154ec <putchar_unlocked@plt+0x4358>
   125dc:	mov	r3, r0
   125e0:	movw	r2, #31319	; 0x7a57
   125e4:	movt	r2, #1
   125e8:	mov	r0, #0
   125ec:	mov	r1, r5
   125f0:	bl	10ff0 <error@plt>
   125f4:	mov	r0, r4
   125f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   125fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12600:	add	fp, sp, #28
   12604:	sub	sp, sp, #12
   12608:	mov	sl, r3
   1260c:	mov	r6, r2
   12610:	mov	r7, r0
   12614:	mov	r4, #0
   12618:	ldr	r0, [fp, #8]
   1261c:	cmp	r0, #10
   12620:	str	r0, [sp, #8]
   12624:	str	r1, [sp, #4]
   12628:	bne	12674 <putchar_unlocked@plt+0x14e0>
   1262c:	mov	r0, r7
   12630:	mov	r1, #92	; 0x5c
   12634:	bl	11074 <strchr@plt>
   12638:	cmp	r0, #0
   1263c:	bne	12668 <putchar_unlocked@plt+0x14d4>
   12640:	mov	r0, r7
   12644:	mov	r1, #10
   12648:	bl	11074 <strchr@plt>
   1264c:	cmp	r0, #0
   12650:	bne	12668 <putchar_unlocked@plt+0x14d4>
   12654:	mov	r0, r7
   12658:	mov	r1, #13
   1265c:	bl	11074 <strchr@plt>
   12660:	cmp	r0, #0
   12664:	beq	12674 <putchar_unlocked@plt+0x14e0>
   12668:	mov	r0, #92	; 0x5c
   1266c:	bl	11194 <putchar_unlocked@plt>
   12670:	mov	r4, #1
   12674:	cmp	sl, #0
   12678:	beq	126c0 <putchar_unlocked@plt+0x152c>
   1267c:	movw	r5, #33132	; 0x816c
   12680:	movt	r5, #2
   12684:	ldr	r1, [r5]
   12688:	movw	r0, #28139	; 0x6deb
   1268c:	movt	r0, #1
   12690:	bl	10f0c <fputs_unlocked@plt>
   12694:	ldr	r1, [r5]
   12698:	movw	r0, #30990	; 0x790e
   1269c:	movt	r0, #1
   126a0:	bl	10f0c <fputs_unlocked@plt>
   126a4:	mov	r0, r7
   126a8:	mov	r1, r4
   126ac:	bl	12924 <putchar_unlocked@plt+0x1790>
   126b0:	ldr	r1, [r5]
   126b4:	movw	r0, #30993	; 0x7911
   126b8:	movt	r0, #1
   126bc:	bl	10f0c <fputs_unlocked@plt>
   126c0:	movw	r8, #33152	; 0x8180
   126c4:	movt	r8, #2
   126c8:	ldrb	r0, [r8]
   126cc:	cmp	r0, #1
   126d0:	bne	12708 <putchar_unlocked@plt+0x1574>
   126d4:	mov	r9, #0
   126d8:	movw	r5, #30998	; 0x7916
   126dc:	movt	r5, #1
   126e0:	ldrb	r2, [r6, r9]
   126e4:	mov	r0, #1
   126e8:	mov	r1, r5
   126ec:	bl	110b0 <__printf_chk@plt>
   126f0:	add	r9, r9, #1
   126f4:	ldrb	r0, [r8]
   126f8:	cmp	r0, #0
   126fc:	movwne	r0, #16
   12700:	cmp	r9, r0
   12704:	bcc	126e0 <putchar_unlocked@plt+0x154c>
   12708:	cmp	sl, #0
   1270c:	bne	12738 <putchar_unlocked@plt+0x15a4>
   12710:	mov	r0, #32
   12714:	bl	11194 <putchar_unlocked@plt>
   12718:	mov	r0, #42	; 0x2a
   1271c:	ldr	r1, [sp, #4]
   12720:	cmp	r1, #0
   12724:	movweq	r0, #32
   12728:	bl	11194 <putchar_unlocked@plt>
   1272c:	mov	r0, r7
   12730:	mov	r1, r4
   12734:	bl	12924 <putchar_unlocked@plt+0x1790>
   12738:	ldr	r0, [sp, #8]
   1273c:	sub	sp, fp, #28
   12740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12744:	b	11194 <putchar_unlocked@plt>
   12748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1274c:	add	fp, sp, #28
   12750:	sub	sp, sp, #12
   12754:	str	r3, [sp, #8]
   12758:	mov	r5, r2
   1275c:	mov	sl, r1
   12760:	mov	r6, r0
   12764:	mov	r9, #0
   12768:	ldr	r7, [fp, #8]
   1276c:	b	12774 <putchar_unlocked@plt+0x15e0>
   12770:	add	r9, r9, #1
   12774:	ldrb	r0, [r6, r9]
   12778:	cmp	r0, #9
   1277c:	cmpne	r0, #32
   12780:	beq	12770 <putchar_unlocked@plt+0x15dc>
   12784:	cmp	r0, #92	; 0x5c
   12788:	movne	r8, #0
   1278c:	addeq	r9, r9, #1
   12790:	moveq	r8, #1
   12794:	add	r4, r6, r9
   12798:	movw	r1, #28139	; 0x6deb
   1279c:	movt	r1, #1
   127a0:	mov	r0, r4
   127a4:	mov	r2, #3
   127a8:	bl	11158 <strncmp@plt>
   127ac:	cmp	r0, #0
   127b0:	beq	12880 <putchar_unlocked@plt+0x16ec>
   127b4:	sub	r0, sl, r9
   127b8:	movw	r1, #33148	; 0x817c
   127bc:	movt	r1, #2
   127c0:	ldrb	r1, [r1]
   127c4:	ldrb	r2, [r4]
   127c8:	sub	r2, r2, #92	; 0x5c
   127cc:	clz	r2, r2
   127d0:	lsr	r2, r2, #5
   127d4:	bfi	r2, r1, #1, #1
   127d8:	bfi	r2, r1, #5, #1
   127dc:	mov	r7, #0
   127e0:	cmp	r0, r2
   127e4:	bcc	12918 <putchar_unlocked@plt+0x1784>
   127e8:	str	r4, [r5]
   127ec:	movw	r0, #33152	; 0x8180
   127f0:	movt	r0, #2
   127f4:	ldrb	r0, [r0]
   127f8:	cmp	r0, #0
   127fc:	addne	r9, r9, #32
   12800:	ldrb	r0, [r6, r9]
   12804:	cmp	r0, #32
   12808:	cmpne	r0, #9
   1280c:	bne	12918 <putchar_unlocked@plt+0x1784>
   12810:	mov	r7, #0
   12814:	strb	r7, [r6, r9]
   12818:	ldr	r0, [r5]
   1281c:	bl	12ad0 <putchar_unlocked@plt+0x193c>
   12820:	cmp	r0, #0
   12824:	beq	12918 <putchar_unlocked@plt+0x1784>
   12828:	add	r1, r9, #1
   1282c:	sub	r0, sl, r1
   12830:	cmp	r0, #1
   12834:	beq	128d0 <putchar_unlocked@plt+0x173c>
   12838:	ldrb	r0, [r6, r1]
   1283c:	cmp	r0, #32
   12840:	cmpne	r0, #42	; 0x2a
   12844:	bne	128d0 <putchar_unlocked@plt+0x173c>
   12848:	movw	r2, #33024	; 0x8100
   1284c:	movt	r2, #2
   12850:	ldr	r3, [r2]
   12854:	cmp	r3, #1
   12858:	beq	128ec <putchar_unlocked@plt+0x1758>
   1285c:	mov	r1, #0
   12860:	str	r1, [r2]
   12864:	sub	r0, r0, #42	; 0x2a
   12868:	clz	r0, r0
   1286c:	lsr	r0, r0, #5
   12870:	ldr	r1, [sp, #8]
   12874:	str	r0, [r1]
   12878:	add	r1, r9, #2
   1287c:	b	128ec <putchar_unlocked@plt+0x1758>
   12880:	mov	r3, r7
   12884:	add	r0, r9, #3
   12888:	ldrb	r1, [r6, r0]
   1288c:	cmp	r1, #32
   12890:	addeq	r0, r9, #4
   12894:	ldrb	r1, [r6, r0]
   12898:	mov	r7, #0
   1289c:	cmp	r1, #40	; 0x28
   128a0:	bne	12918 <putchar_unlocked@plt+0x1784>
   128a4:	mov	r1, #0
   128a8:	ldr	r2, [sp, #8]
   128ac:	str	r1, [r2]
   128b0:	str	r8, [sp]
   128b4:	add	r1, r0, #1
   128b8:	add	r0, r6, r1
   128bc:	sub	r1, sl, r1
   128c0:	mov	r2, r5
   128c4:	bl	12a08 <putchar_unlocked@plt+0x1874>
   128c8:	sub	sp, fp, #28
   128cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128d0:	movw	r0, #33024	; 0x8100
   128d4:	movt	r0, #2
   128d8:	ldr	r2, [r0]
   128dc:	cmp	r2, #0
   128e0:	beq	12918 <putchar_unlocked@plt+0x1784>
   128e4:	mov	r2, #1
   128e8:	str	r2, [r0]
   128ec:	add	r0, r6, r1
   128f0:	ldr	r2, [fp, #8]
   128f4:	str	r0, [r2]
   128f8:	mov	r7, #1
   128fc:	cmp	r8, #0
   12900:	beq	12918 <putchar_unlocked@plt+0x1784>
   12904:	sub	r1, sl, r1
   12908:	bl	12b40 <putchar_unlocked@plt+0x19ac>
   1290c:	mov	r7, r0
   12910:	cmp	r0, #0
   12914:	movwne	r7, #1
   12918:	mov	r0, r7
   1291c:	sub	sp, fp, #28
   12920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12924:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12928:	add	fp, sp, #24
   1292c:	mov	r4, r0
   12930:	cmp	r1, #0
   12934:	beq	129bc <putchar_unlocked@plt+0x1828>
   12938:	movw	r5, #33132	; 0x816c
   1293c:	movt	r5, #2
   12940:	movw	r8, #30981	; 0x7905
   12944:	movt	r8, #1
   12948:	movw	r6, #30984	; 0x7908
   1294c:	movt	r6, #1
   12950:	movw	r7, #30987	; 0x790b
   12954:	movt	r7, #1
   12958:	b	1296c <putchar_unlocked@plt+0x17d8>
   1295c:	ldr	r1, [r5]
   12960:	mov	r0, r6
   12964:	bl	10f0c <fputs_unlocked@plt>
   12968:	add	r4, r4, #1
   1296c:	ldrb	r0, [r4]
   12970:	cmp	r0, #12
   12974:	ble	12994 <putchar_unlocked@plt+0x1800>
   12978:	cmp	r0, #13
   1297c:	beq	1295c <putchar_unlocked@plt+0x17c8>
   12980:	cmp	r0, #92	; 0x5c
   12984:	bne	129b0 <putchar_unlocked@plt+0x181c>
   12988:	ldr	r1, [r5]
   1298c:	mov	r0, r7
   12990:	b	12964 <putchar_unlocked@plt+0x17d0>
   12994:	cmp	r0, #10
   12998:	bne	129a8 <putchar_unlocked@plt+0x1814>
   1299c:	ldr	r1, [r5]
   129a0:	mov	r0, r8
   129a4:	b	12964 <putchar_unlocked@plt+0x17d0>
   129a8:	cmp	r0, #0
   129ac:	beq	129d4 <putchar_unlocked@plt+0x1840>
   129b0:	bl	11194 <putchar_unlocked@plt>
   129b4:	add	r4, r4, #1
   129b8:	b	1296c <putchar_unlocked@plt+0x17d8>
   129bc:	movw	r0, #33132	; 0x816c
   129c0:	movt	r0, #2
   129c4:	ldr	r1, [r0]
   129c8:	mov	r0, r4
   129cc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   129d0:	b	10f0c <fputs_unlocked@plt>
   129d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   129d8:	cmp	r1, #0
   129dc:	bxeq	lr
   129e0:	push	{r4, sl, fp, lr}
   129e4:	add	fp, sp, #8
   129e8:	movw	r4, #16960	; 0x4240
   129ec:	movt	r4, #15
   129f0:	mov	r2, r4
   129f4:	mov	r3, #0
   129f8:	bl	16b80 <putchar_unlocked@plt+0x59ec>
   129fc:	add	r0, r2, r4
   12a00:	pop	{r4, sl, fp, lr}
   12a04:	bx	lr
   12a08:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12a0c:	add	fp, sp, #24
   12a10:	cmp	r1, #0
   12a14:	beq	12abc <putchar_unlocked@plt+0x1928>
   12a18:	mov	r8, r2
   12a1c:	ldr	ip, [fp, #8]
   12a20:	mov	r4, #1
   12a24:	mov	r7, r0
   12a28:	mov	r6, r7
   12a2c:	mov	r5, r4
   12a30:	cmp	r1, r4
   12a34:	addne	r7, r6, r1
   12a38:	ldrbne	r2, [r7, #-1]
   12a3c:	addne	r4, r5, #1
   12a40:	subne	r7, r6, #1
   12a44:	cmpne	r2, #41	; 0x29
   12a48:	bne	12a28 <putchar_unlocked@plt+0x1894>
   12a4c:	add	r6, r6, r1
   12a50:	ldrb	r2, [r6, #-1]
   12a54:	cmp	r2, #41	; 0x29
   12a58:	bne	12abc <putchar_unlocked@plt+0x1928>
   12a5c:	str	r0, [r3]
   12a60:	cmp	ip, #0
   12a64:	beq	12a78 <putchar_unlocked@plt+0x18e4>
   12a68:	sub	r1, r1, r5
   12a6c:	bl	12b40 <putchar_unlocked@plt+0x19ac>
   12a70:	cmp	r0, #0
   12a74:	beq	12abc <putchar_unlocked@plt+0x1928>
   12a78:	add	r0, r6, #1
   12a7c:	mov	r1, #0
   12a80:	strb	r1, [r6, #-1]
   12a84:	ldrb	r1, [r0, #-1]
   12a88:	cmp	r1, #9
   12a8c:	cmpne	r1, #32
   12a90:	bne	12a9c <putchar_unlocked@plt+0x1908>
   12a94:	add	r0, r0, #1
   12a98:	b	12a84 <putchar_unlocked@plt+0x18f0>
   12a9c:	cmp	r1, #61	; 0x3d
   12aa0:	bne	12abc <putchar_unlocked@plt+0x1928>
   12aa4:	ldrb	r1, [r0]
   12aa8:	cmp	r1, #32
   12aac:	cmpne	r1, #9
   12ab0:	bne	12ac4 <putchar_unlocked@plt+0x1930>
   12ab4:	add	r0, r0, #1
   12ab8:	b	12aa4 <putchar_unlocked@plt+0x1910>
   12abc:	mov	r0, #0
   12ac0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12ac4:	str	r0, [r8]
   12ac8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12acc:	b	12ad0 <putchar_unlocked@plt+0x193c>
   12ad0:	push	{r4, r5, fp, lr}
   12ad4:	add	fp, sp, #8
   12ad8:	mov	r4, r0
   12adc:	movw	r5, #33152	; 0x8180
   12ae0:	movt	r5, #2
   12ae4:	ldrb	r0, [r5]
   12ae8:	cmp	r0, #1
   12aec:	bne	12b30 <putchar_unlocked@plt+0x199c>
   12af0:	bl	11044 <__ctype_b_loc@plt>
   12af4:	ldr	r1, [r0]
   12af8:	ldrb	r2, [r5]
   12afc:	cmp	r2, #0
   12b00:	movwne	r2, #32
   12b04:	mov	r0, #0
   12b08:	mov	r3, #0
   12b0c:	ldrb	r5, [r4, r3]
   12b10:	add	r5, r1, r5, lsl #1
   12b14:	ldrb	r5, [r5, #1]
   12b18:	tst	r5, #16
   12b1c:	beq	12b3c <putchar_unlocked@plt+0x19a8>
   12b20:	add	r3, r3, #1
   12b24:	cmp	r3, r2
   12b28:	bcc	12b0c <putchar_unlocked@plt+0x1978>
   12b2c:	add	r4, r4, r3
   12b30:	ldrb	r0, [r4]
   12b34:	clz	r0, r0
   12b38:	lsr	r0, r0, #5
   12b3c:	pop	{r4, r5, fp, pc}
   12b40:	push	{r4, sl, fp, lr}
   12b44:	add	fp, sp, #8
   12b48:	cmp	r1, #0
   12b4c:	mov	lr, r0
   12b50:	beq	12bc4 <putchar_unlocked@plt+0x1a30>
   12b54:	sub	ip, r1, #1
   12b58:	mov	r3, #0
   12b5c:	mov	lr, r0
   12b60:	b	12b7c <putchar_unlocked@plt+0x19e8>
   12b64:	cmp	r2, #0
   12b68:	beq	12bd8 <putchar_unlocked@plt+0x1a44>
   12b6c:	strb	r2, [lr], #1
   12b70:	add	r3, r3, #1
   12b74:	cmp	r3, r1
   12b78:	bcs	12bc4 <putchar_unlocked@plt+0x1a30>
   12b7c:	ldrb	r2, [r0, r3]
   12b80:	cmp	r2, #92	; 0x5c
   12b84:	bne	12b64 <putchar_unlocked@plt+0x19d0>
   12b88:	cmp	r3, ip
   12b8c:	beq	12bd8 <putchar_unlocked@plt+0x1a44>
   12b90:	add	r3, r3, #1
   12b94:	ldrb	r4, [r0, r3]
   12b98:	cmp	r4, #92	; 0x5c
   12b9c:	beq	12bbc <putchar_unlocked@plt+0x1a28>
   12ba0:	mov	r2, #10
   12ba4:	cmp	r4, #110	; 0x6e
   12ba8:	beq	12b6c <putchar_unlocked@plt+0x19d8>
   12bac:	cmp	r4, #114	; 0x72
   12bb0:	bne	12bd8 <putchar_unlocked@plt+0x1a44>
   12bb4:	mov	r2, #13
   12bb8:	b	12b6c <putchar_unlocked@plt+0x19d8>
   12bbc:	mov	r2, #92	; 0x5c
   12bc0:	b	12b6c <putchar_unlocked@plt+0x19d8>
   12bc4:	add	r1, r0, r1
   12bc8:	cmp	lr, r1
   12bcc:	movcc	r1, #0
   12bd0:	strbcc	r1, [lr]
   12bd4:	pop	{r4, sl, fp, pc}
   12bd8:	mov	r0, #0
   12bdc:	pop	{r4, sl, fp, pc}
   12be0:	movw	r1, #33156	; 0x8184
   12be4:	movt	r1, #2
   12be8:	str	r0, [r1]
   12bec:	bx	lr
   12bf0:	movw	r1, #33160	; 0x8188
   12bf4:	movt	r1, #2
   12bf8:	strb	r0, [r1]
   12bfc:	bx	lr
   12c00:	push	{r4, r5, r6, sl, fp, lr}
   12c04:	add	fp, sp, #16
   12c08:	sub	sp, sp, #8
   12c0c:	movw	r0, #33132	; 0x816c
   12c10:	movt	r0, #2
   12c14:	ldr	r0, [r0]
   12c18:	bl	166e0 <putchar_unlocked@plt+0x554c>
   12c1c:	cmp	r0, #0
   12c20:	beq	12c48 <putchar_unlocked@plt+0x1ab4>
   12c24:	movw	r0, #33160	; 0x8188
   12c28:	movt	r0, #2
   12c2c:	ldrb	r0, [r0]
   12c30:	cmp	r0, #0
   12c34:	beq	12c68 <putchar_unlocked@plt+0x1ad4>
   12c38:	bl	11080 <__errno_location@plt>
   12c3c:	ldr	r0, [r0]
   12c40:	cmp	r0, #32
   12c44:	bne	12c68 <putchar_unlocked@plt+0x1ad4>
   12c48:	movw	r0, #33120	; 0x8160
   12c4c:	movt	r0, #2
   12c50:	ldr	r0, [r0]
   12c54:	bl	166e0 <putchar_unlocked@plt+0x554c>
   12c58:	cmp	r0, #0
   12c5c:	subeq	sp, fp, #16
   12c60:	popeq	{r4, r5, r6, sl, fp, pc}
   12c64:	b	12cd8 <putchar_unlocked@plt+0x1b44>
   12c68:	movw	r1, #31303	; 0x7a47
   12c6c:	movt	r1, #1
   12c70:	mov	r0, #0
   12c74:	mov	r2, #5
   12c78:	bl	10f78 <dcgettext@plt>
   12c7c:	mov	r4, r0
   12c80:	movw	r0, #33156	; 0x8184
   12c84:	movt	r0, #2
   12c88:	ldr	r6, [r0]
   12c8c:	bl	11080 <__errno_location@plt>
   12c90:	ldr	r5, [r0]
   12c94:	cmp	r6, #0
   12c98:	bne	12cb4 <putchar_unlocked@plt+0x1b20>
   12c9c:	movw	r2, #31319	; 0x7a57
   12ca0:	movt	r2, #1
   12ca4:	mov	r0, #0
   12ca8:	mov	r1, r5
   12cac:	mov	r3, r4
   12cb0:	b	12cd4 <putchar_unlocked@plt+0x1b40>
   12cb4:	mov	r0, r6
   12cb8:	bl	154dc <putchar_unlocked@plt+0x4348>
   12cbc:	mov	r3, r0
   12cc0:	str	r4, [sp]
   12cc4:	movw	r2, #31315	; 0x7a53
   12cc8:	movt	r2, #1
   12ccc:	mov	r0, #0
   12cd0:	mov	r1, r5
   12cd4:	bl	10ff0 <error@plt>
   12cd8:	movw	r0, #33032	; 0x8108
   12cdc:	movt	r0, #2
   12ce0:	ldr	r0, [r0]
   12ce4:	bl	10f54 <_exit@plt>
   12ce8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12cec:	add	fp, sp, #24
   12cf0:	sub	sp, sp, #160	; 0xa0
   12cf4:	mov	r8, r1
   12cf8:	mov	r6, r0
   12cfc:	movw	r0, #32840	; 0x8048
   12d00:	bl	16338 <putchar_unlocked@plt+0x51a4>
   12d04:	cmp	r0, #0
   12d08:	beq	12db4 <putchar_unlocked@plt+0x1c20>
   12d0c:	mov	r4, r0
   12d10:	add	r5, sp, #4
   12d14:	mov	r0, r5
   12d18:	bl	12dc4 <putchar_unlocked@plt+0x1c30>
   12d1c:	b	12d30 <putchar_unlocked@plt+0x1b9c>
   12d20:	mov	r0, r4
   12d24:	mov	r1, #32768	; 0x8000
   12d28:	mov	r2, r5
   12d2c:	bl	12ef8 <putchar_unlocked@plt+0x1d64>
   12d30:	mov	r7, #0
   12d34:	mov	r0, r6
   12d38:	bl	11170 <feof_unlocked@plt>
   12d3c:	cmp	r0, #0
   12d40:	bne	12d80 <putchar_unlocked@plt+0x1bec>
   12d44:	add	r0, r4, r7
   12d48:	rsb	r2, r7, #32768	; 0x8000
   12d4c:	mov	r1, #1
   12d50:	mov	r3, r6
   12d54:	bl	11140 <fread_unlocked@plt>
   12d58:	add	r7, r0, r7
   12d5c:	cmp	r7, #32768	; 0x8000
   12d60:	beq	12d20 <putchar_unlocked@plt+0x1b8c>
   12d64:	cmp	r0, #0
   12d68:	bne	12d34 <putchar_unlocked@plt+0x1ba0>
   12d6c:	mov	r0, r6
   12d70:	bl	10fd8 <ferror_unlocked@plt>
   12d74:	mov	r5, #1
   12d78:	cmp	r0, #0
   12d7c:	bne	12da8 <putchar_unlocked@plt+0x1c14>
   12d80:	cmp	r7, #0
   12d84:	beq	12d98 <putchar_unlocked@plt+0x1c04>
   12d88:	add	r2, sp, #4
   12d8c:	mov	r0, r4
   12d90:	mov	r1, r7
   12d94:	bl	139a4 <putchar_unlocked@plt+0x2810>
   12d98:	add	r0, sp, #4
   12d9c:	mov	r1, r8
   12da0:	bl	12e5c <putchar_unlocked@plt+0x1cc8>
   12da4:	mov	r5, #0
   12da8:	mov	r0, r4
   12dac:	bl	13d68 <putchar_unlocked@plt+0x2bd4>
   12db0:	b	12db8 <putchar_unlocked@plt+0x1c24>
   12db4:	mov	r5, #1
   12db8:	mov	r0, r5
   12dbc:	sub	sp, fp, #24
   12dc0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12dc4:	push	{fp, lr}
   12dc8:	mov	fp, sp
   12dcc:	mov	r1, #0
   12dd0:	movw	ip, #21622	; 0x5476
   12dd4:	movt	ip, #4146	; 0x1032
   12dd8:	movw	lr, #56574	; 0xdcfe
   12ddc:	movt	lr, #39098	; 0x98ba
   12de0:	movw	r2, #43913	; 0xab89
   12de4:	movt	r2, #61389	; 0xefcd
   12de8:	movw	r3, #8961	; 0x2301
   12dec:	movt	r3, #26437	; 0x6745
   12df0:	str	r3, [r0]
   12df4:	stmib	r0, {r2, lr}
   12df8:	str	ip, [r0, #12]
   12dfc:	str	r1, [r0, #16]
   12e00:	str	r1, [r0, #20]
   12e04:	str	r1, [r0, #24]
   12e08:	pop	{fp, pc}
   12e0c:	push	{r4, r5, fp, lr}
   12e10:	add	fp, sp, #8
   12e14:	mov	r4, r1
   12e18:	mov	r5, r0
   12e1c:	ldr	r1, [r0]
   12e20:	mov	r0, r4
   12e24:	bl	12e54 <putchar_unlocked@plt+0x1cc0>
   12e28:	ldr	r1, [r5, #4]
   12e2c:	add	r0, r4, #4
   12e30:	bl	12e54 <putchar_unlocked@plt+0x1cc0>
   12e34:	ldr	r1, [r5, #8]
   12e38:	add	r0, r4, #8
   12e3c:	bl	12e54 <putchar_unlocked@plt+0x1cc0>
   12e40:	ldr	r1, [r5, #12]
   12e44:	add	r0, r4, #12
   12e48:	bl	12e54 <putchar_unlocked@plt+0x1cc0>
   12e4c:	mov	r0, r4
   12e50:	pop	{r4, r5, fp, pc}
   12e54:	str	r1, [r0]
   12e58:	bx	lr
   12e5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12e60:	add	fp, sp, #24
   12e64:	mov	r8, r1
   12e68:	mov	r5, r0
   12e6c:	ldr	r2, [r0, #16]
   12e70:	ldr	r1, [r0, #24]
   12e74:	add	r0, r2, r1
   12e78:	str	r0, [r5, #16]
   12e7c:	mov	r7, #32
   12e80:	cmp	r1, #56	; 0x38
   12e84:	movwcc	r7, #16
   12e88:	cmp	r0, r2
   12e8c:	bcs	12e9c <putchar_unlocked@plt+0x1d08>
   12e90:	ldr	r2, [r5, #20]
   12e94:	add	r2, r2, #1
   12e98:	str	r2, [r5, #20]
   12e9c:	mvn	r2, #7
   12ea0:	add	r2, r2, r7, lsl #2
   12ea4:	add	r6, r5, #28
   12ea8:	lsl	r3, r0, #3
   12eac:	str	r3, [r6, r2]
   12eb0:	add	r3, r6, r7, lsl #2
   12eb4:	ldr	r4, [r5, #20]
   12eb8:	lsl	r4, r4, #3
   12ebc:	orr	r0, r4, r0, lsr #29
   12ec0:	str	r0, [r3, #-4]
   12ec4:	add	r0, r6, r1
   12ec8:	sub	r2, r2, r1
   12ecc:	movw	r1, #31328	; 0x7a60
   12ed0:	movt	r1, #1
   12ed4:	bl	10f60 <memcpy@plt>
   12ed8:	lsl	r1, r7, #2
   12edc:	mov	r0, r6
   12ee0:	mov	r2, r5
   12ee4:	bl	12ef8 <putchar_unlocked@plt+0x1d64>
   12ee8:	mov	r0, r5
   12eec:	mov	r1, r8
   12ef0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12ef4:	b	12e0c <putchar_unlocked@plt+0x1c78>
   12ef8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12efc:	add	fp, sp, #28
   12f00:	sub	sp, sp, #88	; 0x58
   12f04:	ldr	r3, [r2, #16]
   12f08:	adds	r3, r3, r1
   12f0c:	str	r3, [r2, #16]
   12f10:	ldr	r3, [r2, #20]
   12f14:	adc	r3, r3, #0
   12f18:	str	r3, [r2, #20]
   12f1c:	bic	r1, r1, #3
   12f20:	add	lr, r0, r1
   12f24:	ldm	r2, {r3, r4, ip}
   12f28:	str	r2, [sp]
   12f2c:	ldr	r1, [r2, #12]
   12f30:	cmp	lr, r0
   12f34:	bls	13948 <putchar_unlocked@plt+0x27b4>
   12f38:	mov	sl, r0
   12f3c:	str	lr, [sp, #4]
   12f40:	str	ip, [fp, #-40]	; 0xffffffd8
   12f44:	str	r3, [sp, #24]
   12f48:	str	r1, [sp, #28]
   12f4c:	eor	r2, ip, r1
   12f50:	and	r2, r4, r2
   12f54:	eor	r2, r2, r1
   12f58:	add	r2, r3, r2
   12f5c:	ldr	r0, [sl]
   12f60:	str	r0, [fp, #-44]	; 0xffffffd4
   12f64:	mov	r6, r4
   12f68:	ldr	r4, [sl, #4]
   12f6c:	str	r4, [fp, #-32]	; 0xffffffe0
   12f70:	ldr	r5, [sl, #8]
   12f74:	str	r5, [fp, #-36]	; 0xffffffdc
   12f78:	ldr	lr, [sl, #12]
   12f7c:	str	lr, [fp, #-52]	; 0xffffffcc
   12f80:	add	r2, r2, r0
   12f84:	movw	r3, #42104	; 0xa478
   12f88:	movt	r3, #55146	; 0xd76a
   12f8c:	add	r2, r2, r3
   12f90:	mov	r3, r6
   12f94:	add	r2, r6, r2, ror #25
   12f98:	eor	r7, r6, ip
   12f9c:	and	r7, r2, r7
   12fa0:	eor	r7, r7, ip
   12fa4:	add	r6, r1, r4
   12fa8:	add	r7, r6, r7
   12fac:	movw	r1, #46934	; 0xb756
   12fb0:	movt	r1, #59591	; 0xe8c7
   12fb4:	add	r7, r7, r1
   12fb8:	add	r7, r2, r7, ror #20
   12fbc:	eor	r6, r2, r3
   12fc0:	and	r6, r7, r6
   12fc4:	eor	r6, r6, r3
   12fc8:	str	r3, [sp, #20]
   12fcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12fd0:	add	r4, r1, r5
   12fd4:	add	r6, r4, r6
   12fd8:	movw	r1, #28891	; 0x70db
   12fdc:	movt	r1, #9248	; 0x2420
   12fe0:	add	r6, r6, r1
   12fe4:	add	r4, r7, r6, ror #15
   12fe8:	eor	r6, r7, r2
   12fec:	and	r6, r4, r6
   12ff0:	eor	r6, r6, r2
   12ff4:	add	r5, r3, lr
   12ff8:	add	r6, r5, r6
   12ffc:	movw	r1, #52974	; 0xceee
   13000:	movt	r1, #49597	; 0xc1bd
   13004:	add	r6, r6, r1
   13008:	add	r5, r4, r6, ror #10
   1300c:	eor	r6, r4, r7
   13010:	and	r6, r5, r6
   13014:	eor	r6, r6, r7
   13018:	ldr	r0, [sl, #16]
   1301c:	str	r0, [sp, #44]	; 0x2c
   13020:	add	r2, r0, r2
   13024:	add	r2, r2, r6
   13028:	movw	r1, #4015	; 0xfaf
   1302c:	movt	r1, #62844	; 0xf57c
   13030:	add	r2, r2, r1
   13034:	add	r3, r5, r2, ror #25
   13038:	eor	r2, r5, r4
   1303c:	and	r2, r3, r2
   13040:	eor	r2, r2, r4
   13044:	ldr	r0, [sl, #20]
   13048:	str	r0, [sp, #32]
   1304c:	add	r7, r0, r7
   13050:	add	r2, r7, r2
   13054:	movw	r1, #50730	; 0xc62a
   13058:	movt	r1, #18311	; 0x4787
   1305c:	add	r2, r2, r1
   13060:	add	r7, r3, r2, ror #20
   13064:	eor	r2, r3, r5
   13068:	and	r2, r7, r2
   1306c:	eor	r2, r2, r5
   13070:	ldr	ip, [sl, #24]
   13074:	add	r4, ip, r4
   13078:	str	ip, [sp, #48]	; 0x30
   1307c:	add	r2, r4, r2
   13080:	movw	r1, #17939	; 0x4613
   13084:	movt	r1, #43056	; 0xa830
   13088:	add	r2, r2, r1
   1308c:	add	r4, r7, r2, ror #15
   13090:	eor	r2, r7, r3
   13094:	and	r2, r4, r2
   13098:	eor	r1, r2, r3
   1309c:	ldr	r0, [sl, #28]
   130a0:	str	r0, [sp, #16]
   130a4:	add	r5, r0, r5
   130a8:	add	r1, r5, r1
   130ac:	movw	r6, #38145	; 0x9501
   130b0:	movt	r6, #64838	; 0xfd46
   130b4:	add	r1, r1, r6
   130b8:	add	r1, r4, r1, ror #10
   130bc:	eor	r5, r4, r7
   130c0:	and	r5, r1, r5
   130c4:	eor	lr, r5, r7
   130c8:	ldr	r0, [sl, #32]
   130cc:	str	r0, [sp, #40]	; 0x28
   130d0:	add	r3, r0, r3
   130d4:	add	r3, r3, lr
   130d8:	movw	r6, #39128	; 0x98d8
   130dc:	movt	r6, #27008	; 0x6980
   130e0:	add	r3, r3, r6
   130e4:	add	lr, r1, r3, ror #25
   130e8:	eor	r3, r1, r4
   130ec:	and	r3, lr, r3
   130f0:	eor	r3, r3, r4
   130f4:	ldr	r8, [sl, #36]	; 0x24
   130f8:	add	r7, r8, r7
   130fc:	str	r8, [fp, #-56]	; 0xffffffc8
   13100:	add	r3, r7, r3
   13104:	movw	r5, #63407	; 0xf7af
   13108:	movt	r5, #35652	; 0x8b44
   1310c:	add	r3, r3, r5
   13110:	add	r7, lr, r3, ror #20
   13114:	eor	r3, lr, r1
   13118:	and	r3, r7, r3
   1311c:	eor	r9, r3, r1
   13120:	ldr	r0, [sl, #40]	; 0x28
   13124:	add	r4, r0, r4
   13128:	str	r0, [sp, #52]	; 0x34
   1312c:	add	r4, r4, r9
   13130:	movw	r3, #42063	; 0xa44f
   13134:	sub	r4, r4, r3
   13138:	add	r4, r7, r4, ror #15
   1313c:	eor	r5, r7, lr
   13140:	and	r5, r4, r5
   13144:	eor	r5, r5, lr
   13148:	ldr	r2, [sl, #44]	; 0x2c
   1314c:	add	r1, r2, r1
   13150:	str	r2, [fp, #-48]	; 0xffffffd0
   13154:	add	r1, r1, r5
   13158:	movw	r3, #55230	; 0xd7be
   1315c:	movt	r3, #35164	; 0x895c
   13160:	add	r1, r1, r3
   13164:	add	r5, r4, r1, ror #10
   13168:	eor	r1, r4, r7
   1316c:	and	r1, r5, r1
   13170:	eor	r1, r1, r7
   13174:	ldr	r3, [sl, #48]	; 0x30
   13178:	str	r3, [sp, #56]	; 0x38
   1317c:	add	r6, r3, lr
   13180:	add	r1, r6, r1
   13184:	movw	r3, #4386	; 0x1122
   13188:	movt	r3, #27536	; 0x6b90
   1318c:	add	r1, r1, r3
   13190:	add	r6, r5, r1, ror #25
   13194:	eor	r1, r5, r4
   13198:	and	r1, r6, r1
   1319c:	eor	lr, r1, r4
   131a0:	ldr	r1, [sl, #52]	; 0x34
   131a4:	str	r1, [sp, #36]	; 0x24
   131a8:	add	r7, r1, r7
   131ac:	add	r7, r7, lr
   131b0:	movw	r1, #29075	; 0x7193
   131b4:	movt	r1, #64920	; 0xfd98
   131b8:	add	r7, r7, r1
   131bc:	add	r7, r6, r7, ror #20
   131c0:	eor	r1, r6, r5
   131c4:	and	r1, r7, r1
   131c8:	eor	r1, r1, r5
   131cc:	ldr	r3, [sl, #56]	; 0x38
   131d0:	add	r4, r3, r4
   131d4:	mov	r9, r3
   131d8:	str	r3, [sp, #8]
   131dc:	add	r1, r4, r1
   131e0:	movw	r3, #17294	; 0x438e
   131e4:	movt	r3, #42617	; 0xa679
   131e8:	add	r1, r1, r3
   131ec:	add	r1, r7, r1, ror #15
   131f0:	eor	r4, r7, r6
   131f4:	and	r4, r1, r4
   131f8:	eor	r4, r4, r6
   131fc:	ldr	r3, [sl, #60]	; 0x3c
   13200:	add	r5, r3, r5
   13204:	mov	lr, r3
   13208:	str	r3, [sp, #12]
   1320c:	add	r4, r5, r4
   13210:	movw	r3, #2081	; 0x821
   13214:	movt	r3, #18868	; 0x49b4
   13218:	add	r4, r4, r3
   1321c:	add	r4, r1, r4, ror #10
   13220:	eor	r5, r4, r1
   13224:	and	r5, r5, r7
   13228:	eor	r5, r5, r1
   1322c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13230:	add	r6, r3, r6
   13234:	add	r5, r6, r5
   13238:	movw	r3, #9570	; 0x2562
   1323c:	movt	r3, #63006	; 0xf61e
   13240:	add	r5, r5, r3
   13244:	add	r5, r4, r5, ror #27
   13248:	eor	r6, r5, r4
   1324c:	and	r6, r6, r1
   13250:	eor	r6, r6, r4
   13254:	add	r7, ip, r7
   13258:	add	r6, r7, r6
   1325c:	movw	r3, #45888	; 0xb340
   13260:	movt	r3, #49216	; 0xc040
   13264:	add	r6, r6, r3
   13268:	add	r6, r5, r6, ror #23
   1326c:	eor	r7, r6, r5
   13270:	and	r7, r7, r4
   13274:	eor	r7, r7, r5
   13278:	add	r1, r2, r1
   1327c:	add	r1, r1, r7
   13280:	movw	r3, #23121	; 0x5a51
   13284:	movt	r3, #9822	; 0x265e
   13288:	add	r1, r1, r3
   1328c:	add	r1, r6, r1, ror #18
   13290:	eor	r7, r1, r6
   13294:	and	r7, r7, r5
   13298:	eor	r7, r7, r6
   1329c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   132a0:	add	r4, r2, r4
   132a4:	add	r4, r4, r7
   132a8:	movw	r3, #51114	; 0xc7aa
   132ac:	movt	r3, #59830	; 0xe9b6
   132b0:	add	r4, r4, r3
   132b4:	add	r4, r1, r4, ror #12
   132b8:	eor	r7, r4, r1
   132bc:	and	r7, r7, r6
   132c0:	eor	r7, r7, r1
   132c4:	ldr	ip, [sp, #32]
   132c8:	add	r5, ip, r5
   132cc:	add	r5, r5, r7
   132d0:	movw	r3, #4189	; 0x105d
   132d4:	movt	r3, #54831	; 0xd62f
   132d8:	add	r5, r5, r3
   132dc:	add	r5, r4, r5, ror #27
   132e0:	eor	r7, r5, r4
   132e4:	and	r7, r7, r1
   132e8:	eor	r7, r7, r4
   132ec:	add	r6, r0, r6
   132f0:	add	r6, r6, r7
   132f4:	movw	r3, #5203	; 0x1453
   132f8:	movt	r3, #580	; 0x244
   132fc:	add	r6, r6, r3
   13300:	add	r6, r5, r6, ror #23
   13304:	eor	r7, r6, r5
   13308:	and	r7, r7, r4
   1330c:	eor	r7, r7, r5
   13310:	add	r1, lr, r1
   13314:	add	r1, r1, r7
   13318:	movw	r3, #59009	; 0xe681
   1331c:	movt	r3, #55457	; 0xd8a1
   13320:	add	r1, r1, r3
   13324:	add	r1, r6, r1, ror #18
   13328:	eor	r7, r1, r6
   1332c:	and	r7, r7, r5
   13330:	eor	r7, r7, r6
   13334:	ldr	lr, [sp, #44]	; 0x2c
   13338:	add	r4, lr, r4
   1333c:	add	r4, r4, r7
   13340:	movw	r3, #64456	; 0xfbc8
   13344:	movt	r3, #59347	; 0xe7d3
   13348:	add	r4, r4, r3
   1334c:	add	r4, r1, r4, ror #12
   13350:	eor	r7, r4, r1
   13354:	and	r7, r7, r6
   13358:	eor	r7, r7, r1
   1335c:	add	r5, r8, r5
   13360:	add	r5, r5, r7
   13364:	movw	r3, #52710	; 0xcde6
   13368:	movt	r3, #8673	; 0x21e1
   1336c:	add	r5, r5, r3
   13370:	add	r5, r4, r5, ror #27
   13374:	eor	r7, r5, r4
   13378:	and	r7, r7, r1
   1337c:	eor	r7, r7, r4
   13380:	add	r6, r9, r6
   13384:	add	r6, r6, r7
   13388:	movw	r3, #2006	; 0x7d6
   1338c:	movt	r3, #49975	; 0xc337
   13390:	add	r6, r6, r3
   13394:	add	r6, r5, r6, ror #23
   13398:	eor	r7, r6, r5
   1339c:	and	r7, r7, r4
   133a0:	eor	r7, r7, r5
   133a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   133a8:	add	r1, r0, r1
   133ac:	add	r1, r1, r7
   133b0:	movw	r3, #3463	; 0xd87
   133b4:	movt	r3, #62677	; 0xf4d5
   133b8:	add	r1, r1, r3
   133bc:	add	r1, r6, r1, ror #18
   133c0:	eor	r7, r1, r6
   133c4:	and	r7, r7, r5
   133c8:	eor	r7, r7, r6
   133cc:	ldr	r0, [sp, #40]	; 0x28
   133d0:	add	r4, r0, r4
   133d4:	add	r4, r4, r7
   133d8:	movw	r3, #5357	; 0x14ed
   133dc:	movt	r3, #17754	; 0x455a
   133e0:	add	r4, r4, r3
   133e4:	add	r4, r1, r4, ror #12
   133e8:	eor	r7, r4, r1
   133ec:	and	r7, r7, r6
   133f0:	eor	r7, r7, r1
   133f4:	ldr	r8, [sp, #36]	; 0x24
   133f8:	add	r5, r8, r5
   133fc:	add	r5, r5, r7
   13400:	movw	r3, #59653	; 0xe905
   13404:	movt	r3, #43491	; 0xa9e3
   13408:	add	r5, r5, r3
   1340c:	add	r5, r4, r5, ror #27
   13410:	eor	r7, r5, r4
   13414:	and	r7, r7, r1
   13418:	eor	r7, r7, r4
   1341c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13420:	add	r6, r2, r6
   13424:	add	r6, r6, r7
   13428:	movw	r3, #41976	; 0xa3f8
   1342c:	movt	r3, #64751	; 0xfcef
   13430:	add	r6, r6, r3
   13434:	add	r6, r5, r6, ror #23
   13438:	eor	r7, r6, r5
   1343c:	and	r7, r7, r4
   13440:	eor	r7, r7, r5
   13444:	ldr	r2, [sp, #16]
   13448:	add	r1, r2, r1
   1344c:	add	r1, r1, r7
   13450:	movw	r3, #729	; 0x2d9
   13454:	movt	r3, #26479	; 0x676f
   13458:	add	r1, r1, r3
   1345c:	add	r1, r6, r1, ror #18
   13460:	eor	r7, r1, r6
   13464:	and	r3, r7, r5
   13468:	eor	r3, r3, r6
   1346c:	ldr	r9, [sp, #56]	; 0x38
   13470:	add	r4, r9, r4
   13474:	add	r3, r4, r3
   13478:	movw	r4, #19594	; 0x4c8a
   1347c:	movt	r4, #36138	; 0x8d2a
   13480:	add	r3, r3, r4
   13484:	add	r3, r1, r3, ror #12
   13488:	eor	r4, r7, r3
   1348c:	add	r5, ip, r5
   13490:	add	r4, r5, r4
   13494:	movw	r5, #14658	; 0x3942
   13498:	movt	r5, #65530	; 0xfffa
   1349c:	add	r4, r4, r5
   134a0:	add	r4, r3, r4, ror #28
   134a4:	eor	r5, r3, r1
   134a8:	eor	r5, r5, r4
   134ac:	add	r6, r0, r6
   134b0:	add	r5, r6, r5
   134b4:	movw	r6, #63105	; 0xf681
   134b8:	movt	r6, #34673	; 0x8771
   134bc:	add	r5, r5, r6
   134c0:	add	r5, r4, r5, ror #21
   134c4:	eor	r6, r4, r3
   134c8:	eor	r6, r6, r5
   134cc:	ldr	r7, [fp, #-48]	; 0xffffffd0
   134d0:	add	r1, r7, r1
   134d4:	add	r1, r1, r6
   134d8:	movw	r6, #24866	; 0x6122
   134dc:	movt	r6, #28061	; 0x6d9d
   134e0:	add	r1, r1, r6
   134e4:	add	r1, r5, r1, ror #16
   134e8:	eor	r6, r5, r4
   134ec:	eor	r6, r6, r1
   134f0:	ldr	ip, [sp, #8]
   134f4:	add	r3, ip, r3
   134f8:	add	r3, r3, r6
   134fc:	movw	r6, #14348	; 0x380c
   13500:	movt	r6, #64997	; 0xfde5
   13504:	add	r3, r3, r6
   13508:	add	r3, r1, r3, ror #9
   1350c:	eor	r6, r1, r5
   13510:	eor	r6, r6, r3
   13514:	ldr	r7, [fp, #-32]	; 0xffffffe0
   13518:	add	r4, r7, r4
   1351c:	add	r4, r4, r6
   13520:	movw	r6, #59972	; 0xea44
   13524:	movt	r6, #42174	; 0xa4be
   13528:	add	r4, r4, r6
   1352c:	add	r4, r3, r4, ror #28
   13530:	eor	r6, r3, r1
   13534:	eor	r6, r6, r4
   13538:	add	r5, lr, r5
   1353c:	add	r5, r5, r6
   13540:	movw	r6, #53161	; 0xcfa9
   13544:	movt	r6, #19422	; 0x4bde
   13548:	add	r5, r5, r6
   1354c:	add	r5, r4, r5, ror #21
   13550:	eor	r6, r4, r3
   13554:	eor	r6, r6, r5
   13558:	add	r1, r2, r1
   1355c:	add	r1, r1, r6
   13560:	movw	r6, #19296	; 0x4b60
   13564:	movt	r6, #63163	; 0xf6bb
   13568:	add	r1, r1, r6
   1356c:	add	r1, r5, r1, ror #16
   13570:	eor	r6, r5, r4
   13574:	eor	r6, r6, r1
   13578:	ldr	r7, [sp, #52]	; 0x34
   1357c:	add	r3, r7, r3
   13580:	add	r3, r3, r6
   13584:	movw	r6, #48240	; 0xbc70
   13588:	movt	r6, #48831	; 0xbebf
   1358c:	add	r3, r3, r6
   13590:	add	r3, r1, r3, ror #9
   13594:	eor	r6, r1, r5
   13598:	eor	r6, r6, r3
   1359c:	add	r4, r8, r4
   135a0:	add	r4, r4, r6
   135a4:	movw	r6, #32454	; 0x7ec6
   135a8:	movt	r6, #10395	; 0x289b
   135ac:	add	r4, r4, r6
   135b0:	add	r4, r3, r4, ror #28
   135b4:	eor	r6, r3, r1
   135b8:	eor	r6, r6, r4
   135bc:	ldr	r8, [fp, #-44]	; 0xffffffd4
   135c0:	add	r5, r8, r5
   135c4:	add	r5, r5, r6
   135c8:	movw	r6, #10234	; 0x27fa
   135cc:	movt	r6, #60065	; 0xeaa1
   135d0:	add	r5, r5, r6
   135d4:	add	r5, r4, r5, ror #21
   135d8:	eor	r6, r4, r3
   135dc:	eor	r6, r6, r5
   135e0:	ldr	r9, [fp, #-52]	; 0xffffffcc
   135e4:	add	r1, r9, r1
   135e8:	add	r1, r1, r6
   135ec:	movw	r6, #12421	; 0x3085
   135f0:	movt	r6, #54511	; 0xd4ef
   135f4:	add	r1, r1, r6
   135f8:	add	r1, r5, r1, ror #16
   135fc:	eor	r6, r5, r4
   13600:	eor	r6, r6, r1
   13604:	ldr	r0, [sp, #48]	; 0x30
   13608:	add	r3, r0, r3
   1360c:	add	r3, r3, r6
   13610:	movw	r6, #7429	; 0x1d05
   13614:	movt	r6, #1160	; 0x488
   13618:	add	r3, r3, r6
   1361c:	add	r3, r1, r3, ror #9
   13620:	eor	r6, r1, r5
   13624:	eor	r6, r6, r3
   13628:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1362c:	add	r4, r0, r4
   13630:	add	r4, r4, r6
   13634:	movw	r6, #53305	; 0xd039
   13638:	movt	r6, #55764	; 0xd9d4
   1363c:	add	r4, r4, r6
   13640:	add	r4, r3, r4, ror #28
   13644:	eor	r6, r3, r1
   13648:	eor	r6, r6, r4
   1364c:	ldr	r0, [sp, #56]	; 0x38
   13650:	add	r5, r0, r5
   13654:	add	r5, r5, r6
   13658:	movw	r6, #39397	; 0x99e5
   1365c:	movt	r6, #59099	; 0xe6db
   13660:	add	r5, r5, r6
   13664:	add	r5, r4, r5, ror #21
   13668:	eor	r6, r4, r3
   1366c:	eor	r6, r6, r5
   13670:	ldr	lr, [sp, #12]
   13674:	add	r1, lr, r1
   13678:	add	r1, r1, r6
   1367c:	movw	r6, #31992	; 0x7cf8
   13680:	movt	r6, #8098	; 0x1fa2
   13684:	add	r1, r1, r6
   13688:	add	r1, r5, r1, ror #16
   1368c:	eor	r6, r5, r4
   13690:	eor	r6, r6, r1
   13694:	ldr	r7, [fp, #-36]	; 0xffffffdc
   13698:	add	r3, r7, r3
   1369c:	add	r3, r3, r6
   136a0:	movw	r6, #22117	; 0x5665
   136a4:	movt	r6, #50348	; 0xc4ac
   136a8:	add	r3, r3, r6
   136ac:	add	r3, r1, r3, ror #9
   136b0:	mvn	r6, r5
   136b4:	orr	r6, r3, r6
   136b8:	eor	r6, r6, r1
   136bc:	add	r4, r8, r4
   136c0:	add	r4, r4, r6
   136c4:	movw	r6, #8772	; 0x2244
   136c8:	movt	r6, #62505	; 0xf429
   136cc:	add	r4, r4, r6
   136d0:	add	r4, r3, r4, ror #26
   136d4:	mvn	r6, r1
   136d8:	orr	r6, r4, r6
   136dc:	eor	r6, r6, r3
   136e0:	add	r2, r2, r5
   136e4:	add	r2, r2, r6
   136e8:	movw	r5, #65431	; 0xff97
   136ec:	movt	r5, #17194	; 0x432a
   136f0:	add	r2, r2, r5
   136f4:	add	r2, r4, r2, ror #22
   136f8:	mvn	r5, r3
   136fc:	orr	r5, r2, r5
   13700:	eor	r5, r5, r4
   13704:	add	r1, ip, r1
   13708:	add	r1, r1, r5
   1370c:	movw	r5, #9127	; 0x23a7
   13710:	movt	r5, #43924	; 0xab94
   13714:	add	r1, r1, r5
   13718:	add	r1, r2, r1, ror #17
   1371c:	mvn	r5, r4
   13720:	orr	r5, r1, r5
   13724:	eor	r5, r5, r2
   13728:	ldr	r7, [sp, #32]
   1372c:	add	r3, r7, r3
   13730:	add	r3, r3, r5
   13734:	movw	r5, #41017	; 0xa039
   13738:	movt	r5, #64659	; 0xfc93
   1373c:	add	r3, r3, r5
   13740:	add	r3, r1, r3, ror #11
   13744:	mvn	r5, r2
   13748:	orr	r5, r3, r5
   1374c:	eor	r5, r5, r1
   13750:	add	r4, r0, r4
   13754:	add	r4, r4, r5
   13758:	movw	r5, #22979	; 0x59c3
   1375c:	movt	r5, #25947	; 0x655b
   13760:	add	r4, r4, r5
   13764:	add	r4, r3, r4, ror #26
   13768:	mvn	r5, r1
   1376c:	orr	r5, r4, r5
   13770:	eor	r5, r5, r3
   13774:	add	r2, r9, r2
   13778:	add	r2, r2, r5
   1377c:	movw	r5, #52370	; 0xcc92
   13780:	movt	r5, #36620	; 0x8f0c
   13784:	add	r2, r2, r5
   13788:	add	r2, r4, r2, ror #22
   1378c:	mvn	r5, r3
   13790:	orr	r5, r2, r5
   13794:	eor	r5, r5, r4
   13798:	ldr	r0, [sp, #52]	; 0x34
   1379c:	add	r1, r0, r1
   137a0:	add	r1, r1, r5
   137a4:	movw	r5, #62589	; 0xf47d
   137a8:	movt	r5, #65519	; 0xffef
   137ac:	add	r1, r1, r5
   137b0:	add	r1, r2, r1, ror #17
   137b4:	mvn	r5, r4
   137b8:	orr	r5, r1, r5
   137bc:	eor	r5, r5, r2
   137c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137c4:	add	r3, r0, r3
   137c8:	add	r3, r3, r5
   137cc:	movw	r5, #24017	; 0x5dd1
   137d0:	movt	r5, #34180	; 0x8584
   137d4:	add	r3, r3, r5
   137d8:	add	r3, r1, r3, ror #11
   137dc:	mvn	r5, r2
   137e0:	orr	r5, r3, r5
   137e4:	eor	r5, r5, r1
   137e8:	ldr	r0, [sp, #40]	; 0x28
   137ec:	add	r4, r0, r4
   137f0:	add	r4, r4, r5
   137f4:	movw	r5, #32335	; 0x7e4f
   137f8:	movt	r5, #28584	; 0x6fa8
   137fc:	add	r4, r4, r5
   13800:	add	r4, r3, r4, ror #26
   13804:	mvn	r5, r1
   13808:	orr	r5, r4, r5
   1380c:	eor	r5, r5, r3
   13810:	add	r2, lr, r2
   13814:	ldr	lr, [sp, #4]
   13818:	add	r2, r2, r5
   1381c:	movw	r5, #59104	; 0xe6e0
   13820:	movt	r5, #65068	; 0xfe2c
   13824:	add	r2, r2, r5
   13828:	add	r2, r4, r2, ror #22
   1382c:	mvn	r7, r3
   13830:	orr	r7, r2, r7
   13834:	eor	r7, r7, r4
   13838:	ldr	r0, [sp, #48]	; 0x30
   1383c:	add	r1, r0, r1
   13840:	ldr	ip, [fp, #-40]	; 0xffffffd8
   13844:	add	r1, r1, r7
   13848:	movw	r5, #17172	; 0x4314
   1384c:	movt	r5, #41729	; 0xa301
   13850:	add	r1, r1, r5
   13854:	add	r1, r2, r1, ror #17
   13858:	mvn	r7, r4
   1385c:	orr	r7, r1, r7
   13860:	eor	r7, r7, r2
   13864:	ldr	r0, [sp, #36]	; 0x24
   13868:	add	r3, r0, r3
   1386c:	add	r3, r3, r7
   13870:	movw	r5, #4513	; 0x11a1
   13874:	movt	r5, #19976	; 0x4e08
   13878:	add	r3, r3, r5
   1387c:	add	r3, r1, r3, ror #11
   13880:	mvn	r7, r2
   13884:	orr	r7, r3, r7
   13888:	eor	r7, r7, r1
   1388c:	ldr	r0, [sp, #44]	; 0x2c
   13890:	add	r6, r0, r4
   13894:	add	r7, r6, r7
   13898:	movw	r4, #32386	; 0x7e82
   1389c:	movt	r4, #63315	; 0xf753
   138a0:	add	r7, r7, r4
   138a4:	add	r7, r3, r7, ror #26
   138a8:	mvn	r6, r1
   138ac:	orr	r6, r7, r6
   138b0:	eor	r6, r6, r3
   138b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   138b8:	add	r2, r0, r2
   138bc:	add	r2, r2, r6
   138c0:	movw	r4, #62005	; 0xf235
   138c4:	movt	r4, #48442	; 0xbd3a
   138c8:	add	r2, r2, r4
   138cc:	add	r2, r7, r2, ror #22
   138d0:	mvn	r6, r3
   138d4:	orr	r6, r2, r6
   138d8:	eor	r6, r6, r7
   138dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   138e0:	add	r1, r0, r1
   138e4:	add	r1, r1, r6
   138e8:	movw	r4, #53947	; 0xd2bb
   138ec:	movt	r4, #10967	; 0x2ad7
   138f0:	add	r1, r1, r4
   138f4:	add	r1, r2, r1, ror #17
   138f8:	ldr	r4, [sp, #20]
   138fc:	add	r6, r1, r4
   13900:	mvn	r5, r7
   13904:	orr	r5, r1, r5
   13908:	eor	r5, r5, r2
   1390c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13910:	add	r3, r0, r3
   13914:	add	r3, r3, r5
   13918:	movw	r4, #54161	; 0xd391
   1391c:	movt	r4, #60294	; 0xeb86
   13920:	add	r3, r3, r4
   13924:	add	r4, r6, r3, ror #11
   13928:	ldr	r3, [sp, #24]
   1392c:	add	ip, r1, ip
   13930:	ldr	r1, [sp, #28]
   13934:	add	r1, r2, r1
   13938:	add	r3, r7, r3
   1393c:	add	sl, sl, #64	; 0x40
   13940:	cmp	sl, lr
   13944:	bcc	12f40 <putchar_unlocked@plt+0x1dac>
   13948:	ldr	r0, [sp]
   1394c:	stm	r0, {r3, r4, ip}
   13950:	str	r1, [r0, #12]
   13954:	sub	sp, fp, #28
   13958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1395c:	push	{r4, r5, r6, r7, fp, lr}
   13960:	add	fp, sp, #16
   13964:	sub	sp, sp, #160	; 0xa0
   13968:	mov	r4, r2
   1396c:	mov	r5, r1
   13970:	mov	r6, r0
   13974:	add	r7, sp, #4
   13978:	mov	r0, r7
   1397c:	bl	12dc4 <putchar_unlocked@plt+0x1c30>
   13980:	mov	r0, r6
   13984:	mov	r1, r5
   13988:	mov	r2, r7
   1398c:	bl	139a4 <putchar_unlocked@plt+0x2810>
   13990:	mov	r0, r7
   13994:	mov	r1, r4
   13998:	bl	12e5c <putchar_unlocked@plt+0x1cc8>
   1399c:	sub	sp, fp, #16
   139a0:	pop	{r4, r5, r6, r7, fp, pc}
   139a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139a8:	add	fp, sp, #28
   139ac:	sub	sp, sp, #12
   139b0:	mov	r4, r2
   139b4:	mov	r8, r1
   139b8:	mov	r6, r0
   139bc:	ldr	r5, [r2, #24]
   139c0:	cmp	r5, #0
   139c4:	beq	13a34 <putchar_unlocked@plt+0x28a0>
   139c8:	add	r9, r4, #28
   139cc:	add	r0, r9, r5
   139d0:	rsb	r7, r5, #128	; 0x80
   139d4:	cmp	r7, r8
   139d8:	movhi	r7, r8
   139dc:	mov	r1, r6
   139e0:	mov	r2, r7
   139e4:	bl	10f60 <memcpy@plt>
   139e8:	ldr	r0, [r4, #24]
   139ec:	add	r0, r0, r7
   139f0:	str	r0, [r4, #24]
   139f4:	cmp	r0, #65	; 0x41
   139f8:	bcc	13a2c <putchar_unlocked@plt+0x2898>
   139fc:	bic	r1, r0, #63	; 0x3f
   13a00:	mov	r0, r9
   13a04:	mov	r2, r4
   13a08:	bl	12ef8 <putchar_unlocked@plt+0x1d64>
   13a0c:	ldr	r0, [r4, #24]
   13a10:	and	r2, r0, #63	; 0x3f
   13a14:	str	r2, [r4, #24]
   13a18:	add	r0, r7, r5
   13a1c:	bic	r0, r0, #63	; 0x3f
   13a20:	add	r1, r9, r0
   13a24:	mov	r0, r9
   13a28:	bl	10f60 <memcpy@plt>
   13a2c:	sub	r8, r8, r7
   13a30:	add	r6, r6, r7
   13a34:	cmp	r8, #64	; 0x40
   13a38:	bcc	13ad8 <putchar_unlocked@plt+0x2944>
   13a3c:	tst	r6, #3
   13a40:	beq	13aec <putchar_unlocked@plt+0x2958>
   13a44:	cmp	r8, #65	; 0x41
   13a48:	bcc	13b14 <putchar_unlocked@plt+0x2980>
   13a4c:	add	r5, r4, #28
   13a50:	sub	r0, r8, #65	; 0x41
   13a54:	bic	r0, r0, #63	; 0x3f
   13a58:	str	r0, [sp, #4]
   13a5c:	add	sl, r5, #32
   13a60:	add	r9, r5, #16
   13a64:	str	r8, [sp, #8]
   13a68:	mov	r7, r6
   13a6c:	mov	r0, #64	; 0x40
   13a70:	vld1.8	{d16-d17}, [r7], r0
   13a74:	add	r0, r6, #32
   13a78:	add	r1, r6, #48	; 0x30
   13a7c:	vld1.8	{d18-d19}, [r1]
   13a80:	vld1.8	{d20-d21}, [r0]
   13a84:	mov	r0, r5
   13a88:	mov	r1, #48	; 0x30
   13a8c:	vst1.8	{d16-d17}, [r0], r1
   13a90:	add	r1, r6, #16
   13a94:	vld1.8	{d16-d17}, [r1]
   13a98:	vst1.8	{d18-d19}, [r0]
   13a9c:	vst1.8	{d20-d21}, [sl]
   13aa0:	vst1.8	{d16-d17}, [r9]
   13aa4:	mov	r0, r5
   13aa8:	mov	r1, #64	; 0x40
   13aac:	mov	r2, r4
   13ab0:	bl	12ef8 <putchar_unlocked@plt+0x1d64>
   13ab4:	sub	r8, r8, #64	; 0x40
   13ab8:	cmp	r8, #64	; 0x40
   13abc:	mov	r6, r7
   13ac0:	bhi	13a6c <putchar_unlocked@plt+0x28d8>
   13ac4:	ldr	r0, [sp, #8]
   13ac8:	ldr	r1, [sp, #4]
   13acc:	sub	r0, r0, r1
   13ad0:	sub	r8, r0, #64	; 0x40
   13ad4:	b	13b1c <putchar_unlocked@plt+0x2988>
   13ad8:	mov	r7, r6
   13adc:	cmp	r8, #0
   13ae0:	bne	13b1c <putchar_unlocked@plt+0x2988>
   13ae4:	sub	sp, fp, #28
   13ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13aec:	bic	r5, r8, #63	; 0x3f
   13af0:	mov	r0, r6
   13af4:	mov	r1, r5
   13af8:	mov	r2, r4
   13afc:	bl	12ef8 <putchar_unlocked@plt+0x1d64>
   13b00:	add	r7, r6, r5
   13b04:	and	r8, r8, #63	; 0x3f
   13b08:	cmp	r8, #0
   13b0c:	bne	13b1c <putchar_unlocked@plt+0x2988>
   13b10:	b	13ae4 <putchar_unlocked@plt+0x2950>
   13b14:	mov	r7, r6
   13b18:	mov	r8, #64	; 0x40
   13b1c:	ldr	r5, [r4, #24]
   13b20:	add	r6, r4, #28
   13b24:	add	r0, r6, r5
   13b28:	mov	r1, r7
   13b2c:	mov	r2, r8
   13b30:	bl	10f60 <memcpy@plt>
   13b34:	add	r5, r5, r8
   13b38:	cmp	r5, #64	; 0x40
   13b3c:	bcc	13b64 <putchar_unlocked@plt+0x29d0>
   13b40:	mov	r0, r6
   13b44:	mov	r1, #64	; 0x40
   13b48:	mov	r2, r4
   13b4c:	bl	12ef8 <putchar_unlocked@plt+0x1d64>
   13b50:	add	r1, r4, #92	; 0x5c
   13b54:	sub	r5, r5, #64	; 0x40
   13b58:	mov	r0, r6
   13b5c:	mov	r2, r5
   13b60:	bl	10f60 <memcpy@plt>
   13b64:	str	r5, [r4, #24]
   13b68:	sub	sp, fp, #28
   13b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b70:	b	10f30 <posix_fadvise64@plt>
   13b74:	cmp	r0, #0
   13b78:	bxeq	lr
   13b7c:	push	{r4, sl, fp, lr}
   13b80:	add	fp, sp, #8
   13b84:	sub	sp, sp, #16
   13b88:	mov	r4, r1
   13b8c:	bl	110bc <fileno@plt>
   13b90:	mov	r1, #0
   13b94:	str	r1, [sp]
   13b98:	stmib	sp, {r1, r4}
   13b9c:	mov	r2, #0
   13ba0:	mov	r3, #0
   13ba4:	bl	13b70 <putchar_unlocked@plt+0x29dc>
   13ba8:	sub	sp, fp, #8
   13bac:	pop	{r4, sl, fp, pc}
   13bb0:	push	{r4, r5, fp, lr}
   13bb4:	add	fp, sp, #8
   13bb8:	sub	sp, sp, #8
   13bbc:	mov	r4, r0
   13bc0:	bl	110bc <fileno@plt>
   13bc4:	cmn	r0, #1
   13bc8:	ble	13c40 <putchar_unlocked@plt+0x2aac>
   13bcc:	mov	r0, r4
   13bd0:	bl	11014 <__freading@plt>
   13bd4:	cmp	r0, #0
   13bd8:	beq	13c04 <putchar_unlocked@plt+0x2a70>
   13bdc:	mov	r0, r4
   13be0:	bl	110bc <fileno@plt>
   13be4:	mov	r1, #1
   13be8:	str	r1, [sp]
   13bec:	mov	r2, #0
   13bf0:	mov	r3, #0
   13bf4:	bl	10fb4 <lseek64@plt>
   13bf8:	and	r0, r0, r1
   13bfc:	cmn	r0, #1
   13c00:	beq	13c40 <putchar_unlocked@plt+0x2aac>
   13c04:	mov	r0, r4
   13c08:	bl	13c50 <putchar_unlocked@plt+0x2abc>
   13c0c:	cmp	r0, #0
   13c10:	beq	13c40 <putchar_unlocked@plt+0x2aac>
   13c14:	bl	11080 <__errno_location@plt>
   13c18:	ldr	r5, [r0]
   13c1c:	mov	r0, r4
   13c20:	bl	110d4 <fclose@plt>
   13c24:	cmp	r5, #0
   13c28:	beq	13c38 <putchar_unlocked@plt+0x2aa4>
   13c2c:	bl	11080 <__errno_location@plt>
   13c30:	str	r5, [r0]
   13c34:	mvn	r0, #0
   13c38:	sub	sp, fp, #8
   13c3c:	pop	{r4, r5, fp, pc}
   13c40:	mov	r0, r4
   13c44:	sub	sp, fp, #8
   13c48:	pop	{r4, r5, fp, lr}
   13c4c:	b	110d4 <fclose@plt>
   13c50:	push	{r4, sl, fp, lr}
   13c54:	add	fp, sp, #8
   13c58:	mov	r4, r0
   13c5c:	cmp	r0, #0
   13c60:	beq	13c78 <putchar_unlocked@plt+0x2ae4>
   13c64:	mov	r0, r4
   13c68:	bl	11014 <__freading@plt>
   13c6c:	cmp	r0, #0
   13c70:	movne	r0, r4
   13c74:	blne	13c84 <putchar_unlocked@plt+0x2af0>
   13c78:	mov	r0, r4
   13c7c:	pop	{r4, sl, fp, lr}
   13c80:	b	10f3c <fflush@plt>
   13c84:	push	{fp, lr}
   13c88:	mov	fp, sp
   13c8c:	sub	sp, sp, #8
   13c90:	ldrb	r1, [r0, #1]
   13c94:	tst	r1, #1
   13c98:	beq	13cb0 <putchar_unlocked@plt+0x2b1c>
   13c9c:	mov	r1, #1
   13ca0:	str	r1, [sp]
   13ca4:	mov	r2, #0
   13ca8:	mov	r3, #0
   13cac:	bl	13d90 <putchar_unlocked@plt+0x2bfc>
   13cb0:	mov	sp, fp
   13cb4:	pop	{fp, pc}
   13cb8:	push	{r4, r5, r6, r7, fp, lr}
   13cbc:	add	fp, sp, #16
   13cc0:	mov	r5, r1
   13cc4:	bl	11128 <fopen64@plt>
   13cc8:	mov	r4, #0
   13ccc:	cmp	r0, #0
   13cd0:	beq	13d38 <putchar_unlocked@plt+0x2ba4>
   13cd4:	mov	r6, r0
   13cd8:	bl	110bc <fileno@plt>
   13cdc:	cmp	r0, #2
   13ce0:	bhi	13d40 <putchar_unlocked@plt+0x2bac>
   13ce4:	bl	15a44 <putchar_unlocked@plt+0x48b0>
   13ce8:	cmn	r0, #1
   13cec:	ble	13d48 <putchar_unlocked@plt+0x2bb4>
   13cf0:	mov	r7, r0
   13cf4:	mov	r0, r6
   13cf8:	bl	13bb0 <putchar_unlocked@plt+0x2a1c>
   13cfc:	cmp	r0, #0
   13d00:	bne	13d1c <putchar_unlocked@plt+0x2b88>
   13d04:	mov	r0, r7
   13d08:	mov	r1, r5
   13d0c:	bl	10ef4 <fdopen@plt>
   13d10:	mov	r4, r0
   13d14:	cmp	r0, #0
   13d18:	bne	13d38 <putchar_unlocked@plt+0x2ba4>
   13d1c:	bl	11080 <__errno_location@plt>
   13d20:	mov	r4, r0
   13d24:	ldr	r5, [r0]
   13d28:	mov	r0, r7
   13d2c:	bl	1117c <close@plt>
   13d30:	str	r5, [r4]
   13d34:	mov	r4, #0
   13d38:	mov	r0, r4
   13d3c:	pop	{r4, r5, r6, r7, fp, pc}
   13d40:	mov	r0, r6
   13d44:	pop	{r4, r5, r6, r7, fp, pc}
   13d48:	bl	11080 <__errno_location@plt>
   13d4c:	mov	r5, r0
   13d50:	ldr	r7, [r0]
   13d54:	mov	r0, r6
   13d58:	bl	13bb0 <putchar_unlocked@plt+0x2a1c>
   13d5c:	str	r7, [r5]
   13d60:	mov	r0, r4
   13d64:	pop	{r4, r5, r6, r7, fp, pc}
   13d68:	push	{r4, r5, r6, sl, fp, lr}
   13d6c:	add	fp, sp, #16
   13d70:	mov	r4, r0
   13d74:	bl	11080 <__errno_location@plt>
   13d78:	mov	r5, r0
   13d7c:	ldr	r6, [r0]
   13d80:	mov	r0, r4
   13d84:	bl	10f48 <free@plt>
   13d88:	str	r6, [r5]
   13d8c:	pop	{r4, r5, r6, sl, fp, pc}
   13d90:	push	{r4, r5, r6, r7, fp, lr}
   13d94:	add	fp, sp, #16
   13d98:	sub	sp, sp, #8
   13d9c:	mov	r5, r3
   13da0:	mov	r6, r2
   13da4:	mov	r4, r0
   13da8:	ldr	r0, [r0, #4]
   13dac:	ldr	r1, [r4, #8]
   13db0:	cmp	r1, r0
   13db4:	bne	13dd0 <putchar_unlocked@plt+0x2c3c>
   13db8:	ldrd	r0, [r4, #16]
   13dbc:	cmp	r1, r0
   13dc0:	bne	13dd0 <putchar_unlocked@plt+0x2c3c>
   13dc4:	ldr	r0, [r4, #36]	; 0x24
   13dc8:	cmp	r0, #0
   13dcc:	beq	13de8 <putchar_unlocked@plt+0x2c54>
   13dd0:	mov	r0, r4
   13dd4:	mov	r2, r6
   13dd8:	mov	r3, r5
   13ddc:	sub	sp, fp, #16
   13de0:	pop	{r4, r5, r6, r7, fp, lr}
   13de4:	b	110e0 <fseeko64@plt>
   13de8:	ldr	r7, [fp, #8]
   13dec:	mov	r0, r4
   13df0:	bl	110bc <fileno@plt>
   13df4:	str	r7, [sp]
   13df8:	mov	r2, r6
   13dfc:	mov	r3, r5
   13e00:	bl	10fb4 <lseek64@plt>
   13e04:	and	r2, r0, r1
   13e08:	cmn	r2, #1
   13e0c:	beq	13e2c <putchar_unlocked@plt+0x2c98>
   13e10:	strd	r0, [r4, #80]	; 0x50
   13e14:	ldr	r0, [r4]
   13e18:	bic	r0, r0, #16
   13e1c:	str	r0, [r4]
   13e20:	mov	r0, #0
   13e24:	sub	sp, fp, #16
   13e28:	pop	{r4, r5, r6, r7, fp, pc}
   13e2c:	mvn	r0, #0
   13e30:	sub	sp, fp, #16
   13e34:	pop	{r4, r5, r6, r7, fp, pc}
   13e38:	push	{r4, r5, fp, lr}
   13e3c:	add	fp, sp, #8
   13e40:	cmp	r0, #0
   13e44:	beq	13ed8 <putchar_unlocked@plt+0x2d44>
   13e48:	mov	r4, r0
   13e4c:	mov	r1, #47	; 0x2f
   13e50:	bl	11104 <strrchr@plt>
   13e54:	cmp	r0, #0
   13e58:	mov	r5, r4
   13e5c:	addne	r5, r0, #1
   13e60:	sub	r0, r5, r4
   13e64:	cmp	r0, #7
   13e68:	blt	13ebc <putchar_unlocked@plt+0x2d28>
   13e6c:	sub	r0, r5, #7
   13e70:	movw	r1, #31448	; 0x7ad8
   13e74:	movt	r1, #1
   13e78:	mov	r2, #7
   13e7c:	bl	11158 <strncmp@plt>
   13e80:	cmp	r0, #0
   13e84:	bne	13ebc <putchar_unlocked@plt+0x2d28>
   13e88:	movw	r1, #31456	; 0x7ae0
   13e8c:	movt	r1, #1
   13e90:	mov	r0, r5
   13e94:	mov	r2, #3
   13e98:	bl	11158 <strncmp@plt>
   13e9c:	cmp	r0, #0
   13ea0:	beq	13eac <putchar_unlocked@plt+0x2d18>
   13ea4:	mov	r4, r5
   13ea8:	b	13ebc <putchar_unlocked@plt+0x2d28>
   13eac:	add	r4, r5, #3
   13eb0:	movw	r0, #33104	; 0x8150
   13eb4:	movt	r0, #2
   13eb8:	str	r4, [r0]
   13ebc:	movw	r0, #33108	; 0x8154
   13ec0:	movt	r0, #2
   13ec4:	str	r4, [r0]
   13ec8:	movw	r0, #33164	; 0x818c
   13ecc:	movt	r0, #2
   13ed0:	str	r4, [r0]
   13ed4:	pop	{r4, r5, fp, pc}
   13ed8:	movw	r0, #33120	; 0x8160
   13edc:	movt	r0, #2
   13ee0:	ldr	r3, [r0]
   13ee4:	movw	r0, #31392	; 0x7aa0
   13ee8:	movt	r0, #1
   13eec:	mov	r1, #55	; 0x37
   13ef0:	mov	r2, #1
   13ef4:	bl	10fa8 <fwrite@plt>
   13ef8:	bl	11164 <abort@plt>
   13efc:	push	{r4, r5, r6, sl, fp, lr}
   13f00:	add	fp, sp, #16
   13f04:	mov	r4, r0
   13f08:	movw	r0, #33168	; 0x8190
   13f0c:	movt	r0, #2
   13f10:	cmp	r4, #0
   13f14:	moveq	r4, r0
   13f18:	bl	11080 <__errno_location@plt>
   13f1c:	mov	r5, r0
   13f20:	ldr	r6, [r0]
   13f24:	mov	r0, r4
   13f28:	mov	r1, #48	; 0x30
   13f2c:	bl	16200 <putchar_unlocked@plt+0x506c>
   13f30:	str	r6, [r5]
   13f34:	pop	{r4, r5, r6, sl, fp, pc}
   13f38:	movw	r1, #33168	; 0x8190
   13f3c:	movt	r1, #2
   13f40:	cmp	r0, #0
   13f44:	movne	r1, r0
   13f48:	ldr	r0, [r1]
   13f4c:	bx	lr
   13f50:	movw	r2, #33168	; 0x8190
   13f54:	movt	r2, #2
   13f58:	cmp	r0, #0
   13f5c:	movne	r2, r0
   13f60:	str	r1, [r2]
   13f64:	bx	lr
   13f68:	movw	r3, #33168	; 0x8190
   13f6c:	movt	r3, #2
   13f70:	cmp	r0, #0
   13f74:	movne	r3, r0
   13f78:	ubfx	r0, r1, #5, #3
   13f7c:	add	ip, r3, r0, lsl #2
   13f80:	ldr	r3, [ip, #8]
   13f84:	and	r1, r1, #31
   13f88:	mov	r0, #1
   13f8c:	and	r0, r0, r3, lsr r1
   13f90:	and	r2, r2, #1
   13f94:	eor	r2, r0, r2
   13f98:	eor	r1, r3, r2, lsl r1
   13f9c:	str	r1, [ip, #8]
   13fa0:	bx	lr
   13fa4:	movw	r2, #33168	; 0x8190
   13fa8:	movt	r2, #2
   13fac:	cmp	r0, #0
   13fb0:	movne	r2, r0
   13fb4:	ldr	r0, [r2, #4]
   13fb8:	str	r1, [r2, #4]
   13fbc:	bx	lr
   13fc0:	push	{fp, lr}
   13fc4:	mov	fp, sp
   13fc8:	movw	r3, #33168	; 0x8190
   13fcc:	movt	r3, #2
   13fd0:	cmp	r0, #0
   13fd4:	movne	r3, r0
   13fd8:	mov	r0, #10
   13fdc:	str	r0, [r3]
   13fe0:	cmp	r1, #0
   13fe4:	cmpne	r2, #0
   13fe8:	bne	13ff0 <putchar_unlocked@plt+0x2e5c>
   13fec:	bl	11164 <abort@plt>
   13ff0:	str	r1, [r3, #40]	; 0x28
   13ff4:	str	r2, [r3, #44]	; 0x2c
   13ff8:	pop	{fp, pc}
   13ffc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14000:	add	fp, sp, #28
   14004:	sub	sp, sp, #20
   14008:	mov	r8, r3
   1400c:	mov	r9, r2
   14010:	mov	sl, r1
   14014:	mov	r7, r0
   14018:	ldr	r0, [fp, #8]
   1401c:	movw	r5, #33168	; 0x8190
   14020:	movt	r5, #2
   14024:	cmp	r0, #0
   14028:	movne	r5, r0
   1402c:	bl	11080 <__errno_location@plt>
   14030:	mov	r4, r0
   14034:	ldm	r5, {r0, r1}
   14038:	ldr	r2, [r5, #40]	; 0x28
   1403c:	ldr	r3, [r5, #44]	; 0x2c
   14040:	ldr	r6, [r4]
   14044:	add	r5, r5, #8
   14048:	stm	sp, {r0, r1, r5}
   1404c:	str	r2, [sp, #12]
   14050:	str	r3, [sp, #16]
   14054:	mov	r0, r7
   14058:	mov	r1, sl
   1405c:	mov	r2, r9
   14060:	mov	r3, r8
   14064:	bl	14074 <putchar_unlocked@plt+0x2ee0>
   14068:	str	r6, [r4]
   1406c:	sub	sp, fp, #28
   14070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14074:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14078:	add	fp, sp, #28
   1407c:	sub	sp, sp, #156	; 0x9c
   14080:	mov	r9, r3
   14084:	mov	r7, r1
   14088:	mov	r6, r0
   1408c:	str	r2, [fp, #-80]	; 0xffffffb0
   14090:	add	r0, r2, #1
   14094:	str	r0, [sp, #76]	; 0x4c
   14098:	ldr	r0, [fp, #12]
   1409c:	and	r1, r0, #1
   140a0:	str	r1, [sp, #40]	; 0x28
   140a4:	and	r1, r0, #4
   140a8:	str	r1, [sp, #36]	; 0x24
   140ac:	ubfx	r4, r0, #1, #1
   140b0:	bl	10fc0 <__ctype_get_mb_cur_max@plt>
   140b4:	str	r0, [sp, #44]	; 0x2c
   140b8:	ldr	r0, [fp, #24]
   140bc:	str	r0, [sp, #88]	; 0x58
   140c0:	ldr	r0, [fp, #20]
   140c4:	str	r0, [sp, #80]	; 0x50
   140c8:	ldr	r1, [fp, #8]
   140cc:	mov	r0, #0
   140d0:	str	r0, [sp, #84]	; 0x54
   140d4:	mov	r0, #0
   140d8:	str	r0, [fp, #-84]	; 0xffffffac
   140dc:	mov	r0, #0
   140e0:	str	r0, [fp, #-72]	; 0xffffffb8
   140e4:	mov	r0, #0
   140e8:	mov	r2, #0
   140ec:	str	r2, [fp, #-56]	; 0xffffffc8
   140f0:	mov	r2, #0
   140f4:	str	r2, [sp, #64]	; 0x40
   140f8:	mov	r2, #1
   140fc:	str	r2, [fp, #-48]	; 0xffffffd0
   14100:	cmp	r1, #10
   14104:	bhi	15030 <putchar_unlocked@plt+0x3e9c>
   14108:	mov	sl, r7
   1410c:	mov	r7, r1
   14110:	add	r1, pc, #24
   14114:	mov	r8, #0
   14118:	mov	r2, #1
   1411c:	mov	r3, #0
   14120:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14124:	mov	lr, r9
   14128:	mov	r5, r6
   1412c:	ldr	pc, [r1, r7, lsl #2]
   14130:	andeq	r4, r1, r4, lsl #4
   14134:	andeq	r4, r1, r4, asr #4
   14138:	andeq	r4, r1, r4, lsl r2
   1413c:	strdeq	r4, [r1], -ip
   14140:	andeq	r4, r1, r8, lsr r2
   14144:	muleq	r1, r8, r2
   14148:	andeq	r4, r1, r4, lsr #4
   1414c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14150:	andeq	r4, r1, ip, asr r1
   14154:	andeq	r4, r1, ip, asr r1
   14158:	andeq	r4, r1, r8, lsl #3
   1415c:	movw	r0, #31540	; 0x7b34
   14160:	movt	r0, #1
   14164:	mov	r1, r7
   14168:	bl	15638 <putchar_unlocked@plt+0x44a4>
   1416c:	str	r0, [sp, #80]	; 0x50
   14170:	movw	r0, #31542	; 0x7b36
   14174:	movt	r0, #1
   14178:	mov	r1, r7
   1417c:	bl	15638 <putchar_unlocked@plt+0x44a4>
   14180:	mov	r5, r6
   14184:	str	r0, [sp, #88]	; 0x58
   14188:	mov	r8, #0
   1418c:	tst	r4, #1
   14190:	str	r7, [fp, #-64]	; 0xffffffc0
   14194:	bne	141cc <putchar_unlocked@plt+0x3038>
   14198:	ldr	r0, [sp, #80]	; 0x50
   1419c:	ldrb	r0, [r0]
   141a0:	cmp	r0, #0
   141a4:	beq	141cc <putchar_unlocked@plt+0x3038>
   141a8:	ldr	r1, [sp, #80]	; 0x50
   141ac:	add	r1, r1, #1
   141b0:	mov	r8, #0
   141b4:	cmp	r8, sl
   141b8:	strbcc	r0, [r5, r8]
   141bc:	ldrb	r0, [r1, r8]
   141c0:	add	r8, r8, #1
   141c4:	cmp	r0, #0
   141c8:	bne	141b4 <putchar_unlocked@plt+0x3020>
   141cc:	ldr	r7, [sp, #88]	; 0x58
   141d0:	mov	r0, r7
   141d4:	bl	11068 <strlen@plt>
   141d8:	mov	r5, r6
   141dc:	str	r0, [fp, #-72]	; 0xffffffb8
   141e0:	str	r7, [fp, #-84]	; 0xffffffac
   141e4:	mov	r2, #1
   141e8:	mov	r3, r4
   141ec:	ldr	ip, [fp, #-80]	; 0xffffffb0
   141f0:	mov	lr, r9
   141f4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   141f8:	b	142f4 <putchar_unlocked@plt+0x3160>
   141fc:	mov	r0, #1
   14200:	b	14244 <putchar_unlocked@plt+0x30b0>
   14204:	mov	r7, #0
   14208:	mov	r8, #0
   1420c:	mov	r2, r0
   14210:	b	142f0 <putchar_unlocked@plt+0x315c>
   14214:	tst	r4, #1
   14218:	bne	14244 <putchar_unlocked@plt+0x30b0>
   1421c:	mov	r2, r0
   14220:	b	1426c <putchar_unlocked@plt+0x30d8>
   14224:	mov	r0, #1
   14228:	str	r0, [fp, #-72]	; 0xffffffb8
   1422c:	mov	r8, #0
   14230:	mov	r7, #5
   14234:	b	142b0 <putchar_unlocked@plt+0x311c>
   14238:	mov	r2, #1
   1423c:	tst	r4, #1
   14240:	beq	1426c <putchar_unlocked@plt+0x30d8>
   14244:	mov	r1, #1
   14248:	str	r1, [fp, #-72]	; 0xffffffb8
   1424c:	mov	r8, #0
   14250:	mov	r7, #2
   14254:	movw	r1, #31542	; 0x7b36
   14258:	movt	r1, #1
   1425c:	str	r1, [fp, #-84]	; 0xffffffac
   14260:	mov	r2, r0
   14264:	mov	r3, #1
   14268:	b	142f4 <putchar_unlocked@plt+0x3160>
   1426c:	mov	r8, #1
   14270:	mov	r7, #2
   14274:	cmp	sl, #0
   14278:	movne	r0, #39	; 0x27
   1427c:	strbne	r0, [r5]
   14280:	movw	r0, #31542	; 0x7b36
   14284:	movt	r0, #1
   14288:	str	r0, [fp, #-84]	; 0xffffffac
   1428c:	mov	r0, #1
   14290:	str	r0, [fp, #-72]	; 0xffffffb8
   14294:	b	142f0 <putchar_unlocked@plt+0x315c>
   14298:	mov	r7, #5
   1429c:	tst	r4, #1
   142a0:	beq	142c8 <putchar_unlocked@plt+0x3134>
   142a4:	mov	r0, #1
   142a8:	str	r0, [fp, #-72]	; 0xffffffb8
   142ac:	mov	r8, #0
   142b0:	movw	r0, #31538	; 0x7b32
   142b4:	movt	r0, #1
   142b8:	str	r0, [fp, #-84]	; 0xffffffac
   142bc:	mov	r2, #1
   142c0:	mov	r3, #1
   142c4:	b	142f4 <putchar_unlocked@plt+0x3160>
   142c8:	cmp	sl, #0
   142cc:	movne	r0, #34	; 0x22
   142d0:	strbne	r0, [r5]
   142d4:	mov	r8, #1
   142d8:	movw	r0, #31538	; 0x7b32
   142dc:	movt	r0, #1
   142e0:	str	r0, [fp, #-84]	; 0xffffffac
   142e4:	mov	r0, #1
   142e8:	str	r0, [fp, #-72]	; 0xffffffb8
   142ec:	mov	r2, #1
   142f0:	mov	r3, #0
   142f4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   142f8:	cmp	r0, #0
   142fc:	movwne	r0, #1
   14300:	and	r1, r0, r3
   14304:	and	r1, r2, r1
   14308:	str	r1, [sp, #56]	; 0x38
   1430c:	sub	r1, r7, #2
   14310:	clz	r1, r1
   14314:	lsr	r1, r1, #5
   14318:	and	r1, r1, r3
   1431c:	str	r1, [sp, #68]	; 0x44
   14320:	str	r7, [fp, #-64]	; 0xffffffc0
   14324:	subs	r1, r7, #2
   14328:	movwne	r1, #1
   1432c:	eor	r4, r3, #1
   14330:	str	r4, [fp, #-88]	; 0xffffffa8
   14334:	orr	r4, r1, r4
   14338:	str	r4, [sp, #72]	; 0x48
   1433c:	and	r1, r1, r2
   14340:	and	r0, r0, r1
   14344:	str	r0, [fp, #-60]	; 0xffffffc4
   14348:	str	r3, [fp, #-76]	; 0xffffffb4
   1434c:	orr	r0, r1, r3
   14350:	eor	r0, r0, #1
   14354:	ldr	r1, [fp, #16]
   14358:	clz	r1, r1
   1435c:	lsr	r1, r1, #5
   14360:	orr	r0, r1, r0
   14364:	str	r0, [fp, #-68]	; 0xffffffbc
   14368:	str	r2, [sp, #92]	; 0x5c
   1436c:	eor	r0, r2, #1
   14370:	str	r0, [sp, #60]	; 0x3c
   14374:	mov	r7, #0
   14378:	cmn	lr, #1
   1437c:	beq	1438c <putchar_unlocked@plt+0x31f8>
   14380:	cmp	r7, lr
   14384:	bne	14398 <putchar_unlocked@plt+0x3204>
   14388:	b	14ea4 <putchar_unlocked@plt+0x3d10>
   1438c:	ldrb	r0, [ip, r7]
   14390:	cmp	r0, #0
   14394:	beq	14ea4 <putchar_unlocked@plt+0x3d10>
   14398:	mov	r9, #0
   1439c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   143a0:	cmp	r0, #0
   143a4:	beq	143d8 <putchar_unlocked@plt+0x3244>
   143a8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   143ac:	add	r4, r7, r0
   143b0:	cmp	r0, #2
   143b4:	bcc	143d0 <putchar_unlocked@plt+0x323c>
   143b8:	cmn	lr, #1
   143bc:	bne	143d0 <putchar_unlocked@plt+0x323c>
   143c0:	mov	r0, ip
   143c4:	bl	11068 <strlen@plt>
   143c8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   143cc:	mov	lr, r0
   143d0:	cmp	r4, lr
   143d4:	bls	143e4 <putchar_unlocked@plt+0x3250>
   143d8:	mov	r0, #0
   143dc:	str	r0, [fp, #-52]	; 0xffffffcc
   143e0:	b	14428 <putchar_unlocked@plt+0x3294>
   143e4:	mov	r4, lr
   143e8:	add	r0, ip, r7
   143ec:	ldr	r1, [fp, #-84]	; 0xffffffac
   143f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   143f4:	bl	1105c <bcmp@plt>
   143f8:	cmp	r0, #0
   143fc:	mov	r1, r0
   14400:	movwne	r1, #1
   14404:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14408:	orr	r1, r1, r2
   1440c:	tst	r1, #1
   14410:	beq	14f78 <putchar_unlocked@plt+0x3de4>
   14414:	clz	r0, r0
   14418:	lsr	r0, r0, #5
   1441c:	str	r0, [fp, #-52]	; 0xffffffcc
   14420:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14424:	mov	lr, r4
   14428:	ldrb	r4, [ip, r7]
   1442c:	cmp	r4, #126	; 0x7e
   14430:	bhi	14960 <putchar_unlocked@plt+0x37cc>
   14434:	mov	r6, #1
   14438:	mov	r2, #110	; 0x6e
   1443c:	mov	r0, #97	; 0x61
   14440:	add	r3, pc, #4
   14444:	mov	r1, #0
   14448:	ldr	pc, [r3, r4, lsl #2]
   1444c:	andeq	r4, r1, r0, asr #15
   14450:	andeq	r4, r1, r0, ror #18
   14454:	andeq	r4, r1, r0, ror #18
   14458:	andeq	r4, r1, r0, ror #18
   1445c:	andeq	r4, r1, r0, ror #18
   14460:	andeq	r4, r1, r0, ror #18
   14464:	andeq	r4, r1, r0, ror #18
   14468:	andeq	r4, r1, r4, lsr sl
   1446c:	andeq	r4, r1, r0, lsr #15
   14470:	muleq	r1, r8, r7
   14474:	andeq	r4, r1, ip, lsr #15
   14478:	andeq	r4, r1, r8, asr #17
   1447c:	muleq	r1, r0, r7
   14480:	andeq	r4, r1, r8, lsr #15
   14484:	andeq	r4, r1, r0, ror #18
   14488:	andeq	r4, r1, r0, ror #18
   1448c:	andeq	r4, r1, r0, ror #18
   14490:	andeq	r4, r1, r0, ror #18
   14494:	andeq	r4, r1, r0, ror #18
   14498:	andeq	r4, r1, r0, ror #18
   1449c:	andeq	r4, r1, r0, ror #18
   144a0:	andeq	r4, r1, r0, ror #18
   144a4:	andeq	r4, r1, r0, ror #18
   144a8:	andeq	r4, r1, r0, ror #18
   144ac:	andeq	r4, r1, r0, ror #18
   144b0:	andeq	r4, r1, r0, ror #18
   144b4:	andeq	r4, r1, r0, ror #18
   144b8:	andeq	r4, r1, r0, ror #18
   144bc:	andeq	r4, r1, r0, ror #18
   144c0:	andeq	r4, r1, r0, ror #18
   144c4:	andeq	r4, r1, r0, ror #18
   144c8:	andeq	r4, r1, r0, ror #18
   144cc:	andeq	r4, r1, r4, asr #14
   144d0:	andeq	r4, r1, r8, asr #14
   144d4:	andeq	r4, r1, r8, asr #14
   144d8:	andeq	r4, r1, r0, lsr r7
   144dc:	andeq	r4, r1, r8, asr #14
   144e0:	andeq	r4, r1, r8, asr #12
   144e4:	andeq	r4, r1, r8, asr #14
   144e8:	ldrdeq	r4, [r1], -r0
   144ec:	andeq	r4, r1, r8, asr #14
   144f0:	andeq	r4, r1, r8, asr #14
   144f4:	andeq	r4, r1, r8, asr #14
   144f8:	andeq	r4, r1, r8, asr #12
   144fc:	andeq	r4, r1, r8, asr #12
   14500:	andeq	r4, r1, r8, asr #12
   14504:	andeq	r4, r1, r8, asr #12
   14508:	andeq	r4, r1, r8, asr #12
   1450c:	andeq	r4, r1, r8, asr #12
   14510:	andeq	r4, r1, r8, asr #12
   14514:	andeq	r4, r1, r8, asr #12
   14518:	andeq	r4, r1, r8, asr #12
   1451c:	andeq	r4, r1, r8, asr #12
   14520:	andeq	r4, r1, r8, asr #12
   14524:	andeq	r4, r1, r8, asr #12
   14528:	andeq	r4, r1, r8, asr #12
   1452c:	andeq	r4, r1, r8, asr #12
   14530:	andeq	r4, r1, r8, asr #12
   14534:	andeq	r4, r1, r8, asr #12
   14538:	andeq	r4, r1, r8, asr #14
   1453c:	andeq	r4, r1, r8, asr #14
   14540:	andeq	r4, r1, r8, asr #14
   14544:	andeq	r4, r1, r8, asr #14
   14548:	muleq	r1, r8, r8
   1454c:	andeq	r4, r1, r0, ror #18
   14550:	andeq	r4, r1, r8, asr #12
   14554:	andeq	r4, r1, r8, asr #12
   14558:	andeq	r4, r1, r8, asr #12
   1455c:	andeq	r4, r1, r8, asr #12
   14560:	andeq	r4, r1, r8, asr #12
   14564:	andeq	r4, r1, r8, asr #12
   14568:	andeq	r4, r1, r8, asr #12
   1456c:	andeq	r4, r1, r8, asr #12
   14570:	andeq	r4, r1, r8, asr #12
   14574:	andeq	r4, r1, r8, asr #12
   14578:	andeq	r4, r1, r8, asr #12
   1457c:	andeq	r4, r1, r8, asr #12
   14580:	andeq	r4, r1, r8, asr #12
   14584:	andeq	r4, r1, r8, asr #12
   14588:	andeq	r4, r1, r8, asr #12
   1458c:	andeq	r4, r1, r8, asr #12
   14590:	andeq	r4, r1, r8, asr #12
   14594:	andeq	r4, r1, r8, asr #12
   14598:	andeq	r4, r1, r8, asr #12
   1459c:	andeq	r4, r1, r8, asr #12
   145a0:	andeq	r4, r1, r8, asr #12
   145a4:	andeq	r4, r1, r8, asr #12
   145a8:	andeq	r4, r1, r8, asr #12
   145ac:	andeq	r4, r1, r8, asr #12
   145b0:	andeq	r4, r1, r8, asr #12
   145b4:	andeq	r4, r1, r8, asr #12
   145b8:	andeq	r4, r1, r8, asr #14
   145bc:	andeq	r4, r1, r0, ror r7
   145c0:	andeq	r4, r1, r8, asr #12
   145c4:	andeq	r4, r1, r8, asr #14
   145c8:	andeq	r4, r1, r8, asr #12
   145cc:	andeq	r4, r1, r8, asr #14
   145d0:	andeq	r4, r1, r8, asr #12
   145d4:	andeq	r4, r1, r8, asr #12
   145d8:	andeq	r4, r1, r8, asr #12
   145dc:	andeq	r4, r1, r8, asr #12
   145e0:	andeq	r4, r1, r8, asr #12
   145e4:	andeq	r4, r1, r8, asr #12
   145e8:	andeq	r4, r1, r8, asr #12
   145ec:	andeq	r4, r1, r8, asr #12
   145f0:	andeq	r4, r1, r8, asr #12
   145f4:	andeq	r4, r1, r8, asr #12
   145f8:	andeq	r4, r1, r8, asr #12
   145fc:	andeq	r4, r1, r8, asr #12
   14600:	andeq	r4, r1, r8, asr #12
   14604:	andeq	r4, r1, r8, asr #12
   14608:	andeq	r4, r1, r8, asr #12
   1460c:	andeq	r4, r1, r8, asr #12
   14610:	andeq	r4, r1, r8, asr #12
   14614:	andeq	r4, r1, r8, asr #12
   14618:	andeq	r4, r1, r8, asr #12
   1461c:	andeq	r4, r1, r8, asr #12
   14620:	andeq	r4, r1, r8, asr #12
   14624:	andeq	r4, r1, r8, asr #12
   14628:	andeq	r4, r1, r8, asr #12
   1462c:	andeq	r4, r1, r8, asr #12
   14630:	andeq	r4, r1, r8, asr #12
   14634:	andeq	r4, r1, r8, asr #12
   14638:	andeq	r4, r1, r4, lsl #14
   1463c:	andeq	r4, r1, r8, asr #14
   14640:	andeq	r4, r1, r4, lsl #14
   14644:	andeq	r4, r1, r0, lsr r7
   14648:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1464c:	tst	r0, #1
   14650:	bne	1467c <putchar_unlocked@plt+0x34e8>
   14654:	ubfx	r0, r4, #5, #3
   14658:	ldr	r1, [fp, #16]
   1465c:	ldr	r0, [r1, r0, lsl #2]
   14660:	and	r1, r4, #31
   14664:	mov	r2, #1
   14668:	tst	r0, r2, lsl r1
   1466c:	beq	1467c <putchar_unlocked@plt+0x34e8>
   14670:	mov	r0, r4
   14674:	mov	r1, r6
   14678:	b	14690 <putchar_unlocked@plt+0x34fc>
   1467c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14680:	cmp	r0, #0
   14684:	mov	r0, r4
   14688:	mov	r1, r6
   1468c:	beq	149c8 <putchar_unlocked@plt+0x3834>
   14690:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14694:	tst	r2, #1
   14698:	bne	14f8c <putchar_unlocked@plt+0x3df8>
   1469c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   146a0:	subs	r2, r2, #2
   146a4:	movwne	r2, #1
   146a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   146ac:	orr	r2, r2, r3
   146b0:	tst	r2, #1
   146b4:	bne	146f0 <putchar_unlocked@plt+0x355c>
   146b8:	cmp	r8, sl
   146bc:	movcc	r2, #39	; 0x27
   146c0:	strbcc	r2, [r5, r8]
   146c4:	add	r2, r8, #1
   146c8:	cmp	r2, sl
   146cc:	movcc	r3, #36	; 0x24
   146d0:	strbcc	r3, [r5, r2]
   146d4:	add	r2, r8, #2
   146d8:	cmp	r2, sl
   146dc:	movcc	r3, #39	; 0x27
   146e0:	strbcc	r3, [r5, r2]
   146e4:	add	r8, r8, #3
   146e8:	mov	r2, #1
   146ec:	str	r2, [fp, #-56]	; 0xffffffc8
   146f0:	cmp	r8, sl
   146f4:	movcc	r2, #92	; 0x5c
   146f8:	strbcc	r2, [r5, r8]
   146fc:	add	r8, r8, #1
   14700:	b	14a0c <putchar_unlocked@plt+0x3878>
   14704:	cmp	lr, #1
   14708:	beq	14730 <putchar_unlocked@plt+0x359c>
   1470c:	mov	r6, #0
   14710:	cmn	lr, #1
   14714:	bne	1473c <putchar_unlocked@plt+0x35a8>
   14718:	ldrb	r0, [ip, #1]
   1471c:	cmp	r0, #0
   14720:	beq	14730 <putchar_unlocked@plt+0x359c>
   14724:	mvn	lr, #0
   14728:	mov	r9, #0
   1472c:	b	14648 <putchar_unlocked@plt+0x34b4>
   14730:	mov	r6, #0
   14734:	cmp	r7, #0
   14738:	beq	14744 <putchar_unlocked@plt+0x35b0>
   1473c:	mov	r9, #0
   14740:	b	14648 <putchar_unlocked@plt+0x34b4>
   14744:	mov	r1, #1
   14748:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1474c:	cmp	r0, #2
   14750:	bne	14768 <putchar_unlocked@plt+0x35d4>
   14754:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14758:	tst	r0, #1
   1475c:	mov	r6, r1
   14760:	beq	14648 <putchar_unlocked@plt+0x34b4>
   14764:	b	14f8c <putchar_unlocked@plt+0x3df8>
   14768:	mov	r6, r1
   1476c:	b	14648 <putchar_unlocked@plt+0x34b4>
   14770:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14774:	cmp	r0, #2
   14778:	bne	149ac <putchar_unlocked@plt+0x3818>
   1477c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14780:	tst	r0, #1
   14784:	bne	14f8c <putchar_unlocked@plt+0x3df8>
   14788:	mov	r9, #0
   1478c:	b	149c0 <putchar_unlocked@plt+0x382c>
   14790:	mov	r0, #102	; 0x66
   14794:	b	14a34 <putchar_unlocked@plt+0x38a0>
   14798:	mov	r2, #116	; 0x74
   1479c:	b	147ac <putchar_unlocked@plt+0x3618>
   147a0:	mov	r0, #98	; 0x62
   147a4:	b	14a34 <putchar_unlocked@plt+0x38a0>
   147a8:	mov	r2, #114	; 0x72
   147ac:	ldr	r0, [sp, #72]	; 0x48
   147b0:	tst	r0, #1
   147b4:	mov	r0, r2
   147b8:	bne	14a34 <putchar_unlocked@plt+0x38a0>
   147bc:	b	14f8c <putchar_unlocked@plt+0x3df8>
   147c0:	ldr	r0, [sp, #92]	; 0x5c
   147c4:	tst	r0, #1
   147c8:	beq	14a50 <putchar_unlocked@plt+0x38bc>
   147cc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   147d0:	tst	r0, #1
   147d4:	bne	14f8c <putchar_unlocked@plt+0x3df8>
   147d8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   147dc:	subs	r0, r0, #2
   147e0:	movwne	r0, #1
   147e4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   147e8:	orr	r0, r0, r1
   147ec:	tst	r0, #1
   147f0:	bne	1482c <putchar_unlocked@plt+0x3698>
   147f4:	cmp	r8, sl
   147f8:	movcc	r0, #39	; 0x27
   147fc:	strbcc	r0, [r5, r8]
   14800:	add	r0, r8, #1
   14804:	cmp	r0, sl
   14808:	movcc	r1, #36	; 0x24
   1480c:	strbcc	r1, [r5, r0]
   14810:	add	r0, r8, #2
   14814:	cmp	r0, sl
   14818:	movcc	r1, #39	; 0x27
   1481c:	strbcc	r1, [r5, r0]
   14820:	add	r8, r8, #3
   14824:	mov	r0, #1
   14828:	str	r0, [fp, #-56]	; 0xffffffc8
   1482c:	cmp	r8, sl
   14830:	movcc	r0, #92	; 0x5c
   14834:	strbcc	r0, [r5, r8]
   14838:	add	r0, r8, #1
   1483c:	mov	r6, #0
   14840:	mov	r9, #1
   14844:	mov	r4, #48	; 0x30
   14848:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1484c:	cmp	r1, #2
   14850:	beq	14c14 <putchar_unlocked@plt+0x3a80>
   14854:	add	r1, r7, #1
   14858:	cmp	r1, lr
   1485c:	bcs	14c14 <putchar_unlocked@plt+0x3a80>
   14860:	ldrb	r1, [ip, r1]
   14864:	sub	r1, r1, #48	; 0x30
   14868:	uxtb	r1, r1
   1486c:	cmp	r1, #9
   14870:	bhi	14c14 <putchar_unlocked@plt+0x3a80>
   14874:	cmp	r0, sl
   14878:	movcc	r1, #48	; 0x30
   1487c:	strbcc	r1, [r5, r0]
   14880:	add	r0, r8, #2
   14884:	cmp	r0, sl
   14888:	movcc	r1, #48	; 0x30
   1488c:	strbcc	r1, [r5, r0]
   14890:	add	r8, r8, #3
   14894:	b	14648 <putchar_unlocked@plt+0x34b4>
   14898:	mov	r9, #0
   1489c:	mov	r4, #63	; 0x3f
   148a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   148a4:	cmp	r0, #5
   148a8:	beq	14c1c <putchar_unlocked@plt+0x3a88>
   148ac:	cmp	r0, #2
   148b0:	bne	14cc4 <putchar_unlocked@plt+0x3b30>
   148b4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   148b8:	tst	r0, #1
   148bc:	mov	r6, #0
   148c0:	beq	14648 <putchar_unlocked@plt+0x34b4>
   148c4:	b	14f8c <putchar_unlocked@plt+0x3df8>
   148c8:	mov	r0, #118	; 0x76
   148cc:	b	14a34 <putchar_unlocked@plt+0x38a0>
   148d0:	mov	r4, #39	; 0x27
   148d4:	mov	r0, #1
   148d8:	str	r0, [sp, #64]	; 0x40
   148dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   148e0:	cmp	r0, #2
   148e4:	bne	14a6c <putchar_unlocked@plt+0x38d8>
   148e8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   148ec:	tst	r0, #1
   148f0:	bne	14f8c <putchar_unlocked@plt+0x3df8>
   148f4:	ldr	r2, [sp, #84]	; 0x54
   148f8:	cmp	r2, #0
   148fc:	mov	r0, r2
   14900:	movwne	r0, #1
   14904:	clz	r1, sl
   14908:	lsr	r1, r1, #5
   1490c:	orrs	r0, r0, r1
   14910:	moveq	r2, sl
   14914:	str	r2, [sp, #84]	; 0x54
   14918:	moveq	sl, r0
   1491c:	cmp	r8, sl
   14920:	movcc	r0, #39	; 0x27
   14924:	strbcc	r0, [r5, r8]
   14928:	add	r0, r8, #1
   1492c:	cmp	r0, sl
   14930:	movcc	r1, #92	; 0x5c
   14934:	strbcc	r1, [r5, r0]
   14938:	add	r0, r8, #2
   1493c:	cmp	r0, sl
   14940:	movcc	r1, #39	; 0x27
   14944:	strbcc	r1, [r5, r0]
   14948:	add	r8, r8, #3
   1494c:	mov	r0, #0
   14950:	str	r0, [fp, #-56]	; 0xffffffc8
   14954:	mov	r9, #0
   14958:	mov	r6, #1
   1495c:	b	14648 <putchar_unlocked@plt+0x34b4>
   14960:	ldr	r0, [sp, #44]	; 0x2c
   14964:	cmp	r0, #1
   14968:	bne	14a74 <putchar_unlocked@plt+0x38e0>
   1496c:	str	lr, [sp, #32]
   14970:	bl	11044 <__ctype_b_loc@plt>
   14974:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14978:	ldr	r0, [r0]
   1497c:	add	r0, r0, r4, lsl #1
   14980:	ldrb	r0, [r0, #1]
   14984:	ubfx	r6, r0, #6, #1
   14988:	mov	r2, #1
   1498c:	ldr	r0, [sp, #60]	; 0x3c
   14990:	orr	r1, r6, r0
   14994:	cmp	r2, #1
   14998:	bhi	14ccc <putchar_unlocked@plt+0x3b38>
   1499c:	tst	r1, #1
   149a0:	beq	14ccc <putchar_unlocked@plt+0x3b38>
   149a4:	ldr	lr, [sp, #32]
   149a8:	b	14648 <putchar_unlocked@plt+0x34b4>
   149ac:	mov	r9, #0
   149b0:	mov	r0, #92	; 0x5c
   149b4:	ldr	r1, [sp, #56]	; 0x38
   149b8:	cmp	r1, #0
   149bc:	beq	14a34 <putchar_unlocked@plt+0x38a0>
   149c0:	mov	r4, #92	; 0x5c
   149c4:	mov	r6, #0
   149c8:	cmp	r9, #0
   149cc:	bne	14a04 <putchar_unlocked@plt+0x3870>
   149d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   149d4:	tst	r0, #1
   149d8:	beq	14a04 <putchar_unlocked@plt+0x3870>
   149dc:	cmp	r8, sl
   149e0:	movcc	r0, #39	; 0x27
   149e4:	strbcc	r0, [r5, r8]
   149e8:	add	r0, r8, #1
   149ec:	cmp	r0, sl
   149f0:	movcc	r1, #39	; 0x27
   149f4:	strbcc	r1, [r5, r0]
   149f8:	add	r8, r8, #2
   149fc:	mov	r0, #0
   14a00:	str	r0, [fp, #-56]	; 0xffffffc8
   14a04:	mov	r1, r6
   14a08:	mov	r0, r4
   14a0c:	cmp	r8, sl
   14a10:	strbcc	r0, [r5, r8]
   14a14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14a18:	and	r0, r0, r1
   14a1c:	str	r0, [fp, #-48]	; 0xffffffd0
   14a20:	add	r8, r8, #1
   14a24:	add	r7, r7, #1
   14a28:	cmn	lr, #1
   14a2c:	bne	14380 <putchar_unlocked@plt+0x31ec>
   14a30:	b	1438c <putchar_unlocked@plt+0x31f8>
   14a34:	mov	r9, #0
   14a38:	ldr	r1, [sp, #92]	; 0x5c
   14a3c:	tst	r1, #1
   14a40:	mov	r6, #0
   14a44:	mov	r1, #0
   14a48:	beq	14648 <putchar_unlocked@plt+0x34b4>
   14a4c:	b	14690 <putchar_unlocked@plt+0x34fc>
   14a50:	mov	r4, #0
   14a54:	ldr	r0, [sp, #40]	; 0x28
   14a58:	cmp	r0, #0
   14a5c:	mov	r9, #0
   14a60:	mov	r6, #0
   14a64:	beq	14648 <putchar_unlocked@plt+0x34b4>
   14a68:	b	14a24 <putchar_unlocked@plt+0x3890>
   14a6c:	mov	r6, #1
   14a70:	b	14648 <putchar_unlocked@plt+0x34b4>
   14a74:	mov	r0, #0
   14a78:	str	r0, [fp, #-36]	; 0xffffffdc
   14a7c:	str	r0, [fp, #-40]	; 0xffffffd8
   14a80:	cmn	lr, #1
   14a84:	bne	14a98 <putchar_unlocked@plt+0x3904>
   14a88:	mov	r0, ip
   14a8c:	bl	11068 <strlen@plt>
   14a90:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14a94:	mov	lr, r0
   14a98:	ldr	r0, [sp, #76]	; 0x4c
   14a9c:	add	r0, r0, r7
   14aa0:	str	r0, [sp, #24]
   14aa4:	mov	r6, #1
   14aa8:	mov	r2, #0
   14aac:	sub	r0, fp, #40	; 0x28
   14ab0:	mov	r3, r0
   14ab4:	str	r5, [sp, #28]
   14ab8:	str	lr, [sp, #32]
   14abc:	b	14b00 <putchar_unlocked@plt+0x396c>
   14ac0:	ldr	r5, [sp, #52]	; 0x34
   14ac4:	add	r5, r0, r5
   14ac8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14acc:	bl	10f9c <iswprint@plt>
   14ad0:	cmp	r0, #0
   14ad4:	movwne	r0, #1
   14ad8:	and	r6, r6, r0
   14adc:	sub	r0, fp, #40	; 0x28
   14ae0:	bl	10f6c <mbsinit@plt>
   14ae4:	sub	r3, fp, #40	; 0x28
   14ae8:	mov	r2, r5
   14aec:	ldr	lr, [sp, #32]
   14af0:	cmp	r0, #0
   14af4:	ldr	r5, [sp, #28]
   14af8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14afc:	bne	1498c <putchar_unlocked@plt+0x37f8>
   14b00:	str	r2, [sp, #52]	; 0x34
   14b04:	add	r0, r2, r7
   14b08:	add	r1, ip, r0
   14b0c:	str	r0, [sp, #48]	; 0x30
   14b10:	sub	r2, lr, r0
   14b14:	sub	r0, fp, #44	; 0x2c
   14b18:	bl	169d0 <putchar_unlocked@plt+0x583c>
   14b1c:	cmp	r0, #0
   14b20:	beq	14e98 <putchar_unlocked@plt+0x3d04>
   14b24:	cmn	r0, #1
   14b28:	beq	14e54 <putchar_unlocked@plt+0x3cc0>
   14b2c:	cmn	r0, #2
   14b30:	ldr	lr, [sp, #32]
   14b34:	beq	14e5c <putchar_unlocked@plt+0x3cc8>
   14b38:	cmp	r0, #2
   14b3c:	mov	r1, #0
   14b40:	movwcc	r1, #1
   14b44:	ldr	r2, [sp, #68]	; 0x44
   14b48:	eor	r2, r2, #1
   14b4c:	orrs	r1, r2, r1
   14b50:	bne	14ac0 <putchar_unlocked@plt+0x392c>
   14b54:	ldr	r1, [sp, #52]	; 0x34
   14b58:	ldr	r2, [sp, #24]
   14b5c:	add	r1, r2, r1
   14b60:	sub	r2, r0, #1
   14b64:	b	14b74 <putchar_unlocked@plt+0x39e0>
   14b68:	add	r1, r1, #1
   14b6c:	subs	r2, r2, #1
   14b70:	beq	14ac0 <putchar_unlocked@plt+0x392c>
   14b74:	ldrb	r3, [r1]
   14b78:	sub	r3, r3, #91	; 0x5b
   14b7c:	cmp	r3, #33	; 0x21
   14b80:	bhi	14b68 <putchar_unlocked@plt+0x39d4>
   14b84:	add	r5, pc, #0
   14b88:	ldr	pc, [r5, r3, lsl #2]
   14b8c:	andeq	r4, r1, r4, lsl #31
   14b90:	andeq	r4, r1, r4, lsl #31
   14b94:	andeq	r4, r1, r8, ror #22
   14b98:	andeq	r4, r1, r4, lsl #31
   14b9c:	andeq	r4, r1, r8, ror #22
   14ba0:	andeq	r4, r1, r4, lsl #31
   14ba4:	andeq	r4, r1, r8, ror #22
   14ba8:	andeq	r4, r1, r8, ror #22
   14bac:	andeq	r4, r1, r8, ror #22
   14bb0:	andeq	r4, r1, r8, ror #22
   14bb4:	andeq	r4, r1, r8, ror #22
   14bb8:	andeq	r4, r1, r8, ror #22
   14bbc:	andeq	r4, r1, r8, ror #22
   14bc0:	andeq	r4, r1, r8, ror #22
   14bc4:	andeq	r4, r1, r8, ror #22
   14bc8:	andeq	r4, r1, r8, ror #22
   14bcc:	andeq	r4, r1, r8, ror #22
   14bd0:	andeq	r4, r1, r8, ror #22
   14bd4:	andeq	r4, r1, r8, ror #22
   14bd8:	andeq	r4, r1, r8, ror #22
   14bdc:	andeq	r4, r1, r8, ror #22
   14be0:	andeq	r4, r1, r8, ror #22
   14be4:	andeq	r4, r1, r8, ror #22
   14be8:	andeq	r4, r1, r8, ror #22
   14bec:	andeq	r4, r1, r8, ror #22
   14bf0:	andeq	r4, r1, r8, ror #22
   14bf4:	andeq	r4, r1, r8, ror #22
   14bf8:	andeq	r4, r1, r8, ror #22
   14bfc:	andeq	r4, r1, r8, ror #22
   14c00:	andeq	r4, r1, r8, ror #22
   14c04:	andeq	r4, r1, r8, ror #22
   14c08:	andeq	r4, r1, r8, ror #22
   14c0c:	andeq	r4, r1, r8, ror #22
   14c10:	andeq	r4, r1, r4, lsl #31
   14c14:	mov	r8, r0
   14c18:	b	14648 <putchar_unlocked@plt+0x34b4>
   14c1c:	ldr	r0, [sp, #36]	; 0x24
   14c20:	cmp	r0, #0
   14c24:	beq	14cc4 <putchar_unlocked@plt+0x3b30>
   14c28:	add	r0, r7, #2
   14c2c:	cmp	r0, lr
   14c30:	bcs	14cc4 <putchar_unlocked@plt+0x3b30>
   14c34:	add	r1, r7, ip
   14c38:	ldrb	r1, [r1, #1]
   14c3c:	cmp	r1, #63	; 0x3f
   14c40:	bne	14cc4 <putchar_unlocked@plt+0x3b30>
   14c44:	ldrb	r1, [ip, r0]
   14c48:	sub	r2, r1, #33	; 0x21
   14c4c:	cmp	r2, #29
   14c50:	bhi	14cc4 <putchar_unlocked@plt+0x3b30>
   14c54:	mov	r3, #1
   14c58:	movw	r6, #20929	; 0x51c1
   14c5c:	movt	r6, #14336	; 0x3800
   14c60:	tst	r6, r3, lsl r2
   14c64:	beq	14cc4 <putchar_unlocked@plt+0x3b30>
   14c68:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14c6c:	tst	r2, #1
   14c70:	bne	14f8c <putchar_unlocked@plt+0x3df8>
   14c74:	cmp	r8, sl
   14c78:	movcc	r2, #63	; 0x3f
   14c7c:	strbcc	r2, [r5, r8]
   14c80:	add	r2, r8, #1
   14c84:	cmp	r2, sl
   14c88:	movcc	r3, #34	; 0x22
   14c8c:	strbcc	r3, [r5, r2]
   14c90:	add	r2, r8, #2
   14c94:	cmp	r2, sl
   14c98:	movcc	r3, #34	; 0x22
   14c9c:	strbcc	r3, [r5, r2]
   14ca0:	add	r2, r8, #3
   14ca4:	cmp	r2, sl
   14ca8:	movcc	r3, #63	; 0x3f
   14cac:	strbcc	r3, [r5, r2]
   14cb0:	add	r8, r8, #4
   14cb4:	mov	r7, r0
   14cb8:	mov	r4, r1
   14cbc:	mov	r6, #0
   14cc0:	b	14648 <putchar_unlocked@plt+0x34b4>
   14cc4:	mov	r6, #0
   14cc8:	b	14648 <putchar_unlocked@plt+0x34b4>
   14ccc:	add	r0, r2, r7
   14cd0:	str	r0, [sp, #52]	; 0x34
   14cd4:	mov	r2, #0
   14cd8:	ldr	lr, [sp, #32]
   14cdc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14ce0:	str	r1, [sp, #48]	; 0x30
   14ce4:	tst	r1, #1
   14ce8:	bne	14dc4 <putchar_unlocked@plt+0x3c30>
   14cec:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14cf0:	tst	r1, #1
   14cf4:	bne	14f8c <putchar_unlocked@plt+0x3df8>
   14cf8:	mov	r3, r0
   14cfc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14d00:	subs	r1, r0, #2
   14d04:	movwne	r1, #1
   14d08:	orr	r1, r1, r3
   14d0c:	tst	r1, #1
   14d10:	bne	14d48 <putchar_unlocked@plt+0x3bb4>
   14d14:	cmp	r8, sl
   14d18:	movcc	r0, #39	; 0x27
   14d1c:	strbcc	r0, [r5, r8]
   14d20:	add	r2, r8, #1
   14d24:	cmp	r2, sl
   14d28:	movcc	r0, #36	; 0x24
   14d2c:	strbcc	r0, [r5, r2]
   14d30:	add	r2, r8, #2
   14d34:	cmp	r2, sl
   14d38:	movcc	r0, #39	; 0x27
   14d3c:	strbcc	r0, [r5, r2]
   14d40:	add	r8, r8, #3
   14d44:	mov	r3, #1
   14d48:	cmp	r8, sl
   14d4c:	movcc	r1, #92	; 0x5c
   14d50:	strbcc	r1, [r5, r8]
   14d54:	add	r2, r8, #1
   14d58:	cmp	r2, sl
   14d5c:	bcs	14d70 <putchar_unlocked@plt+0x3bdc>
   14d60:	uxtb	r1, r4
   14d64:	mov	r0, #48	; 0x30
   14d68:	orr	r1, r0, r1, lsr #6
   14d6c:	strb	r1, [r5, r2]
   14d70:	add	r2, r8, #2
   14d74:	cmp	r2, sl
   14d78:	lsrcc	r1, r4, #3
   14d7c:	movcc	r0, #6
   14d80:	bficc	r1, r0, #3, #29
   14d84:	strbcc	r1, [r5, r2]
   14d88:	mov	r0, #6
   14d8c:	bfi	r4, r0, #3, #29
   14d90:	add	r8, r8, #3
   14d94:	mov	r2, #1
   14d98:	mov	r0, r3
   14d9c:	b	14de8 <putchar_unlocked@plt+0x3c54>
   14da0:	cmp	r8, sl
   14da4:	strbcc	r4, [r5, r8]
   14da8:	ldr	r1, [sp, #76]	; 0x4c
   14dac:	ldrb	r4, [r1, r7]
   14db0:	add	r8, r8, #1
   14db4:	mov	r7, r3
   14db8:	ldr	r1, [sp, #48]	; 0x30
   14dbc:	tst	r1, #1
   14dc0:	beq	14cec <putchar_unlocked@plt+0x3b58>
   14dc4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14dc8:	tst	r1, #1
   14dcc:	beq	14de0 <putchar_unlocked@plt+0x3c4c>
   14dd0:	cmp	r8, sl
   14dd4:	movcc	r1, #92	; 0x5c
   14dd8:	strbcc	r1, [r5, r8]
   14ddc:	add	r8, r8, #1
   14de0:	mov	r1, #0
   14de4:	str	r1, [fp, #-52]	; 0xffffffcc
   14de8:	and	r9, r2, #1
   14dec:	add	r3, r7, #1
   14df0:	ldr	r1, [sp, #52]	; 0x34
   14df4:	cmp	r1, r3
   14df8:	bls	14e3c <putchar_unlocked@plt+0x3ca8>
   14dfc:	cmp	r9, #0
   14e00:	movwne	r9, #1
   14e04:	mvn	r1, r0
   14e08:	orr	r1, r1, r9
   14e0c:	tst	r1, #1
   14e10:	bne	14da0 <putchar_unlocked@plt+0x3c0c>
   14e14:	cmp	r8, sl
   14e18:	movcc	r1, #39	; 0x27
   14e1c:	strbcc	r1, [r5, r8]
   14e20:	add	r1, r8, #1
   14e24:	cmp	r1, sl
   14e28:	movcc	r0, #39	; 0x27
   14e2c:	strbcc	r0, [r5, r1]
   14e30:	add	r8, r8, #2
   14e34:	mov	r0, #0
   14e38:	b	14da0 <putchar_unlocked@plt+0x3c0c>
   14e3c:	str	r0, [fp, #-56]	; 0xffffffc8
   14e40:	cmp	r9, #0
   14e44:	movwne	r9, #1
   14e48:	cmp	r9, #0
   14e4c:	beq	149d0 <putchar_unlocked@plt+0x383c>
   14e50:	b	14a04 <putchar_unlocked@plt+0x3870>
   14e54:	mov	r6, #0
   14e58:	b	14e98 <putchar_unlocked@plt+0x3d04>
   14e5c:	mov	r6, #0
   14e60:	ldr	r0, [sp, #48]	; 0x30
   14e64:	cmp	r0, lr
   14e68:	bcs	14e98 <putchar_unlocked@plt+0x3d04>
   14e6c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14e70:	add	r0, ip, r7
   14e74:	ldr	r2, [sp, #52]	; 0x34
   14e78:	ldrb	r1, [r0, r2]
   14e7c:	cmp	r1, #0
   14e80:	beq	1498c <putchar_unlocked@plt+0x37f8>
   14e84:	add	r2, r2, #1
   14e88:	add	r1, r7, r2
   14e8c:	cmp	r1, lr
   14e90:	bcc	14e78 <putchar_unlocked@plt+0x3ce4>
   14e94:	b	1498c <putchar_unlocked@plt+0x37f8>
   14e98:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14e9c:	ldr	r2, [sp, #52]	; 0x34
   14ea0:	b	1498c <putchar_unlocked@plt+0x37f8>
   14ea4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14ea8:	eor	r0, r1, #2
   14eac:	orr	r0, r0, r8
   14eb0:	clz	r0, r0
   14eb4:	lsr	r0, r0, #5
   14eb8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14ebc:	tst	r3, r0
   14ec0:	bne	14f8c <putchar_unlocked@plt+0x3df8>
   14ec4:	mov	r6, r5
   14ec8:	subs	r0, r1, #2
   14ecc:	movwne	r0, #1
   14ed0:	orr	r0, r3, r0
   14ed4:	tst	r0, #1
   14ed8:	ldr	r2, [sp, #92]	; 0x5c
   14edc:	ldreq	r0, [sp, #64]	; 0x40
   14ee0:	eoreq	r0, r0, #1
   14ee4:	tsteq	r0, #1
   14ee8:	bne	14f28 <putchar_unlocked@plt+0x3d94>
   14eec:	mov	r9, lr
   14ef0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14ef4:	tst	r0, #1
   14ef8:	bne	14ff4 <putchar_unlocked@plt+0x3e60>
   14efc:	ldr	r0, [sp, #84]	; 0x54
   14f00:	cmp	r0, #0
   14f04:	beq	14f28 <putchar_unlocked@plt+0x3d94>
   14f08:	mov	r0, #0
   14f0c:	str	r0, [fp, #-48]	; 0xffffffd0
   14f10:	mov	r1, #2
   14f14:	cmp	sl, #0
   14f18:	mov	r0, r2
   14f1c:	mov	r4, r3
   14f20:	ldr	r7, [sp, #84]	; 0x54
   14f24:	beq	14100 <putchar_unlocked@plt+0x2f6c>
   14f28:	ldr	r1, [fp, #-84]	; 0xffffffac
   14f2c:	clz	r0, r1
   14f30:	lsr	r0, r0, #5
   14f34:	orr	r0, r0, r3
   14f38:	tst	r0, #1
   14f3c:	bne	14f68 <putchar_unlocked@plt+0x3dd4>
   14f40:	ldrb	r0, [r1]
   14f44:	cmp	r0, #0
   14f48:	beq	14f68 <putchar_unlocked@plt+0x3dd4>
   14f4c:	add	r1, r1, #1
   14f50:	cmp	r8, sl
   14f54:	strbcc	r0, [r6, r8]
   14f58:	add	r8, r8, #1
   14f5c:	ldrb	r0, [r1], #1
   14f60:	cmp	r0, #0
   14f64:	bne	14f50 <putchar_unlocked@plt+0x3dbc>
   14f68:	cmp	r8, sl
   14f6c:	movcc	r0, #0
   14f70:	strbcc	r0, [r6, r8]
   14f74:	b	14fe8 <putchar_unlocked@plt+0x3e54>
   14f78:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14f7c:	mov	lr, r4
   14f80:	b	14f8c <putchar_unlocked@plt+0x3df8>
   14f84:	ldr	r5, [sp, #28]
   14f88:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14f8c:	mov	r0, #0
   14f90:	ldr	r1, [fp, #12]
   14f94:	bic	r1, r1, #2
   14f98:	mov	r2, #2
   14f9c:	ldr	r3, [sp, #92]	; 0x5c
   14fa0:	tst	r3, #1
   14fa4:	movwne	r2, #4
   14fa8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14fac:	cmp	r3, #2
   14fb0:	movne	r2, r3
   14fb4:	str	r2, [sp]
   14fb8:	str	r1, [sp, #4]
   14fbc:	str	r0, [sp, #8]
   14fc0:	ldr	r0, [sp, #80]	; 0x50
   14fc4:	str	r0, [sp, #12]
   14fc8:	ldr	r0, [sp, #88]	; 0x58
   14fcc:	str	r0, [sp, #16]
   14fd0:	mov	r0, r5
   14fd4:	mov	r1, sl
   14fd8:	mov	r2, ip
   14fdc:	mov	r3, lr
   14fe0:	bl	14074 <putchar_unlocked@plt+0x2ee0>
   14fe4:	mov	r8, r0
   14fe8:	mov	r0, r8
   14fec:	sub	sp, fp, #28
   14ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ff4:	mov	r0, #5
   14ff8:	str	r0, [sp]
   14ffc:	ldr	r0, [fp, #12]
   15000:	str	r0, [sp, #4]
   15004:	ldr	r0, [fp, #16]
   15008:	str	r0, [sp, #8]
   1500c:	ldr	r0, [sp, #80]	; 0x50
   15010:	str	r0, [sp, #12]
   15014:	ldr	r0, [sp, #88]	; 0x58
   15018:	str	r0, [sp, #16]
   1501c:	mov	r0, r6
   15020:	ldr	r1, [sp, #84]	; 0x54
   15024:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15028:	mov	r3, r9
   1502c:	b	14fe0 <putchar_unlocked@plt+0x3e4c>
   15030:	bl	11164 <abort@plt>
   15034:	mov	r3, r2
   15038:	mov	r2, #0
   1503c:	b	15040 <putchar_unlocked@plt+0x3eac>
   15040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15044:	add	fp, sp, #28
   15048:	sub	sp, sp, #36	; 0x24
   1504c:	mov	r4, r2
   15050:	str	r2, [sp, #24]
   15054:	mov	r5, r1
   15058:	mov	r6, r0
   1505c:	str	r0, [sp, #20]
   15060:	movw	r8, #33168	; 0x8190
   15064:	movt	r8, #2
   15068:	cmp	r3, #0
   1506c:	movne	r8, r3
   15070:	bl	11080 <__errno_location@plt>
   15074:	str	r0, [sp, #28]
   15078:	ldm	r8, {r3, r9}
   1507c:	ldr	r1, [r8, #40]	; 0x28
   15080:	ldr	r2, [r8, #44]	; 0x2c
   15084:	ldr	r7, [r0]
   15088:	str	r7, [sp, #32]
   1508c:	add	sl, r8, #8
   15090:	cmp	r4, #0
   15094:	orreq	r9, r9, #1
   15098:	stm	sp, {r3, r9, sl}
   1509c:	str	r1, [sp, #12]
   150a0:	str	r2, [sp, #16]
   150a4:	mov	r0, #0
   150a8:	mov	r1, #0
   150ac:	mov	r2, r6
   150b0:	mov	r3, r5
   150b4:	mov	r7, r5
   150b8:	bl	14074 <putchar_unlocked@plt+0x2ee0>
   150bc:	mov	r5, r0
   150c0:	add	r4, r0, #1
   150c4:	mov	r0, r4
   150c8:	bl	15f54 <putchar_unlocked@plt+0x4dc0>
   150cc:	mov	r6, r0
   150d0:	ldr	r0, [r8]
   150d4:	ldr	r1, [r8, #40]	; 0x28
   150d8:	ldr	r2, [r8, #44]	; 0x2c
   150dc:	stm	sp, {r0, r9, sl}
   150e0:	str	r1, [sp, #12]
   150e4:	str	r2, [sp, #16]
   150e8:	mov	r0, r6
   150ec:	mov	r1, r4
   150f0:	ldr	r2, [sp, #20]
   150f4:	mov	r3, r7
   150f8:	bl	14074 <putchar_unlocked@plt+0x2ee0>
   150fc:	ldr	r0, [sp, #24]
   15100:	ldr	r1, [sp, #32]
   15104:	ldr	r2, [sp, #28]
   15108:	str	r1, [r2]
   1510c:	cmp	r0, #0
   15110:	strne	r5, [r0]
   15114:	mov	r0, r6
   15118:	sub	sp, fp, #28
   1511c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15120:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15124:	add	fp, sp, #24
   15128:	movw	r8, #33040	; 0x8110
   1512c:	movt	r8, #2
   15130:	ldr	r4, [r8]
   15134:	movw	r5, #33044	; 0x8114
   15138:	movt	r5, #2
   1513c:	ldr	r0, [r5]
   15140:	cmp	r0, #2
   15144:	blt	15170 <putchar_unlocked@plt+0x3fdc>
   15148:	add	r7, r4, #12
   1514c:	mov	r6, #0
   15150:	ldr	r0, [r7, r6, lsl #3]
   15154:	bl	13d68 <putchar_unlocked@plt+0x2bd4>
   15158:	add	r0, r6, #1
   1515c:	ldr	r1, [r5]
   15160:	add	r2, r6, #2
   15164:	cmp	r2, r1
   15168:	mov	r6, r0
   1516c:	blt	15150 <putchar_unlocked@plt+0x3fbc>
   15170:	ldr	r0, [r4, #4]
   15174:	movw	r9, #33216	; 0x81c0
   15178:	movt	r9, #2
   1517c:	cmp	r0, r9
   15180:	movw	r7, #33048	; 0x8118
   15184:	movt	r7, #2
   15188:	beq	15198 <putchar_unlocked@plt+0x4004>
   1518c:	bl	13d68 <putchar_unlocked@plt+0x2bd4>
   15190:	mov	r0, #256	; 0x100
   15194:	stm	r7, {r0, r9}
   15198:	cmp	r4, r7
   1519c:	beq	151ac <putchar_unlocked@plt+0x4018>
   151a0:	mov	r0, r4
   151a4:	bl	13d68 <putchar_unlocked@plt+0x2bd4>
   151a8:	str	r7, [r8]
   151ac:	mov	r0, #1
   151b0:	str	r0, [r5]
   151b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   151b8:	movw	r3, #33168	; 0x8190
   151bc:	movt	r3, #2
   151c0:	mvn	r2, #0
   151c4:	b	151c8 <putchar_unlocked@plt+0x4034>
   151c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151cc:	add	fp, sp, #28
   151d0:	sub	sp, sp, #44	; 0x2c
   151d4:	mov	r7, r3
   151d8:	str	r2, [sp, #36]	; 0x24
   151dc:	str	r1, [sp, #32]
   151e0:	mov	r5, r0
   151e4:	bl	11080 <__errno_location@plt>
   151e8:	cmp	r5, #0
   151ec:	bmi	1535c <putchar_unlocked@plt+0x41c8>
   151f0:	cmn	r5, #-2147483647	; 0x80000001
   151f4:	beq	1535c <putchar_unlocked@plt+0x41c8>
   151f8:	movw	r4, #33040	; 0x8110
   151fc:	movt	r4, #2
   15200:	ldr	r6, [r4]
   15204:	str	r0, [sp, #28]
   15208:	ldr	r0, [r0]
   1520c:	str	r0, [sp, #24]
   15210:	movw	r8, #33044	; 0x8114
   15214:	movt	r8, #2
   15218:	ldr	r1, [r8]
   1521c:	cmp	r1, r5
   15220:	ble	1522c <putchar_unlocked@plt+0x4098>
   15224:	mov	sl, r6
   15228:	b	15298 <putchar_unlocked@plt+0x4104>
   1522c:	str	r1, [fp, #-32]	; 0xffffffe0
   15230:	mov	r0, #8
   15234:	str	r0, [sp]
   15238:	movw	r9, #33048	; 0x8118
   1523c:	movt	r9, #2
   15240:	subs	r0, r6, r9
   15244:	movne	r0, r6
   15248:	sub	r1, r5, r1
   1524c:	add	r2, r1, #1
   15250:	sub	r1, fp, #32
   15254:	mvn	r3, #-2147483648	; 0x80000000
   15258:	bl	16030 <putchar_unlocked@plt+0x4e9c>
   1525c:	mov	sl, r0
   15260:	str	r0, [r4]
   15264:	cmp	r6, r9
   15268:	bne	15274 <putchar_unlocked@plt+0x40e0>
   1526c:	ldrd	r0, [r9]
   15270:	stm	sl, {r0, r1}
   15274:	ldr	r1, [r8]
   15278:	add	r0, sl, r1, lsl #3
   1527c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15280:	sub	r1, r2, r1
   15284:	lsl	r2, r1, #3
   15288:	mov	r1, #0
   1528c:	bl	110a4 <memset@plt>
   15290:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15294:	str	r0, [r8]
   15298:	mov	r9, sl
   1529c:	ldr	r6, [r9, r5, lsl #3]!
   152a0:	ldr	r4, [r9, #4]!
   152a4:	ldm	r7, {r0, r1}
   152a8:	ldr	r2, [r7, #40]	; 0x28
   152ac:	ldr	r3, [r7, #44]	; 0x2c
   152b0:	orr	r8, r1, #1
   152b4:	add	r1, r7, #8
   152b8:	stm	sp, {r0, r8}
   152bc:	str	r1, [sp, #20]
   152c0:	add	r0, sp, #8
   152c4:	stm	r0, {r1, r2, r3}
   152c8:	mov	r0, r4
   152cc:	mov	r1, r6
   152d0:	ldr	r2, [sp, #32]
   152d4:	ldr	r3, [sp, #36]	; 0x24
   152d8:	bl	14074 <putchar_unlocked@plt+0x2ee0>
   152dc:	cmp	r6, r0
   152e0:	bhi	15344 <putchar_unlocked@plt+0x41b0>
   152e4:	add	r6, r0, #1
   152e8:	str	r6, [sl, r5, lsl #3]
   152ec:	movw	r0, #33216	; 0x81c0
   152f0:	movt	r0, #2
   152f4:	cmp	r4, r0
   152f8:	beq	15304 <putchar_unlocked@plt+0x4170>
   152fc:	mov	r0, r4
   15300:	bl	13d68 <putchar_unlocked@plt+0x2bd4>
   15304:	mov	r0, r6
   15308:	bl	15f54 <putchar_unlocked@plt+0x4dc0>
   1530c:	mov	r4, r0
   15310:	str	r0, [r9]
   15314:	ldr	r0, [r7]
   15318:	ldr	r1, [r7, #40]	; 0x28
   1531c:	ldr	r2, [r7, #44]	; 0x2c
   15320:	stm	sp, {r0, r8}
   15324:	ldr	r0, [sp, #20]
   15328:	add	r3, sp, #8
   1532c:	stm	r3, {r0, r1, r2}
   15330:	mov	r0, r4
   15334:	mov	r1, r6
   15338:	ldr	r2, [sp, #32]
   1533c:	ldr	r3, [sp, #36]	; 0x24
   15340:	bl	14074 <putchar_unlocked@plt+0x2ee0>
   15344:	ldr	r0, [sp, #28]
   15348:	ldr	r1, [sp, #24]
   1534c:	str	r1, [r0]
   15350:	mov	r0, r4
   15354:	sub	sp, fp, #28
   15358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1535c:	bl	11164 <abort@plt>
   15360:	movw	r3, #33168	; 0x8190
   15364:	movt	r3, #2
   15368:	b	151c8 <putchar_unlocked@plt+0x4034>
   1536c:	mov	r1, r0
   15370:	mov	r0, #0
   15374:	b	151b8 <putchar_unlocked@plt+0x4024>
   15378:	mov	r2, r1
   1537c:	mov	r1, r0
   15380:	mov	r0, #0
   15384:	b	15360 <putchar_unlocked@plt+0x41cc>
   15388:	push	{r4, r5, r6, sl, fp, lr}
   1538c:	add	fp, sp, #16
   15390:	sub	sp, sp, #48	; 0x30
   15394:	mov	r4, r2
   15398:	mov	r5, r0
   1539c:	mov	r6, sp
   153a0:	mov	r0, r6
   153a4:	bl	153c4 <putchar_unlocked@plt+0x4230>
   153a8:	mov	r0, r5
   153ac:	mov	r1, r4
   153b0:	mvn	r2, #0
   153b4:	mov	r3, r6
   153b8:	bl	151c8 <putchar_unlocked@plt+0x4034>
   153bc:	sub	sp, fp, #16
   153c0:	pop	{r4, r5, r6, sl, fp, pc}
   153c4:	push	{fp, lr}
   153c8:	mov	fp, sp
   153cc:	vmov.i32	q8, #0	; 0x00000000
   153d0:	mov	r2, #32
   153d4:	mov	r3, r0
   153d8:	vst1.32	{d16-d17}, [r3], r2
   153dc:	vst1.32	{d16-d17}, [r3]
   153e0:	add	r2, r0, #16
   153e4:	vst1.32	{d16-d17}, [r2]
   153e8:	cmp	r1, #10
   153ec:	strne	r1, [r0]
   153f0:	popne	{fp, pc}
   153f4:	bl	11164 <abort@plt>
   153f8:	push	{r4, r5, r6, r7, fp, lr}
   153fc:	add	fp, sp, #16
   15400:	sub	sp, sp, #48	; 0x30
   15404:	mov	r4, r3
   15408:	mov	r5, r2
   1540c:	mov	r6, r0
   15410:	mov	r7, sp
   15414:	mov	r0, r7
   15418:	bl	153c4 <putchar_unlocked@plt+0x4230>
   1541c:	mov	r0, r6
   15420:	mov	r1, r5
   15424:	mov	r2, r4
   15428:	mov	r3, r7
   1542c:	bl	151c8 <putchar_unlocked@plt+0x4034>
   15430:	sub	sp, fp, #16
   15434:	pop	{r4, r5, r6, r7, fp, pc}
   15438:	mov	r2, r1
   1543c:	mov	r1, r0
   15440:	mov	r0, #0
   15444:	b	15388 <putchar_unlocked@plt+0x41f4>
   15448:	mov	r3, r2
   1544c:	mov	r2, r1
   15450:	mov	r1, r0
   15454:	mov	r0, #0
   15458:	b	153f8 <putchar_unlocked@plt+0x4264>
   1545c:	push	{r4, r5, r6, sl, fp, lr}
   15460:	add	fp, sp, #16
   15464:	sub	sp, sp, #48	; 0x30
   15468:	mov	r4, r1
   1546c:	mov	r5, r0
   15470:	movw	r0, #33168	; 0x8190
   15474:	movt	r0, #2
   15478:	add	r1, r0, #16
   1547c:	mov	r3, #32
   15480:	vld1.64	{d16-d17}, [r0], r3
   15484:	vld1.64	{d18-d19}, [r1]
   15488:	mov	r6, sp
   1548c:	add	r1, r6, #16
   15490:	vld1.64	{d20-d21}, [r0]
   15494:	vst1.64	{d18-d19}, [r1]
   15498:	mov	r0, r6
   1549c:	vst1.64	{d16-d17}, [r0], r3
   154a0:	vst1.64	{d20-d21}, [r0]
   154a4:	mov	r0, r6
   154a8:	mov	r1, r2
   154ac:	mov	r2, #1
   154b0:	bl	13f68 <putchar_unlocked@plt+0x2dd4>
   154b4:	mov	r0, #0
   154b8:	mov	r1, r5
   154bc:	mov	r2, r4
   154c0:	mov	r3, r6
   154c4:	bl	151c8 <putchar_unlocked@plt+0x4034>
   154c8:	sub	sp, fp, #16
   154cc:	pop	{r4, r5, r6, sl, fp, pc}
   154d0:	mov	r2, r1
   154d4:	mvn	r1, #0
   154d8:	b	1545c <putchar_unlocked@plt+0x42c8>
   154dc:	mov	r1, #58	; 0x3a
   154e0:	b	154d0 <putchar_unlocked@plt+0x433c>
   154e4:	mov	r2, #58	; 0x3a
   154e8:	b	1545c <putchar_unlocked@plt+0x42c8>
   154ec:	push	{r4, r5, r6, sl, fp, lr}
   154f0:	add	fp, sp, #16
   154f4:	sub	sp, sp, #48	; 0x30
   154f8:	mov	r4, r2
   154fc:	mov	r5, r0
   15500:	mov	r6, sp
   15504:	mov	r0, r6
   15508:	bl	153c4 <putchar_unlocked@plt+0x4230>
   1550c:	mov	r0, r6
   15510:	mov	r1, #58	; 0x3a
   15514:	mov	r2, #1
   15518:	bl	13f68 <putchar_unlocked@plt+0x2dd4>
   1551c:	mov	r0, r5
   15520:	mov	r1, r4
   15524:	mvn	r2, #0
   15528:	mov	r3, r6
   1552c:	bl	151c8 <putchar_unlocked@plt+0x4034>
   15530:	sub	sp, fp, #16
   15534:	pop	{r4, r5, r6, sl, fp, pc}
   15538:	push	{fp, lr}
   1553c:	mov	fp, sp
   15540:	sub	sp, sp, #8
   15544:	mvn	ip, #0
   15548:	str	ip, [sp]
   1554c:	bl	15558 <putchar_unlocked@plt+0x43c4>
   15550:	mov	sp, fp
   15554:	pop	{fp, pc}
   15558:	push	{r4, r5, r6, r7, fp, lr}
   1555c:	add	fp, sp, #16
   15560:	sub	sp, sp, #48	; 0x30
   15564:	mov	r7, r3
   15568:	mov	r5, r0
   1556c:	movw	r0, #33168	; 0x8190
   15570:	movt	r0, #2
   15574:	add	r3, r0, #16
   15578:	mov	r4, #32
   1557c:	vld1.64	{d16-d17}, [r0], r4
   15580:	vld1.64	{d18-d19}, [r3]
   15584:	mov	r6, sp
   15588:	add	r3, r6, #16
   1558c:	vld1.64	{d20-d21}, [r0]
   15590:	vst1.64	{d18-d19}, [r3]
   15594:	mov	r0, r6
   15598:	vst1.64	{d16-d17}, [r0], r4
   1559c:	vst1.64	{d20-d21}, [r0]
   155a0:	mov	r0, r6
   155a4:	bl	13fc0 <putchar_unlocked@plt+0x2e2c>
   155a8:	ldr	r2, [fp, #8]
   155ac:	mov	r0, r5
   155b0:	mov	r1, r7
   155b4:	mov	r3, r6
   155b8:	bl	151c8 <putchar_unlocked@plt+0x4034>
   155bc:	sub	sp, fp, #16
   155c0:	pop	{r4, r5, r6, r7, fp, pc}
   155c4:	mov	r3, r2
   155c8:	mov	r2, r1
   155cc:	mov	r1, r0
   155d0:	mov	r0, #0
   155d4:	b	15538 <putchar_unlocked@plt+0x43a4>
   155d8:	push	{fp, lr}
   155dc:	mov	fp, sp
   155e0:	sub	sp, sp, #8
   155e4:	mov	ip, r2
   155e8:	mov	r2, r1
   155ec:	mov	r1, r0
   155f0:	str	r3, [sp]
   155f4:	mov	r0, #0
   155f8:	mov	r3, ip
   155fc:	bl	15558 <putchar_unlocked@plt+0x43c4>
   15600:	mov	sp, fp
   15604:	pop	{fp, pc}
   15608:	movw	r3, #33056	; 0x8120
   1560c:	movt	r3, #2
   15610:	b	151c8 <putchar_unlocked@plt+0x4034>
   15614:	mov	r2, r1
   15618:	mov	r1, r0
   1561c:	mov	r0, #0
   15620:	b	15608 <putchar_unlocked@plt+0x4474>
   15624:	mvn	r2, #0
   15628:	b	15608 <putchar_unlocked@plt+0x4474>
   1562c:	mov	r1, r0
   15630:	mov	r0, #0
   15634:	b	15624 <putchar_unlocked@plt+0x4490>
   15638:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1563c:	add	fp, sp, #24
   15640:	sub	sp, sp, #16
   15644:	mov	r4, r1
   15648:	mov	r5, r0
   1564c:	mov	r7, #0
   15650:	mov	r0, #0
   15654:	mov	r1, r5
   15658:	mov	r2, #5
   1565c:	bl	10f78 <dcgettext@plt>
   15660:	cmp	r0, r5
   15664:	beq	15670 <putchar_unlocked@plt+0x44dc>
   15668:	sub	sp, fp, #24
   1566c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15670:	bl	16998 <putchar_unlocked@plt+0x5804>
   15674:	mov	r6, r0
   15678:	mov	r8, #56	; 0x38
   1567c:	mov	r0, #45	; 0x2d
   15680:	stm	sp, {r0, r8}
   15684:	str	r7, [sp, #8]
   15688:	str	r7, [sp, #12]
   1568c:	mov	r0, r6
   15690:	mov	r1, #85	; 0x55
   15694:	mov	r2, #84	; 0x54
   15698:	mov	r3, #70	; 0x46
   1569c:	bl	15734 <putchar_unlocked@plt+0x45a0>
   156a0:	cmp	r0, #0
   156a4:	beq	156c0 <putchar_unlocked@plt+0x452c>
   156a8:	ldrb	r1, [r5]
   156ac:	movw	r2, #31544	; 0x7b38
   156b0:	movt	r2, #1
   156b4:	movw	r0, #31548	; 0x7b3c
   156b8:	movt	r0, #1
   156bc:	b	15704 <putchar_unlocked@plt+0x4570>
   156c0:	mov	r0, #48	; 0x30
   156c4:	mov	r1, #51	; 0x33
   156c8:	str	r8, [sp]
   156cc:	stmib	sp, {r0, r1}
   156d0:	str	r0, [sp, #12]
   156d4:	mov	r0, r6
   156d8:	mov	r1, #71	; 0x47
   156dc:	mov	r2, #66	; 0x42
   156e0:	mov	r3, #49	; 0x31
   156e4:	bl	15734 <putchar_unlocked@plt+0x45a0>
   156e8:	cmp	r0, #0
   156ec:	beq	15714 <putchar_unlocked@plt+0x4580>
   156f0:	ldrb	r1, [r5]
   156f4:	movw	r2, #31552	; 0x7b40
   156f8:	movt	r2, #1
   156fc:	movw	r0, #31556	; 0x7b44
   15700:	movt	r0, #1
   15704:	cmp	r1, #96	; 0x60
   15708:	moveq	r0, r2
   1570c:	sub	sp, fp, #24
   15710:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15714:	movw	r1, #31538	; 0x7b32
   15718:	movt	r1, #1
   1571c:	movw	r0, #31542	; 0x7b36
   15720:	movt	r0, #1
   15724:	cmp	r4, #9
   15728:	moveq	r0, r1
   1572c:	sub	sp, fp, #24
   15730:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15734:	push	{r4, r5, r6, r7, fp, lr}
   15738:	add	fp, sp, #16
   1573c:	sub	sp, sp, #16
   15740:	mov	r4, r3
   15744:	mov	r5, r2
   15748:	mov	r7, r1
   1574c:	mov	r6, r0
   15750:	mov	r0, r1
   15754:	bl	16670 <putchar_unlocked@plt+0x54dc>
   15758:	ldrb	r1, [r6]
   1575c:	cmp	r0, #0
   15760:	andne	r1, r1, #223	; 0xdf
   15764:	mov	r0, #0
   15768:	cmp	r1, r7
   1576c:	bne	157a4 <putchar_unlocked@plt+0x4610>
   15770:	cmp	r7, #0
   15774:	beq	157ac <putchar_unlocked@plt+0x4618>
   15778:	ldr	r0, [fp, #20]
   1577c:	ldr	r1, [fp, #16]
   15780:	ldr	r2, [fp, #12]
   15784:	ldr	r3, [fp, #8]
   15788:	str	r2, [sp]
   1578c:	str	r1, [sp, #4]
   15790:	str	r0, [sp, #8]
   15794:	mov	r0, r6
   15798:	mov	r1, r5
   1579c:	mov	r2, r4
   157a0:	bl	157b8 <putchar_unlocked@plt+0x4624>
   157a4:	sub	sp, fp, #16
   157a8:	pop	{r4, r5, r6, r7, fp, pc}
   157ac:	mov	r0, #1
   157b0:	sub	sp, fp, #16
   157b4:	pop	{r4, r5, r6, r7, fp, pc}
   157b8:	push	{r4, r5, r6, r7, fp, lr}
   157bc:	add	fp, sp, #16
   157c0:	sub	sp, sp, #8
   157c4:	mov	r4, r3
   157c8:	mov	r5, r2
   157cc:	mov	r7, r1
   157d0:	mov	r6, r0
   157d4:	mov	r0, r1
   157d8:	bl	16670 <putchar_unlocked@plt+0x54dc>
   157dc:	ldrb	r1, [r6, #1]
   157e0:	cmp	r0, #0
   157e4:	andne	r1, r1, #223	; 0xdf
   157e8:	mov	r0, #0
   157ec:	cmp	r1, r7
   157f0:	bne	15820 <putchar_unlocked@plt+0x468c>
   157f4:	cmp	r7, #0
   157f8:	beq	15828 <putchar_unlocked@plt+0x4694>
   157fc:	ldr	r0, [fp, #16]
   15800:	ldr	r1, [fp, #12]
   15804:	ldr	r3, [fp, #8]
   15808:	str	r1, [sp]
   1580c:	str	r0, [sp, #4]
   15810:	mov	r0, r6
   15814:	mov	r1, r5
   15818:	mov	r2, r4
   1581c:	bl	15834 <putchar_unlocked@plt+0x46a0>
   15820:	sub	sp, fp, #16
   15824:	pop	{r4, r5, r6, r7, fp, pc}
   15828:	mov	r0, #1
   1582c:	sub	sp, fp, #16
   15830:	pop	{r4, r5, r6, r7, fp, pc}
   15834:	push	{r4, r5, r6, r7, fp, lr}
   15838:	add	fp, sp, #16
   1583c:	sub	sp, sp, #8
   15840:	mov	r4, r3
   15844:	mov	r5, r2
   15848:	mov	r7, r1
   1584c:	mov	r6, r0
   15850:	mov	r0, r1
   15854:	bl	16670 <putchar_unlocked@plt+0x54dc>
   15858:	ldrb	r1, [r6, #2]
   1585c:	cmp	r0, #0
   15860:	andne	r1, r1, #223	; 0xdf
   15864:	mov	r0, #0
   15868:	cmp	r1, r7
   1586c:	bne	15894 <putchar_unlocked@plt+0x4700>
   15870:	cmp	r7, #0
   15874:	beq	1589c <putchar_unlocked@plt+0x4708>
   15878:	ldr	r0, [fp, #12]
   1587c:	ldr	r3, [fp, #8]
   15880:	str	r0, [sp]
   15884:	mov	r0, r6
   15888:	mov	r1, r5
   1588c:	mov	r2, r4
   15890:	bl	158a8 <putchar_unlocked@plt+0x4714>
   15894:	sub	sp, fp, #16
   15898:	pop	{r4, r5, r6, r7, fp, pc}
   1589c:	mov	r0, #1
   158a0:	sub	sp, fp, #16
   158a4:	pop	{r4, r5, r6, r7, fp, pc}
   158a8:	push	{r4, r5, r6, r7, fp, lr}
   158ac:	add	fp, sp, #16
   158b0:	mov	r4, r3
   158b4:	mov	r5, r2
   158b8:	mov	r7, r1
   158bc:	mov	r6, r0
   158c0:	mov	r0, r1
   158c4:	bl	16670 <putchar_unlocked@plt+0x54dc>
   158c8:	ldrb	r1, [r6, #3]
   158cc:	ldr	r3, [fp, #8]
   158d0:	cmp	r0, #0
   158d4:	andne	r1, r1, #223	; 0xdf
   158d8:	mov	r0, #0
   158dc:	cmp	r1, r7
   158e0:	bne	15904 <putchar_unlocked@plt+0x4770>
   158e4:	cmp	r7, #0
   158e8:	beq	15900 <putchar_unlocked@plt+0x476c>
   158ec:	mov	r0, r6
   158f0:	mov	r1, r5
   158f4:	mov	r2, r4
   158f8:	pop	{r4, r5, r6, r7, fp, lr}
   158fc:	b	15908 <putchar_unlocked@plt+0x4774>
   15900:	mov	r0, #1
   15904:	pop	{r4, r5, r6, r7, fp, pc}
   15908:	push	{r4, r5, r6, r7, fp, lr}
   1590c:	add	fp, sp, #16
   15910:	mov	r4, r3
   15914:	mov	r5, r2
   15918:	mov	r7, r1
   1591c:	mov	r6, r0
   15920:	mov	r0, r1
   15924:	bl	16670 <putchar_unlocked@plt+0x54dc>
   15928:	ldrb	r1, [r6, #4]
   1592c:	cmp	r0, #0
   15930:	andne	r1, r1, #223	; 0xdf
   15934:	mov	r0, #0
   15938:	cmp	r1, r7
   1593c:	bne	15960 <putchar_unlocked@plt+0x47cc>
   15940:	cmp	r7, #0
   15944:	beq	1595c <putchar_unlocked@plt+0x47c8>
   15948:	mov	r0, r6
   1594c:	mov	r1, r5
   15950:	mov	r2, r4
   15954:	pop	{r4, r5, r6, r7, fp, lr}
   15958:	b	15964 <putchar_unlocked@plt+0x47d0>
   1595c:	mov	r0, #1
   15960:	pop	{r4, r5, r6, r7, fp, pc}
   15964:	push	{r4, r5, r6, sl, fp, lr}
   15968:	add	fp, sp, #16
   1596c:	mov	r4, r2
   15970:	mov	r6, r1
   15974:	mov	r5, r0
   15978:	mov	r0, r1
   1597c:	bl	16670 <putchar_unlocked@plt+0x54dc>
   15980:	ldrb	r1, [r5, #5]
   15984:	cmp	r0, #0
   15988:	andne	r1, r1, #223	; 0xdf
   1598c:	mov	r0, #0
   15990:	cmp	r1, r6
   15994:	bne	159b4 <putchar_unlocked@plt+0x4820>
   15998:	cmp	r6, #0
   1599c:	beq	159b0 <putchar_unlocked@plt+0x481c>
   159a0:	mov	r0, r5
   159a4:	mov	r1, r4
   159a8:	pop	{r4, r5, r6, sl, fp, lr}
   159ac:	b	159b8 <putchar_unlocked@plt+0x4824>
   159b0:	mov	r0, #1
   159b4:	pop	{r4, r5, r6, sl, fp, pc}
   159b8:	push	{r4, r5, fp, lr}
   159bc:	add	fp, sp, #8
   159c0:	mov	r5, r1
   159c4:	mov	r4, r0
   159c8:	mov	r0, r1
   159cc:	bl	16670 <putchar_unlocked@plt+0x54dc>
   159d0:	ldrb	r1, [r4, #6]
   159d4:	cmp	r0, #0
   159d8:	andne	r1, r1, #223	; 0xdf
   159dc:	mov	r0, #0
   159e0:	cmp	r1, r5
   159e4:	popne	{r4, r5, fp, pc}
   159e8:	cmp	r5, #0
   159ec:	beq	159fc <putchar_unlocked@plt+0x4868>
   159f0:	mov	r0, r4
   159f4:	pop	{r4, r5, fp, lr}
   159f8:	b	15a04 <putchar_unlocked@plt+0x4870>
   159fc:	mov	r0, #1
   15a00:	pop	{r4, r5, fp, pc}
   15a04:	push	{r4, sl, fp, lr}
   15a08:	add	fp, sp, #8
   15a0c:	mov	r4, r0
   15a10:	mov	r0, #0
   15a14:	bl	16670 <putchar_unlocked@plt+0x54dc>
   15a18:	ldrb	r1, [r4, #7]
   15a1c:	cmp	r0, #0
   15a20:	beq	15a34 <putchar_unlocked@plt+0x48a0>
   15a24:	tst	r1, #223	; 0xdf
   15a28:	bne	15a3c <putchar_unlocked@plt+0x48a8>
   15a2c:	mov	r0, #1
   15a30:	pop	{r4, sl, fp, pc}
   15a34:	cmp	r1, #0
   15a38:	beq	15a2c <putchar_unlocked@plt+0x4898>
   15a3c:	mov	r0, #0
   15a40:	pop	{r4, sl, fp, pc}
   15a44:	mov	r1, #0
   15a48:	mov	r2, #3
   15a4c:	b	16764 <putchar_unlocked@plt+0x55d0>
   15a50:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15a54:	add	fp, sp, #24
   15a58:	sub	sp, sp, #32
   15a5c:	mov	r4, r2
   15a60:	mov	r8, r0
   15a64:	ldr	r6, [fp, #12]
   15a68:	ldr	r7, [fp, #8]
   15a6c:	cmp	r1, #0
   15a70:	beq	15a98 <putchar_unlocked@plt+0x4904>
   15a74:	mov	r5, r1
   15a78:	str	r4, [sp]
   15a7c:	str	r3, [sp, #4]
   15a80:	movw	r2, #31644	; 0x7b9c
   15a84:	movt	r2, #1
   15a88:	mov	r0, r8
   15a8c:	mov	r1, #1
   15a90:	mov	r3, r5
   15a94:	b	15ab0 <putchar_unlocked@plt+0x491c>
   15a98:	str	r3, [sp]
   15a9c:	movw	r2, #31656	; 0x7ba8
   15aa0:	movt	r2, #1
   15aa4:	mov	r0, r8
   15aa8:	mov	r1, #1
   15aac:	mov	r3, r4
   15ab0:	bl	110c8 <__fprintf_chk@plt>
   15ab4:	movw	r1, #31663	; 0x7baf
   15ab8:	movt	r1, #1
   15abc:	mov	r0, #0
   15ac0:	mov	r2, #5
   15ac4:	bl	10f78 <dcgettext@plt>
   15ac8:	mov	r3, r0
   15acc:	movw	r0, #2022	; 0x7e6
   15ad0:	str	r0, [sp]
   15ad4:	movw	r2, #32381	; 0x7e7d
   15ad8:	movt	r2, #1
   15adc:	mov	r0, r8
   15ae0:	mov	r1, #1
   15ae4:	bl	110c8 <__fprintf_chk@plt>
   15ae8:	movw	r4, #28927	; 0x70ff
   15aec:	movt	r4, #1
   15af0:	mov	r0, r4
   15af4:	mov	r1, r8
   15af8:	bl	10f0c <fputs_unlocked@plt>
   15afc:	movw	r1, #31667	; 0x7bb3
   15b00:	movt	r1, #1
   15b04:	mov	r0, #0
   15b08:	mov	r2, #5
   15b0c:	bl	10f78 <dcgettext@plt>
   15b10:	mov	r2, r0
   15b14:	movw	r3, #31838	; 0x7c5e
   15b18:	movt	r3, #1
   15b1c:	mov	r0, r8
   15b20:	mov	r1, #1
   15b24:	bl	110c8 <__fprintf_chk@plt>
   15b28:	mov	r0, r4
   15b2c:	mov	r1, r8
   15b30:	bl	10f0c <fputs_unlocked@plt>
   15b34:	cmp	r6, #9
   15b38:	bhi	15b74 <putchar_unlocked@plt+0x49e0>
   15b3c:	add	r0, pc, #0
   15b40:	ldr	pc, [r0, r6, lsl #2]
   15b44:	andeq	r5, r1, ip, ror #22
   15b48:	andeq	r5, r1, r0, lsl #23
   15b4c:			; <UNDEFINED> instruction: 0x00015bb0
   15b50:	ldrdeq	r5, [r1], -r8
   15b54:	andeq	r5, r1, r0, lsl #24
   15b58:	andeq	r5, r1, r8, lsr #24
   15b5c:	andeq	r5, r1, r0, asr ip
   15b60:	andeq	r5, r1, r8, lsl #25
   15b64:	andeq	r5, r1, r8, lsr #26
   15b68:	ldrdeq	r5, [r1], -r0
   15b6c:	sub	sp, fp, #24
   15b70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15b74:	movw	r1, #32191	; 0x7dbf
   15b78:	movt	r1, #1
   15b7c:	b	15cd8 <putchar_unlocked@plt+0x4b44>
   15b80:	movw	r1, #31872	; 0x7c80
   15b84:	movt	r1, #1
   15b88:	mov	r0, #0
   15b8c:	mov	r2, #5
   15b90:	bl	10f78 <dcgettext@plt>
   15b94:	mov	r2, r0
   15b98:	ldr	r3, [r7]
   15b9c:	mov	r0, r8
   15ba0:	mov	r1, #1
   15ba4:	sub	sp, fp, #24
   15ba8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15bac:	b	110c8 <__fprintf_chk@plt>
   15bb0:	movw	r1, #31888	; 0x7c90
   15bb4:	movt	r1, #1
   15bb8:	mov	r0, #0
   15bbc:	mov	r2, #5
   15bc0:	bl	10f78 <dcgettext@plt>
   15bc4:	mov	r2, r0
   15bc8:	ldr	r3, [r7]
   15bcc:	ldr	r0, [r7, #4]
   15bd0:	str	r0, [sp]
   15bd4:	b	15cc4 <putchar_unlocked@plt+0x4b30>
   15bd8:	movw	r1, #31911	; 0x7ca7
   15bdc:	movt	r1, #1
   15be0:	mov	r0, #0
   15be4:	mov	r2, #5
   15be8:	bl	10f78 <dcgettext@plt>
   15bec:	mov	r2, r0
   15bf0:	ldr	r3, [r7]
   15bf4:	ldmib	r7, {r0, r1}
   15bf8:	stm	sp, {r0, r1}
   15bfc:	b	15cc4 <putchar_unlocked@plt+0x4b30>
   15c00:	movw	r1, #31939	; 0x7cc3
   15c04:	movt	r1, #1
   15c08:	mov	r0, #0
   15c0c:	mov	r2, #5
   15c10:	bl	10f78 <dcgettext@plt>
   15c14:	mov	r2, r0
   15c18:	ldr	r3, [r7]
   15c1c:	ldmib	r7, {r0, r1, r7}
   15c20:	stm	sp, {r0, r1, r7}
   15c24:	b	15cc4 <putchar_unlocked@plt+0x4b30>
   15c28:	movw	r1, #31971	; 0x7ce3
   15c2c:	movt	r1, #1
   15c30:	mov	r0, #0
   15c34:	mov	r2, #5
   15c38:	bl	10f78 <dcgettext@plt>
   15c3c:	mov	r2, r0
   15c40:	ldr	r3, [r7]
   15c44:	ldmib	r7, {r0, r1, r6, r7}
   15c48:	stm	sp, {r0, r1, r6, r7}
   15c4c:	b	15cc4 <putchar_unlocked@plt+0x4b30>
   15c50:	movw	r1, #32007	; 0x7d07
   15c54:	movt	r1, #1
   15c58:	mov	r0, #0
   15c5c:	mov	r2, #5
   15c60:	bl	10f78 <dcgettext@plt>
   15c64:	mov	r2, r0
   15c68:	ldr	r3, [r7]
   15c6c:	ldmib	r7, {r0, r1, r6}
   15c70:	ldr	r5, [r7, #16]
   15c74:	ldr	r7, [r7, #20]
   15c78:	stm	sp, {r0, r1, r6}
   15c7c:	str	r5, [sp, #12]
   15c80:	str	r7, [sp, #16]
   15c84:	b	15cc4 <putchar_unlocked@plt+0x4b30>
   15c88:	movw	r1, #32047	; 0x7d2f
   15c8c:	movt	r1, #1
   15c90:	mov	r0, #0
   15c94:	mov	r2, #5
   15c98:	bl	10f78 <dcgettext@plt>
   15c9c:	mov	r2, r0
   15ca0:	ldr	r3, [r7]
   15ca4:	ldmib	r7, {r0, r1, r6}
   15ca8:	ldr	r5, [r7, #16]
   15cac:	ldr	r4, [r7, #20]
   15cb0:	ldr	r7, [r7, #24]
   15cb4:	stm	sp, {r0, r1, r6}
   15cb8:	str	r5, [sp, #12]
   15cbc:	str	r4, [sp, #16]
   15cc0:	str	r7, [sp, #20]
   15cc4:	mov	r0, r8
   15cc8:	mov	r1, #1
   15ccc:	b	15d78 <putchar_unlocked@plt+0x4be4>
   15cd0:	movw	r1, #32139	; 0x7d8b
   15cd4:	movt	r1, #1
   15cd8:	mov	r0, #0
   15cdc:	mov	r2, #5
   15ce0:	bl	10f78 <dcgettext@plt>
   15ce4:	mov	ip, r0
   15ce8:	ldr	r3, [r7]
   15cec:	ldr	r0, [r7, #4]
   15cf0:	ldr	r1, [r7, #8]
   15cf4:	ldr	r6, [r7, #12]
   15cf8:	ldr	r5, [r7, #16]
   15cfc:	ldr	r4, [r7, #20]
   15d00:	ldr	r2, [r7, #24]
   15d04:	ldr	lr, [r7, #28]
   15d08:	ldr	r7, [r7, #32]
   15d0c:	stm	sp, {r0, r1, r6}
   15d10:	str	r5, [sp, #12]
   15d14:	str	r4, [sp, #16]
   15d18:	str	r2, [sp, #20]
   15d1c:	str	lr, [sp, #24]
   15d20:	str	r7, [sp, #28]
   15d24:	b	15d6c <putchar_unlocked@plt+0x4bd8>
   15d28:	movw	r1, #32091	; 0x7d5b
   15d2c:	movt	r1, #1
   15d30:	mov	r0, #0
   15d34:	mov	r2, #5
   15d38:	bl	10f78 <dcgettext@plt>
   15d3c:	mov	ip, r0
   15d40:	ldr	r3, [r7]
   15d44:	ldmib	r7, {r0, r1, r6}
   15d48:	ldr	r5, [r7, #16]
   15d4c:	ldr	r4, [r7, #20]
   15d50:	ldr	r2, [r7, #24]
   15d54:	ldr	r7, [r7, #28]
   15d58:	stm	sp, {r0, r1, r6}
   15d5c:	str	r5, [sp, #12]
   15d60:	str	r4, [sp, #16]
   15d64:	str	r2, [sp, #20]
   15d68:	str	r7, [sp, #24]
   15d6c:	mov	r0, r8
   15d70:	mov	r1, #1
   15d74:	mov	r2, ip
   15d78:	bl	110c8 <__fprintf_chk@plt>
   15d7c:	sub	sp, fp, #24
   15d80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15d84:	push	{r4, sl, fp, lr}
   15d88:	add	fp, sp, #8
   15d8c:	sub	sp, sp, #8
   15d90:	mov	lr, #0
   15d94:	ldr	ip, [fp, #8]
   15d98:	ldr	r4, [ip, lr, lsl #2]
   15d9c:	add	lr, lr, #1
   15da0:	cmp	r4, #0
   15da4:	bne	15d98 <putchar_unlocked@plt+0x4c04>
   15da8:	sub	r4, lr, #1
   15dac:	str	ip, [sp]
   15db0:	str	r4, [sp, #4]
   15db4:	bl	15a50 <putchar_unlocked@plt+0x48bc>
   15db8:	sub	sp, fp, #8
   15dbc:	pop	{r4, sl, fp, pc}
   15dc0:	push	{r4, r5, fp, lr}
   15dc4:	add	fp, sp, #8
   15dc8:	sub	sp, sp, #48	; 0x30
   15dcc:	mov	ip, #0
   15dd0:	ldr	r4, [fp, #8]
   15dd4:	add	lr, sp, #8
   15dd8:	ldr	r5, [r4]
   15ddc:	str	r5, [lr, ip, lsl #2]
   15de0:	cmp	r5, #0
   15de4:	beq	15dfc <putchar_unlocked@plt+0x4c68>
   15de8:	add	ip, ip, #1
   15dec:	add	r4, r4, #4
   15df0:	cmp	ip, #10
   15df4:	bne	15dd8 <putchar_unlocked@plt+0x4c44>
   15df8:	mov	ip, #10
   15dfc:	str	lr, [sp]
   15e00:	str	ip, [sp, #4]
   15e04:	bl	15a50 <putchar_unlocked@plt+0x48bc>
   15e08:	sub	sp, fp, #8
   15e0c:	pop	{r4, r5, fp, pc}
   15e10:	push	{fp, lr}
   15e14:	mov	fp, sp
   15e18:	sub	sp, sp, #8
   15e1c:	add	ip, fp, #8
   15e20:	str	ip, [sp, #4]
   15e24:	str	ip, [sp]
   15e28:	bl	15dc0 <putchar_unlocked@plt+0x4c2c>
   15e2c:	mov	sp, fp
   15e30:	pop	{fp, pc}
   15e34:	push	{fp, lr}
   15e38:	mov	fp, sp
   15e3c:	movw	r0, #33132	; 0x816c
   15e40:	movt	r0, #2
   15e44:	ldr	r1, [r0]
   15e48:	movw	r0, #28927	; 0x70ff
   15e4c:	movt	r0, #1
   15e50:	bl	10f0c <fputs_unlocked@plt>
   15e54:	movw	r1, #32251	; 0x7dfb
   15e58:	movt	r1, #1
   15e5c:	mov	r0, #0
   15e60:	mov	r2, #5
   15e64:	bl	10f78 <dcgettext@plt>
   15e68:	mov	r1, r0
   15e6c:	movw	r2, #32271	; 0x7e0f
   15e70:	movt	r2, #1
   15e74:	mov	r0, #1
   15e78:	bl	110b0 <__printf_chk@plt>
   15e7c:	movw	r1, #32293	; 0x7e25
   15e80:	movt	r1, #1
   15e84:	mov	r0, #0
   15e88:	mov	r2, #5
   15e8c:	bl	10f78 <dcgettext@plt>
   15e90:	mov	r1, r0
   15e94:	movw	r2, #29451	; 0x730b
   15e98:	movt	r2, #1
   15e9c:	movw	r3, #30245	; 0x7625
   15ea0:	movt	r3, #1
   15ea4:	mov	r0, #1
   15ea8:	bl	110b0 <__printf_chk@plt>
   15eac:	movw	r1, #32313	; 0x7e39
   15eb0:	movt	r1, #1
   15eb4:	mov	r0, #0
   15eb8:	mov	r2, #5
   15ebc:	bl	10f78 <dcgettext@plt>
   15ec0:	mov	r1, r0
   15ec4:	movw	r2, #32352	; 0x7e60
   15ec8:	movt	r2, #1
   15ecc:	mov	r0, #1
   15ed0:	pop	{fp, lr}
   15ed4:	b	110b0 <__printf_chk@plt>
   15ed8:	b	15edc <putchar_unlocked@plt+0x4d48>
   15edc:	push	{r4, r5, r6, sl, fp, lr}
   15ee0:	add	fp, sp, #16
   15ee4:	mov	r4, r2
   15ee8:	mov	r5, r1
   15eec:	mov	r6, r0
   15ef0:	bl	16a34 <putchar_unlocked@plt+0x58a0>
   15ef4:	cmp	r0, #0
   15ef8:	popne	{r4, r5, r6, sl, fp, pc}
   15efc:	cmp	r6, #0
   15f00:	beq	15f14 <putchar_unlocked@plt+0x4d80>
   15f04:	cmp	r5, #0
   15f08:	cmpne	r4, #0
   15f0c:	bne	15f14 <putchar_unlocked@plt+0x4d80>
   15f10:	pop	{r4, r5, r6, sl, fp, pc}
   15f14:	bl	162a0 <putchar_unlocked@plt+0x510c>
   15f18:	push	{fp, lr}
   15f1c:	mov	fp, sp
   15f20:	bl	16338 <putchar_unlocked@plt+0x51a4>
   15f24:	pop	{fp, lr}
   15f28:	b	15f2c <putchar_unlocked@plt+0x4d98>
   15f2c:	cmp	r0, #0
   15f30:	bxne	lr
   15f34:	push	{fp, lr}
   15f38:	mov	fp, sp
   15f3c:	bl	162a0 <putchar_unlocked@plt+0x510c>
   15f40:	push	{fp, lr}
   15f44:	mov	fp, sp
   15f48:	bl	16964 <putchar_unlocked@plt+0x57d0>
   15f4c:	pop	{fp, lr}
   15f50:	b	15f2c <putchar_unlocked@plt+0x4d98>
   15f54:	b	15f18 <putchar_unlocked@plt+0x4d84>
   15f58:	push	{r4, r5, fp, lr}
   15f5c:	add	fp, sp, #8
   15f60:	mov	r4, r1
   15f64:	mov	r5, r0
   15f68:	bl	16368 <putchar_unlocked@plt+0x51d4>
   15f6c:	cmp	r0, #0
   15f70:	popne	{r4, r5, fp, pc}
   15f74:	cmp	r5, #0
   15f78:	beq	15f88 <putchar_unlocked@plt+0x4df4>
   15f7c:	cmp	r4, #0
   15f80:	bne	15f88 <putchar_unlocked@plt+0x4df4>
   15f84:	pop	{r4, r5, fp, pc}
   15f88:	bl	162a0 <putchar_unlocked@plt+0x510c>
   15f8c:	push	{fp, lr}
   15f90:	mov	fp, sp
   15f94:	bl	16968 <putchar_unlocked@plt+0x57d4>
   15f98:	pop	{fp, lr}
   15f9c:	b	15f2c <putchar_unlocked@plt+0x4d98>
   15fa0:	push	{fp, lr}
   15fa4:	mov	fp, sp
   15fa8:	bl	16978 <putchar_unlocked@plt+0x57e4>
   15fac:	pop	{fp, lr}
   15fb0:	b	15f2c <putchar_unlocked@plt+0x4d98>
   15fb4:	mov	r2, r1
   15fb8:	mov	r1, r0
   15fbc:	mov	r0, #0
   15fc0:	b	15edc <putchar_unlocked@plt+0x4d48>
   15fc4:	mov	r2, r1
   15fc8:	mov	r1, r0
   15fcc:	mov	r0, #0
   15fd0:	b	15fa0 <putchar_unlocked@plt+0x4e0c>
   15fd4:	mov	r2, #1
   15fd8:	b	15fdc <putchar_unlocked@plt+0x4e48>
   15fdc:	push	{r4, r5, fp, lr}
   15fe0:	add	fp, sp, #8
   15fe4:	mov	r4, r1
   15fe8:	ldr	r5, [r1]
   15fec:	cmp	r0, #0
   15ff0:	beq	16008 <putchar_unlocked@plt+0x4e74>
   15ff4:	mov	r1, #1
   15ff8:	add	r1, r1, r5, lsr #1
   15ffc:	adds	r5, r5, r1
   16000:	bcc	16020 <putchar_unlocked@plt+0x4e8c>
   16004:	bl	162a0 <putchar_unlocked@plt+0x510c>
   16008:	cmp	r5, #0
   1600c:	bne	16020 <putchar_unlocked@plt+0x4e8c>
   16010:	mov	r1, #64	; 0x40
   16014:	udiv	r5, r1, r2
   16018:	cmp	r2, #64	; 0x40
   1601c:	addhi	r5, r5, #1
   16020:	mov	r1, r5
   16024:	bl	15edc <putchar_unlocked@plt+0x4d48>
   16028:	str	r5, [r4]
   1602c:	pop	{r4, r5, fp, pc}
   16030:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16034:	add	fp, sp, #24
   16038:	mov	r8, r1
   1603c:	ldr	r6, [r1]
   16040:	add	r1, r6, r6, asr #1
   16044:	cmp	r1, r6
   16048:	mvnvs	r1, #-2147483648	; 0x80000000
   1604c:	cmp	r1, r3
   16050:	mov	r5, r1
   16054:	movgt	r5, r3
   16058:	cmn	r3, #1
   1605c:	movle	r5, r1
   16060:	ldr	r4, [fp, #8]
   16064:	cmn	r4, #1
   16068:	ble	16090 <putchar_unlocked@plt+0x4efc>
   1606c:	cmp	r4, #0
   16070:	beq	160e4 <putchar_unlocked@plt+0x4f50>
   16074:	cmn	r5, #1
   16078:	ble	160b8 <putchar_unlocked@plt+0x4f24>
   1607c:	mvn	r7, #-2147483648	; 0x80000000
   16080:	udiv	r1, r7, r4
   16084:	cmp	r1, r5
   16088:	bge	160e4 <putchar_unlocked@plt+0x4f50>
   1608c:	b	160f4 <putchar_unlocked@plt+0x4f60>
   16090:	cmn	r5, #1
   16094:	ble	160d4 <putchar_unlocked@plt+0x4f40>
   16098:	cmn	r4, #1
   1609c:	beq	160e4 <putchar_unlocked@plt+0x4f50>
   160a0:	mov	r1, #-2147483648	; 0x80000000
   160a4:	sdiv	r1, r1, r4
   160a8:	mvn	r7, #-2147483648	; 0x80000000
   160ac:	cmp	r1, r5
   160b0:	bge	160e4 <putchar_unlocked@plt+0x4f50>
   160b4:	b	160f4 <putchar_unlocked@plt+0x4f60>
   160b8:	beq	160e4 <putchar_unlocked@plt+0x4f50>
   160bc:	mov	r1, #-2147483648	; 0x80000000
   160c0:	sdiv	r1, r1, r5
   160c4:	mvn	r7, #-2147483648	; 0x80000000
   160c8:	cmp	r1, r4
   160cc:	bge	160e4 <putchar_unlocked@plt+0x4f50>
   160d0:	b	160f4 <putchar_unlocked@plt+0x4f60>
   160d4:	mvn	r7, #-2147483648	; 0x80000000
   160d8:	sdiv	r1, r7, r4
   160dc:	cmp	r5, r1
   160e0:	blt	160f4 <putchar_unlocked@plt+0x4f60>
   160e4:	mul	r1, r5, r4
   160e8:	mov	r7, #64	; 0x40
   160ec:	cmp	r1, #63	; 0x3f
   160f0:	bgt	160fc <putchar_unlocked@plt+0x4f68>
   160f4:	sdiv	r5, r7, r4
   160f8:	mul	r1, r5, r4
   160fc:	cmp	r0, #0
   16100:	moveq	r7, #0
   16104:	streq	r7, [r8]
   16108:	sub	r7, r5, r6
   1610c:	cmp	r7, r2
   16110:	bge	161bc <putchar_unlocked@plt+0x5028>
   16114:	add	r5, r6, r2
   16118:	mov	r1, #0
   1611c:	cmp	r5, r3
   16120:	mov	r2, #0
   16124:	movwgt	r2, #1
   16128:	cmn	r3, #1
   1612c:	movwgt	r1, #1
   16130:	cmp	r5, r6
   16134:	bvs	161a4 <putchar_unlocked@plt+0x5010>
   16138:	ands	r1, r1, r2
   1613c:	bne	161a4 <putchar_unlocked@plt+0x5010>
   16140:	cmn	r4, #1
   16144:	ble	1616c <putchar_unlocked@plt+0x4fd8>
   16148:	cmp	r4, #0
   1614c:	beq	161b8 <putchar_unlocked@plt+0x5024>
   16150:	cmn	r5, #1
   16154:	ble	16190 <putchar_unlocked@plt+0x4ffc>
   16158:	mvn	r1, #-2147483648	; 0x80000000
   1615c:	udiv	r1, r1, r4
   16160:	cmp	r1, r5
   16164:	bge	161b8 <putchar_unlocked@plt+0x5024>
   16168:	b	161a4 <putchar_unlocked@plt+0x5010>
   1616c:	cmn	r5, #1
   16170:	ble	161a8 <putchar_unlocked@plt+0x5014>
   16174:	cmn	r4, #1
   16178:	beq	161b8 <putchar_unlocked@plt+0x5024>
   1617c:	mov	r1, #-2147483648	; 0x80000000
   16180:	sdiv	r1, r1, r4
   16184:	cmp	r1, r5
   16188:	bge	161b8 <putchar_unlocked@plt+0x5024>
   1618c:	b	161a4 <putchar_unlocked@plt+0x5010>
   16190:	beq	161b8 <putchar_unlocked@plt+0x5024>
   16194:	mov	r1, #-2147483648	; 0x80000000
   16198:	sdiv	r1, r1, r5
   1619c:	cmp	r1, r4
   161a0:	bge	161b8 <putchar_unlocked@plt+0x5024>
   161a4:	bl	162a0 <putchar_unlocked@plt+0x510c>
   161a8:	mvn	r1, #-2147483648	; 0x80000000
   161ac:	sdiv	r1, r1, r4
   161b0:	cmp	r5, r1
   161b4:	blt	161a4 <putchar_unlocked@plt+0x5010>
   161b8:	mul	r1, r5, r4
   161bc:	bl	15f58 <putchar_unlocked@plt+0x4dc4>
   161c0:	str	r5, [r8]
   161c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   161c8:	mov	r1, #1
   161cc:	b	161d0 <putchar_unlocked@plt+0x503c>
   161d0:	push	{fp, lr}
   161d4:	mov	fp, sp
   161d8:	bl	162e4 <putchar_unlocked@plt+0x5150>
   161dc:	pop	{fp, lr}
   161e0:	b	15f2c <putchar_unlocked@plt+0x4d98>
   161e4:	mov	r1, #1
   161e8:	b	161ec <putchar_unlocked@plt+0x5058>
   161ec:	push	{fp, lr}
   161f0:	mov	fp, sp
   161f4:	bl	16974 <putchar_unlocked@plt+0x57e0>
   161f8:	pop	{fp, lr}
   161fc:	b	15f2c <putchar_unlocked@plt+0x4d98>
   16200:	push	{r4, r5, fp, lr}
   16204:	add	fp, sp, #8
   16208:	mov	r4, r1
   1620c:	mov	r5, r0
   16210:	mov	r0, r1
   16214:	bl	15f18 <putchar_unlocked@plt+0x4d84>
   16218:	mov	r1, r5
   1621c:	mov	r2, r4
   16220:	pop	{r4, r5, fp, lr}
   16224:	b	10f60 <memcpy@plt>
   16228:	push	{r4, r5, fp, lr}
   1622c:	add	fp, sp, #8
   16230:	mov	r4, r1
   16234:	mov	r5, r0
   16238:	mov	r0, r1
   1623c:	bl	15f40 <putchar_unlocked@plt+0x4dac>
   16240:	mov	r1, r5
   16244:	mov	r2, r4
   16248:	pop	{r4, r5, fp, lr}
   1624c:	b	10f60 <memcpy@plt>
   16250:	push	{r4, r5, fp, lr}
   16254:	add	fp, sp, #8
   16258:	mov	r4, r1
   1625c:	mov	r5, r0
   16260:	add	r0, r1, #1
   16264:	bl	15f40 <putchar_unlocked@plt+0x4dac>
   16268:	mov	r1, #0
   1626c:	strb	r1, [r0, r4]
   16270:	mov	r1, r5
   16274:	mov	r2, r4
   16278:	pop	{r4, r5, fp, lr}
   1627c:	b	10f60 <memcpy@plt>
   16280:	push	{r4, sl, fp, lr}
   16284:	add	fp, sp, #8
   16288:	mov	r4, r0
   1628c:	bl	11068 <strlen@plt>
   16290:	add	r1, r0, #1
   16294:	mov	r0, r4
   16298:	pop	{r4, sl, fp, lr}
   1629c:	b	16200 <putchar_unlocked@plt+0x506c>
   162a0:	push	{fp, lr}
   162a4:	mov	fp, sp
   162a8:	movw	r0, #33032	; 0x8108
   162ac:	movt	r0, #2
   162b0:	ldr	r4, [r0]
   162b4:	movw	r1, #32428	; 0x7eac
   162b8:	movt	r1, #1
   162bc:	mov	r0, #0
   162c0:	mov	r2, #5
   162c4:	bl	10f78 <dcgettext@plt>
   162c8:	mov	r3, r0
   162cc:	movw	r2, #31319	; 0x7a57
   162d0:	movt	r2, #1
   162d4:	mov	r0, r4
   162d8:	mov	r1, #0
   162dc:	bl	10ff0 <error@plt>
   162e0:	bl	11164 <abort@plt>
   162e4:	clz	r2, r1
   162e8:	lsr	r2, r2, #5
   162ec:	clz	r3, r0
   162f0:	lsr	r3, r3, #5
   162f4:	orrs	r2, r3, r2
   162f8:	movwne	r1, #1
   162fc:	movwne	r0, #1
   16300:	cmp	r1, #0
   16304:	beq	16334 <putchar_unlocked@plt+0x51a0>
   16308:	mvn	r2, #-2147483648	; 0x80000000
   1630c:	udiv	r2, r2, r1
   16310:	cmp	r2, r0
   16314:	bcs	16334 <putchar_unlocked@plt+0x51a0>
   16318:	push	{fp, lr}
   1631c:	mov	fp, sp
   16320:	bl	11080 <__errno_location@plt>
   16324:	mov	r1, #12
   16328:	str	r1, [r0]
   1632c:	mov	r0, #0
   16330:	pop	{fp, pc}
   16334:	b	10f00 <calloc@plt>
   16338:	cmp	r0, #0
   1633c:	movweq	r0, #1
   16340:	cmn	r0, #1
   16344:	ble	1634c <putchar_unlocked@plt+0x51b8>
   16348:	b	10ffc <malloc@plt>
   1634c:	push	{fp, lr}
   16350:	mov	fp, sp
   16354:	bl	11080 <__errno_location@plt>
   16358:	mov	r1, #12
   1635c:	str	r1, [r0]
   16360:	mov	r0, #0
   16364:	pop	{fp, pc}
   16368:	push	{fp, lr}
   1636c:	mov	fp, sp
   16370:	cmp	r0, #0
   16374:	beq	16390 <putchar_unlocked@plt+0x51fc>
   16378:	cmp	r1, #0
   1637c:	beq	1639c <putchar_unlocked@plt+0x5208>
   16380:	cmn	r1, #1
   16384:	ble	163a8 <putchar_unlocked@plt+0x5214>
   16388:	pop	{fp, lr}
   1638c:	b	10f84 <realloc@plt>
   16390:	mov	r0, r1
   16394:	pop	{fp, lr}
   16398:	b	16338 <putchar_unlocked@plt+0x51a4>
   1639c:	bl	13d68 <putchar_unlocked@plt+0x2bd4>
   163a0:	mov	r0, #0
   163a4:	pop	{fp, pc}
   163a8:	bl	11080 <__errno_location@plt>
   163ac:	mov	r1, #12
   163b0:	str	r1, [r0]
   163b4:	mov	r0, #0
   163b8:	pop	{fp, pc}
   163bc:	mov	r1, r0
   163c0:	sub	r2, r0, #65	; 0x41
   163c4:	mov	r0, #1
   163c8:	cmp	r2, #26
   163cc:	subcs	r2, r1, #97	; 0x61
   163d0:	cmpcs	r2, #26
   163d4:	bcs	163dc <putchar_unlocked@plt+0x5248>
   163d8:	bx	lr
   163dc:	sub	r1, r1, #48	; 0x30
   163e0:	cmp	r1, #10
   163e4:	movcs	r0, #0
   163e8:	bx	lr
   163ec:	mov	r1, r0
   163f0:	sub	r2, r0, #65	; 0x41
   163f4:	mov	r0, #1
   163f8:	cmp	r2, #26
   163fc:	subcs	r1, r1, #97	; 0x61
   16400:	cmpcs	r1, #26
   16404:	movcs	r0, #0
   16408:	bx	lr
   1640c:	mov	r1, #0
   16410:	cmp	r0, #128	; 0x80
   16414:	movwcc	r1, #1
   16418:	mov	r0, r1
   1641c:	bx	lr
   16420:	sub	r1, r0, #9
   16424:	clz	r1, r1
   16428:	lsr	r1, r1, #5
   1642c:	sub	r0, r0, #32
   16430:	clz	r0, r0
   16434:	lsr	r0, r0, #5
   16438:	orr	r0, r0, r1
   1643c:	bx	lr
   16440:	mov	r1, r0
   16444:	mov	r0, #1
   16448:	cmp	r1, #32
   1644c:	bxcc	lr
   16450:	cmp	r1, #127	; 0x7f
   16454:	movne	r0, #0
   16458:	bx	lr
   1645c:	sub	r1, r0, #48	; 0x30
   16460:	mov	r0, #0
   16464:	cmp	r1, #10
   16468:	movwcc	r0, #1
   1646c:	bx	lr
   16470:	sub	r1, r0, #33	; 0x21
   16474:	mov	r0, #0
   16478:	cmp	r1, #94	; 0x5e
   1647c:	movwcc	r0, #1
   16480:	bx	lr
   16484:	sub	r1, r0, #97	; 0x61
   16488:	mov	r0, #0
   1648c:	cmp	r1, #26
   16490:	movwcc	r0, #1
   16494:	bx	lr
   16498:	sub	r1, r0, #32
   1649c:	mov	r0, #0
   164a0:	cmp	r1, #95	; 0x5f
   164a4:	movwcc	r0, #1
   164a8:	bx	lr
   164ac:	sub	r1, r0, #33	; 0x21
   164b0:	cmp	r1, #93	; 0x5d
   164b4:	bhi	16640 <putchar_unlocked@plt+0x54ac>
   164b8:	mov	r0, #1
   164bc:	add	r2, pc, #0
   164c0:	ldr	pc, [r2, r1, lsl #2]
   164c4:	andeq	r6, r1, ip, lsr r6
   164c8:	andeq	r6, r1, ip, lsr r6
   164cc:	andeq	r6, r1, ip, lsr r6
   164d0:	andeq	r6, r1, ip, lsr r6
   164d4:	andeq	r6, r1, ip, lsr r6
   164d8:	andeq	r6, r1, ip, lsr r6
   164dc:	andeq	r6, r1, ip, lsr r6
   164e0:	andeq	r6, r1, ip, lsr r6
   164e4:	andeq	r6, r1, ip, lsr r6
   164e8:	andeq	r6, r1, ip, lsr r6
   164ec:	andeq	r6, r1, ip, lsr r6
   164f0:	andeq	r6, r1, ip, lsr r6
   164f4:	andeq	r6, r1, ip, lsr r6
   164f8:	andeq	r6, r1, ip, lsr r6
   164fc:	andeq	r6, r1, ip, lsr r6
   16500:	andeq	r6, r1, r0, asr #12
   16504:	andeq	r6, r1, r0, asr #12
   16508:	andeq	r6, r1, r0, asr #12
   1650c:	andeq	r6, r1, r0, asr #12
   16510:	andeq	r6, r1, r0, asr #12
   16514:	andeq	r6, r1, r0, asr #12
   16518:	andeq	r6, r1, r0, asr #12
   1651c:	andeq	r6, r1, r0, asr #12
   16520:	andeq	r6, r1, r0, asr #12
   16524:	andeq	r6, r1, r0, asr #12
   16528:	andeq	r6, r1, ip, lsr r6
   1652c:	andeq	r6, r1, ip, lsr r6
   16530:	andeq	r6, r1, ip, lsr r6
   16534:	andeq	r6, r1, ip, lsr r6
   16538:	andeq	r6, r1, ip, lsr r6
   1653c:	andeq	r6, r1, ip, lsr r6
   16540:	andeq	r6, r1, ip, lsr r6
   16544:	andeq	r6, r1, r0, asr #12
   16548:	andeq	r6, r1, r0, asr #12
   1654c:	andeq	r6, r1, r0, asr #12
   16550:	andeq	r6, r1, r0, asr #12
   16554:	andeq	r6, r1, r0, asr #12
   16558:	andeq	r6, r1, r0, asr #12
   1655c:	andeq	r6, r1, r0, asr #12
   16560:	andeq	r6, r1, r0, asr #12
   16564:	andeq	r6, r1, r0, asr #12
   16568:	andeq	r6, r1, r0, asr #12
   1656c:	andeq	r6, r1, r0, asr #12
   16570:	andeq	r6, r1, r0, asr #12
   16574:	andeq	r6, r1, r0, asr #12
   16578:	andeq	r6, r1, r0, asr #12
   1657c:	andeq	r6, r1, r0, asr #12
   16580:	andeq	r6, r1, r0, asr #12
   16584:	andeq	r6, r1, r0, asr #12
   16588:	andeq	r6, r1, r0, asr #12
   1658c:	andeq	r6, r1, r0, asr #12
   16590:	andeq	r6, r1, r0, asr #12
   16594:	andeq	r6, r1, r0, asr #12
   16598:	andeq	r6, r1, r0, asr #12
   1659c:	andeq	r6, r1, r0, asr #12
   165a0:	andeq	r6, r1, r0, asr #12
   165a4:	andeq	r6, r1, r0, asr #12
   165a8:	andeq	r6, r1, r0, asr #12
   165ac:	andeq	r6, r1, ip, lsr r6
   165b0:	andeq	r6, r1, ip, lsr r6
   165b4:	andeq	r6, r1, ip, lsr r6
   165b8:	andeq	r6, r1, ip, lsr r6
   165bc:	andeq	r6, r1, ip, lsr r6
   165c0:	andeq	r6, r1, ip, lsr r6
   165c4:	andeq	r6, r1, r0, asr #12
   165c8:	andeq	r6, r1, r0, asr #12
   165cc:	andeq	r6, r1, r0, asr #12
   165d0:	andeq	r6, r1, r0, asr #12
   165d4:	andeq	r6, r1, r0, asr #12
   165d8:	andeq	r6, r1, r0, asr #12
   165dc:	andeq	r6, r1, r0, asr #12
   165e0:	andeq	r6, r1, r0, asr #12
   165e4:	andeq	r6, r1, r0, asr #12
   165e8:	andeq	r6, r1, r0, asr #12
   165ec:	andeq	r6, r1, r0, asr #12
   165f0:	andeq	r6, r1, r0, asr #12
   165f4:	andeq	r6, r1, r0, asr #12
   165f8:	andeq	r6, r1, r0, asr #12
   165fc:	andeq	r6, r1, r0, asr #12
   16600:	andeq	r6, r1, r0, asr #12
   16604:	andeq	r6, r1, r0, asr #12
   16608:	andeq	r6, r1, r0, asr #12
   1660c:	andeq	r6, r1, r0, asr #12
   16610:	andeq	r6, r1, r0, asr #12
   16614:	andeq	r6, r1, r0, asr #12
   16618:	andeq	r6, r1, r0, asr #12
   1661c:	andeq	r6, r1, r0, asr #12
   16620:	andeq	r6, r1, r0, asr #12
   16624:	andeq	r6, r1, r0, asr #12
   16628:	andeq	r6, r1, r0, asr #12
   1662c:	andeq	r6, r1, ip, lsr r6
   16630:	andeq	r6, r1, ip, lsr r6
   16634:	andeq	r6, r1, ip, lsr r6
   16638:	andeq	r6, r1, ip, lsr r6
   1663c:	bx	lr
   16640:	mov	r0, #0
   16644:	bx	lr
   16648:	sub	r0, r0, #9
   1664c:	cmp	r0, #23
   16650:	movhi	r0, #0
   16654:	bxhi	lr
   16658:	bic	r0, r0, #-16777216	; 0xff000000
   1665c:	movw	r1, #31
   16660:	movt	r1, #128	; 0x80
   16664:	mov	r2, #1
   16668:	and	r0, r2, r1, lsr r0
   1666c:	bx	lr
   16670:	sub	r1, r0, #65	; 0x41
   16674:	mov	r0, #0
   16678:	cmp	r1, #26
   1667c:	movwcc	r0, #1
   16680:	bx	lr
   16684:	mov	r1, r0
   16688:	sub	r2, r0, #48	; 0x30
   1668c:	mov	r0, #1
   16690:	cmp	r2, #22
   16694:	bhi	166ac <putchar_unlocked@plt+0x5518>
   16698:	mov	ip, #1
   1669c:	movw	r3, #1023	; 0x3ff
   166a0:	movt	r3, #126	; 0x7e
   166a4:	tst	r3, ip, lsl r2
   166a8:	bxne	lr
   166ac:	sub	r1, r1, #97	; 0x61
   166b0:	cmp	r1, #6
   166b4:	movcs	r0, #0
   166b8:	bxcs	lr
   166bc:	bx	lr
   166c0:	sub	r1, r0, #65	; 0x41
   166c4:	cmp	r1, #26
   166c8:	addcc	r0, r0, #32
   166cc:	bx	lr
   166d0:	sub	r1, r0, #97	; 0x61
   166d4:	cmp	r1, #26
   166d8:	subcc	r0, r0, #32
   166dc:	bx	lr
   166e0:	push	{r4, r5, r6, sl, fp, lr}
   166e4:	add	fp, sp, #16
   166e8:	mov	r4, r0
   166ec:	bl	10fcc <__fpending@plt>
   166f0:	mov	r5, r0
   166f4:	mov	r0, r4
   166f8:	bl	10fd8 <ferror_unlocked@plt>
   166fc:	mov	r6, r0
   16700:	mov	r0, r4
   16704:	bl	13bb0 <putchar_unlocked@plt+0x2a1c>
   16708:	cmp	r6, #0
   1670c:	beq	16730 <putchar_unlocked@plt+0x559c>
   16710:	mvn	r4, #0
   16714:	cmp	r0, #0
   16718:	bne	1675c <putchar_unlocked@plt+0x55c8>
   1671c:	bl	11080 <__errno_location@plt>
   16720:	mov	r1, #0
   16724:	str	r1, [r0]
   16728:	mov	r0, r4
   1672c:	pop	{r4, r5, r6, sl, fp, pc}
   16730:	cmp	r0, #0
   16734:	mov	r4, r0
   16738:	mvnne	r4, #0
   1673c:	cmp	r5, #0
   16740:	bne	1675c <putchar_unlocked@plt+0x55c8>
   16744:	cmp	r0, #0
   16748:	beq	1675c <putchar_unlocked@plt+0x55c8>
   1674c:	bl	11080 <__errno_location@plt>
   16750:	ldr	r0, [r0]
   16754:	subs	r4, r0, #9
   16758:	mvnne	r4, #0
   1675c:	mov	r0, r4
   16760:	pop	{r4, r5, r6, sl, fp, pc}
   16764:	sub	sp, sp, #8
   16768:	push	{fp, lr}
   1676c:	mov	fp, sp
   16770:	sub	sp, sp, #8
   16774:	str	r2, [fp, #8]
   16778:	str	r3, [fp, #12]
   1677c:	add	r2, fp, #8
   16780:	str	r2, [sp, #4]
   16784:	cmp	r1, #11
   16788:	bhi	167c8 <putchar_unlocked@plt+0x5634>
   1678c:	mov	r2, #1
   16790:	movw	r3, #1300	; 0x514
   16794:	tst	r3, r2, lsl r1
   16798:	bne	16818 <putchar_unlocked@plt+0x5684>
   1679c:	movw	r3, #2570	; 0xa0a
   167a0:	tst	r3, r2, lsl r1
   167a4:	bne	167f0 <putchar_unlocked@plt+0x565c>
   167a8:	cmp	r1, #0
   167ac:	bne	167c8 <putchar_unlocked@plt+0x5634>
   167b0:	ldr	r1, [sp, #4]
   167b4:	add	r2, r1, #4
   167b8:	str	r2, [sp, #4]
   167bc:	ldr	r1, [r1]
   167c0:	bl	1683c <putchar_unlocked@plt+0x56a8>
   167c4:	b	1682c <putchar_unlocked@plt+0x5698>
   167c8:	sub	r2, r1, #1024	; 0x400
   167cc:	cmp	r2, #10
   167d0:	bhi	16818 <putchar_unlocked@plt+0x5684>
   167d4:	mov	ip, #1
   167d8:	movw	r3, #645	; 0x285
   167dc:	tst	r3, ip, lsl r2
   167e0:	bne	16818 <putchar_unlocked@plt+0x5684>
   167e4:	movw	r3, #1282	; 0x502
   167e8:	tst	r3, ip, lsl r2
   167ec:	beq	167f8 <putchar_unlocked@plt+0x5664>
   167f0:	bl	110ec <fcntl64@plt>
   167f4:	b	1682c <putchar_unlocked@plt+0x5698>
   167f8:	cmp	r2, #6
   167fc:	bne	16818 <putchar_unlocked@plt+0x5684>
   16800:	ldr	r1, [sp, #4]
   16804:	add	r2, r1, #4
   16808:	str	r2, [sp, #4]
   1680c:	ldr	r1, [r1]
   16810:	bl	16848 <putchar_unlocked@plt+0x56b4>
   16814:	b	1682c <putchar_unlocked@plt+0x5698>
   16818:	ldr	r2, [sp, #4]
   1681c:	add	r3, r2, #4
   16820:	str	r3, [sp, #4]
   16824:	ldr	r2, [r2]
   16828:	bl	110ec <fcntl64@plt>
   1682c:	mov	sp, fp
   16830:	pop	{fp, lr}
   16834:	add	sp, sp, #8
   16838:	bx	lr
   1683c:	mov	r2, r1
   16840:	mov	r1, #0
   16844:	b	110ec <fcntl64@plt>
   16848:	push	{r4, r5, r6, r7, fp, lr}
   1684c:	add	fp, sp, #16
   16850:	mov	r5, r1
   16854:	mov	r6, r0
   16858:	movw	r7, #33472	; 0x82c0
   1685c:	movt	r7, #2
   16860:	ldr	r0, [r7]
   16864:	cmp	r0, #0
   16868:	bmi	168cc <putchar_unlocked@plt+0x5738>
   1686c:	mov	r0, r6
   16870:	movw	r1, #1030	; 0x406
   16874:	mov	r2, r5
   16878:	bl	110ec <fcntl64@plt>
   1687c:	mov	r4, r0
   16880:	cmn	r0, #1
   16884:	bgt	168b8 <putchar_unlocked@plt+0x5724>
   16888:	bl	11080 <__errno_location@plt>
   1688c:	ldr	r0, [r0]
   16890:	cmp	r0, #22
   16894:	bne	168b8 <putchar_unlocked@plt+0x5724>
   16898:	mov	r0, r6
   1689c:	mov	r1, r5
   168a0:	bl	1683c <putchar_unlocked@plt+0x56a8>
   168a4:	mov	r4, r0
   168a8:	cmp	r0, #0
   168ac:	bmi	1691c <putchar_unlocked@plt+0x5788>
   168b0:	mvn	r0, #0
   168b4:	b	168bc <putchar_unlocked@plt+0x5728>
   168b8:	mov	r0, #1
   168bc:	str	r0, [r7]
   168c0:	cmp	r4, #0
   168c4:	bpl	168e4 <putchar_unlocked@plt+0x5750>
   168c8:	b	1691c <putchar_unlocked@plt+0x5788>
   168cc:	mov	r0, r6
   168d0:	mov	r1, r5
   168d4:	bl	1683c <putchar_unlocked@plt+0x56a8>
   168d8:	mov	r4, r0
   168dc:	cmp	r4, #0
   168e0:	bmi	1691c <putchar_unlocked@plt+0x5788>
   168e4:	ldr	r0, [r7]
   168e8:	cmn	r0, #1
   168ec:	bne	1691c <putchar_unlocked@plt+0x5788>
   168f0:	mov	r0, r4
   168f4:	mov	r1, #1
   168f8:	bl	110ec <fcntl64@plt>
   168fc:	cmp	r0, #0
   16900:	bmi	16924 <putchar_unlocked@plt+0x5790>
   16904:	orr	r2, r0, #1
   16908:	mov	r0, r4
   1690c:	mov	r1, #2
   16910:	bl	110ec <fcntl64@plt>
   16914:	cmn	r0, #1
   16918:	beq	16924 <putchar_unlocked@plt+0x5790>
   1691c:	mov	r0, r4
   16920:	pop	{r4, r5, r6, r7, fp, pc}
   16924:	bl	11080 <__errno_location@plt>
   16928:	mov	r5, r0
   1692c:	ldr	r6, [r0]
   16930:	mov	r0, r4
   16934:	bl	1117c <close@plt>
   16938:	str	r6, [r5]
   1693c:	mvn	r4, #0
   16940:	mov	r0, r4
   16944:	pop	{r4, r5, r6, r7, fp, pc}
   16948:	push	{fp, lr}
   1694c:	mov	fp, sp
   16950:	bl	11080 <__errno_location@plt>
   16954:	mov	r1, #12
   16958:	str	r1, [r0]
   1695c:	mov	r0, #0
   16960:	pop	{fp, pc}
   16964:	b	16338 <putchar_unlocked@plt+0x51a4>
   16968:	cmp	r1, #0
   1696c:	orreq	r1, r1, #1
   16970:	b	16368 <putchar_unlocked@plt+0x51d4>
   16974:	b	162e4 <putchar_unlocked@plt+0x5150>
   16978:	clz	r3, r2
   1697c:	lsr	ip, r3, #5
   16980:	clz	r3, r1
   16984:	lsr	r3, r3, #5
   16988:	orrs	r3, r3, ip
   1698c:	movwne	r1, #1
   16990:	movwne	r2, #1
   16994:	b	16a34 <putchar_unlocked@plt+0x58a0>
   16998:	push	{fp, lr}
   1699c:	mov	fp, sp
   169a0:	mov	r0, #14
   169a4:	bl	11110 <nl_langinfo@plt>
   169a8:	movw	r1, #28928	; 0x7100
   169ac:	movt	r1, #1
   169b0:	cmp	r0, #0
   169b4:	movne	r1, r0
   169b8:	ldrb	r2, [r1]
   169bc:	movw	r0, #32445	; 0x7ebd
   169c0:	movt	r0, #1
   169c4:	cmp	r2, #0
   169c8:	movne	r0, r1
   169cc:	pop	{fp, pc}
   169d0:	push	{r4, r5, r6, r7, fp, lr}
   169d4:	add	fp, sp, #16
   169d8:	sub	sp, sp, #8
   169dc:	mov	r7, r2
   169e0:	mov	r4, r1
   169e4:	add	r5, sp, #4
   169e8:	cmp	r0, #0
   169ec:	movne	r5, r0
   169f0:	mov	r0, r5
   169f4:	bl	10fe4 <mbrtowc@plt>
   169f8:	mov	r6, r0
   169fc:	cmp	r7, #0
   16a00:	beq	16a28 <putchar_unlocked@plt+0x5894>
   16a04:	cmn	r6, #2
   16a08:	bcc	16a28 <putchar_unlocked@plt+0x5894>
   16a0c:	mov	r0, #0
   16a10:	bl	16a70 <putchar_unlocked@plt+0x58dc>
   16a14:	cmp	r0, #0
   16a18:	bne	16a28 <putchar_unlocked@plt+0x5894>
   16a1c:	ldrb	r0, [r4]
   16a20:	str	r0, [r5]
   16a24:	mov	r6, #1
   16a28:	mov	r0, r6
   16a2c:	sub	sp, fp, #16
   16a30:	pop	{r4, r5, r6, r7, fp, pc}
   16a34:	cmp	r2, #0
   16a38:	beq	16a68 <putchar_unlocked@plt+0x58d4>
   16a3c:	mvn	r3, #0
   16a40:	udiv	r3, r3, r2
   16a44:	cmp	r3, r1
   16a48:	bcs	16a68 <putchar_unlocked@plt+0x58d4>
   16a4c:	push	{fp, lr}
   16a50:	mov	fp, sp
   16a54:	bl	11080 <__errno_location@plt>
   16a58:	mov	r1, #12
   16a5c:	str	r1, [r0]
   16a60:	mov	r0, #0
   16a64:	pop	{fp, pc}
   16a68:	mul	r1, r2, r1
   16a6c:	b	16368 <putchar_unlocked@plt+0x51d4>
   16a70:	push	{r4, sl, fp, lr}
   16a74:	add	fp, sp, #8
   16a78:	sub	sp, sp, #264	; 0x108
   16a7c:	add	r1, sp, #7
   16a80:	movw	r2, #257	; 0x101
   16a84:	bl	16adc <putchar_unlocked@plt+0x5948>
   16a88:	mov	r4, #0
   16a8c:	cmp	r0, #0
   16a90:	bne	16ad0 <putchar_unlocked@plt+0x593c>
   16a94:	add	r0, sp, #7
   16a98:	movw	r1, #32451	; 0x7ec3
   16a9c:	movt	r1, #1
   16aa0:	mov	r2, #2
   16aa4:	bl	1105c <bcmp@plt>
   16aa8:	cmp	r0, #0
   16aac:	beq	16ad0 <putchar_unlocked@plt+0x593c>
   16ab0:	add	r0, sp, #7
   16ab4:	movw	r1, #32453	; 0x7ec5
   16ab8:	movt	r1, #1
   16abc:	mov	r2, #6
   16ac0:	bl	1105c <bcmp@plt>
   16ac4:	mov	r4, r0
   16ac8:	cmp	r0, #0
   16acc:	movwne	r4, #1
   16ad0:	mov	r0, r4
   16ad4:	sub	sp, fp, #8
   16ad8:	pop	{r4, sl, fp, pc}
   16adc:	b	16ae0 <putchar_unlocked@plt+0x594c>
   16ae0:	push	{r4, r5, r6, r7, fp, lr}
   16ae4:	add	fp, sp, #16
   16ae8:	mov	r6, r2
   16aec:	mov	r4, r1
   16af0:	bl	16b78 <putchar_unlocked@plt+0x59e4>
   16af4:	cmp	r0, #0
   16af8:	beq	16b28 <putchar_unlocked@plt+0x5994>
   16afc:	mov	r7, r0
   16b00:	bl	11068 <strlen@plt>
   16b04:	cmp	r0, r6
   16b08:	bcs	16b44 <putchar_unlocked@plt+0x59b0>
   16b0c:	add	r2, r0, #1
   16b10:	mov	r0, r4
   16b14:	mov	r1, r7
   16b18:	bl	10f60 <memcpy@plt>
   16b1c:	mov	r5, #0
   16b20:	mov	r0, r5
   16b24:	pop	{r4, r5, r6, r7, fp, pc}
   16b28:	mov	r5, #22
   16b2c:	cmp	r6, #0
   16b30:	beq	16b6c <putchar_unlocked@plt+0x59d8>
   16b34:	mov	r0, #0
   16b38:	strb	r0, [r4]
   16b3c:	mov	r0, r5
   16b40:	pop	{r4, r5, r6, r7, fp, pc}
   16b44:	mov	r5, #34	; 0x22
   16b48:	cmp	r6, #0
   16b4c:	beq	16b6c <putchar_unlocked@plt+0x59d8>
   16b50:	sub	r6, r6, #1
   16b54:	mov	r0, r4
   16b58:	mov	r1, r7
   16b5c:	mov	r2, r6
   16b60:	bl	10f60 <memcpy@plt>
   16b64:	mov	r0, #0
   16b68:	strb	r0, [r4, r6]
   16b6c:	mov	r0, r5
   16b70:	pop	{r4, r5, r6, r7, fp, pc}
   16b74:	b	16b78 <putchar_unlocked@plt+0x59e4>
   16b78:	mov	r1, #0
   16b7c:	b	110f8 <setlocale@plt>
   16b80:	cmp	r3, #0
   16b84:	cmpeq	r2, #0
   16b88:	bne	16ba0 <putchar_unlocked@plt+0x5a0c>
   16b8c:	cmp	r1, #0
   16b90:	cmpeq	r0, #0
   16b94:	mvnne	r1, #0
   16b98:	mvnne	r0, #0
   16b9c:	b	16bbc <putchar_unlocked@plt+0x5a28>
   16ba0:	sub	sp, sp, #8
   16ba4:	push	{sp, lr}
   16ba8:	bl	16bcc <putchar_unlocked@plt+0x5a38>
   16bac:	ldr	lr, [sp, #4]
   16bb0:	add	sp, sp, #8
   16bb4:	pop	{r2, r3}
   16bb8:	bx	lr
   16bbc:	push	{r1, lr}
   16bc0:	mov	r0, #8
   16bc4:	bl	10f18 <raise@plt>
   16bc8:	pop	{r1, pc}
   16bcc:	cmp	r1, r3
   16bd0:	cmpeq	r0, r2
   16bd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16bd8:	mov	r4, r0
   16bdc:	movcc	r0, #0
   16be0:	mov	r5, r1
   16be4:	ldr	lr, [sp, #36]	; 0x24
   16be8:	movcc	r1, r0
   16bec:	bcc	16ce8 <putchar_unlocked@plt+0x5b54>
   16bf0:	cmp	r3, #0
   16bf4:	clzeq	ip, r2
   16bf8:	clzne	ip, r3
   16bfc:	addeq	ip, ip, #32
   16c00:	cmp	r5, #0
   16c04:	clzeq	r1, r4
   16c08:	addeq	r1, r1, #32
   16c0c:	clzne	r1, r5
   16c10:	sub	ip, ip, r1
   16c14:	sub	sl, ip, #32
   16c18:	lsl	r9, r3, ip
   16c1c:	rsb	fp, ip, #32
   16c20:	orr	r9, r9, r2, lsl sl
   16c24:	orr	r9, r9, r2, lsr fp
   16c28:	lsl	r8, r2, ip
   16c2c:	cmp	r5, r9
   16c30:	cmpeq	r4, r8
   16c34:	movcc	r0, #0
   16c38:	movcc	r1, r0
   16c3c:	bcc	16c58 <putchar_unlocked@plt+0x5ac4>
   16c40:	mov	r0, #1
   16c44:	subs	r4, r4, r8
   16c48:	lsl	r1, r0, sl
   16c4c:	orr	r1, r1, r0, lsr fp
   16c50:	lsl	r0, r0, ip
   16c54:	sbc	r5, r5, r9
   16c58:	cmp	ip, #0
   16c5c:	beq	16ce8 <putchar_unlocked@plt+0x5b54>
   16c60:	lsr	r6, r8, #1
   16c64:	orr	r6, r6, r9, lsl #31
   16c68:	lsr	r7, r9, #1
   16c6c:	mov	r2, ip
   16c70:	b	16c94 <putchar_unlocked@plt+0x5b00>
   16c74:	subs	r3, r4, r6
   16c78:	sbc	r8, r5, r7
   16c7c:	adds	r3, r3, r3
   16c80:	adc	r8, r8, r8
   16c84:	adds	r4, r3, #1
   16c88:	adc	r5, r8, #0
   16c8c:	subs	r2, r2, #1
   16c90:	beq	16cb0 <putchar_unlocked@plt+0x5b1c>
   16c94:	cmp	r5, r7
   16c98:	cmpeq	r4, r6
   16c9c:	bcs	16c74 <putchar_unlocked@plt+0x5ae0>
   16ca0:	adds	r4, r4, r4
   16ca4:	adc	r5, r5, r5
   16ca8:	subs	r2, r2, #1
   16cac:	bne	16c94 <putchar_unlocked@plt+0x5b00>
   16cb0:	lsr	r3, r4, ip
   16cb4:	orr	r3, r3, r5, lsl fp
   16cb8:	lsr	r2, r5, ip
   16cbc:	orr	r3, r3, r5, lsr sl
   16cc0:	adds	r0, r0, r4
   16cc4:	mov	r4, r3
   16cc8:	lsl	r3, r2, ip
   16ccc:	orr	r3, r3, r4, lsl sl
   16cd0:	lsl	ip, r4, ip
   16cd4:	orr	r3, r3, r4, lsr fp
   16cd8:	adc	r1, r1, r5
   16cdc:	subs	r0, r0, ip
   16ce0:	mov	r5, r2
   16ce4:	sbc	r1, r1, r3
   16ce8:	cmp	lr, #0
   16cec:	strdne	r4, [lr]
   16cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16cf4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16cf8:	mov	r7, r0
   16cfc:	ldr	r6, [pc, #72]	; 16d4c <putchar_unlocked@plt+0x5bb8>
   16d00:	ldr	r5, [pc, #72]	; 16d50 <putchar_unlocked@plt+0x5bbc>
   16d04:	add	r6, pc, r6
   16d08:	add	r5, pc, r5
   16d0c:	sub	r6, r6, r5
   16d10:	mov	r8, r1
   16d14:	mov	r9, r2
   16d18:	bl	10ed4 <fdopen@plt-0x20>
   16d1c:	asrs	r6, r6, #2
   16d20:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16d24:	mov	r4, #0
   16d28:	add	r4, r4, #1
   16d2c:	ldr	r3, [r5], #4
   16d30:	mov	r2, r9
   16d34:	mov	r1, r8
   16d38:	mov	r0, r7
   16d3c:	blx	r3
   16d40:	cmp	r6, r4
   16d44:	bne	16d28 <putchar_unlocked@plt+0x5b94>
   16d48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16d4c:	andeq	r1, r1, r0, lsl #4
   16d50:	strdeq	r1, [r1], -r8
   16d54:	bx	lr
   16d58:	ldr	r3, [pc, #12]	; 16d6c <putchar_unlocked@plt+0x5bd8>
   16d5c:	mov	r1, #0
   16d60:	add	r3, pc, r3
   16d64:	ldr	r2, [r3]
   16d68:	b	1108c <__cxa_atexit@plt>
   16d6c:	muleq	r1, r4, r3

Disassembly of section .fini:

00016d70 <.fini>:
   16d70:	push	{r3, lr}
   16d74:	pop	{r3, pc}
