
../repos/ReadStat/.libs/libreadstat.so.1.1.4:     file format elf32-littlearm


Disassembly of section .init:

000047a4 <_init>:
    47a4:	push	{r3, lr}
    47a8:	bl	5008 <call_weak_fn>
    47ac:	pop	{r3, pc}

Disassembly of section .plt:

000047b0 <.plt>:
    47b0:	push	{lr}		; (str lr, [sp, #-4]!)
    47b4:	ldr	lr, [pc, #4]	; 47c0 <.plt+0x10>
    47b8:	add	lr, pc, lr
    47bc:	ldr	pc, [lr, #8]!
    47c0:	.word	0x00040840

000047c4 <sas_validate_name@plt>:
    47c4:	add	ip, pc, #0, 12
    47c8:	add	ip, ip, #64, 20	; 0x40000
    47cc:	ldr	pc, [ip, #2112]!	; 0x840

000047d0 <calloc@plt>:
    47d0:	add	ip, pc, #0, 12
    47d4:	add	ip, ip, #64, 20	; 0x40000
    47d8:	ldr	pc, [ip, #2104]!	; 0x838

000047dc <readstat_set_seek_handler@plt>:
    47dc:	add	ip, pc, #0, 12
    47e0:	add	ip, ip, #64, 20	; 0x40000
    47e4:	ldr	pc, [ip, #2096]!	; 0x830

000047e8 <readstat_set_open_handler@plt>:
    47e8:	add	ip, pc, #0, 12
    47ec:	add	ip, ip, #64, 20	; 0x40000
    47f0:	ldr	pc, [ip, #2088]!	; 0x828

000047f4 <byteswap8@plt>:
    47f4:	add	ip, pc, #0, 12
    47f8:	add	ip, ip, #64, 20	; 0x40000
    47fc:	ldr	pc, [ip, #2080]!	; 0x820

00004800 <raise@plt>:
    4800:	add	ip, pc, #0, 12
    4804:	add	ip, ip, #64, 20	; 0x40000
    4808:	ldr	pc, [ip, #2072]!	; 0x818

0000480c <byteswap4@plt>:
    480c:	add	ip, pc, #0, 12
    4810:	add	ip, ip, #64, 20	; 0x40000
    4814:	ldr	pc, [ip, #2064]!	; 0x810

00004818 <readstat_validate_metadata@plt>:
    4818:	add	ip, pc, #0, 12
    481c:	add	ip, ip, #64, 20	; 0x40000
    4820:	ldr	pc, [ip, #2056]!	; 0x808

00004824 <readstat_sort_label_set@plt>:
    4824:	add	ip, pc, #0, 12
    4828:	add	ip, ip, #64, 20	; 0x40000
    482c:	ldr	pc, [ip, #2048]!	; 0x800

00004830 <por_ctx_free@plt>:
    4830:	add	ip, pc, #0, 12
    4834:	add	ip, ip, #64, 20	; 0x40000
    4838:	ldr	pc, [ip, #2040]!	; 0x7f8

0000483c <memreverse@plt>:
    483c:	add	ip, pc, #0, 12
    4840:	add	ip, ip, #64, 20	; 0x40000
    4844:	ldr	pc, [ip, #2032]!	; 0x7f0

00004848 <iconv_close@plt>:
    4848:	add	ip, pc, #0, 12
    484c:	add	ip, ip, #64, 20	; 0x40000
    4850:	ldr	pc, [ip, #2024]!	; 0x7e8

00004854 <readstat_write_spaces@plt>:
    4854:	add	ip, pc, #0, 12
    4858:	add	ip, ip, #64, 20	; 0x40000
    485c:	ldr	pc, [ip, #2016]!	; 0x7e0

00004860 <iconv@plt>:
    4860:	add	ip, pc, #0, 12
    4864:	add	ip, ip, #64, 20	; 0x40000
    4868:	ldr	pc, [ip, #2008]!	; 0x7d8

0000486c <sav_parse_timestamp@plt>:
    486c:	add	ip, pc, #0, 12
    4870:	add	ip, ip, #64, 20	; 0x40000
    4874:	ldr	pc, [ip, #2000]!	; 0x7d0

00004878 <strcmp@plt>:
    4878:	add	ip, pc, #0, 12
    487c:	add	ip, ip, #64, 20	; 0x40000
    4880:	ldr	pc, [ip, #1992]!	; 0x7c8

00004884 <__cxa_finalize@plt>:
    4884:	add	ip, pc, #0, 12
    4888:	add	ip, ip, #64, 20	; 0x40000
    488c:	ldr	pc, [ip, #1984]!	; 0x7c0

00004890 <ck_hash_table_wipe@plt>:
    4890:	add	ip, pc, #0, 12
    4894:	add	ip, ip, #64, 20	; 0x40000
    4898:	ldr	pc, [ip, #1976]!	; 0x7b8

0000489c <readstat_type_class@plt>:
    489c:	add	ip, pc, #0, 12
    48a0:	add	ip, ip, #64, 20	; 0x40000
    48a4:	ldr	pc, [ip, #1968]!	; 0x7b0

000048a8 <strtol@plt>:
    48a8:	add	ip, pc, #0, 12
    48ac:	add	ip, ip, #64, 20	; 0x40000
    48b0:	ldr	pc, [ip, #1960]!	; 0x7a8

000048b4 <read@plt>:
    48b4:	add	ip, pc, #0, 12
    48b8:	add	ip, ip, #64, 20	; 0x40000
    48bc:	ldr	pc, [ip, #1952]!	; 0x7a0

000048c0 <readstat_error_message@plt>:
    48c0:	add	ip, pc, #0, 12
    48c4:	add	ip, ip, #64, 20	; 0x40000
    48c8:	ldr	pc, [ip, #1944]!	; 0x798

000048cc <mktime@plt>:
    48cc:	add	ip, pc, #0, 12
    48d0:	add	ip, ip, #64, 20	; 0x40000
    48d4:	ldr	pc, [ip, #1936]!	; 0x790

000048d8 <spss_alignment_from_readstat_alignment@plt>:
    48d8:	add	ip, pc, #0, 12
    48dc:	add	ip, ip, #64, 20	; 0x40000
    48e0:	ldr	pc, [ip, #1928]!	; 0x788

000048e4 <readstat_copy@plt>:
    48e4:	add	ip, pc, #0, 12
    48e8:	add	ip, ip, #64, 20	; 0x40000
    48ec:	ldr	pc, [ip, #1920]!	; 0x780

000048f0 <dta_ctx_free@plt>:
    48f0:	add	ip, pc, #0, 12
    48f4:	add	ip, ip, #64, 20	; 0x40000
    48f8:	ldr	pc, [ip, #1912]!	; 0x778

000048fc <deflateBound@plt>:
    48fc:	add	ip, pc, #0, 12
    4900:	add	ip, ip, #64, 20	; 0x40000
    4904:	ldr	pc, [ip, #1904]!	; 0x770

00004908 <readstat_set_update_handler@plt>:
    4908:	add	ip, pc, #0, 12
    490c:	add	ip, ip, #64, 20	; 0x40000
    4910:	ldr	pc, [ip, #1896]!	; 0x768

00004914 <memmove@plt>:
    4914:	add	ip, pc, #0, 12
    4918:	add	ip, ip, #64, 20	; 0x40000
    491c:	ldr	pc, [ip, #1888]!	; 0x760

00004920 <byteswap2@plt>:
    4920:	add	ip, pc, #0, 12
    4924:	add	ip, ip, #64, 20	; 0x40000
    4928:	ldr	pc, [ip, #1880]!	; 0x758

0000492c <machine_is_little_endian@plt>:
    492c:	add	ip, pc, #0, 12
    4930:	add	ip, ip, #64, 20	; 0x40000
    4934:	ldr	pc, [ip, #1872]!	; 0x750

00004938 <free@plt>:
    4938:	add	ip, pc, #0, 12
    493c:	add	ip, ip, #64, 20	; 0x40000
    4940:	ldr	pc, [ip, #1864]!	; 0x748

00004944 <__isnanf@plt>:
    4944:	add	ip, pc, #0, 12
    4948:	add	ip, ip, #64, 20	; 0x40000
    494c:	ldr	pc, [ip, #1856]!	; 0x740

00004950 <readstat_value_is_system_missing@plt>:
    4950:	add	ip, pc, #0, 12
    4954:	add	ip, ip, #64, 20	; 0x40000
    4958:	ldr	pc, [ip, #1848]!	; 0x738

0000495c <sav_parse_time@plt>:
    495c:	add	ip, pc, #0, 12
    4960:	add	ip, ip, #64, 20	; 0x40000
    4964:	ldr	pc, [ip, #1840]!	; 0x730

00004968 <readstat_variable_get_format@plt>:
    4968:	add	ip, pc, #0, 12
    496c:	add	ip, ip, #64, 20	; 0x40000
    4970:	ldr	pc, [ip, #1832]!	; 0x728

00004974 <ones_to_twos_complement4@plt>:
    4974:	add	ip, pc, #0, 12
    4978:	add	ip, ip, #64, 20	; 0x40000
    497c:	ldr	pc, [ip, #1824]!	; 0x720

00004980 <ones_to_twos_complement2@plt>:
    4980:	add	ip, pc, #0, 12
    4984:	add	ip, ip, #64, 20	; 0x40000
    4988:	ldr	pc, [ip, #1816]!	; 0x718

0000498c <sav_ctx_free@plt>:
    498c:	add	ip, pc, #0, 12
    4990:	add	ip, ip, #64, 20	; 0x40000
    4994:	ldr	pc, [ip, #1808]!	; 0x710

00004998 <memcpy@plt>:
    4998:	add	ip, pc, #0, 12
    499c:	add	ip, ip, #64, 20	; 0x40000
    49a0:	ldr	pc, [ip, #1800]!	; 0x708

000049a4 <spss_parse_format@plt>:
    49a4:	add	ip, pc, #0, 12
    49a8:	add	ip, ip, #64, 20	; 0x40000
    49ac:	ldr	pc, [ip, #1792]!	; 0x700

000049b0 <submit_columns@plt>:
    49b0:	add	ip, pc, #0, 12
    49b4:	add	ip, ip, #64, 20	; 0x40000
    49b8:	ldr	pc, [ip, #1784]!	; 0x6f8

000049bc <readstat_variable_get_missing_range_lo@plt>:
    49bc:	add	ip, pc, #0, 12
    49c0:	add	ip, ip, #64, 20	; 0x40000
    49c4:	ldr	pc, [ip, #1776]!	; 0x6f0

000049c8 <time@plt>:
    49c8:	add	ip, pc, #0, 12
    49cc:	add	ip, ip, #64, 20	; 0x40000
    49d0:	ldr	pc, [ip, #1768]!	; 0x6e8

000049d4 <readstat_begin_writing_file@plt>:
    49d4:	add	ip, pc, #0, 12
    49d8:	add	ip, ip, #64, 20	; 0x40000
    49dc:	ldr	pc, [ip, #1760]!	; 0x6e0

000049e0 <lseek@plt>:
    49e0:	add	ip, pc, #0, 12
    49e4:	add	ip, ip, #64, 20	; 0x40000
    49e8:	ldr	pc, [ip, #1752]!	; 0x6d8

000049ec <unistd_io_init@plt>:
    49ec:	add	ip, pc, #0, 12
    49f0:	add	ip, ip, #64, 20	; 0x40000
    49f4:	ldr	pc, [ip, #1744]!	; 0x6d0

000049f8 <pow@plt>:
    49f8:	add	ip, pc, #0, 12
    49fc:	add	ip, ip, #64, 20	; 0x40000
    4a00:	ldr	pc, [ip, #1736]!	; 0x6c8

00004a04 <uncompress@plt>:
    4a04:	add	ip, pc, #0, 12
    4a08:	add	ip, ip, #64, 20	; 0x40000
    4a0c:	ldr	pc, [ip, #1728]!	; 0x6c0

00004a10 <readstat_string_value@plt>:
    4a10:	add	ip, pc, #0, 12
    4a14:	add	ip, ip, #64, 20	; 0x40000
    4a18:	ldr	pc, [ip, #1720]!	; 0x6b8

00004a1c <readstat_schema_free@plt>:
    4a1c:	add	ip, pc, #0, 12
    4a20:	add	ip, ip, #64, 20	; 0x40000
    4a24:	ldr	pc, [ip, #1712]!	; 0x6b0

00004a28 <readstat_calloc@plt>:
    4a28:	add	ip, pc, #0, 12
    4a2c:	add	ip, ip, #64, 20	; 0x40000
    4a30:	ldr	pc, [ip, #1704]!	; 0x6a8

00004a34 <ck_str_hash_lookup@plt>:
    4a34:	add	ip, pc, #0, 12
    4a38:	add	ip, ip, #64, 20	; 0x40000
    4a3c:	ldr	pc, [ip, #1696]!	; 0x6a0

00004a40 <sav_compressed_row_bound@plt>:
    4a40:	add	ip, pc, #0, 12
    4a44:	add	ip, ip, #64, 20	; 0x40000
    4a48:	ldr	pc, [ip, #1688]!	; 0x698

00004a4c <ck_hash_table_grow@plt>:
    4a4c:	add	ip, pc, #0, 12
    4a50:	add	ip, ip, #64, 20	; 0x40000
    4a54:	ldr	pc, [ip, #1680]!	; 0x690

00004a58 <__isinf@plt>:
    4a58:	add	ip, pc, #0, 12
    4a5c:	add	ip, ip, #64, 20	; 0x40000
    4a60:	ldr	pc, [ip, #1672]!	; 0x688

00004a64 <realloc@plt>:
    4a64:	add	ip, pc, #0, 12
    4a68:	add	ip, ip, #64, 20	; 0x40000
    4a6c:	ldr	pc, [ip, #1664]!	; 0x680

00004a70 <cnxptiee@plt>:
    4a70:	add	ip, pc, #0, 12
    4a74:	add	ip, ip, #64, 20	; 0x40000
    4a78:	ldr	pc, [ip, #1656]!	; 0x678

00004a7c <read_version_and_timestamp@plt>:
    4a7c:	add	ip, pc, #0, 12
    4a80:	add	ip, ip, #64, 20	; 0x40000
    4a84:	ldr	pc, [ip, #1648]!	; 0x670

00004a88 <readstat_write_zeros@plt>:
    4a88:	add	ip, pc, #0, 12
    4a8c:	add	ip, ip, #64, 20	; 0x40000
    4a90:	ldr	pc, [ip, #1640]!	; 0x668

00004a94 <strcasecmp@plt>:
    4a94:	add	ip, pc, #0, 12
    4a98:	add	ip, ip, #64, 20	; 0x40000
    4a9c:	ldr	pc, [ip, #1632]!	; 0x660

00004aa0 <readstat_copy_quoted@plt>:
    4aa0:	add	ip, pc, #0, 12
    4aa4:	add	ip, ip, #64, 20	; 0x40000
    4aa8:	ldr	pc, [ip, #1624]!	; 0x658

00004aac <deflate@plt>:
    4aac:	add	ip, pc, #0, 12
    4ab0:	add	ip, ip, #64, 20	; 0x40000
    4ab4:	ldr	pc, [ip, #1616]!	; 0x650

00004ab8 <submit_value_label@plt>:
    4ab8:	add	ip, pc, #0, 12
    4abc:	add	ip, ip, #64, 20	; 0x40000
    4ac0:	ldr	pc, [ip, #1608]!	; 0x648

00004ac4 <sav_ctx_init@plt>:
    4ac4:	add	ip, pc, #0, 12
    4ac8:	add	ip, ip, #64, 20	; 0x40000
    4acc:	ldr	pc, [ip, #1600]!	; 0x640

00004ad0 <ck_str_n_hash_lookup@plt>:
    4ad0:	add	ip, pc, #0, 12
    4ad4:	add	ip, ip, #64, 20	; 0x40000
    4ad8:	ldr	pc, [ip, #1592]!	; 0x638

00004adc <spss_measure_from_readstat_measure@plt>:
    4adc:	add	ip, pc, #0, 12
    4ae0:	add	ip, ip, #64, 20	; 0x40000
    4ae4:	ldr	pc, [ip, #1584]!	; 0x630

00004ae8 <sas_rle_decompress@plt>:
    4ae8:	add	ip, pc, #0, 12
    4aec:	add	ip, ip, #64, 20	; 0x40000
    4af0:	ldr	pc, [ip, #1576]!	; 0x628

00004af4 <sav_parse_date@plt>:
    4af4:	add	ip, pc, #0, 12
    4af8:	add	ip, ip, #64, 20	; 0x40000
    4afc:	ldr	pc, [ip, #1568]!	; 0x620

00004b00 <xport_namestr_bswap@plt>:
    4b00:	add	ip, pc, #0, 12
    4b04:	add	ip, ip, #64, 20	; 0x40000
    4b08:	ldr	pc, [ip, #1560]!	; 0x618

00004b0c <strcpy@plt>:
    4b0c:	add	ip, pc, #0, 12
    4b10:	add	ip, ip, #64, 20	; 0x40000
    4b14:	ldr	pc, [ip, #1552]!	; 0x610

00004b18 <zsav_current_block@plt>:
    4b18:	add	ip, pc, #0, 12
    4b1c:	add	ip, ip, #64, 20	; 0x40000
    4b20:	ldr	pc, [ip, #1544]!	; 0x608

00004b24 <zsav_ctx_init@plt>:
    4b24:	add	ip, pc, #0, 12
    4b28:	add	ip, ip, #64, 20	; 0x40000
    4b2c:	ldr	pc, [ip, #1536]!	; 0x600

00004b30 <sas_write_header@plt>:
    4b30:	add	ip, pc, #0, 12
    4b34:	add	ip, ip, #64, 20	; 0x40000
    4b38:	ldr	pc, [ip, #1528]!	; 0x5f8

00004b3c <strtof@plt>:
    4b3c:	add	ip, pc, #0, 12
    4b40:	add	ip, ip, #64, 20	; 0x40000
    4b44:	ldr	pc, [ip, #1520]!	; 0x5f0

00004b48 <readstat_schema_find_or_create_entry@plt>:
    4b48:	add	ip, pc, #0, 12
    4b4c:	add	ip, ip, #64, 20	; 0x40000
    4b50:	ldr	pc, [ip, #1512]!	; 0x5e8

00004b54 <readstat_value_type_class@plt>:
    4b54:	add	ip, pc, #0, 12
    4b58:	add	ip, ip, #64, 20	; 0x40000
    4b5c:	ldr	pc, [ip, #1504]!	; 0x5e0

00004b60 <readstat_set_io_ctx@plt>:
    4b60:	add	ip, pc, #0, 12
    4b64:	add	ip, ip, #64, 20	; 0x40000
    4b68:	ldr	pc, [ip, #1496]!	; 0x5d8

00004b6c <spss_format_for_variable@plt>:
    4b6c:	add	ip, pc, #0, 12
    4b70:	add	ip, ip, #64, 20	; 0x40000
    4b74:	ldr	pc, [ip, #1488]!	; 0x5d0

00004b78 <readstat_parser_free@plt>:
    4b78:	add	ip, pc, #0, 12
    4b7c:	add	ip, ip, #64, 20	; 0x40000
    4b80:	ldr	pc, [ip, #1480]!	; 0x5c8

00004b84 <ck_hash_str@plt>:
    4b84:	add	ip, pc, #0, 12
    4b88:	add	ip, ip, #64, 20	; 0x40000
    4b8c:	ldr	pc, [ip, #1472]!	; 0x5c0

00004b90 <malloc@plt>:
    4b90:	add	ip, pc, #0, 12
    4b94:	add	ip, ip, #64, 20	; 0x40000
    4b98:	ldr	pc, [ip, #1464]!	; 0x5b8

00004b9c <zsav_add_block@plt>:
    4b9c:	add	ip, pc, #0, 12
    4ba0:	add	ip, ip, #64, 20	; 0x40000
    4ba4:	ldr	pc, [ip, #1456]!	; 0x5b0

00004ba8 <deflateInit_@plt>:
    4ba8:	add	ip, pc, #0, 12
    4bac:	add	ip, ip, #64, 20	; 0x40000
    4bb0:	ldr	pc, [ip, #1448]!	; 0x5a8

00004bb4 <iconv_open@plt>:
    4bb4:	add	ip, pc, #0, 12
    4bb8:	add	ip, ip, #64, 20	; 0x40000
    4bbc:	ldr	pc, [ip, #1440]!	; 0x5a0

00004bc0 <strerror@plt>:
    4bc0:	add	ip, pc, #0, 12
    4bc4:	add	ip, ip, #64, 20	; 0x40000
    4bc8:	ldr	pc, [ip, #1432]!	; 0x598

00004bcc <sas_validate_tag@plt>:
    4bcc:	add	ip, pc, #0, 12
    4bd0:	add	ip, ip, #64, 20	; 0x40000
    4bd4:	ldr	pc, [ip, #1424]!	; 0x590

00004bd8 <readstat_write_string@plt>:
    4bd8:	add	ip, pc, #0, 12
    4bdc:	add	ip, ip, #64, 20	; 0x40000
    4be0:	ldr	pc, [ip, #1416]!	; 0x588

00004be4 <localtime@plt>:
    4be4:	add	ip, pc, #0, 12
    4be8:	add	ip, ip, #64, 20	; 0x40000
    4bec:	ldr	pc, [ip, #1408]!	; 0x580

00004bf0 <__ctype_tolower_loc@plt>:
    4bf0:	add	ip, pc, #0, 12
    4bf4:	add	ip, ip, #64, 20	; 0x40000
    4bf8:	ldr	pc, [ip, #1400]!	; 0x578

00004bfc <modf@plt>:
    4bfc:	add	ip, pc, #0, 12
    4c00:	add	ip, ip, #64, 20	; 0x40000
    4c04:	ldr	pc, [ip, #1392]!	; 0x570

00004c08 <__ctype_toupper_loc@plt>:
    4c08:	add	ip, pc, #0, 12
    4c0c:	add	ip, ip, #64, 20	; 0x40000
    4c10:	ldr	pc, [ip, #1384]!	; 0x568

00004c14 <ck_hash_table_init@plt>:
    4c14:	add	ip, pc, #0, 12
    4c18:	add	ip, ip, #64, 20	; 0x40000
    4c1c:	ldr	pc, [ip, #1376]!	; 0x560

00004c20 <__gmon_start__@plt>:
    4c20:	add	ip, pc, #0, 12
    4c24:	add	ip, ip, #64, 20	; 0x40000
    4c28:	ldr	pc, [ip, #1368]!	; 0x558

00004c2c <open@plt>:
    4c2c:	add	ip, pc, #0, 12
    4c30:	add	ip, ip, #64, 20	; 0x40000
    4c34:	ldr	pc, [ip, #1360]!	; 0x550

00004c38 <readstat_double_value@plt>:
    4c38:	add	ip, pc, #0, 12
    4c3c:	add	ip, ip, #64, 20	; 0x40000
    4c40:	ldr	pc, [ip, #1352]!	; 0x548

00004c44 <get_native@plt>:
    4c44:	add	ip, pc, #0, 12
    4c48:	add	ip, ip, #64, 20	; 0x40000
    4c4c:	ldr	pc, [ip, #1344]!	; 0x540

00004c50 <dta_ctx_init@plt>:
    4c50:	add	ip, pc, #0, 12
    4c54:	add	ip, ip, #64, 20	; 0x40000
    4c58:	ldr	pc, [ip, #1336]!	; 0x538

00004c5c <readstat_variable_get_type@plt>:
    4c5c:	add	ip, pc, #0, 12
    4c60:	add	ip, ip, #64, 20	; 0x40000
    4c64:	ldr	pc, [ip, #1328]!	; 0x530

00004c68 <dta_type_info@plt>:
    4c68:	add	ip, pc, #0, 12
    4c6c:	add	ip, ip, #64, 20	; 0x40000
    4c70:	ldr	pc, [ip, #1320]!	; 0x528

00004c74 <bcmp@plt>:
    4c74:	add	ip, pc, #0, 12
    4c78:	add	ip, ip, #64, 20	; 0x40000
    4c7c:	ldr	pc, [ip, #1312]!	; 0x520

00004c80 <sav_parse_long_variable_names_record@plt>:
    4c80:	add	ip, pc, #0, 12
    4c84:	add	ip, ip, #64, 20	; 0x40000
    4c88:	ldr	pc, [ip, #1304]!	; 0x518

00004c8c <strlen@plt>:
    4c8c:	add	ip, pc, #0, 12
    4c90:	add	ip, ip, #64, 20	; 0x40000
    4c94:	ldr	pc, [ip, #1296]!	; 0x510

00004c98 <sav_decompress_row@plt>:
    4c98:	add	ip, pc, #0, 12
    4c9c:	add	ip, ip, #64, 20	; 0x40000
    4ca0:	ldr	pc, [ip, #1288]!	; 0x508

00004ca4 <readstat_variable_get_display_width@plt>:
    4ca4:	add	ip, pc, #0, 12
    4ca8:	add	ip, ip, #64, 20	; 0x40000
    4cac:	ldr	pc, [ip, #1280]!	; 0x500

00004cb0 <readstat_malloc@plt>:
    4cb0:	add	ip, pc, #0, 12
    4cb4:	add	ip, ip, #64, 20	; 0x40000
    4cb8:	ldr	pc, [ip, #1272]!	; 0x4f8

00004cbc <readstat_convert@plt>:
    4cbc:	add	ip, pc, #0, 12
    4cc0:	add	ip, ip, #64, 20	; 0x40000
    4cc4:	ldr	pc, [ip, #1264]!	; 0x4f0

00004cc8 <ck_hash_table_free@plt>:
    4cc8:	add	ip, pc, #0, 12
    4ccc:	add	ip, ip, #64, 20	; 0x40000
    4cd0:	ldr	pc, [ip, #1256]!	; 0x4e8

00004cd4 <readstat_por_parse_double@plt>:
    4cd4:	add	ip, pc, #0, 12
    4cd8:	add	ip, ip, #64, 20	; 0x40000
    4cdc:	ldr	pc, [ip, #1248]!	; 0x4e0

00004ce0 <por_utf8_encode@plt>:
    4ce0:	add	ip, pc, #0, 12
    4ce4:	add	ip, ip, #64, 20	; 0x40000
    4ce8:	ldr	pc, [ip, #1240]!	; 0x4d8

00004cec <__errno_location@plt>:
    4cec:	add	ip, pc, #0, 12
    4cf0:	add	ip, ip, #64, 20	; 0x40000
    4cf4:	ldr	pc, [ip, #1232]!	; 0x4d0

00004cf8 <spss_init_variable_for_info@plt>:
    4cf8:	add	ip, pc, #0, 12
    4cfc:	add	ip, ip, #64, 20	; 0x40000
    4d00:	ldr	pc, [ip, #1224]!	; 0x4c8

00004d04 <snprintf@plt>:
    4d04:	add	ip, pc, #0, 12
    4d08:	add	ip, ip, #64, 20	; 0x40000
    4d0c:	ldr	pc, [ip, #1216]!	; 0x4c0

00004d10 <__isoc99_sscanf@plt>:
    4d10:	add	ip, pc, #0, 12
    4d14:	add	ip, ip, #64, 20	; 0x40000
    4d18:	ldr	pc, [ip, #1208]!	; 0x4b8

00004d1c <ck_str_n_hash_insert@plt>:
    4d1c:	add	ip, pc, #0, 12
    4d20:	add	ip, ip, #64, 20	; 0x40000
    4d24:	ldr	pc, [ip, #1200]!	; 0x4b0

00004d28 <memset@plt>:
    4d28:	add	ip, pc, #0, 12
    4d2c:	add	ip, ip, #64, 20	; 0x40000
    4d30:	ldr	pc, [ip, #1192]!	; 0x4a8

00004d34 <bsearch@plt>:
    4d34:	add	ip, pc, #0, 12
    4d38:	add	ip, ip, #64, 20	; 0x40000
    4d3c:	ldr	pc, [ip, #1184]!	; 0x4a0

00004d40 <spss_64bit_value@plt>:
    4d40:	add	ip, pc, #0, 12
    4d44:	add	ip, ip, #64, 20	; 0x40000
    4d48:	ldr	pc, [ip, #1176]!	; 0x498

00004d4c <strncpy@plt>:
    4d4c:	add	ip, pc, #0, 12
    4d50:	add	ip, ip, #64, 20	; 0x40000
    4d54:	ldr	pc, [ip, #1168]!	; 0x490

00004d58 <readstat_variable_get_storage_width@plt>:
    4d58:	add	ip, pc, #0, 12
    4d5c:	add	ip, ip, #64, 20	; 0x40000
    4d60:	ldr	pc, [ip, #1160]!	; 0x488

00004d64 <sav_parse_very_long_string_record@plt>:
    4d64:	add	ip, pc, #0, 12
    4d68:	add	ip, ip, #64, 20	; 0x40000
    4d6c:	ldr	pc, [ip, #1152]!	; 0x480

00004d70 <readstat_realloc@plt>:
    4d70:	add	ip, pc, #0, 12
    4d74:	add	ip, ip, #64, 20	; 0x40000
    4d78:	ldr	pc, [ip, #1144]!	; 0x478

00004d7c <dta_parse_timestamp@plt>:
    4d7c:	add	ip, pc, #0, 12
    4d80:	add	ip, ip, #64, 20	; 0x40000
    4d84:	ldr	pc, [ip, #1136]!	; 0x470

00004d88 <strtod@plt>:
    4d88:	add	ip, pc, #0, 12
    4d8c:	add	ip, ip, #64, 20	; 0x40000
    4d90:	ldr	pc, [ip, #1128]!	; 0x468

00004d94 <readstat_variable_get_missing_ranges_count@plt>:
    4d94:	add	ip, pc, #0, 12
    4d98:	add	ip, ip, #64, 20	; 0x40000
    4d9c:	ldr	pc, [ip, #1120]!	; 0x460

00004da0 <deflateEnd@plt>:
    4da0:	add	ip, pc, #0, 12
    4da4:	add	ip, ip, #64, 20	; 0x40000
    4da8:	ldr	pc, [ip, #1112]!	; 0x458

00004dac <readstat_variable_get_measure@plt>:
    4dac:	add	ip, pc, #0, 12
    4db0:	add	ip, ip, #64, 20	; 0x40000
    4db4:	ldr	pc, [ip, #1104]!	; 0x450

00004db8 <__isnan@plt>:
    4db8:	add	ip, pc, #0, 12
    4dbc:	add	ip, ip, #64, 20	; 0x40000
    4dc0:	ldr	pc, [ip, #1096]!	; 0x448

00004dc4 <readstat_variable_get_missing_range_hi@plt>:
    4dc4:	add	ip, pc, #0, 12
    4dc8:	add	ip, ip, #64, 20	; 0x40000
    4dcc:	ldr	pc, [ip, #1088]!	; 0x440

00004dd0 <readstat_set_read_handler@plt>:
    4dd0:	add	ip, pc, #0, 12
    4dd4:	add	ip, ip, #64, 20	; 0x40000
    4dd8:	ldr	pc, [ip, #1080]!	; 0x438

00004ddc <readstat_value_type@plt>:
    4ddc:	add	ip, pc, #0, 12
    4de0:	add	ip, ip, #64, 20	; 0x40000
    4de4:	ldr	pc, [ip, #1072]!	; 0x430

00004de8 <sas_header_info_init@plt>:
    4de8:	add	ip, pc, #0, 12
    4dec:	add	ip, ip, #64, 20	; 0x40000
    4df0:	ldr	pc, [ip, #1064]!	; 0x428

00004df4 <readstat_string_ref_init@plt>:
    4df4:	add	ip, pc, #0, 12
    4df8:	add	ip, ip, #64, 20	; 0x40000
    4dfc:	ldr	pc, [ip, #1056]!	; 0x420

00004e00 <readstat_variable_get_name@plt>:
    4e00:	add	ip, pc, #0, 12
    4e04:	add	ip, ip, #64, 20	; 0x40000
    4e08:	ldr	pc, [ip, #1048]!	; 0x418

00004e0c <ones_to_twos_complement1@plt>:
    4e0c:	add	ip, pc, #0, 12
    4e10:	add	ip, ip, #64, 20	; 0x40000
    4e14:	ldr	pc, [ip, #1040]!	; 0x410

00004e18 <readstat_get_variable@plt>:
    4e18:	add	ip, pc, #0, 12
    4e1c:	add	ip, ip, #64, 20	; 0x40000
    4e20:	ldr	pc, [ip, #1032]!	; 0x408

00004e24 <spss_alignment_to_readstat_alignment@plt>:
    4e24:	add	ip, pc, #0, 12
    4e28:	add	ip, ip, #64, 20	; 0x40000
    4e2c:	ldr	pc, [ip, #1024]!	; 0x400

00004e30 <por_utf8_decode@plt>:
    4e30:	add	ip, pc, #0, 12
    4e34:	add	ip, ip, #64, 20	; 0x40000
    4e38:	ldr	pc, [ip, #1016]!	; 0x3f8

00004e3c <sas_read_header@plt>:
    4e3c:	add	ip, pc, #0, 12
    4e40:	add	ip, ip, #64, 20	; 0x40000
    4e44:	ldr	pc, [ip, #1008]!	; 0x3f0

00004e48 <spss_measure_to_readstat_measure@plt>:
    4e48:	add	ip, pc, #0, 12
    4e4c:	add	ip, ip, #64, 20	; 0x40000
    4e50:	ldr	pc, [ip, #1000]!	; 0x3e8

00004e54 <sas_subheader_remainder@plt>:
    4e54:	add	ip, pc, #0, 12
    4e58:	add	ip, ip, #64, 20	; 0x40000
    4e5c:	ldr	pc, [ip, #992]!	; 0x3e0

00004e60 <sas_read8@plt>:
    4e60:	add	ip, pc, #0, 12
    4e64:	add	ip, ip, #64, 20	; 0x40000
    4e68:	ldr	pc, [ip, #984]!	; 0x3d8

00004e6c <sas_read2@plt>:
    4e6c:	add	ip, pc, #0, 12
    4e70:	add	ip, ip, #64, 20	; 0x40000
    4e74:	ldr	pc, [ip, #976]!	; 0x3d0

00004e78 <readstat_copy_lower@plt>:
    4e78:	add	ip, pc, #0, 12
    4e7c:	add	ip, ip, #64, 20	; 0x40000
    4e80:	ldr	pc, [ip, #968]!	; 0x3c8

00004e84 <sprintf@plt>:
    4e84:	add	ip, pc, #0, 12
    4e88:	add	ip, ip, #64, 20	; 0x40000
    4e8c:	ldr	pc, [ip, #960]!	; 0x3c0

00004e90 <sas_read4@plt>:
    4e90:	add	ip, pc, #0, 12
    4e94:	add	ip, ip, #64, 20	; 0x40000
    4e98:	ldr	pc, [ip, #952]!	; 0x3b8

00004e9c <readstat_variable_get_label@plt>:
    4e9c:	add	ip, pc, #0, 12
    4ea0:	add	ip, ip, #64, 20	; 0x40000
    4ea4:	ldr	pc, [ip, #944]!	; 0x3b0

00004ea8 <spss_format@plt>:
    4ea8:	add	ip, pc, #0, 12
    4eac:	add	ip, ip, #64, 20	; 0x40000
    4eb0:	ldr	pc, [ip, #936]!	; 0x3a8

00004eb4 <spss_varinfo_free@plt>:
    4eb4:	add	ip, pc, #0, 12
    4eb8:	add	ip, ip, #64, 20	; 0x40000
    4ebc:	ldr	pc, [ip, #928]!	; 0x3a0

00004ec0 <readstat_get_label_set@plt>:
    4ec0:	add	ip, pc, #0, 12
    4ec4:	add	ip, ip, #64, 20	; 0x40000
    4ec8:	ldr	pc, [ip, #920]!	; 0x398

00004ecc <readstat_variable_get_alignment@plt>:
    4ecc:	add	ip, pc, #0, 12
    4ed0:	add	ip, ip, #64, 20	; 0x40000
    4ed4:	ldr	pc, [ip, #912]!	; 0x390

00004ed8 <qsort@plt>:
    4ed8:	add	ip, pc, #0, 12
    4edc:	add	ip, ip, #64, 20	; 0x40000
    4ee0:	ldr	pc, [ip, #904]!	; 0x388

00004ee4 <readstat_get_label_set_variable@plt>:
    4ee4:	add	ip, pc, #0, 12
    4ee8:	add	ip, ip, #64, 20	; 0x40000
    4eec:	ldr	pc, [ip, #896]!	; 0x380

00004ef0 <readstat_write_bytes@plt>:
    4ef0:	add	ip, pc, #0, 12
    4ef4:	add	ip, ip, #64, 20	; 0x40000
    4ef8:	ldr	pc, [ip, #888]!	; 0x378

00004efc <sav_compress_row@plt>:
    4efc:	add	ip, pc, #0, 12
    4f00:	add	ip, ip, #64, 20	; 0x40000
    4f04:	ldr	pc, [ip, #880]!	; 0x370

00004f08 <readstat_set_close_handler@plt>:
    4f08:	add	ip, pc, #0, 12
    4f0c:	add	ip, ip, #64, 20	; 0x40000
    4f10:	ldr	pc, [ip, #872]!	; 0x368

00004f14 <sas_fill_page@plt>:
    4f14:	add	ip, pc, #0, 12
    4f18:	add	ip, ip, #64, 20	; 0x40000
    4f1c:	ldr	pc, [ip, #864]!	; 0x360

00004f20 <sas_rle_compressed_len@plt>:
    4f20:	add	ip, pc, #0, 12
    4f24:	add	ip, ip, #64, 20	; 0x40000
    4f28:	ldr	pc, [ip, #856]!	; 0x358

00004f2c <por_ctx_init@plt>:
    4f2c:	add	ip, pc, #0, 12
    4f30:	add	ip, ip, #64, 20	; 0x40000
    4f34:	ldr	pc, [ip, #848]!	; 0x350

00004f38 <readstat_validate_variable@plt>:
    4f38:	add	ip, pc, #0, 12
    4f3c:	add	ip, ip, #64, 20	; 0x40000
    4f40:	ldr	pc, [ip, #840]!	; 0x348

00004f44 <sas_assign_tag@plt>:
    4f44:	add	ip, pc, #0, 12
    4f48:	add	ip, ip, #64, 20	; 0x40000
    4f4c:	ldr	pc, [ip, #832]!	; 0x340

00004f50 <zsav_compress_row@plt>:
    4f50:	add	ip, pc, #0, 12
    4f54:	add	ip, ip, #64, 20	; 0x40000
    4f58:	ldr	pc, [ip, #824]!	; 0x338

00004f5c <zsav_read_compressed_data@plt>:
    4f5c:	add	ip, pc, #0, 12
    4f60:	add	ip, ip, #64, 20	; 0x40000
    4f64:	ldr	pc, [ip, #816]!	; 0x330

00004f68 <readstat_get_value_label@plt>:
    4f68:	add	ip, pc, #0, 12
    4f6c:	add	ip, ip, #64, 20	; 0x40000
    4f70:	ldr	pc, [ip, #808]!	; 0x328

00004f74 <sas_rle_compress@plt>:
    4f74:	add	ip, pc, #0, 12
    4f78:	add	ip, ip, #64, 20	; 0x40000
    4f7c:	ldr	pc, [ip, #800]!	; 0x320

00004f80 <readstat_write_line_padding@plt>:
    4f80:	add	ip, pc, #0, 12
    4f84:	add	ip, ip, #64, 20	; 0x40000
    4f88:	ldr	pc, [ip, #792]!	; 0x318

00004f8c <ck_str_hash_insert@plt>:
    4f8c:	add	ip, pc, #0, 12
    4f90:	add	ip, ip, #64, 20	; 0x40000
    4f94:	ldr	pc, [ip, #784]!	; 0x310

00004f98 <strncmp@plt>:
    4f98:	add	ip, pc, #0, 12
    4f9c:	add	ip, ip, #64, 20	; 0x40000
    4fa0:	ldr	pc, [ip, #776]!	; 0x308

00004fa4 <byteswap_double@plt>:
    4fa4:	add	ip, pc, #0, 12
    4fa8:	add	ip, ip, #64, 20	; 0x40000
    4fac:	ldr	pc, [ip, #768]!	; 0x300

00004fb0 <close@plt>:
    4fb0:	add	ip, pc, #0, 12
    4fb4:	add	ip, ip, #64, 20	; 0x40000
    4fb8:	ldr	pc, [ip, #760]!	; 0x2f8

00004fbc <readstat_write_bytes_as_lines@plt>:
    4fbc:	add	ip, pc, #0, 12
    4fc0:	add	ip, ip, #64, 20	; 0x40000
    4fc4:	ldr	pc, [ip, #752]!	; 0x2f0

00004fc8 <spss_missingness_for_info@plt>:
    4fc8:	add	ip, pc, #0, 12
    4fcc:	add	ip, ip, #64, 20	; 0x40000
    4fd0:	ldr	pc, [ip, #744]!	; 0x2e8

00004fd4 <handle_variables@plt>:
    4fd4:	add	ip, pc, #0, 12
    4fd8:	add	ip, ip, #64, 20	; 0x40000
    4fdc:	ldr	pc, [ip, #736]!	; 0x2e0

00004fe0 <readstat_variable_get_type_class@plt>:
    4fe0:	add	ip, pc, #0, 12
    4fe4:	add	ip, ip, #64, 20	; 0x40000
    4fe8:	ldr	pc, [ip, #728]!	; 0x2d8

00004fec <readstat_write_space_padded_string@plt>:
    4fec:	add	ip, pc, #0, 12
    4ff0:	add	ip, ip, #64, 20	; 0x40000
    4ff4:	ldr	pc, [ip, #720]!	; 0x2d0

00004ff8 <dta_ctx_alloc@plt>:
    4ff8:	add	ip, pc, #0, 12
    4ffc:	add	ip, ip, #64, 20	; 0x40000
    5000:	ldr	pc, [ip, #712]!	; 0x2c8

Disassembly of section .text:

00005008 <call_weak_fn>:
    5008:	ldr	r3, [pc, #20]	; 5024 <call_weak_fn+0x1c>
    500c:	ldr	r2, [pc, #20]	; 5028 <call_weak_fn+0x20>
    5010:	add	r3, pc, r3
    5014:	ldr	r2, [r3, r2]
    5018:	cmp	r2, #0
    501c:	bxeq	lr
    5020:	b	4c20 <__gmon_start__@plt>
    5024:	.word	0x0003ffe8
    5028:	.word	0x000002f0

0000502c <deregister_tm_clones>:
    502c:	ldr	r0, [pc, #44]	; 5060 <deregister_tm_clones+0x34>
    5030:	ldr	r3, [pc, #44]	; 5064 <deregister_tm_clones+0x38>
    5034:	add	r0, pc, r0
    5038:	add	r3, pc, r3
    503c:	cmp	r3, r0
    5040:	ldr	r3, [pc, #32]	; 5068 <deregister_tm_clones+0x3c>
    5044:	add	r3, pc, r3
    5048:	bxeq	lr
    504c:	ldr	r2, [pc, #24]	; 506c <deregister_tm_clones+0x40>
    5050:	ldr	r3, [r3, r2]
    5054:	cmp	r3, #0
    5058:	bxeq	lr
    505c:	bx	r3
    5060:	.word	0x00041cf0
    5064:	.word	0x00041cec
    5068:	.word	0x0003ffb4
    506c:	.word	0x000002d8

00005070 <register_tm_clones>:
    5070:	ldr	r0, [pc, #56]	; 50b0 <register_tm_clones+0x40>
    5074:	ldr	r3, [pc, #56]	; 50b4 <register_tm_clones+0x44>
    5078:	add	r0, pc, r0
    507c:	add	r3, pc, r3
    5080:	sub	r1, r3, r0
    5084:	ldr	r3, [pc, #44]	; 50b8 <register_tm_clones+0x48>
    5088:	asr	r1, r1, #2
    508c:	add	r3, pc, r3
    5090:	add	r1, r1, r1, lsr #31
    5094:	asrs	r1, r1, #1
    5098:	bxeq	lr
    509c:	ldr	r2, [pc, #24]	; 50bc <register_tm_clones+0x4c>
    50a0:	ldr	r3, [r3, r2]
    50a4:	cmp	r3, #0
    50a8:	bxeq	lr
    50ac:	bx	r3
    50b0:	.word	0x00041cac
    50b4:	.word	0x00041ca8
    50b8:	.word	0x0003ff6c
    50bc:	.word	0x0000031c

000050c0 <__do_global_dtors_aux>:
    50c0:	ldr	r3, [pc, #76]	; 5114 <__do_global_dtors_aux+0x54>
    50c4:	ldr	r2, [pc, #76]	; 5118 <__do_global_dtors_aux+0x58>
    50c8:	add	r3, pc, r3
    50cc:	add	r2, pc, r2
    50d0:	ldrb	r3, [r3]
    50d4:	cmp	r3, #0
    50d8:	bxne	lr
    50dc:	ldr	r3, [pc, #56]	; 511c <__do_global_dtors_aux+0x5c>
    50e0:	push	{r4, lr}
    50e4:	ldr	r3, [r2, r3]
    50e8:	cmp	r3, #0
    50ec:	beq	50fc <__do_global_dtors_aux+0x3c>
    50f0:	ldr	r3, [pc, #40]	; 5120 <__do_global_dtors_aux+0x60>
    50f4:	ldr	r0, [pc, r3]
    50f8:	bl	4884 <__cxa_finalize@plt>
    50fc:	bl	502c <deregister_tm_clones>
    5100:	ldr	r3, [pc, #28]	; 5124 <__do_global_dtors_aux+0x64>
    5104:	mov	r2, #1
    5108:	add	r3, pc, r3
    510c:	strb	r2, [r3]
    5110:	pop	{r4, pc}
    5114:	.word	0x00041c5c
    5118:	.word	0x0003ff2c
    511c:	.word	0x000002d4
    5120:	.word	0x00040224
    5124:	.word	0x00041c1c

00005128 <frame_dummy>:
    5128:	b	5070 <register_tm_clones>

0000512c <ck_hash_str>:
    512c:	push	{fp, lr}
    5130:	mov	fp, sp
    5134:	ldrb	r3, [r0]
    5138:	cmp	r3, #0
    513c:	beq	5170 <ck_hash_str+0x44>
    5140:	add	r2, r0, #1
    5144:	mov	r1, #0
    5148:	movw	lr, #5381	; 0x1505
    514c:	mov	ip, #33	; 0x21
    5150:	uxtb	r0, r3
    5154:	add	r1, r1, r1, lsl #5
    5158:	umlal	r0, r1, lr, ip
    515c:	ldrb	r3, [r2], #1
    5160:	cmp	r3, #0
    5164:	mov	lr, r0
    5168:	bne	5150 <ck_hash_str+0x24>
    516c:	pop	{fp, pc}
    5170:	mov	r1, #0
    5174:	movw	r0, #5381	; 0x1505
    5178:	pop	{fp, pc}

0000517c <ck_float_hash_lookup>:
    517c:	push	{r4, r5, fp, lr}
    5180:	add	fp, sp, #8
    5184:	sub	sp, sp, #8
    5188:	mov	r4, r0
    518c:	add	r5, sp, #2
    5190:	mov	r0, r5
    5194:	bl	51b0 <ck_float2str>
    5198:	mov	r0, r5
    519c:	mov	r1, #5
    51a0:	mov	r2, r4
    51a4:	bl	4ad0 <ck_str_n_hash_lookup@plt>
    51a8:	sub	sp, fp, #8
    51ac:	pop	{r4, r5, fp, pc}

000051b0 <ck_float2str>:
    51b0:	push	{fp, lr}
    51b4:	mov	fp, sp
    51b8:	vmov	r1, s0
    51bc:	str	r1, [r0]
    51c0:	mov	r1, #0
    51c4:	strb	r1, [r0, #5]
    51c8:	ldrb	lr, [r0]
    51cc:	ldrb	r2, [r0, #1]
    51d0:	ldrb	r3, [r0, #2]
    51d4:	ldrb	ip, [r0, #3]
    51d8:	orr	r1, ip, #8
    51dc:	strb	r1, [r0, #3]
    51e0:	orr	r1, r3, #4
    51e4:	strb	r1, [r0, #2]
    51e8:	orr	r1, r2, #2
    51ec:	strb	r1, [r0, #1]
    51f0:	orr	r1, lr, #1
    51f4:	strb	r1, [r0]
    51f8:	and	r1, r2, #2
    51fc:	and	r2, lr, #1
    5200:	orr	r1, r2, r1
    5204:	and	r2, r3, #4
    5208:	orr	r1, r1, r2
    520c:	and	r2, ip, #8
    5210:	orr	r1, r1, r2
    5214:	orr	r1, r1, #240	; 0xf0
    5218:	strb	r1, [r0, #4]
    521c:	pop	{fp, pc}

00005220 <ck_str_n_hash_lookup>:
    5220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5224:	add	fp, sp, #28
    5228:	sub	sp, sp, #20
    522c:	mov	r8, r1
    5230:	mov	r3, r0
    5234:	sub	r1, r1, #1
    5238:	mov	r0, #0
    523c:	cmp	r1, #126	; 0x7e
    5240:	bhi	531c <ck_str_n_hash_lookup+0xfc>
    5244:	mov	r4, r2
    5248:	ldr	r1, [r2, #12]
    524c:	ldr	r2, [r2, #8]
    5250:	orrs	r1, r2, r1
    5254:	beq	531c <ck_str_n_hash_lookup+0xfc>
    5258:	mov	r0, r3
    525c:	str	r3, [sp, #16]
    5260:	bl	4b84 <ck_hash_str@plt>
    5264:	str	r4, [sp, #4]
    5268:	ldr	sl, [r4]
    526c:	ldr	r9, [r4, #4]
    5270:	mov	r2, sl
    5274:	mov	r3, r9
    5278:	bl	25048 <__aeabi_uldivmod>
    527c:	mov	r6, r2
    5280:	mov	r7, r3
    5284:	subs	r0, r2, #1
    5288:	sbc	r1, r3, #0
    528c:	mov	r2, sl
    5290:	mov	r3, r9
    5294:	bl	25048 <__aeabi_uldivmod>
    5298:	eor	r0, r7, r3
    529c:	eor	r1, r6, r2
    52a0:	orrs	r0, r1, r0
    52a4:	beq	5318 <ck_str_n_hash_lookup+0xf8>
    52a8:	mov	r4, r2
    52ac:	mov	r5, r3
    52b0:	str	r9, [sp, #8]
    52b4:	str	sl, [sp, #12]
    52b8:	add	r8, r8, #1
    52bc:	ldr	r0, [sp, #4]
    52c0:	ldr	r9, [r0, #16]
    52c4:	add	sl, r6, r6, lsl #5
    52c8:	mov	r0, r9
    52cc:	ldrb	r1, [r0, sl, lsl #2]!
    52d0:	cmp	r1, #0
    52d4:	beq	5318 <ck_str_n_hash_lookup+0xf8>
    52d8:	ldr	r1, [sp, #16]
    52dc:	mov	r2, r8
    52e0:	bl	4f98 <strncmp@plt>
    52e4:	cmp	r0, #0
    52e8:	beq	5324 <ck_str_n_hash_lookup+0x104>
    52ec:	adds	r0, r6, #1
    52f0:	adc	r1, r7, #0
    52f4:	ldr	r2, [sp, #12]
    52f8:	ldr	r3, [sp, #8]
    52fc:	bl	25048 <__aeabi_uldivmod>
    5300:	mov	r6, r2
    5304:	mov	r7, r3
    5308:	eor	r0, r3, r5
    530c:	eor	r1, r2, r4
    5310:	orrs	r0, r1, r0
    5314:	bne	52c4 <ck_str_n_hash_lookup+0xa4>
    5318:	mov	r0, #0
    531c:	sub	sp, fp, #28
    5320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5324:	add	r0, r9, sl, lsl #2
    5328:	ldr	r0, [r0, #128]	; 0x80
    532c:	sub	sp, fp, #28
    5330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005334 <ck_float_hash_insert>:
    5334:	push	{r4, r5, r6, sl, fp, lr}
    5338:	add	fp, sp, #16
    533c:	sub	sp, sp, #8
    5340:	mov	r4, r1
    5344:	mov	r5, r0
    5348:	add	r6, sp, #2
    534c:	mov	r0, r6
    5350:	bl	51b0 <ck_float2str>
    5354:	mov	r0, r6
    5358:	mov	r1, #5
    535c:	mov	r2, r5
    5360:	mov	r3, r4
    5364:	bl	4d1c <ck_str_n_hash_insert@plt>
    5368:	sub	sp, fp, #16
    536c:	pop	{r4, r5, r6, sl, fp, pc}

00005370 <ck_str_n_hash_insert>:
    5370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5374:	add	fp, sp, #28
    5378:	sub	sp, sp, #28
    537c:	str	r0, [sp, #24]
    5380:	sub	r0, r1, #1
    5384:	mov	sl, #0
    5388:	cmp	r0, #126	; 0x7e
    538c:	bhi	5538 <ck_str_n_hash_insert+0x1c8>
    5390:	mov	r4, r3
    5394:	ldrd	r6, [r3]
    5398:	orrs	r0, r6, r7
    539c:	beq	5538 <ck_str_n_hash_insert+0x1c8>
    53a0:	mov	r8, r2
    53a4:	str	r1, [sp, #4]
    53a8:	mov	r1, r4
    53ac:	ldr	r0, [r1, #8]!
    53b0:	str	r1, [sp, #8]
    53b4:	ldr	r1, [r1, #4]
    53b8:	bl	24f00 <__aeabi_ul2d>
    53bc:	mov	r9, r0
    53c0:	mov	r5, r1
    53c4:	mov	r0, r6
    53c8:	mov	r1, r7
    53cc:	bl	24f00 <__aeabi_ul2d>
    53d0:	vmov.f64	d16, #104	; 0x3f400000  0.750
    53d4:	vmov	d17, r0, r1
    53d8:	vmul.f64	d16, d17, d16
    53dc:	vmov	d17, r9, r5
    53e0:	vcmpe.f64	d16, d17
    53e4:	vmrs	APSR_nzcv, fpscr
    53e8:	bhi	53fc <ck_str_n_hash_insert+0x8c>
    53ec:	mov	r0, r4
    53f0:	bl	4a4c <ck_hash_table_grow@plt>
    53f4:	cmn	r0, #1
    53f8:	beq	5538 <ck_str_n_hash_insert+0x1c8>
    53fc:	str	r8, [sp]
    5400:	ldr	r0, [sp, #24]
    5404:	bl	4b84 <ck_hash_str@plt>
    5408:	str	r4, [sp, #20]
    540c:	ldrd	r8, [r4]
    5410:	mov	r2, r8
    5414:	mov	r3, r9
    5418:	bl	25048 <__aeabi_uldivmod>
    541c:	mov	r4, r2
    5420:	mov	r7, r3
    5424:	orrs	r0, r2, r3
    5428:	beq	5444 <ck_str_n_hash_insert+0xd4>
    542c:	subs	r0, r4, #1
    5430:	sbc	r1, r7, #0
    5434:	mov	r2, r8
    5438:	mov	r3, r9
    543c:	bl	25048 <__aeabi_uldivmod>
    5440:	b	544c <ck_str_n_hash_insert+0xdc>
    5444:	subs	r2, r8, #1
    5448:	sbc	r3, r9, #0
    544c:	eor	r0, r4, r2
    5450:	eor	r1, r7, r3
    5454:	orrs	r0, r0, r1
    5458:	beq	5538 <ck_str_n_hash_insert+0x1c8>
    545c:	ldr	r0, [sp, #4]
    5460:	add	r0, r0, #1
    5464:	str	r0, [sp, #16]
    5468:	str	r2, [sp, #12]
    546c:	mov	sl, r3
    5470:	ldr	r0, [sp, #20]
    5474:	ldr	r5, [r0, #16]
    5478:	add	r6, r4, r4, lsl #5
    547c:	ldrb	r0, [r5, r6, lsl #2]!
    5480:	cmp	r0, #0
    5484:	bne	54a8 <ck_str_n_hash_insert+0x138>
    5488:	ldr	r2, [sp, #8]
    548c:	ldrd	r0, [r2]
    5490:	adds	r0, r0, #1
    5494:	adc	r1, r1, #0
    5498:	strd	r0, [r2]
    549c:	ldrb	r0, [r5]
    54a0:	cmp	r0, #0
    54a4:	beq	54fc <ck_str_n_hash_insert+0x18c>
    54a8:	mov	r0, r5
    54ac:	ldr	r1, [sp, #24]
    54b0:	ldr	r2, [sp, #16]
    54b4:	bl	4f98 <strncmp@plt>
    54b8:	cmp	r0, #0
    54bc:	beq	54fc <ck_str_n_hash_insert+0x18c>
    54c0:	adds	r0, r4, #1
    54c4:	adc	r1, r7, #0
    54c8:	mov	r2, r8
    54cc:	mov	r3, r9
    54d0:	bl	25048 <__aeabi_uldivmod>
    54d4:	mov	r4, r2
    54d8:	mov	r7, r3
    54dc:	mov	r3, sl
    54e0:	eor	r0, r7, sl
    54e4:	ldr	r2, [sp, #12]
    54e8:	eor	r1, r4, r2
    54ec:	orrs	r0, r1, r0
    54f0:	bne	546c <ck_str_n_hash_insert+0xfc>
    54f4:	mov	sl, #0
    54f8:	b	5538 <ck_str_n_hash_insert+0x1c8>
    54fc:	mov	r0, r5
    5500:	ldr	r1, [sp, #24]
    5504:	ldr	r4, [sp, #4]
    5508:	mov	r2, r4
    550c:	bl	4998 <memcpy@plt>
    5510:	ldr	r2, [sp, #20]
    5514:	ldr	r0, [r2, #16]
    5518:	add	r0, r0, r6, lsl #2
    551c:	mov	r1, #0
    5520:	strb	r1, [r0, r4]
    5524:	ldr	r0, [r2, #16]
    5528:	add	r0, r0, r6, lsl #2
    552c:	ldr	r1, [sp]
    5530:	str	r1, [r0, #128]	; 0x80
    5534:	mov	sl, #1
    5538:	mov	r0, sl
    553c:	sub	sp, fp, #28
    5540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005544 <ck_double_hash_lookup>:
    5544:	push	{r4, r5, fp, lr}
    5548:	add	fp, sp, #8
    554c:	sub	sp, sp, #16
    5550:	mov	r4, r0
    5554:	add	r5, sp, #5
    5558:	mov	r0, r5
    555c:	bl	5578 <ck_double2str>
    5560:	mov	r0, r5
    5564:	mov	r1, #10
    5568:	mov	r2, r4
    556c:	bl	4ad0 <ck_str_n_hash_lookup@plt>
    5570:	sub	sp, fp, #8
    5574:	pop	{r4, r5, fp, pc}

00005578 <ck_double2str>:
    5578:	push	{r4, r5, r6, r7, fp, lr}
    557c:	add	fp, sp, #16
    5580:	vst1.8	{d0}, [r0]
    5584:	mov	r1, #0
    5588:	strb	r1, [r0, #10]
    558c:	ldrb	lr, [r0]
    5590:	ldrb	r2, [r0, #1]
    5594:	ldrb	r3, [r0, #2]
    5598:	ldrb	ip, [r0, #3]
    559c:	orr	r1, ip, #8
    55a0:	strb	r1, [r0, #3]
    55a4:	orr	r1, r3, #4
    55a8:	strb	r1, [r0, #2]
    55ac:	orr	r1, r2, #2
    55b0:	strb	r1, [r0, #1]
    55b4:	orr	r1, lr, #1
    55b8:	strb	r1, [r0]
    55bc:	ldrb	r1, [r0, #4]
    55c0:	orr	r4, r1, #1
    55c4:	strb	r4, [r0, #4]
    55c8:	ldrb	r4, [r0, #5]
    55cc:	orr	r5, r4, #2
    55d0:	strb	r5, [r0, #5]
    55d4:	ldrb	r5, [r0, #6]
    55d8:	orr	r6, r5, #4
    55dc:	strb	r6, [r0, #6]
    55e0:	ldrb	r6, [r0, #7]
    55e4:	orr	r7, r6, #8
    55e8:	strb	r7, [r0, #7]
    55ec:	and	r2, r2, #2
    55f0:	and	r7, lr, #1
    55f4:	orr	r2, r7, r2
    55f8:	and	r3, r3, #4
    55fc:	orr	r2, r2, r3
    5600:	and	r3, ip, #8
    5604:	orr	r2, r2, r3
    5608:	orr	r2, r2, #240	; 0xf0
    560c:	strb	r2, [r0, #8]
    5610:	and	r2, r4, #2
    5614:	and	r1, r1, #1
    5618:	orr	r1, r1, r2
    561c:	and	r2, r5, #4
    5620:	orr	r1, r1, r2
    5624:	and	r2, r6, #8
    5628:	orr	r1, r1, r2
    562c:	orr	r1, r1, #240	; 0xf0
    5630:	strb	r1, [r0, #9]
    5634:	pop	{r4, r5, r6, r7, fp, pc}

00005638 <ck_double_hash_insert>:
    5638:	push	{r4, r5, r6, sl, fp, lr}
    563c:	add	fp, sp, #16
    5640:	sub	sp, sp, #16
    5644:	mov	r4, r1
    5648:	mov	r5, r0
    564c:	add	r6, sp, #5
    5650:	mov	r0, r6
    5654:	bl	5578 <ck_double2str>
    5658:	mov	r0, r6
    565c:	mov	r1, #10
    5660:	mov	r2, r5
    5664:	mov	r3, r4
    5668:	bl	4d1c <ck_str_n_hash_insert@plt>
    566c:	sub	sp, fp, #16
    5670:	pop	{r4, r5, r6, sl, fp, pc}

00005674 <ck_str_hash_lookup>:
    5674:	push	{r4, r5, fp, lr}
    5678:	add	fp, sp, #8
    567c:	mov	r4, r1
    5680:	mov	r5, r0
    5684:	bl	4c8c <strlen@plt>
    5688:	mov	r1, r0
    568c:	cmp	r0, #127	; 0x7f
    5690:	movcs	r1, #127	; 0x7f
    5694:	mov	r0, r5
    5698:	mov	r2, r4
    569c:	pop	{r4, r5, fp, lr}
    56a0:	b	5220 <ck_str_n_hash_lookup>

000056a4 <ck_str_hash_insert>:
    56a4:	push	{r4, r5, r6, sl, fp, lr}
    56a8:	add	fp, sp, #16
    56ac:	mov	r4, r2
    56b0:	mov	r5, r1
    56b4:	mov	r6, r0
    56b8:	bl	4c8c <strlen@plt>
    56bc:	mov	r1, r0
    56c0:	cmp	r0, #127	; 0x7f
    56c4:	movcs	r1, #127	; 0x7f
    56c8:	mov	r0, r6
    56cc:	mov	r2, r5
    56d0:	mov	r3, r4
    56d4:	pop	{r4, r5, r6, sl, fp, lr}
    56d8:	b	5370 <ck_str_n_hash_insert>

000056dc <ck_hash_table_grow>:
    56dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    56e0:	add	fp, sp, #28
    56e4:	sub	sp, sp, #4
    56e8:	mov	r5, r0
    56ec:	ldrd	r8, [r0]
    56f0:	ldr	sl, [r0, #16]
    56f4:	lsl	r7, r8, #1
    56f8:	mov	r0, r7
    56fc:	mov	r1, #132	; 0x84
    5700:	bl	47d0 <calloc@plt>
    5704:	str	r0, [r5, #16]
    5708:	cmp	r0, #0
    570c:	beq	5778 <ck_hash_table_grow+0x9c>
    5710:	lsl	r0, r9, #1
    5714:	orr	r0, r0, r8, lsr #31
    5718:	mov	r6, #0
    571c:	str	r7, [r5]
    5720:	stmib	r5, {r0, r6}
    5724:	str	r6, [r5, #12]
    5728:	orrs	r0, r8, r9
    572c:	beq	5780 <ck_hash_table_grow+0xa4>
    5730:	mov	r4, #1
    5734:	mov	r7, sl
    5738:	b	5754 <ck_hash_table_grow+0x78>
    573c:	add	r7, r7, #132	; 0x84
    5740:	add	r0, r4, #1
    5744:	subs	r1, r4, r8
    5748:	rscs	r1, r9, #0
    574c:	mov	r4, r0
    5750:	bcs	5780 <ck_hash_table_grow+0xa4>
    5754:	ldrb	r0, [r7]
    5758:	cmp	r0, #0
    575c:	beq	573c <ck_hash_table_grow+0x60>
    5760:	ldr	r1, [r7, #128]	; 0x80
    5764:	mov	r0, r7
    5768:	mov	r2, r5
    576c:	bl	4f8c <ck_str_hash_insert@plt>
    5770:	cmp	r0, #0
    5774:	bne	573c <ck_hash_table_grow+0x60>
    5778:	mvn	r6, #0
    577c:	b	5788 <ck_hash_table_grow+0xac>
    5780:	mov	r0, sl
    5784:	bl	4938 <free@plt>
    5788:	mov	r0, r6
    578c:	sub	sp, fp, #28
    5790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005794 <ck_hash_table_init>:
    5794:	push	{r4, r5, r6, sl, fp, lr}
    5798:	add	fp, sp, #16
    579c:	mov	r6, r0
    57a0:	mov	r0, #24
    57a4:	bl	4b90 <malloc@plt>
    57a8:	mov	r5, #0
    57ac:	cmp	r0, #0
    57b0:	beq	57f4 <ck_hash_table_init+0x60>
    57b4:	mov	r4, r0
    57b8:	add	r0, r6, r6, lsl #5
    57bc:	lsl	r0, r0, #3
    57c0:	bl	4b90 <malloc@plt>
    57c4:	str	r0, [r4, #16]
    57c8:	cmp	r0, #0
    57cc:	beq	57fc <ck_hash_table_init+0x68>
    57d0:	mov	r0, #0
    57d4:	lsl	r1, r6, #1
    57d8:	str	r1, [r4]
    57dc:	str	r0, [r4, #4]
    57e0:	str	r0, [r4, #8]
    57e4:	str	r0, [r4, #12]
    57e8:	mov	r0, r4
    57ec:	bl	4890 <ck_hash_table_wipe@plt>
    57f0:	mov	r5, r4
    57f4:	mov	r0, r5
    57f8:	pop	{r4, r5, r6, sl, fp, pc}
    57fc:	mov	r0, r4
    5800:	bl	4938 <free@plt>
    5804:	mov	r0, r5
    5808:	pop	{r4, r5, r6, sl, fp, pc}

0000580c <ck_hash_table_wipe>:
    580c:	ldr	r1, [r0]
    5810:	ldr	r0, [r0, #16]
    5814:	add	r1, r1, r1, lsl #5
    5818:	lsl	r2, r1, #2
    581c:	mov	r1, #0
    5820:	b	4d28 <memset@plt>

00005824 <ck_hash_table_free>:
    5824:	push	{r4, sl, fp, lr}
    5828:	add	fp, sp, #8
    582c:	mov	r4, r0
    5830:	ldr	r0, [r0, #16]
    5834:	bl	4938 <free@plt>
    5838:	mov	r0, r4
    583c:	pop	{r4, sl, fp, lr}
    5840:	b	4938 <free@plt>

00005844 <machine_is_little_endian>:
    5844:	mov	r0, #1
    5848:	bx	lr

0000584c <ones_to_twos_complement1>:
    584c:	bx	lr

00005850 <ones_to_twos_complement2>:
    5850:	uxth	r1, r0
    5854:	add	r0, r0, r1, lsr #15
    5858:	sxth	r0, r0
    585c:	bx	lr

00005860 <ones_to_twos_complement4>:
    5860:	add	r0, r0, r0, lsr #31
    5864:	bx	lr

00005868 <twos_to_ones_complement1>:
    5868:	bx	lr

0000586c <twos_to_ones_complement2>:
    586c:	add	r0, r0, r0, lsr #15
    5870:	sxth	r0, r0
    5874:	bx	lr

00005878 <twos_to_ones_complement4>:
    5878:	add	r0, r0, r0, asr #31
    587c:	bx	lr

00005880 <byteswap2>:
    5880:	rev16	r0, r0
    5884:	bx	lr

00005888 <byteswap4>:
    5888:	rev	r0, r0
    588c:	bx	lr

00005890 <byteswap8>:
    5890:	rev	r2, r1
    5894:	rev	r1, r0
    5898:	mov	r0, r2
    589c:	bx	lr

000058a0 <byteswap_float>:
    58a0:	push	{fp, lr}
    58a4:	mov	fp, sp
    58a8:	vmov	r0, s0
    58ac:	bl	480c <byteswap4@plt>
    58b0:	vmov	s0, r0
    58b4:	pop	{fp, pc}

000058b8 <byteswap_double>:
    58b8:	push	{fp, lr}
    58bc:	mov	fp, sp
    58c0:	vmov	r0, r1, d0
    58c4:	bl	47f4 <byteswap8@plt>
    58c8:	vmov	d0, r0, r1
    58cc:	pop	{fp, pc}

000058d0 <readstat_convert>:
    58d0:	push	{r4, r5, r6, sl, fp, lr}
    58d4:	add	fp, sp, #16
    58d8:	sub	sp, sp, #24
    58dc:	mov	r5, r1
    58e0:	mov	r4, r0
    58e4:	str	r2, [sp, #20]
    58e8:	sub	r0, r2, #1
    58ec:	ldr	ip, [fp, #8]
    58f0:	mov	r6, r3
    58f4:	cmp	r3, #0
    58f8:	beq	590c <readstat_convert+0x3c>
    58fc:	ldrb	r1, [r0, r6]
    5900:	sub	r3, r6, #1
    5904:	cmp	r1, #32
    5908:	beq	58f0 <readstat_convert+0x20>
    590c:	str	r6, [sp, #16]
    5910:	mov	r0, #19
    5914:	cmp	r5, #0
    5918:	beq	5994 <readstat_convert+0xc4>
    591c:	cmp	ip, #0
    5920:	beq	5970 <readstat_convert+0xa0>
    5924:	sub	r0, r5, #1
    5928:	str	r0, [sp, #12]
    592c:	str	r4, [sp, #8]
    5930:	add	r0, sp, #12
    5934:	str	r0, [sp]
    5938:	add	r1, sp, #20
    593c:	add	r2, sp, #16
    5940:	add	r3, sp, #8
    5944:	mov	r0, ip
    5948:	bl	4860 <iconv@plt>
    594c:	cmn	r0, #1
    5950:	beq	599c <readstat_convert+0xcc>
    5954:	ldr	r0, [sp, #12]
    5958:	mvn	r0, r0
    595c:	add	r1, r0, r5
    5960:	mov	r0, #0
    5964:	strb	r0, [r4, r1]
    5968:	sub	sp, fp, #16
    596c:	pop	{r4, r5, r6, sl, fp, pc}
    5970:	add	r1, r6, #1
    5974:	cmp	r1, r5
    5978:	bhi	5994 <readstat_convert+0xc4>
    597c:	mov	r0, r4
    5980:	mov	r1, r2
    5984:	mov	r2, r6
    5988:	bl	4998 <memcpy@plt>
    598c:	mov	r0, #0
    5990:	strb	r0, [r4, r6]
    5994:	sub	sp, fp, #16
    5998:	pop	{r4, r5, r6, sl, fp, pc}
    599c:	bl	4cec <__errno_location@plt>
    59a0:	ldr	r0, [r0]
    59a4:	cmp	r0, #7
    59a8:	beq	59c8 <readstat_convert+0xf8>
    59ac:	cmp	r0, #22
    59b0:	beq	5954 <readstat_convert+0x84>
    59b4:	cmp	r0, #84	; 0x54
    59b8:	moveq	r0, #17
    59bc:	movne	r0, #16
    59c0:	sub	sp, fp, #16
    59c4:	pop	{r4, r5, r6, sl, fp, pc}
    59c8:	mov	r0, #19
    59cc:	sub	sp, fp, #16
    59d0:	pop	{r4, r5, r6, sl, fp, pc}

000059d4 <readstat_error_message>:
    59d4:	cmp	r0, #39	; 0x27
    59d8:	bhi	59ec <readstat_error_message+0x18>
    59dc:	ldr	r1, [pc, #20]	; 59f8 <readstat_error_message+0x24>
    59e0:	add	r1, pc, r1
    59e4:	ldr	r0, [r1, r0, lsl #2]
    59e8:	bx	lr
    59ec:	ldr	r0, [pc, #8]	; 59fc <readstat_error_message+0x28>
    59f0:	add	r0, pc, r0
    59f4:	bx	lr
    59f8:	.word	0x0003f478
    59fc:	.word	0x00020048

00005a00 <unistd_open_handler>:
    5a00:	push	{r4, sl, fp, lr}
    5a04:	add	fp, sp, #8
    5a08:	mov	r4, r1
    5a0c:	mov	r1, #0
    5a10:	bl	4c2c <open@plt>
    5a14:	str	r0, [r4]
    5a18:	pop	{r4, sl, fp, pc}

00005a1c <unistd_close_handler>:
    5a1c:	ldr	r0, [r0]
    5a20:	cmn	r0, #1
    5a24:	moveq	r0, #0
    5a28:	bxeq	lr
    5a2c:	b	4fb0 <close@plt>

00005a30 <unistd_seek_handler>:
    5a30:	mov	r3, r1
    5a34:	cmp	r1, #2
    5a38:	mvnhi	r0, #0
    5a3c:	bxhi	lr
    5a40:	mov	r1, r0
    5a44:	ldr	r0, [r2]
    5a48:	mov	r2, r3
    5a4c:	b	49e0 <lseek@plt>

00005a50 <unistd_read_handler>:
    5a50:	mov	r3, r1
    5a54:	mov	r1, r0
    5a58:	ldr	r0, [r2]
    5a5c:	mov	r2, r3
    5a60:	b	48b4 <read@plt>

00005a64 <unistd_update_handler>:
    5a64:	push	{r4, r5, r6, sl, fp, lr}
    5a68:	add	fp, sp, #16
    5a6c:	cmp	r1, #0
    5a70:	beq	5ac4 <unistd_update_handler+0x60>
    5a74:	mov	r5, r2
    5a78:	mov	r4, r1
    5a7c:	mov	r6, r0
    5a80:	ldr	r0, [r3]
    5a84:	mov	r1, #0
    5a88:	mov	r2, #1
    5a8c:	bl	49e0 <lseek@plt>
    5a90:	cmn	r0, #1
    5a94:	beq	5acc <unistd_update_handler+0x68>
    5a98:	vmov	s0, r6
    5a9c:	vmov	s2, r0
    5aa0:	vcvt.f64.s32	d16, s0
    5aa4:	vcvt.f64.s32	d17, s2
    5aa8:	vdiv.f64	d0, d17, d16
    5aac:	mov	r0, r5
    5ab0:	blx	r4
    5ab4:	cmp	r0, #0
    5ab8:	movwne	r0, #1
    5abc:	lsl	r0, r0, #2
    5ac0:	pop	{r4, r5, r6, sl, fp, pc}
    5ac4:	mov	r0, #0
    5ac8:	pop	{r4, r5, r6, sl, fp, pc}
    5acc:	mov	r0, #15
    5ad0:	pop	{r4, r5, r6, sl, fp, pc}

00005ad4 <unistd_io_init>:
    5ad4:	push	{r4, r5, fp, lr}
    5ad8:	add	fp, sp, #8
    5adc:	mov	r4, r0
    5ae0:	ldr	r1, [pc, #164]	; 5b8c <unistd_io_init+0xb8>
    5ae4:	ldr	r1, [pc, r1]
    5ae8:	bl	47e8 <readstat_set_open_handler@plt>
    5aec:	cmp	r0, #0
    5af0:	bne	5b88 <unistd_io_init+0xb4>
    5af4:	ldr	r1, [pc, #148]	; 5b90 <unistd_io_init+0xbc>
    5af8:	ldr	r1, [pc, r1]
    5afc:	mov	r0, r4
    5b00:	bl	4f08 <readstat_set_close_handler@plt>
    5b04:	cmp	r0, #0
    5b08:	bne	5b88 <unistd_io_init+0xb4>
    5b0c:	ldr	r1, [pc, #128]	; 5b94 <unistd_io_init+0xc0>
    5b10:	ldr	r1, [pc, r1]
    5b14:	mov	r0, r4
    5b18:	bl	47dc <readstat_set_seek_handler@plt>
    5b1c:	cmp	r0, #0
    5b20:	bne	5b88 <unistd_io_init+0xb4>
    5b24:	ldr	r1, [pc, #108]	; 5b98 <unistd_io_init+0xc4>
    5b28:	ldr	r1, [pc, r1]
    5b2c:	mov	r0, r4
    5b30:	bl	4dd0 <readstat_set_read_handler@plt>
    5b34:	cmp	r0, #0
    5b38:	bne	5b88 <unistd_io_init+0xb4>
    5b3c:	ldr	r1, [pc, #88]	; 5b9c <unistd_io_init+0xc8>
    5b40:	ldr	r1, [pc, r1]
    5b44:	mov	r0, r4
    5b48:	bl	4908 <readstat_set_update_handler@plt>
    5b4c:	mov	r1, r0
    5b50:	mov	r0, #0
    5b54:	cmp	r1, #0
    5b58:	popne	{r4, r5, fp, pc}
    5b5c:	mov	r5, #1
    5b60:	mov	r0, #1
    5b64:	mov	r1, #4
    5b68:	bl	47d0 <calloc@plt>
    5b6c:	mov	r1, r0
    5b70:	mvn	r0, #0
    5b74:	str	r0, [r1]
    5b78:	mov	r0, r4
    5b7c:	bl	4b60 <readstat_set_io_ctx@plt>
    5b80:	ldr	r1, [r4, #32]
    5b84:	str	r5, [r1, #24]
    5b88:	pop	{r4, r5, fp, pc}
    5b8c:	.word	0x0003f7fc
    5b90:	.word	0x0003f818
    5b94:	.word	0x0003f7fc
    5b98:	.word	0x0003f79c
    5b9c:	.word	0x0003f7c0

00005ba0 <readstat_malloc>:
    5ba0:	sub	r1, r0, #1
    5ba4:	movw	r2, #61439	; 0xefff
    5ba8:	movt	r2, #255	; 0xff
    5bac:	cmp	r1, r2
    5bb0:	movhi	r0, #0
    5bb4:	bxhi	lr
    5bb8:	b	4b90 <malloc@plt>

00005bbc <readstat_calloc>:
    5bbc:	movw	r2, #61440	; 0xf000
    5bc0:	movt	r2, #255	; 0xff
    5bc4:	cmp	r0, r2
    5bc8:	bhi	5bdc <readstat_calloc+0x20>
    5bcc:	cmp	r1, r2
    5bd0:	mulls	r3, r1, r0
    5bd4:	cmpls	r3, r2
    5bd8:	bls	5be4 <readstat_calloc+0x28>
    5bdc:	mov	r0, #0
    5be0:	bx	lr
    5be4:	cmp	r0, #0
    5be8:	cmpne	r1, #0
    5bec:	beq	5bdc <readstat_calloc+0x20>
    5bf0:	b	47d0 <calloc@plt>

00005bf4 <readstat_realloc>:
    5bf4:	sub	r2, r1, #1
    5bf8:	movw	r3, #61440	; 0xf000
    5bfc:	movt	r3, #255	; 0xff
    5c00:	cmp	r2, r3
    5c04:	bcc	5c28 <readstat_realloc+0x34>
    5c08:	cmp	r0, #0
    5c0c:	beq	5c20 <readstat_realloc+0x2c>
    5c10:	push	{fp, lr}
    5c14:	mov	fp, sp
    5c18:	bl	4938 <free@plt>
    5c1c:	pop	{fp, lr}
    5c20:	mov	r0, #0
    5c24:	bx	lr
    5c28:	b	4a64 <realloc@plt>

00005c2c <readstat_get_row_count>:
    5c2c:	ldr	r0, [r0]
    5c30:	bx	lr

00005c34 <readstat_get_var_count>:
    5c34:	ldr	r0, [r0, #8]
    5c38:	bx	lr

00005c3c <readstat_get_creation_time>:
    5c3c:	ldr	r0, [r0, #16]
    5c40:	bx	lr

00005c44 <readstat_get_modified_time>:
    5c44:	ldr	r0, [r0, #20]
    5c48:	bx	lr

00005c4c <readstat_get_file_format_version>:
    5c4c:	ldr	r0, [r0, #24]
    5c50:	bx	lr

00005c54 <readstat_get_file_format_is_64bit>:
    5c54:	ldrb	r0, [r0, #52]	; 0x34
    5c58:	and	r0, r0, #1
    5c5c:	bx	lr

00005c60 <readstat_get_compression>:
    5c60:	ldr	r0, [r0, #32]
    5c64:	bx	lr

00005c68 <readstat_get_endianness>:
    5c68:	ldr	r0, [r0, #36]	; 0x24
    5c6c:	bx	lr

00005c70 <readstat_get_file_label>:
    5c70:	ldr	r0, [r0, #44]	; 0x2c
    5c74:	bx	lr

00005c78 <readstat_get_file_encoding>:
    5c78:	ldr	r0, [r0, #48]	; 0x30
    5c7c:	bx	lr

00005c80 <readstat_get_table_name>:
    5c80:	ldr	r0, [r0, #40]	; 0x28
    5c84:	bx	lr

00005c88 <readstat_parser_init>:
    5c88:	push	{r4, sl, fp, lr}
    5c8c:	add	fp, sp, #8
    5c90:	mov	r0, #1
    5c94:	mov	r1, #52	; 0x34
    5c98:	bl	47d0 <calloc@plt>
    5c9c:	mov	r4, r0
    5ca0:	mov	r0, #1
    5ca4:	mov	r1, #28
    5ca8:	bl	47d0 <calloc@plt>
    5cac:	str	r0, [r4, #32]
    5cb0:	mov	r0, r4
    5cb4:	bl	49ec <unistd_io_init@plt>
    5cb8:	cmp	r0, #0
    5cbc:	beq	5cd4 <readstat_parser_init+0x4c>
    5cc0:	mov	r0, r4
    5cc4:	bl	4b78 <readstat_parser_free@plt>
    5cc8:	mov	r4, #0
    5ccc:	mov	r0, r4
    5cd0:	pop	{r4, sl, fp, pc}
    5cd4:	ldr	r0, [pc, #12]	; 5ce8 <readstat_parser_init+0x60>
    5cd8:	add	r0, pc, r0
    5cdc:	str	r0, [r4, #40]	; 0x28
    5ce0:	mov	r0, r4
    5ce4:	pop	{r4, sl, fp, pc}
    5ce8:	.word	0x0001fd6e

00005cec <readstat_parser_free>:
    5cec:	cmp	r0, #0
    5cf0:	bxeq	lr
    5cf4:	push	{r4, sl, fp, lr}
    5cf8:	add	fp, sp, #8
    5cfc:	mov	r4, r0
    5d00:	ldr	r0, [r0, #32]
    5d04:	cmp	r0, #0
    5d08:	beq	5d20 <readstat_parser_free+0x34>
    5d0c:	mov	r0, r4
    5d10:	mov	r1, #0
    5d14:	bl	4b60 <readstat_set_io_ctx@plt>
    5d18:	ldr	r0, [r4, #32]
    5d1c:	bl	4938 <free@plt>
    5d20:	mov	r0, r4
    5d24:	pop	{r4, sl, fp, lr}
    5d28:	b	4938 <free@plt>

00005d2c <readstat_set_io_ctx>:
    5d2c:	push	{r4, r5, fp, lr}
    5d30:	add	fp, sp, #8
    5d34:	mov	r4, r1
    5d38:	mov	r5, r0
    5d3c:	ldr	r0, [r0, #32]
    5d40:	ldr	r1, [r0, #24]
    5d44:	cmp	r1, #0
    5d48:	beq	5d54 <readstat_set_io_ctx+0x28>
    5d4c:	ldr	r0, [r0, #20]
    5d50:	bl	4938 <free@plt>
    5d54:	ldr	r0, [r5, #32]
    5d58:	mov	r1, #0
    5d5c:	str	r4, [r0, #20]
    5d60:	str	r1, [r0, #24]
    5d64:	mov	r0, #0
    5d68:	pop	{r4, r5, fp, pc}

00005d6c <readstat_set_metadata_handler>:
    5d6c:	str	r1, [r0]
    5d70:	mov	r0, #0
    5d74:	bx	lr

00005d78 <readstat_set_note_handler>:
    5d78:	str	r1, [r0, #4]
    5d7c:	mov	r0, #0
    5d80:	bx	lr

00005d84 <readstat_set_variable_handler>:
    5d84:	str	r1, [r0, #8]
    5d88:	mov	r0, #0
    5d8c:	bx	lr

00005d90 <readstat_set_value_handler>:
    5d90:	str	r1, [r0, #16]
    5d94:	mov	r0, #0
    5d98:	bx	lr

00005d9c <readstat_set_value_label_handler>:
    5d9c:	str	r1, [r0, #20]
    5da0:	mov	r0, #0
    5da4:	bx	lr

00005da8 <readstat_set_error_handler>:
    5da8:	str	r1, [r0, #24]
    5dac:	mov	r0, #0
    5db0:	bx	lr

00005db4 <readstat_set_progress_handler>:
    5db4:	str	r1, [r0, #28]
    5db8:	mov	r0, #0
    5dbc:	bx	lr

00005dc0 <readstat_set_fweight_handler>:
    5dc0:	str	r1, [r0, #12]
    5dc4:	mov	r0, #0
    5dc8:	bx	lr

00005dcc <readstat_set_open_handler>:
    5dcc:	ldr	r0, [r0, #32]
    5dd0:	str	r1, [r0]
    5dd4:	mov	r0, #0
    5dd8:	bx	lr

00005ddc <readstat_set_close_handler>:
    5ddc:	ldr	r0, [r0, #32]
    5de0:	str	r1, [r0, #4]
    5de4:	mov	r0, #0
    5de8:	bx	lr

00005dec <readstat_set_seek_handler>:
    5dec:	ldr	r0, [r0, #32]
    5df0:	str	r1, [r0, #8]
    5df4:	mov	r0, #0
    5df8:	bx	lr

00005dfc <readstat_set_read_handler>:
    5dfc:	ldr	r0, [r0, #32]
    5e00:	str	r1, [r0, #12]
    5e04:	mov	r0, #0
    5e08:	bx	lr

00005e0c <readstat_set_update_handler>:
    5e0c:	ldr	r0, [r0, #32]
    5e10:	str	r1, [r0, #16]
    5e14:	mov	r0, #0
    5e18:	bx	lr

00005e1c <readstat_set_file_character_encoding>:
    5e1c:	str	r1, [r0, #36]	; 0x24
    5e20:	mov	r0, #0
    5e24:	bx	lr

00005e28 <readstat_set_handler_character_encoding>:
    5e28:	str	r1, [r0, #40]	; 0x28
    5e2c:	mov	r0, #0
    5e30:	bx	lr

00005e34 <readstat_set_row_limit>:
    5e34:	str	r1, [r0, #44]	; 0x2c
    5e38:	mov	r0, #0
    5e3c:	bx	lr

00005e40 <readstat_set_row_offset>:
    5e40:	str	r1, [r0, #48]	; 0x30
    5e44:	mov	r0, #0
    5e48:	bx	lr
    5e4c:	andeq	r0, r0, r0

00005e50 <readstat_type_class>:
    5e50:	mov	r1, r0
    5e54:	mov	r0, #0
    5e58:	cmp	r1, #0
    5e5c:	cmpne	r1, #6
    5e60:	movne	r0, #1
    5e64:	bx	lr

00005e68 <readstat_value_type>:
    5e68:	mov	r0, r2
    5e6c:	bx	lr

00005e70 <readstat_value_type_class>:
    5e70:	mov	r0, r2
    5e74:	b	5e50 <readstat_type_class>

00005e78 <readstat_value_tag>:
    5e78:	uxtb	r0, r3
    5e7c:	bx	lr

00005e80 <readstat_value_is_missing>:
    5e80:	mov	ip, #1
    5e84:	tst	r3, #768	; 0x300
    5e88:	beq	5e94 <readstat_value_is_missing+0x14>
    5e8c:	mov	r0, ip
    5e90:	bx	lr
    5e94:	ldr	ip, [sp]
    5e98:	cmp	ip, #0
    5e9c:	beq	5ea4 <readstat_value_is_missing+0x24>
    5ea0:	b	5eb0 <readstat_value_is_defined_missing>
    5ea4:	mov	ip, #0
    5ea8:	mov	r0, ip
    5eac:	bx	lr

00005eb0 <readstat_value_is_defined_missing>:
    5eb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    5eb4:	add	fp, sp, #24
    5eb8:	mov	r8, r3
    5ebc:	mov	r9, r2
    5ec0:	mov	r7, r1
    5ec4:	mov	r4, r0
    5ec8:	bl	4b54 <readstat_value_type_class@plt>
    5ecc:	mov	r5, r0
    5ed0:	ldr	r6, [fp, #8]
    5ed4:	mov	r0, r6
    5ed8:	bl	4fe0 <readstat_variable_get_type_class@plt>
    5edc:	cmp	r5, r0
    5ee0:	bne	5f14 <readstat_value_is_defined_missing+0x64>
    5ee4:	cmp	r5, #1
    5ee8:	beq	5f1c <readstat_value_is_defined_missing+0x6c>
    5eec:	cmp	r5, #0
    5ef0:	bne	5f14 <readstat_value_is_defined_missing+0x64>
    5ef4:	mov	r0, r4
    5ef8:	mov	r1, r7
    5efc:	mov	r2, r9
    5f00:	mov	r3, r8
    5f04:	bl	4a10 <readstat_string_value@plt>
    5f08:	mov	r1, r6
    5f0c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    5f10:	b	5f4c <readstat_string_is_defined_missing>
    5f14:	mov	r0, #0
    5f18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    5f1c:	mov	r0, r4
    5f20:	mov	r1, r7
    5f24:	mov	r2, r9
    5f28:	mov	r3, r8
    5f2c:	bl	4c38 <readstat_double_value@plt>
    5f30:	mov	r0, r6
    5f34:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    5f38:	b	6058 <readstat_double_is_defined_missing>

00005f3c <readstat_value_is_system_missing>:
    5f3c:	ubfx	r0, r3, #8, #1
    5f40:	bx	lr

00005f44 <readstat_value_is_tagged_missing>:
    5f44:	ubfx	r0, r3, #9, #1
    5f48:	bx	lr

00005f4c <readstat_string_is_defined_missing>:
    5f4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5f50:	add	fp, sp, #28
    5f54:	sub	sp, sp, #44	; 0x2c
    5f58:	mov	r5, #0
    5f5c:	str	r0, [sp, #4]
    5f60:	cmp	r0, #0
    5f64:	beq	602c <readstat_string_is_defined_missing+0xe0>
    5f68:	mov	r4, r1
    5f6c:	mov	r0, r1
    5f70:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
    5f74:	cmp	r0, #1
    5f78:	blt	602c <readstat_string_is_defined_missing+0xe0>
    5f7c:	mov	r6, r0
    5f80:	add	r0, sp, #8
    5f84:	add	r9, r0, #8
    5f88:	add	r0, sp, #24
    5f8c:	add	sl, r0, #8
    5f90:	mov	r7, #0
    5f94:	b	5fa4 <readstat_string_is_defined_missing+0x58>
    5f98:	add	r7, r7, #1
    5f9c:	cmp	r6, r7
    5fa0:	beq	6028 <readstat_string_is_defined_missing+0xdc>
    5fa4:	add	r0, sp, #24
    5fa8:	mov	r1, r4
    5fac:	mov	r2, r7
    5fb0:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
    5fb4:	ldrd	r2, [sl]
    5fb8:	ldr	r0, [sp, #24]
    5fbc:	ldr	r1, [sp, #28]
    5fc0:	bl	4a10 <readstat_string_value@plt>
    5fc4:	mov	r5, r0
    5fc8:	add	r0, sp, #8
    5fcc:	mov	r1, r4
    5fd0:	mov	r2, r7
    5fd4:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
    5fd8:	ldrd	r2, [r9]
    5fdc:	ldr	r0, [sp, #8]
    5fe0:	ldr	r1, [sp, #12]
    5fe4:	bl	4a10 <readstat_string_value@plt>
    5fe8:	cmp	r5, #0
    5fec:	movne	r8, r0
    5ff0:	cmpne	r0, #0
    5ff4:	beq	5f98 <readstat_string_is_defined_missing+0x4c>
    5ff8:	ldr	r0, [sp, #4]
    5ffc:	mov	r1, r5
    6000:	bl	4878 <strcmp@plt>
    6004:	cmp	r0, #0
    6008:	bmi	5f98 <readstat_string_is_defined_missing+0x4c>
    600c:	ldr	r0, [sp, #4]
    6010:	mov	r1, r8
    6014:	bl	4878 <strcmp@plt>
    6018:	cmp	r0, #1
    601c:	bge	5f98 <readstat_string_is_defined_missing+0x4c>
    6020:	mov	r5, #1
    6024:	b	602c <readstat_string_is_defined_missing+0xe0>
    6028:	mov	r5, #0
    602c:	mov	r0, r5
    6030:	sub	sp, fp, #28
    6034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00006038 <readstat_string_value>:
    6038:	push	{r4, sl, fp, lr}
    603c:	add	fp, sp, #8
    6040:	mov	r4, r0
    6044:	bl	4ddc <readstat_value_type@plt>
    6048:	cmp	r0, #0
    604c:	movne	r4, #0
    6050:	mov	r0, r4
    6054:	pop	{r4, sl, fp, pc}

00006058 <readstat_double_is_defined_missing>:
    6058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    605c:	add	fp, sp, #28
    6060:	sub	sp, sp, #4
    6064:	vpush	{d8-d9}
    6068:	sub	sp, sp, #32
    606c:	mov	r4, r0
    6070:	vmov.f64	d8, d0
    6074:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
    6078:	cmp	r0, #1
    607c:	blt	6108 <readstat_double_is_defined_missing+0xb0>
    6080:	mov	r5, r0
    6084:	mov	r8, sp
    6088:	add	sl, r8, #8
    608c:	add	r9, sp, #16
    6090:	add	r7, r9, #8
    6094:	mov	r6, #0
    6098:	b	60a8 <readstat_double_is_defined_missing+0x50>
    609c:	add	r6, r6, #1
    60a0:	cmp	r5, r6
    60a4:	beq	6108 <readstat_double_is_defined_missing+0xb0>
    60a8:	mov	r0, r9
    60ac:	mov	r1, r4
    60b0:	mov	r2, r6
    60b4:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
    60b8:	ldrd	r2, [r7]
    60bc:	ldr	r0, [sp, #16]
    60c0:	ldr	r1, [sp, #20]
    60c4:	bl	4c38 <readstat_double_value@plt>
    60c8:	vmov.f64	d9, d0
    60cc:	mov	r0, r8
    60d0:	mov	r1, r4
    60d4:	mov	r2, r6
    60d8:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
    60dc:	ldrd	r2, [sl]
    60e0:	ldm	sp, {r0, r1}
    60e4:	bl	4c38 <readstat_double_value@plt>
    60e8:	vcmpe.f64	d9, d8
    60ec:	vmrs	APSR_nzcv, fpscr
    60f0:	bhi	609c <readstat_double_is_defined_missing+0x44>
    60f4:	vcmpe.f64	d0, d8
    60f8:	vmrs	APSR_nzcv, fpscr
    60fc:	blt	609c <readstat_double_is_defined_missing+0x44>
    6100:	mov	r0, #1
    6104:	b	610c <readstat_double_is_defined_missing+0xb4>
    6108:	mov	r0, #0
    610c:	sub	sp, fp, #48	; 0x30
    6110:	vpop	{d8-d9}
    6114:	add	sp, sp, #4
    6118:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    611c:	nop	{0}

00006120 <readstat_double_value>:
    6120:	push	{r4, r5, r6, sl, fp, lr}
    6124:	add	fp, sp, #16
    6128:	mov	r6, r2
    612c:	mov	r5, r1
    6130:	mov	r4, r0
    6134:	bl	4950 <readstat_value_is_system_missing@plt>
    6138:	vldr	d0, [pc, #104]	; 61a8 <readstat_double_value+0x88>
    613c:	cmp	r0, #0
    6140:	popne	{r4, r5, r6, sl, fp, pc}
    6144:	sub	r0, r6, #1
    6148:	cmp	r0, #4
    614c:	bhi	618c <readstat_double_value+0x6c>
    6150:	add	r1, pc, #4
    6154:	ldr	r0, [r1, r0, lsl #2]
    6158:	add	pc, r1, r0
    615c:	.word	0x00000014
    6160:	.word	0x0000001c
    6164:	.word	0x00000028
    6168:	.word	0x00000034
    616c:	.word	0x00000040
    6170:	sxtb	r0, r4
    6174:	b	617c <readstat_double_value+0x5c>
    6178:	sxth	r0, r4
    617c:	vmov	s0, r0
    6180:	b	6188 <readstat_double_value+0x68>
    6184:	vmov	s0, r4
    6188:	vcvt.f64.s32	d0, s0
    618c:	pop	{r4, r5, r6, sl, fp, pc}
    6190:	vmov	s0, r4
    6194:	vcvt.f64.f32	d0, s0
    6198:	pop	{r4, r5, r6, sl, fp, pc}
    619c:	vmov	d0, r4, r5
    61a0:	pop	{r4, r5, r6, sl, fp, pc}
    61a4:	nop	{0}
    61a8:	.word	0x00000000
    61ac:	.word	0x7ff80000

000061b0 <readstat_int8_value>:
    61b0:	push	{r4, r5, r6, sl, fp, lr}
    61b4:	add	fp, sp, #16
    61b8:	mov	r6, r2
    61bc:	mov	r5, r1
    61c0:	mov	r4, r0
    61c4:	bl	4950 <readstat_value_is_system_missing@plt>
    61c8:	cmp	r0, #0
    61cc:	beq	61dc <readstat_int8_value+0x2c>
    61d0:	mov	r4, #0
    61d4:	uxtb	r0, r4
    61d8:	pop	{r4, r5, r6, sl, fp, pc}
    61dc:	sub	r0, r6, #1
    61e0:	cmp	r0, #3
    61e4:	bcs	61f0 <readstat_int8_value+0x40>
    61e8:	uxtb	r0, r4
    61ec:	pop	{r4, r5, r6, sl, fp, pc}
    61f0:	cmp	r6, #4
    61f4:	beq	620c <readstat_int8_value+0x5c>
    61f8:	cmp	r6, #5
    61fc:	bne	61d0 <readstat_int8_value+0x20>
    6200:	vmov	d16, r4, r5
    6204:	vcvt.u32.f64	s0, d16
    6208:	b	6214 <readstat_int8_value+0x64>
    620c:	vmov	s0, r4
    6210:	vcvt.u32.f32	s0, s0
    6214:	vmov	r4, s0
    6218:	uxtb	r0, r4
    621c:	pop	{r4, r5, r6, sl, fp, pc}

00006220 <readstat_int16_value>:
    6220:	push	{r4, r5, r6, sl, fp, lr}
    6224:	add	fp, sp, #16
    6228:	mov	r6, r2
    622c:	mov	r5, r1
    6230:	mov	r4, r0
    6234:	bl	4950 <readstat_value_is_system_missing@plt>
    6238:	cmp	r0, #0
    623c:	beq	624c <readstat_int16_value+0x2c>
    6240:	mov	r4, #0
    6244:	sxth	r0, r4
    6248:	pop	{r4, r5, r6, sl, fp, pc}
    624c:	sub	r0, r6, #1
    6250:	cmp	r0, #4
    6254:	bhi	6240 <readstat_int16_value+0x20>
    6258:	add	r1, pc, #4
    625c:	ldr	r0, [r1, r0, lsl #2]
    6260:	add	pc, r1, r0
    6264:	.word	0x00000014
    6268:	.word	0xffffffe0
    626c:	.word	0xffffffe0
    6270:	.word	0x00000020
    6274:	.word	0x0000002c
    6278:	sxtb	r4, r4
    627c:	sxth	r0, r4
    6280:	pop	{r4, r5, r6, sl, fp, pc}
    6284:	vmov	s0, r4
    6288:	vcvt.s32.f32	s0, s0
    628c:	b	6298 <readstat_int16_value+0x78>
    6290:	vmov	d16, r4, r5
    6294:	vcvt.s32.f64	s0, d16
    6298:	vmov	r4, s0
    629c:	sxth	r0, r4
    62a0:	pop	{r4, r5, r6, sl, fp, pc}

000062a4 <readstat_int32_value>:
    62a4:	push	{r4, r5, r6, sl, fp, lr}
    62a8:	add	fp, sp, #16
    62ac:	mov	r6, r2
    62b0:	mov	r5, r1
    62b4:	mov	r4, r0
    62b8:	bl	4950 <readstat_value_is_system_missing@plt>
    62bc:	cmp	r0, #0
    62c0:	beq	62d0 <readstat_int32_value+0x2c>
    62c4:	mov	r4, #0
    62c8:	mov	r0, r4
    62cc:	pop	{r4, r5, r6, sl, fp, pc}
    62d0:	sub	r0, r6, #1
    62d4:	cmp	r0, #4
    62d8:	bhi	62c4 <readstat_int32_value+0x20>
    62dc:	add	r1, pc, #4
    62e0:	ldr	r0, [r1, r0, lsl #2]
    62e4:	add	pc, r1, r0
    62e8:	.word	0x00000014
    62ec:	.word	0x00000020
    62f0:	.word	0xffffffe0
    62f4:	.word	0x0000002c
    62f8:	.word	0x00000038
    62fc:	sxtb	r4, r4
    6300:	mov	r0, r4
    6304:	pop	{r4, r5, r6, sl, fp, pc}
    6308:	sxth	r4, r4
    630c:	mov	r0, r4
    6310:	pop	{r4, r5, r6, sl, fp, pc}
    6314:	vmov	s0, r4
    6318:	vcvt.s32.f32	s0, s0
    631c:	b	6328 <readstat_int32_value+0x84>
    6320:	vmov	d16, r4, r5
    6324:	vcvt.s32.f64	s0, d16
    6328:	vmov	r4, s0
    632c:	mov	r0, r4
    6330:	pop	{r4, r5, r6, sl, fp, pc}

00006334 <readstat_float_value>:
    6334:	push	{r4, r5, r6, sl, fp, lr}
    6338:	add	fp, sp, #16
    633c:	mov	r6, r2
    6340:	mov	r5, r1
    6344:	mov	r4, r0
    6348:	bl	4950 <readstat_value_is_system_missing@plt>
    634c:	cmp	r0, #0
    6350:	beq	635c <readstat_float_value+0x28>
    6354:	vldr	s0, [pc, #100]	; 63c0 <readstat_float_value+0x8c>
    6358:	pop	{r4, r5, r6, sl, fp, pc}
    635c:	sub	r0, r6, #1
    6360:	cmp	r0, #4
    6364:	bhi	6390 <readstat_float_value+0x5c>
    6368:	add	r1, pc, #4
    636c:	ldr	r0, [r1, r0, lsl #2]
    6370:	add	pc, r1, r0
    6374:	.word	0x00000014
    6378:	.word	0x00000024
    637c:	.word	0x00000034
    6380:	.word	0x0000001c
    6384:	.word	0x00000040
    6388:	sxtb	r0, r4
    638c:	b	639c <readstat_float_value+0x68>
    6390:	vmov	s0, r4
    6394:	pop	{r4, r5, r6, sl, fp, pc}
    6398:	sxth	r0, r4
    639c:	vmov	s0, r0
    63a0:	vcvt.f32.s32	s0, s0
    63a4:	pop	{r4, r5, r6, sl, fp, pc}
    63a8:	vmov	s0, r4
    63ac:	vcvt.f32.s32	s0, s0
    63b0:	pop	{r4, r5, r6, sl, fp, pc}
    63b4:	vmov	d16, r4, r5
    63b8:	vcvt.f32.f64	s0, d16
    63bc:	pop	{r4, r5, r6, sl, fp, pc}
    63c0:	.word	0x7fc00000

000063c4 <readstat_variable_get_name>:
    63c4:	ldrb	r1, [r0, #8]!
    63c8:	cmp	r1, #0
    63cc:	moveq	r0, r1
    63d0:	bx	lr

000063d4 <readstat_variable_get_label>:
    63d4:	ldrb	r1, [r0, #564]!	; 0x234
    63d8:	cmp	r1, #0
    63dc:	moveq	r0, r1
    63e0:	bx	lr

000063e4 <readstat_variable_get_format>:
    63e4:	ldrb	r1, [r0, #308]!	; 0x134
    63e8:	cmp	r1, #0
    63ec:	moveq	r0, r1
    63f0:	bx	lr

000063f4 <readstat_variable_get_type>:
    63f4:	ldr	r0, [r0]
    63f8:	bx	lr

000063fc <readstat_variable_get_type_class>:
    63fc:	ldr	r0, [r0]
    6400:	b	489c <readstat_type_class@plt>

00006404 <readstat_variable_get_index>:
    6404:	ldr	r0, [r0, #4]
    6408:	bx	lr

0000640c <readstat_variable_get_index_after_skipping>:
    640c:	ldr	r0, [r0, #2148]	; 0x864
    6410:	bx	lr

00006414 <readstat_variable_get_storage_width>:
    6414:	ldr	r0, [r0, #1596]	; 0x63c
    6418:	bx	lr

0000641c <readstat_variable_get_measure>:
    641c:	ldr	r0, [r0, #2128]	; 0x850
    6420:	bx	lr

00006424 <readstat_variable_get_alignment>:
    6424:	ldr	r0, [r0, #2132]	; 0x854
    6428:	bx	lr

0000642c <readstat_variable_get_display_width>:
    642c:	ldr	r0, [r0, #2136]	; 0x858
    6430:	bx	lr

00006434 <readstat_variable_get_missing_ranges_count>:
    6434:	ldr	r0, [r0, #2120]	; 0x848
    6438:	bx	lr

0000643c <readstat_variable_get_missing_range_lo>:
    643c:	push	{fp, lr}
    6440:	mov	fp, sp
    6444:	ldr	r3, [r1, #2120]	; 0x848
    6448:	cmp	r3, r2
    644c:	ble	6474 <readstat_variable_get_missing_range_lo+0x38>
    6450:	lsl	r2, r2, #1
    6454:	cmp	r2, #31
    6458:	bhi	6474 <readstat_variable_get_missing_range_lo+0x38>
    645c:	add	r1, r1, r2, lsl #4
    6460:	movw	r2, #1608	; 0x648
    6464:	add	r1, r1, r2
    6468:	vld1.64	{d16-d17}, [r1]
    646c:	vst1.64	{d16-d17}, [r0]
    6470:	pop	{fp, pc}
    6474:	bl	66e0 <make_blank_value>
    6478:	pop	{fp, pc}

0000647c <readstat_variable_get_missing_range_hi>:
    647c:	push	{fp, lr}
    6480:	mov	fp, sp
    6484:	ldr	r3, [r1, #2120]	; 0x848
    6488:	cmp	r3, r2
    648c:	ble	64b8 <readstat_variable_get_missing_range_hi+0x3c>
    6490:	mov	r3, #1
    6494:	orr	r2, r3, r2, lsl #1
    6498:	cmp	r2, #31
    649c:	bhi	64b8 <readstat_variable_get_missing_range_hi+0x3c>
    64a0:	add	r1, r1, r2, lsl #4
    64a4:	movw	r2, #1608	; 0x648
    64a8:	add	r1, r1, r2
    64ac:	vld1.64	{d16-d17}, [r1]
    64b0:	vst1.64	{d16-d17}, [r0]
    64b4:	pop	{fp, pc}
    64b8:	bl	66e0 <make_blank_value>
    64bc:	pop	{fp, pc}

000064c0 <readstat_variable_add_missing_double_range>:
    64c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    64c4:	add	fp, sp, #24
    64c8:	vpush	{d8}
    64cc:	sub	sp, sp, #56	; 0x38
    64d0:	vmov.f64	d8, d1
    64d4:	mov	r8, r0
    64d8:	add	r0, sp, #40	; 0x28
    64dc:	bl	6598 <make_double_value>
    64e0:	add	r0, sp, #24
    64e4:	vmov.f64	d0, d8
    64e8:	bl	6598 <make_double_value>
    64ec:	ldr	r2, [sp, #40]	; 0x28
    64f0:	ldr	r3, [sp, #44]	; 0x2c
    64f4:	ldr	r0, [sp, #48]	; 0x30
    64f8:	ldr	r1, [sp, #52]	; 0x34
    64fc:	add	r7, sp, #24
    6500:	ldm	r7, {r4, r5, r6, r7}
    6504:	stm	sp, {r0, r1, r4, r5, r6, r7}
    6508:	mov	r0, r8
    650c:	bl	651c <readstat_variable_add_missing_value_range>
    6510:	sub	sp, fp, #32
    6514:	vpop	{d8}
    6518:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000651c <readstat_variable_add_missing_value_range>:
    651c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6520:	add	fp, sp, #24
    6524:	mov	r5, r3
    6528:	mov	r6, r2
    652c:	mov	r4, r0
    6530:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
    6534:	lsl	r1, r0, #1
    6538:	mov	r0, #31
    653c:	cmp	r1, #31
    6540:	bhi	6594 <readstat_variable_add_missing_value_range+0x78>
    6544:	ldr	ip, [fp, #28]
    6548:	ldr	lr, [fp, #24]
    654c:	ldr	r8, [fp, #20]
    6550:	ldr	r9, [fp, #16]
    6554:	ldr	r2, [fp, #12]
    6558:	ldr	r7, [fp, #8]
    655c:	movw	r3, #1608	; 0x648
    6560:	add	r0, r4, r3
    6564:	mov	r3, r0
    6568:	str	r6, [r3, r1, lsl #4]!
    656c:	stmib	r3, {r5, r7}
    6570:	str	r2, [r3, #12]
    6574:	orr	r1, r1, #1
    6578:	str	r9, [r0, r1, lsl #4]!
    657c:	stmib	r0, {r8, lr}
    6580:	str	ip, [r0, #12]
    6584:	ldr	r0, [r4, #2120]	; 0x848
    6588:	add	r0, r0, #1
    658c:	str	r0, [r4, #2120]	; 0x848
    6590:	mov	r0, #0
    6594:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00006598 <make_double_value>:
    6598:	mov	r1, #0
    659c:	strb	r1, [r0, #12]
    65a0:	mov	r1, #5
    65a4:	str	r1, [r0, #8]
    65a8:	vstr	d0, [r0]
    65ac:	ldrb	r1, [r0, #13]
    65b0:	and	r1, r1, #252	; 0xfc
    65b4:	strb	r1, [r0, #13]
    65b8:	bx	lr

000065bc <readstat_variable_add_missing_double_value>:
    65bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    65c0:	add	fp, sp, #24
    65c4:	vpush	{d8}
    65c8:	sub	sp, sp, #56	; 0x38
    65cc:	vmov.f64	d8, d0
    65d0:	mov	r8, r0
    65d4:	add	r0, sp, #40	; 0x28
    65d8:	bl	6598 <make_double_value>
    65dc:	add	r0, sp, #24
    65e0:	vmov.f64	d0, d8
    65e4:	bl	6598 <make_double_value>
    65e8:	ldr	r2, [sp, #40]	; 0x28
    65ec:	ldr	r3, [sp, #44]	; 0x2c
    65f0:	ldr	r0, [sp, #48]	; 0x30
    65f4:	ldr	r1, [sp, #52]	; 0x34
    65f8:	add	r7, sp, #24
    65fc:	ldm	r7, {r4, r5, r6, r7}
    6600:	stm	sp, {r0, r1, r4, r5, r6, r7}
    6604:	mov	r0, r8
    6608:	bl	651c <readstat_variable_add_missing_value_range>
    660c:	sub	sp, fp, #32
    6610:	vpop	{d8}
    6614:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00006618 <readstat_variable_add_missing_string_range>:
    6618:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    661c:	add	fp, sp, #24
    6620:	sub	sp, sp, #56	; 0x38
    6624:	mov	r4, r2
    6628:	mov	r8, r0
    662c:	add	r0, sp, #40	; 0x28
    6630:	bl	666c <make_string_value>
    6634:	add	r0, sp, #24
    6638:	mov	r1, r4
    663c:	bl	666c <make_string_value>
    6640:	ldr	r2, [sp, #40]	; 0x28
    6644:	ldr	r3, [sp, #44]	; 0x2c
    6648:	ldr	r0, [sp, #48]	; 0x30
    664c:	ldr	r1, [sp, #52]	; 0x34
    6650:	add	r7, sp, #24
    6654:	ldm	r7, {r4, r5, r6, r7}
    6658:	stm	sp, {r0, r1, r4, r5, r6, r7}
    665c:	mov	r0, r8
    6660:	bl	651c <readstat_variable_add_missing_value_range>
    6664:	sub	sp, fp, #24
    6668:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000666c <make_string_value>:
    666c:	mov	r2, #0
    6670:	strb	r2, [r0, #12]
    6674:	str	r2, [r0, #8]
    6678:	str	r1, [r0]
    667c:	ldrb	r1, [r0, #13]
    6680:	and	r1, r1, #252	; 0xfc
    6684:	strb	r1, [r0, #13]
    6688:	bx	lr

0000668c <readstat_variable_add_missing_string_value>:
    668c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    6690:	add	fp, sp, #24
    6694:	sub	sp, sp, #56	; 0x38
    6698:	mov	r4, r1
    669c:	mov	r8, r0
    66a0:	add	r0, sp, #40	; 0x28
    66a4:	bl	666c <make_string_value>
    66a8:	add	r0, sp, #24
    66ac:	mov	r1, r4
    66b0:	bl	666c <make_string_value>
    66b4:	ldr	r2, [sp, #40]	; 0x28
    66b8:	ldr	r3, [sp, #44]	; 0x2c
    66bc:	ldr	r0, [sp, #48]	; 0x30
    66c0:	ldr	r1, [sp, #52]	; 0x34
    66c4:	add	r7, sp, #24
    66c8:	ldm	r7, {r4, r5, r6, r7}
    66cc:	stm	sp, {r0, r1, r4, r5, r6, r7}
    66d0:	mov	r0, r8
    66d4:	bl	651c <readstat_variable_add_missing_value_range>
    66d8:	sub	sp, fp, #24
    66dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000066e0 <make_blank_value>:
    66e0:	ldr	r1, [pc, #12]	; 66f4 <make_blank_value+0x14>
    66e4:	add	r1, pc, r1
    66e8:	vld1.64	{d16-d17}, [r1]
    66ec:	vst1.64	{d16-d17}, [r0]
    66f0:	bx	lr
    66f4:	.word	0x0001f36c

000066f8 <readstat_string_ref_init>:
    66f8:	push	{r4, r5, r6, sl, fp, lr}
    66fc:	add	fp, sp, #16
    6700:	mov	r4, r0
    6704:	bl	4c8c <strlen@plt>
    6708:	mov	r5, r0
    670c:	add	r1, r0, #25
    6710:	mov	r0, #1
    6714:	bl	47d0 <calloc@plt>
    6718:	mov	r6, r0
    671c:	mvn	r0, #0
    6720:	add	r2, r5, #1
    6724:	str	r0, [r6]
    6728:	str	r0, [r6, #4]
    672c:	str	r0, [r6, #8]
    6730:	str	r0, [r6, #12]
    6734:	str	r2, [r6, #16]
    6738:	add	r0, r6, #20
    673c:	mov	r1, r4
    6740:	bl	4998 <memcpy@plt>
    6744:	mov	r0, r6
    6748:	pop	{r4, r5, r6, sl, fp, pc}

0000674c <readstat_writer_init>:
    674c:	push	{r4, r5, r6, sl, fp, lr}
    6750:	add	fp, sp, #16
    6754:	mov	r5, #1
    6758:	mov	r0, #1
    675c:	mov	r1, #312	; 0x138
    6760:	bl	47d0 <calloc@plt>
    6764:	mov	r4, r0
    6768:	mov	r6, #50	; 0x32
    676c:	mov	r0, #50	; 0x32
    6770:	mov	r1, #4
    6774:	bl	47d0 <calloc@plt>
    6778:	str	r6, [r4, #32]
    677c:	str	r0, [r4, #24]
    6780:	mov	r0, #50	; 0x32
    6784:	mov	r1, #4
    6788:	bl	47d0 <calloc@plt>
    678c:	str	r6, [r4, #44]	; 0x2c
    6790:	str	r0, [r4, #36]	; 0x24
    6794:	mov	r0, #50	; 0x32
    6798:	mov	r1, #4
    679c:	bl	47d0 <calloc@plt>
    67a0:	str	r6, [r4, #56]	; 0x38
    67a4:	str	r0, [r4, #48]	; 0x30
    67a8:	mov	r6, #100	; 0x64
    67ac:	mov	r0, #100	; 0x64
    67b0:	mov	r1, #4
    67b4:	bl	47d0 <calloc@plt>
    67b8:	str	r6, [r4, #68]	; 0x44
    67bc:	str	r0, [r4, #60]	; 0x3c
    67c0:	mov	r0, #0
    67c4:	bl	49c8 <time@plt>
    67c8:	str	r0, [r4, #20]
    67cc:	ldr	r0, [pc, #16]	; 67e4 <readstat_writer_init+0x98>
    67d0:	add	r0, pc, r0
    67d4:	str	r0, [r4, #280]	; 0x118
    67d8:	str	r5, [r4, #12]
    67dc:	mov	r0, r4
    67e0:	pop	{r4, r5, r6, sl, fp, pc}
    67e4:	.word	0x00000010

000067e8 <readstat_write_row_default_callback>:
    67e8:	b	6a14 <readstat_write_bytes>

000067ec <readstat_validate_variable>:
    67ec:	ldr	r2, [r0, #308]	; 0x134
    67f0:	cmp	r2, #0
    67f4:	moveq	r0, #14
    67f8:	bxeq	lr
    67fc:	ldr	r2, [r0, #232]	; 0xe8
    6800:	cmp	r2, #0
    6804:	moveq	r0, #0
    6808:	bxeq	lr
    680c:	mov	r0, r1
    6810:	bx	r2

00006814 <readstat_validate_metadata>:
    6814:	ldr	r1, [r0, #308]	; 0x134
    6818:	cmp	r1, #0
    681c:	moveq	r0, #14
    6820:	bxeq	lr
    6824:	ldr	r1, [r0, #292]	; 0x124
    6828:	cmp	r1, #0
    682c:	moveq	r0, #0
    6830:	bxeq	lr
    6834:	bx	r1

00006838 <readstat_writer_free>:
    6838:	cmp	r0, #0
    683c:	bxeq	lr
    6840:	push	{r4, r5, fp, lr}
    6844:	add	fp, sp, #8
    6848:	mov	r4, r0
    684c:	ldr	r1, [r0, #288]	; 0x120
    6850:	cmp	r1, #0
    6854:	beq	6868 <readstat_writer_free+0x30>
    6858:	ldr	r0, [r4, #300]	; 0x12c
    685c:	cmp	r0, #0
    6860:	beq	6868 <readstat_writer_free+0x30>
    6864:	blx	r1
    6868:	ldr	r0, [r4, #24]
    686c:	cmp	r0, #0
    6870:	beq	68a8 <readstat_writer_free+0x70>
    6874:	ldr	r0, [r4, #24]
    6878:	ldr	r1, [r4, #28]
    687c:	cmp	r1, #1
    6880:	blt	68a4 <readstat_writer_free+0x6c>
    6884:	mov	r5, #0
    6888:	ldr	r0, [r0, r5, lsl #2]
    688c:	bl	6984 <readstat_variable_free>
    6890:	add	r5, r5, #1
    6894:	ldr	r0, [r4, #24]
    6898:	ldr	r1, [r4, #28]
    689c:	cmp	r5, r1
    68a0:	blt	6888 <readstat_writer_free+0x50>
    68a4:	bl	4938 <free@plt>
    68a8:	ldr	r0, [r4, #36]	; 0x24
    68ac:	cmp	r0, #0
    68b0:	beq	68e8 <readstat_writer_free+0xb0>
    68b4:	ldr	r0, [r4, #36]	; 0x24
    68b8:	ldr	r1, [r4, #40]	; 0x28
    68bc:	cmp	r1, #1
    68c0:	blt	68e4 <readstat_writer_free+0xac>
    68c4:	mov	r5, #0
    68c8:	ldr	r0, [r0, r5, lsl #2]
    68cc:	bl	6988 <readstat_label_set_free>
    68d0:	add	r5, r5, #1
    68d4:	ldr	r0, [r4, #36]	; 0x24
    68d8:	ldr	r1, [r4, #40]	; 0x28
    68dc:	cmp	r5, r1
    68e0:	blt	68c8 <readstat_writer_free+0x90>
    68e4:	bl	4938 <free@plt>
    68e8:	ldr	r0, [r4, #48]	; 0x30
    68ec:	cmp	r0, #0
    68f0:	beq	6928 <readstat_writer_free+0xf0>
    68f4:	ldr	r0, [r4, #48]	; 0x30
    68f8:	ldr	r1, [r4, #52]	; 0x34
    68fc:	cmp	r1, #1
    6900:	blt	6924 <readstat_writer_free+0xec>
    6904:	mov	r5, #0
    6908:	ldr	r0, [r0, r5, lsl #2]
    690c:	bl	4938 <free@plt>
    6910:	add	r5, r5, #1
    6914:	ldr	r0, [r4, #48]	; 0x30
    6918:	ldr	r1, [r4, #52]	; 0x34
    691c:	cmp	r5, r1
    6920:	blt	6908 <readstat_writer_free+0xd0>
    6924:	bl	4938 <free@plt>
    6928:	ldr	r0, [r4, #60]	; 0x3c
    692c:	cmp	r0, #0
    6930:	beq	6968 <readstat_writer_free+0x130>
    6934:	ldr	r0, [r4, #60]	; 0x3c
    6938:	ldr	r1, [r4, #64]	; 0x40
    693c:	cmp	r1, #1
    6940:	blt	6964 <readstat_writer_free+0x12c>
    6944:	mov	r5, #0
    6948:	ldr	r0, [r0, r5, lsl #2]
    694c:	bl	4938 <free@plt>
    6950:	add	r5, r5, #1
    6954:	ldr	r0, [r4, #60]	; 0x3c
    6958:	ldr	r1, [r4, #64]	; 0x40
    695c:	cmp	r5, r1
    6960:	blt	6948 <readstat_writer_free+0x110>
    6964:	bl	4938 <free@plt>
    6968:	ldr	r0, [r4, #72]	; 0x48
    696c:	cmp	r0, #0
    6970:	beq	6978 <readstat_writer_free+0x140>
    6974:	bl	4938 <free@plt>
    6978:	mov	r0, r4
    697c:	pop	{r4, r5, fp, lr}
    6980:	b	4938 <free@plt>

00006984 <readstat_variable_free>:
    6984:	b	4938 <free@plt>

00006988 <readstat_label_set_free>:
    6988:	push	{r4, r5, r6, sl, fp, lr}
    698c:	add	fp, sp, #16
    6990:	mov	r4, r0
    6994:	ldr	r0, [r0, #264]	; 0x108
    6998:	cmp	r0, #1
    699c:	blt	69ec <readstat_label_set_free+0x64>
    69a0:	mov	r5, #0
    69a4:	b	69b8 <readstat_label_set_free+0x30>
    69a8:	ldr	r0, [r4, #264]	; 0x108
    69ac:	add	r5, r5, #1
    69b0:	cmp	r5, r0
    69b4:	bge	69ec <readstat_label_set_free+0x64>
    69b8:	mov	r0, r4
    69bc:	mov	r1, r5
    69c0:	bl	4f68 <readstat_get_value_label@plt>
    69c4:	mov	r6, r0
    69c8:	ldr	r0, [r0, #24]
    69cc:	cmp	r0, #0
    69d0:	beq	69d8 <readstat_label_set_free+0x50>
    69d4:	bl	4938 <free@plt>
    69d8:	ldr	r0, [r6, #16]
    69dc:	cmp	r0, #0
    69e0:	beq	69a8 <readstat_label_set_free+0x20>
    69e4:	bl	4938 <free@plt>
    69e8:	b	69a8 <readstat_label_set_free+0x20>
    69ec:	ldr	r0, [r4, #260]	; 0x104
    69f0:	bl	4938 <free@plt>
    69f4:	ldr	r0, [r4, #272]	; 0x110
    69f8:	bl	4938 <free@plt>
    69fc:	mov	r0, r4
    6a00:	pop	{r4, r5, r6, sl, fp, lr}
    6a04:	b	4938 <free@plt>

00006a08 <readstat_set_data_writer>:
    6a08:	str	r1, [r0]
    6a0c:	mov	r0, #0
    6a10:	bx	lr

00006a14 <readstat_write_bytes>:
    6a14:	push	{r4, r5, fp, lr}
    6a18:	add	fp, sp, #8
    6a1c:	mov	r5, r2
    6a20:	mov	r4, r0
    6a24:	ldr	r3, [r0]
    6a28:	ldr	r2, [r0, #304]	; 0x130
    6a2c:	mov	r0, r1
    6a30:	mov	r1, r5
    6a34:	blx	r3
    6a38:	mov	r1, r0
    6a3c:	mov	r0, #13
    6a40:	cmp	r1, r5
    6a44:	popcc	{r4, r5, fp, pc}
    6a48:	ldr	r0, [r4, #4]
    6a4c:	add	r0, r0, r1
    6a50:	str	r0, [r4, #4]
    6a54:	mov	r0, #0
    6a58:	pop	{r4, r5, fp, pc}

00006a5c <readstat_write_bytes_as_lines>:
    6a5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6a60:	add	fp, sp, #28
    6a64:	sub	sp, sp, #4
    6a68:	mov	r4, r3
    6a6c:	mov	r9, r2
    6a70:	mov	sl, r1
    6a74:	mov	r7, r0
    6a78:	ldr	r0, [fp, #8]
    6a7c:	bl	4c8c <strlen@plt>
    6a80:	cmp	r9, #0
    6a84:	beq	6b24 <readstat_write_bytes_as_lines+0xc8>
    6a88:	str	r0, [sp]
    6a8c:	add	r8, r0, r4
    6a90:	mov	r5, #0
    6a94:	b	6aa0 <readstat_write_bytes_as_lines+0x44>
    6a98:	cmp	r5, r9
    6a9c:	bcs	6b24 <readstat_write_bytes_as_lines+0xc8>
    6aa0:	add	r1, sl, r5
    6aa4:	sub	r2, r9, r5
    6aa8:	ldr	r0, [r7, #4]
    6aac:	udiv	r3, r0, r8
    6ab0:	mul	r3, r3, r8
    6ab4:	sub	r0, r3, r0
    6ab8:	add	r6, r4, r0
    6abc:	mov	r0, r7
    6ac0:	cmp	r2, r6
    6ac4:	bcs	6adc <readstat_write_bytes_as_lines+0x80>
    6ac8:	bl	4ef0 <readstat_write_bytes@plt>
    6acc:	mov	r5, r9
    6ad0:	cmp	r0, #0
    6ad4:	beq	6af0 <readstat_write_bytes_as_lines+0x94>
    6ad8:	b	6b1c <readstat_write_bytes_as_lines+0xc0>
    6adc:	mov	r2, r6
    6ae0:	bl	4ef0 <readstat_write_bytes@plt>
    6ae4:	add	r5, r6, r5
    6ae8:	cmp	r0, #0
    6aec:	bne	6b1c <readstat_write_bytes_as_lines+0xc0>
    6af0:	ldr	r0, [r7, #4]
    6af4:	udiv	r1, r0, r8
    6af8:	mls	r0, r1, r8, r0
    6afc:	cmp	r0, r4
    6b00:	bne	6a98 <readstat_write_bytes_as_lines+0x3c>
    6b04:	mov	r0, r7
    6b08:	ldr	r1, [fp, #8]
    6b0c:	ldr	r2, [sp]
    6b10:	bl	4ef0 <readstat_write_bytes@plt>
    6b14:	cmp	r0, #0
    6b18:	beq	6a98 <readstat_write_bytes_as_lines+0x3c>
    6b1c:	sub	sp, fp, #28
    6b20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6b24:	mov	r0, #0
    6b28:	sub	sp, fp, #28
    6b2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00006b30 <readstat_write_line_padding>:
    6b30:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6b34:	add	fp, sp, #24
    6b38:	mov	r8, r3
    6b3c:	mov	r7, r2
    6b40:	mov	r9, r1
    6b44:	mov	r5, r0
    6b48:	mov	r0, r3
    6b4c:	bl	4c8c <strlen@plt>
    6b50:	mov	r6, r0
    6b54:	add	r0, r0, r7
    6b58:	ldr	r1, [r5, #4]
    6b5c:	udiv	r2, r1, r0
    6b60:	mls	r0, r2, r0, r1
    6b64:	cmp	r0, #0
    6b68:	beq	6bb0 <readstat_write_line_padding+0x80>
    6b6c:	sub	r4, r7, r0
    6b70:	mov	r0, r4
    6b74:	bl	4b90 <malloc@plt>
    6b78:	mov	r7, r0
    6b7c:	mov	r1, r9
    6b80:	mov	r2, r4
    6b84:	bl	4d28 <memset@plt>
    6b88:	mov	r0, r5
    6b8c:	mov	r1, r7
    6b90:	mov	r2, r4
    6b94:	bl	4ef0 <readstat_write_bytes@plt>
    6b98:	cmp	r0, #0
    6b9c:	beq	6bb8 <readstat_write_line_padding+0x88>
    6ba0:	cmp	r7, #0
    6ba4:	beq	6bb0 <readstat_write_line_padding+0x80>
    6ba8:	mov	r0, r7
    6bac:	bl	4938 <free@plt>
    6bb0:	mov	r0, #0
    6bb4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    6bb8:	mov	r0, r5
    6bbc:	mov	r1, r8
    6bc0:	mov	r2, r6
    6bc4:	bl	4ef0 <readstat_write_bytes@plt>
    6bc8:	cmp	r7, #0
    6bcc:	bne	6ba8 <readstat_write_line_padding+0x78>
    6bd0:	b	6bb0 <readstat_write_line_padding+0x80>

00006bd4 <readstat_write_string>:
    6bd4:	push	{r4, r5, fp, lr}
    6bd8:	add	fp, sp, #8
    6bdc:	mov	r4, r1
    6be0:	mov	r5, r0
    6be4:	mov	r0, r1
    6be8:	bl	4c8c <strlen@plt>
    6bec:	mov	r2, r0
    6bf0:	mov	r0, r5
    6bf4:	mov	r1, r4
    6bf8:	pop	{r4, r5, fp, lr}
    6bfc:	b	6a14 <readstat_write_bytes>

00006c00 <readstat_write_zeros>:
    6c00:	mov	r2, r1
    6c04:	mov	r1, #0
    6c08:	b	6c0c <readstat_write_repeated_byte>

00006c0c <readstat_write_repeated_byte>:
    6c0c:	cmp	r2, #0
    6c10:	moveq	r0, #0
    6c14:	bxeq	lr
    6c18:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6c1c:	add	fp, sp, #24
    6c20:	mov	r4, r2
    6c24:	mov	r5, r0
    6c28:	mov	r7, sp
    6c2c:	add	r0, r2, #7
    6c30:	bic	r0, r0, #7
    6c34:	sub	r6, sp, r0
    6c38:	mov	sp, r6
    6c3c:	mov	r0, r6
    6c40:	bl	4d28 <memset@plt>
    6c44:	mov	r0, r5
    6c48:	mov	r1, r6
    6c4c:	mov	r2, r4
    6c50:	bl	4ef0 <readstat_write_bytes@plt>
    6c54:	mov	sp, r7
    6c58:	sub	sp, fp, #24
    6c5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00006c60 <readstat_write_spaces>:
    6c60:	mov	r2, r1
    6c64:	mov	r1, #32
    6c68:	b	6c0c <readstat_write_repeated_byte>

00006c6c <readstat_write_space_padded_string>:
    6c6c:	push	{r4, r5, r6, r7, fp, lr}
    6c70:	add	fp, sp, #16
    6c74:	mov	r4, r2
    6c78:	mov	r5, r0
    6c7c:	cmp	r1, #0
    6c80:	beq	6cc4 <readstat_write_space_padded_string+0x58>
    6c84:	mov	r6, r1
    6c88:	ldrb	r0, [r1]
    6c8c:	cmp	r0, #0
    6c90:	beq	6cc4 <readstat_write_space_padded_string+0x58>
    6c94:	mov	r0, r6
    6c98:	bl	4c8c <strlen@plt>
    6c9c:	mov	r7, r0
    6ca0:	cmp	r0, r4
    6ca4:	movhi	r7, r4
    6ca8:	mov	r0, r5
    6cac:	mov	r1, r6
    6cb0:	mov	r2, r7
    6cb4:	bl	4ef0 <readstat_write_bytes@plt>
    6cb8:	cmp	r0, #0
    6cbc:	popne	{r4, r5, r6, r7, fp, pc}
    6cc0:	sub	r4, r4, r7
    6cc4:	mov	r0, r5
    6cc8:	mov	r1, r4
    6ccc:	pop	{r4, r5, r6, r7, fp, lr}
    6cd0:	b	6c60 <readstat_write_spaces>

00006cd4 <readstat_add_label_set>:
    6cd4:	push	{r4, r5, r6, r7, fp, lr}
    6cd8:	add	fp, sp, #16
    6cdc:	mov	r4, r2
    6ce0:	mov	r6, r1
    6ce4:	mov	r7, r0
    6ce8:	ldr	r0, [r0, #40]	; 0x28
    6cec:	ldr	r1, [r7, #44]	; 0x2c
    6cf0:	cmp	r0, r1
    6cf4:	bne	6d10 <readstat_add_label_set+0x3c>
    6cf8:	lsl	r0, r1, #1
    6cfc:	str	r0, [r7, #44]	; 0x2c
    6d00:	ldr	r0, [r7, #36]	; 0x24
    6d04:	lsl	r1, r1, #3
    6d08:	bl	4a64 <realloc@plt>
    6d0c:	str	r0, [r7, #36]	; 0x24
    6d10:	mov	r0, #1
    6d14:	mov	r1, #284	; 0x11c
    6d18:	bl	47d0 <calloc@plt>
    6d1c:	mov	r5, r0
    6d20:	ldr	r0, [r7, #36]	; 0x24
    6d24:	ldr	r1, [r7, #40]	; 0x28
    6d28:	add	r2, r1, #1
    6d2c:	str	r2, [r7, #40]	; 0x28
    6d30:	str	r5, [r0, r1, lsl #2]
    6d34:	str	r6, [r5]
    6d38:	add	r0, r5, #4
    6d3c:	ldr	r2, [pc, #68]	; 6d88 <readstat_add_label_set+0xb4>
    6d40:	add	r2, pc, r2
    6d44:	mov	r1, #256	; 0x100
    6d48:	mov	r3, r4
    6d4c:	bl	4d04 <snprintf@plt>
    6d50:	mov	r4, #10
    6d54:	mov	r0, #10
    6d58:	mov	r1, #32
    6d5c:	bl	47d0 <calloc@plt>
    6d60:	str	r4, [r5, #268]	; 0x10c
    6d64:	str	r0, [r5, #260]	; 0x104
    6d68:	mov	r4, #2
    6d6c:	mov	r0, #2
    6d70:	mov	r1, #4
    6d74:	bl	47d0 <calloc@plt>
    6d78:	str	r4, [r5, #280]	; 0x118
    6d7c:	str	r0, [r5, #272]	; 0x110
    6d80:	mov	r0, r5
    6d84:	pop	{r4, r5, r6, r7, fp, pc}
    6d88:	.word	0x0001fd4c

00006d8c <readstat_get_label_set>:
    6d8c:	mov	r2, r0
    6d90:	ldr	r3, [r0, #40]	; 0x28
    6d94:	mov	r0, #0
    6d98:	cmp	r3, r1
    6d9c:	bxle	lr
    6da0:	ldr	r0, [r2, #36]	; 0x24
    6da4:	ldr	r0, [r0, r1, lsl #2]
    6da8:	bx	lr

00006dac <readstat_sort_label_set>:
    6dac:	mov	r3, r1
    6db0:	ldr	r2, [r0, #260]	; 0x104
    6db4:	ldr	r1, [r0, #264]	; 0x108
    6db8:	mov	r0, r2
    6dbc:	mov	r2, #32
    6dc0:	b	4ed8 <qsort@plt>

00006dc4 <readstat_get_value_label>:
    6dc4:	mov	r2, r0
    6dc8:	ldr	r3, [r0, #264]	; 0x108
    6dcc:	mov	r0, #0
    6dd0:	cmp	r3, r1
    6dd4:	bxle	lr
    6dd8:	ldr	r0, [r2, #260]	; 0x104
    6ddc:	add	r0, r0, r1, lsl #5
    6de0:	bx	lr

00006de4 <readstat_get_label_set_variable>:
    6de4:	mov	r2, r0
    6de8:	ldr	r3, [r0, #276]	; 0x114
    6dec:	mov	r0, #0
    6df0:	cmp	r3, r1
    6df4:	bxle	lr
    6df8:	ldr	r0, [r2, #272]	; 0x110
    6dfc:	ldr	r0, [r0, r1, lsl #2]
    6e00:	bx	lr

00006e04 <readstat_label_double_value>:
    6e04:	push	{fp, lr}
    6e08:	mov	fp, sp
    6e0c:	vpush	{d8}
    6e10:	vmov.f64	d8, d0
    6e14:	bl	6e2c <readstat_add_value_label>
    6e18:	vcvt.s32.f64	s0, d8
    6e1c:	vstr	d8, [r0]
    6e20:	vstr	s0, [r0, #8]
    6e24:	vpop	{d8}
    6e28:	pop	{fp, pc}

00006e2c <readstat_add_value_label>:
    6e2c:	push	{r4, r5, fp, lr}
    6e30:	add	fp, sp, #8
    6e34:	mov	r4, r1
    6e38:	mov	r5, r0
    6e3c:	ldr	r0, [r0, #264]	; 0x108
    6e40:	ldr	r1, [r5, #268]	; 0x10c
    6e44:	cmp	r0, r1
    6e48:	bne	6e64 <readstat_add_value_label+0x38>
    6e4c:	lsl	r0, r1, #1
    6e50:	str	r0, [r5, #268]	; 0x10c
    6e54:	ldr	r0, [r5, #260]	; 0x104
    6e58:	lsl	r1, r1, #6
    6e5c:	bl	4a64 <realloc@plt>
    6e60:	str	r0, [r5, #260]	; 0x104
    6e64:	ldr	r0, [r5, #260]	; 0x104
    6e68:	ldr	r1, [r5, #264]	; 0x108
    6e6c:	add	r2, r1, #1
    6e70:	str	r2, [r5, #264]	; 0x108
    6e74:	vmov.i32	q8, #0	; 0x00000000
    6e78:	add	r5, r0, r1, lsl #5
    6e7c:	mov	r0, r5
    6e80:	vst1.64	{d16-d17}, [r0]!
    6e84:	vst1.64	{d16-d17}, [r0]
    6e88:	mov	r0, r5
    6e8c:	mov	r1, r4
    6e90:	bl	7888 <readstat_copy_label>
    6e94:	mov	r0, r5
    6e98:	pop	{r4, r5, fp, pc}

00006e9c <readstat_label_int32_value>:
    6e9c:	push	{r4, sl, fp, lr}
    6ea0:	add	fp, sp, #8
    6ea4:	mov	r4, r1
    6ea8:	mov	r1, r2
    6eac:	bl	6e2c <readstat_add_value_label>
    6eb0:	vmov	s0, r4
    6eb4:	vcvt.f64.s32	d16, s0
    6eb8:	str	r4, [r0, #8]
    6ebc:	vstr	d16, [r0]
    6ec0:	pop	{r4, sl, fp, pc}

00006ec4 <readstat_label_string_value>:
    6ec4:	push	{r4, r5, fp, lr}
    6ec8:	add	fp, sp, #8
    6ecc:	mov	r4, r1
    6ed0:	mov	r1, r2
    6ed4:	bl	6e2c <readstat_add_value_label>
    6ed8:	cmp	r4, #0
    6edc:	popeq	{r4, r5, fp, pc}
    6ee0:	mov	r5, r0
    6ee4:	mov	r0, r4
    6ee8:	bl	4c8c <strlen@plt>
    6eec:	cmp	r0, #0
    6ef0:	beq	6f10 <readstat_label_string_value+0x4c>
    6ef4:	str	r0, [r5, #20]
    6ef8:	bl	4b90 <malloc@plt>
    6efc:	str	r0, [r5, #16]
    6f00:	ldr	r2, [r5, #20]
    6f04:	mov	r1, r4
    6f08:	pop	{r4, r5, fp, lr}
    6f0c:	b	4998 <memcpy@plt>
    6f10:	pop	{r4, r5, fp, pc}

00006f14 <readstat_label_tagged_value>:
    6f14:	push	{r4, sl, fp, lr}
    6f18:	add	fp, sp, #8
    6f1c:	mov	r4, r1
    6f20:	mov	r1, r2
    6f24:	bl	6e2c <readstat_add_value_label>
    6f28:	strb	r4, [r0, #12]
    6f2c:	pop	{r4, sl, fp, pc}

00006f30 <readstat_add_variable>:
    6f30:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    6f34:	add	fp, sp, #24
    6f38:	mov	r6, r3
    6f3c:	mov	r7, r2
    6f40:	mov	r8, r1
    6f44:	mov	r4, r0
    6f48:	ldr	r0, [r0, #28]
    6f4c:	ldr	r1, [r4, #32]
    6f50:	cmp	r0, r1
    6f54:	bne	6f70 <readstat_add_variable+0x40>
    6f58:	lsl	r0, r1, #1
    6f5c:	str	r0, [r4, #32]
    6f60:	ldr	r0, [r4, #24]
    6f64:	lsl	r1, r1, #3
    6f68:	bl	4a64 <realloc@plt>
    6f6c:	str	r0, [r4, #24]
    6f70:	mov	r0, #1
    6f74:	movw	r1, #2152	; 0x868
    6f78:	bl	47d0 <calloc@plt>
    6f7c:	mov	r5, r0
    6f80:	ldr	r0, [r4, #28]
    6f84:	add	r1, r0, #1
    6f88:	str	r1, [r4, #28]
    6f8c:	str	r0, [r5, #4]
    6f90:	ldr	r1, [r4, #24]
    6f94:	str	r5, [r1, r0, lsl #2]
    6f98:	str	r7, [r5]
    6f9c:	str	r6, [r5, #1600]	; 0x640
    6fa0:	mov	r0, r5
    6fa4:	bl	4fe0 <readstat_variable_get_type_class@plt>
    6fa8:	mov	r1, #0
    6fac:	mov	r2, #3
    6fb0:	cmp	r0, #0
    6fb4:	movweq	r2, #1
    6fb8:	str	r1, [r5, #2128]	; 0x850
    6fbc:	str	r2, [r5, #2132]	; 0x854
    6fc0:	cmp	r8, #0
    6fc4:	beq	6fe0 <readstat_add_variable+0xb0>
    6fc8:	add	r0, r5, #8
    6fcc:	ldr	r2, [pc, #20]	; 6fe8 <readstat_add_variable+0xb8>
    6fd0:	add	r2, pc, r2
    6fd4:	mov	r1, #300	; 0x12c
    6fd8:	mov	r3, r8
    6fdc:	bl	4d04 <snprintf@plt>
    6fe0:	mov	r0, r5
    6fe4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    6fe8:	.word	0x0001fabc

00006fec <readstat_add_string_ref>:
    6fec:	push	{r4, r5, fp, lr}
    6ff0:	add	fp, sp, #8
    6ff4:	mov	r4, r0
    6ff8:	mov	r0, r1
    6ffc:	bl	4df4 <readstat_string_ref_init@plt>
    7000:	mov	r5, r0
    7004:	mov	r0, r4
    7008:	mov	r1, r5
    700c:	bl	7018 <readstat_append_string_ref>
    7010:	mov	r0, r5
    7014:	pop	{r4, r5, fp, pc}

00007018 <readstat_append_string_ref>:
    7018:	push	{r4, r5, fp, lr}
    701c:	add	fp, sp, #8
    7020:	mov	r4, r1
    7024:	mov	r5, r0
    7028:	ldr	r0, [r0, #64]	; 0x40
    702c:	ldr	r1, [r5, #68]	; 0x44
    7030:	cmp	r0, r1
    7034:	bne	7050 <readstat_append_string_ref+0x38>
    7038:	lsl	r0, r1, #1
    703c:	str	r0, [r5, #68]	; 0x44
    7040:	ldr	r0, [r5, #60]	; 0x3c
    7044:	lsl	r1, r1, #3
    7048:	bl	4a64 <realloc@plt>
    704c:	str	r0, [r5, #60]	; 0x3c
    7050:	ldr	r0, [r5, #60]	; 0x3c
    7054:	ldr	r1, [r5, #64]	; 0x40
    7058:	add	r2, r1, #1
    705c:	str	r2, [r5, #64]	; 0x40
    7060:	str	r4, [r0, r1, lsl #2]
    7064:	pop	{r4, r5, fp, pc}

00007068 <readstat_add_note>:
    7068:	push	{r4, r5, fp, lr}
    706c:	add	fp, sp, #8
    7070:	mov	r5, r1
    7074:	mov	r4, r0
    7078:	ldr	r0, [r0, #52]	; 0x34
    707c:	ldr	r1, [r4, #56]	; 0x38
    7080:	cmp	r0, r1
    7084:	bne	70a0 <readstat_add_note+0x38>
    7088:	lsl	r0, r1, #1
    708c:	str	r0, [r4, #56]	; 0x38
    7090:	ldr	r0, [r4, #48]	; 0x30
    7094:	lsl	r1, r1, #3
    7098:	bl	4a64 <realloc@plt>
    709c:	str	r0, [r4, #48]	; 0x30
    70a0:	mov	r0, r5
    70a4:	bl	4c8c <strlen@plt>
    70a8:	add	r0, r0, #1
    70ac:	bl	4b90 <malloc@plt>
    70b0:	mov	r1, r5
    70b4:	bl	4b0c <strcpy@plt>
    70b8:	ldr	r1, [r4, #48]	; 0x30
    70bc:	ldr	r2, [r4, #52]	; 0x34
    70c0:	add	r3, r2, #1
    70c4:	str	r3, [r4, #52]	; 0x34
    70c8:	str	r0, [r1, r2, lsl #2]
    70cc:	pop	{r4, r5, fp, pc}

000070d0 <readstat_variable_set_label>:
    70d0:	add	r0, r0, #564	; 0x234
    70d4:	cmp	r1, #0
    70d8:	beq	70f0 <readstat_variable_set_label+0x20>
    70dc:	mov	r3, r1
    70e0:	ldr	r2, [pc, #20]	; 70fc <readstat_variable_set_label+0x2c>
    70e4:	add	r2, pc, r2
    70e8:	mov	r1, #1024	; 0x400
    70ec:	b	4d04 <snprintf@plt>
    70f0:	mov	r1, #0
    70f4:	mov	r2, #1024	; 0x400
    70f8:	b	4d28 <memset@plt>
    70fc:	.word	0x0001f9a8

00007100 <readstat_variable_set_format>:
    7100:	add	r0, r0, #308	; 0x134
    7104:	cmp	r1, #0
    7108:	beq	7120 <readstat_variable_set_format+0x20>
    710c:	mov	r3, r1
    7110:	ldr	r2, [pc, #20]	; 712c <readstat_variable_set_format+0x2c>
    7114:	add	r2, pc, r2
    7118:	mov	r1, #256	; 0x100
    711c:	b	4d04 <snprintf@plt>
    7120:	mov	r1, #0
    7124:	mov	r2, #256	; 0x100
    7128:	b	4d28 <memset@plt>
    712c:	.word	0x0001f978

00007130 <readstat_variable_set_measure>:
    7130:	str	r1, [r0, #2128]	; 0x850
    7134:	bx	lr

00007138 <readstat_variable_set_alignment>:
    7138:	str	r1, [r0, #2132]	; 0x854
    713c:	bx	lr

00007140 <readstat_variable_set_display_width>:
    7140:	str	r1, [r0, #2136]	; 0x858
    7144:	bx	lr

00007148 <readstat_variable_set_label_set>:
    7148:	push	{r4, r5, fp, lr}
    714c:	add	fp, sp, #8
    7150:	str	r1, [r0, #1588]	; 0x634
    7154:	cmp	r1, #0
    7158:	popeq	{r4, r5, fp, pc}
    715c:	mov	r5, r1
    7160:	mov	r4, r0
    7164:	ldr	r0, [r1, #276]	; 0x114
    7168:	ldr	r1, [r1, #280]	; 0x118
    716c:	cmp	r0, r1
    7170:	bne	718c <readstat_variable_set_label_set+0x44>
    7174:	lsl	r0, r1, #1
    7178:	str	r0, [r5, #280]	; 0x118
    717c:	ldr	r0, [r5, #272]	; 0x110
    7180:	lsl	r1, r1, #3
    7184:	bl	4a64 <realloc@plt>
    7188:	str	r0, [r5, #272]	; 0x110
    718c:	ldr	r0, [r5, #272]	; 0x110
    7190:	ldr	r1, [r5, #276]	; 0x114
    7194:	add	r2, r1, #1
    7198:	str	r2, [r5, #276]	; 0x114
    719c:	str	r4, [r0, r1, lsl #2]
    71a0:	pop	{r4, r5, fp, pc}

000071a4 <readstat_get_variable>:
    71a4:	mov	r2, r0
    71a8:	ldr	r3, [r0, #28]
    71ac:	mov	r0, #0
    71b0:	cmp	r3, r1
    71b4:	bxle	lr
    71b8:	ldr	r0, [r2, #24]
    71bc:	ldr	r0, [r0, r1, lsl #2]
    71c0:	bx	lr

000071c4 <readstat_get_string_ref>:
    71c4:	mov	r2, r0
    71c8:	ldr	r3, [r0, #64]	; 0x40
    71cc:	mov	r0, #0
    71d0:	cmp	r3, r1
    71d4:	bxle	lr
    71d8:	ldr	r0, [r2, #60]	; 0x3c
    71dc:	ldr	r0, [r0, r1, lsl #2]
    71e0:	bx	lr

000071e4 <readstat_writer_set_file_label>:
    71e4:	push	{fp, lr}
    71e8:	mov	fp, sp
    71ec:	mov	r3, r1
    71f0:	add	r0, r0, #88	; 0x58
    71f4:	ldr	r2, [pc, #16]	; 720c <readstat_writer_set_file_label+0x28>
    71f8:	add	r2, pc, r2
    71fc:	mov	r1, #100	; 0x64
    7200:	bl	4d04 <snprintf@plt>
    7204:	mov	r0, #0
    7208:	pop	{fp, pc}
    720c:	.word	0x0001f894

00007210 <readstat_writer_set_file_timestamp>:
    7210:	str	r1, [r0, #20]
    7214:	mov	r0, #0
    7218:	bx	lr

0000721c <readstat_writer_set_table_name>:
    721c:	push	{fp, lr}
    7220:	mov	fp, sp
    7224:	mov	r3, r1
    7228:	add	r0, r0, #188	; 0xbc
    722c:	ldr	r2, [pc, #16]	; 7244 <readstat_writer_set_table_name+0x28>
    7230:	add	r2, pc, r2
    7234:	mov	r1, #33	; 0x21
    7238:	bl	4d04 <snprintf@plt>
    723c:	mov	r0, #0
    7240:	pop	{fp, pc}
    7244:	.word	0x0001f85c

00007248 <readstat_writer_set_fweight_variable>:
    7248:	push	{r4, r5, fp, lr}
    724c:	add	fp, sp, #8
    7250:	mov	r4, r1
    7254:	mov	r5, r0
    7258:	mov	r0, r1
    725c:	bl	4fe0 <readstat_variable_get_type_class@plt>
    7260:	cmp	r0, #0
    7264:	moveq	r0, #30
    7268:	strne	r4, [r5, #224]	; 0xe0
    726c:	movne	r0, #0
    7270:	pop	{r4, r5, fp, pc}

00007274 <readstat_writer_set_file_format_version>:
    7274:	str	r1, [r0, #8]
    7278:	mov	r0, #0
    727c:	bx	lr

00007280 <readstat_writer_set_file_format_is_64bit>:
    7280:	str	r1, [r0, #12]
    7284:	mov	r0, #0
    7288:	bx	lr

0000728c <readstat_writer_set_compression>:
    728c:	str	r1, [r0, #16]
    7290:	mov	r0, #0
    7294:	bx	lr

00007298 <readstat_writer_set_error_handler>:
    7298:	str	r1, [r0, #296]	; 0x128
    729c:	mov	r0, #0
    72a0:	bx	lr

000072a4 <readstat_begin_writing_file>:
    72a4:	mov	r3, #1
    72a8:	str	r1, [r0, #304]	; 0x130
    72ac:	str	r3, [r0, #308]	; 0x134
    72b0:	str	r2, [r0, #80]	; 0x50
    72b4:	b	6814 <readstat_validate_metadata>

000072b8 <readstat_begin_row>:
    72b8:	push	{r4, r5, fp, lr}
    72bc:	add	fp, sp, #8
    72c0:	mov	r5, r0
    72c4:	ldr	r0, [r0, #308]	; 0x134
    72c8:	cmp	r0, #0
    72cc:	beq	7304 <readstat_begin_row+0x4c>
    72d0:	ldr	r0, [r5, #84]	; 0x54
    72d4:	mov	r4, #0
    72d8:	cmp	r0, #0
    72dc:	bne	72ec <readstat_begin_row+0x34>
    72e0:	mov	r0, r5
    72e4:	bl	7310 <readstat_begin_writing_data>
    72e8:	mov	r4, r0
    72ec:	ldr	r0, [r5, #72]	; 0x48
    72f0:	ldr	r2, [r5, #76]	; 0x4c
    72f4:	mov	r1, #0
    72f8:	bl	4d28 <memset@plt>
    72fc:	mov	r0, r4
    7300:	pop	{r4, r5, fp, pc}
    7304:	mov	r4, #14
    7308:	mov	r0, r4
    730c:	pop	{r4, r5, fp, pc}

00007310 <readstat_begin_writing_data>:
    7310:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    7314:	add	fp, sp, #24
    7318:	mov	r4, r0
    731c:	bl	4818 <readstat_validate_metadata@plt>
    7320:	mov	r8, r0
    7324:	cmp	r0, #0
    7328:	beq	7334 <readstat_begin_writing_data+0x24>
    732c:	mov	r0, r8
    7330:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7334:	ldr	r0, [r4, #28]
    7338:	cmp	r0, #1
    733c:	blt	7388 <readstat_begin_writing_data+0x78>
    7340:	mov	r7, #0
    7344:	mov	r6, #0
    7348:	mov	r0, r4
    734c:	mov	r1, r7
    7350:	bl	4e18 <readstat_get_variable@plt>
    7354:	mov	r5, r0
    7358:	ldr	r0, [r0]
    735c:	ldr	r1, [r5, #1600]	; 0x640
    7360:	ldr	r2, [r4, #228]	; 0xe4
    7364:	blx	r2
    7368:	str	r6, [r5, #1592]	; 0x638
    736c:	str	r0, [r5, #1596]	; 0x63c
    7370:	add	r6, r0, r6
    7374:	add	r7, r7, #1
    7378:	ldr	r0, [r4, #28]
    737c:	cmp	r7, r0
    7380:	blt	7348 <readstat_begin_writing_data+0x38>
    7384:	b	738c <readstat_begin_writing_data+0x7c>
    7388:	mov	r6, #0
    738c:	ldr	r0, [r4, #232]	; 0xe8
    7390:	cmp	r0, #0
    7394:	beq	73dc <readstat_begin_writing_data+0xcc>
    7398:	ldr	r0, [r4, #28]
    739c:	cmp	r0, #1
    73a0:	blt	73dc <readstat_begin_writing_data+0xcc>
    73a4:	mov	r7, #0
    73a8:	mov	r0, r4
    73ac:	mov	r1, r7
    73b0:	bl	4e18 <readstat_get_variable@plt>
    73b4:	mov	r1, r0
    73b8:	mov	r0, r4
    73bc:	bl	4f38 <readstat_validate_variable@plt>
    73c0:	cmp	r0, #0
    73c4:	bne	7404 <readstat_begin_writing_data+0xf4>
    73c8:	add	r7, r7, #1
    73cc:	ldr	r0, [r4, #28]
    73d0:	cmp	r7, r0
    73d4:	blt	73a8 <readstat_begin_writing_data+0x98>
    73d8:	mov	r8, #0
    73dc:	str	r6, [r4, #76]	; 0x4c
    73e0:	mov	r0, r6
    73e4:	bl	4b90 <malloc@plt>
    73e8:	str	r0, [r4, #72]	; 0x48
    73ec:	ldr	r1, [r4, #276]	; 0x114
    73f0:	cmp	r1, #0
    73f4:	beq	732c <readstat_begin_writing_data+0x1c>
    73f8:	mov	r0, r4
    73fc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    7400:	bx	r1
    7404:	mov	r8, r0
    7408:	mov	r0, r8
    740c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00007410 <readstat_insert_int8_value>:
    7410:	push	{fp, lr}
    7414:	mov	fp, sp
    7418:	ldr	r3, [r0, #308]	; 0x134
    741c:	cmp	r3, #0
    7420:	beq	7450 <readstat_insert_int8_value+0x40>
    7424:	ldr	ip, [r1]
    7428:	mov	r3, #12
    742c:	cmp	ip, #1
    7430:	bne	7454 <readstat_insert_int8_value+0x44>
    7434:	ldr	ip, [r1, #1592]	; 0x638
    7438:	ldr	r3, [r0, #72]	; 0x48
    743c:	ldr	lr, [r0, #236]	; 0xec
    7440:	add	r0, r3, ip
    7444:	mov	r3, lr
    7448:	pop	{fp, lr}
    744c:	bx	r3
    7450:	mov	r3, #14
    7454:	mov	r0, r3
    7458:	pop	{fp, pc}

0000745c <readstat_insert_int16_value>:
    745c:	push	{fp, lr}
    7460:	mov	fp, sp
    7464:	ldr	r3, [r0, #308]	; 0x134
    7468:	cmp	r3, #0
    746c:	beq	749c <readstat_insert_int16_value+0x40>
    7470:	ldr	ip, [r1]
    7474:	mov	r3, #12
    7478:	cmp	ip, #2
    747c:	bne	74a0 <readstat_insert_int16_value+0x44>
    7480:	ldr	ip, [r1, #1592]	; 0x638
    7484:	ldr	r3, [r0, #72]	; 0x48
    7488:	ldr	lr, [r0, #240]	; 0xf0
    748c:	add	r0, r3, ip
    7490:	mov	r3, lr
    7494:	pop	{fp, lr}
    7498:	bx	r3
    749c:	mov	r3, #14
    74a0:	mov	r0, r3
    74a4:	pop	{fp, pc}

000074a8 <readstat_insert_int32_value>:
    74a8:	push	{fp, lr}
    74ac:	mov	fp, sp
    74b0:	ldr	r3, [r0, #308]	; 0x134
    74b4:	cmp	r3, #0
    74b8:	beq	74e8 <readstat_insert_int32_value+0x40>
    74bc:	ldr	ip, [r1]
    74c0:	mov	r3, #12
    74c4:	cmp	ip, #3
    74c8:	bne	74ec <readstat_insert_int32_value+0x44>
    74cc:	ldr	ip, [r1, #1592]	; 0x638
    74d0:	ldr	r3, [r0, #72]	; 0x48
    74d4:	ldr	lr, [r0, #244]	; 0xf4
    74d8:	add	r0, r3, ip
    74dc:	mov	r3, lr
    74e0:	pop	{fp, lr}
    74e4:	bx	r3
    74e8:	mov	r3, #14
    74ec:	mov	r0, r3
    74f0:	pop	{fp, pc}

000074f4 <readstat_insert_float_value>:
    74f4:	ldr	r2, [r0, #308]	; 0x134
    74f8:	cmp	r2, #0
    74fc:	beq	7524 <readstat_insert_float_value+0x30>
    7500:	ldr	r3, [r1]
    7504:	mov	r2, #12
    7508:	cmp	r3, #4
    750c:	bne	7528 <readstat_insert_float_value+0x34>
    7510:	ldr	r2, [r1, #1592]	; 0x638
    7514:	ldr	r3, [r0, #72]	; 0x48
    7518:	ldr	ip, [r0, #248]	; 0xf8
    751c:	add	r0, r3, r2
    7520:	bx	ip
    7524:	mov	r2, #14
    7528:	mov	r0, r2
    752c:	bx	lr

00007530 <readstat_insert_double_value>:
    7530:	ldr	r2, [r0, #308]	; 0x134
    7534:	cmp	r2, #0
    7538:	beq	7560 <readstat_insert_double_value+0x30>
    753c:	ldr	r3, [r1]
    7540:	mov	r2, #12
    7544:	cmp	r3, #5
    7548:	bne	7564 <readstat_insert_double_value+0x34>
    754c:	ldr	r2, [r1, #1592]	; 0x638
    7550:	ldr	r3, [r0, #72]	; 0x48
    7554:	ldr	ip, [r0, #252]	; 0xfc
    7558:	add	r0, r3, r2
    755c:	bx	ip
    7560:	mov	r2, #14
    7564:	mov	r0, r2
    7568:	bx	lr

0000756c <readstat_insert_string_value>:
    756c:	push	{fp, lr}
    7570:	mov	fp, sp
    7574:	ldr	r3, [r0, #308]	; 0x134
    7578:	cmp	r3, #0
    757c:	beq	7598 <readstat_insert_string_value+0x2c>
    7580:	ldr	ip, [r1]
    7584:	mov	r3, #12
    7588:	cmp	ip, #0
    758c:	beq	75a4 <readstat_insert_string_value+0x38>
    7590:	mov	r0, r3
    7594:	pop	{fp, pc}
    7598:	mov	r3, #14
    759c:	mov	r0, r3
    75a0:	pop	{fp, pc}
    75a4:	ldr	ip, [r1, #1592]	; 0x638
    75a8:	ldr	r3, [r0, #72]	; 0x48
    75ac:	ldr	lr, [r0, #256]	; 0x100
    75b0:	add	r0, r3, ip
    75b4:	mov	r3, lr
    75b8:	pop	{fp, lr}
    75bc:	bx	r3

000075c0 <readstat_insert_string_ref>:
    75c0:	push	{r4, r5, r6, r7, fp, lr}
    75c4:	add	fp, sp, #16
    75c8:	ldr	r3, [r0, #308]	; 0x134
    75cc:	cmp	r3, #0
    75d0:	beq	7654 <readstat_insert_string_ref+0x94>
    75d4:	ldr	ip, [r1]
    75d8:	mov	r3, #12
    75dc:	cmp	ip, #6
    75e0:	bne	7658 <readstat_insert_string_ref+0x98>
    75e4:	ldr	r3, [r0, #260]	; 0x104
    75e8:	cmp	r3, #0
    75ec:	beq	7660 <readstat_insert_string_ref+0xa0>
    75f0:	cmp	r2, #0
    75f4:	beq	7640 <readstat_insert_string_ref+0x80>
    75f8:	mov	ip, r2
    75fc:	ldr	lr, [ip, #8]!
    7600:	ldr	r4, [ip, #4]
    7604:	and	r4, lr, r4
    7608:	cmn	r4, #1
    760c:	bne	7640 <readstat_insert_string_ref+0x80>
    7610:	mvn	r4, #0
    7614:	ldrd	r6, [r2]
    7618:	eor	r7, r7, r4
    761c:	eor	r6, r6, r4
    7620:	orrs	r7, r6, r7
    7624:	bne	7640 <readstat_insert_string_ref+0x80>
    7628:	ldr	r4, [r0, #84]	; 0x54
    762c:	asr	r5, r4, #31
    7630:	strd	r4, [ip]
    7634:	ldr	r4, [r1, #4]
    7638:	asr	r5, r4, #31
    763c:	strd	r4, [r2]
    7640:	ldr	r7, [r1, #1592]	; 0x638
    7644:	ldr	r0, [r0, #72]	; 0x48
    7648:	add	r0, r0, r7
    764c:	pop	{r4, r5, r6, r7, fp, lr}
    7650:	bx	r3
    7654:	mov	r3, #14
    7658:	mov	r0, r3
    765c:	pop	{r4, r5, r6, r7, fp, pc}
    7660:	mov	r3, #33	; 0x21
    7664:	mov	r0, r3
    7668:	pop	{r4, r5, r6, r7, fp, pc}

0000766c <readstat_insert_missing_value>:
    766c:	ldr	r2, [r0, #308]	; 0x134
    7670:	cmp	r2, #0
    7674:	moveq	r0, #14
    7678:	bxeq	lr
    767c:	ldr	r2, [r1]
    7680:	cmp	r2, #6
    7684:	beq	76a4 <readstat_insert_missing_value+0x38>
    7688:	cmp	r2, #0
    768c:	bne	76ac <readstat_insert_missing_value+0x40>
    7690:	ldr	r2, [r1, #1592]	; 0x638
    7694:	ldr	r3, [r0, #72]	; 0x48
    7698:	ldr	ip, [r0, #264]	; 0x108
    769c:	add	r0, r3, r2
    76a0:	bx	ip
    76a4:	mov	r2, #0
    76a8:	b	75c0 <readstat_insert_string_ref>
    76ac:	ldr	r2, [r1, #1592]	; 0x638
    76b0:	ldr	r3, [r0, #72]	; 0x48
    76b4:	ldr	ip, [r0, #268]	; 0x10c
    76b8:	add	r0, r3, r2
    76bc:	bx	ip

000076c0 <readstat_insert_tagged_missing_value>:
    76c0:	push	{fp, lr}
    76c4:	mov	fp, sp
    76c8:	ldr	r3, [r0, #308]	; 0x134
    76cc:	cmp	r3, #0
    76d0:	beq	76f4 <readstat_insert_tagged_missing_value+0x34>
    76d4:	ldr	r3, [r0, #272]	; 0x110
    76d8:	cmp	r3, #0
    76dc:	beq	76fc <readstat_insert_tagged_missing_value+0x3c>
    76e0:	ldr	ip, [r1, #1592]	; 0x638
    76e4:	ldr	r0, [r0, #72]	; 0x48
    76e8:	add	r0, r0, ip
    76ec:	pop	{fp, lr}
    76f0:	bx	r3
    76f4:	mov	r0, #14
    76f8:	pop	{fp, pc}
    76fc:	ldr	r2, [r1, #1592]	; 0x638
    7700:	ldr	r3, [r0, #72]	; 0x48
    7704:	ldr	ip, [r0, #268]	; 0x10c
    7708:	add	r0, r3, r2
    770c:	blx	ip
    7710:	mov	r0, #23
    7714:	pop	{fp, pc}

00007718 <readstat_end_row>:
    7718:	push	{r4, sl, fp, lr}
    771c:	add	fp, sp, #8
    7720:	mov	r4, r0
    7724:	ldr	r0, [r0, #308]	; 0x134
    7728:	cmp	r0, #0
    772c:	beq	7760 <readstat_end_row+0x48>
    7730:	ldr	r1, [r4, #72]	; 0x48
    7734:	ldr	r2, [r4, #76]	; 0x4c
    7738:	ldr	r3, [r4, #280]	; 0x118
    773c:	mov	r0, r4
    7740:	blx	r3
    7744:	cmp	r0, #0
    7748:	popne	{r4, sl, fp, pc}
    774c:	ldr	r0, [r4, #84]	; 0x54
    7750:	add	r0, r0, #1
    7754:	str	r0, [r4, #84]	; 0x54
    7758:	mov	r0, #0
    775c:	pop	{r4, sl, fp, pc}
    7760:	mov	r0, #14
    7764:	pop	{r4, sl, fp, pc}

00007768 <readstat_end_writing>:
    7768:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    776c:	add	fp, sp, #24
    7770:	mov	r4, r0
    7774:	ldr	r0, [r0, #308]	; 0x134
    7778:	cmp	r0, #0
    777c:	beq	7820 <readstat_end_writing+0xb8>
    7780:	ldr	r1, [r4, #80]	; 0x50
    7784:	ldr	r2, [r4, #84]	; 0x54
    7788:	mov	r0, #9
    778c:	cmp	r2, r1
    7790:	bne	7838 <readstat_end_writing+0xd0>
    7794:	cmp	r1, #0
    7798:	beq	7828 <readstat_end_writing+0xc0>
    779c:	ldr	r5, [r4, #64]	; 0x40
    77a0:	cmp	r5, #2
    77a4:	blt	7808 <readstat_end_writing+0xa0>
    77a8:	ldr	r0, [r4, #60]	; 0x3c
    77ac:	add	r6, r0, #4
    77b0:	mov	r1, r6
    77b4:	bl	7848 <readstat_compare_string_refs>
    77b8:	cmp	r0, #0
    77bc:	bgt	77f0 <readstat_end_writing+0x88>
    77c0:	mov	r7, #1
    77c4:	add	r7, r7, #1
    77c8:	ldr	r5, [r4, #64]	; 0x40
    77cc:	cmp	r7, r5
    77d0:	bge	7808 <readstat_end_writing+0xa0>
    77d4:	add	r8, r6, #4
    77d8:	add	r1, r6, #4
    77dc:	mov	r0, r6
    77e0:	bl	7848 <readstat_compare_string_refs>
    77e4:	cmp	r0, #1
    77e8:	mov	r6, r8
    77ec:	blt	77c4 <readstat_end_writing+0x5c>
    77f0:	ldr	r0, [r4, #60]	; 0x3c
    77f4:	ldr	r3, [pc, #72]	; 7844 <readstat_end_writing+0xdc>
    77f8:	add	r3, pc, r3
    77fc:	mov	r1, r5
    7800:	mov	r2, #4
    7804:	bl	4ed8 <qsort@plt>
    7808:	ldr	r1, [r4, #284]	; 0x11c
    780c:	cmp	r1, #0
    7810:	beq	783c <readstat_end_writing+0xd4>
    7814:	mov	r0, r4
    7818:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    781c:	bx	r1
    7820:	mov	r0, #14
    7824:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7828:	mov	r0, r4
    782c:	bl	7310 <readstat_begin_writing_data>
    7830:	cmp	r0, #0
    7834:	beq	779c <readstat_end_writing+0x34>
    7838:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    783c:	mov	r0, #0
    7840:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7844:	.word	0x00000048

00007848 <readstat_compare_string_refs>:
    7848:	push	{r4, r5, fp, lr}
    784c:	add	fp, sp, #8
    7850:	ldr	r1, [r1]
    7854:	ldrd	r2, [r1]
    7858:	ldr	r0, [r0]
    785c:	ldrd	r4, [r0]
    7860:	eor	r3, r5, r3
    7864:	eor	r5, r4, r2
    7868:	orrs	r3, r5, r3
    786c:	bne	7880 <readstat_compare_string_refs+0x38>
    7870:	ldr	r1, [r1, #8]
    7874:	ldr	r0, [r0, #8]
    7878:	subs	r0, r0, r1
    787c:	pop	{r4, r5, fp, pc}
    7880:	subs	r0, r4, r2
    7884:	pop	{r4, r5, fp, pc}

00007888 <readstat_copy_label>:
    7888:	push	{r4, r5, r6, sl, fp, lr}
    788c:	add	fp, sp, #16
    7890:	cmp	r1, #0
    7894:	beq	78d0 <readstat_copy_label+0x48>
    7898:	mov	r4, r1
    789c:	mov	r5, r0
    78a0:	mov	r0, r1
    78a4:	bl	4c8c <strlen@plt>
    78a8:	cmp	r0, #0
    78ac:	beq	78d0 <readstat_copy_label+0x48>
    78b0:	mov	r6, r0
    78b4:	str	r0, [r5, #28]
    78b8:	bl	4b90 <malloc@plt>
    78bc:	str	r0, [r5, #24]
    78c0:	mov	r1, r4
    78c4:	mov	r2, r6
    78c8:	pop	{r4, r5, r6, sl, fp, lr}
    78cc:	b	4998 <memcpy@plt>
    78d0:	pop	{r4, r5, r6, sl, fp, pc}

000078d4 <memreverse>:
    78d4:	push	{r4, r5, fp, lr}
    78d8:	add	fp, sp, #8
    78dc:	mov	r5, r1
    78e0:	mov	r4, r0
    78e4:	bl	492c <machine_is_little_endian@plt>
    78e8:	cmp	r0, #0
    78ec:	beq	7920 <memreverse+0x4c>
    78f0:	cmp	r5, #2
    78f4:	poplt	{r4, r5, fp, pc}
    78f8:	add	r0, r5, r5, lsr #31
    78fc:	asr	r0, r0, #1
    7900:	add	r1, r5, r4
    7904:	sub	r1, r1, #1
    7908:	ldrb	r2, [r4]
    790c:	ldrb	r3, [r1]
    7910:	strb	r3, [r4], #1
    7914:	strb	r2, [r1], #-1
    7918:	subs	r0, r0, #1
    791c:	bne	7908 <memreverse+0x34>
    7920:	pop	{r4, r5, fp, pc}

00007924 <cnxptiee>:
    7924:	push	{r4, r5, r6, r7, fp, lr}
    7928:	add	fp, sp, #16
    792c:	sub	sp, sp, #8
    7930:	mov	r5, r3
    7934:	mov	r4, r2
    7938:	mov	r7, r1
    793c:	mov	r6, r0
    7940:	cmp	r1, #0
    7944:	bne	7950 <cnxptiee+0x2c>
    7948:	bl	4c44 <get_native@plt>
    794c:	mov	r7, r0
    7950:	sub	r0, r7, #1
    7954:	cmp	r0, #2
    7958:	bcc	7994 <cnxptiee+0x70>
    795c:	mvn	r0, #0
    7960:	cmp	r7, #3
    7964:	bne	7a5c <cnxptiee+0x138>
    7968:	cmp	r5, #3
    796c:	beq	79bc <cnxptiee+0x98>
    7970:	add	r0, r6, #7
    7974:	mov	r1, #0
    7978:	mov	r6, sp
    797c:	ldrb	r2, [r0, -r1]
    7980:	strb	r2, [r6, r1]
    7984:	add	r1, r1, #1
    7988:	cmp	r1, #8
    798c:	bne	797c <cnxptiee+0x58>
    7990:	mov	r7, #2
    7994:	cmp	r5, #0
    7998:	bne	79a4 <cnxptiee+0x80>
    799c:	bl	4c44 <get_native@plt>
    79a0:	mov	r5, r0
    79a4:	sub	r1, r5, #1
    79a8:	mvn	r0, #1
    79ac:	cmp	r1, #2
    79b0:	bhi	7a5c <cnxptiee+0x138>
    79b4:	cmp	r7, r5
    79b8:	bne	79d8 <cnxptiee+0xb4>
    79bc:	ldr	r0, [r6]
    79c0:	ldr	r1, [r6, #4]
    79c4:	str	r1, [r4, #4]
    79c8:	str	r0, [r4]
    79cc:	mov	r0, #0
    79d0:	sub	sp, fp, #16
    79d4:	pop	{r4, r5, r6, r7, fp, pc}
    79d8:	cmp	r7, #1
    79dc:	beq	7a00 <cnxptiee+0xdc>
    79e0:	cmp	r7, #2
    79e4:	bne	7a20 <cnxptiee+0xfc>
    79e8:	cmp	r5, #1
    79ec:	bne	7a10 <cnxptiee+0xec>
    79f0:	mov	r0, r6
    79f4:	mov	r1, r4
    79f8:	bl	7a64 <ieee2xpt>
    79fc:	b	79cc <cnxptiee+0xa8>
    7a00:	mov	r0, r6
    7a04:	mov	r1, r4
    7a08:	bl	7bd0 <xpt2ieee>
    7a0c:	b	7a20 <cnxptiee+0xfc>
    7a10:	ldr	r0, [r6]
    7a14:	ldr	r1, [r6, #4]
    7a18:	str	r1, [r4, #4]
    7a1c:	str	r0, [r4]
    7a20:	mov	r0, #0
    7a24:	cmp	r5, #3
    7a28:	bne	7a5c <cnxptiee+0x138>
    7a2c:	ldr	r0, [r4]
    7a30:	ldr	r1, [r4, #4]
    7a34:	stm	sp, {r0, r1}
    7a38:	mov	r0, sp
    7a3c:	orr	r1, r0, #7
    7a40:	mov	r0, #0
    7a44:	mov	r2, #0
    7a48:	ldrb	r3, [r1, -r2]
    7a4c:	strb	r3, [r4, r2]
    7a50:	add	r2, r2, #1
    7a54:	cmp	r2, #8
    7a58:	bne	7a48 <cnxptiee+0x124>
    7a5c:	sub	sp, fp, #16
    7a60:	pop	{r4, r5, r6, r7, fp, pc}

00007a64 <ieee2xpt>:
    7a64:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    7a68:	add	fp, sp, #24
    7a6c:	sub	sp, sp, #16
    7a70:	mov	r8, r1
    7a74:	ldr	r6, [r0, #4]
    7a78:	ldrb	r7, [r0]
    7a7c:	ldrb	r4, [r0, #1]
    7a80:	ldrb	r5, [r0, #2]
    7a84:	ldrb	r0, [r0, #3]
    7a88:	strb	r0, [sp, #7]
    7a8c:	strb	r5, [sp, #6]
    7a90:	strb	r4, [sp, #5]
    7a94:	strb	r7, [sp, #4]
    7a98:	add	r0, sp, #4
    7a9c:	mov	r1, #4
    7aa0:	bl	483c <memreverse@plt>
    7aa4:	str	r6, [sp]
    7aa8:	mov	r0, sp
    7aac:	mov	r1, #4
    7ab0:	bl	483c <memreverse@plt>
    7ab4:	mov	r0, #0
    7ab8:	str	r0, [r8, #4]
    7abc:	str	r0, [r8]
    7ac0:	and	r0, r4, r7
    7ac4:	uxtb	r0, r0
    7ac8:	cmp	r0, #255	; 0xff
    7acc:	beq	7b68 <ieee2xpt+0x104>
    7ad0:	ldr	r2, [sp]
    7ad4:	str	r2, [sp, #8]
    7ad8:	ldr	r0, [sp, #4]
    7adc:	mov	r1, r0
    7ae0:	bfc	r1, #20, #12
    7ae4:	str	r1, [sp, #12]
    7ae8:	orrs	r3, r2, r0
    7aec:	beq	7ba0 <ieee2xpt+0x13c>
    7af0:	orr	r3, r1, #1048576	; 0x100000
    7af4:	str	r3, [sp, #12]
    7af8:	ubfx	r1, r0, #20, #11
    7afc:	movw	r7, #1023	; 0x3ff
    7b00:	sub	r1, r1, r7
    7b04:	ands	r5, r1, #3
    7b08:	beq	7b2c <ieee2xpt+0xc8>
    7b0c:	lsl	r7, r2, r5
    7b10:	str	r7, [sp, #8]
    7b14:	mov	r7, #224	; 0xe0
    7b18:	and	r2, r7, r2, lsr #24
    7b1c:	rsb	r7, r5, #8
    7b20:	lsr	r2, r2, r7
    7b24:	orr	r2, r2, r3, lsl r5
    7b28:	str	r2, [sp, #12]
    7b2c:	mov	r2, #-16777216	; 0xff000000
    7b30:	and	r2, r2, r1, lsl #22
    7b34:	add	r2, r2, #1090519040	; 0x41000000
    7b38:	and	r3, r0, #-2147483648	; 0x80000000
    7b3c:	orr	r2, r2, r3
    7b40:	ldr	r3, [sp, #12]
    7b44:	orr	r2, r2, r3
    7b48:	str	r2, [sp, #12]
    7b4c:	cmn	r1, #260	; 0x104
    7b50:	bge	7b78 <ieee2xpt+0x114>
    7b54:	mov	r0, #0
    7b58:	str	r0, [r8, #4]
    7b5c:	str	r0, [r8]
    7b60:	sub	sp, fp, #24
    7b64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7b68:	mvn	r0, r5
    7b6c:	cmp	r5, #45	; 0x2d
    7b70:	movweq	r0, #109	; 0x6d
    7b74:	b	7b94 <ieee2xpt+0x130>
    7b78:	cmp	r1, #249	; 0xf9
    7b7c:	blt	7ba0 <ieee2xpt+0x13c>
    7b80:	mvn	r1, #0
    7b84:	str	r1, [r8, #4]
    7b88:	str	r1, [r8, #1]
    7b8c:	mov	r1, #127	; 0x7f
    7b90:	orr	r0, r1, r0, lsr #24
    7b94:	strb	r0, [r8]
    7b98:	sub	sp, fp, #24
    7b9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7ba0:	add	r0, sp, #12
    7ba4:	mov	r1, #4
    7ba8:	bl	483c <memreverse@plt>
    7bac:	ldr	r0, [sp, #12]
    7bb0:	str	r0, [r8]
    7bb4:	add	r0, sp, #8
    7bb8:	mov	r1, #4
    7bbc:	bl	483c <memreverse@plt>
    7bc0:	ldr	r0, [sp, #8]
    7bc4:	str	r0, [r8, #4]
    7bc8:	sub	sp, fp, #24
    7bcc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00007bd0 <xpt2ieee>:
    7bd0:	push	{r4, r5, fp, lr}
    7bd4:	add	fp, sp, #8
    7bd8:	sub	sp, sp, #24
    7bdc:	mov	r4, r1
    7be0:	mov	r1, #0
    7be4:	str	r1, [sp, #4]
    7be8:	str	r1, [sp]
    7bec:	ldr	r2, [r0]
    7bf0:	ldr	r0, [r0, #4]
    7bf4:	str	r0, [sp, #20]
    7bf8:	str	r2, [sp, #16]
    7bfc:	str	r1, [r4, #4]
    7c00:	str	r1, [r4]
    7c04:	ldrb	r5, [sp, #16]
    7c08:	cmp	r5, #0
    7c0c:	beq	7c2c <xpt2ieee+0x5c>
    7c10:	add	r0, sp, #16
    7c14:	orr	r0, r0, #1
    7c18:	mov	r1, r4
    7c1c:	mov	r2, #7
    7c20:	bl	4c74 <bcmp@plt>
    7c24:	cmp	r0, #0
    7c28:	beq	7d34 <xpt2ieee+0x164>
    7c2c:	ldr	r0, [sp, #16]
    7c30:	str	r0, [sp, #4]
    7c34:	add	r0, sp, #4
    7c38:	mov	r1, #4
    7c3c:	bl	483c <memreverse@plt>
    7c40:	ldr	r0, [sp, #20]
    7c44:	str	r0, [sp]
    7c48:	mov	r0, sp
    7c4c:	mov	r1, #4
    7c50:	bl	483c <memreverse@plt>
    7c54:	ldr	r0, [sp, #4]
    7c58:	bic	r2, r0, #-2147483648	; 0x80000000
    7c5c:	ldr	r1, [sp]
    7c60:	cmn	r2, #-2147483647	; 0x80000001
    7c64:	cmneq	r1, #1
    7c68:	beq	7ce8 <xpt2ieee+0x118>
    7c6c:	str	r1, [sp, #8]
    7c70:	bic	r2, r0, #-16777216	; 0xff000000
    7c74:	str	r2, [sp, #12]
    7c78:	orrs	r3, r1, r0
    7c7c:	beq	7d2c <xpt2ieee+0x15c>
    7c80:	mov	r3, #3
    7c84:	tst	r0, #8388608	; 0x800000
    7c88:	moveq	r3, #2
    7c8c:	tsteq	r0, #4194304	; 0x400000
    7c90:	beq	7d4c <xpt2ieee+0x17c>
    7c94:	lsr	r2, r2, r3
    7c98:	str	r2, [sp, #12]
    7c9c:	rsb	ip, r3, #32
    7ca0:	and	r2, r0, #7
    7ca4:	lsl	r2, r2, ip
    7ca8:	orr	r1, r2, r1, lsr r3
    7cac:	str	r1, [sp, #8]
    7cb0:	mov	ip, r3
    7cb4:	and	r1, r5, #127	; 0x7f
    7cb8:	orr	r1, ip, r1, lsl #2
    7cbc:	movw	r2, #0
    7cc0:	movt	r2, #61376	; 0xefc0
    7cc4:	add	r1, r2, r1, lsl #20
    7cc8:	add	r1, r1, #267386880	; 0xff00000
    7ccc:	add	r1, r1, #805306368	; 0x30000000
    7cd0:	and	r0, r0, #-2147483648	; 0x80000000
    7cd4:	ldr	r2, [sp, #12]
    7cd8:	bic	r2, r2, #1048576	; 0x100000
    7cdc:	orr	r0, r2, r0
    7ce0:	orr	r0, r0, r1
    7ce4:	b	7d00 <xpt2ieee+0x130>
    7ce8:	mov	r1, #0
    7cec:	str	r1, [sp, #8]
    7cf0:	movw	r1, #0
    7cf4:	movt	r1, #16368	; 0x3ff0
    7cf8:	bfi	r0, r1, #0, #31
    7cfc:	orr	r0, r0, #1073741824	; 0x40000000
    7d00:	str	r0, [sp, #12]
    7d04:	add	r0, sp, #12
    7d08:	mov	r1, #4
    7d0c:	bl	483c <memreverse@plt>
    7d10:	ldr	r0, [sp, #12]
    7d14:	str	r0, [r4]
    7d18:	add	r0, sp, #8
    7d1c:	mov	r1, #4
    7d20:	bl	483c <memreverse@plt>
    7d24:	ldr	r0, [sp, #8]
    7d28:	str	r0, [r4, #4]
    7d2c:	sub	sp, fp, #8
    7d30:	pop	{r4, r5, fp, pc}
    7d34:	movw	r0, #65535	; 0xffff
    7d38:	strh	r0, [r4]
    7d3c:	mvn	r0, r5
    7d40:	strb	r0, [r4, #2]
    7d44:	sub	sp, fp, #8
    7d48:	pop	{r4, r5, fp, pc}
    7d4c:	mov	r3, #1
    7d50:	mov	ip, #0
    7d54:	tst	r0, #2097152	; 0x200000
    7d58:	bne	7c94 <xpt2ieee+0xc4>
    7d5c:	b	7cb4 <xpt2ieee+0xe4>

00007d60 <get_native>:
    7d60:	push	{r4, r5, r6, sl, fp, lr}
    7d64:	add	fp, sp, #16
    7d68:	mov	r4, #0
    7d6c:	ldr	r5, [pc, #68]	; 7db8 <get_native+0x58>
    7d70:	add	r5, pc, r5
    7d74:	ldr	r6, [pc, #64]	; 7dbc <get_native+0x5c>
    7d78:	add	r6, pc, r6
    7d7c:	cmp	r4, #3
    7d80:	beq	7dac <get_native+0x4c>
    7d84:	mov	r0, r6
    7d88:	mov	r1, r5
    7d8c:	mov	r2, #8
    7d90:	bl	4c74 <bcmp@plt>
    7d94:	add	r5, r5, #8
    7d98:	add	r4, r4, #1
    7d9c:	cmp	r0, #0
    7da0:	bne	7d7c <get_native+0x1c>
    7da4:	mov	r0, r4
    7da8:	pop	{r4, r5, r6, sl, fp, pc}
    7dac:	mvn	r4, #0
    7db0:	mov	r0, r4
    7db4:	pop	{r4, r5, r6, sl, fp, pc}
    7db8:	.word	0x0003d5b0
    7dbc:	.word	0x0003d5c0

00007dc0 <sas_read8>:
    7dc0:	mov	r2, r1
    7dc4:	mov	r1, r0
    7dc8:	ldr	r0, [r0]
    7dcc:	ldr	r1, [r1, #4]
    7dd0:	cmp	r2, #0
    7dd4:	bxeq	lr
    7dd8:	b	47f4 <byteswap8@plt>

00007ddc <sas_read4>:
    7ddc:	ldr	r0, [r0]
    7de0:	cmp	r1, #0
    7de4:	bxeq	lr
    7de8:	b	480c <byteswap4@plt>

00007dec <sas_read2>:
    7dec:	ldrh	r0, [r0]
    7df0:	cmp	r1, #0
    7df4:	bxeq	lr
    7df8:	b	4920 <byteswap2@plt>

00007dfc <sas_subheader_remainder>:
    7dfc:	sub	r0, r0, r1, lsl #1
    7e00:	sub	r0, r0, #4
    7e04:	bx	lr

00007e08 <sas_read_header>:
    7e08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7e0c:	add	fp, sp, #28
    7e10:	sub	sp, sp, #412	; 0x19c
    7e14:	sub	sp, sp, #1024	; 0x400
    7e18:	mov	r4, r3
    7e1c:	mov	r5, r2
    7e20:	mov	sl, r1
    7e24:	mov	r6, r0
    7e28:	vmov.i32	q8, #0	; 0x00000000
    7e2c:	add	r0, sp, #72	; 0x48
    7e30:	add	r1, r0, #16
    7e34:	vst1.64	{d16-d17}, [r1]
    7e38:	add	r1, r0, #28
    7e3c:	vst1.32	{d16-d17}, [r1]
    7e40:	mov	r1, #20
    7e44:	mov	r2, r0
    7e48:	vst1.64	{d16-d17}, [r2], r1
    7e4c:	mov	r1, #60	; 0x3c
    7e50:	str	r1, [r2]
    7e54:	mov	r1, #1
    7e58:	str	r1, [sp, #84]	; 0x54
    7e5c:	bl	48cc <mktime@plt>
    7e60:	mov	r7, r0
    7e64:	ldr	r3, [r6, #12]
    7e68:	ldr	r2, [r6, #20]
    7e6c:	sub	r0, fp, #196	; 0xc4
    7e70:	mov	r1, #164	; 0xa4
    7e74:	blx	r3
    7e78:	cmp	r0, #164	; 0xa4
    7e7c:	bcs	7e88 <sas_read_header+0x80>
    7e80:	mov	r5, #2
    7e84:	b	836c <sas_read_header+0x564>
    7e88:	str	r5, [sp, #32]
    7e8c:	ldr	r1, [pc, #1252]	; 8378 <sas_read_header+0x570>
    7e90:	ldr	r1, [pc, r1]
    7e94:	sub	r9, fp, #196	; 0xc4
    7e98:	mov	r0, r9
    7e9c:	mov	r2, #32
    7ea0:	bl	4c74 <bcmp@plt>
    7ea4:	cmp	r0, #0
    7ea8:	beq	7ecc <sas_read_header+0xc4>
    7eac:	ldr	r1, [pc, #1224]	; 837c <sas_read_header+0x574>
    7eb0:	ldr	r1, [pc, r1]
    7eb4:	sub	r0, fp, #196	; 0xc4
    7eb8:	mov	r2, #32
    7ebc:	bl	4c74 <bcmp@plt>
    7ec0:	mov	r5, #5
    7ec4:	cmp	r0, #0
    7ec8:	bne	836c <sas_read_header+0x564>
    7ecc:	ldrb	r0, [fp, #-161]	; 0xffffff5f
    7ed0:	cmp	r0, #51	; 0x33
    7ed4:	moveq	r0, #4
    7ed8:	streq	r0, [sl, #24]
    7edc:	ldrb	r0, [fp, #-164]	; 0xffffff5c
    7ee0:	cmp	r0, #51	; 0x33
    7ee4:	moveq	r0, #1
    7ee8:	streq	r0, [sl, #4]
    7eec:	mov	r5, #5
    7ef0:	ldrb	r0, [fp, #-159]	; 0xffffff61
    7ef4:	cmp	r0, #1
    7ef8:	beq	7f14 <sas_read_header+0x10c>
    7efc:	cmp	r0, #0
    7f00:	bne	836c <sas_read_header+0x564>
    7f04:	mov	r8, #0
    7f08:	bl	492c <machine_is_little_endian@plt>
    7f0c:	str	r0, [sp, #28]
    7f10:	b	7f28 <sas_read_header+0x120>
    7f14:	bl	492c <machine_is_little_endian@plt>
    7f18:	clz	r0, r0
    7f1c:	lsr	r0, r0, #5
    7f20:	str	r0, [sp, #28]
    7f24:	mov	r8, #1
    7f28:	add	r0, sl, #32
    7f2c:	str	r0, [sp, #24]
    7f30:	add	r0, sl, #40	; 0x28
    7f34:	str	r0, [sp, #20]
    7f38:	add	lr, sl, #48	; 0x30
    7f3c:	add	ip, sl, #56	; 0x38
    7f40:	add	r5, sl, #64	; 0x40
    7f44:	str	r8, [sl]
    7f48:	ldr	r0, [pc, #1072]	; 8380 <sas_read_header+0x578>
    7f4c:	add	r0, pc, r0
    7f50:	add	r0, r0, #4
    7f54:	mov	r1, #62	; 0x3e
    7f58:	ldrb	r2, [fp, #-126]	; 0xffffff82
    7f5c:	mov	r8, r4
    7f60:	ldr	r3, [r0, #-4]
    7f64:	cmp	r3, r2
    7f68:	beq	7f7c <sas_read_header+0x174>
    7f6c:	subs	r1, r1, #1
    7f70:	add	r0, r0, #36	; 0x24
    7f74:	bne	7f60 <sas_read_header+0x158>
    7f78:	b	7f80 <sas_read_header+0x178>
    7f7c:	str	r0, [sl, #144]	; 0x90
    7f80:	ldr	r0, [sl, #144]	; 0x90
    7f84:	cmp	r0, #0
    7f88:	beq	80f4 <sas_read_header+0x2ec>
    7f8c:	mov	r4, lr
    7f90:	str	ip, [sp, #12]
    7f94:	str	r5, [sp, #16]
    7f98:	add	r0, r9, #92	; 0x5c
    7f9c:	add	r1, r9, #108	; 0x6c
    7fa0:	add	r2, r9, #140	; 0x8c
    7fa4:	vld1.32	{d16-d17}, [r2]
    7fa8:	add	r2, sl, #128	; 0x80
    7fac:	add	r3, r9, #124	; 0x7c
    7fb0:	vld1.32	{d18-d19}, [r3]
    7fb4:	vld1.32	{d20-d21}, [r1]
    7fb8:	vld1.32	{d22-d23}, [r0]
    7fbc:	vst1.8	{d16-d17}, [r2]
    7fc0:	add	r0, sl, #112	; 0x70
    7fc4:	vst1.8	{d18-d19}, [r0]
    7fc8:	add	r0, sl, #96	; 0x60
    7fcc:	vst1.8	{d20-d21}, [r0]
    7fd0:	add	r0, sl, #80	; 0x50
    7fd4:	vst1.8	{d22-d23}, [r0]
    7fd8:	ldr	r0, [sl, #24]
    7fdc:	ldr	r3, [r6, #8]
    7fe0:	ldr	r2, [r6, #20]
    7fe4:	mov	r1, #1
    7fe8:	blx	r3
    7fec:	cmn	r0, #1
    7ff0:	beq	8368 <sas_read_header+0x560>
    7ff4:	ldr	r3, [r6, #12]
    7ff8:	ldr	r2, [r6, #20]
    7ffc:	add	r0, sp, #64	; 0x40
    8000:	mov	r1, #8
    8004:	blx	r3
    8008:	cmp	r0, #8
    800c:	bcc	7e80 <sas_read_header+0x78>
    8010:	ldr	r5, [sp, #28]
    8014:	cmp	r5, #0
    8018:	beq	8028 <sas_read_header+0x220>
    801c:	vldr	d0, [sp, #64]	; 0x40
    8020:	bl	4fa4 <byteswap_double@plt>
    8024:	vstr	d0, [sp, #64]	; 0x40
    8028:	ldr	r3, [r6, #12]
    802c:	ldr	r2, [r6, #20]
    8030:	add	r0, sp, #56	; 0x38
    8034:	mov	r1, #8
    8038:	blx	r3
    803c:	cmp	r0, #8
    8040:	bcc	7e80 <sas_read_header+0x78>
    8044:	cmp	r5, #0
    8048:	beq	8058 <sas_read_header+0x250>
    804c:	vldr	d0, [sp, #56]	; 0x38
    8050:	bl	4fa4 <byteswap_double@plt>
    8054:	vstr	d0, [sp, #56]	; 0x38
    8058:	vldr	d0, [sp, #64]	; 0x40
    805c:	mov	r0, r7
    8060:	bl	8398 <sas_convert_time>
    8064:	str	r0, [sl, #72]	; 0x48
    8068:	vldr	d0, [sp, #56]	; 0x38
    806c:	mov	r0, r7
    8070:	bl	8398 <sas_convert_time>
    8074:	str	r0, [sl, #76]	; 0x4c
    8078:	ldr	r3, [r6, #8]
    807c:	ldr	r2, [r6, #20]
    8080:	mov	r0, #16
    8084:	mov	r1, #1
    8088:	blx	r3
    808c:	cmn	r0, #1
    8090:	beq	8368 <sas_read_header+0x560>
    8094:	ldr	r3, [r6, #12]
    8098:	ldr	r2, [r6, #20]
    809c:	add	r0, sp, #52	; 0x34
    80a0:	mov	r1, #4
    80a4:	blx	r3
    80a8:	cmp	r0, #4
    80ac:	bcc	7e80 <sas_read_header+0x78>
    80b0:	ldr	r3, [r6, #12]
    80b4:	ldr	r2, [r6, #20]
    80b8:	add	r0, sp, #48	; 0x30
    80bc:	mov	r1, #4
    80c0:	blx	r3
    80c4:	cmp	r0, #4
    80c8:	bcc	7e80 <sas_read_header+0x78>
    80cc:	ldr	r0, [sp, #52]	; 0x34
    80d0:	cmp	r5, #0
    80d4:	beq	8130 <sas_read_header+0x328>
    80d8:	bl	480c <byteswap4@plt>
    80dc:	mov	r1, #0
    80e0:	ldr	r2, [sp, #16]
    80e4:	strd	r0, [r2]
    80e8:	ldr	r0, [sp, #48]	; 0x30
    80ec:	bl	480c <byteswap4@plt>
    80f0:	b	8140 <sas_read_header+0x338>
    80f4:	mov	r5, #7
    80f8:	ldr	r6, [sp, #32]
    80fc:	cmp	r6, #0
    8100:	beq	836c <sas_read_header+0x564>
    8104:	ldrb	r3, [fp, #-126]	; 0xffffff82
    8108:	add	r4, sp, #120	; 0x78
    810c:	ldr	r2, [pc, #624]	; 8384 <sas_read_header+0x57c>
    8110:	add	r2, pc, r2
    8114:	mov	r0, r4
    8118:	mov	r1, #1024	; 0x400
    811c:	bl	4d04 <snprintf@plt>
    8120:	mov	r0, r4
    8124:	mov	r1, r8
    8128:	blx	r6
    812c:	b	836c <sas_read_header+0x564>
    8130:	mov	r1, #0
    8134:	ldr	r2, [sp, #16]
    8138:	strd	r0, [r2]
    813c:	ldr	r0, [sp, #48]	; 0x30
    8140:	ldr	r2, [sp, #24]
    8144:	mov	r1, #0
    8148:	strd	r0, [r2]
    814c:	cmp	r0, #1024	; 0x400
    8150:	bcc	81dc <sas_read_header+0x3d4>
    8154:	ldr	r1, [sp, #16]
    8158:	ldr	r2, [r1]
    815c:	ldr	r1, [r1, #4]
    8160:	subs	r3, r2, #1024	; 0x400
    8164:	sbcs	r3, r1, #0
    8168:	blt	81dc <sas_read_header+0x3d4>
    816c:	cmp	r0, #16777216	; 0x1000000
    8170:	bhi	81dc <sas_read_header+0x3d4>
    8174:	rsbs	r0, r2, #1048576	; 0x100000
    8178:	rscs	r0, r1, #0
    817c:	blt	81dc <sas_read_header+0x3d4>
    8180:	ldr	r0, [sl, #4]
    8184:	mov	r1, #0
    8188:	cmp	r0, #0
    818c:	beq	81e4 <sas_read_header+0x3dc>
    8190:	mov	r0, #40	; 0x28
    8194:	ldr	r2, [sp, #20]
    8198:	strd	r0, [r2]
    819c:	mov	r0, #24
    81a0:	strd	r0, [r4]
    81a4:	ldr	r3, [r6, #12]
    81a8:	ldr	r2, [r6, #20]
    81ac:	add	r0, sp, #120	; 0x78
    81b0:	mov	r1, #8
    81b4:	blx	r3
    81b8:	cmp	r0, #8
    81bc:	bcc	7e80 <sas_read_header+0x78>
    81c0:	ldr	r0, [sp, #120]	; 0x78
    81c4:	ldr	r1, [sp, #124]	; 0x7c
    81c8:	cmp	r5, #0
    81cc:	beq	81d4 <sas_read_header+0x3cc>
    81d0:	bl	47f4 <byteswap8@plt>
    81d4:	mov	r5, #5
    81d8:	b	822c <sas_read_header+0x424>
    81dc:	mov	r5, #5
    81e0:	b	836c <sas_read_header+0x564>
    81e4:	mov	r0, #24
    81e8:	ldr	r2, [sp, #20]
    81ec:	strd	r0, [r2]
    81f0:	mov	r0, #12
    81f4:	strd	r0, [r4]
    81f8:	ldr	r3, [r6, #12]
    81fc:	ldr	r2, [r6, #20]
    8200:	add	r0, sp, #120	; 0x78
    8204:	mov	r1, #4
    8208:	blx	r3
    820c:	cmp	r0, #4
    8210:	bcc	7e80 <sas_read_header+0x78>
    8214:	ldr	r0, [sp, #120]	; 0x78
    8218:	cmp	r5, #0
    821c:	beq	8224 <sas_read_header+0x41c>
    8220:	bl	480c <byteswap4@plt>
    8224:	mov	r5, #5
    8228:	mov	r1, #0
    822c:	ldr	r4, [sp, #12]
    8230:	strd	r0, [r4]
    8234:	ldrd	r0, [r4]
    8238:	rsbs	r0, r0, #16777216	; 0x1000000
    823c:	rscs	r0, r1, #0
    8240:	blt	836c <sas_read_header+0x564>
    8244:	ldr	r3, [r6, #8]
    8248:	ldr	r2, [r6, #20]
    824c:	mov	r0, #8
    8250:	mov	r1, #1
    8254:	blx	r3
    8258:	cmn	r0, #1
    825c:	beq	8330 <sas_read_header+0x528>
    8260:	ldr	r3, [r6, #12]
    8264:	ldr	r2, [r6, #20]
    8268:	sub	r0, fp, #316	; 0x13c
    826c:	mov	r1, #120	; 0x78
    8270:	blx	r3
    8274:	cmp	r0, #120	; 0x78
    8278:	mov	r5, #2
    827c:	bcc	836c <sas_read_header+0x564>
    8280:	add	r0, sp, #36	; 0x24
    8284:	str	r0, [sp]
    8288:	sub	r0, fp, #316	; 0x13c
    828c:	ldr	r1, [pc, #248]	; 838c <sas_read_header+0x584>
    8290:	add	r1, pc, r1
    8294:	add	r2, sp, #44	; 0x2c
    8298:	add	r3, sp, #40	; 0x28
    829c:	bl	4d10 <__isoc99_sscanf@plt>
    82a0:	cmp	r0, #3
    82a4:	mov	r5, #5
    82a8:	bne	836c <sas_read_header+0x564>
    82ac:	ldr	r0, [sp, #44]	; 0x2c
    82b0:	ldr	r1, [sp, #40]	; 0x28
    82b4:	ldr	r2, [sp, #36]	; 0x24
    82b8:	orr	r3, r2, r1
    82bc:	orr	r5, r0, #1
    82c0:	eor	r5, r5, #9
    82c4:	orrs	r3, r5, r3
    82c8:	movwne	r3, #1
    82cc:	str	r3, [sl, #8]
    82d0:	add	r3, sl, #12
    82d4:	stm	r3, {r0, r1, r2}
    82d8:	ldr	r0, [sp, #16]
    82dc:	ldr	r0, [r0]
    82e0:	ldr	r3, [r6, #8]
    82e4:	ldr	r2, [r6, #20]
    82e8:	mov	r5, #0
    82ec:	mov	r1, #0
    82f0:	blx	r3
    82f4:	cmn	r0, #1
    82f8:	bne	836c <sas_read_header+0x564>
    82fc:	ldr	r0, [sp, #32]
    8300:	cmp	r0, #0
    8304:	beq	8368 <sas_read_header+0x560>
    8308:	ldr	r0, [sp, #16]
    830c:	ldrd	r0, [r0]
    8310:	stm	sp, {r0, r1}
    8314:	add	r4, sp, #120	; 0x78
    8318:	ldr	r2, [pc, #112]	; 8390 <sas_read_header+0x588>
    831c:	add	r2, pc, r2
    8320:	mov	r0, r4
    8324:	mov	r1, #1024	; 0x400
    8328:	bl	4d04 <snprintf@plt>
    832c:	b	8358 <sas_read_header+0x550>
    8330:	ldr	r0, [sp, #32]
    8334:	cmp	r0, #0
    8338:	beq	8368 <sas_read_header+0x560>
    833c:	add	r4, sp, #120	; 0x78
    8340:	ldr	r2, [pc, #64]	; 8388 <sas_read_header+0x580>
    8344:	add	r2, pc, r2
    8348:	mov	r0, r4
    834c:	mov	r1, #1024	; 0x400
    8350:	mov	r3, #8
    8354:	bl	4d04 <snprintf@plt>
    8358:	mov	r0, r4
    835c:	mov	r1, r8
    8360:	ldr	r2, [sp, #32]
    8364:	blx	r2
    8368:	mov	r5, #15
    836c:	mov	r0, r5
    8370:	sub	sp, fp, #28
    8374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8378:	.word	0x0003d468
    837c:	.word	0x0003d418
    8380:	.word	0x0003d434
    8384:	.word	0x0001d950
    8388:	.word	0x0001d73f
    838c:	.word	0x0001d81a
    8390:	.word	0x0001d79b
    8394:	.word	0xe320f000

00008398 <sas_convert_time>:
    8398:	push	{fp, lr}
    839c:	mov	fp, sp
    83a0:	vpush	{d8}
    83a4:	vmov	s2, r0
    83a8:	vcvt.f64.s32	d16, s2
    83ac:	vadd.f64	d8, d16, d0
    83b0:	vmov.f64	d0, d8
    83b4:	bl	4db8 <__isnan@plt>
    83b8:	mov	r1, r0
    83bc:	mov	r0, #0
    83c0:	cmp	r1, #0
    83c4:	bne	83f8 <sas_convert_time+0x60>
    83c8:	vldr	d16, [pc, #48]	; 8400 <sas_convert_time+0x68>
    83cc:	mvn	r0, #-2147483648	; 0x80000000
    83d0:	vcmpe.f64	d8, d16
    83d4:	vmrs	APSR_nzcv, fpscr
    83d8:	bgt	83f8 <sas_convert_time+0x60>
    83dc:	vldr	d16, [pc, #36]	; 8408 <sas_convert_time+0x70>
    83e0:	mov	r0, #-2147483648	; 0x80000000
    83e4:	vcmpe.f64	d8, d16
    83e8:	vmrs	APSR_nzcv, fpscr
    83ec:	bmi	83f8 <sas_convert_time+0x60>
    83f0:	vcvt.s32.f64	s0, d8
    83f4:	vmov	r0, s0
    83f8:	vpop	{d8}
    83fc:	pop	{fp, pc}
    8400:	.word	0xffc00000
    8404:	.word	0x41dfffff
    8408:	.word	0x00000000
    840c:	.word	0xc1e00000

00008410 <sas_write_header>:
    8410:	sub	sp, sp, #8
    8414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8418:	add	fp, sp, #28
    841c:	sub	sp, sp, #228	; 0xe4
    8420:	mov	r8, r1
    8424:	mov	sl, r0
    8428:	str	r2, [fp, #8]
    842c:	str	r3, [fp, #12]
    8430:	vmov.i32	q8, #0	; 0x00000000
    8434:	sub	r0, fp, #80	; 0x50
    8438:	add	r1, r0, #16
    843c:	vst1.64	{d16-d17}, [r1]
    8440:	add	r1, r0, #28
    8444:	vst1.32	{d16-d17}, [r1]
    8448:	mov	r1, #20
    844c:	mov	r2, r0
    8450:	vst1.64	{d16-d17}, [r2], r1
    8454:	mov	r1, #60	; 0x3c
    8458:	str	r1, [r2]
    845c:	mov	r1, #1
    8460:	str	r1, [fp, #-68]	; 0xffffffbc
    8464:	bl	48cc <mktime@plt>
    8468:	mov	r9, r0
    846c:	add	r7, fp, #8
    8470:	add	r5, r7, #92	; 0x5c
    8474:	mov	r6, #64	; 0x40
    8478:	mov	r0, r5
    847c:	mov	r1, #32
    8480:	mov	r2, #64	; 0x40
    8484:	bl	4d28 <memset@plt>
    8488:	add	r4, sl, #88	; 0x58
    848c:	mov	r0, r4
    8490:	bl	4c8c <strlen@plt>
    8494:	cmp	r0, #64	; 0x40
    8498:	movcc	r6, r0
    849c:	cmp	r6, #0
    84a0:	beq	84b8 <sas_write_header+0xa8>
    84a4:	mov	r0, r5
    84a8:	mov	r1, r4
    84ac:	mov	r2, r6
    84b0:	bl	4998 <memcpy@plt>
    84b4:	b	84d0 <sas_write_header+0xc0>
    84b8:	movw	r0, #21313	; 0x5341
    84bc:	movt	r0, #21573	; 0x5445
    84c0:	str	r0, [r5, #3]
    84c4:	movw	r0, #16708	; 0x4144
    84c8:	movt	r0, #16724	; 0x4154
    84cc:	str	r0, [r5]
    84d0:	mov	r0, sl
    84d4:	mov	r1, r7
    84d8:	mov	r2, #164	; 0xa4
    84dc:	bl	4ef0 <readstat_write_bytes@plt>
    84e0:	cmp	r0, #0
    84e4:	bne	86ac <sas_write_header+0x29c>
    84e8:	ldr	r1, [r8, #24]
    84ec:	mov	r0, sl
    84f0:	bl	4a88 <readstat_write_zeros@plt>
    84f4:	cmp	r0, #0
    84f8:	bne	86ac <sas_write_header+0x29c>
    84fc:	ldr	r0, [r8, #72]	; 0x48
    8500:	sub	r0, r0, r9
    8504:	vmov	s0, r0
    8508:	vcvt.f64.s32	d16, s0
    850c:	vstr	d16, [fp, #-88]	; 0xffffffa8
    8510:	sub	r1, fp, #88	; 0x58
    8514:	mov	r0, sl
    8518:	mov	r2, #8
    851c:	bl	4ef0 <readstat_write_bytes@plt>
    8520:	cmp	r0, #0
    8524:	bne	86ac <sas_write_header+0x29c>
    8528:	ldr	r0, [r8, #76]	; 0x4c
    852c:	sub	r0, r0, r9
    8530:	vmov	s0, r0
    8534:	vcvt.f64.s32	d16, s0
    8538:	vstr	d16, [fp, #-96]	; 0xffffffa0
    853c:	sub	r1, fp, #96	; 0x60
    8540:	mov	r0, sl
    8544:	mov	r2, #8
    8548:	bl	4ef0 <readstat_write_bytes@plt>
    854c:	cmp	r0, #0
    8550:	bne	86ac <sas_write_header+0x29c>
    8554:	mov	r0, sl
    8558:	mov	r1, #16
    855c:	bl	4a88 <readstat_write_zeros@plt>
    8560:	cmp	r0, #0
    8564:	bne	86ac <sas_write_header+0x29c>
    8568:	add	r0, r8, #32
    856c:	add	r4, r8, #64	; 0x40
    8570:	ldr	r1, [r4]
    8574:	str	r1, [fp, #-100]	; 0xffffff9c
    8578:	ldr	r0, [r0]
    857c:	str	r0, [fp, #-104]	; 0xffffff98
    8580:	sub	r1, fp, #100	; 0x64
    8584:	mov	r0, sl
    8588:	mov	r2, #4
    858c:	bl	4ef0 <readstat_write_bytes@plt>
    8590:	cmp	r0, #0
    8594:	bne	86ac <sas_write_header+0x29c>
    8598:	sub	r1, fp, #104	; 0x68
    859c:	mov	r0, sl
    85a0:	mov	r2, #4
    85a4:	bl	4ef0 <readstat_write_bytes@plt>
    85a8:	cmp	r0, #0
    85ac:	bne	86ac <sas_write_header+0x29c>
    85b0:	add	r0, r8, #56	; 0x38
    85b4:	ldr	r1, [r8, #4]
    85b8:	cmp	r1, #0
    85bc:	beq	85dc <sas_write_header+0x1cc>
    85c0:	ldrd	r0, [r0]
    85c4:	str	r1, [fp, #-108]	; 0xffffff94
    85c8:	str	r0, [fp, #-112]	; 0xffffff90
    85cc:	sub	r1, fp, #112	; 0x70
    85d0:	mov	r0, sl
    85d4:	mov	r2, #8
    85d8:	b	85f0 <sas_write_header+0x1e0>
    85dc:	ldr	r0, [r0]
    85e0:	str	r0, [fp, #-112]	; 0xffffff90
    85e4:	sub	r1, fp, #112	; 0x70
    85e8:	mov	r0, sl
    85ec:	mov	r2, #4
    85f0:	bl	4ef0 <readstat_write_bytes@plt>
    85f4:	cmp	r0, #0
    85f8:	bne	86ac <sas_write_header+0x29c>
    85fc:	mov	r0, sl
    8600:	mov	r1, #8
    8604:	bl	4a88 <readstat_write_zeros@plt>
    8608:	cmp	r0, #0
    860c:	bne	86ac <sas_write_header+0x29c>
    8610:	add	r5, sp, #24
    8614:	ldr	r1, [pc, #160]	; 86bc <sas_write_header+0x2ac>
    8618:	add	r1, pc, r1
    861c:	mov	r0, r5
    8620:	mov	r2, #120	; 0x78
    8624:	bl	4998 <memcpy@plt>
    8628:	mov	r0, #0
    862c:	str	r0, [sp, #12]
    8630:	str	r0, [sp, #8]
    8634:	strb	r0, [sp, #16]
    8638:	ldr	r0, [sl, #8]
    863c:	mov	r1, #101	; 0x65
    8640:	str	r1, [sp]
    8644:	movw	r1, #52429	; 0xcccd
    8648:	movt	r1, #52428	; 0xcccc
    864c:	umull	r1, r2, r0, r1
    8650:	lsr	r1, r2, #3
    8654:	add	r1, r1, r1, lsl #2
    8658:	sub	r3, r0, r1, lsl #1
    865c:	add	r0, sp, #8
    8660:	ldr	r2, [pc, #88]	; 86c0 <sas_write_header+0x2b0>
    8664:	add	r2, pc, r2
    8668:	mov	r1, #9
    866c:	bl	4d04 <snprintf@plt>
    8670:	ldr	r0, [sp, #8]
    8674:	ldr	r1, [sp, #12]
    8678:	str	r1, [sp, #28]
    867c:	str	r0, [sp, #24]
    8680:	mov	r0, sl
    8684:	mov	r1, r5
    8688:	mov	r2, #120	; 0x78
    868c:	bl	4ef0 <readstat_write_bytes@plt>
    8690:	cmp	r0, #0
    8694:	bne	86ac <sas_write_header+0x29c>
    8698:	ldr	r0, [sl, #4]
    869c:	ldr	r1, [r4]
    86a0:	sub	r1, r1, r0
    86a4:	mov	r0, sl
    86a8:	bl	4a88 <readstat_write_zeros@plt>
    86ac:	sub	sp, fp, #28
    86b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    86b4:	add	sp, sp, #8
    86b8:	bx	lr
    86bc:	.word	0x0001d508
    86c0:	.word	0x0001d47d

000086c4 <sas_header_info_init>:
    86c4:	push	{r4, r5, fp, lr}
    86c8:	add	fp, sp, #8
    86cc:	mov	r4, r1
    86d0:	mov	r5, r0
    86d4:	mov	r0, #1
    86d8:	mov	r1, #152	; 0x98
    86dc:	bl	47d0 <calloc@plt>
    86e0:	ldr	lr, [r5, #20]
    86e4:	mov	ip, #0
    86e8:	mov	r3, #24
    86ec:	cmp	r4, #0
    86f0:	movwne	r3, #40	; 0x28
    86f4:	mov	r5, #12
    86f8:	movwne	r5, #24
    86fc:	mov	r2, #1024	; 0x400
    8700:	cmp	r4, #0
    8704:	movwne	r2, #8192	; 0x2000
    8708:	mov	r1, #4096	; 0x1000
    870c:	str	r1, [r0, #32]
    8710:	str	ip, [r0, #36]	; 0x24
    8714:	str	r3, [r0, #40]	; 0x28
    8718:	str	ip, [r0, #44]	; 0x2c
    871c:	str	r5, [r0, #48]	; 0x30
    8720:	str	ip, [r0, #52]	; 0x34
    8724:	cmp	r4, #0
    8728:	movwne	r4, #1
    872c:	str	r4, [r0, #4]
    8730:	add	r1, r0, #64	; 0x40
    8734:	stm	r1, {r2, ip, lr}
    8738:	str	lr, [r0, #76]	; 0x4c
    873c:	pop	{r4, r5, fp, pc}

00008740 <sas_fill_page>:
    8740:	push	{r4, r6, r7, sl, fp, lr}
    8744:	add	fp, sp, #16
    8748:	mov	r4, r0
    874c:	ldrd	r6, [r1, #32]
    8750:	ldrd	r0, [r1, #64]	; 0x40
    8754:	ldr	r2, [r4, #4]
    8758:	subs	r0, r2, r0
    875c:	rsc	r1, r1, #0
    8760:	mov	r2, r6
    8764:	mov	r3, r7
    8768:	bl	24f74 <__aeabi_ldivmod>
    876c:	orrs	r0, r2, r3
    8770:	beq	8784 <sas_fill_page+0x44>
    8774:	sub	r1, r6, r2
    8778:	mov	r0, r4
    877c:	pop	{r4, r6, r7, sl, fp, lr}
    8780:	b	4a88 <readstat_write_zeros@plt>
    8784:	mov	r0, #0
    8788:	pop	{r4, r6, r7, sl, fp, pc}

0000878c <sas_validate_name>:
    878c:	push	{r4, r5, r6, sl, fp, lr}
    8790:	add	fp, sp, #16
    8794:	mov	r4, r1
    8798:	mov	r5, r0
    879c:	b	87a4 <sas_validate_name+0x18>
    87a0:	add	r0, r0, #1
    87a4:	ldrb	r1, [r0]
    87a8:	cmp	r1, #95	; 0x5f
    87ac:	beq	87a0 <sas_validate_name+0x14>
    87b0:	cmp	r1, #0
    87b4:	beq	87e8 <sas_validate_name+0x5c>
    87b8:	sub	r2, r1, #48	; 0x30
    87bc:	uxtb	r2, r2
    87c0:	cmp	r2, #10
    87c4:	bcc	87a0 <sas_validate_name+0x14>
    87c8:	and	r1, r1, #223	; 0xdf
    87cc:	sub	r1, r1, #65	; 0x41
    87d0:	uxtb	r1, r1
    87d4:	cmp	r1, #25
    87d8:	bls	87a0 <sas_validate_name+0x14>
    87dc:	mov	r6, #26
    87e0:	mov	r0, r6
    87e4:	pop	{r4, r5, r6, sl, fp, pc}
    87e8:	ldrb	r0, [r5]
    87ec:	cmp	r0, #0
    87f0:	beq	88ac <sas_validate_name+0x120>
    87f4:	cmp	r0, #95	; 0x5f
    87f8:	beq	8814 <sas_validate_name+0x88>
    87fc:	and	r0, r0, #223	; 0xdf
    8800:	sub	r0, r0, #65	; 0x41
    8804:	uxtb	r0, r0
    8808:	mov	r6, #25
    880c:	cmp	r0, #25
    8810:	bhi	88a4 <sas_validate_name+0x118>
    8814:	ldr	r1, [pc, #156]	; 88b8 <sas_validate_name+0x12c>
    8818:	add	r1, pc, r1
    881c:	mov	r0, r5
    8820:	bl	4878 <strcmp@plt>
    8824:	mov	r6, #27
    8828:	cmp	r0, #0
    882c:	beq	88a4 <sas_validate_name+0x118>
    8830:	ldr	r1, [pc, #132]	; 88bc <sas_validate_name+0x130>
    8834:	add	r1, pc, r1
    8838:	mov	r0, r5
    883c:	bl	4878 <strcmp@plt>
    8840:	cmp	r0, #0
    8844:	beq	88a4 <sas_validate_name+0x118>
    8848:	ldr	r1, [pc, #112]	; 88c0 <sas_validate_name+0x134>
    884c:	add	r1, pc, r1
    8850:	mov	r0, r5
    8854:	bl	4878 <strcmp@plt>
    8858:	cmp	r0, #0
    885c:	beq	88a4 <sas_validate_name+0x118>
    8860:	ldr	r1, [pc, #92]	; 88c4 <sas_validate_name+0x138>
    8864:	add	r1, pc, r1
    8868:	mov	r0, r5
    886c:	bl	4878 <strcmp@plt>
    8870:	cmp	r0, #0
    8874:	beq	88a4 <sas_validate_name+0x118>
    8878:	ldr	r1, [pc, #72]	; 88c8 <sas_validate_name+0x13c>
    887c:	add	r1, pc, r1
    8880:	mov	r0, r5
    8884:	bl	4878 <strcmp@plt>
    8888:	cmp	r0, #0
    888c:	beq	88a4 <sas_validate_name+0x118>
    8890:	mov	r0, r5
    8894:	bl	4c8c <strlen@plt>
    8898:	mov	r6, #0
    889c:	cmp	r0, r4
    88a0:	movwhi	r6, #28
    88a4:	mov	r0, r6
    88a8:	pop	{r4, r5, r6, sl, fp, pc}
    88ac:	mov	r6, #38	; 0x26
    88b0:	mov	r0, r6
    88b4:	pop	{r4, r5, r6, sl, fp, pc}
    88b8:	.word	0x0001d2d4
    88bc:	.word	0x0001d2bc
    88c0:	.word	0x0001d2ac
    88c4:	.word	0x0001d29e
    88c8:	.word	0x0001d292

000088cc <sas_validate_variable>:
    88cc:	push	{fp, lr}
    88d0:	mov	fp, sp
    88d4:	bl	4e00 <readstat_variable_get_name@plt>
    88d8:	mov	r1, #32
    88dc:	pop	{fp, lr}
    88e0:	b	878c <sas_validate_name>

000088e4 <sas_validate_tag>:
    88e4:	cmp	r0, #95	; 0x5f
    88e8:	moveq	r0, #0
    88ec:	bxeq	lr
    88f0:	sub	r0, r0, #65	; 0x41
    88f4:	uxtb	r1, r0
    88f8:	mov	r0, #21
    88fc:	cmp	r1, #26
    8900:	movwcc	r0, #0
    8904:	bx	lr

00008908 <sas_assign_tag>:
    8908:	push	{r4, r5, fp, lr}
    890c:	add	fp, sp, #8
    8910:	mov	r4, r0
    8914:	cmp	r1, #0
    8918:	beq	8930 <sas_assign_tag+0x28>
    891c:	mov	r5, r1
    8920:	cmp	r1, #1
    8924:	bne	8938 <sas_assign_tag+0x30>
    8928:	mov	r5, #1
    892c:	b	8940 <sas_assign_tag+0x38>
    8930:	mov	r5, #95	; 0x5f
    8934:	b	8940 <sas_assign_tag+0x38>
    8938:	cmp	r5, #28
    893c:	addcc	r5, r5, #63	; 0x3f
    8940:	uxtb	r0, r5
    8944:	bl	4bcc <sas_validate_tag@plt>
    8948:	cmp	r0, #0
    894c:	movne	r5, #0
    8950:	strb	r5, [r4, #12]
    8954:	mov	r0, #1
    8958:	movweq	r0, #2
    895c:	ldrb	r1, [r4, #13]
    8960:	orr	r0, r1, r0
    8964:	strb	r0, [r4, #13]
    8968:	pop	{r4, r5, fp, pc}
    896c:	andeq	r0, r0, r0

00008970 <readstat_parse_sas7bcat>:
    8970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8974:	add	fp, sp, #28
    8978:	sub	sp, sp, #356	; 0x164
    897c:	mov	r7, r2
    8980:	mov	r6, r1
    8984:	mov	r4, r0
    8988:	mov	sl, #0
    898c:	str	sl, [fp, #-36]	; 0xffffffdc
    8990:	ldr	r9, [r0, #32]
    8994:	mov	r0, #1
    8998:	mov	r1, #104	; 0x68
    899c:	bl	47d0 <calloc@plt>
    89a0:	mov	r5, r0
    89a4:	mov	r0, #1
    89a8:	mov	r1, #152	; 0x98
    89ac:	bl	47d0 <calloc@plt>
    89b0:	mov	r8, r0
    89b4:	mov	r0, #200	; 0xc8
    89b8:	str	r0, [r5, #88]	; 0x58
    89bc:	mov	r0, #1600	; 0x640
    89c0:	bl	4b90 <malloc@plt>
    89c4:	str	r0, [r5, #80]	; 0x50
    89c8:	ldr	r0, [r4, #20]
    89cc:	ldr	r1, [r4]
    89d0:	ldr	r2, [r4, #36]	; 0x24
    89d4:	ldr	r3, [r4, #40]	; 0x28
    89d8:	str	r1, [r5]
    89dc:	stmib	r5, {r0, r7, r9}
    89e0:	str	r2, [r5, #92]	; 0x5c
    89e4:	str	r3, [r5, #96]	; 0x60
    89e8:	ldr	r2, [r9]
    89ec:	ldr	r1, [r9, #20]
    89f0:	mov	r0, r6
    89f4:	blx	r2
    89f8:	cmn	r0, #1
    89fc:	beq	8a28 <readstat_parse_sas7bcat+0xb8>
    8a00:	ldr	r2, [r4, #24]
    8a04:	mov	r0, r9
    8a08:	mov	r1, r8
    8a0c:	mov	r3, r7
    8a10:	bl	4e3c <sas_read_header@plt>
    8a14:	str	r0, [fp, #-36]	; 0xffffffdc
    8a18:	cmp	r0, #0
    8a1c:	beq	8a38 <readstat_parse_sas7bcat+0xc8>
    8a20:	mov	r7, #0
    8a24:	b	8d0c <readstat_parse_sas7bcat+0x39c>
    8a28:	mov	r0, #1
    8a2c:	str	r0, [fp, #-36]	; 0xffffffdc
    8a30:	mov	r7, #0
    8a34:	b	8d0c <readstat_parse_sas7bcat+0x39c>
    8a38:	add	r4, r5, #32
    8a3c:	add	r6, r8, #32
    8a40:	ldr	r0, [r8, #4]
    8a44:	ldr	r1, [r8, #24]
    8a48:	strd	r0, [r5, #16]
    8a4c:	bl	492c <machine_is_little_endian@plt>
    8a50:	ldr	r1, [r8]
    8a54:	eor	r0, r1, r0
    8a58:	str	r0, [r5, #24]
    8a5c:	add	r3, r6, #24
    8a60:	ldm	r3, {r0, r1, r2, r3}
    8a64:	str	r3, [r4, #44]	; 0x2c
    8a68:	mov	r3, r4
    8a6c:	str	r2, [r3, #40]!	; 0x28
    8a70:	str	r3, [sp, #20]
    8a74:	str	r1, [r4, #28]
    8a78:	mov	r1, r4
    8a7c:	str	r0, [r1, #24]!
    8a80:	str	r1, [sp, #16]
    8a84:	ldrd	r0, [r6]
    8a88:	mov	r2, r4
    8a8c:	str	r0, [r2, #32]!
    8a90:	str	r2, [sp, #24]
    8a94:	str	r1, [r2, #4]
    8a98:	ldr	r0, [r5, #92]	; 0x5c
    8a9c:	cmp	r0, #0
    8aa0:	bne	8aac <readstat_parse_sas7bcat+0x13c>
    8aa4:	ldr	r0, [r8, #144]	; 0x90
    8aa8:	str	r0, [r5, #92]	; 0x5c
    8aac:	str	r8, [sp, #28]
    8ab0:	ldr	r1, [r5, #20]
    8ab4:	add	r2, r1, #212	; 0xd4
    8ab8:	str	r2, [r4]
    8abc:	add	r0, r1, #50	; 0x32
    8ac0:	asr	ip, r0, #31
    8ac4:	str	ip, [r4, #20]
    8ac8:	mov	r3, #856	; 0x358
    8acc:	add	r6, r3, r1, lsl #1
    8ad0:	asr	r1, r6, #31
    8ad4:	str	r1, [r4, #12]
    8ad8:	asr	lr, r2, #31
    8adc:	str	lr, [r4, #4]
    8ae0:	mov	r3, r4
    8ae4:	str	r0, [r3, #16]!
    8ae8:	mov	r8, r4
    8aec:	str	r6, [r8, #8]!
    8af0:	ldr	r7, [r5, #16]
    8af4:	cmp	r7, #0
    8af8:	beq	8b24 <readstat_parse_sas7bcat+0x1b4>
    8afc:	adds	r6, r6, #144	; 0x90
    8b00:	adc	r7, r1, #0
    8b04:	strd	r6, [r8]
    8b08:	adds	r2, r2, #72	; 0x48
    8b0c:	adc	r1, lr, #0
    8b10:	str	r2, [r4]
    8b14:	str	r1, [r4, #4]
    8b18:	adds	r0, r0, #24
    8b1c:	adc	r1, ip, #0
    8b20:	strd	r0, [r3]
    8b24:	ldr	r4, [r5, #92]	; 0x5c
    8b28:	cmp	r4, #0
    8b2c:	beq	8b68 <readstat_parse_sas7bcat+0x1f8>
    8b30:	ldr	r6, [r5, #96]	; 0x60
    8b34:	cmp	r6, #0
    8b38:	beq	8b68 <readstat_parse_sas7bcat+0x1f8>
    8b3c:	mov	r0, r4
    8b40:	mov	r1, r6
    8b44:	bl	4878 <strcmp@plt>
    8b48:	cmp	r0, #0
    8b4c:	beq	8b68 <readstat_parse_sas7bcat+0x1f8>
    8b50:	mov	r0, r6
    8b54:	mov	r1, r4
    8b58:	bl	4bb4 <iconv_open@plt>
    8b5c:	cmn	r0, #1
    8b60:	beq	8cd0 <readstat_parse_sas7bcat+0x360>
    8b64:	str	r0, [r5, #100]	; 0x64
    8b68:	ldr	r0, [r5]
    8b6c:	cmp	r0, #0
    8b70:	beq	8c44 <readstat_parse_sas7bcat+0x2d4>
    8b74:	vmov.i32	q8, #0	; 0x00000000
    8b78:	mov	r0, #52	; 0x34
    8b7c:	add	r1, sp, #32
    8b80:	vst1.64	{d16-d17}, [r1], r0
    8b84:	ldr	r6, [sp, #28]
    8b88:	ldr	r0, [r6, #72]	; 0x48
    8b8c:	ldr	r3, [r6, #76]	; 0x4c
    8b90:	str	r0, [sp, #48]	; 0x30
    8b94:	str	r3, [sp, #52]	; 0x34
    8b98:	ldr	r0, [r6, #12]
    8b9c:	mov	r7, #0
    8ba0:	str	r7, [sp, #64]	; 0x40
    8ba4:	str	r0, [sp, #56]	; 0x38
    8ba8:	asr	r0, r0, #31
    8bac:	str	r0, [sp, #60]	; 0x3c
    8bb0:	ldr	r0, [r6]
    8bb4:	str	r7, [sp, #76]	; 0x4c
    8bb8:	str	r7, [sp, #72]	; 0x48
    8bbc:	mov	r2, #1
    8bc0:	cmp	r0, #0
    8bc4:	movweq	r2, #2
    8bc8:	str	r2, [sp, #68]	; 0x44
    8bcc:	ldr	r0, [r5, #92]	; 0x5c
    8bd0:	str	r0, [sp, #80]	; 0x50
    8bd4:	ldrb	r0, [r1]
    8bd8:	and	r0, r0, #254	; 0xfe
    8bdc:	ldrb	r2, [r5, #16]
    8be0:	and	r2, r2, #1
    8be4:	orr	r0, r0, r2
    8be8:	strb	r0, [r1]
    8bec:	ldr	r0, [r5, #100]	; 0x64
    8bf0:	str	r0, [sp]
    8bf4:	add	r2, r6, #80	; 0x50
    8bf8:	add	r4, sp, #91	; 0x5b
    8bfc:	mov	r0, r4
    8c00:	movw	r1, #257	; 0x101
    8c04:	mov	r3, #64	; 0x40
    8c08:	bl	4cbc <readstat_convert@plt>
    8c0c:	str	r0, [fp, #-36]	; 0xffffffdc
    8c10:	cmp	r0, #0
    8c14:	bne	8c3c <readstat_parse_sas7bcat+0x2cc>
    8c18:	str	r4, [sp, #76]	; 0x4c
    8c1c:	ldr	r2, [r5]
    8c20:	ldr	r1, [r5, #8]
    8c24:	add	r0, sp, #32
    8c28:	blx	r2
    8c2c:	cmp	r0, #0
    8c30:	beq	8c44 <readstat_parse_sas7bcat+0x2d4>
    8c34:	mov	r0, #4
    8c38:	str	r0, [fp, #-36]	; 0xffffffdc
    8c3c:	mov	sl, #0
    8c40:	b	8d08 <readstat_parse_sas7bcat+0x398>
    8c44:	ldr	r4, [sp, #24]
    8c48:	ldr	r0, [r4]
    8c4c:	bl	4cb0 <readstat_malloc@plt>
    8c50:	cmp	r0, #0
    8c54:	beq	8cbc <readstat_parse_sas7bcat+0x34c>
    8c58:	mov	r6, r0
    8c5c:	ldr	r0, [sp, #20]
    8c60:	ldr	r0, [r0]
    8c64:	ldr	r1, [r4]
    8c68:	add	r0, r1, r0
    8c6c:	ldr	r3, [r9, #8]
    8c70:	ldr	r2, [r9, #20]
    8c74:	mov	r7, #0
    8c78:	mov	r1, #0
    8c7c:	blx	r3
    8c80:	cmn	r0, #1
    8c84:	beq	8cc4 <readstat_parse_sas7bcat+0x354>
    8c88:	ldr	r1, [r4]
    8c8c:	ldr	r3, [r9, #12]
    8c90:	ldr	r2, [r9, #20]
    8c94:	mov	r0, r6
    8c98:	blx	r3
    8c9c:	ldrd	r2, [r4]
    8ca0:	subs	r1, r0, r2
    8ca4:	rscs	r0, r3, r0, asr #31
    8ca8:	bge	8ce0 <readstat_parse_sas7bcat+0x370>
    8cac:	mov	r0, #2
    8cb0:	str	r0, [fp, #-36]	; 0xffffffdc
    8cb4:	mov	r7, #0
    8cb8:	b	8d04 <readstat_parse_sas7bcat+0x394>
    8cbc:	mov	r0, #3
    8cc0:	b	8cd4 <readstat_parse_sas7bcat+0x364>
    8cc4:	mov	r0, #15
    8cc8:	str	r0, [fp, #-36]	; 0xffffffdc
    8ccc:	b	8d04 <readstat_parse_sas7bcat+0x394>
    8cd0:	mov	r0, #7
    8cd4:	str	r0, [fp, #-36]	; 0xffffffdc
    8cd8:	mov	r7, #0
    8cdc:	b	8d08 <readstat_parse_sas7bcat+0x398>
    8ce0:	ldr	r1, [r8]
    8ce4:	add	r0, r6, r1
    8ce8:	sub	r1, r2, r1
    8cec:	mov	r2, r5
    8cf0:	bl	8f48 <sas7bcat_augment_index>
    8cf4:	str	r0, [fp, #-36]	; 0xffffffdc
    8cf8:	mov	r7, #0
    8cfc:	cmp	r0, #0
    8d00:	beq	8d60 <readstat_parse_sas7bcat+0x3f0>
    8d04:	mov	sl, r6
    8d08:	ldr	r8, [sp, #28]
    8d0c:	ldr	r1, [r9, #4]
    8d10:	ldr	r0, [r9, #20]
    8d14:	blx	r1
    8d18:	cmp	sl, #0
    8d1c:	beq	8d28 <readstat_parse_sas7bcat+0x3b8>
    8d20:	mov	r0, sl
    8d24:	bl	4938 <free@plt>
    8d28:	cmp	r7, #0
    8d2c:	beq	8d38 <readstat_parse_sas7bcat+0x3c8>
    8d30:	mov	r0, r7
    8d34:	bl	4938 <free@plt>
    8d38:	cmp	r5, #0
    8d3c:	movne	r0, r5
    8d40:	blne	95f8 <sas7bcat_ctx_free>
    8d44:	cmp	r8, #0
    8d48:	beq	8d54 <readstat_parse_sas7bcat+0x3e4>
    8d4c:	mov	r0, r8
    8d50:	bl	4938 <free@plt>
    8d54:	ldr	r0, [fp, #-36]	; 0xffffffdc
    8d58:	sub	sp, fp, #28
    8d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8d60:	str	r6, [sp, #12]
    8d64:	ldr	r0, [sp, #16]
    8d68:	ldrd	r0, [r0]
    8d6c:	subs	r0, r0, #4
    8d70:	sbcs	r0, r1, #0
    8d74:	blt	8e3c <readstat_parse_sas7bcat+0x4cc>
    8d78:	ldr	r0, [sp, #12]
    8d7c:	add	r0, r0, #16
    8d80:	str	r0, [sp, #8]
    8d84:	mov	r6, #0
    8d88:	mov	sl, #3
    8d8c:	ldr	r4, [sp, #24]
    8d90:	b	8db0 <readstat_parse_sas7bcat+0x440>
    8d94:	adds	sl, sl, #1
    8d98:	adc	r6, r6, #0
    8d9c:	ldr	r0, [sp, #16]
    8da0:	ldrd	r0, [r0]
    8da4:	subs	r0, sl, r0
    8da8:	sbcs	r0, r6, r1
    8dac:	bge	8e3c <readstat_parse_sas7bcat+0x4cc>
    8db0:	ldr	r0, [sp, #20]
    8db4:	ldr	r0, [r0]
    8db8:	ldr	r1, [r4]
    8dbc:	mla	r0, r1, sl, r0
    8dc0:	ldr	r3, [r9, #8]
    8dc4:	ldr	r2, [r9, #20]
    8dc8:	mov	r1, #0
    8dcc:	blx	r3
    8dd0:	cmn	r0, #1
    8dd4:	beq	8f14 <readstat_parse_sas7bcat+0x5a4>
    8dd8:	ldr	r1, [r4]
    8ddc:	ldr	r3, [r9, #12]
    8de0:	ldr	r2, [r9, #20]
    8de4:	ldr	r0, [sp, #12]
    8de8:	blx	r3
    8dec:	ldr	r8, [r4]
    8df0:	ldr	r1, [r4, #4]
    8df4:	subs	r2, r0, r8
    8df8:	rscs	r0, r1, r0, asr #31
    8dfc:	blt	8f1c <readstat_parse_sas7bcat+0x5ac>
    8e00:	ldr	r0, [sp, #8]
    8e04:	ldr	r1, [pc, #312]	; 8f44 <readstat_parse_sas7bcat+0x5d4>
    8e08:	add	r1, pc, r1
    8e0c:	mov	r2, #4
    8e10:	bl	4c74 <bcmp@plt>
    8e14:	cmp	r0, #0
    8e18:	bne	8d94 <readstat_parse_sas7bcat+0x424>
    8e1c:	sub	r1, r8, #16
    8e20:	ldr	r0, [sp, #8]
    8e24:	mov	r2, r5
    8e28:	bl	8f48 <sas7bcat_augment_index>
    8e2c:	str	r0, [fp, #-36]	; 0xffffffdc
    8e30:	cmp	r0, #0
    8e34:	beq	8d94 <readstat_parse_sas7bcat+0x424>
    8e38:	b	8f24 <readstat_parse_sas7bcat+0x5b4>
    8e3c:	mov	r0, r5
    8e40:	bl	9084 <sas7bcat_sort_index>
    8e44:	mov	r0, r5
    8e48:	bl	90e8 <sas7bcat_uniq_index>
    8e4c:	ldr	r0, [r5, #84]	; 0x54
    8e50:	cmp	r0, #1
    8e54:	blt	8f28 <readstat_parse_sas7bcat+0x5b8>
    8e58:	mov	sl, #0
    8e5c:	mov	r6, #0
    8e60:	mov	r7, #0
    8e64:	ldr	r8, [sp, #28]
    8e68:	b	8e84 <readstat_parse_sas7bcat+0x514>
    8e6c:	adds	sl, sl, #1
    8e70:	adc	r6, r6, #0
    8e74:	ldr	r0, [r5, #84]	; 0x54
    8e78:	subs	r1, sl, r0
    8e7c:	sbcs	r0, r6, r0, asr #31
    8e80:	bge	8f3c <readstat_parse_sas7bcat+0x5cc>
    8e84:	ldr	r0, [r5, #80]	; 0x50
    8e88:	lsl	r1, sl, #3
    8e8c:	ldrh	r1, [r0, r1]!	; <UNPREDICTABLE>
    8e90:	ldr	r0, [r0, #4]
    8e94:	str	r0, [sp, #20]
    8e98:	str	r1, [sp, #24]
    8e9c:	mov	r2, r5
    8ea0:	sub	r3, fp, #36	; 0x24
    8ea4:	bl	9168 <sas7bcat_block_size>
    8ea8:	cmp	r0, #0
    8eac:	beq	8e6c <readstat_parse_sas7bcat+0x4fc>
    8eb0:	mov	r4, r0
    8eb4:	cmn	r0, #1
    8eb8:	beq	8f3c <readstat_parse_sas7bcat+0x5cc>
    8ebc:	mov	r0, r7
    8ec0:	mov	r1, r4
    8ec4:	bl	4d70 <readstat_realloc@plt>
    8ec8:	cmp	r0, #0
    8ecc:	beq	8f30 <readstat_parse_sas7bcat+0x5c0>
    8ed0:	mov	r7, r0
    8ed4:	str	r5, [sp]
    8ed8:	mov	r1, r4
    8edc:	ldr	r2, [sp, #20]
    8ee0:	ldr	r3, [sp, #24]
    8ee4:	bl	9304 <sas7bcat_read_block>
    8ee8:	str	r0, [fp, #-36]	; 0xffffffdc
    8eec:	cmp	r0, #0
    8ef0:	bne	8f3c <readstat_parse_sas7bcat+0x5cc>
    8ef4:	mov	r0, r7
    8ef8:	mov	r1, r4
    8efc:	mov	r2, r5
    8f00:	bl	94b8 <sas7bcat_parse_block>
    8f04:	str	r0, [fp, #-36]	; 0xffffffdc
    8f08:	cmp	r0, #0
    8f0c:	beq	8e6c <readstat_parse_sas7bcat+0x4fc>
    8f10:	b	8f3c <readstat_parse_sas7bcat+0x5cc>
    8f14:	mov	r0, #15
    8f18:	b	8f20 <readstat_parse_sas7bcat+0x5b0>
    8f1c:	mov	r0, #2
    8f20:	str	r0, [fp, #-36]	; 0xffffffdc
    8f24:	mov	r7, #0
    8f28:	ldr	sl, [sp, #12]
    8f2c:	b	8d08 <readstat_parse_sas7bcat+0x398>
    8f30:	mov	r0, #3
    8f34:	str	r0, [fp, #-36]	; 0xffffffdc
    8f38:	mov	r7, #0
    8f3c:	ldr	sl, [sp, #12]
    8f40:	b	8d0c <readstat_parse_sas7bcat+0x39c>
    8f44:	.word	0x0001cd90

00008f48 <sas7bcat_augment_index>:
    8f48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8f4c:	add	fp, sp, #28
    8f50:	sub	sp, sp, #4
    8f54:	mov	r5, r2
    8f58:	mov	r6, r0
    8f5c:	mov	r7, r2
    8f60:	ldr	r2, [r7, #32]!
    8f64:	mov	r0, #0
    8f68:	cmp	r2, r1
    8f6c:	bgt	9078 <sas7bcat_augment_index+0x130>
    8f70:	add	sl, r6, r1
    8f74:	add	r8, r7, #16
    8f78:	ldr	r9, [pc, #256]	; 9080 <sas7bcat_augment_index+0x138>
    8f7c:	add	r9, pc, r9
    8f80:	b	8f98 <sas7bcat_augment_index+0x50>
    8f84:	ldr	r0, [r7]
    8f88:	add	r6, r6, r0
    8f8c:	add	r0, r6, r0
    8f90:	cmp	r0, sl
    8f94:	bhi	9074 <sas7bcat_augment_index+0x12c>
    8f98:	mov	r0, r6
    8f9c:	mov	r1, r9
    8fa0:	mov	r2, #4
    8fa4:	bl	4c74 <bcmp@plt>
    8fa8:	cmp	r0, #0
    8fac:	addne	r6, r6, #8
    8fb0:	mov	r0, r6
    8fb4:	mov	r1, r9
    8fb8:	mov	r2, #4
    8fbc:	bl	4c74 <bcmp@plt>
    8fc0:	cmp	r0, #0
    8fc4:	bne	9074 <sas7bcat_augment_index+0x12c>
    8fc8:	ldr	r0, [r8]
    8fcc:	ldrb	r0, [r6, r0]
    8fd0:	cmp	r0, #79	; 0x4f
    8fd4:	bne	9038 <sas7bcat_augment_index+0xf0>
    8fd8:	ldr	r0, [r5, #16]
    8fdc:	cmp	r0, #0
    8fe0:	beq	9004 <sas7bcat_augment_index+0xbc>
    8fe4:	ldr	r1, [r5, #24]
    8fe8:	add	r0, r6, #8
    8fec:	bl	4e90 <sas_read4@plt>
    8ff0:	mov	r4, r0
    8ff4:	ldr	r1, [r5, #24]
    8ff8:	add	r0, r6, #16
    8ffc:	bl	4e90 <sas_read4@plt>
    9000:	b	9020 <sas7bcat_augment_index+0xd8>
    9004:	ldr	r1, [r5, #24]
    9008:	add	r0, r6, #4
    900c:	bl	4e6c <sas_read2@plt>
    9010:	mov	r4, r0
    9014:	ldr	r1, [r5, #24]
    9018:	add	r0, r6, #8
    901c:	bl	4e6c <sas_read2@plt>
    9020:	ldr	r2, [r5, #80]	; 0x50
    9024:	ldr	r1, [r5, #84]	; 0x54
    9028:	add	r3, r1, #1
    902c:	str	r3, [r5, #84]	; 0x54
    9030:	str	r0, [r2, r1, lsl #3]!
    9034:	str	r4, [r2, #4]
    9038:	ldr	r0, [r5, #84]	; 0x54
    903c:	ldr	r1, [r5, #88]	; 0x58
    9040:	cmp	r0, r1
    9044:	bne	8f84 <sas7bcat_augment_index+0x3c>
    9048:	lsl	r0, r1, #1
    904c:	str	r0, [r5, #88]	; 0x58
    9050:	ldr	r0, [r5, #80]	; 0x50
    9054:	lsl	r1, r1, #4
    9058:	bl	4d70 <readstat_realloc@plt>
    905c:	str	r0, [r5, #80]	; 0x50
    9060:	cmp	r0, #0
    9064:	bne	8f84 <sas7bcat_augment_index+0x3c>
    9068:	mov	r0, #3
    906c:	sub	sp, fp, #28
    9070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9074:	mov	r0, #0
    9078:	sub	sp, fp, #28
    907c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9080:	.word	0x0001cc1c

00009084 <sas7bcat_sort_index>:
    9084:	push	{r4, r5, fp, lr}
    9088:	add	fp, sp, #8
    908c:	ldr	r1, [r0, #84]	; 0x54
    9090:	cmp	r1, #2
    9094:	poplt	{r4, r5, fp, pc}
    9098:	ldr	r0, [r0, #80]	; 0x50
    909c:	mov	r2, #1
    90a0:	mov	r3, r0
    90a4:	ldm	r3, {ip, lr}
    90a8:	ldr	r4, [r3, #8]
    90ac:	ldr	r5, [r3, #12]
    90b0:	subs	r4, r4, ip
    90b4:	sbcs	r5, r5, lr
    90b8:	bcc	90d0 <sas7bcat_sort_index+0x4c>
    90bc:	add	r2, r2, #1
    90c0:	add	r3, r3, #8
    90c4:	cmp	r1, r2
    90c8:	bne	90a4 <sas7bcat_sort_index+0x20>
    90cc:	pop	{r4, r5, fp, pc}
    90d0:	ldr	r3, [pc, #12]	; 90e4 <sas7bcat_sort_index+0x60>
    90d4:	add	r3, pc, r3
    90d8:	mov	r2, #8
    90dc:	pop	{r4, r5, fp, lr}
    90e0:	b	4ed8 <qsort@plt>
    90e4:	.word	0x00000554

000090e8 <sas7bcat_uniq_index>:
    90e8:	push	{r4, r5, r6, r7, fp, lr}
    90ec:	add	fp, sp, #16
    90f0:	ldr	lr, [r0, #84]	; 0x54
    90f4:	cmp	lr, #0
    90f8:	beq	9164 <sas7bcat_uniq_index+0x7c>
    90fc:	mov	r2, #1
    9100:	cmp	lr, #2
    9104:	blt	9160 <sas7bcat_uniq_index+0x78>
    9108:	ldr	ip, [r0, #80]	; 0x50
    910c:	mov	r2, #1
    9110:	mov	r3, ip
    9114:	mov	r1, #1
    9118:	b	912c <sas7bcat_uniq_index+0x44>
    911c:	add	r3, r3, #8
    9120:	add	r1, r1, #1
    9124:	cmp	lr, r1
    9128:	beq	9160 <sas7bcat_uniq_index+0x78>
    912c:	ldm	r3, {r6, r7}
    9130:	ldr	r4, [r3, #8]
    9134:	ldr	r5, [r3, #12]
    9138:	eor	r7, r5, r7
    913c:	eor	r6, r4, r6
    9140:	orrs	r6, r6, r7
    9144:	beq	911c <sas7bcat_uniq_index+0x34>
    9148:	cmp	r1, r2
    914c:	movne	r6, ip
    9150:	strne	r4, [r6, r2, lsl #3]!
    9154:	strne	r5, [r6, #4]
    9158:	add	r2, r2, #1
    915c:	b	911c <sas7bcat_uniq_index+0x34>
    9160:	str	r2, [r0, #84]	; 0x54
    9164:	pop	{r4, r5, r6, r7, fp, pc}

00009168 <sas7bcat_block_size>:
    9168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    916c:	add	fp, sp, #28
    9170:	sub	sp, sp, #68	; 0x44
    9174:	mov	r9, r1
    9178:	mov	r4, r0
    917c:	str	r2, [sp, #28]
    9180:	ldr	r0, [r2, #16]
    9184:	mov	r1, #32
    9188:	cmp	r0, #0
    918c:	movweq	r1, #16
    9190:	str	r1, [sp, #24]
    9194:	mov	r7, #0
    9198:	cmp	r4, #1
    919c:	blt	92cc <sas7bcat_block_size+0x164>
    91a0:	cmp	r9, #1
    91a4:	mov	r0, #0
    91a8:	blt	92d0 <sas7bcat_block_size+0x168>
    91ac:	str	r3, [sp]
    91b0:	ldr	r1, [sp, #28]
    91b4:	ldr	r5, [r1, #12]
    91b8:	add	r0, r1, #56	; 0x38
    91bc:	str	r0, [sp, #20]
    91c0:	add	r0, r1, #64	; 0x40
    91c4:	str	r0, [sp, #16]
    91c8:	add	r0, r1, #72	; 0x48
    91cc:	str	r0, [sp, #12]
    91d0:	add	r1, sp, #36	; 0x24
    91d4:	add	r0, r1, #10
    91d8:	str	r0, [sp, #8]
    91dc:	add	r0, r1, #8
    91e0:	str	r0, [sp, #4]
    91e4:	mov	r7, #0
    91e8:	mov	sl, #0
    91ec:	ldr	r8, [sp, #28]
    91f0:	ldr	r0, [sp, #20]
    91f4:	ldrd	r0, [r0]
    91f8:	subs	r2, r0, r4
    91fc:	sbcs	r2, r1, r4, asr #31
    9200:	blt	92c8 <sas7bcat_block_size+0x160>
    9204:	subs	r0, sl, r0
    9208:	rscs	r0, r1, #0
    920c:	bge	92c8 <sas7bcat_block_size+0x160>
    9210:	ldr	r0, [sp, #12]
    9214:	ldr	r0, [r0]
    9218:	ldr	r1, [sp, #16]
    921c:	ldr	r1, [r1]
    9220:	sub	r2, r4, #1
    9224:	mla	r0, r1, r2, r0
    9228:	add	r0, r9, r0
    922c:	ldr	r3, [r5, #8]
    9230:	ldr	r2, [r5, #20]
    9234:	mov	r1, #0
    9238:	blx	r3
    923c:	cmn	r0, #1
    9240:	beq	92ec <sas7bcat_block_size+0x184>
    9244:	ldr	r3, [r5, #12]
    9248:	ldr	r2, [r5, #20]
    924c:	add	r0, sp, #36	; 0x24
    9250:	ldr	r4, [sp, #24]
    9254:	mov	r1, r4
    9258:	blx	r3
    925c:	cmp	r0, r4
    9260:	blt	92f8 <sas7bcat_block_size+0x190>
    9264:	add	r6, sp, #36	; 0x24
    9268:	str	r7, [sp, #32]
    926c:	ldr	r7, [r8, #16]
    9270:	ldr	r1, [r8, #24]
    9274:	mov	r0, r6
    9278:	bl	4e90 <sas_read4@plt>
    927c:	mov	r4, r0
    9280:	cmp	r7, #0
    9284:	ldr	r0, [sp, #4]
    9288:	addeq	r0, r6, #4
    928c:	ldr	r1, [r8, #24]
    9290:	bl	4e6c <sas_read2@plt>
    9294:	mov	r9, r0
    9298:	cmp	r7, #0
    929c:	ldr	r0, [sp, #8]
    92a0:	addeq	r0, r6, #6
    92a4:	ldr	r1, [r8, #24]
    92a8:	ldr	r7, [sp, #32]
    92ac:	bl	4e6c <sas_read2@plt>
    92b0:	add	r7, r7, r0
    92b4:	cmp	r4, #1
    92b8:	blt	92c8 <sas7bcat_block_size+0x160>
    92bc:	add	sl, sl, #1
    92c0:	cmp	r9, #0
    92c4:	bne	91f0 <sas7bcat_block_size+0x88>
    92c8:	ldr	r3, [sp]
    92cc:	mov	r0, #0
    92d0:	cmp	r3, #0
    92d4:	strne	r0, [r3]
    92d8:	cmp	r0, #0
    92dc:	mvnne	r7, #0
    92e0:	mov	r0, r7
    92e4:	sub	sp, fp, #28
    92e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    92ec:	mov	r0, #15
    92f0:	ldr	r3, [sp]
    92f4:	b	92d0 <sas7bcat_block_size+0x168>
    92f8:	mov	r0, #2
    92fc:	ldr	r3, [sp]
    9300:	b	92d0 <sas7bcat_block_size+0x168>

00009304 <sas7bcat_read_block>:
    9304:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9308:	add	fp, sp, #28
    930c:	sub	sp, sp, #84	; 0x54
    9310:	mov	sl, r2
    9314:	str	r1, [sp, #16]
    9318:	str	r0, [sp, #4]
    931c:	ldr	r1, [fp, #8]
    9320:	ldr	r7, [r1, #12]
    9324:	ldr	r0, [r1, #16]
    9328:	mov	r2, #32
    932c:	cmp	r0, #0
    9330:	movweq	r2, #16
    9334:	str	r2, [sp, #20]
    9338:	add	r5, sp, #52	; 0x34
    933c:	add	r0, r5, #10
    9340:	str	r0, [sp, #12]
    9344:	add	r0, r5, #8
    9348:	str	r0, [sp, #8]
    934c:	mov	r4, #0
    9350:	add	r0, r1, #56	; 0x38
    9354:	str	r0, [sp, #32]
    9358:	add	r0, r1, #64	; 0x40
    935c:	str	r0, [sp, #28]
    9360:	add	r0, r1, #72	; 0x48
    9364:	str	r0, [sp, #24]
    9368:	mov	r6, #0
    936c:	cmp	sl, #1
    9370:	cmpge	r3, #1
    9374:	blt	9494 <sas7bcat_read_block+0x190>
    9378:	ldr	r0, [sp, #32]
    937c:	ldrd	r0, [r0]
    9380:	subs	r2, r0, sl
    9384:	sbcs	r2, r1, sl, asr #31
    9388:	blt	9494 <sas7bcat_read_block+0x190>
    938c:	subs	r0, r4, r0
    9390:	rscs	r0, r1, #0
    9394:	bge	9494 <sas7bcat_read_block+0x190>
    9398:	str	r6, [sp, #48]	; 0x30
    939c:	ldr	r0, [sp, #24]
    93a0:	ldr	r0, [r0]
    93a4:	ldr	r1, [sp, #28]
    93a8:	ldr	r1, [r1]
    93ac:	sub	r2, sl, #1
    93b0:	mla	r0, r1, r2, r0
    93b4:	add	r0, r3, r0
    93b8:	ldr	r3, [r7, #8]
    93bc:	ldr	r2, [r7, #20]
    93c0:	mov	r1, #0
    93c4:	blx	r3
    93c8:	cmn	r0, #1
    93cc:	beq	949c <sas7bcat_read_block+0x198>
    93d0:	str	r4, [sp, #44]	; 0x2c
    93d4:	ldr	r3, [r7, #12]
    93d8:	ldr	r2, [r7, #20]
    93dc:	mov	r0, r5
    93e0:	ldr	r4, [sp, #20]
    93e4:	mov	r1, r4
    93e8:	blx	r3
    93ec:	mov	r1, #2
    93f0:	str	r1, [sp, #36]	; 0x24
    93f4:	cmp	r0, r4
    93f8:	blt	94ac <sas7bcat_read_block+0x1a8>
    93fc:	ldr	r0, [fp, #8]
    9400:	mov	r4, r0
    9404:	ldr	r6, [r0, #16]
    9408:	ldr	r1, [r0, #24]
    940c:	mov	r0, r5
    9410:	bl	4e90 <sas_read4@plt>
    9414:	mov	sl, r0
    9418:	cmp	r6, #0
    941c:	ldr	r0, [sp, #8]
    9420:	addeq	r0, r5, #4
    9424:	ldr	r1, [r4, #24]
    9428:	bl	4e6c <sas_read2@plt>
    942c:	str	r0, [sp, #40]	; 0x28
    9430:	cmp	r6, #0
    9434:	ldr	r0, [sp, #12]
    9438:	mov	r9, r5
    943c:	addeq	r0, r5, #6
    9440:	ldr	r1, [r4, #24]
    9444:	bl	4e6c <sas_read2@plt>
    9448:	mov	r8, r0
    944c:	ldr	r1, [sp, #48]	; 0x30
    9450:	add	r6, r1, r0
    9454:	ldr	r0, [sp, #16]
    9458:	cmp	r6, r0
    945c:	bhi	94a4 <sas7bcat_read_block+0x1a0>
    9460:	ldr	r4, [sp, #44]	; 0x2c
    9464:	add	r4, r4, #1
    9468:	ldr	r0, [sp, #4]
    946c:	add	r0, r0, r1
    9470:	ldr	r3, [r7, #12]
    9474:	ldr	r2, [r7, #20]
    9478:	mov	r1, r8
    947c:	blx	r3
    9480:	cmp	r0, r8
    9484:	mov	r5, r9
    9488:	ldr	r3, [sp, #40]	; 0x28
    948c:	bge	936c <sas7bcat_read_block+0x68>
    9490:	b	94ac <sas7bcat_read_block+0x1a8>
    9494:	mov	r0, #0
    9498:	b	94a8 <sas7bcat_read_block+0x1a4>
    949c:	mov	r0, #15
    94a0:	b	94a8 <sas7bcat_read_block+0x1a4>
    94a4:	mov	r0, #5
    94a8:	str	r0, [sp, #36]	; 0x24
    94ac:	ldr	r0, [sp, #36]	; 0x24
    94b0:	sub	sp, fp, #28
    94b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000094b8 <sas7bcat_parse_block>:
    94b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    94bc:	add	fp, sp, #28
    94c0:	sub	sp, sp, #148	; 0x94
    94c4:	cmp	r1, #106	; 0x6a
    94c8:	bcs	94d8 <sas7bcat_parse_block+0x20>
    94cc:	mov	r0, #0
    94d0:	sub	sp, fp, #28
    94d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    94d8:	mov	r5, r2
    94dc:	mov	r9, r1
    94e0:	mov	r6, r0
    94e4:	ldrb	r0, [r0, #2]
    94e8:	and	r4, r0, #8
    94ec:	mov	r0, #38	; 0x26
    94f0:	mov	r1, #42	; 0x2a
    94f4:	orr	r2, r1, r4, lsr #1
    94f8:	ldr	r7, [r5, #16]
    94fc:	ldr	r1, [r5, #24]
    9500:	cmp	r7, #0
    9504:	addeq	r2, r0, r4, lsr #1
    9508:	add	r0, r6, r2
    950c:	bl	4e90 <sas_read4@plt>
    9510:	str	r0, [sp, #12]
    9514:	mov	r0, #50	; 0x32
    9518:	cmp	r7, #0
    951c:	movweq	r0, #42	; 0x2a
    9520:	orr	r0, r0, r4, lsr #1
    9524:	add	r0, r6, r0
    9528:	ldr	r1, [r5, #24]
    952c:	bl	4e90 <sas_read4@plt>
    9530:	str	r0, [sp, #8]
    9534:	ldr	r0, [r5, #100]	; 0x64
    9538:	str	r0, [sp]
    953c:	add	r2, r6, #8
    9540:	add	r0, sp, #19
    9544:	mov	r1, #129	; 0x81
    9548:	mov	r3, #8
    954c:	bl	4cbc <readstat_convert@plt>
    9550:	mov	sl, #138	; 0x8a
    9554:	cmp	r7, #0
    9558:	movweq	sl, #106	; 0x6a
    955c:	cmp	r0, #0
    9560:	bne	95b4 <sas7bcat_parse_block+0xfc>
    9564:	lsr	r0, r4, #1
    9568:	orr	r8, r0, r4, lsl #1
    956c:	ldrsb	r0, [r6, #2]
    9570:	cmn	r0, #1
    9574:	bgt	9584 <sas7bcat_parse_block+0xcc>
    9578:	ldr	r0, [r5, #16]
    957c:	cmp	r0, #0
    9580:	beq	95bc <sas7bcat_parse_block+0x104>
    9584:	add	r1, r8, sl
    9588:	cmp	r1, r9
    958c:	mov	r0, #0
    9590:	bhi	95b4 <sas7bcat_parse_block+0xfc>
    9594:	add	r0, sp, #19
    9598:	stm	sp, {r0, r5}
    959c:	add	r0, r6, r1
    95a0:	sub	r1, r9, sl
    95a4:	sub	r1, r1, r8
    95a8:	ldr	r2, [sp, #8]
    95ac:	ldr	r3, [sp, #12]
    95b0:	bl	9640 <sas7bcat_parse_value_labels>
    95b4:	sub	sp, fp, #28
    95b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    95bc:	orr	r0, sl, r8
    95c0:	add	r1, r0, #32
    95c4:	cmp	r1, r9
    95c8:	bhi	94cc <sas7bcat_parse_block+0x14>
    95cc:	ldr	r1, [r5, #100]	; 0x64
    95d0:	str	r1, [sp]
    95d4:	add	r2, r6, r0
    95d8:	add	r0, sp, #19
    95dc:	mov	r1, #129	; 0x81
    95e0:	mov	r3, #32
    95e4:	bl	4cbc <readstat_convert@plt>
    95e8:	cmp	r0, #0
    95ec:	bne	95b4 <sas7bcat_parse_block+0xfc>
    95f0:	orr	r8, r8, #32
    95f4:	b	9584 <sas7bcat_parse_block+0xcc>

000095f8 <sas7bcat_ctx_free>:
    95f8:	push	{r4, sl, fp, lr}
    95fc:	add	fp, sp, #8
    9600:	mov	r4, r0
    9604:	ldr	r0, [r0, #100]	; 0x64
    9608:	cmp	r0, #0
    960c:	beq	9614 <sas7bcat_ctx_free+0x1c>
    9610:	bl	4848 <iconv_close@plt>
    9614:	ldr	r0, [r4, #80]	; 0x50
    9618:	cmp	r0, #0
    961c:	beq	9624 <sas7bcat_ctx_free+0x2c>
    9620:	bl	4938 <free@plt>
    9624:	mov	r0, r4
    9628:	pop	{r4, sl, fp, lr}
    962c:	b	4938 <free@plt>

00009630 <compare_block_pointers>:
    9630:	ldr	r1, [r1]
    9634:	ldr	r0, [r0]
    9638:	sub	r0, r0, r1
    963c:	bx	lr

00009640 <sas7bcat_parse_value_labels>:
    9640:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9644:	add	fp, sp, #28
    9648:	sub	sp, sp, #4
    964c:	vpush	{d8}
    9650:	sub	sp, sp, #128	; 0x80
    9654:	mov	r5, r3
    9658:	mov	sl, r2
    965c:	str	r1, [fp, #-136]	; 0xffffff78
    9660:	mov	r8, r0
    9664:	mov	r0, r2
    9668:	mov	r1, #4
    966c:	bl	4a28 <readstat_calloc@plt>
    9670:	mov	r9, r0
    9674:	bl	492c <machine_is_little_endian@plt>
    9678:	cmp	r9, #0
    967c:	beq	9720 <sas7bcat_parse_value_labels+0xe0>
    9680:	cmp	r5, #1
    9684:	blt	9728 <sas7bcat_parse_value_labels+0xe8>
    9688:	str	r0, [fp, #-156]	; 0xffffff64
    968c:	ldr	r0, [fp, #8]
    9690:	ldrb	r0, [r0]
    9694:	str	r0, [fp, #-144]	; 0xffffff70
    9698:	ldr	r3, [fp, #12]
    969c:	mov	r7, #0
    96a0:	mov	r4, r8
    96a4:	str	r9, [fp, #-140]	; 0xffffff74
    96a8:	ldr	r2, [fp, #-136]	; 0xffffff78
    96ac:	b	96d4 <sas7bcat_parse_value_labels+0x94>
    96b0:	str	r6, [r9, r0, lsl #2]
    96b4:	ldr	r2, [fp, #-136]	; 0xffffff78
    96b8:	ldr	r3, [fp, #12]
    96bc:	ldrb	r0, [r4, #2]
    96c0:	add	r0, r0, r4
    96c4:	add	r4, r0, #6
    96c8:	add	r7, r7, #1
    96cc:	cmp	r5, r7
    96d0:	beq	9734 <sas7bcat_parse_value_labels+0xf4>
    96d4:	sub	r6, r4, r8
    96d8:	add	r0, r6, #3
    96dc:	cmp	r0, r2
    96e0:	bhi	9718 <sas7bcat_parse_value_labels+0xd8>
    96e4:	cmp	r7, sl
    96e8:	bge	96bc <sas7bcat_parse_value_labels+0x7c>
    96ec:	ldr	r0, [r3, #20]
    96f0:	add	r0, r0, r4
    96f4:	sub	r1, r0, r8
    96f8:	add	r1, r1, #14
    96fc:	cmp	r1, r2
    9700:	bhi	9718 <sas7bcat_parse_value_labels+0xd8>
    9704:	add	r0, r0, #10
    9708:	ldr	r1, [r3, #24]
    970c:	bl	4e90 <sas_read4@plt>
    9710:	cmp	r0, sl
    9714:	bcc	96b0 <sas7bcat_parse_value_labels+0x70>
    9718:	mov	r9, #5
    971c:	b	974c <sas7bcat_parse_value_labels+0x10c>
    9720:	mov	r9, #3
    9724:	b	975c <sas7bcat_parse_value_labels+0x11c>
    9728:	mov	r0, r9
    972c:	mov	r9, #0
    9730:	b	9758 <sas7bcat_parse_value_labels+0x118>
    9734:	str	r5, [fp, #-160]	; 0xffffff60
    9738:	mov	r9, #0
    973c:	cmp	sl, #1
    9740:	ldrge	r0, [fp, #-160]	; 0xffffff60
    9744:	cmpge	r0, #1
    9748:	bge	9770 <sas7bcat_parse_value_labels+0x130>
    974c:	ldr	r0, [fp, #-140]	; 0xffffff74
    9750:	cmp	r0, #0
    9754:	beq	975c <sas7bcat_parse_value_labels+0x11c>
    9758:	bl	4938 <free@plt>
    975c:	mov	r0, r9
    9760:	sub	sp, fp, #40	; 0x28
    9764:	vpop	{d8}
    9768:	add	sp, sp, #4
    976c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9770:	ldr	r0, [fp, #-144]	; 0xffffff70
    9774:	subs	r7, r0, #36	; 0x24
    9778:	movwne	r7, #5
    977c:	sub	r0, fp, #64	; 0x40
    9780:	add	r0, r0, #8
    9784:	str	r0, [fp, #-168]	; 0xffffff58
    9788:	sub	r5, fp, #129	; 0x81
    978c:	vldr	d8, [pc, #508]	; 9990 <sas7bcat_parse_value_labels+0x350>
    9790:	mov	r6, #0
    9794:	str	r7, [fp, #-152]	; 0xffffff68
    9798:	ldr	r0, [fp, #-140]	; 0xffffff74
    979c:	ldr	r0, [r0, r6, lsl #2]
    97a0:	add	r1, r0, #30
    97a4:	cmp	r1, r2
    97a8:	bhi	9718 <sas7bcat_parse_value_labels+0xd8>
    97ac:	add	r9, r4, #10
    97b0:	sub	r1, r9, r8
    97b4:	cmp	r1, r2
    97b8:	bhi	9718 <sas7bcat_parse_value_labels+0xd8>
    97bc:	add	r0, r8, r0
    97c0:	mov	r1, #0
    97c4:	str	r1, [fp, #-60]	; 0xffffffc4
    97c8:	str	r1, [fp, #-64]	; 0xffffffc0
    97cc:	strb	r1, [fp, #-52]	; 0xffffffcc
    97d0:	str	r7, [fp, #-56]	; 0xffffffc8
    97d4:	ldrb	r1, [fp, #-51]	; 0xffffffcd
    97d8:	and	r1, r1, #252	; 0xfc
    97dc:	strb	r1, [fp, #-51]	; 0xffffffcd
    97e0:	ldr	r1, [fp, #-144]	; 0xffffff70
    97e4:	cmp	r1, #36	; 0x24
    97e8:	str	r6, [fp, #-148]	; 0xffffff6c
    97ec:	bne	9838 <sas7bcat_parse_value_labels+0x1f8>
    97f0:	mov	r7, r9
    97f4:	ldrb	r1, [r0, #2]
    97f8:	ldr	r2, [r3, #100]	; 0x64
    97fc:	sub	sp, sp, #8
    9800:	str	r2, [sp]
    9804:	add	r0, r1, r0
    9808:	sub	r2, r0, #10
    980c:	mov	r0, r5
    9810:	mov	r1, #65	; 0x41
    9814:	mov	r3, #16
    9818:	bl	4cbc <readstat_convert@plt>
    981c:	add	sp, sp, #8
    9820:	cmp	r0, #0
    9824:	bne	9988 <sas7bcat_parse_value_labels+0x348>
    9828:	str	r5, [fp, #-64]	; 0xffffffc0
    982c:	ldr	r2, [fp, #12]
    9830:	mov	r9, r7
    9834:	b	9880 <sas7bcat_parse_value_labels+0x240>
    9838:	add	r0, r0, #22
    983c:	ldr	r1, [fp, #-156]	; 0xffffff64
    9840:	bl	4e60 <sas_read8@plt>
    9844:	orr	r2, r1, #65280	; 0xff00
    9848:	movw	r3, #65535	; 0xffff
    984c:	eor	r2, r2, r3
    9850:	mvn	r3, r0
    9854:	orrs	r2, r3, r2
    9858:	bne	9870 <sas7bcat_parse_value_labels+0x230>
    985c:	ubfx	r1, r1, #8, #8
    9860:	sub	r0, fp, #64	; 0x40
    9864:	bl	4f44 <sas_assign_tag@plt>
    9868:	vorr	d16, d8, d8
    986c:	b	9878 <sas7bcat_parse_value_labels+0x238>
    9870:	eor	r1, r1, #-2147483648	; 0x80000000
    9874:	vmov	d16, r0, r1
    9878:	ldr	r2, [fp, #12]
    987c:	vstr	d16, [fp, #-64]	; 0xffffffc0
    9880:	ldr	r1, [r2, #24]
    9884:	add	r0, r4, #8
    9888:	mov	r6, r2
    988c:	bl	4e6c <sas_read2@plt>
    9890:	mov	r5, r0
    9894:	add	r0, r9, r0
    9898:	sub	r0, r0, r8
    989c:	ldr	r2, [fp, #-136]	; 0xffffff78
    98a0:	cmp	r0, r2
    98a4:	bhi	9718 <sas7bcat_parse_value_labels+0xd8>
    98a8:	ldr	r0, [r6, #4]
    98ac:	cmp	r0, #0
    98b0:	mov	r3, r6
    98b4:	ldr	r7, [fp, #-152]	; 0xffffff68
    98b8:	beq	9940 <sas7bcat_parse_value_labels+0x300>
    98bc:	mov	r0, #1
    98c0:	orr	r1, r0, r5, lsl #2
    98c4:	add	r0, r1, #7
    98c8:	bic	r0, r0, #4
    98cc:	str	sp, [fp, #-164]	; 0xffffff5c
    98d0:	sub	r6, sp, r0
    98d4:	mov	sp, r6
    98d8:	ldr	r0, [r3, #100]	; 0x64
    98dc:	sub	sp, sp, #8
    98e0:	str	r0, [sp]
    98e4:	mov	r0, r6
    98e8:	mov	r2, r9
    98ec:	mov	r7, r3
    98f0:	mov	r3, r5
    98f4:	bl	4cbc <readstat_convert@plt>
    98f8:	add	sp, sp, #8
    98fc:	cmp	r0, #0
    9900:	bne	9970 <sas7bcat_parse_value_labels+0x330>
    9904:	ldr	r0, [fp, #-168]	; 0xffffff58
    9908:	ldrd	r0, [r0]
    990c:	ldmib	r7, {ip, lr}
    9910:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9914:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9918:	push	{r0, r1, r6, lr}
    991c:	ldr	r0, [fp, #8]
    9920:	blx	ip
    9924:	add	sp, sp, #16
    9928:	cmp	r0, #0
    992c:	bne	997c <sas7bcat_parse_value_labels+0x33c>
    9930:	ldr	sp, [fp, #-164]	; 0xffffff5c
    9934:	ldr	r2, [fp, #-136]	; 0xffffff78
    9938:	ldr	r3, [fp, #12]
    993c:	ldr	r7, [fp, #-152]	; 0xffffff68
    9940:	ldr	r6, [fp, #-148]	; 0xffffff6c
    9944:	add	r6, r6, #1
    9948:	mov	r9, #0
    994c:	cmp	r6, sl
    9950:	bge	974c <sas7bcat_parse_value_labels+0x10c>
    9954:	add	r0, r5, r4
    9958:	add	r4, r0, #11
    995c:	ldr	r0, [fp, #-160]	; 0xffffff60
    9960:	cmp	r6, r0
    9964:	sub	r5, fp, #129	; 0x81
    9968:	blt	9798 <sas7bcat_parse_value_labels+0x158>
    996c:	b	974c <sas7bcat_parse_value_labels+0x10c>
    9970:	mov	r9, r0
    9974:	ldr	sp, [fp, #-164]	; 0xffffff5c
    9978:	b	974c <sas7bcat_parse_value_labels+0x10c>
    997c:	mov	r9, #4
    9980:	ldr	sp, [fp, #-164]	; 0xffffff5c
    9984:	b	974c <sas7bcat_parse_value_labels+0x10c>
    9988:	mov	r9, r0
    998c:	b	974c <sas7bcat_parse_value_labels+0x10c>
    9990:	.word	0x00000000
    9994:	.word	0x7ff80000

00009998 <readstat_begin_writing_sas7bcat>:
    9998:	ldr	r2, [r0, #8]
    999c:	cmp	r2, #0
    99a0:	moveq	r2, #9
    99a4:	streq	r2, [r0, #8]
    99a8:	ldr	r2, [pc, #12]	; 99bc <readstat_begin_writing_sas7bcat+0x24>
    99ac:	add	r2, pc, r2
    99b0:	str	r2, [r0, #276]	; 0x114
    99b4:	mov	r2, #0
    99b8:	b	49d4 <readstat_begin_writing_file@plt>
    99bc:	.word	0x0000000c

000099c0 <sas7bcat_begin_data>:
    99c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    99c4:	add	fp, sp, #28
    99c8:	sub	sp, sp, #12
    99cc:	mov	r4, r0
    99d0:	mov	sl, #0
    99d4:	mov	r1, #0
    99d8:	bl	4de8 <sas_header_info_init@plt>
    99dc:	mov	r8, r0
    99e0:	add	r6, r0, #56	; 0x38
    99e4:	ldr	r0, [r4, #40]	; 0x28
    99e8:	lsl	r0, r0, #3
    99ec:	bl	4b90 <malloc@plt>
    99f0:	mov	r7, r0
    99f4:	mov	r9, r8
    99f8:	ldr	r0, [r9, #32]!
    99fc:	bl	4b90 <malloc@plt>
    9a00:	str	r0, [sp, #8]
    9a04:	ldr	r0, [r4, #40]	; 0x28
    9a08:	cmp	r0, #1
    9a0c:	blt	9a34 <sas7bcat_begin_data+0x74>
    9a10:	mov	r5, #0
    9a14:	ldr	r0, [r4, #36]	; 0x24
    9a18:	ldr	r0, [r0, r5, lsl #2]
    9a1c:	bl	9c1c <sas7bcat_block_for_label_set>
    9a20:	str	r0, [r7, r5, lsl #2]
    9a24:	add	r5, r5, #1
    9a28:	ldr	r0, [r4, #40]	; 0x28
    9a2c:	cmp	r5, r0
    9a30:	blt	9a14 <sas7bcat_begin_data+0x54>
    9a34:	mov	r0, #4
    9a38:	stm	r6, {r0, sl}
    9a3c:	mov	r0, r4
    9a40:	mov	r1, r8
    9a44:	bl	9e38 <sas7bcat_emit_header>
    9a48:	mov	r6, r0
    9a4c:	cmp	r0, #0
    9a50:	ldr	sl, [sp, #8]
    9a54:	bne	9bd0 <sas7bcat_begin_data+0x210>
    9a58:	ldr	r1, [r9]
    9a5c:	mov	r0, r4
    9a60:	bl	4a88 <readstat_write_zeros@plt>
    9a64:	mov	r6, r0
    9a68:	cmp	r0, #0
    9a6c:	bne	9bd0 <sas7bcat_begin_data+0x210>
    9a70:	ldr	r2, [r9]
    9a74:	mov	r6, #0
    9a78:	mov	r0, sl
    9a7c:	mov	r1, #0
    9a80:	bl	4d28 <memset@plt>
    9a84:	ldr	r0, [r4, #40]	; 0x28
    9a88:	cmp	r0, #1
    9a8c:	blt	9aec <sas7bcat_begin_data+0x12c>
    9a90:	add	r1, sl, #856	; 0x358
    9a94:	mov	r0, #16
    9a98:	mov	ip, #79	; 0x4f
    9a9c:	mov	lr, #4
    9aa0:	movw	r3, #19544	; 0x4c58
    9aa4:	movt	r3, #21075	; 0x5253
    9aa8:	ldr	r5, [r9]
    9aac:	add	r2, sl, r5
    9ab0:	add	r5, r1, #212	; 0xd4
    9ab4:	cmp	r5, r2
    9ab8:	bhi	9aec <sas7bcat_begin_data+0x12c>
    9abc:	strb	ip, [r1, #50]	; 0x32
    9ac0:	strh	r0, [r1, #8]
    9ac4:	strh	lr, [r1, #4]
    9ac8:	str	r3, [r1]
    9acc:	ldr	r1, [r7, r6, lsl #2]
    9ad0:	ldrh	r1, [r1]
    9ad4:	add	r0, r0, r1
    9ad8:	add	r6, r6, #1
    9adc:	ldr	r1, [r4, #40]	; 0x28
    9ae0:	cmp	r6, r1
    9ae4:	mov	r1, r5
    9ae8:	blt	9aa8 <sas7bcat_begin_data+0xe8>
    9aec:	ldr	r2, [r9]
    9af0:	mov	r0, r4
    9af4:	mov	r1, sl
    9af8:	bl	4ef0 <readstat_write_bytes@plt>
    9afc:	mov	r6, r0
    9b00:	cmp	r0, #0
    9b04:	bne	9bd0 <sas7bcat_begin_data+0x210>
    9b08:	ldr	r1, [r9]
    9b0c:	mov	r0, r4
    9b10:	bl	4a88 <readstat_write_zeros@plt>
    9b14:	mov	r6, r0
    9b18:	cmp	r0, #0
    9b1c:	bne	9bd0 <sas7bcat_begin_data+0x210>
    9b20:	str	r8, [sp, #4]
    9b24:	ldr	r2, [r9]
    9b28:	mov	r0, sl
    9b2c:	mov	r1, #0
    9b30:	bl	4d28 <memset@plt>
    9b34:	ldr	r0, [r4, #40]	; 0x28
    9b38:	cmp	r0, #1
    9b3c:	blt	9bb4 <sas7bcat_begin_data+0x1f4>
    9b40:	mov	r0, #16
    9b44:	mov	r6, #0
    9b48:	ldr	sl, [r7, r6, lsl #2]
    9b4c:	ldr	r1, [sl]
    9b50:	sxth	r0, r0
    9b54:	add	r8, r0, #16
    9b58:	add	r2, r1, r8
    9b5c:	ldm	r9, {r3, r5}
    9b60:	subs	r2, r3, r2
    9b64:	sbcs	r2, r5, #0
    9b68:	blt	9bb4 <sas7bcat_begin_data+0x1f4>
    9b6c:	ldr	r3, [sp, #8]
    9b70:	mov	r2, r3
    9b74:	mov	r5, #0
    9b78:	str	r5, [r2, r0]!
    9b7c:	str	r5, [r2, #12]
    9b80:	str	r5, [r2, #8]
    9b84:	strh	r1, [r2, #6]
    9b88:	strh	r5, [r2, #4]
    9b8c:	sxtah	r0, r3, r8
    9b90:	mov	r1, sl
    9b94:	ldr	r2, [r1], #4
    9b98:	bl	4998 <memcpy@plt>
    9b9c:	ldr	r0, [sl]
    9ba0:	sxtah	r0, r0, r8
    9ba4:	add	r6, r6, #1
    9ba8:	ldr	r1, [r4, #40]	; 0x28
    9bac:	cmp	r6, r1
    9bb0:	blt	9b48 <sas7bcat_begin_data+0x188>
    9bb4:	ldr	r2, [r9]
    9bb8:	mov	r0, r4
    9bbc:	ldr	sl, [sp, #8]
    9bc0:	mov	r1, sl
    9bc4:	bl	4ef0 <readstat_write_bytes@plt>
    9bc8:	mov	r6, r0
    9bcc:	ldr	r8, [sp, #4]
    9bd0:	ldr	r0, [r4, #40]	; 0x28
    9bd4:	cmp	r0, #1
    9bd8:	blt	9bf8 <sas7bcat_begin_data+0x238>
    9bdc:	mov	r5, #0
    9be0:	ldr	r0, [r7, r5, lsl #2]
    9be4:	bl	4938 <free@plt>
    9be8:	add	r5, r5, #1
    9bec:	ldr	r0, [r4, #40]	; 0x28
    9bf0:	cmp	r5, r0
    9bf4:	blt	9be0 <sas7bcat_begin_data+0x220>
    9bf8:	mov	r0, r7
    9bfc:	bl	4938 <free@plt>
    9c00:	mov	r0, r8
    9c04:	bl	4938 <free@plt>
    9c08:	mov	r0, sl
    9c0c:	bl	4938 <free@plt>
    9c10:	mov	r0, r6
    9c14:	sub	sp, fp, #28
    9c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00009c1c <sas7bcat_block_for_label_set>:
    9c1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9c20:	add	fp, sp, #28
    9c24:	sub	sp, sp, #44	; 0x2c
    9c28:	mov	sl, r0
    9c2c:	add	r5, r0, #4
    9c30:	mov	r0, r5
    9c34:	bl	4c8c <strlen@plt>
    9c38:	mov	r7, r0
    9c3c:	cmp	r0, #32
    9c40:	mov	r8, r0
    9c44:	movcs	r8, #32
    9c48:	cmp	r0, #8
    9c4c:	movls	r8, r0
    9c50:	add	r0, sp, #8
    9c54:	mov	r1, r5
    9c58:	mov	r2, r8
    9c5c:	bl	4998 <memcpy@plt>
    9c60:	mov	r6, #106	; 0x6a
    9c64:	cmp	r7, #8
    9c68:	movwhi	r6, #138	; 0x8a
    9c6c:	ldr	r4, [sl, #264]	; 0x108
    9c70:	cmp	r4, #1
    9c74:	blt	9ca4 <sas7bcat_block_for_label_set+0x88>
    9c78:	mov	r5, #0
    9c7c:	mov	r0, sl
    9c80:	mov	r1, r5
    9c84:	bl	4f68 <readstat_get_value_label@plt>
    9c88:	ldr	r0, [r0, #28]
    9c8c:	add	r0, r6, r0
    9c90:	add	r6, r0, #41	; 0x29
    9c94:	add	r5, r5, #1
    9c98:	ldr	r4, [sl, #264]	; 0x108
    9c9c:	cmp	r5, r4
    9ca0:	blt	9c7c <sas7bcat_block_for_label_set+0x60>
    9ca4:	add	r1, r6, #8
    9ca8:	mov	r0, #1
    9cac:	bl	47d0 <calloc@plt>
    9cb0:	str	r4, [r0, #46]	; 0x2e
    9cb4:	str	r4, [r0, #42]	; 0x2a
    9cb8:	str	r6, [r0]
    9cbc:	cmp	r8, #9
    9cc0:	movw	r1, #8224	; 0x2020
    9cc4:	movt	r1, #8224	; 0x2020
    9cc8:	str	r0, [sp, #4]
    9ccc:	bcc	9d1c <sas7bcat_block_for_label_set+0x100>
    9cd0:	mov	r1, #128	; 0x80
    9cd4:	strb	r1, [r0, #6]
    9cd8:	ldr	r2, [sp, #8]
    9cdc:	ldr	r1, [sp, #12]
    9ce0:	str	r2, [r0, #12]
    9ce4:	str	r1, [r0, #16]
    9ce8:	add	r5, r0, #110	; 0x6e
    9cec:	add	r0, r5, r8
    9cf0:	rsb	r2, r8, #32
    9cf4:	cmp	r8, #31
    9cf8:	movwhi	r2, #0
    9cfc:	mov	r1, #32
    9d00:	bl	4d28 <memset@plt>
    9d04:	add	r1, sp, #8
    9d08:	mov	r0, r5
    9d0c:	mov	r2, r8
    9d10:	bl	4998 <memcpy@plt>
    9d14:	mov	r0, #138	; 0x8a
    9d18:	b	9d34 <sas7bcat_block_for_label_set+0x118>
    9d1c:	str	r1, [r0, #12]!
    9d20:	str	r1, [r0, #4]
    9d24:	add	r1, sp, #8
    9d28:	mov	r2, r8
    9d2c:	bl	4998 <memcpy@plt>
    9d30:	mov	r0, #106	; 0x6a
    9d34:	ldr	r1, [sl, #264]	; 0x108
    9d38:	cmp	r1, #1
    9d3c:	blt	9e2c <sas7bcat_block_for_label_set+0x210>
    9d40:	ldr	r3, [sp, #4]
    9d44:	add	r1, r3, #4
    9d48:	rsb	r2, r4, r4, lsl #4
    9d4c:	add	r2, r0, r2, lsl #1
    9d50:	add	r4, r1, r2
    9d54:	add	r0, r0, r3
    9d58:	add	r8, r0, #14
    9d5c:	mov	r6, #0
    9d60:	b	9dcc <sas7bcat_block_for_label_set+0x1b0>
    9d64:	ldr	r2, [r7, #20]
    9d68:	mov	r0, r8
    9d6c:	movw	r1, #8224	; 0x2020
    9d70:	movt	r1, #8224	; 0x2020
    9d74:	str	r1, [r0, #4]!
    9d78:	str	r1, [r0, #12]
    9d7c:	str	r1, [r0, #8]
    9d80:	str	r1, [r0, #4]
    9d84:	cmp	r2, #16
    9d88:	movcs	r2, #16
    9d8c:	ldr	r1, [r7, #16]
    9d90:	bl	4998 <memcpy@plt>
    9d94:	ldr	r2, [r7, #28]
    9d98:	strh	r2, [r4, #8]
    9d9c:	ldr	r1, [r7, #24]
    9da0:	add	r0, r4, #10
    9da4:	sxth	r2, r2
    9da8:	bl	4998 <memcpy@plt>
    9dac:	ldr	r0, [r7, #28]
    9db0:	add	r0, r0, r4
    9db4:	add	r4, r0, #11
    9db8:	add	r8, r8, #30
    9dbc:	add	r6, r6, #1
    9dc0:	ldr	r0, [sl, #264]	; 0x108
    9dc4:	cmp	r6, r0
    9dc8:	bge	9e2c <sas7bcat_block_for_label_set+0x210>
    9dcc:	mov	r0, sl
    9dd0:	mov	r1, r6
    9dd4:	bl	4f68 <readstat_get_value_label@plt>
    9dd8:	mov	r7, r0
    9ddc:	str	r6, [r8]
    9de0:	mov	r0, #24
    9de4:	strb	r0, [r8, #-8]
    9de8:	ldr	r0, [sl]
    9dec:	cmp	r0, #0
    9df0:	beq	9d64 <sas7bcat_block_for_label_set+0x148>
    9df4:	ldr	r9, [r7]
    9df8:	ldr	r1, [r7, #4]
    9dfc:	eor	r5, r1, #-2147483648	; 0x80000000
    9e00:	bl	492c <machine_is_little_endian@plt>
    9e04:	cmp	r0, #0
    9e08:	beq	9e20 <sas7bcat_block_for_label_set+0x204>
    9e0c:	mov	r0, r9
    9e10:	mov	r1, r5
    9e14:	bl	47f4 <byteswap8@plt>
    9e18:	mov	r9, r0
    9e1c:	mov	r5, r1
    9e20:	str	r9, [r8, #12]
    9e24:	str	r5, [r8, #16]
    9e28:	b	9d94 <sas7bcat_block_for_label_set+0x178>
    9e2c:	ldr	r0, [sp, #4]
    9e30:	sub	sp, fp, #28
    9e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00009e38 <sas7bcat_emit_header>:
    9e38:	push	{r4, r5, r6, sl, fp, lr}
    9e3c:	add	fp, sp, #16
    9e40:	sub	sp, sp, #328	; 0x148
    9e44:	mov	r4, r1
    9e48:	mov	r5, r0
    9e4c:	add	r6, sp, #160	; 0xa0
    9e50:	mov	r0, r6
    9e54:	mov	r1, #0
    9e58:	mov	r2, #156	; 0x9c
    9e5c:	bl	4d28 <memset@plt>
    9e60:	ldr	r0, [r4, #4]
    9e64:	mov	r1, #34	; 0x22
    9e68:	strb	r1, [sp, #195]	; 0xc3
    9e6c:	mov	r1, #51	; 0x33
    9e70:	cmp	r0, #0
    9e74:	movweq	r1, #34	; 0x22
    9e78:	strb	r1, [sp, #192]	; 0xc0
    9e7c:	bl	492c <machine_is_little_endian@plt>
    9e80:	ldr	r1, [pc, #152]	; 9f20 <sas7bcat_emit_header+0xe8>
    9e84:	ldr	r1, [pc, r1]
    9e88:	vld1.8	{d16-d17}, [r1]!
    9e8c:	vld1.8	{d18-d19}, [r1]
    9e90:	add	r1, r6, #16
    9e94:	vst1.64	{d18-d19}, [r1]
    9e98:	movw	r1, #20300	; 0x4f4c
    9e9c:	movt	r1, #8263	; 0x2047
    9ea0:	str	r1, [sp, #320]	; 0x140
    9ea4:	movw	r1, #16707	; 0x4143
    9ea8:	movt	r1, #16724	; 0x4154
    9eac:	str	r1, [sp, #316]	; 0x13c
    9eb0:	movw	r1, #18758	; 0x4946
    9eb4:	movt	r1, #17740	; 0x454c
    9eb8:	str	r1, [sp, #248]	; 0xf8
    9ebc:	movw	r1, #16723	; 0x4153
    9ec0:	movt	r1, #8275	; 0x2053
    9ec4:	str	r1, [sp, #244]	; 0xf4
    9ec8:	mov	r1, #20
    9ecc:	strb	r1, [sp, #230]	; 0xe6
    9ed0:	mov	r1, #49	; 0x31
    9ed4:	strb	r1, [sp, #199]	; 0xc7
    9ed8:	cmp	r0, #0
    9edc:	movwne	r0, #1
    9ee0:	strb	r0, [sp, #197]	; 0xc5
    9ee4:	mov	r0, #8
    9ee8:	vst1.64	{d16-d17}, [r6], r0
    9eec:	movw	r0, #156	; 0x9c
    9ef0:	mov	r1, sp
    9ef4:	ldr	r2, [r6], #4
    9ef8:	str	r2, [r1], #4
    9efc:	subs	r0, r0, #4
    9f00:	bne	9ef4 <sas7bcat_emit_header+0xbc>
    9f04:	ldr	r2, [sp, #160]	; 0xa0
    9f08:	ldr	r3, [sp, #164]	; 0xa4
    9f0c:	mov	r0, r5
    9f10:	mov	r1, r4
    9f14:	bl	4b30 <sas_write_header@plt>
    9f18:	sub	sp, fp, #16
    9f1c:	pop	{r4, r5, r6, sl, fp, pc}
    9f20:	.word	0x0003b444

00009f24 <readstat_parse_sas7bdat>:
    9f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9f28:	add	fp, sp, #28
    9f2c:	sub	sp, sp, #28
    9f30:	mov	r9, r2
    9f34:	mov	r4, r1
    9f38:	mov	r6, r0
    9f3c:	mov	r0, #0
    9f40:	str	r0, [sp, #20]
    9f44:	str	r0, [sp, #16]
    9f48:	ldr	r8, [r6, #32]
    9f4c:	mov	r0, #1
    9f50:	movw	r1, #2536	; 0x9e8
    9f54:	bl	47d0 <calloc@plt>
    9f58:	mov	r5, r0
    9f5c:	mov	r0, #1
    9f60:	mov	r1, #152	; 0x98
    9f64:	bl	47d0 <calloc@plt>
    9f68:	mov	sl, r0
    9f6c:	add	r0, r6, #16
    9f70:	vld1.32	{d16-d17}, [r0]
    9f74:	add	r0, r5, #16
    9f78:	mov	r1, #48	; 0x30
    9f7c:	mov	r2, r6
    9f80:	vld1.32	{d18-d19}, [r2], r1
    9f84:	vst1.32	{d16-d17}, [r0]
    9f88:	mov	r0, #84	; 0x54
    9f8c:	mov	r1, r5
    9f90:	vst1.32	{d18-d19}, [r1], r0
    9f94:	ldr	r7, [r6, #32]
    9f98:	add	r6, r6, #36	; 0x24
    9f9c:	ldm	r6, {r0, r3, r6}
    9fa0:	str	r0, [r5, #200]	; 0xc8
    9fa4:	str	r3, [r5, #204]	; 0xcc
    9fa8:	str	r9, [sp, #12]
    9fac:	str	r9, [r5, #52]	; 0x34
    9fb0:	str	r7, [r5, #56]	; 0x38
    9fb4:	str	r6, [r1]
    9fb8:	ldr	r0, [r2]
    9fbc:	cmp	r0, #1
    9fc0:	strge	r0, [r5, #88]	; 0x58
    9fc4:	ldr	r2, [r8]
    9fc8:	ldr	r1, [r8, #20]
    9fcc:	mov	r0, r4
    9fd0:	blx	r2
    9fd4:	cmn	r0, #1
    9fd8:	mov	r9, sl
    9fdc:	mov	r7, #1
    9fe0:	beq	a118 <readstat_parse_sas7bdat+0x1f4>
    9fe4:	add	r6, r5, #32
    9fe8:	ldr	r3, [r8, #8]
    9fec:	ldr	r2, [r8, #20]
    9ff0:	mov	r0, #0
    9ff4:	mov	r1, #2
    9ff8:	blx	r3
    9ffc:	asr	r1, r0, #31
    a000:	strd	r0, [r6]
    a004:	cmn	r0, #1
    a008:	beq	a070 <readstat_parse_sas7bdat+0x14c>
    a00c:	ldr	r3, [r8, #8]
    a010:	ldr	r2, [r8, #20]
    a014:	mov	r0, #0
    a018:	mov	r1, #0
    a01c:	blx	r3
    a020:	ldr	r2, [r5, #24]
    a024:	cmn	r0, #1
    a028:	beq	a0c4 <readstat_parse_sas7bdat+0x1a0>
    a02c:	mov	r0, r8
    a030:	mov	r1, r9
    a034:	ldr	r3, [sp, #12]
    a038:	bl	4e3c <sas_read_header@plt>
    a03c:	mov	r7, r0
    a040:	cmp	r0, #0
    a044:	beq	a1ac <readstat_parse_sas7bdat+0x288>
    a048:	ldr	r1, [r8, #4]
    a04c:	ldr	r0, [r8, #20]
    a050:	blx	r1
    a054:	cmp	r7, #15
    a058:	bhi	a188 <readstat_parse_sas7bdat+0x264>
    a05c:	mov	r0, #1
    a060:	movw	r1, #32774	; 0x8006
    a064:	tst	r1, r0, lsl r7
    a068:	bne	a124 <readstat_parse_sas7bdat+0x200>
    a06c:	b	a188 <readstat_parse_sas7bdat+0x264>
    a070:	ldr	r2, [r5, #24]
    a074:	mov	r7, #15
    a078:	cmp	r2, #0
    a07c:	beq	a118 <readstat_parse_sas7bdat+0x1f4>
    a080:	movw	r0, #481	; 0x1e1
    a084:	mov	r1, #32
    a088:	ldr	r3, [pc, #900]	; a414 <readstat_parse_sas7bdat+0x4f0>
    a08c:	add	r3, pc, r3
    a090:	add	r0, r5, r0
    a094:	add	r6, r3, #16
    a098:	vld1.64	{d16-d17}, [r3], r1
    a09c:	vld1.64	{d18-d19}, [r6]
    a0a0:	vldr	d20, [r3]
    a0a4:	vst1.8	{d16-d17}, [r0]
    a0a8:	movw	r1, #497	; 0x1f1
    a0ac:	add	r1, r5, r1
    a0b0:	vst1.8	{d18-d19}, [r1]
    a0b4:	movw	r1, #513	; 0x201
    a0b8:	add	r1, r5, r1
    a0bc:	vst1.8	{d20}, [r1]
    a0c0:	b	a110 <readstat_parse_sas7bdat+0x1ec>
    a0c4:	mov	r7, #15
    a0c8:	cmp	r2, #0
    a0cc:	beq	a118 <readstat_parse_sas7bdat+0x1f4>
    a0d0:	movw	r0, #481	; 0x1e1
    a0d4:	mov	r1, #30
    a0d8:	ldr	r3, [pc, #824]	; a418 <readstat_parse_sas7bdat+0x4f4>
    a0dc:	add	r3, pc, r3
    a0e0:	add	r0, r5, r0
    a0e4:	add	r6, r3, #16
    a0e8:	vld1.64	{d16-d17}, [r3], r1
    a0ec:	vld1.64	{d18-d19}, [r6]
    a0f0:	vld1.16	{d20-d21}, [r3]
    a0f4:	vst1.8	{d16-d17}, [r0]
    a0f8:	movw	r1, #497	; 0x1f1
    a0fc:	add	r1, r5, r1
    a100:	vst1.8	{d18-d19}, [r1]
    a104:	movw	r1, #511	; 0x1ff
    a108:	add	r1, r5, r1
    a10c:	vst1.8	{d20-d21}, [r1]
    a110:	ldr	r1, [r5, #52]	; 0x34
    a114:	blx	r2
    a118:	ldr	r1, [r8, #4]
    a11c:	ldr	r0, [r8, #20]
    a120:	blx	r1
    a124:	ldr	r0, [r5, #24]
    a128:	cmp	r0, #0
    a12c:	beq	a188 <readstat_parse_sas7bdat+0x264>
    a130:	mov	r0, r7
    a134:	bl	48c0 <readstat_error_message@plt>
    a138:	mov	r4, r0
    a13c:	bl	4cec <__errno_location@plt>
    a140:	mov	r6, r0
    a144:	ldr	r0, [r0]
    a148:	bl	4bc0 <strerror@plt>
    a14c:	ldr	r1, [r6]
    a150:	str	r7, [sp]
    a154:	stmib	sp, {r0, r1}
    a158:	movw	r0, #481	; 0x1e1
    a15c:	add	r6, r5, r0
    a160:	ldr	r2, [pc, #700]	; a424 <readstat_parse_sas7bdat+0x500>
    a164:	add	r2, pc, r2
    a168:	mov	r0, r6
    a16c:	mov	r1, #2048	; 0x800
    a170:	mov	r3, r4
    a174:	bl	4d04 <snprintf@plt>
    a178:	ldr	r2, [r5, #24]
    a17c:	mov	r0, r6
    a180:	ldr	r1, [sp, #12]
    a184:	blx	r2
    a188:	mov	r0, r5
    a18c:	bl	ab90 <sas7bdat_ctx_free>
    a190:	cmp	r9, #0
    a194:	beq	a1a0 <readstat_parse_sas7bdat+0x27c>
    a198:	mov	r0, r9
    a19c:	bl	4938 <free@plt>
    a1a0:	mov	r0, r7
    a1a4:	sub	sp, fp, #28
    a1a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a1ac:	add	r4, r9, #32
    a1b0:	ldm	r9, {r0, r1, r2}
    a1b4:	add	r3, r5, #40	; 0x28
    a1b8:	stm	r3, {r0, r1, r2}
    a1bc:	bl	492c <machine_is_little_endian@plt>
    a1c0:	ldr	r1, [r9]
    a1c4:	eor	r0, r1, r0
    a1c8:	str	r0, [r5, #60]	; 0x3c
    a1cc:	ldrd	r0, [r4, #32]
    a1d0:	str	r0, [r6, #64]!	; 0x40
    a1d4:	ldm	r4, {r0, r2, sl}
    a1d8:	add	lr, r4, #12
    a1dc:	ldm	lr, {r7, ip, lr}
    a1e0:	ldr	r3, [r4, #24]
    a1e4:	ldr	r4, [r4, #28]
    a1e8:	stmib	r6, {r1, r3, r4}
    a1ec:	str	r0, [r6, #16]
    a1f0:	str	r2, [r6, #20]
    a1f4:	ldr	r1, [r5, #44]	; 0x2c
    a1f8:	mov	r2, #0
    a1fc:	mov	r3, #8
    a200:	cmp	r1, #0
    a204:	movweq	r3, #4
    a208:	str	sl, [r6, #32]
    a20c:	str	r7, [r6, #36]	; 0x24
    a210:	str	r3, [r6, #40]	; 0x28
    a214:	add	r1, r6, #44	; 0x2c
    a218:	stm	r1, {r2, ip, lr}
    a21c:	ldrd	r2, [r9, #72]	; 0x48
    a220:	ldr	r1, [r9, #12]
    a224:	str	r2, [r5, #212]	; 0xd4
    a228:	str	r3, [r5, #216]	; 0xd8
    a22c:	str	r1, [r5, #220]	; 0xdc
    a230:	ldr	r1, [r5, #200]	; 0xc8
    a234:	cmp	r1, #0
    a238:	bne	a244 <readstat_parse_sas7bdat+0x320>
    a23c:	ldr	r1, [r9, #144]	; 0x90
    a240:	str	r1, [r5, #200]	; 0xc8
    a244:	bl	4cb0 <readstat_malloc@plt>
    a248:	str	r0, [r5, #120]	; 0x78
    a24c:	cmp	r0, #0
    a250:	beq	a368 <readstat_parse_sas7bdat+0x444>
    a254:	ldr	r4, [r5, #200]	; 0xc8
    a258:	cmp	r4, #0
    a25c:	beq	a298 <readstat_parse_sas7bdat+0x374>
    a260:	ldr	sl, [r5, #204]	; 0xcc
    a264:	cmp	sl, #0
    a268:	beq	a298 <readstat_parse_sas7bdat+0x374>
    a26c:	mov	r0, r4
    a270:	mov	r1, sl
    a274:	bl	4878 <strcmp@plt>
    a278:	cmp	r0, #0
    a27c:	beq	a298 <readstat_parse_sas7bdat+0x374>
    a280:	mov	r0, sl
    a284:	mov	r1, r4
    a288:	bl	4bb4 <iconv_open@plt>
    a28c:	cmn	r0, #1
    a290:	beq	a384 <readstat_parse_sas7bdat+0x460>
    a294:	str	r0, [r5, #208]	; 0xd0
    a298:	ldr	r0, [r5, #208]	; 0xd0
    a29c:	str	r0, [sp]
    a2a0:	add	r0, r5, #224	; 0xe0
    a2a4:	add	r2, r9, #80	; 0x50
    a2a8:	movw	r1, #257	; 0x101
    a2ac:	mov	r3, #64	; 0x40
    a2b0:	bl	4cbc <readstat_convert@plt>
    a2b4:	mov	r7, r0
    a2b8:	cmp	r0, #0
    a2bc:	bne	a048 <readstat_parse_sas7bdat+0x124>
    a2c0:	add	r1, sp, #16
    a2c4:	mov	r0, r5
    a2c8:	bl	a428 <sas7bdat_parse_meta_pages_pass1>
    a2cc:	mov	r7, r0
    a2d0:	cmp	r0, #0
    a2d4:	bne	a048 <readstat_parse_sas7bdat+0x124>
    a2d8:	ldr	r0, [sp, #16]
    a2dc:	ldr	r1, [sp, #20]
    a2e0:	mov	r2, r5
    a2e4:	bl	a6e0 <sas7bdat_parse_amd_pages_pass1>
    a2e8:	mov	r7, r0
    a2ec:	cmp	r0, #0
    a2f0:	bne	a048 <readstat_parse_sas7bdat+0x124>
    a2f4:	ldr	r0, [r6]
    a2f8:	ldr	r3, [r8, #8]
    a2fc:	ldr	r2, [r8, #20]
    a300:	mov	r1, #0
    a304:	blx	r3
    a308:	cmn	r0, #1
    a30c:	beq	a38c <readstat_parse_sas7bdat+0x468>
    a310:	mov	r0, r5
    a314:	bl	a9d0 <sas7bdat_parse_all_pages_pass2>
    a318:	mov	r7, r0
    a31c:	cmp	r0, #0
    a320:	bne	a048 <readstat_parse_sas7bdat+0x124>
    a324:	mov	r0, r5
    a328:	mov	r1, #0
    a32c:	bl	ab28 <sas7bdat_submit_columns_if_needed>
    a330:	mov	r7, r0
    a334:	cmp	r0, #0
    a338:	bne	a048 <readstat_parse_sas7bdat+0x124>
    a33c:	ldr	r0, [r5, #16]
    a340:	cmp	r0, #0
    a344:	beq	a358 <readstat_parse_sas7bdat+0x434>
    a348:	ldr	r0, [r5, #76]	; 0x4c
    a34c:	ldr	r3, [r5, #84]	; 0x54
    a350:	cmp	r0, r3
    a354:	bne	a3d0 <readstat_parse_sas7bdat+0x4ac>
    a358:	mov	r0, r5
    a35c:	bl	ab60 <sas7bdat_update_progress>
    a360:	mov	r7, r0
    a364:	b	a048 <readstat_parse_sas7bdat+0x124>
    a368:	mov	r7, #3
    a36c:	ldr	r1, [r8, #4]
    a370:	ldr	r0, [r8, #20]
    a374:	blx	r1
    a378:	mov	r0, r5
    a37c:	bl	ab90 <sas7bdat_ctx_free>
    a380:	b	a198 <readstat_parse_sas7bdat+0x274>
    a384:	mov	r7, #7
    a388:	b	a36c <readstat_parse_sas7bdat+0x448>
    a38c:	ldr	r0, [r5, #24]
    a390:	mov	r7, #15
    a394:	cmp	r0, #0
    a398:	beq	a118 <readstat_parse_sas7bdat+0x1f4>
    a39c:	ldrd	r0, [r6]
    a3a0:	stm	sp, {r0, r1}
    a3a4:	movw	r0, #481	; 0x1e1
    a3a8:	add	r4, r5, r0
    a3ac:	ldr	r2, [pc, #104]	; a41c <readstat_parse_sas7bdat+0x4f8>
    a3b0:	add	r2, pc, r2
    a3b4:	mov	r0, r4
    a3b8:	mov	r1, #2048	; 0x800
    a3bc:	bl	4d04 <snprintf@plt>
    a3c0:	ldr	r2, [r5, #24]
    a3c4:	ldr	r1, [r5, #52]	; 0x34
    a3c8:	mov	r0, r4
    a3cc:	b	a114 <readstat_parse_sas7bdat+0x1f0>
    a3d0:	ldr	r1, [r5, #24]
    a3d4:	mov	r7, #9
    a3d8:	cmp	r1, #0
    a3dc:	beq	a36c <readstat_parse_sas7bdat+0x448>
    a3e0:	str	r0, [sp]
    a3e4:	movw	r0, #481	; 0x1e1
    a3e8:	add	r4, r5, r0
    a3ec:	ldr	r2, [pc, #44]	; a420 <readstat_parse_sas7bdat+0x4fc>
    a3f0:	add	r2, pc, r2
    a3f4:	mov	r0, r4
    a3f8:	mov	r1, #2048	; 0x800
    a3fc:	bl	4d04 <snprintf@plt>
    a400:	ldr	r2, [r5, #24]
    a404:	ldr	r1, [r5, #52]	; 0x34
    a408:	mov	r0, r4
    a40c:	blx	r2
    a410:	b	a36c <readstat_parse_sas7bdat+0x448>
    a414:	.word	0x0001bb14
    a418:	.word	0x0001baec
    a41c:	.word	0x0001b707
    a420:	.word	0x0001b806
    a424:	.word	0x0001babf

0000a428 <sas7bdat_parse_meta_pages_pass1>:
    a428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a42c:	add	fp, sp, #28
    a430:	sub	sp, sp, #52	; 0x34
    a434:	mov	r9, r0
    a438:	mov	sl, r0
    a43c:	ldr	r0, [sl, #104]!	; 0x68
    a440:	ldr	r2, [sl, #4]
    a444:	orrs	r0, r0, r2
    a448:	str	r1, [sp, #32]
    a44c:	beq	a60c <sas7bdat_parse_meta_pages_pass1+0x1e4>
    a450:	ldr	r8, [sl, #-48]	; 0xffffffd0
    a454:	sub	r0, sl, #8
    a458:	str	r0, [sp, #36]	; 0x24
    a45c:	add	r6, sl, #8
    a460:	mov	r5, #0
    a464:	mov	r4, #0
    a468:	str	r6, [sp, #40]	; 0x28
    a46c:	b	a494 <sas7bdat_parse_meta_pages_pass1+0x6c>
    a470:	ldr	r5, [fp, #-32]	; 0xffffffe0
    a474:	adds	r5, r5, #1
    a478:	ldr	r4, [fp, #-36]	; 0xffffffdc
    a47c:	adc	r4, r4, #0
    a480:	ldrd	r0, [sl]
    a484:	subs	r0, r5, r0
    a488:	sbcs	r0, r4, r1
    a48c:	ldr	r6, [sp, #40]	; 0x28
    a490:	bcs	a6a8 <sas7bdat_parse_meta_pages_pass1+0x280>
    a494:	ldr	r0, [sp, #36]	; 0x24
    a498:	ldr	r0, [r0]
    a49c:	ldr	r1, [r6]
    a4a0:	mla	r0, r1, r5, r0
    a4a4:	ldr	r3, [r8, #8]
    a4a8:	ldr	r2, [r8, #20]
    a4ac:	mov	r1, #0
    a4b0:	blx	r3
    a4b4:	cmn	r0, #1
    a4b8:	beq	a62c <sas7bdat_parse_meta_pages_pass1+0x204>
    a4bc:	str	r4, [fp, #-36]	; 0xffffffdc
    a4c0:	str	r5, [fp, #-32]	; 0xffffffe0
    a4c4:	ldr	r1, [r9, #44]	; 0x2c
    a4c8:	ldr	r0, [r9, #120]	; 0x78
    a4cc:	cmp	r1, #0
    a4d0:	mov	r5, #32
    a4d4:	movweq	r5, #16
    a4d8:	orr	r7, r5, #2
    a4dc:	mov	r4, r9
    a4e0:	ldr	r6, [r6]
    a4e4:	ldr	r3, [r8, #12]
    a4e8:	ldr	r2, [r8, #20]
    a4ec:	mov	r1, r7
    a4f0:	blx	r3
    a4f4:	cmp	r0, r7
    a4f8:	bcc	a61c <sas7bdat_parse_meta_pages_pass1+0x1f4>
    a4fc:	ldr	r1, [r4, #60]	; 0x3c
    a500:	mov	r9, r4
    a504:	ldr	r0, [r4, #120]	; 0x78
    a508:	add	r0, r0, r5
    a50c:	bl	4e6c <sas_read2@plt>
    a510:	and	r1, r0, #3840	; 0xf00
    a514:	mov	r2, #0
    a518:	cmp	r1, #256	; 0x100
    a51c:	beq	a620 <sas7bdat_parse_meta_pages_pass1+0x1f8>
    a520:	tst	r0, #36864	; 0x9000
    a524:	bne	a470 <sas7bdat_parse_meta_pages_pass1+0x48>
    a528:	sub	r6, r6, r7
    a52c:	mov	r5, r9
    a530:	ldr	r0, [r9, #120]	; 0x78
    a534:	add	r0, r0, r7
    a538:	ldr	r3, [r8, #12]
    a53c:	ldr	r2, [r8, #20]
    a540:	mov	r1, r6
    a544:	blx	r3
    a548:	cmp	r0, r6
    a54c:	bcc	a61c <sas7bdat_parse_meta_pages_pass1+0x1f4>
    a550:	ldr	r0, [sp, #40]	; 0x28
    a554:	ldr	r1, [r0]
    a558:	ldr	r0, [r5, #120]	; 0x78
    a55c:	mov	r2, r5
    a560:	bl	ac90 <sas7bdat_parse_page_pass1>
    a564:	cmp	r0, #0
    a568:	mov	r2, #0
    a56c:	beq	a470 <sas7bdat_parse_meta_pages_pass1+0x48>
    a570:	mov	r7, r0
    a574:	cmp	r0, #4
    a578:	beq	a6c4 <sas7bdat_parse_meta_pages_pass1+0x29c>
    a57c:	ldr	r0, [r9, #24]
    a580:	cmp	r0, #0
    a584:	ldr	r5, [fp, #-32]	; 0xffffffe0
    a588:	beq	a6cc <sas7bdat_parse_meta_pages_pass1+0x2a4>
    a58c:	ldr	r3, [r8, #8]
    a590:	ldr	r2, [r8, #20]
    a594:	mov	r0, #0
    a598:	mov	r1, #1
    a59c:	blx	r3
    a5a0:	asr	r1, r0, #31
    a5a4:	subs	r2, r0, #1
    a5a8:	sbc	r1, r1, #0
    a5ac:	ldr	r3, [sp, #40]	; 0x28
    a5b0:	ldr	r6, [r3]
    a5b4:	ldr	r3, [r3, #4]
    a5b8:	subs	r6, r0, r6
    a5bc:	rsc	r0, r3, r0, asr #31
    a5c0:	str	r5, [sp]
    a5c4:	ldr	r4, [fp, #-36]	; 0xffffffdc
    a5c8:	stmib	sp, {r4, r6}
    a5cc:	str	r0, [sp, #12]
    a5d0:	str	r2, [sp, #16]
    a5d4:	str	r1, [sp, #20]
    a5d8:	movw	r0, #481	; 0x1e1
    a5dc:	add	r6, r9, r0
    a5e0:	ldr	r2, [pc, #244]	; a6dc <sas7bdat_parse_meta_pages_pass1+0x2b4>
    a5e4:	add	r2, pc, r2
    a5e8:	mov	r0, r6
    a5ec:	mov	r1, #2048	; 0x800
    a5f0:	bl	4d04 <snprintf@plt>
    a5f4:	ldr	r2, [r9, #24]
    a5f8:	ldr	r1, [r9, #52]	; 0x34
    a5fc:	mov	r0, r6
    a600:	blx	r2
    a604:	mov	r2, r7
    a608:	b	a6a8 <sas7bdat_parse_meta_pages_pass1+0x280>
    a60c:	mov	r5, #0
    a610:	mov	r4, #0
    a614:	mov	r2, #0
    a618:	b	a6a8 <sas7bdat_parse_meta_pages_pass1+0x280>
    a61c:	mov	r2, #2
    a620:	ldr	r5, [fp, #-32]	; 0xffffffe0
    a624:	ldr	r4, [fp, #-36]	; 0xffffffdc
    a628:	b	a6a8 <sas7bdat_parse_meta_pages_pass1+0x280>
    a62c:	ldr	r0, [r9, #24]
    a630:	mov	r2, #15
    a634:	cmp	r0, #0
    a638:	beq	a6a8 <sas7bdat_parse_meta_pages_pass1+0x280>
    a63c:	ldr	r0, [sp, #36]	; 0x24
    a640:	ldrd	r0, [r0]
    a644:	ldrd	r2, [r6]
    a648:	umull	r7, r6, r2, r5
    a64c:	adds	r7, r7, r0
    a650:	mla	r6, r2, r4, r6
    a654:	mla	r6, r3, r5, r6
    a658:	adc	r6, r6, r1
    a65c:	str	r7, [sp]
    a660:	str	r6, [sp, #4]
    a664:	add	ip, sp, #8
    a668:	stm	ip, {r0, r1, r5}
    a66c:	str	r4, [sp, #20]
    a670:	str	r2, [sp, #24]
    a674:	str	r3, [sp, #28]
    a678:	movw	r0, #481	; 0x1e1
    a67c:	add	r7, r9, r0
    a680:	ldr	r2, [pc, #80]	; a6d8 <sas7bdat_parse_meta_pages_pass1+0x2b0>
    a684:	add	r2, pc, r2
    a688:	mov	r0, r7
    a68c:	mov	r1, #2048	; 0x800
    a690:	bl	4d04 <snprintf@plt>
    a694:	ldr	r2, [r9, #24]
    a698:	ldr	r1, [r9, #52]	; 0x34
    a69c:	mov	r0, r7
    a6a0:	blx	r2
    a6a4:	mov	r2, #15
    a6a8:	ldr	r0, [sp, #32]
    a6ac:	cmp	r0, #0
    a6b0:	strne	r5, [r0]
    a6b4:	strne	r4, [r0, #4]
    a6b8:	mov	r0, r2
    a6bc:	sub	sp, fp, #28
    a6c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a6c4:	mov	r2, r7
    a6c8:	b	a620 <sas7bdat_parse_meta_pages_pass1+0x1f8>
    a6cc:	mov	r2, r7
    a6d0:	ldr	r4, [fp, #-36]	; 0xffffffdc
    a6d4:	b	a6a8 <sas7bdat_parse_meta_pages_pass1+0x280>
    a6d8:	.word	0x0001b5cb
    a6dc:	.word	0x0001b6aa

0000a6e0 <sas7bdat_parse_amd_pages_pass1>:
    a6e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a6e4:	add	fp, sp, #28
    a6e8:	sub	sp, sp, #60	; 0x3c
    a6ec:	mov	r8, r2
    a6f0:	ldrd	r2, [r2, #104]	; 0x68
    a6f4:	subs	r5, r2, #1
    a6f8:	sbc	r4, r3, #0
    a6fc:	mov	r2, #0
    a700:	str	r0, [sp, #40]	; 0x28
    a704:	subs	r0, r0, r5
    a708:	str	r1, [sp, #44]	; 0x2c
    a70c:	sbcs	r0, r1, r4
    a710:	bcs	a9bc <sas7bdat_parse_amd_pages_pass1+0x2dc>
    a714:	ldr	r6, [r8, #56]	; 0x38
    a718:	add	r0, r8, #96	; 0x60
    a71c:	str	r0, [sp, #36]	; 0x24
    a720:	add	sl, r8, #112	; 0x70
    a724:	mov	r0, #0
    a728:	str	r0, [fp, #-36]	; 0xffffffdc
    a72c:	mov	r0, #0
    a730:	str	r0, [fp, #-40]	; 0xffffffd8
    a734:	str	r8, [sp, #32]
    a738:	ldr	r0, [sp, #36]	; 0x24
    a73c:	ldr	r0, [r0]
    a740:	ldr	r1, [sl]
    a744:	mla	r0, r1, r5, r0
    a748:	ldr	r3, [r6, #8]
    a74c:	ldr	r2, [r6, #20]
    a750:	mov	r1, #0
    a754:	blx	r3
    a758:	cmn	r0, #1
    a75c:	beq	a8ac <sas7bdat_parse_amd_pages_pass1+0x1cc>
    a760:	str	r5, [fp, #-32]	; 0xffffffe0
    a764:	mov	r9, r4
    a768:	ldr	r1, [r8, #44]	; 0x2c
    a76c:	ldr	r0, [r8, #120]	; 0x78
    a770:	cmp	r1, #0
    a774:	mov	r4, #32
    a778:	movweq	r4, #16
    a77c:	mov	r1, r6
    a780:	orr	r6, r4, #2
    a784:	mov	r5, r8
    a788:	mov	r7, sl
    a78c:	ldr	sl, [sl]
    a790:	ldr	r3, [r1, #12]
    a794:	mov	r8, r1
    a798:	ldr	r2, [r1, #20]
    a79c:	mov	r1, r6
    a7a0:	blx	r3
    a7a4:	mov	r2, #2
    a7a8:	cmp	r0, r6
    a7ac:	bcc	a9bc <sas7bdat_parse_amd_pages_pass1+0x2dc>
    a7b0:	ldr	r1, [r5, #60]	; 0x3c
    a7b4:	ldr	r0, [r5, #120]	; 0x78
    a7b8:	add	r0, r0, r4
    a7bc:	bl	4e6c <sas_read2@plt>
    a7c0:	and	r1, r0, #3840	; 0xf00
    a7c4:	cmp	r1, #256	; 0x100
    a7c8:	bne	a7f0 <sas7bdat_parse_amd_pages_pass1+0x110>
    a7cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a7d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    a7d4:	orrs	r0, r0, r1
    a7d8:	bne	a8a4 <sas7bdat_parse_amd_pages_pass1+0x1c4>
    a7dc:	mov	r0, #0
    a7e0:	str	r0, [fp, #-36]	; 0xffffffdc
    a7e4:	mov	r0, #0
    a7e8:	str	r0, [fp, #-40]	; 0xffffffd8
    a7ec:	b	a7f8 <sas7bdat_parse_amd_pages_pass1+0x118>
    a7f0:	tst	r0, #36864	; 0x9000
    a7f4:	beq	a830 <sas7bdat_parse_amd_pages_pass1+0x150>
    a7f8:	ldr	r0, [sp, #32]
    a7fc:	mov	sl, r7
    a800:	mov	r4, r9
    a804:	mov	r6, r8
    a808:	mov	r8, r0
    a80c:	ldr	r5, [fp, #-32]	; 0xffffffe0
    a810:	subs	r5, r5, #1
    a814:	sbc	r4, r4, #0
    a818:	ldr	r0, [sp, #40]	; 0x28
    a81c:	subs	r0, r0, r5
    a820:	ldr	r0, [sp, #44]	; 0x2c
    a824:	sbcs	r0, r0, r4
    a828:	bcc	a738 <sas7bdat_parse_amd_pages_pass1+0x58>
    a82c:	b	a8a4 <sas7bdat_parse_amd_pages_pass1+0x1c4>
    a830:	sub	r4, sl, r6
    a834:	ldr	r1, [sp, #32]
    a838:	ldr	r0, [r1, #120]	; 0x78
    a83c:	add	r0, r0, r6
    a840:	mov	r6, r8
    a844:	mov	r8, r1
    a848:	ldr	r3, [r6, #12]
    a84c:	ldr	r2, [r6, #20]
    a850:	mov	r1, r4
    a854:	blx	r3
    a858:	cmp	r0, r4
    a85c:	mov	r2, #2
    a860:	ldr	r5, [fp, #-32]	; 0xffffffe0
    a864:	bcc	a9bc <sas7bdat_parse_amd_pages_pass1+0x2dc>
    a868:	mov	r4, r9
    a86c:	mov	sl, r7
    a870:	ldr	r1, [r7]
    a874:	ldr	r0, [r8, #120]	; 0x78
    a878:	mov	r2, r8
    a87c:	bl	ac90 <sas7bdat_parse_page_pass1>
    a880:	cmp	r0, #0
    a884:	bne	a92c <sas7bdat_parse_amd_pages_pass1+0x24c>
    a888:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a88c:	adds	r0, r0, #1
    a890:	str	r0, [fp, #-36]	; 0xffffffdc
    a894:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a898:	adc	r0, r0, #0
    a89c:	str	r0, [fp, #-40]	; 0xffffffd8
    a8a0:	b	a810 <sas7bdat_parse_amd_pages_pass1+0x130>
    a8a4:	mov	r2, #0
    a8a8:	b	a9bc <sas7bdat_parse_amd_pages_pass1+0x2dc>
    a8ac:	ldr	r0, [r8, #24]
    a8b0:	mov	r2, #15
    a8b4:	cmp	r0, #0
    a8b8:	beq	a9bc <sas7bdat_parse_amd_pages_pass1+0x2dc>
    a8bc:	ldr	r0, [sp, #36]	; 0x24
    a8c0:	ldrd	r0, [r0]
    a8c4:	ldrd	r2, [sl]
    a8c8:	mov	r7, r4
    a8cc:	umull	r6, r4, r2, r5
    a8d0:	adds	r6, r6, r0
    a8d4:	mla	r4, r2, r7, r4
    a8d8:	mla	r4, r3, r5, r4
    a8dc:	adc	r4, r4, r1
    a8e0:	str	r6, [sp]
    a8e4:	str	r4, [sp, #4]
    a8e8:	add	ip, sp, #8
    a8ec:	stm	ip, {r0, r1, r5, r7}
    a8f0:	str	r2, [sp, #24]
    a8f4:	str	r3, [sp, #28]
    a8f8:	movw	r0, #481	; 0x1e1
    a8fc:	add	r6, r8, r0
    a900:	ldr	r2, [pc, #192]	; a9c8 <sas7bdat_parse_amd_pages_pass1+0x2e8>
    a904:	add	r2, pc, r2
    a908:	mov	r0, r6
    a90c:	mov	r1, #2048	; 0x800
    a910:	bl	4d04 <snprintf@plt>
    a914:	ldr	r2, [r8, #24]
    a918:	ldr	r1, [r8, #52]	; 0x34
    a91c:	mov	r0, r6
    a920:	blx	r2
    a924:	mov	r2, #15
    a928:	b	a9bc <sas7bdat_parse_amd_pages_pass1+0x2dc>
    a92c:	mov	r2, r0
    a930:	cmp	r0, #4
    a934:	ldrne	r0, [r8, #24]
    a938:	cmpne	r0, #0
    a93c:	beq	a9bc <sas7bdat_parse_amd_pages_pass1+0x2dc>
    a940:	ldr	r3, [r6, #8]
    a944:	mov	r9, r2
    a948:	ldr	r2, [r6, #20]
    a94c:	mov	r0, #0
    a950:	mov	r1, #1
    a954:	blx	r3
    a958:	asr	r1, r0, #31
    a95c:	subs	r2, r0, #1
    a960:	sbc	r1, r1, #0
    a964:	mov	r7, r4
    a968:	ldr	r4, [sl]
    a96c:	ldr	r3, [sl, #4]
    a970:	subs	r6, r0, r4
    a974:	rsc	r0, r3, r0, asr #31
    a978:	stm	sp, {r5, r7}
    a97c:	str	r6, [sp, #8]
    a980:	str	r0, [sp, #12]
    a984:	str	r2, [sp, #16]
    a988:	str	r1, [sp, #20]
    a98c:	movw	r0, #481	; 0x1e1
    a990:	add	r6, r8, r0
    a994:	ldr	r2, [pc, #48]	; a9cc <sas7bdat_parse_amd_pages_pass1+0x2ec>
    a998:	add	r2, pc, r2
    a99c:	mov	r0, r6
    a9a0:	mov	r1, #2048	; 0x800
    a9a4:	bl	4d04 <snprintf@plt>
    a9a8:	ldr	r2, [r8, #24]
    a9ac:	ldr	r1, [r8, #52]	; 0x34
    a9b0:	mov	r0, r6
    a9b4:	blx	r2
    a9b8:	mov	r2, r9
    a9bc:	mov	r0, r2
    a9c0:	sub	sp, fp, #28
    a9c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a9c8:	.word	0x0001b34b
    a9cc:	.word	0x0001b2f6

0000a9d0 <sas7bdat_parse_all_pages_pass2>:
    a9d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a9d4:	add	fp, sp, #28
    a9d8:	sub	sp, sp, #28
    a9dc:	mov	r4, r0
    a9e0:	mov	sl, r0
    a9e4:	ldr	r0, [sl, #104]!	; 0x68
    a9e8:	ldr	r1, [sl, #4]
    a9ec:	orrs	r0, r0, r1
    a9f0:	beq	aa80 <sas7bdat_parse_all_pages_pass2+0xb0>
    a9f4:	ldr	r9, [sl, #-48]	; 0xffffffd0
    a9f8:	add	r8, sl, #8
    a9fc:	mov	r6, #0
    aa00:	mov	r7, #0
    aa04:	mov	r0, r4
    aa08:	bl	ab60 <sas7bdat_update_progress>
    aa0c:	cmp	r0, #0
    aa10:	bne	aa88 <sas7bdat_parse_all_pages_pass2+0xb8>
    aa14:	ldr	r1, [r8]
    aa18:	ldr	r0, [r4, #120]	; 0x78
    aa1c:	ldr	r3, [r9, #12]
    aa20:	ldr	r2, [r9, #20]
    aa24:	blx	r3
    aa28:	ldrd	r2, [r8]
    aa2c:	subs	r1, r0, r2
    aa30:	rscs	r0, r3, r0, asr #31
    aa34:	bcc	aa90 <sas7bdat_parse_all_pages_pass2+0xc0>
    aa38:	ldr	r0, [r4, #120]	; 0x78
    aa3c:	mov	r1, r2
    aa40:	mov	r2, r4
    aa44:	bl	b77c <sas7bdat_parse_page_pass2>
    aa48:	cmp	r0, #0
    aa4c:	bne	aa98 <sas7bdat_parse_all_pages_pass2+0xc8>
    aa50:	ldr	r0, [r4, #76]	; 0x4c
    aa54:	ldr	r1, [r4, #84]	; 0x54
    aa58:	mov	r5, #0
    aa5c:	cmp	r0, r1
    aa60:	beq	ab18 <sas7bdat_parse_all_pages_pass2+0x148>
    aa64:	adds	r6, r6, #1
    aa68:	adc	r7, r7, #0
    aa6c:	ldrd	r0, [sl]
    aa70:	subs	r0, r6, r0
    aa74:	sbcs	r0, r7, r1
    aa78:	bcc	aa04 <sas7bdat_parse_all_pages_pass2+0x34>
    aa7c:	b	ab18 <sas7bdat_parse_all_pages_pass2+0x148>
    aa80:	mov	r5, #0
    aa84:	b	ab18 <sas7bdat_parse_all_pages_pass2+0x148>
    aa88:	mov	r5, r0
    aa8c:	b	ab18 <sas7bdat_parse_all_pages_pass2+0x148>
    aa90:	mov	r5, #2
    aa94:	b	ab18 <sas7bdat_parse_all_pages_pass2+0x148>
    aa98:	mov	r5, r0
    aa9c:	cmp	r0, #4
    aaa0:	ldrne	r0, [r4, #24]
    aaa4:	cmpne	r0, #0
    aaa8:	beq	ab18 <sas7bdat_parse_all_pages_pass2+0x148>
    aaac:	ldr	r3, [r9, #8]
    aab0:	ldr	r2, [r9, #20]
    aab4:	mov	r0, #0
    aab8:	mov	r1, #1
    aabc:	blx	r3
    aac0:	asr	r1, r0, #31
    aac4:	subs	r2, r0, #1
    aac8:	sbc	r1, r1, #0
    aacc:	ldrd	r8, [r8]
    aad0:	subs	r3, r0, r8
    aad4:	rsc	r0, r9, r0, asr #31
    aad8:	stm	sp, {r6, r7}
    aadc:	str	r3, [sp, #8]
    aae0:	str	r0, [sp, #12]
    aae4:	str	r2, [sp, #16]
    aae8:	str	r1, [sp, #20]
    aaec:	movw	r0, #481	; 0x1e1
    aaf0:	add	r6, r4, r0
    aaf4:	ldr	r2, [pc, #40]	; ab24 <sas7bdat_parse_all_pages_pass2+0x154>
    aaf8:	add	r2, pc, r2
    aafc:	mov	r0, r6
    ab00:	mov	r1, #2048	; 0x800
    ab04:	bl	4d04 <snprintf@plt>
    ab08:	ldr	r2, [r4, #24]
    ab0c:	ldr	r1, [r4, #52]	; 0x34
    ab10:	mov	r0, r6
    ab14:	blx	r2
    ab18:	mov	r0, r5
    ab1c:	sub	sp, fp, #28
    ab20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ab24:	.word	0x0001b196

0000ab28 <sas7bdat_submit_columns_if_needed>:
    ab28:	push	{r4, sl, fp, lr}
    ab2c:	add	fp, sp, #8
    ab30:	mov	r4, r0
    ab34:	ldr	r2, [r0, #64]	; 0x40
    ab38:	mov	r0, #0
    ab3c:	cmp	r2, #0
    ab40:	popne	{r4, sl, fp, pc}
    ab44:	mov	r0, r4
    ab48:	bl	c1f8 <sas7bdat_submit_columns>
    ab4c:	cmp	r0, #0
    ab50:	moveq	r0, #1
    ab54:	streq	r0, [r4, #64]	; 0x40
    ab58:	moveq	r0, #0
    ab5c:	pop	{r4, sl, fp, pc}

0000ab60 <sas7bdat_update_progress>:
    ab60:	push	{fp, lr}
    ab64:	mov	fp, sp
    ab68:	ldr	r1, [r0, #28]
    ab6c:	ldr	ip, [r0, #32]
    ab70:	ldr	r2, [r0, #52]	; 0x34
    ab74:	ldr	r0, [r0, #56]	; 0x38
    ab78:	ldr	lr, [r0, #16]
    ab7c:	ldr	r3, [r0, #20]
    ab80:	mov	r0, ip
    ab84:	mov	ip, lr
    ab88:	pop	{fp, lr}
    ab8c:	bx	ip

0000ab90 <sas7bdat_ctx_free>:
    ab90:	push	{r4, r5, fp, lr}
    ab94:	add	fp, sp, #8
    ab98:	mov	r4, r0
    ab9c:	ldr	r0, [r0, #160]	; 0xa0
    aba0:	cmp	r0, #0
    aba4:	beq	abe4 <sas7bdat_ctx_free+0x54>
    aba8:	ldr	r1, [r4, #152]	; 0x98
    abac:	ldr	r0, [r4, #160]	; 0xa0
    abb0:	cmp	r1, #1
    abb4:	blt	abd8 <sas7bdat_ctx_free+0x48>
    abb8:	mov	r5, #0
    abbc:	ldr	r0, [r0, r5, lsl #2]
    abc0:	bl	4938 <free@plt>
    abc4:	add	r5, r5, #1
    abc8:	ldr	r1, [r4, #152]	; 0x98
    abcc:	ldr	r0, [r4, #160]	; 0xa0
    abd0:	cmp	r5, r1
    abd4:	blt	abbc <sas7bdat_ctx_free+0x2c>
    abd8:	bl	4938 <free@plt>
    abdc:	ldr	r0, [r4, #156]	; 0x9c
    abe0:	bl	4938 <free@plt>
    abe4:	ldr	r0, [r4, #196]	; 0xc4
    abe8:	cmp	r0, #0
    abec:	beq	ac34 <sas7bdat_ctx_free+0xa4>
    abf0:	ldr	r1, [r4, #80]	; 0x50
    abf4:	ldr	r0, [r4, #196]	; 0xc4
    abf8:	cmp	r1, #0
    abfc:	beq	ac30 <sas7bdat_ctx_free+0xa0>
    ac00:	mov	r5, #0
    ac04:	b	ac1c <sas7bdat_ctx_free+0x8c>
    ac08:	add	r5, r5, #1
    ac0c:	ldr	r1, [r4, #80]	; 0x50
    ac10:	ldr	r0, [r4, #196]	; 0xc4
    ac14:	cmp	r5, r1
    ac18:	bcs	ac30 <sas7bdat_ctx_free+0xa0>
    ac1c:	ldr	r0, [r0, r5, lsl #2]
    ac20:	cmp	r0, #0
    ac24:	beq	ac08 <sas7bdat_ctx_free+0x78>
    ac28:	bl	4938 <free@plt>
    ac2c:	b	ac08 <sas7bdat_ctx_free+0x78>
    ac30:	bl	4938 <free@plt>
    ac34:	ldr	r0, [r4, #192]	; 0xc0
    ac38:	cmp	r0, #0
    ac3c:	beq	ac44 <sas7bdat_ctx_free+0xb4>
    ac40:	bl	4938 <free@plt>
    ac44:	ldr	r0, [r4, #180]	; 0xb4
    ac48:	cmp	r0, #0
    ac4c:	beq	ac54 <sas7bdat_ctx_free+0xc4>
    ac50:	bl	4938 <free@plt>
    ac54:	ldr	r0, [r4, #120]	; 0x78
    ac58:	cmp	r0, #0
    ac5c:	beq	ac64 <sas7bdat_ctx_free+0xd4>
    ac60:	bl	4938 <free@plt>
    ac64:	ldr	r0, [r4, #124]	; 0x7c
    ac68:	cmp	r0, #0
    ac6c:	beq	ac74 <sas7bdat_ctx_free+0xe4>
    ac70:	bl	4938 <free@plt>
    ac74:	ldr	r0, [r4, #208]	; 0xd0
    ac78:	cmp	r0, #0
    ac7c:	beq	ac84 <sas7bdat_ctx_free+0xf4>
    ac80:	bl	4848 <iconv_close@plt>
    ac84:	mov	r0, r4
    ac88:	pop	{r4, r5, fp, lr}
    ac8c:	b	4938 <free@plt>

0000ac90 <sas7bdat_parse_page_pass1>:
    ac90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ac94:	add	fp, sp, #28
    ac98:	sub	sp, sp, #4
    ac9c:	vpush	{d8-d9}
    aca0:	sub	sp, sp, #56	; 0x38
    aca4:	mov	r9, r2
    aca8:	mov	r4, r1
    acac:	mov	r6, r0
    acb0:	ldr	r1, [r2, #60]	; 0x3c
    acb4:	ldr	r0, [r2, #128]	; 0x80
    acb8:	add	r0, r0, r6
    acbc:	sub	r0, r0, #4
    acc0:	bl	4e6c <sas_read2@plt>
    acc4:	mov	r7, r0
    acc8:	ldrd	r2, [r9, #128]	; 0x80
    accc:	ldr	sl, [r9, #144]	; 0x90
    acd0:	mul	r0, sl, r0
    acd4:	adds	r1, r2, r0
    acd8:	adc	r3, r3, r0, asr #31
    acdc:	mov	r0, #5
    ace0:	str	r4, [sp, #16]
    ace4:	subs	r1, r4, r1
    ace8:	rscs	r1, r3, #0
    acec:	bcc	ae48 <sas7bdat_parse_page_pass1+0x1b8>
    acf0:	cmp	r7, #0
    acf4:	beq	ae44 <sas7bdat_parse_page_pass1+0x1b4>
    acf8:	add	r0, r9, #136	; 0x88
    acfc:	str	r0, [sp, #28]
    ad00:	ldr	r0, [sp, #16]
    ad04:	add	r0, r6, r0
    ad08:	str	r0, [sp, #24]
    ad0c:	add	r5, r6, r2
    ad10:	str	r6, [sp, #8]
    ad14:	add	r0, r6, #4
    ad18:	str	r0, [sp]
    ad1c:	add	r0, sp, #32
    ad20:	add	r0, r0, #8
    ad24:	str	r0, [sp, #20]
    ad28:	vmov.i32	q4, #0	; 0x00000000
    ad2c:	str	r7, [sp, #12]
    ad30:	b	ad40 <sas7bdat_parse_page_pass1+0xb0>
    ad34:	add	r5, r5, sl
    ad38:	subs	r7, r7, #1
    ad3c:	beq	ae44 <sas7bdat_parse_page_pass1+0x1b4>
    ad40:	add	r2, sp, #32
    ad44:	mov	r0, r2
    ad48:	mov	r1, #20
    ad4c:	vst1.64	{d8-d9}, [r0], r1
    ad50:	mov	r1, #0
    ad54:	str	r1, [r0]
    ad58:	str	r1, [sp, #48]	; 0x30
    ad5c:	ldr	r0, [sp, #24]
    ad60:	sub	r1, r0, r5
    ad64:	ldr	r0, [sp, #28]
    ad68:	ldr	r8, [r0]
    ad6c:	mov	r0, r5
    ad70:	mov	r3, r9
    ad74:	bl	ae60 <sas7bdat_parse_subheader_pointer>
    ad78:	cmp	r0, #0
    ad7c:	bne	ae48 <sas7bdat_parse_page_pass1+0x1b8>
    ad80:	ldr	r0, [sp, #20]
    ad84:	ldr	r4, [r0]
    ad88:	ldr	r1, [r0, #4]
    ad8c:	orrs	r0, r4, r1
    ad90:	beq	ad34 <sas7bdat_parse_page_pass1+0xa4>
    ad94:	ldrb	r6, [sp, #48]	; 0x30
    ad98:	cmp	r6, #1
    ad9c:	beq	ad34 <sas7bdat_parse_page_pass1+0xa4>
    ada0:	add	r0, sp, #32
    ada4:	ldr	r1, [sp, #16]
    ada8:	ldr	r2, [sp, #12]
    adac:	mov	r3, r9
    adb0:	bl	af10 <sas7bdat_validate_subheader_pointer>
    adb4:	cmp	r0, #0
    adb8:	bne	ae48 <sas7bdat_parse_page_pass1+0x1b8>
    adbc:	cmp	r6, #4
    adc0:	beq	ad34 <sas7bdat_parse_page_pass1+0xa4>
    adc4:	cmp	r6, #0
    adc8:	bne	ae58 <sas7bdat_parse_page_pass1+0x1c8>
    adcc:	ldr	r1, [sp, #32]
    add0:	ldr	r0, [sp, #8]
    add4:	str	r1, [sp, #4]
    add8:	add	r6, r0, r1
    addc:	ldr	r1, [r9, #60]	; 0x3c
    ade0:	mov	r0, r6
    ade4:	bl	4e90 <sas_read4@plt>
    ade8:	cmp	r8, #8
    adec:	bne	ae00 <sas7bdat_parse_page_pass1+0x170>
    adf0:	cmn	r0, #1
    adf4:	ldreq	r1, [r9, #40]	; 0x28
    adf8:	cmpeq	r1, #0
    adfc:	beq	ae0c <sas7bdat_parse_page_pass1+0x17c>
    ae00:	cmn	r0, #3
    ae04:	bne	ad34 <sas7bdat_parse_page_pass1+0xa4>
    ae08:	b	ae24 <sas7bdat_parse_page_pass1+0x194>
    ae0c:	ldm	sp, {r0, r1}
    ae10:	add	r0, r0, r1
    ae14:	ldr	r1, [r9, #60]	; 0x3c
    ae18:	bl	4e90 <sas_read4@plt>
    ae1c:	cmn	r0, #3
    ae20:	bne	ad34 <sas7bdat_parse_page_pass1+0xa4>
    ae24:	mvn	r0, #2
    ae28:	mov	r1, r6
    ae2c:	mov	r2, r4
    ae30:	mov	r3, r9
    ae34:	bl	afc0 <sas7bdat_parse_subheader>
    ae38:	cmp	r0, #0
    ae3c:	beq	ad34 <sas7bdat_parse_page_pass1+0xa4>
    ae40:	b	ae48 <sas7bdat_parse_page_pass1+0x1b8>
    ae44:	mov	r0, #0
    ae48:	sub	sp, fp, #48	; 0x30
    ae4c:	vpop	{d8-d9}
    ae50:	add	sp, sp, #4
    ae54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ae58:	mov	r0, #6
    ae5c:	b	ae48 <sas7bdat_parse_page_pass1+0x1b8>

0000ae60 <sas7bdat_parse_subheader_pointer>:
    ae60:	push	{r4, r5, r6, r7, fp, lr}
    ae64:	add	fp, sp, #16
    ae68:	mov	r6, r3
    ae6c:	mov	r4, r2
    ae70:	mov	r5, r0
    ae74:	ldr	r0, [r3, #44]	; 0x2c
    ae78:	mov	r7, #5
    ae7c:	cmp	r0, #0
    ae80:	beq	aec8 <sas7bdat_parse_subheader_pointer+0x68>
    ae84:	cmp	r1, #18
    ae88:	bcc	af08 <sas7bdat_parse_subheader_pointer+0xa8>
    ae8c:	ldr	r1, [r6, #60]	; 0x3c
    ae90:	mov	r0, r5
    ae94:	bl	4e60 <sas_read8@plt>
    ae98:	strd	r0, [r4]
    ae9c:	ldr	r1, [r6, #60]	; 0x3c
    aea0:	add	r0, r5, #8
    aea4:	bl	4e60 <sas_read8@plt>
    aea8:	strd	r0, [r4, #8]
    aeac:	ldrb	r0, [r5, #16]
    aeb0:	strb	r0, [r4, #16]
    aeb4:	ldrb	r0, [r5, #17]
    aeb8:	strb	r0, [r4, #17]
    aebc:	mov	r7, #0
    aec0:	mov	r0, r7
    aec4:	pop	{r4, r5, r6, r7, fp, pc}
    aec8:	cmp	r1, #10
    aecc:	bcc	af08 <sas7bdat_parse_subheader_pointer+0xa8>
    aed0:	ldr	r1, [r6, #60]	; 0x3c
    aed4:	mov	r0, r5
    aed8:	bl	4e90 <sas_read4@plt>
    aedc:	mov	r7, #0
    aee0:	stm	r4, {r0, r7}
    aee4:	ldr	r1, [r6, #60]	; 0x3c
    aee8:	add	r0, r5, #4
    aeec:	bl	4e90 <sas_read4@plt>
    aef0:	mov	r6, r0
    aef4:	strd	r6, [r4, #8]
    aef8:	ldrb	r0, [r5, #8]
    aefc:	strb	r0, [r4, #16]
    af00:	ldrb	r0, [r5, #9]
    af04:	strb	r0, [r4, #17]
    af08:	mov	r0, r7
    af0c:	pop	{r4, r5, r6, r7, fp, pc}

0000af10 <sas7bdat_validate_subheader_pointer>:
    af10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    af14:	add	fp, sp, #28
    af18:	mov	ip, r0
    af1c:	ldrd	r4, [r0]
    af20:	mov	r0, #5
    af24:	subs	r7, r1, r4
    af28:	rscs	r7, r5, #0
    af2c:	bcc	afbc <sas7bdat_validate_subheader_pointer+0xac>
    af30:	ldrd	r8, [ip, #8]
    af34:	adds	r7, r8, r4
    af38:	adc	lr, r9, r5
    af3c:	subs	r6, r1, r8
    af40:	rscs	r6, r9, #0
    af44:	bcc	afbc <sas7bdat_validate_subheader_pointer+0xac>
    af48:	subs	r6, r1, r7
    af4c:	rscs	r7, lr, #0
    af50:	bcc	afbc <sas7bdat_validate_subheader_pointer+0xac>
    af54:	add	lr, r3, #128	; 0x80
    af58:	add	r6, r3, #144	; 0x90
    af5c:	ldrd	r6, [r6]
    af60:	umull	sl, r6, r6, r2
    af64:	mla	r2, r7, r2, r6
    af68:	ldrd	r6, [lr]
    af6c:	adds	r6, sl, r6
    af70:	adc	r2, r2, r7
    af74:	subs	r7, r4, r6
    af78:	sbcs	r2, r5, r2
    af7c:	bcc	afbc <sas7bdat_validate_subheader_pointer+0xac>
    af80:	ldrb	r2, [ip, #16]
    af84:	cmp	r2, #0
    af88:	beq	af94 <sas7bdat_validate_subheader_pointer+0x84>
    af8c:	mov	r0, #0
    af90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    af94:	add	r2, r3, #136	; 0x88
    af98:	ldrd	r6, [r2]
    af9c:	adds	r2, r6, r4
    afa0:	adc	r3, r7, r5
    afa4:	subs	r6, r8, r6
    afa8:	sbcs	r7, r9, r7
    afac:	bcc	afbc <sas7bdat_validate_subheader_pointer+0xac>
    afb0:	subs	r1, r1, r2
    afb4:	rscs	r1, r3, #0
    afb8:	movcs	r0, #0
    afbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000afc0 <sas7bdat_parse_subheader>:
    afc0:	push	{r4, r5, fp, lr}
    afc4:	add	fp, sp, #8
    afc8:	ldrd	r4, [r3, #136]	; 0x88
    afcc:	adds	r4, r4, #2
    afd0:	adc	r5, r5, #0
    afd4:	mov	ip, #5
    afd8:	subs	r4, r2, r4
    afdc:	rscs	r5, r5, #0
    afe0:	bcs	afec <sas7bdat_parse_subheader+0x2c>
    afe4:	mov	r0, ip
    afe8:	pop	{r4, r5, fp, pc}
    afec:	cmn	r0, #1024	; 0x400
    aff0:	bge	b038 <sas7bdat_parse_subheader+0x78>
    aff4:	movw	r5, #63222	; 0xf6f6
    aff8:	movt	r5, #63222	; 0xf6f6
    affc:	cmp	r0, r5
    b000:	beq	b078 <sas7bdat_parse_subheader+0xb8>
    b004:	movw	r5, #63479	; 0xf7f7
    b008:	movt	r5, #63479	; 0xf7f7
    b00c:	cmp	r0, r5
    b010:	beq	b08c <sas7bdat_parse_subheader+0xcc>
    b014:	movw	r5, #64510	; 0xfbfe
    b018:	movt	r5, #65535	; 0xffff
    b01c:	cmp	r0, r5
    b020:	bne	b0a8 <sas7bdat_parse_subheader+0xe8>
    b024:	mov	r0, r1
    b028:	mov	r1, r2
    b02c:	mov	r2, r3
    b030:	pop	{r4, r5, fp, lr}
    b034:	b	b5e0 <sas7bdat_parse_column_format_subheader>
    b038:	mov	ip, #0
    b03c:	add	lr, r0, #4
    b040:	cmp	lr, #3
    b044:	bhi	b0a0 <sas7bdat_parse_subheader+0xe0>
    b048:	add	r0, pc, #4
    b04c:	ldr	r5, [r0, lr, lsl #2]
    b050:	add	pc, r0, r5
    b054:	.word	0x00000010
    b058:	.word	0x00000068
    b05c:	.word	0xffffff90
    b060:	.word	0x0000007c
    b064:	mov	r0, r1
    b068:	mov	r1, r2
    b06c:	mov	r2, r3
    b070:	pop	{r4, r5, fp, lr}
    b074:	b	b478 <sas7bdat_parse_column_attributes_subheader>
    b078:	mov	r0, r1
    b07c:	mov	r1, r2
    b080:	mov	r2, r3
    b084:	pop	{r4, r5, fp, lr}
    b088:	b	b1fc <sas7bdat_parse_column_size_subheader>
    b08c:	mov	r0, r1
    b090:	mov	r1, r2
    b094:	mov	r2, r3
    b098:	pop	{r4, r5, fp, lr}
    b09c:	b	b0e4 <sas7bdat_parse_row_size_subheader>
    b0a0:	cmn	r0, #1024	; 0x400
    b0a4:	beq	afe4 <sas7bdat_parse_subheader+0x24>
    b0a8:	mov	r1, #5
    b0ac:	cmn	r0, #9
    b0b0:	movwhi	r1, #0
    b0b4:	mov	r0, r1
    b0b8:	pop	{r4, r5, fp, pc}
    b0bc:	mov	r0, r1
    b0c0:	mov	r1, r2
    b0c4:	mov	r2, r3
    b0c8:	pop	{r4, r5, fp, lr}
    b0cc:	b	b278 <sas7bdat_parse_column_text_subheader>
    b0d0:	mov	r0, r1
    b0d4:	mov	r1, r2
    b0d8:	mov	r2, r3
    b0dc:	pop	{r4, r5, fp, lr}
    b0e0:	b	b388 <sas7bdat_parse_column_name_subheader>

0000b0e4 <sas7bdat_parse_row_size_subheader>:
    b0e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    b0e8:	add	fp, sp, #24
    b0ec:	mov	r4, r2
    b0f0:	mov	r7, r0
    b0f4:	ldr	r2, [r2, #44]	; 0x2c
    b0f8:	mov	r3, #64	; 0x40
    b0fc:	cmp	r2, #0
    b100:	movwne	r3, #128	; 0x80
    b104:	mov	r0, #5
    b108:	cmp	r3, r1
    b10c:	bhi	b1f0 <sas7bdat_parse_row_size_subheader+0x10c>
    b110:	cmp	r2, #0
    b114:	beq	b150 <sas7bdat_parse_row_size_subheader+0x6c>
    b118:	ldr	r1, [r4, #60]	; 0x3c
    b11c:	add	r0, r7, #40	; 0x28
    b120:	bl	4e60 <sas_read8@plt>
    b124:	mov	r6, r0
    b128:	ldr	r1, [r4, #60]	; 0x3c
    b12c:	add	r0, r7, #48	; 0x30
    b130:	bl	4e60 <sas_read8@plt>
    b134:	mov	r5, r0
    b138:	mov	r8, r1
    b13c:	ldr	r1, [r4, #60]	; 0x3c
    b140:	add	r0, r7, #120	; 0x78
    b144:	bl	4e60 <sas_read8@plt>
    b148:	mov	r7, r0
    b14c:	b	b184 <sas7bdat_parse_row_size_subheader+0xa0>
    b150:	ldr	r1, [r4, #60]	; 0x3c
    b154:	add	r0, r7, #20
    b158:	bl	4e90 <sas_read4@plt>
    b15c:	mov	r6, r0
    b160:	ldr	r1, [r4, #60]	; 0x3c
    b164:	add	r0, r7, #24
    b168:	bl	4e90 <sas_read4@plt>
    b16c:	mov	r5, r0
    b170:	ldr	r1, [r4, #60]	; 0x3c
    b174:	add	r0, r7, #60	; 0x3c
    b178:	bl	4e90 <sas_read4@plt>
    b17c:	mov	r7, r0
    b180:	mov	r8, #0
    b184:	str	r6, [r4, #68]	; 0x44
    b188:	ldr	r0, [r4, #124]	; 0x7c
    b18c:	mov	r1, r6
    b190:	bl	4d70 <readstat_realloc@plt>
    b194:	str	r0, [r4, #124]	; 0x7c
    b198:	cmp	r0, #0
    b19c:	beq	b1c0 <sas7bdat_parse_row_size_subheader+0xdc>
    b1a0:	str	r7, [r4, #72]	; 0x48
    b1a4:	ldr	r0, [r4, #88]	; 0x58
    b1a8:	subs	r1, r0, r5
    b1ac:	rscs	r1, r8, #0
    b1b0:	bcs	b1c8 <sas7bdat_parse_row_size_subheader+0xe4>
    b1b4:	subs	r1, r5, r0
    b1b8:	sbc	r2, r8, #0
    b1bc:	b	b1d4 <sas7bdat_parse_row_size_subheader+0xf0>
    b1c0:	mov	r0, #3
    b1c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    b1c8:	str	r5, [r4, #88]	; 0x58
    b1cc:	mov	r1, #0
    b1d0:	mov	r2, #0
    b1d4:	ldr	r3, [r4, #84]	; 0x54
    b1d8:	mov	r0, #0
    b1dc:	cmp	r3, #0
    b1e0:	beq	b1f4 <sas7bdat_parse_row_size_subheader+0x110>
    b1e4:	subs	r3, r1, r3
    b1e8:	sbcs	r2, r2, #0
    b1ec:	strcc	r1, [r4, #84]	; 0x54
    b1f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    b1f4:	str	r1, [r4, #84]	; 0x54
    b1f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000b1fc <sas7bdat_parse_column_size_subheader>:
    b1fc:	push	{r4, sl, fp, lr}
    b200:	add	fp, sp, #8
    b204:	mov	r4, r2
    b208:	ldr	r2, [r2, #80]	; 0x50
    b20c:	cmp	r2, #0
    b210:	bne	b238 <sas7bdat_parse_column_size_subheader+0x3c>
    b214:	ldr	r2, [r4, #64]	; 0x40
    b218:	cmp	r2, #0
    b21c:	bne	b238 <sas7bdat_parse_column_size_subheader+0x3c>
    b220:	ldr	r2, [r4, #44]	; 0x2c
    b224:	mov	r3, #8
    b228:	cmp	r2, #0
    b22c:	movwne	r3, #16
    b230:	cmp	r3, r1
    b234:	bls	b240 <sas7bdat_parse_column_size_subheader+0x44>
    b238:	mov	r0, #5
    b23c:	pop	{r4, sl, fp, pc}
    b240:	cmp	r2, #0
    b244:	beq	b258 <sas7bdat_parse_column_size_subheader+0x5c>
    b248:	ldr	r1, [r4, #60]	; 0x3c
    b24c:	add	r0, r0, #8
    b250:	bl	4e60 <sas_read8@plt>
    b254:	b	b264 <sas7bdat_parse_column_size_subheader+0x68>
    b258:	ldr	r1, [r4, #60]	; 0x3c
    b25c:	add	r0, r0, #4
    b260:	bl	4e90 <sas_read4@plt>
    b264:	mov	r1, r0
    b268:	str	r0, [r4, #80]	; 0x50
    b26c:	mov	r0, r4
    b270:	pop	{r4, sl, fp, lr}
    b274:	b	b6c0 <sas7bdat_realloc_col_info>

0000b278 <sas7bdat_parse_column_text_subheader>:
    b278:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b27c:	add	fp, sp, #24
    b280:	mov	r4, r2
    b284:	mov	r9, r1
    b288:	ldr	r1, [r2, #60]	; 0x3c
    b28c:	ldr	r5, [r2, #136]	; 0x88
    b290:	add	r8, r0, r5
    b294:	mov	r0, r8
    b298:	bl	4e6c <sas_read2@plt>
    b29c:	mov	r7, r0
    b2a0:	mov	r0, r9
    b2a4:	mov	r1, r5
    b2a8:	bl	4e54 <sas_subheader_remainder@plt>
    b2ac:	mov	r6, #5
    b2b0:	cmp	r0, r7
    b2b4:	bne	b300 <sas7bdat_parse_column_text_subheader+0x88>
    b2b8:	ldr	r1, [r4, #152]	; 0x98
    b2bc:	ldr	r0, [r4, #160]	; 0xa0
    b2c0:	add	r1, r1, #1
    b2c4:	str	r1, [r4, #152]	; 0x98
    b2c8:	lsl	r1, r1, #2
    b2cc:	bl	4d70 <readstat_realloc@plt>
    b2d0:	str	r0, [r4, #160]	; 0xa0
    b2d4:	ldr	r0, [r4, #152]	; 0x98
    b2d8:	ldr	r3, [r4, #156]	; 0x9c
    b2dc:	lsl	r1, r0, #2
    b2e0:	mov	r0, r3
    b2e4:	bl	4d70 <readstat_realloc@plt>
    b2e8:	str	r0, [r4, #156]	; 0x9c
    b2ec:	mov	r6, #3
    b2f0:	cmp	r0, #0
    b2f4:	ldrne	r0, [r4, #160]	; 0xa0
    b2f8:	cmpne	r0, #0
    b2fc:	bne	b308 <sas7bdat_parse_column_text_subheader+0x90>
    b300:	mov	r0, r6
    b304:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    b308:	sub	r5, r9, r5
    b30c:	mov	r0, r5
    b310:	bl	4cb0 <readstat_malloc@plt>
    b314:	cmp	r0, #0
    b318:	beq	b300 <sas7bdat_parse_column_text_subheader+0x88>
    b31c:	mov	r7, r0
    b320:	mov	r1, r8
    b324:	mov	r2, r5
    b328:	bl	4998 <memcpy@plt>
    b32c:	ldrd	r0, [r4, #152]	; 0x98
    b330:	add	r0, r1, r0, lsl #2
    b334:	str	r5, [r0, #-4]
    b338:	ldr	r0, [r4, #152]	; 0x98
    b33c:	ldr	r1, [r4, #160]	; 0xa0
    b340:	add	r0, r1, r0, lsl #2
    b344:	str	r7, [r0, #-4]
    b348:	mov	r6, #0
    b34c:	cmp	r5, #21
    b350:	bcc	b300 <sas7bdat_parse_column_text_subheader+0x88>
    b354:	add	r0, r7, #12
    b358:	ldr	r1, [pc, #36]	; b384 <sas7bdat_parse_column_text_subheader+0x10c>
    b35c:	add	r1, pc, r1
    b360:	mov	r2, #8
    b364:	bl	4f98 <strncmp@plt>
    b368:	cmp	r0, #0
    b36c:	bne	b300 <sas7bdat_parse_column_text_subheader+0x88>
    b370:	ldrb	r0, [r4, #2529]	; 0x9e1
    b374:	orr	r0, r0, #1
    b378:	strb	r0, [r4, #2529]	; 0x9e1
    b37c:	mov	r0, r6
    b380:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    b384:	.word	0x0001a965

0000b388 <sas7bdat_parse_column_name_subheader>:
    b388:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b38c:	add	fp, sp, #28
    b390:	sub	sp, sp, #12
    b394:	mov	r8, r2
    b398:	mov	sl, r1
    b39c:	ldr	r2, [r2, #44]	; 0x2c
    b3a0:	ldr	r1, [r8, #60]	; 0x3c
    b3a4:	ldr	r5, [r8, #136]	; 0x88
    b3a8:	add	r4, r0, r5
    b3ac:	mvn	r7, #27
    b3b0:	cmp	r2, #0
    b3b4:	mvneq	r7, #19
    b3b8:	mov	r0, r4
    b3bc:	bl	4e6c <sas_read2@plt>
    b3c0:	mov	r6, r0
    b3c4:	mov	r0, sl
    b3c8:	mov	r1, r5
    b3cc:	bl	4e54 <sas_subheader_remainder@plt>
    b3d0:	mov	r9, #5
    b3d4:	cmp	r0, r6
    b3d8:	bne	b46c <sas7bdat_parse_column_name_subheader+0xe4>
    b3dc:	add	r0, r7, sl
    b3e0:	lsr	r5, r0, #3
    b3e4:	ldr	r0, [r8, #164]	; 0xa4
    b3e8:	add	r1, r0, r5
    b3ec:	str	r1, [r8, #164]	; 0xa4
    b3f0:	mov	r0, r8
    b3f4:	bl	b6c0 <sas7bdat_realloc_col_info>
    b3f8:	mov	r9, r0
    b3fc:	cmp	r0, #0
    b400:	bne	b46c <sas7bdat_parse_column_name_subheader+0xe4>
    b404:	mov	r9, #0
    b408:	cmp	r5, #0
    b40c:	beq	b46c <sas7bdat_parse_column_name_subheader+0xe4>
    b410:	add	r6, r4, #8
    b414:	ldr	r0, [r8, #164]	; 0xa4
    b418:	sub	r7, r0, r5
    b41c:	add	r1, r5, r5, lsl #2
    b420:	add	r0, r0, r0, lsl #2
    b424:	lsl	r0, r0, #3
    b428:	sub	r5, r0, r1, lsl #3
    b42c:	add	sl, sp, #4
    b430:	ldr	r4, [r8, #192]	; 0xc0
    b434:	mov	r0, sl
    b438:	mov	r1, r6
    b43c:	mov	r2, r8
    b440:	bl	b734 <sas7bdat_parse_text_ref>
    b444:	ldr	r0, [sp, #4]
    b448:	str	r0, [r4, r5]!
    b44c:	ldrh	r0, [sp, #8]
    b450:	strh	r0, [r4, #4]
    b454:	add	r5, r5, #40	; 0x28
    b458:	add	r7, r7, #1
    b45c:	add	r6, r6, #8
    b460:	ldr	r0, [r8, #164]	; 0xa4
    b464:	cmp	r7, r0
    b468:	blt	b430 <sas7bdat_parse_column_name_subheader+0xa8>
    b46c:	mov	r0, r9
    b470:	sub	sp, fp, #28
    b474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000b478 <sas7bdat_parse_column_attributes_subheader>:
    b478:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b47c:	add	fp, sp, #24
    b480:	mov	r4, r2
    b484:	mov	r6, r1
    b488:	ldr	r1, [r2, #44]	; 0x2c
    b48c:	ldr	r7, [r2, #136]	; 0x88
    b490:	cmp	r1, #0
    b494:	beq	b4a4 <sas7bdat_parse_column_attributes_subheader+0x2c>
    b498:	sub	r1, r6, #28
    b49c:	lsr	r9, r1, #4
    b4a0:	b	b4b8 <sas7bdat_parse_column_attributes_subheader+0x40>
    b4a4:	sub	r1, r6, #20
    b4a8:	movw	r2, #43691	; 0xaaab
    b4ac:	movt	r2, #43690	; 0xaaaa
    b4b0:	umull	r1, r2, r1, r2
    b4b4:	lsr	r9, r2, #3
    b4b8:	add	r8, r0, r7
    b4bc:	ldr	r1, [r4, #60]	; 0x3c
    b4c0:	mov	r0, r8
    b4c4:	bl	4e6c <sas_read2@plt>
    b4c8:	mov	r5, r0
    b4cc:	mov	r0, r6
    b4d0:	mov	r1, r7
    b4d4:	bl	4e54 <sas_subheader_remainder@plt>
    b4d8:	mov	r1, r0
    b4dc:	mov	r0, #5
    b4e0:	cmp	r1, r5
    b4e4:	bne	b5dc <sas7bdat_parse_column_attributes_subheader+0x164>
    b4e8:	ldr	r0, [r4, #168]	; 0xa8
    b4ec:	add	r1, r0, r9
    b4f0:	str	r1, [r4, #168]	; 0xa8
    b4f4:	mov	r0, r4
    b4f8:	bl	b6c0 <sas7bdat_realloc_col_info>
    b4fc:	cmp	r0, #0
    b500:	bne	b5dc <sas7bdat_parse_column_attributes_subheader+0x164>
    b504:	cmp	r9, #0
    b508:	beq	b5d8 <sas7bdat_parse_column_attributes_subheader+0x160>
    b50c:	add	r5, r8, #8
    b510:	ldr	r0, [r4, #168]	; 0xa8
    b514:	sub	r6, r0, r9
    b518:	add	r1, r9, r9, lsl #2
    b51c:	add	r0, r0, r0, lsl #2
    b520:	lsl	r0, r0, #3
    b524:	sub	r7, r0, r1, lsl #3
    b528:	b	b54c <sas7bdat_parse_column_attributes_subheader+0xd4>
    b52c:	str	r6, [r1, #20]
    b530:	str	r0, [r1, #36]	; 0x24
    b534:	add	r5, r5, #8
    b538:	add	r7, r7, #40	; 0x28
    b53c:	add	r6, r6, #1
    b540:	ldr	r0, [r4, #168]	; 0xa8
    b544:	cmp	r6, r0
    b548:	bge	b5d8 <sas7bdat_parse_column_attributes_subheader+0x160>
    b54c:	ldr	r0, [r4, #44]	; 0x2c
    b550:	ldr	r1, [r4, #60]	; 0x3c
    b554:	cmp	r0, #0
    b558:	beq	b568 <sas7bdat_parse_column_attributes_subheader+0xf0>
    b55c:	mov	r0, r5
    b560:	bl	4e60 <sas_read8@plt>
    b564:	b	b574 <sas7bdat_parse_column_attributes_subheader+0xfc>
    b568:	mov	r0, r5
    b56c:	bl	4e90 <sas_read4@plt>
    b570:	mov	r1, #0
    b574:	ldr	r2, [r4, #192]	; 0xc0
    b578:	add	r2, r2, r7
    b57c:	strd	r0, [r2, #24]
    b580:	ldr	r0, [r4, #44]	; 0x2c
    b584:	ldr	r1, [r4, #60]	; 0x3c
    b588:	cmp	r0, #0
    b58c:	mov	r0, #8
    b590:	movweq	r0, #4
    b594:	add	r5, r5, r0
    b598:	mov	r0, r5
    b59c:	bl	4e90 <sas_read4@plt>
    b5a0:	ldr	r1, [r4, #192]	; 0xc0
    b5a4:	add	r1, r1, r7
    b5a8:	str	r0, [r1, #32]
    b5ac:	ldr	r2, [r4, #176]	; 0xb0
    b5b0:	cmp	r0, r2
    b5b4:	strhi	r0, [r4, #176]	; 0xb0
    b5b8:	ldrb	r2, [r5, #6]
    b5bc:	mov	r0, #5
    b5c0:	cmp	r2, #1
    b5c4:	beq	b52c <sas7bdat_parse_column_attributes_subheader+0xb4>
    b5c8:	cmp	r2, #2
    b5cc:	bne	b5dc <sas7bdat_parse_column_attributes_subheader+0x164>
    b5d0:	mov	r0, #0
    b5d4:	b	b52c <sas7bdat_parse_column_attributes_subheader+0xb4>
    b5d8:	mov	r0, #0
    b5dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000b5e0 <sas7bdat_parse_column_format_subheader>:
    b5e0:	push	{r4, r5, r6, r7, fp, lr}
    b5e4:	add	fp, sp, #16
    b5e8:	sub	sp, sp, #16
    b5ec:	mov	r4, r2
    b5f0:	mov	r5, r0
    b5f4:	ldr	r0, [r2, #44]	; 0x2c
    b5f8:	mov	r2, #58	; 0x3a
    b5fc:	cmp	r0, #0
    b600:	movweq	r2, #46	; 0x2e
    b604:	mov	r0, #5
    b608:	cmp	r2, r1
    b60c:	bhi	b62c <sas7bdat_parse_column_format_subheader+0x4c>
    b610:	ldr	r0, [r4, #172]	; 0xac
    b614:	add	r1, r0, #1
    b618:	str	r1, [r4, #172]	; 0xac
    b61c:	mov	r0, r4
    b620:	bl	b6c0 <sas7bdat_realloc_col_info>
    b624:	cmp	r0, #0
    b628:	beq	b634 <sas7bdat_parse_column_format_subheader+0x54>
    b62c:	sub	sp, fp, #16
    b630:	pop	{r4, r5, r6, r7, fp, pc}
    b634:	ldr	r6, [r4, #172]	; 0xac
    b638:	ldr	r7, [r4, #192]	; 0xc0
    b63c:	ldr	r0, [r4, #44]	; 0x2c
    b640:	mov	r1, #46	; 0x2e
    b644:	cmp	r0, #0
    b648:	movweq	r1, #34	; 0x22
    b64c:	add	r1, r5, r1
    b650:	add	r0, sp, #8
    b654:	mov	r2, r4
    b658:	bl	b734 <sas7bdat_parse_text_ref>
    b65c:	add	r0, r6, r6, lsl #2
    b660:	add	r0, r7, r0, lsl #3
    b664:	ldrh	r1, [sp, #12]
    b668:	strh	r1, [r0, #-30]	; 0xffffffe2
    b66c:	ldr	r1, [sp, #8]
    b670:	str	r1, [r0, #-34]	; 0xffffffde
    b674:	ldr	r6, [r4, #172]	; 0xac
    b678:	ldr	r7, [r4, #192]	; 0xc0
    b67c:	ldr	r0, [r4, #44]	; 0x2c
    b680:	mov	r1, #52	; 0x34
    b684:	cmp	r0, #0
    b688:	movweq	r1, #40	; 0x28
    b68c:	add	r1, r5, r1
    b690:	mov	r0, sp
    b694:	mov	r2, r4
    b698:	bl	b734 <sas7bdat_parse_text_ref>
    b69c:	add	r0, r6, r6, lsl #2
    b6a0:	add	r0, r7, r0, lsl #3
    b6a4:	ldrh	r1, [sp, #4]
    b6a8:	strh	r1, [r0, #-24]	; 0xffffffe8
    b6ac:	ldr	r1, [sp]
    b6b0:	str	r1, [r0, #-28]	; 0xffffffe4
    b6b4:	mov	r0, #0
    b6b8:	sub	sp, fp, #16
    b6bc:	pop	{r4, r5, r6, r7, fp, pc}

0000b6c0 <sas7bdat_realloc_col_info>:
    b6c0:	push	{r4, r5, r6, r7, fp, lr}
    b6c4:	add	fp, sp, #16
    b6c8:	ldr	r7, [r0, #188]	; 0xbc
    b6cc:	mov	r6, #0
    b6d0:	cmp	r7, r1
    b6d4:	bcs	b720 <sas7bdat_realloc_col_info+0x60>
    b6d8:	mov	r4, r1
    b6dc:	mov	r5, r0
    b6e0:	str	r1, [r0, #188]	; 0xbc
    b6e4:	ldr	r0, [r0, #192]	; 0xc0
    b6e8:	add	r1, r1, r1, lsl #2
    b6ec:	lsl	r1, r1, #3
    b6f0:	bl	4d70 <readstat_realloc@plt>
    b6f4:	str	r0, [r5, #192]	; 0xc0
    b6f8:	cmp	r0, #0
    b6fc:	beq	b728 <sas7bdat_realloc_col_info+0x68>
    b700:	add	r1, r7, r7, lsl #2
    b704:	add	r0, r0, r1, lsl #3
    b708:	sub	r1, r4, r7
    b70c:	add	r1, r1, r1, lsl #2
    b710:	lsl	r2, r1, #3
    b714:	mov	r6, #0
    b718:	mov	r1, #0
    b71c:	bl	4d28 <memset@plt>
    b720:	mov	r0, r6
    b724:	pop	{r4, r5, r6, r7, fp, pc}
    b728:	mov	r6, #3
    b72c:	mov	r0, r6
    b730:	pop	{r4, r5, r6, r7, fp, pc}

0000b734 <sas7bdat_parse_text_ref>:
    b734:	push	{r4, r5, r6, sl, fp, lr}
    b738:	add	fp, sp, #16
    b73c:	mov	r4, r2
    b740:	mov	r5, r1
    b744:	mov	r6, r0
    b748:	ldr	r1, [r2, #60]	; 0x3c
    b74c:	mov	r0, r5
    b750:	bl	4e6c <sas_read2@plt>
    b754:	strh	r0, [r6]
    b758:	ldr	r1, [r4, #60]	; 0x3c
    b75c:	add	r0, r5, #2
    b760:	bl	4e6c <sas_read2@plt>
    b764:	strh	r0, [r6, #2]
    b768:	ldr	r1, [r4, #60]	; 0x3c
    b76c:	add	r0, r5, #4
    b770:	bl	4e6c <sas_read2@plt>
    b774:	strh	r0, [r6, #4]
    b778:	pop	{r4, r5, r6, sl, fp, pc}

0000b77c <sas7bdat_parse_page_pass2>:
    b77c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b780:	add	fp, sp, #28
    b784:	sub	sp, sp, #4
    b788:	vpush	{d8-d9}
    b78c:	sub	sp, sp, #56	; 0x38
    b790:	mov	r4, r2
    b794:	mov	r8, r1
    b798:	mov	r6, r0
    b79c:	mov	r5, r2
    b7a0:	ldr	r0, [r5, #128]!	; 0x80
    b7a4:	add	r0, r0, r6
    b7a8:	sub	r0, r0, #8
    b7ac:	ldr	r1, [r5, #-68]	; 0xffffffbc
    b7b0:	bl	4e6c <sas_read2@plt>
    b7b4:	and	r7, r0, #3840	; 0xf00
    b7b8:	cmp	r7, #256	; 0x100
    b7bc:	bne	b830 <sas7bdat_parse_page_pass2+0xb4>
    b7c0:	ldr	r0, [r5]
    b7c4:	add	r0, r0, r6
    b7c8:	sub	r0, r0, #6
    b7cc:	ldr	r1, [r4, #60]	; 0x3c
    b7d0:	bl	4e6c <sas_read2@plt>
    b7d4:	str	r0, [r4, #72]	; 0x48
    b7d8:	ldr	r0, [r5]
    b7dc:	add	r7, r6, r0
    b7e0:	cmp	r7, #0
    b7e4:	beq	b8c0 <sas7bdat_parse_page_pass2+0x144>
    b7e8:	mov	r0, r4
    b7ec:	mov	r1, #0
    b7f0:	bl	ab28 <sas7bdat_submit_columns_if_needed>
    b7f4:	cmp	r0, #0
    b7f8:	bne	b8c4 <sas7bdat_parse_page_pass2+0x148>
    b7fc:	ldr	r0, [r4, #16]
    b800:	cmp	r0, #0
    b804:	mov	r0, #0
    b808:	beq	b8c4 <sas7bdat_parse_page_pass2+0x148>
    b80c:	add	r0, r6, r8
    b810:	sub	r1, r0, r7
    b814:	mov	r0, r7
    b818:	mov	r2, r4
    b81c:	sub	sp, fp, #48	; 0x30
    b820:	vpop	{d8-d9}
    b824:	add	sp, sp, #4
    b828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b82c:	b	bc94 <sas7bdat_parse_rows>
    b830:	mov	r1, r0
    b834:	mov	r0, #0
    b838:	tst	r1, #36864	; 0x9000
    b83c:	bne	b8c4 <sas7bdat_parse_page_pass2+0x148>
    b840:	add	r9, r5, #16
    b844:	ldr	r0, [r5]
    b848:	add	r0, r0, r6
    b84c:	sub	r0, r0, #4
    b850:	ldr	r1, [r4, #60]	; 0x3c
    b854:	bl	4e6c <sas_read2@plt>
    b858:	ldr	r1, [r9]
    b85c:	mov	r9, r0
    b860:	str	r1, [sp, #28]
    b864:	mul	r0, r1, r0
    b868:	ldrd	r2, [r5]
    b86c:	adds	r1, r2, r0
    b870:	adc	r3, r3, r0, asr #31
    b874:	mov	r0, #5
    b878:	subs	r1, r8, r1
    b87c:	rscs	r1, r3, #0
    b880:	bcc	b8c4 <sas7bdat_parse_page_pass2+0x148>
    b884:	str	r7, [sp, #8]
    b888:	add	r7, r6, r2
    b88c:	cmp	r9, #0
    b890:	str	r8, [sp, #16]
    b894:	beq	ba88 <sas7bdat_parse_page_pass2+0x30c>
    b898:	add	r0, r6, r8
    b89c:	str	r0, [sp, #24]
    b8a0:	add	r0, r6, #4
    b8a4:	str	r0, [sp]
    b8a8:	add	r0, sp, #32
    b8ac:	add	r0, r0, #8
    b8b0:	str	r0, [sp, #20]
    b8b4:	vmov.i32	q4, #0	; 0x00000000
    b8b8:	str	r9, [sp, #12]
    b8bc:	b	b908 <sas7bdat_parse_page_pass2+0x18c>
    b8c0:	mov	r0, #0
    b8c4:	sub	sp, fp, #48	; 0x30
    b8c8:	vpop	{d8-d9}
    b8cc:	add	sp, sp, #4
    b8d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b8d4:	mov	r0, r4
    b8d8:	mov	r1, #1
    b8dc:	bl	ab28 <sas7bdat_submit_columns_if_needed>
    b8e0:	cmp	r0, #0
    b8e4:	bne	b8c4 <sas7bdat_parse_page_pass2+0x148>
    b8e8:	ldr	r0, [sp, #32]
    b8ec:	add	r0, r6, r0
    b8f0:	mov	r1, r8
    b8f4:	mov	r2, r4
    b8f8:	bl	bc80 <sas7bdat_parse_subheader_compressed>
    b8fc:	cmp	r0, #0
    b900:	beq	b960 <sas7bdat_parse_page_pass2+0x1e4>
    b904:	b	b8c4 <sas7bdat_parse_page_pass2+0x148>
    b908:	add	r2, sp, #32
    b90c:	mov	r0, r2
    b910:	mov	r1, #20
    b914:	vst1.64	{d8-d9}, [r0], r1
    b918:	mov	r1, #0
    b91c:	str	r1, [r0]
    b920:	str	r1, [sp, #48]	; 0x30
    b924:	ldr	r0, [sp, #24]
    b928:	sub	r1, r0, r7
    b92c:	mov	r0, r7
    b930:	mov	r3, r4
    b934:	bl	ae60 <sas7bdat_parse_subheader_pointer>
    b938:	cmp	r0, #0
    b93c:	bne	b8c4 <sas7bdat_parse_page_pass2+0x148>
    b940:	ldr	r0, [sp, #20]
    b944:	ldr	r8, [r0]
    b948:	ldr	r5, [r0, #4]
    b94c:	orrs	r0, r8, r5
    b950:	beq	b960 <sas7bdat_parse_page_pass2+0x1e4>
    b954:	ldrb	sl, [sp, #48]	; 0x30
    b958:	cmp	sl, #1
    b95c:	bne	b974 <sas7bdat_parse_page_pass2+0x1f8>
    b960:	ldr	r0, [sp, #28]
    b964:	add	r7, r7, r0
    b968:	subs	r9, r9, #1
    b96c:	bne	b908 <sas7bdat_parse_page_pass2+0x18c>
    b970:	b	ba88 <sas7bdat_parse_page_pass2+0x30c>
    b974:	add	r0, sp, #32
    b978:	ldr	r1, [sp, #16]
    b97c:	ldr	r2, [sp, #12]
    b980:	mov	r3, r4
    b984:	bl	af10 <sas7bdat_validate_subheader_pointer>
    b988:	cmp	r0, #0
    b98c:	bne	b8c4 <sas7bdat_parse_page_pass2+0x148>
    b990:	cmp	sl, #4
    b994:	beq	b8d4 <sas7bdat_parse_page_pass2+0x158>
    b998:	cmp	sl, #0
    b99c:	bne	bad8 <sas7bdat_parse_page_pass2+0x35c>
    b9a0:	ldr	r0, [sp, #32]
    b9a4:	str	r0, [sp, #4]
    b9a8:	add	sl, r6, r0
    b9ac:	ldr	r1, [r4, #60]	; 0x3c
    b9b0:	mov	r0, sl
    b9b4:	bl	4e90 <sas_read4@plt>
    b9b8:	mov	r1, r0
    b9bc:	cmn	r0, #1
    b9c0:	ldreq	r0, [r4, #40]	; 0x28
    b9c4:	cmpeq	r0, #0
    b9c8:	beq	ba20 <sas7bdat_parse_page_pass2+0x2a4>
    b9cc:	ldrb	r0, [sp, #49]	; 0x31
    b9d0:	cmp	r0, #0
    b9d4:	beq	b9f8 <sas7bdat_parse_page_pass2+0x27c>
    b9d8:	mov	r0, r1
    b9dc:	str	sl, [sp, #4]
    b9e0:	mov	sl, r1
    b9e4:	bl	baf8 <sas7bdat_signature_is_recognized>
    b9e8:	mov	r1, sl
    b9ec:	ldr	sl, [sp, #4]
    b9f0:	cmp	r0, #0
    b9f4:	beq	ba44 <sas7bdat_parse_page_pass2+0x2c8>
    b9f8:	cmn	r1, #3
    b9fc:	beq	b960 <sas7bdat_parse_page_pass2+0x1e4>
    ba00:	mov	r0, r1
    ba04:	mov	r1, sl
    ba08:	mov	r2, r8
    ba0c:	mov	r3, r4
    ba10:	bl	afc0 <sas7bdat_parse_subheader>
    ba14:	cmp	r0, #0
    ba18:	beq	b960 <sas7bdat_parse_page_pass2+0x1e4>
    ba1c:	b	b8c4 <sas7bdat_parse_page_pass2+0x148>
    ba20:	ldr	r0, [r4, #44]	; 0x2c
    ba24:	cmp	r0, #0
    ba28:	beq	ba80 <sas7bdat_parse_page_pass2+0x304>
    ba2c:	ldm	sp, {r0, r1}
    ba30:	add	r0, r0, r1
    ba34:	ldr	r1, [r4, #60]	; 0x3c
    ba38:	bl	4e90 <sas_read4@plt>
    ba3c:	mov	r1, r0
    ba40:	b	b9cc <sas7bdat_parse_page_pass2+0x250>
    ba44:	ldr	r0, [r4, #68]	; 0x44
    ba48:	eor	r0, r8, r0
    ba4c:	orrs	r0, r0, r5
    ba50:	bne	baf0 <sas7bdat_parse_page_pass2+0x374>
    ba54:	mov	r0, r4
    ba58:	mov	r1, #1
    ba5c:	bl	ab28 <sas7bdat_submit_columns_if_needed>
    ba60:	cmp	r0, #0
    ba64:	bne	b8c4 <sas7bdat_parse_page_pass2+0x148>
    ba68:	mov	r0, sl
    ba6c:	mov	r1, r4
    ba70:	bl	bb58 <sas7bdat_parse_single_row>
    ba74:	cmp	r0, #0
    ba78:	beq	b960 <sas7bdat_parse_page_pass2+0x1e4>
    ba7c:	b	b8c4 <sas7bdat_parse_page_pass2+0x148>
    ba80:	mvn	r1, #0
    ba84:	b	b9cc <sas7bdat_parse_page_pass2+0x250>
    ba88:	ldr	r0, [sp, #8]
    ba8c:	cmp	r0, #512	; 0x200
    ba90:	mov	r0, #0
    ba94:	ldr	r8, [sp, #16]
    ba98:	bne	b8c4 <sas7bdat_parse_page_pass2+0x148>
    ba9c:	sub	r0, r7, r6
    baa0:	asr	r1, r0, #31
    baa4:	add	r1, r0, r1, lsr #29
    baa8:	bic	r1, r1, #7
    baac:	sub	r0, r0, r1
    bab0:	cmp	r0, #4
    bab4:	bne	b7e0 <sas7bdat_parse_page_pass2+0x64>
    bab8:	ldr	r0, [r7]
    babc:	cmp	r0, #0
    bac0:	movwne	r1, #8224	; 0x2020
    bac4:	movtne	r1, #8224	; 0x2020
    bac8:	cmpne	r0, r1
    bacc:	bne	bae0 <sas7bdat_parse_page_pass2+0x364>
    bad0:	add	r7, r7, #4
    bad4:	b	b7e8 <sas7bdat_parse_page_pass2+0x6c>
    bad8:	mov	r0, #6
    badc:	b	b8c4 <sas7bdat_parse_page_pass2+0x148>
    bae0:	ldr	r0, [r4, #48]	; 0x30
    bae4:	cmp	r0, #0
    bae8:	addne	r7, r7, #4
    baec:	b	b7e8 <sas7bdat_parse_page_pass2+0x6c>
    baf0:	mov	r0, #10
    baf4:	b	b8c4 <sas7bdat_parse_page_pass2+0x148>

0000baf8 <sas7bdat_signature_is_recognized>:
    baf8:	mov	r1, r0
    bafc:	mov	r0, #1
    bb00:	movw	r2, #64509	; 0xfbfd
    bb04:	movt	r2, #65535	; 0xffff
    bb08:	cmp	r1, r2
    bb0c:	bgt	bb40 <sas7bdat_signature_is_recognized+0x48>
    bb10:	movw	r2, #63222	; 0xf6f6
    bb14:	movt	r2, #63222	; 0xf6f6
    bb18:	cmp	r1, r2
    bb1c:	bxeq	lr
    bb20:	movw	r2, #63479	; 0xf7f7
    bb24:	movt	r2, #63479	; 0xf7f7
    bb28:	cmp	r1, r2
    bb2c:	beq	bb54 <sas7bdat_signature_is_recognized+0x5c>
    bb30:	mov	r0, #0
    bb34:	cmn	r1, #9
    bb38:	movwhi	r0, #1
    bb3c:	bx	lr
    bb40:	movw	r2, #64510	; 0xfbfe
    bb44:	movt	r2, #65535	; 0xffff
    bb48:	cmp	r1, r2
    bb4c:	cmnne	r1, #1024	; 0x400
    bb50:	bne	bb30 <sas7bdat_signature_is_recognized+0x38>
    bb54:	bx	lr

0000bb58 <sas7bdat_parse_single_row>:
    bb58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    bb5c:	add	fp, sp, #24
    bb60:	mov	r4, r1
    bb64:	mov	r8, r0
    bb68:	ldr	r1, [r1, #76]	; 0x4c
    bb6c:	ldr	r2, [r4, #84]	; 0x54
    bb70:	mov	r0, #0
    bb74:	cmp	r1, r2
    bb78:	bne	bb80 <sas7bdat_parse_single_row+0x28>
    bb7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    bb80:	ldr	r1, [r4, #88]	; 0x58
    bb84:	cmp	r1, #0
    bb88:	beq	bb98 <sas7bdat_parse_single_row+0x40>
    bb8c:	sub	r1, r1, #1
    bb90:	str	r1, [r4, #88]	; 0x58
    bb94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    bb98:	ldr	r0, [r4, #16]
    bb9c:	cmp	r0, #0
    bba0:	beq	bc64 <sas7bdat_parse_single_row+0x10c>
    bba4:	ldr	r0, [r4, #176]	; 0xb0
    bba8:	ldr	r3, [r4, #180]	; 0xb4
    bbac:	mov	r1, #1
    bbb0:	orr	r1, r1, r0, lsl #2
    bbb4:	str	r1, [r4, #184]	; 0xb8
    bbb8:	mov	r0, r3
    bbbc:	bl	4d70 <readstat_realloc@plt>
    bbc0:	str	r0, [r4, #180]	; 0xb4
    bbc4:	cmp	r0, #0
    bbc8:	beq	bc78 <sas7bdat_parse_single_row+0x120>
    bbcc:	ldr	r0, [r4, #80]	; 0x50
    bbd0:	cmp	r0, #0
    bbd4:	beq	bc64 <sas7bdat_parse_single_row+0x10c>
    bbd8:	mov	r6, #0
    bbdc:	mov	r7, #0
    bbe0:	b	bbf8 <sas7bdat_parse_single_row+0xa0>
    bbe4:	add	r6, r6, #40	; 0x28
    bbe8:	add	r7, r7, #1
    bbec:	ldr	r0, [r4, #80]	; 0x50
    bbf0:	cmp	r7, r0
    bbf4:	bcs	bc64 <sas7bdat_parse_single_row+0x10c>
    bbf8:	ldr	r0, [r4, #196]	; 0xc4
    bbfc:	ldr	ip, [r0, r7, lsl #2]
    bc00:	ldr	r0, [ip, #2144]	; 0x860
    bc04:	cmp	r0, #0
    bc08:	bne	bbe4 <sas7bdat_parse_single_row+0x8c>
    bc0c:	ldr	r0, [r4, #192]	; 0xc0
    bc10:	add	r1, r0, r6
    bc14:	ldr	r2, [r1, #24]
    bc18:	ldr	r9, [r1, #28]
    bc1c:	ldr	r5, [r4, #68]	; 0x44
    bc20:	mov	r0, #5
    bc24:	subs	r3, r5, r2
    bc28:	rscs	r3, r9, #0
    bc2c:	bcc	bb7c <sas7bdat_parse_single_row+0x24>
    bc30:	ldr	r3, [r1, #32]
    bc34:	adds	r3, r2, r3
    bc38:	adc	lr, r9, #0
    bc3c:	subs	r3, r5, r3
    bc40:	rscs	r3, lr, #0
    bc44:	bcc	bb7c <sas7bdat_parse_single_row+0x24>
    bc48:	add	r2, r8, r2
    bc4c:	mov	r0, ip
    bc50:	mov	r3, r4
    bc54:	bl	bd18 <sas7bdat_handle_data_value>
    bc58:	cmp	r0, #0
    bc5c:	beq	bbe4 <sas7bdat_parse_single_row+0x8c>
    bc60:	b	bb7c <sas7bdat_parse_single_row+0x24>
    bc64:	ldr	r0, [r4, #76]	; 0x4c
    bc68:	add	r0, r0, #1
    bc6c:	str	r0, [r4, #76]	; 0x4c
    bc70:	mov	r0, #0
    bc74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    bc78:	mov	r0, #3
    bc7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000bc80 <sas7bdat_parse_subheader_compressed>:
    bc80:	ldrb	r3, [r2, #2529]	; 0x9e1
    bc84:	tst	r3, #1
    bc88:	bne	bc90 <sas7bdat_parse_subheader_compressed+0x10>
    bc8c:	b	c14c <sas7bdat_parse_subheader_rle>
    bc90:	b	bf2c <sas7bdat_parse_subheader_rdc>

0000bc94 <sas7bdat_parse_rows>:
    bc94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    bc98:	add	fp, sp, #24
    bc9c:	mov	r8, r0
    bca0:	ldr	r0, [r2, #72]	; 0x48
    bca4:	cmp	r0, #0
    bca8:	beq	bd08 <sas7bdat_parse_rows+0x74>
    bcac:	mov	r4, r2
    bcb0:	mov	r5, r1
    bcb4:	mov	r7, #0
    bcb8:	mov	r6, #0
    bcbc:	ldr	r0, [r4, #76]	; 0x4c
    bcc0:	ldr	r1, [r4, #84]	; 0x54
    bcc4:	cmp	r0, r1
    bcc8:	bcs	bd08 <sas7bdat_parse_rows+0x74>
    bccc:	ldr	r0, [r4, #68]	; 0x44
    bcd0:	add	r0, r0, r7
    bcd4:	cmp	r0, r5
    bcd8:	bhi	bd10 <sas7bdat_parse_rows+0x7c>
    bcdc:	add	r0, r8, r7
    bce0:	mov	r1, r4
    bce4:	bl	bb58 <sas7bdat_parse_single_row>
    bce8:	cmp	r0, #0
    bcec:	bne	bd0c <sas7bdat_parse_rows+0x78>
    bcf0:	ldr	r0, [r4, #68]	; 0x44
    bcf4:	ldr	r1, [r4, #72]	; 0x48
    bcf8:	add	r7, r0, r7
    bcfc:	add	r6, r6, #1
    bd00:	cmp	r6, r1
    bd04:	bcc	bcbc <sas7bdat_parse_rows+0x28>
    bd08:	mov	r0, #0
    bd0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    bd10:	mov	r0, #10
    bd14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000bd18 <sas7bdat_handle_data_value>:
    bd18:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    bd1c:	add	fp, sp, #24
    bd20:	sub	sp, sp, #32
    bd24:	mov	r4, r3
    bd28:	mov	r7, r2
    bd2c:	mov	r9, r1
    bd30:	mov	r8, r0
    bd34:	vmov.i32	q8, #0	; 0x00000000
    bd38:	mov	r0, #8
    bd3c:	add	r6, sp, #16
    bd40:	vst1.64	{d16-d17}, [r6], r0
    bd44:	ldr	r0, [r1, #36]	; 0x24
    bd48:	str	r0, [r6]
    bd4c:	cmp	r0, #5
    bd50:	beq	bdd8 <sas7bdat_handle_data_value+0xc0>
    bd54:	cmp	r0, #0
    bd58:	bne	bee8 <sas7bdat_handle_data_value+0x1d0>
    bd5c:	ldr	r3, [r9, #32]
    bd60:	ldr	r0, [r4, #180]	; 0xb4
    bd64:	ldr	r1, [r4, #184]	; 0xb8
    bd68:	ldr	r2, [r4, #208]	; 0xd0
    bd6c:	str	r2, [sp]
    bd70:	mov	r2, r7
    bd74:	bl	4cbc <readstat_convert@plt>
    bd78:	cmp	r0, #0
    bd7c:	beq	be2c <sas7bdat_handle_data_value+0x114>
    bd80:	mov	r5, r0
    bd84:	ldr	r0, [r4, #24]
    bd88:	cmp	r0, #0
    bd8c:	beq	bf1c <sas7bdat_handle_data_value+0x204>
    bd90:	ldr	r0, [r4, #76]	; 0x4c
    bd94:	ldr	r1, [r9, #20]
    bd98:	ldr	r2, [r9, #32]
    bd9c:	add	r1, r1, #1
    bda0:	stm	sp, {r1, r2, r7}
    bda4:	movw	r1, #481	; 0x1e1
    bda8:	add	r6, r4, r1
    bdac:	add	r3, r0, #1
    bdb0:	ldr	r2, [pc, #368]	; bf28 <sas7bdat_handle_data_value+0x210>
    bdb4:	add	r2, pc, r2
    bdb8:	mov	r0, r6
    bdbc:	mov	r1, #2048	; 0x800
    bdc0:	bl	4d04 <snprintf@plt>
    bdc4:	ldr	r2, [r4, #24]
    bdc8:	ldr	r1, [r4, #52]	; 0x34
    bdcc:	mov	r0, r6
    bdd0:	blx	r2
    bdd4:	b	bf1c <sas7bdat_handle_data_value+0x204>
    bdd8:	ldr	r2, [r9, #32]
    bddc:	ldr	r0, [r4, #40]	; 0x28
    bde0:	cmp	r0, #0
    bde4:	beq	be38 <sas7bdat_handle_data_value+0x120>
    bde8:	cmp	r2, #0
    bdec:	beq	be70 <sas7bdat_handle_data_value+0x158>
    bdf0:	sub	r3, r7, #1
    bdf4:	ldr	r7, [r9, #32]
    bdf8:	mov	r5, #0
    bdfc:	mov	r0, #0
    be00:	mov	r1, #0
    be04:	lsl	r1, r1, #8
    be08:	orr	r1, r1, r0, lsr #24
    be0c:	add	r2, r3, r2
    be10:	ldrb	r2, [r2, -r5]
    be14:	orr	r0, r2, r0, lsl #8
    be18:	add	r5, r5, #1
    be1c:	cmp	r5, r7
    be20:	mov	r2, r7
    be24:	bcc	be04 <sas7bdat_handle_data_value+0xec>
    be28:	b	be78 <sas7bdat_handle_data_value+0x160>
    be2c:	ldr	r0, [r4, #180]	; 0xb4
    be30:	str	r0, [sp, #16]
    be34:	b	bee8 <sas7bdat_handle_data_value+0x1d0>
    be38:	cmp	r2, #0
    be3c:	beq	be70 <sas7bdat_handle_data_value+0x158>
    be40:	ldr	r2, [r9, #32]
    be44:	mov	r3, #0
    be48:	mov	r0, #0
    be4c:	mov	r1, #0
    be50:	lsl	r1, r1, #8
    be54:	orr	r1, r1, r0, lsr #24
    be58:	ldrb	r5, [r7, r3]
    be5c:	orr	r0, r5, r0, lsl #8
    be60:	add	r3, r3, #1
    be64:	cmp	r3, r2
    be68:	bcc	be50 <sas7bdat_handle_data_value+0x138>
    be6c:	b	be78 <sas7bdat_handle_data_value+0x160>
    be70:	mov	r0, #0
    be74:	mov	r1, #0
    be78:	ldr	r2, [r9, #32]
    be7c:	mov	r3, #64	; 0x40
    be80:	sub	r3, r3, r2, lsl #3
    be84:	rsb	r7, r3, #32
    be88:	lsr	r7, r0, r7
    be8c:	orr	r5, r7, r1, lsl r3
    be90:	mov	r1, #32
    be94:	sub	r1, r1, r2, lsl #3
    be98:	cmp	r1, #0
    be9c:	lslpl	r5, r0, r1
    bea0:	lsl	r7, r0, r3
    bea4:	movwpl	r7, #0
    bea8:	vmov	d0, r7, r5
    beac:	bl	4db8 <__isnan@plt>
    beb0:	cmp	r0, #0
    beb4:	beq	bee0 <sas7bdat_handle_data_value+0x1c8>
    beb8:	movw	r0, #0
    bebc:	movt	r0, #32760	; 0x7ff8
    bec0:	str	r0, [sp, #20]
    bec4:	mov	r0, #0
    bec8:	str	r0, [sp, #16]
    becc:	mvn	r0, r5, lsr #8
    bed0:	uxtb	r1, r0
    bed4:	add	r0, sp, #16
    bed8:	bl	4f44 <sas_assign_tag@plt>
    bedc:	b	bee8 <sas7bdat_handle_data_value+0x1d0>
    bee0:	str	r7, [sp, #16]
    bee4:	str	r5, [sp, #20]
    bee8:	ldrd	r6, [r6]
    beec:	ldr	r5, [r4, #16]
    bef0:	ldr	r1, [r4, #52]	; 0x34
    bef4:	ldr	r0, [r4, #76]	; 0x4c
    bef8:	ldr	r2, [sp, #16]
    befc:	ldr	r3, [sp, #20]
    bf00:	stm	sp, {r6, r7}
    bf04:	str	r1, [sp, #8]
    bf08:	mov	r1, r8
    bf0c:	blx	r5
    bf10:	cmp	r0, #0
    bf14:	movwne	r0, #1
    bf18:	lsl	r5, r0, #2
    bf1c:	mov	r0, r5
    bf20:	sub	sp, fp, #24
    bf24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    bf28:	.word	0x00019f16

0000bf2c <sas7bdat_parse_subheader_rdc>:
    bf2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bf30:	add	fp, sp, #28
    bf34:	sub	sp, sp, #20
    bf38:	mov	sl, r2
    bf3c:	mov	r7, r1
    bf40:	mov	r8, r0
    bf44:	ldr	r0, [r2, #68]	; 0x44
    bf48:	bl	4b90 <malloc@plt>
    bf4c:	mov	ip, r0
    bf50:	cmp	r7, #2
    bf54:	str	sl, [sp, #4]
    bf58:	str	r0, [sp, #16]
    bf5c:	bge	bf8c <sas7bdat_parse_subheader_rdc+0x60>
    bf60:	sub	r0, r0, ip
    bf64:	ldr	r1, [sl, #68]	; 0x44
    bf68:	mov	r7, #10
    bf6c:	cmp	r0, r1
    bf70:	bne	c138 <sas7bdat_parse_subheader_rdc+0x20c>
    bf74:	mov	r0, ip
    bf78:	ldr	r1, [sp, #4]
    bf7c:	bl	bb58 <sas7bdat_parse_single_row>
    bf80:	ldr	ip, [sp, #16]
    bf84:	mov	r7, r0
    bf88:	b	c138 <sas7bdat_parse_subheader_rdc+0x20c>
    bf8c:	add	r5, r8, r7
    bf90:	add	r1, r8, #2
    bf94:	mov	r0, ip
    bf98:	str	r5, [sp, #8]
    bf9c:	ldrb	r2, [r8]
    bfa0:	ldrb	r3, [r8, #1]
    bfa4:	orr	r4, r3, r2, lsl #8
    bfa8:	mov	r9, #15
    bfac:	mov	r8, r1
    bfb0:	str	r4, [sp, #12]
    bfb4:	b	bfcc <sas7bdat_parse_subheader_rdc+0xa0>
    bfb8:	mov	r8, r6
    bfbc:	ldr	sl, [sp, #4]
    bfc0:	sub	r9, r9, #1
    bfc4:	cmn	r9, #1
    bfc8:	beq	c124 <sas7bdat_parse_subheader_rdc+0x1f8>
    bfcc:	mov	r1, #1
    bfd0:	tst	r4, r1, lsl r9
    bfd4:	beq	c000 <sas7bdat_parse_subheader_rdc+0xd4>
    bfd8:	add	r6, r8, #2
    bfdc:	mov	r7, #5
    bfe0:	cmp	r6, r5
    bfe4:	bhi	c138 <sas7bdat_parse_subheader_rdc+0x20c>
    bfe8:	ldrb	r3, [r8]
    bfec:	ldrb	r1, [r8, #1]
    bff0:	cmp	r3, #15
    bff4:	bhi	c034 <sas7bdat_parse_subheader_rdc+0x108>
    bff8:	add	r2, r3, #3
    bffc:	b	c070 <sas7bdat_parse_subheader_rdc+0x144>
    c000:	add	r1, r8, #1
    c004:	cmp	r1, r5
    c008:	bhi	c124 <sas7bdat_parse_subheader_rdc+0x1f8>
    c00c:	ldr	r2, [sl, #68]	; 0x44
    c010:	add	r3, ip, r2
    c014:	add	r2, r0, #1
    c018:	cmp	r2, r3
    c01c:	bhi	c134 <sas7bdat_parse_subheader_rdc+0x208>
    c020:	ldrb	r3, [r8]
    c024:	strb	r3, [r0]
    c028:	mov	r0, r2
    c02c:	mov	r8, r1
    c030:	b	bfc0 <sas7bdat_parse_subheader_rdc+0x94>
    c034:	mov	r2, #2
    c038:	cmp	r2, r3, lsr #4
    c03c:	beq	c0a0 <sas7bdat_parse_subheader_rdc+0x174>
    c040:	lsr	r2, r3, #4
    c044:	cmp	r2, #1
    c048:	bne	c0c4 <sas7bdat_parse_subheader_rdc+0x198>
    c04c:	add	r4, r8, #3
    c050:	cmp	r4, r5
    c054:	bhi	c138 <sas7bdat_parse_subheader_rdc+0x20c>
    c058:	and	r2, r3, #15
    c05c:	orr	r1, r2, r1, lsl #4
    c060:	add	r2, r1, #19
    c064:	ldrb	r1, [r6]
    c068:	mov	r6, r4
    c06c:	ldr	sl, [sp, #4]
    c070:	add	r7, r0, r2
    c074:	ldr	r3, [sl, #68]	; 0x44
    c078:	add	r3, ip, r3
    c07c:	cmp	r7, r3
    c080:	bhi	c134 <sas7bdat_parse_subheader_rdc+0x208>
    c084:	bl	4d28 <memset@plt>
    c088:	ldr	ip, [sp, #16]
    c08c:	ldr	r5, [sp, #8]
    c090:	ldr	r4, [sp, #12]
    c094:	mov	r0, r7
    c098:	mov	r8, r6
    c09c:	b	bfc0 <sas7bdat_parse_subheader_rdc+0x94>
    c0a0:	add	r8, r8, #3
    c0a4:	cmp	r8, r5
    c0a8:	bhi	c138 <sas7bdat_parse_subheader_rdc+0x20c>
    c0ac:	and	r2, r3, #15
    c0b0:	orr	r1, r2, r1, lsl #4
    c0b4:	add	r1, r1, #3
    c0b8:	ldrb	r2, [r6]
    c0bc:	add	r2, r2, #16
    c0c0:	b	c0dc <sas7bdat_parse_subheader_rdc+0x1b0>
    c0c4:	cmp	r2, #0
    c0c8:	beq	bfb8 <sas7bdat_parse_subheader_rdc+0x8c>
    c0cc:	and	r3, r3, #15
    c0d0:	orr	r1, r3, r1, lsl #4
    c0d4:	add	r1, r1, #3
    c0d8:	mov	r8, r6
    c0dc:	sub	r3, r0, ip
    c0e0:	cmp	r3, r1
    c0e4:	bcc	c138 <sas7bdat_parse_subheader_rdc+0x20c>
    c0e8:	cmp	r2, r1
    c0ec:	bhi	c138 <sas7bdat_parse_subheader_rdc+0x20c>
    c0f0:	add	r6, r0, r2
    c0f4:	ldr	sl, [sp, #4]
    c0f8:	ldr	r3, [sl, #68]	; 0x44
    c0fc:	add	r3, ip, r3
    c100:	cmp	r6, r3
    c104:	bhi	c134 <sas7bdat_parse_subheader_rdc+0x208>
    c108:	sub	r1, r0, r1
    c10c:	bl	4998 <memcpy@plt>
    c110:	ldr	ip, [sp, #16]
    c114:	ldr	r5, [sp, #8]
    c118:	ldr	r4, [sp, #12]
    c11c:	mov	r0, r6
    c120:	b	bfc0 <sas7bdat_parse_subheader_rdc+0x94>
    c124:	add	r1, r8, #2
    c128:	cmp	r1, r5
    c12c:	bls	bf9c <sas7bdat_parse_subheader_rdc+0x70>
    c130:	b	bf60 <sas7bdat_parse_subheader_rdc+0x34>
    c134:	mov	r7, #10
    c138:	mov	r0, ip
    c13c:	bl	4938 <free@plt>
    c140:	mov	r0, r7
    c144:	sub	sp, fp, #28
    c148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000c14c <sas7bdat_parse_subheader_rle>:
    c14c:	push	{r4, r5, r6, sl, fp, lr}
    c150:	add	fp, sp, #16
    c154:	sub	sp, sp, #8
    c158:	mov	r4, r2
    c15c:	mov	r3, r1
    c160:	mov	r2, r0
    c164:	ldr	r0, [r4, #76]	; 0x4c
    c168:	ldr	r1, [r4, #84]	; 0x54
    c16c:	mov	r5, #0
    c170:	cmp	r1, r0
    c174:	beq	c1e8 <sas7bdat_parse_subheader_rle+0x9c>
    c178:	ldr	r1, [r4, #68]	; 0x44
    c17c:	ldr	r0, [r4, #124]	; 0x7c
    c180:	bl	4ae8 <sas_rle_decompress@plt>
    c184:	ldr	r1, [r4, #68]	; 0x44
    c188:	cmp	r0, r1
    c18c:	bne	c1a4 <sas7bdat_parse_subheader_rle+0x58>
    c190:	ldr	r0, [r4, #124]	; 0x7c
    c194:	mov	r1, r4
    c198:	sub	sp, fp, #16
    c19c:	pop	{r4, r5, r6, sl, fp, lr}
    c1a0:	b	bb58 <sas7bdat_parse_single_row>
    c1a4:	ldr	r2, [r4, #24]
    c1a8:	mov	r5, #10
    c1ac:	cmp	r2, #0
    c1b0:	beq	c1e8 <sas7bdat_parse_subheader_rle+0x9c>
    c1b4:	ldr	r3, [r4, #76]	; 0x4c
    c1b8:	stm	sp, {r0, r1}
    c1bc:	movw	r0, #481	; 0x1e1
    c1c0:	add	r6, r4, r0
    c1c4:	ldr	r2, [pc, #40]	; c1f4 <sas7bdat_parse_subheader_rle+0xa8>
    c1c8:	add	r2, pc, r2
    c1cc:	mov	r0, r6
    c1d0:	mov	r1, #2048	; 0x800
    c1d4:	bl	4d04 <snprintf@plt>
    c1d8:	ldr	r2, [r4, #24]
    c1dc:	ldr	r1, [r4, #52]	; 0x34
    c1e0:	mov	r0, r6
    c1e4:	blx	r2
    c1e8:	mov	r0, r5
    c1ec:	sub	sp, fp, #16
    c1f0:	pop	{r4, r5, r6, sl, fp, pc}
    c1f4:	.word	0x00019b51

0000c1f8 <sas7bdat_submit_columns>:
    c1f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    c1fc:	add	fp, sp, #24
    c200:	sub	sp, sp, #64	; 0x40
    c204:	mov	r4, r0
    c208:	mov	r3, #0
    c20c:	str	r3, [fp, #-28]	; 0xffffffe4
    c210:	ldr	r2, [r0]
    c214:	cmp	r2, #0
    c218:	beq	c2d8 <sas7bdat_submit_columns+0xe0>
    c21c:	mov	r0, sp
    c220:	add	r7, r0, #8
    c224:	add	r0, r0, #24
    c228:	ldr	r6, [r4, #80]	; 0x50
    c22c:	ldr	r5, [r4, #84]	; 0x54
    c230:	str	r3, [sp, #4]
    c234:	str	r5, [sp]
    c238:	str	r6, [r7]
    c23c:	str	r3, [r7, #4]
    c240:	ldr	r7, [r4, #212]	; 0xd4
    c244:	ldr	r6, [r4, #216]	; 0xd8
    c248:	ldr	r8, [r4, #220]	; 0xdc
    c24c:	str	r7, [sp, #16]
    c250:	str	r6, [sp, #20]
    c254:	asr	r9, r8, #31
    c258:	strd	r8, [r0]
    c25c:	str	r3, [sp, #32]
    c260:	ldr	r0, [r4, #40]	; 0x28
    c264:	add	r7, r4, #224	; 0xe0
    c268:	str	r7, [sp, #44]	; 0x2c
    c26c:	str	r3, [sp, #40]	; 0x28
    c270:	mov	r3, #1
    c274:	cmp	r0, #0
    c278:	movweq	r3, #2
    c27c:	str	r3, [sp, #36]	; 0x24
    c280:	ldr	r0, [r4, #200]	; 0xc8
    c284:	str	r0, [sp, #48]	; 0x30
    c288:	ldrb	r0, [sp, #52]	; 0x34
    c28c:	and	r0, r0, #254	; 0xfe
    c290:	ldrb	r3, [r4, #44]	; 0x2c
    c294:	and	r3, r3, #1
    c298:	orr	r0, r0, r3
    c29c:	strb	r0, [sp, #52]	; 0x34
    c2a0:	cmp	r1, #0
    c2a4:	beq	c2bc <sas7bdat_submit_columns+0xc4>
    c2a8:	ldrb	r0, [r4, #2529]	; 0x9e1
    c2ac:	mov	r1, #2
    c2b0:	tst	r0, #1
    c2b4:	movweq	r1, #1
    c2b8:	str	r1, [sp, #32]
    c2bc:	ldr	r1, [r4, #52]	; 0x34
    c2c0:	mov	r0, sp
    c2c4:	blx	r2
    c2c8:	cmp	r0, #0
    c2cc:	beq	c2d8 <sas7bdat_submit_columns+0xe0>
    c2d0:	mov	r0, #4
    c2d4:	b	c398 <sas7bdat_submit_columns+0x1a0>
    c2d8:	ldr	r0, [r4, #80]	; 0x50
    c2dc:	cmp	r0, #0
    c2e0:	beq	c39c <sas7bdat_submit_columns+0x1a4>
    c2e4:	mov	r1, #4
    c2e8:	bl	4a28 <readstat_calloc@plt>
    c2ec:	str	r0, [r4, #196]	; 0xc4
    c2f0:	cmp	r0, #0
    c2f4:	beq	c394 <sas7bdat_submit_columns+0x19c>
    c2f8:	ldr	r0, [r4, #80]	; 0x50
    c2fc:	cmp	r0, #0
    c300:	beq	c39c <sas7bdat_submit_columns+0x1a4>
    c304:	mov	r5, #0
    c308:	sub	r9, fp, #28
    c30c:	mov	r8, #1
    c310:	mov	r7, #0
    c314:	b	c334 <sas7bdat_submit_columns+0x13c>
    c318:	cmp	r0, #1
    c31c:	beq	c2d0 <sas7bdat_submit_columns+0xd8>
    c320:	add	r5, r5, #1
    c324:	ldr	r0, [r4, #80]	; 0x50
    c328:	add	r7, r7, #1
    c32c:	cmp	r7, r0
    c330:	bcs	c39c <sas7bdat_submit_columns+0x1a4>
    c334:	mov	r0, r4
    c338:	mov	r1, r7
    c33c:	mov	r2, r5
    c340:	mov	r3, r9
    c344:	bl	c3a8 <sas7bdat_init_variable>
    c348:	ldr	r1, [r4, #196]	; 0xc4
    c34c:	str	r0, [r1, r7, lsl #2]
    c350:	ldr	r0, [r4, #196]	; 0xc4
    c354:	ldr	r1, [r0, r7, lsl #2]
    c358:	cmp	r1, #0
    c35c:	beq	c39c <sas7bdat_submit_columns+0x1a4>
    c360:	ldr	r6, [r4, #8]
    c364:	cmp	r6, #0
    c368:	beq	c320 <sas7bdat_submit_columns+0x128>
    c36c:	ldr	r3, [r4, #52]	; 0x34
    c370:	add	r2, r1, #308	; 0x134
    c374:	mov	r0, r7
    c378:	blx	r6
    c37c:	cmp	r0, #2
    c380:	bne	c318 <sas7bdat_submit_columns+0x120>
    c384:	ldr	r0, [r4, #196]	; 0xc4
    c388:	ldr	r0, [r0, r7, lsl #2]
    c38c:	str	r8, [r0, #2144]	; 0x860
    c390:	b	c324 <sas7bdat_submit_columns+0x12c>
    c394:	mov	r0, #3
    c398:	str	r0, [fp, #-28]	; 0xffffffe4
    c39c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c3a0:	sub	sp, fp, #24
    c3a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000c3a8 <sas7bdat_init_variable>:
    c3a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c3ac:	add	fp, sp, #28
    c3b0:	sub	sp, sp, #12
    c3b4:	mov	r8, r3
    c3b8:	mov	r5, r2
    c3bc:	mov	r9, r1
    c3c0:	mov	r4, r0
    c3c4:	mov	r0, #1
    c3c8:	movw	r1, #2152	; 0x868
    c3cc:	bl	4a28 <readstat_calloc@plt>
    c3d0:	mov	r6, r0
    c3d4:	str	r5, [r0, #2148]	; 0x864
    c3d8:	str	r9, [r0, #4]
    c3dc:	ldr	r0, [r4, #192]	; 0xc0
    c3e0:	add	sl, r9, r9, lsl #2
    c3e4:	add	r5, r0, sl, lsl #3
    c3e8:	ldr	r0, [r5, #36]	; 0x24
    c3ec:	str	r0, [r6]
    c3f0:	ldr	r0, [r5, #32]
    c3f4:	str	r0, [r6, #1596]	; 0x63c
    c3f8:	mov	r0, r5
    c3fc:	bl	c508 <sas7bdat_validate_column>
    c400:	mov	r7, r0
    c404:	cmp	r0, #0
    c408:	bne	c488 <sas7bdat_init_variable+0xe0>
    c40c:	ldrh	r3, [r5, #4]
    c410:	ldr	r2, [r5]
    c414:	str	r4, [sp]
    c418:	add	r0, r6, #8
    c41c:	mov	r1, #300	; 0x12c
    c420:	bl	c554 <sas7bdat_copy_text_ref>
    c424:	mov	r7, r0
    c428:	cmp	r0, #0
    c42c:	bne	c488 <sas7bdat_init_variable+0xe0>
    c430:	ldr	r0, [r4, #192]	; 0xc0
    c434:	add	r0, r0, sl, lsl #3
    c438:	ldrh	r3, [r0, #10]
    c43c:	ldr	r2, [r0, #6]
    c440:	str	r4, [sp]
    c444:	add	r0, r6, #308	; 0x134
    c448:	mov	r1, #256	; 0x100
    c44c:	bl	c554 <sas7bdat_copy_text_ref>
    c450:	mov	r7, r0
    c454:	cmp	r0, #0
    c458:	bne	c488 <sas7bdat_init_variable+0xe0>
    c45c:	ldr	r0, [r4, #192]	; 0xc0
    c460:	add	r0, r0, sl, lsl #3
    c464:	ldrh	r3, [r0, #16]
    c468:	ldr	r2, [r0, #12]
    c46c:	str	r4, [sp]
    c470:	add	r0, r6, #564	; 0x234
    c474:	mov	r1, #1024	; 0x400
    c478:	bl	c554 <sas7bdat_copy_text_ref>
    c47c:	mov	r7, r0
    c480:	cmp	r0, #0
    c484:	beq	c4f8 <sas7bdat_init_variable+0x150>
    c488:	mov	r0, r6
    c48c:	bl	4938 <free@plt>
    c490:	cmp	r8, #0
    c494:	strne	r7, [r8]
    c498:	cmp	r7, #17
    c49c:	bne	c4f4 <sas7bdat_init_variable+0x14c>
    c4a0:	ldr	r0, [r4, #24]
    c4a4:	cmp	r0, #0
    c4a8:	beq	c4f4 <sas7bdat_init_variable+0x14c>
    c4ac:	add	r0, r6, #564	; 0x234
    c4b0:	add	r1, r6, #308	; 0x134
    c4b4:	add	r2, r6, #8
    c4b8:	str	r2, [sp]
    c4bc:	str	r1, [sp, #4]
    c4c0:	str	r0, [sp, #8]
    c4c4:	movw	r0, #481	; 0x1e1
    c4c8:	add	r5, r4, r0
    c4cc:	ldr	r2, [pc, #48]	; c504 <sas7bdat_init_variable+0x15c>
    c4d0:	add	r2, pc, r2
    c4d4:	mov	r0, r5
    c4d8:	mov	r1, #2048	; 0x800
    c4dc:	mov	r3, r9
    c4e0:	bl	4d04 <snprintf@plt>
    c4e4:	ldr	r2, [r4, #24]
    c4e8:	ldr	r1, [r4, #52]	; 0x34
    c4ec:	mov	r0, r5
    c4f0:	blx	r2
    c4f4:	mov	r6, #0
    c4f8:	mov	r0, r6
    c4fc:	sub	sp, fp, #28
    c500:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c504:	.word	0x00019889

0000c508 <sas7bdat_validate_column>:
    c508:	ldr	r1, [r0, #36]	; 0x24
    c50c:	cmp	r1, #0
    c510:	beq	c534 <sas7bdat_validate_column+0x2c>
    c514:	cmp	r1, #5
    c518:	bne	c54c <sas7bdat_validate_column+0x44>
    c51c:	ldr	r0, [r0, #32]
    c520:	sub	r1, r0, #3
    c524:	mov	r0, #5
    c528:	cmp	r1, #5
    c52c:	movls	r0, #0
    c530:	bx	lr
    c534:	ldr	r0, [r0, #32]
    c538:	sub	r1, r0, #1
    c53c:	mov	r0, #5
    c540:	movw	r2, #32766	; 0x7ffe
    c544:	cmp	r1, r2
    c548:	bxhi	lr
    c54c:	mov	r0, #0
    c550:	bx	lr

0000c554 <sas7bdat_copy_text_ref>:
    c554:	push	{r4, r5, r6, sl, fp, lr}
    c558:	add	fp, sp, #16
    c55c:	sub	sp, sp, #8
    c560:	uxth	lr, r2
    c564:	ldr	r4, [fp, #8]
    c568:	ldr	r5, [r4, #152]	; 0x98
    c56c:	mov	ip, #5
    c570:	cmp	lr, r5
    c574:	bge	c5c4 <sas7bdat_copy_text_ref+0x70>
    c578:	uxth	r3, r3
    c57c:	cmp	r3, #0
    c580:	beq	c5bc <sas7bdat_copy_text_ref+0x68>
    c584:	lsr	r2, r2, #16
    c588:	ldr	r5, [r4, #156]	; 0x9c
    c58c:	ldr	r5, [r5, lr, lsl #2]
    c590:	add	r6, r2, r3
    c594:	cmp	r6, r5
    c598:	bhi	c5c4 <sas7bdat_copy_text_ref+0x70>
    c59c:	ldr	r6, [r4, #160]	; 0xa0
    c5a0:	ldr	r5, [r4, #208]	; 0xd0
    c5a4:	ldr	r6, [r6, lr, lsl #2]
    c5a8:	str	r5, [sp]
    c5ac:	add	r2, r6, r2
    c5b0:	bl	4cbc <readstat_convert@plt>
    c5b4:	sub	sp, fp, #16
    c5b8:	pop	{r4, r5, r6, sl, fp, pc}
    c5bc:	mov	ip, #0
    c5c0:	strb	ip, [r0]
    c5c4:	mov	r0, ip
    c5c8:	sub	sp, fp, #16
    c5cc:	pop	{r4, r5, r6, sl, fp, pc}

0000c5d0 <readstat_begin_writing_sas7bdat>:
    c5d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c5d4:	add	fp, sp, #28
    c5d8:	mov	r8, r2
    c5dc:	ldr	r3, [r0, #8]
    c5e0:	cmp	r3, #0
    c5e4:	moveq	r3, #9
    c5e8:	streq	r3, [r0, #8]
    c5ec:	ldr	r5, [pc, #184]	; c6ac <readstat_begin_writing_sas7bdat+0xdc>
    c5f0:	add	r5, pc, r5
    c5f4:	ldr	r4, [pc, #180]	; c6b0 <readstat_begin_writing_sas7bdat+0xe0>
    c5f8:	add	r4, pc, r4
    c5fc:	ldr	lr, [pc, #176]	; c6b4 <readstat_begin_writing_sas7bdat+0xe4>
    c600:	add	lr, pc, lr
    c604:	ldr	r7, [pc, #172]	; c6b8 <readstat_begin_writing_sas7bdat+0xe8>
    c608:	add	r7, pc, r7
    c60c:	ldr	r6, [pc, #168]	; c6bc <readstat_begin_writing_sas7bdat+0xec>
    c610:	add	r6, pc, r6
    c614:	ldr	r3, [pc, #164]	; c6c0 <readstat_begin_writing_sas7bdat+0xf0>
    c618:	add	r3, pc, r3
    c61c:	ldr	r2, [pc, #160]	; c6c4 <readstat_begin_writing_sas7bdat+0xf4>
    c620:	add	r2, pc, r2
    c624:	ldr	r9, [pc, #156]	; c6c8 <readstat_begin_writing_sas7bdat+0xf8>
    c628:	add	r9, pc, r9
    c62c:	ldr	ip, [pc, #152]	; c6cc <readstat_begin_writing_sas7bdat+0xfc>
    c630:	add	ip, pc, ip
    c634:	ldr	sl, [pc, #148]	; c6d0 <readstat_begin_writing_sas7bdat+0x100>
    c638:	add	sl, pc, sl
    c63c:	str	lr, [r0, #264]	; 0x108
    c640:	add	lr, r0, #268	; 0x10c
    c644:	stm	lr, {r4, r5, r9, sl}
    c648:	add	lr, r0, #284	; 0x11c
    c64c:	stm	lr, {r2, r3, r6}
    c650:	ldr	r2, [pc, #124]	; c6d4 <readstat_begin_writing_sas7bdat+0x104>
    c654:	ldr	r2, [pc, r2]
    c658:	str	ip, [r0, #228]	; 0xe4
    c65c:	str	r2, [r0, #232]	; 0xe8
    c660:	str	r7, [r0, #236]	; 0xec
    c664:	ldr	r2, [pc, #108]	; c6d8 <readstat_begin_writing_sas7bdat+0x108>
    c668:	add	r2, pc, r2
    c66c:	str	r2, [r0, #240]	; 0xf0
    c670:	ldr	r2, [pc, #100]	; c6dc <readstat_begin_writing_sas7bdat+0x10c>
    c674:	add	r2, pc, r2
    c678:	str	r2, [r0, #244]	; 0xf4
    c67c:	ldr	r2, [pc, #92]	; c6e0 <readstat_begin_writing_sas7bdat+0x110>
    c680:	add	r2, pc, r2
    c684:	str	r2, [r0, #248]	; 0xf8
    c688:	ldr	r2, [pc, #84]	; c6e4 <readstat_begin_writing_sas7bdat+0x114>
    c68c:	add	r2, pc, r2
    c690:	str	r2, [r0, #252]	; 0xfc
    c694:	ldr	r2, [pc, #76]	; c6e8 <readstat_begin_writing_sas7bdat+0x118>
    c698:	add	r2, pc, r2
    c69c:	str	r2, [r0, #256]	; 0x100
    c6a0:	mov	r2, r8
    c6a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c6a8:	b	49d4 <readstat_begin_writing_file@plt>
    c6ac:	.word	0x0000021c
    c6b0:	.word	0x000001fc
    c6b4:	.word	0x000001ec
    c6b8:	.word	0x000000f0
    c6bc:	.word	0x000000d4
    c6c0:	.word	0x000002c4
    c6c4:	.word	0x000002a0
    c6c8:	.word	0x0000023c
    c6cc:	.word	0x00000224
    c6d0:	.word	0x000002a8
    c6d4:	.word	0x00038c9c
    c6d8:	.word	0x000000ac
    c6dc:	.word	0x000000bc
    c6e0:	.word	0x000000cc
    c6e4:	.word	0x000000d8
    c6e8:	.word	0x000000d8

0000c6ec <sas7bdat_metadata_ok>:
    c6ec:	ldr	r1, [r0, #16]
    c6f0:	mov	r0, #6
    c6f4:	cmp	r1, #2
    c6f8:	movwcc	r0, #0
    c6fc:	bx	lr

0000c700 <sas7bdat_write_int8>:
    c700:	push	{fp, lr}
    c704:	mov	fp, sp
    c708:	vmov	s0, r2
    c70c:	vcvt.f64.s32	d0, s0
    c710:	bl	c76c <sas7bdat_write_double>
    c714:	mov	r0, #0
    c718:	pop	{fp, pc}

0000c71c <sas7bdat_write_int16>:
    c71c:	push	{fp, lr}
    c720:	mov	fp, sp
    c724:	vmov	s0, r2
    c728:	vcvt.f64.s32	d0, s0
    c72c:	bl	c76c <sas7bdat_write_double>
    c730:	mov	r0, #0
    c734:	pop	{fp, pc}

0000c738 <sas7bdat_write_int32>:
    c738:	push	{fp, lr}
    c73c:	mov	fp, sp
    c740:	vmov	s0, r2
    c744:	vcvt.f64.s32	d0, s0
    c748:	bl	c76c <sas7bdat_write_double>
    c74c:	mov	r0, #0
    c750:	pop	{fp, pc}

0000c754 <sas7bdat_write_float>:
    c754:	push	{fp, lr}
    c758:	mov	fp, sp
    c75c:	vcvt.f64.f32	d0, s0
    c760:	bl	c76c <sas7bdat_write_double>
    c764:	mov	r0, #0
    c768:	pop	{fp, pc}

0000c76c <sas7bdat_write_double>:
    c76c:	vst1.8	{d0}, [r0]
    c770:	mov	r0, #0
    c774:	bx	lr

0000c778 <sas7bdat_write_string>:
    c778:	push	{r4, r5, r6, r7, fp, lr}
    c77c:	add	fp, sp, #16
    c780:	mov	r5, r2
    c784:	mov	r4, r0
    c788:	mov	r0, r1
    c78c:	bl	4d58 <readstat_variable_get_storage_width@plt>
    c790:	mov	r6, r0
    c794:	cmp	r5, #0
    c798:	beq	c7d8 <sas7bdat_write_string+0x60>
    c79c:	ldrb	r0, [r5]
    c7a0:	cmp	r0, #0
    c7a4:	beq	c7d8 <sas7bdat_write_string+0x60>
    c7a8:	mov	r0, r5
    c7ac:	bl	4c8c <strlen@plt>
    c7b0:	mov	r7, #22
    c7b4:	cmp	r0, r6
    c7b8:	bhi	c7d0 <sas7bdat_write_string+0x58>
    c7bc:	mov	r0, r4
    c7c0:	mov	r1, r5
    c7c4:	mov	r2, r6
    c7c8:	bl	4d4c <strncpy@plt>
    c7cc:	mov	r7, #0
    c7d0:	mov	r0, r7
    c7d4:	pop	{r4, r5, r6, r7, fp, pc}
    c7d8:	mov	r7, #0
    c7dc:	mov	r0, r4
    c7e0:	mov	r1, #0
    c7e4:	mov	r2, r6
    c7e8:	bl	4d28 <memset@plt>
    c7ec:	mov	r0, r7
    c7f0:	pop	{r4, r5, r6, r7, fp, pc}

0000c7f4 <sas7bdat_write_missing_string>:
    c7f4:	mov	r2, #0
    c7f8:	b	c778 <sas7bdat_write_string>

0000c7fc <sas7bdat_write_missing_numeric>:
    c7fc:	push	{fp, lr}
    c800:	mov	fp, sp
    c804:	mov	r2, #46	; 0x2e
    c808:	bl	c924 <sas7bdat_write_missing_tagged_raw>
    c80c:	mov	r0, #0
    c810:	pop	{fp, pc}

0000c814 <sas7bdat_write_missing_tagged>:
    c814:	push	{r4, r5, r6, r7, fp, lr}
    c818:	add	fp, sp, #16
    c81c:	mov	r4, r2
    c820:	mov	r5, r1
    c824:	mov	r7, r0
    c828:	mov	r0, r2
    c82c:	bl	4bcc <sas_validate_tag@plt>
    c830:	mov	r6, r0
    c834:	cmp	r0, #0
    c838:	beq	c844 <sas7bdat_write_missing_tagged+0x30>
    c83c:	mov	r0, r6
    c840:	pop	{r4, r5, r6, r7, fp, pc}
    c844:	mov	r0, r7
    c848:	mov	r1, r5
    c84c:	mov	r2, r4
    c850:	bl	c924 <sas7bdat_write_missing_tagged_raw>
    c854:	mov	r0, r6
    c858:	pop	{r4, r5, r6, r7, fp, pc}

0000c85c <sas7bdat_variable_width>:
    c85c:	cmp	r0, #0
    c860:	movne	r1, #8
    c864:	mov	r0, r1
    c868:	bx	lr

0000c86c <sas7bdat_begin_data>:
    c86c:	push	{r4, r5, r6, sl, fp, lr}
    c870:	add	fp, sp, #16
    c874:	mov	r4, r0
    c878:	bl	c940 <sas7bdat_write_ctx_init>
    c87c:	str	r0, [r4, #300]	; 0x12c
    c880:	ldr	r0, [r4, #16]
    c884:	mov	r5, #0
    c888:	cmp	r0, #0
    c88c:	bne	c8c0 <sas7bdat_begin_data+0x54>
    c890:	mov	r0, r4
    c894:	bl	c9dc <sas7bdat_emit_header_and_meta_pages>
    c898:	cmp	r0, #0
    c89c:	beq	c8c0 <sas7bdat_begin_data+0x54>
    c8a0:	mov	r6, r0
    c8a4:	ldr	r0, [r4, #300]	; 0x12c
    c8a8:	cmp	r0, #0
    c8ac:	beq	c8bc <sas7bdat_begin_data+0x50>
    c8b0:	bl	ca70 <sas7bdat_write_ctx_free>
    c8b4:	mov	r0, #0
    c8b8:	str	r0, [r4, #300]	; 0x12c
    c8bc:	mov	r5, r6
    c8c0:	mov	r0, r5
    c8c4:	pop	{r4, r5, r6, sl, fp, pc}

0000c8c8 <sas7bdat_end_data>:
    c8c8:	ldr	r1, [r0, #16]
    c8cc:	cmp	r1, #1
    c8d0:	bne	c8d8 <sas7bdat_end_data+0x10>
    c8d4:	b	c9dc <sas7bdat_emit_header_and_meta_pages>
    c8d8:	ldr	r1, [r0, #300]	; 0x12c
    c8dc:	ldr	r1, [r1]
    c8e0:	b	4f14 <sas_fill_page@plt>

0000c8e4 <sas7bdat_module_ctx_free>:
    c8e4:	b	ca70 <sas7bdat_write_ctx_free>

0000c8e8 <sas7bdat_write_row>:
    c8e8:	mov	ip, r2
    c8ec:	mov	r2, r1
    c8f0:	ldr	r3, [r0, #16]
    c8f4:	ldr	r1, [r0, #300]	; 0x12c
    c8f8:	cmp	r3, #1
    c8fc:	beq	c914 <sas7bdat_write_row+0x2c>
    c900:	cmp	r3, #0
    c904:	movne	r0, #0
    c908:	bxne	lr
    c90c:	mov	r3, ip
    c910:	b	d9e4 <sas7bdat_write_row_uncompressed>
    c914:	mov	r0, r1
    c918:	mov	r1, r2
    c91c:	mov	r2, ip
    c920:	b	dad0 <sas7bdat_write_row_compressed>

0000c924 <sas7bdat_write_missing_tagged_raw>:
    c924:	eor	r2, r2, #255	; 0xff
    c928:	movw	r3, #0
    c92c:	movt	r3, #32760	; 0x7ff8
    c930:	orr	r2, r3, r2, lsl #8
    c934:	mov	r3, #0
    c938:	vmov	d0, r3, r2
    c93c:	b	c76c <sas7bdat_write_double>

0000c940 <sas7bdat_write_ctx_init>:
    c940:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    c944:	add	fp, sp, #24
    c948:	mov	r4, r0
    c94c:	mov	r0, #1
    c950:	mov	r1, #8
    c954:	bl	47d0 <calloc@plt>
    c958:	mov	r8, r0
    c95c:	ldr	r1, [r4, #12]
    c960:	mov	r0, r4
    c964:	bl	4de8 <sas_header_info_init@plt>
    c968:	mov	r6, r0
    c96c:	mov	r0, r4
    c970:	bl	ca98 <sas7bdat_row_length>
    c974:	mov	r7, r0
    c978:	mov	r0, r4
    c97c:	mov	r1, r6
    c980:	mov	r2, r7
    c984:	bl	cb0c <sas7bdat_page_is_too_small>
    c988:	cmp	r0, #0
    c98c:	beq	c9c0 <sas7bdat_write_ctx_init+0x80>
    c990:	add	r5, r6, #32
    c994:	ldrd	r0, [r5]
    c998:	lsl	r2, r0, #1
    c99c:	lsl	r1, r1, #1
    c9a0:	orr	r3, r1, r0, lsr #31
    c9a4:	strd	r2, [r5]
    c9a8:	mov	r0, r4
    c9ac:	mov	r1, r6
    c9b0:	mov	r2, r7
    c9b4:	bl	cb0c <sas7bdat_page_is_too_small>
    c9b8:	cmp	r0, #0
    c9bc:	bne	c994 <sas7bdat_write_ctx_init+0x54>
    c9c0:	str	r6, [r8]
    c9c4:	mov	r0, r4
    c9c8:	mov	r1, r6
    c9cc:	bl	cbb4 <sas7bdat_subheader_array_init>
    c9d0:	str	r0, [r8, #4]
    c9d4:	mov	r0, r8
    c9d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000c9dc <sas7bdat_emit_header_and_meta_pages>:
    c9dc:	push	{r4, r5, r6, sl, fp, lr}
    c9e0:	add	fp, sp, #16
    c9e4:	mov	r4, r0
    c9e8:	ldr	r6, [r0, #300]	; 0x12c
    c9ec:	bl	ca98 <sas7bdat_row_length>
    c9f0:	cmp	r0, #0
    c9f4:	beq	ca60 <sas7bdat_emit_header_and_meta_pages+0x84>
    c9f8:	ldr	r0, [r4, #16]
    c9fc:	cmp	r0, #0
    ca00:	bne	ca18 <sas7bdat_emit_header_and_meta_pages+0x3c>
    ca04:	ldr	r1, [r6]
    ca08:	mov	r0, r4
    ca0c:	bl	d4c4 <sas7bdat_rows_per_page>
    ca10:	cmp	r0, #0
    ca14:	beq	ca68 <sas7bdat_emit_header_and_meta_pages+0x8c>
    ca18:	mov	r0, r4
    ca1c:	bl	d4f4 <sas7bdat_count_meta_pages>
    ca20:	mov	r5, r0
    ca24:	ldr	r1, [r6]
    ca28:	mov	r0, r4
    ca2c:	bl	d568 <sas7bdat_count_data_pages>
    ca30:	add	r0, r0, r5
    ca34:	asr	r3, r0, #31
    ca38:	ldr	r1, [r6]
    ca3c:	str	r0, [r1, #56]	; 0x38
    ca40:	str	r3, [r1, #60]	; 0x3c
    ca44:	mov	r0, r4
    ca48:	bl	d5a0 <sas7bdat_emit_header>
    ca4c:	cmp	r0, #0
    ca50:	popne	{r4, r5, r6, sl, fp, pc}
    ca54:	mov	r0, r4
    ca58:	pop	{r4, r5, r6, sl, fp, lr}
    ca5c:	b	d68c <sas7bdat_emit_meta_pages>
    ca60:	mov	r0, #36	; 0x24
    ca64:	pop	{r4, r5, r6, sl, fp, pc}
    ca68:	mov	r0, #35	; 0x23
    ca6c:	pop	{r4, r5, r6, sl, fp, pc}

0000ca70 <sas7bdat_write_ctx_free>:
    ca70:	push	{r4, sl, fp, lr}
    ca74:	add	fp, sp, #8
    ca78:	mov	r4, r0
    ca7c:	ldr	r0, [r0]
    ca80:	bl	4938 <free@plt>
    ca84:	ldr	r0, [r4, #4]
    ca88:	bl	d960 <sas7bdat_subheader_array_free>
    ca8c:	mov	r0, r4
    ca90:	pop	{r4, sl, fp, lr}
    ca94:	b	4938 <free@plt>

0000ca98 <sas7bdat_row_length>:
    ca98:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    ca9c:	add	fp, sp, #24
    caa0:	mov	r8, r0
    caa4:	ldr	r0, [r0, #28]
    caa8:	cmp	r0, #1
    caac:	blt	cb00 <sas7bdat_row_length+0x68>
    cab0:	mov	r6, #0
    cab4:	mov	r5, #0
    cab8:	mov	r0, r8
    cabc:	mov	r1, r6
    cac0:	bl	4e18 <readstat_get_variable@plt>
    cac4:	mov	r7, r0
    cac8:	bl	4c5c <readstat_variable_get_type@plt>
    cacc:	mov	r4, r0
    cad0:	mov	r0, r7
    cad4:	bl	4d58 <readstat_variable_get_storage_width@plt>
    cad8:	mov	r1, r0
    cadc:	mov	r0, r4
    cae0:	bl	c85c <sas7bdat_variable_width>
    cae4:	add	r5, r0, r5
    cae8:	add	r6, r6, #1
    caec:	ldr	r0, [r8, #28]
    caf0:	cmp	r6, r0
    caf4:	blt	cab8 <sas7bdat_row_length+0x20>
    caf8:	mov	r0, r5
    cafc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    cb00:	mov	r5, #0
    cb04:	mov	r0, r5
    cb08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000cb0c <sas7bdat_page_is_too_small>:
    cb0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    cb10:	add	fp, sp, #24
    cb14:	mov	r5, r1
    cb18:	mov	r6, r0
    cb1c:	ldr	r0, [r1, #32]
    cb20:	ldr	r1, [r1, #40]	; 0x28
    cb24:	subs	r7, r0, r1
    cb28:	ldr	r0, [r6, #16]
    cb2c:	mov	r4, #1
    cb30:	cmp	r0, #0
    cb34:	bne	cb40 <sas7bdat_page_is_too_small+0x34>
    cb38:	cmp	r7, r2
    cb3c:	bcc	cbac <sas7bdat_page_is_too_small+0xa0>
    cb40:	add	r8, r5, #48	; 0x30
    cb44:	cmp	r0, #1
    cb48:	bne	cb64 <sas7bdat_page_is_too_small+0x58>
    cb4c:	ldrd	r0, [r8]
    cb50:	adds	r0, r0, r2
    cb54:	adc	r1, r1, #0
    cb58:	subs	r0, r7, r0
    cb5c:	rscs	r0, r1, #0
    cb60:	blt	cbac <sas7bdat_page_is_too_small+0xa0>
    cb64:	mov	r0, r6
    cb68:	mov	r1, r5
    cb6c:	bl	ce1c <sas7bdat_col_name_subheader_length>
    cb70:	ldrd	r8, [r8]
    cb74:	adds	r0, r8, r0
    cb78:	adc	r1, r9, #0
    cb7c:	subs	r0, r7, r0
    cb80:	rscs	r0, r1, #0
    cb84:	blt	cbac <sas7bdat_page_is_too_small+0xa0>
    cb88:	mov	r0, r6
    cb8c:	mov	r1, r5
    cb90:	bl	ce38 <sas7bdat_col_attrs_subheader_length>
    cb94:	adds	r0, r8, r0
    cb98:	adc	r1, r9, #0
    cb9c:	mov	r4, #0
    cba0:	subs	r0, r7, r0
    cba4:	rscs	r0, r1, #0
    cba8:	movwlt	r4, #1
    cbac:	mov	r0, r4
    cbb0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000cbb4 <sas7bdat_subheader_array_init>:
    cbb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cbb8:	add	fp, sp, #28
    cbbc:	sub	sp, sp, #28
    cbc0:	mov	r7, r1
    cbc4:	mov	r9, r0
    cbc8:	mov	r4, #1
    cbcc:	mov	r0, #1
    cbd0:	mov	r1, #16
    cbd4:	bl	47d0 <calloc@plt>
    cbd8:	mov	r6, r0
    cbdc:	mov	r5, #0
    cbe0:	strd	r4, [r6]
    cbe4:	mov	r0, #4
    cbe8:	bl	4b90 <malloc@plt>
    cbec:	str	r0, [r6, #8]
    cbf0:	ldr	r0, [r7, #32]
    cbf4:	ldr	r1, [r7, #40]	; 0x28
    cbf8:	ldr	r2, [r7, #48]	; 0x30
    cbfc:	sub	r0, r0, r1
    cc00:	sub	r4, r0, r2
    cc04:	mov	r0, r7
    cc08:	mov	r1, #0
    cc0c:	bl	ce98 <sas7bdat_col_text_subheader_length>
    cc10:	sub	r2, r4, r0
    cc14:	mov	r0, #0
    cc18:	mov	r1, #0
    cc1c:	bl	ce5c <sas7bdat_column_text_init>
    cc20:	ldr	r1, [r6, #8]
    cc24:	str	r0, [r1]
    cc28:	mov	r0, #1
    cc2c:	mov	r1, #24
    cc30:	bl	47d0 <calloc@plt>
    cc34:	mov	r8, r0
    cc38:	ldr	r0, [r9, #28]
    cc3c:	add	r0, r0, #4
    cc40:	asr	r1, r0, #31
    cc44:	strd	r0, [r8]
    cc48:	str	r0, [sp, #16]
    cc4c:	mov	r1, #4
    cc50:	bl	47d0 <calloc@plt>
    cc54:	mov	r4, r0
    cc58:	str	r0, [r8, #16]
    cc5c:	mov	r0, r9
    cc60:	mov	r1, r7
    cc64:	mov	r2, r6
    cc68:	bl	cec4 <sas7bdat_col_name_subheader_init>
    cc6c:	mov	sl, r0
    cc70:	mov	r0, r9
    cc74:	mov	r1, r7
    cc78:	bl	cf90 <sas7bdat_col_attrs_subheader_init>
    cc7c:	str	r0, [sp, #24]
    cc80:	mov	r0, r9
    cc84:	mov	r1, r7
    cc88:	bl	d0cc <sas7bdat_row_size_subheader_init>
    cc8c:	str	r4, [sp, #8]
    cc90:	str	r0, [r4]
    cc94:	mov	r0, r9
    cc98:	mov	r1, r7
    cc9c:	bl	d19c <sas7bdat_col_size_subheader_init>
    cca0:	ldr	r1, [r8, #16]
    cca4:	str	r0, [r1, #4]
    cca8:	ldr	r4, [r9, #28]
    ccac:	mov	r0, r4
    ccb0:	mov	r1, #4
    ccb4:	bl	47d0 <calloc@plt>
    ccb8:	cmp	r4, #1
    ccbc:	mov	r4, r0
    ccc0:	blt	ccf0 <sas7bdat_subheader_array_init+0x13c>
    ccc4:	mov	r0, r9
    ccc8:	mov	r1, r5
    cccc:	bl	4e18 <readstat_get_variable@plt>
    ccd0:	mov	r1, r7
    ccd4:	mov	r2, r6
    ccd8:	bl	d1ec <sas7bdat_col_format_subheader_init>
    ccdc:	str	r0, [r4, r5, lsl #2]
    cce0:	add	r5, r5, #1
    cce4:	ldr	r0, [r9, #28]
    cce8:	cmp	r5, r0
    ccec:	blt	ccc4 <sas7bdat_subheader_array_init+0x110>
    ccf0:	str	r4, [sp, #20]
    ccf4:	ldrd	r4, [r6]
    ccf8:	ldr	r1, [sp, #16]
    ccfc:	adds	r0, r4, r1
    cd00:	adc	r1, r5, r1, asr #31
    cd04:	str	r1, [sp, #12]
    cd08:	strd	r0, [r8]
    cd0c:	str	r0, [sp, #16]
    cd10:	lsl	r1, r0, #2
    cd14:	ldr	r0, [sp, #8]
    cd18:	bl	4a64 <realloc@plt>
    cd1c:	str	r0, [sp, #8]
    cd20:	str	r0, [r8, #16]
    cd24:	subs	r0, r4, #1
    cd28:	sbcs	r0, r5, #0
    cd2c:	blt	cd78 <sas7bdat_subheader_array_init+0x1c4>
    cd30:	str	sl, [sp]
    cd34:	str	r6, [sp, #4]
    cd38:	ldr	r6, [r6, #8]
    cd3c:	mov	sl, #0
    cd40:	ldr	r1, [r6, sl, lsl #2]
    cd44:	mov	r0, r7
    cd48:	bl	d2d4 <sas7bdat_col_text_subheader_init>
    cd4c:	ldr	r1, [r8, #16]
    cd50:	add	r1, r1, sl, lsl #2
    cd54:	str	r0, [r1, #8]
    cd58:	add	sl, sl, #1
    cd5c:	subs	r0, sl, r4
    cd60:	rscs	r0, r5, #0
    cd64:	blt	cd40 <sas7bdat_subheader_array_init+0x18c>
    cd68:	add	r4, sl, #2
    cd6c:	ldr	r6, [sp, #4]
    cd70:	ldr	sl, [sp]
    cd74:	b	cd7c <sas7bdat_subheader_array_init+0x1c8>
    cd78:	mov	r4, #2
    cd7c:	mov	r0, r6
    cd80:	bl	d344 <sas7bdat_column_text_array_free>
    cd84:	ldr	r0, [r8, #16]
    cd88:	mov	r1, r0
    cd8c:	str	sl, [r1, r4, lsl #2]!
    cd90:	ldr	r2, [sp, #24]
    cd94:	str	r2, [r1, #4]
    cd98:	ldr	r1, [r9, #28]
    cd9c:	cmp	r1, #1
    cda0:	ldr	r5, [sp, #20]
    cda4:	blt	cdc8 <sas7bdat_subheader_array_init+0x214>
    cda8:	add	r0, r0, r4, lsl #2
    cdac:	add	r0, r0, #8
    cdb0:	ldr	r1, [r9, #28]
    cdb4:	cmp	r1, #1
    cdb8:	movle	r1, #1
    cdbc:	lsl	r2, r1, #2
    cdc0:	mov	r1, r5
    cdc4:	bl	4998 <memcpy@plt>
    cdc8:	mov	r0, r5
    cdcc:	bl	4938 <free@plt>
    cdd0:	mov	r0, r8
    cdd4:	ldr	r2, [sp, #16]
    cdd8:	str	r2, [r0, #8]!
    cddc:	ldr	r3, [sp, #12]
    cde0:	str	r3, [r0, #4]
    cde4:	ldr	r1, [r9, #16]
    cde8:	cmp	r1, #1
    cdec:	bne	ce10 <sas7bdat_subheader_array_init+0x25c>
    cdf0:	ldr	r1, [r9, #80]	; 0x50
    cdf4:	adds	r2, r2, r1
    cdf8:	adc	r3, r3, r1, asr #31
    cdfc:	strd	r2, [r0]
    ce00:	lsl	r1, r2, #2
    ce04:	ldr	r0, [sp, #8]
    ce08:	bl	4a64 <realloc@plt>
    ce0c:	str	r0, [r8, #16]
    ce10:	mov	r0, r8
    ce14:	sub	sp, fp, #28
    ce18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000ce1c <sas7bdat_col_name_subheader_length>:
    ce1c:	ldr	r1, [r1, #4]
    ce20:	mov	r2, #28
    ce24:	cmp	r1, #0
    ce28:	movweq	r2, #20
    ce2c:	ldr	r0, [r0, #28]
    ce30:	add	r0, r2, r0, lsl #3
    ce34:	bx	lr

0000ce38 <sas7bdat_col_attrs_subheader_length>:
    ce38:	ldr	r2, [r0, #28]
    ce3c:	mov	r0, #28
    ce40:	add	r0, r0, r2, lsl #4
    ce44:	add	r2, r2, r2, lsl #1
    ce48:	mov	r3, #20
    ce4c:	ldr	r1, [r1, #4]
    ce50:	cmp	r1, #0
    ce54:	addeq	r0, r3, r2, lsl #2
    ce58:	bx	lr

0000ce5c <sas7bdat_column_text_init>:
    ce5c:	push	{r4, r5, r6, r7, fp, lr}
    ce60:	add	fp, sp, #16
    ce64:	mov	r5, r2
    ce68:	mov	r7, r1
    ce6c:	mov	r6, r0
    ce70:	mov	r0, #1
    ce74:	mov	r1, #24
    ce78:	bl	47d0 <calloc@plt>
    ce7c:	mov	r4, r0
    ce80:	mov	r0, r5
    ce84:	bl	4b90 <malloc@plt>
    ce88:	strd	r6, [r4, #16]
    ce8c:	stm	r4, {r0, r5}
    ce90:	mov	r0, r4
    ce94:	pop	{r4, r5, r6, r7, fp, pc}

0000ce98 <sas7bdat_col_text_subheader_length>:
    ce98:	ldr	r0, [r0, #4]
    ce9c:	cmp	r1, #0
    cea0:	beq	ceac <sas7bdat_col_text_subheader_length+0x14>
    cea4:	ldr	r1, [r1, #8]
    cea8:	b	ceb0 <sas7bdat_col_text_subheader_length+0x18>
    ceac:	mov	r1, #0
    ceb0:	mov	r2, #36	; 0x24
    ceb4:	cmp	r0, #0
    ceb8:	movweq	r2, #32
    cebc:	add	r0, r1, r2
    cec0:	bx	lr

0000cec4 <sas7bdat_col_name_subheader_init>:
    cec4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    cec8:	add	fp, sp, #24
    cecc:	sub	sp, sp, #8
    ced0:	mov	r4, r2
    ced4:	mov	r6, r1
    ced8:	mov	r5, r0
    cedc:	bl	ce1c <sas7bdat_col_name_subheader_length>
    cee0:	mov	r7, r0
    cee4:	ldr	r0, [r6, #4]
    cee8:	mov	r6, #8
    ceec:	cmp	r0, #0
    cef0:	movweq	r6, #4
    cef4:	mov	r0, r7
    cef8:	mov	r1, r6
    cefc:	bl	4e54 <sas_subheader_remainder@plt>
    cf00:	mov	r9, r0
    cf04:	mvn	r0, #0
    cf08:	mov	r1, r7
    cf0c:	bl	d398 <sas7bdat_subheader_init>
    cf10:	mov	r8, r0
    cf14:	ldr	r0, [r0, #4]
    cf18:	add	r0, r0, r6
    cf1c:	strh	r9, [r0]
    cf20:	ldr	r1, [r5, #28]
    cf24:	cmp	r1, #1
    cf28:	blt	cf84 <sas7bdat_col_name_subheader_init+0xc0>
    cf2c:	add	r6, r0, #8
    cf30:	mov	r7, #0
    cf34:	mov	r9, sp
    cf38:	mov	r0, r5
    cf3c:	mov	r1, r7
    cf40:	bl	4e18 <readstat_get_variable@plt>
    cf44:	bl	4e00 <readstat_variable_get_name@plt>
    cf48:	mov	r2, r0
    cf4c:	mov	r0, r9
    cf50:	mov	r1, r4
    cf54:	bl	d3d8 <sas7bdat_make_text_ref>
    cf58:	ldrh	r0, [sp]
    cf5c:	strh	r0, [r6]
    cf60:	ldrh	r0, [sp, #2]
    cf64:	strh	r0, [r6, #2]
    cf68:	ldrh	r0, [sp, #4]
    cf6c:	strh	r0, [r6, #4]
    cf70:	add	r6, r6, #8
    cf74:	add	r7, r7, #1
    cf78:	ldr	r0, [r5, #28]
    cf7c:	cmp	r7, r0
    cf80:	blt	cf38 <sas7bdat_col_name_subheader_init+0x74>
    cf84:	mov	r0, r8
    cf88:	sub	sp, fp, #24
    cf8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000cf90 <sas7bdat_col_attrs_subheader_init>:
    cf90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cf94:	add	fp, sp, #28
    cf98:	sub	sp, sp, #12
    cf9c:	mov	r5, r1
    cfa0:	mov	r7, r0
    cfa4:	bl	ce38 <sas7bdat_col_attrs_subheader_length>
    cfa8:	mov	r4, r0
    cfac:	str	r5, [sp, #8]
    cfb0:	ldr	r0, [r5, #4]
    cfb4:	mov	r6, #8
    cfb8:	cmp	r0, #0
    cfbc:	movweq	r6, #4
    cfc0:	mov	r0, r4
    cfc4:	mov	r1, r6
    cfc8:	bl	4e54 <sas_subheader_remainder@plt>
    cfcc:	mov	r5, r0
    cfd0:	mvn	r0, #3
    cfd4:	mov	r1, r4
    cfd8:	mov	r4, r7
    cfdc:	bl	d398 <sas7bdat_subheader_init>
    cfe0:	str	r0, [sp]
    cfe4:	ldr	r0, [r0, #4]
    cfe8:	add	r0, r0, r6
    cfec:	strh	r5, [r0]
    cff0:	ldr	r1, [r7, #28]
    cff4:	cmp	r1, #1
    cff8:	blt	d0c0 <sas7bdat_col_attrs_subheader_init+0x130>
    cffc:	add	sl, r0, #8
    d000:	mov	r8, #0
    d004:	mov	r9, #0
    d008:	mov	r7, #0
    d00c:	str	r4, [sp, #4]
    d010:	b	d048 <sas7bdat_col_attrs_subheader_init+0xb8>
    d014:	mov	r0, #1
    d018:	strb	r0, [r4, #6]
    d01c:	mov	r0, #8
    d020:	strh	r5, [r4, #4]
    d024:	str	r0, [r4]
    d028:	adds	r8, r8, r0
    d02c:	adc	r9, r9, #0
    d030:	add	r7, r7, #1
    d034:	add	sl, r4, #8
    d038:	ldr	r4, [sp, #4]
    d03c:	ldr	r0, [r4, #28]
    d040:	cmp	r7, r0
    d044:	bge	d0c0 <sas7bdat_col_attrs_subheader_init+0x130>
    d048:	mov	r0, r4
    d04c:	mov	r1, r7
    d050:	bl	4e18 <readstat_get_variable@plt>
    d054:	mov	r6, r0
    d058:	bl	4e00 <readstat_variable_get_name@plt>
    d05c:	mov	r5, r0
    d060:	mov	r0, r6
    d064:	bl	4c5c <readstat_variable_get_type@plt>
    d068:	mov	r4, r0
    d06c:	mov	r0, r5
    d070:	bl	4c8c <strlen@plt>
    d074:	cmp	r0, #9
    d078:	mov	r5, #2048	; 0x800
    d07c:	movwcc	r5, #4
    d080:	ldr	r0, [sp, #8]
    d084:	ldr	r0, [r0, #4]
    d088:	cmp	r0, #0
    d08c:	str	r8, [sl]
    d090:	moveq	r0, #4
    d094:	strne	r9, [sl, #4]
    d098:	movne	r0, #8
    d09c:	mov	r1, r4
    d0a0:	add	r4, sl, r0
    d0a4:	cmp	r1, #0
    d0a8:	bne	d014 <sas7bdat_col_attrs_subheader_init+0x84>
    d0ac:	mov	r0, #2
    d0b0:	strb	r0, [r4, #6]
    d0b4:	mov	r0, r6
    d0b8:	bl	4d58 <readstat_variable_get_storage_width@plt>
    d0bc:	b	d020 <sas7bdat_col_attrs_subheader_init+0x90>
    d0c0:	ldr	r0, [sp]
    d0c4:	sub	sp, fp, #28
    d0c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000d0cc <sas7bdat_row_size_subheader_init>:
    d0cc:	push	{r4, r5, r6, r7, fp, lr}
    d0d0:	add	fp, sp, #16
    d0d4:	mov	r5, r1
    d0d8:	mov	r6, r0
    d0dc:	ldr	r0, [r1, #4]
    d0e0:	mov	r1, #808	; 0x328
    d0e4:	cmp	r0, #0
    d0e8:	movweq	r1, #480	; 0x1e0
    d0ec:	movw	r0, #63479	; 0xf7f7
    d0f0:	movt	r0, #63479	; 0xf7f7
    d0f4:	bl	d398 <sas7bdat_subheader_init>
    d0f8:	mov	r4, r0
    d0fc:	ldr	r7, [r5, #4]
    d100:	mov	r0, r6
    d104:	bl	ca98 <sas7bdat_row_length>
    d108:	cmp	r7, #0
    d10c:	beq	d168 <sas7bdat_row_size_subheader_init+0x9c>
    d110:	ldr	r1, [r6, #28]
    d114:	ldr	r2, [r6, #80]	; 0x50
    d118:	ldrd	r6, [r5, #32]
    d11c:	ldr	r3, [r4, #4]
    d120:	mvn	r5, #0
    d124:	str	r5, [r3, #136]	; 0x88
    d128:	str	r5, [r3, #132]	; 0x84
    d12c:	str	r5, [r3, #128]	; 0x80
    d130:	str	r6, [r3, #104]	; 0x68
    d134:	str	r7, [r3, #108]	; 0x6c
    d138:	str	r1, [r3, #72]	; 0x48
    d13c:	str	r2, [r3, #48]	; 0x30
    d140:	str	r0, [r3, #40]	; 0x28
    d144:	mov	r0, #0
    d148:	str	r0, [r3, #44]	; 0x2c
    d14c:	str	r5, [r3, #140]	; 0x8c
    d150:	asr	r0, r1, #31
    d154:	str	r0, [r3, #76]	; 0x4c
    d158:	asr	r0, r2, #31
    d15c:	str	r0, [r3, #52]	; 0x34
    d160:	mov	r0, r4
    d164:	pop	{r4, r5, r6, r7, fp, pc}
    d168:	ldr	r1, [r6, #28]
    d16c:	ldr	r2, [r6, #80]	; 0x50
    d170:	ldr	r3, [r5, #32]
    d174:	ldr	r7, [r4, #4]
    d178:	mvn	r6, #0
    d17c:	str	r6, [r7, #68]	; 0x44
    d180:	str	r6, [r7, #64]	; 0x40
    d184:	str	r3, [r7, #52]	; 0x34
    d188:	str	r1, [r7, #36]	; 0x24
    d18c:	str	r2, [r7, #24]
    d190:	str	r0, [r7, #20]
    d194:	mov	r0, r4
    d198:	pop	{r4, r5, r6, r7, fp, pc}

0000d19c <sas7bdat_col_size_subheader_init>:
    d19c:	push	{r4, r5, fp, lr}
    d1a0:	add	fp, sp, #8
    d1a4:	mov	r4, r1
    d1a8:	mov	r5, r0
    d1ac:	ldr	r0, [r1, #4]
    d1b0:	mov	r1, #24
    d1b4:	cmp	r0, #0
    d1b8:	movweq	r1, #12
    d1bc:	movw	r0, #63222	; 0xf6f6
    d1c0:	movt	r0, #63222	; 0xf6f6
    d1c4:	bl	d398 <sas7bdat_subheader_init>
    d1c8:	ldr	r1, [r5, #28]
    d1cc:	ldr	r2, [r4, #4]
    d1d0:	cmp	r2, #0
    d1d4:	ldr	r2, [r0, #4]
    d1d8:	streq	r1, [r2, #4]
    d1dc:	asrne	r3, r1, #31
    d1e0:	strne	r3, [r2, #12]
    d1e4:	strne	r1, [r2, #8]
    d1e8:	pop	{r4, r5, fp, pc}

0000d1ec <sas7bdat_col_format_subheader_init>:
    d1ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    d1f0:	add	fp, sp, #24
    d1f4:	sub	sp, sp, #16
    d1f8:	mov	r8, r2
    d1fc:	mov	r5, r1
    d200:	mov	r6, r0
    d204:	ldr	r0, [r1, #4]
    d208:	mov	r1, #64	; 0x40
    d20c:	cmp	r0, #0
    d210:	movweq	r1, #52	; 0x34
    d214:	movw	r0, #64510	; 0xfbfe
    d218:	movt	r0, #65535	; 0xffff
    d21c:	bl	d398 <sas7bdat_subheader_init>
    d220:	mov	r9, r0
    d224:	mov	r0, r6
    d228:	bl	4968 <readstat_variable_get_format@plt>
    d22c:	mov	r7, r0
    d230:	mov	r0, r6
    d234:	bl	4e9c <readstat_variable_get_label@plt>
    d238:	mov	r6, r0
    d23c:	ldr	r0, [r5, #4]
    d240:	mov	r5, #40	; 0x28
    d244:	cmp	r0, #0
    d248:	movwne	r5, #52	; 0x34
    d24c:	mov	r4, #34	; 0x22
    d250:	movwne	r4, #46	; 0x2e
    d254:	cmp	r7, #0
    d258:	beq	d288 <sas7bdat_col_format_subheader_init+0x9c>
    d25c:	add	r0, sp, #8
    d260:	mov	r1, r8
    d264:	mov	r2, r7
    d268:	bl	d3d8 <sas7bdat_make_text_ref>
    d26c:	ldr	r0, [r9, #4]
    d270:	ldrh	r1, [sp, #8]
    d274:	strh	r1, [r0, r4]!
    d278:	ldrh	r1, [sp, #10]
    d27c:	strh	r1, [r0, #2]
    d280:	ldrh	r1, [sp, #12]
    d284:	strh	r1, [r0, #4]
    d288:	cmp	r6, #0
    d28c:	beq	d2c8 <sas7bdat_col_format_subheader_init+0xdc>
    d290:	mov	r0, sp
    d294:	mov	r1, r8
    d298:	mov	r2, r6
    d29c:	bl	d3d8 <sas7bdat_make_text_ref>
    d2a0:	ldr	r0, [r9, #4]
    d2a4:	ldrh	r1, [sp]
    d2a8:	mov	r2, r0
    d2ac:	strh	r1, [r2, r5]!
    d2b0:	orr	r1, r5, #2
    d2b4:	add	r0, r0, r1
    d2b8:	ldrh	r1, [sp, #2]
    d2bc:	strh	r1, [r0]
    d2c0:	ldrh	r0, [sp, #4]
    d2c4:	strh	r0, [r2, #4]
    d2c8:	mov	r0, r9
    d2cc:	sub	sp, fp, #24
    d2d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000d2d4 <sas7bdat_col_text_subheader_init>:
    d2d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    d2d8:	add	fp, sp, #24
    d2dc:	mov	r4, r1
    d2e0:	ldr	r8, [r0, #4]
    d2e4:	bl	ce98 <sas7bdat_col_text_subheader_length>
    d2e8:	mov	r5, r0
    d2ec:	mvn	r0, #2
    d2f0:	mov	r1, r5
    d2f4:	bl	d398 <sas7bdat_subheader_init>
    d2f8:	mov	r6, r0
    d2fc:	mov	r7, #8
    d300:	cmp	r8, #0
    d304:	movweq	r7, #4
    d308:	mov	r0, r5
    d30c:	mov	r1, r7
    d310:	bl	4e54 <sas_subheader_remainder@plt>
    d314:	ldr	r1, [r6, #4]
    d318:	strh	r0, [r1, r7]!
    d31c:	movw	r0, #8224	; 0x2020
    d320:	movt	r0, #8224	; 0x2020
    d324:	str	r0, [r1, #16]
    d328:	str	r0, [r1, #12]
    d32c:	add	r0, r1, #28
    d330:	ldr	r1, [r4]
    d334:	ldr	r2, [r4, #8]
    d338:	bl	4998 <memcpy@plt>
    d33c:	mov	r0, r6
    d340:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000d344 <sas7bdat_column_text_array_free>:
    d344:	push	{r4, r5, fp, lr}
    d348:	add	fp, sp, #8
    d34c:	mov	r4, r0
    d350:	ldm	r0, {r1, r2}
    d354:	ldr	r0, [r0, #8]
    d358:	subs	r1, r1, #1
    d35c:	sbcs	r1, r2, #0
    d360:	blt	d388 <sas7bdat_column_text_array_free+0x44>
    d364:	mov	r5, #0
    d368:	ldr	r0, [r0, r5, lsl #2]
    d36c:	bl	d4a4 <sas7bdat_column_text_free>
    d370:	add	r5, r5, #1
    d374:	ldm	r4, {r1, r2}
    d378:	ldr	r0, [r4, #8]
    d37c:	subs	r1, r5, r1
    d380:	rscs	r1, r2, #0
    d384:	blt	d368 <sas7bdat_column_text_array_free+0x24>
    d388:	bl	4938 <free@plt>
    d38c:	mov	r0, r4
    d390:	pop	{r4, r5, fp, lr}
    d394:	b	4938 <free@plt>

0000d398 <sas7bdat_subheader_init>:
    d398:	push	{r4, r5, r6, sl, fp, lr}
    d39c:	add	fp, sp, #16
    d3a0:	mov	r4, r1
    d3a4:	mov	r5, r0
    d3a8:	mov	r0, #1
    d3ac:	mov	r1, #20
    d3b0:	bl	47d0 <calloc@plt>
    d3b4:	mov	r6, r0
    d3b8:	str	r4, [r0, #8]
    d3bc:	str	r5, [r0]
    d3c0:	mov	r0, #1
    d3c4:	mov	r1, r4
    d3c8:	bl	47d0 <calloc@plt>
    d3cc:	str	r0, [r6, #4]
    d3d0:	mov	r0, r6
    d3d4:	pop	{r4, r5, r6, sl, fp, pc}

0000d3d8 <sas7bdat_make_text_ref>:
    d3d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    d3dc:	add	fp, sp, #24
    d3e0:	mov	r8, r2
    d3e4:	mov	r4, r1
    d3e8:	mov	r5, r0
    d3ec:	mov	r0, r2
    d3f0:	bl	4c8c <strlen@plt>
    d3f4:	mov	r9, r0
    d3f8:	ldr	r0, [r4]
    d3fc:	ldr	r1, [r4, #8]
    d400:	add	r1, r1, r0, lsl #2
    d404:	ldr	r7, [r1, #-4]
    d408:	ldmib	r7, {r1, r2}
    d40c:	add	r3, r9, #3
    d410:	bic	r6, r3, #3
    d414:	add	r2, r2, r6
    d418:	cmp	r2, r1
    d41c:	bls	d468 <sas7bdat_make_text_ref+0x90>
    d420:	ldr	r1, [r4, #4]
    d424:	adds	r2, r0, #1
    d428:	adc	r3, r1, #0
    d42c:	strd	r2, [r4]
    d430:	ldr	r0, [r4, #8]
    d434:	lsl	r1, r2, #2
    d438:	bl	4a64 <realloc@plt>
    d43c:	str	r0, [r4, #8]
    d440:	ldrd	r0, [r4]
    d444:	subs	r0, r0, #1
    d448:	sbc	r1, r1, #0
    d44c:	ldr	r2, [r7, #4]
    d450:	bl	ce5c <sas7bdat_column_text_init>
    d454:	mov	r7, r0
    d458:	ldr	r0, [r4]
    d45c:	ldr	r1, [r4, #8]
    d460:	add	r0, r1, r0, lsl #2
    d464:	str	r7, [r0, #-4]
    d468:	ldrh	r0, [r7, #16]
    d46c:	strh	r0, [r5]
    d470:	ldr	r0, [r7, #8]
    d474:	strh	r9, [r5, #4]
    d478:	add	r1, r0, #28
    d47c:	strh	r1, [r5, #2]
    d480:	ldr	r1, [r7]
    d484:	add	r0, r1, r0
    d488:	mov	r1, r8
    d48c:	mov	r2, r6
    d490:	bl	4d4c <strncpy@plt>
    d494:	ldr	r0, [r7, #8]
    d498:	add	r0, r0, r6
    d49c:	str	r0, [r7, #8]
    d4a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000d4a4 <sas7bdat_column_text_free>:
    d4a4:	push	{r4, sl, fp, lr}
    d4a8:	add	fp, sp, #8
    d4ac:	mov	r4, r0
    d4b0:	ldr	r0, [r0]
    d4b4:	bl	4938 <free@plt>
    d4b8:	mov	r0, r4
    d4bc:	pop	{r4, sl, fp, lr}
    d4c0:	b	4938 <free@plt>

0000d4c4 <sas7bdat_rows_per_page>:
    d4c4:	push	{r4, sl, fp, lr}
    d4c8:	add	fp, sp, #8
    d4cc:	mov	r4, r1
    d4d0:	bl	ca98 <sas7bdat_row_length>
    d4d4:	mov	r2, r0
    d4d8:	add	r4, r4, #32
    d4dc:	ldm	r4, {r0, r1, r3, r4}
    d4e0:	subs	r0, r0, r3
    d4e4:	sbc	r1, r1, r4
    d4e8:	mov	r3, #0
    d4ec:	bl	24f74 <__aeabi_ldivmod>
    d4f0:	pop	{r4, sl, fp, pc}

0000d4f4 <sas7bdat_count_meta_pages>:
    d4f4:	push	{r4, sl, fp, lr}
    d4f8:	add	fp, sp, #8
    d4fc:	ldr	r2, [r0, #300]	; 0x12c
    d500:	ldr	r0, [r2, #4]
    d504:	ldr	r1, [r0]
    d508:	subs	r3, r1, #1
    d50c:	bmi	d560 <sas7bdat_count_meta_pages+0x6c>
    d510:	ldr	r2, [r2]
    d514:	ldr	lr, [r2, #32]
    d518:	ldr	r3, [r2, #40]	; 0x28
    d51c:	ldr	ip, [r2, #48]	; 0x30
    d520:	sub	r2, lr, r3
    d524:	ldr	r0, [r0, #16]
    d528:	sub	lr, r0, #4
    d52c:	mov	r0, #1
    d530:	mov	r3, r2
    d534:	ldr	r4, [lr, r1, lsl #2]
    d538:	ldr	r4, [r4, #8]
    d53c:	add	r4, r4, ip
    d540:	cmp	r4, r3
    d544:	movhi	r3, r2
    d548:	sub	r3, r3, r4
    d54c:	addhi	r0, r0, #1
    d550:	sub	r1, r1, #1
    d554:	cmp	r1, #0
    d558:	bgt	d534 <sas7bdat_count_meta_pages+0x40>
    d55c:	pop	{r4, sl, fp, pc}
    d560:	mov	r0, #1
    d564:	pop	{r4, sl, fp, pc}

0000d568 <sas7bdat_count_data_pages>:
    d568:	push	{r4, sl, fp, lr}
    d56c:	add	fp, sp, #8
    d570:	mov	r4, r0
    d574:	ldr	r2, [r0, #16]
    d578:	mov	r0, #0
    d57c:	cmp	r2, #1
    d580:	popeq	{r4, sl, fp, pc}
    d584:	mov	r0, r4
    d588:	bl	d4c4 <sas7bdat_rows_per_page>
    d58c:	ldr	r1, [r4, #80]	; 0x50
    d590:	add	r1, r0, r1
    d594:	sub	r1, r1, #1
    d598:	sdiv	r0, r1, r0
    d59c:	pop	{r4, sl, fp, pc}

0000d5a0 <sas7bdat_emit_header>:
    d5a0:	push	{r4, r5, r6, sl, fp, lr}
    d5a4:	add	fp, sp, #16
    d5a8:	sub	sp, sp, #328	; 0x148
    d5ac:	mov	r4, r1
    d5b0:	mov	r5, r0
    d5b4:	add	r6, sp, #160	; 0xa0
    d5b8:	mov	r0, r6
    d5bc:	mov	r1, #0
    d5c0:	mov	r2, #156	; 0x9c
    d5c4:	bl	4d28 <memset@plt>
    d5c8:	ldr	r0, [r4, #4]
    d5cc:	mov	r1, #34	; 0x22
    d5d0:	strb	r1, [sp, #195]	; 0xc3
    d5d4:	mov	r1, #51	; 0x33
    d5d8:	cmp	r0, #0
    d5dc:	movweq	r1, #34	; 0x22
    d5e0:	strb	r1, [sp, #192]	; 0xc0
    d5e4:	bl	492c <machine_is_little_endian@plt>
    d5e8:	ldr	r1, [pc, #152]	; d688 <sas7bdat_emit_header+0xe8>
    d5ec:	ldr	r1, [pc, r1]
    d5f0:	vld1.8	{d16-d17}, [r1]!
    d5f4:	vld1.8	{d18-d19}, [r1]
    d5f8:	add	r1, r6, #16
    d5fc:	vst1.64	{d18-d19}, [r1]
    d600:	movw	r1, #32288	; 0x7e20
    d604:	movt	r1, #32288	; 0x7e20
    d608:	str	r1, [sp, #320]	; 0x140
    d60c:	movw	r1, #16708	; 0x4144
    d610:	movt	r1, #16724	; 0x4154
    d614:	str	r1, [sp, #316]	; 0x13c
    d618:	movw	r1, #18758	; 0x4946
    d61c:	movt	r1, #17740	; 0x454c
    d620:	str	r1, [sp, #248]	; 0xf8
    d624:	movw	r1, #16723	; 0x4153
    d628:	movt	r1, #8275	; 0x2053
    d62c:	str	r1, [sp, #244]	; 0xf4
    d630:	mov	r1, #20
    d634:	strb	r1, [sp, #230]	; 0xe6
    d638:	mov	r1, #49	; 0x31
    d63c:	strb	r1, [sp, #199]	; 0xc7
    d640:	cmp	r0, #0
    d644:	movwne	r0, #1
    d648:	strb	r0, [sp, #197]	; 0xc5
    d64c:	mov	r0, #8
    d650:	vst1.64	{d16-d17}, [r6], r0
    d654:	movw	r0, #156	; 0x9c
    d658:	mov	r1, sp
    d65c:	ldr	r2, [r6], #4
    d660:	str	r2, [r1], #4
    d664:	subs	r0, r0, #4
    d668:	bne	d65c <sas7bdat_emit_header+0xbc>
    d66c:	ldr	r2, [sp, #160]	; 0xa0
    d670:	ldr	r3, [sp, #164]	; 0xa4
    d674:	mov	r0, r5
    d678:	mov	r1, r4
    d67c:	bl	4b30 <sas_write_header@plt>
    d680:	sub	sp, fp, #16
    d684:	pop	{r4, r5, r6, sl, fp, pc}
    d688:	.word	0x00037d0c

0000d68c <sas7bdat_emit_meta_pages>:
    d68c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d690:	add	fp, sp, #28
    d694:	sub	sp, sp, #36	; 0x24
    d698:	str	r0, [sp, #4]
    d69c:	ldr	r0, [r0, #300]	; 0x12c
    d6a0:	ldm	r0, {r1, r7}
    d6a4:	mov	r5, r1
    d6a8:	ldr	r0, [r5, #32]!
    d6ac:	add	r2, r1, #40	; 0x28
    d6b0:	str	r2, [sp, #12]
    d6b4:	str	r1, [sp, #20]
    d6b8:	add	r1, r1, #48	; 0x30
    d6bc:	str	r1, [sp, #8]
    d6c0:	bl	4b90 <malloc@plt>
    d6c4:	str	r0, [sp, #24]
    d6c8:	mov	r8, #0
    d6cc:	mov	r0, #0
    d6d0:	str	r0, [sp, #32]
    d6d4:	str	r5, [sp]
    d6d8:	b	d728 <sas7bdat_emit_meta_pages+0x9c>
    d6dc:	mov	r7, r9
    d6e0:	ldr	r0, [sp, #20]
    d6e4:	ldr	r0, [r0, #4]
    d6e8:	cmp	r0, #0
    d6ec:	mov	r0, #34	; 0x22
    d6f0:	movweq	r0, #18
    d6f4:	ldr	r1, [sp, #24]
    d6f8:	add	r0, r1, r0
    d6fc:	strh	r6, [r0]
    d700:	mov	r0, #36	; 0x24
    d704:	movweq	r0, #20
    d708:	add	r0, r1, r0
    d70c:	strh	r6, [r0]
    d710:	ldr	r5, [sp]
    d714:	ldr	r2, [r5]
    d718:	ldr	r0, [sp, #4]
    d71c:	bl	4ef0 <readstat_write_bytes@plt>
    d720:	cmp	r0, #0
    d724:	bne	d904 <sas7bdat_emit_meta_pages+0x278>
    d728:	ldrd	r0, [r7]
    d72c:	subs	r0, r8, r0
    d730:	ldr	r0, [sp, #32]
    d734:	sbcs	r0, r0, r1
    d738:	bge	d90c <sas7bdat_emit_meta_pages+0x280>
    d73c:	ldr	r2, [r5]
    d740:	ldr	r4, [sp, #24]
    d744:	mov	r0, r4
    d748:	mov	r1, #0
    d74c:	bl	4d28 <memset@plt>
    d750:	ldr	r0, [sp, #12]
    d754:	ldr	r0, [r0]
    d758:	add	sl, r0, r4
    d75c:	ldr	r1, [sp, #8]
    d760:	ldr	r3, [r1]
    d764:	ldr	r4, [r5]
    d768:	mov	r1, #0
    d76c:	strh	r1, [sl, #-8]
    d770:	sub	r1, r4, r0
    d774:	ldr	r2, [r7, #16]
    d778:	ldr	r2, [r2, r8, lsl #2]
    d77c:	ldr	r2, [r2, #8]
    d780:	add	r2, r2, r3
    d784:	cmp	r2, r1
    d788:	bhi	d914 <sas7bdat_emit_meta_pages+0x288>
    d78c:	ldm	r7, {r2, r5}
    d790:	mov	r6, #0
    d794:	subs	r1, r8, r2
    d798:	ldr	r1, [sp, #32]
    d79c:	sbcs	r1, r1, r5
    d7a0:	bge	d6e0 <sas7bdat_emit_meta_pages+0x54>
    d7a4:	sub	r5, r3, r0
    d7a8:	mov	r6, #0
    d7ac:	str	r3, [sp, #28]
    d7b0:	b	d814 <sas7bdat_emit_meta_pages+0x188>
    d7b4:	ldr	r0, [r7, #16]
    d7b8:	mov	r1, #1
    d7bc:	strb	r1, [sl, #17]
    d7c0:	cmp	r0, #0
    d7c4:	movwne	r0, #1
    d7c8:	lsl	r0, r0, #2
    d7cc:	strb	r0, [sl, #16]
    d7d0:	add	sl, sl, r3
    d7d4:	ldmib	r7, {r1, r2}
    d7d8:	sub	r4, r4, r2
    d7dc:	ldr	r0, [sp, #24]
    d7e0:	add	r0, r0, r4
    d7e4:	bl	4998 <memcpy@plt>
    d7e8:	ldr	r3, [sp, #28]
    d7ec:	adds	r8, r8, #1
    d7f0:	ldr	r2, [sp, #32]
    d7f4:	adc	r2, r2, #0
    d7f8:	add	r6, r6, #1
    d7fc:	mov	r7, r9
    d800:	ldrd	r0, [r9]
    d804:	subs	r0, r8, r0
    d808:	str	r2, [sp, #32]
    d80c:	sbcs	r0, r2, r1
    d810:	bge	d6e0 <sas7bdat_emit_meta_pages+0x54>
    d814:	sub	r5, r5, r3
    d818:	add	r1, r4, r5
    d81c:	mov	r9, r7
    d820:	ldr	r0, [r7, #16]
    d824:	ldr	r7, [r0, r8, lsl #2]
    d828:	ldr	r0, [r7, #8]
    d82c:	add	r2, r0, r3
    d830:	cmp	r2, r1
    d834:	bhi	d6dc <sas7bdat_emit_meta_pages+0x50>
    d838:	sub	r1, r4, r0
    d83c:	ldr	ip, [r7]
    d840:	ldr	r2, [sp, #20]
    d844:	ldr	r2, [r2, #4]
    d848:	cmp	r2, #0
    d84c:	beq	d89c <sas7bdat_emit_meta_pages+0x210>
    d850:	mov	r2, #0
    d854:	str	r2, [sl, #12]
    d858:	str	r0, [sl, #8]
    d85c:	str	r2, [sl, #4]
    d860:	str	r1, [sl]
    d864:	ldr	r0, [r7, #12]
    d868:	cmp	r0, #0
    d86c:	bne	d7b4 <sas7bdat_emit_meta_pages+0x128>
    d870:	ldr	r0, [r7]
    d874:	str	ip, [sp, #16]
    d878:	bl	d92c <sas7bdat_subheader_type>
    d87c:	ldr	r2, [sp, #16]
    d880:	strb	r0, [sl, #17]
    d884:	cmp	r2, #-16777216	; 0xff000000
    d888:	bcc	d8f4 <sas7bdat_emit_meta_pages+0x268>
    d88c:	ldr	r0, [r7, #4]
    d890:	asr	r1, r2, #31
    d894:	str	r1, [r0, #4]
    d898:	b	d8f8 <sas7bdat_emit_meta_pages+0x26c>
    d89c:	str	r0, [sl, #4]
    d8a0:	str	r1, [sl]
    d8a4:	ldr	r0, [r7, #12]
    d8a8:	cmp	r0, #0
    d8ac:	beq	d8d0 <sas7bdat_emit_meta_pages+0x244>
    d8b0:	ldr	r0, [r7, #16]
    d8b4:	mov	r1, #1
    d8b8:	strb	r1, [sl, #9]
    d8bc:	cmp	r0, #0
    d8c0:	movwne	r0, #1
    d8c4:	lsl	r0, r0, #2
    d8c8:	strb	r0, [sl, #8]
    d8cc:	b	d7d0 <sas7bdat_emit_meta_pages+0x144>
    d8d0:	ldr	r0, [r7]
    d8d4:	str	ip, [sp, #16]
    d8d8:	bl	d92c <sas7bdat_subheader_type>
    d8dc:	ldr	r3, [sp, #28]
    d8e0:	strb	r0, [sl, #9]
    d8e4:	ldr	r0, [r7, #4]
    d8e8:	ldr	r1, [sp, #16]
    d8ec:	str	r1, [r0]
    d8f0:	b	d7d0 <sas7bdat_emit_meta_pages+0x144>
    d8f4:	ldr	r0, [r7, #4]
    d8f8:	str	r2, [r0]
    d8fc:	ldr	r3, [sp, #28]
    d900:	b	d7d0 <sas7bdat_emit_meta_pages+0x144>
    d904:	mov	r6, r0
    d908:	b	d918 <sas7bdat_emit_meta_pages+0x28c>
    d90c:	mov	r6, #0
    d910:	b	d918 <sas7bdat_emit_meta_pages+0x28c>
    d914:	mov	r6, #35	; 0x23
    d918:	ldr	r0, [sp, #24]
    d91c:	bl	4938 <free@plt>
    d920:	mov	r0, r6
    d924:	sub	sp, fp, #28
    d928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000d92c <sas7bdat_subheader_type>:
    d92c:	add	r2, r0, #4
    d930:	cmp	r2, #3
    d934:	bhi	d94c <sas7bdat_subheader_type+0x20>
    d938:	mov	r1, #1
    d93c:	cmp	r2, #2
    d940:	beq	d94c <sas7bdat_subheader_type+0x20>
    d944:	mov	r0, r1
    d948:	bx	lr
    d94c:	add	r0, r0, #2
    d950:	clz	r0, r0
    d954:	lsr	r1, r0, #5
    d958:	mov	r0, r1
    d95c:	bx	lr

0000d960 <sas7bdat_subheader_array_free>:
    d960:	push	{r4, r5, fp, lr}
    d964:	add	fp, sp, #8
    d968:	mov	r4, r0
    d96c:	ldrd	r2, [r0]
    d970:	ldr	r0, [r0, #16]
    d974:	subs	r1, r2, #1
    d978:	sbcs	r1, r3, #0
    d97c:	blt	d9a4 <sas7bdat_subheader_array_free+0x44>
    d980:	mov	r5, #0
    d984:	ldr	r0, [r0, r5, lsl #2]
    d988:	bl	d9b4 <sas7bdat_subheader_free>
    d98c:	add	r5, r5, #1
    d990:	ldrd	r2, [r4]
    d994:	ldr	r0, [r4, #16]
    d998:	subs	r1, r5, r2
    d99c:	rscs	r1, r3, #0
    d9a0:	blt	d984 <sas7bdat_subheader_array_free+0x24>
    d9a4:	bl	4938 <free@plt>
    d9a8:	mov	r0, r4
    d9ac:	pop	{r4, r5, fp, lr}
    d9b0:	b	4938 <free@plt>

0000d9b4 <sas7bdat_subheader_free>:
    d9b4:	cmp	r0, #0
    d9b8:	bxeq	lr
    d9bc:	push	{r4, sl, fp, lr}
    d9c0:	add	fp, sp, #8
    d9c4:	mov	r4, r0
    d9c8:	ldr	r0, [r0, #4]
    d9cc:	cmp	r0, #0
    d9d0:	beq	d9d8 <sas7bdat_subheader_free+0x24>
    d9d4:	bl	4938 <free@plt>
    d9d8:	mov	r0, r4
    d9dc:	pop	{r4, sl, fp, lr}
    d9e0:	b	4938 <free@plt>

0000d9e4 <sas7bdat_write_row_uncompressed>:
    d9e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d9e8:	add	fp, sp, #28
    d9ec:	sub	sp, sp, #12
    d9f0:	mov	r8, r3
    d9f4:	mov	r9, r2
    d9f8:	mov	r5, r1
    d9fc:	mov	r6, r0
    da00:	ldr	r7, [r1]
    da04:	mov	r1, r7
    da08:	bl	d4c4 <sas7bdat_rows_per_page>
    da0c:	mov	r4, r0
    da10:	ldr	r0, [r6, #84]	; 0x54
    da14:	sdiv	r1, r0, r4
    da18:	mls	r0, r1, r4, r0
    da1c:	cmp	r0, #0
    da20:	beq	da3c <sas7bdat_write_row_uncompressed+0x58>
    da24:	mov	r0, r6
    da28:	mov	r1, r9
    da2c:	mov	r2, r8
    da30:	bl	4ef0 <readstat_write_bytes@plt>
    da34:	sub	sp, fp, #28
    da38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    da3c:	ldr	r1, [r5]
    da40:	mov	r0, r6
    da44:	bl	4f14 <sas_fill_page@plt>
    da48:	cmp	r0, #0
    da4c:	bne	dac8 <sas7bdat_write_row_uncompressed+0xe4>
    da50:	ldr	r0, [r6, #80]	; 0x50
    da54:	str	r0, [fp, #-40]	; 0xffffffd8
    da58:	ldr	sl, [r6, #84]	; 0x54
    da5c:	ldr	r2, [r7, #40]	; 0x28
    da60:	str	sp, [fp, #-36]	; 0xffffffdc
    da64:	add	r0, r2, #7
    da68:	bic	r0, r0, #7
    da6c:	sub	r5, sp, r0
    da70:	mov	sp, r5
    da74:	mov	r0, r5
    da78:	mov	r1, #0
    da7c:	bl	4d28 <memset@plt>
    da80:	ldr	r0, [fp, #-40]	; 0xffffffd8
    da84:	sub	r0, r0, sl
    da88:	cmp	r0, r4
    da8c:	movlt	r4, r0
    da90:	ldr	r0, [r7, #40]	; 0x28
    da94:	add	r0, r0, r5
    da98:	strh	r4, [r0, #-6]
    da9c:	ldr	r0, [r7, #40]	; 0x28
    daa0:	add	r0, r0, r5
    daa4:	mov	r1, #256	; 0x100
    daa8:	strh	r1, [r0, #-8]
    daac:	ldr	r2, [r7, #40]	; 0x28
    dab0:	mov	r0, r6
    dab4:	mov	r1, r5
    dab8:	bl	4ef0 <readstat_write_bytes@plt>
    dabc:	ldr	sp, [fp, #-36]	; 0xffffffdc
    dac0:	cmp	r0, #0
    dac4:	beq	da24 <sas7bdat_write_row_uncompressed+0x40>
    dac8:	sub	sp, fp, #28
    dacc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000dad0 <sas7bdat_write_row_compressed>:
    dad0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    dad4:	add	fp, sp, #24
    dad8:	mov	r5, r2
    dadc:	mov	r7, r1
    dae0:	mov	r8, r0
    dae4:	mov	r0, r1
    dae8:	mov	r1, r2
    daec:	bl	4f20 <sas_rle_compressed_len@plt>
    daf0:	cmp	r0, r5
    daf4:	bcs	db40 <sas7bdat_write_row_compressed+0x70>
    daf8:	mov	r4, r0
    dafc:	mov	r0, #0
    db00:	mov	r1, r4
    db04:	bl	d398 <sas7bdat_subheader_init>
    db08:	mov	r6, r0
    db0c:	mov	r0, #1
    db10:	str	r0, [r6, #12]
    db14:	str	r0, [r6, #16]
    db18:	ldmib	r6, {r0, r1}
    db1c:	mov	r2, r7
    db20:	mov	r3, r5
    db24:	bl	4f74 <sas_rle_compress@plt>
    db28:	cmp	r0, r4
    db2c:	beq	db68 <sas7bdat_write_row_compressed+0x98>
    db30:	mov	r0, r6
    db34:	bl	d9b4 <sas7bdat_subheader_free>
    db38:	mov	r0, #10
    db3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    db40:	mov	r0, #0
    db44:	mov	r1, r5
    db48:	bl	d398 <sas7bdat_subheader_init>
    db4c:	mov	r6, r0
    db50:	mov	r0, #1
    db54:	str	r0, [r6, #12]
    db58:	ldr	r0, [r6, #4]
    db5c:	mov	r1, r7
    db60:	mov	r2, r5
    db64:	bl	4998 <memcpy@plt>
    db68:	ldr	r0, [r8, #4]
    db6c:	ldrd	r2, [r0]
    db70:	ldr	r1, [r0, #16]
    db74:	adds	r4, r2, #1
    db78:	adc	r5, r3, #0
    db7c:	strd	r4, [r0]
    db80:	str	r6, [r1, r2, lsl #2]
    db84:	mov	r0, #0
    db88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000db8c <sas_rle_decompressed_len>:
    db8c:	mov	r3, r1
    db90:	mov	r2, r0
    db94:	mov	r0, #0
    db98:	mov	r1, #0
    db9c:	b	dba0 <sas_rle_decompress>

0000dba0 <sas_rle_decompress>:
    dba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dba4:	add	fp, sp, #28
    dba8:	push	{r1}		; (str r1, [sp, #-4]!)
    dbac:	cmp	r3, #1
    dbb0:	blt	dd9c <sas_rle_decompress+0x1fc>
    dbb4:	mov	sl, r2
    dbb8:	mov	r8, r0
    dbbc:	add	r7, r2, r3
    dbc0:	mov	r3, #0
    dbc4:	ldr	r5, [pc, #476]	; dda8 <sas_rle_decompress+0x208>
    dbc8:	add	r5, pc, r5
    dbcc:	mov	r6, sl
    dbd0:	ldrb	r1, [sl], #1
    dbd4:	lsr	r2, r1, #4
    dbd8:	ldr	r0, [r5, r2, lsl #2]
    dbdc:	add	r4, sl, r0
    dbe0:	mvn	r0, #0
    dbe4:	cmp	r4, r7
    dbe8:	bhi	dd94 <sas_rle_decompress+0x1f4>
    dbec:	cmp	r2, #15
    dbf0:	bhi	dd7c <sas_rle_decompress+0x1dc>
    dbf4:	and	r1, r1, #15
    dbf8:	add	r4, pc, #4
    dbfc:	ldr	r2, [r4, r2, lsl #2]
    dc00:	add	pc, r4, r2
    dc04:	.word	0x00000040
    dc08:	.word	0x00000178
    dc0c:	.word	0x00000178
    dc10:	.word	0x00000178
    dc14:	.word	0x00000058
    dc18:	.word	0x00000074
    dc1c:	.word	0x00000090
    dc20:	.word	0x000000ac
    dc24:	.word	0x000000c4
    dc28:	.word	0x000000cc
    dc2c:	.word	0x000000d4
    dc30:	.word	0x000000dc
    dc34:	.word	0x0000011c
    dc38:	.word	0x0000012c
    dc3c:	.word	0x00000138
    dc40:	.word	0x00000144
    dc44:	mov	r2, #64	; 0x40
    dc48:	orr	r1, r2, r1, lsl #8
    dc4c:	ldrb	r2, [r6, #1]
    dc50:	add	r2, r1, r2
    dc54:	add	sl, r6, #2
    dc58:	b	dce4 <sas_rle_decompress+0x144>
    dc5c:	mov	r2, #18
    dc60:	orr	r2, r2, r1, lsl #8
    dc64:	ldrb	r4, [r6, #1]
    dc68:	ldrb	r1, [r6, #2]
    dc6c:	add	r2, r2, r4
    dc70:	add	sl, r6, #3
    dc74:	b	dd50 <sas_rle_decompress+0x1b0>
    dc78:	mov	r2, #17
    dc7c:	orr	r1, r2, r1, lsl #8
    dc80:	ldrb	r2, [r6, #1]
    dc84:	add	r2, r1, r2
    dc88:	add	sl, r6, #2
    dc8c:	mov	r1, #64	; 0x40
    dc90:	b	dd50 <sas_rle_decompress+0x1b0>
    dc94:	mov	r2, #17
    dc98:	orr	r1, r2, r1, lsl #8
    dc9c:	ldrb	r2, [r6, #1]
    dca0:	add	r2, r1, r2
    dca4:	add	sl, r6, #2
    dca8:	mov	r1, #32
    dcac:	b	dd50 <sas_rle_decompress+0x1b0>
    dcb0:	mov	r2, #17
    dcb4:	orr	r1, r2, r1, lsl #8
    dcb8:	ldrb	r2, [r6, #1]
    dcbc:	add	r2, r1, r2
    dcc0:	add	sl, r6, #2
    dcc4:	b	dd4c <sas_rle_decompress+0x1ac>
    dcc8:	add	r2, r1, #1
    dccc:	b	dce4 <sas_rle_decompress+0x144>
    dcd0:	add	r2, r1, #17
    dcd4:	b	dce4 <sas_rle_decompress+0x144>
    dcd8:	add	r2, r1, #33	; 0x21
    dcdc:	b	dce4 <sas_rle_decompress+0x144>
    dce0:	add	r2, r1, #49	; 0x31
    dce4:	add	r6, r2, r3
    dce8:	ldr	r1, [sp]
    dcec:	cmp	r6, r1
    dcf0:	addls	r9, sl, r2
    dcf4:	cmpls	r9, r7
    dcf8:	bhi	dd94 <sas_rle_decompress+0x1f4>
    dcfc:	cmp	r8, #0
    dd00:	beq	dd8c <sas_rle_decompress+0x1ec>
    dd04:	add	r0, r8, r3
    dd08:	mov	r1, sl
    dd0c:	bl	4998 <memcpy@plt>
    dd10:	ldr	r5, [pc, #148]	; ddac <sas_rle_decompress+0x20c>
    dd14:	add	r5, pc, r5
    dd18:	mov	sl, r9
    dd1c:	b	dd78 <sas_rle_decompress+0x1d8>
    dd20:	add	r2, r1, #3
    dd24:	add	sl, r6, #2
    dd28:	ldrb	r1, [r6, #1]
    dd2c:	b	dd50 <sas_rle_decompress+0x1b0>
    dd30:	add	r2, r1, #2
    dd34:	mov	r1, #64	; 0x40
    dd38:	b	dd50 <sas_rle_decompress+0x1b0>
    dd3c:	add	r2, r1, #2
    dd40:	mov	r1, #32
    dd44:	b	dd50 <sas_rle_decompress+0x1b0>
    dd48:	add	r2, r1, #2
    dd4c:	mov	r1, #0
    dd50:	add	r6, r2, r3
    dd54:	ldr	r4, [sp]
    dd58:	cmp	r6, r4
    dd5c:	bhi	dd94 <sas_rle_decompress+0x1f4>
    dd60:	cmp	r8, #0
    dd64:	beq	dd78 <sas_rle_decompress+0x1d8>
    dd68:	add	r0, r8, r3
    dd6c:	bl	4d28 <memset@plt>
    dd70:	ldr	r5, [pc, #56]	; ddb0 <sas_rle_decompress+0x210>
    dd74:	add	r5, pc, r5
    dd78:	mov	r3, r6
    dd7c:	cmp	sl, r7
    dd80:	mov	r0, r3
    dd84:	bcc	dbcc <sas_rle_decompress+0x2c>
    dd88:	b	dd94 <sas_rle_decompress+0x1f4>
    dd8c:	mov	sl, r9
    dd90:	b	dd78 <sas_rle_decompress+0x1d8>
    dd94:	sub	sp, fp, #28
    dd98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dd9c:	mov	r0, #0
    dda0:	sub	sp, fp, #28
    dda4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dda8:	.word	0x000181e0
    ddac:	.word	0x00018094
    ddb0:	.word	0x00018034

0000ddb4 <sas_rle_compressed_len>:
    ddb4:	mov	r2, r0
    ddb8:	mov	r0, #0
    ddbc:	mov	r3, r1
    ddc0:	b	ddc4 <sas_rle_compress>

0000ddc4 <sas_rle_compress>:
    ddc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ddc8:	add	fp, sp, #28
    ddcc:	sub	sp, sp, #12
    ddd0:	mov	sl, r2
    ddd4:	str	r0, [sp, #4]
    ddd8:	cmp	r3, #1
    dddc:	blt	deac <sas_rle_compress+0xe8>
    dde0:	add	r2, sl, r3
    dde4:	mov	r5, #0
    dde8:	movw	r3, #4111	; 0x100f
    ddec:	mov	r9, sl
    ddf0:	mov	r6, #0
    ddf4:	mov	r8, #0
    ddf8:	mov	r4, #0
    ddfc:	str	r2, [sp, #8]
    de00:	b	de14 <sas_rle_compress+0x50>
    de04:	mov	r4, #1
    de08:	add	r9, r9, #1
    de0c:	cmp	r9, r2
    de10:	bcs	debc <sas_rle_compress+0xf8>
    de14:	mov	r0, r5
    de18:	ldrb	r5, [r9]
    de1c:	cmp	r4, #0
    de20:	beq	de04 <sas_rle_compress+0x40>
    de24:	cmp	r4, r3
    de28:	bhi	de40 <sas_rle_compress+0x7c>
    de2c:	uxtb	r1, r0
    de30:	cmp	r5, r1
    de34:	bne	de40 <sas_rle_compress+0x7c>
    de38:	add	r4, r4, #1
    de3c:	b	de08 <sas_rle_compress+0x44>
    de40:	uxtb	r7, r0
    de44:	mov	r0, r7
    de48:	mov	r1, r4
    de4c:	bl	df2c <sas_rle_is_insert_run>
    de50:	cmp	r0, #0
    de54:	beq	de98 <sas_rle_compress+0xd4>
    de58:	mov	r2, sl
    de5c:	ldr	sl, [sp, #4]
    de60:	mov	r0, sl
    de64:	mov	r1, r6
    de68:	mov	r3, r8
    de6c:	bl	df60 <sas_rle_copy_run>
    de70:	add	r6, r0, r6
    de74:	mov	r0, sl
    de78:	mov	r1, r6
    de7c:	mov	r2, r7
    de80:	mov	r3, r4
    de84:	bl	e044 <sas_rle_insert_run>
    de88:	add	r6, r6, r0
    de8c:	mov	r8, #0
    de90:	mov	sl, r9
    de94:	b	de9c <sas_rle_compress+0xd8>
    de98:	add	r8, r8, r4
    de9c:	mov	r4, #1
    dea0:	ldr	r2, [sp, #8]
    dea4:	movw	r3, #4111	; 0x100f
    dea8:	b	de08 <sas_rle_compress+0x44>
    deac:	mov	r4, #0
    deb0:	mov	r8, #0
    deb4:	mov	r6, #0
    deb8:	mov	r5, #0
    debc:	mov	r0, r5
    dec0:	mov	r1, r4
    dec4:	bl	df2c <sas_rle_is_insert_run>
    dec8:	cmp	r0, #0
    decc:	beq	df0c <sas_rle_compress+0x148>
    ded0:	ldr	r7, [sp, #4]
    ded4:	mov	r0, r7
    ded8:	mov	r1, r6
    dedc:	mov	r2, sl
    dee0:	mov	r3, r8
    dee4:	bl	df60 <sas_rle_copy_run>
    dee8:	add	r6, r0, r6
    deec:	mov	r0, r7
    def0:	mov	r1, r6
    def4:	mov	r2, r5
    def8:	mov	r3, r4
    defc:	bl	e044 <sas_rle_insert_run>
    df00:	add	r0, r6, r0
    df04:	sub	sp, fp, #28
    df08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    df0c:	add	r3, r8, r4
    df10:	ldr	r0, [sp, #4]
    df14:	mov	r1, r6
    df18:	mov	r2, sl
    df1c:	bl	df60 <sas_rle_copy_run>
    df20:	add	r0, r0, r6
    df24:	sub	sp, fp, #28
    df28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000df2c <sas_rle_is_insert_run>:
    df2c:	push	{r4, r5, fp, lr}
    df30:	add	fp, sp, #8
    df34:	mov	r4, #0
    df38:	cmp	r1, #2
    df3c:	mov	r5, #0
    df40:	movwhi	r5, #1
    df44:	cmp	r1, #1
    df48:	movwhi	r4, #1
    df4c:	bl	e170 <sas_rle_is_special_byte>
    df50:	cmp	r0, #0
    df54:	moveq	r4, r5
    df58:	mov	r0, r4
    df5c:	pop	{r4, r5, fp, pc}

0000df60 <sas_rle_copy_run>:
    df60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    df64:	add	fp, sp, #28
    df68:	sub	sp, sp, #4
    df6c:	mov	r4, r3
    df70:	cmp	r0, #0
    df74:	beq	dfe8 <sas_rle_copy_run+0x88>
    df78:	mov	r5, r2
    df7c:	add	r6, r0, r1
    df80:	movw	r7, #4159	; 0x103f
    df84:	cmp	r4, r7
    df88:	str	r6, [sp]
    df8c:	bcc	dfc8 <sas_rle_copy_run+0x68>
    df90:	movw	r9, #4161	; 0x1041
    df94:	movw	sl, #65295	; 0xff0f
    df98:	movw	r8, #4158	; 0x103e
    df9c:	mov	r0, r6
    dfa0:	strh	sl, [r6], r9
    dfa4:	add	r0, r0, #2
    dfa8:	mov	r1, r5
    dfac:	movw	r2, #4159	; 0x103f
    dfb0:	bl	4998 <memcpy@plt>
    dfb4:	sub	r4, r4, r7
    dfb8:	add	r5, r5, r7
    dfbc:	cmp	r4, r8
    dfc0:	mov	r0, r6
    dfc4:	bhi	dfa0 <sas_rle_copy_run+0x40>
    dfc8:	cmp	r4, #65	; 0x41
    dfcc:	bcc	dff8 <sas_rle_copy_run+0x98>
    dfd0:	sub	r0, r4, #64	; 0x40
    dfd4:	strb	r0, [r6, #1]
    dfd8:	ubfx	r0, r0, #8, #4
    dfdc:	strb	r0, [r6]
    dfe0:	add	r6, r6, #2
    dfe4:	b	e014 <sas_rle_copy_run+0xb4>
    dfe8:	mov	r0, r4
    dfec:	sub	sp, fp, #28
    dff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dff4:	b	e18c <sas_rle_measure_copy_run>
    dff8:	cmp	r4, #49	; 0x31
    dffc:	bcs	e00c <sas_rle_copy_run+0xac>
    e000:	cmp	r4, #33	; 0x21
    e004:	cmpcc	r4, #17
    e008:	bcc	e038 <sas_rle_copy_run+0xd8>
    e00c:	add	r0, r4, #127	; 0x7f
    e010:	strb	r0, [r6], #1
    e014:	mov	r0, r6
    e018:	mov	r1, r5
    e01c:	mov	r2, r4
    e020:	bl	4998 <memcpy@plt>
    e024:	add	r0, r6, r4
    e028:	ldr	r1, [sp]
    e02c:	sub	r0, r0, r1
    e030:	sub	sp, fp, #28
    e034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e038:	cmp	r4, #0
    e03c:	bne	e00c <sas_rle_copy_run+0xac>
    e040:	b	e014 <sas_rle_copy_run+0xb4>

0000e044 <sas_rle_insert_run>:
    e044:	push	{r4, r5, r6, sl, fp, lr}
    e048:	add	fp, sp, #16
    e04c:	mov	r4, r3
    e050:	mov	r5, r2
    e054:	cmp	r0, #0
    e058:	beq	e0a0 <sas_rle_insert_run+0x5c>
    e05c:	add	r6, r0, r1
    e060:	mov	r0, r5
    e064:	bl	e170 <sas_rle_is_special_byte>
    e068:	cmp	r0, #0
    e06c:	beq	e0b0 <sas_rle_insert_run+0x6c>
    e070:	cmp	r4, #18
    e074:	bcc	e0e0 <sas_rle_insert_run+0x9c>
    e078:	sub	r1, r4, #17
    e07c:	cmp	r5, #0
    e080:	beq	e130 <sas_rle_insert_run+0xec>
    e084:	cmp	r5, #64	; 0x40
    e088:	beq	e138 <sas_rle_insert_run+0xf4>
    e08c:	cmp	r5, #32
    e090:	mov	r0, r6
    e094:	bne	e164 <sas_rle_insert_run+0x120>
    e098:	mov	r0, #96	; 0x60
    e09c:	b	e13c <sas_rle_insert_run+0xf8>
    e0a0:	mov	r0, r5
    e0a4:	mov	r1, r4
    e0a8:	pop	{r4, r5, r6, sl, fp, lr}
    e0ac:	b	e1e0 <sas_rle_measure_insert_run>
    e0b0:	cmp	r4, #19
    e0b4:	bcc	e110 <sas_rle_insert_run+0xcc>
    e0b8:	strb	r5, [r6, #2]
    e0bc:	sub	r0, r4, #18
    e0c0:	strb	r0, [r6, #1]
    e0c4:	lsr	r0, r0, #8
    e0c8:	mov	r1, #4
    e0cc:	bfi	r0, r1, #4, #28
    e0d0:	strb	r0, [r6]
    e0d4:	add	r0, r6, #3
    e0d8:	sub	r0, r0, r6
    e0dc:	pop	{r4, r5, r6, sl, fp, pc}
    e0e0:	cmp	r4, #2
    e0e4:	mov	r0, r6
    e0e8:	bcc	e128 <sas_rle_insert_run+0xe4>
    e0ec:	cmp	r5, #0
    e0f0:	beq	e154 <sas_rle_insert_run+0x110>
    e0f4:	cmp	r5, #32
    e0f8:	beq	e15c <sas_rle_insert_run+0x118>
    e0fc:	cmp	r5, #64	; 0x40
    e100:	mov	r0, r6
    e104:	bne	e128 <sas_rle_insert_run+0xe4>
    e108:	sub	r1, r4, #50	; 0x32
    e10c:	b	e160 <sas_rle_insert_run+0x11c>
    e110:	cmp	r4, #3
    e114:	mov	r0, r6
    e118:	strbcs	r5, [r6, #1]
    e11c:	subcs	r0, r4, #67	; 0x43
    e120:	strbcs	r0, [r6]
    e124:	addcs	r0, r6, #2
    e128:	sub	r0, r0, r6
    e12c:	pop	{r4, r5, r6, sl, fp, pc}
    e130:	mov	r0, #112	; 0x70
    e134:	b	e13c <sas_rle_insert_run+0xf8>
    e138:	mov	r0, #80	; 0x50
    e13c:	lsr	r2, r1, #8
    e140:	and	r2, r2, #15
    e144:	orr	r2, r2, r0
    e148:	mov	r0, r6
    e14c:	strb	r2, [r0], #1
    e150:	b	e164 <sas_rle_insert_run+0x120>
    e154:	sub	r1, r4, #18
    e158:	b	e160 <sas_rle_insert_run+0x11c>
    e15c:	sub	r1, r4, #34	; 0x22
    e160:	mov	r0, r6
    e164:	strb	r1, [r0], #1
    e168:	sub	r0, r0, r6
    e16c:	pop	{r4, r5, r6, sl, fp, pc}

0000e170 <sas_rle_is_special_byte>:
    e170:	mov	r1, r0
    e174:	mov	r0, #1
    e178:	cmp	r1, #32
    e17c:	cmpne	r1, #64	; 0x40
    e180:	clzne	r0, r1
    e184:	lsrne	r0, r0, #5
    e188:	bx	lr

0000e18c <sas_rle_measure_copy_run>:
    e18c:	mov	r1, #0
    e190:	movw	r2, #4159	; 0x103f
    e194:	cmp	r0, r2
    e198:	bcc	e1c4 <sas_rle_measure_copy_run+0x38>
    e19c:	sub	r0, r0, r2
    e1a0:	movw	r1, #17633	; 0x44e1
    e1a4:	movt	r1, #64543	; 0xfc1f
    e1a8:	umull	r1, r2, r0, r1
    e1ac:	lsr	r1, r2, #12
    e1b0:	movw	r2, #61377	; 0xefc1
    e1b4:	movt	r2, #65535	; 0xffff
    e1b8:	mla	r0, r1, r2, r0
    e1bc:	movw	r2, #4161	; 0x1041
    e1c0:	mla	r1, r1, r2, r2
    e1c4:	add	r1, r1, r0
    e1c8:	cmp	r0, #64	; 0x40
    e1cc:	addhi	r1, r1, #1
    e1d0:	cmp	r0, #0
    e1d4:	addne	r1, r1, #1
    e1d8:	mov	r0, r1
    e1dc:	bx	lr

0000e1e0 <sas_rle_measure_insert_run>:
    e1e0:	push	{r4, r5, fp, lr}
    e1e4:	add	fp, sp, #8
    e1e8:	mov	r5, #2
    e1ec:	cmp	r1, #18
    e1f0:	movwhi	r5, #3
    e1f4:	mov	r4, #1
    e1f8:	cmp	r1, #17
    e1fc:	movwhi	r4, #2
    e200:	bl	e170 <sas_rle_is_special_byte>
    e204:	cmp	r0, #0
    e208:	moveq	r4, r5
    e20c:	mov	r0, r4
    e210:	pop	{r4, r5, fp, pc}

0000e214 <xport_namestr_bswap>:
    e214:	push	{r4, sl, fp, lr}
    e218:	add	fp, sp, #8
    e21c:	mov	r4, r0
    e220:	bl	492c <machine_is_little_endian@plt>
    e224:	cmp	r0, #0
    e228:	popeq	{r4, sl, fp, pc}
    e22c:	ldrh	r0, [r4]
    e230:	bl	4920 <byteswap2@plt>
    e234:	strh	r0, [r4]
    e238:	ldrh	r0, [r4, #2]
    e23c:	bl	4920 <byteswap2@plt>
    e240:	strh	r0, [r4, #2]
    e244:	ldrh	r0, [r4, #4]
    e248:	bl	4920 <byteswap2@plt>
    e24c:	strh	r0, [r4, #4]
    e250:	ldrh	r0, [r4, #6]
    e254:	bl	4920 <byteswap2@plt>
    e258:	strh	r0, [r4, #6]
    e25c:	ldrh	r0, [r4, #64]	; 0x40
    e260:	bl	4920 <byteswap2@plt>
    e264:	strh	r0, [r4, #64]	; 0x40
    e268:	ldrh	r0, [r4, #66]	; 0x42
    e26c:	bl	4920 <byteswap2@plt>
    e270:	strh	r0, [r4, #66]	; 0x42
    e274:	ldrh	r0, [r4, #68]	; 0x44
    e278:	bl	4920 <byteswap2@plt>
    e27c:	strh	r0, [r4, #68]	; 0x44
    e280:	ldrh	r0, [r4, #80]	; 0x50
    e284:	bl	4920 <byteswap2@plt>
    e288:	strh	r0, [r4, #80]	; 0x50
    e28c:	ldrh	r0, [r4, #82]	; 0x52
    e290:	bl	4920 <byteswap2@plt>
    e294:	strh	r0, [r4, #82]	; 0x52
    e298:	ldr	r0, [r4, #84]	; 0x54
    e29c:	bl	480c <byteswap4@plt>
    e2a0:	str	r0, [r4, #84]	; 0x54
    e2a4:	ldrh	r0, [r4, #120]	; 0x78
    e2a8:	bl	4920 <byteswap2@plt>
    e2ac:	strh	r0, [r4, #120]	; 0x78
    e2b0:	pop	{r4, sl, fp, pc}

0000e2b4 <readstat_parse_xport>:
    e2b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    e2b8:	add	fp, sp, #24
    e2bc:	mov	r6, r2
    e2c0:	mov	r9, r1
    e2c4:	mov	r7, r0
    e2c8:	ldr	r8, [r0, #32]
    e2cc:	add	r5, r0, #16
    e2d0:	bl	edec <xport_ctx_init>
    e2d4:	mov	r4, r0
    e2d8:	mov	r0, #48	; 0x30
    e2dc:	vld1.32	{d16-d17}, [r5]
    e2e0:	mov	r1, r7
    e2e4:	vld1.32	{d18-d19}, [r1], r0
    e2e8:	add	r0, r4, #16
    e2ec:	vst1.32	{d16-d17}, [r0]
    e2f0:	mov	r0, #68	; 0x44
    e2f4:	mov	r2, r4
    e2f8:	vst1.32	{d18-d19}, [r2], r0
    e2fc:	add	r7, r7, #36	; 0x24
    e300:	ldm	r7, {r0, r3, r7}
    e304:	str	r8, [r4, #52]	; 0x34
    e308:	str	r6, [r4, #36]	; 0x24
    e30c:	str	r0, [r4, #40]	; 0x28
    e310:	str	r3, [r4, #44]	; 0x2c
    e314:	str	r7, [r2]
    e318:	ldr	r0, [r1]
    e31c:	cmp	r0, #1
    e320:	strge	r0, [r4, #72]	; 0x48
    e324:	ldr	r2, [r8]
    e328:	ldr	r1, [r8, #20]
    e32c:	mov	r0, r9
    e330:	blx	r2
    e334:	cmn	r0, #1
    e338:	beq	e4b0 <readstat_parse_xport+0x1fc>
    e33c:	ldr	r3, [r8, #8]
    e340:	ldr	r2, [r8, #20]
    e344:	mov	r0, #0
    e348:	mov	r1, #2
    e34c:	blx	r3
    e350:	str	r0, [r4, #32]
    e354:	mov	r5, #15
    e358:	cmn	r0, #1
    e35c:	beq	e4b4 <readstat_parse_xport+0x200>
    e360:	ldr	r3, [r8, #8]
    e364:	ldr	r2, [r8, #20]
    e368:	mov	r0, #0
    e36c:	mov	r1, #0
    e370:	blx	r3
    e374:	cmn	r0, #1
    e378:	beq	e4b4 <readstat_parse_xport+0x200>
    e37c:	ldr	r5, [r4, #40]	; 0x28
    e380:	cmp	r5, #0
    e384:	beq	e3c0 <readstat_parse_xport+0x10c>
    e388:	ldr	r6, [r4, #44]	; 0x2c
    e38c:	cmp	r6, #0
    e390:	beq	e3c0 <readstat_parse_xport+0x10c>
    e394:	mov	r0, r5
    e398:	mov	r1, r6
    e39c:	bl	4878 <strcmp@plt>
    e3a0:	cmp	r0, #0
    e3a4:	beq	e3c0 <readstat_parse_xport+0x10c>
    e3a8:	mov	r0, r6
    e3ac:	mov	r1, r5
    e3b0:	bl	4bb4 <iconv_open@plt>
    e3b4:	cmn	r0, #1
    e3b8:	beq	e4d0 <readstat_parse_xport+0x21c>
    e3bc:	str	r0, [r4, #48]	; 0x30
    e3c0:	mov	r0, r4
    e3c4:	bl	e4f0 <xport_read_library_record>
    e3c8:	mov	r5, r0
    e3cc:	cmp	r0, #0
    e3d0:	bne	e4b4 <readstat_parse_xport+0x200>
    e3d4:	mov	r0, r4
    e3d8:	bl	e57c <xport_skip_record>
    e3dc:	mov	r5, r0
    e3e0:	cmp	r0, #0
    e3e4:	bne	e4b4 <readstat_parse_xport+0x200>
    e3e8:	mov	r0, r4
    e3ec:	bl	e5b0 <xport_read_timestamp_record>
    e3f0:	mov	r5, r0
    e3f4:	cmp	r0, #0
    e3f8:	bne	e4b4 <readstat_parse_xport+0x200>
    e3fc:	ldr	r1, [pc, #220]	; e4e0 <readstat_parse_xport+0x22c>
    e400:	add	r1, pc, r1
    e404:	ldr	r2, [pc, #216]	; e4e4 <readstat_parse_xport+0x230>
    e408:	add	r2, pc, r2
    e40c:	mov	r0, r4
    e410:	bl	e6a4 <xport_expect_header_record>
    e414:	mov	r5, r0
    e418:	cmp	r0, #0
    e41c:	bne	e4b4 <readstat_parse_xport+0x200>
    e420:	ldr	r1, [pc, #192]	; e4e8 <readstat_parse_xport+0x234>
    e424:	add	r1, pc, r1
    e428:	ldr	r2, [pc, #188]	; e4ec <readstat_parse_xport+0x238>
    e42c:	add	r2, pc, r2
    e430:	mov	r0, r4
    e434:	bl	e6a4 <xport_expect_header_record>
    e438:	mov	r5, r0
    e43c:	cmp	r0, #0
    e440:	bne	e4b4 <readstat_parse_xport+0x200>
    e444:	mov	r0, r4
    e448:	bl	e70c <xport_read_table_name_record>
    e44c:	mov	r5, r0
    e450:	cmp	r0, #0
    e454:	bne	e4b4 <readstat_parse_xport+0x200>
    e458:	mov	r0, r4
    e45c:	bl	e768 <xport_read_file_label_record>
    e460:	mov	r5, r0
    e464:	cmp	r0, #0
    e468:	bne	e4b4 <readstat_parse_xport+0x200>
    e46c:	mov	r0, r4
    e470:	bl	e7b8 <xport_read_namestr_header_record>
    e474:	mov	r5, r0
    e478:	cmp	r0, #0
    e47c:	bne	e4b4 <readstat_parse_xport+0x200>
    e480:	mov	r0, r4
    e484:	bl	e8f8 <xport_read_variables>
    e488:	mov	r5, r0
    e48c:	cmp	r0, #0
    e490:	bne	e4b4 <readstat_parse_xport+0x200>
    e494:	ldr	r0, [r4, #76]	; 0x4c
    e498:	cmp	r0, #0
    e49c:	beq	e4d8 <readstat_parse_xport+0x224>
    e4a0:	mov	r0, r4
    e4a4:	bl	ebc4 <xport_read_data>
    e4a8:	mov	r5, r0
    e4ac:	b	e4b4 <readstat_parse_xport+0x200>
    e4b0:	mov	r5, #1
    e4b4:	ldr	r1, [r8, #4]
    e4b8:	ldr	r0, [r8, #20]
    e4bc:	blx	r1
    e4c0:	mov	r0, r4
    e4c4:	bl	ed74 <xport_ctx_free>
    e4c8:	mov	r0, r5
    e4cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    e4d0:	mov	r5, #7
    e4d4:	b	e4b4 <readstat_parse_xport+0x200>
    e4d8:	mov	r5, #0
    e4dc:	b	e4b4 <readstat_parse_xport+0x200>
    e4e0:	.word	0x000179e8
    e4e4:	.word	0x000179e7
    e4e8:	.word	0x000179d2
    e4ec:	.word	0x000179d2

0000e4f0 <xport_read_library_record>:
    e4f0:	push	{r4, sl, fp, lr}
    e4f4:	add	fp, sp, #8
    e4f8:	sub	sp, sp, #40	; 0x28
    e4fc:	mov	r4, r0
    e500:	add	r1, sp, #4
    e504:	bl	edf8 <xport_read_header_record>
    e508:	cmp	r0, #0
    e50c:	bne	e550 <xport_read_library_record+0x60>
    e510:	add	r0, sp, #4
    e514:	ldr	r1, [pc, #88]	; e574 <xport_read_library_record+0x84>
    e518:	add	r1, pc, r1
    e51c:	mov	r2, #8
    e520:	bl	4c74 <bcmp@plt>
    e524:	cmp	r0, #0
    e528:	beq	e558 <xport_read_library_record+0x68>
    e52c:	add	r0, sp, #4
    e530:	ldr	r1, [pc, #64]	; e578 <xport_read_library_record+0x88>
    e534:	add	r1, pc, r1
    e538:	mov	r2, #6
    e53c:	bl	4c74 <bcmp@plt>
    e540:	mov	r1, r0
    e544:	mov	r0, #24
    e548:	cmp	r1, #0
    e54c:	beq	e560 <xport_read_library_record+0x70>
    e550:	sub	sp, fp, #8
    e554:	pop	{r4, sl, fp, pc}
    e558:	mov	r0, #5
    e55c:	b	e564 <xport_read_library_record+0x74>
    e560:	mov	r0, #8
    e564:	str	r0, [r4, #380]	; 0x17c
    e568:	mov	r0, #0
    e56c:	sub	sp, fp, #8
    e570:	pop	{r4, sl, fp, pc}
    e574:	.word	0x000178ee
    e578:	.word	0x000178da

0000e57c <xport_skip_record>:
    e57c:	push	{fp, lr}
    e580:	mov	fp, sp
    e584:	ldr	r0, [r0, #52]	; 0x34
    e588:	ldr	r3, [r0, #8]
    e58c:	ldr	r2, [r0, #20]
    e590:	mov	r0, #80	; 0x50
    e594:	mov	r1, #1
    e598:	blx	r3
    e59c:	mov	r1, #0
    e5a0:	cmn	r0, #1
    e5a4:	movweq	r1, #15
    e5a8:	mov	r0, r1
    e5ac:	pop	{fp, pc}

0000e5b0 <xport_read_timestamp_record>:
    e5b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    e5b4:	add	fp, sp, #24
    e5b8:	sub	sp, sp, #152	; 0x98
    e5bc:	mov	r8, r0
    e5c0:	vmov.i32	q8, #0	; 0x00000000
    e5c4:	add	r6, sp, #24
    e5c8:	add	r0, r6, #28
    e5cc:	vst1.32	{d16-d17}, [r0]
    e5d0:	add	r0, r6, #16
    e5d4:	vst1.64	{d16-d17}, [r0]
    e5d8:	mov	r0, #32
    e5dc:	mov	r1, r6
    e5e0:	vst1.64	{d16-d17}, [r1], r0
    e5e4:	mvn	r0, #0
    e5e8:	str	r0, [r1]
    e5ec:	add	r1, sp, #71	; 0x47
    e5f0:	mov	r0, r8
    e5f4:	bl	ee84 <xport_read_record>
    e5f8:	mov	r5, r0
    e5fc:	cmp	r0, #0
    e600:	bne	e690 <xport_read_timestamp_record+0xe0>
    e604:	orr	r0, r6, #4
    e608:	add	r1, r6, #8
    e60c:	add	r2, r6, #20
    e610:	str	r2, [sp]
    e614:	str	r1, [sp, #4]
    e618:	str	r0, [sp, #8]
    e61c:	str	r6, [sp, #12]
    e620:	add	r2, r6, #12
    e624:	add	r0, sp, #71	; 0x47
    e628:	ldr	r1, [pc, #108]	; e69c <xport_read_timestamp_record+0xec>
    e62c:	add	r1, pc, r1
    e630:	add	r6, sp, #20
    e634:	mov	r3, r6
    e638:	bl	4d10 <__isoc99_sscanf@plt>
    e63c:	mov	r4, #0
    e640:	ldr	r7, [pc, #88]	; e6a0 <xport_read_timestamp_record+0xf0>
    e644:	ldr	r7, [pc, r7]
    e648:	mov	r0, r6
    e64c:	mov	r1, r7
    e650:	bl	4878 <strcmp@plt>
    e654:	cmp	r0, #0
    e658:	beq	e670 <xport_read_timestamp_record+0xc0>
    e65c:	add	r7, r7, #4
    e660:	add	r4, r4, #1
    e664:	cmp	r4, #12
    e668:	bne	e648 <xport_read_timestamp_record+0x98>
    e66c:	b	e674 <xport_read_timestamp_record+0xc4>
    e670:	str	r4, [sp, #40]	; 0x28
    e674:	ldr	r0, [sp, #44]	; 0x2c
    e678:	cmp	r0, #59	; 0x3b
    e67c:	addle	r0, r0, #100	; 0x64
    e680:	strle	r0, [sp, #44]	; 0x2c
    e684:	add	r0, sp, #24
    e688:	bl	48cc <mktime@plt>
    e68c:	str	r0, [r8, #56]	; 0x38
    e690:	mov	r0, r5
    e694:	sub	sp, fp, #24
    e698:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    e69c:	.word	0x0001782d
    e6a0:	.word	0x00036c98

0000e6a4 <xport_expect_header_record>:
    e6a4:	push	{r4, r5, r6, sl, fp, lr}
    e6a8:	add	fp, sp, #16
    e6ac:	sub	sp, sp, #40	; 0x28
    e6b0:	mov	r5, r2
    e6b4:	mov	r4, r1
    e6b8:	mov	r6, r0
    e6bc:	add	r1, sp, #4
    e6c0:	bl	edf8 <xport_read_header_record>
    e6c4:	cmp	r0, #0
    e6c8:	bne	e704 <xport_expect_header_record+0x60>
    e6cc:	ldr	r1, [r6, #380]	; 0x17c
    e6d0:	cmp	r1, #8
    e6d4:	beq	e6f0 <xport_expect_header_record+0x4c>
    e6d8:	mov	r0, #0
    e6dc:	cmp	r1, #5
    e6e0:	bne	e704 <xport_expect_header_record+0x60>
    e6e4:	add	r0, sp, #4
    e6e8:	mov	r1, r4
    e6ec:	b	e6f8 <xport_expect_header_record+0x54>
    e6f0:	add	r0, sp, #4
    e6f4:	mov	r1, r5
    e6f8:	bl	4878 <strcmp@plt>
    e6fc:	cmp	r0, #0
    e700:	movwne	r0, #5
    e704:	sub	sp, fp, #16
    e708:	pop	{r4, r5, r6, sl, fp, pc}

0000e70c <xport_read_table_name_record>:
    e70c:	push	{r4, r5, fp, lr}
    e710:	add	fp, sp, #8
    e714:	sub	sp, sp, #88	; 0x58
    e718:	mov	r4, r0
    e71c:	add	r5, sp, #7
    e720:	mov	r1, r5
    e724:	bl	ee84 <xport_read_record>
    e728:	cmp	r0, #0
    e72c:	beq	e738 <xport_read_table_name_record+0x2c>
    e730:	sub	sp, fp, #8
    e734:	pop	{r4, r5, fp, pc}
    e738:	ldr	r0, [r4, #48]	; 0x30
    e73c:	ldr	r1, [r4, #380]	; 0x17c
    e740:	str	r0, [sp]
    e744:	mov	r3, #32
    e748:	cmp	r1, #5
    e74c:	movweq	r3, #8
    e750:	add	r0, r4, #245	; 0xf5
    e754:	add	r2, r5, #8
    e758:	mov	r1, #129	; 0x81
    e75c:	bl	4cbc <readstat_convert@plt>
    e760:	sub	sp, fp, #8
    e764:	pop	{r4, r5, fp, pc}

0000e768 <xport_read_file_label_record>:
    e768:	push	{r4, r5, fp, lr}
    e76c:	add	fp, sp, #8
    e770:	sub	sp, sp, #88	; 0x58
    e774:	mov	r4, r0
    e778:	add	r5, sp, #7
    e77c:	mov	r1, r5
    e780:	bl	ee84 <xport_read_record>
    e784:	cmp	r0, #0
    e788:	beq	e794 <xport_read_file_label_record+0x2c>
    e78c:	sub	sp, fp, #8
    e790:	pop	{r4, r5, fp, pc}
    e794:	ldr	r0, [r4, #48]	; 0x30
    e798:	str	r0, [sp]
    e79c:	add	r0, r4, #84	; 0x54
    e7a0:	add	r2, r5, #32
    e7a4:	mov	r1, #161	; 0xa1
    e7a8:	mov	r3, #40	; 0x28
    e7ac:	bl	4cbc <readstat_convert@plt>
    e7b0:	sub	sp, fp, #8
    e7b4:	pop	{r4, r5, fp, pc}

0000e7b8 <xport_read_namestr_header_record>:
    e7b8:	push	{r4, r6, r7, sl, fp, lr}
    e7bc:	add	fp, sp, #16
    e7c0:	sub	sp, sp, #96	; 0x60
    e7c4:	mov	r4, r0
    e7c8:	sub	r1, fp, #52	; 0x34
    e7cc:	bl	edf8 <xport_read_header_record>
    e7d0:	cmp	r0, #0
    e7d4:	beq	e7e0 <xport_read_namestr_header_record+0x28>
    e7d8:	sub	sp, fp, #16
    e7dc:	pop	{r4, r6, r7, sl, fp, pc}
    e7e0:	ldr	r0, [r4, #380]	; 0x17c
    e7e4:	cmp	r0, #8
    e7e8:	beq	e804 <xport_read_namestr_header_record+0x4c>
    e7ec:	cmp	r0, #5
    e7f0:	bne	e828 <xport_read_namestr_header_record+0x70>
    e7f4:	sub	r0, fp, #52	; 0x34
    e7f8:	ldr	r1, [pc, #240]	; e8f0 <xport_read_namestr_header_record+0x138>
    e7fc:	add	r1, pc, r1
    e800:	b	e810 <xport_read_namestr_header_record+0x58>
    e804:	sub	r0, fp, #52	; 0x34
    e808:	ldr	r1, [pc, #228]	; e8f4 <xport_read_namestr_header_record+0x13c>
    e80c:	add	r1, pc, r1
    e810:	mov	r2, #8
    e814:	bl	4c74 <bcmp@plt>
    e818:	mov	r1, r0
    e81c:	mov	r0, #5
    e820:	cmp	r1, #0
    e824:	bne	e7d8 <xport_read_namestr_header_record+0x20>
    e828:	ldr	r0, [fp, #-36]	; 0xffffffdc
    e82c:	str	r0, [r4, #64]	; 0x40
    e830:	mov	r1, #4
    e834:	bl	4a28 <readstat_calloc@plt>
    e838:	str	r0, [r4, #376]	; 0x178
    e83c:	cmp	r0, #0
    e840:	beq	e8d8 <xport_read_namestr_header_record+0x120>
    e844:	ldr	r2, [r4]
    e848:	cmp	r2, #0
    e84c:	beq	e8e4 <xport_read_namestr_header_record+0x12c>
    e850:	mov	r0, sp
    e854:	add	r1, r0, #8
    e858:	add	r0, r0, #24
    e85c:	mvn	r3, #0
    e860:	str	r3, [sp, #4]
    e864:	str	r3, [sp]
    e868:	ldr	r6, [r4, #64]	; 0x40
    e86c:	asr	r7, r6, #31
    e870:	strd	r6, [r1]
    e874:	ldr	r1, [r4, #56]	; 0x38
    e878:	str	r1, [sp, #20]
    e87c:	str	r1, [sp, #16]
    e880:	ldr	r6, [r4, #380]	; 0x17c
    e884:	asr	r7, r6, #31
    e888:	strd	r6, [r0]
    e88c:	mov	r0, #0
    e890:	str	r0, [sp, #48]	; 0x30
    e894:	add	r1, r4, #84	; 0x54
    e898:	str	r1, [sp, #44]	; 0x2c
    e89c:	add	r1, r4, #245	; 0xf5
    e8a0:	str	r1, [sp, #40]	; 0x28
    e8a4:	str	r0, [sp, #36]	; 0x24
    e8a8:	str	r0, [sp, #32]
    e8ac:	ldrb	r0, [sp, #52]	; 0x34
    e8b0:	and	r0, r0, #254	; 0xfe
    e8b4:	strb	r0, [sp, #52]	; 0x34
    e8b8:	ldr	r1, [r4, #36]	; 0x24
    e8bc:	mov	r0, sp
    e8c0:	blx	r2
    e8c4:	cmp	r0, #0
    e8c8:	movwne	r0, #1
    e8cc:	lsl	r0, r0, #2
    e8d0:	sub	sp, fp, #16
    e8d4:	pop	{r4, r6, r7, sl, fp, pc}
    e8d8:	mov	r0, #3
    e8dc:	sub	sp, fp, #16
    e8e0:	pop	{r4, r6, r7, sl, fp, pc}
    e8e4:	mov	r0, #0
    e8e8:	sub	sp, fp, #16
    e8ec:	pop	{r4, r6, r7, sl, fp, pc}
    e8f0:	.word	0x00017678
    e8f4:	.word	0x00017670

0000e8f8 <xport_read_variables>:
    e8f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e8fc:	add	fp, sp, #28
    e900:	sub	sp, sp, #148	; 0x94
    e904:	mov	r4, r0
    e908:	ldr	r0, [r0, #64]	; 0x40
    e90c:	cmp	r0, #1
    e910:	blt	ea44 <xport_read_variables+0x14c>
    e914:	add	r8, sp, #8
    e918:	add	sl, r8, #56	; 0x38
    e91c:	add	r7, r8, #16
    e920:	add	r0, r8, #8
    e924:	str	r0, [sp, #4]
    e928:	add	r9, r8, #88	; 0x58
    e92c:	mov	r5, #0
    e930:	mov	r0, r4
    e934:	mov	r1, r8
    e938:	mov	r2, #140	; 0x8c
    e93c:	bl	eeb0 <read_bytes>
    e940:	cmp	r0, #140	; 0x8c
    e944:	bcc	ea7c <xport_read_variables+0x184>
    e948:	mov	r0, r8
    e94c:	bl	4b00 <xport_namestr_bswap@plt>
    e950:	mov	r0, #1
    e954:	movw	r1, #2152	; 0x868
    e958:	bl	47d0 <calloc@plt>
    e95c:	mov	r6, r0
    e960:	ldrh	r0, [sp, #8]
    e964:	subs	r0, r0, #2
    e968:	movwne	r0, #5
    e96c:	stm	r6, {r0, r5}
    e970:	ldrh	r0, [sp, #12]
    e974:	str	r0, [r6, #1596]	; 0x63c
    e978:	ldrh	r0, [sp, #72]	; 0x48
    e97c:	ldrh	r1, [sp, #74]	; 0x4a
    e980:	ldrh	r2, [sp, #76]	; 0x4c
    e984:	cmp	r2, #0
    e988:	mov	r2, #3
    e98c:	movweq	r2, #1
    e990:	str	r2, [r6, #2132]	; 0x854
    e994:	str	r0, [r6, #2136]	; 0x858
    e998:	str	r1, [r6, #2140]	; 0x85c
    e99c:	add	r0, r6, #8
    e9a0:	ldr	r1, [r4, #380]	; 0x17c
    e9a4:	cmp	r1, #5
    e9a8:	bne	e9c4 <xport_read_variables+0xcc>
    e9ac:	ldr	r1, [r4, #48]	; 0x30
    e9b0:	str	r1, [sp]
    e9b4:	mov	r1, #300	; 0x12c
    e9b8:	ldr	r2, [sp, #4]
    e9bc:	mov	r3, #8
    e9c0:	b	e9d8 <xport_read_variables+0xe0>
    e9c4:	ldr	r1, [r4, #48]	; 0x30
    e9c8:	str	r1, [sp]
    e9cc:	mov	r1, #300	; 0x12c
    e9d0:	mov	r2, r9
    e9d4:	mov	r3, #32
    e9d8:	bl	4cbc <readstat_convert@plt>
    e9dc:	cmp	r0, #0
    e9e0:	bne	ea54 <xport_read_variables+0x15c>
    e9e4:	ldr	r0, [r4, #48]	; 0x30
    e9e8:	str	r0, [sp]
    e9ec:	add	r0, r6, #564	; 0x234
    e9f0:	mov	r1, #1024	; 0x400
    e9f4:	mov	r2, r7
    e9f8:	mov	r3, #40	; 0x28
    e9fc:	bl	4cbc <readstat_convert@plt>
    ea00:	cmp	r0, #0
    ea04:	bne	ea54 <xport_read_variables+0x15c>
    ea08:	ldr	r3, [r6, #2136]	; 0x858
    ea0c:	ldr	r0, [r6, #2140]	; 0x85c
    ea10:	str	r0, [sp]
    ea14:	add	r0, r6, #308	; 0x134
    ea18:	mov	r1, sl
    ea1c:	mov	r2, #8
    ea20:	bl	eecc <xport_construct_format>
    ea24:	cmp	r0, #0
    ea28:	bne	ea54 <xport_read_variables+0x15c>
    ea2c:	ldr	r0, [r4, #376]	; 0x178
    ea30:	str	r6, [r0, r5, lsl #2]
    ea34:	add	r5, r5, #1
    ea38:	ldr	r0, [r4, #64]	; 0x40
    ea3c:	cmp	r5, r0
    ea40:	blt	e930 <xport_read_variables+0x38>
    ea44:	mov	r0, r4
    ea48:	bl	efbc <xport_skip_rest_of_record>
    ea4c:	cmp	r0, #0
    ea50:	beq	ea5c <xport_read_variables+0x164>
    ea54:	sub	sp, fp, #28
    ea58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ea5c:	ldr	r0, [r4, #380]	; 0x17c
    ea60:	cmp	r0, #5
    ea64:	bne	ea88 <xport_read_variables+0x190>
    ea68:	mov	r0, r4
    ea6c:	bl	f03c <xport_read_obs_header_record>
    ea70:	cmp	r0, #0
    ea74:	bne	ea54 <xport_read_variables+0x15c>
    ea78:	b	eb1c <xport_read_variables+0x224>
    ea7c:	mov	r0, #2
    ea80:	sub	sp, fp, #28
    ea84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ea88:	add	r1, sp, #8
    ea8c:	mov	r0, r4
    ea90:	bl	edf8 <xport_read_header_record>
    ea94:	cmp	r0, #0
    ea98:	bne	ea54 <xport_read_variables+0x15c>
    ea9c:	add	r0, sp, #8
    eaa0:	ldr	r1, [pc, #272]	; ebb8 <xport_read_variables+0x2c0>
    eaa4:	add	r1, pc, r1
    eaa8:	mov	r2, #6
    eaac:	bl	4c74 <bcmp@plt>
    eab0:	cmp	r0, #0
    eab4:	beq	eb1c <xport_read_variables+0x224>
    eab8:	add	r0, sp, #8
    eabc:	ldr	r1, [pc, #248]	; ebbc <xport_read_variables+0x2c4>
    eac0:	add	r1, pc, r1
    eac4:	mov	r2, #8
    eac8:	bl	4c74 <bcmp@plt>
    eacc:	cmp	r0, #0
    ead0:	beq	eb08 <xport_read_variables+0x210>
    ead4:	add	r0, sp, #8
    ead8:	ldr	r1, [pc, #224]	; ebc0 <xport_read_variables+0x2c8>
    eadc:	add	r1, pc, r1
    eae0:	mov	r2, #8
    eae4:	bl	4c74 <bcmp@plt>
    eae8:	cmp	r0, #0
    eaec:	bne	eb1c <xport_read_variables+0x224>
    eaf0:	ldr	r1, [sp, #20]
    eaf4:	mov	r0, r4
    eaf8:	bl	f208 <xport_read_labels_v9>
    eafc:	cmp	r0, #0
    eb00:	bne	ea54 <xport_read_variables+0x15c>
    eb04:	b	eb1c <xport_read_variables+0x224>
    eb08:	ldr	r1, [sp, #20]
    eb0c:	mov	r0, r4
    eb10:	bl	f058 <xport_read_labels_v8>
    eb14:	cmp	r0, #0
    eb18:	bne	ea54 <xport_read_variables+0x15c>
    eb1c:	mov	r0, #0
    eb20:	str	r0, [r4, #76]	; 0x4c
    eb24:	ldr	r1, [r4, #64]	; 0x40
    eb28:	cmp	r1, #1
    eb2c:	blt	ea54 <xport_read_variables+0x15c>
    eb30:	mov	r9, #0
    eb34:	mov	r8, #1
    eb38:	mov	r5, #0
    eb3c:	b	eb70 <xport_read_variables+0x278>
    eb40:	cmp	r0, #1
    eb44:	beq	ebac <xport_read_variables+0x2b4>
    eb48:	add	r9, r9, #1
    eb4c:	ldr	r0, [r6, #1596]	; 0x63c
    eb50:	ldr	r1, [r4, #64]	; 0x40
    eb54:	ldr	r2, [r4, #76]	; 0x4c
    eb58:	add	r0, r2, r0
    eb5c:	str	r0, [r4, #76]	; 0x4c
    eb60:	add	r5, r5, #1
    eb64:	mov	r0, #0
    eb68:	cmp	r5, r1
    eb6c:	bge	ea54 <xport_read_variables+0x15c>
    eb70:	ldr	r0, [r4, #376]	; 0x178
    eb74:	ldr	r6, [r0, r5, lsl #2]
    eb78:	str	r9, [r6, #2148]	; 0x864
    eb7c:	ldr	r7, [r4, #8]
    eb80:	cmp	r7, #0
    eb84:	beq	eb48 <xport_read_variables+0x250>
    eb88:	ldr	r3, [r4, #36]	; 0x24
    eb8c:	add	r2, r6, #308	; 0x134
    eb90:	mov	r0, r5
    eb94:	mov	r1, r6
    eb98:	blx	r7
    eb9c:	cmp	r0, #2
    eba0:	bne	eb40 <xport_read_variables+0x248>
    eba4:	str	r8, [r6, #2144]	; 0x860
    eba8:	b	eb4c <xport_read_variables+0x254>
    ebac:	mov	r0, #4
    ebb0:	sub	sp, fp, #28
    ebb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ebb8:	.word	0x000173e0
    ebbc:	.word	0x000173ca
    ebc0:	.word	0x000173b6

0000ebc4 <xport_read_data>:
    ebc4:	push	{r4, r5, r6, r7, fp, lr}
    ebc8:	add	fp, sp, #16
    ebcc:	mov	r6, r0
    ebd0:	ldr	r0, [r0, #76]	; 0x4c
    ebd4:	mov	r7, #0
    ebd8:	cmp	r0, #0
    ebdc:	beq	ec30 <xport_read_data+0x6c>
    ebe0:	ldr	r1, [r6, #16]
    ebe4:	cmp	r1, #0
    ebe8:	beq	ec30 <xport_read_data+0x6c>
    ebec:	bl	4cb0 <readstat_malloc@plt>
    ebf0:	mov	r5, r0
    ebf4:	ldr	r0, [r6, #76]	; 0x4c
    ebf8:	bl	4cb0 <readstat_malloc@plt>
    ebfc:	mov	r4, r0
    ec00:	mov	r7, #3
    ec04:	cmp	r5, #0
    ec08:	cmpne	r4, #0
    ec0c:	bne	ec38 <xport_read_data+0x74>
    ec10:	cmp	r5, #0
    ec14:	beq	ec20 <xport_read_data+0x5c>
    ec18:	mov	r0, r5
    ec1c:	bl	4938 <free@plt>
    ec20:	cmp	r4, #0
    ec24:	beq	ec30 <xport_read_data+0x6c>
    ec28:	mov	r0, r4
    ec2c:	bl	4938 <free@plt>
    ec30:	mov	r0, r7
    ec34:	pop	{r4, r5, r6, r7, fp, pc}
    ec38:	ldr	r2, [r6, #76]	; 0x4c
    ec3c:	mov	r0, r4
    ec40:	mov	r1, #32
    ec44:	bl	4d28 <memset@plt>
    ec48:	ldr	r2, [r6, #76]	; 0x4c
    ec4c:	mov	r0, r6
    ec50:	mov	r1, r5
    ec54:	bl	eeb0 <read_bytes>
    ec58:	cmn	r0, #1
    ec5c:	beq	ed44 <xport_read_data+0x180>
    ec60:	mov	r7, #0
    ec64:	ldr	r1, [r6, #76]	; 0x4c
    ec68:	cmp	r0, r1
    ec6c:	bcc	ed64 <xport_read_data+0x1a0>
    ec70:	cmp	r1, #0
    ec74:	beq	ec94 <xport_read_data+0xd0>
    ec78:	mov	r0, #0
    ec7c:	ldrb	r2, [r5, r0]
    ec80:	cmp	r2, #32
    ec84:	bne	ecb4 <xport_read_data+0xf0>
    ec88:	add	r0, r0, #1
    ec8c:	cmp	r1, r0
    ec90:	bne	ec7c <xport_read_data+0xb8>
    ec94:	add	r7, r7, #1
    ec98:	ldr	r2, [r6, #76]	; 0x4c
    ec9c:	mov	r0, r6
    eca0:	mov	r1, r5
    eca4:	bl	eeb0 <read_bytes>
    eca8:	cmn	r0, #1
    ecac:	bne	ec64 <xport_read_data+0xa0>
    ecb0:	b	ed44 <xport_read_data+0x180>
    ecb4:	cmp	r7, #0
    ecb8:	bne	ecc8 <xport_read_data+0x104>
    ecbc:	b	ecf8 <xport_read_data+0x134>
    ecc0:	subs	r7, r7, #1
    ecc4:	beq	ecf8 <xport_read_data+0x134>
    ecc8:	mov	r0, r6
    eccc:	mov	r1, r4
    ecd0:	bl	f47c <xport_process_row>
    ecd4:	cmp	r0, #0
    ecd8:	bne	ed54 <xport_read_data+0x190>
    ecdc:	ldr	r0, [r6, #68]	; 0x44
    ece0:	cmp	r0, #1
    ece4:	blt	ecc0 <xport_read_data+0xfc>
    ece8:	ldr	r1, [r6, #80]	; 0x50
    ecec:	cmp	r1, r0
    ecf0:	bne	ecc0 <xport_read_data+0xfc>
    ecf4:	b	ed64 <xport_read_data+0x1a0>
    ecf8:	mov	r0, r6
    ecfc:	mov	r1, r5
    ed00:	bl	f47c <xport_process_row>
    ed04:	cmp	r0, #0
    ed08:	bne	ed54 <xport_read_data+0x190>
    ed0c:	mov	r0, r6
    ed10:	bl	f72c <xport_update_progress>
    ed14:	cmp	r0, #0
    ed18:	bne	ed54 <xport_read_data+0x190>
    ed1c:	ldr	r0, [r6, #68]	; 0x44
    ed20:	cmp	r0, #1
    ed24:	blt	ed3c <xport_read_data+0x178>
    ed28:	ldr	r1, [r6, #80]	; 0x50
    ed2c:	mov	r7, #0
    ed30:	cmp	r1, r0
    ed34:	bne	ec98 <xport_read_data+0xd4>
    ed38:	b	ec10 <xport_read_data+0x4c>
    ed3c:	mov	r7, #0
    ed40:	b	ec98 <xport_read_data+0xd4>
    ed44:	mov	r7, #2
    ed48:	cmp	r5, #0
    ed4c:	bne	ec18 <xport_read_data+0x54>
    ed50:	b	ec20 <xport_read_data+0x5c>
    ed54:	mov	r7, r0
    ed58:	cmp	r5, #0
    ed5c:	bne	ec18 <xport_read_data+0x54>
    ed60:	b	ec20 <xport_read_data+0x5c>
    ed64:	mov	r7, #0
    ed68:	cmp	r5, #0
    ed6c:	bne	ec18 <xport_read_data+0x54>
    ed70:	b	ec20 <xport_read_data+0x5c>

0000ed74 <xport_ctx_free>:
    ed74:	push	{r4, r5, fp, lr}
    ed78:	add	fp, sp, #8
    ed7c:	mov	r4, r0
    ed80:	ldr	r0, [r0, #376]	; 0x178
    ed84:	cmp	r0, #0
    ed88:	beq	edd0 <xport_ctx_free+0x5c>
    ed8c:	ldr	r1, [r4, #64]	; 0x40
    ed90:	ldr	r0, [r4, #376]	; 0x178
    ed94:	cmp	r1, #1
    ed98:	blt	edcc <xport_ctx_free+0x58>
    ed9c:	mov	r5, #0
    eda0:	b	edb8 <xport_ctx_free+0x44>
    eda4:	add	r5, r5, #1
    eda8:	ldr	r1, [r4, #64]	; 0x40
    edac:	ldr	r0, [r4, #376]	; 0x178
    edb0:	cmp	r5, r1
    edb4:	bge	edcc <xport_ctx_free+0x58>
    edb8:	ldr	r0, [r0, r5, lsl #2]
    edbc:	cmp	r0, #0
    edc0:	beq	eda4 <xport_ctx_free+0x30>
    edc4:	bl	4938 <free@plt>
    edc8:	b	eda4 <xport_ctx_free+0x30>
    edcc:	bl	4938 <free@plt>
    edd0:	ldr	r0, [r4, #48]	; 0x30
    edd4:	cmp	r0, #0
    edd8:	beq	ede0 <xport_ctx_free+0x6c>
    eddc:	bl	4848 <iconv_close@plt>
    ede0:	mov	r0, r4
    ede4:	pop	{r4, r5, fp, lr}
    ede8:	b	4938 <free@plt>

0000edec <xport_ctx_init>:
    edec:	mov	r0, #1
    edf0:	mov	r1, #384	; 0x180
    edf4:	b	47d0 <calloc@plt>

0000edf8 <xport_read_header_record>:
    edf8:	push	{r4, r5, fp, lr}
    edfc:	add	fp, sp, #8
    ee00:	sub	sp, sp, #104	; 0x68
    ee04:	mov	r4, r1
    ee08:	add	r1, sp, #23
    ee0c:	bl	ee84 <xport_read_record>
    ee10:	mov	r5, r0
    ee14:	cmp	r0, #0
    ee18:	bne	ee74 <xport_read_header_record+0x7c>
    ee1c:	vmov.i32	q8, #0	; 0x00000000
    ee20:	add	r0, r4, #16
    ee24:	vst1.32	{d16-d17}, [r0]
    ee28:	mov	r1, #28
    ee2c:	mov	r2, r4
    ee30:	vst1.32	{d16-d17}, [r2], r1
    ee34:	mov	r5, #0
    ee38:	mov	r1, r4
    ee3c:	str	r5, [r1, #32]!
    ee40:	add	ip, r4, #24
    ee44:	add	r3, r4, #20
    ee48:	stm	sp, {r0, r3, ip}
    ee4c:	str	r2, [sp, #12]
    ee50:	str	r1, [sp, #16]
    ee54:	add	r3, r4, #12
    ee58:	add	r0, sp, #23
    ee5c:	ldr	r1, [pc, #28]	; ee80 <xport_read_header_record+0x88>
    ee60:	add	r1, pc, r1
    ee64:	mov	r2, r4
    ee68:	bl	4d10 <__isoc99_sscanf@plt>
    ee6c:	cmp	r0, #2
    ee70:	movwlt	r5, #5
    ee74:	mov	r0, r5
    ee78:	sub	sp, fp, #8
    ee7c:	pop	{r4, r5, fp, pc}
    ee80:	.word	0x00016fb4

0000ee84 <xport_read_record>:
    ee84:	push	{r4, sl, fp, lr}
    ee88:	add	fp, sp, #8
    ee8c:	mov	r4, r1
    ee90:	mov	r2, #80	; 0x50
    ee94:	bl	eeb0 <read_bytes>
    ee98:	mov	r1, r0
    ee9c:	mov	r0, #2
    eea0:	cmp	r1, #80	; 0x50
    eea4:	movge	r0, #0
    eea8:	strbge	r0, [r4, #80]	; 0x50
    eeac:	pop	{r4, sl, fp, pc}

0000eeb0 <read_bytes>:
    eeb0:	mov	ip, r2
    eeb4:	ldr	r0, [r0, #52]	; 0x34
    eeb8:	ldr	r3, [r0, #12]
    eebc:	ldr	r2, [r0, #20]
    eec0:	mov	r0, r1
    eec4:	mov	r1, ip
    eec8:	bx	r3

0000eecc <xport_construct_format>:
    eecc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    eed0:	add	fp, sp, #24
    eed4:	mov	r7, r3
    eed8:	mov	r3, r2
    eedc:	mov	r2, r1
    eee0:	mov	r5, r0
    eee4:	mov	r0, #1
    eee8:	orr	r1, r0, r3, lsl #2
    eeec:	add	r0, r1, #7
    eef0:	bic	r0, r0, #4
    eef4:	sub	r6, sp, r0
    eef8:	mov	sp, r6
    eefc:	sub	sp, sp, #8
    ef00:	mov	r0, #0
    ef04:	str	r0, [sp]
    ef08:	mov	r0, r6
    ef0c:	bl	4cbc <readstat_convert@plt>
    ef10:	add	sp, sp, #8
    ef14:	mov	r4, r0
    ef18:	cmp	r0, #0
    ef1c:	bne	ef88 <xport_construct_format+0xbc>
    ef20:	ldrb	r0, [r6]
    ef24:	cmp	r0, #0
    ef28:	beq	ef50 <xport_construct_format+0x84>
    ef2c:	ldr	r0, [fp, #8]
    ef30:	cmp	r0, #0
    ef34:	beq	ef5c <xport_construct_format+0x90>
    ef38:	sub	sp, sp, #8
    ef3c:	str	r7, [sp]
    ef40:	str	r0, [sp, #4]
    ef44:	ldr	r2, [pc, #100]	; efb0 <xport_construct_format+0xe4>
    ef48:	add	r2, pc, r2
    ef4c:	b	ef74 <xport_construct_format+0xa8>
    ef50:	mov	r0, #0
    ef54:	strb	r0, [r5]
    ef58:	b	ef88 <xport_construct_format+0xbc>
    ef5c:	cmp	r7, #0
    ef60:	beq	ef94 <xport_construct_format+0xc8>
    ef64:	sub	sp, sp, #8
    ef68:	str	r7, [sp]
    ef6c:	ldr	r2, [pc, #64]	; efb4 <xport_construct_format+0xe8>
    ef70:	add	r2, pc, r2
    ef74:	mov	r0, r5
    ef78:	mov	r1, #256	; 0x100
    ef7c:	mov	r3, r6
    ef80:	bl	4d04 <snprintf@plt>
    ef84:	add	sp, sp, #8
    ef88:	mov	r0, r4
    ef8c:	sub	sp, fp, #24
    ef90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    ef94:	ldr	r2, [pc, #28]	; efb8 <xport_construct_format+0xec>
    ef98:	add	r2, pc, r2
    ef9c:	mov	r0, r5
    efa0:	mov	r1, #256	; 0x100
    efa4:	mov	r3, r6
    efa8:	bl	4d04 <snprintf@plt>
    efac:	b	ef88 <xport_construct_format+0xbc>
    efb0:	.word	0x00016f52
    efb4:	.word	0x00016f32
    efb8:	.word	0x00017af4

0000efbc <xport_skip_rest_of_record>:
    efbc:	push	{r4, r5, fp, lr}
    efc0:	add	fp, sp, #8
    efc4:	ldr	r5, [r0, #52]	; 0x34
    efc8:	ldr	r3, [r5, #8]
    efcc:	ldr	r2, [r5, #20]
    efd0:	mov	r0, #0
    efd4:	mov	r1, #1
    efd8:	blx	r3
    efdc:	mov	r4, #15
    efe0:	cmn	r0, #1
    efe4:	beq	f028 <xport_skip_rest_of_record+0x6c>
    efe8:	movw	r1, #26215	; 0x6667
    efec:	movt	r1, #26214	; 0x6666
    eff0:	smmul	r1, r0, r1
    eff4:	asr	r2, r1, #5
    eff8:	add	r1, r2, r1, lsr #31
    effc:	add	r1, r1, r1, lsl #2
    f000:	sub	r0, r0, r1, lsl #4
    f004:	cmp	r0, #0
    f008:	beq	f030 <xport_skip_rest_of_record+0x74>
    f00c:	ldr	r3, [r5, #8]
    f010:	ldr	r2, [r5, #20]
    f014:	rsb	r0, r0, #80	; 0x50
    f018:	mov	r1, #1
    f01c:	blx	r3
    f020:	cmn	r0, #1
    f024:	movne	r4, #0
    f028:	mov	r0, r4
    f02c:	pop	{r4, r5, fp, pc}
    f030:	mov	r4, #0
    f034:	mov	r0, r4
    f038:	pop	{r4, r5, fp, pc}

0000f03c <xport_read_obs_header_record>:
    f03c:	ldr	r1, [pc, #12]	; f050 <xport_read_obs_header_record+0x14>
    f040:	add	r1, pc, r1
    f044:	ldr	r2, [pc, #8]	; f054 <xport_read_obs_header_record+0x18>
    f048:	add	r2, pc, r2
    f04c:	b	e6a4 <xport_expect_header_record>
    f050:	.word	0x00016e67
    f054:	.word	0x00016e3c

0000f058 <xport_read_labels_v8>:
    f058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f05c:	add	fp, sp, #28
    f060:	sub	sp, sp, #28
    f064:	mov	r6, r0
    f068:	cmp	r1, #1
    f06c:	blt	f1c8 <xport_read_labels_v8+0x170>
    f070:	mov	r7, r1
    f074:	mov	r0, r6
    f078:	sub	r1, fp, #38	; 0x26
    f07c:	mov	r2, #6
    f080:	bl	eeb0 <read_bytes>
    f084:	cmp	r0, #6
    f088:	bne	f1f8 <xport_read_labels_v8+0x1a0>
    f08c:	bl	492c <machine_is_little_endian@plt>
    f090:	ldrh	r4, [fp, #-38]	; 0xffffffda
    f094:	cmp	r0, #0
    f098:	beq	f0c4 <xport_read_labels_v8+0x6c>
    f09c:	mov	r0, r4
    f0a0:	bl	4920 <byteswap2@plt>
    f0a4:	mov	r4, r0
    f0a8:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    f0ac:	bl	4920 <byteswap2@plt>
    f0b0:	mov	r8, r0
    f0b4:	ldrh	r0, [fp, #-34]	; 0xffffffde
    f0b8:	bl	4920 <byteswap2@plt>
    f0bc:	mov	sl, r0
    f0c0:	b	f0cc <xport_read_labels_v8+0x74>
    f0c4:	ldrh	sl, [fp, #-34]	; 0xffffffde
    f0c8:	ldrh	r8, [fp, #-36]	; 0xffffffdc
    f0cc:	mov	r5, #5
    f0d0:	cmp	r4, #0
    f0d4:	beq	f1fc <xport_read_labels_v8+0x1a4>
    f0d8:	ldr	r1, [r6, #64]	; 0x40
    f0dc:	cmp	r1, r4
    f0e0:	blt	f1fc <xport_read_labels_v8+0x1a4>
    f0e4:	str	r7, [fp, #-52]	; 0xffffffcc
    f0e8:	str	sp, [fp, #-44]	; 0xffffffd4
    f0ec:	add	r1, r8, #8
    f0f0:	bic	r1, r1, #7
    f0f4:	sub	r9, sp, r1
    f0f8:	mov	sp, r9
    f0fc:	add	r1, sl, #8
    f100:	bic	r1, r1, #7
    f104:	mov	r7, r8
    f108:	sub	r8, sp, r1
    f10c:	mov	sp, r8
    f110:	ldr	r0, [r6, #376]	; 0x178
    f114:	add	r0, r0, r4, lsl #2
    f118:	ldr	r0, [r0, #-4]
    f11c:	str	r0, [fp, #-48]	; 0xffffffd0
    f120:	mov	r0, r6
    f124:	mov	r1, r9
    f128:	mov	r2, r7
    f12c:	bl	eeb0 <read_bytes>
    f130:	mov	r5, #2
    f134:	cmp	r0, r7
    f138:	bne	f1f0 <xport_read_labels_v8+0x198>
    f13c:	mov	r4, r7
    f140:	mov	r0, r6
    f144:	mov	r1, r8
    f148:	mov	r2, sl
    f14c:	bl	eeb0 <read_bytes>
    f150:	str	sl, [fp, #-56]	; 0xffffffc8
    f154:	cmp	r0, sl
    f158:	bne	f1f0 <xport_read_labels_v8+0x198>
    f15c:	ldr	r0, [r6, #48]	; 0x30
    f160:	sub	sp, sp, #8
    f164:	str	r0, [sp]
    f168:	ldr	r7, [fp, #-48]	; 0xffffffd0
    f16c:	add	r0, r7, #8
    f170:	mov	r1, #300	; 0x12c
    f174:	mov	r2, r9
    f178:	mov	r3, r4
    f17c:	bl	4cbc <readstat_convert@plt>
    f180:	add	sp, sp, #8
    f184:	cmp	r0, #0
    f188:	bne	f1ec <xport_read_labels_v8+0x194>
    f18c:	ldr	r0, [r6, #48]	; 0x30
    f190:	sub	sp, sp, #8
    f194:	str	r0, [sp]
    f198:	add	r0, r7, #564	; 0x234
    f19c:	mov	r1, #1024	; 0x400
    f1a0:	mov	r2, r8
    f1a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f1a8:	bl	4cbc <readstat_convert@plt>
    f1ac:	add	sp, sp, #8
    f1b0:	cmp	r0, #0
    f1b4:	bne	f1ec <xport_read_labels_v8+0x194>
    f1b8:	ldr	r7, [fp, #-52]	; 0xffffffcc
    f1bc:	subs	r7, r7, #1
    f1c0:	ldr	sp, [fp, #-44]	; 0xffffffd4
    f1c4:	bne	f074 <xport_read_labels_v8+0x1c>
    f1c8:	mov	r0, r6
    f1cc:	bl	efbc <xport_skip_rest_of_record>
    f1d0:	mov	r5, r0
    f1d4:	cmp	r0, #0
    f1d8:	bne	f1fc <xport_read_labels_v8+0x1a4>
    f1dc:	mov	r0, r6
    f1e0:	bl	f03c <xport_read_obs_header_record>
    f1e4:	mov	r5, r0
    f1e8:	b	f1fc <xport_read_labels_v8+0x1a4>
    f1ec:	mov	r5, r0
    f1f0:	ldr	sp, [fp, #-44]	; 0xffffffd4
    f1f4:	b	f1fc <xport_read_labels_v8+0x1a4>
    f1f8:	mov	r5, #2
    f1fc:	mov	r0, r5
    f200:	sub	sp, fp, #28
    f204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000f208 <xport_read_labels_v9>:
    f208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f20c:	add	fp, sp, #28
    f210:	sub	sp, sp, #52	; 0x34
    f214:	mov	r6, r0
    f218:	cmp	r1, #1
    f21c:	blt	f430 <xport_read_labels_v9+0x228>
    f220:	mov	r5, r1
    f224:	mov	r0, r6
    f228:	sub	r1, fp, #42	; 0x2a
    f22c:	mov	r2, #10
    f230:	bl	eeb0 <read_bytes>
    f234:	cmp	r0, #10
    f238:	bne	f46c <xport_read_labels_v9+0x264>
    f23c:	bl	492c <machine_is_little_endian@plt>
    f240:	ldrh	r4, [fp, #-42]	; 0xffffffd6
    f244:	cmp	r0, #0
    f248:	beq	f28c <xport_read_labels_v9+0x84>
    f24c:	mov	r0, r4
    f250:	bl	4920 <byteswap2@plt>
    f254:	mov	r4, r0
    f258:	ldrh	r0, [fp, #-40]	; 0xffffffd8
    f25c:	bl	4920 <byteswap2@plt>
    f260:	mov	r8, r0
    f264:	ldrh	r0, [fp, #-38]	; 0xffffffda
    f268:	bl	4920 <byteswap2@plt>
    f26c:	mov	r9, r0
    f270:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    f274:	bl	4920 <byteswap2@plt>
    f278:	mov	r7, r0
    f27c:	ldrh	r0, [fp, #-34]	; 0xffffffde
    f280:	bl	4920 <byteswap2@plt>
    f284:	str	r0, [fp, #-48]	; 0xffffffd0
    f288:	b	f2a0 <xport_read_labels_v9+0x98>
    f28c:	ldrh	r0, [fp, #-34]	; 0xffffffde
    f290:	str	r0, [fp, #-48]	; 0xffffffd0
    f294:	ldrh	r7, [fp, #-36]	; 0xffffffdc
    f298:	ldrh	r9, [fp, #-38]	; 0xffffffda
    f29c:	ldrh	r8, [fp, #-40]	; 0xffffffd8
    f2a0:	mov	sl, #5
    f2a4:	cmp	r4, #0
    f2a8:	beq	f470 <xport_read_labels_v9+0x268>
    f2ac:	ldr	r0, [r6, #64]	; 0x40
    f2b0:	cmp	r0, r4
    f2b4:	blt	f470 <xport_read_labels_v9+0x268>
    f2b8:	str	r5, [fp, #-72]	; 0xffffffb8
    f2bc:	str	sp, [fp, #-52]	; 0xffffffcc
    f2c0:	add	r0, r8, #8
    f2c4:	bic	r0, r0, #7
    f2c8:	sub	r1, sp, r0
    f2cc:	mov	sp, r1
    f2d0:	add	r0, r9, #8
    f2d4:	bic	r0, r0, #7
    f2d8:	mov	r5, r8
    f2dc:	sub	r8, sp, r0
    f2e0:	mov	sp, r8
    f2e4:	str	r7, [fp, #-56]	; 0xffffffc8
    f2e8:	add	r0, r7, #8
    f2ec:	bic	r0, r0, #7
    f2f0:	mov	r7, r9
    f2f4:	sub	r9, sp, r0
    f2f8:	mov	sp, r9
    f2fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f300:	add	r0, r0, #8
    f304:	bic	r0, r0, #7
    f308:	sub	r0, sp, r0
    f30c:	str	r0, [fp, #-60]	; 0xffffffc4
    f310:	mov	sp, r0
    f314:	ldr	r0, [r6, #376]	; 0x178
    f318:	add	r0, r0, r4, lsl #2
    f31c:	ldr	r4, [r0, #-4]
    f320:	mov	r0, r6
    f324:	str	r1, [fp, #-68]	; 0xffffffbc
    f328:	mov	r2, r5
    f32c:	bl	eeb0 <read_bytes>
    f330:	mov	sl, #2
    f334:	str	r5, [fp, #-64]	; 0xffffffc0
    f338:	cmp	r0, r5
    f33c:	bne	f454 <xport_read_labels_v9+0x24c>
    f340:	mov	r0, r6
    f344:	mov	r1, r8
    f348:	mov	r2, r7
    f34c:	bl	eeb0 <read_bytes>
    f350:	str	r7, [fp, #-76]	; 0xffffffb4
    f354:	cmp	r0, r7
    f358:	bne	f454 <xport_read_labels_v9+0x24c>
    f35c:	mov	r0, r6
    f360:	mov	r1, r9
    f364:	ldr	r7, [fp, #-56]	; 0xffffffc8
    f368:	mov	r2, r7
    f36c:	bl	eeb0 <read_bytes>
    f370:	cmp	r0, r7
    f374:	bne	f454 <xport_read_labels_v9+0x24c>
    f378:	mov	r0, r6
    f37c:	ldr	r5, [fp, #-60]	; 0xffffffc4
    f380:	mov	r1, r5
    f384:	ldr	r7, [fp, #-48]	; 0xffffffd0
    f388:	mov	r2, r7
    f38c:	bl	eeb0 <read_bytes>
    f390:	cmp	r0, r7
    f394:	ldr	r7, [fp, #-52]	; 0xffffffcc
    f398:	bne	f464 <xport_read_labels_v9+0x25c>
    f39c:	ldr	r0, [r6, #48]	; 0x30
    f3a0:	sub	sp, sp, #8
    f3a4:	str	r0, [sp]
    f3a8:	add	r0, r4, #8
    f3ac:	mov	r1, #300	; 0x12c
    f3b0:	ldr	r2, [fp, #-68]	; 0xffffffbc
    f3b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    f3b8:	bl	4cbc <readstat_convert@plt>
    f3bc:	add	sp, sp, #8
    f3c0:	cmp	r0, #0
    f3c4:	bne	f460 <xport_read_labels_v9+0x258>
    f3c8:	ldr	r0, [r6, #48]	; 0x30
    f3cc:	sub	sp, sp, #8
    f3d0:	str	r0, [sp]
    f3d4:	add	r0, r4, #564	; 0x234
    f3d8:	mov	r1, #1024	; 0x400
    f3dc:	mov	r2, r5
    f3e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f3e4:	bl	4cbc <readstat_convert@plt>
    f3e8:	add	sp, sp, #8
    f3ec:	cmp	r0, #0
    f3f0:	bne	f460 <xport_read_labels_v9+0x258>
    f3f4:	ldr	r3, [r4, #2136]	; 0x858
    f3f8:	ldr	r0, [r4, #2140]	; 0x85c
    f3fc:	sub	sp, sp, #8
    f400:	str	r0, [sp]
    f404:	add	r0, r4, #308	; 0x134
    f408:	mov	r1, r8
    f40c:	ldr	r2, [fp, #-76]	; 0xffffffb4
    f410:	bl	eecc <xport_construct_format>
    f414:	add	sp, sp, #8
    f418:	cmp	r0, #0
    f41c:	bne	f460 <xport_read_labels_v9+0x258>
    f420:	ldr	r5, [fp, #-72]	; 0xffffffb8
    f424:	subs	r5, r5, #1
    f428:	mov	sp, r7
    f42c:	bne	f224 <xport_read_labels_v9+0x1c>
    f430:	mov	r0, r6
    f434:	bl	efbc <xport_skip_rest_of_record>
    f438:	mov	sl, r0
    f43c:	cmp	r0, #0
    f440:	bne	f470 <xport_read_labels_v9+0x268>
    f444:	mov	r0, r6
    f448:	bl	f03c <xport_read_obs_header_record>
    f44c:	mov	sl, r0
    f450:	b	f470 <xport_read_labels_v9+0x268>
    f454:	ldr	r7, [fp, #-52]	; 0xffffffcc
    f458:	mov	sp, r7
    f45c:	b	f470 <xport_read_labels_v9+0x268>
    f460:	mov	sl, r0
    f464:	mov	sp, r7
    f468:	b	f470 <xport_read_labels_v9+0x268>
    f46c:	mov	sl, #2
    f470:	mov	r0, sl
    f474:	sub	sp, fp, #28
    f478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000f47c <xport_process_row>:
    f47c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f480:	add	fp, sp, #28
    f484:	sub	sp, sp, #60	; 0x3c
    f488:	str	r1, [sp, #32]
    f48c:	mov	sl, r0
    f490:	ldr	r0, [r0, #64]	; 0x40
    f494:	cmp	r0, #1
    f498:	blt	f6c0 <xport_process_row+0x244>
    f49c:	add	r0, sp, #40	; 0x28
    f4a0:	orr	r0, r0, #1
    f4a4:	str	r0, [sp, #16]
    f4a8:	mov	ip, #0
    f4ac:	mov	r0, #0
    f4b0:	str	r0, [sp, #28]
    f4b4:	mov	r6, #0
    f4b8:	mov	r8, #0
    f4bc:	str	sl, [sp, #24]
    f4c0:	b	f4d8 <xport_process_row+0x5c>
    f4c4:	add	r6, r9, r6
    f4c8:	ldr	r0, [sl, #64]	; 0x40
    f4cc:	add	r8, r8, #1
    f4d0:	cmp	r8, r0
    f4d4:	bge	f6c8 <xport_process_row+0x24c>
    f4d8:	and	r9, r4, #64512	; 0xfc00
    f4dc:	bfc	r4, #0, #16
    f4e0:	orr	r7, r4, r9
    f4e4:	ldr	r0, [sl, #376]	; 0x178
    f4e8:	ldr	r5, [r0, r8, lsl #2]
    f4ec:	ldr	r1, [r5]
    f4f0:	cmp	r1, #0
    f4f4:	str	r1, [sp, #36]	; 0x24
    f4f8:	beq	f584 <xport_process_row+0x108>
    f4fc:	movw	r0, #0
    f500:	movt	r0, #32760	; 0x7ff8
    f504:	str	r0, [fp, #-36]	; 0xffffffdc
    f508:	str	ip, [fp, #-40]	; 0xffffffd8
    f50c:	ldr	r0, [r5, #1596]	; 0x63c
    f510:	sub	r0, r0, #3
    f514:	cmp	r0, #5
    f518:	bhi	f61c <xport_process_row+0x1a0>
    f51c:	str	ip, [sp, #44]	; 0x2c
    f520:	str	ip, [sp, #40]	; 0x28
    f524:	ldr	r0, [sp, #32]
    f528:	str	r6, [sp, #20]
    f52c:	add	sl, r6, r0
    f530:	add	r1, sl, #1
    f534:	ldr	r0, [r5, #1596]	; 0x63c
    f538:	sub	r2, r0, #1
    f53c:	ldr	r0, [sp, #16]
    f540:	bl	4c74 <bcmp@plt>
    f544:	cmp	r0, #0
    f548:	beq	f5f4 <xport_process_row+0x178>
    f54c:	ldr	r2, [r5, #1596]	; 0x63c
    f550:	add	r4, sp, #40	; 0x28
    f554:	mov	r0, r4
    f558:	mov	r1, sl
    f55c:	bl	4998 <memcpy@plt>
    f560:	mov	r0, r4
    f564:	mov	r1, #1
    f568:	sub	r2, fp, #40	; 0x28
    f56c:	mov	r3, #0
    f570:	bl	4a70 <cnxptiee@plt>
    f574:	cmp	r0, #0
    f578:	ldr	r6, [sp, #20]
    f57c:	beq	f614 <xport_process_row+0x198>
    f580:	b	f71c <xport_process_row+0x2a0>
    f584:	ldr	r0, [r5, #1596]	; 0x63c
    f588:	mov	r1, #1
    f58c:	orr	r1, r1, r0, lsl #2
    f590:	ldr	r0, [sp, #28]
    f594:	bl	4d70 <readstat_realloc@plt>
    f598:	cmp	r0, #0
    f59c:	beq	f708 <xport_process_row+0x28c>
    f5a0:	mov	r4, r0
    f5a4:	mov	r1, #1
    f5a8:	mov	r9, r5
    f5ac:	ldr	r3, [r5, #1596]	; 0x63c
    f5b0:	ldr	r0, [sl, #48]	; 0x30
    f5b4:	str	r0, [sp]
    f5b8:	ldr	r0, [sp, #32]
    f5bc:	add	r2, r0, r6
    f5c0:	orr	r1, r1, r3, lsl #2
    f5c4:	mov	r0, r4
    f5c8:	bl	4cbc <readstat_convert@plt>
    f5cc:	mov	r3, #0
    f5d0:	cmp	r0, #0
    f5d4:	bne	f714 <xport_process_row+0x298>
    f5d8:	str	r4, [sp, #28]
    f5dc:	mov	r2, r4
    f5e0:	mov	r4, r7
    f5e4:	ldr	sl, [sp, #24]
    f5e8:	mov	ip, #0
    f5ec:	mov	r5, r9
    f5f0:	b	f628 <xport_process_row+0x1ac>
    f5f4:	ldr	r0, [sp, #32]
    f5f8:	ldr	r6, [sp, #20]
    f5fc:	ldrb	r0, [r0, r6]
    f600:	cmp	r0, #46	; 0x2e
    f604:	bne	f68c <xport_process_row+0x210>
    f608:	mov	r0, #1
    f60c:	orr	r0, r0, r9, lsr #8
    f610:	orr	r7, r4, r0, lsl #8
    f614:	ldr	sl, [sp, #24]
    f618:	mov	ip, #0
    f61c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f620:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f624:	mov	r4, r7
    f628:	mov	r1, r5
    f62c:	ldr	r9, [r5, #1596]	; 0x63c
    f630:	ldr	r5, [sl, #16]
    f634:	cmp	r5, #0
    f638:	beq	f4c4 <xport_process_row+0x48>
    f63c:	ldr	r0, [sl, #376]	; 0x178
    f640:	ldr	r0, [r0, r8, lsl #2]
    f644:	ldr	r0, [r0, #2144]	; 0x860
    f648:	cmp	r0, #0
    f64c:	bne	f4c4 <xport_process_row+0x48>
    f650:	ldr	r0, [sl, #72]	; 0x48
    f654:	cmp	r0, #0
    f658:	bne	f4c4 <xport_process_row+0x48>
    f65c:	mov	r7, r6
    f660:	ldr	ip, [sl, #36]	; 0x24
    f664:	ldr	r0, [sl, #80]	; 0x50
    f668:	ldr	r6, [sp, #36]	; 0x24
    f66c:	str	r6, [sp]
    f670:	stmib	sp, {r4, ip}
    f674:	blx	r5
    f678:	mov	ip, #0
    f67c:	mov	r6, r7
    f680:	cmp	r0, #0
    f684:	beq	f4c4 <xport_process_row+0x48>
    f688:	b	f724 <xport_process_row+0x2a8>
    f68c:	bl	4bcc <sas_validate_tag@plt>
    f690:	cmp	r0, #0
    f694:	bne	f54c <xport_process_row+0xd0>
    f698:	ldr	r0, [sp, #32]
    f69c:	ldr	r6, [sp, #20]
    f6a0:	ldrb	r0, [r0, r6]
    f6a4:	cmp	r0, #46	; 0x2e
    f6a8:	beq	f608 <xport_process_row+0x18c>
    f6ac:	mov	r1, #2
    f6b0:	orr	r1, r1, r9, lsr #8
    f6b4:	orr	r1, r4, r1, lsl #8
    f6b8:	orr	r7, r1, r0
    f6bc:	b	f614 <xport_process_row+0x198>
    f6c0:	mov	r0, #0
    f6c4:	str	r0, [sp, #28]
    f6c8:	ldr	r0, [sl, #72]	; 0x48
    f6cc:	cmp	r0, #0
    f6d0:	beq	f6e0 <xport_process_row+0x264>
    f6d4:	sub	r0, r0, #1
    f6d8:	str	r0, [sl, #72]	; 0x48
    f6dc:	b	f6ec <xport_process_row+0x270>
    f6e0:	ldr	r0, [sl, #80]	; 0x50
    f6e4:	add	r0, r0, #1
    f6e8:	str	r0, [sl, #80]	; 0x50
    f6ec:	mov	r5, #0
    f6f0:	ldr	r4, [sp, #28]
    f6f4:	mov	r0, r4
    f6f8:	bl	4938 <free@plt>
    f6fc:	mov	r0, r5
    f700:	sub	sp, fp, #28
    f704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f708:	mov	r5, #3
    f70c:	mov	r4, #0
    f710:	b	f6f4 <xport_process_row+0x278>
    f714:	mov	r5, r0
    f718:	b	f6f4 <xport_process_row+0x278>
    f71c:	mov	r5, #16
    f720:	b	f6f0 <xport_process_row+0x274>
    f724:	mov	r5, #4
    f728:	b	f6f0 <xport_process_row+0x274>

0000f72c <xport_update_progress>:
    f72c:	push	{fp, lr}
    f730:	mov	fp, sp
    f734:	ldr	r1, [r0, #28]
    f738:	ldr	ip, [r0, #32]
    f73c:	ldr	r2, [r0, #36]	; 0x24
    f740:	ldr	r0, [r0, #52]	; 0x34
    f744:	ldr	lr, [r0, #16]
    f748:	ldr	r3, [r0, #20]
    f74c:	mov	r0, ip
    f750:	mov	ip, lr
    f754:	pop	{fp, lr}
    f758:	bx	ip

0000f75c <readstat_begin_writing_xport>:
    f75c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    f760:	add	fp, sp, #24
    f764:	ldr	r3, [r0, #8]
    f768:	cmp	r3, #0
    f76c:	moveq	r3, #8
    f770:	streq	r3, [r0, #8]
    f774:	ldr	r3, [pc, #176]	; f82c <readstat_begin_writing_xport+0xd0>
    f778:	add	r3, pc, r3
    f77c:	str	r3, [r0, #272]	; 0x110
    f780:	ldr	r3, [pc, #168]	; f830 <readstat_begin_writing_xport+0xd4>
    f784:	add	r3, pc, r3
    f788:	str	r3, [r0, #268]	; 0x10c
    f78c:	ldr	r3, [pc, #160]	; f834 <readstat_begin_writing_xport+0xd8>
    f790:	add	r3, pc, r3
    f794:	str	r3, [r0, #264]	; 0x108
    f798:	ldr	ip, [pc, #152]	; f838 <readstat_begin_writing_xport+0xdc>
    f79c:	add	ip, pc, ip
    f7a0:	ldr	lr, [pc, #148]	; f83c <readstat_begin_writing_xport+0xe0>
    f7a4:	add	lr, pc, lr
    f7a8:	ldr	r8, [pc, #144]	; f840 <readstat_begin_writing_xport+0xe4>
    f7ac:	add	r8, pc, r8
    f7b0:	ldr	r4, [pc, #140]	; f844 <readstat_begin_writing_xport+0xe8>
    f7b4:	add	r4, pc, r4
    f7b8:	ldr	r5, [pc, #136]	; f848 <readstat_begin_writing_xport+0xec>
    f7bc:	add	r5, pc, r5
    f7c0:	ldr	r6, [pc, #132]	; f84c <readstat_begin_writing_xport+0xf0>
    f7c4:	add	r6, pc, r6
    f7c8:	ldr	r7, [pc, #128]	; f850 <readstat_begin_writing_xport+0xf4>
    f7cc:	add	r7, pc, r7
    f7d0:	str	r7, [r0, #292]	; 0x124
    f7d4:	ldr	r7, [pc, #120]	; f854 <readstat_begin_writing_xport+0xf8>
    f7d8:	add	r7, pc, r7
    f7dc:	str	r7, [r0, #284]	; 0x11c
    f7e0:	ldr	r7, [pc, #112]	; f858 <readstat_begin_writing_xport+0xfc>
    f7e4:	add	r7, pc, r7
    f7e8:	str	r7, [r0, #276]	; 0x114
    f7ec:	ldr	r7, [pc, #104]	; f85c <readstat_begin_writing_xport+0x100>
    f7f0:	add	r7, pc, r7
    f7f4:	ldr	r3, [pc, #100]	; f860 <readstat_begin_writing_xport+0x104>
    f7f8:	add	r3, pc, r3
    f7fc:	str	r3, [r0, #280]	; 0x118
    f800:	ldr	r3, [pc, #92]	; f864 <readstat_begin_writing_xport+0x108>
    f804:	ldr	r3, [pc, r3]
    f808:	str	r7, [r0, #228]	; 0xe4
    f80c:	str	r3, [r0, #232]	; 0xe8
    f810:	str	r6, [r0, #236]	; 0xec
    f814:	str	r5, [r0, #240]	; 0xf0
    f818:	add	r3, r0, #244	; 0xf4
    f81c:	stm	r3, {r4, r8, lr}
    f820:	str	ip, [r0, #256]	; 0x100
    f824:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    f828:	b	49d4 <readstat_begin_writing_file@plt>
    f82c:	.word	0x00000240
    f830:	.word	0x00000224
    f834:	.word	0x00000210
    f838:	.word	0x0000019c
    f83c:	.word	0x00000134
    f840:	.word	0x00000124
    f844:	.word	0x00000110
    f848:	.word	0x000000fc
    f84c:	.word	0x000000e8
    f850:	.word	0x00000094
    f854:	.word	0x000002fc
    f858:	.word	0x00000220
    f85c:	.word	0x000001ec
    f860:	.word	0x000002e0
    f864:	.word	0x00035aec

0000f868 <xport_metadata_ok>:
    f868:	ldr	r2, [r0, #8]
    f86c:	cmp	r2, #8
    f870:	movne	r1, #24
    f874:	cmpne	r2, #5
    f878:	bne	f8a4 <xport_metadata_ok+0x3c>
    f87c:	ldrb	r3, [r0, #188]!	; 0xbc
    f880:	mov	r1, #0
    f884:	cmp	r3, #0
    f888:	beq	f8a4 <xport_metadata_ok+0x3c>
    f88c:	cmp	r2, #5
    f890:	beq	f8ac <xport_metadata_ok+0x44>
    f894:	cmp	r2, #8
    f898:	bne	f8a4 <xport_metadata_ok+0x3c>
    f89c:	mov	r1, #32
    f8a0:	b	47c4 <sas_validate_name@plt>
    f8a4:	mov	r0, r1
    f8a8:	bx	lr
    f8ac:	mov	r1, #8
    f8b0:	b	47c4 <sas_validate_name@plt>

0000f8b4 <xport_write_int8>:
    f8b4:	vmov	s0, r2
    f8b8:	vcvt.f64.s32	d0, s0
    f8bc:	b	f8e0 <xport_write_double>

0000f8c0 <xport_write_int16>:
    f8c0:	vmov	s0, r2
    f8c4:	vcvt.f64.s32	d0, s0
    f8c8:	b	f8e0 <xport_write_double>

0000f8cc <xport_write_int32>:
    f8cc:	vmov	s0, r2
    f8d0:	vcvt.f64.s32	d0, s0
    f8d4:	b	f8e0 <xport_write_double>

0000f8d8 <xport_write_float>:
    f8d8:	vcvt.f64.f32	d0, s0
    f8dc:	b	f8e0 <xport_write_double>

0000f8e0 <xport_write_double>:
    f8e0:	push	{r4, r5, fp, lr}
    f8e4:	add	fp, sp, #8
    f8e8:	sub	sp, sp, #16
    f8ec:	mov	r5, r1
    f8f0:	mov	r4, r0
    f8f4:	vstr	d0, [sp, #8]
    f8f8:	add	r0, sp, #8
    f8fc:	mov	r2, sp
    f900:	mov	r1, #0
    f904:	mov	r3, #1
    f908:	bl	4a70 <cnxptiee@plt>
    f90c:	mov	r1, r0
    f910:	mov	r0, #16
    f914:	cmp	r1, #0
    f918:	beq	f924 <xport_write_double+0x44>
    f91c:	sub	sp, fp, #8
    f920:	pop	{r4, r5, fp, pc}
    f924:	ldr	r2, [r5, #1596]	; 0x63c
    f928:	mov	r1, sp
    f92c:	mov	r0, r4
    f930:	bl	4998 <memcpy@plt>
    f934:	mov	r0, #0
    f938:	sub	sp, fp, #8
    f93c:	pop	{r4, r5, fp, pc}

0000f940 <xport_write_string>:
    f940:	push	{r4, r5, r6, sl, fp, lr}
    f944:	add	fp, sp, #16
    f948:	mov	r4, r2
    f94c:	mov	r6, r1
    f950:	mov	r5, r0
    f954:	ldr	r2, [r1, #1596]	; 0x63c
    f958:	mov	r1, #32
    f95c:	bl	4d28 <memset@plt>
    f960:	mov	r0, #0
    f964:	cmp	r4, #0
    f968:	beq	f9a4 <xport_write_string+0x64>
    f96c:	ldrb	r1, [r4]
    f970:	cmp	r1, #0
    f974:	beq	f9a4 <xport_write_string+0x64>
    f978:	mov	r0, r4
    f97c:	bl	4c8c <strlen@plt>
    f980:	mov	r2, r0
    f984:	ldr	r1, [r6, #1596]	; 0x63c
    f988:	mov	r0, #22
    f98c:	cmp	r2, r1
    f990:	bhi	f9a4 <xport_write_string+0x64>
    f994:	mov	r0, r5
    f998:	mov	r1, r4
    f99c:	bl	4998 <memcpy@plt>
    f9a0:	mov	r0, #0
    f9a4:	pop	{r4, r5, r6, sl, fp, pc}

0000f9a8 <xport_write_missing_string>:
    f9a8:	mov	r2, #0
    f9ac:	b	f940 <xport_write_string>

0000f9b0 <xport_write_missing_numeric>:
    f9b0:	mov	r1, #46	; 0x2e
    f9b4:	strb	r1, [r0]
    f9b8:	mov	r0, #0
    f9bc:	bx	lr

0000f9c0 <xport_write_missing_tagged>:
    f9c0:	push	{r4, r5, fp, lr}
    f9c4:	add	fp, sp, #8
    f9c8:	mov	r4, r2
    f9cc:	mov	r5, r0
    f9d0:	mov	r0, r2
    f9d4:	bl	4bcc <sas_validate_tag@plt>
    f9d8:	cmp	r0, #0
    f9dc:	strbeq	r4, [r5]
    f9e0:	pop	{r4, r5, fp, pc}

0000f9e4 <xport_variable_width>:
    f9e4:	cmp	r0, #0
    f9e8:	beq	fa04 <xport_variable_width+0x20>
    f9ec:	sub	r2, r1, #1
    f9f0:	mov	r0, #8
    f9f4:	cmp	r2, #6
    f9f8:	bxhi	lr
    f9fc:	cmp	r1, #3
    fa00:	movls	r1, #3
    fa04:	mov	r0, r1
    fa08:	bx	lr

0000fa0c <xport_begin_data>:
    fa0c:	push	{r4, sl, fp, lr}
    fa10:	add	fp, sp, #8
    fa14:	sub	sp, sp, #24
    fa18:	mov	r4, r0
    fa1c:	ldr	r1, [r0, #20]
    fa20:	add	r0, sp, #7
    fa24:	bl	fae4 <xport_format_timestamp>
    fa28:	cmp	r0, #0
    fa2c:	bne	fad4 <xport_begin_data+0xc8>
    fa30:	mov	r0, r4
    fa34:	bl	fbac <xport_write_first_header_record>
    fa38:	cmp	r0, #0
    fa3c:	bne	fad4 <xport_begin_data+0xc8>
    fa40:	add	r1, sp, #7
    fa44:	mov	r0, r4
    fa48:	bl	fc1c <xport_write_first_real_header_record>
    fa4c:	cmp	r0, #0
    fa50:	bne	fad4 <xport_begin_data+0xc8>
    fa54:	add	r1, sp, #7
    fa58:	mov	r0, r4
    fa5c:	bl	fcac <xport_write_record>
    fa60:	cmp	r0, #0
    fa64:	bne	fad4 <xport_begin_data+0xc8>
    fa68:	mov	r0, r4
    fa6c:	bl	fce8 <xport_write_member_header_record>
    fa70:	cmp	r0, #0
    fa74:	bne	fad4 <xport_begin_data+0xc8>
    fa78:	mov	r0, r4
    fa7c:	bl	fd5c <xport_write_descriptor_header_record>
    fa80:	cmp	r0, #0
    fa84:	bne	fad4 <xport_begin_data+0xc8>
    fa88:	add	r1, sp, #7
    fa8c:	mov	r0, r4
    fa90:	bl	fdd0 <xport_write_member_record>
    fa94:	cmp	r0, #0
    fa98:	bne	fad4 <xport_begin_data+0xc8>
    fa9c:	add	r1, sp, #7
    faa0:	mov	r0, r4
    faa4:	bl	fe9c <xport_write_file_label_record>
    faa8:	cmp	r0, #0
    faac:	bne	fad4 <xport_begin_data+0xc8>
    fab0:	mov	r0, r4
    fab4:	bl	fef8 <xport_write_namestr_header_record>
    fab8:	cmp	r0, #0
    fabc:	bne	fad4 <xport_begin_data+0xc8>
    fac0:	mov	r0, r4
    fac4:	bl	ff70 <xport_write_variables>
    fac8:	cmp	r0, #0
    facc:	moveq	r0, r4
    fad0:	bleq	104a0 <xport_write_obs_header_record>
    fad4:	sub	sp, fp, #8
    fad8:	pop	{r4, sl, fp, pc}

0000fadc <xport_end_data>:
    fadc:	b	105a0 <xport_finish_record>

0000fae0 <xport_write_row>:
    fae0:	b	10574 <xport_write_bytes>

0000fae4 <xport_format_timestamp>:
    fae4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    fae8:	add	fp, sp, #24
    faec:	sub	sp, sp, #24
    faf0:	mov	r8, r0
    faf4:	str	r1, [sp, #20]
    faf8:	add	r0, sp, #20
    fafc:	bl	4be4 <localtime@plt>
    fb00:	cmp	r0, #0
    fb04:	beq	fb98 <xport_format_timestamp+0xb4>
    fb08:	ldm	r0, {r1, r2, r3, r4, r5}
    fb0c:	ldr	r0, [r0, #20]
    fb10:	ldr	r6, [pc, #140]	; fba4 <xport_format_timestamp+0xc0>
    fb14:	ldr	r6, [pc, r6]
    fb18:	add	r6, r6, r5, lsl #2
    fb1c:	str	r6, [sp]
    fb20:	movw	r6, #34079	; 0x851f
    fb24:	movt	r6, #20971	; 0x51eb
    fb28:	umull	r5, r7, r1, r6
    fb2c:	lsr	r7, r7, #5
    fb30:	mov	r5, #100	; 0x64
    fb34:	mls	r1, r7, r5, r1
    fb38:	str	r1, [sp, #16]
    fb3c:	umull	r1, r7, r2, r6
    fb40:	lsr	r1, r7, #5
    fb44:	mls	r1, r1, r5, r2
    fb48:	str	r1, [sp, #12]
    fb4c:	umull	r1, r2, r3, r6
    fb50:	lsr	r1, r2, #5
    fb54:	mls	r1, r1, r5, r3
    fb58:	str	r1, [sp, #8]
    fb5c:	umull	r1, r2, r0, r6
    fb60:	lsr	r1, r2, #5
    fb64:	mls	r0, r1, r5, r0
    fb68:	str	r0, [sp, #4]
    fb6c:	umull	r0, r1, r4, r6
    fb70:	lsr	r0, r1, #5
    fb74:	mls	r3, r0, r5, r4
    fb78:	ldr	r2, [pc, #40]	; fba8 <xport_format_timestamp+0xc4>
    fb7c:	add	r2, pc, r2
    fb80:	mov	r0, r8
    fb84:	mov	r1, #17
    fb88:	bl	4d04 <snprintf@plt>
    fb8c:	mov	r0, #0
    fb90:	sub	sp, fp, #24
    fb94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    fb98:	mov	r0, #39	; 0x27
    fb9c:	sub	sp, fp, #24
    fba0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    fba4:	.word	0x000357c8
    fba8:	.word	0x0001632f

0000fbac <xport_write_first_header_record>:
    fbac:	push	{fp, lr}
    fbb0:	mov	fp, sp
    fbb4:	sub	sp, sp, #40	; 0x28
    fbb8:	ldr	r1, [pc, #88]	; fc18 <xport_write_first_header_record+0x6c>
    fbbc:	add	r1, pc, r1
    fbc0:	add	r2, r1, #16
    fbc4:	mov	ip, #32
    fbc8:	vld1.64	{d16-d17}, [r2]
    fbcc:	vld1.64	{d18-d19}, [r1], ip
    fbd0:	mov	r2, sp
    fbd4:	add	r3, r2, #16
    fbd8:	vst1.64	{d16-d17}, [r3]
    fbdc:	vst1.64	{d18-d19}, [r2], ip
    fbe0:	ldr	r1, [r1]
    fbe4:	str	r1, [r2]
    fbe8:	ldr	r1, [r0, #8]
    fbec:	cmp	r1, #8
    fbf0:	bne	fc08 <xport_write_first_header_record+0x5c>
    fbf4:	mov	r1, #56	; 0x38
    fbf8:	strh	r1, [sp, #4]
    fbfc:	movw	r1, #18764	; 0x494c
    fc00:	movt	r1, #22082	; 0x5642
    fc04:	str	r1, [sp]
    fc08:	mov	r1, sp
    fc0c:	bl	1050c <xport_write_header_record>
    fc10:	mov	sp, fp
    fc14:	pop	{fp, pc}
    fc18:	.word	0x00016424

0000fc1c <xport_write_first_real_header_record>:
    fc1c:	push	{r4, r5, fp, lr}
    fc20:	add	fp, sp, #8
    fc24:	sub	sp, sp, #112	; 0x70
    fc28:	mov	r4, r0
    fc2c:	ldr	ip, [pc, #96]	; fc94 <xport_write_first_real_header_record+0x78>
    fc30:	add	ip, pc, ip
    fc34:	ldr	r2, [pc, #92]	; fc98 <xport_write_first_real_header_record+0x7c>
    fc38:	add	r2, pc, r2
    fc3c:	ldr	r5, [pc, #88]	; fc9c <xport_write_first_real_header_record+0x80>
    fc40:	add	r5, pc, r5
    fc44:	ldr	r0, [pc, #84]	; fca0 <xport_write_first_real_header_record+0x84>
    fc48:	add	r0, pc, r0
    fc4c:	ldr	r3, [pc, #80]	; fca4 <xport_write_first_real_header_record+0x88>
    fc50:	add	r3, pc, r3
    fc54:	str	r3, [sp]
    fc58:	stmib	sp, {r0, r5}
    fc5c:	str	r2, [sp, #12]
    fc60:	str	ip, [sp, #16]
    fc64:	str	r1, [sp, #20]
    fc68:	add	r5, sp, #31
    fc6c:	ldr	r2, [pc, #52]	; fca8 <xport_write_first_real_header_record+0x8c>
    fc70:	add	r2, pc, r2
    fc74:	mov	r0, r5
    fc78:	mov	r1, #81	; 0x51
    fc7c:	bl	4d04 <snprintf@plt>
    fc80:	mov	r0, r4
    fc84:	mov	r1, r5
    fc88:	bl	fcac <xport_write_record>
    fc8c:	sub	sp, fp, #8
    fc90:	pop	{r4, r5, fp, pc}
    fc94:	.word	0x00016656
    fc98:	.word	0x00016313
    fc9c:	.word	0x00016306
    fca0:	.word	0x000162f7
    fca4:	.word	0x000162eb
    fca8:	.word	0x0001629d

0000fcac <xport_write_record>:
    fcac:	push	{r4, r5, fp, lr}
    fcb0:	add	fp, sp, #8
    fcb4:	mov	r5, r1
    fcb8:	mov	r4, r0
    fcbc:	mov	r0, r1
    fcc0:	bl	4c8c <strlen@plt>
    fcc4:	mov	r2, r0
    fcc8:	mov	r0, r4
    fccc:	mov	r1, r5
    fcd0:	bl	10574 <xport_write_bytes>
    fcd4:	cmp	r0, #0
    fcd8:	popne	{r4, r5, fp, pc}
    fcdc:	mov	r0, r4
    fce0:	pop	{r4, r5, fp, lr}
    fce4:	b	105a0 <xport_finish_record>

0000fce8 <xport_write_member_header_record>:
    fce8:	push	{fp, lr}
    fcec:	mov	fp, sp
    fcf0:	sub	sp, sp, #40	; 0x28
    fcf4:	ldr	r1, [pc, #92]	; fd58 <xport_write_member_header_record+0x70>
    fcf8:	add	r1, pc, r1
    fcfc:	add	r2, r1, #16
    fd00:	mov	ip, #32
    fd04:	vld1.64	{d16-d17}, [r2]
    fd08:	vld1.64	{d18-d19}, [r1], ip
    fd0c:	mov	r2, sp
    fd10:	add	r3, r2, #16
    fd14:	vst1.64	{d16-d17}, [r3]
    fd18:	vst1.64	{d18-d19}, [r2], ip
    fd1c:	ldr	r1, [r1]
    fd20:	str	r1, [r2]
    fd24:	ldr	r1, [r0, #8]
    fd28:	cmp	r1, #8
    fd2c:	bne	fd48 <xport_write_member_header_record+0x60>
    fd30:	movw	r1, #22082	; 0x5642
    fd34:	movt	r1, #56	; 0x38
    fd38:	str	r1, [sp, #3]
    fd3c:	movw	r1, #17741	; 0x454d
    fd40:	movt	r1, #16973	; 0x424d
    fd44:	str	r1, [sp]
    fd48:	mov	r1, sp
    fd4c:	bl	1050c <xport_write_header_record>
    fd50:	mov	sp, fp
    fd54:	pop	{fp, pc}
    fd58:	.word	0x00016310

0000fd5c <xport_write_descriptor_header_record>:
    fd5c:	push	{fp, lr}
    fd60:	mov	fp, sp
    fd64:	sub	sp, sp, #40	; 0x28
    fd68:	ldr	r1, [pc, #92]	; fdcc <xport_write_descriptor_header_record+0x70>
    fd6c:	add	r1, pc, r1
    fd70:	add	r2, r1, #16
    fd74:	mov	ip, #32
    fd78:	vld1.64	{d16-d17}, [r2]
    fd7c:	vld1.64	{d18-d19}, [r1], ip
    fd80:	mov	r2, sp
    fd84:	add	r3, r2, #16
    fd88:	vst1.64	{d16-d17}, [r3]
    fd8c:	vst1.64	{d18-d19}, [r2], ip
    fd90:	ldr	r1, [r1]
    fd94:	str	r1, [r2]
    fd98:	ldr	r1, [r0, #8]
    fd9c:	cmp	r1, #8
    fda0:	bne	fdbc <xport_write_descriptor_header_record+0x60>
    fda4:	movw	r1, #22100	; 0x5654
    fda8:	movt	r1, #56	; 0x38
    fdac:	str	r1, [sp, #4]
    fdb0:	movw	r1, #21316	; 0x5344
    fdb4:	movt	r1, #20547	; 0x5043
    fdb8:	str	r1, [sp]
    fdbc:	mov	r1, sp
    fdc0:	bl	1050c <xport_write_header_record>
    fdc4:	mov	sp, fp
    fdc8:	pop	{fp, pc}
    fdcc:	.word	0x000162c4

0000fdd0 <xport_write_member_record>:
    fdd0:	push	{r4, r5, r6, sl, fp, lr}
    fdd4:	add	fp, sp, #16
    fdd8:	sub	sp, sp, #112	; 0x70
    fddc:	mov	r4, r0
    fde0:	ldr	r0, [r0, #8]
    fde4:	cmp	r0, #8
    fde8:	bne	fdfc <xport_write_member_record+0x2c>
    fdec:	mov	r0, r4
    fdf0:	sub	sp, fp, #16
    fdf4:	pop	{r4, r5, r6, sl, fp, lr}
    fdf8:	b	105b8 <xport_write_member_record_v8>
    fdfc:	mov	r0, r4
    fe00:	ldrb	r2, [r0, #188]!	; 0xbc
    fe04:	ldr	ip, [pc, #116]	; fe80 <xport_write_member_record+0xb0>
    fe08:	add	ip, pc, ip
    fe0c:	ldr	lr, [pc, #112]	; fe84 <xport_write_member_record+0xb4>
    fe10:	add	lr, pc, lr
    fe14:	ldr	r3, [pc, #108]	; fe88 <xport_write_member_record+0xb8>
    fe18:	add	r3, pc, r3
    fe1c:	ldr	r5, [pc, #104]	; fe8c <xport_write_member_record+0xbc>
    fe20:	add	r5, pc, r5
    fe24:	ldr	r6, [pc, #100]	; fe90 <xport_write_member_record+0xc0>
    fe28:	add	r6, pc, r6
    fe2c:	cmp	r2, #0
    fe30:	movne	r6, r0
    fe34:	str	r6, [sp]
    fe38:	str	r5, [sp, #4]
    fe3c:	str	r3, [sp, #8]
    fe40:	str	lr, [sp, #12]
    fe44:	str	ip, [sp, #16]
    fe48:	str	r1, [sp, #20]
    fe4c:	add	r5, sp, #31
    fe50:	ldr	r2, [pc, #60]	; fe94 <xport_write_member_record+0xc4>
    fe54:	add	r2, pc, r2
    fe58:	ldr	r3, [pc, #56]	; fe98 <xport_write_member_record+0xc8>
    fe5c:	add	r3, pc, r3
    fe60:	mov	r0, r5
    fe64:	mov	r1, #81	; 0x51
    fe68:	bl	4d04 <snprintf@plt>
    fe6c:	mov	r0, r4
    fe70:	mov	r1, r5
    fe74:	bl	fcac <xport_write_record>
    fe78:	sub	sp, fp, #16
    fe7c:	pop	{r4, r5, r6, sl, fp, pc}
    fe80:	.word	0x0001647e
    fe84:	.word	0x0001613b
    fe88:	.word	0x0001612e
    fe8c:	.word	0x0001613a
    fe90:	.word	0x0001612a
    fe94:	.word	0x000160b9
    fe98:	.word	0x000160df

0000fe9c <xport_write_file_label_record>:
    fe9c:	push	{r4, r5, fp, lr}
    fea0:	add	fp, sp, #8
    fea4:	sub	sp, sp, #96	; 0x60
    fea8:	mov	r3, r1
    feac:	mov	r4, r0
    feb0:	ldr	r0, [pc, #56]	; fef0 <xport_write_file_label_record+0x54>
    feb4:	add	r0, pc, r0
    feb8:	add	r1, r4, #88	; 0x58
    febc:	stm	sp, {r0, r1}
    fec0:	str	r0, [sp, #8]
    fec4:	add	r5, sp, #15
    fec8:	ldr	r2, [pc, #36]	; fef4 <xport_write_file_label_record+0x58>
    fecc:	add	r2, pc, r2
    fed0:	mov	r0, r5
    fed4:	mov	r1, #81	; 0x51
    fed8:	bl	4d04 <snprintf@plt>
    fedc:	mov	r0, r4
    fee0:	mov	r1, r5
    fee4:	bl	fcac <xport_write_record>
    fee8:	sub	sp, fp, #8
    feec:	pop	{r4, r5, fp, pc}
    fef0:	.word	0x000163d2
    fef4:	.word	0x000160be

0000fef8 <xport_write_namestr_header_record>:
    fef8:	push	{fp, lr}
    fefc:	mov	fp, sp
    ff00:	sub	sp, sp, #40	; 0x28
    ff04:	mov	r1, #0
    ff08:	ldr	r2, [pc, #92]	; ff6c <xport_write_namestr_header_record+0x74>
    ff0c:	add	r2, pc, r2
    ff10:	vldr	d16, [r2]
    ff14:	strb	r1, [sp, #8]
    ff18:	str	r1, [sp, #12]
    ff1c:	vstr	d16, [sp]
    ff20:	ldr	r1, [r0, #28]
    ff24:	mov	r2, sp
    ff28:	vmov.i32	q8, #0	; 0x00000000
    ff2c:	add	r2, r2, #20
    ff30:	vst1.32	{d16-d17}, [r2]
    ff34:	str	r1, [sp, #16]
    ff38:	ldr	r1, [r0, #8]
    ff3c:	cmp	r1, #8
    ff40:	bne	ff5c <xport_write_namestr_header_record+0x64>
    ff44:	movw	r1, #22100	; 0x5654
    ff48:	movt	r1, #56	; 0x38
    ff4c:	str	r1, [sp, #4]
    ff50:	movw	r1, #16718	; 0x414e
    ff54:	movt	r1, #21325	; 0x534d
    ff58:	str	r1, [sp]
    ff5c:	mov	r1, sp
    ff60:	bl	1050c <xport_write_header_record>
    ff64:	mov	sp, fp
    ff68:	pop	{fp, pc}
    ff6c:	.word	0x0001614c

0000ff70 <xport_write_variables>:
    ff70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ff74:	add	fp, sp, #28
    ff78:	sub	sp, sp, #4
    ff7c:	vpush	{d8-d9}
    ff80:	sub	sp, sp, #232	; 0xe8
    ff84:	mov	r6, r0
    ff88:	add	r4, sp, #88	; 0x58
    ff8c:	add	r0, r4, #88	; 0x58
    ff90:	str	r0, [sp, #4]
    ff94:	add	r0, r4, #16
    ff98:	str	r0, [sp, #20]
    ff9c:	add	r0, r4, #8
    ffa0:	str	r0, [sp, #16]
    ffa4:	add	sl, r4, #56	; 0x38
    ffa8:	add	r7, r4, #72	; 0x48
    ffac:	mov	r0, #0
    ffb0:	str	r0, [sp, #28]
    ffb4:	mov	r5, #0
    ffb8:	mov	r8, #0
    ffbc:	mov	r9, #0
    ffc0:	str	sl, [sp, #8]
    ffc4:	str	r7, [sp, #12]
    ffc8:	str	r6, [sp, #24]
    ffcc:	b	1000c <xport_write_variables+0x9c>
    ffd0:	add	r4, sp, #88	; 0x58
    ffd4:	ldr	sl, [sp, #8]
    ffd8:	mov	r0, r4
    ffdc:	bl	4b00 <xport_namestr_bswap@plt>
    ffe0:	cmp	r7, #0
    ffe4:	addne	r5, r5, #1
    ffe8:	mov	r0, r6
    ffec:	mov	r1, r4
    fff0:	mov	r2, #140	; 0x8c
    fff4:	bl	10574 <xport_write_bytes>
    fff8:	ldr	r1, [sp, #40]	; 0x28
    fffc:	add	r8, r1, r8
   10000:	cmp	r0, #0
   10004:	ldr	r7, [sp, #12]
   10008:	bne	101e4 <xport_write_variables+0x274>
   1000c:	ldr	r0, [r6, #28]
   10010:	cmp	r9, r0
   10014:	bge	101d4 <xport_write_variables+0x264>
   10018:	str	r5, [sp, #32]
   1001c:	mov	r0, r6
   10020:	mov	r1, r9
   10024:	bl	4e18 <readstat_get_variable@plt>
   10028:	mov	r6, r0
   1002c:	ldr	r0, [r0]
   10030:	ldr	r1, [r6, #1600]	; 0x640
   10034:	bl	f9e4 <xport_variable_width>
   10038:	mov	r5, r9
   1003c:	mov	r9, r0
   10040:	mov	r0, r4
   10044:	mov	r1, #0
   10048:	mov	r2, #140	; 0x8c
   1004c:	bl	4d28 <memset@plt>
   10050:	add	r5, r5, #1
   10054:	str	r5, [sp, #36]	; 0x24
   10058:	strh	r5, [sp, #94]	; 0x5e
   1005c:	str	r9, [sp, #40]	; 0x28
   10060:	strh	r9, [sp, #92]	; 0x5c
   10064:	movw	r0, #8224	; 0x2020
   10068:	movt	r0, #8224	; 0x2020
   1006c:	str	r0, [sl, #4]
   10070:	str	r0, [sl]
   10074:	str	r0, [r7, #4]
   10078:	str	r0, [r7]
   1007c:	str	r8, [sp, #172]	; 0xac
   10080:	mov	r0, r6
   10084:	bl	4fe0 <readstat_variable_get_type_class@plt>
   10088:	cmp	r0, #0
   1008c:	mov	r0, #1
   10090:	movweq	r0, #2
   10094:	strh	r0, [sp, #88]	; 0x58
   10098:	mov	r9, sl
   1009c:	add	sl, r6, #8
   100a0:	ldr	r0, [sp, #16]
   100a4:	mov	r1, #8
   100a8:	mov	r2, sl
   100ac:	bl	10650 <copypad>
   100b0:	add	r4, r6, #564	; 0x234
   100b4:	ldr	r0, [sp, #20]
   100b8:	mov	r1, #40	; 0x28
   100bc:	mov	r2, r4
   100c0:	bl	10650 <copypad>
   100c4:	mov	r0, r6
   100c8:	ldrb	r1, [r0, #308]!	; 0x134
   100cc:	cmp	r1, #0
   100d0:	beq	10170 <xport_write_variables+0x200>
   100d4:	mov	r1, #0
   100d8:	str	r1, [sp, #44]	; 0x2c
   100dc:	str	r1, [sp, #84]	; 0x54
   100e0:	add	r1, sp, #44	; 0x2c
   100e4:	str	r1, [sp]
   100e8:	ldr	r1, [pc, #932]	; 10494 <xport_write_variables+0x524>
   100ec:	add	r1, pc, r1
   100f0:	mov	r5, r4
   100f4:	mov	r4, r7
   100f8:	add	r7, sp, #56	; 0x38
   100fc:	mov	r2, r7
   10100:	add	r3, sp, #84	; 0x54
   10104:	bl	4d10 <__isoc99_sscanf@plt>
   10108:	mov	r0, r9
   1010c:	mov	r1, #8
   10110:	mov	r2, r7
   10114:	bl	10650 <copypad>
   10118:	ldr	r0, [sp, #84]	; 0x54
   1011c:	strh	r0, [sp, #152]	; 0x98
   10120:	ldr	r0, [sp, #44]	; 0x2c
   10124:	strh	r0, [sp, #154]	; 0x9a
   10128:	mov	r0, r4
   1012c:	mov	r4, r5
   10130:	mov	r1, #8
   10134:	mov	r2, r7
   10138:	bl	10650 <copypad>
   1013c:	ldr	r0, [sp, #84]	; 0x54
   10140:	strh	r0, [sp, #168]	; 0xa8
   10144:	ldr	r0, [sp, #44]	; 0x2c
   10148:	strh	r0, [sp, #170]	; 0xaa
   1014c:	mov	r0, r7
   10150:	bl	4c8c <strlen@plt>
   10154:	cmp	r0, #8
   10158:	ldr	r0, [sp, #28]
   1015c:	movwhi	r0, #1
   10160:	str	r0, [sp, #28]
   10164:	mov	r7, #0
   10168:	movwhi	r7, #1
   1016c:	b	10180 <xport_write_variables+0x210>
   10170:	ldr	r0, [r6, #2136]	; 0x858
   10174:	mov	r7, #0
   10178:	cmp	r0, #0
   1017c:	strhne	r0, [sp, #152]	; 0x98
   10180:	ldr	r9, [sp, #36]	; 0x24
   10184:	ldr	r5, [sp, #32]
   10188:	ldr	r0, [r6, #2132]	; 0x854
   1018c:	sub	r0, r0, #3
   10190:	clz	r0, r0
   10194:	lsr	r0, r0, #5
   10198:	strh	r0, [sp, #156]	; 0x9c
   1019c:	ldr	r6, [sp, #24]
   101a0:	ldr	r0, [r6, #8]
   101a4:	cmp	r0, #8
   101a8:	bne	ffd0 <xport_write_variables+0x60>
   101ac:	ldr	r0, [sp, #4]
   101b0:	mov	r1, #32
   101b4:	mov	r2, sl
   101b8:	bl	10650 <copypad>
   101bc:	mov	r0, r4
   101c0:	bl	4c8c <strlen@plt>
   101c4:	strh	r0, [sp, #208]	; 0xd0
   101c8:	cmp	r0, #40	; 0x28
   101cc:	movwhi	r7, #1
   101d0:	b	ffd0 <xport_write_variables+0x60>
   101d4:	mov	r0, r6
   101d8:	bl	105a0 <xport_finish_record>
   101dc:	cmp	r0, #0
   101e0:	beq	101f4 <xport_write_variables+0x284>
   101e4:	sub	sp, fp, #48	; 0x30
   101e8:	vpop	{d8-d9}
   101ec:	add	sp, sp, #4
   101f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   101f4:	mov	r0, #0
   101f8:	cmp	r5, #0
   101fc:	beq	101e4 <xport_write_variables+0x274>
   10200:	ldr	r1, [r6, #8]
   10204:	cmp	r1, #8
   10208:	bne	101e4 <xport_write_variables+0x274>
   1020c:	vmov.i32	q8, #0	; 0x00000000
   10210:	ldr	r0, [pc, #640]	; 10498 <xport_write_variables+0x528>
   10214:	add	r0, pc, r0
   10218:	vldr	d18, [r0]
   1021c:	ldr	r0, [sp, #20]
   10220:	vst1.64	{d16-d17}, [r0]
   10224:	mov	r0, #0
   10228:	strb	r0, [sp, #96]	; 0x60
   1022c:	str	r5, [sp, #100]	; 0x64
   10230:	str	r0, [sp, #120]	; 0x78
   10234:	vstr	d18, [sp, #88]	; 0x58
   10238:	ldr	r0, [sp, #28]
   1023c:	cmp	r0, #0
   10240:	beq	1025c <xport_write_variables+0x2ec>
   10244:	movw	r0, #22092	; 0x564c
   10248:	movt	r0, #57	; 0x39
   1024c:	str	r0, [sp, #92]	; 0x5c
   10250:	movw	r0, #16716	; 0x414c
   10254:	movt	r0, #17730	; 0x4542
   10258:	str	r0, [sp, #88]	; 0x58
   1025c:	add	r1, sp, #88	; 0x58
   10260:	mov	r0, r6
   10264:	bl	106a8 <xport_write_header_record_v8>
   10268:	cmp	r0, #0
   1026c:	bne	101e4 <xport_write_variables+0x274>
   10270:	ldr	r0, [r6, #28]
   10274:	cmp	r0, #1
   10278:	blt	10480 <xport_write_variables+0x510>
   1027c:	vmov.i32	q4, #0	; 0x00000000
   10280:	mov	r7, #0
   10284:	b	1029c <xport_write_variables+0x32c>
   10288:	add	r7, r7, #1
   1028c:	ldr	r6, [sp, #24]
   10290:	ldr	r0, [r6, #28]
   10294:	cmp	r7, r0
   10298:	bge	10480 <xport_write_variables+0x510>
   1029c:	mov	r0, r6
   102a0:	mov	r1, r7
   102a4:	bl	4e18 <readstat_get_variable@plt>
   102a8:	mov	r8, r0
   102ac:	add	sl, r0, #564	; 0x234
   102b0:	mov	r0, sl
   102b4:	bl	4c8c <strlen@plt>
   102b8:	mov	r4, r0
   102bc:	add	r6, r8, #8
   102c0:	mov	r0, r6
   102c4:	bl	4c8c <strlen@plt>
   102c8:	mov	r5, r0
   102cc:	add	r9, sp, #56	; 0x38
   102d0:	mov	r0, r9
   102d4:	mov	r1, #20
   102d8:	vst1.64	{d8-d9}, [r0], r1
   102dc:	mov	r1, #0
   102e0:	str	r1, [r0]
   102e4:	str	r1, [sp, #72]	; 0x48
   102e8:	ldrb	r0, [r8, #308]!	; 0x134
   102ec:	cmp	r0, #0
   102f0:	beq	1033c <xport_write_variables+0x3cc>
   102f4:	mov	r0, #2
   102f8:	str	r0, [sp, #44]	; 0x2c
   102fc:	mov	r0, #8
   10300:	str	r0, [sp, #84]	; 0x54
   10304:	add	r0, sp, #44	; 0x2c
   10308:	str	r0, [sp]
   1030c:	mov	r0, r8
   10310:	ldr	r1, [pc, #388]	; 1049c <xport_write_variables+0x52c>
   10314:	add	r1, pc, r1
   10318:	mov	r2, r9
   1031c:	add	r3, sp, #84	; 0x54
   10320:	bl	4d10 <__isoc99_sscanf@plt>
   10324:	cmp	r0, #0
   10328:	ble	1048c <xport_write_variables+0x51c>
   1032c:	mov	r0, r9
   10330:	bl	4c8c <strlen@plt>
   10334:	cmp	r0, #9
   10338:	bge	103ac <xport_write_variables+0x43c>
   1033c:	cmp	r4, #41	; 0x29
   10340:	bcc	10288 <xport_write_variables+0x318>
   10344:	strh	r4, [sp, #48]	; 0x30
   10348:	strh	r5, [sp, #46]	; 0x2e
   1034c:	add	r0, r7, #1
   10350:	strh	r0, [sp, #44]	; 0x2c
   10354:	bl	492c <machine_is_little_endian@plt>
   10358:	cmp	r0, #0
   1035c:	beq	10384 <xport_write_variables+0x414>
   10360:	ldrh	r0, [sp, #44]	; 0x2c
   10364:	bl	4920 <byteswap2@plt>
   10368:	strh	r0, [sp, #44]	; 0x2c
   1036c:	ldrh	r0, [sp, #46]	; 0x2e
   10370:	bl	4920 <byteswap2@plt>
   10374:	strh	r0, [sp, #46]	; 0x2e
   10378:	ldrh	r0, [sp, #48]	; 0x30
   1037c:	bl	4920 <byteswap2@plt>
   10380:	strh	r0, [sp, #48]	; 0x30
   10384:	ldr	r4, [sp, #24]
   10388:	mov	r0, r4
   1038c:	add	r1, sp, #44	; 0x2c
   10390:	mov	r2, #6
   10394:	bl	4ef0 <readstat_write_bytes@plt>
   10398:	cmp	r0, #0
   1039c:	bne	101e4 <xport_write_variables+0x274>
   103a0:	mov	r0, r4
   103a4:	mov	r1, r6
   103a8:	b	1045c <xport_write_variables+0x4ec>
   103ac:	strh	r4, [sp, #52]	; 0x34
   103b0:	strh	r0, [sp, #50]	; 0x32
   103b4:	strh	r0, [sp, #48]	; 0x30
   103b8:	strh	r5, [sp, #46]	; 0x2e
   103bc:	add	r0, r7, #1
   103c0:	strh	r0, [sp, #44]	; 0x2c
   103c4:	bl	492c <machine_is_little_endian@plt>
   103c8:	cmp	r0, #0
   103cc:	beq	1040c <xport_write_variables+0x49c>
   103d0:	ldrh	r0, [sp, #44]	; 0x2c
   103d4:	bl	4920 <byteswap2@plt>
   103d8:	strh	r0, [sp, #44]	; 0x2c
   103dc:	ldrh	r0, [sp, #46]	; 0x2e
   103e0:	bl	4920 <byteswap2@plt>
   103e4:	strh	r0, [sp, #46]	; 0x2e
   103e8:	ldrh	r0, [sp, #48]	; 0x30
   103ec:	bl	4920 <byteswap2@plt>
   103f0:	strh	r0, [sp, #48]	; 0x30
   103f4:	ldrh	r0, [sp, #50]	; 0x32
   103f8:	bl	4920 <byteswap2@plt>
   103fc:	strh	r0, [sp, #50]	; 0x32
   10400:	ldrh	r0, [sp, #52]	; 0x34
   10404:	bl	4920 <byteswap2@plt>
   10408:	strh	r0, [sp, #52]	; 0x34
   1040c:	ldr	r4, [sp, #24]
   10410:	mov	r0, r4
   10414:	add	r1, sp, #44	; 0x2c
   10418:	mov	r2, #10
   1041c:	bl	4ef0 <readstat_write_bytes@plt>
   10420:	cmp	r0, #0
   10424:	add	r5, sp, #56	; 0x38
   10428:	bne	101e4 <xport_write_variables+0x274>
   1042c:	mov	r0, r4
   10430:	mov	r1, r6
   10434:	bl	4bd8 <readstat_write_string@plt>
   10438:	cmp	r0, #0
   1043c:	bne	101e4 <xport_write_variables+0x274>
   10440:	mov	r0, r4
   10444:	mov	r1, r5
   10448:	bl	4bd8 <readstat_write_string@plt>
   1044c:	cmp	r0, #0
   10450:	bne	101e4 <xport_write_variables+0x274>
   10454:	mov	r0, r4
   10458:	mov	r1, r5
   1045c:	bl	4bd8 <readstat_write_string@plt>
   10460:	cmp	r0, #0
   10464:	bne	101e4 <xport_write_variables+0x274>
   10468:	mov	r0, r4
   1046c:	mov	r1, sl
   10470:	bl	4bd8 <readstat_write_string@plt>
   10474:	cmp	r0, #0
   10478:	beq	10288 <xport_write_variables+0x318>
   1047c:	b	101e4 <xport_write_variables+0x274>
   10480:	mov	r0, r6
   10484:	bl	105a0 <xport_finish_record>
   10488:	b	101e4 <xport_write_variables+0x274>
   1048c:	mov	r0, #11
   10490:	b	101e4 <xport_write_variables+0x274>
   10494:	.word	0x00015dae
   10498:	.word	0x00015e54
   1049c:	.word	0x00015b86

000104a0 <xport_write_obs_header_record>:
   104a0:	push	{fp, lr}
   104a4:	mov	fp, sp
   104a8:	sub	sp, sp, #40	; 0x28
   104ac:	vmov.i32	q8, #0	; 0x00000000
   104b0:	mov	r1, #32
   104b4:	mov	r2, sp
   104b8:	add	r3, r2, #16
   104bc:	vst1.64	{d16-d17}, [r2], r1
   104c0:	mov	r1, #0
   104c4:	str	r1, [r2]
   104c8:	vst1.64	{d16-d17}, [r3]
   104cc:	mov	r1, #83	; 0x53
   104d0:	strb	r1, [sp, #2]
   104d4:	movw	r1, #16975	; 0x424f
   104d8:	strh	r1, [sp]
   104dc:	ldr	r1, [r0, #8]
   104e0:	cmp	r1, #8
   104e4:	bne	104fc <xport_write_obs_header_record+0x5c>
   104e8:	mov	r1, #56	; 0x38
   104ec:	strh	r1, [sp, #4]
   104f0:	movw	r1, #16975	; 0x424f
   104f4:	movt	r1, #22099	; 0x5653
   104f8:	str	r1, [sp]
   104fc:	mov	r1, sp
   10500:	bl	1050c <xport_write_header_record>
   10504:	mov	sp, fp
   10508:	pop	{fp, pc}

0001050c <xport_write_header_record>:
   1050c:	push	{r4, r5, r6, r7, fp, lr}
   10510:	add	fp, sp, #16
   10514:	sub	sp, sp, #112	; 0x70
   10518:	mov	r3, r1
   1051c:	mov	r7, r0
   10520:	ldr	r0, [r1, #12]
   10524:	ldr	r1, [r1, #16]
   10528:	ldr	r2, [r3, #20]
   1052c:	ldr	r5, [r3, #24]
   10530:	ldr	r4, [r3, #28]
   10534:	ldr	r6, [r3, #32]
   10538:	stm	sp, {r0, r1, r2, r5}
   1053c:	str	r4, [sp, #16]
   10540:	str	r6, [sp, #20]
   10544:	add	r5, sp, #31
   10548:	ldr	r2, [pc, #32]	; 10570 <xport_write_header_record+0x64>
   1054c:	add	r2, pc, r2
   10550:	mov	r0, r5
   10554:	mov	r1, #81	; 0x51
   10558:	bl	4d04 <snprintf@plt>
   1055c:	mov	r0, r7
   10560:	mov	r1, r5
   10564:	bl	fcac <xport_write_record>
   10568:	sub	sp, fp, #16
   1056c:	pop	{r4, r5, r6, r7, fp, pc}
   10570:	.word	0x0001597c

00010574 <xport_write_bytes>:
   10574:	push	{fp, lr}
   10578:	mov	fp, sp
   1057c:	sub	sp, sp, #8
   10580:	ldr	r3, [pc, #20]	; 1059c <xport_write_bytes+0x28>
   10584:	add	r3, pc, r3
   10588:	str	r3, [sp]
   1058c:	mov	r3, #80	; 0x50
   10590:	bl	4fbc <readstat_write_bytes_as_lines@plt>
   10594:	mov	sp, fp
   10598:	pop	{fp, pc}
   1059c:	.word	0x00015d02

000105a0 <xport_finish_record>:
   105a0:	ldr	r3, [pc, #12]	; 105b4 <xport_finish_record+0x14>
   105a4:	add	r3, pc, r3
   105a8:	mov	r1, #32
   105ac:	mov	r2, #80	; 0x50
   105b0:	b	4f80 <readstat_write_line_padding@plt>
   105b4:	.word	0x00015ce2

000105b8 <xport_write_member_record_v8>:
   105b8:	push	{r4, r5, fp, lr}
   105bc:	add	fp, sp, #8
   105c0:	sub	sp, sp, #104	; 0x68
   105c4:	mov	r4, r0
   105c8:	ldrb	r2, [r0, #188]!	; 0xbc
   105cc:	ldr	ip, [pc, #100]	; 10638 <xport_write_member_record_v8+0x80>
   105d0:	add	ip, pc, ip
   105d4:	ldr	lr, [pc, #96]	; 1063c <xport_write_member_record_v8+0x84>
   105d8:	add	lr, pc, lr
   105dc:	ldr	r3, [pc, #92]	; 10640 <xport_write_member_record_v8+0x88>
   105e0:	add	r3, pc, r3
   105e4:	ldr	r5, [pc, #88]	; 10644 <xport_write_member_record_v8+0x8c>
   105e8:	add	r5, pc, r5
   105ec:	cmp	r2, #0
   105f0:	movne	r5, r0
   105f4:	str	r5, [sp]
   105f8:	stmib	sp, {r3, lr}
   105fc:	str	ip, [sp, #12]
   10600:	str	r1, [sp, #16]
   10604:	add	r5, sp, #23
   10608:	ldr	r2, [pc, #56]	; 10648 <xport_write_member_record_v8+0x90>
   1060c:	add	r2, pc, r2
   10610:	ldr	r3, [pc, #52]	; 1064c <xport_write_member_record_v8+0x94>
   10614:	add	r3, pc, r3
   10618:	mov	r0, r5
   1061c:	mov	r1, #81	; 0x51
   10620:	bl	4d04 <snprintf@plt>
   10624:	mov	r0, r4
   10628:	mov	r1, r5
   1062c:	bl	fcac <xport_write_record>
   10630:	sub	sp, fp, #8
   10634:	pop	{r4, r5, fp, pc}
   10638:	.word	0x0001597b
   1063c:	.word	0x0001596e
   10640:	.word	0x0001597a
   10644:	.word	0x0001596a
   10648:	.word	0x00015956
   1064c:	.word	0x00015927

00010650 <copypad>:
   10650:	push	{fp, lr}
   10654:	mov	fp, sp
   10658:	add	ip, r0, r1
   1065c:	cmp	r1, #1
   10660:	mov	lr, r0
   10664:	blt	10688 <copypad+0x38>
   10668:	mov	lr, r0
   1066c:	ldrb	r3, [r2]
   10670:	cmp	r3, #0
   10674:	beq	10688 <copypad+0x38>
   10678:	strb	r3, [lr], #1
   1067c:	add	r2, r2, #1
   10680:	cmp	lr, ip
   10684:	bcc	1066c <copypad+0x1c>
   10688:	cmp	lr, ip
   1068c:	popcs	{fp, pc}
   10690:	sub	r1, r1, lr
   10694:	add	r2, r0, r1
   10698:	mov	r0, lr
   1069c:	mov	r1, #32
   106a0:	bl	4d28 <memset@plt>
   106a4:	pop	{fp, pc}

000106a8 <xport_write_header_record_v8>:
   106a8:	push	{r4, r5, fp, lr}
   106ac:	add	fp, sp, #8
   106b0:	sub	sp, sp, #88	; 0x58
   106b4:	mov	r3, r1
   106b8:	mov	r4, r0
   106bc:	ldr	r0, [r1, #12]
   106c0:	str	r0, [sp]
   106c4:	add	r5, sp, #7
   106c8:	ldr	r2, [pc, #32]	; 106f0 <xport_write_header_record_v8+0x48>
   106cc:	add	r2, pc, r2
   106d0:	mov	r0, r5
   106d4:	mov	r1, #81	; 0x51
   106d8:	bl	4d04 <snprintf@plt>
   106dc:	mov	r0, r4
   106e0:	mov	r1, r5
   106e4:	bl	fcac <xport_write_record>
   106e8:	sub	sp, fp, #8
   106ec:	pop	{r4, r5, fp, pc}
   106f0:	.word	0x000158db

000106f4 <por_ctx_init>:
   106f4:	push	{r4, sl, fp, lr}
   106f8:	add	fp, sp, #8
   106fc:	mov	r0, #1
   10700:	mov	r1, #660	; 0x294
   10704:	bl	47d0 <calloc@plt>
   10708:	mov	r4, r0
   1070c:	mov	r0, #20
   10710:	str	r0, [r4, #608]	; 0x260
   10714:	mov	r0, #32
   10718:	strb	r0, [r4, #48]	; 0x30
   1071c:	mov	r0, #1024	; 0x400
   10720:	bl	4c14 <ck_hash_table_init@plt>
   10724:	str	r0, [r4, #656]	; 0x290
   10728:	mov	r0, r4
   1072c:	pop	{r4, sl, fp, pc}

00010730 <por_ctx_free>:
   10730:	push	{r4, r5, r6, sl, fp, lr}
   10734:	add	fp, sp, #16
   10738:	mov	r4, r0
   1073c:	ldr	r0, [r0, #616]	; 0x268
   10740:	cmp	r0, #0
   10744:	beq	1074c <por_ctx_free+0x1c>
   10748:	bl	4938 <free@plt>
   1074c:	ldr	r0, [r4, #652]	; 0x28c
   10750:	cmp	r0, #0
   10754:	beq	107a4 <por_ctx_free+0x74>
   10758:	ldr	r1, [r4, #632]	; 0x278
   1075c:	ldr	r0, [r4, #652]	; 0x28c
   10760:	cmp	r1, #1
   10764:	blt	107a0 <por_ctx_free+0x70>
   10768:	mov	r5, #0
   1076c:	mov	r6, #264	; 0x108
   10770:	b	1078c <por_ctx_free+0x5c>
   10774:	add	r6, r6, #280	; 0x118
   10778:	add	r5, r5, #1
   1077c:	ldr	r1, [r4, #632]	; 0x278
   10780:	ldr	r0, [r4, #652]	; 0x28c
   10784:	cmp	r5, r1
   10788:	bge	107a0 <por_ctx_free+0x70>
   1078c:	ldr	r0, [r0, r6]
   10790:	cmp	r0, #0
   10794:	beq	10774 <por_ctx_free+0x44>
   10798:	bl	4938 <free@plt>
   1079c:	b	10774 <por_ctx_free+0x44>
   107a0:	bl	4938 <free@plt>
   107a4:	ldr	r0, [r4, #648]	; 0x288
   107a8:	cmp	r0, #0
   107ac:	beq	107f4 <por_ctx_free+0xc4>
   107b0:	ldr	r1, [r4, #632]	; 0x278
   107b4:	ldr	r0, [r4, #648]	; 0x288
   107b8:	cmp	r1, #1
   107bc:	blt	107f0 <por_ctx_free+0xc0>
   107c0:	mov	r5, #0
   107c4:	b	107dc <por_ctx_free+0xac>
   107c8:	add	r5, r5, #1
   107cc:	ldr	r1, [r4, #632]	; 0x278
   107d0:	ldr	r0, [r4, #648]	; 0x288
   107d4:	cmp	r5, r1
   107d8:	bge	107f0 <por_ctx_free+0xc0>
   107dc:	ldr	r0, [r0, r5, lsl #2]
   107e0:	cmp	r0, #0
   107e4:	beq	107c8 <por_ctx_free+0x98>
   107e8:	bl	4938 <free@plt>
   107ec:	b	107c8 <por_ctx_free+0x98>
   107f0:	bl	4938 <free@plt>
   107f4:	ldr	r0, [r4, #656]	; 0x290
   107f8:	cmp	r0, #0
   107fc:	beq	10804 <por_ctx_free+0xd4>
   10800:	bl	4cc8 <ck_hash_table_free@plt>
   10804:	ldr	r0, [r4, #612]	; 0x264
   10808:	cmp	r0, #0
   1080c:	beq	10814 <por_ctx_free+0xe4>
   10810:	bl	4848 <iconv_close@plt>
   10814:	mov	r0, r4
   10818:	pop	{r4, r5, r6, sl, fp, lr}
   1081c:	b	4938 <free@plt>

00010820 <por_utf8_encode>:
   10820:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10824:	add	fp, sp, #28
   10828:	sub	sp, sp, #4
   1082c:	cmp	r1, #0
   10830:	beq	108e0 <por_utf8_encode+0xc0>
   10834:	mov	sl, r3
   10838:	mov	r8, r2
   1083c:	mov	r7, r1
   10840:	mov	r6, r0
   10844:	ldr	r9, [fp, #8]
   10848:	mov	r4, #0
   1084c:	b	1085c <por_utf8_encode+0x3c>
   10850:	add	r6, r6, #1
   10854:	subs	r7, r7, #1
   10858:	beq	108ec <por_utf8_encode+0xcc>
   1085c:	ldrb	r0, [r6]
   10860:	add	r0, r9, r0, lsl #1
   10864:	ldrh	r0, [r0]
   10868:	cmp	r0, #0
   1086c:	mvneq	r0, #2
   10870:	uxth	r2, r0
   10874:	cmp	r2, #32
   10878:	bcc	108e8 <por_utf8_encode+0xc8>
   1087c:	cmp	r2, #127	; 0x7f
   10880:	bhi	1089c <por_utf8_encode+0x7c>
   10884:	add	r1, r4, #1
   10888:	cmp	r1, sl
   1088c:	bhi	108ec <por_utf8_encode+0xcc>
   10890:	strb	r0, [r8, r4]
   10894:	mov	r4, r1
   10898:	b	10850 <por_utf8_encode+0x30>
   1089c:	mov	r0, #0
   108a0:	cmp	r0, r2, lsr #11
   108a4:	addne	r0, r4, #3
   108a8:	addeq	r0, r4, #2
   108ac:	cmp	r0, sl
   108b0:	bhi	108ec <por_utf8_encode+0xcc>
   108b4:	add	r5, r8, r4
   108b8:	mov	r0, r5
   108bc:	ldr	r1, [pc, #52]	; 108f8 <por_utf8_encode+0xd8>
   108c0:	add	r1, pc, r1
   108c4:	bl	4e84 <sprintf@plt>
   108c8:	cmp	r0, #0
   108cc:	movle	r0, #32
   108d0:	strble	r0, [r5]
   108d4:	movle	r0, #1
   108d8:	add	r4, r0, r4
   108dc:	b	10850 <por_utf8_encode+0x30>
   108e0:	mov	r4, #0
   108e4:	b	108ec <por_utf8_encode+0xcc>
   108e8:	mvn	r4, #0
   108ec:	mov	r0, r4
   108f0:	sub	sp, fp, #28
   108f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108f8:	.word	0x000157b1

000108fc <por_utf8_decode>:
   108fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10900:	add	fp, sp, #28
   10904:	sub	sp, sp, #12
   10908:	mov	r6, r0
   1090c:	mov	r0, #0
   10910:	str	r0, [sp, #8]
   10914:	str	r0, [sp, #4]
   10918:	cmp	r3, #0
   1091c:	beq	109d0 <por_utf8_decode+0xd4>
   10920:	mov	r4, r3
   10924:	mov	r5, r2
   10928:	ldr	sl, [fp, #8]
   1092c:	mov	r8, #0
   10930:	add	r7, sp, #4
   10934:	mov	r9, #0
   10938:	b	10954 <por_utf8_decode+0x58>
   1093c:	str	r8, [sp, #4]
   10940:	add	r6, r6, r0
   10944:	add	r9, r9, #1
   10948:	cmp	r4, r9
   1094c:	mov	r0, r9
   10950:	beq	109d0 <por_utf8_decode+0xd4>
   10954:	ldrb	r0, [r6]
   10958:	sub	r1, r0, #32
   1095c:	uxtb	r1, r1
   10960:	cmp	r1, #94	; 0x5e
   10964:	bhi	10980 <por_utf8_decode+0x84>
   10968:	ldrb	r0, [sl, r0]
   1096c:	cmp	r0, #0
   10970:	beq	109d8 <por_utf8_decode+0xdc>
   10974:	strb	r0, [r5, r9]
   10978:	mov	r0, #1
   1097c:	b	1093c <por_utf8_decode+0x40>
   10980:	mov	r0, r6
   10984:	ldr	r1, [pc, #88]	; 109e4 <por_utf8_decode+0xe8>
   10988:	add	r1, pc, r1
   1098c:	add	r2, sp, #8
   10990:	mov	r3, r7
   10994:	bl	4d10 <__isoc99_sscanf@plt>
   10998:	mov	r1, r0
   1099c:	mvn	r0, #0
   109a0:	cmp	r1, #0
   109a4:	beq	109d0 <por_utf8_decode+0xd4>
   109a8:	ldr	r1, [sp, #8]
   109ac:	ldr	r2, [fp, #12]
   109b0:	cmp	r1, r2
   109b4:	bcs	109d0 <por_utf8_decode+0xd4>
   109b8:	ldrb	r1, [sl, r1]
   109bc:	cmp	r1, #0
   109c0:	beq	109d0 <por_utf8_decode+0xd4>
   109c4:	strb	r1, [r5, r9]
   109c8:	ldr	r0, [sp, #4]
   109cc:	b	1093c <por_utf8_decode+0x40>
   109d0:	sub	sp, fp, #28
   109d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109d8:	mvn	r0, #0
   109dc:	sub	sp, fp, #28
   109e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109e4:	.word	0x000156ed

000109e8 <readstat_por_parse_double>:
   109e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109ec:	add	fp, sp, #28
   109f0:	sub	sp, sp, #4
   109f4:	vpush	{d8-d11}
   109f8:	sub	sp, sp, #40	; 0x28
   109fc:	sub	sp, sp, #1024	; 0x400
   10a00:	str	r3, [sp, #16]
   10a04:	str	r2, [sp, #20]
   10a08:	mov	r9, r0
   10a0c:	cmp	r1, #0
   10a10:	str	r0, [sp, #24]
   10a14:	str	r1, [sp, #12]
   10a18:	beq	10d1c <readstat_por_parse_double+0x334>
   10a1c:	add	r1, r9, r1
   10a20:	str	r1, [sp, #28]
   10a24:	mov	ip, #0
   10a28:	vmov.f64	d16, #62	; 0x41f00000  30.0
   10a2c:	vmov.i32	d9, #0	; 0x00000000
   10a30:	mov	r6, #1
   10a34:	mvn	lr, #1
   10a38:	vldr	d17, [pc, #992]	; 10e20 <readstat_por_parse_double+0x438>
   10a3c:	vmov.i32	d10, #0	; 0x00000000
   10a40:	vmov.i32	d11, #0	; 0x00000000
   10a44:	vmov.i32	d19, #0	; 0x00000000
   10a48:	vmov.f64	d18, d16
   10a4c:	mov	r8, #1
   10a50:	mov	r0, #0
   10a54:	str	r0, [sp, #32]
   10a58:	vmov.i32	d8, #0	; 0x00000000
   10a5c:	ldr	r0, [pc, #964]	; 10e28 <readstat_por_parse_double+0x440>
   10a60:	add	r0, pc, r0
   10a64:	ldrb	r2, [r0, r8]
   10a68:	ldr	r0, [pc, #956]	; 10e2c <readstat_por_parse_double+0x444>
   10a6c:	add	r0, pc, r0
   10a70:	ldrb	r0, [r0, r8]
   10a74:	ldr	r1, [pc, #948]	; 10e30 <readstat_por_parse_double+0x448>
   10a78:	add	r1, pc, r1
   10a7c:	add	r4, r1, r0
   10a80:	movw	r0, #2414	; 0x96e
   10a84:	tst	r6, r0, lsr r8
   10a88:	bne	10a94 <readstat_por_parse_double+0xac>
   10a8c:	mov	r5, r4
   10a90:	b	10af4 <readstat_por_parse_double+0x10c>
   10a94:	ldr	r0, [pc, #920]	; 10e34 <readstat_por_parse_double+0x44c>
   10a98:	add	r0, pc, r0
   10a9c:	ldrb	sl, [r0, r8]
   10aa0:	add	r5, r4, sl
   10aa4:	sub	r1, r5, #1
   10aa8:	cmp	r1, r4
   10aac:	bcc	10aec <readstat_por_parse_double+0x104>
   10ab0:	ldrb	r6, [r9]
   10ab4:	mov	r3, r4
   10ab8:	b	10ac8 <readstat_por_parse_double+0xe0>
   10abc:	sub	r1, r0, #1
   10ac0:	cmp	r1, r3
   10ac4:	bcc	10aec <readstat_por_parse_double+0x104>
   10ac8:	sub	r7, r1, r3
   10acc:	mov	r0, r3
   10ad0:	ldrb	r7, [r0, r7, asr #1]!
   10ad4:	cmp	r6, r7
   10ad8:	bcc	10abc <readstat_por_parse_double+0xd4>
   10adc:	bls	10b74 <readstat_por_parse_double+0x18c>
   10ae0:	add	r3, r0, #1
   10ae4:	cmp	r1, r3
   10ae8:	bcs	10ac8 <readstat_por_parse_double+0xe0>
   10aec:	add	r2, sl, r2
   10af0:	mov	r6, #1
   10af4:	movw	r0, #4090	; 0xffa
   10af8:	tst	r6, r0, lsr r8
   10afc:	bne	10b0c <readstat_por_parse_double+0x124>
   10b00:	ldr	r3, [pc, #816]	; 10e38 <readstat_por_parse_double+0x450>
   10b04:	add	r3, pc, r3
   10b08:	b	10ba4 <readstat_por_parse_double+0x1bc>
   10b0c:	ldr	r0, [pc, #808]	; 10e3c <readstat_por_parse_double+0x454>
   10b10:	add	r0, pc, r0
   10b14:	ldrb	r0, [r0, r8]
   10b18:	add	r1, r5, r0, lsl #1
   10b1c:	sub	r7, r1, #2
   10b20:	cmp	r7, r5
   10b24:	bcc	10b98 <readstat_por_parse_double+0x1b0>
   10b28:	ldrb	r1, [r9]
   10b2c:	mov	r6, r5
   10b30:	b	10b40 <readstat_por_parse_double+0x158>
   10b34:	sub	r7, r3, #2
   10b38:	cmp	r7, r6
   10b3c:	bcc	10b94 <readstat_por_parse_double+0x1ac>
   10b40:	sub	r3, r7, r6
   10b44:	and	r4, lr, r3, asr #1
   10b48:	mov	r3, r6
   10b4c:	ldrb	r4, [r3, r4]!
   10b50:	cmp	r1, r4
   10b54:	bcc	10b34 <readstat_por_parse_double+0x14c>
   10b58:	ldrb	r4, [r3, #1]
   10b5c:	cmp	r1, r4
   10b60:	bls	10b8c <readstat_por_parse_double+0x1a4>
   10b64:	add	r6, r3, #2
   10b68:	cmp	r7, r6
   10b6c:	bcs	10b40 <readstat_por_parse_double+0x158>
   10b70:	b	10b94 <readstat_por_parse_double+0x1ac>
   10b74:	sub	r1, r2, r4
   10b78:	add	r2, r1, r0
   10b7c:	mov	r6, #1
   10b80:	ldr	r3, [pc, #712]	; 10e50 <readstat_por_parse_double+0x468>
   10b84:	add	r3, pc, r3
   10b88:	b	10ba4 <readstat_por_parse_double+0x1bc>
   10b8c:	sub	r0, r3, r5
   10b90:	asr	r0, r0, #1
   10b94:	mov	r6, #1
   10b98:	ldr	r3, [pc, #672]	; 10e40 <readstat_por_parse_double+0x458>
   10b9c:	add	r3, pc, r3
   10ba0:	add	r2, r0, r2
   10ba4:	ldr	r0, [pc, #664]	; 10e44 <readstat_por_parse_double+0x45c>
   10ba8:	add	r0, pc, r0
   10bac:	ldrb	r0, [r0, r2]
   10bb0:	ldr	r1, [pc, #656]	; 10e48 <readstat_por_parse_double+0x460>
   10bb4:	add	r1, pc, r1
   10bb8:	ldrb	r8, [r1, r2]
   10bbc:	cmp	r0, #0
   10bc0:	beq	10cf0 <readstat_por_parse_double+0x308>
   10bc4:	ldrb	r2, [r3, r0]
   10bc8:	cmp	r2, #0
   10bcc:	beq	10cf0 <readstat_por_parse_double+0x308>
   10bd0:	add	r0, r3, r0
   10bd4:	add	r3, r0, #1
   10bd8:	b	10bec <readstat_por_parse_double+0x204>
   10bdc:	vmov.i32	d19, #0	; 0x00000000
   10be0:	subs	r2, r2, #1
   10be4:	add	r3, r3, #1
   10be8:	beq	10cf0 <readstat_por_parse_double+0x308>
   10bec:	ldrb	r0, [r3]
   10bf0:	cmp	r0, #10
   10bf4:	bhi	10be0 <readstat_por_parse_double+0x1f8>
   10bf8:	add	r1, pc, #4
   10bfc:	ldr	r0, [r1, r0, lsl #2]
   10c00:	add	pc, r1, r0
   10c04:	.word	0x00000034
   10c08:	.word	0x00000050
   10c0c:	.word	0xffffffd8
   10c10:	.word	0x0000006c
   10c14:	.word	0x0000002c
   10c18:	.word	0x00000074
   10c1c:	.word	0x0000007c
   10c20:	.word	0x00000088
   10c24:	.word	0x0000002c
   10c28:	.word	0x00000090
   10c2c:	.word	0x0000010c
   10c30:	mov	ip, #1
   10c34:	b	10be0 <readstat_por_parse_double+0x1f8>
   10c38:	ldrb	r0, [r9]
   10c3c:	sub	r1, r0, #48	; 0x30
   10c40:	uxtb	r4, r1
   10c44:	cmp	r4, #9
   10c48:	bhi	10c9c <readstat_por_parse_double+0x2b4>
   10c4c:	vmov	s0, r1
   10c50:	b	10cb4 <readstat_por_parse_double+0x2cc>
   10c54:	ldrb	r0, [r9]
   10c58:	sub	r1, r0, #48	; 0x30
   10c5c:	uxtb	r4, r1
   10c60:	cmp	r4, #9
   10c64:	bhi	10cc4 <readstat_por_parse_double+0x2dc>
   10c68:	vmov	s0, r1
   10c6c:	b	10cdc <readstat_por_parse_double+0x2f4>
   10c70:	vmov.i32	d9, #0	; 0x00000000
   10c74:	b	10be0 <readstat_por_parse_double+0x1f8>
   10c78:	vorr	d10, d19, d19
   10c7c:	b	10be0 <readstat_por_parse_double+0x1f8>
   10c80:	mov	r0, #1
   10c84:	str	r0, [sp, #32]
   10c88:	b	10be0 <readstat_por_parse_double+0x1f8>
   10c8c:	vorr	d11, d19, d19
   10c90:	b	10be0 <readstat_por_parse_double+0x1f8>
   10c94:	vorr	d8, d17, d17
   10c98:	b	10be0 <readstat_por_parse_double+0x1f8>
   10c9c:	sub	r1, r0, #65	; 0x41
   10ca0:	uxtb	r1, r1
   10ca4:	cmp	r1, #19
   10ca8:	bhi	10be0 <readstat_por_parse_double+0x1f8>
   10cac:	sub	r0, r0, #55	; 0x37
   10cb0:	vmov	s0, r0
   10cb4:	vcvt.f64.s32	d20, s0
   10cb8:	vmla.f64	d20, d19, d16
   10cbc:	vmov.f64	d19, d20
   10cc0:	b	10be0 <readstat_por_parse_double+0x1f8>
   10cc4:	sub	r1, r0, #65	; 0x41
   10cc8:	uxtb	r1, r1
   10ccc:	cmp	r1, #19
   10cd0:	bhi	10ce8 <readstat_por_parse_double+0x300>
   10cd4:	sub	r0, r0, #55	; 0x37
   10cd8:	vmov	s0, r0
   10cdc:	vcvt.f64.s32	d20, s0
   10ce0:	vdiv.f64	d20, d20, d18
   10ce4:	vadd.f64	d9, d9, d20
   10ce8:	vmul.f64	d18, d18, d16
   10cec:	b	10be0 <readstat_por_parse_double+0x1f8>
   10cf0:	mov	sl, #0
   10cf4:	cmp	r8, #0
   10cf8:	beq	10e14 <readstat_por_parse_double+0x42c>
   10cfc:	add	r9, r9, #1
   10d00:	ldr	r0, [sp, #28]
   10d04:	cmp	r9, r0
   10d08:	bne	10a5c <readstat_por_parse_double+0x74>
   10d0c:	b	10d40 <readstat_por_parse_double+0x358>
   10d10:	add	r9, r9, #1
   10d14:	mov	sl, #1
   10d18:	b	10d40 <readstat_por_parse_double+0x358>
   10d1c:	vmov.i32	d9, #0	; 0x00000000
   10d20:	mov	ip, #0
   10d24:	mov	r8, #1
   10d28:	vmov.i32	d10, #0	; 0x00000000
   10d2c:	vmov.i32	d11, #0	; 0x00000000
   10d30:	mov	r0, #0
   10d34:	str	r0, [sp, #32]
   10d38:	mov	sl, #0
   10d3c:	vmov.i32	d8, #0	; 0x00000000
   10d40:	mov	r4, ip
   10d44:	vorr	d0, d8, d8
   10d48:	bl	4db8 <__isnan@plt>
   10d4c:	cmp	r0, #0
   10d50:	beq	10d74 <readstat_por_parse_double+0x38c>
   10d54:	cmp	sl, #0
   10d58:	beq	10db4 <readstat_por_parse_double+0x3cc>
   10d5c:	ldr	r0, [sp, #20]
   10d60:	cmp	r0, #0
   10d64:	vstrne	d8, [r0]
   10d68:	ldr	r0, [sp, #24]
   10d6c:	sub	r7, r9, r0
   10d70:	b	10e00 <readstat_por_parse_double+0x418>
   10d74:	vneg.f64	d16, d11
   10d78:	vadd.f64	d8, d9, d10
   10d7c:	ldr	r0, [sp, #32]
   10d80:	cmp	r0, #0
   10d84:	vseleq.f64	d1, d11, d16
   10d88:	vcmp.f64	d1, #0.0
   10d8c:	vmrs	APSR_nzcv, fpscr
   10d90:	beq	10da0 <readstat_por_parse_double+0x3b8>
   10d94:	vmov.f64	d0, #62	; 0x41f00000  30.0
   10d98:	bl	49f8 <pow@plt>
   10d9c:	vmul.f64	d8, d8, d0
   10da0:	vneg.f64	d16, d8
   10da4:	cmp	r4, #0
   10da8:	vseleq.f64	d8, d8, d16
   10dac:	cmp	sl, #0
   10db0:	bne	10d5c <readstat_por_parse_double+0x374>
   10db4:	mvn	r7, #0
   10db8:	ldr	r6, [sp, #16]
   10dbc:	cmp	r6, #0
   10dc0:	beq	10e00 <readstat_por_parse_double+0x418>
   10dc4:	ldr	r4, [fp, #8]
   10dc8:	ldr	r0, [sp, #12]
   10dcc:	str	r0, [sp]
   10dd0:	ldr	r0, [sp, #24]
   10dd4:	stmib	sp, {r0, r8}
   10dd8:	sub	r3, r9, r0
   10ddc:	add	r5, sp, #36	; 0x24
   10de0:	ldr	r2, [pc, #100]	; 10e4c <readstat_por_parse_double+0x464>
   10de4:	add	r2, pc, r2
   10de8:	mov	r0, r5
   10dec:	mov	r1, #1024	; 0x400
   10df0:	bl	4d04 <snprintf@plt>
   10df4:	mov	r0, r5
   10df8:	mov	r1, r4
   10dfc:	blx	r6
   10e00:	mov	r0, r7
   10e04:	sub	sp, fp, #64	; 0x40
   10e08:	vpop	{d8-d11}
   10e0c:	add	sp, sp, #4
   10e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e14:	mov	r8, #0
   10e18:	b	10d40 <readstat_por_parse_double+0x358>
   10e1c:	nop	{0}
   10e20:	.word	0x00000000
   10e24:	.word	0x7ff80000
   10e28:	.word	0x00015660
   10e2c:	.word	0x00015647
   10e30:	.word	0x00015603
   10e34:	.word	0x00015635
   10e38:	.word	0x00015643
   10e3c:	.word	0x000155ca
   10e40:	.word	0x000155ab
   10e44:	.word	0x0001556f
   10e48:	.word	0x00015533
   10e4c:	.word	0x00015384
   10e50:	.word	0x000155c3
   10e54:	.word	0x00000000

00010e58 <read_version_and_timestamp>:
   10e58:	push	{r4, r5, r6, sl, fp, lr}
   10e5c:	add	fp, sp, #16
   10e60:	sub	sp, sp, #312	; 0x138
   10e64:	mov	r4, r0
   10e68:	vmov.i32	q8, #0	; 0x00000000
   10e6c:	add	r6, sp, #8
   10e70:	add	r0, r6, #28
   10e74:	vst1.32	{d16-d17}, [r0]
   10e78:	add	r5, r6, #16
   10e7c:	vst1.64	{d16-d17}, [r5]
   10e80:	mov	r0, #32
   10e84:	mov	r1, r6
   10e88:	vst1.64	{d16-d17}, [r1], r0
   10e8c:	mvn	r0, #0
   10e90:	str	r0, [r1]
   10e94:	add	r1, sp, #7
   10e98:	mov	r0, r4
   10e9c:	mov	r2, #1
   10ea0:	bl	10f8c <read_bytes>
   10ea4:	mov	r1, r0
   10ea8:	mov	r0, #2
   10eac:	cmp	r1, #1
   10eb0:	bne	10f7c <read_version_and_timestamp+0x124>
   10eb4:	add	r1, sp, #56	; 0x38
   10eb8:	mov	r0, r4
   10ebc:	mov	r2, #256	; 0x100
   10ec0:	bl	110a0 <read_string>
   10ec4:	cmp	r0, #0
   10ec8:	bne	10f7c <read_version_and_timestamp+0x124>
   10ecc:	add	r0, r6, #12
   10ed0:	str	r0, [sp]
   10ed4:	add	r2, r6, #20
   10ed8:	add	r0, sp, #56	; 0x38
   10edc:	ldr	r1, [pc, #160]	; 10f84 <read_version_and_timestamp+0x12c>
   10ee0:	add	r1, pc, r1
   10ee4:	mov	r3, r5
   10ee8:	bl	4d10 <__isoc99_sscanf@plt>
   10eec:	mov	r1, r0
   10ef0:	mov	r0, #29
   10ef4:	cmp	r1, #3
   10ef8:	bne	10f7c <read_version_and_timestamp+0x124>
   10efc:	add	r1, sp, #56	; 0x38
   10f00:	mov	r0, r4
   10f04:	mov	r2, #256	; 0x100
   10f08:	bl	110a0 <read_string>
   10f0c:	cmp	r0, #0
   10f10:	bne	10f7c <read_version_and_timestamp+0x124>
   10f14:	str	r6, [sp]
   10f18:	add	r2, r6, #8
   10f1c:	orr	r3, r6, #4
   10f20:	add	r0, sp, #56	; 0x38
   10f24:	ldr	r1, [pc, #92]	; 10f88 <read_version_and_timestamp+0x130>
   10f28:	add	r1, pc, r1
   10f2c:	bl	4d10 <__isoc99_sscanf@plt>
   10f30:	cmp	r0, #3
   10f34:	mov	r0, #29
   10f38:	bne	10f7c <read_version_and_timestamp+0x124>
   10f3c:	ldr	r0, [sp, #24]
   10f40:	ldr	r1, [sp, #28]
   10f44:	movw	r2, #1900	; 0x76c
   10f48:	sub	r1, r1, r2
   10f4c:	str	r1, [sp, #28]
   10f50:	sub	r0, r0, #1
   10f54:	str	r0, [sp, #24]
   10f58:	add	r0, sp, #8
   10f5c:	bl	48cc <mktime@plt>
   10f60:	ldrb	r1, [sp, #7]
   10f64:	add	r1, r4, r1, lsl #1
   10f68:	ldrh	r1, [r1, #94]	; 0x5e
   10f6c:	sub	r1, r1, #65	; 0x41
   10f70:	str	r0, [r4, #56]	; 0x38
   10f74:	str	r1, [r4, #60]	; 0x3c
   10f78:	mov	r0, #0
   10f7c:	sub	sp, fp, #16
   10f80:	pop	{r4, r5, r6, sl, fp, pc}
   10f84:	.word	0x000152b9
   10f88:	.word	0x0001527e

00010f8c <read_bytes>:
   10f8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f90:	add	fp, sp, #28
   10f94:	sub	sp, sp, #4
   10f98:	mov	r9, r1
   10f9c:	cmp	r2, #1
   10fa0:	mov	r7, r1
   10fa4:	blt	11088 <read_bytes+0xfc>
   10fa8:	mov	r5, r0
   10fac:	add	r6, r9, r2
   10fb0:	ldr	r4, [r0, #44]	; 0x2c
   10fb4:	add	r8, sp, #3
   10fb8:	mov	sl, #0
   10fbc:	mov	r7, r9
   10fc0:	b	10fe0 <read_bytes+0x54>
   10fc4:	ldrb	r0, [r5, #48]	; 0x30
   10fc8:	strb	r0, [r7], #1
   10fcc:	ldr	r0, [r5, #52]	; 0x34
   10fd0:	sub	r0, r0, #1
   10fd4:	str	r0, [r5, #52]	; 0x34
   10fd8:	cmp	r7, r6
   10fdc:	bcs	11088 <read_bytes+0xfc>
   10fe0:	ldr	r0, [r5, #52]	; 0x34
   10fe4:	cmp	r0, #0
   10fe8:	bne	10fc4 <read_bytes+0x38>
   10fec:	ldr	r3, [r4, #12]
   10ff0:	ldr	r2, [r4, #20]
   10ff4:	mov	r0, r8
   10ff8:	mov	r1, #1
   10ffc:	blx	r3
   11000:	cmn	r0, #1
   11004:	beq	1108c <read_bytes+0x100>
   11008:	cmp	r0, #0
   1100c:	beq	11088 <read_bytes+0xfc>
   11010:	ldrb	r0, [sp, #3]
   11014:	cmp	r0, #10
   11018:	beq	11054 <read_bytes+0xc8>
   1101c:	cmp	r0, #13
   11020:	bne	11064 <read_bytes+0xd8>
   11024:	ldr	r3, [r4, #12]
   11028:	ldr	r2, [r4, #20]
   1102c:	mov	r0, r8
   11030:	mov	r1, #1
   11034:	blx	r3
   11038:	add	r1, r0, #1
   1103c:	mvn	r0, #0
   11040:	cmp	r1, #2
   11044:	bcc	1108c <read_bytes+0x100>
   11048:	ldrb	r1, [sp, #3]
   1104c:	cmp	r1, #10
   11050:	bne	1108c <read_bytes+0x100>
   11054:	ldr	r0, [r5, #40]	; 0x28
   11058:	str	sl, [r5, #40]	; 0x28
   1105c:	rsb	r0, r0, #80	; 0x50
   11060:	b	10fd4 <read_bytes+0x48>
   11064:	ldr	r1, [r5, #40]	; 0x28
   11068:	cmp	r1, #80	; 0x50
   1106c:	beq	11094 <read_bytes+0x108>
   11070:	strb	r0, [r7], #1
   11074:	ldr	r0, [r5, #40]	; 0x28
   11078:	add	r0, r0, #1
   1107c:	str	r0, [r5, #40]	; 0x28
   11080:	cmp	r7, r6
   11084:	bcc	10fe0 <read_bytes+0x54>
   11088:	sub	r0, r7, r9
   1108c:	sub	sp, fp, #28
   11090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11094:	mvn	r0, #0
   11098:	sub	sp, fp, #28
   1109c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000110a0 <read_string>:
   110a0:	push	{fp, lr}
   110a4:	mov	fp, sp
   110a8:	sub	sp, sp, #8
   110ac:	mov	r3, #0
   110b0:	str	r3, [sp, #4]
   110b4:	add	r3, sp, #4
   110b8:	bl	12228 <maybe_read_string>
   110bc:	ldr	r1, [sp, #4]
   110c0:	cmp	r1, #0
   110c4:	mov	r1, r0
   110c8:	movwne	r1, #5
   110cc:	cmp	r0, #0
   110d0:	movne	r1, r0
   110d4:	mov	r0, r1
   110d8:	mov	sp, fp
   110dc:	pop	{fp, pc}

000110e0 <handle_variables>:
   110e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110e4:	add	fp, sp, #28
   110e8:	sub	sp, sp, #260	; 0x104
   110ec:	mov	r8, r0
   110f0:	ldr	r0, [r0, #632]	; 0x278
   110f4:	cmp	r0, #1
   110f8:	blt	111b8 <handle_variables+0xd8>
   110fc:	mov	r7, #0
   11100:	mov	r9, sp
   11104:	mov	sl, #0
   11108:	mov	r6, #0
   1110c:	b	11130 <handle_variables+0x50>
   11110:	cmp	r0, #1
   11114:	beq	11224 <handle_variables+0x144>
   11118:	add	sl, sl, #1
   1111c:	add	r7, r7, #280	; 0x118
   11120:	add	r6, r6, #1
   11124:	ldr	r0, [r8, #632]	; 0x278
   11128:	cmp	r6, r0
   1112c:	bge	111b8 <handle_variables+0xd8>
   11130:	ldr	r0, [r8, #652]	; 0x28c
   11134:	add	r5, r0, r7
   11138:	str	r6, [r5, #8]
   1113c:	ldr	r2, [r8, #612]	; 0x264
   11140:	mov	r0, r5
   11144:	mov	r1, sl
   11148:	bl	4cf8 <spss_init_variable_for_info@plt>
   1114c:	ldr	r1, [r8, #648]	; 0x288
   11150:	str	r0, [r1, r6, lsl #2]
   11154:	ldr	r3, [r5, #4]
   11158:	mov	r0, r9
   1115c:	mov	r1, #256	; 0x100
   11160:	ldr	r2, [pc, #240]	; 11258 <handle_variables+0x178>
   11164:	add	r2, pc, r2
   11168:	bl	4d04 <snprintf@plt>
   1116c:	ldr	r4, [r8, #8]
   11170:	cmp	r4, #0
   11174:	beq	11118 <handle_variables+0x38>
   11178:	ldr	r0, [r5, #4]
   1117c:	mvn	r1, #0
   11180:	subs	r2, r0, r1
   11184:	movne	r2, r9
   11188:	ldr	r0, [r8, #648]	; 0x288
   1118c:	ldr	r1, [r0, r6, lsl #2]
   11190:	ldr	r3, [r8, #36]	; 0x24
   11194:	mov	r0, r6
   11198:	blx	r4
   1119c:	cmp	r0, #2
   111a0:	bne	11110 <handle_variables+0x30>
   111a4:	ldr	r0, [r8, #648]	; 0x288
   111a8:	ldr	r0, [r0, r6, lsl #2]
   111ac:	mov	r1, #1
   111b0:	str	r1, [r0, #2144]	; 0x860
   111b4:	b	1111c <handle_variables+0x3c>
   111b8:	ldr	r1, [r8, #12]
   111bc:	mov	r0, #0
   111c0:	cmp	r1, #0
   111c4:	beq	1121c <handle_variables+0x13c>
   111c8:	mov	r5, r8
   111cc:	ldrb	r1, [r5, #64]!	; 0x40
   111d0:	cmp	r1, #0
   111d4:	beq	1121c <handle_variables+0x13c>
   111d8:	ldr	r1, [r8, #632]	; 0x278
   111dc:	cmp	r1, #1
   111e0:	blt	1121c <handle_variables+0x13c>
   111e4:	ldr	r0, [r8, #652]	; 0x28c
   111e8:	add	r6, r0, #187	; 0xbb
   111ec:	mov	r7, #0
   111f0:	mov	r0, r6
   111f4:	mov	r1, r5
   111f8:	bl	4878 <strcmp@plt>
   111fc:	cmp	r0, #0
   11200:	beq	11230 <handle_variables+0x150>
   11204:	add	r6, r6, #280	; 0x118
   11208:	add	r7, r7, #1
   1120c:	ldr	r0, [r8, #632]	; 0x278
   11210:	cmp	r7, r0
   11214:	blt	111f0 <handle_variables+0x110>
   11218:	mov	r0, #0
   1121c:	sub	sp, fp, #28
   11220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11224:	mov	r0, #4
   11228:	sub	sp, fp, #28
   1122c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11230:	ldr	r0, [r8, #648]	; 0x288
   11234:	ldr	r0, [r0, r7, lsl #2]
   11238:	ldr	r2, [r8, #12]
   1123c:	ldr	r1, [r8, #36]	; 0x24
   11240:	blx	r2
   11244:	cmp	r0, #0
   11248:	movwne	r0, #1
   1124c:	lsl	r0, r0, #2
   11250:	sub	sp, fp, #28
   11254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11258:	.word	0x0001504f

0001125c <readstat_parse_por>:
   1125c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11260:	add	fp, sp, #24
   11264:	sub	sp, sp, #1760	; 0x6e0
   11268:	mov	r7, r2
   1126c:	mov	r5, r1
   11270:	mov	r6, r0
   11274:	ldr	r8, [r0, #32]
   11278:	add	r4, r0, #16
   1127c:	bl	4f2c <por_ctx_init@plt>
   11280:	mov	r9, r0
   11284:	mov	r0, #48	; 0x30
   11288:	mov	r1, r6
   1128c:	vld1.32	{d16-d17}, [r1], r0
   11290:	vld1.32	{d18-d19}, [r4]
   11294:	str	r8, [r9, #44]	; 0x2c
   11298:	str	r7, [r9, #36]	; 0x24
   1129c:	add	r0, r9, #16
   112a0:	vst1.32	{d18-d19}, [r0]
   112a4:	mov	r0, #640	; 0x280
   112a8:	mov	r2, r9
   112ac:	vst1.32	{d16-d17}, [r2], r0
   112b0:	ldr	r0, [r6, #44]	; 0x2c
   112b4:	str	r0, [r2]
   112b8:	ldr	r0, [r1]
   112bc:	cmp	r0, #1
   112c0:	strge	r0, [r9, #644]	; 0x284
   112c4:	ldr	r6, [r6, #40]	; 0x28
   112c8:	cmp	r6, #0
   112cc:	beq	11308 <readstat_parse_por+0xac>
   112d0:	ldr	r1, [pc, #980]	; 116ac <readstat_parse_por+0x450>
   112d4:	add	r1, pc, r1
   112d8:	mov	r0, r6
   112dc:	bl	4878 <strcmp@plt>
   112e0:	cmp	r0, #0
   112e4:	beq	112fc <readstat_parse_por+0xa0>
   112e8:	ldr	r1, [pc, #960]	; 116b0 <readstat_parse_por+0x454>
   112ec:	add	r1, pc, r1
   112f0:	mov	r0, r6
   112f4:	bl	4bb4 <iconv_open@plt>
   112f8:	str	r0, [r9, #612]	; 0x264
   112fc:	ldr	r0, [r9, #612]	; 0x264
   11300:	cmn	r0, #1
   11304:	beq	11424 <readstat_parse_por+0x1c8>
   11308:	ldr	r2, [r8]
   1130c:	ldr	r1, [r8, #20]
   11310:	mov	r0, r5
   11314:	blx	r2
   11318:	cmn	r0, #1
   1131c:	beq	1141c <readstat_parse_por+0x1c0>
   11320:	ldr	r3, [r8, #8]
   11324:	ldr	r2, [r8, #20]
   11328:	mov	r0, #0
   1132c:	mov	r1, #2
   11330:	blx	r3
   11334:	str	r0, [r9, #32]
   11338:	mov	r5, #15
   1133c:	cmn	r0, #1
   11340:	beq	11438 <readstat_parse_por+0x1dc>
   11344:	ldr	r3, [r8, #8]
   11348:	ldr	r2, [r8, #20]
   1134c:	mov	r0, #0
   11350:	mov	r1, #0
   11354:	blx	r3
   11358:	cmn	r0, #1
   1135c:	beq	11438 <readstat_parse_por+0x1dc>
   11360:	sub	r5, fp, #484	; 0x1e4
   11364:	mov	r0, r9
   11368:	mov	r1, r5
   1136c:	mov	r2, #200	; 0xc8
   11370:	bl	10f8c <read_bytes>
   11374:	cmp	r0, #200	; 0xc8
   11378:	bne	11434 <readstat_parse_por+0x1d8>
   1137c:	mov	r0, #0
   11380:	str	r0, [sp]
   11384:	add	r0, r9, #73	; 0x49
   11388:	add	r2, r5, #60	; 0x3c
   1138c:	mov	r1, #21
   11390:	mov	r3, #20
   11394:	bl	4cbc <readstat_convert@plt>
   11398:	mov	r5, r0
   1139c:	cmp	r0, #0
   113a0:	bne	11438 <readstat_parse_por+0x1dc>
   113a4:	sub	r5, fp, #284	; 0x11c
   113a8:	mov	r0, r9
   113ac:	mov	r1, r5
   113b0:	mov	r2, #256	; 0x100
   113b4:	bl	10f8c <read_bytes>
   113b8:	cmp	r0, #256	; 0x100
   113bc:	bne	11434 <readstat_parse_por+0x1d8>
   113c0:	ldrb	r0, [fp, #-158]	; 0xffffff62
   113c4:	strb	r0, [r9, #48]	; 0x30
   113c8:	mov	r0, #0
   113cc:	ldr	r1, [pc, #736]	; 116b4 <readstat_parse_por+0x458>
   113d0:	ldr	r1, [pc, r1]
   113d4:	ldr	r2, [pc, #732]	; 116b8 <readstat_parse_por+0x45c>
   113d8:	ldr	r2, [pc, r2]
   113dc:	b	11400 <readstat_parse_por+0x1a4>
   113e0:	sxtb	r3, r3
   113e4:	ldrb	r7, [r5, r0]
   113e8:	add	r7, r9, r7, lsl #1
   113ec:	strh	r3, [r7, #94]	; 0x5e
   113f0:	add	r1, r1, #2
   113f4:	add	r0, r0, #1
   113f8:	cmp	r0, #256	; 0x100
   113fc:	beq	11458 <readstat_parse_por+0x1fc>
   11400:	ldrb	r3, [r2, r0]
   11404:	cmp	r3, #0
   11408:	bne	113e0 <readstat_parse_por+0x184>
   1140c:	ldrh	r3, [r1]
   11410:	cmp	r3, #0
   11414:	bne	113e4 <readstat_parse_por+0x188>
   11418:	b	113f0 <readstat_parse_por+0x194>
   1141c:	mov	r5, #1
   11420:	b	11438 <readstat_parse_por+0x1dc>
   11424:	mov	r0, #0
   11428:	str	r0, [r9, #612]	; 0x264
   1142c:	mov	r5, #7
   11430:	b	11438 <readstat_parse_por+0x1dc>
   11434:	mov	r5, #2
   11438:	ldr	r1, [r8, #4]
   1143c:	ldr	r0, [r8, #20]
   11440:	blx	r1
   11444:	mov	r0, r9
   11448:	bl	4830 <por_ctx_free@plt>
   1144c:	mov	r0, r5
   11450:	sub	sp, fp, #24
   11454:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11458:	ldrb	r0, [fp, #-220]	; 0xffffff24
   1145c:	add	r0, r9, r0, lsl #1
   11460:	ldr	r1, [pc, #596]	; 116bc <readstat_parse_por+0x460>
   11464:	ldr	r1, [pc, r1]
   11468:	ldrh	r1, [r1, #128]	; 0x80
   1146c:	strh	r1, [r0, #94]	; 0x5e
   11470:	add	r1, sp, #268	; 0x10c
   11474:	mov	r0, r9
   11478:	mov	r2, #8
   1147c:	bl	10f8c <read_bytes>
   11480:	cmp	r0, #8
   11484:	mov	r5, #2
   11488:	bne	11438 <readstat_parse_por+0x1dc>
   1148c:	add	r0, r9, #94	; 0x5e
   11490:	str	r0, [sp]
   11494:	add	r6, sp, #268	; 0x10c
   11498:	add	r2, sp, #260	; 0x104
   1149c:	mov	r0, r6
   114a0:	mov	r1, #8
   114a4:	mov	r3, #8
   114a8:	bl	4ce0 <por_utf8_encode@plt>
   114ac:	cmn	r0, #1
   114b0:	beq	114d8 <readstat_parse_por+0x27c>
   114b4:	mov	r2, r0
   114b8:	ldr	r0, [pc, #516]	; 116c4 <readstat_parse_por+0x468>
   114bc:	add	r0, pc, r0
   114c0:	add	r1, sp, #260	; 0x104
   114c4:	bl	4f98 <strncmp@plt>
   114c8:	cmp	r0, #0
   114cc:	beq	1151c <readstat_parse_por+0x2c0>
   114d0:	mov	r5, #5
   114d4:	b	11438 <readstat_parse_por+0x1dc>
   114d8:	ldr	r0, [r9, #24]
   114dc:	mov	r5, #16
   114e0:	cmp	r0, #0
   114e4:	beq	11438 <readstat_parse_por+0x1dc>
   114e8:	str	r6, [sp]
   114ec:	add	r6, sp, #276	; 0x114
   114f0:	ldr	r2, [pc, #456]	; 116c0 <readstat_parse_por+0x464>
   114f4:	add	r2, pc, r2
   114f8:	mov	r0, r6
   114fc:	mov	r1, #1024	; 0x400
   11500:	mov	r3, #8
   11504:	bl	4d04 <snprintf@plt>
   11508:	ldr	r2, [r9, #24]
   1150c:	ldr	r1, [r9, #36]	; 0x24
   11510:	mov	r0, r6
   11514:	blx	r2
   11518:	b	11438 <readstat_parse_por+0x1dc>
   1151c:	mvn	r0, #0
   11520:	str	r0, [r9, #636]	; 0x27c
   11524:	mov	r0, r9
   11528:	bl	4a7c <read_version_and_timestamp@plt>
   1152c:	mov	r5, r0
   11530:	cmp	r0, #0
   11534:	bne	11438 <readstat_parse_por+0x1dc>
   11538:	add	r6, sp, #4
   1153c:	b	1155c <readstat_parse_por+0x300>
   11540:	mov	r0, r9
   11544:	mov	r1, r6
   11548:	mov	r2, #256	; 0x100
   1154c:	bl	110a0 <read_string>
   11550:	mov	r5, r0
   11554:	cmp	r0, #0
   11558:	bne	11438 <readstat_parse_por+0x1dc>
   1155c:	mov	r0, r9
   11560:	bl	116c8 <read_tag>
   11564:	sub	r0, r0, #49	; 0x31
   11568:	cmp	r0, #21
   1156c:	bhi	114d0 <readstat_parse_por+0x274>
   11570:	add	r1, pc, #8
   11574:	ldr	r0, [r1, r0, lsl #2]
   11578:	mov	r5, #5
   1157c:	add	pc, r1, r0
   11580:	.word	0xffffffc0
   11584:	.word	0xffffffc0
   11588:	.word	0xffffffc0
   1158c:	.word	0x00000058
   11590:	.word	0x00000064
   11594:	.word	0x00000070
   11598:	.word	0x0000007c
   1159c:	.word	0x00000088
   115a0:	.word	0x00000094
   115a4:	.word	0xfffffeb8
   115a8:	.word	0xfffffeb8
   115ac:	.word	0xfffffeb8
   115b0:	.word	0xfffffeb8
   115b4:	.word	0xfffffeb8
   115b8:	.word	0xfffffeb8
   115bc:	.word	0xfffffeb8
   115c0:	.word	0x000000a0
   115c4:	.word	0x000000ac
   115c8:	.word	0x000000b8
   115cc:	.word	0x000000c4
   115d0:	.word	0x000000d0
   115d4:	.word	0x000000dc
   115d8:	mov	r0, r9
   115dc:	bl	11708 <read_variable_count_record>
   115e0:	b	11550 <readstat_parse_por+0x2f4>
   115e4:	mov	r0, r9
   115e8:	bl	11824 <read_precision_record>
   115ec:	b	11550 <readstat_parse_por+0x2f4>
   115f0:	mov	r0, r9
   115f4:	bl	1186c <read_case_weight_record>
   115f8:	b	11550 <readstat_parse_por+0x2f4>
   115fc:	mov	r0, r9
   11600:	bl	11878 <read_variable_record>
   11604:	b	11550 <readstat_parse_por+0x2f4>
   11608:	mov	r0, r9
   1160c:	bl	119b4 <read_missing_value_record>
   11610:	b	11550 <readstat_parse_por+0x2f4>
   11614:	mov	r0, r9
   11618:	bl	11b14 <read_missing_value_lo_range_record>
   1161c:	b	11550 <readstat_parse_por+0x2f4>
   11620:	mov	r0, r9
   11624:	bl	11ba0 <read_missing_value_hi_range_record>
   11628:	b	11550 <readstat_parse_por+0x2f4>
   1162c:	mov	r0, r9
   11630:	bl	11a58 <read_missing_value_range_record>
   11634:	b	11550 <readstat_parse_por+0x2f4>
   11638:	mov	r0, r9
   1163c:	bl	11c60 <read_variable_label_record>
   11640:	b	11550 <readstat_parse_por+0x2f4>
   11644:	mov	r0, r9
   11648:	bl	11d0c <read_value_label_record>
   1164c:	b	11550 <readstat_parse_por+0x2f4>
   11650:	mov	r0, r9
   11654:	bl	11ee0 <read_document_record>
   11658:	b	11550 <readstat_parse_por+0x2f4>
   1165c:	ldr	r0, [r9, #632]	; 0x278
   11660:	ldr	r1, [r9, #636]	; 0x27c
   11664:	sub	r0, r0, #1
   11668:	mov	r5, #8
   1166c:	cmp	r1, r0
   11670:	bne	11438 <readstat_parse_por+0x1dc>
   11674:	mov	r0, r9
   11678:	bl	4fd4 <handle_variables@plt>
   1167c:	mov	r5, r0
   11680:	cmp	r0, #0
   11684:	bne	11438 <readstat_parse_por+0x1dc>
   11688:	ldr	r0, [r9, #16]
   1168c:	cmp	r0, #0
   11690:	beq	116a4 <readstat_parse_por+0x448>
   11694:	mov	r0, r9
   11698:	bl	11f9c <read_por_file_data>
   1169c:	mov	r5, r0
   116a0:	b	11438 <readstat_parse_por+0x1dc>
   116a4:	mov	r5, #0
   116a8:	b	11438 <readstat_parse_por+0x1dc>
   116ac:	.word	0x00014772
   116b0:	.word	0x0001475a
   116b4:	.word	0x00033f2c
   116b8:	.word	0x00033f30
   116bc:	.word	0x00033e98
   116c0:	.word	0x00014cc8
   116c4:	.word	0x00014d24

000116c8 <read_tag>:
   116c8:	push	{r4, sl, fp, lr}
   116cc:	add	fp, sp, #8
   116d0:	sub	sp, sp, #8
   116d4:	mov	r4, r0
   116d8:	add	r1, sp, #7
   116dc:	mov	r2, #1
   116e0:	bl	10f8c <read_bytes>
   116e4:	mov	r1, r0
   116e8:	movw	r0, #65535	; 0xffff
   116ec:	cmp	r1, #1
   116f0:	bne	11700 <read_tag+0x38>
   116f4:	ldrb	r0, [sp, #7]
   116f8:	add	r0, r4, r0, lsl #1
   116fc:	ldrh	r0, [r0, #94]	; 0x5e
   11700:	sub	sp, fp, #8
   11704:	pop	{r4, sl, fp, pc}

00011708 <read_variable_count_record>:
   11708:	push	{r4, r6, r7, sl, fp, lr}
   1170c:	add	fp, sp, #16
   11710:	sub	sp, sp, #64	; 0x40
   11714:	mov	r4, r0
   11718:	ldr	r1, [r0, #632]	; 0x278
   1171c:	mov	r0, #5
   11720:	cmp	r1, #0
   11724:	bne	11780 <read_variable_count_record+0x78>
   11728:	movw	r1, #16960	; 0x4240
   1172c:	movt	r1, #15
   11730:	sub	r2, fp, #20
   11734:	mov	r0, r4
   11738:	bl	12608 <read_integer_in_range>
   1173c:	cmp	r0, #0
   11740:	bne	11780 <read_variable_count_record+0x78>
   11744:	ldr	r0, [fp, #-20]	; 0xffffffec
   11748:	str	r0, [r4, #632]	; 0x278
   1174c:	mov	r1, #4
   11750:	bl	4a28 <readstat_calloc@plt>
   11754:	str	r0, [r4, #648]	; 0x288
   11758:	ldr	r0, [r4, #632]	; 0x278
   1175c:	mov	r1, #280	; 0x118
   11760:	bl	4a28 <readstat_calloc@plt>
   11764:	mov	r1, r0
   11768:	str	r0, [r4, #652]	; 0x28c
   1176c:	mov	r0, #3
   11770:	cmp	r1, #0
   11774:	ldrne	r1, [r4, #648]	; 0x288
   11778:	cmpne	r1, #0
   1177c:	bne	11788 <read_variable_count_record+0x80>
   11780:	sub	sp, fp, #16
   11784:	pop	{r4, r6, r7, sl, fp, pc}
   11788:	ldr	r2, [r4]
   1178c:	cmp	r2, #0
   11790:	beq	11818 <read_variable_count_record+0x110>
   11794:	mov	r0, sp
   11798:	add	r1, r0, #8
   1179c:	add	r0, r0, #24
   117a0:	mvn	r3, #0
   117a4:	str	r3, [sp, #4]
   117a8:	str	r3, [sp]
   117ac:	ldr	r6, [r4, #632]	; 0x278
   117b0:	asr	r7, r6, #31
   117b4:	strd	r6, [r1]
   117b8:	ldr	r1, [r4, #56]	; 0x38
   117bc:	ldr	r6, [r4, #60]	; 0x3c
   117c0:	str	r1, [sp, #20]
   117c4:	str	r1, [sp, #16]
   117c8:	asr	r7, r6, #31
   117cc:	strd	r6, [r0]
   117d0:	mov	r0, #0
   117d4:	str	r0, [sp, #48]	; 0x30
   117d8:	add	r1, r4, #73	; 0x49
   117dc:	str	r1, [sp, #44]	; 0x2c
   117e0:	str	r0, [sp, #40]	; 0x28
   117e4:	str	r0, [sp, #36]	; 0x24
   117e8:	str	r0, [sp, #32]
   117ec:	ldrb	r0, [sp, #52]	; 0x34
   117f0:	and	r0, r0, #254	; 0xfe
   117f4:	strb	r0, [sp, #52]	; 0x34
   117f8:	ldr	r1, [r4, #36]	; 0x24
   117fc:	mov	r0, sp
   11800:	blx	r2
   11804:	cmp	r0, #0
   11808:	movwne	r0, #1
   1180c:	lsl	r0, r0, #2
   11810:	sub	sp, fp, #16
   11814:	pop	{r4, r6, r7, sl, fp, pc}
   11818:	mov	r0, #0
   1181c:	sub	sp, fp, #16
   11820:	pop	{r4, r6, r7, sl, fp, pc}

00011824 <read_precision_record>:
   11824:	push	{r4, sl, fp, lr}
   11828:	add	fp, sp, #8
   1182c:	sub	sp, sp, #8
   11830:	mov	r4, r0
   11834:	mov	r0, #0
   11838:	str	r0, [sp, #4]
   1183c:	add	r2, sp, #4
   11840:	mov	r0, r4
   11844:	mov	r1, #100	; 0x64
   11848:	bl	12608 <read_integer_in_range>
   1184c:	cmp	r0, #0
   11850:	beq	1185c <read_precision_record+0x38>
   11854:	sub	sp, fp, #8
   11858:	pop	{r4, sl, fp, pc}
   1185c:	ldr	r1, [sp, #4]
   11860:	str	r1, [r4, #608]	; 0x260
   11864:	sub	sp, fp, #8
   11868:	pop	{r4, sl, fp, pc}

0001186c <read_case_weight_record>:
   1186c:	add	r1, r0, #64	; 0x40
   11870:	mov	r2, #9
   11874:	b	110a0 <read_string>

00011878 <read_variable_record>:
   11878:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1187c:	add	fp, sp, #24
   11880:	sub	sp, sp, #16
   11884:	mov	r4, r0
   11888:	ldr	r2, [r0, #632]	; 0x278
   1188c:	ldr	r0, [r0, #636]	; 0x27c
   11890:	add	r1, r0, #1
   11894:	str	r1, [r4, #636]	; 0x27c
   11898:	mov	r0, #5
   1189c:	cmp	r1, r2
   118a0:	beq	1191c <read_variable_record+0xa4>
   118a4:	ldr	r0, [r4, #652]	; 0x28c
   118a8:	mov	r2, #280	; 0x118
   118ac:	mla	r5, r1, r2, r0
   118b0:	add	r0, r5, #36	; 0x24
   118b4:	str	r0, [sp, #8]
   118b8:	add	r0, r5, #24
   118bc:	str	r0, [sp, #4]
   118c0:	mvn	r0, #0
   118c4:	str	r0, [r5, #4]
   118c8:	movw	r1, #16960	; 0x4240
   118cc:	movt	r1, #15
   118d0:	add	r2, sp, #12
   118d4:	mov	r0, r4
   118d8:	bl	12608 <read_integer_in_range>
   118dc:	cmp	r0, #0
   118e0:	bne	1191c <read_variable_record+0xa4>
   118e4:	ldr	r0, [sp, #12]
   118e8:	str	r0, [r5, #16]
   118ec:	mov	r7, #0
   118f0:	cmp	r0, #0
   118f4:	mov	r0, #0
   118f8:	movweq	r0, #5
   118fc:	str	r0, [r5]
   11900:	add	r6, r5, #187	; 0xbb
   11904:	mov	r0, r4
   11908:	mov	r1, r6
   1190c:	mov	r2, #9
   11910:	bl	110a0 <read_string>
   11914:	cmp	r0, #0
   11918:	beq	11924 <read_variable_record+0xac>
   1191c:	sub	sp, fp, #24
   11920:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11924:	ldr	r2, [r4, #656]	; 0x290
   11928:	mov	r0, r6
   1192c:	mov	r1, r5
   11930:	bl	4f8c <ck_str_hash_insert@plt>
   11934:	add	r8, sp, #4
   11938:	add	r5, sp, #12
   1193c:	ldr	r6, [r8, r7, lsl #2]
   11940:	mov	r0, r4
   11944:	mov	r1, #120	; 0x78
   11948:	mov	r2, r5
   1194c:	bl	12608 <read_integer_in_range>
   11950:	cmp	r0, #0
   11954:	bne	1191c <read_variable_record+0xa4>
   11958:	ldr	r0, [sp, #12]
   1195c:	str	r0, [r6]
   11960:	mov	r0, r4
   11964:	movw	r1, #20000	; 0x4e20
   11968:	mov	r2, r5
   1196c:	bl	12608 <read_integer_in_range>
   11970:	cmp	r0, #0
   11974:	bne	1191c <read_variable_record+0xa4>
   11978:	ldr	r0, [sp, #12]
   1197c:	str	r0, [r6, #4]
   11980:	mov	r0, r4
   11984:	mov	r1, #100	; 0x64
   11988:	mov	r2, r5
   1198c:	bl	12608 <read_integer_in_range>
   11990:	cmp	r0, #0
   11994:	bne	1191c <read_variable_record+0xa4>
   11998:	ldr	r0, [sp, #12]
   1199c:	str	r0, [r6, #8]
   119a0:	add	r7, r7, #1
   119a4:	mov	r0, #0
   119a8:	cmp	r7, #2
   119ac:	bne	1193c <read_variable_record+0xc4>
   119b0:	b	1191c <read_variable_record+0xa4>

000119b4 <read_missing_value_record>:
   119b4:	push	{r4, sl, fp, lr}
   119b8:	add	fp, sp, #8
   119bc:	ldr	r2, [r0, #636]	; 0x27c
   119c0:	mov	r1, #5
   119c4:	cmp	r2, #0
   119c8:	bmi	11a30 <read_missing_value_record+0x7c>
   119cc:	ldr	r3, [r0, #632]	; 0x278
   119d0:	cmp	r2, r3
   119d4:	bge	11a30 <read_missing_value_record+0x7c>
   119d8:	mov	ip, #280	; 0x118
   119dc:	mul	r1, r2, ip
   119e0:	ldr	r3, [r0, #652]	; 0x28c
   119e4:	mov	r4, r3
   119e8:	ldr	r1, [r4, r1]!
   119ec:	ldr	lr, [r4, #52]!	; 0x34
   119f0:	cmp	r1, #5
   119f4:	bne	11a0c <read_missing_value_record+0x58>
   119f8:	mla	r1, r2, ip, r3
   119fc:	add	r1, r1, lr, lsl #3
   11a00:	add	r1, r1, #64	; 0x40
   11a04:	bl	1269c <read_double>
   11a08:	b	11a24 <read_missing_value_record+0x70>
   11a0c:	mla	r1, r2, ip, r3
   11a10:	add	r2, lr, lr, lsl #5
   11a14:	add	r1, r1, r2
   11a18:	add	r1, r1, #88	; 0x58
   11a1c:	mov	r2, #33	; 0x21
   11a20:	bl	110a0 <read_string>
   11a24:	mov	r1, r0
   11a28:	cmp	r0, #0
   11a2c:	beq	11a38 <read_missing_value_record+0x84>
   11a30:	mov	r0, r1
   11a34:	pop	{r4, sl, fp, pc}
   11a38:	ldr	r0, [r4]
   11a3c:	cmp	r0, #2
   11a40:	mov	r1, #5
   11a44:	addle	r0, r0, #1
   11a48:	strle	r0, [r4]
   11a4c:	movle	r1, #0
   11a50:	mov	r0, r1
   11a54:	pop	{r4, sl, fp, pc}

00011a58 <read_missing_value_range_record>:
   11a58:	push	{r4, r5, r6, sl, fp, lr}
   11a5c:	add	fp, sp, #16
   11a60:	mov	r4, r0
   11a64:	ldr	r5, [r0, #636]	; 0x27c
   11a68:	mov	r0, #5
   11a6c:	cmp	r5, #0
   11a70:	bmi	11af4 <read_missing_value_range_record+0x9c>
   11a74:	ldr	r1, [r4, #632]	; 0x278
   11a78:	cmp	r5, r1
   11a7c:	beq	11af4 <read_missing_value_range_record+0x9c>
   11a80:	mov	r0, #280	; 0x118
   11a84:	mul	r1, r5, r0
   11a88:	ldr	r6, [r4, #652]	; 0x28c
   11a8c:	mov	r2, r6
   11a90:	ldr	r1, [r2, r1]!
   11a94:	mov	r3, #2
   11a98:	mov	ip, #1
   11a9c:	str	r3, [r2, #52]	; 0x34
   11aa0:	str	ip, [r2, #56]	; 0x38
   11aa4:	mla	r0, r5, r0, r6
   11aa8:	cmp	r1, #5
   11aac:	bne	11adc <read_missing_value_range_record+0x84>
   11ab0:	add	r1, r0, #64	; 0x40
   11ab4:	mov	r0, r4
   11ab8:	bl	1269c <read_double>
   11abc:	cmp	r0, #0
   11ac0:	popne	{r4, r5, r6, sl, fp, pc}
   11ac4:	mov	r0, #280	; 0x118
   11ac8:	mla	r0, r5, r0, r6
   11acc:	add	r1, r0, #72	; 0x48
   11ad0:	mov	r0, r4
   11ad4:	pop	{r4, r5, r6, sl, fp, lr}
   11ad8:	b	1269c <read_double>
   11adc:	add	r1, r0, #88	; 0x58
   11ae0:	mov	r0, r4
   11ae4:	mov	r2, #33	; 0x21
   11ae8:	bl	110a0 <read_string>
   11aec:	cmp	r0, #0
   11af0:	beq	11af8 <read_missing_value_range_record+0xa0>
   11af4:	pop	{r4, r5, r6, sl, fp, pc}
   11af8:	mov	r0, #280	; 0x118
   11afc:	mla	r0, r5, r0, r6
   11b00:	add	r1, r0, #121	; 0x79
   11b04:	mov	r0, r4
   11b08:	mov	r2, #33	; 0x21
   11b0c:	pop	{r4, r5, r6, sl, fp, lr}
   11b10:	b	110a0 <read_string>

00011b14 <read_missing_value_lo_range_record>:
   11b14:	push	{r4, r5, fp, lr}
   11b18:	add	fp, sp, #8
   11b1c:	ldr	r1, [r0, #636]	; 0x27c
   11b20:	cmp	r1, #0
   11b24:	bmi	11b34 <read_missing_value_lo_range_record+0x20>
   11b28:	ldr	r2, [r0, #632]	; 0x278
   11b2c:	cmp	r1, r2
   11b30:	bne	11b3c <read_missing_value_lo_range_record+0x28>
   11b34:	mov	r0, #5
   11b38:	pop	{r4, r5, fp, pc}
   11b3c:	mov	ip, #280	; 0x118
   11b40:	mul	lr, r1, ip
   11b44:	ldr	r2, [r0, #652]	; 0x28c
   11b48:	mov	r3, r2
   11b4c:	ldr	lr, [r3, lr]!
   11b50:	mov	r4, #2
   11b54:	mov	r5, #1
   11b58:	str	r4, [r3, #52]	; 0x34
   11b5c:	str	r5, [r3, #56]	; 0x38
   11b60:	mla	r1, r1, ip, r2
   11b64:	cmp	lr, #5
   11b68:	bne	11b88 <read_missing_value_lo_range_record+0x74>
   11b6c:	movw	r3, #0
   11b70:	movt	r3, #65520	; 0xfff0
   11b74:	mov	r2, #0
   11b78:	strd	r2, [r1, #64]	; 0x40
   11b7c:	add	r1, r1, #72	; 0x48
   11b80:	pop	{r4, r5, fp, lr}
   11b84:	b	1269c <read_double>
   11b88:	mov	r2, #0
   11b8c:	strb	r2, [r1, #88]	; 0x58
   11b90:	add	r1, r1, #121	; 0x79
   11b94:	mov	r2, #33	; 0x21
   11b98:	pop	{r4, r5, fp, lr}
   11b9c:	b	110a0 <read_string>

00011ba0 <read_missing_value_hi_range_record>:
   11ba0:	push	{r4, r5, fp, lr}
   11ba4:	add	fp, sp, #8
   11ba8:	ldr	r4, [r0, #636]	; 0x27c
   11bac:	mov	r2, #5
   11bb0:	cmp	r4, #0
   11bb4:	bmi	11c40 <read_missing_value_hi_range_record+0xa0>
   11bb8:	ldr	r1, [r0, #632]	; 0x278
   11bbc:	cmp	r4, r1
   11bc0:	beq	11c40 <read_missing_value_hi_range_record+0xa0>
   11bc4:	mov	r1, #280	; 0x118
   11bc8:	mul	r2, r4, r1
   11bcc:	ldr	r5, [r0, #652]	; 0x28c
   11bd0:	mov	r3, r5
   11bd4:	ldr	r2, [r3, r2]!
   11bd8:	mov	ip, #2
   11bdc:	mov	lr, #1
   11be0:	str	ip, [r3, #52]	; 0x34
   11be4:	str	lr, [r3, #56]	; 0x38
   11be8:	mla	r1, r4, r1, r5
   11bec:	cmp	r2, #5
   11bf0:	bne	11c28 <read_missing_value_hi_range_record+0x88>
   11bf4:	add	r1, r1, #64	; 0x40
   11bf8:	bl	1269c <read_double>
   11bfc:	mov	r2, r0
   11c00:	cmp	r0, #0
   11c04:	bne	11c40 <read_missing_value_hi_range_record+0xa0>
   11c08:	mov	r0, #280	; 0x118
   11c0c:	mla	r0, r4, r0, r5
   11c10:	movw	r3, #0
   11c14:	movt	r3, #32752	; 0x7ff0
   11c18:	mov	r2, #0
   11c1c:	strd	r2, [r0, #72]	; 0x48
   11c20:	mov	r0, r2
   11c24:	pop	{r4, r5, fp, pc}
   11c28:	add	r1, r1, #88	; 0x58
   11c2c:	mov	r2, #33	; 0x21
   11c30:	bl	110a0 <read_string>
   11c34:	mov	r2, r0
   11c38:	cmp	r0, #0
   11c3c:	beq	11c48 <read_missing_value_hi_range_record+0xa8>
   11c40:	mov	r0, r2
   11c44:	pop	{r4, r5, fp, pc}
   11c48:	mov	r0, #280	; 0x118
   11c4c:	mla	r0, r4, r0, r5
   11c50:	mov	r2, #0
   11c54:	strb	r2, [r0, #121]	; 0x79
   11c58:	mov	r0, r2
   11c5c:	pop	{r4, r5, fp, pc}

00011c60 <read_variable_label_record>:
   11c60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11c64:	add	fp, sp, #24
   11c68:	sub	sp, sp, #264	; 0x108
   11c6c:	mov	r4, r0
   11c70:	ldr	r5, [r0, #636]	; 0x27c
   11c74:	mov	r0, #5
   11c78:	cmp	r5, #0
   11c7c:	bmi	11ca8 <read_variable_label_record+0x48>
   11c80:	ldr	r1, [r4, #632]	; 0x278
   11c84:	cmp	r5, r1
   11c88:	beq	11ca8 <read_variable_label_record+0x48>
   11c8c:	ldr	r6, [r4, #652]	; 0x28c
   11c90:	add	r1, sp, #8
   11c94:	mov	r0, r4
   11c98:	mov	r2, #256	; 0x100
   11c9c:	bl	110a0 <read_string>
   11ca0:	cmp	r0, #0
   11ca4:	beq	11cb0 <read_variable_label_record+0x50>
   11ca8:	sub	sp, fp, #24
   11cac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11cb0:	mov	r0, #280	; 0x118
   11cb4:	mla	r7, r5, r0, r6
   11cb8:	ldr	r5, [r7, #264]	; 0x108
   11cbc:	add	r6, sp, #8
   11cc0:	mov	r0, r6
   11cc4:	bl	4c8c <strlen@plt>
   11cc8:	mov	r8, #1
   11ccc:	orr	r1, r8, r0, lsl #2
   11cd0:	mov	r0, r5
   11cd4:	bl	4a64 <realloc@plt>
   11cd8:	mov	r5, r0
   11cdc:	str	r0, [r7, #264]	; 0x108
   11ce0:	mov	r0, r6
   11ce4:	bl	4c8c <strlen@plt>
   11ce8:	mov	r3, r0
   11cec:	ldr	r0, [r4, #612]	; 0x264
   11cf0:	str	r0, [sp]
   11cf4:	orr	r1, r8, r3, lsl #2
   11cf8:	mov	r0, r5
   11cfc:	mov	r2, r6
   11d00:	bl	4cbc <readstat_convert@plt>
   11d04:	sub	sp, fp, #24
   11d08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011d0c <read_value_label_record>:
   11d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d10:	add	fp, sp, #28
   11d14:	sub	sp, sp, #804	; 0x324
   11d18:	mov	r4, r0
   11d1c:	mov	r0, #0
   11d20:	str	r0, [fp, #-300]	; 0xfffffed4
   11d24:	str	r0, [fp, #-304]	; 0xfffffed0
   11d28:	ldr	r3, [r4, #624]	; 0x270
   11d2c:	add	r0, sp, #272	; 0x110
   11d30:	ldr	r2, [pc, #420]	; 11edc <read_value_label_record+0x1d0>
   11d34:	add	r2, pc, r2
   11d38:	mov	r1, #256	; 0x100
   11d3c:	bl	4d04 <snprintf@plt>
   11d40:	movw	r8, #16960	; 0x4240
   11d44:	movt	r8, #15
   11d48:	sub	r2, fp, #300	; 0x12c
   11d4c:	mov	r0, r4
   11d50:	mov	r1, r8
   11d54:	bl	12608 <read_integer_in_range>
   11d58:	cmp	r0, #0
   11d5c:	bne	11ed4 <read_value_label_record+0x1c8>
   11d60:	ldr	r0, [fp, #-300]	; 0xfffffed4
   11d64:	cmp	r0, #1
   11d68:	blt	11dc8 <read_value_label_record+0xbc>
   11d6c:	mov	r5, #0
   11d70:	mov	r7, #5
   11d74:	sub	r6, fp, #296	; 0x128
   11d78:	b	11d8c <read_value_label_record+0x80>
   11d7c:	add	r5, r5, #1
   11d80:	ldr	r0, [fp, #-300]	; 0xfffffed4
   11d84:	cmp	r5, r0
   11d88:	bge	11dcc <read_value_label_record+0xc0>
   11d8c:	mov	r0, r4
   11d90:	mov	r1, r6
   11d94:	mov	r2, #256	; 0x100
   11d98:	bl	110a0 <read_string>
   11d9c:	cmp	r0, #0
   11da0:	bne	11ed4 <read_value_label_record+0x1c8>
   11da4:	ldr	r1, [r4, #656]	; 0x290
   11da8:	mov	r0, r6
   11dac:	bl	4a34 <ck_str_hash_lookup@plt>
   11db0:	cmp	r0, #0
   11db4:	beq	11d7c <read_value_label_record+0x70>
   11db8:	ldr	r1, [r4, #624]	; 0x270
   11dbc:	str	r1, [r0, #4]
   11dc0:	ldr	r7, [r0]
   11dc4:	b	11d7c <read_value_label_record+0x70>
   11dc8:	mov	r7, #5
   11dcc:	sub	r2, fp, #304	; 0x130
   11dd0:	mov	r0, r4
   11dd4:	mov	r1, r8
   11dd8:	bl	12608 <read_integer_in_range>
   11ddc:	cmp	r0, #0
   11de0:	bne	11ed4 <read_value_label_record+0x1c8>
   11de4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   11de8:	cmp	r0, #1
   11dec:	blt	11ec4 <read_value_label_record+0x1b8>
   11df0:	mov	r5, #0
   11df4:	sub	sl, fp, #296	; 0x128
   11df8:	add	r6, sp, #16
   11dfc:	sub	r9, fp, #40	; 0x28
   11e00:	b	11e14 <read_value_label_record+0x108>
   11e04:	add	r5, r5, #1
   11e08:	ldr	r0, [fp, #-304]	; 0xfffffed0
   11e0c:	cmp	r5, r0
   11e10:	bge	11ec4 <read_value_label_record+0x1b8>
   11e14:	mov	r0, r4
   11e18:	cmp	r7, #0
   11e1c:	beq	11e54 <read_value_label_record+0x148>
   11e20:	mov	r1, r9
   11e24:	bl	1269c <read_double>
   11e28:	cmp	r0, #0
   11e2c:	bne	11ed4 <read_value_label_record+0x1c8>
   11e30:	mov	r0, r4
   11e34:	mov	r1, r6
   11e38:	mov	r2, #256	; 0x100
   11e3c:	bl	110a0 <read_string>
   11e40:	cmp	r0, #0
   11e44:	bne	11ed4 <read_value_label_record+0x1c8>
   11e48:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11e4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11e50:	b	11e88 <read_value_label_record+0x17c>
   11e54:	mov	r1, sl
   11e58:	mov	r2, #256	; 0x100
   11e5c:	bl	110a0 <read_string>
   11e60:	cmp	r0, #0
   11e64:	bne	11ed4 <read_value_label_record+0x1c8>
   11e68:	mov	r0, r4
   11e6c:	mov	r1, r6
   11e70:	mov	r2, #256	; 0x100
   11e74:	bl	110a0 <read_string>
   11e78:	mov	r3, #0
   11e7c:	cmp	r0, #0
   11e80:	mov	r2, sl
   11e84:	bne	11ed4 <read_value_label_record+0x1c8>
   11e88:	bfc	r8, #0, #10
   11e8c:	ldr	r1, [r4, #20]
   11e90:	cmp	r1, #0
   11e94:	beq	11e04 <read_value_label_record+0xf8>
   11e98:	ldr	r0, [r4, #36]	; 0x24
   11e9c:	stm	sp, {r7, r8}
   11ea0:	str	r6, [sp, #8]
   11ea4:	str	r0, [sp, #12]
   11ea8:	add	r0, sp, #272	; 0x110
   11eac:	blx	r1
   11eb0:	cmp	r0, #0
   11eb4:	beq	11e04 <read_value_label_record+0xf8>
   11eb8:	mov	r0, #4
   11ebc:	sub	sp, fp, #28
   11ec0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ec4:	ldr	r0, [r4, #624]	; 0x270
   11ec8:	add	r0, r0, #1
   11ecc:	str	r0, [r4, #624]	; 0x270
   11ed0:	mov	r0, #0
   11ed4:	sub	sp, fp, #28
   11ed8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11edc:	.word	0x0001447f

00011ee0 <read_document_record>:
   11ee0:	push	{r4, r5, r6, sl, fp, lr}
   11ee4:	add	fp, sp, #16
   11ee8:	sub	sp, sp, #264	; 0x108
   11eec:	mov	r4, r0
   11ef0:	mov	r0, #0
   11ef4:	str	r0, [sp, #4]
   11ef8:	movw	r1, #16960	; 0x4240
   11efc:	movt	r1, #15
   11f00:	add	r2, sp, #4
   11f04:	mov	r0, r4
   11f08:	bl	12608 <read_integer_in_range>
   11f0c:	cmp	r0, #0
   11f10:	beq	11f1c <read_document_record+0x3c>
   11f14:	sub	sp, fp, #16
   11f18:	pop	{r4, r5, r6, sl, fp, pc}
   11f1c:	ldr	r0, [sp, #4]
   11f20:	cmp	r0, #1
   11f24:	mov	r0, #0
   11f28:	blt	11f14 <read_document_record+0x34>
   11f2c:	mov	r5, #0
   11f30:	add	r6, sp, #8
   11f34:	b	11f48 <read_document_record+0x68>
   11f38:	add	r5, r5, #1
   11f3c:	ldr	r0, [sp, #4]
   11f40:	cmp	r5, r0
   11f44:	bge	11f90 <read_document_record+0xb0>
   11f48:	mov	r0, r4
   11f4c:	mov	r1, r6
   11f50:	mov	r2, #256	; 0x100
   11f54:	bl	110a0 <read_string>
   11f58:	cmp	r0, #0
   11f5c:	bne	11f14 <read_document_record+0x34>
   11f60:	ldr	r3, [r4, #4]
   11f64:	cmp	r3, #0
   11f68:	beq	11f38 <read_document_record+0x58>
   11f6c:	ldr	r2, [r4, #36]	; 0x24
   11f70:	mov	r0, r5
   11f74:	mov	r1, r6
   11f78:	blx	r3
   11f7c:	cmp	r0, #0
   11f80:	beq	11f38 <read_document_record+0x58>
   11f84:	mov	r0, #4
   11f88:	sub	sp, fp, #16
   11f8c:	pop	{r4, r5, r6, sl, fp, pc}
   11f90:	mov	r0, #0
   11f94:	sub	sp, fp, #16
   11f98:	pop	{r4, r5, r6, sl, fp, pc}

00011f9c <read_por_file_data>:
   11f9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fa0:	add	fp, sp, #28
   11fa4:	sub	sp, sp, #308	; 0x134
   11fa8:	sub	sp, sp, #2048	; 0x800
   11fac:	mov	r4, r0
   11fb0:	ldr	r0, [r0, #632]	; 0x278
   11fb4:	cmp	r0, #0
   11fb8:	beq	121a0 <read_por_file_data+0x204>
   11fbc:	add	r0, r4, #628	; 0x274
   11fc0:	str	r0, [sp, #12]
   11fc4:	add	r0, r4, #644	; 0x284
   11fc8:	str	r0, [sp, #20]
   11fcc:	add	r0, sp, #24
   11fd0:	add	r0, r0, #8
   11fd4:	str	r0, [sp, #16]
   11fd8:	mov	sl, #0
   11fdc:	str	sl, [sp, #40]	; 0x28
   11fe0:	ldr	r0, [r4, #632]	; 0x278
   11fe4:	cmp	r0, #1
   11fe8:	blt	12144 <read_por_file_data+0x1a8>
   11fec:	mov	r8, #0
   11ff0:	mov	r5, #0
   11ff4:	b	1200c <read_por_file_data+0x70>
   11ff8:	sub	r8, r8, #280	; 0x118
   11ffc:	add	r5, r5, #1
   12000:	ldr	r0, [r4, #632]	; 0x278
   12004:	cmp	r5, r0
   12008:	bge	12144 <read_por_file_data+0x1a8>
   1200c:	ldr	r6, [r4, #652]	; 0x28c
   12010:	str	sl, [sp, #28]
   12014:	str	sl, [sp, #24]
   12018:	ldr	r0, [r6, -r8]
   1201c:	strb	sl, [sp, #36]	; 0x24
   12020:	str	r0, [sp, #32]
   12024:	ldrb	r0, [sp, #37]	; 0x25
   12028:	and	r0, r0, #252	; 0xfc
   1202c:	strb	r0, [sp, #37]	; 0x25
   12030:	ldr	r0, [r6, -r8]
   12034:	cmp	r0, #5
   12038:	beq	120ac <read_por_file_data+0x110>
   1203c:	cmp	r0, #0
   12040:	bne	120ec <read_por_file_data+0x150>
   12044:	mov	r0, r4
   12048:	sub	r1, fp, #288	; 0x120
   1204c:	mov	r2, #256	; 0x100
   12050:	add	r3, sp, #40	; 0x28
   12054:	bl	12228 <maybe_read_string>
   12058:	cmp	r0, #0
   1205c:	bne	121a8 <read_por_file_data+0x20c>
   12060:	ldr	r0, [sp, #40]	; 0x28
   12064:	cmp	r0, #0
   12068:	bne	121f8 <read_por_file_data+0x25c>
   1206c:	sub	r6, fp, #288	; 0x120
   12070:	mov	r0, r6
   12074:	bl	4c8c <strlen@plt>
   12078:	mov	r3, r0
   1207c:	ldr	r0, [r4, #612]	; 0x264
   12080:	str	r0, [sp]
   12084:	add	lr, sp, #1024	; 0x400
   12088:	add	r7, lr, #47	; 0x2f
   1208c:	mov	r0, r7
   12090:	movw	r1, #1025	; 0x401
   12094:	mov	r2, r6
   12098:	bl	4cbc <readstat_convert@plt>
   1209c:	cmp	r0, #0
   120a0:	bne	12208 <read_por_file_data+0x26c>
   120a4:	str	r7, [sp, #24]
   120a8:	b	120ec <read_por_file_data+0x150>
   120ac:	mov	r0, r4
   120b0:	add	r1, sp, #24
   120b4:	add	r2, sp, #40	; 0x28
   120b8:	bl	123a4 <maybe_read_double>
   120bc:	cmp	r0, #0
   120c0:	bne	121a8 <read_por_file_data+0x20c>
   120c4:	ldr	r0, [sp, #40]	; 0x28
   120c8:	cmp	r0, #0
   120cc:	bne	121f8 <read_por_file_data+0x25c>
   120d0:	vldr	d0, [sp, #24]
   120d4:	bl	4db8 <__isnan@plt>
   120d8:	and	r0, r0, #1
   120dc:	ldrb	r1, [sp, #37]	; 0x25
   120e0:	and	r1, r1, #254	; 0xfe
   120e4:	orr	r0, r1, r0
   120e8:	strb	r0, [sp, #37]	; 0x25
   120ec:	ldr	r6, [r4, #16]
   120f0:	cmp	r6, #0
   120f4:	beq	11ff8 <read_por_file_data+0x5c>
   120f8:	ldr	r0, [r4, #648]	; 0x288
   120fc:	ldr	r1, [r0, r5, lsl #2]
   12100:	ldr	r0, [r1, #2144]	; 0x860
   12104:	cmp	r0, #0
   12108:	bne	11ff8 <read_por_file_data+0x5c>
   1210c:	ldr	r0, [r4, #644]	; 0x284
   12110:	cmp	r0, #0
   12114:	bne	11ff8 <read_por_file_data+0x5c>
   12118:	ldr	r0, [r4, #628]	; 0x274
   1211c:	ldr	r2, [sp, #16]
   12120:	ldm	r2, {r7, r9}
   12124:	ldr	ip, [r4, #36]	; 0x24
   12128:	ldr	r2, [sp, #24]
   1212c:	ldr	r3, [sp, #28]
   12130:	stm	sp, {r7, r9, ip}
   12134:	blx	r6
   12138:	cmp	r0, #0
   1213c:	beq	11ff8 <read_por_file_data+0x5c>
   12140:	b	12210 <read_por_file_data+0x274>
   12144:	ldr	r0, [sp, #20]
   12148:	ldr	r0, [r0]
   1214c:	cmp	r0, #0
   12150:	beq	12160 <read_por_file_data+0x1c4>
   12154:	sub	r0, r0, #1
   12158:	ldr	r1, [sp, #20]
   1215c:	b	1216c <read_por_file_data+0x1d0>
   12160:	ldr	r1, [sp, #12]
   12164:	ldr	r0, [r1]
   12168:	add	r0, r0, #1
   1216c:	str	r0, [r1]
   12170:	mov	r0, r4
   12174:	bl	126e4 <por_update_progress>
   12178:	mov	r9, r0
   1217c:	cmp	r0, #0
   12180:	bne	12214 <read_por_file_data+0x278>
   12184:	ldr	r0, [r4, #640]	; 0x280
   12188:	cmp	r0, #1
   1218c:	blt	11fdc <read_por_file_data+0x40>
   12190:	ldr	r1, [r4, #628]	; 0x274
   12194:	cmp	r1, r0
   12198:	bne	11fdc <read_por_file_data+0x40>
   1219c:	b	12214 <read_por_file_data+0x278>
   121a0:	mov	r9, #0
   121a4:	b	12214 <read_por_file_data+0x278>
   121a8:	mov	r9, r0
   121ac:	ldr	r0, [r4, #24]
   121b0:	cmp	r0, #0
   121b4:	beq	12214 <read_por_file_data+0x278>
   121b8:	ldr	r0, [r4, #628]	; 0x274
   121bc:	add	r0, r0, #1
   121c0:	str	r0, [sp]
   121c4:	sub	r0, r6, r8
   121c8:	add	r3, r0, #187	; 0xbb
   121cc:	add	r6, sp, #47	; 0x2f
   121d0:	ldr	r2, [pc, #72]	; 12220 <read_por_file_data+0x284>
   121d4:	add	r2, pc, r2
   121d8:	mov	r0, r6
   121dc:	mov	r1, #1024	; 0x400
   121e0:	bl	4d04 <snprintf@plt>
   121e4:	ldr	r2, [r4, #24]
   121e8:	ldr	r1, [r4, #36]	; 0x24
   121ec:	mov	r0, r6
   121f0:	blx	r2
   121f4:	b	12214 <read_por_file_data+0x278>
   121f8:	cmp	r5, #0
   121fc:	movwne	r5, #5
   12200:	mov	r9, r5
   12204:	b	12214 <read_por_file_data+0x278>
   12208:	mov	r9, r0
   1220c:	b	12214 <read_por_file_data+0x278>
   12210:	mov	r9, #4
   12214:	mov	r0, r9
   12218:	sub	sp, fp, #28
   1221c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12220:	.word	0x0001409b
   12224:	.word	0xe320f000

00012228 <maybe_read_string>:
   12228:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1222c:	add	fp, sp, #24
   12230:	vpush	{d8}
   12234:	sub	sp, sp, #24
   12238:	sub	sp, sp, #1024	; 0x400
   1223c:	mov	r5, r3
   12240:	mov	r6, r2
   12244:	mov	r8, r1
   12248:	mov	r4, r0
   1224c:	mov	r0, #0
   12250:	str	r0, [fp, #-52]	; 0xffffffcc
   12254:	sub	r1, fp, #48	; 0x30
   12258:	sub	r2, fp, #52	; 0x34
   1225c:	mov	r0, r4
   12260:	bl	123a4 <maybe_read_double>
   12264:	mov	r7, r0
   12268:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1226c:	orrs	r1, r0, r7
   12270:	beq	1228c <maybe_read_string+0x64>
   12274:	cmp	r5, #0
   12278:	strne	r0, [r5]
   1227c:	mov	r0, r7
   12280:	sub	sp, fp, #32
   12284:	vpop	{d8}
   12288:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1228c:	mov	r7, #5
   12290:	vldr	d8, [fp, #-48]	; 0xffffffd0
   12294:	vcmpe.f64	d8, #0.0
   12298:	vmrs	APSR_nzcv, fpscr
   1229c:	bmi	1227c <maybe_read_string+0x54>
   122a0:	vldr	d16, [pc, #240]	; 12398 <maybe_read_string+0x170>
   122a4:	vcmpe.f64	d8, d16
   122a8:	vmrs	APSR_nzcv, fpscr
   122ac:	bgt	1227c <maybe_read_string+0x54>
   122b0:	vmov.f64	d0, d8
   122b4:	bl	4db8 <__isnan@plt>
   122b8:	cmp	r0, #0
   122bc:	bne	1227c <maybe_read_string+0x54>
   122c0:	ldr	r0, [r4, #620]	; 0x26c
   122c4:	vcvt.u32.f64	s0, d8
   122c8:	vmov	r9, s0
   122cc:	cmp	r0, r9
   122d0:	bcs	122f4 <maybe_read_string+0xcc>
   122d4:	str	r9, [r4, #620]	; 0x26c
   122d8:	ldr	r0, [r4, #616]	; 0x268
   122dc:	mov	r1, r9
   122e0:	bl	4a64 <realloc@plt>
   122e4:	str	r0, [r4, #616]	; 0x268
   122e8:	ldr	r2, [r4, #620]	; 0x26c
   122ec:	mov	r1, #0
   122f0:	bl	4d28 <memset@plt>
   122f4:	ldr	r1, [r4, #616]	; 0x268
   122f8:	mov	r0, r4
   122fc:	mov	r2, r9
   12300:	bl	10f8c <read_bytes>
   12304:	cmn	r0, #1
   12308:	beq	12348 <maybe_read_string+0x120>
   1230c:	ldr	r0, [r4, #616]	; 0x268
   12310:	add	r1, r4, #94	; 0x5e
   12314:	str	r1, [sp]
   12318:	sub	r3, r6, #1
   1231c:	mov	r1, r9
   12320:	mov	r2, r8
   12324:	bl	4ce0 <por_utf8_encode@plt>
   12328:	cmn	r0, #1
   1232c:	beq	12350 <maybe_read_string+0x128>
   12330:	mov	r7, #0
   12334:	strb	r7, [r8, r0]
   12338:	cmp	r5, #0
   1233c:	movne	r7, #0
   12340:	strne	r7, [r5]
   12344:	b	1227c <maybe_read_string+0x54>
   12348:	mov	r7, #2
   1234c:	b	1227c <maybe_read_string+0x54>
   12350:	ldr	r0, [r4, #24]
   12354:	mov	r7, #16
   12358:	cmp	r0, #0
   1235c:	beq	1227c <maybe_read_string+0x54>
   12360:	ldr	r0, [r4, #616]	; 0x268
   12364:	str	r0, [sp]
   12368:	add	r5, sp, #4
   1236c:	ldr	r2, [pc, #44]	; 123a0 <maybe_read_string+0x178>
   12370:	add	r2, pc, r2
   12374:	mov	r0, r5
   12378:	mov	r1, #1024	; 0x400
   1237c:	mov	r3, r9
   12380:	bl	4d04 <snprintf@plt>
   12384:	ldr	r2, [r4, #24]
   12388:	ldr	r1, [r4, #36]	; 0x24
   1238c:	mov	r0, r5
   12390:	blx	r2
   12394:	b	1227c <maybe_read_string+0x54>
   12398:	.word	0x00000000
   1239c:	.word	0x40d38800
   123a0:	.word	0x00013e79

000123a4 <maybe_read_double>:
   123a4:	push	{r4, r5, r6, sl, fp, lr}
   123a8:	add	fp, sp, #16
   123ac:	sub	sp, sp, #8
   123b0:	mov	r4, r2
   123b4:	mov	r5, r1
   123b8:	mov	r6, r0
   123bc:	add	r1, sp, #7
   123c0:	mov	r2, #1
   123c4:	bl	10f8c <read_bytes>
   123c8:	mov	r1, r0
   123cc:	mov	r0, #5
   123d0:	cmp	r1, #1
   123d4:	bne	12434 <maybe_read_double+0x90>
   123d8:	ldrb	r2, [sp, #7]
   123dc:	add	r0, r6, r2, lsl #1
   123e0:	ldrh	r0, [r0, #94]	; 0x5e
   123e4:	cmp	r0, #90	; 0x5a
   123e8:	bne	1241c <maybe_read_double+0x78>
   123ec:	cmp	r5, #0
   123f0:	movwne	r1, #0
   123f4:	movtne	r1, #32760	; 0x7ff8
   123f8:	movne	r0, #0
   123fc:	strdne	r0, [r5]
   12400:	mov	r0, #0
   12404:	cmp	r4, #0
   12408:	beq	12434 <maybe_read_double+0x90>
   1240c:	mov	r1, #1
   12410:	str	r1, [r4]
   12414:	sub	sp, fp, #16
   12418:	pop	{r4, r5, r6, sl, fp, pc}
   1241c:	cmp	r4, #0
   12420:	movne	r0, #0
   12424:	strne	r0, [r4]
   12428:	mov	r0, r6
   1242c:	mov	r1, r5
   12430:	bl	1243c <read_double_with_peek>
   12434:	sub	sp, fp, #16
   12438:	pop	{r4, r5, r6, sl, fp, pc}

0001243c <read_double_with_peek>:
   1243c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12440:	add	fp, sp, #28
   12444:	sub	sp, sp, #436	; 0x1b4
   12448:	sub	sp, sp, #1024	; 0x400
   1244c:	mov	r9, r1
   12450:	mov	r5, r0
   12454:	movw	r7, #0
   12458:	movt	r7, #32760	; 0x7ff8
   1245c:	str	r7, [fp, #-36]	; 0xffffffdc
   12460:	mov	r0, #0
   12464:	str	r0, [fp, #-40]	; 0xffffffd8
   12468:	strb	r2, [fp, #-140]	; 0xffffff74
   1246c:	sub	r4, fp, #140	; 0x8c
   12470:	add	r1, r4, #1
   12474:	mov	r0, r5
   12478:	mov	r2, #1
   1247c:	bl	10f8c <read_bytes>
   12480:	mov	r8, #5
   12484:	cmp	r0, #1
   12488:	bne	125f4 <read_double_with_peek+0x1b8>
   1248c:	ldrb	r0, [fp, #-140]	; 0xffffff74
   12490:	add	r0, r5, r0, lsl #1
   12494:	ldrh	r0, [r0, #94]	; 0x5e
   12498:	cmp	r0, #42	; 0x2a
   1249c:	bne	124c8 <read_double_with_peek+0x8c>
   124a0:	ldrb	r0, [fp, #-139]	; 0xffffff75
   124a4:	add	r0, r5, r0, lsl #1
   124a8:	ldrh	r0, [r0, #94]	; 0x5e
   124ac:	cmp	r0, #46	; 0x2e
   124b0:	bne	124c8 <read_double_with_peek+0x8c>
   124b4:	mov	r8, #0
   124b8:	cmp	r9, #0
   124bc:	strne	r8, [r9]
   124c0:	strne	r7, [r9, #4]
   124c4:	b	125f4 <read_double_with_peek+0x1b8>
   124c8:	mov	r7, #0
   124cc:	mov	r6, #2
   124d0:	add	r1, r6, r4
   124d4:	ldrb	r0, [r1, #-1]
   124d8:	add	r0, r5, r0, lsl #1
   124dc:	ldrh	r0, [r0, #94]	; 0x5e
   124e0:	cmp	r0, #47	; 0x2f
   124e4:	beq	1251c <read_double_with_peek+0xe0>
   124e8:	mov	r0, r5
   124ec:	mov	r2, #1
   124f0:	bl	10f8c <read_bytes>
   124f4:	cmp	r0, #1
   124f8:	bne	125f4 <read_double_with_peek+0x1b8>
   124fc:	adds	r6, r6, #1
   12500:	adc	r7, r7, #0
   12504:	subs	r0, r6, #100	; 0x64
   12508:	sbcs	r0, r7, #0
   1250c:	bcc	124d0 <read_double_with_peek+0x94>
   12510:	eor	r0, r6, #100	; 0x64
   12514:	orrs	r0, r0, r7
   12518:	beq	125f4 <read_double_with_peek+0x1b8>
   1251c:	add	r0, r5, #94	; 0x5e
   12520:	str	r0, [sp]
   12524:	sub	r4, fp, #140	; 0x8c
   12528:	sub	r2, fp, #440	; 0x1b8
   1252c:	mov	r0, r4
   12530:	mov	r1, r6
   12534:	mov	r3, #300	; 0x12c
   12538:	bl	4ce0 <por_utf8_encode@plt>
   1253c:	ldr	r3, [r5, #24]
   12540:	cmn	r0, #1
   12544:	beq	125a8 <read_double_with_peek+0x16c>
   12548:	mov	sl, r0
   1254c:	ldr	r0, [r5, #36]	; 0x24
   12550:	str	r0, [sp]
   12554:	sub	r6, fp, #440	; 0x1b8
   12558:	sub	r2, fp, #40	; 0x28
   1255c:	mov	r0, r6
   12560:	mov	r1, sl
   12564:	bl	4cd4 <readstat_por_parse_double@plt>
   12568:	mov	r8, #0
   1256c:	cmn	r0, #1
   12570:	bne	125e8 <read_double_with_peek+0x1ac>
   12574:	ldr	r0, [r5, #24]
   12578:	mov	r8, #5
   1257c:	cmp	r0, #0
   12580:	beq	125e8 <read_double_with_peek+0x1ac>
   12584:	asr	r0, sl, #31
   12588:	str	sl, [sp]
   1258c:	stmib	sp, {r0, sl}
   12590:	str	r6, [sp, #12]
   12594:	str	r4, [sp, #16]
   12598:	add	r6, sp, #24
   1259c:	ldr	r2, [pc, #96]	; 12604 <read_double_with_peek+0x1c8>
   125a0:	add	r2, pc, r2
   125a4:	b	125cc <read_double_with_peek+0x190>
   125a8:	mov	r8, #16
   125ac:	cmp	r3, #0
   125b0:	beq	125e8 <read_double_with_peek+0x1ac>
   125b4:	stm	sp, {r6, r7}
   125b8:	str	r6, [sp, #8]
   125bc:	str	r4, [sp, #12]
   125c0:	add	r6, sp, #24
   125c4:	ldr	r2, [pc, #52]	; 12600 <read_double_with_peek+0x1c4>
   125c8:	add	r2, pc, r2
   125cc:	mov	r0, r6
   125d0:	mov	r1, #1024	; 0x400
   125d4:	bl	4d04 <snprintf@plt>
   125d8:	ldr	r2, [r5, #24]
   125dc:	ldr	r1, [r5, #36]	; 0x24
   125e0:	mov	r0, r6
   125e4:	blx	r2
   125e8:	cmp	r9, #0
   125ec:	vldrne	d16, [fp, #-40]	; 0xffffffd8
   125f0:	vstrne	d16, [r9]
   125f4:	mov	r0, r8
   125f8:	sub	sp, fp, #28
   125fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12600:	.word	0x00013c3f
   12604:	.word	0x00013c9a

00012608 <read_integer_in_range>:
   12608:	push	{r4, r5, fp, lr}
   1260c:	add	fp, sp, #8
   12610:	vpush	{d8}
   12614:	sub	sp, sp, #8
   12618:	mov	r4, r2
   1261c:	mov	r5, r1
   12620:	movw	r1, #0
   12624:	movt	r1, #32760	; 0x7ff8
   12628:	str	r1, [sp, #4]
   1262c:	mov	r1, #0
   12630:	str	r1, [sp]
   12634:	mov	r1, sp
   12638:	bl	1269c <read_double>
   1263c:	cmp	r0, #0
   12640:	bne	12690 <read_integer_in_range+0x88>
   12644:	vldr	d8, [sp]
   12648:	vorr	d0, d8, d8
   1264c:	bl	4db8 <__isnan@plt>
   12650:	mov	r1, r0
   12654:	mov	r0, #5
   12658:	vmov	s0, r5
   1265c:	vcvt.f64.s32	d16, s0
   12660:	vcmpe.f64	d8, d16
   12664:	vmrs	APSR_nzcv, fpscr
   12668:	bgt	12690 <read_integer_in_range+0x88>
   1266c:	vcmpe.f64	d8, #0.0
   12670:	vmrs	APSR_nzcv, fpscr
   12674:	bmi	12690 <read_integer_in_range+0x88>
   12678:	cmp	r1, #0
   1267c:	bne	12690 <read_integer_in_range+0x88>
   12680:	mov	r0, #0
   12684:	cmp	r4, #0
   12688:	vcvtne.s32.f64	s0, d8
   1268c:	vstrne	s0, [r4]
   12690:	sub	sp, fp, #16
   12694:	vpop	{d8}
   12698:	pop	{r4, r5, fp, pc}

0001269c <read_double>:
   1269c:	push	{r4, r5, fp, lr}
   126a0:	add	fp, sp, #8
   126a4:	sub	sp, sp, #8
   126a8:	mov	r4, r1
   126ac:	mov	r5, r0
   126b0:	add	r1, sp, #7
   126b4:	mov	r2, #1
   126b8:	bl	10f8c <read_bytes>
   126bc:	mov	r1, r0
   126c0:	mov	r0, #5
   126c4:	cmp	r1, #1
   126c8:	bne	126dc <read_double+0x40>
   126cc:	ldrb	r2, [sp, #7]
   126d0:	mov	r0, r5
   126d4:	mov	r1, r4
   126d8:	bl	1243c <read_double_with_peek>
   126dc:	sub	sp, fp, #8
   126e0:	pop	{r4, r5, fp, pc}

000126e4 <por_update_progress>:
   126e4:	push	{fp, lr}
   126e8:	mov	fp, sp
   126ec:	ldr	r1, [r0, #28]
   126f0:	ldr	ip, [r0, #32]
   126f4:	ldr	r2, [r0, #36]	; 0x24
   126f8:	ldr	r0, [r0, #44]	; 0x2c
   126fc:	ldr	lr, [r0, #16]
   12700:	ldr	r3, [r0, #20]
   12704:	mov	r0, ip
   12708:	mov	ip, lr
   1270c:	pop	{fp, lr}
   12710:	bx	ip
   12714:	andeq	r0, r0, r0

00012718 <readstat_begin_writing_por>:
   12718:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1271c:	add	fp, sp, #24
   12720:	ldr	ip, [pc, #164]	; 127cc <readstat_begin_writing_por+0xb4>
   12724:	add	ip, pc, ip
   12728:	ldr	lr, [pc, #160]	; 127d0 <readstat_begin_writing_por+0xb8>
   1272c:	add	lr, pc, lr
   12730:	ldr	r3, [pc, #156]	; 127d4 <readstat_begin_writing_por+0xbc>
   12734:	add	r3, pc, r3
   12738:	str	r3, [r0, #276]	; 0x114
   1273c:	str	lr, [r0, #280]	; 0x118
   12740:	str	ip, [r0, #284]	; 0x11c
   12744:	ldr	ip, [pc, #140]	; 127d8 <readstat_begin_writing_por+0xc0>
   12748:	add	ip, pc, ip
   1274c:	ldr	r3, [pc, #136]	; 127dc <readstat_begin_writing_por+0xc4>
   12750:	add	r3, pc, r3
   12754:	str	r3, [r0, #264]	; 0x108
   12758:	str	ip, [r0, #268]	; 0x10c
   1275c:	ldr	ip, [pc, #124]	; 127e0 <readstat_begin_writing_por+0xc8>
   12760:	add	ip, pc, ip
   12764:	ldr	lr, [pc, #120]	; 127e4 <readstat_begin_writing_por+0xcc>
   12768:	add	lr, pc, lr
   1276c:	ldr	r8, [pc, #116]	; 127e8 <readstat_begin_writing_por+0xd0>
   12770:	add	r8, pc, r8
   12774:	ldr	r4, [pc, #112]	; 127ec <readstat_begin_writing_por+0xd4>
   12778:	add	r4, pc, r4
   1277c:	ldr	r5, [pc, #108]	; 127f0 <readstat_begin_writing_por+0xd8>
   12780:	add	r5, pc, r5
   12784:	ldr	r6, [pc, #104]	; 127f4 <readstat_begin_writing_por+0xdc>
   12788:	add	r6, pc, r6
   1278c:	ldr	r7, [pc, #100]	; 127f8 <readstat_begin_writing_por+0xe0>
   12790:	add	r7, pc, r7
   12794:	ldr	r3, [pc, #96]	; 127fc <readstat_begin_writing_por+0xe4>
   12798:	add	r3, pc, r3
   1279c:	str	r3, [r0, #228]	; 0xe4
   127a0:	str	r7, [r0, #232]	; 0xe8
   127a4:	str	r6, [r0, #236]	; 0xec
   127a8:	str	r5, [r0, #240]	; 0xf0
   127ac:	add	r3, r0, #244	; 0xf4
   127b0:	stm	r3, {r4, r8, lr}
   127b4:	str	ip, [r0, #256]	; 0x100
   127b8:	ldr	r3, [pc, #64]	; 12800 <readstat_begin_writing_por+0xe8>
   127bc:	add	r3, pc, r3
   127c0:	str	r3, [r0, #292]	; 0x124
   127c4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   127c8:	b	49d4 <readstat_begin_writing_file@plt>
   127cc:	.word	0x00000380
   127d0:	.word	0x00000320
   127d4:	.word	0x000001f4
   127d8:	.word	0x000001d0
   127dc:	.word	0x000001c0
   127e0:	.word	0x00000124
   127e4:	.word	0x000000f8
   127e8:	.word	0x000000e8
   127ec:	.word	0x000000d4
   127f0:	.word	0x000000c0
   127f4:	.word	0x000000ac
   127f8:	.word	0x00000090
   127fc:	.word	0x00000074
   12800:	.word	0x00000040

00012804 <por_metadata_ok>:
   12804:	ldr	r0, [r0, #16]
   12808:	cmp	r0, #0
   1280c:	movwne	r0, #6
   12810:	bx	lr

00012814 <por_variable_width>:
   12814:	mov	r2, #54	; 0x36
   12818:	cmp	r0, #0
   1281c:	addeq	r2, r1, #54	; 0x36
   12820:	mov	r0, r2
   12824:	bx	lr

00012828 <por_variable_ok>:
   12828:	push	{fp, lr}
   1282c:	mov	fp, sp
   12830:	bl	4e00 <readstat_variable_get_name@plt>
   12834:	pop	{fp, lr}
   12838:	b	12aec <validate_variable_name>

0001283c <por_write_int8_value>:
   1283c:	vmov	s0, r2
   12840:	vcvt.f64.s32	d0, s0
   12844:	b	12868 <por_write_double_value>

00012848 <por_write_int16_value>:
   12848:	vmov	s0, r2
   1284c:	vcvt.f64.s32	d0, s0
   12850:	b	12868 <por_write_double_value>

00012854 <por_write_int32_value>:
   12854:	vmov	s0, r2
   12858:	vcvt.f64.s32	d0, s0
   1285c:	b	12868 <por_write_double_value>

00012860 <por_write_float_value>:
   12860:	vcvt.f64.f32	d0, s0
   12864:	b	12868 <por_write_double_value>

00012868 <por_write_double_value>:
   12868:	push	{fp, lr}
   1286c:	mov	fp, sp
   12870:	mov	r1, #54	; 0x36
   12874:	bl	12ba4 <por_write_double_to_buffer>
   12878:	mov	r1, #0
   1287c:	cmn	r0, #1
   12880:	movweq	r1, #13
   12884:	mov	r0, r1
   12888:	pop	{fp, pc}

0001288c <por_write_string_value>:
   1288c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12890:	add	fp, sp, #24
   12894:	mov	r4, r2
   12898:	mov	r5, r1
   1289c:	mov	r8, r0
   128a0:	mov	r0, r2
   128a4:	bl	4c8c <strlen@plt>
   128a8:	mov	r7, r0
   128ac:	cmp	r0, #0
   128b0:	mov	r6, r0
   128b4:	movweq	r6, #1
   128b8:	mov	r0, r5
   128bc:	bl	4d58 <readstat_variable_get_storage_width@plt>
   128c0:	cmp	r6, r0
   128c4:	movhi	r6, r0
   128c8:	vmov	s0, r6
   128cc:	vcvt.f64.u32	d0, s0
   128d0:	mov	r0, r8
   128d4:	mov	r1, #54	; 0x36
   128d8:	bl	12ba4 <por_write_double_to_buffer>
   128dc:	cmn	r0, #1
   128e0:	beq	1290c <por_write_string_value+0x80>
   128e4:	ldr	r1, [pc, #40]	; 12914 <por_write_string_value+0x88>
   128e8:	add	r1, pc, r1
   128ec:	cmp	r7, #0
   128f0:	moveq	r4, r1
   128f4:	add	r0, r8, r0
   128f8:	mov	r1, r4
   128fc:	mov	r2, r6
   12900:	bl	4d4c <strncpy@plt>
   12904:	mov	r0, #0
   12908:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1290c:	mov	r0, #13
   12910:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12914:	.word	0x00013a36

00012918 <por_write_missing_string>:
   12918:	vmov.i32	d0, #0	; 0x00000000
   1291c:	b	12868 <por_write_double_value>

00012920 <por_write_missing_number>:
   12920:	vldr	d0, [pc]	; 12928 <por_write_missing_number+0x8>
   12924:	b	12868 <por_write_double_value>
   12928:	.word	0x00000000
   1292c:	.word	0x7ff80000

00012930 <por_begin_data>:
   12930:	push	{r4, r5, r6, sl, fp, lr}
   12934:	add	fp, sp, #16
   12938:	mov	r4, r0
   1293c:	bl	13650 <por_write_ctx_init>
   12940:	mov	r5, r0
   12944:	mov	r0, r4
   12948:	mov	r1, r5
   1294c:	bl	12efc <por_emit_header>
   12950:	mov	r6, r0
   12954:	cmp	r0, #0
   12958:	bne	12a34 <por_begin_data+0x104>
   1295c:	mov	r0, r4
   12960:	mov	r1, r5
   12964:	bl	13010 <por_emit_version_and_timestamp>
   12968:	mov	r6, r0
   1296c:	cmp	r0, #0
   12970:	bne	12a34 <por_begin_data+0x104>
   12974:	mov	r0, r4
   12978:	mov	r1, r5
   1297c:	bl	13154 <por_emit_identification_records>
   12980:	mov	r6, r0
   12984:	cmp	r0, #0
   12988:	bne	12a34 <por_begin_data+0x104>
   1298c:	mov	r0, r4
   12990:	mov	r1, r5
   12994:	bl	131cc <por_emit_variable_count_record>
   12998:	mov	r6, r0
   1299c:	cmp	r0, #0
   129a0:	bne	12a34 <por_begin_data+0x104>
   129a4:	mov	r0, r4
   129a8:	mov	r1, r5
   129ac:	bl	13208 <por_emit_precision_record>
   129b0:	mov	r6, r0
   129b4:	cmp	r0, #0
   129b8:	bne	12a34 <por_begin_data+0x104>
   129bc:	mov	r0, r4
   129c0:	mov	r1, r5
   129c4:	bl	13248 <por_emit_case_weight_variable_record>
   129c8:	mov	r6, r0
   129cc:	cmp	r0, #0
   129d0:	bne	12a34 <por_begin_data+0x104>
   129d4:	mov	r0, r4
   129d8:	mov	r1, r5
   129dc:	bl	1329c <por_emit_variable_records>
   129e0:	mov	r6, r0
   129e4:	cmp	r0, #0
   129e8:	bne	12a34 <por_begin_data+0x104>
   129ec:	mov	r0, r4
   129f0:	mov	r1, r5
   129f4:	bl	133c8 <por_emit_value_label_records>
   129f8:	mov	r6, r0
   129fc:	cmp	r0, #0
   12a00:	bne	12a34 <por_begin_data+0x104>
   12a04:	mov	r0, r4
   12a08:	mov	r1, r5
   12a0c:	bl	13574 <por_emit_document_record>
   12a10:	mov	r6, r0
   12a14:	cmp	r0, #0
   12a18:	bne	12a34 <por_begin_data+0x104>
   12a1c:	mov	r0, r4
   12a20:	mov	r1, r5
   12a24:	bl	13620 <por_emit_data_tag>
   12a28:	mov	r6, r0
   12a2c:	cmp	r0, #0
   12a30:	beq	12a44 <por_begin_data+0x114>
   12a34:	mov	r0, r5
   12a38:	bl	13628 <por_write_ctx_free>
   12a3c:	mov	r0, r6
   12a40:	pop	{r4, r5, r6, sl, fp, pc}
   12a44:	str	r5, [r4, #300]	; 0x12c
   12a48:	mov	r6, #0
   12a4c:	mov	r0, r6
   12a50:	pop	{r4, r5, r6, sl, fp, pc}

00012a54 <por_write_row>:
   12a54:	push	{fp, lr}
   12a58:	mov	fp, sp
   12a5c:	mov	ip, r1
   12a60:	mov	r3, #0
   12a64:	cmp	r2, #0
   12a68:	beq	12a9c <por_write_row+0x48>
   12a6c:	mov	r1, #0
   12a70:	b	12a80 <por_write_row+0x2c>
   12a74:	add	r1, r1, #1
   12a78:	cmp	r2, r1
   12a7c:	beq	12a9c <por_write_row+0x48>
   12a80:	ldrb	lr, [ip, r1]
   12a84:	cmp	lr, #0
   12a88:	beq	12a74 <por_write_row+0x20>
   12a8c:	cmp	r1, r3
   12a90:	strbne	lr, [ip, r3]
   12a94:	add	r3, r3, #1
   12a98:	b	12a74 <por_write_row+0x20>
   12a9c:	ldr	r1, [r0, #300]	; 0x12c
   12aa0:	mov	r2, ip
   12aa4:	pop	{fp, lr}
   12aa8:	b	13728 <por_write_string_n>

00012aac <por_end_data>:
   12aac:	push	{r4, r5, fp, lr}
   12ab0:	add	fp, sp, #8
   12ab4:	mov	r4, r0
   12ab8:	ldr	r1, [r0, #300]	; 0x12c
   12abc:	mov	r2, #90	; 0x5a
   12ac0:	bl	137fc <por_write_tag>
   12ac4:	mov	r5, r0
   12ac8:	cmp	r0, #0
   12acc:	bne	12adc <por_end_data+0x30>
   12ad0:	mov	r0, r4
   12ad4:	bl	13e98 <por_finish>
   12ad8:	mov	r5, r0
   12adc:	ldr	r0, [r4, #300]	; 0x12c
   12ae0:	bl	13628 <por_write_ctx_free>
   12ae4:	mov	r0, r5
   12ae8:	pop	{r4, r5, fp, pc}

00012aec <validate_variable_name>:
   12aec:	push	{r4, sl, fp, lr}
   12af0:	add	fp, sp, #8
   12af4:	mov	r4, r0
   12af8:	bl	4c8c <strlen@plt>
   12afc:	sub	r1, r0, #1
   12b00:	mov	r0, #28
   12b04:	cmp	r1, #7
   12b08:	pophi	{r4, sl, fp, pc}
   12b0c:	ldrb	r1, [r4]
   12b10:	cmp	r1, #0
   12b14:	beq	12b80 <validate_variable_name+0x94>
   12b18:	add	r0, r4, #1
   12b1c:	mvn	r2, #34	; 0x22
   12b20:	mov	ip, #1
   12b24:	movw	lr, #2051	; 0x803
   12b28:	movt	lr, #8192	; 0x2000
   12b2c:	b	12b44 <validate_variable_name+0x58>
   12b30:	tst	lr, ip, lsl r3
   12b34:	beq	12b6c <validate_variable_name+0x80>
   12b38:	ldrb	r1, [r0], #1
   12b3c:	cmp	r1, #0
   12b40:	beq	12b80 <validate_variable_name+0x94>
   12b44:	sub	r3, r1, #65	; 0x41
   12b48:	uxtb	r3, r3
   12b4c:	cmp	r3, #26
   12b50:	subcs	r3, r1, #48	; 0x30
   12b54:	uxtbcs	r3, r3
   12b58:	cmpcs	r3, #10
   12b5c:	bcc	12b38 <validate_variable_name+0x4c>
   12b60:	uxtab	r3, r2, r1
   12b64:	cmp	r3, #29
   12b68:	bls	12b30 <validate_variable_name+0x44>
   12b6c:	uxtb	r1, r1
   12b70:	cmp	r1, #95	; 0x5f
   12b74:	beq	12b38 <validate_variable_name+0x4c>
   12b78:	mov	r0, #26
   12b7c:	pop	{r4, sl, fp, pc}
   12b80:	ldrb	r0, [r4]
   12b84:	sub	r1, r0, #65	; 0x41
   12b88:	uxtb	r1, r1
   12b8c:	mov	r2, #25
   12b90:	cmp	r1, #26
   12b94:	movwcc	r2, #0
   12b98:	subs	r0, r0, #64	; 0x40
   12b9c:	movne	r0, r2
   12ba0:	pop	{r4, sl, fp, pc}

00012ba4 <por_write_double_to_buffer>:
   12ba4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ba8:	add	fp, sp, #28
   12bac:	sub	sp, sp, #4
   12bb0:	vpush	{d8-d9}
   12bb4:	sub	sp, sp, #16
   12bb8:	vmov.f64	d9, d0
   12bbc:	mov	r8, r0
   12bc0:	bl	4db8 <__isnan@plt>
   12bc4:	cmp	r0, #0
   12bc8:	beq	12bdc <por_write_double_to_buffer+0x38>
   12bcc:	movw	r0, #11818	; 0x2e2a
   12bd0:	strh	r0, [r8]
   12bd4:	mov	r0, #2
   12bd8:	b	12dfc <por_write_double_to_buffer+0x258>
   12bdc:	vmov.f64	d0, d9
   12be0:	bl	4a58 <__isinf@plt>
   12be4:	cmp	r0, #0
   12be8:	beq	12c30 <por_write_double_to_buffer+0x8c>
   12bec:	mov	r0, #0
   12bf0:	vcmpe.f64	d9, #0.0
   12bf4:	vmrs	APSR_nzcv, fpscr
   12bf8:	movmi	r0, #45	; 0x2d
   12bfc:	strbmi	r0, [r8]
   12c00:	movmi	r0, #1
   12c04:	add	r1, r8, r0
   12c08:	movw	r2, #11057	; 0x2b31
   12c0c:	strh	r2, [r1]
   12c10:	orr	r0, r0, #2
   12c14:	movw	r1, #21588	; 0x5454
   12c18:	mov	r2, r8
   12c1c:	strh	r1, [r2, r0]!
   12c20:	mov	r1, #47	; 0x2f
   12c24:	strb	r1, [r2, #2]
   12c28:	add	r0, r0, #3
   12c2c:	b	12dfc <por_write_double_to_buffer+0x258>
   12c30:	add	r0, sp, #8
   12c34:	vabs.f64	d0, d9
   12c38:	bl	4bfc <modf@plt>
   12c3c:	vmov.f64	d8, d0
   12c40:	ldr	r0, [sp, #8]
   12c44:	ldr	r1, [sp, #12]
   12c48:	bl	25094 <__aeabi_d2lz>
   12c4c:	mov	r5, r0
   12c50:	mov	r6, r1
   12c54:	mov	r4, #0
   12c58:	vcmpe.f64	d9, #0.0
   12c5c:	vmrs	APSR_nzcv, fpscr
   12c60:	movmi	r0, #45	; 0x2d
   12c64:	strbmi	r0, [r8]
   12c68:	movmi	r4, #1
   12c6c:	orrs	r0, r5, r6
   12c70:	beq	12cb0 <por_write_double_to_buffer+0x10c>
   12c74:	mov	r9, #0
   12c78:	mov	r0, r5
   12c7c:	mov	r1, r6
   12c80:	mov	r2, #30
   12c84:	mov	r3, #0
   12c88:	bl	24f74 <__aeabi_ldivmod>
   12c8c:	vcmp.f64	d8, #0.0
   12c90:	vmrs	APSR_nzcv, fpscr
   12c94:	str	r4, [sp, #4]
   12c98:	orrseq	r0, r2, r3
   12c9c:	beq	12ccc <por_write_double_to_buffer+0x128>
   12ca0:	mov	r4, r5
   12ca4:	mov	r7, r6
   12ca8:	mov	sl, #0
   12cac:	b	12d34 <por_write_double_to_buffer+0x190>
   12cb0:	mov	r0, #48	; 0x30
   12cb4:	strb	r0, [r8, r4]
   12cb8:	add	r5, r4, #1
   12cbc:	mov	r0, #0
   12cc0:	mov	r9, #0
   12cc4:	mov	sl, #0
   12cc8:	b	12d4c <por_write_double_to_buffer+0x1a8>
   12ccc:	mov	r9, #0
   12cd0:	mov	sl, #0
   12cd4:	mov	r0, r5
   12cd8:	mov	r1, r6
   12cdc:	mov	r2, #30
   12ce0:	mov	r3, #0
   12ce4:	bl	24f74 <__aeabi_ldivmod>
   12ce8:	mov	r4, r0
   12cec:	mov	r7, r1
   12cf0:	mov	r2, #30
   12cf4:	mov	r3, #0
   12cf8:	bl	24f74 <__aeabi_ldivmod>
   12cfc:	adds	r0, r5, #29
   12d00:	adc	r1, r6, #0
   12d04:	adds	r9, r9, #1
   12d08:	adc	sl, sl, #0
   12d0c:	vcmp.f64	d8, #0.0
   12d10:	vmrs	APSR_nzcv, fpscr
   12d14:	bne	12d34 <por_write_double_to_buffer+0x190>
   12d18:	subs	r0, r0, #59	; 0x3b
   12d1c:	sbcs	r0, r1, #0
   12d20:	bcc	12d34 <por_write_double_to_buffer+0x190>
   12d24:	orrs	r0, r2, r3
   12d28:	mov	r5, r4
   12d2c:	mov	r6, r7
   12d30:	beq	12cd4 <por_write_double_to_buffer+0x130>
   12d34:	ldr	r5, [sp, #4]
   12d38:	add	r0, r8, r5
   12d3c:	mov	r2, r4
   12d40:	mov	r3, r7
   12d44:	bl	12e1c <por_write_base30_integer>
   12d48:	add	r5, r0, r5
   12d4c:	vcmp.f64	d8, #0.0
   12d50:	vmrs	APSR_nzcv, fpscr
   12d54:	movne	r1, #46	; 0x2e
   12d58:	strbne	r1, [r8, r5]
   12d5c:	addne	r5, r5, #1
   12d60:	cmp	r0, #49	; 0x31
   12d64:	bgt	12dc8 <por_write_double_to_buffer+0x224>
   12d68:	vcmp.f64	d8, #0.0
   12d6c:	vmrs	APSR_nzcv, fpscr
   12d70:	beq	12dc8 <por_write_double_to_buffer+0x224>
   12d74:	add	r6, r0, #1
   12d78:	vmov.f64	d9, #62	; 0x41f00000  30.0
   12d7c:	add	r4, sp, #8
   12d80:	vmul.f64	d0, d8, d9
   12d84:	mov	r0, r4
   12d88:	bl	4bfc <modf@plt>
   12d8c:	vmov.f64	d8, d0
   12d90:	ldr	r0, [sp, #8]
   12d94:	ldr	r1, [sp, #12]
   12d98:	bl	25094 <__aeabi_d2lz>
   12d9c:	cmp	r1, #0
   12da0:	bmi	12e14 <por_write_double_to_buffer+0x270>
   12da4:	bl	12ed4 <por_encode_base30_digit>
   12da8:	strb	r0, [r8, r5]
   12dac:	add	r5, r5, #1
   12db0:	cmp	r6, #49	; 0x31
   12db4:	bgt	12dc8 <por_write_double_to_buffer+0x224>
   12db8:	add	r6, r6, #1
   12dbc:	vcmp.f64	d8, #0.0
   12dc0:	vmrs	APSR_nzcv, fpscr
   12dc4:	bne	12d80 <por_write_double_to_buffer+0x1dc>
   12dc8:	orrs	r0, r9, sl
   12dcc:	beq	12df0 <por_write_double_to_buffer+0x24c>
   12dd0:	mov	r0, #43	; 0x2b
   12dd4:	strb	r0, [r8, r5]
   12dd8:	add	r4, r5, #1
   12ddc:	add	r0, r8, r4
   12de0:	mov	r2, r9
   12de4:	mov	r3, sl
   12de8:	bl	12e1c <por_write_base30_integer>
   12dec:	add	r5, r0, r4
   12df0:	mov	r0, #47	; 0x2f
   12df4:	strb	r0, [r8, r5]
   12df8:	add	r0, r5, #1
   12dfc:	mov	r1, #0
   12e00:	strb	r1, [r8, r0]
   12e04:	sub	sp, fp, #48	; 0x30
   12e08:	vpop	{d8-d9}
   12e0c:	add	sp, sp, #4
   12e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e14:	mvn	r0, #0
   12e18:	b	12e04 <por_write_double_to_buffer+0x260>

00012e1c <por_write_base30_integer>:
   12e1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e20:	add	fp, sp, #28
   12e24:	sub	sp, sp, #4
   12e28:	mov	r8, r0
   12e2c:	orrs	r0, r2, r3
   12e30:	beq	12ec4 <por_write_base30_integer+0xa8>
   12e34:	mov	r6, r3
   12e38:	mov	r7, r2
   12e3c:	mov	r4, #0
   12e40:	mov	sl, #30
   12e44:	mov	r0, r7
   12e48:	mov	r1, r6
   12e4c:	mov	r2, #30
   12e50:	mov	r3, #0
   12e54:	bl	25048 <__aeabi_uldivmod>
   12e58:	mov	r5, r0
   12e5c:	mov	r9, r1
   12e60:	umull	r0, r1, r0, sl
   12e64:	rsb	r2, r9, r9, lsl #4
   12e68:	add	r1, r1, r2, lsl #1
   12e6c:	subs	r0, r7, r0
   12e70:	sbc	r1, r6, r1
   12e74:	bl	12ed4 <por_encode_base30_digit>
   12e78:	strb	r0, [r8, r4]
   12e7c:	add	r4, r4, #1
   12e80:	subs	r0, r7, #30
   12e84:	sbcs	r0, r6, #0
   12e88:	mov	r7, r5
   12e8c:	mov	r6, r9
   12e90:	bcs	12e44 <por_write_base30_integer+0x28>
   12e94:	subs	r0, r4, #1
   12e98:	beq	12ec8 <por_write_base30_integer+0xac>
   12e9c:	mov	r1, #0
   12ea0:	ldrb	r2, [r8, r1]
   12ea4:	ldrb	r3, [r8, r0]
   12ea8:	strb	r3, [r8, r1]
   12eac:	strb	r2, [r8, r0]
   12eb0:	sub	r0, r0, #1
   12eb4:	add	r1, r1, #1
   12eb8:	cmp	r0, r1
   12ebc:	bgt	12ea0 <por_write_base30_integer+0x84>
   12ec0:	b	12ec8 <por_write_base30_integer+0xac>
   12ec4:	mov	r4, #0
   12ec8:	mov	r0, r4
   12ecc:	sub	sp, fp, #28
   12ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012ed4 <por_encode_base30_digit>:
   12ed4:	mov	r2, #0
   12ed8:	subs	r3, r0, #10
   12edc:	sbcs	r1, r1, #0
   12ee0:	movwcc	r2, #1
   12ee4:	mov	r1, #55	; 0x37
   12ee8:	cmp	r2, #0
   12eec:	movwne	r1, #48	; 0x30
   12ef0:	add	r0, r1, r0
   12ef4:	uxtb	r0, r0
   12ef8:	bx	lr

00012efc <por_emit_header>:
   12efc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12f00:	add	fp, sp, #24
   12f04:	sub	sp, sp, #456	; 0x1c8
   12f08:	mov	r8, r1
   12f0c:	mov	r5, r0
   12f10:	add	r7, r0, #88	; 0x58
   12f14:	mov	r0, r7
   12f18:	bl	4c8c <strlen@plt>
   12f1c:	mov	r6, r0
   12f20:	sub	r4, fp, #224	; 0xe0
   12f24:	mov	r0, r4
   12f28:	mov	r1, #48	; 0x30
   12f2c:	mov	r2, #200	; 0xc8
   12f30:	bl	4d28 <memset@plt>
   12f34:	ldr	r0, [pc, #200]	; 13004 <por_emit_header+0x108>
   12f38:	add	r0, pc, r0
   12f3c:	vld1.64	{d16-d17}, [r0]
   12f40:	add	r0, r4, #40	; 0x28
   12f44:	vst1.64	{d16-d17}, [r0]
   12f48:	movw	r0, #18758	; 0x4946
   12f4c:	movt	r0, #17740	; 0x454c
   12f50:	str	r0, [fp, #-168]	; 0xffffff58
   12f54:	add	r0, r4, #60	; 0x3c
   12f58:	mov	r1, r7
   12f5c:	mov	r2, #20
   12f60:	bl	4d4c <strncpy@plt>
   12f64:	cmp	r6, #19
   12f68:	bhi	12f7c <por_emit_header+0x80>
   12f6c:	add	r0, r0, r6
   12f70:	rsb	r2, r6, #20
   12f74:	mov	r1, #32
   12f78:	bl	4d28 <memset@plt>
   12f7c:	sub	r1, fp, #224	; 0xe0
   12f80:	mov	r0, r5
   12f84:	mov	r2, #200	; 0xc8
   12f88:	bl	136fc <por_write_bytes>
   12f8c:	mov	r6, sp
   12f90:	mov	r0, r6
   12f94:	mov	r1, #48	; 0x30
   12f98:	mov	r2, #256	; 0x100
   12f9c:	bl	4d28 <memset@plt>
   12fa0:	mov	r0, #0
   12fa4:	ldr	r1, [pc, #92]	; 13008 <por_emit_header+0x10c>
   12fa8:	ldr	r1, [pc, r1]
   12fac:	ldrb	r2, [r1, r0]
   12fb0:	cmp	r2, #0
   12fb4:	strbne	r2, [r6, r0]
   12fb8:	add	r0, r0, #1
   12fbc:	cmp	r0, #256	; 0x100
   12fc0:	bne	12fac <por_emit_header+0xb0>
   12fc4:	mov	r1, sp
   12fc8:	mov	r0, r5
   12fcc:	mov	r2, #256	; 0x100
   12fd0:	bl	136fc <por_write_bytes>
   12fd4:	cmp	r0, #0
   12fd8:	beq	12fe4 <por_emit_header+0xe8>
   12fdc:	sub	sp, fp, #24
   12fe0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12fe4:	ldr	r2, [pc, #32]	; 1300c <por_emit_header+0x110>
   12fe8:	add	r2, pc, r2
   12fec:	mov	r0, r5
   12ff0:	mov	r1, r8
   12ff4:	mov	r3, #8
   12ff8:	bl	13728 <por_write_string_n>
   12ffc:	sub	sp, fp, #24
   13000:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13004:	.word	0x000133c0
   13008:	.word	0x00032360
   1300c:	.word	0x000131f8

00013010 <por_emit_version_and_timestamp>:
   13010:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13014:	add	fp, sp, #24
   13018:	sub	sp, sp, #24
   1301c:	mov	r4, r1
   13020:	mov	r5, r0
   13024:	add	r0, r0, #20
   13028:	bl	4be4 <localtime@plt>
   1302c:	cmp	r0, #0
   13030:	beq	130e0 <por_emit_version_and_timestamp+0xd0>
   13034:	mov	r6, r0
   13038:	mov	r0, r5
   1303c:	mov	r1, r4
   13040:	mov	r2, #65	; 0x41
   13044:	bl	137fc <por_write_tag>
   13048:	cmp	r0, #0
   1304c:	bne	130d8 <por_emit_version_and_timestamp+0xc8>
   13050:	add	r2, r6, #12
   13054:	ldm	r2, {r0, r1, r2}
   13058:	movw	r8, #34079	; 0x851f
   1305c:	movt	r8, #20971	; 0x51eb
   13060:	umull	r3, r7, r0, r8
   13064:	lsr	r3, r7, #5
   13068:	mov	r9, #100	; 0x64
   1306c:	mls	r0, r3, r9, r0
   13070:	add	r1, r1, #1
   13074:	umull	r3, r7, r1, r8
   13078:	lsr	r3, r7, #5
   1307c:	mls	r1, r3, r9, r1
   13080:	str	r1, [sp]
   13084:	str	r0, [sp, #4]
   13088:	movw	r0, #1900	; 0x76c
   1308c:	add	r0, r2, r0
   13090:	movw	r1, #5977	; 0x1759
   13094:	movt	r1, #53687	; 0xd1b7
   13098:	umull	r1, r2, r0, r1
   1309c:	lsr	r1, r2, #13
   130a0:	movw	r2, #10000	; 0x2710
   130a4:	mls	r3, r1, r2, r0
   130a8:	add	r7, sp, #15
   130ac:	ldr	r2, [pc, #152]	; 1314c <por_emit_version_and_timestamp+0x13c>
   130b0:	add	r2, pc, r2
   130b4:	mov	r0, r7
   130b8:	mov	r1, #9
   130bc:	bl	4d04 <snprintf@plt>
   130c0:	mov	r0, r5
   130c4:	mov	r1, r4
   130c8:	mov	r2, r7
   130cc:	bl	13828 <por_write_string_field>
   130d0:	cmp	r0, #0
   130d4:	beq	130ec <por_emit_version_and_timestamp+0xdc>
   130d8:	sub	sp, fp, #24
   130dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   130e0:	mov	r0, #39	; 0x27
   130e4:	sub	sp, fp, #24
   130e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   130ec:	ldm	r6, {r0, r1, r2}
   130f0:	umull	r3, r7, r0, r8
   130f4:	lsr	r3, r7, #5
   130f8:	mls	r0, r3, r9, r0
   130fc:	umull	r3, r7, r1, r8
   13100:	lsr	r3, r7, #5
   13104:	mls	r1, r3, r9, r1
   13108:	str	r1, [sp]
   1310c:	str	r0, [sp, #4]
   13110:	umull	r0, r1, r2, r8
   13114:	lsr	r0, r1, #5
   13118:	mls	r3, r0, r9, r2
   1311c:	add	r6, sp, #8
   13120:	ldr	r2, [pc, #40]	; 13150 <por_emit_version_and_timestamp+0x140>
   13124:	add	r2, pc, r2
   13128:	mov	r0, r6
   1312c:	mov	r1, #7
   13130:	bl	4d04 <snprintf@plt>
   13134:	mov	r0, r5
   13138:	mov	r1, r4
   1313c:	mov	r2, r6
   13140:	bl	13828 <por_write_string_field>
   13144:	sub	sp, fp, #24
   13148:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1314c:	.word	0x000130e9
   13150:	.word	0x00013082

00013154 <por_emit_identification_records>:
   13154:	push	{r4, r5, fp, lr}
   13158:	add	fp, sp, #8
   1315c:	mov	r4, r1
   13160:	mov	r5, r0
   13164:	mov	r2, #49	; 0x31
   13168:	bl	137fc <por_write_tag>
   1316c:	cmp	r0, #0
   13170:	bne	131a8 <por_emit_identification_records+0x54>
   13174:	ldr	r2, [pc, #72]	; 131c4 <por_emit_identification_records+0x70>
   13178:	add	r2, pc, r2
   1317c:	mov	r0, r5
   13180:	mov	r1, r4
   13184:	bl	13828 <por_write_string_field>
   13188:	cmp	r0, #0
   1318c:	popne	{r4, r5, fp, pc}
   13190:	mov	r0, r5
   13194:	mov	r1, r4
   13198:	mov	r2, #51	; 0x33
   1319c:	bl	137fc <por_write_tag>
   131a0:	cmp	r0, #0
   131a4:	beq	131ac <por_emit_identification_records+0x58>
   131a8:	pop	{r4, r5, fp, pc}
   131ac:	ldr	r2, [pc, #20]	; 131c8 <por_emit_identification_records+0x74>
   131b0:	add	r2, pc, r2
   131b4:	mov	r0, r5
   131b8:	mov	r1, r4
   131bc:	pop	{r4, r5, fp, lr}
   131c0:	b	13828 <por_write_string_field>
   131c4:	.word	0x00013175
   131c8:	.word	0x00013120

000131cc <por_emit_variable_count_record>:
   131cc:	push	{r4, r5, fp, lr}
   131d0:	add	fp, sp, #8
   131d4:	mov	r4, r1
   131d8:	mov	r5, r0
   131dc:	mov	r2, #52	; 0x34
   131e0:	bl	137fc <por_write_tag>
   131e4:	cmp	r0, #0
   131e8:	popne	{r4, r5, fp, pc}
   131ec:	vldr	s0, [r5, #28]
   131f0:	vcvt.f64.s32	d0, s0
   131f4:	mov	r0, r5
   131f8:	mov	r1, r4
   131fc:	pop	{r4, r5, fp, lr}
   13200:	b	138a0 <por_write_double>
   13204:	nop	{0}

00013208 <por_emit_precision_record>:
   13208:	push	{r4, r5, fp, lr}
   1320c:	add	fp, sp, #8
   13210:	mov	r4, r1
   13214:	mov	r5, r0
   13218:	mov	r2, #53	; 0x35
   1321c:	bl	137fc <por_write_tag>
   13220:	cmp	r0, #0
   13224:	popne	{r4, r5, fp, pc}
   13228:	vldr	d0, [pc, #16]	; 13240 <por_emit_precision_record+0x38>
   1322c:	mov	r0, r5
   13230:	mov	r1, r4
   13234:	pop	{r4, r5, fp, lr}
   13238:	b	138a0 <por_write_double>
   1323c:	nop	{0}
   13240:	.word	0x00000000
   13244:	.word	0x40490000

00013248 <por_emit_case_weight_variable_record>:
   13248:	push	{r4, r5, fp, lr}
   1324c:	add	fp, sp, #8
   13250:	mov	r5, r0
   13254:	ldr	r0, [r0, #224]	; 0xe0
   13258:	cmp	r0, #0
   1325c:	beq	13294 <por_emit_case_weight_variable_record+0x4c>
   13260:	mov	r4, r1
   13264:	mov	r0, r5
   13268:	mov	r2, #54	; 0x36
   1326c:	bl	137fc <por_write_tag>
   13270:	cmp	r0, #0
   13274:	popne	{r4, r5, fp, pc}
   13278:	ldr	r0, [r5, #224]	; 0xe0
   1327c:	bl	4e00 <readstat_variable_get_name@plt>
   13280:	mov	r2, r0
   13284:	mov	r0, r5
   13288:	mov	r1, r4
   1328c:	pop	{r4, r5, fp, lr}
   13290:	b	13828 <por_write_string_field>
   13294:	mov	r0, #0
   13298:	pop	{r4, r5, fp, pc}

0001329c <por_emit_variable_records>:
   1329c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   132a0:	add	fp, sp, #24
   132a4:	sub	sp, sp, #16
   132a8:	mov	r5, r0
   132ac:	ldr	r0, [r0, #28]
   132b0:	cmp	r0, #1
   132b4:	blt	133bc <por_emit_variable_records+0x120>
   132b8:	mov	r9, r1
   132bc:	mov	r6, #0
   132c0:	add	r8, sp, #4
   132c4:	mov	r0, r5
   132c8:	mov	r1, r6
   132cc:	bl	4e18 <readstat_get_variable@plt>
   132d0:	mov	r7, r0
   132d4:	bl	4e00 <readstat_variable_get_name@plt>
   132d8:	mov	r4, r0
   132dc:	mov	r0, r5
   132e0:	mov	r1, r9
   132e4:	mov	r2, #55	; 0x37
   132e8:	bl	137fc <por_write_tag>
   132ec:	cmp	r0, #0
   132f0:	bne	133c0 <por_emit_variable_records+0x124>
   132f4:	ldr	r1, [r7]
   132f8:	mov	r0, #0
   132fc:	cmp	r1, #0
   13300:	ldreq	r0, [r7, #1600]	; 0x640
   13304:	vmov	s0, r0
   13308:	vcvt.f64.u32	d0, s0
   1330c:	mov	r0, r5
   13310:	mov	r1, r9
   13314:	bl	138a0 <por_write_double>
   13318:	cmp	r0, #0
   1331c:	bne	133c0 <por_emit_variable_records+0x124>
   13320:	mov	r0, r5
   13324:	mov	r1, r9
   13328:	mov	r2, r4
   1332c:	bl	13828 <por_write_string_field>
   13330:	cmp	r0, #0
   13334:	bne	133c0 <por_emit_variable_records+0x124>
   13338:	mov	r0, r7
   1333c:	mov	r1, r8
   13340:	bl	4b6c <spss_format_for_variable@plt>
   13344:	cmp	r0, #0
   13348:	bne	133c0 <por_emit_variable_records+0x124>
   1334c:	mov	r0, r5
   13350:	mov	r1, r9
   13354:	mov	r2, r8
   13358:	bl	13940 <por_emit_format>
   1335c:	cmp	r0, #0
   13360:	bne	133c0 <por_emit_variable_records+0x124>
   13364:	mov	r0, r5
   13368:	mov	r1, r9
   1336c:	mov	r2, r8
   13370:	bl	13940 <por_emit_format>
   13374:	cmp	r0, #0
   13378:	bne	133c0 <por_emit_variable_records+0x124>
   1337c:	mov	r0, r5
   13380:	mov	r1, r9
   13384:	mov	r2, r7
   13388:	bl	139a0 <por_emit_missing_values_records>
   1338c:	cmp	r0, #0
   13390:	bne	133c0 <por_emit_variable_records+0x124>
   13394:	mov	r0, r5
   13398:	mov	r1, r9
   1339c:	mov	r2, r7
   133a0:	bl	139b4 <por_emit_variable_label_record>
   133a4:	cmp	r0, #0
   133a8:	bne	133c0 <por_emit_variable_records+0x124>
   133ac:	add	r6, r6, #1
   133b0:	ldr	r0, [r5, #28]
   133b4:	cmp	r6, r0
   133b8:	blt	132c4 <por_emit_variable_records+0x28>
   133bc:	mov	r0, #0
   133c0:	sub	sp, fp, #24
   133c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000133c8 <por_emit_value_label_records>:
   133c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133cc:	add	fp, sp, #28
   133d0:	sub	sp, sp, #4
   133d4:	mov	r5, r0
   133d8:	ldr	r0, [r0, #40]	; 0x28
   133dc:	cmp	r0, #1
   133e0:	blt	13568 <por_emit_value_label_records+0x1a0>
   133e4:	mov	r9, r1
   133e8:	mov	r8, #0
   133ec:	b	13400 <por_emit_value_label_records+0x38>
   133f0:	add	r8, r8, #1
   133f4:	ldr	r0, [r5, #40]	; 0x28
   133f8:	cmp	r8, r0
   133fc:	bge	13568 <por_emit_value_label_records+0x1a0>
   13400:	mov	r0, r5
   13404:	mov	r1, r8
   13408:	bl	4ec0 <readstat_get_label_set@plt>
   1340c:	mov	r7, r0
   13410:	ldr	r0, [r0, #264]	; 0x108
   13414:	cmp	r0, #0
   13418:	beq	133f0 <por_emit_value_label_records+0x28>
   1341c:	ldr	r0, [r7, #276]	; 0x114
   13420:	cmp	r0, #0
   13424:	beq	133f0 <por_emit_value_label_records+0x28>
   13428:	ldr	sl, [r7]
   1342c:	mov	r0, r5
   13430:	mov	r1, r9
   13434:	mov	r2, #68	; 0x44
   13438:	bl	137fc <por_write_tag>
   1343c:	cmp	r0, #0
   13440:	bne	1356c <por_emit_value_label_records+0x1a4>
   13444:	vldr	s0, [r7, #276]	; 0x114
   13448:	vcvt.f64.s32	d0, s0
   1344c:	mov	r0, r5
   13450:	mov	r1, r9
   13454:	bl	138a0 <por_write_double>
   13458:	cmp	r0, #0
   1345c:	bne	1356c <por_emit_value_label_records+0x1a4>
   13460:	ldr	r0, [r7, #276]	; 0x114
   13464:	cmp	r0, #1
   13468:	blt	134a8 <por_emit_value_label_records+0xe0>
   1346c:	mov	r4, #0
   13470:	mov	r0, r7
   13474:	mov	r1, r4
   13478:	bl	4ee4 <readstat_get_label_set_variable@plt>
   1347c:	bl	4e00 <readstat_variable_get_name@plt>
   13480:	mov	r2, r0
   13484:	mov	r0, r5
   13488:	mov	r1, r9
   1348c:	bl	13828 <por_write_string_field>
   13490:	cmp	r0, #0
   13494:	bne	1356c <por_emit_value_label_records+0x1a4>
   13498:	add	r4, r4, #1
   1349c:	ldr	r0, [r7, #276]	; 0x114
   134a0:	cmp	r4, r0
   134a4:	blt	13470 <por_emit_value_label_records+0xa8>
   134a8:	vldr	s0, [r7, #264]	; 0x108
   134ac:	vcvt.f64.s32	d0, s0
   134b0:	mov	r0, r5
   134b4:	mov	r1, r9
   134b8:	bl	138a0 <por_write_double>
   134bc:	cmp	r0, #0
   134c0:	bne	1356c <por_emit_value_label_records+0x1a4>
   134c4:	ldr	r0, [r7, #264]	; 0x108
   134c8:	cmp	r0, #1
   134cc:	blt	133f0 <por_emit_value_label_records+0x28>
   134d0:	mov	r6, #0
   134d4:	mov	r0, r7
   134d8:	mov	r1, r6
   134dc:	bl	4f68 <readstat_get_value_label@plt>
   134e0:	mov	r4, r0
   134e4:	cmp	sl, #5
   134e8:	beq	13518 <por_emit_value_label_records+0x150>
   134ec:	cmp	sl, #3
   134f0:	beq	13520 <por_emit_value_label_records+0x158>
   134f4:	cmp	sl, #0
   134f8:	bne	1353c <por_emit_value_label_records+0x174>
   134fc:	ldrd	r2, [r4, #16]
   13500:	mov	r0, r5
   13504:	mov	r1, r9
   13508:	bl	1385c <por_write_string_field_n>
   1350c:	cmp	r0, #0
   13510:	beq	1353c <por_emit_value_label_records+0x174>
   13514:	b	1356c <por_emit_value_label_records+0x1a4>
   13518:	vldr	d0, [r4]
   1351c:	b	13528 <por_emit_value_label_records+0x160>
   13520:	vldr	s0, [r4, #8]
   13524:	vcvt.f64.s32	d0, s0
   13528:	mov	r0, r5
   1352c:	mov	r1, r9
   13530:	bl	138a0 <por_write_double>
   13534:	cmp	r0, #0
   13538:	bne	1356c <por_emit_value_label_records+0x1a4>
   1353c:	ldrd	r2, [r4, #24]
   13540:	mov	r0, r5
   13544:	mov	r1, r9
   13548:	bl	1385c <por_write_string_field_n>
   1354c:	cmp	r0, #0
   13550:	bne	1356c <por_emit_value_label_records+0x1a4>
   13554:	add	r6, r6, #1
   13558:	ldr	r0, [r7, #264]	; 0x108
   1355c:	cmp	r6, r0
   13560:	blt	134d4 <por_emit_value_label_records+0x10c>
   13564:	b	133f0 <por_emit_value_label_records+0x28>
   13568:	mov	r0, #0
   1356c:	sub	sp, fp, #28
   13570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013574 <por_emit_document_record>:
   13574:	push	{r4, r5, r6, r7, fp, lr}
   13578:	add	fp, sp, #16
   1357c:	mov	r4, r1
   13580:	mov	r5, r0
   13584:	mov	r2, #69	; 0x45
   13588:	bl	137fc <por_write_tag>
   1358c:	cmp	r0, #0
   13590:	beq	13598 <por_emit_document_record+0x24>
   13594:	pop	{r4, r5, r6, r7, fp, pc}
   13598:	vldr	s0, [r5, #52]	; 0x34
   1359c:	vcvt.f64.s32	d0, s0
   135a0:	mov	r0, r5
   135a4:	mov	r1, r4
   135a8:	bl	138a0 <por_write_double>
   135ac:	cmp	r0, #0
   135b0:	popne	{r4, r5, r6, r7, fp, pc}
   135b4:	ldr	r0, [r5, #52]	; 0x34
   135b8:	cmp	r0, #1
   135bc:	blt	13610 <por_emit_document_record+0x9c>
   135c0:	mov	r7, #0
   135c4:	ldr	r0, [r5, #48]	; 0x30
   135c8:	ldr	r6, [r0, r7, lsl #2]
   135cc:	mov	r0, r6
   135d0:	bl	4c8c <strlen@plt>
   135d4:	cmp	r0, #80	; 0x50
   135d8:	bhi	13618 <por_emit_document_record+0xa4>
   135dc:	mov	r3, r0
   135e0:	mov	r0, r5
   135e4:	mov	r1, r4
   135e8:	mov	r2, r6
   135ec:	bl	1385c <por_write_string_field_n>
   135f0:	cmp	r0, #0
   135f4:	bne	13594 <por_emit_document_record+0x20>
   135f8:	add	r7, r7, #1
   135fc:	ldr	r1, [r5, #52]	; 0x34
   13600:	mov	r0, #0
   13604:	cmp	r7, r1
   13608:	blt	135c4 <por_emit_document_record+0x50>
   1360c:	b	13594 <por_emit_document_record+0x20>
   13610:	mov	r0, #0
   13614:	pop	{r4, r5, r6, r7, fp, pc}
   13618:	mov	r0, #32
   1361c:	pop	{r4, r5, r6, r7, fp, pc}

00013620 <por_emit_data_tag>:
   13620:	mov	r2, #70	; 0x46
   13624:	b	137fc <por_write_tag>

00013628 <por_write_ctx_free>:
   13628:	push	{r4, sl, fp, lr}
   1362c:	add	fp, sp, #8
   13630:	mov	r4, r0
   13634:	ldr	r0, [r0]
   13638:	cmp	r0, #0
   1363c:	beq	13644 <por_write_ctx_free+0x1c>
   13640:	bl	4938 <free@plt>
   13644:	mov	r0, r4
   13648:	pop	{r4, sl, fp, lr}
   1364c:	b	4938 <free@plt>

00013650 <por_write_ctx_init>:
   13650:	push	{r4, r5, r6, sl, fp, lr}
   13654:	add	fp, sp, #16
   13658:	mov	r0, #1
   1365c:	mov	r1, #8
   13660:	bl	47d0 <calloc@plt>
   13664:	mov	r4, r0
   13668:	mov	r0, #0
   1366c:	ldr	r6, [pc, #128]	; 136f4 <por_write_ctx_init+0xa4>
   13670:	ldr	r6, [pc, r6]
   13674:	mov	r1, #0
   13678:	add	r2, r6, r0
   1367c:	ldrh	r2, [r2]
   13680:	uxth	r3, r1
   13684:	cmp	r2, r3
   13688:	movhi	r1, r2
   1368c:	add	r0, r0, #2
   13690:	cmp	r0, #512	; 0x200
   13694:	bne	13678 <por_write_ctx_init+0x28>
   13698:	mov	r0, #1
   1369c:	uxtah	r5, r0, r1
   136a0:	mov	r0, r5
   136a4:	bl	4b90 <malloc@plt>
   136a8:	stm	r4, {r0, r5}
   136ac:	mov	r1, #0
   136b0:	ldr	r2, [pc, #64]	; 136f8 <por_write_ctx_init+0xa8>
   136b4:	ldr	r2, [pc, r2]
   136b8:	ldrh	r3, [r6]
   136bc:	cmp	r3, #0
   136c0:	ldrbne	r5, [r2, r1]
   136c4:	strbne	r5, [r0, r3]
   136c8:	add	r3, r2, r1
   136cc:	ldrsb	r3, [r3]
   136d0:	uxtb	r5, r3
   136d4:	cmp	r5, #0
   136d8:	strbne	r5, [r0, r3]
   136dc:	add	r6, r6, #2
   136e0:	add	r1, r1, #1
   136e4:	cmp	r1, #256	; 0x100
   136e8:	bne	136b8 <por_write_ctx_init+0x68>
   136ec:	mov	r0, r4
   136f0:	pop	{r4, r5, r6, sl, fp, pc}
   136f4:	.word	0x00031c8c
   136f8:	.word	0x00031c54

000136fc <por_write_bytes>:
   136fc:	push	{fp, lr}
   13700:	mov	fp, sp
   13704:	sub	sp, sp, #8
   13708:	ldr	r3, [pc, #20]	; 13724 <por_write_bytes+0x28>
   1370c:	add	r3, pc, r3
   13710:	str	r3, [sp]
   13714:	mov	r3, #80	; 0x50
   13718:	bl	4fbc <readstat_write_bytes_as_lines@plt>
   1371c:	mov	sp, fp
   13720:	pop	{fp, pc}
   13724:	.word	0x00012b78

00013728 <por_write_string_n>:
   13728:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1372c:	add	fp, sp, #24
   13730:	sub	sp, sp, #24
   13734:	sub	sp, sp, #1024	; 0x400
   13738:	mov	r6, r3
   1373c:	mov	r7, r2
   13740:	mov	r5, r1
   13744:	mov	r9, r0
   13748:	mov	r0, r3
   1374c:	bl	4b90 <malloc@plt>
   13750:	mov	r4, r0
   13754:	ldm	r5, {r0, r1}
   13758:	stm	sp, {r0, r1}
   1375c:	mov	r0, r7
   13760:	mov	r1, r6
   13764:	mov	r2, r4
   13768:	mov	r3, r6
   1376c:	bl	4e30 <por_utf8_decode@plt>
   13770:	cmn	r0, #1
   13774:	beq	13798 <por_write_string_n+0x70>
   13778:	mov	r2, r0
   1377c:	mov	r0, r9
   13780:	mov	r1, r4
   13784:	bl	136fc <por_write_bytes>
   13788:	mov	r8, r0
   1378c:	cmp	r4, #0
   13790:	bne	137e4 <por_write_string_n+0xbc>
   13794:	b	137ec <por_write_string_n+0xc4>
   13798:	ldr	r0, [r9, #296]	; 0x128
   1379c:	mov	r8, #16
   137a0:	cmp	r0, #0
   137a4:	beq	137dc <por_write_string_n+0xb4>
   137a8:	mov	r0, #0
   137ac:	str	r6, [sp]
   137b0:	stmib	sp, {r0, r6, r7}
   137b4:	add	r5, sp, #20
   137b8:	ldr	r2, [pc, #56]	; 137f8 <por_write_string_n+0xd0>
   137bc:	add	r2, pc, r2
   137c0:	mov	r0, r5
   137c4:	mov	r1, #1024	; 0x400
   137c8:	bl	4d04 <snprintf@plt>
   137cc:	ldr	r2, [r9, #296]	; 0x128
   137d0:	ldr	r1, [r9, #304]	; 0x130
   137d4:	mov	r0, r5
   137d8:	blx	r2
   137dc:	cmp	r4, #0
   137e0:	beq	137ec <por_write_string_n+0xc4>
   137e4:	mov	r0, r4
   137e8:	bl	4938 <free@plt>
   137ec:	mov	r0, r8
   137f0:	sub	sp, fp, #24
   137f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   137f8:	.word	0x00012acb

000137fc <por_write_tag>:
   137fc:	push	{fp, lr}
   13800:	mov	fp, sp
   13804:	sub	sp, sp, #8
   13808:	mov	r3, #0
   1380c:	strb	r3, [fp, #-1]
   13810:	strb	r2, [fp, #-2]
   13814:	sub	r2, fp, #2
   13818:	mov	r3, #1
   1381c:	bl	13728 <por_write_string_n>
   13820:	mov	sp, fp
   13824:	pop	{fp, pc}

00013828 <por_write_string_field>:
   13828:	push	{r4, r5, r6, sl, fp, lr}
   1382c:	add	fp, sp, #16
   13830:	mov	r4, r2
   13834:	mov	r5, r1
   13838:	mov	r6, r0
   1383c:	mov	r0, r2
   13840:	bl	4c8c <strlen@plt>
   13844:	mov	r3, r0
   13848:	mov	r0, r6
   1384c:	mov	r1, r5
   13850:	mov	r2, r4
   13854:	pop	{r4, r5, r6, sl, fp, lr}
   13858:	b	1385c <por_write_string_field_n>

0001385c <por_write_string_field_n>:
   1385c:	push	{r4, r5, r6, r7, fp, lr}
   13860:	add	fp, sp, #16
   13864:	mov	r4, r3
   13868:	mov	r5, r2
   1386c:	mov	r6, r1
   13870:	mov	r7, r0
   13874:	vmov	s0, r4
   13878:	vcvt.f64.u32	d0, s0
   1387c:	bl	138a0 <por_write_double>
   13880:	cmp	r0, #0
   13884:	popne	{r4, r5, r6, r7, fp, pc}
   13888:	mov	r0, r7
   1388c:	mov	r1, r6
   13890:	mov	r2, r5
   13894:	mov	r3, r4
   13898:	pop	{r4, r5, r6, r7, fp, lr}
   1389c:	b	13728 <por_write_string_n>

000138a0 <por_write_double>:
   138a0:	push	{r4, r5, r6, sl, fp, lr}
   138a4:	add	fp, sp, #16
   138a8:	vpush	{d8}
   138ac:	sub	sp, sp, #264	; 0x108
   138b0:	sub	sp, sp, #1024	; 0x400
   138b4:	vorr	d8, d0, d0
   138b8:	mov	r5, r1
   138bc:	mov	r4, r0
   138c0:	add	r0, sp, #8
   138c4:	mov	r1, #256	; 0x100
   138c8:	bl	12ba4 <por_write_double_to_buffer>
   138cc:	cmn	r0, #1
   138d0:	beq	138f0 <por_write_double+0x50>
   138d4:	mov	r3, r0
   138d8:	add	r2, sp, #8
   138dc:	mov	r0, r4
   138e0:	mov	r1, r5
   138e4:	bl	13728 <por_write_string_n>
   138e8:	mov	r5, r0
   138ec:	b	1392c <por_write_double+0x8c>
   138f0:	ldr	r0, [r4, #296]	; 0x128
   138f4:	mov	r5, #13
   138f8:	cmp	r0, #0
   138fc:	beq	1392c <por_write_double+0x8c>
   13900:	vstr	d8, [sp]
   13904:	add	r6, sp, #264	; 0x108
   13908:	ldr	r2, [pc, #44]	; 1393c <por_write_double+0x9c>
   1390c:	add	r2, pc, r2
   13910:	mov	r0, r6
   13914:	mov	r1, #1024	; 0x400
   13918:	bl	4d04 <snprintf@plt>
   1391c:	ldr	r2, [r4, #296]	; 0x128
   13920:	ldr	r1, [r4, #304]	; 0x130
   13924:	mov	r0, r6
   13928:	blx	r2
   1392c:	mov	r0, r5
   13930:	sub	sp, fp, #24
   13934:	vpop	{d8}
   13938:	pop	{r4, r5, r6, sl, fp, pc}
   1393c:	.word	0x000129a7

00013940 <por_emit_format>:
   13940:	push	{r4, r5, r6, sl, fp, lr}
   13944:	add	fp, sp, #16
   13948:	mov	r6, r2
   1394c:	mov	r4, r1
   13950:	mov	r5, r0
   13954:	vldr	s0, [r2]
   13958:	vcvt.f64.s32	d0, s0
   1395c:	bl	138a0 <por_write_double>
   13960:	cmp	r0, #0
   13964:	popne	{r4, r5, r6, sl, fp, pc}
   13968:	vldr	s0, [r6, #4]
   1396c:	vcvt.f64.s32	d0, s0
   13970:	mov	r0, r5
   13974:	mov	r1, r4
   13978:	bl	138a0 <por_write_double>
   1397c:	cmp	r0, #0
   13980:	beq	13988 <por_emit_format+0x48>
   13984:	pop	{r4, r5, r6, sl, fp, pc}
   13988:	vldr	s0, [r6, #8]
   1398c:	vcvt.f64.s32	d0, s0
   13990:	mov	r0, r5
   13994:	mov	r1, r4
   13998:	pop	{r4, r5, r6, sl, fp, lr}
   1399c:	b	138a0 <por_write_double>

000139a0 <por_emit_missing_values_records>:
   139a0:	ldr	r3, [r2]
   139a4:	cmp	r3, #5
   139a8:	bne	139b0 <por_emit_missing_values_records+0x10>
   139ac:	b	13a0c <por_emit_missing_double_values_records>
   139b0:	b	13c64 <por_emit_missing_string_values_records>

000139b4 <por_emit_variable_label_record>:
   139b4:	push	{r4, r5, r6, sl, fp, lr}
   139b8:	add	fp, sp, #16
   139bc:	mov	r4, r1
   139c0:	mov	r5, r0
   139c4:	mov	r0, r2
   139c8:	bl	4e9c <readstat_variable_get_label@plt>
   139cc:	cmp	r0, #0
   139d0:	beq	13a04 <por_emit_variable_label_record+0x50>
   139d4:	mov	r6, r0
   139d8:	mov	r0, r5
   139dc:	mov	r1, r4
   139e0:	mov	r2, #67	; 0x43
   139e4:	bl	137fc <por_write_tag>
   139e8:	cmp	r0, #0
   139ec:	popne	{r4, r5, r6, sl, fp, pc}
   139f0:	mov	r0, r5
   139f4:	mov	r1, r4
   139f8:	mov	r2, r6
   139fc:	pop	{r4, r5, r6, sl, fp, lr}
   13a00:	b	13828 <por_write_string_field>
   13a04:	mov	r0, #0
   13a08:	pop	{r4, r5, r6, sl, fp, pc}

00013a0c <por_emit_missing_double_values_records>:
   13a0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a10:	add	fp, sp, #28
   13a14:	sub	sp, sp, #4
   13a18:	vpush	{d8-d9}
   13a1c:	sub	sp, sp, #40	; 0x28
   13a20:	mov	r4, r2
   13a24:	mov	r5, r1
   13a28:	mov	r6, r0
   13a2c:	mov	r0, r2
   13a30:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   13a34:	cmp	r0, #1
   13a38:	blt	13b74 <por_emit_missing_double_values_records+0x168>
   13a3c:	mov	sl, r0
   13a40:	add	r0, sp, #8
   13a44:	add	r0, r0, #8
   13a48:	str	r0, [sp, #4]
   13a4c:	add	r0, sp, #24
   13a50:	add	r9, r0, #8
   13a54:	mov	r8, #0
   13a58:	mov	r7, #0
   13a5c:	add	r0, sp, #24
   13a60:	mov	r1, r4
   13a64:	mov	r2, r7
   13a68:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   13a6c:	add	r0, sp, #8
   13a70:	mov	r1, r4
   13a74:	mov	r2, r7
   13a78:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   13a7c:	ldrd	r2, [r9]
   13a80:	ldr	r0, [sp, #24]
   13a84:	ldr	r1, [sp, #28]
   13a88:	bl	4c38 <readstat_double_value@plt>
   13a8c:	vmov.f64	d8, d0
   13a90:	ldr	r0, [sp, #4]
   13a94:	ldrd	r2, [r0]
   13a98:	ldr	r0, [sp, #8]
   13a9c:	ldr	r1, [sp, #12]
   13aa0:	bl	4c38 <readstat_double_value@plt>
   13aa4:	vmov.f64	d9, d0
   13aa8:	vmov.f64	d0, d8
   13aac:	bl	4a58 <__isinf@plt>
   13ab0:	cmp	r0, #0
   13ab4:	beq	13ae0 <por_emit_missing_double_values_records+0xd4>
   13ab8:	mov	r0, r6
   13abc:	mov	r1, r5
   13ac0:	mov	r2, #57	; 0x39
   13ac4:	bl	137fc <por_write_tag>
   13ac8:	cmp	r0, #0
   13acc:	bne	13c54 <por_emit_missing_double_values_records+0x248>
   13ad0:	mov	r0, r6
   13ad4:	mov	r1, r5
   13ad8:	vmov.f64	d0, d9
   13adc:	b	13b14 <por_emit_missing_double_values_records+0x108>
   13ae0:	vmov.f64	d0, d9
   13ae4:	bl	4a58 <__isinf@plt>
   13ae8:	cmp	r0, #0
   13aec:	beq	13b34 <por_emit_missing_double_values_records+0x128>
   13af0:	mov	r0, r6
   13af4:	mov	r1, r5
   13af8:	mov	r2, #65	; 0x41
   13afc:	bl	137fc <por_write_tag>
   13b00:	cmp	r0, #0
   13b04:	bne	13c54 <por_emit_missing_double_values_records+0x248>
   13b08:	mov	r0, r6
   13b0c:	mov	r1, r5
   13b10:	vmov.f64	d0, d8
   13b14:	bl	138a0 <por_write_double>
   13b18:	cmp	r0, #0
   13b1c:	bne	13c54 <por_emit_missing_double_values_records+0x248>
   13b20:	add	r8, r8, #2
   13b24:	add	r7, r7, #1
   13b28:	cmp	sl, r7
   13b2c:	bne	13a5c <por_emit_missing_double_values_records+0x50>
   13b30:	b	13b7c <por_emit_missing_double_values_records+0x170>
   13b34:	vcmp.f64	d8, d9
   13b38:	vmrs	APSR_nzcv, fpscr
   13b3c:	beq	13b24 <por_emit_missing_double_values_records+0x118>
   13b40:	mov	r0, r6
   13b44:	mov	r1, r5
   13b48:	mov	r2, #66	; 0x42
   13b4c:	bl	137fc <por_write_tag>
   13b50:	cmp	r0, #0
   13b54:	bne	13c54 <por_emit_missing_double_values_records+0x248>
   13b58:	mov	r0, r6
   13b5c:	mov	r1, r5
   13b60:	vmov.f64	d0, d8
   13b64:	bl	138a0 <por_write_double>
   13b68:	cmp	r0, #0
   13b6c:	beq	13ad0 <por_emit_missing_double_values_records+0xc4>
   13b70:	b	13c54 <por_emit_missing_double_values_records+0x248>
   13b74:	mov	r0, #0
   13b78:	b	13c54 <por_emit_missing_double_values_records+0x248>
   13b7c:	cmp	sl, #1
   13b80:	blt	13c48 <por_emit_missing_double_values_records+0x23c>
   13b84:	mov	r7, #0
   13b88:	b	13b9c <por_emit_missing_double_values_records+0x190>
   13b8c:	add	r8, r8, #1
   13b90:	add	r7, r7, #1
   13b94:	cmp	sl, r7
   13b98:	beq	13c48 <por_emit_missing_double_values_records+0x23c>
   13b9c:	add	r0, sp, #24
   13ba0:	mov	r1, r4
   13ba4:	mov	r2, r7
   13ba8:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   13bac:	add	r0, sp, #8
   13bb0:	mov	r1, r4
   13bb4:	mov	r2, r7
   13bb8:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   13bbc:	ldrd	r2, [r9]
   13bc0:	ldr	r0, [sp, #24]
   13bc4:	ldr	r1, [sp, #28]
   13bc8:	bl	4c38 <readstat_double_value@plt>
   13bcc:	vmov.f64	d8, d0
   13bd0:	ldr	r0, [sp, #4]
   13bd4:	ldrd	r2, [r0]
   13bd8:	ldr	r0, [sp, #8]
   13bdc:	ldr	r1, [sp, #12]
   13be0:	bl	4c38 <readstat_double_value@plt>
   13be4:	vcmp.f64	d8, d0
   13be8:	vmrs	APSR_nzcv, fpscr
   13bec:	bne	13b90 <por_emit_missing_double_values_records+0x184>
   13bf0:	vmov.f64	d9, d0
   13bf4:	vmov.f64	d0, d8
   13bf8:	bl	4a58 <__isinf@plt>
   13bfc:	cmp	r0, #0
   13c00:	bne	13b90 <por_emit_missing_double_values_records+0x184>
   13c04:	vmov.f64	d0, d9
   13c08:	bl	4a58 <__isinf@plt>
   13c0c:	cmp	r0, #0
   13c10:	bne	13b90 <por_emit_missing_double_values_records+0x184>
   13c14:	mov	r0, r6
   13c18:	mov	r1, r5
   13c1c:	mov	r2, #56	; 0x38
   13c20:	bl	137fc <por_write_tag>
   13c24:	cmp	r0, #0
   13c28:	bne	13c54 <por_emit_missing_double_values_records+0x248>
   13c2c:	mov	r0, r6
   13c30:	mov	r1, r5
   13c34:	vmov.f64	d0, d8
   13c38:	bl	138a0 <por_write_double>
   13c3c:	cmp	r0, #0
   13c40:	beq	13b8c <por_emit_missing_double_values_records+0x180>
   13c44:	b	13c54 <por_emit_missing_double_values_records+0x248>
   13c48:	mov	r0, #0
   13c4c:	cmp	r8, #3
   13c50:	movwgt	r0, #31
   13c54:	sub	sp, fp, #48	; 0x30
   13c58:	vpop	{d8-d9}
   13c5c:	add	sp, sp, #4
   13c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013c64 <por_emit_missing_string_values_records>:
   13c64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c68:	add	fp, sp, #28
   13c6c:	sub	sp, sp, #60	; 0x3c
   13c70:	mov	r4, r2
   13c74:	mov	r5, r1
   13c78:	mov	r6, r0
   13c7c:	mov	r0, r2
   13c80:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   13c84:	cmp	r0, #1
   13c88:	blt	13da0 <por_emit_missing_string_values_records+0x13c>
   13c8c:	mov	r9, r0
   13c90:	str	r6, [sp, #8]
   13c94:	str	r5, [sp, #12]
   13c98:	add	r7, sp, #24
   13c9c:	add	sl, r7, #8
   13ca0:	add	r0, sp, #40	; 0x28
   13ca4:	add	r0, r0, #8
   13ca8:	str	r0, [sp, #20]
   13cac:	mov	r0, #0
   13cb0:	str	r0, [sp, #16]
   13cb4:	mov	r5, #0
   13cb8:	str	sl, [sp, #4]
   13cbc:	b	13ce0 <por_emit_missing_string_values_records+0x7c>
   13cc0:	ldr	r0, [sp, #16]
   13cc4:	add	r0, r0, #2
   13cc8:	str	r0, [sp, #16]
   13ccc:	add	r7, sp, #24
   13cd0:	ldr	sl, [sp, #4]
   13cd4:	add	r5, r5, #1
   13cd8:	cmp	r9, r5
   13cdc:	beq	13dac <por_emit_missing_string_values_records+0x148>
   13ce0:	add	r0, sp, #40	; 0x28
   13ce4:	mov	r1, r4
   13ce8:	mov	r2, r5
   13cec:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   13cf0:	mov	r0, r7
   13cf4:	mov	r1, r4
   13cf8:	mov	r2, r5
   13cfc:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   13d00:	ldr	r0, [sp, #20]
   13d04:	ldrd	r2, [r0]
   13d08:	ldr	r0, [sp, #40]	; 0x28
   13d0c:	ldr	r1, [sp, #44]	; 0x2c
   13d10:	bl	4a10 <readstat_string_value@plt>
   13d14:	mov	r8, r0
   13d18:	ldrd	r2, [sl]
   13d1c:	ldr	r0, [sp, #24]
   13d20:	ldr	r1, [sp, #28]
   13d24:	bl	4a10 <readstat_string_value@plt>
   13d28:	cmp	r8, #0
   13d2c:	movne	r6, r0
   13d30:	cmpne	r0, #0
   13d34:	beq	13cd4 <por_emit_missing_string_values_records+0x70>
   13d38:	mov	r0, r8
   13d3c:	mov	r1, r6
   13d40:	bl	4878 <strcmp@plt>
   13d44:	cmp	r0, #0
   13d48:	beq	13cd4 <por_emit_missing_string_values_records+0x70>
   13d4c:	ldr	r7, [sp, #8]
   13d50:	mov	r0, r7
   13d54:	ldr	sl, [sp, #12]
   13d58:	mov	r1, sl
   13d5c:	mov	r2, #66	; 0x42
   13d60:	bl	137fc <por_write_tag>
   13d64:	cmp	r0, #0
   13d68:	bne	13da4 <por_emit_missing_string_values_records+0x140>
   13d6c:	mov	r0, r7
   13d70:	mov	r1, sl
   13d74:	mov	r2, r8
   13d78:	bl	13828 <por_write_string_field>
   13d7c:	cmp	r0, #0
   13d80:	bne	13da4 <por_emit_missing_string_values_records+0x140>
   13d84:	mov	r0, r7
   13d88:	mov	r1, sl
   13d8c:	mov	r2, r6
   13d90:	bl	13828 <por_write_string_field>
   13d94:	cmp	r0, #0
   13d98:	beq	13cc0 <por_emit_missing_string_values_records+0x5c>
   13d9c:	b	13da4 <por_emit_missing_string_values_records+0x140>
   13da0:	mov	r0, #0
   13da4:	sub	sp, fp, #28
   13da8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dac:	cmp	r9, #1
   13db0:	blt	13e80 <por_emit_missing_string_values_records+0x21c>
   13db4:	mov	r5, #0
   13db8:	ldr	r8, [sp, #12]
   13dbc:	b	13dcc <por_emit_missing_string_values_records+0x168>
   13dc0:	add	r5, r5, #1
   13dc4:	cmp	r9, r5
   13dc8:	beq	13e80 <por_emit_missing_string_values_records+0x21c>
   13dcc:	add	r0, sp, #40	; 0x28
   13dd0:	mov	r1, r4
   13dd4:	mov	r2, r5
   13dd8:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   13ddc:	mov	r0, r7
   13de0:	mov	r1, r4
   13de4:	mov	r2, r5
   13de8:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   13dec:	ldr	r0, [sp, #20]
   13df0:	ldrd	r2, [r0]
   13df4:	ldr	r0, [sp, #40]	; 0x28
   13df8:	ldr	r1, [sp, #44]	; 0x2c
   13dfc:	bl	4a10 <readstat_string_value@plt>
   13e00:	mov	r6, r0
   13e04:	ldrd	r2, [sl]
   13e08:	ldr	r0, [sp, #24]
   13e0c:	ldr	r1, [sp, #28]
   13e10:	bl	4a10 <readstat_string_value@plt>
   13e14:	cmp	r6, #0
   13e18:	movne	r1, r0
   13e1c:	cmpne	r0, #0
   13e20:	beq	13dc0 <por_emit_missing_string_values_records+0x15c>
   13e24:	mov	r0, r6
   13e28:	bl	4878 <strcmp@plt>
   13e2c:	cmp	r0, #0
   13e30:	bne	13dc0 <por_emit_missing_string_values_records+0x15c>
   13e34:	ldr	r7, [sp, #8]
   13e38:	mov	r0, r7
   13e3c:	mov	r1, r8
   13e40:	mov	r2, #56	; 0x38
   13e44:	bl	137fc <por_write_tag>
   13e48:	cmp	r0, #0
   13e4c:	bne	13da4 <por_emit_missing_string_values_records+0x140>
   13e50:	mov	r0, r7
   13e54:	mov	r1, r8
   13e58:	mov	r2, r6
   13e5c:	bl	13828 <por_write_string_field>
   13e60:	cmp	r0, #0
   13e64:	bne	13da4 <por_emit_missing_string_values_records+0x140>
   13e68:	ldr	r0, [sp, #16]
   13e6c:	add	r0, r0, #1
   13e70:	str	r0, [sp, #16]
   13e74:	add	r7, sp, #24
   13e78:	ldr	sl, [sp, #4]
   13e7c:	b	13dc0 <por_emit_missing_string_values_records+0x15c>
   13e80:	mov	r0, #0
   13e84:	ldr	r1, [sp, #16]
   13e88:	cmp	r1, #3
   13e8c:	movwgt	r0, #31
   13e90:	sub	sp, fp, #28
   13e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013e98 <por_finish>:
   13e98:	ldr	r3, [pc, #12]	; 13eac <por_finish+0x14>
   13e9c:	add	r3, pc, r3
   13ea0:	mov	r1, #90	; 0x5a
   13ea4:	mov	r2, #80	; 0x50
   13ea8:	b	4f80 <readstat_write_line_padding@plt>
   13eac:	.word	0x000123e8

00013eb0 <sav_ctx_init>:
   13eb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13eb4:	add	fp, sp, #24
   13eb8:	mov	r8, r1
   13ebc:	mov	r7, r0
   13ec0:	mov	r0, #1
   13ec4:	mov	r1, #440	; 0x1b8
   13ec8:	bl	4a28 <readstat_calloc@plt>
   13ecc:	mov	r9, #0
   13ed0:	cmp	r0, #0
   13ed4:	beq	14034 <sav_ctx_init+0x184>
   13ed8:	mov	r6, r0
   13edc:	ldr	r1, [pc, #376]	; 1405c <sav_ctx_init+0x1ac>
   13ee0:	add	r1, pc, r1
   13ee4:	mov	r0, r7
   13ee8:	mov	r2, #4
   13eec:	bl	4c74 <bcmp@plt>
   13ef0:	cmp	r0, #0
   13ef4:	beq	13f1c <sav_ctx_init+0x6c>
   13ef8:	ldr	r1, [pc, #352]	; 14060 <sav_ctx_init+0x1b0>
   13efc:	add	r1, pc, r1
   13f00:	mov	r0, r7
   13f04:	mov	r2, #4
   13f08:	bl	4c74 <bcmp@plt>
   13f0c:	cmp	r0, #0
   13f10:	bne	1403c <sav_ctx_init+0x18c>
   13f14:	mov	r0, #3
   13f18:	b	13f20 <sav_ctx_init+0x70>
   13f1c:	mov	r0, #2
   13f20:	str	r0, [r6, #424]	; 0x1a8
   13f24:	ldr	r0, [r7, #64]	; 0x40
   13f28:	orr	r0, r0, #1
   13f2c:	subs	r0, r0, #3
   13f30:	movwne	r0, #1
   13f34:	ldrb	r1, [r6, #436]	; 0x1b4
   13f38:	and	r1, r1, #254	; 0xfe
   13f3c:	orr	r0, r1, r0
   13f40:	strb	r0, [r6, #436]	; 0x1b4
   13f44:	bl	492c <machine_is_little_endian@plt>
   13f48:	ldrb	r1, [r6, #436]	; 0x1b4
   13f4c:	and	r1, r1, #1
   13f50:	mov	r5, #1
   13f54:	cmp	r0, r1
   13f58:	mov	r0, #1
   13f5c:	movweq	r0, #2
   13f60:	str	r0, [r6, #432]	; 0x1b0
   13f64:	ldr	r0, [r7, #72]	; 0x48
   13f68:	cmp	r0, #1
   13f6c:	beq	13f8c <sav_ctx_init+0xdc>
   13f70:	bl	480c <byteswap4@plt>
   13f74:	cmp	r0, #1
   13f78:	beq	13f8c <sav_ctx_init+0xdc>
   13f7c:	ldr	r0, [r7, #72]	; 0x48
   13f80:	mov	r5, #2
   13f84:	cmp	r0, #2
   13f88:	bne	1404c <sav_ctx_init+0x19c>
   13f8c:	str	r5, [r6, #428]	; 0x1ac
   13f90:	ldr	r0, [r7, #80]	; 0x50
   13f94:	ldrb	r1, [r6, #436]	; 0x1b4
   13f98:	tst	r1, #1
   13f9c:	beq	13fa4 <sav_ctx_init+0xf4>
   13fa0:	bl	480c <byteswap4@plt>
   13fa4:	add	r5, r6, #392	; 0x188
   13fa8:	str	r0, [r6, #352]	; 0x160
   13fac:	ldr	r0, [r7, #76]	; 0x4c
   13fb0:	ldrb	r1, [r6, #436]	; 0x1b4
   13fb4:	tst	r1, #1
   13fb8:	beq	13fc0 <sav_ctx_init+0x110>
   13fbc:	bl	480c <byteswap4@plt>
   13fc0:	str	r0, [r6, #372]	; 0x174
   13fc4:	movw	r0, #65535	; 0xffff
   13fc8:	movt	r0, #32751	; 0x7fef
   13fcc:	mvn	r1, #0
   13fd0:	mvn	r2, #1048576	; 0x100000
   13fd4:	mvn	r3, #1
   13fd8:	orr	r4, r3, #1
   13fdc:	str	r4, [r5]
   13fe0:	stmib	r5, {r2, r3}
   13fe4:	str	r2, [r5, #12]
   13fe8:	str	r1, [r5, #16]
   13fec:	str	r0, [r5, #20]
   13ff0:	add	r0, r7, #84	; 0x54
   13ff4:	vld1.8	{d0}, [r0]
   13ff8:	ldrb	r0, [r6, #436]	; 0x1b4
   13ffc:	tst	r0, #1
   14000:	beq	14008 <sav_ctx_init+0x158>
   14004:	bl	4fa4 <byteswap_double@plt>
   14008:	mov	r0, #512	; 0x200
   1400c:	str	r0, [r6, #48]	; 0x30
   14010:	vstr	d0, [r6, #416]	; 0x1a0
   14014:	mov	r0, #512	; 0x200
   14018:	mov	r1, #4
   1401c:	bl	4a28 <readstat_calloc@plt>
   14020:	str	r0, [r6, #44]	; 0x2c
   14024:	cmp	r0, #0
   14028:	beq	1403c <sav_ctx_init+0x18c>
   1402c:	str	r8, [r6, #36]	; 0x24
   14030:	mov	r9, r6
   14034:	mov	r0, r9
   14038:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1403c:	mov	r0, r6
   14040:	bl	498c <sav_ctx_free@plt>
   14044:	mov	r0, r9
   14048:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1404c:	bl	480c <byteswap4@plt>
   14050:	cmp	r0, #2
   14054:	streq	r5, [r6, #428]	; 0x1ac
   14058:	b	13f90 <sav_ctx_init+0xe0>
   1405c:	.word	0x0001242d
   14060:	.word	0x00012416

00014064 <sav_ctx_free>:
   14064:	push	{r4, r5, fp, lr}
   14068:	add	fp, sp, #8
   1406c:	mov	r4, r0
   14070:	ldr	r0, [r0, #44]	; 0x2c
   14074:	cmp	r0, #0
   14078:	beq	140b0 <sav_ctx_free+0x4c>
   1407c:	ldr	r0, [r4, #44]	; 0x2c
   14080:	ldr	r1, [r4, #340]	; 0x154
   14084:	cmp	r1, #1
   14088:	blt	140ac <sav_ctx_free+0x48>
   1408c:	mov	r5, #0
   14090:	ldr	r0, [r0, r5, lsl #2]
   14094:	bl	4eb4 <spss_varinfo_free@plt>
   14098:	add	r5, r5, #1
   1409c:	ldr	r0, [r4, #44]	; 0x2c
   140a0:	ldr	r1, [r4, #340]	; 0x154
   140a4:	cmp	r5, r1
   140a8:	blt	14090 <sav_ctx_free+0x2c>
   140ac:	bl	4938 <free@plt>
   140b0:	ldr	r0, [r4, #52]	; 0x34
   140b4:	cmp	r0, #0
   140b8:	beq	14100 <sav_ctx_free+0x9c>
   140bc:	ldr	r0, [r4, #52]	; 0x34
   140c0:	ldr	r1, [r4, #348]	; 0x15c
   140c4:	cmp	r1, #1
   140c8:	blt	140fc <sav_ctx_free+0x98>
   140cc:	mov	r5, #0
   140d0:	b	140e8 <sav_ctx_free+0x84>
   140d4:	add	r5, r5, #1
   140d8:	ldr	r0, [r4, #52]	; 0x34
   140dc:	ldr	r1, [r4, #348]	; 0x15c
   140e0:	cmp	r5, r1
   140e4:	bge	140fc <sav_ctx_free+0x98>
   140e8:	ldr	r0, [r0, r5, lsl #2]
   140ec:	cmp	r0, #0
   140f0:	beq	140d4 <sav_ctx_free+0x70>
   140f4:	bl	4938 <free@plt>
   140f8:	b	140d4 <sav_ctx_free+0x70>
   140fc:	bl	4938 <free@plt>
   14100:	ldr	r0, [r4, #376]	; 0x178
   14104:	cmp	r0, #0
   14108:	beq	14110 <sav_ctx_free+0xac>
   1410c:	bl	4938 <free@plt>
   14110:	ldr	r0, [r4, #384]	; 0x180
   14114:	cmp	r0, #0
   14118:	beq	14120 <sav_ctx_free+0xbc>
   1411c:	bl	4938 <free@plt>
   14120:	ldr	r0, [r4, #336]	; 0x150
   14124:	cmp	r0, #0
   14128:	beq	14130 <sav_ctx_free+0xcc>
   1412c:	bl	4848 <iconv_close@plt>
   14130:	ldr	r0, [r4, #328]	; 0x148
   14134:	cmp	r0, #0
   14138:	beq	14140 <sav_ctx_free+0xdc>
   1413c:	bl	4938 <free@plt>
   14140:	mov	r0, r4
   14144:	pop	{r4, r5, fp, lr}
   14148:	b	4938 <free@plt>
   1414c:	andeq	r0, r0, r0

00014150 <sav_compressed_row_bound>:
   14150:	mov	r1, #8
   14154:	add	r1, r1, r0, lsr #3
   14158:	bic	r1, r1, #7
   1415c:	add	r0, r1, r0
   14160:	bx	lr
   14164:	nop	{0}

00014168 <sav_compress_row>:
   14168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1416c:	add	fp, sp, #28
   14170:	sub	sp, sp, #4
   14174:	vpush	{d8-d9}
   14178:	sub	sp, sp, #8
   1417c:	mov	r4, r0
   14180:	mov	r6, #0
   14184:	str	r6, [r0, #4]
   14188:	str	r6, [r0]
   1418c:	ldr	r0, [r3, #28]
   14190:	cmp	r0, #1
   14194:	blt	14344 <sav_compress_row+0x1dc>
   14198:	mov	r7, r1
   1419c:	mov	sl, #8
   141a0:	vldr	d8, [pc, #464]	; 14378 <sav_compress_row+0x210>
   141a4:	vldr	d9, [pc, #468]	; 14380 <sav_compress_row+0x218>
   141a8:	mov	r8, #0
   141ac:	mov	r6, #0
   141b0:	mov	r5, #0
   141b4:	str	r3, [sp, #4]
   141b8:	b	141d4 <sav_compress_row+0x6c>
   141bc:	add	r8, r8, #8
   141c0:	ldr	r3, [sp, #4]
   141c4:	ldr	r0, [r3, #28]
   141c8:	add	r5, r5, #1
   141cc:	cmp	r5, r0
   141d0:	bge	14348 <sav_compress_row+0x1e0>
   141d4:	mov	r0, r3
   141d8:	mov	r1, r5
   141dc:	bl	4e18 <readstat_get_variable@plt>
   141e0:	ldr	r1, [r0]
   141e4:	cmp	r1, #0
   141e8:	beq	14218 <sav_compress_row+0xb0>
   141ec:	mov	r0, r7
   141f0:	ldr	r1, [r0, r8]!
   141f4:	ldr	r2, [r0, #4]
   141f8:	mvn	r3, #1048576	; 0x100000
   141fc:	eor	r2, r2, r3
   14200:	mvn	r1, r1
   14204:	orrs	r1, r1, r2
   14208:	bne	142b8 <sav_compress_row+0x150>
   1420c:	mov	r0, #255	; 0xff
   14210:	strb	r0, [r4, r6]
   14214:	b	14318 <sav_compress_row+0x1b0>
   14218:	ldr	r9, [r0, #1596]	; 0x63c
   1421c:	cmp	r9, #0
   14220:	bne	14250 <sav_compress_row+0xe8>
   14224:	b	141c0 <sav_compress_row+0x58>
   14228:	mov	r0, r4
   1422c:	mov	r1, #0
   14230:	str	r1, [r0, sl]!
   14234:	str	r1, [r0, #4]
   14238:	add	r0, sl, #8
   1423c:	mov	r6, sl
   14240:	mov	sl, r0
   14244:	subs	r9, r9, #8
   14248:	add	r8, r8, #8
   1424c:	beq	141c0 <sav_compress_row+0x58>
   14250:	add	r0, r7, r8
   14254:	ldr	r1, [pc, #300]	; 14388 <sav_compress_row+0x220>
   14258:	add	r1, pc, r1
   1425c:	mov	r2, #8
   14260:	bl	4c74 <bcmp@plt>
   14264:	add	r1, r6, #1
   14268:	cmp	r0, #0
   1426c:	beq	142a0 <sav_compress_row+0x138>
   14270:	mov	r0, #253	; 0xfd
   14274:	strb	r0, [r4, r6]
   14278:	mov	r0, r7
   1427c:	ldr	r2, [r0, r8]!
   14280:	ldr	r0, [r0, #4]
   14284:	mov	r3, r4
   14288:	str	r2, [r3, sl]!
   1428c:	str	r0, [r3, #4]
   14290:	add	sl, sl, #8
   14294:	tst	r1, #7
   14298:	bne	142b0 <sav_compress_row+0x148>
   1429c:	b	14228 <sav_compress_row+0xc0>
   142a0:	mov	r0, #254	; 0xfe
   142a4:	strb	r0, [r4, r6]
   142a8:	tst	r1, #7
   142ac:	beq	14228 <sav_compress_row+0xc0>
   142b0:	mov	r6, r1
   142b4:	b	14244 <sav_compress_row+0xdc>
   142b8:	vld1.8	{d16}, [r0]
   142bc:	vcmpe.f64	d16, d8
   142c0:	vmrs	APSR_nzcv, fpscr
   142c4:	ble	142f8 <sav_compress_row+0x190>
   142c8:	vcmpe.f64	d16, d9
   142cc:	vmrs	APSR_nzcv, fpscr
   142d0:	bpl	142f8 <sav_compress_row+0x190>
   142d4:	vcvt.s32.f64	s0, d16
   142d8:	vcvt.f64.s32	d17, s0
   142dc:	vcmp.f64	d16, d17
   142e0:	vmrs	APSR_nzcv, fpscr
   142e4:	bne	142f8 <sav_compress_row+0x190>
   142e8:	vmov	r1, s0
   142ec:	add	r0, r1, #100	; 0x64
   142f0:	strb	r0, [r4, r6]
   142f4:	b	14318 <sav_compress_row+0x1b0>
   142f8:	mov	r1, #253	; 0xfd
   142fc:	strb	r1, [r4, r6]
   14300:	ldr	r1, [r0]
   14304:	ldr	r0, [r0, #4]
   14308:	mov	r2, r4
   1430c:	str	r1, [r2, sl]!
   14310:	str	r0, [r2, #4]
   14314:	add	sl, sl, #8
   14318:	add	r6, r6, #1
   1431c:	tst	r6, #7
   14320:	bne	141bc <sav_compress_row+0x54>
   14324:	mov	r0, r4
   14328:	mov	r1, #0
   1432c:	str	r1, [r0, sl]!
   14330:	str	r1, [r0, #4]
   14334:	add	r0, sl, #8
   14338:	mov	r6, sl
   1433c:	mov	sl, r0
   14340:	b	141bc <sav_compress_row+0x54>
   14344:	mov	sl, #8
   14348:	ldr	r0, [r3, #80]	; 0x50
   1434c:	ldr	r1, [r3, #84]	; 0x54
   14350:	add	r1, r1, #1
   14354:	cmp	r1, r0
   14358:	moveq	r0, #252	; 0xfc
   1435c:	strbeq	r0, [r4, r6]
   14360:	mov	r0, sl
   14364:	sub	sp, fp, #48	; 0x30
   14368:	vpop	{d8-d9}
   1436c:	add	sp, sp, #4
   14370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14374:	nop	{0}
   14378:	.word	0x00000000
   1437c:	.word	0xc0590000
   14380:	.word	0x00000000
   14384:	.word	0x40630000
   14388:	.word	0x000120bf

0001438c <sav_decompress_row>:
   1438c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14390:	add	fp, sp, #28
   14394:	sub	sp, sp, #4
   14398:	mov	r4, r0
   1439c:	mov	r7, r0
   143a0:	ldr	r8, [r7, #16]!
   143a4:	ldr	r6, [r7, #4]
   143a8:	ldr	r0, [r7, #28]
   143ac:	cmp	r0, #0
   143b0:	beq	143c8 <sav_decompress_row+0x3c>
   143b4:	mov	r0, r8
   143b8:	mov	r1, r6
   143bc:	bl	47f4 <byteswap8@plt>
   143c0:	mov	r8, r0
   143c4:	mov	r6, r1
   143c8:	add	r5, r4, #32
   143cc:	add	r9, r7, #16
   143d0:	ldr	r0, [r4, #40]	; 0x28
   143d4:	rsb	r7, r0, #8
   143d8:	movw	sl, #8224	; 0x2020
   143dc:	movt	sl, #8224	; 0x2020
   143e0:	cmp	r7, #8
   143e4:	bne	14448 <sav_decompress_row+0xbc>
   143e8:	ldr	r0, [r4, #4]
   143ec:	cmp	r0, #8
   143f0:	bcc	14530 <sav_decompress_row+0x1a4>
   143f4:	ldr	r1, [r4]
   143f8:	ldr	r2, [r1]
   143fc:	ldr	r3, [r1, #4]
   14400:	strd	r2, [r9]
   14404:	sub	r3, r0, #8
   14408:	add	r2, r1, #8
   1440c:	strd	r2, [r4]
   14410:	mov	r7, #0
   14414:	cmp	r7, #7
   14418:	ble	14450 <sav_decompress_row+0xc4>
   1441c:	b	143e0 <sav_decompress_row+0x54>
   14420:	ldr	r0, [r4, #8]
   14424:	str	r6, [r0, #4]
   14428:	str	r8, [r0]
   1442c:	ldrd	r0, [r4, #8]
   14430:	add	r0, r0, #8
   14434:	sub	r1, r1, #8
   14438:	strd	r0, [r4, #8]
   1443c:	add	r7, r7, #1
   14440:	cmp	r1, #8
   14444:	bcc	14510 <sav_decompress_row+0x184>
   14448:	cmp	r7, #7
   1444c:	bgt	143e0 <sav_decompress_row+0x54>
   14450:	ldrb	r0, [r5, r7]
   14454:	sub	r1, r0, #252	; 0xfc
   14458:	cmp	r1, #3
   1445c:	bhi	144bc <sav_decompress_row+0x130>
   14460:	add	r0, pc, #4
   14464:	ldr	r1, [r0, r1, lsl #2]
   14468:	add	pc, r0, r1
   1446c:	.word	0x0000009c
   14470:	.word	0x00000010
   14474:	.word	0x00000060
   14478:	.word	0xffffffb4
   1447c:	ldr	r0, [r4, #4]
   14480:	cmp	r0, #8
   14484:	bcc	14528 <sav_decompress_row+0x19c>
   14488:	ldr	r0, [r4]
   1448c:	ldr	r1, [r4, #8]
   14490:	ldr	r2, [r0]
   14494:	ldr	r0, [r0, #4]
   14498:	str	r0, [r1, #4]
   1449c:	str	r2, [r1]
   144a0:	ldm	r4, {r0, r1, r2, r3}
   144a4:	add	r2, r2, #8
   144a8:	sub	r3, r3, #8
   144ac:	add	r0, r0, #8
   144b0:	sub	r1, r1, #8
   144b4:	stm	r4, {r0, r1, r2, r3}
   144b8:	b	144c4 <sav_decompress_row+0x138>
   144bc:	cmp	r0, #0
   144c0:	bne	144dc <sav_decompress_row+0x150>
   144c4:	ldr	r1, [r4, #12]
   144c8:	b	1443c <sav_decompress_row+0xb0>
   144cc:	ldr	r0, [r4, #8]
   144d0:	str	sl, [r0, #4]
   144d4:	str	sl, [r0]
   144d8:	b	1442c <sav_decompress_row+0xa0>
   144dc:	vldr	d16, [r4, #24]
   144e0:	ldr	r1, [r4, #44]	; 0x2c
   144e4:	vmov	s0, r0
   144e8:	vcvt.f64.u32	d17, s0
   144ec:	vsub.f64	d0, d17, d16
   144f0:	cmp	r1, #0
   144f4:	beq	144fc <sav_decompress_row+0x170>
   144f8:	bl	4fa4 <byteswap_double@plt>
   144fc:	ldr	r0, [r4, #8]
   14500:	vst1.8	{d0}, [r0]
   14504:	b	1442c <sav_decompress_row+0xa0>
   14508:	mov	r0, #3
   1450c:	b	14514 <sav_decompress_row+0x188>
   14510:	mov	r0, #2
   14514:	str	r0, [r4, #48]	; 0x30
   14518:	rsb	r0, r7, #8
   1451c:	str	r0, [r4, #40]	; 0x28
   14520:	sub	sp, fp, #28
   14524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14528:	mov	r0, #0
   1452c:	b	14514 <sav_decompress_row+0x188>
   14530:	mov	r7, #8
   14534:	mov	r0, #0
   14538:	b	14514 <sav_decompress_row+0x188>

0001453c <sav_parse_long_variable_names_record>:
   1453c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14540:	add	fp, sp, #28
   14544:	sub	sp, sp, #148	; 0x94
   14548:	sub	sp, sp, #8192	; 0x2000
   1454c:	mov	r7, r2
   14550:	mov	r4, r1
   14554:	mov	r6, r0
   14558:	add	r0, r0, r1
   1455c:	str	r0, [sp, #32]
   14560:	mov	r0, r2
   14564:	bl	14a90 <count_vars>
   14568:	str	r0, [sp, #36]	; 0x24
   1456c:	mov	r1, r7
   14570:	bl	14b08 <build_lookup_table>
   14574:	str	r0, [sp, #40]	; 0x28
   14578:	str	r4, [sp, #24]
   1457c:	cmp	r4, #0
   14580:	str	r6, [sp, #20]
   14584:	beq	14880 <sav_parse_long_variable_names_record+0x344>
   14588:	mov	sl, #1
   1458c:	mvn	r2, #1
   14590:	mov	r4, r6
   14594:	mov	r0, #0
   14598:	str	r0, [sp, #52]	; 0x34
   1459c:	mov	r0, #0
   145a0:	str	r0, [sp, #48]	; 0x30
   145a4:	str	r7, [sp, #28]
   145a8:	mov	lr, r4
   145ac:	ldr	r0, [pc, #1180]	; 14a50 <sav_parse_long_variable_names_record+0x514>
   145b0:	add	r0, pc, r0
   145b4:	ldrb	r9, [r0, sl]
   145b8:	ldr	r0, [pc, #1172]	; 14a54 <sav_parse_long_variable_names_record+0x518>
   145bc:	add	r0, pc, r0
   145c0:	add	r0, r0, sl, lsl #1
   145c4:	ldrsh	r0, [r0]
   145c8:	ldr	r1, [pc, #1160]	; 14a58 <sav_parse_long_variable_names_record+0x51c>
   145cc:	add	r1, pc, r1
   145d0:	add	r4, r1, r0
   145d4:	ldr	r0, [pc, #1152]	; 14a5c <sav_parse_long_variable_names_record+0x520>
   145d8:	add	r0, pc, r0
   145dc:	add	r0, r0, sl, lsl #1
   145e0:	ldrsh	r8, [r0]
   145e4:	cmp	r9, #0
   145e8:	beq	14644 <sav_parse_long_variable_names_record+0x108>
   145ec:	add	ip, r4, r9
   145f0:	sub	r5, ip, #1
   145f4:	cmp	r5, r4
   145f8:	bcc	14638 <sav_parse_long_variable_names_record+0xfc>
   145fc:	ldrb	r7, [lr]
   14600:	mov	r3, r4
   14604:	b	14614 <sav_parse_long_variable_names_record+0xd8>
   14608:	sub	r5, r1, #1
   1460c:	cmp	r5, r3
   14610:	bcc	14638 <sav_parse_long_variable_names_record+0xfc>
   14614:	sub	r6, r5, r3
   14618:	mov	r1, r3
   1461c:	ldrb	r6, [r1, r6, asr #1]!
   14620:	cmp	r7, r6
   14624:	bcc	14608 <sav_parse_long_variable_names_record+0xcc>
   14628:	bls	146c4 <sav_parse_long_variable_names_record+0x188>
   1462c:	add	r3, r1, #1
   14630:	cmp	r5, r3
   14634:	bcs	14614 <sav_parse_long_variable_names_record+0xd8>
   14638:	add	r8, r9, r8
   1463c:	ldr	r7, [sp, #28]
   14640:	b	14648 <sav_parse_long_variable_names_record+0x10c>
   14644:	mov	ip, r4
   14648:	ldr	r1, [pc, #1040]	; 14a60 <sav_parse_long_variable_names_record+0x524>
   1464c:	add	r1, pc, r1
   14650:	ldrb	r0, [r1, sl]
   14654:	cmp	r0, #0
   14658:	mov	r4, lr
   1465c:	beq	146d4 <sav_parse_long_variable_names_record+0x198>
   14660:	add	r1, ip, r0, lsl #1
   14664:	sub	r3, r1, #2
   14668:	cmp	r3, ip
   1466c:	ldr	r5, [sp, #52]	; 0x34
   14670:	ldr	sl, [sp, #48]	; 0x30
   14674:	bcc	146f0 <sav_parse_long_variable_names_record+0x1b4>
   14678:	ldrb	r6, [r4]
   1467c:	mov	r4, ip
   14680:	b	14690 <sav_parse_long_variable_names_record+0x154>
   14684:	sub	r3, r1, #2
   14688:	cmp	r3, r4
   1468c:	bcc	146e8 <sav_parse_long_variable_names_record+0x1ac>
   14690:	sub	r1, r3, r4
   14694:	and	r7, r2, r1, asr #1
   14698:	mov	r1, r4
   1469c:	ldrb	r7, [r1, r7]!
   146a0:	cmp	r6, r7
   146a4:	bcc	14684 <sav_parse_long_variable_names_record+0x148>
   146a8:	ldrb	r7, [r1, #1]
   146ac:	cmp	r6, r7
   146b0:	bls	146e0 <sav_parse_long_variable_names_record+0x1a4>
   146b4:	add	r4, r1, #2
   146b8:	cmp	r3, r4
   146bc:	bcs	14690 <sav_parse_long_variable_names_record+0x154>
   146c0:	b	146e8 <sav_parse_long_variable_names_record+0x1ac>
   146c4:	sub	r0, r8, r4
   146c8:	add	r8, r0, r1
   146cc:	ldr	r7, [sp, #28]
   146d0:	mov	r4, lr
   146d4:	ldr	r5, [sp, #52]	; 0x34
   146d8:	ldr	sl, [sp, #48]	; 0x30
   146dc:	b	146f4 <sav_parse_long_variable_names_record+0x1b8>
   146e0:	sub	r1, r1, ip
   146e4:	asr	r0, r1, #1
   146e8:	ldr	r7, [sp, #28]
   146ec:	mov	r4, lr
   146f0:	add	r8, r0, r8
   146f4:	ldr	r0, [pc, #872]	; 14a64 <sav_parse_long_variable_names_record+0x528>
   146f8:	add	r0, pc, r0
   146fc:	ldrb	r1, [r0, r8]
   14700:	ldr	r0, [pc, #864]	; 14a68 <sav_parse_long_variable_names_record+0x52c>
   14704:	add	r0, pc, r0
   14708:	ldrb	r0, [r0, r1]
   1470c:	cmp	r0, #0
   14710:	str	r1, [sp, #44]	; 0x2c
   14714:	cmpne	r0, #11
   14718:	bne	14754 <sav_parse_long_variable_names_record+0x218>
   1471c:	ldr	r1, [sp, #44]	; 0x2c
   14720:	cmp	r1, #1
   14724:	beq	149e4 <sav_parse_long_variable_names_record+0x4a8>
   14728:	str	sl, [sp, #48]	; 0x30
   1472c:	str	r5, [sp, #52]	; 0x34
   14730:	ldr	r0, [pc, #832]	; 14a78 <sav_parse_long_variable_names_record+0x53c>
   14734:	add	r0, pc, r0
   14738:	ldrb	sl, [r0, r1]
   1473c:	add	r4, r4, #1
   14740:	ldr	r0, [sp, #32]
   14744:	cmp	r4, r0
   14748:	mvn	r2, #1
   1474c:	bne	145a8 <sav_parse_long_variable_names_record+0x6c>
   14750:	b	14898 <sav_parse_long_variable_names_record+0x35c>
   14754:	ldr	r1, [pc, #784]	; 14a6c <sav_parse_long_variable_names_record+0x530>
   14758:	add	r1, pc, r1
   1475c:	ldrb	r8, [r1, r0]!
   14760:	add	r9, r1, #1
   14764:	b	14778 <sav_parse_long_variable_names_record+0x23c>
   14768:	sub	r5, r4, sl
   1476c:	add	r9, r9, #1
   14770:	cmp	r8, #0
   14774:	beq	1471c <sav_parse_long_variable_names_record+0x1e0>
   14778:	sub	r8, r8, #1
   1477c:	ldrb	r0, [r9]
   14780:	cmp	r0, #6
   14784:	bhi	1476c <sav_parse_long_variable_names_record+0x230>
   14788:	add	r1, pc, #4
   1478c:	ldr	r0, [r1, r0, lsl #2]
   14790:	add	pc, r1, r0
   14794:	.word	0x00000024
   14798:	.word	0x00000088
   1479c:	.word	0x00000090
   147a0:	.word	0x0000001c
   147a4:	.word	0xffffffd4
   147a8:	.word	0x0000001c
   147ac:	.word	0xffffffd4
   147b0:	mov	sl, r4
   147b4:	b	1476c <sav_parse_long_variable_names_record+0x230>
   147b8:	ldr	r0, [pc, #688]	; 14a70 <sav_parse_long_variable_names_record+0x534>
   147bc:	add	r0, pc, r0
   147c0:	str	r0, [sp]
   147c4:	sub	r0, fp, #48	; 0x30
   147c8:	ldr	r1, [sp, #40]	; 0x28
   147cc:	ldr	r2, [sp, #36]	; 0x24
   147d0:	mov	r3, #40	; 0x28
   147d4:	bl	4d34 <bsearch@plt>
   147d8:	cmp	r0, #0
   147dc:	beq	14844 <sav_parse_long_variable_names_record+0x308>
   147e0:	ldr	r0, [r0, #36]	; 0x24
   147e4:	ldr	r1, [r7, #44]	; 0x2c
   147e8:	ldr	r0, [r1, r0, lsl #2]
   147ec:	mov	r6, r7
   147f0:	mov	r7, sl
   147f4:	add	sl, r0, #196	; 0xc4
   147f8:	mov	r0, sl
   147fc:	sub	r1, fp, #120	; 0x78
   14800:	mov	r2, r5
   14804:	bl	4998 <memcpy@plt>
   14808:	mov	r0, #0
   1480c:	strb	r0, [sl, r5]
   14810:	mov	sl, r7
   14814:	mov	r7, r6
   14818:	b	1476c <sav_parse_long_variable_names_record+0x230>
   1481c:	sub	r6, fp, #48	; 0x30
   14820:	b	14828 <sav_parse_long_variable_names_record+0x2ec>
   14824:	sub	r6, fp, #120	; 0x78
   14828:	mov	r0, r6
   1482c:	mov	r1, sl
   14830:	mov	r2, r5
   14834:	bl	4998 <memcpy@plt>
   14838:	mov	r0, #0
   1483c:	strb	r0, [r6, r5]
   14840:	b	1476c <sav_parse_long_variable_names_record+0x230>
   14844:	ldr	r0, [r7, #24]
   14848:	cmp	r0, #0
   1484c:	beq	1476c <sav_parse_long_variable_names_record+0x230>
   14850:	add	r6, sp, #56	; 0x38
   14854:	mov	r0, r6
   14858:	mov	r1, #8192	; 0x2000
   1485c:	ldr	r2, [pc, #528]	; 14a74 <sav_parse_long_variable_names_record+0x538>
   14860:	add	r2, pc, r2
   14864:	sub	r3, fp, #48	; 0x30
   14868:	bl	4d04 <snprintf@plt>
   1486c:	ldr	r2, [r7, #24]
   14870:	ldr	r1, [r7, #40]	; 0x28
   14874:	mov	r0, r6
   14878:	blx	r2
   1487c:	b	1476c <sav_parse_long_variable_names_record+0x230>
   14880:	mov	r0, #0
   14884:	str	r0, [sp, #52]	; 0x34
   14888:	mov	sl, #1
   1488c:	mov	r4, r6
   14890:	mov	r0, #0
   14894:	str	r0, [sp, #48]	; 0x30
   14898:	ldr	r0, [sp, #32]
   1489c:	cmp	r4, r0
   148a0:	bne	149cc <sav_parse_long_variable_names_record+0x490>
   148a4:	ldr	r0, [pc, #464]	; 14a7c <sav_parse_long_variable_names_record+0x540>
   148a8:	add	r0, pc, r0
   148ac:	ldrb	r0, [r0, sl]
   148b0:	cmp	r0, #0
   148b4:	beq	149cc <sav_parse_long_variable_names_record+0x490>
   148b8:	ldr	r1, [sp, #48]	; 0x30
   148bc:	sub	r1, r4, r1
   148c0:	str	r1, [sp, #44]	; 0x2c
   148c4:	ldr	r1, [pc, #436]	; 14a80 <sav_parse_long_variable_names_record+0x544>
   148c8:	add	r1, pc, r1
   148cc:	ldrb	r6, [r1, r0]!
   148d0:	add	r8, r1, #1
   148d4:	str	r4, [sp, #28]
   148d8:	b	14908 <sav_parse_long_variable_names_record+0x3cc>
   148dc:	sub	r9, fp, #120	; 0x78
   148e0:	mov	r0, r9
   148e4:	ldr	r1, [sp, #48]	; 0x30
   148e8:	ldr	r5, [sp, #52]	; 0x34
   148ec:	mov	r2, r5
   148f0:	bl	4998 <memcpy@plt>
   148f4:	mov	r0, #0
   148f8:	strb	r0, [r9, r5]
   148fc:	add	r8, r8, #1
   14900:	cmp	r6, #0
   14904:	beq	149cc <sav_parse_long_variable_names_record+0x490>
   14908:	sub	r6, r6, #1
   1490c:	ldrb	r0, [r8]
   14910:	cmp	r0, #6
   14914:	beq	14984 <sav_parse_long_variable_names_record+0x448>
   14918:	cmp	r0, #2
   1491c:	beq	148dc <sav_parse_long_variable_names_record+0x3a0>
   14920:	cmp	r0, #0
   14924:	bne	148fc <sav_parse_long_variable_names_record+0x3c0>
   14928:	ldr	r0, [pc, #340]	; 14a84 <sav_parse_long_variable_names_record+0x548>
   1492c:	add	r0, pc, r0
   14930:	str	r0, [sp]
   14934:	sub	r0, fp, #48	; 0x30
   14938:	ldr	r1, [sp, #40]	; 0x28
   1493c:	ldr	r2, [sp, #36]	; 0x24
   14940:	mov	r3, #40	; 0x28
   14944:	bl	4d34 <bsearch@plt>
   14948:	cmp	r0, #0
   1494c:	beq	14990 <sav_parse_long_variable_names_record+0x454>
   14950:	ldr	r0, [r0, #36]	; 0x24
   14954:	ldr	r1, [r7, #44]	; 0x2c
   14958:	ldr	r0, [r1, r0, lsl #2]
   1495c:	add	r4, r0, #196	; 0xc4
   14960:	mov	r0, r4
   14964:	sub	r1, fp, #120	; 0x78
   14968:	ldr	r5, [sp, #52]	; 0x34
   1496c:	mov	r2, r5
   14970:	bl	4998 <memcpy@plt>
   14974:	mov	r0, #0
   14978:	strb	r0, [r4, r5]
   1497c:	ldr	r4, [sp, #28]
   14980:	b	148fc <sav_parse_long_variable_names_record+0x3c0>
   14984:	ldr	r0, [sp, #44]	; 0x2c
   14988:	str	r0, [sp, #52]	; 0x34
   1498c:	b	148fc <sav_parse_long_variable_names_record+0x3c0>
   14990:	ldr	r0, [r7, #24]
   14994:	cmp	r0, #0
   14998:	beq	148fc <sav_parse_long_variable_names_record+0x3c0>
   1499c:	add	r5, sp, #56	; 0x38
   149a0:	mov	r0, r5
   149a4:	mov	r1, #8192	; 0x2000
   149a8:	ldr	r2, [pc, #216]	; 14a88 <sav_parse_long_variable_names_record+0x54c>
   149ac:	add	r2, pc, r2
   149b0:	sub	r3, fp, #48	; 0x30
   149b4:	bl	4d04 <snprintf@plt>
   149b8:	ldr	r2, [r7, #24]
   149bc:	ldr	r1, [r7, #40]	; 0x28
   149c0:	mov	r0, r5
   149c4:	blx	r2
   149c8:	b	148fc <sav_parse_long_variable_names_record+0x3c0>
   149cc:	cmp	sl, #11
   149d0:	bcc	149e4 <sav_parse_long_variable_names_record+0x4a8>
   149d4:	mov	r5, #0
   149d8:	ldr	r0, [sp, #32]
   149dc:	cmp	r4, r0
   149e0:	beq	14a34 <sav_parse_long_variable_names_record+0x4f8>
   149e4:	ldr	r0, [r7, #24]
   149e8:	mov	r5, #5
   149ec:	cmp	r0, #0
   149f0:	beq	14a34 <sav_parse_long_variable_names_record+0x4f8>
   149f4:	ldr	r1, [sp, #20]
   149f8:	ldrb	r0, [r4], -r1
   149fc:	stm	sp, {r1, r4}
   14a00:	ldr	r3, [sp, #24]
   14a04:	str	r3, [sp, #8]
   14a08:	str	r0, [sp, #12]
   14a0c:	add	r6, sp, #56	; 0x38
   14a10:	ldr	r2, [pc, #116]	; 14a8c <sav_parse_long_variable_names_record+0x550>
   14a14:	add	r2, pc, r2
   14a18:	mov	r0, r6
   14a1c:	mov	r1, #8192	; 0x2000
   14a20:	bl	4d04 <snprintf@plt>
   14a24:	ldr	r2, [r7, #24]
   14a28:	ldr	r1, [r7, #40]	; 0x28
   14a2c:	mov	r0, r6
   14a30:	blx	r2
   14a34:	ldr	r0, [sp, #40]	; 0x28
   14a38:	cmp	r0, #0
   14a3c:	beq	14a44 <sav_parse_long_variable_names_record+0x508>
   14a40:	bl	4938 <free@plt>
   14a44:	mov	r0, r5
   14a48:	sub	sp, fp, #28
   14a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a50:	.word	0x00012090
   14a54:	.word	0x00011f54
   14a58:	.word	0x00011d54
   14a5c:	.word	0x00011fd0
   14a60:	.word	0x00012040
   14a64:	.word	0x00011fe0
   14a68:	.word	0x0001232e
   14a6c:	.word	0x00012156
   14a70:	.word	0x00000408
   14a74:	.word	0x0001221d
   14a78:	.word	0x0001212f
   14a7c:	.word	0x00012012
   14a80:	.word	0x00011fe6
   14a84:	.word	0x00000298
   14a88:	.word	0x000120d1
   14a8c:	.word	0x0001207b

00014a90 <count_vars>:
   14a90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a94:	add	fp, sp, #24
   14a98:	ldr	r1, [r0, #340]	; 0x154
   14a9c:	cmp	r1, #1
   14aa0:	blt	14afc <count_vars+0x6c>
   14aa4:	ldr	r8, [r0, #44]	; 0x2c
   14aa8:	ldr	r6, [r0, #340]	; 0x154
   14aac:	mov	r7, #0
   14ab0:	mov	r4, #0
   14ab4:	mov	r1, #0
   14ab8:	b	14ad0 <count_vars+0x40>
   14abc:	add	r4, r4, #1
   14ac0:	add	r7, r7, #1
   14ac4:	cmp	r7, r6
   14ac8:	mov	r1, r5
   14acc:	bge	14af4 <count_vars+0x64>
   14ad0:	ldr	r5, [r8, r7, lsl #2]
   14ad4:	cmp	r1, #0
   14ad8:	beq	14abc <count_vars+0x2c>
   14adc:	add	r0, r5, #187	; 0xbb
   14ae0:	add	r1, r1, #187	; 0xbb
   14ae4:	bl	4878 <strcmp@plt>
   14ae8:	cmp	r0, #0
   14aec:	addne	r4, r4, #1
   14af0:	b	14ac0 <count_vars+0x30>
   14af4:	mov	r0, r4
   14af8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14afc:	mov	r4, #0
   14b00:	mov	r0, r4
   14b04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014b08 <build_lookup_table>:
   14b08:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14b0c:	add	fp, sp, #24
   14b10:	mov	r6, r1
   14b14:	mov	r8, r0
   14b18:	add	r0, r0, r0, lsl #2
   14b1c:	lsl	r0, r0, #3
   14b20:	bl	4cb0 <readstat_malloc@plt>
   14b24:	mov	r9, r0
   14b28:	ldr	r0, [r6, #340]	; 0x154
   14b2c:	cmp	r0, #1
   14b30:	blt	14ba8 <build_lookup_table+0xa0>
   14b34:	mov	r7, #0
   14b38:	mov	r4, #0
   14b3c:	mov	r1, #0
   14b40:	b	14b80 <build_lookup_table+0x78>
   14b44:	add	r0, r7, r7, lsl #2
   14b48:	add	r1, r5, #187	; 0xbb
   14b4c:	vld1.8	{d16}, [r1]
   14b50:	add	r0, r9, r0, lsl #3
   14b54:	ldrb	r1, [r1, #8]
   14b58:	strb	r1, [r0, #8]
   14b5c:	vst1.8	{d16}, [r0]
   14b60:	ldr	r1, [r5, #8]
   14b64:	str	r1, [r0, #36]	; 0x24
   14b68:	add	r7, r7, #1
   14b6c:	ldr	r0, [r6, #340]	; 0x154
   14b70:	add	r4, r4, #1
   14b74:	cmp	r4, r0
   14b78:	mov	r1, r5
   14b7c:	bge	14ba8 <build_lookup_table+0xa0>
   14b80:	ldr	r0, [r6, #44]	; 0x2c
   14b84:	ldr	r5, [r0, r4, lsl #2]
   14b88:	cmp	r1, #0
   14b8c:	beq	14b44 <build_lookup_table+0x3c>
   14b90:	add	r0, r5, #187	; 0xbb
   14b94:	add	r1, r1, #187	; 0xbb
   14b98:	bl	4878 <strcmp@plt>
   14b9c:	cmp	r0, #0
   14ba0:	bne	14b44 <build_lookup_table+0x3c>
   14ba4:	b	14b6c <build_lookup_table+0x64>
   14ba8:	ldr	r3, [pc, #24]	; 14bc8 <build_lookup_table+0xc0>
   14bac:	add	r3, pc, r3
   14bb0:	mov	r0, r9
   14bb4:	mov	r1, r8
   14bb8:	mov	r2, #40	; 0x28
   14bbc:	bl	4ed8 <qsort@plt>
   14bc0:	mov	r0, r9
   14bc4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14bc8:	.word	0x00000450

00014bcc <compare_key_varlookup>:
   14bcc:	b	4878 <strcmp@plt>

00014bd0 <sav_parse_very_long_string_record>:
   14bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bd4:	add	fp, sp, #28
   14bd8:	sub	sp, sp, #92	; 0x5c
   14bdc:	mov	r5, r2
   14be0:	mov	r7, r1
   14be4:	mov	r6, r0
   14be8:	add	r0, r0, r1
   14bec:	str	r0, [sp, #32]
   14bf0:	mov	r0, r2
   14bf4:	bl	14a90 <count_vars>
   14bf8:	mov	r4, r0
   14bfc:	add	r0, r7, #1024	; 0x400
   14c00:	str	r0, [sp, #24]
   14c04:	bl	4cb0 <readstat_malloc@plt>
   14c08:	mov	r9, r0
   14c0c:	str	r4, [sp, #36]	; 0x24
   14c10:	mov	r0, r4
   14c14:	str	r5, [sp, #28]
   14c18:	mov	r1, r5
   14c1c:	bl	14b08 <build_lookup_table>
   14c20:	str	r0, [sp, #40]	; 0x28
   14c24:	cmp	r7, #0
   14c28:	mov	sl, r6
   14c2c:	beq	14f7c <sav_parse_very_long_string_record+0x3ac>
   14c30:	str	r7, [sp, #12]
   14c34:	str	r9, [sp, #20]
   14c38:	mov	r9, #1
   14c3c:	str	r6, [sp, #16]
   14c40:	mov	sl, r6
   14c44:	mov	r2, #1
   14c48:	mov	r0, #0
   14c4c:	str	r0, [sp, #48]	; 0x30
   14c50:	mov	r0, #0
   14c54:	str	r0, [sp, #52]	; 0x34
   14c58:	mov	r8, #0
   14c5c:	ldr	r0, [pc, #884]	; 14fd8 <sav_parse_very_long_string_record+0x408>
   14c60:	add	r0, pc, r0
   14c64:	ldrb	r0, [r0, r2]
   14c68:	ldr	r1, [pc, #876]	; 14fdc <sav_parse_very_long_string_record+0x40c>
   14c6c:	add	r1, pc, r1
   14c70:	ldrb	r1, [r1, r2]
   14c74:	ldr	r3, [pc, #868]	; 14fe0 <sav_parse_very_long_string_record+0x410>
   14c78:	add	r3, pc, r3
   14c7c:	add	r5, r3, r1
   14c80:	movw	r1, #7164	; 0x1bfc
   14c84:	tst	r9, r1, lsr r2
   14c88:	bne	14c94 <sav_parse_very_long_string_record+0xc4>
   14c8c:	mov	ip, r5
   14c90:	b	14cf0 <sav_parse_very_long_string_record+0x120>
   14c94:	ldr	r1, [pc, #840]	; 14fe4 <sav_parse_very_long_string_record+0x414>
   14c98:	add	r1, pc, r1
   14c9c:	ldrb	lr, [r1, r2]
   14ca0:	add	ip, r5, lr
   14ca4:	sub	r6, ip, #1
   14ca8:	cmp	r6, r5
   14cac:	bcc	14cec <sav_parse_very_long_string_record+0x11c>
   14cb0:	ldrb	r4, [sl]
   14cb4:	mov	r3, r5
   14cb8:	b	14cc8 <sav_parse_very_long_string_record+0xf8>
   14cbc:	sub	r6, r1, #1
   14cc0:	cmp	r6, r3
   14cc4:	bcc	14cec <sav_parse_very_long_string_record+0x11c>
   14cc8:	sub	r7, r6, r3
   14ccc:	mov	r1, r3
   14cd0:	ldrb	r7, [r1, r7, asr #1]!
   14cd4:	cmp	r4, r7
   14cd8:	bcc	14cbc <sav_parse_very_long_string_record+0xec>
   14cdc:	bls	14d6c <sav_parse_very_long_string_record+0x19c>
   14ce0:	add	r3, r1, #1
   14ce4:	cmp	r6, r3
   14ce8:	bcs	14cc8 <sav_parse_very_long_string_record+0xf8>
   14cec:	add	r0, lr, r0
   14cf0:	ldr	r4, [sp, #40]	; 0x28
   14cf4:	movw	r1, #11774	; 0x2dfe
   14cf8:	tst	r9, r1, lsr r2
   14cfc:	beq	14d8c <sav_parse_very_long_string_record+0x1bc>
   14d00:	ldr	r1, [pc, #736]	; 14fe8 <sav_parse_very_long_string_record+0x418>
   14d04:	add	r1, pc, r1
   14d08:	ldrb	r2, [r1, r2]
   14d0c:	add	r1, ip, r2, lsl #1
   14d10:	sub	r3, r1, #2
   14d14:	cmp	r3, ip
   14d18:	bcc	14d88 <sav_parse_very_long_string_record+0x1b8>
   14d1c:	ldrb	r7, [sl]
   14d20:	mov	r5, ip
   14d24:	b	14d34 <sav_parse_very_long_string_record+0x164>
   14d28:	sub	r3, r1, #2
   14d2c:	cmp	r3, r5
   14d30:	bcc	14d84 <sav_parse_very_long_string_record+0x1b4>
   14d34:	sub	r1, r3, r5
   14d38:	mvn	r6, #1
   14d3c:	and	r6, r6, r1, asr #1
   14d40:	mov	r1, r5
   14d44:	ldrb	r6, [r1, r6]!
   14d48:	cmp	r7, r6
   14d4c:	bcc	14d28 <sav_parse_very_long_string_record+0x158>
   14d50:	ldrb	r6, [r1, #1]
   14d54:	cmp	r7, r6
   14d58:	bls	14d7c <sav_parse_very_long_string_record+0x1ac>
   14d5c:	add	r5, r1, #2
   14d60:	cmp	r3, r5
   14d64:	bcs	14d34 <sav_parse_very_long_string_record+0x164>
   14d68:	b	14d84 <sav_parse_very_long_string_record+0x1b4>
   14d6c:	sub	r0, r0, r5
   14d70:	add	r0, r0, r1
   14d74:	ldr	r4, [sp, #40]	; 0x28
   14d78:	b	14d8c <sav_parse_very_long_string_record+0x1bc>
   14d7c:	sub	r1, r1, ip
   14d80:	asr	r2, r1, #1
   14d84:	ldr	r4, [sp, #40]	; 0x28
   14d88:	add	r0, r2, r0
   14d8c:	ldr	r1, [pc, #600]	; 14fec <sav_parse_very_long_string_record+0x41c>
   14d90:	add	r1, pc, r1
   14d94:	ldrb	r1, [r1, r0]
   14d98:	movw	r0, #25590	; 0x63f6
   14d9c:	tst	r9, r0, lsr r1
   14da0:	str	r1, [sp, #44]	; 0x2c
   14da4:	bne	14ee0 <sav_parse_very_long_string_record+0x310>
   14da8:	ldr	r0, [pc, #576]	; 14ff0 <sav_parse_very_long_string_record+0x420>
   14dac:	add	r0, pc, r0
   14db0:	ldrb	r0, [r0, r1]
   14db4:	tst	r0, #253	; 0xfd
   14db8:	beq	14ee0 <sav_parse_very_long_string_record+0x310>
   14dbc:	ldr	r1, [pc, #560]	; 14ff4 <sav_parse_very_long_string_record+0x424>
   14dc0:	add	r1, pc, r1
   14dc4:	ldrb	r9, [r1, r0]!
   14dc8:	add	r6, r1, #1
   14dcc:	b	14de0 <sav_parse_very_long_string_record+0x210>
   14dd0:	mov	r8, #0
   14dd4:	subs	r9, r9, #1
   14dd8:	add	r6, r6, #1
   14ddc:	beq	14ee0 <sav_parse_very_long_string_record+0x310>
   14de0:	ldrb	r0, [r6]
   14de4:	cmp	r0, #5
   14de8:	bhi	14dd4 <sav_parse_very_long_string_record+0x204>
   14dec:	add	r1, pc, #4
   14df0:	ldr	r0, [r1, r0, lsl #2]
   14df4:	add	pc, r1, r0
   14df8:	.word	0x00000018
   14dfc:	.word	0x00000058
   14e00:	.word	0x0000008c
   14e04:	.word	0x000000cc
   14e08:	.word	0x000000d8
   14e0c:	.word	0xffffffd8
   14e10:	ldr	r0, [pc, #480]	; 14ff8 <sav_parse_very_long_string_record+0x428>
   14e14:	add	r0, pc, r0
   14e18:	str	r0, [sp]
   14e1c:	add	r0, sp, #56	; 0x38
   14e20:	mov	r1, r4
   14e24:	ldr	r2, [sp, #36]	; 0x24
   14e28:	mov	r3, #40	; 0x28
   14e2c:	bl	4d34 <bsearch@plt>
   14e30:	cmp	r0, #0
   14e34:	beq	14dd4 <sav_parse_very_long_string_record+0x204>
   14e38:	ldr	r0, [r0, #36]	; 0x24
   14e3c:	ldr	r1, [sp, #28]
   14e40:	ldr	r1, [r1, #44]	; 0x2c
   14e44:	ldr	r0, [r1, r0, lsl #2]
   14e48:	str	r8, [r0, #20]
   14e4c:	b	14dd4 <sav_parse_very_long_string_record+0x204>
   14e50:	mov	r7, r8
   14e54:	mov	r8, r4
   14e58:	add	r4, sp, #56	; 0x38
   14e5c:	mov	r0, r4
   14e60:	ldr	r1, [sp, #52]	; 0x34
   14e64:	ldr	r5, [sp, #48]	; 0x30
   14e68:	mov	r2, r5
   14e6c:	bl	4998 <memcpy@plt>
   14e70:	mov	r0, #0
   14e74:	strb	r0, [r4, r5]
   14e78:	mov	r4, r8
   14e7c:	mov	r8, r7
   14e80:	b	14dd4 <sav_parse_very_long_string_record+0x204>
   14e84:	ldrb	r0, [sl]
   14e88:	cmp	r0, #0
   14e8c:	beq	14dd4 <sav_parse_very_long_string_record+0x204>
   14e90:	sub	r0, r0, #48	; 0x30
   14e94:	uxtb	r1, r0
   14e98:	mvn	r2, #1
   14e9c:	eor	r1, r1, r2
   14ea0:	movw	r2, #52429	; 0xcccd
   14ea4:	movt	r2, #52428	; 0xcccc
   14ea8:	umull	r1, r2, r1, r2
   14eac:	cmp	r8, r2, lsr #3
   14eb0:	bhi	14f10 <sav_parse_very_long_string_record+0x340>
   14eb4:	add	r1, r8, r8, lsl #2
   14eb8:	lsl	r1, r1, #1
   14ebc:	uxtab	r8, r1, r0
   14ec0:	b	14dd4 <sav_parse_very_long_string_record+0x204>
   14ec4:	mov	r0, sl
   14ec8:	str	sl, [sp, #52]	; 0x34
   14ecc:	b	14dd4 <sav_parse_very_long_string_record+0x204>
   14ed0:	ldr	r0, [sp, #52]	; 0x34
   14ed4:	sub	r0, sl, r0
   14ed8:	str	r0, [sp, #48]	; 0x30
   14edc:	b	14dd4 <sav_parse_very_long_string_record+0x204>
   14ee0:	ldr	r3, [sp, #44]	; 0x2c
   14ee4:	cmp	r3, #1
   14ee8:	beq	14f70 <sav_parse_very_long_string_record+0x3a0>
   14eec:	ldr	r0, [pc, #264]	; 14ffc <sav_parse_very_long_string_record+0x42c>
   14ef0:	add	r0, pc, r0
   14ef4:	ldrb	r2, [r0, r3]
   14ef8:	add	sl, sl, #1
   14efc:	ldr	r0, [sp, #32]
   14f00:	cmp	sl, r0
   14f04:	mov	r9, #1
   14f08:	bne	14c5c <sav_parse_very_long_string_record+0x8c>
   14f0c:	b	14f18 <sav_parse_very_long_string_record+0x348>
   14f10:	add	sl, sl, #1
   14f14:	ldr	r3, [sp, #44]	; 0x2c
   14f18:	mov	r0, #26624	; 0x6800
   14f1c:	mov	r1, #1
   14f20:	tst	r1, r0, lsr r3
   14f24:	beq	14f70 <sav_parse_very_long_string_record+0x3a0>
   14f28:	mov	r8, #0
   14f2c:	ldr	r0, [sp, #32]
   14f30:	cmp	sl, r0
   14f34:	ldr	r9, [sp, #20]
   14f38:	ldr	r6, [sp, #16]
   14f3c:	ldr	r7, [sp, #12]
   14f40:	bne	14f7c <sav_parse_very_long_string_record+0x3ac>
   14f44:	cmp	r4, #0
   14f48:	beq	14f54 <sav_parse_very_long_string_record+0x384>
   14f4c:	mov	r0, r4
   14f50:	bl	4938 <free@plt>
   14f54:	cmp	r9, #0
   14f58:	beq	14f64 <sav_parse_very_long_string_record+0x394>
   14f5c:	mov	r0, r9
   14f60:	bl	4938 <free@plt>
   14f64:	mov	r0, r8
   14f68:	sub	sp, fp, #28
   14f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f70:	ldr	r9, [sp, #20]
   14f74:	ldr	r6, [sp, #16]
   14f78:	ldr	r7, [sp, #12]
   14f7c:	ldr	r5, [sp, #28]
   14f80:	ldr	r0, [r5, #24]
   14f84:	mov	r8, #5
   14f88:	cmp	r0, #0
   14f8c:	beq	14fc8 <sav_parse_very_long_string_record+0x3f8>
   14f90:	ldr	r0, [sp, #32]
   14f94:	sub	r0, r0, sl
   14f98:	str	r7, [sp]
   14f9c:	stmib	sp, {r0, sl}
   14fa0:	sub	r3, sl, r6
   14fa4:	ldr	r2, [pc, #84]	; 15000 <sav_parse_very_long_string_record+0x430>
   14fa8:	add	r2, pc, r2
   14fac:	mov	r0, r9
   14fb0:	ldr	r1, [sp, #24]
   14fb4:	bl	4d04 <snprintf@plt>
   14fb8:	ldr	r2, [r5, #24]
   14fbc:	ldr	r1, [r5, #40]	; 0x28
   14fc0:	mov	r0, r9
   14fc4:	blx	r2
   14fc8:	ldr	r4, [sp, #40]	; 0x28
   14fcc:	cmp	r4, #0
   14fd0:	bne	14f4c <sav_parse_very_long_string_record+0x37c>
   14fd4:	b	14f54 <sav_parse_very_long_string_record+0x384>
   14fd8:	.word	0x00011d2b
   14fdc:	.word	0x00011d11
   14fe0:	.word	0x00011c8e
   14fe4:	.word	0x00011d01
   14fe8:	.word	0x00011ca3
   14fec:	.word	0x00011c25
   14ff0:	.word	0x00011c6a
   14ff4:	.word	0x00011c65
   14ff8:	.word	0xfffffdb0
   14ffc:	.word	0x00011b17
   15000:	.word	0x00011b25

00015004 <compare_varlookups>:
   15004:	b	4878 <strcmp@plt>

00015008 <sav_parse_time>:
   15008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1500c:	add	fp, sp, #28
   15010:	sub	sp, sp, #36	; 0x24
   15014:	sub	sp, sp, #8192	; 0x2000
   15018:	str	r3, [sp, #20]
   1501c:	add	lr, r0, r1
   15020:	str	r1, [sp, #16]
   15024:	cmp	r1, #0
   15028:	str	r0, [sp, #12]
   1502c:	mov	r7, #0
   15030:	beq	1526c <sav_parse_time+0x264>
   15034:	mov	r5, #1
   15038:	mov	r9, #1
   1503c:	mov	r6, r0
   15040:	str	r2, [sp, #28]
   15044:	str	lr, [sp, #24]
   15048:	ldr	r0, [pc, #732]	; 1532c <sav_parse_time+0x324>
   1504c:	add	r0, pc, r0
   15050:	ldrb	ip, [r0, r9]
   15054:	ldr	r0, [pc, #724]	; 15330 <sav_parse_time+0x328>
   15058:	add	r0, pc, r0
   1505c:	ldrb	r0, [r0, r9]
   15060:	ldr	r1, [pc, #716]	; 15334 <sav_parse_time+0x32c>
   15064:	add	r1, pc, r1
   15068:	add	r3, r1, r0
   1506c:	mov	r0, #218	; 0xda
   15070:	tst	r5, r0, lsr r9
   15074:	bne	15080 <sav_parse_time+0x78>
   15078:	mov	sl, r3
   1507c:	b	150e8 <sav_parse_time+0xe0>
   15080:	ldr	r0, [pc, #688]	; 15338 <sav_parse_time+0x330>
   15084:	add	r0, pc, r0
   15088:	ldrb	r4, [r0, r9]
   1508c:	add	sl, r3, r4
   15090:	sub	lr, sl, #1
   15094:	cmp	lr, r3
   15098:	bcc	150d8 <sav_parse_time+0xd0>
   1509c:	ldrb	r1, [r6]
   150a0:	mov	r5, r3
   150a4:	b	150b4 <sav_parse_time+0xac>
   150a8:	sub	lr, r0, #1
   150ac:	cmp	lr, r5
   150b0:	bcc	150d8 <sav_parse_time+0xd0>
   150b4:	sub	r8, lr, r5
   150b8:	mov	r0, r5
   150bc:	ldrb	r2, [r0, r8, asr #1]!
   150c0:	cmp	r1, r2
   150c4:	bcc	150a8 <sav_parse_time+0xa0>
   150c8:	bls	15160 <sav_parse_time+0x158>
   150cc:	add	r5, r0, #1
   150d0:	cmp	lr, r5
   150d4:	bcs	150b4 <sav_parse_time+0xac>
   150d8:	add	ip, r4, ip
   150dc:	ldr	lr, [sp, #24]
   150e0:	ldr	r2, [sp, #28]
   150e4:	mov	r5, #1
   150e8:	movw	r0, #4022	; 0xfb6
   150ec:	tst	r5, r0, lsr r9
   150f0:	beq	1518c <sav_parse_time+0x184>
   150f4:	ldr	r0, [pc, #576]	; 1533c <sav_parse_time+0x334>
   150f8:	add	r0, pc, r0
   150fc:	ldrb	r8, [r0, r9]
   15100:	add	r0, sl, r8, lsl #1
   15104:	sub	r3, r0, #2
   15108:	cmp	r3, sl
   1510c:	bcc	15188 <sav_parse_time+0x180>
   15110:	ldrb	r1, [r6]
   15114:	mov	r0, sl
   15118:	mvn	r4, #1
   1511c:	b	1512c <sav_parse_time+0x124>
   15120:	sub	r3, r5, #2
   15124:	cmp	r3, r0
   15128:	bcc	15180 <sav_parse_time+0x178>
   1512c:	sub	r2, r3, r0
   15130:	and	r2, r4, r2, asr #1
   15134:	mov	r5, r0
   15138:	ldrb	r2, [r5, r2]!
   1513c:	cmp	r1, r2
   15140:	bcc	15120 <sav_parse_time+0x118>
   15144:	ldrb	r0, [r5, #1]
   15148:	cmp	r1, r0
   1514c:	bls	15178 <sav_parse_time+0x170>
   15150:	add	r0, r5, #2
   15154:	cmp	r3, r0
   15158:	bcs	1512c <sav_parse_time+0x124>
   1515c:	b	15180 <sav_parse_time+0x178>
   15160:	sub	r1, ip, r3
   15164:	add	ip, r1, r0
   15168:	ldr	lr, [sp, #24]
   1516c:	ldr	r2, [sp, #28]
   15170:	mov	r5, #1
   15174:	b	1518c <sav_parse_time+0x184>
   15178:	sub	r0, r5, sl
   1517c:	asr	r8, r0, #1
   15180:	ldr	r2, [sp, #28]
   15184:	mov	r5, #1
   15188:	add	ip, r8, ip
   1518c:	movw	r0, #27349	; 0x6ad5
   15190:	movt	r0, #1877	; 0x755
   15194:	tst	r5, r0, lsr ip
   15198:	bne	15238 <sav_parse_time+0x230>
   1519c:	ldr	r0, [pc, #412]	; 15340 <sav_parse_time+0x338>
   151a0:	add	r0, pc, r0
   151a4:	ldrb	r0, [r0, ip]
   151a8:	movw	r1, #8197	; 0x2005
   151ac:	tst	r5, r1, lsr r0
   151b0:	bne	15238 <sav_parse_time+0x230>
   151b4:	ldr	r1, [pc, #392]	; 15344 <sav_parse_time+0x33c>
   151b8:	add	r1, pc, r1
   151bc:	ldrb	r4, [r1, r0]!
   151c0:	add	r3, r1, #1
   151c4:	b	151d8 <sav_parse_time+0x1d0>
   151c8:	str	r7, [r2, #4]
   151cc:	add	r3, r3, #1
   151d0:	cmp	r4, #0
   151d4:	beq	15238 <sav_parse_time+0x230>
   151d8:	sub	r4, r4, #1
   151dc:	ldrb	r0, [r3]
   151e0:	cmp	r0, #4
   151e4:	bhi	151cc <sav_parse_time+0x1c4>
   151e8:	add	r1, pc, #4
   151ec:	ldr	r0, [r1, r0, lsl #2]
   151f0:	add	pc, r1, r0
   151f4:	.word	0x00000014
   151f8:	.word	0x00000028
   151fc:	.word	0x00000030
   15200:	.word	0x0000003c
   15204:	.word	0xffffffd4
   15208:	ldrb	r0, [r6]
   1520c:	add	r1, r7, r7, lsl #2
   15210:	add	r0, r0, r1, lsl #1
   15214:	sub	r7, r0, #48	; 0x30
   15218:	b	151cc <sav_parse_time+0x1c4>
   1521c:	mov	r7, #0
   15220:	b	151cc <sav_parse_time+0x1c4>
   15224:	ldrb	r0, [r6]
   15228:	sub	r7, r0, #48	; 0x30
   1522c:	b	151cc <sav_parse_time+0x1c4>
   15230:	str	r7, [r2, #8]
   15234:	b	151cc <sav_parse_time+0x1c4>
   15238:	movw	r0, #10836	; 0x2a54
   1523c:	movt	r0, #1877	; 0x755
   15240:	tst	r5, r0, lsr ip
   15244:	bne	152d8 <sav_parse_time+0x2d0>
   15248:	ldr	r0, [pc, #248]	; 15348 <sav_parse_time+0x340>
   1524c:	add	r0, pc, r0
   15250:	ldrb	r9, [r0, ip]
   15254:	add	r6, r6, #1
   15258:	cmp	r6, lr
   1525c:	bne	15048 <sav_parse_time+0x40>
   15260:	cmp	r6, lr
   15264:	bne	152c4 <sav_parse_time+0x2bc>
   15268:	b	1527c <sav_parse_time+0x274>
   1526c:	mov	r9, #1
   15270:	mov	r6, r0
   15274:	cmp	r6, lr
   15278:	bne	152c4 <sav_parse_time+0x2bc>
   1527c:	ldr	r0, [pc, #200]	; 1534c <sav_parse_time+0x344>
   15280:	add	r0, pc, r0
   15284:	ldrb	r0, [r0, r9]
   15288:	movw	r1, #8197	; 0x2005
   1528c:	mov	r3, #1
   15290:	tst	r3, r1, lsr r0
   15294:	bne	152c4 <sav_parse_time+0x2bc>
   15298:	ldr	r1, [pc, #176]	; 15350 <sav_parse_time+0x348>
   1529c:	add	r1, pc, r1
   152a0:	ldrb	r0, [r1, r0]!
   152a4:	add	r1, r1, #1
   152a8:	ldrb	r3, [r1]
   152ac:	sub	r0, r0, #1
   152b0:	cmp	r3, #5
   152b4:	streq	r7, [r2]
   152b8:	add	r1, r1, #1
   152bc:	cmp	r0, #0
   152c0:	bne	152a8 <sav_parse_time+0x2a0>
   152c4:	cmp	r9, #12
   152c8:	bcc	152d8 <sav_parse_time+0x2d0>
   152cc:	mov	r5, #0
   152d0:	cmp	r6, lr
   152d4:	beq	15320 <sav_parse_time+0x318>
   152d8:	mov	r5, #29
   152dc:	ldr	r4, [sp, #20]
   152e0:	cmp	r4, #0
   152e4:	beq	15320 <sav_parse_time+0x318>
   152e8:	ldr	r6, [fp, #8]
   152ec:	ldr	r3, [sp, #16]
   152f0:	str	r3, [sp]
   152f4:	ldr	r0, [sp, #12]
   152f8:	str	r0, [sp, #4]
   152fc:	add	r7, sp, #32
   15300:	ldr	r2, [pc, #76]	; 15354 <sav_parse_time+0x34c>
   15304:	add	r2, pc, r2
   15308:	mov	r0, r7
   1530c:	mov	r1, #8192	; 0x2000
   15310:	bl	4d04 <snprintf@plt>
   15314:	mov	r0, r7
   15318:	mov	r1, r6
   1531c:	blx	r4
   15320:	mov	r0, r5
   15324:	sub	sp, fp, #28
   15328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1532c:	.word	0x00011ad5
   15330:	.word	0x00011abc
   15334:	.word	0x00011a98
   15338:	.word	0x00011aaa
   1533c:	.word	0x00011a43
   15340:	.word	0x000119c3
   15344:	.word	0x000119c6
   15348:	.word	0x000118fc
   1534c:	.word	0x0001190c
   15350:	.word	0x000118e2
   15354:	.word	0x00011afc

00015358 <sav_parse_date>:
   15358:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1535c:	add	fp, sp, #28
   15360:	sub	sp, sp, #36	; 0x24
   15364:	sub	sp, sp, #8192	; 0x2000
   15368:	add	ip, r0, r1
   1536c:	cmp	r1, #0
   15370:	add	lr, sp, #8
   15374:	stm	lr, {r0, r1, r3}
   15378:	beq	15648 <sav_parse_date+0x2f0>
   1537c:	mov	lr, #0
   15380:	mov	r8, #1
   15384:	mov	r4, r0
   15388:	str	ip, [sp, #20]
   1538c:	ldr	r0, [pc, #908]	; 15720 <sav_parse_date+0x3c8>
   15390:	add	r0, pc, r0
   15394:	ldrb	r9, [r0, r8]
   15398:	ldr	r1, [pc, #900]	; 15724 <sav_parse_date+0x3cc>
   1539c:	add	r1, pc, r1
   153a0:	ldrb	r1, [r1, r8]
   153a4:	ldr	r3, [pc, #892]	; 15728 <sav_parse_date+0x3d0>
   153a8:	add	r3, pc, r3
   153ac:	add	r5, r3, r1
   153b0:	uxtb	r1, r8
   153b4:	cmp	r1, #0
   153b8:	str	r4, [sp, #28]
   153bc:	beq	153c8 <sav_parse_date+0x70>
   153c0:	cmp	r1, #47	; 0x2f
   153c4:	bne	153d0 <sav_parse_date+0x78>
   153c8:	mov	sl, r5
   153cc:	b	1543c <sav_parse_date+0xe4>
   153d0:	str	lr, [sp, #24]
   153d4:	ldr	r1, [pc, #848]	; 1572c <sav_parse_date+0x3d4>
   153d8:	add	r1, pc, r1
   153dc:	ldrb	r7, [r1, r8]
   153e0:	add	sl, r5, r7
   153e4:	sub	lr, sl, #1
   153e8:	cmp	lr, r5
   153ec:	bcc	15430 <sav_parse_date+0xd8>
   153f0:	ldr	r0, [sp, #28]
   153f4:	ldrb	r1, [r0]
   153f8:	mov	r3, r5
   153fc:	b	1540c <sav_parse_date+0xb4>
   15400:	sub	lr, r6, #1
   15404:	cmp	lr, r3
   15408:	bcc	15430 <sav_parse_date+0xd8>
   1540c:	sub	ip, lr, r3
   15410:	mov	r6, r3
   15414:	ldrb	r4, [r6, ip, asr #1]!
   15418:	cmp	r1, r4
   1541c:	bcc	15400 <sav_parse_date+0xa8>
   15420:	bls	154d0 <sav_parse_date+0x178>
   15424:	add	r3, r6, #1
   15428:	cmp	lr, r3
   1542c:	bcs	1540c <sav_parse_date+0xb4>
   15430:	add	r9, r7, r9
   15434:	ldr	ip, [sp, #20]
   15438:	ldr	lr, [sp, #24]
   1543c:	ldr	r1, [pc, #748]	; 15730 <sav_parse_date+0x3d8>
   15440:	add	r1, pc, r1
   15444:	ldrb	r5, [r1, r8]
   15448:	cmp	r5, #0
   1544c:	beq	154e0 <sav_parse_date+0x188>
   15450:	add	r1, sl, r5, lsl #1
   15454:	sub	r4, r1, #2
   15458:	cmp	r4, sl
   1545c:	bcc	154bc <sav_parse_date+0x164>
   15460:	ldr	r0, [sp, #28]
   15464:	ldrb	r1, [r0]
   15468:	mov	r6, sl
   1546c:	mvn	r0, #1
   15470:	b	15480 <sav_parse_date+0x128>
   15474:	sub	r4, r3, #2
   15478:	cmp	r4, r6
   1547c:	bcc	154bc <sav_parse_date+0x164>
   15480:	sub	r3, r4, r6
   15484:	and	r7, r0, r3, asr #1
   15488:	mov	r3, r6
   1548c:	ldrb	r7, [r3, r7]!
   15490:	cmp	r1, r7
   15494:	bcc	15474 <sav_parse_date+0x11c>
   15498:	ldrb	r7, [r3, #1]
   1549c:	cmp	r1, r7
   154a0:	bls	154b4 <sav_parse_date+0x15c>
   154a4:	add	r6, r3, #2
   154a8:	cmp	r4, r6
   154ac:	bcs	15480 <sav_parse_date+0x128>
   154b0:	b	154bc <sav_parse_date+0x164>
   154b4:	sub	r1, r3, sl
   154b8:	asr	r5, r1, #1
   154bc:	ldr	r4, [sp, #28]
   154c0:	ldr	r6, [pc, #624]	; 15738 <sav_parse_date+0x3e0>
   154c4:	add	r6, pc, r6
   154c8:	add	r9, r5, r9
   154cc:	b	154ec <sav_parse_date+0x194>
   154d0:	sub	r0, r9, r5
   154d4:	add	r9, r0, r6
   154d8:	ldr	ip, [sp, #20]
   154dc:	ldr	lr, [sp, #24]
   154e0:	ldr	r4, [sp, #28]
   154e4:	ldr	r6, [pc, #584]	; 15734 <sav_parse_date+0x3dc>
   154e8:	add	r6, pc, r6
   154ec:	ldr	r0, [pc, #584]	; 1573c <sav_parse_date+0x3e4>
   154f0:	add	r0, pc, r0
   154f4:	ldrb	r0, [r0, r9]
   154f8:	ldr	r1, [pc, #576]	; 15740 <sav_parse_date+0x3e8>
   154fc:	add	r1, pc, r1
   15500:	ldrb	r1, [r1, r0]
   15504:	cmp	r1, #0
   15508:	beq	1561c <sav_parse_date+0x2c4>
   1550c:	ldrb	r3, [r6, r1]
   15510:	cmp	r3, #0
   15514:	beq	1561c <sav_parse_date+0x2c4>
   15518:	add	r1, r6, r1
   1551c:	add	r5, r1, #1
   15520:	b	15538 <sav_parse_date+0x1e0>
   15524:	mov	r1, #11
   15528:	str	r1, [r2, #16]
   1552c:	add	r5, r5, #1
   15530:	cmp	r3, #0
   15534:	beq	1561c <sav_parse_date+0x2c4>
   15538:	sub	r3, r3, #1
   1553c:	ldrb	r1, [r5]
   15540:	cmp	r1, #15
   15544:	bhi	1552c <sav_parse_date+0x1d4>
   15548:	add	r7, pc, #4
   1554c:	ldr	r1, [r7, r1, lsl #2]
   15550:	add	pc, r7, r1
   15554:	.word	0x00000040
   15558:	.word	0xffffffd8
   1555c:	.word	0x00000060
   15560:	.word	0x00000068
   15564:	.word	0x00000070
   15568:	.word	0x00000078
   1556c:	.word	0x00000080
   15570:	.word	0x00000088
   15574:	.word	0x00000090
   15578:	.word	0x00000098
   1557c:	.word	0x000000a0
   15580:	.word	0x000000a8
   15584:	.word	0x000000b0
   15588:	.word	0x000000b8
   1558c:	.word	0x000000c0
   15590:	.word	0xffffffd0
   15594:	add	r1, lr, lr, lsl #2
   15598:	lsl	r1, r1, #1
   1559c:	ldrb	r7, [r4]
   155a0:	sub	r7, r7, #48	; 0x30
   155a4:	uxtb	r6, r7
   155a8:	cmp	r6, #10
   155ac:	uxtabcc	lr, r1, r7
   155b0:	b	1552c <sav_parse_date+0x1d4>
   155b4:	mov	lr, #0
   155b8:	b	1552c <sav_parse_date+0x1d4>
   155bc:	str	lr, [r2, #12]
   155c0:	b	1552c <sav_parse_date+0x1d4>
   155c4:	mov	r1, #0
   155c8:	b	15528 <sav_parse_date+0x1d0>
   155cc:	mov	r1, #1
   155d0:	b	15528 <sav_parse_date+0x1d0>
   155d4:	mov	r1, #2
   155d8:	b	15528 <sav_parse_date+0x1d0>
   155dc:	mov	r1, #3
   155e0:	b	15528 <sav_parse_date+0x1d0>
   155e4:	mov	r1, #4
   155e8:	b	15528 <sav_parse_date+0x1d0>
   155ec:	mov	r1, #5
   155f0:	b	15528 <sav_parse_date+0x1d0>
   155f4:	mov	r1, #6
   155f8:	b	15528 <sav_parse_date+0x1d0>
   155fc:	mov	r1, #7
   15600:	b	15528 <sav_parse_date+0x1d0>
   15604:	mov	r1, #8
   15608:	b	15528 <sav_parse_date+0x1d0>
   1560c:	mov	r1, #9
   15610:	b	15528 <sav_parse_date+0x1d0>
   15614:	mov	r1, #10
   15618:	b	15528 <sav_parse_date+0x1d0>
   1561c:	cmp	r0, #1
   15620:	beq	156cc <sav_parse_date+0x374>
   15624:	ldr	r1, [pc, #280]	; 15744 <sav_parse_date+0x3ec>
   15628:	add	r1, pc, r1
   1562c:	ldrb	r8, [r1, r0]
   15630:	add	r4, r4, #1
   15634:	cmp	r4, ip
   15638:	bne	1538c <sav_parse_date+0x34>
   1563c:	cmp	r4, ip
   15640:	bne	156b8 <sav_parse_date+0x360>
   15644:	b	1565c <sav_parse_date+0x304>
   15648:	mov	r8, #1
   1564c:	mov	lr, #0
   15650:	mov	r4, r0
   15654:	cmp	r4, ip
   15658:	bne	156b8 <sav_parse_date+0x360>
   1565c:	ldr	r0, [pc, #228]	; 15748 <sav_parse_date+0x3f0>
   15660:	add	r0, pc, r0
   15664:	ldrb	r1, [r0, r8]
   15668:	ldr	r3, [pc, #220]	; 1574c <sav_parse_date+0x3f4>
   1566c:	add	r3, pc, r3
   15670:	ldrb	r0, [r3, r1]
   15674:	cmp	r0, #0
   15678:	beq	156b8 <sav_parse_date+0x360>
   1567c:	add	r1, r1, r3
   15680:	add	r1, r1, #1
   15684:	add	r3, lr, #100	; 0x64
   15688:	b	15698 <sav_parse_date+0x340>
   1568c:	add	r1, r1, #1
   15690:	cmp	r0, #0
   15694:	beq	156b8 <sav_parse_date+0x360>
   15698:	ldrb	r7, [r1]
   1569c:	sub	r0, r0, #1
   156a0:	cmp	r7, #1
   156a4:	bne	1568c <sav_parse_date+0x334>
   156a8:	cmp	lr, #69	; 0x45
   156ac:	strgt	lr, [r2, #20]
   156b0:	strle	r3, [r2, #20]
   156b4:	b	1568c <sav_parse_date+0x334>
   156b8:	cmp	r8, #47	; 0x2f
   156bc:	bcc	156cc <sav_parse_date+0x374>
   156c0:	mov	r5, #0
   156c4:	cmp	r4, ip
   156c8:	beq	15714 <sav_parse_date+0x3bc>
   156cc:	mov	r5, #29
   156d0:	ldr	r4, [sp, #16]
   156d4:	cmp	r4, #0
   156d8:	beq	15714 <sav_parse_date+0x3bc>
   156dc:	ldr	r6, [fp, #8]
   156e0:	ldr	r3, [sp, #12]
   156e4:	str	r3, [sp]
   156e8:	ldr	r0, [sp, #8]
   156ec:	str	r0, [sp, #4]
   156f0:	add	r7, sp, #32
   156f4:	ldr	r2, [pc, #84]	; 15750 <sav_parse_date+0x3f8>
   156f8:	add	r2, pc, r2
   156fc:	mov	r0, r7
   15700:	mov	r1, #8192	; 0x2000
   15704:	bl	4d04 <snprintf@plt>
   15708:	mov	r0, r7
   1570c:	mov	r1, r6
   15710:	blx	r4
   15714:	mov	r0, r5
   15718:	sub	sp, fp, #28
   1571c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15720:	.word	0x00011894
   15724:	.word	0x00011858
   15728:	.word	0x000117f1
   1572c:	.word	0x0001187c
   15730:	.word	0x00011990
   15734:	.word	0x00011896
   15738:	.word	0x000118ba
   1573c:	.word	0x00011794
   15740:	.word	0x00011848
   15744:	.word	0x000116e2
   15748:	.word	0x00011740
   1574c:	.word	0x00011712
   15750:	.word	0x0001172e

00015754 <sav_parse_timestamp>:
   15754:	push	{r4, r5, fp, lr}
   15758:	add	fp, sp, #8
   1575c:	sub	sp, sp, #56	; 0x38
   15760:	mov	r5, r1
   15764:	mov	r4, r0
   15768:	add	r2, sp, #8
   1576c:	vmov.i32	q8, #0	; 0x00000000
   15770:	add	r0, r2, #28
   15774:	vst1.32	{d16-d17}, [r0]
   15778:	add	r0, r2, #16
   1577c:	vst1.64	{d16-d17}, [r0]
   15780:	mov	r0, #32
   15784:	mov	r1, r2
   15788:	vst1.64	{d16-d17}, [r1], r0
   1578c:	mvn	r0, #0
   15790:	str	r0, [r1]
   15794:	ldr	r3, [r4, #24]
   15798:	ldr	r0, [r4, #40]	; 0x28
   1579c:	str	r0, [sp]
   157a0:	add	r0, r5, #101	; 0x65
   157a4:	mov	r1, #8
   157a8:	bl	495c <sav_parse_time@plt>
   157ac:	cmp	r0, #0
   157b0:	bne	157d8 <sav_parse_timestamp+0x84>
   157b4:	ldr	r3, [r4, #24]
   157b8:	ldr	r0, [r4, #40]	; 0x28
   157bc:	str	r0, [sp]
   157c0:	add	r0, r5, #92	; 0x5c
   157c4:	add	r2, sp, #8
   157c8:	mov	r1, #9
   157cc:	bl	4af4 <sav_parse_date@plt>
   157d0:	cmp	r0, #0
   157d4:	beq	157e0 <sav_parse_timestamp+0x8c>
   157d8:	sub	sp, fp, #8
   157dc:	pop	{r4, r5, fp, pc}
   157e0:	add	r0, sp, #8
   157e4:	bl	48cc <mktime@plt>
   157e8:	str	r0, [r4, #324]	; 0x144
   157ec:	mov	r0, #0
   157f0:	sub	sp, fp, #8
   157f4:	pop	{r4, r5, fp, pc}

000157f8 <readstat_parse_sav>:
   157f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   157fc:	add	fp, sp, #24
   15800:	sub	sp, sp, #248	; 0xf8
   15804:	mov	r6, r2
   15808:	mov	r2, r1
   1580c:	mov	r7, r0
   15810:	ldr	r4, [r0, #32]
   15814:	ldr	r3, [r4]
   15818:	ldr	r1, [r4, #20]
   1581c:	mov	r0, r2
   15820:	blx	r3
   15824:	cmn	r0, #1
   15828:	beq	15898 <readstat_parse_sav+0xa0>
   1582c:	ldr	r3, [r4, #8]
   15830:	ldr	r2, [r4, #20]
   15834:	mov	r9, #0
   15838:	mov	r0, #0
   1583c:	mov	r1, #2
   15840:	blx	r3
   15844:	mov	r8, #15
   15848:	cmn	r0, #1
   1584c:	beq	15994 <readstat_parse_sav+0x19c>
   15850:	mov	r5, r0
   15854:	ldr	r3, [r4, #8]
   15858:	ldr	r2, [r4, #20]
   1585c:	mov	r9, #0
   15860:	mov	r0, #0
   15864:	mov	r1, #0
   15868:	blx	r3
   1586c:	cmn	r0, #1
   15870:	beq	158a0 <readstat_parse_sav+0xa8>
   15874:	ldr	r3, [r4, #12]
   15878:	ldr	r2, [r4, #20]
   1587c:	add	r0, sp, #68	; 0x44
   15880:	mov	r1, #176	; 0xb0
   15884:	blx	r3
   15888:	cmp	r0, #176	; 0xb0
   1588c:	bcs	158a8 <readstat_parse_sav+0xb0>
   15890:	mov	r8, #2
   15894:	b	15994 <readstat_parse_sav+0x19c>
   15898:	mov	r8, #1
   1589c:	b	159b0 <readstat_parse_sav+0x1b8>
   158a0:	mov	r9, #0
   158a4:	b	15994 <readstat_parse_sav+0x19c>
   158a8:	add	r0, sp, #68	; 0x44
   158ac:	mov	r1, r4
   158b0:	bl	4ac4 <sav_ctx_init@plt>
   158b4:	cmp	r0, #0
   158b8:	beq	15950 <readstat_parse_sav+0x158>
   158bc:	mov	r9, r0
   158c0:	add	r0, r7, #16
   158c4:	vld1.32	{d16-d17}, [r0]
   158c8:	mov	r0, #48	; 0x30
   158cc:	mov	r1, r7
   158d0:	vld1.32	{d18-d19}, [r1], r0
   158d4:	add	r0, r9, #16
   158d8:	vst1.32	{d16-d17}, [r0]
   158dc:	mov	r0, #32
   158e0:	mov	r2, r9
   158e4:	vst1.32	{d18-d19}, [r2], r0
   158e8:	ldr	r0, [r7, #36]	; 0x24
   158ec:	str	r0, [r9, #56]	; 0x38
   158f0:	ldr	r0, [r7, #40]	; 0x28
   158f4:	str	r6, [r9, #40]	; 0x28
   158f8:	str	r5, [r2]
   158fc:	str	r0, [r9, #60]	; 0x3c
   15900:	ldr	r0, [r1]
   15904:	cmp	r0, #1
   15908:	strge	r0, [r9, #360]	; 0x168
   1590c:	ldr	r1, [r9, #352]	; 0x160
   15910:	cmn	r1, #1
   15914:	beq	1595c <readstat_parse_sav+0x164>
   15918:	ldr	r0, [r9, #360]	; 0x168
   1591c:	sub	r0, r1, r0
   15920:	cmn	r0, #1
   15924:	strle	r1, [r9, #360]	; 0x168
   15928:	movle	r0, #0
   1592c:	str	r0, [r9, #356]	; 0x164
   15930:	ldr	r1, [r7, #44]	; 0x2c
   15934:	cmp	r1, r0
   15938:	mov	r2, r0
   1593c:	movlt	r2, r1
   15940:	cmp	r1, #0
   15944:	movle	r2, r0
   15948:	str	r2, [r9, #356]	; 0x164
   1594c:	b	15968 <readstat_parse_sav+0x170>
   15950:	mov	r8, #5
   15954:	mov	r9, #0
   15958:	b	15994 <readstat_parse_sav+0x19c>
   1595c:	ldr	r0, [r7, #44]	; 0x2c
   15960:	cmp	r0, #1
   15964:	strge	r0, [r9, #356]	; 0x164
   15968:	add	r7, sp, #68	; 0x44
   1596c:	mov	r0, r9
   15970:	mov	r1, r7
   15974:	bl	486c <sav_parse_timestamp@plt>
   15978:	cmp	r0, #0
   1597c:	bne	15990 <readstat_parse_sav+0x198>
   15980:	mov	r0, r9
   15984:	bl	15b44 <sav_parse_records_pass1>
   15988:	cmp	r0, #0
   1598c:	beq	159bc <readstat_parse_sav+0x1c4>
   15990:	mov	r8, r0
   15994:	ldr	r1, [r4, #4]
   15998:	ldr	r0, [r4, #20]
   1599c:	blx	r1
   159a0:	cmp	r9, #0
   159a4:	beq	159b0 <readstat_parse_sav+0x1b8>
   159a8:	mov	r0, r9
   159ac:	bl	498c <sav_ctx_free@plt>
   159b0:	mov	r0, r8
   159b4:	sub	sp, fp, #24
   159b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   159bc:	ldr	r3, [r4, #8]
   159c0:	ldr	r2, [r4, #20]
   159c4:	mov	r0, #176	; 0xb0
   159c8:	mov	r1, #0
   159cc:	blx	r3
   159d0:	cmn	r0, #1
   159d4:	beq	15994 <readstat_parse_sav+0x19c>
   159d8:	mov	r0, r9
   159dc:	bl	15d08 <sav_update_progress>
   159e0:	cmp	r0, #0
   159e4:	bne	15990 <readstat_parse_sav+0x198>
   159e8:	mov	r0, r9
   159ec:	bl	15d38 <sav_parse_records_pass2>
   159f0:	cmp	r0, #0
   159f4:	bne	15990 <readstat_parse_sav+0x198>
   159f8:	mov	r0, r9
   159fc:	bl	16090 <sav_set_n_segments_and_var_count>
   15a00:	ldr	r0, [r9, #348]	; 0x15c
   15a04:	cmp	r0, #0
   15a08:	beq	15a3c <readstat_parse_sav+0x244>
   15a0c:	ldr	r0, [r9]
   15a10:	cmp	r0, #0
   15a14:	beq	15af4 <readstat_parse_sav+0x2fc>
   15a18:	add	r0, sp, #8
   15a1c:	add	r1, r0, #8
   15a20:	add	r0, r0, #24
   15a24:	ldr	r2, [r9, #352]	; 0x160
   15a28:	cmn	r2, #1
   15a2c:	beq	15a44 <readstat_parse_sav+0x24c>
   15a30:	ldr	r2, [r9, #356]	; 0x164
   15a34:	asr	r3, r2, #31
   15a38:	b	15a4c <readstat_parse_sav+0x254>
   15a3c:	mov	r8, #5
   15a40:	b	15994 <readstat_parse_sav+0x19c>
   15a44:	mvn	r2, #0
   15a48:	mvn	r3, #0
   15a4c:	str	r2, [sp, #8]
   15a50:	str	r3, [sp, #12]
   15a54:	ldr	r2, [r9, #348]	; 0x15c
   15a58:	asr	r3, r2, #31
   15a5c:	strd	r2, [r1]
   15a60:	ldr	r1, [r9, #324]	; 0x144
   15a64:	str	r1, [sp, #28]
   15a68:	str	r1, [sp, #24]
   15a6c:	ldr	r2, [r9, #424]	; 0x1a8
   15a70:	ldr	r1, [r9, #428]	; 0x1ac
   15a74:	ldr	r3, [r9, #432]	; 0x1b0
   15a78:	asr	r5, r2, #31
   15a7c:	stm	r0, {r2, r5}
   15a80:	str	r1, [sp, #40]	; 0x28
   15a84:	mov	r0, #0
   15a88:	str	r0, [sp, #52]	; 0x34
   15a8c:	str	r0, [sp, #48]	; 0x30
   15a90:	str	r3, [sp, #44]	; 0x2c
   15a94:	ldr	r0, [r9, #56]	; 0x38
   15a98:	ldrb	r1, [sp, #60]	; 0x3c
   15a9c:	and	r1, r1, #254	; 0xfe
   15aa0:	strb	r1, [sp, #60]	; 0x3c
   15aa4:	str	r0, [sp, #56]	; 0x38
   15aa8:	ldr	r0, [r9, #336]	; 0x150
   15aac:	str	r0, [sp]
   15ab0:	add	r5, r9, #64	; 0x40
   15ab4:	add	r2, r7, #109	; 0x6d
   15ab8:	mov	r0, r5
   15abc:	movw	r1, #257	; 0x101
   15ac0:	mov	r3, #64	; 0x40
   15ac4:	bl	4cbc <readstat_convert@plt>
   15ac8:	mov	r8, r0
   15acc:	cmp	r0, #0
   15ad0:	bne	15994 <readstat_parse_sav+0x19c>
   15ad4:	str	r5, [sp, #52]	; 0x34
   15ad8:	ldr	r2, [r9]
   15adc:	ldr	r1, [r9, #40]	; 0x28
   15ae0:	add	r0, sp, #8
   15ae4:	blx	r2
   15ae8:	mov	r8, #4
   15aec:	cmp	r0, #0
   15af0:	bne	15994 <readstat_parse_sav+0x19c>
   15af4:	mov	r0, r9
   15af8:	bl	16120 <sav_parse_variable_display_parameter_record>
   15afc:	cmp	r0, #0
   15b00:	bne	15990 <readstat_parse_sav+0x198>
   15b04:	mov	r0, r9
   15b08:	bl	161fc <sav_handle_variables>
   15b0c:	cmp	r0, #0
   15b10:	bne	15990 <readstat_parse_sav+0x198>
   15b14:	mov	r0, r9
   15b18:	bl	162f8 <sav_handle_fweight>
   15b1c:	cmp	r0, #0
   15b20:	bne	15990 <readstat_parse_sav+0x198>
   15b24:	ldr	r0, [r9, #16]
   15b28:	cmp	r0, #0
   15b2c:	beq	15b3c <readstat_parse_sav+0x344>
   15b30:	mov	r0, r9
   15b34:	bl	16394 <sav_read_data>
   15b38:	b	15990 <readstat_parse_sav+0x198>
   15b3c:	mov	r8, #0
   15b40:	b	15994 <readstat_parse_sav+0x19c>

00015b44 <sav_parse_records_pass1>:
   15b44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b48:	add	fp, sp, #28
   15b4c:	sub	sp, sp, #20
   15b50:	sub	sp, sp, #4096	; 0x1000
   15b54:	mov	sl, r0
   15b58:	ldr	r4, [r0, #36]	; 0x24
   15b5c:	ldr	r3, [r4, #12]
   15b60:	ldr	r2, [r4, #20]
   15b64:	add	r0, sp, #12
   15b68:	mov	r1, #4
   15b6c:	blx	r3
   15b70:	cmp	r0, #4
   15b74:	bcc	15ce0 <sav_parse_records_pass1+0x19c>
   15b78:	add	r9, sp, #12
   15b7c:	mov	r6, sp
   15b80:	add	r8, sp, #16
   15b84:	b	15bb4 <sav_parse_records_pass1+0x70>
   15b88:	mov	r0, sl
   15b8c:	bl	16728 <sav_skip_document_record>
   15b90:	cmp	r0, #0
   15b94:	bne	15cf0 <sav_parse_records_pass1+0x1ac>
   15b98:	ldr	r3, [r4, #12]
   15b9c:	ldr	r2, [r4, #20]
   15ba0:	mov	r0, r9
   15ba4:	mov	r1, #4
   15ba8:	blx	r3
   15bac:	cmp	r0, #4
   15bb0:	bcc	15ce0 <sav_parse_records_pass1+0x19c>
   15bb4:	ldrb	r1, [sl, #436]	; 0x1b4
   15bb8:	ldr	r0, [sp, #12]
   15bbc:	tst	r1, #1
   15bc0:	beq	15bcc <sav_parse_records_pass1+0x88>
   15bc4:	bl	480c <byteswap4@plt>
   15bc8:	str	r0, [sp, #12]
   15bcc:	sub	r1, r0, #2
   15bd0:	mov	r7, #5
   15bd4:	cmp	r1, #5
   15bd8:	bhi	15cf8 <sav_parse_records_pass1+0x1b4>
   15bdc:	add	r0, pc, #4
   15be0:	ldr	r1, [r0, r1, lsl #2]
   15be4:	add	pc, r0, r1
   15be8:	.word	0x00000018
   15bec:	.word	0x0000002c
   15bf0:	.word	0x000000fc
   15bf4:	.word	0x000000fc
   15bf8:	.word	0xffffffa0
   15bfc:	.word	0x00000040
   15c00:	mov	r0, sl
   15c04:	bl	1649c <sav_skip_variable_record>
   15c08:	cmp	r0, #0
   15c0c:	beq	15b98 <sav_parse_records_pass1+0x54>
   15c10:	b	15cf0 <sav_parse_records_pass1+0x1ac>
   15c14:	mov	r0, sl
   15c18:	bl	165a4 <sav_skip_value_label_record>
   15c1c:	cmp	r0, #0
   15c20:	beq	15b98 <sav_parse_records_pass1+0x54>
   15c24:	b	15cf0 <sav_parse_records_pass1+0x1ac>
   15c28:	ldr	r3, [r4, #12]
   15c2c:	ldr	r2, [r4, #20]
   15c30:	mov	r0, r6
   15c34:	mov	r1, #12
   15c38:	blx	r3
   15c3c:	cmp	r0, #12
   15c40:	bcc	15ce0 <sav_parse_records_pass1+0x19c>
   15c44:	ldrb	r0, [sl, #436]	; 0x1b4
   15c48:	tst	r0, #1
   15c4c:	beq	15c6c <sav_parse_records_pass1+0x128>
   15c50:	mov	r5, #0
   15c54:	ldr	r0, [r6, -r5, lsl #2]
   15c58:	bl	480c <byteswap4@plt>
   15c5c:	str	r0, [r6, -r5, lsl #2]
   15c60:	sub	r5, r5, #1
   15c64:	cmn	r5, #3
   15c68:	bne	15c54 <sav_parse_records_pass1+0x110>
   15c6c:	ldm	sp, {r0, r1, r2}
   15c70:	mul	r5, r2, r1
   15c74:	cmp	r0, #3
   15c78:	bne	15cbc <sav_parse_records_pass1+0x178>
   15c7c:	cmp	r5, #4096	; 0x1000
   15c80:	bhi	15ce4 <sav_parse_records_pass1+0x1a0>
   15c84:	ldr	r3, [r4, #12]
   15c88:	ldr	r2, [r4, #20]
   15c8c:	mov	r0, r8
   15c90:	mov	r1, r5
   15c94:	blx	r3
   15c98:	cmp	r0, r5
   15c9c:	bcc	15ce4 <sav_parse_records_pass1+0x1a0>
   15ca0:	mov	r0, r8
   15ca4:	mov	r1, r5
   15ca8:	mov	r2, sl
   15cac:	bl	167ac <sav_parse_machine_integer_info_record>
   15cb0:	cmp	r0, #0
   15cb4:	beq	15b98 <sav_parse_records_pass1+0x54>
   15cb8:	b	15cf0 <sav_parse_records_pass1+0x1ac>
   15cbc:	ldr	r3, [r4, #8]
   15cc0:	ldr	r2, [r4, #20]
   15cc4:	mov	r0, r5
   15cc8:	mov	r1, #1
   15ccc:	blx	r3
   15cd0:	cmn	r0, #1
   15cd4:	bne	15b98 <sav_parse_records_pass1+0x54>
   15cd8:	mov	r7, #15
   15cdc:	b	15ce4 <sav_parse_records_pass1+0x1a0>
   15ce0:	mov	r7, #2
   15ce4:	mov	r0, r7
   15ce8:	sub	sp, fp, #28
   15cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cf0:	mov	r7, r0
   15cf4:	b	15ce4 <sav_parse_records_pass1+0x1a0>
   15cf8:	movw	r1, #999	; 0x3e7
   15cfc:	cmp	r0, r1
   15d00:	moveq	r7, #0
   15d04:	b	15ce4 <sav_parse_records_pass1+0x1a0>

00015d08 <sav_update_progress>:
   15d08:	push	{fp, lr}
   15d0c:	mov	fp, sp
   15d10:	ldr	r1, [r0, #28]
   15d14:	ldr	ip, [r0, #32]
   15d18:	ldr	r3, [r0, #36]	; 0x24
   15d1c:	ldr	r2, [r0, #40]	; 0x28
   15d20:	ldr	lr, [r3, #16]
   15d24:	ldr	r3, [r3, #20]
   15d28:	mov	r0, ip
   15d2c:	mov	ip, lr
   15d30:	pop	{fp, lr}
   15d34:	bx	ip

00015d38 <sav_parse_records_pass2>:
   15d38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d3c:	add	fp, sp, #28
   15d40:	sub	sp, sp, #36	; 0x24
   15d44:	mov	r4, r0
   15d48:	ldr	r7, [r0, #36]	; 0x24
   15d4c:	mov	r0, #4096	; 0x1000
   15d50:	bl	4cb0 <readstat_malloc@plt>
   15d54:	cmp	r0, #0
   15d58:	beq	16044 <sav_parse_records_pass2+0x30c>
   15d5c:	mov	r5, r0
   15d60:	ldr	r3, [r7, #12]
   15d64:	ldr	r2, [r7, #20]
   15d68:	add	r0, sp, #32
   15d6c:	mov	r1, #4
   15d70:	blx	r3
   15d74:	cmp	r0, #4
   15d78:	str	r5, [sp, #12]
   15d7c:	bcc	1602c <sav_parse_records_pass2+0x2f4>
   15d80:	mov	r0, #4096	; 0x1000
   15d84:	str	r0, [sp, #8]
   15d88:	add	r8, sp, #32
   15d8c:	add	r5, sp, #20
   15d90:	str	r4, [sp, #16]
   15d94:	str	r7, [sp, #4]
   15d98:	b	15dcc <sav_parse_records_pass2+0x94>
   15d9c:	mov	r0, r4
   15da0:	bl	16f74 <sav_read_document_record>
   15da4:	cmp	r0, #0
   15da8:	bne	16070 <sav_parse_records_pass2+0x338>
   15dac:	ldr	r3, [r7, #12]
   15db0:	ldr	r2, [r7, #20]
   15db4:	mov	r0, r8
   15db8:	mov	r1, #4
   15dbc:	blx	r3
   15dc0:	cmp	r0, #4
   15dc4:	ldr	r4, [sp, #16]
   15dc8:	bcc	1602c <sav_parse_records_pass2+0x2f4>
   15dcc:	ldrb	r1, [r4, #436]	; 0x1b4
   15dd0:	ldr	r0, [sp, #32]
   15dd4:	tst	r1, #1
   15dd8:	beq	15de4 <sav_parse_records_pass2+0xac>
   15ddc:	bl	480c <byteswap4@plt>
   15de0:	str	r0, [sp, #32]
   15de4:	sub	r1, r0, #2
   15de8:	mov	r6, #5
   15dec:	cmp	r1, #5
   15df0:	bhi	16054 <sav_parse_records_pass2+0x31c>
   15df4:	add	r0, pc, #4
   15df8:	ldr	r1, [r0, r1, lsl #2]
   15dfc:	add	pc, r0, r1
   15e00:	.word	0x00000018
   15e04:	.word	0x0000002c
   15e08:	.word	0x00000230
   15e0c:	.word	0x00000230
   15e10:	.word	0xffffff9c
   15e14:	.word	0x00000040
   15e18:	mov	r0, r4
   15e1c:	bl	168b8 <sav_read_variable_record>
   15e20:	cmp	r0, #0
   15e24:	beq	15dac <sav_parse_records_pass2+0x74>
   15e28:	b	16070 <sav_parse_records_pass2+0x338>
   15e2c:	mov	r0, r4
   15e30:	bl	16b50 <sav_read_value_label_record>
   15e34:	cmp	r0, #0
   15e38:	beq	15dac <sav_parse_records_pass2+0x74>
   15e3c:	b	16070 <sav_parse_records_pass2+0x338>
   15e40:	ldr	r3, [r7, #12]
   15e44:	ldr	r2, [r7, #20]
   15e48:	mov	r0, r5
   15e4c:	mov	r1, #12
   15e50:	blx	r3
   15e54:	cmp	r0, #12
   15e58:	bcc	1602c <sav_parse_records_pass2+0x2f4>
   15e5c:	ldr	r7, [sp, #12]
   15e60:	ldrb	r0, [r4, #436]	; 0x1b4
   15e64:	tst	r0, #1
   15e68:	beq	15e88 <sav_parse_records_pass2+0x150>
   15e6c:	mov	r4, #0
   15e70:	ldr	r0, [r5, -r4, lsl #2]
   15e74:	bl	480c <byteswap4@plt>
   15e78:	str	r0, [r5, -r4, lsl #2]
   15e7c:	sub	r4, r4, #1
   15e80:	cmn	r4, #3
   15e84:	bne	15e70 <sav_parse_records_pass2+0x138>
   15e88:	ldr	r9, [sp, #20]
   15e8c:	ldr	sl, [sp, #24]
   15e90:	ldr	r4, [sp, #28]
   15e94:	mul	r8, r4, sl
   15e98:	ldr	r1, [sp, #8]
   15e9c:	cmp	r1, r8
   15ea0:	str	sl, [sp]
   15ea4:	bcs	15ec4 <sav_parse_records_pass2+0x18c>
   15ea8:	mov	r0, r7
   15eac:	mov	r1, r8
   15eb0:	bl	4d70 <readstat_realloc@plt>
   15eb4:	cmp	r0, #0
   15eb8:	mov	r1, r8
   15ebc:	bne	15ed0 <sav_parse_records_pass2+0x198>
   15ec0:	b	16080 <sav_parse_records_pass2+0x348>
   15ec4:	cmp	r8, #0
   15ec8:	mov	r0, r7
   15ecc:	beq	16030 <sav_parse_records_pass2+0x2f8>
   15ed0:	mov	sl, r4
   15ed4:	str	r1, [sp, #8]
   15ed8:	ldr	r1, [sp, #4]
   15edc:	ldr	r3, [r1, #12]
   15ee0:	ldr	r2, [r1, #20]
   15ee4:	mov	r4, r0
   15ee8:	mov	r1, r8
   15eec:	blx	r3
   15ef0:	cmp	r0, r8
   15ef4:	str	r4, [sp, #12]
   15ef8:	bcc	16030 <sav_parse_records_pass2+0x2f8>
   15efc:	sub	r0, r9, #4
   15f00:	cmp	r0, #18
   15f04:	bhi	16020 <sav_parse_records_pass2+0x2e8>
   15f08:	add	r1, pc, #12
   15f0c:	ldr	r0, [r1, r0, lsl #2]
   15f10:	add	r8, sp, #32
   15f14:	ldr	r7, [sp, #4]
   15f18:	add	pc, r1, r0
   15f1c:	.word	0x0000004c
   15f20:	.word	0xfffffe90
   15f24:	.word	0xfffffe90
   15f28:	.word	0xfffffe90
   15f2c:	.word	0xfffffe90
   15f30:	.word	0xfffffe90
   15f34:	.word	0xfffffe90
   15f38:	.word	0x0000006c
   15f3c:	.word	0xfffffe90
   15f40:	.word	0x0000008c
   15f44:	.word	0x000000a8
   15f48:	.word	0xfffffe90
   15f4c:	.word	0xfffffe90
   15f50:	.word	0xfffffe90
   15f54:	.word	0xfffffe90
   15f58:	.word	0xfffffe90
   15f5c:	.word	0xfffffe90
   15f60:	.word	0x000000c4
   15f64:	.word	0x000000e4
   15f68:	ldr	r0, [sp, #12]
   15f6c:	ldr	r1, [sp]
   15f70:	mov	r2, sl
   15f74:	ldr	r3, [sp, #16]
   15f78:	bl	170b8 <sav_parse_machine_floating_point_record>
   15f7c:	cmp	r0, #0
   15f80:	beq	15dac <sav_parse_records_pass2+0x74>
   15f84:	b	16070 <sav_parse_records_pass2+0x338>
   15f88:	ldr	r0, [sp, #12]
   15f8c:	ldr	r1, [sp]
   15f90:	mov	r2, sl
   15f94:	ldr	r3, [sp, #16]
   15f98:	bl	17180 <sav_store_variable_display_parameter_record>
   15f9c:	cmp	r0, #0
   15fa0:	beq	15dac <sav_parse_records_pass2+0x74>
   15fa4:	b	16070 <sav_parse_records_pass2+0x338>
   15fa8:	ldr	r0, [sp, #12]
   15fac:	mov	r1, sl
   15fb0:	ldr	r2, [sp, #16]
   15fb4:	bl	4c80 <sav_parse_long_variable_names_record@plt>
   15fb8:	cmp	r0, #0
   15fbc:	beq	15dac <sav_parse_records_pass2+0x74>
   15fc0:	b	16070 <sav_parse_records_pass2+0x338>
   15fc4:	ldr	r0, [sp, #12]
   15fc8:	mov	r1, sl
   15fcc:	ldr	r2, [sp, #16]
   15fd0:	bl	4d64 <sav_parse_very_long_string_record@plt>
   15fd4:	cmp	r0, #0
   15fd8:	beq	15dac <sav_parse_records_pass2+0x74>
   15fdc:	b	16070 <sav_parse_records_pass2+0x338>
   15fe0:	ldr	r0, [sp, #12]
   15fe4:	ldr	r1, [sp]
   15fe8:	mov	r2, sl
   15fec:	ldr	r3, [sp, #16]
   15ff0:	bl	17210 <sav_parse_long_string_value_labels_record>
   15ff4:	cmp	r0, #0
   15ff8:	beq	15dac <sav_parse_records_pass2+0x74>
   15ffc:	b	16070 <sav_parse_records_pass2+0x338>
   16000:	ldr	r0, [sp, #12]
   16004:	ldr	r1, [sp]
   16008:	mov	r2, sl
   1600c:	ldr	r3, [sp, #16]
   16010:	bl	175c4 <sav_parse_long_string_missing_values_record>
   16014:	cmp	r0, #0
   16018:	beq	15dac <sav_parse_records_pass2+0x74>
   1601c:	b	16070 <sav_parse_records_pass2+0x338>
   16020:	add	r8, sp, #32
   16024:	ldr	r7, [sp, #4]
   16028:	b	15dac <sav_parse_records_pass2+0x74>
   1602c:	mov	r6, #2
   16030:	ldr	r0, [sp, #12]
   16034:	cmp	r0, #0
   16038:	beq	16048 <sav_parse_records_pass2+0x310>
   1603c:	bl	4938 <free@plt>
   16040:	b	16048 <sav_parse_records_pass2+0x310>
   16044:	mov	r6, #3
   16048:	mov	r0, r6
   1604c:	sub	sp, fp, #28
   16050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16054:	movw	r1, #999	; 0x3e7
   16058:	cmp	r0, r1
   1605c:	bne	16030 <sav_parse_records_pass2+0x2f8>
   16060:	mov	r0, r4
   16064:	bl	1707c <sav_read_dictionary_termination_record>
   16068:	cmp	r0, #0
   1606c:	beq	16078 <sav_parse_records_pass2+0x340>
   16070:	mov	r6, r0
   16074:	b	16030 <sav_parse_records_pass2+0x2f8>
   16078:	mov	r6, #0
   1607c:	b	16030 <sav_parse_records_pass2+0x2f8>
   16080:	mov	r0, #0
   16084:	str	r0, [sp, #12]
   16088:	mov	r6, #3
   1608c:	b	16030 <sav_parse_records_pass2+0x2f8>

00016090 <sav_set_n_segments_and_var_count>:
   16090:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16094:	add	fp, sp, #24
   16098:	mov	r8, r0
   1609c:	mov	r0, #0
   160a0:	str	r0, [r8, #348]	; 0x15c
   160a4:	ldr	r1, [r8, #340]	; 0x154
   160a8:	cmp	r1, #1
   160ac:	blt	1610c <sav_set_n_segments_and_var_count+0x7c>
   160b0:	ldr	r1, [r8, #44]	; 0x2c
   160b4:	ldr	r3, [r8, #340]	; 0x154
   160b8:	ldr	r2, [r8, #348]	; 0x15c
   160bc:	movw	r4, #2081	; 0x821
   160c0:	movt	r4, #8322	; 0x2082
   160c4:	b	160e0 <sav_set_n_segments_and_var_count+0x50>
   160c8:	str	r2, [r5, #8]
   160cc:	ldr	r7, [r5, #48]	; 0x30
   160d0:	add	r0, r7, r0
   160d4:	add	r2, r2, #1
   160d8:	cmp	r0, r3
   160dc:	bge	16108 <sav_set_n_segments_and_var_count+0x78>
   160e0:	ldr	r5, [r1, r0, lsl #2]
   160e4:	ldr	r6, [r5, #20]
   160e8:	cmp	r6, #0
   160ec:	beq	160c8 <sav_set_n_segments_and_var_count+0x38>
   160f0:	add	r6, r6, #251	; 0xfb
   160f4:	lsr	r6, r6, #2
   160f8:	umull	r6, r7, r6, r4
   160fc:	lsr	r7, r7, #3
   16100:	str	r7, [r5, #48]	; 0x30
   16104:	b	160c8 <sav_set_n_segments_and_var_count+0x38>
   16108:	str	r2, [r8, #348]	; 0x15c
   1610c:	ldr	r0, [r8, #348]	; 0x15c
   16110:	mov	r1, #4
   16114:	bl	4a28 <readstat_calloc@plt>
   16118:	str	r0, [r8, #52]	; 0x34
   1611c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016120 <sav_parse_variable_display_parameter_record>:
   16120:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16124:	add	fp, sp, #24
   16128:	mov	r4, r0
   1612c:	ldr	r0, [r0, #328]	; 0x148
   16130:	cmp	r0, #0
   16134:	beq	161f4 <sav_parse_variable_display_parameter_record+0xd4>
   16138:	ldr	r1, [r4, #332]	; 0x14c
   1613c:	ldr	r2, [r4, #340]	; 0x154
   16140:	cmp	r1, r2, lsl #1
   16144:	addne	r3, r2, r2, lsl #1
   16148:	movne	r0, #5
   1614c:	cmpne	r1, r3
   16150:	bne	161f8 <sav_parse_variable_display_parameter_record+0xd8>
   16154:	mov	r0, #0
   16158:	cmp	r2, #1
   1615c:	mov	r8, #0
   16160:	blt	16174 <sav_parse_variable_display_parameter_record+0x54>
   16164:	sdiv	r1, r1, r2
   16168:	sub	r1, r1, #3
   1616c:	clz	r1, r1
   16170:	lsr	r8, r1, #5
   16174:	ldr	r1, [r4, #340]	; 0x154
   16178:	cmp	r1, #1
   1617c:	blt	161f8 <sav_parse_variable_display_parameter_record+0xd8>
   16180:	mov	r9, #2
   16184:	cmp	r8, #0
   16188:	movwne	r9, #3
   1618c:	mov	r7, #0
   16190:	b	161b8 <sav_parse_variable_display_parameter_record+0x98>
   16194:	ldr	r1, [r4, #328]	; 0x148
   16198:	ldr	r0, [r1, r0, lsl #2]
   1619c:	bl	4e24 <spss_alignment_to_readstat_alignment@plt>
   161a0:	str	r0, [r5, #272]	; 0x110
   161a4:	ldr	r0, [r5, #48]	; 0x30
   161a8:	add	r7, r0, r7
   161ac:	ldr	r0, [r4, #340]	; 0x154
   161b0:	cmp	r7, r0
   161b4:	bge	161f4 <sav_parse_variable_display_parameter_record+0xd4>
   161b8:	ldr	r0, [r4, #44]	; 0x2c
   161bc:	ldr	r1, [r4, #328]	; 0x148
   161c0:	ldr	r5, [r0, r7, lsl #2]
   161c4:	mul	r6, r7, r9
   161c8:	ldr	r0, [r1, r6, lsl #2]
   161cc:	bl	4e48 <spss_measure_to_readstat_measure@plt>
   161d0:	str	r0, [r5, #268]	; 0x10c
   161d4:	add	r0, r6, #1
   161d8:	cmp	r8, #0
   161dc:	beq	16194 <sav_parse_variable_display_parameter_record+0x74>
   161e0:	ldr	r1, [r4, #328]	; 0x148
   161e4:	ldr	r0, [r1, r0, lsl #2]
   161e8:	str	r0, [r5, #276]	; 0x114
   161ec:	add	r0, r6, #2
   161f0:	b	16194 <sav_parse_variable_display_parameter_record+0x74>
   161f4:	mov	r0, #0
   161f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000161fc <sav_handle_variables>:
   161fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16200:	add	fp, sp, #28
   16204:	sub	sp, sp, #260	; 0x104
   16208:	mov	r4, r0
   1620c:	ldr	r1, [r0, #8]
   16210:	mov	r0, #0
   16214:	cmp	r1, #0
   16218:	beq	162e0 <sav_handle_variables+0xe4>
   1621c:	ldr	r1, [r4, #340]	; 0x154
   16220:	cmp	r1, #1
   16224:	blt	162e0 <sav_handle_variables+0xe4>
   16228:	mov	r5, #0
   1622c:	mov	r9, sp
   16230:	mvn	sl, #0
   16234:	mov	r8, #0
   16238:	b	16264 <sav_handle_variables+0x68>
   1623c:	ldr	r0, [r6, #8]
   16240:	ldr	r1, [r4, #52]	; 0x34
   16244:	ldr	r0, [r1, r0, lsl #2]
   16248:	mov	r1, #1
   1624c:	str	r1, [r0, #2144]	; 0x860
   16250:	ldr	r0, [r6, #48]	; 0x30
   16254:	add	r5, r0, r5
   16258:	ldr	r0, [r4, #340]	; 0x154
   1625c:	cmp	r5, r0
   16260:	bge	162dc <sav_handle_variables+0xe0>
   16264:	ldr	r0, [r4, #44]	; 0x2c
   16268:	ldr	r2, [r4, #336]	; 0x150
   1626c:	ldr	r6, [r0, r5, lsl #2]
   16270:	mov	r0, r6
   16274:	mov	r1, r8
   16278:	bl	4cf8 <spss_init_variable_for_info@plt>
   1627c:	ldr	r1, [r6, #8]
   16280:	ldr	r2, [r4, #52]	; 0x34
   16284:	str	r0, [r2, r1, lsl #2]
   16288:	ldr	r3, [r6, #4]
   1628c:	mov	r0, r9
   16290:	mov	r1, #256	; 0x100
   16294:	ldr	r2, [pc, #88]	; 162f4 <sav_handle_variables+0xf8>
   16298:	add	r2, pc, r2
   1629c:	bl	4d04 <snprintf@plt>
   162a0:	ldr	r1, [r6, #4]
   162a4:	ldr	r0, [r6, #8]
   162a8:	subs	r2, r1, sl
   162ac:	movne	r2, r9
   162b0:	ldr	r7, [r4, #8]
   162b4:	ldr	r3, [r4, #40]	; 0x28
   162b8:	ldr	r1, [r4, #52]	; 0x34
   162bc:	ldr	r1, [r1, r0, lsl #2]
   162c0:	blx	r7
   162c4:	cmp	r0, #2
   162c8:	beq	1623c <sav_handle_variables+0x40>
   162cc:	cmp	r0, #1
   162d0:	beq	162e8 <sav_handle_variables+0xec>
   162d4:	add	r8, r8, #1
   162d8:	b	16250 <sav_handle_variables+0x54>
   162dc:	mov	r0, #0
   162e0:	sub	sp, fp, #28
   162e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162e8:	mov	r0, #4
   162ec:	sub	sp, fp, #28
   162f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162f4:	.word	0x0000ff1b

000162f8 <sav_handle_fweight>:
   162f8:	push	{fp, lr}
   162fc:	mov	fp, sp
   16300:	ldr	r2, [r0, #12]
   16304:	mov	r1, #0
   16308:	cmp	r2, #0
   1630c:	beq	16360 <sav_handle_fweight+0x68>
   16310:	ldr	r2, [r0, #372]	; 0x174
   16314:	cmp	r2, #0
   16318:	bmi	16360 <sav_handle_fweight+0x68>
   1631c:	ldr	r2, [r0, #340]	; 0x154
   16320:	cmp	r2, #1
   16324:	blt	16360 <sav_handle_fweight+0x68>
   16328:	ldr	ip, [r0, #44]	; 0x2c
   1632c:	ldr	r1, [r0, #372]	; 0x174
   16330:	sub	lr, r1, #1
   16334:	mov	r3, #0
   16338:	ldr	r1, [ip, r3, lsl #2]
   1633c:	ldr	r2, [r1, #12]
   16340:	cmp	r2, lr
   16344:	beq	16368 <sav_handle_fweight+0x70>
   16348:	ldr	r1, [r1, #48]	; 0x30
   1634c:	add	r3, r1, r3
   16350:	ldr	r1, [r0, #340]	; 0x154
   16354:	cmp	r3, r1
   16358:	blt	16338 <sav_handle_fweight+0x40>
   1635c:	mov	r1, #0
   16360:	mov	r0, r1
   16364:	pop	{fp, pc}
   16368:	ldr	r2, [r1, #8]
   1636c:	ldr	r3, [r0, #12]
   16370:	ldr	r1, [r0, #40]	; 0x28
   16374:	ldr	r0, [r0, #52]	; 0x34
   16378:	ldr	r0, [r0, r2, lsl #2]
   1637c:	blx	r3
   16380:	cmp	r0, #0
   16384:	movwne	r0, #1
   16388:	lsl	r1, r0, #2
   1638c:	mov	r0, r1
   16390:	pop	{fp, pc}

00016394 <sav_read_data>:
   16394:	push	{r4, r5, r6, sl, fp, lr}
   16398:	add	fp, sp, #16
   1639c:	mov	r6, r0
   163a0:	ldr	r0, [r0, #340]	; 0x154
   163a4:	cmp	r0, #1
   163a8:	blt	163e0 <sav_read_data+0x4c>
   163ac:	ldr	r0, [r6, #44]	; 0x2c
   163b0:	ldr	r2, [r6, #340]	; 0x154
   163b4:	mov	r1, #256	; 0x100
   163b8:	mov	r3, #0
   163bc:	ldr	r4, [r0, r3, lsl #2]
   163c0:	ldr	r5, [r4, #20]
   163c4:	ldr	r4, [r4, #48]	; 0x30
   163c8:	add	r3, r4, r3
   163cc:	cmp	r5, r1
   163d0:	movhi	r1, r5
   163d4:	cmp	r3, r2
   163d8:	blt	163bc <sav_read_data+0x28>
   163dc:	b	163e4 <sav_read_data+0x50>
   163e0:	mov	r1, #256	; 0x100
   163e4:	add	r0, r1, #7
   163e8:	str	r0, [r6, #380]	; 0x17c
   163ec:	mov	r2, #1
   163f0:	orr	r4, r2, r1, lsl #2
   163f4:	bl	4cb0 <readstat_malloc@plt>
   163f8:	add	r1, r4, #7
   163fc:	str	r1, [r6, #388]	; 0x184
   16400:	str	r0, [r6, #376]	; 0x178
   16404:	mov	r0, r1
   16408:	bl	4cb0 <readstat_malloc@plt>
   1640c:	mov	r1, r0
   16410:	str	r0, [r6, #384]	; 0x180
   16414:	mov	r0, #3
   16418:	cmp	r1, #0
   1641c:	ldrne	r1, [r6, #376]	; 0x178
   16420:	cmpne	r1, #0
   16424:	bne	1642c <sav_read_data+0x98>
   16428:	pop	{r4, r5, r6, sl, fp, pc}
   1642c:	ldr	r0, [r6, #428]	; 0x1ac
   16430:	cmp	r0, #2
   16434:	beq	1644c <sav_read_data+0xb8>
   16438:	cmp	r0, #1
   1643c:	bne	16460 <sav_read_data+0xcc>
   16440:	mov	r0, r6
   16444:	bl	17c7c <sav_read_compressed_data>
   16448:	b	16468 <sav_read_data+0xd4>
   1644c:	ldr	r1, [pc, #68]	; 16498 <sav_read_data+0x104>
   16450:	add	r1, pc, r1
   16454:	mov	r0, r6
   16458:	bl	4f5c <zsav_read_compressed_data@plt>
   1645c:	b	16468 <sav_read_data+0xd4>
   16460:	mov	r0, r6
   16464:	bl	18138 <sav_read_uncompressed_data>
   16468:	cmp	r0, #0
   1646c:	popne	{r4, r5, r6, sl, fp, pc}
   16470:	ldr	r0, [r6, #352]	; 0x160
   16474:	cmn	r0, #1
   16478:	beq	16490 <sav_read_data+0xfc>
   1647c:	ldr	r0, [r6, #356]	; 0x164
   16480:	ldr	r1, [r6, #364]	; 0x16c
   16484:	subs	r0, r1, r0
   16488:	movwne	r0, #9
   1648c:	pop	{r4, r5, r6, sl, fp, pc}
   16490:	mov	r0, #0
   16494:	pop	{r4, r5, r6, sl, fp, pc}
   16498:	.word	0x000019f4

0001649c <sav_skip_variable_record>:
   1649c:	push	{r4, r5, fp, lr}
   164a0:	add	fp, sp, #8
   164a4:	sub	sp, sp, #32
   164a8:	mov	r4, r0
   164ac:	ldr	r5, [r0, #36]	; 0x24
   164b0:	ldr	r3, [r5, #12]
   164b4:	ldr	r2, [r5, #20]
   164b8:	add	r0, sp, #4
   164bc:	mov	r1, #28
   164c0:	blx	r3
   164c4:	mov	r1, r0
   164c8:	mov	r0, #2
   164cc:	cmp	r1, #28
   164d0:	bcc	16584 <sav_skip_variable_record+0xe8>
   164d4:	ldr	r0, [sp, #8]
   164d8:	cmp	r0, #0
   164dc:	beq	1653c <sav_skip_variable_record+0xa0>
   164e0:	ldr	r3, [r5, #12]
   164e4:	ldr	r2, [r5, #20]
   164e8:	mov	r0, sp
   164ec:	mov	r1, #4
   164f0:	blx	r3
   164f4:	mov	r1, r0
   164f8:	mov	r0, #2
   164fc:	cmp	r1, #4
   16500:	bcc	16584 <sav_skip_variable_record+0xe8>
   16504:	ldrb	r1, [r4, #436]	; 0x1b4
   16508:	ldr	r0, [sp]
   1650c:	tst	r1, #1
   16510:	beq	16518 <sav_skip_variable_record+0x7c>
   16514:	bl	480c <byteswap4@plt>
   16518:	str	r0, [sp]
   1651c:	ldr	r3, [r5, #8]
   16520:	ldr	r2, [r5, #20]
   16524:	add	r0, r0, #3
   16528:	bic	r0, r0, #3
   1652c:	mov	r1, #1
   16530:	blx	r3
   16534:	cmn	r0, #1
   16538:	beq	16598 <sav_skip_variable_record+0xfc>
   1653c:	ldr	r0, [sp, #12]
   16540:	cmp	r0, #0
   16544:	beq	1658c <sav_skip_variable_record+0xf0>
   16548:	ldrb	r1, [r4, #436]	; 0x1b4
   1654c:	tst	r1, #1
   16550:	beq	16558 <sav_skip_variable_record+0xbc>
   16554:	bl	480c <byteswap4@plt>
   16558:	ldr	r3, [r5, #8]
   1655c:	ldr	r2, [r5, #20]
   16560:	cmp	r0, #0
   16564:	rsbmi	r0, r0, #0
   16568:	lsl	r0, r0, #3
   1656c:	mov	r1, #1
   16570:	blx	r3
   16574:	mov	r1, r0
   16578:	mov	r0, #0
   1657c:	cmn	r1, #1
   16580:	movweq	r0, #15
   16584:	sub	sp, fp, #8
   16588:	pop	{r4, r5, fp, pc}
   1658c:	mov	r0, #0
   16590:	sub	sp, fp, #8
   16594:	pop	{r4, r5, fp, pc}
   16598:	mov	r0, #15
   1659c:	sub	sp, fp, #8
   165a0:	pop	{r4, r5, fp, pc}

000165a4 <sav_skip_value_label_record>:
   165a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   165a8:	add	fp, sp, #24
   165ac:	sub	sp, sp, #16
   165b0:	mov	r8, r0
   165b4:	ldr	r7, [r0, #36]	; 0x24
   165b8:	ldr	r3, [r7, #12]
   165bc:	ldr	r2, [r7, #20]
   165c0:	add	r0, sp, #12
   165c4:	mov	r1, #4
   165c8:	blx	r3
   165cc:	cmp	r0, #4
   165d0:	bcc	16694 <sav_skip_value_label_record+0xf0>
   165d4:	ldrb	r1, [r8, #436]	; 0x1b4
   165d8:	ldr	r0, [sp, #12]
   165dc:	tst	r1, #1
   165e0:	beq	165ec <sav_skip_value_label_record+0x48>
   165e4:	bl	480c <byteswap4@plt>
   165e8:	str	r0, [sp, #12]
   165ec:	cmp	r0, #0
   165f0:	beq	16678 <sav_skip_value_label_record+0xd4>
   165f4:	mov	r9, #0
   165f8:	add	r6, sp, #3
   165fc:	mov	r4, #0
   16600:	mov	r5, #15
   16604:	strb	r9, [sp, #3]
   16608:	ldr	r3, [r7, #8]
   1660c:	ldr	r2, [r7, #20]
   16610:	mov	r0, #8
   16614:	mov	r1, #1
   16618:	blx	r3
   1661c:	cmn	r0, #1
   16620:	beq	16698 <sav_skip_value_label_record+0xf4>
   16624:	ldr	r3, [r7, #12]
   16628:	ldr	r2, [r7, #20]
   1662c:	mov	r0, r6
   16630:	mov	r1, #1
   16634:	blx	r3
   16638:	cmp	r0, #1
   1663c:	blt	16694 <sav_skip_value_label_record+0xf0>
   16640:	ldr	r3, [r7, #8]
   16644:	ldr	r2, [r7, #20]
   16648:	ldrb	r0, [sp, #3]
   1664c:	add	r0, r0, #8
   16650:	bic	r0, r0, #7
   16654:	sub	r0, r0, #1
   16658:	mov	r1, #1
   1665c:	blx	r3
   16660:	cmn	r0, #1
   16664:	beq	16698 <sav_skip_value_label_record+0xf4>
   16668:	add	r4, r4, #1
   1666c:	ldr	r0, [sp, #12]
   16670:	cmp	r4, r0
   16674:	bcc	16604 <sav_skip_value_label_record+0x60>
   16678:	ldr	r3, [r7, #12]
   1667c:	ldr	r2, [r7, #20]
   16680:	add	r0, sp, #8
   16684:	mov	r1, #4
   16688:	blx	r3
   1668c:	cmp	r0, #4
   16690:	bcs	166a4 <sav_skip_value_label_record+0x100>
   16694:	mov	r5, #2
   16698:	mov	r0, r5
   1669c:	sub	sp, fp, #24
   166a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   166a4:	ldrb	r1, [r8, #436]	; 0x1b4
   166a8:	ldr	r0, [sp, #8]
   166ac:	tst	r1, #1
   166b0:	beq	166bc <sav_skip_value_label_record+0x118>
   166b4:	bl	480c <byteswap4@plt>
   166b8:	str	r0, [sp, #8]
   166bc:	mov	r5, #5
   166c0:	cmp	r0, #4
   166c4:	bne	16698 <sav_skip_value_label_record+0xf4>
   166c8:	ldr	r3, [r7, #12]
   166cc:	ldr	r2, [r7, #20]
   166d0:	add	r0, sp, #4
   166d4:	mov	r1, #4
   166d8:	blx	r3
   166dc:	cmp	r0, #4
   166e0:	mov	r5, #2
   166e4:	bcc	16698 <sav_skip_value_label_record+0xf4>
   166e8:	ldrb	r0, [r8, #436]	; 0x1b4
   166ec:	tst	r0, #1
   166f0:	beq	16700 <sav_skip_value_label_record+0x15c>
   166f4:	ldr	r0, [sp, #4]
   166f8:	bl	480c <byteswap4@plt>
   166fc:	str	r0, [sp, #4]
   16700:	ldr	r3, [r7, #8]
   16704:	ldr	r2, [r7, #20]
   16708:	ldr	r0, [sp, #4]
   1670c:	lsl	r0, r0, #2
   16710:	mov	r1, #1
   16714:	blx	r3
   16718:	mov	r5, #0
   1671c:	cmn	r0, #1
   16720:	movweq	r5, #15
   16724:	b	16698 <sav_skip_value_label_record+0xf4>

00016728 <sav_skip_document_record>:
   16728:	push	{r4, r5, fp, lr}
   1672c:	add	fp, sp, #8
   16730:	sub	sp, sp, #8
   16734:	mov	r4, r0
   16738:	ldr	r5, [r0, #36]	; 0x24
   1673c:	ldr	r3, [r5, #12]
   16740:	ldr	r2, [r5, #20]
   16744:	add	r0, sp, #4
   16748:	mov	r1, #4
   1674c:	blx	r3
   16750:	mov	r1, r0
   16754:	mov	r0, #2
   16758:	cmp	r1, #4
   1675c:	bcc	167a4 <sav_skip_document_record+0x7c>
   16760:	ldrb	r0, [r4, #436]	; 0x1b4
   16764:	tst	r0, #1
   16768:	beq	16778 <sav_skip_document_record+0x50>
   1676c:	ldr	r0, [sp, #4]
   16770:	bl	480c <byteswap4@plt>
   16774:	str	r0, [sp, #4]
   16778:	ldr	r3, [r5, #8]
   1677c:	ldr	r2, [r5, #20]
   16780:	ldr	r0, [sp, #4]
   16784:	add	r0, r0, r0, lsl #2
   16788:	lsl	r0, r0, #4
   1678c:	mov	r1, #1
   16790:	blx	r3
   16794:	mov	r1, r0
   16798:	mov	r0, #0
   1679c:	cmn	r1, #1
   167a0:	movweq	r0, #15
   167a4:	sub	sp, fp, #8
   167a8:	pop	{r4, r5, fp, pc}

000167ac <sav_parse_machine_integer_info_record>:
   167ac:	push	{r4, r5, r6, sl, fp, lr}
   167b0:	add	fp, sp, #16
   167b4:	sub	sp, sp, #1024	; 0x400
   167b8:	mov	r5, #5
   167bc:	cmp	r1, #32
   167c0:	bne	16870 <sav_parse_machine_integer_info_record+0xc4>
   167c4:	mov	r4, r2
   167c8:	ldr	r3, [r0, #28]
   167cc:	ldr	r6, [r2, #60]	; 0x3c
   167d0:	ldrb	r0, [r2, #436]	; 0x1b4
   167d4:	tst	r0, #1
   167d8:	beq	167e8 <sav_parse_machine_integer_info_record+0x3c>
   167dc:	mov	r0, r3
   167e0:	bl	480c <byteswap4@plt>
   167e4:	mov	r3, r0
   167e8:	ldr	r1, [r4, #56]	; 0x38
   167ec:	cmp	r1, #0
   167f0:	bne	16860 <sav_parse_machine_integer_info_record+0xb4>
   167f4:	movw	r0, #62692	; 0xf4e4
   167f8:	movt	r0, #65535	; 0xffff
   167fc:	ldr	r1, [pc, #172]	; 168b0 <sav_parse_machine_integer_info_record+0x104>
   16800:	add	r1, pc, r1
   16804:	add	r2, r1, r0
   16808:	ldr	r5, [r2, #2844]	; 0xb1c
   1680c:	cmp	r3, r5
   16810:	beq	16858 <sav_parse_machine_integer_info_record+0xac>
   16814:	adds	r0, r0, #36	; 0x24
   16818:	bne	16804 <sav_parse_machine_integer_info_record+0x58>
   1681c:	ldr	r0, [r4, #24]
   16820:	mov	r5, #7
   16824:	cmp	r0, #0
   16828:	beq	16870 <sav_parse_machine_integer_info_record+0xc4>
   1682c:	mov	r6, sp
   16830:	ldr	r2, [pc, #124]	; 168b4 <sav_parse_machine_integer_info_record+0x108>
   16834:	add	r2, pc, r2
   16838:	mov	r0, r6
   1683c:	mov	r1, #1024	; 0x400
   16840:	bl	4d04 <snprintf@plt>
   16844:	ldr	r2, [r4, #24]
   16848:	ldr	r1, [r4, #40]	; 0x28
   1684c:	mov	r0, r6
   16850:	blx	r2
   16854:	b	16870 <sav_parse_machine_integer_info_record+0xc4>
   16858:	add	r1, r2, #2848	; 0xb20
   1685c:	str	r1, [r4, #56]	; 0x38
   16860:	mov	r5, #0
   16864:	cmp	r6, #0
   16868:	cmpne	r1, #0
   1686c:	bne	1687c <sav_parse_machine_integer_info_record+0xd0>
   16870:	mov	r0, r5
   16874:	sub	sp, fp, #16
   16878:	pop	{r4, r5, r6, sl, fp, pc}
   1687c:	mov	r0, r6
   16880:	bl	4bb4 <iconv_open@plt>
   16884:	cmn	r0, #1
   16888:	beq	168a8 <sav_parse_machine_integer_info_record+0xfc>
   1688c:	mov	r6, r0
   16890:	ldr	r0, [r4, #336]	; 0x150
   16894:	cmp	r0, #0
   16898:	beq	168a0 <sav_parse_machine_integer_info_record+0xf4>
   1689c:	bl	4848 <iconv_close@plt>
   168a0:	str	r6, [r4, #336]	; 0x150
   168a4:	b	16870 <sav_parse_machine_integer_info_record+0xc4>
   168a8:	mov	r5, #7
   168ac:	b	16870 <sav_parse_machine_integer_info_record+0xc4>
   168b0:	.word	0x0002f768
   168b4:	.word	0x00010618

000168b8 <sav_read_variable_record>:
   168b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   168bc:	add	fp, sp, #28
   168c0:	sub	sp, sp, #36	; 0x24
   168c4:	mov	r4, r0
   168c8:	ldr	r5, [r0, #36]	; 0x24
   168cc:	vmov.i32	q8, #0	; 0x00000000
   168d0:	mov	r0, #12
   168d4:	add	r1, sp, #8
   168d8:	vst1.64	{d16-d17}, [r1], r0
   168dc:	vst1.32	{d16-d17}, [r1]
   168e0:	ldr	r1, [r4, #48]	; 0x30
   168e4:	ldr	r0, [r4, #340]	; 0x154
   168e8:	cmp	r0, r1
   168ec:	bne	16910 <sav_read_variable_record+0x58>
   168f0:	lsl	r0, r1, #1
   168f4:	str	r0, [r4, #48]	; 0x30
   168f8:	ldr	r0, [r4, #44]	; 0x2c
   168fc:	lsl	r1, r1, #3
   16900:	bl	4d70 <readstat_realloc@plt>
   16904:	str	r0, [r4, #44]	; 0x2c
   16908:	cmp	r0, #0
   1690c:	beq	16a1c <sav_read_variable_record+0x164>
   16910:	ldr	r3, [r5, #12]
   16914:	ldr	r2, [r5, #20]
   16918:	add	r8, sp, #8
   1691c:	mov	r0, r8
   16920:	mov	r1, #28
   16924:	blx	r3
   16928:	mov	r7, #2
   1692c:	mov	r6, #0
   16930:	cmp	r0, #28
   16934:	bcc	16a64 <sav_read_variable_record+0x1ac>
   16938:	ldrb	r1, [r4, #436]	; 0x1b4
   1693c:	ldr	r0, [sp, #20]
   16940:	tst	r1, #1
   16944:	beq	1694c <sav_read_variable_record+0x94>
   16948:	bl	480c <byteswap4@plt>
   1694c:	str	r0, [sp, #20]
   16950:	ldrb	r1, [r4, #436]	; 0x1b4
   16954:	ldr	r0, [sp, #24]
   16958:	tst	r1, #1
   1695c:	beq	16964 <sav_read_variable_record+0xac>
   16960:	bl	480c <byteswap4@plt>
   16964:	str	r0, [sp, #24]
   16968:	ldrb	r0, [r4, #436]	; 0x1b4
   1696c:	ldr	r9, [sp, #8]
   16970:	tst	r0, #1
   16974:	beq	16984 <sav_read_variable_record+0xcc>
   16978:	mov	r0, r9
   1697c:	bl	480c <byteswap4@plt>
   16980:	mov	r9, r0
   16984:	cmn	r9, #1
   16988:	ble	16a28 <sav_read_variable_record+0x170>
   1698c:	mov	r7, #1
   16990:	mov	r0, #1
   16994:	mov	r1, #280	; 0x118
   16998:	bl	4a28 <readstat_calloc@plt>
   1699c:	cmp	r0, #0
   169a0:	beq	16a60 <sav_read_variable_record+0x1a8>
   169a4:	mov	r5, r0
   169a8:	str	r7, [r0, #48]	; 0x30
   169ac:	str	r7, [r0, #16]
   169b0:	ldr	r0, [r4, #340]	; 0x154
   169b4:	str	r0, [r5, #8]
   169b8:	ldr	r0, [r4, #344]	; 0x158
   169bc:	mvn	r1, #0
   169c0:	str	r1, [r5, #4]
   169c4:	str	r0, [r5, #12]
   169c8:	mov	sl, #0
   169cc:	str	sl, [sp]
   169d0:	add	r0, r5, #187	; 0xbb
   169d4:	add	r6, r8, #20
   169d8:	mov	r1, #9
   169dc:	mov	r2, r6
   169e0:	mov	r3, #8
   169e4:	bl	4cbc <readstat_convert@plt>
   169e8:	cmp	r0, #0
   169ec:	bne	16a10 <sav_read_variable_record+0x158>
   169f0:	str	sl, [sp]
   169f4:	add	r0, r5, #196	; 0xc4
   169f8:	mov	r1, #65	; 0x41
   169fc:	mov	r2, r6
   16a00:	mov	r3, #8
   16a04:	bl	4cbc <readstat_convert@plt>
   16a08:	cmp	r0, #0
   16a0c:	beq	16a80 <sav_read_variable_record+0x1c8>
   16a10:	mov	r7, r0
   16a14:	mov	r6, r5
   16a18:	b	16a64 <sav_read_variable_record+0x1ac>
   16a1c:	mov	r7, #3
   16a20:	mov	r6, #0
   16a24:	b	16a64 <sav_read_variable_record+0x1ac>
   16a28:	ldr	r0, [r4, #340]	; 0x154
   16a2c:	cmp	r0, #0
   16a30:	beq	16a78 <sav_read_variable_record+0x1c0>
   16a34:	ldr	r1, [r4, #44]	; 0x2c
   16a38:	ldr	r2, [r4, #344]	; 0x158
   16a3c:	add	r2, r2, #1
   16a40:	str	r2, [r4, #344]	; 0x158
   16a44:	add	r0, r1, r0, lsl #2
   16a48:	ldr	r0, [r0, #-4]
   16a4c:	ldr	r1, [r0, #16]
   16a50:	add	r1, r1, #1
   16a54:	str	r1, [r0, #16]
   16a58:	mov	r7, #0
   16a5c:	b	16a6c <sav_read_variable_record+0x1b4>
   16a60:	mov	r7, #3
   16a64:	mov	r0, r6
   16a68:	bl	4eb4 <spss_varinfo_free@plt>
   16a6c:	mov	r0, r7
   16a70:	sub	sp, fp, #28
   16a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a78:	mov	r7, #5
   16a7c:	b	16a6c <sav_read_variable_record+0x1b4>
   16a80:	ldr	r0, [sp, #20]
   16a84:	ubfx	r1, r0, #8, #8
   16a88:	str	r1, [r5, #28]
   16a8c:	uxtb	r1, r0
   16a90:	str	r1, [r5, #32]
   16a94:	ubfx	r0, r0, #16, #8
   16a98:	str	r0, [r5, #24]
   16a9c:	ldr	r1, [sp, #24]
   16aa0:	ubfx	r2, r1, #8, #8
   16aa4:	str	r2, [r5, #40]	; 0x28
   16aa8:	uxtb	r2, r1
   16aac:	str	r2, [r5, #44]	; 0x2c
   16ab0:	ubfx	r2, r1, #16, #8
   16ab4:	str	r2, [r5, #36]	; 0x24
   16ab8:	mov	r1, #0
   16abc:	cmp	r9, #0
   16ac0:	bgt	16ad4 <sav_read_variable_record+0x21c>
   16ac4:	subs	r2, r2, #1
   16ac8:	movwne	r2, #5
   16acc:	subs	r1, r0, #1
   16ad0:	movne	r1, r2
   16ad4:	str	r1, [r5]
   16ad8:	ldr	r0, [sp, #12]
   16adc:	cmp	r0, #0
   16ae0:	beq	16af8 <sav_read_variable_record+0x240>
   16ae4:	mov	r0, r5
   16ae8:	mov	r1, r4
   16aec:	bl	1776c <sav_read_variable_label>
   16af0:	cmp	r0, #0
   16af4:	bne	16a10 <sav_read_variable_record+0x158>
   16af8:	ldr	r0, [sp, #16]
   16afc:	cmp	r0, #0
   16b00:	beq	16b2c <sav_read_variable_record+0x274>
   16b04:	ldrb	r1, [r4, #436]	; 0x1b4
   16b08:	tst	r1, #1
   16b0c:	beq	16b14 <sav_read_variable_record+0x25c>
   16b10:	bl	480c <byteswap4@plt>
   16b14:	str	r0, [r5, #52]	; 0x34
   16b18:	mov	r0, r5
   16b1c:	mov	r1, r4
   16b20:	bl	17898 <sav_read_variable_missing_values>
   16b24:	cmp	r0, #0
   16b28:	bne	16a10 <sav_read_variable_record+0x158>
   16b2c:	ldr	r0, [r4, #44]	; 0x2c
   16b30:	ldr	r1, [r4, #340]	; 0x154
   16b34:	str	r5, [r0, r1, lsl #2]
   16b38:	add	r0, r1, #1
   16b3c:	str	r0, [r4, #340]	; 0x154
   16b40:	ldr	r0, [r4, #344]	; 0x158
   16b44:	add	r0, r0, #1
   16b48:	str	r0, [r4, #344]	; 0x158
   16b4c:	b	16a58 <sav_read_variable_record+0x1a0>

00016b50 <sav_read_value_label_record>:
   16b50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b54:	add	fp, sp, #28
   16b58:	sub	sp, sp, #284	; 0x11c
   16b5c:	mov	sl, r0
   16b60:	ldr	r8, [r0, #36]	; 0x24
   16b64:	ldr	r3, [r8, #12]
   16b68:	ldr	r2, [r8, #20]
   16b6c:	sub	r0, fp, #36	; 0x24
   16b70:	mov	r1, #4
   16b74:	blx	r3
   16b78:	mov	r6, #2
   16b7c:	cmp	r0, #4
   16b80:	bcc	16da8 <sav_read_value_label_record+0x258>
   16b84:	ldrb	r1, [sl, #436]	; 0x1b4
   16b88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16b8c:	tst	r1, #1
   16b90:	beq	16b9c <sav_read_value_label_record+0x4c>
   16b94:	bl	480c <byteswap4@plt>
   16b98:	str	r0, [fp, #-36]	; 0xffffffdc
   16b9c:	cmp	r0, #0
   16ba0:	beq	16bbc <sav_read_value_label_record+0x6c>
   16ba4:	mov	r1, #72	; 0x48
   16ba8:	bl	4a28 <readstat_calloc@plt>
   16bac:	cmp	r0, #0
   16bb0:	bne	16bc0 <sav_read_value_label_record+0x70>
   16bb4:	mov	r6, #3
   16bb8:	b	16da8 <sav_read_value_label_record+0x258>
   16bbc:	mov	r0, #0
   16bc0:	str	r0, [sp, #4]
   16bc4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16bc8:	cmp	r0, #0
   16bcc:	beq	16c9c <sav_read_value_label_record+0x14c>
   16bd0:	add	r4, sp, #12
   16bd4:	ldr	r7, [sp, #4]
   16bd8:	mov	r9, #0
   16bdc:	mov	r0, #0
   16be0:	strb	r0, [fp, #-40]	; 0xffffffd8
   16be4:	ldr	r3, [r8, #12]
   16be8:	ldr	r2, [r8, #20]
   16bec:	mov	r0, r7
   16bf0:	mov	r1, #8
   16bf4:	blx	r3
   16bf8:	mov	r6, #2
   16bfc:	cmp	r0, #8
   16c00:	blt	16d54 <sav_read_value_label_record+0x204>
   16c04:	ldr	r3, [r8, #12]
   16c08:	ldr	r2, [r8, #20]
   16c0c:	sub	r0, fp, #40	; 0x28
   16c10:	mov	r1, #1
   16c14:	blx	r3
   16c18:	cmp	r0, #1
   16c1c:	blt	16d54 <sav_read_value_label_record+0x204>
   16c20:	ldr	r3, [r8, #12]
   16c24:	ldr	r2, [r8, #20]
   16c28:	ldrb	r0, [fp, #-40]	; 0xffffffd8
   16c2c:	add	r0, r0, #8
   16c30:	bic	r0, r0, #7
   16c34:	sub	r5, r0, #1
   16c38:	mov	r0, r4
   16c3c:	mov	r1, r5
   16c40:	blx	r3
   16c44:	cmp	r0, r5
   16c48:	bcc	16d54 <sav_read_value_label_record+0x204>
   16c4c:	mov	r0, #1
   16c50:	orr	r6, r0, r5, lsl #2
   16c54:	mov	r0, r6
   16c58:	bl	4cb0 <readstat_malloc@plt>
   16c5c:	str	r0, [r7, #64]	; 0x40
   16c60:	cmp	r0, #0
   16c64:	beq	16d3c <sav_read_value_label_record+0x1ec>
   16c68:	ldr	r1, [sl, #336]	; 0x150
   16c6c:	str	r1, [sp]
   16c70:	mov	r1, r6
   16c74:	mov	r2, r4
   16c78:	mov	r3, r5
   16c7c:	bl	4cbc <readstat_convert@plt>
   16c80:	cmp	r0, #0
   16c84:	bne	16d50 <sav_read_value_label_record+0x200>
   16c88:	add	r7, r7, #72	; 0x48
   16c8c:	add	r9, r9, #1
   16c90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16c94:	cmp	r9, r0
   16c98:	bcc	16bdc <sav_read_value_label_record+0x8c>
   16c9c:	ldr	r3, [r8, #12]
   16ca0:	ldr	r2, [r8, #20]
   16ca4:	sub	r0, fp, #44	; 0x2c
   16ca8:	mov	r1, #4
   16cac:	blx	r3
   16cb0:	mov	r6, #2
   16cb4:	cmp	r0, #4
   16cb8:	bcc	16d40 <sav_read_value_label_record+0x1f0>
   16cbc:	ldrb	r1, [sl, #436]	; 0x1b4
   16cc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16cc4:	tst	r1, #1
   16cc8:	ldr	r7, [sp, #4]
   16ccc:	beq	16cd8 <sav_read_value_label_record+0x188>
   16cd0:	bl	480c <byteswap4@plt>
   16cd4:	str	r0, [fp, #-44]	; 0xffffffd4
   16cd8:	mov	r6, #5
   16cdc:	cmp	r0, #4
   16ce0:	bne	16d58 <sav_read_value_label_record+0x208>
   16ce4:	ldr	r3, [r8, #12]
   16ce8:	ldr	r2, [r8, #20]
   16cec:	sub	r0, fp, #40	; 0x28
   16cf0:	mov	r1, #4
   16cf4:	blx	r3
   16cf8:	cmp	r0, #4
   16cfc:	mov	r6, #2
   16d00:	bcc	16d58 <sav_read_value_label_record+0x208>
   16d04:	ldrb	r1, [sl, #436]	; 0x1b4
   16d08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16d0c:	tst	r1, #1
   16d10:	beq	16d1c <sav_read_value_label_record+0x1cc>
   16d14:	bl	480c <byteswap4@plt>
   16d18:	str	r0, [fp, #-40]	; 0xffffffd8
   16d1c:	cmp	r0, #0
   16d20:	beq	16db4 <sav_read_value_label_record+0x264>
   16d24:	lsl	r0, r0, #2
   16d28:	bl	4cb0 <readstat_malloc@plt>
   16d2c:	cmp	r0, #0
   16d30:	beq	16f0c <sav_read_value_label_record+0x3bc>
   16d34:	mov	r9, r0
   16d38:	b	16db8 <sav_read_value_label_record+0x268>
   16d3c:	mov	r6, #3
   16d40:	ldr	r7, [sp, #4]
   16d44:	cmp	r7, #0
   16d48:	bne	16d60 <sav_read_value_label_record+0x210>
   16d4c:	b	16da8 <sav_read_value_label_record+0x258>
   16d50:	mov	r6, r0
   16d54:	ldr	r7, [sp, #4]
   16d58:	cmp	r7, #0
   16d5c:	beq	16da8 <sav_read_value_label_record+0x258>
   16d60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16d64:	cmp	r0, #0
   16d68:	beq	16da0 <sav_read_value_label_record+0x250>
   16d6c:	add	r4, r7, #64	; 0x40
   16d70:	mov	r5, #0
   16d74:	b	16d8c <sav_read_value_label_record+0x23c>
   16d78:	add	r4, r4, #72	; 0x48
   16d7c:	add	r5, r5, #1
   16d80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16d84:	cmp	r5, r0
   16d88:	bcs	16da0 <sav_read_value_label_record+0x250>
   16d8c:	ldr	r0, [r4]
   16d90:	cmp	r0, #0
   16d94:	beq	16d78 <sav_read_value_label_record+0x228>
   16d98:	bl	4938 <free@plt>
   16d9c:	b	16d78 <sav_read_value_label_record+0x228>
   16da0:	mov	r0, r7
   16da4:	bl	4938 <free@plt>
   16da8:	mov	r0, r6
   16dac:	sub	sp, fp, #28
   16db0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16db4:	mov	r9, #0
   16db8:	ldr	r3, [r8, #12]
   16dbc:	ldr	r2, [r8, #20]
   16dc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16dc4:	lsl	r1, r0, #2
   16dc8:	mov	r0, r9
   16dcc:	blx	r3
   16dd0:	mov	r6, #2
   16dd4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16dd8:	cmp	r0, r1, lsl #2
   16ddc:	bcc	16f54 <sav_read_value_label_record+0x404>
   16de0:	mov	r6, #0
   16de4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16de8:	cmp	r0, #0
   16dec:	mov	r8, #0
   16df0:	beq	16e78 <sav_read_value_label_record+0x328>
   16df4:	mov	r8, #0
   16df8:	ldr	r5, [pc, #368]	; 16f70 <sav_read_value_label_record+0x420>
   16dfc:	ldr	r5, [pc, r5]
   16e00:	add	r4, sp, #8
   16e04:	mov	r7, #0
   16e08:	b	16e1c <sav_read_value_label_record+0x2cc>
   16e0c:	add	r7, r7, #1
   16e10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16e14:	cmp	r7, r0
   16e18:	bcs	16e78 <sav_read_value_label_record+0x328>
   16e1c:	ldr	r0, [r9, r7, lsl #2]
   16e20:	str	r0, [sp, #8]
   16e24:	ldrb	r1, [sl, #436]	; 0x1b4
   16e28:	tst	r1, #1
   16e2c:	beq	16e38 <sav_read_value_label_record+0x2e8>
   16e30:	bl	480c <byteswap4@plt>
   16e34:	str	r0, [sp, #8]
   16e38:	ldr	r0, [sp, #8]
   16e3c:	sub	r0, r0, #1
   16e40:	str	r0, [sp, #8]
   16e44:	ldr	r1, [sl, #44]	; 0x2c
   16e48:	ldr	r2, [sl, #340]	; 0x154
   16e4c:	str	r5, [sp]
   16e50:	mov	r0, r4
   16e54:	mov	r3, #4
   16e58:	bl	4d34 <bsearch@plt>
   16e5c:	cmp	r0, #0
   16e60:	beq	16e0c <sav_read_value_label_record+0x2bc>
   16e64:	ldr	r0, [r0]
   16e68:	ldr	r1, [sl, #368]	; 0x170
   16e6c:	str	r1, [r0, #4]
   16e70:	ldr	r8, [r0]
   16e74:	b	16e0c <sav_read_value_label_record+0x2bc>
   16e78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16e7c:	cmp	r0, #0
   16e80:	ldr	r7, [sp, #4]
   16e84:	beq	16f2c <sav_read_value_label_record+0x3dc>
   16e88:	add	r4, r7, #48	; 0x30
   16e8c:	mov	r7, #0
   16e90:	b	16eb8 <sav_read_value_label_record+0x368>
   16e94:	vstr	d0, [r4]
   16e98:	mov	r0, r4
   16e9c:	mov	r1, sl
   16ea0:	bl	17ac0 <sav_tag_missing_double>
   16ea4:	add	r4, r4, #72	; 0x48
   16ea8:	add	r7, r7, #1
   16eac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16eb0:	cmp	r7, r0
   16eb4:	bcs	16f1c <sav_read_value_label_record+0x3cc>
   16eb8:	str	r8, [r4, #8]
   16ebc:	cmp	r8, #5
   16ec0:	bne	16edc <sav_read_value_label_record+0x38c>
   16ec4:	vldr	d0, [r4, #-48]	; 0xffffffd0
   16ec8:	ldrb	r0, [sl, #436]	; 0x1b4
   16ecc:	tst	r0, #1
   16ed0:	beq	16e94 <sav_read_value_label_record+0x344>
   16ed4:	bl	4fa4 <byteswap_double@plt>
   16ed8:	b	16e94 <sav_read_value_label_record+0x344>
   16edc:	ldr	r0, [sl, #336]	; 0x150
   16ee0:	str	r0, [sp]
   16ee4:	sub	r5, r4, #40	; 0x28
   16ee8:	sub	r2, r4, #48	; 0x30
   16eec:	mov	r0, r5
   16ef0:	mov	r1, #33	; 0x21
   16ef4:	mov	r3, #8
   16ef8:	bl	4cbc <readstat_convert@plt>
   16efc:	cmp	r0, #0
   16f00:	bne	16f24 <sav_read_value_label_record+0x3d4>
   16f04:	str	r5, [r4]
   16f08:	b	16ea4 <sav_read_value_label_record+0x354>
   16f0c:	mov	r6, #3
   16f10:	cmp	r7, #0
   16f14:	bne	16d60 <sav_read_value_label_record+0x210>
   16f18:	b	16da8 <sav_read_value_label_record+0x258>
   16f1c:	mov	r6, #0
   16f20:	b	16f28 <sav_read_value_label_record+0x3d8>
   16f24:	mov	r6, r0
   16f28:	ldr	r7, [sp, #4]
   16f2c:	ldr	r0, [sl, #20]
   16f30:	cmp	r0, #0
   16f34:	beq	16f48 <sav_read_value_label_record+0x3f8>
   16f38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16f3c:	mov	r0, r7
   16f40:	mov	r2, sl
   16f44:	bl	17b58 <sav_submit_value_labels>
   16f48:	ldr	r0, [sl, #368]	; 0x170
   16f4c:	add	r0, r0, #1
   16f50:	str	r0, [sl, #368]	; 0x170
   16f54:	cmp	r9, #0
   16f58:	beq	16d58 <sav_read_value_label_record+0x208>
   16f5c:	mov	r0, r9
   16f60:	bl	4938 <free@plt>
   16f64:	cmp	r7, #0
   16f68:	bne	16d60 <sav_read_value_label_record+0x210>
   16f6c:	b	16da8 <sav_read_value_label_record+0x258>
   16f70:	.word	0x0002e4f8

00016f74 <sav_read_document_record>:
   16f74:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16f78:	add	fp, sp, #24
   16f7c:	sub	sp, sp, #416	; 0x1a0
   16f80:	mov	r4, r0
   16f84:	ldr	r0, [r0, #4]
   16f88:	cmp	r0, #0
   16f8c:	beq	16fbc <sav_read_document_record+0x48>
   16f90:	ldr	r7, [r4, #36]	; 0x24
   16f94:	ldr	r3, [r7, #12]
   16f98:	ldr	r2, [r7, #20]
   16f9c:	sub	r0, fp, #28
   16fa0:	mov	r1, #4
   16fa4:	blx	r3
   16fa8:	cmp	r0, #4
   16fac:	bcs	16fcc <sav_read_document_record+0x58>
   16fb0:	mov	r0, #2
   16fb4:	sub	sp, fp, #24
   16fb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16fbc:	mov	r0, r4
   16fc0:	sub	sp, fp, #24
   16fc4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16fc8:	b	16728 <sav_skip_document_record>
   16fcc:	ldrb	r1, [r4, #436]	; 0x1b4
   16fd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16fd4:	tst	r1, #1
   16fd8:	beq	16fe4 <sav_read_document_record+0x70>
   16fdc:	bl	480c <byteswap4@plt>
   16fe0:	str	r0, [fp, #-28]	; 0xffffffe4
   16fe4:	cmp	r0, #0
   16fe8:	beq	17064 <sav_read_document_record+0xf0>
   16fec:	mov	r5, #0
   16ff0:	sub	r6, fp, #108	; 0x6c
   16ff4:	add	r8, sp, #11
   16ff8:	ldr	r3, [r7, #12]
   16ffc:	ldr	r2, [r7, #20]
   17000:	mov	r0, r6
   17004:	mov	r1, #80	; 0x50
   17008:	blx	r3
   1700c:	cmp	r0, #80	; 0x50
   17010:	blt	16fb0 <sav_read_document_record+0x3c>
   17014:	ldr	r0, [r4, #336]	; 0x150
   17018:	str	r0, [sp]
   1701c:	mov	r0, r8
   17020:	movw	r1, #321	; 0x141
   17024:	mov	r2, r6
   17028:	mov	r3, #80	; 0x50
   1702c:	bl	4cbc <readstat_convert@plt>
   17030:	cmp	r0, #0
   17034:	bne	17074 <sav_read_document_record+0x100>
   17038:	ldr	r3, [r4, #4]
   1703c:	ldr	r2, [r4, #40]	; 0x28
   17040:	mov	r0, r5
   17044:	mov	r1, r8
   17048:	blx	r3
   1704c:	cmp	r0, #0
   17050:	bne	17070 <sav_read_document_record+0xfc>
   17054:	add	r5, r5, #1
   17058:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1705c:	cmp	r5, r0
   17060:	bcc	16ff8 <sav_read_document_record+0x84>
   17064:	mov	r0, #0
   17068:	sub	sp, fp, #24
   1706c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17070:	mov	r0, #4
   17074:	sub	sp, fp, #24
   17078:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001707c <sav_read_dictionary_termination_record>:
   1707c:	push	{fp, lr}
   17080:	mov	fp, sp
   17084:	sub	sp, sp, #8
   17088:	ldr	r0, [r0, #36]	; 0x24
   1708c:	ldr	r3, [r0, #12]
   17090:	ldr	r2, [r0, #20]
   17094:	add	r0, sp, #4
   17098:	mov	r1, #4
   1709c:	blx	r3
   170a0:	mov	r1, #0
   170a4:	cmp	r0, #4
   170a8:	movwcc	r1, #1
   170ac:	lsl	r0, r1, #1
   170b0:	mov	sp, fp
   170b4:	pop	{fp, pc}

000170b8 <sav_parse_machine_floating_point_record>:
   170b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   170bc:	add	fp, sp, #28
   170c0:	sub	sp, sp, #4
   170c4:	mov	r4, r3
   170c8:	mov	r3, #5
   170cc:	cmp	r1, #8
   170d0:	cmpeq	r2, #3
   170d4:	bne	17174 <sav_parse_machine_floating_point_record+0xbc>
   170d8:	add	r1, r0, #8
   170dc:	add	r5, r4, #392	; 0x188
   170e0:	ldr	r8, [r1]
   170e4:	ldr	r9, [r1, #4]
   170e8:	ldr	sl, [r1, #8]
   170ec:	ldr	r7, [r1, #12]
   170f0:	ldr	r2, [r0]
   170f4:	ldr	r3, [r0, #4]
   170f8:	ldrb	r0, [r4, #436]	; 0x1b4
   170fc:	tst	r0, #1
   17100:	beq	17118 <sav_parse_machine_floating_point_record+0x60>
   17104:	mov	r0, r2
   17108:	mov	r1, r3
   1710c:	bl	47f4 <byteswap8@plt>
   17110:	mov	r2, r0
   17114:	mov	r3, r1
   17118:	add	r6, r4, #408	; 0x198
   1711c:	strd	r2, [r5]
   17120:	ldrb	r0, [r4, #436]	; 0x1b4
   17124:	tst	r0, #1
   17128:	beq	17140 <sav_parse_machine_floating_point_record+0x88>
   1712c:	mov	r0, r8
   17130:	mov	r1, r9
   17134:	bl	47f4 <byteswap8@plt>
   17138:	mov	r8, r0
   1713c:	mov	r9, r1
   17140:	add	r5, r4, #400	; 0x190
   17144:	strd	r8, [r6]
   17148:	ldrb	r0, [r4, #436]	; 0x1b4
   1714c:	tst	r0, #1
   17150:	beq	17168 <sav_parse_machine_floating_point_record+0xb0>
   17154:	mov	r0, sl
   17158:	mov	r1, r7
   1715c:	bl	47f4 <byteswap8@plt>
   17160:	mov	sl, r0
   17164:	mov	r7, r1
   17168:	str	sl, [r5]
   1716c:	str	r7, [r5, #4]
   17170:	mov	r3, #0
   17174:	mov	r0, r3
   17178:	sub	sp, fp, #28
   1717c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017180 <sav_store_variable_display_parameter_record>:
   17180:	push	{r4, r5, r6, r7, fp, lr}
   17184:	add	fp, sp, #16
   17188:	mov	r6, r0
   1718c:	mov	r0, #5
   17190:	cmp	r1, #4
   17194:	bne	1720c <sav_store_variable_display_parameter_record+0x8c>
   17198:	mov	r4, r3
   1719c:	mov	r5, r2
   171a0:	ldr	r0, [r3, #328]	; 0x148
   171a4:	lsl	r1, r2, #2
   171a8:	bl	4d70 <readstat_realloc@plt>
   171ac:	str	r0, [r4, #328]	; 0x148
   171b0:	cmp	r5, #0
   171b4:	beq	171c8 <sav_store_variable_display_parameter_record+0x48>
   171b8:	mov	r1, r0
   171bc:	mov	r0, #3
   171c0:	cmp	r1, #0
   171c4:	popeq	{r4, r5, r6, r7, fp, pc}
   171c8:	str	r5, [r4, #332]	; 0x14c
   171cc:	cmp	r5, #0
   171d0:	beq	17208 <sav_store_variable_display_parameter_record+0x88>
   171d4:	mov	r7, #0
   171d8:	b	171f0 <sav_store_variable_display_parameter_record+0x70>
   171dc:	ldr	r1, [r4, #328]	; 0x148
   171e0:	str	r0, [r1, r7, lsl #2]
   171e4:	add	r7, r7, #1
   171e8:	cmp	r5, r7
   171ec:	beq	17208 <sav_store_variable_display_parameter_record+0x88>
   171f0:	ldr	r0, [r6, r7, lsl #2]
   171f4:	ldrb	r1, [r4, #436]	; 0x1b4
   171f8:	tst	r1, #1
   171fc:	beq	171dc <sav_store_variable_display_parameter_record+0x5c>
   17200:	bl	480c <byteswap4@plt>
   17204:	b	171dc <sav_store_variable_display_parameter_record+0x5c>
   17208:	mov	r0, #0
   1720c:	pop	{r4, r5, r6, r7, fp, pc}

00017210 <sav_parse_long_string_value_labels_record>:
   17210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17214:	add	fp, sp, #28
   17218:	sub	sp, sp, #556	; 0x22c
   1721c:	mov	r6, r3
   17220:	ldr	r3, [r3, #20]
   17224:	cmp	r3, #0
   17228:	beq	174e0 <sav_parse_long_string_value_labels_record+0x2d0>
   1722c:	mov	r4, #5
   17230:	cmp	r1, #1
   17234:	bne	175b4 <sav_parse_long_string_value_labels_record+0x3a4>
   17238:	str	r0, [fp, #-36]	; 0xffffffdc
   1723c:	add	r1, r0, r2
   17240:	str	r1, [sp, #28]
   17244:	cmp	r2, #1
   17248:	blt	174e8 <sav_parse_long_string_value_labels_record+0x2d8>
   1724c:	add	sl, sp, #32
   17250:	add	lr, sp, #256	; 0x100
   17254:	add	r4, lr, #35	; 0x23
   17258:	sub	r5, fp, #36	; 0x24
   1725c:	mov	r8, #0
   17260:	mov	r9, #0
   17264:	mov	r0, sl
   17268:	mov	r1, #0
   1726c:	mov	r2, #256	; 0x100
   17270:	bl	4d28 <memset@plt>
   17274:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17278:	ldr	r1, [sp, #28]
   1727c:	sub	r2, r1, r0
   17280:	mov	r0, r4
   17284:	mov	r1, r5
   17288:	mov	r3, r6
   1728c:	bl	17be8 <sav_read_pascal_string>
   17290:	cmp	r0, #0
   17294:	bne	17590 <sav_parse_long_string_value_labels_record+0x380>
   17298:	ldr	r0, [r6, #340]	; 0x154
   1729c:	cmp	r0, #0
   172a0:	add	lr, sp, #256	; 0x100
   172a4:	add	r0, lr, #35	; 0x23
   172a8:	beq	1730c <sav_parse_long_string_value_labels_record+0xfc>
   172ac:	ldr	r4, [r6, #44]	; 0x2c
   172b0:	mov	r5, #0
   172b4:	ldr	r7, [r4, r5, lsl #2]
   172b8:	add	r1, r7, #196	; 0xc4
   172bc:	bl	4878 <strcmp@plt>
   172c0:	cmp	r0, #0
   172c4:	beq	172e8 <sav_parse_long_string_value_labels_record+0xd8>
   172c8:	ldr	r0, [r7, #48]	; 0x30
   172cc:	add	r5, r0, r5
   172d0:	ldr	r0, [r6, #340]	; 0x154
   172d4:	cmp	r5, r0
   172d8:	add	lr, sp, #256	; 0x100
   172dc:	add	r0, lr, #35	; 0x23
   172e0:	bcc	172b4 <sav_parse_long_string_value_labels_record+0xa4>
   172e4:	b	1730c <sav_parse_long_string_value_labels_record+0xfc>
   172e8:	ldr	r3, [r6, #368]	; 0x170
   172ec:	add	r0, r3, #1
   172f0:	str	r0, [r6, #368]	; 0x170
   172f4:	str	r3, [r7, #4]
   172f8:	mov	r0, sl
   172fc:	mov	r1, #256	; 0x100
   17300:	ldr	r2, [pc, #696]	; 175c0 <sav_parse_long_string_value_labels_record+0x3b0>
   17304:	add	r2, pc, r2
   17308:	bl	4d04 <snprintf@plt>
   1730c:	mov	r4, #5
   17310:	ldrb	r0, [sp, #32]
   17314:	cmp	r0, #0
   17318:	beq	17594 <sav_parse_long_string_value_labels_record+0x384>
   1731c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17320:	add	r0, r1, #4
   17324:	str	r0, [fp, #-36]	; 0xffffffdc
   17328:	add	r4, r1, #8
   1732c:	ldr	r1, [sp, #28]
   17330:	cmp	r4, r1
   17334:	bhi	1750c <sav_parse_long_string_value_labels_record+0x2fc>
   17338:	ldr	r7, [r0]
   1733c:	ldrb	r0, [r6, #436]	; 0x1b4
   17340:	tst	r0, #1
   17344:	str	r9, [sp, #24]
   17348:	beq	17358 <sav_parse_long_string_value_labels_record+0x148>
   1734c:	mov	r0, r7
   17350:	bl	480c <byteswap4@plt>
   17354:	mov	r7, r0
   17358:	sub	r5, fp, #36	; 0x24
   1735c:	str	r4, [fp, #-36]	; 0xffffffdc
   17360:	cmp	r7, #0
   17364:	beq	174c0 <sav_parse_long_string_value_labels_record+0x2b0>
   17368:	ldr	r9, [fp, #-36]	; 0xffffffdc
   1736c:	str	r8, [sp, #20]
   17370:	add	r8, r9, #4
   17374:	ldr	r0, [sp, #28]
   17378:	cmp	r8, r0
   1737c:	bhi	17500 <sav_parse_long_string_value_labels_record+0x2f0>
   17380:	ldr	r4, [r9]
   17384:	ldrb	r0, [r6, #436]	; 0x1b4
   17388:	tst	r0, #1
   1738c:	beq	1739c <sav_parse_long_string_value_labels_record+0x18c>
   17390:	mov	r0, r4
   17394:	bl	480c <byteswap4@plt>
   17398:	mov	r4, r0
   1739c:	ldr	r0, [sp, #24]
   173a0:	mov	r1, #1
   173a4:	orr	r5, r1, r4, lsl #2
   173a8:	mov	r1, r5
   173ac:	bl	4d70 <readstat_realloc@plt>
   173b0:	cmp	r0, #0
   173b4:	beq	17514 <sav_parse_long_string_value_labels_record+0x304>
   173b8:	mov	r9, r0
   173bc:	str	r7, [sp, #16]
   173c0:	add	r7, r8, r4
   173c4:	ldr	r0, [sp, #28]
   173c8:	cmp	r7, r0
   173cc:	bhi	1752c <sav_parse_long_string_value_labels_record+0x31c>
   173d0:	ldr	r0, [r6, #336]	; 0x150
   173d4:	str	r0, [sp]
   173d8:	mov	r0, r9
   173dc:	mov	r1, r5
   173e0:	mov	r2, r8
   173e4:	mov	r3, r4
   173e8:	bl	4cbc <readstat_convert@plt>
   173ec:	cmp	r0, #0
   173f0:	bne	17534 <sav_parse_long_string_value_labels_record+0x324>
   173f4:	add	r4, r7, #4
   173f8:	ldr	r0, [sp, #28]
   173fc:	cmp	r4, r0
   17400:	bhi	17540 <sav_parse_long_string_value_labels_record+0x330>
   17404:	ldr	r5, [r7]
   17408:	ldrb	r0, [r6, #436]	; 0x1b4
   1740c:	tst	r0, #1
   17410:	ldr	r8, [sp, #20]
   17414:	beq	17424 <sav_parse_long_string_value_labels_record+0x214>
   17418:	mov	r0, r5
   1741c:	bl	480c <byteswap4@plt>
   17420:	mov	r5, r0
   17424:	mov	r0, #1
   17428:	orr	r7, r0, r5, lsl #2
   1742c:	mov	r0, r8
   17430:	mov	r1, r7
   17434:	bl	4d70 <readstat_realloc@plt>
   17438:	cmp	r0, #0
   1743c:	beq	17550 <sav_parse_long_string_value_labels_record+0x340>
   17440:	mov	r8, r0
   17444:	str	r9, [sp, #24]
   17448:	add	r9, r4, r5
   1744c:	ldr	r0, [sp, #28]
   17450:	cmp	r9, r0
   17454:	bhi	17560 <sav_parse_long_string_value_labels_record+0x350>
   17458:	ldr	r0, [r6, #336]	; 0x150
   1745c:	str	r0, [sp]
   17460:	mov	r0, r8
   17464:	mov	r1, r7
   17468:	mov	r2, r4
   1746c:	mov	r3, r5
   17470:	bl	4cbc <readstat_convert@plt>
   17474:	cmp	r0, #0
   17478:	bne	17570 <sav_parse_long_string_value_labels_record+0x360>
   1747c:	ldr	r1, [r6, #20]
   17480:	ldr	r0, [r6, #40]	; 0x28
   17484:	mov	r2, #0
   17488:	str	r2, [sp]
   1748c:	stmib	sp, {r2, r8}
   17490:	str	r0, [sp, #12]
   17494:	mov	r0, sl
   17498:	ldr	r2, [sp, #24]
   1749c:	mov	r3, #0
   174a0:	blx	r1
   174a4:	cmp	r0, #0
   174a8:	bne	17580 <sav_parse_long_string_value_labels_record+0x370>
   174ac:	ldr	r7, [sp, #16]
   174b0:	subs	r7, r7, #1
   174b4:	sub	r5, fp, #36	; 0x24
   174b8:	bne	1736c <sav_parse_long_string_value_labels_record+0x15c>
   174bc:	str	r9, [fp, #-36]	; 0xffffffdc
   174c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   174c4:	ldr	r1, [sp, #28]
   174c8:	cmp	r0, r1
   174cc:	ldr	r9, [sp, #24]
   174d0:	add	lr, sp, #256	; 0x100
   174d4:	add	r4, lr, #35	; 0x23
   174d8:	bcc	17264 <sav_parse_long_string_value_labels_record+0x54>
   174dc:	b	174f0 <sav_parse_long_string_value_labels_record+0x2e0>
   174e0:	mov	r4, #0
   174e4:	b	175b4 <sav_parse_long_string_value_labels_record+0x3a4>
   174e8:	mov	r9, #0
   174ec:	mov	r8, #0
   174f0:	ldr	r1, [sp, #28]
   174f4:	subs	r4, r0, r1
   174f8:	movwne	r4, #5
   174fc:	b	17594 <sav_parse_long_string_value_labels_record+0x384>
   17500:	str	r9, [fp, #-36]	; 0xffffffdc
   17504:	ldr	r8, [sp, #20]
   17508:	ldr	r9, [sp, #24]
   1750c:	mov	r4, #5
   17510:	b	17594 <sav_parse_long_string_value_labels_record+0x384>
   17514:	str	r8, [fp, #-36]	; 0xffffffdc
   17518:	mov	r4, #3
   1751c:	ldr	r8, [sp, #20]
   17520:	cmp	r8, #0
   17524:	bne	175ac <sav_parse_long_string_value_labels_record+0x39c>
   17528:	b	175b4 <sav_parse_long_string_value_labels_record+0x3a4>
   1752c:	str	r8, [fp, #-36]	; 0xffffffdc
   17530:	b	17544 <sav_parse_long_string_value_labels_record+0x334>
   17534:	str	r8, [fp, #-36]	; 0xffffffdc
   17538:	mov	r4, r0
   1753c:	b	17548 <sav_parse_long_string_value_labels_record+0x338>
   17540:	str	r7, [fp, #-36]	; 0xffffffdc
   17544:	mov	r4, #5
   17548:	ldr	r8, [sp, #20]
   1754c:	b	1759c <sav_parse_long_string_value_labels_record+0x38c>
   17550:	str	r4, [fp, #-36]	; 0xffffffdc
   17554:	mov	r8, #0
   17558:	mov	r4, #3
   1755c:	b	1759c <sav_parse_long_string_value_labels_record+0x38c>
   17560:	str	r4, [fp, #-36]	; 0xffffffdc
   17564:	mov	r4, #5
   17568:	ldr	r9, [sp, #24]
   1756c:	b	1759c <sav_parse_long_string_value_labels_record+0x38c>
   17570:	str	r4, [fp, #-36]	; 0xffffffdc
   17574:	mov	r4, r0
   17578:	ldr	r9, [sp, #24]
   1757c:	b	1759c <sav_parse_long_string_value_labels_record+0x38c>
   17580:	str	r9, [fp, #-36]	; 0xffffffdc
   17584:	mov	r4, #4
   17588:	ldr	r9, [sp, #24]
   1758c:	b	1759c <sav_parse_long_string_value_labels_record+0x38c>
   17590:	mov	r4, r0
   17594:	cmp	r9, #0
   17598:	beq	175a4 <sav_parse_long_string_value_labels_record+0x394>
   1759c:	mov	r0, r9
   175a0:	bl	4938 <free@plt>
   175a4:	cmp	r8, #0
   175a8:	beq	175b4 <sav_parse_long_string_value_labels_record+0x3a4>
   175ac:	mov	r0, r8
   175b0:	bl	4938 <free@plt>
   175b4:	mov	r0, r4
   175b8:	sub	sp, fp, #28
   175bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   175c0:	.word	0x0000eeaf

000175c4 <sav_parse_long_string_missing_values_record>:
   175c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   175c8:	add	fp, sp, #28
   175cc:	sub	sp, sp, #276	; 0x114
   175d0:	mov	r7, #5
   175d4:	cmp	r1, #1
   175d8:	bne	17760 <sav_parse_long_string_missing_values_record+0x19c>
   175dc:	mov	r5, r3
   175e0:	str	r0, [fp, #-36]	; 0xffffffdc
   175e4:	add	sl, r0, r2
   175e8:	b	175fc <sav_parse_long_string_missing_values_record+0x38>
   175ec:	mov	r9, #0
   175f0:	ldr	r0, [r5, #340]	; 0x154
   175f4:	cmp	r9, r0
   175f8:	beq	17760 <sav_parse_long_string_missing_values_record+0x19c>
   175fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17600:	cmp	r0, sl
   17604:	bcs	17750 <sav_parse_long_string_missing_values_record+0x18c>
   17608:	sub	r2, sl, r0
   1760c:	add	r0, sp, #11
   17610:	sub	r1, fp, #36	; 0x24
   17614:	mov	r3, r5
   17618:	bl	17be8 <sav_read_pascal_string>
   1761c:	cmp	r0, #0
   17620:	bne	1775c <sav_parse_long_string_missing_values_record+0x198>
   17624:	mov	r7, #5
   17628:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1762c:	cmp	r0, sl
   17630:	beq	17760 <sav_parse_long_string_missing_values_record+0x19c>
   17634:	add	r1, r0, #1
   17638:	str	r1, [fp, #-36]	; 0xffffffdc
   1763c:	ldrb	r8, [r0]
   17640:	sub	r0, r8, #1
   17644:	uxtb	r0, r0
   17648:	cmp	r0, #2
   1764c:	bhi	17760 <sav_parse_long_string_missing_values_record+0x19c>
   17650:	ldr	r0, [r5, #340]	; 0x154
   17654:	cmp	r0, #0
   17658:	beq	175ec <sav_parse_long_string_missing_values_record+0x28>
   1765c:	ldr	r6, [r5, #44]	; 0x2c
   17660:	mov	r9, #0
   17664:	ldr	r4, [r6, r9, lsl #2]
   17668:	add	r1, r4, #196	; 0xc4
   1766c:	add	r0, sp, #11
   17670:	bl	4878 <strcmp@plt>
   17674:	cmp	r0, #0
   17678:	beq	17694 <sav_parse_long_string_missing_values_record+0xd0>
   1767c:	ldr	r0, [r4, #48]	; 0x30
   17680:	add	r9, r0, r9
   17684:	ldr	r0, [r5, #340]	; 0x154
   17688:	cmp	r9, r0
   1768c:	bcc	17664 <sav_parse_long_string_missing_values_record+0xa0>
   17690:	b	175f0 <sav_parse_long_string_missing_values_record+0x2c>
   17694:	str	r8, [r4, #52]	; 0x34
   17698:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1769c:	add	r6, r0, #4
   176a0:	cmp	r6, sl
   176a4:	bhi	17760 <sav_parse_long_string_missing_values_record+0x19c>
   176a8:	ldr	r7, [r0]
   176ac:	ldrb	r0, [r5, #436]	; 0x1b4
   176b0:	tst	r0, #1
   176b4:	beq	176c4 <sav_parse_long_string_missing_values_record+0x100>
   176b8:	mov	r0, r7
   176bc:	bl	480c <byteswap4@plt>
   176c0:	mov	r7, r0
   176c4:	str	r6, [fp, #-36]	; 0xffffffdc
   176c8:	cmp	r8, #0
   176cc:	beq	17730 <sav_parse_long_string_missing_values_record+0x16c>
   176d0:	str	sl, [sp, #4]
   176d4:	add	r4, r4, #88	; 0x58
   176d8:	ldr	sl, [fp, #-36]	; 0xffffffdc
   176dc:	add	r6, sl, r7
   176e0:	ldr	r0, [sp, #4]
   176e4:	cmp	r6, r0
   176e8:	bhi	17738 <sav_parse_long_string_missing_values_record+0x174>
   176ec:	ldr	r0, [r5, #336]	; 0x150
   176f0:	str	r0, [sp]
   176f4:	mov	r0, r4
   176f8:	mov	r1, #33	; 0x21
   176fc:	mov	r2, sl
   17700:	mov	r3, r7
   17704:	bl	4cbc <readstat_convert@plt>
   17708:	cmp	r0, #0
   1770c:	bne	17744 <sav_parse_long_string_missing_values_record+0x180>
   17710:	add	r4, r4, #33	; 0x21
   17714:	subs	r8, r8, #1
   17718:	mov	sl, r6
   1771c:	bne	176dc <sav_parse_long_string_missing_values_record+0x118>
   17720:	str	r6, [fp, #-36]	; 0xffffffdc
   17724:	mov	r7, #5
   17728:	ldr	sl, [sp, #4]
   1772c:	b	175f0 <sav_parse_long_string_missing_values_record+0x2c>
   17730:	mov	r7, #5
   17734:	b	175f0 <sav_parse_long_string_missing_values_record+0x2c>
   17738:	mov	r7, #5
   1773c:	str	sl, [fp, #-36]	; 0xffffffdc
   17740:	b	17760 <sav_parse_long_string_missing_values_record+0x19c>
   17744:	mov	r7, r0
   17748:	str	sl, [fp, #-36]	; 0xffffffdc
   1774c:	b	17760 <sav_parse_long_string_missing_values_record+0x19c>
   17750:	subs	r7, r0, sl
   17754:	movwne	r7, #5
   17758:	b	17760 <sav_parse_long_string_missing_values_record+0x19c>
   1775c:	mov	r7, r0
   17760:	mov	r0, r7
   17764:	sub	sp, fp, #28
   17768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001776c <sav_read_variable_label>:
   1776c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17770:	add	fp, sp, #28
   17774:	sub	sp, sp, #12
   17778:	mov	r5, r1
   1777c:	mov	r4, r0
   17780:	ldr	r9, [r1, #36]	; 0x24
   17784:	ldr	r3, [r9, #12]
   17788:	ldr	r2, [r9, #20]
   1778c:	add	r0, sp, #8
   17790:	mov	r1, #4
   17794:	blx	r3
   17798:	mov	r6, #2
   1779c:	cmp	r0, #4
   177a0:	bcc	17870 <sav_read_variable_label+0x104>
   177a4:	ldrb	r1, [r5, #436]	; 0x1b4
   177a8:	ldr	r0, [sp, #8]
   177ac:	tst	r1, #1
   177b0:	beq	177b8 <sav_read_variable_label+0x4c>
   177b4:	bl	480c <byteswap4@plt>
   177b8:	str	r0, [sp, #8]
   177bc:	mov	r7, #0
   177c0:	cmp	r0, #0
   177c4:	beq	1788c <sav_read_variable_label+0x120>
   177c8:	add	r0, r0, #3
   177cc:	bic	sl, r0, #3
   177d0:	mov	r0, sl
   177d4:	bl	4cb0 <readstat_malloc@plt>
   177d8:	cmp	r0, #0
   177dc:	beq	1785c <sav_read_variable_label+0xf0>
   177e0:	mov	r8, r0
   177e4:	ldr	r0, [sp, #8]
   177e8:	mov	r1, #1
   177ec:	orr	r6, r1, r0, lsl #2
   177f0:	mov	r0, r6
   177f4:	bl	4cb0 <readstat_malloc@plt>
   177f8:	str	r0, [r4, #264]	; 0x108
   177fc:	cmp	r0, #0
   17800:	beq	17864 <sav_read_variable_label+0xf8>
   17804:	str	r6, [sp, #4]
   17808:	ldr	r3, [r9, #12]
   1780c:	ldr	r2, [r9, #20]
   17810:	mov	r0, r8
   17814:	mov	r1, sl
   17818:	blx	r3
   1781c:	mov	r6, #2
   17820:	cmp	r0, sl
   17824:	bcc	17868 <sav_read_variable_label+0xfc>
   17828:	ldr	r0, [r4, #264]	; 0x108
   1782c:	ldr	r1, [r5, #336]	; 0x150
   17830:	ldr	r3, [sp, #8]
   17834:	str	r1, [sp]
   17838:	ldr	r1, [sp, #4]
   1783c:	mov	r2, r8
   17840:	bl	4cbc <readstat_convert@plt>
   17844:	mov	r6, r0
   17848:	mov	r0, r8
   1784c:	bl	4938 <free@plt>
   17850:	cmp	r6, #0
   17854:	bne	17870 <sav_read_variable_label+0x104>
   17858:	b	1788c <sav_read_variable_label+0x120>
   1785c:	mov	r6, #3
   17860:	b	17870 <sav_read_variable_label+0x104>
   17864:	mov	r6, #3
   17868:	mov	r0, r8
   1786c:	bl	4938 <free@plt>
   17870:	ldr	r0, [r4, #264]	; 0x108
   17874:	cmp	r0, #0
   17878:	beq	17888 <sav_read_variable_label+0x11c>
   1787c:	bl	4938 <free@plt>
   17880:	mov	r0, #0
   17884:	str	r0, [r4, #264]	; 0x108
   17888:	mov	r7, r6
   1788c:	mov	r0, r7
   17890:	sub	sp, fp, #28
   17894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017898 <sav_read_variable_missing_values>:
   17898:	ldr	r2, [r0, #52]	; 0x34
   1789c:	add	r3, r2, #3
   178a0:	cmp	r3, #6
   178a4:	movhi	r0, #5
   178a8:	bxhi	lr
   178ac:	cmn	r2, #1
   178b0:	ble	178c0 <sav_read_variable_missing_values+0x28>
   178b4:	mov	r2, #0
   178b8:	str	r2, [r0, #56]	; 0x38
   178bc:	b	178d0 <sav_read_variable_missing_values+0x38>
   178c0:	mov	r3, #1
   178c4:	rsb	r2, r2, #0
   178c8:	str	r2, [r0, #52]	; 0x34
   178cc:	str	r3, [r0, #56]	; 0x38
   178d0:	ldr	r2, [r0]
   178d4:	cmp	r2, #5
   178d8:	bne	178e0 <sav_read_variable_missing_values+0x48>
   178dc:	b	178e4 <sav_read_variable_missing_double_values>
   178e0:	b	17a24 <sav_read_variable_missing_string_values>

000178e4 <sav_read_variable_missing_double_values>:
   178e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178e8:	add	fp, sp, #28
   178ec:	sub	sp, sp, #4
   178f0:	mov	r7, r1
   178f4:	mov	r8, r0
   178f8:	ldr	r0, [r1, #36]	; 0x24
   178fc:	ldr	r3, [r0, #12]
   17900:	ldr	r2, [r0, #20]
   17904:	ldr	r0, [r8, #52]	; 0x34
   17908:	add	r9, r8, #64	; 0x40
   1790c:	lsl	r1, r0, #3
   17910:	mov	r0, r9
   17914:	blx	r3
   17918:	mov	r1, r0
   1791c:	ldr	r2, [r8, #52]	; 0x34
   17920:	mov	r0, #2
   17924:	cmp	r1, r2, lsl #3
   17928:	bcc	17a1c <sav_read_variable_missing_double_values+0x138>
   1792c:	ldr	r0, [r8, #52]	; 0x34
   17930:	cmp	r0, #1
   17934:	blt	17a18 <sav_read_variable_missing_double_values+0x134>
   17938:	add	r5, r7, #392	; 0x188
   1793c:	add	r6, r7, #400	; 0x190
   17940:	add	ip, r7, #408	; 0x198
   17944:	mov	lr, #0
   17948:	mov	sl, #0
   1794c:	str	r7, [sp]
   17950:	b	179d8 <sav_read_variable_missing_double_values+0xf4>
   17954:	mov	r0, r9
   17958:	ldr	r1, [r0, sl, lsl #3]!
   1795c:	ldrd	r2, [r5]
   17960:	eor	r4, r1, r2
   17964:	ldr	r2, [r0, #4]
   17968:	eor	r3, r2, r3
   1796c:	orrs	r3, r4, r3
   17970:	movweq	r3, #0
   17974:	movteq	r3, #32760	; 0x7ff8
   17978:	streq	lr, [r0]
   1797c:	streq	r3, [r0, #4]
   17980:	ldr	r4, [r6]
   17984:	ldr	r3, [r6, #4]
   17988:	eor	r3, r2, r3
   1798c:	eor	r4, r1, r4
   17990:	orrs	r3, r4, r3
   17994:	movweq	r3, #0
   17998:	movteq	r3, #65520	; 0xfff0
   1799c:	streq	lr, [r0]
   179a0:	streq	r3, [r0, #4]
   179a4:	ldr	r4, [ip]
   179a8:	ldr	r3, [ip, #4]
   179ac:	eor	r2, r2, r3
   179b0:	eor	r1, r1, r4
   179b4:	orrs	r1, r1, r2
   179b8:	movweq	r1, #0
   179bc:	movteq	r1, #32752	; 0x7ff0
   179c0:	streq	lr, [r0]
   179c4:	streq	r1, [r0, #4]
   179c8:	add	sl, sl, #1
   179cc:	ldr	r0, [r8, #52]	; 0x34
   179d0:	cmp	sl, r0
   179d4:	bge	17a18 <sav_read_variable_missing_double_values+0x134>
   179d8:	ldrb	r0, [r7, #436]	; 0x1b4
   179dc:	tst	r0, #1
   179e0:	beq	17954 <sav_read_variable_missing_double_values+0x70>
   179e4:	mov	r7, r8
   179e8:	add	r8, r9, sl, lsl #3
   179ec:	vldr	d0, [r8]
   179f0:	mov	r4, r9
   179f4:	mov	r9, ip
   179f8:	bl	4fa4 <byteswap_double@plt>
   179fc:	mov	lr, #0
   17a00:	mov	ip, r9
   17a04:	mov	r9, r4
   17a08:	vstr	d0, [r8]
   17a0c:	mov	r8, r7
   17a10:	ldr	r7, [sp]
   17a14:	b	17954 <sav_read_variable_missing_double_values+0x70>
   17a18:	mov	r0, #0
   17a1c:	sub	sp, fp, #28
   17a20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017a24 <sav_read_variable_missing_string_values>:
   17a24:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17a28:	add	fp, sp, #24
   17a2c:	sub	sp, sp, #16
   17a30:	mov	r5, r0
   17a34:	ldr	r0, [r0, #52]	; 0x34
   17a38:	cmp	r0, #1
   17a3c:	blt	17aa8 <sav_read_variable_missing_string_values+0x84>
   17a40:	mov	r9, r1
   17a44:	ldr	r7, [r1, #36]	; 0x24
   17a48:	add	r6, r5, #88	; 0x58
   17a4c:	mov	r4, #0
   17a50:	add	r8, sp, #8
   17a54:	ldr	r3, [r7, #12]
   17a58:	ldr	r2, [r7, #20]
   17a5c:	mov	r0, r8
   17a60:	mov	r1, #8
   17a64:	blx	r3
   17a68:	cmp	r0, #8
   17a6c:	bcc	17ab4 <sav_read_variable_missing_string_values+0x90>
   17a70:	ldr	r0, [r9, #336]	; 0x150
   17a74:	str	r0, [sp]
   17a78:	mov	r0, r6
   17a7c:	mov	r1, #33	; 0x21
   17a80:	mov	r2, r8
   17a84:	mov	r3, #8
   17a88:	bl	4cbc <readstat_convert@plt>
   17a8c:	cmp	r0, #0
   17a90:	bne	17aac <sav_read_variable_missing_string_values+0x88>
   17a94:	add	r6, r6, #33	; 0x21
   17a98:	add	r4, r4, #1
   17a9c:	ldr	r0, [r5, #52]	; 0x34
   17aa0:	cmp	r4, r0
   17aa4:	blt	17a54 <sav_read_variable_missing_string_values+0x30>
   17aa8:	mov	r0, #0
   17aac:	sub	sp, fp, #24
   17ab0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17ab4:	mov	r0, #2
   17ab8:	sub	sp, fp, #24
   17abc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017ac0 <sav_tag_missing_double>:
   17ac0:	push	{r4, r6, r7, sl, fp, lr}
   17ac4:	add	fp, sp, #16
   17ac8:	mov	r4, r0
   17acc:	vldr	d0, [r0]
   17ad0:	ldr	ip, [r1, #392]	; 0x188
   17ad4:	ldr	r3, [r1, #396]	; 0x18c
   17ad8:	vmov	r0, r2, d0
   17adc:	eor	lr, r3, r2
   17ae0:	eor	r3, ip, r0
   17ae4:	orrs	r3, r3, lr
   17ae8:	add	ip, r1, #400	; 0x190
   17aec:	bne	17afc <sav_tag_missing_double+0x3c>
   17af0:	ldrb	r3, [r4, #13]
   17af4:	orr	r3, r3, #1
   17af8:	strb	r3, [r4, #13]
   17afc:	add	r1, r1, #408	; 0x198
   17b00:	ldrd	r6, [ip]
   17b04:	eor	r3, r7, r2
   17b08:	eor	r7, r6, r0
   17b0c:	orrs	r3, r7, r3
   17b10:	bne	17b20 <sav_tag_missing_double+0x60>
   17b14:	ldrb	r3, [r4, #13]
   17b18:	orr	r3, r3, #1
   17b1c:	strb	r3, [r4, #13]
   17b20:	ldrd	r6, [r1]
   17b24:	eor	r1, r7, r2
   17b28:	eor	r0, r6, r0
   17b2c:	orrs	r0, r0, r1
   17b30:	bne	17b40 <sav_tag_missing_double+0x80>
   17b34:	ldrb	r0, [r4, #13]
   17b38:	orr	r0, r0, #1
   17b3c:	strb	r0, [r4, #13]
   17b40:	bl	4db8 <__isnan@plt>
   17b44:	cmp	r0, #0
   17b48:	ldrbne	r0, [r4, #13]
   17b4c:	orrne	r0, r0, #1
   17b50:	strbne	r0, [r4, #13]
   17b54:	pop	{r4, r6, r7, sl, fp, pc}

00017b58 <sav_submit_value_labels>:
   17b58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b5c:	add	fp, sp, #28
   17b60:	sub	sp, sp, #276	; 0x114
   17b64:	mov	sl, r2
   17b68:	mov	r9, r1
   17b6c:	mov	r6, r0
   17b70:	ldr	r3, [r2, #368]	; 0x170
   17b74:	add	r0, sp, #16
   17b78:	ldr	r2, [pc, #100]	; 17be4 <sav_submit_value_labels+0x8c>
   17b7c:	add	r2, pc, r2
   17b80:	mov	r1, #256	; 0x100
   17b84:	bl	4d04 <snprintf@plt>
   17b88:	cmp	r9, #1
   17b8c:	blt	17bdc <sav_submit_value_labels+0x84>
   17b90:	add	r7, r6, #64	; 0x40
   17b94:	mov	r6, #1
   17b98:	add	r8, sp, #16
   17b9c:	ldr	r2, [r7, #-16]
   17ba0:	ldr	r3, [r7, #-12]
   17ba4:	ldmda	r7, {r0, r1, r5}
   17ba8:	ldr	ip, [sl, #20]
   17bac:	ldr	r4, [sl, #40]	; 0x28
   17bb0:	stm	sp, {r0, r1, r5}
   17bb4:	str	r4, [sp, #12]
   17bb8:	mov	r0, r8
   17bbc:	blx	ip
   17bc0:	cmp	r0, #0
   17bc4:	bne	17bdc <sav_submit_value_labels+0x84>
   17bc8:	add	r7, r7, #72	; 0x48
   17bcc:	add	r0, r6, #1
   17bd0:	cmp	r6, r9
   17bd4:	mov	r6, r0
   17bd8:	blt	17b9c <sav_submit_value_labels+0x44>
   17bdc:	sub	sp, fp, #28
   17be0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17be4:	.word	0x0000e637

00017be8 <sav_read_pascal_string>:
   17be8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17bec:	add	fp, sp, #28
   17bf0:	sub	sp, sp, #4
   17bf4:	mov	r4, r1
   17bf8:	ldr	r6, [r1]
   17bfc:	mov	r5, #5
   17c00:	cmp	r2, #4
   17c04:	blt	17c6c <sav_read_pascal_string+0x84>
   17c08:	mov	r8, r0
   17c0c:	add	sl, r6, r2
   17c10:	add	r9, r6, #4
   17c14:	ldr	r7, [r6]
   17c18:	ldrb	r0, [r3, #436]	; 0x1b4
   17c1c:	tst	r0, #1
   17c20:	beq	17c30 <sav_read_pascal_string+0x48>
   17c24:	mov	r0, r7
   17c28:	bl	480c <byteswap4@plt>
   17c2c:	mov	r7, r0
   17c30:	add	r6, r9, r7
   17c34:	cmp	r6, sl
   17c38:	bls	17c44 <sav_read_pascal_string+0x5c>
   17c3c:	mov	r6, r9
   17c40:	b	17c6c <sav_read_pascal_string+0x84>
   17c44:	mov	r0, #0
   17c48:	str	r0, [sp]
   17c4c:	mov	r0, r8
   17c50:	movw	r1, #257	; 0x101
   17c54:	mov	r2, r9
   17c58:	mov	r3, r7
   17c5c:	bl	4cbc <readstat_convert@plt>
   17c60:	mov	r5, r0
   17c64:	cmp	r0, #0
   17c68:	movne	r6, r9
   17c6c:	str	r6, [r4]
   17c70:	mov	r0, r5
   17c74:	sub	sp, fp, #28
   17c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017c7c <sav_read_compressed_data>:
   17c7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c80:	add	fp, sp, #28
   17c84:	sub	sp, sp, #68	; 0x44
   17c88:	sub	sp, sp, #65536	; 0x10000
   17c8c:	mov	r5, r0
   17c90:	ldr	r0, [r0, #36]	; 0x24
   17c94:	str	r0, [sp, #4]
   17c98:	ldr	r0, [r5, #344]	; 0x158
   17c9c:	vmov.i32	q8, #0	; 0x00000000
   17ca0:	mov	r1, #32
   17ca4:	add	r2, sp, #8
   17ca8:	vst1.64	{d16-d17}, [r2], r1
   17cac:	ldr	r1, [r5, #392]	; 0x188
   17cb0:	ldr	r3, [r5, #396]	; 0x18c
   17cb4:	str	r3, [sp, #28]
   17cb8:	str	r1, [sp, #24]
   17cbc:	mov	r4, #0
   17cc0:	vldr	d16, [r5, #416]	; 0x1a0
   17cc4:	str	r4, [r2]
   17cc8:	str	r4, [r2, #4]
   17ccc:	str	r4, [sp, #48]	; 0x30
   17cd0:	vstr	d16, [sp, #32]
   17cd4:	ldrb	r1, [r5, #436]	; 0x1b4
   17cd8:	str	r4, [sp, #56]	; 0x38
   17cdc:	and	r1, r1, #1
   17ce0:	str	r1, [sp, #52]	; 0x34
   17ce4:	lsl	sl, r0, #3
   17ce8:	cmp	r0, #0
   17cec:	beq	17d04 <sav_read_compressed_data+0x88>
   17cf0:	mov	r0, sl
   17cf4:	bl	4cb0 <readstat_malloc@plt>
   17cf8:	mov	r4, r0
   17cfc:	cmp	r0, #0
   17d00:	beq	17e14 <sav_read_compressed_data+0x198>
   17d04:	mov	r0, r5
   17d08:	bl	15d08 <sav_update_progress>
   17d0c:	mov	r6, r0
   17d10:	cmp	r0, #0
   17d14:	bne	17e20 <sav_read_compressed_data+0x1a4>
   17d18:	mov	r8, #0
   17d1c:	ldr	r0, [sp, #4]
   17d20:	ldr	r3, [r0, #12]
   17d24:	ldr	r2, [r0, #20]
   17d28:	add	r0, sp, #64	; 0x40
   17d2c:	mov	r1, #65536	; 0x10000
   17d30:	blx	r3
   17d34:	mov	r7, r0
   17d38:	add	r0, r0, #1
   17d3c:	cmp	r0, #2
   17d40:	bcc	17e3c <sav_read_compressed_data+0x1c0>
   17d44:	ands	r0, r7, #7
   17d48:	bne	17e3c <sav_read_compressed_data+0x1c0>
   17d4c:	mov	r0, #1
   17d50:	str	r0, [sp, #56]	; 0x38
   17d54:	mov	r0, #0
   17d58:	b	17d6c <sav_read_compressed_data+0xf0>
   17d5c:	sub	r0, r7, r9
   17d60:	ldr	r1, [sp, #56]	; 0x38
   17d64:	cmp	r1, #0
   17d68:	beq	17dfc <sav_read_compressed_data+0x180>
   17d6c:	sub	r1, sl, r8
   17d70:	str	r1, [sp, #20]
   17d74:	add	r1, r4, r8
   17d78:	str	r1, [sp, #16]
   17d7c:	sub	r1, r7, r0
   17d80:	str	r1, [sp, #12]
   17d84:	add	r1, sp, #64	; 0x40
   17d88:	add	r0, r1, r0
   17d8c:	str	r0, [sp, #8]
   17d90:	add	r0, sp, #8
   17d94:	bl	4c98 <sav_decompress_row@plt>
   17d98:	ldr	r9, [sp, #12]
   17d9c:	ldr	r0, [sp, #56]	; 0x38
   17da0:	cmp	r0, #2
   17da4:	bne	17dcc <sav_read_compressed_data+0x150>
   17da8:	mov	r0, r4
   17dac:	mov	r1, sl
   17db0:	mov	r2, r5
   17db4:	bl	17e4c <sav_process_row>
   17db8:	cmp	r0, #0
   17dbc:	bne	17e1c <sav_read_compressed_data+0x1a0>
   17dc0:	mov	r8, #0
   17dc4:	ldr	r0, [sp, #56]	; 0x38
   17dc8:	b	17dd4 <sav_read_compressed_data+0x158>
   17dcc:	ldr	r1, [sp, #20]
   17dd0:	sub	r8, sl, r1
   17dd4:	mov	r6, #0
   17dd8:	cmp	r0, #3
   17ddc:	beq	17e20 <sav_read_compressed_data+0x1a4>
   17de0:	ldr	r0, [r5, #356]	; 0x164
   17de4:	cmp	r0, #1
   17de8:	blt	17d5c <sav_read_compressed_data+0xe0>
   17dec:	ldr	r1, [r5, #364]	; 0x16c
   17df0:	cmp	r1, r0
   17df4:	bne	17d5c <sav_read_compressed_data+0xe0>
   17df8:	b	17e20 <sav_read_compressed_data+0x1a4>
   17dfc:	mov	r0, r5
   17e00:	bl	15d08 <sav_update_progress>
   17e04:	mov	r6, r0
   17e08:	cmp	r0, #0
   17e0c:	beq	17d1c <sav_read_compressed_data+0xa0>
   17e10:	b	17e20 <sav_read_compressed_data+0x1a4>
   17e14:	mov	r6, #3
   17e18:	b	17e30 <sav_read_compressed_data+0x1b4>
   17e1c:	mov	r6, r0
   17e20:	cmp	r4, #0
   17e24:	beq	17e30 <sav_read_compressed_data+0x1b4>
   17e28:	mov	r0, r4
   17e2c:	bl	4938 <free@plt>
   17e30:	mov	r0, r6
   17e34:	sub	sp, fp, #28
   17e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e3c:	mov	r6, #0
   17e40:	cmp	r4, #0
   17e44:	bne	17e28 <sav_read_compressed_data+0x1ac>
   17e48:	b	17e30 <sav_read_compressed_data+0x1b4>

00017e4c <sav_process_row>:
   17e4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e50:	add	fp, sp, #28
   17e54:	sub	sp, sp, #60	; 0x3c
   17e58:	mov	r8, r2
   17e5c:	str	r0, [sp, #36]	; 0x24
   17e60:	ldr	r0, [r2, #360]	; 0x168
   17e64:	cmp	r0, #0
   17e68:	beq	17e78 <sav_process_row+0x2c>
   17e6c:	sub	r0, r0, #1
   17e70:	str	r0, [r8, #360]	; 0x168
   17e74:	b	18114 <sav_process_row+0x2c8>
   17e78:	cmp	r1, #0
   17e7c:	beq	18108 <sav_process_row+0x2bc>
   17e80:	add	r0, sp, #40	; 0x28
   17e84:	add	r0, r0, #8
   17e88:	str	r0, [sp, #20]
   17e8c:	mov	r7, #0
   17e90:	mov	r3, #0
   17e94:	mov	ip, #0
   17e98:	mov	lr, #0
   17e9c:	mov	sl, #0
   17ea0:	mov	r9, #0
   17ea4:	mov	r4, #0
   17ea8:	str	r1, [sp, #24]
   17eac:	ldr	r0, [r8, #340]	; 0x154
   17eb0:	cmp	r3, r0
   17eb4:	cmplt	ip, r0
   17eb8:	bge	18108 <sav_process_row+0x2bc>
   17ebc:	ldr	r2, [r8, #44]	; 0x2c
   17ec0:	mov	r6, r3
   17ec4:	ldr	r0, [r2, r3, lsl #2]
   17ec8:	ldr	r5, [r2, ip, lsl #2]
   17ecc:	str	r7, [sp, #44]	; 0x2c
   17ed0:	str	r7, [sp, #40]	; 0x28
   17ed4:	ldr	r3, [r5]
   17ed8:	strb	r7, [sp, #52]	; 0x34
   17edc:	str	r3, [sp, #48]	; 0x30
   17ee0:	ldrb	r2, [sp, #53]	; 0x35
   17ee4:	and	r2, r2, #252	; 0xfc
   17ee8:	strb	r2, [sp, #53]	; 0x35
   17eec:	cmp	r4, #31
   17ef0:	bgt	18120 <sav_process_row+0x2d4>
   17ef4:	cmp	r3, #5
   17ef8:	beq	17f1c <sav_process_row+0xd0>
   17efc:	cmp	r3, #0
   17f00:	bne	180f8 <sav_process_row+0x2ac>
   17f04:	ldr	r2, [r8, #380]	; 0x17c
   17f08:	add	r3, sl, #8
   17f0c:	cmp	r3, r2
   17f10:	bls	17fe0 <sav_process_row+0x194>
   17f14:	mov	r3, sl
   17f18:	b	18014 <sav_process_row+0x1c8>
   17f1c:	ldr	r0, [r5, #8]
   17f20:	ldr	r2, [r8, #52]	; 0x34
   17f24:	ldr	r0, [r2, r0, lsl #2]
   17f28:	ldr	r0, [r0, #2144]	; 0x860
   17f2c:	cmp	r0, #0
   17f30:	bne	17fcc <sav_process_row+0x180>
   17f34:	str	ip, [sp, #28]
   17f38:	str	r4, [sp, #32]
   17f3c:	mov	r4, lr
   17f40:	ldr	r0, [sp, #36]	; 0x24
   17f44:	add	r0, r0, r9
   17f48:	vld1.8	{d0}, [r0]
   17f4c:	ldrb	r0, [r8, #436]	; 0x1b4
   17f50:	tst	r0, #1
   17f54:	beq	17f5c <sav_process_row+0x110>
   17f58:	bl	4fa4 <byteswap_double@plt>
   17f5c:	vstr	d0, [sp, #40]	; 0x28
   17f60:	add	r0, sp, #40	; 0x28
   17f64:	mov	r1, r8
   17f68:	bl	17ac0 <sav_tag_missing_double>
   17f6c:	ldr	r1, [r5, #8]
   17f70:	ldr	r0, [r8, #16]
   17f74:	str	r0, [sp, #16]
   17f78:	ldr	lr, [r8, #40]	; 0x28
   17f7c:	ldr	r2, [r8, #52]	; 0x34
   17f80:	ldr	r0, [r8, #364]	; 0x16c
   17f84:	ldr	ip, [r2, r1, lsl #2]
   17f88:	ldr	r1, [sp, #20]
   17f8c:	ldr	r7, [r1]
   17f90:	ldr	r1, [r1, #4]
   17f94:	ldr	r2, [sp, #40]	; 0x28
   17f98:	ldr	r3, [sp, #44]	; 0x2c
   17f9c:	str	r7, [sp]
   17fa0:	stmib	sp, {r1, lr}
   17fa4:	mov	r1, ip
   17fa8:	ldr	r7, [sp, #16]
   17fac:	blx	r7
   17fb0:	cmp	r0, #0
   17fb4:	ldr	r1, [sp, #24]
   17fb8:	mov	r7, #0
   17fbc:	mov	lr, r4
   17fc0:	ldr	r4, [sp, #32]
   17fc4:	ldr	ip, [sp, #28]
   17fc8:	bne	1812c <sav_process_row+0x2e0>
   17fcc:	ldr	r0, [r5, #48]	; 0x30
   17fd0:	add	ip, r0, ip
   17fd4:	mov	r3, r6
   17fd8:	add	r3, r6, #1
   17fdc:	b	180fc <sav_process_row+0x2b0>
   17fe0:	ldr	r7, [sp, #36]	; 0x24
   17fe4:	ldr	r2, [r7, r9]!
   17fe8:	str	lr, [sp, #28]
   17fec:	str	r4, [sp, #32]
   17ff0:	mov	lr, ip
   17ff4:	ldr	ip, [r7, #4]
   17ff8:	ldr	r7, [r8, #376]	; 0x178
   17ffc:	str	r2, [r7, sl]!
   18000:	str	ip, [r7, #4]
   18004:	mov	ip, lr
   18008:	ldr	r4, [sp, #32]
   1800c:	ldr	lr, [sp, #28]
   18010:	mov	r7, #0
   18014:	ldr	r0, [r0, #16]
   18018:	add	r4, r4, #1
   1801c:	cmp	r4, r0
   18020:	bne	1803c <sav_process_row+0x1f0>
   18024:	ldr	r0, [r5, #48]	; 0x30
   18028:	add	lr, lr, #1
   1802c:	cmp	lr, r0
   18030:	sublt	r3, r3, #1
   18034:	add	r6, r6, #1
   18038:	mov	r4, #0
   1803c:	ldr	r0, [r5, #48]	; 0x30
   18040:	cmp	lr, r0
   18044:	bne	180f4 <sav_process_row+0x2a8>
   18048:	ldr	r0, [r5, #8]
   1804c:	ldr	r2, [r8, #52]	; 0x34
   18050:	ldr	r0, [r2, r0, lsl #2]
   18054:	ldr	r0, [r0, #2144]	; 0x860
   18058:	cmp	r0, #0
   1805c:	bne	180e0 <sav_process_row+0x294>
   18060:	mov	sl, ip
   18064:	ldr	r7, [r8, #336]	; 0x150
   18068:	ldr	r2, [r8, #376]	; 0x178
   1806c:	ldr	r0, [r8, #384]	; 0x180
   18070:	ldr	r1, [r8, #388]	; 0x184
   18074:	str	r7, [sp]
   18078:	bl	4cbc <readstat_convert@plt>
   1807c:	cmp	r0, #0
   18080:	bne	18118 <sav_process_row+0x2cc>
   18084:	ldr	r2, [r8, #384]	; 0x180
   18088:	str	r2, [sp, #40]	; 0x28
   1808c:	ldr	r1, [r5, #8]
   18090:	ldr	r0, [r8, #16]
   18094:	str	r0, [sp, #32]
   18098:	ldr	lr, [r8, #40]	; 0x28
   1809c:	ldr	r3, [r8, #52]	; 0x34
   180a0:	ldr	r0, [r8, #364]	; 0x16c
   180a4:	ldr	ip, [r3, r1, lsl #2]
   180a8:	ldr	r1, [sp, #20]
   180ac:	ldr	r7, [r1]
   180b0:	ldr	r1, [r1, #4]
   180b4:	ldr	r3, [sp, #44]	; 0x2c
   180b8:	str	r7, [sp]
   180bc:	stmib	sp, {r1, lr}
   180c0:	mov	r1, ip
   180c4:	ldr	r7, [sp, #32]
   180c8:	blx	r7
   180cc:	cmp	r0, #0
   180d0:	ldr	r1, [sp, #24]
   180d4:	mov	r7, #0
   180d8:	mov	ip, sl
   180dc:	bne	1812c <sav_process_row+0x2e0>
   180e0:	ldr	r0, [r5, #48]	; 0x30
   180e4:	add	ip, r0, ip
   180e8:	mov	sl, #0
   180ec:	mov	lr, #0
   180f0:	b	180f8 <sav_process_row+0x2ac>
   180f4:	mov	sl, r3
   180f8:	mov	r3, r6
   180fc:	add	r9, r9, #8
   18100:	cmp	r9, r1
   18104:	bcc	17eac <sav_process_row+0x60>
   18108:	ldr	r0, [r8, #364]	; 0x16c
   1810c:	add	r0, r0, #1
   18110:	str	r0, [r8, #364]	; 0x16c
   18114:	mov	r0, #0
   18118:	sub	sp, fp, #28
   1811c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18120:	mov	r0, #5
   18124:	sub	sp, fp, #28
   18128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1812c:	mov	r0, #4
   18130:	sub	sp, fp, #28
   18134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018138 <sav_read_uncompressed_data>:
   18138:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1813c:	add	fp, sp, #24
   18140:	mov	r5, r0
   18144:	ldr	r4, [r0, #36]	; 0x24
   18148:	ldr	r0, [r0, #344]	; 0x158
   1814c:	lsl	r6, r0, #3
   18150:	mov	r0, r6
   18154:	bl	4cb0 <readstat_malloc@plt>
   18158:	mov	r8, r0
   1815c:	ldr	r0, [r5, #360]	; 0x168
   18160:	cmp	r0, #0
   18164:	beq	1818c <sav_read_uncompressed_data+0x54>
   18168:	mul	r0, r0, r6
   1816c:	ldr	r3, [r4, #8]
   18170:	ldr	r2, [r4, #20]
   18174:	mov	r1, #1
   18178:	blx	r3
   1817c:	cmn	r0, #1
   18180:	beq	18214 <sav_read_uncompressed_data+0xdc>
   18184:	mov	r0, #0
   18188:	str	r0, [r5, #360]	; 0x168
   1818c:	ldr	r0, [r5, #356]	; 0x164
   18190:	cmn	r0, #1
   18194:	beq	181a4 <sav_read_uncompressed_data+0x6c>
   18198:	ldr	r1, [r5, #364]	; 0x16c
   1819c:	cmp	r1, r0
   181a0:	bge	18204 <sav_read_uncompressed_data+0xcc>
   181a4:	mov	r0, r5
   181a8:	bl	15d08 <sav_update_progress>
   181ac:	cmp	r0, #0
   181b0:	bne	181e8 <sav_read_uncompressed_data+0xb0>
   181b4:	ldr	r3, [r4, #12]
   181b8:	ldr	r2, [r4, #20]
   181bc:	mov	r0, r8
   181c0:	mov	r1, r6
   181c4:	blx	r3
   181c8:	cmp	r0, r6
   181cc:	bne	18204 <sav_read_uncompressed_data+0xcc>
   181d0:	mov	r0, r8
   181d4:	mov	r1, r6
   181d8:	mov	r2, r5
   181dc:	bl	17e4c <sav_process_row>
   181e0:	cmp	r0, #0
   181e4:	beq	1818c <sav_read_uncompressed_data+0x54>
   181e8:	mov	r7, r0
   181ec:	cmp	r8, #0
   181f0:	beq	181fc <sav_read_uncompressed_data+0xc4>
   181f4:	mov	r0, r8
   181f8:	bl	4938 <free@plt>
   181fc:	mov	r0, r7
   18200:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18204:	mov	r7, #0
   18208:	cmp	r8, #0
   1820c:	bne	181f4 <sav_read_uncompressed_data+0xbc>
   18210:	b	181fc <sav_read_uncompressed_data+0xc4>
   18214:	mov	r7, #15
   18218:	cmp	r8, #0
   1821c:	bne	181f4 <sav_read_uncompressed_data+0xbc>
   18220:	b	181fc <sav_read_uncompressed_data+0xc4>

00018224 <readstat_begin_writing_sav>:
   18224:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18228:	add	fp, sp, #24
   1822c:	ldr	r3, [pc, #284]	; 18350 <readstat_begin_writing_sav+0x12c>
   18230:	add	r3, pc, r3
   18234:	str	r3, [r0, #276]	; 0x114
   18238:	ldr	ip, [pc, #276]	; 18354 <readstat_begin_writing_sav+0x130>
   1823c:	add	ip, pc, ip
   18240:	ldr	r3, [pc, #272]	; 18358 <readstat_begin_writing_sav+0x134>
   18244:	add	r3, pc, r3
   18248:	str	r3, [r0, #264]	; 0x108
   1824c:	str	ip, [r0, #268]	; 0x10c
   18250:	ldr	ip, [pc, #260]	; 1835c <readstat_begin_writing_sav+0x138>
   18254:	add	ip, pc, ip
   18258:	ldr	lr, [pc, #256]	; 18360 <readstat_begin_writing_sav+0x13c>
   1825c:	add	lr, pc, lr
   18260:	ldr	r8, [pc, #252]	; 18364 <readstat_begin_writing_sav+0x140>
   18264:	add	r8, pc, r8
   18268:	ldr	r4, [pc, #248]	; 18368 <readstat_begin_writing_sav+0x144>
   1826c:	add	r4, pc, r4
   18270:	ldr	r5, [pc, #244]	; 1836c <readstat_begin_writing_sav+0x148>
   18274:	add	r5, pc, r5
   18278:	ldr	r6, [pc, #240]	; 18370 <readstat_begin_writing_sav+0x14c>
   1827c:	add	r6, pc, r6
   18280:	ldr	r7, [pc, #236]	; 18374 <readstat_begin_writing_sav+0x150>
   18284:	add	r7, pc, r7
   18288:	ldr	r3, [pc, #232]	; 18378 <readstat_begin_writing_sav+0x154>
   1828c:	add	r3, pc, r3
   18290:	str	r3, [r0, #228]	; 0xe4
   18294:	str	r7, [r0, #232]	; 0xe8
   18298:	str	r6, [r0, #236]	; 0xec
   1829c:	str	r5, [r0, #240]	; 0xf0
   182a0:	add	r3, r0, #244	; 0xf4
   182a4:	stm	r3, {r4, r8, lr}
   182a8:	str	ip, [r0, #256]	; 0x100
   182ac:	ldr	r3, [pc, #200]	; 1837c <readstat_begin_writing_sav+0x158>
   182b0:	add	r3, pc, r3
   182b4:	str	r3, [r0, #292]	; 0x124
   182b8:	ldr	r3, [r0, #8]
   182bc:	cmp	r3, #0
   182c0:	beq	182d4 <readstat_begin_writing_sav+0xb0>
   182c4:	cmp	r3, #3
   182c8:	moveq	r3, #2
   182cc:	streq	r3, [r0, #16]
   182d0:	b	182e8 <readstat_begin_writing_sav+0xc4>
   182d4:	ldr	r3, [r0, #16]
   182d8:	mov	r7, #2
   182dc:	cmp	r3, #2
   182e0:	movweq	r7, #3
   182e4:	str	r7, [r0, #8]
   182e8:	ldr	r3, [r0, #16]
   182ec:	cmp	r3, #0
   182f0:	beq	18340 <readstat_begin_writing_sav+0x11c>
   182f4:	cmp	r3, #2
   182f8:	beq	1831c <readstat_begin_writing_sav+0xf8>
   182fc:	cmp	r3, #1
   18300:	bne	18348 <readstat_begin_writing_sav+0x124>
   18304:	ldr	r3, [pc, #116]	; 18380 <readstat_begin_writing_sav+0x15c>
   18308:	add	r3, pc, r3
   1830c:	str	r3, [r0, #280]	; 0x118
   18310:	ldr	r3, [pc, #108]	; 18384 <readstat_begin_writing_sav+0x160>
   18314:	ldr	r3, [pc, r3]
   18318:	b	1833c <readstat_begin_writing_sav+0x118>
   1831c:	ldr	r3, [pc, #100]	; 18388 <readstat_begin_writing_sav+0x164>
   18320:	ldr	r3, [pc, r3]
   18324:	ldr	r7, [pc, #96]	; 1838c <readstat_begin_writing_sav+0x168>
   18328:	ldr	r7, [pc, r7]
   1832c:	str	r7, [r0, #280]	; 0x118
   18330:	str	r3, [r0, #284]	; 0x11c
   18334:	ldr	r3, [pc, #84]	; 18390 <readstat_begin_writing_sav+0x16c>
   18338:	ldr	r3, [pc, r3]
   1833c:	str	r3, [r0, #288]	; 0x120
   18340:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   18344:	b	49d4 <readstat_begin_writing_file@plt>
   18348:	mov	r0, #6
   1834c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18350:	.word	0x00000348
   18354:	.word	0x00000324
   18358:	.word	0x00000300
   1835c:	.word	0x00000258
   18360:	.word	0x00000244
   18364:	.word	0x0000022c
   18368:	.word	0x00000210
   1836c:	.word	0x000001f4
   18370:	.word	0x000001d8
   18374:	.word	0x00000190
   18378:	.word	0x0000012c
   1837c:	.word	0x000000dc
   18380:	.word	0x0000040c
   18384:	.word	0x0002cfc4
   18388:	.word	0x0002cfcc
   1838c:	.word	0x0002cfbc
   18390:	.word	0x0002cf9c

00018394 <sav_metadata_ok>:
   18394:	ldr	r1, [r0, #8]
   18398:	cmp	r1, #2
   1839c:	bne	183b0 <sav_metadata_ok+0x1c>
   183a0:	ldr	r0, [r0, #16]
   183a4:	cmp	r0, #2
   183a8:	moveq	r0, #6
   183ac:	bxeq	lr
   183b0:	bic	r0, r1, #1
   183b4:	subs	r0, r0, #2
   183b8:	movwne	r0, #24
   183bc:	bx	lr

000183c0 <sav_variable_width>:
   183c0:	push	{r4, sl, fp, lr}
   183c4:	add	fp, sp, #8
   183c8:	mov	r4, r1
   183cc:	mov	r1, r0
   183d0:	mov	r0, #8
   183d4:	cmp	r1, #0
   183d8:	popne	{r4, sl, fp, pc}
   183dc:	cmp	r4, #256	; 0x100
   183e0:	bcc	1840c <sav_variable_width+0x4c>
   183e4:	mov	r0, #0
   183e8:	mov	r1, r4
   183ec:	bl	1874c <sav_variable_segments>
   183f0:	sub	r0, r0, #1
   183f4:	sub	r1, r0, r0, lsl #6
   183f8:	add	r1, r4, r1, lsl #2
   183fc:	add	r1, r1, #7
   18400:	bic	r1, r1, #7
   18404:	add	r0, r1, r0, lsl #8
   18408:	pop	{r4, sl, fp, pc}
   1840c:	cmp	r4, #0
   18410:	addne	r0, r4, #7
   18414:	bicne	r0, r0, #7
   18418:	pop	{r4, sl, fp, pc}

0001841c <sav_variable_ok>:
   1841c:	push	{r4, sl, fp, lr}
   18420:	add	fp, sp, #8
   18424:	add	r4, r0, #8
   18428:	mov	r0, r4
   1842c:	bl	4c8c <strlen@plt>
   18430:	bl	18780 <sav_validate_name_length>
   18434:	cmp	r0, #0
   18438:	popne	{r4, sl, fp, pc}
   1843c:	mov	r0, r4
   18440:	bl	1879c <sav_validate_name_unreserved>
   18444:	cmp	r0, #0
   18448:	beq	18450 <sav_variable_ok+0x34>
   1844c:	pop	{r4, sl, fp, pc}
   18450:	mov	r0, r4
   18454:	pop	{r4, sl, fp, lr}
   18458:	b	18924 <sav_validate_name_chars>

0001845c <sav_write_int8>:
   1845c:	vmov	s0, r2
   18460:	vcvt.f64.s32	d16, s0
   18464:	vst1.8	{d16}, [r0]
   18468:	mov	r0, #0
   1846c:	bx	lr

00018470 <sav_write_int16>:
   18470:	vmov	s0, r2
   18474:	vcvt.f64.s32	d16, s0
   18478:	vst1.8	{d16}, [r0]
   1847c:	mov	r0, #0
   18480:	bx	lr

00018484 <sav_write_int32>:
   18484:	vmov	s0, r2
   18488:	vcvt.f64.s32	d16, s0
   1848c:	vst1.8	{d16}, [r0]
   18490:	mov	r0, #0
   18494:	bx	lr

00018498 <sav_write_float>:
   18498:	vcvt.f64.f32	d16, s0
   1849c:	vst1.8	{d16}, [r0]
   184a0:	mov	r0, #0
   184a4:	bx	lr

000184a8 <sav_write_double>:
   184a8:	vst1.8	{d0}, [r0]
   184ac:	mov	r0, #0
   184b0:	bx	lr

000184b4 <sav_write_string>:
   184b4:	push	{r4, r5, r6, r7, fp, lr}
   184b8:	add	fp, sp, #16
   184bc:	mov	r4, r2
   184c0:	mov	r7, r1
   184c4:	mov	r5, r0
   184c8:	ldr	r2, [r1, #1596]	; 0x63c
   184cc:	mov	r1, #32
   184d0:	bl	4d28 <memset@plt>
   184d4:	mov	r0, #0
   184d8:	cmp	r4, #0
   184dc:	beq	18548 <sav_write_string+0x94>
   184e0:	ldrb	r1, [r4]
   184e4:	cmp	r1, #0
   184e8:	beq	18548 <sav_write_string+0x94>
   184ec:	mov	r0, r4
   184f0:	bl	4c8c <strlen@plt>
   184f4:	mov	r6, r0
   184f8:	ldr	r1, [r7, #1596]	; 0x63c
   184fc:	mov	r0, #22
   18500:	cmp	r6, r1
   18504:	bhi	18548 <sav_write_string+0x94>
   18508:	cmp	r6, #256	; 0x100
   1850c:	bcc	18534 <sav_write_string+0x80>
   18510:	mov	r0, r5
   18514:	mov	r1, r4
   18518:	mov	r2, #255	; 0xff
   1851c:	bl	4998 <memcpy@plt>
   18520:	sub	r6, r6, #255	; 0xff
   18524:	add	r5, r5, #256	; 0x100
   18528:	add	r4, r4, #255	; 0xff
   1852c:	cmp	r6, #255	; 0xff
   18530:	bhi	18510 <sav_write_string+0x5c>
   18534:	mov	r0, r5
   18538:	mov	r1, r4
   1853c:	mov	r2, r6
   18540:	bl	4998 <memcpy@plt>
   18544:	mov	r0, #0
   18548:	pop	{r4, r5, r6, r7, fp, pc}

0001854c <sav_write_missing_string>:
   1854c:	push	{fp, lr}
   18550:	mov	fp, sp
   18554:	ldr	r2, [r1, #1596]	; 0x63c
   18558:	mov	r1, #32
   1855c:	bl	4d28 <memset@plt>
   18560:	mov	r0, #0
   18564:	pop	{fp, pc}

00018568 <sav_write_missing_number>:
   18568:	mvn	r1, #1048576	; 0x100000
   1856c:	str	r1, [r0, #4]
   18570:	mvn	r1, #0
   18574:	str	r1, [r0]
   18578:	mov	r0, #0
   1857c:	bx	lr

00018580 <sav_begin_data>:
   18580:	push	{r4, r5, r6, sl, fp, lr}
   18584:	add	fp, sp, #16
   18588:	mov	r4, r0
   1858c:	ldr	r0, [r0, #308]	; 0x134
   18590:	cmp	r0, #0
   18594:	beq	186b0 <sav_begin_data+0x130>
   18598:	mov	r0, r4
   1859c:	bl	18a54 <sav_varnames_init>
   185a0:	mov	r5, r0
   185a4:	mov	r0, r4
   185a8:	bl	18bac <sav_emit_header>
   185ac:	mov	r6, r0
   185b0:	cmp	r0, #0
   185b4:	bne	186a0 <sav_begin_data+0x120>
   185b8:	mov	r0, r4
   185bc:	mov	r1, r5
   185c0:	bl	18eb0 <sav_emit_variable_records>
   185c4:	mov	r6, r0
   185c8:	cmp	r0, #0
   185cc:	bne	186a0 <sav_begin_data+0x120>
   185d0:	mov	r0, r4
   185d4:	bl	18f10 <sav_emit_value_label_records>
   185d8:	mov	r6, r0
   185dc:	cmp	r0, #0
   185e0:	bne	186a0 <sav_begin_data+0x120>
   185e4:	mov	r0, r4
   185e8:	bl	191b4 <sav_emit_document_record>
   185ec:	mov	r6, r0
   185f0:	cmp	r0, #0
   185f4:	bne	186a0 <sav_begin_data+0x120>
   185f8:	mov	r0, r4
   185fc:	bl	19298 <sav_emit_integer_info_record>
   18600:	mov	r6, r0
   18604:	cmp	r0, #0
   18608:	bne	186a0 <sav_begin_data+0x120>
   1860c:	mov	r0, r4
   18610:	bl	1933c <sav_emit_floating_point_info_record>
   18614:	mov	r6, r0
   18618:	cmp	r0, #0
   1861c:	bne	186a0 <sav_begin_data+0x120>
   18620:	mov	r0, r4
   18624:	bl	193d0 <sav_emit_variable_display_record>
   18628:	mov	r6, r0
   1862c:	cmp	r0, #0
   18630:	bne	186a0 <sav_begin_data+0x120>
   18634:	mov	r0, r4
   18638:	mov	r1, r5
   1863c:	bl	19570 <sav_emit_long_var_name_record>
   18640:	mov	r6, r0
   18644:	cmp	r0, #0
   18648:	bne	186a0 <sav_begin_data+0x120>
   1864c:	mov	r0, r4
   18650:	mov	r1, r5
   18654:	bl	1979c <sav_emit_very_long_string_record>
   18658:	mov	r6, r0
   1865c:	cmp	r0, #0
   18660:	bne	186a0 <sav_begin_data+0x120>
   18664:	mov	r0, r4
   18668:	bl	1999c <sav_emit_long_string_value_labels_record>
   1866c:	mov	r6, r0
   18670:	cmp	r0, #0
   18674:	bne	186a0 <sav_begin_data+0x120>
   18678:	mov	r0, r4
   1867c:	bl	19d38 <sav_emit_long_string_missing_values_record>
   18680:	mov	r6, r0
   18684:	cmp	r0, #0
   18688:	bne	186a0 <sav_begin_data+0x120>
   1868c:	mov	r0, r4
   18690:	bl	1a10c <sav_emit_number_of_cases_record>
   18694:	mov	r6, r0
   18698:	cmp	r0, #0
   1869c:	beq	186bc <sav_begin_data+0x13c>
   186a0:	mov	r0, r5
   186a4:	bl	4938 <free@plt>
   186a8:	mov	r0, r6
   186ac:	pop	{r4, r5, r6, sl, fp, pc}
   186b0:	mov	r6, #14
   186b4:	mov	r0, r6
   186b8:	pop	{r4, r5, r6, sl, fp, pc}
   186bc:	mov	r0, r4
   186c0:	bl	1a1a0 <sav_emit_termination_record>
   186c4:	mov	r6, r0
   186c8:	mov	r0, r5
   186cc:	bl	4938 <free@plt>
   186d0:	cmp	r6, #0
   186d4:	bne	18714 <sav_begin_data+0x194>
   186d8:	ldr	r0, [r4, #76]	; 0x4c
   186dc:	bl	4a40 <sav_compressed_row_bound@plt>
   186e0:	ldr	r1, [r4, #16]
   186e4:	cmp	r1, #2
   186e8:	beq	18700 <sav_begin_data+0x180>
   186ec:	mov	r6, #0
   186f0:	cmp	r1, #1
   186f4:	bne	18714 <sav_begin_data+0x194>
   186f8:	bl	4cb0 <readstat_malloc@plt>
   186fc:	b	18710 <sav_begin_data+0x190>
   18700:	ldr	r2, [r4, #4]
   18704:	mov	r6, #0
   18708:	mov	r3, #0
   1870c:	bl	4b24 <zsav_ctx_init@plt>
   18710:	str	r0, [r4, #300]	; 0x12c
   18714:	mov	r0, r6
   18718:	pop	{r4, r5, r6, sl, fp, pc}

0001871c <sav_write_compressed_row>:
   1871c:	push	{r4, r5, fp, lr}
   18720:	add	fp, sp, #8
   18724:	mov	r4, r0
   18728:	ldr	r5, [r0, #300]	; 0x12c
   1872c:	mov	r0, r5
   18730:	mov	r3, r4
   18734:	bl	4efc <sav_compress_row@plt>
   18738:	mov	r2, r0
   1873c:	mov	r0, r4
   18740:	mov	r1, r5
   18744:	pop	{r4, r5, fp, lr}
   18748:	b	4ef0 <readstat_write_bytes@plt>

0001874c <sav_variable_segments>:
   1874c:	mov	r2, r0
   18750:	mov	r0, #1
   18754:	cmp	r2, #0
   18758:	bne	1877c <sav_variable_segments+0x30>
   1875c:	cmp	r1, #256	; 0x100
   18760:	bxcc	lr
   18764:	add	r0, r1, #251	; 0xfb
   18768:	lsr	r0, r0, #2
   1876c:	movw	r1, #2081	; 0x821
   18770:	movt	r1, #8322	; 0x2082
   18774:	umull	r0, r1, r0, r1
   18778:	lsr	r0, r1, #3
   1877c:	bx	lr

00018780 <sav_validate_name_length>:
   18780:	mov	r1, #0
   18784:	cmp	r0, #0
   18788:	movweq	r1, #38	; 0x26
   1878c:	cmp	r0, #64	; 0x40
   18790:	movwhi	r1, #28
   18794:	mov	r0, r1
   18798:	bx	lr

0001879c <sav_validate_name_unreserved>:
   1879c:	push	{r4, sl, fp, lr}
   187a0:	add	fp, sp, #8
   187a4:	mov	r4, r0
   187a8:	ldr	r1, [pc, #320]	; 188f0 <sav_validate_name_unreserved+0x154>
   187ac:	add	r1, pc, r1
   187b0:	bl	4878 <strcmp@plt>
   187b4:	cmp	r0, #0
   187b8:	beq	188e8 <sav_validate_name_unreserved+0x14c>
   187bc:	ldr	r1, [pc, #304]	; 188f4 <sav_validate_name_unreserved+0x158>
   187c0:	add	r1, pc, r1
   187c4:	mov	r0, r4
   187c8:	bl	4878 <strcmp@plt>
   187cc:	cmp	r0, #0
   187d0:	beq	188e8 <sav_validate_name_unreserved+0x14c>
   187d4:	ldr	r1, [pc, #284]	; 188f8 <sav_validate_name_unreserved+0x15c>
   187d8:	add	r1, pc, r1
   187dc:	mov	r0, r4
   187e0:	bl	4878 <strcmp@plt>
   187e4:	cmp	r0, #0
   187e8:	beq	188e8 <sav_validate_name_unreserved+0x14c>
   187ec:	ldr	r1, [pc, #264]	; 188fc <sav_validate_name_unreserved+0x160>
   187f0:	add	r1, pc, r1
   187f4:	mov	r0, r4
   187f8:	bl	4878 <strcmp@plt>
   187fc:	cmp	r0, #0
   18800:	beq	188e8 <sav_validate_name_unreserved+0x14c>
   18804:	ldr	r1, [pc, #244]	; 18900 <sav_validate_name_unreserved+0x164>
   18808:	add	r1, pc, r1
   1880c:	mov	r0, r4
   18810:	bl	4878 <strcmp@plt>
   18814:	cmp	r0, #0
   18818:	beq	188e8 <sav_validate_name_unreserved+0x14c>
   1881c:	ldr	r1, [pc, #224]	; 18904 <sav_validate_name_unreserved+0x168>
   18820:	add	r1, pc, r1
   18824:	mov	r0, r4
   18828:	bl	4878 <strcmp@plt>
   1882c:	cmp	r0, #0
   18830:	beq	188e8 <sav_validate_name_unreserved+0x14c>
   18834:	ldr	r1, [pc, #204]	; 18908 <sav_validate_name_unreserved+0x16c>
   18838:	add	r1, pc, r1
   1883c:	mov	r0, r4
   18840:	bl	4878 <strcmp@plt>
   18844:	cmp	r0, #0
   18848:	beq	188e8 <sav_validate_name_unreserved+0x14c>
   1884c:	ldr	r1, [pc, #184]	; 1890c <sav_validate_name_unreserved+0x170>
   18850:	add	r1, pc, r1
   18854:	mov	r0, r4
   18858:	bl	4878 <strcmp@plt>
   1885c:	cmp	r0, #0
   18860:	beq	188e8 <sav_validate_name_unreserved+0x14c>
   18864:	ldr	r1, [pc, #164]	; 18910 <sav_validate_name_unreserved+0x174>
   18868:	add	r1, pc, r1
   1886c:	mov	r0, r4
   18870:	bl	4878 <strcmp@plt>
   18874:	cmp	r0, #0
   18878:	beq	188e8 <sav_validate_name_unreserved+0x14c>
   1887c:	ldr	r1, [pc, #144]	; 18914 <sav_validate_name_unreserved+0x178>
   18880:	add	r1, pc, r1
   18884:	mov	r0, r4
   18888:	bl	4878 <strcmp@plt>
   1888c:	cmp	r0, #0
   18890:	beq	188e8 <sav_validate_name_unreserved+0x14c>
   18894:	ldr	r1, [pc, #124]	; 18918 <sav_validate_name_unreserved+0x17c>
   18898:	add	r1, pc, r1
   1889c:	mov	r0, r4
   188a0:	bl	4878 <strcmp@plt>
   188a4:	cmp	r0, #0
   188a8:	beq	188e8 <sav_validate_name_unreserved+0x14c>
   188ac:	ldr	r1, [pc, #104]	; 1891c <sav_validate_name_unreserved+0x180>
   188b0:	add	r1, pc, r1
   188b4:	mov	r0, r4
   188b8:	bl	4878 <strcmp@plt>
   188bc:	cmp	r0, #0
   188c0:	beq	188e8 <sav_validate_name_unreserved+0x14c>
   188c4:	ldr	r1, [pc, #84]	; 18920 <sav_validate_name_unreserved+0x184>
   188c8:	add	r1, pc, r1
   188cc:	mov	r0, r4
   188d0:	bl	4878 <strcmp@plt>
   188d4:	mov	r1, #0
   188d8:	cmp	r0, #0
   188dc:	movweq	r1, #27
   188e0:	mov	r0, r1
   188e4:	pop	{r4, sl, fp, pc}
   188e8:	mov	r0, #27
   188ec:	pop	{r4, sl, fp, pc}
   188f0:	.word	0x0000e6bf
   188f4:	.word	0x0000e6af
   188f8:	.word	0x0000e69b
   188fc:	.word	0x0000e686
   18900:	.word	0x0000e671
   18904:	.word	0x0000e65c
   18908:	.word	0x0000e647
   1890c:	.word	0x0000e632
   18910:	.word	0x0000e61d
   18914:	.word	0x0000e608
   18918:	.word	0x0000e5f4
   1891c:	.word	0x0000e5df
   18920:	.word	0x0000e5ca

00018924 <sav_validate_name_chars>:
   18924:	push	{fp, lr}
   18928:	mov	fp, sp
   1892c:	mov	lr, r0
   18930:	mov	ip, #26
   18934:	b	1893c <sav_validate_name_chars+0x18>
   18938:	add	lr, lr, #1
   1893c:	ldrb	r3, [lr]
   18940:	sub	r1, r3, #32
   18944:	cmp	r1, #32
   18948:	bhi	189dc <sav_validate_name_chars+0xb8>
   1894c:	add	r2, pc, #4
   18950:	ldr	r1, [r2, r1, lsl #2]
   18954:	add	pc, r2, r1
   18958:	.word	0x000000b8
   1895c:	.word	0x00000094
   18960:	.word	0x00000094
   18964:	.word	0xffffffe0
   18968:	.word	0xffffffe0
   1896c:	.word	0x00000094
   18970:	.word	0x00000094
   18974:	.word	0x00000094
   18978:	.word	0x00000094
   1897c:	.word	0x00000094
   18980:	.word	0x00000094
   18984:	.word	0x00000094
   18988:	.word	0x00000094
   1898c:	.word	0x00000094
   18990:	.word	0xffffffe0
   18994:	.word	0x00000094
   18998:	.word	0x00000094
   1899c:	.word	0x00000094
   189a0:	.word	0x00000094
   189a4:	.word	0x00000094
   189a8:	.word	0x00000094
   189ac:	.word	0x00000094
   189b0:	.word	0x00000094
   189b4:	.word	0x00000094
   189b8:	.word	0x00000094
   189bc:	.word	0x00000094
   189c0:	.word	0x00000094
   189c4:	.word	0x00000094
   189c8:	.word	0x00000094
   189cc:	.word	0x00000094
   189d0:	.word	0x00000094
   189d4:	.word	0x00000094
   189d8:	.word	0xffffffe0
   189dc:	cmp	r3, #95	; 0x5f
   189e0:	beq	18938 <sav_validate_name_chars+0x14>
   189e4:	cmp	r3, #0
   189e8:	beq	18a18 <sav_validate_name_chars+0xf4>
   189ec:	sub	r1, r3, #48	; 0x30
   189f0:	uxtb	r1, r1
   189f4:	cmp	r1, #10
   189f8:	bcc	18938 <sav_validate_name_chars+0x14>
   189fc:	and	r1, r3, #223	; 0xdf
   18a00:	sub	r1, r1, #65	; 0x41
   18a04:	uxtb	r1, r1
   18a08:	cmp	r1, #25
   18a0c:	bls	18938 <sav_validate_name_chars+0x14>
   18a10:	mov	r0, ip
   18a14:	pop	{fp, pc}
   18a18:	ldrb	r0, [r0]
   18a1c:	orr	r1, r0, #64	; 0x40
   18a20:	cmp	r1, #64	; 0x40
   18a24:	bne	18a34 <sav_validate_name_chars+0x110>
   18a28:	mov	ip, #0
   18a2c:	mov	r0, ip
   18a30:	pop	{fp, pc}
   18a34:	and	r0, r0, #223	; 0xdf
   18a38:	sub	r0, r0, #65	; 0x41
   18a3c:	uxtb	r0, r0
   18a40:	mov	ip, #25
   18a44:	cmp	r0, #25
   18a48:	movls	ip, #0
   18a4c:	mov	r0, ip
   18a50:	pop	{fp, pc}

00018a54 <sav_varnames_init>:
   18a54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a58:	add	fp, sp, #28
   18a5c:	sub	sp, sp, #12
   18a60:	mov	r4, r0
   18a64:	ldr	r6, [r0, #28]
   18a68:	mov	r0, r6
   18a6c:	mov	r1, #15
   18a70:	bl	47d0 <calloc@plt>
   18a74:	str	r0, [sp, #4]
   18a78:	mov	r0, r6
   18a7c:	bl	4c14 <ck_hash_table_init@plt>
   18a80:	str	r0, [sp, #8]
   18a84:	ldr	r0, [r4, #28]
   18a88:	cmp	r0, #1
   18a8c:	blt	18b8c <sav_varnames_init+0x138>
   18a90:	ldr	r0, [sp, #4]
   18a94:	add	r5, r0, #1
   18a98:	mov	r7, #0
   18a9c:	b	18ab4 <sav_varnames_init+0x60>
   18aa0:	add	r5, r5, #15
   18aa4:	add	r7, r7, #1
   18aa8:	ldr	r0, [r4, #28]
   18aac:	cmp	r7, r0
   18ab0:	bge	18b8c <sav_varnames_init+0x138>
   18ab4:	mov	r6, r4
   18ab8:	mov	r0, r4
   18abc:	mov	r1, r7
   18ac0:	bl	4e18 <readstat_get_variable@plt>
   18ac4:	mov	sl, r0
   18ac8:	rsb	r0, r7, r7, lsl #4
   18acc:	ldr	r1, [sp, #4]
   18ad0:	add	r9, r1, r0
   18ad4:	add	r3, sl, #8
   18ad8:	mov	r0, r9
   18adc:	mov	r1, #9
   18ae0:	ldr	r2, [pc, #184]	; 18ba0 <sav_varnames_init+0x14c>
   18ae4:	add	r2, pc, r2
   18ae8:	bl	4d04 <snprintf@plt>
   18aec:	mov	r8, r9
   18af0:	ldrb	r4, [r8], #9
   18af4:	cmp	r4, #0
   18af8:	beq	18b24 <sav_varnames_init+0xd0>
   18afc:	bl	4c08 <__ctype_toupper_loc@plt>
   18b00:	mov	r1, r5
   18b04:	ldr	r2, [r0]
   18b08:	uxtb	r3, r4
   18b0c:	ldr	r2, [r2, r3, lsl #2]
   18b10:	strb	r2, [r1, #-1]
   18b14:	ldrb	r4, [r1]
   18b18:	add	r1, r1, #1
   18b1c:	cmp	r4, #0
   18b20:	bne	18b04 <sav_varnames_init+0xb0>
   18b24:	mov	r0, r9
   18b28:	ldr	r1, [sp, #8]
   18b2c:	bl	4a34 <ck_str_hash_lookup@plt>
   18b30:	cmp	r0, #0
   18b34:	beq	18b50 <sav_varnames_init+0xfc>
   18b38:	add	r3, r7, #1
   18b3c:	mov	r0, r9
   18b40:	mov	r1, #9
   18b44:	ldr	r2, [pc, #88]	; 18ba4 <sav_varnames_init+0x150>
   18b48:	add	r2, pc, r2
   18b4c:	bl	4d04 <snprintf@plt>
   18b50:	mov	r0, r9
   18b54:	mov	r1, sl
   18b58:	ldr	r2, [sp, #8]
   18b5c:	bl	4f8c <ck_str_hash_insert@plt>
   18b60:	ldr	r0, [sl, #1600]	; 0x640
   18b64:	cmp	r0, #256	; 0x100
   18b68:	mov	r4, r6
   18b6c:	bcc	18aa0 <sav_varnames_init+0x4c>
   18b70:	mov	r0, r8
   18b74:	mov	r1, #6
   18b78:	ldr	r2, [pc, #40]	; 18ba8 <sav_varnames_init+0x154>
   18b7c:	add	r2, pc, r2
   18b80:	mov	r3, r9
   18b84:	bl	4d04 <snprintf@plt>
   18b88:	b	18aa0 <sav_varnames_init+0x4c>
   18b8c:	ldr	r0, [sp, #8]
   18b90:	bl	4cc8 <ck_hash_table_free@plt>
   18b94:	ldr	r0, [sp, #4]
   18b98:	sub	sp, fp, #28
   18b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ba0:	.word	0x0000e3b3
   18ba4:	.word	0x0000e354
   18ba8:	.word	0x0000e326

00018bac <sav_emit_header>:
   18bac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18bb0:	add	fp, sp, #24
   18bb4:	sub	sp, sp, #272	; 0x110
   18bb8:	mov	r4, r0
   18bbc:	add	r8, sp, #96	; 0x60
   18bc0:	mov	r5, #0
   18bc4:	mov	r0, r8
   18bc8:	mov	r1, #0
   18bcc:	mov	r2, #176	; 0xb0
   18bd0:	bl	4d28 <memset@plt>
   18bd4:	ldr	r0, [r4, #20]
   18bd8:	str	r0, [sp, #92]	; 0x5c
   18bdc:	add	r0, sp, #92	; 0x5c
   18be0:	bl	4be4 <localtime@plt>
   18be4:	mov	r6, r0
   18be8:	ldr	r1, [pc, #684]	; 18e9c <sav_emit_header+0x2f0>
   18bec:	add	r1, pc, r1
   18bf0:	add	r0, r1, #16
   18bf4:	mov	r2, #32
   18bf8:	vld1.64	{d16-d17}, [r1], r2
   18bfc:	vld1.64	{d18-d19}, [r0]
   18c00:	add	r0, sp, #40	; 0x28
   18c04:	add	r3, r0, #16
   18c08:	vld1.64	{d20-d21}, [r1]
   18c0c:	vst1.64	{d18-d19}, [r3]
   18c10:	mov	r1, r0
   18c14:	vst1.64	{d16-d17}, [r1], r2
   18c18:	vst1.64	{d20-d21}, [r1]
   18c1c:	str	r5, [sp, #28]
   18c20:	str	r5, [sp, #24]
   18c24:	strh	r5, [sp, #32]
   18c28:	str	r5, [sp, #12]
   18c2c:	str	r5, [sp, #8]
   18c30:	strb	r5, [sp, #16]
   18c34:	cmp	r6, #0
   18c38:	beq	18ccc <sav_emit_header+0x120>
   18c3c:	movw	r1, #17956	; 0x4624
   18c40:	movt	r1, #12876	; 0x324c
   18c44:	str	r1, [sp, #96]	; 0x60
   18c48:	ldr	r1, [r4, #16]
   18c4c:	cmp	r1, #2
   18c50:	bne	18cd8 <sav_emit_header+0x12c>
   18c54:	mov	r1, #51	; 0x33
   18c58:	mov	r2, #43	; 0x2b
   18c5c:	ldr	r7, [pc, #572]	; 18ea0 <sav_emit_header+0x2f4>
   18c60:	add	r7, pc, r7
   18c64:	mov	r3, r7
   18c68:	vld1.32	{d16-d17}, [r3], r2
   18c6c:	strb	r1, [sp, #99]	; 0x63
   18c70:	orr	r1, r8, #4
   18c74:	add	r2, r7, #16
   18c78:	mov	r5, #59	; 0x3b
   18c7c:	vld1.64	{d18-d19}, [r2]
   18c80:	vst1.32	{d16-d17}, [r1], r5
   18c84:	add	r2, r7, #32
   18c88:	mov	r7, #32
   18c8c:	vld1.64	{d16-d17}, [r2]
   18c90:	vld1.8	{d20-d21}, [r3]
   18c94:	strb	r7, [r1]
   18c98:	add	r1, r8, #20
   18c9c:	vst1.32	{d18-d19}, [r1]
   18ca0:	add	r1, r8, #36	; 0x24
   18ca4:	vst1.32	{d16-d17}, [r1]
   18ca8:	add	r1, r8, #47	; 0x2f
   18cac:	vst1.8	{d20-d21}, [r1]
   18cb0:	mov	r2, #2
   18cb4:	str	r2, [sp, #160]	; 0xa0
   18cb8:	ldr	r1, [r4, #76]	; 0x4c
   18cbc:	lsr	r1, r1, #3
   18cc0:	str	r1, [sp, #164]	; 0xa4
   18cc4:	str	r2, [sp, #168]	; 0xa8
   18cc8:	b	18d4c <sav_emit_header+0x1a0>
   18ccc:	mov	r0, #39	; 0x27
   18cd0:	sub	sp, fp, #24
   18cd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18cd8:	mov	r2, #43	; 0x2b
   18cdc:	ldr	r7, [pc, #448]	; 18ea4 <sav_emit_header+0x2f8>
   18ce0:	add	r7, pc, r7
   18ce4:	mov	r3, r7
   18ce8:	vld1.32	{d16-d17}, [r3], r2
   18cec:	orr	r2, r8, #4
   18cf0:	add	r5, r7, #16
   18cf4:	mov	ip, #32
   18cf8:	mov	lr, #59	; 0x3b
   18cfc:	vld1.64	{d18-d19}, [r5]
   18d00:	vst1.32	{d16-d17}, [r2], lr
   18d04:	add	r7, r7, #32
   18d08:	vld1.64	{d16-d17}, [r7]
   18d0c:	vld1.8	{d20-d21}, [r3]
   18d10:	strb	ip, [r2]
   18d14:	add	r2, r8, #20
   18d18:	vst1.32	{d18-d19}, [r2]
   18d1c:	add	r2, r8, #36	; 0x24
   18d20:	vst1.32	{d16-d17}, [r2]
   18d24:	add	r2, r8, #47	; 0x2f
   18d28:	vst1.8	{d20-d21}, [r2]
   18d2c:	mov	r2, #2
   18d30:	str	r2, [sp, #160]	; 0xa0
   18d34:	ldr	r2, [r4, #76]	; 0x4c
   18d38:	lsr	r2, r2, #3
   18d3c:	str	r2, [sp, #164]	; 0xa4
   18d40:	mov	r2, #1
   18d44:	cmp	r1, #1
   18d48:	streq	r2, [sp, #168]	; 0xa8
   18d4c:	ldr	r2, [r4, #224]	; 0xe0
   18d50:	mov	r1, #0
   18d54:	cmp	r2, #0
   18d58:	mov	r3, #0
   18d5c:	beq	18d74 <sav_emit_header+0x1c8>
   18d60:	ldr	r2, [r2, #1592]	; 0x638
   18d64:	asr	r3, r2, #31
   18d68:	add	r2, r2, r3, lsr #29
   18d6c:	mov	r3, #1
   18d70:	add	r3, r3, r2, asr #3
   18d74:	str	r3, [sp, #172]	; 0xac
   18d78:	ldr	r2, [r4, #80]	; 0x50
   18d7c:	movw	r3, #0
   18d80:	movt	r3, #16473	; 0x4059
   18d84:	str	r3, [sp, #184]	; 0xb8
   18d88:	str	r1, [sp, #180]	; 0xb4
   18d8c:	str	r2, [sp, #176]	; 0xb0
   18d90:	add	r3, r6, #12
   18d94:	ldm	r3, {r1, r2, r3}
   18d98:	add	r0, r0, r2, lsl #2
   18d9c:	movw	r7, #34079	; 0x851f
   18da0:	movt	r7, #20971	; 0x51eb
   18da4:	umull	r2, r5, r3, r7
   18da8:	lsr	r2, r5, #5
   18dac:	mov	r5, #100	; 0x64
   18db0:	mls	r2, r2, r5, r3
   18db4:	stm	sp, {r0, r2}
   18db8:	umull	r0, r2, r1, r7
   18dbc:	lsr	r0, r2, #5
   18dc0:	mls	r3, r0, r5, r1
   18dc4:	add	r0, sp, #24
   18dc8:	ldr	r2, [pc, #216]	; 18ea8 <sav_emit_header+0x2fc>
   18dcc:	add	r2, pc, r2
   18dd0:	mov	r1, #10
   18dd4:	bl	4d04 <snprintf@plt>
   18dd8:	vldr	d16, [sp, #24]
   18ddc:	vstr	d16, [sp, #188]	; 0xbc
   18de0:	ldrb	r0, [sp, #32]
   18de4:	strb	r0, [sp, #196]	; 0xc4
   18de8:	ldm	r6, {r0, r1, r2}
   18dec:	umull	r3, r6, r0, r7
   18df0:	lsr	r3, r6, #5
   18df4:	mls	r0, r3, r5, r0
   18df8:	umull	r3, r6, r1, r7
   18dfc:	lsr	r3, r6, #5
   18e00:	mls	r1, r3, r5, r1
   18e04:	str	r1, [sp]
   18e08:	str	r0, [sp, #4]
   18e0c:	umull	r0, r1, r2, r7
   18e10:	lsr	r0, r1, #5
   18e14:	mls	r3, r0, r5, r2
   18e18:	add	r0, sp, #8
   18e1c:	ldr	r2, [pc, #136]	; 18eac <sav_emit_header+0x300>
   18e20:	add	r2, pc, r2
   18e24:	mov	r1, #9
   18e28:	bl	4d04 <snprintf@plt>
   18e2c:	ldr	r0, [sp, #8]
   18e30:	ldr	r1, [sp, #12]
   18e34:	str	r1, [sp, #201]	; 0xc9
   18e38:	str	r0, [sp, #197]	; 0xc5
   18e3c:	add	r5, r8, #109	; 0x6d
   18e40:	mov	r6, #64	; 0x40
   18e44:	mov	r0, r5
   18e48:	mov	r1, #32
   18e4c:	mov	r2, #64	; 0x40
   18e50:	bl	4d28 <memset@plt>
   18e54:	add	r7, r4, #88	; 0x58
   18e58:	mov	r0, r7
   18e5c:	bl	4c8c <strlen@plt>
   18e60:	ldrb	r1, [r4, #88]	; 0x58
   18e64:	cmp	r1, #0
   18e68:	beq	18e84 <sav_emit_header+0x2d8>
   18e6c:	cmp	r0, #64	; 0x40
   18e70:	movcc	r6, r0
   18e74:	mov	r0, r5
   18e78:	mov	r1, r7
   18e7c:	mov	r2, r6
   18e80:	bl	4998 <memcpy@plt>
   18e84:	add	r1, sp, #96	; 0x60
   18e88:	mov	r0, r4
   18e8c:	mov	r2, #176	; 0xb0
   18e90:	bl	4ef0 <readstat_write_bytes@plt>
   18e94:	sub	sp, fp, #24
   18e98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18e9c:	.word	0x0000e2d4
   18ea0:	.word	0x0000e290
   18ea4:	.word	0x0000e210
   18ea8:	.word	0x0000e0db
   18eac:	.word	0x0000d045

00018eb0 <sav_emit_variable_records>:
   18eb0:	push	{r4, r5, r6, sl, fp, lr}
   18eb4:	add	fp, sp, #16
   18eb8:	mov	r5, r0
   18ebc:	ldr	r0, [r0, #28]
   18ec0:	cmp	r0, #1
   18ec4:	blt	18f08 <sav_emit_variable_records+0x58>
   18ec8:	mov	r4, r1
   18ecc:	mov	r6, #0
   18ed0:	mov	r0, r5
   18ed4:	mov	r1, r6
   18ed8:	bl	4e18 <readstat_get_variable@plt>
   18edc:	mov	r1, r0
   18ee0:	mov	r0, r5
   18ee4:	mov	r2, r4
   18ee8:	bl	1a1d0 <sav_emit_full_variable_record>
   18eec:	cmp	r0, #0
   18ef0:	bne	18f0c <sav_emit_variable_records+0x5c>
   18ef4:	add	r6, r6, #1
   18ef8:	add	r4, r4, #15
   18efc:	ldr	r0, [r5, #28]
   18f00:	cmp	r6, r0
   18f04:	blt	18ed0 <sav_emit_variable_records+0x20>
   18f08:	mov	r0, #0
   18f0c:	pop	{r4, r5, r6, sl, fp, pc}

00018f10 <sav_emit_value_label_records>:
   18f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f14:	add	fp, sp, #28
   18f18:	sub	sp, sp, #164	; 0xa4
   18f1c:	mov	r7, r0
   18f20:	ldr	r0, [r0, #40]	; 0x28
   18f24:	cmp	r0, #1
   18f28:	blt	191a8 <sav_emit_value_label_records+0x298>
   18f2c:	mov	r4, #0
   18f30:	mov	r9, #3
   18f34:	mov	r1, #0
   18f38:	b	18f54 <sav_emit_value_label_records+0x44>
   18f3c:	mov	r7, r6
   18f40:	ldr	r1, [sp, #4]
   18f44:	add	r1, r1, #1
   18f48:	ldr	r0, [r7, #40]	; 0x28
   18f4c:	cmp	r1, r0
   18f50:	bge	191a8 <sav_emit_value_label_records+0x298>
   18f54:	mov	r0, r7
   18f58:	str	r1, [sp, #4]
   18f5c:	bl	4ec0 <readstat_get_label_set@plt>
   18f60:	mov	r8, r0
   18f64:	bl	1ad60 <readstat_label_set_needs_short_value_labels_record>
   18f68:	cmp	r0, #0
   18f6c:	beq	18f40 <sav_emit_value_label_records+0x30>
   18f70:	ldr	r5, [r8]
   18f74:	ldr	r0, [r8, #264]	; 0x108
   18f78:	str	r0, [fp, #-32]	; 0xffffffe0
   18f7c:	str	r4, [fp, #-36]	; 0xffffffdc
   18f80:	cmp	r0, #0
   18f84:	beq	18f40 <sav_emit_value_label_records+0x30>
   18f88:	str	r9, [fp, #-36]	; 0xffffffdc
   18f8c:	mov	r0, r7
   18f90:	sub	r1, fp, #36	; 0x24
   18f94:	mov	r2, #4
   18f98:	bl	4ef0 <readstat_write_bytes@plt>
   18f9c:	cmp	r0, #0
   18fa0:	bne	191a0 <sav_emit_value_label_records+0x290>
   18fa4:	mov	r0, r7
   18fa8:	sub	r1, fp, #32
   18fac:	mov	r2, #4
   18fb0:	bl	4ef0 <readstat_write_bytes@plt>
   18fb4:	cmp	r0, #0
   18fb8:	bne	191a0 <sav_emit_value_label_records+0x290>
   18fbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18fc0:	cmp	r0, #1
   18fc4:	blt	190e4 <sav_emit_value_label_records+0x1d4>
   18fc8:	mov	r9, #0
   18fcc:	mov	r0, r8
   18fd0:	mov	r1, r9
   18fd4:	bl	4f68 <readstat_get_value_label@plt>
   18fd8:	mov	sl, r0
   18fdc:	cmp	r5, #5
   18fe0:	beq	19028 <sav_emit_value_label_records+0x118>
   18fe4:	cmp	r5, #3
   18fe8:	beq	19030 <sav_emit_value_label_records+0x120>
   18fec:	cmp	r5, #0
   18ff0:	bne	1903c <sav_emit_value_label_records+0x12c>
   18ff4:	ldrd	r2, [sl, #16]
   18ff8:	movw	r0, #8224	; 0x2020
   18ffc:	movt	r0, #8224	; 0x2020
   19000:	str	r0, [fp, #-44]	; 0xffffffd4
   19004:	str	r0, [fp, #-48]	; 0xffffffd0
   19008:	cmp	r3, #8
   1900c:	mov	r0, #8
   19010:	movcs	r3, r0
   19014:	sub	r0, fp, #48	; 0x30
   19018:	mov	r1, r2
   1901c:	mov	r2, r3
   19020:	bl	4998 <memcpy@plt>
   19024:	b	1903c <sav_emit_value_label_records+0x12c>
   19028:	vldr	d16, [sl]
   1902c:	b	19038 <sav_emit_value_label_records+0x128>
   19030:	vldr	s0, [sl, #8]
   19034:	vcvt.f64.s32	d16, s0
   19038:	vstr	d16, [fp, #-48]	; 0xffffffd0
   1903c:	mov	r0, r7
   19040:	sub	r1, fp, #48	; 0x30
   19044:	mov	r2, #8
   19048:	bl	4ef0 <readstat_write_bytes@plt>
   1904c:	ldr	r1, [sl, #28]
   19050:	ldr	sl, [sl, #24]
   19054:	mov	r0, #120	; 0x78
   19058:	strb	r0, [fp, #-49]	; 0xffffffcf
   1905c:	cmp	r1, #119	; 0x77
   19060:	strbls	r1, [fp, #-49]	; 0xffffffcf
   19064:	mov	r0, r7
   19068:	sub	r1, fp, #49	; 0x31
   1906c:	mov	r2, #1
   19070:	bl	4ef0 <readstat_write_bytes@plt>
   19074:	cmp	r0, #0
   19078:	bne	191a0 <sav_emit_value_label_records+0x290>
   1907c:	mov	r6, r5
   19080:	add	r5, sp, #8
   19084:	mov	r0, r5
   19088:	mov	r1, #32
   1908c:	mov	r2, #128	; 0x80
   19090:	bl	4d28 <memset@plt>
   19094:	mov	r4, r7
   19098:	ldrb	r7, [fp, #-49]	; 0xffffffcf
   1909c:	mov	r0, r5
   190a0:	mov	r1, sl
   190a4:	mov	r2, r7
   190a8:	bl	4998 <memcpy@plt>
   190ac:	add	r0, r7, #8
   190b0:	mov	r7, r4
   190b4:	bic	r0, r0, #7
   190b8:	sub	r2, r0, #1
   190bc:	mov	r0, r4
   190c0:	mov	r1, r5
   190c4:	bl	4ef0 <readstat_write_bytes@plt>
   190c8:	cmp	r0, #0
   190cc:	bne	191a0 <sav_emit_value_label_records+0x290>
   190d0:	add	r9, r9, #1
   190d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   190d8:	cmp	r9, r0
   190dc:	mov	r5, r6
   190e0:	blt	18fcc <sav_emit_value_label_records+0xbc>
   190e4:	mov	r0, #4
   190e8:	str	r0, [fp, #-36]	; 0xffffffdc
   190ec:	mov	r0, r8
   190f0:	bl	1ad80 <readstat_label_set_number_short_variables>
   190f4:	str	r0, [sp, #8]
   190f8:	mov	r0, r7
   190fc:	sub	r1, fp, #36	; 0x24
   19100:	mov	r2, #4
   19104:	bl	4ef0 <readstat_write_bytes@plt>
   19108:	cmp	r0, #0
   1910c:	bne	191a0 <sav_emit_value_label_records+0x290>
   19110:	mov	r0, r7
   19114:	add	r1, sp, #8
   19118:	mov	r2, #4
   1911c:	bl	4ef0 <readstat_write_bytes@plt>
   19120:	cmp	r0, #0
   19124:	bne	191a0 <sav_emit_value_label_records+0x290>
   19128:	mov	r6, r7
   1912c:	ldr	r0, [r8, #276]	; 0x114
   19130:	cmp	r0, #1
   19134:	mov	r4, #0
   19138:	mov	r9, #3
   1913c:	mov	r5, #1
   19140:	blt	18f3c <sav_emit_value_label_records+0x2c>
   19144:	mov	r7, #0
   19148:	b	1915c <sav_emit_value_label_records+0x24c>
   1914c:	ldr	r0, [r8, #276]	; 0x114
   19150:	add	r7, r7, #1
   19154:	cmp	r7, r0
   19158:	bge	18f3c <sav_emit_value_label_records+0x2c>
   1915c:	mov	r0, r8
   19160:	mov	r1, r7
   19164:	bl	4ee4 <readstat_get_label_set_variable@plt>
   19168:	ldr	r1, [r0, #1596]	; 0x63c
   1916c:	cmp	r1, #8
   19170:	bhi	1914c <sav_emit_value_label_records+0x23c>
   19174:	ldr	r0, [r0, #1592]	; 0x638
   19178:	asr	r1, r0, #31
   1917c:	add	r0, r0, r1, lsr #29
   19180:	add	r0, r5, r0, asr #3
   19184:	str	r0, [fp, #-48]	; 0xffffffd0
   19188:	mov	r0, r6
   1918c:	sub	r1, fp, #48	; 0x30
   19190:	mov	r2, #4
   19194:	bl	4ef0 <readstat_write_bytes@plt>
   19198:	cmp	r0, #0
   1919c:	beq	1914c <sav_emit_value_label_records+0x23c>
   191a0:	sub	sp, fp, #28
   191a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   191a8:	mov	r0, #0
   191ac:	sub	sp, fp, #28
   191b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000191b4 <sav_emit_document_record>:
   191b4:	push	{r4, r5, r6, r7, fp, lr}
   191b8:	add	fp, sp, #16
   191bc:	sub	sp, sp, #8
   191c0:	mov	r4, r0
   191c4:	mov	r0, #6
   191c8:	str	r0, [sp, #4]
   191cc:	ldr	r1, [r4, #52]	; 0x34
   191d0:	str	r1, [sp]
   191d4:	mov	r0, #0
   191d8:	cmp	r1, #0
   191dc:	beq	19210 <sav_emit_document_record+0x5c>
   191e0:	add	r1, sp, #4
   191e4:	mov	r0, r4
   191e8:	mov	r2, #4
   191ec:	bl	4ef0 <readstat_write_bytes@plt>
   191f0:	cmp	r0, #0
   191f4:	bne	19210 <sav_emit_document_record+0x5c>
   191f8:	mov	r1, sp
   191fc:	mov	r0, r4
   19200:	mov	r2, #4
   19204:	bl	4ef0 <readstat_write_bytes@plt>
   19208:	cmp	r0, #0
   1920c:	beq	19218 <sav_emit_document_record+0x64>
   19210:	sub	sp, fp, #16
   19214:	pop	{r4, r5, r6, r7, fp, pc}
   19218:	ldr	r0, [r4, #52]	; 0x34
   1921c:	cmp	r0, #1
   19220:	mov	r0, #0
   19224:	blt	19210 <sav_emit_document_record+0x5c>
   19228:	mov	r7, #0
   1922c:	ldr	r0, [r4, #48]	; 0x30
   19230:	ldr	r6, [r0, r7, lsl #2]
   19234:	mov	r0, r6
   19238:	bl	4c8c <strlen@plt>
   1923c:	cmp	r0, #80	; 0x50
   19240:	bhi	1928c <sav_emit_document_record+0xd8>
   19244:	mov	r5, r0
   19248:	mov	r0, r4
   1924c:	mov	r1, r6
   19250:	mov	r2, r5
   19254:	bl	4ef0 <readstat_write_bytes@plt>
   19258:	cmp	r0, #0
   1925c:	bne	19210 <sav_emit_document_record+0x5c>
   19260:	rsb	r1, r5, #80	; 0x50
   19264:	mov	r0, r4
   19268:	bl	4854 <readstat_write_spaces@plt>
   1926c:	cmp	r0, #0
   19270:	bne	19210 <sav_emit_document_record+0x5c>
   19274:	add	r7, r7, #1
   19278:	ldr	r1, [r4, #52]	; 0x34
   1927c:	mov	r0, #0
   19280:	cmp	r7, r1
   19284:	blt	1922c <sav_emit_document_record+0x78>
   19288:	b	19210 <sav_emit_document_record+0x5c>
   1928c:	mov	r0, #32
   19290:	sub	sp, fp, #16
   19294:	pop	{r4, r5, r6, r7, fp, pc}

00019298 <sav_emit_integer_info_record>:
   19298:	push	{r4, r5, fp, lr}
   1929c:	add	fp, sp, #8
   192a0:	sub	sp, sp, #48	; 0x30
   192a4:	mov	r4, r0
   192a8:	ldr	r0, [pc, #136]	; 19338 <sav_emit_integer_info_record+0xa0>
   192ac:	add	r0, pc, r0
   192b0:	vld1.64	{d16-d17}, [r0]
   192b4:	sub	r5, fp, #24
   192b8:	vst1.64	{d16-d17}, [r5]
   192bc:	mov	r0, #1
   192c0:	str	r0, [sp, #20]
   192c4:	str	r0, [sp, #16]
   192c8:	mvn	r0, #0
   192cc:	str	r0, [sp, #12]
   192d0:	mov	r0, #0
   192d4:	str	r0, [sp, #8]
   192d8:	str	r0, [sp, #4]
   192dc:	mov	r0, #20
   192e0:	str	r0, [sp]
   192e4:	bl	492c <machine_is_little_endian@plt>
   192e8:	movw	r1, #65001	; 0xfde9
   192ec:	str	r1, [sp, #28]
   192f0:	mov	r1, #2
   192f4:	cmp	r0, #0
   192f8:	movweq	r1, #1
   192fc:	str	r1, [sp, #24]
   19300:	mov	r0, r4
   19304:	mov	r1, r5
   19308:	mov	r2, #16
   1930c:	bl	4ef0 <readstat_write_bytes@plt>
   19310:	cmp	r0, #0
   19314:	beq	19320 <sav_emit_integer_info_record+0x88>
   19318:	sub	sp, fp, #8
   1931c:	pop	{r4, r5, fp, pc}
   19320:	mov	r1, sp
   19324:	mov	r0, r4
   19328:	mov	r2, #32
   1932c:	bl	4ef0 <readstat_write_bytes@plt>
   19330:	sub	sp, fp, #8
   19334:	pop	{r4, r5, fp, pc}
   19338:	.word	0x0000dc84

0001933c <sav_emit_floating_point_info_record>:
   1933c:	push	{r4, r5, r6, sl, fp, lr}
   19340:	add	fp, sp, #16
   19344:	sub	sp, sp, #40	; 0x28
   19348:	mov	r4, r0
   1934c:	ldr	r0, [pc, #120]	; 193cc <sav_emit_floating_point_info_record+0x90>
   19350:	add	r0, pc, r0
   19354:	vld1.64	{d16-d17}, [r0]
   19358:	add	r1, sp, #24
   1935c:	vst1.64	{d16-d17}, [r1]
   19360:	mov	r0, r4
   19364:	mov	r2, #16
   19368:	bl	4ef0 <readstat_write_bytes@plt>
   1936c:	cmp	r0, #0
   19370:	beq	1937c <sav_emit_floating_point_info_record+0x40>
   19374:	sub	sp, fp, #16
   19378:	pop	{r4, r5, r6, sl, fp, pc}
   1937c:	mov	r0, sp
   19380:	add	r1, r0, #8
   19384:	add	r0, r0, #16
   19388:	mvn	r5, #1048576	; 0x100000
   1938c:	str	r5, [sp, #4]
   19390:	mvn	r2, #1
   19394:	orr	r3, r2, #1
   19398:	str	r3, [sp]
   1939c:	movw	r3, #65535	; 0xffff
   193a0:	movt	r3, #32751	; 0x7fef
   193a4:	mvn	r6, #0
   193a8:	str	r6, [r1]
   193ac:	str	r3, [r1, #4]
   193b0:	stm	r0, {r2, r5}
   193b4:	mov	r1, sp
   193b8:	mov	r0, r4
   193bc:	mov	r2, #24
   193c0:	bl	4ef0 <readstat_write_bytes@plt>
   193c4:	sub	sp, fp, #16
   193c8:	pop	{r4, r5, r6, sl, fp, pc}
   193cc:	.word	0x0000dbf0

000193d0 <sav_emit_variable_display_record>:
   193d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   193d4:	add	fp, sp, #28
   193d8:	sub	sp, sp, #36	; 0x24
   193dc:	mov	r4, r0
   193e0:	ldr	r0, [pc, #388]	; 1956c <sav_emit_variable_display_record+0x19c>
   193e4:	add	r0, pc, r0
   193e8:	vld1.64	{d16-d17}, [r0]
   193ec:	add	r0, sp, #16
   193f0:	vst1.64	{d16-d17}, [r0]
   193f4:	ldr	r0, [r4, #28]
   193f8:	cmp	r0, #1
   193fc:	blt	19440 <sav_emit_variable_display_record+0x70>
   19400:	mov	r5, #0
   19404:	mov	r6, #0
   19408:	mov	r0, r4
   1940c:	mov	r1, r5
   19410:	bl	4e18 <readstat_get_variable@plt>
   19414:	ldr	r2, [r0]
   19418:	ldr	r1, [r0, #1600]	; 0x640
   1941c:	mov	r0, r2
   19420:	bl	1874c <sav_variable_segments>
   19424:	add	r6, r0, r6
   19428:	add	r5, r5, #1
   1942c:	ldr	r0, [r4, #28]
   19430:	cmp	r5, r0
   19434:	blt	19408 <sav_emit_variable_display_record+0x38>
   19438:	add	r0, r6, r6, lsl #1
   1943c:	b	19444 <sav_emit_variable_display_record+0x74>
   19440:	mov	r0, #0
   19444:	str	r0, [sp, #28]
   19448:	add	r1, sp, #16
   1944c:	mov	r0, r4
   19450:	mov	r2, #16
   19454:	bl	4ef0 <readstat_write_bytes@plt>
   19458:	mov	r6, r0
   1945c:	cmp	r0, #0
   19460:	beq	19470 <sav_emit_variable_display_record+0xa0>
   19464:	mov	r0, r6
   19468:	sub	sp, fp, #28
   1946c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19470:	ldr	r0, [r4, #28]
   19474:	mov	r6, #0
   19478:	cmp	r0, #1
   1947c:	blt	19464 <sav_emit_variable_display_record+0x94>
   19480:	add	sl, sp, #12
   19484:	add	r9, sp, #8
   19488:	mov	r7, #0
   1948c:	mov	r0, r4
   19490:	mov	r1, r7
   19494:	bl	4e18 <readstat_get_variable@plt>
   19498:	mov	r5, r0
   1949c:	bl	4dac <readstat_variable_get_measure@plt>
   194a0:	bl	4adc <spss_measure_from_readstat_measure@plt>
   194a4:	str	r0, [sp, #12]
   194a8:	mov	r0, r5
   194ac:	bl	4ca4 <readstat_variable_get_display_width@plt>
   194b0:	cmp	r0, #1
   194b4:	movwlt	r0, #8
   194b8:	str	r0, [sp, #8]
   194bc:	mov	r0, r5
   194c0:	bl	4ecc <readstat_variable_get_alignment@plt>
   194c4:	bl	48d8 <spss_alignment_from_readstat_alignment@plt>
   194c8:	str	r0, [sp, #4]
   194cc:	ldr	r0, [r5]
   194d0:	ldr	r1, [r5, #1600]	; 0x640
   194d4:	bl	1874c <sav_variable_segments>
   194d8:	mov	r5, r0
   194dc:	mov	r8, #1
   194e0:	cmp	r0, #0
   194e4:	beq	19550 <sav_emit_variable_display_record+0x180>
   194e8:	mov	r0, r4
   194ec:	mov	r1, sl
   194f0:	mov	r2, #4
   194f4:	bl	4ef0 <readstat_write_bytes@plt>
   194f8:	cmp	r0, #0
   194fc:	bne	19548 <sav_emit_variable_display_record+0x178>
   19500:	mov	r0, r4
   19504:	mov	r1, r9
   19508:	mov	r2, #4
   1950c:	bl	4ef0 <readstat_write_bytes@plt>
   19510:	cmp	r0, #0
   19514:	bne	19548 <sav_emit_variable_display_record+0x178>
   19518:	mov	r0, r4
   1951c:	add	r1, sp, #4
   19520:	mov	r2, #4
   19524:	bl	4ef0 <readstat_write_bytes@plt>
   19528:	cmp	r0, #0
   1952c:	bne	19548 <sav_emit_variable_display_record+0x178>
   19530:	subs	r5, r5, #1
   19534:	bne	194e8 <sav_emit_variable_display_record+0x118>
   19538:	mov	r6, #0
   1953c:	cmp	r8, #0
   19540:	bne	19558 <sav_emit_variable_display_record+0x188>
   19544:	b	19464 <sav_emit_variable_display_record+0x94>
   19548:	mov	r6, r0
   1954c:	mov	r8, #0
   19550:	cmp	r8, #0
   19554:	beq	19464 <sav_emit_variable_display_record+0x94>
   19558:	add	r7, r7, #1
   1955c:	ldr	r0, [r4, #28]
   19560:	cmp	r7, r0
   19564:	blt	1948c <sav_emit_variable_display_record+0xbc>
   19568:	b	19464 <sav_emit_variable_display_record+0x94>
   1956c:	.word	0x0000db6c

00019570 <sav_emit_long_var_name_record>:
   19570:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19574:	add	fp, sp, #28
   19578:	sub	sp, sp, #36	; 0x24
   1957c:	mov	r9, r1
   19580:	mov	sl, r0
   19584:	ldr	r0, [pc, #524]	; 19798 <sav_emit_long_var_name_record+0x228>
   19588:	add	r0, pc, r0
   1958c:	vld1.64	{d16-d17}, [r0]
   19590:	add	r0, sp, #16
   19594:	vst1.64	{d16-d17}, [r0]
   19598:	ldr	r0, [sl, #28]
   1959c:	cmp	r0, #1
   195a0:	blt	1961c <sav_emit_long_var_name_record+0xac>
   195a4:	mov	r6, #0
   195a8:	add	r8, sp, #7
   195ac:	mov	r4, r9
   195b0:	b	195c8 <sav_emit_long_var_name_record+0x58>
   195b4:	add	r4, r4, #15
   195b8:	add	r6, r6, #1
   195bc:	ldr	r0, [sl, #28]
   195c0:	cmp	r6, r0
   195c4:	bge	1961c <sav_emit_long_var_name_record+0xac>
   195c8:	mov	r0, sl
   195cc:	mov	r1, r6
   195d0:	bl	4e18 <readstat_get_variable@plt>
   195d4:	mov	r5, r0
   195d8:	mov	r0, r8
   195dc:	mov	r1, r4
   195e0:	bl	1a4bc <sav_format_variable_name>
   195e4:	mov	r7, r0
   195e8:	add	r0, r5, #8
   195ec:	bl	4c8c <strlen@plt>
   195f0:	cmp	r7, #0
   195f4:	cmpne	r0, #0
   195f8:	beq	195b4 <sav_emit_long_var_name_record+0x44>
   195fc:	cmp	r0, #64	; 0x40
   19600:	movcs	r0, #64	; 0x40
   19604:	add	r0, r7, r0
   19608:	ldr	r1, [sp, #28]
   1960c:	add	r0, r0, r1
   19610:	add	r0, r0, #2
   19614:	str	r0, [sp, #28]
   19618:	b	195b4 <sav_emit_long_var_name_record+0x44>
   1961c:	mov	r6, #0
   19620:	ldr	r0, [sp, #28]
   19624:	cmp	r0, #1
   19628:	blt	19650 <sav_emit_long_var_name_record+0xe0>
   1962c:	sub	r0, r0, #1
   19630:	str	r0, [sp, #28]
   19634:	add	r1, sp, #16
   19638:	mov	r0, sl
   1963c:	mov	r2, #16
   19640:	bl	4ef0 <readstat_write_bytes@plt>
   19644:	mov	r6, r0
   19648:	cmp	r0, #0
   1964c:	beq	1965c <sav_emit_long_var_name_record+0xec>
   19650:	mov	r0, r6
   19654:	sub	sp, fp, #28
   19658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1965c:	ldr	r0, [sl, #28]
   19660:	cmp	r0, #1
   19664:	mov	r6, #0
   19668:	blt	19650 <sav_emit_long_var_name_record+0xe0>
   1966c:	mov	r0, #1
   19670:	str	r0, [sp]
   19674:	mov	r6, #0
   19678:	mov	r7, #0
   1967c:	b	196b0 <sav_emit_long_var_name_record+0x140>
   19680:	mov	r0, #0
   19684:	str	r0, [sp]
   19688:	mov	r6, #0
   1968c:	mov	r9, r4
   19690:	mov	r5, #1
   19694:	cmp	r5, #0
   19698:	beq	19650 <sav_emit_long_var_name_record+0xe0>
   1969c:	add	r7, r7, #1
   196a0:	add	r9, r9, #15
   196a4:	ldr	r0, [sl, #28]
   196a8:	cmp	r7, r0
   196ac:	bge	19650 <sav_emit_long_var_name_record+0xe0>
   196b0:	mov	r0, sl
   196b4:	mov	r1, r7
   196b8:	bl	4e18 <readstat_get_variable@plt>
   196bc:	mov	r5, r0
   196c0:	add	r0, sp, #7
   196c4:	mov	r4, r9
   196c8:	mov	r1, r9
   196cc:	bl	1a4bc <sav_format_variable_name>
   196d0:	add	r8, r5, #8
   196d4:	mov	r0, r8
   196d8:	bl	4c8c <strlen@plt>
   196dc:	mov	r9, r0
   196e0:	mov	r0, #61	; 0x3d
   196e4:	strb	r0, [sp, #6]
   196e8:	mov	r0, #9
   196ec:	strb	r0, [sp, #5]
   196f0:	cmp	r9, #0
   196f4:	beq	1968c <sav_emit_long_var_name_record+0x11c>
   196f8:	cmp	r9, #64	; 0x40
   196fc:	movcs	r9, #64	; 0x40
   19700:	ldr	r0, [sp]
   19704:	cmp	r0, #0
   19708:	beq	19760 <sav_emit_long_var_name_record+0x1f0>
   1970c:	mov	r0, sl
   19710:	add	r1, sp, #7
   19714:	bl	4bd8 <readstat_write_string@plt>
   19718:	mov	r5, #0
   1971c:	cmp	r0, #0
   19720:	bne	19758 <sav_emit_long_var_name_record+0x1e8>
   19724:	mov	r0, sl
   19728:	add	r1, sp, #6
   1972c:	mov	r2, #1
   19730:	bl	4ef0 <readstat_write_bytes@plt>
   19734:	cmp	r0, #0
   19738:	bne	19758 <sav_emit_long_var_name_record+0x1e8>
   1973c:	mov	r0, sl
   19740:	mov	r1, r8
   19744:	mov	r2, r9
   19748:	bl	4ef0 <readstat_write_bytes@plt>
   1974c:	mov	r5, #0
   19750:	cmp	r0, #0
   19754:	beq	19680 <sav_emit_long_var_name_record+0x110>
   19758:	mov	r6, r0
   1975c:	b	19788 <sav_emit_long_var_name_record+0x218>
   19760:	mov	r0, sl
   19764:	add	r1, sp, #5
   19768:	mov	r2, #1
   1976c:	bl	4ef0 <readstat_write_bytes@plt>
   19770:	cmp	r0, #0
   19774:	beq	1970c <sav_emit_long_var_name_record+0x19c>
   19778:	mov	r6, r0
   1977c:	mov	r0, #0
   19780:	str	r0, [sp]
   19784:	mov	r5, #0
   19788:	mov	r9, r4
   1978c:	cmp	r5, #0
   19790:	bne	1969c <sav_emit_long_var_name_record+0x12c>
   19794:	b	19650 <sav_emit_long_var_name_record+0xe0>
   19798:	.word	0x0000d9d8

0001979c <sav_emit_very_long_string_record>:
   1979c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   197a0:	add	fp, sp, #28
   197a4:	sub	sp, sp, #52	; 0x34
   197a8:	mov	sl, r1
   197ac:	mov	r5, r0
   197b0:	mov	r0, #2304	; 0x900
   197b4:	strh	r0, [fp, #-30]	; 0xffffffe2
   197b8:	ldr	r0, [pc, #464]	; 19990 <sav_emit_very_long_string_record+0x1f4>
   197bc:	add	r0, pc, r0
   197c0:	vld1.64	{d16-d17}, [r0]
   197c4:	add	r0, sp, #32
   197c8:	vst1.64	{d16-d17}, [r0]
   197cc:	ldr	r0, [r5, #28]
   197d0:	cmp	r0, #1
   197d4:	blt	19884 <sav_emit_very_long_string_record+0xe8>
   197d8:	mov	r6, #0
   197dc:	add	r9, sp, #23
   197e0:	add	r4, sp, #8
   197e4:	mov	r7, sl
   197e8:	b	19800 <sav_emit_very_long_string_record+0x64>
   197ec:	add	r7, r7, #15
   197f0:	add	r6, r6, #1
   197f4:	ldr	r0, [r5, #28]
   197f8:	cmp	r6, r0
   197fc:	bge	19884 <sav_emit_very_long_string_record+0xe8>
   19800:	mov	r0, r5
   19804:	mov	r1, r6
   19808:	bl	4e18 <readstat_get_variable@plt>
   1980c:	mov	r8, r0
   19810:	ldr	r0, [r0, #1600]	; 0x640
   19814:	cmp	r0, #256	; 0x100
   19818:	bcc	197ec <sav_emit_very_long_string_record+0x50>
   1981c:	mov	r0, r9
   19820:	mov	r1, r7
   19824:	bl	1a4bc <sav_format_variable_name>
   19828:	ldr	r0, [r8, #1600]	; 0x640
   1982c:	lsr	r1, r0, #5
   19830:	movw	r2, #23237	; 0x5ac5
   19834:	movt	r2, #2684	; 0xa7c
   19838:	umull	r1, r2, r1, r2
   1983c:	lsr	r1, r2, #7
   19840:	movw	r2, #3125	; 0xc35
   19844:	mul	r1, r1, r2
   19848:	sub	r0, r0, r1, lsl #5
   1984c:	str	r0, [sp]
   19850:	mov	r0, r4
   19854:	mov	r1, #15
   19858:	ldr	r2, [pc, #308]	; 19994 <sav_emit_very_long_string_record+0x1f8>
   1985c:	add	r2, pc, r2
   19860:	mov	r3, r9
   19864:	bl	4d04 <snprintf@plt>
   19868:	mov	r0, r4
   1986c:	bl	4c8c <strlen@plt>
   19870:	ldr	r1, [sp, #44]	; 0x2c
   19874:	add	r0, r0, r1
   19878:	add	r0, r0, #2
   1987c:	str	r0, [sp, #44]	; 0x2c
   19880:	b	197ec <sav_emit_very_long_string_record+0x50>
   19884:	mov	r0, #0
   19888:	ldr	r1, [sp, #44]	; 0x2c
   1988c:	cmp	r1, #0
   19890:	beq	198ac <sav_emit_very_long_string_record+0x110>
   19894:	add	r1, sp, #32
   19898:	mov	r0, r5
   1989c:	mov	r2, #16
   198a0:	bl	4ef0 <readstat_write_bytes@plt>
   198a4:	cmp	r0, #0
   198a8:	beq	198b4 <sav_emit_very_long_string_record+0x118>
   198ac:	sub	sp, fp, #28
   198b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198b4:	ldr	r0, [r5, #28]
   198b8:	cmp	r0, #1
   198bc:	mov	r0, #0
   198c0:	blt	198ac <sav_emit_very_long_string_record+0x110>
   198c4:	mov	r6, #0
   198c8:	add	r8, sp, #23
   198cc:	add	r7, sp, #8
   198d0:	ldr	r9, [pc, #192]	; 19998 <sav_emit_very_long_string_record+0x1fc>
   198d4:	add	r9, pc, r9
   198d8:	b	198f0 <sav_emit_very_long_string_record+0x154>
   198dc:	add	sl, sl, #15
   198e0:	add	r6, r6, #1
   198e4:	ldr	r0, [r5, #28]
   198e8:	cmp	r6, r0
   198ec:	bge	19984 <sav_emit_very_long_string_record+0x1e8>
   198f0:	mov	r0, r5
   198f4:	mov	r1, r6
   198f8:	bl	4e18 <readstat_get_variable@plt>
   198fc:	mov	r4, r0
   19900:	ldr	r0, [r0, #1600]	; 0x640
   19904:	cmp	r0, #256	; 0x100
   19908:	bcc	198dc <sav_emit_very_long_string_record+0x140>
   1990c:	mov	r0, r8
   19910:	mov	r1, sl
   19914:	bl	1a4bc <sav_format_variable_name>
   19918:	ldr	r0, [r4, #1600]	; 0x640
   1991c:	lsr	r1, r0, #5
   19920:	movw	r2, #23237	; 0x5ac5
   19924:	movt	r2, #2684	; 0xa7c
   19928:	umull	r1, r2, r1, r2
   1992c:	lsr	r1, r2, #7
   19930:	movw	r2, #3125	; 0xc35
   19934:	mul	r1, r1, r2
   19938:	sub	r0, r0, r1, lsl #5
   1993c:	str	r0, [sp]
   19940:	mov	r0, r7
   19944:	mov	r1, #15
   19948:	mov	r2, r9
   1994c:	mov	r3, r8
   19950:	bl	4d04 <snprintf@plt>
   19954:	mov	r0, r5
   19958:	mov	r1, r7
   1995c:	bl	4bd8 <readstat_write_string@plt>
   19960:	cmp	r0, #0
   19964:	bne	198ac <sav_emit_very_long_string_record+0x110>
   19968:	mov	r0, r5
   1996c:	sub	r1, fp, #30
   19970:	mov	r2, #2
   19974:	bl	4ef0 <readstat_write_bytes@plt>
   19978:	cmp	r0, #0
   1997c:	beq	198dc <sav_emit_very_long_string_record+0x140>
   19980:	b	198ac <sav_emit_very_long_string_record+0x110>
   19984:	mov	r0, #0
   19988:	sub	sp, fp, #28
   1998c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19990:	.word	0x0000d7b4
   19994:	.word	0x0000d65b
   19998:	.word	0x0000d5e3

0001999c <sav_emit_long_string_value_labels_record>:
   1999c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   199a0:	add	fp, sp, #28
   199a4:	sub	sp, sp, #52	; 0x34
   199a8:	mov	r4, r0
   199ac:	ldr	r0, [pc, #896]	; 19d34 <sav_emit_long_string_value_labels_record+0x398>
   199b0:	add	r0, pc, r0
   199b4:	vld1.64	{d16-d17}, [r0]
   199b8:	add	r0, sp, #32
   199bc:	vst1.64	{d16-d17}, [r0]
   199c0:	ldr	r0, [r4, #40]	; 0x28
   199c4:	cmp	r0, #1
   199c8:	blt	19ab4 <sav_emit_long_string_value_labels_record+0x118>
   199cc:	mov	r1, #0
   199d0:	str	r4, [sp, #8]
   199d4:	b	199f0 <sav_emit_long_string_value_labels_record+0x54>
   199d8:	ldr	r4, [sp, #8]
   199dc:	ldr	r0, [r4, #40]	; 0x28
   199e0:	ldr	r1, [sp, #12]
   199e4:	add	r1, r1, #1
   199e8:	cmp	r1, r0
   199ec:	bge	19ab4 <sav_emit_long_string_value_labels_record+0x118>
   199f0:	mov	r0, r4
   199f4:	str	r1, [sp, #12]
   199f8:	bl	4ec0 <readstat_get_label_set@plt>
   199fc:	mov	r6, r0
   19a00:	bl	1add0 <readstat_label_set_needs_long_value_labels_record>
   19a04:	cmp	r0, #0
   19a08:	beq	199d8 <sav_emit_long_string_value_labels_record+0x3c>
   19a0c:	ldr	sl, [r6, #276]	; 0x114
   19a10:	cmp	sl, #1
   19a14:	blt	199d8 <sav_emit_long_string_value_labels_record+0x3c>
   19a18:	ldr	r9, [r6, #264]	; 0x108
   19a1c:	mov	r7, #0
   19a20:	b	19a30 <sav_emit_long_string_value_labels_record+0x94>
   19a24:	add	r7, r7, #1
   19a28:	cmp	r7, sl
   19a2c:	beq	199d8 <sav_emit_long_string_value_labels_record+0x3c>
   19a30:	mov	r0, r6
   19a34:	mov	r1, r7
   19a38:	bl	4ee4 <readstat_get_label_set_variable@plt>
   19a3c:	mov	r5, r0
   19a40:	add	r0, r0, #8
   19a44:	bl	4c8c <strlen@plt>
   19a48:	mov	r4, r0
   19a4c:	mov	r0, r5
   19a50:	bl	4d58 <readstat_variable_get_storage_width@plt>
   19a54:	cmp	r0, #9
   19a58:	blt	19a24 <sav_emit_long_string_value_labels_record+0x88>
   19a5c:	ldr	r1, [sp, #44]	; 0x2c
   19a60:	add	r1, r4, r1
   19a64:	add	r1, r1, #12
   19a68:	str	r1, [sp, #44]	; 0x2c
   19a6c:	cmp	r9, #1
   19a70:	blt	19a24 <sav_emit_long_string_value_labels_record+0x88>
   19a74:	add	r5, r0, #8
   19a78:	mov	r4, #0
   19a7c:	ldr	r8, [sp, #44]	; 0x2c
   19a80:	mov	r0, r6
   19a84:	mov	r1, r4
   19a88:	bl	4f68 <readstat_get_value_label@plt>
   19a8c:	add	r1, r5, r8
   19a90:	ldr	r0, [r0, #28]
   19a94:	cmp	r0, #120	; 0x78
   19a98:	movge	r0, #120	; 0x78
   19a9c:	add	r8, r1, r0
   19aa0:	add	r4, r4, #1
   19aa4:	cmp	r9, r4
   19aa8:	bne	19a80 <sav_emit_long_string_value_labels_record+0xe4>
   19aac:	str	r8, [sp, #44]	; 0x2c
   19ab0:	b	19a24 <sav_emit_long_string_value_labels_record+0x88>
   19ab4:	mov	sl, #0
   19ab8:	ldr	r0, [sp, #44]	; 0x2c
   19abc:	cmp	r0, #0
   19ac0:	beq	19ae0 <sav_emit_long_string_value_labels_record+0x144>
   19ac4:	add	r1, sp, #32
   19ac8:	mov	r0, r4
   19acc:	mov	r2, #16
   19ad0:	bl	4ef0 <readstat_write_bytes@plt>
   19ad4:	mov	sl, r0
   19ad8:	cmp	r0, #0
   19adc:	beq	19aec <sav_emit_long_string_value_labels_record+0x150>
   19ae0:	mov	r0, sl
   19ae4:	sub	sp, fp, #28
   19ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19aec:	ldr	r0, [r4, #40]	; 0x28
   19af0:	cmp	r0, #1
   19af4:	mov	sl, #0
   19af8:	blt	19ae0 <sav_emit_long_string_value_labels_record+0x144>
   19afc:	mov	r5, #0
   19b00:	add	sl, sp, #24
   19b04:	mov	r7, #0
   19b08:	b	19b20 <sav_emit_long_string_value_labels_record+0x184>
   19b0c:	ldr	r5, [sp]
   19b10:	add	r5, r5, #1
   19b14:	ldr	r0, [r4, #40]	; 0x28
   19b18:	cmp	r5, r0
   19b1c:	bge	19d24 <sav_emit_long_string_value_labels_record+0x388>
   19b20:	mov	r0, r4
   19b24:	mov	r1, r5
   19b28:	bl	4ec0 <readstat_get_label_set@plt>
   19b2c:	mov	r9, r0
   19b30:	bl	1add0 <readstat_label_set_needs_long_value_labels_record>
   19b34:	cmp	r0, #0
   19b38:	beq	19b10 <sav_emit_long_string_value_labels_record+0x174>
   19b3c:	ldr	r0, [r9, #264]	; 0x108
   19b40:	str	r0, [sp, #28]
   19b44:	ldr	r0, [r9, #276]	; 0x114
   19b48:	str	r0, [sp, #4]
   19b4c:	cmp	r0, #1
   19b50:	str	r5, [sp]
   19b54:	blt	19b0c <sav_emit_long_string_value_labels_record+0x170>
   19b58:	mov	r8, #0
   19b5c:	b	19b74 <sav_emit_long_string_value_labels_record+0x1d8>
   19b60:	add	sl, sp, #24
   19b64:	add	r8, r8, #1
   19b68:	ldr	r0, [sp, #4]
   19b6c:	cmp	r8, r0
   19b70:	beq	19b0c <sav_emit_long_string_value_labels_record+0x170>
   19b74:	mov	r0, r9
   19b78:	mov	r1, r8
   19b7c:	bl	4ee4 <readstat_get_label_set_variable@plt>
   19b80:	mov	r6, r0
   19b84:	add	r5, r0, #8
   19b88:	mov	r0, r5
   19b8c:	bl	4c8c <strlen@plt>
   19b90:	str	r0, [sp, #24]
   19b94:	mov	r0, r6
   19b98:	bl	4d58 <readstat_variable_get_storage_width@plt>
   19b9c:	str	r0, [sp, #20]
   19ba0:	cmp	r0, #9
   19ba4:	blt	19b64 <sav_emit_long_string_value_labels_record+0x1c8>
   19ba8:	mov	r1, r0
   19bac:	mov	r0, r7
   19bb0:	bl	4a64 <realloc@plt>
   19bb4:	mov	r7, r0
   19bb8:	ldr	r2, [sp, #20]
   19bbc:	mov	r1, #32
   19bc0:	bl	4d28 <memset@plt>
   19bc4:	mov	r0, r4
   19bc8:	mov	r1, sl
   19bcc:	mov	r2, #4
   19bd0:	bl	4ef0 <readstat_write_bytes@plt>
   19bd4:	cmp	r0, #0
   19bd8:	bne	19d14 <sav_emit_long_string_value_labels_record+0x378>
   19bdc:	ldr	r2, [sp, #24]
   19be0:	mov	r0, r4
   19be4:	mov	r1, r5
   19be8:	bl	4ef0 <readstat_write_bytes@plt>
   19bec:	cmp	r0, #0
   19bf0:	bne	19d14 <sav_emit_long_string_value_labels_record+0x378>
   19bf4:	mov	r0, r4
   19bf8:	add	r1, sp, #20
   19bfc:	mov	r2, #4
   19c00:	bl	4ef0 <readstat_write_bytes@plt>
   19c04:	cmp	r0, #0
   19c08:	bne	19d14 <sav_emit_long_string_value_labels_record+0x378>
   19c0c:	mov	r0, r4
   19c10:	add	r1, sp, #28
   19c14:	mov	r2, #4
   19c18:	bl	4ef0 <readstat_write_bytes@plt>
   19c1c:	cmp	r0, #0
   19c20:	bne	19d14 <sav_emit_long_string_value_labels_record+0x378>
   19c24:	ldr	r0, [sp, #28]
   19c28:	cmp	r0, #1
   19c2c:	blt	19b60 <sav_emit_long_string_value_labels_record+0x1c4>
   19c30:	str	r7, [sp, #12]
   19c34:	mov	r7, #0
   19c38:	mov	r0, r9
   19c3c:	mov	r1, r7
   19c40:	bl	4f68 <readstat_get_value_label@plt>
   19c44:	mov	r5, r0
   19c48:	ldr	r6, [r0, #20]
   19c4c:	ldr	r0, [r0, #28]
   19c50:	cmp	r0, #120	; 0x78
   19c54:	movge	r0, #120	; 0x78
   19c58:	str	r0, [sp, #16]
   19c5c:	mov	r0, r4
   19c60:	add	r1, sp, #20
   19c64:	mov	r2, #4
   19c68:	bl	4ef0 <readstat_write_bytes@plt>
   19c6c:	cmp	r0, #0
   19c70:	bne	19cf8 <sav_emit_long_string_value_labels_record+0x35c>
   19c74:	ldr	r1, [r5, #16]
   19c78:	mov	r0, r4
   19c7c:	mov	r2, r6
   19c80:	bl	4ef0 <readstat_write_bytes@plt>
   19c84:	cmp	r0, #0
   19c88:	bne	19cf8 <sav_emit_long_string_value_labels_record+0x35c>
   19c8c:	ldr	r0, [sp, #20]
   19c90:	cmp	r0, r6
   19c94:	ble	19cb0 <sav_emit_long_string_value_labels_record+0x314>
   19c98:	sub	r2, r0, r6
   19c9c:	mov	r0, r4
   19ca0:	ldr	r1, [sp, #12]
   19ca4:	bl	4ef0 <readstat_write_bytes@plt>
   19ca8:	cmp	r0, #0
   19cac:	bne	19cf8 <sav_emit_long_string_value_labels_record+0x35c>
   19cb0:	mov	r0, r4
   19cb4:	add	r1, sp, #16
   19cb8:	mov	r2, #4
   19cbc:	bl	4ef0 <readstat_write_bytes@plt>
   19cc0:	cmp	r0, #0
   19cc4:	bne	19cf8 <sav_emit_long_string_value_labels_record+0x35c>
   19cc8:	ldr	r1, [r5, #24]
   19ccc:	ldr	r2, [sp, #16]
   19cd0:	mov	r0, r4
   19cd4:	bl	4ef0 <readstat_write_bytes@plt>
   19cd8:	cmp	r0, #0
   19cdc:	bne	19cf8 <sav_emit_long_string_value_labels_record+0x35c>
   19ce0:	add	r7, r7, #1
   19ce4:	ldr	r0, [sp, #28]
   19ce8:	cmp	r7, r0
   19cec:	blt	19c38 <sav_emit_long_string_value_labels_record+0x29c>
   19cf0:	ldr	r7, [sp, #12]
   19cf4:	b	19b60 <sav_emit_long_string_value_labels_record+0x1c4>
   19cf8:	mov	sl, r0
   19cfc:	ldr	r7, [sp, #12]
   19d00:	cmp	r7, #0
   19d04:	beq	19ae0 <sav_emit_long_string_value_labels_record+0x144>
   19d08:	mov	r0, r7
   19d0c:	bl	4938 <free@plt>
   19d10:	b	19ae0 <sav_emit_long_string_value_labels_record+0x144>
   19d14:	mov	sl, r0
   19d18:	cmp	r7, #0
   19d1c:	bne	19d08 <sav_emit_long_string_value_labels_record+0x36c>
   19d20:	b	19ae0 <sav_emit_long_string_value_labels_record+0x144>
   19d24:	mov	sl, #0
   19d28:	cmp	r7, #0
   19d2c:	bne	19d08 <sav_emit_long_string_value_labels_record+0x36c>
   19d30:	b	19ae0 <sav_emit_long_string_value_labels_record+0x144>
   19d34:	.word	0x0000d5d0

00019d38 <sav_emit_long_string_missing_values_record>:
   19d38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d3c:	add	fp, sp, #28
   19d40:	sub	sp, sp, #76	; 0x4c
   19d44:	mov	r5, r0
   19d48:	ldr	r0, [pc, #952]	; 1a108 <sav_emit_long_string_missing_values_record+0x3d0>
   19d4c:	add	r0, pc, r0
   19d50:	vld1.64	{d16-d17}, [r0]
   19d54:	sub	r0, fp, #48	; 0x30
   19d58:	vst1.64	{d16-d17}, [r0]
   19d5c:	ldr	r0, [r5, #28]
   19d60:	str	r0, [sp, #4]
   19d64:	cmp	r0, #1
   19d68:	str	r5, [sp]
   19d6c:	blt	19e8c <sav_emit_long_string_missing_values_record+0x154>
   19d70:	add	r0, sp, #24
   19d74:	add	r8, r0, #8
   19d78:	add	r0, sp, #40	; 0x28
   19d7c:	add	r9, r0, #8
   19d80:	mov	r7, #0
   19d84:	b	19d98 <sav_emit_long_string_missing_values_record+0x60>
   19d88:	add	r7, r7, #1
   19d8c:	ldr	r0, [sp, #4]
   19d90:	cmp	r7, r0
   19d94:	beq	19e8c <sav_emit_long_string_missing_values_record+0x154>
   19d98:	mov	r0, r5
   19d9c:	mov	r1, r7
   19da0:	bl	4e18 <readstat_get_variable@plt>
   19da4:	mov	r4, r0
   19da8:	add	r0, r0, #8
   19dac:	bl	4c8c <strlen@plt>
   19db0:	str	r0, [sp, #8]
   19db4:	mov	r0, r4
   19db8:	bl	4d58 <readstat_variable_get_storage_width@plt>
   19dbc:	cmp	r0, #9
   19dc0:	blt	19d88 <sav_emit_long_string_missing_values_record+0x50>
   19dc4:	mov	r0, r4
   19dc8:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   19dcc:	cmp	r0, #1
   19dd0:	blt	19d88 <sav_emit_long_string_missing_values_record+0x50>
   19dd4:	mov	r5, #0
   19dd8:	mov	r6, #0
   19ddc:	b	19df4 <sav_emit_long_string_missing_values_record+0xbc>
   19de0:	add	r5, r5, #1
   19de4:	mov	r0, r4
   19de8:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   19dec:	cmp	r5, r0
   19df0:	bge	19e5c <sav_emit_long_string_missing_values_record+0x124>
   19df4:	add	r0, sp, #40	; 0x28
   19df8:	mov	r1, r4
   19dfc:	mov	r2, r5
   19e00:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   19e04:	add	r0, sp, #24
   19e08:	mov	r1, r4
   19e0c:	mov	r2, r5
   19e10:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   19e14:	ldrd	r2, [r9]
   19e18:	ldr	r0, [sp, #40]	; 0x28
   19e1c:	ldr	r1, [sp, #44]	; 0x2c
   19e20:	bl	4a10 <readstat_string_value@plt>
   19e24:	mov	sl, r0
   19e28:	ldrd	r2, [r8]
   19e2c:	ldr	r0, [sp, #24]
   19e30:	ldr	r1, [sp, #28]
   19e34:	bl	4a10 <readstat_string_value@plt>
   19e38:	cmp	sl, #0
   19e3c:	movne	r1, r0
   19e40:	cmpne	r0, #0
   19e44:	beq	19de0 <sav_emit_long_string_missing_values_record+0xa8>
   19e48:	mov	r0, sl
   19e4c:	bl	4878 <strcmp@plt>
   19e50:	cmp	r0, #0
   19e54:	addeq	r6, r6, #1
   19e58:	b	19de0 <sav_emit_long_string_missing_values_record+0xa8>
   19e5c:	cmp	r6, #0
   19e60:	ldr	r5, [sp]
   19e64:	beq	19d88 <sav_emit_long_string_missing_values_record+0x50>
   19e68:	mov	r0, #4
   19e6c:	orr	r0, r0, r6, lsl #3
   19e70:	ldr	r1, [sp, #8]
   19e74:	add	r0, r1, r0
   19e78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19e7c:	add	r0, r0, r1
   19e80:	add	r0, r0, #5
   19e84:	str	r0, [fp, #-36]	; 0xffffffdc
   19e88:	b	19d88 <sav_emit_long_string_missing_values_record+0x50>
   19e8c:	mov	r0, #0
   19e90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19e94:	cmp	r1, #0
   19e98:	beq	19eb4 <sav_emit_long_string_missing_values_record+0x17c>
   19e9c:	sub	r1, fp, #48	; 0x30
   19ea0:	mov	r0, r5
   19ea4:	mov	r2, #16
   19ea8:	bl	4ef0 <readstat_write_bytes@plt>
   19eac:	cmp	r0, #0
   19eb0:	beq	19ebc <sav_emit_long_string_missing_values_record+0x184>
   19eb4:	sub	sp, fp, #28
   19eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ebc:	ldr	r0, [sp, #4]
   19ec0:	cmp	r0, #1
   19ec4:	mov	r0, #0
   19ec8:	blt	19eb4 <sav_emit_long_string_missing_values_record+0x17c>
   19ecc:	add	r0, sp, #24
   19ed0:	add	r6, r0, #8
   19ed4:	add	sl, sp, #40	; 0x28
   19ed8:	add	r8, sl, #8
   19edc:	mov	r7, #0
   19ee0:	b	19ef8 <sav_emit_long_string_missing_values_record+0x1c0>
   19ee4:	ldr	r5, [sp]
   19ee8:	add	r7, r7, #1
   19eec:	ldr	r0, [sp, #4]
   19ef0:	cmp	r7, r0
   19ef4:	beq	1a0fc <sav_emit_long_string_missing_values_record+0x3c4>
   19ef8:	mov	r0, r5
   19efc:	mov	r1, r7
   19f00:	bl	4e18 <readstat_get_variable@plt>
   19f04:	mov	r9, r0
   19f08:	add	r4, r0, #8
   19f0c:	mov	r0, r4
   19f10:	bl	4c8c <strlen@plt>
   19f14:	str	r0, [sp, #20]
   19f18:	mov	r0, #0
   19f1c:	strb	r0, [sp, #19]
   19f20:	mov	r0, r9
   19f24:	bl	4d58 <readstat_variable_get_storage_width@plt>
   19f28:	cmp	r0, #9
   19f2c:	blt	19ee8 <sav_emit_long_string_missing_values_record+0x1b0>
   19f30:	str	r4, [sp, #8]
   19f34:	mov	r0, r9
   19f38:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   19f3c:	cmp	r0, #1
   19f40:	blt	19fd4 <sav_emit_long_string_missing_values_record+0x29c>
   19f44:	mov	r4, #0
   19f48:	b	19f60 <sav_emit_long_string_missing_values_record+0x228>
   19f4c:	add	r4, r4, #1
   19f50:	mov	r0, r9
   19f54:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   19f58:	cmp	r4, r0
   19f5c:	bge	19fd4 <sav_emit_long_string_missing_values_record+0x29c>
   19f60:	mov	r0, sl
   19f64:	mov	r1, r9
   19f68:	mov	r2, r4
   19f6c:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   19f70:	add	r0, sp, #24
   19f74:	mov	r1, r9
   19f78:	mov	r2, r4
   19f7c:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   19f80:	ldrd	r2, [r8]
   19f84:	ldr	r0, [sp, #40]	; 0x28
   19f88:	ldr	r1, [sp, #44]	; 0x2c
   19f8c:	bl	4a10 <readstat_string_value@plt>
   19f90:	mov	r5, r0
   19f94:	ldrd	r2, [r6]
   19f98:	ldr	r0, [sp, #24]
   19f9c:	ldr	r1, [sp, #28]
   19fa0:	bl	4a10 <readstat_string_value@plt>
   19fa4:	cmp	r5, #0
   19fa8:	movne	r1, r0
   19fac:	cmpne	r0, #0
   19fb0:	beq	19f4c <sav_emit_long_string_missing_values_record+0x214>
   19fb4:	mov	r0, r5
   19fb8:	bl	4878 <strcmp@plt>
   19fbc:	cmp	r0, #0
   19fc0:	bne	19f4c <sav_emit_long_string_missing_values_record+0x214>
   19fc4:	ldrb	r0, [sp, #19]
   19fc8:	add	r0, r0, #1
   19fcc:	strb	r0, [sp, #19]
   19fd0:	b	19f4c <sav_emit_long_string_missing_values_record+0x214>
   19fd4:	ldrb	r0, [sp, #19]
   19fd8:	cmp	r0, #0
   19fdc:	ldr	r5, [sp]
   19fe0:	ldr	r4, [sp, #8]
   19fe4:	beq	19ee8 <sav_emit_long_string_missing_values_record+0x1b0>
   19fe8:	mov	r0, r5
   19fec:	add	r1, sp, #20
   19ff0:	mov	r2, #4
   19ff4:	bl	4ef0 <readstat_write_bytes@plt>
   19ff8:	cmp	r0, #0
   19ffc:	bne	19eb4 <sav_emit_long_string_missing_values_record+0x17c>
   1a000:	ldr	r2, [sp, #20]
   1a004:	mov	r0, r5
   1a008:	mov	r1, r4
   1a00c:	bl	4ef0 <readstat_write_bytes@plt>
   1a010:	cmp	r0, #0
   1a014:	bne	19eb4 <sav_emit_long_string_missing_values_record+0x17c>
   1a018:	mov	r0, r5
   1a01c:	add	r1, sp, #19
   1a020:	mov	r2, #1
   1a024:	bl	4ef0 <readstat_write_bytes@plt>
   1a028:	cmp	r0, #0
   1a02c:	bne	19eb4 <sav_emit_long_string_missing_values_record+0x17c>
   1a030:	mov	r0, #8
   1a034:	str	r0, [sp, #12]
   1a038:	mov	r0, r5
   1a03c:	add	r1, sp, #12
   1a040:	mov	r2, #4
   1a044:	bl	4ef0 <readstat_write_bytes@plt>
   1a048:	cmp	r0, #0
   1a04c:	bne	19eb4 <sav_emit_long_string_missing_values_record+0x17c>
   1a050:	mov	r0, r9
   1a054:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   1a058:	cmp	r0, #1
   1a05c:	blt	19ee4 <sav_emit_long_string_missing_values_record+0x1ac>
   1a060:	mov	r4, #0
   1a064:	b	1a07c <sav_emit_long_string_missing_values_record+0x344>
   1a068:	add	r4, r4, #1
   1a06c:	mov	r0, r9
   1a070:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   1a074:	cmp	r4, r0
   1a078:	bge	19ee4 <sav_emit_long_string_missing_values_record+0x1ac>
   1a07c:	mov	r0, sl
   1a080:	mov	r1, r9
   1a084:	mov	r2, r4
   1a088:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   1a08c:	add	r0, sp, #24
   1a090:	mov	r1, r9
   1a094:	mov	r2, r4
   1a098:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   1a09c:	ldrd	r2, [r8]
   1a0a0:	ldr	r0, [sp, #40]	; 0x28
   1a0a4:	ldr	r1, [sp, #44]	; 0x2c
   1a0a8:	bl	4a10 <readstat_string_value@plt>
   1a0ac:	mov	r5, r0
   1a0b0:	ldrd	r2, [r6]
   1a0b4:	ldr	r0, [sp, #24]
   1a0b8:	ldr	r1, [sp, #28]
   1a0bc:	bl	4a10 <readstat_string_value@plt>
   1a0c0:	cmp	r5, #0
   1a0c4:	movne	r1, r0
   1a0c8:	cmpne	r0, #0
   1a0cc:	beq	1a068 <sav_emit_long_string_missing_values_record+0x330>
   1a0d0:	mov	r0, r5
   1a0d4:	bl	4878 <strcmp@plt>
   1a0d8:	cmp	r0, #0
   1a0dc:	bne	1a068 <sav_emit_long_string_missing_values_record+0x330>
   1a0e0:	ldr	r2, [sp, #12]
   1a0e4:	ldr	r0, [sp]
   1a0e8:	mov	r1, r5
   1a0ec:	bl	4fec <readstat_write_space_padded_string@plt>
   1a0f0:	cmp	r0, #0
   1a0f4:	beq	1a068 <sav_emit_long_string_missing_values_record+0x330>
   1a0f8:	b	19eb4 <sav_emit_long_string_missing_values_record+0x17c>
   1a0fc:	mov	r0, #0
   1a100:	sub	sp, fp, #28
   1a104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a108:	.word	0x0000d244

0001a10c <sav_emit_number_of_cases_record>:
   1a10c:	push	{r4, sl, fp, lr}
   1a110:	add	fp, sp, #8
   1a114:	sub	sp, sp, #32
   1a118:	mov	r4, r0
   1a11c:	ldr	r0, [pc, #120]	; 1a19c <sav_emit_number_of_cases_record+0x90>
   1a120:	add	r0, pc, r0
   1a124:	vld1.64	{d16-d17}, [r0]
   1a128:	add	r1, sp, #16
   1a12c:	vst1.64	{d16-d17}, [r1]
   1a130:	mov	r0, #0
   1a134:	str	r0, [sp, #12]
   1a138:	mov	r0, #1
   1a13c:	str	r0, [sp, #8]
   1a140:	ldr	r0, [r4, #80]	; 0x50
   1a144:	str	r0, [sp]
   1a148:	asr	r0, r0, #31
   1a14c:	str	r0, [sp, #4]
   1a150:	mov	r0, r4
   1a154:	mov	r2, #16
   1a158:	bl	4ef0 <readstat_write_bytes@plt>
   1a15c:	cmp	r0, #0
   1a160:	bne	1a17c <sav_emit_number_of_cases_record+0x70>
   1a164:	add	r1, sp, #8
   1a168:	mov	r0, r4
   1a16c:	mov	r2, #8
   1a170:	bl	4ef0 <readstat_write_bytes@plt>
   1a174:	cmp	r0, #0
   1a178:	beq	1a184 <sav_emit_number_of_cases_record+0x78>
   1a17c:	sub	sp, fp, #8
   1a180:	pop	{r4, sl, fp, pc}
   1a184:	mov	r1, sp
   1a188:	mov	r0, r4
   1a18c:	mov	r2, #8
   1a190:	bl	4ef0 <readstat_write_bytes@plt>
   1a194:	sub	sp, fp, #8
   1a198:	pop	{r4, sl, fp, pc}
   1a19c:	.word	0x0000ce80

0001a1a0 <sav_emit_termination_record>:
   1a1a0:	push	{fp, lr}
   1a1a4:	mov	fp, sp
   1a1a8:	sub	sp, sp, #8
   1a1ac:	mov	r1, #0
   1a1b0:	str	r1, [sp, #4]
   1a1b4:	movw	r1, #999	; 0x3e7
   1a1b8:	str	r1, [sp]
   1a1bc:	mov	r1, sp
   1a1c0:	mov	r2, #8
   1a1c4:	bl	4ef0 <readstat_write_bytes@plt>
   1a1c8:	mov	sp, fp
   1a1cc:	pop	{fp, pc}

0001a1d0 <sav_emit_full_variable_record>:
   1a1d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a1d4:	add	fp, sp, #24
   1a1d8:	sub	sp, sp, #8
   1a1dc:	mov	r9, r2
   1a1e0:	mov	r5, r1
   1a1e4:	mov	r6, r0
   1a1e8:	bl	1a274 <sav_emit_base_variable_record>
   1a1ec:	cmp	r0, #0
   1a1f0:	beq	1a1fc <sav_emit_full_variable_record+0x2c>
   1a1f4:	sub	sp, fp, #24
   1a1f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a1fc:	ldr	r1, [r5, #1600]	; 0x640
   1a200:	ldr	r0, [r5]
   1a204:	bl	1874c <sav_variable_segments>
   1a208:	cmp	r0, #2
   1a20c:	blt	1a268 <sav_emit_full_variable_record+0x98>
   1a210:	sub	r1, r0, r0, lsl #6
   1a214:	mov	r2, #252	; 0xfc
   1a218:	add	r8, r2, r1, lsl #2
   1a21c:	rsb	r7, r0, #0
   1a220:	mov	r4, #2
   1a224:	adds	r0, r7, r4
   1a228:	sub	r3, r4, #1
   1a22c:	mov	r0, #255	; 0xff
   1a230:	bne	1a23c <sav_emit_full_variable_record+0x6c>
   1a234:	ldr	r0, [r5, #1600]	; 0x640
   1a238:	add	r0, r0, r8
   1a23c:	str	r0, [sp]
   1a240:	mov	r0, r6
   1a244:	mov	r1, r5
   1a248:	mov	r2, r9
   1a24c:	bl	1a3c0 <sav_emit_ghost_variable_record>
   1a250:	cmp	r0, #0
   1a254:	bne	1a1f4 <sav_emit_full_variable_record+0x24>
   1a258:	add	r4, r4, #1
   1a25c:	add	r0, r7, r4
   1a260:	cmp	r0, #1
   1a264:	bne	1a224 <sav_emit_full_variable_record+0x54>
   1a268:	mov	r0, #0
   1a26c:	sub	sp, fp, #24
   1a270:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001a274 <sav_emit_base_variable_record>:
   1a274:	push	{r4, r5, r6, r7, fp, lr}
   1a278:	add	fp, sp, #16
   1a27c:	sub	sp, sp, #48	; 0x30
   1a280:	mov	r5, r1
   1a284:	mov	r4, r0
   1a288:	mov	r0, #2
   1a28c:	str	r0, [fp, #-20]	; 0xffffffec
   1a290:	add	r0, sp, #32
   1a294:	mov	r1, r2
   1a298:	bl	1a4bc <sav_format_variable_name>
   1a29c:	mov	r6, r0
   1a2a0:	sub	r1, fp, #20
   1a2a4:	mov	r0, r4
   1a2a8:	mov	r2, #4
   1a2ac:	bl	4ef0 <readstat_write_bytes@plt>
   1a2b0:	cmp	r0, #0
   1a2b4:	bne	1a3b8 <sav_emit_base_variable_record+0x144>
   1a2b8:	vmov.i32	q8, #0	; 0x00000000
   1a2bc:	mov	r0, #12
   1a2c0:	mov	r7, sp
   1a2c4:	mov	r1, r7
   1a2c8:	vst1.64	{d16-d17}, [r1], r0
   1a2cc:	vst1.32	{d16-d17}, [r1]
   1a2d0:	ldr	r0, [r5]
   1a2d4:	cmp	r0, #0
   1a2d8:	bne	1a2ec <sav_emit_base_variable_record+0x78>
   1a2dc:	ldr	r0, [r5, #1600]	; 0x640
   1a2e0:	cmp	r0, #255	; 0xff
   1a2e4:	movcs	r0, #255	; 0xff
   1a2e8:	str	r0, [sp]
   1a2ec:	ldrb	r0, [r5, #564]	; 0x234
   1a2f0:	cmp	r0, #0
   1a2f4:	movwne	r0, #1
   1a2f8:	str	r0, [sp, #4]
   1a2fc:	add	r0, r7, #8
   1a300:	mov	r1, r5
   1a304:	bl	1a4ec <sav_n_missing_values>
   1a308:	cmp	r0, #0
   1a30c:	bne	1a3b8 <sav_emit_base_variable_record+0x144>
   1a310:	add	r1, r7, #12
   1a314:	mov	r0, r5
   1a318:	bl	1a560 <sav_encode_base_variable_format>
   1a31c:	cmp	r0, #0
   1a320:	bne	1a3b8 <sav_emit_base_variable_record+0x144>
   1a324:	movw	r0, #8224	; 0x2020
   1a328:	movt	r0, #8224	; 0x2020
   1a32c:	str	r0, [sp, #24]
   1a330:	str	r0, [sp, #20]
   1a334:	ldr	r0, [sp, #12]
   1a338:	str	r0, [sp, #16]
   1a33c:	sub	r0, r6, #1
   1a340:	cmp	r0, #7
   1a344:	bhi	1a358 <sav_emit_base_variable_record+0xe4>
   1a348:	add	r0, r7, #20
   1a34c:	add	r1, sp, #32
   1a350:	mov	r2, r6
   1a354:	bl	4998 <memcpy@plt>
   1a358:	mov	r1, sp
   1a35c:	mov	r0, r4
   1a360:	mov	r2, #28
   1a364:	bl	4ef0 <readstat_write_bytes@plt>
   1a368:	cmp	r0, #0
   1a36c:	bne	1a3b8 <sav_emit_base_variable_record+0x144>
   1a370:	mov	r0, r4
   1a374:	mov	r1, r5
   1a378:	bl	1a5a4 <sav_emit_variable_label>
   1a37c:	cmp	r0, #0
   1a380:	bne	1a3b8 <sav_emit_base_variable_record+0x144>
   1a384:	mov	r0, r4
   1a388:	mov	r1, r5
   1a38c:	bl	1a63c <sav_emit_variable_missing_values>
   1a390:	cmp	r0, #0
   1a394:	bne	1a3b8 <sav_emit_base_variable_record+0x144>
   1a398:	ldr	r0, [r5, #1596]	; 0x63c
   1a39c:	lsr	r1, r0, #3
   1a3a0:	mov	r2, #32
   1a3a4:	cmp	r1, #32
   1a3a8:	lsrcc	r2, r0, #3
   1a3ac:	sub	r1, r2, #1
   1a3b0:	mov	r0, r4
   1a3b4:	bl	1a690 <sav_emit_blank_variable_records>
   1a3b8:	sub	sp, fp, #16
   1a3bc:	pop	{r4, r5, r6, r7, fp, pc}

0001a3c0 <sav_emit_ghost_variable_record>:
   1a3c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a3c4:	add	fp, sp, #24
   1a3c8:	sub	sp, sp, #48	; 0x30
   1a3cc:	mov	r7, r1
   1a3d0:	mov	r4, r0
   1a3d4:	mov	r0, #2
   1a3d8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a3dc:	vmov.i32	q8, #0	; 0x00000000
   1a3e0:	mov	r0, #12
   1a3e4:	add	r5, sp, #16
   1a3e8:	mov	r1, r5
   1a3ec:	vst1.64	{d16-d17}, [r1], r0
   1a3f0:	vst1.32	{d16-d17}, [r1]
   1a3f4:	mov	r0, sp
   1a3f8:	mov	r1, r2
   1a3fc:	mov	r2, r3
   1a400:	bl	1acb0 <sav_format_ghost_variable_name>
   1a404:	mov	r6, r0
   1a408:	sub	r1, fp, #28
   1a40c:	mov	r0, r4
   1a410:	mov	r2, #4
   1a414:	bl	4ef0 <readstat_write_bytes@plt>
   1a418:	cmp	r0, #0
   1a41c:	bne	1a48c <sav_emit_ghost_variable_record+0xcc>
   1a420:	ldr	r8, [fp, #8]
   1a424:	str	r8, [sp, #16]
   1a428:	add	r2, r5, #12
   1a42c:	mov	r0, r7
   1a430:	mov	r1, r8
   1a434:	bl	1ad14 <sav_encode_ghost_variable_format>
   1a438:	cmp	r0, #0
   1a43c:	bne	1a48c <sav_emit_ghost_variable_record+0xcc>
   1a440:	movw	r0, #8224	; 0x2020
   1a444:	movt	r0, #8224	; 0x2020
   1a448:	str	r0, [sp, #40]	; 0x28
   1a44c:	str	r0, [sp, #36]	; 0x24
   1a450:	ldr	r0, [sp, #28]
   1a454:	str	r0, [sp, #32]
   1a458:	sub	r0, r6, #1
   1a45c:	cmp	r0, #7
   1a460:	bhi	1a474 <sav_emit_ghost_variable_record+0xb4>
   1a464:	add	r0, r5, #20
   1a468:	mov	r1, sp
   1a46c:	mov	r2, r6
   1a470:	bl	4998 <memcpy@plt>
   1a474:	add	r1, sp, #16
   1a478:	mov	r0, r4
   1a47c:	mov	r2, #28
   1a480:	bl	4ef0 <readstat_write_bytes@plt>
   1a484:	cmp	r0, #0
   1a488:	beq	1a494 <sav_emit_ghost_variable_record+0xd4>
   1a48c:	sub	sp, fp, #24
   1a490:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a494:	add	r0, r8, #7
   1a498:	lsr	r1, r0, #3
   1a49c:	mov	r2, #32
   1a4a0:	cmp	r1, #32
   1a4a4:	lsrcc	r2, r0, #3
   1a4a8:	sub	r1, r2, #1
   1a4ac:	mov	r0, r4
   1a4b0:	bl	1a690 <sav_emit_blank_variable_records>
   1a4b4:	sub	sp, fp, #24
   1a4b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001a4bc <sav_format_variable_name>:
   1a4bc:	push	{r4, sl, fp, lr}
   1a4c0:	add	fp, sp, #8
   1a4c4:	mov	r3, r1
   1a4c8:	mov	r4, r0
   1a4cc:	ldr	r2, [pc, #20]	; 1a4e8 <sav_format_variable_name+0x2c>
   1a4d0:	add	r2, pc, r2
   1a4d4:	mov	r1, #9
   1a4d8:	bl	4d04 <snprintf@plt>
   1a4dc:	mov	r0, r4
   1a4e0:	pop	{r4, sl, fp, lr}
   1a4e4:	b	4c8c <strlen@plt>
   1a4e8:	.word	0x0000c5bc

0001a4ec <sav_n_missing_values>:
   1a4ec:	push	{r4, r5, fp, lr}
   1a4f0:	add	fp, sp, #8
   1a4f4:	mov	r5, r1
   1a4f8:	mov	r4, r0
   1a4fc:	ldr	r0, [r1]
   1a500:	cmp	r0, #5
   1a504:	bne	1a514 <sav_n_missing_values+0x28>
   1a508:	mov	r0, r5
   1a50c:	bl	1a738 <sav_n_missing_double_values>
   1a510:	b	1a534 <sav_n_missing_values+0x48>
   1a514:	mov	r0, r5
   1a518:	bl	4d58 <readstat_variable_get_storage_width@plt>
   1a51c:	mov	r1, r0
   1a520:	mov	r0, #0
   1a524:	cmp	r1, #8
   1a528:	bhi	1a54c <sav_n_missing_values+0x60>
   1a52c:	mov	r0, r5
   1a530:	bl	1a808 <sav_n_missing_string_values>
   1a534:	cmp	r0, #0
   1a538:	mov	r2, r0
   1a53c:	rsbmi	r2, r0, #0
   1a540:	mov	r1, #31
   1a544:	cmp	r2, #3
   1a548:	bgt	1a558 <sav_n_missing_values+0x6c>
   1a54c:	mov	r1, #0
   1a550:	cmp	r4, #0
   1a554:	strne	r0, [r4]
   1a558:	mov	r0, r1
   1a55c:	pop	{r4, r5, fp, pc}

0001a560 <sav_encode_base_variable_format>:
   1a560:	push	{r4, r5, fp, lr}
   1a564:	add	fp, sp, #8
   1a568:	sub	sp, sp, #16
   1a56c:	mov	r4, r1
   1a570:	add	r1, sp, #4
   1a574:	bl	4b6c <spss_format_for_variable@plt>
   1a578:	mov	r5, r0
   1a57c:	cmp	r4, #0
   1a580:	beq	1a598 <sav_encode_base_variable_format+0x38>
   1a584:	cmp	r5, #0
   1a588:	bne	1a598 <sav_encode_base_variable_format+0x38>
   1a58c:	add	r0, sp, #4
   1a590:	bl	1a8e4 <sav_encode_format>
   1a594:	str	r0, [r4]
   1a598:	mov	r0, r5
   1a59c:	sub	sp, fp, #8
   1a5a0:	pop	{r4, r5, fp, pc}

0001a5a4 <sav_emit_variable_label>:
   1a5a4:	push	{r4, r5, r6, sl, fp, lr}
   1a5a8:	add	fp, sp, #16
   1a5ac:	sub	sp, sp, #264	; 0x108
   1a5b0:	mov	r4, r0
   1a5b4:	add	r5, r1, #564	; 0x234
   1a5b8:	mov	r0, r5
   1a5bc:	bl	4c8c <strlen@plt>
   1a5c0:	cmp	r0, #0
   1a5c4:	beq	1a5f4 <sav_emit_variable_label+0x50>
   1a5c8:	cmp	r0, #256	; 0x100
   1a5cc:	movcs	r0, #256	; 0x100
   1a5d0:	str	r0, [sp, #4]
   1a5d4:	add	r1, sp, #4
   1a5d8:	mov	r0, r4
   1a5dc:	mov	r2, #4
   1a5e0:	bl	4ef0 <readstat_write_bytes@plt>
   1a5e4:	cmp	r0, #0
   1a5e8:	beq	1a600 <sav_emit_variable_label+0x5c>
   1a5ec:	sub	sp, fp, #16
   1a5f0:	pop	{r4, r5, r6, sl, fp, pc}
   1a5f4:	mov	r0, #0
   1a5f8:	sub	sp, fp, #16
   1a5fc:	pop	{r4, r5, r6, sl, fp, pc}
   1a600:	ldr	r0, [sp, #4]
   1a604:	add	r0, r0, #3
   1a608:	bic	r2, r0, #3
   1a60c:	add	r6, sp, #8
   1a610:	mov	r0, r6
   1a614:	mov	r1, r5
   1a618:	bl	4d4c <strncpy@plt>
   1a61c:	ldr	r0, [sp, #4]
   1a620:	add	r0, r0, #3
   1a624:	bic	r2, r0, #3
   1a628:	mov	r0, r4
   1a62c:	mov	r1, r6
   1a630:	bl	4ef0 <readstat_write_bytes@plt>
   1a634:	sub	sp, fp, #16
   1a638:	pop	{r4, r5, r6, sl, fp, pc}

0001a63c <sav_emit_variable_missing_values>:
   1a63c:	push	{r4, r5, fp, lr}
   1a640:	add	fp, sp, #8
   1a644:	mov	r4, r1
   1a648:	mov	r5, r0
   1a64c:	ldr	r0, [r1]
   1a650:	cmp	r0, #5
   1a654:	bne	1a668 <sav_emit_variable_missing_values+0x2c>
   1a658:	mov	r0, r5
   1a65c:	mov	r1, r4
   1a660:	pop	{r4, r5, fp, lr}
   1a664:	b	1a908 <sav_emit_variable_missing_double_values>
   1a668:	mov	r0, r4
   1a66c:	bl	4d58 <readstat_variable_get_storage_width@plt>
   1a670:	cmp	r0, #8
   1a674:	bhi	1a688 <sav_emit_variable_missing_values+0x4c>
   1a678:	mov	r0, r5
   1a67c:	mov	r1, r4
   1a680:	pop	{r4, r5, fp, lr}
   1a684:	b	1aaf8 <sav_emit_variable_missing_string_values>
   1a688:	mov	r0, #0
   1a68c:	pop	{r4, r5, fp, pc}

0001a690 <sav_emit_blank_variable_records>:
   1a690:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a694:	add	fp, sp, #28
   1a698:	sub	sp, sp, #36	; 0x24
   1a69c:	mov	r4, r0
   1a6a0:	mov	r0, #2
   1a6a4:	str	r0, [sp, #32]
   1a6a8:	add	r7, r1, #1
   1a6ac:	add	r0, sp, #4
   1a6b0:	add	r6, r0, #20
   1a6b4:	add	r5, r0, #4
   1a6b8:	movw	sl, #7425	; 0x1d01
   1a6bc:	movt	sl, #1
   1a6c0:	mov	r8, #0
   1a6c4:	movw	r9, #8224	; 0x2020
   1a6c8:	movt	r9, #8224	; 0x2020
   1a6cc:	subs	r7, r7, #1
   1a6d0:	beq	1a72c <sav_emit_blank_variable_records+0x9c>
   1a6d4:	mov	r0, r4
   1a6d8:	add	r1, sp, #32
   1a6dc:	mov	r2, #4
   1a6e0:	bl	4ef0 <readstat_write_bytes@plt>
   1a6e4:	cmp	r0, #0
   1a6e8:	bne	1a724 <sav_emit_blank_variable_records+0x94>
   1a6ec:	str	r8, [r5]
   1a6f0:	str	r8, [r5, #4]
   1a6f4:	str	r9, [r6]
   1a6f8:	str	r9, [r6, #4]
   1a6fc:	str	sl, [sp, #20]
   1a700:	mvn	r0, #0
   1a704:	str	r0, [sp, #4]
   1a708:	str	sl, [sp, #16]
   1a70c:	mov	r0, r4
   1a710:	add	r1, sp, #4
   1a714:	mov	r2, #28
   1a718:	bl	4ef0 <readstat_write_bytes@plt>
   1a71c:	cmp	r0, #0
   1a720:	beq	1a6cc <sav_emit_blank_variable_records+0x3c>
   1a724:	sub	sp, fp, #28
   1a728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a72c:	mov	r0, #0
   1a730:	sub	sp, fp, #28
   1a734:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a738 <sav_n_missing_double_values>:
   1a738:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a73c:	add	fp, sp, #28
   1a740:	sub	sp, sp, #44	; 0x2c
   1a744:	mov	r5, r0
   1a748:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   1a74c:	mov	r9, r0
   1a750:	cmp	r0, #1
   1a754:	blt	1a7fc <sav_n_missing_double_values+0xc4>
   1a758:	add	r1, sp, #8
   1a75c:	add	r1, r1, #8
   1a760:	str	r1, [sp, #4]
   1a764:	add	r1, sp, #24
   1a768:	add	r1, r1, #8
   1a76c:	str	r1, [sp]
   1a770:	mov	r6, #0
   1a774:	mov	r8, #0
   1a778:	mov	sl, r9
   1a77c:	add	r0, sp, #24
   1a780:	mov	r1, r5
   1a784:	mov	r2, r6
   1a788:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   1a78c:	add	r0, sp, #8
   1a790:	mov	r1, r5
   1a794:	mov	r2, r6
   1a798:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   1a79c:	ldr	r0, [sp]
   1a7a0:	ldrd	r2, [r0]
   1a7a4:	ldr	r0, [sp, #24]
   1a7a8:	ldr	r1, [sp, #28]
   1a7ac:	bl	4d40 <spss_64bit_value@plt>
   1a7b0:	mov	r7, r0
   1a7b4:	mov	r4, r1
   1a7b8:	ldr	r0, [sp, #4]
   1a7bc:	ldrd	r2, [r0]
   1a7c0:	ldr	r0, [sp, #8]
   1a7c4:	ldr	r1, [sp, #12]
   1a7c8:	bl	4d40 <spss_64bit_value@plt>
   1a7cc:	eor	r1, r4, r1
   1a7d0:	eor	r0, r7, r0
   1a7d4:	orrs	r0, r0, r1
   1a7d8:	movne	r8, #1
   1a7dc:	movwne	r0, #1
   1a7e0:	add	sl, sl, r0
   1a7e4:	add	r6, r6, #1
   1a7e8:	cmp	r9, r6
   1a7ec:	bne	1a77c <sav_n_missing_double_values+0x44>
   1a7f0:	cmp	r8, #0
   1a7f4:	moveq	r9, sl
   1a7f8:	rsbne	r9, sl, #0
   1a7fc:	mov	r0, r9
   1a800:	sub	sp, fp, #28
   1a804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a808 <sav_n_missing_string_values>:
   1a808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a80c:	add	fp, sp, #28
   1a810:	sub	sp, sp, #44	; 0x2c
   1a814:	mov	r5, r0
   1a818:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   1a81c:	mov	sl, r0
   1a820:	cmp	r0, #1
   1a824:	blt	1a8d8 <sav_n_missing_string_values+0xd0>
   1a828:	add	r0, sp, #8
   1a82c:	add	r0, r0, #8
   1a830:	str	r0, [sp, #4]
   1a834:	add	r0, sp, #24
   1a838:	add	r8, r0, #8
   1a83c:	mov	r9, #0
   1a840:	mov	r4, sl
   1a844:	mov	r6, #0
   1a848:	b	1a858 <sav_n_missing_string_values+0x50>
   1a84c:	add	r6, r6, #1
   1a850:	cmp	sl, r6
   1a854:	beq	1a8cc <sav_n_missing_string_values+0xc4>
   1a858:	add	r0, sp, #24
   1a85c:	mov	r1, r5
   1a860:	mov	r2, r6
   1a864:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   1a868:	add	r0, sp, #8
   1a86c:	mov	r1, r5
   1a870:	mov	r2, r6
   1a874:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   1a878:	ldrd	r2, [r8]
   1a87c:	ldr	r0, [sp, #24]
   1a880:	ldr	r1, [sp, #28]
   1a884:	bl	4a10 <readstat_string_value@plt>
   1a888:	mov	r7, r0
   1a88c:	ldr	r0, [sp, #4]
   1a890:	ldrd	r2, [r0]
   1a894:	ldr	r0, [sp, #8]
   1a898:	ldr	r1, [sp, #12]
   1a89c:	bl	4a10 <readstat_string_value@plt>
   1a8a0:	cmp	r7, #0
   1a8a4:	movne	r1, r0
   1a8a8:	cmpne	r0, #0
   1a8ac:	beq	1a84c <sav_n_missing_string_values+0x44>
   1a8b0:	mov	r0, r7
   1a8b4:	bl	4878 <strcmp@plt>
   1a8b8:	cmp	r0, #0
   1a8bc:	movne	r9, #1
   1a8c0:	movwne	r0, #1
   1a8c4:	add	r4, r4, r0
   1a8c8:	b	1a84c <sav_n_missing_string_values+0x44>
   1a8cc:	cmp	r9, #0
   1a8d0:	moveq	sl, r4
   1a8d4:	rsbne	sl, r4, #0
   1a8d8:	mov	r0, sl
   1a8dc:	sub	sp, fp, #28
   1a8e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a8e4 <sav_encode_format>:
   1a8e4:	ldm	r0, {r1, r2}
   1a8e8:	ldr	r0, [r0, #8]
   1a8ec:	lsl	r3, r2, #8
   1a8f0:	uxth	r3, r3
   1a8f4:	cmp	r2, #255	; 0xff
   1a8f8:	movwgt	r3, #65280	; 0xff00
   1a8fc:	orr	r0, r0, r1, lsl #16
   1a900:	orr	r0, r0, r3
   1a904:	bx	lr

0001a908 <sav_emit_variable_missing_double_values>:
   1a908:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a90c:	add	fp, sp, #28
   1a910:	sub	sp, sp, #60	; 0x3c
   1a914:	mov	r4, r1
   1a918:	mov	r9, r0
   1a91c:	mov	r0, r1
   1a920:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   1a924:	cmp	r0, #1
   1a928:	blt	1aaec <sav_emit_variable_missing_double_values+0x1e4>
   1a92c:	mov	r6, r0
   1a930:	add	r0, sp, #24
   1a934:	add	r0, r0, #8
   1a938:	str	r0, [sp, #4]
   1a93c:	add	r0, sp, #40	; 0x28
   1a940:	add	sl, r0, #8
   1a944:	mov	r7, #0
   1a948:	add	r0, sp, #40	; 0x28
   1a94c:	mov	r1, r4
   1a950:	mov	r2, r7
   1a954:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   1a958:	add	r0, sp, #24
   1a95c:	mov	r1, r4
   1a960:	mov	r2, r7
   1a964:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   1a968:	ldrd	r2, [sl]
   1a96c:	ldr	r0, [sp, #40]	; 0x28
   1a970:	ldr	r1, [sp, #44]	; 0x2c
   1a974:	bl	4d40 <spss_64bit_value@plt>
   1a978:	mov	r5, r0
   1a97c:	mov	r8, r1
   1a980:	ldr	r0, [sp, #4]
   1a984:	ldrd	r2, [r0]
   1a988:	ldr	r0, [sp, #24]
   1a98c:	ldr	r1, [sp, #28]
   1a990:	bl	4d40 <spss_64bit_value@plt>
   1a994:	eor	r1, r8, r1
   1a998:	eor	r0, r5, r0
   1a99c:	orrs	r0, r0, r1
   1a9a0:	bne	1aa70 <sav_emit_variable_missing_double_values+0x168>
   1a9a4:	add	r7, r7, #1
   1a9a8:	cmp	r6, r7
   1a9ac:	bne	1a948 <sav_emit_variable_missing_double_values+0x40>
   1a9b0:	str	r9, [sp]
   1a9b4:	mov	r9, #0
   1a9b8:	cmp	r6, #1
   1a9bc:	blt	1aaec <sav_emit_variable_missing_double_values+0x1e4>
   1a9c0:	mov	r7, #0
   1a9c4:	b	1a9d4 <sav_emit_variable_missing_double_values+0xcc>
   1a9c8:	add	r7, r7, #1
   1a9cc:	cmp	r6, r7
   1a9d0:	beq	1aaec <sav_emit_variable_missing_double_values+0x1e4>
   1a9d4:	add	r0, sp, #40	; 0x28
   1a9d8:	mov	r1, r4
   1a9dc:	mov	r2, r7
   1a9e0:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   1a9e4:	add	r0, sp, #24
   1a9e8:	mov	r1, r4
   1a9ec:	mov	r2, r7
   1a9f0:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   1a9f4:	ldrd	r2, [sl]
   1a9f8:	ldr	r0, [sp, #40]	; 0x28
   1a9fc:	ldr	r1, [sp, #44]	; 0x2c
   1aa00:	bl	4d40 <spss_64bit_value@plt>
   1aa04:	mov	r5, r0
   1aa08:	mov	r8, r1
   1aa0c:	ldr	r0, [sp, #4]
   1aa10:	ldrd	r2, [r0]
   1aa14:	ldr	r0, [sp, #24]
   1aa18:	ldr	r1, [sp, #28]
   1aa1c:	bl	4d40 <spss_64bit_value@plt>
   1aa20:	eor	r1, r8, r1
   1aa24:	eor	r0, r5, r0
   1aa28:	orrs	r0, r0, r1
   1aa2c:	bne	1a9c8 <sav_emit_variable_missing_double_values+0xc0>
   1aa30:	ldrd	r2, [sl]
   1aa34:	ldr	r0, [sp, #40]	; 0x28
   1aa38:	ldr	r1, [sp, #44]	; 0x2c
   1aa3c:	bl	4d40 <spss_64bit_value@plt>
   1aa40:	str	r1, [sp, #20]
   1aa44:	str	r0, [sp, #16]
   1aa48:	ldr	r0, [sp]
   1aa4c:	add	r1, sp, #16
   1aa50:	mov	r2, #8
   1aa54:	bl	4ef0 <readstat_write_bytes@plt>
   1aa58:	cmp	r0, #0
   1aa5c:	bne	1aad4 <sav_emit_variable_missing_double_values+0x1cc>
   1aa60:	add	r9, r9, #1
   1aa64:	cmp	r9, #3
   1aa68:	bne	1a9c8 <sav_emit_variable_missing_double_values+0xc0>
   1aa6c:	b	1aad4 <sav_emit_variable_missing_double_values+0x1cc>
   1aa70:	ldrd	r2, [sl]
   1aa74:	ldr	r0, [sp, #40]	; 0x28
   1aa78:	ldr	r1, [sp, #44]	; 0x2c
   1aa7c:	bl	4d40 <spss_64bit_value@plt>
   1aa80:	str	r1, [sp, #20]
   1aa84:	str	r0, [sp, #16]
   1aa88:	add	r1, sp, #16
   1aa8c:	mov	r0, r9
   1aa90:	mov	r2, #8
   1aa94:	bl	4ef0 <readstat_write_bytes@plt>
   1aa98:	cmp	r0, #0
   1aa9c:	bne	1aad4 <sav_emit_variable_missing_double_values+0x1cc>
   1aaa0:	ldr	r0, [sp, #4]
   1aaa4:	ldrd	r2, [r0]
   1aaa8:	ldr	r0, [sp, #24]
   1aaac:	ldr	r1, [sp, #28]
   1aab0:	bl	4d40 <spss_64bit_value@plt>
   1aab4:	str	r1, [sp, #12]
   1aab8:	str	r0, [sp, #8]
   1aabc:	add	r1, sp, #8
   1aac0:	mov	r0, r9
   1aac4:	mov	r2, #8
   1aac8:	bl	4ef0 <readstat_write_bytes@plt>
   1aacc:	cmp	r0, #0
   1aad0:	beq	1aadc <sav_emit_variable_missing_double_values+0x1d4>
   1aad4:	sub	sp, fp, #28
   1aad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aadc:	str	r9, [sp]
   1aae0:	mov	r9, #2
   1aae4:	cmp	r6, #1
   1aae8:	bge	1a9c0 <sav_emit_variable_missing_double_values+0xb8>
   1aaec:	mov	r0, #0
   1aaf0:	sub	sp, fp, #28
   1aaf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001aaf8 <sav_emit_variable_missing_string_values>:
   1aaf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aafc:	add	fp, sp, #28
   1ab00:	sub	sp, sp, #44	; 0x2c
   1ab04:	mov	r4, r1
   1ab08:	mov	r5, r0
   1ab0c:	mov	r0, r1
   1ab10:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   1ab14:	cmp	r0, #1
   1ab18:	blt	1aca4 <sav_emit_variable_missing_string_values+0x1ac>
   1ab1c:	mov	r6, r0
   1ab20:	str	r5, [sp, #4]
   1ab24:	add	r0, sp, #8
   1ab28:	add	r9, r0, #8
   1ab2c:	add	r0, sp, #24
   1ab30:	add	sl, r0, #8
   1ab34:	mov	r7, #0
   1ab38:	b	1ab48 <sav_emit_variable_missing_string_values+0x50>
   1ab3c:	add	r7, r7, #1
   1ab40:	cmp	r6, r7
   1ab44:	beq	1abf4 <sav_emit_variable_missing_string_values+0xfc>
   1ab48:	add	r0, sp, #24
   1ab4c:	mov	r1, r4
   1ab50:	mov	r2, r7
   1ab54:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   1ab58:	add	r0, sp, #8
   1ab5c:	mov	r1, r4
   1ab60:	mov	r2, r7
   1ab64:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   1ab68:	ldrd	r2, [sl]
   1ab6c:	ldr	r0, [sp, #24]
   1ab70:	ldr	r1, [sp, #28]
   1ab74:	bl	4a10 <readstat_string_value@plt>
   1ab78:	mov	r8, r0
   1ab7c:	ldrd	r2, [r9]
   1ab80:	ldr	r0, [sp, #8]
   1ab84:	ldr	r1, [sp, #12]
   1ab88:	bl	4a10 <readstat_string_value@plt>
   1ab8c:	cmp	r8, #0
   1ab90:	movne	r5, r0
   1ab94:	cmpne	r0, #0
   1ab98:	beq	1ab3c <sav_emit_variable_missing_string_values+0x44>
   1ab9c:	mov	r0, r8
   1aba0:	mov	r1, r5
   1aba4:	bl	4878 <strcmp@plt>
   1aba8:	cmp	r0, #0
   1abac:	beq	1ab3c <sav_emit_variable_missing_string_values+0x44>
   1abb0:	ldr	r7, [sp, #4]
   1abb4:	mov	r0, r7
   1abb8:	mov	r1, r8
   1abbc:	mov	r2, #8
   1abc0:	bl	4fec <readstat_write_space_padded_string@plt>
   1abc4:	cmp	r0, #0
   1abc8:	bne	1ac9c <sav_emit_variable_missing_string_values+0x1a4>
   1abcc:	mov	r0, r7
   1abd0:	mov	r1, r5
   1abd4:	mov	r2, #8
   1abd8:	bl	4fec <readstat_write_space_padded_string@plt>
   1abdc:	cmp	r0, #0
   1abe0:	bne	1ac9c <sav_emit_variable_missing_string_values+0x1a4>
   1abe4:	mov	r8, #2
   1abe8:	cmp	r6, #1
   1abec:	bge	1ac00 <sav_emit_variable_missing_string_values+0x108>
   1abf0:	b	1aca4 <sav_emit_variable_missing_string_values+0x1ac>
   1abf4:	mov	r8, #0
   1abf8:	cmp	r6, #1
   1abfc:	blt	1aca4 <sav_emit_variable_missing_string_values+0x1ac>
   1ac00:	mov	r7, #0
   1ac04:	b	1ac14 <sav_emit_variable_missing_string_values+0x11c>
   1ac08:	add	r7, r7, #1
   1ac0c:	cmp	r6, r7
   1ac10:	beq	1aca4 <sav_emit_variable_missing_string_values+0x1ac>
   1ac14:	add	r0, sp, #24
   1ac18:	mov	r1, r4
   1ac1c:	mov	r2, r7
   1ac20:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   1ac24:	add	r0, sp, #8
   1ac28:	mov	r1, r4
   1ac2c:	mov	r2, r7
   1ac30:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   1ac34:	ldrd	r2, [sl]
   1ac38:	ldr	r0, [sp, #24]
   1ac3c:	ldr	r1, [sp, #28]
   1ac40:	bl	4a10 <readstat_string_value@plt>
   1ac44:	mov	r5, r0
   1ac48:	ldrd	r2, [r9]
   1ac4c:	ldr	r0, [sp, #8]
   1ac50:	ldr	r1, [sp, #12]
   1ac54:	bl	4a10 <readstat_string_value@plt>
   1ac58:	cmp	r5, #0
   1ac5c:	movne	r1, r0
   1ac60:	cmpne	r0, #0
   1ac64:	beq	1ac08 <sav_emit_variable_missing_string_values+0x110>
   1ac68:	mov	r0, r5
   1ac6c:	bl	4878 <strcmp@plt>
   1ac70:	cmp	r0, #0
   1ac74:	bne	1ac08 <sav_emit_variable_missing_string_values+0x110>
   1ac78:	ldr	r0, [sp, #4]
   1ac7c:	mov	r1, r5
   1ac80:	mov	r2, #8
   1ac84:	bl	4fec <readstat_write_space_padded_string@plt>
   1ac88:	cmp	r0, #0
   1ac8c:	bne	1ac9c <sav_emit_variable_missing_string_values+0x1a4>
   1ac90:	add	r8, r8, #1
   1ac94:	cmp	r8, #3
   1ac98:	bne	1ac08 <sav_emit_variable_missing_string_values+0x110>
   1ac9c:	sub	sp, fp, #28
   1aca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aca4:	mov	r0, #0
   1aca8:	sub	sp, fp, #28
   1acac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001acb0 <sav_format_ghost_variable_name>:
   1acb0:	push	{r4, r5, fp, lr}
   1acb4:	add	fp, sp, #8
   1acb8:	mov	r4, r2
   1acbc:	mov	r5, r0
   1acc0:	add	r3, r1, #9
   1acc4:	ldr	r2, [pc, #68]	; 1ad10 <sav_format_ghost_variable_name+0x60>
   1acc8:	add	r2, pc, r2
   1accc:	mov	r1, #9
   1acd0:	bl	4d04 <snprintf@plt>
   1acd4:	movw	r0, #36409	; 0x8e39
   1acd8:	movt	r0, #14563	; 0x38e3
   1acdc:	umull	r0, r1, r4, r0
   1ace0:	lsr	r0, r1, #3
   1ace4:	add	r0, r0, r0, lsl #3
   1ace8:	sub	r0, r4, r0, lsl #2
   1acec:	mov	r1, #55	; 0x37
   1acf0:	cmp	r0, #10
   1acf4:	movwcc	r1, #48	; 0x30
   1acf8:	add	r4, r1, r0
   1acfc:	mov	r0, r5
   1ad00:	bl	4c8c <strlen@plt>
   1ad04:	strb	r4, [r5, r0]
   1ad08:	add	r0, r0, #1
   1ad0c:	pop	{r4, r5, fp, pc}
   1ad10:	.word	0x0000bdc4

0001ad14 <sav_encode_ghost_variable_format>:
   1ad14:	push	{r4, r5, r6, sl, fp, lr}
   1ad18:	add	fp, sp, #16
   1ad1c:	sub	sp, sp, #16
   1ad20:	mov	r4, r2
   1ad24:	mov	r6, r1
   1ad28:	add	r1, sp, #4
   1ad2c:	bl	4b6c <spss_format_for_variable@plt>
   1ad30:	mov	r5, r0
   1ad34:	str	r6, [sp, #8]
   1ad38:	cmp	r4, #0
   1ad3c:	beq	1ad54 <sav_encode_ghost_variable_format+0x40>
   1ad40:	cmp	r5, #0
   1ad44:	bne	1ad54 <sav_encode_ghost_variable_format+0x40>
   1ad48:	add	r0, sp, #4
   1ad4c:	bl	1a8e4 <sav_encode_format>
   1ad50:	str	r0, [r4]
   1ad54:	mov	r0, r5
   1ad58:	sub	sp, fp, #16
   1ad5c:	pop	{r4, r5, r6, sl, fp, pc}

0001ad60 <readstat_label_set_needs_short_value_labels_record>:
   1ad60:	push	{fp, lr}
   1ad64:	mov	fp, sp
   1ad68:	bl	1ad80 <readstat_label_set_number_short_variables>
   1ad6c:	mov	r1, #0
   1ad70:	cmp	r0, #0
   1ad74:	movwgt	r1, #1
   1ad78:	mov	r0, r1
   1ad7c:	pop	{fp, pc}

0001ad80 <readstat_label_set_number_short_variables>:
   1ad80:	push	{r4, r5, r6, sl, fp, lr}
   1ad84:	add	fp, sp, #16
   1ad88:	mov	r4, r0
   1ad8c:	ldr	r0, [r0, #276]	; 0x114
   1ad90:	mov	r5, #0
   1ad94:	cmp	r0, #1
   1ad98:	blt	1adc8 <readstat_label_set_number_short_variables+0x48>
   1ad9c:	mov	r6, #0
   1ada0:	mov	r0, r4
   1ada4:	mov	r1, r6
   1ada8:	bl	4ee4 <readstat_get_label_set_variable@plt>
   1adac:	ldr	r0, [r0, #1596]	; 0x63c
   1adb0:	cmp	r0, #9
   1adb4:	addcc	r5, r5, #1
   1adb8:	add	r6, r6, #1
   1adbc:	ldr	r0, [r4, #276]	; 0x114
   1adc0:	cmp	r6, r0
   1adc4:	blt	1ada0 <readstat_label_set_number_short_variables+0x20>
   1adc8:	mov	r0, r5
   1adcc:	pop	{r4, r5, r6, sl, fp, pc}

0001add0 <readstat_label_set_needs_long_value_labels_record>:
   1add0:	push	{r4, sl, fp, lr}
   1add4:	add	fp, sp, #8
   1add8:	mov	r4, r0
   1addc:	bl	1ad80 <readstat_label_set_number_short_variables>
   1ade0:	ldr	r2, [r4, #276]	; 0x114
   1ade4:	mov	r1, #0
   1ade8:	cmp	r0, r2
   1adec:	movwlt	r1, #1
   1adf0:	mov	r0, r1
   1adf4:	pop	{r4, sl, fp, pc}

0001adf8 <spss_format>:
   1adf8:	push	{r4, sl, fp, lr}
   1adfc:	add	fp, sp, #8
   1ae00:	sub	sp, sp, #8
   1ae04:	ldr	lr, [r2]
   1ae08:	mov	ip, #0
   1ae0c:	cmp	lr, #41	; 0x29
   1ae10:	bhi	1ae7c <spss_format+0x84>
   1ae14:	ldr	r3, [pc, #108]	; 1ae88 <spss_format+0x90>
   1ae18:	add	r3, pc, r3
   1ae1c:	ldrb	r4, [r3, lr, lsl #4]!
   1ae20:	cmp	r4, #0
   1ae24:	beq	1ae7c <spss_format+0x84>
   1ae28:	ldr	ip, [r2, #4]
   1ae2c:	ldr	r2, [r2, #8]
   1ae30:	cmp	lr, #5
   1ae34:	beq	1ae58 <spss_format+0x60>
   1ae38:	cmp	r2, #0
   1ae3c:	bne	1ae58 <spss_format+0x60>
   1ae40:	cmp	ip, #0
   1ae44:	beq	1ae6c <spss_format+0x74>
   1ae48:	str	ip, [sp]
   1ae4c:	ldr	r2, [pc, #60]	; 1ae90 <spss_format+0x98>
   1ae50:	add	r2, pc, r2
   1ae54:	b	1ae74 <spss_format+0x7c>
   1ae58:	str	ip, [sp]
   1ae5c:	str	r2, [sp, #4]
   1ae60:	ldr	r2, [pc, #36]	; 1ae8c <spss_format+0x94>
   1ae64:	add	r2, pc, r2
   1ae68:	b	1ae74 <spss_format+0x7c>
   1ae6c:	ldr	r2, [pc, #32]	; 1ae94 <spss_format+0x9c>
   1ae70:	add	r2, pc, r2
   1ae74:	bl	4d04 <snprintf@plt>
   1ae78:	mov	ip, #1
   1ae7c:	mov	r0, ip
   1ae80:	sub	sp, fp, #8
   1ae84:	pop	{r4, sl, fp, pc}
   1ae88:	.word	0x0002bc6c
   1ae8c:	.word	0x0000b036
   1ae90:	.word	0x0000b052
   1ae94:	.word	0x0000bc1c

0001ae98 <spss_varinfo_compare>:
   1ae98:	ldr	r2, [r0]
   1ae9c:	ldr	r0, [r1]
   1aea0:	ldr	r1, [r0, #12]
   1aea4:	mov	r0, #0
   1aea8:	cmp	r2, r1
   1aeac:	movwgt	r0, #1
   1aeb0:	mvnlt	r0, #0
   1aeb4:	bx	lr

0001aeb8 <spss_varinfo_free>:
   1aeb8:	cmp	r0, #0
   1aebc:	bxeq	lr
   1aec0:	push	{r4, sl, fp, lr}
   1aec4:	add	fp, sp, #8
   1aec8:	mov	r4, r0
   1aecc:	ldr	r0, [r0, #264]	; 0x108
   1aed0:	cmp	r0, #0
   1aed4:	beq	1aedc <spss_varinfo_free+0x24>
   1aed8:	bl	4938 <free@plt>
   1aedc:	mov	r0, r4
   1aee0:	pop	{r4, sl, fp, lr}
   1aee4:	b	4938 <free@plt>

0001aee8 <spss_64bit_value>:
   1aee8:	push	{r4, r5, r6, r7, fp, lr}
   1aeec:	add	fp, sp, #16
   1aef0:	vpush	{d8}
   1aef4:	bl	4c38 <readstat_double_value@plt>
   1aef8:	vmov.f64	d8, d0
   1aefc:	bl	4a58 <__isinf@plt>
   1af00:	mov	r1, r0
   1af04:	mvn	r2, #1048576	; 0x100000
   1af08:	mvn	r0, #1
   1af0c:	cmp	r1, #0
   1af10:	beq	1af34 <spss_64bit_value+0x4c>
   1af14:	vcmpe.f64	d8, #0.0
   1af18:	vmrs	APSR_nzcv, fpscr
   1af1c:	mvnpl	r0, #0
   1af20:	movw	r1, #65535	; 0xffff
   1af24:	movt	r1, #32751	; 0x7fef
   1af28:	movmi	r1, r2
   1af2c:	vpop	{d8}
   1af30:	pop	{r4, r5, r6, r7, fp, pc}
   1af34:	adds	r6, r0, #1
   1af38:	adc	r7, r2, #0
   1af3c:	vmov	r4, r5, d8
   1af40:	vmov.f64	d0, d8
   1af44:	bl	4db8 <__isnan@plt>
   1af48:	cmp	r0, #0
   1af4c:	movne	r4, r6
   1af50:	movne	r5, r7
   1af54:	mov	r0, r4
   1af58:	mov	r1, r5
   1af5c:	vpop	{d8}
   1af60:	pop	{r4, r5, r6, r7, fp, pc}

0001af64 <spss_missingness_for_info>:
   1af64:	push	{r4, r5, r6, r7, fp, lr}
   1af68:	add	fp, sp, #16
   1af6c:	sub	sp, sp, #16
   1af70:	mov	r5, r1
   1af74:	mov	r4, r0
   1af78:	mov	r1, #0
   1af7c:	mov	r2, #520	; 0x208
   1af80:	bl	4d28 <memset@plt>
   1af84:	ldr	r0, [r5, #56]	; 0x38
   1af88:	cmp	r0, #0
   1af8c:	beq	1b010 <spss_missingness_for_info+0xac>
   1af90:	ldr	r7, [r4, #512]	; 0x200
   1af94:	add	r0, r7, #1
   1af98:	str	r0, [r4, #512]	; 0x200
   1af9c:	mov	r0, r4
   1afa0:	mov	r1, r5
   1afa4:	mov	r2, #0
   1afa8:	bl	1b074 <spss_boxed_missing_value>
   1afac:	mov	r6, sp
   1afb0:	mov	r0, r6
   1afb4:	mov	r1, r5
   1afb8:	mov	r2, #1
   1afbc:	bl	1b074 <spss_boxed_missing_value>
   1afc0:	vld1.64	{d16-d17}, [r6]
   1afc4:	add	r0, r4, #16
   1afc8:	vst1.64	{d16-d17}, [r0]
   1afcc:	ldr	r0, [r5, #52]	; 0x34
   1afd0:	cmp	r0, #3
   1afd4:	bne	1b06c <spss_missingness_for_info+0x108>
   1afd8:	add	r0, r7, #2
   1afdc:	str	r0, [r4, #512]	; 0x200
   1afe0:	mov	r0, r6
   1afe4:	mov	r1, r5
   1afe8:	mov	r2, #2
   1afec:	bl	1b074 <spss_boxed_missing_value>
   1aff0:	vld1.64	{d16-d17}, [r6]
   1aff4:	add	r0, r4, #48	; 0x30
   1aff8:	vst1.64	{d16-d17}, [r0]
   1affc:	vld1.64	{d16-d17}, [r0]
   1b000:	add	r0, r4, #32
   1b004:	vst1.64	{d16-d17}, [r0]
   1b008:	sub	sp, fp, #16
   1b00c:	pop	{r4, r5, r6, r7, fp, pc}
   1b010:	ldr	r0, [r5, #52]	; 0x34
   1b014:	cmp	r0, #1
   1b018:	blt	1b06c <spss_missingness_for_info+0x108>
   1b01c:	str	r0, [r4, #512]	; 0x200
   1b020:	ldr	r0, [r5, #52]	; 0x34
   1b024:	cmp	r0, #1
   1b028:	blt	1b06c <spss_missingness_for_info+0x108>
   1b02c:	mov	r6, #0
   1b030:	mov	r7, sp
   1b034:	mov	r0, r7
   1b038:	mov	r1, r5
   1b03c:	mov	r2, r6
   1b040:	bl	1b074 <spss_boxed_missing_value>
   1b044:	vld1.64	{d16-d17}, [r7]
   1b048:	add	r0, r4, r6, lsl #5
   1b04c:	add	r1, r0, #16
   1b050:	vst1.64	{d16-d17}, [r1]
   1b054:	vld1.64	{d16-d17}, [r1]
   1b058:	vst1.64	{d16-d17}, [r0]
   1b05c:	add	r6, r6, #1
   1b060:	ldr	r0, [r5, #52]	; 0x34
   1b064:	cmp	r6, r0
   1b068:	blt	1b034 <spss_missingness_for_info+0xd0>
   1b06c:	sub	sp, fp, #16
   1b070:	pop	{r4, r5, r6, r7, fp, pc}

0001b074 <spss_boxed_missing_value>:
   1b074:	push	{fp, lr}
   1b078:	mov	fp, sp
   1b07c:	ldr	r3, [r1]
   1b080:	cmp	r3, #5
   1b084:	bne	1b098 <spss_boxed_missing_value+0x24>
   1b088:	add	r1, r1, r2, lsl #3
   1b08c:	vldr	d0, [r1, #64]	; 0x40
   1b090:	bl	1b2d0 <spss_boxed_double_value>
   1b094:	pop	{fp, pc}
   1b098:	add	r2, r2, r2, lsl #5
   1b09c:	add	r1, r1, r2
   1b0a0:	add	r1, r1, #88	; 0x58
   1b0a4:	bl	1b30c <spss_boxed_string_value>
   1b0a8:	pop	{fp, pc}

0001b0ac <spss_init_variable_for_info>:
   1b0ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b0b0:	add	fp, sp, #24
   1b0b4:	sub	sp, sp, #528	; 0x210
   1b0b8:	mov	r6, r2
   1b0bc:	mov	r7, r1
   1b0c0:	mov	r4, r0
   1b0c4:	mov	r0, #1
   1b0c8:	movw	r1, #2152	; 0x868
   1b0cc:	bl	47d0 <calloc@plt>
   1b0d0:	mov	r5, r0
   1b0d4:	ldr	r1, [r4, #8]
   1b0d8:	str	r7, [r0, #2148]	; 0x864
   1b0dc:	ldr	r0, [r4]
   1b0e0:	strd	r0, [r5]
   1b0e4:	ldr	r0, [r4, #20]
   1b0e8:	cmp	r0, #0
   1b0ec:	bne	1b0f8 <spss_init_variable_for_info+0x4c>
   1b0f0:	ldr	r0, [r4, #16]
   1b0f4:	lsl	r0, r0, #3
   1b0f8:	str	r0, [r5, #1596]	; 0x63c
   1b0fc:	add	r0, r5, #8
   1b100:	mov	r2, r4
   1b104:	ldrb	r1, [r2, #196]!	; 0xc4
   1b108:	cmp	r1, #0
   1b10c:	beq	1b120 <spss_init_variable_for_info+0x74>
   1b110:	str	r6, [sp]
   1b114:	mov	r1, #300	; 0x12c
   1b118:	mov	r3, #65	; 0x41
   1b11c:	b	1b130 <spss_init_variable_for_info+0x84>
   1b120:	str	r6, [sp]
   1b124:	add	r2, r4, #187	; 0xbb
   1b128:	mov	r1, #300	; 0x12c
   1b12c:	mov	r3, #9
   1b130:	bl	4cbc <readstat_convert@plt>
   1b134:	ldr	r3, [r4, #264]	; 0x108
   1b138:	cmp	r3, #0
   1b13c:	beq	1b154 <spss_init_variable_for_info+0xa8>
   1b140:	add	r0, r5, #564	; 0x234
   1b144:	ldr	r2, [pc, #96]	; 1b1ac <spss_init_variable_for_info+0x100>
   1b148:	add	r2, pc, r2
   1b14c:	mov	r1, #1024	; 0x400
   1b150:	bl	4d04 <snprintf@plt>
   1b154:	add	r0, r5, #308	; 0x134
   1b158:	add	r2, r4, #24
   1b15c:	mov	r1, #256	; 0x100
   1b160:	bl	4ea8 <spss_format@plt>
   1b164:	add	r6, sp, #8
   1b168:	mov	r0, r6
   1b16c:	mov	r1, r4
   1b170:	bl	4fc8 <spss_missingness_for_info@plt>
   1b174:	movw	r0, #1608	; 0x648
   1b178:	add	r0, r5, r0
   1b17c:	mov	r1, r6
   1b180:	mov	r2, #520	; 0x208
   1b184:	bl	4998 <memcpy@plt>
   1b188:	ldr	r0, [r4, #268]	; 0x10c
   1b18c:	str	r0, [r5, #2128]	; 0x850
   1b190:	ldr	r0, [r4, #276]	; 0x114
   1b194:	cmp	r0, #0
   1b198:	ldreq	r0, [r4, #28]
   1b19c:	str	r0, [r5, #2136]	; 0x858
   1b1a0:	mov	r0, r5
   1b1a4:	sub	sp, fp, #24
   1b1a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b1ac:	.word	0x0000b944

0001b1b0 <spss_measure_from_readstat_measure>:
   1b1b0:	sub	r1, r0, #1
   1b1b4:	cmp	r1, #3
   1b1b8:	movcs	r0, #0
   1b1bc:	bx	lr

0001b1c0 <spss_measure_to_readstat_measure>:
   1b1c0:	sub	r1, r0, #1
   1b1c4:	cmp	r1, #3
   1b1c8:	movcs	r0, #0
   1b1cc:	bx	lr

0001b1d0 <spss_alignment_from_readstat_alignment>:
   1b1d0:	sub	r1, r0, #2
   1b1d4:	clz	r1, r1
   1b1d8:	lsr	r1, r1, #5
   1b1dc:	lsl	r1, r1, #1
   1b1e0:	cmp	r0, #3
   1b1e4:	movweq	r1, #1
   1b1e8:	mov	r0, r1
   1b1ec:	bx	lr

0001b1f0 <spss_alignment_to_readstat_alignment>:
   1b1f0:	cmp	r0, #2
   1b1f4:	movhi	r0, #0
   1b1f8:	bxhi	lr
   1b1fc:	ldr	r1, [pc, #8]	; 1b20c <spss_alignment_to_readstat_alignment+0x1c>
   1b200:	add	r1, pc, r1
   1b204:	ldr	r0, [r1, r0, lsl #2]
   1b208:	bx	lr
   1b20c:	.word	0x0000bdb0

0001b210 <spss_format_for_variable>:
   1b210:	push	{r4, r5, fp, lr}
   1b214:	add	fp, sp, #8
   1b218:	mov	r4, r1
   1b21c:	mov	r5, r0
   1b220:	mov	r0, #0
   1b224:	str	r0, [r1]
   1b228:	str	r0, [r1, #4]
   1b22c:	str	r0, [r1, #8]
   1b230:	ldr	r0, [r5]
   1b234:	cmp	r0, #0
   1b238:	beq	1b268 <spss_format_for_variable+0x58>
   1b23c:	mov	r1, #5
   1b240:	str	r1, [r4]
   1b244:	ldr	r1, [r5, #2136]	; 0x858
   1b248:	cmp	r1, #0
   1b24c:	movweq	r1, #8
   1b250:	str	r1, [r4, #4]
   1b254:	bic	r0, r0, #1
   1b258:	cmp	r0, #4
   1b25c:	moveq	r0, #2
   1b260:	streq	r0, [r4, #8]
   1b264:	b	1b290 <spss_format_for_variable+0x80>
   1b268:	mov	r0, #1
   1b26c:	str	r0, [r4]
   1b270:	ldr	r0, [r5, #2136]	; 0x858
   1b274:	cmp	r0, #0
   1b278:	bne	1b28c <spss_format_for_variable+0x7c>
   1b27c:	ldr	r0, [r5, #1600]	; 0x640
   1b280:	cmp	r0, #0
   1b284:	bne	1b28c <spss_format_for_variable+0x7c>
   1b288:	ldr	r0, [r5, #1596]	; 0x63c
   1b28c:	str	r0, [r4, #4]
   1b290:	ldrb	r0, [r5, #308]!	; 0x134
   1b294:	cmp	r0, #0
   1b298:	beq	1b2c8 <spss_format_for_variable+0xb8>
   1b29c:	mov	r0, #0
   1b2a0:	str	r0, [r4, #8]
   1b2a4:	mov	r0, r5
   1b2a8:	bl	4c8c <strlen@plt>
   1b2ac:	mov	r1, r0
   1b2b0:	mov	r0, r5
   1b2b4:	mov	r2, r4
   1b2b8:	bl	49a4 <spss_parse_format@plt>
   1b2bc:	cmp	r0, #0
   1b2c0:	movwne	r0, #11
   1b2c4:	pop	{r4, r5, fp, pc}
   1b2c8:	mov	r0, #0
   1b2cc:	pop	{r4, r5, fp, pc}

0001b2d0 <spss_boxed_double_value>:
   1b2d0:	push	{r4, sl, fp, lr}
   1b2d4:	add	fp, sp, #8
   1b2d8:	mov	r4, r0
   1b2dc:	mov	r0, #0
   1b2e0:	strb	r0, [r4, #12]
   1b2e4:	mov	r0, #5
   1b2e8:	str	r0, [r4, #8]
   1b2ec:	vstr	d0, [r4]
   1b2f0:	bl	4db8 <__isnan@plt>
   1b2f4:	and	r0, r0, #1
   1b2f8:	ldrb	r1, [r4, #13]
   1b2fc:	and	r1, r1, #252	; 0xfc
   1b300:	orr	r0, r1, r0
   1b304:	strb	r0, [r4, #13]
   1b308:	pop	{r4, sl, fp, pc}

0001b30c <spss_boxed_string_value>:
   1b30c:	mov	r2, #0
   1b310:	strb	r2, [r0, #12]
   1b314:	str	r2, [r0, #8]
   1b318:	str	r1, [r0]
   1b31c:	ldrb	r1, [r0, #13]
   1b320:	and	r1, r1, #252	; 0xfc
   1b324:	strb	r1, [r0, #13]
   1b328:	bx	lr

0001b32c <spss_parse_format>:
   1b32c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b330:	add	fp, sp, #28
   1b334:	sub	sp, sp, #8
   1b338:	add	r3, r0, r1
   1b33c:	str	r3, [sp]
   1b340:	mov	lr, #0
   1b344:	mov	sl, #1
   1b348:	cmp	r1, #0
   1b34c:	beq	1b7a8 <spss_parse_format+0x47c>
   1b350:	ldr	r1, [pc, #1860]	; 1ba9c <spss_parse_format+0x770>
   1b354:	add	r1, pc, r1
   1b358:	ldrb	r6, [r1, sl]
   1b35c:	ldr	r1, [pc, #1852]	; 1baa0 <spss_parse_format+0x774>
   1b360:	add	r1, pc, r1
   1b364:	add	r1, r1, sl, lsl #1
   1b368:	ldrsh	r1, [r1]
   1b36c:	ldr	r3, [pc, #1840]	; 1baa4 <spss_parse_format+0x778>
   1b370:	add	r3, pc, r3
   1b374:	add	r5, r3, r1
   1b378:	ldr	r1, [pc, #1832]	; 1baa8 <spss_parse_format+0x77c>
   1b37c:	add	r1, pc, r1
   1b380:	add	r1, r1, sl, lsl #1
   1b384:	ldrsh	r9, [r1]
   1b388:	cmp	r6, #0
   1b38c:	beq	1b3ec <spss_parse_format+0xc0>
   1b390:	str	lr, [sp, #4]
   1b394:	add	ip, r5, r6
   1b398:	sub	lr, ip, #1
   1b39c:	cmp	lr, r5
   1b3a0:	bcc	1b3e0 <spss_parse_format+0xb4>
   1b3a4:	ldrb	r3, [r0]
   1b3a8:	mov	r1, r5
   1b3ac:	b	1b3bc <spss_parse_format+0x90>
   1b3b0:	sub	lr, r7, #1
   1b3b4:	cmp	lr, r1
   1b3b8:	bcc	1b3e0 <spss_parse_format+0xb4>
   1b3bc:	sub	r8, lr, r1
   1b3c0:	mov	r7, r1
   1b3c4:	ldrb	r4, [r7, r8, asr #1]!
   1b3c8:	cmp	r3, r4
   1b3cc:	bcc	1b3b0 <spss_parse_format+0x84>
   1b3d0:	bls	1b470 <spss_parse_format+0x144>
   1b3d4:	add	r1, r7, #1
   1b3d8:	cmp	lr, r1
   1b3dc:	bcs	1b3bc <spss_parse_format+0x90>
   1b3e0:	add	r9, r6, r9
   1b3e4:	ldr	lr, [sp, #4]
   1b3e8:	b	1b3f0 <spss_parse_format+0xc4>
   1b3ec:	mov	ip, r5
   1b3f0:	ldr	r1, [pc, #1716]	; 1baac <spss_parse_format+0x780>
   1b3f4:	add	r1, pc, r1
   1b3f8:	ldrb	r8, [r1, sl]
   1b3fc:	cmp	r8, #0
   1b400:	beq	1b464 <spss_parse_format+0x138>
   1b404:	add	r1, ip, r8, lsl #1
   1b408:	sub	r5, r1, #2
   1b40c:	cmp	r5, ip
   1b410:	mvn	r6, #1
   1b414:	bcc	1b490 <spss_parse_format+0x164>
   1b418:	ldrb	r3, [r0]
   1b41c:	mov	r7, ip
   1b420:	b	1b430 <spss_parse_format+0x104>
   1b424:	sub	r5, r1, #2
   1b428:	cmp	r5, r7
   1b42c:	bcc	1b490 <spss_parse_format+0x164>
   1b430:	sub	r1, r5, r7
   1b434:	and	r4, r6, r1, asr #1
   1b438:	mov	r1, r7
   1b43c:	ldrb	r4, [r1, r4]!
   1b440:	cmp	r3, r4
   1b444:	bcc	1b424 <spss_parse_format+0xf8>
   1b448:	ldrb	r7, [r1, #1]
   1b44c:	cmp	r3, r7
   1b450:	bls	1b488 <spss_parse_format+0x15c>
   1b454:	add	r7, r1, #2
   1b458:	cmp	r5, r7
   1b45c:	bcs	1b430 <spss_parse_format+0x104>
   1b460:	b	1b490 <spss_parse_format+0x164>
   1b464:	ldr	r3, [pc, #1604]	; 1bab0 <spss_parse_format+0x784>
   1b468:	add	r3, pc, r3
   1b46c:	b	1b49c <spss_parse_format+0x170>
   1b470:	sub	r1, r9, r5
   1b474:	add	r9, r1, r7
   1b478:	ldr	lr, [sp, #4]
   1b47c:	ldr	r3, [pc, #1608]	; 1bacc <spss_parse_format+0x7a0>
   1b480:	add	r3, pc, r3
   1b484:	b	1b49c <spss_parse_format+0x170>
   1b488:	sub	r1, r1, ip
   1b48c:	asr	r8, r1, #1
   1b490:	ldr	r3, [pc, #1564]	; 1bab4 <spss_parse_format+0x788>
   1b494:	add	r3, pc, r3
   1b498:	add	r9, r8, r9
   1b49c:	ldr	r1, [pc, #1556]	; 1bab8 <spss_parse_format+0x78c>
   1b4a0:	add	r1, pc, r1
   1b4a4:	ldrb	r5, [r1, r9]
   1b4a8:	ldr	r1, [pc, #1548]	; 1babc <spss_parse_format+0x790>
   1b4ac:	add	r1, pc, r1
   1b4b0:	ldrb	r1, [r1, r5]
   1b4b4:	cmp	r1, #0
   1b4b8:	beq	1b784 <spss_parse_format+0x458>
   1b4bc:	ldrb	r6, [r3, r1]
   1b4c0:	cmp	r6, #0
   1b4c4:	beq	1b784 <spss_parse_format+0x458>
   1b4c8:	add	r1, r3, r1
   1b4cc:	add	r4, r1, #1
   1b4d0:	b	1b4f0 <spss_parse_format+0x1c4>
   1b4d4:	mov	r1, #10
   1b4d8:	mov	r3, #39	; 0x27
   1b4dc:	str	r3, [r2]
   1b4e0:	str	r1, [r2, #4]
   1b4e4:	add	r4, r4, #1
   1b4e8:	cmp	r6, #0
   1b4ec:	beq	1b784 <spss_parse_format+0x458>
   1b4f0:	sub	r6, r6, #1
   1b4f4:	ldrb	r1, [r4]
   1b4f8:	cmp	r1, #40	; 0x28
   1b4fc:	bhi	1b4e4 <spss_parse_format+0x1b8>
   1b500:	add	r3, pc, #4
   1b504:	ldr	r1, [r3, r1, lsl #2]
   1b508:	add	pc, r3, r1
   1b50c:	.word	0x000000a4
   1b510:	.word	0x000000ac
   1b514:	.word	0x000000c0
   1b518:	.word	0xffffffd8
   1b51c:	.word	0x000000c8
   1b520:	.word	0x000000d4
   1b524:	.word	0x000000e0
   1b528:	.word	0x000000ec
   1b52c:	.word	0x000000f8
   1b530:	.word	0x00000104
   1b534:	.word	0x00000110
   1b538:	.word	0x0000011c
   1b53c:	.word	0x00000128
   1b540:	.word	0x00000134
   1b544:	.word	0x00000140
   1b548:	.word	0x0000014c
   1b54c:	.word	0x00000158
   1b550:	.word	0x00000164
   1b554:	.word	0x00000170
   1b558:	.word	0x0000017c
   1b55c:	.word	0x00000188
   1b560:	.word	0x00000194
   1b564:	.word	0x000001a0
   1b568:	.word	0x000001ac
   1b56c:	.word	0x000001b8
   1b570:	.word	0x000001c4
   1b574:	.word	0x000001d0
   1b578:	.word	0x000001dc
   1b57c:	.word	0x000001e8
   1b580:	.word	0x000001f4
   1b584:	.word	0x00000200
   1b588:	.word	0x0000020c
   1b58c:	.word	0x00000218
   1b590:	.word	0x00000224
   1b594:	.word	0x00000230
   1b598:	.word	0x0000023c
   1b59c:	.word	0x00000248
   1b5a0:	.word	0x00000254
   1b5a4:	.word	0x00000260
   1b5a8:	.word	0x0000026c
   1b5ac:	.word	0xffffffc8
   1b5b0:	mov	lr, #0
   1b5b4:	b	1b4e4 <spss_parse_format+0x1b8>
   1b5b8:	ldrb	r1, [r0]
   1b5bc:	add	r3, lr, lr, lsl #2
   1b5c0:	add	r1, r1, r3, lsl #1
   1b5c4:	sub	lr, r1, #48	; 0x30
   1b5c8:	b	1b4e4 <spss_parse_format+0x1b8>
   1b5cc:	str	lr, [r2, #4]
   1b5d0:	b	1b4e4 <spss_parse_format+0x1b8>
   1b5d4:	mov	r1, #1
   1b5d8:	str	r1, [r2]
   1b5dc:	b	1b4e4 <spss_parse_format+0x1b8>
   1b5e0:	mov	r1, #2
   1b5e4:	str	r1, [r2]
   1b5e8:	b	1b4e4 <spss_parse_format+0x1b8>
   1b5ec:	mov	r1, #3
   1b5f0:	str	r1, [r2]
   1b5f4:	b	1b4e4 <spss_parse_format+0x1b8>
   1b5f8:	mov	r1, #4
   1b5fc:	str	r1, [r2]
   1b600:	b	1b4e4 <spss_parse_format+0x1b8>
   1b604:	mov	r1, #5
   1b608:	str	r1, [r2]
   1b60c:	b	1b4e4 <spss_parse_format+0x1b8>
   1b610:	mov	r1, #6
   1b614:	str	r1, [r2]
   1b618:	b	1b4e4 <spss_parse_format+0x1b8>
   1b61c:	mov	r1, #7
   1b620:	str	r1, [r2]
   1b624:	b	1b4e4 <spss_parse_format+0x1b8>
   1b628:	mov	r1, #8
   1b62c:	str	r1, [r2]
   1b630:	b	1b4e4 <spss_parse_format+0x1b8>
   1b634:	mov	r1, #9
   1b638:	str	r1, [r2]
   1b63c:	b	1b4e4 <spss_parse_format+0x1b8>
   1b640:	mov	r1, #10
   1b644:	str	r1, [r2]
   1b648:	b	1b4e4 <spss_parse_format+0x1b8>
   1b64c:	mov	r1, #11
   1b650:	str	r1, [r2]
   1b654:	b	1b4e4 <spss_parse_format+0x1b8>
   1b658:	mov	r1, #12
   1b65c:	str	r1, [r2]
   1b660:	b	1b4e4 <spss_parse_format+0x1b8>
   1b664:	mov	r1, #15
   1b668:	str	r1, [r2]
   1b66c:	b	1b4e4 <spss_parse_format+0x1b8>
   1b670:	mov	r1, #16
   1b674:	str	r1, [r2]
   1b678:	b	1b4e4 <spss_parse_format+0x1b8>
   1b67c:	mov	r1, #17
   1b680:	str	r1, [r2]
   1b684:	b	1b4e4 <spss_parse_format+0x1b8>
   1b688:	mov	r1, #11
   1b68c:	mov	r3, #20
   1b690:	b	1b4dc <spss_parse_format+0x1b0>
   1b694:	mov	r1, #21
   1b698:	str	r1, [r2]
   1b69c:	b	1b4e4 <spss_parse_format+0x1b8>
   1b6a0:	mov	r1, #20
   1b6a4:	mov	r3, #22
   1b6a8:	b	1b4dc <spss_parse_format+0x1b0>
   1b6ac:	mov	r1, #19
   1b6b0:	mov	r3, #41	; 0x29
   1b6b4:	b	1b4dc <spss_parse_format+0x1b0>
   1b6b8:	mov	r1, #10
   1b6bc:	mov	r3, #23
   1b6c0:	b	1b4dc <spss_parse_format+0x1b0>
   1b6c4:	mov	r1, #24
   1b6c8:	str	r1, [r2]
   1b6cc:	b	1b4e4 <spss_parse_format+0x1b8>
   1b6d0:	mov	r1, #23
   1b6d4:	mov	r3, #25
   1b6d8:	b	1b4dc <spss_parse_format+0x1b0>
   1b6dc:	mov	r1, #40	; 0x28
   1b6e0:	str	r1, [r2]
   1b6e4:	b	1b4e4 <spss_parse_format+0x1b8>
   1b6e8:	mov	r1, #26
   1b6ec:	str	r1, [r2]
   1b6f0:	b	1b4e4 <spss_parse_format+0x1b8>
   1b6f4:	mov	r1, #27
   1b6f8:	str	r1, [r2]
   1b6fc:	b	1b4e4 <spss_parse_format+0x1b8>
   1b700:	mov	r1, #28
   1b704:	str	r1, [r2]
   1b708:	b	1b4e4 <spss_parse_format+0x1b8>
   1b70c:	mov	r1, #29
   1b710:	str	r1, [r2]
   1b714:	b	1b4e4 <spss_parse_format+0x1b8>
   1b718:	mov	r1, #10
   1b71c:	mov	r3, #30
   1b720:	b	1b4dc <spss_parse_format+0x1b0>
   1b724:	mov	r1, #31
   1b728:	str	r1, [r2]
   1b72c:	b	1b4e4 <spss_parse_format+0x1b8>
   1b730:	mov	r1, #32
   1b734:	str	r1, [r2]
   1b738:	b	1b4e4 <spss_parse_format+0x1b8>
   1b73c:	mov	r1, #33	; 0x21
   1b740:	str	r1, [r2]
   1b744:	b	1b4e4 <spss_parse_format+0x1b8>
   1b748:	mov	r1, #34	; 0x22
   1b74c:	str	r1, [r2]
   1b750:	b	1b4e4 <spss_parse_format+0x1b8>
   1b754:	mov	r1, #35	; 0x23
   1b758:	str	r1, [r2]
   1b75c:	b	1b4e4 <spss_parse_format+0x1b8>
   1b760:	mov	r1, #36	; 0x24
   1b764:	str	r1, [r2]
   1b768:	b	1b4e4 <spss_parse_format+0x1b8>
   1b76c:	mov	r1, #37	; 0x25
   1b770:	str	r1, [r2]
   1b774:	b	1b4e4 <spss_parse_format+0x1b8>
   1b778:	mov	r1, #10
   1b77c:	mov	r3, #38	; 0x26
   1b780:	b	1b4dc <spss_parse_format+0x1b0>
   1b784:	cmp	r5, #1
   1b788:	beq	1b7e0 <spss_parse_format+0x4b4>
   1b78c:	ldr	r1, [pc, #812]	; 1bac0 <spss_parse_format+0x794>
   1b790:	add	r1, pc, r1
   1b794:	ldrb	sl, [r1, r5]
   1b798:	add	r0, r0, #1
   1b79c:	ldr	r1, [sp]
   1b7a0:	cmp	r0, r1
   1b7a4:	bne	1b350 <spss_parse_format+0x24>
   1b7a8:	ldr	r1, [sp]
   1b7ac:	cmp	r0, r1
   1b7b0:	bne	1ba80 <spss_parse_format+0x754>
   1b7b4:	ldr	r1, [pc, #776]	; 1bac4 <spss_parse_format+0x798>
   1b7b8:	add	r1, pc, r1
   1b7bc:	ldrb	r1, [r1, sl]
   1b7c0:	ldr	r3, [pc, #768]	; 1bac8 <spss_parse_format+0x79c>
   1b7c4:	add	r3, pc, r3
   1b7c8:	ldrb	r7, [r3, r1]
   1b7cc:	cmp	r7, #0
   1b7d0:	beq	1ba80 <spss_parse_format+0x754>
   1b7d4:	add	r1, r1, r3
   1b7d8:	add	r6, r1, #1
   1b7dc:	b	1b804 <spss_parse_format+0x4d8>
   1b7e0:	mov	sl, #0
   1b7e4:	b	1ba80 <spss_parse_format+0x754>
   1b7e8:	mov	r1, #10
   1b7ec:	mov	r3, #39	; 0x27
   1b7f0:	str	r3, [r2]
   1b7f4:	str	r1, [r2, #4]
   1b7f8:	add	r6, r6, #1
   1b7fc:	cmp	r7, #0
   1b800:	beq	1ba80 <spss_parse_format+0x754>
   1b804:	sub	r7, r7, #1
   1b808:	ldrb	r1, [r6]
   1b80c:	sub	r1, r1, #2
   1b810:	cmp	r1, #38	; 0x26
   1b814:	bhi	1b7f8 <spss_parse_format+0x4cc>
   1b818:	add	r3, pc, #4
   1b81c:	ldr	r1, [r3, r1, lsl #2]
   1b820:	add	pc, r3, r1
   1b824:	.word	0x0000009c
   1b828:	.word	0x000000a4
   1b82c:	.word	0x000000ac
   1b830:	.word	0x000000b8
   1b834:	.word	0x000000c4
   1b838:	.word	0x000000d0
   1b83c:	.word	0x000000dc
   1b840:	.word	0x000000e8
   1b844:	.word	0x000000f4
   1b848:	.word	0x00000100
   1b84c:	.word	0x0000010c
   1b850:	.word	0x00000118
   1b854:	.word	0x00000124
   1b858:	.word	0x00000130
   1b85c:	.word	0x0000013c
   1b860:	.word	0x00000148
   1b864:	.word	0x00000154
   1b868:	.word	0x00000160
   1b86c:	.word	0x0000016c
   1b870:	.word	0x00000178
   1b874:	.word	0x00000184
   1b878:	.word	0x00000190
   1b87c:	.word	0x0000019c
   1b880:	.word	0x000001a8
   1b884:	.word	0x000001b4
   1b888:	.word	0x000001c0
   1b88c:	.word	0x000001cc
   1b890:	.word	0x000001d8
   1b894:	.word	0x000001e4
   1b898:	.word	0x000001f0
   1b89c:	.word	0x000001fc
   1b8a0:	.word	0x00000208
   1b8a4:	.word	0x00000214
   1b8a8:	.word	0x00000220
   1b8ac:	.word	0x0000022c
   1b8b0:	.word	0x00000238
   1b8b4:	.word	0x00000244
   1b8b8:	.word	0x00000250
   1b8bc:	.word	0xffffffc4
   1b8c0:	str	lr, [r2, #4]
   1b8c4:	b	1b7f8 <spss_parse_format+0x4cc>
   1b8c8:	str	lr, [r2, #8]
   1b8cc:	b	1b7f8 <spss_parse_format+0x4cc>
   1b8d0:	mov	r1, #1
   1b8d4:	str	r1, [r2]
   1b8d8:	b	1b7f8 <spss_parse_format+0x4cc>
   1b8dc:	mov	r1, #2
   1b8e0:	str	r1, [r2]
   1b8e4:	b	1b7f8 <spss_parse_format+0x4cc>
   1b8e8:	mov	r1, #3
   1b8ec:	str	r1, [r2]
   1b8f0:	b	1b7f8 <spss_parse_format+0x4cc>
   1b8f4:	mov	r1, #4
   1b8f8:	str	r1, [r2]
   1b8fc:	b	1b7f8 <spss_parse_format+0x4cc>
   1b900:	mov	r1, #5
   1b904:	str	r1, [r2]
   1b908:	b	1b7f8 <spss_parse_format+0x4cc>
   1b90c:	mov	r1, #6
   1b910:	str	r1, [r2]
   1b914:	b	1b7f8 <spss_parse_format+0x4cc>
   1b918:	mov	r1, #7
   1b91c:	str	r1, [r2]
   1b920:	b	1b7f8 <spss_parse_format+0x4cc>
   1b924:	mov	r1, #8
   1b928:	str	r1, [r2]
   1b92c:	b	1b7f8 <spss_parse_format+0x4cc>
   1b930:	mov	r1, #9
   1b934:	str	r1, [r2]
   1b938:	b	1b7f8 <spss_parse_format+0x4cc>
   1b93c:	mov	r1, #10
   1b940:	str	r1, [r2]
   1b944:	b	1b7f8 <spss_parse_format+0x4cc>
   1b948:	mov	r1, #11
   1b94c:	str	r1, [r2]
   1b950:	b	1b7f8 <spss_parse_format+0x4cc>
   1b954:	mov	r1, #12
   1b958:	str	r1, [r2]
   1b95c:	b	1b7f8 <spss_parse_format+0x4cc>
   1b960:	mov	r1, #15
   1b964:	str	r1, [r2]
   1b968:	b	1b7f8 <spss_parse_format+0x4cc>
   1b96c:	mov	r1, #16
   1b970:	str	r1, [r2]
   1b974:	b	1b7f8 <spss_parse_format+0x4cc>
   1b978:	mov	r1, #17
   1b97c:	str	r1, [r2]
   1b980:	b	1b7f8 <spss_parse_format+0x4cc>
   1b984:	mov	r1, #11
   1b988:	mov	r3, #20
   1b98c:	b	1b7f0 <spss_parse_format+0x4c4>
   1b990:	mov	r1, #21
   1b994:	str	r1, [r2]
   1b998:	b	1b7f8 <spss_parse_format+0x4cc>
   1b99c:	mov	r1, #20
   1b9a0:	mov	r3, #22
   1b9a4:	b	1b7f0 <spss_parse_format+0x4c4>
   1b9a8:	mov	r1, #19
   1b9ac:	mov	r3, #41	; 0x29
   1b9b0:	b	1b7f0 <spss_parse_format+0x4c4>
   1b9b4:	mov	r1, #10
   1b9b8:	mov	r3, #23
   1b9bc:	b	1b7f0 <spss_parse_format+0x4c4>
   1b9c0:	mov	r1, #24
   1b9c4:	str	r1, [r2]
   1b9c8:	b	1b7f8 <spss_parse_format+0x4cc>
   1b9cc:	mov	r1, #23
   1b9d0:	mov	r3, #25
   1b9d4:	b	1b7f0 <spss_parse_format+0x4c4>
   1b9d8:	mov	r1, #40	; 0x28
   1b9dc:	str	r1, [r2]
   1b9e0:	b	1b7f8 <spss_parse_format+0x4cc>
   1b9e4:	mov	r1, #26
   1b9e8:	str	r1, [r2]
   1b9ec:	b	1b7f8 <spss_parse_format+0x4cc>
   1b9f0:	mov	r1, #27
   1b9f4:	str	r1, [r2]
   1b9f8:	b	1b7f8 <spss_parse_format+0x4cc>
   1b9fc:	mov	r1, #28
   1ba00:	str	r1, [r2]
   1ba04:	b	1b7f8 <spss_parse_format+0x4cc>
   1ba08:	mov	r1, #29
   1ba0c:	str	r1, [r2]
   1ba10:	b	1b7f8 <spss_parse_format+0x4cc>
   1ba14:	mov	r1, #10
   1ba18:	mov	r3, #30
   1ba1c:	b	1b7f0 <spss_parse_format+0x4c4>
   1ba20:	mov	r1, #31
   1ba24:	str	r1, [r2]
   1ba28:	b	1b7f8 <spss_parse_format+0x4cc>
   1ba2c:	mov	r1, #32
   1ba30:	str	r1, [r2]
   1ba34:	b	1b7f8 <spss_parse_format+0x4cc>
   1ba38:	mov	r1, #33	; 0x21
   1ba3c:	str	r1, [r2]
   1ba40:	b	1b7f8 <spss_parse_format+0x4cc>
   1ba44:	mov	r1, #34	; 0x22
   1ba48:	str	r1, [r2]
   1ba4c:	b	1b7f8 <spss_parse_format+0x4cc>
   1ba50:	mov	r1, #35	; 0x23
   1ba54:	str	r1, [r2]
   1ba58:	b	1b7f8 <spss_parse_format+0x4cc>
   1ba5c:	mov	r1, #36	; 0x24
   1ba60:	str	r1, [r2]
   1ba64:	b	1b7f8 <spss_parse_format+0x4cc>
   1ba68:	mov	r1, #37	; 0x25
   1ba6c:	str	r1, [r2]
   1ba70:	b	1b7f8 <spss_parse_format+0x4cc>
   1ba74:	mov	r1, #10
   1ba78:	mov	r3, #38	; 0x26
   1ba7c:	b	1b7f0 <spss_parse_format+0x4c4>
   1ba80:	ldr	r1, [sp]
   1ba84:	subs	r0, r0, r1
   1ba88:	movwne	r0, #5
   1ba8c:	cmp	sl, #67	; 0x43
   1ba90:	movle	r0, #5
   1ba94:	sub	sp, fp, #28
   1ba98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ba9c:	.word	0x0000bf32
   1baa0:	.word	0x0000bd7a
   1baa4:	.word	0x0000bc4c
   1baa8:	.word	0x0000be34
   1baac:	.word	0x0000befd
   1bab0:	.word	0x0000c174
   1bab4:	.word	0x0000c148
   1bab8:	.word	0x0000bebc
   1babc:	.word	0x0000c0a0
   1bac0:	.word	0x0000bd2c
   1bac4:	.word	0x0000bf0c
   1bac8:	.word	0x0000be18
   1bacc:	.word	0x0000c15c

0001bad0 <dta_ctx_alloc>:
   1bad0:	push	{r4, sl, fp, lr}
   1bad4:	add	fp, sp, #8
   1bad8:	mov	r4, r0
   1badc:	mov	r0, #1
   1bae0:	mov	r1, #544	; 0x220
   1bae4:	bl	47d0 <calloc@plt>
   1bae8:	cmp	r0, #0
   1baec:	strne	r4, [r0, #280]	; 0x118
   1baf0:	moveq	r0, #0
   1baf4:	pop	{r4, sl, fp, pc}

0001baf8 <dta_ctx_init>:
   1baf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bafc:	add	fp, sp, #28
   1bb00:	sub	sp, sp, #4
   1bb04:	mov	r4, r0
   1bb08:	ldr	r0, [fp, #12]
   1bb0c:	sub	r0, r0, #104	; 0x68
   1bb10:	uxtb	r0, r0
   1bb14:	mov	r5, #24
   1bb18:	cmp	r0, #15
   1bb1c:	bls	1bb2c <dta_ctx_init+0x34>
   1bb20:	mov	r0, r5
   1bb24:	sub	sp, fp, #28
   1bb28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb2c:	mov	r9, r3
   1bb30:	mov	r8, r2
   1bb34:	mov	r7, r1
   1bb38:	add	r5, r4, #152	; 0x98
   1bb3c:	ldr	r0, [fp, #8]
   1bb40:	mov	sl, #2
   1bb44:	cmp	r0, #2
   1bb48:	mov	r6, #2
   1bb4c:	movweq	r6, #1
   1bb50:	bl	492c <machine_is_little_endian@plt>
   1bb54:	str	r6, [r4, #232]	; 0xe8
   1bb58:	ldr	r6, [fp, #12]
   1bb5c:	strd	r6, [r4, #144]	; 0x90
   1bb60:	cmp	r0, #0
   1bb64:	movweq	sl, #1
   1bb68:	ldr	r0, [fp, #8]
   1bb6c:	subs	r0, sl, r0
   1bb70:	movwne	r0, #1
   1bb74:	ldrb	r1, [r4, #192]	; 0xc0
   1bb78:	and	r1, r1, #254	; 0xfe
   1bb7c:	orr	r0, r1, r0
   1bb80:	strb	r0, [r4, #192]	; 0xc0
   1bb84:	strd	r8, [r5]
   1bb88:	cmp	r7, #0
   1bb8c:	beq	1bba8 <dta_ctx_init+0xb0>
   1bb90:	mov	r0, r7
   1bb94:	mov	r1, #4
   1bb98:	bl	4a28 <readstat_calloc@plt>
   1bb9c:	str	r0, [r4, #228]	; 0xe4
   1bba0:	cmp	r0, #0
   1bba4:	beq	1bc2c <dta_ctx_init+0x134>
   1bba8:	add	r0, r4, #208	; 0xd0
   1bbac:	ldr	r8, [fp, #20]
   1bbb0:	ldrb	r1, [r4, #192]	; 0xc0
   1bbb4:	and	r2, r1, #253	; 0xfd
   1bbb8:	strb	r2, [r4, #192]	; 0xc0
   1bbbc:	cmp	r6, #105	; 0x69
   1bbc0:	bcs	1bbfc <dta_ctx_init+0x104>
   1bbc4:	mov	r3, #0
   1bbc8:	str	r3, [r4, #92]	; 0x5c
   1bbcc:	strb	r3, [r4, #20]
   1bbd0:	mov	r3, #7
   1bbd4:	str	r3, [r4, #80]	; 0x50
   1bbd8:	mov	r3, #9
   1bbdc:	str	r3, [r4, #96]	; 0x60
   1bbe0:	str	r3, [r4, #76]	; 0x4c
   1bbe4:	str	r3, [r4, #84]	; 0x54
   1bbe8:	add	r3, r4, #88	; 0x58
   1bbec:	cmp	r6, #107	; 0x6b
   1bbf0:	bhi	1bc88 <dta_ctx_init+0x190>
   1bbf4:	mov	r7, #32
   1bbf8:	b	1bc8c <dta_ctx_init+0x194>
   1bbfc:	cmp	r6, #114	; 0x72
   1bc00:	bcs	1bc34 <dta_ctx_init+0x13c>
   1bc04:	mov	r3, #12
   1bc08:	str	r3, [r4, #80]	; 0x50
   1bc0c:	cmp	r6, #110	; 0x6e
   1bc10:	bhi	1bc64 <dta_ctx_init+0x16c>
   1bc14:	mov	r3, #0
   1bc18:	strb	r3, [r4, #20]
   1bc1c:	beq	1bc6c <dta_ctx_init+0x174>
   1bc20:	mov	r3, #2
   1bc24:	str	r3, [r4, #92]	; 0x5c
   1bc28:	b	1bbd8 <dta_ctx_init+0xe0>
   1bc2c:	mov	r5, #3
   1bc30:	b	1bb20 <dta_ctx_init+0x28>
   1bc34:	cmp	r6, #117	; 0x75
   1bc38:	bhi	1bccc <dta_ctx_init+0x1d4>
   1bc3c:	mov	r3, #49	; 0x31
   1bc40:	str	r3, [r4, #80]	; 0x50
   1bc44:	bne	1bc64 <dta_ctx_init+0x16c>
   1bc48:	mov	r3, #4
   1bc4c:	str	r3, [r4, #112]	; 0x70
   1bc50:	str	r3, [r4, #116]	; 0x74
   1bc54:	mov	r3, #1
   1bc58:	str	r3, [r4, #8]
   1bc5c:	mov	r3, #117	; 0x75
   1bc60:	b	1bc68 <dta_ctx_init+0x170>
   1bc64:	mov	r3, #111	; 0x6f
   1bc68:	strb	r3, [r4, #20]
   1bc6c:	mov	r3, #33	; 0x21
   1bc70:	str	r3, [r4, #84]	; 0x54
   1bc74:	mov	r7, #4
   1bc78:	str	r7, [r4, #92]	; 0x5c
   1bc7c:	str	r3, [r4, #96]	; 0x60
   1bc80:	str	r3, [r4, #76]	; 0x4c
   1bc84:	add	r3, r4, #88	; 0x58
   1bc88:	mov	r7, #81	; 0x51
   1bc8c:	str	r7, [r3]
   1bc90:	str	r7, [r4, #4]
   1bc94:	cmp	r6, #104	; 0x68
   1bc98:	bhi	1bd10 <dta_ctx_init+0x218>
   1bc9c:	mov	r2, #2
   1bca0:	mov	r3, #12
   1bca4:	str	r2, [r4, #100]	; 0x64
   1bca8:	str	r3, [r4, #104]	; 0x68
   1bcac:	str	r2, [r4, #108]	; 0x6c
   1bcb0:	mov	r2, #0
   1bcb4:	str	r2, [r4, #16]
   1bcb8:	mov	r2, #1
   1bcbc:	str	r2, [r4, #24]
   1bcc0:	and	r1, r1, #249	; 0xf9
   1bcc4:	strb	r1, [r4, #192]	; 0xc0
   1bcc8:	b	1bd60 <dta_ctx_init+0x268>
   1bccc:	mov	r3, #117	; 0x75
   1bcd0:	strb	r3, [r4, #20]
   1bcd4:	mov	ip, #57	; 0x39
   1bcd8:	mov	r7, #6
   1bcdc:	mov	r6, #2
   1bce0:	strd	r6, [r4, #112]	; 0x70
   1bce4:	str	r6, [r4, #8]
   1bce8:	mov	r7, #4
   1bcec:	mov	r6, #129	; 0x81
   1bcf0:	movw	r3, #321	; 0x141
   1bcf4:	str	r6, [r4, #76]	; 0x4c
   1bcf8:	str	ip, [r4, #80]	; 0x50
   1bcfc:	str	r6, [r4, #84]	; 0x54
   1bd00:	str	r3, [r4, #88]	; 0x58
   1bd04:	str	r7, [r4, #92]	; 0x5c
   1bd08:	str	r6, [r4, #96]	; 0x60
   1bd0c:	str	r3, [r4, #4]
   1bd10:	mov	r3, #3
   1bd14:	mov	r7, #4
   1bd18:	mov	r6, #18
   1bd1c:	str	r6, [r4, #16]
   1bd20:	mov	r6, #129	; 0x81
   1bd24:	ldr	r5, [fp, #12]
   1bd28:	cmp	r5, #118	; 0x76
   1bd2c:	movwcc	r6, #33	; 0x21
   1bd30:	str	r7, [r4, #100]	; 0x64
   1bd34:	str	r6, [r4, #104]	; 0x68
   1bd38:	ldr	r6, [fp, #12]
   1bd3c:	str	r3, [r4, #108]	; 0x6c
   1bd40:	cmp	r6, #117	; 0x75
   1bd44:	bcs	1bda0 <dta_ctx_init+0x2a8>
   1bd48:	mov	r2, #1
   1bd4c:	str	r2, [r4, #24]
   1bd50:	and	r1, r1, #249	; 0xf9
   1bd54:	strb	r1, [r4, #192]	; 0xc0
   1bd58:	cmp	r6, #112	; 0x70
   1bd5c:	bhi	1bdb0 <dta_ctx_init+0x2b8>
   1bd60:	mvn	r1, #-2130706432	; 0x81000000
   1bd64:	mvn	r2, #-2147483647	; 0x80000001
   1bd68:	str	r2, [r4, #196]	; 0xc4
   1bd6c:	str	r1, [r4, #200]	; 0xc8
   1bd70:	movw	r1, #32766	; 0x7ffe
   1bd74:	strh	r1, [r4, #194]	; 0xc2
   1bd78:	mov	r1, #126	; 0x7e
   1bd7c:	strb	r1, [r4, #193]	; 0xc1
   1bd80:	movw	r1, #65535	; 0xffff
   1bd84:	movt	r1, #32735	; 0x7fdf
   1bd88:	mvn	r2, #0
   1bd8c:	str	r2, [r0]
   1bd90:	str	r1, [r0, #4]
   1bd94:	cmp	r8, #0
   1bd98:	bne	1bdf0 <dta_ctx_init+0x2f8>
   1bd9c:	b	1be48 <dta_ctx_init+0x350>
   1bda0:	mov	r1, #2
   1bda4:	str	r1, [r4, #24]
   1bda8:	orr	r1, r2, #4
   1bdac:	strb	r1, [r4, #192]	; 0xc0
   1bdb0:	mvn	r2, #-2130706432	; 0x81000000
   1bdb4:	mvn	r3, #-2147483621	; 0x8000001b
   1bdb8:	str	r3, [r4, #196]	; 0xc4
   1bdbc:	str	r2, [r4, #200]	; 0xc8
   1bdc0:	movw	r2, #32740	; 0x7fe4
   1bdc4:	strh	r2, [r4, #194]	; 0xc2
   1bdc8:	mov	r2, #100	; 0x64
   1bdcc:	strb	r2, [r4, #193]	; 0xc1
   1bdd0:	movw	r3, #65535	; 0xffff
   1bdd4:	movt	r3, #32735	; 0x7fdf
   1bdd8:	mvn	r2, #0
   1bddc:	strd	r2, [r0]
   1bde0:	orr	r0, r1, #8
   1bde4:	strb	r0, [r4, #192]	; 0xc0
   1bde8:	cmp	r8, #0
   1bdec:	beq	1be48 <dta_ctx_init+0x350>
   1bdf0:	ldr	r1, [fp, #16]
   1bdf4:	cmp	r1, #0
   1bdf8:	bne	1be30 <dta_ctx_init+0x338>
   1bdfc:	cmp	r6, #117	; 0x75
   1be00:	bhi	1be10 <dta_ctx_init+0x318>
   1be04:	ldr	r1, [pc, #300]	; 1bf38 <dta_ctx_init+0x440>
   1be08:	add	r1, pc, r1
   1be0c:	b	1be30 <dta_ctx_init+0x338>
   1be10:	ldr	r1, [pc, #292]	; 1bf3c <dta_ctx_init+0x444>
   1be14:	add	r1, pc, r1
   1be18:	mov	r0, r8
   1be1c:	bl	4878 <strcmp@plt>
   1be20:	cmp	r0, #0
   1be24:	beq	1be3c <dta_ctx_init+0x344>
   1be28:	ldr	r1, [pc, #272]	; 1bf40 <dta_ctx_init+0x448>
   1be2c:	add	r1, pc, r1
   1be30:	mov	r0, r8
   1be34:	bl	4bb4 <iconv_open@plt>
   1be38:	str	r0, [r4, #236]	; 0xec
   1be3c:	ldr	r0, [r4, #236]	; 0xec
   1be40:	cmn	r0, #1
   1be44:	beq	1bf28 <dta_ctx_init+0x430>
   1be48:	mov	r0, #2
   1be4c:	cmp	r6, #119	; 0x77
   1be50:	movwcc	r0, #1
   1be54:	ldr	r1, [r4, #148]	; 0x94
   1be58:	add	r1, r1, #1
   1be5c:	lsl	r0, r1, r0
   1be60:	str	r0, [r4, #48]	; 0x30
   1be64:	bl	4cb0 <readstat_malloc@plt>
   1be68:	str	r0, [r4, #44]	; 0x2c
   1be6c:	mov	r5, #3
   1be70:	cmp	r0, #0
   1be74:	beq	1bb20 <dta_ctx_init+0x28>
   1be78:	ldr	r1, [r4, #148]	; 0x94
   1be7c:	cmp	r1, #1
   1be80:	blt	1bf18 <dta_ctx_init+0x420>
   1be84:	lsl	r0, r1, #1
   1be88:	str	r0, [r4, #32]
   1be8c:	add	r7, r4, #76	; 0x4c
   1be90:	ldm	r7, {r2, r3, r7}
   1be94:	ldr	r6, [r4, #88]	; 0x58
   1be98:	mul	r2, r2, r1
   1be9c:	str	r2, [r4, #40]	; 0x28
   1bea0:	mul	r2, r3, r1
   1bea4:	str	r2, [r4, #56]	; 0x38
   1bea8:	mul	r2, r7, r1
   1beac:	str	r2, [r4, #64]	; 0x40
   1beb0:	mul	r1, r6, r1
   1beb4:	str	r1, [r4, #72]	; 0x48
   1beb8:	bl	4cb0 <readstat_malloc@plt>
   1bebc:	str	r0, [r4, #28]
   1bec0:	cmp	r0, #0
   1bec4:	beq	1bb20 <dta_ctx_init+0x28>
   1bec8:	ldr	r0, [r4, #40]	; 0x28
   1becc:	bl	4cb0 <readstat_malloc@plt>
   1bed0:	str	r0, [r4, #36]	; 0x24
   1bed4:	cmp	r0, #0
   1bed8:	beq	1bb20 <dta_ctx_init+0x28>
   1bedc:	ldr	r0, [r4, #56]	; 0x38
   1bee0:	bl	4cb0 <readstat_malloc@plt>
   1bee4:	str	r0, [r4, #52]	; 0x34
   1bee8:	cmp	r0, #0
   1beec:	beq	1bb20 <dta_ctx_init+0x28>
   1bef0:	ldr	r0, [r4, #64]	; 0x40
   1bef4:	bl	4cb0 <readstat_malloc@plt>
   1bef8:	str	r0, [r4, #60]	; 0x3c
   1befc:	cmp	r0, #0
   1bf00:	beq	1bb20 <dta_ctx_init+0x28>
   1bf04:	ldr	r0, [r4, #72]	; 0x48
   1bf08:	bl	4cb0 <readstat_malloc@plt>
   1bf0c:	str	r0, [r4, #68]	; 0x44
   1bf10:	cmp	r0, #0
   1bf14:	beq	1bb20 <dta_ctx_init+0x28>
   1bf18:	mov	r0, #1
   1bf1c:	str	r0, [r4, #284]	; 0x11c
   1bf20:	mov	r5, #0
   1bf24:	b	1bb20 <dta_ctx_init+0x28>
   1bf28:	mov	r0, #0
   1bf2c:	str	r0, [r4, #236]	; 0xec
   1bf30:	mov	r5, #7
   1bf34:	b	1bb20 <dta_ctx_init+0x28>
   1bf38:	.word	0x0000b927
   1bf3c:	.word	0x00009c32
   1bf40:	.word	0x00009c1a

0001bf44 <dta_ctx_free>:
   1bf44:	push	{r4, r5, fp, lr}
   1bf48:	add	fp, sp, #8
   1bf4c:	mov	r4, r0
   1bf50:	ldr	r0, [r0, #28]
   1bf54:	cmp	r0, #0
   1bf58:	beq	1bf60 <dta_ctx_free+0x1c>
   1bf5c:	bl	4938 <free@plt>
   1bf60:	ldr	r0, [r4, #36]	; 0x24
   1bf64:	cmp	r0, #0
   1bf68:	beq	1bf70 <dta_ctx_free+0x2c>
   1bf6c:	bl	4938 <free@plt>
   1bf70:	ldr	r0, [r4, #44]	; 0x2c
   1bf74:	cmp	r0, #0
   1bf78:	beq	1bf80 <dta_ctx_free+0x3c>
   1bf7c:	bl	4938 <free@plt>
   1bf80:	ldr	r0, [r4, #52]	; 0x34
   1bf84:	cmp	r0, #0
   1bf88:	beq	1bf90 <dta_ctx_free+0x4c>
   1bf8c:	bl	4938 <free@plt>
   1bf90:	ldr	r0, [r4, #60]	; 0x3c
   1bf94:	cmp	r0, #0
   1bf98:	beq	1bfa0 <dta_ctx_free+0x5c>
   1bf9c:	bl	4938 <free@plt>
   1bfa0:	ldr	r0, [r4, #68]	; 0x44
   1bfa4:	cmp	r0, #0
   1bfa8:	beq	1bfb0 <dta_ctx_free+0x6c>
   1bfac:	bl	4938 <free@plt>
   1bfb0:	ldr	r0, [r4, #236]	; 0xec
   1bfb4:	cmp	r0, #0
   1bfb8:	beq	1bfc0 <dta_ctx_free+0x7c>
   1bfbc:	bl	4848 <iconv_close@plt>
   1bfc0:	ldr	r0, [r4]
   1bfc4:	cmp	r0, #0
   1bfc8:	beq	1bfd0 <dta_ctx_free+0x8c>
   1bfcc:	bl	4938 <free@plt>
   1bfd0:	ldr	r0, [r4, #228]	; 0xe4
   1bfd4:	cmp	r0, #0
   1bfd8:	beq	1c020 <dta_ctx_free+0xdc>
   1bfdc:	ldr	r1, [r4, #148]	; 0x94
   1bfe0:	ldr	r0, [r4, #228]	; 0xe4
   1bfe4:	cmp	r1, #1
   1bfe8:	blt	1c01c <dta_ctx_free+0xd8>
   1bfec:	mov	r5, #0
   1bff0:	b	1c008 <dta_ctx_free+0xc4>
   1bff4:	add	r5, r5, #1
   1bff8:	ldr	r1, [r4, #148]	; 0x94
   1bffc:	ldr	r0, [r4, #228]	; 0xe4
   1c000:	cmp	r5, r1
   1c004:	bge	1c01c <dta_ctx_free+0xd8>
   1c008:	ldr	r0, [r0, r5, lsl #2]
   1c00c:	cmp	r0, #0
   1c010:	beq	1bff4 <dta_ctx_free+0xb0>
   1c014:	bl	4938 <free@plt>
   1c018:	b	1bff4 <dta_ctx_free+0xb0>
   1c01c:	bl	4938 <free@plt>
   1c020:	ldr	r0, [r4, #216]	; 0xd8
   1c024:	cmp	r0, #0
   1c028:	beq	1c058 <dta_ctx_free+0x114>
   1c02c:	ldrd	r0, [r4, #216]	; 0xd8
   1c030:	cmp	r1, #0
   1c034:	beq	1c054 <dta_ctx_free+0x110>
   1c038:	mov	r5, #0
   1c03c:	ldr	r0, [r0, r5, lsl #2]
   1c040:	bl	4938 <free@plt>
   1c044:	add	r5, r5, #1
   1c048:	ldrd	r0, [r4, #216]	; 0xd8
   1c04c:	cmp	r5, r1
   1c050:	bcc	1c03c <dta_ctx_free+0xf8>
   1c054:	bl	4938 <free@plt>
   1c058:	mov	r0, r4
   1c05c:	pop	{r4, r5, fp, lr}
   1c060:	b	4938 <free@plt>

0001c064 <dta_type_info>:
   1c064:	push	{r4, sl, fp, lr}
   1c068:	add	fp, sp, #8
   1c06c:	ldrb	r1, [r1, #20]
   1c070:	cmp	r1, #111	; 0x6f
   1c074:	bne	1c0a8 <dta_type_info+0x44>
   1c078:	sub	ip, r0, #251	; 0xfb
   1c07c:	uxth	r1, ip
   1c080:	cmp	r1, #5
   1c084:	bcs	1c158 <dta_type_info+0xf4>
   1c088:	mov	r0, #1
   1c08c:	uxtah	lr, r0, ip
   1c090:	sxth	r0, ip
   1c094:	ldr	r1, [pc, #268]	; 1c1a8 <dta_type_info+0x144>
   1c098:	add	r1, pc, r1
   1c09c:	ldr	r0, [r1, r0, lsl #2]
   1c0a0:	mov	ip, #0
   1c0a4:	b	1c160 <dta_type_info+0xfc>
   1c0a8:	cmp	r1, #117	; 0x75
   1c0ac:	bne	1c0f8 <dta_type_info+0x94>
   1c0b0:	movw	r1, #65526	; 0xfff6
   1c0b4:	sub	r1, r0, r1
   1c0b8:	mov	ip, #0
   1c0bc:	cmp	r1, #4
   1c0c0:	bhi	1c144 <dta_type_info+0xe0>
   1c0c4:	mov	r0, #1
   1c0c8:	add	r4, pc, #8
   1c0cc:	ldr	r1, [r4, r1, lsl #2]
   1c0d0:	mov	lr, #1
   1c0d4:	add	pc, r4, r1
   1c0d8:	.word	0x00000014
   1c0dc:	.word	0x000000ac
   1c0e0:	.word	0x000000b8
   1c0e4:	.word	0x000000c4
   1c0e8:	.word	0x00000088
   1c0ec:	mov	lr, #5
   1c0f0:	mov	r0, #8
   1c0f4:	b	1c160 <dta_type_info+0xfc>
   1c0f8:	cmp	r0, #126	; 0x7e
   1c0fc:	bhi	1c13c <dta_type_info+0xd8>
   1c100:	sub	r0, r0, #98	; 0x62
   1c104:	uxth	r1, r0
   1c108:	cmp	r1, #11
   1c10c:	bcs	1c178 <dta_type_info+0x114>
   1c110:	sxth	r1, r0
   1c114:	ldr	r0, [pc, #144]	; 1c1ac <dta_type_info+0x148>
   1c118:	add	r0, pc, r0
   1c11c:	ldr	lr, [r0, r1, lsl #2]
   1c120:	ldr	r0, [pc, #136]	; 1c1b0 <dta_type_info+0x14c>
   1c124:	add	r0, pc, r0
   1c128:	ldr	r0, [r0, r1, lsl #2]
   1c12c:	ldr	r4, [pc, #128]	; 1c1b4 <dta_type_info+0x150>
   1c130:	add	r4, pc, r4
   1c134:	ldr	ip, [r4, r1, lsl #2]
   1c138:	b	1c160 <dta_type_info+0xfc>
   1c13c:	sub	r0, r0, #127	; 0x7f
   1c140:	b	1c158 <dta_type_info+0xf4>
   1c144:	cmp	r0, #32768	; 0x8000
   1c148:	bne	1c158 <dta_type_info+0xf4>
   1c14c:	mov	lr, #6
   1c150:	mov	r0, #8
   1c154:	b	1c160 <dta_type_info+0xfc>
   1c158:	mov	ip, #0
   1c15c:	mov	lr, #0
   1c160:	cmp	r2, #0
   1c164:	strne	r0, [r2]
   1c168:	cmp	r3, #0
   1c16c:	strne	lr, [r3]
   1c170:	mov	r0, ip
   1c174:	pop	{r4, sl, fp, pc}
   1c178:	mov	r0, #0
   1c17c:	mov	ip, #5
   1c180:	b	1c15c <dta_type_info+0xf8>
   1c184:	mov	r0, #4
   1c188:	mov	lr, #4
   1c18c:	b	1c160 <dta_type_info+0xfc>
   1c190:	mov	lr, #3
   1c194:	mov	r0, #4
   1c198:	b	1c160 <dta_type_info+0xfc>
   1c19c:	mov	r0, #2
   1c1a0:	mov	lr, #2
   1c1a4:	b	1c160 <dta_type_info+0xfc>
   1c1a8:	.word	0x0000b6a4
   1c1ac:	.word	0x0000b690
   1c1b0:	.word	0x0000b658
   1c1b4:	.word	0x0000b620

0001c1b8 <dta_parse_timestamp>:
   1c1b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c1bc:	add	fp, sp, #28
   1c1c0:	sub	sp, sp, #36	; 0x24
   1c1c4:	sub	sp, sp, #1024	; 0x400
   1c1c8:	add	r7, r0, r1
   1c1cc:	str	r7, [sp, #24]
   1c1d0:	cmp	r1, #0
   1c1d4:	add	ip, sp, #12
   1c1d8:	stm	ip, {r0, r1, r3}
   1c1dc:	beq	1c4d0 <dta_parse_timestamp+0x318>
   1c1e0:	mvn	lr, #1
   1c1e4:	ldr	r6, [pc, #940]	; 1c598 <dta_parse_timestamp+0x3e0>
   1c1e8:	add	r6, pc, r6
   1c1ec:	mov	r4, #1
   1c1f0:	mov	ip, #0
   1c1f4:	mov	r5, r0
   1c1f8:	ldr	r0, [pc, #924]	; 1c59c <dta_parse_timestamp+0x3e4>
   1c1fc:	add	r0, pc, r0
   1c200:	ldrb	sl, [r0, r4]
   1c204:	ldr	r0, [pc, #916]	; 1c5a0 <dta_parse_timestamp+0x3e8>
   1c208:	add	r0, pc, r0
   1c20c:	ldrb	r9, [r0, r4]
   1c210:	ldr	r0, [pc, #908]	; 1c5a4 <dta_parse_timestamp+0x3ec>
   1c214:	add	r0, pc, r0
   1c218:	ldrb	r0, [r0, r4]
   1c21c:	ldr	r1, [pc, #900]	; 1c5a8 <dta_parse_timestamp+0x3f0>
   1c220:	add	r1, pc, r1
   1c224:	add	r7, r1, r0
   1c228:	cmp	sl, #0
   1c22c:	beq	1c298 <dta_parse_timestamp+0xe0>
   1c230:	str	ip, [sp, #28]
   1c234:	add	r8, r7, sl
   1c238:	sub	lr, r8, #1
   1c23c:	cmp	lr, r7
   1c240:	bcc	1c280 <dta_parse_timestamp+0xc8>
   1c244:	ldrb	r0, [r5]
   1c248:	mov	r3, r7
   1c24c:	b	1c25c <dta_parse_timestamp+0xa4>
   1c250:	sub	lr, r6, #1
   1c254:	cmp	lr, r3
   1c258:	bcc	1c280 <dta_parse_timestamp+0xc8>
   1c25c:	sub	ip, lr, r3
   1c260:	mov	r6, r3
   1c264:	ldrb	r1, [r6, ip, asr #1]!
   1c268:	cmp	r0, r1
   1c26c:	bcc	1c250 <dta_parse_timestamp+0x98>
   1c270:	bls	1c30c <dta_parse_timestamp+0x154>
   1c274:	add	r3, r6, #1
   1c278:	cmp	lr, r3
   1c27c:	bcs	1c25c <dta_parse_timestamp+0xa4>
   1c280:	add	r9, sl, r9
   1c284:	ldr	ip, [sp, #28]
   1c288:	mvn	lr, #1
   1c28c:	ldr	r6, [pc, #792]	; 1c5ac <dta_parse_timestamp+0x3f4>
   1c290:	add	r6, pc, r6
   1c294:	b	1c29c <dta_parse_timestamp+0xe4>
   1c298:	mov	r8, r7
   1c29c:	ldr	r0, [pc, #780]	; 1c5b0 <dta_parse_timestamp+0x3f8>
   1c2a0:	add	r0, pc, r0
   1c2a4:	ldrb	r4, [r0, r4]
   1c2a8:	cmp	r4, #0
   1c2ac:	beq	1c33c <dta_parse_timestamp+0x184>
   1c2b0:	add	r0, r8, r4, lsl #1
   1c2b4:	sub	r7, r0, #2
   1c2b8:	cmp	r7, r8
   1c2bc:	bcc	1c338 <dta_parse_timestamp+0x180>
   1c2c0:	ldrb	r0, [r5]
   1c2c4:	mov	r6, r8
   1c2c8:	b	1c2d8 <dta_parse_timestamp+0x120>
   1c2cc:	sub	r7, r3, #2
   1c2d0:	cmp	r7, r6
   1c2d4:	bcc	1c330 <dta_parse_timestamp+0x178>
   1c2d8:	sub	r1, r7, r6
   1c2dc:	and	r1, lr, r1, asr #1
   1c2e0:	mov	r3, r6
   1c2e4:	ldrb	r1, [r3, r1]!
   1c2e8:	cmp	r0, r1
   1c2ec:	bcc	1c2cc <dta_parse_timestamp+0x114>
   1c2f0:	ldrb	r1, [r3, #1]
   1c2f4:	cmp	r0, r1
   1c2f8:	bls	1c328 <dta_parse_timestamp+0x170>
   1c2fc:	add	r6, r3, #2
   1c300:	cmp	r7, r6
   1c304:	bcs	1c2d8 <dta_parse_timestamp+0x120>
   1c308:	b	1c330 <dta_parse_timestamp+0x178>
   1c30c:	sub	r0, r9, r7
   1c310:	add	r9, r0, r6
   1c314:	ldr	ip, [sp, #28]
   1c318:	mvn	lr, #1
   1c31c:	ldr	r6, [pc, #684]	; 1c5d0 <dta_parse_timestamp+0x418>
   1c320:	add	r6, pc, r6
   1c324:	b	1c33c <dta_parse_timestamp+0x184>
   1c328:	sub	r0, r3, r8
   1c32c:	asr	r4, r0, #1
   1c330:	ldr	r6, [pc, #636]	; 1c5b4 <dta_parse_timestamp+0x3fc>
   1c334:	add	r6, pc, r6
   1c338:	add	r9, r4, r9
   1c33c:	ldr	r0, [pc, #628]	; 1c5b8 <dta_parse_timestamp+0x400>
   1c340:	add	r0, pc, r0
   1c344:	ldrb	r4, [r0, r9]
   1c348:	ldr	r0, [pc, #620]	; 1c5bc <dta_parse_timestamp+0x404>
   1c34c:	add	r0, pc, r0
   1c350:	ldrb	r0, [r0, r4]
   1c354:	cmp	r0, #0
   1c358:	beq	1c4a8 <dta_parse_timestamp+0x2f0>
   1c35c:	ldrb	r7, [r6, r0]
   1c360:	cmp	r7, #0
   1c364:	beq	1c4a8 <dta_parse_timestamp+0x2f0>
   1c368:	add	r0, r6, r0
   1c36c:	add	r3, r0, #1
   1c370:	b	1c384 <dta_parse_timestamp+0x1cc>
   1c374:	str	ip, [r2, #8]
   1c378:	add	r3, r3, #1
   1c37c:	cmp	r7, #0
   1c380:	beq	1c4a8 <dta_parse_timestamp+0x2f0>
   1c384:	sub	r7, r7, #1
   1c388:	ldrb	r0, [r3]
   1c38c:	cmp	r0, #16
   1c390:	bhi	1c378 <dta_parse_timestamp+0x1c0>
   1c394:	add	r1, pc, #4
   1c398:	ldr	r0, [r1, r0, lsl #2]
   1c39c:	add	pc, r1, r0
   1c3a0:	.word	0x00000044
   1c3a4:	.word	0x00000058
   1c3a8:	.word	0x00000060
   1c3ac:	.word	0x00000068
   1c3b0:	.word	0x00000074
   1c3b4:	.word	0x00000080
   1c3b8:	.word	0x0000008c
   1c3bc:	.word	0x00000098
   1c3c0:	.word	0x000000a4
   1c3c4:	.word	0x000000b0
   1c3c8:	.word	0x000000bc
   1c3cc:	.word	0x000000c8
   1c3d0:	.word	0x000000d4
   1c3d4:	.word	0x000000e0
   1c3d8:	.word	0x000000ec
   1c3dc:	.word	0x000000f8
   1c3e0:	.word	0xffffffd4
   1c3e4:	ldrb	r0, [r5]
   1c3e8:	add	r1, ip, ip, lsl #2
   1c3ec:	add	r0, r0, r1, lsl #1
   1c3f0:	sub	ip, r0, #48	; 0x30
   1c3f4:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c3f8:	mov	ip, #0
   1c3fc:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c400:	str	ip, [r2, #12]
   1c404:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c408:	mov	r0, #0
   1c40c:	str	r0, [r2, #16]
   1c410:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c414:	mov	r0, #1
   1c418:	str	r0, [r2, #16]
   1c41c:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c420:	mov	r0, #2
   1c424:	str	r0, [r2, #16]
   1c428:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c42c:	mov	r0, #3
   1c430:	str	r0, [r2, #16]
   1c434:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c438:	mov	r0, #4
   1c43c:	str	r0, [r2, #16]
   1c440:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c444:	mov	r0, #5
   1c448:	str	r0, [r2, #16]
   1c44c:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c450:	mov	r0, #6
   1c454:	str	r0, [r2, #16]
   1c458:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c45c:	mov	r0, #7
   1c460:	str	r0, [r2, #16]
   1c464:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c468:	mov	r0, #8
   1c46c:	str	r0, [r2, #16]
   1c470:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c474:	mov	r0, #9
   1c478:	str	r0, [r2, #16]
   1c47c:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c480:	mov	r0, #10
   1c484:	str	r0, [r2, #16]
   1c488:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c48c:	mov	r0, #11
   1c490:	str	r0, [r2, #16]
   1c494:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c498:	movw	r0, #1900	; 0x76c
   1c49c:	sub	r0, ip, r0
   1c4a0:	str	r0, [r2, #20]
   1c4a4:	b	1c378 <dta_parse_timestamp+0x1c0>
   1c4a8:	cmp	r4, #1
   1c4ac:	beq	1c544 <dta_parse_timestamp+0x38c>
   1c4b0:	ldr	r0, [pc, #264]	; 1c5c0 <dta_parse_timestamp+0x408>
   1c4b4:	add	r0, pc, r0
   1c4b8:	ldrb	r4, [r0, r4]
   1c4bc:	add	r5, r5, #1
   1c4c0:	ldr	r0, [sp, #24]
   1c4c4:	cmp	r5, r0
   1c4c8:	bne	1c1f8 <dta_parse_timestamp+0x40>
   1c4cc:	b	1c4dc <dta_parse_timestamp+0x324>
   1c4d0:	mov	ip, #0
   1c4d4:	mov	r4, #1
   1c4d8:	mov	r5, r0
   1c4dc:	ldr	r0, [sp, #24]
   1c4e0:	cmp	r5, r0
   1c4e4:	bne	1c52c <dta_parse_timestamp+0x374>
   1c4e8:	ldr	r0, [pc, #212]	; 1c5c4 <dta_parse_timestamp+0x40c>
   1c4ec:	add	r0, pc, r0
   1c4f0:	ldrb	r3, [r0, r4]
   1c4f4:	ldr	r7, [pc, #204]	; 1c5c8 <dta_parse_timestamp+0x410>
   1c4f8:	add	r7, pc, r7
   1c4fc:	ldrb	r0, [r7, r3]
   1c500:	cmp	r0, #0
   1c504:	beq	1c52c <dta_parse_timestamp+0x374>
   1c508:	add	r1, r3, r7
   1c50c:	add	r3, r1, #1
   1c510:	ldrb	r1, [r3]
   1c514:	sub	r0, r0, #1
   1c518:	cmp	r1, #17
   1c51c:	streq	ip, [r2, #4]
   1c520:	add	r3, r3, #1
   1c524:	cmp	r0, #0
   1c528:	bne	1c510 <dta_parse_timestamp+0x358>
   1c52c:	cmp	r4, #44	; 0x2c
   1c530:	bcc	1c544 <dta_parse_timestamp+0x38c>
   1c534:	mov	r1, #0
   1c538:	ldr	r0, [sp, #24]
   1c53c:	cmp	r5, r0
   1c540:	beq	1c58c <dta_parse_timestamp+0x3d4>
   1c544:	ldr	r4, [sp, #20]
   1c548:	cmp	r4, #0
   1c54c:	beq	1c588 <dta_parse_timestamp+0x3d0>
   1c550:	ldr	r5, [fp, #8]
   1c554:	ldr	r3, [sp, #16]
   1c558:	str	r3, [sp]
   1c55c:	ldr	r0, [sp, #12]
   1c560:	str	r0, [sp, #4]
   1c564:	add	r6, sp, #32
   1c568:	ldr	r2, [pc, #92]	; 1c5cc <dta_parse_timestamp+0x414>
   1c56c:	add	r2, pc, r2
   1c570:	mov	r0, r6
   1c574:	mov	r1, #1024	; 0x400
   1c578:	bl	4d04 <snprintf@plt>
   1c57c:	mov	r0, r6
   1c580:	mov	r1, r5
   1c584:	blx	r4
   1c588:	mov	r1, #29
   1c58c:	mov	r0, r1
   1c590:	sub	sp, fp, #28
   1c594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c598:	.word	0x0000b827
   1c59c:	.word	0x0000b6a8
   1c5a0:	.word	0x0000b66f
   1c5a4:	.word	0x0000b636
   1c5a8:	.word	0x0000b5b4
   1c5ac:	.word	0x0000b77f
   1c5b0:	.word	0x0000b631
   1c5b4:	.word	0x0000b6db
   1c5b8:	.word	0x0000b5be
   1c5bc:	.word	0x0000b687
   1c5c0:	.word	0x0000b4e3
   1c5c4:	.word	0x0000b549
   1c5c8:	.word	0x0000b517
   1c5cc:	.word	0x0000b4f6
   1c5d0:	.word	0x0000b6ef

0001c5d4 <readstat_parse_dta>:
   1c5d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c5d8:	add	fp, sp, #28
   1c5dc:	sub	sp, sp, #84	; 0x54
   1c5e0:	mov	r8, r2
   1c5e4:	mov	r6, r1
   1c5e8:	mov	r7, r0
   1c5ec:	ldr	r5, [r0, #32]
   1c5f0:	mov	r0, r5
   1c5f4:	bl	4ff8 <dta_ctx_alloc@plt>
   1c5f8:	mov	r4, r0
   1c5fc:	ldr	r2, [r5]
   1c600:	ldr	r1, [r5, #20]
   1c604:	mov	r0, r6
   1c608:	blx	r2
   1c60c:	cmn	r0, #1
   1c610:	beq	1c6cc <readstat_parse_dta+0xf8>
   1c614:	ldr	r3, [r5, #12]
   1c618:	ldr	r2, [r5, #20]
   1c61c:	sub	r0, fp, #32
   1c620:	mov	r1, #4
   1c624:	blx	r3
   1c628:	mov	r6, #2
   1c62c:	cmp	r0, #4
   1c630:	bne	1c86c <readstat_parse_dta+0x298>
   1c634:	ldr	r3, [r5, #8]
   1c638:	ldr	r2, [r5, #20]
   1c63c:	mov	r0, #0
   1c640:	mov	r1, #2
   1c644:	blx	r3
   1c648:	cmn	r0, #1
   1c64c:	beq	1c6d4 <readstat_parse_dta+0x100>
   1c650:	mov	r9, r0
   1c654:	ldr	r3, [r5, #8]
   1c658:	ldr	r2, [r5, #20]
   1c65c:	mov	r0, #0
   1c660:	mov	r1, #0
   1c664:	blx	r3
   1c668:	cmn	r0, #1
   1c66c:	beq	1c70c <readstat_parse_dta+0x138>
   1c670:	sub	r0, fp, #32
   1c674:	ldr	r1, [pc, #1076]	; 1cab0 <readstat_parse_dta+0x4dc>
   1c678:	add	r1, pc, r1
   1c67c:	mov	r2, #4
   1c680:	bl	4c74 <bcmp@plt>
   1c684:	add	r1, sp, #24
   1c688:	cmp	r0, #0
   1c68c:	beq	1c748 <readstat_parse_dta+0x174>
   1c690:	mov	r0, r4
   1c694:	bl	1cd70 <dta_read_header>
   1c698:	cmp	r0, #0
   1c69c:	bne	1c758 <readstat_parse_dta+0x184>
   1c6a0:	ldr	ip, [r7, #36]	; 0x24
   1c6a4:	ldr	r3, [r7, #40]	; 0x28
   1c6a8:	ldr	r2, [sp, #30]
   1c6ac:	ldrh	r1, [sp, #28]
   1c6b0:	ldrb	r6, [sp, #24]
   1c6b4:	ldrb	r0, [sp, #25]
   1c6b8:	stm	sp, {r0, r6, ip}
   1c6bc:	str	r3, [sp, #12]
   1c6c0:	mov	r0, r4
   1c6c4:	mov	r3, #0
   1c6c8:	b	1c784 <readstat_parse_dta+0x1b0>
   1c6cc:	mov	r6, #1
   1c6d0:	b	1c86c <readstat_parse_dta+0x298>
   1c6d4:	ldr	r2, [r4, #264]	; 0x108
   1c6d8:	mov	r6, #15
   1c6dc:	cmp	r2, #0
   1c6e0:	beq	1c86c <readstat_parse_dta+0x298>
   1c6e4:	mov	r0, #14
   1c6e8:	ldr	r1, [pc, #952]	; 1caa8 <readstat_parse_dta+0x4d4>
   1c6ec:	add	r1, pc, r1
   1c6f0:	vld1.64	{d16-d17}, [r1], r0
   1c6f4:	add	r0, r4, #288	; 0x120
   1c6f8:	vld1.16	{d18-d19}, [r1]
   1c6fc:	vst1.8	{d16-d17}, [r0]
   1c700:	movw	r1, #302	; 0x12e
   1c704:	add	r1, r4, r1
   1c708:	b	1c738 <readstat_parse_dta+0x164>
   1c70c:	ldr	r2, [r4, #264]	; 0x108
   1c710:	mov	r6, #15
   1c714:	cmp	r2, #0
   1c718:	beq	1c86c <readstat_parse_dta+0x298>
   1c71c:	ldr	r1, [pc, #904]	; 1caac <readstat_parse_dta+0x4d8>
   1c720:	add	r1, pc, r1
   1c724:	vld1.64	{d16-d17}, [r1]!
   1c728:	add	r0, r4, #288	; 0x120
   1c72c:	vld1.64	{d18-d19}, [r1]
   1c730:	vst1.8	{d16-d17}, [r0]
   1c734:	add	r1, r4, #304	; 0x130
   1c738:	vst1.8	{d18-d19}, [r1]
   1c73c:	ldr	r1, [r4, #276]	; 0x114
   1c740:	blx	r2
   1c744:	b	1c86c <readstat_parse_dta+0x298>
   1c748:	mov	r0, r4
   1c74c:	bl	1cab8 <dta_read_xmlish_header>
   1c750:	cmp	r0, #0
   1c754:	beq	1c760 <readstat_parse_dta+0x18c>
   1c758:	mov	r6, r0
   1c75c:	b	1c86c <readstat_parse_dta+0x298>
   1c760:	ldr	ip, [r7, #36]	; 0x24
   1c764:	ldr	lr, [r7, #40]	; 0x28
   1c768:	add	r3, sp, #28
   1c76c:	ldm	r3, {r1, r2, r3}
   1c770:	ldrb	r0, [sp, #24]
   1c774:	ldrb	r6, [sp, #25]
   1c778:	str	r6, [sp]
   1c77c:	stmib	sp, {r0, ip, lr}
   1c780:	mov	r0, r4
   1c784:	bl	4c50 <dta_ctx_init@plt>
   1c788:	mov	r6, r0
   1c78c:	cmp	r0, #0
   1c790:	bne	1c86c <readstat_parse_dta+0x298>
   1c794:	add	ip, r4, #152	; 0x98
   1c798:	add	r0, r4, #176	; 0xb0
   1c79c:	str	r9, [r4, #272]	; 0x110
   1c7a0:	str	r8, [r4, #276]	; 0x114
   1c7a4:	add	r1, r7, #16
   1c7a8:	vld1.32	{d16-d17}, [r1]
   1c7ac:	add	r1, r4, #256	; 0x100
   1c7b0:	mov	r2, #48	; 0x30
   1c7b4:	mov	r3, r7
   1c7b8:	vld1.32	{d18-d19}, [r3], r2
   1c7bc:	vst1.32	{d16-d17}, [r1]
   1c7c0:	add	r9, r4, #240	; 0xf0
   1c7c4:	vst1.32	{d18-d19}, [r9]
   1c7c8:	ldr	r2, [r3]
   1c7cc:	cmp	r2, #1
   1c7d0:	asrge	r3, r2, #31
   1c7d4:	strdge	r2, [r0]
   1c7d8:	add	sl, r4, #168	; 0xa8
   1c7dc:	ldrd	r2, [r0]
   1c7e0:	ldr	r6, [ip]
   1c7e4:	ldr	r1, [ip, #4]
   1c7e8:	subs	r2, r6, r2
   1c7ec:	sbc	r3, r1, r3
   1c7f0:	cmn	r3, #1
   1c7f4:	strle	r6, [r0]
   1c7f8:	strle	r1, [r0, #4]
   1c7fc:	movle	r2, #0
   1c800:	movle	r3, #0
   1c804:	str	ip, [sp, #20]
   1c808:	strd	r2, [sl]
   1c80c:	ldr	r0, [r7, #44]	; 0x2c
   1c810:	cmp	r0, #1
   1c814:	blt	1c828 <readstat_parse_dta+0x254>
   1c818:	subs	r1, r0, r2
   1c81c:	rscs	r1, r3, r0, asr #31
   1c820:	asrlt	r1, r0, #31
   1c824:	strdlt	r0, [sl]
   1c828:	mov	r0, r4
   1c82c:	bl	1cde8 <dta_update_progress>
   1c830:	mov	r6, r0
   1c834:	cmp	r0, #0
   1c838:	bne	1c86c <readstat_parse_dta+0x298>
   1c83c:	mov	r0, r4
   1c840:	bl	1ce6c <dta_read_label_and_timestamp>
   1c844:	mov	r6, r0
   1c848:	cmp	r0, #0
   1c84c:	bne	1c86c <readstat_parse_dta+0x298>
   1c850:	ldr	r1, [pc, #604]	; 1cab4 <readstat_parse_dta+0x4e0>
   1c854:	add	r1, pc, r1
   1c858:	mov	r0, r4
   1c85c:	bl	1d198 <dta_read_tag>
   1c860:	mov	r6, r0
   1c864:	cmp	r0, #0
   1c868:	beq	1c894 <readstat_parse_dta+0x2c0>
   1c86c:	ldr	r1, [r5, #4]
   1c870:	ldr	r0, [r5, #20]
   1c874:	blx	r1
   1c878:	cmp	r4, #0
   1c87c:	beq	1c888 <readstat_parse_dta+0x2b4>
   1c880:	mov	r0, r4
   1c884:	bl	48f0 <dta_ctx_free@plt>
   1c888:	mov	r0, r6
   1c88c:	sub	sp, fp, #28
   1c890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c894:	ldr	r0, [r9]
   1c898:	cmp	r0, #0
   1c89c:	beq	1c934 <readstat_parse_dta+0x360>
   1c8a0:	add	r0, sp, #24
   1c8a4:	add	r1, r0, #8
   1c8a8:	add	r0, r0, #24
   1c8ac:	ldrd	r2, [sl]
   1c8b0:	str	r3, [sp, #28]
   1c8b4:	str	r2, [sp, #24]
   1c8b8:	ldr	r6, [r4, #144]	; 0x90
   1c8bc:	ldr	r2, [r4, #148]	; 0x94
   1c8c0:	asr	r3, r2, #31
   1c8c4:	strd	r2, [r1]
   1c8c8:	ldr	r1, [r4, #12]
   1c8cc:	str	r1, [sp, #44]	; 0x2c
   1c8d0:	str	r1, [sp, #40]	; 0x28
   1c8d4:	asr	r7, r6, #31
   1c8d8:	strd	r6, [r0]
   1c8dc:	mov	r0, #0
   1c8e0:	str	r0, [sp, #56]	; 0x38
   1c8e4:	ldr	r1, [r4, #232]	; 0xe8
   1c8e8:	str	r0, [sp, #64]	; 0x40
   1c8ec:	str	r1, [sp, #60]	; 0x3c
   1c8f0:	ldr	r1, [r4]
   1c8f4:	str	r0, [sp, #72]	; 0x48
   1c8f8:	rsbs	r2, r6, #117	; 0x75
   1c8fc:	sbcs	r2, r0, r6, asr #31
   1c900:	movwlt	r0, #1
   1c904:	ldrb	r2, [sp, #76]	; 0x4c
   1c908:	and	r2, r2, #254	; 0xfe
   1c90c:	orr	r0, r2, r0
   1c910:	strb	r0, [sp, #76]	; 0x4c
   1c914:	str	r1, [sp, #68]	; 0x44
   1c918:	ldr	r2, [r4, #240]	; 0xf0
   1c91c:	add	r0, sp, #24
   1c920:	mov	r1, r8
   1c924:	blx	r2
   1c928:	mov	r6, #4
   1c92c:	cmp	r0, #0
   1c930:	bne	1c86c <readstat_parse_dta+0x298>
   1c934:	mov	r0, r4
   1c938:	bl	1d21c <dta_read_map>
   1c93c:	mov	r6, #2
   1c940:	cmp	r0, #0
   1c944:	bne	1c86c <readstat_parse_dta+0x298>
   1c948:	mov	r0, r4
   1c94c:	bl	1d2e4 <dta_read_descriptors>
   1c950:	mov	r6, r0
   1c954:	cmp	r0, #0
   1c958:	bne	1c86c <readstat_parse_dta+0x298>
   1c95c:	ldr	r0, [r4, #148]	; 0x94
   1c960:	cmp	r0, #1
   1c964:	blt	1c9c4 <readstat_parse_dta+0x3f0>
   1c968:	mov	r9, #0
   1c96c:	add	r8, sp, #24
   1c970:	mov	r7, #0
   1c974:	ldr	r0, [r4, #28]
   1c978:	add	r0, r0, r9
   1c97c:	ldrh	r0, [r0]
   1c980:	mov	r1, r4
   1c984:	mov	r2, r8
   1c988:	mov	r3, #0
   1c98c:	bl	4c68 <dta_type_info@plt>
   1c990:	cmp	r0, #0
   1c994:	bne	1c758 <readstat_parse_dta+0x184>
   1c998:	ldr	r0, [r4, #160]	; 0xa0
   1c99c:	ldr	r1, [sp, #24]
   1c9a0:	add	r0, r0, r1
   1c9a4:	str	r0, [r4, #160]	; 0xa0
   1c9a8:	add	r9, r9, #2
   1c9ac:	add	r7, r7, #1
   1c9b0:	ldr	r0, [r4, #148]	; 0x94
   1c9b4:	cmp	r7, r0
   1c9b8:	blt	1c974 <readstat_parse_dta+0x3a0>
   1c9bc:	cmp	r0, #0
   1c9c0:	bgt	1c9d8 <readstat_parse_dta+0x404>
   1c9c4:	ldr	r0, [sp, #20]
   1c9c8:	ldrd	r0, [r0]
   1c9cc:	subs	r0, r0, #1
   1c9d0:	sbcs	r0, r1, #0
   1c9d4:	blt	1c9e4 <readstat_parse_dta+0x410>
   1c9d8:	ldr	r0, [r4, #160]	; 0xa0
   1c9dc:	cmp	r0, #0
   1c9e0:	beq	1ca98 <readstat_parse_dta+0x4c4>
   1c9e4:	mov	r0, r4
   1c9e8:	bl	1d53c <dta_handle_variables>
   1c9ec:	mov	r6, r0
   1c9f0:	cmp	r0, #0
   1c9f4:	bne	1c86c <readstat_parse_dta+0x298>
   1c9f8:	mov	r0, r4
   1c9fc:	bl	1d67c <dta_read_expansion_fields>
   1ca00:	mov	r6, r0
   1ca04:	cmp	r0, #0
   1ca08:	bne	1c86c <readstat_parse_dta+0x298>
   1ca0c:	ldrb	r0, [r4, #192]	; 0xc0
   1ca10:	tst	r0, #4
   1ca14:	bne	1ca64 <readstat_parse_dta+0x490>
   1ca18:	add	r6, r4, #120	; 0x78
   1ca1c:	ldr	r3, [r5, #8]
   1ca20:	ldr	r2, [r5, #20]
   1ca24:	mov	r0, #0
   1ca28:	mov	r1, #1
   1ca2c:	blx	r3
   1ca30:	asr	r1, r0, #31
   1ca34:	strd	r0, [r6]
   1ca38:	cmn	r0, #1
   1ca3c:	beq	1caa0 <readstat_parse_dta+0x4cc>
   1ca40:	add	r1, r4, #136	; 0x88
   1ca44:	ldr	r2, [r4, #160]	; 0xa0
   1ca48:	ldr	r3, [sp, #20]
   1ca4c:	ldrd	r6, [r3]
   1ca50:	umull	r3, r6, r6, r2
   1ca54:	adds	r8, r3, r0
   1ca58:	mla	r2, r7, r2, r6
   1ca5c:	adc	r9, r2, r0, asr #31
   1ca60:	strd	r8, [r1]
   1ca64:	mov	r0, r4
   1ca68:	bl	1da34 <dta_read_strls>
   1ca6c:	mov	r6, r0
   1ca70:	cmp	r0, #0
   1ca74:	bne	1c86c <readstat_parse_dta+0x298>
   1ca78:	mov	r0, r4
   1ca7c:	bl	1dc68 <dta_read_data>
   1ca80:	mov	r6, r0
   1ca84:	cmp	r0, #0
   1ca88:	bne	1c86c <readstat_parse_dta+0x298>
   1ca8c:	mov	r0, r4
   1ca90:	bl	1dd64 <dta_handle_value_labels>
   1ca94:	b	1c758 <readstat_parse_dta+0x184>
   1ca98:	mov	r6, #5
   1ca9c:	b	1c86c <readstat_parse_dta+0x298>
   1caa0:	mov	r6, #15
   1caa4:	b	1c86c <readstat_parse_dta+0x298>
   1caa8:	.word	0x0000b3a4
   1caac:	.word	0x0000b390
   1cab0:	.word	0x0000b458
   1cab4:	.word	0x0000b281

0001cab8 <dta_read_xmlish_header>:
   1cab8:	push	{r4, r5, r6, r7, fp, lr}
   1cabc:	add	fp, sp, #16
   1cac0:	sub	sp, sp, #24
   1cac4:	mov	r4, r1
   1cac8:	mov	r5, r0
   1cacc:	ldr	r1, [pc, #604]	; 1cd30 <dta_read_xmlish_header+0x278>
   1cad0:	add	r1, pc, r1
   1cad4:	bl	1d198 <dta_read_tag>
   1cad8:	mov	r7, r0
   1cadc:	cmp	r0, #0
   1cae0:	bne	1cb88 <dta_read_xmlish_header+0xd0>
   1cae4:	ldr	r1, [pc, #584]	; 1cd34 <dta_read_xmlish_header+0x27c>
   1cae8:	add	r1, pc, r1
   1caec:	mov	r0, r5
   1caf0:	bl	1d198 <dta_read_tag>
   1caf4:	mov	r7, r0
   1caf8:	cmp	r0, #0
   1cafc:	bne	1cb88 <dta_read_xmlish_header+0xd0>
   1cb00:	ldr	r0, [pc, #560]	; 1cd38 <dta_read_xmlish_header+0x280>
   1cb04:	add	r0, pc, r0
   1cb08:	str	r0, [sp]
   1cb0c:	ldr	r1, [pc, #552]	; 1cd3c <dta_read_xmlish_header+0x284>
   1cb10:	add	r1, pc, r1
   1cb14:	sub	r2, fp, #19
   1cb18:	mov	r0, r5
   1cb1c:	mov	r3, #3
   1cb20:	bl	1e254 <dta_read_chunk>
   1cb24:	mov	r7, r0
   1cb28:	cmp	r0, #0
   1cb2c:	bne	1cb88 <dta_read_xmlish_header+0xd0>
   1cb30:	ldrb	r0, [fp, #-19]	; 0xffffffed
   1cb34:	ldrb	r1, [fp, #-18]	; 0xffffffee
   1cb38:	ldrb	r2, [fp, #-17]	; 0xffffffef
   1cb3c:	mov	r3, #100	; 0x64
   1cb40:	mul	r0, r0, r3
   1cb44:	add	r1, r1, r1, lsl #2
   1cb48:	add	r0, r0, r1, lsl #1
   1cb4c:	add	r0, r0, r2
   1cb50:	add	r0, r0, #48	; 0x30
   1cb54:	strb	r0, [r4]
   1cb58:	ldr	r0, [pc, #480]	; 1cd40 <dta_read_xmlish_header+0x288>
   1cb5c:	add	r0, pc, r0
   1cb60:	str	r0, [sp]
   1cb64:	ldr	r1, [pc, #472]	; 1cd44 <dta_read_xmlish_header+0x28c>
   1cb68:	add	r1, pc, r1
   1cb6c:	add	r2, sp, #18
   1cb70:	mov	r0, r5
   1cb74:	mov	r3, #3
   1cb78:	bl	1e254 <dta_read_chunk>
   1cb7c:	mov	r7, r0
   1cb80:	cmp	r0, #0
   1cb84:	beq	1cb94 <dta_read_xmlish_header+0xdc>
   1cb88:	mov	r0, r7
   1cb8c:	sub	sp, fp, #16
   1cb90:	pop	{r4, r5, r6, r7, fp, pc}
   1cb94:	add	r0, sp, #18
   1cb98:	ldr	r1, [pc, #424]	; 1cd48 <dta_read_xmlish_header+0x290>
   1cb9c:	add	r1, pc, r1
   1cba0:	mov	r2, #3
   1cba4:	bl	4c74 <bcmp@plt>
   1cba8:	cmp	r0, #0
   1cbac:	beq	1cbd8 <dta_read_xmlish_header+0x120>
   1cbb0:	add	r0, sp, #18
   1cbb4:	ldr	r1, [pc, #400]	; 1cd4c <dta_read_xmlish_header+0x294>
   1cbb8:	add	r1, pc, r1
   1cbbc:	mov	r2, #3
   1cbc0:	bl	4c74 <bcmp@plt>
   1cbc4:	mov	r7, #5
   1cbc8:	cmp	r0, #0
   1cbcc:	bne	1cb88 <dta_read_xmlish_header+0xd0>
   1cbd0:	mov	r7, #2
   1cbd4:	b	1cbdc <dta_read_xmlish_header+0x124>
   1cbd8:	mov	r7, #1
   1cbdc:	strb	r7, [r4, #1]
   1cbe0:	bl	492c <machine_is_little_endian@plt>
   1cbe4:	mov	r6, r0
   1cbe8:	cmp	r7, #2
   1cbec:	eoreq	r6, r6, #1
   1cbf0:	ldrb	r0, [r4]
   1cbf4:	cmp	r0, #119	; 0x77
   1cbf8:	bcc	1cc3c <dta_read_xmlish_header+0x184>
   1cbfc:	ldr	r0, [pc, #332]	; 1cd50 <dta_read_xmlish_header+0x298>
   1cc00:	add	r0, pc, r0
   1cc04:	str	r0, [sp]
   1cc08:	ldr	r1, [pc, #324]	; 1cd54 <dta_read_xmlish_header+0x29c>
   1cc0c:	add	r1, pc, r1
   1cc10:	add	r2, sp, #8
   1cc14:	mov	r0, r5
   1cc18:	mov	r3, #4
   1cc1c:	bl	1e254 <dta_read_chunk>
   1cc20:	cmp	r0, #0
   1cc24:	bne	1cc68 <dta_read_xmlish_header+0x1b0>
   1cc28:	ldr	r0, [sp, #8]
   1cc2c:	cmp	r6, #0
   1cc30:	beq	1cc80 <dta_read_xmlish_header+0x1c8>
   1cc34:	bl	480c <byteswap4@plt>
   1cc38:	b	1cc80 <dta_read_xmlish_header+0x1c8>
   1cc3c:	ldr	r0, [pc, #276]	; 1cd58 <dta_read_xmlish_header+0x2a0>
   1cc40:	add	r0, pc, r0
   1cc44:	str	r0, [sp]
   1cc48:	ldr	r1, [pc, #268]	; 1cd5c <dta_read_xmlish_header+0x2a4>
   1cc4c:	add	r1, pc, r1
   1cc50:	add	r2, sp, #8
   1cc54:	mov	r0, r5
   1cc58:	mov	r3, #2
   1cc5c:	bl	1e254 <dta_read_chunk>
   1cc60:	cmp	r0, #0
   1cc64:	beq	1cc70 <dta_read_xmlish_header+0x1b8>
   1cc68:	mov	r7, r0
   1cc6c:	b	1cb88 <dta_read_xmlish_header+0xd0>
   1cc70:	ldrh	r0, [sp, #8]
   1cc74:	cmp	r6, #0
   1cc78:	beq	1cc80 <dta_read_xmlish_header+0x1c8>
   1cc7c:	bl	4920 <byteswap2@plt>
   1cc80:	str	r0, [r4, #4]
   1cc84:	ldrb	r0, [r4]
   1cc88:	cmp	r0, #118	; 0x76
   1cc8c:	bcc	1cce0 <dta_read_xmlish_header+0x228>
   1cc90:	ldr	r0, [pc, #200]	; 1cd60 <dta_read_xmlish_header+0x2a8>
   1cc94:	add	r0, pc, r0
   1cc98:	str	r0, [sp]
   1cc9c:	ldr	r1, [pc, #192]	; 1cd64 <dta_read_xmlish_header+0x2ac>
   1cca0:	add	r1, pc, r1
   1cca4:	add	r2, sp, #8
   1cca8:	mov	r0, r5
   1ccac:	mov	r3, #8
   1ccb0:	bl	1e254 <dta_read_chunk>
   1ccb4:	mov	r7, r0
   1ccb8:	cmp	r0, #0
   1ccbc:	bne	1cb88 <dta_read_xmlish_header+0xd0>
   1ccc0:	ldr	r0, [sp, #8]
   1ccc4:	ldr	r1, [sp, #12]
   1ccc8:	cmp	r6, #0
   1cccc:	beq	1ccd4 <dta_read_xmlish_header+0x21c>
   1ccd0:	bl	47f4 <byteswap8@plt>
   1ccd4:	str	r0, [r4, #8]
   1ccd8:	str	r1, [r4, #12]
   1ccdc:	b	1cb88 <dta_read_xmlish_header+0xd0>
   1cce0:	ldr	r0, [pc, #128]	; 1cd68 <dta_read_xmlish_header+0x2b0>
   1cce4:	add	r0, pc, r0
   1cce8:	str	r0, [sp]
   1ccec:	ldr	r1, [pc, #120]	; 1cd6c <dta_read_xmlish_header+0x2b4>
   1ccf0:	add	r1, pc, r1
   1ccf4:	add	r2, sp, #8
   1ccf8:	mov	r0, r5
   1ccfc:	mov	r3, #4
   1cd00:	bl	1e254 <dta_read_chunk>
   1cd04:	mov	r7, r0
   1cd08:	cmp	r0, #0
   1cd0c:	bne	1cb88 <dta_read_xmlish_header+0xd0>
   1cd10:	ldr	r0, [sp, #8]
   1cd14:	cmp	r6, #0
   1cd18:	beq	1cd20 <dta_read_xmlish_header+0x268>
   1cd1c:	bl	480c <byteswap4@plt>
   1cd20:	mov	r1, #0
   1cd24:	str	r1, [r4, #12]
   1cd28:	str	r0, [r4, #8]
   1cd2c:	b	1cb88 <dta_read_xmlish_header+0xd0>
   1cd30:	.word	0x0000b00f
   1cd34:	.word	0x0000b003
   1cd38:	.word	0x0000b2e5
   1cd3c:	.word	0x0000afe4
   1cd40:	.word	0x0000afae
   1cd44:	.word	0x0000af96
   1cd48:	.word	0x0000af7b
   1cd4c:	.word	0x0000af63
   1cd50:	.word	0x0000af23
   1cd54:	.word	0x0000af13
   1cd58:	.word	0x0000aee3
   1cd5c:	.word	0x0000aed3
   1cd60:	.word	0x0000ae98
   1cd64:	.word	0x0000ae88
   1cd68:	.word	0x0000ae48
   1cd6c:	.word	0x0000ae38

0001cd70 <dta_read_header>:
   1cd70:	push	{r4, r5, fp, lr}
   1cd74:	add	fp, sp, #8
   1cd78:	mov	r4, r1
   1cd7c:	ldr	r0, [r0, #280]	; 0x118
   1cd80:	ldr	r3, [r0, #12]
   1cd84:	ldr	r2, [r0, #20]
   1cd88:	mov	r0, r1
   1cd8c:	mov	r1, #10
   1cd90:	blx	r3
   1cd94:	mov	r1, r0
   1cd98:	mov	r0, #2
   1cd9c:	cmp	r1, #10
   1cda0:	popne	{r4, r5, fp, pc}
   1cda4:	ldrb	r0, [r4, #1]
   1cda8:	sub	r0, r0, #2
   1cdac:	clz	r0, r0
   1cdb0:	lsr	r5, r0, #5
   1cdb4:	bl	492c <machine_is_little_endian@plt>
   1cdb8:	cmp	r0, r5
   1cdbc:	bne	1cdc8 <dta_read_header+0x58>
   1cdc0:	ldr	r0, [r4, #6]!
   1cdc4:	b	1cddc <dta_read_header+0x6c>
   1cdc8:	ldrh	r0, [r4, #4]
   1cdcc:	bl	4920 <byteswap2@plt>
   1cdd0:	strh	r0, [r4, #4]
   1cdd4:	ldr	r0, [r4, #6]!
   1cdd8:	bl	480c <byteswap4@plt>
   1cddc:	str	r0, [r4]
   1cde0:	mov	r0, #0
   1cde4:	pop	{r4, r5, fp, pc}

0001cde8 <dta_update_progress>:
   1cde8:	push	{r4, r5, fp, lr}
   1cdec:	add	fp, sp, #8
   1cdf0:	vpush	{d8}
   1cdf4:	mov	r4, r0
   1cdf8:	ldrd	r0, [r0, #168]	; 0xa8
   1cdfc:	subs	r2, r0, #1
   1ce00:	sbcs	r2, r1, #0
   1ce04:	blt	1ce30 <dta_update_progress+0x48>
   1ce08:	add	r5, r4, #184	; 0xb8
   1ce0c:	bl	24f14 <__aeabi_l2d>
   1ce10:	ldrd	r2, [r5]
   1ce14:	vmov	d8, r0, r1
   1ce18:	mov	r0, r2
   1ce1c:	mov	r1, r3
   1ce20:	bl	24f14 <__aeabi_l2d>
   1ce24:	vmov	d16, r0, r1
   1ce28:	vdiv.f64	d0, d16, d8
   1ce2c:	b	1ce34 <dta_update_progress+0x4c>
   1ce30:	vmov.i32	d0, #0	; 0x00000000
   1ce34:	ldr	r1, [r4, #268]	; 0x10c
   1ce38:	cmp	r1, #0
   1ce3c:	beq	1ce60 <dta_update_progress+0x78>
   1ce40:	ldr	r0, [r4, #276]	; 0x114
   1ce44:	blx	r1
   1ce48:	mov	r1, r0
   1ce4c:	mov	r0, #4
   1ce50:	cmp	r1, #0
   1ce54:	moveq	r0, #0
   1ce58:	vpop	{d8}
   1ce5c:	pop	{r4, r5, fp, pc}
   1ce60:	mov	r0, #0
   1ce64:	vpop	{d8}
   1ce68:	pop	{r4, r5, fp, pc}

0001ce6c <dta_read_label_and_timestamp>:
   1ce6c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ce70:	add	fp, sp, #24
   1ce74:	sub	sp, sp, #56	; 0x38
   1ce78:	mov	r4, r0
   1ce7c:	ldr	r6, [r0, #280]	; 0x118
   1ce80:	mov	r0, #0
   1ce84:	strh	r0, [fp, #-26]	; 0xffffffe6
   1ce88:	strb	r0, [fp, #-27]	; 0xffffffe5
   1ce8c:	vmov.i32	q8, #0	; 0x00000000
   1ce90:	add	r0, sp, #8
   1ce94:	add	r1, r0, #28
   1ce98:	vst1.32	{d16-d17}, [r1]
   1ce9c:	add	r1, r0, #16
   1cea0:	vst1.64	{d16-d17}, [r1]
   1cea4:	mov	r1, #32
   1cea8:	vst1.64	{d16-d17}, [r0], r1
   1ceac:	mvn	r1, #0
   1ceb0:	str	r1, [r0]
   1ceb4:	ldrb	r0, [r4, #192]	; 0xc0
   1ceb8:	tst	r0, #4
   1cebc:	bne	1d030 <dta_read_label_and_timestamp+0x1c4>
   1cec0:	ldr	r0, [r4, #4]
   1cec4:	strh	r0, [fp, #-26]	; 0xffffffe6
   1cec8:	ldrh	r0, [fp, #-26]	; 0xffffffe6
   1cecc:	add	r0, r0, #1
   1ced0:	bl	4cb0 <readstat_malloc@plt>
   1ced4:	cmp	r0, #0
   1ced8:	beq	1d098 <dta_read_label_and_timestamp+0x22c>
   1cedc:	mov	r5, r0
   1cee0:	ldr	r3, [r6, #12]
   1cee4:	ldr	r2, [r6, #20]
   1cee8:	ldrh	r1, [fp, #-26]	; 0xffffffe6
   1ceec:	blx	r3
   1cef0:	mov	r7, #2
   1cef4:	ldrh	r1, [fp, #-26]	; 0xffffffe6
   1cef8:	cmp	r0, r1
   1cefc:	bne	1d0a4 <dta_read_label_and_timestamp+0x238>
   1cf00:	ldrb	r0, [r4, #192]	; 0xc0
   1cf04:	mov	r9, #0
   1cf08:	tst	r0, #4
   1cf0c:	bne	1cf2c <dta_read_label_and_timestamp+0xc0>
   1cf10:	mov	r0, #0
   1cf14:	mov	r2, r5
   1cf18:	strb	r0, [r2, r1]!
   1cf1c:	ldrb	r9, [r2, #-1]
   1cf20:	mov	r0, r5
   1cf24:	bl	4c8c <strlen@plt>
   1cf28:	strh	r0, [fp, #-26]	; 0xffffffe6
   1cf2c:	ldrh	r0, [fp, #-26]	; 0xffffffe6
   1cf30:	mov	r7, #1
   1cf34:	orr	r0, r7, r0, lsl #2
   1cf38:	bl	4cb0 <readstat_malloc@plt>
   1cf3c:	str	r0, [r4]
   1cf40:	cmp	r0, #0
   1cf44:	beq	1d0a0 <dta_read_label_and_timestamp+0x234>
   1cf48:	ldr	r1, [r4, #236]	; 0xec
   1cf4c:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   1cf50:	str	r1, [sp]
   1cf54:	orr	r1, r7, r3, lsl #2
   1cf58:	mov	r2, r5
   1cf5c:	bl	4cbc <readstat_convert@plt>
   1cf60:	mov	r7, r0
   1cf64:	cmp	r0, #0
   1cf68:	bne	1d0a4 <dta_read_label_and_timestamp+0x238>
   1cf6c:	ldrb	r0, [r4, #192]	; 0xc0
   1cf70:	tst	r0, #4
   1cf74:	bne	1d0e4 <dta_read_label_and_timestamp+0x278>
   1cf78:	ldr	r0, [r4, #16]
   1cf7c:	strb	r0, [fp, #-27]	; 0xffffffe5
   1cf80:	tst	r0, #255	; 0xff
   1cf84:	beq	1d148 <dta_read_label_and_timestamp+0x2dc>
   1cf88:	uxtb	r0, r0
   1cf8c:	bl	4cb0 <readstat_malloc@plt>
   1cf90:	mov	r8, r0
   1cf94:	ldr	r3, [r6, #12]
   1cf98:	ldr	r2, [r6, #20]
   1cf9c:	ldrb	r1, [fp, #-27]	; 0xffffffe5
   1cfa0:	blx	r3
   1cfa4:	mov	r7, #2
   1cfa8:	ldrb	r1, [fp, #-27]	; 0xffffffe5
   1cfac:	cmp	r0, r1
   1cfb0:	bne	1d160 <dta_read_label_and_timestamp+0x2f4>
   1cfb4:	ldrb	r0, [r4, #192]	; 0xc0
   1cfb8:	tst	r0, #4
   1cfbc:	subeq	r0, r1, #1
   1cfc0:	strbeq	r0, [fp, #-27]	; 0xffffffe5
   1cfc4:	ldrb	r0, [r8]
   1cfc8:	cmp	r0, #0
   1cfcc:	beq	1d14c <dta_read_label_and_timestamp+0x2e0>
   1cfd0:	cmp	r9, #0
   1cfd4:	beq	1cffc <dta_read_label_and_timestamp+0x190>
   1cfd8:	ldrb	r0, [fp, #-27]	; 0xffffffe5
   1cfdc:	sub	r2, r0, #1
   1cfe0:	ldrb	r0, [r8, r2]
   1cfe4:	cmp	r0, #0
   1cfe8:	bne	1cffc <dta_read_label_and_timestamp+0x190>
   1cfec:	add	r0, r8, #1
   1cff0:	mov	r1, r8
   1cff4:	bl	4914 <memmove@plt>
   1cff8:	strb	r9, [r8]
   1cffc:	ldr	r3, [r4, #264]	; 0x108
   1d000:	ldr	r0, [r4, #276]	; 0x114
   1d004:	ldrb	r1, [fp, #-27]	; 0xffffffe5
   1d008:	str	r0, [sp]
   1d00c:	add	r2, sp, #8
   1d010:	mov	r0, r8
   1d014:	bl	4d7c <dta_parse_timestamp@plt>
   1d018:	cmp	r0, #0
   1d01c:	beq	1d178 <dta_read_label_and_timestamp+0x30c>
   1d020:	mov	r7, r0
   1d024:	mov	r0, r5
   1d028:	bl	4938 <free@plt>
   1d02c:	b	1d170 <dta_read_label_and_timestamp+0x304>
   1d030:	ldr	r1, [pc, #336]	; 1d188 <dta_read_label_and_timestamp+0x31c>
   1d034:	add	r1, pc, r1
   1d038:	mov	r0, r4
   1d03c:	bl	1d198 <dta_read_tag>
   1d040:	mov	r7, r0
   1d044:	cmp	r0, #0
   1d048:	bne	1d0ac <dta_read_label_and_timestamp+0x240>
   1d04c:	ldr	r0, [r4, #8]
   1d050:	cmp	r0, #1
   1d054:	beq	1d0b8 <dta_read_label_and_timestamp+0x24c>
   1d058:	cmp	r0, #2
   1d05c:	bne	1cec8 <dta_read_label_and_timestamp+0x5c>
   1d060:	ldr	r3, [r6, #12]
   1d064:	ldr	r2, [r6, #20]
   1d068:	sub	r0, fp, #26
   1d06c:	mov	r7, #2
   1d070:	mov	r1, #2
   1d074:	blx	r3
   1d078:	cmp	r0, #2
   1d07c:	bne	1d0ac <dta_read_label_and_timestamp+0x240>
   1d080:	ldrb	r1, [r4, #192]	; 0xc0
   1d084:	ldrh	r0, [fp, #-26]	; 0xffffffe6
   1d088:	tst	r1, #1
   1d08c:	beq	1cec4 <dta_read_label_and_timestamp+0x58>
   1d090:	bl	4920 <byteswap2@plt>
   1d094:	b	1cec4 <dta_read_label_and_timestamp+0x58>
   1d098:	mov	r7, #3
   1d09c:	b	1d0ac <dta_read_label_and_timestamp+0x240>
   1d0a0:	mov	r7, #3
   1d0a4:	mov	r0, r5
   1d0a8:	bl	4938 <free@plt>
   1d0ac:	mov	r0, r7
   1d0b0:	sub	sp, fp, #24
   1d0b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d0b8:	ldr	r3, [r6, #12]
   1d0bc:	ldr	r2, [r6, #20]
   1d0c0:	add	r0, sp, #7
   1d0c4:	mov	r1, #1
   1d0c8:	blx	r3
   1d0cc:	cmp	r0, #1
   1d0d0:	bne	1d0dc <dta_read_label_and_timestamp+0x270>
   1d0d4:	ldrb	r0, [sp, #7]
   1d0d8:	b	1cec4 <dta_read_label_and_timestamp+0x58>
   1d0dc:	mov	r7, #2
   1d0e0:	b	1d0ac <dta_read_label_and_timestamp+0x240>
   1d0e4:	ldr	r1, [pc, #160]	; 1d18c <dta_read_label_and_timestamp+0x320>
   1d0e8:	add	r1, pc, r1
   1d0ec:	mov	r0, r4
   1d0f0:	bl	1d198 <dta_read_tag>
   1d0f4:	mov	r7, r0
   1d0f8:	cmp	r0, #0
   1d0fc:	bne	1d0a4 <dta_read_label_and_timestamp+0x238>
   1d100:	ldr	r1, [pc, #136]	; 1d190 <dta_read_label_and_timestamp+0x324>
   1d104:	add	r1, pc, r1
   1d108:	mov	r0, r4
   1d10c:	bl	1d198 <dta_read_tag>
   1d110:	mov	r7, r0
   1d114:	cmp	r0, #0
   1d118:	bne	1d0a4 <dta_read_label_and_timestamp+0x238>
   1d11c:	ldr	r3, [r6, #12]
   1d120:	ldr	r2, [r6, #20]
   1d124:	sub	r0, fp, #27
   1d128:	mov	r1, #1
   1d12c:	blx	r3
   1d130:	cmp	r0, #1
   1d134:	mov	r7, #2
   1d138:	bne	1d0a4 <dta_read_label_and_timestamp+0x238>
   1d13c:	ldrb	r0, [fp, #-27]	; 0xffffffe5
   1d140:	tst	r0, #255	; 0xff
   1d144:	bne	1cf88 <dta_read_label_and_timestamp+0x11c>
   1d148:	mov	r8, #0
   1d14c:	ldr	r1, [pc, #64]	; 1d194 <dta_read_label_and_timestamp+0x328>
   1d150:	add	r1, pc, r1
   1d154:	mov	r0, r4
   1d158:	bl	1d198 <dta_read_tag>
   1d15c:	mov	r7, r0
   1d160:	mov	r0, r5
   1d164:	bl	4938 <free@plt>
   1d168:	cmp	r8, #0
   1d16c:	beq	1d0ac <dta_read_label_and_timestamp+0x240>
   1d170:	mov	r0, r8
   1d174:	b	1d0a8 <dta_read_label_and_timestamp+0x23c>
   1d178:	add	r0, sp, #8
   1d17c:	bl	48cc <mktime@plt>
   1d180:	str	r0, [r4, #12]
   1d184:	b	1d14c <dta_read_label_and_timestamp+0x2e0>
   1d188:	.word	0x0000aafd
   1d18c:	.word	0x0000aa51
   1d190:	.word	0x0000aa3e
   1d194:	.word	0x0000a9fe

0001d198 <dta_read_tag>:
   1d198:	push	{r4, r5, r6, sl, fp, lr}
   1d19c:	add	fp, sp, #16
   1d1a0:	sub	sp, sp, #256	; 0x100
   1d1a4:	mov	r4, r1
   1d1a8:	mov	r6, r0
   1d1ac:	ldr	r0, [r0, #284]	; 0x11c
   1d1b0:	cmp	r0, #0
   1d1b4:	beq	1d1c8 <dta_read_tag+0x30>
   1d1b8:	ldrb	r1, [r6, #192]	; 0xc0
   1d1bc:	mov	r0, #0
   1d1c0:	tst	r1, #4
   1d1c4:	beq	1d214 <dta_read_tag+0x7c>
   1d1c8:	mov	r0, r4
   1d1cc:	bl	4c8c <strlen@plt>
   1d1d0:	mov	r5, r0
   1d1d4:	ldr	r0, [r6, #280]	; 0x118
   1d1d8:	ldr	r3, [r0, #12]
   1d1dc:	ldr	r2, [r0, #20]
   1d1e0:	mov	r0, sp
   1d1e4:	mov	r1, r5
   1d1e8:	blx	r3
   1d1ec:	mov	r1, r0
   1d1f0:	mov	r0, #2
   1d1f4:	cmp	r1, r5
   1d1f8:	bne	1d214 <dta_read_tag+0x7c>
   1d1fc:	mov	r0, sp
   1d200:	mov	r1, r4
   1d204:	mov	r2, r5
   1d208:	bl	4f98 <strncmp@plt>
   1d20c:	cmp	r0, #0
   1d210:	movwne	r0, #5
   1d214:	sub	sp, fp, #16
   1d218:	pop	{r4, r5, r6, sl, fp, pc}

0001d21c <dta_read_map>:
   1d21c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d220:	add	fp, sp, #24
   1d224:	sub	sp, sp, #120	; 0x78
   1d228:	mov	r5, r0
   1d22c:	ldrb	r0, [r0, #192]	; 0xc0
   1d230:	mov	r4, #0
   1d234:	tst	r0, #4
   1d238:	beq	1d2d0 <dta_read_map+0xb4>
   1d23c:	ldr	r0, [pc, #152]	; 1d2dc <dta_read_map+0xc0>
   1d240:	add	r0, pc, r0
   1d244:	str	r0, [sp]
   1d248:	ldr	r1, [pc, #144]	; 1d2e0 <dta_read_map+0xc4>
   1d24c:	add	r1, pc, r1
   1d250:	add	r2, sp, #8
   1d254:	mov	r0, r5
   1d258:	mov	r3, #112	; 0x70
   1d25c:	bl	1e254 <dta_read_chunk>
   1d260:	mov	r4, r0
   1d264:	cmp	r0, #0
   1d268:	bne	1d2d0 <dta_read_map+0xb4>
   1d26c:	add	r6, sp, #8
   1d270:	add	r0, r6, #72	; 0x48
   1d274:	add	r9, r6, #80	; 0x50
   1d278:	add	r7, r5, #120	; 0x78
   1d27c:	ldrd	r0, [r0]
   1d280:	ldrb	r2, [r5, #192]	; 0xc0
   1d284:	tst	r2, #1
   1d288:	beq	1d290 <dta_read_map+0x74>
   1d28c:	bl	47f4 <byteswap8@plt>
   1d290:	add	r8, r6, #88	; 0x58
   1d294:	add	r6, r5, #128	; 0x80
   1d298:	strd	r0, [r7]
   1d29c:	ldrd	r0, [r9]
   1d2a0:	ldrb	r2, [r5, #192]	; 0xc0
   1d2a4:	tst	r2, #1
   1d2a8:	beq	1d2b0 <dta_read_map+0x94>
   1d2ac:	bl	47f4 <byteswap8@plt>
   1d2b0:	add	r7, r5, #136	; 0x88
   1d2b4:	strd	r0, [r6]
   1d2b8:	ldrd	r0, [r8]
   1d2bc:	ldrb	r2, [r5, #192]	; 0xc0
   1d2c0:	tst	r2, #1
   1d2c4:	beq	1d2cc <dta_read_map+0xb0>
   1d2c8:	bl	47f4 <byteswap8@plt>
   1d2cc:	strd	r0, [r7]
   1d2d0:	mov	r0, r4
   1d2d4:	sub	sp, fp, #24
   1d2d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d2dc:	.word	0x0000a921
   1d2e0:	.word	0x0000a90f

0001d2e4 <dta_read_descriptors>:
   1d2e4:	push	{r4, r5, r6, r7, fp, lr}
   1d2e8:	add	fp, sp, #16
   1d2ec:	sub	sp, sp, #8
   1d2f0:	mov	r5, r0
   1d2f4:	ldr	r0, [r0, #24]
   1d2f8:	ldr	r1, [r5, #148]	; 0x94
   1d2fc:	mul	r7, r0, r1
   1d300:	cmp	r1, #0
   1d304:	beq	1d324 <dta_read_descriptors+0x40>
   1d308:	mov	r0, r7
   1d30c:	bl	4cb0 <readstat_malloc@plt>
   1d310:	mov	r4, r0
   1d314:	cmp	r0, #0
   1d318:	bne	1d328 <dta_read_descriptors+0x44>
   1d31c:	mov	r6, #3
   1d320:	b	1d500 <dta_read_descriptors+0x21c>
   1d324:	mov	r4, #0
   1d328:	ldr	r0, [pc, #476]	; 1d50c <dta_read_descriptors+0x228>
   1d32c:	add	r0, pc, r0
   1d330:	str	r0, [sp]
   1d334:	ldr	r1, [pc, #468]	; 1d510 <dta_read_descriptors+0x22c>
   1d338:	add	r1, pc, r1
   1d33c:	mov	r0, r5
   1d340:	mov	r2, r4
   1d344:	mov	r3, r7
   1d348:	bl	1e254 <dta_read_chunk>
   1d34c:	mov	r6, r0
   1d350:	cmp	r0, #0
   1d354:	bne	1d4f0 <dta_read_descriptors+0x20c>
   1d358:	ldr	r0, [r5, #24]
   1d35c:	cmp	r0, #2
   1d360:	beq	1d3a8 <dta_read_descriptors+0xc4>
   1d364:	cmp	r0, #1
   1d368:	bne	1d408 <dta_read_descriptors+0x124>
   1d36c:	ldr	r0, [r5, #148]	; 0x94
   1d370:	cmp	r0, #1
   1d374:	blt	1d408 <dta_read_descriptors+0x124>
   1d378:	mov	r0, #0
   1d37c:	mov	r1, #0
   1d380:	ldrb	r2, [r4, r1]
   1d384:	ldr	r3, [r5, #28]
   1d388:	add	r3, r3, r0
   1d38c:	strh	r2, [r3]
   1d390:	add	r0, r0, #2
   1d394:	add	r1, r1, #1
   1d398:	ldr	r2, [r5, #148]	; 0x94
   1d39c:	cmp	r1, r2
   1d3a0:	blt	1d380 <dta_read_descriptors+0x9c>
   1d3a4:	b	1d408 <dta_read_descriptors+0x124>
   1d3a8:	ldr	r0, [r5, #28]
   1d3ac:	mov	r1, r4
   1d3b0:	mov	r2, r7
   1d3b4:	bl	4998 <memcpy@plt>
   1d3b8:	ldrb	r0, [r5, #192]	; 0xc0
   1d3bc:	tst	r0, #1
   1d3c0:	beq	1d408 <dta_read_descriptors+0x124>
   1d3c4:	ldr	r0, [r5, #148]	; 0x94
   1d3c8:	cmp	r0, #1
   1d3cc:	blt	1d408 <dta_read_descriptors+0x124>
   1d3d0:	mov	r6, #0
   1d3d4:	mov	r7, #0
   1d3d8:	ldr	r0, [r5, #28]
   1d3dc:	add	r0, r0, r6
   1d3e0:	ldrh	r0, [r0]
   1d3e4:	bl	4920 <byteswap2@plt>
   1d3e8:	ldr	r1, [r5, #28]
   1d3ec:	add	r1, r1, r6
   1d3f0:	strh	r0, [r1]
   1d3f4:	add	r6, r6, #2
   1d3f8:	add	r7, r7, #1
   1d3fc:	ldr	r0, [r5, #148]	; 0x94
   1d400:	cmp	r7, r0
   1d404:	blt	1d3d8 <dta_read_descriptors+0xf4>
   1d408:	ldr	r2, [r5, #36]	; 0x24
   1d40c:	ldr	r3, [r5, #40]	; 0x28
   1d410:	ldr	r0, [pc, #252]	; 1d514 <dta_read_descriptors+0x230>
   1d414:	add	r0, pc, r0
   1d418:	str	r0, [sp]
   1d41c:	ldr	r1, [pc, #244]	; 1d518 <dta_read_descriptors+0x234>
   1d420:	add	r1, pc, r1
   1d424:	mov	r0, r5
   1d428:	bl	1e254 <dta_read_chunk>
   1d42c:	mov	r6, r0
   1d430:	cmp	r0, #0
   1d434:	bne	1d4f0 <dta_read_descriptors+0x20c>
   1d438:	ldr	r2, [r5, #44]	; 0x2c
   1d43c:	ldr	r3, [r5, #48]	; 0x30
   1d440:	ldr	r0, [pc, #212]	; 1d51c <dta_read_descriptors+0x238>
   1d444:	add	r0, pc, r0
   1d448:	str	r0, [sp]
   1d44c:	ldr	r1, [pc, #204]	; 1d520 <dta_read_descriptors+0x23c>
   1d450:	add	r1, pc, r1
   1d454:	mov	r0, r5
   1d458:	bl	1e254 <dta_read_chunk>
   1d45c:	mov	r6, r0
   1d460:	cmp	r0, #0
   1d464:	bne	1d4f0 <dta_read_descriptors+0x20c>
   1d468:	ldr	r2, [r5, #52]	; 0x34
   1d46c:	ldr	r3, [r5, #56]	; 0x38
   1d470:	ldr	r0, [pc, #172]	; 1d524 <dta_read_descriptors+0x240>
   1d474:	add	r0, pc, r0
   1d478:	str	r0, [sp]
   1d47c:	ldr	r1, [pc, #164]	; 1d528 <dta_read_descriptors+0x244>
   1d480:	add	r1, pc, r1
   1d484:	mov	r0, r5
   1d488:	bl	1e254 <dta_read_chunk>
   1d48c:	mov	r6, r0
   1d490:	cmp	r0, #0
   1d494:	bne	1d4f0 <dta_read_descriptors+0x20c>
   1d498:	ldr	r2, [r5, #60]	; 0x3c
   1d49c:	ldr	r3, [r5, #64]	; 0x40
   1d4a0:	ldr	r0, [pc, #132]	; 1d52c <dta_read_descriptors+0x248>
   1d4a4:	add	r0, pc, r0
   1d4a8:	str	r0, [sp]
   1d4ac:	ldr	r1, [pc, #124]	; 1d530 <dta_read_descriptors+0x24c>
   1d4b0:	add	r1, pc, r1
   1d4b4:	mov	r0, r5
   1d4b8:	bl	1e254 <dta_read_chunk>
   1d4bc:	mov	r6, r0
   1d4c0:	cmp	r0, #0
   1d4c4:	bne	1d4f0 <dta_read_descriptors+0x20c>
   1d4c8:	ldr	r2, [r5, #68]	; 0x44
   1d4cc:	ldr	r3, [r5, #72]	; 0x48
   1d4d0:	ldr	r0, [pc, #92]	; 1d534 <dta_read_descriptors+0x250>
   1d4d4:	add	r0, pc, r0
   1d4d8:	str	r0, [sp]
   1d4dc:	ldr	r1, [pc, #84]	; 1d538 <dta_read_descriptors+0x254>
   1d4e0:	add	r1, pc, r1
   1d4e4:	mov	r0, r5
   1d4e8:	bl	1e254 <dta_read_chunk>
   1d4ec:	mov	r6, r0
   1d4f0:	cmp	r4, #0
   1d4f4:	beq	1d500 <dta_read_descriptors+0x21c>
   1d4f8:	mov	r0, r4
   1d4fc:	bl	4938 <free@plt>
   1d500:	mov	r0, r6
   1d504:	sub	sp, fp, #16
   1d508:	pop	{r4, r5, r6, r7, fp, pc}
   1d50c:	.word	0x0000a84d
   1d510:	.word	0x0000a830
   1d514:	.word	0x0000a782
   1d518:	.word	0x0000a76b
   1d51c:	.word	0x0000a769
   1d520:	.word	0x0000a752
   1d524:	.word	0x0000a74f
   1d528:	.word	0x0000a739
   1d52c:	.word	0x0000a73e
   1d530:	.word	0x0000a71e
   1d534:	.word	0x0000a735
   1d538:	.word	0x0000a717

0001d53c <dta_handle_variables>:
   1d53c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d540:	add	fp, sp, #28
   1d544:	sub	sp, sp, #12
   1d548:	mov	r4, r0
   1d54c:	ldr	r1, [r0, #248]	; 0xf8
   1d550:	mov	r0, #0
   1d554:	cmp	r1, #0
   1d558:	beq	1d668 <dta_handle_variables+0x12c>
   1d55c:	ldr	r1, [r4, #148]	; 0x94
   1d560:	cmp	r1, #1
   1d564:	blt	1d668 <dta_handle_variables+0x12c>
   1d568:	add	r8, sp, #8
   1d56c:	add	r9, sp, #4
   1d570:	mov	sl, #0
   1d574:	mov	r7, #0
   1d578:	mov	r5, #0
   1d57c:	b	1d5a4 <dta_handle_variables+0x68>
   1d580:	ldr	r0, [r4, #228]	; 0xe4
   1d584:	ldr	r0, [r0, r5, lsl #2]
   1d588:	mov	r1, #1
   1d58c:	str	r1, [r0, #2144]	; 0x860
   1d590:	add	sl, sl, #2
   1d594:	add	r5, r5, #1
   1d598:	ldr	r0, [r4, #148]	; 0x94
   1d59c:	cmp	r5, r0
   1d5a0:	bge	1d664 <dta_handle_variables+0x128>
   1d5a4:	ldr	r0, [r4, #28]
   1d5a8:	add	r0, r0, sl
   1d5ac:	ldrh	r0, [r0]
   1d5b0:	mov	r1, r4
   1d5b4:	mov	r2, r8
   1d5b8:	mov	r3, r9
   1d5bc:	bl	4c68 <dta_type_info@plt>
   1d5c0:	cmp	r0, #0
   1d5c4:	bne	1d668 <dta_handle_variables+0x12c>
   1d5c8:	ldr	r0, [sp, #4]
   1d5cc:	cmp	r0, #6
   1d5d0:	beq	1d5ec <dta_handle_variables+0xb0>
   1d5d4:	cmp	r0, #0
   1d5d8:	bne	1d5f8 <dta_handle_variables+0xbc>
   1d5dc:	ldr	r0, [sp, #8]
   1d5e0:	add	r0, r0, #1
   1d5e4:	str	r0, [sp, #8]
   1d5e8:	b	1d5f8 <dta_handle_variables+0xbc>
   1d5ec:	mov	r0, #0
   1d5f0:	str	r0, [sp, #8]
   1d5f4:	str	r0, [sp, #4]
   1d5f8:	ldr	r3, [sp, #4]
   1d5fc:	ldr	r0, [sp, #8]
   1d600:	str	r0, [sp]
   1d604:	mov	r0, r4
   1d608:	mov	r1, r5
   1d60c:	mov	r2, r7
   1d610:	bl	1e2b4 <dta_init_variable>
   1d614:	ldr	r1, [r4, #228]	; 0xe4
   1d618:	str	r0, [r1, r5, lsl #2]
   1d61c:	ldr	r2, [r4, #60]	; 0x3c
   1d620:	ldr	r0, [r4, #84]	; 0x54
   1d624:	ldr	r1, [r4, #228]	; 0xe4
   1d628:	ldr	r6, [r4, #248]	; 0xf8
   1d62c:	ldr	r1, [r1, r5, lsl #2]
   1d630:	mul	r0, r0, r5
   1d634:	ldrb	r0, [r2, r0]!
   1d638:	cmp	r0, #0
   1d63c:	moveq	r2, r0
   1d640:	ldr	r3, [r4, #276]	; 0x114
   1d644:	mov	r0, r5
   1d648:	blx	r6
   1d64c:	cmp	r0, #2
   1d650:	beq	1d580 <dta_handle_variables+0x44>
   1d654:	cmp	r0, #1
   1d658:	beq	1d670 <dta_handle_variables+0x134>
   1d65c:	add	r7, r7, #1
   1d660:	b	1d590 <dta_handle_variables+0x54>
   1d664:	mov	r0, #0
   1d668:	sub	sp, fp, #28
   1d66c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d670:	mov	r0, #4
   1d674:	sub	sp, fp, #28
   1d678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d67c <dta_read_expansion_fields>:
   1d67c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d680:	add	fp, sp, #28
   1d684:	sub	sp, sp, #28
   1d688:	mov	r4, r0
   1d68c:	ldr	r0, [r0, #92]	; 0x5c
   1d690:	cmp	r0, #0
   1d694:	beq	1d6e4 <dta_read_expansion_fields+0x68>
   1d698:	ldr	r9, [r4, #280]	; 0x118
   1d69c:	ldrb	r0, [r4, #192]	; 0xc0
   1d6a0:	tst	r0, #4
   1d6a4:	beq	1d6b4 <dta_read_expansion_fields+0x38>
   1d6a8:	ldr	r0, [r4, #244]	; 0xf4
   1d6ac:	cmp	r0, #0
   1d6b0:	beq	1d94c <dta_read_expansion_fields+0x2d0>
   1d6b4:	ldr	r1, [pc, #860]	; 1da18 <dta_read_expansion_fields+0x39c>
   1d6b8:	add	r1, pc, r1
   1d6bc:	mov	r0, r4
   1d6c0:	bl	1d198 <dta_read_tag>
   1d6c4:	mov	r8, r0
   1d6c8:	cmp	r0, #0
   1d6cc:	bne	1da00 <dta_read_expansion_fields+0x384>
   1d6d0:	add	r7, sp, #23
   1d6d4:	mov	r6, #0
   1d6d8:	mov	r0, #0
   1d6dc:	str	r0, [sp, #8]
   1d6e0:	b	1d6fc <dta_read_expansion_fields+0x80>
   1d6e4:	mov	r8, #0
   1d6e8:	b	1da00 <dta_read_expansion_fields+0x384>
   1d6ec:	mov	r8, #2
   1d6f0:	cmp	r5, #0
   1d6f4:	mov	r6, r8
   1d6f8:	bne	1d9bc <dta_read_expansion_fields+0x340>
   1d6fc:	ldrb	r0, [r4, #192]	; 0xc0
   1d700:	tst	r0, #4
   1d704:	bne	1d768 <dta_read_expansion_fields+0xec>
   1d708:	ldr	r3, [r9, #12]
   1d70c:	ldr	r2, [r9, #20]
   1d710:	add	r0, sp, #27
   1d714:	mov	r1, #1
   1d718:	blx	r3
   1d71c:	cmp	r0, #1
   1d720:	bne	1d9b4 <dta_read_expansion_fields+0x338>
   1d724:	ldr	r0, [r4, #92]	; 0x5c
   1d728:	cmp	r0, #2
   1d72c:	bne	1d7d0 <dta_read_expansion_fields+0x154>
   1d730:	ldr	r3, [r9, #12]
   1d734:	ldr	r2, [r9, #20]
   1d738:	add	r0, sp, #20
   1d73c:	mov	r1, #2
   1d740:	blx	r3
   1d744:	cmp	r0, #2
   1d748:	bne	1d9b4 <dta_read_expansion_fields+0x338>
   1d74c:	ldrb	r0, [r4, #192]	; 0xc0
   1d750:	ldrh	sl, [sp, #20]
   1d754:	tst	r0, #1
   1d758:	beq	1d808 <dta_read_expansion_fields+0x18c>
   1d75c:	mov	r0, sl
   1d760:	bl	4920 <byteswap2@plt>
   1d764:	b	1d804 <dta_read_expansion_fields+0x188>
   1d768:	ldr	r3, [r9, #12]
   1d76c:	ldr	r2, [r9, #20]
   1d770:	mov	r0, r7
   1d774:	mov	r1, #4
   1d778:	blx	r3
   1d77c:	mov	r5, #2
   1d780:	cmp	r0, #4
   1d784:	bne	1d6ec <dta_read_expansion_fields+0x70>
   1d788:	mov	r0, r7
   1d78c:	ldr	r1, [pc, #648]	; 1da1c <dta_read_expansion_fields+0x3a0>
   1d790:	add	r1, pc, r1
   1d794:	mov	r2, #4
   1d798:	bl	4c74 <bcmp@plt>
   1d79c:	cmp	r0, #0
   1d7a0:	beq	1d928 <dta_read_expansion_fields+0x2ac>
   1d7a4:	mov	r0, r7
   1d7a8:	ldr	r1, [pc, #628]	; 1da24 <dta_read_expansion_fields+0x3a8>
   1d7ac:	add	r1, pc, r1
   1d7b0:	mov	r2, #4
   1d7b4:	bl	4c74 <bcmp@plt>
   1d7b8:	mov	r8, #5
   1d7bc:	cmp	r0, #0
   1d7c0:	bne	1d6f0 <dta_read_expansion_fields+0x74>
   1d7c4:	mov	r0, #1
   1d7c8:	strb	r0, [sp, #27]
   1d7cc:	b	1d724 <dta_read_expansion_fields+0xa8>
   1d7d0:	ldr	r3, [r9, #12]
   1d7d4:	ldr	r2, [r9, #20]
   1d7d8:	add	r0, sp, #16
   1d7dc:	mov	r1, #4
   1d7e0:	blx	r3
   1d7e4:	cmp	r0, #4
   1d7e8:	bne	1d9b4 <dta_read_expansion_fields+0x338>
   1d7ec:	ldrb	r0, [r4, #192]	; 0xc0
   1d7f0:	ldr	sl, [sp, #16]
   1d7f4:	tst	r0, #1
   1d7f8:	beq	1d808 <dta_read_expansion_fields+0x18c>
   1d7fc:	mov	r0, sl
   1d800:	bl	480c <byteswap4@plt>
   1d804:	mov	sl, r0
   1d808:	ldrb	r0, [sp, #27]
   1d80c:	cmp	sl, #0
   1d810:	cmpeq	r0, #0
   1d814:	beq	1d9cc <dta_read_expansion_fields+0x350>
   1d818:	mov	r8, #32
   1d81c:	cmp	sl, #1048576	; 0x100000
   1d820:	bhi	1d9f0 <dta_read_expansion_fields+0x374>
   1d824:	cmp	r0, #1
   1d828:	bne	1d9f0 <dta_read_expansion_fields+0x374>
   1d82c:	ldr	r0, [r4, #244]	; 0xf4
   1d830:	cmp	r0, #0
   1d834:	beq	1d844 <dta_read_expansion_fields+0x1c8>
   1d838:	ldr	r0, [r4, #96]	; 0x60
   1d83c:	cmp	sl, r0, lsl #1
   1d840:	bcs	1d864 <dta_read_expansion_fields+0x1e8>
   1d844:	ldr	r3, [r9, #8]
   1d848:	ldr	r2, [r9, #20]
   1d84c:	mov	r0, sl
   1d850:	mov	r1, #1
   1d854:	blx	r3
   1d858:	cmn	r0, #1
   1d85c:	bne	1d900 <dta_read_expansion_fields+0x284>
   1d860:	b	1d9dc <dta_read_expansion_fields+0x360>
   1d864:	add	r1, sl, #1
   1d868:	ldr	r0, [sp, #8]
   1d86c:	bl	4d70 <readstat_realloc@plt>
   1d870:	cmp	r0, #0
   1d874:	beq	1d9e4 <dta_read_expansion_fields+0x368>
   1d878:	mov	r6, r0
   1d87c:	mov	r5, #0
   1d880:	strb	r5, [r0, sl]
   1d884:	ldr	r3, [r9, #12]
   1d888:	ldr	r2, [r9, #20]
   1d88c:	mov	r1, sl
   1d890:	blx	r3
   1d894:	cmp	r0, sl
   1d898:	str	r6, [sp, #8]
   1d89c:	bne	1d9b4 <dta_read_expansion_fields+0x338>
   1d8a0:	str	r5, [sp, #12]
   1d8a4:	mov	r0, r6
   1d8a8:	ldr	r1, [pc, #376]	; 1da28 <dta_read_expansion_fields+0x3ac>
   1d8ac:	add	r1, pc, r1
   1d8b0:	mov	r2, #4
   1d8b4:	bl	4f98 <strncmp@plt>
   1d8b8:	cmp	r0, #0
   1d8bc:	bne	1d900 <dta_read_expansion_fields+0x284>
   1d8c0:	ldr	r0, [r4, #96]	; 0x60
   1d8c4:	add	r0, r6, r0
   1d8c8:	ldr	r1, [pc, #348]	; 1da2c <dta_read_expansion_fields+0x3b0>
   1d8cc:	add	r1, pc, r1
   1d8d0:	add	r2, sp, #12
   1d8d4:	bl	4d10 <__isoc99_sscanf@plt>
   1d8d8:	cmp	r0, #1
   1d8dc:	bne	1d900 <dta_read_expansion_fields+0x284>
   1d8e0:	ldr	r0, [r4, #96]	; 0x60
   1d8e4:	ldr	r3, [r4, #244]	; 0xf4
   1d8e8:	ldr	r2, [r4, #276]	; 0x114
   1d8ec:	add	r1, r6, r0, lsl #1
   1d8f0:	ldr	r0, [sp, #12]
   1d8f4:	blx	r3
   1d8f8:	cmp	r0, #0
   1d8fc:	bne	1da0c <dta_read_expansion_fields+0x390>
   1d900:	mov	r0, r4
   1d904:	ldr	r1, [pc, #292]	; 1da30 <dta_read_expansion_fields+0x3b4>
   1d908:	add	r1, pc, r1
   1d90c:	bl	1d198 <dta_read_tag>
   1d910:	mov	r8, #0
   1d914:	cmp	r0, #0
   1d918:	add	r7, sp, #23
   1d91c:	bne	1d9d4 <dta_read_expansion_fields+0x358>
   1d920:	mov	r5, #0
   1d924:	b	1d6f0 <dta_read_expansion_fields+0x74>
   1d928:	mov	r0, r4
   1d92c:	ldr	r1, [pc, #236]	; 1da20 <dta_read_expansion_fields+0x3a4>
   1d930:	add	r1, pc, r1
   1d934:	bl	1d198 <dta_read_tag>
   1d938:	mov	r8, r0
   1d93c:	cmp	r0, #0
   1d940:	mov	r5, #2
   1d944:	movweq	r5, #4
   1d948:	b	1d6f0 <dta_read_expansion_fields+0x74>
   1d94c:	mov	r5, r4
   1d950:	ldr	r0, [r5, #120]!	; 0x78
   1d954:	ldr	r3, [r9, #8]
   1d958:	ldr	r2, [r9, #20]
   1d95c:	mov	r8, #0
   1d960:	mov	r1, #0
   1d964:	blx	r3
   1d968:	cmn	r0, #1
   1d96c:	bne	1da00 <dta_read_expansion_fields+0x384>
   1d970:	ldr	r0, [r4, #264]	; 0x108
   1d974:	mov	r8, #15
   1d978:	cmp	r0, #0
   1d97c:	beq	1da00 <dta_read_expansion_fields+0x384>
   1d980:	ldrd	r0, [r5]
   1d984:	stm	sp, {r0, r1}
   1d988:	add	r5, r4, #288	; 0x120
   1d98c:	ldr	r2, [pc, #128]	; 1da14 <dta_read_expansion_fields+0x398>
   1d990:	add	r2, pc, r2
   1d994:	mov	r0, r5
   1d998:	mov	r1, #256	; 0x100
   1d99c:	bl	4d04 <snprintf@plt>
   1d9a0:	ldr	r2, [r4, #264]	; 0x108
   1d9a4:	ldr	r1, [r4, #276]	; 0x114
   1d9a8:	mov	r0, r5
   1d9ac:	blx	r2
   1d9b0:	b	1da00 <dta_read_expansion_fields+0x384>
   1d9b4:	mov	r8, #2
   1d9b8:	b	1d9f0 <dta_read_expansion_fields+0x374>
   1d9bc:	cmp	r5, #4
   1d9c0:	cmpne	r5, #2
   1d9c4:	beq	1d9f0 <dta_read_expansion_fields+0x374>
   1d9c8:	b	1da00 <dta_read_expansion_fields+0x384>
   1d9cc:	mov	r8, r6
   1d9d0:	b	1d9f0 <dta_read_expansion_fields+0x374>
   1d9d4:	mov	r8, r0
   1d9d8:	b	1d9f0 <dta_read_expansion_fields+0x374>
   1d9dc:	mov	r8, #15
   1d9e0:	b	1d9f0 <dta_read_expansion_fields+0x374>
   1d9e4:	mov	r0, #0
   1d9e8:	str	r0, [sp, #8]
   1d9ec:	mov	r8, #3
   1d9f0:	ldr	r0, [sp, #8]
   1d9f4:	cmp	r0, #0
   1d9f8:	beq	1da00 <dta_read_expansion_fields+0x384>
   1d9fc:	bl	4938 <free@plt>
   1da00:	mov	r0, r8
   1da04:	sub	sp, fp, #28
   1da08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1da0c:	mov	r8, #4
   1da10:	b	1d9f0 <dta_read_expansion_fields+0x374>
   1da14:	.word	0x0000a299
   1da18:	.word	0x0000a59e
   1da1c:	.word	0x0000a4d8
   1da20:	.word	0x0000a4ed
   1da24:	.word	0x0000a4c1
   1da28:	.word	0x0000a3c6
   1da2c:	.word	0x0000a3ab
   1da30:	.word	0x0000a376

0001da34 <dta_read_strls>:
   1da34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da38:	add	fp, sp, #28
   1da3c:	sub	sp, sp, #44	; 0x2c
   1da40:	mov	r4, r0
   1da44:	ldrb	r0, [r0, #192]	; 0xc0
   1da48:	mov	r6, #0
   1da4c:	tst	r0, #4
   1da50:	beq	1dc08 <dta_read_strls+0x1d4>
   1da54:	mov	r5, r4
   1da58:	ldr	r0, [r5, #128]!	; 0x80
   1da5c:	ldr	r7, [r5, #152]	; 0x98
   1da60:	ldr	r3, [r7, #8]
   1da64:	ldr	r2, [r7, #20]
   1da68:	mov	r1, #0
   1da6c:	blx	r3
   1da70:	cmn	r0, #1
   1da74:	beq	1dbc8 <dta_read_strls+0x194>
   1da78:	ldr	r1, [pc, #472]	; 1dc58 <dta_read_strls+0x224>
   1da7c:	add	r1, pc, r1
   1da80:	mov	r0, r4
   1da84:	bl	1d198 <dta_read_tag>
   1da88:	mov	r6, r0
   1da8c:	cmp	r0, #0
   1da90:	bne	1dc08 <dta_read_strls+0x1d4>
   1da94:	mov	r0, #100	; 0x64
   1da98:	str	r0, [r4, #224]	; 0xe0
   1da9c:	mov	r0, #400	; 0x190
   1daa0:	bl	4cb0 <readstat_malloc@plt>
   1daa4:	str	r0, [r4, #216]	; 0xd8
   1daa8:	ldr	r3, [r7, #12]
   1daac:	ldr	r2, [r7, #20]
   1dab0:	sub	r0, fp, #31
   1dab4:	mov	r1, #3
   1dab8:	blx	r3
   1dabc:	cmp	r0, #3
   1dac0:	bne	1dbc0 <dta_read_strls+0x18c>
   1dac4:	sub	r5, fp, #31
   1dac8:	ldr	r8, [pc, #396]	; 1dc5c <dta_read_strls+0x228>
   1dacc:	add	r8, pc, r8
   1dad0:	add	r9, sp, #8
   1dad4:	mov	sl, #20
   1dad8:	b	1daf8 <dta_read_strls+0xc4>
   1dadc:	ldr	r3, [r7, #12]
   1dae0:	ldr	r2, [r7, #20]
   1dae4:	mov	r0, r5
   1dae8:	mov	r1, #3
   1daec:	blx	r3
   1daf0:	cmp	r0, #3
   1daf4:	bne	1dbc0 <dta_read_strls+0x18c>
   1daf8:	mov	r0, r5
   1dafc:	mov	r1, r8
   1db00:	mov	r2, #3
   1db04:	bl	4c74 <bcmp@plt>
   1db08:	cmp	r0, #0
   1db0c:	bne	1dc14 <dta_read_strls+0x1e0>
   1db10:	mov	r0, r4
   1db14:	mov	r1, r9
   1db18:	bl	1e3f4 <dta_read_strl>
   1db1c:	cmp	r0, #0
   1db20:	bne	1dc44 <dta_read_strls+0x210>
   1db24:	ldrb	r0, [sp, #24]
   1db28:	cmp	r0, #130	; 0x82
   1db2c:	bne	1dadc <dta_read_strls+0xa8>
   1db30:	ldr	r0, [r4, #220]	; 0xdc
   1db34:	ldr	r1, [r4, #224]	; 0xe0
   1db38:	cmp	r0, r1
   1db3c:	bne	1db60 <dta_read_strls+0x12c>
   1db40:	lsl	r0, r1, #1
   1db44:	str	r0, [r4, #224]	; 0xe0
   1db48:	ldr	r0, [r4, #216]	; 0xd8
   1db4c:	lsl	r1, r1, #3
   1db50:	bl	4d70 <readstat_realloc@plt>
   1db54:	str	r0, [r4, #216]	; 0xd8
   1db58:	cmp	r0, #0
   1db5c:	beq	1dc4c <dta_read_strls+0x218>
   1db60:	ldr	r0, [sp, #28]
   1db64:	add	r0, r0, #32
   1db68:	bl	4cb0 <readstat_malloc@plt>
   1db6c:	cmp	r0, #0
   1db70:	beq	1dc4c <dta_read_strls+0x218>
   1db74:	mov	r1, r9
   1db78:	vld1.64	{d16-d17}, [r1]!
   1db7c:	vld1.64	{d18-d19}, [r1]
   1db80:	add	r1, r0, #16
   1db84:	vst1.64	{d18-d19}, [r1]
   1db88:	mov	r6, r0
   1db8c:	vst1.64	{d16-d17}, [r6], sl
   1db90:	ldrd	r2, [r4, #216]	; 0xd8
   1db94:	add	r1, r3, #1
   1db98:	str	r1, [r4, #220]	; 0xdc
   1db9c:	str	r0, [r2, r3, lsl #2]
   1dba0:	ldr	r1, [r6]
   1dba4:	ldr	r3, [r7, #12]
   1dba8:	ldr	r2, [r7, #20]
   1dbac:	add	r0, r0, #24
   1dbb0:	blx	r3
   1dbb4:	ldr	r1, [r6]
   1dbb8:	cmp	r0, r1
   1dbbc:	beq	1dadc <dta_read_strls+0xa8>
   1dbc0:	mov	r6, #2
   1dbc4:	b	1dc08 <dta_read_strls+0x1d4>
   1dbc8:	ldr	r0, [r4, #264]	; 0x108
   1dbcc:	mov	r6, #15
   1dbd0:	cmp	r0, #0
   1dbd4:	beq	1dc08 <dta_read_strls+0x1d4>
   1dbd8:	ldrd	r0, [r5]
   1dbdc:	stm	sp, {r0, r1}
   1dbe0:	add	r5, r4, #288	; 0x120
   1dbe4:	ldr	r2, [pc, #104]	; 1dc54 <dta_read_strls+0x220>
   1dbe8:	add	r2, pc, r2
   1dbec:	mov	r0, r5
   1dbf0:	mov	r1, #256	; 0x100
   1dbf4:	bl	4d04 <snprintf@plt>
   1dbf8:	ldr	r2, [r4, #264]	; 0x108
   1dbfc:	ldr	r1, [r4, #276]	; 0x114
   1dc00:	mov	r0, r5
   1dc04:	blx	r2
   1dc08:	mov	r0, r6
   1dc0c:	sub	sp, fp, #28
   1dc10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc14:	sub	r0, fp, #31
   1dc18:	ldr	r1, [pc, #64]	; 1dc60 <dta_read_strls+0x22c>
   1dc1c:	add	r1, pc, r1
   1dc20:	mov	r2, #3
   1dc24:	bl	4c74 <bcmp@plt>
   1dc28:	mov	r6, #5
   1dc2c:	cmp	r0, #0
   1dc30:	bne	1dc08 <dta_read_strls+0x1d4>
   1dc34:	ldr	r1, [pc, #40]	; 1dc64 <dta_read_strls+0x230>
   1dc38:	add	r1, pc, r1
   1dc3c:	mov	r0, r4
   1dc40:	bl	1d198 <dta_read_tag>
   1dc44:	mov	r6, r0
   1dc48:	b	1dc08 <dta_read_strls+0x1d4>
   1dc4c:	mov	r6, #3
   1dc50:	b	1dc08 <dta_read_strls+0x1d4>
   1dc54:	.word	0x0000a09c
   1dc58:	.word	0x0000a236
   1dc5c:	.word	0x0000a1ee
   1dc60:	.word	0x0000a0a2
   1dc64:	.word	0x0000a1f7

0001dc68 <dta_read_data>:
   1dc68:	push	{r4, r5, r6, sl, fp, lr}
   1dc6c:	add	fp, sp, #16
   1dc70:	sub	sp, sp, #8
   1dc74:	mov	r4, r0
   1dc78:	ldr	r0, [r0, #256]	; 0x100
   1dc7c:	cmp	r0, #0
   1dc80:	beq	1dd04 <dta_read_data+0x9c>
   1dc84:	ldr	r1, [r4, #280]	; 0x118
   1dc88:	mov	r6, r4
   1dc8c:	ldr	r0, [r6, #120]!	; 0x78
   1dc90:	ldr	r3, [r1, #8]
   1dc94:	ldr	r2, [r1, #20]
   1dc98:	mov	r1, #0
   1dc9c:	blx	r3
   1dca0:	cmn	r0, #1
   1dca4:	beq	1dd0c <dta_read_data+0xa4>
   1dca8:	ldr	r1, [pc, #172]	; 1dd5c <dta_read_data+0xf4>
   1dcac:	add	r1, pc, r1
   1dcb0:	mov	r0, r4
   1dcb4:	bl	1d198 <dta_read_tag>
   1dcb8:	mov	r5, r0
   1dcbc:	cmp	r0, #0
   1dcc0:	bne	1dd4c <dta_read_data+0xe4>
   1dcc4:	mov	r0, r4
   1dcc8:	bl	1cde8 <dta_update_progress>
   1dccc:	mov	r5, r0
   1dcd0:	cmp	r0, #0
   1dcd4:	bne	1dd4c <dta_read_data+0xe4>
   1dcd8:	mov	r0, r4
   1dcdc:	bl	1e544 <dta_handle_rows>
   1dce0:	mov	r5, r0
   1dce4:	cmp	r0, #0
   1dce8:	bne	1dd4c <dta_read_data+0xe4>
   1dcec:	ldr	r1, [pc, #108]	; 1dd60 <dta_read_data+0xf8>
   1dcf0:	add	r1, pc, r1
   1dcf4:	mov	r0, r4
   1dcf8:	sub	sp, fp, #16
   1dcfc:	pop	{r4, r5, r6, sl, fp, lr}
   1dd00:	b	1d198 <dta_read_tag>
   1dd04:	mov	r5, #0
   1dd08:	b	1dd4c <dta_read_data+0xe4>
   1dd0c:	ldr	r0, [r4, #264]	; 0x108
   1dd10:	mov	r5, #15
   1dd14:	cmp	r0, #0
   1dd18:	beq	1dd4c <dta_read_data+0xe4>
   1dd1c:	ldrd	r0, [r6]
   1dd20:	stm	sp, {r0, r1}
   1dd24:	add	r6, r4, #288	; 0x120
   1dd28:	ldr	r2, [pc, #40]	; 1dd58 <dta_read_data+0xf0>
   1dd2c:	add	r2, pc, r2
   1dd30:	mov	r0, r6
   1dd34:	mov	r1, #256	; 0x100
   1dd38:	bl	4d04 <snprintf@plt>
   1dd3c:	ldr	r2, [r4, #264]	; 0x108
   1dd40:	ldr	r1, [r4, #276]	; 0x114
   1dd44:	mov	r0, r6
   1dd48:	blx	r2
   1dd4c:	mov	r0, r5
   1dd50:	sub	sp, fp, #16
   1dd54:	pop	{r4, r5, r6, sl, fp, pc}
   1dd58:	.word	0x00009efd
   1dd5c:	.word	0x0000a016
   1dd60:	.word	0x00009fd9

0001dd64 <dta_handle_value_labels>:
   1dd64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd68:	add	fp, sp, #28
   1dd6c:	sub	sp, sp, #228	; 0xe4
   1dd70:	mov	r6, r0
   1dd74:	mov	r4, r0
   1dd78:	ldr	r0, [r4, #136]!	; 0x88
   1dd7c:	ldr	r5, [r4, #144]	; 0x90
   1dd80:	ldr	r3, [r5, #8]
   1dd84:	ldr	r2, [r5, #20]
   1dd88:	mov	r1, #0
   1dd8c:	blx	r3
   1dd90:	cmn	r0, #1
   1dd94:	beq	1e148 <dta_handle_value_labels+0x3e4>
   1dd98:	ldr	r1, [pc, #1192]	; 1e248 <dta_handle_value_labels+0x4e4>
   1dd9c:	add	r1, pc, r1
   1dda0:	mov	r0, r6
   1dda4:	bl	1d198 <dta_read_tag>
   1dda8:	mov	r9, r0
   1ddac:	cmp	r0, #0
   1ddb0:	bne	1e22c <dta_handle_value_labels+0x4c8>
   1ddb4:	ldr	r0, [r6, #260]	; 0x104
   1ddb8:	cmp	r0, #0
   1ddbc:	beq	1e18c <dta_handle_value_labels+0x428>
   1ddc0:	add	r0, sp, #56	; 0x38
   1ddc4:	add	r0, r0, #8
   1ddc8:	str	r0, [sp, #44]	; 0x2c
   1ddcc:	mov	r0, #0
   1ddd0:	str	r0, [sp, #48]	; 0x30
   1ddd4:	mov	r9, #0
   1ddd8:	str	r5, [sp, #20]
   1dddc:	ldr	r0, [r6, #100]	; 0x64
   1dde0:	cmp	r0, #2
   1dde4:	bne	1de2c <dta_handle_value_labels+0xc8>
   1dde8:	ldr	r3, [r5, #12]
   1ddec:	ldr	r2, [r5, #20]
   1ddf0:	add	r0, sp, #56	; 0x38
   1ddf4:	mov	r1, #2
   1ddf8:	blx	r3
   1ddfc:	cmp	r0, #2
   1de00:	bcc	1e1f8 <dta_handle_value_labels+0x494>
   1de04:	ldrb	r0, [r6, #192]	; 0xc0
   1de08:	ldrsh	r4, [sp, #56]	; 0x38
   1de0c:	tst	r0, #1
   1de10:	beq	1de20 <dta_handle_value_labels+0xbc>
   1de14:	uxth	r0, r4
   1de18:	bl	4920 <byteswap2@plt>
   1de1c:	mov	r4, r0
   1de20:	mov	r8, r9
   1de24:	lsr	sl, r4, #3
   1de28:	b	1de88 <dta_handle_value_labels+0x124>
   1de2c:	mov	r8, r9
   1de30:	mov	r0, r6
   1de34:	ldr	r1, [pc, #1040]	; 1e24c <dta_handle_value_labels+0x4e8>
   1de38:	add	r1, pc, r1
   1de3c:	bl	1d198 <dta_read_tag>
   1de40:	mov	r9, #0
   1de44:	cmp	r0, #0
   1de48:	bne	1e1a0 <dta_handle_value_labels+0x43c>
   1de4c:	ldr	r3, [r5, #12]
   1de50:	ldr	r2, [r5, #20]
   1de54:	add	r0, sp, #56	; 0x38
   1de58:	mov	r1, #4
   1de5c:	blx	r3
   1de60:	cmp	r0, #4
   1de64:	bcc	1e1a0 <dta_handle_value_labels+0x43c>
   1de68:	ldrb	r0, [r6, #192]	; 0xc0
   1de6c:	ldr	r4, [sp, #56]	; 0x38
   1de70:	tst	r0, #1
   1de74:	beq	1de84 <dta_handle_value_labels+0x120>
   1de78:	mov	r0, r4
   1de7c:	bl	480c <byteswap4@plt>
   1de80:	mov	r4, r0
   1de84:	mov	sl, #0
   1de88:	ldr	r1, [r6, #104]	; 0x68
   1de8c:	ldr	r3, [r5, #12]
   1de90:	ldr	r2, [r5, #20]
   1de94:	add	r0, sp, #95	; 0x5f
   1de98:	blx	r3
   1de9c:	ldr	r1, [r6, #104]	; 0x68
   1dea0:	mov	r9, #0
   1dea4:	cmp	r0, r1
   1dea8:	bcc	1e1a0 <dta_handle_value_labels+0x43c>
   1deac:	ldr	r0, [r6, #108]	; 0x6c
   1deb0:	ldr	r3, [r5, #8]
   1deb4:	ldr	r2, [r5, #20]
   1deb8:	mov	r1, #1
   1debc:	blx	r3
   1dec0:	cmn	r0, #1
   1dec4:	beq	1e1a0 <dta_handle_value_labels+0x43c>
   1dec8:	mov	r0, r8
   1decc:	mov	r1, r4
   1ded0:	bl	4d70 <readstat_realloc@plt>
   1ded4:	cmp	r0, #0
   1ded8:	beq	1e1d8 <dta_handle_value_labels+0x474>
   1dedc:	mov	r9, r0
   1dee0:	ldr	r3, [r5, #12]
   1dee4:	ldr	r2, [r5, #20]
   1dee8:	mov	r1, r4
   1deec:	blx	r3
   1def0:	cmp	r0, r4
   1def4:	bcc	1e1ec <dta_handle_value_labels+0x488>
   1def8:	ldr	r0, [r6, #100]	; 0x64
   1defc:	cmp	r0, #2
   1df00:	bne	1dfa0 <dta_handle_value_labels+0x23c>
   1df04:	cmp	sl, #0
   1df08:	beq	1dddc <dta_handle_value_labels+0x78>
   1df0c:	mov	r4, #0
   1df10:	mov	r8, r9
   1df14:	mov	r5, r9
   1df18:	b	1df30 <dta_handle_value_labels+0x1cc>
   1df1c:	str	r7, [sp, #52]	; 0x34
   1df20:	add	r5, r5, #8
   1df24:	add	r4, r4, #1
   1df28:	cmp	sl, r4
   1df2c:	beq	1e13c <dta_handle_value_labels+0x3d8>
   1df30:	ldr	r0, [r6, #236]	; 0xec
   1df34:	str	r0, [sp]
   1df38:	add	r0, sp, #56	; 0x38
   1df3c:	mov	r1, #33	; 0x21
   1df40:	mov	r2, r5
   1df44:	mov	r3, #8
   1df48:	bl	4cbc <readstat_convert@plt>
   1df4c:	cmp	r0, #0
   1df50:	bne	1e194 <dta_handle_value_labels+0x430>
   1df54:	ldr	r7, [sp, #52]	; 0x34
   1df58:	bfc	r7, #0, #10
   1df5c:	ldrb	r0, [sp, #56]	; 0x38
   1df60:	cmp	r0, #0
   1df64:	beq	1df1c <dta_handle_value_labels+0x1b8>
   1df68:	ldr	r1, [r6, #260]	; 0x104
   1df6c:	ldr	r0, [r6, #276]	; 0x114
   1df70:	mov	r2, #3
   1df74:	stm	sp, {r2, r7}
   1df78:	add	r2, sp, #56	; 0x38
   1df7c:	str	r2, [sp, #8]
   1df80:	str	r0, [sp, #12]
   1df84:	add	r0, sp, #95	; 0x5f
   1df88:	mov	r2, r4
   1df8c:	mov	r3, #0
   1df90:	blx	r1
   1df94:	cmp	r0, #0
   1df98:	beq	1df1c <dta_handle_value_labels+0x1b8>
   1df9c:	b	1e19c <dta_handle_value_labels+0x438>
   1dfa0:	cmp	r4, #9
   1dfa4:	bcc	1dddc <dta_handle_value_labels+0x78>
   1dfa8:	mov	sl, r9
   1dfac:	mov	r0, r6
   1dfb0:	ldr	r1, [pc, #664]	; 1e250 <dta_handle_value_labels+0x4ec>
   1dfb4:	add	r1, pc, r1
   1dfb8:	bl	1d198 <dta_read_tag>
   1dfbc:	cmp	r0, #0
   1dfc0:	bne	1e20c <dta_handle_value_labels+0x4a8>
   1dfc4:	mov	r9, sl
   1dfc8:	ldr	r7, [sl]
   1dfcc:	ldr	r5, [sl, #4]
   1dfd0:	ldrb	r0, [r6, #192]	; 0xc0
   1dfd4:	tst	r0, #1
   1dfd8:	beq	1dff4 <dta_handle_value_labels+0x290>
   1dfdc:	mov	r0, r7
   1dfe0:	bl	480c <byteswap4@plt>
   1dfe4:	mov	r7, r0
   1dfe8:	mov	r0, r5
   1dfec:	bl	480c <byteswap4@plt>
   1dff0:	mov	r5, r0
   1dff4:	sub	r0, r4, #8
   1dff8:	cmp	r0, r5
   1dffc:	bcc	1e204 <dta_handle_value_labels+0x4a0>
   1e000:	sub	r0, r0, r5
   1e004:	cmp	r7, r0, lsr #3
   1e008:	bhi	1e204 <dta_handle_value_labels+0x4a0>
   1e00c:	mov	r0, #1
   1e010:	orr	r1, r0, r5, lsl #2
   1e014:	movw	r0, #32001	; 0x7d01
   1e018:	cmp	r5, r0
   1e01c:	movwhi	r1, #62465	; 0xf401
   1e020:	movthi	r1, #1
   1e024:	ldr	r0, [sp, #48]	; 0x30
   1e028:	str	r1, [sp, #36]	; 0x24
   1e02c:	bl	4a64 <realloc@plt>
   1e030:	cmp	r0, #0
   1e034:	beq	1e238 <dta_handle_value_labels+0x4d4>
   1e038:	str	r5, [sp, #40]	; 0x28
   1e03c:	str	r0, [sp, #48]	; 0x30
   1e040:	add	r8, r9, #8
   1e044:	ldrb	r0, [r6, #192]	; 0xc0
   1e048:	tst	r0, #1
   1e04c:	cmpne	r7, #0
   1e050:	beq	1e070 <dta_handle_value_labels+0x30c>
   1e054:	mov	r5, r8
   1e058:	mov	r4, r7
   1e05c:	ldr	r0, [r5]
   1e060:	bl	480c <byteswap4@plt>
   1e064:	str	r0, [r5], #4
   1e068:	subs	r4, r4, #1
   1e06c:	bne	1e05c <dta_handle_value_labels+0x2f8>
   1e070:	cmp	r7, #0
   1e074:	beq	1e134 <dta_handle_value_labels+0x3d0>
   1e078:	add	r0, r9, r7, lsl #3
   1e07c:	add	r0, r0, #8
   1e080:	str	r0, [sp, #32]
   1e084:	lsl	r0, r7, #2
   1e088:	str	r0, [sp, #28]
   1e08c:	str	r9, [sp, #24]
   1e090:	ldr	r0, [r8]
   1e094:	ldr	r4, [sp, #40]	; 0x28
   1e098:	cmp	r0, r4
   1e09c:	bcs	1e1b4 <dta_handle_value_labels+0x450>
   1e0a0:	mov	sl, r7
   1e0a4:	ldr	r0, [sp, #28]
   1e0a8:	add	r2, r8, r0
   1e0ac:	add	r0, sp, #56	; 0x38
   1e0b0:	mov	r1, r6
   1e0b4:	bl	1ebbc <dta_interpret_int32_bytes>
   1e0b8:	ldr	r0, [r8]
   1e0bc:	ldr	r1, [r6, #236]	; 0xec
   1e0c0:	str	r1, [sp]
   1e0c4:	ldr	r1, [sp, #32]
   1e0c8:	add	r2, r1, r0
   1e0cc:	sub	r3, r4, r0
   1e0d0:	cmp	r3, #32000	; 0x7d00
   1e0d4:	movcs	r3, #32000	; 0x7d00
   1e0d8:	ldr	r7, [sp, #48]	; 0x30
   1e0dc:	mov	r0, r7
   1e0e0:	ldr	r1, [sp, #36]	; 0x24
   1e0e4:	bl	4cbc <readstat_convert@plt>
   1e0e8:	cmp	r0, #0
   1e0ec:	bne	1e1c0 <dta_handle_value_labels+0x45c>
   1e0f0:	ldr	r0, [sp, #44]	; 0x2c
   1e0f4:	ldrd	r0, [r0]
   1e0f8:	ldr	r5, [r6, #260]	; 0x104
   1e0fc:	ldr	r4, [r6, #276]	; 0x114
   1e100:	ldr	r2, [sp, #56]	; 0x38
   1e104:	ldr	r3, [sp, #60]	; 0x3c
   1e108:	stm	sp, {r0, r1, r7}
   1e10c:	str	r4, [sp, #12]
   1e110:	add	r0, sp, #95	; 0x5f
   1e114:	blx	r5
   1e118:	cmp	r0, #0
   1e11c:	bne	1e1cc <dta_handle_value_labels+0x468>
   1e120:	add	r8, r8, #4
   1e124:	mov	r7, sl
   1e128:	subs	r7, sl, #1
   1e12c:	ldr	r9, [sp, #24]
   1e130:	bne	1e090 <dta_handle_value_labels+0x32c>
   1e134:	ldr	r5, [sp, #20]
   1e138:	b	1dddc <dta_handle_value_labels+0x78>
   1e13c:	ldr	r5, [sp, #20]
   1e140:	mov	r9, r8
   1e144:	b	1dddc <dta_handle_value_labels+0x78>
   1e148:	ldr	r0, [r6, #264]	; 0x108
   1e14c:	mov	r9, #15
   1e150:	cmp	r0, #0
   1e154:	beq	1e22c <dta_handle_value_labels+0x4c8>
   1e158:	ldrd	r0, [r4]
   1e15c:	stm	sp, {r0, r1}
   1e160:	add	r4, r6, #288	; 0x120
   1e164:	ldr	r2, [pc, #216]	; 1e244 <dta_handle_value_labels+0x4e0>
   1e168:	add	r2, pc, r2
   1e16c:	mov	r0, r4
   1e170:	mov	r1, #256	; 0x100
   1e174:	bl	4d04 <snprintf@plt>
   1e178:	ldr	r2, [r6, #264]	; 0x108
   1e17c:	ldr	r1, [r6, #276]	; 0x114
   1e180:	mov	r0, r4
   1e184:	blx	r2
   1e188:	b	1e22c <dta_handle_value_labels+0x4c8>
   1e18c:	mov	r9, #0
   1e190:	b	1e22c <dta_handle_value_labels+0x4c8>
   1e194:	mov	r9, r0
   1e198:	b	1e1a0 <dta_handle_value_labels+0x43c>
   1e19c:	mov	r9, #4
   1e1a0:	ldr	r4, [sp, #48]	; 0x30
   1e1a4:	mov	r0, r8
   1e1a8:	cmp	r8, #0
   1e1ac:	bne	1e218 <dta_handle_value_labels+0x4b4>
   1e1b0:	b	1e21c <dta_handle_value_labels+0x4b8>
   1e1b4:	mov	sl, r9
   1e1b8:	mov	r9, #5
   1e1bc:	b	1e210 <dta_handle_value_labels+0x4ac>
   1e1c0:	mov	r9, r0
   1e1c4:	ldr	sl, [sp, #24]
   1e1c8:	b	1e210 <dta_handle_value_labels+0x4ac>
   1e1cc:	mov	r9, #4
   1e1d0:	ldr	sl, [sp, #24]
   1e1d4:	b	1e210 <dta_handle_value_labels+0x4ac>
   1e1d8:	mov	r9, #3
   1e1dc:	ldr	r4, [sp, #48]	; 0x30
   1e1e0:	cmp	r4, #0
   1e1e4:	bne	1e224 <dta_handle_value_labels+0x4c0>
   1e1e8:	b	1e22c <dta_handle_value_labels+0x4c8>
   1e1ec:	mov	sl, r9
   1e1f0:	mov	r9, #0
   1e1f4:	b	1e210 <dta_handle_value_labels+0x4ac>
   1e1f8:	mov	r8, r9
   1e1fc:	mov	r9, #0
   1e200:	b	1e1a0 <dta_handle_value_labels+0x43c>
   1e204:	mov	r9, #0
   1e208:	b	1e210 <dta_handle_value_labels+0x4ac>
   1e20c:	mov	r9, r0
   1e210:	ldr	r4, [sp, #48]	; 0x30
   1e214:	mov	r0, sl
   1e218:	bl	4938 <free@plt>
   1e21c:	cmp	r4, #0
   1e220:	beq	1e22c <dta_handle_value_labels+0x4c8>
   1e224:	mov	r0, r4
   1e228:	bl	4938 <free@plt>
   1e22c:	mov	r0, r9
   1e230:	sub	sp, fp, #28
   1e234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e238:	mov	r4, #0
   1e23c:	mov	r9, #3
   1e240:	b	1e214 <dta_handle_value_labels+0x4b0>
   1e244:	.word	0x00009b69
   1e248:	.word	0x00009f6a
   1e24c:	.word	0x00009edd
   1e250:	.word	0x00009d67

0001e254 <dta_read_chunk>:
   1e254:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e258:	add	fp, sp, #24
   1e25c:	mov	r5, r3
   1e260:	mov	r6, r2
   1e264:	mov	r4, r0
   1e268:	ldr	r7, [r0, #280]	; 0x118
   1e26c:	bl	1d198 <dta_read_tag>
   1e270:	cmp	r0, #0
   1e274:	bne	1e2b0 <dta_read_chunk+0x5c>
   1e278:	ldr	r8, [fp, #8]
   1e27c:	ldr	r3, [r7, #12]
   1e280:	ldr	r2, [r7, #20]
   1e284:	mov	r0, r6
   1e288:	mov	r1, r5
   1e28c:	blx	r3
   1e290:	mov	r1, r0
   1e294:	mov	r0, #2
   1e298:	cmp	r1, r5
   1e29c:	bne	1e2b0 <dta_read_chunk+0x5c>
   1e2a0:	mov	r0, r4
   1e2a4:	mov	r1, r8
   1e2a8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e2ac:	b	1d198 <dta_read_tag>
   1e2b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001e2b4 <dta_init_variable>:
   1e2b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e2b8:	add	fp, sp, #24
   1e2bc:	sub	sp, sp, #8
   1e2c0:	mov	r8, r3
   1e2c4:	mov	r6, r2
   1e2c8:	mov	r7, r1
   1e2cc:	mov	r5, r0
   1e2d0:	mov	r0, #1
   1e2d4:	movw	r1, #2152	; 0x868
   1e2d8:	bl	47d0 <calloc@plt>
   1e2dc:	mov	r4, r0
   1e2e0:	str	r6, [r0, #2148]	; 0x864
   1e2e4:	str	r8, [r4]
   1e2e8:	str	r7, [r4, #4]
   1e2ec:	ldr	r0, [fp, #8]
   1e2f0:	str	r0, [r4, #1596]	; 0x63c
   1e2f4:	ldr	r0, [r5, #36]	; 0x24
   1e2f8:	ldr	r3, [r5, #76]	; 0x4c
   1e2fc:	ldr	r1, [r5, #236]	; 0xec
   1e300:	str	r1, [sp]
   1e304:	mla	r2, r3, r7, r0
   1e308:	add	r0, r4, #8
   1e30c:	mov	r1, #300	; 0x12c
   1e310:	bl	4cbc <readstat_convert@plt>
   1e314:	ldr	r2, [r5, #68]	; 0x44
   1e318:	ldr	r3, [r5, #88]	; 0x58
   1e31c:	mul	r0, r3, r7
   1e320:	ldrb	r0, [r2, r0]!
   1e324:	cmp	r0, #0
   1e328:	beq	1e340 <dta_init_variable+0x8c>
   1e32c:	ldr	r0, [r5, #236]	; 0xec
   1e330:	str	r0, [sp]
   1e334:	add	r0, r4, #564	; 0x234
   1e338:	mov	r1, #1024	; 0x400
   1e33c:	bl	4cbc <readstat_convert@plt>
   1e340:	ldr	r2, [r5, #52]	; 0x34
   1e344:	ldr	r3, [r5, #80]	; 0x50
   1e348:	mul	r0, r3, r7
   1e34c:	ldrb	r0, [r2, r0]!
   1e350:	cmp	r0, #0
   1e354:	beq	1e3e0 <dta_init_variable+0x12c>
   1e358:	ldr	r0, [r5, #236]	; 0xec
   1e35c:	str	r0, [sp]
   1e360:	add	r5, r4, #308	; 0x134
   1e364:	mov	r0, r5
   1e368:	mov	r1, #256	; 0x100
   1e36c:	bl	4cbc <readstat_convert@plt>
   1e370:	ldrb	r0, [r4, #308]	; 0x134
   1e374:	cmp	r0, #37	; 0x25
   1e378:	bne	1e3a0 <dta_init_variable+0xec>
   1e37c:	ldrb	r0, [r4, #309]	; 0x135
   1e380:	cmp	r0, #45	; 0x2d
   1e384:	bne	1e390 <dta_init_variable+0xdc>
   1e388:	mov	r0, #1
   1e38c:	b	1e39c <dta_init_variable+0xe8>
   1e390:	cmp	r0, #126	; 0x7e
   1e394:	movne	r0, #3
   1e398:	moveq	r0, #2
   1e39c:	str	r0, [r4, #2132]	; 0x854
   1e3a0:	ldr	r1, [pc, #68]	; 1e3ec <dta_init_variable+0x138>
   1e3a4:	add	r1, pc, r1
   1e3a8:	add	r2, sp, #4
   1e3ac:	mov	r0, r5
   1e3b0:	bl	4d10 <__isoc99_sscanf@plt>
   1e3b4:	cmp	r0, #1
   1e3b8:	beq	1e3d8 <dta_init_variable+0x124>
   1e3bc:	ldr	r1, [pc, #44]	; 1e3f0 <dta_init_variable+0x13c>
   1e3c0:	add	r1, pc, r1
   1e3c4:	add	r2, sp, #4
   1e3c8:	mov	r0, r5
   1e3cc:	bl	4d10 <__isoc99_sscanf@plt>
   1e3d0:	cmp	r0, #1
   1e3d4:	bne	1e3e0 <dta_init_variable+0x12c>
   1e3d8:	ldr	r0, [sp, #4]
   1e3dc:	str	r0, [r4, #2136]	; 0x858
   1e3e0:	mov	r0, r4
   1e3e4:	sub	sp, fp, #24
   1e3e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e3ec:	.word	0x00009878
   1e3f0:	.word	0x00009862

0001e3f4 <dta_read_strl>:
   1e3f4:	ldr	r2, [r0, #116]	; 0x74
   1e3f8:	cmp	r2, #5
   1e3fc:	bcc	1e404 <dta_read_strl+0x10>
   1e400:	b	1e408 <dta_118_read_strl>
   1e404:	b	1e4a4 <dta_117_read_strl>

0001e408 <dta_118_read_strl>:
   1e408:	push	{r4, r5, fp, lr}
   1e40c:	add	fp, sp, #8
   1e410:	sub	sp, sp, #24
   1e414:	mov	r4, r1
   1e418:	mov	r5, r0
   1e41c:	ldr	r0, [r0, #280]	; 0x118
   1e420:	ldr	r3, [r0, #12]
   1e424:	ldr	r2, [r0, #20]
   1e428:	add	r0, sp, #4
   1e42c:	mov	r1, #17
   1e430:	blx	r3
   1e434:	mov	r1, r0
   1e438:	mov	r0, #2
   1e43c:	cmp	r1, #17
   1e440:	bne	1e49c <dta_118_read_strl+0x94>
   1e444:	ldrb	r1, [r5, #192]	; 0xc0
   1e448:	ldr	r0, [sp, #4]
   1e44c:	tst	r1, #1
   1e450:	beq	1e458 <dta_118_read_strl+0x50>
   1e454:	bl	480c <byteswap4@plt>
   1e458:	strh	r0, [r4]
   1e45c:	ldrb	r2, [r5, #192]	; 0xc0
   1e460:	ldr	r0, [sp, #8]
   1e464:	ldr	r1, [sp, #12]
   1e468:	tst	r2, #1
   1e46c:	beq	1e474 <dta_118_read_strl+0x6c>
   1e470:	bl	47f4 <byteswap8@plt>
   1e474:	strd	r0, [r4, #8]
   1e478:	ldrb	r0, [sp, #16]
   1e47c:	strb	r0, [r4, #16]
   1e480:	ldrb	r1, [r5, #192]	; 0xc0
   1e484:	ldr	r0, [sp, #17]
   1e488:	tst	r1, #1
   1e48c:	beq	1e494 <dta_118_read_strl+0x8c>
   1e490:	bl	480c <byteswap4@plt>
   1e494:	str	r0, [r4, #20]
   1e498:	mov	r0, #0
   1e49c:	sub	sp, fp, #8
   1e4a0:	pop	{r4, r5, fp, pc}

0001e4a4 <dta_117_read_strl>:
   1e4a4:	push	{r4, r5, r6, r7, fp, lr}
   1e4a8:	add	fp, sp, #16
   1e4ac:	sub	sp, sp, #16
   1e4b0:	mov	r4, r1
   1e4b4:	mov	r5, r0
   1e4b8:	ldr	r0, [r0, #280]	; 0x118
   1e4bc:	ldr	r3, [r0, #12]
   1e4c0:	ldr	r2, [r0, #20]
   1e4c4:	mov	r0, sp
   1e4c8:	mov	r1, #13
   1e4cc:	blx	r3
   1e4d0:	mov	r7, #2
   1e4d4:	cmp	r0, #13
   1e4d8:	bne	1e538 <dta_117_read_strl+0x94>
   1e4dc:	ldrb	r1, [r5, #192]	; 0xc0
   1e4e0:	ldr	r0, [sp]
   1e4e4:	tst	r1, #1
   1e4e8:	beq	1e4f0 <dta_117_read_strl+0x4c>
   1e4ec:	bl	480c <byteswap4@plt>
   1e4f0:	strh	r0, [r4]
   1e4f4:	ldrb	r0, [r5, #192]	; 0xc0
   1e4f8:	ldr	r6, [sp, #4]
   1e4fc:	tst	r0, #1
   1e500:	beq	1e510 <dta_117_read_strl+0x6c>
   1e504:	mov	r0, r6
   1e508:	bl	480c <byteswap4@plt>
   1e50c:	mov	r6, r0
   1e510:	mov	r7, #0
   1e514:	strd	r6, [r4, #8]
   1e518:	ldrb	r0, [sp, #8]
   1e51c:	strb	r0, [r4, #16]
   1e520:	ldrb	r1, [r5, #192]	; 0xc0
   1e524:	ldr	r0, [sp, #9]
   1e528:	tst	r1, #1
   1e52c:	beq	1e534 <dta_117_read_strl+0x90>
   1e530:	bl	480c <byteswap4@plt>
   1e534:	str	r0, [r4, #20]
   1e538:	mov	r0, r7
   1e53c:	sub	sp, fp, #16
   1e540:	pop	{r4, r5, r6, r7, fp, pc}

0001e544 <dta_handle_rows>:
   1e544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e548:	add	fp, sp, #28
   1e54c:	sub	sp, sp, #4
   1e550:	mov	r5, r0
   1e554:	ldr	r0, [r0, #160]	; 0xa0
   1e558:	ldr	r7, [r5, #280]	; 0x118
   1e55c:	cmp	r0, #0
   1e560:	beq	1e57c <dta_handle_rows+0x38>
   1e564:	bl	4cb0 <readstat_malloc@plt>
   1e568:	mov	sl, r0
   1e56c:	cmp	r0, #0
   1e570:	bne	1e580 <dta_handle_rows+0x3c>
   1e574:	mov	r6, #3
   1e578:	b	1e6a0 <dta_handle_rows+0x15c>
   1e57c:	mov	sl, #0
   1e580:	add	r4, r5, #176	; 0xb0
   1e584:	ldrd	r0, [r4]
   1e588:	orrs	r1, r0, r1
   1e58c:	beq	1e5b0 <dta_handle_rows+0x6c>
   1e590:	ldr	r1, [r5, #160]	; 0xa0
   1e594:	mul	r0, r1, r0
   1e598:	ldr	r3, [r7, #8]
   1e59c:	ldr	r2, [r7, #20]
   1e5a0:	mov	r1, #1
   1e5a4:	blx	r3
   1e5a8:	cmn	r0, #1
   1e5ac:	beq	1e6bc <dta_handle_rows+0x178>
   1e5b0:	str	r4, [sp]
   1e5b4:	add	r9, r5, #168	; 0xa8
   1e5b8:	ldrd	r0, [r9]
   1e5bc:	subs	r2, r0, #1
   1e5c0:	sbcs	r2, r1, #0
   1e5c4:	blt	1e63c <dta_handle_rows+0xf8>
   1e5c8:	add	r4, r5, #184	; 0xb8
   1e5cc:	mov	r8, #1
   1e5d0:	ldr	r1, [r5, #160]	; 0xa0
   1e5d4:	ldr	r3, [r7, #12]
   1e5d8:	ldr	r2, [r7, #20]
   1e5dc:	mov	r0, sl
   1e5e0:	blx	r3
   1e5e4:	ldr	r1, [r5, #160]	; 0xa0
   1e5e8:	cmp	r0, r1
   1e5ec:	bne	1e6cc <dta_handle_rows+0x188>
   1e5f0:	mov	r0, sl
   1e5f4:	mov	r1, r5
   1e5f8:	bl	1e6dc <dta_handle_row>
   1e5fc:	cmp	r0, #0
   1e600:	bne	1e6ac <dta_handle_rows+0x168>
   1e604:	ldrd	r0, [r4]
   1e608:	adds	r0, r0, #1
   1e60c:	adc	r1, r1, #0
   1e610:	strd	r0, [r4]
   1e614:	mov	r0, r5
   1e618:	bl	1cde8 <dta_update_progress>
   1e61c:	cmp	r0, #0
   1e620:	bne	1e6ac <dta_handle_rows+0x168>
   1e624:	add	r2, r8, #1
   1e628:	ldrd	r0, [r9]
   1e62c:	subs	r3, r8, r0
   1e630:	rscs	r3, r1, #0
   1e634:	mov	r8, r2
   1e638:	blt	1e5d0 <dta_handle_rows+0x8c>
   1e63c:	add	r2, r5, #152	; 0x98
   1e640:	ldr	r3, [sp]
   1e644:	ldr	r4, [r3]
   1e648:	ldr	r3, [r3, #4]
   1e64c:	ldm	r2, {r2, r9}
   1e650:	subs	r2, r2, r4
   1e654:	sbc	r3, r9, r3
   1e658:	mov	r6, #0
   1e65c:	subs	r4, r0, r2
   1e660:	sbcs	r1, r1, r3
   1e664:	bge	1e690 <dta_handle_rows+0x14c>
   1e668:	sub	r0, r2, r0
   1e66c:	ldr	r1, [r5, #160]	; 0xa0
   1e670:	mul	r0, r1, r0
   1e674:	ldr	r3, [r7, #8]
   1e678:	ldr	r2, [r7, #20]
   1e67c:	mov	r1, #1
   1e680:	blx	r3
   1e684:	mov	r6, #0
   1e688:	cmn	r0, #1
   1e68c:	movweq	r6, #15
   1e690:	cmp	sl, #0
   1e694:	beq	1e6a0 <dta_handle_rows+0x15c>
   1e698:	mov	r0, sl
   1e69c:	bl	4938 <free@plt>
   1e6a0:	mov	r0, r6
   1e6a4:	sub	sp, fp, #28
   1e6a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e6ac:	mov	r6, r0
   1e6b0:	cmp	sl, #0
   1e6b4:	bne	1e698 <dta_handle_rows+0x154>
   1e6b8:	b	1e6a0 <dta_handle_rows+0x15c>
   1e6bc:	mov	r6, #15
   1e6c0:	cmp	sl, #0
   1e6c4:	bne	1e698 <dta_handle_rows+0x154>
   1e6c8:	b	1e6a0 <dta_handle_rows+0x15c>
   1e6cc:	mov	r6, #2
   1e6d0:	cmp	sl, #0
   1e6d4:	bne	1e698 <dta_handle_rows+0x154>
   1e6d8:	b	1e6a0 <dta_handle_rows+0x15c>

0001e6dc <dta_handle_row>:
   1e6dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6e0:	add	fp, sp, #28
   1e6e4:	sub	sp, sp, #4
   1e6e8:	vpush	{d8-d9}
   1e6ec:	sub	sp, sp, #88	; 0x58
   1e6f0:	sub	sp, sp, #2048	; 0x800
   1e6f4:	str	r0, [sp, #16]
   1e6f8:	ldr	r0, [r1, #148]	; 0x94
   1e6fc:	cmp	r0, #1
   1e700:	blt	1e990 <dta_handle_row+0x2b4>
   1e704:	mov	r7, r1
   1e708:	add	r0, r1, #184	; 0xb8
   1e70c:	str	r0, [sp, #12]
   1e710:	add	r5, sp, #64	; 0x40
   1e714:	add	r0, r5, #8
   1e718:	str	r0, [sp, #28]
   1e71c:	vmov.i32	q4, #0	; 0x00000000
   1e720:	add	r6, sp, #80	; 0x50
   1e724:	add	r8, sp, #84	; 0x54
   1e728:	mov	r4, #0
   1e72c:	mov	r9, #0
   1e730:	str	r1, [sp, #20]
   1e734:	b	1e74c <dta_handle_row+0x70>
   1e738:	mov	r4, r1
   1e73c:	add	r9, r9, #1
   1e740:	ldr	r0, [r7, #148]	; 0x94
   1e744:	cmp	r9, r0
   1e748:	bge	1e990 <dta_handle_row+0x2b4>
   1e74c:	vst1.64	{d8-d9}, [r5]
   1e750:	ldr	r0, [r7, #28]
   1e754:	add	r0, r0, r9, lsl #1
   1e758:	ldrh	r0, [r0]
   1e75c:	mov	r1, r7
   1e760:	mov	r2, r6
   1e764:	ldr	r3, [sp, #28]
   1e768:	bl	4c68 <dta_type_info@plt>
   1e76c:	cmp	r0, #0
   1e770:	bne	1e994 <dta_handle_row+0x2b8>
   1e774:	ldr	r0, [sp, #80]	; 0x50
   1e778:	add	r1, r0, r4
   1e77c:	ldr	r2, [r7, #228]	; 0xe4
   1e780:	ldr	r2, [r2, r9, lsl #2]
   1e784:	ldr	r2, [r2, #2144]	; 0x860
   1e788:	cmp	r2, #0
   1e78c:	bne	1e738 <dta_handle_row+0x5c>
   1e790:	ldr	r2, [r7, #160]	; 0xa0
   1e794:	cmp	r1, r2
   1e798:	bhi	1e9a4 <dta_handle_row+0x2c8>
   1e79c:	str	r4, [sp, #24]
   1e7a0:	ldr	r1, [sp, #72]	; 0x48
   1e7a4:	cmp	r1, #6
   1e7a8:	bhi	1e8ac <dta_handle_row+0x1d0>
   1e7ac:	add	r2, pc, #4
   1e7b0:	ldr	r1, [r2, r1, lsl #2]
   1e7b4:	add	pc, r2, r1
   1e7b8:	.word	0x0000001c
   1e7bc:	.word	0x0000004c
   1e7c0:	.word	0x0000006c
   1e7c4:	.word	0x0000008c
   1e7c8:	.word	0x000000ac
   1e7cc:	.word	0x000000cc
   1e7d0:	.word	0x00000148
   1e7d4:	cmp	r0, #0
   1e7d8:	ldr	r4, [sp, #24]
   1e7dc:	beq	1e960 <dta_handle_row+0x284>
   1e7e0:	ldr	r1, [sp, #16]
   1e7e4:	add	r1, r1, r4
   1e7e8:	mov	r3, #0
   1e7ec:	ldrb	r2, [r1, r3]
   1e7f0:	cmp	r2, #0
   1e7f4:	addne	r3, r3, #1
   1e7f8:	cmpne	r0, r3
   1e7fc:	bne	1e7ec <dta_handle_row+0x110>
   1e800:	b	1e964 <dta_handle_row+0x288>
   1e804:	ldr	r0, [sp, #16]
   1e808:	ldr	r1, [sp, #24]
   1e80c:	add	r2, r0, r1
   1e810:	add	sl, sp, #32
   1e814:	mov	r0, sl
   1e818:	ldr	r1, [sp, #20]
   1e81c:	bl	1eaac <dta_interpret_int8_bytes>
   1e820:	b	1e8a0 <dta_handle_row+0x1c4>
   1e824:	ldr	r0, [sp, #16]
   1e828:	ldr	r1, [sp, #24]
   1e82c:	add	r2, r0, r1
   1e830:	add	sl, sp, #32
   1e834:	mov	r0, sl
   1e838:	ldr	r1, [sp, #20]
   1e83c:	bl	1eb28 <dta_interpret_int16_bytes>
   1e840:	b	1e8a0 <dta_handle_row+0x1c4>
   1e844:	ldr	r0, [sp, #16]
   1e848:	ldr	r1, [sp, #24]
   1e84c:	add	r2, r0, r1
   1e850:	add	sl, sp, #32
   1e854:	mov	r0, sl
   1e858:	ldr	r1, [sp, #20]
   1e85c:	bl	1ebbc <dta_interpret_int32_bytes>
   1e860:	b	1e8a0 <dta_handle_row+0x1c4>
   1e864:	ldr	r0, [sp, #16]
   1e868:	ldr	r1, [sp, #24]
   1e86c:	add	r2, r0, r1
   1e870:	add	sl, sp, #32
   1e874:	mov	r0, sl
   1e878:	ldr	r1, [sp, #20]
   1e87c:	bl	1ec44 <dta_interpret_float_bytes>
   1e880:	b	1e8a0 <dta_handle_row+0x1c4>
   1e884:	ldr	r0, [sp, #16]
   1e888:	ldr	r1, [sp, #24]
   1e88c:	add	r2, r0, r1
   1e890:	add	sl, sp, #32
   1e894:	mov	r0, sl
   1e898:	ldr	r1, [sp, #20]
   1e89c:	bl	1ecd0 <dta_interpret_double_bytes>
   1e8a0:	vld1.64	{d16-d17}, [sl]
   1e8a4:	ldr	r7, [sp, #20]
   1e8a8:	vst1.64	{d16-d17}, [r5]
   1e8ac:	ldr	r0, [r7, #228]	; 0xe4
   1e8b0:	ldr	r4, [r7, #256]	; 0x100
   1e8b4:	ldr	lr, [r7, #276]	; 0x114
   1e8b8:	ldr	sl, [r0, r9, lsl #2]
   1e8bc:	ldr	r0, [sp, #12]
   1e8c0:	ldr	ip, [r0]
   1e8c4:	ldr	r0, [sp, #28]
   1e8c8:	ldrd	r0, [r0]
   1e8cc:	ldr	r2, [sp, #64]	; 0x40
   1e8d0:	ldr	r3, [sp, #68]	; 0x44
   1e8d4:	stm	sp, {r0, r1, lr}
   1e8d8:	mov	r0, ip
   1e8dc:	mov	r1, sl
   1e8e0:	blx	r4
   1e8e4:	cmp	r0, #0
   1e8e8:	bne	1e9ac <dta_handle_row+0x2d0>
   1e8ec:	ldr	r0, [sp, #80]	; 0x50
   1e8f0:	ldr	r4, [sp, #24]
   1e8f4:	add	r4, r0, r4
   1e8f8:	ldr	r7, [sp, #20]
   1e8fc:	b	1e73c <dta_handle_row+0x60>
   1e900:	ldr	r0, [sp, #16]
   1e904:	ldr	r1, [sp, #24]
   1e908:	add	r2, r0, r1
   1e90c:	add	sl, sp, #32
   1e910:	mov	r0, sl
   1e914:	mov	r1, r7
   1e918:	bl	1e9b8 <dta_interpret_strl_vo_bytes>
   1e91c:	ldrd	r2, [r7, #216]	; 0xd8
   1e920:	ldr	r0, [pc, #140]	; 1e9b4 <dta_handle_row+0x2d8>
   1e924:	add	r0, pc, r0
   1e928:	str	r0, [sp]
   1e92c:	mov	r0, sl
   1e930:	mov	r1, r2
   1e934:	mov	r2, r3
   1e938:	mov	r3, #4
   1e93c:	bl	4d34 <bsearch@plt>
   1e940:	cmp	r0, #0
   1e944:	ldrne	r0, [r0]
   1e948:	addne	r0, r0, #24
   1e94c:	strne	r0, [sp, #64]	; 0x40
   1e950:	mov	r0, #0
   1e954:	str	r0, [sp, #72]	; 0x48
   1e958:	ldr	r7, [sp, #20]
   1e95c:	b	1e8ac <dta_handle_row+0x1d0>
   1e960:	mov	r3, #0
   1e964:	ldr	r0, [r7, #236]	; 0xec
   1e968:	str	r0, [sp]
   1e96c:	ldr	r0, [sp, #16]
   1e970:	add	r2, r0, r4
   1e974:	mov	r0, r8
   1e978:	mov	r1, #2048	; 0x800
   1e97c:	bl	4cbc <readstat_convert@plt>
   1e980:	cmp	r0, #0
   1e984:	bne	1e994 <dta_handle_row+0x2b8>
   1e988:	str	r8, [sp, #64]	; 0x40
   1e98c:	b	1e8ac <dta_handle_row+0x1d0>
   1e990:	mov	r0, #0
   1e994:	sub	sp, fp, #48	; 0x30
   1e998:	vpop	{d8-d9}
   1e99c:	add	sp, sp, #4
   1e9a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e9a4:	mov	r0, #5
   1e9a8:	b	1e994 <dta_handle_row+0x2b8>
   1e9ac:	mov	r0, #4
   1e9b0:	b	1e994 <dta_handle_row+0x2b8>
   1e9b4:	.word	0x00000158

0001e9b8 <dta_interpret_strl_vo_bytes>:
   1e9b8:	push	{r4, r5, r6, r7, fp, lr}
   1e9bc:	add	fp, sp, #16
   1e9c0:	mov	r5, r1
   1e9c4:	mov	r4, r0
   1e9c8:	vmov.i32	q8, #0	; 0x00000000
   1e9cc:	vst1.64	{d16-d17}, [r0]!
   1e9d0:	vst1.64	{d16-d17}, [r0]
   1e9d4:	ldr	r0, [r1, #112]	; 0x70
   1e9d8:	cmp	r0, #4
   1e9dc:	beq	1ea20 <dta_interpret_strl_vo_bytes+0x68>
   1e9e0:	cmp	r0, #2
   1e9e4:	popne	{r4, r5, r6, r7, fp, pc}
   1e9e8:	ldrb	r0, [r2]
   1e9ec:	ldr	r1, [r5, #232]	; 0xe8
   1e9f0:	cmp	r1, #2
   1e9f4:	bne	1ea60 <dta_interpret_strl_vo_bytes+0xa8>
   1e9f8:	ldrb	r1, [r2, #1]
   1e9fc:	orr	r0, r1, r0, lsl #8
   1ea00:	strh	r0, [r4]
   1ea04:	ldrb	r0, [r2, #2]
   1ea08:	ldrb	r1, [r2, #3]
   1ea0c:	orr	r7, r1, r0, lsl #8
   1ea10:	ldr	r0, [r2, #4]
   1ea14:	rev	r6, r0
   1ea18:	strd	r6, [r4, #8]
   1ea1c:	pop	{r4, r5, r6, r7, fp, pc}
   1ea20:	ldr	r0, [r2]
   1ea24:	ldr	r6, [r2, #4]
   1ea28:	ldrb	r1, [r5, #192]	; 0xc0
   1ea2c:	tst	r1, #1
   1ea30:	beq	1ea38 <dta_interpret_strl_vo_bytes+0x80>
   1ea34:	bl	480c <byteswap4@plt>
   1ea38:	strh	r0, [r4]
   1ea3c:	ldrb	r0, [r5, #192]	; 0xc0
   1ea40:	tst	r0, #1
   1ea44:	beq	1ea54 <dta_interpret_strl_vo_bytes+0x9c>
   1ea48:	mov	r0, r6
   1ea4c:	bl	480c <byteswap4@plt>
   1ea50:	mov	r6, r0
   1ea54:	mov	r7, #0
   1ea58:	strd	r6, [r4, #8]
   1ea5c:	pop	{r4, r5, r6, r7, fp, pc}
   1ea60:	ldrb	r1, [r2, #1]
   1ea64:	orr	r0, r0, r1, lsl #8
   1ea68:	strh	r0, [r4]
   1ea6c:	ldrb	r0, [r2, #7]
   1ea70:	ldrb	r1, [r2, #6]
   1ea74:	orr	r7, r1, r0, lsl #8
   1ea78:	ldr	r6, [r2, #2]
   1ea7c:	strd	r6, [r4, #8]
   1ea80:	pop	{r4, r5, r6, r7, fp, pc}

0001ea84 <dta_compare_strls>:
   1ea84:	ldrh	r2, [r0]
   1ea88:	ldr	r1, [r1]
   1ea8c:	ldrh	r3, [r1]
   1ea90:	cmp	r2, r3
   1ea94:	subne	r0, r2, r3
   1ea98:	bxne	lr
   1ea9c:	ldr	r1, [r1, #8]
   1eaa0:	ldr	r0, [r0, #8]
   1eaa4:	sub	r0, r0, r1
   1eaa8:	bx	lr

0001eaac <dta_interpret_int8_bytes>:
   1eaac:	push	{r4, r5, fp, lr}
   1eab0:	add	fp, sp, #8
   1eab4:	mov	r5, r1
   1eab8:	mov	r4, r0
   1eabc:	ldr	r0, [pc, #96]	; 1eb24 <dta_interpret_int8_bytes+0x78>
   1eac0:	add	r0, pc, r0
   1eac4:	vld1.64	{d16-d17}, [r0]
   1eac8:	vst1.64	{d16-d17}, [r4]
   1eacc:	ldrb	r0, [r2]
   1ead0:	ldrb	r1, [r1, #192]	; 0xc0
   1ead4:	tst	r1, #2
   1ead8:	beq	1eae0 <dta_interpret_int8_bytes+0x34>
   1eadc:	bl	4e0c <ones_to_twos_complement1@plt>
   1eae0:	ldrsb	r1, [r5, #193]	; 0xc1
   1eae4:	sxtb	r2, r0
   1eae8:	cmp	r2, r1
   1eaec:	ble	1eb1c <dta_interpret_int8_bytes+0x70>
   1eaf0:	mov	r1, #1
   1eaf4:	cmp	r2, #102	; 0x66
   1eaf8:	blt	1eb10 <dta_interpret_int8_bytes+0x64>
   1eafc:	ldrb	r2, [r5, #192]	; 0xc0
   1eb00:	ands	r2, r2, #8
   1eb04:	subne	r1, r0, #5
   1eb08:	strbne	r1, [r4, #12]
   1eb0c:	movne	r1, #2
   1eb10:	ldrb	r2, [r4, #13]
   1eb14:	orr	r1, r2, r1
   1eb18:	strb	r1, [r4, #13]
   1eb1c:	strb	r0, [r4]
   1eb20:	pop	{r4, r5, fp, pc}
   1eb24:	.word	0x00009268

0001eb28 <dta_interpret_int16_bytes>:
   1eb28:	push	{r4, r5, fp, lr}
   1eb2c:	add	fp, sp, #8
   1eb30:	mov	r5, r1
   1eb34:	mov	r4, r0
   1eb38:	ldr	r0, [pc, #120]	; 1ebb8 <dta_interpret_int16_bytes+0x90>
   1eb3c:	add	r0, pc, r0
   1eb40:	vld1.64	{d16-d17}, [r0]
   1eb44:	vst1.64	{d16-d17}, [r4]
   1eb48:	ldrh	r0, [r2]
   1eb4c:	ldrb	r1, [r1, #192]	; 0xc0
   1eb50:	tst	r1, #1
   1eb54:	beq	1eb5c <dta_interpret_int16_bytes+0x34>
   1eb58:	bl	4920 <byteswap2@plt>
   1eb5c:	ldrb	r1, [r5, #192]	; 0xc0
   1eb60:	tst	r1, #2
   1eb64:	beq	1eb70 <dta_interpret_int16_bytes+0x48>
   1eb68:	sxth	r0, r0
   1eb6c:	bl	4980 <ones_to_twos_complement2@plt>
   1eb70:	ldrsh	r1, [r5, #194]	; 0xc2
   1eb74:	sxth	r2, r0
   1eb78:	cmp	r2, r1
   1eb7c:	ble	1ebb0 <dta_interpret_int16_bytes+0x88>
   1eb80:	mov	r1, #1
   1eb84:	movw	r3, #32742	; 0x7fe6
   1eb88:	cmp	r2, r3
   1eb8c:	blt	1eba4 <dta_interpret_int16_bytes+0x7c>
   1eb90:	ldrb	r2, [r5, #192]	; 0xc0
   1eb94:	ands	r2, r2, #8
   1eb98:	addne	r1, r0, #123	; 0x7b
   1eb9c:	strbne	r1, [r4, #12]
   1eba0:	movne	r1, #2
   1eba4:	ldrb	r2, [r4, #13]
   1eba8:	orr	r1, r2, r1
   1ebac:	strb	r1, [r4, #13]
   1ebb0:	strh	r0, [r4]
   1ebb4:	pop	{r4, r5, fp, pc}
   1ebb8:	.word	0x000091fc

0001ebbc <dta_interpret_int32_bytes>:
   1ebbc:	push	{r4, r5, fp, lr}
   1ebc0:	add	fp, sp, #8
   1ebc4:	mov	r5, r1
   1ebc8:	mov	r4, r0
   1ebcc:	ldr	r0, [pc, #108]	; 1ec40 <dta_interpret_int32_bytes+0x84>
   1ebd0:	add	r0, pc, r0
   1ebd4:	vld1.64	{d16-d17}, [r0]
   1ebd8:	vst1.64	{d16-d17}, [r4]
   1ebdc:	ldr	r0, [r2]
   1ebe0:	ldrb	r1, [r1, #192]	; 0xc0
   1ebe4:	tst	r1, #1
   1ebe8:	beq	1ebf0 <dta_interpret_int32_bytes+0x34>
   1ebec:	bl	480c <byteswap4@plt>
   1ebf0:	ldrb	r1, [r5, #192]	; 0xc0
   1ebf4:	tst	r1, #2
   1ebf8:	beq	1ec00 <dta_interpret_int32_bytes+0x44>
   1ebfc:	bl	4974 <ones_to_twos_complement4@plt>
   1ec00:	ldr	r1, [r5, #196]	; 0xc4
   1ec04:	cmp	r0, r1
   1ec08:	ble	1ec38 <dta_interpret_int32_bytes+0x7c>
   1ec0c:	mov	r1, #1
   1ec10:	cmn	r0, #-2147483622	; 0x8000001a
   1ec14:	blt	1ec2c <dta_interpret_int32_bytes+0x70>
   1ec18:	ldrb	r2, [r5, #192]	; 0xc0
   1ec1c:	ands	r2, r2, #8
   1ec20:	addne	r1, r0, #123	; 0x7b
   1ec24:	strbne	r1, [r4, #12]
   1ec28:	movne	r1, #2
   1ec2c:	ldrb	r2, [r4, #13]
   1ec30:	orr	r1, r2, r1
   1ec34:	strb	r1, [r4, #13]
   1ec38:	str	r0, [r4]
   1ec3c:	pop	{r4, r5, fp, pc}
   1ec40:	.word	0x00009178

0001ec44 <dta_interpret_float_bytes>:
   1ec44:	push	{r4, r5, fp, lr}
   1ec48:	add	fp, sp, #8
   1ec4c:	mov	r5, r1
   1ec50:	mov	r4, r0
   1ec54:	ldr	r0, [pc, #112]	; 1eccc <dta_interpret_float_bytes+0x88>
   1ec58:	add	r0, pc, r0
   1ec5c:	vld1.64	{d16-d17}, [r0]
   1ec60:	vst1.64	{d16-d17}, [r4]
   1ec64:	ldr	r0, [r2]
   1ec68:	ldrb	r1, [r1, #192]	; 0xc0
   1ec6c:	tst	r1, #1
   1ec70:	beq	1ec78 <dta_interpret_float_bytes+0x34>
   1ec74:	bl	480c <byteswap4@plt>
   1ec78:	ldr	r1, [r5, #200]	; 0xc8
   1ec7c:	cmp	r0, r1
   1ec80:	ble	1ecc4 <dta_interpret_float_bytes+0x80>
   1ec84:	mov	r1, #1
   1ec88:	cmp	r0, #2130706432	; 0x7f000000
   1ec8c:	ble	1ecb0 <dta_interpret_float_bytes+0x6c>
   1ec90:	ldrb	r2, [r5, #192]	; 0xc0
   1ec94:	ands	r2, r2, #8
   1ec98:	addne	r0, r0, #260096	; 0x3f800
   1ec9c:	addne	r0, r0, #262144	; 0x40000
   1eca0:	movne	r1, #97	; 0x61
   1eca4:	addne	r0, r1, r0, lsr #11
   1eca8:	strbne	r0, [r4, #12]
   1ecac:	movne	r1, #2
   1ecb0:	ldrb	r0, [r4, #13]
   1ecb4:	orr	r0, r0, r1
   1ecb8:	strb	r0, [r4, #13]
   1ecbc:	movw	r0, #0
   1ecc0:	movt	r0, #32704	; 0x7fc0
   1ecc4:	str	r0, [r4]
   1ecc8:	pop	{r4, r5, fp, pc}
   1eccc:	.word	0x00009100

0001ecd0 <dta_interpret_double_bytes>:
   1ecd0:	push	{r4, r5, fp, lr}
   1ecd4:	add	fp, sp, #8
   1ecd8:	mov	r5, r1
   1ecdc:	mov	r4, r0
   1ece0:	ldr	r0, [pc, #132]	; 1ed6c <dta_interpret_double_bytes+0x9c>
   1ece4:	add	r0, pc, r0
   1ece8:	vld1.64	{d16-d17}, [r0]
   1ecec:	vst1.64	{d16-d17}, [r4]
   1ecf0:	ldr	r0, [r2]
   1ecf4:	ldr	r1, [r2, #4]
   1ecf8:	ldrb	r2, [r5, #192]	; 0xc0
   1ecfc:	tst	r2, #1
   1ed00:	beq	1ed08 <dta_interpret_double_bytes+0x38>
   1ed04:	bl	47f4 <byteswap8@plt>
   1ed08:	ldrd	r2, [r5, #208]	; 0xd0
   1ed0c:	subs	r2, r2, r0
   1ed10:	sbcs	r2, r3, r1
   1ed14:	bge	1ed64 <dta_interpret_double_bytes+0x94>
   1ed18:	mov	r2, #1
   1ed1c:	movw	r3, #0
   1ed20:	movt	r3, #32736	; 0x7fe0
   1ed24:	subs	r0, r0, #1
   1ed28:	sbcs	r0, r1, r3
   1ed2c:	blt	1ed4c <dta_interpret_double_bytes+0x7c>
   1ed30:	ldrb	r0, [r5, #192]	; 0xc0
   1ed34:	ands	r0, r0, #8
   1ed38:	addne	r0, r1, #65280	; 0xff00
   1ed3c:	movne	r1, #97	; 0x61
   1ed40:	addne	r0, r1, r0, lsr #8
   1ed44:	strbne	r0, [r4, #12]
   1ed48:	movne	r2, #2
   1ed4c:	ldrb	r0, [r4, #13]
   1ed50:	orr	r0, r0, r2
   1ed54:	strb	r0, [r4, #13]
   1ed58:	movw	r1, #0
   1ed5c:	movt	r1, #32760	; 0x7ff8
   1ed60:	mov	r0, #0
   1ed64:	strd	r0, [r4]
   1ed68:	pop	{r4, r5, fp, pc}
   1ed6c:	.word	0x00009084

0001ed70 <dta_metadata_ok>:
   1ed70:	ldr	r1, [r0, #16]
   1ed74:	cmp	r1, #0
   1ed78:	movne	r0, #6
   1ed7c:	bxne	lr
   1ed80:	ldr	r0, [r0, #8]
   1ed84:	sub	r1, r0, #104	; 0x68
   1ed88:	mov	r0, #0
   1ed8c:	cmp	r1, #15
   1ed90:	movwhi	r0, #24
   1ed94:	bx	lr

0001ed98 <readstat_begin_writing_dta>:
   1ed98:	push	{r4, sl, fp, lr}
   1ed9c:	add	fp, sp, #8
   1eda0:	ldr	ip, [r0, #8]
   1eda4:	cmp	ip, #0
   1eda8:	beq	1ede8 <readstat_begin_writing_dta+0x50>
   1edac:	ldr	r3, [pc, #396]	; 1ef40 <readstat_begin_writing_dta+0x1a8>
   1edb0:	ldr	r3, [pc, r3]
   1edb4:	str	r3, [r0, #292]	; 0x124
   1edb8:	cmp	ip, #116	; 0x74
   1edbc:	ble	1ee54 <readstat_begin_writing_dta+0xbc>
   1edc0:	ldr	r3, [pc, #392]	; 1ef50 <readstat_begin_writing_dta+0x1b8>
   1edc4:	add	r3, pc, r3
   1edc8:	str	r3, [r0, #228]	; 0xe4
   1edcc:	cmp	ip, #117	; 0x75
   1edd0:	bne	1ee08 <readstat_begin_writing_dta+0x70>
   1edd4:	ldr	ip, [pc, #376]	; 1ef54 <readstat_begin_writing_dta+0x1bc>
   1edd8:	add	ip, pc, ip
   1eddc:	ldr	r3, [pc, #372]	; 1ef58 <readstat_begin_writing_dta+0x1c0>
   1ede0:	add	r3, pc, r3
   1ede4:	b	1ee18 <readstat_begin_writing_dta+0x80>
   1ede8:	mov	r3, #118	; 0x76
   1edec:	str	r3, [r0, #8]
   1edf0:	ldr	r3, [pc, #312]	; 1ef30 <readstat_begin_writing_dta+0x198>
   1edf4:	add	r3, pc, r3
   1edf8:	str	r3, [r0, #228]	; 0xe4
   1edfc:	ldr	r3, [pc, #304]	; 1ef34 <readstat_begin_writing_dta+0x19c>
   1ee00:	ldr	r3, [pc, r3]
   1ee04:	str	r3, [r0, #292]	; 0x124
   1ee08:	ldr	ip, [pc, #296]	; 1ef38 <readstat_begin_writing_dta+0x1a0>
   1ee0c:	add	ip, pc, ip
   1ee10:	ldr	r3, [pc, #292]	; 1ef3c <readstat_begin_writing_dta+0x1a4>
   1ee14:	add	r3, pc, r3
   1ee18:	str	ip, [r0, #260]	; 0x104
   1ee1c:	str	r3, [r0, #232]	; 0xe8
   1ee20:	ldr	r3, [pc, #308]	; 1ef5c <readstat_begin_writing_dta+0x1c4>
   1ee24:	add	r3, pc, r3
   1ee28:	ldr	r4, [pc, #304]	; 1ef60 <readstat_begin_writing_dta+0x1c8>
   1ee2c:	add	r4, pc, r4
   1ee30:	str	r4, [r0, #268]	; 0x10c
   1ee34:	str	r3, [r0, #272]	; 0x110
   1ee38:	ldr	ip, [pc, #292]	; 1ef64 <readstat_begin_writing_dta+0x1cc>
   1ee3c:	add	ip, pc, ip
   1ee40:	ldr	r4, [pc, #288]	; 1ef68 <readstat_begin_writing_dta+0x1d0>
   1ee44:	add	r4, pc, r4
   1ee48:	ldr	r3, [pc, #284]	; 1ef6c <readstat_begin_writing_dta+0x1d4>
   1ee4c:	add	r3, pc, r3
   1ee50:	b	1eecc <readstat_begin_writing_dta+0x134>
   1ee54:	cmp	ip, #110	; 0x6e
   1ee58:	ble	1ee80 <readstat_begin_writing_dta+0xe8>
   1ee5c:	ldr	r3, [pc, #268]	; 1ef70 <readstat_begin_writing_dta+0x1d8>
   1ee60:	add	r3, pc, r3
   1ee64:	ldr	r4, [pc, #264]	; 1ef74 <readstat_begin_writing_dta+0x1dc>
   1ee68:	add	r4, pc, r4
   1ee6c:	str	r4, [r0, #228]	; 0xe4
   1ee70:	str	r3, [r0, #232]	; 0xe8
   1ee74:	cmp	ip, #112	; 0x70
   1ee78:	bgt	1ee20 <readstat_begin_writing_dta+0x88>
   1ee7c:	b	1eea8 <readstat_begin_writing_dta+0x110>
   1ee80:	ldr	lr, [pc, #188]	; 1ef44 <readstat_begin_writing_dta+0x1ac>
   1ee84:	add	lr, pc, lr
   1ee88:	ldr	r3, [pc, #184]	; 1ef48 <readstat_begin_writing_dta+0x1b0>
   1ee8c:	add	r3, pc, r3
   1ee90:	ldr	r4, [pc, #180]	; 1ef4c <readstat_begin_writing_dta+0x1b4>
   1ee94:	add	r4, pc, r4
   1ee98:	cmp	ip, #110	; 0x6e
   1ee9c:	moveq	r4, r3
   1eea0:	str	lr, [r0, #228]	; 0xe4
   1eea4:	str	r4, [r0, #232]	; 0xe8
   1eea8:	ldr	r3, [pc, #200]	; 1ef78 <readstat_begin_writing_dta+0x1e0>
   1eeac:	add	r3, pc, r3
   1eeb0:	str	r3, [r0, #268]	; 0x10c
   1eeb4:	ldr	ip, [pc, #192]	; 1ef7c <readstat_begin_writing_dta+0x1e4>
   1eeb8:	add	ip, pc, ip
   1eebc:	ldr	r4, [pc, #188]	; 1ef80 <readstat_begin_writing_dta+0x1e8>
   1eec0:	add	r4, pc, r4
   1eec4:	ldr	r3, [pc, #184]	; 1ef84 <readstat_begin_writing_dta+0x1ec>
   1eec8:	add	r3, pc, r3
   1eecc:	str	r3, [r0, #236]	; 0xec
   1eed0:	str	r4, [r0, #240]	; 0xf0
   1eed4:	str	ip, [r0, #244]	; 0xf4
   1eed8:	ldr	r3, [pc, #168]	; 1ef88 <readstat_begin_writing_dta+0x1f0>
   1eedc:	add	r3, pc, r3
   1eee0:	ldr	r4, [pc, #164]	; 1ef8c <readstat_begin_writing_dta+0x1f4>
   1eee4:	add	r4, pc, r4
   1eee8:	str	r4, [r0, #284]	; 0x11c
   1eeec:	str	r3, [r0, #288]	; 0x120
   1eef0:	ldr	r3, [pc, #152]	; 1ef90 <readstat_begin_writing_dta+0x1f8>
   1eef4:	add	r3, pc, r3
   1eef8:	str	r3, [r0, #276]	; 0x114
   1eefc:	ldr	r3, [pc, #144]	; 1ef94 <readstat_begin_writing_dta+0x1fc>
   1ef00:	add	r3, pc, r3
   1ef04:	str	r3, [r0, #264]	; 0x108
   1ef08:	ldr	ip, [pc, #136]	; 1ef98 <readstat_begin_writing_dta+0x200>
   1ef0c:	add	ip, pc, ip
   1ef10:	ldr	r4, [pc, #132]	; 1ef9c <readstat_begin_writing_dta+0x204>
   1ef14:	add	r4, pc, r4
   1ef18:	ldr	r3, [pc, #128]	; 1efa0 <readstat_begin_writing_dta+0x208>
   1ef1c:	add	r3, pc, r3
   1ef20:	add	lr, r0, #248	; 0xf8
   1ef24:	stm	lr, {r3, r4, ip}
   1ef28:	pop	{r4, sl, fp, lr}
   1ef2c:	b	49d4 <readstat_begin_writing_file@plt>
   1ef30:	.word	0x000001a8
   1ef34:	.word	0x00026504
   1ef38:	.word	0x00000258
   1ef3c:	.word	0x000001fc
   1ef40:	.word	0x00026554
   1ef44:	.word	0x0000016c
   1ef48:	.word	0x000001a0
   1ef4c:	.word	0x000001b4
   1ef50:	.word	0x000001d8
   1ef54:	.word	0x000002d4
   1ef58:	.word	0x0000024c
   1ef5c:	.word	0x000003c0
   1ef60:	.word	0x00000330
   1ef64:	.word	0x000002f0
   1ef68:	.word	0x000002b8
   1ef6c:	.word	0x00000284
   1ef70:	.word	0x000001cc
   1ef74:	.word	0x00000168
   1ef78:	.word	0x00000498
   1ef7c:	.word	0x0000045c
   1ef80:	.word	0x00000424
   1ef84:	.word	0x000003f0
   1ef88:	.word	0x00000804
   1ef8c:	.word	0x00000770
   1ef90:	.word	0x00000628
   1ef94:	.word	0x00000614
   1ef98:	.word	0x00000594
   1ef9c:	.word	0x00000524
   1efa0:	.word	0x000004b0

0001efa4 <dta_117_variable_width>:
   1efa4:	cmp	r0, #6
   1efa8:	moveq	r1, #8
   1efac:	moveq	r0, r1
   1efb0:	bxeq	lr
   1efb4:	cmp	r0, #0
   1efb8:	bne	1efd4 <dta_117_variable_width+0x30>
   1efbc:	sub	r0, r1, #1
   1efc0:	movw	r2, #2044	; 0x7fc
   1efc4:	cmp	r0, r2
   1efc8:	movwhi	r1, #2045	; 0x7fd
   1efcc:	mov	r0, r1
   1efd0:	bx	lr
   1efd4:	b	1f6ec <dta_numeric_variable_width>

0001efd8 <dta_111_variable_width>:
   1efd8:	cmp	r0, #0
   1efdc:	beq	1efe4 <dta_111_variable_width+0xc>
   1efe0:	b	1f6ec <dta_numeric_variable_width>
   1efe4:	sub	r0, r1, #1
   1efe8:	cmp	r0, #243	; 0xf3
   1efec:	movwhi	r1, #244	; 0xf4
   1eff0:	mov	r0, r1
   1eff4:	bx	lr

0001eff8 <dta_old_variable_width>:
   1eff8:	cmp	r0, #0
   1effc:	beq	1f004 <dta_old_variable_width+0xc>
   1f000:	b	1f6ec <dta_numeric_variable_width>
   1f004:	sub	r0, r1, #1
   1f008:	cmp	r0, #127	; 0x7f
   1f00c:	movwhi	r1, #128	; 0x80
   1f010:	mov	r0, r1
   1f014:	bx	lr

0001f018 <dta_118_variable_ok>:
   1f018:	push	{fp, lr}
   1f01c:	mov	fp, sp
   1f020:	bl	4e00 <readstat_variable_get_name@plt>
   1f024:	mov	r1, #1
   1f028:	mov	r2, #129	; 0x81
   1f02c:	pop	{fp, lr}
   1f030:	b	1f710 <dta_validate_name>

0001f034 <dta_110_variable_ok>:
   1f034:	push	{fp, lr}
   1f038:	mov	fp, sp
   1f03c:	bl	4e00 <readstat_variable_get_name@plt>
   1f040:	mov	r1, #0
   1f044:	mov	r2, #33	; 0x21
   1f048:	pop	{fp, lr}
   1f04c:	b	1f710 <dta_validate_name>

0001f050 <dta_old_variable_ok>:
   1f050:	push	{fp, lr}
   1f054:	mov	fp, sp
   1f058:	bl	4e00 <readstat_variable_get_name@plt>
   1f05c:	mov	r1, #0
   1f060:	mov	r2, #9
   1f064:	pop	{fp, lr}
   1f068:	b	1f710 <dta_validate_name>

0001f06c <dta_118_write_string_ref>:
   1f06c:	cmp	r2, #0
   1f070:	moveq	r0, #34	; 0x22
   1f074:	bxeq	lr
   1f078:	push	{r4, r5, r6, sl, fp, lr}
   1f07c:	add	fp, sp, #16
   1f080:	mov	r4, r0
   1f084:	ldr	r6, [r2, #8]
   1f088:	ldr	r5, [r2, #12]
   1f08c:	ldrh	r0, [r2]
   1f090:	strh	r0, [r4]
   1f094:	bl	492c <machine_is_little_endian@plt>
   1f098:	cmp	r0, #0
   1f09c:	lsreq	r5, r6, #16
   1f0a0:	strh	r5, [r4, #6]
   1f0a4:	lsleq	r6, r6, #16
   1f0a8:	str	r6, [r4, #2]
   1f0ac:	mov	r0, #0
   1f0b0:	pop	{r4, r5, r6, sl, fp, pc}

0001f0b4 <dta_117_write_string_ref>:
   1f0b4:	cmp	r2, #0
   1f0b8:	moveq	r0, #34	; 0x22
   1f0bc:	bxeq	lr
   1f0c0:	ldr	r1, [r2]
   1f0c4:	ldr	r2, [r2, #8]
   1f0c8:	str	r2, [r0, #4]
   1f0cc:	str	r1, [r0]
   1f0d0:	mov	r0, #0
   1f0d4:	bx	lr

0001f0d8 <dta_113_write_int8>:
   1f0d8:	mov	r1, #20
   1f0dc:	cmp	r2, #100	; 0x64
   1f0e0:	bgt	1f0fc <dta_113_write_int8+0x24>
   1f0e4:	push	{fp, lr}
   1f0e8:	mov	fp, sp
   1f0ec:	mov	r1, r2
   1f0f0:	bl	1fa5c <dta_write_raw_int8>
   1f0f4:	mov	r1, #0
   1f0f8:	pop	{fp, lr}
   1f0fc:	mov	r0, r1
   1f100:	bx	lr

0001f104 <dta_113_write_int16>:
   1f104:	mov	r1, #20
   1f108:	movw	r3, #32740	; 0x7fe4
   1f10c:	cmp	r2, r3
   1f110:	bgt	1f12c <dta_113_write_int16+0x28>
   1f114:	push	{fp, lr}
   1f118:	mov	fp, sp
   1f11c:	mov	r1, r2
   1f120:	bl	1fa64 <dta_write_raw_int16>
   1f124:	mov	r1, #0
   1f128:	pop	{fp, lr}
   1f12c:	mov	r0, r1
   1f130:	bx	lr

0001f134 <dta_113_write_int32>:
   1f134:	mov	r1, r0
   1f138:	mov	r0, #20
   1f13c:	cmn	r2, #-2147483620	; 0x8000001c
   1f140:	bxgt	lr
   1f144:	push	{fp, lr}
   1f148:	mov	fp, sp
   1f14c:	mov	r0, r1
   1f150:	mov	r1, r2
   1f154:	bl	1fa6c <dta_write_raw_int32>
   1f158:	mov	r0, #0
   1f15c:	pop	{fp, lr}
   1f160:	bx	lr

0001f164 <dta_113_write_missing_numeric>:
   1f164:	push	{fp, lr}
   1f168:	mov	fp, sp
   1f16c:	ldr	r1, [r1]
   1f170:	sub	r1, r1, #1
   1f174:	cmp	r1, #4
   1f178:	bhi	1f1e4 <dta_113_write_missing_numeric+0x80>
   1f17c:	add	r2, pc, #4
   1f180:	ldr	r1, [r2, r1, lsl #2]
   1f184:	add	pc, r2, r1
   1f188:	.word	0x00000014
   1f18c:	.word	0x00000024
   1f190:	.word	0x00000034
   1f194:	.word	0x0000003c
   1f198:	.word	0x0000004c
   1f19c:	mov	r1, #101	; 0x65
   1f1a0:	bl	1fa5c <dta_write_raw_int8>
   1f1a4:	mov	r0, #0
   1f1a8:	pop	{fp, pc}
   1f1ac:	movw	r1, #32741	; 0x7fe5
   1f1b0:	bl	1fa64 <dta_write_raw_int16>
   1f1b4:	mov	r0, #0
   1f1b8:	pop	{fp, pc}
   1f1bc:	mvn	r1, #-2147483622	; 0x8000001a
   1f1c0:	b	1f1c8 <dta_113_write_missing_numeric+0x64>
   1f1c4:	mov	r1, #2130706432	; 0x7f000000
   1f1c8:	bl	1fa6c <dta_write_raw_int32>
   1f1cc:	mov	r0, #0
   1f1d0:	pop	{fp, pc}
   1f1d4:	movw	r3, #0
   1f1d8:	movt	r3, #32736	; 0x7fe0
   1f1dc:	mov	r2, #0
   1f1e0:	bl	1fa74 <dta_write_raw_int64>
   1f1e4:	mov	r0, #0
   1f1e8:	pop	{fp, pc}

0001f1ec <dta_113_write_missing_tagged>:
   1f1ec:	push	{r4, sl, fp, lr}
   1f1f0:	add	fp, sp, #8
   1f1f4:	sub	r3, r2, #97	; 0x61
   1f1f8:	uxtb	r3, r3
   1f1fc:	mov	r4, #21
   1f200:	cmp	r3, #25
   1f204:	bls	1f210 <dta_113_write_missing_tagged+0x24>
   1f208:	mov	r0, r4
   1f20c:	pop	{r4, sl, fp, pc}
   1f210:	ldr	r1, [r1]
   1f214:	sub	r1, r1, #1
   1f218:	cmp	r1, #4
   1f21c:	bhi	1f250 <dta_113_write_missing_tagged+0x64>
   1f220:	add	r3, pc, #4
   1f224:	ldr	r1, [r3, r1, lsl #2]
   1f228:	add	pc, r3, r1
   1f22c:	.word	0x00000014
   1f230:	.word	0x00000030
   1f234:	.word	0x00000044
   1f238:	.word	0x00000050
   1f23c:	.word	0x0000006c
   1f240:	add	r1, r2, #5
   1f244:	sxtb	r1, r1
   1f248:	bl	1fa5c <dta_write_raw_int8>
   1f24c:	b	1f28c <dta_113_write_missing_tagged+0xa0>
   1f250:	mov	r4, #23
   1f254:	mov	r0, r4
   1f258:	pop	{r4, sl, fp, pc}
   1f25c:	movw	r1, #32645	; 0x7f85
   1f260:	add	r1, r2, r1
   1f264:	sxth	r1, r1
   1f268:	bl	1fa64 <dta_write_raw_int16>
   1f26c:	b	1f28c <dta_113_write_missing_tagged+0xa0>
   1f270:	sub	r1, r2, #123	; 0x7b
   1f274:	sub	r1, r1, #-2147483648	; 0x80000000
   1f278:	b	1f288 <dta_113_write_missing_tagged+0x9c>
   1f27c:	movw	r1, #0
   1f280:	movt	r1, #32509	; 0x7efd
   1f284:	add	r1, r1, r2, lsl #11
   1f288:	bl	1fa6c <dta_write_raw_int32>
   1f28c:	mov	r4, #0
   1f290:	mov	r0, r4
   1f294:	pop	{r4, sl, fp, pc}
   1f298:	sub	r1, r2, #97	; 0x61
   1f29c:	sub	r1, r1, #-16777216	; 0xff000000
   1f2a0:	movw	r2, #256	; 0x100
   1f2a4:	movt	r2, #32736	; 0x7fe0
   1f2a8:	add	r3, r2, r1, lsl #8
   1f2ac:	mov	r4, #0
   1f2b0:	mov	r2, #0
   1f2b4:	bl	1fa74 <dta_write_raw_int64>
   1f2b8:	mov	r0, r4
   1f2bc:	pop	{r4, sl, fp, pc}

0001f2c0 <dta_old_write_int8>:
   1f2c0:	mov	r1, #20
   1f2c4:	cmp	r2, #127	; 0x7f
   1f2c8:	beq	1f2e4 <dta_old_write_int8+0x24>
   1f2cc:	push	{fp, lr}
   1f2d0:	mov	fp, sp
   1f2d4:	mov	r1, r2
   1f2d8:	bl	1fa5c <dta_write_raw_int8>
   1f2dc:	mov	r1, #0
   1f2e0:	pop	{fp, lr}
   1f2e4:	mov	r0, r1
   1f2e8:	bx	lr

0001f2ec <dta_old_write_int16>:
   1f2ec:	mov	r1, #20
   1f2f0:	movw	r3, #32767	; 0x7fff
   1f2f4:	cmp	r2, r3
   1f2f8:	beq	1f314 <dta_old_write_int16+0x28>
   1f2fc:	push	{fp, lr}
   1f300:	mov	fp, sp
   1f304:	mov	r1, r2
   1f308:	bl	1fa64 <dta_write_raw_int16>
   1f30c:	mov	r1, #0
   1f310:	pop	{fp, lr}
   1f314:	mov	r0, r1
   1f318:	bx	lr

0001f31c <dta_old_write_int32>:
   1f31c:	mov	r1, r0
   1f320:	mov	r0, #20
   1f324:	cmn	r2, #-2147483647	; 0x80000001
   1f328:	bxeq	lr
   1f32c:	push	{fp, lr}
   1f330:	mov	fp, sp
   1f334:	mov	r0, r1
   1f338:	mov	r1, r2
   1f33c:	bl	1fa6c <dta_write_raw_int32>
   1f340:	mov	r0, #0
   1f344:	pop	{fp, lr}
   1f348:	bx	lr

0001f34c <dta_old_write_missing_numeric>:
   1f34c:	push	{fp, lr}
   1f350:	mov	fp, sp
   1f354:	ldr	r1, [r1]
   1f358:	sub	r1, r1, #1
   1f35c:	cmp	r1, #4
   1f360:	bhi	1f3cc <dta_old_write_missing_numeric+0x80>
   1f364:	add	r2, pc, #4
   1f368:	ldr	r1, [r2, r1, lsl #2]
   1f36c:	add	pc, r2, r1
   1f370:	.word	0x00000014
   1f374:	.word	0x00000024
   1f378:	.word	0x00000034
   1f37c:	.word	0x0000003c
   1f380:	.word	0x0000004c
   1f384:	mov	r1, #127	; 0x7f
   1f388:	bl	1fa5c <dta_write_raw_int8>
   1f38c:	mov	r0, #0
   1f390:	pop	{fp, pc}
   1f394:	movw	r1, #32767	; 0x7fff
   1f398:	bl	1fa64 <dta_write_raw_int16>
   1f39c:	mov	r0, #0
   1f3a0:	pop	{fp, pc}
   1f3a4:	mvn	r1, #-2147483648	; 0x80000000
   1f3a8:	b	1f3b0 <dta_old_write_missing_numeric+0x64>
   1f3ac:	mov	r1, #2130706432	; 0x7f000000
   1f3b0:	bl	1fa6c <dta_write_raw_int32>
   1f3b4:	mov	r0, #0
   1f3b8:	pop	{fp, pc}
   1f3bc:	movw	r3, #0
   1f3c0:	movt	r3, #32736	; 0x7fe0
   1f3c4:	mov	r2, #0
   1f3c8:	bl	1fa74 <dta_write_raw_int64>
   1f3cc:	mov	r0, #0
   1f3d0:	pop	{fp, pc}

0001f3d4 <dta_write_float>:
   1f3d4:	push	{r4, r5, fp, lr}
   1f3d8:	add	fp, sp, #8
   1f3dc:	vpush	{d8}
   1f3e0:	vmov.f32	s16, s0
   1f3e4:	mov	r4, r0
   1f3e8:	vldr	s0, [pc, #72]	; 1f438 <dta_write_float+0x64>
   1f3ec:	mov	r0, #20
   1f3f0:	vcmpe.f32	s16, s0
   1f3f4:	vmrs	APSR_nzcv, fpscr
   1f3f8:	bgt	1f430 <dta_write_float+0x5c>
   1f3fc:	mov	r5, r1
   1f400:	vmov.f32	s0, s16
   1f404:	bl	4944 <__isnanf@plt>
   1f408:	cmp	r0, #0
   1f40c:	beq	1f420 <dta_write_float+0x4c>
   1f410:	mov	r0, r4
   1f414:	mov	r1, r5
   1f418:	bl	1f164 <dta_113_write_missing_numeric>
   1f41c:	b	1f42c <dta_write_float+0x58>
   1f420:	mov	r0, r4
   1f424:	vmov.f32	s0, s16
   1f428:	bl	1fa80 <dta_write_raw_float>
   1f42c:	mov	r0, #0
   1f430:	vpop	{d8}
   1f434:	pop	{r4, r5, fp, pc}
   1f438:	.word	0x7effffff
   1f43c:	.word	0xe320f000

0001f440 <dta_write_double>:
   1f440:	push	{r4, r5, fp, lr}
   1f444:	add	fp, sp, #8
   1f448:	vpush	{d8}
   1f44c:	mov	r4, r0
   1f450:	vldr	d16, [pc, #72]	; 1f4a0 <dta_write_double+0x60>
   1f454:	mov	r0, #20
   1f458:	vcmpe.f64	d0, d16
   1f45c:	vmrs	APSR_nzcv, fpscr
   1f460:	bgt	1f498 <dta_write_double+0x58>
   1f464:	vmov.f64	d8, d0
   1f468:	mov	r5, r1
   1f46c:	bl	4db8 <__isnan@plt>
   1f470:	cmp	r0, #0
   1f474:	beq	1f488 <dta_write_double+0x48>
   1f478:	mov	r0, r4
   1f47c:	mov	r1, r5
   1f480:	bl	1f164 <dta_113_write_missing_numeric>
   1f484:	b	1f494 <dta_write_double+0x54>
   1f488:	mov	r0, r4
   1f48c:	vmov.f64	d0, d8
   1f490:	bl	1fa8c <dta_write_raw_double>
   1f494:	mov	r0, #0
   1f498:	vpop	{d8}
   1f49c:	pop	{r4, r5, fp, pc}
   1f4a0:	.word	0xffffffff
   1f4a4:	.word	0x7fdfffff

0001f4a8 <dta_write_string>:
   1f4a8:	push	{r4, r5, r6, r7, fp, lr}
   1f4ac:	add	fp, sp, #16
   1f4b0:	mov	r5, r0
   1f4b4:	ldr	r4, [r1, #1596]	; 0x63c
   1f4b8:	cmp	r2, #0
   1f4bc:	beq	1f500 <dta_write_string+0x58>
   1f4c0:	mov	r6, r2
   1f4c4:	ldrb	r0, [r2]
   1f4c8:	cmp	r0, #0
   1f4cc:	beq	1f500 <dta_write_string+0x58>
   1f4d0:	mov	r0, r6
   1f4d4:	bl	4c8c <strlen@plt>
   1f4d8:	mov	r7, #22
   1f4dc:	cmp	r0, r4
   1f4e0:	bhi	1f4f8 <dta_write_string+0x50>
   1f4e4:	mov	r0, r5
   1f4e8:	mov	r1, r6
   1f4ec:	mov	r2, r4
   1f4f0:	bl	4d4c <strncpy@plt>
   1f4f4:	mov	r7, #0
   1f4f8:	mov	r0, r7
   1f4fc:	pop	{r4, r5, r6, r7, fp, pc}
   1f500:	mov	r7, #0
   1f504:	mov	r0, r5
   1f508:	mov	r1, #0
   1f50c:	mov	r2, r4
   1f510:	bl	4d28 <memset@plt>
   1f514:	mov	r0, r7
   1f518:	pop	{r4, r5, r6, r7, fp, pc}

0001f51c <dta_write_missing_string>:
   1f51c:	mov	r2, #0
   1f520:	b	1f4a8 <dta_write_string>

0001f524 <dta_begin_data>:
   1f524:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1f528:	add	fp, sp, #24
   1f52c:	sub	sp, sp, #16
   1f530:	mov	r4, r0
   1f534:	ldr	r0, [r0, #308]	; 0x134
   1f538:	cmp	r0, #0
   1f53c:	beq	1f63c <dta_begin_data+0x118>
   1f540:	mov	r5, #0
   1f544:	mov	r0, #0
   1f548:	bl	4ff8 <dta_ctx_alloc@plt>
   1f54c:	mov	r8, r0
   1f550:	ldr	r6, [r4, #28]
   1f554:	ldr	r7, [r4, #80]	; 0x50
   1f558:	bl	492c <machine_is_little_endian@plt>
   1f55c:	ldrb	r1, [r4, #8]
   1f560:	mov	r2, #2
   1f564:	cmp	r0, #0
   1f568:	movweq	r2, #1
   1f56c:	str	r2, [sp]
   1f570:	stmib	sp, {r1, r5}
   1f574:	str	r5, [sp, #12]
   1f578:	asr	r3, r7, #31
   1f57c:	mov	r0, r8
   1f580:	mov	r1, r6
   1f584:	mov	r2, r7
   1f588:	bl	4c50 <dta_ctx_init@plt>
   1f58c:	mov	r6, r0
   1f590:	cmp	r0, #0
   1f594:	bne	1f630 <dta_begin_data+0x10c>
   1f598:	mov	r0, r4
   1f59c:	mov	r1, r8
   1f5a0:	bl	1fa94 <dta_emit_header>
   1f5a4:	mov	r6, r0
   1f5a8:	cmp	r0, #0
   1f5ac:	bne	1f630 <dta_begin_data+0x10c>
   1f5b0:	mov	r0, r4
   1f5b4:	mov	r1, r8
   1f5b8:	bl	1fb48 <dta_emit_map>
   1f5bc:	mov	r6, r0
   1f5c0:	cmp	r0, #0
   1f5c4:	bne	1f630 <dta_begin_data+0x10c>
   1f5c8:	mov	r0, r4
   1f5cc:	mov	r1, r8
   1f5d0:	bl	1fd58 <dta_emit_descriptors>
   1f5d4:	mov	r6, r0
   1f5d8:	cmp	r0, #0
   1f5dc:	bne	1f630 <dta_begin_data+0x10c>
   1f5e0:	mov	r0, r4
   1f5e4:	mov	r1, r8
   1f5e8:	bl	1fdc4 <dta_emit_variable_labels>
   1f5ec:	mov	r6, r0
   1f5f0:	cmp	r0, #0
   1f5f4:	bne	1f630 <dta_begin_data+0x10c>
   1f5f8:	mov	r0, r4
   1f5fc:	mov	r1, r8
   1f600:	bl	1fe68 <dta_emit_characteristics>
   1f604:	mov	r6, r0
   1f608:	cmp	r0, #0
   1f60c:	bne	1f630 <dta_begin_data+0x10c>
   1f610:	ldr	r2, [pc, #64]	; 1f658 <dta_begin_data+0x134>
   1f614:	add	r2, pc, r2
   1f618:	mov	r0, r4
   1f61c:	mov	r1, r8
   1f620:	bl	2009c <dta_write_tag>
   1f624:	mov	r6, r0
   1f628:	cmp	r0, #0
   1f62c:	beq	1f64c <dta_begin_data+0x128>
   1f630:	mov	r0, r8
   1f634:	bl	48f0 <dta_ctx_free@plt>
   1f638:	b	1f640 <dta_begin_data+0x11c>
   1f63c:	mov	r6, #14
   1f640:	mov	r0, r6
   1f644:	sub	sp, fp, #24
   1f648:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f64c:	str	r8, [r4, #300]	; 0x12c
   1f650:	mov	r6, #0
   1f654:	b	1f640 <dta_begin_data+0x11c>
   1f658:	.word	0x000086ae

0001f65c <dta_end_data>:
   1f65c:	push	{r4, r5, fp, lr}
   1f660:	add	fp, sp, #8
   1f664:	mov	r4, r0
   1f668:	ldr	r0, [r0, #308]	; 0x134
   1f66c:	cmp	r0, #0
   1f670:	beq	1f6ac <dta_end_data+0x50>
   1f674:	ldr	r5, [r4, #300]	; 0x12c
   1f678:	ldr	r2, [pc, #96]	; 1f6e0 <dta_end_data+0x84>
   1f67c:	add	r2, pc, r2
   1f680:	mov	r0, r4
   1f684:	mov	r1, r5
   1f688:	bl	2009c <dta_write_tag>
   1f68c:	cmp	r0, #0
   1f690:	bne	1f6a8 <dta_end_data+0x4c>
   1f694:	mov	r0, r4
   1f698:	mov	r1, r5
   1f69c:	bl	21140 <dta_emit_strls>
   1f6a0:	cmp	r0, #0
   1f6a4:	beq	1f6b4 <dta_end_data+0x58>
   1f6a8:	pop	{r4, r5, fp, pc}
   1f6ac:	mov	r0, #14
   1f6b0:	pop	{r4, r5, fp, pc}
   1f6b4:	mov	r0, r4
   1f6b8:	mov	r1, r5
   1f6bc:	bl	21230 <dta_emit_value_labels>
   1f6c0:	cmp	r0, #0
   1f6c4:	popne	{r4, r5, fp, pc}
   1f6c8:	ldr	r2, [pc, #20]	; 1f6e4 <dta_end_data+0x88>
   1f6cc:	add	r2, pc, r2
   1f6d0:	mov	r0, r4
   1f6d4:	mov	r1, r5
   1f6d8:	pop	{r4, r5, fp, lr}
   1f6dc:	b	2009c <dta_write_tag>
   1f6e0:	.word	0x0000864d
   1f6e4:	.word	0x00008740

0001f6e8 <dta_module_ctx_free>:
   1f6e8:	b	48f0 <dta_ctx_free@plt>

0001f6ec <dta_numeric_variable_width>:
   1f6ec:	sub	r0, r0, #1
   1f6f0:	cmp	r0, #4
   1f6f4:	movhi	r0, #0
   1f6f8:	bxhi	lr
   1f6fc:	ldr	r1, [pc, #8]	; 1f70c <dta_numeric_variable_width+0x20>
   1f700:	add	r1, pc, r1
   1f704:	ldr	r0, [r1, r0, lsl #2]
   1f708:	bx	lr
   1f70c:	.word	0x00008790

0001f710 <dta_validate_name>:
   1f710:	push	{r4, r5, r6, sl, fp, lr}
   1f714:	add	fp, sp, #16
   1f718:	mov	r6, r2
   1f71c:	mov	r5, r1
   1f720:	mov	r4, r0
   1f724:	bl	4c8c <strlen@plt>
   1f728:	mov	r1, r0
   1f72c:	mov	r0, #28
   1f730:	cmp	r1, r6
   1f734:	bhi	1f764 <dta_validate_name+0x54>
   1f738:	cmp	r1, #0
   1f73c:	beq	1f760 <dta_validate_name+0x50>
   1f740:	mov	r0, r4
   1f744:	mov	r1, r5
   1f748:	bl	1f768 <dta_validate_name_chars>
   1f74c:	cmp	r0, #0
   1f750:	popne	{r4, r5, r6, sl, fp, pc}
   1f754:	mov	r0, r4
   1f758:	pop	{r4, r5, r6, sl, fp, lr}
   1f75c:	b	1f7ec <dta_validate_name_unreserved>
   1f760:	mov	r0, #38	; 0x26
   1f764:	pop	{r4, r5, r6, sl, fp, pc}

0001f768 <dta_validate_name_chars>:
   1f768:	mov	ip, r0
   1f76c:	b	1f774 <dta_validate_name_chars+0xc>
   1f770:	add	ip, ip, #1
   1f774:	ldrb	r3, [ip]
   1f778:	cmp	r3, #95	; 0x5f
   1f77c:	beq	1f770 <dta_validate_name_chars+0x8>
   1f780:	cmp	r3, #0
   1f784:	beq	1f7b4 <dta_validate_name_chars+0x4c>
   1f788:	sub	r2, r3, #48	; 0x30
   1f78c:	uxtb	r2, r2
   1f790:	cmp	r2, #10
   1f794:	bcc	1f770 <dta_validate_name_chars+0x8>
   1f798:	and	r2, r3, #223	; 0xdf
   1f79c:	sub	r2, r2, #65	; 0x41
   1f7a0:	uxtb	r2, r2
   1f7a4:	cmp	r2, #25
   1f7a8:	movhi	r0, #26
   1f7ac:	bxhi	lr
   1f7b0:	b	1f770 <dta_validate_name_chars+0x8>
   1f7b4:	ldrb	r2, [r0]
   1f7b8:	cmp	r2, #0
   1f7bc:	mov	r3, r2
   1f7c0:	movwne	r3, #25
   1f7c4:	cmp	r1, #0
   1f7c8:	moveq	r3, #25
   1f7cc:	subs	r0, r2, #95	; 0x5f
   1f7d0:	movne	r0, r3
   1f7d4:	and	r1, r2, #223	; 0xdf
   1f7d8:	sub	r1, r1, #65	; 0x41
   1f7dc:	uxtb	r1, r1
   1f7e0:	cmp	r1, #26
   1f7e4:	movwcc	r0, #0
   1f7e8:	bx	lr

0001f7ec <dta_validate_name_unreserved>:
   1f7ec:	push	{r4, r5, fp, lr}
   1f7f0:	add	fp, sp, #8
   1f7f4:	sub	sp, sp, #8
   1f7f8:	mov	r5, r0
   1f7fc:	ldr	r1, [pc, #516]	; 1fa08 <dta_validate_name_unreserved+0x21c>
   1f800:	add	r1, pc, r1
   1f804:	bl	4878 <strcmp@plt>
   1f808:	mov	r4, #27
   1f80c:	cmp	r0, #0
   1f810:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f814:	ldr	r1, [pc, #496]	; 1fa0c <dta_validate_name_unreserved+0x220>
   1f818:	add	r1, pc, r1
   1f81c:	mov	r0, r5
   1f820:	bl	4878 <strcmp@plt>
   1f824:	cmp	r0, #0
   1f828:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f82c:	ldr	r1, [pc, #476]	; 1fa10 <dta_validate_name_unreserved+0x224>
   1f830:	add	r1, pc, r1
   1f834:	mov	r0, r5
   1f838:	bl	4878 <strcmp@plt>
   1f83c:	cmp	r0, #0
   1f840:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f844:	ldr	r1, [pc, #456]	; 1fa14 <dta_validate_name_unreserved+0x228>
   1f848:	add	r1, pc, r1
   1f84c:	mov	r0, r5
   1f850:	bl	4878 <strcmp@plt>
   1f854:	cmp	r0, #0
   1f858:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f85c:	ldr	r1, [pc, #436]	; 1fa18 <dta_validate_name_unreserved+0x22c>
   1f860:	add	r1, pc, r1
   1f864:	mov	r0, r5
   1f868:	bl	4878 <strcmp@plt>
   1f86c:	cmp	r0, #0
   1f870:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f874:	ldr	r1, [pc, #416]	; 1fa1c <dta_validate_name_unreserved+0x230>
   1f878:	add	r1, pc, r1
   1f87c:	mov	r0, r5
   1f880:	bl	4878 <strcmp@plt>
   1f884:	cmp	r0, #0
   1f888:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f88c:	ldr	r1, [pc, #396]	; 1fa20 <dta_validate_name_unreserved+0x234>
   1f890:	add	r1, pc, r1
   1f894:	mov	r0, r5
   1f898:	bl	4878 <strcmp@plt>
   1f89c:	cmp	r0, #0
   1f8a0:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f8a4:	ldr	r1, [pc, #376]	; 1fa24 <dta_validate_name_unreserved+0x238>
   1f8a8:	add	r1, pc, r1
   1f8ac:	mov	r0, r5
   1f8b0:	bl	4878 <strcmp@plt>
   1f8b4:	cmp	r0, #0
   1f8b8:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f8bc:	ldr	r1, [pc, #356]	; 1fa28 <dta_validate_name_unreserved+0x23c>
   1f8c0:	add	r1, pc, r1
   1f8c4:	mov	r0, r5
   1f8c8:	bl	4878 <strcmp@plt>
   1f8cc:	cmp	r0, #0
   1f8d0:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f8d4:	ldr	r1, [pc, #336]	; 1fa2c <dta_validate_name_unreserved+0x240>
   1f8d8:	add	r1, pc, r1
   1f8dc:	mov	r0, r5
   1f8e0:	bl	4878 <strcmp@plt>
   1f8e4:	cmp	r0, #0
   1f8e8:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f8ec:	ldr	r1, [pc, #316]	; 1fa30 <dta_validate_name_unreserved+0x244>
   1f8f0:	add	r1, pc, r1
   1f8f4:	mov	r0, r5
   1f8f8:	bl	4878 <strcmp@plt>
   1f8fc:	cmp	r0, #0
   1f900:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f904:	ldr	r1, [pc, #296]	; 1fa34 <dta_validate_name_unreserved+0x248>
   1f908:	add	r1, pc, r1
   1f90c:	mov	r0, r5
   1f910:	bl	4878 <strcmp@plt>
   1f914:	cmp	r0, #0
   1f918:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f91c:	ldr	r1, [pc, #276]	; 1fa38 <dta_validate_name_unreserved+0x24c>
   1f920:	add	r1, pc, r1
   1f924:	mov	r0, r5
   1f928:	bl	4878 <strcmp@plt>
   1f92c:	cmp	r0, #0
   1f930:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f934:	ldr	r1, [pc, #256]	; 1fa3c <dta_validate_name_unreserved+0x250>
   1f938:	add	r1, pc, r1
   1f93c:	mov	r0, r5
   1f940:	bl	4878 <strcmp@plt>
   1f944:	cmp	r0, #0
   1f948:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f94c:	ldr	r1, [pc, #236]	; 1fa40 <dta_validate_name_unreserved+0x254>
   1f950:	add	r1, pc, r1
   1f954:	mov	r0, r5
   1f958:	bl	4878 <strcmp@plt>
   1f95c:	cmp	r0, #0
   1f960:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f964:	ldr	r1, [pc, #216]	; 1fa44 <dta_validate_name_unreserved+0x258>
   1f968:	add	r1, pc, r1
   1f96c:	mov	r0, r5
   1f970:	bl	4878 <strcmp@plt>
   1f974:	cmp	r0, #0
   1f978:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f97c:	ldr	r1, [pc, #196]	; 1fa48 <dta_validate_name_unreserved+0x25c>
   1f980:	add	r1, pc, r1
   1f984:	mov	r0, r5
   1f988:	bl	4878 <strcmp@plt>
   1f98c:	cmp	r0, #0
   1f990:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f994:	ldr	r1, [pc, #176]	; 1fa4c <dta_validate_name_unreserved+0x260>
   1f998:	add	r1, pc, r1
   1f99c:	mov	r0, r5
   1f9a0:	bl	4878 <strcmp@plt>
   1f9a4:	cmp	r0, #0
   1f9a8:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f9ac:	ldr	r1, [pc, #156]	; 1fa50 <dta_validate_name_unreserved+0x264>
   1f9b0:	add	r1, pc, r1
   1f9b4:	mov	r0, r5
   1f9b8:	bl	4878 <strcmp@plt>
   1f9bc:	cmp	r0, #0
   1f9c0:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f9c4:	ldr	r1, [pc, #136]	; 1fa54 <dta_validate_name_unreserved+0x268>
   1f9c8:	add	r1, pc, r1
   1f9cc:	mov	r0, r5
   1f9d0:	bl	4878 <strcmp@plt>
   1f9d4:	cmp	r0, #0
   1f9d8:	beq	1f9fc <dta_validate_name_unreserved+0x210>
   1f9dc:	ldr	r1, [pc, #116]	; 1fa58 <dta_validate_name_unreserved+0x26c>
   1f9e0:	add	r1, pc, r1
   1f9e4:	add	r2, sp, #4
   1f9e8:	mov	r0, r5
   1f9ec:	bl	4d10 <__isoc99_sscanf@plt>
   1f9f0:	mov	r4, #0
   1f9f4:	cmp	r0, #1
   1f9f8:	movweq	r4, #27
   1f9fc:	mov	r0, r4
   1fa00:	sub	sp, fp, #8
   1fa04:	pop	{r4, r5, fp, pc}
   1fa08:	.word	0x00008578
   1fa0c:	.word	0x00008565
   1fa10:	.word	0x00008550
   1fa14:	.word	0x0000853d
   1fa18:	.word	0x0000852b
   1fa1c:	.word	0x00008519
   1fa20:	.word	0x00008508
   1fa24:	.word	0x000084f6
   1fa28:	.word	0x000084e1
   1fa2c:	.word	0x000084cc
   1fa30:	.word	0x000084b8
   1fa34:	.word	0x000084a5
   1fa38:	.word	0x00008490
   1fa3c:	.word	0x0000847b
   1fa40:	.word	0x00008467
   1fa44:	.word	0x00008455
   1fa48:	.word	0x00008441
   1fa4c:	.word	0x0000842f
   1fa50:	.word	0x0000841c
   1fa54:	.word	0x0000840a
   1fa58:	.word	0x000083f7

0001fa5c <dta_write_raw_int8>:
   1fa5c:	strb	r1, [r0]
   1fa60:	bx	lr

0001fa64 <dta_write_raw_int16>:
   1fa64:	strh	r1, [r0]
   1fa68:	bx	lr

0001fa6c <dta_write_raw_int32>:
   1fa6c:	str	r1, [r0]
   1fa70:	bx	lr

0001fa74 <dta_write_raw_int64>:
   1fa74:	str	r3, [r0, #4]
   1fa78:	str	r2, [r0]
   1fa7c:	bx	lr

0001fa80 <dta_write_raw_float>:
   1fa80:	vmov	r1, s0
   1fa84:	str	r1, [r0]
   1fa88:	bx	lr

0001fa8c <dta_write_raw_double>:
   1fa8c:	vst1.8	{d0}, [r0]
   1fa90:	bx	lr

0001fa94 <dta_emit_header>:
   1fa94:	push	{r4, r5, fp, lr}
   1fa98:	add	fp, sp, #8
   1fa9c:	sub	sp, sp, #16
   1faa0:	mov	r4, r1
   1faa4:	mov	r5, r0
   1faa8:	ldrb	r0, [r1, #192]	; 0xc0
   1faac:	tst	r0, #4
   1fab0:	bne	1fb34 <dta_emit_header+0xa0>
   1fab4:	ldr	r0, [r5, #8]
   1fab8:	strb	r0, [sp, #4]
   1fabc:	bl	492c <machine_is_little_endian@plt>
   1fac0:	mov	r1, #1
   1fac4:	strh	r1, [sp, #6]
   1fac8:	mov	r1, #2
   1facc:	cmp	r0, #0
   1fad0:	movweq	r1, #1
   1fad4:	strb	r1, [sp, #5]
   1fad8:	ldr	r0, [r5, #28]
   1fadc:	strh	r0, [sp, #8]
   1fae0:	ldr	r1, [r5, #80]	; 0x50
   1fae4:	str	r1, [sp, #10]
   1fae8:	cmp	r0, #32768	; 0x8000
   1faec:	bge	1fb28 <dta_emit_header+0x94>
   1faf0:	add	r1, sp, #4
   1faf4:	mov	r0, r5
   1faf8:	mov	r2, #10
   1fafc:	bl	4ef0 <readstat_write_bytes@plt>
   1fb00:	cmp	r0, #0
   1fb04:	bne	1fb28 <dta_emit_header+0x94>
   1fb08:	mov	r0, r5
   1fb0c:	mov	r1, r4
   1fb10:	bl	202b8 <dta_emit_header_data_label>
   1fb14:	cmp	r0, #0
   1fb18:	bne	1fb28 <dta_emit_header+0x94>
   1fb1c:	mov	r0, r5
   1fb20:	mov	r1, r4
   1fb24:	bl	203e0 <dta_emit_header_time_stamp>
   1fb28:	mov	r0, #0
   1fb2c:	sub	sp, fp, #8
   1fb30:	pop	{r4, r5, fp, pc}
   1fb34:	mov	r0, r5
   1fb38:	mov	r1, r4
   1fb3c:	sub	sp, fp, #8
   1fb40:	pop	{r4, r5, fp, lr}
   1fb44:	b	200b4 <dta_emit_xmlish_header>

0001fb48 <dta_emit_map>:
   1fb48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fb4c:	add	fp, sp, #28
   1fb50:	sub	sp, sp, #164	; 0xa4
   1fb54:	mov	r4, r1
   1fb58:	mov	sl, r0
   1fb5c:	ldrb	r1, [r1, #192]	; 0xc0
   1fb60:	mov	r0, #0
   1fb64:	tst	r1, #4
   1fb68:	beq	1fd44 <dta_emit_map+0x1fc>
   1fb6c:	add	r0, sp, #48	; 0x30
   1fb70:	add	r1, r0, #8
   1fb74:	add	r8, r0, #16
   1fb78:	add	r9, r0, #24
   1fb7c:	add	r7, r0, #32
   1fb80:	add	r2, r0, #40	; 0x28
   1fb84:	str	r2, [sp, #12]
   1fb88:	add	r2, r0, #48	; 0x30
   1fb8c:	str	r2, [sp, #16]
   1fb90:	add	r2, r0, #56	; 0x38
   1fb94:	str	r2, [sp, #20]
   1fb98:	add	r2, r0, #64	; 0x40
   1fb9c:	str	r2, [sp, #24]
   1fba0:	add	r2, r0, #72	; 0x48
   1fba4:	str	r2, [sp, #28]
   1fba8:	add	r2, r0, #80	; 0x50
   1fbac:	str	r2, [sp, #32]
   1fbb0:	add	r2, r0, #88	; 0x58
   1fbb4:	str	r2, [sp, #36]	; 0x24
   1fbb8:	add	r2, r0, #96	; 0x60
   1fbbc:	str	r2, [sp, #40]	; 0x28
   1fbc0:	add	r0, r0, #104	; 0x68
   1fbc4:	str	r0, [sp, #44]	; 0x2c
   1fbc8:	mov	r5, #0
   1fbcc:	str	r5, [sp, #52]	; 0x34
   1fbd0:	str	r5, [sp, #48]	; 0x30
   1fbd4:	ldr	r6, [sl, #4]
   1fbd8:	str	r6, [r1]
   1fbdc:	str	r5, [r1, #4]
   1fbe0:	mov	r0, r4
   1fbe4:	bl	205d4 <dta_measure_map>
   1fbe8:	adds	r6, r0, r6
   1fbec:	adc	r5, r5, #0
   1fbf0:	str	r6, [r8]
   1fbf4:	str	r5, [r8, #4]
   1fbf8:	mov	r0, r4
   1fbfc:	bl	20614 <dta_measure_typlist>
   1fc00:	adds	r6, r6, r0
   1fc04:	adc	r5, r5, #0
   1fc08:	str	r6, [r9]
   1fc0c:	str	r5, [r9, #4]
   1fc10:	mov	r0, r4
   1fc14:	bl	20658 <dta_measure_varlist>
   1fc18:	adds	r6, r6, r0
   1fc1c:	adc	r5, r5, #0
   1fc20:	str	r6, [r7]
   1fc24:	str	r5, [r7, #4]
   1fc28:	mov	r0, r4
   1fc2c:	bl	20698 <dta_measure_srtlist>
   1fc30:	adds	r6, r6, r0
   1fc34:	adc	r7, r5, #0
   1fc38:	ldr	r0, [sp, #12]
   1fc3c:	strd	r6, [r0]
   1fc40:	mov	r0, r4
   1fc44:	bl	206d8 <dta_measure_fmtlist>
   1fc48:	adds	r6, r6, r0
   1fc4c:	adc	r7, r7, #0
   1fc50:	ldr	r0, [sp, #16]
   1fc54:	strd	r6, [r0]
   1fc58:	mov	r0, r4
   1fc5c:	bl	20718 <dta_measure_lbllist>
   1fc60:	adds	r6, r6, r0
   1fc64:	adc	r7, r7, #0
   1fc68:	ldr	r0, [sp, #20]
   1fc6c:	strd	r6, [r0]
   1fc70:	mov	r0, r4
   1fc74:	bl	20758 <dta_measure_variable_labels>
   1fc78:	adds	r6, r6, r0
   1fc7c:	adc	r7, r7, #0
   1fc80:	ldr	r0, [sp, #24]
   1fc84:	strd	r6, [r0]
   1fc88:	mov	r0, sl
   1fc8c:	mov	r1, r4
   1fc90:	bl	20798 <dta_measure_characteristics>
   1fc94:	adds	r6, r6, r0
   1fc98:	adc	r7, r7, #0
   1fc9c:	ldr	r0, [sp, #28]
   1fca0:	strd	r6, [r0]
   1fca4:	mov	r0, sl
   1fca8:	mov	r1, r4
   1fcac:	bl	2087c <dta_measure_data>
   1fcb0:	adds	r6, r6, r0
   1fcb4:	adc	r7, r7, #0
   1fcb8:	ldr	r0, [sp, #32]
   1fcbc:	strd	r6, [r0]
   1fcc0:	mov	r0, sl
   1fcc4:	mov	r1, r4
   1fcc8:	bl	20954 <dta_measure_strls>
   1fccc:	adds	r6, r6, r0
   1fcd0:	adc	r7, r7, #0
   1fcd4:	ldr	r0, [sp, #36]	; 0x24
   1fcd8:	strd	r6, [r0]
   1fcdc:	mov	r0, sl
   1fce0:	mov	r1, r4
   1fce4:	bl	209e4 <dta_measure_value_labels>
   1fce8:	adds	r6, r6, r0
   1fcec:	adc	r7, r7, #0
   1fcf0:	ldr	r0, [sp, #40]	; 0x28
   1fcf4:	strd	r6, [r0]
   1fcf8:	ldr	r1, [pc, #76]	; 1fd4c <dta_emit_map+0x204>
   1fcfc:	add	r1, pc, r1
   1fd00:	mov	r0, r4
   1fd04:	bl	20af4 <dta_measure_tag>
   1fd08:	adds	r0, r6, r0
   1fd0c:	adc	r1, r7, #0
   1fd10:	ldr	r2, [sp, #44]	; 0x2c
   1fd14:	strd	r0, [r2]
   1fd18:	ldr	r0, [pc, #48]	; 1fd50 <dta_emit_map+0x208>
   1fd1c:	add	r0, pc, r0
   1fd20:	mov	r1, #112	; 0x70
   1fd24:	str	r1, [sp]
   1fd28:	str	r0, [sp, #4]
   1fd2c:	ldr	r2, [pc, #32]	; 1fd54 <dta_emit_map+0x20c>
   1fd30:	add	r2, pc, r2
   1fd34:	add	r3, sp, #48	; 0x30
   1fd38:	mov	r0, sl
   1fd3c:	mov	r1, r4
   1fd40:	bl	20580 <dta_write_chunk>
   1fd44:	sub	sp, fp, #28
   1fd48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fd4c:	.word	0x00008110
   1fd50:	.word	0x00007e45
   1fd54:	.word	0x00007e2b

0001fd58 <dta_emit_descriptors>:
   1fd58:	push	{r4, r5, fp, lr}
   1fd5c:	add	fp, sp, #8
   1fd60:	mov	r4, r1
   1fd64:	mov	r5, r0
   1fd68:	bl	20cd0 <dta_emit_typlist>
   1fd6c:	cmp	r0, #0
   1fd70:	bne	1fdb0 <dta_emit_descriptors+0x58>
   1fd74:	mov	r0, r5
   1fd78:	mov	r1, r4
   1fd7c:	bl	20e08 <dta_emit_varlist>
   1fd80:	cmp	r0, #0
   1fd84:	bne	1fdb0 <dta_emit_descriptors+0x58>
   1fd88:	mov	r0, r5
   1fd8c:	mov	r1, r4
   1fd90:	bl	20eac <dta_emit_srtlist>
   1fd94:	cmp	r0, #0
   1fd98:	popne	{r4, r5, fp, pc}
   1fd9c:	mov	r0, r5
   1fda0:	mov	r1, r4
   1fda4:	bl	20f1c <dta_emit_fmtlist>
   1fda8:	cmp	r0, #0
   1fdac:	beq	1fdb4 <dta_emit_descriptors+0x5c>
   1fdb0:	pop	{r4, r5, fp, pc}
   1fdb4:	mov	r0, r5
   1fdb8:	mov	r1, r4
   1fdbc:	pop	{r4, r5, fp, lr}
   1fdc0:	b	21080 <dta_emit_lbllist>

0001fdc4 <dta_emit_variable_labels>:
   1fdc4:	push	{r4, r5, r6, sl, fp, lr}
   1fdc8:	add	fp, sp, #16
   1fdcc:	mov	r4, r1
   1fdd0:	mov	r5, r0
   1fdd4:	ldr	r2, [pc, #132]	; 1fe60 <dta_emit_variable_labels+0x9c>
   1fdd8:	add	r2, pc, r2
   1fddc:	bl	2009c <dta_write_tag>
   1fde0:	cmp	r0, #0
   1fde4:	popne	{r4, r5, r6, sl, fp, pc}
   1fde8:	ldr	r0, [r4, #148]	; 0x94
   1fdec:	cmp	r0, #1
   1fdf0:	blt	1fe2c <dta_emit_variable_labels+0x68>
   1fdf4:	mov	r6, #0
   1fdf8:	mov	r0, r5
   1fdfc:	mov	r1, r6
   1fe00:	bl	4e18 <readstat_get_variable@plt>
   1fe04:	ldr	r1, [r4, #68]	; 0x44
   1fe08:	ldr	r2, [r4, #88]	; 0x58
   1fe0c:	mla	r3, r2, r6, r1
   1fe10:	add	r1, r0, #564	; 0x234
   1fe14:	mov	r0, r3
   1fe18:	bl	4d4c <strncpy@plt>
   1fe1c:	add	r6, r6, #1
   1fe20:	ldr	r0, [r4, #148]	; 0x94
   1fe24:	cmp	r6, r0
   1fe28:	blt	1fdf8 <dta_emit_variable_labels+0x34>
   1fe2c:	ldr	r1, [r4, #68]	; 0x44
   1fe30:	ldr	r2, [r4, #72]	; 0x48
   1fe34:	mov	r0, r5
   1fe38:	bl	4ef0 <readstat_write_bytes@plt>
   1fe3c:	cmp	r0, #0
   1fe40:	beq	1fe48 <dta_emit_variable_labels+0x84>
   1fe44:	pop	{r4, r5, r6, sl, fp, pc}
   1fe48:	ldr	r2, [pc, #20]	; 1fe64 <dta_emit_variable_labels+0xa0>
   1fe4c:	add	r2, pc, r2
   1fe50:	mov	r0, r5
   1fe54:	mov	r1, r4
   1fe58:	pop	{r4, r5, r6, sl, fp, lr}
   1fe5c:	b	2009c <dta_write_tag>
   1fe60:	.word	0x00007e1f
   1fe64:	.word	0x00007dbd

0001fe68 <dta_emit_characteristics>:
   1fe68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fe6c:	add	fp, sp, #28
   1fe70:	sub	sp, sp, #12
   1fe74:	mov	r4, r0
   1fe78:	ldr	r0, [r1, #96]	; 0x60
   1fe7c:	add	r0, r0, #7
   1fe80:	bic	r0, r0, #7
   1fe84:	sub	r6, sp, r0
   1fe88:	mov	sp, r6
   1fe8c:	ldr	r0, [r1, #92]	; 0x5c
   1fe90:	cmp	r0, #0
   1fe94:	beq	1febc <dta_emit_characteristics+0x54>
   1fe98:	mov	r5, r1
   1fe9c:	ldr	r2, [pc, #480]	; 20084 <dta_emit_characteristics+0x21c>
   1fea0:	add	r2, pc, r2
   1fea4:	mov	r0, r4
   1fea8:	bl	2009c <dta_write_tag>
   1feac:	cmp	r0, #0
   1feb0:	beq	1fec8 <dta_emit_characteristics+0x60>
   1feb4:	sub	sp, fp, #28
   1feb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1febc:	mov	r0, #0
   1fec0:	sub	sp, fp, #28
   1fec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fec8:	ldr	r1, [r4, #52]	; 0x34
   1fecc:	ldrb	r0, [r5, #192]	; 0xc0
   1fed0:	ubfx	r0, r0, #2, #1
   1fed4:	cmp	r1, #1
   1fed8:	blt	20048 <dta_emit_characteristics+0x1e0>
   1fedc:	mov	sl, #0
   1fee0:	ldr	r7, [pc, #416]	; 20088 <dta_emit_characteristics+0x220>
   1fee4:	add	r7, pc, r7
   1fee8:	tst	r0, #1
   1feec:	beq	1ff10 <dta_emit_characteristics+0xa8>
   1fef0:	mov	r0, r4
   1fef4:	mov	r1, r5
   1fef8:	ldr	r2, [pc, #396]	; 2008c <dta_emit_characteristics+0x224>
   1fefc:	add	r2, pc, r2
   1ff00:	bl	2009c <dta_write_tag>
   1ff04:	cmp	r0, #0
   1ff08:	beq	1ff30 <dta_emit_characteristics+0xc8>
   1ff0c:	b	1feb4 <dta_emit_characteristics+0x4c>
   1ff10:	mov	r0, #1
   1ff14:	strb	r0, [fp, #-33]	; 0xffffffdf
   1ff18:	mov	r0, r4
   1ff1c:	sub	r1, fp, #33	; 0x21
   1ff20:	mov	r2, #1
   1ff24:	bl	4ef0 <readstat_write_bytes@plt>
   1ff28:	cmp	r0, #0
   1ff2c:	bne	1feb4 <dta_emit_characteristics+0x4c>
   1ff30:	ldr	r0, [r4, #48]	; 0x30
   1ff34:	ldr	r0, [r0, sl, lsl #2]
   1ff38:	bl	4c8c <strlen@plt>
   1ff3c:	mov	r9, r0
   1ff40:	ldr	r0, [r5, #92]	; 0x5c
   1ff44:	cmp	r0, #4
   1ff48:	beq	1ff74 <dta_emit_characteristics+0x10c>
   1ff4c:	cmp	r0, #2
   1ff50:	bne	1ff9c <dta_emit_characteristics+0x134>
   1ff54:	ldr	r0, [r5, #96]	; 0x60
   1ff58:	add	r0, r9, r0, lsl #1
   1ff5c:	add	r0, r0, #1
   1ff60:	strh	r0, [fp, #-36]	; 0xffffffdc
   1ff64:	mov	r0, r4
   1ff68:	sub	r1, fp, #36	; 0x24
   1ff6c:	mov	r2, #2
   1ff70:	b	1ff90 <dta_emit_characteristics+0x128>
   1ff74:	ldr	r0, [r5, #96]	; 0x60
   1ff78:	add	r0, r9, r0, lsl #1
   1ff7c:	add	r0, r0, #1
   1ff80:	str	r0, [fp, #-40]	; 0xffffffd8
   1ff84:	mov	r0, r4
   1ff88:	sub	r1, fp, #40	; 0x28
   1ff8c:	mov	r2, #4
   1ff90:	bl	4ef0 <readstat_write_bytes@plt>
   1ff94:	cmp	r0, #0
   1ff98:	bne	1feb4 <dta_emit_characteristics+0x4c>
   1ff9c:	ldr	r2, [r5, #96]	; 0x60
   1ffa0:	mov	r0, r6
   1ffa4:	mov	r1, r7
   1ffa8:	bl	4d4c <strncpy@plt>
   1ffac:	ldr	r2, [r5, #96]	; 0x60
   1ffb0:	mov	r0, r4
   1ffb4:	mov	r1, r6
   1ffb8:	bl	4ef0 <readstat_write_bytes@plt>
   1ffbc:	cmp	r0, #0
   1ffc0:	bne	1feb4 <dta_emit_characteristics+0x4c>
   1ffc4:	ldr	r1, [r5, #96]	; 0x60
   1ffc8:	add	r8, sl, #1
   1ffcc:	mov	r0, r6
   1ffd0:	ldr	r2, [pc, #184]	; 20090 <dta_emit_characteristics+0x228>
   1ffd4:	add	r2, pc, r2
   1ffd8:	mov	r3, r8
   1ffdc:	bl	4d04 <snprintf@plt>
   1ffe0:	ldr	r2, [r5, #96]	; 0x60
   1ffe4:	mov	r0, r4
   1ffe8:	mov	r1, r6
   1ffec:	bl	4ef0 <readstat_write_bytes@plt>
   1fff0:	cmp	r0, #0
   1fff4:	bne	1feb4 <dta_emit_characteristics+0x4c>
   1fff8:	ldr	r0, [r4, #48]	; 0x30
   1fffc:	ldr	r1, [r0, sl, lsl #2]
   20000:	add	r2, r9, #1
   20004:	mov	r0, r4
   20008:	bl	4ef0 <readstat_write_bytes@plt>
   2000c:	cmp	r0, #0
   20010:	bne	1feb4 <dta_emit_characteristics+0x4c>
   20014:	mov	r0, r4
   20018:	mov	r1, r5
   2001c:	ldr	r2, [pc, #112]	; 20094 <dta_emit_characteristics+0x22c>
   20020:	add	r2, pc, r2
   20024:	bl	2009c <dta_write_tag>
   20028:	cmp	r0, #0
   2002c:	bne	1feb4 <dta_emit_characteristics+0x4c>
   20030:	ldr	r1, [r4, #52]	; 0x34
   20034:	ldrb	r0, [r5, #192]	; 0xc0
   20038:	ubfx	r0, r0, #2, #1
   2003c:	cmp	r8, r1
   20040:	mov	sl, r8
   20044:	blt	1fee8 <dta_emit_characteristics+0x80>
   20048:	cmp	r0, #0
   2004c:	beq	2006c <dta_emit_characteristics+0x204>
   20050:	ldr	r2, [pc, #64]	; 20098 <dta_emit_characteristics+0x230>
   20054:	add	r2, pc, r2
   20058:	mov	r0, r4
   2005c:	mov	r1, r5
   20060:	bl	2009c <dta_write_tag>
   20064:	sub	sp, fp, #28
   20068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2006c:	ldr	r0, [r5, #92]	; 0x5c
   20070:	add	r1, r0, #1
   20074:	mov	r0, r4
   20078:	bl	4a88 <readstat_write_zeros@plt>
   2007c:	sub	sp, fp, #28
   20080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20084:	.word	0x00007db6
   20088:	.word	0x00007d8e
   2008c:	.word	0x00007d71
   20090:	.word	0x00007ca3
   20094:	.word	0x00007c5e
   20098:	.word	0x00007dc5

0002009c <dta_write_tag>:
   2009c:	ldrb	r1, [r1, #192]	; 0xc0
   200a0:	tst	r1, #4
   200a4:	moveq	r0, #0
   200a8:	bxeq	lr
   200ac:	mov	r1, r2
   200b0:	b	4bd8 <readstat_write_string@plt>

000200b4 <dta_emit_xmlish_header>:
   200b4:	push	{r4, r5, r6, sl, fp, lr}
   200b8:	add	fp, sp, #16
   200bc:	sub	sp, sp, #144	; 0x90
   200c0:	mov	r4, r1
   200c4:	mov	r5, r0
   200c8:	ldr	r2, [pc, #432]	; 20280 <dta_emit_xmlish_header+0x1cc>
   200cc:	add	r2, pc, r2
   200d0:	bl	2009c <dta_write_tag>
   200d4:	cmp	r0, #0
   200d8:	bne	20278 <dta_emit_xmlish_header+0x1c4>
   200dc:	ldr	r2, [pc, #416]	; 20284 <dta_emit_xmlish_header+0x1d0>
   200e0:	add	r2, pc, r2
   200e4:	mov	r0, r5
   200e8:	mov	r1, r4
   200ec:	bl	2009c <dta_write_tag>
   200f0:	cmp	r0, #0
   200f4:	bne	20278 <dta_emit_xmlish_header+0x1c4>
   200f8:	ldr	r3, [r5, #8]
   200fc:	add	r6, sp, #16
   20100:	ldr	r2, [pc, #384]	; 20288 <dta_emit_xmlish_header+0x1d4>
   20104:	add	r2, pc, r2
   20108:	mov	r0, r6
   2010c:	mov	r1, #128	; 0x80
   20110:	bl	4d04 <snprintf@plt>
   20114:	mov	r0, r5
   20118:	mov	r1, r6
   2011c:	bl	4bd8 <readstat_write_string@plt>
   20120:	cmp	r0, #0
   20124:	bne	20278 <dta_emit_xmlish_header+0x1c4>
   20128:	bl	492c <machine_is_little_endian@plt>
   2012c:	ldr	r1, [pc, #344]	; 2028c <dta_emit_xmlish_header+0x1d8>
   20130:	add	r1, pc, r1
   20134:	mov	r2, #3
   20138:	str	r2, [sp]
   2013c:	str	r1, [sp, #4]
   20140:	ldr	r1, [pc, #328]	; 20290 <dta_emit_xmlish_header+0x1dc>
   20144:	add	r1, pc, r1
   20148:	ldr	r3, [pc, #324]	; 20294 <dta_emit_xmlish_header+0x1e0>
   2014c:	add	r3, pc, r3
   20150:	cmp	r0, #0
   20154:	moveq	r3, r1
   20158:	ldr	r2, [pc, #312]	; 20298 <dta_emit_xmlish_header+0x1e4>
   2015c:	add	r2, pc, r2
   20160:	mov	r0, r5
   20164:	mov	r1, r4
   20168:	bl	20580 <dta_write_chunk>
   2016c:	cmp	r0, #0
   20170:	bne	20278 <dta_emit_xmlish_header+0x1c4>
   20174:	ldr	r0, [r5, #8]
   20178:	cmp	r0, #119	; 0x77
   2017c:	blt	20198 <dta_emit_xmlish_header+0xe4>
   20180:	ldr	r0, [r5, #28]
   20184:	str	r0, [sp, #8]
   20188:	ldr	r0, [pc, #268]	; 2029c <dta_emit_xmlish_header+0x1e8>
   2018c:	add	r0, pc, r0
   20190:	mov	r1, #4
   20194:	b	201ac <dta_emit_xmlish_header+0xf8>
   20198:	ldr	r0, [r5, #28]
   2019c:	strh	r0, [sp, #8]
   201a0:	ldr	r0, [pc, #248]	; 202a0 <dta_emit_xmlish_header+0x1ec>
   201a4:	add	r0, pc, r0
   201a8:	mov	r1, #2
   201ac:	str	r1, [sp]
   201b0:	str	r0, [sp, #4]
   201b4:	ldr	r2, [pc, #232]	; 202a4 <dta_emit_xmlish_header+0x1f0>
   201b8:	add	r2, pc, r2
   201bc:	add	r3, sp, #8
   201c0:	mov	r0, r5
   201c4:	mov	r1, r4
   201c8:	bl	20580 <dta_write_chunk>
   201cc:	cmp	r0, #0
   201d0:	bne	20278 <dta_emit_xmlish_header+0x1c4>
   201d4:	ldr	r0, [r5, #8]
   201d8:	cmp	r0, #118	; 0x76
   201dc:	blt	20200 <dta_emit_xmlish_header+0x14c>
   201e0:	ldr	r0, [r5, #80]	; 0x50
   201e4:	str	r0, [sp, #8]
   201e8:	asr	r0, r0, #31
   201ec:	str	r0, [sp, #12]
   201f0:	ldr	r0, [pc, #176]	; 202a8 <dta_emit_xmlish_header+0x1f4>
   201f4:	add	r0, pc, r0
   201f8:	mov	r1, #8
   201fc:	b	20214 <dta_emit_xmlish_header+0x160>
   20200:	ldr	r0, [r5, #80]	; 0x50
   20204:	str	r0, [sp, #8]
   20208:	ldr	r0, [pc, #156]	; 202ac <dta_emit_xmlish_header+0x1f8>
   2020c:	add	r0, pc, r0
   20210:	mov	r1, #4
   20214:	str	r1, [sp]
   20218:	str	r0, [sp, #4]
   2021c:	ldr	r2, [pc, #140]	; 202b0 <dta_emit_xmlish_header+0x1fc>
   20220:	add	r2, pc, r2
   20224:	add	r3, sp, #8
   20228:	mov	r0, r5
   2022c:	mov	r1, r4
   20230:	bl	20580 <dta_write_chunk>
   20234:	cmp	r0, #0
   20238:	bne	20278 <dta_emit_xmlish_header+0x1c4>
   2023c:	mov	r0, r5
   20240:	mov	r1, r4
   20244:	bl	202b8 <dta_emit_header_data_label>
   20248:	cmp	r0, #0
   2024c:	bne	20278 <dta_emit_xmlish_header+0x1c4>
   20250:	mov	r0, r5
   20254:	mov	r1, r4
   20258:	bl	203e0 <dta_emit_header_time_stamp>
   2025c:	cmp	r0, #0
   20260:	bne	20278 <dta_emit_xmlish_header+0x1c4>
   20264:	ldr	r2, [pc, #72]	; 202b4 <dta_emit_xmlish_header+0x200>
   20268:	add	r2, pc, r2
   2026c:	mov	r0, r5
   20270:	mov	r1, r4
   20274:	bl	2009c <dta_write_tag>
   20278:	sub	sp, fp, #16
   2027c:	pop	{r4, r5, r6, sl, fp, pc}
   20280:	.word	0x00007a13
   20284:	.word	0x00007a0b
   20288:	.word	0x00007cd9
   2028c:	.word	0x000079da
   20290:	.word	0x000079d3
   20294:	.word	0x000079cf
   20298:	.word	0x000079a2
   2029c:	.word	0x00007997
   202a0:	.word	0x0000797f
   202a4:	.word	0x00007967
   202a8:	.word	0x00007938
   202ac:	.word	0x00007920
   202b0:	.word	0x00007908
   202b4:	.word	0x0000786d

000202b8 <dta_emit_header_data_label>:
   202b8:	push	{r4, r5, r6, r7, fp, lr}
   202bc:	add	fp, sp, #16
   202c0:	sub	sp, sp, #8
   202c4:	mov	r4, r1
   202c8:	mov	r5, r0
   202cc:	ldr	r2, [pc, #260]	; 203d8 <dta_emit_header_data_label+0x120>
   202d0:	add	r2, pc, r2
   202d4:	bl	2009c <dta_write_tag>
   202d8:	mov	r6, r0
   202dc:	cmp	r0, #0
   202e0:	beq	202f0 <dta_emit_header_data_label+0x38>
   202e4:	mov	r0, r6
   202e8:	sub	sp, fp, #16
   202ec:	pop	{r4, r5, r6, r7, fp, pc}
   202f0:	ldr	r0, [r4, #8]
   202f4:	cmp	r0, #0
   202f8:	beq	20328 <dta_emit_header_data_label+0x70>
   202fc:	cmp	r0, #2
   20300:	beq	20368 <dta_emit_header_data_label+0xb0>
   20304:	cmp	r0, #1
   20308:	bne	20390 <dta_emit_header_data_label+0xd8>
   2030c:	add	r0, r5, #88	; 0x58
   20310:	bl	4c8c <strlen@plt>
   20314:	strb	r0, [sp, #7]
   20318:	add	r1, sp, #7
   2031c:	mov	r0, r5
   20320:	mov	r2, #1
   20324:	b	20380 <dta_emit_header_data_label+0xc8>
   20328:	ldr	r6, [r4, #4]
   2032c:	mov	r0, #1
   20330:	mov	r1, r6
   20334:	bl	47d0 <calloc@plt>
   20338:	mov	r7, r0
   2033c:	add	r1, r5, #88	; 0x58
   20340:	mov	r2, r6
   20344:	bl	4d4c <strncpy@plt>
   20348:	ldr	r2, [r4, #4]
   2034c:	mov	r0, r5
   20350:	mov	r1, r7
   20354:	bl	4ef0 <readstat_write_bytes@plt>
   20358:	mov	r6, r0
   2035c:	cmp	r0, #0
   20360:	bne	203c4 <dta_emit_header_data_label+0x10c>
   20364:	b	203ac <dta_emit_header_data_label+0xf4>
   20368:	add	r0, r5, #88	; 0x58
   2036c:	bl	4c8c <strlen@plt>
   20370:	strh	r0, [sp, #4]
   20374:	add	r1, sp, #4
   20378:	mov	r0, r5
   2037c:	mov	r2, #2
   20380:	bl	4ef0 <readstat_write_bytes@plt>
   20384:	mov	r6, r0
   20388:	cmp	r0, #0
   2038c:	bne	202e4 <dta_emit_header_data_label+0x2c>
   20390:	add	r1, r5, #88	; 0x58
   20394:	mov	r0, r5
   20398:	bl	4bd8 <readstat_write_string@plt>
   2039c:	mov	r6, r0
   203a0:	cmp	r0, #0
   203a4:	bne	202e4 <dta_emit_header_data_label+0x2c>
   203a8:	mov	r7, #0
   203ac:	ldr	r2, [pc, #40]	; 203dc <dta_emit_header_data_label+0x124>
   203b0:	add	r2, pc, r2
   203b4:	mov	r0, r5
   203b8:	mov	r1, r4
   203bc:	bl	2009c <dta_write_tag>
   203c0:	mov	r6, r0
   203c4:	cmp	r7, #0
   203c8:	beq	202e4 <dta_emit_header_data_label+0x2c>
   203cc:	mov	r0, r7
   203d0:	bl	4938 <free@plt>
   203d4:	b	202e4 <dta_emit_header_data_label+0x2c>
   203d8:	.word	0x00007861
   203dc:	.word	0x00007789

000203e0 <dta_emit_header_time_stamp>:
   203e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   203e4:	add	fp, sp, #24
   203e8:	sub	sp, sp, #80	; 0x50
   203ec:	mov	r8, r0
   203f0:	ldr	r0, [r1, #16]
   203f4:	cmp	r0, #0
   203f8:	beq	204cc <dta_emit_header_time_stamp+0xec>
   203fc:	mov	r6, r1
   20400:	ldr	r0, [r8, #20]
   20404:	str	r0, [fp, #-28]	; 0xffffffe4
   20408:	sub	r0, fp, #28
   2040c:	bl	4be4 <localtime@plt>
   20410:	mov	r5, r0
   20414:	ldr	r7, [r6, #16]
   20418:	mov	r0, #1
   2041c:	mov	r1, r7
   20420:	bl	47d0 <calloc@plt>
   20424:	mov	r9, r0
   20428:	ldr	r1, [pc, #320]	; 20570 <dta_emit_header_time_stamp+0x190>
   2042c:	add	r1, pc, r1
   20430:	add	r0, r1, #16
   20434:	mov	r2, #32
   20438:	vld1.64	{d16-d17}, [r1], r2
   2043c:	vld1.64	{d18-d19}, [r0]
   20440:	add	r0, sp, #24
   20444:	add	r3, r0, #16
   20448:	vld1.64	{d20-d21}, [r1]
   2044c:	vst1.64	{d18-d19}, [r3]
   20450:	mov	r1, r0
   20454:	vst1.64	{d16-d17}, [r1], r2
   20458:	vst1.64	{d20-d21}, [r1]
   2045c:	cmp	r5, #0
   20460:	beq	204d4 <dta_emit_header_time_stamp+0xf4>
   20464:	cmp	r9, #0
   20468:	beq	204dc <dta_emit_header_time_stamp+0xfc>
   2046c:	ldr	ip, [r5, #4]
   20470:	add	r5, r5, #8
   20474:	ldm	r5, {r2, r3, r4, r5}
   20478:	movw	r1, #1900	; 0x76c
   2047c:	add	r1, r5, r1
   20480:	add	r0, r0, r4, lsl #2
   20484:	stm	sp, {r0, r1, r2, ip}
   20488:	ldr	r2, [pc, #228]	; 20574 <dta_emit_header_time_stamp+0x194>
   2048c:	add	r2, pc, r2
   20490:	mov	r0, r9
   20494:	mov	r1, r7
   20498:	bl	4d04 <snprintf@plt>
   2049c:	strb	r0, [sp, #23]
   204a0:	tst	r0, #255	; 0xff
   204a4:	beq	204e4 <dta_emit_header_time_stamp+0x104>
   204a8:	ldrb	r0, [r6, #192]	; 0xc0
   204ac:	tst	r0, #4
   204b0:	bne	204ec <dta_emit_header_time_stamp+0x10c>
   204b4:	ldr	r2, [r6, #16]
   204b8:	mov	r0, r8
   204bc:	mov	r1, r9
   204c0:	bl	4ef0 <readstat_write_bytes@plt>
   204c4:	mov	r7, r0
   204c8:	b	20544 <dta_emit_header_time_stamp+0x164>
   204cc:	mov	r7, #0
   204d0:	b	2054c <dta_emit_header_time_stamp+0x16c>
   204d4:	mov	r7, #39	; 0x27
   204d8:	b	20544 <dta_emit_header_time_stamp+0x164>
   204dc:	mov	r7, #3
   204e0:	b	20544 <dta_emit_header_time_stamp+0x164>
   204e4:	mov	r7, #13
   204e8:	b	20544 <dta_emit_header_time_stamp+0x164>
   204ec:	ldr	r2, [pc, #132]	; 20578 <dta_emit_header_time_stamp+0x198>
   204f0:	add	r2, pc, r2
   204f4:	mov	r0, r8
   204f8:	mov	r1, r6
   204fc:	bl	2009c <dta_write_tag>
   20500:	mov	r7, r0
   20504:	cmp	r0, #0
   20508:	bne	20544 <dta_emit_header_time_stamp+0x164>
   2050c:	add	r1, sp, #23
   20510:	mov	r0, r8
   20514:	mov	r2, #1
   20518:	bl	4ef0 <readstat_write_bytes@plt>
   2051c:	mov	r7, r0
   20520:	cmp	r0, #0
   20524:	bne	20544 <dta_emit_header_time_stamp+0x164>
   20528:	ldrb	r2, [sp, #23]
   2052c:	mov	r0, r8
   20530:	mov	r1, r9
   20534:	bl	4ef0 <readstat_write_bytes@plt>
   20538:	mov	r7, r0
   2053c:	cmp	r0, #0
   20540:	beq	20558 <dta_emit_header_time_stamp+0x178>
   20544:	mov	r0, r9
   20548:	bl	4938 <free@plt>
   2054c:	mov	r0, r7
   20550:	sub	sp, fp, #24
   20554:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20558:	ldr	r2, [pc, #28]	; 2057c <dta_emit_header_time_stamp+0x19c>
   2055c:	add	r2, pc, r2
   20560:	mov	r0, r8
   20564:	mov	r1, r6
   20568:	bl	2009c <dta_write_tag>
   2056c:	b	204c4 <dta_emit_header_time_stamp+0xe4>
   20570:	.word	0x00007a34
   20574:	.word	0x00007968
   20578:	.word	0x00007652
   2057c:	.word	0x000075f2

00020580 <dta_write_chunk>:
   20580:	push	{r4, r5, r6, r7, fp, lr}
   20584:	add	fp, sp, #16
   20588:	mov	r6, r3
   2058c:	mov	r4, r1
   20590:	mov	r5, r0
   20594:	bl	2009c <dta_write_tag>
   20598:	cmp	r0, #0
   2059c:	popne	{r4, r5, r6, r7, fp, pc}
   205a0:	ldr	r7, [fp, #12]
   205a4:	ldr	r2, [fp, #8]
   205a8:	mov	r0, r5
   205ac:	mov	r1, r6
   205b0:	bl	4ef0 <readstat_write_bytes@plt>
   205b4:	cmp	r0, #0
   205b8:	beq	205c0 <dta_write_chunk+0x40>
   205bc:	pop	{r4, r5, r6, r7, fp, pc}
   205c0:	mov	r0, r5
   205c4:	mov	r1, r4
   205c8:	mov	r2, r7
   205cc:	pop	{r4, r5, r6, r7, fp, lr}
   205d0:	b	2009c <dta_write_tag>

000205d4 <dta_measure_map>:
   205d4:	push	{r4, r5, fp, lr}
   205d8:	add	fp, sp, #8
   205dc:	mov	r4, r0
   205e0:	ldr	r1, [pc, #36]	; 2060c <dta_measure_map+0x38>
   205e4:	add	r1, pc, r1
   205e8:	bl	20af4 <dta_measure_tag>
   205ec:	mov	r5, r0
   205f0:	ldr	r1, [pc, #24]	; 20610 <dta_measure_map+0x3c>
   205f4:	add	r1, pc, r1
   205f8:	mov	r0, r4
   205fc:	bl	20af4 <dta_measure_tag>
   20600:	add	r0, r5, r0
   20604:	add	r0, r0, #112	; 0x70
   20608:	pop	{r4, r5, fp, pc}
   2060c:	.word	0x00007577
   20610:	.word	0x0000756d

00020614 <dta_measure_typlist>:
   20614:	push	{r4, r5, fp, lr}
   20618:	add	fp, sp, #8
   2061c:	mov	r4, r0
   20620:	ldr	r1, [pc, #40]	; 20650 <dta_measure_typlist+0x3c>
   20624:	add	r1, pc, r1
   20628:	bl	20af4 <dta_measure_tag>
   2062c:	ldr	r1, [r4, #24]
   20630:	ldr	r2, [r4, #148]	; 0x94
   20634:	mla	r5, r2, r1, r0
   20638:	ldr	r1, [pc, #20]	; 20654 <dta_measure_typlist+0x40>
   2063c:	add	r1, pc, r1
   20640:	mov	r0, r4
   20644:	bl	20af4 <dta_measure_tag>
   20648:	add	r0, r5, r0
   2064c:	pop	{r4, r5, fp, pc}
   20650:	.word	0x00007544
   20654:	.word	0x0000753d

00020658 <dta_measure_varlist>:
   20658:	push	{r4, r5, fp, lr}
   2065c:	add	fp, sp, #8
   20660:	mov	r4, r0
   20664:	ldr	r1, [pc, #36]	; 20690 <dta_measure_varlist+0x38>
   20668:	add	r1, pc, r1
   2066c:	bl	20af4 <dta_measure_tag>
   20670:	ldr	r1, [r4, #40]	; 0x28
   20674:	add	r5, r1, r0
   20678:	ldr	r1, [pc, #20]	; 20694 <dta_measure_varlist+0x3c>
   2067c:	add	r1, pc, r1
   20680:	mov	r0, r4
   20684:	bl	20af4 <dta_measure_tag>
   20688:	add	r0, r5, r0
   2068c:	pop	{r4, r5, fp, pc}
   20690:	.word	0x00007523
   20694:	.word	0x0000751a

00020698 <dta_measure_srtlist>:
   20698:	push	{r4, r5, fp, lr}
   2069c:	add	fp, sp, #8
   206a0:	mov	r4, r0
   206a4:	ldr	r1, [pc, #36]	; 206d0 <dta_measure_srtlist+0x38>
   206a8:	add	r1, pc, r1
   206ac:	bl	20af4 <dta_measure_tag>
   206b0:	ldr	r1, [r4, #48]	; 0x30
   206b4:	add	r5, r1, r0
   206b8:	ldr	r1, [pc, #20]	; 206d4 <dta_measure_srtlist+0x3c>
   206bc:	add	r1, pc, r1
   206c0:	mov	r0, r4
   206c4:	bl	20af4 <dta_measure_tag>
   206c8:	add	r0, r5, r0
   206cc:	pop	{r4, r5, fp, pc}
   206d0:	.word	0x000074fa
   206d4:	.word	0x000074f1

000206d8 <dta_measure_fmtlist>:
   206d8:	push	{r4, r5, fp, lr}
   206dc:	add	fp, sp, #8
   206e0:	mov	r4, r0
   206e4:	ldr	r1, [pc, #36]	; 20710 <dta_measure_fmtlist+0x38>
   206e8:	add	r1, pc, r1
   206ec:	bl	20af4 <dta_measure_tag>
   206f0:	ldr	r1, [r4, #56]	; 0x38
   206f4:	add	r5, r1, r0
   206f8:	ldr	r1, [pc, #20]	; 20714 <dta_measure_fmtlist+0x3c>
   206fc:	add	r1, pc, r1
   20700:	mov	r0, r4
   20704:	bl	20af4 <dta_measure_tag>
   20708:	add	r0, r5, r0
   2070c:	pop	{r4, r5, fp, pc}
   20710:	.word	0x000074d1
   20714:	.word	0x000074c7

00020718 <dta_measure_lbllist>:
   20718:	push	{r4, r5, fp, lr}
   2071c:	add	fp, sp, #8
   20720:	mov	r4, r0
   20724:	ldr	r1, [pc, #36]	; 20750 <dta_measure_lbllist+0x38>
   20728:	add	r1, pc, r1
   2072c:	bl	20af4 <dta_measure_tag>
   20730:	ldr	r1, [r4, #64]	; 0x40
   20734:	add	r5, r1, r0
   20738:	ldr	r1, [pc, #20]	; 20754 <dta_measure_lbllist+0x3c>
   2073c:	add	r1, pc, r1
   20740:	mov	r0, r4
   20744:	bl	20af4 <dta_measure_tag>
   20748:	add	r0, r5, r0
   2074c:	pop	{r4, r5, fp, pc}
   20750:	.word	0x000074a6
   20754:	.word	0x000074a6

00020758 <dta_measure_variable_labels>:
   20758:	push	{r4, r5, fp, lr}
   2075c:	add	fp, sp, #8
   20760:	mov	r4, r0
   20764:	ldr	r1, [pc, #36]	; 20790 <dta_measure_variable_labels+0x38>
   20768:	add	r1, pc, r1
   2076c:	bl	20af4 <dta_measure_tag>
   20770:	ldr	r1, [r4, #72]	; 0x48
   20774:	add	r5, r1, r0
   20778:	ldr	r1, [pc, #20]	; 20794 <dta_measure_variable_labels+0x3c>
   2077c:	add	r1, pc, r1
   20780:	mov	r0, r4
   20784:	bl	20af4 <dta_measure_tag>
   20788:	add	r0, r5, r0
   2078c:	pop	{r4, r5, fp, pc}
   20790:	.word	0x0000748f
   20794:	.word	0x0000748d

00020798 <dta_measure_characteristics>:
   20798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2079c:	add	fp, sp, #28
   207a0:	sub	sp, sp, #12
   207a4:	mov	r4, r0
   207a8:	ldr	r0, [r0, #52]	; 0x34
   207ac:	cmp	r0, #1
   207b0:	str	r1, [sp, #4]
   207b4:	blt	20834 <dta_measure_characteristics+0x9c>
   207b8:	mov	r6, r1
   207bc:	ldr	r1, [pc, #168]	; 2086c <dta_measure_characteristics+0xd4>
   207c0:	add	r1, pc, r1
   207c4:	mov	r0, r6
   207c8:	bl	20af4 <dta_measure_tag>
   207cc:	str	r0, [sp, #8]
   207d0:	ldr	r9, [r4, #48]	; 0x30
   207d4:	ldr	r7, [r6, #92]	; 0x5c
   207d8:	ldr	r5, [r6, #96]	; 0x60
   207dc:	ldr	r1, [pc, #140]	; 20870 <dta_measure_characteristics+0xd8>
   207e0:	add	r1, pc, r1
   207e4:	mov	r0, r6
   207e8:	bl	20af4 <dta_measure_tag>
   207ec:	mov	r6, r0
   207f0:	lsl	r8, r5, #1
   207f4:	ldr	r4, [r4, #52]	; 0x34
   207f8:	mov	r5, #0
   207fc:	mov	sl, #0
   20800:	ldr	r0, [r9, sl, lsl #2]
   20804:	bl	4c8c <strlen@plt>
   20808:	ldr	r1, [sp, #8]
   2080c:	add	r1, r5, r1
   20810:	add	r1, r1, r7
   20814:	add	r1, r1, r8
   20818:	add	r0, r1, r0
   2081c:	add	r0, r0, r6
   20820:	add	r5, r0, #1
   20824:	add	sl, sl, #1
   20828:	cmp	sl, r4
   2082c:	blt	20800 <dta_measure_characteristics+0x68>
   20830:	b	20838 <dta_measure_characteristics+0xa0>
   20834:	mov	r5, #0
   20838:	ldr	r1, [pc, #52]	; 20874 <dta_measure_characteristics+0xdc>
   2083c:	add	r1, pc, r1
   20840:	ldr	r6, [sp, #4]
   20844:	mov	r0, r6
   20848:	bl	20af4 <dta_measure_tag>
   2084c:	add	r4, r0, r5
   20850:	ldr	r1, [pc, #32]	; 20878 <dta_measure_characteristics+0xe0>
   20854:	add	r1, pc, r1
   20858:	mov	r0, r6
   2085c:	bl	20af4 <dta_measure_tag>
   20860:	add	r0, r4, r0
   20864:	sub	sp, fp, #28
   20868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2086c:	.word	0x000074ad
   20870:	.word	0x0000749e
   20874:	.word	0x0000741a
   20878:	.word	0x000075c5

0002087c <dta_measure_data>:
   2087c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   20880:	add	fp, sp, #24
   20884:	sub	sp, sp, #8
   20888:	mov	r4, r1
   2088c:	mov	r5, r0
   20890:	ldr	r0, [r1, #148]	; 0x94
   20894:	cmp	r0, #1
   20898:	blt	20910 <dta_measure_data+0x94>
   2089c:	mov	r7, #0
   208a0:	add	r8, sp, #2
   208a4:	add	r9, sp, #4
   208a8:	mov	r6, #0
   208ac:	b	208c0 <dta_measure_data+0x44>
   208b0:	add	r6, r6, #1
   208b4:	ldr	r0, [r4, #148]	; 0x94
   208b8:	cmp	r6, r0
   208bc:	bge	20910 <dta_measure_data+0x94>
   208c0:	str	r7, [sp, #4]
   208c4:	mov	r0, r5
   208c8:	mov	r1, r6
   208cc:	bl	4e18 <readstat_get_variable@plt>
   208d0:	strh	r7, [sp, #2]
   208d4:	ldrb	r1, [r4, #20]
   208d8:	mov	r2, r8
   208dc:	bl	20b0c <dta_typecode_for_variable>
   208e0:	ldrh	r0, [sp, #2]
   208e4:	mov	r1, r4
   208e8:	mov	r2, r9
   208ec:	mov	r3, #0
   208f0:	bl	4c68 <dta_type_info@plt>
   208f4:	cmp	r0, #0
   208f8:	bne	208b0 <dta_measure_data+0x34>
   208fc:	ldr	r0, [r4, #160]	; 0xa0
   20900:	ldr	r1, [sp, #4]
   20904:	add	r0, r0, r1
   20908:	str	r0, [r4, #160]	; 0xa0
   2090c:	b	208b0 <dta_measure_data+0x34>
   20910:	ldr	r1, [pc, #52]	; 2094c <dta_measure_data+0xd0>
   20914:	add	r1, pc, r1
   20918:	mov	r0, r4
   2091c:	bl	20af4 <dta_measure_tag>
   20920:	mov	r5, r0
   20924:	ldr	r6, [r4, #152]	; 0x98
   20928:	ldr	r7, [r4, #160]	; 0xa0
   2092c:	ldr	r1, [pc, #28]	; 20950 <dta_measure_data+0xd4>
   20930:	add	r1, pc, r1
   20934:	mov	r0, r4
   20938:	bl	20af4 <dta_measure_tag>
   2093c:	add	r0, r0, r5
   20940:	mla	r0, r7, r6, r0
   20944:	sub	sp, fp, #24
   20948:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2094c:	.word	0x000073ae
   20950:	.word	0x00007399

00020954 <dta_measure_strls>:
   20954:	push	{r4, r5, r6, sl, fp, lr}
   20958:	add	fp, sp, #16
   2095c:	mov	r6, r1
   20960:	ldr	r1, [r0, #64]	; 0x40
   20964:	cmp	r1, #1
   20968:	blt	209ac <dta_measure_strls+0x58>
   2096c:	ldr	r2, [r6, #116]	; 0x74
   20970:	mov	r1, #16
   20974:	cmp	r2, #4
   20978:	movwhi	r1, #20
   2097c:	ldr	r2, [r0, #60]	; 0x3c
   20980:	ldr	r0, [r0, #64]	; 0x40
   20984:	mov	r3, #0
   20988:	mov	r5, #0
   2098c:	ldr	r4, [r2, r3, lsl #2]
   20990:	ldr	r4, [r4, #16]
   20994:	add	r5, r4, r5
   20998:	add	r5, r5, r1
   2099c:	add	r3, r3, #1
   209a0:	cmp	r3, r0
   209a4:	blt	2098c <dta_measure_strls+0x38>
   209a8:	b	209b0 <dta_measure_strls+0x5c>
   209ac:	mov	r5, #0
   209b0:	ldr	r1, [pc, #36]	; 209dc <dta_measure_strls+0x88>
   209b4:	add	r1, pc, r1
   209b8:	mov	r0, r6
   209bc:	bl	20af4 <dta_measure_tag>
   209c0:	add	r4, r0, r5
   209c4:	ldr	r1, [pc, #20]	; 209e0 <dta_measure_strls+0x8c>
   209c8:	add	r1, pc, r1
   209cc:	mov	r0, r6
   209d0:	bl	20af4 <dta_measure_tag>
   209d4:	add	r0, r4, r0
   209d8:	pop	{r4, r5, r6, sl, fp, pc}
   209dc:	.word	0x000072fe
   209e0:	.word	0x00007464

000209e4 <dta_measure_value_labels>:
   209e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   209e8:	add	fp, sp, #28
   209ec:	sub	sp, sp, #4
   209f0:	mov	r4, r1
   209f4:	mov	r5, r0
   209f8:	ldr	r1, [pc, #228]	; 20ae4 <dta_measure_value_labels+0x100>
   209fc:	add	r1, pc, r1
   20a00:	mov	r0, r4
   20a04:	bl	20af4 <dta_measure_tag>
   20a08:	mov	r6, r0
   20a0c:	ldr	r0, [r5, #40]	; 0x28
   20a10:	cmp	r0, #1
   20a14:	blt	20ac8 <dta_measure_value_labels+0xe4>
   20a18:	mov	r7, #0
   20a1c:	str	r5, [sp]
   20a20:	b	20a78 <dta_measure_value_labels+0x94>
   20a24:	mov	r0, r4
   20a28:	ldr	r1, [pc, #184]	; 20ae8 <dta_measure_value_labels+0x104>
   20a2c:	add	r1, pc, r1
   20a30:	bl	20af4 <dta_measure_tag>
   20a34:	add	r1, r6, r9, lsl #3
   20a38:	add	r1, r1, sl
   20a3c:	add	r0, r1, r0
   20a40:	ldrd	r2, [r4, #104]	; 0x68
   20a44:	add	r0, r0, r2
   20a48:	add	r5, r0, r3
   20a4c:	mov	r0, r4
   20a50:	ldr	r1, [pc, #148]	; 20aec <dta_measure_value_labels+0x108>
   20a54:	add	r1, pc, r1
   20a58:	bl	20af4 <dta_measure_tag>
   20a5c:	add	r0, r5, r0
   20a60:	add	r6, r0, #12
   20a64:	add	r7, r7, #1
   20a68:	ldr	r5, [sp]
   20a6c:	ldr	r0, [r5, #40]	; 0x28
   20a70:	cmp	r7, r0
   20a74:	bge	20ac8 <dta_measure_value_labels+0xe4>
   20a78:	mov	r0, r5
   20a7c:	mov	r1, r7
   20a80:	bl	4ec0 <readstat_get_label_set@plt>
   20a84:	ldr	r9, [r0, #264]	; 0x108
   20a88:	cmp	r9, #1
   20a8c:	mov	sl, #0
   20a90:	blt	20a24 <dta_measure_value_labels+0x40>
   20a94:	mov	r5, r0
   20a98:	mov	sl, #0
   20a9c:	mov	r8, #0
   20aa0:	mov	r0, r5
   20aa4:	mov	r1, r8
   20aa8:	bl	4f68 <readstat_get_value_label@plt>
   20aac:	ldr	r0, [r0, #28]
   20ab0:	add	r0, sl, r0
   20ab4:	add	sl, r0, #1
   20ab8:	add	r8, r8, #1
   20abc:	cmp	r9, r8
   20ac0:	bne	20aa0 <dta_measure_value_labels+0xbc>
   20ac4:	b	20a24 <dta_measure_value_labels+0x40>
   20ac8:	ldr	r1, [pc, #32]	; 20af0 <dta_measure_value_labels+0x10c>
   20acc:	add	r1, pc, r1
   20ad0:	mov	r0, r4
   20ad4:	bl	20af4 <dta_measure_tag>
   20ad8:	add	r0, r0, r6
   20adc:	sub	sp, fp, #28
   20ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20ae4:	.word	0x0000730a
   20ae8:	.word	0x000072e9
   20aec:	.word	0x000072c7
   20af0:	.word	0x00007369

00020af4 <dta_measure_tag>:
   20af4:	ldrb	r0, [r0, #192]	; 0xc0
   20af8:	tst	r0, #4
   20afc:	moveq	r0, #0
   20b00:	bxeq	lr
   20b04:	mov	r0, r1
   20b08:	b	4c8c <strlen@plt>

00020b0c <dta_typecode_for_variable>:
   20b0c:	cmp	r1, #117	; 0x75
   20b10:	beq	20b24 <dta_typecode_for_variable+0x18>
   20b14:	cmp	r1, #111	; 0x6f
   20b18:	bne	20b3c <dta_typecode_for_variable+0x30>
   20b1c:	mov	r1, r2
   20b20:	b	20b44 <dta_111_typecode_for_variable>
   20b24:	push	{fp, lr}
   20b28:	mov	fp, sp
   20b2c:	mov	r1, r2
   20b30:	bl	20bc0 <dta_117_typecode_for_variable>
   20b34:	mov	r0, #0
   20b38:	pop	{fp, pc}
   20b3c:	mov	r1, r2
   20b40:	b	20c4c <dta_old_typecode_for_variable>

00020b44 <dta_111_typecode_for_variable>:
   20b44:	ldr	r3, [r0]
   20b48:	cmp	r3, #6
   20b4c:	mov	r2, #0
   20b50:	bhi	20bac <dta_111_typecode_for_variable+0x68>
   20b54:	mov	ip, #33	; 0x21
   20b58:	add	r2, pc, #4
   20b5c:	ldr	r3, [r2, r3, lsl #2]
   20b60:	add	pc, r2, r3
   20b64:	.word	0x0000001c
   20b68:	.word	0x00000024
   20b6c:	.word	0x0000002c
   20b70:	.word	0x00000034
   20b74:	.word	0x0000003c
   20b78:	.word	0x00000044
   20b7c:	.word	0x00000054
   20b80:	ldr	r2, [r0, #1596]	; 0x63c
   20b84:	b	20bac <dta_111_typecode_for_variable+0x68>
   20b88:	mov	r2, #251	; 0xfb
   20b8c:	b	20bac <dta_111_typecode_for_variable+0x68>
   20b90:	mov	r2, #252	; 0xfc
   20b94:	b	20bac <dta_111_typecode_for_variable+0x68>
   20b98:	mov	r2, #253	; 0xfd
   20b9c:	b	20bac <dta_111_typecode_for_variable+0x68>
   20ba0:	mov	r2, #254	; 0xfe
   20ba4:	b	20bac <dta_111_typecode_for_variable+0x68>
   20ba8:	mov	r2, #255	; 0xff
   20bac:	cmp	r1, #0
   20bb0:	strhne	r2, [r1]
   20bb4:	mov	ip, #0
   20bb8:	mov	r0, ip
   20bbc:	bx	lr

00020bc0 <dta_117_typecode_for_variable>:
   20bc0:	ldr	r2, [r0]
   20bc4:	cmp	r2, #6
   20bc8:	bhi	20bfc <dta_117_typecode_for_variable+0x3c>
   20bcc:	add	r3, pc, #4
   20bd0:	ldr	r2, [r3, r2, lsl #2]
   20bd4:	add	pc, r3, r2
   20bd8:	.word	0x0000001c
   20bdc:	.word	0x0000002c
   20be0:	.word	0x00000038
   20be4:	.word	0x00000044
   20be8:	.word	0x00000050
   20bec:	.word	0x0000005c
   20bf0:	.word	0x00000064
   20bf4:	ldr	r0, [r0, #1596]	; 0x63c
   20bf8:	b	20c40 <dta_117_typecode_for_variable+0x80>
   20bfc:	mov	r0, #0
   20c00:	b	20c40 <dta_117_typecode_for_variable+0x80>
   20c04:	mvn	r0, #9
   20c08:	add	r0, r0, #4
   20c0c:	b	20c40 <dta_117_typecode_for_variable+0x80>
   20c10:	mvn	r0, #9
   20c14:	add	r0, r0, #3
   20c18:	b	20c40 <dta_117_typecode_for_variable+0x80>
   20c1c:	mvn	r0, #9
   20c20:	add	r0, r0, #2
   20c24:	b	20c40 <dta_117_typecode_for_variable+0x80>
   20c28:	mvn	r0, #9
   20c2c:	orr	r0, r0, #1
   20c30:	b	20c40 <dta_117_typecode_for_variable+0x80>
   20c34:	movw	r0, #65526	; 0xfff6
   20c38:	b	20c40 <dta_117_typecode_for_variable+0x80>
   20c3c:	mov	r0, #32768	; 0x8000
   20c40:	cmp	r1, #0
   20c44:	strhne	r0, [r1]
   20c48:	bx	lr

00020c4c <dta_old_typecode_for_variable>:
   20c4c:	ldr	r3, [r0]
   20c50:	cmp	r3, #6
   20c54:	mov	r2, #0
   20c58:	bhi	20cbc <dta_old_typecode_for_variable+0x70>
   20c5c:	mov	ip, #33	; 0x21
   20c60:	add	r2, pc, #4
   20c64:	ldr	r3, [r2, r3, lsl #2]
   20c68:	add	pc, r2, r3
   20c6c:	.word	0x0000001c
   20c70:	.word	0x0000002c
   20c74:	.word	0x00000034
   20c78:	.word	0x0000003c
   20c7c:	.word	0x00000044
   20c80:	.word	0x0000004c
   20c84:	.word	0x0000005c
   20c88:	movw	r2, #1596	; 0x63c
   20c8c:	ldrh	r0, [r0, r2]
   20c90:	add	r2, r0, #127	; 0x7f
   20c94:	b	20cbc <dta_old_typecode_for_variable+0x70>
   20c98:	mov	r2, #98	; 0x62
   20c9c:	b	20cbc <dta_old_typecode_for_variable+0x70>
   20ca0:	mov	r2, #105	; 0x69
   20ca4:	b	20cbc <dta_old_typecode_for_variable+0x70>
   20ca8:	mov	r2, #108	; 0x6c
   20cac:	b	20cbc <dta_old_typecode_for_variable+0x70>
   20cb0:	mov	r2, #102	; 0x66
   20cb4:	b	20cbc <dta_old_typecode_for_variable+0x70>
   20cb8:	mov	r2, #100	; 0x64
   20cbc:	cmp	r1, #0
   20cc0:	strhne	r2, [r1]
   20cc4:	mov	ip, #0
   20cc8:	mov	r0, ip
   20ccc:	bx	lr

00020cd0 <dta_emit_typlist>:
   20cd0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   20cd4:	add	fp, sp, #24
   20cd8:	sub	sp, sp, #8
   20cdc:	mov	r4, r1
   20ce0:	mov	r5, r0
   20ce4:	ldr	r2, [pc, #276]	; 20e00 <dta_emit_typlist+0x130>
   20ce8:	add	r2, pc, r2
   20cec:	bl	2009c <dta_write_tag>
   20cf0:	cmp	r0, #0
   20cf4:	bne	20df8 <dta_emit_typlist+0x128>
   20cf8:	ldr	r0, [r4, #148]	; 0x94
   20cfc:	cmp	r0, #1
   20d00:	blt	20de4 <dta_emit_typlist+0x114>
   20d04:	mov	r8, #0
   20d08:	add	r9, sp, #6
   20d0c:	mov	r6, #0
   20d10:	mov	r7, #0
   20d14:	mov	r0, r5
   20d18:	mov	r1, r7
   20d1c:	bl	4e18 <readstat_get_variable@plt>
   20d20:	strh	r8, [sp, #6]
   20d24:	ldrb	r1, [r4, #20]
   20d28:	mov	r2, r9
   20d2c:	bl	20b0c <dta_typecode_for_variable>
   20d30:	cmp	r0, #0
   20d34:	bne	20df8 <dta_emit_typlist+0x128>
   20d38:	ldr	r0, [r4, #28]
   20d3c:	add	r0, r0, r6
   20d40:	ldrh	r1, [sp, #6]
   20d44:	strh	r1, [r0]
   20d48:	add	r6, r6, #2
   20d4c:	add	r7, r7, #1
   20d50:	ldr	r0, [r4, #148]	; 0x94
   20d54:	cmp	r7, r0
   20d58:	blt	20d14 <dta_emit_typlist+0x44>
   20d5c:	cmp	r0, #1
   20d60:	blt	20de4 <dta_emit_typlist+0x114>
   20d64:	mov	r6, #0
   20d68:	add	r8, sp, #2
   20d6c:	add	r9, sp, #5
   20d70:	mov	r7, #0
   20d74:	b	20db4 <dta_emit_typlist+0xe4>
   20d78:	ldr	r0, [r4, #28]
   20d7c:	add	r0, r0, r6
   20d80:	ldrh	r0, [r0]
   20d84:	strh	r0, [sp, #2]
   20d88:	mov	r0, r5
   20d8c:	mov	r1, r8
   20d90:	mov	r2, #2
   20d94:	bl	4ef0 <readstat_write_bytes@plt>
   20d98:	cmp	r0, #0
   20d9c:	bne	20df8 <dta_emit_typlist+0x128>
   20da0:	add	r6, r6, #2
   20da4:	add	r7, r7, #1
   20da8:	ldr	r0, [r4, #148]	; 0x94
   20dac:	cmp	r7, r0
   20db0:	bge	20de4 <dta_emit_typlist+0x114>
   20db4:	ldr	r0, [r4, #24]
   20db8:	cmp	r0, #2
   20dbc:	beq	20d78 <dta_emit_typlist+0xa8>
   20dc0:	cmp	r0, #1
   20dc4:	bne	20da0 <dta_emit_typlist+0xd0>
   20dc8:	ldr	r0, [r4, #28]
   20dcc:	ldrb	r0, [r0, r6]
   20dd0:	strb	r0, [sp, #5]
   20dd4:	mov	r0, r5
   20dd8:	mov	r1, r9
   20ddc:	mov	r2, #1
   20de0:	b	20d94 <dta_emit_typlist+0xc4>
   20de4:	ldr	r2, [pc, #24]	; 20e04 <dta_emit_typlist+0x134>
   20de8:	add	r2, pc, r2
   20dec:	mov	r0, r5
   20df0:	mov	r1, r4
   20df4:	bl	2009c <dta_write_tag>
   20df8:	sub	sp, fp, #24
   20dfc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20e00:	.word	0x00006e80
   20e04:	.word	0x00006d91

00020e08 <dta_emit_varlist>:
   20e08:	push	{r4, r5, r6, sl, fp, lr}
   20e0c:	add	fp, sp, #16
   20e10:	mov	r4, r1
   20e14:	mov	r5, r0
   20e18:	ldr	r2, [pc, #132]	; 20ea4 <dta_emit_varlist+0x9c>
   20e1c:	add	r2, pc, r2
   20e20:	bl	2009c <dta_write_tag>
   20e24:	cmp	r0, #0
   20e28:	popne	{r4, r5, r6, sl, fp, pc}
   20e2c:	ldr	r0, [r4, #148]	; 0x94
   20e30:	cmp	r0, #1
   20e34:	blt	20e70 <dta_emit_varlist+0x68>
   20e38:	mov	r6, #0
   20e3c:	mov	r0, r5
   20e40:	mov	r1, r6
   20e44:	bl	4e18 <readstat_get_variable@plt>
   20e48:	ldr	r1, [r4, #36]	; 0x24
   20e4c:	ldr	r2, [r4, #76]	; 0x4c
   20e50:	mla	r3, r2, r6, r1
   20e54:	add	r1, r0, #8
   20e58:	mov	r0, r3
   20e5c:	bl	4d4c <strncpy@plt>
   20e60:	add	r6, r6, #1
   20e64:	ldr	r0, [r4, #148]	; 0x94
   20e68:	cmp	r6, r0
   20e6c:	blt	20e3c <dta_emit_varlist+0x34>
   20e70:	ldr	r1, [r4, #36]	; 0x24
   20e74:	ldr	r2, [r4, #40]	; 0x28
   20e78:	mov	r0, r5
   20e7c:	bl	4ef0 <readstat_write_bytes@plt>
   20e80:	cmp	r0, #0
   20e84:	beq	20e8c <dta_emit_varlist+0x84>
   20e88:	pop	{r4, r5, r6, sl, fp, pc}
   20e8c:	ldr	r2, [pc, #20]	; 20ea8 <dta_emit_varlist+0xa0>
   20e90:	add	r2, pc, r2
   20e94:	mov	r0, r5
   20e98:	mov	r1, r4
   20e9c:	pop	{r4, r5, r6, sl, fp, lr}
   20ea0:	b	2009c <dta_write_tag>
   20ea4:	.word	0x00006d6f
   20ea8:	.word	0x00006d06

00020eac <dta_emit_srtlist>:
   20eac:	push	{r4, r5, fp, lr}
   20eb0:	add	fp, sp, #8
   20eb4:	mov	r4, r1
   20eb8:	mov	r5, r0
   20ebc:	ldr	r2, [pc, #80]	; 20f14 <dta_emit_srtlist+0x68>
   20ec0:	add	r2, pc, r2
   20ec4:	bl	2009c <dta_write_tag>
   20ec8:	cmp	r0, #0
   20ecc:	popne	{r4, r5, fp, pc}
   20ed0:	ldr	r0, [r4, #44]	; 0x2c
   20ed4:	ldr	r2, [r4, #48]	; 0x30
   20ed8:	mov	r1, #0
   20edc:	bl	4d28 <memset@plt>
   20ee0:	ldr	r1, [r4, #44]	; 0x2c
   20ee4:	ldr	r2, [r4, #48]	; 0x30
   20ee8:	mov	r0, r5
   20eec:	bl	4ef0 <readstat_write_bytes@plt>
   20ef0:	cmp	r0, #0
   20ef4:	beq	20efc <dta_emit_srtlist+0x50>
   20ef8:	pop	{r4, r5, fp, pc}
   20efc:	ldr	r2, [pc, #20]	; 20f18 <dta_emit_srtlist+0x6c>
   20f00:	add	r2, pc, r2
   20f04:	mov	r0, r5
   20f08:	mov	r1, r4
   20f0c:	pop	{r4, r5, fp, lr}
   20f10:	b	2009c <dta_write_tag>
   20f14:	.word	0x00006ce2
   20f18:	.word	0x00006cad

00020f1c <dta_emit_fmtlist>:
   20f1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20f20:	add	fp, sp, #28
   20f24:	sub	sp, sp, #68	; 0x44
   20f28:	mov	r4, r1
   20f2c:	mov	r9, r0
   20f30:	ldr	r2, [pc, #300]	; 21064 <dta_emit_fmtlist+0x148>
   20f34:	add	r2, pc, r2
   20f38:	bl	2009c <dta_write_tag>
   20f3c:	cmp	r0, #0
   20f40:	bne	21040 <dta_emit_fmtlist+0x124>
   20f44:	ldr	r0, [r4, #148]	; 0x94
   20f48:	cmp	r0, #1
   20f4c:	blt	21028 <dta_emit_fmtlist+0x10c>
   20f50:	mov	r6, #0
   20f54:	ldr	sl, [pc, #268]	; 21068 <dta_emit_fmtlist+0x14c>
   20f58:	add	sl, pc, sl
   20f5c:	add	r8, sp, #4
   20f60:	b	20f84 <dta_emit_fmtlist+0x68>
   20f64:	ldr	r0, [r4, #52]	; 0x34
   20f68:	ldr	r2, [r4, #80]	; 0x50
   20f6c:	mla	r0, r2, r6, r0
   20f70:	bl	4d4c <strncpy@plt>
   20f74:	ldr	r0, [r4, #148]	; 0x94
   20f78:	add	r6, r6, #1
   20f7c:	cmp	r6, r0
   20f80:	bge	21028 <dta_emit_fmtlist+0x10c>
   20f84:	mov	r0, r9
   20f88:	mov	r1, r6
   20f8c:	bl	4e18 <readstat_get_variable@plt>
   20f90:	mov	r7, r0
   20f94:	mov	r1, r0
   20f98:	ldrb	r0, [r1, #308]!	; 0x134
   20f9c:	cmp	r0, #0
   20fa0:	bne	20f64 <dta_emit_fmtlist+0x48>
   20fa4:	ldr	r5, [r7, #2136]	; 0x858
   20fa8:	ldr	r0, [r7]
   20fac:	bl	489c <readstat_type_class@plt>
   20fb0:	cmp	r5, #0
   20fb4:	bne	20fd8 <dta_emit_fmtlist+0xbc>
   20fb8:	ldr	r1, [r7]
   20fbc:	sub	r1, r1, #1
   20fc0:	mov	r5, #9
   20fc4:	cmp	r1, #4
   20fc8:	bhi	20fd8 <dta_emit_fmtlist+0xbc>
   20fcc:	ldr	r2, [pc, #152]	; 2106c <dta_emit_fmtlist+0x150>
   20fd0:	add	r2, pc, r2
   20fd4:	ldr	r5, [r2, r1, lsl #2]
   20fd8:	cmp	r0, #0
   20fdc:	ldr	r1, [pc, #140]	; 21070 <dta_emit_fmtlist+0x154>
   20fe0:	add	r1, pc, r1
   20fe4:	ldr	r0, [pc, #136]	; 21074 <dta_emit_fmtlist+0x158>
   20fe8:	add	r0, pc, r0
   20fec:	moveq	r1, r0
   20ff0:	ldr	r0, [r7, #2132]	; 0x854
   20ff4:	cmp	r0, #1
   20ff8:	mov	r2, sl
   20ffc:	ldr	r0, [pc, #116]	; 21078 <dta_emit_fmtlist+0x15c>
   21000:	add	r0, pc, r0
   21004:	moveq	r2, r0
   21008:	mov	r0, r8
   2100c:	mov	r3, r5
   21010:	bl	4e84 <sprintf@plt>
   21014:	ldr	r0, [r4, #52]	; 0x34
   21018:	ldr	r2, [r4, #80]	; 0x50
   2101c:	mla	r0, r2, r6, r0
   21020:	mov	r1, r8
   21024:	b	20f70 <dta_emit_fmtlist+0x54>
   21028:	ldr	r1, [r4, #52]	; 0x34
   2102c:	ldr	r2, [r4, #56]	; 0x38
   21030:	mov	r0, r9
   21034:	bl	4ef0 <readstat_write_bytes@plt>
   21038:	cmp	r0, #0
   2103c:	beq	21048 <dta_emit_fmtlist+0x12c>
   21040:	sub	sp, fp, #28
   21044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21048:	ldr	r2, [pc, #44]	; 2107c <dta_emit_fmtlist+0x160>
   2104c:	add	r2, pc, r2
   21050:	mov	r0, r9
   21054:	mov	r1, r4
   21058:	sub	sp, fp, #28
   2105c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21060:	b	2009c <dta_write_tag>
   21064:	.word	0x00006c85
   21068:	.word	0x0000532e
   2106c:	.word	0x00006ed4
   21070:	.word	0x00006e65
   21074:	.word	0x00006e69
   21078:	.word	0x00006e4f
   2107c:	.word	0x00006b77

00021080 <dta_emit_lbllist>:
   21080:	push	{r4, r5, r6, sl, fp, lr}
   21084:	add	fp, sp, #16
   21088:	mov	r4, r1
   2108c:	mov	r5, r0
   21090:	ldr	r2, [pc, #160]	; 21138 <dta_emit_lbllist+0xb8>
   21094:	add	r2, pc, r2
   21098:	bl	2009c <dta_write_tag>
   2109c:	cmp	r0, #0
   210a0:	popne	{r4, r5, r6, sl, fp, pc}
   210a4:	ldr	r0, [r4, #148]	; 0x94
   210a8:	cmp	r0, #1
   210ac:	blt	21104 <dta_emit_lbllist+0x84>
   210b0:	mov	r6, #0
   210b4:	b	210d0 <dta_emit_lbllist+0x50>
   210b8:	mov	r1, #0
   210bc:	bl	4d28 <memset@plt>
   210c0:	ldr	r0, [r4, #148]	; 0x94
   210c4:	add	r6, r6, #1
   210c8:	cmp	r6, r0
   210cc:	bge	21104 <dta_emit_lbllist+0x84>
   210d0:	mov	r0, r5
   210d4:	mov	r1, r6
   210d8:	bl	4e18 <readstat_get_variable@plt>
   210dc:	mov	r1, r0
   210e0:	ldr	r0, [r4, #60]	; 0x3c
   210e4:	ldr	r2, [r4, #84]	; 0x54
   210e8:	mla	r0, r2, r6, r0
   210ec:	ldr	r1, [r1, #1588]	; 0x634
   210f0:	cmp	r1, #0
   210f4:	beq	210b8 <dta_emit_lbllist+0x38>
   210f8:	add	r1, r1, #4
   210fc:	bl	4d4c <strncpy@plt>
   21100:	b	210c0 <dta_emit_lbllist+0x40>
   21104:	ldr	r1, [r4, #60]	; 0x3c
   21108:	ldr	r2, [r4, #64]	; 0x40
   2110c:	mov	r0, r5
   21110:	bl	4ef0 <readstat_write_bytes@plt>
   21114:	cmp	r0, #0
   21118:	beq	21120 <dta_emit_lbllist+0xa0>
   2111c:	pop	{r4, r5, r6, sl, fp, pc}
   21120:	ldr	r2, [pc, #20]	; 2113c <dta_emit_lbllist+0xbc>
   21124:	add	r2, pc, r2
   21128:	mov	r0, r5
   2112c:	mov	r1, r4
   21130:	pop	{r4, r5, r6, sl, fp, lr}
   21134:	b	2009c <dta_write_tag>
   21138:	.word	0x00006b3a
   2113c:	.word	0x00006abe

00021140 <dta_emit_strls>:
   21140:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21144:	add	fp, sp, #24
   21148:	mov	r5, r1
   2114c:	mov	r4, r0
   21150:	ldrb	r1, [r1, #192]	; 0xc0
   21154:	mov	r0, #0
   21158:	tst	r1, #4
   2115c:	beq	21178 <dta_emit_strls+0x38>
   21160:	ldr	r1, [pc, #188]	; 21224 <dta_emit_strls+0xe4>
   21164:	add	r1, pc, r1
   21168:	mov	r0, r4
   2116c:	bl	4bd8 <readstat_write_string@plt>
   21170:	cmp	r0, #0
   21174:	beq	2117c <dta_emit_strls+0x3c>
   21178:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2117c:	ldr	r0, [r4, #64]	; 0x40
   21180:	cmp	r0, #1
   21184:	blt	21210 <dta_emit_strls+0xd0>
   21188:	mov	r6, #0
   2118c:	ldr	r8, [pc, #148]	; 21228 <dta_emit_strls+0xe8>
   21190:	add	r8, pc, r8
   21194:	ldr	r0, [r4, #60]	; 0x3c
   21198:	ldr	r7, [r0, r6, lsl #2]
   2119c:	mov	r0, r4
   211a0:	mov	r1, r8
   211a4:	bl	4bd8 <readstat_write_string@plt>
   211a8:	cmp	r0, #0
   211ac:	bne	21178 <dta_emit_strls+0x38>
   211b0:	ldr	r0, [r5, #116]	; 0x74
   211b4:	cmp	r0, #5
   211b8:	bcc	211d4 <dta_emit_strls+0x94>
   211bc:	mov	r0, r4
   211c0:	mov	r1, r7
   211c4:	bl	21674 <dta_118_emit_strl_header>
   211c8:	cmp	r0, #0
   211cc:	beq	211e8 <dta_emit_strls+0xa8>
   211d0:	b	21178 <dta_emit_strls+0x38>
   211d4:	mov	r0, r4
   211d8:	mov	r1, r7
   211dc:	bl	216bc <dta_117_emit_strl_header>
   211e0:	cmp	r0, #0
   211e4:	bne	21178 <dta_emit_strls+0x38>
   211e8:	ldr	r2, [r7, #16]
   211ec:	add	r1, r7, #20
   211f0:	mov	r0, r4
   211f4:	bl	4ef0 <readstat_write_bytes@plt>
   211f8:	cmp	r0, #0
   211fc:	bne	21178 <dta_emit_strls+0x38>
   21200:	add	r6, r6, #1
   21204:	ldr	r0, [r4, #64]	; 0x40
   21208:	cmp	r6, r0
   2120c:	blt	21194 <dta_emit_strls+0x54>
   21210:	ldr	r1, [pc, #20]	; 2122c <dta_emit_strls+0xec>
   21214:	add	r1, pc, r1
   21218:	mov	r0, r4
   2121c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   21220:	b	4bd8 <readstat_write_string@plt>
   21224:	.word	0x00006b4e
   21228:	.word	0x00006b2a
   2122c:	.word	0x00006c18

00021230 <dta_emit_value_labels>:
   21230:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21234:	add	fp, sp, #28
   21238:	sub	sp, sp, #36	; 0x24
   2123c:	mov	r6, r1
   21240:	mov	r7, r0
   21244:	ldr	r0, [r1, #100]	; 0x64
   21248:	cmp	r0, #2
   2124c:	bne	21264 <dta_emit_value_labels+0x34>
   21250:	mov	r0, r7
   21254:	mov	r1, r6
   21258:	sub	sp, fp, #28
   2125c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21260:	b	216fc <dta_old_emit_value_labels>
   21264:	ldrd	r0, [r6, #104]	; 0x68
   21268:	add	r1, r1, r0
   2126c:	mov	r0, #1
   21270:	bl	47d0 <calloc@plt>
   21274:	mov	r4, r0
   21278:	ldr	r2, [pc, #988]	; 2165c <dta_emit_value_labels+0x42c>
   2127c:	add	r2, pc, r2
   21280:	mov	r0, r7
   21284:	mov	r1, r6
   21288:	bl	2009c <dta_write_tag>
   2128c:	mov	r8, r0
   21290:	cmp	r0, #0
   21294:	bne	21640 <dta_emit_value_labels+0x410>
   21298:	ldr	r0, [r7, #40]	; 0x28
   2129c:	cmp	r0, #1
   212a0:	str	r4, [sp, #8]
   212a4:	blt	215c8 <dta_emit_value_labels+0x398>
   212a8:	mov	r4, #0
   212ac:	mov	r5, #0
   212b0:	mov	r9, #0
   212b4:	mov	r1, #0
   212b8:	mov	r2, #0
   212bc:	str	r6, [sp]
   212c0:	str	r7, [sp, #20]
   212c4:	str	r2, [sp, #12]
   212c8:	str	r1, [sp, #16]
   212cc:	mov	r0, r7
   212d0:	mov	r1, r5
   212d4:	bl	4ec0 <readstat_get_label_set@plt>
   212d8:	mov	sl, r0
   212dc:	ldr	r0, [r0, #264]	; 0x108
   212e0:	str	r0, [sp, #32]
   212e4:	str	r4, [sp, #28]
   212e8:	cmp	r0, #1
   212ec:	blt	21324 <dta_emit_value_labels+0xf4>
   212f0:	mov	r7, #0
   212f4:	mov	r0, sl
   212f8:	mov	r1, r7
   212fc:	bl	4f68 <readstat_get_value_label@plt>
   21300:	ldr	r0, [r0, #28]
   21304:	ldr	r1, [sp, #28]
   21308:	add	r0, r0, r1
   2130c:	add	r0, r0, #1
   21310:	str	r0, [sp, #28]
   21314:	add	r7, r7, #1
   21318:	ldr	r0, [sp, #32]
   2131c:	cmp	r7, r0
   21320:	blt	212f4 <dta_emit_value_labels+0xc4>
   21324:	ldr	r7, [sp, #20]
   21328:	mov	r0, r7
   2132c:	mov	r1, r6
   21330:	ldr	r2, [pc, #808]	; 21660 <dta_emit_value_labels+0x430>
   21334:	add	r2, pc, r2
   21338:	bl	2009c <dta_write_tag>
   2133c:	cmp	r0, #0
   21340:	ldr	r4, [sp, #8]
   21344:	bne	215f8 <dta_emit_value_labels+0x3c8>
   21348:	ldr	r0, [sp, #32]
   2134c:	ldr	r1, [sp, #28]
   21350:	add	r0, r1, r0, lsl #3
   21354:	add	r0, r0, #8
   21358:	str	r0, [sp, #24]
   2135c:	mov	r0, r7
   21360:	add	r1, sp, #24
   21364:	mov	r2, #4
   21368:	bl	4ef0 <readstat_write_bytes@plt>
   2136c:	cmp	r0, #0
   21370:	bne	215f8 <dta_emit_value_labels+0x3c8>
   21374:	ldr	r2, [r6, #104]	; 0x68
   21378:	add	r1, sl, #4
   2137c:	mov	r0, r4
   21380:	bl	4d4c <strncpy@plt>
   21384:	ldrd	r0, [r6, #104]	; 0x68
   21388:	add	r2, r1, r0
   2138c:	mov	r0, r7
   21390:	mov	r1, r4
   21394:	bl	4ef0 <readstat_write_bytes@plt>
   21398:	cmp	r0, #0
   2139c:	bne	215f8 <dta_emit_value_labels+0x3c8>
   213a0:	ldr	r0, [sp, #28]
   213a4:	cmp	r0, #0
   213a8:	beq	21550 <dta_emit_value_labels+0x320>
   213ac:	str	r5, [sp, #4]
   213b0:	ldr	r0, [sp, #32]
   213b4:	lsl	r1, r0, #2
   213b8:	mov	r0, r9
   213bc:	bl	4a64 <realloc@plt>
   213c0:	mov	r9, r0
   213c4:	ldr	r0, [sp, #32]
   213c8:	lsl	r1, r0, #2
   213cc:	ldr	r0, [sp, #16]
   213d0:	bl	4a64 <realloc@plt>
   213d4:	mov	r8, r0
   213d8:	ldr	r1, [sp, #28]
   213dc:	ldr	r0, [sp, #12]
   213e0:	bl	4a64 <realloc@plt>
   213e4:	mov	r6, r0
   213e8:	mov	r0, sl
   213ec:	ldr	r1, [pc, #628]	; 21668 <dta_emit_value_labels+0x438>
   213f0:	add	r1, pc, r1
   213f4:	bl	4824 <readstat_sort_label_set@plt>
   213f8:	ldr	r0, [sp, #32]
   213fc:	cmp	r0, #1
   21400:	str	r8, [sp, #16]
   21404:	str	r6, [sp, #12]
   21408:	blt	21494 <dta_emit_value_labels+0x264>
   2140c:	mov	r5, #0
   21410:	mov	r7, #0
   21414:	b	21450 <dta_emit_value_labels+0x220>
   21418:	ldr	r0, [r0, #8]
   2141c:	str	r0, [r8, r7, lsl #2]
   21420:	add	r0, r6, r5
   21424:	mov	r1, r2
   21428:	mov	r2, r4
   2142c:	bl	4998 <memcpy@plt>
   21430:	add	r0, r4, r5
   21434:	mov	r1, #0
   21438:	strb	r1, [r6, r0]
   2143c:	add	r5, r0, #1
   21440:	add	r7, r7, #1
   21444:	ldr	r0, [sp, #32]
   21448:	cmp	r7, r0
   2144c:	bge	21494 <dta_emit_value_labels+0x264>
   21450:	mov	r0, sl
   21454:	mov	r1, r7
   21458:	bl	4f68 <readstat_get_value_label@plt>
   2145c:	ldr	r2, [r0, #24]
   21460:	ldr	r4, [r0, #28]
   21464:	str	r5, [r9, r7, lsl #2]
   21468:	ldrb	r1, [r0, #12]
   2146c:	cmp	r1, #0
   21470:	beq	21418 <dta_emit_value_labels+0x1e8>
   21474:	ldr	r0, [sp, #20]
   21478:	ldr	r0, [r0, #8]
   2147c:	cmp	r0, #113	; 0x71
   21480:	blt	21608 <dta_emit_value_labels+0x3d8>
   21484:	movw	r0, #65413	; 0xff85
   21488:	movt	r0, #32767	; 0x7fff
   2148c:	add	r0, r1, r0
   21490:	b	2141c <dta_emit_value_labels+0x1ec>
   21494:	ldr	r7, [sp, #20]
   21498:	mov	r0, r7
   2149c:	add	r1, sp, #32
   214a0:	mov	r2, #4
   214a4:	bl	4ef0 <readstat_write_bytes@plt>
   214a8:	cmp	r0, #0
   214ac:	bne	215f0 <dta_emit_value_labels+0x3c0>
   214b0:	mov	r0, r7
   214b4:	add	r1, sp, #28
   214b8:	mov	r2, #4
   214bc:	bl	4ef0 <readstat_write_bytes@plt>
   214c0:	cmp	r0, #0
   214c4:	bne	215f0 <dta_emit_value_labels+0x3c0>
   214c8:	ldr	r0, [sp, #32]
   214cc:	lsl	r2, r0, #2
   214d0:	mov	r0, r7
   214d4:	mov	r1, r9
   214d8:	bl	4ef0 <readstat_write_bytes@plt>
   214dc:	cmp	r0, #0
   214e0:	bne	215f0 <dta_emit_value_labels+0x3c0>
   214e4:	ldr	r0, [sp, #32]
   214e8:	lsl	r2, r0, #2
   214ec:	mov	r0, r7
   214f0:	ldr	r1, [sp, #16]
   214f4:	bl	4ef0 <readstat_write_bytes@plt>
   214f8:	cmp	r0, #0
   214fc:	ldr	r4, [sp, #8]
   21500:	bne	215f8 <dta_emit_value_labels+0x3c8>
   21504:	ldr	r2, [sp, #28]
   21508:	mov	r0, r7
   2150c:	ldr	r1, [sp, #12]
   21510:	bl	4ef0 <readstat_write_bytes@plt>
   21514:	cmp	r0, #0
   21518:	bne	215f8 <dta_emit_value_labels+0x3c8>
   2151c:	mov	r0, r7
   21520:	ldr	r6, [sp]
   21524:	mov	r1, r6
   21528:	ldr	r2, [pc, #316]	; 2166c <dta_emit_value_labels+0x43c>
   2152c:	add	r2, pc, r2
   21530:	bl	2009c <dta_write_tag>
   21534:	cmp	r0, #0
   21538:	bne	215f8 <dta_emit_value_labels+0x3c8>
   2153c:	ldr	r2, [sp, #12]
   21540:	ldr	r1, [sp, #16]
   21544:	mov	r4, #0
   21548:	ldr	r5, [sp, #4]
   2154c:	b	215b4 <dta_emit_value_labels+0x384>
   21550:	mov	sl, r5
   21554:	mov	r0, r7
   21558:	add	r5, sp, #28
   2155c:	mov	r1, r5
   21560:	mov	r2, #4
   21564:	bl	4ef0 <readstat_write_bytes@plt>
   21568:	cmp	r0, #0
   2156c:	bne	215f8 <dta_emit_value_labels+0x3c8>
   21570:	mov	r0, r7
   21574:	mov	r1, r5
   21578:	mov	r2, #4
   2157c:	bl	4ef0 <readstat_write_bytes@plt>
   21580:	cmp	r0, #0
   21584:	bne	215f8 <dta_emit_value_labels+0x3c8>
   21588:	mov	r0, r7
   2158c:	mov	r1, r6
   21590:	ldr	r2, [pc, #204]	; 21664 <dta_emit_value_labels+0x434>
   21594:	add	r2, pc, r2
   21598:	bl	2009c <dta_write_tag>
   2159c:	cmp	r0, #0
   215a0:	bne	215f8 <dta_emit_value_labels+0x3c8>
   215a4:	ldr	r2, [sp, #12]
   215a8:	ldr	r1, [sp, #16]
   215ac:	mov	r4, #0
   215b0:	mov	r5, sl
   215b4:	add	r5, r5, #1
   215b8:	ldr	r0, [r7, #40]	; 0x28
   215bc:	cmp	r5, r0
   215c0:	blt	212c4 <dta_emit_value_labels+0x94>
   215c4:	b	215d4 <dta_emit_value_labels+0x3a4>
   215c8:	mov	r2, #0
   215cc:	mov	r1, #0
   215d0:	mov	r9, #0
   215d4:	str	r2, [sp, #12]
   215d8:	str	r1, [sp, #16]
   215dc:	ldr	r2, [pc, #140]	; 21670 <dta_emit_value_labels+0x440>
   215e0:	add	r2, pc, r2
   215e4:	mov	r0, r7
   215e8:	mov	r1, r6
   215ec:	bl	2009c <dta_write_tag>
   215f0:	mov	r8, r0
   215f4:	b	2160c <dta_emit_value_labels+0x3dc>
   215f8:	mov	r8, r0
   215fc:	cmp	r9, #0
   21600:	bne	21618 <dta_emit_value_labels+0x3e8>
   21604:	b	21620 <dta_emit_value_labels+0x3f0>
   21608:	mov	r8, #23
   2160c:	ldr	r4, [sp, #8]
   21610:	cmp	r9, #0
   21614:	beq	21620 <dta_emit_value_labels+0x3f0>
   21618:	mov	r0, r9
   2161c:	bl	4938 <free@plt>
   21620:	ldr	r0, [sp, #16]
   21624:	cmp	r0, #0
   21628:	beq	21630 <dta_emit_value_labels+0x400>
   2162c:	bl	4938 <free@plt>
   21630:	ldr	r0, [sp, #12]
   21634:	cmp	r0, #0
   21638:	beq	21640 <dta_emit_value_labels+0x410>
   2163c:	bl	4938 <free@plt>
   21640:	cmp	r4, #0
   21644:	beq	21650 <dta_emit_value_labels+0x420>
   21648:	mov	r0, r4
   2164c:	bl	4938 <free@plt>
   21650:	mov	r0, r8
   21654:	sub	sp, fp, #28
   21658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2165c:	.word	0x00006a8a
   21660:	.word	0x000069e1
   21664:	.word	0x00006787
   21668:	.word	0x000004ec
   2166c:	.word	0x000067ef
   21670:	.word	0x00006855

00021674 <dta_118_emit_strl_header>:
   21674:	push	{fp, lr}
   21678:	mov	fp, sp
   2167c:	sub	sp, sp, #24
   21680:	ldr	r2, [r1]
   21684:	str	r2, [sp, #4]
   21688:	ldr	ip, [r1, #8]
   2168c:	ldr	r3, [r1, #12]
   21690:	ldr	r1, [r1, #16]
   21694:	mov	r2, #130	; 0x82
   21698:	strb	r2, [sp, #16]
   2169c:	str	r3, [sp, #12]
   216a0:	str	ip, [sp, #8]
   216a4:	str	r1, [sp, #17]
   216a8:	add	r1, sp, #4
   216ac:	mov	r2, #17
   216b0:	bl	4ef0 <readstat_write_bytes@plt>
   216b4:	mov	sp, fp
   216b8:	pop	{fp, pc}

000216bc <dta_117_emit_strl_header>:
   216bc:	push	{fp, lr}
   216c0:	mov	fp, sp
   216c4:	sub	sp, sp, #16
   216c8:	ldr	r2, [r1]
   216cc:	str	r2, [sp]
   216d0:	ldr	r2, [r1, #8]
   216d4:	mov	r3, #130	; 0x82
   216d8:	strb	r3, [sp, #8]
   216dc:	str	r2, [sp, #4]
   216e0:	ldr	r1, [r1, #16]
   216e4:	str	r1, [sp, #9]
   216e8:	mov	r1, sp
   216ec:	mov	r2, #13
   216f0:	bl	4ef0 <readstat_write_bytes@plt>
   216f4:	mov	sp, fp
   216f8:	pop	{fp, pc}

000216fc <dta_old_emit_value_labels>:
   216fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21700:	add	fp, sp, #28
   21704:	sub	sp, sp, #28
   21708:	str	r1, [sp]
   2170c:	mov	r7, r0
   21710:	ldr	r0, [r0, #40]	; 0x28
   21714:	cmp	r0, #1
   21718:	blt	2189c <dta_old_emit_value_labels+0x1a0>
   2171c:	mov	sl, #8
   21720:	mov	r9, #0
   21724:	mov	r4, #0
   21728:	mov	r8, r7
   2172c:	mov	r0, r7
   21730:	mov	r1, r9
   21734:	bl	4ec0 <readstat_get_label_set@plt>
   21738:	mov	r5, r0
   2173c:	ldr	r0, [r0, #264]	; 0x108
   21740:	cmp	r0, #1
   21744:	mov	r7, #0
   21748:	blt	21790 <dta_old_emit_value_labels+0x94>
   2174c:	mov	r7, #0
   21750:	mov	r6, #0
   21754:	mov	r0, r5
   21758:	mov	r1, r6
   2175c:	bl	4f68 <readstat_get_value_label@plt>
   21760:	ldrb	r1, [r0, #12]
   21764:	cmp	r1, #0
   21768:	bne	218a4 <dta_old_emit_value_labels+0x1a8>
   2176c:	ldr	r0, [r0, #8]
   21770:	cmp	r0, #1024	; 0x400
   21774:	bhi	218c4 <dta_old_emit_value_labels+0x1c8>
   21778:	cmp	r0, r7
   2177c:	movgt	r7, r0
   21780:	add	r6, r6, #1
   21784:	ldr	r0, [r5, #264]	; 0x108
   21788:	cmp	r6, r0
   2178c:	blt	21754 <dta_old_emit_value_labels+0x58>
   21790:	add	r0, sl, r7, lsl #3
   21794:	strh	r0, [sp, #6]
   21798:	mov	r7, r8
   2179c:	mov	r0, r8
   217a0:	add	r1, sp, #6
   217a4:	mov	r2, #2
   217a8:	bl	4ef0 <readstat_write_bytes@plt>
   217ac:	cmp	r0, #0
   217b0:	bne	218d4 <dta_old_emit_value_labels+0x1d8>
   217b4:	mov	r0, #0
   217b8:	str	r0, [sp, #12]
   217bc:	str	r0, [sp, #8]
   217c0:	str	r0, [sp, #18]
   217c4:	str	r0, [sp, #14]
   217c8:	ldr	r6, [sp]
   217cc:	ldr	r2, [r6, #104]	; 0x68
   217d0:	add	r1, r5, #4
   217d4:	add	r8, sp, #8
   217d8:	mov	r0, r8
   217dc:	bl	4d4c <strncpy@plt>
   217e0:	ldrd	r0, [r6, #104]	; 0x68
   217e4:	add	r2, r1, r0
   217e8:	mov	r0, r7
   217ec:	mov	r1, r8
   217f0:	bl	4ef0 <readstat_write_bytes@plt>
   217f4:	cmp	r0, #0
   217f8:	bne	218d4 <dta_old_emit_value_labels+0x1d8>
   217fc:	ldrsh	r1, [sp, #6]
   21800:	mov	r0, r4
   21804:	bl	4a64 <realloc@plt>
   21808:	mov	r4, r0
   2180c:	ldrsh	r2, [sp, #6]
   21810:	mov	r1, #0
   21814:	bl	4d28 <memset@plt>
   21818:	ldr	r0, [r5, #264]	; 0x108
   2181c:	cmp	r0, #1
   21820:	blt	21864 <dta_old_emit_value_labels+0x168>
   21824:	mov	r6, #0
   21828:	mov	r0, r5
   2182c:	mov	r1, r6
   21830:	bl	4f68 <readstat_get_value_label@plt>
   21834:	ldr	r1, [r0, #8]
   21838:	ldrd	r2, [r0, #24]
   2183c:	add	r0, r4, r1, lsl #3
   21840:	cmp	r3, #8
   21844:	movcs	r3, sl
   21848:	mov	r1, r2
   2184c:	mov	r2, r3
   21850:	bl	4998 <memcpy@plt>
   21854:	add	r6, r6, #1
   21858:	ldr	r0, [r5, #264]	; 0x108
   2185c:	cmp	r6, r0
   21860:	blt	21828 <dta_old_emit_value_labels+0x12c>
   21864:	ldrsh	r2, [sp, #6]
   21868:	mov	r0, r7
   2186c:	mov	r1, r4
   21870:	bl	4ef0 <readstat_write_bytes@plt>
   21874:	cmp	r0, #0
   21878:	bne	218d4 <dta_old_emit_value_labels+0x1d8>
   2187c:	add	r9, r9, #1
   21880:	ldr	r0, [r7, #40]	; 0x28
   21884:	cmp	r9, r0
   21888:	blt	21728 <dta_old_emit_value_labels+0x2c>
   2188c:	mov	r8, #0
   21890:	cmp	r4, #0
   21894:	bne	218b0 <dta_old_emit_value_labels+0x1b4>
   21898:	b	218b8 <dta_old_emit_value_labels+0x1bc>
   2189c:	mov	r8, #0
   218a0:	b	218b8 <dta_old_emit_value_labels+0x1bc>
   218a4:	mov	r8, #23
   218a8:	cmp	r4, #0
   218ac:	beq	218b8 <dta_old_emit_value_labels+0x1bc>
   218b0:	mov	r0, r4
   218b4:	bl	4938 <free@plt>
   218b8:	mov	r0, r8
   218bc:	sub	sp, fp, #28
   218c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   218c4:	mov	r8, #20
   218c8:	cmp	r4, #0
   218cc:	bne	218b0 <dta_old_emit_value_labels+0x1b4>
   218d0:	b	218b8 <dta_old_emit_value_labels+0x1bc>
   218d4:	mov	r8, r0
   218d8:	cmp	r4, #0
   218dc:	bne	218b0 <dta_old_emit_value_labels+0x1b4>
   218e0:	b	218b8 <dta_old_emit_value_labels+0x1bc>

000218e4 <dta_compare_value_labels>:
   218e4:	mov	r2, r0
   218e8:	ldrb	r3, [r1, #12]
   218ec:	ldrb	r0, [r0, #12]
   218f0:	cmp	r0, #0
   218f4:	beq	21908 <dta_compare_value_labels+0x24>
   218f8:	cmp	r3, #0
   218fc:	moveq	r0, #1
   21900:	subne	r0, r0, r3
   21904:	bx	lr
   21908:	mvn	r0, #0
   2190c:	cmp	r3, #0
   21910:	bxne	lr
   21914:	ldr	r0, [r1, #8]
   21918:	ldr	r1, [r2, #8]
   2191c:	sub	r0, r1, r0
   21920:	bx	lr

00021924 <submit_value_label>:
   21924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21928:	add	fp, sp, #28
   2192c:	sub	sp, sp, #20
   21930:	mov	r8, r1
   21934:	ldr	r1, [r0, #20]
   21938:	cmp	r1, #0
   2193c:	beq	21a70 <submit_value_label+0x14c>
   21940:	mov	r5, r0
   21944:	ldr	r9, [fp, #28]
   21948:	add	r0, r2, #1
   2194c:	cmp	r0, #4
   21950:	bhi	2198c <submit_value_label+0x68>
   21954:	add	r2, pc, #4
   21958:	ldr	r0, [r2, r0, lsl #2]
   2195c:	add	pc, r2, r0
   21960:	.word	0x00000014
   21964:	.word	0x0000003c
   21968:	.word	0x0000004c
   2196c:	.word	0x00000090
   21970:	.word	0x00000110
   21974:	mov	r0, #0
   21978:	mov	r7, #5
   2197c:	movw	r3, #0
   21980:	movt	r3, #32760	; 0x7ff8
   21984:	mov	r2, #0
   21988:	b	219bc <submit_value_label+0x98>
   2198c:	mov	r0, #0
   21990:	mov	r3, #0
   21994:	mov	r2, #0
   21998:	b	219b8 <submit_value_label+0x94>
   2199c:	vmov	r2, r3, d0
   219a0:	mov	r0, #0
   219a4:	mov	r7, #5
   219a8:	b	219bc <submit_value_label+0x98>
   219ac:	ldr	r2, [fp, #24]
   219b0:	mov	r0, #0
   219b4:	mov	r3, #0
   219b8:	mov	r7, #0
   219bc:	str	r7, [sp]
   219c0:	stmib	sp, {r0, r9}
   219c4:	ldr	r7, [fp, #32]
   219c8:	str	r7, [sp, #12]
   219cc:	orr	r2, r0, r2
   219d0:	mov	r0, r8
   219d4:	blx	r1
   219d8:	mov	r1, r0
   219dc:	mov	r0, #4
   219e0:	cmp	r1, #0
   219e4:	moveq	r0, #0
   219e8:	sub	sp, fp, #28
   219ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   219f0:	ldr	r1, [fp, #20]
   219f4:	ldr	r0, [fp, #16]
   219f8:	ldr	r6, [fp, #12]
   219fc:	ldr	r7, [fp, #8]
   21a00:	subs	r0, r0, r7
   21a04:	sbcs	r0, r1, r6
   21a08:	blt	21a70 <submit_value_label+0x14c>
   21a0c:	mov	r0, r7
   21a10:	mov	r1, r6
   21a14:	bl	24f14 <__aeabi_l2d>
   21a18:	mov	r2, r0
   21a1c:	ldr	r4, [r5, #20]
   21a20:	bfc	sl, #0, #10
   21a24:	mov	r0, #5
   21a28:	stm	sp, {r0, sl}
   21a2c:	str	r9, [sp, #8]
   21a30:	ldr	r0, [fp, #32]
   21a34:	str	r0, [sp, #12]
   21a38:	mov	r0, r8
   21a3c:	mov	r3, r1
   21a40:	blx	r4
   21a44:	cmp	r0, #0
   21a48:	bne	21a7c <submit_value_label+0x158>
   21a4c:	adds	r0, r7, #1
   21a50:	adc	r1, r6, #0
   21a54:	ldr	r2, [fp, #16]
   21a58:	subs	r2, r7, r2
   21a5c:	ldr	r2, [fp, #20]
   21a60:	sbcs	r2, r6, r2
   21a64:	mov	r7, r0
   21a68:	mov	r6, r1
   21a6c:	blt	21a0c <submit_value_label+0xe8>
   21a70:	mov	r0, #0
   21a74:	sub	sp, fp, #28
   21a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a7c:	mov	r0, #4
   21a80:	sub	sp, fp, #28
   21a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00021a88 <submit_columns>:
   21a88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21a8c:	add	fp, sp, #28
   21a90:	push	{r2}		; (str r2, [sp, #-4]!)
   21a94:	mov	r5, r1
   21a98:	mov	sl, r0
   21a9c:	ldr	r0, [r1, #268]	; 0x10c
   21aa0:	cmp	r0, #1
   21aa4:	blt	21ad8 <submit_columns+0x50>
   21aa8:	ldr	r0, [r5, #268]	; 0x10c
   21aac:	ldr	r1, [r5, #276]	; 0x114
   21ab0:	mov	r2, #0
   21ab4:	ldr	r3, [r1]
   21ab8:	ldr	r7, [r5, #256]	; 0x100
   21abc:	cmp	r7, r3
   21ac0:	addle	r3, r3, #1
   21ac4:	strle	r3, [r5, #256]	; 0x100
   21ac8:	add	r1, r1, #2208	; 0x8a0
   21acc:	add	r2, r2, #1
   21ad0:	cmp	r2, r0
   21ad4:	blt	21ab4 <submit_columns+0x2c>
   21ad8:	ldr	r1, [sl, #8]
   21adc:	mov	r0, #0
   21ae0:	cmp	r1, #0
   21ae4:	beq	21b84 <submit_columns+0xfc>
   21ae8:	ldr	r1, [r5, #268]	; 0x10c
   21aec:	cmp	r1, #1
   21af0:	blt	21b84 <submit_columns+0xfc>
   21af4:	mov	r4, #0
   21af8:	mov	r7, #0
   21afc:	mov	r8, #0
   21b00:	b	21b20 <submit_columns+0x98>
   21b04:	mov	r0, #1
   21b08:	str	r0, [r9, #12]
   21b0c:	add	r4, r4, #2208	; 0x8a0
   21b10:	add	r7, r7, #1
   21b14:	ldr	r0, [r5, #268]	; 0x10c
   21b18:	cmp	r7, r0
   21b1c:	bge	21b80 <submit_columns+0xf8>
   21b20:	ldr	r0, [r5, #276]	; 0x114
   21b24:	add	r9, r0, r4
   21b28:	mov	r1, r9
   21b2c:	ldr	r0, [r1, #16]!
   21b30:	str	r8, [r1, #2148]	; 0x864
   21b34:	str	r7, [r1, #4]
   21b38:	cmp	r0, #0
   21b3c:	bne	21b48 <submit_columns+0xc0>
   21b40:	ldr	r0, [r9, #8]
   21b44:	str	r0, [r9, #1612]	; 0x64c
   21b48:	mov	r2, r9
   21b4c:	ldrb	r0, [r2, #2168]!	; 0x878
   21b50:	cmp	r0, #0
   21b54:	moveq	r2, r0
   21b58:	ldr	r6, [sl, #8]
   21b5c:	mov	r0, r7
   21b60:	ldr	r3, [sp]
   21b64:	blx	r6
   21b68:	cmp	r0, #2
   21b6c:	beq	21b04 <submit_columns+0x7c>
   21b70:	cmp	r0, #1
   21b74:	beq	21b8c <submit_columns+0x104>
   21b78:	add	r8, r8, #1
   21b7c:	b	21b0c <submit_columns+0x84>
   21b80:	mov	r0, #0
   21b84:	sub	sp, fp, #28
   21b88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21b8c:	mov	r0, #4
   21b90:	sub	sp, fp, #28
   21b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00021b98 <readstat_copy>:
   21b98:	push	{r4, r5, fp, lr}
   21b9c:	add	fp, sp, #8
   21ba0:	mov	r4, r3
   21ba4:	mov	r5, r0
   21ba8:	cmp	r3, r1
   21bac:	subcs	r4, r1, #1
   21bb0:	mov	r1, r2
   21bb4:	mov	r2, r4
   21bb8:	bl	4998 <memcpy@plt>
   21bbc:	mov	r0, #0
   21bc0:	strb	r0, [r5, r4]
   21bc4:	pop	{r4, r5, fp, pc}

00021bc8 <readstat_copy_lower>:
   21bc8:	push	{r4, r5, r6, sl, fp, lr}
   21bcc:	add	fp, sp, #16
   21bd0:	mov	r4, r1
   21bd4:	mov	r5, r0
   21bd8:	bl	48e4 <readstat_copy@plt>
   21bdc:	cmp	r4, #0
   21be0:	beq	21c08 <readstat_copy_lower+0x40>
   21be4:	ldrb	r6, [r5]
   21be8:	cmp	r6, #0
   21bec:	beq	21c08 <readstat_copy_lower+0x40>
   21bf0:	bl	4bf0 <__ctype_tolower_loc@plt>
   21bf4:	ldr	r0, [r0]
   21bf8:	ldr	r0, [r0, r6, lsl #2]
   21bfc:	strb	r0, [r5], #1
   21c00:	subs	r4, r4, #1
   21c04:	bne	21be4 <readstat_copy_lower+0x1c>
   21c08:	pop	{r4, r5, r6, sl, fp, pc}

00021c0c <readstat_copy_quoted>:
   21c0c:	push	{r4, sl, fp, lr}
   21c10:	add	fp, sp, #8
   21c14:	cmp	r3, r1
   21c18:	subcs	r3, r1, #1
   21c1c:	mov	ip, #0
   21c20:	cmp	r3, #0
   21c24:	mov	lr, #0
   21c28:	beq	21c74 <readstat_copy_quoted+0x68>
   21c2c:	mov	r1, #0
   21c30:	mov	lr, #0
   21c34:	b	21c58 <readstat_copy_quoted+0x4c>
   21c38:	cmp	r4, #116	; 0x74
   21c3c:	movweq	r4, #9
   21c40:	strb	r4, [r0, lr]
   21c44:	add	lr, lr, #1
   21c48:	mov	r1, #0
   21c4c:	add	r2, r2, #1
   21c50:	subs	r3, r3, #1
   21c54:	beq	21c74 <readstat_copy_quoted+0x68>
   21c58:	ldrb	r4, [r2]
   21c5c:	cmp	r1, #0
   21c60:	bne	21c38 <readstat_copy_quoted+0x2c>
   21c64:	mov	r1, #1
   21c68:	cmp	r4, #92	; 0x5c
   21c6c:	bne	21c40 <readstat_copy_quoted+0x34>
   21c70:	b	21c4c <readstat_copy_quoted+0x40>
   21c74:	strb	ip, [r0, lr]
   21c78:	pop	{r4, sl, fp, pc}
   21c7c:	andeq	r0, r0, r0

00021c80 <readstat_parse_sas_commands>:
   21c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21c84:	add	fp, sp, #28
   21c88:	sub	sp, sp, #4
   21c8c:	vpush	{d8}
   21c90:	sub	sp, sp, #248	; 0xf8
   21c94:	sub	sp, sp, #2048	; 0x800
   21c98:	mov	r8, r3
   21c9c:	str	r2, [sp, #52]	; 0x34
   21ca0:	mov	r2, r1
   21ca4:	mov	r7, r0
   21ca8:	ldr	r0, [r0, #32]
   21cac:	ldr	r3, [r0]
   21cb0:	ldr	r1, [r0, #20]
   21cb4:	mov	r0, r2
   21cb8:	blx	r3
   21cbc:	cmn	r0, #1
   21cc0:	beq	22350 <readstat_parse_sas_commands+0x6d0>
   21cc4:	ldr	r0, [r7, #32]
   21cc8:	ldr	r3, [r0, #8]
   21ccc:	ldr	r2, [r0, #20]
   21cd0:	mov	r6, #0
   21cd4:	mov	r0, #0
   21cd8:	mov	r1, #2
   21cdc:	blx	r3
   21ce0:	cmn	r0, #1
   21ce4:	beq	22364 <readstat_parse_sas_commands+0x6e4>
   21ce8:	mov	r4, r0
   21cec:	ldr	r0, [r7, #32]
   21cf0:	ldr	r3, [r0, #8]
   21cf4:	ldr	r2, [r0, #20]
   21cf8:	mov	r0, #0
   21cfc:	mov	r1, #0
   21d00:	blx	r3
   21d04:	mov	r0, r4
   21d08:	bl	4b90 <malloc@plt>
   21d0c:	mov	r6, r0
   21d10:	ldr	r0, [r7, #32]
   21d14:	ldr	r3, [r0, #12]
   21d18:	ldr	r2, [r0, #20]
   21d1c:	mov	r0, r6
   21d20:	mov	r1, r4
   21d24:	blx	r3
   21d28:	mov	r5, #1
   21d2c:	mov	r0, #1
   21d30:	mov	r1, #280	; 0x118
   21d34:	bl	47d0 <calloc@plt>
   21d38:	cmp	r0, #0
   21d3c:	beq	22370 <readstat_parse_sas_commands+0x6f0>
   21d40:	add	r1, r6, r4
   21d44:	str	r1, [sp, #72]	; 0x48
   21d48:	str	r0, [sp, #68]	; 0x44
   21d4c:	str	r5, [r0, #256]	; 0x100
   21d50:	cmp	r4, #0
   21d54:	beq	2237c <readstat_parse_sas_commands+0x6fc>
   21d58:	str	r7, [sp, #40]	; 0x28
   21d5c:	str	r8, [sp, #36]	; 0x24
   21d60:	mov	r8, #0
   21d64:	vldr	d8, [pc, #996]	; 22150 <readstat_parse_sas_commands+0x4d0>
   21d68:	mov	r0, #5
   21d6c:	str	r0, [sp, #64]	; 0x40
   21d70:	movw	r0, #1094	; 0x446
   21d74:	mov	r1, #0
   21d78:	str	r1, [sp, #48]	; 0x30
   21d7c:	mov	r1, #0
   21d80:	str	r1, [sp, #44]	; 0x2c
   21d84:	mov	r1, #0
   21d88:	str	r1, [sp, #84]	; 0x54
   21d8c:	mov	r1, #0
   21d90:	str	r1, [sp, #104]	; 0x68
   21d94:	mov	lr, #0
   21d98:	mov	r9, r6
   21d9c:	mov	r1, #0
   21da0:	str	r1, [sp, #92]	; 0x5c
   21da4:	mov	r1, #0
   21da8:	str	r1, [sp, #56]	; 0x38
   21dac:	mov	r1, #0
   21db0:	str	r1, [sp, #60]	; 0x3c
   21db4:	mov	r1, #0
   21db8:	str	r1, [sp, #76]	; 0x4c
   21dbc:	mov	r1, #0
   21dc0:	str	r1, [sp, #108]	; 0x6c
   21dc4:	str	r6, [sp, #32]
   21dc8:	str	r6, [sp, #96]	; 0x60
   21dcc:	ldr	r1, [pc, #1796]	; 224d8 <readstat_parse_sas_commands+0x858>
   21dd0:	add	r1, pc, r1
   21dd4:	ldrb	r2, [r1, r0]
   21dd8:	ldr	r1, [pc, #1788]	; 224dc <readstat_parse_sas_commands+0x85c>
   21ddc:	add	r1, pc, r1
   21de0:	add	r1, r1, r0, lsl #1
   21de4:	ldrsh	r1, [r1]
   21de8:	ldr	r3, [pc, #1776]	; 224e0 <readstat_parse_sas_commands+0x860>
   21dec:	add	r3, pc, r3
   21df0:	add	r6, r3, r1
   21df4:	ldr	r1, [pc, #1768]	; 224e4 <readstat_parse_sas_commands+0x864>
   21df8:	add	r1, pc, r1
   21dfc:	add	r1, r1, r0, lsl #1
   21e00:	ldrsh	sl, [r1]
   21e04:	cmp	r2, #0
   21e08:	str	lr, [sp, #100]	; 0x64
   21e0c:	str	r9, [sp, #88]	; 0x58
   21e10:	beq	21e6c <readstat_parse_sas_commands+0x1ec>
   21e14:	add	ip, r6, r2
   21e18:	sub	r7, ip, #1
   21e1c:	cmp	r7, r6
   21e20:	bcc	21e64 <readstat_parse_sas_commands+0x1e4>
   21e24:	ldr	r1, [sp, #96]	; 0x60
   21e28:	ldrb	r5, [r1]
   21e2c:	mov	r3, r6
   21e30:	b	21e40 <readstat_parse_sas_commands+0x1c0>
   21e34:	sub	r7, r1, #1
   21e38:	cmp	r7, r3
   21e3c:	bcc	21e64 <readstat_parse_sas_commands+0x1e4>
   21e40:	sub	r4, r7, r3
   21e44:	mov	r1, r3
   21e48:	ldrb	r4, [r1, r4, asr #1]!
   21e4c:	cmp	r5, r4
   21e50:	bcc	21e34 <readstat_parse_sas_commands+0x1b4>
   21e54:	bls	21ef0 <readstat_parse_sas_commands+0x270>
   21e58:	add	r3, r1, #1
   21e5c:	cmp	r7, r3
   21e60:	bcs	21e40 <readstat_parse_sas_commands+0x1c0>
   21e64:	add	sl, r2, sl
   21e68:	b	21e70 <readstat_parse_sas_commands+0x1f0>
   21e6c:	mov	ip, r6
   21e70:	mvn	r5, #1
   21e74:	ldr	r6, [pc, #1644]	; 224e8 <readstat_parse_sas_commands+0x868>
   21e78:	add	r6, pc, r6
   21e7c:	ldr	r1, [pc, #1640]	; 224ec <readstat_parse_sas_commands+0x86c>
   21e80:	add	r1, pc, r1
   21e84:	ldrb	r0, [r1, r0]
   21e88:	cmp	r0, #0
   21e8c:	beq	21f10 <readstat_parse_sas_commands+0x290>
   21e90:	add	r1, ip, r0, lsl #1
   21e94:	sub	r2, r1, #2
   21e98:	cmp	r2, ip
   21e9c:	bcc	21f0c <readstat_parse_sas_commands+0x28c>
   21ea0:	ldr	r1, [sp, #96]	; 0x60
   21ea4:	ldrb	r3, [r1]
   21ea8:	mov	r4, ip
   21eac:	b	21ebc <readstat_parse_sas_commands+0x23c>
   21eb0:	sub	r2, r1, #2
   21eb4:	cmp	r2, r4
   21eb8:	bcc	21f0c <readstat_parse_sas_commands+0x28c>
   21ebc:	sub	r1, r2, r4
   21ec0:	and	r7, r5, r1, asr #1
   21ec4:	mov	r1, r4
   21ec8:	ldrb	r7, [r1, r7]!
   21ecc:	cmp	r3, r7
   21ed0:	bcc	21eb0 <readstat_parse_sas_commands+0x230>
   21ed4:	ldrb	r7, [r1, #1]
   21ed8:	cmp	r3, r7
   21edc:	bls	21f04 <readstat_parse_sas_commands+0x284>
   21ee0:	add	r4, r1, #2
   21ee4:	cmp	r2, r4
   21ee8:	bcs	21ebc <readstat_parse_sas_commands+0x23c>
   21eec:	b	21f0c <readstat_parse_sas_commands+0x28c>
   21ef0:	sub	r0, sl, r6
   21ef4:	add	sl, r0, r1
   21ef8:	ldr	r6, [pc, #1552]	; 22510 <readstat_parse_sas_commands+0x890>
   21efc:	add	r6, pc, r6
   21f00:	b	21f10 <readstat_parse_sas_commands+0x290>
   21f04:	sub	r0, r1, ip
   21f08:	asr	r0, r0, #1
   21f0c:	add	sl, r0, sl
   21f10:	ldr	r0, [pc, #1496]	; 224f0 <readstat_parse_sas_commands+0x870>
   21f14:	add	r0, pc, r0
   21f18:	ldrb	r0, [r0, sl]
   21f1c:	cmp	r0, #0
   21f20:	str	sl, [sp, #80]	; 0x50
   21f24:	beq	222f0 <readstat_parse_sas_commands+0x670>
   21f28:	ldrb	r7, [r6, r0]
   21f2c:	cmp	r7, #0
   21f30:	beq	222f0 <readstat_parse_sas_commands+0x670>
   21f34:	add	r0, r6, r0
   21f38:	add	r9, r0, #1
   21f3c:	ldr	r6, [sp, #84]	; 0x54
   21f40:	ldr	r4, [sp, #96]	; 0x60
   21f44:	ldr	sl, [sp, #68]	; 0x44
   21f48:	b	21f60 <readstat_parse_sas_commands+0x2e0>
   21f4c:	ldr	r0, [sp, #108]	; 0x6c
   21f50:	sub	r8, r4, r0
   21f54:	subs	r7, r7, #1
   21f58:	add	r9, r9, #1
   21f5c:	beq	222fc <readstat_parse_sas_commands+0x67c>
   21f60:	ldrb	r0, [r9]
   21f64:	cmp	r0, #34	; 0x22
   21f68:	bhi	21f54 <readstat_parse_sas_commands+0x2d4>
   21f6c:	add	r1, pc, #4
   21f70:	ldr	r0, [r1, r0, lsl #2]
   21f74:	add	pc, r1, r0
   21f78:	.word	0x000000f8
   21f7c:	.word	0x00000108
   21f80:	.word	0x00000134
   21f84:	.word	0x00000160
   21f88:	.word	0x00000174
   21f8c:	.word	0x00000184
   21f90:	.word	0x00000190
   21f94:	.word	0x0000019c
   21f98:	.word	0x000001ac
   21f9c:	.word	0x000001b4
   21fa0:	.word	0x000001bc
   21fa4:	.word	0x000001e0
   21fa8:	.word	0x000001f8
   21fac:	.word	0x00000240
   21fb0:	.word	0x0000009c
   21fb4:	.word	0x00000270
   21fb8:	.word	0x000000ac
   21fbc:	.word	0x00000298
   21fc0:	.word	0x0000008c
   21fc4:	.word	0xffffffd4
   21fc8:	.word	0x0000008c
   21fcc:	.word	0xffffffd4
   21fd0:	.word	0x000002ec
   21fd4:	.word	0x0000008c
   21fd8:	.word	0xffffffd4
   21fdc:	.word	0x00000300
   21fe0:	.word	0x00000310
   21fe4:	.word	0x000000d4
   21fe8:	.word	0x0000032c
   21fec:	.word	0x00000094
   21ff0:	.word	0x00000094
   21ff4:	.word	0x00000334
   21ff8:	.word	0x00000340
   21ffc:	.word	0x000000e4
   22000:	.word	0x000000ec
   22004:	str	r4, [sp, #108]	; 0x6c
   22008:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   2200c:	mov	r0, #1
   22010:	b	222b0 <readstat_parse_sas_commands+0x630>
   22014:	sub	r1, fp, #76	; 0x4c
   22018:	mov	r0, sl
   2201c:	bl	4b48 <readstat_schema_find_or_create_entry@plt>
   22020:	b	221dc <readstat_parse_sas_commands+0x55c>
   22024:	sub	r1, fp, #76	; 0x4c
   22028:	mov	r0, sl
   2202c:	bl	4b48 <readstat_schema_find_or_create_entry@plt>
   22030:	movw	r1, #2168	; 0x878
   22034:	add	r0, r0, r1
   22038:	sub	r2, fp, #140	; 0x8c
   2203c:	mov	r1, #32
   22040:	mov	r3, #32
   22044:	bl	48e4 <readstat_copy@plt>
   22048:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   2204c:	str	r6, [sp, #48]	; 0x30
   22050:	ldr	r0, [sp, #104]	; 0x68
   22054:	str	r0, [sp, #44]	; 0x2c
   22058:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   2205c:	sub	r0, r6, #1
   22060:	b	22068 <readstat_parse_sas_commands+0x3e8>
   22064:	mov	r0, #0
   22068:	str	r0, [sp, #56]	; 0x38
   2206c:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   22070:	mov	r6, #0
   22074:	mov	r0, #0
   22078:	str	r0, [sp, #104]	; 0x68
   2207c:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   22080:	mov	r0, #10
   22084:	umull	r0, r1, r6, r0
   22088:	ldr	r2, [sp, #104]	; 0x68
   2208c:	add	r2, r2, r2, lsl #2
   22090:	add	r1, r1, r2, lsl #1
   22094:	ldrb	r2, [r4]
   22098:	sub	r2, r2, #48	; 0x30
   2209c:	adds	r6, r0, r2
   220a0:	adc	r0, r1, r2, asr #31
   220a4:	str	r0, [sp, #104]	; 0x68
   220a8:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   220ac:	ldrb	r1, [r4]
   220b0:	sub	r0, r1, #48	; 0x30
   220b4:	uxtb	r2, r0
   220b8:	cmp	r2, #9
   220bc:	bls	222d4 <readstat_parse_sas_commands+0x654>
   220c0:	sub	r0, r1, #65	; 0x41
   220c4:	uxtb	r0, r0
   220c8:	cmp	r0, #5
   220cc:	bhi	222c0 <readstat_parse_sas_commands+0x640>
   220d0:	sub	r0, r1, #55	; 0x37
   220d4:	b	222d4 <readstat_parse_sas_commands+0x654>
   220d8:	sub	r0, r6, #1
   220dc:	str	r0, [sp, #60]	; 0x3c
   220e0:	mov	r0, #1
   220e4:	str	r0, [sp, #76]	; 0x4c
   220e8:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   220ec:	ldr	r0, [sp, #60]	; 0x3c
   220f0:	sub	r0, r6, r0
   220f4:	str	r0, [sp, #76]	; 0x4c
   220f8:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   220fc:	mov	r0, #0
   22100:	str	r0, [sp, #64]	; 0x40
   22104:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   22108:	mov	r0, #5
   2210c:	str	r0, [sp, #64]	; 0x40
   22110:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   22114:	add	lr, sp, #1024	; 0x400
   22118:	add	r0, lr, #116	; 0x74
   2211c:	mov	r1, #1024	; 0x400
   22120:	b	2213c <readstat_parse_sas_commands+0x4bc>
   22124:	sub	r0, fp, #140	; 0x8c
   22128:	b	22138 <readstat_parse_sas_commands+0x4b8>
   2212c:	sub	r0, fp, #172	; 0xac
   22130:	b	22138 <readstat_parse_sas_commands+0x4b8>
   22134:	sub	r0, fp, #108	; 0x6c
   22138:	mov	r1, #32
   2213c:	ldr	r2, [sp, #108]	; 0x6c
   22140:	mov	r3, r8
   22144:	bl	48e4 <readstat_copy@plt>
   22148:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   2214c:	nop	{0}
   22150:	.word	0x00000000
   22154:	.word	0x7ff80000
   22158:	sub	r0, fp, #76	; 0x4c
   2215c:	mov	r1, #32
   22160:	ldr	r2, [sp, #108]	; 0x6c
   22164:	mov	r3, r8
   22168:	bl	4e78 <readstat_copy_lower@plt>
   2216c:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   22170:	sub	r0, fp, #108	; 0x6c
   22174:	ldr	r1, [pc, #888]	; 224f4 <readstat_parse_sas_commands+0x874>
   22178:	add	r1, pc, r1
   2217c:	bl	4a94 <strcasecmp@plt>
   22180:	cmp	r0, #0
   22184:	streq	r6, [sl, #264]	; 0x108
   22188:	sub	r0, fp, #108	; 0x6c
   2218c:	ldr	r1, [pc, #868]	; 224f8 <readstat_parse_sas_commands+0x878>
   22190:	add	r1, pc, r1
   22194:	bl	4a94 <strcasecmp@plt>
   22198:	cmp	r0, #0
   2219c:	bne	21f54 <readstat_parse_sas_commands+0x2d4>
   221a0:	ldr	r0, [sp, #104]	; 0x68
   221a4:	orrs	r0, r6, r0
   221a8:	ldrb	r0, [sp, #1140]	; 0x474
   221ac:	movne	r0, r6
   221b0:	strb	r0, [sl, #272]	; 0x110
   221b4:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   221b8:	sub	r1, fp, #76	; 0x4c
   221bc:	mov	r0, sl
   221c0:	bl	4b48 <readstat_schema_find_or_create_entry@plt>
   221c4:	ldr	r1, [sp, #64]	; 0x40
   221c8:	str	r1, [r0, #16]
   221cc:	ldr	r1, [sp, #56]	; 0x38
   221d0:	str	r1, [r0]
   221d4:	ldr	r1, [sp, #60]	; 0x3c
   221d8:	str	r1, [r0, #4]
   221dc:	ldr	r1, [sp, #76]	; 0x4c
   221e0:	str	r1, [r0, #8]
   221e4:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   221e8:	sub	r1, fp, #76	; 0x4c
   221ec:	mov	r0, sl
   221f0:	bl	4b48 <readstat_schema_find_or_create_entry@plt>
   221f4:	add	r0, r0, #580	; 0x244
   221f8:	add	lr, sp, #1024	; 0x400
   221fc:	add	r2, lr, #116	; 0x74
   22200:	mov	r1, #1024	; 0x400
   22204:	mov	r3, #1024	; 0x400
   22208:	bl	48e4 <readstat_copy@plt>
   2220c:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   22210:	add	lr, sp, #1024	; 0x400
   22214:	add	r0, lr, #116	; 0x74
   22218:	sub	r1, fp, #172	; 0xac
   2221c:	ldr	r2, [sp, #48]	; 0x30
   22220:	str	r2, [sp]
   22224:	ldr	r2, [sp, #44]	; 0x2c
   22228:	stmib	sp, {r2, r6}
   2222c:	ldr	r2, [sp, #104]	; 0x68
   22230:	str	r2, [sp, #12]
   22234:	str	r1, [sp, #16]
   22238:	str	r0, [sp, #20]
   2223c:	ldr	r0, [sp, #52]	; 0x34
   22240:	str	r0, [sp, #24]
   22244:	sub	r1, fp, #140	; 0x8c
   22248:	ldr	r0, [sp, #40]	; 0x28
   2224c:	ldr	r2, [sp, #92]	; 0x5c
   22250:	vorr	d0, d8, d8
   22254:	bl	4ab8 <submit_value_label@plt>
   22258:	cmp	r0, #0
   2225c:	beq	21f54 <readstat_parse_sas_commands+0x2d4>
   22260:	b	224c4 <readstat_parse_sas_commands+0x844>
   22264:	ldr	r0, [sp, #100]	; 0x64
   22268:	add	r0, r0, #1
   2226c:	str	r0, [sp, #100]	; 0x64
   22270:	str	r4, [sp, #88]	; 0x58
   22274:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   22278:	rsbs	r0, r6, #0
   2227c:	ldr	r1, [sp, #104]	; 0x68
   22280:	rsc	r1, r1, #0
   22284:	b	22290 <readstat_parse_sas_commands+0x610>
   22288:	mov	r0, r6
   2228c:	ldr	r1, [sp, #104]	; 0x68
   22290:	bl	24f00 <__aeabi_ul2d>
   22294:	mov	r2, #0
   22298:	str	r2, [sp, #92]	; 0x5c
   2229c:	vmov	d8, r0, r1
   222a0:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   222a4:	mov	r0, #2
   222a8:	b	222b0 <readstat_parse_sas_commands+0x630>
   222ac:	mov	r0, #3
   222b0:	str	r0, [sp, #92]	; 0x5c
   222b4:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   222b8:	str	r6, [sp, #76]	; 0x4c
   222bc:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   222c0:	sub	r0, r1, #97	; 0x61
   222c4:	uxtb	r2, r0
   222c8:	mov	r0, #0
   222cc:	cmp	r2, #6
   222d0:	subcc	r0, r1, #87	; 0x57
   222d4:	ldr	r1, [sp, #104]	; 0x68
   222d8:	lsl	r1, r1, #4
   222dc:	orr	r1, r1, r6, lsr #28
   222e0:	adds	r6, r0, r6, lsl #4
   222e4:	adc	r0, r1, r0, asr #31
   222e8:	str	r0, [sp, #104]	; 0x68
   222ec:	b	21f54 <readstat_parse_sas_commands+0x2d4>
   222f0:	ldr	r6, [sp, #84]	; 0x54
   222f4:	ldr	r4, [sp, #96]	; 0x60
   222f8:	ldr	sl, [sp, #68]	; 0x44
   222fc:	ldr	r0, [pc, #504]	; 224fc <readstat_parse_sas_commands+0x87c>
   22300:	add	r0, pc, r0
   22304:	ldr	r1, [sp, #80]	; 0x50
   22308:	add	r0, r0, r1, lsl #1
   2230c:	ldrsh	r0, [r0]
   22310:	uxth	r1, r0
   22314:	cmp	r1, #0
   22318:	beq	22400 <readstat_parse_sas_commands+0x780>
   2231c:	str	r6, [sp, #84]	; 0x54
   22320:	add	r4, r4, #1
   22324:	ldr	r1, [sp, #72]	; 0x48
   22328:	str	r4, [sp, #96]	; 0x60
   2232c:	cmp	r4, r1
   22330:	ldr	lr, [sp, #100]	; 0x64
   22334:	ldr	r9, [sp, #88]	; 0x58
   22338:	bne	21dcc <readstat_parse_sas_commands+0x14c>
   2233c:	ldr	r8, [sp, #36]	; 0x24
   22340:	ldr	r7, [sp, #40]	; 0x28
   22344:	ldr	r6, [sp, #32]
   22348:	ldr	r4, [sp, #96]	; 0x60
   2234c:	b	2238c <readstat_parse_sas_commands+0x70c>
   22350:	mov	sl, #0
   22354:	cmp	r8, #0
   22358:	movne	r0, #1
   2235c:	strne	r0, [r8]
   22360:	b	224b0 <readstat_parse_sas_commands+0x830>
   22364:	mov	r5, #15
   22368:	mov	sl, #0
   2236c:	b	2247c <readstat_parse_sas_commands+0x7fc>
   22370:	mov	r5, #3
   22374:	mov	sl, #0
   22378:	b	2247c <readstat_parse_sas_commands+0x7fc>
   2237c:	mov	lr, #0
   22380:	movw	r0, #1094	; 0x446
   22384:	mov	r9, r6
   22388:	mov	r4, r6
   2238c:	ldr	sl, [sp, #68]	; 0x44
   22390:	ldr	r1, [sp, #72]	; 0x48
   22394:	cmp	r4, r1
   22398:	bne	223dc <readstat_parse_sas_commands+0x75c>
   2239c:	ldr	r1, [pc, #348]	; 22500 <readstat_parse_sas_commands+0x880>
   223a0:	add	r1, pc, r1
   223a4:	ldrb	r2, [r1, r0]
   223a8:	ldr	r3, [pc, #340]	; 22504 <readstat_parse_sas_commands+0x884>
   223ac:	add	r3, pc, r3
   223b0:	ldrb	r1, [r3, r2]
   223b4:	cmp	r1, #0
   223b8:	beq	223dc <readstat_parse_sas_commands+0x75c>
   223bc:	add	r2, r2, r3
   223c0:	add	r2, r2, #1
   223c4:	ldrb	r3, [r2], #1
   223c8:	cmp	r3, #22
   223cc:	moveq	r9, r4
   223d0:	addeq	lr, lr, #1
   223d4:	subs	r1, r1, #1
   223d8:	bne	223c4 <readstat_parse_sas_commands+0x744>
   223dc:	movw	r1, #1093	; 0x445
   223e0:	cmp	r0, r1
   223e4:	ble	22414 <readstat_parse_sas_commands+0x794>
   223e8:	mov	r0, r7
   223ec:	mov	r1, sl
   223f0:	ldr	r2, [sp, #52]	; 0x34
   223f4:	bl	49b0 <submit_columns@plt>
   223f8:	mov	r5, r0
   223fc:	b	2247c <readstat_parse_sas_commands+0x7fc>
   22400:	ldr	r8, [sp, #36]	; 0x24
   22404:	ldr	r7, [sp, #40]	; 0x28
   22408:	ldr	r6, [sp, #32]
   2240c:	ldr	lr, [sp, #100]	; 0x64
   22410:	ldr	r9, [sp, #88]	; 0x58
   22414:	ldr	r0, [sp, #72]	; 0x48
   22418:	cmp	r4, r0
   2241c:	beq	2244c <readstat_parse_sas_commands+0x7cc>
   22420:	ldrb	r0, [r4], -r9
   22424:	add	r1, r4, #1
   22428:	str	r1, [sp]
   2242c:	str	r0, [sp, #4]
   22430:	add	r3, lr, #1
   22434:	add	r0, sp, #112	; 0x70
   22438:	ldr	r2, [pc, #204]	; 2250c <readstat_parse_sas_commands+0x88c>
   2243c:	add	r2, pc, r2
   22440:	mov	r1, #1024	; 0x400
   22444:	bl	4d04 <snprintf@plt>
   22448:	b	22460 <readstat_parse_sas_commands+0x7e0>
   2244c:	add	r0, sp, #112	; 0x70
   22450:	ldr	r1, [pc, #176]	; 22508 <readstat_parse_sas_commands+0x888>
   22454:	add	r1, pc, r1
   22458:	mov	r2, #66	; 0x42
   2245c:	bl	4998 <memcpy@plt>
   22460:	ldr	r2, [r7, #24]
   22464:	cmp	r2, #0
   22468:	beq	22478 <readstat_parse_sas_commands+0x7f8>
   2246c:	add	r0, sp, #112	; 0x70
   22470:	ldr	r1, [sp, #52]	; 0x34
   22474:	blx	r2
   22478:	mov	r5, #5
   2247c:	ldr	r0, [r7, #32]
   22480:	ldr	r1, [r0, #4]
   22484:	ldr	r0, [r0, #20]
   22488:	blx	r1
   2248c:	mov	r0, r6
   22490:	bl	4938 <free@plt>
   22494:	cmp	r5, #0
   22498:	beq	224b0 <readstat_parse_sas_commands+0x830>
   2249c:	cmp	r8, #0
   224a0:	strne	r5, [r8]
   224a4:	mov	r0, sl
   224a8:	bl	4a1c <readstat_schema_free@plt>
   224ac:	mov	sl, #0
   224b0:	mov	r0, sl
   224b4:	sub	sp, fp, #40	; 0x28
   224b8:	vpop	{d8}
   224bc:	add	sp, sp, #4
   224c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   224c4:	mov	r5, r0
   224c8:	ldr	r8, [sp, #36]	; 0x24
   224cc:	ldr	r7, [sp, #40]	; 0x28
   224d0:	ldr	r6, [sp, #32]
   224d4:	b	2247c <readstat_parse_sas_commands+0x7fc>
   224d8:	.word	0x00008786
   224dc:	.word	0x00007652
   224e0:	.word	0x000060cc
   224e4:	.word	0x00007eca
   224e8:	.word	0x0000ce81
   224ec:	.word	0x0000d388
   224f0:	.word	0x0000b772
   224f4:	.word	0x0000d4da
   224f8:	.word	0x0000d4cb
   224fc:	.word	0x000086a0
   22500:	.word	0x0000ca1e
   22504:	.word	0x0000c94d
   22508:	.word	0x0000d24c
   2250c:	.word	0x0000d223
   22510:	.word	0x0000cdfd
   22514:	.word	0x00000000

00022518 <readstat_parse_spss_commands>:
   22518:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2251c:	add	fp, sp, #28
   22520:	sub	sp, sp, #4
   22524:	vpush	{d8}
   22528:	sub	sp, sp, #216	; 0xd8
   2252c:	sub	sp, sp, #2048	; 0x800
   22530:	mov	r6, r3
   22534:	str	r2, [sp, #56]	; 0x38
   22538:	mov	r2, r1
   2253c:	mov	r7, r0
   22540:	ldr	r0, [r0, #32]
   22544:	ldr	r3, [r0]
   22548:	ldr	r1, [r0, #20]
   2254c:	mov	r0, r2
   22550:	blx	r3
   22554:	cmn	r0, #1
   22558:	beq	22c70 <readstat_parse_spss_commands+0x758>
   2255c:	ldr	r0, [r7, #32]
   22560:	ldr	r3, [r0, #8]
   22564:	ldr	r2, [r0, #20]
   22568:	mov	r8, #0
   2256c:	mov	r0, #0
   22570:	mov	r1, #2
   22574:	blx	r3
   22578:	cmn	r0, #1
   2257c:	beq	22c84 <readstat_parse_spss_commands+0x76c>
   22580:	mov	r4, r0
   22584:	ldr	r0, [r7, #32]
   22588:	ldr	r3, [r0, #8]
   2258c:	ldr	r2, [r0, #20]
   22590:	mov	r0, #0
   22594:	mov	r1, #0
   22598:	blx	r3
   2259c:	mov	r0, r4
   225a0:	bl	4b90 <malloc@plt>
   225a4:	mov	r8, r0
   225a8:	ldr	r0, [r7, #32]
   225ac:	ldr	r3, [r0, #12]
   225b0:	ldr	r2, [r0, #20]
   225b4:	mov	r0, r8
   225b8:	mov	r1, r4
   225bc:	blx	r3
   225c0:	mov	r5, #1
   225c4:	mov	r0, #1
   225c8:	mov	r1, #280	; 0x118
   225cc:	bl	47d0 <calloc@plt>
   225d0:	cmp	r0, #0
   225d4:	beq	22c90 <readstat_parse_spss_commands+0x778>
   225d8:	mov	sl, r0
   225dc:	add	r0, r8, r4
   225e0:	str	r0, [sp, #68]	; 0x44
   225e4:	str	r5, [sl, #256]	; 0x100
   225e8:	cmp	r4, #0
   225ec:	str	r6, [sp, #36]	; 0x24
   225f0:	str	r7, [sp, #40]	; 0x28
   225f4:	str	r8, [sp, #32]
   225f8:	beq	22c9c <readstat_parse_spss_commands+0x784>
   225fc:	mov	r0, #0
   22600:	str	r0, [sp, #96]	; 0x60
   22604:	vldr	d8, [pc, #988]	; 229e8 <readstat_parse_spss_commands+0x4d0>
   22608:	mov	r0, #5
   2260c:	str	r0, [sp, #100]	; 0x64
   22610:	mov	r9, #628	; 0x274
   22614:	mvn	r6, #1
   22618:	mov	r0, #0
   2261c:	str	r0, [sp, #64]	; 0x40
   22620:	mov	r0, #0
   22624:	str	r0, [sp, #52]	; 0x34
   22628:	mov	r0, #0
   2262c:	str	r0, [sp, #48]	; 0x30
   22630:	mov	r0, #0
   22634:	str	r0, [sp, #108]	; 0x6c
   22638:	mov	r0, #0
   2263c:	str	r0, [sp, #92]	; 0x5c
   22640:	mov	r0, r8
   22644:	str	r8, [sp, #44]	; 0x2c
   22648:	mov	r0, #0
   2264c:	str	r0, [sp, #76]	; 0x4c
   22650:	mov	r0, #0
   22654:	str	r0, [sp, #60]	; 0x3c
   22658:	mov	r0, #0
   2265c:	str	r0, [sp, #72]	; 0x48
   22660:	mov	r0, #0
   22664:	str	r0, [sp, #84]	; 0x54
   22668:	mov	r0, #0
   2266c:	str	r0, [sp, #88]	; 0x58
   22670:	mov	r0, #0
   22674:	str	r0, [sp, #80]	; 0x50
   22678:	mov	r0, #0
   2267c:	str	r0, [sp, #104]	; 0x68
   22680:	ldr	r0, [pc, #2028]	; 22e74 <readstat_parse_spss_commands+0x95c>
   22684:	add	r0, pc, r0
   22688:	ldrb	r1, [r0, r9]
   2268c:	ldr	r0, [pc, #2020]	; 22e78 <readstat_parse_spss_commands+0x960>
   22690:	add	r0, pc, r0
   22694:	add	r0, r0, r9, lsl #1
   22698:	ldrsh	r0, [r0]
   2269c:	ldr	r2, [pc, #2008]	; 22e7c <readstat_parse_spss_commands+0x964>
   226a0:	add	r2, pc, r2
   226a4:	add	r7, r2, r0
   226a8:	ldr	r0, [pc, #2000]	; 22e80 <readstat_parse_spss_commands+0x968>
   226ac:	add	r0, pc, r0
   226b0:	add	r0, r0, r9, lsl #1
   226b4:	ldrsh	lr, [r0]
   226b8:	cmp	r1, #0
   226bc:	beq	22714 <readstat_parse_spss_commands+0x1fc>
   226c0:	add	ip, r7, r1
   226c4:	sub	r3, ip, #1
   226c8:	cmp	r3, r7
   226cc:	bcc	2270c <readstat_parse_spss_commands+0x1f4>
   226d0:	ldrb	r5, [r8]
   226d4:	mov	r2, r7
   226d8:	b	226e8 <readstat_parse_spss_commands+0x1d0>
   226dc:	sub	r3, r0, #1
   226e0:	cmp	r3, r2
   226e4:	bcc	2270c <readstat_parse_spss_commands+0x1f4>
   226e8:	sub	r4, r3, r2
   226ec:	mov	r0, r2
   226f0:	ldrb	r4, [r0, r4, asr #1]!
   226f4:	cmp	r5, r4
   226f8:	bcc	226dc <readstat_parse_spss_commands+0x1c4>
   226fc:	bls	22788 <readstat_parse_spss_commands+0x270>
   22700:	add	r2, r0, #1
   22704:	cmp	r3, r2
   22708:	bcs	226e8 <readstat_parse_spss_commands+0x1d0>
   2270c:	add	lr, r1, lr
   22710:	b	22718 <readstat_parse_spss_commands+0x200>
   22714:	mov	ip, r7
   22718:	ldr	r0, [pc, #1892]	; 22e84 <readstat_parse_spss_commands+0x96c>
   2271c:	add	r0, pc, r0
   22720:	ldrb	r1, [r0, r9]
   22724:	cmp	r1, #0
   22728:	beq	227a0 <readstat_parse_spss_commands+0x288>
   2272c:	add	r0, ip, r1, lsl #1
   22730:	sub	r2, r0, #2
   22734:	cmp	r2, ip
   22738:	bcc	2279c <readstat_parse_spss_commands+0x284>
   2273c:	ldrb	r3, [r8]
   22740:	mov	r4, ip
   22744:	b	22754 <readstat_parse_spss_commands+0x23c>
   22748:	sub	r2, r0, #2
   2274c:	cmp	r2, r4
   22750:	bcc	2279c <readstat_parse_spss_commands+0x284>
   22754:	sub	r0, r2, r4
   22758:	and	r7, r6, r0, asr #1
   2275c:	mov	r0, r4
   22760:	ldrb	r7, [r0, r7]!
   22764:	cmp	r3, r7
   22768:	bcc	22748 <readstat_parse_spss_commands+0x230>
   2276c:	ldrb	r7, [r0, #1]
   22770:	cmp	r3, r7
   22774:	bls	22794 <readstat_parse_spss_commands+0x27c>
   22778:	add	r4, r0, #2
   2277c:	cmp	r2, r4
   22780:	bcs	22754 <readstat_parse_spss_commands+0x23c>
   22784:	b	2279c <readstat_parse_spss_commands+0x284>
   22788:	sub	r1, lr, r7
   2278c:	add	lr, r1, r0
   22790:	b	227a0 <readstat_parse_spss_commands+0x288>
   22794:	sub	r0, r0, ip
   22798:	asr	r1, r0, #1
   2279c:	add	lr, r1, lr
   227a0:	ldr	r0, [pc, #1760]	; 22e88 <readstat_parse_spss_commands+0x970>
   227a4:	add	r0, pc, r0
   227a8:	mov	r7, lr
   227ac:	ldrb	r0, [r0, lr]
   227b0:	cmp	r0, #0
   227b4:	beq	22c3c <readstat_parse_spss_commands+0x724>
   227b8:	ldr	r9, [pc, #1740]	; 22e8c <readstat_parse_spss_commands+0x974>
   227bc:	add	r9, pc, r9
   227c0:	ldrb	r6, [r9, r0]!
   227c4:	cmp	r6, #0
   227c8:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   227cc:	b	22c3c <readstat_parse_spss_commands+0x724>
   227d0:	mov	r0, #5
   227d4:	str	r0, [sp, #100]	; 0x64
   227d8:	subs	r6, r6, #1
   227dc:	beq	22c3c <readstat_parse_spss_commands+0x724>
   227e0:	ldrb	r0, [r9, #1]!
   227e4:	cmp	r0, #35	; 0x23
   227e8:	bhi	227d8 <readstat_parse_spss_commands+0x2c0>
   227ec:	add	r1, pc, #4
   227f0:	ldr	r0, [r1, r0, lsl #2]
   227f4:	add	pc, r1, r0
   227f8:	.word	0x000000cc
   227fc:	.word	0x000000e8
   22800:	.word	0x00000124
   22804:	.word	0x00000144
   22808:	.word	0x00000160
   2280c:	.word	0x00000170
   22810:	.word	0x00000190
   22814:	.word	0x00000198
   22818:	.word	0x000001b8
   2281c:	.word	0x000001f8
   22820:	.word	0x00000228
   22824:	.word	0x0000023c
   22828:	.word	0x00000258
   2282c:	.word	0x000002a4
   22830:	.word	0x00000310
   22834:	.word	0x000000bc
   22838:	.word	0x00000090
   2283c:	.word	0x000000bc
   22840:	.word	0x00000090
   22844:	.word	0x00000388
   22848:	.word	0x000003a8
   2284c:	.word	0x00000090
   22850:	.word	0x000000a8
   22854:	.word	0x000000a8
   22858:	.word	0xffffffd8
   2285c:	.word	0xffffffd8
   22860:	.word	0x000000a8
   22864:	.word	0x000003b8
   22868:	.word	0xffffffd8
   2286c:	.word	0xffffffd8
   22870:	.word	0x000003d0
   22874:	.word	0x000003d8
   22878:	.word	0x000003ec
   2287c:	.word	0x00000410
   22880:	.word	0x0000042c
   22884:	.word	0x00000434
   22888:	ldr	r0, [sp, #104]	; 0x68
   2288c:	sub	r0, r8, r0
   22890:	str	r0, [sp, #96]	; 0x60
   22894:	subs	r6, r6, #1
   22898:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   2289c:	b	22c3c <readstat_parse_spss_commands+0x724>
   228a0:	mov	r0, #0
   228a4:	str	r0, [sp, #100]	; 0x64
   228a8:	subs	r6, r6, #1
   228ac:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   228b0:	b	22c3c <readstat_parse_spss_commands+0x724>
   228b4:	str	r8, [sp, #104]	; 0x68
   228b8:	subs	r6, r6, #1
   228bc:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   228c0:	b	22c3c <readstat_parse_spss_commands+0x724>
   228c4:	mov	r0, #0
   228c8:	str	r0, [sp, #108]	; 0x6c
   228cc:	mov	r0, #0
   228d0:	str	r0, [sp, #92]	; 0x5c
   228d4:	subs	r6, r6, #1
   228d8:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   228dc:	b	22c3c <readstat_parse_spss_commands+0x724>
   228e0:	mov	r0, #10
   228e4:	ldr	r1, [sp, #108]	; 0x6c
   228e8:	umull	r0, r1, r1, r0
   228ec:	ldr	r2, [sp, #92]	; 0x5c
   228f0:	add	r2, r2, r2, lsl #2
   228f4:	add	r1, r1, r2, lsl #1
   228f8:	ldrb	r2, [r8]
   228fc:	sub	r2, r2, #48	; 0x30
   22900:	adds	r0, r0, r2
   22904:	str	r0, [sp, #108]	; 0x6c
   22908:	adc	r0, r1, r2, asr #31
   2290c:	str	r0, [sp, #92]	; 0x5c
   22910:	subs	r6, r6, #1
   22914:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22918:	b	22c3c <readstat_parse_spss_commands+0x724>
   2291c:	ldr	r0, [sp, #108]	; 0x6c
   22920:	sub	r0, r0, #1
   22924:	str	r0, [sp, #76]	; 0x4c
   22928:	mov	r0, #1
   2292c:	str	r0, [sp, #72]	; 0x48
   22930:	subs	r6, r6, #1
   22934:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22938:	b	22c3c <readstat_parse_spss_commands+0x724>
   2293c:	ldr	r0, [sp, #76]	; 0x4c
   22940:	ldr	r1, [sp, #108]	; 0x6c
   22944:	sub	r0, r1, r0
   22948:	str	r0, [sp, #72]	; 0x48
   2294c:	subs	r6, r6, #1
   22950:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22954:	b	22c3c <readstat_parse_spss_commands+0x724>
   22958:	add	lr, sp, #1024	; 0x400
   2295c:	add	r0, lr, #116	; 0x74
   22960:	mov	r1, #1024	; 0x400
   22964:	b	22970 <readstat_parse_spss_commands+0x458>
   22968:	sub	r0, fp, #140	; 0x8c
   2296c:	mov	r1, #32
   22970:	ldr	r2, [sp, #104]	; 0x68
   22974:	ldr	r3, [sp, #96]	; 0x60
   22978:	bl	4aa0 <readstat_copy_quoted@plt>
   2297c:	subs	r6, r6, #1
   22980:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22984:	b	22c3c <readstat_parse_spss_commands+0x724>
   22988:	sub	r0, fp, #76	; 0x4c
   2298c:	b	22994 <readstat_parse_spss_commands+0x47c>
   22990:	sub	r0, fp, #108	; 0x6c
   22994:	mov	r1, #32
   22998:	ldr	r2, [sp, #104]	; 0x68
   2299c:	ldr	r3, [sp, #96]	; 0x60
   229a0:	bl	48e4 <readstat_copy@plt>
   229a4:	subs	r6, r6, #1
   229a8:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   229ac:	b	22c3c <readstat_parse_spss_commands+0x724>
   229b0:	sub	r1, fp, #76	; 0x4c
   229b4:	mov	r0, sl
   229b8:	bl	4b48 <readstat_schema_find_or_create_entry@plt>
   229bc:	ldr	r1, [sp, #100]	; 0x64
   229c0:	str	r1, [r0, #16]
   229c4:	ldr	r1, [sp, #60]	; 0x3c
   229c8:	str	r1, [r0]
   229cc:	ldr	r1, [sp, #76]	; 0x4c
   229d0:	str	r1, [r0, #4]
   229d4:	ldr	r1, [sp, #72]	; 0x48
   229d8:	str	r1, [r0, #8]
   229dc:	subs	r6, r6, #1
   229e0:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   229e4:	b	22c3c <readstat_parse_spss_commands+0x724>
   229e8:	.word	0x00000000
   229ec:	.word	0x7ff80000
   229f0:	sub	r1, fp, #76	; 0x4c
   229f4:	mov	r0, sl
   229f8:	bl	4b48 <readstat_schema_find_or_create_entry@plt>
   229fc:	add	r0, r0, #580	; 0x244
   22a00:	add	lr, sp, #1024	; 0x400
   22a04:	add	r2, lr, #116	; 0x74
   22a08:	mov	r1, #1024	; 0x400
   22a0c:	mov	r3, #1024	; 0x400
   22a10:	bl	48e4 <readstat_copy@plt>
   22a14:	subs	r6, r6, #1
   22a18:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22a1c:	b	22c3c <readstat_parse_spss_commands+0x724>
   22a20:	mov	r0, #0
   22a24:	str	r0, [sp, #84]	; 0x54
   22a28:	subs	r6, r6, #1
   22a2c:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22a30:	b	22c3c <readstat_parse_spss_commands+0x724>
   22a34:	ldr	r0, [sp, #84]	; 0x54
   22a38:	cmp	r0, #1024	; 0x400
   22a3c:	addcc	r0, r0, #1
   22a40:	str	r0, [sp, #84]	; 0x54
   22a44:	subs	r6, r6, #1
   22a48:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22a4c:	b	22c3c <readstat_parse_spss_commands+0x724>
   22a50:	sub	r0, fp, #108	; 0x6c
   22a54:	ldr	r1, [pc, #1076]	; 22e90 <readstat_parse_spss_commands+0x978>
   22a58:	add	r1, pc, r1
   22a5c:	bl	4a94 <strcasecmp@plt>
   22a60:	cmp	r0, #0
   22a64:	bne	22a70 <readstat_parse_spss_commands+0x558>
   22a68:	ldr	r0, [sp, #108]	; 0x6c
   22a6c:	str	r0, [sl, #264]	; 0x108
   22a70:	sub	r0, fp, #108	; 0x6c
   22a74:	ldr	r1, [pc, #1048]	; 22e94 <readstat_parse_spss_commands+0x97c>
   22a78:	add	r1, pc, r1
   22a7c:	bl	4a94 <strcasecmp@plt>
   22a80:	cmp	r0, #0
   22a84:	bne	227d8 <readstat_parse_spss_commands+0x2c0>
   22a88:	ldrb	r0, [sp, #1140]	; 0x474
   22a8c:	strb	r0, [sl, #272]	; 0x110
   22a90:	subs	r6, r6, #1
   22a94:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22a98:	b	22c3c <readstat_parse_spss_commands+0x724>
   22a9c:	add	r0, sp, #112	; 0x70
   22aa0:	ldr	r2, [pc, #1008]	; 22e98 <readstat_parse_spss_commands+0x980>
   22aa4:	add	r2, pc, r2
   22aa8:	mov	r1, #256	; 0x100
   22aac:	ldr	r3, [sp, #80]	; 0x50
   22ab0:	bl	4d04 <snprintf@plt>
   22ab4:	ldr	r0, [sp, #84]	; 0x54
   22ab8:	cmp	r0, #1
   22abc:	blt	22af0 <readstat_parse_spss_commands+0x5d8>
   22ac0:	ldr	r4, [sp, #84]	; 0x54
   22ac4:	sub	r1, fp, #76	; 0x4c
   22ac8:	mov	r0, sl
   22acc:	bl	4b48 <readstat_schema_find_or_create_entry@plt>
   22ad0:	movw	r1, #2168	; 0x878
   22ad4:	add	r0, r0, r1
   22ad8:	add	r2, sp, #112	; 0x70
   22adc:	mov	r1, #32
   22ae0:	mov	r3, #256	; 0x100
   22ae4:	bl	48e4 <readstat_copy@plt>
   22ae8:	subs	r4, r4, #1
   22aec:	bne	22ac4 <readstat_parse_spss_commands+0x5ac>
   22af0:	ldr	r0, [sp, #80]	; 0x50
   22af4:	add	r0, r0, #1
   22af8:	str	r0, [sp, #80]	; 0x50
   22afc:	subs	r6, r6, #1
   22b00:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22b04:	b	22c3c <readstat_parse_spss_commands+0x724>
   22b08:	add	r5, sp, #112	; 0x70
   22b0c:	ldr	r2, [pc, #904]	; 22e9c <readstat_parse_spss_commands+0x984>
   22b10:	add	r2, pc, r2
   22b14:	mov	r0, r5
   22b18:	mov	r1, #256	; 0x100
   22b1c:	ldr	r3, [sp, #80]	; 0x50
   22b20:	bl	4d04 <snprintf@plt>
   22b24:	add	lr, sp, #1024	; 0x400
   22b28:	add	r0, lr, #116	; 0x74
   22b2c:	sub	r1, fp, #140	; 0x8c
   22b30:	ldr	r2, [sp, #52]	; 0x34
   22b34:	str	r2, [sp]
   22b38:	ldr	r2, [sp, #48]	; 0x30
   22b3c:	str	r2, [sp, #4]
   22b40:	ldr	r2, [sp, #108]	; 0x6c
   22b44:	str	r2, [sp, #8]
   22b48:	ldr	r2, [sp, #92]	; 0x5c
   22b4c:	str	r2, [sp, #12]
   22b50:	str	r1, [sp, #16]
   22b54:	str	r0, [sp, #20]
   22b58:	ldr	r0, [sp, #56]	; 0x38
   22b5c:	str	r0, [sp, #24]
   22b60:	ldr	r0, [sp, #40]	; 0x28
   22b64:	mov	r1, r5
   22b68:	ldr	r2, [sp, #88]	; 0x58
   22b6c:	vorr	d0, d8, d8
   22b70:	bl	4ab8 <submit_value_label@plt>
   22b74:	cmp	r0, #0
   22b78:	beq	227d8 <readstat_parse_spss_commands+0x2c0>
   22b7c:	b	22e1c <readstat_parse_spss_commands+0x904>
   22b80:	ldr	r0, [sp, #64]	; 0x40
   22b84:	add	r0, r0, #1
   22b88:	str	r0, [sp, #64]	; 0x40
   22b8c:	mov	r0, r8
   22b90:	str	r8, [sp, #44]	; 0x2c
   22b94:	subs	r6, r6, #1
   22b98:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22b9c:	b	22c3c <readstat_parse_spss_commands+0x724>
   22ba0:	str	r8, [sp, #104]	; 0x68
   22ba4:	subs	r6, r6, #1
   22ba8:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22bac:	b	22c3c <readstat_parse_spss_commands+0x724>
   22bb0:	ldr	r0, [sp, #108]	; 0x6c
   22bb4:	sub	r0, r0, #1
   22bb8:	str	r0, [sp, #60]	; 0x3c
   22bbc:	subs	r6, r6, #1
   22bc0:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22bc4:	b	22c3c <readstat_parse_spss_commands+0x724>
   22bc8:	mvn	r0, #0
   22bcc:	b	22c30 <readstat_parse_spss_commands+0x718>
   22bd0:	ldr	r0, [sp, #108]	; 0x6c
   22bd4:	rsbs	r0, r0, #0
   22bd8:	ldr	r1, [sp, #92]	; 0x5c
   22bdc:	rsc	r1, r1, #0
   22be0:	b	22bec <readstat_parse_spss_commands+0x6d4>
   22be4:	ldr	r0, [sp, #108]	; 0x6c
   22be8:	ldr	r1, [sp, #92]	; 0x5c
   22bec:	bl	24f00 <__aeabi_ul2d>
   22bf0:	mov	r2, #0
   22bf4:	str	r2, [sp, #88]	; 0x58
   22bf8:	vmov	d8, r0, r1
   22bfc:	subs	r6, r6, #1
   22c00:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22c04:	b	22c3c <readstat_parse_spss_commands+0x724>
   22c08:	ldr	r0, [sp, #108]	; 0x6c
   22c0c:	str	r0, [sp, #52]	; 0x34
   22c10:	ldr	r0, [sp, #92]	; 0x5c
   22c14:	str	r0, [sp, #48]	; 0x30
   22c18:	subs	r6, r6, #1
   22c1c:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22c20:	b	22c3c <readstat_parse_spss_commands+0x724>
   22c24:	mov	r0, #2
   22c28:	b	22c30 <readstat_parse_spss_commands+0x718>
   22c2c:	mov	r0, #1
   22c30:	str	r0, [sp, #88]	; 0x58
   22c34:	subs	r6, r6, #1
   22c38:	bne	227e0 <readstat_parse_spss_commands+0x2c8>
   22c3c:	ldr	r0, [pc, #604]	; 22ea0 <readstat_parse_spss_commands+0x988>
   22c40:	add	r0, pc, r0
   22c44:	add	r0, r0, r7, lsl #1
   22c48:	ldrsh	r9, [r0]
   22c4c:	uxth	r0, r9
   22c50:	cmp	r0, #0
   22c54:	beq	22d7c <readstat_parse_spss_commands+0x864>
   22c58:	add	r8, r8, #1
   22c5c:	ldr	r0, [sp, #68]	; 0x44
   22c60:	cmp	r8, r0
   22c64:	mvn	r6, #1
   22c68:	bne	22680 <readstat_parse_spss_commands+0x168>
   22c6c:	b	22cd0 <readstat_parse_spss_commands+0x7b8>
   22c70:	mov	sl, #0
   22c74:	cmp	r6, #0
   22c78:	movne	r0, #1
   22c7c:	strne	r0, [r6]
   22c80:	b	22e60 <readstat_parse_spss_commands+0x948>
   22c84:	mov	r5, #15
   22c88:	mov	sl, #0
   22c8c:	b	22e2c <readstat_parse_spss_commands+0x914>
   22c90:	mov	r5, #3
   22c94:	mov	sl, #0
   22c98:	b	22e2c <readstat_parse_spss_commands+0x914>
   22c9c:	mov	r0, #5
   22ca0:	str	r0, [sp, #100]	; 0x64
   22ca4:	mov	r0, #0
   22ca8:	str	r0, [sp, #64]	; 0x40
   22cac:	mov	r9, #628	; 0x274
   22cb0:	mov	r0, r8
   22cb4:	str	r8, [sp, #44]	; 0x2c
   22cb8:	mov	r0, #0
   22cbc:	str	r0, [sp, #76]	; 0x4c
   22cc0:	mov	r0, #0
   22cc4:	str	r0, [sp, #60]	; 0x3c
   22cc8:	mov	r0, #0
   22ccc:	str	r0, [sp, #72]	; 0x48
   22cd0:	ldr	r0, [sp, #68]	; 0x44
   22cd4:	cmp	r8, r0
   22cd8:	bne	22d74 <readstat_parse_spss_commands+0x85c>
   22cdc:	ldr	r0, [pc, #448]	; 22ea4 <readstat_parse_spss_commands+0x98c>
   22ce0:	add	r0, pc, r0
   22ce4:	ldrb	r0, [r0, r9]
   22ce8:	ldr	r1, [pc, #440]	; 22ea8 <readstat_parse_spss_commands+0x990>
   22cec:	add	r1, pc, r1
   22cf0:	ldrb	r4, [r1, r0]
   22cf4:	cmp	r4, #0
   22cf8:	beq	22d74 <readstat_parse_spss_commands+0x85c>
   22cfc:	add	r0, r0, r1
   22d00:	add	r5, r0, #1
   22d04:	sub	r6, fp, #76	; 0x4c
   22d08:	b	22d2c <readstat_parse_spss_commands+0x814>
   22d0c:	ldr	r0, [sp, #64]	; 0x40
   22d10:	add	r0, r0, #1
   22d14:	str	r0, [sp, #64]	; 0x40
   22d18:	mov	r0, r8
   22d1c:	str	r8, [sp, #44]	; 0x2c
   22d20:	add	r5, r5, #1
   22d24:	cmp	r4, #0
   22d28:	beq	22d74 <readstat_parse_spss_commands+0x85c>
   22d2c:	sub	r4, r4, #1
   22d30:	ldrb	r0, [r5]
   22d34:	cmp	r0, #19
   22d38:	beq	22d0c <readstat_parse_spss_commands+0x7f4>
   22d3c:	cmp	r0, #8
   22d40:	bne	22d20 <readstat_parse_spss_commands+0x808>
   22d44:	mov	r0, sl
   22d48:	mov	r1, r6
   22d4c:	bl	4b48 <readstat_schema_find_or_create_entry@plt>
   22d50:	ldr	r1, [sp, #100]	; 0x64
   22d54:	str	r1, [r0, #16]
   22d58:	ldr	r1, [sp, #60]	; 0x3c
   22d5c:	str	r1, [r0]
   22d60:	ldr	r1, [sp, #76]	; 0x4c
   22d64:	str	r1, [r0, #4]
   22d68:	ldr	r1, [sp, #72]	; 0x48
   22d6c:	str	r1, [r0, #8]
   22d70:	b	22d20 <readstat_parse_spss_commands+0x808>
   22d74:	cmp	r9, #628	; 0x274
   22d78:	bge	22dbc <readstat_parse_spss_commands+0x8a4>
   22d7c:	ldr	r0, [sp, #68]	; 0x44
   22d80:	cmp	r8, r0
   22d84:	beq	22ddc <readstat_parse_spss_commands+0x8c4>
   22d88:	ldr	r0, [sp, #44]	; 0x2c
   22d8c:	ldrb	r0, [r8], -r0
   22d90:	add	r1, r8, #1
   22d94:	str	r1, [sp]
   22d98:	str	r0, [sp, #4]
   22d9c:	ldr	r0, [sp, #64]	; 0x40
   22da0:	add	r3, r0, #1
   22da4:	add	r0, sp, #112	; 0x70
   22da8:	ldr	r2, [pc, #256]	; 22eb0 <readstat_parse_spss_commands+0x998>
   22dac:	add	r2, pc, r2
   22db0:	mov	r1, #1024	; 0x400
   22db4:	bl	4d04 <snprintf@plt>
   22db8:	b	22df0 <readstat_parse_spss_commands+0x8d8>
   22dbc:	ldr	r7, [sp, #40]	; 0x28
   22dc0:	mov	r0, r7
   22dc4:	mov	r1, sl
   22dc8:	ldr	r2, [sp, #56]	; 0x38
   22dcc:	bl	49b0 <submit_columns@plt>
   22dd0:	mov	r5, r0
   22dd4:	ldr	r6, [sp, #36]	; 0x24
   22dd8:	b	22e28 <readstat_parse_spss_commands+0x910>
   22ddc:	add	r0, sp, #112	; 0x70
   22de0:	ldr	r1, [pc, #196]	; 22eac <readstat_parse_spss_commands+0x994>
   22de4:	add	r1, pc, r1
   22de8:	mov	r2, #67	; 0x43
   22dec:	bl	4998 <memcpy@plt>
   22df0:	ldr	r6, [sp, #36]	; 0x24
   22df4:	ldr	r7, [sp, #40]	; 0x28
   22df8:	ldr	r8, [sp, #32]
   22dfc:	ldr	r2, [r7, #24]
   22e00:	cmp	r2, #0
   22e04:	beq	22e14 <readstat_parse_spss_commands+0x8fc>
   22e08:	add	r0, sp, #112	; 0x70
   22e0c:	ldr	r1, [sp, #56]	; 0x38
   22e10:	blx	r2
   22e14:	mov	r5, #5
   22e18:	b	22e2c <readstat_parse_spss_commands+0x914>
   22e1c:	mov	r5, r0
   22e20:	ldr	r6, [sp, #36]	; 0x24
   22e24:	ldr	r7, [sp, #40]	; 0x28
   22e28:	ldr	r8, [sp, #32]
   22e2c:	ldr	r0, [r7, #32]
   22e30:	ldr	r1, [r0, #4]
   22e34:	ldr	r0, [r0, #20]
   22e38:	blx	r1
   22e3c:	mov	r0, r8
   22e40:	bl	4938 <free@plt>
   22e44:	cmp	r5, #0
   22e48:	beq	22e60 <readstat_parse_spss_commands+0x948>
   22e4c:	cmp	r6, #0
   22e50:	strne	r5, [r6]
   22e54:	mov	r0, sl
   22e58:	bl	4a1c <readstat_schema_free@plt>
   22e5c:	mov	sl, #0
   22e60:	mov	r0, sl
   22e64:	sub	sp, fp, #40	; 0x28
   22e68:	vpop	{d8}
   22e6c:	add	sp, sp, #4
   22e70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22e74:	.word	0x0000e61a
   22e78:	.word	0x0000dc2e
   22e7c:	.word	0x0000d042
   22e80:	.word	0x0000e102
   22e84:	.word	0x0000e7fa
   22e88:	.word	0x00010396
   22e8c:	.word	0x00011054
   22e90:	.word	0x000110d3
   22e94:	.word	0x000110bd
   22e98:	.word	0x0000370f
   22e9c:	.word	0x000036a3
   22ea0:	.word	0x0000e54e
   22ea4:	.word	0x00010bd3
   22ea8:	.word	0x00010b24
   22eac:	.word	0x00010d9c
   22eb0:	.word	0x00010d94

00022eb4 <readstat_schema_free>:
   22eb4:	cmp	r0, #0
   22eb8:	bxeq	lr
   22ebc:	push	{r4, sl, fp, lr}
   22ec0:	add	fp, sp, #8
   22ec4:	mov	r4, r0
   22ec8:	ldr	r0, [r0, #276]	; 0x114
   22ecc:	bl	4938 <free@plt>
   22ed0:	mov	r0, r4
   22ed4:	pop	{r4, sl, fp, lr}
   22ed8:	b	4938 <free@plt>

00022edc <readstat_schema_find_or_create_entry>:
   22edc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22ee0:	add	fp, sp, #24
   22ee4:	mov	r9, r1
   22ee8:	mov	r4, r0
   22eec:	ldr	r7, [r0, #268]	; 0x10c
   22ef0:	cmp	r7, #1
   22ef4:	blt	22f64 <readstat_schema_find_or_create_entry+0x88>
   22ef8:	ldr	r8, [r4, #276]	; 0x114
   22efc:	add	r0, r8, #24
   22f00:	mov	r1, r9
   22f04:	bl	4878 <strcmp@plt>
   22f08:	cmp	r0, #0
   22f0c:	beq	22f48 <readstat_schema_find_or_create_entry+0x6c>
   22f10:	movw	r0, #2232	; 0x8b8
   22f14:	add	r6, r8, r0
   22f18:	mov	r5, #0
   22f1c:	add	r5, r5, #1
   22f20:	ldr	r7, [r4, #268]	; 0x10c
   22f24:	cmp	r5, r7
   22f28:	bge	22f64 <readstat_schema_find_or_create_entry+0x88>
   22f2c:	mov	r0, r6
   22f30:	mov	r1, r9
   22f34:	bl	4878 <strcmp@plt>
   22f38:	add	r6, r6, #2208	; 0x8a0
   22f3c:	cmp	r0, #0
   22f40:	bne	22f1c <readstat_schema_find_or_create_entry+0x40>
   22f44:	b	22f4c <readstat_schema_find_or_create_entry+0x70>
   22f48:	mov	r5, #0
   22f4c:	mov	r0, #2208	; 0x8a0
   22f50:	mla	r6, r5, r0, r8
   22f54:	cmp	r6, #0
   22f58:	beq	22f64 <readstat_schema_find_or_create_entry+0x88>
   22f5c:	mov	r0, r6
   22f60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   22f64:	mov	r5, #2208	; 0x8a0
   22f68:	mul	r0, r7, r5
   22f6c:	add	r1, r0, #2208	; 0x8a0
   22f70:	ldr	r0, [r4, #276]	; 0x114
   22f74:	bl	4a64 <realloc@plt>
   22f78:	str	r0, [r4, #276]	; 0x114
   22f7c:	ldr	r1, [r4, #268]	; 0x10c
   22f80:	mla	r6, r1, r5, r0
   22f84:	mov	r0, r6
   22f88:	mov	r1, #0
   22f8c:	mov	r2, #2208	; 0x8a0
   22f90:	bl	4d28 <memset@plt>
   22f94:	add	r7, r6, #24
   22f98:	mov	r0, r9
   22f9c:	bl	4c8c <strlen@plt>
   22fa0:	mov	r3, r0
   22fa4:	mov	r0, r7
   22fa8:	mov	r1, #300	; 0x12c
   22fac:	mov	r2, r9
   22fb0:	bl	48e4 <readstat_copy@plt>
   22fb4:	mov	r0, #46	; 0x2e
   22fb8:	strb	r0, [r6, #2200]	; 0x898
   22fbc:	ldr	r0, [r4, #268]	; 0x10c
   22fc0:	add	r1, r0, #1
   22fc4:	str	r1, [r4, #268]	; 0x10c
   22fc8:	str	r0, [r6, #20]
   22fcc:	mov	r0, r6
   22fd0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00022fd4 <readstat_parse_stata_dictionary>:
   22fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22fd8:	add	fp, sp, #28
   22fdc:	sub	sp, sp, #252	; 0xfc
   22fe0:	sub	sp, sp, #3072	; 0xc00
   22fe4:	mov	r9, r3
   22fe8:	mov	r6, r2
   22fec:	mov	r2, r1
   22ff0:	mov	r7, r0
   22ff4:	ldr	r0, [r0, #32]
   22ff8:	ldr	r3, [r0]
   22ffc:	ldr	r1, [r0, #20]
   23000:	mov	r0, r2
   23004:	blx	r3
   23008:	cmn	r0, #1
   2300c:	beq	235b8 <readstat_parse_stata_dictionary+0x5e4>
   23010:	ldr	r0, [r7, #32]
   23014:	ldr	r3, [r0, #8]
   23018:	ldr	r2, [r0, #20]
   2301c:	mov	sl, #0
   23020:	mov	r0, #0
   23024:	mov	r1, #2
   23028:	blx	r3
   2302c:	cmn	r0, #1
   23030:	beq	235cc <readstat_parse_stata_dictionary+0x5f8>
   23034:	mov	r4, r0
   23038:	ldr	r0, [r7, #32]
   2303c:	ldr	r3, [r0, #8]
   23040:	ldr	r2, [r0, #20]
   23044:	mov	r0, #0
   23048:	mov	r1, #0
   2304c:	blx	r3
   23050:	mov	r0, r4
   23054:	bl	4b90 <malloc@plt>
   23058:	mov	sl, r0
   2305c:	ldr	r0, [r7, #32]
   23060:	ldr	r3, [r0, #12]
   23064:	ldr	r2, [r0, #20]
   23068:	mov	r0, sl
   2306c:	mov	r1, r4
   23070:	blx	r3
   23074:	mov	r5, #1
   23078:	mov	r0, #1
   2307c:	mov	r1, #280	; 0x118
   23080:	bl	47d0 <calloc@plt>
   23084:	cmp	r0, #0
   23088:	beq	235d8 <readstat_parse_stata_dictionary+0x604>
   2308c:	str	r6, [sp, #24]
   23090:	str	r7, [sp, #40]	; 0x28
   23094:	str	r9, [sp, #16]
   23098:	add	r1, sl, r4
   2309c:	str	r1, [sp, #60]	; 0x3c
   230a0:	str	r5, [r0, #256]	; 0x100
   230a4:	cmp	r4, #0
   230a8:	mov	r5, r0
   230ac:	str	sl, [sp, #12]
   230b0:	beq	235e4 <readstat_parse_stata_dictionary+0x610>
   230b4:	str	r5, [sp, #56]	; 0x38
   230b8:	add	lr, sp, #1024	; 0x400
   230bc:	add	r0, lr, #88	; 0x58
   230c0:	add	r1, r0, #16
   230c4:	str	r1, [sp, #20]
   230c8:	add	r1, r0, #24
   230cc:	str	r1, [sp, #32]
   230d0:	add	r0, r0, #580	; 0x244
   230d4:	str	r0, [sp, #28]
   230d8:	mov	r0, #1
   230dc:	mov	r1, #0
   230e0:	str	r1, [sp, #68]	; 0x44
   230e4:	mvn	r4, #1
   230e8:	ldr	r9, [pc, #1544]	; 236f8 <readstat_parse_stata_dictionary+0x724>
   230ec:	add	r9, pc, r9
   230f0:	mov	r1, #0
   230f4:	str	r1, [sp, #48]	; 0x30
   230f8:	mov	r5, sl
   230fc:	mov	r1, #0
   23100:	str	r1, [sp, #80]	; 0x50
   23104:	mov	r1, #0
   23108:	str	r1, [sp, #76]	; 0x4c
   2310c:	mov	r8, #0
   23110:	mov	r1, #0
   23114:	str	r1, [sp, #72]	; 0x48
   23118:	mov	r1, #0
   2311c:	str	r1, [sp, #64]	; 0x40
   23120:	mov	r1, #0
   23124:	str	r1, [sp, #52]	; 0x34
   23128:	str	sl, [sp, #36]	; 0x24
   2312c:	ldr	r1, [pc, #1480]	; 236fc <readstat_parse_stata_dictionary+0x728>
   23130:	add	r1, pc, r1
   23134:	ldrb	r2, [r1, r0]
   23138:	ldr	r1, [pc, #1472]	; 23700 <readstat_parse_stata_dictionary+0x72c>
   2313c:	add	r1, pc, r1
   23140:	add	r1, r1, r0, lsl #1
   23144:	ldrsh	r1, [r1]
   23148:	ldr	r3, [pc, #1460]	; 23704 <readstat_parse_stata_dictionary+0x730>
   2314c:	add	r3, pc, r3
   23150:	add	lr, r3, r1
   23154:	ldr	r1, [pc, #1452]	; 23708 <readstat_parse_stata_dictionary+0x734>
   23158:	add	r1, pc, r1
   2315c:	add	r1, r1, r0, lsl #1
   23160:	ldrsh	r6, [r1]
   23164:	cmp	r2, #0
   23168:	beq	231c8 <readstat_parse_stata_dictionary+0x1f4>
   2316c:	str	r6, [sp, #84]	; 0x54
   23170:	add	ip, lr, r2
   23174:	sub	r6, ip, #1
   23178:	cmp	r6, lr
   2317c:	bcc	231bc <readstat_parse_stata_dictionary+0x1e8>
   23180:	ldrb	r7, [sl]
   23184:	mov	r3, lr
   23188:	b	23198 <readstat_parse_stata_dictionary+0x1c4>
   2318c:	sub	r6, r1, #1
   23190:	cmp	r6, r3
   23194:	bcc	231bc <readstat_parse_stata_dictionary+0x1e8>
   23198:	sub	r5, r6, r3
   2319c:	mov	r1, r3
   231a0:	ldrb	r5, [r1, r5, asr #1]!
   231a4:	cmp	r7, r5
   231a8:	bcc	2318c <readstat_parse_stata_dictionary+0x1b8>
   231ac:	bls	2323c <readstat_parse_stata_dictionary+0x268>
   231b0:	add	r3, r1, #1
   231b4:	cmp	r6, r3
   231b8:	bcs	23198 <readstat_parse_stata_dictionary+0x1c4>
   231bc:	ldr	r6, [sp, #84]	; 0x54
   231c0:	add	r6, r2, r6
   231c4:	b	231cc <readstat_parse_stata_dictionary+0x1f8>
   231c8:	mov	ip, lr
   231cc:	ldr	r1, [pc, #1336]	; 2370c <readstat_parse_stata_dictionary+0x738>
   231d0:	add	r1, pc, r1
   231d4:	ldrb	r0, [r1, r0]
   231d8:	cmp	r0, #0
   231dc:	beq	23248 <readstat_parse_stata_dictionary+0x274>
   231e0:	add	r1, ip, r0, lsl #1
   231e4:	sub	r2, r1, #2
   231e8:	cmp	r2, ip
   231ec:	bcc	2325c <readstat_parse_stata_dictionary+0x288>
   231f0:	ldrb	r3, [sl]
   231f4:	mov	r5, ip
   231f8:	b	23208 <readstat_parse_stata_dictionary+0x234>
   231fc:	sub	r2, r1, #2
   23200:	cmp	r2, r5
   23204:	bcc	2325c <readstat_parse_stata_dictionary+0x288>
   23208:	sub	r1, r2, r5
   2320c:	and	r7, r4, r1, asr #1
   23210:	mov	r1, r5
   23214:	ldrb	r7, [r1, r7]!
   23218:	cmp	r3, r7
   2321c:	bcc	231fc <readstat_parse_stata_dictionary+0x228>
   23220:	ldrb	r7, [r1, #1]
   23224:	cmp	r3, r7
   23228:	bls	23254 <readstat_parse_stata_dictionary+0x280>
   2322c:	add	r5, r1, #2
   23230:	cmp	r2, r5
   23234:	bcs	23208 <readstat_parse_stata_dictionary+0x234>
   23238:	b	2325c <readstat_parse_stata_dictionary+0x288>
   2323c:	ldr	r0, [sp, #84]	; 0x54
   23240:	sub	r0, r0, lr
   23244:	add	r6, r0, r1
   23248:	ldr	r5, [sp, #56]	; 0x38
   2324c:	ldr	r7, [sp, #80]	; 0x50
   23250:	b	23268 <readstat_parse_stata_dictionary+0x294>
   23254:	sub	r0, r1, ip
   23258:	asr	r0, r0, #1
   2325c:	ldr	r5, [sp, #56]	; 0x38
   23260:	ldr	r7, [sp, #80]	; 0x50
   23264:	add	r6, r0, r6
   23268:	ldr	r0, [pc, #1184]	; 23710 <readstat_parse_stata_dictionary+0x73c>
   2326c:	add	r0, pc, r0
   23270:	ldrb	r0, [r0, r6]
   23274:	cmp	r0, #0
   23278:	str	r6, [sp, #84]	; 0x54
   2327c:	beq	23558 <readstat_parse_stata_dictionary+0x584>
   23280:	mov	r1, r9
   23284:	ldrb	r9, [r9, r0]
   23288:	cmp	r9, #0
   2328c:	beq	23558 <readstat_parse_stata_dictionary+0x584>
   23290:	add	r0, r1, r0
   23294:	add	r6, r0, #1
   23298:	b	232ac <readstat_parse_stata_dictionary+0x2d8>
   2329c:	mov	r7, sl
   232a0:	subs	r9, r9, #1
   232a4:	add	r6, r6, #1
   232a8:	beq	23558 <readstat_parse_stata_dictionary+0x584>
   232ac:	ldrb	r0, [r6]
   232b0:	cmp	r0, #28
   232b4:	bhi	232a0 <readstat_parse_stata_dictionary+0x2cc>
   232b8:	add	r1, pc, #4
   232bc:	ldr	r0, [r1, r0, lsl #2]
   232c0:	add	pc, r1, r0
   232c4:	.word	0x00000080
   232c8:	.word	0x00000088
   232cc:	.word	0x0000009c
   232d0:	.word	0x000000cc
   232d4:	.word	0x00000138
   232d8:	.word	0x00000144
   232dc:	.word	0x00000150
   232e0:	.word	0xffffffd8
   232e4:	.word	0x00000074
   232e8:	.word	0xffffffd8
   232ec:	.word	0x00000074
   232f0:	.word	0xffffffd8
   232f4:	.word	0x00000074
   232f8:	.word	0x00000168
   232fc:	.word	0x00000180
   23300:	.word	0x00000188
   23304:	.word	0x00000194
   23308:	.word	0x000001a0
   2330c:	.word	0x000001b0
   23310:	.word	0x000001c4
   23314:	.word	0x000001cc
   23318:	.word	0x000001d8
   2331c:	.word	0x000001e4
   23320:	.word	0x000001f0
   23324:	.word	0x000001fc
   23328:	.word	0x000000c0
   2332c:	.word	0x00000208
   23330:	.word	0x00000218
   23334:	.word	0x00000220
   23338:	sub	r0, sl, r7
   2333c:	str	r0, [sp, #76]	; 0x4c
   23340:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   23344:	mov	r8, #0
   23348:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   2334c:	ldrb	r0, [sl]
   23350:	add	r1, r8, r8, lsl #2
   23354:	add	r0, r0, r1, lsl #1
   23358:	sub	r8, r0, #48	; 0x30
   2335c:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   23360:	add	lr, sp, #1024	; 0x400
   23364:	add	r0, lr, #88	; 0x58
   23368:	mov	r1, #0
   2336c:	mov	r2, #2208	; 0x8a0
   23370:	bl	4d28 <memset@plt>
   23374:	mov	r0, #46	; 0x2e
   23378:	strb	r0, [sp, #3312]	; 0xcf0
   2337c:	ldr	r0, [sp, #68]	; 0x44
   23380:	str	r0, [sp, #1132]	; 0x46c
   23384:	mov	r0, #5
   23388:	str	r0, [sp, #1128]	; 0x468
   2338c:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   23390:	str	r7, [sp, #80]	; 0x50
   23394:	str	r8, [sp, #44]	; 0x2c
   23398:	mov	r4, r5
   2339c:	ldr	r5, [sp, #64]	; 0x40
   233a0:	str	r5, [sp, #1116]	; 0x45c
   233a4:	ldr	r0, [sp, #72]	; 0x48
   233a8:	str	r0, [sp, #1112]	; 0x458
   233ac:	ldr	r8, [sp, #1120]	; 0x460
   233b0:	ldr	r0, [sp, #40]	; 0x28
   233b4:	ldr	r7, [r0, #8]
   233b8:	cmp	r7, #0
   233bc:	beq	233ec <readstat_parse_stata_dictionary+0x418>
   233c0:	ldr	r0, [sp, #48]	; 0x30
   233c4:	str	r0, [sp, #3276]	; 0xccc
   233c8:	ldr	r0, [sp, #68]	; 0x44
   233cc:	ldr	r1, [sp, #20]
   233d0:	mov	r2, #0
   233d4:	ldr	r3, [sp, #24]
   233d8:	blx	r7
   233dc:	cmp	r0, #2
   233e0:	beq	234f0 <readstat_parse_stata_dictionary+0x51c>
   233e4:	cmp	r0, #1
   233e8:	beq	236dc <readstat_parse_stata_dictionary+0x708>
   233ec:	ldr	r0, [sp, #48]	; 0x30
   233f0:	add	r0, r0, #1
   233f4:	str	r0, [sp, #48]	; 0x30
   233f8:	b	234f8 <readstat_parse_stata_dictionary+0x524>
   233fc:	mov	r0, r5
   23400:	mov	r1, #255	; 0xff
   23404:	b	2341c <readstat_parse_stata_dictionary+0x448>
   23408:	ldr	r0, [sp, #32]
   2340c:	mov	r1, #300	; 0x12c
   23410:	b	2341c <readstat_parse_stata_dictionary+0x448>
   23414:	ldr	r0, [sp, #28]
   23418:	mov	r1, #1024	; 0x400
   2341c:	mov	r2, r7
   23420:	ldr	r3, [sp, #76]	; 0x4c
   23424:	bl	48e4 <readstat_copy@plt>
   23428:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   2342c:	ldr	r0, [sp, #52]	; 0x34
   23430:	add	r0, r0, #1
   23434:	str	r0, [sp, #52]	; 0x34
   23438:	mov	r0, sl
   2343c:	str	sl, [sp, #36]	; 0x24
   23440:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   23444:	str	r8, [r5, #256]	; 0x100
   23448:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   2344c:	sub	r0, r8, #1
   23450:	str	r0, [sp, #72]	; 0x48
   23454:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   23458:	sub	r0, r8, #1
   2345c:	str	r0, [sp, #64]	; 0x40
   23460:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   23464:	ldr	r0, [sp, #72]	; 0x48
   23468:	add	r0, r0, #1
   2346c:	str	r0, [sp, #72]	; 0x48
   23470:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   23474:	ldr	r0, [sp, #72]	; 0x48
   23478:	add	r0, r8, r0
   2347c:	sub	r0, r0, #1
   23480:	str	r0, [sp, #72]	; 0x48
   23484:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   23488:	str	r8, [r5, #260]	; 0x104
   2348c:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   23490:	sub	r0, r8, #1
   23494:	str	r0, [r5, #264]	; 0x108
   23498:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   2349c:	mov	r0, #1
   234a0:	str	r0, [sp, #1128]	; 0x468
   234a4:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   234a8:	mov	r0, #2
   234ac:	str	r0, [sp, #1128]	; 0x468
   234b0:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   234b4:	mov	r0, #3
   234b8:	str	r0, [sp, #1128]	; 0x468
   234bc:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   234c0:	mov	r0, #4
   234c4:	str	r0, [sp, #1128]	; 0x468
   234c8:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   234cc:	str	r8, [sp, #2724]	; 0xaa4
   234d0:	mov	r0, #0
   234d4:	str	r0, [sp, #1128]	; 0x468
   234d8:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   234dc:	str	r8, [sp, #1120]	; 0x460
   234e0:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   234e4:	mov	r0, #44	; 0x2c
   234e8:	strb	r0, [sp, #3312]	; 0xcf0
   234ec:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   234f0:	mov	r0, #1
   234f4:	str	r0, [sp, #1124]	; 0x464
   234f8:	add	r5, r8, r5
   234fc:	str	r5, [sp, #64]	; 0x40
   23500:	mov	r5, r4
   23504:	ldr	r1, [r4, #268]	; 0x10c
   23508:	ldr	r0, [r4, #276]	; 0x114
   2350c:	mov	r4, #2208	; 0x8a0
   23510:	mul	r1, r1, r4
   23514:	add	r1, r1, #2208	; 0x8a0
   23518:	bl	4a64 <realloc@plt>
   2351c:	str	r0, [r5, #276]	; 0x114
   23520:	ldr	r1, [r5, #268]	; 0x10c
   23524:	add	r2, r1, #1
   23528:	str	r2, [r5, #268]	; 0x10c
   2352c:	mla	r0, r1, r4, r0
   23530:	add	lr, sp, #1024	; 0x400
   23534:	add	r1, lr, #88	; 0x58
   23538:	mov	r2, #2208	; 0x8a0
   2353c:	bl	4998 <memcpy@plt>
   23540:	ldr	r0, [sp, #68]	; 0x44
   23544:	add	r0, r0, #1
   23548:	str	r0, [sp, #68]	; 0x44
   2354c:	ldr	r8, [sp, #44]	; 0x2c
   23550:	ldr	r7, [sp, #80]	; 0x50
   23554:	b	232a0 <readstat_parse_stata_dictionary+0x2cc>
   23558:	ldr	r0, [pc, #436]	; 23714 <readstat_parse_stata_dictionary+0x740>
   2355c:	add	r0, pc, r0
   23560:	ldr	r1, [sp, #84]	; 0x54
   23564:	ldrb	r0, [r0, r1]
   23568:	cmp	r0, #0
   2356c:	beq	235f4 <readstat_parse_stata_dictionary+0x620>
   23570:	str	r7, [sp, #80]	; 0x50
   23574:	mov	r2, sl
   23578:	add	r2, sl, #1
   2357c:	ldr	r1, [sp, #60]	; 0x3c
   23580:	mov	sl, r2
   23584:	cmp	r2, r1
   23588:	mvn	r4, #1
   2358c:	ldr	r9, [pc, #388]	; 23718 <readstat_parse_stata_dictionary+0x744>
   23590:	add	r9, pc, r9
   23594:	bne	2312c <readstat_parse_stata_dictionary+0x158>
   23598:	cmp	r0, #155	; 0x9b
   2359c:	ldr	r5, [sp, #56]	; 0x38
   235a0:	bls	235f4 <readstat_parse_stata_dictionary+0x620>
   235a4:	mov	r6, #0
   235a8:	ldr	r9, [sp, #16]
   235ac:	ldr	r7, [sp, #40]	; 0x28
   235b0:	ldr	sl, [sp, #12]
   235b4:	b	2369c <readstat_parse_stata_dictionary+0x6c8>
   235b8:	mov	r5, #0
   235bc:	cmp	r9, #0
   235c0:	movne	r0, #1
   235c4:	strne	r0, [r9]
   235c8:	b	236d0 <readstat_parse_stata_dictionary+0x6fc>
   235cc:	mov	r6, #15
   235d0:	mov	r5, #0
   235d4:	b	2369c <readstat_parse_stata_dictionary+0x6c8>
   235d8:	mov	r6, #3
   235dc:	mov	r5, #0
   235e0:	b	2369c <readstat_parse_stata_dictionary+0x6c8>
   235e4:	mov	r0, #0
   235e8:	str	r0, [sp, #52]	; 0x34
   235ec:	mov	r0, sl
   235f0:	str	sl, [sp, #36]	; 0x24
   235f4:	ldr	r0, [sp, #60]	; 0x3c
   235f8:	cmp	sl, r0
   235fc:	beq	23634 <readstat_parse_stata_dictionary+0x660>
   23600:	ldr	r0, [sp, #36]	; 0x24
   23604:	ldrb	r0, [sl], -r0
   23608:	add	r1, sl, #1
   2360c:	str	r1, [sp]
   23610:	str	r0, [sp, #4]
   23614:	ldr	r0, [sp, #52]	; 0x34
   23618:	add	r3, r0, #1
   2361c:	add	r0, sp, #88	; 0x58
   23620:	ldr	r2, [pc, #244]	; 2371c <readstat_parse_stata_dictionary+0x748>
   23624:	add	r2, pc, r2
   23628:	mov	r1, #1024	; 0x400
   2362c:	bl	4d04 <snprintf@plt>
   23630:	b	23674 <readstat_parse_stata_dictionary+0x6a0>
   23634:	ldr	r0, [pc, #184]	; 236f4 <readstat_parse_stata_dictionary+0x720>
   23638:	add	r0, pc, r0
   2363c:	add	r1, r0, #32
   23640:	add	r2, sp, #88	; 0x58
   23644:	mov	r3, #43	; 0x2b
   23648:	vld1.64	{d16-d17}, [r1]
   2364c:	add	r1, r2, #32
   23650:	add	r7, r0, #16
   23654:	vld1.64	{d18-d19}, [r0], r3
   23658:	vld1.64	{d20-d21}, [r7]
   2365c:	vld1.8	{d22-d23}, [r0]
   23660:	vst1.64	{d16-d17}, [r1]
   23664:	add	r0, r2, #16
   23668:	vst1.64	{d20-d21}, [r0]
   2366c:	vst1.64	{d18-d19}, [r2], r3
   23670:	vst1.8	{d22-d23}, [r2]
   23674:	ldr	r9, [sp, #16]
   23678:	ldr	r7, [sp, #40]	; 0x28
   2367c:	ldr	sl, [sp, #12]
   23680:	ldr	r1, [sp, #24]
   23684:	ldr	r2, [r7, #24]
   23688:	cmp	r2, #0
   2368c:	beq	23698 <readstat_parse_stata_dictionary+0x6c4>
   23690:	add	r0, sp, #88	; 0x58
   23694:	blx	r2
   23698:	mov	r6, #5
   2369c:	ldr	r0, [r7, #32]
   236a0:	ldr	r1, [r0, #4]
   236a4:	ldr	r0, [r0, #20]
   236a8:	blx	r1
   236ac:	mov	r0, sl
   236b0:	bl	4938 <free@plt>
   236b4:	cmp	r6, #0
   236b8:	beq	236d0 <readstat_parse_stata_dictionary+0x6fc>
   236bc:	cmp	r9, #0
   236c0:	strne	r6, [r9]
   236c4:	mov	r0, r5
   236c8:	bl	4a1c <readstat_schema_free@plt>
   236cc:	mov	r5, #0
   236d0:	mov	r0, r5
   236d4:	sub	sp, fp, #28
   236d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   236dc:	mov	r6, #4
   236e0:	ldr	r9, [sp, #16]
   236e4:	ldr	r7, [sp, #40]	; 0x28
   236e8:	ldr	sl, [sp, #12]
   236ec:	mov	r5, r4
   236f0:	b	2369c <readstat_parse_stata_dictionary+0x6c8>
   236f4:	.word	0x00011390
   236f8:	.word	0x000117c7
   236fc:	.word	0x00011042
   23700:	.word	0x00010dc2
   23704:	.word	0x00010a78
   23708:	.word	0x00010ee0
   2370c:	.word	0x0001175a
   23710:	.word	0x000112f5
   23714:	.word	0x00010cb3
   23718:	.word	0x00011323
   2371c:	.word	0x000113e4

00023720 <readstat_parse_txt>:
   23720:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23724:	add	fp, sp, #28
   23728:	sub	sp, sp, #76	; 0x4c
   2372c:	mov	r4, r3
   23730:	mov	r6, r2
   23734:	mov	r5, r1
   23738:	mov	r9, r0
   2373c:	ldr	r8, [r0, #32]
   23740:	str	r2, [fp, #-32]	; 0xffffffe0
   23744:	mov	sl, #0
   23748:	str	sl, [fp, #-36]	; 0xffffffdc
   2374c:	str	sl, [fp, #-40]	; 0xffffffd8
   23750:	ldr	r0, [r0, #40]	; 0x28
   23754:	cmp	r0, #0
   23758:	beq	23778 <readstat_parse_txt+0x58>
   2375c:	ldr	r1, [r9, #36]	; 0x24
   23760:	cmp	r1, #0
   23764:	beq	23778 <readstat_parse_txt+0x58>
   23768:	bl	4bb4 <iconv_open@plt>
   2376c:	str	r0, [fp, #-36]	; 0xffffffdc
   23770:	cmn	r0, #1
   23774:	beq	23860 <readstat_parse_txt+0x140>
   23778:	ldr	r2, [r8]
   2377c:	ldr	r1, [r8, #20]
   23780:	mov	r0, r5
   23784:	blx	r2
   23788:	cmn	r0, #1
   2378c:	beq	23848 <readstat_parse_txt+0x128>
   23790:	ldr	r5, [r6, #256]	; 0x100
   23794:	lsl	r0, r5, #2
   23798:	bl	4b90 <malloc@plt>
   2379c:	mov	r7, #3
   237a0:	cmp	r0, #0
   237a4:	beq	23854 <readstat_parse_txt+0x134>
   237a8:	mov	sl, r0
   237ac:	mov	ip, r4
   237b0:	cmp	r5, #1
   237b4:	blt	237d0 <readstat_parse_txt+0xb0>
   237b8:	ldr	r0, [r6, #260]	; 0x104
   237bc:	mov	r1, sl
   237c0:	mov	r2, r5
   237c4:	str	r0, [r1], #4
   237c8:	subs	r2, r2, #1
   237cc:	bne	237c4 <readstat_parse_txt+0xa4>
   237d0:	str	r6, [sp, #4]
   237d4:	ldr	r0, [r6, #268]	; 0x10c
   237d8:	cmp	r0, #1
   237dc:	blt	2381c <readstat_parse_txt+0xfc>
   237e0:	ldr	r1, [sp, #4]
   237e4:	ldr	r0, [r1, #268]	; 0x10c
   237e8:	ldr	r1, [r1, #276]	; 0x114
   237ec:	add	r1, r1, #4
   237f0:	mov	r2, #0
   237f4:	ldmda	r1, {r3, r7}
   237f8:	ldr	r6, [r1, #4]
   237fc:	ldr	r4, [sl, r3, lsl #2]
   23800:	add	r7, r6, r7
   23804:	cmp	r4, r7
   23808:	strcc	r7, [sl, r3, lsl #2]
   2380c:	add	r1, r1, #2208	; 0x8a0
   23810:	add	r2, r2, #1
   23814:	cmp	r2, r0
   23818:	blt	237f4 <readstat_parse_txt+0xd4>
   2381c:	cmp	r5, #1
   23820:	blt	23874 <readstat_parse_txt+0x154>
   23824:	mov	r0, #0
   23828:	mov	r1, sl
   2382c:	ldr	r2, [r1], #4
   23830:	cmp	r0, r2
   23834:	movcc	r0, r2
   23838:	subs	r5, r5, #1
   2383c:	bne	2382c <readstat_parse_txt+0x10c>
   23840:	add	r0, r0, #2
   23844:	b	23878 <readstat_parse_txt+0x158>
   23848:	mov	r7, #1
   2384c:	mov	r5, #0
   23850:	b	239b0 <readstat_parse_txt+0x290>
   23854:	mov	sl, #0
   23858:	mov	r5, #0
   2385c:	b	239b0 <readstat_parse_txt+0x290>
   23860:	mov	sl, #0
   23864:	str	sl, [fp, #-36]	; 0xffffffdc
   23868:	mov	r7, #7
   2386c:	mov	r5, #0
   23870:	b	239b0 <readstat_parse_txt+0x290>
   23874:	mov	r0, #2
   23878:	mov	r4, ip
   2387c:	ldr	r6, [sp, #4]
   23880:	mov	r7, #3
   23884:	bl	4b90 <malloc@plt>
   23888:	cmp	r0, #0
   2388c:	beq	238e8 <readstat_parse_txt+0x1c8>
   23890:	mov	r5, r0
   23894:	ldr	r0, [r6, #264]	; 0x108
   23898:	cmp	r0, #2
   2389c:	blt	238f4 <readstat_parse_txt+0x1d4>
   238a0:	mov	r1, #0
   238a4:	strb	r1, [sp, #8]
   238a8:	sub	r7, r0, #1
   238ac:	add	r6, sp, #8
   238b0:	b	238bc <readstat_parse_txt+0x19c>
   238b4:	subs	r7, r7, #1
   238b8:	beq	238f0 <readstat_parse_txt+0x1d0>
   238bc:	ldr	r3, [r8, #12]
   238c0:	ldr	r2, [r8, #20]
   238c4:	mov	r0, r6
   238c8:	mov	r1, #1
   238cc:	blx	r3
   238d0:	cmp	r0, #1
   238d4:	bne	238b4 <readstat_parse_txt+0x194>
   238d8:	ldrb	r0, [sp, #8]
   238dc:	cmp	r0, #10
   238e0:	bne	238bc <readstat_parse_txt+0x19c>
   238e4:	b	238b4 <readstat_parse_txt+0x194>
   238e8:	mov	r5, #0
   238ec:	b	239b0 <readstat_parse_txt+0x290>
   238f0:	ldr	r6, [sp, #4]
   238f4:	ldrb	r0, [r6, #272]	; 0x110
   238f8:	cmp	r0, #0
   238fc:	beq	23914 <readstat_parse_txt+0x1f4>
   23900:	sub	r1, fp, #40	; 0x28
   23904:	mov	r0, r9
   23908:	mov	r2, r4
   2390c:	bl	239f8 <txt_parse_delimited>
   23910:	b	2392c <readstat_parse_txt+0x20c>
   23914:	str	r5, [sp]
   23918:	sub	r1, fp, #40	; 0x28
   2391c:	mov	r0, r9
   23920:	mov	r2, r4
   23924:	mov	r3, sl
   23928:	bl	23b6c <txt_parse_fixed_width>
   2392c:	mov	r7, r0
   23930:	cmp	r0, #0
   23934:	bne	239b0 <readstat_parse_txt+0x290>
   23938:	ldr	r2, [r9]
   2393c:	cmp	r2, #0
   23940:	beq	239ac <readstat_parse_txt+0x28c>
   23944:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23948:	str	r0, [sp, #8]
   2394c:	asr	r0, r0, #31
   23950:	str	r0, [sp, #12]
   23954:	vmov.i32	q8, #0	; 0x00000000
   23958:	ldr	r1, [r6, #268]	; 0x10c
   2395c:	add	r0, sp, #8
   23960:	add	r3, r0, #16
   23964:	vst1.64	{d16-d17}, [r3]
   23968:	add	r3, r0, #32
   2396c:	vst1.64	{d16-d17}, [r3]
   23970:	ldrb	r3, [sp, #60]	; 0x3c
   23974:	and	r3, r3, #254	; 0xfe
   23978:	strb	r3, [sp, #60]	; 0x3c
   2397c:	mov	r3, #0
   23980:	str	r3, [sp, #56]	; 0x38
   23984:	str	r1, [sp, #16]
   23988:	asr	r1, r1, #31
   2398c:	str	r1, [sp, #20]
   23990:	mov	r1, r4
   23994:	blx	r2
   23998:	sub	r0, r0, #1
   2399c:	clz	r0, r0
   239a0:	lsr	r0, r0, #5
   239a4:	lsl	r7, r0, #2
   239a8:	b	239b0 <readstat_parse_txt+0x290>
   239ac:	mov	r7, #0
   239b0:	ldr	r1, [r8, #4]
   239b4:	ldr	r0, [r8, #20]
   239b8:	blx	r1
   239bc:	cmp	r5, #0
   239c0:	beq	239cc <readstat_parse_txt+0x2ac>
   239c4:	mov	r0, r5
   239c8:	bl	4938 <free@plt>
   239cc:	cmp	sl, #0
   239d0:	beq	239dc <readstat_parse_txt+0x2bc>
   239d4:	mov	r0, sl
   239d8:	bl	4938 <free@plt>
   239dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   239e0:	cmp	r0, #0
   239e4:	beq	239ec <readstat_parse_txt+0x2cc>
   239e8:	bl	4848 <iconv_close@plt>
   239ec:	mov	r0, r7
   239f0:	sub	sp, fp, #28
   239f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000239f8 <txt_parse_delimited>:
   239f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   239fc:	add	fp, sp, #28
   23a00:	sub	sp, sp, #36	; 0x24
   23a04:	str	r2, [sp, #16]
   23a08:	mov	r4, r1
   23a0c:	mov	r7, r0
   23a10:	mov	r0, #4096	; 0x1000
   23a14:	str	r0, [sp, #32]
   23a18:	mov	r0, #4096	; 0x1000
   23a1c:	bl	4b90 <malloc@plt>
   23a20:	str	r0, [sp, #28]
   23a24:	ldr	r6, [r7, #32]
   23a28:	str	r4, [sp, #20]
   23a2c:	ldr	r9, [r4, #8]
   23a30:	mov	r0, #0
   23a34:	str	r0, [sp, #24]
   23a38:	b	23a54 <txt_parse_delimited+0x5c>
   23a3c:	ldr	r1, [sp, #24]
   23a40:	add	r1, r1, #1
   23a44:	ldr	r0, [r7, #44]	; 0x2c
   23a48:	str	r1, [sp, #24]
   23a4c:	cmp	r1, r0
   23a50:	beq	23b40 <txt_parse_delimited+0x148>
   23a54:	ldr	r0, [r9, #268]	; 0x10c
   23a58:	cmp	r0, #1
   23a5c:	blt	23a3c <txt_parse_delimited+0x44>
   23a60:	mov	sl, #0
   23a64:	mov	r4, #0
   23a68:	b	23ab8 <txt_parse_delimited+0xc0>
   23a6c:	ldr	r2, [sp, #28]
   23a70:	mov	r1, #0
   23a74:	strb	r1, [r2, r0]
   23a78:	ldr	r1, [sp, #20]
   23a7c:	ldr	r1, [r1, #4]
   23a80:	str	r2, [sp]
   23a84:	str	r0, [sp, #4]
   23a88:	ldr	r0, [sp, #16]
   23a8c:	str	r0, [sp, #8]
   23a90:	mov	r0, r7
   23a94:	ldr	r2, [sp, #24]
   23a98:	bl	23e30 <handle_value>
   23a9c:	cmp	r0, #0
   23aa0:	bne	23b38 <txt_parse_delimited+0x140>
   23aa4:	add	sl, sl, #2208	; 0x8a0
   23aa8:	add	r4, r4, #1
   23aac:	ldr	r0, [r9, #268]	; 0x10c
   23ab0:	cmp	r4, r0
   23ab4:	bge	23a3c <txt_parse_delimited+0x44>
   23ab8:	ldr	r5, [r9, #276]	; 0x114
   23abc:	sub	r0, r0, #1
   23ac0:	mov	r2, #10
   23ac4:	cmp	r4, r0
   23ac8:	ldrbne	r2, [r9, #272]	; 0x110
   23acc:	add	r0, sp, #28
   23ad0:	add	r1, sp, #32
   23ad4:	mov	r3, r6
   23ad8:	bl	23d48 <txt_getdelim>
   23adc:	cmn	r0, #1
   23ae0:	beq	23b30 <txt_parse_delimited+0x138>
   23ae4:	mov	r8, r0
   23ae8:	cmp	r0, #0
   23aec:	beq	23b44 <txt_parse_delimited+0x14c>
   23af0:	ldr	r0, [r7, #16]
   23af4:	cmp	r0, #0
   23af8:	beq	23aa4 <txt_parse_delimited+0xac>
   23afc:	add	r3, r5, sl
   23b00:	ldr	r0, [r3, #12]
   23b04:	cmp	r0, #0
   23b08:	bne	23aa4 <txt_parse_delimited+0xac>
   23b0c:	sub	r0, r8, #1
   23b10:	cmp	r0, #1
   23b14:	blt	23a6c <txt_parse_delimited+0x74>
   23b18:	sub	r1, r8, #2
   23b1c:	ldr	r2, [sp, #28]
   23b20:	ldrb	r2, [r2, r1]
   23b24:	cmp	r2, #13
   23b28:	moveq	r0, r1
   23b2c:	b	23a6c <txt_parse_delimited+0x74>
   23b30:	mov	r8, #2
   23b34:	b	23b44 <txt_parse_delimited+0x14c>
   23b38:	mov	r8, r0
   23b3c:	b	23b44 <txt_parse_delimited+0x14c>
   23b40:	mov	r8, #0
   23b44:	ldr	r0, [sp, #20]
   23b48:	ldr	r1, [sp, #24]
   23b4c:	str	r1, [r0]
   23b50:	ldr	r0, [sp, #28]
   23b54:	cmp	r0, #0
   23b58:	beq	23b60 <txt_parse_delimited+0x168>
   23b5c:	bl	4938 <free@plt>
   23b60:	mov	r0, r8
   23b64:	sub	sp, fp, #28
   23b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023b6c <txt_parse_fixed_width>:
   23b6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23b70:	add	fp, sp, #28
   23b74:	sub	sp, sp, #44	; 0x2c
   23b78:	sub	sp, sp, #4096	; 0x1000
   23b7c:	mov	r8, r3
   23b80:	str	r2, [sp, #16]
   23b84:	str	r0, [sp, #32]
   23b88:	ldr	r4, [r0, #32]
   23b8c:	str	r1, [sp, #20]
   23b90:	ldr	r5, [r1, #8]
   23b94:	mov	r0, #0
   23b98:	str	r0, [sp, #28]
   23b9c:	str	r3, [sp, #24]
   23ba0:	b	23bc0 <txt_parse_fixed_width+0x54>
   23ba4:	ldr	r1, [sp, #28]
   23ba8:	add	r1, r1, #1
   23bac:	ldr	r0, [sp, #32]
   23bb0:	ldr	r0, [r0, #44]	; 0x2c
   23bb4:	str	r1, [sp, #28]
   23bb8:	cmp	r1, r0
   23bbc:	beq	23d28 <txt_parse_fixed_width+0x1bc>
   23bc0:	ldr	r0, [r5, #256]	; 0x100
   23bc4:	cmp	r0, #1
   23bc8:	blt	23ba4 <txt_parse_fixed_width+0x38>
   23bcc:	mov	r6, #0
   23bd0:	mov	r7, #0
   23bd4:	b	23bec <txt_parse_fixed_width+0x80>
   23bd8:	ldr	r0, [r9, #256]	; 0x100
   23bdc:	add	r7, r7, #1
   23be0:	cmp	r7, r0
   23be4:	mov	r5, r9
   23be8:	bge	23ba4 <txt_parse_fixed_width+0x38>
   23bec:	ldr	r1, [r8, r7, lsl #2]
   23bf0:	ldr	r3, [r4, #12]
   23bf4:	ldr	r2, [r4, #20]
   23bf8:	ldr	r0, [fp, #8]
   23bfc:	blx	r3
   23c00:	cmp	r0, #0
   23c04:	beq	23d28 <txt_parse_fixed_width+0x1bc>
   23c08:	ldr	r1, [r8, r7, lsl #2]
   23c0c:	cmp	r0, r1
   23c10:	bcc	23d30 <txt_parse_fixed_width+0x1c4>
   23c14:	ldr	r0, [r5, #268]	; 0x10c
   23c18:	cmp	r6, r0
   23c1c:	bge	23cdc <txt_parse_fixed_width+0x170>
   23c20:	mov	r0, #2208	; 0x8a0
   23c24:	mul	r8, r6, r0
   23c28:	mov	r2, #0
   23c2c:	b	23c44 <txt_parse_fixed_width+0xd8>
   23c30:	add	r8, r8, #2208	; 0x8a0
   23c34:	add	r6, r6, #1
   23c38:	ldr	r0, [r5, #268]	; 0x10c
   23c3c:	cmp	r6, r0
   23c40:	bge	23ce0 <txt_parse_fixed_width+0x174>
   23c44:	ldr	r0, [r5, #276]	; 0x114
   23c48:	mov	r9, r0
   23c4c:	ldr	r1, [r9, r8]!
   23c50:	cmp	r1, r7
   23c54:	bne	23ce0 <txt_parse_fixed_width+0x174>
   23c58:	add	r0, r0, r8
   23c5c:	ldr	sl, [r0, #8]
   23c60:	cmp	r2, sl, lsr #12
   23c64:	bne	23c30 <txt_parse_fixed_width+0xc4>
   23c68:	ldr	r1, [sp, #32]
   23c6c:	ldr	r1, [r1, #16]
   23c70:	cmp	r1, #0
   23c74:	beq	23c30 <txt_parse_fixed_width+0xc4>
   23c78:	ldr	r1, [r0, #12]
   23c7c:	cmp	r1, #0
   23c80:	bne	23c30 <txt_parse_fixed_width+0xc4>
   23c84:	ldr	r0, [r0, #4]
   23c88:	ldr	r1, [fp, #8]
   23c8c:	add	r1, r1, r0
   23c90:	add	r0, sp, #40	; 0x28
   23c94:	mov	r2, sl
   23c98:	bl	4998 <memcpy@plt>
   23c9c:	mov	r0, #0
   23ca0:	add	r2, sp, #40	; 0x28
   23ca4:	strb	r0, [r2, sl]
   23ca8:	ldr	r0, [sp, #20]
   23cac:	ldr	r1, [r0, #4]
   23cb0:	stm	sp, {r2, sl}
   23cb4:	ldr	r0, [sp, #16]
   23cb8:	str	r0, [sp, #8]
   23cbc:	ldr	r0, [sp, #32]
   23cc0:	ldr	r2, [sp, #28]
   23cc4:	mov	r3, r9
   23cc8:	bl	23e30 <handle_value>
   23ccc:	mov	r2, #0
   23cd0:	cmp	r0, #0
   23cd4:	beq	23c30 <txt_parse_fixed_width+0xc4>
   23cd8:	b	23d34 <txt_parse_fixed_width+0x1c8>
   23cdc:	mov	r2, #0
   23ce0:	ldr	r0, [r5, #260]	; 0x104
   23ce4:	cmp	r0, #0
   23ce8:	ldr	r8, [sp, #24]
   23cec:	mov	r9, r5
   23cf0:	add	r5, sp, #39	; 0x27
   23cf4:	bne	23bd8 <txt_parse_fixed_width+0x6c>
   23cf8:	strb	r2, [sp, #39]	; 0x27
   23cfc:	ldr	r3, [r4, #12]
   23d00:	ldr	r2, [r4, #20]
   23d04:	mov	r0, r5
   23d08:	mov	r1, #1
   23d0c:	blx	r3
   23d10:	cmp	r0, #1
   23d14:	bne	23bd8 <txt_parse_fixed_width+0x6c>
   23d18:	ldrb	r0, [sp, #39]	; 0x27
   23d1c:	cmp	r0, #10
   23d20:	bne	23cfc <txt_parse_fixed_width+0x190>
   23d24:	b	23bd8 <txt_parse_fixed_width+0x6c>
   23d28:	mov	r0, #0
   23d2c:	b	23d34 <txt_parse_fixed_width+0x1c8>
   23d30:	mov	r0, #2
   23d34:	ldr	r1, [sp, #20]
   23d38:	ldr	r2, [sp, #28]
   23d3c:	str	r2, [r1]
   23d40:	sub	sp, fp, #28
   23d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023d48 <txt_getdelim>:
   23d48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23d4c:	add	fp, sp, #28
   23d50:	sub	sp, sp, #12
   23d54:	mov	r7, r3
   23d58:	str	r2, [sp, #8]
   23d5c:	mov	r8, r1
   23d60:	mov	r9, r0
   23d64:	ldr	r5, [r1]
   23d68:	ldr	r3, [r3, #12]
   23d6c:	ldr	r2, [r7, #20]
   23d70:	ldr	r6, [r0]
   23d74:	mov	r4, #1
   23d78:	mov	r0, r6
   23d7c:	mov	r1, #1
   23d80:	blx	r3
   23d84:	cmp	r0, #1
   23d88:	bne	23dfc <txt_getdelim+0xb4>
   23d8c:	str	r9, [sp]
   23d90:	str	r8, [sp, #4]
   23d94:	mov	r9, #0
   23d98:	mov	r8, r6
   23d9c:	b	23dc4 <txt_getdelim+0x7c>
   23da0:	add	r6, r8, r9
   23da4:	add	r0, r8, sl
   23da8:	ldr	r3, [r7, #12]
   23dac:	ldr	r2, [r7, #20]
   23db0:	mov	r1, #1
   23db4:	blx	r3
   23db8:	add	r4, sl, #1
   23dbc:	cmp	r0, #1
   23dc0:	bne	23e08 <txt_getdelim+0xc0>
   23dc4:	mov	sl, r4
   23dc8:	ldrb	r0, [r6]
   23dcc:	ldr	r1, [sp, #8]
   23dd0:	cmp	r0, r1
   23dd4:	beq	23e04 <txt_getdelim+0xbc>
   23dd8:	add	r9, r9, #1
   23ddc:	cmp	sl, r5
   23de0:	bne	23da0 <txt_getdelim+0x58>
   23de4:	lsl	r5, r5, #1
   23de8:	mov	r0, r8
   23dec:	mov	r1, r5
   23df0:	bl	4a64 <realloc@plt>
   23df4:	mov	r8, r0
   23df8:	b	23da0 <txt_getdelim+0x58>
   23dfc:	mov	sl, #0
   23e00:	b	23e14 <txt_getdelim+0xcc>
   23e04:	mov	r0, #1
   23e08:	mov	r6, r8
   23e0c:	ldr	r8, [sp, #4]
   23e10:	ldr	r9, [sp]
   23e14:	str	r6, [r9]
   23e18:	str	r5, [r8]
   23e1c:	cmn	r0, #1
   23e20:	moveq	sl, r0
   23e24:	mov	r0, sl
   23e28:	sub	sp, fp, #28
   23e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023e30 <handle_value>:
   23e30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e34:	add	fp, sp, #28
   23e38:	sub	sp, sp, #12
   23e3c:	mov	r4, r3
   23e40:	str	r2, [fp, #-40]	; 0xffffffd8
   23e44:	mov	r8, r1
   23e48:	mov	r7, r0
   23e4c:	ldr	r6, [fp, #12]
   23e50:	mov	r0, #1
   23e54:	orr	r9, r0, r6, lsl #2
   23e58:	add	r0, r9, #7
   23e5c:	bic	r0, r0, #4
   23e60:	sub	r5, sp, r0
   23e64:	mov	sp, r5
   23e68:	ldr	sl, [r4, #16]!
   23e6c:	mov	r0, sl
   23e70:	bl	489c <readstat_type_class@plt>
   23e74:	ldr	r3, [fp, #8]
   23e78:	cmp	r0, #0
   23e7c:	beq	23eb8 <handle_value+0x88>
   23e80:	mov	r6, #0
   23e84:	str	r6, [fp, #-36]	; 0xffffffdc
   23e88:	ldr	r0, [r4]
   23e8c:	sub	r1, fp, #36	; 0x24
   23e90:	cmp	r0, #4
   23e94:	beq	23ee8 <handle_value+0xb8>
   23e98:	cmp	r0, #5
   23e9c:	bne	23f00 <handle_value+0xd0>
   23ea0:	mov	r0, r3
   23ea4:	mov	r5, r3
   23ea8:	bl	4d88 <strtod@plt>
   23eac:	mov	r3, r5
   23eb0:	vmov	r5, r6, d0
   23eb4:	b	23f20 <handle_value+0xf0>
   23eb8:	sub	sp, sp, #8
   23ebc:	str	r8, [sp]
   23ec0:	mov	r0, r5
   23ec4:	mov	r1, r9
   23ec8:	mov	r2, r3
   23ecc:	mov	r3, r6
   23ed0:	bl	4cbc <readstat_convert@plt>
   23ed4:	add	sp, sp, #8
   23ed8:	cmp	r0, #0
   23edc:	beq	23f80 <handle_value+0x150>
   23ee0:	sub	sp, fp, #28
   23ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23ee8:	mov	r0, r3
   23eec:	mov	r5, r3
   23ef0:	bl	4b3c <strtof@plt>
   23ef4:	mov	r3, r5
   23ef8:	vmov	r5, s0
   23efc:	b	23f20 <handle_value+0xf0>
   23f00:	mov	r0, r3
   23f04:	mov	r2, #10
   23f08:	mov	r5, r3
   23f0c:	bl	48a8 <strtol@plt>
   23f10:	mov	r3, r5
   23f14:	mov	r5, r0
   23f18:	mov	r6, #0
   23f1c:	mov	sl, #3
   23f20:	mov	r2, #0
   23f24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23f28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23f2c:	sub	r1, r1, r3
   23f30:	clz	r1, r1
   23f34:	lsr	r1, r1, #5
   23f38:	orr	r2, r2, r1, lsl #8
   23f3c:	ldr	r1, [fp, #16]
   23f40:	ldr	r7, [r7, #16]
   23f44:	sub	sp, sp, #16
   23f48:	str	sl, [sp]
   23f4c:	str	r2, [sp, #4]
   23f50:	str	r1, [sp, #8]
   23f54:	mov	r1, r4
   23f58:	mov	r2, r5
   23f5c:	mov	r3, r6
   23f60:	blx	r7
   23f64:	add	sp, sp, #16
   23f68:	sub	r0, r0, #1
   23f6c:	clz	r0, r0
   23f70:	lsr	r0, r0, #5
   23f74:	lsl	r0, r0, #2
   23f78:	sub	sp, fp, #28
   23f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f80:	mov	r6, #0
   23f84:	mov	r2, #0
   23f88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23f8c:	b	23f3c <handle_value+0x10c>

00023f90 <zsav_ctx_init>:
   23f90:	push	{r4, r5, r6, r7, fp, lr}
   23f94:	add	fp, sp, #16
   23f98:	mov	r4, r3
   23f9c:	mov	r5, r2
   23fa0:	mov	r6, r0
   23fa4:	mov	r0, #1
   23fa8:	mov	r1, #40	; 0x28
   23fac:	bl	47d0 <calloc@plt>
   23fb0:	mov	r7, r0
   23fb4:	mov	r0, r6
   23fb8:	bl	4b90 <malloc@plt>
   23fbc:	mov	r1, #10
   23fc0:	str	r1, [r7, #12]
   23fc4:	str	r0, [r7]
   23fc8:	mov	r0, #10
   23fcc:	mov	r1, #4
   23fd0:	bl	47d0 <calloc@plt>
   23fd4:	mov	r1, #0
   23fd8:	movw	r2, #61440	; 0xf000
   23fdc:	movt	r2, #63	; 0x3f
   23fe0:	mvn	r3, #0
   23fe4:	str	r2, [r7, #16]
   23fe8:	str	r1, [r7, #20]
   23fec:	str	r5, [r7, #24]
   23ff0:	str	r4, [r7, #28]
   23ff4:	str	r3, [r7, #32]
   23ff8:	str	r0, [r7, #4]
   23ffc:	mov	r0, r7
   24000:	pop	{r4, r5, r6, r7, fp, pc}

00024004 <zsav_ctx_free>:
   24004:	push	{r4, r5, r6, sl, fp, lr}
   24008:	add	fp, sp, #16
   2400c:	mov	r4, r0
   24010:	ldr	r0, [r0, #8]
   24014:	cmp	r0, #1
   24018:	blt	24050 <zsav_ctx_free+0x4c>
   2401c:	mov	r6, #0
   24020:	ldr	r0, [r4, #4]
   24024:	ldr	r5, [r0, r6, lsl #2]
   24028:	add	r0, r5, #8
   2402c:	bl	4da0 <deflateEnd@plt>
   24030:	ldr	r0, [r5, #64]	; 0x40
   24034:	bl	4938 <free@plt>
   24038:	mov	r0, r5
   2403c:	bl	4938 <free@plt>
   24040:	add	r6, r6, #1
   24044:	ldr	r0, [r4, #8]
   24048:	cmp	r6, r0
   2404c:	blt	24020 <zsav_ctx_free+0x1c>
   24050:	ldr	r0, [r4, #4]
   24054:	bl	4938 <free@plt>
   24058:	ldr	r0, [r4]
   2405c:	bl	4938 <free@plt>
   24060:	mov	r0, r4
   24064:	pop	{r4, r5, r6, sl, fp, lr}
   24068:	b	4938 <free@plt>

0002406c <zsav_add_block>:
   2406c:	push	{r4, r5, r6, sl, fp, lr}
   24070:	add	fp, sp, #16
   24074:	mov	r4, r0
   24078:	ldrd	r0, [r0, #8]
   2407c:	cmp	r0, r1
   24080:	bne	2409c <zsav_add_block+0x30>
   24084:	lsl	r0, r1, #1
   24088:	str	r0, [r4, #12]
   2408c:	ldr	r0, [r4, #4]
   24090:	lsl	r1, r1, #3
   24094:	bl	4a64 <realloc@plt>
   24098:	str	r0, [r4, #4]
   2409c:	mov	r0, #1
   240a0:	mov	r1, #72	; 0x48
   240a4:	bl	47d0 <calloc@plt>
   240a8:	mov	r5, r0
   240ac:	ldmib	r4, {r0, r1}
   240b0:	add	r2, r1, #1
   240b4:	str	r2, [r4, #8]
   240b8:	str	r5, [r0, r1, lsl #2]
   240bc:	add	r6, r5, #8
   240c0:	ldr	r1, [r4, #32]
   240c4:	ldr	r2, [pc, #44]	; 240f8 <zsav_add_block+0x8c>
   240c8:	add	r2, pc, r2
   240cc:	mov	r0, r6
   240d0:	mov	r3, #56	; 0x38
   240d4:	bl	4ba8 <deflateInit_@plt>
   240d8:	ldr	r1, [r4, #16]
   240dc:	mov	r0, r6
   240e0:	bl	48fc <deflateBound@plt>
   240e4:	str	r0, [r5, #68]	; 0x44
   240e8:	bl	4b90 <malloc@plt>
   240ec:	str	r0, [r5, #64]	; 0x40
   240f0:	mov	r0, r5
   240f4:	pop	{r4, r5, r6, sl, fp, pc}
   240f8:	.word	0x00010977

000240fc <zsav_current_block>:
   240fc:	ldr	r1, [r0, #8]
   24100:	cmp	r1, #0
   24104:	moveq	r0, #0
   24108:	bxeq	lr
   2410c:	ldr	r0, [r0, #4]
   24110:	add	r0, r0, r1, lsl #2
   24114:	ldr	r0, [r0, #-4]
   24118:	bx	lr

0002411c <zsav_compress_row>:
   2411c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24120:	add	fp, sp, #28
   24124:	sub	sp, sp, #12
   24128:	mov	r4, r3
   2412c:	str	r2, [sp]
   24130:	mov	r9, r1
   24134:	mov	sl, r0
   24138:	mov	r0, r3
   2413c:	bl	4b18 <zsav_current_block@plt>
   24140:	mov	r5, r0
   24144:	cmp	r0, #0
   24148:	bne	24158 <zsav_compress_row+0x3c>
   2414c:	mov	r0, r4
   24150:	bl	4b9c <zsav_add_block@plt>
   24154:	mov	r5, r0
   24158:	str	sl, [r5, #8]
   2415c:	str	r9, [r5, #12]
   24160:	ldr	r8, [r5]
   24164:	ldr	r0, [r5, #4]
   24168:	ldr	r1, [r5, #64]	; 0x40
   2416c:	ldr	r2, [r5, #68]	; 0x44
   24170:	add	r1, r1, r0
   24174:	sub	r0, r2, r0
   24178:	str	r1, [r5, #20]
   2417c:	str	r0, [r5, #24]
   24180:	mov	r7, r4
   24184:	ldr	r6, [r7, #16]!
   24188:	ldr	r1, [r7, #4]
   2418c:	subs	r0, r6, r8
   24190:	sbc	r1, r1, r8, asr #31
   24194:	subs	r2, r0, r9
   24198:	sbcs	r1, r1, #0
   2419c:	bge	24240 <zsav_compress_row+0x124>
   241a0:	str	sl, [sp, #4]
   241a4:	mov	sl, r9
   241a8:	str	r4, [sp, #8]
   241ac:	mov	r4, #0
   241b0:	str	r0, [r5, #12]
   241b4:	add	r0, r5, #8
   241b8:	mov	r1, #4
   241bc:	bl	4aac <deflate@plt>
   241c0:	cmp	r0, #1
   241c4:	bne	2427c <zsav_compress_row+0x160>
   241c8:	sub	r0, r6, r8
   241cc:	add	r4, r0, r4
   241d0:	ldr	r0, [r5, #12]
   241d4:	ldr	r1, [r5, #24]
   241d8:	ldr	r2, [r5, #68]	; 0x44
   241dc:	sub	r1, r2, r1
   241e0:	str	r1, [r5, #4]
   241e4:	ldr	r1, [r7]
   241e8:	sub	r0, r1, r0
   241ec:	str	r0, [r5]
   241f0:	sub	r9, sl, r4
   241f4:	ldr	r0, [sp, #8]
   241f8:	bl	4b9c <zsav_add_block@plt>
   241fc:	mov	r5, r0
   24200:	ldr	r0, [sp, #4]
   24204:	add	r0, r0, r4
   24208:	str	r0, [r5, #8]
   2420c:	str	r9, [r5, #12]
   24210:	ldr	r8, [r5]
   24214:	ldr	r0, [r5, #64]	; 0x40
   24218:	ldr	r1, [r5, #68]	; 0x44
   2421c:	str	r0, [r5, #20]
   24220:	str	r1, [r5, #24]
   24224:	ldr	r6, [r7]
   24228:	ldr	r1, [r7, #4]
   2422c:	subs	r0, r6, r8
   24230:	sbc	r1, r1, r8, asr #31
   24234:	subs	r2, r0, r9
   24238:	sbcs	r1, r1, #0
   2423c:	blt	241b0 <zsav_compress_row+0x94>
   24240:	add	r0, r5, #8
   24244:	ldr	r1, [sp]
   24248:	cmp	r1, #0
   2424c:	movwne	r1, #1
   24250:	lsl	r1, r1, #2
   24254:	bl	4aac <deflate@plt>
   24258:	ldr	r1, [r5, #12]
   2425c:	ldr	r2, [r5, #24]
   24260:	ldr	r3, [r5, #68]	; 0x44
   24264:	sub	r2, r3, r2
   24268:	str	r2, [r5, #4]
   2426c:	sub	r1, r9, r1
   24270:	ldr	r2, [r5]
   24274:	add	r1, r1, r2
   24278:	str	r1, [r5]
   2427c:	sub	sp, fp, #28
   24280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00024284 <zsav_read_compressed_data>:
   24284:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24288:	add	fp, sp, #28
   2428c:	sub	sp, sp, #148	; 0x94
   24290:	mov	r4, r1
   24294:	mov	r5, r0
   24298:	ldr	r7, [r0, #36]	; 0x24
   2429c:	ldr	r8, [r0, #344]	; 0x158
   242a0:	mov	r0, #0
   242a4:	str	r0, [fp, #-32]	; 0xffffffe0
   242a8:	vmov.i32	q8, #0	; 0x00000000
   242ac:	mov	r1, #32
   242b0:	add	r2, sp, #88	; 0x58
   242b4:	vst1.64	{d16-d17}, [r2], r1
   242b8:	ldr	r1, [r5, #392]	; 0x188
   242bc:	ldr	r3, [r5, #396]	; 0x18c
   242c0:	str	r3, [sp, #108]	; 0x6c
   242c4:	str	r1, [sp, #104]	; 0x68
   242c8:	vldr	d16, [r5, #416]	; 0x1a0
   242cc:	str	r0, [r2]
   242d0:	str	r0, [r2, #4]
   242d4:	str	r0, [sp, #128]	; 0x80
   242d8:	vstr	d16, [sp, #112]	; 0x70
   242dc:	ldrb	r1, [r5, #436]	; 0x1b4
   242e0:	str	r0, [sp, #136]	; 0x88
   242e4:	and	r0, r1, #1
   242e8:	str	r0, [sp, #132]	; 0x84
   242ec:	ldr	r3, [r7, #12]
   242f0:	ldr	r2, [r7, #20]
   242f4:	add	r6, sp, #64	; 0x40
   242f8:	mov	r0, r6
   242fc:	mov	r1, #24
   24300:	blx	r3
   24304:	mov	r9, #2
   24308:	cmp	r0, #24
   2430c:	bcc	244ac <zsav_read_compressed_data+0x228>
   24310:	str	r4, [sp, #36]	; 0x24
   24314:	add	r4, r6, #8
   24318:	ldrb	r2, [r5, #436]	; 0x1b4
   2431c:	ldr	r0, [sp, #64]	; 0x40
   24320:	ldr	r1, [sp, #68]	; 0x44
   24324:	tst	r2, #1
   24328:	beq	24330 <zsav_read_compressed_data+0xac>
   2432c:	bl	47f4 <byteswap8@plt>
   24330:	add	r6, r6, #16
   24334:	str	r0, [sp, #64]	; 0x40
   24338:	str	r1, [sp, #68]	; 0x44
   2433c:	ldrd	r0, [r4]
   24340:	ldrb	r2, [r5, #436]	; 0x1b4
   24344:	tst	r2, #1
   24348:	beq	24350 <zsav_read_compressed_data+0xcc>
   2434c:	bl	47f4 <byteswap8@plt>
   24350:	strd	r0, [r4]
   24354:	ldrd	r0, [r6]
   24358:	ldrb	r2, [r5, #436]	; 0x1b4
   2435c:	tst	r2, #1
   24360:	str	r8, [sp, #32]
   24364:	beq	2436c <zsav_read_compressed_data+0xe8>
   24368:	bl	47f4 <byteswap8@plt>
   2436c:	strd	r0, [r6]
   24370:	ldr	r3, [r7, #8]
   24374:	ldr	r2, [r7, #20]
   24378:	ldr	r8, [sp, #64]	; 0x40
   2437c:	ldr	sl, [sp, #68]	; 0x44
   24380:	mov	r0, #0
   24384:	mov	r1, #1
   24388:	blx	r3
   2438c:	sub	r0, r0, #24
   24390:	eor	r0, r8, r0
   24394:	orrs	r0, r0, sl
   24398:	bne	244a0 <zsav_read_compressed_data+0x21c>
   2439c:	ldm	r6, {r8, sl}
   243a0:	ldr	r0, [r4]
   243a4:	ldr	r3, [r7, #8]
   243a8:	ldr	r2, [r7, #20]
   243ac:	mov	r1, #0
   243b0:	blx	r3
   243b4:	mov	r6, r0
   243b8:	subs	r0, r8, #24
   243bc:	sbc	r1, sl, #0
   243c0:	mov	r2, #24
   243c4:	mov	r3, #0
   243c8:	bl	25048 <__aeabi_uldivmod>
   243cc:	cmn	r6, #1
   243d0:	beq	244a8 <zsav_read_compressed_data+0x224>
   243d4:	mov	sl, r0
   243d8:	mov	r8, r7
   243dc:	ldr	r3, [r7, #12]
   243e0:	ldr	r2, [r7, #20]
   243e4:	add	r6, sp, #40	; 0x28
   243e8:	mov	r0, r6
   243ec:	mov	r1, #24
   243f0:	blx	r3
   243f4:	cmp	r0, #24
   243f8:	bcc	244ac <zsav_read_compressed_data+0x228>
   243fc:	ldrb	r2, [r5, #436]	; 0x1b4
   24400:	ldr	r0, [sp, #40]	; 0x28
   24404:	ldr	r1, [sp, #44]	; 0x2c
   24408:	tst	r2, #1
   2440c:	beq	24414 <zsav_read_compressed_data+0x190>
   24410:	bl	47f4 <byteswap8@plt>
   24414:	str	r0, [sp, #40]	; 0x28
   24418:	str	r1, [sp, #44]	; 0x2c
   2441c:	add	r4, r6, #8
   24420:	ldrb	r2, [r5, #436]	; 0x1b4
   24424:	ldr	r0, [sp, #48]	; 0x30
   24428:	ldr	r1, [sp, #52]	; 0x34
   2442c:	tst	r2, #1
   24430:	beq	24438 <zsav_read_compressed_data+0x1b4>
   24434:	bl	47f4 <byteswap8@plt>
   24438:	strd	r0, [r4]
   2443c:	ldrb	r1, [r5, #436]	; 0x1b4
   24440:	ldr	r0, [sp, #56]	; 0x38
   24444:	tst	r1, #1
   24448:	beq	24450 <zsav_read_compressed_data+0x1cc>
   2444c:	bl	480c <byteswap4@plt>
   24450:	str	r0, [sp, #56]	; 0x38
   24454:	ldrb	r1, [r5, #436]	; 0x1b4
   24458:	ldr	r0, [sp, #60]	; 0x3c
   2445c:	tst	r1, #1
   24460:	beq	24468 <zsav_read_compressed_data+0x1e4>
   24464:	bl	480c <byteswap4@plt>
   24468:	str	r0, [sp, #60]	; 0x3c
   2446c:	cmp	r0, sl
   24470:	mov	r9, #5
   24474:	bne	244ac <zsav_read_compressed_data+0x228>
   24478:	cmp	sl, #0
   2447c:	beq	244b8 <zsav_read_compressed_data+0x234>
   24480:	add	r0, sl, sl, lsl #1
   24484:	lsl	r0, r0, #3
   24488:	bl	4cb0 <readstat_malloc@plt>
   2448c:	cmp	r0, #0
   24490:	beq	24790 <zsav_read_compressed_data+0x50c>
   24494:	mov	r6, r0
   24498:	mov	r7, r0
   2449c:	b	244c0 <zsav_read_compressed_data+0x23c>
   244a0:	mov	r9, #5
   244a4:	b	244ac <zsav_read_compressed_data+0x228>
   244a8:	mov	r9, #15
   244ac:	mov	r0, r9
   244b0:	sub	sp, fp, #28
   244b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   244b8:	mov	r6, #0
   244bc:	mov	r7, #0
   244c0:	ldr	r3, [r8, #12]
   244c4:	ldr	r2, [r8, #20]
   244c8:	add	r4, sl, sl, lsl #1
   244cc:	lsl	r1, r4, #3
   244d0:	mov	r0, r6
   244d4:	blx	r3
   244d8:	mov	r9, #2
   244dc:	cmp	r0, r4, lsl #3
   244e0:	mov	r0, #0
   244e4:	str	r0, [sp, #24]
   244e8:	mov	r4, #0
   244ec:	bcc	247e4 <zsav_read_compressed_data+0x560>
   244f0:	str	r7, [sp, #20]
   244f4:	str	r6, [sp, #16]
   244f8:	cmp	sl, #1
   244fc:	blt	24588 <zsav_read_compressed_data+0x304>
   24500:	mov	r6, #0
   24504:	ldr	r7, [sp, #20]
   24508:	b	24520 <zsav_read_compressed_data+0x29c>
   2450c:	str	r0, [r7, #20]
   24510:	add	r7, r7, #24
   24514:	add	r6, r6, #1
   24518:	cmp	r6, sl
   2451c:	bge	24588 <zsav_read_compressed_data+0x304>
   24520:	ldrd	r0, [r7]
   24524:	ldrb	r2, [r5, #436]	; 0x1b4
   24528:	tst	r2, #1
   2452c:	beq	24534 <zsav_read_compressed_data+0x2b0>
   24530:	bl	47f4 <byteswap8@plt>
   24534:	strd	r0, [r7]
   24538:	ldr	r1, [r7, #12]
   2453c:	mov	r4, r7
   24540:	ldr	r0, [r4, #8]!
   24544:	ldrb	r2, [r5, #436]	; 0x1b4
   24548:	tst	r2, #1
   2454c:	beq	24554 <zsav_read_compressed_data+0x2d0>
   24550:	bl	47f4 <byteswap8@plt>
   24554:	strd	r0, [r4]
   24558:	ldr	r0, [r7, #16]
   2455c:	ldrb	r1, [r5, #436]	; 0x1b4
   24560:	tst	r1, #1
   24564:	beq	2456c <zsav_read_compressed_data+0x2e8>
   24568:	bl	480c <byteswap4@plt>
   2456c:	str	r0, [r7, #16]
   24570:	ldr	r0, [r7, #20]
   24574:	ldrb	r1, [r5, #436]	; 0x1b4
   24578:	tst	r1, #1
   2457c:	beq	2450c <zsav_read_compressed_data+0x288>
   24580:	bl	480c <byteswap4@plt>
   24584:	b	2450c <zsav_read_compressed_data+0x288>
   24588:	ldr	r0, [sp, #32]
   2458c:	lsl	r4, r0, #3
   24590:	cmp	r0, #0
   24594:	mov	r0, #0
   24598:	beq	245ac <zsav_read_compressed_data+0x328>
   2459c:	mov	r0, r4
   245a0:	bl	4cb0 <readstat_malloc@plt>
   245a4:	cmp	r0, #0
   245a8:	beq	247a8 <zsav_read_compressed_data+0x524>
   245ac:	str	r0, [sp, #32]
   245b0:	cmp	sl, #0
   245b4:	beq	24798 <zsav_read_compressed_data+0x514>
   245b8:	str	r4, [sp, #28]
   245bc:	str	sl, [sp]
   245c0:	str	r8, [sp, #8]
   245c4:	mov	r1, #0
   245c8:	sub	r7, fp, #32
   245cc:	mov	r4, #0
   245d0:	mov	r8, #0
   245d4:	mov	r0, #0
   245d8:	str	r0, [sp, #4]
   245dc:	str	r1, [sp, #12]
   245e0:	add	r0, r1, r1, lsl #1
   245e4:	ldr	r1, [sp, #20]
   245e8:	add	r6, r1, r0, lsl #3
   245ec:	ldr	r0, [r6, #8]
   245f0:	ldr	r1, [sp, #8]
   245f4:	ldr	r3, [r1, #8]
   245f8:	ldr	r2, [r1, #20]
   245fc:	mov	r1, #0
   24600:	blx	r3
   24604:	cmn	r0, #1
   24608:	beq	24818 <zsav_read_compressed_data+0x594>
   2460c:	mov	sl, r6
   24610:	ldr	r1, [r6, #20]!
   24614:	mov	r0, r8
   24618:	bl	4d70 <readstat_realloc@plt>
   2461c:	mov	r9, #3
   24620:	cmp	r0, #0
   24624:	beq	247a0 <zsav_read_compressed_data+0x51c>
   24628:	mov	r8, r0
   2462c:	ldr	r1, [r6]
   24630:	ldr	r0, [sp, #8]
   24634:	ldr	r3, [r0, #12]
   24638:	ldr	r2, [r0, #20]
   2463c:	mov	r0, r8
   24640:	blx	r3
   24644:	ldr	r1, [r6]
   24648:	cmp	r0, r1
   2464c:	bne	24820 <zsav_read_compressed_data+0x59c>
   24650:	ldr	r1, [sl, #16]!
   24654:	str	r1, [fp, #-32]	; 0xffffffe0
   24658:	mov	r0, r4
   2465c:	bl	4d70 <readstat_realloc@plt>
   24660:	cmp	r0, #0
   24664:	beq	24828 <zsav_read_compressed_data+0x5a4>
   24668:	mov	r4, r0
   2466c:	ldr	r3, [r6]
   24670:	mov	r1, r7
   24674:	mov	r2, r8
   24678:	bl	4a04 <uncompress@plt>
   2467c:	mov	r9, #5
   24680:	cmp	r0, #0
   24684:	ldreq	r0, [sl]
   24688:	ldreq	r1, [fp, #-32]	; 0xffffffe0
   2468c:	cmpeq	r1, r0
   24690:	bne	247c8 <zsav_read_compressed_data+0x544>
   24694:	str	r8, [sp, #24]
   24698:	mov	r0, #1
   2469c:	str	r0, [sp, #136]	; 0x88
   246a0:	ldr	r0, [sp, #12]
   246a4:	add	r0, r0, #1
   246a8:	str	r0, [sp, #12]
   246ac:	mov	r0, #0
   246b0:	ldr	r2, [sp, #4]
   246b4:	b	246cc <zsav_read_compressed_data+0x448>
   246b8:	sub	r0, r4, sl
   246bc:	ldr	r1, [sp, #136]	; 0x88
   246c0:	cmp	r1, #0
   246c4:	mov	r4, r8
   246c8:	beq	24770 <zsav_read_compressed_data+0x4ec>
   246cc:	mov	r8, r4
   246d0:	add	r1, r4, r0
   246d4:	str	r1, [sp, #88]	; 0x58
   246d8:	ldr	r7, [sp, #28]
   246dc:	sub	r1, r7, r2
   246e0:	str	r1, [sp, #100]	; 0x64
   246e4:	ldr	r6, [sp, #32]
   246e8:	add	r1, r6, r2
   246ec:	str	r1, [sp, #96]	; 0x60
   246f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   246f4:	sub	r0, r1, r0
   246f8:	str	r0, [sp, #92]	; 0x5c
   246fc:	add	r0, sp, #88	; 0x58
   24700:	bl	4c98 <sav_decompress_row@plt>
   24704:	ldr	sl, [sp, #92]	; 0x5c
   24708:	ldr	r0, [sp, #136]	; 0x88
   2470c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   24710:	cmp	r0, #2
   24714:	bne	24740 <zsav_read_compressed_data+0x4bc>
   24718:	mov	r0, r6
   2471c:	mov	r1, r7
   24720:	mov	r2, r5
   24724:	ldr	r3, [sp, #36]	; 0x24
   24728:	blx	r3
   2472c:	cmp	r0, #0
   24730:	bne	247bc <zsav_read_compressed_data+0x538>
   24734:	mov	r2, #0
   24738:	ldr	r0, [sp, #136]	; 0x88
   2473c:	b	24748 <zsav_read_compressed_data+0x4c4>
   24740:	ldr	r1, [sp, #100]	; 0x64
   24744:	sub	r2, r7, r1
   24748:	mov	r9, #0
   2474c:	cmp	r0, #3
   24750:	beq	247c0 <zsav_read_compressed_data+0x53c>
   24754:	ldr	r0, [r5, #356]	; 0x164
   24758:	cmp	r0, #1
   2475c:	blt	246b8 <zsav_read_compressed_data+0x434>
   24760:	ldr	r1, [r5, #364]	; 0x16c
   24764:	cmp	r1, r0
   24768:	bne	246b8 <zsav_read_compressed_data+0x434>
   2476c:	b	247c0 <zsav_read_compressed_data+0x53c>
   24770:	str	r2, [sp, #4]
   24774:	ldr	r0, [sp]
   24778:	ldr	r1, [sp, #12]
   2477c:	cmp	r1, r0
   24780:	ldr	r8, [sp, #24]
   24784:	sub	r7, fp, #32
   24788:	bne	245dc <zsav_read_compressed_data+0x358>
   2478c:	b	247c8 <zsav_read_compressed_data+0x544>
   24790:	mov	r9, #3
   24794:	b	244ac <zsav_read_compressed_data+0x228>
   24798:	mov	r4, #0
   2479c:	mov	r9, #0
   247a0:	mov	r8, #0
   247a4:	b	247c8 <zsav_read_compressed_data+0x544>
   247a8:	mov	r4, #0
   247ac:	mov	r9, #3
   247b0:	mov	r0, #0
   247b4:	str	r0, [sp, #24]
   247b8:	b	247dc <zsav_read_compressed_data+0x558>
   247bc:	mov	r9, r0
   247c0:	mov	r4, r8
   247c4:	ldr	r8, [sp, #24]
   247c8:	str	r8, [sp, #24]
   247cc:	ldr	r0, [sp, #32]
   247d0:	cmp	r0, #0
   247d4:	beq	247dc <zsav_read_compressed_data+0x558>
   247d8:	bl	4938 <free@plt>
   247dc:	ldr	r6, [sp, #16]
   247e0:	ldr	r7, [sp, #20]
   247e4:	cmp	r7, #0
   247e8:	beq	247f4 <zsav_read_compressed_data+0x570>
   247ec:	mov	r0, r6
   247f0:	bl	4938 <free@plt>
   247f4:	ldr	r0, [sp, #24]
   247f8:	cmp	r0, #0
   247fc:	beq	24804 <zsav_read_compressed_data+0x580>
   24800:	bl	4938 <free@plt>
   24804:	cmp	r4, #0
   24808:	beq	244ac <zsav_read_compressed_data+0x228>
   2480c:	mov	r0, r4
   24810:	bl	4938 <free@plt>
   24814:	b	244ac <zsav_read_compressed_data+0x228>
   24818:	mov	r9, #15
   2481c:	b	247c8 <zsav_read_compressed_data+0x544>
   24820:	mov	r9, #2
   24824:	b	247c8 <zsav_read_compressed_data+0x544>
   24828:	mov	r4, #0
   2482c:	b	247c8 <zsav_read_compressed_data+0x544>

00024830 <zsav_write_compressed_row>:
   24830:	push	{r4, r5, fp, lr}
   24834:	add	fp, sp, #8
   24838:	mov	r4, r0
   2483c:	ldr	r5, [r0, #300]	; 0x12c
   24840:	ldr	r0, [r5]
   24844:	mov	r3, r4
   24848:	bl	4efc <sav_compress_row@plt>
   2484c:	mov	r1, r0
   24850:	ldr	r0, [r5]
   24854:	ldr	r2, [r4, #80]	; 0x50
   24858:	ldr	r3, [r4, #84]	; 0x54
   2485c:	sub	r2, r3, r2
   24860:	add	r2, r2, #1
   24864:	clz	r2, r2
   24868:	lsr	r2, r2, #5
   2486c:	mov	r3, r5
   24870:	bl	4f50 <zsav_compress_row@plt>
   24874:	mov	r1, #0
   24878:	cmp	r0, #1
   2487c:	movwhi	r1, #13
   24880:	mov	r0, r1
   24884:	pop	{r4, r5, fp, pc}

00024888 <zsav_end_data>:
   24888:	push	{r4, r5, fp, lr}
   2488c:	add	fp, sp, #8
   24890:	mov	r5, r0
   24894:	ldr	r4, [r0, #300]	; 0x12c
   24898:	mov	r1, r4
   2489c:	bl	248d0 <zsav_write_data_header>
   248a0:	cmp	r0, #0
   248a4:	popne	{r4, r5, fp, pc}
   248a8:	mov	r0, r5
   248ac:	mov	r1, r4
   248b0:	bl	249a0 <zsav_write_data_blocks>
   248b4:	cmp	r0, #0
   248b8:	beq	248c0 <zsav_end_data+0x38>
   248bc:	pop	{r4, r5, fp, pc}
   248c0:	mov	r0, r5
   248c4:	mov	r1, r4
   248c8:	pop	{r4, r5, fp, lr}
   248cc:	b	249f8 <zsav_write_data_trailer>

000248d0 <zsav_write_data_header>:
   248d0:	push	{r4, r5, fp, lr}
   248d4:	add	fp, sp, #8
   248d8:	sub	sp, sp, #24
   248dc:	mov	r5, r0
   248e0:	ldr	r0, [r1, #24]
   248e4:	ldr	r3, [r1, #28]
   248e8:	str	r3, [sp, #20]
   248ec:	str	r0, [sp, #16]
   248f0:	adds	r0, r0, #24
   248f4:	adc	r2, r3, #0
   248f8:	str	r2, [sp, #12]
   248fc:	str	r0, [sp, #8]
   24900:	ldr	r0, [r1, #8]
   24904:	add	r2, r0, r0, lsl #1
   24908:	mov	r3, #24
   2490c:	add	r2, r3, r2, lsl #3
   24910:	str	r2, [sp]
   24914:	asr	r2, r2, #31
   24918:	str	r2, [sp, #4]
   2491c:	cmp	r0, #1
   24920:	blt	24950 <zsav_write_data_header+0x80>
   24924:	ldr	r3, [r1, #4]
   24928:	ldr	r1, [sp, #8]
   2492c:	ldr	r2, [sp, #12]
   24930:	ldr	r4, [r3], #4
   24934:	ldr	r4, [r4, #4]
   24938:	adds	r1, r1, r4
   2493c:	adc	r2, r2, r4, asr #31
   24940:	subs	r0, r0, #1
   24944:	bne	24930 <zsav_write_data_header+0x60>
   24948:	str	r1, [sp, #8]
   2494c:	str	r2, [sp, #12]
   24950:	add	r1, sp, #16
   24954:	mov	r0, r5
   24958:	mov	r2, #8
   2495c:	bl	4ef0 <readstat_write_bytes@plt>
   24960:	cmp	r0, #0
   24964:	bne	24980 <zsav_write_data_header+0xb0>
   24968:	add	r1, sp, #8
   2496c:	mov	r0, r5
   24970:	mov	r2, #8
   24974:	bl	4ef0 <readstat_write_bytes@plt>
   24978:	cmp	r0, #0
   2497c:	beq	24988 <zsav_write_data_header+0xb8>
   24980:	sub	sp, fp, #8
   24984:	pop	{r4, r5, fp, pc}
   24988:	mov	r1, sp
   2498c:	mov	r0, r5
   24990:	mov	r2, #8
   24994:	bl	4ef0 <readstat_write_bytes@plt>
   24998:	sub	sp, fp, #8
   2499c:	pop	{r4, r5, fp, pc}

000249a0 <zsav_write_data_blocks>:
   249a0:	push	{r4, r5, r6, sl, fp, lr}
   249a4:	add	fp, sp, #16
   249a8:	mov	r5, r0
   249ac:	ldr	r0, [r1, #8]
   249b0:	cmp	r0, #1
   249b4:	blt	249f0 <zsav_write_data_blocks+0x50>
   249b8:	mov	r4, r1
   249bc:	mov	r6, #0
   249c0:	ldr	r0, [r4, #4]
   249c4:	ldr	r0, [r0, r6, lsl #2]
   249c8:	ldr	r2, [r0, #4]
   249cc:	ldr	r1, [r0, #64]	; 0x40
   249d0:	mov	r0, r5
   249d4:	bl	4ef0 <readstat_write_bytes@plt>
   249d8:	cmp	r0, #0
   249dc:	bne	249f4 <zsav_write_data_blocks+0x54>
   249e0:	add	r6, r6, #1
   249e4:	ldr	r0, [r4, #8]
   249e8:	cmp	r6, r0
   249ec:	blt	249c0 <zsav_write_data_blocks+0x20>
   249f0:	mov	r0, #0
   249f4:	pop	{r4, r5, r6, sl, fp, pc}

000249f8 <zsav_write_data_trailer>:
   249f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   249fc:	add	fp, sp, #28
   24a00:	sub	sp, sp, #52	; 0x34
   24a04:	mov	r4, r1
   24a08:	mov	r5, r0
   24a0c:	mvn	r0, #0
   24a10:	str	r0, [sp, #44]	; 0x2c
   24a14:	mvn	r0, #99	; 0x63
   24a18:	str	r0, [sp, #40]	; 0x28
   24a1c:	mov	r0, #0
   24a20:	str	r0, [sp, #36]	; 0x24
   24a24:	str	r0, [sp, #32]
   24a28:	ldr	r0, [r1, #16]
   24a2c:	str	r0, [sp, #28]
   24a30:	ldr	r0, [r1, #8]
   24a34:	str	r0, [sp, #24]
   24a38:	add	r1, sp, #40	; 0x28
   24a3c:	mov	r0, r5
   24a40:	mov	r2, #8
   24a44:	bl	4ef0 <readstat_write_bytes@plt>
   24a48:	cmp	r0, #0
   24a4c:	bne	24a98 <zsav_write_data_trailer+0xa0>
   24a50:	add	r1, sp, #32
   24a54:	mov	r0, r5
   24a58:	mov	r2, #8
   24a5c:	bl	4ef0 <readstat_write_bytes@plt>
   24a60:	cmp	r0, #0
   24a64:	bne	24a98 <zsav_write_data_trailer+0xa0>
   24a68:	add	r1, sp, #28
   24a6c:	mov	r0, r5
   24a70:	mov	r2, #4
   24a74:	bl	4ef0 <readstat_write_bytes@plt>
   24a78:	cmp	r0, #0
   24a7c:	bne	24a98 <zsav_write_data_trailer+0xa0>
   24a80:	add	r1, sp, #24
   24a84:	mov	r0, r5
   24a88:	mov	r2, #4
   24a8c:	bl	4ef0 <readstat_write_bytes@plt>
   24a90:	cmp	r0, #0
   24a94:	beq	24aa0 <zsav_write_data_trailer+0xa8>
   24a98:	sub	sp, fp, #28
   24a9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24aa0:	add	r0, r4, #24
   24aa4:	ldrd	r0, [r0]
   24aa8:	str	r1, [sp, #20]
   24aac:	str	r0, [sp, #16]
   24ab0:	adds	r0, r0, #24
   24ab4:	str	r0, [sp, #8]
   24ab8:	adc	r0, r1, #0
   24abc:	str	r0, [sp, #12]
   24ac0:	ldr	r0, [r4, #8]
   24ac4:	cmp	r0, #1
   24ac8:	blt	24ba8 <zsav_write_data_trailer+0x1b0>
   24acc:	mov	r7, #0
   24ad0:	add	r6, sp, #16
   24ad4:	add	sl, sp, #8
   24ad8:	add	r8, sp, #4
   24adc:	mov	r9, sp
   24ae0:	ldr	r0, [r4, #4]
   24ae4:	ldr	r0, [r0, r7, lsl #2]
   24ae8:	ldr	r1, [r0]
   24aec:	str	r1, [sp, #4]
   24af0:	ldr	r0, [r0, #4]
   24af4:	str	r0, [sp]
   24af8:	mov	r0, r5
   24afc:	mov	r1, r6
   24b00:	mov	r2, #8
   24b04:	bl	4ef0 <readstat_write_bytes@plt>
   24b08:	cmp	r0, #0
   24b0c:	bne	24a98 <zsav_write_data_trailer+0xa0>
   24b10:	mov	r0, r5
   24b14:	mov	r1, sl
   24b18:	mov	r2, #8
   24b1c:	bl	4ef0 <readstat_write_bytes@plt>
   24b20:	cmp	r0, #0
   24b24:	bne	24a98 <zsav_write_data_trailer+0xa0>
   24b28:	mov	r0, r5
   24b2c:	mov	r1, r8
   24b30:	mov	r2, #4
   24b34:	bl	4ef0 <readstat_write_bytes@plt>
   24b38:	cmp	r0, #0
   24b3c:	bne	24a98 <zsav_write_data_trailer+0xa0>
   24b40:	mov	r0, r5
   24b44:	mov	r1, r9
   24b48:	mov	r2, #4
   24b4c:	bl	4ef0 <readstat_write_bytes@plt>
   24b50:	cmp	r0, #0
   24b54:	bne	24a98 <zsav_write_data_trailer+0xa0>
   24b58:	ldr	r0, [sp, #4]
   24b5c:	ldr	r1, [sp, #16]
   24b60:	ldr	r2, [sp, #20]
   24b64:	adds	r1, r1, r0
   24b68:	str	r1, [sp, #16]
   24b6c:	adc	r0, r2, r0, asr #31
   24b70:	ldr	r1, [sp]
   24b74:	ldr	r2, [sp, #8]
   24b78:	ldr	r3, [sp, #12]
   24b7c:	adds	r2, r2, r1
   24b80:	str	r2, [sp, #8]
   24b84:	str	r0, [sp, #20]
   24b88:	adc	r0, r3, r1, asr #31
   24b8c:	str	r0, [sp, #12]
   24b90:	add	r7, r7, #1
   24b94:	ldr	r1, [r4, #8]
   24b98:	mov	r0, #0
   24b9c:	cmp	r7, r1
   24ba0:	blt	24ae0 <zsav_write_data_trailer+0xe8>
   24ba4:	b	24a98 <zsav_write_data_trailer+0xa0>
   24ba8:	mov	r0, #0
   24bac:	sub	sp, fp, #28
   24bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00024bb4 <__aeabi_drsub>:
   24bb4:	eor	r1, r1, #-2147483648	; 0x80000000
   24bb8:	b	24bc0 <__adddf3>

00024bbc <__aeabi_dsub>:
   24bbc:	eor	r3, r3, #-2147483648	; 0x80000000

00024bc0 <__adddf3>:
   24bc0:	push	{r4, r5, lr}
   24bc4:	lsl	r4, r1, #1
   24bc8:	lsl	r5, r3, #1
   24bcc:	teq	r4, r5
   24bd0:	teqeq	r0, r2
   24bd4:	orrsne	ip, r4, r0
   24bd8:	orrsne	ip, r5, r2
   24bdc:	mvnsne	ip, r4, asr #21
   24be0:	mvnsne	ip, r5, asr #21
   24be4:	beq	24dd0 <__adddf3+0x210>
   24be8:	lsr	r4, r4, #21
   24bec:	rsbs	r5, r4, r5, lsr #21
   24bf0:	rsblt	r5, r5, #0
   24bf4:	ble	24c14 <__adddf3+0x54>
   24bf8:	add	r4, r4, r5
   24bfc:	eor	r2, r0, r2
   24c00:	eor	r3, r1, r3
   24c04:	eor	r0, r2, r0
   24c08:	eor	r1, r3, r1
   24c0c:	eor	r2, r0, r2
   24c10:	eor	r3, r1, r3
   24c14:	cmp	r5, #54	; 0x36
   24c18:	pophi	{r4, r5, pc}
   24c1c:	tst	r1, #-2147483648	; 0x80000000
   24c20:	lsl	r1, r1, #12
   24c24:	mov	ip, #1048576	; 0x100000
   24c28:	orr	r1, ip, r1, lsr #12
   24c2c:	beq	24c38 <__adddf3+0x78>
   24c30:	rsbs	r0, r0, #0
   24c34:	rsc	r1, r1, #0
   24c38:	tst	r3, #-2147483648	; 0x80000000
   24c3c:	lsl	r3, r3, #12
   24c40:	orr	r3, ip, r3, lsr #12
   24c44:	beq	24c50 <__adddf3+0x90>
   24c48:	rsbs	r2, r2, #0
   24c4c:	rsc	r3, r3, #0
   24c50:	teq	r4, r5
   24c54:	beq	24db8 <__adddf3+0x1f8>
   24c58:	sub	r4, r4, #1
   24c5c:	rsbs	lr, r5, #32
   24c60:	blt	24c7c <__adddf3+0xbc>
   24c64:	lsl	ip, r2, lr
   24c68:	adds	r0, r0, r2, lsr r5
   24c6c:	adc	r1, r1, #0
   24c70:	adds	r0, r0, r3, lsl lr
   24c74:	adcs	r1, r1, r3, asr r5
   24c78:	b	24c98 <__adddf3+0xd8>
   24c7c:	sub	r5, r5, #32
   24c80:	add	lr, lr, #32
   24c84:	cmp	r2, #1
   24c88:	lsl	ip, r3, lr
   24c8c:	orrcs	ip, ip, #2
   24c90:	adds	r0, r0, r3, asr r5
   24c94:	adcs	r1, r1, r3, asr #31
   24c98:	and	r5, r1, #-2147483648	; 0x80000000
   24c9c:	bpl	24cac <__adddf3+0xec>
   24ca0:	rsbs	ip, ip, #0
   24ca4:	rscs	r0, r0, #0
   24ca8:	rsc	r1, r1, #0
   24cac:	cmp	r1, #1048576	; 0x100000
   24cb0:	bcc	24cf0 <__adddf3+0x130>
   24cb4:	cmp	r1, #2097152	; 0x200000
   24cb8:	bcc	24cd8 <__adddf3+0x118>
   24cbc:	lsrs	r1, r1, #1
   24cc0:	rrxs	r0, r0
   24cc4:	rrx	ip, ip
   24cc8:	add	r4, r4, #1
   24ccc:	lsl	r2, r4, #21
   24cd0:	cmn	r2, #4194304	; 0x400000
   24cd4:	bcs	24e30 <__adddf3+0x270>
   24cd8:	cmp	ip, #-2147483648	; 0x80000000
   24cdc:	lsrseq	ip, r0, #1
   24ce0:	adcs	r0, r0, #0
   24ce4:	adc	r1, r1, r4, lsl #20
   24ce8:	orr	r1, r1, r5
   24cec:	pop	{r4, r5, pc}
   24cf0:	lsls	ip, ip, #1
   24cf4:	adcs	r0, r0, r0
   24cf8:	adc	r1, r1, r1
   24cfc:	tst	r1, #1048576	; 0x100000
   24d00:	sub	r4, r4, #1
   24d04:	bne	24cd8 <__adddf3+0x118>
   24d08:	teq	r1, #0
   24d0c:	moveq	r1, r0
   24d10:	moveq	r0, #0
   24d14:	clz	r3, r1
   24d18:	addeq	r3, r3, #32
   24d1c:	sub	r3, r3, #11
   24d20:	subs	r2, r3, #32
   24d24:	bge	24d48 <__adddf3+0x188>
   24d28:	adds	r2, r2, #12
   24d2c:	ble	24d44 <__adddf3+0x184>
   24d30:	add	ip, r2, #20
   24d34:	rsb	r2, r2, #12
   24d38:	lsl	r0, r1, ip
   24d3c:	lsr	r1, r1, r2
   24d40:	b	24d58 <__adddf3+0x198>
   24d44:	add	r2, r2, #20
   24d48:	rsble	ip, r2, #32
   24d4c:	lsl	r1, r1, r2
   24d50:	orrle	r1, r1, r0, lsr ip
   24d54:	lslle	r0, r0, r2
   24d58:	subs	r4, r4, r3
   24d5c:	addge	r1, r1, r4, lsl #20
   24d60:	orrge	r1, r1, r5
   24d64:	popge	{r4, r5, pc}
   24d68:	mvn	r4, r4
   24d6c:	subs	r4, r4, #31
   24d70:	bge	24dac <__adddf3+0x1ec>
   24d74:	adds	r4, r4, #12
   24d78:	bgt	24d94 <__adddf3+0x1d4>
   24d7c:	add	r4, r4, #20
   24d80:	rsb	r2, r4, #32
   24d84:	lsr	r0, r0, r4
   24d88:	orr	r0, r0, r1, lsl r2
   24d8c:	orr	r1, r5, r1, lsr r4
   24d90:	pop	{r4, r5, pc}
   24d94:	rsb	r4, r4, #12
   24d98:	rsb	r2, r4, #32
   24d9c:	lsr	r0, r0, r2
   24da0:	orr	r0, r0, r1, lsl r4
   24da4:	mov	r1, r5
   24da8:	pop	{r4, r5, pc}
   24dac:	lsr	r0, r1, r4
   24db0:	mov	r1, r5
   24db4:	pop	{r4, r5, pc}
   24db8:	teq	r4, #0
   24dbc:	eor	r3, r3, #1048576	; 0x100000
   24dc0:	eoreq	r1, r1, #1048576	; 0x100000
   24dc4:	addeq	r4, r4, #1
   24dc8:	subne	r5, r5, #1
   24dcc:	b	24c58 <__adddf3+0x98>
   24dd0:	mvns	ip, r4, asr #21
   24dd4:	mvnsne	ip, r5, asr #21
   24dd8:	beq	24e40 <__adddf3+0x280>
   24ddc:	teq	r4, r5
   24de0:	teqeq	r0, r2
   24de4:	beq	24df8 <__adddf3+0x238>
   24de8:	orrs	ip, r4, r0
   24dec:	moveq	r1, r3
   24df0:	moveq	r0, r2
   24df4:	pop	{r4, r5, pc}
   24df8:	teq	r1, r3
   24dfc:	movne	r1, #0
   24e00:	movne	r0, #0
   24e04:	popne	{r4, r5, pc}
   24e08:	lsrs	ip, r4, #21
   24e0c:	bne	24e20 <__adddf3+0x260>
   24e10:	lsls	r0, r0, #1
   24e14:	adcs	r1, r1, r1
   24e18:	orrcs	r1, r1, #-2147483648	; 0x80000000
   24e1c:	pop	{r4, r5, pc}
   24e20:	adds	r4, r4, #4194304	; 0x400000
   24e24:	addcc	r1, r1, #1048576	; 0x100000
   24e28:	popcc	{r4, r5, pc}
   24e2c:	and	r5, r1, #-2147483648	; 0x80000000
   24e30:	orr	r1, r5, #2130706432	; 0x7f000000
   24e34:	orr	r1, r1, #15728640	; 0xf00000
   24e38:	mov	r0, #0
   24e3c:	pop	{r4, r5, pc}
   24e40:	mvns	ip, r4, asr #21
   24e44:	movne	r1, r3
   24e48:	movne	r0, r2
   24e4c:	mvnseq	ip, r5, asr #21
   24e50:	movne	r3, r1
   24e54:	movne	r2, r0
   24e58:	orrs	r4, r0, r1, lsl #12
   24e5c:	orrseq	r5, r2, r3, lsl #12
   24e60:	teqeq	r1, r3
   24e64:	orrne	r1, r1, #524288	; 0x80000
   24e68:	pop	{r4, r5, pc}

00024e6c <__aeabi_ui2d>:
   24e6c:	teq	r0, #0
   24e70:	moveq	r1, #0
   24e74:	bxeq	lr
   24e78:	push	{r4, r5, lr}
   24e7c:	mov	r4, #1024	; 0x400
   24e80:	add	r4, r4, #50	; 0x32
   24e84:	mov	r5, #0
   24e88:	mov	r1, #0
   24e8c:	b	24d08 <__adddf3+0x148>

00024e90 <__aeabi_i2d>:
   24e90:	teq	r0, #0
   24e94:	moveq	r1, #0
   24e98:	bxeq	lr
   24e9c:	push	{r4, r5, lr}
   24ea0:	mov	r4, #1024	; 0x400
   24ea4:	add	r4, r4, #50	; 0x32
   24ea8:	ands	r5, r0, #-2147483648	; 0x80000000
   24eac:	rsbmi	r0, r0, #0
   24eb0:	mov	r1, #0
   24eb4:	b	24d08 <__adddf3+0x148>

00024eb8 <__aeabi_f2d>:
   24eb8:	lsls	r2, r0, #1
   24ebc:	asr	r1, r2, #3
   24ec0:	rrx	r1, r1
   24ec4:	lsl	r0, r2, #28
   24ec8:	andsne	r3, r2, #-16777216	; 0xff000000
   24ecc:	teqne	r3, #-16777216	; 0xff000000
   24ed0:	eorne	r1, r1, #939524096	; 0x38000000
   24ed4:	bxne	lr
   24ed8:	bics	r2, r2, #-16777216	; 0xff000000
   24edc:	bxeq	lr
   24ee0:	teq	r3, #-16777216	; 0xff000000
   24ee4:	orreq	r1, r1, #524288	; 0x80000
   24ee8:	bxeq	lr
   24eec:	push	{r4, r5, lr}
   24ef0:	mov	r4, #896	; 0x380
   24ef4:	and	r5, r1, #-2147483648	; 0x80000000
   24ef8:	bic	r1, r1, #-2147483648	; 0x80000000
   24efc:	b	24d08 <__adddf3+0x148>

00024f00 <__aeabi_ul2d>:
   24f00:	orrs	r2, r0, r1
   24f04:	bxeq	lr
   24f08:	push	{r4, r5, lr}
   24f0c:	mov	r5, #0
   24f10:	b	24f30 <__aeabi_l2d+0x1c>

00024f14 <__aeabi_l2d>:
   24f14:	orrs	r2, r0, r1
   24f18:	bxeq	lr
   24f1c:	push	{r4, r5, lr}
   24f20:	ands	r5, r1, #-2147483648	; 0x80000000
   24f24:	bpl	24f30 <__aeabi_l2d+0x1c>
   24f28:	rsbs	r0, r0, #0
   24f2c:	rsc	r1, r1, #0
   24f30:	mov	r4, #1024	; 0x400
   24f34:	add	r4, r4, #50	; 0x32
   24f38:	lsrs	ip, r1, #22
   24f3c:	beq	24cac <__adddf3+0xec>
   24f40:	mov	r2, #3
   24f44:	lsrs	ip, ip, #3
   24f48:	addne	r2, r2, #3
   24f4c:	lsrs	ip, ip, #3
   24f50:	addne	r2, r2, #3
   24f54:	add	r2, r2, ip, lsr #3
   24f58:	rsb	r3, r2, #32
   24f5c:	lsl	ip, r0, r3
   24f60:	lsr	r0, r0, r2
   24f64:	orr	r0, r0, r1, lsl r3
   24f68:	lsr	r1, r1, r2
   24f6c:	add	r4, r4, r2
   24f70:	b	24cac <__adddf3+0xec>

00024f74 <__aeabi_ldivmod>:
   24f74:	cmp	r3, #0
   24f78:	cmpeq	r2, #0
   24f7c:	bne	24fa0 <__aeabi_ldivmod+0x2c>
   24f80:	cmp	r1, #0
   24f84:	movlt	r1, #-2147483648	; 0x80000000
   24f88:	movlt	r0, #0
   24f8c:	blt	24f9c <__aeabi_ldivmod+0x28>
   24f90:	cmpeq	r0, #0
   24f94:	mvnne	r1, #-2147483648	; 0x80000000
   24f98:	mvnne	r0, #0
   24f9c:	b	25084 <__aeabi_idiv0>
   24fa0:	sub	sp, sp, #8
   24fa4:	push	{sp, lr}
   24fa8:	cmp	r1, #0
   24fac:	blt	24fcc <__aeabi_ldivmod+0x58>
   24fb0:	cmp	r3, #0
   24fb4:	blt	25000 <__aeabi_ldivmod+0x8c>
   24fb8:	bl	25100 <__udivmoddi4>
   24fbc:	ldr	lr, [sp, #4]
   24fc0:	add	sp, sp, #8
   24fc4:	pop	{r2, r3}
   24fc8:	bx	lr
   24fcc:	rsbs	r0, r0, #0
   24fd0:	sbc	r1, r1, r1, lsl #1
   24fd4:	cmp	r3, #0
   24fd8:	blt	25024 <__aeabi_ldivmod+0xb0>
   24fdc:	bl	25100 <__udivmoddi4>
   24fe0:	ldr	lr, [sp, #4]
   24fe4:	add	sp, sp, #8
   24fe8:	pop	{r2, r3}
   24fec:	rsbs	r0, r0, #0
   24ff0:	sbc	r1, r1, r1, lsl #1
   24ff4:	rsbs	r2, r2, #0
   24ff8:	sbc	r3, r3, r3, lsl #1
   24ffc:	bx	lr
   25000:	rsbs	r2, r2, #0
   25004:	sbc	r3, r3, r3, lsl #1
   25008:	bl	25100 <__udivmoddi4>
   2500c:	ldr	lr, [sp, #4]
   25010:	add	sp, sp, #8
   25014:	pop	{r2, r3}
   25018:	rsbs	r0, r0, #0
   2501c:	sbc	r1, r1, r1, lsl #1
   25020:	bx	lr
   25024:	rsbs	r2, r2, #0
   25028:	sbc	r3, r3, r3, lsl #1
   2502c:	bl	25100 <__udivmoddi4>
   25030:	ldr	lr, [sp, #4]
   25034:	add	sp, sp, #8
   25038:	pop	{r2, r3}
   2503c:	rsbs	r2, r2, #0
   25040:	sbc	r3, r3, r3, lsl #1
   25044:	bx	lr

00025048 <__aeabi_uldivmod>:
   25048:	cmp	r3, #0
   2504c:	cmpeq	r2, #0
   25050:	bne	25068 <__aeabi_uldivmod+0x20>
   25054:	cmp	r1, #0
   25058:	cmpeq	r0, #0
   2505c:	mvnne	r1, #0
   25060:	mvnne	r0, #0
   25064:	b	25084 <__aeabi_idiv0>
   25068:	sub	sp, sp, #8
   2506c:	push	{sp, lr}
   25070:	bl	25100 <__udivmoddi4>
   25074:	ldr	lr, [sp, #4]
   25078:	add	sp, sp, #8
   2507c:	pop	{r2, r3}
   25080:	bx	lr

00025084 <__aeabi_idiv0>:
   25084:	push	{r1, lr}
   25088:	mov	r0, #8
   2508c:	bl	4800 <raise@plt>
   25090:	pop	{r1, pc}

00025094 <__aeabi_d2lz>:
   25094:	vmov	d7, r0, r1
   25098:	vcmpe.f64	d7, #0.0
   2509c:	vmrs	APSR_nzcv, fpscr
   250a0:	bmi	250a8 <__aeabi_d2lz+0x14>
   250a4:	b	250c0 <__aeabi_d2ulz>
   250a8:	push	{r4, lr}
   250ac:	eor	r1, r1, #-2147483648	; 0x80000000
   250b0:	bl	250c0 <__aeabi_d2ulz>
   250b4:	rsbs	r0, r0, #0
   250b8:	rsc	r1, r1, #0
   250bc:	pop	{r4, pc}

000250c0 <__aeabi_d2ulz>:
   250c0:	vmov	d6, r0, r1
   250c4:	vldr	d7, [pc, #36]	; 250f0 <__aeabi_d2ulz+0x30>
   250c8:	vldr	d5, [pc, #40]	; 250f8 <__aeabi_d2ulz+0x38>
   250cc:	vmul.f64	d7, d6, d7
   250d0:	vcvt.u32.f64	s14, d7
   250d4:	vcvt.f64.u32	d4, s14
   250d8:	vmov	r1, s14
   250dc:	vmls.f64	d6, d4, d5
   250e0:	vcvt.u32.f64	s15, d6
   250e4:	vmov	r0, s15
   250e8:	bx	lr
   250ec:	nop			; (mov r0, r0)
   250f0:	.word	0x00000000
   250f4:	.word	0x3df00000
   250f8:	.word	0x00000000
   250fc:	.word	0x41f00000

00025100 <__udivmoddi4>:
   25100:	cmp	r1, r3
   25104:	cmpeq	r0, r2
   25108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2510c:	mov	r4, r0
   25110:	movcc	r0, #0
   25114:	mov	r5, r1
   25118:	ldr	lr, [sp, #36]	; 0x24
   2511c:	movcc	r1, r0
   25120:	bcc	2521c <__udivmoddi4+0x11c>
   25124:	cmp	r3, #0
   25128:	clzeq	ip, r2
   2512c:	clzne	ip, r3
   25130:	addeq	ip, ip, #32
   25134:	cmp	r5, #0
   25138:	clzeq	r1, r4
   2513c:	addeq	r1, r1, #32
   25140:	clzne	r1, r5
   25144:	sub	ip, ip, r1
   25148:	sub	sl, ip, #32
   2514c:	lsl	r9, r3, ip
   25150:	rsb	fp, ip, #32
   25154:	orr	r9, r9, r2, lsl sl
   25158:	orr	r9, r9, r2, lsr fp
   2515c:	lsl	r8, r2, ip
   25160:	cmp	r5, r9
   25164:	cmpeq	r4, r8
   25168:	movcc	r0, #0
   2516c:	movcc	r1, r0
   25170:	bcc	2518c <__udivmoddi4+0x8c>
   25174:	mov	r0, #1
   25178:	subs	r4, r4, r8
   2517c:	lsl	r1, r0, sl
   25180:	orr	r1, r1, r0, lsr fp
   25184:	lsl	r0, r0, ip
   25188:	sbc	r5, r5, r9
   2518c:	cmp	ip, #0
   25190:	beq	2521c <__udivmoddi4+0x11c>
   25194:	lsr	r6, r8, #1
   25198:	orr	r6, r6, r9, lsl #31
   2519c:	lsr	r7, r9, #1
   251a0:	mov	r2, ip
   251a4:	b	251c8 <__udivmoddi4+0xc8>
   251a8:	subs	r3, r4, r6
   251ac:	sbc	r8, r5, r7
   251b0:	adds	r3, r3, r3
   251b4:	adc	r8, r8, r8
   251b8:	adds	r4, r3, #1
   251bc:	adc	r5, r8, #0
   251c0:	subs	r2, r2, #1
   251c4:	beq	251e4 <__udivmoddi4+0xe4>
   251c8:	cmp	r5, r7
   251cc:	cmpeq	r4, r6
   251d0:	bcs	251a8 <__udivmoddi4+0xa8>
   251d4:	adds	r4, r4, r4
   251d8:	adc	r5, r5, r5
   251dc:	subs	r2, r2, #1
   251e0:	bne	251c8 <__udivmoddi4+0xc8>
   251e4:	lsr	r3, r4, ip
   251e8:	orr	r3, r3, r5, lsl fp
   251ec:	lsr	r2, r5, ip
   251f0:	orr	r3, r3, r5, lsr sl
   251f4:	adds	r0, r0, r4
   251f8:	mov	r4, r3
   251fc:	lsl	r3, r2, ip
   25200:	orr	r3, r3, r4, lsl sl
   25204:	lsl	ip, r4, ip
   25208:	orr	r3, r3, r4, lsr fp
   2520c:	adc	r1, r1, r5
   25210:	subs	r0, r0, ip
   25214:	mov	r5, r2
   25218:	sbc	r1, r1, r3
   2521c:	cmp	lr, #0
   25220:	strdne	r4, [lr]
   25224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

00025228 <_fini>:
   25228:	push	{r3, lr}
   2522c:	pop	{r3, pc}
