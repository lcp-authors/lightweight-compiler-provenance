
../repos/coreutils/src/tr:     file format elf32-littlearm


Disassembly of section .init:

00010c78 <.init>:
   10c78:	push	{r3, lr}
   10c7c:	bl	10f5c <__assert_fail@plt+0x48>
   10c80:	pop	{r3, pc}

Disassembly of section .plt:

00010c84 <calloc@plt-0x14>:
   10c84:	push	{lr}		; (str lr, [sp, #-4]!)
   10c88:	ldr	lr, [pc, #4]	; 10c94 <calloc@plt-0x4>
   10c8c:	add	lr, pc, lr
   10c90:	ldr	pc, [lr, #8]!
   10c94:	andeq	ip, r1, ip, ror #6

00010c98 <calloc@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #28, 20	; 0x1c000
   10ca0:	ldr	pc, [ip, #876]!	; 0x36c

00010ca4 <fputs_unlocked@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #28, 20	; 0x1c000
   10cac:	ldr	pc, [ip, #868]!	; 0x364

00010cb0 <strcmp@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #28, 20	; 0x1c000
   10cb8:	ldr	pc, [ip, #860]!	; 0x35c

00010cbc <posix_fadvise64@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #28, 20	; 0x1c000
   10cc4:	ldr	pc, [ip, #852]!	; 0x354

00010cc8 <printf@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #28, 20	; 0x1c000
   10cd0:	ldr	pc, [ip, #844]!	; 0x34c

00010cd4 <read@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #28, 20	; 0x1c000
   10cdc:	ldr	pc, [ip, #836]!	; 0x344

00010ce0 <fflush@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #28, 20	; 0x1c000
   10ce8:	ldr	pc, [ip, #828]!	; 0x33c

00010cec <free@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #28, 20	; 0x1c000
   10cf4:	ldr	pc, [ip, #820]!	; 0x334

00010cf8 <_exit@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #28, 20	; 0x1c000
   10d00:	ldr	pc, [ip, #812]!	; 0x32c

00010d04 <memcpy@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #28, 20	; 0x1c000
   10d0c:	ldr	pc, [ip, #804]!	; 0x324

00010d10 <tolower@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #28, 20	; 0x1c000
   10d18:	ldr	pc, [ip, #796]!	; 0x31c

00010d1c <mbsinit@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #28, 20	; 0x1c000
   10d24:	ldr	pc, [ip, #788]!	; 0x314

00010d28 <fwrite_unlocked@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #28, 20	; 0x1c000
   10d30:	ldr	pc, [ip, #780]!	; 0x30c

00010d34 <memcmp@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #28, 20	; 0x1c000
   10d3c:	ldr	pc, [ip, #772]!	; 0x304

00010d40 <stpcpy@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #28, 20	; 0x1c000
   10d48:	ldr	pc, [ip, #764]!	; 0x2fc

00010d4c <fputc_unlocked@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #28, 20	; 0x1c000
   10d54:	ldr	pc, [ip, #756]!	; 0x2f4

00010d58 <realloc@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #28, 20	; 0x1c000
   10d60:	ldr	pc, [ip, #748]!	; 0x2ec

00010d64 <textdomain@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #28, 20	; 0x1c000
   10d6c:	ldr	pc, [ip, #740]!	; 0x2e4

00010d70 <iswprint@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #28, 20	; 0x1c000
   10d78:	ldr	pc, [ip, #732]!	; 0x2dc

00010d7c <fwrite@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #28, 20	; 0x1c000
   10d84:	ldr	pc, [ip, #724]!	; 0x2d4

00010d88 <lseek64@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #28, 20	; 0x1c000
   10d90:	ldr	pc, [ip, #716]!	; 0x2cc

00010d94 <__ctype_get_mb_cur_max@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #28, 20	; 0x1c000
   10d9c:	ldr	pc, [ip, #708]!	; 0x2c4

00010da0 <__fpending@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #28, 20	; 0x1c000
   10da8:	ldr	pc, [ip, #700]!	; 0x2bc

00010dac <ferror_unlocked@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #28, 20	; 0x1c000
   10db4:	ldr	pc, [ip, #692]!	; 0x2b4

00010db8 <mbrtowc@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #28, 20	; 0x1c000
   10dc0:	ldr	pc, [ip, #684]!	; 0x2ac

00010dc4 <error@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #28, 20	; 0x1c000
   10dcc:	ldr	pc, [ip, #676]!	; 0x2a4

00010dd0 <malloc@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #28, 20	; 0x1c000
   10dd8:	ldr	pc, [ip, #668]!	; 0x29c

00010ddc <__libc_start_main@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #28, 20	; 0x1c000
   10de4:	ldr	pc, [ip, #660]!	; 0x294

00010de8 <__freading@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #28, 20	; 0x1c000
   10df0:	ldr	pc, [ip, #652]!	; 0x28c

00010df4 <__gmon_start__@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #28, 20	; 0x1c000
   10dfc:	ldr	pc, [ip, #644]!	; 0x284

00010e00 <getopt_long@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #28, 20	; 0x1c000
   10e08:	ldr	pc, [ip, #636]!	; 0x27c

00010e0c <__ctype_b_loc@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #28, 20	; 0x1c000
   10e14:	ldr	pc, [ip, #628]!	; 0x274

00010e18 <exit@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #28, 20	; 0x1c000
   10e20:	ldr	pc, [ip, #620]!	; 0x26c

00010e24 <gettext@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #28, 20	; 0x1c000
   10e2c:	ldr	pc, [ip, #612]!	; 0x264

00010e30 <strlen@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #28, 20	; 0x1c000
   10e38:	ldr	pc, [ip, #604]!	; 0x25c

00010e3c <strchr@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #28, 20	; 0x1c000
   10e44:	ldr	pc, [ip, #596]!	; 0x254

00010e48 <fprintf@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #28, 20	; 0x1c000
   10e50:	ldr	pc, [ip, #588]!	; 0x24c

00010e54 <__errno_location@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #28, 20	; 0x1c000
   10e5c:	ldr	pc, [ip, #580]!	; 0x244

00010e60 <__cxa_atexit@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #28, 20	; 0x1c000
   10e68:	ldr	pc, [ip, #572]!	; 0x23c

00010e6c <memset@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #28, 20	; 0x1c000
   10e74:	ldr	pc, [ip, #564]!	; 0x234

00010e78 <fileno@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #28, 20	; 0x1c000
   10e80:	ldr	pc, [ip, #556]!	; 0x22c

00010e84 <strtoumax@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #28, 20	; 0x1c000
   10e8c:	ldr	pc, [ip, #548]!	; 0x224

00010e90 <fclose@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #28, 20	; 0x1c000
   10e98:	ldr	pc, [ip, #540]!	; 0x21c

00010e9c <fseeko64@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #28, 20	; 0x1c000
   10ea4:	ldr	pc, [ip, #532]!	; 0x214

00010ea8 <setlocale@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #28, 20	; 0x1c000
   10eb0:	ldr	pc, [ip, #524]!	; 0x20c

00010eb4 <toupper@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #28, 20	; 0x1c000
   10ebc:	ldr	pc, [ip, #516]!	; 0x204

00010ec0 <strrchr@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #28, 20	; 0x1c000
   10ec8:	ldr	pc, [ip, #508]!	; 0x1fc

00010ecc <nl_langinfo@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #28, 20	; 0x1c000
   10ed4:	ldr	pc, [ip, #500]!	; 0x1f4

00010ed8 <sprintf@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #28, 20	; 0x1c000
   10ee0:	ldr	pc, [ip, #492]!	; 0x1ec

00010ee4 <bindtextdomain@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #28, 20	; 0x1c000
   10eec:	ldr	pc, [ip, #484]!	; 0x1e4

00010ef0 <strncmp@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #28, 20	; 0x1c000
   10ef8:	ldr	pc, [ip, #476]!	; 0x1dc

00010efc <abort@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #28, 20	; 0x1c000
   10f04:	ldr	pc, [ip, #468]!	; 0x1d4

00010f08 <close@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #28, 20	; 0x1c000
   10f10:	ldr	pc, [ip, #460]!	; 0x1cc

00010f14 <__assert_fail@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #28, 20	; 0x1c000
   10f1c:	ldr	pc, [ip, #452]!	; 0x1c4

Disassembly of section .text:

00010f20 <.text>:
   10f20:	mov	fp, #0
   10f24:	mov	lr, #0
   10f28:	pop	{r1}		; (ldr r1, [sp], #4)
   10f2c:	mov	r2, sp
   10f30:	push	{r2}		; (str r2, [sp, #-4]!)
   10f34:	push	{r0}		; (str r0, [sp, #-4]!)
   10f38:	ldr	ip, [pc, #16]	; 10f50 <__assert_fail@plt+0x3c>
   10f3c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f40:	ldr	r0, [pc, #12]	; 10f54 <__assert_fail@plt+0x40>
   10f44:	ldr	r3, [pc, #12]	; 10f58 <__assert_fail@plt+0x44>
   10f48:	bl	10ddc <__libc_start_main@plt>
   10f4c:	bl	10efc <abort@plt>
   10f50:	andeq	sl, r1, ip, lsr #18
   10f54:	andeq	r4, r1, r8, ror #8
   10f58:	andeq	sl, r1, ip, asr #17
   10f5c:	ldr	r3, [pc, #20]	; 10f78 <__assert_fail@plt+0x64>
   10f60:	ldr	r2, [pc, #20]	; 10f7c <__assert_fail@plt+0x68>
   10f64:	add	r3, pc, r3
   10f68:	ldr	r2, [r3, r2]
   10f6c:	cmp	r2, #0
   10f70:	bxeq	lr
   10f74:	b	10df4 <__gmon_start__@plt>
   10f78:	muleq	r1, r4, r0
   10f7c:	andeq	r0, r0, r4, ror #1
   10f80:	ldr	r0, [pc, #24]	; 10fa0 <__assert_fail@plt+0x8c>
   10f84:	ldr	r3, [pc, #24]	; 10fa4 <__assert_fail@plt+0x90>
   10f88:	cmp	r3, r0
   10f8c:	bxeq	lr
   10f90:	ldr	r3, [pc, #16]	; 10fa8 <__assert_fail@plt+0x94>
   10f94:	cmp	r3, #0
   10f98:	bxeq	lr
   10f9c:	bx	r3
   10fa0:	andeq	sp, r2, r8, lsr r1
   10fa4:	andeq	sp, r2, r8, lsr r1
   10fa8:	andeq	r0, r0, r0
   10fac:	ldr	r0, [pc, #36]	; 10fd8 <__assert_fail@plt+0xc4>
   10fb0:	ldr	r1, [pc, #36]	; 10fdc <__assert_fail@plt+0xc8>
   10fb4:	sub	r1, r1, r0
   10fb8:	asr	r1, r1, #2
   10fbc:	add	r1, r1, r1, lsr #31
   10fc0:	asrs	r1, r1, #1
   10fc4:	bxeq	lr
   10fc8:	ldr	r3, [pc, #16]	; 10fe0 <__assert_fail@plt+0xcc>
   10fcc:	cmp	r3, #0
   10fd0:	bxeq	lr
   10fd4:	bx	r3
   10fd8:	andeq	sp, r2, r8, lsr r1
   10fdc:	andeq	sp, r2, r8, lsr r1
   10fe0:	andeq	r0, r0, r0
   10fe4:	push	{r4, lr}
   10fe8:	ldr	r4, [pc, #24]	; 11008 <__assert_fail@plt+0xf4>
   10fec:	ldrb	r3, [r4]
   10ff0:	cmp	r3, #0
   10ff4:	popne	{r4, pc}
   10ff8:	bl	10f80 <__assert_fail@plt+0x6c>
   10ffc:	mov	r3, #1
   11000:	strb	r3, [r4]
   11004:	pop	{r4, pc}
   11008:	andeq	sp, r2, r8, asr r1
   1100c:	b	10fac <__assert_fail@plt+0x98>
   11010:	push	{fp}		; (str fp, [sp, #-4]!)
   11014:	add	fp, sp, #0
   11018:	sub	sp, sp, #12
   1101c:	mov	r3, r0
   11020:	strb	r3, [fp, #-5]
   11024:	ldrb	r3, [fp, #-5]
   11028:	mov	r0, r3
   1102c:	add	sp, fp, #0
   11030:	pop	{fp}		; (ldr fp, [sp], #4)
   11034:	bx	lr
   11038:	str	fp, [sp, #-8]!
   1103c:	str	lr, [sp, #4]
   11040:	add	fp, sp, #4
   11044:	sub	sp, sp, #80	; 0x50
   11048:	str	r0, [fp, #-80]	; 0xffffffb0
   1104c:	movw	r2, #43720	; 0xaac8
   11050:	movt	r2, #1
   11054:	sub	r3, fp, #72	; 0x48
   11058:	ldrd	r0, [r2]
   1105c:	strd	r0, [r3]
   11060:	ldrd	r0, [r2, #8]
   11064:	strd	r0, [r3, #8]
   11068:	ldrd	r0, [r2, #16]
   1106c:	strd	r0, [r3, #16]
   11070:	ldrd	r0, [r2, #24]
   11074:	strd	r0, [r3, #24]
   11078:	ldrd	r0, [r2, #32]
   1107c:	strd	r0, [r3, #32]
   11080:	ldrd	r0, [r2, #40]	; 0x28
   11084:	strd	r0, [r3, #40]	; 0x28
   11088:	ldrd	r0, [r2, #48]	; 0x30
   1108c:	strd	r0, [r3, #48]	; 0x30
   11090:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11094:	str	r3, [fp, #-8]
   11098:	sub	r3, fp, #72	; 0x48
   1109c:	str	r3, [fp, #-12]
   110a0:	b	110b0 <__assert_fail@plt+0x19c>
   110a4:	ldr	r3, [fp, #-12]
   110a8:	add	r3, r3, #8
   110ac:	str	r3, [fp, #-12]
   110b0:	ldr	r3, [fp, #-12]
   110b4:	ldr	r3, [r3]
   110b8:	cmp	r3, #0
   110bc:	beq	110e0 <__assert_fail@plt+0x1cc>
   110c0:	ldr	r3, [fp, #-12]
   110c4:	ldr	r3, [r3]
   110c8:	mov	r1, r3
   110cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   110d0:	bl	10cb0 <strcmp@plt>
   110d4:	mov	r3, r0
   110d8:	cmp	r3, #0
   110dc:	bne	110a4 <__assert_fail@plt+0x190>
   110e0:	ldr	r3, [fp, #-12]
   110e4:	ldr	r3, [r3, #4]
   110e8:	cmp	r3, #0
   110ec:	beq	110fc <__assert_fail@plt+0x1e8>
   110f0:	ldr	r3, [fp, #-12]
   110f4:	ldr	r3, [r3, #4]
   110f8:	str	r3, [fp, #-8]
   110fc:	movw	r0, #43348	; 0xa954
   11100:	movt	r0, #1
   11104:	bl	10e24 <gettext@plt>
   11108:	mov	r3, r0
   1110c:	movw	r2, #43372	; 0xa96c
   11110:	movt	r2, #1
   11114:	movw	r1, #43412	; 0xa994
   11118:	movt	r1, #1
   1111c:	mov	r0, r3
   11120:	bl	10cc8 <printf@plt>
   11124:	mov	r1, #0
   11128:	mov	r0, #5
   1112c:	bl	10ea8 <setlocale@plt>
   11130:	str	r0, [fp, #-16]
   11134:	ldr	r3, [fp, #-16]
   11138:	cmp	r3, #0
   1113c:	beq	11188 <__assert_fail@plt+0x274>
   11140:	mov	r2, #3
   11144:	movw	r1, #43428	; 0xa9a4
   11148:	movt	r1, #1
   1114c:	ldr	r0, [fp, #-16]
   11150:	bl	10ef0 <strncmp@plt>
   11154:	mov	r3, r0
   11158:	cmp	r3, #0
   1115c:	beq	11188 <__assert_fail@plt+0x274>
   11160:	movw	r0, #43432	; 0xa9a8
   11164:	movt	r0, #1
   11168:	bl	10e24 <gettext@plt>
   1116c:	mov	r2, r0
   11170:	movw	r3, #53588	; 0xd154
   11174:	movt	r3, #2
   11178:	ldr	r3, [r3]
   1117c:	mov	r1, r3
   11180:	mov	r0, r2
   11184:	bl	10ca4 <fputs_unlocked@plt>
   11188:	movw	r0, #43504	; 0xa9f0
   1118c:	movt	r0, #1
   11190:	bl	10e24 <gettext@plt>
   11194:	mov	r3, r0
   11198:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1119c:	movw	r1, #43372	; 0xa96c
   111a0:	movt	r1, #1
   111a4:	mov	r0, r3
   111a8:	bl	10cc8 <printf@plt>
   111ac:	movw	r0, #43532	; 0xaa0c
   111b0:	movt	r0, #1
   111b4:	bl	10e24 <gettext@plt>
   111b8:	ldr	r2, [fp, #-8]
   111bc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   111c0:	cmp	r2, r3
   111c4:	bne	111d4 <__assert_fail@plt+0x2c0>
   111c8:	movw	r3, #43584	; 0xaa40
   111cc:	movt	r3, #1
   111d0:	b	111dc <__assert_fail@plt+0x2c8>
   111d4:	movw	r3, #43596	; 0xaa4c
   111d8:	movt	r3, #1
   111dc:	mov	r2, r3
   111e0:	ldr	r1, [fp, #-8]
   111e4:	bl	10cc8 <printf@plt>
   111e8:	nop	{0}
   111ec:	sub	sp, fp, #4
   111f0:	ldr	fp, [sp]
   111f4:	add	sp, sp, #4
   111f8:	pop	{pc}		; (ldr pc, [sp], #4)
   111fc:	push	{fp}		; (str fp, [sp, #-4]!)
   11200:	add	fp, sp, #0
   11204:	sub	sp, sp, #20
   11208:	str	r0, [fp, #-8]
   1120c:	str	r1, [fp, #-12]
   11210:	mov	r3, r2
   11214:	strb	r3, [fp, #-13]
   11218:	ldr	r3, [fp, #-8]
   1121c:	ldr	r2, [r3]
   11220:	ldr	r3, [fp, #-12]
   11224:	add	r3, r2, r3
   11228:	ldrb	r3, [r3]
   1122c:	ldrb	r2, [fp, #-13]
   11230:	cmp	r2, r3
   11234:	bne	11264 <__assert_fail@plt+0x350>
   11238:	ldr	r3, [fp, #-8]
   1123c:	ldr	r2, [r3, #4]
   11240:	ldr	r3, [fp, #-12]
   11244:	add	r3, r2, r3
   11248:	ldrb	r3, [r3]
   1124c:	eor	r3, r3, #1
   11250:	uxtb	r3, r3
   11254:	cmp	r3, #0
   11258:	beq	11264 <__assert_fail@plt+0x350>
   1125c:	mov	r3, #1
   11260:	b	11268 <__assert_fail@plt+0x354>
   11264:	mov	r3, #0
   11268:	and	r3, r3, #1
   1126c:	uxtb	r3, r3
   11270:	mov	r0, r3
   11274:	add	sp, fp, #0
   11278:	pop	{fp}		; (ldr fp, [sp], #4)
   1127c:	bx	lr
   11280:	str	r4, [sp, #-12]!
   11284:	str	fp, [sp, #4]
   11288:	str	lr, [sp, #8]
   1128c:	add	fp, sp, #8
   11290:	sub	sp, sp, #12
   11294:	str	r0, [fp, #-16]
   11298:	ldr	r3, [fp, #-16]
   1129c:	cmp	r3, #0
   112a0:	beq	112dc <__assert_fail@plt+0x3c8>
   112a4:	movw	r3, #53576	; 0xd148
   112a8:	movt	r3, #2
   112ac:	ldr	r4, [r3]
   112b0:	movw	r0, #44100	; 0xac44
   112b4:	movt	r0, #1
   112b8:	bl	10e24 <gettext@plt>
   112bc:	mov	r1, r0
   112c0:	movw	r3, #62572	; 0xf46c
   112c4:	movt	r3, #2
   112c8:	ldr	r3, [r3]
   112cc:	mov	r2, r3
   112d0:	mov	r0, r4
   112d4:	bl	10e48 <fprintf@plt>
   112d8:	b	11428 <__assert_fail@plt+0x514>
   112dc:	movw	r0, #44140	; 0xac6c
   112e0:	movt	r0, #1
   112e4:	bl	10e24 <gettext@plt>
   112e8:	mov	r2, r0
   112ec:	movw	r3, #62572	; 0xf46c
   112f0:	movt	r3, #2
   112f4:	ldr	r3, [r3]
   112f8:	mov	r1, r3
   112fc:	mov	r0, r2
   11300:	bl	10cc8 <printf@plt>
   11304:	movw	r0, #44176	; 0xac90
   11308:	movt	r0, #1
   1130c:	bl	10e24 <gettext@plt>
   11310:	mov	r2, r0
   11314:	movw	r3, #53588	; 0xd154
   11318:	movt	r3, #2
   1131c:	ldr	r3, [r3]
   11320:	mov	r1, r3
   11324:	mov	r0, r2
   11328:	bl	10ca4 <fputs_unlocked@plt>
   1132c:	movw	r0, #44672	; 0xae80
   11330:	movt	r0, #1
   11334:	bl	10e24 <gettext@plt>
   11338:	mov	r2, r0
   1133c:	movw	r3, #53588	; 0xd154
   11340:	movt	r3, #2
   11344:	ldr	r3, [r3]
   11348:	mov	r1, r3
   1134c:	mov	r0, r2
   11350:	bl	10ca4 <fputs_unlocked@plt>
   11354:	movw	r0, #44720	; 0xaeb0
   11358:	movt	r0, #1
   1135c:	bl	10e24 <gettext@plt>
   11360:	mov	r2, r0
   11364:	movw	r3, #53588	; 0xd154
   11368:	movt	r3, #2
   1136c:	ldr	r3, [r3]
   11370:	mov	r1, r3
   11374:	mov	r0, r2
   11378:	bl	10ca4 <fputs_unlocked@plt>
   1137c:	movw	r0, #44776	; 0xaee8
   11380:	movt	r0, #1
   11384:	bl	10e24 <gettext@plt>
   11388:	mov	r2, r0
   1138c:	movw	r3, #53588	; 0xd154
   11390:	movt	r3, #2
   11394:	ldr	r3, [r3]
   11398:	mov	r1, r3
   1139c:	mov	r0, r2
   113a0:	bl	10ca4 <fputs_unlocked@plt>
   113a4:	movw	r0, #45152	; 0xb060
   113a8:	movt	r0, #1
   113ac:	bl	10e24 <gettext@plt>
   113b0:	mov	r2, r0
   113b4:	movw	r3, #53588	; 0xd154
   113b8:	movt	r3, #2
   113bc:	ldr	r3, [r3]
   113c0:	mov	r1, r3
   113c4:	mov	r0, r2
   113c8:	bl	10ca4 <fputs_unlocked@plt>
   113cc:	movw	r0, #45580	; 0xb20c
   113d0:	movt	r0, #1
   113d4:	bl	10e24 <gettext@plt>
   113d8:	mov	r2, r0
   113dc:	movw	r3, #53588	; 0xd154
   113e0:	movt	r3, #2
   113e4:	ldr	r3, [r3]
   113e8:	mov	r1, r3
   113ec:	mov	r0, r2
   113f0:	bl	10ca4 <fputs_unlocked@plt>
   113f4:	movw	r0, #45992	; 0xb3a8
   113f8:	movt	r0, #1
   113fc:	bl	10e24 <gettext@plt>
   11400:	mov	r2, r0
   11404:	movw	r3, #53588	; 0xd154
   11408:	movt	r3, #2
   1140c:	ldr	r3, [r3]
   11410:	mov	r1, r3
   11414:	mov	r0, r2
   11418:	bl	10ca4 <fputs_unlocked@plt>
   1141c:	movw	r0, #46464	; 0xb580
   11420:	movt	r0, #1
   11424:	bl	11038 <__assert_fail@plt+0x124>
   11428:	ldr	r0, [fp, #-16]
   1142c:	bl	10e18 <exit@plt>
   11430:	push	{fp}		; (str fp, [sp, #-4]!)
   11434:	add	fp, sp, #0
   11438:	sub	sp, sp, #12
   1143c:	mov	r3, r0
   11440:	mov	r2, r1
   11444:	strb	r3, [fp, #-5]
   11448:	mov	r3, r2
   1144c:	strb	r3, [fp, #-6]
   11450:	ldrb	r2, [fp, #-5]
   11454:	ldrb	r3, [fp, #-6]
   11458:	cmp	r2, r3
   1145c:	moveq	r3, #1
   11460:	movne	r3, #0
   11464:	uxtb	r3, r3
   11468:	mov	r0, r3
   1146c:	add	sp, fp, #0
   11470:	pop	{fp}		; (ldr fp, [sp], #4)
   11474:	bx	lr
   11478:	str	fp, [sp, #-8]!
   1147c:	str	lr, [sp, #4]
   11480:	add	fp, sp, #4
   11484:	sub	sp, sp, #16
   11488:	str	r0, [fp, #-16]
   1148c:	mov	r3, r1
   11490:	strb	r3, [fp, #-17]	; 0xffffffef
   11494:	ldr	r3, [fp, #-16]
   11498:	cmp	r3, #11
   1149c:	ldrls	pc, [pc, r3, lsl #2]
   114a0:	b	116b4 <__assert_fail@plt+0x7a0>
   114a4:	ldrdeq	r1, [r1], -r4
   114a8:	strdeq	r1, [r1], -ip
   114ac:	andeq	r1, r1, r4, lsr #10
   114b0:	andeq	r1, r1, ip, asr #10
   114b4:	andeq	r1, r1, r4, ror r5
   114b8:	muleq	r1, ip, r5
   114bc:	andeq	r1, r1, r4, asr #11
   114c0:	andeq	r1, r1, ip, ror #11
   114c4:	andeq	r1, r1, r4, lsl r6
   114c8:	andeq	r1, r1, ip, lsr r6
   114cc:	andeq	r1, r1, r4, ror #12
   114d0:	andeq	r1, r1, ip, lsl #13
   114d4:	bl	10e0c <__ctype_b_loc@plt>
   114d8:	mov	r3, r0
   114dc:	ldr	r2, [r3]
   114e0:	ldrb	r3, [fp, #-17]	; 0xffffffef
   114e4:	lsl	r3, r3, #1
   114e8:	add	r3, r2, r3
   114ec:	ldrh	r3, [r3]
   114f0:	and	r3, r3, #8
   114f4:	str	r3, [fp, #-8]
   114f8:	b	116b8 <__assert_fail@plt+0x7a4>
   114fc:	bl	10e0c <__ctype_b_loc@plt>
   11500:	mov	r3, r0
   11504:	ldr	r2, [r3]
   11508:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1150c:	lsl	r3, r3, #1
   11510:	add	r3, r2, r3
   11514:	ldrh	r3, [r3]
   11518:	and	r3, r3, #1024	; 0x400
   1151c:	str	r3, [fp, #-8]
   11520:	b	116b8 <__assert_fail@plt+0x7a4>
   11524:	bl	10e0c <__ctype_b_loc@plt>
   11528:	mov	r3, r0
   1152c:	ldr	r2, [r3]
   11530:	ldrb	r3, [fp, #-17]	; 0xffffffef
   11534:	lsl	r3, r3, #1
   11538:	add	r3, r2, r3
   1153c:	ldrh	r3, [r3]
   11540:	and	r3, r3, #1
   11544:	str	r3, [fp, #-8]
   11548:	b	116b8 <__assert_fail@plt+0x7a4>
   1154c:	bl	10e0c <__ctype_b_loc@plt>
   11550:	mov	r3, r0
   11554:	ldr	r2, [r3]
   11558:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1155c:	lsl	r3, r3, #1
   11560:	add	r3, r2, r3
   11564:	ldrh	r3, [r3]
   11568:	and	r3, r3, #2
   1156c:	str	r3, [fp, #-8]
   11570:	b	116b8 <__assert_fail@plt+0x7a4>
   11574:	bl	10e0c <__ctype_b_loc@plt>
   11578:	mov	r3, r0
   1157c:	ldr	r2, [r3]
   11580:	ldrb	r3, [fp, #-17]	; 0xffffffef
   11584:	lsl	r3, r3, #1
   11588:	add	r3, r2, r3
   1158c:	ldrh	r3, [r3]
   11590:	and	r3, r3, #2048	; 0x800
   11594:	str	r3, [fp, #-8]
   11598:	b	116b8 <__assert_fail@plt+0x7a4>
   1159c:	bl	10e0c <__ctype_b_loc@plt>
   115a0:	mov	r3, r0
   115a4:	ldr	r2, [r3]
   115a8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   115ac:	lsl	r3, r3, #1
   115b0:	add	r3, r2, r3
   115b4:	ldrh	r3, [r3]
   115b8:	and	r3, r3, #32768	; 0x8000
   115bc:	str	r3, [fp, #-8]
   115c0:	b	116b8 <__assert_fail@plt+0x7a4>
   115c4:	bl	10e0c <__ctype_b_loc@plt>
   115c8:	mov	r3, r0
   115cc:	ldr	r2, [r3]
   115d0:	ldrb	r3, [fp, #-17]	; 0xffffffef
   115d4:	lsl	r3, r3, #1
   115d8:	add	r3, r2, r3
   115dc:	ldrh	r3, [r3]
   115e0:	and	r3, r3, #512	; 0x200
   115e4:	str	r3, [fp, #-8]
   115e8:	b	116b8 <__assert_fail@plt+0x7a4>
   115ec:	bl	10e0c <__ctype_b_loc@plt>
   115f0:	mov	r3, r0
   115f4:	ldr	r2, [r3]
   115f8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   115fc:	lsl	r3, r3, #1
   11600:	add	r3, r2, r3
   11604:	ldrh	r3, [r3]
   11608:	and	r3, r3, #16384	; 0x4000
   1160c:	str	r3, [fp, #-8]
   11610:	b	116b8 <__assert_fail@plt+0x7a4>
   11614:	bl	10e0c <__ctype_b_loc@plt>
   11618:	mov	r3, r0
   1161c:	ldr	r2, [r3]
   11620:	ldrb	r3, [fp, #-17]	; 0xffffffef
   11624:	lsl	r3, r3, #1
   11628:	add	r3, r2, r3
   1162c:	ldrh	r3, [r3]
   11630:	and	r3, r3, #4
   11634:	str	r3, [fp, #-8]
   11638:	b	116b8 <__assert_fail@plt+0x7a4>
   1163c:	bl	10e0c <__ctype_b_loc@plt>
   11640:	mov	r3, r0
   11644:	ldr	r2, [r3]
   11648:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1164c:	lsl	r3, r3, #1
   11650:	add	r3, r2, r3
   11654:	ldrh	r3, [r3]
   11658:	and	r3, r3, #8192	; 0x2000
   1165c:	str	r3, [fp, #-8]
   11660:	b	116b8 <__assert_fail@plt+0x7a4>
   11664:	bl	10e0c <__ctype_b_loc@plt>
   11668:	mov	r3, r0
   1166c:	ldr	r2, [r3]
   11670:	ldrb	r3, [fp, #-17]	; 0xffffffef
   11674:	lsl	r3, r3, #1
   11678:	add	r3, r2, r3
   1167c:	ldrh	r3, [r3]
   11680:	and	r3, r3, #256	; 0x100
   11684:	str	r3, [fp, #-8]
   11688:	b	116b8 <__assert_fail@plt+0x7a4>
   1168c:	bl	10e0c <__ctype_b_loc@plt>
   11690:	mov	r3, r0
   11694:	ldr	r2, [r3]
   11698:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1169c:	lsl	r3, r3, #1
   116a0:	add	r3, r2, r3
   116a4:	ldrh	r3, [r3]
   116a8:	and	r3, r3, #4096	; 0x1000
   116ac:	str	r3, [fp, #-8]
   116b0:	b	116b8 <__assert_fail@plt+0x7a4>
   116b4:	bl	10efc <abort@plt>
   116b8:	ldr	r3, [fp, #-8]
   116bc:	cmp	r3, #0
   116c0:	movne	r3, #1
   116c4:	moveq	r3, #0
   116c8:	uxtb	r3, r3
   116cc:	mov	r0, r3
   116d0:	sub	sp, fp, #4
   116d4:	ldr	fp, [sp]
   116d8:	add	sp, sp, #4
   116dc:	pop	{pc}		; (ldr pc, [sp], #4)
   116e0:	str	fp, [sp, #-8]!
   116e4:	str	lr, [sp, #4]
   116e8:	add	fp, sp, #4
   116ec:	sub	sp, sp, #8
   116f0:	str	r0, [fp, #-8]
   116f4:	ldr	r3, [fp, #-8]
   116f8:	ldr	r3, [r3]
   116fc:	mov	r0, r3
   11700:	bl	15270 <__assert_fail@plt+0x435c>
   11704:	ldr	r3, [fp, #-8]
   11708:	ldr	r3, [r3, #4]
   1170c:	mov	r0, r3
   11710:	bl	15270 <__assert_fail@plt+0x435c>
   11714:	nop	{0}
   11718:	sub	sp, fp, #4
   1171c:	ldr	fp, [sp]
   11720:	add	sp, sp, #4
   11724:	pop	{pc}		; (ldr pc, [sp], #4)
   11728:	strd	r4, [sp, #-16]!
   1172c:	str	fp, [sp, #8]
   11730:	str	lr, [sp, #12]
   11734:	add	fp, sp, #12
   11738:	sub	sp, sp, #56	; 0x38
   1173c:	str	r0, [fp, #-40]	; 0xffffffd8
   11740:	str	r1, [fp, #-44]	; 0xffffffd4
   11744:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11748:	bl	10e30 <strlen@plt>
   1174c:	str	r0, [fp, #-28]	; 0xffffffe4
   11750:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11754:	bl	185b0 <__assert_fail@plt+0x769c>
   11758:	mov	r3, r0
   1175c:	mov	r2, r3
   11760:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11764:	str	r2, [r3]
   11768:	mov	r1, #1
   1176c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11770:	bl	18c40 <__assert_fail@plt+0x7d2c>
   11774:	mov	r3, r0
   11778:	mov	r2, r3
   1177c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11780:	str	r2, [r3, #4]
   11784:	mov	r3, #0
   11788:	str	r3, [fp, #-16]
   1178c:	mov	r3, #0
   11790:	str	r3, [fp, #-20]	; 0xffffffec
   11794:	b	11b40 <__assert_fail@plt+0xc2c>
   11798:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1179c:	ldr	r3, [fp, #-20]	; 0xffffffec
   117a0:	add	r3, r2, r3
   117a4:	ldrb	r3, [r3]
   117a8:	cmp	r3, #92	; 0x5c
   117ac:	bne	11b04 <__assert_fail@plt+0xbf0>
   117b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   117b4:	ldr	r2, [r3, #4]
   117b8:	ldr	r3, [fp, #-16]
   117bc:	add	r3, r2, r3
   117c0:	mov	r2, #1
   117c4:	strb	r2, [r3]
   117c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   117cc:	add	r3, r3, #1
   117d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   117d4:	add	r3, r2, r3
   117d8:	ldrb	r3, [r3]
   117dc:	cmp	r3, #98	; 0x62
   117e0:	beq	1186c <__assert_fail@plt+0x958>
   117e4:	cmp	r3, #98	; 0x62
   117e8:	bgt	1181c <__assert_fail@plt+0x908>
   117ec:	cmp	r3, #55	; 0x37
   117f0:	bgt	11808 <__assert_fail@plt+0x8f4>
   117f4:	cmp	r3, #48	; 0x30
   117f8:	bge	118b4 <__assert_fail@plt+0x9a0>
   117fc:	cmp	r3, #0
   11800:	beq	11a64 <__assert_fail@plt+0xb50>
   11804:	b	11ab4 <__assert_fail@plt+0xba0>
   11808:	cmp	r3, #92	; 0x5c
   1180c:	beq	11854 <__assert_fail@plt+0x940>
   11810:	cmp	r3, #97	; 0x61
   11814:	beq	11860 <__assert_fail@plt+0x94c>
   11818:	b	11ab4 <__assert_fail@plt+0xba0>
   1181c:	cmp	r3, #114	; 0x72
   11820:	beq	11890 <__assert_fail@plt+0x97c>
   11824:	cmp	r3, #114	; 0x72
   11828:	bgt	11840 <__assert_fail@plt+0x92c>
   1182c:	cmp	r3, #102	; 0x66
   11830:	beq	11878 <__assert_fail@plt+0x964>
   11834:	cmp	r3, #110	; 0x6e
   11838:	beq	11884 <__assert_fail@plt+0x970>
   1183c:	b	11ab4 <__assert_fail@plt+0xba0>
   11840:	cmp	r3, #116	; 0x74
   11844:	beq	1189c <__assert_fail@plt+0x988>
   11848:	cmp	r3, #118	; 0x76
   1184c:	beq	118a8 <__assert_fail@plt+0x994>
   11850:	b	11ab4 <__assert_fail@plt+0xba0>
   11854:	mov	r3, #92	; 0x5c
   11858:	strb	r3, [fp, #-21]	; 0xffffffeb
   1185c:	b	11ad4 <__assert_fail@plt+0xbc0>
   11860:	mov	r3, #7
   11864:	strb	r3, [fp, #-21]	; 0xffffffeb
   11868:	b	11ad4 <__assert_fail@plt+0xbc0>
   1186c:	mov	r3, #8
   11870:	strb	r3, [fp, #-21]	; 0xffffffeb
   11874:	b	11ad4 <__assert_fail@plt+0xbc0>
   11878:	mov	r3, #12
   1187c:	strb	r3, [fp, #-21]	; 0xffffffeb
   11880:	b	11ad4 <__assert_fail@plt+0xbc0>
   11884:	mov	r3, #10
   11888:	strb	r3, [fp, #-21]	; 0xffffffeb
   1188c:	b	11ad4 <__assert_fail@plt+0xbc0>
   11890:	mov	r3, #13
   11894:	strb	r3, [fp, #-21]	; 0xffffffeb
   11898:	b	11ad4 <__assert_fail@plt+0xbc0>
   1189c:	mov	r3, #9
   118a0:	strb	r3, [fp, #-21]	; 0xffffffeb
   118a4:	b	11ad4 <__assert_fail@plt+0xbc0>
   118a8:	mov	r3, #11
   118ac:	strb	r3, [fp, #-21]	; 0xffffffeb
   118b0:	b	11ad4 <__assert_fail@plt+0xbc0>
   118b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   118b8:	add	r3, r3, #1
   118bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   118c0:	add	r3, r2, r3
   118c4:	ldrb	r3, [r3]
   118c8:	sub	r3, r3, #48	; 0x30
   118cc:	strb	r3, [fp, #-21]	; 0xffffffeb
   118d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   118d4:	add	r3, r3, #2
   118d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   118dc:	add	r3, r2, r3
   118e0:	ldrb	r3, [r3]
   118e4:	sub	r3, r3, #48	; 0x30
   118e8:	str	r3, [fp, #-32]	; 0xffffffe0
   118ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   118f0:	cmp	r3, #0
   118f4:	blt	11ad0 <__assert_fail@plt+0xbbc>
   118f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   118fc:	cmp	r3, #7
   11900:	bgt	11ad0 <__assert_fail@plt+0xbbc>
   11904:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   11908:	lsl	r3, r3, #3
   1190c:	uxtb	r2, r3
   11910:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11914:	uxtb	r3, r3
   11918:	add	r3, r2, r3
   1191c:	strb	r3, [fp, #-21]	; 0xffffffeb
   11920:	ldr	r3, [fp, #-20]	; 0xffffffec
   11924:	add	r3, r3, #1
   11928:	str	r3, [fp, #-20]	; 0xffffffec
   1192c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11930:	add	r3, r3, #2
   11934:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11938:	add	r3, r2, r3
   1193c:	ldrb	r3, [r3]
   11940:	sub	r3, r3, #48	; 0x30
   11944:	str	r3, [fp, #-32]	; 0xffffffe0
   11948:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1194c:	cmp	r3, #0
   11950:	blt	11ad0 <__assert_fail@plt+0xbbc>
   11954:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11958:	cmp	r3, #7
   1195c:	bgt	11ad0 <__assert_fail@plt+0xbbc>
   11960:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   11964:	lsl	r2, r3, #3
   11968:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1196c:	add	r3, r2, r3
   11970:	cmp	r3, #255	; 0xff
   11974:	bgt	119a4 <__assert_fail@plt+0xa90>
   11978:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1197c:	lsl	r3, r3, #3
   11980:	uxtb	r2, r3
   11984:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11988:	uxtb	r3, r3
   1198c:	add	r3, r2, r3
   11990:	strb	r3, [fp, #-21]	; 0xffffffeb
   11994:	ldr	r3, [fp, #-20]	; 0xffffffec
   11998:	add	r3, r3, #1
   1199c:	str	r3, [fp, #-20]	; 0xffffffec
   119a0:	b	11ad0 <__assert_fail@plt+0xbbc>
   119a4:	movw	r0, #46468	; 0xb584
   119a8:	movt	r0, #1
   119ac:	bl	10e24 <gettext@plt>
   119b0:	mov	r4, r0
   119b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   119b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   119bc:	add	r3, r2, r3
   119c0:	ldrb	r3, [r3]
   119c4:	mov	r5, r3
   119c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   119cc:	add	r3, r3, #1
   119d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   119d4:	add	r3, r2, r3
   119d8:	ldrb	r3, [r3]
   119dc:	mov	r1, r3
   119e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   119e4:	add	r3, r3, #2
   119e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   119ec:	add	r3, r2, r3
   119f0:	ldrb	r3, [r3]
   119f4:	mov	r0, r3
   119f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   119fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   11a00:	add	r3, r2, r3
   11a04:	ldrb	r3, [r3]
   11a08:	mov	ip, r3
   11a0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11a10:	add	r3, r3, #1
   11a14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11a18:	add	r3, r2, r3
   11a1c:	ldrb	r3, [r3]
   11a20:	mov	lr, r3
   11a24:	ldr	r3, [fp, #-20]	; 0xffffffec
   11a28:	add	r3, r3, #2
   11a2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11a30:	add	r3, r2, r3
   11a34:	ldrb	r3, [r3]
   11a38:	str	r3, [sp, #16]
   11a3c:	str	lr, [sp, #12]
   11a40:	str	ip, [sp, #8]
   11a44:	str	r0, [sp, #4]
   11a48:	str	r1, [sp]
   11a4c:	mov	r3, r5
   11a50:	mov	r2, r4
   11a54:	mov	r1, #0
   11a58:	mov	r0, #0
   11a5c:	bl	10dc4 <error@plt>
   11a60:	b	11ad0 <__assert_fail@plt+0xbbc>
   11a64:	movw	r0, #46568	; 0xb5e8
   11a68:	movt	r0, #1
   11a6c:	bl	10e24 <gettext@plt>
   11a70:	mov	r3, r0
   11a74:	mov	r2, r3
   11a78:	mov	r1, #0
   11a7c:	mov	r0, #0
   11a80:	bl	10dc4 <error@plt>
   11a84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11a88:	ldr	r2, [r3, #4]
   11a8c:	ldr	r3, [fp, #-16]
   11a90:	add	r3, r2, r3
   11a94:	mov	r2, #0
   11a98:	strb	r2, [r3]
   11a9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11aa0:	sub	r3, r3, #1
   11aa4:	str	r3, [fp, #-20]	; 0xffffffec
   11aa8:	mov	r3, #92	; 0x5c
   11aac:	strb	r3, [fp, #-21]	; 0xffffffeb
   11ab0:	b	11ad4 <__assert_fail@plt+0xbc0>
   11ab4:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ab8:	add	r3, r3, #1
   11abc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11ac0:	add	r3, r2, r3
   11ac4:	ldrb	r3, [r3]
   11ac8:	strb	r3, [fp, #-21]	; 0xffffffeb
   11acc:	b	11ad4 <__assert_fail@plt+0xbc0>
   11ad0:	nop	{0}
   11ad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ad8:	add	r3, r3, #1
   11adc:	str	r3, [fp, #-20]	; 0xffffffec
   11ae0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11ae4:	ldr	r2, [r3]
   11ae8:	ldr	r3, [fp, #-16]
   11aec:	add	r1, r3, #1
   11af0:	str	r1, [fp, #-16]
   11af4:	add	r3, r2, r3
   11af8:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   11afc:	strb	r2, [r3]
   11b00:	b	11b34 <__assert_fail@plt+0xc20>
   11b04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b0c:	add	r2, r2, r3
   11b10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11b14:	ldr	r1, [r3]
   11b18:	ldr	r3, [fp, #-16]
   11b1c:	add	r0, r3, #1
   11b20:	str	r0, [fp, #-16]
   11b24:	add	r3, r1, r3
   11b28:	ldrb	r2, [r2]
   11b2c:	strb	r2, [r3]
   11b30:	nop	{0}
   11b34:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b38:	add	r3, r3, #1
   11b3c:	str	r3, [fp, #-20]	; 0xffffffec
   11b40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11b44:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b48:	add	r3, r2, r3
   11b4c:	ldrb	r3, [r3]
   11b50:	cmp	r3, #0
   11b54:	bne	11798 <__assert_fail@plt+0x884>
   11b58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11b5c:	ldr	r2, [fp, #-16]
   11b60:	str	r2, [r3, #8]
   11b64:	mov	r3, #1
   11b68:	mov	r0, r3
   11b6c:	sub	sp, fp, #12
   11b70:	ldrd	r4, [sp]
   11b74:	ldr	fp, [sp, #8]
   11b78:	add	sp, sp, #12
   11b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   11b80:	str	fp, [sp, #-8]!
   11b84:	str	lr, [sp, #4]
   11b88:	add	fp, sp, #4
   11b8c:	sub	sp, sp, #16
   11b90:	str	r0, [fp, #-16]
   11b94:	str	r1, [fp, #-20]	; 0xffffffec
   11b98:	mov	r3, #0
   11b9c:	str	r3, [fp, #-8]
   11ba0:	b	11c0c <__assert_fail@plt+0xcf8>
   11ba4:	movw	r3, #43872	; 0xab60
   11ba8:	movt	r3, #1
   11bac:	ldr	r2, [fp, #-8]
   11bb0:	ldr	r3, [r3, r2, lsl #2]
   11bb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   11bb8:	mov	r1, r3
   11bbc:	ldr	r0, [fp, #-16]
   11bc0:	bl	10ef0 <strncmp@plt>
   11bc4:	mov	r3, r0
   11bc8:	cmp	r3, #0
   11bcc:	bne	11c00 <__assert_fail@plt+0xcec>
   11bd0:	movw	r3, #43872	; 0xab60
   11bd4:	movt	r3, #1
   11bd8:	ldr	r2, [fp, #-8]
   11bdc:	ldr	r3, [r3, r2, lsl #2]
   11be0:	mov	r0, r3
   11be4:	bl	10e30 <strlen@plt>
   11be8:	mov	r2, r0
   11bec:	ldr	r3, [fp, #-20]	; 0xffffffec
   11bf0:	cmp	r3, r2
   11bf4:	bne	11c00 <__assert_fail@plt+0xcec>
   11bf8:	ldr	r3, [fp, #-8]
   11bfc:	b	11c1c <__assert_fail@plt+0xd08>
   11c00:	ldr	r3, [fp, #-8]
   11c04:	add	r3, r3, #1
   11c08:	str	r3, [fp, #-8]
   11c0c:	ldr	r3, [fp, #-8]
   11c10:	cmp	r3, #11
   11c14:	bls	11ba4 <__assert_fail@plt+0xc90>
   11c18:	movw	r3, #9999	; 0x270f
   11c1c:	mov	r0, r3
   11c20:	sub	sp, fp, #4
   11c24:	ldr	fp, [sp]
   11c28:	add	sp, sp, #4
   11c2c:	pop	{pc}		; (ldr pc, [sp], #4)
   11c30:	str	fp, [sp, #-8]!
   11c34:	str	lr, [sp, #4]
   11c38:	add	fp, sp, #4
   11c3c:	sub	sp, sp, #16
   11c40:	mov	r3, r0
   11c44:	strb	r3, [fp, #-13]
   11c48:	mov	r0, #5
   11c4c:	bl	185b0 <__assert_fail@plt+0x769c>
   11c50:	mov	r3, r0
   11c54:	str	r3, [fp, #-8]
   11c58:	bl	10e0c <__ctype_b_loc@plt>
   11c5c:	mov	r3, r0
   11c60:	ldr	r2, [r3]
   11c64:	ldrb	r3, [fp, #-13]
   11c68:	lsl	r3, r3, #1
   11c6c:	add	r3, r2, r3
   11c70:	ldrh	r3, [r3]
   11c74:	and	r3, r3, #16384	; 0x4000
   11c78:	cmp	r3, #0
   11c7c:	beq	11ca0 <__assert_fail@plt+0xd8c>
   11c80:	ldr	r3, [fp, #-8]
   11c84:	ldrb	r2, [fp, #-13]
   11c88:	strb	r2, [r3]
   11c8c:	ldr	r3, [fp, #-8]
   11c90:	add	r3, r3, #1
   11c94:	mov	r2, #0
   11c98:	strb	r2, [r3]
   11c9c:	b	11cb8 <__assert_fail@plt+0xda4>
   11ca0:	ldrb	r3, [fp, #-13]
   11ca4:	mov	r2, r3
   11ca8:	movw	r1, #46636	; 0xb62c
   11cac:	movt	r1, #1
   11cb0:	ldr	r0, [fp, #-8]
   11cb4:	bl	10ed8 <sprintf@plt>
   11cb8:	ldr	r3, [fp, #-8]
   11cbc:	mov	r0, r3
   11cc0:	sub	sp, fp, #4
   11cc4:	ldr	fp, [sp]
   11cc8:	add	sp, sp, #4
   11ccc:	pop	{pc}		; (ldr pc, [sp], #4)
   11cd0:	str	fp, [sp, #-8]!
   11cd4:	str	lr, [sp, #4]
   11cd8:	add	fp, sp, #4
   11cdc:	sub	sp, sp, #32
   11ce0:	str	r0, [fp, #-32]	; 0xffffffe0
   11ce4:	str	r1, [fp, #-36]	; 0xffffffdc
   11ce8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11cec:	add	r3, r3, #1
   11cf0:	mov	r1, #4
   11cf4:	mov	r0, r3
   11cf8:	bl	187e0 <__assert_fail@plt+0x78cc>
   11cfc:	mov	r3, r0
   11d00:	str	r3, [fp, #-20]	; 0xffffffec
   11d04:	ldr	r3, [fp, #-20]	; 0xffffffec
   11d08:	str	r3, [fp, #-8]
   11d0c:	mov	r3, #0
   11d10:	str	r3, [fp, #-12]
   11d14:	b	11e80 <__assert_fail@plt+0xf6c>
   11d18:	mov	r3, #0
   11d1c:	str	r3, [fp, #-16]
   11d20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11d24:	ldr	r3, [fp, #-12]
   11d28:	add	r3, r2, r3
   11d2c:	ldrb	r3, [r3]
   11d30:	strb	r3, [fp, #-21]	; 0xffffffeb
   11d34:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   11d38:	cmp	r3, #10
   11d3c:	beq	11dc4 <__assert_fail@plt+0xeb0>
   11d40:	cmp	r3, #10
   11d44:	bgt	11d64 <__assert_fail@plt+0xe50>
   11d48:	cmp	r3, #8
   11d4c:	beq	11da4 <__assert_fail@plt+0xe90>
   11d50:	cmp	r3, #8
   11d54:	bgt	11de4 <__assert_fail@plt+0xed0>
   11d58:	cmp	r3, #7
   11d5c:	beq	11d94 <__assert_fail@plt+0xe80>
   11d60:	b	11e04 <__assert_fail@plt+0xef0>
   11d64:	cmp	r3, #12
   11d68:	beq	11db4 <__assert_fail@plt+0xea0>
   11d6c:	cmp	r3, #12
   11d70:	blt	11df4 <__assert_fail@plt+0xee0>
   11d74:	cmp	r3, #13
   11d78:	beq	11dd4 <__assert_fail@plt+0xec0>
   11d7c:	cmp	r3, #92	; 0x5c
   11d80:	bne	11e04 <__assert_fail@plt+0xef0>
   11d84:	movw	r3, #46644	; 0xb634
   11d88:	movt	r3, #1
   11d8c:	str	r3, [fp, #-16]
   11d90:	b	11e64 <__assert_fail@plt+0xf50>
   11d94:	movw	r3, #46648	; 0xb638
   11d98:	movt	r3, #1
   11d9c:	str	r3, [fp, #-16]
   11da0:	b	11e64 <__assert_fail@plt+0xf50>
   11da4:	movw	r3, #46652	; 0xb63c
   11da8:	movt	r3, #1
   11dac:	str	r3, [fp, #-16]
   11db0:	b	11e64 <__assert_fail@plt+0xf50>
   11db4:	movw	r3, #46656	; 0xb640
   11db8:	movt	r3, #1
   11dbc:	str	r3, [fp, #-16]
   11dc0:	b	11e64 <__assert_fail@plt+0xf50>
   11dc4:	movw	r3, #46660	; 0xb644
   11dc8:	movt	r3, #1
   11dcc:	str	r3, [fp, #-16]
   11dd0:	b	11e64 <__assert_fail@plt+0xf50>
   11dd4:	movw	r3, #46664	; 0xb648
   11dd8:	movt	r3, #1
   11ddc:	str	r3, [fp, #-16]
   11de0:	b	11e64 <__assert_fail@plt+0xf50>
   11de4:	movw	r3, #46668	; 0xb64c
   11de8:	movt	r3, #1
   11dec:	str	r3, [fp, #-16]
   11df0:	b	11e64 <__assert_fail@plt+0xf50>
   11df4:	movw	r3, #46672	; 0xb650
   11df8:	movt	r3, #1
   11dfc:	str	r3, [fp, #-16]
   11e00:	b	11e64 <__assert_fail@plt+0xf50>
   11e04:	bl	10e0c <__ctype_b_loc@plt>
   11e08:	mov	r3, r0
   11e0c:	ldr	r2, [r3]
   11e10:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   11e14:	lsl	r3, r3, #1
   11e18:	add	r3, r2, r3
   11e1c:	ldrh	r3, [r3]
   11e20:	and	r3, r3, #16384	; 0x4000
   11e24:	cmp	r3, #0
   11e28:	beq	11e40 <__assert_fail@plt+0xf2c>
   11e2c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   11e30:	strb	r3, [fp, #-28]	; 0xffffffe4
   11e34:	mov	r3, #0
   11e38:	strb	r3, [fp, #-27]	; 0xffffffe5
   11e3c:	b	11e58 <__assert_fail@plt+0xf44>
   11e40:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   11e44:	sub	r3, fp, #28
   11e48:	movw	r1, #46636	; 0xb62c
   11e4c:	movt	r1, #1
   11e50:	mov	r0, r3
   11e54:	bl	10ed8 <sprintf@plt>
   11e58:	sub	r3, fp, #28
   11e5c:	str	r3, [fp, #-16]
   11e60:	nop	{0}
   11e64:	ldr	r1, [fp, #-16]
   11e68:	ldr	r0, [fp, #-8]
   11e6c:	bl	10d40 <stpcpy@plt>
   11e70:	str	r0, [fp, #-8]
   11e74:	ldr	r3, [fp, #-12]
   11e78:	add	r3, r3, #1
   11e7c:	str	r3, [fp, #-12]
   11e80:	ldr	r2, [fp, #-12]
   11e84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11e88:	cmp	r2, r3
   11e8c:	bcc	11d18 <__assert_fail@plt+0xe04>
   11e90:	ldr	r3, [fp, #-20]	; 0xffffffec
   11e94:	mov	r0, r3
   11e98:	sub	sp, fp, #4
   11e9c:	ldr	fp, [sp]
   11ea0:	add	sp, sp, #4
   11ea4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ea8:	str	fp, [sp, #-8]!
   11eac:	str	lr, [sp, #4]
   11eb0:	add	fp, sp, #4
   11eb4:	sub	sp, sp, #16
   11eb8:	str	r0, [fp, #-16]
   11ebc:	mov	r3, r1
   11ec0:	strb	r3, [fp, #-17]	; 0xffffffef
   11ec4:	mov	r0, #24
   11ec8:	bl	185b0 <__assert_fail@plt+0x769c>
   11ecc:	mov	r3, r0
   11ed0:	str	r3, [fp, #-8]
   11ed4:	ldr	r3, [fp, #-8]
   11ed8:	mov	r2, #0
   11edc:	str	r2, [r3, #4]
   11ee0:	ldr	r3, [fp, #-8]
   11ee4:	mov	r2, #0
   11ee8:	str	r2, [r3]
   11eec:	ldr	r3, [fp, #-8]
   11ef0:	ldrb	r2, [fp, #-17]	; 0xffffffef
   11ef4:	strb	r2, [r3, #8]
   11ef8:	ldr	r3, [fp, #-16]
   11efc:	ldr	r3, [r3, #4]
   11f00:	cmp	r3, #0
   11f04:	bne	11f28 <__assert_fail@plt+0x1014>
   11f08:	movw	r3, #48300	; 0xbcac
   11f0c:	movt	r3, #1
   11f10:	movw	r2, #649	; 0x289
   11f14:	movw	r1, #46676	; 0xb654
   11f18:	movt	r1, #1
   11f1c:	movw	r0, #46688	; 0xb660
   11f20:	movt	r0, #1
   11f24:	bl	10f14 <__assert_fail@plt>
   11f28:	ldr	r3, [fp, #-16]
   11f2c:	ldr	r3, [r3, #4]
   11f30:	ldr	r2, [fp, #-8]
   11f34:	str	r2, [r3, #4]
   11f38:	ldr	r3, [fp, #-16]
   11f3c:	ldr	r2, [fp, #-8]
   11f40:	str	r2, [r3, #4]
   11f44:	nop	{0}
   11f48:	sub	sp, fp, #4
   11f4c:	ldr	fp, [sp]
   11f50:	add	sp, sp, #4
   11f54:	pop	{pc}		; (ldr pc, [sp], #4)
   11f58:	str	fp, [sp, #-8]!
   11f5c:	str	lr, [sp, #4]
   11f60:	add	fp, sp, #4
   11f64:	sub	sp, sp, #32
   11f68:	str	r0, [fp, #-24]	; 0xffffffe8
   11f6c:	mov	r3, r1
   11f70:	strb	r3, [fp, #-25]	; 0xffffffe7
   11f74:	mov	r3, r2
   11f78:	strb	r3, [fp, #-26]	; 0xffffffe6
   11f7c:	ldrb	r2, [fp, #-26]	; 0xffffffe6
   11f80:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   11f84:	cmp	r2, r3
   11f88:	bcs	11fec <__assert_fail@plt+0x10d8>
   11f8c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   11f90:	mov	r0, r3
   11f94:	bl	11c30 <__assert_fail@plt+0xd1c>
   11f98:	str	r0, [fp, #-8]
   11f9c:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   11fa0:	mov	r0, r3
   11fa4:	bl	11c30 <__assert_fail@plt+0xd1c>
   11fa8:	str	r0, [fp, #-12]
   11fac:	movw	r0, #46700	; 0xb66c
   11fb0:	movt	r0, #1
   11fb4:	bl	10e24 <gettext@plt>
   11fb8:	mov	r2, r0
   11fbc:	ldr	r3, [fp, #-12]
   11fc0:	str	r3, [sp]
   11fc4:	ldr	r3, [fp, #-8]
   11fc8:	mov	r1, #0
   11fcc:	mov	r0, #0
   11fd0:	bl	10dc4 <error@plt>
   11fd4:	ldr	r0, [fp, #-8]
   11fd8:	bl	15270 <__assert_fail@plt+0x435c>
   11fdc:	ldr	r0, [fp, #-12]
   11fe0:	bl	15270 <__assert_fail@plt+0x435c>
   11fe4:	mov	r3, #0
   11fe8:	b	1207c <__assert_fail@plt+0x1168>
   11fec:	mov	r0, #24
   11ff0:	bl	185b0 <__assert_fail@plt+0x769c>
   11ff4:	mov	r3, r0
   11ff8:	str	r3, [fp, #-16]
   11ffc:	ldr	r3, [fp, #-16]
   12000:	mov	r2, #0
   12004:	str	r2, [r3, #4]
   12008:	ldr	r3, [fp, #-16]
   1200c:	mov	r2, #1
   12010:	str	r2, [r3]
   12014:	ldr	r3, [fp, #-16]
   12018:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   1201c:	strb	r2, [r3, #8]
   12020:	ldr	r3, [fp, #-16]
   12024:	ldrb	r2, [fp, #-26]	; 0xffffffe6
   12028:	strb	r2, [r3, #9]
   1202c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12030:	ldr	r3, [r3, #4]
   12034:	cmp	r3, #0
   12038:	bne	1205c <__assert_fail@plt+0x1148>
   1203c:	movw	r3, #48320	; 0xbcc0
   12040:	movt	r3, #1
   12044:	movw	r2, #679	; 0x2a7
   12048:	movw	r1, #46676	; 0xb654
   1204c:	movt	r1, #1
   12050:	movw	r0, #46688	; 0xb660
   12054:	movt	r0, #1
   12058:	bl	10f14 <__assert_fail@plt>
   1205c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12060:	ldr	r3, [r3, #4]
   12064:	ldr	r2, [fp, #-16]
   12068:	str	r2, [r3, #4]
   1206c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12070:	ldr	r2, [fp, #-16]
   12074:	str	r2, [r3, #4]
   12078:	mov	r3, #1
   1207c:	mov	r0, r3
   12080:	sub	sp, fp, #4
   12084:	ldr	fp, [sp]
   12088:	add	sp, sp, #4
   1208c:	pop	{pc}		; (ldr pc, [sp], #4)
   12090:	str	fp, [sp, #-8]!
   12094:	str	lr, [sp, #4]
   12098:	add	fp, sp, #4
   1209c:	sub	sp, sp, #24
   120a0:	str	r0, [fp, #-16]
   120a4:	str	r1, [fp, #-20]	; 0xffffffec
   120a8:	str	r2, [fp, #-24]	; 0xffffffe8
   120ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   120b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   120b4:	bl	11b80 <__assert_fail@plt+0xc6c>
   120b8:	str	r0, [fp, #-8]
   120bc:	ldr	r3, [fp, #-8]
   120c0:	movw	r2, #9999	; 0x270f
   120c4:	cmp	r3, r2
   120c8:	bne	120d4 <__assert_fail@plt+0x11c0>
   120cc:	mov	r3, #0
   120d0:	b	12158 <__assert_fail@plt+0x1244>
   120d4:	mov	r0, #24
   120d8:	bl	185b0 <__assert_fail@plt+0x769c>
   120dc:	mov	r3, r0
   120e0:	str	r3, [fp, #-12]
   120e4:	ldr	r3, [fp, #-12]
   120e8:	mov	r2, #0
   120ec:	str	r2, [r3, #4]
   120f0:	ldr	r3, [fp, #-12]
   120f4:	mov	r2, #2
   120f8:	str	r2, [r3]
   120fc:	ldr	r3, [fp, #-12]
   12100:	ldr	r2, [fp, #-8]
   12104:	str	r2, [r3, #8]
   12108:	ldr	r3, [fp, #-16]
   1210c:	ldr	r3, [r3, #4]
   12110:	cmp	r3, #0
   12114:	bne	12138 <__assert_fail@plt+0x1224>
   12118:	movw	r3, #48336	; 0xbcd0
   1211c:	movt	r3, #1
   12120:	movw	r2, #701	; 0x2bd
   12124:	movw	r1, #46676	; 0xb654
   12128:	movt	r1, #1
   1212c:	movw	r0, #46688	; 0xb660
   12130:	movt	r0, #1
   12134:	bl	10f14 <__assert_fail@plt>
   12138:	ldr	r3, [fp, #-16]
   1213c:	ldr	r3, [r3, #4]
   12140:	ldr	r2, [fp, #-12]
   12144:	str	r2, [r3, #4]
   12148:	ldr	r3, [fp, #-16]
   1214c:	ldr	r2, [fp, #-12]
   12150:	str	r2, [r3, #4]
   12154:	mov	r3, #1
   12158:	mov	r0, r3
   1215c:	sub	sp, fp, #4
   12160:	ldr	fp, [sp]
   12164:	add	sp, sp, #4
   12168:	pop	{pc}		; (ldr pc, [sp], #4)
   1216c:	str	fp, [sp, #-8]!
   12170:	str	lr, [sp, #4]
   12174:	add	fp, sp, #4
   12178:	sub	sp, sp, #24
   1217c:	str	r0, [fp, #-16]
   12180:	strd	r2, [fp, #-28]	; 0xffffffe4
   12184:	mov	r3, r1
   12188:	strb	r3, [fp, #-17]	; 0xffffffef
   1218c:	mov	r0, #24
   12190:	bl	185b0 <__assert_fail@plt+0x769c>
   12194:	mov	r3, r0
   12198:	str	r3, [fp, #-8]
   1219c:	ldr	r3, [fp, #-8]
   121a0:	mov	r2, #0
   121a4:	str	r2, [r3, #4]
   121a8:	ldr	r3, [fp, #-8]
   121ac:	mov	r2, #4
   121b0:	str	r2, [r3]
   121b4:	ldr	r3, [fp, #-8]
   121b8:	ldrb	r2, [fp, #-17]	; 0xffffffef
   121bc:	strb	r2, [r3, #8]
   121c0:	ldr	r1, [fp, #-8]
   121c4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   121c8:	strd	r2, [r1, #16]
   121cc:	ldr	r3, [fp, #-16]
   121d0:	ldr	r3, [r3, #4]
   121d4:	cmp	r3, #0
   121d8:	bne	121fc <__assert_fail@plt+0x12e8>
   121dc:	movw	r3, #48356	; 0xbce4
   121e0:	movt	r3, #1
   121e4:	movw	r2, #721	; 0x2d1
   121e8:	movw	r1, #46676	; 0xb654
   121ec:	movt	r1, #1
   121f0:	movw	r0, #46688	; 0xb660
   121f4:	movt	r0, #1
   121f8:	bl	10f14 <__assert_fail@plt>
   121fc:	ldr	r3, [fp, #-16]
   12200:	ldr	r3, [r3, #4]
   12204:	ldr	r2, [fp, #-8]
   12208:	str	r2, [r3, #4]
   1220c:	ldr	r3, [fp, #-16]
   12210:	ldr	r2, [fp, #-8]
   12214:	str	r2, [r3, #4]
   12218:	nop	{0}
   1221c:	sub	sp, fp, #4
   12220:	ldr	fp, [sp]
   12224:	add	sp, sp, #4
   12228:	pop	{pc}		; (ldr pc, [sp], #4)
   1222c:	str	fp, [sp, #-8]!
   12230:	str	lr, [sp, #4]
   12234:	add	fp, sp, #4
   12238:	sub	sp, sp, #24
   1223c:	str	r0, [fp, #-16]
   12240:	str	r1, [fp, #-20]	; 0xffffffec
   12244:	str	r2, [fp, #-24]	; 0xffffffe8
   12248:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1224c:	cmp	r3, #1
   12250:	beq	1225c <__assert_fail@plt+0x1348>
   12254:	mov	r3, #0
   12258:	b	122e4 <__assert_fail@plt+0x13d0>
   1225c:	mov	r0, #24
   12260:	bl	185b0 <__assert_fail@plt+0x769c>
   12264:	mov	r3, r0
   12268:	str	r3, [fp, #-8]
   1226c:	ldr	r3, [fp, #-8]
   12270:	mov	r2, #0
   12274:	str	r2, [r3, #4]
   12278:	ldr	r3, [fp, #-8]
   1227c:	mov	r2, #3
   12280:	str	r2, [r3]
   12284:	ldr	r3, [fp, #-20]	; 0xffffffec
   12288:	ldrb	r2, [r3]
   1228c:	ldr	r3, [fp, #-8]
   12290:	strb	r2, [r3, #8]
   12294:	ldr	r3, [fp, #-16]
   12298:	ldr	r3, [r3, #4]
   1229c:	cmp	r3, #0
   122a0:	bne	122c4 <__assert_fail@plt+0x13b0>
   122a4:	movw	r3, #48380	; 0xbcfc
   122a8:	movt	r3, #1
   122ac:	movw	r2, #743	; 0x2e7
   122b0:	movw	r1, #46676	; 0xb654
   122b4:	movt	r1, #1
   122b8:	movw	r0, #46688	; 0xb660
   122bc:	movt	r0, #1
   122c0:	bl	10f14 <__assert_fail@plt>
   122c4:	ldr	r3, [fp, #-16]
   122c8:	ldr	r3, [r3, #4]
   122cc:	ldr	r2, [fp, #-8]
   122d0:	str	r2, [r3, #4]
   122d4:	ldr	r3, [fp, #-16]
   122d8:	ldr	r2, [fp, #-8]
   122dc:	str	r2, [r3, #4]
   122e0:	mov	r3, #1
   122e4:	mov	r0, r3
   122e8:	sub	sp, fp, #4
   122ec:	ldr	fp, [sp]
   122f0:	add	sp, sp, #4
   122f4:	pop	{pc}		; (ldr pc, [sp], #4)
   122f8:	push	{fp}		; (str fp, [sp, #-4]!)
   122fc:	add	fp, sp, #0
   12300:	sub	sp, sp, #28
   12304:	str	r0, [fp, #-16]
   12308:	str	r1, [fp, #-20]	; 0xffffffec
   1230c:	str	r3, [fp, #-28]	; 0xffffffe4
   12310:	mov	r3, r2
   12314:	strb	r3, [fp, #-21]	; 0xffffffeb
   12318:	ldr	r3, [fp, #-20]	; 0xffffffec
   1231c:	str	r3, [fp, #-8]
   12320:	b	123d0 <__assert_fail@plt+0x14bc>
   12324:	ldr	r3, [fp, #-16]
   12328:	ldr	r2, [r3]
   1232c:	ldr	r3, [fp, #-8]
   12330:	add	r3, r2, r3
   12334:	ldrb	r3, [r3]
   12338:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   1233c:	cmp	r2, r3
   12340:	bne	123c4 <__assert_fail@plt+0x14b0>
   12344:	ldr	r3, [fp, #-16]
   12348:	ldr	r2, [r3]
   1234c:	ldr	r3, [fp, #-8]
   12350:	add	r3, r3, #1
   12354:	add	r3, r2, r3
   12358:	ldrb	r3, [r3]
   1235c:	cmp	r3, #93	; 0x5d
   12360:	bne	123c4 <__assert_fail@plt+0x14b0>
   12364:	ldr	r3, [fp, #-16]
   12368:	ldr	r2, [r3, #4]
   1236c:	ldr	r3, [fp, #-8]
   12370:	add	r3, r2, r3
   12374:	ldrb	r3, [r3]
   12378:	eor	r3, r3, #1
   1237c:	uxtb	r3, r3
   12380:	cmp	r3, #0
   12384:	beq	123c4 <__assert_fail@plt+0x14b0>
   12388:	ldr	r3, [fp, #-16]
   1238c:	ldr	r2, [r3, #4]
   12390:	ldr	r3, [fp, #-8]
   12394:	add	r3, r3, #1
   12398:	add	r3, r2, r3
   1239c:	ldrb	r3, [r3]
   123a0:	eor	r3, r3, #1
   123a4:	uxtb	r3, r3
   123a8:	cmp	r3, #0
   123ac:	beq	123c4 <__assert_fail@plt+0x14b0>
   123b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   123b4:	ldr	r2, [fp, #-8]
   123b8:	str	r2, [r3]
   123bc:	mov	r3, #1
   123c0:	b	123ec <__assert_fail@plt+0x14d8>
   123c4:	ldr	r3, [fp, #-8]
   123c8:	add	r3, r3, #1
   123cc:	str	r3, [fp, #-8]
   123d0:	ldr	r3, [fp, #-16]
   123d4:	ldr	r3, [r3, #8]
   123d8:	sub	r3, r3, #1
   123dc:	ldr	r2, [fp, #-8]
   123e0:	cmp	r2, r3
   123e4:	bcc	12324 <__assert_fail@plt+0x1410>
   123e8:	mov	r3, #0
   123ec:	mov	r0, r3
   123f0:	add	sp, fp, #0
   123f4:	pop	{fp}		; (ldr fp, [sp], #4)
   123f8:	bx	lr
   123fc:	str	r4, [sp, #-12]!
   12400:	str	fp, [sp, #4]
   12404:	str	lr, [sp, #8]
   12408:	add	fp, sp, #8
   1240c:	sub	sp, sp, #52	; 0x34
   12410:	str	r0, [fp, #-40]	; 0xffffffd8
   12414:	str	r1, [fp, #-44]	; 0xffffffd4
   12418:	str	r2, [fp, #-48]	; 0xffffffd0
   1241c:	str	r3, [fp, #-52]	; 0xffffffcc
   12420:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12424:	add	r2, r3, #1
   12428:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1242c:	ldr	r3, [r3, #8]
   12430:	cmp	r2, r3
   12434:	bcc	12458 <__assert_fail@plt+0x1544>
   12438:	movw	r3, #48400	; 0xbd10
   1243c:	movt	r3, #1
   12440:	mov	r2, #784	; 0x310
   12444:	movw	r1, #46676	; 0xb654
   12448:	movt	r1, #1
   1244c:	movw	r0, #46768	; 0xb6b0
   12450:	movt	r0, #1
   12454:	bl	10f14 <__assert_fail@plt>
   12458:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1245c:	add	r3, r3, #1
   12460:	mov	r2, #42	; 0x2a
   12464:	mov	r1, r3
   12468:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1246c:	bl	111fc <__assert_fail@plt+0x2e8>
   12470:	mov	r3, r0
   12474:	eor	r3, r3, #1
   12478:	uxtb	r3, r3
   1247c:	cmp	r3, #0
   12480:	beq	1248c <__assert_fail@plt+0x1578>
   12484:	mvn	r3, #0
   12488:	b	1263c <__assert_fail@plt+0x1728>
   1248c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12490:	add	r3, r3, #2
   12494:	str	r3, [fp, #-16]
   12498:	b	12600 <__assert_fail@plt+0x16ec>
   1249c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   124a0:	ldr	r2, [r3]
   124a4:	ldr	r3, [fp, #-16]
   124a8:	add	r3, r2, r3
   124ac:	ldrb	r3, [r3]
   124b0:	cmp	r3, #93	; 0x5d
   124b4:	bne	125f4 <__assert_fail@plt+0x16e0>
   124b8:	ldr	r2, [fp, #-16]
   124bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   124c0:	sub	r3, r2, r3
   124c4:	sub	r3, r3, #2
   124c8:	str	r3, [fp, #-20]	; 0xffffffec
   124cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   124d0:	ldr	r2, [r3]
   124d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   124d8:	add	r3, r2, r3
   124dc:	ldrb	r2, [r3]
   124e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   124e4:	strb	r2, [r3]
   124e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   124ec:	cmp	r3, #0
   124f0:	bne	12508 <__assert_fail@plt+0x15f4>
   124f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   124f8:	mov	r2, #0
   124fc:	mov	r3, #0
   12500:	strd	r2, [r1]
   12504:	b	125e0 <__assert_fail@plt+0x16cc>
   12508:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1250c:	ldr	r2, [r3]
   12510:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12514:	add	r3, r3, #2
   12518:	add	r3, r2, r3
   1251c:	str	r3, [fp, #-24]	; 0xffffffe8
   12520:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12524:	ldrb	r3, [r3]
   12528:	cmp	r3, #48	; 0x30
   1252c:	bne	12538 <__assert_fail@plt+0x1624>
   12530:	mov	r2, #8
   12534:	b	1253c <__assert_fail@plt+0x1628>
   12538:	mov	r2, #10
   1253c:	sub	r1, fp, #32
   12540:	mov	r3, #0
   12544:	str	r3, [sp]
   12548:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1254c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12550:	bl	19114 <__assert_fail@plt+0x8200>
   12554:	mov	r3, r0
   12558:	cmp	r3, #0
   1255c:	bne	12594 <__assert_fail@plt+0x1680>
   12560:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12564:	ldrd	r2, [r3]
   12568:	mvn	r0, #0
   1256c:	mvn	r1, #0
   12570:	cmp	r3, r1
   12574:	cmpeq	r2, r0
   12578:	beq	12594 <__assert_fail@plt+0x1680>
   1257c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12580:	ldr	r3, [fp, #-20]	; 0xffffffec
   12584:	add	r2, r2, r3
   12588:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1258c:	cmp	r2, r3
   12590:	beq	125e0 <__assert_fail@plt+0x16cc>
   12594:	ldr	r1, [fp, #-20]	; 0xffffffec
   12598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1259c:	bl	11cd0 <__assert_fail@plt+0xdbc>
   125a0:	str	r0, [fp, #-28]	; 0xffffffe4
   125a4:	movw	r0, #46792	; 0xb6c8
   125a8:	movt	r0, #1
   125ac:	bl	10e24 <gettext@plt>
   125b0:	mov	r4, r0
   125b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125b8:	bl	17c74 <__assert_fail@plt+0x6d60>
   125bc:	mov	r3, r0
   125c0:	mov	r2, r4
   125c4:	mov	r1, #0
   125c8:	mov	r0, #0
   125cc:	bl	10dc4 <error@plt>
   125d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125d4:	bl	15270 <__assert_fail@plt+0x435c>
   125d8:	mvn	r3, #1
   125dc:	b	1263c <__assert_fail@plt+0x1728>
   125e0:	ldr	r3, [fp, #4]
   125e4:	ldr	r2, [fp, #-16]
   125e8:	str	r2, [r3]
   125ec:	mov	r3, #0
   125f0:	b	1263c <__assert_fail@plt+0x1728>
   125f4:	ldr	r3, [fp, #-16]
   125f8:	add	r3, r3, #1
   125fc:	str	r3, [fp, #-16]
   12600:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12604:	ldr	r3, [r3, #8]
   12608:	ldr	r2, [fp, #-16]
   1260c:	cmp	r2, r3
   12610:	bcs	12638 <__assert_fail@plt+0x1724>
   12614:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12618:	ldr	r2, [r3, #4]
   1261c:	ldr	r3, [fp, #-16]
   12620:	add	r3, r2, r3
   12624:	ldrb	r3, [r3]
   12628:	eor	r3, r3, #1
   1262c:	uxtb	r3, r3
   12630:	cmp	r3, #0
   12634:	bne	1249c <__assert_fail@plt+0x1588>
   12638:	mvn	r3, #0
   1263c:	mov	r0, r3
   12640:	sub	sp, fp, #8
   12644:	ldr	r4, [sp]
   12648:	ldr	fp, [sp, #4]
   1264c:	add	sp, sp, #8
   12650:	pop	{pc}		; (ldr pc, [sp], #4)
   12654:	str	fp, [sp, #-8]!
   12658:	str	lr, [sp, #4]
   1265c:	add	fp, sp, #4
   12660:	sub	sp, sp, #16
   12664:	str	r0, [fp, #-16]
   12668:	str	r1, [fp, #-20]	; 0xffffffec
   1266c:	mov	r2, #42	; 0x2a
   12670:	ldr	r1, [fp, #-20]	; 0xffffffec
   12674:	ldr	r0, [fp, #-16]
   12678:	bl	111fc <__assert_fail@plt+0x2e8>
   1267c:	mov	r3, r0
   12680:	eor	r3, r3, #1
   12684:	uxtb	r3, r3
   12688:	cmp	r3, #0
   1268c:	beq	12698 <__assert_fail@plt+0x1784>
   12690:	mov	r3, #0
   12694:	b	1272c <__assert_fail@plt+0x1818>
   12698:	ldr	r3, [fp, #-20]	; 0xffffffec
   1269c:	add	r3, r3, #1
   126a0:	str	r3, [fp, #-8]
   126a4:	b	12714 <__assert_fail@plt+0x1800>
   126a8:	ldr	r3, [fp, #-16]
   126ac:	ldr	r2, [r3]
   126b0:	ldr	r3, [fp, #-8]
   126b4:	add	r3, r2, r3
   126b8:	ldrb	r3, [r3]
   126bc:	mov	r0, r3
   126c0:	bl	11010 <__assert_fail@plt+0xfc>
   126c4:	mov	r3, r0
   126c8:	sub	r3, r3, #48	; 0x30
   126cc:	cmp	r3, #9
   126d0:	bhi	126f0 <__assert_fail@plt+0x17dc>
   126d4:	ldr	r3, [fp, #-16]
   126d8:	ldr	r2, [r3, #4]
   126dc:	ldr	r3, [fp, #-8]
   126e0:	add	r3, r2, r3
   126e4:	ldrb	r3, [r3]
   126e8:	cmp	r3, #0
   126ec:	beq	12708 <__assert_fail@plt+0x17f4>
   126f0:	mov	r2, #93	; 0x5d
   126f4:	ldr	r1, [fp, #-8]
   126f8:	ldr	r0, [fp, #-16]
   126fc:	bl	111fc <__assert_fail@plt+0x2e8>
   12700:	mov	r3, r0
   12704:	b	1272c <__assert_fail@plt+0x1818>
   12708:	ldr	r3, [fp, #-8]
   1270c:	add	r3, r3, #1
   12710:	str	r3, [fp, #-8]
   12714:	ldr	r3, [fp, #-16]
   12718:	ldr	r3, [r3, #8]
   1271c:	ldr	r2, [fp, #-8]
   12720:	cmp	r2, r3
   12724:	bcc	126a8 <__assert_fail@plt+0x1794>
   12728:	mov	r3, #0
   1272c:	mov	r0, r3
   12730:	sub	sp, fp, #4
   12734:	ldr	fp, [sp]
   12738:	add	sp, sp, #4
   1273c:	pop	{pc}		; (ldr pc, [sp], #4)
   12740:	str	r4, [sp, #-12]!
   12744:	str	fp, [sp, #4]
   12748:	str	lr, [sp, #8]
   1274c:	add	fp, sp, #8
   12750:	sub	sp, sp, #76	; 0x4c
   12754:	str	r0, [fp, #-72]	; 0xffffffb8
   12758:	str	r1, [fp, #-76]	; 0xffffffb4
   1275c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12760:	ldr	r3, [r3]
   12764:	str	r3, [fp, #-24]	; 0xffffffe8
   12768:	mov	r3, #0
   1276c:	str	r3, [fp, #-16]
   12770:	b	12b34 <__assert_fail@plt+0x1c20>
   12774:	mov	r2, #91	; 0x5b
   12778:	ldr	r1, [fp, #-16]
   1277c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12780:	bl	111fc <__assert_fail@plt+0x2e8>
   12784:	mov	r3, r0
   12788:	cmp	r3, #0
   1278c:	beq	12a8c <__assert_fail@plt+0x1b78>
   12790:	mov	r3, #1
   12794:	strb	r3, [fp, #-17]	; 0xffffffef
   12798:	ldr	r3, [fp, #-16]
   1279c:	add	r3, r3, #1
   127a0:	mov	r2, #58	; 0x3a
   127a4:	mov	r1, r3
   127a8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   127ac:	bl	111fc <__assert_fail@plt+0x2e8>
   127b0:	mov	r3, r0
   127b4:	cmp	r3, #0
   127b8:	bne	127e0 <__assert_fail@plt+0x18cc>
   127bc:	ldr	r3, [fp, #-16]
   127c0:	add	r3, r3, #1
   127c4:	mov	r2, #61	; 0x3d
   127c8:	mov	r1, r3
   127cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   127d0:	bl	111fc <__assert_fail@plt+0x2e8>
   127d4:	mov	r3, r0
   127d8:	cmp	r3, #0
   127dc:	beq	129f0 <__assert_fail@plt+0x1adc>
   127e0:	ldr	r3, [fp, #-16]
   127e4:	add	r1, r3, #2
   127e8:	ldr	r3, [fp, #-16]
   127ec:	add	r3, r3, #1
   127f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   127f4:	add	r3, r2, r3
   127f8:	ldrb	r2, [r3]
   127fc:	sub	r3, fp, #64	; 0x40
   12800:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12804:	bl	122f8 <__assert_fail@plt+0x13e4>
   12808:	mov	r3, r0
   1280c:	cmp	r3, #0
   12810:	beq	12a04 <__assert_fail@plt+0x1af0>
   12814:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12818:	ldr	r3, [fp, #-16]
   1281c:	sub	r3, r2, r3
   12820:	sub	r3, r3, #2
   12824:	str	r3, [fp, #-28]	; 0xffffffe4
   12828:	ldr	r3, [fp, #-16]
   1282c:	add	r3, r3, #2
   12830:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12834:	add	r3, r2, r3
   12838:	str	r3, [fp, #-32]	; 0xffffffe0
   1283c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12840:	cmp	r3, #0
   12844:	bne	128b0 <__assert_fail@plt+0x199c>
   12848:	ldr	r3, [fp, #-16]
   1284c:	add	r3, r3, #1
   12850:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12854:	add	r3, r2, r3
   12858:	ldrb	r3, [r3]
   1285c:	cmp	r3, #58	; 0x3a
   12860:	bne	12888 <__assert_fail@plt+0x1974>
   12864:	movw	r0, #46836	; 0xb6f4
   12868:	movt	r0, #1
   1286c:	bl	10e24 <gettext@plt>
   12870:	mov	r3, r0
   12874:	mov	r2, r3
   12878:	mov	r1, #0
   1287c:	mov	r0, #0
   12880:	bl	10dc4 <error@plt>
   12884:	b	128a8 <__assert_fail@plt+0x1994>
   12888:	movw	r0, #46872	; 0xb718
   1288c:	movt	r0, #1
   12890:	bl	10e24 <gettext@plt>
   12894:	mov	r3, r0
   12898:	mov	r2, r3
   1289c:	mov	r1, #0
   128a0:	mov	r0, #0
   128a4:	bl	10dc4 <error@plt>
   128a8:	mov	r3, #0
   128ac:	b	12b90 <__assert_fail@plt+0x1c7c>
   128b0:	ldr	r3, [fp, #-16]
   128b4:	add	r3, r3, #1
   128b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   128bc:	add	r3, r2, r3
   128c0:	ldrb	r3, [r3]
   128c4:	cmp	r3, #58	; 0x3a
   128c8:	bne	1295c <__assert_fail@plt+0x1a48>
   128cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   128d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   128d4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   128d8:	bl	12090 <__assert_fail@plt+0x117c>
   128dc:	mov	r3, r0
   128e0:	eor	r3, r3, #1
   128e4:	uxtb	r3, r3
   128e8:	cmp	r3, #0
   128ec:	beq	129e0 <__assert_fail@plt+0x1acc>
   128f0:	ldr	r3, [fp, #-16]
   128f4:	add	r3, r3, #2
   128f8:	mov	r1, r3
   128fc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12900:	bl	12654 <__assert_fail@plt+0x1740>
   12904:	mov	r3, r0
   12908:	cmp	r3, #0
   1290c:	bne	129f8 <__assert_fail@plt+0x1ae4>
   12910:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12914:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12918:	bl	11cd0 <__assert_fail@plt+0xdbc>
   1291c:	str	r0, [fp, #-36]	; 0xffffffdc
   12920:	movw	r0, #46916	; 0xb744
   12924:	movt	r0, #1
   12928:	bl	10e24 <gettext@plt>
   1292c:	mov	r4, r0
   12930:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12934:	bl	17c74 <__assert_fail@plt+0x6d60>
   12938:	mov	r3, r0
   1293c:	mov	r2, r4
   12940:	mov	r1, #0
   12944:	mov	r0, #0
   12948:	bl	10dc4 <error@plt>
   1294c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12950:	bl	15270 <__assert_fail@plt+0x435c>
   12954:	mov	r3, #0
   12958:	b	12b90 <__assert_fail@plt+0x1c7c>
   1295c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12960:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12964:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12968:	bl	1222c <__assert_fail@plt+0x1318>
   1296c:	mov	r3, r0
   12970:	eor	r3, r3, #1
   12974:	uxtb	r3, r3
   12978:	cmp	r3, #0
   1297c:	beq	129e0 <__assert_fail@plt+0x1acc>
   12980:	ldr	r3, [fp, #-16]
   12984:	add	r3, r3, #2
   12988:	mov	r1, r3
   1298c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12990:	bl	12654 <__assert_fail@plt+0x1740>
   12994:	mov	r3, r0
   12998:	cmp	r3, #0
   1299c:	bne	12a00 <__assert_fail@plt+0x1aec>
   129a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129a8:	bl	11cd0 <__assert_fail@plt+0xdbc>
   129ac:	str	r0, [fp, #-40]	; 0xffffffd8
   129b0:	movw	r0, #46944	; 0xb760
   129b4:	movt	r0, #1
   129b8:	bl	10e24 <gettext@plt>
   129bc:	mov	r2, r0
   129c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   129c4:	mov	r1, #0
   129c8:	mov	r0, #0
   129cc:	bl	10dc4 <error@plt>
   129d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   129d4:	bl	15270 <__assert_fail@plt+0x435c>
   129d8:	mov	r3, #0
   129dc:	b	12b90 <__assert_fail@plt+0x1c7c>
   129e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   129e4:	add	r3, r3, #2
   129e8:	str	r3, [fp, #-16]
   129ec:	b	12b34 <__assert_fail@plt+0x1c20>
   129f0:	nop	{0}
   129f4:	b	12a04 <__assert_fail@plt+0x1af0>
   129f8:	nop	{0}
   129fc:	b	12a04 <__assert_fail@plt+0x1af0>
   12a00:	nop	{0}
   12a04:	ldr	r3, [fp, #-16]
   12a08:	add	r1, r3, #1
   12a0c:	sub	r0, fp, #60	; 0x3c
   12a10:	sub	r2, fp, #49	; 0x31
   12a14:	sub	r3, fp, #48	; 0x30
   12a18:	str	r3, [sp]
   12a1c:	mov	r3, r0
   12a20:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12a24:	bl	123fc <__assert_fail@plt+0x14e8>
   12a28:	str	r0, [fp, #-44]	; 0xffffffd4
   12a2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12a30:	cmp	r3, #0
   12a34:	bne	12a58 <__assert_fail@plt+0x1b44>
   12a38:	ldrb	r1, [fp, #-49]	; 0xffffffcf
   12a3c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   12a40:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12a44:	bl	1216c <__assert_fail@plt+0x1258>
   12a48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12a4c:	add	r3, r3, #1
   12a50:	str	r3, [fp, #-16]
   12a54:	b	12a78 <__assert_fail@plt+0x1b64>
   12a58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12a5c:	cmn	r3, #1
   12a60:	bne	12a70 <__assert_fail@plt+0x1b5c>
   12a64:	mov	r3, #0
   12a68:	strb	r3, [fp, #-17]	; 0xffffffef
   12a6c:	b	12a78 <__assert_fail@plt+0x1b64>
   12a70:	mov	r3, #0
   12a74:	b	12b90 <__assert_fail@plt+0x1c7c>
   12a78:	ldrb	r3, [fp, #-17]	; 0xffffffef
   12a7c:	cmp	r3, #0
   12a80:	beq	12a8c <__assert_fail@plt+0x1b78>
   12a84:	nop	{0}
   12a88:	b	12b34 <__assert_fail@plt+0x1c20>
   12a8c:	ldr	r3, [fp, #-16]
   12a90:	add	r3, r3, #1
   12a94:	mov	r2, #45	; 0x2d
   12a98:	mov	r1, r3
   12a9c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12aa0:	bl	111fc <__assert_fail@plt+0x2e8>
   12aa4:	mov	r3, r0
   12aa8:	cmp	r3, #0
   12aac:	beq	12b0c <__assert_fail@plt+0x1bf8>
   12ab0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12ab4:	ldr	r3, [fp, #-16]
   12ab8:	add	r3, r2, r3
   12abc:	ldrb	r1, [r3]
   12ac0:	ldr	r3, [fp, #-16]
   12ac4:	add	r3, r3, #2
   12ac8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12acc:	add	r3, r2, r3
   12ad0:	ldrb	r3, [r3]
   12ad4:	mov	r2, r3
   12ad8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12adc:	bl	11f58 <__assert_fail@plt+0x1044>
   12ae0:	mov	r3, r0
   12ae4:	eor	r3, r3, #1
   12ae8:	uxtb	r3, r3
   12aec:	cmp	r3, #0
   12af0:	beq	12afc <__assert_fail@plt+0x1be8>
   12af4:	mov	r3, #0
   12af8:	b	12b90 <__assert_fail@plt+0x1c7c>
   12afc:	ldr	r3, [fp, #-16]
   12b00:	add	r3, r3, #3
   12b04:	str	r3, [fp, #-16]
   12b08:	b	12b34 <__assert_fail@plt+0x1c20>
   12b0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12b10:	ldr	r3, [fp, #-16]
   12b14:	add	r3, r2, r3
   12b18:	ldrb	r3, [r3]
   12b1c:	mov	r1, r3
   12b20:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12b24:	bl	11ea8 <__assert_fail@plt+0xf94>
   12b28:	ldr	r3, [fp, #-16]
   12b2c:	add	r3, r3, #1
   12b30:	str	r3, [fp, #-16]
   12b34:	ldr	r3, [fp, #-16]
   12b38:	add	r2, r3, #2
   12b3c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12b40:	ldr	r3, [r3, #8]
   12b44:	cmp	r2, r3
   12b48:	bcc	12774 <__assert_fail@plt+0x1860>
   12b4c:	b	12b78 <__assert_fail@plt+0x1c64>
   12b50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12b54:	ldr	r3, [fp, #-16]
   12b58:	add	r3, r2, r3
   12b5c:	ldrb	r3, [r3]
   12b60:	mov	r1, r3
   12b64:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12b68:	bl	11ea8 <__assert_fail@plt+0xf94>
   12b6c:	ldr	r3, [fp, #-16]
   12b70:	add	r3, r3, #1
   12b74:	str	r3, [fp, #-16]
   12b78:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12b7c:	ldr	r3, [r3, #8]
   12b80:	ldr	r2, [fp, #-16]
   12b84:	cmp	r2, r3
   12b88:	bcc	12b50 <__assert_fail@plt+0x1c3c>
   12b8c:	mov	r3, #1
   12b90:	mov	r0, r3
   12b94:	sub	sp, fp, #8
   12b98:	ldr	r4, [sp]
   12b9c:	ldr	fp, [sp, #4]
   12ba0:	add	sp, sp, #8
   12ba4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ba8:	push	{fp}		; (str fp, [sp, #-4]!)
   12bac:	add	fp, sp, #0
   12bb0:	sub	sp, sp, #12
   12bb4:	str	r0, [fp, #-8]
   12bb8:	ldr	r3, [fp, #-8]
   12bbc:	ldr	r3, [r3, #4]
   12bc0:	ldr	r2, [r3, #4]
   12bc4:	ldr	r3, [fp, #-8]
   12bc8:	str	r2, [r3, #4]
   12bcc:	ldr	r1, [fp, #-8]
   12bd0:	mvn	r2, #0
   12bd4:	mvn	r3, #0
   12bd8:	strd	r2, [r1, #8]
   12bdc:	nop	{0}
   12be0:	add	sp, fp, #0
   12be4:	pop	{fp}		; (ldr fp, [sp], #4)
   12be8:	bx	lr
   12bec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12bf0:	strd	r6, [sp, #8]
   12bf4:	str	fp, [sp, #16]
   12bf8:	str	lr, [sp, #20]
   12bfc:	add	fp, sp, #20
   12c00:	sub	sp, sp, #24
   12c04:	str	r0, [fp, #-40]	; 0xffffffd8
   12c08:	str	r1, [fp, #-44]	; 0xffffffd4
   12c0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12c10:	cmp	r3, #0
   12c14:	beq	12c24 <__assert_fail@plt+0x1d10>
   12c18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12c1c:	mov	r2, #2
   12c20:	str	r2, [r3]
   12c24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12c28:	ldrd	r2, [r3, #8]
   12c2c:	mvn	r0, #1
   12c30:	mvn	r1, #0
   12c34:	cmp	r3, r1
   12c38:	cmpeq	r2, r0
   12c3c:	bne	12c64 <__assert_fail@plt+0x1d50>
   12c40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12c44:	ldr	r3, [r3]
   12c48:	ldr	r2, [r3, #4]
   12c4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12c50:	str	r2, [r3, #4]
   12c54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12c58:	mvn	r2, #0
   12c5c:	mvn	r3, #0
   12c60:	strd	r2, [r1, #8]
   12c64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12c68:	ldr	r3, [r3, #4]
   12c6c:	str	r3, [fp, #-32]	; 0xffffffe0
   12c70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12c74:	cmp	r3, #0
   12c78:	bne	12c84 <__assert_fail@plt+0x1d70>
   12c7c:	mvn	r3, #0
   12c80:	b	13098 <__assert_fail@plt+0x2184>
   12c84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12c88:	ldr	r3, [r3]
   12c8c:	cmp	r3, #4
   12c90:	ldrls	pc, [pc, r3, lsl #2]
   12c94:	b	13084 <__assert_fail@plt+0x2170>
   12c98:	andeq	r2, r1, ip, lsr #25
   12c9c:	ldrdeq	r2, [r1], -ip
   12ca0:	andeq	r2, r1, r4, lsl #27
   12ca4:	andeq	r2, r1, r0, lsl #31
   12ca8:			; <UNDEFINED> instruction: 0x00012fb0
   12cac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12cb0:	ldrb	r3, [r3, #8]
   12cb4:	str	r3, [fp, #-24]	; 0xffffffe8
   12cb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12cbc:	mvn	r2, #0
   12cc0:	mvn	r3, #0
   12cc4:	strd	r2, [r1, #8]
   12cc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12ccc:	ldr	r2, [r3, #4]
   12cd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12cd4:	str	r2, [r3, #4]
   12cd8:	b	13094 <__assert_fail@plt+0x2180>
   12cdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12ce0:	ldrd	r2, [r3, #8]
   12ce4:	mvn	r0, #0
   12ce8:	mvn	r1, #0
   12cec:	cmp	r3, r1
   12cf0:	cmpeq	r2, r0
   12cf4:	bne	12d14 <__assert_fail@plt+0x1e00>
   12cf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12cfc:	ldrb	r3, [r3, #8]
   12d00:	uxtb	r2, r3
   12d04:	mov	r3, #0
   12d08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d0c:	strd	r2, [r1, #8]
   12d10:	b	12d2c <__assert_fail@plt+0x1e18>
   12d14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12d18:	ldrd	r2, [r3, #8]
   12d1c:	adds	r6, r2, #1
   12d20:	adc	r7, r3, #0
   12d24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12d28:	strd	r6, [r3, #8]
   12d2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12d30:	ldrd	r2, [r3, #8]
   12d34:	mov	r3, r2
   12d38:	str	r3, [fp, #-24]	; 0xffffffe8
   12d3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12d40:	ldrd	r0, [r3, #8]
   12d44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12d48:	ldrb	r3, [r3, #9]
   12d4c:	uxtb	r2, r3
   12d50:	mov	r3, #0
   12d54:	cmp	r1, r3
   12d58:	cmpeq	r0, r2
   12d5c:	bne	13088 <__assert_fail@plt+0x2174>
   12d60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12d64:	ldr	r2, [r3, #4]
   12d68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12d6c:	str	r2, [r3, #4]
   12d70:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d74:	mvn	r2, #0
   12d78:	mvn	r3, #0
   12d7c:	strd	r2, [r1, #8]
   12d80:	b	13088 <__assert_fail@plt+0x2174>
   12d84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12d88:	cmp	r3, #0
   12d8c:	beq	12dcc <__assert_fail@plt+0x1eb8>
   12d90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12d94:	ldr	r3, [r3, #8]
   12d98:	cmp	r3, #6
   12d9c:	beq	12dac <__assert_fail@plt+0x1e98>
   12da0:	cmp	r3, #10
   12da4:	beq	12dbc <__assert_fail@plt+0x1ea8>
   12da8:	b	12dd0 <__assert_fail@plt+0x1ebc>
   12dac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12db0:	mov	r2, #0
   12db4:	str	r2, [r3]
   12db8:	b	12dd0 <__assert_fail@plt+0x1ebc>
   12dbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12dc0:	mov	r2, #1
   12dc4:	str	r2, [r3]
   12dc8:	b	12dd0 <__assert_fail@plt+0x1ebc>
   12dcc:	nop	{0}
   12dd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12dd4:	ldrd	r2, [r3, #8]
   12dd8:	mvn	r0, #0
   12ddc:	mvn	r1, #0
   12de0:	cmp	r3, r1
   12de4:	cmpeq	r2, r0
   12de8:	bne	12e80 <__assert_fail@plt+0x1f6c>
   12dec:	mov	r3, #0
   12df0:	str	r3, [fp, #-28]	; 0xffffffe4
   12df4:	b	12e2c <__assert_fail@plt+0x1f18>
   12df8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12dfc:	ldr	r3, [r3, #8]
   12e00:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12e04:	uxtb	r2, r2
   12e08:	mov	r1, r2
   12e0c:	mov	r0, r3
   12e10:	bl	11478 <__assert_fail@plt+0x564>
   12e14:	mov	r3, r0
   12e18:	cmp	r3, #0
   12e1c:	bne	12e3c <__assert_fail@plt+0x1f28>
   12e20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12e24:	add	r3, r3, #1
   12e28:	str	r3, [fp, #-28]	; 0xffffffe4
   12e2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12e30:	cmp	r3, #255	; 0xff
   12e34:	ble	12df8 <__assert_fail@plt+0x1ee4>
   12e38:	b	12e40 <__assert_fail@plt+0x1f2c>
   12e3c:	nop	{0}
   12e40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12e44:	cmp	r3, #255	; 0xff
   12e48:	ble	12e6c <__assert_fail@plt+0x1f58>
   12e4c:	movw	r3, #48424	; 0xbd28
   12e50:	movt	r3, #1
   12e54:	movw	r2, #1079	; 0x437
   12e58:	movw	r1, #46676	; 0xb654
   12e5c:	movt	r1, #1
   12e60:	movw	r0, #47004	; 0xb79c
   12e64:	movt	r0, #1
   12e68:	bl	10f14 <__assert_fail@plt>
   12e6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12e70:	mov	r2, r3
   12e74:	asr	r3, r2, #31
   12e78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e7c:	strd	r2, [r1, #8]
   12e80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12e84:	ldr	r0, [r3, #8]
   12e88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12e8c:	ldrd	r2, [r3, #8]
   12e90:	uxtb	r3, r2
   12e94:	mov	r1, r3
   12e98:	bl	11478 <__assert_fail@plt+0x564>
   12e9c:	mov	r3, r0
   12ea0:	cmp	r3, #0
   12ea4:	bne	12ec8 <__assert_fail@plt+0x1fb4>
   12ea8:	movw	r3, #48424	; 0xbd28
   12eac:	movt	r3, #1
   12eb0:	movw	r2, #1082	; 0x43a
   12eb4:	movw	r1, #46676	; 0xb654
   12eb8:	movt	r1, #1
   12ebc:	movw	r0, #47016	; 0xb7a8
   12ec0:	movt	r0, #1
   12ec4:	bl	10f14 <__assert_fail@plt>
   12ec8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12ecc:	ldrd	r2, [r3, #8]
   12ed0:	mov	r3, r2
   12ed4:	str	r3, [fp, #-24]	; 0xffffffe8
   12ed8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12edc:	ldrd	r2, [r3, #8]
   12ee0:	mov	r3, r2
   12ee4:	add	r3, r3, #1
   12ee8:	str	r3, [fp, #-28]	; 0xffffffe4
   12eec:	b	12f24 <__assert_fail@plt+0x2010>
   12ef0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12ef4:	ldr	r3, [r3, #8]
   12ef8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12efc:	uxtb	r2, r2
   12f00:	mov	r1, r2
   12f04:	mov	r0, r3
   12f08:	bl	11478 <__assert_fail@plt+0x564>
   12f0c:	mov	r3, r0
   12f10:	cmp	r3, #0
   12f14:	bne	12f34 <__assert_fail@plt+0x2020>
   12f18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12f1c:	add	r3, r3, #1
   12f20:	str	r3, [fp, #-28]	; 0xffffffe4
   12f24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12f28:	cmp	r3, #255	; 0xff
   12f2c:	ble	12ef0 <__assert_fail@plt+0x1fdc>
   12f30:	b	12f38 <__assert_fail@plt+0x2024>
   12f34:	nop	{0}
   12f38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12f3c:	cmp	r3, #255	; 0xff
   12f40:	bgt	12f5c <__assert_fail@plt+0x2048>
   12f44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12f48:	mov	r2, r3
   12f4c:	asr	r3, r2, #31
   12f50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12f54:	strd	r2, [r1, #8]
   12f58:	b	13094 <__assert_fail@plt+0x2180>
   12f5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12f60:	ldr	r2, [r3, #4]
   12f64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12f68:	str	r2, [r3, #4]
   12f6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12f70:	mvn	r2, #0
   12f74:	mvn	r3, #0
   12f78:	strd	r2, [r1, #8]
   12f7c:	b	13094 <__assert_fail@plt+0x2180>
   12f80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12f84:	ldrb	r3, [r3, #8]
   12f88:	str	r3, [fp, #-24]	; 0xffffffe8
   12f8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12f90:	mvn	r2, #0
   12f94:	mvn	r3, #0
   12f98:	strd	r2, [r1, #8]
   12f9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12fa0:	ldr	r2, [r3, #4]
   12fa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12fa8:	str	r2, [r3, #4]
   12fac:	b	13094 <__assert_fail@plt+0x2180>
   12fb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12fb4:	ldrd	r2, [r3, #16]
   12fb8:	orrs	r3, r2, r3
   12fbc:	bne	12ff4 <__assert_fail@plt+0x20e0>
   12fc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12fc4:	ldr	r2, [r3, #4]
   12fc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12fcc:	str	r2, [r3, #4]
   12fd0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12fd4:	mvn	r2, #0
   12fd8:	mvn	r3, #0
   12fdc:	strd	r2, [r1, #8]
   12fe0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12fe4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fe8:	bl	12bec <__assert_fail@plt+0x1cd8>
   12fec:	str	r0, [fp, #-24]	; 0xffffffe8
   12ff0:	b	13090 <__assert_fail@plt+0x217c>
   12ff4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12ff8:	ldrd	r2, [r3, #8]
   12ffc:	mvn	r0, #0
   13000:	mvn	r1, #0
   13004:	cmp	r3, r1
   13008:	cmpeq	r2, r0
   1300c:	bne	13020 <__assert_fail@plt+0x210c>
   13010:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13014:	mov	r2, #0
   13018:	mov	r3, #0
   1301c:	strd	r2, [r1, #8]
   13020:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13024:	ldrd	r2, [r3, #8]
   13028:	adds	r4, r2, #1
   1302c:	adc	r5, r3, #0
   13030:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13034:	strd	r4, [r3, #8]
   13038:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1303c:	ldrb	r3, [r3, #8]
   13040:	str	r3, [fp, #-24]	; 0xffffffe8
   13044:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13048:	ldrd	r0, [r3, #8]
   1304c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13050:	ldrd	r2, [r3, #16]
   13054:	cmp	r1, r3
   13058:	cmpeq	r0, r2
   1305c:	bne	13090 <__assert_fail@plt+0x217c>
   13060:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13064:	ldr	r2, [r3, #4]
   13068:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1306c:	str	r2, [r3, #4]
   13070:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13074:	mvn	r2, #0
   13078:	mvn	r3, #0
   1307c:	strd	r2, [r1, #8]
   13080:	b	13090 <__assert_fail@plt+0x217c>
   13084:	bl	10efc <abort@plt>
   13088:	nop	{0}
   1308c:	b	13094 <__assert_fail@plt+0x2180>
   13090:	nop	{0}
   13094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13098:	mov	r0, r3
   1309c:	sub	sp, fp, #20
   130a0:	ldrd	r4, [sp]
   130a4:	ldrd	r6, [sp, #8]
   130a8:	ldr	fp, [sp, #16]
   130ac:	add	sp, sp, #20
   130b0:	pop	{pc}		; (ldr pc, [sp], #4)
   130b4:	str	fp, [sp, #-8]!
   130b8:	str	lr, [sp, #4]
   130bc:	add	fp, sp, #4
   130c0:	sub	sp, sp, #272	; 0x110
   130c4:	str	r0, [fp, #-272]	; 0xfffffef0
   130c8:	mov	r3, #256	; 0x100
   130cc:	str	r3, [fp, #-8]
   130d0:	sub	r3, fp, #268	; 0x10c
   130d4:	mov	r2, #256	; 0x100
   130d8:	mov	r1, #0
   130dc:	mov	r0, r3
   130e0:	bl	10e6c <memset@plt>
   130e4:	ldr	r1, [fp, #-272]	; 0xfffffef0
   130e8:	mvn	r2, #1
   130ec:	mvn	r3, #0
   130f0:	strd	r2, [r1, #8]
   130f4:	b	13134 <__assert_fail@plt+0x2220>
   130f8:	sub	r2, fp, #268	; 0x10c
   130fc:	ldr	r3, [fp, #-12]
   13100:	add	r3, r2, r3
   13104:	ldrb	r3, [r3]
   13108:	eor	r3, r3, #1
   1310c:	uxtb	r3, r3
   13110:	mov	r2, r3
   13114:	ldr	r3, [fp, #-8]
   13118:	sub	r3, r3, r2
   1311c:	str	r3, [fp, #-8]
   13120:	sub	r2, fp, #268	; 0x10c
   13124:	ldr	r3, [fp, #-12]
   13128:	add	r3, r2, r3
   1312c:	mov	r2, #1
   13130:	strb	r2, [r3]
   13134:	mov	r1, #0
   13138:	ldr	r0, [fp, #-272]	; 0xfffffef0
   1313c:	bl	12bec <__assert_fail@plt+0x1cd8>
   13140:	str	r0, [fp, #-12]
   13144:	ldr	r3, [fp, #-12]
   13148:	cmn	r3, #1
   1314c:	bne	130f8 <__assert_fail@plt+0x21e4>
   13150:	ldr	r3, [fp, #-8]
   13154:	mov	r0, r3
   13158:	sub	sp, fp, #4
   1315c:	ldr	fp, [sp]
   13160:	add	sp, sp, #4
   13164:	pop	{pc}		; (ldr pc, [sp], #4)
   13168:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1316c:	strd	r6, [sp, #8]
   13170:	str	fp, [sp, #16]
   13174:	str	lr, [sp, #20]
   13178:	add	fp, sp, #20
   1317c:	sub	sp, sp, #64	; 0x40
   13180:	str	r0, [fp, #-80]	; 0xffffffb0
   13184:	str	r1, [fp, #-84]	; 0xffffffac
   13188:	mov	r3, #0
   1318c:	str	r3, [fp, #-24]	; 0xffffffe8
   13190:	mov	r3, #0
   13194:	str	r3, [fp, #-28]	; 0xffffffe4
   13198:	mov	r3, #0
   1319c:	str	r3, [fp, #-32]	; 0xffffffe0
   131a0:	mov	r3, #0
   131a4:	str	r3, [fp, #-36]	; 0xffffffdc
   131a8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   131ac:	ldrd	r2, [r3, #16]
   131b0:	strd	r2, [fp, #-52]	; 0xffffffcc
   131b4:	ldr	r3, [fp, #-84]	; 0xffffffac
   131b8:	ldrd	r2, [r3, #16]
   131bc:	strd	r2, [fp, #-60]	; 0xffffffc4
   131c0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   131c4:	ldr	r3, [r3, #4]
   131c8:	str	r3, [fp, #-64]	; 0xffffffc0
   131cc:	ldr	r3, [fp, #-84]	; 0xffffffac
   131d0:	ldr	r3, [r3, #4]
   131d4:	str	r3, [fp, #-68]	; 0xffffffbc
   131d8:	mov	r3, #1
   131dc:	strb	r3, [fp, #-37]	; 0xffffffdb
   131e0:	mov	r3, #1
   131e4:	strb	r3, [fp, #-38]	; 0xffffffda
   131e8:	movw	r3, #53598	; 0xd15e
   131ec:	movt	r3, #2
   131f0:	ldrb	r3, [r3]
   131f4:	cmp	r3, #0
   131f8:	bne	1349c <__assert_fail@plt+0x2588>
   131fc:	ldr	r3, [fp, #-84]	; 0xffffffac
   13200:	ldrb	r3, [r3, #33]	; 0x21
   13204:	eor	r3, r3, #1
   13208:	uxtb	r3, r3
   1320c:	cmp	r3, #0
   13210:	bne	1349c <__assert_fail@plt+0x2588>
   13214:	mov	r3, #0
   13218:	str	r3, [fp, #-44]	; 0xffffffd4
   1321c:	b	13294 <__assert_fail@plt+0x2380>
   13220:	bl	10e0c <__ctype_b_loc@plt>
   13224:	mov	r3, r0
   13228:	ldr	r2, [r3]
   1322c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13230:	lsl	r3, r3, #1
   13234:	add	r3, r2, r3
   13238:	ldrh	r3, [r3]
   1323c:	and	r3, r3, #256	; 0x100
   13240:	cmp	r3, #0
   13244:	beq	13254 <__assert_fail@plt+0x2340>
   13248:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1324c:	add	r3, r3, #1
   13250:	str	r3, [fp, #-24]	; 0xffffffe8
   13254:	bl	10e0c <__ctype_b_loc@plt>
   13258:	mov	r3, r0
   1325c:	ldr	r2, [r3]
   13260:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13264:	lsl	r3, r3, #1
   13268:	add	r3, r2, r3
   1326c:	ldrh	r3, [r3]
   13270:	and	r3, r3, #512	; 0x200
   13274:	cmp	r3, #0
   13278:	beq	13288 <__assert_fail@plt+0x2374>
   1327c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13280:	add	r3, r3, #1
   13284:	str	r3, [fp, #-28]	; 0xffffffe4
   13288:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1328c:	add	r3, r3, #1
   13290:	str	r3, [fp, #-44]	; 0xffffffd4
   13294:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13298:	cmp	r3, #255	; 0xff
   1329c:	ble	13220 <__assert_fail@plt+0x230c>
   132a0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   132a4:	mvn	r2, #1
   132a8:	mvn	r3, #0
   132ac:	strd	r2, [r1, #8]
   132b0:	ldr	r1, [fp, #-84]	; 0xffffffac
   132b4:	mvn	r2, #1
   132b8:	mvn	r3, #0
   132bc:	strd	r2, [r1, #8]
   132c0:	b	13418 <__assert_fail@plt+0x2504>
   132c4:	sub	r3, fp, #72	; 0x48
   132c8:	mov	r1, r3
   132cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   132d0:	bl	12bec <__assert_fail@plt+0x1cd8>
   132d4:	str	r0, [fp, #-32]	; 0xffffffe0
   132d8:	sub	r3, fp, #76	; 0x4c
   132dc:	mov	r1, r3
   132e0:	ldr	r0, [fp, #-84]	; 0xffffffac
   132e4:	bl	12bec <__assert_fail@plt+0x1cd8>
   132e8:	str	r0, [fp, #-36]	; 0xffffffdc
   132ec:	ldrb	r3, [fp, #-38]	; 0xffffffda
   132f0:	cmp	r3, #0
   132f4:	beq	13344 <__assert_fail@plt+0x2430>
   132f8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   132fc:	cmp	r3, #2
   13300:	beq	13344 <__assert_fail@plt+0x2430>
   13304:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   13308:	eor	r3, r3, #1
   1330c:	uxtb	r3, r3
   13310:	cmp	r3, #0
   13314:	bne	13324 <__assert_fail@plt+0x2410>
   13318:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1331c:	cmp	r3, #2
   13320:	bne	13344 <__assert_fail@plt+0x2430>
   13324:	movw	r0, #47068	; 0xb7dc
   13328:	movt	r0, #1
   1332c:	bl	10e24 <gettext@plt>
   13330:	mov	r3, r0
   13334:	mov	r2, r3
   13338:	mov	r1, #0
   1333c:	mov	r0, #1
   13340:	bl	10dc4 <error@plt>
   13344:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13348:	cmp	r3, #2
   1334c:	beq	133e0 <__assert_fail@plt+0x24cc>
   13350:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13354:	bl	12ba8 <__assert_fail@plt+0x1c94>
   13358:	ldr	r0, [fp, #-84]	; 0xffffffac
   1335c:	bl	12ba8 <__assert_fail@plt+0x1c94>
   13360:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13364:	ldrd	r0, [r3, #16]
   13368:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1336c:	cmp	r3, #1
   13370:	bne	13380 <__assert_fail@plt+0x246c>
   13374:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13378:	sub	r3, r3, #1
   1337c:	b	13388 <__assert_fail@plt+0x2474>
   13380:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13384:	sub	r3, r3, #1
   13388:	mov	r2, r3
   1338c:	mov	r3, #0
   13390:	subs	r4, r0, r2
   13394:	sbc	r5, r1, r3
   13398:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1339c:	strd	r4, [r3, #16]
   133a0:	ldr	r3, [fp, #-84]	; 0xffffffac
   133a4:	ldrd	r0, [r3, #16]
   133a8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   133ac:	cmp	r3, #1
   133b0:	bne	133c0 <__assert_fail@plt+0x24ac>
   133b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   133b8:	sub	r3, r3, #1
   133bc:	b	133c8 <__assert_fail@plt+0x24b4>
   133c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   133c4:	sub	r3, r3, #1
   133c8:	mov	r2, r3
   133cc:	mov	r3, #0
   133d0:	subs	r6, r0, r2
   133d4:	sbc	r7, r1, r3
   133d8:	ldr	r3, [fp, #-84]	; 0xffffffac
   133dc:	strd	r6, [r3, #16]
   133e0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   133e4:	ldrd	r2, [r3, #8]
   133e8:	and	r3, r3, r2
   133ec:	cmn	r3, #1
   133f0:	moveq	r3, #1
   133f4:	movne	r3, #0
   133f8:	strb	r3, [fp, #-37]	; 0xffffffdb
   133fc:	ldr	r3, [fp, #-84]	; 0xffffffac
   13400:	ldrd	r2, [r3, #8]
   13404:	and	r3, r3, r2
   13408:	cmn	r3, #1
   1340c:	moveq	r3, #1
   13410:	movne	r3, #0
   13414:	strb	r3, [fp, #-38]	; 0xffffffda
   13418:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1341c:	cmn	r3, #1
   13420:	beq	13430 <__assert_fail@plt+0x251c>
   13424:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13428:	cmn	r3, #1
   1342c:	bne	132c4 <__assert_fail@plt+0x23b0>
   13430:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13434:	ldrd	r2, [r3, #16]
   13438:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   1343c:	cmp	r1, r3
   13440:	cmpeq	r0, r2
   13444:	bcc	13460 <__assert_fail@plt+0x254c>
   13448:	ldr	r3, [fp, #-84]	; 0xffffffac
   1344c:	ldrd	r2, [r3, #16]
   13450:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   13454:	cmp	r1, r3
   13458:	cmpeq	r0, r2
   1345c:	bcs	13480 <__assert_fail@plt+0x256c>
   13460:	movw	r3, #48436	; 0xbd34
   13464:	movt	r3, #1
   13468:	movw	r2, #1224	; 0x4c8
   1346c:	movw	r1, #46676	; 0xb654
   13470:	movt	r1, #1
   13474:	movw	r0, #47116	; 0xb80c
   13478:	movt	r0, #1
   1347c:	bl	10f14 <__assert_fail@plt>
   13480:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13484:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13488:	str	r2, [r3, #4]
   1348c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13490:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13494:	str	r2, [r3, #4]
   13498:	b	134a0 <__assert_fail@plt+0x258c>
   1349c:	nop	{0}
   134a0:	sub	sp, fp, #20
   134a4:	ldrd	r4, [sp]
   134a8:	ldrd	r6, [sp, #8]
   134ac:	ldr	fp, [sp, #16]
   134b0:	add	sp, sp, #20
   134b4:	pop	{pc}		; (ldr pc, [sp], #4)
   134b8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   134bc:	strd	r6, [sp, #8]
   134c0:	strd	r8, [sp, #16]
   134c4:	str	fp, [sp, #24]
   134c8:	str	lr, [sp, #28]
   134cc:	add	fp, sp, #28
   134d0:	sub	sp, sp, #48	; 0x30
   134d4:	str	r0, [fp, #-72]	; 0xffffffb8
   134d8:	mov	r2, #0
   134dc:	mov	r3, #0
   134e0:	strd	r2, [fp, #-44]	; 0xffffffd4
   134e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   134e8:	mov	r2, #0
   134ec:	str	r2, [r3, #24]
   134f0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   134f4:	mov	r2, #0
   134f8:	strb	r2, [r3, #32]
   134fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13500:	mov	r2, #0
   13504:	strb	r2, [r3, #34]	; 0x22
   13508:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1350c:	mov	r2, #0
   13510:	strb	r2, [r3, #33]	; 0x21
   13514:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13518:	ldr	r3, [r3]
   1351c:	ldr	r3, [r3, #4]
   13520:	str	r3, [fp, #-32]	; 0xffffffe0
   13524:	b	13790 <__assert_fail@plt+0x287c>
   13528:	mov	r2, #0
   1352c:	mov	r3, #0
   13530:	strd	r2, [fp, #-52]	; 0xffffffcc
   13534:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13538:	ldr	r3, [r3]
   1353c:	cmp	r3, #4
   13540:	ldrls	pc, [pc, r3, lsl #2]
   13544:	b	13718 <__assert_fail@plt+0x2804>
   13548:	andeq	r3, r1, ip, asr r5
   1354c:	andeq	r3, r1, ip, ror #10
   13550:	ldrdeq	r3, [r1], -r0
   13554:	andeq	r3, r1, r8, ror #12
   13558:	ldrdeq	r3, [r1], -r4
   1355c:	mov	r2, #1
   13560:	mov	r3, #0
   13564:	strd	r2, [fp, #-52]	; 0xffffffcc
   13568:	b	1371c <__assert_fail@plt+0x2808>
   1356c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13570:	ldrb	r2, [r3, #9]
   13574:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13578:	ldrb	r3, [r3, #8]
   1357c:	cmp	r2, r3
   13580:	bcs	135a4 <__assert_fail@plt+0x2690>
   13584:	movw	r3, #48460	; 0xbd4c
   13588:	movt	r3, #1
   1358c:	movw	r2, #1265	; 0x4f1
   13590:	movw	r1, #46676	; 0xb654
   13594:	movt	r1, #1
   13598:	movw	r0, #47172	; 0xb844
   1359c:	movt	r0, #1
   135a0:	bl	10f14 <__assert_fail@plt>
   135a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   135a8:	ldrb	r3, [r3, #9]
   135ac:	mov	r2, r3
   135b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   135b4:	ldrb	r3, [r3, #8]
   135b8:	sub	r3, r2, r3
   135bc:	add	r3, r3, #1
   135c0:	mov	r2, r3
   135c4:	asr	r3, r2, #31
   135c8:	strd	r2, [fp, #-52]	; 0xffffffcc
   135cc:	b	1371c <__assert_fail@plt+0x2808>
   135d0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   135d4:	mov	r2, #1
   135d8:	strb	r2, [r3, #33]	; 0x21
   135dc:	mov	r3, #0
   135e0:	str	r3, [fp, #-56]	; 0xffffffc8
   135e4:	b	1362c <__assert_fail@plt+0x2718>
   135e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   135ec:	ldr	r3, [r3, #8]
   135f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   135f4:	uxtb	r2, r2
   135f8:	mov	r1, r2
   135fc:	mov	r0, r3
   13600:	bl	11478 <__assert_fail@plt+0x564>
   13604:	mov	r3, r0
   13608:	cmp	r3, #0
   1360c:	beq	13620 <__assert_fail@plt+0x270c>
   13610:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   13614:	adds	r4, r2, #1
   13618:	adc	r5, r3, #0
   1361c:	strd	r4, [fp, #-52]	; 0xffffffcc
   13620:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13624:	add	r3, r3, #1
   13628:	str	r3, [fp, #-56]	; 0xffffffc8
   1362c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13630:	cmp	r3, #255	; 0xff
   13634:	ble	135e8 <__assert_fail@plt+0x26d4>
   13638:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1363c:	ldr	r3, [r3, #8]
   13640:	cmp	r3, #6
   13644:	beq	13660 <__assert_fail@plt+0x274c>
   13648:	cmp	r3, #10
   1364c:	beq	13660 <__assert_fail@plt+0x274c>
   13650:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13654:	mov	r2, #1
   13658:	strb	r2, [r3, #34]	; 0x22
   1365c:	b	13664 <__assert_fail@plt+0x2750>
   13660:	nop	{0}
   13664:	b	1371c <__assert_fail@plt+0x2808>
   13668:	mov	r3, #0
   1366c:	str	r3, [fp, #-60]	; 0xffffffc4
   13670:	b	136b8 <__assert_fail@plt+0x27a4>
   13674:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13678:	ldrb	r3, [r3, #8]
   1367c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13680:	uxtb	r2, r2
   13684:	mov	r1, r2
   13688:	mov	r0, r3
   1368c:	bl	11430 <__assert_fail@plt+0x51c>
   13690:	mov	r3, r0
   13694:	cmp	r3, #0
   13698:	beq	136ac <__assert_fail@plt+0x2798>
   1369c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   136a0:	adds	r6, r2, #1
   136a4:	adc	r7, r3, #0
   136a8:	strd	r6, [fp, #-52]	; 0xffffffcc
   136ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   136b0:	add	r3, r3, #1
   136b4:	str	r3, [fp, #-60]	; 0xffffffc4
   136b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   136bc:	cmp	r3, #255	; 0xff
   136c0:	ble	13674 <__assert_fail@plt+0x2760>
   136c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   136c8:	mov	r2, #1
   136cc:	strb	r2, [r3, #32]
   136d0:	b	1371c <__assert_fail@plt+0x2808>
   136d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   136d8:	ldrd	r2, [r3, #16]
   136dc:	orrs	r3, r2, r3
   136e0:	beq	136f4 <__assert_fail@plt+0x27e0>
   136e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   136e8:	ldrd	r2, [r3, #16]
   136ec:	strd	r2, [fp, #-52]	; 0xffffffcc
   136f0:	b	1371c <__assert_fail@plt+0x2808>
   136f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   136f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   136fc:	str	r2, [r3, #28]
   13700:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13704:	ldr	r3, [r3, #24]
   13708:	add	r2, r3, #1
   1370c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13710:	str	r2, [r3, #24]
   13714:	b	1371c <__assert_fail@plt+0x2808>
   13718:	bl	10efc <abort@plt>
   1371c:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   13720:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   13724:	adds	r8, r0, r2
   13728:	adc	r9, r1, r3
   1372c:	strd	r8, [fp, #-68]	; 0xffffffbc
   13730:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   13734:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   13738:	cmp	r1, r3
   1373c:	cmpeq	r0, r2
   13740:	bhi	1375c <__assert_fail@plt+0x2848>
   13744:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   13748:	mvn	r0, #0
   1374c:	mvn	r1, #0
   13750:	cmp	r3, r1
   13754:	cmpeq	r2, r0
   13758:	bne	1377c <__assert_fail@plt+0x2868>
   1375c:	movw	r0, #47220	; 0xb874
   13760:	movt	r0, #1
   13764:	bl	10e24 <gettext@plt>
   13768:	mov	r3, r0
   1376c:	mov	r2, r3
   13770:	mov	r1, #0
   13774:	mov	r0, #1
   13778:	bl	10dc4 <error@plt>
   1377c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   13780:	strd	r2, [fp, #-44]	; 0xffffffd4
   13784:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13788:	ldr	r3, [r3, #4]
   1378c:	str	r3, [fp, #-32]	; 0xffffffe0
   13790:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13794:	cmp	r3, #0
   13798:	bne	13528 <__assert_fail@plt+0x2614>
   1379c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   137a0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   137a4:	strd	r2, [r1, #16]
   137a8:	nop	{0}
   137ac:	sub	sp, fp, #28
   137b0:	ldrd	r4, [sp]
   137b4:	ldrd	r6, [sp, #8]
   137b8:	ldrd	r8, [sp, #16]
   137bc:	ldr	fp, [sp, #24]
   137c0:	add	sp, sp, #28
   137c4:	pop	{pc}		; (ldr pc, [sp], #4)
   137c8:	str	fp, [sp, #-8]!
   137cc:	str	lr, [sp, #4]
   137d0:	add	fp, sp, #4
   137d4:	sub	sp, sp, #8
   137d8:	str	r0, [fp, #-8]
   137dc:	ldr	r0, [fp, #-8]
   137e0:	bl	134b8 <__assert_fail@plt+0x25a4>
   137e4:	movw	r3, #53598	; 0xd15e
   137e8:	movt	r3, #2
   137ec:	ldrb	r3, [r3]
   137f0:	cmp	r3, #0
   137f4:	beq	13814 <__assert_fail@plt+0x2900>
   137f8:	ldr	r0, [fp, #-8]
   137fc:	bl	130b4 <__assert_fail@plt+0x21a0>
   13800:	mov	r3, r0
   13804:	mov	r2, r3
   13808:	asr	r3, r2, #31
   1380c:	ldr	r1, [fp, #-8]
   13810:	strd	r2, [r1, #16]
   13814:	nop	{0}
   13818:	sub	sp, fp, #4
   1381c:	ldr	fp, [sp]
   13820:	add	sp, sp, #4
   13824:	pop	{pc}		; (ldr pc, [sp], #4)
   13828:	strd	r4, [sp, #-16]!
   1382c:	str	fp, [sp, #8]
   13830:	str	lr, [sp, #12]
   13834:	add	fp, sp, #12
   13838:	sub	sp, sp, #16
   1383c:	str	r0, [fp, #-16]
   13840:	strd	r2, [fp, #-28]	; 0xffffffe4
   13844:	ldr	r0, [fp, #-16]
   13848:	bl	134b8 <__assert_fail@plt+0x25a4>
   1384c:	ldr	r3, [fp, #-16]
   13850:	ldrd	r2, [r3, #16]
   13854:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   13858:	cmp	r1, r3
   1385c:	cmpeq	r0, r2
   13860:	bcc	138a0 <__assert_fail@plt+0x298c>
   13864:	ldr	r3, [fp, #-16]
   13868:	ldr	r3, [r3, #24]
   1386c:	cmp	r3, #1
   13870:	bne	138a0 <__assert_fail@plt+0x298c>
   13874:	ldr	r3, [fp, #-16]
   13878:	ldrd	r2, [r3, #16]
   1387c:	ldr	r1, [fp, #-16]
   13880:	ldr	ip, [r1, #28]
   13884:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   13888:	subs	r4, r0, r2
   1388c:	sbc	r5, r1, r3
   13890:	strd	r4, [ip, #16]
   13894:	ldr	r1, [fp, #-16]
   13898:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1389c:	strd	r2, [r1, #16]
   138a0:	nop	{0}
   138a4:	sub	sp, fp, #12
   138a8:	ldrd	r4, [sp]
   138ac:	ldr	fp, [sp, #8]
   138b0:	add	sp, sp, #12
   138b4:	pop	{pc}		; (ldr pc, [sp], #4)
   138b8:	str	fp, [sp, #-8]!
   138bc:	str	lr, [sp, #4]
   138c0:	add	fp, sp, #4
   138c4:	sub	sp, sp, #16
   138c8:	str	r0, [fp, #-16]
   138cc:	mov	r0, #24
   138d0:	bl	185b0 <__assert_fail@plt+0x769c>
   138d4:	mov	r3, r0
   138d8:	str	r3, [fp, #-8]
   138dc:	ldr	r3, [fp, #-16]
   138e0:	ldr	r2, [fp, #-8]
   138e4:	str	r2, [r3, #4]
   138e8:	ldr	r3, [fp, #-16]
   138ec:	ldr	r2, [r3, #4]
   138f0:	ldr	r3, [fp, #-16]
   138f4:	str	r2, [r3]
   138f8:	ldr	r3, [fp, #-16]
   138fc:	ldr	r3, [r3]
   13900:	mov	r2, #0
   13904:	str	r2, [r3, #4]
   13908:	nop	{0}
   1390c:	sub	sp, fp, #4
   13910:	ldr	fp, [sp]
   13914:	add	sp, sp, #4
   13918:	pop	{pc}		; (ldr pc, [sp], #4)
   1391c:	str	fp, [sp, #-8]!
   13920:	str	lr, [sp, #4]
   13924:	add	fp, sp, #4
   13928:	sub	sp, sp, #24
   1392c:	str	r0, [fp, #-24]	; 0xffffffe8
   13930:	str	r1, [fp, #-28]	; 0xffffffe4
   13934:	sub	r3, fp, #20
   13938:	mov	r1, r3
   1393c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13940:	bl	11728 <__assert_fail@plt+0x814>
   13944:	mov	r3, r0
   13948:	cmp	r3, #0
   1394c:	beq	13974 <__assert_fail@plt+0x2a60>
   13950:	sub	r3, fp, #20
   13954:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13958:	mov	r0, r3
   1395c:	bl	12740 <__assert_fail@plt+0x182c>
   13960:	mov	r3, r0
   13964:	cmp	r3, #0
   13968:	beq	13974 <__assert_fail@plt+0x2a60>
   1396c:	mov	r3, #1
   13970:	b	13978 <__assert_fail@plt+0x2a64>
   13974:	mov	r3, #0
   13978:	strb	r3, [fp, #-5]
   1397c:	ldrb	r3, [fp, #-5]
   13980:	and	r3, r3, #1
   13984:	strb	r3, [fp, #-5]
   13988:	sub	r3, fp, #20
   1398c:	mov	r0, r3
   13990:	bl	116e0 <__assert_fail@plt+0x7cc>
   13994:	ldrb	r3, [fp, #-5]
   13998:	mov	r0, r3
   1399c:	sub	sp, fp, #4
   139a0:	ldr	fp, [sp]
   139a4:	add	sp, sp, #4
   139a8:	pop	{pc}		; (ldr pc, [sp], #4)
   139ac:	strd	r4, [sp, #-16]!
   139b0:	str	fp, [sp, #8]
   139b4:	str	lr, [sp, #12]
   139b8:	add	fp, sp, #12
   139bc:	sub	sp, sp, #16
   139c0:	str	r0, [fp, #-24]	; 0xffffffe8
   139c4:	str	r1, [fp, #-28]	; 0xffffffe4
   139c8:	movw	r3, #53600	; 0xd160
   139cc:	movt	r3, #2
   139d0:	ldrb	r3, [r3]
   139d4:	cmp	r3, #0
   139d8:	bne	139fc <__assert_fail@plt+0x2ae8>
   139dc:	movw	r3, #48476	; 0xbd5c
   139e0:	movt	r3, #1
   139e4:	movw	r2, #1377	; 0x561
   139e8:	movw	r1, #46676	; 0xb654
   139ec:	movt	r1, #1
   139f0:	movw	r0, #47248	; 0xb890
   139f4:	movt	r0, #1
   139f8:	bl	10f14 <__assert_fail@plt>
   139fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a00:	ldrd	r0, [r3, #16]
   13a04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13a08:	ldrd	r2, [r3, #16]
   13a0c:	cmp	r1, r3
   13a10:	cmpeq	r0, r2
   13a14:	bhi	13a38 <__assert_fail@plt+0x2b24>
   13a18:	movw	r3, #48476	; 0xbd5c
   13a1c:	movt	r3, #1
   13a20:	movw	r2, #1378	; 0x562
   13a24:	movw	r1, #46676	; 0xb654
   13a28:	movt	r1, #1
   13a2c:	movw	r0, #47260	; 0xb89c
   13a30:	movt	r0, #1
   13a34:	bl	10f14 <__assert_fail@plt>
   13a38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13a3c:	ldrd	r2, [r3, #16]
   13a40:	orrs	r3, r2, r3
   13a44:	bne	13a68 <__assert_fail@plt+0x2b54>
   13a48:	movw	r3, #48476	; 0xbd5c
   13a4c:	movt	r3, #1
   13a50:	movw	r2, #1379	; 0x563
   13a54:	movw	r1, #46676	; 0xb654
   13a58:	movt	r1, #1
   13a5c:	movw	r0, #47284	; 0xb8b4
   13a60:	movt	r0, #1
   13a64:	bl	10f14 <__assert_fail@plt>
   13a68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13a6c:	ldr	r3, [r3, #4]
   13a70:	str	r3, [fp, #-20]	; 0xffffffec
   13a74:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a78:	ldr	r3, [r3]
   13a7c:	cmp	r3, #4
   13a80:	ldrls	pc, [pc, r3, lsl #2]
   13a84:	b	13af0 <__assert_fail@plt+0x2bdc>
   13a88:	muleq	r1, ip, sl
   13a8c:	andeq	r3, r1, ip, lsr #21
   13a90:			; <UNDEFINED> instruction: 0x00013abc
   13a94:	andeq	r3, r1, ip, ror #21
   13a98:	ldrdeq	r3, [r1], -ip
   13a9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13aa0:	ldrb	r3, [r3, #8]
   13aa4:	strb	r3, [fp, #-13]
   13aa8:	b	13af4 <__assert_fail@plt+0x2be0>
   13aac:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ab0:	ldrb	r3, [r3, #9]
   13ab4:	strb	r3, [fp, #-13]
   13ab8:	b	13af4 <__assert_fail@plt+0x2be0>
   13abc:	movw	r0, #47300	; 0xb8c4
   13ac0:	movt	r0, #1
   13ac4:	bl	10e24 <gettext@plt>
   13ac8:	mov	r3, r0
   13acc:	mov	r2, r3
   13ad0:	mov	r1, #0
   13ad4:	mov	r0, #1
   13ad8:	bl	10dc4 <error@plt>
   13adc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ae0:	ldrb	r3, [r3, #8]
   13ae4:	strb	r3, [fp, #-13]
   13ae8:	b	13af4 <__assert_fail@plt+0x2be0>
   13aec:	bl	10efc <abort@plt>
   13af0:	bl	10efc <abort@plt>
   13af4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13af8:	ldrd	r0, [r3, #16]
   13afc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13b00:	ldrd	r2, [r3, #16]
   13b04:	subs	r4, r0, r2
   13b08:	sbc	r5, r1, r3
   13b0c:	ldrb	r1, [fp, #-13]
   13b10:	mov	r2, r4
   13b14:	mov	r3, r5
   13b18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13b1c:	bl	1216c <__assert_fail@plt+0x1258>
   13b20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13b24:	ldrd	r2, [r3, #16]
   13b28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b2c:	strd	r2, [r1, #16]
   13b30:	nop	{0}
   13b34:	sub	sp, fp, #12
   13b38:	ldrd	r4, [sp]
   13b3c:	ldr	fp, [sp, #8]
   13b40:	add	sp, sp, #12
   13b44:	pop	{pc}		; (ldr pc, [sp], #4)
   13b48:	str	fp, [sp, #-8]!
   13b4c:	str	lr, [sp, #4]
   13b50:	add	fp, sp, #4
   13b54:	sub	sp, sp, #16
   13b58:	str	r0, [fp, #-16]
   13b5c:	ldr	r1, [fp, #-16]
   13b60:	mvn	r2, #1
   13b64:	mvn	r3, #0
   13b68:	strd	r2, [r1, #8]
   13b6c:	mov	r1, #0
   13b70:	ldr	r0, [fp, #-16]
   13b74:	bl	12bec <__assert_fail@plt+0x1cd8>
   13b78:	str	r0, [fp, #-8]
   13b7c:	ldr	r3, [fp, #-8]
   13b80:	cmn	r3, #1
   13b84:	bne	13ba8 <__assert_fail@plt+0x2c94>
   13b88:	mov	r3, #0
   13b8c:	b	13bc8 <__assert_fail@plt+0x2cb4>
   13b90:	ldr	r2, [fp, #-12]
   13b94:	ldr	r3, [fp, #-8]
   13b98:	cmp	r2, r3
   13b9c:	beq	13ba8 <__assert_fail@plt+0x2c94>
   13ba0:	mov	r3, #0
   13ba4:	b	13bc8 <__assert_fail@plt+0x2cb4>
   13ba8:	mov	r1, #0
   13bac:	ldr	r0, [fp, #-16]
   13bb0:	bl	12bec <__assert_fail@plt+0x1cd8>
   13bb4:	str	r0, [fp, #-12]
   13bb8:	ldr	r3, [fp, #-12]
   13bbc:	cmn	r3, #1
   13bc0:	bne	13b90 <__assert_fail@plt+0x2c7c>
   13bc4:	mov	r3, #1
   13bc8:	mov	r0, r3
   13bcc:	sub	sp, fp, #4
   13bd0:	ldr	fp, [sp]
   13bd4:	add	sp, sp, #4
   13bd8:	pop	{pc}		; (ldr pc, [sp], #4)
   13bdc:	str	fp, [sp, #-8]!
   13be0:	str	lr, [sp, #4]
   13be4:	add	fp, sp, #4
   13be8:	sub	sp, sp, #8
   13bec:	str	r0, [fp, #-8]
   13bf0:	str	r1, [fp, #-12]
   13bf4:	ldr	r0, [fp, #-8]
   13bf8:	bl	137c8 <__assert_fail@plt+0x28b4>
   13bfc:	ldr	r3, [fp, #-8]
   13c00:	ldr	r3, [r3, #24]
   13c04:	cmp	r3, #0
   13c08:	beq	13c2c <__assert_fail@plt+0x2d18>
   13c0c:	movw	r0, #47408	; 0xb930
   13c10:	movt	r0, #1
   13c14:	bl	10e24 <gettext@plt>
   13c18:	mov	r3, r0
   13c1c:	mov	r2, r3
   13c20:	mov	r1, #0
   13c24:	mov	r0, #1
   13c28:	bl	10dc4 <error@plt>
   13c2c:	ldr	r3, [fp, #-12]
   13c30:	cmp	r3, #0
   13c34:	beq	13e18 <__assert_fail@plt+0x2f04>
   13c38:	ldr	r3, [fp, #-8]
   13c3c:	ldrd	r2, [r3, #16]
   13c40:	ldr	r0, [fp, #-12]
   13c44:	bl	13828 <__assert_fail@plt+0x2914>
   13c48:	ldr	r3, [fp, #-12]
   13c4c:	ldr	r3, [r3, #24]
   13c50:	cmp	r3, #1
   13c54:	bls	13c78 <__assert_fail@plt+0x2d64>
   13c58:	movw	r0, #47460	; 0xb964
   13c5c:	movt	r0, #1
   13c60:	bl	10e24 <gettext@plt>
   13c64:	mov	r3, r0
   13c68:	mov	r2, r3
   13c6c:	mov	r1, #0
   13c70:	mov	r0, #1
   13c74:	bl	10dc4 <error@plt>
   13c78:	movw	r3, #53600	; 0xd160
   13c7c:	movt	r3, #2
   13c80:	ldrb	r3, [r3]
   13c84:	cmp	r3, #0
   13c88:	beq	13de8 <__assert_fail@plt+0x2ed4>
   13c8c:	ldr	r3, [fp, #-12]
   13c90:	ldrb	r3, [r3, #32]
   13c94:	cmp	r3, #0
   13c98:	beq	13cbc <__assert_fail@plt+0x2da8>
   13c9c:	movw	r0, #47516	; 0xb99c
   13ca0:	movt	r0, #1
   13ca4:	bl	10e24 <gettext@plt>
   13ca8:	mov	r3, r0
   13cac:	mov	r2, r3
   13cb0:	mov	r1, #0
   13cb4:	mov	r0, #1
   13cb8:	bl	10dc4 <error@plt>
   13cbc:	ldr	r3, [fp, #-12]
   13cc0:	ldrb	r3, [r3, #34]	; 0x22
   13cc4:	cmp	r3, #0
   13cc8:	beq	13cec <__assert_fail@plt+0x2dd8>
   13ccc:	movw	r0, #47580	; 0xb9dc
   13cd0:	movt	r0, #1
   13cd4:	bl	10e24 <gettext@plt>
   13cd8:	mov	r3, r0
   13cdc:	mov	r2, r3
   13ce0:	mov	r1, #0
   13ce4:	mov	r0, #1
   13ce8:	bl	10dc4 <error@plt>
   13cec:	ldr	r1, [fp, #-12]
   13cf0:	ldr	r0, [fp, #-8]
   13cf4:	bl	13168 <__assert_fail@plt+0x2254>
   13cf8:	ldr	r3, [fp, #-8]
   13cfc:	ldrd	r0, [r3, #16]
   13d00:	ldr	r3, [fp, #-12]
   13d04:	ldrd	r2, [r3, #16]
   13d08:	cmp	r1, r3
   13d0c:	cmpeq	r0, r2
   13d10:	bls	13d6c <__assert_fail@plt+0x2e58>
   13d14:	movw	r3, #53599	; 0xd15f
   13d18:	movt	r3, #2
   13d1c:	ldrb	r3, [r3]
   13d20:	eor	r3, r3, #1
   13d24:	uxtb	r3, r3
   13d28:	cmp	r3, #0
   13d2c:	beq	13d6c <__assert_fail@plt+0x2e58>
   13d30:	ldr	r3, [fp, #-12]
   13d34:	ldrd	r2, [r3, #16]
   13d38:	orrs	r3, r2, r3
   13d3c:	bne	13d60 <__assert_fail@plt+0x2e4c>
   13d40:	movw	r0, #47676	; 0xba3c
   13d44:	movt	r0, #1
   13d48:	bl	10e24 <gettext@plt>
   13d4c:	mov	r3, r0
   13d50:	mov	r2, r3
   13d54:	mov	r1, #0
   13d58:	mov	r0, #1
   13d5c:	bl	10dc4 <error@plt>
   13d60:	ldr	r1, [fp, #-12]
   13d64:	ldr	r0, [fp, #-8]
   13d68:	bl	139ac <__assert_fail@plt+0x2a98>
   13d6c:	movw	r3, #53598	; 0xd15e
   13d70:	movt	r3, #2
   13d74:	ldrb	r3, [r3]
   13d78:	cmp	r3, #0
   13d7c:	beq	13e18 <__assert_fail@plt+0x2f04>
   13d80:	ldr	r3, [fp, #-8]
   13d84:	ldrb	r3, [r3, #33]	; 0x21
   13d88:	cmp	r3, #0
   13d8c:	beq	13e18 <__assert_fail@plt+0x2f04>
   13d90:	ldr	r3, [fp, #-12]
   13d94:	ldrd	r0, [r3, #16]
   13d98:	ldr	r3, [fp, #-8]
   13d9c:	ldrd	r2, [r3, #16]
   13da0:	cmp	r1, r3
   13da4:	cmpeq	r0, r2
   13da8:	bne	13dc8 <__assert_fail@plt+0x2eb4>
   13dac:	ldr	r0, [fp, #-12]
   13db0:	bl	13b48 <__assert_fail@plt+0x2c34>
   13db4:	mov	r3, r0
   13db8:	eor	r3, r3, #1
   13dbc:	uxtb	r3, r3
   13dc0:	cmp	r3, #0
   13dc4:	beq	13e18 <__assert_fail@plt+0x2f04>
   13dc8:	movw	r0, #47728	; 0xba70
   13dcc:	movt	r0, #1
   13dd0:	bl	10e24 <gettext@plt>
   13dd4:	mov	r3, r0
   13dd8:	mov	r2, r3
   13ddc:	mov	r1, #0
   13de0:	mov	r0, #1
   13de4:	bl	10dc4 <error@plt>
   13de8:	ldr	r3, [fp, #-12]
   13dec:	ldr	r3, [r3, #24]
   13df0:	cmp	r3, #0
   13df4:	beq	13e18 <__assert_fail@plt+0x2f04>
   13df8:	movw	r0, #47836	; 0xbadc
   13dfc:	movt	r0, #1
   13e00:	bl	10e24 <gettext@plt>
   13e04:	mov	r3, r0
   13e08:	mov	r2, r3
   13e0c:	mov	r1, #0
   13e10:	mov	r0, #1
   13e14:	bl	10dc4 <error@plt>
   13e18:	nop	{0}
   13e1c:	sub	sp, fp, #4
   13e20:	ldr	fp, [sp]
   13e24:	add	sp, sp, #4
   13e28:	pop	{pc}		; (ldr pc, [sp], #4)
   13e2c:	str	r4, [sp, #-12]!
   13e30:	str	fp, [sp, #4]
   13e34:	str	lr, [sp, #8]
   13e38:	add	fp, sp, #8
   13e3c:	sub	sp, sp, #44	; 0x2c
   13e40:	str	r0, [fp, #-40]	; 0xffffffd8
   13e44:	str	r1, [fp, #-44]	; 0xffffffd4
   13e48:	str	r2, [fp, #-48]	; 0xffffffd0
   13e4c:	mvn	r3, #-2147483648	; 0x80000000
   13e50:	str	r3, [fp, #-32]	; 0xffffffe0
   13e54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e58:	str	r3, [fp, #-16]
   13e5c:	mov	r3, #0
   13e60:	str	r3, [fp, #-20]	; 0xffffffec
   13e64:	mov	r3, #0
   13e68:	str	r3, [fp, #-24]	; 0xffffffe8
   13e6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13e74:	cmp	r2, r3
   13e78:	bcc	13ea4 <__assert_fail@plt+0x2f90>
   13e7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13e80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13e88:	blx	r3
   13e8c:	str	r0, [fp, #-24]	; 0xffffffe8
   13e90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13e94:	cmp	r3, #0
   13e98:	beq	140d8 <__assert_fail@plt+0x31c4>
   13e9c:	mov	r3, #0
   13ea0:	str	r3, [fp, #-20]	; 0xffffffec
   13ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ea8:	str	r3, [fp, #-36]	; 0xffffffdc
   13eac:	ldr	r2, [fp, #-16]
   13eb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13eb4:	cmp	r2, r3
   13eb8:	bne	1406c <__assert_fail@plt+0x3158>
   13ebc:	b	13ecc <__assert_fail@plt+0x2fb8>
   13ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ec4:	add	r3, r3, #2
   13ec8:	str	r3, [fp, #-20]	; 0xffffffec
   13ecc:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13ed4:	cmp	r2, r3
   13ed8:	bcs	13f18 <__assert_fail@plt+0x3004>
   13edc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13ee0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ee4:	add	r3, r2, r3
   13ee8:	ldrb	r3, [r3]
   13eec:	mov	r0, r3
   13ef0:	bl	11010 <__assert_fail@plt+0xfc>
   13ef4:	mov	r3, r0
   13ef8:	mov	r2, r3
   13efc:	movw	r3, #61796	; 0xf164
   13f00:	movt	r3, #2
   13f04:	ldrb	r3, [r3, r2]
   13f08:	eor	r3, r3, #1
   13f0c:	uxtb	r3, r3
   13f10:	cmp	r3, #0
   13f14:	bne	13ec0 <__assert_fail@plt+0x2fac>
   13f18:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f20:	cmp	r2, r3
   13f24:	bne	13f6c <__assert_fail@plt+0x3058>
   13f28:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f2c:	sub	r3, r3, #1
   13f30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13f34:	add	r3, r2, r3
   13f38:	ldrb	r3, [r3]
   13f3c:	mov	r0, r3
   13f40:	bl	11010 <__assert_fail@plt+0xfc>
   13f44:	mov	r3, r0
   13f48:	mov	r2, r3
   13f4c:	movw	r3, #61796	; 0xf164
   13f50:	movt	r3, #2
   13f54:	ldrb	r3, [r3, r2]
   13f58:	cmp	r3, #0
   13f5c:	beq	13f6c <__assert_fail@plt+0x3058>
   13f60:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f64:	sub	r3, r3, #1
   13f68:	str	r3, [fp, #-20]	; 0xffffffec
   13f6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f74:	cmp	r2, r3
   13f78:	bcc	13f90 <__assert_fail@plt+0x307c>
   13f7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13f80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13f84:	sub	r3, r2, r3
   13f88:	str	r3, [fp, #-28]	; 0xffffffe4
   13f8c:	b	14000 <__assert_fail@plt+0x30ec>
   13f90:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13f94:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f98:	add	r3, r2, r3
   13f9c:	ldrb	r3, [r3]
   13fa0:	str	r3, [fp, #-16]
   13fa4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13fa8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13fac:	sub	r3, r2, r3
   13fb0:	add	r3, r3, #1
   13fb4:	str	r3, [fp, #-28]	; 0xffffffe4
   13fb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fbc:	cmp	r3, #0
   13fc0:	beq	13ff4 <__assert_fail@plt+0x30e0>
   13fc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fc8:	sub	r3, r3, #1
   13fcc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13fd0:	add	r3, r2, r3
   13fd4:	ldrb	r3, [r3]
   13fd8:	mov	r2, r3
   13fdc:	ldr	r3, [fp, #-16]
   13fe0:	cmp	r3, r2
   13fe4:	bne	13ff4 <__assert_fail@plt+0x30e0>
   13fe8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13fec:	sub	r3, r3, #1
   13ff0:	str	r3, [fp, #-28]	; 0xffffffe4
   13ff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ff8:	add	r3, r3, #1
   13ffc:	str	r3, [fp, #-20]	; 0xffffffec
   14000:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14004:	cmp	r3, #0
   14008:	beq	1406c <__assert_fail@plt+0x3158>
   1400c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14010:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14014:	add	r0, r2, r3
   14018:	movw	r3, #53588	; 0xd154
   1401c:	movt	r3, #2
   14020:	ldr	r3, [r3]
   14024:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14028:	mov	r1, #1
   1402c:	bl	10d28 <fwrite_unlocked@plt>
   14030:	mov	r2, r0
   14034:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14038:	cmp	r3, r2
   1403c:	beq	1406c <__assert_fail@plt+0x3158>
   14040:	bl	10e54 <__errno_location@plt>
   14044:	mov	r3, r0
   14048:	ldr	r4, [r3]
   1404c:	movw	r0, #47900	; 0xbb1c
   14050:	movt	r0, #1
   14054:	bl	10e24 <gettext@plt>
   14058:	mov	r3, r0
   1405c:	mov	r2, r3
   14060:	mov	r1, r4
   14064:	mov	r0, #1
   14068:	bl	10dc4 <error@plt>
   1406c:	ldr	r2, [fp, #-16]
   14070:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14074:	cmp	r2, r3
   14078:	beq	13e6c <__assert_fail@plt+0x2f58>
   1407c:	b	1408c <__assert_fail@plt+0x3178>
   14080:	ldr	r3, [fp, #-20]	; 0xffffffec
   14084:	add	r3, r3, #1
   14088:	str	r3, [fp, #-20]	; 0xffffffec
   1408c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14090:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14094:	cmp	r2, r3
   14098:	bcs	140bc <__assert_fail@plt+0x31a8>
   1409c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   140a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   140a4:	add	r3, r2, r3
   140a8:	ldrb	r3, [r3]
   140ac:	mov	r2, r3
   140b0:	ldr	r3, [fp, #-16]
   140b4:	cmp	r3, r2
   140b8:	beq	14080 <__assert_fail@plt+0x316c>
   140bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   140c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   140c4:	cmp	r2, r3
   140c8:	bcs	13e6c <__assert_fail@plt+0x2f58>
   140cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   140d0:	str	r3, [fp, #-16]
   140d4:	b	13e6c <__assert_fail@plt+0x2f58>
   140d8:	nop	{0}
   140dc:	nop	{0}
   140e0:	sub	sp, fp, #8
   140e4:	ldr	r4, [sp]
   140e8:	ldr	fp, [sp, #4]
   140ec:	add	sp, sp, #8
   140f0:	pop	{pc}		; (ldr pc, [sp], #4)
   140f4:	str	r4, [sp, #-12]!
   140f8:	str	fp, [sp, #4]
   140fc:	str	lr, [sp, #8]
   14100:	add	fp, sp, #8
   14104:	sub	sp, sp, #20
   14108:	str	r0, [fp, #-24]	; 0xffffffe8
   1410c:	str	r1, [fp, #-28]	; 0xffffffe4
   14110:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14114:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14118:	mov	r0, #0
   1411c:	bl	17cac <__assert_fail@plt+0x6d98>
   14120:	str	r0, [fp, #-16]
   14124:	ldr	r3, [fp, #-16]
   14128:	cmn	r3, #1
   1412c:	bne	1415c <__assert_fail@plt+0x3248>
   14130:	bl	10e54 <__errno_location@plt>
   14134:	mov	r3, r0
   14138:	ldr	r4, [r3]
   1413c:	movw	r0, #47912	; 0xbb28
   14140:	movt	r0, #1
   14144:	bl	10e24 <gettext@plt>
   14148:	mov	r3, r0
   1414c:	mov	r2, r3
   14150:	mov	r1, r4
   14154:	mov	r0, #1
   14158:	bl	10dc4 <error@plt>
   1415c:	ldr	r3, [fp, #-16]
   14160:	mov	r0, r3
   14164:	sub	sp, fp, #8
   14168:	ldr	r4, [sp]
   1416c:	ldr	fp, [sp, #4]
   14170:	add	sp, sp, #8
   14174:	pop	{pc}		; (ldr pc, [sp], #4)
   14178:	str	fp, [sp, #-8]!
   1417c:	str	lr, [sp, #4]
   14180:	add	fp, sp, #4
   14184:	sub	sp, sp, #24
   14188:	str	r0, [fp, #-24]	; 0xffffffe8
   1418c:	str	r1, [fp, #-28]	; 0xffffffe4
   14190:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14198:	bl	140f4 <__assert_fail@plt+0x31e0>
   1419c:	str	r0, [fp, #-16]
   141a0:	ldr	r3, [fp, #-16]
   141a4:	cmp	r3, #0
   141a8:	bne	141b4 <__assert_fail@plt+0x32a0>
   141ac:	mov	r3, #0
   141b0:	b	142c0 <__assert_fail@plt+0x33ac>
   141b4:	mov	r3, #0
   141b8:	str	r3, [fp, #-12]
   141bc:	b	141cc <__assert_fail@plt+0x32b8>
   141c0:	ldr	r3, [fp, #-12]
   141c4:	add	r3, r3, #1
   141c8:	str	r3, [fp, #-12]
   141cc:	ldr	r2, [fp, #-12]
   141d0:	ldr	r3, [fp, #-16]
   141d4:	cmp	r2, r3
   141d8:	bcs	14218 <__assert_fail@plt+0x3304>
   141dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   141e0:	ldr	r3, [fp, #-12]
   141e4:	add	r3, r2, r3
   141e8:	ldrb	r3, [r3]
   141ec:	mov	r0, r3
   141f0:	bl	11010 <__assert_fail@plt+0xfc>
   141f4:	mov	r3, r0
   141f8:	mov	r2, r3
   141fc:	movw	r3, #62052	; 0xf264
   14200:	movt	r3, #2
   14204:	ldrb	r3, [r3, r2]
   14208:	eor	r3, r3, #1
   1420c:	uxtb	r3, r3
   14210:	cmp	r3, #0
   14214:	bne	141c0 <__assert_fail@plt+0x32ac>
   14218:	ldr	r3, [fp, #-12]
   1421c:	str	r3, [fp, #-8]
   14220:	ldr	r3, [fp, #-12]
   14224:	add	r3, r3, #1
   14228:	str	r3, [fp, #-12]
   1422c:	b	142a0 <__assert_fail@plt+0x338c>
   14230:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14234:	ldr	r3, [fp, #-12]
   14238:	add	r3, r2, r3
   1423c:	ldrb	r3, [r3]
   14240:	mov	r0, r3
   14244:	bl	11010 <__assert_fail@plt+0xfc>
   14248:	mov	r3, r0
   1424c:	mov	r2, r3
   14250:	movw	r3, #62052	; 0xf264
   14254:	movt	r3, #2
   14258:	ldrb	r3, [r3, r2]
   1425c:	eor	r3, r3, #1
   14260:	uxtb	r3, r3
   14264:	cmp	r3, #0
   14268:	beq	14294 <__assert_fail@plt+0x3380>
   1426c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14270:	ldr	r3, [fp, #-12]
   14274:	add	r2, r2, r3
   14278:	ldr	r3, [fp, #-8]
   1427c:	add	r1, r3, #1
   14280:	str	r1, [fp, #-8]
   14284:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14288:	add	r3, r1, r3
   1428c:	ldrb	r2, [r2]
   14290:	strb	r2, [r3]
   14294:	ldr	r3, [fp, #-12]
   14298:	add	r3, r3, #1
   1429c:	str	r3, [fp, #-12]
   142a0:	ldr	r2, [fp, #-12]
   142a4:	ldr	r3, [fp, #-16]
   142a8:	cmp	r2, r3
   142ac:	bcc	14230 <__assert_fail@plt+0x331c>
   142b0:	ldr	r3, [fp, #-8]
   142b4:	cmp	r3, #0
   142b8:	beq	14190 <__assert_fail@plt+0x327c>
   142bc:	ldr	r3, [fp, #-8]
   142c0:	mov	r0, r3
   142c4:	sub	sp, fp, #4
   142c8:	ldr	fp, [sp]
   142cc:	add	sp, sp, #4
   142d0:	pop	{pc}		; (ldr pc, [sp], #4)
   142d4:	str	fp, [sp, #-8]!
   142d8:	str	lr, [sp, #4]
   142dc:	add	fp, sp, #4
   142e0:	sub	sp, sp, #16
   142e4:	str	r0, [fp, #-16]
   142e8:	str	r1, [fp, #-20]	; 0xffffffec
   142ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   142f0:	ldr	r0, [fp, #-16]
   142f4:	bl	140f4 <__assert_fail@plt+0x31e0>
   142f8:	str	r0, [fp, #-12]
   142fc:	mov	r3, #0
   14300:	str	r3, [fp, #-8]
   14304:	b	14350 <__assert_fail@plt+0x343c>
   14308:	ldr	r2, [fp, #-16]
   1430c:	ldr	r3, [fp, #-8]
   14310:	add	r3, r2, r3
   14314:	ldrb	r3, [r3]
   14318:	mov	r0, r3
   1431c:	bl	11010 <__assert_fail@plt+0xfc>
   14320:	mov	r3, r0
   14324:	mov	r1, r3
   14328:	ldr	r2, [fp, #-16]
   1432c:	ldr	r3, [fp, #-8]
   14330:	add	r2, r2, r3
   14334:	movw	r3, #62308	; 0xf364
   14338:	movt	r3, #2
   1433c:	ldrb	r3, [r3, r1]
   14340:	strb	r3, [r2]
   14344:	ldr	r3, [fp, #-8]
   14348:	add	r3, r3, #1
   1434c:	str	r3, [fp, #-8]
   14350:	ldr	r2, [fp, #-8]
   14354:	ldr	r3, [fp, #-12]
   14358:	cmp	r2, r3
   1435c:	bcc	14308 <__assert_fail@plt+0x33f4>
   14360:	ldr	r3, [fp, #-12]
   14364:	mov	r0, r3
   14368:	sub	sp, fp, #4
   1436c:	ldr	fp, [sp]
   14370:	add	sp, sp, #4
   14374:	pop	{pc}		; (ldr pc, [sp], #4)
   14378:	str	fp, [sp, #-8]!
   1437c:	str	lr, [sp, #4]
   14380:	add	fp, sp, #4
   14384:	sub	sp, sp, #24
   14388:	str	r0, [fp, #-16]
   1438c:	mov	r3, r1
   14390:	str	r2, [fp, #-24]	; 0xffffffe8
   14394:	strb	r3, [fp, #-17]	; 0xffffffef
   14398:	ldr	r1, [fp, #-16]
   1439c:	mvn	r2, #1
   143a0:	mvn	r3, #0
   143a4:	strd	r2, [r1, #8]
   143a8:	b	143c0 <__assert_fail@plt+0x34ac>
   143ac:	ldr	r3, [fp, #-12]
   143b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   143b4:	add	r3, r2, r3
   143b8:	mov	r2, #1
   143bc:	strb	r2, [r3]
   143c0:	mov	r1, #0
   143c4:	ldr	r0, [fp, #-16]
   143c8:	bl	12bec <__assert_fail@plt+0x1cd8>
   143cc:	str	r0, [fp, #-12]
   143d0:	ldr	r3, [fp, #-12]
   143d4:	cmn	r3, #1
   143d8:	bne	143ac <__assert_fail@plt+0x3498>
   143dc:	ldrb	r3, [fp, #-17]	; 0xffffffef
   143e0:	cmp	r3, #0
   143e4:	beq	14454 <__assert_fail@plt+0x3540>
   143e8:	mov	r3, #0
   143ec:	str	r3, [fp, #-8]
   143f0:	b	14448 <__assert_fail@plt+0x3534>
   143f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   143f8:	ldr	r3, [fp, #-8]
   143fc:	add	r3, r2, r3
   14400:	ldrb	r3, [r3]
   14404:	cmp	r3, #0
   14408:	movne	r3, #1
   1440c:	moveq	r3, #0
   14410:	uxtb	r3, r3
   14414:	eor	r3, r3, #1
   14418:	uxtb	r3, r3
   1441c:	mov	r1, r3
   14420:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14424:	ldr	r3, [fp, #-8]
   14428:	add	r3, r2, r3
   1442c:	mov	r2, r1
   14430:	and	r2, r2, #1
   14434:	uxtb	r2, r2
   14438:	strb	r2, [r3]
   1443c:	ldr	r3, [fp, #-8]
   14440:	add	r3, r3, #1
   14444:	str	r3, [fp, #-8]
   14448:	ldr	r3, [fp, #-8]
   1444c:	cmp	r3, #255	; 0xff
   14450:	bls	143f4 <__assert_fail@plt+0x34e0>
   14454:	nop	{0}
   14458:	sub	sp, fp, #4
   1445c:	ldr	fp, [sp]
   14460:	add	sp, sp, #4
   14464:	pop	{pc}		; (ldr pc, [sp], #4)
   14468:	str	r4, [sp, #-12]!
   1446c:	str	fp, [sp, #4]
   14470:	str	lr, [sp, #8]
   14474:	add	fp, sp, #8
   14478:	sub	sp, sp, #180	; 0xb4
   1447c:	str	r0, [fp, #-176]	; 0xffffff50
   14480:	str	r1, [fp, #-180]	; 0xffffff4c
   14484:	sub	r3, fp, #124	; 0x7c
   14488:	str	r3, [fp, #-40]	; 0xffffffd8
   1448c:	sub	r3, fp, #164	; 0xa4
   14490:	str	r3, [fp, #-16]
   14494:	ldr	r3, [fp, #-180]	; 0xffffff4c
   14498:	ldr	r3, [r3]
   1449c:	mov	r0, r3
   144a0:	bl	15314 <__assert_fail@plt+0x4400>
   144a4:	movw	r1, #43596	; 0xaa4c
   144a8:	movt	r1, #1
   144ac:	mov	r0, #6
   144b0:	bl	10ea8 <setlocale@plt>
   144b4:	movw	r1, #47924	; 0xbb34
   144b8:	movt	r1, #1
   144bc:	movw	r0, #43620	; 0xaa64
   144c0:	movt	r0, #1
   144c4:	bl	10ee4 <bindtextdomain@plt>
   144c8:	movw	r0, #43620	; 0xaa64
   144cc:	movt	r0, #1
   144d0:	bl	10d64 <textdomain@plt>
   144d4:	movw	r0, #20588	; 0x506c
   144d8:	movt	r0, #1
   144dc:	bl	1a930 <__assert_fail@plt+0x9a1c>
   144e0:	b	14638 <__assert_fail@plt+0x3724>
   144e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   144e8:	cmp	r3, #67	; 0x43
   144ec:	beq	1458c <__assert_fail@plt+0x3678>
   144f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   144f4:	cmp	r3, #67	; 0x43
   144f8:	bgt	14524 <__assert_fail@plt+0x3610>
   144fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14500:	cmn	r3, #2
   14504:	beq	145dc <__assert_fail@plt+0x36c8>
   14508:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1450c:	cmp	r3, #65	; 0x41
   14510:	beq	14568 <__assert_fail@plt+0x3654>
   14514:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14518:	cmn	r3, #3
   1451c:	beq	145e4 <__assert_fail@plt+0x36d0>
   14520:	b	14630 <__assert_fail@plt+0x371c>
   14524:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14528:	cmp	r3, #100	; 0x64
   1452c:	beq	145a0 <__assert_fail@plt+0x368c>
   14530:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14534:	cmp	r3, #100	; 0x64
   14538:	bgt	1454c <__assert_fail@plt+0x3638>
   1453c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14540:	cmp	r3, #99	; 0x63
   14544:	beq	1458c <__assert_fail@plt+0x3678>
   14548:	b	14630 <__assert_fail@plt+0x371c>
   1454c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14550:	cmp	r3, #115	; 0x73
   14554:	beq	145b4 <__assert_fail@plt+0x36a0>
   14558:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1455c:	cmp	r3, #116	; 0x74
   14560:	beq	145c8 <__assert_fail@plt+0x36b4>
   14564:	b	14630 <__assert_fail@plt+0x371c>
   14568:	movw	r1, #47948	; 0xbb4c
   1456c:	movt	r1, #1
   14570:	mov	r0, #3
   14574:	bl	10ea8 <setlocale@plt>
   14578:	movw	r1, #47948	; 0xbb4c
   1457c:	movt	r1, #1
   14580:	mov	r0, #0
   14584:	bl	10ea8 <setlocale@plt>
   14588:	b	14638 <__assert_fail@plt+0x3724>
   1458c:	movw	r3, #53598	; 0xd15e
   14590:	movt	r3, #2
   14594:	mov	r2, #1
   14598:	strb	r2, [r3]
   1459c:	b	14638 <__assert_fail@plt+0x3724>
   145a0:	movw	r3, #53597	; 0xd15d
   145a4:	movt	r3, #2
   145a8:	mov	r2, #1
   145ac:	strb	r2, [r3]
   145b0:	b	14638 <__assert_fail@plt+0x3724>
   145b4:	movw	r3, #53596	; 0xd15c
   145b8:	movt	r3, #2
   145bc:	mov	r2, #1
   145c0:	strb	r2, [r3]
   145c4:	b	14638 <__assert_fail@plt+0x3724>
   145c8:	movw	r3, #53599	; 0xd15f
   145cc:	movt	r3, #2
   145d0:	mov	r2, #1
   145d4:	strb	r2, [r3]
   145d8:	b	14638 <__assert_fail@plt+0x3724>
   145dc:	mov	r0, #0
   145e0:	bl	11280 <__assert_fail@plt+0x36c>
   145e4:	movw	r3, #53588	; 0xd154
   145e8:	movt	r3, #2
   145ec:	ldr	r0, [r3]
   145f0:	movw	r3, #53488	; 0xd0f0
   145f4:	movt	r3, #2
   145f8:	ldr	r2, [r3]
   145fc:	mov	r3, #0
   14600:	str	r3, [sp, #4]
   14604:	movw	r3, #47952	; 0xbb50
   14608:	movt	r3, #1
   1460c:	str	r3, [sp]
   14610:	mov	r3, r2
   14614:	movw	r2, #43412	; 0xa994
   14618:	movt	r2, #1
   1461c:	movw	r1, #46464	; 0xb580
   14620:	movt	r1, #1
   14624:	bl	18430 <__assert_fail@plt+0x751c>
   14628:	mov	r0, #0
   1462c:	bl	10e18 <exit@plt>
   14630:	mov	r0, #1
   14634:	bl	11280 <__assert_fail@plt+0x36c>
   14638:	mov	r3, #0
   1463c:	str	r3, [sp]
   14640:	movw	r3, #43988	; 0xabd4
   14644:	movt	r3, #1
   14648:	movw	r2, #47968	; 0xbb60
   1464c:	movt	r2, #1
   14650:	ldr	r1, [fp, #-180]	; 0xffffff4c
   14654:	ldr	r0, [fp, #-176]	; 0xffffff50
   14658:	bl	10e00 <getopt_long@plt>
   1465c:	str	r0, [fp, #-44]	; 0xffffffd4
   14660:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14664:	cmn	r3, #1
   14668:	bne	144e4 <__assert_fail@plt+0x35d0>
   1466c:	movw	r3, #53568	; 0xd140
   14670:	movt	r3, #2
   14674:	ldr	r3, [r3]
   14678:	ldr	r2, [fp, #-176]	; 0xffffff50
   1467c:	sub	r3, r2, r3
   14680:	str	r3, [fp, #-48]	; 0xffffffd0
   14684:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14688:	cmp	r3, #2
   1468c:	bne	146b4 <__assert_fail@plt+0x37a0>
   14690:	movw	r3, #53597	; 0xd15d
   14694:	movt	r3, #2
   14698:	ldrb	r3, [r3]
   1469c:	eor	r3, r3, #1
   146a0:	uxtb	r3, r3
   146a4:	cmp	r3, #0
   146a8:	beq	146b4 <__assert_fail@plt+0x37a0>
   146ac:	mov	r3, #1
   146b0:	b	146b8 <__assert_fail@plt+0x37a4>
   146b4:	mov	r3, #0
   146b8:	and	r3, r3, #1
   146bc:	uxtb	r2, r3
   146c0:	movw	r3, #53600	; 0xd160
   146c4:	movt	r3, #2
   146c8:	strb	r2, [r3]
   146cc:	movw	r3, #53597	; 0xd15d
   146d0:	movt	r3, #2
   146d4:	ldrb	r2, [r3]
   146d8:	movw	r3, #53596	; 0xd15c
   146dc:	movt	r3, #2
   146e0:	ldrb	r3, [r3]
   146e4:	cmp	r2, r3
   146e8:	bne	146f4 <__assert_fail@plt+0x37e0>
   146ec:	mov	r3, #2
   146f0:	b	146f8 <__assert_fail@plt+0x37e4>
   146f4:	mov	r3, #1
   146f8:	str	r3, [fp, #-52]	; 0xffffffcc
   146fc:	movw	r3, #53597	; 0xd15d
   14700:	movt	r3, #2
   14704:	ldrb	r2, [r3]
   14708:	movw	r3, #53596	; 0xd15c
   1470c:	movt	r3, #2
   14710:	ldrb	r3, [r3]
   14714:	cmp	r2, r3
   14718:	bhi	14724 <__assert_fail@plt+0x3810>
   1471c:	mov	r3, #2
   14720:	b	14728 <__assert_fail@plt+0x3814>
   14724:	mov	r3, #1
   14728:	str	r3, [fp, #-56]	; 0xffffffc8
   1472c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14730:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14734:	cmp	r2, r3
   14738:	bge	1480c <__assert_fail@plt+0x38f8>
   1473c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14740:	cmp	r3, #0
   14744:	bne	1476c <__assert_fail@plt+0x3858>
   14748:	movw	r0, #47976	; 0xbb68
   1474c:	movt	r0, #1
   14750:	bl	10e24 <gettext@plt>
   14754:	mov	r3, r0
   14758:	mov	r2, r3
   1475c:	mov	r1, #0
   14760:	mov	r0, #0
   14764:	bl	10dc4 <error@plt>
   14768:	b	14804 <__assert_fail@plt+0x38f0>
   1476c:	movw	r0, #47992	; 0xbb78
   14770:	movt	r0, #1
   14774:	bl	10e24 <gettext@plt>
   14778:	mov	r4, r0
   1477c:	ldr	r3, [fp, #-176]	; 0xffffff50
   14780:	sub	r3, r3, #-1073741823	; 0xc0000001
   14784:	lsl	r3, r3, #2
   14788:	ldr	r2, [fp, #-180]	; 0xffffff4c
   1478c:	add	r3, r2, r3
   14790:	ldr	r3, [r3]
   14794:	mov	r0, r3
   14798:	bl	17c74 <__assert_fail@plt+0x6d60>
   1479c:	mov	r3, r0
   147a0:	mov	r2, r4
   147a4:	mov	r1, #0
   147a8:	mov	r0, #0
   147ac:	bl	10dc4 <error@plt>
   147b0:	movw	r3, #53576	; 0xd148
   147b4:	movt	r3, #2
   147b8:	ldr	r4, [r3]
   147bc:	movw	r3, #53596	; 0xd15c
   147c0:	movt	r3, #2
   147c4:	ldrb	r3, [r3]
   147c8:	cmp	r3, #0
   147cc:	beq	147dc <__assert_fail@plt+0x38c8>
   147d0:	movw	r3, #48020	; 0xbb94
   147d4:	movt	r3, #1
   147d8:	b	147e4 <__assert_fail@plt+0x38d0>
   147dc:	movw	r3, #48088	; 0xbbd8
   147e0:	movt	r3, #1
   147e4:	mov	r0, r3
   147e8:	bl	10e24 <gettext@plt>
   147ec:	mov	r3, r0
   147f0:	mov	r2, r3
   147f4:	movw	r1, #48132	; 0xbc04
   147f8:	movt	r1, #1
   147fc:	mov	r0, r4
   14800:	bl	10e48 <fprintf@plt>
   14804:	mov	r0, #1
   14808:	bl	11280 <__assert_fail@plt+0x36c>
   1480c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14810:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14814:	cmp	r2, r3
   14818:	bge	148b0 <__assert_fail@plt+0x399c>
   1481c:	movw	r0, #48136	; 0xbc08
   14820:	movt	r0, #1
   14824:	bl	10e24 <gettext@plt>
   14828:	mov	r4, r0
   1482c:	movw	r3, #53568	; 0xd140
   14830:	movt	r3, #2
   14834:	ldr	r2, [r3]
   14838:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1483c:	add	r3, r2, r3
   14840:	lsl	r3, r3, #2
   14844:	ldr	r2, [fp, #-180]	; 0xffffff4c
   14848:	add	r3, r2, r3
   1484c:	ldr	r3, [r3]
   14850:	mov	r0, r3
   14854:	bl	17c74 <__assert_fail@plt+0x6d60>
   14858:	mov	r3, r0
   1485c:	mov	r2, r4
   14860:	mov	r1, #0
   14864:	mov	r0, #0
   14868:	bl	10dc4 <error@plt>
   1486c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14870:	cmp	r3, #2
   14874:	bne	148a8 <__assert_fail@plt+0x3994>
   14878:	movw	r3, #53576	; 0xd148
   1487c:	movt	r3, #2
   14880:	ldr	r4, [r3]
   14884:	movw	r0, #48156	; 0xbc1c
   14888:	movt	r0, #1
   1488c:	bl	10e24 <gettext@plt>
   14890:	mov	r3, r0
   14894:	mov	r2, r3
   14898:	movw	r1, #48132	; 0xbc04
   1489c:	movt	r1, #1
   148a0:	mov	r0, r4
   148a4:	bl	10e48 <fprintf@plt>
   148a8:	mov	r0, #1
   148ac:	bl	11280 <__assert_fail@plt+0x36c>
   148b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   148b4:	bl	138b8 <__assert_fail@plt+0x29a4>
   148b8:	movw	r3, #53568	; 0xd140
   148bc:	movt	r3, #2
   148c0:	ldr	r3, [r3]
   148c4:	lsl	r3, r3, #2
   148c8:	ldr	r2, [fp, #-180]	; 0xffffff4c
   148cc:	add	r3, r2, r3
   148d0:	ldr	r3, [r3]
   148d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   148d8:	mov	r0, r3
   148dc:	bl	1391c <__assert_fail@plt+0x2a08>
   148e0:	mov	r3, r0
   148e4:	eor	r3, r3, #1
   148e8:	uxtb	r3, r3
   148ec:	cmp	r3, #0
   148f0:	beq	148fc <__assert_fail@plt+0x39e8>
   148f4:	mov	r3, #1
   148f8:	b	14ff0 <__assert_fail@plt+0x40dc>
   148fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14900:	cmp	r3, #2
   14904:	bne	14958 <__assert_fail@plt+0x3a44>
   14908:	ldr	r0, [fp, #-16]
   1490c:	bl	138b8 <__assert_fail@plt+0x29a4>
   14910:	movw	r3, #53568	; 0xd140
   14914:	movt	r3, #2
   14918:	ldr	r3, [r3]
   1491c:	add	r3, r3, #1
   14920:	lsl	r3, r3, #2
   14924:	ldr	r2, [fp, #-180]	; 0xffffff4c
   14928:	add	r3, r2, r3
   1492c:	ldr	r3, [r3]
   14930:	ldr	r1, [fp, #-16]
   14934:	mov	r0, r3
   14938:	bl	1391c <__assert_fail@plt+0x2a08>
   1493c:	mov	r3, r0
   14940:	eor	r3, r3, #1
   14944:	uxtb	r3, r3
   14948:	cmp	r3, #0
   1494c:	beq	14960 <__assert_fail@plt+0x3a4c>
   14950:	mov	r3, #1
   14954:	b	14ff0 <__assert_fail@plt+0x40dc>
   14958:	mov	r3, #0
   1495c:	str	r3, [fp, #-16]
   14960:	ldr	r1, [fp, #-16]
   14964:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14968:	bl	13bdc <__assert_fail@plt+0x2cc8>
   1496c:	mov	r1, #0
   14970:	mov	r0, #0
   14974:	bl	18e80 <__assert_fail@plt+0x7f6c>
   14978:	mov	r1, #0
   1497c:	mov	r0, #1
   14980:	bl	18e80 <__assert_fail@plt+0x7f6c>
   14984:	movw	r3, #53584	; 0xd150
   14988:	movt	r3, #2
   1498c:	ldr	r3, [r3]
   14990:	mov	r1, #2
   14994:	mov	r0, r3
   14998:	bl	15208 <__assert_fail@plt+0x42f4>
   1499c:	movw	r3, #53596	; 0xd15c
   149a0:	movt	r3, #2
   149a4:	ldrb	r3, [r3]
   149a8:	cmp	r3, #0
   149ac:	beq	149f8 <__assert_fail@plt+0x3ae4>
   149b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   149b4:	cmp	r3, #1
   149b8:	bne	149f8 <__assert_fail@plt+0x3ae4>
   149bc:	movw	r3, #53598	; 0xd15e
   149c0:	movt	r3, #2
   149c4:	ldrb	r3, [r3]
   149c8:	movw	r2, #61796	; 0xf164
   149cc:	movt	r2, #2
   149d0:	mov	r1, r3
   149d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   149d8:	bl	14378 <__assert_fail@plt+0x3464>
   149dc:	movw	r2, #16628	; 0x40f4
   149e0:	movt	r2, #1
   149e4:	mov	r1, #8192	; 0x2000
   149e8:	movw	r0, #53604	; 0xd164
   149ec:	movt	r0, #2
   149f0:	bl	13e2c <__assert_fail@plt+0x2f18>
   149f4:	b	14fa8 <__assert_fail@plt+0x4094>
   149f8:	movw	r3, #53597	; 0xd15d
   149fc:	movt	r3, #2
   14a00:	ldrb	r3, [r3]
   14a04:	cmp	r3, #0
   14a08:	beq	14abc <__assert_fail@plt+0x3ba8>
   14a0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14a10:	cmp	r3, #1
   14a14:	bne	14abc <__assert_fail@plt+0x3ba8>
   14a18:	movw	r3, #53598	; 0xd15e
   14a1c:	movt	r3, #2
   14a20:	ldrb	r3, [r3]
   14a24:	movw	r2, #62052	; 0xf264
   14a28:	movt	r2, #2
   14a2c:	mov	r1, r3
   14a30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14a34:	bl	14378 <__assert_fail@plt+0x3464>
   14a38:	mov	r1, #8192	; 0x2000
   14a3c:	movw	r0, #53604	; 0xd164
   14a40:	movt	r0, #2
   14a44:	bl	14178 <__assert_fail@plt+0x3264>
   14a48:	str	r0, [fp, #-60]	; 0xffffffc4
   14a4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14a50:	cmp	r3, #0
   14a54:	beq	14ab4 <__assert_fail@plt+0x3ba0>
   14a58:	movw	r3, #53588	; 0xd154
   14a5c:	movt	r3, #2
   14a60:	ldr	r3, [r3]
   14a64:	ldr	r2, [fp, #-60]	; 0xffffffc4
   14a68:	mov	r1, #1
   14a6c:	movw	r0, #53604	; 0xd164
   14a70:	movt	r0, #2
   14a74:	bl	10d28 <fwrite_unlocked@plt>
   14a78:	mov	r2, r0
   14a7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14a80:	cmp	r3, r2
   14a84:	beq	14a38 <__assert_fail@plt+0x3b24>
   14a88:	bl	10e54 <__errno_location@plt>
   14a8c:	mov	r3, r0
   14a90:	ldr	r4, [r3]
   14a94:	movw	r0, #47900	; 0xbb1c
   14a98:	movt	r0, #1
   14a9c:	bl	10e24 <gettext@plt>
   14aa0:	mov	r3, r0
   14aa4:	mov	r2, r3
   14aa8:	mov	r1, r4
   14aac:	mov	r0, #1
   14ab0:	bl	10dc4 <error@plt>
   14ab4:	nop	{0}
   14ab8:	b	14fa8 <__assert_fail@plt+0x4094>
   14abc:	movw	r3, #53596	; 0xd15c
   14ac0:	movt	r3, #2
   14ac4:	ldrb	r3, [r3]
   14ac8:	cmp	r3, #0
   14acc:	beq	14b40 <__assert_fail@plt+0x3c2c>
   14ad0:	movw	r3, #53597	; 0xd15d
   14ad4:	movt	r3, #2
   14ad8:	ldrb	r3, [r3]
   14adc:	cmp	r3, #0
   14ae0:	beq	14b40 <__assert_fail@plt+0x3c2c>
   14ae4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14ae8:	cmp	r3, #2
   14aec:	bne	14b40 <__assert_fail@plt+0x3c2c>
   14af0:	movw	r3, #53598	; 0xd15e
   14af4:	movt	r3, #2
   14af8:	ldrb	r3, [r3]
   14afc:	movw	r2, #62052	; 0xf264
   14b00:	movt	r2, #2
   14b04:	mov	r1, r3
   14b08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b0c:	bl	14378 <__assert_fail@plt+0x3464>
   14b10:	movw	r2, #61796	; 0xf164
   14b14:	movt	r2, #2
   14b18:	mov	r1, #0
   14b1c:	ldr	r0, [fp, #-16]
   14b20:	bl	14378 <__assert_fail@plt+0x3464>
   14b24:	movw	r2, #16760	; 0x4178
   14b28:	movt	r2, #1
   14b2c:	mov	r1, #8192	; 0x2000
   14b30:	movw	r0, #53604	; 0xd164
   14b34:	movt	r0, #2
   14b38:	bl	13e2c <__assert_fail@plt+0x2f18>
   14b3c:	b	14fa8 <__assert_fail@plt+0x4094>
   14b40:	movw	r3, #53600	; 0xd160
   14b44:	movt	r3, #2
   14b48:	ldrb	r3, [r3]
   14b4c:	cmp	r3, #0
   14b50:	beq	14fa8 <__assert_fail@plt+0x4094>
   14b54:	movw	r3, #53598	; 0xd15e
   14b58:	movt	r3, #2
   14b5c:	ldrb	r3, [r3]
   14b60:	cmp	r3, #0
   14b64:	beq	14c9c <__assert_fail@plt+0x3d88>
   14b68:	movw	r3, #62052	; 0xf264
   14b6c:	movt	r3, #2
   14b70:	str	r3, [fp, #-64]	; 0xffffffc0
   14b74:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14b78:	mov	r1, #0
   14b7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b80:	bl	14378 <__assert_fail@plt+0x3464>
   14b84:	ldr	r1, [fp, #-16]
   14b88:	mvn	r2, #1
   14b8c:	mvn	r3, #0
   14b90:	strd	r2, [r1, #8]
   14b94:	mov	r3, #0
   14b98:	str	r3, [fp, #-20]	; 0xffffffec
   14b9c:	b	14bcc <__assert_fail@plt+0x3cb8>
   14ba0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ba4:	uxtb	r1, r3
   14ba8:	movw	r3, #62308	; 0xf364
   14bac:	movt	r3, #2
   14bb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   14bb4:	add	r3, r3, r2
   14bb8:	mov	r2, r1
   14bbc:	strb	r2, [r3]
   14bc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bc4:	add	r3, r3, #1
   14bc8:	str	r3, [fp, #-20]	; 0xffffffec
   14bcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bd0:	cmp	r3, #255	; 0xff
   14bd4:	ble	14ba0 <__assert_fail@plt+0x3c8c>
   14bd8:	mov	r3, #0
   14bdc:	str	r3, [fp, #-24]	; 0xffffffe8
   14be0:	b	14c8c <__assert_fail@plt+0x3d78>
   14be4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14be8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14bec:	add	r3, r2, r3
   14bf0:	ldrb	r3, [r3]
   14bf4:	eor	r3, r3, #1
   14bf8:	uxtb	r3, r3
   14bfc:	cmp	r3, #0
   14c00:	beq	14c80 <__assert_fail@plt+0x3d6c>
   14c04:	mov	r1, #0
   14c08:	ldr	r0, [fp, #-16]
   14c0c:	bl	12bec <__assert_fail@plt+0x1cd8>
   14c10:	str	r0, [fp, #-68]	; 0xffffffbc
   14c14:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14c18:	cmn	r3, #1
   14c1c:	bne	14c54 <__assert_fail@plt+0x3d40>
   14c20:	movw	r3, #53599	; 0xd15f
   14c24:	movt	r3, #2
   14c28:	ldrb	r3, [r3]
   14c2c:	cmp	r3, #0
   14c30:	bne	14c54 <__assert_fail@plt+0x3d40>
   14c34:	movw	r3, #48492	; 0xbd6c
   14c38:	movt	r3, #1
   14c3c:	mov	r2, #1840	; 0x730
   14c40:	movw	r1, #46676	; 0xb654
   14c44:	movt	r1, #1
   14c48:	movw	r0, #48228	; 0xbc64
   14c4c:	movt	r0, #1
   14c50:	bl	10f14 <__assert_fail@plt>
   14c54:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14c58:	cmn	r3, #1
   14c5c:	beq	14ee0 <__assert_fail@plt+0x3fcc>
   14c60:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14c64:	uxtb	r1, r3
   14c68:	movw	r3, #62308	; 0xf364
   14c6c:	movt	r3, #2
   14c70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14c74:	add	r3, r3, r2
   14c78:	mov	r2, r1
   14c7c:	strb	r2, [r3]
   14c80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14c84:	add	r3, r3, #1
   14c88:	str	r3, [fp, #-24]	; 0xffffffe8
   14c8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14c90:	cmp	r3, #255	; 0xff
   14c94:	ble	14be4 <__assert_fail@plt+0x3cd0>
   14c98:	b	14ee4 <__assert_fail@plt+0x3fd0>
   14c9c:	mov	r3, #0
   14ca0:	str	r3, [fp, #-28]	; 0xffffffe4
   14ca4:	b	14cd4 <__assert_fail@plt+0x3dc0>
   14ca8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14cac:	uxtb	r1, r3
   14cb0:	movw	r3, #62308	; 0xf364
   14cb4:	movt	r3, #2
   14cb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14cbc:	add	r3, r3, r2
   14cc0:	mov	r2, r1
   14cc4:	strb	r2, [r3]
   14cc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14ccc:	add	r3, r3, #1
   14cd0:	str	r3, [fp, #-28]	; 0xffffffe4
   14cd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14cd8:	cmp	r3, #255	; 0xff
   14cdc:	ble	14ca8 <__assert_fail@plt+0x3d94>
   14ce0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14ce4:	mvn	r2, #1
   14ce8:	mvn	r3, #0
   14cec:	strd	r2, [r1, #8]
   14cf0:	ldr	r1, [fp, #-16]
   14cf4:	mvn	r2, #1
   14cf8:	mvn	r3, #0
   14cfc:	strd	r2, [r1, #8]
   14d00:	sub	r3, fp, #168	; 0xa8
   14d04:	mov	r1, r3
   14d08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d0c:	bl	12bec <__assert_fail@plt+0x1cd8>
   14d10:	str	r0, [fp, #-72]	; 0xffffffb8
   14d14:	sub	r3, fp, #172	; 0xac
   14d18:	mov	r1, r3
   14d1c:	ldr	r0, [fp, #-16]
   14d20:	bl	12bec <__assert_fail@plt+0x1cd8>
   14d24:	str	r0, [fp, #-76]	; 0xffffffb4
   14d28:	ldr	r3, [fp, #-168]	; 0xffffff58
   14d2c:	cmp	r3, #0
   14d30:	bne	14db8 <__assert_fail@plt+0x3ea4>
   14d34:	ldr	r3, [fp, #-172]	; 0xffffff54
   14d38:	cmp	r3, #1
   14d3c:	bne	14db8 <__assert_fail@plt+0x3ea4>
   14d40:	mov	r3, #0
   14d44:	str	r3, [fp, #-32]	; 0xffffffe0
   14d48:	b	14da8 <__assert_fail@plt+0x3e94>
   14d4c:	bl	10e0c <__ctype_b_loc@plt>
   14d50:	mov	r3, r0
   14d54:	ldr	r2, [r3]
   14d58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14d5c:	lsl	r3, r3, #1
   14d60:	add	r3, r2, r3
   14d64:	ldrh	r3, [r3]
   14d68:	and	r3, r3, #512	; 0x200
   14d6c:	cmp	r3, #0
   14d70:	beq	14d9c <__assert_fail@plt+0x3e88>
   14d74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d78:	bl	10eb4 <toupper@plt>
   14d7c:	mov	r3, r0
   14d80:	uxtb	r1, r3
   14d84:	movw	r3, #62308	; 0xf364
   14d88:	movt	r3, #2
   14d8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14d90:	add	r3, r3, r2
   14d94:	mov	r2, r1
   14d98:	strb	r2, [r3]
   14d9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14da0:	add	r3, r3, #1
   14da4:	str	r3, [fp, #-32]	; 0xffffffe0
   14da8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14dac:	cmp	r3, #255	; 0xff
   14db0:	ble	14d4c <__assert_fail@plt+0x3e38>
   14db4:	b	14e80 <__assert_fail@plt+0x3f6c>
   14db8:	ldr	r3, [fp, #-168]	; 0xffffff58
   14dbc:	cmp	r3, #1
   14dc0:	bne	14e48 <__assert_fail@plt+0x3f34>
   14dc4:	ldr	r3, [fp, #-172]	; 0xffffff54
   14dc8:	cmp	r3, #0
   14dcc:	bne	14e48 <__assert_fail@plt+0x3f34>
   14dd0:	mov	r3, #0
   14dd4:	str	r3, [fp, #-36]	; 0xffffffdc
   14dd8:	b	14e38 <__assert_fail@plt+0x3f24>
   14ddc:	bl	10e0c <__ctype_b_loc@plt>
   14de0:	mov	r3, r0
   14de4:	ldr	r2, [r3]
   14de8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14dec:	lsl	r3, r3, #1
   14df0:	add	r3, r2, r3
   14df4:	ldrh	r3, [r3]
   14df8:	and	r3, r3, #256	; 0x100
   14dfc:	cmp	r3, #0
   14e00:	beq	14e2c <__assert_fail@plt+0x3f18>
   14e04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14e08:	bl	10d10 <tolower@plt>
   14e0c:	mov	r3, r0
   14e10:	uxtb	r1, r3
   14e14:	movw	r3, #62308	; 0xf364
   14e18:	movt	r3, #2
   14e1c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14e20:	add	r3, r3, r2
   14e24:	mov	r2, r1
   14e28:	strb	r2, [r3]
   14e2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14e30:	add	r3, r3, #1
   14e34:	str	r3, [fp, #-36]	; 0xffffffdc
   14e38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14e3c:	cmp	r3, #255	; 0xff
   14e40:	ble	14ddc <__assert_fail@plt+0x3ec8>
   14e44:	b	14e80 <__assert_fail@plt+0x3f6c>
   14e48:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14e4c:	cmn	r3, #1
   14e50:	beq	14ea0 <__assert_fail@plt+0x3f8c>
   14e54:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14e58:	cmn	r3, #1
   14e5c:	beq	14ea0 <__assert_fail@plt+0x3f8c>
   14e60:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14e64:	uxtb	r1, r3
   14e68:	movw	r3, #62308	; 0xf364
   14e6c:	movt	r3, #2
   14e70:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14e74:	add	r3, r3, r2
   14e78:	mov	r2, r1
   14e7c:	strb	r2, [r3]
   14e80:	ldr	r3, [fp, #-172]	; 0xffffff54
   14e84:	cmp	r3, #2
   14e88:	beq	14d00 <__assert_fail@plt+0x3dec>
   14e8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e90:	bl	12ba8 <__assert_fail@plt+0x1c94>
   14e94:	ldr	r0, [fp, #-16]
   14e98:	bl	12ba8 <__assert_fail@plt+0x1c94>
   14e9c:	b	14d00 <__assert_fail@plt+0x3dec>
   14ea0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14ea4:	cmn	r3, #1
   14ea8:	beq	14ee4 <__assert_fail@plt+0x3fd0>
   14eac:	movw	r3, #53599	; 0xd15f
   14eb0:	movt	r3, #2
   14eb4:	ldrb	r3, [r3]
   14eb8:	cmp	r3, #0
   14ebc:	bne	14ee4 <__assert_fail@plt+0x3fd0>
   14ec0:	movw	r3, #48492	; 0xbd6c
   14ec4:	movt	r3, #1
   14ec8:	movw	r2, #1893	; 0x765
   14ecc:	movw	r1, #46676	; 0xb654
   14ed0:	movt	r1, #1
   14ed4:	movw	r0, #48256	; 0xbc80
   14ed8:	movt	r0, #1
   14edc:	bl	10f14 <__assert_fail@plt>
   14ee0:	nop	{0}
   14ee4:	movw	r3, #53596	; 0xd15c
   14ee8:	movt	r3, #2
   14eec:	ldrb	r3, [r3]
   14ef0:	cmp	r3, #0
   14ef4:	beq	14f28 <__assert_fail@plt+0x4014>
   14ef8:	movw	r2, #61796	; 0xf164
   14efc:	movt	r2, #2
   14f00:	mov	r1, #0
   14f04:	ldr	r0, [fp, #-16]
   14f08:	bl	14378 <__assert_fail@plt+0x3464>
   14f0c:	movw	r2, #17108	; 0x42d4
   14f10:	movt	r2, #1
   14f14:	mov	r1, #8192	; 0x2000
   14f18:	movw	r0, #53604	; 0xd164
   14f1c:	movt	r0, #2
   14f20:	bl	13e2c <__assert_fail@plt+0x2f18>
   14f24:	b	14fa8 <__assert_fail@plt+0x4094>
   14f28:	mov	r1, #8192	; 0x2000
   14f2c:	movw	r0, #53604	; 0xd164
   14f30:	movt	r0, #2
   14f34:	bl	142d4 <__assert_fail@plt+0x33c0>
   14f38:	str	r0, [fp, #-80]	; 0xffffffb0
   14f3c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14f40:	cmp	r3, #0
   14f44:	beq	14fa4 <__assert_fail@plt+0x4090>
   14f48:	movw	r3, #53588	; 0xd154
   14f4c:	movt	r3, #2
   14f50:	ldr	r3, [r3]
   14f54:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14f58:	mov	r1, #1
   14f5c:	movw	r0, #53604	; 0xd164
   14f60:	movt	r0, #2
   14f64:	bl	10d28 <fwrite_unlocked@plt>
   14f68:	mov	r2, r0
   14f6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14f70:	cmp	r3, r2
   14f74:	beq	14f28 <__assert_fail@plt+0x4014>
   14f78:	bl	10e54 <__errno_location@plt>
   14f7c:	mov	r3, r0
   14f80:	ldr	r4, [r3]
   14f84:	movw	r0, #47900	; 0xbb1c
   14f88:	movt	r0, #1
   14f8c:	bl	10e24 <gettext@plt>
   14f90:	mov	r3, r0
   14f94:	mov	r2, r3
   14f98:	mov	r1, r4
   14f9c:	mov	r0, #1
   14fa0:	bl	10dc4 <error@plt>
   14fa4:	nop	{0}
   14fa8:	mov	r0, #0
   14fac:	bl	10f08 <close@plt>
   14fb0:	mov	r3, r0
   14fb4:	cmp	r3, #0
   14fb8:	beq	14fe8 <__assert_fail@plt+0x40d4>
   14fbc:	bl	10e54 <__errno_location@plt>
   14fc0:	mov	r3, r0
   14fc4:	ldr	r4, [r3]
   14fc8:	movw	r0, #48284	; 0xbc9c
   14fcc:	movt	r0, #1
   14fd0:	bl	10e24 <gettext@plt>
   14fd4:	mov	r3, r0
   14fd8:	mov	r2, r3
   14fdc:	mov	r1, r4
   14fe0:	mov	r0, #1
   14fe4:	bl	10dc4 <error@plt>
   14fe8:	mov	r0, #0
   14fec:	bl	10e18 <exit@plt>
   14ff0:	mov	r0, r3
   14ff4:	sub	sp, fp, #8
   14ff8:	ldr	r4, [sp]
   14ffc:	ldr	fp, [sp, #4]
   15000:	add	sp, sp, #8
   15004:	pop	{pc}		; (ldr pc, [sp], #4)
   15008:	push	{fp}		; (str fp, [sp, #-4]!)
   1500c:	add	fp, sp, #0
   15010:	sub	sp, sp, #12
   15014:	str	r0, [fp, #-8]
   15018:	movw	r3, #62564	; 0xf464
   1501c:	movt	r3, #2
   15020:	ldr	r2, [fp, #-8]
   15024:	str	r2, [r3]
   15028:	nop	{0}
   1502c:	add	sp, fp, #0
   15030:	pop	{fp}		; (ldr fp, [sp], #4)
   15034:	bx	lr
   15038:	push	{fp}		; (str fp, [sp, #-4]!)
   1503c:	add	fp, sp, #0
   15040:	sub	sp, sp, #12
   15044:	mov	r3, r0
   15048:	strb	r3, [fp, #-5]
   1504c:	movw	r3, #62568	; 0xf468
   15050:	movt	r3, #2
   15054:	ldrb	r2, [fp, #-5]
   15058:	strb	r2, [r3]
   1505c:	nop	{0}
   15060:	add	sp, fp, #0
   15064:	pop	{fp}		; (ldr fp, [sp], #4)
   15068:	bx	lr
   1506c:	str	r4, [sp, #-12]!
   15070:	str	fp, [sp, #4]
   15074:	str	lr, [sp, #8]
   15078:	add	fp, sp, #8
   1507c:	sub	sp, sp, #20
   15080:	movw	r3, #53588	; 0xd154
   15084:	movt	r3, #2
   15088:	ldr	r3, [r3]
   1508c:	mov	r0, r3
   15090:	bl	19a90 <__assert_fail@plt+0x8b7c>
   15094:	mov	r3, r0
   15098:	cmp	r3, #0
   1509c:	beq	15170 <__assert_fail@plt+0x425c>
   150a0:	movw	r3, #62568	; 0xf468
   150a4:	movt	r3, #2
   150a8:	ldrb	r3, [r3]
   150ac:	eor	r3, r3, #1
   150b0:	uxtb	r3, r3
   150b4:	cmp	r3, #0
   150b8:	bne	150d0 <__assert_fail@plt+0x41bc>
   150bc:	bl	10e54 <__errno_location@plt>
   150c0:	mov	r3, r0
   150c4:	ldr	r3, [r3]
   150c8:	cmp	r3, #32
   150cc:	beq	15170 <__assert_fail@plt+0x425c>
   150d0:	movw	r0, #48516	; 0xbd84
   150d4:	movt	r0, #1
   150d8:	bl	10e24 <gettext@plt>
   150dc:	str	r0, [fp, #-16]
   150e0:	movw	r3, #62564	; 0xf464
   150e4:	movt	r3, #2
   150e8:	ldr	r3, [r3]
   150ec:	cmp	r3, #0
   150f0:	beq	1513c <__assert_fail@plt+0x4228>
   150f4:	bl	10e54 <__errno_location@plt>
   150f8:	mov	r3, r0
   150fc:	ldr	r4, [r3]
   15100:	movw	r3, #62564	; 0xf464
   15104:	movt	r3, #2
   15108:	ldr	r3, [r3]
   1510c:	mov	r0, r3
   15110:	bl	17900 <__assert_fail@plt+0x69ec>
   15114:	mov	r2, r0
   15118:	ldr	r3, [fp, #-16]
   1511c:	str	r3, [sp]
   15120:	mov	r3, r2
   15124:	movw	r2, #48528	; 0xbd90
   15128:	movt	r2, #1
   1512c:	mov	r1, r4
   15130:	mov	r0, #0
   15134:	bl	10dc4 <error@plt>
   15138:	b	1515c <__assert_fail@plt+0x4248>
   1513c:	bl	10e54 <__errno_location@plt>
   15140:	mov	r3, r0
   15144:	ldr	r1, [r3]
   15148:	ldr	r3, [fp, #-16]
   1514c:	movw	r2, #48536	; 0xbd98
   15150:	movt	r2, #1
   15154:	mov	r0, #0
   15158:	bl	10dc4 <error@plt>
   1515c:	movw	r3, #53492	; 0xd0f4
   15160:	movt	r3, #2
   15164:	ldr	r3, [r3]
   15168:	mov	r0, r3
   1516c:	bl	10cf8 <_exit@plt>
   15170:	movw	r3, #53576	; 0xd148
   15174:	movt	r3, #2
   15178:	ldr	r3, [r3]
   1517c:	mov	r0, r3
   15180:	bl	19a90 <__assert_fail@plt+0x8b7c>
   15184:	mov	r3, r0
   15188:	cmp	r3, #0
   1518c:	beq	151a4 <__assert_fail@plt+0x4290>
   15190:	movw	r3, #53492	; 0xd0f4
   15194:	movt	r3, #2
   15198:	ldr	r3, [r3]
   1519c:	mov	r0, r3
   151a0:	bl	10cf8 <_exit@plt>
   151a4:	nop	{0}
   151a8:	sub	sp, fp, #8
   151ac:	ldr	r4, [sp]
   151b0:	ldr	fp, [sp, #4]
   151b4:	add	sp, sp, #8
   151b8:	pop	{pc}		; (ldr pc, [sp], #4)
   151bc:	str	fp, [sp, #-8]!
   151c0:	str	lr, [sp, #4]
   151c4:	add	fp, sp, #4
   151c8:	sub	sp, sp, #40	; 0x28
   151cc:	str	r0, [fp, #-16]
   151d0:	strd	r2, [fp, #-28]	; 0xffffffe4
   151d4:	ldr	r3, [fp, #12]
   151d8:	str	r3, [sp, #8]
   151dc:	ldrd	r2, [fp, #4]
   151e0:	strd	r2, [sp]
   151e4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   151e8:	ldr	r0, [fp, #-16]
   151ec:	bl	10cbc <posix_fadvise64@plt>
   151f0:	str	r0, [fp, #-8]
   151f4:	nop	{0}
   151f8:	sub	sp, fp, #4
   151fc:	ldr	fp, [sp]
   15200:	add	sp, sp, #4
   15204:	pop	{pc}		; (ldr pc, [sp], #4)
   15208:	str	fp, [sp, #-8]!
   1520c:	str	lr, [sp, #4]
   15210:	add	fp, sp, #4
   15214:	sub	sp, sp, #24
   15218:	str	r0, [fp, #-8]
   1521c:	str	r1, [fp, #-12]
   15220:	ldr	r3, [fp, #-8]
   15224:	cmp	r3, #0
   15228:	beq	1525c <__assert_fail@plt+0x4348>
   1522c:	ldr	r0, [fp, #-8]
   15230:	bl	10e78 <fileno@plt>
   15234:	mov	r1, r0
   15238:	ldr	r3, [fp, #-12]
   1523c:	str	r3, [sp, #8]
   15240:	mov	r2, #0
   15244:	mov	r3, #0
   15248:	strd	r2, [sp]
   1524c:	mov	r2, #0
   15250:	mov	r3, #0
   15254:	mov	r0, r1
   15258:	bl	151bc <__assert_fail@plt+0x42a8>
   1525c:	nop	{0}
   15260:	sub	sp, fp, #4
   15264:	ldr	fp, [sp]
   15268:	add	sp, sp, #4
   1526c:	pop	{pc}		; (ldr pc, [sp], #4)
   15270:	str	r4, [sp, #-12]!
   15274:	str	fp, [sp, #4]
   15278:	str	lr, [sp, #8]
   1527c:	add	fp, sp, #8
   15280:	sub	sp, sp, #20
   15284:	str	r0, [fp, #-24]	; 0xffffffe8
   15288:	bl	10e54 <__errno_location@plt>
   1528c:	mov	r3, r0
   15290:	ldr	r3, [r3]
   15294:	str	r3, [fp, #-20]	; 0xffffffec
   15298:	bl	10e54 <__errno_location@plt>
   1529c:	mov	r3, r0
   152a0:	ldr	r3, [r3]
   152a4:	str	r3, [fp, #-16]
   152a8:	bl	10e54 <__errno_location@plt>
   152ac:	mov	r2, r0
   152b0:	mov	r3, #0
   152b4:	str	r3, [r2]
   152b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152bc:	bl	10cec <free@plt>
   152c0:	bl	10e54 <__errno_location@plt>
   152c4:	mov	r3, r0
   152c8:	ldr	r3, [r3]
   152cc:	cmp	r3, #0
   152d0:	moveq	r3, #1
   152d4:	movne	r3, #0
   152d8:	uxtb	r3, r3
   152dc:	mov	r4, r3
   152e0:	bl	10e54 <__errno_location@plt>
   152e4:	mov	r2, r0
   152e8:	lsl	r3, r4, #2
   152ec:	sub	r1, fp, #12
   152f0:	add	r3, r1, r3
   152f4:	ldr	r3, [r3, #-8]
   152f8:	str	r3, [r2]
   152fc:	nop	{0}
   15300:	sub	sp, fp, #8
   15304:	ldr	r4, [sp]
   15308:	ldr	fp, [sp, #4]
   1530c:	add	sp, sp, #8
   15310:	pop	{pc}		; (ldr pc, [sp], #4)
   15314:	str	fp, [sp, #-8]!
   15318:	str	lr, [sp, #4]
   1531c:	add	fp, sp, #4
   15320:	sub	sp, sp, #16
   15324:	str	r0, [fp, #-16]
   15328:	ldr	r3, [fp, #-16]
   1532c:	cmp	r3, #0
   15330:	bne	15358 <__assert_fail@plt+0x4444>
   15334:	movw	r3, #53576	; 0xd148
   15338:	movt	r3, #2
   1533c:	ldr	r3, [r3]
   15340:	mov	r2, #55	; 0x37
   15344:	mov	r1, #1
   15348:	movw	r0, #48540	; 0xbd9c
   1534c:	movt	r0, #1
   15350:	bl	10d7c <fwrite@plt>
   15354:	bl	10efc <abort@plt>
   15358:	mov	r1, #47	; 0x2f
   1535c:	ldr	r0, [fp, #-16]
   15360:	bl	10ec0 <strrchr@plt>
   15364:	str	r0, [fp, #-8]
   15368:	ldr	r3, [fp, #-8]
   1536c:	cmp	r3, #0
   15370:	beq	15380 <__assert_fail@plt+0x446c>
   15374:	ldr	r3, [fp, #-8]
   15378:	add	r3, r3, #1
   1537c:	b	15384 <__assert_fail@plt+0x4470>
   15380:	ldr	r3, [fp, #-16]
   15384:	str	r3, [fp, #-12]
   15388:	ldr	r2, [fp, #-12]
   1538c:	ldr	r3, [fp, #-16]
   15390:	sub	r3, r2, r3
   15394:	cmp	r3, #6
   15398:	ble	15408 <__assert_fail@plt+0x44f4>
   1539c:	ldr	r3, [fp, #-12]
   153a0:	sub	r3, r3, #7
   153a4:	mov	r2, #7
   153a8:	movw	r1, #48596	; 0xbdd4
   153ac:	movt	r1, #1
   153b0:	mov	r0, r3
   153b4:	bl	10ef0 <strncmp@plt>
   153b8:	mov	r3, r0
   153bc:	cmp	r3, #0
   153c0:	bne	15408 <__assert_fail@plt+0x44f4>
   153c4:	ldr	r3, [fp, #-12]
   153c8:	str	r3, [fp, #-16]
   153cc:	mov	r2, #3
   153d0:	movw	r1, #48604	; 0xbddc
   153d4:	movt	r1, #1
   153d8:	ldr	r0, [fp, #-12]
   153dc:	bl	10ef0 <strncmp@plt>
   153e0:	mov	r3, r0
   153e4:	cmp	r3, #0
   153e8:	bne	15408 <__assert_fail@plt+0x44f4>
   153ec:	ldr	r3, [fp, #-12]
   153f0:	add	r3, r3, #3
   153f4:	str	r3, [fp, #-16]
   153f8:	movw	r3, #53560	; 0xd138
   153fc:	movt	r3, #2
   15400:	ldr	r2, [fp, #-16]
   15404:	str	r2, [r3]
   15408:	movw	r3, #62572	; 0xf46c
   1540c:	movt	r3, #2
   15410:	ldr	r2, [fp, #-16]
   15414:	str	r2, [r3]
   15418:	movw	r3, #53564	; 0xd13c
   1541c:	movt	r3, #2
   15420:	ldr	r2, [fp, #-16]
   15424:	str	r2, [r3]
   15428:	nop	{0}
   1542c:	sub	sp, fp, #4
   15430:	ldr	fp, [sp]
   15434:	add	sp, sp, #4
   15438:	pop	{pc}		; (ldr pc, [sp], #4)
   1543c:	str	fp, [sp, #-8]!
   15440:	str	lr, [sp, #4]
   15444:	add	fp, sp, #4
   15448:	sub	sp, sp, #16
   1544c:	str	r0, [fp, #-16]
   15450:	bl	10e54 <__errno_location@plt>
   15454:	mov	r3, r0
   15458:	ldr	r3, [r3]
   1545c:	str	r3, [fp, #-8]
   15460:	ldr	r3, [fp, #-16]
   15464:	cmp	r3, #0
   15468:	beq	15474 <__assert_fail@plt+0x4560>
   1546c:	ldr	r3, [fp, #-16]
   15470:	b	1547c <__assert_fail@plt+0x4568>
   15474:	movw	r3, #62576	; 0xf470
   15478:	movt	r3, #2
   1547c:	mov	r1, #48	; 0x30
   15480:	mov	r0, r3
   15484:	bl	18cd0 <__assert_fail@plt+0x7dbc>
   15488:	mov	r3, r0
   1548c:	str	r3, [fp, #-12]
   15490:	bl	10e54 <__errno_location@plt>
   15494:	mov	r2, r0
   15498:	ldr	r3, [fp, #-8]
   1549c:	str	r3, [r2]
   154a0:	ldr	r3, [fp, #-12]
   154a4:	mov	r0, r3
   154a8:	sub	sp, fp, #4
   154ac:	ldr	fp, [sp]
   154b0:	add	sp, sp, #4
   154b4:	pop	{pc}		; (ldr pc, [sp], #4)
   154b8:	push	{fp}		; (str fp, [sp, #-4]!)
   154bc:	add	fp, sp, #0
   154c0:	sub	sp, sp, #12
   154c4:	str	r0, [fp, #-8]
   154c8:	ldr	r3, [fp, #-8]
   154cc:	cmp	r3, #0
   154d0:	beq	154dc <__assert_fail@plt+0x45c8>
   154d4:	ldr	r3, [fp, #-8]
   154d8:	b	154e4 <__assert_fail@plt+0x45d0>
   154dc:	movw	r3, #62576	; 0xf470
   154e0:	movt	r3, #2
   154e4:	ldr	r3, [r3]
   154e8:	mov	r0, r3
   154ec:	add	sp, fp, #0
   154f0:	pop	{fp}		; (ldr fp, [sp], #4)
   154f4:	bx	lr
   154f8:	push	{fp}		; (str fp, [sp, #-4]!)
   154fc:	add	fp, sp, #0
   15500:	sub	sp, sp, #12
   15504:	str	r0, [fp, #-8]
   15508:	str	r1, [fp, #-12]
   1550c:	ldr	r3, [fp, #-8]
   15510:	cmp	r3, #0
   15514:	beq	15520 <__assert_fail@plt+0x460c>
   15518:	ldr	r3, [fp, #-8]
   1551c:	b	15528 <__assert_fail@plt+0x4614>
   15520:	movw	r3, #62576	; 0xf470
   15524:	movt	r3, #2
   15528:	ldr	r2, [fp, #-12]
   1552c:	str	r2, [r3]
   15530:	nop	{0}
   15534:	add	sp, fp, #0
   15538:	pop	{fp}		; (ldr fp, [sp], #4)
   1553c:	bx	lr
   15540:	push	{fp}		; (str fp, [sp, #-4]!)
   15544:	add	fp, sp, #0
   15548:	sub	sp, sp, #36	; 0x24
   1554c:	str	r0, [fp, #-24]	; 0xffffffe8
   15550:	mov	r3, r1
   15554:	str	r2, [fp, #-32]	; 0xffffffe0
   15558:	strb	r3, [fp, #-25]	; 0xffffffe7
   1555c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   15560:	strb	r3, [fp, #-5]
   15564:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15568:	cmp	r3, #0
   1556c:	beq	15578 <__assert_fail@plt+0x4664>
   15570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15574:	b	15580 <__assert_fail@plt+0x466c>
   15578:	movw	r3, #62576	; 0xf470
   1557c:	movt	r3, #2
   15580:	add	r2, r3, #8
   15584:	ldrb	r3, [fp, #-5]
   15588:	lsr	r3, r3, #5
   1558c:	uxtb	r3, r3
   15590:	lsl	r3, r3, #2
   15594:	add	r3, r2, r3
   15598:	str	r3, [fp, #-12]
   1559c:	ldrb	r3, [fp, #-5]
   155a0:	and	r3, r3, #31
   155a4:	str	r3, [fp, #-16]
   155a8:	ldr	r3, [fp, #-12]
   155ac:	ldr	r2, [r3]
   155b0:	ldr	r3, [fp, #-16]
   155b4:	lsr	r3, r2, r3
   155b8:	and	r3, r3, #1
   155bc:	str	r3, [fp, #-20]	; 0xffffffec
   155c0:	ldr	r3, [fp, #-12]
   155c4:	ldr	r3, [r3]
   155c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   155cc:	and	r1, r2, #1
   155d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   155d4:	eor	r1, r1, r2
   155d8:	ldr	r2, [fp, #-16]
   155dc:	lsl	r2, r1, r2
   155e0:	eor	r2, r2, r3
   155e4:	ldr	r3, [fp, #-12]
   155e8:	str	r2, [r3]
   155ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   155f0:	mov	r0, r3
   155f4:	add	sp, fp, #0
   155f8:	pop	{fp}		; (ldr fp, [sp], #4)
   155fc:	bx	lr
   15600:	push	{fp}		; (str fp, [sp, #-4]!)
   15604:	add	fp, sp, #0
   15608:	sub	sp, sp, #20
   1560c:	str	r0, [fp, #-16]
   15610:	str	r1, [fp, #-20]	; 0xffffffec
   15614:	ldr	r3, [fp, #-16]
   15618:	cmp	r3, #0
   1561c:	bne	1562c <__assert_fail@plt+0x4718>
   15620:	movw	r3, #62576	; 0xf470
   15624:	movt	r3, #2
   15628:	str	r3, [fp, #-16]
   1562c:	ldr	r3, [fp, #-16]
   15630:	ldr	r3, [r3, #4]
   15634:	str	r3, [fp, #-8]
   15638:	ldr	r3, [fp, #-16]
   1563c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15640:	str	r2, [r3, #4]
   15644:	ldr	r3, [fp, #-8]
   15648:	mov	r0, r3
   1564c:	add	sp, fp, #0
   15650:	pop	{fp}		; (ldr fp, [sp], #4)
   15654:	bx	lr
   15658:	str	fp, [sp, #-8]!
   1565c:	str	lr, [sp, #4]
   15660:	add	fp, sp, #4
   15664:	sub	sp, sp, #16
   15668:	str	r0, [fp, #-8]
   1566c:	str	r1, [fp, #-12]
   15670:	str	r2, [fp, #-16]
   15674:	ldr	r3, [fp, #-8]
   15678:	cmp	r3, #0
   1567c:	bne	1568c <__assert_fail@plt+0x4778>
   15680:	movw	r3, #62576	; 0xf470
   15684:	movt	r3, #2
   15688:	str	r3, [fp, #-8]
   1568c:	ldr	r3, [fp, #-8]
   15690:	mov	r2, #10
   15694:	str	r2, [r3]
   15698:	ldr	r3, [fp, #-12]
   1569c:	cmp	r3, #0
   156a0:	beq	156b0 <__assert_fail@plt+0x479c>
   156a4:	ldr	r3, [fp, #-16]
   156a8:	cmp	r3, #0
   156ac:	bne	156b4 <__assert_fail@plt+0x47a0>
   156b0:	bl	10efc <abort@plt>
   156b4:	ldr	r3, [fp, #-8]
   156b8:	ldr	r2, [fp, #-12]
   156bc:	str	r2, [r3, #40]	; 0x28
   156c0:	ldr	r3, [fp, #-8]
   156c4:	ldr	r2, [fp, #-16]
   156c8:	str	r2, [r3, #44]	; 0x2c
   156cc:	nop	{0}
   156d0:	sub	sp, fp, #4
   156d4:	ldr	fp, [sp]
   156d8:	add	sp, sp, #4
   156dc:	pop	{pc}		; (ldr pc, [sp], #4)
   156e0:	str	fp, [sp, #-8]!
   156e4:	str	lr, [sp, #4]
   156e8:	add	fp, sp, #4
   156ec:	sub	sp, sp, #56	; 0x38
   156f0:	str	r0, [fp, #-56]	; 0xffffffc8
   156f4:	str	r1, [fp, #-60]	; 0xffffffc4
   156f8:	sub	r1, fp, #52	; 0x34
   156fc:	mov	r2, #0
   15700:	mov	r3, #0
   15704:	strd	r2, [r1]
   15708:	strd	r2, [r1, #8]
   1570c:	strd	r2, [r1, #16]
   15710:	strd	r2, [r1, #24]
   15714:	strd	r2, [r1, #32]
   15718:	strd	r2, [r1, #40]	; 0x28
   1571c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15720:	cmp	r3, #10
   15724:	bne	1572c <__assert_fail@plt+0x4818>
   15728:	bl	10efc <abort@plt>
   1572c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15730:	str	r3, [fp, #-52]	; 0xffffffcc
   15734:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15738:	mov	r2, r3
   1573c:	sub	r3, fp, #52	; 0x34
   15740:	ldrd	r0, [r3]
   15744:	strd	r0, [r2]
   15748:	ldrd	r0, [r3, #8]
   1574c:	strd	r0, [r2, #8]
   15750:	ldrd	r0, [r3, #16]
   15754:	strd	r0, [r2, #16]
   15758:	ldrd	r0, [r3, #24]
   1575c:	strd	r0, [r2, #24]
   15760:	ldrd	r0, [r3, #32]
   15764:	strd	r0, [r2, #32]
   15768:	ldrd	r0, [r3, #40]	; 0x28
   1576c:	strd	r0, [r2, #40]	; 0x28
   15770:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15774:	sub	sp, fp, #4
   15778:	ldr	fp, [sp]
   1577c:	add	sp, sp, #4
   15780:	pop	{pc}		; (ldr pc, [sp], #4)
   15784:	str	fp, [sp, #-8]!
   15788:	str	lr, [sp, #4]
   1578c:	add	fp, sp, #4
   15790:	sub	sp, sp, #16
   15794:	str	r0, [fp, #-16]
   15798:	str	r1, [fp, #-20]	; 0xffffffec
   1579c:	ldr	r0, [fp, #-16]
   157a0:	bl	10e24 <gettext@plt>
   157a4:	str	r0, [fp, #-8]
   157a8:	ldr	r2, [fp, #-8]
   157ac:	ldr	r3, [fp, #-16]
   157b0:	cmp	r2, r3
   157b4:	beq	157c0 <__assert_fail@plt+0x48ac>
   157b8:	ldr	r3, [fp, #-8]
   157bc:	b	15870 <__assert_fail@plt+0x495c>
   157c0:	bl	19fa4 <__assert_fail@plt+0x9090>
   157c4:	str	r0, [fp, #-12]
   157c8:	movw	r1, #48796	; 0xbe9c
   157cc:	movt	r1, #1
   157d0:	ldr	r0, [fp, #-12]
   157d4:	bl	199e4 <__assert_fail@plt+0x8ad0>
   157d8:	mov	r3, r0
   157dc:	cmp	r3, #0
   157e0:	bne	1580c <__assert_fail@plt+0x48f8>
   157e4:	ldr	r3, [fp, #-16]
   157e8:	ldrb	r3, [r3]
   157ec:	cmp	r3, #96	; 0x60
   157f0:	bne	15800 <__assert_fail@plt+0x48ec>
   157f4:	movw	r3, #48804	; 0xbea4
   157f8:	movt	r3, #1
   157fc:	b	15870 <__assert_fail@plt+0x495c>
   15800:	movw	r3, #48808	; 0xbea8
   15804:	movt	r3, #1
   15808:	b	15870 <__assert_fail@plt+0x495c>
   1580c:	movw	r1, #48812	; 0xbeac
   15810:	movt	r1, #1
   15814:	ldr	r0, [fp, #-12]
   15818:	bl	199e4 <__assert_fail@plt+0x8ad0>
   1581c:	mov	r3, r0
   15820:	cmp	r3, #0
   15824:	bne	15850 <__assert_fail@plt+0x493c>
   15828:	ldr	r3, [fp, #-16]
   1582c:	ldrb	r3, [r3]
   15830:	cmp	r3, #96	; 0x60
   15834:	bne	15844 <__assert_fail@plt+0x4930>
   15838:	movw	r3, #48820	; 0xbeb4
   1583c:	movt	r3, #1
   15840:	b	15870 <__assert_fail@plt+0x495c>
   15844:	movw	r3, #48824	; 0xbeb8
   15848:	movt	r3, #1
   1584c:	b	15870 <__assert_fail@plt+0x495c>
   15850:	ldr	r3, [fp, #-20]	; 0xffffffec
   15854:	cmp	r3, #9
   15858:	bne	15868 <__assert_fail@plt+0x4954>
   1585c:	movw	r3, #48828	; 0xbebc
   15860:	movt	r3, #1
   15864:	b	15870 <__assert_fail@plt+0x495c>
   15868:	movw	r3, #48832	; 0xbec0
   1586c:	movt	r3, #1
   15870:	mov	r0, r3
   15874:	sub	sp, fp, #4
   15878:	ldr	fp, [sp]
   1587c:	add	sp, sp, #4
   15880:	pop	{pc}		; (ldr pc, [sp], #4)
   15884:	str	r4, [sp, #-12]!
   15888:	str	fp, [sp, #4]
   1588c:	str	lr, [sp, #8]
   15890:	add	fp, sp, #8
   15894:	sub	sp, sp, #116	; 0x74
   15898:	str	r0, [fp, #-88]	; 0xffffffa8
   1589c:	str	r1, [fp, #-92]	; 0xffffffa4
   158a0:	str	r2, [fp, #-96]	; 0xffffffa0
   158a4:	str	r3, [fp, #-100]	; 0xffffff9c
   158a8:	mov	r3, #0
   158ac:	str	r3, [fp, #-20]	; 0xffffffec
   158b0:	mov	r3, #0
   158b4:	str	r3, [fp, #-24]	; 0xffffffe8
   158b8:	mov	r3, #0
   158bc:	str	r3, [fp, #-28]	; 0xffffffe4
   158c0:	mov	r3, #0
   158c4:	str	r3, [fp, #-32]	; 0xffffffe0
   158c8:	mov	r3, #0
   158cc:	strb	r3, [fp, #-33]	; 0xffffffdf
   158d0:	bl	10d94 <__ctype_get_mb_cur_max@plt>
   158d4:	mov	r3, r0
   158d8:	cmp	r3, #1
   158dc:	moveq	r3, #1
   158e0:	movne	r3, #0
   158e4:	strb	r3, [fp, #-57]	; 0xffffffc7
   158e8:	ldr	r3, [fp, #8]
   158ec:	and	r3, r3, #2
   158f0:	cmp	r3, #0
   158f4:	movne	r3, #1
   158f8:	moveq	r3, #0
   158fc:	strb	r3, [fp, #-34]	; 0xffffffde
   15900:	mov	r3, #0
   15904:	strb	r3, [fp, #-35]	; 0xffffffdd
   15908:	mov	r3, #0
   1590c:	strb	r3, [fp, #-36]	; 0xffffffdc
   15910:	mov	r3, #1
   15914:	strb	r3, [fp, #-37]	; 0xffffffdb
   15918:	ldr	r3, [fp, #4]
   1591c:	cmp	r3, #10
   15920:	ldrls	pc, [pc, r3, lsl #2]
   15924:	b	15b3c <__assert_fail@plt+0x4c28>
   15928:	andeq	r5, r1, r0, lsr fp
   1592c:	andeq	r5, r1, r8, lsr #21
   15930:	andeq	r5, r1, ip, asr #21
   15934:	andeq	r5, r1, r0, lsr #21
   15938:			; <UNDEFINED> instruction: 0x00015ab0
   1593c:	andeq	r5, r1, r4, ror #18
   15940:	andeq	r5, r1, r4, asr r9
   15944:	andeq	r5, r1, r8, asr #19
   15948:	ldrdeq	r5, [r1], -ip
   1594c:	ldrdeq	r5, [r1], -ip
   15950:	ldrdeq	r5, [r1], -ip
   15954:	mov	r3, #5
   15958:	str	r3, [fp, #4]
   1595c:	mov	r3, #1
   15960:	strb	r3, [fp, #-34]	; 0xffffffde
   15964:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15968:	eor	r3, r3, #1
   1596c:	uxtb	r3, r3
   15970:	cmp	r3, #0
   15974:	beq	159a8 <__assert_fail@plt+0x4a94>
   15978:	ldr	r2, [fp, #-20]	; 0xffffffec
   1597c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15980:	cmp	r2, r3
   15984:	bcs	1599c <__assert_fail@plt+0x4a88>
   15988:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1598c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15990:	add	r3, r2, r3
   15994:	mov	r2, #34	; 0x22
   15998:	strb	r2, [r3]
   1599c:	ldr	r3, [fp, #-20]	; 0xffffffec
   159a0:	add	r3, r3, #1
   159a4:	str	r3, [fp, #-20]	; 0xffffffec
   159a8:	mov	r3, #1
   159ac:	strb	r3, [fp, #-33]	; 0xffffffdf
   159b0:	movw	r3, #48828	; 0xbebc
   159b4:	movt	r3, #1
   159b8:	str	r3, [fp, #-28]	; 0xffffffe4
   159bc:	mov	r3, #1
   159c0:	str	r3, [fp, #-32]	; 0xffffffe0
   159c4:	b	15b40 <__assert_fail@plt+0x4c2c>
   159c8:	mov	r3, #1
   159cc:	strb	r3, [fp, #-33]	; 0xffffffdf
   159d0:	mov	r3, #0
   159d4:	strb	r3, [fp, #-34]	; 0xffffffde
   159d8:	b	15b40 <__assert_fail@plt+0x4c2c>
   159dc:	ldr	r3, [fp, #4]
   159e0:	cmp	r3, #10
   159e4:	beq	15a10 <__assert_fail@plt+0x4afc>
   159e8:	ldr	r1, [fp, #4]
   159ec:	movw	r0, #48836	; 0xbec4
   159f0:	movt	r0, #1
   159f4:	bl	15784 <__assert_fail@plt+0x4870>
   159f8:	str	r0, [fp, #16]
   159fc:	ldr	r1, [fp, #4]
   15a00:	movw	r0, #48832	; 0xbec0
   15a04:	movt	r0, #1
   15a08:	bl	15784 <__assert_fail@plt+0x4870>
   15a0c:	str	r0, [fp, #20]
   15a10:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15a14:	eor	r3, r3, #1
   15a18:	uxtb	r3, r3
   15a1c:	cmp	r3, #0
   15a20:	beq	15a80 <__assert_fail@plt+0x4b6c>
   15a24:	ldr	r3, [fp, #16]
   15a28:	str	r3, [fp, #-28]	; 0xffffffe4
   15a2c:	b	15a70 <__assert_fail@plt+0x4b5c>
   15a30:	ldr	r2, [fp, #-20]	; 0xffffffec
   15a34:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15a38:	cmp	r2, r3
   15a3c:	bcs	15a58 <__assert_fail@plt+0x4b44>
   15a40:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15a44:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a48:	add	r3, r2, r3
   15a4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15a50:	ldrb	r2, [r2]
   15a54:	strb	r2, [r3]
   15a58:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a5c:	add	r3, r3, #1
   15a60:	str	r3, [fp, #-20]	; 0xffffffec
   15a64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15a68:	add	r3, r3, #1
   15a6c:	str	r3, [fp, #-28]	; 0xffffffe4
   15a70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15a74:	ldrb	r3, [r3]
   15a78:	cmp	r3, #0
   15a7c:	bne	15a30 <__assert_fail@plt+0x4b1c>
   15a80:	mov	r3, #1
   15a84:	strb	r3, [fp, #-33]	; 0xffffffdf
   15a88:	ldr	r3, [fp, #20]
   15a8c:	str	r3, [fp, #-28]	; 0xffffffe4
   15a90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15a94:	bl	10e30 <strlen@plt>
   15a98:	str	r0, [fp, #-32]	; 0xffffffe0
   15a9c:	b	15b40 <__assert_fail@plt+0x4c2c>
   15aa0:	mov	r3, #1
   15aa4:	strb	r3, [fp, #-33]	; 0xffffffdf
   15aa8:	mov	r3, #1
   15aac:	strb	r3, [fp, #-34]	; 0xffffffde
   15ab0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15ab4:	eor	r3, r3, #1
   15ab8:	uxtb	r3, r3
   15abc:	cmp	r3, #0
   15ac0:	beq	15acc <__assert_fail@plt+0x4bb8>
   15ac4:	mov	r3, #1
   15ac8:	strb	r3, [fp, #-33]	; 0xffffffdf
   15acc:	mov	r3, #2
   15ad0:	str	r3, [fp, #4]
   15ad4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15ad8:	eor	r3, r3, #1
   15adc:	uxtb	r3, r3
   15ae0:	cmp	r3, #0
   15ae4:	beq	15b18 <__assert_fail@plt+0x4c04>
   15ae8:	ldr	r2, [fp, #-20]	; 0xffffffec
   15aec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15af0:	cmp	r2, r3
   15af4:	bcs	15b0c <__assert_fail@plt+0x4bf8>
   15af8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15afc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b00:	add	r3, r2, r3
   15b04:	mov	r2, #39	; 0x27
   15b08:	strb	r2, [r3]
   15b0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b10:	add	r3, r3, #1
   15b14:	str	r3, [fp, #-20]	; 0xffffffec
   15b18:	movw	r3, #48832	; 0xbec0
   15b1c:	movt	r3, #1
   15b20:	str	r3, [fp, #-28]	; 0xffffffe4
   15b24:	mov	r3, #1
   15b28:	str	r3, [fp, #-32]	; 0xffffffe0
   15b2c:	b	15b40 <__assert_fail@plt+0x4c2c>
   15b30:	mov	r3, #0
   15b34:	strb	r3, [fp, #-34]	; 0xffffffde
   15b38:	b	15b40 <__assert_fail@plt+0x4c2c>
   15b3c:	bl	10efc <abort@plt>
   15b40:	mov	r3, #0
   15b44:	str	r3, [fp, #-16]
   15b48:	b	16ce4 <__assert_fail@plt+0x5dd0>
   15b4c:	mov	r3, #0
   15b50:	strb	r3, [fp, #-40]	; 0xffffffd8
   15b54:	mov	r3, #0
   15b58:	strb	r3, [fp, #-41]	; 0xffffffd7
   15b5c:	mov	r3, #0
   15b60:	strb	r3, [fp, #-42]	; 0xffffffd6
   15b64:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15b68:	cmp	r3, #0
   15b6c:	beq	15c08 <__assert_fail@plt+0x4cf4>
   15b70:	ldr	r3, [fp, #4]
   15b74:	cmp	r3, #2
   15b78:	beq	15c08 <__assert_fail@plt+0x4cf4>
   15b7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b80:	cmp	r3, #0
   15b84:	beq	15c08 <__assert_fail@plt+0x4cf4>
   15b88:	ldr	r2, [fp, #-16]
   15b8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b90:	add	r4, r2, r3
   15b94:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15b98:	cmn	r3, #1
   15b9c:	bne	15bc0 <__assert_fail@plt+0x4cac>
   15ba0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15ba4:	cmp	r3, #1
   15ba8:	bls	15bc0 <__assert_fail@plt+0x4cac>
   15bac:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15bb0:	bl	10e30 <strlen@plt>
   15bb4:	str	r0, [fp, #-100]	; 0xffffff9c
   15bb8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15bbc:	b	15bc4 <__assert_fail@plt+0x4cb0>
   15bc0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15bc4:	cmp	r3, r4
   15bc8:	bcc	15c08 <__assert_fail@plt+0x4cf4>
   15bcc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15bd0:	ldr	r3, [fp, #-16]
   15bd4:	add	r3, r2, r3
   15bd8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15bdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15be0:	mov	r0, r3
   15be4:	bl	10d34 <memcmp@plt>
   15be8:	mov	r3, r0
   15bec:	cmp	r3, #0
   15bf0:	bne	15c08 <__assert_fail@plt+0x4cf4>
   15bf4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15bf8:	cmp	r3, #0
   15bfc:	bne	16ea0 <__assert_fail@plt+0x5f8c>
   15c00:	mov	r3, #1
   15c04:	strb	r3, [fp, #-40]	; 0xffffffd8
   15c08:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15c0c:	ldr	r3, [fp, #-16]
   15c10:	add	r3, r2, r3
   15c14:	ldrb	r3, [r3]
   15c18:	strb	r3, [fp, #-38]	; 0xffffffda
   15c1c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15c20:	cmp	r3, #126	; 0x7e
   15c24:	ldrls	pc, [pc, r3, lsl #2]
   15c28:	b	16460 <__assert_fail@plt+0x554c>
   15c2c:	andeq	r5, r1, r8, lsr #28
   15c30:	andeq	r6, r1, r0, ror #8
   15c34:	andeq	r6, r1, r0, ror #8
   15c38:	andeq	r6, r1, r0, ror #8
   15c3c:	andeq	r6, r1, r0, ror #8
   15c40:	andeq	r6, r1, r0, ror #8
   15c44:	andeq	r6, r1, r0, ror #8
   15c48:	andeq	r6, r1, ip, lsl r2
   15c4c:	andeq	r6, r1, r8, lsr #4
   15c50:	andeq	r6, r1, r8, asr r2
   15c54:	andeq	r6, r1, r0, asr #4
   15c58:	andeq	r6, r1, r4, ror #4
   15c5c:	andeq	r6, r1, r4, lsr r2
   15c60:	andeq	r6, r1, ip, asr #4
   15c64:	andeq	r6, r1, r0, ror #8
   15c68:	andeq	r6, r1, r0, ror #8
   15c6c:	andeq	r6, r1, r0, ror #8
   15c70:	andeq	r6, r1, r0, ror #8
   15c74:	andeq	r6, r1, r0, ror #8
   15c78:	andeq	r6, r1, r0, ror #8
   15c7c:	andeq	r6, r1, r0, ror #8
   15c80:	andeq	r6, r1, r0, ror #8
   15c84:	andeq	r6, r1, r0, ror #8
   15c88:	andeq	r6, r1, r0, ror #8
   15c8c:	andeq	r6, r1, r0, ror #8
   15c90:	andeq	r6, r1, r0, ror #8
   15c94:	andeq	r6, r1, r0, ror #8
   15c98:	andeq	r6, r1, r0, ror #8
   15c9c:	andeq	r6, r1, r0, ror #8
   15ca0:	andeq	r6, r1, r0, ror #8
   15ca4:	andeq	r6, r1, r0, ror #8
   15ca8:	andeq	r6, r1, r0, ror #8
   15cac:	andeq	r6, r1, r4, asr #6
   15cb0:	andeq	r6, r1, ip, asr #6
   15cb4:	andeq	r6, r1, ip, asr #6
   15cb8:	andeq	r6, r1, r8, lsr r3
   15cbc:	andeq	r6, r1, ip, asr #6
   15cc0:	andeq	r6, r1, r4, asr r4
   15cc4:	andeq	r6, r1, ip, asr #6
   15cc8:	andeq	r6, r1, r8, ror #6
   15ccc:	andeq	r6, r1, ip, asr #6
   15cd0:	andeq	r6, r1, ip, asr #6
   15cd4:	andeq	r6, r1, ip, asr #6
   15cd8:	andeq	r6, r1, r4, asr r4
   15cdc:	andeq	r6, r1, r4, asr r4
   15ce0:	andeq	r6, r1, r4, asr r4
   15ce4:	andeq	r6, r1, r4, asr r4
   15ce8:	andeq	r6, r1, r4, asr r4
   15cec:	andeq	r6, r1, r4, asr r4
   15cf0:	andeq	r6, r1, r4, asr r4
   15cf4:	andeq	r6, r1, r4, asr r4
   15cf8:	andeq	r6, r1, r4, asr r4
   15cfc:	andeq	r6, r1, r4, asr r4
   15d00:	andeq	r6, r1, r4, asr r4
   15d04:	andeq	r6, r1, r4, asr r4
   15d08:	andeq	r6, r1, r4, asr r4
   15d0c:	andeq	r6, r1, r4, asr r4
   15d10:	andeq	r6, r1, r4, asr r4
   15d14:	andeq	r6, r1, r4, asr r4
   15d18:	andeq	r6, r1, ip, asr #6
   15d1c:	andeq	r6, r1, ip, asr #6
   15d20:	andeq	r6, r1, ip, asr #6
   15d24:	andeq	r6, r1, ip, asr #6
   15d28:	andeq	r6, r1, r8
   15d2c:	andeq	r6, r1, r0, ror #8
   15d30:	andeq	r6, r1, r4, asr r4
   15d34:	andeq	r6, r1, r4, asr r4
   15d38:	andeq	r6, r1, r4, asr r4
   15d3c:	andeq	r6, r1, r4, asr r4
   15d40:	andeq	r6, r1, r4, asr r4
   15d44:	andeq	r6, r1, r4, asr r4
   15d48:	andeq	r6, r1, r4, asr r4
   15d4c:	andeq	r6, r1, r4, asr r4
   15d50:	andeq	r6, r1, r4, asr r4
   15d54:	andeq	r6, r1, r4, asr r4
   15d58:	andeq	r6, r1, r4, asr r4
   15d5c:	andeq	r6, r1, r4, asr r4
   15d60:	andeq	r6, r1, r4, asr r4
   15d64:	andeq	r6, r1, r4, asr r4
   15d68:	andeq	r6, r1, r4, asr r4
   15d6c:	andeq	r6, r1, r4, asr r4
   15d70:	andeq	r6, r1, r4, asr r4
   15d74:	andeq	r6, r1, r4, asr r4
   15d78:	andeq	r6, r1, r4, asr r4
   15d7c:	andeq	r6, r1, r4, asr r4
   15d80:	andeq	r6, r1, r4, asr r4
   15d84:	andeq	r6, r1, r4, asr r4
   15d88:	andeq	r6, r1, r4, asr r4
   15d8c:	andeq	r6, r1, r4, asr r4
   15d90:	andeq	r6, r1, r4, asr r4
   15d94:	andeq	r6, r1, r4, asr r4
   15d98:	andeq	r6, r1, ip, asr #6
   15d9c:	andeq	r6, r1, r0, ror r2
   15da0:	andeq	r6, r1, r4, asr r4
   15da4:	andeq	r6, r1, ip, asr #6
   15da8:	andeq	r6, r1, r4, asr r4
   15dac:	andeq	r6, r1, ip, asr #6
   15db0:	andeq	r6, r1, r4, asr r4
   15db4:	andeq	r6, r1, r4, asr r4
   15db8:	andeq	r6, r1, r4, asr r4
   15dbc:	andeq	r6, r1, r4, asr r4
   15dc0:	andeq	r6, r1, r4, asr r4
   15dc4:	andeq	r6, r1, r4, asr r4
   15dc8:	andeq	r6, r1, r4, asr r4
   15dcc:	andeq	r6, r1, r4, asr r4
   15dd0:	andeq	r6, r1, r4, asr r4
   15dd4:	andeq	r6, r1, r4, asr r4
   15dd8:	andeq	r6, r1, r4, asr r4
   15ddc:	andeq	r6, r1, r4, asr r4
   15de0:	andeq	r6, r1, r4, asr r4
   15de4:	andeq	r6, r1, r4, asr r4
   15de8:	andeq	r6, r1, r4, asr r4
   15dec:	andeq	r6, r1, r4, asr r4
   15df0:	andeq	r6, r1, r4, asr r4
   15df4:	andeq	r6, r1, r4, asr r4
   15df8:	andeq	r6, r1, r4, asr r4
   15dfc:	andeq	r6, r1, r4, asr r4
   15e00:	andeq	r6, r1, r4, asr r4
   15e04:	andeq	r6, r1, r4, asr r4
   15e08:	andeq	r6, r1, r4, asr r4
   15e0c:	andeq	r6, r1, r4, asr r4
   15e10:	andeq	r6, r1, r4, asr r4
   15e14:	andeq	r6, r1, r4, asr r4
   15e18:	strdeq	r6, [r1], -r0
   15e1c:	andeq	r6, r1, ip, asr #6
   15e20:	strdeq	r6, [r1], -r0
   15e24:	andeq	r6, r1, r8, lsr r3
   15e28:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15e2c:	cmp	r3, #0
   15e30:	beq	15ff4 <__assert_fail@plt+0x50e0>
   15e34:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15e38:	cmp	r3, #0
   15e3c:	bne	16ea8 <__assert_fail@plt+0x5f94>
   15e40:	mov	r3, #1
   15e44:	strb	r3, [fp, #-41]	; 0xffffffd7
   15e48:	ldr	r3, [fp, #4]
   15e4c:	cmp	r3, #2
   15e50:	bne	15f00 <__assert_fail@plt+0x4fec>
   15e54:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   15e58:	eor	r3, r3, #1
   15e5c:	uxtb	r3, r3
   15e60:	cmp	r3, #0
   15e64:	beq	15f00 <__assert_fail@plt+0x4fec>
   15e68:	ldr	r2, [fp, #-20]	; 0xffffffec
   15e6c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15e70:	cmp	r2, r3
   15e74:	bcs	15e8c <__assert_fail@plt+0x4f78>
   15e78:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15e7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e80:	add	r3, r2, r3
   15e84:	mov	r2, #39	; 0x27
   15e88:	strb	r2, [r3]
   15e8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e90:	add	r3, r3, #1
   15e94:	str	r3, [fp, #-20]	; 0xffffffec
   15e98:	ldr	r2, [fp, #-20]	; 0xffffffec
   15e9c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15ea0:	cmp	r2, r3
   15ea4:	bcs	15ebc <__assert_fail@plt+0x4fa8>
   15ea8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15eac:	ldr	r3, [fp, #-20]	; 0xffffffec
   15eb0:	add	r3, r2, r3
   15eb4:	mov	r2, #36	; 0x24
   15eb8:	strb	r2, [r3]
   15ebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ec0:	add	r3, r3, #1
   15ec4:	str	r3, [fp, #-20]	; 0xffffffec
   15ec8:	ldr	r2, [fp, #-20]	; 0xffffffec
   15ecc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15ed0:	cmp	r2, r3
   15ed4:	bcs	15eec <__assert_fail@plt+0x4fd8>
   15ed8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15edc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ee0:	add	r3, r2, r3
   15ee4:	mov	r2, #39	; 0x27
   15ee8:	strb	r2, [r3]
   15eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ef0:	add	r3, r3, #1
   15ef4:	str	r3, [fp, #-20]	; 0xffffffec
   15ef8:	mov	r3, #1
   15efc:	strb	r3, [fp, #-35]	; 0xffffffdd
   15f00:	ldr	r2, [fp, #-20]	; 0xffffffec
   15f04:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15f08:	cmp	r2, r3
   15f0c:	bcs	15f24 <__assert_fail@plt+0x5010>
   15f10:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15f14:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f18:	add	r3, r2, r3
   15f1c:	mov	r2, #92	; 0x5c
   15f20:	strb	r2, [r3]
   15f24:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f28:	add	r3, r3, #1
   15f2c:	str	r3, [fp, #-20]	; 0xffffffec
   15f30:	ldr	r3, [fp, #4]
   15f34:	cmp	r3, #2
   15f38:	beq	15fe8 <__assert_fail@plt+0x50d4>
   15f3c:	ldr	r3, [fp, #-16]
   15f40:	add	r3, r3, #1
   15f44:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15f48:	cmp	r2, r3
   15f4c:	bls	15fe8 <__assert_fail@plt+0x50d4>
   15f50:	ldr	r3, [fp, #-16]
   15f54:	add	r3, r3, #1
   15f58:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15f5c:	add	r3, r2, r3
   15f60:	ldrb	r3, [r3]
   15f64:	cmp	r3, #47	; 0x2f
   15f68:	bls	15fe8 <__assert_fail@plt+0x50d4>
   15f6c:	ldr	r3, [fp, #-16]
   15f70:	add	r3, r3, #1
   15f74:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15f78:	add	r3, r2, r3
   15f7c:	ldrb	r3, [r3]
   15f80:	cmp	r3, #57	; 0x39
   15f84:	bhi	15fe8 <__assert_fail@plt+0x50d4>
   15f88:	ldr	r2, [fp, #-20]	; 0xffffffec
   15f8c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15f90:	cmp	r2, r3
   15f94:	bcs	15fac <__assert_fail@plt+0x5098>
   15f98:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15f9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15fa0:	add	r3, r2, r3
   15fa4:	mov	r2, #48	; 0x30
   15fa8:	strb	r2, [r3]
   15fac:	ldr	r3, [fp, #-20]	; 0xffffffec
   15fb0:	add	r3, r3, #1
   15fb4:	str	r3, [fp, #-20]	; 0xffffffec
   15fb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   15fbc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15fc0:	cmp	r2, r3
   15fc4:	bcs	15fdc <__assert_fail@plt+0x50c8>
   15fc8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15fcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15fd0:	add	r3, r2, r3
   15fd4:	mov	r2, #48	; 0x30
   15fd8:	strb	r2, [r3]
   15fdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15fe0:	add	r3, r3, #1
   15fe4:	str	r3, [fp, #-20]	; 0xffffffec
   15fe8:	mov	r3, #48	; 0x30
   15fec:	strb	r3, [fp, #-38]	; 0xffffffda
   15ff0:	b	16a30 <__assert_fail@plt+0x5b1c>
   15ff4:	ldr	r3, [fp, #8]
   15ff8:	and	r3, r3, #1
   15ffc:	cmp	r3, #0
   16000:	beq	16a30 <__assert_fail@plt+0x5b1c>
   16004:	b	16cd8 <__assert_fail@plt+0x5dc4>
   16008:	ldr	r3, [fp, #4]
   1600c:	cmp	r3, #2
   16010:	beq	16024 <__assert_fail@plt+0x5110>
   16014:	ldr	r3, [fp, #4]
   16018:	cmp	r3, #5
   1601c:	beq	16034 <__assert_fail@plt+0x5120>
   16020:	b	16218 <__assert_fail@plt+0x5304>
   16024:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16028:	cmp	r3, #0
   1602c:	beq	1620c <__assert_fail@plt+0x52f8>
   16030:	b	16edc <__assert_fail@plt+0x5fc8>
   16034:	ldr	r3, [fp, #8]
   16038:	and	r3, r3, #4
   1603c:	cmp	r3, #0
   16040:	beq	16214 <__assert_fail@plt+0x5300>
   16044:	ldr	r3, [fp, #-16]
   16048:	add	r3, r3, #2
   1604c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16050:	cmp	r2, r3
   16054:	bls	16214 <__assert_fail@plt+0x5300>
   16058:	ldr	r3, [fp, #-16]
   1605c:	add	r3, r3, #1
   16060:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16064:	add	r3, r2, r3
   16068:	ldrb	r3, [r3]
   1606c:	cmp	r3, #63	; 0x3f
   16070:	bne	16214 <__assert_fail@plt+0x5300>
   16074:	ldr	r3, [fp, #-16]
   16078:	add	r3, r3, #2
   1607c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16080:	add	r3, r2, r3
   16084:	ldrb	r3, [r3]
   16088:	sub	r3, r3, #33	; 0x21
   1608c:	cmp	r3, #29
   16090:	ldrls	pc, [pc, r3, lsl #2]
   16094:	b	16204 <__assert_fail@plt+0x52f0>
   16098:	andeq	r6, r1, r0, lsl r1
   1609c:	andeq	r6, r1, r4, lsl #4
   160a0:	andeq	r6, r1, r4, lsl #4
   160a4:	andeq	r6, r1, r4, lsl #4
   160a8:	andeq	r6, r1, r4, lsl #4
   160ac:	andeq	r6, r1, r4, lsl #4
   160b0:	andeq	r6, r1, r0, lsl r1
   160b4:	andeq	r6, r1, r0, lsl r1
   160b8:	andeq	r6, r1, r0, lsl r1
   160bc:	andeq	r6, r1, r4, lsl #4
   160c0:	andeq	r6, r1, r4, lsl #4
   160c4:	andeq	r6, r1, r4, lsl #4
   160c8:	andeq	r6, r1, r0, lsl r1
   160cc:	andeq	r6, r1, r4, lsl #4
   160d0:	andeq	r6, r1, r0, lsl r1
   160d4:	andeq	r6, r1, r4, lsl #4
   160d8:	andeq	r6, r1, r4, lsl #4
   160dc:	andeq	r6, r1, r4, lsl #4
   160e0:	andeq	r6, r1, r4, lsl #4
   160e4:	andeq	r6, r1, r4, lsl #4
   160e8:	andeq	r6, r1, r4, lsl #4
   160ec:	andeq	r6, r1, r4, lsl #4
   160f0:	andeq	r6, r1, r4, lsl #4
   160f4:	andeq	r6, r1, r4, lsl #4
   160f8:	andeq	r6, r1, r4, lsl #4
   160fc:	andeq	r6, r1, r4, lsl #4
   16100:	andeq	r6, r1, r4, lsl #4
   16104:	andeq	r6, r1, r0, lsl r1
   16108:	andeq	r6, r1, r0, lsl r1
   1610c:	andeq	r6, r1, r0, lsl r1
   16110:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16114:	cmp	r3, #0
   16118:	bne	16eb0 <__assert_fail@plt+0x5f9c>
   1611c:	ldr	r3, [fp, #-16]
   16120:	add	r3, r3, #2
   16124:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16128:	add	r3, r2, r3
   1612c:	ldrb	r3, [r3]
   16130:	strb	r3, [fp, #-38]	; 0xffffffda
   16134:	ldr	r3, [fp, #-16]
   16138:	add	r3, r3, #2
   1613c:	str	r3, [fp, #-16]
   16140:	ldr	r2, [fp, #-20]	; 0xffffffec
   16144:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16148:	cmp	r2, r3
   1614c:	bcs	16164 <__assert_fail@plt+0x5250>
   16150:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16154:	ldr	r3, [fp, #-20]	; 0xffffffec
   16158:	add	r3, r2, r3
   1615c:	mov	r2, #63	; 0x3f
   16160:	strb	r2, [r3]
   16164:	ldr	r3, [fp, #-20]	; 0xffffffec
   16168:	add	r3, r3, #1
   1616c:	str	r3, [fp, #-20]	; 0xffffffec
   16170:	ldr	r2, [fp, #-20]	; 0xffffffec
   16174:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16178:	cmp	r2, r3
   1617c:	bcs	16194 <__assert_fail@plt+0x5280>
   16180:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16184:	ldr	r3, [fp, #-20]	; 0xffffffec
   16188:	add	r3, r2, r3
   1618c:	mov	r2, #34	; 0x22
   16190:	strb	r2, [r3]
   16194:	ldr	r3, [fp, #-20]	; 0xffffffec
   16198:	add	r3, r3, #1
   1619c:	str	r3, [fp, #-20]	; 0xffffffec
   161a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   161a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   161a8:	cmp	r2, r3
   161ac:	bcs	161c4 <__assert_fail@plt+0x52b0>
   161b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   161b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   161b8:	add	r3, r2, r3
   161bc:	mov	r2, #34	; 0x22
   161c0:	strb	r2, [r3]
   161c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   161c8:	add	r3, r3, #1
   161cc:	str	r3, [fp, #-20]	; 0xffffffec
   161d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   161d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   161d8:	cmp	r2, r3
   161dc:	bcs	161f4 <__assert_fail@plt+0x52e0>
   161e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   161e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   161e8:	add	r3, r2, r3
   161ec:	mov	r2, #63	; 0x3f
   161f0:	strb	r2, [r3]
   161f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   161f8:	add	r3, r3, #1
   161fc:	str	r3, [fp, #-20]	; 0xffffffec
   16200:	b	16208 <__assert_fail@plt+0x52f4>
   16204:	nop	{0}
   16208:	b	16214 <__assert_fail@plt+0x5300>
   1620c:	nop	{0}
   16210:	b	16a64 <__assert_fail@plt+0x5b50>
   16214:	nop	{0}
   16218:	b	16a64 <__assert_fail@plt+0x5b50>
   1621c:	mov	r3, #97	; 0x61
   16220:	strb	r3, [fp, #-39]	; 0xffffffd9
   16224:	b	162d8 <__assert_fail@plt+0x53c4>
   16228:	mov	r3, #98	; 0x62
   1622c:	strb	r3, [fp, #-39]	; 0xffffffd9
   16230:	b	162d8 <__assert_fail@plt+0x53c4>
   16234:	mov	r3, #102	; 0x66
   16238:	strb	r3, [fp, #-39]	; 0xffffffd9
   1623c:	b	162d8 <__assert_fail@plt+0x53c4>
   16240:	mov	r3, #110	; 0x6e
   16244:	strb	r3, [fp, #-39]	; 0xffffffd9
   16248:	b	162bc <__assert_fail@plt+0x53a8>
   1624c:	mov	r3, #114	; 0x72
   16250:	strb	r3, [fp, #-39]	; 0xffffffd9
   16254:	b	162bc <__assert_fail@plt+0x53a8>
   16258:	mov	r3, #116	; 0x74
   1625c:	strb	r3, [fp, #-39]	; 0xffffffd9
   16260:	b	162bc <__assert_fail@plt+0x53a8>
   16264:	mov	r3, #118	; 0x76
   16268:	strb	r3, [fp, #-39]	; 0xffffffd9
   1626c:	b	162d8 <__assert_fail@plt+0x53c4>
   16270:	ldrb	r3, [fp, #-38]	; 0xffffffda
   16274:	strb	r3, [fp, #-39]	; 0xffffffd9
   16278:	ldr	r3, [fp, #4]
   1627c:	cmp	r3, #2
   16280:	bne	16294 <__assert_fail@plt+0x5380>
   16284:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16288:	cmp	r3, #0
   1628c:	beq	16bf0 <__assert_fail@plt+0x5cdc>
   16290:	b	16edc <__assert_fail@plt+0x5fc8>
   16294:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   16298:	cmp	r3, #0
   1629c:	beq	162b8 <__assert_fail@plt+0x53a4>
   162a0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   162a4:	cmp	r3, #0
   162a8:	beq	162b8 <__assert_fail@plt+0x53a4>
   162ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   162b0:	cmp	r3, #0
   162b4:	bne	16bf8 <__assert_fail@plt+0x5ce4>
   162b8:	nop	{0}
   162bc:	ldr	r3, [fp, #4]
   162c0:	cmp	r3, #2
   162c4:	bne	162d4 <__assert_fail@plt+0x53c0>
   162c8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   162cc:	cmp	r3, #0
   162d0:	bne	16eb8 <__assert_fail@plt+0x5fa4>
   162d4:	nop	{0}
   162d8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   162dc:	cmp	r3, #0
   162e0:	beq	16a38 <__assert_fail@plt+0x5b24>
   162e4:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   162e8:	strb	r3, [fp, #-38]	; 0xffffffda
   162ec:	b	16af0 <__assert_fail@plt+0x5bdc>
   162f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   162f4:	cmn	r3, #1
   162f8:	bne	1631c <__assert_fail@plt+0x5408>
   162fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16300:	add	r3, r3, #1
   16304:	ldrb	r3, [r3]
   16308:	cmp	r3, #0
   1630c:	movne	r3, #1
   16310:	moveq	r3, #0
   16314:	uxtb	r3, r3
   16318:	b	16330 <__assert_fail@plt+0x541c>
   1631c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16320:	cmp	r3, #1
   16324:	movne	r3, #1
   16328:	moveq	r3, #0
   1632c:	uxtb	r3, r3
   16330:	cmp	r3, #0
   16334:	bne	16a40 <__assert_fail@plt+0x5b2c>
   16338:	ldr	r3, [fp, #-16]
   1633c:	cmp	r3, #0
   16340:	bne	16a48 <__assert_fail@plt+0x5b34>
   16344:	mov	r3, #1
   16348:	strb	r3, [fp, #-42]	; 0xffffffd6
   1634c:	ldr	r3, [fp, #4]
   16350:	cmp	r3, #2
   16354:	bne	16a50 <__assert_fail@plt+0x5b3c>
   16358:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1635c:	cmp	r3, #0
   16360:	beq	16a50 <__assert_fail@plt+0x5b3c>
   16364:	b	16edc <__assert_fail@plt+0x5fc8>
   16368:	mov	r3, #1
   1636c:	strb	r3, [fp, #-36]	; 0xffffffdc
   16370:	mov	r3, #1
   16374:	strb	r3, [fp, #-42]	; 0xffffffd6
   16378:	ldr	r3, [fp, #4]
   1637c:	cmp	r3, #2
   16380:	bne	16a58 <__assert_fail@plt+0x5b44>
   16384:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16388:	cmp	r3, #0
   1638c:	bne	16ec0 <__assert_fail@plt+0x5fac>
   16390:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16394:	cmp	r3, #0
   16398:	beq	163b8 <__assert_fail@plt+0x54a4>
   1639c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163a0:	cmp	r3, #0
   163a4:	bne	163b8 <__assert_fail@plt+0x54a4>
   163a8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   163ac:	str	r3, [fp, #-24]	; 0xffffffe8
   163b0:	mov	r3, #0
   163b4:	str	r3, [fp, #-92]	; 0xffffffa4
   163b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   163bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   163c0:	cmp	r2, r3
   163c4:	bcs	163dc <__assert_fail@plt+0x54c8>
   163c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   163cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   163d0:	add	r3, r2, r3
   163d4:	mov	r2, #39	; 0x27
   163d8:	strb	r2, [r3]
   163dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   163e0:	add	r3, r3, #1
   163e4:	str	r3, [fp, #-20]	; 0xffffffec
   163e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   163ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   163f0:	cmp	r2, r3
   163f4:	bcs	1640c <__assert_fail@plt+0x54f8>
   163f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   163fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   16400:	add	r3, r2, r3
   16404:	mov	r2, #92	; 0x5c
   16408:	strb	r2, [r3]
   1640c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16410:	add	r3, r3, #1
   16414:	str	r3, [fp, #-20]	; 0xffffffec
   16418:	ldr	r2, [fp, #-20]	; 0xffffffec
   1641c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16420:	cmp	r2, r3
   16424:	bcs	1643c <__assert_fail@plt+0x5528>
   16428:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1642c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16430:	add	r3, r2, r3
   16434:	mov	r2, #39	; 0x27
   16438:	strb	r2, [r3]
   1643c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16440:	add	r3, r3, #1
   16444:	str	r3, [fp, #-20]	; 0xffffffec
   16448:	mov	r3, #0
   1644c:	strb	r3, [fp, #-35]	; 0xffffffdd
   16450:	b	16a58 <__assert_fail@plt+0x5b44>
   16454:	mov	r3, #1
   16458:	strb	r3, [fp, #-42]	; 0xffffffd6
   1645c:	b	16a64 <__assert_fail@plt+0x5b50>
   16460:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   16464:	cmp	r3, #0
   16468:	beq	164a8 <__assert_fail@plt+0x5594>
   1646c:	mov	r3, #1
   16470:	str	r3, [fp, #-48]	; 0xffffffd0
   16474:	bl	10e0c <__ctype_b_loc@plt>
   16478:	mov	r3, r0
   1647c:	ldr	r2, [r3]
   16480:	ldrb	r3, [fp, #-38]	; 0xffffffda
   16484:	lsl	r3, r3, #1
   16488:	add	r3, r2, r3
   1648c:	ldrh	r3, [r3]
   16490:	and	r3, r3, #16384	; 0x4000
   16494:	cmp	r3, #0
   16498:	movne	r3, #1
   1649c:	moveq	r3, #0
   164a0:	strb	r3, [fp, #-49]	; 0xffffffcf
   164a4:	b	166f4 <__assert_fail@plt+0x57e0>
   164a8:	sub	r3, fp, #76	; 0x4c
   164ac:	mov	r2, #8
   164b0:	mov	r1, #0
   164b4:	mov	r0, r3
   164b8:	bl	10e6c <memset@plt>
   164bc:	mov	r3, #0
   164c0:	str	r3, [fp, #-48]	; 0xffffffd0
   164c4:	mov	r3, #1
   164c8:	strb	r3, [fp, #-49]	; 0xffffffcf
   164cc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   164d0:	cmn	r3, #1
   164d4:	bne	164e4 <__assert_fail@plt+0x55d0>
   164d8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   164dc:	bl	10e30 <strlen@plt>
   164e0:	str	r0, [fp, #-100]	; 0xffffff9c
   164e4:	ldr	r2, [fp, #-16]
   164e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   164ec:	add	r3, r2, r3
   164f0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   164f4:	add	r1, r2, r3
   164f8:	ldr	r2, [fp, #-16]
   164fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16500:	add	r3, r2, r3
   16504:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16508:	sub	r2, r2, r3
   1650c:	sub	r3, fp, #76	; 0x4c
   16510:	sub	r0, fp, #80	; 0x50
   16514:	bl	1a00c <__assert_fail@plt+0x90f8>
   16518:	str	r0, [fp, #-64]	; 0xffffffc0
   1651c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16520:	cmp	r3, #0
   16524:	beq	166e8 <__assert_fail@plt+0x57d4>
   16528:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1652c:	cmn	r3, #1
   16530:	bne	16540 <__assert_fail@plt+0x562c>
   16534:	mov	r3, #0
   16538:	strb	r3, [fp, #-49]	; 0xffffffcf
   1653c:	b	166f4 <__assert_fail@plt+0x57e0>
   16540:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16544:	cmn	r3, #2
   16548:	bne	165a0 <__assert_fail@plt+0x568c>
   1654c:	mov	r3, #0
   16550:	strb	r3, [fp, #-49]	; 0xffffffcf
   16554:	b	16564 <__assert_fail@plt+0x5650>
   16558:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1655c:	add	r3, r3, #1
   16560:	str	r3, [fp, #-48]	; 0xffffffd0
   16564:	ldr	r2, [fp, #-16]
   16568:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1656c:	add	r3, r2, r3
   16570:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16574:	cmp	r2, r3
   16578:	bls	166f0 <__assert_fail@plt+0x57dc>
   1657c:	ldr	r2, [fp, #-16]
   16580:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16584:	add	r3, r2, r3
   16588:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1658c:	add	r3, r2, r3
   16590:	ldrb	r3, [r3]
   16594:	cmp	r3, #0
   16598:	bne	16558 <__assert_fail@plt+0x5644>
   1659c:	b	166f0 <__assert_fail@plt+0x57dc>
   165a0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   165a4:	cmp	r3, #0
   165a8:	beq	1669c <__assert_fail@plt+0x5788>
   165ac:	ldr	r3, [fp, #4]
   165b0:	cmp	r3, #2
   165b4:	bne	1669c <__assert_fail@plt+0x5788>
   165b8:	mov	r3, #1
   165bc:	str	r3, [fp, #-56]	; 0xffffffc8
   165c0:	b	1668c <__assert_fail@plt+0x5778>
   165c4:	ldr	r2, [fp, #-16]
   165c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   165cc:	add	r2, r2, r3
   165d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   165d4:	add	r3, r2, r3
   165d8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   165dc:	add	r3, r2, r3
   165e0:	ldrb	r3, [r3]
   165e4:	sub	r3, r3, #91	; 0x5b
   165e8:	cmp	r3, #33	; 0x21
   165ec:	ldrls	pc, [pc, r3, lsl #2]
   165f0:	b	1667c <__assert_fail@plt+0x5768>
   165f4:	ldrdeq	r6, [r1], -ip
   165f8:	ldrdeq	r6, [r1], -ip
   165fc:	andeq	r6, r1, ip, ror r6
   16600:	ldrdeq	r6, [r1], -ip
   16604:	andeq	r6, r1, ip, ror r6
   16608:	ldrdeq	r6, [r1], -ip
   1660c:	andeq	r6, r1, ip, ror r6
   16610:	andeq	r6, r1, ip, ror r6
   16614:	andeq	r6, r1, ip, ror r6
   16618:	andeq	r6, r1, ip, ror r6
   1661c:	andeq	r6, r1, ip, ror r6
   16620:	andeq	r6, r1, ip, ror r6
   16624:	andeq	r6, r1, ip, ror r6
   16628:	andeq	r6, r1, ip, ror r6
   1662c:	andeq	r6, r1, ip, ror r6
   16630:	andeq	r6, r1, ip, ror r6
   16634:	andeq	r6, r1, ip, ror r6
   16638:	andeq	r6, r1, ip, ror r6
   1663c:	andeq	r6, r1, ip, ror r6
   16640:	andeq	r6, r1, ip, ror r6
   16644:	andeq	r6, r1, ip, ror r6
   16648:	andeq	r6, r1, ip, ror r6
   1664c:	andeq	r6, r1, ip, ror r6
   16650:	andeq	r6, r1, ip, ror r6
   16654:	andeq	r6, r1, ip, ror r6
   16658:	andeq	r6, r1, ip, ror r6
   1665c:	andeq	r6, r1, ip, ror r6
   16660:	andeq	r6, r1, ip, ror r6
   16664:	andeq	r6, r1, ip, ror r6
   16668:	andeq	r6, r1, ip, ror r6
   1666c:	andeq	r6, r1, ip, ror r6
   16670:	andeq	r6, r1, ip, ror r6
   16674:	andeq	r6, r1, ip, ror r6
   16678:	ldrdeq	r6, [r1], -ip
   1667c:	nop	{0}
   16680:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16684:	add	r3, r3, #1
   16688:	str	r3, [fp, #-56]	; 0xffffffc8
   1668c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16690:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16694:	cmp	r2, r3
   16698:	bcc	165c4 <__assert_fail@plt+0x56b0>
   1669c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   166a0:	mov	r0, r3
   166a4:	bl	10d70 <iswprint@plt>
   166a8:	mov	r3, r0
   166ac:	cmp	r3, #0
   166b0:	bne	166bc <__assert_fail@plt+0x57a8>
   166b4:	mov	r3, #0
   166b8:	strb	r3, [fp, #-49]	; 0xffffffcf
   166bc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   166c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   166c4:	add	r3, r2, r3
   166c8:	str	r3, [fp, #-48]	; 0xffffffd0
   166cc:	sub	r3, fp, #76	; 0x4c
   166d0:	mov	r0, r3
   166d4:	bl	10d1c <mbsinit@plt>
   166d8:	mov	r3, r0
   166dc:	cmp	r3, #0
   166e0:	beq	164e4 <__assert_fail@plt+0x55d0>
   166e4:	b	166f4 <__assert_fail@plt+0x57e0>
   166e8:	nop	{0}
   166ec:	b	166f4 <__assert_fail@plt+0x57e0>
   166f0:	nop	{0}
   166f4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   166f8:	strb	r3, [fp, #-42]	; 0xffffffd6
   166fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16700:	cmp	r3, #1
   16704:	bhi	16728 <__assert_fail@plt+0x5814>
   16708:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1670c:	cmp	r3, #0
   16710:	beq	16a60 <__assert_fail@plt+0x5b4c>
   16714:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   16718:	eor	r3, r3, #1
   1671c:	uxtb	r3, r3
   16720:	cmp	r3, #0
   16724:	beq	16a60 <__assert_fail@plt+0x5b4c>
   16728:	ldr	r2, [fp, #-16]
   1672c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16730:	add	r3, r2, r3
   16734:	str	r3, [fp, #-68]	; 0xffffffbc
   16738:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1673c:	cmp	r3, #0
   16740:	beq	168f4 <__assert_fail@plt+0x59e0>
   16744:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   16748:	eor	r3, r3, #1
   1674c:	uxtb	r3, r3
   16750:	cmp	r3, #0
   16754:	beq	168f4 <__assert_fail@plt+0x59e0>
   16758:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1675c:	cmp	r3, #0
   16760:	bne	16ec8 <__assert_fail@plt+0x5fb4>
   16764:	mov	r3, #1
   16768:	strb	r3, [fp, #-41]	; 0xffffffd7
   1676c:	ldr	r3, [fp, #4]
   16770:	cmp	r3, #2
   16774:	bne	16824 <__assert_fail@plt+0x5910>
   16778:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1677c:	eor	r3, r3, #1
   16780:	uxtb	r3, r3
   16784:	cmp	r3, #0
   16788:	beq	16824 <__assert_fail@plt+0x5910>
   1678c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16790:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16794:	cmp	r2, r3
   16798:	bcs	167b0 <__assert_fail@plt+0x589c>
   1679c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   167a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   167a4:	add	r3, r2, r3
   167a8:	mov	r2, #39	; 0x27
   167ac:	strb	r2, [r3]
   167b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   167b4:	add	r3, r3, #1
   167b8:	str	r3, [fp, #-20]	; 0xffffffec
   167bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   167c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   167c4:	cmp	r2, r3
   167c8:	bcs	167e0 <__assert_fail@plt+0x58cc>
   167cc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   167d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   167d4:	add	r3, r2, r3
   167d8:	mov	r2, #36	; 0x24
   167dc:	strb	r2, [r3]
   167e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   167e4:	add	r3, r3, #1
   167e8:	str	r3, [fp, #-20]	; 0xffffffec
   167ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   167f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   167f4:	cmp	r2, r3
   167f8:	bcs	16810 <__assert_fail@plt+0x58fc>
   167fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16800:	ldr	r3, [fp, #-20]	; 0xffffffec
   16804:	add	r3, r2, r3
   16808:	mov	r2, #39	; 0x27
   1680c:	strb	r2, [r3]
   16810:	ldr	r3, [fp, #-20]	; 0xffffffec
   16814:	add	r3, r3, #1
   16818:	str	r3, [fp, #-20]	; 0xffffffec
   1681c:	mov	r3, #1
   16820:	strb	r3, [fp, #-35]	; 0xffffffdd
   16824:	ldr	r2, [fp, #-20]	; 0xffffffec
   16828:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1682c:	cmp	r2, r3
   16830:	bcs	16848 <__assert_fail@plt+0x5934>
   16834:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16838:	ldr	r3, [fp, #-20]	; 0xffffffec
   1683c:	add	r3, r2, r3
   16840:	mov	r2, #92	; 0x5c
   16844:	strb	r2, [r3]
   16848:	ldr	r3, [fp, #-20]	; 0xffffffec
   1684c:	add	r3, r3, #1
   16850:	str	r3, [fp, #-20]	; 0xffffffec
   16854:	ldr	r2, [fp, #-20]	; 0xffffffec
   16858:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1685c:	cmp	r2, r3
   16860:	bcs	16888 <__assert_fail@plt+0x5974>
   16864:	ldrb	r3, [fp, #-38]	; 0xffffffda
   16868:	lsr	r3, r3, #6
   1686c:	uxtb	r2, r3
   16870:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16874:	ldr	r3, [fp, #-20]	; 0xffffffec
   16878:	add	r3, r1, r3
   1687c:	add	r2, r2, #48	; 0x30
   16880:	uxtb	r2, r2
   16884:	strb	r2, [r3]
   16888:	ldr	r3, [fp, #-20]	; 0xffffffec
   1688c:	add	r3, r3, #1
   16890:	str	r3, [fp, #-20]	; 0xffffffec
   16894:	ldr	r2, [fp, #-20]	; 0xffffffec
   16898:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1689c:	cmp	r2, r3
   168a0:	bcs	168d0 <__assert_fail@plt+0x59bc>
   168a4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   168a8:	lsr	r3, r3, #3
   168ac:	uxtb	r3, r3
   168b0:	and	r3, r3, #7
   168b4:	uxtb	r2, r3
   168b8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   168bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   168c0:	add	r3, r1, r3
   168c4:	add	r2, r2, #48	; 0x30
   168c8:	uxtb	r2, r2
   168cc:	strb	r2, [r3]
   168d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   168d4:	add	r3, r3, #1
   168d8:	str	r3, [fp, #-20]	; 0xffffffec
   168dc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   168e0:	and	r3, r3, #7
   168e4:	uxtb	r3, r3
   168e8:	add	r3, r3, #48	; 0x30
   168ec:	strb	r3, [fp, #-38]	; 0xffffffda
   168f0:	b	16938 <__assert_fail@plt+0x5a24>
   168f4:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   168f8:	cmp	r3, #0
   168fc:	beq	16938 <__assert_fail@plt+0x5a24>
   16900:	ldr	r2, [fp, #-20]	; 0xffffffec
   16904:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16908:	cmp	r2, r3
   1690c:	bcs	16924 <__assert_fail@plt+0x5a10>
   16910:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16914:	ldr	r3, [fp, #-20]	; 0xffffffec
   16918:	add	r3, r2, r3
   1691c:	mov	r2, #92	; 0x5c
   16920:	strb	r2, [r3]
   16924:	ldr	r3, [fp, #-20]	; 0xffffffec
   16928:	add	r3, r3, #1
   1692c:	str	r3, [fp, #-20]	; 0xffffffec
   16930:	mov	r3, #0
   16934:	strb	r3, [fp, #-40]	; 0xffffffd8
   16938:	ldr	r3, [fp, #-16]
   1693c:	add	r3, r3, #1
   16940:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16944:	cmp	r2, r3
   16948:	bls	16a28 <__assert_fail@plt+0x5b14>
   1694c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   16950:	cmp	r3, #0
   16954:	beq	169d4 <__assert_fail@plt+0x5ac0>
   16958:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1695c:	eor	r3, r3, #1
   16960:	uxtb	r3, r3
   16964:	cmp	r3, #0
   16968:	beq	169d4 <__assert_fail@plt+0x5ac0>
   1696c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16970:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16974:	cmp	r2, r3
   16978:	bcs	16990 <__assert_fail@plt+0x5a7c>
   1697c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16980:	ldr	r3, [fp, #-20]	; 0xffffffec
   16984:	add	r3, r2, r3
   16988:	mov	r2, #39	; 0x27
   1698c:	strb	r2, [r3]
   16990:	ldr	r3, [fp, #-20]	; 0xffffffec
   16994:	add	r3, r3, #1
   16998:	str	r3, [fp, #-20]	; 0xffffffec
   1699c:	ldr	r2, [fp, #-20]	; 0xffffffec
   169a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   169a4:	cmp	r2, r3
   169a8:	bcs	169c0 <__assert_fail@plt+0x5aac>
   169ac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   169b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   169b4:	add	r3, r2, r3
   169b8:	mov	r2, #39	; 0x27
   169bc:	strb	r2, [r3]
   169c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   169c4:	add	r3, r3, #1
   169c8:	str	r3, [fp, #-20]	; 0xffffffec
   169cc:	mov	r3, #0
   169d0:	strb	r3, [fp, #-35]	; 0xffffffdd
   169d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   169d8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   169dc:	cmp	r2, r3
   169e0:	bcs	169f8 <__assert_fail@plt+0x5ae4>
   169e4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   169e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   169ec:	add	r3, r2, r3
   169f0:	ldrb	r2, [fp, #-38]	; 0xffffffda
   169f4:	strb	r2, [r3]
   169f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   169fc:	add	r3, r3, #1
   16a00:	str	r3, [fp, #-20]	; 0xffffffec
   16a04:	ldr	r3, [fp, #-16]
   16a08:	add	r3, r3, #1
   16a0c:	str	r3, [fp, #-16]
   16a10:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16a14:	ldr	r3, [fp, #-16]
   16a18:	add	r3, r2, r3
   16a1c:	ldrb	r3, [r3]
   16a20:	strb	r3, [fp, #-38]	; 0xffffffda
   16a24:	b	16738 <__assert_fail@plt+0x5824>
   16a28:	nop	{0}
   16a2c:	b	16c04 <__assert_fail@plt+0x5cf0>
   16a30:	nop	{0}
   16a34:	b	16a64 <__assert_fail@plt+0x5b50>
   16a38:	nop	{0}
   16a3c:	b	16a64 <__assert_fail@plt+0x5b50>
   16a40:	nop	{0}
   16a44:	b	16a64 <__assert_fail@plt+0x5b50>
   16a48:	nop	{0}
   16a4c:	b	16a64 <__assert_fail@plt+0x5b50>
   16a50:	nop	{0}
   16a54:	b	16a64 <__assert_fail@plt+0x5b50>
   16a58:	nop	{0}
   16a5c:	b	16a64 <__assert_fail@plt+0x5b50>
   16a60:	nop	{0}
   16a64:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   16a68:	eor	r3, r3, #1
   16a6c:	uxtb	r3, r3
   16a70:	cmp	r3, #0
   16a74:	bne	16a84 <__assert_fail@plt+0x5b70>
   16a78:	ldr	r3, [fp, #4]
   16a7c:	cmp	r3, #2
   16a80:	bne	16a98 <__assert_fail@plt+0x5b84>
   16a84:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16a88:	eor	r3, r3, #1
   16a8c:	uxtb	r3, r3
   16a90:	cmp	r3, #0
   16a94:	bne	16ad8 <__assert_fail@plt+0x5bc4>
   16a98:	ldr	r3, [fp, #12]
   16a9c:	cmp	r3, #0
   16aa0:	beq	16ad8 <__assert_fail@plt+0x5bc4>
   16aa4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   16aa8:	lsr	r3, r3, #5
   16aac:	uxtb	r3, r3
   16ab0:	lsl	r3, r3, #2
   16ab4:	ldr	r2, [fp, #12]
   16ab8:	add	r3, r2, r3
   16abc:	ldr	r2, [r3]
   16ac0:	ldrb	r3, [fp, #-38]	; 0xffffffda
   16ac4:	and	r3, r3, #31
   16ac8:	lsr	r3, r2, r3
   16acc:	and	r3, r3, #1
   16ad0:	cmp	r3, #0
   16ad4:	bne	16aec <__assert_fail@plt+0x5bd8>
   16ad8:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   16adc:	eor	r3, r3, #1
   16ae0:	uxtb	r3, r3
   16ae4:	cmp	r3, #0
   16ae8:	bne	16c00 <__assert_fail@plt+0x5cec>
   16aec:	nop	{0}
   16af0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16af4:	cmp	r3, #0
   16af8:	bne	16ed0 <__assert_fail@plt+0x5fbc>
   16afc:	mov	r3, #1
   16b00:	strb	r3, [fp, #-41]	; 0xffffffd7
   16b04:	ldr	r3, [fp, #4]
   16b08:	cmp	r3, #2
   16b0c:	bne	16bbc <__assert_fail@plt+0x5ca8>
   16b10:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   16b14:	eor	r3, r3, #1
   16b18:	uxtb	r3, r3
   16b1c:	cmp	r3, #0
   16b20:	beq	16bbc <__assert_fail@plt+0x5ca8>
   16b24:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b28:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16b2c:	cmp	r2, r3
   16b30:	bcs	16b48 <__assert_fail@plt+0x5c34>
   16b34:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16b38:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b3c:	add	r3, r2, r3
   16b40:	mov	r2, #39	; 0x27
   16b44:	strb	r2, [r3]
   16b48:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b4c:	add	r3, r3, #1
   16b50:	str	r3, [fp, #-20]	; 0xffffffec
   16b54:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16b5c:	cmp	r2, r3
   16b60:	bcs	16b78 <__assert_fail@plt+0x5c64>
   16b64:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16b68:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b6c:	add	r3, r2, r3
   16b70:	mov	r2, #36	; 0x24
   16b74:	strb	r2, [r3]
   16b78:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b7c:	add	r3, r3, #1
   16b80:	str	r3, [fp, #-20]	; 0xffffffec
   16b84:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b88:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16b8c:	cmp	r2, r3
   16b90:	bcs	16ba8 <__assert_fail@plt+0x5c94>
   16b94:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16b98:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b9c:	add	r3, r2, r3
   16ba0:	mov	r2, #39	; 0x27
   16ba4:	strb	r2, [r3]
   16ba8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16bac:	add	r3, r3, #1
   16bb0:	str	r3, [fp, #-20]	; 0xffffffec
   16bb4:	mov	r3, #1
   16bb8:	strb	r3, [fp, #-35]	; 0xffffffdd
   16bbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   16bc0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16bc4:	cmp	r2, r3
   16bc8:	bcs	16be0 <__assert_fail@plt+0x5ccc>
   16bcc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16bd4:	add	r3, r2, r3
   16bd8:	mov	r2, #92	; 0x5c
   16bdc:	strb	r2, [r3]
   16be0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16be4:	add	r3, r3, #1
   16be8:	str	r3, [fp, #-20]	; 0xffffffec
   16bec:	b	16c04 <__assert_fail@plt+0x5cf0>
   16bf0:	nop	{0}
   16bf4:	b	16c04 <__assert_fail@plt+0x5cf0>
   16bf8:	nop	{0}
   16bfc:	b	16c04 <__assert_fail@plt+0x5cf0>
   16c00:	nop	{0}
   16c04:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   16c08:	cmp	r3, #0
   16c0c:	beq	16c8c <__assert_fail@plt+0x5d78>
   16c10:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   16c14:	eor	r3, r3, #1
   16c18:	uxtb	r3, r3
   16c1c:	cmp	r3, #0
   16c20:	beq	16c8c <__assert_fail@plt+0x5d78>
   16c24:	ldr	r2, [fp, #-20]	; 0xffffffec
   16c28:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16c2c:	cmp	r2, r3
   16c30:	bcs	16c48 <__assert_fail@plt+0x5d34>
   16c34:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16c38:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c3c:	add	r3, r2, r3
   16c40:	mov	r2, #39	; 0x27
   16c44:	strb	r2, [r3]
   16c48:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c4c:	add	r3, r3, #1
   16c50:	str	r3, [fp, #-20]	; 0xffffffec
   16c54:	ldr	r2, [fp, #-20]	; 0xffffffec
   16c58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16c5c:	cmp	r2, r3
   16c60:	bcs	16c78 <__assert_fail@plt+0x5d64>
   16c64:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16c68:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c6c:	add	r3, r2, r3
   16c70:	mov	r2, #39	; 0x27
   16c74:	strb	r2, [r3]
   16c78:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c7c:	add	r3, r3, #1
   16c80:	str	r3, [fp, #-20]	; 0xffffffec
   16c84:	mov	r3, #0
   16c88:	strb	r3, [fp, #-35]	; 0xffffffdd
   16c8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16c90:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16c94:	cmp	r2, r3
   16c98:	bcs	16cb0 <__assert_fail@plt+0x5d9c>
   16c9c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16ca0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16ca4:	add	r3, r2, r3
   16ca8:	ldrb	r2, [fp, #-38]	; 0xffffffda
   16cac:	strb	r2, [r3]
   16cb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16cb4:	add	r3, r3, #1
   16cb8:	str	r3, [fp, #-20]	; 0xffffffec
   16cbc:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   16cc0:	eor	r3, r3, #1
   16cc4:	uxtb	r3, r3
   16cc8:	cmp	r3, #0
   16ccc:	beq	16cd8 <__assert_fail@plt+0x5dc4>
   16cd0:	mov	r3, #0
   16cd4:	strb	r3, [fp, #-37]	; 0xffffffdb
   16cd8:	ldr	r3, [fp, #-16]
   16cdc:	add	r3, r3, #1
   16ce0:	str	r3, [fp, #-16]
   16ce4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16ce8:	cmn	r3, #1
   16cec:	bne	16d14 <__assert_fail@plt+0x5e00>
   16cf0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16cf4:	ldr	r3, [fp, #-16]
   16cf8:	add	r3, r2, r3
   16cfc:	ldrb	r3, [r3]
   16d00:	cmp	r3, #0
   16d04:	movne	r3, #1
   16d08:	moveq	r3, #0
   16d0c:	uxtb	r3, r3
   16d10:	b	16d2c <__assert_fail@plt+0x5e18>
   16d14:	ldr	r2, [fp, #-16]
   16d18:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16d1c:	cmp	r2, r3
   16d20:	movne	r3, #1
   16d24:	moveq	r3, #0
   16d28:	uxtb	r3, r3
   16d2c:	cmp	r3, #0
   16d30:	bne	15b4c <__assert_fail@plt+0x4c38>
   16d34:	ldr	r3, [fp, #-20]	; 0xffffffec
   16d38:	cmp	r3, #0
   16d3c:	bne	16d58 <__assert_fail@plt+0x5e44>
   16d40:	ldr	r3, [fp, #4]
   16d44:	cmp	r3, #2
   16d48:	bne	16d58 <__assert_fail@plt+0x5e44>
   16d4c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16d50:	cmp	r3, #0
   16d54:	bne	16ed8 <__assert_fail@plt+0x5fc4>
   16d58:	ldr	r3, [fp, #4]
   16d5c:	cmp	r3, #2
   16d60:	bne	16e00 <__assert_fail@plt+0x5eec>
   16d64:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16d68:	eor	r3, r3, #1
   16d6c:	uxtb	r3, r3
   16d70:	cmp	r3, #0
   16d74:	beq	16e00 <__assert_fail@plt+0x5eec>
   16d78:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   16d7c:	cmp	r3, #0
   16d80:	beq	16e00 <__assert_fail@plt+0x5eec>
   16d84:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   16d88:	cmp	r3, #0
   16d8c:	beq	16dd4 <__assert_fail@plt+0x5ec0>
   16d90:	ldr	r3, [fp, #20]
   16d94:	str	r3, [sp, #16]
   16d98:	ldr	r3, [fp, #16]
   16d9c:	str	r3, [sp, #12]
   16da0:	ldr	r3, [fp, #12]
   16da4:	str	r3, [sp, #8]
   16da8:	ldr	r3, [fp, #8]
   16dac:	str	r3, [sp, #4]
   16db0:	mov	r3, #5
   16db4:	str	r3, [sp]
   16db8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16dbc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16dc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16dc4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16dc8:	bl	15884 <__assert_fail@plt+0x4970>
   16dcc:	mov	r3, r0
   16dd0:	b	16f40 <__assert_fail@plt+0x602c>
   16dd4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16dd8:	cmp	r3, #0
   16ddc:	bne	16e00 <__assert_fail@plt+0x5eec>
   16de0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16de4:	cmp	r3, #0
   16de8:	beq	16e00 <__assert_fail@plt+0x5eec>
   16dec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16df0:	str	r3, [fp, #-92]	; 0xffffffa4
   16df4:	mov	r3, #0
   16df8:	str	r3, [fp, #-20]	; 0xffffffec
   16dfc:	b	15918 <__assert_fail@plt+0x4a04>
   16e00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16e04:	cmp	r3, #0
   16e08:	beq	16e74 <__assert_fail@plt+0x5f60>
   16e0c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16e10:	eor	r3, r3, #1
   16e14:	uxtb	r3, r3
   16e18:	cmp	r3, #0
   16e1c:	beq	16e74 <__assert_fail@plt+0x5f60>
   16e20:	b	16e64 <__assert_fail@plt+0x5f50>
   16e24:	ldr	r2, [fp, #-20]	; 0xffffffec
   16e28:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16e2c:	cmp	r2, r3
   16e30:	bcs	16e4c <__assert_fail@plt+0x5f38>
   16e34:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16e38:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e3c:	add	r3, r2, r3
   16e40:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16e44:	ldrb	r2, [r2]
   16e48:	strb	r2, [r3]
   16e4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e50:	add	r3, r3, #1
   16e54:	str	r3, [fp, #-20]	; 0xffffffec
   16e58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16e5c:	add	r3, r3, #1
   16e60:	str	r3, [fp, #-28]	; 0xffffffe4
   16e64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16e68:	ldrb	r3, [r3]
   16e6c:	cmp	r3, #0
   16e70:	bne	16e24 <__assert_fail@plt+0x5f10>
   16e74:	ldr	r2, [fp, #-20]	; 0xffffffec
   16e78:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16e7c:	cmp	r2, r3
   16e80:	bcs	16e98 <__assert_fail@plt+0x5f84>
   16e84:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16e88:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e8c:	add	r3, r2, r3
   16e90:	mov	r2, #0
   16e94:	strb	r2, [r3]
   16e98:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e9c:	b	16f40 <__assert_fail@plt+0x602c>
   16ea0:	nop	{0}
   16ea4:	b	16edc <__assert_fail@plt+0x5fc8>
   16ea8:	nop	{0}
   16eac:	b	16edc <__assert_fail@plt+0x5fc8>
   16eb0:	nop	{0}
   16eb4:	b	16edc <__assert_fail@plt+0x5fc8>
   16eb8:	nop	{0}
   16ebc:	b	16edc <__assert_fail@plt+0x5fc8>
   16ec0:	nop	{0}
   16ec4:	b	16edc <__assert_fail@plt+0x5fc8>
   16ec8:	nop	{0}
   16ecc:	b	16edc <__assert_fail@plt+0x5fc8>
   16ed0:	nop	{0}
   16ed4:	b	16edc <__assert_fail@plt+0x5fc8>
   16ed8:	nop	{0}
   16edc:	ldr	r3, [fp, #4]
   16ee0:	cmp	r3, #2
   16ee4:	bne	16efc <__assert_fail@plt+0x5fe8>
   16ee8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   16eec:	cmp	r3, #0
   16ef0:	beq	16efc <__assert_fail@plt+0x5fe8>
   16ef4:	mov	r3, #4
   16ef8:	str	r3, [fp, #4]
   16efc:	ldr	r3, [fp, #8]
   16f00:	bic	r3, r3, #2
   16f04:	ldr	r2, [fp, #20]
   16f08:	str	r2, [sp, #16]
   16f0c:	ldr	r2, [fp, #16]
   16f10:	str	r2, [sp, #12]
   16f14:	mov	r2, #0
   16f18:	str	r2, [sp, #8]
   16f1c:	str	r3, [sp, #4]
   16f20:	ldr	r3, [fp, #4]
   16f24:	str	r3, [sp]
   16f28:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16f2c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16f30:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16f34:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16f38:	bl	15884 <__assert_fail@plt+0x4970>
   16f3c:	mov	r3, r0
   16f40:	mov	r0, r3
   16f44:	sub	sp, fp, #8
   16f48:	ldr	r4, [sp]
   16f4c:	ldr	fp, [sp, #4]
   16f50:	add	sp, sp, #8
   16f54:	pop	{pc}		; (ldr pc, [sp], #4)
   16f58:	str	fp, [sp, #-8]!
   16f5c:	str	lr, [sp, #4]
   16f60:	add	fp, sp, #4
   16f64:	sub	sp, sp, #56	; 0x38
   16f68:	str	r0, [fp, #-24]	; 0xffffffe8
   16f6c:	str	r1, [fp, #-28]	; 0xffffffe4
   16f70:	str	r2, [fp, #-32]	; 0xffffffe0
   16f74:	str	r3, [fp, #-36]	; 0xffffffdc
   16f78:	ldr	r3, [fp, #4]
   16f7c:	cmp	r3, #0
   16f80:	beq	16f8c <__assert_fail@plt+0x6078>
   16f84:	ldr	r3, [fp, #4]
   16f88:	b	16f94 <__assert_fail@plt+0x6080>
   16f8c:	movw	r3, #62576	; 0xf470
   16f90:	movt	r3, #2
   16f94:	str	r3, [fp, #-8]
   16f98:	bl	10e54 <__errno_location@plt>
   16f9c:	mov	r3, r0
   16fa0:	ldr	r3, [r3]
   16fa4:	str	r3, [fp, #-12]
   16fa8:	ldr	r3, [fp, #-8]
   16fac:	ldr	r3, [r3]
   16fb0:	ldr	r2, [fp, #-8]
   16fb4:	ldr	r2, [r2, #4]
   16fb8:	ldr	r1, [fp, #-8]
   16fbc:	add	r1, r1, #8
   16fc0:	ldr	r0, [fp, #-8]
   16fc4:	ldr	r0, [r0, #40]	; 0x28
   16fc8:	ldr	ip, [fp, #-8]
   16fcc:	ldr	ip, [ip, #44]	; 0x2c
   16fd0:	str	ip, [sp, #16]
   16fd4:	str	r0, [sp, #12]
   16fd8:	str	r1, [sp, #8]
   16fdc:	str	r2, [sp, #4]
   16fe0:	str	r3, [sp]
   16fe4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16fe8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16fec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ff4:	bl	15884 <__assert_fail@plt+0x4970>
   16ff8:	str	r0, [fp, #-16]
   16ffc:	bl	10e54 <__errno_location@plt>
   17000:	mov	r2, r0
   17004:	ldr	r3, [fp, #-12]
   17008:	str	r3, [r2]
   1700c:	ldr	r3, [fp, #-16]
   17010:	mov	r0, r3
   17014:	sub	sp, fp, #4
   17018:	ldr	fp, [sp]
   1701c:	add	sp, sp, #4
   17020:	pop	{pc}		; (ldr pc, [sp], #4)
   17024:	str	fp, [sp, #-8]!
   17028:	str	lr, [sp, #4]
   1702c:	add	fp, sp, #4
   17030:	sub	sp, sp, #16
   17034:	str	r0, [fp, #-8]
   17038:	str	r1, [fp, #-12]
   1703c:	str	r2, [fp, #-16]
   17040:	ldr	r3, [fp, #-16]
   17044:	mov	r2, #0
   17048:	ldr	r1, [fp, #-12]
   1704c:	ldr	r0, [fp, #-8]
   17050:	bl	1706c <__assert_fail@plt+0x6158>
   17054:	mov	r3, r0
   17058:	mov	r0, r3
   1705c:	sub	sp, fp, #4
   17060:	ldr	fp, [sp]
   17064:	add	sp, sp, #4
   17068:	pop	{pc}		; (ldr pc, [sp], #4)
   1706c:	str	fp, [sp, #-8]!
   17070:	str	lr, [sp, #4]
   17074:	add	fp, sp, #4
   17078:	sub	sp, sp, #64	; 0x40
   1707c:	str	r0, [fp, #-32]	; 0xffffffe0
   17080:	str	r1, [fp, #-36]	; 0xffffffdc
   17084:	str	r2, [fp, #-40]	; 0xffffffd8
   17088:	str	r3, [fp, #-44]	; 0xffffffd4
   1708c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17090:	cmp	r3, #0
   17094:	beq	170a0 <__assert_fail@plt+0x618c>
   17098:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1709c:	b	170a8 <__assert_fail@plt+0x6194>
   170a0:	movw	r3, #62576	; 0xf470
   170a4:	movt	r3, #2
   170a8:	str	r3, [fp, #-8]
   170ac:	bl	10e54 <__errno_location@plt>
   170b0:	mov	r3, r0
   170b4:	ldr	r3, [r3]
   170b8:	str	r3, [fp, #-12]
   170bc:	ldr	r3, [fp, #-8]
   170c0:	ldr	r3, [r3, #4]
   170c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   170c8:	cmp	r2, #0
   170cc:	moveq	r2, #1
   170d0:	movne	r2, #0
   170d4:	uxtb	r2, r2
   170d8:	orr	r3, r3, r2
   170dc:	str	r3, [fp, #-16]
   170e0:	ldr	r3, [fp, #-8]
   170e4:	ldr	r3, [r3]
   170e8:	ldr	r2, [fp, #-8]
   170ec:	add	r2, r2, #8
   170f0:	ldr	r1, [fp, #-8]
   170f4:	ldr	r1, [r1, #40]	; 0x28
   170f8:	ldr	r0, [fp, #-8]
   170fc:	ldr	r0, [r0, #44]	; 0x2c
   17100:	str	r0, [sp, #16]
   17104:	str	r1, [sp, #12]
   17108:	str	r2, [sp, #8]
   1710c:	ldr	r2, [fp, #-16]
   17110:	str	r2, [sp, #4]
   17114:	str	r3, [sp]
   17118:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1711c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17120:	mov	r1, #0
   17124:	mov	r0, #0
   17128:	bl	15884 <__assert_fail@plt+0x4970>
   1712c:	mov	r3, r0
   17130:	add	r3, r3, #1
   17134:	str	r3, [fp, #-20]	; 0xffffffec
   17138:	ldr	r0, [fp, #-20]	; 0xffffffec
   1713c:	bl	18630 <__assert_fail@plt+0x771c>
   17140:	mov	r3, r0
   17144:	str	r3, [fp, #-24]	; 0xffffffe8
   17148:	ldr	r3, [fp, #-8]
   1714c:	ldr	r3, [r3]
   17150:	ldr	r2, [fp, #-8]
   17154:	add	r2, r2, #8
   17158:	ldr	r1, [fp, #-8]
   1715c:	ldr	r1, [r1, #40]	; 0x28
   17160:	ldr	r0, [fp, #-8]
   17164:	ldr	r0, [r0, #44]	; 0x2c
   17168:	str	r0, [sp, #16]
   1716c:	str	r1, [sp, #12]
   17170:	str	r2, [sp, #8]
   17174:	ldr	r2, [fp, #-16]
   17178:	str	r2, [sp, #4]
   1717c:	str	r3, [sp]
   17180:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17184:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17188:	ldr	r1, [fp, #-20]	; 0xffffffec
   1718c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17190:	bl	15884 <__assert_fail@plt+0x4970>
   17194:	bl	10e54 <__errno_location@plt>
   17198:	mov	r2, r0
   1719c:	ldr	r3, [fp, #-12]
   171a0:	str	r3, [r2]
   171a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   171a8:	cmp	r3, #0
   171ac:	beq	171c0 <__assert_fail@plt+0x62ac>
   171b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   171b4:	sub	r2, r3, #1
   171b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   171bc:	str	r2, [r3]
   171c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   171c4:	mov	r0, r3
   171c8:	sub	sp, fp, #4
   171cc:	ldr	fp, [sp]
   171d0:	add	sp, sp, #4
   171d4:	pop	{pc}		; (ldr pc, [sp], #4)
   171d8:	str	fp, [sp, #-8]!
   171dc:	str	lr, [sp, #4]
   171e0:	add	fp, sp, #4
   171e4:	sub	sp, sp, #8
   171e8:	movw	r3, #53508	; 0xd104
   171ec:	movt	r3, #2
   171f0:	ldr	r3, [r3]
   171f4:	str	r3, [fp, #-12]
   171f8:	mov	r3, #1
   171fc:	str	r3, [fp, #-8]
   17200:	b	1722c <__assert_fail@plt+0x6318>
   17204:	ldr	r3, [fp, #-8]
   17208:	lsl	r3, r3, #3
   1720c:	ldr	r2, [fp, #-12]
   17210:	add	r3, r2, r3
   17214:	ldr	r3, [r3, #4]
   17218:	mov	r0, r3
   1721c:	bl	15270 <__assert_fail@plt+0x435c>
   17220:	ldr	r3, [fp, #-8]
   17224:	add	r3, r3, #1
   17228:	str	r3, [fp, #-8]
   1722c:	movw	r3, #53496	; 0xd0f8
   17230:	movt	r3, #2
   17234:	ldr	r3, [r3]
   17238:	ldr	r2, [fp, #-8]
   1723c:	cmp	r2, r3
   17240:	blt	17204 <__assert_fail@plt+0x62f0>
   17244:	ldr	r3, [fp, #-12]
   17248:	ldr	r2, [r3, #4]
   1724c:	movw	r3, #62624	; 0xf4a0
   17250:	movt	r3, #2
   17254:	cmp	r2, r3
   17258:	beq	17290 <__assert_fail@plt+0x637c>
   1725c:	ldr	r3, [fp, #-12]
   17260:	ldr	r3, [r3, #4]
   17264:	mov	r0, r3
   17268:	bl	15270 <__assert_fail@plt+0x435c>
   1726c:	movw	r3, #53500	; 0xd0fc
   17270:	movt	r3, #2
   17274:	mov	r2, #256	; 0x100
   17278:	str	r2, [r3]
   1727c:	movw	r3, #53500	; 0xd0fc
   17280:	movt	r3, #2
   17284:	movw	r2, #62624	; 0xf4a0
   17288:	movt	r2, #2
   1728c:	str	r2, [r3, #4]
   17290:	ldr	r2, [fp, #-12]
   17294:	movw	r3, #53500	; 0xd0fc
   17298:	movt	r3, #2
   1729c:	cmp	r2, r3
   172a0:	beq	172c0 <__assert_fail@plt+0x63ac>
   172a4:	ldr	r0, [fp, #-12]
   172a8:	bl	15270 <__assert_fail@plt+0x435c>
   172ac:	movw	r3, #53508	; 0xd104
   172b0:	movt	r3, #2
   172b4:	movw	r2, #53500	; 0xd0fc
   172b8:	movt	r2, #2
   172bc:	str	r2, [r3]
   172c0:	movw	r3, #53496	; 0xd0f8
   172c4:	movt	r3, #2
   172c8:	mov	r2, #1
   172cc:	str	r2, [r3]
   172d0:	nop	{0}
   172d4:	sub	sp, fp, #4
   172d8:	ldr	fp, [sp]
   172dc:	add	sp, sp, #4
   172e0:	pop	{pc}		; (ldr pc, [sp], #4)
   172e4:	str	fp, [sp, #-8]!
   172e8:	str	lr, [sp, #4]
   172ec:	add	fp, sp, #4
   172f0:	sub	sp, sp, #80	; 0x50
   172f4:	str	r0, [fp, #-48]	; 0xffffffd0
   172f8:	str	r1, [fp, #-52]	; 0xffffffcc
   172fc:	str	r2, [fp, #-56]	; 0xffffffc8
   17300:	str	r3, [fp, #-60]	; 0xffffffc4
   17304:	bl	10e54 <__errno_location@plt>
   17308:	mov	r3, r0
   1730c:	ldr	r3, [r3]
   17310:	str	r3, [fp, #-16]
   17314:	movw	r3, #53508	; 0xd104
   17318:	movt	r3, #2
   1731c:	ldr	r3, [r3]
   17320:	str	r3, [fp, #-8]
   17324:	mvn	r3, #-2147483648	; 0x80000000
   17328:	str	r3, [fp, #-20]	; 0xffffffec
   1732c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17330:	cmp	r3, #0
   17334:	blt	17348 <__assert_fail@plt+0x6434>
   17338:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1733c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17340:	cmp	r2, r3
   17344:	blt	1734c <__assert_fail@plt+0x6438>
   17348:	bl	10efc <abort@plt>
   1734c:	movw	r3, #53496	; 0xd0f8
   17350:	movt	r3, #2
   17354:	ldr	r3, [r3]
   17358:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1735c:	cmp	r2, r3
   17360:	blt	17458 <__assert_fail@plt+0x6544>
   17364:	ldr	r2, [fp, #-8]
   17368:	movw	r3, #53500	; 0xd0fc
   1736c:	movt	r3, #2
   17370:	cmp	r2, r3
   17374:	moveq	r3, #1
   17378:	movne	r3, #0
   1737c:	strb	r3, [fp, #-21]	; 0xffffffeb
   17380:	movw	r3, #53496	; 0xd0f8
   17384:	movt	r3, #2
   17388:	ldr	r3, [r3]
   1738c:	str	r3, [fp, #-40]	; 0xffffffd8
   17390:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   17394:	cmp	r3, #0
   17398:	beq	173a4 <__assert_fail@plt+0x6490>
   1739c:	mov	r0, #0
   173a0:	b	173a8 <__assert_fail@plt+0x6494>
   173a4:	ldr	r0, [fp, #-8]
   173a8:	movw	r3, #53496	; 0xd0f8
   173ac:	movt	r3, #2
   173b0:	ldr	r3, [r3]
   173b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   173b8:	sub	r3, r2, r3
   173bc:	add	r2, r3, #1
   173c0:	sub	r1, fp, #40	; 0x28
   173c4:	mov	r3, #8
   173c8:	str	r3, [sp]
   173cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   173d0:	bl	18990 <__assert_fail@plt+0x7a7c>
   173d4:	str	r0, [fp, #-8]
   173d8:	movw	r3, #53508	; 0xd104
   173dc:	movt	r3, #2
   173e0:	ldr	r2, [fp, #-8]
   173e4:	str	r2, [r3]
   173e8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   173ec:	cmp	r3, #0
   173f0:	beq	1740c <__assert_fail@plt+0x64f8>
   173f4:	ldr	r2, [fp, #-8]
   173f8:	movw	r3, #53500	; 0xd0fc
   173fc:	movt	r3, #2
   17400:	mov	r1, r2
   17404:	ldrd	r2, [r3]
   17408:	strd	r2, [r1]
   1740c:	movw	r3, #53496	; 0xd0f8
   17410:	movt	r3, #2
   17414:	ldr	r3, [r3]
   17418:	lsl	r3, r3, #3
   1741c:	ldr	r2, [fp, #-8]
   17420:	add	r0, r2, r3
   17424:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17428:	movw	r3, #53496	; 0xd0f8
   1742c:	movt	r3, #2
   17430:	ldr	r3, [r3]
   17434:	sub	r3, r2, r3
   17438:	lsl	r3, r3, #3
   1743c:	mov	r2, r3
   17440:	mov	r1, #0
   17444:	bl	10e6c <memset@plt>
   17448:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1744c:	movw	r3, #53496	; 0xd0f8
   17450:	movt	r3, #2
   17454:	str	r2, [r3]
   17458:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1745c:	lsl	r3, r3, #3
   17460:	ldr	r2, [fp, #-8]
   17464:	add	r3, r2, r3
   17468:	ldr	r3, [r3]
   1746c:	str	r3, [fp, #-28]	; 0xffffffe4
   17470:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17474:	lsl	r3, r3, #3
   17478:	ldr	r2, [fp, #-8]
   1747c:	add	r3, r2, r3
   17480:	ldr	r3, [r3, #4]
   17484:	str	r3, [fp, #-12]
   17488:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1748c:	ldr	r3, [r3, #4]
   17490:	orr	r3, r3, #1
   17494:	str	r3, [fp, #-32]	; 0xffffffe0
   17498:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1749c:	ldr	r3, [r3]
   174a0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   174a4:	add	r2, r2, #8
   174a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   174ac:	ldr	r1, [r1, #40]	; 0x28
   174b0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   174b4:	ldr	r0, [r0, #44]	; 0x2c
   174b8:	str	r0, [sp, #16]
   174bc:	str	r1, [sp, #12]
   174c0:	str	r2, [sp, #8]
   174c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   174c8:	str	r2, [sp, #4]
   174cc:	str	r3, [sp]
   174d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   174d4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   174d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   174dc:	ldr	r0, [fp, #-12]
   174e0:	bl	15884 <__assert_fail@plt+0x4970>
   174e4:	str	r0, [fp, #-36]	; 0xffffffdc
   174e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   174ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   174f0:	cmp	r2, r3
   174f4:	bhi	175ac <__assert_fail@plt+0x6698>
   174f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   174fc:	add	r3, r3, #1
   17500:	str	r3, [fp, #-28]	; 0xffffffe4
   17504:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17508:	lsl	r3, r3, #3
   1750c:	ldr	r2, [fp, #-8]
   17510:	add	r3, r2, r3
   17514:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17518:	str	r2, [r3]
   1751c:	ldr	r2, [fp, #-12]
   17520:	movw	r3, #62624	; 0xf4a0
   17524:	movt	r3, #2
   17528:	cmp	r2, r3
   1752c:	beq	17538 <__assert_fail@plt+0x6624>
   17530:	ldr	r0, [fp, #-12]
   17534:	bl	15270 <__assert_fail@plt+0x435c>
   17538:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1753c:	bl	18630 <__assert_fail@plt+0x771c>
   17540:	mov	r3, r0
   17544:	str	r3, [fp, #-12]
   17548:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1754c:	lsl	r3, r3, #3
   17550:	ldr	r2, [fp, #-8]
   17554:	add	r3, r2, r3
   17558:	ldr	r2, [fp, #-12]
   1755c:	str	r2, [r3, #4]
   17560:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17564:	ldr	r3, [r3]
   17568:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1756c:	add	r2, r2, #8
   17570:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17574:	ldr	r1, [r1, #40]	; 0x28
   17578:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1757c:	ldr	r0, [r0, #44]	; 0x2c
   17580:	str	r0, [sp, #16]
   17584:	str	r1, [sp, #12]
   17588:	str	r2, [sp, #8]
   1758c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17590:	str	r2, [sp, #4]
   17594:	str	r3, [sp]
   17598:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1759c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   175a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   175a4:	ldr	r0, [fp, #-12]
   175a8:	bl	15884 <__assert_fail@plt+0x4970>
   175ac:	bl	10e54 <__errno_location@plt>
   175b0:	mov	r2, r0
   175b4:	ldr	r3, [fp, #-16]
   175b8:	str	r3, [r2]
   175bc:	ldr	r3, [fp, #-12]
   175c0:	mov	r0, r3
   175c4:	sub	sp, fp, #4
   175c8:	ldr	fp, [sp]
   175cc:	add	sp, sp, #4
   175d0:	pop	{pc}		; (ldr pc, [sp], #4)
   175d4:	str	fp, [sp, #-8]!
   175d8:	str	lr, [sp, #4]
   175dc:	add	fp, sp, #4
   175e0:	sub	sp, sp, #8
   175e4:	str	r0, [fp, #-8]
   175e8:	str	r1, [fp, #-12]
   175ec:	movw	r3, #62576	; 0xf470
   175f0:	movt	r3, #2
   175f4:	mvn	r2, #0
   175f8:	ldr	r1, [fp, #-12]
   175fc:	ldr	r0, [fp, #-8]
   17600:	bl	172e4 <__assert_fail@plt+0x63d0>
   17604:	mov	r3, r0
   17608:	mov	r0, r3
   1760c:	sub	sp, fp, #4
   17610:	ldr	fp, [sp]
   17614:	add	sp, sp, #4
   17618:	pop	{pc}		; (ldr pc, [sp], #4)
   1761c:	str	fp, [sp, #-8]!
   17620:	str	lr, [sp, #4]
   17624:	add	fp, sp, #4
   17628:	sub	sp, sp, #16
   1762c:	str	r0, [fp, #-8]
   17630:	str	r1, [fp, #-12]
   17634:	str	r2, [fp, #-16]
   17638:	movw	r3, #62576	; 0xf470
   1763c:	movt	r3, #2
   17640:	ldr	r2, [fp, #-16]
   17644:	ldr	r1, [fp, #-12]
   17648:	ldr	r0, [fp, #-8]
   1764c:	bl	172e4 <__assert_fail@plt+0x63d0>
   17650:	mov	r3, r0
   17654:	mov	r0, r3
   17658:	sub	sp, fp, #4
   1765c:	ldr	fp, [sp]
   17660:	add	sp, sp, #4
   17664:	pop	{pc}		; (ldr pc, [sp], #4)
   17668:	str	fp, [sp, #-8]!
   1766c:	str	lr, [sp, #4]
   17670:	add	fp, sp, #4
   17674:	sub	sp, sp, #8
   17678:	str	r0, [fp, #-8]
   1767c:	ldr	r1, [fp, #-8]
   17680:	mov	r0, #0
   17684:	bl	175d4 <__assert_fail@plt+0x66c0>
   17688:	mov	r3, r0
   1768c:	mov	r0, r3
   17690:	sub	sp, fp, #4
   17694:	ldr	fp, [sp]
   17698:	add	sp, sp, #4
   1769c:	pop	{pc}		; (ldr pc, [sp], #4)
   176a0:	str	fp, [sp, #-8]!
   176a4:	str	lr, [sp, #4]
   176a8:	add	fp, sp, #4
   176ac:	sub	sp, sp, #8
   176b0:	str	r0, [fp, #-8]
   176b4:	str	r1, [fp, #-12]
   176b8:	ldr	r2, [fp, #-12]
   176bc:	ldr	r1, [fp, #-8]
   176c0:	mov	r0, #0
   176c4:	bl	1761c <__assert_fail@plt+0x6708>
   176c8:	mov	r3, r0
   176cc:	mov	r0, r3
   176d0:	sub	sp, fp, #4
   176d4:	ldr	fp, [sp]
   176d8:	add	sp, sp, #4
   176dc:	pop	{pc}		; (ldr pc, [sp], #4)
   176e0:	str	fp, [sp, #-8]!
   176e4:	str	lr, [sp, #4]
   176e8:	add	fp, sp, #4
   176ec:	sub	sp, sp, #64	; 0x40
   176f0:	str	r0, [fp, #-56]	; 0xffffffc8
   176f4:	str	r1, [fp, #-60]	; 0xffffffc4
   176f8:	str	r2, [fp, #-64]	; 0xffffffc0
   176fc:	sub	r3, fp, #52	; 0x34
   17700:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17704:	mov	r0, r3
   17708:	bl	156e0 <__assert_fail@plt+0x47cc>
   1770c:	sub	r3, fp, #52	; 0x34
   17710:	mvn	r2, #0
   17714:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17718:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1771c:	bl	172e4 <__assert_fail@plt+0x63d0>
   17720:	mov	r3, r0
   17724:	mov	r0, r3
   17728:	sub	sp, fp, #4
   1772c:	ldr	fp, [sp]
   17730:	add	sp, sp, #4
   17734:	pop	{pc}		; (ldr pc, [sp], #4)
   17738:	str	fp, [sp, #-8]!
   1773c:	str	lr, [sp, #4]
   17740:	add	fp, sp, #4
   17744:	sub	sp, sp, #64	; 0x40
   17748:	str	r0, [fp, #-56]	; 0xffffffc8
   1774c:	str	r1, [fp, #-60]	; 0xffffffc4
   17750:	str	r2, [fp, #-64]	; 0xffffffc0
   17754:	str	r3, [fp, #-68]	; 0xffffffbc
   17758:	sub	r3, fp, #52	; 0x34
   1775c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17760:	mov	r0, r3
   17764:	bl	156e0 <__assert_fail@plt+0x47cc>
   17768:	sub	r3, fp, #52	; 0x34
   1776c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17770:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17774:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17778:	bl	172e4 <__assert_fail@plt+0x63d0>
   1777c:	mov	r3, r0
   17780:	mov	r0, r3
   17784:	sub	sp, fp, #4
   17788:	ldr	fp, [sp]
   1778c:	add	sp, sp, #4
   17790:	pop	{pc}		; (ldr pc, [sp], #4)
   17794:	str	fp, [sp, #-8]!
   17798:	str	lr, [sp, #4]
   1779c:	add	fp, sp, #4
   177a0:	sub	sp, sp, #8
   177a4:	str	r0, [fp, #-8]
   177a8:	str	r1, [fp, #-12]
   177ac:	ldr	r2, [fp, #-12]
   177b0:	ldr	r1, [fp, #-8]
   177b4:	mov	r0, #0
   177b8:	bl	176e0 <__assert_fail@plt+0x67cc>
   177bc:	mov	r3, r0
   177c0:	mov	r0, r3
   177c4:	sub	sp, fp, #4
   177c8:	ldr	fp, [sp]
   177cc:	add	sp, sp, #4
   177d0:	pop	{pc}		; (ldr pc, [sp], #4)
   177d4:	str	fp, [sp, #-8]!
   177d8:	str	lr, [sp, #4]
   177dc:	add	fp, sp, #4
   177e0:	sub	sp, sp, #16
   177e4:	str	r0, [fp, #-8]
   177e8:	str	r1, [fp, #-12]
   177ec:	str	r2, [fp, #-16]
   177f0:	ldr	r3, [fp, #-16]
   177f4:	ldr	r2, [fp, #-12]
   177f8:	ldr	r1, [fp, #-8]
   177fc:	mov	r0, #0
   17800:	bl	17738 <__assert_fail@plt+0x6824>
   17804:	mov	r3, r0
   17808:	mov	r0, r3
   1780c:	sub	sp, fp, #4
   17810:	ldr	fp, [sp]
   17814:	add	sp, sp, #4
   17818:	pop	{pc}		; (ldr pc, [sp], #4)
   1781c:	str	fp, [sp, #-8]!
   17820:	str	lr, [sp, #4]
   17824:	add	fp, sp, #4
   17828:	sub	sp, sp, #64	; 0x40
   1782c:	str	r0, [fp, #-56]	; 0xffffffc8
   17830:	str	r1, [fp, #-60]	; 0xffffffc4
   17834:	mov	r3, r2
   17838:	strb	r3, [fp, #-61]	; 0xffffffc3
   1783c:	movw	r2, #62576	; 0xf470
   17840:	movt	r2, #2
   17844:	sub	r3, fp, #52	; 0x34
   17848:	ldrd	r0, [r2]
   1784c:	strd	r0, [r3]
   17850:	ldrd	r0, [r2, #8]
   17854:	strd	r0, [r3, #8]
   17858:	ldrd	r0, [r2, #16]
   1785c:	strd	r0, [r3, #16]
   17860:	ldrd	r0, [r2, #24]
   17864:	strd	r0, [r3, #24]
   17868:	ldrd	r0, [r2, #32]
   1786c:	strd	r0, [r3, #32]
   17870:	ldrd	r0, [r2, #40]	; 0x28
   17874:	strd	r0, [r3, #40]	; 0x28
   17878:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   1787c:	sub	r3, fp, #52	; 0x34
   17880:	mov	r2, #1
   17884:	mov	r0, r3
   17888:	bl	15540 <__assert_fail@plt+0x462c>
   1788c:	sub	r3, fp, #52	; 0x34
   17890:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17894:	ldr	r1, [fp, #-56]	; 0xffffffc8
   17898:	mov	r0, #0
   1789c:	bl	172e4 <__assert_fail@plt+0x63d0>
   178a0:	mov	r3, r0
   178a4:	mov	r0, r3
   178a8:	sub	sp, fp, #4
   178ac:	ldr	fp, [sp]
   178b0:	add	sp, sp, #4
   178b4:	pop	{pc}		; (ldr pc, [sp], #4)
   178b8:	str	fp, [sp, #-8]!
   178bc:	str	lr, [sp, #4]
   178c0:	add	fp, sp, #4
   178c4:	sub	sp, sp, #8
   178c8:	str	r0, [fp, #-8]
   178cc:	mov	r3, r1
   178d0:	strb	r3, [fp, #-9]
   178d4:	ldrb	r3, [fp, #-9]
   178d8:	mov	r2, r3
   178dc:	mvn	r1, #0
   178e0:	ldr	r0, [fp, #-8]
   178e4:	bl	1781c <__assert_fail@plt+0x6908>
   178e8:	mov	r3, r0
   178ec:	mov	r0, r3
   178f0:	sub	sp, fp, #4
   178f4:	ldr	fp, [sp]
   178f8:	add	sp, sp, #4
   178fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17900:	str	fp, [sp, #-8]!
   17904:	str	lr, [sp, #4]
   17908:	add	fp, sp, #4
   1790c:	sub	sp, sp, #8
   17910:	str	r0, [fp, #-8]
   17914:	mov	r1, #58	; 0x3a
   17918:	ldr	r0, [fp, #-8]
   1791c:	bl	178b8 <__assert_fail@plt+0x69a4>
   17920:	mov	r3, r0
   17924:	mov	r0, r3
   17928:	sub	sp, fp, #4
   1792c:	ldr	fp, [sp]
   17930:	add	sp, sp, #4
   17934:	pop	{pc}		; (ldr pc, [sp], #4)
   17938:	str	fp, [sp, #-8]!
   1793c:	str	lr, [sp, #4]
   17940:	add	fp, sp, #4
   17944:	sub	sp, sp, #8
   17948:	str	r0, [fp, #-8]
   1794c:	str	r1, [fp, #-12]
   17950:	mov	r2, #58	; 0x3a
   17954:	ldr	r1, [fp, #-12]
   17958:	ldr	r0, [fp, #-8]
   1795c:	bl	1781c <__assert_fail@plt+0x6908>
   17960:	mov	r3, r0
   17964:	mov	r0, r3
   17968:	sub	sp, fp, #4
   1796c:	ldr	fp, [sp]
   17970:	add	sp, sp, #4
   17974:	pop	{pc}		; (ldr pc, [sp], #4)
   17978:	str	fp, [sp, #-8]!
   1797c:	str	lr, [sp, #4]
   17980:	add	fp, sp, #4
   17984:	sub	sp, sp, #112	; 0x70
   17988:	str	r0, [fp, #-56]	; 0xffffffc8
   1798c:	str	r1, [fp, #-60]	; 0xffffffc4
   17990:	str	r2, [fp, #-64]	; 0xffffffc0
   17994:	sub	r3, fp, #116	; 0x74
   17998:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1799c:	mov	r0, r3
   179a0:	bl	156e0 <__assert_fail@plt+0x47cc>
   179a4:	sub	r3, fp, #52	; 0x34
   179a8:	sub	r2, fp, #116	; 0x74
   179ac:	ldrd	r0, [r2]
   179b0:	strd	r0, [r3]
   179b4:	ldrd	r0, [r2, #8]
   179b8:	strd	r0, [r3, #8]
   179bc:	ldrd	r0, [r2, #16]
   179c0:	strd	r0, [r3, #16]
   179c4:	ldrd	r0, [r2, #24]
   179c8:	strd	r0, [r3, #24]
   179cc:	ldrd	r0, [r2, #32]
   179d0:	strd	r0, [r3, #32]
   179d4:	ldrd	r0, [r2, #40]	; 0x28
   179d8:	strd	r0, [r3, #40]	; 0x28
   179dc:	sub	r3, fp, #52	; 0x34
   179e0:	mov	r2, #1
   179e4:	mov	r1, #58	; 0x3a
   179e8:	mov	r0, r3
   179ec:	bl	15540 <__assert_fail@plt+0x462c>
   179f0:	sub	r3, fp, #52	; 0x34
   179f4:	mvn	r2, #0
   179f8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   179fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17a00:	bl	172e4 <__assert_fail@plt+0x63d0>
   17a04:	mov	r3, r0
   17a08:	mov	r0, r3
   17a0c:	sub	sp, fp, #4
   17a10:	ldr	fp, [sp]
   17a14:	add	sp, sp, #4
   17a18:	pop	{pc}		; (ldr pc, [sp], #4)
   17a1c:	str	fp, [sp, #-8]!
   17a20:	str	lr, [sp, #4]
   17a24:	add	fp, sp, #4
   17a28:	sub	sp, sp, #24
   17a2c:	str	r0, [fp, #-8]
   17a30:	str	r1, [fp, #-12]
   17a34:	str	r2, [fp, #-16]
   17a38:	str	r3, [fp, #-20]	; 0xffffffec
   17a3c:	mvn	r3, #0
   17a40:	str	r3, [sp]
   17a44:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a48:	ldr	r2, [fp, #-16]
   17a4c:	ldr	r1, [fp, #-12]
   17a50:	ldr	r0, [fp, #-8]
   17a54:	bl	17a70 <__assert_fail@plt+0x6b5c>
   17a58:	mov	r3, r0
   17a5c:	mov	r0, r3
   17a60:	sub	sp, fp, #4
   17a64:	ldr	fp, [sp]
   17a68:	add	sp, sp, #4
   17a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   17a70:	str	fp, [sp, #-8]!
   17a74:	str	lr, [sp, #4]
   17a78:	add	fp, sp, #4
   17a7c:	sub	sp, sp, #64	; 0x40
   17a80:	str	r0, [fp, #-56]	; 0xffffffc8
   17a84:	str	r1, [fp, #-60]	; 0xffffffc4
   17a88:	str	r2, [fp, #-64]	; 0xffffffc0
   17a8c:	str	r3, [fp, #-68]	; 0xffffffbc
   17a90:	movw	r2, #62576	; 0xf470
   17a94:	movt	r2, #2
   17a98:	sub	r3, fp, #52	; 0x34
   17a9c:	ldrd	r0, [r2]
   17aa0:	strd	r0, [r3]
   17aa4:	ldrd	r0, [r2, #8]
   17aa8:	strd	r0, [r3, #8]
   17aac:	ldrd	r0, [r2, #16]
   17ab0:	strd	r0, [r3, #16]
   17ab4:	ldrd	r0, [r2, #24]
   17ab8:	strd	r0, [r3, #24]
   17abc:	ldrd	r0, [r2, #32]
   17ac0:	strd	r0, [r3, #32]
   17ac4:	ldrd	r0, [r2, #40]	; 0x28
   17ac8:	strd	r0, [r3, #40]	; 0x28
   17acc:	sub	r3, fp, #52	; 0x34
   17ad0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17ad4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17ad8:	mov	r0, r3
   17adc:	bl	15658 <__assert_fail@plt+0x4744>
   17ae0:	sub	r3, fp, #52	; 0x34
   17ae4:	ldr	r2, [fp, #4]
   17ae8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17aec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17af0:	bl	172e4 <__assert_fail@plt+0x63d0>
   17af4:	mov	r3, r0
   17af8:	mov	r0, r3
   17afc:	sub	sp, fp, #4
   17b00:	ldr	fp, [sp]
   17b04:	add	sp, sp, #4
   17b08:	pop	{pc}		; (ldr pc, [sp], #4)
   17b0c:	str	fp, [sp, #-8]!
   17b10:	str	lr, [sp, #4]
   17b14:	add	fp, sp, #4
   17b18:	sub	sp, sp, #16
   17b1c:	str	r0, [fp, #-8]
   17b20:	str	r1, [fp, #-12]
   17b24:	str	r2, [fp, #-16]
   17b28:	ldr	r3, [fp, #-16]
   17b2c:	ldr	r2, [fp, #-12]
   17b30:	ldr	r1, [fp, #-8]
   17b34:	mov	r0, #0
   17b38:	bl	17a1c <__assert_fail@plt+0x6b08>
   17b3c:	mov	r3, r0
   17b40:	mov	r0, r3
   17b44:	sub	sp, fp, #4
   17b48:	ldr	fp, [sp]
   17b4c:	add	sp, sp, #4
   17b50:	pop	{pc}		; (ldr pc, [sp], #4)
   17b54:	str	fp, [sp, #-8]!
   17b58:	str	lr, [sp, #4]
   17b5c:	add	fp, sp, #4
   17b60:	sub	sp, sp, #24
   17b64:	str	r0, [fp, #-8]
   17b68:	str	r1, [fp, #-12]
   17b6c:	str	r2, [fp, #-16]
   17b70:	str	r3, [fp, #-20]	; 0xffffffec
   17b74:	ldr	r3, [fp, #-20]	; 0xffffffec
   17b78:	str	r3, [sp]
   17b7c:	ldr	r3, [fp, #-16]
   17b80:	ldr	r2, [fp, #-12]
   17b84:	ldr	r1, [fp, #-8]
   17b88:	mov	r0, #0
   17b8c:	bl	17a70 <__assert_fail@plt+0x6b5c>
   17b90:	mov	r3, r0
   17b94:	mov	r0, r3
   17b98:	sub	sp, fp, #4
   17b9c:	ldr	fp, [sp]
   17ba0:	add	sp, sp, #4
   17ba4:	pop	{pc}		; (ldr pc, [sp], #4)
   17ba8:	str	fp, [sp, #-8]!
   17bac:	str	lr, [sp, #4]
   17bb0:	add	fp, sp, #4
   17bb4:	sub	sp, sp, #16
   17bb8:	str	r0, [fp, #-8]
   17bbc:	str	r1, [fp, #-12]
   17bc0:	str	r2, [fp, #-16]
   17bc4:	movw	r3, #53512	; 0xd108
   17bc8:	movt	r3, #2
   17bcc:	ldr	r2, [fp, #-16]
   17bd0:	ldr	r1, [fp, #-12]
   17bd4:	ldr	r0, [fp, #-8]
   17bd8:	bl	172e4 <__assert_fail@plt+0x63d0>
   17bdc:	mov	r3, r0
   17be0:	mov	r0, r3
   17be4:	sub	sp, fp, #4
   17be8:	ldr	fp, [sp]
   17bec:	add	sp, sp, #4
   17bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   17bf4:	str	fp, [sp, #-8]!
   17bf8:	str	lr, [sp, #4]
   17bfc:	add	fp, sp, #4
   17c00:	sub	sp, sp, #8
   17c04:	str	r0, [fp, #-8]
   17c08:	str	r1, [fp, #-12]
   17c0c:	ldr	r2, [fp, #-12]
   17c10:	ldr	r1, [fp, #-8]
   17c14:	mov	r0, #0
   17c18:	bl	17ba8 <__assert_fail@plt+0x6c94>
   17c1c:	mov	r3, r0
   17c20:	mov	r0, r3
   17c24:	sub	sp, fp, #4
   17c28:	ldr	fp, [sp]
   17c2c:	add	sp, sp, #4
   17c30:	pop	{pc}		; (ldr pc, [sp], #4)
   17c34:	str	fp, [sp, #-8]!
   17c38:	str	lr, [sp, #4]
   17c3c:	add	fp, sp, #4
   17c40:	sub	sp, sp, #8
   17c44:	str	r0, [fp, #-8]
   17c48:	str	r1, [fp, #-12]
   17c4c:	mvn	r2, #0
   17c50:	ldr	r1, [fp, #-12]
   17c54:	ldr	r0, [fp, #-8]
   17c58:	bl	17ba8 <__assert_fail@plt+0x6c94>
   17c5c:	mov	r3, r0
   17c60:	mov	r0, r3
   17c64:	sub	sp, fp, #4
   17c68:	ldr	fp, [sp]
   17c6c:	add	sp, sp, #4
   17c70:	pop	{pc}		; (ldr pc, [sp], #4)
   17c74:	str	fp, [sp, #-8]!
   17c78:	str	lr, [sp, #4]
   17c7c:	add	fp, sp, #4
   17c80:	sub	sp, sp, #8
   17c84:	str	r0, [fp, #-8]
   17c88:	ldr	r1, [fp, #-8]
   17c8c:	mov	r0, #0
   17c90:	bl	17c34 <__assert_fail@plt+0x6d20>
   17c94:	mov	r3, r0
   17c98:	mov	r0, r3
   17c9c:	sub	sp, fp, #4
   17ca0:	ldr	fp, [sp]
   17ca4:	add	sp, sp, #4
   17ca8:	pop	{pc}		; (ldr pc, [sp], #4)
   17cac:	str	fp, [sp, #-8]!
   17cb0:	str	lr, [sp, #4]
   17cb4:	add	fp, sp, #4
   17cb8:	sub	sp, sp, #24
   17cbc:	str	r0, [fp, #-16]
   17cc0:	str	r1, [fp, #-20]	; 0xffffffec
   17cc4:	str	r2, [fp, #-24]	; 0xffffffe8
   17cc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17ccc:	ldr	r1, [fp, #-20]	; 0xffffffec
   17cd0:	ldr	r0, [fp, #-16]
   17cd4:	bl	10cd4 <read@plt>
   17cd8:	str	r0, [fp, #-8]
   17cdc:	ldr	r3, [fp, #-8]
   17ce0:	cmp	r3, #0
   17ce4:	blt	17cf0 <__assert_fail@plt+0x6ddc>
   17ce8:	ldr	r3, [fp, #-8]
   17cec:	b	17d4c <__assert_fail@plt+0x6e38>
   17cf0:	bl	10e54 <__errno_location@plt>
   17cf4:	mov	r3, r0
   17cf8:	ldr	r3, [r3]
   17cfc:	cmp	r3, #4
   17d00:	beq	17d44 <__assert_fail@plt+0x6e30>
   17d04:	bl	10e54 <__errno_location@plt>
   17d08:	mov	r3, r0
   17d0c:	ldr	r3, [r3]
   17d10:	cmp	r3, #22
   17d14:	bne	17d3c <__assert_fail@plt+0x6e28>
   17d18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17d1c:	mov	r3, #0
   17d20:	movt	r3, #32752	; 0x7ff0
   17d24:	cmp	r2, r3
   17d28:	bls	17d3c <__assert_fail@plt+0x6e28>
   17d2c:	mov	r3, #0
   17d30:	movt	r3, #32752	; 0x7ff0
   17d34:	str	r3, [fp, #-24]	; 0xffffffe8
   17d38:	b	17d48 <__assert_fail@plt+0x6e34>
   17d3c:	ldr	r3, [fp, #-8]
   17d40:	b	17d4c <__assert_fail@plt+0x6e38>
   17d44:	nop	{0}
   17d48:	b	17cc8 <__assert_fail@plt+0x6db4>
   17d4c:	mov	r0, r3
   17d50:	sub	sp, fp, #4
   17d54:	ldr	fp, [sp]
   17d58:	add	sp, sp, #4
   17d5c:	pop	{pc}		; (ldr pc, [sp], #4)
   17d60:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17d64:	strd	r6, [sp, #8]
   17d68:	str	fp, [sp, #16]
   17d6c:	str	lr, [sp, #20]
   17d70:	add	fp, sp, #20
   17d74:	sub	sp, sp, #48	; 0x30
   17d78:	str	r0, [fp, #-24]	; 0xffffffe8
   17d7c:	str	r1, [fp, #-28]	; 0xffffffe4
   17d80:	str	r2, [fp, #-32]	; 0xffffffe0
   17d84:	str	r3, [fp, #-36]	; 0xffffffdc
   17d88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17d8c:	cmp	r3, #0
   17d90:	beq	17db8 <__assert_fail@plt+0x6ea4>
   17d94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17d98:	str	r3, [sp]
   17d9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17da0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17da4:	movw	r1, #48840	; 0xbec8
   17da8:	movt	r1, #1
   17dac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17db0:	bl	10e48 <fprintf@plt>
   17db4:	b	17dd0 <__assert_fail@plt+0x6ebc>
   17db8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17dbc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17dc0:	movw	r1, #48852	; 0xbed4
   17dc4:	movt	r1, #1
   17dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dcc:	bl	10e48 <fprintf@plt>
   17dd0:	movw	r0, #48860	; 0xbedc
   17dd4:	movt	r0, #1
   17dd8:	bl	10e24 <gettext@plt>
   17ddc:	mov	r2, r0
   17de0:	movw	r3, #2022	; 0x7e6
   17de4:	movw	r1, #49644	; 0xc1ec
   17de8:	movt	r1, #1
   17dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17df0:	bl	10e48 <fprintf@plt>
   17df4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17df8:	mov	r0, #10
   17dfc:	bl	10d4c <fputc_unlocked@plt>
   17e00:	movw	r0, #48864	; 0xbee0
   17e04:	movt	r0, #1
   17e08:	bl	10e24 <gettext@plt>
   17e0c:	mov	r3, r0
   17e10:	movw	r2, #49036	; 0xbf8c
   17e14:	movt	r2, #1
   17e18:	mov	r1, r3
   17e1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e20:	bl	10e48 <fprintf@plt>
   17e24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e28:	mov	r0, #10
   17e2c:	bl	10d4c <fputc_unlocked@plt>
   17e30:	ldr	r3, [fp, #8]
   17e34:	cmp	r3, #9
   17e38:	ldrls	pc, [pc, r3, lsl #2]
   17e3c:	b	1821c <__assert_fail@plt+0x7308>
   17e40:	andeq	r8, r1, r8, asr #5
   17e44:	andeq	r7, r1, r8, ror #28
   17e48:	muleq	r1, r0, lr
   17e4c:	andeq	r7, r1, r0, asr #29
   17e50:	andeq	r7, r1, r4, lsl #30
   17e54:	andeq	r7, r1, r0, ror #30
   17e58:	andeq	r7, r1, ip, asr #31
   17e5c:	andeq	r8, r1, r8, asr #32
   17e60:	ldrdeq	r8, [r1], -r4
   17e64:	andeq	r8, r1, r0, ror r1
   17e68:	movw	r0, #49072	; 0xbfb0
   17e6c:	movt	r0, #1
   17e70:	bl	10e24 <gettext@plt>
   17e74:	mov	r1, r0
   17e78:	ldr	r3, [fp, #4]
   17e7c:	ldr	r3, [r3]
   17e80:	mov	r2, r3
   17e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e88:	bl	10e48 <fprintf@plt>
   17e8c:	b	182cc <__assert_fail@plt+0x73b8>
   17e90:	movw	r0, #49088	; 0xbfc0
   17e94:	movt	r0, #1
   17e98:	bl	10e24 <gettext@plt>
   17e9c:	mov	r1, r0
   17ea0:	ldr	r3, [fp, #4]
   17ea4:	ldr	r2, [r3]
   17ea8:	ldr	r3, [fp, #4]
   17eac:	add	r3, r3, #4
   17eb0:	ldr	r3, [r3]
   17eb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17eb8:	bl	10e48 <fprintf@plt>
   17ebc:	b	182cc <__assert_fail@plt+0x73b8>
   17ec0:	movw	r0, #49112	; 0xbfd8
   17ec4:	movt	r0, #1
   17ec8:	bl	10e24 <gettext@plt>
   17ecc:	ldr	r3, [fp, #4]
   17ed0:	ldr	r2, [r3]
   17ed4:	ldr	r3, [fp, #4]
   17ed8:	add	r3, r3, #4
   17edc:	ldr	r1, [r3]
   17ee0:	ldr	r3, [fp, #4]
   17ee4:	add	r3, r3, #8
   17ee8:	ldr	r3, [r3]
   17eec:	str	r3, [sp]
   17ef0:	mov	r3, r1
   17ef4:	mov	r1, r0
   17ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17efc:	bl	10e48 <fprintf@plt>
   17f00:	b	182cc <__assert_fail@plt+0x73b8>
   17f04:	movw	r0, #49140	; 0xbff4
   17f08:	movt	r0, #1
   17f0c:	bl	10e24 <gettext@plt>
   17f10:	mov	ip, r0
   17f14:	ldr	r3, [fp, #4]
   17f18:	ldr	r1, [r3]
   17f1c:	ldr	r3, [fp, #4]
   17f20:	add	r3, r3, #4
   17f24:	ldr	r0, [r3]
   17f28:	ldr	r3, [fp, #4]
   17f2c:	add	r3, r3, #8
   17f30:	ldr	r3, [r3]
   17f34:	ldr	r2, [fp, #4]
   17f38:	add	r2, r2, #12
   17f3c:	ldr	r2, [r2]
   17f40:	str	r2, [sp, #4]
   17f44:	str	r3, [sp]
   17f48:	mov	r3, r0
   17f4c:	mov	r2, r1
   17f50:	mov	r1, ip
   17f54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f58:	bl	10e48 <fprintf@plt>
   17f5c:	b	182cc <__assert_fail@plt+0x73b8>
   17f60:	movw	r0, #49172	; 0xc014
   17f64:	movt	r0, #1
   17f68:	bl	10e24 <gettext@plt>
   17f6c:	mov	lr, r0
   17f70:	ldr	r3, [fp, #4]
   17f74:	ldr	r0, [r3]
   17f78:	ldr	r3, [fp, #4]
   17f7c:	add	r3, r3, #4
   17f80:	ldr	ip, [r3]
   17f84:	ldr	r3, [fp, #4]
   17f88:	add	r3, r3, #8
   17f8c:	ldr	r3, [r3]
   17f90:	ldr	r2, [fp, #4]
   17f94:	add	r2, r2, #12
   17f98:	ldr	r2, [r2]
   17f9c:	ldr	r1, [fp, #4]
   17fa0:	add	r1, r1, #16
   17fa4:	ldr	r1, [r1]
   17fa8:	str	r1, [sp, #8]
   17fac:	str	r2, [sp, #4]
   17fb0:	str	r3, [sp]
   17fb4:	mov	r3, ip
   17fb8:	mov	r2, r0
   17fbc:	mov	r1, lr
   17fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fc4:	bl	10e48 <fprintf@plt>
   17fc8:	b	182cc <__assert_fail@plt+0x73b8>
   17fcc:	movw	r0, #49208	; 0xc038
   17fd0:	movt	r0, #1
   17fd4:	bl	10e24 <gettext@plt>
   17fd8:	mov	r4, r0
   17fdc:	ldr	r3, [fp, #4]
   17fe0:	ldr	ip, [r3]
   17fe4:	ldr	r3, [fp, #4]
   17fe8:	add	r3, r3, #4
   17fec:	ldr	lr, [r3]
   17ff0:	ldr	r3, [fp, #4]
   17ff4:	add	r3, r3, #8
   17ff8:	ldr	r3, [r3]
   17ffc:	ldr	r2, [fp, #4]
   18000:	add	r2, r2, #12
   18004:	ldr	r2, [r2]
   18008:	ldr	r1, [fp, #4]
   1800c:	add	r1, r1, #16
   18010:	ldr	r1, [r1]
   18014:	ldr	r0, [fp, #4]
   18018:	add	r0, r0, #20
   1801c:	ldr	r0, [r0]
   18020:	str	r0, [sp, #12]
   18024:	str	r1, [sp, #8]
   18028:	str	r2, [sp, #4]
   1802c:	str	r3, [sp]
   18030:	mov	r3, lr
   18034:	mov	r2, ip
   18038:	mov	r1, r4
   1803c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18040:	bl	10e48 <fprintf@plt>
   18044:	b	182cc <__assert_fail@plt+0x73b8>
   18048:	movw	r0, #49248	; 0xc060
   1804c:	movt	r0, #1
   18050:	bl	10e24 <gettext@plt>
   18054:	mov	r5, r0
   18058:	ldr	r3, [fp, #4]
   1805c:	ldr	lr, [r3]
   18060:	ldr	r3, [fp, #4]
   18064:	add	r3, r3, #4
   18068:	ldr	r4, [r3]
   1806c:	ldr	r3, [fp, #4]
   18070:	add	r3, r3, #8
   18074:	ldr	r3, [r3]
   18078:	ldr	r2, [fp, #4]
   1807c:	add	r2, r2, #12
   18080:	ldr	r2, [r2]
   18084:	ldr	r1, [fp, #4]
   18088:	add	r1, r1, #16
   1808c:	ldr	r1, [r1]
   18090:	ldr	r0, [fp, #4]
   18094:	add	r0, r0, #20
   18098:	ldr	r0, [r0]
   1809c:	ldr	ip, [fp, #4]
   180a0:	add	ip, ip, #24
   180a4:	ldr	ip, [ip]
   180a8:	str	ip, [sp, #16]
   180ac:	str	r0, [sp, #12]
   180b0:	str	r1, [sp, #8]
   180b4:	str	r2, [sp, #4]
   180b8:	str	r3, [sp]
   180bc:	mov	r3, r4
   180c0:	mov	r2, lr
   180c4:	mov	r1, r5
   180c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180cc:	bl	10e48 <fprintf@plt>
   180d0:	b	182cc <__assert_fail@plt+0x73b8>
   180d4:	movw	r0, #49292	; 0xc08c
   180d8:	movt	r0, #1
   180dc:	bl	10e24 <gettext@plt>
   180e0:	mov	r6, r0
   180e4:	ldr	r3, [fp, #4]
   180e8:	ldr	r4, [r3]
   180ec:	ldr	r3, [fp, #4]
   180f0:	add	r3, r3, #4
   180f4:	ldr	r5, [r3]
   180f8:	ldr	r3, [fp, #4]
   180fc:	add	r3, r3, #8
   18100:	ldr	r3, [r3]
   18104:	ldr	r2, [fp, #4]
   18108:	add	r2, r2, #12
   1810c:	ldr	r2, [r2]
   18110:	ldr	r1, [fp, #4]
   18114:	add	r1, r1, #16
   18118:	ldr	r1, [r1]
   1811c:	ldr	r0, [fp, #4]
   18120:	add	r0, r0, #20
   18124:	ldr	r0, [r0]
   18128:	ldr	ip, [fp, #4]
   1812c:	add	ip, ip, #24
   18130:	ldr	ip, [ip]
   18134:	ldr	lr, [fp, #4]
   18138:	add	lr, lr, #28
   1813c:	ldr	lr, [lr]
   18140:	str	lr, [sp, #20]
   18144:	str	ip, [sp, #16]
   18148:	str	r0, [sp, #12]
   1814c:	str	r1, [sp, #8]
   18150:	str	r2, [sp, #4]
   18154:	str	r3, [sp]
   18158:	mov	r3, r5
   1815c:	mov	r2, r4
   18160:	mov	r1, r6
   18164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18168:	bl	10e48 <fprintf@plt>
   1816c:	b	182cc <__assert_fail@plt+0x73b8>
   18170:	movw	r0, #49340	; 0xc0bc
   18174:	movt	r0, #1
   18178:	bl	10e24 <gettext@plt>
   1817c:	mov	r7, r0
   18180:	ldr	r3, [fp, #4]
   18184:	ldr	r5, [r3]
   18188:	ldr	r3, [fp, #4]
   1818c:	add	r3, r3, #4
   18190:	ldr	r6, [r3]
   18194:	ldr	r3, [fp, #4]
   18198:	add	r3, r3, #8
   1819c:	ldr	r3, [r3]
   181a0:	ldr	r2, [fp, #4]
   181a4:	add	r2, r2, #12
   181a8:	ldr	r2, [r2]
   181ac:	ldr	r1, [fp, #4]
   181b0:	add	r1, r1, #16
   181b4:	ldr	r1, [r1]
   181b8:	ldr	r0, [fp, #4]
   181bc:	add	r0, r0, #20
   181c0:	ldr	r0, [r0]
   181c4:	ldr	ip, [fp, #4]
   181c8:	add	ip, ip, #24
   181cc:	ldr	ip, [ip]
   181d0:	ldr	lr, [fp, #4]
   181d4:	add	lr, lr, #28
   181d8:	ldr	lr, [lr]
   181dc:	ldr	r4, [fp, #4]
   181e0:	add	r4, r4, #32
   181e4:	ldr	r4, [r4]
   181e8:	str	r4, [sp, #24]
   181ec:	str	lr, [sp, #20]
   181f0:	str	ip, [sp, #16]
   181f4:	str	r0, [sp, #12]
   181f8:	str	r1, [sp, #8]
   181fc:	str	r2, [sp, #4]
   18200:	str	r3, [sp]
   18204:	mov	r3, r6
   18208:	mov	r2, r5
   1820c:	mov	r1, r7
   18210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18214:	bl	10e48 <fprintf@plt>
   18218:	b	182cc <__assert_fail@plt+0x73b8>
   1821c:	movw	r0, #49392	; 0xc0f0
   18220:	movt	r0, #1
   18224:	bl	10e24 <gettext@plt>
   18228:	mov	r7, r0
   1822c:	ldr	r3, [fp, #4]
   18230:	ldr	r5, [r3]
   18234:	ldr	r3, [fp, #4]
   18238:	add	r3, r3, #4
   1823c:	ldr	r6, [r3]
   18240:	ldr	r3, [fp, #4]
   18244:	add	r3, r3, #8
   18248:	ldr	r3, [r3]
   1824c:	ldr	r2, [fp, #4]
   18250:	add	r2, r2, #12
   18254:	ldr	r2, [r2]
   18258:	ldr	r1, [fp, #4]
   1825c:	add	r1, r1, #16
   18260:	ldr	r1, [r1]
   18264:	ldr	r0, [fp, #4]
   18268:	add	r0, r0, #20
   1826c:	ldr	r0, [r0]
   18270:	ldr	ip, [fp, #4]
   18274:	add	ip, ip, #24
   18278:	ldr	ip, [ip]
   1827c:	ldr	lr, [fp, #4]
   18280:	add	lr, lr, #28
   18284:	ldr	lr, [lr]
   18288:	ldr	r4, [fp, #4]
   1828c:	add	r4, r4, #32
   18290:	ldr	r4, [r4]
   18294:	str	r4, [sp, #24]
   18298:	str	lr, [sp, #20]
   1829c:	str	ip, [sp, #16]
   182a0:	str	r0, [sp, #12]
   182a4:	str	r1, [sp, #8]
   182a8:	str	r2, [sp, #4]
   182ac:	str	r3, [sp]
   182b0:	mov	r3, r6
   182b4:	mov	r2, r5
   182b8:	mov	r1, r7
   182bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182c0:	bl	10e48 <fprintf@plt>
   182c4:	b	182cc <__assert_fail@plt+0x73b8>
   182c8:	nop	{0}
   182cc:	nop	{0}
   182d0:	sub	sp, fp, #20
   182d4:	ldrd	r4, [sp]
   182d8:	ldrd	r6, [sp, #8]
   182dc:	ldr	fp, [sp, #16]
   182e0:	add	sp, sp, #20
   182e4:	pop	{pc}		; (ldr pc, [sp], #4)
   182e8:	str	fp, [sp, #-8]!
   182ec:	str	lr, [sp, #4]
   182f0:	add	fp, sp, #4
   182f4:	sub	sp, sp, #32
   182f8:	str	r0, [fp, #-16]
   182fc:	str	r1, [fp, #-20]	; 0xffffffec
   18300:	str	r2, [fp, #-24]	; 0xffffffe8
   18304:	str	r3, [fp, #-28]	; 0xffffffe4
   18308:	mov	r3, #0
   1830c:	str	r3, [fp, #-8]
   18310:	b	18320 <__assert_fail@plt+0x740c>
   18314:	ldr	r3, [fp, #-8]
   18318:	add	r3, r3, #1
   1831c:	str	r3, [fp, #-8]
   18320:	ldr	r3, [fp, #-8]
   18324:	lsl	r3, r3, #2
   18328:	ldr	r2, [fp, #4]
   1832c:	add	r3, r2, r3
   18330:	ldr	r3, [r3]
   18334:	cmp	r3, #0
   18338:	bne	18314 <__assert_fail@plt+0x7400>
   1833c:	ldr	r3, [fp, #-8]
   18340:	str	r3, [sp, #4]
   18344:	ldr	r3, [fp, #4]
   18348:	str	r3, [sp]
   1834c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18350:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18354:	ldr	r1, [fp, #-20]	; 0xffffffec
   18358:	ldr	r0, [fp, #-16]
   1835c:	bl	17d60 <__assert_fail@plt+0x6e4c>
   18360:	nop	{0}
   18364:	sub	sp, fp, #4
   18368:	ldr	fp, [sp]
   1836c:	add	sp, sp, #4
   18370:	pop	{pc}		; (ldr pc, [sp], #4)
   18374:	str	fp, [sp, #-8]!
   18378:	str	lr, [sp, #4]
   1837c:	add	fp, sp, #4
   18380:	sub	sp, sp, #72	; 0x48
   18384:	str	r0, [fp, #-56]	; 0xffffffc8
   18388:	str	r1, [fp, #-60]	; 0xffffffc4
   1838c:	str	r2, [fp, #-64]	; 0xffffffc0
   18390:	str	r3, [fp, #-68]	; 0xffffffbc
   18394:	mov	r3, #0
   18398:	str	r3, [fp, #-8]
   1839c:	b	183ac <__assert_fail@plt+0x7498>
   183a0:	ldr	r3, [fp, #-8]
   183a4:	add	r3, r3, #1
   183a8:	str	r3, [fp, #-8]
   183ac:	ldr	r3, [fp, #-8]
   183b0:	cmp	r3, #9
   183b4:	bhi	183f8 <__assert_fail@plt+0x74e4>
   183b8:	ldr	r3, [fp, #4]
   183bc:	add	r2, r3, #4
   183c0:	str	r2, [fp, #4]
   183c4:	ldr	r2, [r3]
   183c8:	ldr	r3, [fp, #-8]
   183cc:	lsl	r3, r3, #2
   183d0:	sub	r1, fp, #4
   183d4:	add	r3, r1, r3
   183d8:	str	r2, [r3, #-44]	; 0xffffffd4
   183dc:	ldr	r3, [fp, #-8]
   183e0:	lsl	r3, r3, #2
   183e4:	sub	r2, fp, #4
   183e8:	add	r3, r2, r3
   183ec:	ldr	r3, [r3, #-44]	; 0xffffffd4
   183f0:	cmp	r3, #0
   183f4:	bne	183a0 <__assert_fail@plt+0x748c>
   183f8:	ldr	r3, [fp, #-8]
   183fc:	str	r3, [sp, #4]
   18400:	sub	r3, fp, #48	; 0x30
   18404:	str	r3, [sp]
   18408:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1840c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18410:	ldr	r1, [fp, #-60]	; 0xffffffc4
   18414:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18418:	bl	17d60 <__assert_fail@plt+0x6e4c>
   1841c:	nop	{0}
   18420:	sub	sp, fp, #4
   18424:	ldr	fp, [sp]
   18428:	add	sp, sp, #4
   1842c:	pop	{pc}		; (ldr pc, [sp], #4)
   18430:	push	{r3}		; (str r3, [sp, #-4]!)
   18434:	str	fp, [sp, #-8]!
   18438:	str	lr, [sp, #4]
   1843c:	add	fp, sp, #4
   18440:	sub	sp, sp, #36	; 0x24
   18444:	str	r0, [fp, #-20]	; 0xffffffec
   18448:	str	r1, [fp, #-24]	; 0xffffffe8
   1844c:	str	r2, [fp, #-28]	; 0xffffffe4
   18450:	add	r3, fp, #8
   18454:	str	r3, [fp, #-12]
   18458:	ldr	r3, [fp, #-12]
   1845c:	str	r3, [sp]
   18460:	ldr	r3, [fp, #4]
   18464:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18468:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1846c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18470:	bl	18374 <__assert_fail@plt+0x7460>
   18474:	nop	{0}
   18478:	sub	sp, fp, #4
   1847c:	ldr	fp, [sp]
   18480:	ldr	lr, [sp, #4]
   18484:	add	sp, sp, #8
   18488:	add	sp, sp, #4
   1848c:	bx	lr
   18490:	str	fp, [sp, #-8]!
   18494:	str	lr, [sp, #4]
   18498:	add	fp, sp, #4
   1849c:	movw	r3, #53588	; 0xd154
   184a0:	movt	r3, #2
   184a4:	ldr	r3, [r3]
   184a8:	mov	r1, r3
   184ac:	mov	r0, #10
   184b0:	bl	10d4c <fputc_unlocked@plt>
   184b4:	movw	r0, #49452	; 0xc12c
   184b8:	movt	r0, #1
   184bc:	bl	10e24 <gettext@plt>
   184c0:	mov	r3, r0
   184c4:	movw	r1, #49472	; 0xc140
   184c8:	movt	r1, #1
   184cc:	mov	r0, r3
   184d0:	bl	10cc8 <printf@plt>
   184d4:	movw	r0, #49496	; 0xc158
   184d8:	movt	r0, #1
   184dc:	bl	10e24 <gettext@plt>
   184e0:	mov	r3, r0
   184e4:	movw	r2, #49516	; 0xc16c
   184e8:	movt	r2, #1
   184ec:	movw	r1, #49556	; 0xc194
   184f0:	movt	r1, #1
   184f4:	mov	r0, r3
   184f8:	bl	10cc8 <printf@plt>
   184fc:	movw	r0, #49572	; 0xc1a4
   18500:	movt	r0, #1
   18504:	bl	10e24 <gettext@plt>
   18508:	mov	r3, r0
   1850c:	movw	r1, #49612	; 0xc1cc
   18510:	movt	r1, #1
   18514:	mov	r0, r3
   18518:	bl	10cc8 <printf@plt>
   1851c:	nop	{0}
   18520:	sub	sp, fp, #4
   18524:	ldr	fp, [sp]
   18528:	add	sp, sp, #4
   1852c:	pop	{pc}		; (ldr pc, [sp], #4)
   18530:	str	fp, [sp, #-8]!
   18534:	str	lr, [sp, #4]
   18538:	add	fp, sp, #4
   1853c:	sub	sp, sp, #16
   18540:	str	r0, [fp, #-8]
   18544:	str	r1, [fp, #-12]
   18548:	str	r2, [fp, #-16]
   1854c:	ldr	r2, [fp, #-16]
   18550:	ldr	r1, [fp, #-12]
   18554:	ldr	r0, [fp, #-8]
   18558:	bl	18714 <__assert_fail@plt+0x7800>
   1855c:	mov	r3, r0
   18560:	mov	r0, r3
   18564:	sub	sp, fp, #4
   18568:	ldr	fp, [sp]
   1856c:	add	sp, sp, #4
   18570:	pop	{pc}		; (ldr pc, [sp], #4)
   18574:	str	fp, [sp, #-8]!
   18578:	str	lr, [sp, #4]
   1857c:	add	fp, sp, #4
   18580:	sub	sp, sp, #8
   18584:	str	r0, [fp, #-8]
   18588:	ldr	r3, [fp, #-8]
   1858c:	cmp	r3, #0
   18590:	bne	18598 <__assert_fail@plt+0x7684>
   18594:	bl	18e24 <__assert_fail@plt+0x7f10>
   18598:	ldr	r3, [fp, #-8]
   1859c:	mov	r0, r3
   185a0:	sub	sp, fp, #4
   185a4:	ldr	fp, [sp]
   185a8:	add	sp, sp, #4
   185ac:	pop	{pc}		; (ldr pc, [sp], #4)
   185b0:	str	fp, [sp, #-8]!
   185b4:	str	lr, [sp, #4]
   185b8:	add	fp, sp, #4
   185bc:	sub	sp, sp, #8
   185c0:	str	r0, [fp, #-8]
   185c4:	ldr	r0, [fp, #-8]
   185c8:	bl	19838 <__assert_fail@plt+0x8924>
   185cc:	mov	r3, r0
   185d0:	mov	r0, r3
   185d4:	bl	18574 <__assert_fail@plt+0x7660>
   185d8:	mov	r3, r0
   185dc:	mov	r0, r3
   185e0:	sub	sp, fp, #4
   185e4:	ldr	fp, [sp]
   185e8:	add	sp, sp, #4
   185ec:	pop	{pc}		; (ldr pc, [sp], #4)
   185f0:	str	fp, [sp, #-8]!
   185f4:	str	lr, [sp, #4]
   185f8:	add	fp, sp, #4
   185fc:	sub	sp, sp, #8
   18600:	str	r0, [fp, #-8]
   18604:	ldr	r0, [fp, #-8]
   18608:	bl	19e5c <__assert_fail@plt+0x8f48>
   1860c:	mov	r3, r0
   18610:	mov	r0, r3
   18614:	bl	18574 <__assert_fail@plt+0x7660>
   18618:	mov	r3, r0
   1861c:	mov	r0, r3
   18620:	sub	sp, fp, #4
   18624:	ldr	fp, [sp]
   18628:	add	sp, sp, #4
   1862c:	pop	{pc}		; (ldr pc, [sp], #4)
   18630:	str	fp, [sp, #-8]!
   18634:	str	lr, [sp, #4]
   18638:	add	fp, sp, #4
   1863c:	sub	sp, sp, #8
   18640:	str	r0, [fp, #-8]
   18644:	ldr	r0, [fp, #-8]
   18648:	bl	185b0 <__assert_fail@plt+0x769c>
   1864c:	mov	r3, r0
   18650:	mov	r0, r3
   18654:	sub	sp, fp, #4
   18658:	ldr	fp, [sp]
   1865c:	add	sp, sp, #4
   18660:	pop	{pc}		; (ldr pc, [sp], #4)
   18664:	str	fp, [sp, #-8]!
   18668:	str	lr, [sp, #4]
   1866c:	add	fp, sp, #4
   18670:	sub	sp, sp, #16
   18674:	str	r0, [fp, #-16]
   18678:	str	r1, [fp, #-20]	; 0xffffffec
   1867c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18680:	ldr	r0, [fp, #-16]
   18684:	bl	198c8 <__assert_fail@plt+0x89b4>
   18688:	str	r0, [fp, #-8]
   1868c:	ldr	r3, [fp, #-8]
   18690:	cmp	r3, #0
   18694:	bne	186b4 <__assert_fail@plt+0x77a0>
   18698:	ldr	r3, [fp, #-16]
   1869c:	cmp	r3, #0
   186a0:	beq	186b0 <__assert_fail@plt+0x779c>
   186a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   186a8:	cmp	r3, #0
   186ac:	beq	186b4 <__assert_fail@plt+0x77a0>
   186b0:	bl	18e24 <__assert_fail@plt+0x7f10>
   186b4:	ldr	r3, [fp, #-8]
   186b8:	mov	r0, r3
   186bc:	sub	sp, fp, #4
   186c0:	ldr	fp, [sp]
   186c4:	add	sp, sp, #4
   186c8:	pop	{pc}		; (ldr pc, [sp], #4)
   186cc:	str	fp, [sp, #-8]!
   186d0:	str	lr, [sp, #4]
   186d4:	add	fp, sp, #4
   186d8:	sub	sp, sp, #8
   186dc:	str	r0, [fp, #-8]
   186e0:	str	r1, [fp, #-12]
   186e4:	ldr	r1, [fp, #-12]
   186e8:	ldr	r0, [fp, #-8]
   186ec:	bl	19e94 <__assert_fail@plt+0x8f80>
   186f0:	mov	r3, r0
   186f4:	mov	r0, r3
   186f8:	bl	18574 <__assert_fail@plt+0x7660>
   186fc:	mov	r3, r0
   18700:	mov	r0, r3
   18704:	sub	sp, fp, #4
   18708:	ldr	fp, [sp]
   1870c:	add	sp, sp, #4
   18710:	pop	{pc}		; (ldr pc, [sp], #4)
   18714:	str	fp, [sp, #-8]!
   18718:	str	lr, [sp, #4]
   1871c:	add	fp, sp, #4
   18720:	sub	sp, sp, #24
   18724:	str	r0, [fp, #-16]
   18728:	str	r1, [fp, #-20]	; 0xffffffec
   1872c:	str	r2, [fp, #-24]	; 0xffffffe8
   18730:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18734:	ldr	r1, [fp, #-20]	; 0xffffffec
   18738:	ldr	r0, [fp, #-16]
   1873c:	bl	1a0c4 <__assert_fail@plt+0x91b0>
   18740:	str	r0, [fp, #-8]
   18744:	ldr	r3, [fp, #-8]
   18748:	cmp	r3, #0
   1874c:	bne	18778 <__assert_fail@plt+0x7864>
   18750:	ldr	r3, [fp, #-16]
   18754:	cmp	r3, #0
   18758:	beq	18774 <__assert_fail@plt+0x7860>
   1875c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18760:	cmp	r3, #0
   18764:	beq	18778 <__assert_fail@plt+0x7864>
   18768:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1876c:	cmp	r3, #0
   18770:	beq	18778 <__assert_fail@plt+0x7864>
   18774:	bl	18e24 <__assert_fail@plt+0x7f10>
   18778:	ldr	r3, [fp, #-8]
   1877c:	mov	r0, r3
   18780:	sub	sp, fp, #4
   18784:	ldr	fp, [sp]
   18788:	add	sp, sp, #4
   1878c:	pop	{pc}		; (ldr pc, [sp], #4)
   18790:	str	fp, [sp, #-8]!
   18794:	str	lr, [sp, #4]
   18798:	add	fp, sp, #4
   1879c:	sub	sp, sp, #16
   187a0:	str	r0, [fp, #-8]
   187a4:	str	r1, [fp, #-12]
   187a8:	str	r2, [fp, #-16]
   187ac:	ldr	r2, [fp, #-16]
   187b0:	ldr	r1, [fp, #-12]
   187b4:	ldr	r0, [fp, #-8]
   187b8:	bl	19f34 <__assert_fail@plt+0x9020>
   187bc:	mov	r3, r0
   187c0:	mov	r0, r3
   187c4:	bl	18574 <__assert_fail@plt+0x7660>
   187c8:	mov	r3, r0
   187cc:	mov	r0, r3
   187d0:	sub	sp, fp, #4
   187d4:	ldr	fp, [sp]
   187d8:	add	sp, sp, #4
   187dc:	pop	{pc}		; (ldr pc, [sp], #4)
   187e0:	str	fp, [sp, #-8]!
   187e4:	str	lr, [sp, #4]
   187e8:	add	fp, sp, #4
   187ec:	sub	sp, sp, #8
   187f0:	str	r0, [fp, #-8]
   187f4:	str	r1, [fp, #-12]
   187f8:	ldr	r2, [fp, #-12]
   187fc:	ldr	r1, [fp, #-8]
   18800:	mov	r0, #0
   18804:	bl	18714 <__assert_fail@plt+0x7800>
   18808:	mov	r3, r0
   1880c:	mov	r0, r3
   18810:	sub	sp, fp, #4
   18814:	ldr	fp, [sp]
   18818:	add	sp, sp, #4
   1881c:	pop	{pc}		; (ldr pc, [sp], #4)
   18820:	str	fp, [sp, #-8]!
   18824:	str	lr, [sp, #4]
   18828:	add	fp, sp, #4
   1882c:	sub	sp, sp, #8
   18830:	str	r0, [fp, #-8]
   18834:	str	r1, [fp, #-12]
   18838:	ldr	r2, [fp, #-12]
   1883c:	ldr	r1, [fp, #-8]
   18840:	mov	r0, #0
   18844:	bl	18790 <__assert_fail@plt+0x787c>
   18848:	mov	r3, r0
   1884c:	mov	r0, r3
   18850:	sub	sp, fp, #4
   18854:	ldr	fp, [sp]
   18858:	add	sp, sp, #4
   1885c:	pop	{pc}		; (ldr pc, [sp], #4)
   18860:	str	fp, [sp, #-8]!
   18864:	str	lr, [sp, #4]
   18868:	add	fp, sp, #4
   1886c:	sub	sp, sp, #8
   18870:	str	r0, [fp, #-8]
   18874:	str	r1, [fp, #-12]
   18878:	mov	r2, #1
   1887c:	ldr	r1, [fp, #-12]
   18880:	ldr	r0, [fp, #-8]
   18884:	bl	188a0 <__assert_fail@plt+0x798c>
   18888:	mov	r3, r0
   1888c:	mov	r0, r3
   18890:	sub	sp, fp, #4
   18894:	ldr	fp, [sp]
   18898:	add	sp, sp, #4
   1889c:	pop	{pc}		; (ldr pc, [sp], #4)
   188a0:	str	fp, [sp, #-8]!
   188a4:	str	lr, [sp, #4]
   188a8:	add	fp, sp, #4
   188ac:	sub	sp, sp, #24
   188b0:	str	r0, [fp, #-16]
   188b4:	str	r1, [fp, #-20]	; 0xffffffec
   188b8:	str	r2, [fp, #-24]	; 0xffffffe8
   188bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   188c0:	ldr	r3, [r3]
   188c4:	str	r3, [fp, #-8]
   188c8:	ldr	r3, [fp, #-16]
   188cc:	cmp	r3, #0
   188d0:	bne	18918 <__assert_fail@plt+0x7a04>
   188d4:	ldr	r3, [fp, #-8]
   188d8:	cmp	r3, #0
   188dc:	bne	18954 <__assert_fail@plt+0x7a40>
   188e0:	mov	r2, #64	; 0x40
   188e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   188e8:	udiv	r3, r2, r3
   188ec:	str	r3, [fp, #-8]
   188f0:	ldr	r3, [fp, #-8]
   188f4:	cmp	r3, #0
   188f8:	moveq	r3, #1
   188fc:	movne	r3, #0
   18900:	uxtb	r3, r3
   18904:	mov	r2, r3
   18908:	ldr	r3, [fp, #-8]
   1890c:	add	r3, r2, r3
   18910:	str	r3, [fp, #-8]
   18914:	b	18954 <__assert_fail@plt+0x7a40>
   18918:	ldr	r2, [fp, #-8]
   1891c:	ldr	r3, [fp, #-8]
   18920:	lsr	r3, r3, #1
   18924:	add	r3, r3, #1
   18928:	mov	r1, #0
   1892c:	adds	r3, r2, r3
   18930:	bcc	18938 <__assert_fail@plt+0x7a24>
   18934:	mov	r1, #1
   18938:	str	r3, [fp, #-8]
   1893c:	mov	r3, r1
   18940:	and	r3, r3, #1
   18944:	uxtb	r3, r3
   18948:	cmp	r3, #0
   1894c:	beq	18954 <__assert_fail@plt+0x7a40>
   18950:	bl	18e24 <__assert_fail@plt+0x7f10>
   18954:	ldr	r3, [fp, #-8]
   18958:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1895c:	mov	r1, r3
   18960:	ldr	r0, [fp, #-16]
   18964:	bl	18714 <__assert_fail@plt+0x7800>
   18968:	str	r0, [fp, #-16]
   1896c:	ldr	r2, [fp, #-8]
   18970:	ldr	r3, [fp, #-20]	; 0xffffffec
   18974:	str	r2, [r3]
   18978:	ldr	r3, [fp, #-16]
   1897c:	mov	r0, r3
   18980:	sub	sp, fp, #4
   18984:	ldr	fp, [sp]
   18988:	add	sp, sp, #4
   1898c:	pop	{pc}		; (ldr pc, [sp], #4)
   18990:	str	fp, [sp, #-8]!
   18994:	str	lr, [sp, #4]
   18998:	add	fp, sp, #4
   1899c:	sub	sp, sp, #32
   189a0:	str	r0, [fp, #-24]	; 0xffffffe8
   189a4:	str	r1, [fp, #-28]	; 0xffffffe4
   189a8:	str	r2, [fp, #-32]	; 0xffffffe0
   189ac:	str	r3, [fp, #-36]	; 0xffffffdc
   189b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   189b4:	ldr	r3, [r3]
   189b8:	str	r3, [fp, #-8]
   189bc:	ldr	r3, [fp, #-8]
   189c0:	asr	r3, r3, #1
   189c4:	mov	r1, #0
   189c8:	ldr	r2, [fp, #-8]
   189cc:	adds	r3, r2, r3
   189d0:	bvc	189d8 <__assert_fail@plt+0x7ac4>
   189d4:	mov	r1, #1
   189d8:	str	r3, [fp, #-16]
   189dc:	mov	r3, r1
   189e0:	and	r3, r3, #1
   189e4:	uxtb	r3, r3
   189e8:	cmp	r3, #0
   189ec:	beq	189f8 <__assert_fail@plt+0x7ae4>
   189f0:	mvn	r3, #-2147483648	; 0x80000000
   189f4:	str	r3, [fp, #-16]
   189f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   189fc:	cmp	r3, #0
   18a00:	blt	18a1c <__assert_fail@plt+0x7b08>
   18a04:	ldr	r3, [fp, #-16]
   18a08:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18a0c:	cmp	r2, r3
   18a10:	bge	18a1c <__assert_fail@plt+0x7b08>
   18a14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18a18:	str	r3, [fp, #-16]
   18a1c:	ldr	r2, [fp, #-16]
   18a20:	mov	lr, #0
   18a24:	ldr	r3, [fp, #4]
   18a28:	smull	r2, r3, r2, r3
   18a2c:	mov	r0, #0
   18a30:	mov	r1, #0
   18a34:	mov	r0, r3
   18a38:	asr	r1, r3, #31
   18a3c:	asr	ip, r2, #31
   18a40:	cmp	ip, r0
   18a44:	beq	18a4c <__assert_fail@plt+0x7b38>
   18a48:	mov	lr, #1
   18a4c:	mov	r3, r2
   18a50:	str	r3, [fp, #-20]	; 0xffffffec
   18a54:	mov	r3, lr
   18a58:	and	r3, r3, #1
   18a5c:	uxtb	r3, r3
   18a60:	cmp	r3, #0
   18a64:	beq	18a70 <__assert_fail@plt+0x7b5c>
   18a68:	mvn	r3, #-2147483648	; 0x80000000
   18a6c:	b	18a88 <__assert_fail@plt+0x7b74>
   18a70:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a74:	cmp	r3, #63	; 0x3f
   18a78:	bgt	18a84 <__assert_fail@plt+0x7b70>
   18a7c:	mov	r3, #64	; 0x40
   18a80:	b	18a88 <__assert_fail@plt+0x7b74>
   18a84:	mov	r3, #0
   18a88:	str	r3, [fp, #-12]
   18a8c:	ldr	r3, [fp, #-12]
   18a90:	cmp	r3, #0
   18a94:	beq	18acc <__assert_fail@plt+0x7bb8>
   18a98:	ldr	r2, [fp, #-12]
   18a9c:	ldr	r3, [fp, #4]
   18aa0:	sdiv	r3, r2, r3
   18aa4:	str	r3, [fp, #-16]
   18aa8:	ldr	r3, [fp, #-12]
   18aac:	ldr	r2, [fp, #4]
   18ab0:	sdiv	r2, r3, r2
   18ab4:	ldr	r1, [fp, #4]
   18ab8:	mul	r2, r1, r2
   18abc:	sub	r3, r3, r2
   18ac0:	ldr	r2, [fp, #-12]
   18ac4:	sub	r3, r2, r3
   18ac8:	str	r3, [fp, #-20]	; 0xffffffec
   18acc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ad0:	cmp	r3, #0
   18ad4:	bne	18ae4 <__assert_fail@plt+0x7bd0>
   18ad8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18adc:	mov	r2, #0
   18ae0:	str	r2, [r3]
   18ae4:	ldr	r2, [fp, #-16]
   18ae8:	ldr	r3, [fp, #-8]
   18aec:	sub	r3, r2, r3
   18af0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18af4:	cmp	r2, r3
   18af8:	ble	18b98 <__assert_fail@plt+0x7c84>
   18afc:	mov	r1, #0
   18b00:	ldr	r2, [fp, #-8]
   18b04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18b08:	adds	r3, r2, r3
   18b0c:	bvc	18b14 <__assert_fail@plt+0x7c00>
   18b10:	mov	r1, #1
   18b14:	str	r3, [fp, #-16]
   18b18:	mov	r3, r1
   18b1c:	and	r3, r3, #1
   18b20:	uxtb	r3, r3
   18b24:	cmp	r3, #0
   18b28:	bne	18b94 <__assert_fail@plt+0x7c80>
   18b2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18b30:	cmp	r3, #0
   18b34:	blt	18b48 <__assert_fail@plt+0x7c34>
   18b38:	ldr	r3, [fp, #-16]
   18b3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18b40:	cmp	r2, r3
   18b44:	blt	18b94 <__assert_fail@plt+0x7c80>
   18b48:	ldr	r2, [fp, #-16]
   18b4c:	mov	lr, #0
   18b50:	ldr	r3, [fp, #4]
   18b54:	smull	r2, r3, r2, r3
   18b58:	mov	r0, #0
   18b5c:	mov	r1, #0
   18b60:	mov	r0, r3
   18b64:	asr	r1, r3, #31
   18b68:	asr	ip, r2, #31
   18b6c:	cmp	ip, r0
   18b70:	beq	18b78 <__assert_fail@plt+0x7c64>
   18b74:	mov	lr, #1
   18b78:	mov	r3, r2
   18b7c:	str	r3, [fp, #-20]	; 0xffffffec
   18b80:	mov	r3, lr
   18b84:	and	r3, r3, #1
   18b88:	uxtb	r3, r3
   18b8c:	cmp	r3, #0
   18b90:	beq	18b98 <__assert_fail@plt+0x7c84>
   18b94:	bl	18e24 <__assert_fail@plt+0x7f10>
   18b98:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b9c:	mov	r1, r3
   18ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ba4:	bl	18664 <__assert_fail@plt+0x7750>
   18ba8:	str	r0, [fp, #-24]	; 0xffffffe8
   18bac:	ldr	r2, [fp, #-16]
   18bb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18bb4:	str	r2, [r3]
   18bb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18bbc:	mov	r0, r3
   18bc0:	sub	sp, fp, #4
   18bc4:	ldr	fp, [sp]
   18bc8:	add	sp, sp, #4
   18bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   18bd0:	str	fp, [sp, #-8]!
   18bd4:	str	lr, [sp, #4]
   18bd8:	add	fp, sp, #4
   18bdc:	sub	sp, sp, #8
   18be0:	str	r0, [fp, #-8]
   18be4:	mov	r1, #1
   18be8:	ldr	r0, [fp, #-8]
   18bec:	bl	18c40 <__assert_fail@plt+0x7d2c>
   18bf0:	mov	r3, r0
   18bf4:	mov	r0, r3
   18bf8:	sub	sp, fp, #4
   18bfc:	ldr	fp, [sp]
   18c00:	add	sp, sp, #4
   18c04:	pop	{pc}		; (ldr pc, [sp], #4)
   18c08:	str	fp, [sp, #-8]!
   18c0c:	str	lr, [sp, #4]
   18c10:	add	fp, sp, #4
   18c14:	sub	sp, sp, #8
   18c18:	str	r0, [fp, #-8]
   18c1c:	mov	r1, #1
   18c20:	ldr	r0, [fp, #-8]
   18c24:	bl	18c88 <__assert_fail@plt+0x7d74>
   18c28:	mov	r3, r0
   18c2c:	mov	r0, r3
   18c30:	sub	sp, fp, #4
   18c34:	ldr	fp, [sp]
   18c38:	add	sp, sp, #4
   18c3c:	pop	{pc}		; (ldr pc, [sp], #4)
   18c40:	str	fp, [sp, #-8]!
   18c44:	str	lr, [sp, #4]
   18c48:	add	fp, sp, #4
   18c4c:	sub	sp, sp, #8
   18c50:	str	r0, [fp, #-8]
   18c54:	str	r1, [fp, #-12]
   18c58:	ldr	r1, [fp, #-12]
   18c5c:	ldr	r0, [fp, #-8]
   18c60:	bl	19768 <__assert_fail@plt+0x8854>
   18c64:	mov	r3, r0
   18c68:	mov	r0, r3
   18c6c:	bl	18574 <__assert_fail@plt+0x7660>
   18c70:	mov	r3, r0
   18c74:	mov	r0, r3
   18c78:	sub	sp, fp, #4
   18c7c:	ldr	fp, [sp]
   18c80:	add	sp, sp, #4
   18c84:	pop	{pc}		; (ldr pc, [sp], #4)
   18c88:	str	fp, [sp, #-8]!
   18c8c:	str	lr, [sp, #4]
   18c90:	add	fp, sp, #4
   18c94:	sub	sp, sp, #8
   18c98:	str	r0, [fp, #-8]
   18c9c:	str	r1, [fp, #-12]
   18ca0:	ldr	r1, [fp, #-12]
   18ca4:	ldr	r0, [fp, #-8]
   18ca8:	bl	19ef0 <__assert_fail@plt+0x8fdc>
   18cac:	mov	r3, r0
   18cb0:	mov	r0, r3
   18cb4:	bl	18574 <__assert_fail@plt+0x7660>
   18cb8:	mov	r3, r0
   18cbc:	mov	r0, r3
   18cc0:	sub	sp, fp, #4
   18cc4:	ldr	fp, [sp]
   18cc8:	add	sp, sp, #4
   18ccc:	pop	{pc}		; (ldr pc, [sp], #4)
   18cd0:	str	fp, [sp, #-8]!
   18cd4:	str	lr, [sp, #4]
   18cd8:	add	fp, sp, #4
   18cdc:	sub	sp, sp, #8
   18ce0:	str	r0, [fp, #-8]
   18ce4:	str	r1, [fp, #-12]
   18ce8:	ldr	r0, [fp, #-12]
   18cec:	bl	185b0 <__assert_fail@plt+0x769c>
   18cf0:	mov	r3, r0
   18cf4:	ldr	r2, [fp, #-12]
   18cf8:	ldr	r1, [fp, #-8]
   18cfc:	mov	r0, r3
   18d00:	bl	10d04 <memcpy@plt>
   18d04:	mov	r3, r0
   18d08:	mov	r0, r3
   18d0c:	sub	sp, fp, #4
   18d10:	ldr	fp, [sp]
   18d14:	add	sp, sp, #4
   18d18:	pop	{pc}		; (ldr pc, [sp], #4)
   18d1c:	str	fp, [sp, #-8]!
   18d20:	str	lr, [sp, #4]
   18d24:	add	fp, sp, #4
   18d28:	sub	sp, sp, #8
   18d2c:	str	r0, [fp, #-8]
   18d30:	str	r1, [fp, #-12]
   18d34:	ldr	r0, [fp, #-12]
   18d38:	bl	185f0 <__assert_fail@plt+0x76dc>
   18d3c:	mov	r3, r0
   18d40:	mov	r0, r3
   18d44:	ldr	r3, [fp, #-12]
   18d48:	mov	r2, r3
   18d4c:	ldr	r1, [fp, #-8]
   18d50:	bl	10d04 <memcpy@plt>
   18d54:	mov	r3, r0
   18d58:	mov	r0, r3
   18d5c:	sub	sp, fp, #4
   18d60:	ldr	fp, [sp]
   18d64:	add	sp, sp, #4
   18d68:	pop	{pc}		; (ldr pc, [sp], #4)
   18d6c:	str	fp, [sp, #-8]!
   18d70:	str	lr, [sp, #4]
   18d74:	add	fp, sp, #4
   18d78:	sub	sp, sp, #16
   18d7c:	str	r0, [fp, #-16]
   18d80:	str	r1, [fp, #-20]	; 0xffffffec
   18d84:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d88:	add	r3, r3, #1
   18d8c:	mov	r0, r3
   18d90:	bl	185f0 <__assert_fail@plt+0x76dc>
   18d94:	mov	r3, r0
   18d98:	str	r3, [fp, #-8]
   18d9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18da0:	ldr	r2, [fp, #-8]
   18da4:	add	r3, r2, r3
   18da8:	mov	r2, #0
   18dac:	strb	r2, [r3]
   18db0:	ldr	r3, [fp, #-20]	; 0xffffffec
   18db4:	mov	r2, r3
   18db8:	ldr	r1, [fp, #-16]
   18dbc:	ldr	r0, [fp, #-8]
   18dc0:	bl	10d04 <memcpy@plt>
   18dc4:	mov	r3, r0
   18dc8:	mov	r0, r3
   18dcc:	sub	sp, fp, #4
   18dd0:	ldr	fp, [sp]
   18dd4:	add	sp, sp, #4
   18dd8:	pop	{pc}		; (ldr pc, [sp], #4)
   18ddc:	str	fp, [sp, #-8]!
   18de0:	str	lr, [sp, #4]
   18de4:	add	fp, sp, #4
   18de8:	sub	sp, sp, #8
   18dec:	str	r0, [fp, #-8]
   18df0:	ldr	r0, [fp, #-8]
   18df4:	bl	10e30 <strlen@plt>
   18df8:	mov	r3, r0
   18dfc:	add	r3, r3, #1
   18e00:	mov	r1, r3
   18e04:	ldr	r0, [fp, #-8]
   18e08:	bl	18cd0 <__assert_fail@plt+0x7dbc>
   18e0c:	mov	r3, r0
   18e10:	mov	r0, r3
   18e14:	sub	sp, fp, #4
   18e18:	ldr	fp, [sp]
   18e1c:	add	sp, sp, #4
   18e20:	pop	{pc}		; (ldr pc, [sp], #4)
   18e24:	strd	r4, [sp, #-16]!
   18e28:	str	fp, [sp, #8]
   18e2c:	str	lr, [sp, #12]
   18e30:	add	fp, sp, #12
   18e34:	movw	r3, #53492	; 0xd0f4
   18e38:	movt	r3, #2
   18e3c:	ldr	r4, [r3]
   18e40:	movw	r0, #49692	; 0xc21c
   18e44:	movt	r0, #1
   18e48:	bl	10e24 <gettext@plt>
   18e4c:	mov	r3, r0
   18e50:	movw	r2, #49712	; 0xc230
   18e54:	movt	r2, #1
   18e58:	mov	r1, #0
   18e5c:	mov	r0, r4
   18e60:	bl	10dc4 <error@plt>
   18e64:	bl	10efc <abort@plt>
   18e68:	push	{fp}		; (str fp, [sp, #-4]!)
   18e6c:	add	fp, sp, #0
   18e70:	nop	{0}
   18e74:	add	sp, fp, #0
   18e78:	pop	{fp}		; (ldr fp, [sp], #4)
   18e7c:	bx	lr
   18e80:	str	fp, [sp, #-8]!
   18e84:	str	lr, [sp, #4]
   18e88:	add	fp, sp, #4
   18e8c:	sub	sp, sp, #8
   18e90:	str	r0, [fp, #-8]
   18e94:	str	r1, [fp, #-12]
   18e98:	ldr	r1, [fp, #-12]
   18e9c:	ldr	r0, [fp, #-8]
   18ea0:	bl	199a8 <__assert_fail@plt+0x8a94>
   18ea4:	mov	r3, r0
   18ea8:	cmp	r3, #0
   18eac:	bge	18eb4 <__assert_fail@plt+0x7fa0>
   18eb0:	bl	18e68 <__assert_fail@plt+0x7f54>
   18eb4:	nop	{0}
   18eb8:	sub	sp, fp, #4
   18ebc:	ldr	fp, [sp]
   18ec0:	add	sp, sp, #4
   18ec4:	pop	{pc}		; (ldr pc, [sp], #4)
   18ec8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   18ecc:	strd	r6, [sp, #8]
   18ed0:	strd	r8, [sp, #16]
   18ed4:	str	fp, [sp, #24]
   18ed8:	add	fp, sp, #24
   18edc:	sub	sp, sp, #44	; 0x2c
   18ee0:	str	r0, [fp, #-40]	; 0xffffffd8
   18ee4:	str	r1, [fp, #-44]	; 0xffffffd4
   18ee8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18eec:	ldrd	r4, [r3]
   18ef0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18ef4:	mov	r6, r3
   18ef8:	asr	r7, r6, #31
   18efc:	mov	r2, #0
   18f00:	mov	r3, #0
   18f04:	strd	r2, [fp, #-60]	; 0xffffffc4
   18f08:	cmp	r6, #0
   18f0c:	sbcs	r3, r7, #0
   18f10:	bge	18f28 <__assert_fail@plt+0x8014>
   18f14:	orrs	r3, r4, r5
   18f18:	beq	18f28 <__assert_fail@plt+0x8014>
   18f1c:	mov	r2, #1
   18f20:	mov	r3, #0
   18f24:	strd	r2, [fp, #-60]	; 0xffffffc4
   18f28:	mov	r0, #0
   18f2c:	mov	r1, #0
   18f30:	mov	r0, r7
   18f34:	mov	r1, #0
   18f38:	mov	r2, #0
   18f3c:	mov	r3, #0
   18f40:	mov	r2, r5
   18f44:	mov	r3, #0
   18f48:	cmp	r0, #0
   18f4c:	bne	18f70 <__assert_fail@plt+0x805c>
   18f50:	cmp	r2, #0
   18f54:	bne	18f64 <__assert_fail@plt+0x8050>
   18f58:	umull	r2, r3, r6, r4
   18f5c:	strd	r2, [fp, #-52]	; 0xffffffcc
   18f60:	b	1903c <__assert_fail@plt+0x8128>
   18f64:	mov	r3, r2
   18f68:	mov	r2, r6
   18f6c:	b	18f80 <__assert_fail@plt+0x806c>
   18f70:	cmp	r2, #0
   18f74:	bne	18ff8 <__assert_fail@plt+0x80e4>
   18f78:	mov	r3, r0
   18f7c:	mov	r2, r4
   18f80:	umull	r8, r9, r6, r4
   18f84:	umull	r2, r3, r2, r3
   18f88:	mov	r0, r2
   18f8c:	mov	r1, r3
   18f90:	mov	r2, #0
   18f94:	mov	r3, #0
   18f98:	mov	r2, r9
   18f9c:	mov	r3, #0
   18fa0:	adds	ip, r0, r2
   18fa4:	str	ip, [fp, #-68]	; 0xffffffbc
   18fa8:	adc	r3, r1, r3
   18fac:	str	r3, [fp, #-64]	; 0xffffffc0
   18fb0:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   18fb4:	mov	r2, #0
   18fb8:	mov	r3, #0
   18fbc:	mov	r2, r1
   18fc0:	asr	r3, r1, #31
   18fc4:	cmp	r2, #0
   18fc8:	bne	19014 <__assert_fail@plt+0x8100>
   18fcc:	mov	r2, #0
   18fd0:	mov	r3, #0
   18fd4:	mov	r3, r0
   18fd8:	mov	r2, #0
   18fdc:	mov	r0, r8
   18fe0:	mov	r1, #0
   18fe4:	orr	ip, r2, r0
   18fe8:	str	ip, [fp, #-52]	; 0xffffffcc
   18fec:	orr	r3, r3, r1
   18ff0:	str	r3, [fp, #-48]	; 0xffffffd0
   18ff4:	b	1903c <__assert_fail@plt+0x8128>
   18ff8:	mul	r2, r4, r7
   18ffc:	mul	r3, r6, r5
   19000:	add	r1, r2, r3
   19004:	umull	r2, r3, r6, r4
   19008:	add	r1, r1, r3
   1900c:	mov	r3, r1
   19010:	strd	r2, [fp, #-52]	; 0xffffffcc
   19014:	mul	r2, r4, r7
   19018:	mul	r3, r6, r5
   1901c:	add	r1, r2, r3
   19020:	umull	r2, r3, r6, r4
   19024:	add	r1, r1, r3
   19028:	mov	r3, r1
   1902c:	strd	r2, [fp, #-52]	; 0xffffffcc
   19030:	mov	r2, #1
   19034:	mov	r3, #0
   19038:	strd	r2, [fp, #-60]	; 0xffffffc4
   1903c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   19040:	strd	r2, [fp, #-36]	; 0xffffffdc
   19044:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   19048:	mov	r3, r2
   1904c:	and	r3, r3, #1
   19050:	uxtb	r3, r3
   19054:	cmp	r3, #0
   19058:	beq	19074 <__assert_fail@plt+0x8160>
   1905c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19060:	mvn	r2, #0
   19064:	mvn	r3, #0
   19068:	strd	r2, [r1]
   1906c:	mov	r3, #1
   19070:	b	19084 <__assert_fail@plt+0x8170>
   19074:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19078:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1907c:	strd	r2, [r1]
   19080:	mov	r3, #0
   19084:	mov	r0, r3
   19088:	sub	sp, fp, #24
   1908c:	ldrd	r4, [sp]
   19090:	ldrd	r6, [sp, #8]
   19094:	ldrd	r8, [sp, #16]
   19098:	ldr	fp, [sp, #24]
   1909c:	add	sp, sp, #28
   190a0:	bx	lr
   190a4:	str	fp, [sp, #-8]!
   190a8:	str	lr, [sp, #4]
   190ac:	add	fp, sp, #4
   190b0:	sub	sp, sp, #24
   190b4:	str	r0, [fp, #-16]
   190b8:	str	r1, [fp, #-20]	; 0xffffffec
   190bc:	str	r2, [fp, #-24]	; 0xffffffe8
   190c0:	mov	r3, #0
   190c4:	str	r3, [fp, #-8]
   190c8:	b	190e8 <__assert_fail@plt+0x81d4>
   190cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   190d0:	ldr	r0, [fp, #-16]
   190d4:	bl	18ec8 <__assert_fail@plt+0x7fb4>
   190d8:	mov	r2, r0
   190dc:	ldr	r3, [fp, #-8]
   190e0:	orr	r3, r3, r2
   190e4:	str	r3, [fp, #-8]
   190e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   190ec:	sub	r2, r3, #1
   190f0:	str	r2, [fp, #-24]	; 0xffffffe8
   190f4:	cmp	r3, #0
   190f8:	bne	190cc <__assert_fail@plt+0x81b8>
   190fc:	ldr	r3, [fp, #-8]
   19100:	mov	r0, r3
   19104:	sub	sp, fp, #4
   19108:	ldr	fp, [sp]
   1910c:	add	sp, sp, #4
   19110:	pop	{pc}		; (ldr pc, [sp], #4)
   19114:	str	fp, [sp, #-8]!
   19118:	str	lr, [sp, #4]
   1911c:	add	fp, sp, #4
   19120:	sub	sp, sp, #56	; 0x38
   19124:	str	r0, [fp, #-48]	; 0xffffffd0
   19128:	str	r1, [fp, #-52]	; 0xffffffcc
   1912c:	str	r2, [fp, #-56]	; 0xffffffc8
   19130:	str	r3, [fp, #-60]	; 0xffffffc4
   19134:	mov	r3, #0
   19138:	str	r3, [fp, #-8]
   1913c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19140:	cmp	r3, #0
   19144:	blt	19154 <__assert_fail@plt+0x8240>
   19148:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1914c:	cmp	r3, #36	; 0x24
   19150:	ble	19174 <__assert_fail@plt+0x8260>
   19154:	movw	r3, #49772	; 0xc26c
   19158:	movt	r3, #1
   1915c:	mov	r2, #85	; 0x55
   19160:	movw	r1, #49716	; 0xc234
   19164:	movt	r1, #1
   19168:	movw	r0, #49732	; 0xc244
   1916c:	movt	r0, #1
   19170:	bl	10f14 <__assert_fail@plt>
   19174:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19178:	cmp	r3, #0
   1917c:	bne	19188 <__assert_fail@plt+0x8274>
   19180:	sub	r3, fp, #36	; 0x24
   19184:	b	1918c <__assert_fail@plt+0x8278>
   19188:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1918c:	str	r3, [fp, #-32]	; 0xffffffe0
   19190:	bl	10e54 <__errno_location@plt>
   19194:	mov	r2, r0
   19198:	mov	r3, #0
   1919c:	str	r3, [r2]
   191a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   191a4:	str	r3, [fp, #-12]
   191a8:	ldr	r3, [fp, #-12]
   191ac:	ldrb	r3, [r3]
   191b0:	strb	r3, [fp, #-13]
   191b4:	b	191d0 <__assert_fail@plt+0x82bc>
   191b8:	ldr	r3, [fp, #-12]
   191bc:	add	r3, r3, #1
   191c0:	str	r3, [fp, #-12]
   191c4:	ldr	r3, [fp, #-12]
   191c8:	ldrb	r3, [r3]
   191cc:	strb	r3, [fp, #-13]
   191d0:	bl	10e0c <__ctype_b_loc@plt>
   191d4:	mov	r3, r0
   191d8:	ldr	r2, [r3]
   191dc:	ldrb	r3, [fp, #-13]
   191e0:	lsl	r3, r3, #1
   191e4:	add	r3, r2, r3
   191e8:	ldrh	r3, [r3]
   191ec:	and	r3, r3, #8192	; 0x2000
   191f0:	cmp	r3, #0
   191f4:	bne	191b8 <__assert_fail@plt+0x82a4>
   191f8:	ldrb	r3, [fp, #-13]
   191fc:	cmp	r3, #45	; 0x2d
   19200:	bne	1920c <__assert_fail@plt+0x82f8>
   19204:	mov	r3, #4
   19208:	b	19754 <__assert_fail@plt+0x8840>
   1920c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19210:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19214:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19218:	bl	10e84 <strtoumax@plt>
   1921c:	mov	r2, r0
   19220:	mov	r3, r1
   19224:	strd	r2, [fp, #-44]	; 0xffffffd4
   19228:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1922c:	ldr	r3, [r3]
   19230:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19234:	cmp	r2, r3
   19238:	bne	19298 <__assert_fail@plt+0x8384>
   1923c:	ldr	r3, [fp, #4]
   19240:	cmp	r3, #0
   19244:	beq	19290 <__assert_fail@plt+0x837c>
   19248:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1924c:	ldr	r3, [r3]
   19250:	ldrb	r3, [r3]
   19254:	cmp	r3, #0
   19258:	beq	19290 <__assert_fail@plt+0x837c>
   1925c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19260:	ldr	r3, [r3]
   19264:	ldrb	r3, [r3]
   19268:	mov	r1, r3
   1926c:	ldr	r0, [fp, #4]
   19270:	bl	10e3c <strchr@plt>
   19274:	mov	r3, r0
   19278:	cmp	r3, #0
   1927c:	beq	19290 <__assert_fail@plt+0x837c>
   19280:	mov	r2, #1
   19284:	mov	r3, #0
   19288:	strd	r2, [fp, #-44]	; 0xffffffd4
   1928c:	b	192d0 <__assert_fail@plt+0x83bc>
   19290:	mov	r3, #4
   19294:	b	19754 <__assert_fail@plt+0x8840>
   19298:	bl	10e54 <__errno_location@plt>
   1929c:	mov	r3, r0
   192a0:	ldr	r3, [r3]
   192a4:	cmp	r3, #0
   192a8:	beq	192d0 <__assert_fail@plt+0x83bc>
   192ac:	bl	10e54 <__errno_location@plt>
   192b0:	mov	r3, r0
   192b4:	ldr	r3, [r3]
   192b8:	cmp	r3, #34	; 0x22
   192bc:	beq	192c8 <__assert_fail@plt+0x83b4>
   192c0:	mov	r3, #4
   192c4:	b	19754 <__assert_fail@plt+0x8840>
   192c8:	mov	r3, #1
   192cc:	str	r3, [fp, #-8]
   192d0:	ldr	r3, [fp, #4]
   192d4:	cmp	r3, #0
   192d8:	bne	192f0 <__assert_fail@plt+0x83dc>
   192dc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   192e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   192e4:	strd	r2, [r1]
   192e8:	ldr	r3, [fp, #-8]
   192ec:	b	19754 <__assert_fail@plt+0x8840>
   192f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   192f4:	ldr	r3, [r3]
   192f8:	ldrb	r3, [r3]
   192fc:	cmp	r3, #0
   19300:	beq	19744 <__assert_fail@plt+0x8830>
   19304:	mov	r3, #1024	; 0x400
   19308:	str	r3, [fp, #-20]	; 0xffffffec
   1930c:	mov	r3, #1
   19310:	str	r3, [fp, #-24]	; 0xffffffe8
   19314:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19318:	ldr	r3, [r3]
   1931c:	ldrb	r3, [r3]
   19320:	mov	r1, r3
   19324:	ldr	r0, [fp, #4]
   19328:	bl	10e3c <strchr@plt>
   1932c:	mov	r3, r0
   19330:	cmp	r3, #0
   19334:	bne	19350 <__assert_fail@plt+0x843c>
   19338:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1933c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19340:	strd	r2, [r1]
   19344:	ldr	r3, [fp, #-8]
   19348:	orr	r3, r3, #2
   1934c:	b	19754 <__assert_fail@plt+0x8840>
   19350:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19354:	ldr	r3, [r3]
   19358:	ldrb	r3, [r3]
   1935c:	sub	r3, r3, #69	; 0x45
   19360:	cmp	r3, #47	; 0x2f
   19364:	ldrls	pc, [pc, r3, lsl #2]
   19368:	b	194bc <__assert_fail@plt+0x85a8>
   1936c:	andeq	r9, r1, ip, lsr #8
   19370:			; <UNDEFINED> instruction: 0x000194bc
   19374:	andeq	r9, r1, ip, lsr #8
   19378:			; <UNDEFINED> instruction: 0x000194bc
   1937c:			; <UNDEFINED> instruction: 0x000194bc
   19380:			; <UNDEFINED> instruction: 0x000194bc
   19384:	andeq	r9, r1, ip, lsr #8
   19388:			; <UNDEFINED> instruction: 0x000194bc
   1938c:	andeq	r9, r1, ip, lsr #8
   19390:			; <UNDEFINED> instruction: 0x000194bc
   19394:			; <UNDEFINED> instruction: 0x000194bc
   19398:	andeq	r9, r1, ip, lsr #8
   1939c:			; <UNDEFINED> instruction: 0x000194bc
   193a0:			; <UNDEFINED> instruction: 0x000194bc
   193a4:			; <UNDEFINED> instruction: 0x000194bc
   193a8:	andeq	r9, r1, ip, lsr #8
   193ac:			; <UNDEFINED> instruction: 0x000194bc
   193b0:			; <UNDEFINED> instruction: 0x000194bc
   193b4:			; <UNDEFINED> instruction: 0x000194bc
   193b8:			; <UNDEFINED> instruction: 0x000194bc
   193bc:	andeq	r9, r1, ip, lsr #8
   193c0:	andeq	r9, r1, ip, lsr #8
   193c4:			; <UNDEFINED> instruction: 0x000194bc
   193c8:			; <UNDEFINED> instruction: 0x000194bc
   193cc:			; <UNDEFINED> instruction: 0x000194bc
   193d0:			; <UNDEFINED> instruction: 0x000194bc
   193d4:			; <UNDEFINED> instruction: 0x000194bc
   193d8:			; <UNDEFINED> instruction: 0x000194bc
   193dc:			; <UNDEFINED> instruction: 0x000194bc
   193e0:			; <UNDEFINED> instruction: 0x000194bc
   193e4:			; <UNDEFINED> instruction: 0x000194bc
   193e8:			; <UNDEFINED> instruction: 0x000194bc
   193ec:			; <UNDEFINED> instruction: 0x000194bc
   193f0:			; <UNDEFINED> instruction: 0x000194bc
   193f4:	andeq	r9, r1, ip, lsr #8
   193f8:			; <UNDEFINED> instruction: 0x000194bc
   193fc:			; <UNDEFINED> instruction: 0x000194bc
   19400:			; <UNDEFINED> instruction: 0x000194bc
   19404:	andeq	r9, r1, ip, lsr #8
   19408:			; <UNDEFINED> instruction: 0x000194bc
   1940c:	andeq	r9, r1, ip, lsr #8
   19410:			; <UNDEFINED> instruction: 0x000194bc
   19414:			; <UNDEFINED> instruction: 0x000194bc
   19418:			; <UNDEFINED> instruction: 0x000194bc
   1941c:			; <UNDEFINED> instruction: 0x000194bc
   19420:			; <UNDEFINED> instruction: 0x000194bc
   19424:			; <UNDEFINED> instruction: 0x000194bc
   19428:	andeq	r9, r1, ip, lsr #8
   1942c:	mov	r1, #48	; 0x30
   19430:	ldr	r0, [fp, #4]
   19434:	bl	10e3c <strchr@plt>
   19438:	mov	r3, r0
   1943c:	cmp	r3, #0
   19440:	beq	194b0 <__assert_fail@plt+0x859c>
   19444:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19448:	ldr	r3, [r3]
   1944c:	add	r3, r3, #1
   19450:	ldrb	r3, [r3]
   19454:	cmp	r3, #68	; 0x44
   19458:	beq	19498 <__assert_fail@plt+0x8584>
   1945c:	cmp	r3, #105	; 0x69
   19460:	beq	19470 <__assert_fail@plt+0x855c>
   19464:	cmp	r3, #66	; 0x42
   19468:	beq	19498 <__assert_fail@plt+0x8584>
   1946c:	b	194bc <__assert_fail@plt+0x85a8>
   19470:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19474:	ldr	r3, [r3]
   19478:	add	r3, r3, #2
   1947c:	ldrb	r3, [r3]
   19480:	cmp	r3, #66	; 0x42
   19484:	bne	194b8 <__assert_fail@plt+0x85a4>
   19488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1948c:	add	r3, r3, #2
   19490:	str	r3, [fp, #-24]	; 0xffffffe8
   19494:	b	194b8 <__assert_fail@plt+0x85a4>
   19498:	mov	r3, #1000	; 0x3e8
   1949c:	str	r3, [fp, #-20]	; 0xffffffec
   194a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   194a4:	add	r3, r3, #1
   194a8:	str	r3, [fp, #-24]	; 0xffffffe8
   194ac:	b	194bc <__assert_fail@plt+0x85a8>
   194b0:	nop	{0}
   194b4:	b	194bc <__assert_fail@plt+0x85a8>
   194b8:	nop	{0}
   194bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   194c0:	ldr	r3, [r3]
   194c4:	ldrb	r3, [r3]
   194c8:	sub	r3, r3, #66	; 0x42
   194cc:	cmp	r3, #53	; 0x35
   194d0:	ldrls	pc, [pc, r3, lsl #2]
   194d4:	b	196e4 <__assert_fail@plt+0x87d0>
   194d8:	andeq	r9, r1, r8, asr #11
   194dc:	andeq	r9, r1, r4, ror #13
   194e0:	andeq	r9, r1, r4, ror #13
   194e4:	andeq	r9, r1, ip, ror #11
   194e8:	andeq	r9, r1, r4, ror #13
   194ec:	andeq	r9, r1, r8, lsl #12
   194f0:	andeq	r9, r1, r4, ror #13
   194f4:	andeq	r9, r1, r4, ror #13
   194f8:	andeq	r9, r1, r4, ror #13
   194fc:	andeq	r9, r1, r4, lsr #12
   19500:	andeq	r9, r1, r4, ror #13
   19504:	andeq	r9, r1, r0, asr #12
   19508:	andeq	r9, r1, r4, ror #13
   1950c:	andeq	r9, r1, r4, ror #13
   19510:	andeq	r9, r1, ip, asr r6
   19514:	andeq	r9, r1, r4, ror #13
   19518:	andeq	r9, r1, r4, ror #13
   1951c:	andeq	r9, r1, r4, ror #13
   19520:	andeq	r9, r1, r8, ror r6
   19524:	andeq	r9, r1, r4, ror #13
   19528:	andeq	r9, r1, r4, ror #13
   1952c:	andeq	r9, r1, r4, ror #13
   19530:	andeq	r9, r1, r4, ror #13
   19534:	andeq	r9, r1, ip, lsr #13
   19538:	andeq	r9, r1, r8, asr #13
   1953c:	andeq	r9, r1, r4, ror #13
   19540:	andeq	r9, r1, r4, ror #13
   19544:	andeq	r9, r1, r4, ror #13
   19548:	andeq	r9, r1, r4, ror #13
   1954c:	andeq	r9, r1, r4, ror #13
   19550:	andeq	r9, r1, r4, ror #13
   19554:	andeq	r9, r1, r4, ror #13
   19558:			; <UNDEFINED> instruction: 0x000195b0
   1955c:	andeq	r9, r1, r0, ror #11
   19560:	andeq	r9, r1, r4, ror #13
   19564:	andeq	r9, r1, r4, ror #13
   19568:	andeq	r9, r1, r4, ror #13
   1956c:	andeq	r9, r1, r8, lsl #12
   19570:	andeq	r9, r1, r4, ror #13
   19574:	andeq	r9, r1, r4, ror #13
   19578:	andeq	r9, r1, r4, ror #13
   1957c:	andeq	r9, r1, r4, lsr #12
   19580:	andeq	r9, r1, r4, ror #13
   19584:	andeq	r9, r1, r0, asr #12
   19588:	andeq	r9, r1, r4, ror #13
   1958c:	andeq	r9, r1, r4, ror #13
   19590:	andeq	r9, r1, r4, ror #13
   19594:	andeq	r9, r1, r4, ror #13
   19598:	andeq	r9, r1, r4, ror #13
   1959c:	andeq	r9, r1, r4, ror #13
   195a0:	andeq	r9, r1, r8, ror r6
   195a4:	andeq	r9, r1, r4, ror #13
   195a8:	andeq	r9, r1, r4, ror #13
   195ac:	muleq	r1, r4, r6
   195b0:	sub	r3, fp, #44	; 0x2c
   195b4:	mov	r1, #512	; 0x200
   195b8:	mov	r0, r3
   195bc:	bl	18ec8 <__assert_fail@plt+0x7fb4>
   195c0:	str	r0, [fp, #-28]	; 0xffffffe4
   195c4:	b	196fc <__assert_fail@plt+0x87e8>
   195c8:	sub	r3, fp, #44	; 0x2c
   195cc:	mov	r1, #1024	; 0x400
   195d0:	mov	r0, r3
   195d4:	bl	18ec8 <__assert_fail@plt+0x7fb4>
   195d8:	str	r0, [fp, #-28]	; 0xffffffe4
   195dc:	b	196fc <__assert_fail@plt+0x87e8>
   195e0:	mov	r3, #0
   195e4:	str	r3, [fp, #-28]	; 0xffffffe4
   195e8:	b	196fc <__assert_fail@plt+0x87e8>
   195ec:	sub	r3, fp, #44	; 0x2c
   195f0:	mov	r2, #6
   195f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   195f8:	mov	r0, r3
   195fc:	bl	190a4 <__assert_fail@plt+0x8190>
   19600:	str	r0, [fp, #-28]	; 0xffffffe4
   19604:	b	196fc <__assert_fail@plt+0x87e8>
   19608:	sub	r3, fp, #44	; 0x2c
   1960c:	mov	r2, #3
   19610:	ldr	r1, [fp, #-20]	; 0xffffffec
   19614:	mov	r0, r3
   19618:	bl	190a4 <__assert_fail@plt+0x8190>
   1961c:	str	r0, [fp, #-28]	; 0xffffffe4
   19620:	b	196fc <__assert_fail@plt+0x87e8>
   19624:	sub	r3, fp, #44	; 0x2c
   19628:	mov	r2, #1
   1962c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19630:	mov	r0, r3
   19634:	bl	190a4 <__assert_fail@plt+0x8190>
   19638:	str	r0, [fp, #-28]	; 0xffffffe4
   1963c:	b	196fc <__assert_fail@plt+0x87e8>
   19640:	sub	r3, fp, #44	; 0x2c
   19644:	mov	r2, #2
   19648:	ldr	r1, [fp, #-20]	; 0xffffffec
   1964c:	mov	r0, r3
   19650:	bl	190a4 <__assert_fail@plt+0x8190>
   19654:	str	r0, [fp, #-28]	; 0xffffffe4
   19658:	b	196fc <__assert_fail@plt+0x87e8>
   1965c:	sub	r3, fp, #44	; 0x2c
   19660:	mov	r2, #5
   19664:	ldr	r1, [fp, #-20]	; 0xffffffec
   19668:	mov	r0, r3
   1966c:	bl	190a4 <__assert_fail@plt+0x8190>
   19670:	str	r0, [fp, #-28]	; 0xffffffe4
   19674:	b	196fc <__assert_fail@plt+0x87e8>
   19678:	sub	r3, fp, #44	; 0x2c
   1967c:	mov	r2, #4
   19680:	ldr	r1, [fp, #-20]	; 0xffffffec
   19684:	mov	r0, r3
   19688:	bl	190a4 <__assert_fail@plt+0x8190>
   1968c:	str	r0, [fp, #-28]	; 0xffffffe4
   19690:	b	196fc <__assert_fail@plt+0x87e8>
   19694:	sub	r3, fp, #44	; 0x2c
   19698:	mov	r1, #2
   1969c:	mov	r0, r3
   196a0:	bl	18ec8 <__assert_fail@plt+0x7fb4>
   196a4:	str	r0, [fp, #-28]	; 0xffffffe4
   196a8:	b	196fc <__assert_fail@plt+0x87e8>
   196ac:	sub	r3, fp, #44	; 0x2c
   196b0:	mov	r2, #8
   196b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   196b8:	mov	r0, r3
   196bc:	bl	190a4 <__assert_fail@plt+0x8190>
   196c0:	str	r0, [fp, #-28]	; 0xffffffe4
   196c4:	b	196fc <__assert_fail@plt+0x87e8>
   196c8:	sub	r3, fp, #44	; 0x2c
   196cc:	mov	r2, #7
   196d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   196d4:	mov	r0, r3
   196d8:	bl	190a4 <__assert_fail@plt+0x8190>
   196dc:	str	r0, [fp, #-28]	; 0xffffffe4
   196e0:	b	196fc <__assert_fail@plt+0x87e8>
   196e4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   196e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   196ec:	strd	r2, [r1]
   196f0:	ldr	r3, [fp, #-8]
   196f4:	orr	r3, r3, #2
   196f8:	b	19754 <__assert_fail@plt+0x8840>
   196fc:	ldr	r2, [fp, #-8]
   19700:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19704:	orr	r3, r2, r3
   19708:	str	r3, [fp, #-8]
   1970c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19710:	ldr	r2, [r3]
   19714:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19718:	add	r2, r2, r3
   1971c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19720:	str	r2, [r3]
   19724:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19728:	ldr	r3, [r3]
   1972c:	ldrb	r3, [r3]
   19730:	cmp	r3, #0
   19734:	beq	19744 <__assert_fail@plt+0x8830>
   19738:	ldr	r3, [fp, #-8]
   1973c:	orr	r3, r3, #2
   19740:	str	r3, [fp, #-8]
   19744:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19748:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1974c:	strd	r2, [r1]
   19750:	ldr	r3, [fp, #-8]
   19754:	mov	r0, r3
   19758:	sub	sp, fp, #4
   1975c:	ldr	fp, [sp]
   19760:	add	sp, sp, #4
   19764:	pop	{pc}		; (ldr pc, [sp], #4)
   19768:	str	fp, [sp, #-8]!
   1976c:	str	lr, [sp, #4]
   19770:	add	fp, sp, #4
   19774:	sub	sp, sp, #16
   19778:	str	r0, [fp, #-16]
   1977c:	str	r1, [fp, #-20]	; 0xffffffec
   19780:	ldr	r3, [fp, #-16]
   19784:	cmp	r3, #0
   19788:	beq	19798 <__assert_fail@plt+0x8884>
   1978c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19790:	cmp	r3, #0
   19794:	bne	197a8 <__assert_fail@plt+0x8894>
   19798:	mov	r3, #1
   1979c:	str	r3, [fp, #-20]	; 0xffffffec
   197a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   197a4:	str	r3, [fp, #-16]
   197a8:	mov	ip, #0
   197ac:	ldr	r2, [fp, #-16]
   197b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   197b4:	umull	r0, r1, r2, r3
   197b8:	mov	r2, #0
   197bc:	mov	r3, #0
   197c0:	mov	r2, r1
   197c4:	mov	r3, #0
   197c8:	cmp	r2, #0
   197cc:	beq	197d4 <__assert_fail@plt+0x88c0>
   197d0:	mov	ip, #1
   197d4:	cmp	r0, #0
   197d8:	bge	197e0 <__assert_fail@plt+0x88cc>
   197dc:	mov	ip, #1
   197e0:	mov	r3, ip
   197e4:	and	r3, r3, #1
   197e8:	uxtb	r3, r3
   197ec:	cmp	r3, #0
   197f0:	beq	1980c <__assert_fail@plt+0x88f8>
   197f4:	bl	10e54 <__errno_location@plt>
   197f8:	mov	r2, r0
   197fc:	mov	r3, #12
   19800:	str	r3, [r2]
   19804:	mov	r3, #0
   19808:	b	19824 <__assert_fail@plt+0x8910>
   1980c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19810:	ldr	r0, [fp, #-16]
   19814:	bl	10c98 <calloc@plt>
   19818:	mov	r3, r0
   1981c:	str	r3, [fp, #-8]
   19820:	ldr	r3, [fp, #-8]
   19824:	mov	r0, r3
   19828:	sub	sp, fp, #4
   1982c:	ldr	fp, [sp]
   19830:	add	sp, sp, #4
   19834:	pop	{pc}		; (ldr pc, [sp], #4)
   19838:	str	fp, [sp, #-8]!
   1983c:	str	lr, [sp, #4]
   19840:	add	fp, sp, #4
   19844:	sub	sp, sp, #16
   19848:	str	r0, [fp, #-16]
   1984c:	ldr	r3, [fp, #-16]
   19850:	cmp	r3, #0
   19854:	bne	19860 <__assert_fail@plt+0x894c>
   19858:	mov	r3, #1
   1985c:	str	r3, [fp, #-16]
   19860:	mov	r2, #0
   19864:	ldr	r3, [fp, #-16]
   19868:	cmp	r3, #0
   1986c:	bge	19874 <__assert_fail@plt+0x8960>
   19870:	mov	r2, #1
   19874:	mov	r3, r2
   19878:	and	r3, r3, #1
   1987c:	uxtb	r3, r3
   19880:	cmp	r3, #0
   19884:	beq	198a0 <__assert_fail@plt+0x898c>
   19888:	bl	10e54 <__errno_location@plt>
   1988c:	mov	r2, r0
   19890:	mov	r3, #12
   19894:	str	r3, [r2]
   19898:	mov	r3, #0
   1989c:	b	198b4 <__assert_fail@plt+0x89a0>
   198a0:	ldr	r0, [fp, #-16]
   198a4:	bl	10dd0 <malloc@plt>
   198a8:	mov	r3, r0
   198ac:	str	r3, [fp, #-8]
   198b0:	ldr	r3, [fp, #-8]
   198b4:	mov	r0, r3
   198b8:	sub	sp, fp, #4
   198bc:	ldr	fp, [sp]
   198c0:	add	sp, sp, #4
   198c4:	pop	{pc}		; (ldr pc, [sp], #4)
   198c8:	str	fp, [sp, #-8]!
   198cc:	str	lr, [sp, #4]
   198d0:	add	fp, sp, #4
   198d4:	sub	sp, sp, #16
   198d8:	str	r0, [fp, #-16]
   198dc:	str	r1, [fp, #-20]	; 0xffffffec
   198e0:	ldr	r3, [fp, #-16]
   198e4:	cmp	r3, #0
   198e8:	bne	198fc <__assert_fail@plt+0x89e8>
   198ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   198f0:	bl	19838 <__assert_fail@plt+0x8924>
   198f4:	mov	r3, r0
   198f8:	b	1996c <__assert_fail@plt+0x8a58>
   198fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19900:	cmp	r3, #0
   19904:	bne	19918 <__assert_fail@plt+0x8a04>
   19908:	ldr	r0, [fp, #-16]
   1990c:	bl	15270 <__assert_fail@plt+0x435c>
   19910:	mov	r3, #0
   19914:	b	1996c <__assert_fail@plt+0x8a58>
   19918:	mov	r2, #0
   1991c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19920:	cmp	r3, #0
   19924:	bge	1992c <__assert_fail@plt+0x8a18>
   19928:	mov	r2, #1
   1992c:	mov	r3, r2
   19930:	and	r3, r3, #1
   19934:	uxtb	r3, r3
   19938:	cmp	r3, #0
   1993c:	beq	19958 <__assert_fail@plt+0x8a44>
   19940:	bl	10e54 <__errno_location@plt>
   19944:	mov	r2, r0
   19948:	mov	r3, #12
   1994c:	str	r3, [r2]
   19950:	mov	r3, #0
   19954:	b	1996c <__assert_fail@plt+0x8a58>
   19958:	ldr	r1, [fp, #-20]	; 0xffffffec
   1995c:	ldr	r0, [fp, #-16]
   19960:	bl	10d58 <realloc@plt>
   19964:	str	r0, [fp, #-8]
   19968:	ldr	r3, [fp, #-8]
   1996c:	mov	r0, r3
   19970:	sub	sp, fp, #4
   19974:	ldr	fp, [sp]
   19978:	add	sp, sp, #4
   1997c:	pop	{pc}		; (ldr pc, [sp], #4)
   19980:	push	{fp}		; (str fp, [sp, #-4]!)
   19984:	add	fp, sp, #0
   19988:	sub	sp, sp, #12
   1998c:	str	r0, [fp, #-8]
   19990:	str	r1, [fp, #-12]
   19994:	mov	r3, #0
   19998:	mov	r0, r3
   1999c:	add	sp, fp, #0
   199a0:	pop	{fp}		; (ldr fp, [sp], #4)
   199a4:	bx	lr
   199a8:	str	fp, [sp, #-8]!
   199ac:	str	lr, [sp, #4]
   199b0:	add	fp, sp, #4
   199b4:	sub	sp, sp, #8
   199b8:	str	r0, [fp, #-8]
   199bc:	str	r1, [fp, #-12]
   199c0:	ldr	r1, [fp, #-12]
   199c4:	ldr	r0, [fp, #-8]
   199c8:	bl	19980 <__assert_fail@plt+0x8a6c>
   199cc:	mov	r3, r0
   199d0:	mov	r0, r3
   199d4:	sub	sp, fp, #4
   199d8:	ldr	fp, [sp]
   199dc:	add	sp, sp, #4
   199e0:	pop	{pc}		; (ldr pc, [sp], #4)
   199e4:	strd	r4, [sp, #-16]!
   199e8:	str	fp, [sp, #8]
   199ec:	str	lr, [sp, #12]
   199f0:	add	fp, sp, #12
   199f4:	sub	sp, sp, #16
   199f8:	str	r0, [fp, #-24]	; 0xffffffe8
   199fc:	str	r1, [fp, #-28]	; 0xffffffe4
   19a00:	ldr	r5, [fp, #-24]	; 0xffffffe8
   19a04:	ldr	r4, [fp, #-28]	; 0xffffffe4
   19a08:	cmp	r5, r4
   19a0c:	bne	19a18 <__assert_fail@plt+0x8b04>
   19a10:	mov	r3, #0
   19a14:	b	19a78 <__assert_fail@plt+0x8b64>
   19a18:	ldrb	r3, [r5]
   19a1c:	mov	r0, r3
   19a20:	bl	1a610 <__assert_fail@plt+0x96fc>
   19a24:	mov	r3, r0
   19a28:	strb	r3, [fp, #-13]
   19a2c:	ldrb	r3, [r4]
   19a30:	mov	r0, r3
   19a34:	bl	1a610 <__assert_fail@plt+0x96fc>
   19a38:	mov	r3, r0
   19a3c:	strb	r3, [fp, #-14]
   19a40:	ldrb	r3, [fp, #-13]
   19a44:	cmp	r3, #0
   19a48:	beq	19a68 <__assert_fail@plt+0x8b54>
   19a4c:	add	r5, r5, #1
   19a50:	add	r4, r4, #1
   19a54:	ldrb	r2, [fp, #-13]
   19a58:	ldrb	r3, [fp, #-14]
   19a5c:	cmp	r2, r3
   19a60:	beq	19a18 <__assert_fail@plt+0x8b04>
   19a64:	b	19a6c <__assert_fail@plt+0x8b58>
   19a68:	nop	{0}
   19a6c:	ldrb	r2, [fp, #-13]
   19a70:	ldrb	r3, [fp, #-14]
   19a74:	sub	r3, r2, r3
   19a78:	mov	r0, r3
   19a7c:	sub	sp, fp, #12
   19a80:	ldrd	r4, [sp]
   19a84:	ldr	fp, [sp, #8]
   19a88:	add	sp, sp, #12
   19a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   19a90:	str	fp, [sp, #-8]!
   19a94:	str	lr, [sp, #4]
   19a98:	add	fp, sp, #4
   19a9c:	sub	sp, sp, #16
   19aa0:	str	r0, [fp, #-16]
   19aa4:	ldr	r0, [fp, #-16]
   19aa8:	bl	10da0 <__fpending@plt>
   19aac:	mov	r3, r0
   19ab0:	cmp	r3, #0
   19ab4:	movne	r3, #1
   19ab8:	moveq	r3, #0
   19abc:	strb	r3, [fp, #-5]
   19ac0:	ldr	r0, [fp, #-16]
   19ac4:	bl	10dac <ferror_unlocked@plt>
   19ac8:	mov	r3, r0
   19acc:	cmp	r3, #0
   19ad0:	movne	r3, #1
   19ad4:	moveq	r3, #0
   19ad8:	strb	r3, [fp, #-6]
   19adc:	ldr	r0, [fp, #-16]
   19ae0:	bl	19b74 <__assert_fail@plt+0x8c60>
   19ae4:	mov	r3, r0
   19ae8:	cmp	r3, #0
   19aec:	movne	r3, #1
   19af0:	moveq	r3, #0
   19af4:	strb	r3, [fp, #-7]
   19af8:	ldrb	r3, [fp, #-6]
   19afc:	cmp	r3, #0
   19b00:	bne	19b30 <__assert_fail@plt+0x8c1c>
   19b04:	ldrb	r3, [fp, #-7]
   19b08:	cmp	r3, #0
   19b0c:	beq	19b5c <__assert_fail@plt+0x8c48>
   19b10:	ldrb	r3, [fp, #-5]
   19b14:	cmp	r3, #0
   19b18:	bne	19b30 <__assert_fail@plt+0x8c1c>
   19b1c:	bl	10e54 <__errno_location@plt>
   19b20:	mov	r3, r0
   19b24:	ldr	r3, [r3]
   19b28:	cmp	r3, #9
   19b2c:	beq	19b5c <__assert_fail@plt+0x8c48>
   19b30:	ldrb	r3, [fp, #-7]
   19b34:	eor	r3, r3, #1
   19b38:	uxtb	r3, r3
   19b3c:	cmp	r3, #0
   19b40:	beq	19b54 <__assert_fail@plt+0x8c40>
   19b44:	bl	10e54 <__errno_location@plt>
   19b48:	mov	r2, r0
   19b4c:	mov	r3, #0
   19b50:	str	r3, [r2]
   19b54:	mvn	r3, #0
   19b58:	b	19b60 <__assert_fail@plt+0x8c4c>
   19b5c:	mov	r3, #0
   19b60:	mov	r0, r3
   19b64:	sub	sp, fp, #4
   19b68:	ldr	fp, [sp]
   19b6c:	add	sp, sp, #4
   19b70:	pop	{pc}		; (ldr pc, [sp], #4)
   19b74:	str	fp, [sp, #-8]!
   19b78:	str	lr, [sp, #4]
   19b7c:	add	fp, sp, #4
   19b80:	sub	sp, sp, #32
   19b84:	str	r0, [fp, #-24]	; 0xffffffe8
   19b88:	mov	r3, #0
   19b8c:	str	r3, [fp, #-8]
   19b90:	mov	r3, #0
   19b94:	str	r3, [fp, #-12]
   19b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b9c:	bl	10e78 <fileno@plt>
   19ba0:	str	r0, [fp, #-16]
   19ba4:	ldr	r3, [fp, #-16]
   19ba8:	cmp	r3, #0
   19bac:	bge	19bc0 <__assert_fail@plt+0x8cac>
   19bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bb4:	bl	10e90 <fclose@plt>
   19bb8:	mov	r3, r0
   19bbc:	b	19c64 <__assert_fail@plt+0x8d50>
   19bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bc4:	bl	10de8 <__freading@plt>
   19bc8:	mov	r3, r0
   19bcc:	cmp	r3, #0
   19bd0:	beq	19c0c <__assert_fail@plt+0x8cf8>
   19bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bd8:	bl	10e78 <fileno@plt>
   19bdc:	mov	r1, r0
   19be0:	mov	r3, #1
   19be4:	str	r3, [sp]
   19be8:	mov	r2, #0
   19bec:	mov	r3, #0
   19bf0:	mov	r0, r1
   19bf4:	bl	10d88 <lseek64@plt>
   19bf8:	mvn	r2, #0
   19bfc:	mvn	r3, #0
   19c00:	cmp	r1, r3
   19c04:	cmpeq	r0, r2
   19c08:	beq	19c30 <__assert_fail@plt+0x8d1c>
   19c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c10:	bl	19ccc <__assert_fail@plt+0x8db8>
   19c14:	mov	r3, r0
   19c18:	cmp	r3, #0
   19c1c:	beq	19c30 <__assert_fail@plt+0x8d1c>
   19c20:	bl	10e54 <__errno_location@plt>
   19c24:	mov	r3, r0
   19c28:	ldr	r3, [r3]
   19c2c:	str	r3, [fp, #-8]
   19c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c34:	bl	10e90 <fclose@plt>
   19c38:	str	r0, [fp, #-12]
   19c3c:	ldr	r3, [fp, #-8]
   19c40:	cmp	r3, #0
   19c44:	beq	19c60 <__assert_fail@plt+0x8d4c>
   19c48:	bl	10e54 <__errno_location@plt>
   19c4c:	mov	r2, r0
   19c50:	ldr	r3, [fp, #-8]
   19c54:	str	r3, [r2]
   19c58:	mvn	r3, #0
   19c5c:	str	r3, [fp, #-12]
   19c60:	ldr	r3, [fp, #-12]
   19c64:	mov	r0, r3
   19c68:	sub	sp, fp, #4
   19c6c:	ldr	fp, [sp]
   19c70:	add	sp, sp, #4
   19c74:	pop	{pc}		; (ldr pc, [sp], #4)
   19c78:	str	fp, [sp, #-8]!
   19c7c:	str	lr, [sp, #4]
   19c80:	add	fp, sp, #4
   19c84:	sub	sp, sp, #16
   19c88:	str	r0, [fp, #-8]
   19c8c:	ldr	r3, [fp, #-8]
   19c90:	ldr	r3, [r3]
   19c94:	and	r3, r3, #256	; 0x100
   19c98:	cmp	r3, #0
   19c9c:	beq	19cb8 <__assert_fail@plt+0x8da4>
   19ca0:	mov	r3, #1
   19ca4:	str	r3, [sp]
   19ca8:	mov	r2, #0
   19cac:	mov	r3, #0
   19cb0:	ldr	r0, [fp, #-8]
   19cb4:	bl	19d38 <__assert_fail@plt+0x8e24>
   19cb8:	nop	{0}
   19cbc:	sub	sp, fp, #4
   19cc0:	ldr	fp, [sp]
   19cc4:	add	sp, sp, #4
   19cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   19ccc:	str	fp, [sp, #-8]!
   19cd0:	str	lr, [sp, #4]
   19cd4:	add	fp, sp, #4
   19cd8:	sub	sp, sp, #8
   19cdc:	str	r0, [fp, #-8]
   19ce0:	ldr	r3, [fp, #-8]
   19ce4:	cmp	r3, #0
   19ce8:	beq	19d00 <__assert_fail@plt+0x8dec>
   19cec:	ldr	r0, [fp, #-8]
   19cf0:	bl	10de8 <__freading@plt>
   19cf4:	mov	r3, r0
   19cf8:	cmp	r3, #0
   19cfc:	bne	19d10 <__assert_fail@plt+0x8dfc>
   19d00:	ldr	r0, [fp, #-8]
   19d04:	bl	10ce0 <fflush@plt>
   19d08:	mov	r3, r0
   19d0c:	b	19d24 <__assert_fail@plt+0x8e10>
   19d10:	ldr	r0, [fp, #-8]
   19d14:	bl	19c78 <__assert_fail@plt+0x8d64>
   19d18:	ldr	r0, [fp, #-8]
   19d1c:	bl	10ce0 <fflush@plt>
   19d20:	mov	r3, r0
   19d24:	mov	r0, r3
   19d28:	sub	sp, fp, #4
   19d2c:	ldr	fp, [sp]
   19d30:	add	sp, sp, #4
   19d34:	pop	{pc}		; (ldr pc, [sp], #4)
   19d38:	str	fp, [sp, #-8]!
   19d3c:	str	lr, [sp, #4]
   19d40:	add	fp, sp, #4
   19d44:	sub	sp, sp, #32
   19d48:	str	r0, [fp, #-16]
   19d4c:	strd	r2, [fp, #-28]	; 0xffffffe4
   19d50:	ldr	r3, [fp, #-16]
   19d54:	ldr	r2, [r3, #8]
   19d58:	ldr	r3, [fp, #-16]
   19d5c:	ldr	r3, [r3, #4]
   19d60:	cmp	r2, r3
   19d64:	bne	19dfc <__assert_fail@plt+0x8ee8>
   19d68:	ldr	r3, [fp, #-16]
   19d6c:	ldr	r2, [r3, #20]
   19d70:	ldr	r3, [fp, #-16]
   19d74:	ldr	r3, [r3, #16]
   19d78:	cmp	r2, r3
   19d7c:	bne	19dfc <__assert_fail@plt+0x8ee8>
   19d80:	ldr	r3, [fp, #-16]
   19d84:	ldr	r3, [r3, #36]	; 0x24
   19d88:	cmp	r3, #0
   19d8c:	bne	19dfc <__assert_fail@plt+0x8ee8>
   19d90:	ldr	r0, [fp, #-16]
   19d94:	bl	10e78 <fileno@plt>
   19d98:	mov	r1, r0
   19d9c:	ldr	r3, [fp, #4]
   19da0:	str	r3, [sp]
   19da4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   19da8:	mov	r0, r1
   19dac:	bl	10d88 <lseek64@plt>
   19db0:	strd	r0, [fp, #-12]
   19db4:	ldrd	r2, [fp, #-12]
   19db8:	mvn	r0, #0
   19dbc:	mvn	r1, #0
   19dc0:	cmp	r3, r1
   19dc4:	cmpeq	r2, r0
   19dc8:	bne	19dd4 <__assert_fail@plt+0x8ec0>
   19dcc:	mvn	r3, #0
   19dd0:	b	19e14 <__assert_fail@plt+0x8f00>
   19dd4:	ldr	r3, [fp, #-16]
   19dd8:	ldr	r3, [r3]
   19ddc:	bic	r2, r3, #16
   19de0:	ldr	r3, [fp, #-16]
   19de4:	str	r2, [r3]
   19de8:	ldr	r1, [fp, #-16]
   19dec:	ldrd	r2, [fp, #-12]
   19df0:	strd	r2, [r1, #80]	; 0x50
   19df4:	mov	r3, #0
   19df8:	b	19e14 <__assert_fail@plt+0x8f00>
   19dfc:	ldr	r3, [fp, #4]
   19e00:	str	r3, [sp]
   19e04:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   19e08:	ldr	r0, [fp, #-16]
   19e0c:	bl	10e9c <fseeko64@plt>
   19e10:	mov	r3, r0
   19e14:	mov	r0, r3
   19e18:	sub	sp, fp, #4
   19e1c:	ldr	fp, [sp]
   19e20:	add	sp, sp, #4
   19e24:	pop	{pc}		; (ldr pc, [sp], #4)
   19e28:	str	fp, [sp, #-8]!
   19e2c:	str	lr, [sp, #4]
   19e30:	add	fp, sp, #4
   19e34:	bl	10e54 <__errno_location@plt>
   19e38:	mov	r2, r0
   19e3c:	mov	r3, #12
   19e40:	str	r3, [r2]
   19e44:	mov	r3, #0
   19e48:	mov	r0, r3
   19e4c:	sub	sp, fp, #4
   19e50:	ldr	fp, [sp]
   19e54:	add	sp, sp, #4
   19e58:	pop	{pc}		; (ldr pc, [sp], #4)
   19e5c:	str	fp, [sp, #-8]!
   19e60:	str	lr, [sp, #4]
   19e64:	add	fp, sp, #4
   19e68:	sub	sp, sp, #8
   19e6c:	str	r0, [fp, #-8]
   19e70:	ldr	r3, [fp, #-8]
   19e74:	mov	r0, r3
   19e78:	bl	19838 <__assert_fail@plt+0x8924>
   19e7c:	mov	r3, r0
   19e80:	mov	r0, r3
   19e84:	sub	sp, fp, #4
   19e88:	ldr	fp, [sp]
   19e8c:	add	sp, sp, #4
   19e90:	pop	{pc}		; (ldr pc, [sp], #4)
   19e94:	str	fp, [sp, #-8]!
   19e98:	str	lr, [sp, #4]
   19e9c:	add	fp, sp, #4
   19ea0:	sub	sp, sp, #8
   19ea4:	str	r0, [fp, #-8]
   19ea8:	str	r1, [fp, #-12]
   19eac:	ldr	r3, [fp, #-12]
   19eb0:	cmp	r3, #0
   19eb4:	moveq	r3, #1
   19eb8:	movne	r3, #0
   19ebc:	uxtb	r3, r3
   19ec0:	mov	r2, r3
   19ec4:	ldr	r3, [fp, #-12]
   19ec8:	orr	r3, r2, r3
   19ecc:	mov	r1, r3
   19ed0:	ldr	r0, [fp, #-8]
   19ed4:	bl	198c8 <__assert_fail@plt+0x89b4>
   19ed8:	mov	r3, r0
   19edc:	mov	r0, r3
   19ee0:	sub	sp, fp, #4
   19ee4:	ldr	fp, [sp]
   19ee8:	add	sp, sp, #4
   19eec:	pop	{pc}		; (ldr pc, [sp], #4)
   19ef0:	str	fp, [sp, #-8]!
   19ef4:	str	lr, [sp, #4]
   19ef8:	add	fp, sp, #4
   19efc:	sub	sp, sp, #8
   19f00:	str	r0, [fp, #-8]
   19f04:	str	r1, [fp, #-12]
   19f08:	ldr	r3, [fp, #-8]
   19f0c:	ldr	r2, [fp, #-12]
   19f10:	mov	r1, r2
   19f14:	mov	r0, r3
   19f18:	bl	19768 <__assert_fail@plt+0x8854>
   19f1c:	mov	r3, r0
   19f20:	mov	r0, r3
   19f24:	sub	sp, fp, #4
   19f28:	ldr	fp, [sp]
   19f2c:	add	sp, sp, #4
   19f30:	pop	{pc}		; (ldr pc, [sp], #4)
   19f34:	str	fp, [sp, #-8]!
   19f38:	str	lr, [sp, #4]
   19f3c:	add	fp, sp, #4
   19f40:	sub	sp, sp, #16
   19f44:	str	r0, [fp, #-8]
   19f48:	str	r1, [fp, #-12]
   19f4c:	str	r2, [fp, #-16]
   19f50:	ldr	r3, [fp, #-12]
   19f54:	cmp	r3, #0
   19f58:	beq	19f68 <__assert_fail@plt+0x9054>
   19f5c:	ldr	r3, [fp, #-16]
   19f60:	cmp	r3, #0
   19f64:	bne	19f78 <__assert_fail@plt+0x9064>
   19f68:	mov	r3, #1
   19f6c:	str	r3, [fp, #-16]
   19f70:	ldr	r3, [fp, #-16]
   19f74:	str	r3, [fp, #-12]
   19f78:	ldr	r3, [fp, #-12]
   19f7c:	ldr	r2, [fp, #-16]
   19f80:	mov	r1, r3
   19f84:	ldr	r0, [fp, #-8]
   19f88:	bl	1a0c4 <__assert_fail@plt+0x91b0>
   19f8c:	mov	r3, r0
   19f90:	mov	r0, r3
   19f94:	sub	sp, fp, #4
   19f98:	ldr	fp, [sp]
   19f9c:	add	sp, sp, #4
   19fa0:	pop	{pc}		; (ldr pc, [sp], #4)
   19fa4:	str	fp, [sp, #-8]!
   19fa8:	str	lr, [sp, #4]
   19fac:	add	fp, sp, #4
   19fb0:	sub	sp, sp, #8
   19fb4:	mov	r0, #14
   19fb8:	bl	10ecc <nl_langinfo@plt>
   19fbc:	str	r0, [fp, #-8]
   19fc0:	ldr	r3, [fp, #-8]
   19fc4:	cmp	r3, #0
   19fc8:	bne	19fd8 <__assert_fail@plt+0x90c4>
   19fcc:	movw	r3, #49784	; 0xc278
   19fd0:	movt	r3, #1
   19fd4:	str	r3, [fp, #-8]
   19fd8:	ldr	r3, [fp, #-8]
   19fdc:	ldrb	r3, [r3]
   19fe0:	cmp	r3, #0
   19fe4:	bne	19ff4 <__assert_fail@plt+0x90e0>
   19fe8:	movw	r3, #49788	; 0xc27c
   19fec:	movt	r3, #1
   19ff0:	str	r3, [fp, #-8]
   19ff4:	ldr	r3, [fp, #-8]
   19ff8:	mov	r0, r3
   19ffc:	sub	sp, fp, #4
   1a000:	ldr	fp, [sp]
   1a004:	add	sp, sp, #4
   1a008:	pop	{pc}		; (ldr pc, [sp], #4)
   1a00c:	str	fp, [sp, #-8]!
   1a010:	str	lr, [sp, #4]
   1a014:	add	fp, sp, #4
   1a018:	sub	sp, sp, #32
   1a01c:	str	r0, [fp, #-24]	; 0xffffffe8
   1a020:	str	r1, [fp, #-28]	; 0xffffffe4
   1a024:	str	r2, [fp, #-32]	; 0xffffffe0
   1a028:	str	r3, [fp, #-36]	; 0xffffffdc
   1a02c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a030:	cmp	r3, #0
   1a034:	bne	1a040 <__assert_fail@plt+0x912c>
   1a038:	sub	r3, fp, #16
   1a03c:	str	r3, [fp, #-24]	; 0xffffffe8
   1a040:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a044:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a048:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a04c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a050:	bl	10db8 <mbrtowc@plt>
   1a054:	str	r0, [fp, #-8]
   1a058:	ldr	r3, [fp, #-8]
   1a05c:	cmn	r3, #3
   1a060:	bls	1a0ac <__assert_fail@plt+0x9198>
   1a064:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a068:	cmp	r3, #0
   1a06c:	beq	1a0ac <__assert_fail@plt+0x9198>
   1a070:	mov	r0, #0
   1a074:	bl	1a690 <__assert_fail@plt+0x977c>
   1a078:	mov	r3, r0
   1a07c:	eor	r3, r3, #1
   1a080:	uxtb	r3, r3
   1a084:	cmp	r3, #0
   1a088:	beq	1a0ac <__assert_fail@plt+0x9198>
   1a08c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a090:	ldrb	r3, [r3]
   1a094:	strb	r3, [fp, #-9]
   1a098:	ldrb	r2, [fp, #-9]
   1a09c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a0a0:	str	r2, [r3]
   1a0a4:	mov	r3, #1
   1a0a8:	b	1a0b0 <__assert_fail@plt+0x919c>
   1a0ac:	ldr	r3, [fp, #-8]
   1a0b0:	mov	r0, r3
   1a0b4:	sub	sp, fp, #4
   1a0b8:	ldr	fp, [sp]
   1a0bc:	add	sp, sp, #4
   1a0c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a0c4:	str	fp, [sp, #-8]!
   1a0c8:	str	lr, [sp, #4]
   1a0cc:	add	fp, sp, #4
   1a0d0:	sub	sp, sp, #24
   1a0d4:	str	r0, [fp, #-16]
   1a0d8:	str	r1, [fp, #-20]	; 0xffffffec
   1a0dc:	str	r2, [fp, #-24]	; 0xffffffe8
   1a0e0:	mov	ip, #0
   1a0e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a0e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a0ec:	umull	r0, r1, r2, r3
   1a0f0:	mov	r2, #0
   1a0f4:	mov	r3, #0
   1a0f8:	mov	r2, r1
   1a0fc:	mov	r3, #0
   1a100:	cmp	r2, #0
   1a104:	beq	1a10c <__assert_fail@plt+0x91f8>
   1a108:	mov	ip, #1
   1a10c:	mov	r3, r0
   1a110:	str	r3, [fp, #-8]
   1a114:	mov	r3, ip
   1a118:	and	r3, r3, #1
   1a11c:	uxtb	r3, r3
   1a120:	cmp	r3, #0
   1a124:	beq	1a140 <__assert_fail@plt+0x922c>
   1a128:	bl	10e54 <__errno_location@plt>
   1a12c:	mov	r2, r0
   1a130:	mov	r3, #12
   1a134:	str	r3, [r2]
   1a138:	mov	r3, #0
   1a13c:	b	1a154 <__assert_fail@plt+0x9240>
   1a140:	ldr	r3, [fp, #-8]
   1a144:	mov	r1, r3
   1a148:	ldr	r0, [fp, #-16]
   1a14c:	bl	198c8 <__assert_fail@plt+0x89b4>
   1a150:	mov	r3, r0
   1a154:	mov	r0, r3
   1a158:	sub	sp, fp, #4
   1a15c:	ldr	fp, [sp]
   1a160:	add	sp, sp, #4
   1a164:	pop	{pc}		; (ldr pc, [sp], #4)
   1a168:	push	{fp}		; (str fp, [sp, #-4]!)
   1a16c:	add	fp, sp, #0
   1a170:	sub	sp, sp, #12
   1a174:	str	r0, [fp, #-8]
   1a178:	ldr	r3, [fp, #-8]
   1a17c:	cmp	r3, #90	; 0x5a
   1a180:	bgt	1a1a4 <__assert_fail@plt+0x9290>
   1a184:	ldr	r3, [fp, #-8]
   1a188:	cmp	r3, #65	; 0x41
   1a18c:	bge	1a1b4 <__assert_fail@plt+0x92a0>
   1a190:	ldr	r3, [fp, #-8]
   1a194:	sub	r3, r3, #48	; 0x30
   1a198:	cmp	r3, #9
   1a19c:	bhi	1a1bc <__assert_fail@plt+0x92a8>
   1a1a0:	b	1a1b4 <__assert_fail@plt+0x92a0>
   1a1a4:	ldr	r3, [fp, #-8]
   1a1a8:	sub	r3, r3, #97	; 0x61
   1a1ac:	cmp	r3, #25
   1a1b0:	bhi	1a1bc <__assert_fail@plt+0x92a8>
   1a1b4:	mov	r3, #1
   1a1b8:	b	1a1c0 <__assert_fail@plt+0x92ac>
   1a1bc:	mov	r3, #0
   1a1c0:	mov	r0, r3
   1a1c4:	add	sp, fp, #0
   1a1c8:	pop	{fp}		; (ldr fp, [sp], #4)
   1a1cc:	bx	lr
   1a1d0:	push	{fp}		; (str fp, [sp, #-4]!)
   1a1d4:	add	fp, sp, #0
   1a1d8:	sub	sp, sp, #12
   1a1dc:	str	r0, [fp, #-8]
   1a1e0:	ldr	r3, [fp, #-8]
   1a1e4:	cmp	r3, #65	; 0x41
   1a1e8:	blt	1a210 <__assert_fail@plt+0x92fc>
   1a1ec:	ldr	r3, [fp, #-8]
   1a1f0:	cmp	r3, #90	; 0x5a
   1a1f4:	ble	1a208 <__assert_fail@plt+0x92f4>
   1a1f8:	ldr	r3, [fp, #-8]
   1a1fc:	sub	r3, r3, #97	; 0x61
   1a200:	cmp	r3, #25
   1a204:	bhi	1a210 <__assert_fail@plt+0x92fc>
   1a208:	mov	r3, #1
   1a20c:	b	1a214 <__assert_fail@plt+0x9300>
   1a210:	mov	r3, #0
   1a214:	mov	r0, r3
   1a218:	add	sp, fp, #0
   1a21c:	pop	{fp}		; (ldr fp, [sp], #4)
   1a220:	bx	lr
   1a224:	push	{fp}		; (str fp, [sp, #-4]!)
   1a228:	add	fp, sp, #0
   1a22c:	sub	sp, sp, #12
   1a230:	str	r0, [fp, #-8]
   1a234:	ldr	r3, [fp, #-8]
   1a238:	cmp	r3, #127	; 0x7f
   1a23c:	bhi	1a248 <__assert_fail@plt+0x9334>
   1a240:	mov	r3, #1
   1a244:	b	1a24c <__assert_fail@plt+0x9338>
   1a248:	mov	r3, #0
   1a24c:	mov	r0, r3
   1a250:	add	sp, fp, #0
   1a254:	pop	{fp}		; (ldr fp, [sp], #4)
   1a258:	bx	lr
   1a25c:	push	{fp}		; (str fp, [sp, #-4]!)
   1a260:	add	fp, sp, #0
   1a264:	sub	sp, sp, #12
   1a268:	str	r0, [fp, #-8]
   1a26c:	ldr	r3, [fp, #-8]
   1a270:	cmp	r3, #32
   1a274:	beq	1a284 <__assert_fail@plt+0x9370>
   1a278:	ldr	r3, [fp, #-8]
   1a27c:	cmp	r3, #9
   1a280:	bne	1a28c <__assert_fail@plt+0x9378>
   1a284:	mov	r3, #1
   1a288:	b	1a290 <__assert_fail@plt+0x937c>
   1a28c:	mov	r3, #0
   1a290:	and	r3, r3, #1
   1a294:	uxtb	r3, r3
   1a298:	mov	r0, r3
   1a29c:	add	sp, fp, #0
   1a2a0:	pop	{fp}		; (ldr fp, [sp], #4)
   1a2a4:	bx	lr
   1a2a8:	push	{fp}		; (str fp, [sp, #-4]!)
   1a2ac:	add	fp, sp, #0
   1a2b0:	sub	sp, sp, #12
   1a2b4:	str	r0, [fp, #-8]
   1a2b8:	ldr	r3, [fp, #-8]
   1a2bc:	cmp	r3, #0
   1a2c0:	blt	1a2e4 <__assert_fail@plt+0x93d0>
   1a2c4:	ldr	r3, [fp, #-8]
   1a2c8:	cmp	r3, #31
   1a2cc:	ble	1a2dc <__assert_fail@plt+0x93c8>
   1a2d0:	ldr	r3, [fp, #-8]
   1a2d4:	cmp	r3, #127	; 0x7f
   1a2d8:	bne	1a2e4 <__assert_fail@plt+0x93d0>
   1a2dc:	mov	r3, #1
   1a2e0:	b	1a2e8 <__assert_fail@plt+0x93d4>
   1a2e4:	mov	r3, #0
   1a2e8:	mov	r0, r3
   1a2ec:	add	sp, fp, #0
   1a2f0:	pop	{fp}		; (ldr fp, [sp], #4)
   1a2f4:	bx	lr
   1a2f8:	push	{fp}		; (str fp, [sp, #-4]!)
   1a2fc:	add	fp, sp, #0
   1a300:	sub	sp, sp, #12
   1a304:	str	r0, [fp, #-8]
   1a308:	ldr	r3, [fp, #-8]
   1a30c:	sub	r3, r3, #48	; 0x30
   1a310:	cmp	r3, #9
   1a314:	bhi	1a320 <__assert_fail@plt+0x940c>
   1a318:	mov	r3, #1
   1a31c:	b	1a324 <__assert_fail@plt+0x9410>
   1a320:	mov	r3, #0
   1a324:	mov	r0, r3
   1a328:	add	sp, fp, #0
   1a32c:	pop	{fp}		; (ldr fp, [sp], #4)
   1a330:	bx	lr
   1a334:	push	{fp}		; (str fp, [sp, #-4]!)
   1a338:	add	fp, sp, #0
   1a33c:	sub	sp, sp, #12
   1a340:	str	r0, [fp, #-8]
   1a344:	ldr	r3, [fp, #-8]
   1a348:	sub	r3, r3, #33	; 0x21
   1a34c:	cmp	r3, #93	; 0x5d
   1a350:	bhi	1a35c <__assert_fail@plt+0x9448>
   1a354:	mov	r3, #1
   1a358:	b	1a360 <__assert_fail@plt+0x944c>
   1a35c:	mov	r3, #0
   1a360:	mov	r0, r3
   1a364:	add	sp, fp, #0
   1a368:	pop	{fp}		; (ldr fp, [sp], #4)
   1a36c:	bx	lr
   1a370:	push	{fp}		; (str fp, [sp, #-4]!)
   1a374:	add	fp, sp, #0
   1a378:	sub	sp, sp, #12
   1a37c:	str	r0, [fp, #-8]
   1a380:	ldr	r3, [fp, #-8]
   1a384:	sub	r3, r3, #97	; 0x61
   1a388:	cmp	r3, #25
   1a38c:	bhi	1a398 <__assert_fail@plt+0x9484>
   1a390:	mov	r3, #1
   1a394:	b	1a39c <__assert_fail@plt+0x9488>
   1a398:	mov	r3, #0
   1a39c:	mov	r0, r3
   1a3a0:	add	sp, fp, #0
   1a3a4:	pop	{fp}		; (ldr fp, [sp], #4)
   1a3a8:	bx	lr
   1a3ac:	push	{fp}		; (str fp, [sp, #-4]!)
   1a3b0:	add	fp, sp, #0
   1a3b4:	sub	sp, sp, #12
   1a3b8:	str	r0, [fp, #-8]
   1a3bc:	ldr	r3, [fp, #-8]
   1a3c0:	sub	r3, r3, #32
   1a3c4:	cmp	r3, #94	; 0x5e
   1a3c8:	bhi	1a3d4 <__assert_fail@plt+0x94c0>
   1a3cc:	mov	r3, #1
   1a3d0:	b	1a3d8 <__assert_fail@plt+0x94c4>
   1a3d4:	mov	r3, #0
   1a3d8:	mov	r0, r3
   1a3dc:	add	sp, fp, #0
   1a3e0:	pop	{fp}		; (ldr fp, [sp], #4)
   1a3e4:	bx	lr
   1a3e8:	push	{fp}		; (str fp, [sp, #-4]!)
   1a3ec:	add	fp, sp, #0
   1a3f0:	sub	sp, sp, #12
   1a3f4:	str	r0, [fp, #-8]
   1a3f8:	ldr	r3, [fp, #-8]
   1a3fc:	cmp	r3, #64	; 0x40
   1a400:	bgt	1a424 <__assert_fail@plt+0x9510>
   1a404:	ldr	r3, [fp, #-8]
   1a408:	cmp	r3, #58	; 0x3a
   1a40c:	bge	1a44c <__assert_fail@plt+0x9538>
   1a410:	ldr	r3, [fp, #-8]
   1a414:	sub	r3, r3, #33	; 0x21
   1a418:	cmp	r3, #14
   1a41c:	bhi	1a454 <__assert_fail@plt+0x9540>
   1a420:	b	1a44c <__assert_fail@plt+0x9538>
   1a424:	ldr	r3, [fp, #-8]
   1a428:	cmp	r3, #91	; 0x5b
   1a42c:	blt	1a454 <__assert_fail@plt+0x9540>
   1a430:	ldr	r3, [fp, #-8]
   1a434:	cmp	r3, #96	; 0x60
   1a438:	ble	1a44c <__assert_fail@plt+0x9538>
   1a43c:	ldr	r3, [fp, #-8]
   1a440:	sub	r3, r3, #123	; 0x7b
   1a444:	cmp	r3, #3
   1a448:	bhi	1a454 <__assert_fail@plt+0x9540>
   1a44c:	mov	r3, #1
   1a450:	b	1a458 <__assert_fail@plt+0x9544>
   1a454:	mov	r3, #0
   1a458:	mov	r0, r3
   1a45c:	add	sp, fp, #0
   1a460:	pop	{fp}		; (ldr fp, [sp], #4)
   1a464:	bx	lr
   1a468:	push	{fp}		; (str fp, [sp, #-4]!)
   1a46c:	add	fp, sp, #0
   1a470:	sub	sp, sp, #12
   1a474:	str	r0, [fp, #-8]
   1a478:	ldr	r3, [fp, #-8]
   1a47c:	cmp	r3, #9
   1a480:	blt	1a4a4 <__assert_fail@plt+0x9590>
   1a484:	ldr	r3, [fp, #-8]
   1a488:	cmp	r3, #13
   1a48c:	ble	1a49c <__assert_fail@plt+0x9588>
   1a490:	ldr	r3, [fp, #-8]
   1a494:	cmp	r3, #32
   1a498:	bne	1a4a4 <__assert_fail@plt+0x9590>
   1a49c:	mov	r3, #1
   1a4a0:	b	1a4a8 <__assert_fail@plt+0x9594>
   1a4a4:	mov	r3, #0
   1a4a8:	mov	r0, r3
   1a4ac:	add	sp, fp, #0
   1a4b0:	pop	{fp}		; (ldr fp, [sp], #4)
   1a4b4:	bx	lr
   1a4b8:	push	{fp}		; (str fp, [sp, #-4]!)
   1a4bc:	add	fp, sp, #0
   1a4c0:	sub	sp, sp, #12
   1a4c4:	str	r0, [fp, #-8]
   1a4c8:	ldr	r3, [fp, #-8]
   1a4cc:	sub	r3, r3, #65	; 0x41
   1a4d0:	cmp	r3, #25
   1a4d4:	bhi	1a4e0 <__assert_fail@plt+0x95cc>
   1a4d8:	mov	r3, #1
   1a4dc:	b	1a4e4 <__assert_fail@plt+0x95d0>
   1a4e0:	mov	r3, #0
   1a4e4:	mov	r0, r3
   1a4e8:	add	sp, fp, #0
   1a4ec:	pop	{fp}		; (ldr fp, [sp], #4)
   1a4f0:	bx	lr
   1a4f4:	push	{fp}		; (str fp, [sp, #-4]!)
   1a4f8:	add	fp, sp, #0
   1a4fc:	sub	sp, sp, #12
   1a500:	str	r0, [fp, #-8]
   1a504:	ldr	r3, [fp, #-8]
   1a508:	sub	r3, r3, #48	; 0x30
   1a50c:	cmp	r3, #54	; 0x36
   1a510:	ldrls	pc, [pc, r3, lsl #2]
   1a514:	b	1a5fc <__assert_fail@plt+0x96e8>
   1a518:	strdeq	sl, [r1], -r4
   1a51c:	strdeq	sl, [r1], -r4
   1a520:	strdeq	sl, [r1], -r4
   1a524:	strdeq	sl, [r1], -r4
   1a528:	strdeq	sl, [r1], -r4
   1a52c:	strdeq	sl, [r1], -r4
   1a530:	strdeq	sl, [r1], -r4
   1a534:	strdeq	sl, [r1], -r4
   1a538:	strdeq	sl, [r1], -r4
   1a53c:	strdeq	sl, [r1], -r4
   1a540:	strdeq	sl, [r1], -ip
   1a544:	strdeq	sl, [r1], -ip
   1a548:	strdeq	sl, [r1], -ip
   1a54c:	strdeq	sl, [r1], -ip
   1a550:	strdeq	sl, [r1], -ip
   1a554:	strdeq	sl, [r1], -ip
   1a558:	strdeq	sl, [r1], -ip
   1a55c:	strdeq	sl, [r1], -r4
   1a560:	strdeq	sl, [r1], -r4
   1a564:	strdeq	sl, [r1], -r4
   1a568:	strdeq	sl, [r1], -r4
   1a56c:	strdeq	sl, [r1], -r4
   1a570:	strdeq	sl, [r1], -r4
   1a574:	strdeq	sl, [r1], -ip
   1a578:	strdeq	sl, [r1], -ip
   1a57c:	strdeq	sl, [r1], -ip
   1a580:	strdeq	sl, [r1], -ip
   1a584:	strdeq	sl, [r1], -ip
   1a588:	strdeq	sl, [r1], -ip
   1a58c:	strdeq	sl, [r1], -ip
   1a590:	strdeq	sl, [r1], -ip
   1a594:	strdeq	sl, [r1], -ip
   1a598:	strdeq	sl, [r1], -ip
   1a59c:	strdeq	sl, [r1], -ip
   1a5a0:	strdeq	sl, [r1], -ip
   1a5a4:	strdeq	sl, [r1], -ip
   1a5a8:	strdeq	sl, [r1], -ip
   1a5ac:	strdeq	sl, [r1], -ip
   1a5b0:	strdeq	sl, [r1], -ip
   1a5b4:	strdeq	sl, [r1], -ip
   1a5b8:	strdeq	sl, [r1], -ip
   1a5bc:	strdeq	sl, [r1], -ip
   1a5c0:	strdeq	sl, [r1], -ip
   1a5c4:	strdeq	sl, [r1], -ip
   1a5c8:	strdeq	sl, [r1], -ip
   1a5cc:	strdeq	sl, [r1], -ip
   1a5d0:	strdeq	sl, [r1], -ip
   1a5d4:	strdeq	sl, [r1], -ip
   1a5d8:	strdeq	sl, [r1], -ip
   1a5dc:	strdeq	sl, [r1], -r4
   1a5e0:	strdeq	sl, [r1], -r4
   1a5e4:	strdeq	sl, [r1], -r4
   1a5e8:	strdeq	sl, [r1], -r4
   1a5ec:	strdeq	sl, [r1], -r4
   1a5f0:	strdeq	sl, [r1], -r4
   1a5f4:	mov	r3, #1
   1a5f8:	b	1a600 <__assert_fail@plt+0x96ec>
   1a5fc:	mov	r3, #0
   1a600:	mov	r0, r3
   1a604:	add	sp, fp, #0
   1a608:	pop	{fp}		; (ldr fp, [sp], #4)
   1a60c:	bx	lr
   1a610:	push	{fp}		; (str fp, [sp, #-4]!)
   1a614:	add	fp, sp, #0
   1a618:	sub	sp, sp, #12
   1a61c:	str	r0, [fp, #-8]
   1a620:	ldr	r3, [fp, #-8]
   1a624:	sub	r3, r3, #65	; 0x41
   1a628:	cmp	r3, #25
   1a62c:	bhi	1a63c <__assert_fail@plt+0x9728>
   1a630:	ldr	r3, [fp, #-8]
   1a634:	add	r3, r3, #32
   1a638:	b	1a640 <__assert_fail@plt+0x972c>
   1a63c:	ldr	r3, [fp, #-8]
   1a640:	mov	r0, r3
   1a644:	add	sp, fp, #0
   1a648:	pop	{fp}		; (ldr fp, [sp], #4)
   1a64c:	bx	lr
   1a650:	push	{fp}		; (str fp, [sp, #-4]!)
   1a654:	add	fp, sp, #0
   1a658:	sub	sp, sp, #12
   1a65c:	str	r0, [fp, #-8]
   1a660:	ldr	r3, [fp, #-8]
   1a664:	sub	r3, r3, #97	; 0x61
   1a668:	cmp	r3, #25
   1a66c:	bhi	1a67c <__assert_fail@plt+0x9768>
   1a670:	ldr	r3, [fp, #-8]
   1a674:	sub	r3, r3, #32
   1a678:	b	1a680 <__assert_fail@plt+0x976c>
   1a67c:	ldr	r3, [fp, #-8]
   1a680:	mov	r0, r3
   1a684:	add	sp, fp, #0
   1a688:	pop	{fp}		; (ldr fp, [sp], #4)
   1a68c:	bx	lr
   1a690:	str	fp, [sp, #-8]!
   1a694:	str	lr, [sp, #4]
   1a698:	add	fp, sp, #4
   1a69c:	sub	sp, sp, #272	; 0x110
   1a6a0:	str	r0, [fp, #-272]	; 0xfffffef0
   1a6a4:	sub	r3, fp, #264	; 0x108
   1a6a8:	movw	r2, #257	; 0x101
   1a6ac:	mov	r1, r3
   1a6b0:	ldr	r0, [fp, #-272]	; 0xfffffef0
   1a6b4:	bl	1a854 <__assert_fail@plt+0x9940>
   1a6b8:	mov	r3, r0
   1a6bc:	cmp	r3, #0
   1a6c0:	beq	1a6cc <__assert_fail@plt+0x97b8>
   1a6c4:	mov	r3, #0
   1a6c8:	b	1a720 <__assert_fail@plt+0x980c>
   1a6cc:	sub	r3, fp, #264	; 0x108
   1a6d0:	movw	r1, #49796	; 0xc284
   1a6d4:	movt	r1, #1
   1a6d8:	mov	r0, r3
   1a6dc:	bl	10cb0 <strcmp@plt>
   1a6e0:	mov	r3, r0
   1a6e4:	cmp	r3, #0
   1a6e8:	beq	1a714 <__assert_fail@plt+0x9800>
   1a6ec:	sub	r3, fp, #264	; 0x108
   1a6f0:	movw	r1, #49800	; 0xc288
   1a6f4:	movt	r1, #1
   1a6f8:	mov	r0, r3
   1a6fc:	bl	10cb0 <strcmp@plt>
   1a700:	mov	r3, r0
   1a704:	cmp	r3, #0
   1a708:	beq	1a714 <__assert_fail@plt+0x9800>
   1a70c:	mov	r3, #1
   1a710:	b	1a718 <__assert_fail@plt+0x9804>
   1a714:	mov	r3, #0
   1a718:	and	r3, r3, #1
   1a71c:	uxtb	r3, r3
   1a720:	mov	r0, r3
   1a724:	sub	sp, fp, #4
   1a728:	ldr	fp, [sp]
   1a72c:	add	sp, sp, #4
   1a730:	pop	{pc}		; (ldr pc, [sp], #4)
   1a734:	str	fp, [sp, #-8]!
   1a738:	str	lr, [sp, #4]
   1a73c:	add	fp, sp, #4
   1a740:	sub	sp, sp, #16
   1a744:	str	r0, [fp, #-16]
   1a748:	mov	r1, #0
   1a74c:	ldr	r0, [fp, #-16]
   1a750:	bl	10ea8 <setlocale@plt>
   1a754:	str	r0, [fp, #-8]
   1a758:	ldr	r3, [fp, #-8]
   1a75c:	mov	r0, r3
   1a760:	sub	sp, fp, #4
   1a764:	ldr	fp, [sp]
   1a768:	add	sp, sp, #4
   1a76c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a770:	str	fp, [sp, #-8]!
   1a774:	str	lr, [sp, #4]
   1a778:	add	fp, sp, #4
   1a77c:	sub	sp, sp, #24
   1a780:	str	r0, [fp, #-16]
   1a784:	str	r1, [fp, #-20]	; 0xffffffec
   1a788:	str	r2, [fp, #-24]	; 0xffffffe8
   1a78c:	ldr	r0, [fp, #-16]
   1a790:	bl	1a734 <__assert_fail@plt+0x9820>
   1a794:	str	r0, [fp, #-8]
   1a798:	ldr	r3, [fp, #-8]
   1a79c:	cmp	r3, #0
   1a7a0:	bne	1a7c4 <__assert_fail@plt+0x98b0>
   1a7a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a7a8:	cmp	r3, #0
   1a7ac:	beq	1a7bc <__assert_fail@plt+0x98a8>
   1a7b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a7b4:	mov	r2, #0
   1a7b8:	strb	r2, [r3]
   1a7bc:	mov	r3, #22
   1a7c0:	b	1a840 <__assert_fail@plt+0x992c>
   1a7c4:	ldr	r0, [fp, #-8]
   1a7c8:	bl	10e30 <strlen@plt>
   1a7cc:	str	r0, [fp, #-12]
   1a7d0:	ldr	r2, [fp, #-12]
   1a7d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a7d8:	cmp	r2, r3
   1a7dc:	bcs	1a800 <__assert_fail@plt+0x98ec>
   1a7e0:	ldr	r3, [fp, #-12]
   1a7e4:	add	r3, r3, #1
   1a7e8:	mov	r2, r3
   1a7ec:	ldr	r1, [fp, #-8]
   1a7f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a7f4:	bl	10d04 <memcpy@plt>
   1a7f8:	mov	r3, #0
   1a7fc:	b	1a840 <__assert_fail@plt+0x992c>
   1a800:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a804:	cmp	r3, #0
   1a808:	beq	1a83c <__assert_fail@plt+0x9928>
   1a80c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a810:	sub	r3, r3, #1
   1a814:	mov	r2, r3
   1a818:	ldr	r1, [fp, #-8]
   1a81c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a820:	bl	10d04 <memcpy@plt>
   1a824:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a828:	sub	r3, r3, #1
   1a82c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a830:	add	r3, r2, r3
   1a834:	mov	r2, #0
   1a838:	strb	r2, [r3]
   1a83c:	mov	r3, #34	; 0x22
   1a840:	mov	r0, r3
   1a844:	sub	sp, fp, #4
   1a848:	ldr	fp, [sp]
   1a84c:	add	sp, sp, #4
   1a850:	pop	{pc}		; (ldr pc, [sp], #4)
   1a854:	str	fp, [sp, #-8]!
   1a858:	str	lr, [sp, #4]
   1a85c:	add	fp, sp, #4
   1a860:	sub	sp, sp, #16
   1a864:	str	r0, [fp, #-8]
   1a868:	str	r1, [fp, #-12]
   1a86c:	str	r2, [fp, #-16]
   1a870:	ldr	r2, [fp, #-16]
   1a874:	ldr	r1, [fp, #-12]
   1a878:	ldr	r0, [fp, #-8]
   1a87c:	bl	1a770 <__assert_fail@plt+0x985c>
   1a880:	mov	r3, r0
   1a884:	mov	r0, r3
   1a888:	sub	sp, fp, #4
   1a88c:	ldr	fp, [sp]
   1a890:	add	sp, sp, #4
   1a894:	pop	{pc}		; (ldr pc, [sp], #4)
   1a898:	str	fp, [sp, #-8]!
   1a89c:	str	lr, [sp, #4]
   1a8a0:	add	fp, sp, #4
   1a8a4:	sub	sp, sp, #8
   1a8a8:	str	r0, [fp, #-8]
   1a8ac:	ldr	r0, [fp, #-8]
   1a8b0:	bl	1a734 <__assert_fail@plt+0x9820>
   1a8b4:	mov	r3, r0
   1a8b8:	mov	r0, r3
   1a8bc:	sub	sp, fp, #4
   1a8c0:	ldr	fp, [sp]
   1a8c4:	add	sp, sp, #4
   1a8c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a8cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a8d0:	mov	r7, r0
   1a8d4:	ldr	r6, [pc, #72]	; 1a924 <__assert_fail@plt+0x9a10>
   1a8d8:	ldr	r5, [pc, #72]	; 1a928 <__assert_fail@plt+0x9a14>
   1a8dc:	add	r6, pc, r6
   1a8e0:	add	r5, pc, r5
   1a8e4:	sub	r6, r6, r5
   1a8e8:	mov	r8, r1
   1a8ec:	mov	r9, r2
   1a8f0:	bl	10c78 <calloc@plt-0x20>
   1a8f4:	asrs	r6, r6, #2
   1a8f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a8fc:	mov	r4, #0
   1a900:	add	r4, r4, #1
   1a904:	ldr	r3, [r5], #4
   1a908:	mov	r2, r9
   1a90c:	mov	r1, r8
   1a910:	mov	r0, r7
   1a914:	blx	r3
   1a918:	cmp	r6, r4
   1a91c:	bne	1a900 <__assert_fail@plt+0x99ec>
   1a920:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a924:	andeq	r2, r1, r0, lsr r6
   1a928:	andeq	r2, r1, r8, lsr #12
   1a92c:	bx	lr
   1a930:	ldr	r3, [pc, #12]	; 1a944 <__assert_fail@plt+0x9a30>
   1a934:	mov	r1, #0
   1a938:	add	r3, pc, r3
   1a93c:	ldr	r2, [r3]
   1a940:	b	10e60 <__cxa_atexit@plt>
   1a944:	andeq	r2, r1, ip, lsr #15

Disassembly of section .fini:

0001a948 <.fini>:
   1a948:	push	{r3, lr}
   1a94c:	pop	{r3, pc}
