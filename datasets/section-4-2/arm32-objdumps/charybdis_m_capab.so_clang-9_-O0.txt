
../repos/charybdis/modules/.libs/m_capab.so:     file format elf32-littlearm


Disassembly of section .init:

000005f8 <_init>:
 5f8:	push	{r3, lr}
 5fc:	bl	690 <call_weak_fn>
 600:	pop	{r3, pc}

Disassembly of section .plt:

00000604 <.plt>:
 604:	push	{lr}		; (str lr, [sp, #-4]!)
 608:	ldr	lr, [pc, #4]	; 614 <.plt+0x10>
 60c:	add	lr, pc, lr
 610:	ldr	pc, [lr, #8]!
 614:	.word	0x000109ec

00000618 <__cxa_finalize@plt>:
 618:	add	ip, pc, #0, 12
 61c:	add	ip, ip, #16, 20	; 0x10000
 620:	ldr	pc, [ip, #2540]!	; 0x9ec

00000624 <free@plt>:
 624:	add	ip, pc, #0, 12
 628:	add	ip, ip, #16, 20	; 0x10000
 62c:	ldr	pc, [ip, #2532]!	; 0x9e4

00000630 <rb_outofmemory@plt>:
 630:	add	ip, pc, #0, 12
 634:	add	ip, ip, #16, 20	; 0x10000
 638:	ldr	pc, [ip, #2524]!	; 0x9dc

0000063c <strcpy@plt>:
 63c:	add	ip, pc, #0, 12
 640:	add	ip, ip, #16, 20	; 0x10000
 644:	ldr	pc, [ip, #2516]!	; 0x9d4

00000648 <malloc@plt>:
 648:	add	ip, pc, #0, 12
 64c:	add	ip, ip, #16, 20	; 0x10000
 650:	ldr	pc, [ip, #2508]!	; 0x9cc

00000654 <__gmon_start__@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #16, 20	; 0x10000
 65c:	ldr	pc, [ip, #2500]!	; 0x9c4

00000660 <strlen@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #16, 20	; 0x10000
 668:	ldr	pc, [ip, #2492]!	; 0x9bc

0000066c <capability_get@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #16, 20	; 0x10000
 674:	ldr	pc, [ip, #2484]!	; 0x9b4

00000678 <rb_strtok_r@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #16, 20	; 0x10000
 680:	ldr	pc, [ip, #2476]!	; 0x9ac

00000684 <exit_client@plt>:
 684:	add	ip, pc, #0, 12
 688:	add	ip, ip, #16, 20	; 0x10000
 68c:	ldr	pc, [ip, #2468]!	; 0x9a4

Disassembly of section .text:

00000690 <call_weak_fn>:
 690:	ldr	r3, [pc, #20]	; 6ac <call_weak_fn+0x1c>
 694:	ldr	r2, [pc, #20]	; 6b0 <call_weak_fn+0x20>
 698:	add	r3, pc, r3
 69c:	ldr	r2, [r3, r2]
 6a0:	cmp	r2, #0
 6a4:	bxeq	lr
 6a8:	b	654 <__gmon_start__@plt>
 6ac:	.word	0x00010960
 6b0:	.word	0x00000048

000006b4 <deregister_tm_clones>:
 6b4:	ldr	r0, [pc, #44]	; 6e8 <deregister_tm_clones+0x34>
 6b8:	ldr	r3, [pc, #44]	; 6ec <deregister_tm_clones+0x38>
 6bc:	add	r0, pc, r0
 6c0:	add	r3, pc, r3
 6c4:	cmp	r3, r0
 6c8:	ldr	r3, [pc, #32]	; 6f0 <deregister_tm_clones+0x3c>
 6cc:	add	r3, pc, r3
 6d0:	bxeq	lr
 6d4:	ldr	r2, [pc, #24]	; 6f4 <deregister_tm_clones+0x40>
 6d8:	ldr	r3, [r3, r2]
 6dc:	cmp	r3, #0
 6e0:	bxeq	lr
 6e4:	bx	r3
 6e8:	.word	0x00010a4c
 6ec:	.word	0x00010a48
 6f0:	.word	0x0001092c
 6f4:	.word	0x00000040

000006f8 <register_tm_clones>:
 6f8:	ldr	r0, [pc, #56]	; 738 <register_tm_clones+0x40>
 6fc:	ldr	r3, [pc, #56]	; 73c <register_tm_clones+0x44>
 700:	add	r0, pc, r0
 704:	add	r3, pc, r3
 708:	sub	r1, r3, r0
 70c:	ldr	r3, [pc, #44]	; 740 <register_tm_clones+0x48>
 710:	asr	r1, r1, #2
 714:	add	r3, pc, r3
 718:	add	r1, r1, r1, lsr #31
 71c:	asrs	r1, r1, #1
 720:	bxeq	lr
 724:	ldr	r2, [pc, #24]	; 744 <register_tm_clones+0x4c>
 728:	ldr	r3, [r3, r2]
 72c:	cmp	r3, #0
 730:	bxeq	lr
 734:	bx	r3
 738:	.word	0x00010a08
 73c:	.word	0x00010a04
 740:	.word	0x000108e4
 744:	.word	0x0000004c

00000748 <__do_global_dtors_aux>:
 748:	ldr	r3, [pc, #76]	; 79c <__do_global_dtors_aux+0x54>
 74c:	ldr	r2, [pc, #76]	; 7a0 <__do_global_dtors_aux+0x58>
 750:	add	r3, pc, r3
 754:	add	r2, pc, r2
 758:	ldrb	r3, [r3]
 75c:	cmp	r3, #0
 760:	bxne	lr
 764:	ldr	r3, [pc, #56]	; 7a4 <__do_global_dtors_aux+0x5c>
 768:	push	{r4, lr}
 76c:	ldr	r3, [r2, r3]
 770:	cmp	r3, #0
 774:	beq	784 <__do_global_dtors_aux+0x3c>
 778:	ldr	r3, [pc, #40]	; 7a8 <__do_global_dtors_aux+0x60>
 77c:	ldr	r0, [pc, r3]
 780:	bl	618 <__cxa_finalize@plt>
 784:	bl	6b4 <deregister_tm_clones>
 788:	ldr	r3, [pc, #28]	; 7ac <__do_global_dtors_aux+0x64>
 78c:	mov	r2, #1
 790:	add	r3, pc, r3
 794:	strb	r2, [r3]
 798:	pop	{r4, pc}
 79c:	.word	0x000109b8
 7a0:	.word	0x000108a4
 7a4:	.word	0x00000038
 7a8:	.word	0x000108cc
 7ac:	.word	0x00010978

000007b0 <frame_dummy>:
 7b0:	b	6f8 <register_tm_clones>

000007b4 <mr_capab>:
 7b4:	push	{r4, r5, fp, lr}
 7b8:	add	fp, sp, #8
 7bc:	sub	sp, sp, #48	; 0x30
 7c0:	ldr	ip, [fp, #8]
 7c4:	str	r0, [fp, #-12]
 7c8:	str	r1, [fp, #-16]
 7cc:	str	r2, [fp, #-20]	; 0xffffffec
 7d0:	str	r3, [fp, #-24]	; 0xffffffe8
 7d4:	ldr	r0, [fp, #-16]
 7d8:	ldr	r0, [r0, #432]	; 0x1b0
 7dc:	movw	r1, #0
 7e0:	cmp	r0, r1
 7e4:	bne	7ec <mr_capab+0x38>
 7e8:	b	990 <mr_capab+0x1dc>
 7ec:	ldr	r0, [fp, #-16]
 7f0:	ldr	r0, [r0, #24]
 7f4:	movw	r1, #0
 7f8:	cmp	r0, r1
 7fc:	beq	804 <mr_capab+0x50>
 800:	b	990 <mr_capab+0x1dc>
 804:	ldr	r0, [pc, #396]	; 998 <mr_capab+0x1e4>
 808:	ldr	r0, [pc, r0]
 80c:	ldr	r1, [fp, #-16]
 810:	ldr	r1, [r1, #432]	; 0x1b0
 814:	ldr	r1, [r1, #296]	; 0x128
 818:	ldr	r0, [r0]
 81c:	mvn	r2, #0
 820:	eor	r0, r0, r2
 824:	and	r0, r1, r0
 828:	cmp	r0, #0
 82c:	beq	84c <mr_capab+0x98>
 830:	ldr	r0, [pc, #372]	; 9ac <mr_capab+0x1f8>
 834:	add	r3, pc, r0
 838:	ldr	r0, [fp, #-16]
 83c:	ldr	r1, [fp, #-16]
 840:	ldr	r2, [fp, #-16]
 844:	bl	684 <exit_client@plt>
 848:	b	990 <mr_capab+0x1dc>
 84c:	ldr	r0, [pc, #328]	; 99c <mr_capab+0x1e8>
 850:	ldr	r0, [pc, r0]
 854:	ldr	r0, [r0]
 858:	ldr	r1, [fp, #-16]
 85c:	ldr	r1, [r1, #432]	; 0x1b0
 860:	ldr	r2, [r1, #296]	; 0x128
 864:	orr	r0, r2, r0
 868:	str	r0, [r1, #296]	; 0x128
 86c:	ldr	r0, [fp, #-16]
 870:	ldr	r0, [r0, #432]	; 0x1b0
 874:	ldr	r0, [r0, #288]	; 0x120
 878:	bl	b18 <rb_free>
 87c:	ldr	r0, [fp, #8]
 880:	ldr	r0, [r0, #4]
 884:	bl	b60 <rb_strdup>
 888:	ldr	r1, [fp, #-16]
 88c:	ldr	r1, [r1, #432]	; 0x1b0
 890:	str	r0, [r1, #288]	; 0x120
 894:	movw	r0, #1
 898:	str	r0, [fp, #-28]	; 0xffffffe4
 89c:	ldr	r0, [fp, #-28]	; 0xffffffe4
 8a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
 8a4:	cmp	r0, r1
 8a8:	bge	990 <mr_capab+0x1dc>
 8ac:	ldr	r0, [pc, #236]	; 9a0 <mr_capab+0x1ec>
 8b0:	add	r1, pc, r0
 8b4:	ldr	r0, [fp, #8]
 8b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
 8bc:	ldr	r0, [r0, r2, lsl #2]
 8c0:	str	r1, [fp, #-52]	; 0xffffffcc
 8c4:	bl	660 <strlen@plt>
 8c8:	add	r0, r0, #8
 8cc:	bic	r0, r0, #7
 8d0:	mov	r1, sp
 8d4:	sub	r0, r1, r0
 8d8:	mov	sp, r0
 8dc:	str	r0, [fp, #-44]	; 0xffffffd4
 8e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
 8e4:	ldr	r1, [fp, #8]
 8e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
 8ec:	add	r1, r1, r2, lsl #2
 8f0:	ldr	r1, [r1]
 8f4:	bl	63c <strcpy@plt>
 8f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
 8fc:	str	r1, [fp, #-48]	; 0xffffffd0
 900:	ldr	r1, [fp, #-48]	; 0xffffffd0
 904:	str	r1, [fp, #-40]	; 0xffffffd8
 908:	ldr	r1, [fp, #-40]	; 0xffffffd8
 90c:	str	r0, [fp, #-56]	; 0xffffffc8
 910:	mov	r0, r1
 914:	ldr	r1, [fp, #-52]	; 0xffffffcc
 918:	sub	r2, fp, #32
 91c:	bl	678 <rb_strtok_r@plt>
 920:	str	r0, [fp, #-36]	; 0xffffffdc
 924:	ldr	r0, [fp, #-36]	; 0xffffffdc
 928:	movw	r1, #0
 92c:	cmp	r0, r1
 930:	beq	97c <mr_capab+0x1c8>
 934:	ldr	r0, [pc, #104]	; 9a4 <mr_capab+0x1f0>
 938:	ldr	r0, [pc, r0]
 93c:	ldr	r0, [r0]
 940:	ldr	r1, [fp, #-36]	; 0xffffffdc
 944:	movw	r2, #0
 948:	bl	66c <capability_get@plt>
 94c:	ldr	r1, [fp, #-16]
 950:	ldr	r1, [r1, #432]	; 0x1b0
 954:	ldr	r2, [r1, #296]	; 0x128
 958:	orr	r0, r2, r0
 95c:	str	r0, [r1, #296]	; 0x128
 960:	ldr	r0, [pc, #64]	; 9a8 <mr_capab+0x1f4>
 964:	add	r1, pc, r0
 968:	movw	r0, #0
 96c:	sub	r2, fp, #32
 970:	bl	678 <rb_strtok_r@plt>
 974:	str	r0, [fp, #-36]	; 0xffffffdc
 978:	b	924 <mr_capab+0x170>
 97c:	b	980 <mr_capab+0x1cc>
 980:	ldr	r0, [fp, #-28]	; 0xffffffe4
 984:	add	r0, r0, #1
 988:	str	r0, [fp, #-28]	; 0xffffffe4
 98c:	b	89c <mr_capab+0xe8>
 990:	sub	sp, fp, #8
 994:	pop	{r4, r5, fp, pc}
 998:	.word	0x00010834
 99c:	.word	0x000107dc
 9a0:	.word	0x00000340
 9a4:	.word	0x000106fc
 9a8:	.word	0x0000028c
 9ac:	.word	0x000003a7

000009b0 <me_gcap>:
 9b0:	push	{r4, r5, fp, lr}
 9b4:	add	fp, sp, #8
 9b8:	sub	sp, sp, #40	; 0x28
 9bc:	ldr	ip, [fp, #8]
 9c0:	str	r0, [fp, #-12]
 9c4:	str	r1, [fp, #-16]
 9c8:	str	r2, [fp, #-20]	; 0xffffffec
 9cc:	str	r3, [fp, #-24]	; 0xffffffe8
 9d0:	ldr	r0, [fp, #8]
 9d4:	ldr	r0, [r0, #4]
 9d8:	str	ip, [fp, #-48]	; 0xffffffd0
 9dc:	bl	660 <strlen@plt>
 9e0:	add	r0, r0, #8
 9e4:	bic	r0, r0, #7
 9e8:	mov	r1, sp
 9ec:	sub	r0, r1, r0
 9f0:	mov	sp, r0
 9f4:	str	r0, [fp, #-32]	; 0xffffffe0
 9f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
 9fc:	ldr	r1, [fp, #8]
 a00:	ldr	r1, [r1, #4]
 a04:	bl	63c <strcpy@plt>
 a08:	ldr	r1, [fp, #-32]	; 0xffffffe0
 a0c:	str	r1, [fp, #-36]	; 0xffffffdc
 a10:	ldr	r1, [fp, #-36]	; 0xffffffdc
 a14:	str	r1, [fp, #-28]	; 0xffffffe4
 a18:	ldr	r1, [fp, #-20]	; 0xffffffec
 a1c:	ldrh	r1, [r1, #80]	; 0x50
 a20:	cmp	r1, #32
 a24:	beq	a2c <me_gcap+0x7c>
 a28:	b	b04 <me_gcap+0x154>
 a2c:	ldr	r0, [fp, #-20]	; 0xffffffec
 a30:	ldr	r0, [r0, #28]
 a34:	ldr	r0, [r0, #64]	; 0x40
 a38:	movw	r1, #0
 a3c:	cmp	r0, r1
 a40:	beq	a7c <me_gcap+0xcc>
 a44:	ldr	r0, [fp, #-20]	; 0xffffffec
 a48:	ldr	r0, [r0, #28]
 a4c:	ldr	r0, [r0, #64]	; 0x40
 a50:	ldrb	r0, [r0]
 a54:	cmp	r0, #0
 a58:	beq	a7c <me_gcap+0xcc>
 a5c:	ldr	r0, [fp, #-20]	; 0xffffffec
 a60:	ldr	r0, [r0, #28]
 a64:	movw	r1, #0
 a68:	str	r1, [r0, #60]	; 0x3c
 a6c:	ldr	r0, [fp, #-20]	; 0xffffffec
 a70:	ldr	r0, [r0, #28]
 a74:	ldr	r0, [r0, #64]	; 0x40
 a78:	bl	b18 <rb_free>
 a7c:	ldr	r0, [fp, #8]
 a80:	ldr	r0, [r0, #4]
 a84:	bl	b60 <rb_strdup>
 a88:	ldr	r1, [pc, #124]	; b0c <me_gcap+0x15c>
 a8c:	add	r1, pc, r1
 a90:	ldr	r2, [fp, #-20]	; 0xffffffec
 a94:	ldr	r2, [r2, #28]
 a98:	str	r0, [r2, #64]	; 0x40
 a9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
 aa0:	sub	r2, fp, #44	; 0x2c
 aa4:	bl	678 <rb_strtok_r@plt>
 aa8:	str	r0, [fp, #-40]	; 0xffffffd8
 aac:	ldr	r0, [fp, #-40]	; 0xffffffd8
 ab0:	movw	r1, #0
 ab4:	cmp	r0, r1
 ab8:	beq	b04 <me_gcap+0x154>
 abc:	ldr	r0, [pc, #76]	; b10 <me_gcap+0x160>
 ac0:	ldr	r0, [pc, r0]
 ac4:	ldr	r0, [r0]
 ac8:	ldr	r1, [fp, #-40]	; 0xffffffd8
 acc:	movw	r2, #0
 ad0:	bl	66c <capability_get@plt>
 ad4:	ldr	r1, [fp, #-20]	; 0xffffffec
 ad8:	ldr	r1, [r1, #28]
 adc:	ldr	r2, [r1, #60]	; 0x3c
 ae0:	orr	r0, r2, r0
 ae4:	str	r0, [r1, #60]	; 0x3c
 ae8:	ldr	r0, [pc, #36]	; b14 <me_gcap+0x164>
 aec:	add	r1, pc, r0
 af0:	movw	r0, #0
 af4:	sub	r2, fp, #44	; 0x2c
 af8:	bl	678 <rb_strtok_r@plt>
 afc:	str	r0, [fp, #-40]	; 0xffffffd8
 b00:	b	aac <me_gcap+0xfc>
 b04:	sub	sp, fp, #8
 b08:	pop	{r4, r5, fp, pc}
 b0c:	.word	0x00000164
 b10:	.word	0x00010574
 b14:	.word	0x00000104

00000b18 <rb_free>:
 b18:	push	{fp, lr}
 b1c:	mov	fp, sp
 b20:	sub	sp, sp, #8
 b24:	str	r0, [sp, #4]
 b28:	ldr	r0, [sp, #4]
 b2c:	movw	r1, #0
 b30:	cmp	r0, r1
 b34:	movw	r0, #0
 b38:	movne	r0, #1
 b3c:	mvn	r1, #0
 b40:	eor	r0, r0, r1
 b44:	eor	r0, r0, r1
 b48:	tst	r0, #1
 b4c:	beq	b58 <rb_free+0x40>
 b50:	ldr	r0, [sp, #4]
 b54:	bl	624 <free@plt>
 b58:	mov	sp, fp
 b5c:	pop	{fp, pc}

00000b60 <rb_strdup>:
 b60:	push	{fp, lr}
 b64:	mov	fp, sp
 b68:	sub	sp, sp, #16
 b6c:	str	r0, [fp, #-4]
 b70:	ldr	r0, [fp, #-4]
 b74:	bl	660 <strlen@plt>
 b78:	add	r0, r0, #1
 b7c:	bl	648 <malloc@plt>
 b80:	str	r0, [sp, #8]
 b84:	ldr	r0, [sp, #8]
 b88:	movw	r1, #0
 b8c:	cmp	r0, r1
 b90:	movw	r0, #0
 b94:	moveq	r0, #1
 b98:	mvn	r1, #0
 b9c:	eor	r0, r0, r1
 ba0:	eor	r0, r0, r1
 ba4:	tst	r0, #1
 ba8:	beq	bb0 <rb_strdup+0x50>
 bac:	bl	630 <rb_outofmemory@plt>
 bb0:	ldr	r0, [sp, #8]
 bb4:	ldr	r1, [fp, #-4]
 bb8:	bl	63c <strcpy@plt>
 bbc:	ldr	r1, [sp, #8]
 bc0:	str	r0, [sp, #4]
 bc4:	mov	r0, r1
 bc8:	mov	sp, fp
 bcc:	pop	{fp, pc}

Disassembly of section .fini:

00000bd0 <_fini>:
 bd0:	push	{r3, lr}
 bd4:	pop	{r3, pc}
