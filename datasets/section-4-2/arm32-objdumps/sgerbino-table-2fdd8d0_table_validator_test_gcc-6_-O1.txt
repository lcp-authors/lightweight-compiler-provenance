
../repos/sgerbino-table-2fdd8d0/bin/table_validator_test:     file format elf32-littlearm


Disassembly of section .init:

00011b80 <.init>:
   11b80:	push	{r3, lr}
   11b84:	bl	11c9c <_start@@Base+0x3c>
   11b88:	pop	{r3, pc}

Disassembly of section .plt:

00011b8c <raise@plt-0x14>:
   11b8c:	push	{lr}		; (str lr, [sp, #-4]!)
   11b90:	ldr	lr, [pc, #4]	; 11b9c <raise@plt-0x4>
   11b94:	add	lr, pc, lr
   11b98:	ldr	pc, [lr, #8]!
   11b9c:	andeq	r4, r1, r4, ror #8

00011ba0 <raise@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #20, 20	; 0x14000
   11ba8:	ldr	pc, [ip, #1124]!	; 0x464

00011bac <strcmp@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #20, 20	; 0x14000
   11bb4:	ldr	pc, [ip, #1116]!	; 0x45c

00011bb8 <printf@plt>:
   11bb8:	add	ip, pc, #0, 12
   11bbc:	add	ip, ip, #20, 20	; 0x14000
   11bc0:	ldr	pc, [ip, #1108]!	; 0x454

00011bc4 <free@plt>:
   11bc4:	add	ip, pc, #0, 12
   11bc8:	add	ip, ip, #20, 20	; 0x14000
   11bcc:	ldr	pc, [ip, #1100]!	; 0x44c

00011bd0 <time@plt>:
   11bd0:	add	ip, pc, #0, 12
   11bd4:	add	ip, ip, #20, 20	; 0x14000
   11bd8:	ldr	pc, [ip, #1092]!	; 0x444

00011bdc <realloc@plt>:
   11bdc:	add	ip, pc, #0, 12
   11be0:	add	ip, ip, #20, 20	; 0x14000
   11be4:	ldr	pc, [ip, #1084]!	; 0x43c

00011be8 <strcpy@plt>:
   11be8:	add	ip, pc, #0, 12
   11bec:	add	ip, ip, #20, 20	; 0x14000
   11bf0:	ldr	pc, [ip, #1076]!	; 0x434

00011bf4 <malloc@plt>:
   11bf4:	add	ip, pc, #0, 12
   11bf8:	add	ip, ip, #20, 20	; 0x14000
   11bfc:	ldr	pc, [ip, #1068]!	; 0x42c

00011c00 <__libc_start_main@plt>:
   11c00:	add	ip, pc, #0, 12
   11c04:	add	ip, ip, #20, 20	; 0x14000
   11c08:	ldr	pc, [ip, #1060]!	; 0x424

00011c0c <__gmon_start__@plt>:
   11c0c:	add	ip, pc, #0, 12
   11c10:	add	ip, ip, #20, 20	; 0x14000
   11c14:	ldr	pc, [ip, #1052]!	; 0x41c

00011c18 <strlen@plt>:
   11c18:	add	ip, pc, #0, 12
   11c1c:	add	ip, ip, #20, 20	; 0x14000
   11c20:	ldr	pc, [ip, #1044]!	; 0x414

00011c24 <srand@plt>:
   11c24:	add	ip, pc, #0, 12
   11c28:	add	ip, ip, #20, 20	; 0x14000
   11c2c:	ldr	pc, [ip, #1036]!	; 0x40c

00011c30 <snprintf@plt>:
   11c30:	add	ip, pc, #0, 12
   11c34:	add	ip, ip, #20, 20	; 0x14000
   11c38:	ldr	pc, [ip, #1028]!	; 0x404

00011c3c <__isoc99_sscanf@plt>:
   11c3c:	add	ip, pc, #0, 12
   11c40:	add	ip, ip, #20, 20	; 0x14000
   11c44:	ldr	pc, [ip, #1020]!	; 0x3fc

00011c48 <rand@plt>:
   11c48:	add	ip, pc, #0, 12
   11c4c:	add	ip, ip, #20, 20	; 0x14000
   11c50:	ldr	pc, [ip, #1012]!	; 0x3f4

00011c54 <abort@plt>:
   11c54:	add	ip, pc, #0, 12
   11c58:	add	ip, ip, #20, 20	; 0x14000
   11c5c:	ldr	pc, [ip, #1004]!	; 0x3ec

Disassembly of section .text:

00011c60 <_start@@Base>:
   11c60:	mov	fp, #0
   11c64:	mov	lr, #0
   11c68:	pop	{r1}		; (ldr r1, [sp], #4)
   11c6c:	mov	r2, sp
   11c70:	push	{r2}		; (str r2, [sp, #-4]!)
   11c74:	push	{r0}		; (str r0, [sp, #-4]!)
   11c78:	ldr	ip, [pc, #16]	; 11c90 <_start@@Base+0x30>
   11c7c:	push	{ip}		; (str ip, [sp, #-4]!)
   11c80:	ldr	r0, [pc, #12]	; 11c94 <_start@@Base+0x34>
   11c84:	ldr	r3, [pc, #12]	; 11c98 <_start@@Base+0x38>
   11c88:	bl	11c00 <__libc_start_main@plt>
   11c8c:	bl	11c54 <abort@plt>
   11c90:	andeq	r5, r1, r0, ror #1
   11c94:	andeq	r1, r1, r8, lsl #27
   11c98:	andeq	r5, r1, r0, lsl #1
   11c9c:	ldr	r3, [pc, #20]	; 11cb8 <_start@@Base+0x58>
   11ca0:	ldr	r2, [pc, #20]	; 11cbc <_start@@Base+0x5c>
   11ca4:	add	r3, pc, r3
   11ca8:	ldr	r2, [r3, r2]
   11cac:	cmp	r2, #0
   11cb0:	bxeq	lr
   11cb4:	b	11c0c <__gmon_start__@plt>
   11cb8:	andeq	r4, r1, r4, asr r3
   11cbc:	andeq	r0, r0, ip, asr #32
   11cc0:	ldr	r3, [pc, #28]	; 11ce4 <_start@@Base+0x84>
   11cc4:	ldr	r0, [pc, #28]	; 11ce8 <_start@@Base+0x88>
   11cc8:	sub	r3, r3, r0
   11ccc:	cmp	r3, #6
   11cd0:	bxls	lr
   11cd4:	ldr	r3, [pc, #16]	; 11cec <_start@@Base+0x8c>
   11cd8:	cmp	r3, #0
   11cdc:	bxeq	lr
   11ce0:	bx	r3
   11ce4:	andeq	r6, r2, fp, asr r0
   11ce8:	andeq	r6, r2, r8, asr r0
   11cec:	andeq	r0, r0, r0
   11cf0:	ldr	r1, [pc, #36]	; 11d1c <_start@@Base+0xbc>
   11cf4:	ldr	r0, [pc, #36]	; 11d20 <_start@@Base+0xc0>
   11cf8:	sub	r1, r1, r0
   11cfc:	asr	r1, r1, #2
   11d00:	add	r1, r1, r1, lsr #31
   11d04:	asrs	r1, r1, #1
   11d08:	bxeq	lr
   11d0c:	ldr	r3, [pc, #16]	; 11d24 <_start@@Base+0xc4>
   11d10:	cmp	r3, #0
   11d14:	bxeq	lr
   11d18:	bx	r3
   11d1c:	andeq	r6, r2, r8, asr r0
   11d20:	andeq	r6, r2, r8, asr r0
   11d24:	andeq	r0, r0, r0
   11d28:	push	{r4, lr}
   11d2c:	ldr	r4, [pc, #24]	; 11d4c <_start@@Base+0xec>
   11d30:	ldrb	r3, [r4]
   11d34:	cmp	r3, #0
   11d38:	popne	{r4, pc}
   11d3c:	bl	11cc0 <_start@@Base+0x60>
   11d40:	mov	r3, #1
   11d44:	strb	r3, [r4]
   11d48:	pop	{r4, pc}
   11d4c:	andeq	r6, r2, r8, asr r0
   11d50:	ldr	r0, [pc, #40]	; 11d80 <_start@@Base+0x120>
   11d54:	ldr	r3, [r0]
   11d58:	cmp	r3, #0
   11d5c:	bne	11d64 <_start@@Base+0x104>
   11d60:	b	11cf0 <_start@@Base+0x90>
   11d64:	ldr	r3, [pc, #24]	; 11d84 <_start@@Base+0x124>
   11d68:	cmp	r3, #0
   11d6c:	beq	11d60 <_start@@Base+0x100>
   11d70:	push	{r4, lr}
   11d74:	blx	r3
   11d78:	pop	{r4, lr}
   11d7c:	b	11cf0 <_start@@Base+0x90>
   11d80:	andeq	r5, r2, r4, lsl pc
   11d84:	andeq	r0, r0, r0

00011d88 <main@@Base>:
   11d88:	push	{r4, r5, r6, lr}
   11d8c:	sub	sp, sp, #64	; 0x40
   11d90:	add	r0, sp, #4
   11d94:	bl	11bd0 <time@plt>
   11d98:	bl	11c24 <srand@plt>
   11d9c:	bl	11c48 <rand@plt>
   11da0:	mov	r4, r0
   11da4:	add	r0, sp, #4
   11da8:	bl	11bd0 <time@plt>
   11dac:	bl	11c24 <srand@plt>
   11db0:	bl	11c48 <rand@plt>
   11db4:	mov	r5, r0
   11db8:	add	r0, sp, #8
   11dbc:	bl	11f10 <table_init@@Base>
   11dc0:	mov	r1, r4
   11dc4:	add	r0, sp, #8
   11dc8:	bl	14258 <table_row_is_valid@@Base>
   11dcc:	subs	r6, r0, #0
   11dd0:	bne	11e74 <main@@Base+0xec>
   11dd4:	mov	r1, r5
   11dd8:	add	r0, sp, #8
   11ddc:	bl	14228 <table_column_is_valid@@Base>
   11de0:	cmp	r0, #0
   11de4:	bne	11e88 <main@@Base+0x100>
   11de8:	mov	r2, r5
   11dec:	mov	r1, r4
   11df0:	add	r0, sp, #8
   11df4:	bl	14288 <table_cell_is_valid@@Base>
   11df8:	cmp	r0, #0
   11dfc:	bne	11e9c <main@@Base+0x114>
   11e00:	add	r0, sp, #8
   11e04:	bl	13678 <table_add_row@@Base>
   11e08:	mov	r4, r0
   11e0c:	mov	r1, r0
   11e10:	add	r0, sp, #8
   11e14:	bl	14258 <table_row_is_valid@@Base>
   11e18:	cmp	r0, #0
   11e1c:	beq	11eb4 <main@@Base+0x12c>
   11e20:	mov	r2, #0
   11e24:	ldr	r1, [pc, #200]	; 11ef4 <main@@Base+0x16c>
   11e28:	add	r0, sp, #8
   11e2c:	bl	12918 <table_add_column@@Base>
   11e30:	mov	r5, r0
   11e34:	mov	r1, r0
   11e38:	add	r0, sp, #8
   11e3c:	bl	14228 <table_column_is_valid@@Base>
   11e40:	cmp	r0, #0
   11e44:	beq	11ec8 <main@@Base+0x140>
   11e48:	mov	r2, r5
   11e4c:	mov	r1, r4
   11e50:	add	r0, sp, #8
   11e54:	bl	14288 <table_cell_is_valid@@Base>
   11e58:	cmp	r0, #0
   11e5c:	beq	11edc <main@@Base+0x154>
   11e60:	add	r0, sp, #8
   11e64:	bl	11f74 <table_destroy@@Base>
   11e68:	mov	r0, r6
   11e6c:	add	sp, sp, #64	; 0x40
   11e70:	pop	{r4, r5, r6, pc}
   11e74:	mov	r1, r4
   11e78:	ldr	r0, [pc, #120]	; 11ef8 <main@@Base+0x170>
   11e7c:	bl	11bb8 <printf@plt>
   11e80:	mvn	r6, #0
   11e84:	b	11dd4 <main@@Base+0x4c>
   11e88:	mov	r1, r5
   11e8c:	ldr	r0, [pc, #104]	; 11efc <main@@Base+0x174>
   11e90:	bl	11bb8 <printf@plt>
   11e94:	mvn	r6, #0
   11e98:	b	11de8 <main@@Base+0x60>
   11e9c:	mov	r2, r5
   11ea0:	mov	r1, r4
   11ea4:	ldr	r0, [pc, #84]	; 11f00 <main@@Base+0x178>
   11ea8:	bl	11bb8 <printf@plt>
   11eac:	mvn	r6, #0
   11eb0:	b	11e00 <main@@Base+0x78>
   11eb4:	mov	r1, r4
   11eb8:	ldr	r0, [pc, #68]	; 11f04 <main@@Base+0x17c>
   11ebc:	bl	11bb8 <printf@plt>
   11ec0:	mvn	r6, #0
   11ec4:	b	11e20 <main@@Base+0x98>
   11ec8:	mov	r1, r5
   11ecc:	ldr	r0, [pc, #52]	; 11f08 <main@@Base+0x180>
   11ed0:	bl	11bb8 <printf@plt>
   11ed4:	mvn	r6, #0
   11ed8:	b	11e48 <main@@Base+0xc0>
   11edc:	mov	r2, r5
   11ee0:	mov	r1, r4
   11ee4:	ldr	r0, [pc, #32]	; 11f0c <main@@Base+0x184>
   11ee8:	bl	11bb8 <printf@plt>
   11eec:	mvn	r6, #0
   11ef0:	b	11e60 <main@@Base+0xd8>
   11ef4:	andeq	r5, r1, r0, ror #2
   11ef8:	strdeq	r5, [r1], -r0
   11efc:	andeq	r5, r1, ip, lsl #2
   11f00:	andeq	r5, r1, ip, lsr #2
   11f04:	andeq	r5, r1, ip, asr #2
   11f08:	andeq	r5, r1, r4, ror #2
   11f0c:	andeq	r5, r1, r0, lsl #3

00011f10 <table_init@@Base>:
   11f10:	mov	r3, #0
   11f14:	str	r3, [r0]
   11f18:	str	r3, [r0, #4]
   11f1c:	str	r3, [r0, #12]
   11f20:	mov	r2, #10
   11f24:	str	r2, [r0, #8]
   11f28:	str	r3, [r0, #16]
   11f2c:	str	r3, [r0, #20]
   11f30:	str	r3, [r0, #28]
   11f34:	mov	r1, #20
   11f38:	str	r1, [r0, #24]
   11f3c:	str	r3, [r0, #36]	; 0x24
   11f40:	str	r3, [r0, #40]	; 0x28
   11f44:	str	r3, [r0, #44]	; 0x2c
   11f48:	str	r3, [r0, #32]
   11f4c:	str	r3, [r0, #52]	; 0x34
   11f50:	str	r2, [r0, #48]	; 0x30
   11f54:	bx	lr

00011f58 <table_new@@Base>:
   11f58:	push	{r4, lr}
   11f5c:	mov	r0, #56	; 0x38
   11f60:	bl	11bf4 <malloc@plt>
   11f64:	mov	r4, r0
   11f68:	bl	11f10 <table_init@@Base>
   11f6c:	mov	r0, r4
   11f70:	pop	{r4, pc}

00011f74 <table_destroy@@Base>:
   11f74:	push	{r4, r5, r6, lr}
   11f78:	subs	r5, r0, #0
   11f7c:	popeq	{r4, r5, r6, pc}
   11f80:	mov	r3, #64	; 0x40
   11f84:	mvn	r2, #0
   11f88:	mov	r1, r2
   11f8c:	mov	r0, r5
   11f90:	bl	127ac <table_notify@@Base>
   11f94:	mov	r0, r5
   11f98:	bl	13670 <table_get_row_length@@Base>
   11f9c:	subs	r6, r0, #0
   11fa0:	ble	11fc0 <table_destroy@@Base+0x4c>
   11fa4:	mov	r4, #0
   11fa8:	mov	r1, r4
   11fac:	mov	r0, r5
   11fb0:	bl	13620 <table_row_destroy@@Base>
   11fb4:	add	r4, r4, #1
   11fb8:	cmp	r6, r4
   11fbc:	bne	11fa8 <table_destroy@@Base+0x34>
   11fc0:	ldr	r0, [r5, #16]
   11fc4:	cmp	r0, #0
   11fc8:	beq	11fd0 <table_destroy@@Base+0x5c>
   11fcc:	bl	11bc4 <free@plt>
   11fd0:	mov	r0, r5
   11fd4:	bl	1289c <table_get_column_length@@Base>
   11fd8:	subs	r6, r0, #0
   11fdc:	ble	11ffc <table_destroy@@Base+0x88>
   11fe0:	mov	r4, #0
   11fe4:	mov	r1, r4
   11fe8:	mov	r0, r5
   11fec:	bl	1287c <table_column_destroy@@Base>
   11ff0:	add	r4, r4, #1
   11ff4:	cmp	r6, r4
   11ff8:	bne	11fe4 <table_destroy@@Base+0x70>
   11ffc:	ldr	r0, [r5]
   12000:	cmp	r0, #0
   12004:	beq	1200c <table_destroy@@Base+0x98>
   12008:	bl	11bc4 <free@plt>
   1200c:	ldr	r0, [r5, #36]	; 0x24
   12010:	cmp	r0, #0
   12014:	beq	1201c <table_destroy@@Base+0xa8>
   12018:	bl	11bc4 <free@plt>
   1201c:	ldr	r0, [r5, #40]	; 0x28
   12020:	cmp	r0, #0
   12024:	beq	1202c <table_destroy@@Base+0xb8>
   12028:	bl	11bc4 <free@plt>
   1202c:	ldr	r0, [r5, #44]	; 0x2c
   12030:	cmp	r0, #0
   12034:	popeq	{r4, r5, r6, pc}
   12038:	bl	11bc4 <free@plt>
   1203c:	pop	{r4, r5, r6, pc}

00012040 <table_delete@@Base>:
   12040:	push	{r4, lr}
   12044:	mov	r4, r0
   12048:	bl	11f74 <table_destroy@@Base>
   1204c:	mov	r0, r4
   12050:	bl	11bc4 <free@plt>
   12054:	pop	{r4, pc}

00012058 <table_dupe@@Base>:
   12058:	push	{r4, r5, r6, r7, r8, r9, lr}
   1205c:	sub	sp, sp, #20
   12060:	mov	r6, r0
   12064:	bl	13670 <table_get_row_length@@Base>
   12068:	mov	r9, r0
   1206c:	mov	r0, r6
   12070:	bl	1289c <table_get_column_length@@Base>
   12074:	mov	r7, r0
   12078:	bl	11f58 <table_new@@Base>
   1207c:	mov	r8, r0
   12080:	cmp	r7, #0
   12084:	ble	120c4 <table_dupe@@Base+0x6c>
   12088:	mov	r4, #0
   1208c:	mov	r1, r4
   12090:	mov	r0, r6
   12094:	bl	12ba8 <table_get_column_name@@Base>
   12098:	mov	r5, r0
   1209c:	mov	r1, r4
   120a0:	mov	r0, r6
   120a4:	bl	12904 <table_get_column_data_type@@Base>
   120a8:	mov	r2, r0
   120ac:	mov	r1, r5
   120b0:	mov	r0, r8
   120b4:	bl	12918 <table_add_column@@Base>
   120b8:	add	r4, r4, #1
   120bc:	cmp	r7, r4
   120c0:	bne	1208c <table_dupe@@Base+0x34>
   120c4:	cmp	r9, #0
   120c8:	ble	12530 <table_dupe@@Base+0x4d8>
   120cc:	mov	r5, #0
   120d0:	b	12518 <table_dupe@@Base+0x4c0>
   120d4:	mov	r2, r4
   120d8:	mov	r1, r5
   120dc:	mov	r0, r6
   120e0:	bl	13498 <table_get_int@@Base>
   120e4:	mov	r3, r0
   120e8:	mov	r2, r4
   120ec:	mov	r1, r5
   120f0:	mov	r0, r8
   120f4:	bl	13ed4 <table_set_int@@Base>
   120f8:	add	r4, r4, #1
   120fc:	cmp	r7, r4
   12100:	beq	1250c <table_dupe@@Base+0x4b4>
   12104:	mov	r1, r4
   12108:	mov	r0, r6
   1210c:	bl	12904 <table_get_column_data_type@@Base>
   12110:	cmp	r0, #23
   12114:	ldrls	pc, [pc, r0, lsl #2]
   12118:	b	120f8 <table_dupe@@Base+0xa0>
   1211c:	ldrdeq	r2, [r1], -r4
   12120:	andeq	r2, r1, ip, ror r1
   12124:	andeq	r2, r1, r4, lsr #3
   12128:	andeq	r2, r1, ip, asr #3
   1212c:	strdeq	r2, [r1], -r4
   12130:	andeq	r2, r1, ip, lsl r2
   12134:	andeq	r2, r1, r4, asr #4
   12138:	andeq	r2, r1, ip, ror #4
   1213c:	muleq	r1, r4, r2
   12140:			; <UNDEFINED> instruction: 0x000122bc
   12144:	andeq	r2, r1, r4, ror #5
   12148:	andeq	r2, r1, ip, lsl #6
   1214c:	andeq	r2, r1, r4, lsr r3
   12150:	andeq	r2, r1, ip, asr r3
   12154:	andeq	r2, r1, r4, lsl #7
   12158:	andeq	r2, r1, ip, lsr #7
   1215c:	strdeq	r2, [r1], -ip
   12160:	andeq	r2, r1, r0, lsr #8
   12164:	andeq	r2, r1, r4, asr #8
   12168:	muleq	r1, r0, r4
   1216c:			; <UNDEFINED> instruction: 0x000124b8
   12170:	ldrdeq	r2, [r1], -r4
   12174:	andeq	r2, r1, r8, ror #8
   12178:	andeq	r2, r1, r0, ror #9
   1217c:	mov	r2, r4
   12180:	mov	r1, r5
   12184:	mov	r0, r6
   12188:	bl	134a8 <table_get_uint@@Base>
   1218c:	mov	r3, r0
   12190:	mov	r2, r4
   12194:	mov	r1, r5
   12198:	mov	r0, r8
   1219c:	bl	13efc <table_set_uint@@Base>
   121a0:	b	120f8 <table_dupe@@Base+0xa0>
   121a4:	mov	r2, r4
   121a8:	mov	r1, r5
   121ac:	mov	r0, r6
   121b0:	bl	134b8 <table_get_int8@@Base>
   121b4:	mov	r3, r0
   121b8:	mov	r2, r4
   121bc:	mov	r1, r5
   121c0:	mov	r0, r8
   121c4:	bl	13f24 <table_set_int8@@Base>
   121c8:	b	120f8 <table_dupe@@Base+0xa0>
   121cc:	mov	r2, r4
   121d0:	mov	r1, r5
   121d4:	mov	r0, r6
   121d8:	bl	134c8 <table_get_uint8@@Base>
   121dc:	mov	r3, r0
   121e0:	mov	r2, r4
   121e4:	mov	r1, r5
   121e8:	mov	r0, r8
   121ec:	bl	13f4c <table_set_uint8@@Base>
   121f0:	b	120f8 <table_dupe@@Base+0xa0>
   121f4:	mov	r2, r4
   121f8:	mov	r1, r5
   121fc:	mov	r0, r6
   12200:	bl	134d8 <table_get_int16@@Base>
   12204:	mov	r3, r0
   12208:	mov	r2, r4
   1220c:	mov	r1, r5
   12210:	mov	r0, r8
   12214:	bl	13f74 <table_set_int16@@Base>
   12218:	b	120f8 <table_dupe@@Base+0xa0>
   1221c:	mov	r2, r4
   12220:	mov	r1, r5
   12224:	mov	r0, r6
   12228:	bl	134e8 <table_get_uint16@@Base>
   1222c:	mov	r3, r0
   12230:	mov	r2, r4
   12234:	mov	r1, r5
   12238:	mov	r0, r8
   1223c:	bl	13f9c <table_set_uint16@@Base>
   12240:	b	120f8 <table_dupe@@Base+0xa0>
   12244:	mov	r2, r4
   12248:	mov	r1, r5
   1224c:	mov	r0, r6
   12250:	bl	134f8 <table_get_int32@@Base>
   12254:	mov	r3, r0
   12258:	mov	r2, r4
   1225c:	mov	r1, r5
   12260:	mov	r0, r8
   12264:	bl	13fc4 <table_set_int32@@Base>
   12268:	b	120f8 <table_dupe@@Base+0xa0>
   1226c:	mov	r2, r4
   12270:	mov	r1, r5
   12274:	mov	r0, r6
   12278:	bl	13508 <table_get_uint32@@Base>
   1227c:	mov	r3, r0
   12280:	mov	r2, r4
   12284:	mov	r1, r5
   12288:	mov	r0, r8
   1228c:	bl	13fec <table_set_uint32@@Base>
   12290:	b	120f8 <table_dupe@@Base+0xa0>
   12294:	mov	r2, r4
   12298:	mov	r1, r5
   1229c:	mov	r0, r6
   122a0:	bl	13518 <table_get_int64@@Base>
   122a4:	strd	r0, [sp]
   122a8:	mov	r2, r4
   122ac:	mov	r1, r5
   122b0:	mov	r0, r8
   122b4:	bl	14014 <table_set_int64@@Base>
   122b8:	b	120f8 <table_dupe@@Base+0xa0>
   122bc:	mov	r2, r4
   122c0:	mov	r1, r5
   122c4:	mov	r0, r6
   122c8:	bl	13528 <table_get_uint64@@Base>
   122cc:	strd	r0, [sp]
   122d0:	mov	r2, r4
   122d4:	mov	r1, r5
   122d8:	mov	r0, r8
   122dc:	bl	14034 <table_set_uint64@@Base>
   122e0:	b	120f8 <table_dupe@@Base+0xa0>
   122e4:	mov	r2, r4
   122e8:	mov	r1, r5
   122ec:	mov	r0, r6
   122f0:	bl	13538 <table_get_short@@Base>
   122f4:	mov	r3, r0
   122f8:	mov	r2, r4
   122fc:	mov	r1, r5
   12300:	mov	r0, r8
   12304:	bl	14054 <table_set_short@@Base>
   12308:	b	120f8 <table_dupe@@Base+0xa0>
   1230c:	mov	r2, r4
   12310:	mov	r1, r5
   12314:	mov	r0, r6
   12318:	bl	13548 <table_get_ushort@@Base>
   1231c:	mov	r3, r0
   12320:	mov	r2, r4
   12324:	mov	r1, r5
   12328:	mov	r0, r8
   1232c:	bl	1407c <table_set_ushort@@Base>
   12330:	b	120f8 <table_dupe@@Base+0xa0>
   12334:	mov	r2, r4
   12338:	mov	r1, r5
   1233c:	mov	r0, r6
   12340:	bl	13558 <table_get_long@@Base>
   12344:	mov	r3, r0
   12348:	mov	r2, r4
   1234c:	mov	r1, r5
   12350:	mov	r0, r8
   12354:	bl	140a4 <table_set_long@@Base>
   12358:	b	120f8 <table_dupe@@Base+0xa0>
   1235c:	mov	r2, r4
   12360:	mov	r1, r5
   12364:	mov	r0, r6
   12368:	bl	13568 <table_get_ulong@@Base>
   1236c:	mov	r3, r0
   12370:	mov	r2, r4
   12374:	mov	r1, r5
   12378:	mov	r0, r8
   1237c:	bl	140cc <table_set_ulong@@Base>
   12380:	b	120f8 <table_dupe@@Base+0xa0>
   12384:	mov	r2, r4
   12388:	mov	r1, r5
   1238c:	mov	r0, r6
   12390:	bl	13578 <table_get_llong@@Base>
   12394:	strd	r0, [sp]
   12398:	mov	r2, r4
   1239c:	mov	r1, r5
   123a0:	mov	r0, r8
   123a4:	bl	140f4 <table_set_llong@@Base>
   123a8:	b	120f8 <table_dupe@@Base+0xa0>
   123ac:	mov	r2, r4
   123b0:	mov	r1, r5
   123b4:	mov	r0, r6
   123b8:	bl	13588 <table_get_ullong@@Base>
   123bc:	strd	r0, [sp]
   123c0:	mov	r2, r4
   123c4:	mov	r1, r5
   123c8:	mov	r0, r8
   123cc:	bl	14114 <table_set_ullong@@Base>
   123d0:	b	120f8 <table_dupe@@Base+0xa0>
   123d4:	mov	r2, r4
   123d8:	mov	r1, r5
   123dc:	mov	r0, r6
   123e0:	bl	135e8 <table_get_string@@Base>
   123e4:	mov	r3, r0
   123e8:	mov	r2, r4
   123ec:	mov	r1, r5
   123f0:	mov	r0, r8
   123f4:	bl	141a0 <table_set_string@@Base>
   123f8:	b	120f8 <table_dupe@@Base+0xa0>
   123fc:	mov	r2, r4
   12400:	mov	r1, r5
   12404:	mov	r0, r6
   12408:	bl	13598 <table_get_float@@Base>
   1240c:	mov	r2, r4
   12410:	mov	r1, r5
   12414:	mov	r0, r8
   12418:	bl	14134 <table_set_float@@Base>
   1241c:	b	120f8 <table_dupe@@Base+0xa0>
   12420:	mov	r2, r4
   12424:	mov	r1, r5
   12428:	mov	r0, r6
   1242c:	bl	135a8 <table_get_double@@Base>
   12430:	mov	r2, r4
   12434:	mov	r1, r5
   12438:	mov	r0, r8
   1243c:	bl	14158 <table_set_double@@Base>
   12440:	b	120f8 <table_dupe@@Base+0xa0>
   12444:	mov	r2, r4
   12448:	mov	r1, r5
   1244c:	mov	r0, r6
   12450:	bl	135b8 <table_get_ldouble@@Base>
   12454:	mov	r2, r4
   12458:	mov	r1, r5
   1245c:	mov	r0, r8
   12460:	bl	1417c <table_set_ldouble@@Base>
   12464:	b	120f8 <table_dupe@@Base+0xa0>
   12468:	mov	r2, r4
   1246c:	mov	r1, r5
   12470:	mov	r0, r6
   12474:	bl	13488 <table_get_bool@@Base>
   12478:	mov	r3, r0
   1247c:	mov	r2, r4
   12480:	mov	r1, r5
   12484:	mov	r0, r8
   12488:	bl	13eac <table_set_bool@@Base>
   1248c:	b	120f8 <table_dupe@@Base+0xa0>
   12490:	mov	r2, r4
   12494:	mov	r1, r5
   12498:	mov	r0, r6
   1249c:	bl	135c8 <table_get_char@@Base>
   124a0:	mov	r3, r0
   124a4:	mov	r2, r4
   124a8:	mov	r1, r5
   124ac:	mov	r0, r8
   124b0:	bl	141bc <table_set_char@@Base>
   124b4:	b	120f8 <table_dupe@@Base+0xa0>
   124b8:	mov	r2, r4
   124bc:	mov	r1, r5
   124c0:	mov	r0, r6
   124c4:	bl	135d8 <table_get_uchar@@Base>
   124c8:	mov	r3, r0
   124cc:	mov	r2, r4
   124d0:	mov	r1, r5
   124d4:	mov	r0, r8
   124d8:	bl	141e4 <table_set_uchar@@Base>
   124dc:	b	120f8 <table_dupe@@Base+0xa0>
   124e0:	mov	r2, r4
   124e4:	mov	r1, r5
   124e8:	mov	r0, r6
   124ec:	bl	135f4 <table_get_ptr@@Base>
   124f0:	str	r0, [sp, #12]
   124f4:	add	r3, sp, #12
   124f8:	mov	r2, r4
   124fc:	mov	r1, r5
   12500:	mov	r0, r8
   12504:	bl	1420c <table_set_ptr@@Base>
   12508:	b	120f8 <table_dupe@@Base+0xa0>
   1250c:	add	r5, r5, #1
   12510:	cmp	r9, r5
   12514:	beq	12530 <table_dupe@@Base+0x4d8>
   12518:	mov	r0, r8
   1251c:	bl	13678 <table_add_row@@Base>
   12520:	cmp	r7, #0
   12524:	ble	1250c <table_dupe@@Base+0x4b4>
   12528:	mov	r4, #0
   1252c:	b	12104 <table_dupe@@Base+0xac>
   12530:	mov	r0, r8
   12534:	add	sp, sp, #20
   12538:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001253c <table_get_major_version@@Base>:
   1253c:	mov	r0, #0
   12540:	bx	lr

00012544 <table_get_minor_version@@Base>:
   12544:	mov	r0, #0
   12548:	bx	lr

0001254c <table_get_patch_version@@Base>:
   1254c:	mov	r0, #0
   12550:	bx	lr

00012554 <table_get_version@@Base>:
   12554:	ldr	r0, [pc]	; 1255c <table_get_version@@Base+0x8>
   12558:	bx	lr
   1255c:	andeq	r5, r1, r0, ror #3

00012560 <table_get_callback_length@@Base>:
   12560:	ldr	r0, [r0, #32]
   12564:	bx	lr

00012568 <table_register_callback@@Base>:
   12568:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1256c:	ldr	r5, [r0, #32]
   12570:	cmp	r5, #0
   12574:	ble	125d0 <table_register_callback@@Base+0x68>
   12578:	ldr	lr, [r0, #36]	; 0x24
   1257c:	sub	lr, lr, #4
   12580:	mov	ip, #0
   12584:	b	12594 <table_register_callback@@Base+0x2c>
   12588:	add	ip, ip, #1
   1258c:	cmp	ip, r5
   12590:	beq	125d0 <table_register_callback@@Base+0x68>
   12594:	lsl	r6, ip, #2
   12598:	ldr	r4, [lr, #4]!
   1259c:	cmp	r1, r4
   125a0:	bne	12588 <table_register_callback@@Base+0x20>
   125a4:	ldr	r4, [r0, #40]	; 0x28
   125a8:	ldr	r4, [r4, ip, lsl #2]
   125ac:	cmp	r2, r4
   125b0:	bne	12588 <table_register_callback@@Base+0x20>
   125b4:	cmp	ip, #0
   125b8:	ble	125d0 <table_register_callback@@Base+0x68>
   125bc:	ldr	r1, [r0, #44]	; 0x2c
   125c0:	ldr	r2, [r1, r6]
   125c4:	orr	r3, r2, r3
   125c8:	str	r3, [r1, r6]
   125cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   125d0:	mov	r7, r3
   125d4:	mov	r4, r2
   125d8:	mov	r9, r1
   125dc:	mov	r6, r0
   125e0:	ldr	r8, [r0, #48]	; 0x30
   125e4:	mov	r1, r8
   125e8:	mov	r0, r5
   125ec:	bl	15050 <table_cell_nullify@@Base+0x218>
   125f0:	cmp	r1, #0
   125f4:	beq	12624 <table_register_callback@@Base+0xbc>
   125f8:	ldr	r3, [r6, #32]
   125fc:	ldr	r2, [r6, #36]	; 0x24
   12600:	str	r9, [r2, r3, lsl #2]
   12604:	ldr	r2, [r6, #40]	; 0x28
   12608:	str	r4, [r2, r3, lsl #2]
   1260c:	ldr	r2, [r6, #44]	; 0x2c
   12610:	str	r7, [r2, r3, lsl #2]
   12614:	ldr	r3, [r6, #32]
   12618:	add	r3, r3, #1
   1261c:	str	r3, [r6, #32]
   12620:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12624:	ldr	r1, [r6, #52]	; 0x34
   12628:	add	r1, r8, r1
   1262c:	str	r1, [r6, #52]	; 0x34
   12630:	lsl	r1, r1, #2
   12634:	ldr	r0, [r6, #36]	; 0x24
   12638:	bl	11bdc <realloc@plt>
   1263c:	str	r0, [r6, #36]	; 0x24
   12640:	ldr	r1, [r6, #52]	; 0x34
   12644:	lsl	r1, r1, #2
   12648:	ldr	r0, [r6, #40]	; 0x28
   1264c:	bl	11bdc <realloc@plt>
   12650:	str	r0, [r6, #40]	; 0x28
   12654:	ldr	r1, [r6, #52]	; 0x34
   12658:	lsl	r1, r1, #2
   1265c:	ldr	r0, [r6, #44]	; 0x2c
   12660:	bl	11bdc <realloc@plt>
   12664:	str	r0, [r6, #44]	; 0x2c
   12668:	b	125f8 <table_register_callback@@Base+0x90>

0001266c <table_unregister_callback@@Base>:
   1266c:	push	{r4, r5, r6, lr}
   12670:	ldr	lr, [r0, #32]
   12674:	cmp	lr, #0
   12678:	pople	{r4, r5, r6, pc}
   1267c:	ldr	r4, [r0, #36]	; 0x24
   12680:	sub	r4, r4, #4
   12684:	mov	r3, #0
   12688:	b	12698 <table_unregister_callback@@Base+0x2c>
   1268c:	add	r3, r3, #1
   12690:	cmp	r3, lr
   12694:	beq	1276c <table_unregister_callback@@Base+0x100>
   12698:	lsl	ip, r3, #2
   1269c:	ldr	r5, [r4, #4]!
   126a0:	cmp	r1, r5
   126a4:	bne	1268c <table_unregister_callback@@Base+0x20>
   126a8:	ldr	r5, [r0, #40]	; 0x28
   126ac:	ldr	r5, [r5, r3, lsl #2]
   126b0:	cmp	r2, r5
   126b4:	bne	1268c <table_unregister_callback@@Base+0x20>
   126b8:	cmn	r3, #1
   126bc:	popeq	{r4, r5, r6, pc}
   126c0:	sub	lr, lr, #1
   126c4:	cmp	lr, r3
   126c8:	ble	1270c <table_unregister_callback@@Base+0xa0>
   126cc:	ldr	r1, [r0, #36]	; 0x24
   126d0:	add	r2, ip, #4
   126d4:	ldr	lr, [r1, r2]
   126d8:	str	lr, [r1, ip]
   126dc:	ldr	r1, [r0, #40]	; 0x28
   126e0:	ldr	lr, [r1, r2]
   126e4:	str	lr, [r1, ip]
   126e8:	ldr	r1, [r0, #44]	; 0x2c
   126ec:	ldr	lr, [r1, r2]
   126f0:	str	lr, [r1, ip]
   126f4:	add	r3, r3, #1
   126f8:	ldr	lr, [r0, #32]
   126fc:	sub	lr, lr, #1
   12700:	mov	ip, r2
   12704:	cmp	lr, r3
   12708:	bgt	126cc <table_unregister_callback@@Base+0x60>
   1270c:	mov	r4, r0
   12710:	str	lr, [r0, #32]
   12714:	ldr	r5, [r0, #48]	; 0x30
   12718:	mov	r1, r5
   1271c:	mov	r0, lr
   12720:	bl	15050 <table_cell_nullify@@Base+0x218>
   12724:	cmp	r1, #0
   12728:	popne	{r4, r5, r6, pc}
   1272c:	ldr	r1, [r4, #52]	; 0x34
   12730:	sub	r1, r1, r5
   12734:	str	r1, [r4, #52]	; 0x34
   12738:	cmp	r1, #0
   1273c:	bne	12770 <table_unregister_callback@@Base+0x104>
   12740:	ldr	r0, [r4, #36]	; 0x24
   12744:	bl	11bc4 <free@plt>
   12748:	ldr	r0, [r4, #40]	; 0x28
   1274c:	bl	11bc4 <free@plt>
   12750:	ldr	r0, [r4, #44]	; 0x2c
   12754:	bl	11bc4 <free@plt>
   12758:	mov	r3, #0
   1275c:	str	r3, [r4, #36]	; 0x24
   12760:	str	r3, [r4, #40]	; 0x28
   12764:	str	r3, [r4, #44]	; 0x2c
   12768:	pop	{r4, r5, r6, pc}
   1276c:	pop	{r4, r5, r6, pc}
   12770:	lsl	r1, r1, #2
   12774:	ldr	r0, [r4, #36]	; 0x24
   12778:	bl	11bdc <realloc@plt>
   1277c:	str	r0, [r4, #36]	; 0x24
   12780:	ldr	r1, [r4, #52]	; 0x34
   12784:	lsl	r1, r1, #2
   12788:	ldr	r0, [r4, #40]	; 0x28
   1278c:	bl	11bdc <realloc@plt>
   12790:	str	r0, [r4, #40]	; 0x28
   12794:	ldr	r1, [r4, #52]	; 0x34
   12798:	lsl	r1, r1, #2
   1279c:	ldr	r0, [r4, #44]	; 0x2c
   127a0:	bl	11bdc <realloc@plt>
   127a4:	str	r0, [r4, #44]	; 0x2c
   127a8:	pop	{r4, r5, r6, pc}

000127ac <table_notify@@Base>:
   127ac:	ldr	ip, [r0, #32]
   127b0:	cmp	ip, #0
   127b4:	bxle	lr
   127b8:	push	{r4, r5, r6, r7, r8, r9, lr}
   127bc:	sub	sp, sp, #12
   127c0:	mov	r6, r3
   127c4:	mov	r8, r2
   127c8:	mov	r7, r1
   127cc:	mov	r5, r0
   127d0:	mov	r4, #0
   127d4:	b	127e8 <table_notify@@Base+0x3c>
   127d8:	add	r4, r4, #1
   127dc:	ldr	r0, [r5, #32]
   127e0:	cmp	r0, r4
   127e4:	ble	12824 <table_notify@@Base+0x78>
   127e8:	ldr	r0, [r5, #44]	; 0x2c
   127ec:	ldr	r0, [r0, r4, lsl #2]
   127f0:	tst	r6, r0
   127f4:	beq	127d8 <table_notify@@Base+0x2c>
   127f8:	ldr	r3, [r5, #36]	; 0x24
   127fc:	ldr	r2, [r5, #40]	; 0x28
   12800:	ldr	r2, [r2, r4, lsl #2]
   12804:	str	r2, [sp]
   12808:	ldr	r9, [r3, r4, lsl #2]
   1280c:	mov	r3, r6
   12810:	mov	r2, r8
   12814:	mov	r1, r7
   12818:	mov	r0, r5
   1281c:	blx	r9
   12820:	b	127d8 <table_notify@@Base+0x2c>
   12824:	add	sp, sp, #12
   12828:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001282c <table_column_init@@Base>:
   1282c:	push	{r4, r5, r6, r7, r8, lr}
   12830:	mov	r7, r2
   12834:	mov	r8, r3
   12838:	add	r1, r1, r1, lsl #1
   1283c:	lsl	r4, r1, #2
   12840:	ldr	r6, [r0]
   12844:	add	r5, r6, r4
   12848:	mov	r0, r2
   1284c:	bl	11c18 <strlen@plt>
   12850:	add	r0, r0, #1
   12854:	bl	11bf4 <malloc@plt>
   12858:	str	r0, [r6, r4]
   1285c:	cmp	r0, #0
   12860:	beq	1286c <table_column_init@@Base+0x40>
   12864:	mov	r1, r7
   12868:	bl	11be8 <strcpy@plt>
   1286c:	str	r8, [r5, #4]
   12870:	ldr	r3, [sp, #24]
   12874:	str	r3, [r5, #8]
   12878:	pop	{r4, r5, r6, r7, r8, pc}

0001287c <table_column_destroy@@Base>:
   1287c:	ldr	r3, [r0]
   12880:	add	r1, r1, r1, lsl #1
   12884:	ldr	r0, [r3, r1, lsl #2]
   12888:	cmp	r0, #0
   1288c:	bxeq	lr
   12890:	push	{r4, lr}
   12894:	bl	11bc4 <free@plt>
   12898:	pop	{r4, pc}

0001289c <table_get_column_length@@Base>:
   1289c:	ldr	r0, [r0, #4]
   128a0:	bx	lr

000128a4 <table_get_column@@Base>:
   128a4:	push	{r4, r5, r6, r7, r8, lr}
   128a8:	ldr	r7, [r0, #4]
   128ac:	cmp	r7, #0
   128b0:	ble	128f0 <table_get_column@@Base+0x4c>
   128b4:	mov	r6, r1
   128b8:	ldr	r8, [r0]
   128bc:	mov	r5, #0
   128c0:	mov	r4, r5
   128c4:	mov	r1, r6
   128c8:	ldr	r0, [r8, r5]
   128cc:	bl	11bac <strcmp@plt>
   128d0:	cmp	r0, #0
   128d4:	beq	128f4 <table_get_column@@Base+0x50>
   128d8:	add	r4, r4, #1
   128dc:	add	r5, r5, #12
   128e0:	cmp	r4, r7
   128e4:	bne	128c4 <table_get_column@@Base+0x20>
   128e8:	mvn	r4, #0
   128ec:	b	128fc <table_get_column@@Base+0x58>
   128f0:	mov	r4, #0
   128f4:	cmp	r7, r4
   128f8:	mvneq	r4, #0
   128fc:	mov	r0, r4
   12900:	pop	{r4, r5, r6, r7, r8, pc}

00012904 <table_get_column_data_type@@Base>:
   12904:	ldr	r3, [r0]
   12908:	add	r1, r1, r1, lsl #1
   1290c:	add	r3, r3, r1, lsl #2
   12910:	ldr	r0, [r3, #4]
   12914:	bx	lr

00012918 <table_add_column@@Base>:
   12918:	push	{r4, r5, r6, r7, r8, r9, lr}
   1291c:	sub	sp, sp, #12
   12920:	mov	r5, r0
   12924:	mov	r9, r1
   12928:	mov	r8, r2
   1292c:	ldr	r4, [r0, #8]
   12930:	mov	r1, r4
   12934:	ldr	r0, [r0, #4]
   12938:	bl	15050 <table_cell_nullify@@Base+0x218>
   1293c:	cmp	r1, #0
   12940:	beq	129c4 <table_add_column@@Base+0xac>
   12944:	mov	r0, r5
   12948:	bl	13670 <table_get_row_length@@Base>
   1294c:	mov	r6, r0
   12950:	ldr	r7, [r5, #4]
   12954:	mov	r0, r8
   12958:	bl	132e4 <table_get_default_compare_function_for_data_type@@Base>
   1295c:	str	r0, [sp]
   12960:	mov	r3, r8
   12964:	mov	r2, r9
   12968:	mov	r1, r7
   1296c:	mov	r0, r5
   12970:	bl	1282c <table_column_init@@Base>
   12974:	cmp	r6, #0
   12978:	ble	1299c <table_add_column@@Base+0x84>
   1297c:	mov	r4, #0
   12980:	mov	r2, r7
   12984:	mov	r1, r4
   12988:	mov	r0, r5
   1298c:	bl	14de0 <table_cell_init@@Base>
   12990:	add	r4, r4, #1
   12994:	cmp	r6, r4
   12998:	bne	12980 <table_add_column@@Base+0x68>
   1299c:	mov	r3, #8
   129a0:	ldr	r2, [r5, #4]
   129a4:	mvn	r1, #0
   129a8:	mov	r0, r5
   129ac:	bl	127ac <table_notify@@Base>
   129b0:	ldr	r0, [r5, #4]
   129b4:	add	r3, r0, #1
   129b8:	str	r3, [r5, #4]
   129bc:	add	sp, sp, #12
   129c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   129c4:	ldr	r1, [r5, #12]
   129c8:	add	r4, r4, r1
   129cc:	str	r4, [r5, #12]
   129d0:	add	r4, r4, r4, lsl #1
   129d4:	lsl	r1, r4, #2
   129d8:	ldr	r0, [r5]
   129dc:	bl	11bdc <realloc@plt>
   129e0:	str	r0, [r5]
   129e4:	mov	r0, r5
   129e8:	bl	13670 <table_get_row_length@@Base>
   129ec:	subs	r7, r0, #0
   129f0:	ble	12944 <table_add_column@@Base+0x2c>
   129f4:	mov	r4, #0
   129f8:	mov	r1, r4
   129fc:	mov	r0, r5
   12a00:	bl	13830 <table_get_row_ptr@@Base>
   12a04:	mov	r6, r0
   12a08:	ldr	r1, [r5, #12]
   12a0c:	lsl	r1, r1, #2
   12a10:	ldr	r0, [r0]
   12a14:	bl	11bdc <realloc@plt>
   12a18:	str	r0, [r6]
   12a1c:	add	r4, r4, #1
   12a20:	cmp	r7, r4
   12a24:	bne	129f8 <table_add_column@@Base+0xe0>
   12a28:	b	12944 <table_add_column@@Base+0x2c>

00012a2c <table_remove_column@@Base>:
   12a2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12a30:	mov	r6, r0
   12a34:	mov	r7, r1
   12a38:	bl	1287c <table_column_destroy@@Base>
   12a3c:	ldr	r4, [r6, #4]
   12a40:	sub	r8, r4, #1
   12a44:	cmp	r7, r8
   12a48:	bge	12a90 <table_remove_column@@Base+0x64>
   12a4c:	add	r3, r7, r7, lsl #1
   12a50:	lsl	r3, r3, #2
   12a54:	mov	r0, r7
   12a58:	ldr	r2, [r6]
   12a5c:	add	ip, r3, #12
   12a60:	add	lr, r2, r3
   12a64:	add	r1, r2, ip
   12a68:	ldr	r9, [r1]
   12a6c:	ldr	r5, [r1, #4]
   12a70:	ldr	r1, [r1, #8]
   12a74:	str	r9, [r2, r3]
   12a78:	str	r5, [lr, #4]
   12a7c:	str	r1, [lr, #8]
   12a80:	add	r0, r0, #1
   12a84:	mov	r3, ip
   12a88:	cmp	r8, r0
   12a8c:	bgt	12a58 <table_remove_column@@Base+0x2c>
   12a90:	mov	r0, r6
   12a94:	bl	13670 <table_get_row_length@@Base>
   12a98:	subs	r9, r0, #0
   12a9c:	ble	12b04 <table_remove_column@@Base+0xd8>
   12aa0:	lsl	sl, r7, #2
   12aa4:	mov	r5, #0
   12aa8:	sub	r4, r4, #1
   12aac:	mov	r2, r7
   12ab0:	mov	r1, r5
   12ab4:	mov	r0, r6
   12ab8:	bl	14df4 <table_cell_destroy@@Base>
   12abc:	mov	r1, r5
   12ac0:	mov	r0, r6
   12ac4:	bl	13830 <table_get_row_ptr@@Base>
   12ac8:	cmp	r7, r8
   12acc:	bge	12af8 <table_remove_column@@Base+0xcc>
   12ad0:	mov	r2, sl
   12ad4:	mov	r3, r7
   12ad8:	ldr	ip, [r0]
   12adc:	add	r1, r2, #4
   12ae0:	ldr	lr, [ip, r1]
   12ae4:	str	lr, [ip, r2]
   12ae8:	add	r3, r3, #1
   12aec:	mov	r2, r1
   12af0:	cmp	r3, r4
   12af4:	bne	12ad8 <table_remove_column@@Base+0xac>
   12af8:	add	r5, r5, #1
   12afc:	cmp	r9, r5
   12b00:	bne	12aac <table_remove_column@@Base+0x80>
   12b04:	ldr	r0, [r6, #4]
   12b08:	sub	r0, r0, #1
   12b0c:	str	r0, [r6, #4]
   12b10:	ldr	r4, [r6, #8]
   12b14:	mov	r1, r4
   12b18:	bl	15050 <table_cell_nullify@@Base+0x218>
   12b1c:	cmp	r1, #0
   12b20:	beq	12b40 <table_remove_column@@Base+0x114>
   12b24:	mov	r3, #16
   12b28:	mov	r2, r7
   12b2c:	mvn	r1, #0
   12b30:	mov	r0, r6
   12b34:	bl	127ac <table_notify@@Base>
   12b38:	mov	r0, #0
   12b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b40:	ldr	r1, [r6, #12]
   12b44:	sub	r1, r1, r4
   12b48:	str	r1, [r6, #12]
   12b4c:	add	r1, r1, r1, lsl #1
   12b50:	lsl	r1, r1, #2
   12b54:	ldr	r0, [r6]
   12b58:	bl	11bdc <realloc@plt>
   12b5c:	str	r0, [r6]
   12b60:	mov	r0, r6
   12b64:	bl	13670 <table_get_row_length@@Base>
   12b68:	subs	r8, r0, #0
   12b6c:	ble	12b24 <table_remove_column@@Base+0xf8>
   12b70:	mov	r4, #0
   12b74:	mov	r1, r4
   12b78:	mov	r0, r6
   12b7c:	bl	13830 <table_get_row_ptr@@Base>
   12b80:	mov	r5, r0
   12b84:	ldr	r1, [r6, #12]
   12b88:	lsl	r1, r1, #2
   12b8c:	ldr	r0, [r0]
   12b90:	bl	11bdc <realloc@plt>
   12b94:	str	r0, [r5]
   12b98:	add	r4, r4, #1
   12b9c:	cmp	r8, r4
   12ba0:	bne	12b74 <table_remove_column@@Base+0x148>
   12ba4:	b	12b24 <table_remove_column@@Base+0xf8>

00012ba8 <table_get_column_name@@Base>:
   12ba8:	ldr	r3, [r0]
   12bac:	add	r1, r1, r1, lsl #1
   12bb0:	ldr	r0, [r3, r1, lsl #2]
   12bb4:	bx	lr

00012bb8 <table_get_col_ptr@@Base>:
   12bb8:	add	r1, r1, r1, lsl #1
   12bbc:	ldr	r0, [r0]
   12bc0:	add	r0, r0, r1, lsl #2
   12bc4:	bx	lr

00012bc8 <table_get_column_compare_function@@Base>:
   12bc8:	ldr	r3, [r0]
   12bcc:	add	r1, r1, r1, lsl #1
   12bd0:	add	r3, r3, r1, lsl #2
   12bd4:	ldr	r0, [r3, #8]
   12bd8:	bx	lr

00012bdc <table_set_column_compare_function@@Base>:
   12bdc:	ldr	r3, [r0]
   12be0:	add	r1, r1, r1, lsl #1
   12be4:	add	r3, r3, r1, lsl #2
   12be8:	str	r2, [r3, #8]
   12bec:	bx	lr

00012bf0 <table_compare_bool@@Base>:
   12bf0:	cmp	r0, #0
   12bf4:	beq	12c20 <table_compare_bool@@Base+0x30>
   12bf8:	cmp	r1, #0
   12bfc:	beq	12c2c <table_compare_bool@@Base+0x3c>
   12c00:	ldrb	r0, [r0]
   12c04:	ldrb	r1, [r1]
   12c08:	cmp	r0, r1
   12c0c:	bgt	12c34 <table_compare_bool@@Base+0x44>
   12c10:	cmp	r0, r1
   12c14:	movge	r0, #0
   12c18:	mvnlt	r0, #0
   12c1c:	bx	lr
   12c20:	adds	r0, r1, #0
   12c24:	mvnne	r0, #0
   12c28:	bx	lr
   12c2c:	mov	r0, #1
   12c30:	bx	lr
   12c34:	mov	r0, #1
   12c38:	bx	lr

00012c3c <table_compare_int@@Base>:
   12c3c:	cmp	r0, #0
   12c40:	beq	12c6c <table_compare_int@@Base+0x30>
   12c44:	cmp	r1, #0
   12c48:	beq	12c78 <table_compare_int@@Base+0x3c>
   12c4c:	ldr	r0, [r0]
   12c50:	ldr	r1, [r1]
   12c54:	cmp	r0, r1
   12c58:	bgt	12c80 <table_compare_int@@Base+0x44>
   12c5c:	cmp	r0, r1
   12c60:	movge	r0, #0
   12c64:	mvnlt	r0, #0
   12c68:	bx	lr
   12c6c:	adds	r0, r1, #0
   12c70:	mvnne	r0, #0
   12c74:	bx	lr
   12c78:	mov	r0, #1
   12c7c:	bx	lr
   12c80:	mov	r0, #1
   12c84:	bx	lr

00012c88 <table_compare_uint@@Base>:
   12c88:	cmp	r0, #0
   12c8c:	beq	12cb8 <table_compare_uint@@Base+0x30>
   12c90:	cmp	r1, #0
   12c94:	beq	12cc4 <table_compare_uint@@Base+0x3c>
   12c98:	ldr	r0, [r0]
   12c9c:	ldr	r1, [r1]
   12ca0:	cmp	r0, r1
   12ca4:	bhi	12ccc <table_compare_uint@@Base+0x44>
   12ca8:	cmp	r0, r1
   12cac:	movcs	r0, #0
   12cb0:	mvncc	r0, #0
   12cb4:	bx	lr
   12cb8:	adds	r0, r1, #0
   12cbc:	mvnne	r0, #0
   12cc0:	bx	lr
   12cc4:	mov	r0, #1
   12cc8:	bx	lr
   12ccc:	mov	r0, #1
   12cd0:	bx	lr

00012cd4 <table_compare_int8@@Base>:
   12cd4:	cmp	r0, #0
   12cd8:	beq	12d04 <table_compare_int8@@Base+0x30>
   12cdc:	cmp	r1, #0
   12ce0:	beq	12d10 <table_compare_int8@@Base+0x3c>
   12ce4:	ldrsb	r0, [r0]
   12ce8:	ldrsb	r1, [r1]
   12cec:	cmp	r0, r1
   12cf0:	bgt	12d18 <table_compare_int8@@Base+0x44>
   12cf4:	cmp	r0, r1
   12cf8:	movge	r0, #0
   12cfc:	mvnlt	r0, #0
   12d00:	bx	lr
   12d04:	adds	r0, r1, #0
   12d08:	mvnne	r0, #0
   12d0c:	bx	lr
   12d10:	mov	r0, #1
   12d14:	bx	lr
   12d18:	mov	r0, #1
   12d1c:	bx	lr

00012d20 <table_compare_uint8@@Base>:
   12d20:	cmp	r0, #0
   12d24:	beq	12d50 <table_compare_uint8@@Base+0x30>
   12d28:	cmp	r1, #0
   12d2c:	beq	12d5c <table_compare_uint8@@Base+0x3c>
   12d30:	ldrb	r0, [r0]
   12d34:	ldrb	r1, [r1]
   12d38:	cmp	r0, r1
   12d3c:	bhi	12d64 <table_compare_uint8@@Base+0x44>
   12d40:	cmp	r0, r1
   12d44:	movcs	r0, #0
   12d48:	mvncc	r0, #0
   12d4c:	bx	lr
   12d50:	adds	r0, r1, #0
   12d54:	mvnne	r0, #0
   12d58:	bx	lr
   12d5c:	mov	r0, #1
   12d60:	bx	lr
   12d64:	mov	r0, #1
   12d68:	bx	lr

00012d6c <table_compare_int16@@Base>:
   12d6c:	cmp	r0, #0
   12d70:	beq	12d9c <table_compare_int16@@Base+0x30>
   12d74:	cmp	r1, #0
   12d78:	beq	12da8 <table_compare_int16@@Base+0x3c>
   12d7c:	ldrsh	r0, [r0]
   12d80:	ldrsh	r1, [r1]
   12d84:	cmp	r0, r1
   12d88:	bgt	12db0 <table_compare_int16@@Base+0x44>
   12d8c:	cmp	r0, r1
   12d90:	movge	r0, #0
   12d94:	mvnlt	r0, #0
   12d98:	bx	lr
   12d9c:	adds	r0, r1, #0
   12da0:	mvnne	r0, #0
   12da4:	bx	lr
   12da8:	mov	r0, #1
   12dac:	bx	lr
   12db0:	mov	r0, #1
   12db4:	bx	lr

00012db8 <table_compare_uint16@@Base>:
   12db8:	cmp	r0, #0
   12dbc:	beq	12de8 <table_compare_uint16@@Base+0x30>
   12dc0:	cmp	r1, #0
   12dc4:	beq	12df4 <table_compare_uint16@@Base+0x3c>
   12dc8:	ldrh	r0, [r0]
   12dcc:	ldrh	r1, [r1]
   12dd0:	cmp	r0, r1
   12dd4:	bhi	12dfc <table_compare_uint16@@Base+0x44>
   12dd8:	cmp	r0, r1
   12ddc:	movcs	r0, #0
   12de0:	mvncc	r0, #0
   12de4:	bx	lr
   12de8:	adds	r0, r1, #0
   12dec:	mvnne	r0, #0
   12df0:	bx	lr
   12df4:	mov	r0, #1
   12df8:	bx	lr
   12dfc:	mov	r0, #1
   12e00:	bx	lr

00012e04 <table_compare_int32@@Base>:
   12e04:	cmp	r0, #0
   12e08:	beq	12e34 <table_compare_int32@@Base+0x30>
   12e0c:	cmp	r1, #0
   12e10:	beq	12e40 <table_compare_int32@@Base+0x3c>
   12e14:	ldr	r0, [r0]
   12e18:	ldr	r1, [r1]
   12e1c:	cmp	r0, r1
   12e20:	bgt	12e48 <table_compare_int32@@Base+0x44>
   12e24:	cmp	r0, r1
   12e28:	movge	r0, #0
   12e2c:	mvnlt	r0, #0
   12e30:	bx	lr
   12e34:	adds	r0, r1, #0
   12e38:	mvnne	r0, #0
   12e3c:	bx	lr
   12e40:	mov	r0, #1
   12e44:	bx	lr
   12e48:	mov	r0, #1
   12e4c:	bx	lr

00012e50 <table_compare_uint32@@Base>:
   12e50:	cmp	r0, #0
   12e54:	beq	12e80 <table_compare_uint32@@Base+0x30>
   12e58:	cmp	r1, #0
   12e5c:	beq	12e8c <table_compare_uint32@@Base+0x3c>
   12e60:	ldr	r0, [r0]
   12e64:	ldr	r1, [r1]
   12e68:	cmp	r0, r1
   12e6c:	bhi	12e94 <table_compare_uint32@@Base+0x44>
   12e70:	cmp	r0, r1
   12e74:	movcs	r0, #0
   12e78:	mvncc	r0, #0
   12e7c:	bx	lr
   12e80:	adds	r0, r1, #0
   12e84:	mvnne	r0, #0
   12e88:	bx	lr
   12e8c:	mov	r0, #1
   12e90:	bx	lr
   12e94:	mov	r0, #1
   12e98:	bx	lr

00012e9c <table_compare_int64@@Base>:
   12e9c:	cmp	r0, #0
   12ea0:	beq	12ee0 <table_compare_int64@@Base+0x44>
   12ea4:	cmp	r1, #0
   12ea8:	beq	12eec <table_compare_int64@@Base+0x50>
   12eac:	push	{r4, r5}
   12eb0:	ldrd	r4, [r0]
   12eb4:	ldrd	r2, [r1]
   12eb8:	cmp	r2, r4
   12ebc:	sbcs	r1, r3, r5
   12ec0:	movlt	r0, #1
   12ec4:	blt	12ed8 <table_compare_int64@@Base+0x3c>
   12ec8:	cmp	r4, r2
   12ecc:	sbcs	r3, r5, r3
   12ed0:	mvnlt	r0, #0
   12ed4:	movge	r0, #0
   12ed8:	pop	{r4, r5}
   12edc:	bx	lr
   12ee0:	adds	r0, r1, #0
   12ee4:	mvnne	r0, #0
   12ee8:	bx	lr
   12eec:	mov	r0, #1
   12ef0:	bx	lr

00012ef4 <table_compare_uint64@@Base>:
   12ef4:	cmp	r0, #0
   12ef8:	beq	12f30 <table_compare_uint64@@Base+0x3c>
   12efc:	cmp	r1, #0
   12f00:	beq	12f3c <table_compare_uint64@@Base+0x48>
   12f04:	push	{r4, r5}
   12f08:	ldrd	r4, [r0]
   12f0c:	ldrd	r2, [r1]
   12f10:	cmp	r5, r3
   12f14:	cmpeq	r4, r2
   12f18:	movhi	r0, #1
   12f1c:	bhi	12f28 <table_compare_uint64@@Base+0x34>
   12f20:	mvncc	r0, #0
   12f24:	movcs	r0, #0
   12f28:	pop	{r4, r5}
   12f2c:	bx	lr
   12f30:	adds	r0, r1, #0
   12f34:	mvnne	r0, #0
   12f38:	bx	lr
   12f3c:	mov	r0, #1
   12f40:	bx	lr

00012f44 <table_compare_short@@Base>:
   12f44:	cmp	r0, #0
   12f48:	beq	12f74 <table_compare_short@@Base+0x30>
   12f4c:	cmp	r1, #0
   12f50:	beq	12f80 <table_compare_short@@Base+0x3c>
   12f54:	ldrsh	r0, [r0]
   12f58:	ldrsh	r1, [r1]
   12f5c:	cmp	r0, r1
   12f60:	bgt	12f88 <table_compare_short@@Base+0x44>
   12f64:	cmp	r0, r1
   12f68:	movge	r0, #0
   12f6c:	mvnlt	r0, #0
   12f70:	bx	lr
   12f74:	adds	r0, r1, #0
   12f78:	mvnne	r0, #0
   12f7c:	bx	lr
   12f80:	mov	r0, #1
   12f84:	bx	lr
   12f88:	mov	r0, #1
   12f8c:	bx	lr

00012f90 <table_compare_ushort@@Base>:
   12f90:	cmp	r0, #0
   12f94:	beq	12fc0 <table_compare_ushort@@Base+0x30>
   12f98:	cmp	r1, #0
   12f9c:	beq	12fcc <table_compare_ushort@@Base+0x3c>
   12fa0:	ldrh	r0, [r0]
   12fa4:	ldrh	r1, [r1]
   12fa8:	cmp	r0, r1
   12fac:	bhi	12fd4 <table_compare_ushort@@Base+0x44>
   12fb0:	cmp	r0, r1
   12fb4:	movcs	r0, #0
   12fb8:	mvncc	r0, #0
   12fbc:	bx	lr
   12fc0:	adds	r0, r1, #0
   12fc4:	mvnne	r0, #0
   12fc8:	bx	lr
   12fcc:	mov	r0, #1
   12fd0:	bx	lr
   12fd4:	mov	r0, #1
   12fd8:	bx	lr

00012fdc <table_compare_long@@Base>:
   12fdc:	cmp	r0, #0
   12fe0:	beq	1300c <table_compare_long@@Base+0x30>
   12fe4:	cmp	r1, #0
   12fe8:	beq	13018 <table_compare_long@@Base+0x3c>
   12fec:	ldr	r0, [r0]
   12ff0:	ldr	r1, [r1]
   12ff4:	cmp	r0, r1
   12ff8:	bgt	13020 <table_compare_long@@Base+0x44>
   12ffc:	cmp	r0, r1
   13000:	movge	r0, #0
   13004:	mvnlt	r0, #0
   13008:	bx	lr
   1300c:	adds	r0, r1, #0
   13010:	mvnne	r0, #0
   13014:	bx	lr
   13018:	mov	r0, #1
   1301c:	bx	lr
   13020:	mov	r0, #1
   13024:	bx	lr

00013028 <table_compare_ulong@@Base>:
   13028:	cmp	r0, #0
   1302c:	beq	13058 <table_compare_ulong@@Base+0x30>
   13030:	cmp	r1, #0
   13034:	beq	13064 <table_compare_ulong@@Base+0x3c>
   13038:	ldr	r0, [r0]
   1303c:	ldr	r1, [r1]
   13040:	cmp	r0, r1
   13044:	bhi	1306c <table_compare_ulong@@Base+0x44>
   13048:	cmp	r0, r1
   1304c:	movcs	r0, #0
   13050:	mvncc	r0, #0
   13054:	bx	lr
   13058:	adds	r0, r1, #0
   1305c:	mvnne	r0, #0
   13060:	bx	lr
   13064:	mov	r0, #1
   13068:	bx	lr
   1306c:	mov	r0, #1
   13070:	bx	lr

00013074 <table_compare_llong@@Base>:
   13074:	cmp	r0, #0
   13078:	beq	130b8 <table_compare_llong@@Base+0x44>
   1307c:	cmp	r1, #0
   13080:	beq	130c4 <table_compare_llong@@Base+0x50>
   13084:	push	{r4, r5}
   13088:	ldrd	r4, [r0]
   1308c:	ldrd	r2, [r1]
   13090:	cmp	r2, r4
   13094:	sbcs	r1, r3, r5
   13098:	movlt	r0, #1
   1309c:	blt	130b0 <table_compare_llong@@Base+0x3c>
   130a0:	cmp	r4, r2
   130a4:	sbcs	r3, r5, r3
   130a8:	mvnlt	r0, #0
   130ac:	movge	r0, #0
   130b0:	pop	{r4, r5}
   130b4:	bx	lr
   130b8:	adds	r0, r1, #0
   130bc:	mvnne	r0, #0
   130c0:	bx	lr
   130c4:	mov	r0, #1
   130c8:	bx	lr

000130cc <table_compare_ullong@@Base>:
   130cc:	cmp	r0, #0
   130d0:	beq	130fc <table_compare_ullong@@Base+0x30>
   130d4:	cmp	r1, #0
   130d8:	beq	13108 <table_compare_ullong@@Base+0x3c>
   130dc:	ldr	r0, [r0]
   130e0:	ldr	r1, [r1]
   130e4:	cmp	r0, r1
   130e8:	bhi	13110 <table_compare_ullong@@Base+0x44>
   130ec:	cmp	r0, r1
   130f0:	movcs	r0, #0
   130f4:	mvncc	r0, #0
   130f8:	bx	lr
   130fc:	adds	r0, r1, #0
   13100:	mvnne	r0, #0
   13104:	bx	lr
   13108:	mov	r0, #1
   1310c:	bx	lr
   13110:	mov	r0, #1
   13114:	bx	lr

00013118 <table_compare_float@@Base>:
   13118:	cmp	r0, #0
   1311c:	beq	13148 <table_compare_float@@Base+0x30>
   13120:	cmp	r1, #0
   13124:	beq	13154 <table_compare_float@@Base+0x3c>
   13128:	vldr	s14, [r0]
   1312c:	vldr	s15, [r1]
   13130:	vcmpe.f32	s14, s15
   13134:	vmrs	APSR_nzcv, fpscr
   13138:	bgt	1315c <table_compare_float@@Base+0x44>
   1313c:	mvnmi	r0, #0
   13140:	movpl	r0, #0
   13144:	bx	lr
   13148:	adds	r0, r1, #0
   1314c:	mvnne	r0, #0
   13150:	bx	lr
   13154:	mov	r0, #1
   13158:	bx	lr
   1315c:	mov	r0, #1
   13160:	bx	lr

00013164 <table_compare_double@@Base>:
   13164:	cmp	r0, #0
   13168:	beq	13194 <table_compare_double@@Base+0x30>
   1316c:	cmp	r1, #0
   13170:	beq	131a0 <table_compare_double@@Base+0x3c>
   13174:	vldr	d6, [r0]
   13178:	vldr	d7, [r1]
   1317c:	vcmpe.f64	d6, d7
   13180:	vmrs	APSR_nzcv, fpscr
   13184:	bgt	131a8 <table_compare_double@@Base+0x44>
   13188:	mvnmi	r0, #0
   1318c:	movpl	r0, #0
   13190:	bx	lr
   13194:	adds	r0, r1, #0
   13198:	mvnne	r0, #0
   1319c:	bx	lr
   131a0:	mov	r0, #1
   131a4:	bx	lr
   131a8:	mov	r0, #1
   131ac:	bx	lr

000131b0 <table_compare_ldouble@@Base>:
   131b0:	cmp	r0, #0
   131b4:	beq	131e0 <table_compare_ldouble@@Base+0x30>
   131b8:	cmp	r1, #0
   131bc:	beq	131ec <table_compare_ldouble@@Base+0x3c>
   131c0:	vldr	d6, [r0]
   131c4:	vldr	d7, [r1]
   131c8:	vcmpe.f64	d6, d7
   131cc:	vmrs	APSR_nzcv, fpscr
   131d0:	bgt	131f4 <table_compare_ldouble@@Base+0x44>
   131d4:	mvnmi	r0, #0
   131d8:	movpl	r0, #0
   131dc:	bx	lr
   131e0:	adds	r0, r1, #0
   131e4:	mvnne	r0, #0
   131e8:	bx	lr
   131ec:	mov	r0, #1
   131f0:	bx	lr
   131f4:	mov	r0, #1
   131f8:	bx	lr

000131fc <table_compare_char@@Base>:
   131fc:	cmp	r0, #0
   13200:	beq	1322c <table_compare_char@@Base+0x30>
   13204:	cmp	r1, #0
   13208:	beq	13238 <table_compare_char@@Base+0x3c>
   1320c:	ldrb	r0, [r0]
   13210:	ldrb	r1, [r1]
   13214:	cmp	r0, r1
   13218:	bhi	13240 <table_compare_char@@Base+0x44>
   1321c:	cmp	r0, r1
   13220:	movcs	r0, #0
   13224:	mvncc	r0, #0
   13228:	bx	lr
   1322c:	adds	r0, r1, #0
   13230:	mvnne	r0, #0
   13234:	bx	lr
   13238:	mov	r0, #1
   1323c:	bx	lr
   13240:	mov	r0, #1
   13244:	bx	lr

00013248 <table_compare_uchar@@Base>:
   13248:	cmp	r0, #0
   1324c:	beq	13278 <table_compare_uchar@@Base+0x30>
   13250:	cmp	r1, #0
   13254:	beq	13284 <table_compare_uchar@@Base+0x3c>
   13258:	ldrb	r0, [r0]
   1325c:	ldrb	r1, [r1]
   13260:	cmp	r0, r1
   13264:	bhi	1328c <table_compare_uchar@@Base+0x44>
   13268:	cmp	r0, r1
   1326c:	movcs	r0, #0
   13270:	mvncc	r0, #0
   13274:	bx	lr
   13278:	adds	r0, r1, #0
   1327c:	mvnne	r0, #0
   13280:	bx	lr
   13284:	mov	r0, #1
   13288:	bx	lr
   1328c:	mov	r0, #1
   13290:	bx	lr

00013294 <table_compare_ptr@@Base>:
   13294:	cmp	r0, r1
   13298:	bhi	132ac <table_compare_ptr@@Base+0x18>
   1329c:	cmp	r0, r1
   132a0:	movcs	r0, #0
   132a4:	mvncc	r0, #0
   132a8:	bx	lr
   132ac:	mov	r0, #1
   132b0:	bx	lr

000132b4 <table_compare_string@@Base>:
   132b4:	cmp	r0, #0
   132b8:	beq	132d0 <table_compare_string@@Base+0x1c>
   132bc:	cmp	r1, #0
   132c0:	beq	132dc <table_compare_string@@Base+0x28>
   132c4:	push	{r4, lr}
   132c8:	bl	11bac <strcmp@plt>
   132cc:	pop	{r4, pc}
   132d0:	adds	r0, r1, #0
   132d4:	mvnne	r0, #0
   132d8:	bx	lr
   132dc:	mov	r0, #1
   132e0:	bx	lr

000132e4 <table_get_default_compare_function_for_data_type@@Base>:
   132e4:	cmp	r0, #23
   132e8:	ldrls	pc, [pc, r0, lsl #2]
   132ec:	b	13410 <table_get_default_compare_function_for_data_type@@Base+0x12c>
   132f0:	andeq	r3, r1, r0, asr r3
   132f4:	andeq	r3, r1, r8, asr r3
   132f8:	andeq	r3, r1, r0, ror #6
   132fc:	andeq	r3, r1, r8, ror #6
   13300:	andeq	r3, r1, r0, ror r3
   13304:	andeq	r3, r1, r8, ror r3
   13308:	andeq	r3, r1, r0, lsl #7
   1330c:	andeq	r3, r1, r8, lsl #7
   13310:	muleq	r1, r0, r3
   13314:	muleq	r1, r8, r3
   13318:	andeq	r3, r1, r0, lsr #7
   1331c:	andeq	r3, r1, r8, lsr #7
   13320:			; <UNDEFINED> instruction: 0x000133b0
   13324:			; <UNDEFINED> instruction: 0x000133b8
   13328:	andeq	r3, r1, r0, asr #7
   1332c:	andeq	r3, r1, r8, asr #7
   13330:	ldrdeq	r3, [r1], -r8
   13334:	andeq	r3, r1, r0, ror #7
   13338:	andeq	r3, r1, r8, ror #7
   1333c:	strdeq	r3, [r1], -r8
   13340:	andeq	r3, r1, r0, lsl #8
   13344:	ldrdeq	r3, [r1], -r0
   13348:	strdeq	r3, [r1], -r0
   1334c:	andeq	r3, r1, r8, lsl #8
   13350:	ldr	r0, [pc, #192]	; 13418 <table_get_default_compare_function_for_data_type@@Base+0x134>
   13354:	bx	lr
   13358:	ldr	r0, [pc, #188]	; 1341c <table_get_default_compare_function_for_data_type@@Base+0x138>
   1335c:	bx	lr
   13360:	ldr	r0, [pc, #184]	; 13420 <table_get_default_compare_function_for_data_type@@Base+0x13c>
   13364:	bx	lr
   13368:	ldr	r0, [pc, #180]	; 13424 <table_get_default_compare_function_for_data_type@@Base+0x140>
   1336c:	bx	lr
   13370:	ldr	r0, [pc, #176]	; 13428 <table_get_default_compare_function_for_data_type@@Base+0x144>
   13374:	bx	lr
   13378:	ldr	r0, [pc, #172]	; 1342c <table_get_default_compare_function_for_data_type@@Base+0x148>
   1337c:	bx	lr
   13380:	ldr	r0, [pc, #168]	; 13430 <table_get_default_compare_function_for_data_type@@Base+0x14c>
   13384:	bx	lr
   13388:	ldr	r0, [pc, #164]	; 13434 <table_get_default_compare_function_for_data_type@@Base+0x150>
   1338c:	bx	lr
   13390:	ldr	r0, [pc, #160]	; 13438 <table_get_default_compare_function_for_data_type@@Base+0x154>
   13394:	bx	lr
   13398:	ldr	r0, [pc, #156]	; 1343c <table_get_default_compare_function_for_data_type@@Base+0x158>
   1339c:	bx	lr
   133a0:	ldr	r0, [pc, #152]	; 13440 <table_get_default_compare_function_for_data_type@@Base+0x15c>
   133a4:	bx	lr
   133a8:	ldr	r0, [pc, #148]	; 13444 <table_get_default_compare_function_for_data_type@@Base+0x160>
   133ac:	bx	lr
   133b0:	ldr	r0, [pc, #144]	; 13448 <table_get_default_compare_function_for_data_type@@Base+0x164>
   133b4:	bx	lr
   133b8:	ldr	r0, [pc, #140]	; 1344c <table_get_default_compare_function_for_data_type@@Base+0x168>
   133bc:	bx	lr
   133c0:	ldr	r0, [pc, #136]	; 13450 <table_get_default_compare_function_for_data_type@@Base+0x16c>
   133c4:	bx	lr
   133c8:	ldr	r0, [pc, #132]	; 13454 <table_get_default_compare_function_for_data_type@@Base+0x170>
   133cc:	bx	lr
   133d0:	ldr	r0, [pc, #128]	; 13458 <table_get_default_compare_function_for_data_type@@Base+0x174>
   133d4:	bx	lr
   133d8:	ldr	r0, [pc, #124]	; 1345c <table_get_default_compare_function_for_data_type@@Base+0x178>
   133dc:	bx	lr
   133e0:	ldr	r0, [pc, #120]	; 13460 <table_get_default_compare_function_for_data_type@@Base+0x17c>
   133e4:	bx	lr
   133e8:	ldr	r0, [pc, #116]	; 13464 <table_get_default_compare_function_for_data_type@@Base+0x180>
   133ec:	bx	lr
   133f0:	ldr	r0, [pc, #112]	; 13468 <table_get_default_compare_function_for_data_type@@Base+0x184>
   133f4:	bx	lr
   133f8:	ldr	r0, [pc, #108]	; 1346c <table_get_default_compare_function_for_data_type@@Base+0x188>
   133fc:	bx	lr
   13400:	ldr	r0, [pc, #104]	; 13470 <table_get_default_compare_function_for_data_type@@Base+0x18c>
   13404:	bx	lr
   13408:	ldr	r0, [pc, #100]	; 13474 <table_get_default_compare_function_for_data_type@@Base+0x190>
   1340c:	bx	lr
   13410:	mov	r0, #0
   13414:	bx	lr
   13418:	andeq	r2, r1, ip, lsr ip
   1341c:	andeq	r2, r1, r8, lsl #25
   13420:	ldrdeq	r2, [r1], -r4
   13424:	andeq	r2, r1, r0, lsr #26
   13428:	andeq	r2, r1, ip, ror #26
   1342c:			; <UNDEFINED> instruction: 0x00012db8
   13430:	andeq	r2, r1, r4, lsl #28
   13434:	andeq	r2, r1, r0, asr lr
   13438:	muleq	r1, ip, lr
   1343c:	strdeq	r2, [r1], -r4
   13440:	andeq	r2, r1, r4, asr #30
   13444:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13448:	ldrdeq	r2, [r1], -ip
   1344c:	andeq	r3, r1, r8, lsr #32
   13450:	andeq	r3, r1, r4, ror r0
   13454:	andeq	r3, r1, ip, asr #1
   13458:			; <UNDEFINED> instruction: 0x000132b4
   1345c:	andeq	r3, r1, r8, lsl r1
   13460:	andeq	r3, r1, r4, ror #2
   13464:			; <UNDEFINED> instruction: 0x000131b0
   13468:	strdeq	r2, [r1], -r0
   1346c:	strdeq	r3, [r1], -ip
   13470:	andeq	r3, r1, r8, asr #4
   13474:	muleq	r1, r4, r2

00013478 <table_get@@Base>:
   13478:	push	{r4, lr}
   1347c:	bl	14dc8 <table_get_cell_ptr@@Base>
   13480:	ldr	r0, [r0]
   13484:	pop	{r4, pc}

00013488 <table_get_bool@@Base>:
   13488:	push	{r4, lr}
   1348c:	bl	13478 <table_get@@Base>
   13490:	ldrb	r0, [r0]
   13494:	pop	{r4, pc}

00013498 <table_get_int@@Base>:
   13498:	push	{r4, lr}
   1349c:	bl	13478 <table_get@@Base>
   134a0:	ldr	r0, [r0]
   134a4:	pop	{r4, pc}

000134a8 <table_get_uint@@Base>:
   134a8:	push	{r4, lr}
   134ac:	bl	13478 <table_get@@Base>
   134b0:	ldr	r0, [r0]
   134b4:	pop	{r4, pc}

000134b8 <table_get_int8@@Base>:
   134b8:	push	{r4, lr}
   134bc:	bl	13478 <table_get@@Base>
   134c0:	ldrsb	r0, [r0]
   134c4:	pop	{r4, pc}

000134c8 <table_get_uint8@@Base>:
   134c8:	push	{r4, lr}
   134cc:	bl	13478 <table_get@@Base>
   134d0:	ldrb	r0, [r0]
   134d4:	pop	{r4, pc}

000134d8 <table_get_int16@@Base>:
   134d8:	push	{r4, lr}
   134dc:	bl	13478 <table_get@@Base>
   134e0:	ldrsh	r0, [r0]
   134e4:	pop	{r4, pc}

000134e8 <table_get_uint16@@Base>:
   134e8:	push	{r4, lr}
   134ec:	bl	13478 <table_get@@Base>
   134f0:	ldrh	r0, [r0]
   134f4:	pop	{r4, pc}

000134f8 <table_get_int32@@Base>:
   134f8:	push	{r4, lr}
   134fc:	bl	13478 <table_get@@Base>
   13500:	ldr	r0, [r0]
   13504:	pop	{r4, pc}

00013508 <table_get_uint32@@Base>:
   13508:	push	{r4, lr}
   1350c:	bl	13478 <table_get@@Base>
   13510:	ldr	r0, [r0]
   13514:	pop	{r4, pc}

00013518 <table_get_int64@@Base>:
   13518:	push	{r4, lr}
   1351c:	bl	13478 <table_get@@Base>
   13520:	ldrd	r0, [r0]
   13524:	pop	{r4, pc}

00013528 <table_get_uint64@@Base>:
   13528:	push	{r4, lr}
   1352c:	bl	13478 <table_get@@Base>
   13530:	ldrd	r0, [r0]
   13534:	pop	{r4, pc}

00013538 <table_get_short@@Base>:
   13538:	push	{r4, lr}
   1353c:	bl	13478 <table_get@@Base>
   13540:	ldrsh	r0, [r0]
   13544:	pop	{r4, pc}

00013548 <table_get_ushort@@Base>:
   13548:	push	{r4, lr}
   1354c:	bl	13478 <table_get@@Base>
   13550:	ldrh	r0, [r0]
   13554:	pop	{r4, pc}

00013558 <table_get_long@@Base>:
   13558:	push	{r4, lr}
   1355c:	bl	13478 <table_get@@Base>
   13560:	ldr	r0, [r0]
   13564:	pop	{r4, pc}

00013568 <table_get_ulong@@Base>:
   13568:	push	{r4, lr}
   1356c:	bl	13478 <table_get@@Base>
   13570:	ldr	r0, [r0]
   13574:	pop	{r4, pc}

00013578 <table_get_llong@@Base>:
   13578:	push	{r4, lr}
   1357c:	bl	13478 <table_get@@Base>
   13580:	ldrd	r0, [r0]
   13584:	pop	{r4, pc}

00013588 <table_get_ullong@@Base>:
   13588:	push	{r4, lr}
   1358c:	bl	13478 <table_get@@Base>
   13590:	ldrd	r0, [r0]
   13594:	pop	{r4, pc}

00013598 <table_get_float@@Base>:
   13598:	push	{r4, lr}
   1359c:	bl	13478 <table_get@@Base>
   135a0:	vldr	s0, [r0]
   135a4:	pop	{r4, pc}

000135a8 <table_get_double@@Base>:
   135a8:	push	{r4, lr}
   135ac:	bl	13478 <table_get@@Base>
   135b0:	vldr	d0, [r0]
   135b4:	pop	{r4, pc}

000135b8 <table_get_ldouble@@Base>:
   135b8:	push	{r4, lr}
   135bc:	bl	13478 <table_get@@Base>
   135c0:	vldr	d0, [r0]
   135c4:	pop	{r4, pc}

000135c8 <table_get_char@@Base>:
   135c8:	push	{r4, lr}
   135cc:	bl	13478 <table_get@@Base>
   135d0:	ldrb	r0, [r0]
   135d4:	pop	{r4, pc}

000135d8 <table_get_uchar@@Base>:
   135d8:	push	{r4, lr}
   135dc:	bl	13478 <table_get@@Base>
   135e0:	ldrb	r0, [r0]
   135e4:	pop	{r4, pc}

000135e8 <table_get_string@@Base>:
   135e8:	push	{r4, lr}
   135ec:	bl	13478 <table_get@@Base>
   135f0:	pop	{r4, pc}

000135f4 <table_get_ptr@@Base>:
   135f4:	push	{r4, lr}
   135f8:	bl	13478 <table_get@@Base>
   135fc:	pop	{r4, pc}

00013600 <table_row_init@@Base>:
   13600:	push	{r4, r5, r6, lr}
   13604:	mov	r5, r1
   13608:	ldr	r4, [r0, #16]
   1360c:	ldr	r0, [r0, #12]
   13610:	lsl	r0, r0, #2
   13614:	bl	11bf4 <malloc@plt>
   13618:	str	r0, [r4, r5, lsl #2]
   1361c:	pop	{r4, r5, r6, pc}

00013620 <table_row_destroy@@Base>:
   13620:	push	{r4, r5, r6, r7, r8, lr}
   13624:	mov	r6, r0
   13628:	mov	r5, r1
   1362c:	bl	1289c <table_get_column_length@@Base>
   13630:	ldr	r8, [r6, #16]
   13634:	subs	r7, r0, #0
   13638:	ble	1365c <table_row_destroy@@Base+0x3c>
   1363c:	mov	r4, #0
   13640:	mov	r2, r4
   13644:	mov	r1, r5
   13648:	mov	r0, r6
   1364c:	bl	14df4 <table_cell_destroy@@Base>
   13650:	add	r4, r4, #1
   13654:	cmp	r7, r4
   13658:	bne	13640 <table_row_destroy@@Base+0x20>
   1365c:	ldr	r0, [r8, r5, lsl #2]
   13660:	cmp	r0, #0
   13664:	popeq	{r4, r5, r6, r7, r8, pc}
   13668:	bl	11bc4 <free@plt>
   1366c:	pop	{r4, r5, r6, r7, r8, pc}

00013670 <table_get_row_length@@Base>:
   13670:	ldr	r0, [r0, #20]
   13674:	bx	lr

00013678 <table_add_row@@Base>:
   13678:	push	{r4, r5, r6, r7, r8, lr}
   1367c:	mov	r5, r0
   13680:	ldr	r4, [r0, #24]
   13684:	mov	r1, r4
   13688:	ldr	r0, [r0, #20]
   1368c:	bl	15050 <table_cell_nullify@@Base+0x218>
   13690:	cmp	r1, #0
   13694:	beq	13700 <table_add_row@@Base+0x88>
   13698:	ldr	r7, [r5, #20]
   1369c:	mov	r0, r5
   136a0:	bl	1289c <table_get_column_length@@Base>
   136a4:	mov	r6, r0
   136a8:	mov	r1, r7
   136ac:	mov	r0, r5
   136b0:	bl	13600 <table_row_init@@Base>
   136b4:	cmp	r6, #0
   136b8:	ble	136dc <table_add_row@@Base+0x64>
   136bc:	mov	r4, #0
   136c0:	mov	r2, r4
   136c4:	mov	r1, r7
   136c8:	mov	r0, r5
   136cc:	bl	14de0 <table_cell_init@@Base>
   136d0:	add	r4, r4, #1
   136d4:	cmp	r6, r4
   136d8:	bne	136c0 <table_add_row@@Base+0x48>
   136dc:	mov	r3, #2
   136e0:	mvn	r2, #0
   136e4:	ldr	r1, [r5, #20]
   136e8:	mov	r0, r5
   136ec:	bl	127ac <table_notify@@Base>
   136f0:	ldr	r0, [r5, #20]
   136f4:	add	r3, r0, #1
   136f8:	str	r3, [r5, #20]
   136fc:	pop	{r4, r5, r6, r7, r8, pc}
   13700:	ldr	r1, [r5, #28]
   13704:	add	r1, r4, r1
   13708:	str	r1, [r5, #28]
   1370c:	lsl	r1, r1, #2
   13710:	ldr	r0, [r5, #16]
   13714:	bl	11bdc <realloc@plt>
   13718:	str	r0, [r5, #16]
   1371c:	b	13698 <table_add_row@@Base+0x20>

00013720 <table_remove_row@@Base>:
   13720:	push	{r4, r5, r6, r7, r8, lr}
   13724:	mov	r5, r0
   13728:	mov	r6, r1
   1372c:	ldr	r7, [r0, #20]
   13730:	bl	1289c <table_get_column_length@@Base>
   13734:	subs	r8, r0, #0
   13738:	ble	13788 <table_remove_row@@Base+0x68>
   1373c:	mov	r4, #0
   13740:	b	13750 <table_remove_row@@Base+0x30>
   13744:	add	r4, r4, #1
   13748:	cmp	r8, r4
   1374c:	beq	13788 <table_remove_row@@Base+0x68>
   13750:	mov	r1, r4
   13754:	mov	r0, r5
   13758:	bl	12904 <table_get_column_data_type@@Base>
   1375c:	cmp	r0, #23
   13760:	beq	13744 <table_remove_row@@Base+0x24>
   13764:	mov	r2, r4
   13768:	mov	r1, r6
   1376c:	mov	r0, r5
   13770:	bl	14dc8 <table_get_cell_ptr@@Base>
   13774:	ldr	r0, [r0]
   13778:	cmp	r0, #0
   1377c:	beq	13744 <table_remove_row@@Base+0x24>
   13780:	bl	11bc4 <free@plt>
   13784:	b	13744 <table_remove_row@@Base+0x24>
   13788:	lsl	r4, r6, #2
   1378c:	ldr	r3, [r5, #16]
   13790:	ldr	r0, [r3, r6, lsl #2]
   13794:	cmp	r0, #0
   13798:	beq	137a0 <table_remove_row@@Base+0x80>
   1379c:	bl	11bc4 <free@plt>
   137a0:	sub	r3, r7, #1
   137a4:	cmp	r6, r3
   137a8:	bge	137d4 <table_remove_row@@Base+0xb4>
   137ac:	mov	ip, r3
   137b0:	mov	r3, r6
   137b4:	ldr	r1, [r5, #16]
   137b8:	add	r2, r4, #4
   137bc:	ldr	r0, [r1, r2]
   137c0:	str	r0, [r1, r4]
   137c4:	add	r3, r3, #1
   137c8:	mov	r4, r2
   137cc:	cmp	ip, r3
   137d0:	bne	137b4 <table_remove_row@@Base+0x94>
   137d4:	ldr	r0, [r5, #20]
   137d8:	sub	r0, r0, #1
   137dc:	str	r0, [r5, #20]
   137e0:	ldr	r4, [r5, #24]
   137e4:	mov	r1, r4
   137e8:	bl	15050 <table_cell_nullify@@Base+0x218>
   137ec:	cmp	r1, #0
   137f0:	beq	13810 <table_remove_row@@Base+0xf0>
   137f4:	mov	r3, #4
   137f8:	mvn	r2, #0
   137fc:	mov	r1, r6
   13800:	mov	r0, r5
   13804:	bl	127ac <table_notify@@Base>
   13808:	mov	r0, #0
   1380c:	pop	{r4, r5, r6, r7, r8, pc}
   13810:	ldr	r1, [r5, #28]
   13814:	sub	r1, r1, r4
   13818:	str	r1, [r5, #28]
   1381c:	lsl	r1, r1, #2
   13820:	ldr	r0, [r5, #16]
   13824:	bl	11bdc <realloc@plt>
   13828:	str	r0, [r5, #16]
   1382c:	b	137f4 <table_remove_row@@Base+0xd4>

00013830 <table_get_row_ptr@@Base>:
   13830:	ldr	r0, [r0, #16]
   13834:	add	r0, r0, r1, lsl #2
   13838:	bx	lr

0001383c <table_set_row_ptr@@Base>:
   1383c:	ldr	r3, [r0, #16]
   13840:	ldr	r2, [r2]
   13844:	str	r2, [r3, r1, lsl #2]
   13848:	bx	lr

0001384c <table_set@@Base>:
   1384c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13850:	mov	r5, r0
   13854:	mov	r9, r1
   13858:	mov	r6, r2
   1385c:	mov	r7, r3
   13860:	ldr	r4, [sp, #32]
   13864:	bl	14dc8 <table_get_cell_ptr@@Base>
   13868:	mov	r8, r0
   1386c:	mov	r1, r6
   13870:	mov	r0, r5
   13874:	bl	12bb8 <table_get_col_ptr@@Base>
   13878:	cmp	r4, #23
   1387c:	ldrls	pc, [pc, r4, lsl #2]
   13880:	b	13ea4 <table_set@@Base+0x658>
   13884:	andeq	r3, r1, r0, lsr #18
   13888:	andeq	r3, r1, ip, asr r9
   1388c:	muleq	r1, r8, r9
   13890:	ldrdeq	r3, [r1], -r4
   13894:	andeq	r3, r1, r0, lsl sl
   13898:	andeq	r3, r1, ip, asr #20
   1389c:	andeq	r3, r1, r8, lsl #21
   138a0:	andeq	r3, r1, r4, asr #21
   138a4:	andeq	r3, r1, r0, lsl #22
   138a8:	andeq	r3, r1, r8, asr #22
   138ac:	andeq	r3, r1, ip, lsl #23
   138b0:	andeq	r3, r1, r8, asr #23
   138b4:	andeq	r3, r1, r4, lsl #24
   138b8:	andeq	r3, r1, r0, asr #24
   138bc:	andeq	r3, r1, ip, ror ip
   138c0:	andeq	r3, r1, r0, asr #25
   138c4:	andeq	r3, r1, r4, lsl #26
   138c8:	andeq	r3, r1, r0, asr #26
   138cc:	andeq	r3, r1, r4, lsl #27
   138d0:	andeq	r3, r1, r0, lsl #28
   138d4:	andeq	r3, r1, ip, lsr lr
   138d8:	andeq	r3, r1, r8, asr #27
   138dc:	andeq	r3, r1, r4, ror #17
   138e0:	andeq	r3, r1, r8, ror lr
   138e4:	ldr	r3, [r0, #4]
   138e8:	cmp	r3, #22
   138ec:	bne	13b40 <table_set@@Base+0x2f4>
   138f0:	ldr	r0, [r8]
   138f4:	cmp	r0, #0
   138f8:	beq	13908 <table_set@@Base+0xbc>
   138fc:	ldrb	r3, [r7]
   13900:	strb	r3, [r0]
   13904:	b	13e88 <table_set@@Base+0x63c>
   13908:	mov	r0, #1
   1390c:	bl	11bf4 <malloc@plt>
   13910:	str	r0, [r8]
   13914:	cmp	r0, #0
   13918:	bne	138fc <table_set@@Base+0xb0>
   1391c:	b	13b40 <table_set@@Base+0x2f4>
   13920:	ldr	r3, [r0, #4]
   13924:	cmp	r3, #0
   13928:	bne	13b40 <table_set@@Base+0x2f4>
   1392c:	ldr	r0, [r8]
   13930:	cmp	r0, #0
   13934:	beq	13944 <table_set@@Base+0xf8>
   13938:	ldr	r3, [r7]
   1393c:	str	r3, [r0]
   13940:	b	13e88 <table_set@@Base+0x63c>
   13944:	mov	r0, #4
   13948:	bl	11bf4 <malloc@plt>
   1394c:	str	r0, [r8]
   13950:	cmp	r0, #0
   13954:	bne	13938 <table_set@@Base+0xec>
   13958:	b	13b40 <table_set@@Base+0x2f4>
   1395c:	ldr	r3, [r0, #4]
   13960:	cmp	r3, #1
   13964:	bne	13b40 <table_set@@Base+0x2f4>
   13968:	ldr	r0, [r8]
   1396c:	cmp	r0, #0
   13970:	beq	13980 <table_set@@Base+0x134>
   13974:	ldr	r3, [r7]
   13978:	str	r3, [r0]
   1397c:	b	13e88 <table_set@@Base+0x63c>
   13980:	mov	r0, #4
   13984:	bl	11bf4 <malloc@plt>
   13988:	str	r0, [r8]
   1398c:	cmp	r0, #0
   13990:	bne	13974 <table_set@@Base+0x128>
   13994:	b	13b40 <table_set@@Base+0x2f4>
   13998:	ldr	r3, [r0, #4]
   1399c:	cmp	r3, #2
   139a0:	bne	13b40 <table_set@@Base+0x2f4>
   139a4:	ldr	r0, [r8]
   139a8:	cmp	r0, #0
   139ac:	beq	139bc <table_set@@Base+0x170>
   139b0:	ldrb	r3, [r7]
   139b4:	strb	r3, [r0]
   139b8:	b	13e88 <table_set@@Base+0x63c>
   139bc:	mov	r0, #1
   139c0:	bl	11bf4 <malloc@plt>
   139c4:	str	r0, [r8]
   139c8:	cmp	r0, #0
   139cc:	bne	139b0 <table_set@@Base+0x164>
   139d0:	b	13b40 <table_set@@Base+0x2f4>
   139d4:	ldr	r3, [r0, #4]
   139d8:	cmp	r3, #3
   139dc:	bne	13b40 <table_set@@Base+0x2f4>
   139e0:	ldr	r0, [r8]
   139e4:	cmp	r0, #0
   139e8:	beq	139f8 <table_set@@Base+0x1ac>
   139ec:	ldrb	r3, [r7]
   139f0:	strb	r3, [r0]
   139f4:	b	13e88 <table_set@@Base+0x63c>
   139f8:	mov	r0, #1
   139fc:	bl	11bf4 <malloc@plt>
   13a00:	str	r0, [r8]
   13a04:	cmp	r0, #0
   13a08:	bne	139ec <table_set@@Base+0x1a0>
   13a0c:	b	13b40 <table_set@@Base+0x2f4>
   13a10:	ldr	r3, [r0, #4]
   13a14:	cmp	r3, #4
   13a18:	bne	13b40 <table_set@@Base+0x2f4>
   13a1c:	ldr	r0, [r8]
   13a20:	cmp	r0, #0
   13a24:	beq	13a34 <table_set@@Base+0x1e8>
   13a28:	ldrh	r3, [r7]
   13a2c:	strh	r3, [r0]
   13a30:	b	13e88 <table_set@@Base+0x63c>
   13a34:	mov	r0, #2
   13a38:	bl	11bf4 <malloc@plt>
   13a3c:	str	r0, [r8]
   13a40:	cmp	r0, #0
   13a44:	bne	13a28 <table_set@@Base+0x1dc>
   13a48:	b	13b40 <table_set@@Base+0x2f4>
   13a4c:	ldr	r3, [r0, #4]
   13a50:	cmp	r3, #5
   13a54:	bne	13b40 <table_set@@Base+0x2f4>
   13a58:	ldr	r0, [r8]
   13a5c:	cmp	r0, #0
   13a60:	beq	13a70 <table_set@@Base+0x224>
   13a64:	ldrh	r3, [r7]
   13a68:	strh	r3, [r0]
   13a6c:	b	13e88 <table_set@@Base+0x63c>
   13a70:	mov	r0, #2
   13a74:	bl	11bf4 <malloc@plt>
   13a78:	str	r0, [r8]
   13a7c:	cmp	r0, #0
   13a80:	bne	13a64 <table_set@@Base+0x218>
   13a84:	b	13b40 <table_set@@Base+0x2f4>
   13a88:	ldr	r3, [r0, #4]
   13a8c:	cmp	r3, #6
   13a90:	bne	13b40 <table_set@@Base+0x2f4>
   13a94:	ldr	r0, [r8]
   13a98:	cmp	r0, #0
   13a9c:	beq	13aac <table_set@@Base+0x260>
   13aa0:	ldr	r3, [r7]
   13aa4:	str	r3, [r0]
   13aa8:	b	13e88 <table_set@@Base+0x63c>
   13aac:	mov	r0, #4
   13ab0:	bl	11bf4 <malloc@plt>
   13ab4:	str	r0, [r8]
   13ab8:	cmp	r0, #0
   13abc:	bne	13aa0 <table_set@@Base+0x254>
   13ac0:	b	13b40 <table_set@@Base+0x2f4>
   13ac4:	ldr	r3, [r0, #4]
   13ac8:	cmp	r3, #7
   13acc:	bne	13b40 <table_set@@Base+0x2f4>
   13ad0:	ldr	r0, [r8]
   13ad4:	cmp	r0, #0
   13ad8:	beq	13ae8 <table_set@@Base+0x29c>
   13adc:	ldr	r3, [r7]
   13ae0:	str	r3, [r0]
   13ae4:	b	13e88 <table_set@@Base+0x63c>
   13ae8:	mov	r0, #4
   13aec:	bl	11bf4 <malloc@plt>
   13af0:	str	r0, [r8]
   13af4:	cmp	r0, #0
   13af8:	bne	13adc <table_set@@Base+0x290>
   13afc:	b	13b40 <table_set@@Base+0x2f4>
   13b00:	ldr	r3, [r0, #4]
   13b04:	cmp	r3, #8
   13b08:	bne	13b40 <table_set@@Base+0x2f4>
   13b0c:	ldr	r0, [r8]
   13b10:	cmp	r0, #0
   13b14:	beq	13b2c <table_set@@Base+0x2e0>
   13b18:	ldr	r2, [r7]
   13b1c:	ldr	r3, [r7, #4]
   13b20:	str	r2, [r0]
   13b24:	str	r3, [r0, #4]
   13b28:	b	13e88 <table_set@@Base+0x63c>
   13b2c:	mov	r0, #8
   13b30:	bl	11bf4 <malloc@plt>
   13b34:	str	r0, [r8]
   13b38:	cmp	r0, #0
   13b3c:	bne	13b18 <table_set@@Base+0x2cc>
   13b40:	mvn	r0, #0
   13b44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b48:	ldr	r3, [r0, #4]
   13b4c:	cmp	r3, #9
   13b50:	bne	13b40 <table_set@@Base+0x2f4>
   13b54:	ldr	r0, [r8]
   13b58:	cmp	r0, #0
   13b5c:	beq	13b74 <table_set@@Base+0x328>
   13b60:	ldr	r2, [r7]
   13b64:	ldr	r3, [r7, #4]
   13b68:	str	r2, [r0]
   13b6c:	str	r3, [r0, #4]
   13b70:	b	13e88 <table_set@@Base+0x63c>
   13b74:	mov	r0, #8
   13b78:	bl	11bf4 <malloc@plt>
   13b7c:	str	r0, [r8]
   13b80:	cmp	r0, #0
   13b84:	bne	13b60 <table_set@@Base+0x314>
   13b88:	b	13b40 <table_set@@Base+0x2f4>
   13b8c:	ldr	r3, [r0, #4]
   13b90:	cmp	r3, #10
   13b94:	bne	13b40 <table_set@@Base+0x2f4>
   13b98:	ldr	r0, [r8]
   13b9c:	cmp	r0, #0
   13ba0:	beq	13bb0 <table_set@@Base+0x364>
   13ba4:	ldrh	r3, [r7]
   13ba8:	strh	r3, [r0]
   13bac:	b	13e88 <table_set@@Base+0x63c>
   13bb0:	mov	r0, #2
   13bb4:	bl	11bf4 <malloc@plt>
   13bb8:	str	r0, [r8]
   13bbc:	cmp	r0, #0
   13bc0:	bne	13ba4 <table_set@@Base+0x358>
   13bc4:	b	13b40 <table_set@@Base+0x2f4>
   13bc8:	ldr	r3, [r0, #4]
   13bcc:	cmp	r3, #11
   13bd0:	bne	13b40 <table_set@@Base+0x2f4>
   13bd4:	ldr	r0, [r8]
   13bd8:	cmp	r0, #0
   13bdc:	beq	13bec <table_set@@Base+0x3a0>
   13be0:	ldrh	r3, [r7]
   13be4:	strh	r3, [r0]
   13be8:	b	13e88 <table_set@@Base+0x63c>
   13bec:	mov	r0, #2
   13bf0:	bl	11bf4 <malloc@plt>
   13bf4:	str	r0, [r8]
   13bf8:	cmp	r0, #0
   13bfc:	bne	13be0 <table_set@@Base+0x394>
   13c00:	b	13b40 <table_set@@Base+0x2f4>
   13c04:	ldr	r3, [r0, #4]
   13c08:	cmp	r3, #12
   13c0c:	bne	13b40 <table_set@@Base+0x2f4>
   13c10:	ldr	r0, [r8]
   13c14:	cmp	r0, #0
   13c18:	beq	13c28 <table_set@@Base+0x3dc>
   13c1c:	ldr	r3, [r7]
   13c20:	str	r3, [r0]
   13c24:	b	13e88 <table_set@@Base+0x63c>
   13c28:	mov	r0, #4
   13c2c:	bl	11bf4 <malloc@plt>
   13c30:	str	r0, [r8]
   13c34:	cmp	r0, #0
   13c38:	bne	13c1c <table_set@@Base+0x3d0>
   13c3c:	b	13b40 <table_set@@Base+0x2f4>
   13c40:	ldr	r3, [r0, #4]
   13c44:	cmp	r3, #13
   13c48:	bne	13b40 <table_set@@Base+0x2f4>
   13c4c:	ldr	r0, [r8]
   13c50:	cmp	r0, #0
   13c54:	beq	13c64 <table_set@@Base+0x418>
   13c58:	ldr	r3, [r7]
   13c5c:	str	r3, [r0]
   13c60:	b	13e88 <table_set@@Base+0x63c>
   13c64:	mov	r0, #4
   13c68:	bl	11bf4 <malloc@plt>
   13c6c:	str	r0, [r8]
   13c70:	cmp	r0, #0
   13c74:	bne	13c58 <table_set@@Base+0x40c>
   13c78:	b	13b40 <table_set@@Base+0x2f4>
   13c7c:	ldr	r3, [r0, #4]
   13c80:	cmp	r3, #14
   13c84:	bne	13b40 <table_set@@Base+0x2f4>
   13c88:	ldr	r0, [r8]
   13c8c:	cmp	r0, #0
   13c90:	beq	13ca8 <table_set@@Base+0x45c>
   13c94:	ldr	r2, [r7]
   13c98:	ldr	r3, [r7, #4]
   13c9c:	str	r2, [r0]
   13ca0:	str	r3, [r0, #4]
   13ca4:	b	13e88 <table_set@@Base+0x63c>
   13ca8:	mov	r0, #8
   13cac:	bl	11bf4 <malloc@plt>
   13cb0:	str	r0, [r8]
   13cb4:	cmp	r0, #0
   13cb8:	bne	13c94 <table_set@@Base+0x448>
   13cbc:	b	13b40 <table_set@@Base+0x2f4>
   13cc0:	ldr	r3, [r0, #4]
   13cc4:	cmp	r3, #15
   13cc8:	bne	13b40 <table_set@@Base+0x2f4>
   13ccc:	ldr	r0, [r8]
   13cd0:	cmp	r0, #0
   13cd4:	beq	13cec <table_set@@Base+0x4a0>
   13cd8:	ldr	r2, [r7]
   13cdc:	ldr	r3, [r7, #4]
   13ce0:	str	r2, [r0]
   13ce4:	str	r3, [r0, #4]
   13ce8:	b	13e88 <table_set@@Base+0x63c>
   13cec:	mov	r0, #8
   13cf0:	bl	11bf4 <malloc@plt>
   13cf4:	str	r0, [r8]
   13cf8:	cmp	r0, #0
   13cfc:	bne	13cd8 <table_set@@Base+0x48c>
   13d00:	b	13b40 <table_set@@Base+0x2f4>
   13d04:	ldr	r3, [r0, #4]
   13d08:	cmp	r3, #16
   13d0c:	bne	13b40 <table_set@@Base+0x2f4>
   13d10:	ldr	r0, [r8]
   13d14:	cmp	r0, #0
   13d18:	beq	13d28 <table_set@@Base+0x4dc>
   13d1c:	ldr	r3, [r7]
   13d20:	str	r3, [r0]
   13d24:	b	13e88 <table_set@@Base+0x63c>
   13d28:	mov	r0, #4
   13d2c:	bl	11bf4 <malloc@plt>
   13d30:	str	r0, [r8]
   13d34:	cmp	r0, #0
   13d38:	bne	13d1c <table_set@@Base+0x4d0>
   13d3c:	b	13b40 <table_set@@Base+0x2f4>
   13d40:	ldr	r3, [r0, #4]
   13d44:	cmp	r3, #17
   13d48:	bne	13b40 <table_set@@Base+0x2f4>
   13d4c:	ldr	r0, [r8]
   13d50:	cmp	r0, #0
   13d54:	beq	13d6c <table_set@@Base+0x520>
   13d58:	ldr	r2, [r7]
   13d5c:	ldr	r3, [r7, #4]
   13d60:	str	r2, [r0]
   13d64:	str	r3, [r0, #4]
   13d68:	b	13e88 <table_set@@Base+0x63c>
   13d6c:	mov	r0, #8
   13d70:	bl	11bf4 <malloc@plt>
   13d74:	str	r0, [r8]
   13d78:	cmp	r0, #0
   13d7c:	bne	13d58 <table_set@@Base+0x50c>
   13d80:	b	13b40 <table_set@@Base+0x2f4>
   13d84:	ldr	r3, [r0, #4]
   13d88:	cmp	r3, #18
   13d8c:	bne	13b40 <table_set@@Base+0x2f4>
   13d90:	ldr	r0, [r8]
   13d94:	cmp	r0, #0
   13d98:	beq	13db0 <table_set@@Base+0x564>
   13d9c:	ldr	r2, [r7]
   13da0:	ldr	r3, [r7, #4]
   13da4:	str	r2, [r0]
   13da8:	str	r3, [r0, #4]
   13dac:	b	13e88 <table_set@@Base+0x63c>
   13db0:	mov	r0, #8
   13db4:	bl	11bf4 <malloc@plt>
   13db8:	str	r0, [r8]
   13dbc:	cmp	r0, #0
   13dc0:	bne	13d9c <table_set@@Base+0x550>
   13dc4:	b	13b40 <table_set@@Base+0x2f4>
   13dc8:	ldr	r3, [r0, #4]
   13dcc:	cmp	r3, #21
   13dd0:	bne	13b40 <table_set@@Base+0x2f4>
   13dd4:	mov	r0, r7
   13dd8:	bl	11c18 <strlen@plt>
   13ddc:	add	r1, r0, #1
   13de0:	ldr	r0, [r8]
   13de4:	bl	11bdc <realloc@plt>
   13de8:	str	r0, [r8]
   13dec:	cmp	r0, #0
   13df0:	beq	13b40 <table_set@@Base+0x2f4>
   13df4:	mov	r1, r7
   13df8:	bl	11be8 <strcpy@plt>
   13dfc:	b	13e88 <table_set@@Base+0x63c>
   13e00:	ldr	r3, [r0, #4]
   13e04:	cmp	r3, #19
   13e08:	bne	13b40 <table_set@@Base+0x2f4>
   13e0c:	ldr	r0, [r8]
   13e10:	cmp	r0, #0
   13e14:	beq	13e24 <table_set@@Base+0x5d8>
   13e18:	ldrb	r3, [r7]
   13e1c:	strb	r3, [r0]
   13e20:	b	13e88 <table_set@@Base+0x63c>
   13e24:	mov	r0, #1
   13e28:	bl	11bf4 <malloc@plt>
   13e2c:	str	r0, [r8]
   13e30:	cmp	r0, #0
   13e34:	bne	13e18 <table_set@@Base+0x5cc>
   13e38:	b	13b40 <table_set@@Base+0x2f4>
   13e3c:	ldr	r3, [r0, #4]
   13e40:	cmp	r3, #20
   13e44:	bne	13b40 <table_set@@Base+0x2f4>
   13e48:	ldr	r0, [r8]
   13e4c:	cmp	r0, #0
   13e50:	beq	13e60 <table_set@@Base+0x614>
   13e54:	ldrb	r3, [r7]
   13e58:	strb	r3, [r0]
   13e5c:	b	13e88 <table_set@@Base+0x63c>
   13e60:	mov	r0, #1
   13e64:	bl	11bf4 <malloc@plt>
   13e68:	str	r0, [r8]
   13e6c:	cmp	r0, #0
   13e70:	bne	13e54 <table_set@@Base+0x608>
   13e74:	b	13b40 <table_set@@Base+0x2f4>
   13e78:	ldr	r3, [r0, #4]
   13e7c:	cmp	r3, #23
   13e80:	bne	13b40 <table_set@@Base+0x2f4>
   13e84:	str	r7, [r8]
   13e88:	mov	r3, #1
   13e8c:	mov	r2, r6
   13e90:	mov	r1, r9
   13e94:	mov	r0, r5
   13e98:	bl	127ac <table_notify@@Base>
   13e9c:	mov	r0, #0
   13ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ea4:	mvn	r0, #0
   13ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00013eac <table_set_bool@@Base>:
   13eac:	push	{lr}		; (str lr, [sp, #-4]!)
   13eb0:	sub	sp, sp, #20
   13eb4:	add	ip, sp, #16
   13eb8:	strb	r3, [ip, #-1]!
   13ebc:	mov	r3, #22
   13ec0:	str	r3, [sp]
   13ec4:	mov	r3, ip
   13ec8:	bl	1384c <table_set@@Base>
   13ecc:	add	sp, sp, #20
   13ed0:	pop	{pc}		; (ldr pc, [sp], #4)

00013ed4 <table_set_int@@Base>:
   13ed4:	push	{lr}		; (str lr, [sp, #-4]!)
   13ed8:	sub	sp, sp, #20
   13edc:	add	ip, sp, #16
   13ee0:	str	r3, [ip, #-4]!
   13ee4:	mov	r3, #0
   13ee8:	str	r3, [sp]
   13eec:	mov	r3, ip
   13ef0:	bl	1384c <table_set@@Base>
   13ef4:	add	sp, sp, #20
   13ef8:	pop	{pc}		; (ldr pc, [sp], #4)

00013efc <table_set_uint@@Base>:
   13efc:	push	{lr}		; (str lr, [sp, #-4]!)
   13f00:	sub	sp, sp, #20
   13f04:	add	ip, sp, #16
   13f08:	str	r3, [ip, #-4]!
   13f0c:	mov	r3, #1
   13f10:	str	r3, [sp]
   13f14:	mov	r3, ip
   13f18:	bl	1384c <table_set@@Base>
   13f1c:	add	sp, sp, #20
   13f20:	pop	{pc}		; (ldr pc, [sp], #4)

00013f24 <table_set_int8@@Base>:
   13f24:	push	{lr}		; (str lr, [sp, #-4]!)
   13f28:	sub	sp, sp, #20
   13f2c:	add	ip, sp, #16
   13f30:	strb	r3, [ip, #-1]!
   13f34:	mov	r3, #2
   13f38:	str	r3, [sp]
   13f3c:	mov	r3, ip
   13f40:	bl	1384c <table_set@@Base>
   13f44:	add	sp, sp, #20
   13f48:	pop	{pc}		; (ldr pc, [sp], #4)

00013f4c <table_set_uint8@@Base>:
   13f4c:	push	{lr}		; (str lr, [sp, #-4]!)
   13f50:	sub	sp, sp, #20
   13f54:	add	ip, sp, #16
   13f58:	strb	r3, [ip, #-1]!
   13f5c:	mov	r3, #3
   13f60:	str	r3, [sp]
   13f64:	mov	r3, ip
   13f68:	bl	1384c <table_set@@Base>
   13f6c:	add	sp, sp, #20
   13f70:	pop	{pc}		; (ldr pc, [sp], #4)

00013f74 <table_set_int16@@Base>:
   13f74:	push	{lr}		; (str lr, [sp, #-4]!)
   13f78:	sub	sp, sp, #20
   13f7c:	add	ip, sp, #16
   13f80:	strh	r3, [ip, #-2]!
   13f84:	mov	r3, #4
   13f88:	str	r3, [sp]
   13f8c:	mov	r3, ip
   13f90:	bl	1384c <table_set@@Base>
   13f94:	add	sp, sp, #20
   13f98:	pop	{pc}		; (ldr pc, [sp], #4)

00013f9c <table_set_uint16@@Base>:
   13f9c:	push	{lr}		; (str lr, [sp, #-4]!)
   13fa0:	sub	sp, sp, #20
   13fa4:	add	ip, sp, #16
   13fa8:	strh	r3, [ip, #-2]!
   13fac:	mov	r3, #5
   13fb0:	str	r3, [sp]
   13fb4:	mov	r3, ip
   13fb8:	bl	1384c <table_set@@Base>
   13fbc:	add	sp, sp, #20
   13fc0:	pop	{pc}		; (ldr pc, [sp], #4)

00013fc4 <table_set_int32@@Base>:
   13fc4:	push	{lr}		; (str lr, [sp, #-4]!)
   13fc8:	sub	sp, sp, #20
   13fcc:	add	ip, sp, #16
   13fd0:	str	r3, [ip, #-4]!
   13fd4:	mov	r3, #6
   13fd8:	str	r3, [sp]
   13fdc:	mov	r3, ip
   13fe0:	bl	1384c <table_set@@Base>
   13fe4:	add	sp, sp, #20
   13fe8:	pop	{pc}		; (ldr pc, [sp], #4)

00013fec <table_set_uint32@@Base>:
   13fec:	push	{lr}		; (str lr, [sp, #-4]!)
   13ff0:	sub	sp, sp, #20
   13ff4:	add	ip, sp, #16
   13ff8:	str	r3, [ip, #-4]!
   13ffc:	mov	r3, #7
   14000:	str	r3, [sp]
   14004:	mov	r3, ip
   14008:	bl	1384c <table_set@@Base>
   1400c:	add	sp, sp, #20
   14010:	pop	{pc}		; (ldr pc, [sp], #4)

00014014 <table_set_int64@@Base>:
   14014:	push	{lr}		; (str lr, [sp, #-4]!)
   14018:	sub	sp, sp, #12
   1401c:	mov	r3, #8
   14020:	str	r3, [sp]
   14024:	add	r3, sp, #16
   14028:	bl	1384c <table_set@@Base>
   1402c:	add	sp, sp, #12
   14030:	pop	{pc}		; (ldr pc, [sp], #4)

00014034 <table_set_uint64@@Base>:
   14034:	push	{lr}		; (str lr, [sp, #-4]!)
   14038:	sub	sp, sp, #12
   1403c:	mov	r3, #9
   14040:	str	r3, [sp]
   14044:	add	r3, sp, #16
   14048:	bl	1384c <table_set@@Base>
   1404c:	add	sp, sp, #12
   14050:	pop	{pc}		; (ldr pc, [sp], #4)

00014054 <table_set_short@@Base>:
   14054:	push	{lr}		; (str lr, [sp, #-4]!)
   14058:	sub	sp, sp, #20
   1405c:	add	ip, sp, #16
   14060:	strh	r3, [ip, #-2]!
   14064:	mov	r3, #10
   14068:	str	r3, [sp]
   1406c:	mov	r3, ip
   14070:	bl	1384c <table_set@@Base>
   14074:	add	sp, sp, #20
   14078:	pop	{pc}		; (ldr pc, [sp], #4)

0001407c <table_set_ushort@@Base>:
   1407c:	push	{lr}		; (str lr, [sp, #-4]!)
   14080:	sub	sp, sp, #20
   14084:	add	ip, sp, #16
   14088:	strh	r3, [ip, #-2]!
   1408c:	mov	r3, #11
   14090:	str	r3, [sp]
   14094:	mov	r3, ip
   14098:	bl	1384c <table_set@@Base>
   1409c:	add	sp, sp, #20
   140a0:	pop	{pc}		; (ldr pc, [sp], #4)

000140a4 <table_set_long@@Base>:
   140a4:	push	{lr}		; (str lr, [sp, #-4]!)
   140a8:	sub	sp, sp, #20
   140ac:	add	ip, sp, #16
   140b0:	str	r3, [ip, #-4]!
   140b4:	mov	r3, #12
   140b8:	str	r3, [sp]
   140bc:	mov	r3, ip
   140c0:	bl	1384c <table_set@@Base>
   140c4:	add	sp, sp, #20
   140c8:	pop	{pc}		; (ldr pc, [sp], #4)

000140cc <table_set_ulong@@Base>:
   140cc:	push	{lr}		; (str lr, [sp, #-4]!)
   140d0:	sub	sp, sp, #20
   140d4:	add	ip, sp, #16
   140d8:	str	r3, [ip, #-4]!
   140dc:	mov	r3, #13
   140e0:	str	r3, [sp]
   140e4:	mov	r3, ip
   140e8:	bl	1384c <table_set@@Base>
   140ec:	add	sp, sp, #20
   140f0:	pop	{pc}		; (ldr pc, [sp], #4)

000140f4 <table_set_llong@@Base>:
   140f4:	push	{lr}		; (str lr, [sp, #-4]!)
   140f8:	sub	sp, sp, #12
   140fc:	mov	r3, #14
   14100:	str	r3, [sp]
   14104:	add	r3, sp, #16
   14108:	bl	1384c <table_set@@Base>
   1410c:	add	sp, sp, #12
   14110:	pop	{pc}		; (ldr pc, [sp], #4)

00014114 <table_set_ullong@@Base>:
   14114:	push	{lr}		; (str lr, [sp, #-4]!)
   14118:	sub	sp, sp, #12
   1411c:	mov	r3, #15
   14120:	str	r3, [sp]
   14124:	add	r3, sp, #16
   14128:	bl	1384c <table_set@@Base>
   1412c:	add	sp, sp, #12
   14130:	pop	{pc}		; (ldr pc, [sp], #4)

00014134 <table_set_float@@Base>:
   14134:	push	{lr}		; (str lr, [sp, #-4]!)
   14138:	sub	sp, sp, #20
   1413c:	add	r3, sp, #16
   14140:	vstmdb	r3!, {s0}
   14144:	mov	ip, #16
   14148:	str	ip, [sp]
   1414c:	bl	1384c <table_set@@Base>
   14150:	add	sp, sp, #20
   14154:	pop	{pc}		; (ldr pc, [sp], #4)

00014158 <table_set_double@@Base>:
   14158:	push	{lr}		; (str lr, [sp, #-4]!)
   1415c:	sub	sp, sp, #20
   14160:	add	r3, sp, #16
   14164:	vstmdb	r3!, {d0}
   14168:	mov	ip, #17
   1416c:	str	ip, [sp]
   14170:	bl	1384c <table_set@@Base>
   14174:	add	sp, sp, #20
   14178:	pop	{pc}		; (ldr pc, [sp], #4)

0001417c <table_set_ldouble@@Base>:
   1417c:	push	{lr}		; (str lr, [sp, #-4]!)
   14180:	sub	sp, sp, #20
   14184:	add	r3, sp, #16
   14188:	vstmdb	r3!, {d0}
   1418c:	mov	ip, #18
   14190:	str	ip, [sp]
   14194:	bl	1384c <table_set@@Base>
   14198:	add	sp, sp, #20
   1419c:	pop	{pc}		; (ldr pc, [sp], #4)

000141a0 <table_set_string@@Base>:
   141a0:	push	{lr}		; (str lr, [sp, #-4]!)
   141a4:	sub	sp, sp, #12
   141a8:	mov	ip, #21
   141ac:	str	ip, [sp]
   141b0:	bl	1384c <table_set@@Base>
   141b4:	add	sp, sp, #12
   141b8:	pop	{pc}		; (ldr pc, [sp], #4)

000141bc <table_set_char@@Base>:
   141bc:	push	{lr}		; (str lr, [sp, #-4]!)
   141c0:	sub	sp, sp, #20
   141c4:	add	ip, sp, #16
   141c8:	strb	r3, [ip, #-1]!
   141cc:	mov	r3, #19
   141d0:	str	r3, [sp]
   141d4:	mov	r3, ip
   141d8:	bl	1384c <table_set@@Base>
   141dc:	add	sp, sp, #20
   141e0:	pop	{pc}		; (ldr pc, [sp], #4)

000141e4 <table_set_uchar@@Base>:
   141e4:	push	{lr}		; (str lr, [sp, #-4]!)
   141e8:	sub	sp, sp, #20
   141ec:	add	ip, sp, #16
   141f0:	strb	r3, [ip, #-1]!
   141f4:	mov	r3, #20
   141f8:	str	r3, [sp]
   141fc:	mov	r3, ip
   14200:	bl	1384c <table_set@@Base>
   14204:	add	sp, sp, #20
   14208:	pop	{pc}		; (ldr pc, [sp], #4)

0001420c <table_set_ptr@@Base>:
   1420c:	push	{lr}		; (str lr, [sp, #-4]!)
   14210:	sub	sp, sp, #12
   14214:	mov	ip, #23
   14218:	str	ip, [sp]
   1421c:	bl	1384c <table_set@@Base>
   14220:	add	sp, sp, #12
   14224:	pop	{pc}		; (ldr pc, [sp], #4)

00014228 <table_column_is_valid@@Base>:
   14228:	cmp	r0, #0
   1422c:	beq	14250 <table_column_is_valid@@Base+0x28>
   14230:	push	{r4, lr}
   14234:	mov	r4, r1
   14238:	bl	1289c <table_get_column_length@@Base>
   1423c:	cmp	r4, #0
   14240:	cmpge	r0, r4
   14244:	movgt	r0, #1
   14248:	movle	r0, #0
   1424c:	pop	{r4, pc}
   14250:	mov	r0, #0
   14254:	bx	lr

00014258 <table_row_is_valid@@Base>:
   14258:	cmp	r0, #0
   1425c:	beq	14280 <table_row_is_valid@@Base+0x28>
   14260:	push	{r4, lr}
   14264:	mov	r4, r1
   14268:	bl	13670 <table_get_row_length@@Base>
   1426c:	cmp	r4, #0
   14270:	cmpge	r0, r4
   14274:	movgt	r0, #1
   14278:	movle	r0, #0
   1427c:	pop	{r4, pc}
   14280:	mov	r0, #0
   14284:	bx	lr

00014288 <table_cell_is_valid@@Base>:
   14288:	push	{r4, r5, r6, lr}
   1428c:	mov	r4, r0
   14290:	mov	r5, r1
   14294:	mov	r1, r2
   14298:	bl	14228 <table_column_is_valid@@Base>
   1429c:	cmp	r0, #0
   142a0:	popeq	{r4, r5, r6, pc}
   142a4:	mov	r1, r5
   142a8:	mov	r0, r4
   142ac:	bl	14258 <table_row_is_valid@@Base>
   142b0:	adds	r0, r0, #0
   142b4:	movne	r0, #1
   142b8:	pop	{r4, r5, r6, pc}

000142bc <table_cell_has_value@@Base>:
   142bc:	push	{r4, lr}
   142c0:	bl	14dc8 <table_get_cell_ptr@@Base>
   142c4:	cmp	r0, #0
   142c8:	beq	142dc <table_cell_has_value@@Base+0x20>
   142cc:	ldr	r0, [r0]
   142d0:	adds	r0, r0, #0
   142d4:	movne	r0, #1
   142d8:	pop	{r4, pc}
   142dc:	mov	r0, #0
   142e0:	pop	{r4, pc}

000142e4 <table_cell_to_buffer@@Base>:
   142e4:	push	{r4, r5, r6, r7, lr}
   142e8:	sub	sp, sp, #12
   142ec:	mov	r6, r0
   142f0:	mov	r7, r1
   142f4:	mov	r4, r2
   142f8:	mov	r5, r3
   142fc:	mov	r1, r2
   14300:	bl	12904 <table_get_column_data_type@@Base>
   14304:	cmp	r0, #23
   14308:	ldrls	pc, [pc, r0, lsl #2]
   1430c:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   14310:	andeq	r4, r1, r0, ror r3
   14314:	andeq	r4, r1, r0, lsr #7
   14318:	andeq	r4, r1, r8, asr #7
   1431c:	strdeq	r4, [r1], -r0
   14320:	andeq	r4, r1, r8, lsl r4
   14324:	andeq	r4, r1, r0, asr #8
   14328:	andeq	r4, r1, r8, ror #8
   1432c:	muleq	r1, r0, r4
   14330:			; <UNDEFINED> instruction: 0x000144b8
   14334:	andeq	r4, r1, r0, ror #9
   14338:	andeq	r4, r1, r8, lsl #10
   1433c:	andeq	r4, r1, r0, lsr r5
   14340:	andeq	r4, r1, r8, asr r5
   14344:	andeq	r4, r1, r0, lsl #11
   14348:	andeq	r4, r1, r8, lsr #11
   1434c:	ldrdeq	r4, [r1], -r0
   14350:	andeq	r4, r1, r0, lsr #12
   14354:	andeq	r4, r1, ip, asr #12
   14358:	andeq	r4, r1, r4, ror r6
   1435c:	andeq	r4, r1, r4, asr #13
   14360:	andeq	r4, r1, ip, ror #13
   14364:	strdeq	r4, [r1], -r8
   14368:	muleq	r1, ip, r6
   1436c:	andeq	r4, r1, r4, lsl r7
   14370:	mov	r2, r4
   14374:	mov	r1, r7
   14378:	mov	r0, r6
   1437c:	bl	13498 <table_get_int@@Base>
   14380:	mov	r3, r0
   14384:	ldr	r2, [pc, #944]	; 1473c <table_cell_to_buffer@@Base+0x458>
   14388:	ldr	r1, [sp, #32]
   1438c:	mov	r0, r5
   14390:	bl	11c30 <snprintf@plt>
   14394:	mov	r0, #0
   14398:	add	sp, sp, #12
   1439c:	pop	{r4, r5, r6, r7, pc}
   143a0:	mov	r2, r4
   143a4:	mov	r1, r7
   143a8:	mov	r0, r6
   143ac:	bl	134a8 <table_get_uint@@Base>
   143b0:	mov	r3, r0
   143b4:	ldr	r2, [pc, #900]	; 14740 <table_cell_to_buffer@@Base+0x45c>
   143b8:	ldr	r1, [sp, #32]
   143bc:	mov	r0, r5
   143c0:	bl	11c30 <snprintf@plt>
   143c4:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   143c8:	mov	r2, r4
   143cc:	mov	r1, r7
   143d0:	mov	r0, r6
   143d4:	bl	134b8 <table_get_int8@@Base>
   143d8:	mov	r3, r0
   143dc:	ldr	r2, [pc, #856]	; 1473c <table_cell_to_buffer@@Base+0x458>
   143e0:	ldr	r1, [sp, #32]
   143e4:	mov	r0, r5
   143e8:	bl	11c30 <snprintf@plt>
   143ec:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   143f0:	mov	r2, r4
   143f4:	mov	r1, r7
   143f8:	mov	r0, r6
   143fc:	bl	134c8 <table_get_uint8@@Base>
   14400:	mov	r3, r0
   14404:	ldr	r2, [pc, #820]	; 14740 <table_cell_to_buffer@@Base+0x45c>
   14408:	ldr	r1, [sp, #32]
   1440c:	mov	r0, r5
   14410:	bl	11c30 <snprintf@plt>
   14414:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   14418:	mov	r2, r4
   1441c:	mov	r1, r7
   14420:	mov	r0, r6
   14424:	bl	134d8 <table_get_int16@@Base>
   14428:	mov	r3, r0
   1442c:	ldr	r2, [pc, #776]	; 1473c <table_cell_to_buffer@@Base+0x458>
   14430:	ldr	r1, [sp, #32]
   14434:	mov	r0, r5
   14438:	bl	11c30 <snprintf@plt>
   1443c:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   14440:	mov	r2, r4
   14444:	mov	r1, r7
   14448:	mov	r0, r6
   1444c:	bl	134e8 <table_get_uint16@@Base>
   14450:	mov	r3, r0
   14454:	ldr	r2, [pc, #740]	; 14740 <table_cell_to_buffer@@Base+0x45c>
   14458:	ldr	r1, [sp, #32]
   1445c:	mov	r0, r5
   14460:	bl	11c30 <snprintf@plt>
   14464:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   14468:	mov	r2, r4
   1446c:	mov	r1, r7
   14470:	mov	r0, r6
   14474:	bl	134f8 <table_get_int32@@Base>
   14478:	mov	r3, r0
   1447c:	ldr	r2, [pc, #696]	; 1473c <table_cell_to_buffer@@Base+0x458>
   14480:	ldr	r1, [sp, #32]
   14484:	mov	r0, r5
   14488:	bl	11c30 <snprintf@plt>
   1448c:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   14490:	mov	r2, r4
   14494:	mov	r1, r7
   14498:	mov	r0, r6
   1449c:	bl	13508 <table_get_uint32@@Base>
   144a0:	mov	r3, r0
   144a4:	ldr	r2, [pc, #660]	; 14740 <table_cell_to_buffer@@Base+0x45c>
   144a8:	ldr	r1, [sp, #32]
   144ac:	mov	r0, r5
   144b0:	bl	11c30 <snprintf@plt>
   144b4:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   144b8:	mov	r2, r4
   144bc:	mov	r1, r7
   144c0:	mov	r0, r6
   144c4:	bl	13518 <table_get_int64@@Base>
   144c8:	strd	r0, [sp]
   144cc:	ldr	r2, [pc, #624]	; 14744 <table_cell_to_buffer@@Base+0x460>
   144d0:	ldr	r1, [sp, #32]
   144d4:	mov	r0, r5
   144d8:	bl	11c30 <snprintf@plt>
   144dc:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   144e0:	mov	r2, r4
   144e4:	mov	r1, r7
   144e8:	mov	r0, r6
   144ec:	bl	13528 <table_get_uint64@@Base>
   144f0:	strd	r0, [sp]
   144f4:	ldr	r2, [pc, #588]	; 14748 <table_cell_to_buffer@@Base+0x464>
   144f8:	ldr	r1, [sp, #32]
   144fc:	mov	r0, r5
   14500:	bl	11c30 <snprintf@plt>
   14504:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   14508:	mov	r2, r4
   1450c:	mov	r1, r7
   14510:	mov	r0, r6
   14514:	bl	13538 <table_get_short@@Base>
   14518:	mov	r3, r0
   1451c:	ldr	r2, [pc, #552]	; 1474c <table_cell_to_buffer@@Base+0x468>
   14520:	ldr	r1, [sp, #32]
   14524:	mov	r0, r5
   14528:	bl	11c30 <snprintf@plt>
   1452c:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   14530:	mov	r2, r4
   14534:	mov	r1, r7
   14538:	mov	r0, r6
   1453c:	bl	13548 <table_get_ushort@@Base>
   14540:	mov	r3, r0
   14544:	ldr	r2, [pc, #516]	; 14750 <table_cell_to_buffer@@Base+0x46c>
   14548:	ldr	r1, [sp, #32]
   1454c:	mov	r0, r5
   14550:	bl	11c30 <snprintf@plt>
   14554:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   14558:	mov	r2, r4
   1455c:	mov	r1, r7
   14560:	mov	r0, r6
   14564:	bl	13558 <table_get_long@@Base>
   14568:	mov	r3, r0
   1456c:	ldr	r2, [pc, #480]	; 14754 <table_cell_to_buffer@@Base+0x470>
   14570:	ldr	r1, [sp, #32]
   14574:	mov	r0, r5
   14578:	bl	11c30 <snprintf@plt>
   1457c:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   14580:	mov	r2, r4
   14584:	mov	r1, r7
   14588:	mov	r0, r6
   1458c:	bl	13568 <table_get_ulong@@Base>
   14590:	mov	r3, r0
   14594:	ldr	r2, [pc, #444]	; 14758 <table_cell_to_buffer@@Base+0x474>
   14598:	ldr	r1, [sp, #32]
   1459c:	mov	r0, r5
   145a0:	bl	11c30 <snprintf@plt>
   145a4:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   145a8:	mov	r2, r4
   145ac:	mov	r1, r7
   145b0:	mov	r0, r6
   145b4:	bl	13578 <table_get_llong@@Base>
   145b8:	strd	r0, [sp]
   145bc:	ldr	r2, [pc, #384]	; 14744 <table_cell_to_buffer@@Base+0x460>
   145c0:	ldr	r1, [sp, #32]
   145c4:	mov	r0, r5
   145c8:	bl	11c30 <snprintf@plt>
   145cc:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   145d0:	mov	r2, r4
   145d4:	mov	r1, r7
   145d8:	mov	r0, r6
   145dc:	bl	13588 <table_get_ullong@@Base>
   145e0:	strd	r0, [sp]
   145e4:	ldr	r2, [pc, #348]	; 14748 <table_cell_to_buffer@@Base+0x464>
   145e8:	ldr	r1, [sp, #32]
   145ec:	mov	r0, r5
   145f0:	bl	11c30 <snprintf@plt>
   145f4:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   145f8:	mov	r2, r4
   145fc:	mov	r1, r7
   14600:	mov	r0, r6
   14604:	bl	135e8 <table_get_string@@Base>
   14608:	mov	r3, r0
   1460c:	ldr	r2, [pc, #328]	; 1475c <table_cell_to_buffer@@Base+0x478>
   14610:	ldr	r1, [sp, #32]
   14614:	mov	r0, r5
   14618:	bl	11c30 <snprintf@plt>
   1461c:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   14620:	mov	r2, r4
   14624:	mov	r1, r7
   14628:	mov	r0, r6
   1462c:	bl	13598 <table_get_float@@Base>
   14630:	vcvt.f64.f32	d0, s0
   14634:	vstr	d0, [sp]
   14638:	ldr	r2, [pc, #288]	; 14760 <table_cell_to_buffer@@Base+0x47c>
   1463c:	ldr	r1, [sp, #32]
   14640:	mov	r0, r5
   14644:	bl	11c30 <snprintf@plt>
   14648:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   1464c:	mov	r2, r4
   14650:	mov	r1, r7
   14654:	mov	r0, r6
   14658:	bl	135a8 <table_get_double@@Base>
   1465c:	vstr	d0, [sp]
   14660:	ldr	r2, [pc, #252]	; 14764 <table_cell_to_buffer@@Base+0x480>
   14664:	ldr	r1, [sp, #32]
   14668:	mov	r0, r5
   1466c:	bl	11c30 <snprintf@plt>
   14670:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   14674:	mov	r2, r4
   14678:	mov	r1, r7
   1467c:	mov	r0, r6
   14680:	bl	135b8 <table_get_ldouble@@Base>
   14684:	vstr	d0, [sp]
   14688:	ldr	r2, [pc, #216]	; 14768 <table_cell_to_buffer@@Base+0x484>
   1468c:	ldr	r1, [sp, #32]
   14690:	mov	r0, r5
   14694:	bl	11c30 <snprintf@plt>
   14698:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   1469c:	mov	r2, r4
   146a0:	mov	r1, r7
   146a4:	mov	r0, r6
   146a8:	bl	13488 <table_get_bool@@Base>
   146ac:	mov	r3, r0
   146b0:	ldr	r2, [pc, #132]	; 1473c <table_cell_to_buffer@@Base+0x458>
   146b4:	ldr	r1, [sp, #32]
   146b8:	mov	r0, r5
   146bc:	bl	11c30 <snprintf@plt>
   146c0:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   146c4:	mov	r2, r4
   146c8:	mov	r1, r7
   146cc:	mov	r0, r6
   146d0:	bl	135c8 <table_get_char@@Base>
   146d4:	mov	r3, r0
   146d8:	ldr	r2, [pc, #140]	; 1476c <table_cell_to_buffer@@Base+0x488>
   146dc:	ldr	r1, [sp, #32]
   146e0:	mov	r0, r5
   146e4:	bl	11c30 <snprintf@plt>
   146e8:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   146ec:	mov	r2, r4
   146f0:	mov	r1, r7
   146f4:	mov	r0, r6
   146f8:	bl	135d8 <table_get_uchar@@Base>
   146fc:	mov	r3, r0
   14700:	ldr	r2, [pc, #100]	; 1476c <table_cell_to_buffer@@Base+0x488>
   14704:	ldr	r1, [sp, #32]
   14708:	mov	r0, r5
   1470c:	bl	11c30 <snprintf@plt>
   14710:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   14714:	mov	r2, r4
   14718:	mov	r1, r7
   1471c:	mov	r0, r6
   14720:	bl	135f4 <table_get_ptr@@Base>
   14724:	mov	r3, r0
   14728:	ldr	r2, [pc, #64]	; 14770 <table_cell_to_buffer@@Base+0x48c>
   1472c:	ldr	r1, [sp, #32]
   14730:	mov	r0, r5
   14734:	bl	11c30 <snprintf@plt>
   14738:	b	14394 <table_cell_to_buffer@@Base+0xb0>
   1473c:	muleq	r1, ip, r1
   14740:	andeq	r5, r1, r0, lsr #3
   14744:	andeq	r5, r1, r4, lsr #3
   14748:	andeq	r5, r1, ip, lsr #3
   1474c:			; <UNDEFINED> instruction: 0x000151b4
   14750:			; <UNDEFINED> instruction: 0x000151b8
   14754:			; <UNDEFINED> instruction: 0x000151bc
   14758:	andeq	r5, r1, r0, asr #3
   1475c:	andeq	r5, r1, r4, asr #3
   14760:	andeq	r5, r1, r8, asr #3
   14764:	andeq	r5, r1, ip, asr #3
   14768:	ldrdeq	r5, [r1], -r0
   1476c:	ldrdeq	r5, [r1], -r4
   14770:	ldrdeq	r5, [r1], -r8

00014774 <table_cell_from_buffer@@Base>:
   14774:	push	{r4, r5, r6, r7, lr}
   14778:	sub	sp, sp, #268	; 0x10c
   1477c:	mov	r6, r0
   14780:	mov	r7, r1
   14784:	mov	r4, r2
   14788:	mov	r5, r3
   1478c:	mov	r1, r2
   14790:	bl	12904 <table_get_column_data_type@@Base>
   14794:	cmp	r0, #23
   14798:	ldrls	pc, [pc, r0, lsl #2]
   1479c:	b	14d80 <table_cell_from_buffer@@Base+0x60c>
   147a0:	andeq	r4, r1, r0, lsl #16
   147a4:	andeq	r4, r1, r8, lsr r8
   147a8:	andeq	r4, r1, r0, ror r8
   147ac:	andeq	r4, r1, r8, lsr #17
   147b0:	andeq	r4, r1, r0, ror #17
   147b4:	andeq	r4, r1, r8, lsl r9
   147b8:	andeq	r4, r1, r0, asr r9
   147bc:	andeq	r4, r1, r8, lsl #19
   147c0:	andeq	r4, r1, r0, asr #19
   147c4:	strdeq	r4, [r1], -ip
   147c8:	andeq	r4, r1, r8, lsr sl
   147cc:	andeq	r4, r1, r0, ror sl
   147d0:	andeq	r4, r1, r8, lsr #21
   147d4:	andeq	r4, r1, r0, ror #21
   147d8:	andeq	r4, r1, r8, lsl fp
   147dc:	andeq	r4, r1, r4, asr fp
   147e0:	andeq	r4, r1, r8, asr #23
   147e4:	andeq	r4, r1, r0, lsl #24
   147e8:	andeq	r4, r1, r8, lsr ip
   147ec:	andeq	r4, r1, ip, asr #25
   147f0:	andeq	r4, r1, r4, lsl #26
   147f4:	muleq	r1, r0, fp
   147f8:	andeq	r4, r1, r0, ror ip
   147fc:	andeq	r4, r1, ip, lsr sp
   14800:	add	r2, sp, #8
   14804:	ldr	r1, [pc, #1404]	; 14d88 <table_cell_from_buffer@@Base+0x614>
   14808:	mov	r0, r5
   1480c:	bl	11c3c <__isoc99_sscanf@plt>
   14810:	cmp	r0, #1
   14814:	mvnne	r5, #0
   14818:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   1481c:	ldr	r3, [sp, #8]
   14820:	mov	r2, r4
   14824:	mov	r1, r7
   14828:	mov	r0, r6
   1482c:	bl	13ed4 <table_set_int@@Base>
   14830:	mov	r5, #0
   14834:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14838:	add	r2, sp, #8
   1483c:	ldr	r1, [pc, #1352]	; 14d8c <table_cell_from_buffer@@Base+0x618>
   14840:	mov	r0, r5
   14844:	bl	11c3c <__isoc99_sscanf@plt>
   14848:	cmp	r0, #1
   1484c:	mvnne	r5, #0
   14850:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14854:	ldr	r3, [sp, #8]
   14858:	mov	r2, r4
   1485c:	mov	r1, r7
   14860:	mov	r0, r6
   14864:	bl	13efc <table_set_uint@@Base>
   14868:	mov	r5, #0
   1486c:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14870:	add	r2, sp, #8
   14874:	ldr	r1, [pc, #1300]	; 14d90 <table_cell_from_buffer@@Base+0x61c>
   14878:	mov	r0, r5
   1487c:	bl	11c3c <__isoc99_sscanf@plt>
   14880:	cmp	r0, #1
   14884:	mvnne	r5, #0
   14888:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   1488c:	ldrsb	r3, [sp, #8]
   14890:	mov	r2, r4
   14894:	mov	r1, r7
   14898:	mov	r0, r6
   1489c:	bl	13f24 <table_set_int8@@Base>
   148a0:	mov	r5, #0
   148a4:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   148a8:	add	r2, sp, #8
   148ac:	ldr	r1, [pc, #1248]	; 14d94 <table_cell_from_buffer@@Base+0x620>
   148b0:	mov	r0, r5
   148b4:	bl	11c3c <__isoc99_sscanf@plt>
   148b8:	cmp	r0, #1
   148bc:	mvnne	r5, #0
   148c0:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   148c4:	ldrb	r3, [sp, #8]
   148c8:	mov	r2, r4
   148cc:	mov	r1, r7
   148d0:	mov	r0, r6
   148d4:	bl	13f4c <table_set_uint8@@Base>
   148d8:	mov	r5, #0
   148dc:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   148e0:	add	r2, sp, #8
   148e4:	ldr	r1, [pc, #1196]	; 14d98 <table_cell_from_buffer@@Base+0x624>
   148e8:	mov	r0, r5
   148ec:	bl	11c3c <__isoc99_sscanf@plt>
   148f0:	cmp	r0, #1
   148f4:	mvnne	r5, #0
   148f8:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   148fc:	ldrsh	r3, [sp, #8]
   14900:	mov	r2, r4
   14904:	mov	r1, r7
   14908:	mov	r0, r6
   1490c:	bl	13f74 <table_set_int16@@Base>
   14910:	mov	r5, #0
   14914:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14918:	add	r2, sp, #8
   1491c:	ldr	r1, [pc, #1144]	; 14d9c <table_cell_from_buffer@@Base+0x628>
   14920:	mov	r0, r5
   14924:	bl	11c3c <__isoc99_sscanf@plt>
   14928:	cmp	r0, #1
   1492c:	mvnne	r5, #0
   14930:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14934:	ldrh	r3, [sp, #8]
   14938:	mov	r2, r4
   1493c:	mov	r1, r7
   14940:	mov	r0, r6
   14944:	bl	13f9c <table_set_uint16@@Base>
   14948:	mov	r5, #0
   1494c:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14950:	add	r2, sp, #8
   14954:	ldr	r1, [pc, #1068]	; 14d88 <table_cell_from_buffer@@Base+0x614>
   14958:	mov	r0, r5
   1495c:	bl	11c3c <__isoc99_sscanf@plt>
   14960:	cmp	r0, #1
   14964:	mvnne	r5, #0
   14968:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   1496c:	ldr	r3, [sp, #8]
   14970:	mov	r2, r4
   14974:	mov	r1, r7
   14978:	mov	r0, r6
   1497c:	bl	13fc4 <table_set_int32@@Base>
   14980:	mov	r5, #0
   14984:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14988:	add	r2, sp, #8
   1498c:	ldr	r1, [pc, #1016]	; 14d8c <table_cell_from_buffer@@Base+0x618>
   14990:	mov	r0, r5
   14994:	bl	11c3c <__isoc99_sscanf@plt>
   14998:	cmp	r0, #1
   1499c:	mvnne	r5, #0
   149a0:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   149a4:	ldr	r3, [sp, #8]
   149a8:	mov	r2, r4
   149ac:	mov	r1, r7
   149b0:	mov	r0, r6
   149b4:	bl	13fec <table_set_uint32@@Base>
   149b8:	mov	r5, #0
   149bc:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   149c0:	add	r2, sp, #8
   149c4:	ldr	r1, [pc, #980]	; 14da0 <table_cell_from_buffer@@Base+0x62c>
   149c8:	mov	r0, r5
   149cc:	bl	11c3c <__isoc99_sscanf@plt>
   149d0:	cmp	r0, #1
   149d4:	mvnne	r5, #0
   149d8:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   149dc:	ldrd	r2, [sp, #8]
   149e0:	strd	r2, [sp]
   149e4:	mov	r2, r4
   149e8:	mov	r1, r7
   149ec:	mov	r0, r6
   149f0:	bl	14014 <table_set_int64@@Base>
   149f4:	mov	r5, #0
   149f8:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   149fc:	add	r2, sp, #8
   14a00:	ldr	r1, [pc, #924]	; 14da4 <table_cell_from_buffer@@Base+0x630>
   14a04:	mov	r0, r5
   14a08:	bl	11c3c <__isoc99_sscanf@plt>
   14a0c:	cmp	r0, #1
   14a10:	mvnne	r5, #0
   14a14:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14a18:	ldrd	r2, [sp, #8]
   14a1c:	strd	r2, [sp]
   14a20:	mov	r2, r4
   14a24:	mov	r1, r7
   14a28:	mov	r0, r6
   14a2c:	bl	14034 <table_set_uint64@@Base>
   14a30:	mov	r5, #0
   14a34:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14a38:	add	r2, sp, #8
   14a3c:	ldr	r1, [pc, #852]	; 14d98 <table_cell_from_buffer@@Base+0x624>
   14a40:	mov	r0, r5
   14a44:	bl	11c3c <__isoc99_sscanf@plt>
   14a48:	cmp	r0, #1
   14a4c:	mvnne	r5, #0
   14a50:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14a54:	ldrsh	r3, [sp, #8]
   14a58:	mov	r2, r4
   14a5c:	mov	r1, r7
   14a60:	mov	r0, r6
   14a64:	bl	14054 <table_set_short@@Base>
   14a68:	mov	r5, #0
   14a6c:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14a70:	add	r2, sp, #8
   14a74:	ldr	r1, [pc, #800]	; 14d9c <table_cell_from_buffer@@Base+0x628>
   14a78:	mov	r0, r5
   14a7c:	bl	11c3c <__isoc99_sscanf@plt>
   14a80:	cmp	r0, #1
   14a84:	mvnne	r5, #0
   14a88:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14a8c:	ldrh	r3, [sp, #8]
   14a90:	mov	r2, r4
   14a94:	mov	r1, r7
   14a98:	mov	r0, r6
   14a9c:	bl	1407c <table_set_ushort@@Base>
   14aa0:	mov	r5, #0
   14aa4:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14aa8:	add	r2, sp, #8
   14aac:	ldr	r1, [pc, #756]	; 14da8 <table_cell_from_buffer@@Base+0x634>
   14ab0:	mov	r0, r5
   14ab4:	bl	11c3c <__isoc99_sscanf@plt>
   14ab8:	cmp	r0, #1
   14abc:	mvnne	r5, #0
   14ac0:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14ac4:	ldr	r3, [sp, #8]
   14ac8:	mov	r2, r4
   14acc:	mov	r1, r7
   14ad0:	mov	r0, r6
   14ad4:	bl	140a4 <table_set_long@@Base>
   14ad8:	mov	r5, #0
   14adc:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14ae0:	add	r2, sp, #8
   14ae4:	ldr	r1, [pc, #704]	; 14dac <table_cell_from_buffer@@Base+0x638>
   14ae8:	mov	r0, r5
   14aec:	bl	11c3c <__isoc99_sscanf@plt>
   14af0:	cmp	r0, #1
   14af4:	mvnne	r5, #0
   14af8:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14afc:	ldr	r3, [sp, #8]
   14b00:	mov	r2, r4
   14b04:	mov	r1, r7
   14b08:	mov	r0, r6
   14b0c:	bl	140cc <table_set_ulong@@Base>
   14b10:	mov	r5, #0
   14b14:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14b18:	add	r2, sp, #8
   14b1c:	ldr	r1, [pc, #636]	; 14da0 <table_cell_from_buffer@@Base+0x62c>
   14b20:	mov	r0, r5
   14b24:	bl	11c3c <__isoc99_sscanf@plt>
   14b28:	cmp	r0, #1
   14b2c:	mvnne	r5, #0
   14b30:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14b34:	ldrd	r2, [sp, #8]
   14b38:	strd	r2, [sp]
   14b3c:	mov	r2, r4
   14b40:	mov	r1, r7
   14b44:	mov	r0, r6
   14b48:	bl	140f4 <table_set_llong@@Base>
   14b4c:	mov	r5, #0
   14b50:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14b54:	add	r2, sp, #8
   14b58:	ldr	r1, [pc, #580]	; 14da4 <table_cell_from_buffer@@Base+0x630>
   14b5c:	mov	r0, r5
   14b60:	bl	11c3c <__isoc99_sscanf@plt>
   14b64:	cmp	r0, #1
   14b68:	mvnne	r5, #0
   14b6c:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14b70:	ldrd	r2, [sp, #8]
   14b74:	strd	r2, [sp]
   14b78:	mov	r2, r4
   14b7c:	mov	r1, r7
   14b80:	mov	r0, r6
   14b84:	bl	14114 <table_set_ullong@@Base>
   14b88:	mov	r5, #0
   14b8c:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14b90:	add	r2, sp, #8
   14b94:	ldr	r1, [pc, #532]	; 14db0 <table_cell_from_buffer@@Base+0x63c>
   14b98:	mov	r0, r5
   14b9c:	bl	11c3c <__isoc99_sscanf@plt>
   14ba0:	cmp	r0, #1
   14ba4:	mvnne	r5, #0
   14ba8:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14bac:	add	r3, sp, #8
   14bb0:	mov	r2, r4
   14bb4:	mov	r1, r7
   14bb8:	mov	r0, r6
   14bbc:	bl	141a0 <table_set_string@@Base>
   14bc0:	mov	r5, #0
   14bc4:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14bc8:	add	r2, sp, #8
   14bcc:	ldr	r1, [pc, #480]	; 14db4 <table_cell_from_buffer@@Base+0x640>
   14bd0:	mov	r0, r5
   14bd4:	bl	11c3c <__isoc99_sscanf@plt>
   14bd8:	cmp	r0, #1
   14bdc:	mvnne	r5, #0
   14be0:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14be4:	vldr	s0, [sp, #8]
   14be8:	mov	r2, r4
   14bec:	mov	r1, r7
   14bf0:	mov	r0, r6
   14bf4:	bl	14134 <table_set_float@@Base>
   14bf8:	mov	r5, #0
   14bfc:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14c00:	add	r2, sp, #8
   14c04:	ldr	r1, [pc, #428]	; 14db8 <table_cell_from_buffer@@Base+0x644>
   14c08:	mov	r0, r5
   14c0c:	bl	11c3c <__isoc99_sscanf@plt>
   14c10:	cmp	r0, #1
   14c14:	mvnne	r5, #0
   14c18:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14c1c:	vldr	d0, [sp, #8]
   14c20:	mov	r2, r4
   14c24:	mov	r1, r7
   14c28:	mov	r0, r6
   14c2c:	bl	14158 <table_set_double@@Base>
   14c30:	mov	r5, #0
   14c34:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14c38:	add	r2, sp, #8
   14c3c:	ldr	r1, [pc, #376]	; 14dbc <table_cell_from_buffer@@Base+0x648>
   14c40:	mov	r0, r5
   14c44:	bl	11c3c <__isoc99_sscanf@plt>
   14c48:	cmp	r0, #1
   14c4c:	mvnne	r5, #0
   14c50:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14c54:	vldr	d0, [sp, #8]
   14c58:	mov	r2, r4
   14c5c:	mov	r1, r7
   14c60:	mov	r0, r6
   14c64:	bl	1417c <table_set_ldouble@@Base>
   14c68:	mov	r5, #0
   14c6c:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14c70:	add	r2, sp, #8
   14c74:	ldr	r1, [pc, #268]	; 14d88 <table_cell_from_buffer@@Base+0x614>
   14c78:	mov	r0, r5
   14c7c:	bl	11c3c <__isoc99_sscanf@plt>
   14c80:	cmp	r0, #1
   14c84:	mvnne	r5, #0
   14c88:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14c8c:	ldr	r5, [sp, #8]
   14c90:	cmp	r5, #0
   14c94:	beq	14cb4 <table_cell_from_buffer@@Base+0x540>
   14c98:	mov	r3, #1
   14c9c:	mov	r2, r4
   14ca0:	mov	r1, r7
   14ca4:	mov	r0, r6
   14ca8:	bl	13eac <table_set_bool@@Base>
   14cac:	mov	r5, #0
   14cb0:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14cb4:	mov	r3, #0
   14cb8:	mov	r2, r4
   14cbc:	mov	r1, r7
   14cc0:	mov	r0, r6
   14cc4:	bl	13eac <table_set_bool@@Base>
   14cc8:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14ccc:	add	r2, sp, #8
   14cd0:	ldr	r1, [pc, #232]	; 14dc0 <table_cell_from_buffer@@Base+0x64c>
   14cd4:	mov	r0, r5
   14cd8:	bl	11c3c <__isoc99_sscanf@plt>
   14cdc:	cmp	r0, #1
   14ce0:	mvnne	r5, #0
   14ce4:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14ce8:	ldrb	r3, [sp, #8]
   14cec:	mov	r2, r4
   14cf0:	mov	r1, r7
   14cf4:	mov	r0, r6
   14cf8:	bl	141bc <table_set_char@@Base>
   14cfc:	mov	r5, #0
   14d00:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14d04:	add	r2, sp, #8
   14d08:	ldr	r1, [pc, #176]	; 14dc0 <table_cell_from_buffer@@Base+0x64c>
   14d0c:	mov	r0, r5
   14d10:	bl	11c3c <__isoc99_sscanf@plt>
   14d14:	cmp	r0, #1
   14d18:	mvnne	r5, #0
   14d1c:	bne	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14d20:	ldrb	r3, [sp, #8]
   14d24:	mov	r2, r4
   14d28:	mov	r1, r7
   14d2c:	mov	r0, r6
   14d30:	bl	141e4 <table_set_uchar@@Base>
   14d34:	mov	r5, #0
   14d38:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14d3c:	add	r2, sp, #8
   14d40:	ldr	r1, [pc, #124]	; 14dc4 <table_cell_from_buffer@@Base+0x650>
   14d44:	mov	r0, r5
   14d48:	bl	11c3c <__isoc99_sscanf@plt>
   14d4c:	cmp	r0, #1
   14d50:	mvnne	r5, #0
   14d54:	beq	14d64 <table_cell_from_buffer@@Base+0x5f0>
   14d58:	mov	r0, r5
   14d5c:	add	sp, sp, #268	; 0x10c
   14d60:	pop	{r4, r5, r6, r7, pc}
   14d64:	ldr	r3, [sp, #8]
   14d68:	mov	r2, r4
   14d6c:	mov	r1, r7
   14d70:	mov	r0, r6
   14d74:	bl	1420c <table_set_ptr@@Base>
   14d78:	mov	r5, #0
   14d7c:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14d80:	mov	r5, #0
   14d84:	b	14d58 <table_cell_from_buffer@@Base+0x5e4>
   14d88:	muleq	r1, ip, r1
   14d8c:	andeq	r5, r1, r0, lsr #3
   14d90:	ldrdeq	r5, [r1], -ip
   14d94:	andeq	r5, r1, r4, ror #3
   14d98:			; <UNDEFINED> instruction: 0x000151b4
   14d9c:			; <UNDEFINED> instruction: 0x000151b8
   14da0:	andeq	r5, r1, r4, lsr #3
   14da4:	andeq	r5, r1, ip, lsr #3
   14da8:			; <UNDEFINED> instruction: 0x000151bc
   14dac:	andeq	r5, r1, r0, asr #3
   14db0:	andeq	r5, r1, r4, asr #3
   14db4:	andeq	r5, r1, r8, asr #3
   14db8:	andeq	r5, r1, ip, asr #3
   14dbc:	ldrdeq	r5, [r1], -r0
   14dc0:	ldrdeq	r5, [r1], -r4
   14dc4:	ldrdeq	r5, [r1], -r8

00014dc8 <table_get_cell_ptr@@Base>:
   14dc8:	push	{r4, lr}
   14dcc:	mov	r4, r2
   14dd0:	bl	13830 <table_get_row_ptr@@Base>
   14dd4:	ldr	r0, [r0]
   14dd8:	add	r0, r0, r4, lsl #2
   14ddc:	pop	{r4, pc}

00014de0 <table_cell_init@@Base>:
   14de0:	push	{r4, lr}
   14de4:	bl	14dc8 <table_get_cell_ptr@@Base>
   14de8:	mov	r3, #0
   14dec:	str	r3, [r0]
   14df0:	pop	{r4, pc}

00014df4 <table_cell_destroy@@Base>:
   14df4:	push	{r4, r5, r6, lr}
   14df8:	mov	r5, r0
   14dfc:	mov	r6, r1
   14e00:	mov	r4, r2
   14e04:	mov	r1, r2
   14e08:	bl	12904 <table_get_column_data_type@@Base>
   14e0c:	cmp	r0, #23
   14e10:	popeq	{r4, r5, r6, pc}
   14e14:	mov	r2, r4
   14e18:	mov	r1, r6
   14e1c:	mov	r0, r5
   14e20:	bl	14dc8 <table_get_cell_ptr@@Base>
   14e24:	ldr	r0, [r0]
   14e28:	cmp	r0, #0
   14e2c:	popeq	{r4, r5, r6, pc}
   14e30:	bl	11bc4 <free@plt>
   14e34:	pop	{r4, r5, r6, pc}

00014e38 <table_cell_nullify@@Base>:
   14e38:	push	{r4, lr}
   14e3c:	bl	14dc8 <table_get_cell_ptr@@Base>
   14e40:	mov	r4, r0
   14e44:	ldr	r0, [r0]
   14e48:	cmp	r0, #0
   14e4c:	beq	14e5c <table_cell_nullify@@Base+0x24>
   14e50:	bl	11bc4 <free@plt>
   14e54:	mov	r3, #0
   14e58:	str	r3, [r4]
   14e5c:	mov	r0, #0
   14e60:	pop	{r4, pc}
   14e64:	subs	r2, r1, #1
   14e68:	bxeq	lr
   14e6c:	bcc	15044 <table_cell_nullify@@Base+0x20c>
   14e70:	cmp	r0, r1
   14e74:	bls	15028 <table_cell_nullify@@Base+0x1f0>
   14e78:	tst	r1, r2
   14e7c:	beq	15034 <table_cell_nullify@@Base+0x1fc>
   14e80:	clz	r3, r0
   14e84:	clz	r2, r1
   14e88:	sub	r3, r2, r3
   14e8c:	rsbs	r3, r3, #31
   14e90:	addne	r3, r3, r3, lsl #1
   14e94:	mov	r2, #0
   14e98:	addne	pc, pc, r3, lsl #2
   14e9c:	nop			; (mov r0, r0)
   14ea0:	cmp	r0, r1, lsl #31
   14ea4:	adc	r2, r2, r2
   14ea8:	subcs	r0, r0, r1, lsl #31
   14eac:	cmp	r0, r1, lsl #30
   14eb0:	adc	r2, r2, r2
   14eb4:	subcs	r0, r0, r1, lsl #30
   14eb8:	cmp	r0, r1, lsl #29
   14ebc:	adc	r2, r2, r2
   14ec0:	subcs	r0, r0, r1, lsl #29
   14ec4:	cmp	r0, r1, lsl #28
   14ec8:	adc	r2, r2, r2
   14ecc:	subcs	r0, r0, r1, lsl #28
   14ed0:	cmp	r0, r1, lsl #27
   14ed4:	adc	r2, r2, r2
   14ed8:	subcs	r0, r0, r1, lsl #27
   14edc:	cmp	r0, r1, lsl #26
   14ee0:	adc	r2, r2, r2
   14ee4:	subcs	r0, r0, r1, lsl #26
   14ee8:	cmp	r0, r1, lsl #25
   14eec:	adc	r2, r2, r2
   14ef0:	subcs	r0, r0, r1, lsl #25
   14ef4:	cmp	r0, r1, lsl #24
   14ef8:	adc	r2, r2, r2
   14efc:	subcs	r0, r0, r1, lsl #24
   14f00:	cmp	r0, r1, lsl #23
   14f04:	adc	r2, r2, r2
   14f08:	subcs	r0, r0, r1, lsl #23
   14f0c:	cmp	r0, r1, lsl #22
   14f10:	adc	r2, r2, r2
   14f14:	subcs	r0, r0, r1, lsl #22
   14f18:	cmp	r0, r1, lsl #21
   14f1c:	adc	r2, r2, r2
   14f20:	subcs	r0, r0, r1, lsl #21
   14f24:	cmp	r0, r1, lsl #20
   14f28:	adc	r2, r2, r2
   14f2c:	subcs	r0, r0, r1, lsl #20
   14f30:	cmp	r0, r1, lsl #19
   14f34:	adc	r2, r2, r2
   14f38:	subcs	r0, r0, r1, lsl #19
   14f3c:	cmp	r0, r1, lsl #18
   14f40:	adc	r2, r2, r2
   14f44:	subcs	r0, r0, r1, lsl #18
   14f48:	cmp	r0, r1, lsl #17
   14f4c:	adc	r2, r2, r2
   14f50:	subcs	r0, r0, r1, lsl #17
   14f54:	cmp	r0, r1, lsl #16
   14f58:	adc	r2, r2, r2
   14f5c:	subcs	r0, r0, r1, lsl #16
   14f60:	cmp	r0, r1, lsl #15
   14f64:	adc	r2, r2, r2
   14f68:	subcs	r0, r0, r1, lsl #15
   14f6c:	cmp	r0, r1, lsl #14
   14f70:	adc	r2, r2, r2
   14f74:	subcs	r0, r0, r1, lsl #14
   14f78:	cmp	r0, r1, lsl #13
   14f7c:	adc	r2, r2, r2
   14f80:	subcs	r0, r0, r1, lsl #13
   14f84:	cmp	r0, r1, lsl #12
   14f88:	adc	r2, r2, r2
   14f8c:	subcs	r0, r0, r1, lsl #12
   14f90:	cmp	r0, r1, lsl #11
   14f94:	adc	r2, r2, r2
   14f98:	subcs	r0, r0, r1, lsl #11
   14f9c:	cmp	r0, r1, lsl #10
   14fa0:	adc	r2, r2, r2
   14fa4:	subcs	r0, r0, r1, lsl #10
   14fa8:	cmp	r0, r1, lsl #9
   14fac:	adc	r2, r2, r2
   14fb0:	subcs	r0, r0, r1, lsl #9
   14fb4:	cmp	r0, r1, lsl #8
   14fb8:	adc	r2, r2, r2
   14fbc:	subcs	r0, r0, r1, lsl #8
   14fc0:	cmp	r0, r1, lsl #7
   14fc4:	adc	r2, r2, r2
   14fc8:	subcs	r0, r0, r1, lsl #7
   14fcc:	cmp	r0, r1, lsl #6
   14fd0:	adc	r2, r2, r2
   14fd4:	subcs	r0, r0, r1, lsl #6
   14fd8:	cmp	r0, r1, lsl #5
   14fdc:	adc	r2, r2, r2
   14fe0:	subcs	r0, r0, r1, lsl #5
   14fe4:	cmp	r0, r1, lsl #4
   14fe8:	adc	r2, r2, r2
   14fec:	subcs	r0, r0, r1, lsl #4
   14ff0:	cmp	r0, r1, lsl #3
   14ff4:	adc	r2, r2, r2
   14ff8:	subcs	r0, r0, r1, lsl #3
   14ffc:	cmp	r0, r1, lsl #2
   15000:	adc	r2, r2, r2
   15004:	subcs	r0, r0, r1, lsl #2
   15008:	cmp	r0, r1, lsl #1
   1500c:	adc	r2, r2, r2
   15010:	subcs	r0, r0, r1, lsl #1
   15014:	cmp	r0, r1
   15018:	adc	r2, r2, r2
   1501c:	subcs	r0, r0, r1
   15020:	mov	r0, r2
   15024:	bx	lr
   15028:	moveq	r0, #1
   1502c:	movne	r0, #0
   15030:	bx	lr
   15034:	clz	r2, r1
   15038:	rsb	r2, r2, #31
   1503c:	lsr	r0, r0, r2
   15040:	bx	lr
   15044:	cmp	r0, #0
   15048:	mvnne	r0, #0
   1504c:	b	15070 <table_cell_nullify@@Base+0x238>
   15050:	cmp	r1, #0
   15054:	beq	15044 <table_cell_nullify@@Base+0x20c>
   15058:	push	{r0, r1, lr}
   1505c:	bl	14e64 <table_cell_nullify@@Base+0x2c>
   15060:	pop	{r1, r2, lr}
   15064:	mul	r3, r2, r0
   15068:	sub	r1, r1, r3
   1506c:	bx	lr
   15070:	push	{r1, lr}
   15074:	mov	r0, #8
   15078:	bl	11ba0 <raise@plt>
   1507c:	pop	{r1, pc}

00015080 <__libc_csu_init@@Base>:
   15080:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15084:	mov	r7, r0
   15088:	ldr	r6, [pc, #72]	; 150d8 <__libc_csu_init@@Base+0x58>
   1508c:	ldr	r5, [pc, #72]	; 150dc <__libc_csu_init@@Base+0x5c>
   15090:	add	r6, pc, r6
   15094:	add	r5, pc, r5
   15098:	sub	r6, r6, r5
   1509c:	mov	r8, r1
   150a0:	mov	r9, r2
   150a4:	bl	11b80 <raise@plt-0x20>
   150a8:	asrs	r6, r6, #2
   150ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   150b0:	mov	r4, #0
   150b4:	add	r4, r4, #1
   150b8:	ldr	r3, [r5], #4
   150bc:	mov	r2, r9
   150c0:	mov	r1, r8
   150c4:	mov	r0, r7
   150c8:	blx	r3
   150cc:	cmp	r6, r4
   150d0:	bne	150b4 <__libc_csu_init@@Base+0x34>
   150d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   150d8:	andeq	r0, r1, r8, ror lr
   150dc:	andeq	r0, r1, r0, ror lr

000150e0 <__libc_csu_fini@@Base>:
   150e0:	bx	lr

Disassembly of section .fini:

000150e4 <.fini>:
   150e4:	push	{r3, lr}
   150e8:	pop	{r3, pc}
