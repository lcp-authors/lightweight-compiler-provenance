
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf32-littlearm


Disassembly of section .init:

000125b8 <.init>:
   125b8:	push	{r3, lr}
   125bc:	bl	1274c <_start@@Base+0x3c>
   125c0:	pop	{r3, pc}

Disassembly of section .plt:

000125c4 <raise@plt-0x14>:
   125c4:	push	{lr}		; (str lr, [sp, #-4]!)
   125c8:	ldr	lr, [pc, #4]	; 125d4 <raise@plt-0x4>
   125cc:	add	lr, pc, lr
   125d0:	ldr	pc, [lr, #8]!
   125d4:	andeq	r5, r3, ip, lsr #20

000125d8 <raise@plt>:
   125d8:	add	ip, pc, #0, 12
   125dc:	add	ip, ip, #217088	; 0x35000
   125e0:	ldr	pc, [ip, #2604]!	; 0xa2c

000125e4 <fopen@plt>:
   125e4:	add	ip, pc, #0, 12
   125e8:	add	ip, ip, #217088	; 0x35000
   125ec:	ldr	pc, [ip, #2596]!	; 0xa24

000125f0 <free@plt>:
   125f0:	add	ip, pc, #0, 12
   125f4:	add	ip, ip, #217088	; 0x35000
   125f8:	ldr	pc, [ip, #2588]!	; 0xa1c

000125fc <memcpy@plt>:
   125fc:	add	ip, pc, #0, 12
   12600:	add	ip, ip, #217088	; 0x35000
   12604:	ldr	pc, [ip, #2580]!	; 0xa14

00012608 <ftell@plt>:
   12608:	add	ip, pc, #0, 12
   1260c:	add	ip, ip, #217088	; 0x35000
   12610:	ldr	pc, [ip, #2572]!	; 0xa0c

00012614 <memcmp@plt>:
   12614:	add	ip, pc, #0, 12
   12618:	add	ip, ip, #217088	; 0x35000
   1261c:	ldr	pc, [ip, #2564]!	; 0xa04

00012620 <rewind@plt>:
   12620:	add	ip, pc, #0, 12
   12624:	add	ip, ip, #217088	; 0x35000
   12628:	ldr	pc, [ip, #2556]!	; 0x9fc

0001262c <realloc@plt>:
   1262c:	add	ip, pc, #0, 12
   12630:	add	ip, ip, #217088	; 0x35000
   12634:	ldr	pc, [ip, #2548]!	; 0x9f4

00012638 <fwrite@plt>:
   12638:	add	ip, pc, #0, 12
   1263c:	add	ip, ip, #217088	; 0x35000
   12640:	ldr	pc, [ip, #2540]!	; 0x9ec

00012644 <fread@plt>:
   12644:	add	ip, pc, #0, 12
   12648:	add	ip, ip, #217088	; 0x35000
   1264c:	ldr	pc, [ip, #2532]!	; 0x9e4

00012650 <malloc@plt>:
   12650:	add	ip, pc, #0, 12
   12654:	add	ip, ip, #217088	; 0x35000
   12658:	ldr	pc, [ip, #2524]!	; 0x9dc

0001265c <__libc_start_main@plt>:
   1265c:	add	ip, pc, #0, 12
   12660:	add	ip, ip, #217088	; 0x35000
   12664:	ldr	pc, [ip, #2516]!	; 0x9d4

00012668 <__gmon_start__@plt>:
   12668:	add	ip, pc, #0, 12
   1266c:	add	ip, ip, #217088	; 0x35000
   12670:	ldr	pc, [ip, #2508]!	; 0x9cc

00012674 <exit@plt>:
   12674:	add	ip, pc, #0, 12
   12678:	add	ip, ip, #217088	; 0x35000
   1267c:	ldr	pc, [ip, #2500]!	; 0x9c4

00012680 <strlen@plt>:
   12680:	add	ip, pc, #0, 12
   12684:	add	ip, ip, #217088	; 0x35000
   12688:	ldr	pc, [ip, #2492]!	; 0x9bc

0001268c <fprintf@plt>:
   1268c:	add	ip, pc, #0, 12
   12690:	add	ip, ip, #217088	; 0x35000
   12694:	ldr	pc, [ip, #2484]!	; 0x9b4

00012698 <posix_memalign@plt>:
   12698:	add	ip, pc, #0, 12
   1269c:	add	ip, ip, #217088	; 0x35000
   126a0:	ldr	pc, [ip, #2476]!	; 0x9ac

000126a4 <memset@plt>:
   126a4:	add	ip, pc, #0, 12
   126a8:	add	ip, ip, #217088	; 0x35000
   126ac:	ldr	pc, [ip, #2468]!	; 0x9a4

000126b0 <strncpy@plt>:
   126b0:	add	ip, pc, #0, 12
   126b4:	add	ip, ip, #217088	; 0x35000
   126b8:	ldr	pc, [ip, #2460]!	; 0x99c

000126bc <strtod@plt>:
   126bc:	add	ip, pc, #0, 12
   126c0:	add	ip, ip, #217088	; 0x35000
   126c4:	ldr	pc, [ip, #2452]!	; 0x994

000126c8 <memchr@plt>:
   126c8:	add	ip, pc, #0, 12
   126cc:	add	ip, ip, #217088	; 0x35000
   126d0:	ldr	pc, [ip, #2444]!	; 0x98c

000126d4 <fclose@plt>:
   126d4:	add	ip, pc, #0, 12
   126d8:	add	ip, ip, #217088	; 0x35000
   126dc:	ldr	pc, [ip, #2436]!	; 0x984

000126e0 <fputc@plt>:
   126e0:	add	ip, pc, #0, 12
   126e4:	add	ip, ip, #217088	; 0x35000
   126e8:	ldr	pc, [ip, #2428]!	; 0x97c

000126ec <fseek@plt>:
   126ec:	add	ip, pc, #0, 12
   126f0:	add	ip, ip, #217088	; 0x35000
   126f4:	ldr	pc, [ip, #2420]!	; 0x974

000126f8 <abort@plt>:
   126f8:	add	ip, pc, #0, 12
   126fc:	add	ip, ip, #217088	; 0x35000
   12700:	ldr	pc, [ip, #2412]!	; 0x96c

00012704 <__assert_fail@plt>:
   12704:	add	ip, pc, #0, 12
   12708:	add	ip, ip, #217088	; 0x35000
   1270c:	ldr	pc, [ip, #2404]!	; 0x964

Disassembly of section .text:

00012710 <_start@@Base>:
   12710:	mov	fp, #0
   12714:	mov	lr, #0
   12718:	pop	{r1}		; (ldr r1, [sp], #4)
   1271c:	mov	r2, sp
   12720:	push	{r2}		; (str r2, [sp, #-4]!)
   12724:	push	{r0}		; (str r0, [sp, #-4]!)
   12728:	ldr	ip, [pc, #16]	; 12740 <_start@@Base+0x30>
   1272c:	push	{ip}		; (str ip, [sp, #-4]!)
   12730:	ldr	r0, [pc, #12]	; 12744 <_start@@Base+0x34>
   12734:	ldr	r3, [pc, #12]	; 12748 <_start@@Base+0x38>
   12738:	bl	1265c <__libc_start_main@plt>
   1273c:	bl	126f8 <abort@plt>
   12740:	strdeq	r5, [r3], -r0
   12744:	muleq	r2, ip, r8
   12748:	muleq	r3, r0, r4
   1274c:	ldr	r3, [pc, #20]	; 12768 <_start@@Base+0x58>
   12750:	ldr	r2, [pc, #20]	; 1276c <_start@@Base+0x5c>
   12754:	add	r3, pc, r3
   12758:	ldr	r2, [r3, r2]
   1275c:	cmp	r2, #0
   12760:	bxeq	lr
   12764:	b	12668 <__gmon_start__@plt>
   12768:	andeq	r5, r3, r4, lsr #17
   1276c:	andeq	r0, r0, ip, ror r0
   12770:	ldr	r3, [pc, #28]	; 12794 <_start@@Base+0x84>
   12774:	ldr	r0, [pc, #28]	; 12798 <_start@@Base+0x88>
   12778:	sub	r3, r3, r0
   1277c:	cmp	r3, #6
   12780:	bxls	lr
   12784:	ldr	r3, [pc, #16]	; 1279c <_start@@Base+0x8c>
   12788:	cmp	r3, #0
   1278c:	bxeq	lr
   12790:	bx	r3
   12794:			; <UNDEFINED> instruction: 0x000484bb
   12798:			; <UNDEFINED> instruction: 0x000484b8
   1279c:	andeq	r0, r0, r0
   127a0:	ldr	r1, [pc, #36]	; 127cc <_start@@Base+0xbc>
   127a4:	ldr	r0, [pc, #36]	; 127d0 <_start@@Base+0xc0>
   127a8:	sub	r1, r1, r0
   127ac:	asr	r1, r1, #2
   127b0:	add	r1, r1, r1, lsr #31
   127b4:	asrs	r1, r1, #1
   127b8:	bxeq	lr
   127bc:	ldr	r3, [pc, #16]	; 127d4 <_start@@Base+0xc4>
   127c0:	cmp	r3, #0
   127c4:	bxeq	lr
   127c8:	bx	r3
   127cc:			; <UNDEFINED> instruction: 0x000484b8
   127d0:			; <UNDEFINED> instruction: 0x000484b8
   127d4:	andeq	r0, r0, r0
   127d8:	push	{r4, lr}
   127dc:	ldr	r4, [pc, #24]	; 127fc <_start@@Base+0xec>
   127e0:	ldrb	r3, [r4]
   127e4:	cmp	r3, #0
   127e8:	popne	{r4, pc}
   127ec:	bl	12770 <_start@@Base+0x60>
   127f0:	mov	r3, #1
   127f4:	strb	r3, [r4]
   127f8:	pop	{r4, pc}
   127fc:			; <UNDEFINED> instruction: 0x000484b8
   12800:	ldr	r0, [pc, #40]	; 12830 <_start@@Base+0x120>
   12804:	ldr	r3, [r0]
   12808:	cmp	r3, #0
   1280c:	bne	12814 <_start@@Base+0x104>
   12810:	b	127a0 <_start@@Base+0x90>
   12814:	ldr	r3, [pc, #24]	; 12834 <_start@@Base+0x124>
   12818:	cmp	r3, #0
   1281c:	beq	12810 <_start@@Base+0x100>
   12820:	push	{r4, lr}
   12824:	blx	r3
   12828:	pop	{r4, lr}
   1282c:	b	127a0 <_start@@Base+0x90>
   12830:	andeq	r7, r4, r4, lsl pc
   12834:	andeq	r0, r0, r0
   12838:	push	{fp}		; (str fp, [sp, #-4]!)
   1283c:	add	fp, sp, #0
   12840:	sub	sp, sp, #12
   12844:	mov	r3, r0
   12848:	strb	r3, [fp, #-5]
   1284c:	ldrb	r3, [fp, #-5]
   12850:	mov	r0, r3
   12854:	add	sp, fp, #0
   12858:	pop	{fp}		; (ldr fp, [sp], #4)
   1285c:	bx	lr
   12860:	push	{fp, lr}
   12864:	add	fp, sp, #4
   12868:	sub	sp, sp, #8
   1286c:	str	r0, [fp, #-8]
   12870:	mov	r3, r1
   12874:	strb	r3, [fp, #-9]
   12878:	ldrb	r3, [fp, #-9]
   1287c:	mov	r0, r3
   12880:	bl	12838 <_start@@Base+0x128>
   12884:	mov	r3, r0
   12888:	mov	r2, r3
   1288c:	ldr	r3, [fp, #-8]
   12890:	strb	r2, [r3]
   12894:	nop			; (mov r0, r0)
   12898:	sub	sp, fp, #4
   1289c:	pop	{fp, pc}
   128a0:	push	{fp}		; (str fp, [sp, #-4]!)
   128a4:	add	fp, sp, #0
   128a8:	sub	sp, sp, #12
   128ac:	mov	r3, r0
   128b0:	strh	r3, [fp, #-6]
   128b4:	ldrh	r3, [fp, #-6]
   128b8:	mov	r0, r3
   128bc:	add	sp, fp, #0
   128c0:	pop	{fp}		; (ldr fp, [sp], #4)
   128c4:	bx	lr
   128c8:	push	{fp, lr}
   128cc:	add	fp, sp, #4
   128d0:	sub	sp, sp, #8
   128d4:	str	r0, [fp, #-8]
   128d8:	mov	r3, r1
   128dc:	strh	r3, [fp, #-10]
   128e0:	ldrh	r3, [fp, #-10]
   128e4:	mov	r0, r3
   128e8:	bl	128a0 <_start@@Base+0x190>
   128ec:	mov	r3, r0
   128f0:	mov	r2, r3
   128f4:	ldr	r3, [fp, #-8]
   128f8:	strh	r2, [r3]
   128fc:	nop			; (mov r0, r0)
   12900:	sub	sp, fp, #4
   12904:	pop	{fp, pc}
   12908:	push	{fp}		; (str fp, [sp, #-4]!)
   1290c:	add	fp, sp, #0
   12910:	sub	sp, sp, #12
   12914:	str	r0, [fp, #-8]
   12918:	ldr	r3, [fp, #-8]
   1291c:	mov	r0, r3
   12920:	add	sp, fp, #0
   12924:	pop	{fp}		; (ldr fp, [sp], #4)
   12928:	bx	lr
   1292c:	push	{fp, lr}
   12930:	add	fp, sp, #4
   12934:	sub	sp, sp, #8
   12938:	str	r0, [fp, #-8]
   1293c:	str	r1, [fp, #-12]
   12940:	ldr	r0, [fp, #-12]
   12944:	bl	12908 <_start@@Base+0x1f8>
   12948:	mov	r2, r0
   1294c:	ldr	r3, [fp, #-8]
   12950:	str	r2, [r3]
   12954:	nop			; (mov r0, r0)
   12958:	sub	sp, fp, #4
   1295c:	pop	{fp, pc}
   12960:	push	{fp}		; (str fp, [sp, #-4]!)
   12964:	add	fp, sp, #0
   12968:	sub	sp, sp, #12
   1296c:	strd	r0, [fp, #-12]
   12970:	ldrd	r2, [fp, #-12]
   12974:	mov	r0, r2
   12978:	mov	r1, r3
   1297c:	add	sp, fp, #0
   12980:	pop	{fp}		; (ldr fp, [sp], #4)
   12984:	bx	lr
   12988:	push	{fp, lr}
   1298c:	add	fp, sp, #4
   12990:	sub	sp, sp, #16
   12994:	str	r0, [fp, #-8]
   12998:	strd	r2, [fp, #-20]	; 0xffffffec
   1299c:	ldrd	r0, [fp, #-20]	; 0xffffffec
   129a0:	bl	12960 <_start@@Base+0x250>
   129a4:	mov	r2, r0
   129a8:	mov	r3, r1
   129ac:	ldr	r1, [fp, #-8]
   129b0:	strd	r2, [r1]
   129b4:	nop			; (mov r0, r0)
   129b8:	sub	sp, fp, #4
   129bc:	pop	{fp, pc}
   129c0:	push	{fp}		; (str fp, [sp, #-4]!)
   129c4:	add	fp, sp, #0
   129c8:	sub	sp, sp, #12
   129cc:	mov	r3, r0
   129d0:	strb	r3, [fp, #-5]
   129d4:	ldrsb	r3, [fp, #-5]
   129d8:	mov	r0, r3
   129dc:	add	sp, fp, #0
   129e0:	pop	{fp}		; (ldr fp, [sp], #4)
   129e4:	bx	lr
   129e8:	push	{fp}		; (str fp, [sp, #-4]!)
   129ec:	add	fp, sp, #0
   129f0:	sub	sp, sp, #12
   129f4:	mov	r3, r0
   129f8:	strb	r3, [fp, #-5]
   129fc:	ldrsb	r3, [fp, #-5]
   12a00:	mov	r0, r3
   12a04:	add	sp, fp, #0
   12a08:	pop	{fp}		; (ldr fp, [sp], #4)
   12a0c:	bx	lr
   12a10:	push	{fp, lr}
   12a14:	add	fp, sp, #4
   12a18:	sub	sp, sp, #8
   12a1c:	str	r0, [fp, #-8]
   12a20:	ldr	r3, [fp, #-8]
   12a24:	ldrsb	r3, [r3]
   12a28:	mov	r0, r3
   12a2c:	bl	129c0 <_start@@Base+0x2b0>
   12a30:	mov	r3, r0
   12a34:	mov	r0, r3
   12a38:	sub	sp, fp, #4
   12a3c:	pop	{fp, pc}
   12a40:	push	{fp, lr}
   12a44:	add	fp, sp, #4
   12a48:	sub	sp, sp, #8
   12a4c:	str	r0, [fp, #-8]
   12a50:	mov	r3, r1
   12a54:	strb	r3, [fp, #-9]
   12a58:	ldrsb	r3, [fp, #-9]
   12a5c:	mov	r0, r3
   12a60:	bl	129e8 <_start@@Base+0x2d8>
   12a64:	mov	r3, r0
   12a68:	mov	r2, r3
   12a6c:	ldr	r3, [fp, #-8]
   12a70:	strb	r2, [r3]
   12a74:	nop			; (mov r0, r0)
   12a78:	sub	sp, fp, #4
   12a7c:	pop	{fp, pc}
   12a80:	push	{fp}		; (str fp, [sp, #-4]!)
   12a84:	add	fp, sp, #0
   12a88:	sub	sp, sp, #12
   12a8c:	mov	r3, r0
   12a90:	strh	r3, [fp, #-6]
   12a94:	ldrsh	r3, [fp, #-6]
   12a98:	mov	r0, r3
   12a9c:	add	sp, fp, #0
   12aa0:	pop	{fp}		; (ldr fp, [sp], #4)
   12aa4:	bx	lr
   12aa8:	push	{fp}		; (str fp, [sp, #-4]!)
   12aac:	add	fp, sp, #0
   12ab0:	sub	sp, sp, #12
   12ab4:	mov	r3, r0
   12ab8:	strh	r3, [fp, #-6]
   12abc:	ldrsh	r3, [fp, #-6]
   12ac0:	mov	r0, r3
   12ac4:	add	sp, fp, #0
   12ac8:	pop	{fp}		; (ldr fp, [sp], #4)
   12acc:	bx	lr
   12ad0:	push	{fp, lr}
   12ad4:	add	fp, sp, #4
   12ad8:	sub	sp, sp, #8
   12adc:	str	r0, [fp, #-8]
   12ae0:	ldr	r3, [fp, #-8]
   12ae4:	ldrsh	r3, [r3]
   12ae8:	mov	r0, r3
   12aec:	bl	12a80 <_start@@Base+0x370>
   12af0:	mov	r3, r0
   12af4:	mov	r0, r3
   12af8:	sub	sp, fp, #4
   12afc:	pop	{fp, pc}
   12b00:	push	{fp, lr}
   12b04:	add	fp, sp, #4
   12b08:	sub	sp, sp, #8
   12b0c:	str	r0, [fp, #-8]
   12b10:	mov	r3, r1
   12b14:	strh	r3, [fp, #-10]
   12b18:	ldrsh	r3, [fp, #-10]
   12b1c:	mov	r0, r3
   12b20:	bl	12aa8 <_start@@Base+0x398>
   12b24:	mov	r3, r0
   12b28:	mov	r2, r3
   12b2c:	ldr	r3, [fp, #-8]
   12b30:	strh	r2, [r3]
   12b34:	nop			; (mov r0, r0)
   12b38:	sub	sp, fp, #4
   12b3c:	pop	{fp, pc}
   12b40:	push	{fp}		; (str fp, [sp, #-4]!)
   12b44:	add	fp, sp, #0
   12b48:	sub	sp, sp, #12
   12b4c:	str	r0, [fp, #-8]
   12b50:	ldr	r3, [fp, #-8]
   12b54:	mov	r0, r3
   12b58:	add	sp, fp, #0
   12b5c:	pop	{fp}		; (ldr fp, [sp], #4)
   12b60:	bx	lr
   12b64:	push	{fp, lr}
   12b68:	add	fp, sp, #4
   12b6c:	sub	sp, sp, #8
   12b70:	str	r0, [fp, #-8]
   12b74:	str	r1, [fp, #-12]
   12b78:	ldr	r0, [fp, #-12]
   12b7c:	bl	12b40 <_start@@Base+0x430>
   12b80:	mov	r2, r0
   12b84:	ldr	r3, [fp, #-8]
   12b88:	str	r2, [r3]
   12b8c:	nop			; (mov r0, r0)
   12b90:	sub	sp, fp, #4
   12b94:	pop	{fp, pc}
   12b98:	push	{fp}		; (str fp, [sp, #-4]!)
   12b9c:	add	fp, sp, #0
   12ba0:	sub	sp, sp, #12
   12ba4:	strd	r0, [fp, #-12]
   12ba8:	ldrd	r2, [fp, #-12]
   12bac:	mov	r0, r2
   12bb0:	mov	r1, r3
   12bb4:	add	sp, fp, #0
   12bb8:	pop	{fp}		; (ldr fp, [sp], #4)
   12bbc:	bx	lr
   12bc0:	push	{fp, lr}
   12bc4:	add	fp, sp, #4
   12bc8:	sub	sp, sp, #16
   12bcc:	str	r0, [fp, #-8]
   12bd0:	strd	r2, [fp, #-20]	; 0xffffffec
   12bd4:	ldrd	r0, [fp, #-20]	; 0xffffffec
   12bd8:	bl	12b98 <_start@@Base+0x488>
   12bdc:	mov	r2, r0
   12be0:	mov	r3, r1
   12be4:	ldr	r1, [fp, #-8]
   12be8:	strd	r2, [r1]
   12bec:	nop			; (mov r0, r0)
   12bf0:	sub	sp, fp, #4
   12bf4:	pop	{fp, pc}
   12bf8:	push	{fp}		; (str fp, [sp, #-4]!)
   12bfc:	add	fp, sp, #0
   12c00:	sub	sp, sp, #20
   12c04:	vstr	s0, [fp, #-16]
   12c08:	ldr	r3, [fp, #-16]
   12c0c:	str	r3, [fp, #-8]
   12c10:	ldr	r3, [fp, #-8]
   12c14:	str	r3, [fp, #-8]
   12c18:	ldr	r3, [fp, #-8]
   12c1c:	vmov	s15, r3
   12c20:	vmov.f32	s0, s15
   12c24:	add	sp, fp, #0
   12c28:	pop	{fp}		; (ldr fp, [sp], #4)
   12c2c:	bx	lr
   12c30:	push	{fp}		; (str fp, [sp, #-4]!)
   12c34:	add	fp, sp, #0
   12c38:	sub	sp, sp, #20
   12c3c:	vstr	s0, [fp, #-16]
   12c40:	ldr	r3, [fp, #-16]
   12c44:	str	r3, [fp, #-8]
   12c48:	ldr	r3, [fp, #-8]
   12c4c:	str	r3, [fp, #-8]
   12c50:	ldr	r3, [fp, #-8]
   12c54:	vmov	s15, r3
   12c58:	vmov.f32	s0, s15
   12c5c:	add	sp, fp, #0
   12c60:	pop	{fp}		; (ldr fp, [sp], #4)
   12c64:	bx	lr
   12c68:	push	{fp, lr}
   12c6c:	add	fp, sp, #4
   12c70:	sub	sp, sp, #8
   12c74:	str	r0, [fp, #-8]
   12c78:	ldr	r3, [fp, #-8]
   12c7c:	vldr	s15, [r3]
   12c80:	vmov.f32	s0, s15
   12c84:	bl	12bf8 <_start@@Base+0x4e8>
   12c88:	vmov.f32	s15, s0
   12c8c:	vmov.f32	s0, s15
   12c90:	sub	sp, fp, #4
   12c94:	pop	{fp, pc}
   12c98:	push	{fp, lr}
   12c9c:	add	fp, sp, #4
   12ca0:	sub	sp, sp, #8
   12ca4:	str	r0, [fp, #-8]
   12ca8:	vstr	s0, [fp, #-12]
   12cac:	vldr	s0, [fp, #-12]
   12cb0:	bl	12c30 <_start@@Base+0x520>
   12cb4:	vmov.f32	s15, s0
   12cb8:	ldr	r3, [fp, #-8]
   12cbc:	vstr	s15, [r3]
   12cc0:	nop			; (mov r0, r0)
   12cc4:	sub	sp, fp, #4
   12cc8:	pop	{fp, pc}
   12ccc:	push	{fp}		; (str fp, [sp, #-4]!)
   12cd0:	add	fp, sp, #0
   12cd4:	sub	sp, sp, #20
   12cd8:	vstr	d0, [fp, #-20]	; 0xffffffec
   12cdc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12ce0:	strd	r2, [fp, #-12]
   12ce4:	ldrd	r2, [fp, #-12]
   12ce8:	strd	r2, [fp, #-12]
   12cec:	ldrd	r2, [fp, #-12]
   12cf0:	vmov	d7, r2, r3
   12cf4:	vmov.f64	d0, d7
   12cf8:	add	sp, fp, #0
   12cfc:	pop	{fp}		; (ldr fp, [sp], #4)
   12d00:	bx	lr
   12d04:	push	{fp}		; (str fp, [sp, #-4]!)
   12d08:	add	fp, sp, #0
   12d0c:	sub	sp, sp, #20
   12d10:	vstr	d0, [fp, #-20]	; 0xffffffec
   12d14:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12d18:	strd	r2, [fp, #-12]
   12d1c:	ldrd	r2, [fp, #-12]
   12d20:	strd	r2, [fp, #-12]
   12d24:	ldrd	r2, [fp, #-12]
   12d28:	vmov	d7, r2, r3
   12d2c:	vmov.f64	d0, d7
   12d30:	add	sp, fp, #0
   12d34:	pop	{fp}		; (ldr fp, [sp], #4)
   12d38:	bx	lr
   12d3c:	push	{fp, lr}
   12d40:	add	fp, sp, #4
   12d44:	sub	sp, sp, #8
   12d48:	str	r0, [fp, #-8]
   12d4c:	ldr	r3, [fp, #-8]
   12d50:	vldr	d7, [r3]
   12d54:	vmov.f64	d0, d7
   12d58:	bl	12ccc <_start@@Base+0x5bc>
   12d5c:	vmov.f64	d7, d0
   12d60:	vmov.f64	d0, d7
   12d64:	sub	sp, fp, #4
   12d68:	pop	{fp, pc}
   12d6c:	push	{fp, lr}
   12d70:	add	fp, sp, #4
   12d74:	sub	sp, sp, #16
   12d78:	str	r0, [fp, #-8]
   12d7c:	vstr	d0, [fp, #-20]	; 0xffffffec
   12d80:	vldr	d0, [fp, #-20]	; 0xffffffec
   12d84:	bl	12d04 <_start@@Base+0x5f4>
   12d88:	vmov.f64	d7, d0
   12d8c:	ldr	r3, [fp, #-8]
   12d90:	vstr	d7, [r3]
   12d94:	nop			; (mov r0, r0)
   12d98:	sub	sp, fp, #4
   12d9c:	pop	{fp, pc}
   12da0:	push	{fp}		; (str fp, [sp, #-4]!)
   12da4:	add	fp, sp, #0
   12da8:	sub	sp, sp, #12
   12dac:	mov	r3, r0
   12db0:	strb	r3, [fp, #-5]
   12db4:	ldrb	r3, [fp, #-5]
   12db8:	mov	r0, r3
   12dbc:	add	sp, fp, #0
   12dc0:	pop	{fp}		; (ldr fp, [sp], #4)
   12dc4:	bx	lr
   12dc8:	push	{fp, lr}
   12dcc:	add	fp, sp, #4
   12dd0:	sub	sp, sp, #8
   12dd4:	str	r0, [fp, #-8]
   12dd8:	mov	r3, r1
   12ddc:	strb	r3, [fp, #-9]
   12de0:	ldrb	r3, [fp, #-9]
   12de4:	mov	r0, r3
   12de8:	bl	12da0 <_start@@Base+0x690>
   12dec:	mov	r3, r0
   12df0:	mov	r2, r3
   12df4:	ldr	r3, [fp, #-8]
   12df8:	strb	r2, [r3]
   12dfc:	nop			; (mov r0, r0)
   12e00:	sub	sp, fp, #4
   12e04:	pop	{fp, pc}
   12e08:	push	{fp}		; (str fp, [sp, #-4]!)
   12e0c:	add	fp, sp, #0
   12e10:	sub	sp, sp, #12
   12e14:	str	r0, [fp, #-8]
   12e18:	ldr	r3, [fp, #-8]
   12e1c:	mov	r0, r3
   12e20:	add	sp, fp, #0
   12e24:	pop	{fp}		; (ldr fp, [sp], #4)
   12e28:	bx	lr
   12e2c:	push	{fp, lr}
   12e30:	add	fp, sp, #4
   12e34:	sub	sp, sp, #8
   12e38:	str	r0, [fp, #-8]
   12e3c:	ldr	r3, [fp, #-8]
   12e40:	ldr	r3, [r3]
   12e44:	mov	r0, r3
   12e48:	bl	12e08 <_start@@Base+0x6f8>
   12e4c:	mov	r3, r0
   12e50:	mov	r0, r3
   12e54:	sub	sp, fp, #4
   12e58:	pop	{fp, pc}
   12e5c:	push	{fp}		; (str fp, [sp, #-4]!)
   12e60:	add	fp, sp, #0
   12e64:	sub	sp, sp, #12
   12e68:	str	r0, [fp, #-8]
   12e6c:	ldr	r3, [fp, #-8]
   12e70:	mov	r0, r3
   12e74:	add	sp, fp, #0
   12e78:	pop	{fp}		; (ldr fp, [sp], #4)
   12e7c:	bx	lr
   12e80:	push	{fp, lr}
   12e84:	add	fp, sp, #4
   12e88:	sub	sp, sp, #8
   12e8c:	str	r0, [fp, #-8]
   12e90:	ldr	r3, [fp, #-8]
   12e94:	ldr	r3, [r3]
   12e98:	mov	r0, r3
   12e9c:	bl	12e5c <_start@@Base+0x74c>
   12ea0:	mov	r3, r0
   12ea4:	mov	r0, r3
   12ea8:	sub	sp, fp, #4
   12eac:	pop	{fp, pc}
   12eb0:	push	{fp}		; (str fp, [sp, #-4]!)
   12eb4:	add	fp, sp, #0
   12eb8:	sub	sp, sp, #12
   12ebc:	mov	r3, r0
   12ec0:	strh	r3, [fp, #-6]
   12ec4:	ldrh	r3, [fp, #-6]
   12ec8:	mov	r0, r3
   12ecc:	add	sp, fp, #0
   12ed0:	pop	{fp}		; (ldr fp, [sp], #4)
   12ed4:	bx	lr
   12ed8:	push	{fp, lr}
   12edc:	add	fp, sp, #4
   12ee0:	sub	sp, sp, #8
   12ee4:	str	r0, [fp, #-8]
   12ee8:	ldr	r3, [fp, #-8]
   12eec:	ldrh	r3, [r3]
   12ef0:	mov	r0, r3
   12ef4:	bl	12eb0 <_start@@Base+0x7a0>
   12ef8:	mov	r3, r0
   12efc:	mov	r0, r3
   12f00:	sub	sp, fp, #4
   12f04:	pop	{fp, pc}
   12f08:	push	{fp}		; (str fp, [sp, #-4]!)
   12f0c:	add	fp, sp, #0
   12f10:	sub	sp, sp, #12
   12f14:	str	r0, [fp, #-8]
   12f18:	ldr	r3, [fp, #-8]
   12f1c:	mov	r0, r3
   12f20:	add	sp, fp, #0
   12f24:	pop	{fp}		; (ldr fp, [sp], #4)
   12f28:	bx	lr
   12f2c:	push	{fp}		; (str fp, [sp, #-4]!)
   12f30:	add	fp, sp, #0
   12f34:	sub	sp, sp, #12
   12f38:	str	r0, [fp, #-8]
   12f3c:	ldr	r3, [fp, #-8]
   12f40:	mov	r0, r3
   12f44:	add	sp, fp, #0
   12f48:	pop	{fp}		; (ldr fp, [sp], #4)
   12f4c:	bx	lr
   12f50:	push	{fp, lr}
   12f54:	add	fp, sp, #4
   12f58:	sub	sp, sp, #8
   12f5c:	str	r0, [fp, #-8]
   12f60:	ldr	r3, [fp, #-8]
   12f64:	ldr	r3, [r3]
   12f68:	mov	r0, r3
   12f6c:	bl	12f08 <_start@@Base+0x7f8>
   12f70:	mov	r3, r0
   12f74:	mov	r0, r3
   12f78:	sub	sp, fp, #4
   12f7c:	pop	{fp, pc}
   12f80:	push	{fp, lr}
   12f84:	add	fp, sp, #4
   12f88:	sub	sp, sp, #16
   12f8c:	str	r0, [fp, #-16]
   12f90:	str	r1, [fp, #-20]	; 0xffffffec
   12f94:	mov	r3, #0
   12f98:	str	r3, [fp, #-12]
   12f9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12fa0:	cmp	r3, #0
   12fa4:	bne	12fb0 <_start@@Base+0x8a0>
   12fa8:	mov	r3, #1
   12fac:	b	13014 <_start@@Base+0x904>
   12fb0:	sub	r3, fp, #12
   12fb4:	mov	r2, #4
   12fb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   12fbc:	mov	r0, r3
   12fc0:	bl	126b0 <strncpy@plt>
   12fc4:	ldr	r3, [fp, #-12]
   12fc8:	mov	r0, r3
   12fcc:	bl	12f2c <_start@@Base+0x81c>
   12fd0:	mov	r3, r0
   12fd4:	str	r3, [fp, #-12]
   12fd8:	ldr	r3, [fp, #-16]
   12fdc:	add	r3, r3, #4
   12fe0:	mov	r0, r3
   12fe4:	bl	12f50 <_start@@Base+0x840>
   12fe8:	str	r0, [fp, #-8]
   12fec:	ldr	r3, [fp, #-12]
   12ff0:	cmp	r3, #0
   12ff4:	beq	13008 <_start@@Base+0x8f8>
   12ff8:	ldr	r3, [fp, #-12]
   12ffc:	ldr	r2, [fp, #-8]
   13000:	cmp	r2, r3
   13004:	bne	13010 <_start@@Base+0x900>
   13008:	mov	r3, #1
   1300c:	b	13014 <_start@@Base+0x904>
   13010:	mov	r3, #0
   13014:	mov	r0, r3
   13018:	sub	sp, fp, #4
   1301c:	pop	{fp, pc}
   13020:	push	{fp}		; (str fp, [sp, #-4]!)
   13024:	add	fp, sp, #0
   13028:	sub	sp, sp, #12
   1302c:	mov	r3, r0
   13030:	strb	r3, [fp, #-5]
   13034:	ldrsb	r3, [fp, #-5]
   13038:	mov	r0, r3
   1303c:	add	sp, fp, #0
   13040:	pop	{fp}		; (ldr fp, [sp], #4)
   13044:	bx	lr
   13048:	push	{fp, lr}
   1304c:	add	fp, sp, #4
   13050:	sub	sp, sp, #8
   13054:	str	r0, [fp, #-8]
   13058:	ldr	r3, [fp, #-8]
   1305c:	ldrsb	r3, [r3]
   13060:	mov	r0, r3
   13064:	bl	13020 <_start@@Base+0x910>
   13068:	mov	r3, r0
   1306c:	mov	r0, r3
   13070:	sub	sp, fp, #4
   13074:	pop	{fp, pc}
   13078:	push	{fp, lr}
   1307c:	add	fp, sp, #4
   13080:	sub	sp, sp, #8
   13084:	str	r0, [fp, #-8]
   13088:	ldr	r3, [fp, #-8]
   1308c:	cmp	r3, #0
   13090:	beq	130a8 <_start@@Base+0x998>
   13094:	ldr	r3, [fp, #-8]
   13098:	mov	r0, r3
   1309c:	bl	12ad0 <_start@@Base+0x3c0>
   130a0:	mov	r3, r0
   130a4:	b	130ac <_start@@Base+0x99c>
   130a8:	mov	r3, #0
   130ac:	mov	r0, r3
   130b0:	sub	sp, fp, #4
   130b4:	pop	{fp, pc}
   130b8:	push	{fp, lr}
   130bc:	add	fp, sp, #4
   130c0:	sub	sp, sp, #8
   130c4:	str	r0, [fp, #-8]
   130c8:	ldr	r3, [fp, #-8]
   130cc:	cmp	r3, #0
   130d0:	beq	130ec <_start@@Base+0x9dc>
   130d4:	ldr	r3, [fp, #-8]
   130d8:	add	r3, r3, #2
   130dc:	mov	r0, r3
   130e0:	bl	12a10 <_start@@Base+0x300>
   130e4:	mov	r3, r0
   130e8:	b	130f0 <_start@@Base+0x9e0>
   130ec:	mov	r3, #0
   130f0:	mov	r0, r3
   130f4:	sub	sp, fp, #4
   130f8:	pop	{fp, pc}
   130fc:	push	{fp, lr}
   13100:	add	fp, sp, #4
   13104:	sub	sp, sp, #8
   13108:	str	r0, [fp, #-8]
   1310c:	ldr	r3, [fp, #-8]
   13110:	cmp	r3, #0
   13114:	beq	1312c <_start@@Base+0xa1c>
   13118:	ldr	r3, [fp, #-8]
   1311c:	mov	r0, r3
   13120:	bl	12c68 <_start@@Base+0x558>
   13124:	vmov.f32	s15, s0
   13128:	b	13130 <_start@@Base+0xa20>
   1312c:	vldr	s15, [pc, #8]	; 1313c <_start@@Base+0xa2c>
   13130:	vmov.f32	s0, s15
   13134:	sub	sp, fp, #4
   13138:	pop	{fp, pc}
   1313c:	andeq	r0, r0, r0
   13140:	push	{fp, lr}
   13144:	add	fp, sp, #4
   13148:	sub	sp, sp, #8
   1314c:	str	r0, [fp, #-8]
   13150:	ldr	r3, [fp, #-8]
   13154:	cmp	r3, #0
   13158:	beq	13174 <_start@@Base+0xa64>
   1315c:	ldr	r3, [fp, #-8]
   13160:	add	r3, r3, #4
   13164:	mov	r0, r3
   13168:	bl	12c68 <_start@@Base+0x558>
   1316c:	vmov.f32	s15, s0
   13170:	b	13178 <_start@@Base+0xa68>
   13174:	vldr	s15, [pc, #8]	; 13184 <_start@@Base+0xa74>
   13178:	vmov.f32	s0, s15
   1317c:	sub	sp, fp, #4
   13180:	pop	{fp, pc}
   13184:	andeq	r0, r0, r0
   13188:	push	{fp, lr}
   1318c:	add	fp, sp, #4
   13190:	sub	sp, sp, #8
   13194:	str	r0, [fp, #-8]
   13198:	ldr	r3, [fp, #-8]
   1319c:	cmp	r3, #0
   131a0:	beq	131bc <_start@@Base+0xaac>
   131a4:	ldr	r3, [fp, #-8]
   131a8:	add	r3, r3, #8
   131ac:	mov	r0, r3
   131b0:	bl	12c68 <_start@@Base+0x558>
   131b4:	vmov.f32	s15, s0
   131b8:	b	131c0 <_start@@Base+0xab0>
   131bc:	vldr	s15, [pc, #8]	; 131cc <_start@@Base+0xabc>
   131c0:	vmov.f32	s0, s15
   131c4:	sub	sp, fp, #4
   131c8:	pop	{fp, pc}
   131cc:	andeq	r0, r0, r0
   131d0:	push	{fp, lr}
   131d4:	add	fp, sp, #4
   131d8:	sub	sp, sp, #8
   131dc:	str	r0, [fp, #-8]
   131e0:	ldr	r3, [fp, #-8]
   131e4:	cmp	r3, #0
   131e8:	beq	13204 <_start@@Base+0xaf4>
   131ec:	ldr	r3, [fp, #-8]
   131f0:	add	r3, r3, #16
   131f4:	mov	r0, r3
   131f8:	bl	12d3c <_start@@Base+0x62c>
   131fc:	vmov.f64	d7, d0
   13200:	b	13208 <_start@@Base+0xaf8>
   13204:	vldr	d7, [pc, #12]	; 13218 <_start@@Base+0xb08>
   13208:	vmov.f64	d0, d7
   1320c:	sub	sp, fp, #4
   13210:	pop	{fp, pc}
   13214:	nop			; (mov r0, r0)
	...
   13220:	push	{fp, lr}
   13224:	add	fp, sp, #4
   13228:	sub	sp, sp, #8
   1322c:	str	r0, [fp, #-8]
   13230:	ldr	r3, [fp, #-8]
   13234:	cmp	r3, #0
   13238:	beq	13254 <_start@@Base+0xb44>
   1323c:	ldr	r3, [fp, #-8]
   13240:	add	r3, r3, #24
   13244:	mov	r0, r3
   13248:	bl	13048 <_start@@Base+0x938>
   1324c:	mov	r3, r0
   13250:	b	13258 <_start@@Base+0xb48>
   13254:	mov	r3, #0
   13258:	mov	r0, r3
   1325c:	sub	sp, fp, #4
   13260:	pop	{fp, pc}
   13264:	push	{fp}		; (str fp, [sp, #-4]!)
   13268:	add	fp, sp, #0
   1326c:	sub	sp, sp, #12
   13270:	str	r0, [fp, #-8]
   13274:	ldr	r3, [fp, #-8]
   13278:	cmp	r3, #0
   1327c:	beq	1328c <_start@@Base+0xb7c>
   13280:	ldr	r3, [fp, #-8]
   13284:	add	r3, r3, #26
   13288:	b	13290 <_start@@Base+0xb80>
   1328c:	mov	r3, #0
   13290:	mov	r0, r3
   13294:	add	sp, fp, #0
   13298:	pop	{fp}		; (ldr fp, [sp], #4)
   1329c:	bx	lr
   132a0:	push	{fp, lr}
   132a4:	add	fp, sp, #4
   132a8:	sub	sp, sp, #8
   132ac:	str	r0, [fp, #-8]
   132b0:	str	r1, [fp, #-12]
   132b4:	ldr	r3, [fp, #-8]
   132b8:	cmp	r3, #0
   132bc:	beq	132f0 <_start@@Base+0xbe0>
   132c0:	ldr	r1, [fp, #-12]
   132c4:	ldr	r0, [fp, #-8]
   132c8:	bl	12f80 <_start@@Base+0x870>
   132cc:	mov	r3, r0
   132d0:	cmp	r3, #0
   132d4:	beq	132f0 <_start@@Base+0xbe0>
   132d8:	ldr	r0, [fp, #-8]
   132dc:	bl	12e2c <_start@@Base+0x71c>
   132e0:	mov	r2, r0
   132e4:	ldr	r3, [fp, #-8]
   132e8:	add	r3, r3, r2
   132ec:	b	132f4 <_start@@Base+0xbe4>
   132f0:	mov	r3, #0
   132f4:	mov	r0, r3
   132f8:	sub	sp, fp, #4
   132fc:	pop	{fp, pc}
   13300:	push	{fp, lr}
   13304:	add	fp, sp, #4
   13308:	sub	sp, sp, #16
   1330c:	str	r0, [fp, #-16]
   13310:	mov	r3, #0
   13314:	strh	r3, [fp, #-6]
   13318:	ldr	r3, [fp, #-16]
   1331c:	cmp	r3, #0
   13320:	bne	13344 <_start@@Base+0xc34>
   13324:	ldr	r3, [pc, #176]	; 133dc <_start@@Base+0xccc>
   13328:	add	r3, pc, r3
   1332c:	mov	r2, #696	; 0x2b8
   13330:	ldr	r1, [pc, #168]	; 133e0 <_start@@Base+0xcd0>
   13334:	add	r1, pc, r1
   13338:	ldr	r0, [pc, #164]	; 133e4 <_start@@Base+0xcd4>
   1333c:	add	r0, pc, r0
   13340:	bl	12704 <__assert_fail@plt>
   13344:	mov	r3, #0
   13348:	strh	r3, [fp, #-8]
   1334c:	ldr	r0, [fp, #-16]
   13350:	bl	12e80 <_start@@Base+0x770>
   13354:	mov	r3, r0
   13358:	rsb	r3, r3, #0
   1335c:	ldr	r2, [fp, #-16]
   13360:	add	r3, r2, r3
   13364:	str	r3, [fp, #-12]
   13368:	ldr	r0, [fp, #-12]
   1336c:	bl	12ed8 <_start@@Base+0x7c8>
   13370:	mov	r3, r0
   13374:	mov	r2, r3
   13378:	ldrh	r3, [fp, #-8]
   1337c:	add	r3, r3, #3
   13380:	lsl	r3, r3, #1
   13384:	cmp	r2, r3
   13388:	bcc	133b0 <_start@@Base+0xca0>
   1338c:	ldrh	r3, [fp, #-8]
   13390:	add	r3, r3, #2
   13394:	lsl	r3, r3, #1
   13398:	ldr	r2, [fp, #-12]
   1339c:	add	r3, r2, r3
   133a0:	mov	r0, r3
   133a4:	bl	12ed8 <_start@@Base+0x7c8>
   133a8:	mov	r3, r0
   133ac:	strh	r3, [fp, #-6]
   133b0:	ldrh	r3, [fp, #-6]
   133b4:	cmp	r3, #0
   133b8:	beq	133cc <_start@@Base+0xcbc>
   133bc:	ldrh	r3, [fp, #-6]
   133c0:	ldr	r2, [fp, #-16]
   133c4:	add	r3, r2, r3
   133c8:	b	133d0 <_start@@Base+0xcc0>
   133cc:	mov	r3, #0
   133d0:	mov	r0, r3
   133d4:	sub	sp, fp, #4
   133d8:	pop	{fp, pc}
   133dc:	muleq	r2, r4, r4
   133e0:	andeq	r2, r2, ip, asr #3
   133e4:	andeq	r2, r2, ip, lsr r2
   133e8:	push	{fp, lr}
   133ec:	add	fp, sp, #4
   133f0:	sub	sp, sp, #16
   133f4:	str	r0, [fp, #-8]
   133f8:	str	r1, [fp, #-12]
   133fc:	str	r2, [fp, #-16]
   13400:	str	r3, [fp, #-20]	; 0xffffffec
   13404:	mov	r2, #44	; 0x2c
   13408:	mov	r1, #0
   1340c:	ldr	r0, [fp, #-8]
   13410:	bl	126a4 <memset@plt>
   13414:	ldr	r3, [fp, #-8]
   13418:	ldr	r2, [fp, #-12]
   1341c:	str	r2, [r3]
   13420:	ldr	r3, [fp, #-8]
   13424:	ldr	r2, [fp, #-16]
   13428:	str	r2, [r3, #4]
   1342c:	ldr	r3, [fp, #-8]
   13430:	mov	r2, #1
   13434:	str	r2, [r3, #16]
   13438:	ldr	r3, [fp, #-8]
   1343c:	ldr	r2, [fp, #4]
   13440:	str	r2, [r3, #8]
   13444:	ldr	r3, [fp, #-8]
   13448:	ldr	r2, [fp, #-16]
   1344c:	str	r2, [r3, #28]
   13450:	ldr	r3, [fp, #-8]
   13454:	ldr	r2, [fp, #-20]	; 0xffffffec
   13458:	str	r2, [r3, #32]
   1345c:	ldr	r3, [fp, #-8]
   13460:	ldr	r2, [fp, #-16]
   13464:	str	r2, [r3, #36]	; 0x24
   13468:	nop			; (mov r0, r0)
   1346c:	sub	sp, fp, #4
   13470:	pop	{fp, pc}
   13474:	push	{fp, lr}
   13478:	add	fp, sp, #4
   1347c:	sub	sp, sp, #16
   13480:	str	r0, [fp, #-8]
   13484:	str	r1, [fp, #-12]
   13488:	str	r2, [fp, #-16]
   1348c:	ldr	r2, [fp, #-16]
   13490:	ldr	r3, [fp, #-12]
   13494:	sub	r3, r2, r3
   13498:	cmp	r3, #1
   1349c:	ble	134e8 <_start@@Base+0xdd8>
   134a0:	ldr	r3, [fp, #-12]
   134a4:	ldrb	r3, [r3]
   134a8:	cmp	r3, #32
   134ac:	bls	134b8 <_start@@Base+0xda8>
   134b0:	ldr	r3, [fp, #-12]
   134b4:	b	134fc <_start@@Base+0xdec>
   134b8:	ldr	r3, [fp, #-12]
   134bc:	ldrb	r3, [r3]
   134c0:	cmp	r3, #32
   134c4:	bne	134e8 <_start@@Base+0xdd8>
   134c8:	ldr	r3, [fp, #-12]
   134cc:	add	r3, r3, #1
   134d0:	ldrb	r3, [r3]
   134d4:	cmp	r3, #32
   134d8:	bls	134e8 <_start@@Base+0xdd8>
   134dc:	ldr	r3, [fp, #-12]
   134e0:	add	r3, r3, #1
   134e4:	b	134fc <_start@@Base+0xdec>
   134e8:	ldr	r2, [fp, #-16]
   134ec:	ldr	r1, [fp, #-12]
   134f0:	ldr	r0, [fp, #-8]
   134f4:	bl	31ae8 <flatcc_json_parser_space_ext@@Base>
   134f8:	mov	r3, r0
   134fc:	mov	r0, r3
   13500:	sub	sp, fp, #4
   13504:	pop	{fp, pc}
   13508:	push	{fp, lr}
   1350c:	add	fp, sp, #4
   13510:	sub	sp, sp, #16
   13514:	str	r0, [fp, #-8]
   13518:	str	r1, [fp, #-12]
   1351c:	str	r2, [fp, #-16]
   13520:	ldr	r2, [fp, #-12]
   13524:	ldr	r3, [fp, #-16]
   13528:	cmp	r2, r3
   1352c:	bne	13538 <_start@@Base+0xe28>
   13530:	ldr	r3, [fp, #-12]
   13534:	b	135a0 <_start@@Base+0xe90>
   13538:	ldr	r3, [fp, #-12]
   1353c:	ldrb	r3, [r3]
   13540:	cmp	r3, #34	; 0x22
   13544:	bne	13564 <_start@@Base+0xe54>
   13548:	ldr	r3, [fp, #-12]
   1354c:	add	r3, r3, #1
   13550:	str	r3, [fp, #-12]
   13554:	ldr	r3, [fp, #-8]
   13558:	mov	r2, #0
   1355c:	str	r2, [r3, #12]
   13560:	b	1359c <_start@@Base+0xe8c>
   13564:	ldr	r3, [fp, #-12]
   13568:	ldrb	r3, [r3]
   1356c:	cmp	r3, #46	; 0x2e
   13570:	bne	13590 <_start@@Base+0xe80>
   13574:	mov	r3, #5
   13578:	ldr	r2, [fp, #-16]
   1357c:	ldr	r1, [fp, #-12]
   13580:	ldr	r0, [fp, #-8]
   13584:	bl	3198c <flatcc_json_parser_set_error@@Base>
   13588:	mov	r3, r0
   1358c:	b	135a0 <_start@@Base+0xe90>
   13590:	ldr	r3, [fp, #-8]
   13594:	mov	r2, #1
   13598:	str	r2, [r3, #12]
   1359c:	ldr	r3, [fp, #-12]
   135a0:	mov	r0, r3
   135a4:	sub	sp, fp, #4
   135a8:	pop	{fp, pc}
   135ac:	push	{r4, r5, r6, r7, r8, r9, fp}
   135b0:	add	fp, sp, #24
   135b4:	sub	sp, sp, #60	; 0x3c
   135b8:	str	r0, [fp, #-48]	; 0xffffffd0
   135bc:	str	r1, [fp, #-52]	; 0xffffffcc
   135c0:	mov	r2, #0
   135c4:	mov	r3, #0
   135c8:	strd	r2, [fp, #-36]	; 0xffffffdc
   135cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   135d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   135d4:	sub	r3, r2, r3
   135d8:	str	r3, [fp, #-40]	; 0xffffffd8
   135dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   135e0:	cmp	r3, #8
   135e4:	bls	135f0 <_start@@Base+0xee0>
   135e8:	mov	r3, #8
   135ec:	str	r3, [fp, #-40]	; 0xffffffd8
   135f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   135f4:	cmp	r3, #8
   135f8:	addls	pc, pc, r3, lsl #2
   135fc:	b	137d4 <_start@@Base+0x10c4>
   13600:	b	137d4 <_start@@Base+0x10c4>
   13604:	b	13794 <_start@@Base+0x1084>
   13608:	b	13754 <_start@@Base+0x1044>
   1360c:	b	13714 <_start@@Base+0x1004>
   13610:	b	136d4 <_start@@Base+0xfc4>
   13614:	b	136a8 <_start@@Base+0xf98>
   13618:	b	13678 <_start@@Base+0xf68>
   1361c:	b	13648 <_start@@Base+0xf38>
   13620:	b	13624 <_start@@Base+0xf14>
   13624:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13628:	add	r3, r3, #7
   1362c:	ldrb	r3, [r3]
   13630:	uxtb	r0, r3
   13634:	mov	r1, #0
   13638:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1363c:	orr	r2, r2, r0
   13640:	orr	r3, r3, r1
   13644:	strd	r2, [fp, #-36]	; 0xffffffdc
   13648:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1364c:	add	r3, r3, #6
   13650:	ldrb	r3, [r3]
   13654:	uxtb	r2, r3
   13658:	mov	r3, #0
   1365c:	lsl	r5, r3, #8
   13660:	orr	r5, r5, r2, lsr #24
   13664:	lsl	r4, r2, #8
   13668:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1366c:	orr	r2, r2, r4
   13670:	orr	r3, r3, r5
   13674:	strd	r2, [fp, #-36]	; 0xffffffdc
   13678:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1367c:	add	r3, r3, #5
   13680:	ldrb	r3, [r3]
   13684:	uxtb	r2, r3
   13688:	mov	r3, #0
   1368c:	lsl	r7, r3, #16
   13690:	orr	r7, r7, r2, lsr #16
   13694:	lsl	r6, r2, #16
   13698:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1369c:	orr	r2, r2, r6
   136a0:	orr	r3, r3, r7
   136a4:	strd	r2, [fp, #-36]	; 0xffffffdc
   136a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   136ac:	add	r3, r3, #4
   136b0:	ldrb	r3, [r3]
   136b4:	uxtb	r2, r3
   136b8:	mov	r3, #0
   136bc:	lsr	r9, r2, #8
   136c0:	lsl	r8, r2, #24
   136c4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   136c8:	orr	r2, r2, r8
   136cc:	orr	r3, r3, r9
   136d0:	strd	r2, [fp, #-36]	; 0xffffffdc
   136d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   136d8:	add	r3, r3, #3
   136dc:	ldrb	r3, [r3]
   136e0:	uxtb	r2, r3
   136e4:	mov	r3, #0
   136e8:	mov	r3, r2
   136ec:	str	r3, [fp, #-56]	; 0xffffffc8
   136f0:	mov	r3, #0
   136f4:	str	r3, [fp, #-60]	; 0xffffffc4
   136f8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   136fc:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   13700:	orr	r0, r0, r2
   13704:	orr	r1, r1, r3
   13708:	mov	r2, r0
   1370c:	mov	r3, r1
   13710:	strd	r2, [fp, #-36]	; 0xffffffdc
   13714:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13718:	add	r3, r3, #2
   1371c:	ldrb	r3, [r3]
   13720:	uxtb	r2, r3
   13724:	mov	r3, #0
   13728:	lsl	r3, r2, #8
   1372c:	str	r3, [fp, #-64]	; 0xffffffc0
   13730:	mov	r3, #0
   13734:	str	r3, [fp, #-68]	; 0xffffffbc
   13738:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1373c:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   13740:	orr	r0, r0, r2
   13744:	orr	r1, r1, r3
   13748:	mov	r2, r0
   1374c:	mov	r3, r1
   13750:	strd	r2, [fp, #-36]	; 0xffffffdc
   13754:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13758:	add	r3, r3, #1
   1375c:	ldrb	r3, [r3]
   13760:	uxtb	r2, r3
   13764:	mov	r3, #0
   13768:	lsl	r3, r2, #16
   1376c:	str	r3, [fp, #-72]	; 0xffffffb8
   13770:	mov	r3, #0
   13774:	str	r3, [fp, #-76]	; 0xffffffb4
   13778:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1377c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   13780:	orr	r0, r0, r2
   13784:	orr	r1, r1, r3
   13788:	mov	r2, r0
   1378c:	mov	r3, r1
   13790:	strd	r2, [fp, #-36]	; 0xffffffdc
   13794:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13798:	ldrb	r3, [r3]
   1379c:	uxtb	r2, r3
   137a0:	mov	r3, #0
   137a4:	lsl	r3, r2, #24
   137a8:	str	r3, [fp, #-80]	; 0xffffffb0
   137ac:	mov	r3, #0
   137b0:	str	r3, [fp, #-84]	; 0xffffffac
   137b4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   137b8:	ldrd	r0, [fp, #-84]	; 0xffffffac
   137bc:	orr	r0, r0, r2
   137c0:	orr	r1, r1, r3
   137c4:	mov	r2, r0
   137c8:	mov	r3, r1
   137cc:	strd	r2, [fp, #-36]	; 0xffffffdc
   137d0:	nop			; (mov r0, r0)
   137d4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   137d8:	mov	r0, r2
   137dc:	mov	r1, r3
   137e0:	sub	sp, fp, #24
   137e4:	pop	{r4, r5, r6, r7, r8, r9, fp}
   137e8:	bx	lr
   137ec:	push	{fp, lr}
   137f0:	add	fp, sp, #4
   137f4:	sub	sp, sp, #16
   137f8:	str	r0, [fp, #-16]
   137fc:	str	r1, [fp, #-20]	; 0xffffffec
   13800:	ldr	r2, [fp, #-20]	; 0xffffffec
   13804:	ldr	r3, [fp, #-16]
   13808:	sub	r3, r2, r3
   1380c:	str	r3, [fp, #-8]
   13810:	ldr	r1, [fp, #-20]	; 0xffffffec
   13814:	ldr	r0, [fp, #-16]
   13818:	bl	135ac <_start@@Base+0xe9c>
   1381c:	mov	r2, r0
   13820:	mov	r3, r1
   13824:	mov	r0, r2
   13828:	mov	r1, r3
   1382c:	sub	sp, fp, #4
   13830:	pop	{fp, pc}
   13834:	push	{fp}		; (str fp, [sp, #-4]!)
   13838:	add	fp, sp, #0
   1383c:	sub	sp, sp, #28
   13840:	str	r0, [fp, #-16]
   13844:	str	r1, [fp, #-20]	; 0xffffffec
   13848:	str	r2, [fp, #-24]	; 0xffffffe8
   1384c:	str	r3, [fp, #-28]	; 0xffffffe4
   13850:	ldr	r3, [fp, #-20]	; 0xffffffec
   13854:	str	r3, [fp, #-8]
   13858:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1385c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13860:	sub	r2, r2, r3
   13864:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13868:	cmp	r2, r3
   1386c:	bgt	13878 <_start@@Base+0x1168>
   13870:	ldr	r3, [fp, #-8]
   13874:	b	138a8 <_start@@Base+0x1198>
   13878:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1387c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13880:	add	r3, r2, r3
   13884:	ldrb	r3, [r3]
   13888:	cmp	r3, #46	; 0x2e
   1388c:	beq	13898 <_start@@Base+0x1188>
   13890:	ldr	r3, [fp, #-8]
   13894:	b	138a8 <_start@@Base+0x1198>
   13898:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1389c:	add	r3, r3, #1
   138a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   138a4:	add	r3, r2, r3
   138a8:	mov	r0, r3
   138ac:	add	sp, fp, #0
   138b0:	pop	{fp}		; (ldr fp, [sp], #4)
   138b4:	bx	lr
   138b8:	push	{fp, lr}
   138bc:	add	fp, sp, #4
   138c0:	sub	sp, sp, #16
   138c4:	str	r0, [fp, #-8]
   138c8:	str	r1, [fp, #-12]
   138cc:	str	r2, [fp, #-16]
   138d0:	ldr	r2, [fp, #-16]
   138d4:	ldr	r1, [fp, #-12]
   138d8:	ldr	r0, [fp, #-8]
   138dc:	bl	13508 <_start@@Base+0xdf8>
   138e0:	str	r0, [fp, #-12]
   138e4:	ldr	r3, [fp, #-8]
   138e8:	ldr	r3, [r3, #12]
   138ec:	cmp	r3, #0
   138f0:	bne	13908 <_start@@Base+0x11f8>
   138f4:	ldr	r2, [fp, #-16]
   138f8:	ldr	r1, [fp, #-12]
   138fc:	ldr	r0, [fp, #-8]
   13900:	bl	13474 <_start@@Base+0xd64>
   13904:	str	r0, [fp, #-12]
   13908:	ldr	r3, [fp, #-12]
   1390c:	mov	r0, r3
   13910:	sub	sp, fp, #4
   13914:	pop	{fp, pc}
   13918:	push	{fp, lr}
   1391c:	add	fp, sp, #4
   13920:	sub	sp, sp, #16
   13924:	str	r0, [fp, #-8]
   13928:	str	r1, [fp, #-12]
   1392c:	str	r2, [fp, #-16]
   13930:	str	r3, [fp, #-20]	; 0xffffffec
   13934:	ldr	r2, [fp, #-12]
   13938:	ldr	r3, [fp, #-16]
   1393c:	cmp	r2, r3
   13940:	beq	13954 <_start@@Base+0x1244>
   13944:	ldr	r3, [fp, #-12]
   13948:	ldrb	r3, [r3]
   1394c:	cmp	r3, #123	; 0x7b
   13950:	beq	1397c <_start@@Base+0x126c>
   13954:	ldr	r3, [fp, #-20]	; 0xffffffec
   13958:	mov	r2, #0
   1395c:	str	r2, [r3]
   13960:	mov	r3, #21
   13964:	ldr	r2, [fp, #-16]
   13968:	ldr	r1, [fp, #-12]
   1396c:	ldr	r0, [fp, #-8]
   13970:	bl	3198c <flatcc_json_parser_set_error@@Base>
   13974:	mov	r3, r0
   13978:	b	139f4 <_start@@Base+0x12e4>
   1397c:	ldr	r3, [fp, #-12]
   13980:	add	r3, r3, #1
   13984:	ldr	r2, [fp, #-16]
   13988:	mov	r1, r3
   1398c:	ldr	r0, [fp, #-8]
   13990:	bl	13474 <_start@@Base+0xd64>
   13994:	str	r0, [fp, #-12]
   13998:	ldr	r2, [fp, #-12]
   1399c:	ldr	r3, [fp, #-16]
   139a0:	cmp	r2, r3
   139a4:	beq	139e4 <_start@@Base+0x12d4>
   139a8:	ldr	r3, [fp, #-12]
   139ac:	ldrb	r3, [r3]
   139b0:	cmp	r3, #125	; 0x7d
   139b4:	bne	139e4 <_start@@Base+0x12d4>
   139b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   139bc:	mov	r2, #0
   139c0:	str	r2, [r3]
   139c4:	ldr	r3, [fp, #-12]
   139c8:	add	r3, r3, #1
   139cc:	ldr	r2, [fp, #-16]
   139d0:	mov	r1, r3
   139d4:	ldr	r0, [fp, #-8]
   139d8:	bl	13474 <_start@@Base+0xd64>
   139dc:	mov	r3, r0
   139e0:	b	139f4 <_start@@Base+0x12e4>
   139e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   139e8:	mov	r2, #1
   139ec:	str	r2, [r3]
   139f0:	ldr	r3, [fp, #-12]
   139f4:	mov	r0, r3
   139f8:	sub	sp, fp, #4
   139fc:	pop	{fp, pc}
   13a00:	push	{fp, lr}
   13a04:	add	fp, sp, #4
   13a08:	sub	sp, sp, #16
   13a0c:	str	r0, [fp, #-8]
   13a10:	str	r1, [fp, #-12]
   13a14:	str	r2, [fp, #-16]
   13a18:	str	r3, [fp, #-20]	; 0xffffffec
   13a1c:	ldr	r2, [fp, #-16]
   13a20:	ldr	r1, [fp, #-12]
   13a24:	ldr	r0, [fp, #-8]
   13a28:	bl	13474 <_start@@Base+0xd64>
   13a2c:	str	r0, [fp, #-12]
   13a30:	ldr	r2, [fp, #-12]
   13a34:	ldr	r3, [fp, #-16]
   13a38:	cmp	r2, r3
   13a3c:	bne	13a54 <_start@@Base+0x1344>
   13a40:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a44:	mov	r2, #0
   13a48:	str	r2, [r3]
   13a4c:	ldr	r3, [fp, #-12]
   13a50:	b	13b5c <_start@@Base+0x144c>
   13a54:	ldr	r3, [fp, #-12]
   13a58:	ldrb	r3, [r3]
   13a5c:	cmp	r3, #44	; 0x2c
   13a60:	beq	13abc <_start@@Base+0x13ac>
   13a64:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a68:	mov	r2, #0
   13a6c:	str	r2, [r3]
   13a70:	ldr	r3, [fp, #-12]
   13a74:	ldrb	r3, [r3]
   13a78:	cmp	r3, #125	; 0x7d
   13a7c:	beq	13a9c <_start@@Base+0x138c>
   13a80:	mov	r3, #10
   13a84:	ldr	r2, [fp, #-16]
   13a88:	ldr	r1, [fp, #-12]
   13a8c:	ldr	r0, [fp, #-8]
   13a90:	bl	3198c <flatcc_json_parser_set_error@@Base>
   13a94:	mov	r3, r0
   13a98:	b	13b5c <_start@@Base+0x144c>
   13a9c:	ldr	r3, [fp, #-12]
   13aa0:	add	r3, r3, #1
   13aa4:	ldr	r2, [fp, #-16]
   13aa8:	mov	r1, r3
   13aac:	ldr	r0, [fp, #-8]
   13ab0:	bl	13474 <_start@@Base+0xd64>
   13ab4:	mov	r3, r0
   13ab8:	b	13b5c <_start@@Base+0x144c>
   13abc:	ldr	r3, [fp, #-12]
   13ac0:	add	r3, r3, #1
   13ac4:	ldr	r2, [fp, #-16]
   13ac8:	mov	r1, r3
   13acc:	ldr	r0, [fp, #-8]
   13ad0:	bl	13474 <_start@@Base+0xd64>
   13ad4:	str	r0, [fp, #-12]
   13ad8:	ldr	r2, [fp, #-12]
   13adc:	ldr	r3, [fp, #-16]
   13ae0:	cmp	r2, r3
   13ae4:	bne	13b10 <_start@@Base+0x1400>
   13ae8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13aec:	mov	r2, #0
   13af0:	str	r2, [r3]
   13af4:	mov	r3, #10
   13af8:	ldr	r2, [fp, #-16]
   13afc:	ldr	r1, [fp, #-12]
   13b00:	ldr	r0, [fp, #-8]
   13b04:	bl	3198c <flatcc_json_parser_set_error@@Base>
   13b08:	mov	r3, r0
   13b0c:	b	13b5c <_start@@Base+0x144c>
   13b10:	ldr	r3, [fp, #-12]
   13b14:	ldrb	r3, [r3]
   13b18:	cmp	r3, #125	; 0x7d
   13b1c:	bne	13b4c <_start@@Base+0x143c>
   13b20:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b24:	mov	r2, #0
   13b28:	str	r2, [r3]
   13b2c:	ldr	r3, [fp, #-12]
   13b30:	add	r3, r3, #1
   13b34:	ldr	r2, [fp, #-16]
   13b38:	mov	r1, r3
   13b3c:	ldr	r0, [fp, #-8]
   13b40:	bl	13474 <_start@@Base+0xd64>
   13b44:	mov	r3, r0
   13b48:	b	13b5c <_start@@Base+0x144c>
   13b4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b50:	mov	r2, #1
   13b54:	str	r2, [r3]
   13b58:	ldr	r3, [fp, #-12]
   13b5c:	mov	r0, r3
   13b60:	sub	sp, fp, #4
   13b64:	pop	{fp, pc}
   13b68:	push	{fp, lr}
   13b6c:	add	fp, sp, #4
   13b70:	sub	sp, sp, #16
   13b74:	str	r0, [fp, #-8]
   13b78:	str	r1, [fp, #-12]
   13b7c:	str	r2, [fp, #-16]
   13b80:	str	r3, [fp, #-20]	; 0xffffffec
   13b84:	ldr	r2, [fp, #-12]
   13b88:	ldr	r3, [fp, #-16]
   13b8c:	cmp	r2, r3
   13b90:	beq	13ba4 <_start@@Base+0x1494>
   13b94:	ldr	r3, [fp, #-12]
   13b98:	ldrb	r3, [r3]
   13b9c:	cmp	r3, #91	; 0x5b
   13ba0:	beq	13bcc <_start@@Base+0x14bc>
   13ba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ba8:	mov	r2, #0
   13bac:	str	r2, [r3]
   13bb0:	mov	r3, #22
   13bb4:	ldr	r2, [fp, #-16]
   13bb8:	ldr	r1, [fp, #-12]
   13bbc:	ldr	r0, [fp, #-8]
   13bc0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   13bc4:	mov	r3, r0
   13bc8:	b	13c44 <_start@@Base+0x1534>
   13bcc:	ldr	r3, [fp, #-12]
   13bd0:	add	r3, r3, #1
   13bd4:	ldr	r2, [fp, #-16]
   13bd8:	mov	r1, r3
   13bdc:	ldr	r0, [fp, #-8]
   13be0:	bl	13474 <_start@@Base+0xd64>
   13be4:	str	r0, [fp, #-12]
   13be8:	ldr	r2, [fp, #-12]
   13bec:	ldr	r3, [fp, #-16]
   13bf0:	cmp	r2, r3
   13bf4:	beq	13c34 <_start@@Base+0x1524>
   13bf8:	ldr	r3, [fp, #-12]
   13bfc:	ldrb	r3, [r3]
   13c00:	cmp	r3, #93	; 0x5d
   13c04:	bne	13c34 <_start@@Base+0x1524>
   13c08:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c0c:	mov	r2, #0
   13c10:	str	r2, [r3]
   13c14:	ldr	r3, [fp, #-12]
   13c18:	add	r3, r3, #1
   13c1c:	ldr	r2, [fp, #-16]
   13c20:	mov	r1, r3
   13c24:	ldr	r0, [fp, #-8]
   13c28:	bl	13474 <_start@@Base+0xd64>
   13c2c:	mov	r3, r0
   13c30:	b	13c44 <_start@@Base+0x1534>
   13c34:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c38:	mov	r2, #1
   13c3c:	str	r2, [r3]
   13c40:	ldr	r3, [fp, #-12]
   13c44:	mov	r0, r3
   13c48:	sub	sp, fp, #4
   13c4c:	pop	{fp, pc}
   13c50:	push	{fp, lr}
   13c54:	add	fp, sp, #4
   13c58:	sub	sp, sp, #16
   13c5c:	str	r0, [fp, #-8]
   13c60:	str	r1, [fp, #-12]
   13c64:	str	r2, [fp, #-16]
   13c68:	str	r3, [fp, #-20]	; 0xffffffec
   13c6c:	ldr	r2, [fp, #-16]
   13c70:	ldr	r1, [fp, #-12]
   13c74:	ldr	r0, [fp, #-8]
   13c78:	bl	13474 <_start@@Base+0xd64>
   13c7c:	str	r0, [fp, #-12]
   13c80:	ldr	r2, [fp, #-12]
   13c84:	ldr	r3, [fp, #-16]
   13c88:	cmp	r2, r3
   13c8c:	bne	13ca4 <_start@@Base+0x1594>
   13c90:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c94:	mov	r2, #0
   13c98:	str	r2, [r3]
   13c9c:	ldr	r3, [fp, #-12]
   13ca0:	b	13dac <_start@@Base+0x169c>
   13ca4:	ldr	r3, [fp, #-12]
   13ca8:	ldrb	r3, [r3]
   13cac:	cmp	r3, #44	; 0x2c
   13cb0:	beq	13d0c <_start@@Base+0x15fc>
   13cb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cb8:	mov	r2, #0
   13cbc:	str	r2, [r3]
   13cc0:	ldr	r3, [fp, #-12]
   13cc4:	ldrb	r3, [r3]
   13cc8:	cmp	r3, #93	; 0x5d
   13ccc:	beq	13cec <_start@@Base+0x15dc>
   13cd0:	mov	r3, #9
   13cd4:	ldr	r2, [fp, #-16]
   13cd8:	ldr	r1, [fp, #-12]
   13cdc:	ldr	r0, [fp, #-8]
   13ce0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   13ce4:	mov	r3, r0
   13ce8:	b	13dac <_start@@Base+0x169c>
   13cec:	ldr	r3, [fp, #-12]
   13cf0:	add	r3, r3, #1
   13cf4:	ldr	r2, [fp, #-16]
   13cf8:	mov	r1, r3
   13cfc:	ldr	r0, [fp, #-8]
   13d00:	bl	13474 <_start@@Base+0xd64>
   13d04:	mov	r3, r0
   13d08:	b	13dac <_start@@Base+0x169c>
   13d0c:	ldr	r3, [fp, #-12]
   13d10:	add	r3, r3, #1
   13d14:	ldr	r2, [fp, #-16]
   13d18:	mov	r1, r3
   13d1c:	ldr	r0, [fp, #-8]
   13d20:	bl	13474 <_start@@Base+0xd64>
   13d24:	str	r0, [fp, #-12]
   13d28:	ldr	r2, [fp, #-12]
   13d2c:	ldr	r3, [fp, #-16]
   13d30:	cmp	r2, r3
   13d34:	bne	13d60 <_start@@Base+0x1650>
   13d38:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d3c:	mov	r2, #0
   13d40:	str	r2, [r3]
   13d44:	mov	r3, #9
   13d48:	ldr	r2, [fp, #-16]
   13d4c:	ldr	r1, [fp, #-12]
   13d50:	ldr	r0, [fp, #-8]
   13d54:	bl	3198c <flatcc_json_parser_set_error@@Base>
   13d58:	mov	r3, r0
   13d5c:	b	13dac <_start@@Base+0x169c>
   13d60:	ldr	r3, [fp, #-12]
   13d64:	ldrb	r3, [r3]
   13d68:	cmp	r3, #93	; 0x5d
   13d6c:	bne	13d9c <_start@@Base+0x168c>
   13d70:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d74:	mov	r2, #0
   13d78:	str	r2, [r3]
   13d7c:	ldr	r3, [fp, #-12]
   13d80:	add	r3, r3, #1
   13d84:	ldr	r2, [fp, #-16]
   13d88:	mov	r1, r3
   13d8c:	ldr	r0, [fp, #-8]
   13d90:	bl	13474 <_start@@Base+0xd64>
   13d94:	mov	r3, r0
   13d98:	b	13dac <_start@@Base+0x169c>
   13d9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13da0:	mov	r2, #1
   13da4:	str	r2, [r3]
   13da8:	ldr	r3, [fp, #-12]
   13dac:	mov	r0, r3
   13db0:	sub	sp, fp, #4
   13db4:	pop	{fp, pc}
   13db8:	push	{fp, lr}
   13dbc:	add	fp, sp, #4
   13dc0:	sub	sp, sp, #24
   13dc4:	str	r0, [fp, #-16]
   13dc8:	str	r1, [fp, #-20]	; 0xffffffec
   13dcc:	str	r2, [fp, #-24]	; 0xffffffe8
   13dd0:	str	r3, [fp, #-28]	; 0xffffffe4
   13dd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13dd8:	str	r3, [fp, #-8]
   13ddc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13de0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13de4:	sub	r2, r2, r3
   13de8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13dec:	cmp	r2, r3
   13df0:	bgt	13dfc <_start@@Base+0x16ec>
   13df4:	ldr	r3, [fp, #-8]
   13df8:	b	13f08 <_start@@Base+0x17f8>
   13dfc:	ldr	r3, [fp, #-16]
   13e00:	ldr	r3, [r3, #12]
   13e04:	cmp	r3, #0
   13e08:	beq	13e64 <_start@@Base+0x1754>
   13e0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13e10:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e14:	add	r3, r2, r3
   13e18:	ldrb	r3, [r3]
   13e1c:	cmp	r3, #32
   13e20:	bls	13e44 <_start@@Base+0x1734>
   13e24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13e28:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e2c:	add	r3, r2, r3
   13e30:	ldrb	r3, [r3]
   13e34:	cmp	r3, #58	; 0x3a
   13e38:	beq	13e44 <_start@@Base+0x1734>
   13e3c:	ldr	r3, [fp, #-8]
   13e40:	b	13f08 <_start@@Base+0x17f8>
   13e44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13e48:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e4c:	add	r3, r2, r3
   13e50:	str	r3, [fp, #-20]	; 0xffffffec
   13e54:	ldr	r3, [fp, #-16]
   13e58:	mov	r2, #0
   13e5c:	str	r2, [r3, #12]
   13e60:	b	13e98 <_start@@Base+0x1788>
   13e64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13e68:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e6c:	add	r3, r2, r3
   13e70:	ldrb	r3, [r3]
   13e74:	cmp	r3, #34	; 0x22
   13e78:	beq	13e84 <_start@@Base+0x1774>
   13e7c:	ldr	r3, [fp, #-8]
   13e80:	b	13f08 <_start@@Base+0x17f8>
   13e84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13e88:	add	r3, r3, #1
   13e8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e90:	add	r3, r2, r3
   13e94:	str	r3, [fp, #-20]	; 0xffffffec
   13e98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ea0:	ldr	r0, [fp, #-16]
   13ea4:	bl	13474 <_start@@Base+0xd64>
   13ea8:	str	r0, [fp, #-20]	; 0xffffffec
   13eac:	ldr	r2, [fp, #-20]	; 0xffffffec
   13eb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13eb4:	cmp	r2, r3
   13eb8:	beq	13ef0 <_start@@Base+0x17e0>
   13ebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ec0:	ldrb	r3, [r3]
   13ec4:	cmp	r3, #58	; 0x3a
   13ec8:	bne	13ef0 <_start@@Base+0x17e0>
   13ecc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ed0:	add	r3, r3, #1
   13ed4:	str	r3, [fp, #-20]	; 0xffffffec
   13ed8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13edc:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ee0:	ldr	r0, [fp, #-16]
   13ee4:	bl	13474 <_start@@Base+0xd64>
   13ee8:	mov	r3, r0
   13eec:	b	13f08 <_start@@Base+0x17f8>
   13ef0:	mov	r3, #4
   13ef4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13ef8:	ldr	r1, [fp, #-20]	; 0xffffffec
   13efc:	ldr	r0, [fp, #-16]
   13f00:	bl	3198c <flatcc_json_parser_set_error@@Base>
   13f04:	mov	r3, r0
   13f08:	mov	r0, r3
   13f0c:	sub	sp, fp, #4
   13f10:	pop	{fp, pc}
   13f14:	push	{fp, lr}
   13f18:	add	fp, sp, #4
   13f1c:	sub	sp, sp, #16
   13f20:	str	r0, [fp, #-8]
   13f24:	str	r1, [fp, #-12]
   13f28:	str	r2, [fp, #-16]
   13f2c:	str	r3, [fp, #-20]	; 0xffffffec
   13f30:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f34:	cmp	r3, #0
   13f38:	beq	13f58 <_start@@Base+0x1848>
   13f3c:	mov	r3, #8
   13f40:	ldr	r2, [fp, #-16]
   13f44:	ldr	r1, [fp, #-12]
   13f48:	ldr	r0, [fp, #-8]
   13f4c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   13f50:	mov	r3, r0
   13f54:	b	13f68 <_start@@Base+0x1858>
   13f58:	ldr	r1, [fp, #12]
   13f5c:	ldrd	r2, [fp, #4]
   13f60:	strd	r2, [r1]
   13f64:	ldr	r3, [fp, #-12]
   13f68:	mov	r0, r3
   13f6c:	sub	sp, fp, #4
   13f70:	pop	{fp, pc}
   13f74:	push	{fp, lr}
   13f78:	add	fp, sp, #4
   13f7c:	sub	sp, sp, #16
   13f80:	str	r0, [fp, #-8]
   13f84:	str	r1, [fp, #-12]
   13f88:	str	r2, [fp, #-16]
   13f8c:	str	r3, [fp, #-20]	; 0xffffffec
   13f90:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f94:	cmp	r3, #0
   13f98:	beq	13fb8 <_start@@Base+0x18a8>
   13f9c:	mov	r3, #8
   13fa0:	ldr	r2, [fp, #-16]
   13fa4:	ldr	r1, [fp, #-12]
   13fa8:	ldr	r0, [fp, #-8]
   13fac:	bl	3198c <flatcc_json_parser_set_error@@Base>
   13fb0:	mov	r3, r0
   13fb4:	b	13fe4 <_start@@Base+0x18d4>
   13fb8:	ldr	r2, [fp, #4]
   13fbc:	ldr	r3, [fp, #8]
   13fc0:	orr	r3, r2, r3
   13fc4:	cmp	r3, #0
   13fc8:	movne	r3, #1
   13fcc:	moveq	r3, #0
   13fd0:	uxtb	r3, r3
   13fd4:	mov	r2, r3
   13fd8:	ldr	r3, [fp, #12]
   13fdc:	strb	r2, [r3]
   13fe0:	ldr	r3, [fp, #-12]
   13fe4:	mov	r0, r3
   13fe8:	sub	sp, fp, #4
   13fec:	pop	{fp, pc}
   13ff0:	push	{fp, lr}
   13ff4:	add	fp, sp, #4
   13ff8:	sub	sp, sp, #16
   13ffc:	str	r0, [fp, #-8]
   14000:	str	r1, [fp, #-12]
   14004:	str	r2, [fp, #-16]
   14008:	str	r3, [fp, #-20]	; 0xffffffec
   1400c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14010:	cmp	r3, #0
   14014:	beq	14034 <_start@@Base+0x1924>
   14018:	mov	r3, #8
   1401c:	ldr	r2, [fp, #-16]
   14020:	ldr	r1, [fp, #-12]
   14024:	ldr	r0, [fp, #-8]
   14028:	bl	3198c <flatcc_json_parser_set_error@@Base>
   1402c:	mov	r3, r0
   14030:	b	14078 <_start@@Base+0x1968>
   14034:	ldrd	r2, [fp, #4]
   14038:	mvn	r0, #0
   1403c:	mov	r1, #0
   14040:	cmp	r3, r1
   14044:	cmpeq	r2, r0
   14048:	bls	14068 <_start@@Base+0x1958>
   1404c:	mov	r3, #7
   14050:	ldr	r2, [fp, #-16]
   14054:	ldr	r1, [fp, #-12]
   14058:	ldr	r0, [fp, #-8]
   1405c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   14060:	mov	r3, r0
   14064:	b	14078 <_start@@Base+0x1968>
   14068:	ldr	r2, [fp, #4]
   1406c:	ldr	r3, [fp, #12]
   14070:	str	r2, [r3]
   14074:	ldr	r3, [fp, #-12]
   14078:	mov	r0, r3
   1407c:	sub	sp, fp, #4
   14080:	pop	{fp, pc}
   14084:	push	{fp, lr}
   14088:	add	fp, sp, #4
   1408c:	sub	sp, sp, #16
   14090:	str	r0, [fp, #-8]
   14094:	str	r1, [fp, #-12]
   14098:	str	r2, [fp, #-16]
   1409c:	str	r3, [fp, #-20]	; 0xffffffec
   140a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   140a4:	cmp	r3, #0
   140a8:	beq	140c8 <_start@@Base+0x19b8>
   140ac:	mov	r3, #8
   140b0:	ldr	r2, [fp, #-16]
   140b4:	ldr	r1, [fp, #-12]
   140b8:	ldr	r0, [fp, #-8]
   140bc:	bl	3198c <flatcc_json_parser_set_error@@Base>
   140c0:	mov	r3, r0
   140c4:	b	1410c <_start@@Base+0x19fc>
   140c8:	ldrd	r2, [fp, #4]
   140cc:	ldr	r0, [pc, #68]	; 14118 <_start@@Base+0x1a08>
   140d0:	mov	r1, #0
   140d4:	cmp	r3, r1
   140d8:	cmpeq	r2, r0
   140dc:	bls	140fc <_start@@Base+0x19ec>
   140e0:	mov	r3, #7
   140e4:	ldr	r2, [fp, #-16]
   140e8:	ldr	r1, [fp, #-12]
   140ec:	ldr	r0, [fp, #-8]
   140f0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   140f4:	mov	r3, r0
   140f8:	b	1410c <_start@@Base+0x19fc>
   140fc:	ldrh	r2, [fp, #4]
   14100:	ldr	r3, [fp, #12]
   14104:	strh	r2, [r3]
   14108:	ldr	r3, [fp, #-12]
   1410c:	mov	r0, r3
   14110:	sub	sp, fp, #4
   14114:	pop	{fp, pc}
   14118:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   1411c:	push	{fp, lr}
   14120:	add	fp, sp, #4
   14124:	sub	sp, sp, #16
   14128:	str	r0, [fp, #-8]
   1412c:	str	r1, [fp, #-12]
   14130:	str	r2, [fp, #-16]
   14134:	str	r3, [fp, #-20]	; 0xffffffec
   14138:	ldr	r3, [fp, #-20]	; 0xffffffec
   1413c:	cmp	r3, #0
   14140:	beq	14160 <_start@@Base+0x1a50>
   14144:	mov	r3, #8
   14148:	ldr	r2, [fp, #-16]
   1414c:	ldr	r1, [fp, #-12]
   14150:	ldr	r0, [fp, #-8]
   14154:	bl	3198c <flatcc_json_parser_set_error@@Base>
   14158:	mov	r3, r0
   1415c:	b	1419c <_start@@Base+0x1a8c>
   14160:	ldrd	r2, [fp, #4]
   14164:	cmp	r3, #0
   14168:	cmpeq	r2, #255	; 0xff
   1416c:	bls	1418c <_start@@Base+0x1a7c>
   14170:	mov	r3, #7
   14174:	ldr	r2, [fp, #-16]
   14178:	ldr	r1, [fp, #-12]
   1417c:	ldr	r0, [fp, #-8]
   14180:	bl	3198c <flatcc_json_parser_set_error@@Base>
   14184:	mov	r3, r0
   14188:	b	1419c <_start@@Base+0x1a8c>
   1418c:	ldrb	r2, [fp, #4]
   14190:	ldr	r3, [fp, #12]
   14194:	strb	r2, [r3]
   14198:	ldr	r3, [fp, #-12]
   1419c:	mov	r0, r3
   141a0:	sub	sp, fp, #4
   141a4:	pop	{fp, pc}
   141a8:	push	{fp, lr}
   141ac:	add	fp, sp, #4
   141b0:	sub	sp, sp, #16
   141b4:	str	r0, [fp, #-8]
   141b8:	str	r1, [fp, #-12]
   141bc:	str	r2, [fp, #-16]
   141c0:	str	r3, [fp, #-20]	; 0xffffffec
   141c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   141c8:	cmp	r3, #0
   141cc:	beq	14214 <_start@@Base+0x1b04>
   141d0:	ldrd	r2, [fp, #4]
   141d4:	cmp	r3, #-2147483648	; 0x80000000
   141d8:	cmpeq	r2, #0
   141dc:	bls	141fc <_start@@Base+0x1aec>
   141e0:	mov	r3, #8
   141e4:	ldr	r2, [fp, #-16]
   141e8:	ldr	r1, [fp, #-12]
   141ec:	ldr	r0, [fp, #-8]
   141f0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   141f4:	mov	r3, r0
   141f8:	b	14250 <_start@@Base+0x1b40>
   141fc:	ldrd	r2, [fp, #4]
   14200:	rsbs	r2, r2, #0
   14204:	rsc	r3, r3, #0
   14208:	ldr	r1, [fp, #12]
   1420c:	strd	r2, [r1]
   14210:	b	1424c <_start@@Base+0x1b3c>
   14214:	ldrd	r2, [fp, #4]
   14218:	cmp	r2, #0
   1421c:	sbcs	r3, r3, #0
   14220:	bge	14240 <_start@@Base+0x1b30>
   14224:	mov	r3, #7
   14228:	ldr	r2, [fp, #-16]
   1422c:	ldr	r1, [fp, #-12]
   14230:	ldr	r0, [fp, #-8]
   14234:	bl	3198c <flatcc_json_parser_set_error@@Base>
   14238:	mov	r3, r0
   1423c:	b	14250 <_start@@Base+0x1b40>
   14240:	ldrd	r2, [fp, #4]
   14244:	ldr	r1, [fp, #12]
   14248:	strd	r2, [r1]
   1424c:	ldr	r3, [fp, #-12]
   14250:	mov	r0, r3
   14254:	sub	sp, fp, #4
   14258:	pop	{fp, pc}
   1425c:	push	{fp, lr}
   14260:	add	fp, sp, #4
   14264:	sub	sp, sp, #16
   14268:	str	r0, [fp, #-8]
   1426c:	str	r1, [fp, #-12]
   14270:	str	r2, [fp, #-16]
   14274:	str	r3, [fp, #-20]	; 0xffffffec
   14278:	ldr	r3, [fp, #-20]	; 0xffffffec
   1427c:	cmp	r3, #0
   14280:	beq	142c8 <_start@@Base+0x1bb8>
   14284:	ldrd	r2, [fp, #4]
   14288:	cmp	r3, #0
   1428c:	cmpeq	r2, #-2147483648	; 0x80000000
   14290:	bls	142b0 <_start@@Base+0x1ba0>
   14294:	mov	r3, #8
   14298:	ldr	r2, [fp, #-16]
   1429c:	ldr	r1, [fp, #-12]
   142a0:	ldr	r0, [fp, #-8]
   142a4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   142a8:	mov	r3, r0
   142ac:	b	1430c <_start@@Base+0x1bfc>
   142b0:	ldr	r3, [fp, #4]
   142b4:	rsb	r3, r3, #0
   142b8:	mov	r2, r3
   142bc:	ldr	r3, [fp, #12]
   142c0:	str	r2, [r3]
   142c4:	b	14308 <_start@@Base+0x1bf8>
   142c8:	ldrd	r2, [fp, #4]
   142cc:	mvn	r0, #-2147483648	; 0x80000000
   142d0:	mov	r1, #0
   142d4:	cmp	r3, r1
   142d8:	cmpeq	r2, r0
   142dc:	bls	142fc <_start@@Base+0x1bec>
   142e0:	mov	r3, #7
   142e4:	ldr	r2, [fp, #-16]
   142e8:	ldr	r1, [fp, #-12]
   142ec:	ldr	r0, [fp, #-8]
   142f0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   142f4:	mov	r3, r0
   142f8:	b	1430c <_start@@Base+0x1bfc>
   142fc:	ldr	r2, [fp, #4]
   14300:	ldr	r3, [fp, #12]
   14304:	str	r2, [r3]
   14308:	ldr	r3, [fp, #-12]
   1430c:	mov	r0, r3
   14310:	sub	sp, fp, #4
   14314:	pop	{fp, pc}
   14318:	push	{fp, lr}
   1431c:	add	fp, sp, #4
   14320:	sub	sp, sp, #16
   14324:	str	r0, [fp, #-8]
   14328:	str	r1, [fp, #-12]
   1432c:	str	r2, [fp, #-16]
   14330:	str	r3, [fp, #-20]	; 0xffffffec
   14334:	ldr	r3, [fp, #-20]	; 0xffffffec
   14338:	cmp	r3, #0
   1433c:	beq	14388 <_start@@Base+0x1c78>
   14340:	ldrd	r2, [fp, #4]
   14344:	cmp	r3, #0
   14348:	cmpeq	r2, #32768	; 0x8000
   1434c:	bls	1436c <_start@@Base+0x1c5c>
   14350:	mov	r3, #8
   14354:	ldr	r2, [fp, #-16]
   14358:	ldr	r1, [fp, #-12]
   1435c:	ldr	r0, [fp, #-8]
   14360:	bl	3198c <flatcc_json_parser_set_error@@Base>
   14364:	mov	r3, r0
   14368:	b	143cc <_start@@Base+0x1cbc>
   1436c:	ldrh	r3, [fp, #4]
   14370:	rsb	r3, r3, #0
   14374:	uxth	r3, r3
   14378:	sxth	r2, r3
   1437c:	ldr	r3, [fp, #12]
   14380:	strh	r2, [r3]
   14384:	b	143c8 <_start@@Base+0x1cb8>
   14388:	ldrd	r2, [fp, #4]
   1438c:	ldr	r0, [pc, #68]	; 143d8 <_start@@Base+0x1cc8>
   14390:	mov	r1, #0
   14394:	cmp	r3, r1
   14398:	cmpeq	r2, r0
   1439c:	bls	143bc <_start@@Base+0x1cac>
   143a0:	mov	r3, #7
   143a4:	ldr	r2, [fp, #-16]
   143a8:	ldr	r1, [fp, #-12]
   143ac:	ldr	r0, [fp, #-8]
   143b0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   143b4:	mov	r3, r0
   143b8:	b	143cc <_start@@Base+0x1cbc>
   143bc:	ldrsh	r2, [fp, #4]
   143c0:	ldr	r3, [fp, #12]
   143c4:	strh	r2, [r3]
   143c8:	ldr	r3, [fp, #-12]
   143cc:	mov	r0, r3
   143d0:	sub	sp, fp, #4
   143d4:	pop	{fp, pc}
   143d8:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   143dc:	push	{fp, lr}
   143e0:	add	fp, sp, #4
   143e4:	sub	sp, sp, #16
   143e8:	str	r0, [fp, #-8]
   143ec:	str	r1, [fp, #-12]
   143f0:	str	r2, [fp, #-16]
   143f4:	str	r3, [fp, #-20]	; 0xffffffec
   143f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   143fc:	cmp	r3, #0
   14400:	beq	1444c <_start@@Base+0x1d3c>
   14404:	ldrd	r2, [fp, #4]
   14408:	cmp	r3, #0
   1440c:	cmpeq	r2, #128	; 0x80
   14410:	bls	14430 <_start@@Base+0x1d20>
   14414:	mov	r3, #8
   14418:	ldr	r2, [fp, #-16]
   1441c:	ldr	r1, [fp, #-12]
   14420:	ldr	r0, [fp, #-8]
   14424:	bl	3198c <flatcc_json_parser_set_error@@Base>
   14428:	mov	r3, r0
   1442c:	b	14488 <_start@@Base+0x1d78>
   14430:	ldrb	r3, [fp, #4]
   14434:	rsb	r3, r3, #0
   14438:	uxtb	r3, r3
   1443c:	sxtb	r2, r3
   14440:	ldr	r3, [fp, #12]
   14444:	strb	r2, [r3]
   14448:	b	14484 <_start@@Base+0x1d74>
   1444c:	ldrd	r2, [fp, #4]
   14450:	cmp	r3, #0
   14454:	cmpeq	r2, #127	; 0x7f
   14458:	bls	14478 <_start@@Base+0x1d68>
   1445c:	mov	r3, #7
   14460:	ldr	r2, [fp, #-16]
   14464:	ldr	r1, [fp, #-12]
   14468:	ldr	r0, [fp, #-8]
   1446c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   14470:	mov	r3, r0
   14474:	b	14488 <_start@@Base+0x1d78>
   14478:	ldrsb	r2, [fp, #4]
   1447c:	ldr	r3, [fp, #12]
   14480:	strb	r2, [r3]
   14484:	ldr	r3, [fp, #-12]
   14488:	mov	r0, r3
   1448c:	sub	sp, fp, #4
   14490:	pop	{fp, pc}
   14494:	push	{fp, lr}
   14498:	add	fp, sp, #4
   1449c:	sub	sp, sp, #16
   144a0:	str	r0, [fp, #-8]
   144a4:	str	r1, [fp, #-12]
   144a8:	str	r2, [fp, #-16]
   144ac:	str	r3, [fp, #-20]	; 0xffffffec
   144b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   144b4:	cmp	r3, #0
   144b8:	beq	144d0 <_start@@Base+0x1dc0>
   144bc:	ldrd	r0, [fp, #4]
   144c0:	bl	353f4 <flatcc_json_parser_struct_as_root@@Base+0x8e0>
   144c4:	mov	r3, r0
   144c8:	eor	r2, r3, #-2147483648	; 0x80000000
   144cc:	b	144dc <_start@@Base+0x1dcc>
   144d0:	ldrd	r0, [fp, #4]
   144d4:	bl	353f4 <flatcc_json_parser_struct_as_root@@Base+0x8e0>
   144d8:	mov	r2, r0
   144dc:	ldr	r3, [fp, #12]
   144e0:	str	r2, [r3]
   144e4:	ldr	r3, [fp, #-12]
   144e8:	mov	r0, r3
   144ec:	sub	sp, fp, #4
   144f0:	pop	{fp, pc}
   144f4:	push	{fp, lr}
   144f8:	add	fp, sp, #4
   144fc:	sub	sp, sp, #16
   14500:	str	r0, [fp, #-8]
   14504:	str	r1, [fp, #-12]
   14508:	str	r2, [fp, #-16]
   1450c:	str	r3, [fp, #-20]	; 0xffffffec
   14510:	ldr	r3, [fp, #-20]	; 0xffffffec
   14514:	cmp	r3, #0
   14518:	beq	14534 <_start@@Base+0x1e24>
   1451c:	ldrd	r0, [fp, #4]
   14520:	bl	351bc <flatcc_json_parser_struct_as_root@@Base+0x6a8>
   14524:	mov	r2, r0
   14528:	mov	r3, r1
   1452c:	eor	r3, r3, #-2147483648	; 0x80000000
   14530:	b	14544 <_start@@Base+0x1e34>
   14534:	ldrd	r0, [fp, #4]
   14538:	bl	351bc <flatcc_json_parser_struct_as_root@@Base+0x6a8>
   1453c:	mov	r2, r0
   14540:	mov	r3, r1
   14544:	ldr	r1, [fp, #12]
   14548:	strd	r2, [r1]
   1454c:	ldr	r3, [fp, #-12]
   14550:	mov	r0, r3
   14554:	sub	sp, fp, #4
   14558:	pop	{fp, pc}
   1455c:	push	{fp, lr}
   14560:	add	fp, sp, #4
   14564:	sub	sp, sp, #16
   14568:	str	r0, [fp, #-8]
   1456c:	str	r1, [fp, #-12]
   14570:	str	r2, [fp, #-16]
   14574:	ldr	r2, [fp, #-16]
   14578:	ldr	r3, [fp, #-12]
   1457c:	sub	r3, r2, r3
   14580:	cmp	r3, #3
   14584:	ble	145b8 <_start@@Base+0x1ea8>
   14588:	mov	r2, #4
   1458c:	ldr	r3, [pc, #72]	; 145dc <_start@@Base+0x1ecc>
   14590:	add	r3, pc, r3
   14594:	mov	r1, r3
   14598:	ldr	r0, [fp, #-12]
   1459c:	bl	12614 <memcmp@plt>
   145a0:	mov	r3, r0
   145a4:	cmp	r3, #0
   145a8:	bne	145b8 <_start@@Base+0x1ea8>
   145ac:	ldr	r3, [fp, #-12]
   145b0:	add	r3, r3, #4
   145b4:	b	145d0 <_start@@Base+0x1ec0>
   145b8:	mov	r3, #26
   145bc:	ldr	r2, [fp, #-16]
   145c0:	ldr	r1, [fp, #-12]
   145c4:	ldr	r0, [fp, #-8]
   145c8:	bl	3198c <flatcc_json_parser_set_error@@Base>
   145cc:	mov	r3, r0
   145d0:	mov	r0, r3
   145d4:	sub	sp, fp, #4
   145d8:	pop	{fp, pc}
   145dc:	andeq	r1, r2, r0, lsl r0
   145e0:	push	{fp, lr}
   145e4:	add	fp, sp, #4
   145e8:	sub	sp, sp, #56	; 0x38
   145ec:	str	r0, [fp, #-32]	; 0xffffffe0
   145f0:	str	r1, [fp, #-36]	; 0xffffffdc
   145f4:	str	r2, [fp, #-40]	; 0xffffffd8
   145f8:	str	r3, [fp, #-44]	; 0xffffffd4
   145fc:	mov	r2, #0
   14600:	mov	r3, #0
   14604:	strd	r2, [fp, #-20]	; 0xffffffec
   14608:	mov	r3, #0
   1460c:	str	r3, [fp, #-24]	; 0xffffffe8
   14610:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14614:	str	r3, [fp, #-8]
   14618:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1461c:	mov	r2, #0
   14620:	mov	r3, #0
   14624:	strd	r2, [r1]
   14628:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1462c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14630:	cmp	r2, r3
   14634:	bne	14640 <_start@@Base+0x1f30>
   14638:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1463c:	b	146a8 <_start@@Base+0x1f98>
   14640:	sub	r2, fp, #24
   14644:	sub	r3, fp, #20
   14648:	str	r3, [sp]
   1464c:	mov	r3, r2
   14650:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14654:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14658:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1465c:	bl	33610 <flatcc_json_parser_integer@@Base>
   14660:	str	r0, [fp, #-36]	; 0xffffffdc
   14664:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14668:	ldr	r3, [fp, #-8]
   1466c:	cmp	r2, r3
   14670:	beq	146a4 <_start@@Base+0x1f94>
   14674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14678:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1467c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14680:	str	r1, [sp, #8]
   14684:	strd	r2, [sp]
   14688:	mov	r3, r0
   1468c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14690:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14694:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14698:	bl	13f14 <_start@@Base+0x1804>
   1469c:	mov	r3, r0
   146a0:	b	146a8 <_start@@Base+0x1f98>
   146a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   146a8:	mov	r0, r3
   146ac:	sub	sp, fp, #4
   146b0:	pop	{fp, pc}
   146b4:	push	{fp, lr}
   146b8:	add	fp, sp, #4
   146bc:	sub	sp, sp, #56	; 0x38
   146c0:	str	r0, [fp, #-32]	; 0xffffffe0
   146c4:	str	r1, [fp, #-36]	; 0xffffffdc
   146c8:	str	r2, [fp, #-40]	; 0xffffffd8
   146cc:	str	r3, [fp, #-44]	; 0xffffffd4
   146d0:	mov	r2, #0
   146d4:	mov	r3, #0
   146d8:	strd	r2, [fp, #-20]	; 0xffffffec
   146dc:	mov	r3, #0
   146e0:	str	r3, [fp, #-24]	; 0xffffffe8
   146e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   146e8:	str	r3, [fp, #-8]
   146ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   146f0:	mov	r2, #0
   146f4:	str	r2, [r3]
   146f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   146fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14700:	cmp	r2, r3
   14704:	bne	14710 <_start@@Base+0x2000>
   14708:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1470c:	b	14778 <_start@@Base+0x2068>
   14710:	sub	r2, fp, #24
   14714:	sub	r3, fp, #20
   14718:	str	r3, [sp]
   1471c:	mov	r3, r2
   14720:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14724:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14728:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1472c:	bl	33610 <flatcc_json_parser_integer@@Base>
   14730:	str	r0, [fp, #-36]	; 0xffffffdc
   14734:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14738:	ldr	r3, [fp, #-8]
   1473c:	cmp	r2, r3
   14740:	beq	14774 <_start@@Base+0x2064>
   14744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14748:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1474c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14750:	str	r1, [sp, #8]
   14754:	strd	r2, [sp]
   14758:	mov	r3, r0
   1475c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14760:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14764:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14768:	bl	13ff0 <_start@@Base+0x18e0>
   1476c:	mov	r3, r0
   14770:	b	14778 <_start@@Base+0x2068>
   14774:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14778:	mov	r0, r3
   1477c:	sub	sp, fp, #4
   14780:	pop	{fp, pc}
   14784:	push	{fp, lr}
   14788:	add	fp, sp, #4
   1478c:	sub	sp, sp, #56	; 0x38
   14790:	str	r0, [fp, #-32]	; 0xffffffe0
   14794:	str	r1, [fp, #-36]	; 0xffffffdc
   14798:	str	r2, [fp, #-40]	; 0xffffffd8
   1479c:	str	r3, [fp, #-44]	; 0xffffffd4
   147a0:	mov	r2, #0
   147a4:	mov	r3, #0
   147a8:	strd	r2, [fp, #-20]	; 0xffffffec
   147ac:	mov	r3, #0
   147b0:	str	r3, [fp, #-24]	; 0xffffffe8
   147b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   147b8:	str	r3, [fp, #-8]
   147bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   147c0:	mov	r2, #0
   147c4:	strh	r2, [r3]
   147c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   147cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147d0:	cmp	r2, r3
   147d4:	bne	147e0 <_start@@Base+0x20d0>
   147d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   147dc:	b	14848 <_start@@Base+0x2138>
   147e0:	sub	r2, fp, #24
   147e4:	sub	r3, fp, #20
   147e8:	str	r3, [sp]
   147ec:	mov	r3, r2
   147f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   147f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   147f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147fc:	bl	33610 <flatcc_json_parser_integer@@Base>
   14800:	str	r0, [fp, #-36]	; 0xffffffdc
   14804:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14808:	ldr	r3, [fp, #-8]
   1480c:	cmp	r2, r3
   14810:	beq	14844 <_start@@Base+0x2134>
   14814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14818:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1481c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14820:	str	r1, [sp, #8]
   14824:	strd	r2, [sp]
   14828:	mov	r3, r0
   1482c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14830:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14834:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14838:	bl	14084 <_start@@Base+0x1974>
   1483c:	mov	r3, r0
   14840:	b	14848 <_start@@Base+0x2138>
   14844:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14848:	mov	r0, r3
   1484c:	sub	sp, fp, #4
   14850:	pop	{fp, pc}
   14854:	push	{fp, lr}
   14858:	add	fp, sp, #4
   1485c:	sub	sp, sp, #56	; 0x38
   14860:	str	r0, [fp, #-32]	; 0xffffffe0
   14864:	str	r1, [fp, #-36]	; 0xffffffdc
   14868:	str	r2, [fp, #-40]	; 0xffffffd8
   1486c:	str	r3, [fp, #-44]	; 0xffffffd4
   14870:	mov	r2, #0
   14874:	mov	r3, #0
   14878:	strd	r2, [fp, #-20]	; 0xffffffec
   1487c:	mov	r3, #0
   14880:	str	r3, [fp, #-24]	; 0xffffffe8
   14884:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14888:	str	r3, [fp, #-8]
   1488c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14890:	mov	r2, #0
   14894:	strb	r2, [r3]
   14898:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1489c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   148a0:	cmp	r2, r3
   148a4:	bne	148b0 <_start@@Base+0x21a0>
   148a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   148ac:	b	14918 <_start@@Base+0x2208>
   148b0:	sub	r2, fp, #24
   148b4:	sub	r3, fp, #20
   148b8:	str	r3, [sp]
   148bc:	mov	r3, r2
   148c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   148c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   148c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148cc:	bl	33610 <flatcc_json_parser_integer@@Base>
   148d0:	str	r0, [fp, #-36]	; 0xffffffdc
   148d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   148d8:	ldr	r3, [fp, #-8]
   148dc:	cmp	r2, r3
   148e0:	beq	14914 <_start@@Base+0x2204>
   148e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   148e8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   148ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   148f0:	str	r1, [sp, #8]
   148f4:	strd	r2, [sp]
   148f8:	mov	r3, r0
   148fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14900:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14904:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14908:	bl	1411c <_start@@Base+0x1a0c>
   1490c:	mov	r3, r0
   14910:	b	14918 <_start@@Base+0x2208>
   14914:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14918:	mov	r0, r3
   1491c:	sub	sp, fp, #4
   14920:	pop	{fp, pc}
   14924:	push	{fp, lr}
   14928:	add	fp, sp, #4
   1492c:	sub	sp, sp, #56	; 0x38
   14930:	str	r0, [fp, #-32]	; 0xffffffe0
   14934:	str	r1, [fp, #-36]	; 0xffffffdc
   14938:	str	r2, [fp, #-40]	; 0xffffffd8
   1493c:	str	r3, [fp, #-44]	; 0xffffffd4
   14940:	mov	r2, #0
   14944:	mov	r3, #0
   14948:	strd	r2, [fp, #-20]	; 0xffffffec
   1494c:	mov	r3, #0
   14950:	str	r3, [fp, #-24]	; 0xffffffe8
   14954:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14958:	str	r3, [fp, #-8]
   1495c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14960:	mov	r2, #0
   14964:	mov	r3, #0
   14968:	strd	r2, [r1]
   1496c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14970:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14974:	cmp	r2, r3
   14978:	bne	14984 <_start@@Base+0x2274>
   1497c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14980:	b	149ec <_start@@Base+0x22dc>
   14984:	sub	r2, fp, #24
   14988:	sub	r3, fp, #20
   1498c:	str	r3, [sp]
   14990:	mov	r3, r2
   14994:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14998:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1499c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   149a0:	bl	33610 <flatcc_json_parser_integer@@Base>
   149a4:	str	r0, [fp, #-36]	; 0xffffffdc
   149a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   149ac:	ldr	r3, [fp, #-8]
   149b0:	cmp	r2, r3
   149b4:	beq	149e8 <_start@@Base+0x22d8>
   149b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149bc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   149c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149c4:	str	r1, [sp, #8]
   149c8:	strd	r2, [sp]
   149cc:	mov	r3, r0
   149d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   149d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   149d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   149dc:	bl	141a8 <_start@@Base+0x1a98>
   149e0:	mov	r3, r0
   149e4:	b	149ec <_start@@Base+0x22dc>
   149e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   149ec:	mov	r0, r3
   149f0:	sub	sp, fp, #4
   149f4:	pop	{fp, pc}
   149f8:	push	{fp, lr}
   149fc:	add	fp, sp, #4
   14a00:	sub	sp, sp, #56	; 0x38
   14a04:	str	r0, [fp, #-32]	; 0xffffffe0
   14a08:	str	r1, [fp, #-36]	; 0xffffffdc
   14a0c:	str	r2, [fp, #-40]	; 0xffffffd8
   14a10:	str	r3, [fp, #-44]	; 0xffffffd4
   14a14:	mov	r2, #0
   14a18:	mov	r3, #0
   14a1c:	strd	r2, [fp, #-20]	; 0xffffffec
   14a20:	mov	r3, #0
   14a24:	str	r3, [fp, #-24]	; 0xffffffe8
   14a28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14a2c:	str	r3, [fp, #-8]
   14a30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14a34:	mov	r2, #0
   14a38:	str	r2, [r3]
   14a3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14a40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14a44:	cmp	r2, r3
   14a48:	bne	14a54 <_start@@Base+0x2344>
   14a4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14a50:	b	14abc <_start@@Base+0x23ac>
   14a54:	sub	r2, fp, #24
   14a58:	sub	r3, fp, #20
   14a5c:	str	r3, [sp]
   14a60:	mov	r3, r2
   14a64:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14a68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14a6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a70:	bl	33610 <flatcc_json_parser_integer@@Base>
   14a74:	str	r0, [fp, #-36]	; 0xffffffdc
   14a78:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14a7c:	ldr	r3, [fp, #-8]
   14a80:	cmp	r2, r3
   14a84:	beq	14ab8 <_start@@Base+0x23a8>
   14a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a8c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14a90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a94:	str	r1, [sp, #8]
   14a98:	strd	r2, [sp]
   14a9c:	mov	r3, r0
   14aa0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14aa4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14aa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14aac:	bl	1425c <_start@@Base+0x1b4c>
   14ab0:	mov	r3, r0
   14ab4:	b	14abc <_start@@Base+0x23ac>
   14ab8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14abc:	mov	r0, r3
   14ac0:	sub	sp, fp, #4
   14ac4:	pop	{fp, pc}
   14ac8:	push	{fp, lr}
   14acc:	add	fp, sp, #4
   14ad0:	sub	sp, sp, #56	; 0x38
   14ad4:	str	r0, [fp, #-32]	; 0xffffffe0
   14ad8:	str	r1, [fp, #-36]	; 0xffffffdc
   14adc:	str	r2, [fp, #-40]	; 0xffffffd8
   14ae0:	str	r3, [fp, #-44]	; 0xffffffd4
   14ae4:	mov	r2, #0
   14ae8:	mov	r3, #0
   14aec:	strd	r2, [fp, #-20]	; 0xffffffec
   14af0:	mov	r3, #0
   14af4:	str	r3, [fp, #-24]	; 0xffffffe8
   14af8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14afc:	str	r3, [fp, #-8]
   14b00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14b04:	mov	r2, #0
   14b08:	strh	r2, [r3]
   14b0c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14b10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14b14:	cmp	r2, r3
   14b18:	bne	14b24 <_start@@Base+0x2414>
   14b1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14b20:	b	14b8c <_start@@Base+0x247c>
   14b24:	sub	r2, fp, #24
   14b28:	sub	r3, fp, #20
   14b2c:	str	r3, [sp]
   14b30:	mov	r3, r2
   14b34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14b38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14b3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b40:	bl	33610 <flatcc_json_parser_integer@@Base>
   14b44:	str	r0, [fp, #-36]	; 0xffffffdc
   14b48:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14b4c:	ldr	r3, [fp, #-8]
   14b50:	cmp	r2, r3
   14b54:	beq	14b88 <_start@@Base+0x2478>
   14b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b5c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14b60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b64:	str	r1, [sp, #8]
   14b68:	strd	r2, [sp]
   14b6c:	mov	r3, r0
   14b70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14b74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14b78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b7c:	bl	14318 <_start@@Base+0x1c08>
   14b80:	mov	r3, r0
   14b84:	b	14b8c <_start@@Base+0x247c>
   14b88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14b8c:	mov	r0, r3
   14b90:	sub	sp, fp, #4
   14b94:	pop	{fp, pc}
   14b98:	push	{fp, lr}
   14b9c:	add	fp, sp, #4
   14ba0:	sub	sp, sp, #56	; 0x38
   14ba4:	str	r0, [fp, #-32]	; 0xffffffe0
   14ba8:	str	r1, [fp, #-36]	; 0xffffffdc
   14bac:	str	r2, [fp, #-40]	; 0xffffffd8
   14bb0:	str	r3, [fp, #-44]	; 0xffffffd4
   14bb4:	mov	r2, #0
   14bb8:	mov	r3, #0
   14bbc:	strd	r2, [fp, #-20]	; 0xffffffec
   14bc0:	mov	r3, #0
   14bc4:	str	r3, [fp, #-24]	; 0xffffffe8
   14bc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14bcc:	str	r3, [fp, #-8]
   14bd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14bd4:	mov	r2, #0
   14bd8:	strb	r2, [r3]
   14bdc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14be0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14be4:	cmp	r2, r3
   14be8:	bne	14bf4 <_start@@Base+0x24e4>
   14bec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14bf0:	b	14c5c <_start@@Base+0x254c>
   14bf4:	sub	r2, fp, #24
   14bf8:	sub	r3, fp, #20
   14bfc:	str	r3, [sp]
   14c00:	mov	r3, r2
   14c04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14c08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14c0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c10:	bl	33610 <flatcc_json_parser_integer@@Base>
   14c14:	str	r0, [fp, #-36]	; 0xffffffdc
   14c18:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14c1c:	ldr	r3, [fp, #-8]
   14c20:	cmp	r2, r3
   14c24:	beq	14c58 <_start@@Base+0x2548>
   14c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c2c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14c30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c34:	str	r1, [sp, #8]
   14c38:	strd	r2, [sp]
   14c3c:	mov	r3, r0
   14c40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14c44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14c48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c4c:	bl	143dc <_start@@Base+0x1ccc>
   14c50:	mov	r3, r0
   14c54:	b	14c5c <_start@@Base+0x254c>
   14c58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14c5c:	mov	r0, r3
   14c60:	sub	sp, fp, #4
   14c64:	pop	{fp, pc}
   14c68:	push	{fp, lr}
   14c6c:	add	fp, sp, #4
   14c70:	sub	sp, sp, #24
   14c74:	str	r0, [fp, #-16]
   14c78:	str	r1, [fp, #-20]	; 0xffffffec
   14c7c:	str	r2, [fp, #-24]	; 0xffffffe8
   14c80:	str	r3, [fp, #-28]	; 0xffffffe4
   14c84:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c88:	str	r3, [fp, #-8]
   14c8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14c90:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c94:	sub	r3, r2, r3
   14c98:	cmp	r3, #3
   14c9c:	ble	14cdc <_start@@Base+0x25cc>
   14ca0:	mov	r2, #4
   14ca4:	ldr	r3, [pc, #200]	; 14d74 <_start@@Base+0x2664>
   14ca8:	add	r3, pc, r3
   14cac:	mov	r1, r3
   14cb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   14cb4:	bl	12614 <memcmp@plt>
   14cb8:	mov	r3, r0
   14cbc:	cmp	r3, #0
   14cc0:	bne	14cdc <_start@@Base+0x25cc>
   14cc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14cc8:	mov	r2, #1
   14ccc:	strb	r2, [r3]
   14cd0:	ldr	r3, [fp, #-8]
   14cd4:	add	r3, r3, #4
   14cd8:	b	14d68 <_start@@Base+0x2658>
   14cdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14ce0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ce4:	sub	r3, r2, r3
   14ce8:	cmp	r3, #4
   14cec:	ble	14d2c <_start@@Base+0x261c>
   14cf0:	mov	r2, #5
   14cf4:	ldr	r3, [pc, #124]	; 14d78 <_start@@Base+0x2668>
   14cf8:	add	r3, pc, r3
   14cfc:	mov	r1, r3
   14d00:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d04:	bl	12614 <memcmp@plt>
   14d08:	mov	r3, r0
   14d0c:	cmp	r3, #0
   14d10:	bne	14d2c <_start@@Base+0x261c>
   14d14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14d18:	mov	r2, #0
   14d1c:	strb	r2, [r3]
   14d20:	ldr	r3, [fp, #-8]
   14d24:	add	r3, r3, #5
   14d28:	b	14d68 <_start@@Base+0x2658>
   14d2c:	sub	r3, fp, #9
   14d30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14d34:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d38:	ldr	r0, [fp, #-16]
   14d3c:	bl	14854 <_start@@Base+0x2144>
   14d40:	str	r0, [fp, #-20]	; 0xffffffec
   14d44:	ldrb	r3, [fp, #-9]
   14d48:	cmp	r3, #0
   14d4c:	movne	r3, #1
   14d50:	moveq	r3, #0
   14d54:	uxtb	r3, r3
   14d58:	mov	r2, r3
   14d5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14d60:	strb	r2, [r3]
   14d64:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d68:	mov	r0, r3
   14d6c:	sub	sp, fp, #4
   14d70:	pop	{fp, pc}
   14d74:	andeq	r0, r2, r0, lsl #18
   14d78:			; <UNDEFINED> instruction: 0x000208b8
   14d7c:	push	{r4, fp, lr}
   14d80:	add	fp, sp, #8
   14d84:	sub	sp, sp, #76	; 0x4c
   14d88:	str	r0, [fp, #-56]	; 0xffffffc8
   14d8c:	str	r1, [fp, #-60]	; 0xffffffc4
   14d90:	str	r2, [fp, #-64]	; 0xffffffc0
   14d94:	str	r3, [fp, #-68]	; 0xffffffbc
   14d98:	mov	r2, #0
   14d9c:	mov	r3, #0
   14da0:	strd	r2, [fp, #-36]	; 0xffffffdc
   14da4:	mov	r3, #0
   14da8:	str	r3, [fp, #-20]	; 0xffffffec
   14dac:	ldr	r1, [fp, #4]
   14db0:	mov	r2, #0
   14db4:	mov	r3, #0
   14db8:	strd	r2, [r1]
   14dbc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14dc0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14dc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14dc8:	bl	138b8 <_start@@Base+0x11a8>
   14dcc:	str	r0, [fp, #-60]	; 0xffffffc4
   14dd0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   14dd4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14dd8:	cmp	r2, r3
   14ddc:	bne	14de8 <_start@@Base+0x26d8>
   14de0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14de4:	b	14f48 <_start@@Base+0x2838>
   14de8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14dec:	str	r3, [fp, #-16]
   14df0:	ldr	r3, [fp, #-16]
   14df4:	ldr	r4, [r3]
   14df8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14dfc:	str	r3, [fp, #-24]	; 0xffffffe8
   14e00:	sub	r2, fp, #48	; 0x30
   14e04:	sub	r3, fp, #52	; 0x34
   14e08:	str	r3, [sp, #4]
   14e0c:	sub	r3, fp, #44	; 0x2c
   14e10:	str	r3, [sp]
   14e14:	mov	r3, r2
   14e18:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14e1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14e20:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14e24:	blx	r4
   14e28:	str	r0, [fp, #-60]	; 0xffffffc4
   14e2c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   14e30:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14e34:	cmp	r2, r3
   14e38:	bne	14e44 <_start@@Base+0x2734>
   14e3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14e40:	b	14f48 <_start@@Base+0x2838>
   14e44:	ldr	r2, [fp, #-60]	; 0xffffffc4
   14e48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e4c:	cmp	r2, r3
   14e50:	bne	14e70 <_start@@Base+0x2760>
   14e54:	ldr	r3, [fp, #-16]
   14e58:	add	r3, r3, #4
   14e5c:	str	r3, [fp, #-16]
   14e60:	ldr	r3, [fp, #-16]
   14e64:	ldr	r3, [r3]
   14e68:	cmp	r3, #0
   14e6c:	bne	14df0 <_start@@Base+0x26e0>
   14e70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14e74:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14e78:	cmp	r2, r3
   14e7c:	bne	14e9c <_start@@Base+0x278c>
   14e80:	mov	r3, #23
   14e84:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14e88:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14e8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14e90:	bl	3198c <flatcc_json_parser_set_error@@Base>
   14e94:	mov	r3, r0
   14e98:	b	14f48 <_start@@Base+0x2838>
   14e9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ea0:	add	r2, r3, #1
   14ea4:	str	r2, [fp, #-20]	; 0xffffffec
   14ea8:	cmp	r3, #0
   14eac:	beq	14edc <_start@@Base+0x27cc>
   14eb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14eb4:	ldr	r3, [r3, #12]
   14eb8:	cmp	r3, #0
   14ebc:	beq	14edc <_start@@Base+0x27cc>
   14ec0:	mov	r3, #14
   14ec4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14ec8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14ecc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14ed0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   14ed4:	mov	r3, r0
   14ed8:	b	14f48 <_start@@Base+0x2838>
   14edc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14ee0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   14ee4:	sub	r1, fp, #36	; 0x24
   14ee8:	str	r1, [sp, #8]
   14eec:	strd	r2, [sp]
   14ef0:	mov	r3, r0
   14ef4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14ef8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14efc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14f00:	bl	13f14 <_start@@Base+0x1804>
   14f04:	mov	r2, r0
   14f08:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14f0c:	cmp	r2, r3
   14f10:	bne	14f1c <_start@@Base+0x280c>
   14f14:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14f18:	b	14f48 <_start@@Base+0x2838>
   14f1c:	ldr	r3, [fp, #4]
   14f20:	ldrd	r0, [r3]
   14f24:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14f28:	adds	r2, r2, r0
   14f2c:	adc	r3, r3, r1
   14f30:	ldr	r1, [fp, #4]
   14f34:	strd	r2, [r1]
   14f38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14f3c:	cmp	r3, #0
   14f40:	bne	14de8 <_start@@Base+0x26d8>
   14f44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14f48:	mov	r0, r3
   14f4c:	sub	sp, fp, #8
   14f50:	pop	{r4, fp, pc}
   14f54:	push	{r4, fp, lr}
   14f58:	add	fp, sp, #8
   14f5c:	sub	sp, sp, #68	; 0x44
   14f60:	str	r0, [fp, #-48]	; 0xffffffd0
   14f64:	str	r1, [fp, #-52]	; 0xffffffcc
   14f68:	str	r2, [fp, #-56]	; 0xffffffc8
   14f6c:	str	r3, [fp, #-60]	; 0xffffffc4
   14f70:	mov	r3, #0
   14f74:	str	r3, [fp, #-28]	; 0xffffffe4
   14f78:	mov	r3, #0
   14f7c:	str	r3, [fp, #-20]	; 0xffffffec
   14f80:	ldr	r3, [fp, #4]
   14f84:	mov	r2, #0
   14f88:	str	r2, [r3]
   14f8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14f90:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14f94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14f98:	bl	138b8 <_start@@Base+0x11a8>
   14f9c:	str	r0, [fp, #-52]	; 0xffffffcc
   14fa0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14fa4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14fa8:	cmp	r2, r3
   14fac:	bne	14fb8 <_start@@Base+0x28a8>
   14fb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14fb4:	b	15114 <_start@@Base+0x2a04>
   14fb8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14fbc:	str	r3, [fp, #-16]
   14fc0:	ldr	r3, [fp, #-16]
   14fc4:	ldr	r4, [r3]
   14fc8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14fcc:	str	r3, [fp, #-24]	; 0xffffffe8
   14fd0:	sub	r2, fp, #40	; 0x28
   14fd4:	sub	r3, fp, #44	; 0x2c
   14fd8:	str	r3, [sp, #4]
   14fdc:	sub	r3, fp, #36	; 0x24
   14fe0:	str	r3, [sp]
   14fe4:	mov	r3, r2
   14fe8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14fec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14ff0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14ff4:	blx	r4
   14ff8:	str	r0, [fp, #-52]	; 0xffffffcc
   14ffc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15000:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15004:	cmp	r2, r3
   15008:	bne	15014 <_start@@Base+0x2904>
   1500c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15010:	b	15114 <_start@@Base+0x2a04>
   15014:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1501c:	cmp	r2, r3
   15020:	bne	15040 <_start@@Base+0x2930>
   15024:	ldr	r3, [fp, #-16]
   15028:	add	r3, r3, #4
   1502c:	str	r3, [fp, #-16]
   15030:	ldr	r3, [fp, #-16]
   15034:	ldr	r3, [r3]
   15038:	cmp	r3, #0
   1503c:	bne	14fc0 <_start@@Base+0x28b0>
   15040:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15044:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15048:	cmp	r2, r3
   1504c:	bne	1506c <_start@@Base+0x295c>
   15050:	mov	r3, #23
   15054:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15058:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1505c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15060:	bl	3198c <flatcc_json_parser_set_error@@Base>
   15064:	mov	r3, r0
   15068:	b	15114 <_start@@Base+0x2a04>
   1506c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15070:	add	r2, r3, #1
   15074:	str	r2, [fp, #-20]	; 0xffffffec
   15078:	cmp	r3, #0
   1507c:	beq	150ac <_start@@Base+0x299c>
   15080:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15084:	ldr	r3, [r3, #12]
   15088:	cmp	r3, #0
   1508c:	beq	150ac <_start@@Base+0x299c>
   15090:	mov	r3, #14
   15094:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15098:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1509c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   150a0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   150a4:	mov	r3, r0
   150a8:	b	15114 <_start@@Base+0x2a04>
   150ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   150b0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   150b4:	sub	r1, fp, #28
   150b8:	str	r1, [sp, #8]
   150bc:	strd	r2, [sp]
   150c0:	mov	r3, r0
   150c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   150c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   150cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   150d0:	bl	13ff0 <_start@@Base+0x18e0>
   150d4:	mov	r2, r0
   150d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   150dc:	cmp	r2, r3
   150e0:	bne	150ec <_start@@Base+0x29dc>
   150e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   150e8:	b	15114 <_start@@Base+0x2a04>
   150ec:	ldr	r3, [fp, #4]
   150f0:	ldr	r2, [r3]
   150f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150f8:	add	r2, r2, r3
   150fc:	ldr	r3, [fp, #4]
   15100:	str	r2, [r3]
   15104:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15108:	cmp	r3, #0
   1510c:	bne	14fb8 <_start@@Base+0x28a8>
   15110:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15114:	mov	r0, r3
   15118:	sub	sp, fp, #8
   1511c:	pop	{r4, fp, pc}
   15120:	push	{r4, fp, lr}
   15124:	add	fp, sp, #8
   15128:	sub	sp, sp, #68	; 0x44
   1512c:	str	r0, [fp, #-48]	; 0xffffffd0
   15130:	str	r1, [fp, #-52]	; 0xffffffcc
   15134:	str	r2, [fp, #-56]	; 0xffffffc8
   15138:	str	r3, [fp, #-60]	; 0xffffffc4
   1513c:	mov	r3, #0
   15140:	strh	r3, [fp, #-26]	; 0xffffffe6
   15144:	mov	r3, #0
   15148:	str	r3, [fp, #-20]	; 0xffffffec
   1514c:	ldr	r3, [fp, #4]
   15150:	mov	r2, #0
   15154:	strh	r2, [r3]
   15158:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1515c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15160:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15164:	bl	138b8 <_start@@Base+0x11a8>
   15168:	str	r0, [fp, #-52]	; 0xffffffcc
   1516c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15170:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15174:	cmp	r2, r3
   15178:	bne	15184 <_start@@Base+0x2a74>
   1517c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15180:	b	152e4 <_start@@Base+0x2bd4>
   15184:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15188:	str	r3, [fp, #-16]
   1518c:	ldr	r3, [fp, #-16]
   15190:	ldr	r4, [r3]
   15194:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15198:	str	r3, [fp, #-24]	; 0xffffffe8
   1519c:	sub	r2, fp, #40	; 0x28
   151a0:	sub	r3, fp, #44	; 0x2c
   151a4:	str	r3, [sp, #4]
   151a8:	sub	r3, fp, #36	; 0x24
   151ac:	str	r3, [sp]
   151b0:	mov	r3, r2
   151b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   151b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   151bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   151c0:	blx	r4
   151c4:	str	r0, [fp, #-52]	; 0xffffffcc
   151c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   151cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   151d0:	cmp	r2, r3
   151d4:	bne	151e0 <_start@@Base+0x2ad0>
   151d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   151dc:	b	152e4 <_start@@Base+0x2bd4>
   151e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   151e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151e8:	cmp	r2, r3
   151ec:	bne	1520c <_start@@Base+0x2afc>
   151f0:	ldr	r3, [fp, #-16]
   151f4:	add	r3, r3, #4
   151f8:	str	r3, [fp, #-16]
   151fc:	ldr	r3, [fp, #-16]
   15200:	ldr	r3, [r3]
   15204:	cmp	r3, #0
   15208:	bne	1518c <_start@@Base+0x2a7c>
   1520c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15210:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15214:	cmp	r2, r3
   15218:	bne	15238 <_start@@Base+0x2b28>
   1521c:	mov	r3, #23
   15220:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15224:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15228:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1522c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   15230:	mov	r3, r0
   15234:	b	152e4 <_start@@Base+0x2bd4>
   15238:	ldr	r3, [fp, #-20]	; 0xffffffec
   1523c:	add	r2, r3, #1
   15240:	str	r2, [fp, #-20]	; 0xffffffec
   15244:	cmp	r3, #0
   15248:	beq	15278 <_start@@Base+0x2b68>
   1524c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15250:	ldr	r3, [r3, #12]
   15254:	cmp	r3, #0
   15258:	beq	15278 <_start@@Base+0x2b68>
   1525c:	mov	r3, #14
   15260:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15264:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15268:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1526c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   15270:	mov	r3, r0
   15274:	b	152e4 <_start@@Base+0x2bd4>
   15278:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1527c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15280:	sub	r1, fp, #26
   15284:	str	r1, [sp, #8]
   15288:	strd	r2, [sp]
   1528c:	mov	r3, r0
   15290:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15294:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15298:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1529c:	bl	14084 <_start@@Base+0x1974>
   152a0:	mov	r2, r0
   152a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   152a8:	cmp	r2, r3
   152ac:	bne	152b8 <_start@@Base+0x2ba8>
   152b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   152b4:	b	152e4 <_start@@Base+0x2bd4>
   152b8:	ldr	r3, [fp, #4]
   152bc:	ldrh	r2, [r3]
   152c0:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   152c4:	add	r3, r2, r3
   152c8:	uxth	r2, r3
   152cc:	ldr	r3, [fp, #4]
   152d0:	strh	r2, [r3]
   152d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   152d8:	cmp	r3, #0
   152dc:	bne	15184 <_start@@Base+0x2a74>
   152e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   152e4:	mov	r0, r3
   152e8:	sub	sp, fp, #8
   152ec:	pop	{r4, fp, pc}
   152f0:	push	{r4, fp, lr}
   152f4:	add	fp, sp, #8
   152f8:	sub	sp, sp, #68	; 0x44
   152fc:	str	r0, [fp, #-48]	; 0xffffffd0
   15300:	str	r1, [fp, #-52]	; 0xffffffcc
   15304:	str	r2, [fp, #-56]	; 0xffffffc8
   15308:	str	r3, [fp, #-60]	; 0xffffffc4
   1530c:	mov	r3, #0
   15310:	strb	r3, [fp, #-25]	; 0xffffffe7
   15314:	mov	r3, #0
   15318:	str	r3, [fp, #-20]	; 0xffffffec
   1531c:	ldr	r3, [fp, #4]
   15320:	mov	r2, #0
   15324:	strb	r2, [r3]
   15328:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1532c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15330:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15334:	bl	138b8 <_start@@Base+0x11a8>
   15338:	str	r0, [fp, #-52]	; 0xffffffcc
   1533c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15340:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15344:	cmp	r2, r3
   15348:	bne	15354 <_start@@Base+0x2c44>
   1534c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15350:	b	154b4 <_start@@Base+0x2da4>
   15354:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15358:	str	r3, [fp, #-16]
   1535c:	ldr	r3, [fp, #-16]
   15360:	ldr	r4, [r3]
   15364:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15368:	str	r3, [fp, #-24]	; 0xffffffe8
   1536c:	sub	r2, fp, #40	; 0x28
   15370:	sub	r3, fp, #44	; 0x2c
   15374:	str	r3, [sp, #4]
   15378:	sub	r3, fp, #36	; 0x24
   1537c:	str	r3, [sp]
   15380:	mov	r3, r2
   15384:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15388:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1538c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15390:	blx	r4
   15394:	str	r0, [fp, #-52]	; 0xffffffcc
   15398:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1539c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   153a0:	cmp	r2, r3
   153a4:	bne	153b0 <_start@@Base+0x2ca0>
   153a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   153ac:	b	154b4 <_start@@Base+0x2da4>
   153b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   153b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   153b8:	cmp	r2, r3
   153bc:	bne	153dc <_start@@Base+0x2ccc>
   153c0:	ldr	r3, [fp, #-16]
   153c4:	add	r3, r3, #4
   153c8:	str	r3, [fp, #-16]
   153cc:	ldr	r3, [fp, #-16]
   153d0:	ldr	r3, [r3]
   153d4:	cmp	r3, #0
   153d8:	bne	1535c <_start@@Base+0x2c4c>
   153dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   153e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   153e4:	cmp	r2, r3
   153e8:	bne	15408 <_start@@Base+0x2cf8>
   153ec:	mov	r3, #23
   153f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   153f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   153f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   153fc:	bl	3198c <flatcc_json_parser_set_error@@Base>
   15400:	mov	r3, r0
   15404:	b	154b4 <_start@@Base+0x2da4>
   15408:	ldr	r3, [fp, #-20]	; 0xffffffec
   1540c:	add	r2, r3, #1
   15410:	str	r2, [fp, #-20]	; 0xffffffec
   15414:	cmp	r3, #0
   15418:	beq	15448 <_start@@Base+0x2d38>
   1541c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15420:	ldr	r3, [r3, #12]
   15424:	cmp	r3, #0
   15428:	beq	15448 <_start@@Base+0x2d38>
   1542c:	mov	r3, #14
   15430:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15434:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15438:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1543c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   15440:	mov	r3, r0
   15444:	b	154b4 <_start@@Base+0x2da4>
   15448:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1544c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15450:	sub	r1, fp, #25
   15454:	str	r1, [sp, #8]
   15458:	strd	r2, [sp]
   1545c:	mov	r3, r0
   15460:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15464:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15468:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1546c:	bl	1411c <_start@@Base+0x1a0c>
   15470:	mov	r2, r0
   15474:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15478:	cmp	r2, r3
   1547c:	bne	15488 <_start@@Base+0x2d78>
   15480:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15484:	b	154b4 <_start@@Base+0x2da4>
   15488:	ldr	r3, [fp, #4]
   1548c:	ldrb	r2, [r3]
   15490:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   15494:	add	r3, r2, r3
   15498:	uxtb	r2, r3
   1549c:	ldr	r3, [fp, #4]
   154a0:	strb	r2, [r3]
   154a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   154a8:	cmp	r3, #0
   154ac:	bne	15354 <_start@@Base+0x2c44>
   154b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   154b4:	mov	r0, r3
   154b8:	sub	sp, fp, #8
   154bc:	pop	{r4, fp, pc}
   154c0:	push	{r4, fp, lr}
   154c4:	add	fp, sp, #8
   154c8:	sub	sp, sp, #76	; 0x4c
   154cc:	str	r0, [fp, #-56]	; 0xffffffc8
   154d0:	str	r1, [fp, #-60]	; 0xffffffc4
   154d4:	str	r2, [fp, #-64]	; 0xffffffc0
   154d8:	str	r3, [fp, #-68]	; 0xffffffbc
   154dc:	mov	r2, #0
   154e0:	mov	r3, #0
   154e4:	strd	r2, [fp, #-36]	; 0xffffffdc
   154e8:	mov	r3, #0
   154ec:	str	r3, [fp, #-20]	; 0xffffffec
   154f0:	ldr	r1, [fp, #4]
   154f4:	mov	r2, #0
   154f8:	mov	r3, #0
   154fc:	strd	r2, [r1]
   15500:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15504:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15508:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1550c:	bl	138b8 <_start@@Base+0x11a8>
   15510:	str	r0, [fp, #-60]	; 0xffffffc4
   15514:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15518:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1551c:	cmp	r2, r3
   15520:	bne	1552c <_start@@Base+0x2e1c>
   15524:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15528:	b	1568c <_start@@Base+0x2f7c>
   1552c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15530:	str	r3, [fp, #-16]
   15534:	ldr	r3, [fp, #-16]
   15538:	ldr	r4, [r3]
   1553c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15540:	str	r3, [fp, #-24]	; 0xffffffe8
   15544:	sub	r2, fp, #48	; 0x30
   15548:	sub	r3, fp, #52	; 0x34
   1554c:	str	r3, [sp, #4]
   15550:	sub	r3, fp, #44	; 0x2c
   15554:	str	r3, [sp]
   15558:	mov	r3, r2
   1555c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15560:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15564:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15568:	blx	r4
   1556c:	str	r0, [fp, #-60]	; 0xffffffc4
   15570:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15574:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15578:	cmp	r2, r3
   1557c:	bne	15588 <_start@@Base+0x2e78>
   15580:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15584:	b	1568c <_start@@Base+0x2f7c>
   15588:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1558c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15590:	cmp	r2, r3
   15594:	bne	155b4 <_start@@Base+0x2ea4>
   15598:	ldr	r3, [fp, #-16]
   1559c:	add	r3, r3, #4
   155a0:	str	r3, [fp, #-16]
   155a4:	ldr	r3, [fp, #-16]
   155a8:	ldr	r3, [r3]
   155ac:	cmp	r3, #0
   155b0:	bne	15534 <_start@@Base+0x2e24>
   155b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   155b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   155bc:	cmp	r2, r3
   155c0:	bne	155e0 <_start@@Base+0x2ed0>
   155c4:	mov	r3, #23
   155c8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   155cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   155d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   155d4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   155d8:	mov	r3, r0
   155dc:	b	1568c <_start@@Base+0x2f7c>
   155e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   155e4:	add	r2, r3, #1
   155e8:	str	r2, [fp, #-20]	; 0xffffffec
   155ec:	cmp	r3, #0
   155f0:	beq	15620 <_start@@Base+0x2f10>
   155f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   155f8:	ldr	r3, [r3, #12]
   155fc:	cmp	r3, #0
   15600:	beq	15620 <_start@@Base+0x2f10>
   15604:	mov	r3, #14
   15608:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1560c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15610:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15614:	bl	3198c <flatcc_json_parser_set_error@@Base>
   15618:	mov	r3, r0
   1561c:	b	1568c <_start@@Base+0x2f7c>
   15620:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15624:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15628:	sub	r1, fp, #36	; 0x24
   1562c:	str	r1, [sp, #8]
   15630:	strd	r2, [sp]
   15634:	mov	r3, r0
   15638:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1563c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15640:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15644:	bl	141a8 <_start@@Base+0x1a98>
   15648:	mov	r2, r0
   1564c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15650:	cmp	r2, r3
   15654:	bne	15660 <_start@@Base+0x2f50>
   15658:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1565c:	b	1568c <_start@@Base+0x2f7c>
   15660:	ldr	r3, [fp, #4]
   15664:	ldrd	r0, [r3]
   15668:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1566c:	adds	r2, r2, r0
   15670:	adc	r3, r3, r1
   15674:	ldr	r1, [fp, #4]
   15678:	strd	r2, [r1]
   1567c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15680:	cmp	r3, #0
   15684:	bne	1552c <_start@@Base+0x2e1c>
   15688:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1568c:	mov	r0, r3
   15690:	sub	sp, fp, #8
   15694:	pop	{r4, fp, pc}
   15698:	push	{r4, fp, lr}
   1569c:	add	fp, sp, #8
   156a0:	sub	sp, sp, #68	; 0x44
   156a4:	str	r0, [fp, #-48]	; 0xffffffd0
   156a8:	str	r1, [fp, #-52]	; 0xffffffcc
   156ac:	str	r2, [fp, #-56]	; 0xffffffc8
   156b0:	str	r3, [fp, #-60]	; 0xffffffc4
   156b4:	mov	r3, #0
   156b8:	str	r3, [fp, #-28]	; 0xffffffe4
   156bc:	mov	r3, #0
   156c0:	str	r3, [fp, #-20]	; 0xffffffec
   156c4:	ldr	r3, [fp, #4]
   156c8:	mov	r2, #0
   156cc:	str	r2, [r3]
   156d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   156d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   156d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   156dc:	bl	138b8 <_start@@Base+0x11a8>
   156e0:	str	r0, [fp, #-52]	; 0xffffffcc
   156e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   156e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   156ec:	cmp	r2, r3
   156f0:	bne	156fc <_start@@Base+0x2fec>
   156f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   156f8:	b	15858 <_start@@Base+0x3148>
   156fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15700:	str	r3, [fp, #-16]
   15704:	ldr	r3, [fp, #-16]
   15708:	ldr	r4, [r3]
   1570c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15710:	str	r3, [fp, #-24]	; 0xffffffe8
   15714:	sub	r2, fp, #40	; 0x28
   15718:	sub	r3, fp, #44	; 0x2c
   1571c:	str	r3, [sp, #4]
   15720:	sub	r3, fp, #36	; 0x24
   15724:	str	r3, [sp]
   15728:	mov	r3, r2
   1572c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15730:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15734:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15738:	blx	r4
   1573c:	str	r0, [fp, #-52]	; 0xffffffcc
   15740:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15744:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15748:	cmp	r2, r3
   1574c:	bne	15758 <_start@@Base+0x3048>
   15750:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15754:	b	15858 <_start@@Base+0x3148>
   15758:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1575c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15760:	cmp	r2, r3
   15764:	bne	15784 <_start@@Base+0x3074>
   15768:	ldr	r3, [fp, #-16]
   1576c:	add	r3, r3, #4
   15770:	str	r3, [fp, #-16]
   15774:	ldr	r3, [fp, #-16]
   15778:	ldr	r3, [r3]
   1577c:	cmp	r3, #0
   15780:	bne	15704 <_start@@Base+0x2ff4>
   15784:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15788:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1578c:	cmp	r2, r3
   15790:	bne	157b0 <_start@@Base+0x30a0>
   15794:	mov	r3, #23
   15798:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1579c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   157a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   157a4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   157a8:	mov	r3, r0
   157ac:	b	15858 <_start@@Base+0x3148>
   157b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   157b4:	add	r2, r3, #1
   157b8:	str	r2, [fp, #-20]	; 0xffffffec
   157bc:	cmp	r3, #0
   157c0:	beq	157f0 <_start@@Base+0x30e0>
   157c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   157c8:	ldr	r3, [r3, #12]
   157cc:	cmp	r3, #0
   157d0:	beq	157f0 <_start@@Base+0x30e0>
   157d4:	mov	r3, #14
   157d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   157dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   157e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   157e4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   157e8:	mov	r3, r0
   157ec:	b	15858 <_start@@Base+0x3148>
   157f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   157f4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   157f8:	sub	r1, fp, #28
   157fc:	str	r1, [sp, #8]
   15800:	strd	r2, [sp]
   15804:	mov	r3, r0
   15808:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1580c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15810:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15814:	bl	1425c <_start@@Base+0x1b4c>
   15818:	mov	r2, r0
   1581c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15820:	cmp	r2, r3
   15824:	bne	15830 <_start@@Base+0x3120>
   15828:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1582c:	b	15858 <_start@@Base+0x3148>
   15830:	ldr	r3, [fp, #4]
   15834:	ldr	r2, [r3]
   15838:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1583c:	add	r2, r2, r3
   15840:	ldr	r3, [fp, #4]
   15844:	str	r2, [r3]
   15848:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1584c:	cmp	r3, #0
   15850:	bne	156fc <_start@@Base+0x2fec>
   15854:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15858:	mov	r0, r3
   1585c:	sub	sp, fp, #8
   15860:	pop	{r4, fp, pc}
   15864:	push	{r4, fp, lr}
   15868:	add	fp, sp, #8
   1586c:	sub	sp, sp, #68	; 0x44
   15870:	str	r0, [fp, #-48]	; 0xffffffd0
   15874:	str	r1, [fp, #-52]	; 0xffffffcc
   15878:	str	r2, [fp, #-56]	; 0xffffffc8
   1587c:	str	r3, [fp, #-60]	; 0xffffffc4
   15880:	mov	r3, #0
   15884:	strh	r3, [fp, #-26]	; 0xffffffe6
   15888:	mov	r3, #0
   1588c:	str	r3, [fp, #-20]	; 0xffffffec
   15890:	ldr	r3, [fp, #4]
   15894:	mov	r2, #0
   15898:	strh	r2, [r3]
   1589c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   158a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   158a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   158a8:	bl	138b8 <_start@@Base+0x11a8>
   158ac:	str	r0, [fp, #-52]	; 0xffffffcc
   158b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   158b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   158b8:	cmp	r2, r3
   158bc:	bne	158c8 <_start@@Base+0x31b8>
   158c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   158c4:	b	15a34 <_start@@Base+0x3324>
   158c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   158cc:	str	r3, [fp, #-16]
   158d0:	ldr	r3, [fp, #-16]
   158d4:	ldr	r4, [r3]
   158d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   158dc:	str	r3, [fp, #-24]	; 0xffffffe8
   158e0:	sub	r2, fp, #40	; 0x28
   158e4:	sub	r3, fp, #44	; 0x2c
   158e8:	str	r3, [sp, #4]
   158ec:	sub	r3, fp, #36	; 0x24
   158f0:	str	r3, [sp]
   158f4:	mov	r3, r2
   158f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   158fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15900:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15904:	blx	r4
   15908:	str	r0, [fp, #-52]	; 0xffffffcc
   1590c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15910:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15914:	cmp	r2, r3
   15918:	bne	15924 <_start@@Base+0x3214>
   1591c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15920:	b	15a34 <_start@@Base+0x3324>
   15924:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15928:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1592c:	cmp	r2, r3
   15930:	bne	15950 <_start@@Base+0x3240>
   15934:	ldr	r3, [fp, #-16]
   15938:	add	r3, r3, #4
   1593c:	str	r3, [fp, #-16]
   15940:	ldr	r3, [fp, #-16]
   15944:	ldr	r3, [r3]
   15948:	cmp	r3, #0
   1594c:	bne	158d0 <_start@@Base+0x31c0>
   15950:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15954:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15958:	cmp	r2, r3
   1595c:	bne	1597c <_start@@Base+0x326c>
   15960:	mov	r3, #23
   15964:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15968:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1596c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15970:	bl	3198c <flatcc_json_parser_set_error@@Base>
   15974:	mov	r3, r0
   15978:	b	15a34 <_start@@Base+0x3324>
   1597c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15980:	add	r2, r3, #1
   15984:	str	r2, [fp, #-20]	; 0xffffffec
   15988:	cmp	r3, #0
   1598c:	beq	159bc <_start@@Base+0x32ac>
   15990:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15994:	ldr	r3, [r3, #12]
   15998:	cmp	r3, #0
   1599c:	beq	159bc <_start@@Base+0x32ac>
   159a0:	mov	r3, #14
   159a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   159a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   159ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   159b0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   159b4:	mov	r3, r0
   159b8:	b	15a34 <_start@@Base+0x3324>
   159bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   159c0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   159c4:	sub	r1, fp, #26
   159c8:	str	r1, [sp, #8]
   159cc:	strd	r2, [sp]
   159d0:	mov	r3, r0
   159d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   159d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   159dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   159e0:	bl	14318 <_start@@Base+0x1c08>
   159e4:	mov	r2, r0
   159e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   159ec:	cmp	r2, r3
   159f0:	bne	159fc <_start@@Base+0x32ec>
   159f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   159f8:	b	15a34 <_start@@Base+0x3324>
   159fc:	ldr	r3, [fp, #4]
   15a00:	ldrsh	r3, [r3]
   15a04:	uxth	r2, r3
   15a08:	ldrsh	r3, [fp, #-26]	; 0xffffffe6
   15a0c:	uxth	r3, r3
   15a10:	add	r3, r2, r3
   15a14:	uxth	r3, r3
   15a18:	sxth	r2, r3
   15a1c:	ldr	r3, [fp, #4]
   15a20:	strh	r2, [r3]
   15a24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a28:	cmp	r3, #0
   15a2c:	bne	158c8 <_start@@Base+0x31b8>
   15a30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15a34:	mov	r0, r3
   15a38:	sub	sp, fp, #8
   15a3c:	pop	{r4, fp, pc}
   15a40:	push	{r4, fp, lr}
   15a44:	add	fp, sp, #8
   15a48:	sub	sp, sp, #68	; 0x44
   15a4c:	str	r0, [fp, #-48]	; 0xffffffd0
   15a50:	str	r1, [fp, #-52]	; 0xffffffcc
   15a54:	str	r2, [fp, #-56]	; 0xffffffc8
   15a58:	str	r3, [fp, #-60]	; 0xffffffc4
   15a5c:	mov	r3, #0
   15a60:	strb	r3, [fp, #-25]	; 0xffffffe7
   15a64:	mov	r3, #0
   15a68:	str	r3, [fp, #-20]	; 0xffffffec
   15a6c:	ldr	r3, [fp, #4]
   15a70:	mov	r2, #0
   15a74:	strb	r2, [r3]
   15a78:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15a7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15a80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15a84:	bl	138b8 <_start@@Base+0x11a8>
   15a88:	str	r0, [fp, #-52]	; 0xffffffcc
   15a8c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15a90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15a94:	cmp	r2, r3
   15a98:	bne	15aa4 <_start@@Base+0x3394>
   15a9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15aa0:	b	15c10 <_start@@Base+0x3500>
   15aa4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15aa8:	str	r3, [fp, #-16]
   15aac:	ldr	r3, [fp, #-16]
   15ab0:	ldr	r4, [r3]
   15ab4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15ab8:	str	r3, [fp, #-24]	; 0xffffffe8
   15abc:	sub	r2, fp, #40	; 0x28
   15ac0:	sub	r3, fp, #44	; 0x2c
   15ac4:	str	r3, [sp, #4]
   15ac8:	sub	r3, fp, #36	; 0x24
   15acc:	str	r3, [sp]
   15ad0:	mov	r3, r2
   15ad4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15ad8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15adc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15ae0:	blx	r4
   15ae4:	str	r0, [fp, #-52]	; 0xffffffcc
   15ae8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15aec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15af0:	cmp	r2, r3
   15af4:	bne	15b00 <_start@@Base+0x33f0>
   15af8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15afc:	b	15c10 <_start@@Base+0x3500>
   15b00:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15b04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15b08:	cmp	r2, r3
   15b0c:	bne	15b2c <_start@@Base+0x341c>
   15b10:	ldr	r3, [fp, #-16]
   15b14:	add	r3, r3, #4
   15b18:	str	r3, [fp, #-16]
   15b1c:	ldr	r3, [fp, #-16]
   15b20:	ldr	r3, [r3]
   15b24:	cmp	r3, #0
   15b28:	bne	15aac <_start@@Base+0x339c>
   15b2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15b30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15b34:	cmp	r2, r3
   15b38:	bne	15b58 <_start@@Base+0x3448>
   15b3c:	mov	r3, #23
   15b40:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15b44:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15b48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15b4c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   15b50:	mov	r3, r0
   15b54:	b	15c10 <_start@@Base+0x3500>
   15b58:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b5c:	add	r2, r3, #1
   15b60:	str	r2, [fp, #-20]	; 0xffffffec
   15b64:	cmp	r3, #0
   15b68:	beq	15b98 <_start@@Base+0x3488>
   15b6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15b70:	ldr	r3, [r3, #12]
   15b74:	cmp	r3, #0
   15b78:	beq	15b98 <_start@@Base+0x3488>
   15b7c:	mov	r3, #14
   15b80:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15b84:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15b88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15b8c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   15b90:	mov	r3, r0
   15b94:	b	15c10 <_start@@Base+0x3500>
   15b98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15b9c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15ba0:	sub	r1, fp, #25
   15ba4:	str	r1, [sp, #8]
   15ba8:	strd	r2, [sp]
   15bac:	mov	r3, r0
   15bb0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15bb4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15bb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15bbc:	bl	143dc <_start@@Base+0x1ccc>
   15bc0:	mov	r2, r0
   15bc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15bc8:	cmp	r2, r3
   15bcc:	bne	15bd8 <_start@@Base+0x34c8>
   15bd0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15bd4:	b	15c10 <_start@@Base+0x3500>
   15bd8:	ldr	r3, [fp, #4]
   15bdc:	ldrsb	r3, [r3]
   15be0:	uxtb	r2, r3
   15be4:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   15be8:	uxtb	r3, r3
   15bec:	add	r3, r2, r3
   15bf0:	uxtb	r3, r3
   15bf4:	sxtb	r2, r3
   15bf8:	ldr	r3, [fp, #4]
   15bfc:	strb	r2, [r3]
   15c00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15c04:	cmp	r3, #0
   15c08:	bne	15aa4 <_start@@Base+0x3394>
   15c0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15c10:	mov	r0, r3
   15c14:	sub	sp, fp, #8
   15c18:	pop	{r4, fp, pc}
   15c1c:	push	{r4, fp, lr}
   15c20:	add	fp, sp, #8
   15c24:	sub	sp, sp, #68	; 0x44
   15c28:	str	r0, [fp, #-48]	; 0xffffffd0
   15c2c:	str	r1, [fp, #-52]	; 0xffffffcc
   15c30:	str	r2, [fp, #-56]	; 0xffffffc8
   15c34:	str	r3, [fp, #-60]	; 0xffffffc4
   15c38:	mov	r3, #0
   15c3c:	strb	r3, [fp, #-25]	; 0xffffffe7
   15c40:	mov	r3, #0
   15c44:	str	r3, [fp, #-20]	; 0xffffffec
   15c48:	ldr	r3, [fp, #4]
   15c4c:	mov	r2, #0
   15c50:	strb	r2, [r3]
   15c54:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15c58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15c5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c60:	bl	138b8 <_start@@Base+0x11a8>
   15c64:	str	r0, [fp, #-52]	; 0xffffffcc
   15c68:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15c6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15c70:	cmp	r2, r3
   15c74:	bne	15c80 <_start@@Base+0x3570>
   15c78:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15c7c:	b	15de0 <_start@@Base+0x36d0>
   15c80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15c84:	str	r3, [fp, #-16]
   15c88:	ldr	r3, [fp, #-16]
   15c8c:	ldr	r4, [r3]
   15c90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15c94:	str	r3, [fp, #-24]	; 0xffffffe8
   15c98:	sub	r2, fp, #40	; 0x28
   15c9c:	sub	r3, fp, #44	; 0x2c
   15ca0:	str	r3, [sp, #4]
   15ca4:	sub	r3, fp, #36	; 0x24
   15ca8:	str	r3, [sp]
   15cac:	mov	r3, r2
   15cb0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15cb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15cb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15cbc:	blx	r4
   15cc0:	str	r0, [fp, #-52]	; 0xffffffcc
   15cc4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15cc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15ccc:	cmp	r2, r3
   15cd0:	bne	15cdc <_start@@Base+0x35cc>
   15cd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15cd8:	b	15de0 <_start@@Base+0x36d0>
   15cdc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15ce0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15ce4:	cmp	r2, r3
   15ce8:	bne	15d08 <_start@@Base+0x35f8>
   15cec:	ldr	r3, [fp, #-16]
   15cf0:	add	r3, r3, #4
   15cf4:	str	r3, [fp, #-16]
   15cf8:	ldr	r3, [fp, #-16]
   15cfc:	ldr	r3, [r3]
   15d00:	cmp	r3, #0
   15d04:	bne	15c88 <_start@@Base+0x3578>
   15d08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15d0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15d10:	cmp	r2, r3
   15d14:	bne	15d34 <_start@@Base+0x3624>
   15d18:	mov	r3, #23
   15d1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15d20:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15d24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d28:	bl	3198c <flatcc_json_parser_set_error@@Base>
   15d2c:	mov	r3, r0
   15d30:	b	15de0 <_start@@Base+0x36d0>
   15d34:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d38:	add	r2, r3, #1
   15d3c:	str	r2, [fp, #-20]	; 0xffffffec
   15d40:	cmp	r3, #0
   15d44:	beq	15d74 <_start@@Base+0x3664>
   15d48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15d4c:	ldr	r3, [r3, #12]
   15d50:	cmp	r3, #0
   15d54:	beq	15d74 <_start@@Base+0x3664>
   15d58:	mov	r3, #14
   15d5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15d60:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15d64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d68:	bl	3198c <flatcc_json_parser_set_error@@Base>
   15d6c:	mov	r3, r0
   15d70:	b	15de0 <_start@@Base+0x36d0>
   15d74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15d78:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15d7c:	sub	r1, fp, #25
   15d80:	str	r1, [sp, #8]
   15d84:	strd	r2, [sp]
   15d88:	mov	r3, r0
   15d8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15d90:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15d94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d98:	bl	13f74 <_start@@Base+0x1864>
   15d9c:	mov	r2, r0
   15da0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15da4:	cmp	r2, r3
   15da8:	bne	15db4 <_start@@Base+0x36a4>
   15dac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15db0:	b	15de0 <_start@@Base+0x36d0>
   15db4:	ldr	r3, [fp, #4]
   15db8:	ldrb	r2, [r3]
   15dbc:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   15dc0:	add	r3, r2, r3
   15dc4:	uxtb	r2, r3
   15dc8:	ldr	r3, [fp, #4]
   15dcc:	strb	r2, [r3]
   15dd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15dd4:	cmp	r3, #0
   15dd8:	bne	15c80 <_start@@Base+0x3570>
   15ddc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15de0:	mov	r0, r3
   15de4:	sub	sp, fp, #8
   15de8:	pop	{r4, fp, pc}
   15dec:	push	{r4, fp, lr}
   15df0:	add	fp, sp, #8
   15df4:	sub	sp, sp, #68	; 0x44
   15df8:	str	r0, [fp, #-48]	; 0xffffffd0
   15dfc:	str	r1, [fp, #-52]	; 0xffffffcc
   15e00:	str	r2, [fp, #-56]	; 0xffffffc8
   15e04:	str	r3, [fp, #-60]	; 0xffffffc4
   15e08:	mov	r3, #0
   15e0c:	str	r3, [fp, #-28]	; 0xffffffe4
   15e10:	mov	r3, #0
   15e14:	str	r3, [fp, #-20]	; 0xffffffec
   15e18:	ldr	r3, [fp, #4]
   15e1c:	mov	r2, #0
   15e20:	str	r2, [r3]
   15e24:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15e28:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15e2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e30:	bl	138b8 <_start@@Base+0x11a8>
   15e34:	str	r0, [fp, #-52]	; 0xffffffcc
   15e38:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15e3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15e40:	cmp	r2, r3
   15e44:	bne	15e50 <_start@@Base+0x3740>
   15e48:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15e4c:	b	15fac <_start@@Base+0x389c>
   15e50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15e54:	str	r3, [fp, #-16]
   15e58:	ldr	r3, [fp, #-16]
   15e5c:	ldr	r4, [r3]
   15e60:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15e64:	str	r3, [fp, #-24]	; 0xffffffe8
   15e68:	sub	r2, fp, #40	; 0x28
   15e6c:	sub	r3, fp, #44	; 0x2c
   15e70:	str	r3, [sp, #4]
   15e74:	sub	r3, fp, #36	; 0x24
   15e78:	str	r3, [sp]
   15e7c:	mov	r3, r2
   15e80:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15e84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e8c:	blx	r4
   15e90:	str	r0, [fp, #-52]	; 0xffffffcc
   15e94:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15e98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15e9c:	cmp	r2, r3
   15ea0:	bne	15eac <_start@@Base+0x379c>
   15ea4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15ea8:	b	15fac <_start@@Base+0x389c>
   15eac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15eb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15eb4:	cmp	r2, r3
   15eb8:	bne	15ed8 <_start@@Base+0x37c8>
   15ebc:	ldr	r3, [fp, #-16]
   15ec0:	add	r3, r3, #4
   15ec4:	str	r3, [fp, #-16]
   15ec8:	ldr	r3, [fp, #-16]
   15ecc:	ldr	r3, [r3]
   15ed0:	cmp	r3, #0
   15ed4:	bne	15e58 <_start@@Base+0x3748>
   15ed8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15edc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15ee0:	cmp	r2, r3
   15ee4:	bne	15f04 <_start@@Base+0x37f4>
   15ee8:	mov	r3, #23
   15eec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15ef0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15ef4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15ef8:	bl	3198c <flatcc_json_parser_set_error@@Base>
   15efc:	mov	r3, r0
   15f00:	b	15fac <_start@@Base+0x389c>
   15f04:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f08:	add	r2, r3, #1
   15f0c:	str	r2, [fp, #-20]	; 0xffffffec
   15f10:	cmp	r3, #0
   15f14:	beq	15f44 <_start@@Base+0x3834>
   15f18:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15f1c:	ldr	r3, [r3, #12]
   15f20:	cmp	r3, #0
   15f24:	beq	15f44 <_start@@Base+0x3834>
   15f28:	mov	r3, #14
   15f2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15f30:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15f34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15f38:	bl	3198c <flatcc_json_parser_set_error@@Base>
   15f3c:	mov	r3, r0
   15f40:	b	15fac <_start@@Base+0x389c>
   15f44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15f48:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15f4c:	sub	r1, fp, #28
   15f50:	str	r1, [sp, #8]
   15f54:	strd	r2, [sp]
   15f58:	mov	r3, r0
   15f5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15f60:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15f64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15f68:	bl	14494 <_start@@Base+0x1d84>
   15f6c:	mov	r2, r0
   15f70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15f74:	cmp	r2, r3
   15f78:	bne	15f84 <_start@@Base+0x3874>
   15f7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15f80:	b	15fac <_start@@Base+0x389c>
   15f84:	ldr	r3, [fp, #4]
   15f88:	vldr	s14, [r3]
   15f8c:	vldr	s15, [fp, #-28]	; 0xffffffe4
   15f90:	vadd.f32	s15, s14, s15
   15f94:	ldr	r3, [fp, #4]
   15f98:	vstr	s15, [r3]
   15f9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15fa0:	cmp	r3, #0
   15fa4:	bne	15e50 <_start@@Base+0x3740>
   15fa8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15fac:	mov	r0, r3
   15fb0:	sub	sp, fp, #8
   15fb4:	pop	{r4, fp, pc}
   15fb8:	push	{r4, fp, lr}
   15fbc:	add	fp, sp, #8
   15fc0:	sub	sp, sp, #76	; 0x4c
   15fc4:	str	r0, [fp, #-56]	; 0xffffffc8
   15fc8:	str	r1, [fp, #-60]	; 0xffffffc4
   15fcc:	str	r2, [fp, #-64]	; 0xffffffc0
   15fd0:	str	r3, [fp, #-68]	; 0xffffffbc
   15fd4:	mov	r2, #0
   15fd8:	mov	r3, #0
   15fdc:	strd	r2, [fp, #-36]	; 0xffffffdc
   15fe0:	mov	r3, #0
   15fe4:	str	r3, [fp, #-20]	; 0xffffffec
   15fe8:	ldr	r1, [fp, #4]
   15fec:	mov	r2, #0
   15ff0:	mov	r3, #0
   15ff4:	strd	r2, [r1]
   15ff8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15ffc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16000:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16004:	bl	138b8 <_start@@Base+0x11a8>
   16008:	str	r0, [fp, #-60]	; 0xffffffc4
   1600c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16010:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16014:	cmp	r2, r3
   16018:	bne	16024 <_start@@Base+0x3914>
   1601c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16020:	b	16180 <_start@@Base+0x3a70>
   16024:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16028:	str	r3, [fp, #-16]
   1602c:	ldr	r3, [fp, #-16]
   16030:	ldr	r4, [r3]
   16034:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16038:	str	r3, [fp, #-24]	; 0xffffffe8
   1603c:	sub	r2, fp, #48	; 0x30
   16040:	sub	r3, fp, #52	; 0x34
   16044:	str	r3, [sp, #4]
   16048:	sub	r3, fp, #44	; 0x2c
   1604c:	str	r3, [sp]
   16050:	mov	r3, r2
   16054:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16058:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1605c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16060:	blx	r4
   16064:	str	r0, [fp, #-60]	; 0xffffffc4
   16068:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1606c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16070:	cmp	r2, r3
   16074:	bne	16080 <_start@@Base+0x3970>
   16078:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1607c:	b	16180 <_start@@Base+0x3a70>
   16080:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16084:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16088:	cmp	r2, r3
   1608c:	bne	160ac <_start@@Base+0x399c>
   16090:	ldr	r3, [fp, #-16]
   16094:	add	r3, r3, #4
   16098:	str	r3, [fp, #-16]
   1609c:	ldr	r3, [fp, #-16]
   160a0:	ldr	r3, [r3]
   160a4:	cmp	r3, #0
   160a8:	bne	1602c <_start@@Base+0x391c>
   160ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   160b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   160b4:	cmp	r2, r3
   160b8:	bne	160d8 <_start@@Base+0x39c8>
   160bc:	mov	r3, #23
   160c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   160c4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   160c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   160cc:	bl	3198c <flatcc_json_parser_set_error@@Base>
   160d0:	mov	r3, r0
   160d4:	b	16180 <_start@@Base+0x3a70>
   160d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   160dc:	add	r2, r3, #1
   160e0:	str	r2, [fp, #-20]	; 0xffffffec
   160e4:	cmp	r3, #0
   160e8:	beq	16118 <_start@@Base+0x3a08>
   160ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   160f0:	ldr	r3, [r3, #12]
   160f4:	cmp	r3, #0
   160f8:	beq	16118 <_start@@Base+0x3a08>
   160fc:	mov	r3, #14
   16100:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16104:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16108:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1610c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   16110:	mov	r3, r0
   16114:	b	16180 <_start@@Base+0x3a70>
   16118:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1611c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   16120:	sub	r1, fp, #36	; 0x24
   16124:	str	r1, [sp, #8]
   16128:	strd	r2, [sp]
   1612c:	mov	r3, r0
   16130:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16134:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16138:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1613c:	bl	144f4 <_start@@Base+0x1de4>
   16140:	mov	r2, r0
   16144:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16148:	cmp	r2, r3
   1614c:	bne	16158 <_start@@Base+0x3a48>
   16150:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16154:	b	16180 <_start@@Base+0x3a70>
   16158:	ldr	r3, [fp, #4]
   1615c:	vldr	d6, [r3]
   16160:	vldr	d7, [fp, #-36]	; 0xffffffdc
   16164:	vadd.f64	d7, d6, d7
   16168:	ldr	r3, [fp, #4]
   1616c:	vstr	d7, [r3]
   16170:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16174:	cmp	r3, #0
   16178:	bne	16024 <_start@@Base+0x3914>
   1617c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16180:	mov	r0, r3
   16184:	sub	sp, fp, #8
   16188:	pop	{r4, fp, pc}
   1618c:	push	{fp, lr}
   16190:	add	fp, sp, #4
   16194:	sub	sp, sp, #48	; 0x30
   16198:	str	r0, [fp, #-32]	; 0xffffffe0
   1619c:	str	r1, [fp, #-36]	; 0xffffffdc
   161a0:	str	r2, [fp, #-40]	; 0xffffffd8
   161a4:	str	r3, [fp, #-44]	; 0xffffffd4
   161a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   161ac:	str	r3, [fp, #-8]
   161b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   161b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   161b8:	bl	137ec <_start@@Base+0x10dc>
   161bc:	strd	r0, [fp, #-20]	; 0xffffffec
   161c0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   161c4:	mov	r0, #0
   161c8:	mvn	r1, #255	; 0xff
   161cc:	and	r2, r2, r0
   161d0:	and	r3, r3, r1
   161d4:	add	r1, pc, #332	; 0x14c
   161d8:	ldrd	r0, [r1]
   161dc:	cmp	r3, r1
   161e0:	cmpeq	r2, r0
   161e4:	bne	16240 <_start@@Base+0x3b30>
   161e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   161ec:	str	r3, [fp, #-24]	; 0xffffffe8
   161f0:	ldr	r3, [fp, #8]
   161f4:	str	r3, [sp]
   161f8:	mov	r3, #3
   161fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16200:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16204:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16208:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   1620c:	str	r0, [fp, #-36]	; 0xffffffdc
   16210:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16214:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16218:	cmp	r2, r3
   1621c:	beq	16248 <_start@@Base+0x3b38>
   16220:	ldr	r1, [fp, #4]
   16224:	mov	r2, #17
   16228:	mov	r3, #0
   1622c:	strd	r2, [r1]
   16230:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16234:	mov	r2, #0
   16238:	str	r2, [r3]
   1623c:	b	16318 <_start@@Base+0x3c08>
   16240:	nop			; (mov r0, r0)
   16244:	b	1624c <_start@@Base+0x3b3c>
   16248:	nop			; (mov r0, r0)
   1624c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16250:	add	r1, pc, #216	; 0xd8
   16254:	ldrd	r0, [r1]
   16258:	cmp	r3, r1
   1625c:	cmpeq	r2, r0
   16260:	bne	16310 <_start@@Base+0x3c00>
   16264:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16268:	add	r3, r3, #8
   1626c:	str	r3, [fp, #-36]	; 0xffffffdc
   16270:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16274:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16278:	bl	137ec <_start@@Base+0x10dc>
   1627c:	strd	r0, [fp, #-20]	; 0xffffffec
   16280:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16284:	mov	r0, #0
   16288:	ldr	r1, [pc, #168]	; 16338 <_start@@Base+0x3c28>
   1628c:	and	r2, r2, r0
   16290:	and	r3, r3, r1
   16294:	mov	r0, #0
   16298:	ldr	r1, [pc, #156]	; 1633c <_start@@Base+0x3c2c>
   1629c:	cmp	r3, r1
   162a0:	cmpeq	r2, r0
   162a4:	bne	16308 <_start@@Base+0x3bf8>
   162a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   162ac:	str	r3, [fp, #-24]	; 0xffffffe8
   162b0:	ldr	r3, [fp, #8]
   162b4:	str	r3, [sp]
   162b8:	mov	r3, #2
   162bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   162c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   162c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162c8:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   162cc:	str	r0, [fp, #-36]	; 0xffffffdc
   162d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   162d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   162d8:	cmp	r2, r3
   162dc:	beq	16300 <_start@@Base+0x3bf0>
   162e0:	ldr	r1, [fp, #4]
   162e4:	mov	r2, #0
   162e8:	mov	r3, #0
   162ec:	strd	r2, [r1]
   162f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   162f4:	mov	r2, #0
   162f8:	str	r2, [r3]
   162fc:	b	16318 <_start@@Base+0x3c08>
   16300:	ldr	r3, [fp, #-8]
   16304:	b	1631c <_start@@Base+0x3c0c>
   16308:	ldr	r3, [fp, #-8]
   1630c:	b	1631c <_start@@Base+0x3c0c>
   16310:	ldr	r3, [fp, #-8]
   16314:	b	1631c <_start@@Base+0x3c0c>
   16318:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1631c:	mov	r0, r3
   16320:	sub	sp, fp, #4
   16324:	pop	{fp, pc}
   16328:	andeq	r0, r0, r0
   1632c:	strbtmi	r6, [pc], -r0, lsl #30
   16330:	strbvc	r6, [r4, #-1366]!	; 0xfffffaaa
   16334:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   16338:			; <UNDEFINED> instruction: 0xffff0000
   1633c:	cmnvs	ip, r0
   16340:	push	{fp, lr}
   16344:	add	fp, sp, #4
   16348:	sub	sp, sp, #24
   1634c:	str	r0, [fp, #-16]
   16350:	str	r1, [fp, #-20]	; 0xffffffec
   16354:	str	r2, [fp, #-24]	; 0xffffffe8
   16358:	str	r3, [fp, #-28]	; 0xffffffe4
   1635c:	sub	r3, fp, #8
   16360:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16364:	ldr	r1, [fp, #-20]	; 0xffffffec
   16368:	ldr	r0, [fp, #-16]
   1636c:	bl	13918 <_start@@Base+0x1208>
   16370:	str	r0, [fp, #-20]	; 0xffffffec
   16374:	b	163a4 <_start@@Base+0x3c94>
   16378:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1637c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16380:	ldr	r0, [fp, #-16]
   16384:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   16388:	str	r0, [fp, #-20]	; 0xffffffec
   1638c:	sub	r3, fp, #8
   16390:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16394:	ldr	r1, [fp, #-20]	; 0xffffffec
   16398:	ldr	r0, [fp, #-16]
   1639c:	bl	13a00 <_start@@Base+0x12f0>
   163a0:	str	r0, [fp, #-20]	; 0xffffffec
   163a4:	ldr	r3, [fp, #-8]
   163a8:	cmp	r3, #0
   163ac:	bne	16378 <_start@@Base+0x3c68>
   163b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   163b4:	mov	r0, r3
   163b8:	sub	sp, fp, #4
   163bc:	pop	{fp, pc}
   163c0:	push	{fp, lr}
   163c4:	add	fp, sp, #4
   163c8:	sub	sp, sp, #24
   163cc:	str	r0, [fp, #-16]
   163d0:	str	r1, [fp, #-20]	; 0xffffffec
   163d4:	str	r2, [fp, #-24]	; 0xffffffe8
   163d8:	str	r3, [fp, #-28]	; 0xffffffe4
   163dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   163e0:	mov	r2, #0
   163e4:	str	r2, [r3]
   163e8:	ldr	r3, [fp, #-16]
   163ec:	ldr	r3, [r3]
   163f0:	mov	r2, #1
   163f4:	mov	r1, #0
   163f8:	mov	r0, r3
   163fc:	bl	27e50 <flatcc_builder_start_struct@@Base>
   16400:	str	r0, [fp, #-8]
   16404:	ldr	r3, [fp, #-8]
   16408:	cmp	r3, #0
   1640c:	beq	1646c <_start@@Base+0x3d5c>
   16410:	ldr	r3, [fp, #-8]
   16414:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16418:	ldr	r1, [fp, #-20]	; 0xffffffec
   1641c:	ldr	r0, [fp, #-16]
   16420:	bl	16340 <_start@@Base+0x3c30>
   16424:	str	r0, [fp, #-20]	; 0xffffffec
   16428:	ldr	r2, [fp, #-20]	; 0xffffffec
   1642c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16430:	cmp	r2, r3
   16434:	beq	16470 <_start@@Base+0x3d60>
   16438:	ldr	r3, [fp, #-16]
   1643c:	ldr	r3, [r3]
   16440:	mov	r0, r3
   16444:	bl	27ef0 <flatcc_builder_end_struct@@Base>
   16448:	mov	r2, r0
   1644c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16450:	str	r2, [r3]
   16454:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16458:	ldr	r3, [r3]
   1645c:	cmp	r3, #0
   16460:	beq	16470 <_start@@Base+0x3d60>
   16464:	ldr	r3, [fp, #-20]	; 0xffffffec
   16468:	b	16488 <_start@@Base+0x3d78>
   1646c:	nop			; (mov r0, r0)
   16470:	mov	r3, #33	; 0x21
   16474:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16478:	ldr	r1, [fp, #-20]	; 0xffffffec
   1647c:	ldr	r0, [fp, #-16]
   16480:	bl	3198c <flatcc_json_parser_set_error@@Base>
   16484:	mov	r3, r0
   16488:	mov	r0, r3
   1648c:	sub	sp, fp, #4
   16490:	pop	{fp, pc}
   16494:	push	{fp}		; (str fp, [sp, #-4]!)
   16498:	add	fp, sp, #0
   1649c:	sub	sp, sp, #20
   164a0:	str	r0, [fp, #-8]
   164a4:	str	r1, [fp, #-12]
   164a8:	str	r2, [fp, #-16]
   164ac:	str	r3, [fp, #-20]	; 0xffffffec
   164b0:	ldr	r3, [fp, #-12]
   164b4:	mov	r0, r3
   164b8:	add	sp, fp, #0
   164bc:	pop	{fp}		; (ldr fp, [sp], #4)
   164c0:	bx	lr
   164c4:	push	{fp}		; (str fp, [sp, #-4]!)
   164c8:	add	fp, sp, #0
   164cc:	sub	sp, sp, #20
   164d0:	str	r0, [fp, #-8]
   164d4:	str	r1, [fp, #-12]
   164d8:	str	r2, [fp, #-16]
   164dc:	str	r3, [fp, #-20]	; 0xffffffec
   164e0:	ldr	r3, [fp, #-12]
   164e4:	mov	r0, r3
   164e8:	add	sp, fp, #0
   164ec:	pop	{fp}		; (ldr fp, [sp], #4)
   164f0:	bx	lr
   164f4:	push	{fp}		; (str fp, [sp, #-4]!)
   164f8:	add	fp, sp, #0
   164fc:	sub	sp, sp, #20
   16500:	str	r0, [fp, #-8]
   16504:	str	r1, [fp, #-12]
   16508:	str	r2, [fp, #-16]
   1650c:	str	r3, [fp, #-20]	; 0xffffffec
   16510:	ldr	r3, [fp, #-12]
   16514:	mov	r0, r3
   16518:	add	sp, fp, #0
   1651c:	pop	{fp}		; (ldr fp, [sp], #4)
   16520:	bx	lr
   16524:	push	{fp}		; (str fp, [sp, #-4]!)
   16528:	add	fp, sp, #0
   1652c:	sub	sp, sp, #20
   16530:	str	r0, [fp, #-8]
   16534:	str	r1, [fp, #-12]
   16538:	str	r2, [fp, #-16]
   1653c:	str	r3, [fp, #-20]	; 0xffffffec
   16540:	ldr	r3, [fp, #-12]
   16544:	mov	r0, r3
   16548:	add	sp, fp, #0
   1654c:	pop	{fp}		; (ldr fp, [sp], #4)
   16550:	bx	lr
   16554:	push	{fp}		; (str fp, [sp, #-4]!)
   16558:	add	fp, sp, #0
   1655c:	sub	sp, sp, #20
   16560:	str	r0, [fp, #-8]
   16564:	str	r1, [fp, #-12]
   16568:	str	r2, [fp, #-16]
   1656c:	str	r3, [fp, #-20]	; 0xffffffec
   16570:	ldr	r3, [fp, #-12]
   16574:	mov	r0, r3
   16578:	add	sp, fp, #0
   1657c:	pop	{fp}		; (ldr fp, [sp], #4)
   16580:	bx	lr
   16584:	push	{fp, lr}
   16588:	add	fp, sp, #4
   1658c:	sub	sp, sp, #48	; 0x30
   16590:	str	r0, [fp, #-32]	; 0xffffffe0
   16594:	str	r1, [fp, #-36]	; 0xffffffdc
   16598:	str	r2, [fp, #-40]	; 0xffffffd8
   1659c:	str	r3, [fp, #-44]	; 0xffffffd4
   165a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   165a4:	str	r3, [fp, #-8]
   165a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   165ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   165b0:	bl	137ec <_start@@Base+0x10dc>
   165b4:	strd	r0, [fp, #-20]	; 0xffffffec
   165b8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   165bc:	add	r1, pc, #212	; 0xd4
   165c0:	ldrd	r0, [r1]
   165c4:	cmp	r3, r1
   165c8:	cmpeq	r2, r0
   165cc:	bne	16684 <_start@@Base+0x3f74>
   165d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   165d4:	add	r3, r3, #8
   165d8:	str	r3, [fp, #-36]	; 0xffffffdc
   165dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   165e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   165e4:	bl	137ec <_start@@Base+0x10dc>
   165e8:	strd	r0, [fp, #-20]	; 0xffffffec
   165ec:	ldrd	r2, [fp, #-20]	; 0xffffffec
   165f0:	mov	r0, #0
   165f4:	mvn	r1, #255	; 0xff
   165f8:	and	r2, r2, r0
   165fc:	and	r3, r3, r1
   16600:	add	r1, pc, #152	; 0x98
   16604:	ldrd	r0, [r1]
   16608:	cmp	r3, r1
   1660c:	cmpeq	r2, r0
   16610:	bne	1667c <_start@@Base+0x3f6c>
   16614:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16618:	str	r3, [fp, #-24]	; 0xffffffe8
   1661c:	mov	r3, #3
   16620:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16624:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16628:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1662c:	bl	13834 <_start@@Base+0x1124>
   16630:	str	r0, [fp, #-36]	; 0xffffffdc
   16634:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1663c:	cmp	r2, r3
   16640:	beq	16674 <_start@@Base+0x3f64>
   16644:	ldr	r3, [fp, #8]
   16648:	str	r3, [sp, #4]
   1664c:	ldr	r3, [fp, #4]
   16650:	str	r3, [sp]
   16654:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16658:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1665c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16660:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16664:	bl	1618c <_start@@Base+0x3a7c>
   16668:	str	r0, [fp, #-36]	; 0xffffffdc
   1666c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16670:	b	16688 <_start@@Base+0x3f78>
   16674:	ldr	r3, [fp, #-8]
   16678:	b	16688 <_start@@Base+0x3f78>
   1667c:	ldr	r3, [fp, #-8]
   16680:	b	16688 <_start@@Base+0x3f78>
   16684:	ldr	r3, [fp, #-8]
   16688:	mov	r0, r3
   1668c:	sub	sp, fp, #4
   16690:	pop	{fp, pc}
   16694:	nop			; (mov r0, r0)
   16698:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   1669c:	ldrbtmi	r6, [r2], -sp, ror #30
   166a0:	andeq	r0, r0, r0
   166a4:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   166a8:	push	{fp, lr}
   166ac:	add	fp, sp, #4
   166b0:	sub	sp, sp, #48	; 0x30
   166b4:	str	r0, [fp, #-32]	; 0xffffffe0
   166b8:	str	r1, [fp, #-36]	; 0xffffffdc
   166bc:	str	r2, [fp, #-40]	; 0xffffffd8
   166c0:	str	r3, [fp, #-44]	; 0xffffffd4
   166c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   166c8:	str	r3, [fp, #-8]
   166cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   166d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   166d4:	bl	137ec <_start@@Base+0x10dc>
   166d8:	strd	r0, [fp, #-20]	; 0xffffffec
   166dc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   166e0:	add	r1, pc, #384	; 0x180
   166e4:	ldrd	r0, [r1]
   166e8:	cmp	r3, r1
   166ec:	cmpeq	r2, r0
   166f0:	bne	16854 <_start@@Base+0x4144>
   166f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   166f8:	add	r3, r3, #8
   166fc:	str	r3, [fp, #-36]	; 0xffffffdc
   16700:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16704:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16708:	bl	137ec <_start@@Base+0x10dc>
   1670c:	strd	r0, [fp, #-20]	; 0xffffffec
   16710:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16714:	add	r1, pc, #340	; 0x154
   16718:	ldrd	r0, [r1]
   1671c:	cmp	r3, r1
   16720:	cmpeq	r2, r0
   16724:	bne	1684c <_start@@Base+0x413c>
   16728:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1672c:	add	r3, r3, #8
   16730:	str	r3, [fp, #-36]	; 0xffffffdc
   16734:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16738:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1673c:	bl	137ec <_start@@Base+0x10dc>
   16740:	strd	r0, [fp, #-20]	; 0xffffffec
   16744:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16748:	add	r1, pc, #296	; 0x128
   1674c:	ldrd	r0, [r1]
   16750:	cmp	r3, r1
   16754:	cmpeq	r2, r0
   16758:	bne	16844 <_start@@Base+0x4134>
   1675c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16760:	add	r3, r3, #8
   16764:	str	r3, [fp, #-36]	; 0xffffffdc
   16768:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1676c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16770:	bl	137ec <_start@@Base+0x10dc>
   16774:	strd	r0, [fp, #-20]	; 0xffffffec
   16778:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1677c:	add	r1, pc, #252	; 0xfc
   16780:	ldrd	r0, [r1]
   16784:	cmp	r3, r1
   16788:	cmpeq	r2, r0
   1678c:	bne	1683c <_start@@Base+0x412c>
   16790:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16794:	add	r3, r3, #8
   16798:	str	r3, [fp, #-36]	; 0xffffffdc
   1679c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   167a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   167a4:	bl	137ec <_start@@Base+0x10dc>
   167a8:	strd	r0, [fp, #-20]	; 0xffffffec
   167ac:	ldrd	r2, [fp, #-20]	; 0xffffffec
   167b0:	mov	r0, #0
   167b4:	mov	r1, #-16777216	; 0xff000000
   167b8:	and	r2, r2, r0
   167bc:	and	r3, r3, r1
   167c0:	cmp	r3, #1694498816	; 0x65000000
   167c4:	cmpeq	r2, #0
   167c8:	bne	16834 <_start@@Base+0x4124>
   167cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   167d0:	str	r3, [fp, #-24]	; 0xffffffe8
   167d4:	mov	r3, #1
   167d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   167dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   167e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   167e4:	bl	13834 <_start@@Base+0x1124>
   167e8:	str	r0, [fp, #-36]	; 0xffffffdc
   167ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   167f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   167f4:	cmp	r2, r3
   167f8:	beq	1682c <_start@@Base+0x411c>
   167fc:	ldr	r3, [fp, #8]
   16800:	str	r3, [sp, #4]
   16804:	ldr	r3, [fp, #4]
   16808:	str	r3, [sp]
   1680c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16810:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16814:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16818:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1681c:	bl	1618c <_start@@Base+0x3a7c>
   16820:	str	r0, [fp, #-36]	; 0xffffffdc
   16824:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16828:	b	16858 <_start@@Base+0x4148>
   1682c:	ldr	r3, [fp, #-8]
   16830:	b	16858 <_start@@Base+0x4148>
   16834:	ldr	r3, [fp, #-8]
   16838:	b	16858 <_start@@Base+0x4148>
   1683c:	ldr	r3, [fp, #-8]
   16840:	b	16858 <_start@@Base+0x4148>
   16844:	ldr	r3, [fp, #-8]
   16848:	b	16858 <_start@@Base+0x4148>
   1684c:	ldr	r3, [fp, #-8]
   16850:	b	16858 <_start@@Base+0x4148>
   16854:	ldr	r3, [fp, #-8]
   16858:	mov	r0, r3
   1685c:	sub	sp, fp, #4
   16860:	pop	{fp, pc}
   16864:	nop			; (mov r0, r0)
   16868:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   1686c:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   16870:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   16874:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   16878:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   1687c:	cmnpl	r0, #-1073741800	; 0xc0000018
   16880:	cmnvs	ip, #100, 10	; 0x19000000
   16884:	svcvs	0x006d496e
   16888:	push	{fp}		; (str fp, [sp, #-4]!)
   1688c:	add	fp, sp, #0
   16890:	sub	sp, sp, #20
   16894:	str	r0, [fp, #-8]
   16898:	str	r1, [fp, #-12]
   1689c:	str	r2, [fp, #-16]
   168a0:	str	r3, [fp, #-20]	; 0xffffffec
   168a4:	ldr	r3, [fp, #-12]
   168a8:	mov	r0, r3
   168ac:	add	sp, fp, #0
   168b0:	pop	{fp}		; (ldr fp, [sp], #4)
   168b4:	bx	lr
   168b8:	push	{fp}		; (str fp, [sp, #-4]!)
   168bc:	add	fp, sp, #0
   168c0:	sub	sp, sp, #20
   168c4:	str	r0, [fp, #-8]
   168c8:	str	r1, [fp, #-12]
   168cc:	str	r2, [fp, #-16]
   168d0:	str	r3, [fp, #-20]	; 0xffffffec
   168d4:	ldr	r3, [fp, #-12]
   168d8:	mov	r0, r3
   168dc:	add	sp, fp, #0
   168e0:	pop	{fp}		; (ldr fp, [sp], #4)
   168e4:	bx	lr
   168e8:	push	{fp}		; (str fp, [sp, #-4]!)
   168ec:	add	fp, sp, #0
   168f0:	sub	sp, sp, #20
   168f4:	str	r0, [fp, #-8]
   168f8:	str	r1, [fp, #-12]
   168fc:	str	r2, [fp, #-16]
   16900:	str	r3, [fp, #-20]	; 0xffffffec
   16904:	ldr	r3, [fp, #-12]
   16908:	mov	r0, r3
   1690c:	add	sp, fp, #0
   16910:	pop	{fp}		; (ldr fp, [sp], #4)
   16914:	bx	lr
   16918:	push	{fp}		; (str fp, [sp, #-4]!)
   1691c:	add	fp, sp, #0
   16920:	sub	sp, sp, #20
   16924:	str	r0, [fp, #-8]
   16928:	str	r1, [fp, #-12]
   1692c:	str	r2, [fp, #-16]
   16930:	str	r3, [fp, #-20]	; 0xffffffec
   16934:	ldr	r3, [fp, #-12]
   16938:	mov	r0, r3
   1693c:	add	sp, fp, #0
   16940:	pop	{fp}		; (ldr fp, [sp], #4)
   16944:	bx	lr
   16948:	push	{fp}		; (str fp, [sp, #-4]!)
   1694c:	add	fp, sp, #0
   16950:	sub	sp, sp, #20
   16954:	str	r0, [fp, #-8]
   16958:	str	r1, [fp, #-12]
   1695c:	str	r2, [fp, #-16]
   16960:	str	r3, [fp, #-20]	; 0xffffffec
   16964:	ldr	r3, [fp, #-12]
   16968:	mov	r0, r3
   1696c:	add	sp, fp, #0
   16970:	pop	{fp}		; (ldr fp, [sp], #4)
   16974:	bx	lr
   16978:	push	{fp, lr}
   1697c:	add	fp, sp, #4
   16980:	sub	sp, sp, #48	; 0x30
   16984:	str	r0, [fp, #-32]	; 0xffffffe0
   16988:	str	r1, [fp, #-36]	; 0xffffffdc
   1698c:	str	r2, [fp, #-40]	; 0xffffffd8
   16990:	str	r3, [fp, #-44]	; 0xffffffd4
   16994:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16998:	str	r3, [fp, #-8]
   1699c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   169a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   169a4:	bl	137ec <_start@@Base+0x10dc>
   169a8:	strd	r0, [fp, #-20]	; 0xffffffec
   169ac:	ldrd	r2, [fp, #-20]	; 0xffffffec
   169b0:	add	r1, pc, #208	; 0xd0
   169b4:	ldrd	r0, [r1]
   169b8:	cmp	r3, r1
   169bc:	cmpeq	r2, r0
   169c0:	bne	16a78 <_start@@Base+0x4368>
   169c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   169c8:	add	r3, r3, #8
   169cc:	str	r3, [fp, #-36]	; 0xffffffdc
   169d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   169d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   169d8:	bl	137ec <_start@@Base+0x10dc>
   169dc:	strd	r0, [fp, #-20]	; 0xffffffec
   169e0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   169e4:	mov	r0, #0
   169e8:	mvn	r1, #255	; 0xff
   169ec:	and	r2, r2, r0
   169f0:	and	r3, r3, r1
   169f4:	add	r1, pc, #148	; 0x94
   169f8:	ldrd	r0, [r1]
   169fc:	cmp	r3, r1
   16a00:	cmpeq	r2, r0
   16a04:	bne	16a70 <_start@@Base+0x4360>
   16a08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16a0c:	str	r3, [fp, #-24]	; 0xffffffe8
   16a10:	mov	r3, #3
   16a14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16a18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16a20:	bl	13834 <_start@@Base+0x1124>
   16a24:	str	r0, [fp, #-36]	; 0xffffffdc
   16a28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16a2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16a30:	cmp	r2, r3
   16a34:	beq	16a68 <_start@@Base+0x4358>
   16a38:	ldr	r3, [fp, #8]
   16a3c:	str	r3, [sp, #4]
   16a40:	ldr	r3, [fp, #4]
   16a44:	str	r3, [sp]
   16a48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16a4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16a50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16a54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16a58:	bl	1618c <_start@@Base+0x3a7c>
   16a5c:	str	r0, [fp, #-36]	; 0xffffffdc
   16a60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16a64:	b	16a7c <_start@@Base+0x436c>
   16a68:	ldr	r3, [fp, #-8]
   16a6c:	b	16a7c <_start@@Base+0x436c>
   16a70:	ldr	r3, [fp, #-8]
   16a74:	b	16a7c <_start@@Base+0x436c>
   16a78:	ldr	r3, [fp, #-8]
   16a7c:	mov	r0, r3
   16a80:	sub	sp, fp, #4
   16a84:	pop	{fp, pc}
   16a88:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   16a8c:	ldrbtmi	r6, [r2], -sp, ror #30
   16a90:	andeq	r0, r0, r0
   16a94:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   16a98:	push	{fp, lr}
   16a9c:	add	fp, sp, #4
   16aa0:	sub	sp, sp, #48	; 0x30
   16aa4:	str	r0, [fp, #-32]	; 0xffffffe0
   16aa8:	str	r1, [fp, #-36]	; 0xffffffdc
   16aac:	str	r2, [fp, #-40]	; 0xffffffd8
   16ab0:	str	r3, [fp, #-44]	; 0xffffffd4
   16ab4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16ab8:	str	r3, [fp, #-8]
   16abc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16ac0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16ac4:	bl	137ec <_start@@Base+0x10dc>
   16ac8:	strd	r0, [fp, #-20]	; 0xffffffec
   16acc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16ad0:	add	r1, pc, #384	; 0x180
   16ad4:	ldrd	r0, [r1]
   16ad8:	cmp	r3, r1
   16adc:	cmpeq	r2, r0
   16ae0:	bne	16c44 <_start@@Base+0x4534>
   16ae4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16ae8:	add	r3, r3, #8
   16aec:	str	r3, [fp, #-36]	; 0xffffffdc
   16af0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16af4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16af8:	bl	137ec <_start@@Base+0x10dc>
   16afc:	strd	r0, [fp, #-20]	; 0xffffffec
   16b00:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16b04:	add	r1, pc, #340	; 0x154
   16b08:	ldrd	r0, [r1]
   16b0c:	cmp	r3, r1
   16b10:	cmpeq	r2, r0
   16b14:	bne	16c3c <_start@@Base+0x452c>
   16b18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16b1c:	add	r3, r3, #8
   16b20:	str	r3, [fp, #-36]	; 0xffffffdc
   16b24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16b28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16b2c:	bl	137ec <_start@@Base+0x10dc>
   16b30:	strd	r0, [fp, #-20]	; 0xffffffec
   16b34:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16b38:	add	r1, pc, #296	; 0x128
   16b3c:	ldrd	r0, [r1]
   16b40:	cmp	r3, r1
   16b44:	cmpeq	r2, r0
   16b48:	bne	16c34 <_start@@Base+0x4524>
   16b4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16b50:	add	r3, r3, #8
   16b54:	str	r3, [fp, #-36]	; 0xffffffdc
   16b58:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16b5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16b60:	bl	137ec <_start@@Base+0x10dc>
   16b64:	strd	r0, [fp, #-20]	; 0xffffffec
   16b68:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16b6c:	add	r1, pc, #252	; 0xfc
   16b70:	ldrd	r0, [r1]
   16b74:	cmp	r3, r1
   16b78:	cmpeq	r2, r0
   16b7c:	bne	16c2c <_start@@Base+0x451c>
   16b80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16b84:	add	r3, r3, #8
   16b88:	str	r3, [fp, #-36]	; 0xffffffdc
   16b8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16b90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16b94:	bl	137ec <_start@@Base+0x10dc>
   16b98:	strd	r0, [fp, #-20]	; 0xffffffec
   16b9c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16ba0:	mov	r0, #0
   16ba4:	mov	r1, #-16777216	; 0xff000000
   16ba8:	and	r2, r2, r0
   16bac:	and	r3, r3, r1
   16bb0:	cmp	r3, #1694498816	; 0x65000000
   16bb4:	cmpeq	r2, #0
   16bb8:	bne	16c24 <_start@@Base+0x4514>
   16bbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16bc0:	str	r3, [fp, #-24]	; 0xffffffe8
   16bc4:	mov	r3, #1
   16bc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16bd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16bd4:	bl	13834 <_start@@Base+0x1124>
   16bd8:	str	r0, [fp, #-36]	; 0xffffffdc
   16bdc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16be0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16be4:	cmp	r2, r3
   16be8:	beq	16c1c <_start@@Base+0x450c>
   16bec:	ldr	r3, [fp, #8]
   16bf0:	str	r3, [sp, #4]
   16bf4:	ldr	r3, [fp, #4]
   16bf8:	str	r3, [sp]
   16bfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16c00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16c04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16c08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c0c:	bl	1618c <_start@@Base+0x3a7c>
   16c10:	str	r0, [fp, #-36]	; 0xffffffdc
   16c14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16c18:	b	16c48 <_start@@Base+0x4538>
   16c1c:	ldr	r3, [fp, #-8]
   16c20:	b	16c48 <_start@@Base+0x4538>
   16c24:	ldr	r3, [fp, #-8]
   16c28:	b	16c48 <_start@@Base+0x4538>
   16c2c:	ldr	r3, [fp, #-8]
   16c30:	b	16c48 <_start@@Base+0x4538>
   16c34:	ldr	r3, [fp, #-8]
   16c38:	b	16c48 <_start@@Base+0x4538>
   16c3c:	ldr	r3, [fp, #-8]
   16c40:	b	16c48 <_start@@Base+0x4538>
   16c44:	ldr	r3, [fp, #-8]
   16c48:	mov	r0, r3
   16c4c:	sub	sp, fp, #4
   16c50:	pop	{fp, pc}
   16c54:	nop			; (mov r0, r0)
   16c58:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   16c5c:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   16c60:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   16c64:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   16c68:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   16c6c:	cmnpl	r0, #-1073741800	; 0xc0000018
   16c70:	cmnvs	ip, #100, 10	; 0x19000000
   16c74:	svcvs	0x006d496e
   16c78:	push	{fp}		; (str fp, [sp, #-4]!)
   16c7c:	add	fp, sp, #0
   16c80:	sub	sp, sp, #20
   16c84:	str	r0, [fp, #-8]
   16c88:	str	r1, [fp, #-12]
   16c8c:	str	r2, [fp, #-16]
   16c90:	str	r3, [fp, #-20]	; 0xffffffec
   16c94:	ldr	r3, [fp, #-12]
   16c98:	mov	r0, r3
   16c9c:	add	sp, fp, #0
   16ca0:	pop	{fp}		; (ldr fp, [sp], #4)
   16ca4:	bx	lr
   16ca8:	push	{fp}		; (str fp, [sp, #-4]!)
   16cac:	add	fp, sp, #0
   16cb0:	sub	sp, sp, #20
   16cb4:	str	r0, [fp, #-8]
   16cb8:	str	r1, [fp, #-12]
   16cbc:	str	r2, [fp, #-16]
   16cc0:	str	r3, [fp, #-20]	; 0xffffffec
   16cc4:	ldr	r3, [fp, #-12]
   16cc8:	mov	r0, r3
   16ccc:	add	sp, fp, #0
   16cd0:	pop	{fp}		; (ldr fp, [sp], #4)
   16cd4:	bx	lr
   16cd8:	push	{fp}		; (str fp, [sp, #-4]!)
   16cdc:	add	fp, sp, #0
   16ce0:	sub	sp, sp, #20
   16ce4:	str	r0, [fp, #-8]
   16ce8:	str	r1, [fp, #-12]
   16cec:	str	r2, [fp, #-16]
   16cf0:	str	r3, [fp, #-20]	; 0xffffffec
   16cf4:	ldr	r3, [fp, #-12]
   16cf8:	mov	r0, r3
   16cfc:	add	sp, fp, #0
   16d00:	pop	{fp}		; (ldr fp, [sp], #4)
   16d04:	bx	lr
   16d08:	push	{fp}		; (str fp, [sp, #-4]!)
   16d0c:	add	fp, sp, #0
   16d10:	sub	sp, sp, #20
   16d14:	str	r0, [fp, #-8]
   16d18:	str	r1, [fp, #-12]
   16d1c:	str	r2, [fp, #-16]
   16d20:	str	r3, [fp, #-20]	; 0xffffffec
   16d24:	ldr	r3, [fp, #-12]
   16d28:	mov	r0, r3
   16d2c:	add	sp, fp, #0
   16d30:	pop	{fp}		; (ldr fp, [sp], #4)
   16d34:	bx	lr
   16d38:	push	{fp}		; (str fp, [sp, #-4]!)
   16d3c:	add	fp, sp, #0
   16d40:	sub	sp, sp, #20
   16d44:	str	r0, [fp, #-8]
   16d48:	str	r1, [fp, #-12]
   16d4c:	str	r2, [fp, #-16]
   16d50:	str	r3, [fp, #-20]	; 0xffffffec
   16d54:	ldr	r3, [fp, #-12]
   16d58:	mov	r0, r3
   16d5c:	add	sp, fp, #0
   16d60:	pop	{fp}		; (ldr fp, [sp], #4)
   16d64:	bx	lr
   16d68:	push	{fp}		; (str fp, [sp, #-4]!)
   16d6c:	add	fp, sp, #0
   16d70:	sub	sp, sp, #20
   16d74:	str	r0, [fp, #-8]
   16d78:	str	r1, [fp, #-12]
   16d7c:	str	r2, [fp, #-16]
   16d80:	str	r3, [fp, #-20]	; 0xffffffec
   16d84:	ldr	r3, [fp, #-12]
   16d88:	mov	r0, r3
   16d8c:	add	sp, fp, #0
   16d90:	pop	{fp}		; (ldr fp, [sp], #4)
   16d94:	bx	lr
   16d98:	push	{fp}		; (str fp, [sp, #-4]!)
   16d9c:	add	fp, sp, #0
   16da0:	sub	sp, sp, #20
   16da4:	str	r0, [fp, #-8]
   16da8:	str	r1, [fp, #-12]
   16dac:	str	r2, [fp, #-16]
   16db0:	str	r3, [fp, #-20]	; 0xffffffec
   16db4:	ldr	r3, [fp, #-12]
   16db8:	mov	r0, r3
   16dbc:	add	sp, fp, #0
   16dc0:	pop	{fp}		; (ldr fp, [sp], #4)
   16dc4:	bx	lr
   16dc8:	push	{fp, lr}
   16dcc:	add	fp, sp, #4
   16dd0:	sub	sp, sp, #24
   16dd4:	str	r0, [fp, #-16]
   16dd8:	str	r1, [fp, #-20]	; 0xffffffec
   16ddc:	str	r2, [fp, #-24]	; 0xffffffe8
   16de0:	str	r3, [fp, #-28]	; 0xffffffe4
   16de4:	sub	r3, fp, #8
   16de8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16dec:	ldr	r1, [fp, #-20]	; 0xffffffec
   16df0:	ldr	r0, [fp, #-16]
   16df4:	bl	13918 <_start@@Base+0x1208>
   16df8:	str	r0, [fp, #-20]	; 0xffffffec
   16dfc:	b	16e2c <_start@@Base+0x471c>
   16e00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e04:	ldr	r1, [fp, #-20]	; 0xffffffec
   16e08:	ldr	r0, [fp, #-16]
   16e0c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   16e10:	str	r0, [fp, #-20]	; 0xffffffec
   16e14:	sub	r3, fp, #8
   16e18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16e20:	ldr	r0, [fp, #-16]
   16e24:	bl	13a00 <_start@@Base+0x12f0>
   16e28:	str	r0, [fp, #-20]	; 0xffffffec
   16e2c:	ldr	r3, [fp, #-8]
   16e30:	cmp	r3, #0
   16e34:	bne	16e00 <_start@@Base+0x46f0>
   16e38:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e3c:	mov	r0, r3
   16e40:	sub	sp, fp, #4
   16e44:	pop	{fp, pc}
   16e48:	push	{fp, lr}
   16e4c:	add	fp, sp, #4
   16e50:	sub	sp, sp, #24
   16e54:	str	r0, [fp, #-16]
   16e58:	str	r1, [fp, #-20]	; 0xffffffec
   16e5c:	str	r2, [fp, #-24]	; 0xffffffe8
   16e60:	str	r3, [fp, #-28]	; 0xffffffe4
   16e64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16e68:	mov	r2, #0
   16e6c:	str	r2, [r3]
   16e70:	ldr	r3, [fp, #-16]
   16e74:	ldr	r3, [r3]
   16e78:	mov	r2, #1
   16e7c:	mov	r1, #0
   16e80:	mov	r0, r3
   16e84:	bl	27e50 <flatcc_builder_start_struct@@Base>
   16e88:	str	r0, [fp, #-8]
   16e8c:	ldr	r3, [fp, #-8]
   16e90:	cmp	r3, #0
   16e94:	beq	16ef4 <_start@@Base+0x47e4>
   16e98:	ldr	r3, [fp, #-8]
   16e9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16ea0:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ea4:	ldr	r0, [fp, #-16]
   16ea8:	bl	16dc8 <_start@@Base+0x46b8>
   16eac:	str	r0, [fp, #-20]	; 0xffffffec
   16eb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   16eb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16eb8:	cmp	r2, r3
   16ebc:	beq	16ef8 <_start@@Base+0x47e8>
   16ec0:	ldr	r3, [fp, #-16]
   16ec4:	ldr	r3, [r3]
   16ec8:	mov	r0, r3
   16ecc:	bl	27ef0 <flatcc_builder_end_struct@@Base>
   16ed0:	mov	r2, r0
   16ed4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ed8:	str	r2, [r3]
   16edc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ee0:	ldr	r3, [r3]
   16ee4:	cmp	r3, #0
   16ee8:	beq	16ef8 <_start@@Base+0x47e8>
   16eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   16ef0:	b	16f10 <_start@@Base+0x4800>
   16ef4:	nop			; (mov r0, r0)
   16ef8:	mov	r3, #33	; 0x21
   16efc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16f00:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f04:	ldr	r0, [fp, #-16]
   16f08:	bl	3198c <flatcc_json_parser_set_error@@Base>
   16f0c:	mov	r3, r0
   16f10:	mov	r0, r3
   16f14:	sub	sp, fp, #4
   16f18:	pop	{fp, pc}
   16f1c:	push	{fp, lr}
   16f20:	add	fp, sp, #4
   16f24:	sub	sp, sp, #24
   16f28:	str	r0, [fp, #-16]
   16f2c:	str	r1, [fp, #-20]	; 0xffffffec
   16f30:	str	r2, [fp, #-24]	; 0xffffffe8
   16f34:	str	r3, [fp, #-28]	; 0xffffffe4
   16f38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16f3c:	mov	r2, #0
   16f40:	str	r2, [r3]
   16f44:	ldr	r3, [fp, #-16]
   16f48:	ldr	r3, [r3]
   16f4c:	mov	r1, #0
   16f50:	mov	r0, r3
   16f54:	bl	28be4 <flatcc_builder_start_table@@Base>
   16f58:	mov	r3, r0
   16f5c:	cmp	r3, #0
   16f60:	bne	17010 <_start@@Base+0x4900>
   16f64:	sub	r3, fp, #8
   16f68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16f6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f70:	ldr	r0, [fp, #-16]
   16f74:	bl	13918 <_start@@Base+0x1208>
   16f78:	str	r0, [fp, #-20]	; 0xffffffec
   16f7c:	b	16fc0 <_start@@Base+0x48b0>
   16f80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16f84:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f88:	ldr	r0, [fp, #-16]
   16f8c:	bl	13508 <_start@@Base+0xdf8>
   16f90:	str	r0, [fp, #-20]	; 0xffffffec
   16f94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16f98:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f9c:	ldr	r0, [fp, #-16]
   16fa0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   16fa4:	str	r0, [fp, #-20]	; 0xffffffec
   16fa8:	sub	r3, fp, #8
   16fac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16fb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   16fb4:	ldr	r0, [fp, #-16]
   16fb8:	bl	13a00 <_start@@Base+0x12f0>
   16fbc:	str	r0, [fp, #-20]	; 0xffffffec
   16fc0:	ldr	r3, [fp, #-8]
   16fc4:	cmp	r3, #0
   16fc8:	bne	16f80 <_start@@Base+0x4870>
   16fcc:	ldr	r3, [fp, #-16]
   16fd0:	ldr	r3, [r3, #24]
   16fd4:	cmp	r3, #0
   16fd8:	bne	17018 <_start@@Base+0x4908>
   16fdc:	ldr	r3, [fp, #-16]
   16fe0:	ldr	r3, [r3]
   16fe4:	mov	r0, r3
   16fe8:	bl	29748 <flatcc_builder_end_table@@Base>
   16fec:	mov	r2, r0
   16ff0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ff4:	str	r2, [r3]
   16ff8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ffc:	ldr	r3, [r3]
   17000:	cmp	r3, #0
   17004:	beq	17020 <_start@@Base+0x4910>
   17008:	ldr	r3, [fp, #-20]	; 0xffffffec
   1700c:	b	1703c <_start@@Base+0x492c>
   17010:	nop			; (mov r0, r0)
   17014:	b	17024 <_start@@Base+0x4914>
   17018:	nop			; (mov r0, r0)
   1701c:	b	17024 <_start@@Base+0x4914>
   17020:	nop			; (mov r0, r0)
   17024:	mov	r3, #33	; 0x21
   17028:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1702c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17030:	ldr	r0, [fp, #-16]
   17034:	bl	3198c <flatcc_json_parser_set_error@@Base>
   17038:	mov	r3, r0
   1703c:	mov	r0, r3
   17040:	sub	sp, fp, #4
   17044:	pop	{fp, pc}
   17048:	push	{fp, lr}
   1704c:	add	fp, sp, #4
   17050:	sub	sp, sp, #24
   17054:	str	r0, [fp, #-16]
   17058:	str	r1, [fp, #-20]	; 0xffffffec
   1705c:	str	r2, [fp, #-24]	; 0xffffffe8
   17060:	str	r3, [fp, #-28]	; 0xffffffe4
   17064:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17068:	mov	r2, #0
   1706c:	str	r2, [r3]
   17070:	ldr	r3, [fp, #-16]
   17074:	ldr	r3, [r3]
   17078:	mov	r1, #0
   1707c:	mov	r0, r3
   17080:	bl	28be4 <flatcc_builder_start_table@@Base>
   17084:	mov	r3, r0
   17088:	cmp	r3, #0
   1708c:	bne	1713c <_start@@Base+0x4a2c>
   17090:	sub	r3, fp, #8
   17094:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17098:	ldr	r1, [fp, #-20]	; 0xffffffec
   1709c:	ldr	r0, [fp, #-16]
   170a0:	bl	13918 <_start@@Base+0x1208>
   170a4:	str	r0, [fp, #-20]	; 0xffffffec
   170a8:	b	170ec <_start@@Base+0x49dc>
   170ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   170b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   170b4:	ldr	r0, [fp, #-16]
   170b8:	bl	13508 <_start@@Base+0xdf8>
   170bc:	str	r0, [fp, #-20]	; 0xffffffec
   170c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   170c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   170c8:	ldr	r0, [fp, #-16]
   170cc:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   170d0:	str	r0, [fp, #-20]	; 0xffffffec
   170d4:	sub	r3, fp, #8
   170d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   170dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   170e0:	ldr	r0, [fp, #-16]
   170e4:	bl	13a00 <_start@@Base+0x12f0>
   170e8:	str	r0, [fp, #-20]	; 0xffffffec
   170ec:	ldr	r3, [fp, #-8]
   170f0:	cmp	r3, #0
   170f4:	bne	170ac <_start@@Base+0x499c>
   170f8:	ldr	r3, [fp, #-16]
   170fc:	ldr	r3, [r3, #24]
   17100:	cmp	r3, #0
   17104:	bne	17144 <_start@@Base+0x4a34>
   17108:	ldr	r3, [fp, #-16]
   1710c:	ldr	r3, [r3]
   17110:	mov	r0, r3
   17114:	bl	29748 <flatcc_builder_end_table@@Base>
   17118:	mov	r2, r0
   1711c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17120:	str	r2, [r3]
   17124:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17128:	ldr	r3, [r3]
   1712c:	cmp	r3, #0
   17130:	beq	1714c <_start@@Base+0x4a3c>
   17134:	ldr	r3, [fp, #-20]	; 0xffffffec
   17138:	b	17168 <_start@@Base+0x4a58>
   1713c:	nop			; (mov r0, r0)
   17140:	b	17150 <_start@@Base+0x4a40>
   17144:	nop			; (mov r0, r0)
   17148:	b	17150 <_start@@Base+0x4a40>
   1714c:	nop			; (mov r0, r0)
   17150:	mov	r3, #33	; 0x21
   17154:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17158:	ldr	r1, [fp, #-20]	; 0xffffffec
   1715c:	ldr	r0, [fp, #-16]
   17160:	bl	3198c <flatcc_json_parser_set_error@@Base>
   17164:	mov	r3, r0
   17168:	mov	r0, r3
   1716c:	sub	sp, fp, #4
   17170:	pop	{fp, pc}
   17174:	push	{fp, lr}
   17178:	add	fp, sp, #4
   1717c:	sub	sp, sp, #16
   17180:	str	r0, [fp, #-8]
   17184:	str	r1, [fp, #-12]
   17188:	str	r2, [fp, #-16]
   1718c:	strb	r3, [fp, #-17]	; 0xffffffef
   17190:	ldr	r3, [fp, #4]
   17194:	mov	r2, #0
   17198:	str	r2, [r3]
   1719c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   171a0:	cmp	r3, #0
   171a4:	beq	171b4 <_start@@Base+0x4aa4>
   171a8:	cmp	r3, #1
   171ac:	beq	171cc <_start@@Base+0x4abc>
   171b0:	b	171fc <_start@@Base+0x4aec>
   171b4:	ldr	r2, [fp, #-16]
   171b8:	ldr	r1, [fp, #-12]
   171bc:	ldr	r0, [fp, #-8]
   171c0:	bl	1455c <_start@@Base+0x1e4c>
   171c4:	mov	r3, r0
   171c8:	b	1727c <_start@@Base+0x4b6c>
   171cc:	ldr	r3, [fp, #4]
   171d0:	ldr	r2, [fp, #-16]
   171d4:	ldr	r1, [fp, #-12]
   171d8:	ldr	r0, [fp, #-8]
   171dc:	bl	16f1c <_start@@Base+0x480c>
   171e0:	str	r0, [fp, #-12]
   171e4:	nop			; (mov r0, r0)
   171e8:	ldr	r3, [fp, #-8]
   171ec:	ldr	r3, [r3, #24]
   171f0:	cmp	r3, #0
   171f4:	beq	1724c <_start@@Base+0x4b3c>
   171f8:	b	17244 <_start@@Base+0x4b34>
   171fc:	ldr	r3, [fp, #-8]
   17200:	ldr	r3, [r3, #8]
   17204:	and	r3, r3, #1
   17208:	cmp	r3, #0
   1720c:	bne	1722c <_start@@Base+0x4b1c>
   17210:	mov	r3, #15
   17214:	ldr	r2, [fp, #-16]
   17218:	ldr	r1, [fp, #-12]
   1721c:	ldr	r0, [fp, #-8]
   17220:	bl	3198c <flatcc_json_parser_set_error@@Base>
   17224:	mov	r3, r0
   17228:	b	1727c <_start@@Base+0x4b6c>
   1722c:	ldr	r2, [fp, #-16]
   17230:	ldr	r1, [fp, #-12]
   17234:	ldr	r0, [fp, #-8]
   17238:	bl	331a0 <flatcc_json_parser_generic_json@@Base>
   1723c:	mov	r3, r0
   17240:	b	1727c <_start@@Base+0x4b6c>
   17244:	ldr	r3, [fp, #-12]
   17248:	b	1727c <_start@@Base+0x4b6c>
   1724c:	ldr	r3, [fp, #4]
   17250:	ldr	r3, [r3]
   17254:	cmp	r3, #0
   17258:	bne	17278 <_start@@Base+0x4b68>
   1725c:	mov	r3, #33	; 0x21
   17260:	ldr	r2, [fp, #-16]
   17264:	ldr	r1, [fp, #-12]
   17268:	ldr	r0, [fp, #-8]
   1726c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   17270:	mov	r3, r0
   17274:	b	1727c <_start@@Base+0x4b6c>
   17278:	ldr	r3, [fp, #-12]
   1727c:	mov	r0, r3
   17280:	sub	sp, fp, #4
   17284:	pop	{fp, pc}
   17288:	push	{fp}		; (str fp, [sp, #-4]!)
   1728c:	add	fp, sp, #0
   17290:	sub	sp, sp, #12
   17294:	mov	r3, r0
   17298:	strb	r3, [fp, #-5]
   1729c:	ldrb	r3, [fp, #-5]
   172a0:	cmp	r3, #0
   172a4:	beq	172b4 <_start@@Base+0x4ba4>
   172a8:	cmp	r3, #1
   172ac:	beq	172bc <_start@@Base+0x4bac>
   172b0:	b	172c4 <_start@@Base+0x4bb4>
   172b4:	mov	r3, #1
   172b8:	b	172c8 <_start@@Base+0x4bb8>
   172bc:	mov	r3, #1
   172c0:	b	172c8 <_start@@Base+0x4bb8>
   172c4:	mov	r3, #0
   172c8:	mov	r0, r3
   172cc:	add	sp, fp, #0
   172d0:	pop	{fp}		; (ldr fp, [sp], #4)
   172d4:	bx	lr
   172d8:	push	{fp, lr}
   172dc:	add	fp, sp, #4
   172e0:	sub	sp, sp, #48	; 0x30
   172e4:	str	r0, [fp, #-32]	; 0xffffffe0
   172e8:	str	r1, [fp, #-36]	; 0xffffffdc
   172ec:	str	r2, [fp, #-40]	; 0xffffffd8
   172f0:	str	r3, [fp, #-44]	; 0xffffffd4
   172f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   172f8:	str	r3, [fp, #-8]
   172fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17300:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17304:	bl	137ec <_start@@Base+0x10dc>
   17308:	strd	r0, [fp, #-20]	; 0xffffffec
   1730c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17310:	add	r1, pc, #400	; 0x190
   17314:	ldrd	r0, [r1]
   17318:	cmp	r3, r1
   1731c:	cmpeq	r2, r0
   17320:	bne	17404 <_start@@Base+0x4cf4>
   17324:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17328:	add	r3, r3, #8
   1732c:	str	r3, [fp, #-36]	; 0xffffffdc
   17330:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17334:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17338:	bl	137ec <_start@@Base+0x10dc>
   1733c:	strd	r0, [fp, #-20]	; 0xffffffec
   17340:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17344:	add	r1, pc, #356	; 0x164
   17348:	ldrd	r0, [r1]
   1734c:	cmp	r3, r1
   17350:	cmpeq	r2, r0
   17354:	bne	173fc <_start@@Base+0x4cec>
   17358:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1735c:	add	r3, r3, #8
   17360:	str	r3, [fp, #-36]	; 0xffffffdc
   17364:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17368:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1736c:	bl	137ec <_start@@Base+0x10dc>
   17370:	strd	r0, [fp, #-20]	; 0xffffffec
   17374:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17378:	mov	r0, #0
   1737c:	mov	r1, #-16777216	; 0xff000000
   17380:	and	r2, r2, r0
   17384:	and	r3, r3, r1
   17388:	cmp	r3, #1694498816	; 0x65000000
   1738c:	cmpeq	r2, #0
   17390:	bne	173f4 <_start@@Base+0x4ce4>
   17394:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17398:	str	r3, [fp, #-24]	; 0xffffffe8
   1739c:	ldr	r3, [fp, #8]
   173a0:	str	r3, [sp]
   173a4:	mov	r3, #1
   173a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   173ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   173b4:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   173b8:	str	r0, [fp, #-36]	; 0xffffffdc
   173bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   173c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   173c4:	cmp	r2, r3
   173c8:	beq	173ec <_start@@Base+0x4cdc>
   173cc:	ldr	r1, [fp, #4]
   173d0:	mov	r2, #1
   173d4:	mov	r3, #0
   173d8:	strd	r2, [r1]
   173dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   173e0:	mov	r2, #0
   173e4:	str	r2, [r3]
   173e8:	b	17494 <_start@@Base+0x4d84>
   173ec:	ldr	r3, [fp, #-8]
   173f0:	b	17498 <_start@@Base+0x4d88>
   173f4:	ldr	r3, [fp, #-8]
   173f8:	b	17498 <_start@@Base+0x4d88>
   173fc:	ldr	r3, [fp, #-8]
   17400:	b	17498 <_start@@Base+0x4d88>
   17404:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17408:	mov	r0, #0
   1740c:	mvn	r1, #0
   17410:	and	r2, r2, r0
   17414:	and	r3, r3, r1
   17418:	add	r1, pc, #152	; 0x98
   1741c:	ldrd	r0, [r1]
   17420:	cmp	r3, r1
   17424:	cmpeq	r2, r0
   17428:	bne	1748c <_start@@Base+0x4d7c>
   1742c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17430:	str	r3, [fp, #-24]	; 0xffffffe8
   17434:	ldr	r3, [fp, #8]
   17438:	str	r3, [sp]
   1743c:	mov	r3, #4
   17440:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17444:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17448:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1744c:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   17450:	str	r0, [fp, #-36]	; 0xffffffdc
   17454:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1745c:	cmp	r2, r3
   17460:	beq	17484 <_start@@Base+0x4d74>
   17464:	ldr	r1, [fp, #4]
   17468:	mov	r2, #0
   1746c:	mov	r3, #0
   17470:	strd	r2, [r1]
   17474:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17478:	mov	r2, #0
   1747c:	str	r2, [r3]
   17480:	b	17494 <_start@@Base+0x4d84>
   17484:	ldr	r3, [fp, #-8]
   17488:	b	17498 <_start@@Base+0x4d88>
   1748c:	ldr	r3, [fp, #-8]
   17490:	b	17498 <_start@@Base+0x4d88>
   17494:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17498:	mov	r0, r3
   1749c:	sub	sp, fp, #4
   174a0:	pop	{fp, pc}
   174a4:	nop			; (mov r0, r0)
   174a8:	rsbvc	r6, r5, #116, 28	; 0x740
   174ac:	stmdbmi	lr!, {r0, r5, r6, ip, lr}^
   174b0:	cmnvc	r0, #-1073741800	; 0xc0000018
   174b4:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   174b8:	andeq	r0, r0, r0
   174bc:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   174c0:	push	{fp, lr}
   174c4:	add	fp, sp, #4
   174c8:	sub	sp, sp, #48	; 0x30
   174cc:	str	r0, [fp, #-32]	; 0xffffffe0
   174d0:	str	r1, [fp, #-36]	; 0xffffffdc
   174d4:	str	r2, [fp, #-40]	; 0xffffffd8
   174d8:	str	r3, [fp, #-44]	; 0xffffffd4
   174dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   174e0:	str	r3, [fp, #-8]
   174e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   174e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   174ec:	bl	137ec <_start@@Base+0x10dc>
   174f0:	strd	r0, [fp, #-20]	; 0xffffffec
   174f4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   174f8:	add	r1, pc, #456	; 0x1c8
   174fc:	ldrd	r0, [r1]
   17500:	cmp	r3, r1
   17504:	cmpeq	r2, r0
   17508:	bhi	1759c <_start@@Base+0x4e8c>
   1750c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17510:	mov	r0, #0
   17514:	mvn	r1, #0
   17518:	and	r2, r2, r0
   1751c:	and	r3, r3, r1
   17520:	add	r1, pc, #424	; 0x1a8
   17524:	ldrd	r0, [r1]
   17528:	cmp	r3, r1
   1752c:	cmpeq	r2, r0
   17530:	bne	17594 <_start@@Base+0x4e84>
   17534:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17538:	str	r3, [fp, #-24]	; 0xffffffe8
   1753c:	ldr	r3, [fp, #8]
   17540:	str	r3, [sp]
   17544:	mov	r3, #4
   17548:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1754c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17550:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17554:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   17558:	str	r0, [fp, #-36]	; 0xffffffdc
   1755c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17560:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17564:	cmp	r2, r3
   17568:	beq	1758c <_start@@Base+0x4e7c>
   1756c:	ldr	r1, [fp, #4]
   17570:	mvn	r2, #11
   17574:	mvn	r3, #0
   17578:	strd	r2, [r1]
   1757c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17580:	mov	r2, #1
   17584:	str	r2, [r3]
   17588:	b	176b4 <_start@@Base+0x4fa4>
   1758c:	ldr	r3, [fp, #-8]
   17590:	b	176b8 <_start@@Base+0x4fa8>
   17594:	ldr	r3, [fp, #-8]
   17598:	b	176b8 <_start@@Base+0x4fa8>
   1759c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   175a0:	mov	r0, #0
   175a4:	mvn	r1, #0
   175a8:	and	r2, r2, r0
   175ac:	and	r3, r3, r1
   175b0:	add	r1, pc, #288	; 0x120
   175b4:	ldrd	r0, [r1]
   175b8:	cmp	r3, r1
   175bc:	cmpeq	r2, r0
   175c0:	bne	17624 <_start@@Base+0x4f14>
   175c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   175c8:	str	r3, [fp, #-24]	; 0xffffffe8
   175cc:	ldr	r3, [fp, #8]
   175d0:	str	r3, [sp]
   175d4:	mov	r3, #4
   175d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   175dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   175e4:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   175e8:	str	r0, [fp, #-36]	; 0xffffffdc
   175ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   175f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   175f4:	cmp	r2, r3
   175f8:	beq	1761c <_start@@Base+0x4f0c>
   175fc:	ldr	r1, [fp, #4]
   17600:	mvn	r2, #9
   17604:	mvn	r3, #0
   17608:	strd	r2, [r1]
   1760c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17610:	mov	r2, #1
   17614:	str	r2, [r3]
   17618:	b	176b4 <_start@@Base+0x4fa4>
   1761c:	ldr	r3, [fp, #-8]
   17620:	b	176b8 <_start@@Base+0x4fa8>
   17624:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17628:	mov	r0, #0
   1762c:	mvn	r1, #0
   17630:	and	r2, r2, r0
   17634:	and	r3, r3, r1
   17638:	add	r1, pc, #160	; 0xa0
   1763c:	ldrd	r0, [r1]
   17640:	cmp	r3, r1
   17644:	cmpeq	r2, r0
   17648:	bne	176ac <_start@@Base+0x4f9c>
   1764c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17650:	str	r3, [fp, #-24]	; 0xffffffe8
   17654:	ldr	r3, [fp, #8]
   17658:	str	r3, [sp]
   1765c:	mov	r3, #4
   17660:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17664:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17668:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1766c:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   17670:	str	r0, [fp, #-36]	; 0xffffffdc
   17674:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17678:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1767c:	cmp	r2, r3
   17680:	beq	176a4 <_start@@Base+0x4f94>
   17684:	ldr	r1, [fp, #4]
   17688:	mvn	r2, #10
   1768c:	mvn	r3, #0
   17690:	strd	r2, [r1]
   17694:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17698:	mov	r2, #1
   1769c:	str	r2, [r3]
   176a0:	b	176b4 <_start@@Base+0x4fa4>
   176a4:	ldr	r3, [fp, #-8]
   176a8:	b	176b8 <_start@@Base+0x4fa8>
   176ac:	ldr	r3, [fp, #-8]
   176b0:	b	176b8 <_start@@Base+0x4fa8>
   176b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   176b8:	mov	r0, r3
   176bc:	sub	sp, fp, #4
   176c0:	pop	{fp, pc}
   176c4:	nop			; (mov r0, r0)
   176c8:			; <UNDEFINED> instruction: 0xffffffff
   176cc:	mcrvs	7, 3, r6, cr5, cr1, {1}
   176d0:	andeq	r0, r0, r0
   176d4:	mcrvs	7, 3, r6, cr5, cr1, {1}
   176d8:	andeq	r0, r0, r0
   176dc:	mcrvs	7, 3, r6, cr5, cr3, {1}
   176e0:	andeq	r0, r0, r0
   176e4:	mcrvs	7, 3, r6, cr5, cr2, {1}
   176e8:	push	{fp, lr}
   176ec:	add	fp, sp, #4
   176f0:	sub	sp, sp, #48	; 0x30
   176f4:	str	r0, [fp, #-32]	; 0xffffffe0
   176f8:	str	r1, [fp, #-36]	; 0xffffffdc
   176fc:	str	r2, [fp, #-40]	; 0xffffffd8
   17700:	str	r3, [fp, #-44]	; 0xffffffd4
   17704:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17708:	str	r3, [fp, #-8]
   1770c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17710:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17714:	bl	137ec <_start@@Base+0x10dc>
   17718:	strd	r0, [fp, #-20]	; 0xffffffec
   1771c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17720:	add	r1, pc, #624	; 0x270
   17724:	ldrd	r0, [r1]
   17728:	cmp	r3, r1
   1772c:	cmpeq	r2, r0
   17730:	bhi	177c4 <_start@@Base+0x50b4>
   17734:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17738:	mov	r0, #0
   1773c:	mvn	r1, #0
   17740:	and	r2, r2, r0
   17744:	and	r3, r3, r1
   17748:	add	r1, pc, #592	; 0x250
   1774c:	ldrd	r0, [r1]
   17750:	cmp	r3, r1
   17754:	cmpeq	r2, r0
   17758:	bne	177bc <_start@@Base+0x50ac>
   1775c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17760:	str	r3, [fp, #-24]	; 0xffffffe8
   17764:	ldr	r3, [fp, #8]
   17768:	str	r3, [sp]
   1776c:	mov	r3, #4
   17770:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17774:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17778:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1777c:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   17780:	str	r0, [fp, #-36]	; 0xffffffdc
   17784:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17788:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1778c:	cmp	r2, r3
   17790:	beq	177b4 <_start@@Base+0x50a4>
   17794:	ldr	r1, [fp, #4]
   17798:	mov	r2, #2
   1779c:	mov	r3, #0
   177a0:	strd	r2, [r1]
   177a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   177a8:	mov	r2, #0
   177ac:	str	r2, [r3]
   177b0:	b	17984 <_start@@Base+0x5274>
   177b4:	ldr	r3, [fp, #-8]
   177b8:	b	17988 <_start@@Base+0x5278>
   177bc:	ldr	r3, [fp, #-8]
   177c0:	b	17988 <_start@@Base+0x5278>
   177c4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   177c8:	add	r1, pc, #472	; 0x1d8
   177cc:	ldrd	r0, [r1]
   177d0:	cmp	r3, r1
   177d4:	cmpeq	r2, r0
   177d8:	bhi	1786c <_start@@Base+0x515c>
   177dc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   177e0:	mov	r0, #0
   177e4:	mvn	r1, #0
   177e8:	and	r2, r2, r0
   177ec:	and	r3, r3, r1
   177f0:	add	r1, pc, #440	; 0x1b8
   177f4:	ldrd	r0, [r1]
   177f8:	cmp	r3, r1
   177fc:	cmpeq	r2, r0
   17800:	bne	17864 <_start@@Base+0x5154>
   17804:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17808:	str	r3, [fp, #-24]	; 0xffffffe8
   1780c:	ldr	r3, [fp, #8]
   17810:	str	r3, [sp]
   17814:	mov	r3, #4
   17818:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1781c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17820:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17824:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   17828:	str	r0, [fp, #-36]	; 0xffffffdc
   1782c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17834:	cmp	r2, r3
   17838:	beq	1785c <_start@@Base+0x514c>
   1783c:	ldr	r1, [fp, #4]
   17840:	mov	r2, #42	; 0x2a
   17844:	mov	r3, #0
   17848:	strd	r2, [r1]
   1784c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17850:	mov	r2, #0
   17854:	str	r2, [r3]
   17858:	b	17984 <_start@@Base+0x5274>
   1785c:	ldr	r3, [fp, #-8]
   17860:	b	17988 <_start@@Base+0x5278>
   17864:	ldr	r3, [fp, #-8]
   17868:	b	17988 <_start@@Base+0x5278>
   1786c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17870:	mvn	r0, #255	; 0xff
   17874:	mvn	r1, #0
   17878:	and	r2, r2, r0
   1787c:	and	r3, r3, r1
   17880:	add	r1, pc, #304	; 0x130
   17884:	ldrd	r0, [r1]
   17888:	cmp	r3, r1
   1788c:	cmpeq	r2, r0
   17890:	bne	178f4 <_start@@Base+0x51e4>
   17894:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17898:	str	r3, [fp, #-24]	; 0xffffffe8
   1789c:	ldr	r3, [fp, #8]
   178a0:	str	r3, [sp]
   178a4:	mov	r3, #7
   178a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   178ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   178b4:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   178b8:	str	r0, [fp, #-36]	; 0xffffffdc
   178bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   178c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178c4:	cmp	r2, r3
   178c8:	beq	178ec <_start@@Base+0x51dc>
   178cc:	ldr	r1, [fp, #4]
   178d0:	mvn	r2, #0
   178d4:	mvn	r3, #0
   178d8:	strd	r2, [r1]
   178dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   178e0:	mov	r2, #1
   178e4:	str	r2, [r3]
   178e8:	b	17984 <_start@@Base+0x5274>
   178ec:	ldr	r3, [fp, #-8]
   178f0:	b	17988 <_start@@Base+0x5278>
   178f4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   178f8:	ldr	r0, [pc, #200]	; 179c8 <_start@@Base+0x52b8>
   178fc:	mvn	r1, #0
   17900:	and	r2, r2, r0
   17904:	and	r3, r3, r1
   17908:	add	r1, pc, #176	; 0xb0
   1790c:	ldrd	r0, [r1]
   17910:	cmp	r3, r1
   17914:	cmpeq	r2, r0
   17918:	bne	1797c <_start@@Base+0x526c>
   1791c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17920:	str	r3, [fp, #-24]	; 0xffffffe8
   17924:	ldr	r3, [fp, #8]
   17928:	str	r3, [sp]
   1792c:	mov	r3, #6
   17930:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17934:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17938:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1793c:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   17940:	str	r0, [fp, #-36]	; 0xffffffdc
   17944:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17948:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1794c:	cmp	r2, r3
   17950:	beq	17974 <_start@@Base+0x5264>
   17954:	ldr	r1, [fp, #4]
   17958:	mvn	r2, #1
   1795c:	mvn	r3, #0
   17960:	strd	r2, [r1]
   17964:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17968:	mov	r2, #1
   1796c:	str	r2, [r3]
   17970:	b	17984 <_start@@Base+0x5274>
   17974:	ldr	r3, [fp, #-8]
   17978:	b	17988 <_start@@Base+0x5278>
   1797c:	ldr	r3, [fp, #-8]
   17980:	b	17988 <_start@@Base+0x5278>
   17984:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17988:	mov	r0, r3
   1798c:	sub	sp, fp, #4
   17990:	pop	{fp, pc}
   17994:	nop			; (mov r0, r0)
   17998:			; <UNDEFINED> instruction: 0xffffffff
   1799c:	stmdbvs	lr!, {r0, r4, r5, sl, ip, sp, lr}^
   179a0:	andeq	r0, r0, r0
   179a4:	stmdbvs	lr!, {r0, r4, r5, sl, ip, sp, lr}^
   179a8:	strbvs	pc, [r6, #-4095]!	; 0xfffff001	; <UNPREDICTABLE>
   179ac:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   179b0:	andeq	r0, r0, r0
   179b4:	stmdbvs	lr!, {r1, r4, r5, sl, ip, sp, lr}^
   179b8:	strbvs	r3, [r7, #-512]!	; 0xfffffe00
   179bc:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   179c0:	strbvs	r0, [r7, #-0]!
   179c4:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   179c8:			; <UNDEFINED> instruction: 0xffff0000
   179cc:	push	{fp, lr}
   179d0:	add	fp, sp, #4
   179d4:	sub	sp, sp, #48	; 0x30
   179d8:	str	r0, [fp, #-32]	; 0xffffffe0
   179dc:	str	r1, [fp, #-36]	; 0xffffffdc
   179e0:	str	r2, [fp, #-40]	; 0xffffffd8
   179e4:	str	r3, [fp, #-44]	; 0xffffffd4
   179e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   179ec:	str	r3, [fp, #-8]
   179f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   179f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   179f8:	bl	137ec <_start@@Base+0x10dc>
   179fc:	strd	r0, [fp, #-20]	; 0xffffffec
   17a00:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17a04:	add	r1, pc, #452	; 0x1c4
   17a08:	ldrd	r0, [r1]
   17a0c:	cmp	r3, r1
   17a10:	cmpeq	r2, r0
   17a14:	bhi	17aa8 <_start@@Base+0x5398>
   17a18:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17a1c:	mov	r0, #0
   17a20:	mvn	r1, #0
   17a24:	and	r2, r2, r0
   17a28:	and	r3, r3, r1
   17a2c:	add	r1, pc, #420	; 0x1a4
   17a30:	ldrd	r0, [r1]
   17a34:	cmp	r3, r1
   17a38:	cmpeq	r2, r0
   17a3c:	bne	17aa0 <_start@@Base+0x5390>
   17a40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17a44:	str	r3, [fp, #-24]	; 0xffffffe8
   17a48:	ldr	r3, [fp, #8]
   17a4c:	str	r3, [sp]
   17a50:	mov	r3, #4
   17a54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17a58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17a60:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   17a64:	str	r0, [fp, #-36]	; 0xffffffdc
   17a68:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17a6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17a70:	cmp	r2, r3
   17a74:	beq	17a98 <_start@@Base+0x5388>
   17a78:	ldr	r1, [fp, #4]
   17a7c:	mov	r2, #3
   17a80:	mov	r3, #0
   17a84:	strd	r2, [r1]
   17a88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17a8c:	mov	r2, #0
   17a90:	str	r2, [r3]
   17a94:	b	17bc0 <_start@@Base+0x54b0>
   17a98:	ldr	r3, [fp, #-8]
   17a9c:	b	17bc4 <_start@@Base+0x54b4>
   17aa0:	ldr	r3, [fp, #-8]
   17aa4:	b	17bc4 <_start@@Base+0x54b4>
   17aa8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17aac:	ldr	r0, [pc, #324]	; 17bf8 <_start@@Base+0x54e8>
   17ab0:	mvn	r1, #0
   17ab4:	and	r2, r2, r0
   17ab8:	and	r3, r3, r1
   17abc:	add	r1, pc, #284	; 0x11c
   17ac0:	ldrd	r0, [r1]
   17ac4:	cmp	r3, r1
   17ac8:	cmpeq	r2, r0
   17acc:	bne	17b30 <_start@@Base+0x5420>
   17ad0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17ad4:	str	r3, [fp, #-24]	; 0xffffffe8
   17ad8:	ldr	r3, [fp, #8]
   17adc:	str	r3, [sp]
   17ae0:	mov	r3, #6
   17ae4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17ae8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17aec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17af0:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   17af4:	str	r0, [fp, #-36]	; 0xffffffdc
   17af8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17afc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b00:	cmp	r2, r3
   17b04:	beq	17b28 <_start@@Base+0x5418>
   17b08:	ldr	r1, [fp, #4]
   17b0c:	mvn	r2, #1
   17b10:	mvn	r3, #0
   17b14:	strd	r2, [r1]
   17b18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17b1c:	mov	r2, #1
   17b20:	str	r2, [r3]
   17b24:	b	17bc0 <_start@@Base+0x54b0>
   17b28:	ldr	r3, [fp, #-8]
   17b2c:	b	17bc4 <_start@@Base+0x54b4>
   17b30:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17b34:	mov	r0, #0
   17b38:	mvn	r1, #0
   17b3c:	and	r2, r2, r0
   17b40:	and	r3, r3, r1
   17b44:	add	r1, pc, #156	; 0x9c
   17b48:	ldrd	r0, [r1]
   17b4c:	cmp	r3, r1
   17b50:	cmpeq	r2, r0
   17b54:	bne	17bb8 <_start@@Base+0x54a8>
   17b58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17b5c:	str	r3, [fp, #-24]	; 0xffffffe8
   17b60:	ldr	r3, [fp, #8]
   17b64:	str	r3, [sp]
   17b68:	mov	r3, #4
   17b6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17b70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17b78:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   17b7c:	str	r0, [fp, #-36]	; 0xffffffdc
   17b80:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17b84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b88:	cmp	r2, r3
   17b8c:	beq	17bb0 <_start@@Base+0x54a0>
   17b90:	ldr	r1, [fp, #4]
   17b94:	add	r3, pc, #84	; 0x54
   17b98:	ldrd	r2, [r3]
   17b9c:	strd	r2, [r1]
   17ba0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17ba4:	mov	r2, #0
   17ba8:	str	r2, [r3]
   17bac:	b	17bc0 <_start@@Base+0x54b0>
   17bb0:	ldr	r3, [fp, #-8]
   17bb4:	b	17bc4 <_start@@Base+0x54b4>
   17bb8:	ldr	r3, [fp, #-8]
   17bbc:	b	17bc4 <_start@@Base+0x54b4>
   17bc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17bc4:	mov	r0, r3
   17bc8:	sub	sp, fp, #4
   17bcc:	pop	{fp, pc}
   17bd0:			; <UNDEFINED> instruction: 0xffffffff
   17bd4:	stmdavs	r5!, {r0, r4, r5, fp, ip, sp, lr}^
   17bd8:	andeq	r0, r0, r0
   17bdc:	stmdavs	r5!, {r0, r4, r5, fp, ip, sp, lr}^
   17be0:	strbvs	r0, [r7, #-0]!
   17be4:	stmdavs	r5!, {r1, r2, r3, r5, r6, fp, ip, sp, lr}^
   17be8:	andeq	r0, r0, r0
   17bec:	stmdavs	r5!, {r1, r4, r5, fp, ip, sp, lr}^
   17bf0:	cdpvc	14, 10, cr11, cr15, cr15, {5}
   17bf4:	andeq	r0, r0, r0
   17bf8:			; <UNDEFINED> instruction: 0xffff0000
   17bfc:	push	{fp, lr}
   17c00:	add	fp, sp, #4
   17c04:	sub	sp, sp, #48	; 0x30
   17c08:	str	r0, [fp, #-32]	; 0xffffffe0
   17c0c:	str	r1, [fp, #-36]	; 0xffffffdc
   17c10:	str	r2, [fp, #-40]	; 0xffffffd8
   17c14:	str	r3, [fp, #-44]	; 0xffffffd4
   17c18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c1c:	str	r3, [fp, #-8]
   17c20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17c24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17c28:	bl	137ec <_start@@Base+0x10dc>
   17c2c:	strd	r0, [fp, #-20]	; 0xffffffec
   17c30:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17c34:	add	r1, pc, #452	; 0x1c4
   17c38:	ldrd	r0, [r1]
   17c3c:	cmp	r3, r1
   17c40:	cmpeq	r2, r0
   17c44:	bhi	17cd8 <_start@@Base+0x55c8>
   17c48:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17c4c:	mov	r0, #0
   17c50:	mvn	r1, #0
   17c54:	and	r2, r2, r0
   17c58:	and	r3, r3, r1
   17c5c:	add	r1, pc, #420	; 0x1a4
   17c60:	ldrd	r0, [r1]
   17c64:	cmp	r3, r1
   17c68:	cmpeq	r2, r0
   17c6c:	bne	17cd0 <_start@@Base+0x55c0>
   17c70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c74:	str	r3, [fp, #-24]	; 0xffffffe8
   17c78:	ldr	r3, [fp, #8]
   17c7c:	str	r3, [sp]
   17c80:	mov	r3, #4
   17c84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17c88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17c90:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   17c94:	str	r0, [fp, #-36]	; 0xffffffdc
   17c98:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17c9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ca0:	cmp	r2, r3
   17ca4:	beq	17cc8 <_start@@Base+0x55b8>
   17ca8:	ldr	r1, [fp, #4]
   17cac:	mov	r2, #8
   17cb0:	mov	r3, #0
   17cb4:	strd	r2, [r1]
   17cb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17cbc:	mov	r2, #0
   17cc0:	str	r2, [r3]
   17cc4:	b	17df0 <_start@@Base+0x56e0>
   17cc8:	ldr	r3, [fp, #-8]
   17ccc:	b	17df4 <_start@@Base+0x56e4>
   17cd0:	ldr	r3, [fp, #-8]
   17cd4:	b	17df4 <_start@@Base+0x56e4>
   17cd8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17cdc:	mov	r0, #0
   17ce0:	mvn	r1, #255	; 0xff
   17ce4:	and	r2, r2, r0
   17ce8:	and	r3, r3, r1
   17cec:	add	r1, pc, #284	; 0x11c
   17cf0:	ldrd	r0, [r1]
   17cf4:	cmp	r3, r1
   17cf8:	cmpeq	r2, r0
   17cfc:	bne	17d60 <_start@@Base+0x5650>
   17d00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17d04:	str	r3, [fp, #-24]	; 0xffffffe8
   17d08:	ldr	r3, [fp, #8]
   17d0c:	str	r3, [sp]
   17d10:	mov	r3, #3
   17d14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17d18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17d20:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   17d24:	str	r0, [fp, #-36]	; 0xffffffdc
   17d28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17d2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d30:	cmp	r2, r3
   17d34:	beq	17d58 <_start@@Base+0x5648>
   17d38:	ldr	r1, [fp, #4]
   17d3c:	mov	r2, #1
   17d40:	mov	r3, #0
   17d44:	strd	r2, [r1]
   17d48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17d4c:	mov	r2, #0
   17d50:	str	r2, [r3]
   17d54:	b	17df0 <_start@@Base+0x56e0>
   17d58:	ldr	r3, [fp, #-8]
   17d5c:	b	17df4 <_start@@Base+0x56e4>
   17d60:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17d64:	mov	r0, #-16777216	; 0xff000000
   17d68:	mvn	r1, #0
   17d6c:	and	r2, r2, r0
   17d70:	and	r3, r3, r1
   17d74:	add	r1, pc, #156	; 0x9c
   17d78:	ldrd	r0, [r1]
   17d7c:	cmp	r3, r1
   17d80:	cmpeq	r2, r0
   17d84:	bne	17de8 <_start@@Base+0x56d8>
   17d88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17d8c:	str	r3, [fp, #-24]	; 0xffffffe8
   17d90:	ldr	r3, [fp, #8]
   17d94:	str	r3, [sp]
   17d98:	mov	r3, #5
   17d9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17da0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17da4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17da8:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   17dac:	str	r0, [fp, #-36]	; 0xffffffdc
   17db0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17db4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17db8:	cmp	r2, r3
   17dbc:	beq	17de0 <_start@@Base+0x56d0>
   17dc0:	ldr	r1, [fp, #4]
   17dc4:	mov	r2, #2
   17dc8:	mov	r3, #0
   17dcc:	strd	r2, [r1]
   17dd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17dd4:	mov	r2, #0
   17dd8:	str	r2, [r3]
   17ddc:	b	17df0 <_start@@Base+0x56e0>
   17de0:	ldr	r3, [fp, #-8]
   17de4:	b	17df4 <_start@@Base+0x56e4>
   17de8:	ldr	r3, [fp, #-8]
   17dec:	b	17df4 <_start@@Base+0x56e4>
   17df0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17df4:	mov	r0, r3
   17df8:	sub	sp, fp, #4
   17dfc:	pop	{fp, pc}
   17e00:	ldclvs	15, cr15, [pc, #1020]!	; 18204 <_start@@Base+0x5af4>
   17e04:	ldrbmi	r6, [r2, -r5, ror #10]!
   17e08:	andeq	r0, r0, r0
   17e0c:	rsbmi	r7, ip, #423624704	; 0x19400000
   17e10:	andeq	r0, r0, r0
   17e14:	rsbpl	r6, r5, #0, 8
   17e18:	cdpvs	0, 0, cr0, cr0, cr0, {0}
   17e1c:	ldrbmi	r6, [r2, -r5, ror #10]!
   17e20:	push	{fp, lr}
   17e24:	add	fp, sp, #4
   17e28:	sub	sp, sp, #16
   17e2c:	str	r0, [fp, #-8]
   17e30:	str	r1, [fp, #-12]
   17e34:	str	r2, [fp, #-16]
   17e38:	strb	r3, [fp, #-17]	; 0xffffffef
   17e3c:	ldr	r3, [fp, #4]
   17e40:	mov	r2, #0
   17e44:	str	r2, [r3]
   17e48:	ldrb	r3, [fp, #-17]	; 0xffffffef
   17e4c:	cmp	r3, #4
   17e50:	addls	pc, pc, r3, lsl #2
   17e54:	b	17ef4 <_start@@Base+0x57e4>
   17e58:	b	17e6c <_start@@Base+0x575c>
   17e5c:	b	17e84 <_start@@Base+0x5774>
   17e60:	b	17ea0 <_start@@Base+0x5790>
   17e64:	b	17ebc <_start@@Base+0x57ac>
   17e68:	b	17ed8 <_start@@Base+0x57c8>
   17e6c:	ldr	r2, [fp, #-16]
   17e70:	ldr	r1, [fp, #-12]
   17e74:	ldr	r0, [fp, #-8]
   17e78:	bl	1455c <_start@@Base+0x1e4c>
   17e7c:	mov	r3, r0
   17e80:	b	17f84 <_start@@Base+0x5874>
   17e84:	ldr	r3, [fp, #4]
   17e88:	ldr	r2, [fp, #-16]
   17e8c:	ldr	r1, [fp, #-12]
   17e90:	ldr	r0, [fp, #-8]
   17e94:	bl	1d0cc <_start@@Base+0xa9bc>
   17e98:	str	r0, [fp, #-12]
   17e9c:	b	17f3c <_start@@Base+0x582c>
   17ea0:	ldr	r3, [fp, #4]
   17ea4:	ldr	r2, [fp, #-16]
   17ea8:	ldr	r1, [fp, #-12]
   17eac:	ldr	r0, [fp, #-8]
   17eb0:	bl	18cc0 <_start@@Base+0x65b0>
   17eb4:	str	r0, [fp, #-12]
   17eb8:	b	17f3c <_start@@Base+0x582c>
   17ebc:	ldr	r3, [fp, #4]
   17ec0:	ldr	r2, [fp, #-16]
   17ec4:	ldr	r1, [fp, #-12]
   17ec8:	ldr	r0, [fp, #-8]
   17ecc:	bl	17048 <_start@@Base+0x4938>
   17ed0:	str	r0, [fp, #-12]
   17ed4:	b	17f3c <_start@@Base+0x582c>
   17ed8:	ldr	r3, [fp, #4]
   17edc:	ldr	r2, [fp, #-16]
   17ee0:	ldr	r1, [fp, #-12]
   17ee4:	ldr	r0, [fp, #-8]
   17ee8:	bl	1ae30 <_start@@Base+0x8720>
   17eec:	str	r0, [fp, #-12]
   17ef0:	b	17f3c <_start@@Base+0x582c>
   17ef4:	ldr	r3, [fp, #-8]
   17ef8:	ldr	r3, [r3, #8]
   17efc:	and	r3, r3, #1
   17f00:	cmp	r3, #0
   17f04:	bne	17f24 <_start@@Base+0x5814>
   17f08:	mov	r3, #15
   17f0c:	ldr	r2, [fp, #-16]
   17f10:	ldr	r1, [fp, #-12]
   17f14:	ldr	r0, [fp, #-8]
   17f18:	bl	3198c <flatcc_json_parser_set_error@@Base>
   17f1c:	mov	r3, r0
   17f20:	b	17f84 <_start@@Base+0x5874>
   17f24:	ldr	r2, [fp, #-16]
   17f28:	ldr	r1, [fp, #-12]
   17f2c:	ldr	r0, [fp, #-8]
   17f30:	bl	331a0 <flatcc_json_parser_generic_json@@Base>
   17f34:	mov	r3, r0
   17f38:	b	17f84 <_start@@Base+0x5874>
   17f3c:	ldr	r3, [fp, #-8]
   17f40:	ldr	r3, [r3, #24]
   17f44:	cmp	r3, #0
   17f48:	beq	17f54 <_start@@Base+0x5844>
   17f4c:	ldr	r3, [fp, #-12]
   17f50:	b	17f84 <_start@@Base+0x5874>
   17f54:	ldr	r3, [fp, #4]
   17f58:	ldr	r3, [r3]
   17f5c:	cmp	r3, #0
   17f60:	bne	17f80 <_start@@Base+0x5870>
   17f64:	mov	r3, #33	; 0x21
   17f68:	ldr	r2, [fp, #-16]
   17f6c:	ldr	r1, [fp, #-12]
   17f70:	ldr	r0, [fp, #-8]
   17f74:	bl	3198c <flatcc_json_parser_set_error@@Base>
   17f78:	mov	r3, r0
   17f7c:	b	17f84 <_start@@Base+0x5874>
   17f80:	ldr	r3, [fp, #-12]
   17f84:	mov	r0, r3
   17f88:	sub	sp, fp, #4
   17f8c:	pop	{fp, pc}
   17f90:	push	{fp}		; (str fp, [sp, #-4]!)
   17f94:	add	fp, sp, #0
   17f98:	sub	sp, sp, #12
   17f9c:	mov	r3, r0
   17fa0:	strb	r3, [fp, #-5]
   17fa4:	ldrb	r3, [fp, #-5]
   17fa8:	cmp	r3, #4
   17fac:	addls	pc, pc, r3, lsl #2
   17fb0:	b	17ff0 <_start@@Base+0x58e0>
   17fb4:	b	17fc8 <_start@@Base+0x58b8>
   17fb8:	b	17fd0 <_start@@Base+0x58c0>
   17fbc:	b	17fd8 <_start@@Base+0x58c8>
   17fc0:	b	17fe0 <_start@@Base+0x58d0>
   17fc4:	b	17fe8 <_start@@Base+0x58d8>
   17fc8:	mov	r3, #1
   17fcc:	b	17ff4 <_start@@Base+0x58e4>
   17fd0:	mov	r3, #1
   17fd4:	b	17ff4 <_start@@Base+0x58e4>
   17fd8:	mov	r3, #1
   17fdc:	b	17ff4 <_start@@Base+0x58e4>
   17fe0:	mov	r3, #1
   17fe4:	b	17ff4 <_start@@Base+0x58e4>
   17fe8:	mov	r3, #1
   17fec:	b	17ff4 <_start@@Base+0x58e4>
   17ff0:	mov	r3, #0
   17ff4:	mov	r0, r3
   17ff8:	add	sp, fp, #0
   17ffc:	pop	{fp}		; (ldr fp, [sp], #4)
   18000:	bx	lr
   18004:	push	{fp, lr}
   18008:	add	fp, sp, #4
   1800c:	sub	sp, sp, #48	; 0x30
   18010:	str	r0, [fp, #-32]	; 0xffffffe0
   18014:	str	r1, [fp, #-36]	; 0xffffffdc
   18018:	str	r2, [fp, #-40]	; 0xffffffd8
   1801c:	str	r3, [fp, #-44]	; 0xffffffd4
   18020:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18024:	str	r3, [fp, #-8]
   18028:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1802c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18030:	bl	137ec <_start@@Base+0x10dc>
   18034:	strd	r0, [fp, #-20]	; 0xffffffec
   18038:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1803c:	add	r1, pc, #836	; 0x344
   18040:	ldrd	r0, [r1]
   18044:	cmp	r3, r1
   18048:	cmpeq	r2, r0
   1804c:	bhi	180e0 <_start@@Base+0x59d0>
   18050:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18054:	mov	r0, #0
   18058:	mvn	r1, #255	; 0xff
   1805c:	and	r2, r2, r0
   18060:	and	r3, r3, r1
   18064:	add	r1, pc, #804	; 0x324
   18068:	ldrd	r0, [r1]
   1806c:	cmp	r3, r1
   18070:	cmpeq	r2, r0
   18074:	bne	180d8 <_start@@Base+0x59c8>
   18078:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1807c:	str	r3, [fp, #-24]	; 0xffffffe8
   18080:	ldr	r3, [fp, #8]
   18084:	str	r3, [sp]
   18088:	mov	r3, #3
   1808c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18090:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18094:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18098:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   1809c:	str	r0, [fp, #-36]	; 0xffffffdc
   180a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   180a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   180a8:	cmp	r2, r3
   180ac:	beq	180d0 <_start@@Base+0x59c0>
   180b0:	ldr	r1, [fp, #4]
   180b4:	mov	r2, #4
   180b8:	mov	r3, #0
   180bc:	strd	r2, [r1]
   180c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   180c4:	mov	r2, #0
   180c8:	str	r2, [r3]
   180cc:	b	18378 <_start@@Base+0x5c68>
   180d0:	ldr	r3, [fp, #-8]
   180d4:	b	1837c <_start@@Base+0x5c6c>
   180d8:	ldr	r3, [fp, #-8]
   180dc:	b	1837c <_start@@Base+0x5c6c>
   180e0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   180e4:	add	r1, pc, #684	; 0x2ac
   180e8:	ldrd	r0, [r1]
   180ec:	cmp	r3, r1
   180f0:	cmpeq	r2, r0
   180f4:	bne	18150 <_start@@Base+0x5a40>
   180f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   180fc:	str	r3, [fp, #-24]	; 0xffffffe8
   18100:	ldr	r3, [fp, #8]
   18104:	str	r3, [sp]
   18108:	mov	r3, #8
   1810c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18110:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18114:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18118:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   1811c:	str	r0, [fp, #-36]	; 0xffffffdc
   18120:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18124:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18128:	cmp	r2, r3
   1812c:	beq	181d0 <_start@@Base+0x5ac0>
   18130:	ldr	r1, [fp, #4]
   18134:	mov	r2, #3
   18138:	mov	r3, #0
   1813c:	strd	r2, [r1]
   18140:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18144:	mov	r2, #0
   18148:	str	r2, [r3]
   1814c:	b	18378 <_start@@Base+0x5c68>
   18150:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18154:	mvn	r0, #255	; 0xff
   18158:	mvn	r1, #0
   1815c:	and	r2, r2, r0
   18160:	and	r3, r3, r1
   18164:	add	r1, pc, #564	; 0x234
   18168:	ldrd	r0, [r1]
   1816c:	cmp	r3, r1
   18170:	cmpeq	r2, r0
   18174:	bne	181d8 <_start@@Base+0x5ac8>
   18178:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1817c:	str	r3, [fp, #-24]	; 0xffffffe8
   18180:	ldr	r3, [fp, #8]
   18184:	str	r3, [sp]
   18188:	mov	r3, #7
   1818c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18194:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18198:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   1819c:	str	r0, [fp, #-36]	; 0xffffffdc
   181a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   181a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   181a8:	cmp	r2, r3
   181ac:	beq	181e0 <_start@@Base+0x5ad0>
   181b0:	ldr	r1, [fp, #4]
   181b4:	mov	r2, #1
   181b8:	mov	r3, #0
   181bc:	strd	r2, [r1]
   181c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   181c4:	mov	r2, #0
   181c8:	str	r2, [r3]
   181cc:	b	18378 <_start@@Base+0x5c68>
   181d0:	nop			; (mov r0, r0)
   181d4:	b	181e4 <_start@@Base+0x5ad4>
   181d8:	nop			; (mov r0, r0)
   181dc:	b	181e4 <_start@@Base+0x5ad4>
   181e0:	nop			; (mov r0, r0)
   181e4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   181e8:	mov	r0, #0
   181ec:	mvn	r1, #0
   181f0:	and	r2, r2, r0
   181f4:	and	r3, r3, r1
   181f8:	add	r1, pc, #424	; 0x1a8
   181fc:	ldrd	r0, [r1]
   18200:	cmp	r3, r1
   18204:	cmpeq	r2, r0
   18208:	bne	18264 <_start@@Base+0x5b54>
   1820c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18210:	str	r3, [fp, #-24]	; 0xffffffe8
   18214:	ldr	r3, [fp, #8]
   18218:	str	r3, [sp]
   1821c:	mov	r3, #4
   18220:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18224:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18228:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1822c:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   18230:	str	r0, [fp, #-36]	; 0xffffffdc
   18234:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1823c:	cmp	r2, r3
   18240:	beq	1826c <_start@@Base+0x5b5c>
   18244:	ldr	r1, [fp, #4]
   18248:	mov	r2, #0
   1824c:	mov	r3, #0
   18250:	strd	r2, [r1]
   18254:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18258:	mov	r2, #0
   1825c:	str	r2, [r3]
   18260:	b	18378 <_start@@Base+0x5c68>
   18264:	nop			; (mov r0, r0)
   18268:	b	18270 <_start@@Base+0x5b60>
   1826c:	nop			; (mov r0, r0)
   18270:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18274:	add	r1, pc, #308	; 0x134
   18278:	ldrd	r0, [r1]
   1827c:	cmp	r3, r1
   18280:	cmpeq	r2, r0
   18284:	bne	18370 <_start@@Base+0x5c60>
   18288:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1828c:	add	r3, r3, #8
   18290:	str	r3, [fp, #-36]	; 0xffffffdc
   18294:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18298:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1829c:	bl	137ec <_start@@Base+0x10dc>
   182a0:	strd	r0, [fp, #-20]	; 0xffffffec
   182a4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   182a8:	add	r1, pc, #264	; 0x108
   182ac:	ldrd	r0, [r1]
   182b0:	cmp	r3, r1
   182b4:	cmpeq	r2, r0
   182b8:	bne	18368 <_start@@Base+0x5c58>
   182bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   182c0:	add	r3, r3, #8
   182c4:	str	r3, [fp, #-36]	; 0xffffffdc
   182c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   182cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   182d0:	bl	137ec <_start@@Base+0x10dc>
   182d4:	strd	r0, [fp, #-20]	; 0xffffffec
   182d8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   182dc:	mvn	r0, #255	; 0xff
   182e0:	mvn	r1, #0
   182e4:	and	r2, r2, r0
   182e8:	and	r3, r3, r1
   182ec:	add	r1, pc, #204	; 0xcc
   182f0:	ldrd	r0, [r1]
   182f4:	cmp	r3, r1
   182f8:	cmpeq	r2, r0
   182fc:	bne	18360 <_start@@Base+0x5c50>
   18300:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18304:	str	r3, [fp, #-24]	; 0xffffffe8
   18308:	ldr	r3, [fp, #8]
   1830c:	str	r3, [sp]
   18310:	mov	r3, #7
   18314:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18318:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1831c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18320:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   18324:	str	r0, [fp, #-36]	; 0xffffffdc
   18328:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1832c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18330:	cmp	r2, r3
   18334:	beq	18358 <_start@@Base+0x5c48>
   18338:	ldr	r1, [fp, #4]
   1833c:	mov	r2, #2
   18340:	mov	r3, #0
   18344:	strd	r2, [r1]
   18348:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1834c:	mov	r2, #0
   18350:	str	r2, [r3]
   18354:	b	18378 <_start@@Base+0x5c68>
   18358:	ldr	r3, [fp, #-8]
   1835c:	b	1837c <_start@@Base+0x5c6c>
   18360:	ldr	r3, [fp, #-8]
   18364:	b	1837c <_start@@Base+0x5c6c>
   18368:	ldr	r3, [fp, #-8]
   1836c:	b	1837c <_start@@Base+0x5c6c>
   18370:	ldr	r3, [fp, #-8]
   18374:	b	1837c <_start@@Base+0x5c6c>
   18378:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1837c:	mov	r0, r3
   18380:	sub	sp, fp, #4
   18384:	pop	{fp, pc}
   18388:	strbtvc	r7, [r5], #-511	; 0xfffffe01
   1838c:	stclmi	14, cr6, [pc, #-460]!	; 181c8 <_start@@Base+0x5ab8>
   18390:	andeq	r0, r0, r0
   18394:	cmnmi	ip, r0, lsl #8
   18398:	strbtvc	r7, [r5], #-562	; 0xfffffdce
   1839c:	stclmi	14, cr6, [pc, #-460]!	; 181d8 <_start@@Base+0x5ac8>
   183a0:	strbtvc	r7, [r5], #-512	; 0xfffffe00
   183a4:	stclmi	14, cr6, [pc, #-460]!	; 181e0 <_start@@Base+0x5ad0>
   183a8:	andeq	r0, r0, r0
   183ac:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   183b0:	cmnpl	r9, #112, 26	; 0x1c00
   183b4:	strbtpl	r7, [r5], #-884	; 0xfffffc8c
   183b8:	rsbvs	r6, ip, #364904448	; 0x15c00000
   183bc:	cfstrdvs	mvd5, [r5], #-388	; 0xfffffe7c
   183c0:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   183c4:	ldmdbvs	r4!, {r0, r2, r6, fp, sp, lr}^
   183c8:	push	{fp, lr}
   183cc:	add	fp, sp, #4
   183d0:	sub	sp, sp, #48	; 0x30
   183d4:	str	r0, [fp, #-32]	; 0xffffffe0
   183d8:	str	r1, [fp, #-36]	; 0xffffffdc
   183dc:	str	r2, [fp, #-40]	; 0xffffffd8
   183e0:	str	r3, [fp, #-44]	; 0xffffffd4
   183e4:	sub	r3, fp, #24
   183e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   183ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   183f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   183f4:	bl	13918 <_start@@Base+0x1208>
   183f8:	str	r0, [fp, #-36]	; 0xffffffdc
   183fc:	b	18664 <_start@@Base+0x5f54>
   18400:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18404:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18408:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1840c:	bl	13508 <_start@@Base+0xdf8>
   18410:	str	r0, [fp, #-36]	; 0xffffffdc
   18414:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18418:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1841c:	bl	137ec <_start@@Base+0x10dc>
   18420:	strd	r0, [fp, #-12]
   18424:	ldrd	r2, [fp, #-12]
   18428:	mov	r0, #0
   1842c:	mov	r1, #-16777216	; 0xff000000
   18430:	and	r2, r2, r0
   18434:	and	r3, r3, r1
   18438:	cmp	r3, #1644167168	; 0x62000000
   1843c:	cmpeq	r2, #0
   18440:	bne	18530 <_start@@Base+0x5e20>
   18444:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18448:	str	r3, [fp, #-16]
   1844c:	mov	r3, #1
   18450:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18454:	ldr	r1, [fp, #-16]
   18458:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1845c:	bl	13db8 <_start@@Base+0x16a8>
   18460:	str	r0, [fp, #-36]	; 0xffffffdc
   18464:	ldr	r2, [fp, #-16]
   18468:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1846c:	cmp	r2, r3
   18470:	beq	18518 <_start@@Base+0x5e08>
   18474:	mov	r3, #0
   18478:	strb	r3, [fp, #-25]	; 0xffffffe7
   1847c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18480:	add	r3, r3, #2
   18484:	str	r3, [fp, #-20]	; 0xffffffec
   18488:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1848c:	str	r3, [fp, #-16]
   18490:	sub	r3, fp, #25
   18494:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18498:	ldr	r1, [fp, #-16]
   1849c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   184a0:	bl	14b98 <_start@@Base+0x2488>
   184a4:	str	r0, [fp, #-36]	; 0xffffffdc
   184a8:	ldr	r2, [fp, #-16]
   184ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   184b0:	cmp	r2, r3
   184b4:	bne	18504 <_start@@Base+0x5df4>
   184b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   184bc:	str	r3, [fp, #-16]
   184c0:	sub	r3, fp, #25
   184c4:	str	r3, [sp]
   184c8:	ldr	r3, [pc, #460]	; 1869c <_start@@Base+0x5f8c>
   184cc:	add	r3, pc, r3
   184d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   184d4:	ldr	r1, [fp, #-16]
   184d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   184dc:	bl	15a40 <_start@@Base+0x3330>
   184e0:	str	r0, [fp, #-36]	; 0xffffffdc
   184e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   184e8:	ldr	r3, [fp, #-16]
   184ec:	cmp	r2, r3
   184f0:	beq	18678 <_start@@Base+0x5f68>
   184f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   184f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   184fc:	cmp	r2, r3
   18500:	beq	18678 <_start@@Base+0x5f68>
   18504:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   18508:	mov	r1, r3
   1850c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18510:	bl	12a40 <_start@@Base+0x330>
   18514:	b	1864c <_start@@Base+0x5f3c>
   18518:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1851c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18520:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18524:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   18528:	str	r0, [fp, #-36]	; 0xffffffdc
   1852c:	b	1864c <_start@@Base+0x5f3c>
   18530:	ldrd	r2, [fp, #-12]
   18534:	mov	r0, #0
   18538:	mov	r1, #-16777216	; 0xff000000
   1853c:	and	r2, r2, r0
   18540:	and	r3, r3, r1
   18544:	cmp	r3, #1627389952	; 0x61000000
   18548:	cmpeq	r2, #0
   1854c:	bne	18638 <_start@@Base+0x5f28>
   18550:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18554:	str	r3, [fp, #-16]
   18558:	mov	r3, #1
   1855c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18560:	ldr	r1, [fp, #-16]
   18564:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18568:	bl	13db8 <_start@@Base+0x16a8>
   1856c:	str	r0, [fp, #-36]	; 0xffffffdc
   18570:	ldr	r2, [fp, #-16]
   18574:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18578:	cmp	r2, r3
   1857c:	beq	18620 <_start@@Base+0x5f10>
   18580:	mov	r3, #0
   18584:	strh	r3, [fp, #-28]	; 0xffffffe4
   18588:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1858c:	str	r3, [fp, #-20]	; 0xffffffec
   18590:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18594:	str	r3, [fp, #-16]
   18598:	sub	r3, fp, #28
   1859c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   185a0:	ldr	r1, [fp, #-16]
   185a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   185a8:	bl	14ac8 <_start@@Base+0x23b8>
   185ac:	str	r0, [fp, #-36]	; 0xffffffdc
   185b0:	ldr	r2, [fp, #-16]
   185b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   185b8:	cmp	r2, r3
   185bc:	bne	1860c <_start@@Base+0x5efc>
   185c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   185c4:	str	r3, [fp, #-16]
   185c8:	sub	r3, fp, #28
   185cc:	str	r3, [sp]
   185d0:	ldr	r3, [pc, #200]	; 186a0 <_start@@Base+0x5f90>
   185d4:	add	r3, pc, r3
   185d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   185dc:	ldr	r1, [fp, #-16]
   185e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   185e4:	bl	15864 <_start@@Base+0x3154>
   185e8:	str	r0, [fp, #-36]	; 0xffffffdc
   185ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   185f0:	ldr	r3, [fp, #-16]
   185f4:	cmp	r2, r3
   185f8:	beq	18678 <_start@@Base+0x5f68>
   185fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18600:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18604:	cmp	r2, r3
   18608:	beq	18678 <_start@@Base+0x5f68>
   1860c:	ldrsh	r3, [fp, #-28]	; 0xffffffe4
   18610:	mov	r1, r3
   18614:	ldr	r0, [fp, #-20]	; 0xffffffec
   18618:	bl	12b00 <_start@@Base+0x3f0>
   1861c:	b	1864c <_start@@Base+0x5f3c>
   18620:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18624:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18628:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1862c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   18630:	str	r0, [fp, #-36]	; 0xffffffdc
   18634:	b	1864c <_start@@Base+0x5f3c>
   18638:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1863c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18640:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18644:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   18648:	str	r0, [fp, #-36]	; 0xffffffdc
   1864c:	sub	r3, fp, #24
   18650:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18654:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18658:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1865c:	bl	13a00 <_start@@Base+0x12f0>
   18660:	str	r0, [fp, #-36]	; 0xffffffdc
   18664:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18668:	cmp	r3, #0
   1866c:	bne	18400 <_start@@Base+0x5cf0>
   18670:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18674:	b	18690 <_start@@Base+0x5f80>
   18678:	mov	r3, #33	; 0x21
   1867c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18680:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18684:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18688:	bl	3198c <flatcc_json_parser_set_error@@Base>
   1868c:	mov	r3, r0
   18690:	mov	r0, r3
   18694:	sub	sp, fp, #4
   18698:	pop	{fp, pc}
   1869c:	ldrdeq	pc, [r2], -r0
   186a0:	ldrdeq	pc, [r2], -r4
   186a4:	push	{fp, lr}
   186a8:	add	fp, sp, #4
   186ac:	sub	sp, sp, #24
   186b0:	str	r0, [fp, #-16]
   186b4:	str	r1, [fp, #-20]	; 0xffffffec
   186b8:	str	r2, [fp, #-24]	; 0xffffffe8
   186bc:	str	r3, [fp, #-28]	; 0xffffffe4
   186c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   186c4:	mov	r2, #0
   186c8:	str	r2, [r3]
   186cc:	ldr	r3, [fp, #-16]
   186d0:	ldr	r3, [r3]
   186d4:	mov	r2, #2
   186d8:	mov	r1, #4
   186dc:	mov	r0, r3
   186e0:	bl	27e50 <flatcc_builder_start_struct@@Base>
   186e4:	str	r0, [fp, #-8]
   186e8:	ldr	r3, [fp, #-8]
   186ec:	cmp	r3, #0
   186f0:	beq	18750 <_start@@Base+0x6040>
   186f4:	ldr	r3, [fp, #-8]
   186f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   186fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   18700:	ldr	r0, [fp, #-16]
   18704:	bl	183c8 <_start@@Base+0x5cb8>
   18708:	str	r0, [fp, #-20]	; 0xffffffec
   1870c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18714:	cmp	r2, r3
   18718:	beq	18754 <_start@@Base+0x6044>
   1871c:	ldr	r3, [fp, #-16]
   18720:	ldr	r3, [r3]
   18724:	mov	r0, r3
   18728:	bl	27ef0 <flatcc_builder_end_struct@@Base>
   1872c:	mov	r2, r0
   18730:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18734:	str	r2, [r3]
   18738:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1873c:	ldr	r3, [r3]
   18740:	cmp	r3, #0
   18744:	beq	18754 <_start@@Base+0x6044>
   18748:	ldr	r3, [fp, #-20]	; 0xffffffec
   1874c:	b	1876c <_start@@Base+0x605c>
   18750:	nop			; (mov r0, r0)
   18754:	mov	r3, #33	; 0x21
   18758:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1875c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18760:	ldr	r0, [fp, #-16]
   18764:	bl	3198c <flatcc_json_parser_set_error@@Base>
   18768:	mov	r3, r0
   1876c:	mov	r0, r3
   18770:	sub	sp, fp, #4
   18774:	pop	{fp, pc}
   18778:	push	{fp, lr}
   1877c:	add	fp, sp, #4
   18780:	sub	sp, sp, #24
   18784:	str	r0, [fp, #-16]
   18788:	str	r1, [fp, #-20]	; 0xffffffec
   1878c:	str	r2, [fp, #-24]	; 0xffffffe8
   18790:	str	r3, [fp, #-28]	; 0xffffffe4
   18794:	sub	r3, fp, #8
   18798:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1879c:	ldr	r1, [fp, #-20]	; 0xffffffec
   187a0:	ldr	r0, [fp, #-16]
   187a4:	bl	13918 <_start@@Base+0x1208>
   187a8:	str	r0, [fp, #-20]	; 0xffffffec
   187ac:	b	187dc <_start@@Base+0x60cc>
   187b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   187b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   187b8:	ldr	r0, [fp, #-16]
   187bc:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   187c0:	str	r0, [fp, #-20]	; 0xffffffec
   187c4:	sub	r3, fp, #8
   187c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   187cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   187d0:	ldr	r0, [fp, #-16]
   187d4:	bl	13a00 <_start@@Base+0x12f0>
   187d8:	str	r0, [fp, #-20]	; 0xffffffec
   187dc:	ldr	r3, [fp, #-8]
   187e0:	cmp	r3, #0
   187e4:	bne	187b0 <_start@@Base+0x60a0>
   187e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   187ec:	mov	r0, r3
   187f0:	sub	sp, fp, #4
   187f4:	pop	{fp, pc}
   187f8:	push	{fp, lr}
   187fc:	add	fp, sp, #4
   18800:	sub	sp, sp, #24
   18804:	str	r0, [fp, #-16]
   18808:	str	r1, [fp, #-20]	; 0xffffffec
   1880c:	str	r2, [fp, #-24]	; 0xffffffe8
   18810:	str	r3, [fp, #-28]	; 0xffffffe4
   18814:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18818:	mov	r2, #0
   1881c:	str	r2, [r3]
   18820:	ldr	r3, [fp, #-16]
   18824:	ldr	r3, [r3]
   18828:	mov	r2, #1
   1882c:	mov	r1, #0
   18830:	mov	r0, r3
   18834:	bl	27e50 <flatcc_builder_start_struct@@Base>
   18838:	str	r0, [fp, #-8]
   1883c:	ldr	r3, [fp, #-8]
   18840:	cmp	r3, #0
   18844:	beq	188a4 <_start@@Base+0x6194>
   18848:	ldr	r3, [fp, #-8]
   1884c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18850:	ldr	r1, [fp, #-20]	; 0xffffffec
   18854:	ldr	r0, [fp, #-16]
   18858:	bl	18778 <_start@@Base+0x6068>
   1885c:	str	r0, [fp, #-20]	; 0xffffffec
   18860:	ldr	r2, [fp, #-20]	; 0xffffffec
   18864:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18868:	cmp	r2, r3
   1886c:	beq	188a8 <_start@@Base+0x6198>
   18870:	ldr	r3, [fp, #-16]
   18874:	ldr	r3, [r3]
   18878:	mov	r0, r3
   1887c:	bl	27ef0 <flatcc_builder_end_struct@@Base>
   18880:	mov	r2, r0
   18884:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18888:	str	r2, [r3]
   1888c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18890:	ldr	r3, [r3]
   18894:	cmp	r3, #0
   18898:	beq	188a8 <_start@@Base+0x6198>
   1889c:	ldr	r3, [fp, #-20]	; 0xffffffec
   188a0:	b	188c0 <_start@@Base+0x61b0>
   188a4:	nop			; (mov r0, r0)
   188a8:	mov	r3, #33	; 0x21
   188ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   188b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   188b4:	ldr	r0, [fp, #-16]
   188b8:	bl	3198c <flatcc_json_parser_set_error@@Base>
   188bc:	mov	r3, r0
   188c0:	mov	r0, r3
   188c4:	sub	sp, fp, #4
   188c8:	pop	{fp, pc}
   188cc:	push	{fp, lr}
   188d0:	add	fp, sp, #4
   188d4:	sub	sp, sp, #24
   188d8:	str	r0, [fp, #-16]
   188dc:	str	r1, [fp, #-20]	; 0xffffffec
   188e0:	str	r2, [fp, #-24]	; 0xffffffe8
   188e4:	str	r3, [fp, #-28]	; 0xffffffe4
   188e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   188ec:	mov	r2, #0
   188f0:	str	r2, [r3]
   188f4:	ldr	r3, [fp, #-16]
   188f8:	ldr	r3, [r3]
   188fc:	mov	r1, #0
   18900:	mov	r0, r3
   18904:	bl	28be4 <flatcc_builder_start_table@@Base>
   18908:	mov	r3, r0
   1890c:	cmp	r3, #0
   18910:	bne	189c0 <_start@@Base+0x62b0>
   18914:	sub	r3, fp, #8
   18918:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1891c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18920:	ldr	r0, [fp, #-16]
   18924:	bl	13918 <_start@@Base+0x1208>
   18928:	str	r0, [fp, #-20]	; 0xffffffec
   1892c:	b	18970 <_start@@Base+0x6260>
   18930:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18934:	ldr	r1, [fp, #-20]	; 0xffffffec
   18938:	ldr	r0, [fp, #-16]
   1893c:	bl	13508 <_start@@Base+0xdf8>
   18940:	str	r0, [fp, #-20]	; 0xffffffec
   18944:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18948:	ldr	r1, [fp, #-20]	; 0xffffffec
   1894c:	ldr	r0, [fp, #-16]
   18950:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   18954:	str	r0, [fp, #-20]	; 0xffffffec
   18958:	sub	r3, fp, #8
   1895c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18960:	ldr	r1, [fp, #-20]	; 0xffffffec
   18964:	ldr	r0, [fp, #-16]
   18968:	bl	13a00 <_start@@Base+0x12f0>
   1896c:	str	r0, [fp, #-20]	; 0xffffffec
   18970:	ldr	r3, [fp, #-8]
   18974:	cmp	r3, #0
   18978:	bne	18930 <_start@@Base+0x6220>
   1897c:	ldr	r3, [fp, #-16]
   18980:	ldr	r3, [r3, #24]
   18984:	cmp	r3, #0
   18988:	bne	189c8 <_start@@Base+0x62b8>
   1898c:	ldr	r3, [fp, #-16]
   18990:	ldr	r3, [r3]
   18994:	mov	r0, r3
   18998:	bl	29748 <flatcc_builder_end_table@@Base>
   1899c:	mov	r2, r0
   189a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   189a4:	str	r2, [r3]
   189a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   189ac:	ldr	r3, [r3]
   189b0:	cmp	r3, #0
   189b4:	beq	189d0 <_start@@Base+0x62c0>
   189b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   189bc:	b	189ec <_start@@Base+0x62dc>
   189c0:	nop			; (mov r0, r0)
   189c4:	b	189d4 <_start@@Base+0x62c4>
   189c8:	nop			; (mov r0, r0)
   189cc:	b	189d4 <_start@@Base+0x62c4>
   189d0:	nop			; (mov r0, r0)
   189d4:	mov	r3, #33	; 0x21
   189d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   189dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   189e0:	ldr	r0, [fp, #-16]
   189e4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   189e8:	mov	r3, r0
   189ec:	mov	r0, r3
   189f0:	sub	sp, fp, #4
   189f4:	pop	{fp, pc}
   189f8:	push	{fp, lr}
   189fc:	add	fp, sp, #4
   18a00:	sub	sp, sp, #40	; 0x28
   18a04:	str	r0, [fp, #-32]	; 0xffffffe0
   18a08:	str	r1, [fp, #-36]	; 0xffffffdc
   18a0c:	str	r2, [fp, #-40]	; 0xffffffd8
   18a10:	str	r3, [fp, #-44]	; 0xffffffd4
   18a14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18a18:	mov	r2, #0
   18a1c:	str	r2, [r3]
   18a20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18a24:	ldr	r3, [r3]
   18a28:	mov	r1, #1
   18a2c:	mov	r0, r3
   18a30:	bl	28be4 <flatcc_builder_start_table@@Base>
   18a34:	mov	r3, r0
   18a38:	cmp	r3, #0
   18a3c:	bne	18bb0 <_start@@Base+0x64a0>
   18a40:	sub	r3, fp, #24
   18a44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18a48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18a4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18a50:	bl	13918 <_start@@Base+0x1208>
   18a54:	str	r0, [fp, #-36]	; 0xffffffdc
   18a58:	b	18b60 <_start@@Base+0x6450>
   18a5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18a60:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18a64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18a68:	bl	13508 <_start@@Base+0xdf8>
   18a6c:	str	r0, [fp, #-36]	; 0xffffffdc
   18a70:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18a74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18a78:	bl	137ec <_start@@Base+0x10dc>
   18a7c:	strd	r0, [fp, #-12]
   18a80:	ldrd	r2, [fp, #-12]
   18a84:	mov	r0, #-16777216	; 0xff000000
   18a88:	mvn	r1, #0
   18a8c:	and	r2, r2, r0
   18a90:	and	r3, r3, r1
   18a94:	add	r1, pc, #340	; 0x154
   18a98:	ldrd	r0, [r1]
   18a9c:	cmp	r3, r1
   18aa0:	cmpeq	r2, r0
   18aa4:	bne	18b34 <_start@@Base+0x6424>
   18aa8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18aac:	str	r3, [fp, #-16]
   18ab0:	mov	r3, #5
   18ab4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18ab8:	ldr	r1, [fp, #-16]
   18abc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ac0:	bl	13db8 <_start@@Base+0x16a8>
   18ac4:	str	r0, [fp, #-36]	; 0xffffffdc
   18ac8:	ldr	r2, [fp, #-16]
   18acc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18ad0:	cmp	r2, r3
   18ad4:	beq	18b1c <_start@@Base+0x640c>
   18ad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18adc:	ldr	r0, [r3]
   18ae0:	mov	r3, #1
   18ae4:	mov	r2, #0
   18ae8:	mov	r1, #0
   18aec:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   18af0:	str	r0, [fp, #-20]	; 0xffffffec
   18af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18af8:	cmp	r3, #0
   18afc:	beq	18bb8 <_start@@Base+0x64a8>
   18b00:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18b08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18b0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18b10:	bl	18778 <_start@@Base+0x6068>
   18b14:	str	r0, [fp, #-36]	; 0xffffffdc
   18b18:	b	18b48 <_start@@Base+0x6438>
   18b1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18b20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18b24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18b28:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   18b2c:	str	r0, [fp, #-36]	; 0xffffffdc
   18b30:	b	18b48 <_start@@Base+0x6438>
   18b34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18b38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18b3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18b40:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   18b44:	str	r0, [fp, #-36]	; 0xffffffdc
   18b48:	sub	r3, fp, #24
   18b4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18b50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18b54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18b58:	bl	13a00 <_start@@Base+0x12f0>
   18b5c:	str	r0, [fp, #-36]	; 0xffffffdc
   18b60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b64:	cmp	r3, #0
   18b68:	bne	18a5c <_start@@Base+0x634c>
   18b6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18b70:	ldr	r3, [r3, #24]
   18b74:	cmp	r3, #0
   18b78:	bne	18bc0 <_start@@Base+0x64b0>
   18b7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18b80:	ldr	r3, [r3]
   18b84:	mov	r0, r3
   18b88:	bl	29748 <flatcc_builder_end_table@@Base>
   18b8c:	mov	r2, r0
   18b90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18b94:	str	r2, [r3]
   18b98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18b9c:	ldr	r3, [r3]
   18ba0:	cmp	r3, #0
   18ba4:	beq	18bc8 <_start@@Base+0x64b8>
   18ba8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18bac:	b	18be4 <_start@@Base+0x64d4>
   18bb0:	nop			; (mov r0, r0)
   18bb4:	b	18bcc <_start@@Base+0x64bc>
   18bb8:	nop			; (mov r0, r0)
   18bbc:	b	18bcc <_start@@Base+0x64bc>
   18bc0:	nop			; (mov r0, r0)
   18bc4:	b	18bcc <_start@@Base+0x64bc>
   18bc8:	nop			; (mov r0, r0)
   18bcc:	mov	r3, #33	; 0x21
   18bd0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18bd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18bdc:	bl	3198c <flatcc_json_parser_set_error@@Base>
   18be0:	mov	r3, r0
   18be4:	mov	r0, r3
   18be8:	sub	sp, fp, #4
   18bec:	pop	{fp, pc}
   18bf0:	stmdbvc	r0, {}	; <UNPREDICTABLE>
   18bf4:	strbvs	r7, [sp, #-116]!	; 0xffffff8c
   18bf8:	push	{fp, lr}
   18bfc:	add	fp, sp, #4
   18c00:	sub	sp, sp, #48	; 0x30
   18c04:	str	r0, [fp, #-32]	; 0xffffffe0
   18c08:	str	r1, [fp, #-36]	; 0xffffffdc
   18c0c:	str	r2, [fp, #-40]	; 0xffffffd8
   18c10:	str	r3, [fp, #-44]	; 0xffffffd4
   18c14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18c18:	str	r3, [fp, #-8]
   18c1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18c20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18c24:	bl	137ec <_start@@Base+0x10dc>
   18c28:	strd	r0, [fp, #-20]	; 0xffffffec
   18c2c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18c30:	mov	r0, #0
   18c34:	mov	r1, #-16777216	; 0xff000000
   18c38:	and	r2, r2, r0
   18c3c:	and	r3, r3, r1
   18c40:	cmp	r3, #2013265920	; 0x78000000
   18c44:	cmpeq	r2, #0
   18c48:	bne	18cb0 <_start@@Base+0x65a0>
   18c4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18c50:	str	r3, [fp, #-24]	; 0xffffffe8
   18c54:	ldr	r3, [fp, #8]
   18c58:	str	r3, [sp]
   18c5c:	mov	r3, #1
   18c60:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18c64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c6c:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   18c70:	str	r0, [fp, #-36]	; 0xffffffdc
   18c74:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18c78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c7c:	cmp	r2, r3
   18c80:	beq	18ca8 <_start@@Base+0x6598>
   18c84:	ldr	r1, [fp, #4]
   18c88:	mov	r2, #0
   18c8c:	mov	r3, #0
   18c90:	strd	r2, [r1]
   18c94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18c98:	mov	r2, #0
   18c9c:	str	r2, [r3]
   18ca0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18ca4:	b	18cb4 <_start@@Base+0x65a4>
   18ca8:	ldr	r3, [fp, #-8]
   18cac:	b	18cb4 <_start@@Base+0x65a4>
   18cb0:	ldr	r3, [fp, #-8]
   18cb4:	mov	r0, r3
   18cb8:	sub	sp, fp, #4
   18cbc:	pop	{fp, pc}
   18cc0:	push	{fp, lr}
   18cc4:	add	fp, sp, #4
   18cc8:	sub	sp, sp, #48	; 0x30
   18ccc:	str	r0, [fp, #-32]	; 0xffffffe0
   18cd0:	str	r1, [fp, #-36]	; 0xffffffdc
   18cd4:	str	r2, [fp, #-40]	; 0xffffffd8
   18cd8:	str	r3, [fp, #-44]	; 0xffffffd4
   18cdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18ce0:	mov	r2, #0
   18ce4:	str	r2, [r3]
   18ce8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18cec:	ldr	r3, [r3]
   18cf0:	mov	r1, #4
   18cf4:	mov	r0, r3
   18cf8:	bl	28be4 <flatcc_builder_start_table@@Base>
   18cfc:	mov	r3, r0
   18d00:	cmp	r3, #0
   18d04:	bne	19324 <_start@@Base+0x6c14>
   18d08:	sub	r3, fp, #24
   18d0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18d10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18d14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d18:	bl	13918 <_start@@Base+0x1208>
   18d1c:	str	r0, [fp, #-36]	; 0xffffffdc
   18d20:	b	192d4 <_start@@Base+0x6bc4>
   18d24:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18d28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18d2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d30:	bl	13508 <_start@@Base+0xdf8>
   18d34:	str	r0, [fp, #-36]	; 0xffffffdc
   18d38:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18d3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18d40:	bl	137ec <_start@@Base+0x10dc>
   18d44:	strd	r0, [fp, #-12]
   18d48:	ldrd	r2, [fp, #-12]
   18d4c:	ldr	r0, [pc, #1008]	; 19144 <_start@@Base+0x6a34>
   18d50:	mvn	r1, #0
   18d54:	and	r2, r2, r0
   18d58:	and	r3, r3, r1
   18d5c:	add	r1, pc, #956	; 0x3bc
   18d60:	ldrd	r0, [r1]
   18d64:	cmp	r3, r1
   18d68:	cmpeq	r2, r0
   18d6c:	bne	18e80 <_start@@Base+0x6770>
   18d70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18d74:	str	r3, [fp, #-16]
   18d78:	mov	r3, #6
   18d7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18d80:	ldr	r1, [fp, #-16]
   18d84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d88:	bl	13db8 <_start@@Base+0x16a8>
   18d8c:	str	r0, [fp, #-36]	; 0xffffffdc
   18d90:	ldr	r2, [fp, #-16]
   18d94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18d98:	cmp	r2, r3
   18d9c:	beq	18fb8 <_start@@Base+0x68a8>
   18da0:	mov	r3, #0
   18da4:	strb	r3, [fp, #-25]	; 0xffffffe7
   18da8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18dac:	str	r3, [fp, #-16]
   18db0:	sub	r3, fp, #25
   18db4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18db8:	ldr	r1, [fp, #-16]
   18dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18dc0:	bl	14b98 <_start@@Base+0x2488>
   18dc4:	str	r0, [fp, #-36]	; 0xffffffdc
   18dc8:	ldr	r2, [fp, #-16]
   18dcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18dd0:	cmp	r2, r3
   18dd4:	bne	18e24 <_start@@Base+0x6714>
   18dd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18ddc:	str	r3, [fp, #-16]
   18de0:	sub	r3, fp, #25
   18de4:	str	r3, [sp]
   18de8:	ldr	r3, [pc, #840]	; 19138 <_start@@Base+0x6a28>
   18dec:	add	r3, pc, r3
   18df0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18df4:	ldr	r1, [fp, #-16]
   18df8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18dfc:	bl	15a40 <_start@@Base+0x3330>
   18e00:	str	r0, [fp, #-36]	; 0xffffffdc
   18e04:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18e08:	ldr	r3, [fp, #-16]
   18e0c:	cmp	r2, r3
   18e10:	beq	19358 <_start@@Base+0x6c48>
   18e14:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18e18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18e1c:	cmp	r2, r3
   18e20:	beq	19358 <_start@@Base+0x6c48>
   18e24:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   18e28:	cmp	r3, #2
   18e2c:	bne	18e44 <_start@@Base+0x6734>
   18e30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e34:	ldr	r3, [r3, #8]
   18e38:	and	r3, r3, #2
   18e3c:	cmp	r3, #0
   18e40:	beq	192b8 <_start@@Base+0x6ba8>
   18e44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e48:	ldr	r0, [r3]
   18e4c:	mov	r3, #1
   18e50:	mov	r2, #1
   18e54:	mov	r1, #1
   18e58:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   18e5c:	str	r0, [fp, #-20]	; 0xffffffec
   18e60:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e64:	cmp	r3, #0
   18e68:	beq	1932c <_start@@Base+0x6c1c>
   18e6c:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   18e70:	mov	r1, r3
   18e74:	ldr	r0, [fp, #-20]	; 0xffffffec
   18e78:	bl	12a40 <_start@@Base+0x330>
   18e7c:	b	192b8 <_start@@Base+0x6ba8>
   18e80:	ldrd	r2, [fp, #-12]
   18e84:	mov	r0, #-16777216	; 0xff000000
   18e88:	mvn	r1, #0
   18e8c:	and	r2, r2, r0
   18e90:	and	r3, r3, r1
   18e94:	add	r1, pc, #652	; 0x28c
   18e98:	ldrd	r0, [r1]
   18e9c:	cmp	r3, r1
   18ea0:	cmpeq	r2, r0
   18ea4:	bne	18fc0 <_start@@Base+0x68b0>
   18ea8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18eac:	str	r3, [fp, #-16]
   18eb0:	mov	r3, #5
   18eb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18eb8:	ldr	r1, [fp, #-16]
   18ebc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ec0:	bl	13db8 <_start@@Base+0x16a8>
   18ec4:	str	r0, [fp, #-36]	; 0xffffffdc
   18ec8:	ldr	r2, [fp, #-16]
   18ecc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18ed0:	cmp	r2, r3
   18ed4:	beq	18fc8 <_start@@Base+0x68b8>
   18ed8:	mov	r3, #0
   18edc:	strb	r3, [fp, #-26]	; 0xffffffe6
   18ee0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18ee4:	str	r3, [fp, #-16]
   18ee8:	sub	r3, fp, #26
   18eec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18ef0:	ldr	r1, [fp, #-16]
   18ef4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ef8:	bl	14b98 <_start@@Base+0x2488>
   18efc:	str	r0, [fp, #-36]	; 0xffffffdc
   18f00:	ldr	r2, [fp, #-16]
   18f04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18f08:	cmp	r2, r3
   18f0c:	bne	18f5c <_start@@Base+0x684c>
   18f10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18f14:	str	r3, [fp, #-16]
   18f18:	sub	r3, fp, #26
   18f1c:	str	r3, [sp]
   18f20:	ldr	r3, [pc, #532]	; 1913c <_start@@Base+0x6a2c>
   18f24:	add	r3, pc, r3
   18f28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18f2c:	ldr	r1, [fp, #-16]
   18f30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18f34:	bl	15a40 <_start@@Base+0x3330>
   18f38:	str	r0, [fp, #-36]	; 0xffffffdc
   18f3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18f40:	ldr	r3, [fp, #-16]
   18f44:	cmp	r2, r3
   18f48:	beq	19358 <_start@@Base+0x6c48>
   18f4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18f50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18f54:	cmp	r2, r3
   18f58:	beq	19358 <_start@@Base+0x6c48>
   18f5c:	ldrsb	r3, [fp, #-26]	; 0xffffffe6
   18f60:	cmp	r3, #2
   18f64:	bne	18f7c <_start@@Base+0x686c>
   18f68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f6c:	ldr	r3, [r3, #8]
   18f70:	and	r3, r3, #2
   18f74:	cmp	r3, #0
   18f78:	beq	192b8 <_start@@Base+0x6ba8>
   18f7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f80:	ldr	r0, [r3]
   18f84:	mov	r3, #1
   18f88:	mov	r2, #1
   18f8c:	mov	r1, #0
   18f90:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   18f94:	str	r0, [fp, #-20]	; 0xffffffec
   18f98:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f9c:	cmp	r3, #0
   18fa0:	beq	19334 <_start@@Base+0x6c24>
   18fa4:	ldrsb	r3, [fp, #-26]	; 0xffffffe6
   18fa8:	mov	r1, r3
   18fac:	ldr	r0, [fp, #-20]	; 0xffffffec
   18fb0:	bl	12a40 <_start@@Base+0x330>
   18fb4:	b	192b8 <_start@@Base+0x6ba8>
   18fb8:	nop			; (mov r0, r0)
   18fbc:	b	18fcc <_start@@Base+0x68bc>
   18fc0:	nop			; (mov r0, r0)
   18fc4:	b	18fcc <_start@@Base+0x68bc>
   18fc8:	nop			; (mov r0, r0)
   18fcc:	ldrd	r2, [fp, #-12]
   18fd0:	mov	r0, #0
   18fd4:	mvn	r1, #255	; 0xff
   18fd8:	and	r2, r2, r0
   18fdc:	and	r3, r3, r1
   18fe0:	add	r1, pc, #328	; 0x148
   18fe4:	ldrd	r0, [r1]
   18fe8:	cmp	r3, r1
   18fec:	cmpeq	r2, r0
   18ff0:	bne	19150 <_start@@Base+0x6a40>
   18ff4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18ff8:	str	r3, [fp, #-16]
   18ffc:	mov	r3, #3
   19000:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19004:	ldr	r1, [fp, #-16]
   19008:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1900c:	bl	13db8 <_start@@Base+0x16a8>
   19010:	str	r0, [fp, #-36]	; 0xffffffdc
   19014:	ldr	r2, [fp, #-16]
   19018:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1901c:	cmp	r2, r3
   19020:	beq	19104 <_start@@Base+0x69f4>
   19024:	mov	r3, #0
   19028:	strb	r3, [fp, #-27]	; 0xffffffe5
   1902c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19030:	str	r3, [fp, #-16]
   19034:	sub	r3, fp, #27
   19038:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1903c:	ldr	r1, [fp, #-16]
   19040:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19044:	bl	14854 <_start@@Base+0x2144>
   19048:	str	r0, [fp, #-36]	; 0xffffffdc
   1904c:	ldr	r2, [fp, #-16]
   19050:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19054:	cmp	r2, r3
   19058:	bne	190a8 <_start@@Base+0x6998>
   1905c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19060:	str	r3, [fp, #-16]
   19064:	sub	r3, fp, #27
   19068:	str	r3, [sp]
   1906c:	ldr	r3, [pc, #204]	; 19140 <_start@@Base+0x6a30>
   19070:	add	r3, pc, r3
   19074:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19078:	ldr	r1, [fp, #-16]
   1907c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19080:	bl	152f0 <_start@@Base+0x2be0>
   19084:	str	r0, [fp, #-36]	; 0xffffffdc
   19088:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1908c:	ldr	r3, [fp, #-16]
   19090:	cmp	r2, r3
   19094:	beq	19358 <_start@@Base+0x6c48>
   19098:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1909c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   190a0:	cmp	r2, r3
   190a4:	beq	19358 <_start@@Base+0x6c48>
   190a8:	ldrb	r3, [fp, #-27]	; 0xffffffe5
   190ac:	cmp	r3, #2
   190b0:	bne	190c8 <_start@@Base+0x69b8>
   190b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   190b8:	ldr	r3, [r3, #8]
   190bc:	and	r3, r3, #2
   190c0:	cmp	r3, #0
   190c4:	beq	192bc <_start@@Base+0x6bac>
   190c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   190cc:	ldr	r0, [r3]
   190d0:	mov	r3, #1
   190d4:	mov	r2, #1
   190d8:	mov	r1, #3
   190dc:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   190e0:	str	r0, [fp, #-20]	; 0xffffffec
   190e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   190e8:	cmp	r3, #0
   190ec:	beq	1933c <_start@@Base+0x6c2c>
   190f0:	ldrb	r3, [fp, #-27]	; 0xffffffe5
   190f4:	mov	r1, r3
   190f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   190fc:	bl	12860 <_start@@Base+0x150>
   19100:	b	192bc <_start@@Base+0x6bac>
   19104:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19108:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1910c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19110:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   19114:	str	r0, [fp, #-36]	; 0xffffffdc
   19118:	b	192bc <_start@@Base+0x6bac>
   1911c:	nop			; (mov r0, r0)
   19120:	eorsvc	r0, r2, #0
   19124:	cmnvs	pc, #28416	; 0x6f00
   19128:	andvc	r0, r0, #0
   1912c:	cmnvs	pc, #28416	; 0x6f00
   19130:	andeq	r0, r0, r0
   19134:	strbvc	r3, [r3, #-512]!	; 0xfffffe00
   19138:	andeq	pc, r2, r8, asr #5
   1913c:	andeq	pc, r2, r0, lsr #3
   19140:	andeq	pc, r2, r4, rrx
   19144:			; <UNDEFINED> instruction: 0xffff0000
   19148:	strbvc	r0, [r3, #-0]!
   1914c:	andeq	lr, r2, ip, ror #29
   19150:	ldrd	r2, [fp, #-12]
   19154:	mov	r0, #0
   19158:	ldr	r1, [pc, #-28]	; 19144 <_start@@Base+0x6a34>
   1915c:	and	r2, r2, r0
   19160:	and	r3, r3, r1
   19164:	mov	r0, #0
   19168:	ldr	r1, [pc, #-40]	; 19148 <_start@@Base+0x6a38>
   1916c:	cmp	r3, r1
   19170:	cmpeq	r2, r0
   19174:	bne	192a0 <_start@@Base+0x6b90>
   19178:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1917c:	str	r3, [fp, #-16]
   19180:	mov	r3, #2
   19184:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19188:	ldr	r1, [fp, #-16]
   1918c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19190:	bl	13db8 <_start@@Base+0x16a8>
   19194:	str	r0, [fp, #-36]	; 0xffffffdc
   19198:	ldr	r2, [fp, #-16]
   1919c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   191a0:	cmp	r2, r3
   191a4:	beq	19288 <_start@@Base+0x6b78>
   191a8:	mov	r3, #0
   191ac:	strb	r3, [fp, #-28]	; 0xffffffe4
   191b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   191b4:	str	r3, [fp, #-16]
   191b8:	sub	r3, fp, #28
   191bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   191c0:	ldr	r1, [fp, #-16]
   191c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   191c8:	bl	14854 <_start@@Base+0x2144>
   191cc:	str	r0, [fp, #-36]	; 0xffffffdc
   191d0:	ldr	r2, [fp, #-16]
   191d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   191d8:	cmp	r2, r3
   191dc:	bne	1922c <_start@@Base+0x6b1c>
   191e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   191e4:	str	r3, [fp, #-16]
   191e8:	sub	r3, fp, #28
   191ec:	str	r3, [sp]
   191f0:	ldr	r3, [pc, #-172]	; 1914c <_start@@Base+0x6a3c>
   191f4:	add	r3, pc, r3
   191f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   191fc:	ldr	r1, [fp, #-16]
   19200:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19204:	bl	152f0 <_start@@Base+0x2be0>
   19208:	str	r0, [fp, #-36]	; 0xffffffdc
   1920c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19210:	ldr	r3, [fp, #-16]
   19214:	cmp	r2, r3
   19218:	beq	19358 <_start@@Base+0x6c48>
   1921c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19220:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19224:	cmp	r2, r3
   19228:	beq	19358 <_start@@Base+0x6c48>
   1922c:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   19230:	cmp	r3, #2
   19234:	bne	1924c <_start@@Base+0x6b3c>
   19238:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1923c:	ldr	r3, [r3, #8]
   19240:	and	r3, r3, #2
   19244:	cmp	r3, #0
   19248:	beq	192bc <_start@@Base+0x6bac>
   1924c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19250:	ldr	r0, [r3]
   19254:	mov	r3, #1
   19258:	mov	r2, #1
   1925c:	mov	r1, #2
   19260:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   19264:	str	r0, [fp, #-20]	; 0xffffffec
   19268:	ldr	r3, [fp, #-20]	; 0xffffffec
   1926c:	cmp	r3, #0
   19270:	beq	19344 <_start@@Base+0x6c34>
   19274:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   19278:	mov	r1, r3
   1927c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19280:	bl	12860 <_start@@Base+0x150>
   19284:	b	192bc <_start@@Base+0x6bac>
   19288:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1928c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19290:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19294:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   19298:	str	r0, [fp, #-36]	; 0xffffffdc
   1929c:	b	192bc <_start@@Base+0x6bac>
   192a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   192a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   192a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   192ac:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   192b0:	str	r0, [fp, #-36]	; 0xffffffdc
   192b4:	b	192bc <_start@@Base+0x6bac>
   192b8:	nop			; (mov r0, r0)
   192bc:	sub	r3, fp, #24
   192c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   192c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   192c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   192cc:	bl	13a00 <_start@@Base+0x12f0>
   192d0:	str	r0, [fp, #-36]	; 0xffffffdc
   192d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192d8:	cmp	r3, #0
   192dc:	bne	18d24 <_start@@Base+0x6614>
   192e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   192e4:	ldr	r3, [r3, #24]
   192e8:	cmp	r3, #0
   192ec:	bne	1934c <_start@@Base+0x6c3c>
   192f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   192f4:	ldr	r3, [r3]
   192f8:	mov	r0, r3
   192fc:	bl	29748 <flatcc_builder_end_table@@Base>
   19300:	mov	r2, r0
   19304:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19308:	str	r2, [r3]
   1930c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19310:	ldr	r3, [r3]
   19314:	cmp	r3, #0
   19318:	beq	19354 <_start@@Base+0x6c44>
   1931c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19320:	b	19370 <_start@@Base+0x6c60>
   19324:	nop			; (mov r0, r0)
   19328:	b	19358 <_start@@Base+0x6c48>
   1932c:	nop			; (mov r0, r0)
   19330:	b	19358 <_start@@Base+0x6c48>
   19334:	nop			; (mov r0, r0)
   19338:	b	19358 <_start@@Base+0x6c48>
   1933c:	nop			; (mov r0, r0)
   19340:	b	19358 <_start@@Base+0x6c48>
   19344:	nop			; (mov r0, r0)
   19348:	b	19358 <_start@@Base+0x6c48>
   1934c:	nop			; (mov r0, r0)
   19350:	b	19358 <_start@@Base+0x6c48>
   19354:	nop			; (mov r0, r0)
   19358:	mov	r3, #33	; 0x21
   1935c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19360:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19364:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19368:	bl	3198c <flatcc_json_parser_set_error@@Base>
   1936c:	mov	r3, r0
   19370:	mov	r0, r3
   19374:	sub	sp, fp, #4
   19378:	pop	{fp, pc}
   1937c:	push	{fp, lr}
   19380:	add	fp, sp, #4
   19384:	sub	sp, sp, #88	; 0x58
   19388:	str	r0, [fp, #-72]	; 0xffffffb8
   1938c:	str	r1, [fp, #-76]	; 0xffffffb4
   19390:	str	r2, [fp, #-80]	; 0xffffffb0
   19394:	str	r3, [fp, #-84]	; 0xffffffac
   19398:	ldr	r3, [fp, #-84]	; 0xffffffac
   1939c:	mov	r2, #0
   193a0:	str	r2, [r3]
   193a4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   193a8:	ldr	r3, [r3]
   193ac:	mov	r1, #6
   193b0:	mov	r0, r3
   193b4:	bl	28be4 <flatcc_builder_start_table@@Base>
   193b8:	mov	r3, r0
   193bc:	cmp	r3, #0
   193c0:	bne	19cac <_start@@Base+0x759c>
   193c4:	sub	r3, fp, #24
   193c8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   193cc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   193d0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   193d4:	bl	13918 <_start@@Base+0x1208>
   193d8:	str	r0, [fp, #-76]	; 0xffffffb4
   193dc:	b	19c5c <_start@@Base+0x754c>
   193e0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   193e4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   193e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   193ec:	bl	13508 <_start@@Base+0xdf8>
   193f0:	str	r0, [fp, #-76]	; 0xffffffb4
   193f4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   193f8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   193fc:	bl	137ec <_start@@Base+0x10dc>
   19400:	strd	r0, [fp, #-12]
   19404:	ldrd	r2, [fp, #-12]
   19408:	add	r1, pc, #936	; 0x3a8
   1940c:	ldrd	r0, [r1]
   19410:	cmp	r3, r1
   19414:	cmpeq	r2, r0
   19418:	bhi	194e8 <_start@@Base+0x6dd8>
   1941c:	ldrd	r2, [fp, #-12]
   19420:	ldr	r0, [pc, #952]	; 197e0 <_start@@Base+0x70d0>
   19424:	mvn	r1, #0
   19428:	and	r2, r2, r0
   1942c:	and	r3, r3, r1
   19430:	add	r1, pc, #904	; 0x388
   19434:	ldrd	r0, [r1]
   19438:	cmp	r3, r1
   1943c:	cmpeq	r2, r0
   19440:	bne	194d0 <_start@@Base+0x6dc0>
   19444:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19448:	str	r3, [fp, #-16]
   1944c:	mov	r3, #6
   19450:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19454:	ldr	r1, [fp, #-16]
   19458:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1945c:	bl	13db8 <_start@@Base+0x16a8>
   19460:	str	r0, [fp, #-76]	; 0xffffffb4
   19464:	ldr	r2, [fp, #-16]
   19468:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1946c:	cmp	r2, r3
   19470:	beq	194b8 <_start@@Base+0x6da8>
   19474:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19478:	ldr	r0, [r3]
   1947c:	mov	r3, #1
   19480:	mov	r2, #0
   19484:	mov	r1, #0
   19488:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1948c:	str	r0, [fp, #-20]	; 0xffffffec
   19490:	ldr	r3, [fp, #-20]	; 0xffffffec
   19494:	cmp	r3, #0
   19498:	beq	19cb4 <_start@@Base+0x75a4>
   1949c:	ldr	r3, [fp, #-20]	; 0xffffffec
   194a0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   194a4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   194a8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   194ac:	bl	16dc8 <_start@@Base+0x46b8>
   194b0:	str	r0, [fp, #-76]	; 0xffffffb4
   194b4:	b	19c44 <_start@@Base+0x7534>
   194b8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   194bc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   194c0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   194c4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   194c8:	str	r0, [fp, #-76]	; 0xffffffb4
   194cc:	b	19c44 <_start@@Base+0x7534>
   194d0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   194d4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   194d8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   194dc:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   194e0:	str	r0, [fp, #-76]	; 0xffffffb4
   194e4:	b	19c44 <_start@@Base+0x7534>
   194e8:	ldrd	r2, [fp, #-12]
   194ec:	add	r1, pc, #724	; 0x2d4
   194f0:	ldrd	r0, [r1]
   194f4:	cmp	r3, r1
   194f8:	cmpeq	r2, r0
   194fc:	bhi	197ec <_start@@Base+0x70dc>
   19500:	ldrd	r2, [fp, #-12]
   19504:	mvn	r0, #255	; 0xff
   19508:	mvn	r1, #0
   1950c:	and	r2, r2, r0
   19510:	and	r3, r3, r1
   19514:	add	r1, pc, #692	; 0x2b4
   19518:	ldrd	r0, [r1]
   1951c:	cmp	r3, r1
   19520:	cmpeq	r2, r0
   19524:	bne	19650 <_start@@Base+0x6f40>
   19528:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1952c:	str	r3, [fp, #-16]
   19530:	mov	r3, #7
   19534:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19538:	ldr	r1, [fp, #-16]
   1953c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19540:	bl	13db8 <_start@@Base+0x16a8>
   19544:	str	r0, [fp, #-76]	; 0xffffffb4
   19548:	ldr	r2, [fp, #-16]
   1954c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19550:	cmp	r2, r3
   19554:	beq	19638 <_start@@Base+0x6f28>
   19558:	mov	r2, #0
   1955c:	mov	r3, #0
   19560:	strd	r2, [fp, #-36]	; 0xffffffdc
   19564:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19568:	str	r3, [fp, #-16]
   1956c:	sub	r3, fp, #36	; 0x24
   19570:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19574:	ldr	r1, [fp, #-16]
   19578:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1957c:	bl	14924 <_start@@Base+0x2214>
   19580:	str	r0, [fp, #-76]	; 0xffffffb4
   19584:	ldr	r2, [fp, #-16]
   19588:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1958c:	cmp	r2, r3
   19590:	bne	195e0 <_start@@Base+0x6ed0>
   19594:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19598:	str	r3, [fp, #-16]
   1959c:	sub	r3, fp, #36	; 0x24
   195a0:	str	r3, [sp]
   195a4:	ldr	r3, [pc, #568]	; 197e4 <_start@@Base+0x70d4>
   195a8:	add	r3, pc, r3
   195ac:	ldr	r2, [fp, #-80]	; 0xffffffb0
   195b0:	ldr	r1, [fp, #-16]
   195b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   195b8:	bl	154c0 <_start@@Base+0x2db0>
   195bc:	str	r0, [fp, #-76]	; 0xffffffb4
   195c0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   195c4:	ldr	r3, [fp, #-16]
   195c8:	cmp	r2, r3
   195cc:	beq	19cf0 <_start@@Base+0x75e0>
   195d0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   195d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   195d8:	cmp	r2, r3
   195dc:	beq	19cf0 <_start@@Base+0x75e0>
   195e0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   195e4:	orrs	r3, r2, r3
   195e8:	bne	19600 <_start@@Base+0x6ef0>
   195ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   195f0:	ldr	r3, [r3, #8]
   195f4:	and	r3, r3, #2
   195f8:	cmp	r3, #0
   195fc:	beq	19c44 <_start@@Base+0x7534>
   19600:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19604:	ldr	r0, [r3]
   19608:	mov	r3, #8
   1960c:	mov	r2, #8
   19610:	mov	r1, #2
   19614:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   19618:	str	r0, [fp, #-20]	; 0xffffffec
   1961c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19620:	cmp	r3, #0
   19624:	beq	19cbc <_start@@Base+0x75ac>
   19628:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1962c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19630:	bl	12bc0 <_start@@Base+0x4b0>
   19634:	b	19c44 <_start@@Base+0x7534>
   19638:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1963c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   19640:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19644:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   19648:	str	r0, [fp, #-76]	; 0xffffffb4
   1964c:	b	19c44 <_start@@Base+0x7534>
   19650:	ldrd	r2, [fp, #-12]
   19654:	ldr	r0, [pc, #388]	; 197e0 <_start@@Base+0x70d0>
   19658:	mvn	r1, #0
   1965c:	and	r2, r2, r0
   19660:	and	r3, r3, r1
   19664:	add	r1, pc, #364	; 0x16c
   19668:	ldrd	r0, [r1]
   1966c:	cmp	r3, r1
   19670:	cmpeq	r2, r0
   19674:	bne	197a0 <_start@@Base+0x7090>
   19678:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1967c:	str	r3, [fp, #-16]
   19680:	mov	r3, #6
   19684:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19688:	ldr	r1, [fp, #-16]
   1968c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19690:	bl	13db8 <_start@@Base+0x16a8>
   19694:	str	r0, [fp, #-76]	; 0xffffffb4
   19698:	ldr	r2, [fp, #-16]
   1969c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   196a0:	cmp	r2, r3
   196a4:	beq	19788 <_start@@Base+0x7078>
   196a8:	mov	r2, #0
   196ac:	mov	r3, #0
   196b0:	strd	r2, [fp, #-44]	; 0xffffffd4
   196b4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   196b8:	str	r3, [fp, #-16]
   196bc:	sub	r3, fp, #44	; 0x2c
   196c0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   196c4:	ldr	r1, [fp, #-16]
   196c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   196cc:	bl	14924 <_start@@Base+0x2214>
   196d0:	str	r0, [fp, #-76]	; 0xffffffb4
   196d4:	ldr	r2, [fp, #-16]
   196d8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   196dc:	cmp	r2, r3
   196e0:	bne	19730 <_start@@Base+0x7020>
   196e4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   196e8:	str	r3, [fp, #-16]
   196ec:	sub	r3, fp, #44	; 0x2c
   196f0:	str	r3, [sp]
   196f4:	ldr	r3, [pc, #236]	; 197e8 <_start@@Base+0x70d8>
   196f8:	add	r3, pc, r3
   196fc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19700:	ldr	r1, [fp, #-16]
   19704:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19708:	bl	154c0 <_start@@Base+0x2db0>
   1970c:	str	r0, [fp, #-76]	; 0xffffffb4
   19710:	ldr	r2, [fp, #-76]	; 0xffffffb4
   19714:	ldr	r3, [fp, #-16]
   19718:	cmp	r2, r3
   1971c:	beq	19cf0 <_start@@Base+0x75e0>
   19720:	ldr	r2, [fp, #-76]	; 0xffffffb4
   19724:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19728:	cmp	r2, r3
   1972c:	beq	19cf0 <_start@@Base+0x75e0>
   19730:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19734:	orrs	r3, r2, r3
   19738:	bne	19750 <_start@@Base+0x7040>
   1973c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19740:	ldr	r3, [r3, #8]
   19744:	and	r3, r3, #2
   19748:	cmp	r3, #0
   1974c:	beq	19c44 <_start@@Base+0x7534>
   19750:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19754:	ldr	r0, [r3]
   19758:	mov	r3, #8
   1975c:	mov	r2, #8
   19760:	mov	r1, #1
   19764:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   19768:	str	r0, [fp, #-20]	; 0xffffffec
   1976c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19770:	cmp	r3, #0
   19774:	beq	19cc4 <_start@@Base+0x75b4>
   19778:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1977c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19780:	bl	12bc0 <_start@@Base+0x4b0>
   19784:	b	19c44 <_start@@Base+0x7534>
   19788:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1978c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   19790:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19794:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   19798:	str	r0, [fp, #-76]	; 0xffffffb4
   1979c:	b	19c44 <_start@@Base+0x7534>
   197a0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   197a4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   197a8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   197ac:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   197b0:	str	r0, [fp, #-76]	; 0xffffffb4
   197b4:	b	19c44 <_start@@Base+0x7534>
   197b8:	strdvs	pc, [fp, #-255]!	; 0xffffff01
   197bc:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   197c0:	cmnvs	ip, r0
   197c4:	strbvs	r6, [ip, -r2, ror #30]!
   197c8:	strdvs	r3, [ip, #-47]!	; 0xffffffd1
   197cc:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   197d0:	cmnvs	ip, r0, lsl #4
   197d4:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   197d8:	cmnvs	ip, r0
   197dc:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   197e0:			; <UNDEFINED> instruction: 0xffff0000
   197e4:	andeq	lr, r2, r4, asr #22
   197e8:	andeq	lr, r2, r4, lsl #20
   197ec:	ldrd	r2, [fp, #-12]
   197f0:	add	r1, pc, #712	; 0x2c8
   197f4:	ldrd	r0, [r1]
   197f8:	cmp	r3, r1
   197fc:	cmpeq	r2, r0
   19800:	bhi	1996c <_start@@Base+0x725c>
   19804:	ldrd	r2, [fp, #-12]
   19808:	mvn	r0, #255	; 0xff
   1980c:	mvn	r1, #0
   19810:	and	r2, r2, r0
   19814:	and	r3, r3, r1
   19818:	add	r1, pc, #680	; 0x2a8
   1981c:	ldrd	r0, [r1]
   19820:	cmp	r3, r1
   19824:	cmpeq	r2, r0
   19828:	bne	19954 <_start@@Base+0x7244>
   1982c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19830:	str	r3, [fp, #-16]
   19834:	mov	r3, #7
   19838:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1983c:	ldr	r1, [fp, #-16]
   19840:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19844:	bl	13db8 <_start@@Base+0x16a8>
   19848:	str	r0, [fp, #-76]	; 0xffffffb4
   1984c:	ldr	r2, [fp, #-16]
   19850:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19854:	cmp	r2, r3
   19858:	beq	1993c <_start@@Base+0x722c>
   1985c:	mov	r3, #0
   19860:	str	r3, [fp, #-48]	; 0xffffffd0
   19864:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19868:	str	r3, [fp, #-16]
   1986c:	sub	r3, fp, #48	; 0x30
   19870:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19874:	ldr	r1, [fp, #-16]
   19878:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1987c:	bl	149f8 <_start@@Base+0x22e8>
   19880:	str	r0, [fp, #-76]	; 0xffffffb4
   19884:	ldr	r2, [fp, #-16]
   19888:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1988c:	cmp	r2, r3
   19890:	bne	198e0 <_start@@Base+0x71d0>
   19894:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19898:	str	r3, [fp, #-16]
   1989c:	sub	r3, fp, #48	; 0x30
   198a0:	str	r3, [sp]
   198a4:	ldr	r3, [pc, #556]	; 19ad8 <_start@@Base+0x73c8>
   198a8:	add	r3, pc, r3
   198ac:	ldr	r2, [fp, #-80]	; 0xffffffb0
   198b0:	ldr	r1, [fp, #-16]
   198b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   198b8:	bl	15698 <_start@@Base+0x2f88>
   198bc:	str	r0, [fp, #-76]	; 0xffffffb4
   198c0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   198c4:	ldr	r3, [fp, #-16]
   198c8:	cmp	r2, r3
   198cc:	beq	19cf0 <_start@@Base+0x75e0>
   198d0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   198d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   198d8:	cmp	r2, r3
   198dc:	beq	19cf0 <_start@@Base+0x75e0>
   198e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   198e4:	cmp	r3, #0
   198e8:	bne	19900 <_start@@Base+0x71f0>
   198ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   198f0:	ldr	r3, [r3, #8]
   198f4:	and	r3, r3, #2
   198f8:	cmp	r3, #0
   198fc:	beq	19c44 <_start@@Base+0x7534>
   19900:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19904:	ldr	r0, [r3]
   19908:	mov	r3, #4
   1990c:	mov	r2, #4
   19910:	mov	r1, #3
   19914:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   19918:	str	r0, [fp, #-20]	; 0xffffffec
   1991c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19920:	cmp	r3, #0
   19924:	beq	19ccc <_start@@Base+0x75bc>
   19928:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1992c:	mov	r1, r3
   19930:	ldr	r0, [fp, #-20]	; 0xffffffec
   19934:	bl	12b64 <_start@@Base+0x454>
   19938:	b	19c44 <_start@@Base+0x7534>
   1993c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19940:	ldr	r1, [fp, #-76]	; 0xffffffb4
   19944:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19948:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1994c:	str	r0, [fp, #-76]	; 0xffffffb4
   19950:	b	19c44 <_start@@Base+0x7534>
   19954:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19958:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1995c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19960:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   19964:	str	r0, [fp, #-76]	; 0xffffffb4
   19968:	b	19c44 <_start@@Base+0x7534>
   1996c:	ldrd	r2, [fp, #-12]
   19970:	mvn	r0, #255	; 0xff
   19974:	mvn	r1, #0
   19978:	and	r2, r2, r0
   1997c:	and	r3, r3, r1
   19980:	add	r1, pc, #328	; 0x148
   19984:	ldrd	r0, [r1]
   19988:	cmp	r3, r1
   1998c:	cmpeq	r2, r0
   19990:	bne	19ae0 <_start@@Base+0x73d0>
   19994:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19998:	str	r3, [fp, #-16]
   1999c:	mov	r3, #7
   199a0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   199a4:	ldr	r1, [fp, #-16]
   199a8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   199ac:	bl	13db8 <_start@@Base+0x16a8>
   199b0:	str	r0, [fp, #-76]	; 0xffffffb4
   199b4:	ldr	r2, [fp, #-16]
   199b8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   199bc:	cmp	r2, r3
   199c0:	beq	19aa4 <_start@@Base+0x7394>
   199c4:	mov	r2, #0
   199c8:	mov	r3, #0
   199cc:	strd	r2, [fp, #-60]	; 0xffffffc4
   199d0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   199d4:	str	r3, [fp, #-16]
   199d8:	sub	r3, fp, #60	; 0x3c
   199dc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   199e0:	ldr	r1, [fp, #-16]
   199e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   199e8:	bl	14924 <_start@@Base+0x2214>
   199ec:	str	r0, [fp, #-76]	; 0xffffffb4
   199f0:	ldr	r2, [fp, #-16]
   199f4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   199f8:	cmp	r2, r3
   199fc:	bne	19a4c <_start@@Base+0x733c>
   19a00:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19a04:	str	r3, [fp, #-16]
   19a08:	sub	r3, fp, #60	; 0x3c
   19a0c:	str	r3, [sp]
   19a10:	ldr	r3, [pc, #196]	; 19adc <_start@@Base+0x73cc>
   19a14:	add	r3, pc, r3
   19a18:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19a1c:	ldr	r1, [fp, #-16]
   19a20:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19a24:	bl	154c0 <_start@@Base+0x2db0>
   19a28:	str	r0, [fp, #-76]	; 0xffffffb4
   19a2c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   19a30:	ldr	r3, [fp, #-16]
   19a34:	cmp	r2, r3
   19a38:	beq	19cf0 <_start@@Base+0x75e0>
   19a3c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   19a40:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19a44:	cmp	r2, r3
   19a48:	beq	19cf0 <_start@@Base+0x75e0>
   19a4c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   19a50:	orrs	r3, r2, r3
   19a54:	bne	19a6c <_start@@Base+0x735c>
   19a58:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19a5c:	ldr	r3, [r3, #8]
   19a60:	and	r3, r3, #2
   19a64:	cmp	r3, #0
   19a68:	beq	19c44 <_start@@Base+0x7534>
   19a6c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19a70:	ldr	r0, [r3]
   19a74:	mov	r3, #8
   19a78:	mov	r2, #8
   19a7c:	mov	r1, #5
   19a80:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   19a84:	str	r0, [fp, #-20]	; 0xffffffec
   19a88:	ldr	r3, [fp, #-20]	; 0xffffffec
   19a8c:	cmp	r3, #0
   19a90:	beq	19cd4 <_start@@Base+0x75c4>
   19a94:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   19a98:	ldr	r0, [fp, #-20]	; 0xffffffec
   19a9c:	bl	12bc0 <_start@@Base+0x4b0>
   19aa0:	b	19c44 <_start@@Base+0x7534>
   19aa4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19aa8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   19aac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19ab0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   19ab4:	str	r0, [fp, #-76]	; 0xffffffb4
   19ab8:	b	19c44 <_start@@Base+0x7534>
   19abc:	nop			; (mov r0, r0)
   19ac0:	strdvs	r3, [ip, #-63]!	; 0xffffffc1
   19ac4:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   19ac8:	cmnvs	ip, r0, lsl #6
   19acc:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   19ad0:	cmnvs	ip, r0, lsl #10
   19ad4:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   19ad8:	andeq	lr, r2, r4, ror #16
   19adc:	andeq	lr, r2, r4, lsl #14
   19ae0:	ldrd	r2, [fp, #-12]
   19ae4:	mvn	r0, #255	; 0xff
   19ae8:	mvn	r1, #0
   19aec:	and	r2, r2, r0
   19af0:	and	r3, r3, r1
   19af4:	add	r1, pc, #540	; 0x21c
   19af8:	ldrd	r0, [r1]
   19afc:	cmp	r3, r1
   19b00:	cmpeq	r2, r0
   19b04:	bne	19c30 <_start@@Base+0x7520>
   19b08:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19b0c:	str	r3, [fp, #-16]
   19b10:	mov	r3, #7
   19b14:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19b18:	ldr	r1, [fp, #-16]
   19b1c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19b20:	bl	13db8 <_start@@Base+0x16a8>
   19b24:	str	r0, [fp, #-76]	; 0xffffffb4
   19b28:	ldr	r2, [fp, #-16]
   19b2c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19b30:	cmp	r2, r3
   19b34:	beq	19c18 <_start@@Base+0x7508>
   19b38:	mov	r2, #0
   19b3c:	mov	r3, #0
   19b40:	strd	r2, [fp, #-68]	; 0xffffffbc
   19b44:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19b48:	str	r3, [fp, #-16]
   19b4c:	sub	r3, fp, #68	; 0x44
   19b50:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19b54:	ldr	r1, [fp, #-16]
   19b58:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19b5c:	bl	14924 <_start@@Base+0x2214>
   19b60:	str	r0, [fp, #-76]	; 0xffffffb4
   19b64:	ldr	r2, [fp, #-16]
   19b68:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19b6c:	cmp	r2, r3
   19b70:	bne	19bc0 <_start@@Base+0x74b0>
   19b74:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19b78:	str	r3, [fp, #-16]
   19b7c:	sub	r3, fp, #68	; 0x44
   19b80:	str	r3, [sp]
   19b84:	ldr	r3, [pc, #404]	; 19d20 <_start@@Base+0x7610>
   19b88:	add	r3, pc, r3
   19b8c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19b90:	ldr	r1, [fp, #-16]
   19b94:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19b98:	bl	154c0 <_start@@Base+0x2db0>
   19b9c:	str	r0, [fp, #-76]	; 0xffffffb4
   19ba0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   19ba4:	ldr	r3, [fp, #-16]
   19ba8:	cmp	r2, r3
   19bac:	beq	19cf0 <_start@@Base+0x75e0>
   19bb0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   19bb4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19bb8:	cmp	r2, r3
   19bbc:	beq	19cf0 <_start@@Base+0x75e0>
   19bc0:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   19bc4:	orrs	r3, r2, r3
   19bc8:	bne	19be0 <_start@@Base+0x74d0>
   19bcc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19bd0:	ldr	r3, [r3, #8]
   19bd4:	and	r3, r3, #2
   19bd8:	cmp	r3, #0
   19bdc:	beq	19c44 <_start@@Base+0x7534>
   19be0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19be4:	ldr	r0, [r3]
   19be8:	mov	r3, #8
   19bec:	mov	r2, #8
   19bf0:	mov	r1, #4
   19bf4:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   19bf8:	str	r0, [fp, #-20]	; 0xffffffec
   19bfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c00:	cmp	r3, #0
   19c04:	beq	19cdc <_start@@Base+0x75cc>
   19c08:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   19c0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19c10:	bl	12bc0 <_start@@Base+0x4b0>
   19c14:	b	19c44 <_start@@Base+0x7534>
   19c18:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19c1c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   19c20:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19c24:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   19c28:	str	r0, [fp, #-76]	; 0xffffffb4
   19c2c:	b	19c44 <_start@@Base+0x7534>
   19c30:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19c34:	ldr	r1, [fp, #-76]	; 0xffffffb4
   19c38:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19c3c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   19c40:	str	r0, [fp, #-76]	; 0xffffffb4
   19c44:	sub	r3, fp, #24
   19c48:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19c4c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   19c50:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19c54:	bl	13a00 <_start@@Base+0x12f0>
   19c58:	str	r0, [fp, #-76]	; 0xffffffb4
   19c5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c60:	cmp	r3, #0
   19c64:	bne	193e0 <_start@@Base+0x6cd0>
   19c68:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19c6c:	ldr	r3, [r3, #24]
   19c70:	cmp	r3, #0
   19c74:	bne	19ce4 <_start@@Base+0x75d4>
   19c78:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19c7c:	ldr	r3, [r3]
   19c80:	mov	r0, r3
   19c84:	bl	29748 <flatcc_builder_end_table@@Base>
   19c88:	mov	r2, r0
   19c8c:	ldr	r3, [fp, #-84]	; 0xffffffac
   19c90:	str	r2, [r3]
   19c94:	ldr	r3, [fp, #-84]	; 0xffffffac
   19c98:	ldr	r3, [r3]
   19c9c:	cmp	r3, #0
   19ca0:	beq	19cec <_start@@Base+0x75dc>
   19ca4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19ca8:	b	19d08 <_start@@Base+0x75f8>
   19cac:	nop			; (mov r0, r0)
   19cb0:	b	19cf0 <_start@@Base+0x75e0>
   19cb4:	nop			; (mov r0, r0)
   19cb8:	b	19cf0 <_start@@Base+0x75e0>
   19cbc:	nop			; (mov r0, r0)
   19cc0:	b	19cf0 <_start@@Base+0x75e0>
   19cc4:	nop			; (mov r0, r0)
   19cc8:	b	19cf0 <_start@@Base+0x75e0>
   19ccc:	nop			; (mov r0, r0)
   19cd0:	b	19cf0 <_start@@Base+0x75e0>
   19cd4:	nop			; (mov r0, r0)
   19cd8:	b	19cf0 <_start@@Base+0x75e0>
   19cdc:	nop			; (mov r0, r0)
   19ce0:	b	19cf0 <_start@@Base+0x75e0>
   19ce4:	nop			; (mov r0, r0)
   19ce8:	b	19cf0 <_start@@Base+0x75e0>
   19cec:	nop			; (mov r0, r0)
   19cf0:	mov	r3, #33	; 0x21
   19cf4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19cf8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   19cfc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19d00:	bl	3198c <flatcc_json_parser_set_error@@Base>
   19d04:	mov	r3, r0
   19d08:	mov	r0, r3
   19d0c:	sub	sp, fp, #4
   19d10:	pop	{fp, pc}
   19d14:	nop			; (mov r0, r0)
   19d18:	cmnvs	ip, r0, lsl #8
   19d1c:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   19d20:	muleq	r2, ip, r5
   19d24:	push	{fp, lr}
   19d28:	add	fp, sp, #4
   19d2c:	sub	sp, sp, #72	; 0x48
   19d30:	str	r0, [fp, #-56]	; 0xffffffc8
   19d34:	str	r1, [fp, #-60]	; 0xffffffc4
   19d38:	str	r2, [fp, #-64]	; 0xffffffc0
   19d3c:	str	r3, [fp, #-68]	; 0xffffffbc
   19d40:	sub	r3, fp, #24
   19d44:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19d48:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19d4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19d50:	bl	13918 <_start@@Base+0x1208>
   19d54:	str	r0, [fp, #-60]	; 0xffffffc4
   19d58:	b	1a458 <_start@@Base+0x7d48>
   19d5c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19d60:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19d64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19d68:	bl	13508 <_start@@Base+0xdf8>
   19d6c:	str	r0, [fp, #-60]	; 0xffffffc4
   19d70:	ldr	r1, [fp, #-64]	; 0xffffffc0
   19d74:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19d78:	bl	137ec <_start@@Base+0x10dc>
   19d7c:	strd	r0, [fp, #-12]
   19d80:	ldrd	r2, [fp, #-12]
   19d84:	add	r1, pc, #796	; 0x31c
   19d88:	ldrd	r0, [r1]
   19d8c:	cmp	r3, r1
   19d90:	cmpeq	r2, r0
   19d94:	bhi	19fdc <_start@@Base+0x78cc>
   19d98:	ldrd	r2, [fp, #-12]
   19d9c:	mov	r0, #-16777216	; 0xff000000
   19da0:	mvn	r1, #0
   19da4:	and	r2, r2, r0
   19da8:	and	r3, r3, r1
   19dac:	add	r1, pc, #764	; 0x2fc
   19db0:	ldrd	r0, [r1]
   19db4:	cmp	r3, r1
   19db8:	cmpeq	r2, r0
   19dbc:	bne	19eac <_start@@Base+0x779c>
   19dc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19dc4:	str	r3, [fp, #-16]
   19dc8:	mov	r3, #5
   19dcc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19dd0:	ldr	r1, [fp, #-16]
   19dd4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19dd8:	bl	13db8 <_start@@Base+0x16a8>
   19ddc:	str	r0, [fp, #-60]	; 0xffffffc4
   19de0:	ldr	r2, [fp, #-16]
   19de4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19de8:	cmp	r2, r3
   19dec:	beq	19e94 <_start@@Base+0x7784>
   19df0:	mov	r3, #0
   19df4:	strb	r3, [fp, #-25]	; 0xffffffe7
   19df8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19dfc:	add	r3, r3, #24
   19e00:	str	r3, [fp, #-20]	; 0xffffffec
   19e04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19e08:	str	r3, [fp, #-16]
   19e0c:	sub	r3, fp, #25
   19e10:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19e14:	ldr	r1, [fp, #-16]
   19e18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19e1c:	bl	14b98 <_start@@Base+0x2488>
   19e20:	str	r0, [fp, #-60]	; 0xffffffc4
   19e24:	ldr	r2, [fp, #-16]
   19e28:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19e2c:	cmp	r2, r3
   19e30:	bne	19e80 <_start@@Base+0x7770>
   19e34:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19e38:	str	r3, [fp, #-16]
   19e3c:	sub	r3, fp, #25
   19e40:	str	r3, [sp]
   19e44:	ldr	r3, [pc, #636]	; 1a0c8 <_start@@Base+0x79b8>
   19e48:	add	r3, pc, r3
   19e4c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19e50:	ldr	r1, [fp, #-16]
   19e54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19e58:	bl	15a40 <_start@@Base+0x3330>
   19e5c:	str	r0, [fp, #-60]	; 0xffffffc4
   19e60:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19e64:	ldr	r3, [fp, #-16]
   19e68:	cmp	r2, r3
   19e6c:	beq	1a46c <_start@@Base+0x7d5c>
   19e70:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19e74:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19e78:	cmp	r2, r3
   19e7c:	beq	1a46c <_start@@Base+0x7d5c>
   19e80:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   19e84:	mov	r1, r3
   19e88:	ldr	r0, [fp, #-20]	; 0xffffffec
   19e8c:	bl	12a40 <_start@@Base+0x330>
   19e90:	b	1a440 <_start@@Base+0x7d30>
   19e94:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19e98:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19e9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19ea0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   19ea4:	str	r0, [fp, #-60]	; 0xffffffc4
   19ea8:	b	1a440 <_start@@Base+0x7d30>
   19eac:	ldrd	r2, [fp, #-12]
   19eb0:	mov	r0, #-16777216	; 0xff000000
   19eb4:	mvn	r1, #0
   19eb8:	and	r2, r2, r0
   19ebc:	and	r3, r3, r1
   19ec0:	add	r1, pc, #496	; 0x1f0
   19ec4:	ldrd	r0, [r1]
   19ec8:	cmp	r3, r1
   19ecc:	cmpeq	r2, r0
   19ed0:	bne	19fc4 <_start@@Base+0x78b4>
   19ed4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19ed8:	str	r3, [fp, #-16]
   19edc:	mov	r3, #5
   19ee0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19ee4:	ldr	r1, [fp, #-16]
   19ee8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19eec:	bl	13db8 <_start@@Base+0x16a8>
   19ef0:	str	r0, [fp, #-60]	; 0xffffffc4
   19ef4:	ldr	r2, [fp, #-16]
   19ef8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19efc:	cmp	r2, r3
   19f00:	beq	19fac <_start@@Base+0x789c>
   19f04:	mov	r2, #0
   19f08:	mov	r3, #0
   19f0c:	strd	r2, [fp, #-36]	; 0xffffffdc
   19f10:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19f14:	add	r3, r3, #16
   19f18:	str	r3, [fp, #-20]	; 0xffffffec
   19f1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19f20:	str	r3, [fp, #-16]
   19f24:	sub	r3, fp, #36	; 0x24
   19f28:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19f2c:	ldr	r1, [fp, #-16]
   19f30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19f34:	bl	32e64 <flatcc_json_parser_double@@Base>
   19f38:	str	r0, [fp, #-60]	; 0xffffffc4
   19f3c:	ldr	r2, [fp, #-16]
   19f40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19f44:	cmp	r2, r3
   19f48:	bne	19f98 <_start@@Base+0x7888>
   19f4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19f50:	str	r3, [fp, #-16]
   19f54:	sub	r3, fp, #36	; 0x24
   19f58:	str	r3, [sp]
   19f5c:	ldr	r3, [pc, #360]	; 1a0cc <_start@@Base+0x79bc>
   19f60:	add	r3, pc, r3
   19f64:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19f68:	ldr	r1, [fp, #-16]
   19f6c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19f70:	bl	15fb8 <_start@@Base+0x38a8>
   19f74:	str	r0, [fp, #-60]	; 0xffffffc4
   19f78:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19f7c:	ldr	r3, [fp, #-16]
   19f80:	cmp	r2, r3
   19f84:	beq	1a46c <_start@@Base+0x7d5c>
   19f88:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19f8c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19f90:	cmp	r2, r3
   19f94:	beq	1a46c <_start@@Base+0x7d5c>
   19f98:	vldr	d7, [fp, #-36]	; 0xffffffdc
   19f9c:	vmov.f64	d0, d7
   19fa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   19fa4:	bl	12d6c <_start@@Base+0x65c>
   19fa8:	b	1a440 <_start@@Base+0x7d30>
   19fac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19fb0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19fb4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19fb8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   19fbc:	str	r0, [fp, #-60]	; 0xffffffc4
   19fc0:	b	1a440 <_start@@Base+0x7d30>
   19fc4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19fc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19fcc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19fd0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   19fd4:	str	r0, [fp, #-60]	; 0xffffffc4
   19fd8:	b	1a440 <_start@@Base+0x7d30>
   19fdc:	ldrd	r2, [fp, #-12]
   19fe0:	mvn	r0, #0
   19fe4:	mvn	r1, #-2013265920	; 0x88000000
   19fe8:	cmp	r3, r1
   19fec:	cmpeq	r2, r0
   19ff0:	bhi	1a0dc <_start@@Base+0x79cc>
   19ff4:	ldrd	r2, [fp, #-12]
   19ff8:	mov	r0, #-16777216	; 0xff000000
   19ffc:	mvn	r1, #0
   1a000:	and	r2, r2, r0
   1a004:	and	r3, r3, r1
   1a008:	add	r1, pc, #176	; 0xb0
   1a00c:	ldrd	r0, [r1]
   1a010:	cmp	r3, r1
   1a014:	cmpeq	r2, r0
   1a018:	bne	1a08c <_start@@Base+0x797c>
   1a01c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a020:	str	r3, [fp, #-16]
   1a024:	mov	r3, #5
   1a028:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a02c:	ldr	r1, [fp, #-16]
   1a030:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a034:	bl	13db8 <_start@@Base+0x16a8>
   1a038:	str	r0, [fp, #-60]	; 0xffffffc4
   1a03c:	ldr	r2, [fp, #-16]
   1a040:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a044:	cmp	r2, r3
   1a048:	beq	1a074 <_start@@Base+0x7964>
   1a04c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a050:	add	r3, r3, #26
   1a054:	str	r3, [fp, #-20]	; 0xffffffec
   1a058:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a05c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a060:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a064:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a068:	bl	183c8 <_start@@Base+0x5cb8>
   1a06c:	str	r0, [fp, #-60]	; 0xffffffc4
   1a070:	b	1a440 <_start@@Base+0x7d30>
   1a074:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a078:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a07c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a080:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1a084:	str	r0, [fp, #-60]	; 0xffffffc4
   1a088:	b	1a440 <_start@@Base+0x7d30>
   1a08c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a090:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a094:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a098:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1a09c:	str	r0, [fp, #-60]	; 0xffffffc4
   1a0a0:	b	1a440 <_start@@Base+0x7d30>
   1a0a4:	nop			; (mov r0, r0)
   1a0a8:	rscscc	pc, pc, #1020	; 0x3fc
   1a0ac:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1a0b0:	andcc	r0, r0, #0
   1a0b4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1a0b8:	mrscc	r0, (UNDEF: 0)
   1a0bc:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1a0c0:	movwcc	r0, #0
   1a0c4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1a0c8:	andeq	lr, r2, ip, ror #5
   1a0cc:	andeq	lr, r2, r4, ror #3
   1a0d0:			; <UNDEFINED> instruction: 0x0002dfb8
   1a0d4:	andeq	sp, r2, r0, lsr #29
   1a0d8:	andeq	sp, r2, r0, lsr #27
   1a0dc:	ldrd	r2, [fp, #-12]
   1a0e0:	mvn	r0, #0
   1a0e4:	mvn	r1, #-2030043136	; 0x87000000
   1a0e8:	cmp	r3, r1
   1a0ec:	cmpeq	r2, r0
   1a0f0:	bhi	1a214 <_start@@Base+0x7b04>
   1a0f4:	ldrd	r2, [fp, #-12]
   1a0f8:	mov	r0, #0
   1a0fc:	mov	r1, #-16777216	; 0xff000000
   1a100:	and	r2, r2, r0
   1a104:	and	r3, r3, r1
   1a108:	cmp	r3, #2013265920	; 0x78000000
   1a10c:	cmpeq	r2, #0
   1a110:	bne	1a1fc <_start@@Base+0x7aec>
   1a114:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a118:	str	r3, [fp, #-16]
   1a11c:	mov	r3, #1
   1a120:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a124:	ldr	r1, [fp, #-16]
   1a128:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a12c:	bl	13db8 <_start@@Base+0x16a8>
   1a130:	str	r0, [fp, #-60]	; 0xffffffc4
   1a134:	ldr	r2, [fp, #-16]
   1a138:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a13c:	cmp	r2, r3
   1a140:	beq	1a1e4 <_start@@Base+0x7ad4>
   1a144:	mov	r3, #0
   1a148:	str	r3, [fp, #-40]	; 0xffffffd8
   1a14c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a150:	str	r3, [fp, #-20]	; 0xffffffec
   1a154:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a158:	str	r3, [fp, #-16]
   1a15c:	sub	r3, fp, #40	; 0x28
   1a160:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a164:	ldr	r1, [fp, #-16]
   1a168:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a16c:	bl	33008 <flatcc_json_parser_float@@Base>
   1a170:	str	r0, [fp, #-60]	; 0xffffffc4
   1a174:	ldr	r2, [fp, #-16]
   1a178:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a17c:	cmp	r2, r3
   1a180:	bne	1a1d0 <_start@@Base+0x7ac0>
   1a184:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a188:	str	r3, [fp, #-16]
   1a18c:	sub	r3, fp, #40	; 0x28
   1a190:	str	r3, [sp]
   1a194:	ldr	r3, [pc, #-204]	; 1a0d0 <_start@@Base+0x79c0>
   1a198:	add	r3, pc, r3
   1a19c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a1a0:	ldr	r1, [fp, #-16]
   1a1a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a1a8:	bl	15dec <_start@@Base+0x36dc>
   1a1ac:	str	r0, [fp, #-60]	; 0xffffffc4
   1a1b0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a1b4:	ldr	r3, [fp, #-16]
   1a1b8:	cmp	r2, r3
   1a1bc:	beq	1a46c <_start@@Base+0x7d5c>
   1a1c0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a1c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a1c8:	cmp	r2, r3
   1a1cc:	beq	1a46c <_start@@Base+0x7d5c>
   1a1d0:	vldr	s15, [fp, #-40]	; 0xffffffd8
   1a1d4:	vmov.f32	s0, s15
   1a1d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a1dc:	bl	12c98 <_start@@Base+0x588>
   1a1e0:	b	1a440 <_start@@Base+0x7d30>
   1a1e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a1e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a1ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a1f0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1a1f4:	str	r0, [fp, #-60]	; 0xffffffc4
   1a1f8:	b	1a440 <_start@@Base+0x7d30>
   1a1fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a200:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a204:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a208:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1a20c:	str	r0, [fp, #-60]	; 0xffffffc4
   1a210:	b	1a440 <_start@@Base+0x7d30>
   1a214:	ldrd	r2, [fp, #-12]
   1a218:	mov	r0, #0
   1a21c:	mov	r1, #-16777216	; 0xff000000
   1a220:	and	r2, r2, r0
   1a224:	and	r3, r3, r1
   1a228:	cmp	r3, #2046820352	; 0x7a000000
   1a22c:	cmpeq	r2, #0
   1a230:	bne	1a320 <_start@@Base+0x7c10>
   1a234:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a238:	str	r3, [fp, #-16]
   1a23c:	mov	r3, #1
   1a240:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a244:	ldr	r1, [fp, #-16]
   1a248:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a24c:	bl	13db8 <_start@@Base+0x16a8>
   1a250:	str	r0, [fp, #-60]	; 0xffffffc4
   1a254:	ldr	r2, [fp, #-16]
   1a258:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a25c:	cmp	r2, r3
   1a260:	beq	1a308 <_start@@Base+0x7bf8>
   1a264:	mov	r3, #0
   1a268:	str	r3, [fp, #-44]	; 0xffffffd4
   1a26c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a270:	add	r3, r3, #8
   1a274:	str	r3, [fp, #-20]	; 0xffffffec
   1a278:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a27c:	str	r3, [fp, #-16]
   1a280:	sub	r3, fp, #44	; 0x2c
   1a284:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a288:	ldr	r1, [fp, #-16]
   1a28c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a290:	bl	33008 <flatcc_json_parser_float@@Base>
   1a294:	str	r0, [fp, #-60]	; 0xffffffc4
   1a298:	ldr	r2, [fp, #-16]
   1a29c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a2a0:	cmp	r2, r3
   1a2a4:	bne	1a2f4 <_start@@Base+0x7be4>
   1a2a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a2ac:	str	r3, [fp, #-16]
   1a2b0:	sub	r3, fp, #44	; 0x2c
   1a2b4:	str	r3, [sp]
   1a2b8:	ldr	r3, [pc, #-492]	; 1a0d4 <_start@@Base+0x79c4>
   1a2bc:	add	r3, pc, r3
   1a2c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a2c4:	ldr	r1, [fp, #-16]
   1a2c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a2cc:	bl	15dec <_start@@Base+0x36dc>
   1a2d0:	str	r0, [fp, #-60]	; 0xffffffc4
   1a2d4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a2d8:	ldr	r3, [fp, #-16]
   1a2dc:	cmp	r2, r3
   1a2e0:	beq	1a46c <_start@@Base+0x7d5c>
   1a2e4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a2e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a2ec:	cmp	r2, r3
   1a2f0:	beq	1a46c <_start@@Base+0x7d5c>
   1a2f4:	vldr	s15, [fp, #-44]	; 0xffffffd4
   1a2f8:	vmov.f32	s0, s15
   1a2fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a300:	bl	12c98 <_start@@Base+0x588>
   1a304:	b	1a440 <_start@@Base+0x7d30>
   1a308:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a30c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a310:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a314:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1a318:	str	r0, [fp, #-60]	; 0xffffffc4
   1a31c:	b	1a440 <_start@@Base+0x7d30>
   1a320:	ldrd	r2, [fp, #-12]
   1a324:	mov	r0, #0
   1a328:	mov	r1, #-16777216	; 0xff000000
   1a32c:	and	r2, r2, r0
   1a330:	and	r3, r3, r1
   1a334:	cmp	r3, #2030043136	; 0x79000000
   1a338:	cmpeq	r2, #0
   1a33c:	bne	1a42c <_start@@Base+0x7d1c>
   1a340:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a344:	str	r3, [fp, #-16]
   1a348:	mov	r3, #1
   1a34c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a350:	ldr	r1, [fp, #-16]
   1a354:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a358:	bl	13db8 <_start@@Base+0x16a8>
   1a35c:	str	r0, [fp, #-60]	; 0xffffffc4
   1a360:	ldr	r2, [fp, #-16]
   1a364:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a368:	cmp	r2, r3
   1a36c:	beq	1a414 <_start@@Base+0x7d04>
   1a370:	mov	r3, #0
   1a374:	str	r3, [fp, #-48]	; 0xffffffd0
   1a378:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a37c:	add	r3, r3, #4
   1a380:	str	r3, [fp, #-20]	; 0xffffffec
   1a384:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a388:	str	r3, [fp, #-16]
   1a38c:	sub	r3, fp, #48	; 0x30
   1a390:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a394:	ldr	r1, [fp, #-16]
   1a398:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a39c:	bl	33008 <flatcc_json_parser_float@@Base>
   1a3a0:	str	r0, [fp, #-60]	; 0xffffffc4
   1a3a4:	ldr	r2, [fp, #-16]
   1a3a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a3ac:	cmp	r2, r3
   1a3b0:	bne	1a400 <_start@@Base+0x7cf0>
   1a3b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a3b8:	str	r3, [fp, #-16]
   1a3bc:	sub	r3, fp, #48	; 0x30
   1a3c0:	str	r3, [sp]
   1a3c4:	ldr	r3, [pc, #-756]	; 1a0d8 <_start@@Base+0x79c8>
   1a3c8:	add	r3, pc, r3
   1a3cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a3d0:	ldr	r1, [fp, #-16]
   1a3d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a3d8:	bl	15dec <_start@@Base+0x36dc>
   1a3dc:	str	r0, [fp, #-60]	; 0xffffffc4
   1a3e0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a3e4:	ldr	r3, [fp, #-16]
   1a3e8:	cmp	r2, r3
   1a3ec:	beq	1a46c <_start@@Base+0x7d5c>
   1a3f0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a3f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a3f8:	cmp	r2, r3
   1a3fc:	beq	1a46c <_start@@Base+0x7d5c>
   1a400:	vldr	s15, [fp, #-48]	; 0xffffffd0
   1a404:	vmov.f32	s0, s15
   1a408:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a40c:	bl	12c98 <_start@@Base+0x588>
   1a410:	b	1a440 <_start@@Base+0x7d30>
   1a414:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a418:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a41c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a420:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1a424:	str	r0, [fp, #-60]	; 0xffffffc4
   1a428:	b	1a440 <_start@@Base+0x7d30>
   1a42c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a430:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a434:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a438:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1a43c:	str	r0, [fp, #-60]	; 0xffffffc4
   1a440:	sub	r3, fp, #24
   1a444:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a448:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a44c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a450:	bl	13a00 <_start@@Base+0x12f0>
   1a454:	str	r0, [fp, #-60]	; 0xffffffc4
   1a458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a45c:	cmp	r3, #0
   1a460:	bne	19d5c <_start@@Base+0x764c>
   1a464:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a468:	b	1a484 <_start@@Base+0x7d74>
   1a46c:	mov	r3, #33	; 0x21
   1a470:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a474:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a478:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a47c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   1a480:	mov	r3, r0
   1a484:	mov	r0, r3
   1a488:	sub	sp, fp, #4
   1a48c:	pop	{fp, pc}
   1a490:	push	{fp, lr}
   1a494:	add	fp, sp, #4
   1a498:	sub	sp, sp, #24
   1a49c:	str	r0, [fp, #-16]
   1a4a0:	str	r1, [fp, #-20]	; 0xffffffec
   1a4a4:	str	r2, [fp, #-24]	; 0xffffffe8
   1a4a8:	str	r3, [fp, #-28]	; 0xffffffe4
   1a4ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a4b0:	mov	r2, #0
   1a4b4:	str	r2, [r3]
   1a4b8:	ldr	r3, [fp, #-16]
   1a4bc:	ldr	r3, [r3]
   1a4c0:	mov	r2, #16
   1a4c4:	mov	r1, #32
   1a4c8:	mov	r0, r3
   1a4cc:	bl	27e50 <flatcc_builder_start_struct@@Base>
   1a4d0:	str	r0, [fp, #-8]
   1a4d4:	ldr	r3, [fp, #-8]
   1a4d8:	cmp	r3, #0
   1a4dc:	beq	1a53c <_start@@Base+0x7e2c>
   1a4e0:	ldr	r3, [fp, #-8]
   1a4e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a4e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a4ec:	ldr	r0, [fp, #-16]
   1a4f0:	bl	19d24 <_start@@Base+0x7614>
   1a4f4:	str	r0, [fp, #-20]	; 0xffffffec
   1a4f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a4fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a500:	cmp	r2, r3
   1a504:	beq	1a540 <_start@@Base+0x7e30>
   1a508:	ldr	r3, [fp, #-16]
   1a50c:	ldr	r3, [r3]
   1a510:	mov	r0, r3
   1a514:	bl	27ef0 <flatcc_builder_end_struct@@Base>
   1a518:	mov	r2, r0
   1a51c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a520:	str	r2, [r3]
   1a524:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a528:	ldr	r3, [r3]
   1a52c:	cmp	r3, #0
   1a530:	beq	1a540 <_start@@Base+0x7e30>
   1a534:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a538:	b	1a558 <_start@@Base+0x7e48>
   1a53c:	nop			; (mov r0, r0)
   1a540:	mov	r3, #33	; 0x21
   1a544:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a548:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a54c:	ldr	r0, [fp, #-16]
   1a550:	bl	3198c <flatcc_json_parser_set_error@@Base>
   1a554:	mov	r3, r0
   1a558:	mov	r0, r3
   1a55c:	sub	sp, fp, #4
   1a560:	pop	{fp, pc}
   1a564:	push	{fp, lr}
   1a568:	add	fp, sp, #4
   1a56c:	sub	sp, sp, #56	; 0x38
   1a570:	str	r0, [fp, #-40]	; 0xffffffd8
   1a574:	str	r1, [fp, #-44]	; 0xffffffd4
   1a578:	str	r2, [fp, #-48]	; 0xffffffd0
   1a57c:	str	r3, [fp, #-52]	; 0xffffffcc
   1a580:	sub	r3, fp, #24
   1a584:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a588:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a58c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a590:	bl	13918 <_start@@Base+0x1208>
   1a594:	str	r0, [fp, #-44]	; 0xffffffd4
   1a598:	b	1a800 <_start@@Base+0x80f0>
   1a59c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a5a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a5a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a5a8:	bl	13508 <_start@@Base+0xdf8>
   1a5ac:	str	r0, [fp, #-44]	; 0xffffffd4
   1a5b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a5b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a5b8:	bl	137ec <_start@@Base+0x10dc>
   1a5bc:	strd	r0, [fp, #-12]
   1a5c0:	ldrd	r2, [fp, #-12]
   1a5c4:	mov	r0, #0
   1a5c8:	ldr	r1, [pc, #624]	; 1a840 <_start@@Base+0x8130>
   1a5cc:	and	r2, r2, r0
   1a5d0:	and	r3, r3, r1
   1a5d4:	mov	r0, #0
   1a5d8:	ldr	r1, [pc, #612]	; 1a844 <_start@@Base+0x8134>
   1a5dc:	cmp	r3, r1
   1a5e0:	cmpeq	r2, r0
   1a5e4:	bne	1a6d0 <_start@@Base+0x7fc0>
   1a5e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a5ec:	str	r3, [fp, #-16]
   1a5f0:	mov	r3, #2
   1a5f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a5f8:	ldr	r1, [fp, #-16]
   1a5fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a600:	bl	13db8 <_start@@Base+0x16a8>
   1a604:	str	r0, [fp, #-44]	; 0xffffffd4
   1a608:	ldr	r2, [fp, #-16]
   1a60c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a610:	cmp	r2, r3
   1a614:	beq	1a6b8 <_start@@Base+0x7fa8>
   1a618:	mov	r3, #0
   1a61c:	str	r3, [fp, #-28]	; 0xffffffe4
   1a620:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a624:	str	r3, [fp, #-20]	; 0xffffffec
   1a628:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a62c:	str	r3, [fp, #-16]
   1a630:	sub	r3, fp, #28
   1a634:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a638:	ldr	r1, [fp, #-16]
   1a63c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a640:	bl	146b4 <_start@@Base+0x1fa4>
   1a644:	str	r0, [fp, #-44]	; 0xffffffd4
   1a648:	ldr	r2, [fp, #-16]
   1a64c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a650:	cmp	r2, r3
   1a654:	bne	1a6a4 <_start@@Base+0x7f94>
   1a658:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a65c:	str	r3, [fp, #-16]
   1a660:	sub	r3, fp, #28
   1a664:	str	r3, [sp]
   1a668:	ldr	r3, [pc, #472]	; 1a848 <_start@@Base+0x8138>
   1a66c:	add	r3, pc, r3
   1a670:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a674:	ldr	r1, [fp, #-16]
   1a678:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a67c:	bl	14f54 <_start@@Base+0x2844>
   1a680:	str	r0, [fp, #-44]	; 0xffffffd4
   1a684:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a688:	ldr	r3, [fp, #-16]
   1a68c:	cmp	r2, r3
   1a690:	beq	1a814 <_start@@Base+0x8104>
   1a694:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a698:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a69c:	cmp	r2, r3
   1a6a0:	beq	1a814 <_start@@Base+0x8104>
   1a6a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a6a8:	mov	r1, r3
   1a6ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a6b0:	bl	1292c <_start@@Base+0x21c>
   1a6b4:	b	1a7e8 <_start@@Base+0x80d8>
   1a6b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a6bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a6c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a6c4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1a6c8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a6cc:	b	1a7e8 <_start@@Base+0x80d8>
   1a6d0:	ldrd	r2, [fp, #-12]
   1a6d4:	add	r1, pc, #348	; 0x15c
   1a6d8:	ldrd	r0, [r1]
   1a6dc:	cmp	r3, r1
   1a6e0:	cmpeq	r2, r0
   1a6e4:	bne	1a7d4 <_start@@Base+0x80c4>
   1a6e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a6ec:	str	r3, [fp, #-16]
   1a6f0:	mov	r3, #8
   1a6f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a6f8:	ldr	r1, [fp, #-16]
   1a6fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a700:	bl	13db8 <_start@@Base+0x16a8>
   1a704:	str	r0, [fp, #-44]	; 0xffffffd4
   1a708:	ldr	r2, [fp, #-16]
   1a70c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a710:	cmp	r2, r3
   1a714:	beq	1a7bc <_start@@Base+0x80ac>
   1a718:	mov	r3, #0
   1a71c:	str	r3, [fp, #-32]	; 0xffffffe0
   1a720:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a724:	add	r3, r3, #4
   1a728:	str	r3, [fp, #-20]	; 0xffffffec
   1a72c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a730:	str	r3, [fp, #-16]
   1a734:	sub	r3, fp, #32
   1a738:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a73c:	ldr	r1, [fp, #-16]
   1a740:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a744:	bl	146b4 <_start@@Base+0x1fa4>
   1a748:	str	r0, [fp, #-44]	; 0xffffffd4
   1a74c:	ldr	r2, [fp, #-16]
   1a750:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a754:	cmp	r2, r3
   1a758:	bne	1a7a8 <_start@@Base+0x8098>
   1a75c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a760:	str	r3, [fp, #-16]
   1a764:	sub	r3, fp, #32
   1a768:	str	r3, [sp]
   1a76c:	ldr	r3, [pc, #216]	; 1a84c <_start@@Base+0x813c>
   1a770:	add	r3, pc, r3
   1a774:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a778:	ldr	r1, [fp, #-16]
   1a77c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a780:	bl	14f54 <_start@@Base+0x2844>
   1a784:	str	r0, [fp, #-44]	; 0xffffffd4
   1a788:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a78c:	ldr	r3, [fp, #-16]
   1a790:	cmp	r2, r3
   1a794:	beq	1a814 <_start@@Base+0x8104>
   1a798:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a79c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a7a0:	cmp	r2, r3
   1a7a4:	beq	1a814 <_start@@Base+0x8104>
   1a7a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a7ac:	mov	r1, r3
   1a7b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a7b4:	bl	1292c <_start@@Base+0x21c>
   1a7b8:	b	1a7e8 <_start@@Base+0x80d8>
   1a7bc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a7c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a7c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a7c8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1a7cc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a7d0:	b	1a7e8 <_start@@Base+0x80d8>
   1a7d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a7d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a7dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a7e0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1a7e4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a7e8:	sub	r3, fp, #24
   1a7ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a7f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a7f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a7f8:	bl	13a00 <_start@@Base+0x12f0>
   1a7fc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a800:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a804:	cmp	r3, #0
   1a808:	bne	1a59c <_start@@Base+0x7e8c>
   1a80c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a810:	b	1a82c <_start@@Base+0x811c>
   1a814:	mov	r3, #33	; 0x21
   1a818:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a81c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a820:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a824:	bl	3198c <flatcc_json_parser_set_error@@Base>
   1a828:	mov	r3, r0
   1a82c:	mov	r0, r3
   1a830:	sub	sp, fp, #4
   1a834:	pop	{fp, pc}
   1a838:	cmnvs	lr, r5, ror #6
   1a83c:	strbtvs	r7, [r9], #-884	; 0xfffffc8c
   1a840:			; <UNDEFINED> instruction: 0xffff0000
   1a844:	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
   1a848:	andeq	sp, r2, r8, lsl #22
   1a84c:	andeq	sp, r2, r0, lsl sl
   1a850:	push	{fp, lr}
   1a854:	add	fp, sp, #4
   1a858:	sub	sp, sp, #24
   1a85c:	str	r0, [fp, #-16]
   1a860:	str	r1, [fp, #-20]	; 0xffffffec
   1a864:	str	r2, [fp, #-24]	; 0xffffffe8
   1a868:	str	r3, [fp, #-28]	; 0xffffffe4
   1a86c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a870:	mov	r2, #0
   1a874:	str	r2, [r3]
   1a878:	ldr	r3, [fp, #-16]
   1a87c:	ldr	r3, [r3]
   1a880:	mov	r2, #4
   1a884:	mov	r1, #8
   1a888:	mov	r0, r3
   1a88c:	bl	27e50 <flatcc_builder_start_struct@@Base>
   1a890:	str	r0, [fp, #-8]
   1a894:	ldr	r3, [fp, #-8]
   1a898:	cmp	r3, #0
   1a89c:	beq	1a8fc <_start@@Base+0x81ec>
   1a8a0:	ldr	r3, [fp, #-8]
   1a8a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a8a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a8ac:	ldr	r0, [fp, #-16]
   1a8b0:	bl	1a564 <_start@@Base+0x7e54>
   1a8b4:	str	r0, [fp, #-20]	; 0xffffffec
   1a8b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a8bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a8c0:	cmp	r2, r3
   1a8c4:	beq	1a900 <_start@@Base+0x81f0>
   1a8c8:	ldr	r3, [fp, #-16]
   1a8cc:	ldr	r3, [r3]
   1a8d0:	mov	r0, r3
   1a8d4:	bl	27ef0 <flatcc_builder_end_struct@@Base>
   1a8d8:	mov	r2, r0
   1a8dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a8e0:	str	r2, [r3]
   1a8e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a8e8:	ldr	r3, [r3]
   1a8ec:	cmp	r3, #0
   1a8f0:	beq	1a900 <_start@@Base+0x81f0>
   1a8f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a8f8:	b	1a918 <_start@@Base+0x8208>
   1a8fc:	nop			; (mov r0, r0)
   1a900:	mov	r3, #33	; 0x21
   1a904:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a908:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a90c:	ldr	r0, [fp, #-16]
   1a910:	bl	3198c <flatcc_json_parser_set_error@@Base>
   1a914:	mov	r3, r0
   1a918:	mov	r0, r3
   1a91c:	sub	sp, fp, #4
   1a920:	pop	{fp, pc}
   1a924:	push	{fp, lr}
   1a928:	add	fp, sp, #4
   1a92c:	sub	sp, sp, #64	; 0x40
   1a930:	str	r0, [fp, #-48]	; 0xffffffd0
   1a934:	str	r1, [fp, #-52]	; 0xffffffcc
   1a938:	str	r2, [fp, #-56]	; 0xffffffc8
   1a93c:	str	r3, [fp, #-60]	; 0xffffffc4
   1a940:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a944:	mov	r2, #0
   1a948:	str	r2, [r3]
   1a94c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a950:	ldr	r3, [r3]
   1a954:	mov	r1, #3
   1a958:	mov	r0, r3
   1a95c:	bl	28be4 <flatcc_builder_start_table@@Base>
   1a960:	mov	r3, r0
   1a964:	cmp	r3, #0
   1a968:	bne	1ade8 <_start@@Base+0x86d8>
   1a96c:	sub	r3, fp, #28
   1a970:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a974:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a978:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a97c:	bl	13918 <_start@@Base+0x1208>
   1a980:	str	r0, [fp, #-52]	; 0xffffffcc
   1a984:	b	1ad98 <_start@@Base+0x8688>
   1a988:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a98c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a990:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a994:	bl	13508 <_start@@Base+0xdf8>
   1a998:	str	r0, [fp, #-52]	; 0xffffffcc
   1a99c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1a9a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a9a4:	bl	137ec <_start@@Base+0x10dc>
   1a9a8:	strd	r0, [fp, #-12]
   1a9ac:	ldrd	r2, [fp, #-12]
   1a9b0:	mvn	r0, #0
   1a9b4:	ldr	r1, [pc, #924]	; 1ad58 <_start@@Base+0x8648>
   1a9b8:	cmp	r3, r1
   1a9bc:	cmpeq	r2, r0
   1a9c0:	bhi	1ab2c <_start@@Base+0x841c>
   1a9c4:	ldrd	r2, [fp, #-12]
   1a9c8:	mov	r0, #-16777216	; 0xff000000
   1a9cc:	mvn	r1, #0
   1a9d0:	and	r2, r2, r0
   1a9d4:	and	r3, r3, r1
   1a9d8:	add	r1, pc, #872	; 0x368
   1a9dc:	ldrd	r0, [r1]
   1a9e0:	cmp	r3, r1
   1a9e4:	cmpeq	r2, r0
   1a9e8:	bne	1ab14 <_start@@Base+0x8404>
   1a9ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a9f0:	str	r3, [fp, #-16]
   1a9f4:	mov	r3, #5
   1a9f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a9fc:	ldr	r1, [fp, #-16]
   1aa00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1aa04:	bl	13db8 <_start@@Base+0x16a8>
   1aa08:	str	r0, [fp, #-52]	; 0xffffffcc
   1aa0c:	ldr	r2, [fp, #-16]
   1aa10:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1aa14:	cmp	r2, r3
   1aa18:	beq	1aafc <_start@@Base+0x83ec>
   1aa1c:	mov	r3, #0
   1aa20:	strh	r3, [fp, #-34]	; 0xffffffde
   1aa24:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1aa28:	str	r3, [fp, #-16]
   1aa2c:	sub	r3, fp, #34	; 0x22
   1aa30:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1aa34:	ldr	r1, [fp, #-16]
   1aa38:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1aa3c:	bl	14784 <_start@@Base+0x2074>
   1aa40:	str	r0, [fp, #-52]	; 0xffffffcc
   1aa44:	ldr	r2, [fp, #-16]
   1aa48:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1aa4c:	cmp	r2, r3
   1aa50:	bne	1aaa0 <_start@@Base+0x8390>
   1aa54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1aa58:	str	r3, [fp, #-16]
   1aa5c:	sub	r3, fp, #34	; 0x22
   1aa60:	str	r3, [sp]
   1aa64:	ldr	r3, [pc, #752]	; 1ad5c <_start@@Base+0x864c>
   1aa68:	add	r3, pc, r3
   1aa6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1aa70:	ldr	r1, [fp, #-16]
   1aa74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1aa78:	bl	15120 <_start@@Base+0x2a10>
   1aa7c:	str	r0, [fp, #-52]	; 0xffffffcc
   1aa80:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1aa84:	ldr	r3, [fp, #-16]
   1aa88:	cmp	r2, r3
   1aa8c:	beq	1ae0c <_start@@Base+0x86fc>
   1aa90:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1aa94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1aa98:	cmp	r2, r3
   1aa9c:	beq	1ae0c <_start@@Base+0x86fc>
   1aaa0:	ldrh	r3, [fp, #-34]	; 0xffffffde
   1aaa4:	cmp	r3, #0
   1aaa8:	bne	1aac0 <_start@@Base+0x83b0>
   1aaac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1aab0:	ldr	r3, [r3, #8]
   1aab4:	and	r3, r3, #2
   1aab8:	cmp	r3, #0
   1aabc:	beq	1ad80 <_start@@Base+0x8670>
   1aac0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1aac4:	ldr	r0, [r3]
   1aac8:	mov	r3, #2
   1aacc:	mov	r2, #2
   1aad0:	mov	r1, #2
   1aad4:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1aad8:	str	r0, [fp, #-20]	; 0xffffffec
   1aadc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aae0:	cmp	r3, #0
   1aae4:	beq	1adf0 <_start@@Base+0x86e0>
   1aae8:	ldrh	r3, [fp, #-34]	; 0xffffffde
   1aaec:	mov	r1, r3
   1aaf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aaf4:	bl	128c8 <_start@@Base+0x1b8>
   1aaf8:	b	1ad80 <_start@@Base+0x8670>
   1aafc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ab00:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ab04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ab08:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ab0c:	str	r0, [fp, #-52]	; 0xffffffcc
   1ab10:	b	1ad80 <_start@@Base+0x8670>
   1ab14:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ab18:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ab1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ab20:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ab24:	str	r0, [fp, #-52]	; 0xffffffcc
   1ab28:	b	1ad80 <_start@@Base+0x8670>
   1ab2c:	ldrd	r2, [fp, #-12]
   1ab30:	mov	r0, #0
   1ab34:	mvn	r1, #255	; 0xff
   1ab38:	and	r2, r2, r0
   1ab3c:	and	r3, r3, r1
   1ab40:	add	r1, pc, #520	; 0x208
   1ab44:	ldrd	r0, [r1]
   1ab48:	cmp	r3, r1
   1ab4c:	cmpeq	r2, r0
   1ab50:	bne	1ac7c <_start@@Base+0x856c>
   1ab54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ab58:	str	r3, [fp, #-16]
   1ab5c:	mov	r3, #3
   1ab60:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ab64:	ldr	r1, [fp, #-16]
   1ab68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ab6c:	bl	13db8 <_start@@Base+0x16a8>
   1ab70:	str	r0, [fp, #-52]	; 0xffffffcc
   1ab74:	ldr	r2, [fp, #-16]
   1ab78:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ab7c:	cmp	r2, r3
   1ab80:	beq	1ac64 <_start@@Base+0x8554>
   1ab84:	mov	r2, #0
   1ab88:	mov	r3, #0
   1ab8c:	strd	r2, [fp, #-44]	; 0xffffffd4
   1ab90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ab94:	str	r3, [fp, #-16]
   1ab98:	sub	r3, fp, #44	; 0x2c
   1ab9c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1aba0:	ldr	r1, [fp, #-16]
   1aba4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1aba8:	bl	14924 <_start@@Base+0x2214>
   1abac:	str	r0, [fp, #-52]	; 0xffffffcc
   1abb0:	ldr	r2, [fp, #-16]
   1abb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1abb8:	cmp	r2, r3
   1abbc:	bne	1ac0c <_start@@Base+0x84fc>
   1abc0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1abc4:	str	r3, [fp, #-16]
   1abc8:	sub	r3, fp, #44	; 0x2c
   1abcc:	str	r3, [sp]
   1abd0:	ldr	r3, [pc, #392]	; 1ad60 <_start@@Base+0x8650>
   1abd4:	add	r3, pc, r3
   1abd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1abdc:	ldr	r1, [fp, #-16]
   1abe0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1abe4:	bl	154c0 <_start@@Base+0x2db0>
   1abe8:	str	r0, [fp, #-52]	; 0xffffffcc
   1abec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1abf0:	ldr	r3, [fp, #-16]
   1abf4:	cmp	r2, r3
   1abf8:	beq	1ae0c <_start@@Base+0x86fc>
   1abfc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ac00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ac04:	cmp	r2, r3
   1ac08:	beq	1ae0c <_start@@Base+0x86fc>
   1ac0c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1ac10:	orrs	r3, r2, r3
   1ac14:	bne	1ac2c <_start@@Base+0x851c>
   1ac18:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ac1c:	ldr	r3, [r3, #8]
   1ac20:	and	r3, r3, #2
   1ac24:	cmp	r3, #0
   1ac28:	beq	1ad80 <_start@@Base+0x8670>
   1ac2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ac30:	ldr	r0, [r3]
   1ac34:	mov	r3, #8
   1ac38:	mov	r2, #8
   1ac3c:	mov	r1, #1
   1ac40:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1ac44:	str	r0, [fp, #-20]	; 0xffffffec
   1ac48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ac4c:	cmp	r3, #0
   1ac50:	beq	1adf8 <_start@@Base+0x86e8>
   1ac54:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1ac58:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ac5c:	bl	12bc0 <_start@@Base+0x4b0>
   1ac60:	b	1ad80 <_start@@Base+0x8670>
   1ac64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ac68:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ac6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ac70:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ac74:	str	r0, [fp, #-52]	; 0xffffffcc
   1ac78:	b	1ad80 <_start@@Base+0x8670>
   1ac7c:	ldrd	r2, [fp, #-12]
   1ac80:	mov	r0, #0
   1ac84:	ldr	r1, [pc, #216]	; 1ad64 <_start@@Base+0x8654>
   1ac88:	and	r2, r2, r0
   1ac8c:	and	r3, r3, r1
   1ac90:	mov	r0, #0
   1ac94:	ldr	r1, [pc, #204]	; 1ad68 <_start@@Base+0x8658>
   1ac98:	cmp	r3, r1
   1ac9c:	cmpeq	r2, r0
   1aca0:	bne	1ad6c <_start@@Base+0x865c>
   1aca4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1aca8:	str	r3, [fp, #-16]
   1acac:	mov	r3, #2
   1acb0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1acb4:	ldr	r1, [fp, #-16]
   1acb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1acbc:	bl	13db8 <_start@@Base+0x16a8>
   1acc0:	str	r0, [fp, #-52]	; 0xffffffcc
   1acc4:	ldr	r2, [fp, #-16]
   1acc8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1accc:	cmp	r2, r3
   1acd0:	beq	1ad2c <_start@@Base+0x861c>
   1acd4:	sub	r3, fp, #32
   1acd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1acdc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ace0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ace4:	bl	33a78 <flatcc_json_parser_build_string@@Base>
   1ace8:	str	r0, [fp, #-52]	; 0xffffffcc
   1acec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1acf0:	cmp	r3, #0
   1acf4:	beq	1ae0c <_start@@Base+0x86fc>
   1acf8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1acfc:	ldr	r3, [r3]
   1ad00:	mov	r1, #0
   1ad04:	mov	r0, r3
   1ad08:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1ad0c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ad10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad14:	cmp	r3, #0
   1ad18:	beq	1ae0c <_start@@Base+0x86fc>
   1ad1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ad20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad24:	str	r2, [r3]
   1ad28:	b	1ad80 <_start@@Base+0x8670>
   1ad2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ad30:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ad34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ad38:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ad3c:	str	r0, [fp, #-52]	; 0xffffffcc
   1ad40:	b	1ad80 <_start@@Base+0x8670>
   1ad44:	nop			; (mov r0, r0)
   1ad48:	strvc	r0, [r0], #-0
   1ad4c:	cmnvs	pc, #461373440	; 0x1b800000
   1ad50:	andeq	r0, r0, r0
   1ad54:	strbtvc	r6, [r1], -r0, lsl #24
   1ad58:	stmdbvs	r3!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^
   1ad5c:	andeq	sp, r2, r4, lsr #14
   1ad60:	andeq	sp, r2, r4, asr #11
   1ad64:			; <UNDEFINED> instruction: 0xffff0000
   1ad68:	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
   1ad6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ad70:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ad74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ad78:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ad7c:	str	r0, [fp, #-52]	; 0xffffffcc
   1ad80:	sub	r3, fp, #28
   1ad84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ad88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ad8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ad90:	bl	13a00 <_start@@Base+0x12f0>
   1ad94:	str	r0, [fp, #-52]	; 0xffffffcc
   1ad98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ad9c:	cmp	r3, #0
   1ada0:	bne	1a988 <_start@@Base+0x8278>
   1ada4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ada8:	ldr	r3, [r3, #24]
   1adac:	cmp	r3, #0
   1adb0:	bne	1ae00 <_start@@Base+0x86f0>
   1adb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1adb8:	ldr	r3, [r3]
   1adbc:	mov	r0, r3
   1adc0:	bl	29748 <flatcc_builder_end_table@@Base>
   1adc4:	mov	r2, r0
   1adc8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1adcc:	str	r2, [r3]
   1add0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1add4:	ldr	r3, [r3]
   1add8:	cmp	r3, #0
   1addc:	beq	1ae08 <_start@@Base+0x86f8>
   1ade0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ade4:	b	1ae24 <_start@@Base+0x8714>
   1ade8:	nop			; (mov r0, r0)
   1adec:	b	1ae0c <_start@@Base+0x86fc>
   1adf0:	nop			; (mov r0, r0)
   1adf4:	b	1ae0c <_start@@Base+0x86fc>
   1adf8:	nop			; (mov r0, r0)
   1adfc:	b	1ae0c <_start@@Base+0x86fc>
   1ae00:	nop			; (mov r0, r0)
   1ae04:	b	1ae0c <_start@@Base+0x86fc>
   1ae08:	nop			; (mov r0, r0)
   1ae0c:	mov	r3, #33	; 0x21
   1ae10:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ae14:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ae18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ae1c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   1ae20:	mov	r3, r0
   1ae24:	mov	r0, r3
   1ae28:	sub	sp, fp, #4
   1ae2c:	pop	{fp, pc}
   1ae30:	push	{fp, lr}
   1ae34:	add	fp, sp, #4
   1ae38:	sub	sp, sp, #72	; 0x48
   1ae3c:	str	r0, [fp, #-40]	; 0xffffffd8
   1ae40:	str	r1, [fp, #-44]	; 0xffffffd4
   1ae44:	str	r2, [fp, #-48]	; 0xffffffd0
   1ae48:	str	r3, [fp, #-52]	; 0xffffffcc
   1ae4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ae50:	mov	r2, #0
   1ae54:	str	r2, [r3]
   1ae58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ae5c:	ldr	r3, [r3]
   1ae60:	mov	r1, #4
   1ae64:	mov	r0, r3
   1ae68:	bl	28be4 <flatcc_builder_start_table@@Base>
   1ae6c:	mov	r3, r0
   1ae70:	cmp	r3, #0
   1ae74:	bne	1b2b0 <_start@@Base+0x8ba0>
   1ae78:	sub	r3, fp, #32
   1ae7c:	str	r3, [sp]
   1ae80:	mov	r3, #1
   1ae84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ae88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ae8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ae90:	bl	33c74 <flatcc_json_parser_prepare_unions@@Base>
   1ae94:	mov	r2, r0
   1ae98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ae9c:	cmp	r2, r3
   1aea0:	beq	1b2b8 <_start@@Base+0x8ba8>
   1aea4:	sub	r3, fp, #24
   1aea8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1aeac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aeb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aeb4:	bl	13918 <_start@@Base+0x1208>
   1aeb8:	str	r0, [fp, #-44]	; 0xffffffd4
   1aebc:	b	1b248 <_start@@Base+0x8b38>
   1aec0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1aec4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aec8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aecc:	bl	13508 <_start@@Base+0xdf8>
   1aed0:	str	r0, [fp, #-44]	; 0xffffffd4
   1aed4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1aed8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aedc:	bl	137ec <_start@@Base+0x10dc>
   1aee0:	strd	r0, [fp, #-12]
   1aee4:	ldrd	r2, [fp, #-12]
   1aee8:	add	r1, pc, #984	; 0x3d8
   1aeec:	ldrd	r0, [r1]
   1aef0:	cmp	r3, r1
   1aef4:	cmpeq	r2, r0
   1aef8:	bne	1aff0 <_start@@Base+0x88e0>
   1aefc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1af00:	add	r3, r3, #8
   1af04:	str	r3, [fp, #-44]	; 0xffffffd4
   1af08:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1af0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1af10:	bl	137ec <_start@@Base+0x10dc>
   1af14:	strd	r0, [fp, #-12]
   1af18:	ldrd	r2, [fp, #-12]
   1af1c:	mov	r0, #0
   1af20:	mvn	r1, #0
   1af24:	and	r2, r2, r0
   1af28:	and	r3, r3, r1
   1af2c:	add	r1, pc, #924	; 0x39c
   1af30:	ldrd	r0, [r1]
   1af34:	cmp	r3, r1
   1af38:	cmpeq	r2, r0
   1af3c:	bne	1afd8 <_start@@Base+0x88c8>
   1af40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1af44:	str	r3, [fp, #-16]
   1af48:	mov	r3, #4
   1af4c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1af50:	ldr	r1, [fp, #-16]
   1af54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1af58:	bl	13db8 <_start@@Base+0x16a8>
   1af5c:	str	r0, [fp, #-44]	; 0xffffffd4
   1af60:	ldr	r2, [fp, #-16]
   1af64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1af68:	cmp	r2, r3
   1af6c:	beq	1afc0 <_start@@Base+0x88b0>
   1af70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1af74:	ldr	r2, [pc, #884]	; 1b2f0 <_start@@Base+0x8be0>
   1af78:	add	r2, pc, r2
   1af7c:	str	r2, [sp, #16]
   1af80:	ldr	r2, [pc, #876]	; 1b2f4 <_start@@Base+0x8be4>
   1af84:	add	r2, pc, r2
   1af88:	str	r2, [sp, #12]
   1af8c:	ldr	r2, [pc, #868]	; 1b2f8 <_start@@Base+0x8be8>
   1af90:	add	r2, pc, r2
   1af94:	str	r2, [sp, #8]
   1af98:	str	r3, [sp, #4]
   1af9c:	mov	r3, #3
   1afa0:	str	r3, [sp]
   1afa4:	mov	r3, #0
   1afa8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1afac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1afb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1afb4:	bl	34580 <flatcc_json_parser_union_type_vector@@Base>
   1afb8:	str	r0, [fp, #-44]	; 0xffffffd4
   1afbc:	b	1b230 <_start@@Base+0x8b20>
   1afc0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1afc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1afc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1afcc:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1afd0:	str	r0, [fp, #-44]	; 0xffffffd4
   1afd4:	b	1b230 <_start@@Base+0x8b20>
   1afd8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1afdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1afe0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1afe4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1afe8:	str	r0, [fp, #-44]	; 0xffffffd4
   1afec:	b	1b230 <_start@@Base+0x8b20>
   1aff0:	ldrd	r2, [fp, #-12]
   1aff4:	mvn	r0, #255	; 0xff
   1aff8:	mvn	r1, #0
   1affc:	and	r2, r2, r0
   1b000:	and	r3, r3, r1
   1b004:	add	r1, pc, #716	; 0x2cc
   1b008:	ldrd	r0, [r1]
   1b00c:	cmp	r3, r1
   1b010:	cmpeq	r2, r0
   1b014:	bne	1b080 <_start@@Base+0x8970>
   1b018:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b01c:	str	r3, [fp, #-16]
   1b020:	mov	r3, #7
   1b024:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b028:	ldr	r1, [fp, #-16]
   1b02c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b030:	bl	13db8 <_start@@Base+0x16a8>
   1b034:	str	r0, [fp, #-44]	; 0xffffffd4
   1b038:	ldr	r2, [fp, #-16]
   1b03c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b040:	cmp	r2, r3
   1b044:	beq	1b088 <_start@@Base+0x8978>
   1b048:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b04c:	ldr	r2, [pc, #680]	; 1b2fc <_start@@Base+0x8bec>
   1b050:	add	r2, pc, r2
   1b054:	str	r2, [sp, #8]
   1b058:	str	r3, [sp, #4]
   1b05c:	mov	r3, #3
   1b060:	str	r3, [sp]
   1b064:	mov	r3, #0
   1b068:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b06c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b070:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b074:	bl	3442c <flatcc_json_parser_union_vector@@Base>
   1b078:	str	r0, [fp, #-44]	; 0xffffffd4
   1b07c:	b	1b230 <_start@@Base+0x8b20>
   1b080:	nop			; (mov r0, r0)
   1b084:	b	1b08c <_start@@Base+0x897c>
   1b088:	nop			; (mov r0, r0)
   1b08c:	ldrd	r2, [fp, #-12]
   1b090:	ldr	r0, [pc, #616]	; 1b300 <_start@@Base+0x8bf0>
   1b094:	mvn	r1, #0
   1b098:	and	r2, r2, r0
   1b09c:	and	r3, r3, r1
   1b0a0:	add	r1, pc, #568	; 0x238
   1b0a4:	ldrd	r0, [r1]
   1b0a8:	cmp	r3, r1
   1b0ac:	cmpeq	r2, r0
   1b0b0:	bne	1b154 <_start@@Base+0x8a44>
   1b0b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b0b8:	str	r3, [fp, #-16]
   1b0bc:	mov	r3, #6
   1b0c0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b0c4:	ldr	r1, [fp, #-16]
   1b0c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b0cc:	bl	13db8 <_start@@Base+0x16a8>
   1b0d0:	str	r0, [fp, #-44]	; 0xffffffd4
   1b0d4:	ldr	r2, [fp, #-16]
   1b0d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b0dc:	cmp	r2, r3
   1b0e0:	beq	1b13c <_start@@Base+0x8a2c>
   1b0e4:	sub	r3, fp, #28
   1b0e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b0ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b0f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b0f4:	bl	1b32c <_start@@Base+0x8c1c>
   1b0f8:	str	r0, [fp, #-44]	; 0xffffffd4
   1b0fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b100:	cmp	r3, #0
   1b104:	beq	1b308 <_start@@Base+0x8bf8>
   1b108:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b10c:	ldr	r3, [r3]
   1b110:	mov	r1, #0
   1b114:	mov	r0, r3
   1b118:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1b11c:	str	r0, [fp, #-20]	; 0xffffffec
   1b120:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b124:	cmp	r3, #0
   1b128:	beq	1b308 <_start@@Base+0x8bf8>
   1b12c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b130:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b134:	str	r2, [r3]
   1b138:	b	1b230 <_start@@Base+0x8b20>
   1b13c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b140:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b144:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b148:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1b14c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b150:	b	1b230 <_start@@Base+0x8b20>
   1b154:	ldrd	r2, [fp, #-12]
   1b158:	mov	r0, #-16777216	; 0xff000000
   1b15c:	mvn	r1, #0
   1b160:	and	r2, r2, r0
   1b164:	and	r3, r3, r1
   1b168:	add	r1, pc, #376	; 0x178
   1b16c:	ldrd	r0, [r1]
   1b170:	cmp	r3, r1
   1b174:	cmpeq	r2, r0
   1b178:	bne	1b21c <_start@@Base+0x8b0c>
   1b17c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b180:	str	r3, [fp, #-16]
   1b184:	mov	r3, #5
   1b188:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b18c:	ldr	r1, [fp, #-16]
   1b190:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b194:	bl	13db8 <_start@@Base+0x16a8>
   1b198:	str	r0, [fp, #-44]	; 0xffffffd4
   1b19c:	ldr	r2, [fp, #-16]
   1b1a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b1a4:	cmp	r2, r3
   1b1a8:	beq	1b204 <_start@@Base+0x8af4>
   1b1ac:	sub	r3, fp, #28
   1b1b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b1b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b1b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b1bc:	bl	23070 <_start@@Base+0x10960>
   1b1c0:	str	r0, [fp, #-44]	; 0xffffffd4
   1b1c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b1c8:	cmp	r3, #0
   1b1cc:	beq	1b308 <_start@@Base+0x8bf8>
   1b1d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b1d4:	ldr	r3, [r3]
   1b1d8:	mov	r1, #1
   1b1dc:	mov	r0, r3
   1b1e0:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1b1e4:	str	r0, [fp, #-20]	; 0xffffffec
   1b1e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b1ec:	cmp	r3, #0
   1b1f0:	beq	1b308 <_start@@Base+0x8bf8>
   1b1f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b1f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b1fc:	str	r2, [r3]
   1b200:	b	1b230 <_start@@Base+0x8b20>
   1b204:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b208:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b20c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b210:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1b214:	str	r0, [fp, #-44]	; 0xffffffd4
   1b218:	b	1b230 <_start@@Base+0x8b20>
   1b21c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b220:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b224:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b228:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1b22c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b230:	sub	r3, fp, #24
   1b234:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b238:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b23c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b240:	bl	13a00 <_start@@Base+0x12f0>
   1b244:	str	r0, [fp, #-44]	; 0xffffffd4
   1b248:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b24c:	cmp	r3, #0
   1b250:	bne	1aec0 <_start@@Base+0x87b0>
   1b254:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b258:	ldr	r3, [r3, #24]
   1b25c:	cmp	r3, #0
   1b260:	bne	1b2c0 <_start@@Base+0x8bb0>
   1b264:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b268:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b26c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b270:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b274:	bl	33d2c <flatcc_json_parser_finalize_unions@@Base>
   1b278:	str	r0, [fp, #-44]	; 0xffffffd4
   1b27c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b280:	ldr	r3, [r3]
   1b284:	mov	r0, r3
   1b288:	bl	29748 <flatcc_builder_end_table@@Base>
   1b28c:	mov	r2, r0
   1b290:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b294:	str	r2, [r3]
   1b298:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b29c:	ldr	r3, [r3]
   1b2a0:	cmp	r3, #0
   1b2a4:	beq	1b304 <_start@@Base+0x8bf4>
   1b2a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b2ac:	b	1b320 <_start@@Base+0x8c10>
   1b2b0:	nop			; (mov r0, r0)
   1b2b4:	b	1b308 <_start@@Base+0x8bf8>
   1b2b8:	nop			; (mov r0, r0)
   1b2bc:	b	1b308 <_start@@Base+0x8bf8>
   1b2c0:	nop			; (mov r0, r0)
   1b2c4:	b	1b308 <_start@@Base+0x8bf8>
   1b2c8:	cmnvs	lr, pc, asr r9
   1b2cc:	stclvs	14, cr6, [r1, #-484]!	; 0xfffffe1c
   1b2d0:	andeq	r0, r0, r0
   1b2d4:	ldrbtvc	r7, [r9], #-101	; 0xffffff9b
   1b2d8:	cmnvs	lr, r0, lsl #18
   1b2dc:	stclvs	14, cr6, [r1, #-484]!	; 0xfffffe1c
   1b2e0:	ldmdbvs	r8!, {}^	; <UNPREDICTABLE>
   1b2e4:	rsbsvc	r6, r2, r6, ror #10
   1b2e8:	strvs	r0, [r0, #-0]
   1b2ec:	stclvs	6, cr7, [pc, #-420]!	; 1b150 <_start@@Base+0x8a40>
   1b2f0:			; <UNDEFINED> instruction: 0xffffd010
   1b2f4:			; <UNDEFINED> instruction: 0xffffce94
   1b2f8:	andeq	sp, r2, r4, lsl r2
   1b2fc:			; <UNDEFINED> instruction: 0xffffcdc8
   1b300:			; <UNDEFINED> instruction: 0xffff0000
   1b304:	nop			; (mov r0, r0)
   1b308:	mov	r3, #33	; 0x21
   1b30c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b310:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b314:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b318:	bl	3198c <flatcc_json_parser_set_error@@Base>
   1b31c:	mov	r3, r0
   1b320:	mov	r0, r3
   1b324:	sub	sp, fp, #4
   1b328:	pop	{fp, pc}
   1b32c:	push	{fp, lr}
   1b330:	add	fp, sp, #4
   1b334:	sub	sp, sp, #40	; 0x28
   1b338:	str	r0, [fp, #-32]	; 0xffffffe0
   1b33c:	str	r1, [fp, #-36]	; 0xffffffdc
   1b340:	str	r2, [fp, #-40]	; 0xffffffd8
   1b344:	str	r3, [fp, #-44]	; 0xffffffd4
   1b348:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b34c:	mov	r2, #0
   1b350:	str	r2, [r3]
   1b354:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b358:	ldr	r3, [r3]
   1b35c:	mov	r1, #3
   1b360:	mov	r0, r3
   1b364:	bl	28be4 <flatcc_builder_start_table@@Base>
   1b368:	mov	r3, r0
   1b36c:	cmp	r3, #0
   1b370:	bne	1b704 <_start@@Base+0x8ff4>
   1b374:	sub	r3, fp, #24
   1b378:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b37c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b380:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b384:	bl	13918 <_start@@Base+0x1208>
   1b388:	str	r0, [fp, #-36]	; 0xffffffdc
   1b38c:	b	1b6b4 <_start@@Base+0x8fa4>
   1b390:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b394:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b398:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b39c:	bl	13508 <_start@@Base+0xdf8>
   1b3a0:	str	r0, [fp, #-36]	; 0xffffffdc
   1b3a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b3a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b3ac:	bl	137ec <_start@@Base+0x10dc>
   1b3b0:	strd	r0, [fp, #-12]
   1b3b4:	ldrd	r2, [fp, #-12]
   1b3b8:	add	r1, pc, #896	; 0x380
   1b3bc:	ldrd	r0, [r1]
   1b3c0:	cmp	r3, r1
   1b3c4:	cmpeq	r2, r0
   1b3c8:	bne	1b688 <_start@@Base+0x8f78>
   1b3cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b3d0:	add	r3, r3, #8
   1b3d4:	str	r3, [fp, #-36]	; 0xffffffdc
   1b3d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b3dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b3e0:	bl	137ec <_start@@Base+0x10dc>
   1b3e4:	strd	r0, [fp, #-12]
   1b3e8:	ldrd	r2, [fp, #-12]
   1b3ec:	add	r1, pc, #852	; 0x354
   1b3f0:	ldrd	r0, [r1]
   1b3f4:	cmp	r3, r1
   1b3f8:	cmpeq	r2, r0
   1b3fc:	bne	1b670 <_start@@Base+0x8f60>
   1b400:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b404:	add	r3, r3, #8
   1b408:	str	r3, [fp, #-36]	; 0xffffffdc
   1b40c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b410:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b414:	bl	137ec <_start@@Base+0x10dc>
   1b418:	strd	r0, [fp, #-12]
   1b41c:	ldrd	r2, [fp, #-12]
   1b420:	ldr	r0, [pc, #832]	; 1b768 <_start@@Base+0x9058>
   1b424:	mvn	r1, #0
   1b428:	and	r2, r2, r0
   1b42c:	and	r3, r3, r1
   1b430:	add	r1, pc, #792	; 0x318
   1b434:	ldrd	r0, [r1]
   1b438:	cmp	r3, r1
   1b43c:	cmpeq	r2, r0
   1b440:	bne	1b4cc <_start@@Base+0x8dbc>
   1b444:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b448:	str	r3, [fp, #-16]
   1b44c:	mov	r3, #6
   1b450:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b454:	ldr	r1, [fp, #-16]
   1b458:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b45c:	bl	13db8 <_start@@Base+0x16a8>
   1b460:	str	r0, [fp, #-36]	; 0xffffffdc
   1b464:	ldr	r2, [fp, #-16]
   1b468:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b46c:	cmp	r2, r3
   1b470:	beq	1b57c <_start@@Base+0x8e6c>
   1b474:	sub	r3, fp, #28
   1b478:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b47c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b480:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b484:	bl	1c3c8 <_start@@Base+0x9cb8>
   1b488:	str	r0, [fp, #-36]	; 0xffffffdc
   1b48c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b490:	cmp	r3, #0
   1b494:	beq	1b718 <_start@@Base+0x9008>
   1b498:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b49c:	ldr	r3, [r3]
   1b4a0:	mov	r1, #1
   1b4a4:	mov	r0, r3
   1b4a8:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1b4ac:	str	r0, [fp, #-20]	; 0xffffffec
   1b4b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b4b4:	cmp	r3, #0
   1b4b8:	beq	1b718 <_start@@Base+0x9008>
   1b4bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b4c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b4c4:	str	r2, [r3]
   1b4c8:	b	1b69c <_start@@Base+0x8f8c>
   1b4cc:	ldrd	r2, [fp, #-12]
   1b4d0:	mov	r0, #-16777216	; 0xff000000
   1b4d4:	mvn	r1, #0
   1b4d8:	and	r2, r2, r0
   1b4dc:	and	r3, r3, r1
   1b4e0:	add	r1, pc, #624	; 0x270
   1b4e4:	ldrd	r0, [r1]
   1b4e8:	cmp	r3, r1
   1b4ec:	cmpeq	r2, r0
   1b4f0:	bne	1b584 <_start@@Base+0x8e74>
   1b4f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b4f8:	str	r3, [fp, #-16]
   1b4fc:	mov	r3, #5
   1b500:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b504:	ldr	r1, [fp, #-16]
   1b508:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b50c:	bl	13db8 <_start@@Base+0x16a8>
   1b510:	str	r0, [fp, #-36]	; 0xffffffdc
   1b514:	ldr	r2, [fp, #-16]
   1b518:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b51c:	cmp	r2, r3
   1b520:	beq	1b58c <_start@@Base+0x8e7c>
   1b524:	sub	r3, fp, #28
   1b528:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b52c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b530:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b534:	bl	1b76c <_start@@Base+0x905c>
   1b538:	str	r0, [fp, #-36]	; 0xffffffdc
   1b53c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b540:	cmp	r3, #0
   1b544:	beq	1b718 <_start@@Base+0x9008>
   1b548:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b54c:	ldr	r3, [r3]
   1b550:	mov	r1, #0
   1b554:	mov	r0, r3
   1b558:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1b55c:	str	r0, [fp, #-20]	; 0xffffffec
   1b560:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b564:	cmp	r3, #0
   1b568:	beq	1b718 <_start@@Base+0x9008>
   1b56c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b570:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b574:	str	r2, [r3]
   1b578:	b	1b69c <_start@@Base+0x8f8c>
   1b57c:	nop			; (mov r0, r0)
   1b580:	b	1b590 <_start@@Base+0x8e80>
   1b584:	nop			; (mov r0, r0)
   1b588:	b	1b590 <_start@@Base+0x8e80>
   1b58c:	nop			; (mov r0, r0)
   1b590:	ldrd	r2, [fp, #-12]
   1b594:	ldr	r0, [pc, #460]	; 1b768 <_start@@Base+0x9058>
   1b598:	mvn	r1, #0
   1b59c:	and	r2, r2, r0
   1b5a0:	and	r3, r3, r1
   1b5a4:	add	r1, pc, #436	; 0x1b4
   1b5a8:	ldrd	r0, [r1]
   1b5ac:	cmp	r3, r1
   1b5b0:	cmpeq	r2, r0
   1b5b4:	bne	1b658 <_start@@Base+0x8f48>
   1b5b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b5bc:	str	r3, [fp, #-16]
   1b5c0:	mov	r3, #6
   1b5c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b5c8:	ldr	r1, [fp, #-16]
   1b5cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b5d0:	bl	13db8 <_start@@Base+0x16a8>
   1b5d4:	str	r0, [fp, #-36]	; 0xffffffdc
   1b5d8:	ldr	r2, [fp, #-16]
   1b5dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b5e0:	cmp	r2, r3
   1b5e4:	beq	1b640 <_start@@Base+0x8f30>
   1b5e8:	sub	r3, fp, #28
   1b5ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b5f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b5f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b5f8:	bl	1c810 <_start@@Base+0xa100>
   1b5fc:	str	r0, [fp, #-36]	; 0xffffffdc
   1b600:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b604:	cmp	r3, #0
   1b608:	beq	1b718 <_start@@Base+0x9008>
   1b60c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b610:	ldr	r3, [r3]
   1b614:	mov	r1, #2
   1b618:	mov	r0, r3
   1b61c:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1b620:	str	r0, [fp, #-20]	; 0xffffffec
   1b624:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b628:	cmp	r3, #0
   1b62c:	beq	1b718 <_start@@Base+0x9008>
   1b630:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b634:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b638:	str	r2, [r3]
   1b63c:	b	1b69c <_start@@Base+0x8f8c>
   1b640:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b644:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b648:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b64c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1b650:	str	r0, [fp, #-36]	; 0xffffffdc
   1b654:	b	1b69c <_start@@Base+0x8f8c>
   1b658:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b65c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b660:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b664:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1b668:	str	r0, [fp, #-36]	; 0xffffffdc
   1b66c:	b	1b69c <_start@@Base+0x8f8c>
   1b670:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b674:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b678:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b67c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1b680:	str	r0, [fp, #-36]	; 0xffffffdc
   1b684:	b	1b69c <_start@@Base+0x8f8c>
   1b688:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b68c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b690:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b694:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1b698:	str	r0, [fp, #-36]	; 0xffffffdc
   1b69c:	sub	r3, fp, #24
   1b6a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b6a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b6a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b6ac:	bl	13a00 <_start@@Base+0x12f0>
   1b6b0:	str	r0, [fp, #-36]	; 0xffffffdc
   1b6b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b6b8:	cmp	r3, #0
   1b6bc:	bne	1b390 <_start@@Base+0x8c80>
   1b6c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b6c4:	ldr	r3, [r3, #24]
   1b6c8:	cmp	r3, #0
   1b6cc:	bne	1b70c <_start@@Base+0x8ffc>
   1b6d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b6d4:	ldr	r3, [r3]
   1b6d8:	mov	r0, r3
   1b6dc:	bl	29748 <flatcc_builder_end_table@@Base>
   1b6e0:	mov	r2, r0
   1b6e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b6e8:	str	r2, [r3]
   1b6ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b6f0:	ldr	r3, [r3]
   1b6f4:	cmp	r3, #0
   1b6f8:	beq	1b714 <_start@@Base+0x9004>
   1b6fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b700:	b	1b730 <_start@@Base+0x9020>
   1b704:	nop			; (mov r0, r0)
   1b708:	b	1b718 <_start@@Base+0x9008>
   1b70c:	nop			; (mov r0, r0)
   1b710:	b	1b718 <_start@@Base+0x9008>
   1b714:	nop			; (mov r0, r0)
   1b718:	mov	r3, #33	; 0x21
   1b71c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b720:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b724:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b728:	bl	3198c <flatcc_json_parser_set_error@@Base>
   1b72c:	mov	r3, r0
   1b730:	mov	r0, r3
   1b734:	sub	sp, fp, #4
   1b738:	pop	{fp, pc}
   1b73c:	nop			; (mov r0, r0)
   1b740:	bvs	1cf7500 <__bss_end__@@Base+0x1caf044>
   1b744:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1b748:	ldmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
   1b74c:	rsbsvc	r6, r2, r6, ror #10
   1b750:	ldrvs	r0, [r2, -r0]!
   1b754:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1b758:	strvs	r0, [r0, -r0]
   1b75c:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1b760:	ldrvs	r0, [r3, -r0]!
   1b764:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1b768:			; <UNDEFINED> instruction: 0xffff0000
   1b76c:	push	{fp, lr}
   1b770:	add	fp, sp, #4
   1b774:	sub	sp, sp, #96	; 0x60
   1b778:	str	r0, [fp, #-80]	; 0xffffffb0
   1b77c:	str	r1, [fp, #-84]	; 0xffffffac
   1b780:	str	r2, [fp, #-88]	; 0xffffffa8
   1b784:	str	r3, [fp, #-92]	; 0xffffffa4
   1b788:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b78c:	mov	r2, #0
   1b790:	str	r2, [r3]
   1b794:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b798:	ldr	r3, [r3]
   1b79c:	mov	r1, #9
   1b7a0:	mov	r0, r3
   1b7a4:	bl	28be4 <flatcc_builder_start_table@@Base>
   1b7a8:	mov	r3, r0
   1b7ac:	cmp	r3, #0
   1b7b0:	bne	1c344 <_start@@Base+0x9c34>
   1b7b4:	sub	r3, fp, #28
   1b7b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b7bc:	ldr	r1, [fp, #-84]	; 0xffffffac
   1b7c0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b7c4:	bl	13918 <_start@@Base+0x1208>
   1b7c8:	str	r0, [fp, #-84]	; 0xffffffac
   1b7cc:	b	1c2f4 <_start@@Base+0x9be4>
   1b7d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b7d4:	ldr	r1, [fp, #-84]	; 0xffffffac
   1b7d8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b7dc:	bl	13508 <_start@@Base+0xdf8>
   1b7e0:	str	r0, [fp, #-84]	; 0xffffffac
   1b7e4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1b7e8:	ldr	r0, [fp, #-84]	; 0xffffffac
   1b7ec:	bl	137ec <_start@@Base+0x10dc>
   1b7f0:	strd	r0, [fp, #-12]
   1b7f4:	ldrd	r2, [fp, #-12]
   1b7f8:	add	r1, pc, #928	; 0x3a0
   1b7fc:	ldrd	r0, [r1]
   1b800:	cmp	r3, r1
   1b804:	cmpeq	r2, r0
   1b808:	bhi	1bca8 <_start@@Base+0x9598>
   1b80c:	ldrd	r2, [fp, #-12]
   1b810:	add	r1, pc, #912	; 0x390
   1b814:	ldrd	r0, [r1]
   1b818:	cmp	r3, r1
   1b81c:	cmpeq	r2, r0
   1b820:	bne	1b9a0 <_start@@Base+0x9290>
   1b824:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b828:	add	r3, r3, #8
   1b82c:	str	r3, [fp, #-84]	; 0xffffffac
   1b830:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1b834:	ldr	r0, [fp, #-84]	; 0xffffffac
   1b838:	bl	137ec <_start@@Base+0x10dc>
   1b83c:	strd	r0, [fp, #-12]
   1b840:	ldrd	r2, [fp, #-12]
   1b844:	mov	r0, #0
   1b848:	mov	r1, #-16777216	; 0xff000000
   1b84c:	and	r2, r2, r0
   1b850:	and	r3, r3, r1
   1b854:	cmp	r3, #889192448	; 0x35000000
   1b858:	cmpeq	r2, #0
   1b85c:	bne	1b988 <_start@@Base+0x9278>
   1b860:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b864:	str	r3, [fp, #-16]
   1b868:	mov	r3, #1
   1b86c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b870:	ldr	r1, [fp, #-16]
   1b874:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b878:	bl	13db8 <_start@@Base+0x16a8>
   1b87c:	str	r0, [fp, #-84]	; 0xffffffac
   1b880:	ldr	r2, [fp, #-16]
   1b884:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b888:	cmp	r2, r3
   1b88c:	beq	1b970 <_start@@Base+0x9260>
   1b890:	mov	r3, #0
   1b894:	str	r3, [fp, #-36]	; 0xffffffdc
   1b898:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b89c:	str	r3, [fp, #-16]
   1b8a0:	sub	r3, fp, #36	; 0x24
   1b8a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b8a8:	ldr	r1, [fp, #-16]
   1b8ac:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b8b0:	bl	146b4 <_start@@Base+0x1fa4>
   1b8b4:	str	r0, [fp, #-84]	; 0xffffffac
   1b8b8:	ldr	r2, [fp, #-16]
   1b8bc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b8c0:	cmp	r2, r3
   1b8c4:	bne	1b914 <_start@@Base+0x9204>
   1b8c8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b8cc:	str	r3, [fp, #-16]
   1b8d0:	sub	r3, fp, #36	; 0x24
   1b8d4:	str	r3, [sp]
   1b8d8:	ldr	r3, [pc, #736]	; 1bbc0 <_start@@Base+0x94b0>
   1b8dc:	add	r3, pc, r3
   1b8e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b8e4:	ldr	r1, [fp, #-16]
   1b8e8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b8ec:	bl	14f54 <_start@@Base+0x2844>
   1b8f0:	str	r0, [fp, #-84]	; 0xffffffac
   1b8f4:	ldr	r2, [fp, #-84]	; 0xffffffac
   1b8f8:	ldr	r3, [fp, #-16]
   1b8fc:	cmp	r2, r3
   1b900:	beq	1c3a4 <_start@@Base+0x9c94>
   1b904:	ldr	r2, [fp, #-84]	; 0xffffffac
   1b908:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1b90c:	cmp	r2, r3
   1b910:	beq	1c3a4 <_start@@Base+0x9c94>
   1b914:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b918:	cmp	r3, #0
   1b91c:	bne	1b934 <_start@@Base+0x9224>
   1b920:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b924:	ldr	r3, [r3, #8]
   1b928:	and	r3, r3, #2
   1b92c:	cmp	r3, #0
   1b930:	beq	1c2dc <_start@@Base+0x9bcc>
   1b934:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b938:	ldr	r0, [r3]
   1b93c:	mov	r3, #4
   1b940:	mov	r2, #4
   1b944:	mov	r1, #1
   1b948:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1b94c:	str	r0, [fp, #-20]	; 0xffffffec
   1b950:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b954:	cmp	r3, #0
   1b958:	beq	1c34c <_start@@Base+0x9c3c>
   1b95c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b960:	mov	r1, r3
   1b964:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b968:	bl	1292c <_start@@Base+0x21c>
   1b96c:	b	1c2dc <_start@@Base+0x9bcc>
   1b970:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b974:	ldr	r1, [fp, #-84]	; 0xffffffac
   1b978:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b97c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1b980:	str	r0, [fp, #-84]	; 0xffffffac
   1b984:	b	1c2dc <_start@@Base+0x9bcc>
   1b988:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b98c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1b990:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b994:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1b998:	str	r0, [fp, #-84]	; 0xffffffac
   1b99c:	b	1c2dc <_start@@Base+0x9bcc>
   1b9a0:	ldrd	r2, [fp, #-12]
   1b9a4:	mov	r0, #0
   1b9a8:	mvn	r1, #0
   1b9ac:	and	r2, r2, r0
   1b9b0:	and	r3, r3, r1
   1b9b4:	add	r1, pc, #500	; 0x1f4
   1b9b8:	ldrd	r0, [r1]
   1b9bc:	cmp	r3, r1
   1b9c0:	cmpeq	r2, r0
   1b9c4:	bne	1ba50 <_start@@Base+0x9340>
   1b9c8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b9cc:	str	r3, [fp, #-16]
   1b9d0:	mov	r3, #4
   1b9d4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b9d8:	ldr	r1, [fp, #-16]
   1b9dc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b9e0:	bl	13db8 <_start@@Base+0x16a8>
   1b9e4:	str	r0, [fp, #-84]	; 0xffffffac
   1b9e8:	ldr	r2, [fp, #-16]
   1b9ec:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b9f0:	cmp	r2, r3
   1b9f4:	beq	1ba58 <_start@@Base+0x9348>
   1b9f8:	sub	r3, fp, #32
   1b9fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ba00:	ldr	r1, [fp, #-84]	; 0xffffffac
   1ba04:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ba08:	bl	33a78 <flatcc_json_parser_build_string@@Base>
   1ba0c:	str	r0, [fp, #-84]	; 0xffffffac
   1ba10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba14:	cmp	r3, #0
   1ba18:	beq	1c3a4 <_start@@Base+0x9c94>
   1ba1c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ba20:	ldr	r3, [r3]
   1ba24:	mov	r1, #0
   1ba28:	mov	r0, r3
   1ba2c:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1ba30:	str	r0, [fp, #-24]	; 0xffffffe8
   1ba34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba38:	cmp	r3, #0
   1ba3c:	beq	1c3a4 <_start@@Base+0x9c94>
   1ba40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ba44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba48:	str	r2, [r3]
   1ba4c:	b	1c2dc <_start@@Base+0x9bcc>
   1ba50:	nop			; (mov r0, r0)
   1ba54:	b	1ba5c <_start@@Base+0x934c>
   1ba58:	nop			; (mov r0, r0)
   1ba5c:	ldrd	r2, [fp, #-12]
   1ba60:	add	r1, pc, #336	; 0x150
   1ba64:	ldrd	r0, [r1]
   1ba68:	cmp	r3, r1
   1ba6c:	cmpeq	r2, r0
   1ba70:	bne	1bbc8 <_start@@Base+0x94b8>
   1ba74:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ba78:	str	r3, [fp, #-16]
   1ba7c:	mov	r3, #8
   1ba80:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ba84:	ldr	r1, [fp, #-16]
   1ba88:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ba8c:	bl	13db8 <_start@@Base+0x16a8>
   1ba90:	str	r0, [fp, #-84]	; 0xffffffac
   1ba94:	ldr	r2, [fp, #-16]
   1ba98:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ba9c:	cmp	r2, r3
   1baa0:	beq	1bb84 <_start@@Base+0x9474>
   1baa4:	mov	r2, #0
   1baa8:	mov	r3, #0
   1baac:	strd	r2, [fp, #-44]	; 0xffffffd4
   1bab0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bab4:	str	r3, [fp, #-16]
   1bab8:	sub	r3, fp, #44	; 0x2c
   1babc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bac0:	ldr	r1, [fp, #-16]
   1bac4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bac8:	bl	14924 <_start@@Base+0x2214>
   1bacc:	str	r0, [fp, #-84]	; 0xffffffac
   1bad0:	ldr	r2, [fp, #-16]
   1bad4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bad8:	cmp	r2, r3
   1badc:	bne	1bb2c <_start@@Base+0x941c>
   1bae0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bae4:	str	r3, [fp, #-16]
   1bae8:	sub	r3, fp, #44	; 0x2c
   1baec:	str	r3, [sp]
   1baf0:	ldr	r3, [pc, #204]	; 1bbc4 <_start@@Base+0x94b4>
   1baf4:	add	r3, pc, r3
   1baf8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bafc:	ldr	r1, [fp, #-16]
   1bb00:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bb04:	bl	154c0 <_start@@Base+0x2db0>
   1bb08:	str	r0, [fp, #-84]	; 0xffffffac
   1bb0c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1bb10:	ldr	r3, [fp, #-16]
   1bb14:	cmp	r2, r3
   1bb18:	beq	1c3a4 <_start@@Base+0x9c94>
   1bb1c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1bb20:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1bb24:	cmp	r2, r3
   1bb28:	beq	1c3a4 <_start@@Base+0x9c94>
   1bb2c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1bb30:	orrs	r3, r2, r3
   1bb34:	bne	1bb4c <_start@@Base+0x943c>
   1bb38:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bb3c:	ldr	r3, [r3, #8]
   1bb40:	and	r3, r3, #2
   1bb44:	cmp	r3, #0
   1bb48:	beq	1c2dc <_start@@Base+0x9bcc>
   1bb4c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bb50:	ldr	r0, [r3]
   1bb54:	mov	r3, #8
   1bb58:	mov	r2, #8
   1bb5c:	mov	r1, #3
   1bb60:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1bb64:	str	r0, [fp, #-20]	; 0xffffffec
   1bb68:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bb6c:	cmp	r3, #0
   1bb70:	beq	1c370 <_start@@Base+0x9c60>
   1bb74:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1bb78:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb7c:	bl	12bc0 <_start@@Base+0x4b0>
   1bb80:	b	1c2dc <_start@@Base+0x9bcc>
   1bb84:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bb88:	ldr	r1, [fp, #-84]	; 0xffffffac
   1bb8c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bb90:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1bb94:	str	r0, [fp, #-84]	; 0xffffffac
   1bb98:	b	1c2dc <_start@@Base+0x9bcc>
   1bb9c:	nop			; (mov r0, r0)
   1bba0:			; <UNDEFINED> instruction: 0xffffffff
   1bba4:	cmnvs	r3, #-2013265919	; 0x88000001
   1bba8:	teqcc	r2, r4, lsr r3
   1bbac:	cmnvs	r1, r1, ror #2
   1bbb0:	andeq	r0, r0, r0
   1bbb4:	cmnvs	r1, r1, ror #2
   1bbb8:	teqcc	r2, r4, lsr r3
   1bbbc:	rsbvs	r6, r2, #536870918	; 0x20000006
   1bbc0:	ldrdeq	ip, [r2], -r8
   1bbc4:	andeq	ip, r2, ip, asr #13
   1bbc8:	ldrd	r2, [fp, #-12]
   1bbcc:	mov	r0, #0
   1bbd0:	mvn	r1, #0
   1bbd4:	and	r2, r2, r0
   1bbd8:	and	r3, r3, r1
   1bbdc:	add	r1, pc, #876	; 0x36c
   1bbe0:	ldrd	r0, [r1]
   1bbe4:	cmp	r3, r1
   1bbe8:	cmpeq	r2, r0
   1bbec:	bne	1bc90 <_start@@Base+0x9580>
   1bbf0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bbf4:	str	r3, [fp, #-16]
   1bbf8:	mov	r3, #4
   1bbfc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bc00:	ldr	r1, [fp, #-16]
   1bc04:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bc08:	bl	13db8 <_start@@Base+0x16a8>
   1bc0c:	str	r0, [fp, #-84]	; 0xffffffac
   1bc10:	ldr	r2, [fp, #-16]
   1bc14:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bc18:	cmp	r2, r3
   1bc1c:	beq	1bc78 <_start@@Base+0x9568>
   1bc20:	sub	r3, fp, #32
   1bc24:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bc28:	ldr	r1, [fp, #-84]	; 0xffffffac
   1bc2c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bc30:	bl	33a78 <flatcc_json_parser_build_string@@Base>
   1bc34:	str	r0, [fp, #-84]	; 0xffffffac
   1bc38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bc3c:	cmp	r3, #0
   1bc40:	beq	1c3a4 <_start@@Base+0x9c94>
   1bc44:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bc48:	ldr	r3, [r3]
   1bc4c:	mov	r1, #2
   1bc50:	mov	r0, r3
   1bc54:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1bc58:	str	r0, [fp, #-24]	; 0xffffffe8
   1bc5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bc60:	cmp	r3, #0
   1bc64:	beq	1c3a4 <_start@@Base+0x9c94>
   1bc68:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bc6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bc70:	str	r2, [r3]
   1bc74:	b	1c2dc <_start@@Base+0x9bcc>
   1bc78:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bc7c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1bc80:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bc84:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1bc88:	str	r0, [fp, #-84]	; 0xffffffac
   1bc8c:	b	1c2dc <_start@@Base+0x9bcc>
   1bc90:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bc94:	ldr	r1, [fp, #-84]	; 0xffffffac
   1bc98:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bc9c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1bca0:	str	r0, [fp, #-84]	; 0xffffffac
   1bca4:	b	1c2dc <_start@@Base+0x9bcc>
   1bca8:	ldrd	r2, [fp, #-12]
   1bcac:	add	r1, pc, #676	; 0x2a4
   1bcb0:	ldrd	r0, [r1]
   1bcb4:	cmp	r3, r1
   1bcb8:	cmpeq	r2, r0
   1bcbc:	bne	1bf68 <_start@@Base+0x9858>
   1bcc0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bcc4:	str	r3, [fp, #-16]
   1bcc8:	mov	r3, #8
   1bccc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bcd0:	ldr	r1, [fp, #-16]
   1bcd4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bcd8:	bl	13db8 <_start@@Base+0x16a8>
   1bcdc:	str	r0, [fp, #-84]	; 0xffffffac
   1bce0:	ldr	r2, [fp, #-16]
   1bce4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bce8:	cmp	r2, r3
   1bcec:	beq	1bdd0 <_start@@Base+0x96c0>
   1bcf0:	mov	r2, #0
   1bcf4:	mov	r3, #0
   1bcf8:	strd	r2, [fp, #-52]	; 0xffffffcc
   1bcfc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bd00:	str	r3, [fp, #-16]
   1bd04:	sub	r3, fp, #52	; 0x34
   1bd08:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bd0c:	ldr	r1, [fp, #-16]
   1bd10:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bd14:	bl	14924 <_start@@Base+0x2214>
   1bd18:	str	r0, [fp, #-84]	; 0xffffffac
   1bd1c:	ldr	r2, [fp, #-16]
   1bd20:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bd24:	cmp	r2, r3
   1bd28:	bne	1bd78 <_start@@Base+0x9668>
   1bd2c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bd30:	str	r3, [fp, #-16]
   1bd34:	sub	r3, fp, #52	; 0x34
   1bd38:	str	r3, [sp]
   1bd3c:	ldr	r3, [pc, #540]	; 1bf60 <_start@@Base+0x9850>
   1bd40:	add	r3, pc, r3
   1bd44:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bd48:	ldr	r1, [fp, #-16]
   1bd4c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bd50:	bl	154c0 <_start@@Base+0x2db0>
   1bd54:	str	r0, [fp, #-84]	; 0xffffffac
   1bd58:	ldr	r2, [fp, #-84]	; 0xffffffac
   1bd5c:	ldr	r3, [fp, #-16]
   1bd60:	cmp	r2, r3
   1bd64:	beq	1c3a4 <_start@@Base+0x9c94>
   1bd68:	ldr	r2, [fp, #-84]	; 0xffffffac
   1bd6c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1bd70:	cmp	r2, r3
   1bd74:	beq	1c3a4 <_start@@Base+0x9c94>
   1bd78:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1bd7c:	orrs	r3, r2, r3
   1bd80:	bne	1bd98 <_start@@Base+0x9688>
   1bd84:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bd88:	ldr	r3, [r3, #8]
   1bd8c:	and	r3, r3, #2
   1bd90:	cmp	r3, #0
   1bd94:	beq	1c2dc <_start@@Base+0x9bcc>
   1bd98:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bd9c:	ldr	r0, [r3]
   1bda0:	mov	r3, #8
   1bda4:	mov	r2, #8
   1bda8:	mov	r1, #5
   1bdac:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1bdb0:	str	r0, [fp, #-20]	; 0xffffffec
   1bdb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bdb8:	cmp	r3, #0
   1bdbc:	beq	1c378 <_start@@Base+0x9c68>
   1bdc0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1bdc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bdc8:	bl	12bc0 <_start@@Base+0x4b0>
   1bdcc:	b	1c2dc <_start@@Base+0x9bcc>
   1bdd0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bdd4:	add	r3, r3, #8
   1bdd8:	str	r3, [fp, #-84]	; 0xffffffac
   1bddc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1bde0:	ldr	r0, [fp, #-84]	; 0xffffffac
   1bde4:	bl	137ec <_start@@Base+0x10dc>
   1bde8:	strd	r0, [fp, #-12]
   1bdec:	ldrd	r2, [fp, #-12]
   1bdf0:	mov	r0, #0
   1bdf4:	mov	r1, #-16777216	; 0xff000000
   1bdf8:	and	r2, r2, r0
   1bdfc:	and	r3, r3, r1
   1be00:	cmp	r3, #889192448	; 0x35000000
   1be04:	cmpeq	r2, #0
   1be08:	bne	1bf34 <_start@@Base+0x9824>
   1be0c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1be10:	str	r3, [fp, #-16]
   1be14:	mov	r3, #1
   1be18:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1be1c:	ldr	r1, [fp, #-16]
   1be20:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1be24:	bl	13db8 <_start@@Base+0x16a8>
   1be28:	str	r0, [fp, #-84]	; 0xffffffac
   1be2c:	ldr	r2, [fp, #-16]
   1be30:	ldr	r3, [fp, #-84]	; 0xffffffac
   1be34:	cmp	r2, r3
   1be38:	beq	1bf1c <_start@@Base+0x980c>
   1be3c:	mov	r3, #0
   1be40:	str	r3, [fp, #-56]	; 0xffffffc8
   1be44:	ldr	r3, [fp, #-84]	; 0xffffffac
   1be48:	str	r3, [fp, #-16]
   1be4c:	sub	r3, fp, #56	; 0x38
   1be50:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1be54:	ldr	r1, [fp, #-16]
   1be58:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1be5c:	bl	146b4 <_start@@Base+0x1fa4>
   1be60:	str	r0, [fp, #-84]	; 0xffffffac
   1be64:	ldr	r2, [fp, #-16]
   1be68:	ldr	r3, [fp, #-84]	; 0xffffffac
   1be6c:	cmp	r2, r3
   1be70:	bne	1bec0 <_start@@Base+0x97b0>
   1be74:	ldr	r3, [fp, #-84]	; 0xffffffac
   1be78:	str	r3, [fp, #-16]
   1be7c:	sub	r3, fp, #56	; 0x38
   1be80:	str	r3, [sp]
   1be84:	ldr	r3, [pc, #216]	; 1bf64 <_start@@Base+0x9854>
   1be88:	add	r3, pc, r3
   1be8c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1be90:	ldr	r1, [fp, #-16]
   1be94:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1be98:	bl	14f54 <_start@@Base+0x2844>
   1be9c:	str	r0, [fp, #-84]	; 0xffffffac
   1bea0:	ldr	r2, [fp, #-84]	; 0xffffffac
   1bea4:	ldr	r3, [fp, #-16]
   1bea8:	cmp	r2, r3
   1beac:	beq	1c3a4 <_start@@Base+0x9c94>
   1beb0:	ldr	r2, [fp, #-84]	; 0xffffffac
   1beb4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1beb8:	cmp	r2, r3
   1bebc:	beq	1c3a4 <_start@@Base+0x9c94>
   1bec0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bec4:	cmp	r3, #0
   1bec8:	bne	1bee0 <_start@@Base+0x97d0>
   1becc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bed0:	ldr	r3, [r3, #8]
   1bed4:	and	r3, r3, #2
   1bed8:	cmp	r3, #0
   1bedc:	beq	1c2dc <_start@@Base+0x9bcc>
   1bee0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bee4:	ldr	r0, [r3]
   1bee8:	mov	r3, #4
   1beec:	mov	r2, #4
   1bef0:	mov	r1, #6
   1bef4:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1bef8:	str	r0, [fp, #-20]	; 0xffffffec
   1befc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bf00:	cmp	r3, #0
   1bf04:	beq	1c380 <_start@@Base+0x9c70>
   1bf08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bf0c:	mov	r1, r3
   1bf10:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bf14:	bl	1292c <_start@@Base+0x21c>
   1bf18:	b	1c2dc <_start@@Base+0x9bcc>
   1bf1c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bf20:	ldr	r1, [fp, #-84]	; 0xffffffac
   1bf24:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bf28:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1bf2c:	str	r0, [fp, #-84]	; 0xffffffac
   1bf30:	b	1c2dc <_start@@Base+0x9bcc>
   1bf34:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bf38:	ldr	r1, [fp, #-84]	; 0xffffffac
   1bf3c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bf40:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1bf44:	str	r0, [fp, #-84]	; 0xffffffac
   1bf48:	b	1c2dc <_start@@Base+0x9bcc>
   1bf4c:	nop			; (mov r0, r0)
   1bf50:	andeq	r0, r0, r0
   1bf54:	rsbvs	r6, r2, #536870918	; 0x20000006
   1bf58:	teqcc	r2, r4, lsr r3
   1bf5c:	cmnvs	r3, #-1946157055	; 0x8c000001
   1bf60:	andeq	ip, r2, ip, lsl #9
   1bf64:	andeq	ip, r2, r0, asr r3
   1bf68:	ldrd	r2, [fp, #-12]
   1bf6c:	mov	r0, #0
   1bf70:	mvn	r1, #0
   1bf74:	and	r2, r2, r0
   1bf78:	and	r3, r3, r1
   1bf7c:	add	r1, pc, #980	; 0x3d4
   1bf80:	ldrd	r0, [r1]
   1bf84:	cmp	r3, r1
   1bf88:	cmpeq	r2, r0
   1bf8c:	bne	1c018 <_start@@Base+0x9908>
   1bf90:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bf94:	str	r3, [fp, #-16]
   1bf98:	mov	r3, #4
   1bf9c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bfa0:	ldr	r1, [fp, #-16]
   1bfa4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bfa8:	bl	13db8 <_start@@Base+0x16a8>
   1bfac:	str	r0, [fp, #-84]	; 0xffffffac
   1bfb0:	ldr	r2, [fp, #-16]
   1bfb4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bfb8:	cmp	r2, r3
   1bfbc:	beq	1c020 <_start@@Base+0x9910>
   1bfc0:	sub	r3, fp, #32
   1bfc4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bfc8:	ldr	r1, [fp, #-84]	; 0xffffffac
   1bfcc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bfd0:	bl	33a78 <flatcc_json_parser_build_string@@Base>
   1bfd4:	str	r0, [fp, #-84]	; 0xffffffac
   1bfd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bfdc:	cmp	r3, #0
   1bfe0:	beq	1c3a4 <_start@@Base+0x9c94>
   1bfe4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bfe8:	ldr	r3, [r3]
   1bfec:	mov	r1, #4
   1bff0:	mov	r0, r3
   1bff4:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1bff8:	str	r0, [fp, #-24]	; 0xffffffe8
   1bffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c000:	cmp	r3, #0
   1c004:	beq	1c3a4 <_start@@Base+0x9c94>
   1c008:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c00c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c010:	str	r2, [r3]
   1c014:	b	1c2dc <_start@@Base+0x9bcc>
   1c018:	nop			; (mov r0, r0)
   1c01c:	b	1c024 <_start@@Base+0x9914>
   1c020:	nop			; (mov r0, r0)
   1c024:	ldrd	r2, [fp, #-12]
   1c028:	add	r1, pc, #816	; 0x330
   1c02c:	ldrd	r0, [r1]
   1c030:	cmp	r3, r1
   1c034:	cmpeq	r2, r0
   1c038:	bne	1c2c8 <_start@@Base+0x9bb8>
   1c03c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c040:	str	r3, [fp, #-16]
   1c044:	mov	r3, #8
   1c048:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c04c:	ldr	r1, [fp, #-16]
   1c050:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1c054:	bl	13db8 <_start@@Base+0x16a8>
   1c058:	str	r0, [fp, #-84]	; 0xffffffac
   1c05c:	ldr	r2, [fp, #-16]
   1c060:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c064:	cmp	r2, r3
   1c068:	beq	1c14c <_start@@Base+0x9a3c>
   1c06c:	mov	r2, #0
   1c070:	mov	r3, #0
   1c074:	strd	r2, [fp, #-68]	; 0xffffffbc
   1c078:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c07c:	str	r3, [fp, #-16]
   1c080:	sub	r3, fp, #68	; 0x44
   1c084:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c088:	ldr	r1, [fp, #-16]
   1c08c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1c090:	bl	14924 <_start@@Base+0x2214>
   1c094:	str	r0, [fp, #-84]	; 0xffffffac
   1c098:	ldr	r2, [fp, #-16]
   1c09c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c0a0:	cmp	r2, r3
   1c0a4:	bne	1c0f4 <_start@@Base+0x99e4>
   1c0a8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c0ac:	str	r3, [fp, #-16]
   1c0b0:	sub	r3, fp, #68	; 0x44
   1c0b4:	str	r3, [sp]
   1c0b8:	ldr	r3, [pc, #680]	; 1c368 <_start@@Base+0x9c58>
   1c0bc:	add	r3, pc, r3
   1c0c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c0c4:	ldr	r1, [fp, #-16]
   1c0c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1c0cc:	bl	154c0 <_start@@Base+0x2db0>
   1c0d0:	str	r0, [fp, #-84]	; 0xffffffac
   1c0d4:	ldr	r2, [fp, #-84]	; 0xffffffac
   1c0d8:	ldr	r3, [fp, #-16]
   1c0dc:	cmp	r2, r3
   1c0e0:	beq	1c3a4 <_start@@Base+0x9c94>
   1c0e4:	ldr	r2, [fp, #-84]	; 0xffffffac
   1c0e8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1c0ec:	cmp	r2, r3
   1c0f0:	beq	1c3a4 <_start@@Base+0x9c94>
   1c0f4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1c0f8:	orrs	r3, r2, r3
   1c0fc:	bne	1c114 <_start@@Base+0x9a04>
   1c100:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c104:	ldr	r3, [r3, #8]
   1c108:	and	r3, r3, #2
   1c10c:	cmp	r3, #0
   1c110:	beq	1c2dc <_start@@Base+0x9bcc>
   1c114:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c118:	ldr	r0, [r3]
   1c11c:	mov	r3, #8
   1c120:	mov	r2, #8
   1c124:	mov	r1, #7
   1c128:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1c12c:	str	r0, [fp, #-20]	; 0xffffffec
   1c130:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c134:	cmp	r3, #0
   1c138:	beq	1c388 <_start@@Base+0x9c78>
   1c13c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1c140:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c144:	bl	12bc0 <_start@@Base+0x4b0>
   1c148:	b	1c2dc <_start@@Base+0x9bcc>
   1c14c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c150:	add	r3, r3, #8
   1c154:	str	r3, [fp, #-84]	; 0xffffffac
   1c158:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1c15c:	ldr	r0, [fp, #-84]	; 0xffffffac
   1c160:	bl	137ec <_start@@Base+0x10dc>
   1c164:	strd	r0, [fp, #-12]
   1c168:	ldrd	r2, [fp, #-12]
   1c16c:	mov	r0, #0
   1c170:	mov	r1, #-16777216	; 0xff000000
   1c174:	and	r2, r2, r0
   1c178:	and	r3, r3, r1
   1c17c:	cmp	r3, #889192448	; 0x35000000
   1c180:	cmpeq	r2, #0
   1c184:	bne	1c2b0 <_start@@Base+0x9ba0>
   1c188:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c18c:	str	r3, [fp, #-16]
   1c190:	mov	r3, #1
   1c194:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c198:	ldr	r1, [fp, #-16]
   1c19c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1c1a0:	bl	13db8 <_start@@Base+0x16a8>
   1c1a4:	str	r0, [fp, #-84]	; 0xffffffac
   1c1a8:	ldr	r2, [fp, #-16]
   1c1ac:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c1b0:	cmp	r2, r3
   1c1b4:	beq	1c298 <_start@@Base+0x9b88>
   1c1b8:	mov	r3, #0
   1c1bc:	str	r3, [fp, #-72]	; 0xffffffb8
   1c1c0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c1c4:	str	r3, [fp, #-16]
   1c1c8:	sub	r3, fp, #72	; 0x48
   1c1cc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c1d0:	ldr	r1, [fp, #-16]
   1c1d4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1c1d8:	bl	146b4 <_start@@Base+0x1fa4>
   1c1dc:	str	r0, [fp, #-84]	; 0xffffffac
   1c1e0:	ldr	r2, [fp, #-16]
   1c1e4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c1e8:	cmp	r2, r3
   1c1ec:	bne	1c23c <_start@@Base+0x9b2c>
   1c1f0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c1f4:	str	r3, [fp, #-16]
   1c1f8:	sub	r3, fp, #72	; 0x48
   1c1fc:	str	r3, [sp]
   1c200:	ldr	r3, [pc, #356]	; 1c36c <_start@@Base+0x9c5c>
   1c204:	add	r3, pc, r3
   1c208:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c20c:	ldr	r1, [fp, #-16]
   1c210:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1c214:	bl	14f54 <_start@@Base+0x2844>
   1c218:	str	r0, [fp, #-84]	; 0xffffffac
   1c21c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1c220:	ldr	r3, [fp, #-16]
   1c224:	cmp	r2, r3
   1c228:	beq	1c3a4 <_start@@Base+0x9c94>
   1c22c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1c230:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1c234:	cmp	r2, r3
   1c238:	beq	1c3a4 <_start@@Base+0x9c94>
   1c23c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c240:	cmp	r3, #0
   1c244:	bne	1c25c <_start@@Base+0x9b4c>
   1c248:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c24c:	ldr	r3, [r3, #8]
   1c250:	and	r3, r3, #2
   1c254:	cmp	r3, #0
   1c258:	beq	1c2dc <_start@@Base+0x9bcc>
   1c25c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c260:	ldr	r0, [r3]
   1c264:	mov	r3, #4
   1c268:	mov	r2, #4
   1c26c:	mov	r1, #8
   1c270:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1c274:	str	r0, [fp, #-20]	; 0xffffffec
   1c278:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c27c:	cmp	r3, #0
   1c280:	beq	1c390 <_start@@Base+0x9c80>
   1c284:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c288:	mov	r1, r3
   1c28c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c290:	bl	1292c <_start@@Base+0x21c>
   1c294:	b	1c2dc <_start@@Base+0x9bcc>
   1c298:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c29c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1c2a0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1c2a4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1c2a8:	str	r0, [fp, #-84]	; 0xffffffac
   1c2ac:	b	1c2dc <_start@@Base+0x9bcc>
   1c2b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c2b4:	ldr	r1, [fp, #-84]	; 0xffffffac
   1c2b8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1c2bc:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1c2c0:	str	r0, [fp, #-84]	; 0xffffffac
   1c2c4:	b	1c2dc <_start@@Base+0x9bcc>
   1c2c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c2cc:	ldr	r1, [fp, #-84]	; 0xffffffac
   1c2d0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1c2d4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1c2d8:	str	r0, [fp, #-84]	; 0xffffffac
   1c2dc:	sub	r3, fp, #28
   1c2e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c2e4:	ldr	r1, [fp, #-84]	; 0xffffffac
   1c2e8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1c2ec:	bl	13a00 <_start@@Base+0x12f0>
   1c2f0:	str	r0, [fp, #-84]	; 0xffffffac
   1c2f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c2f8:	cmp	r3, #0
   1c2fc:	bne	1b7d0 <_start@@Base+0x90c0>
   1c300:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c304:	ldr	r3, [r3, #24]
   1c308:	cmp	r3, #0
   1c30c:	bne	1c398 <_start@@Base+0x9c88>
   1c310:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c314:	ldr	r3, [r3]
   1c318:	mov	r0, r3
   1c31c:	bl	29748 <flatcc_builder_end_table@@Base>
   1c320:	mov	r2, r0
   1c324:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1c328:	str	r2, [r3]
   1c32c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1c330:	ldr	r3, [r3]
   1c334:	cmp	r3, #0
   1c338:	beq	1c3a0 <_start@@Base+0x9c90>
   1c33c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c340:	b	1c3bc <_start@@Base+0x9cac>
   1c344:	nop			; (mov r0, r0)
   1c348:	b	1c3a4 <_start@@Base+0x9c94>
   1c34c:	nop			; (mov r0, r0)
   1c350:	b	1c3a4 <_start@@Base+0x9c94>
   1c354:	nop			; (mov r0, r0)
   1c358:	andeq	r0, r0, r0
   1c35c:	cmnvs	r3, #-1946157055	; 0x8c000001
   1c360:	teqcc	r2, r4, lsr r3
   1c364:	strbtvs	r6, [r4], #-1124	; 0xfffffb9c
   1c368:	andeq	ip, r2, r8, lsr #2
   1c36c:	andeq	fp, r2, ip, ror #31
   1c370:	nop			; (mov r0, r0)
   1c374:	b	1c3a4 <_start@@Base+0x9c94>
   1c378:	nop			; (mov r0, r0)
   1c37c:	b	1c3a4 <_start@@Base+0x9c94>
   1c380:	nop			; (mov r0, r0)
   1c384:	b	1c3a4 <_start@@Base+0x9c94>
   1c388:	nop			; (mov r0, r0)
   1c38c:	b	1c3a4 <_start@@Base+0x9c94>
   1c390:	nop			; (mov r0, r0)
   1c394:	b	1c3a4 <_start@@Base+0x9c94>
   1c398:	nop			; (mov r0, r0)
   1c39c:	b	1c3a4 <_start@@Base+0x9c94>
   1c3a0:	nop			; (mov r0, r0)
   1c3a4:	mov	r3, #33	; 0x21
   1c3a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c3ac:	ldr	r1, [fp, #-84]	; 0xffffffac
   1c3b0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1c3b4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   1c3b8:	mov	r3, r0
   1c3bc:	mov	r0, r3
   1c3c0:	sub	sp, fp, #4
   1c3c4:	pop	{fp, pc}
   1c3c8:	push	{fp, lr}
   1c3cc:	add	fp, sp, #4
   1c3d0:	sub	sp, sp, #64	; 0x40
   1c3d4:	str	r0, [fp, #-48]	; 0xffffffd0
   1c3d8:	str	r1, [fp, #-52]	; 0xffffffcc
   1c3dc:	str	r2, [fp, #-56]	; 0xffffffc8
   1c3e0:	str	r3, [fp, #-60]	; 0xffffffc4
   1c3e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c3e8:	mov	r2, #0
   1c3ec:	str	r2, [r3]
   1c3f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c3f4:	ldr	r3, [r3]
   1c3f8:	mov	r1, #2
   1c3fc:	mov	r0, r3
   1c400:	bl	28be4 <flatcc_builder_start_table@@Base>
   1c404:	mov	r3, r0
   1c408:	cmp	r3, #0
   1c40c:	bne	1c7a8 <_start@@Base+0xa098>
   1c410:	sub	r3, fp, #24
   1c414:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c418:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c41c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c420:	bl	13918 <_start@@Base+0x1208>
   1c424:	str	r0, [fp, #-52]	; 0xffffffcc
   1c428:	b	1c758 <_start@@Base+0xa048>
   1c42c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c430:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c434:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c438:	bl	13508 <_start@@Base+0xdf8>
   1c43c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c440:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1c444:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c448:	bl	137ec <_start@@Base+0x10dc>
   1c44c:	strd	r0, [fp, #-12]
   1c450:	ldrd	r2, [fp, #-12]
   1c454:	add	r1, pc, #916	; 0x394
   1c458:	ldrd	r0, [r1]
   1c45c:	cmp	r3, r1
   1c460:	cmpeq	r2, r0
   1c464:	bne	1c72c <_start@@Base+0xa01c>
   1c468:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c46c:	add	r3, r3, #8
   1c470:	str	r3, [fp, #-52]	; 0xffffffcc
   1c474:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1c478:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c47c:	bl	137ec <_start@@Base+0x10dc>
   1c480:	strd	r0, [fp, #-12]
   1c484:	ldrd	r2, [fp, #-12]
   1c488:	mvn	r0, #255	; 0xff
   1c48c:	mvn	r1, #0
   1c490:	and	r2, r2, r0
   1c494:	and	r3, r3, r1
   1c498:	add	r1, pc, #856	; 0x358
   1c49c:	ldrd	r0, [r1]
   1c4a0:	cmp	r3, r1
   1c4a4:	cmpeq	r2, r0
   1c4a8:	bne	1c5d4 <_start@@Base+0x9ec4>
   1c4ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c4b0:	str	r3, [fp, #-16]
   1c4b4:	mov	r3, #7
   1c4b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c4bc:	ldr	r1, [fp, #-16]
   1c4c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c4c4:	bl	13db8 <_start@@Base+0x16a8>
   1c4c8:	str	r0, [fp, #-52]	; 0xffffffcc
   1c4cc:	ldr	r2, [fp, #-16]
   1c4d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c4d4:	cmp	r2, r3
   1c4d8:	beq	1c5bc <_start@@Base+0x9eac>
   1c4dc:	mov	r2, #0
   1c4e0:	mov	r3, #0
   1c4e4:	strd	r2, [fp, #-36]	; 0xffffffdc
   1c4e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c4ec:	str	r3, [fp, #-16]
   1c4f0:	sub	r3, fp, #36	; 0x24
   1c4f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c4f8:	ldr	r1, [fp, #-16]
   1c4fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c500:	bl	14924 <_start@@Base+0x2214>
   1c504:	str	r0, [fp, #-52]	; 0xffffffcc
   1c508:	ldr	r2, [fp, #-16]
   1c50c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c510:	cmp	r2, r3
   1c514:	bne	1c564 <_start@@Base+0x9e54>
   1c518:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c51c:	str	r3, [fp, #-16]
   1c520:	sub	r3, fp, #36	; 0x24
   1c524:	str	r3, [sp]
   1c528:	ldr	r3, [pc, #728]	; 1c808 <_start@@Base+0xa0f8>
   1c52c:	add	r3, pc, r3
   1c530:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c534:	ldr	r1, [fp, #-16]
   1c538:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c53c:	bl	154c0 <_start@@Base+0x2db0>
   1c540:	str	r0, [fp, #-52]	; 0xffffffcc
   1c544:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c548:	ldr	r3, [fp, #-16]
   1c54c:	cmp	r2, r3
   1c550:	beq	1c7cc <_start@@Base+0xa0bc>
   1c554:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c558:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c55c:	cmp	r2, r3
   1c560:	beq	1c7cc <_start@@Base+0xa0bc>
   1c564:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1c568:	orrs	r3, r2, r3
   1c56c:	bne	1c584 <_start@@Base+0x9e74>
   1c570:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c574:	ldr	r3, [r3, #8]
   1c578:	and	r3, r3, #2
   1c57c:	cmp	r3, #0
   1c580:	beq	1c740 <_start@@Base+0xa030>
   1c584:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c588:	ldr	r0, [r3]
   1c58c:	mov	r3, #8
   1c590:	mov	r2, #8
   1c594:	mov	r1, #0
   1c598:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1c59c:	str	r0, [fp, #-20]	; 0xffffffec
   1c5a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c5a4:	cmp	r3, #0
   1c5a8:	beq	1c7b0 <_start@@Base+0xa0a0>
   1c5ac:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1c5b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c5b4:	bl	12bc0 <_start@@Base+0x4b0>
   1c5b8:	b	1c740 <_start@@Base+0xa030>
   1c5bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c5c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c5c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c5c8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1c5cc:	str	r0, [fp, #-52]	; 0xffffffcc
   1c5d0:	b	1c740 <_start@@Base+0xa030>
   1c5d4:	ldrd	r2, [fp, #-12]
   1c5d8:	add	r1, pc, #544	; 0x220
   1c5dc:	ldrd	r0, [r1]
   1c5e0:	cmp	r3, r1
   1c5e4:	cmpeq	r2, r0
   1c5e8:	bne	1c714 <_start@@Base+0xa004>
   1c5ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c5f0:	str	r3, [fp, #-16]
   1c5f4:	mov	r3, #8
   1c5f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c5fc:	ldr	r1, [fp, #-16]
   1c600:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c604:	bl	13db8 <_start@@Base+0x16a8>
   1c608:	str	r0, [fp, #-52]	; 0xffffffcc
   1c60c:	ldr	r2, [fp, #-16]
   1c610:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c614:	cmp	r2, r3
   1c618:	beq	1c6fc <_start@@Base+0x9fec>
   1c61c:	mov	r3, #0
   1c620:	str	r3, [fp, #-40]	; 0xffffffd8
   1c624:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c628:	str	r3, [fp, #-16]
   1c62c:	sub	r3, fp, #40	; 0x28
   1c630:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c634:	ldr	r1, [fp, #-16]
   1c638:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c63c:	bl	146b4 <_start@@Base+0x1fa4>
   1c640:	str	r0, [fp, #-52]	; 0xffffffcc
   1c644:	ldr	r2, [fp, #-16]
   1c648:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c64c:	cmp	r2, r3
   1c650:	bne	1c6a0 <_start@@Base+0x9f90>
   1c654:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c658:	str	r3, [fp, #-16]
   1c65c:	sub	r3, fp, #40	; 0x28
   1c660:	str	r3, [sp]
   1c664:	ldr	r3, [pc, #416]	; 1c80c <_start@@Base+0xa0fc>
   1c668:	add	r3, pc, r3
   1c66c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c670:	ldr	r1, [fp, #-16]
   1c674:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c678:	bl	14f54 <_start@@Base+0x2844>
   1c67c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c680:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c684:	ldr	r3, [fp, #-16]
   1c688:	cmp	r2, r3
   1c68c:	beq	1c7cc <_start@@Base+0xa0bc>
   1c690:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c694:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c698:	cmp	r2, r3
   1c69c:	beq	1c7cc <_start@@Base+0xa0bc>
   1c6a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c6a4:	cmp	r3, #0
   1c6a8:	bne	1c6c0 <_start@@Base+0x9fb0>
   1c6ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c6b0:	ldr	r3, [r3, #8]
   1c6b4:	and	r3, r3, #2
   1c6b8:	cmp	r3, #0
   1c6bc:	beq	1c740 <_start@@Base+0xa030>
   1c6c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c6c4:	ldr	r0, [r3]
   1c6c8:	mov	r3, #4
   1c6cc:	mov	r2, #4
   1c6d0:	mov	r1, #1
   1c6d4:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1c6d8:	str	r0, [fp, #-20]	; 0xffffffec
   1c6dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c6e0:	cmp	r3, #0
   1c6e4:	beq	1c7b8 <_start@@Base+0xa0a8>
   1c6e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c6ec:	mov	r1, r3
   1c6f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c6f4:	bl	1292c <_start@@Base+0x21c>
   1c6f8:	b	1c740 <_start@@Base+0xa030>
   1c6fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c700:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c704:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c708:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1c70c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c710:	b	1c740 <_start@@Base+0xa030>
   1c714:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c718:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c71c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c720:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1c724:	str	r0, [fp, #-52]	; 0xffffffcc
   1c728:	b	1c740 <_start@@Base+0xa030>
   1c72c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c730:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c734:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c738:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1c73c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c740:	sub	r3, fp, #24
   1c744:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c748:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c74c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c750:	bl	13a00 <_start@@Base+0x12f0>
   1c754:	str	r0, [fp, #-52]	; 0xffffffcc
   1c758:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c75c:	cmp	r3, #0
   1c760:	bne	1c42c <_start@@Base+0x9d1c>
   1c764:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c768:	ldr	r3, [r3, #24]
   1c76c:	cmp	r3, #0
   1c770:	bne	1c7c0 <_start@@Base+0xa0b0>
   1c774:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c778:	ldr	r3, [r3]
   1c77c:	mov	r0, r3
   1c780:	bl	29748 <flatcc_builder_end_table@@Base>
   1c784:	mov	r2, r0
   1c788:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c78c:	str	r2, [r3]
   1c790:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c794:	ldr	r3, [r3]
   1c798:	cmp	r3, #0
   1c79c:	beq	1c7c8 <_start@@Base+0xa0b8>
   1c7a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c7a4:	b	1c7e4 <_start@@Base+0xa0d4>
   1c7a8:	nop			; (mov r0, r0)
   1c7ac:	b	1c7cc <_start@@Base+0xa0bc>
   1c7b0:	nop			; (mov r0, r0)
   1c7b4:	b	1c7cc <_start@@Base+0xa0bc>
   1c7b8:	nop			; (mov r0, r0)
   1c7bc:	b	1c7cc <_start@@Base+0xa0bc>
   1c7c0:	nop			; (mov r0, r0)
   1c7c4:	b	1c7cc <_start@@Base+0xa0bc>
   1c7c8:	nop			; (mov r0, r0)
   1c7cc:	mov	r3, #33	; 0x21
   1c7d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c7d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c7d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c7dc:	bl	3198c <flatcc_json_parser_set_error@@Base>
   1c7e0:	mov	r3, r0
   1c7e4:	mov	r0, r3
   1c7e8:	sub	sp, fp, #4
   1c7ec:	pop	{fp, pc}
   1c7f0:	svcpl	0x00626262
   1c7f4:	cmnvs	r1, r1, ror #2
   1c7f8:	ldrbvs	r7, [r0, #-768]!	; 0xfffffd00
   1c7fc:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1c800:	cmnvs	r2, pc, asr r4
   1c804:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1c808:	ldrdeq	fp, [r2], -r0
   1c80c:	andeq	fp, r2, r0, lsr #23
   1c810:	push	{fp, lr}
   1c814:	add	fp, sp, #4
   1c818:	sub	sp, sp, #56	; 0x38
   1c81c:	str	r0, [fp, #-40]	; 0xffffffd8
   1c820:	str	r1, [fp, #-44]	; 0xffffffd4
   1c824:	str	r2, [fp, #-48]	; 0xffffffd0
   1c828:	str	r3, [fp, #-52]	; 0xffffffcc
   1c82c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c830:	mov	r2, #0
   1c834:	str	r2, [r3]
   1c838:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c83c:	ldr	r3, [r3]
   1c840:	mov	r1, #2
   1c844:	mov	r0, r3
   1c848:	bl	28be4 <flatcc_builder_start_table@@Base>
   1c84c:	mov	r3, r0
   1c850:	cmp	r3, #0
   1c854:	bne	1cc4c <_start@@Base+0xa53c>
   1c858:	sub	r3, fp, #24
   1c85c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c860:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c864:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c868:	bl	13918 <_start@@Base+0x1208>
   1c86c:	str	r0, [fp, #-44]	; 0xffffffd4
   1c870:	b	1cbfc <_start@@Base+0xa4ec>
   1c874:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c878:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c87c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c880:	bl	13508 <_start@@Base+0xdf8>
   1c884:	str	r0, [fp, #-44]	; 0xffffffd4
   1c888:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c88c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c890:	bl	137ec <_start@@Base+0x10dc>
   1c894:	strd	r0, [fp, #-12]
   1c898:	ldrd	r2, [fp, #-12]
   1c89c:	add	r1, pc, #972	; 0x3cc
   1c8a0:	ldrd	r0, [r1]
   1c8a4:	cmp	r3, r1
   1c8a8:	cmpeq	r2, r0
   1c8ac:	bne	1cbd0 <_start@@Base+0xa4c0>
   1c8b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c8b4:	add	r3, r3, #8
   1c8b8:	str	r3, [fp, #-44]	; 0xffffffd4
   1c8bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c8c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c8c4:	bl	137ec <_start@@Base+0x10dc>
   1c8c8:	strd	r0, [fp, #-12]
   1c8cc:	ldrd	r2, [fp, #-12]
   1c8d0:	add	r1, pc, #928	; 0x3a0
   1c8d4:	ldrd	r0, [r1]
   1c8d8:	cmp	r3, r1
   1c8dc:	cmpeq	r2, r0
   1c8e0:	bne	1ca68 <_start@@Base+0xa358>
   1c8e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c8e8:	add	r3, r3, #8
   1c8ec:	str	r3, [fp, #-44]	; 0xffffffd4
   1c8f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c8f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c8f8:	bl	137ec <_start@@Base+0x10dc>
   1c8fc:	strd	r0, [fp, #-12]
   1c900:	ldrd	r2, [fp, #-12]
   1c904:	mov	r0, #-16777216	; 0xff000000
   1c908:	mvn	r1, #0
   1c90c:	and	r2, r2, r0
   1c910:	and	r3, r3, r1
   1c914:	add	r1, pc, #868	; 0x364
   1c918:	ldrd	r0, [r1]
   1c91c:	cmp	r3, r1
   1c920:	cmpeq	r2, r0
   1c924:	bne	1ca50 <_start@@Base+0xa340>
   1c928:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c92c:	str	r3, [fp, #-16]
   1c930:	mov	r3, #5
   1c934:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c938:	ldr	r1, [fp, #-16]
   1c93c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c940:	bl	13db8 <_start@@Base+0x16a8>
   1c944:	str	r0, [fp, #-44]	; 0xffffffd4
   1c948:	ldr	r2, [fp, #-16]
   1c94c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c950:	cmp	r2, r3
   1c954:	beq	1ca38 <_start@@Base+0xa328>
   1c958:	mov	r3, #0
   1c95c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c960:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c964:	str	r3, [fp, #-16]
   1c968:	sub	r3, fp, #28
   1c96c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c970:	ldr	r1, [fp, #-16]
   1c974:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c978:	bl	146b4 <_start@@Base+0x1fa4>
   1c97c:	str	r0, [fp, #-44]	; 0xffffffd4
   1c980:	ldr	r2, [fp, #-16]
   1c984:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c988:	cmp	r2, r3
   1c98c:	bne	1c9dc <_start@@Base+0xa2cc>
   1c990:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c994:	str	r3, [fp, #-16]
   1c998:	sub	r3, fp, #28
   1c99c:	str	r3, [sp]
   1c9a0:	ldr	r3, [pc, #744]	; 1cc90 <_start@@Base+0xa580>
   1c9a4:	add	r3, pc, r3
   1c9a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c9ac:	ldr	r1, [fp, #-16]
   1c9b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c9b4:	bl	14f54 <_start@@Base+0x2844>
   1c9b8:	str	r0, [fp, #-44]	; 0xffffffd4
   1c9bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c9c0:	ldr	r3, [fp, #-16]
   1c9c4:	cmp	r2, r3
   1c9c8:	beq	1cc9c <_start@@Base+0xa58c>
   1c9cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c9d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c9d4:	cmp	r2, r3
   1c9d8:	beq	1cc9c <_start@@Base+0xa58c>
   1c9dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c9e0:	cmp	r3, #0
   1c9e4:	bne	1c9fc <_start@@Base+0xa2ec>
   1c9e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c9ec:	ldr	r3, [r3, #8]
   1c9f0:	and	r3, r3, #2
   1c9f4:	cmp	r3, #0
   1c9f8:	beq	1cbe4 <_start@@Base+0xa4d4>
   1c9fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ca00:	ldr	r0, [r3]
   1ca04:	mov	r3, #4
   1ca08:	mov	r2, #4
   1ca0c:	mov	r1, #1
   1ca10:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1ca14:	str	r0, [fp, #-20]	; 0xffffffec
   1ca18:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca1c:	cmp	r3, #0
   1ca20:	beq	1cc54 <_start@@Base+0xa544>
   1ca24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ca28:	mov	r1, r3
   1ca2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ca30:	bl	1292c <_start@@Base+0x21c>
   1ca34:	b	1cbe4 <_start@@Base+0xa4d4>
   1ca38:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ca3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ca40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ca44:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ca48:	str	r0, [fp, #-44]	; 0xffffffd4
   1ca4c:	b	1cbe4 <_start@@Base+0xa4d4>
   1ca50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ca54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ca58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ca5c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ca60:	str	r0, [fp, #-44]	; 0xffffffd4
   1ca64:	b	1cbe4 <_start@@Base+0xa4d4>
   1ca68:	ldrd	r2, [fp, #-12]
   1ca6c:	mvn	r0, #255	; 0xff
   1ca70:	mvn	r1, #0
   1ca74:	and	r2, r2, r0
   1ca78:	and	r3, r3, r1
   1ca7c:	add	r1, pc, #516	; 0x204
   1ca80:	ldrd	r0, [r1]
   1ca84:	cmp	r3, r1
   1ca88:	cmpeq	r2, r0
   1ca8c:	bne	1cbb8 <_start@@Base+0xa4a8>
   1ca90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ca94:	str	r3, [fp, #-16]
   1ca98:	mov	r3, #7
   1ca9c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1caa0:	ldr	r1, [fp, #-16]
   1caa4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1caa8:	bl	13db8 <_start@@Base+0x16a8>
   1caac:	str	r0, [fp, #-44]	; 0xffffffd4
   1cab0:	ldr	r2, [fp, #-16]
   1cab4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cab8:	cmp	r2, r3
   1cabc:	beq	1cba0 <_start@@Base+0xa490>
   1cac0:	mov	r2, #0
   1cac4:	mov	r3, #0
   1cac8:	strd	r2, [fp, #-36]	; 0xffffffdc
   1cacc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cad0:	str	r3, [fp, #-16]
   1cad4:	sub	r3, fp, #36	; 0x24
   1cad8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cadc:	ldr	r1, [fp, #-16]
   1cae0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cae4:	bl	14924 <_start@@Base+0x2214>
   1cae8:	str	r0, [fp, #-44]	; 0xffffffd4
   1caec:	ldr	r2, [fp, #-16]
   1caf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1caf4:	cmp	r2, r3
   1caf8:	bne	1cb48 <_start@@Base+0xa438>
   1cafc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cb00:	str	r3, [fp, #-16]
   1cb04:	sub	r3, fp, #36	; 0x24
   1cb08:	str	r3, [sp]
   1cb0c:	ldr	r3, [pc, #384]	; 1cc94 <_start@@Base+0xa584>
   1cb10:	add	r3, pc, r3
   1cb14:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cb18:	ldr	r1, [fp, #-16]
   1cb1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cb20:	bl	154c0 <_start@@Base+0x2db0>
   1cb24:	str	r0, [fp, #-44]	; 0xffffffd4
   1cb28:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cb2c:	ldr	r3, [fp, #-16]
   1cb30:	cmp	r2, r3
   1cb34:	beq	1cc9c <_start@@Base+0xa58c>
   1cb38:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cb3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1cb40:	cmp	r2, r3
   1cb44:	beq	1cc9c <_start@@Base+0xa58c>
   1cb48:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1cb4c:	orrs	r3, r2, r3
   1cb50:	bne	1cb68 <_start@@Base+0xa458>
   1cb54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cb58:	ldr	r3, [r3, #8]
   1cb5c:	and	r3, r3, #2
   1cb60:	cmp	r3, #0
   1cb64:	beq	1cbe4 <_start@@Base+0xa4d4>
   1cb68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cb6c:	ldr	r0, [r3]
   1cb70:	mov	r3, #8
   1cb74:	mov	r2, #8
   1cb78:	mov	r1, #0
   1cb7c:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1cb80:	str	r0, [fp, #-20]	; 0xffffffec
   1cb84:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cb88:	cmp	r3, #0
   1cb8c:	beq	1cc5c <_start@@Base+0xa54c>
   1cb90:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1cb94:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cb98:	bl	12bc0 <_start@@Base+0x4b0>
   1cb9c:	b	1cbe4 <_start@@Base+0xa4d4>
   1cba0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cba4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cba8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cbac:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1cbb0:	str	r0, [fp, #-44]	; 0xffffffd4
   1cbb4:	b	1cbe4 <_start@@Base+0xa4d4>
   1cbb8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cbbc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cbc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cbc4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1cbc8:	str	r0, [fp, #-44]	; 0xffffffd4
   1cbcc:	b	1cbe4 <_start@@Base+0xa4d4>
   1cbd0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cbd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cbd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cbdc:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1cbe0:	str	r0, [fp, #-44]	; 0xffffffd4
   1cbe4:	sub	r3, fp, #24
   1cbe8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cbec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cbf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cbf4:	bl	13a00 <_start@@Base+0x12f0>
   1cbf8:	str	r0, [fp, #-44]	; 0xffffffd4
   1cbfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc00:	cmp	r3, #0
   1cc04:	bne	1c874 <_start@@Base+0xa164>
   1cc08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cc0c:	ldr	r3, [r3, #24]
   1cc10:	cmp	r3, #0
   1cc14:	bne	1cc64 <_start@@Base+0xa554>
   1cc18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cc1c:	ldr	r3, [r3]
   1cc20:	mov	r0, r3
   1cc24:	bl	29748 <flatcc_builder_end_table@@Base>
   1cc28:	mov	r2, r0
   1cc2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1cc30:	str	r2, [r3]
   1cc34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1cc38:	ldr	r3, [r3]
   1cc3c:	cmp	r3, #0
   1cc40:	beq	1cc98 <_start@@Base+0xa588>
   1cc44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cc48:	b	1ccb4 <_start@@Base+0xa5a4>
   1cc4c:	nop			; (mov r0, r0)
   1cc50:	b	1cc9c <_start@@Base+0xa58c>
   1cc54:	nop			; (mov r0, r0)
   1cc58:	b	1cc9c <_start@@Base+0xa58c>
   1cc5c:	nop			; (mov r0, r0)
   1cc60:	b	1cc9c <_start@@Base+0xa58c>
   1cc64:	nop			; (mov r0, r0)
   1cc68:	b	1cc9c <_start@@Base+0xa58c>
   1cc6c:	nop			; (mov r0, r0)
   1cc70:	svcpl	0x00626262
   1cc74:	cmnvs	r1, r1, ror #2
   1cc78:	cmnvs	r2, pc, asr r4
   1cc7c:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1cc80:	movwvc	r0, #0
   1cc84:	cmnvc	r4, #112, 10	; 0x1c000000
   1cc88:	ldrbvs	r7, [r0, #-768]!	; 0xfffffd00
   1cc8c:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1cc90:	andeq	fp, r2, r0, ror r8
   1cc94:	andeq	fp, r2, r0, lsl r7
   1cc98:	nop			; (mov r0, r0)
   1cc9c:	mov	r3, #33	; 0x21
   1cca0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cca4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cca8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ccac:	bl	3198c <flatcc_json_parser_set_error@@Base>
   1ccb0:	mov	r3, r0
   1ccb4:	mov	r0, r3
   1ccb8:	sub	sp, fp, #4
   1ccbc:	pop	{fp, pc}
   1ccc0:	push	{fp, lr}
   1ccc4:	add	fp, sp, #4
   1ccc8:	sub	sp, sp, #48	; 0x30
   1cccc:	str	r0, [fp, #-32]	; 0xffffffe0
   1ccd0:	str	r1, [fp, #-36]	; 0xffffffdc
   1ccd4:	str	r2, [fp, #-40]	; 0xffffffd8
   1ccd8:	str	r3, [fp, #-44]	; 0xffffffd4
   1ccdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cce0:	mov	r2, #0
   1cce4:	str	r2, [r3]
   1cce8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ccec:	ldr	r3, [r3]
   1ccf0:	mov	r1, #3
   1ccf4:	mov	r0, r3
   1ccf8:	bl	28be4 <flatcc_builder_start_table@@Base>
   1ccfc:	mov	r3, r0
   1cd00:	cmp	r3, #0
   1cd04:	bne	1d070 <_start@@Base+0xa960>
   1cd08:	sub	r3, fp, #24
   1cd0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cd10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cd14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cd18:	bl	13918 <_start@@Base+0x1208>
   1cd1c:	str	r0, [fp, #-36]	; 0xffffffdc
   1cd20:	b	1d020 <_start@@Base+0xa910>
   1cd24:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cd28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cd2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cd30:	bl	13508 <_start@@Base+0xdf8>
   1cd34:	str	r0, [fp, #-36]	; 0xffffffdc
   1cd38:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1cd3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cd40:	bl	137ec <_start@@Base+0x10dc>
   1cd44:	strd	r0, [fp, #-12]
   1cd48:	ldrd	r2, [fp, #-12]
   1cd4c:	add	r1, pc, #852	; 0x354
   1cd50:	ldrd	r0, [r1]
   1cd54:	cmp	r3, r1
   1cd58:	cmpeq	r2, r0
   1cd5c:	bhi	1ce4c <_start@@Base+0xa73c>
   1cd60:	ldrd	r2, [fp, #-12]
   1cd64:	mov	r0, #0
   1cd68:	mvn	r1, #0
   1cd6c:	and	r2, r2, r0
   1cd70:	and	r3, r3, r1
   1cd74:	add	r1, pc, #820	; 0x334
   1cd78:	ldrd	r0, [r1]
   1cd7c:	cmp	r3, r1
   1cd80:	cmpeq	r2, r0
   1cd84:	bne	1ce34 <_start@@Base+0xa724>
   1cd88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cd8c:	str	r3, [fp, #-16]
   1cd90:	mov	r3, #4
   1cd94:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cd98:	ldr	r1, [fp, #-16]
   1cd9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cda0:	bl	13db8 <_start@@Base+0x16a8>
   1cda4:	str	r0, [fp, #-36]	; 0xffffffdc
   1cda8:	ldr	r2, [fp, #-16]
   1cdac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cdb0:	cmp	r2, r3
   1cdb4:	beq	1ce1c <_start@@Base+0xa70c>
   1cdb8:	sub	r2, fp, #28
   1cdbc:	mov	r3, #0
   1cdc0:	str	r3, [sp]
   1cdc4:	mov	r3, r2
   1cdc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cdcc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cdd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cdd4:	bl	33804 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1cdd8:	str	r0, [fp, #-36]	; 0xffffffdc
   1cddc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cde0:	cmp	r3, #0
   1cde4:	beq	1d084 <_start@@Base+0xa974>
   1cde8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cdec:	ldr	r3, [r3]
   1cdf0:	mov	r1, #0
   1cdf4:	mov	r0, r3
   1cdf8:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1cdfc:	str	r0, [fp, #-20]	; 0xffffffec
   1ce00:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ce04:	cmp	r3, #0
   1ce08:	beq	1d084 <_start@@Base+0xa974>
   1ce0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ce10:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ce14:	str	r2, [r3]
   1ce18:	b	1d008 <_start@@Base+0xa8f8>
   1ce1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ce20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ce24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ce28:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ce2c:	str	r0, [fp, #-36]	; 0xffffffdc
   1ce30:	b	1d008 <_start@@Base+0xa8f8>
   1ce34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ce38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ce3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ce40:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ce44:	str	r0, [fp, #-36]	; 0xffffffdc
   1ce48:	b	1d008 <_start@@Base+0xa8f8>
   1ce4c:	ldrd	r2, [fp, #-12]
   1ce50:	mvn	r0, #255	; 0xff
   1ce54:	mvn	r1, #0
   1ce58:	and	r2, r2, r0
   1ce5c:	and	r3, r3, r1
   1ce60:	add	r1, pc, #592	; 0x250
   1ce64:	ldrd	r0, [r1]
   1ce68:	cmp	r3, r1
   1ce6c:	cmpeq	r2, r0
   1ce70:	bne	1cf20 <_start@@Base+0xa810>
   1ce74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ce78:	str	r3, [fp, #-16]
   1ce7c:	mov	r3, #7
   1ce80:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ce84:	ldr	r1, [fp, #-16]
   1ce88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ce8c:	bl	13db8 <_start@@Base+0x16a8>
   1ce90:	str	r0, [fp, #-36]	; 0xffffffdc
   1ce94:	ldr	r2, [fp, #-16]
   1ce98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ce9c:	cmp	r2, r3
   1cea0:	beq	1cf08 <_start@@Base+0xa7f8>
   1cea4:	sub	r2, fp, #28
   1cea8:	mov	r3, #1
   1ceac:	str	r3, [sp]
   1ceb0:	mov	r3, r2
   1ceb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ceb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cebc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cec0:	bl	33804 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1cec4:	str	r0, [fp, #-36]	; 0xffffffdc
   1cec8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cecc:	cmp	r3, #0
   1ced0:	beq	1d084 <_start@@Base+0xa974>
   1ced4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ced8:	ldr	r3, [r3]
   1cedc:	mov	r1, #1
   1cee0:	mov	r0, r3
   1cee4:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1cee8:	str	r0, [fp, #-20]	; 0xffffffec
   1ceec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cef0:	cmp	r3, #0
   1cef4:	beq	1d084 <_start@@Base+0xa974>
   1cef8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cefc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cf00:	str	r2, [r3]
   1cf04:	b	1d008 <_start@@Base+0xa8f8>
   1cf08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cf0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cf10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cf14:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1cf18:	str	r0, [fp, #-36]	; 0xffffffdc
   1cf1c:	b	1d008 <_start@@Base+0xa8f8>
   1cf20:	ldrd	r2, [fp, #-12]
   1cf24:	ldr	r0, [pc, #412]	; 1d0c8 <_start@@Base+0xa9b8>
   1cf28:	mvn	r1, #0
   1cf2c:	and	r2, r2, r0
   1cf30:	and	r3, r3, r1
   1cf34:	add	r1, pc, #388	; 0x184
   1cf38:	ldrd	r0, [r1]
   1cf3c:	cmp	r3, r1
   1cf40:	cmpeq	r2, r0
   1cf44:	bne	1cff4 <_start@@Base+0xa8e4>
   1cf48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cf4c:	str	r3, [fp, #-16]
   1cf50:	mov	r3, #6
   1cf54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cf58:	ldr	r1, [fp, #-16]
   1cf5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cf60:	bl	13db8 <_start@@Base+0x16a8>
   1cf64:	str	r0, [fp, #-36]	; 0xffffffdc
   1cf68:	ldr	r2, [fp, #-16]
   1cf6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cf70:	cmp	r2, r3
   1cf74:	beq	1cfdc <_start@@Base+0xa8cc>
   1cf78:	sub	r2, fp, #28
   1cf7c:	mov	r3, #0
   1cf80:	str	r3, [sp]
   1cf84:	mov	r3, r2
   1cf88:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cf8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cf90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cf94:	bl	33804 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1cf98:	str	r0, [fp, #-36]	; 0xffffffdc
   1cf9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cfa0:	cmp	r3, #0
   1cfa4:	beq	1d084 <_start@@Base+0xa974>
   1cfa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cfac:	ldr	r3, [r3]
   1cfb0:	mov	r1, #2
   1cfb4:	mov	r0, r3
   1cfb8:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1cfbc:	str	r0, [fp, #-20]	; 0xffffffec
   1cfc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfc4:	cmp	r3, #0
   1cfc8:	beq	1d084 <_start@@Base+0xa974>
   1cfcc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cfd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfd4:	str	r2, [r3]
   1cfd8:	b	1d008 <_start@@Base+0xa8f8>
   1cfdc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cfe0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cfe4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cfe8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1cfec:	str	r0, [fp, #-36]	; 0xffffffdc
   1cff0:	b	1d008 <_start@@Base+0xa8f8>
   1cff4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cff8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d000:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1d004:	str	r0, [fp, #-36]	; 0xffffffdc
   1d008:	sub	r3, fp, #24
   1d00c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d010:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d014:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d018:	bl	13a00 <_start@@Base+0x12f0>
   1d01c:	str	r0, [fp, #-36]	; 0xffffffdc
   1d020:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d024:	cmp	r3, #0
   1d028:	bne	1cd24 <_start@@Base+0xa614>
   1d02c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d030:	ldr	r3, [r3, #24]
   1d034:	cmp	r3, #0
   1d038:	bne	1d078 <_start@@Base+0xa968>
   1d03c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d040:	ldr	r3, [r3]
   1d044:	mov	r0, r3
   1d048:	bl	29748 <flatcc_builder_end_table@@Base>
   1d04c:	mov	r2, r0
   1d050:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d054:	str	r2, [r3]
   1d058:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d05c:	ldr	r3, [r3]
   1d060:	cmp	r3, #0
   1d064:	beq	1d080 <_start@@Base+0xa970>
   1d068:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d06c:	b	1d09c <_start@@Base+0xa98c>
   1d070:	nop			; (mov r0, r0)
   1d074:	b	1d084 <_start@@Base+0xa974>
   1d078:	nop			; (mov r0, r0)
   1d07c:	b	1d084 <_start@@Base+0xa974>
   1d080:	nop			; (mov r0, r0)
   1d084:	mov	r3, #33	; 0x21
   1d088:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d08c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d090:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d094:	bl	3198c <flatcc_json_parser_set_error@@Base>
   1d098:	mov	r3, r0
   1d09c:	mov	r0, r3
   1d0a0:	sub	sp, fp, #4
   1d0a4:	pop	{fp, pc}
   1d0a8:	strbvs	pc, [r3, #-4095]!	; 0xfffff001	; <UNPREDICTABLE>
   1d0ac:	mcrvs	3, 3, r7, cr5, cr4, {3}
   1d0b0:	andeq	r0, r0, r0
   1d0b4:	strbtvs	r7, [r1], #-1121	; 0xfffffb9f
   1d0b8:	cmnvs	r4, r0, lsl #2
   1d0bc:	ldrbvc	r6, [r2, #-3172]!	; 0xfffff39c
   1d0c0:	strbvs	r0, [r4, #-0]!
   1d0c4:	mcrvs	3, 3, r7, cr5, cr4, {3}
   1d0c8:			; <UNDEFINED> instruction: 0xffff0000
   1d0cc:	push	{fp, lr}
   1d0d0:	add	fp, sp, #4
   1d0d4:	sub	sp, sp, #160	; 0xa0
   1d0d8:	str	r0, [fp, #-136]	; 0xffffff78
   1d0dc:	str	r1, [fp, #-140]	; 0xffffff74
   1d0e0:	str	r2, [fp, #-144]	; 0xffffff70
   1d0e4:	str	r3, [fp, #-148]	; 0xffffff6c
   1d0e8:	ldr	r3, [fp, #-148]	; 0xffffff6c
   1d0ec:	mov	r2, #0
   1d0f0:	str	r2, [r3]
   1d0f4:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d0f8:	ldr	r3, [r3]
   1d0fc:	mov	r1, #36	; 0x24
   1d100:	mov	r0, r3
   1d104:	bl	28be4 <flatcc_builder_start_table@@Base>
   1d108:	mov	r3, r0
   1d10c:	cmp	r3, #0
   1d110:	bne	209a4 <_start@@Base+0xe294>
   1d114:	sub	r3, fp, #36	; 0x24
   1d118:	str	r3, [sp]
   1d11c:	mov	r3, #1
   1d120:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d124:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d128:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d12c:	bl	33c74 <flatcc_json_parser_prepare_unions@@Base>
   1d130:	mov	r2, r0
   1d134:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d138:	cmp	r2, r3
   1d13c:	beq	209ac <_start@@Base+0xe29c>
   1d140:	sub	r3, fp, #28
   1d144:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d148:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d14c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d150:	bl	13918 <_start@@Base+0x1208>
   1d154:	str	r0, [fp, #-140]	; 0xffffff74
   1d158:	b	20900 <_start@@Base+0xe1f0>
   1d15c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d160:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d164:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d168:	bl	13508 <_start@@Base+0xdf8>
   1d16c:	str	r0, [fp, #-140]	; 0xffffff74
   1d170:	ldr	r1, [fp, #-144]	; 0xffffff70
   1d174:	ldr	r0, [fp, #-140]	; 0xffffff74
   1d178:	bl	137ec <_start@@Base+0x10dc>
   1d17c:	strd	r0, [fp, #-12]
   1d180:	ldrd	r2, [fp, #-12]
   1d184:	add	r1, pc, #796	; 0x31c
   1d188:	ldrd	r0, [r1]
   1d18c:	cmp	r3, r1
   1d190:	cmpeq	r2, r0
   1d194:	bhi	1e378 <_start@@Base+0xbc68>
   1d198:	ldrd	r2, [fp, #-12]
   1d19c:	add	r1, pc, #780	; 0x30c
   1d1a0:	ldrd	r0, [r1]
   1d1a4:	cmp	r3, r1
   1d1a8:	cmpeq	r2, r0
   1d1ac:	bhi	1db78 <_start@@Base+0xb468>
   1d1b0:	ldrd	r2, [fp, #-12]
   1d1b4:	add	r1, pc, #764	; 0x2fc
   1d1b8:	ldrd	r0, [r1]
   1d1bc:	cmp	r3, r1
   1d1c0:	cmpeq	r2, r0
   1d1c4:	bhi	1d3f8 <_start@@Base+0xace8>
   1d1c8:	ldrd	r2, [fp, #-12]
   1d1cc:	mov	r0, #-16777216	; 0xff000000
   1d1d0:	mvn	r1, #0
   1d1d4:	and	r2, r2, r0
   1d1d8:	and	r3, r3, r1
   1d1dc:	add	r1, pc, #732	; 0x2dc
   1d1e0:	ldrd	r0, [r1]
   1d1e4:	cmp	r3, r1
   1d1e8:	cmpeq	r2, r0
   1d1ec:	bne	1d290 <_start@@Base+0xab80>
   1d1f0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d1f4:	str	r3, [fp, #-16]
   1d1f8:	mov	r3, #5
   1d1fc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d200:	ldr	r1, [fp, #-16]
   1d204:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d208:	bl	13db8 <_start@@Base+0x16a8>
   1d20c:	str	r0, [fp, #-140]	; 0xffffff74
   1d210:	ldr	r2, [fp, #-16]
   1d214:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d218:	cmp	r2, r3
   1d21c:	beq	1d278 <_start@@Base+0xab68>
   1d220:	sub	r3, fp, #32
   1d224:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d228:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d22c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d230:	bl	1d0cc <_start@@Base+0xa9bc>
   1d234:	str	r0, [fp, #-140]	; 0xffffff74
   1d238:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d23c:	cmp	r3, #0
   1d240:	beq	20af8 <_start@@Base+0xe3e8>
   1d244:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d248:	ldr	r3, [r3]
   1d24c:	mov	r1, #12
   1d250:	mov	r0, r3
   1d254:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1d258:	str	r0, [fp, #-20]	; 0xffffffec
   1d25c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d260:	cmp	r3, #0
   1d264:	beq	20af8 <_start@@Base+0xe3e8>
   1d268:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d26c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d270:	str	r2, [r3]
   1d274:	b	208e8 <_start@@Base+0xe1d8>
   1d278:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d27c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d280:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d284:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1d288:	str	r0, [fp, #-140]	; 0xffffff74
   1d28c:	b	208e8 <_start@@Base+0xe1d8>
   1d290:	ldrd	r2, [fp, #-12]
   1d294:	mov	r0, #-16777216	; 0xff000000
   1d298:	mvn	r1, #0
   1d29c:	and	r2, r2, r0
   1d2a0:	and	r3, r3, r1
   1d2a4:	add	r1, pc, #540	; 0x21c
   1d2a8:	ldrd	r0, [r1]
   1d2ac:	cmp	r3, r1
   1d2b0:	cmpeq	r2, r0
   1d2b4:	bne	1d3e0 <_start@@Base+0xacd0>
   1d2b8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d2bc:	str	r3, [fp, #-16]
   1d2c0:	mov	r3, #5
   1d2c4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d2c8:	ldr	r1, [fp, #-16]
   1d2cc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d2d0:	bl	13db8 <_start@@Base+0x16a8>
   1d2d4:	str	r0, [fp, #-140]	; 0xffffff74
   1d2d8:	ldr	r2, [fp, #-16]
   1d2dc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d2e0:	cmp	r2, r3
   1d2e4:	beq	1d3c8 <_start@@Base+0xacb8>
   1d2e8:	mov	r3, #0
   1d2ec:	strb	r3, [fp, #-37]	; 0xffffffdb
   1d2f0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d2f4:	str	r3, [fp, #-16]
   1d2f8:	sub	r3, fp, #37	; 0x25
   1d2fc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d300:	ldr	r1, [fp, #-16]
   1d304:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d308:	bl	14b98 <_start@@Base+0x2488>
   1d30c:	str	r0, [fp, #-140]	; 0xffffff74
   1d310:	ldr	r2, [fp, #-16]
   1d314:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d318:	cmp	r2, r3
   1d31c:	bne	1d36c <_start@@Base+0xac5c>
   1d320:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d324:	str	r3, [fp, #-16]
   1d328:	sub	r3, fp, #37	; 0x25
   1d32c:	str	r3, [sp]
   1d330:	ldr	r3, [pc, #416]	; 1d4d8 <_start@@Base+0xadc8>
   1d334:	add	r3, pc, r3
   1d338:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d33c:	ldr	r1, [fp, #-16]
   1d340:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d344:	bl	15a40 <_start@@Base+0x3330>
   1d348:	str	r0, [fp, #-140]	; 0xffffff74
   1d34c:	ldr	r2, [fp, #-140]	; 0xffffff74
   1d350:	ldr	r3, [fp, #-16]
   1d354:	cmp	r2, r3
   1d358:	beq	20af8 <_start@@Base+0xe3e8>
   1d35c:	ldr	r2, [fp, #-140]	; 0xffffff74
   1d360:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d364:	cmp	r2, r3
   1d368:	beq	20af8 <_start@@Base+0xe3e8>
   1d36c:	ldrsb	r3, [fp, #-37]	; 0xffffffdb
   1d370:	cmp	r3, #8
   1d374:	bne	1d38c <_start@@Base+0xac7c>
   1d378:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d37c:	ldr	r3, [r3, #8]
   1d380:	and	r3, r3, #2
   1d384:	cmp	r3, #0
   1d388:	beq	208e8 <_start@@Base+0xe1d8>
   1d38c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d390:	ldr	r0, [r3]
   1d394:	mov	r3, #1
   1d398:	mov	r2, #1
   1d39c:	mov	r1, #6
   1d3a0:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1d3a4:	str	r0, [fp, #-24]	; 0xffffffe8
   1d3a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d3ac:	cmp	r3, #0
   1d3b0:	beq	209b4 <_start@@Base+0xe2a4>
   1d3b4:	ldrsb	r3, [fp, #-37]	; 0xffffffdb
   1d3b8:	mov	r1, r3
   1d3bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3c0:	bl	12a40 <_start@@Base+0x330>
   1d3c4:	b	208e8 <_start@@Base+0xe1d8>
   1d3c8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d3cc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d3d0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d3d4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1d3d8:	str	r0, [fp, #-140]	; 0xffffff74
   1d3dc:	b	208e8 <_start@@Base+0xe1d8>
   1d3e0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d3e4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d3e8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d3ec:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1d3f0:	str	r0, [fp, #-140]	; 0xffffff74
   1d3f4:	b	208e8 <_start@@Base+0xe1d8>
   1d3f8:	ldrd	r2, [fp, #-12]
   1d3fc:	mvn	r0, #0
   1d400:	ldr	r1, [pc, #212]	; 1d4dc <_start@@Base+0xadcc>
   1d404:	cmp	r3, r1
   1d408:	cmpeq	r2, r0
   1d40c:	bhi	1d648 <_start@@Base+0xaf38>
   1d410:	ldrd	r2, [fp, #-12]
   1d414:	mov	r0, #0
   1d418:	mvn	r1, #0
   1d41c:	and	r2, r2, r0
   1d420:	and	r3, r3, r1
   1d424:	add	r1, pc, #164	; 0xa4
   1d428:	ldrd	r0, [r1]
   1d42c:	cmp	r3, r1
   1d430:	cmpeq	r2, r0
   1d434:	bne	1d630 <_start@@Base+0xaf20>
   1d438:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d43c:	str	r3, [fp, #-16]
   1d440:	mov	r3, #4
   1d444:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d448:	ldr	r1, [fp, #-16]
   1d44c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d450:	bl	13db8 <_start@@Base+0x16a8>
   1d454:	str	r0, [fp, #-140]	; 0xffffff74
   1d458:	ldr	r2, [fp, #-16]
   1d45c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d460:	cmp	r2, r3
   1d464:	beq	1d618 <_start@@Base+0xaf08>
   1d468:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d46c:	ldr	r0, [r3]
   1d470:	mvn	r3, #0
   1d474:	mov	r2, #1
   1d478:	mov	r1, #1
   1d47c:	bl	2894c <flatcc_builder_start_vector@@Base>
   1d480:	mov	r3, r0
   1d484:	cmp	r3, #0
   1d488:	bne	209bc <_start@@Base+0xe2ac>
   1d48c:	sub	r3, fp, #28
   1d490:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d494:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d498:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d49c:	bl	13b68 <_start@@Base+0x1458>
   1d4a0:	str	r0, [fp, #-140]	; 0xffffff74
   1d4a4:	b	1d5b4 <_start@@Base+0xaea4>
   1d4a8:	cmnvs	r2, r0, ror #4
   1d4ac:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1d4b0:			; <UNDEFINED> instruction: 0xffffffff
   1d4b4:	cdpvs	13, 6, cr6, cr1, cr4, {3}
   1d4b8:			; <UNDEFINED> instruction: 0xffffffff
   1d4bc:			; <UNDEFINED> instruction: 0x666c6577
   1d4c0:	stmdbvc	r0, {}	; <UNPREDICTABLE>
   1d4c4:	strbvs	r6, [lr, #-1389]!	; 0xfffffa93
   1d4c8:	andvc	r0, r0, #0
   1d4cc:	cmnvs	pc, #28416	; 0x6f00
   1d4d0:	andeq	r0, r0, r0
   1d4d4:			; <UNDEFINED> instruction: 0x666c6578
   1d4d8:	strdeq	sl, [r2], -r8
   1d4dc:	stmdavs	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^	; <UNPREDICTABLE>
   1d4e0:	andeq	sl, r2, r8, ror #25
   1d4e4:	mov	r3, #0
   1d4e8:	strb	r3, [fp, #-38]	; 0xffffffda
   1d4ec:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d4f0:	ldr	r3, [r3]
   1d4f4:	mov	r1, #1
   1d4f8:	mov	r0, r3
   1d4fc:	bl	2805c <flatcc_builder_extend_vector@@Base>
   1d500:	str	r0, [fp, #-24]	; 0xffffffe8
   1d504:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d508:	cmp	r3, #0
   1d50c:	beq	209c4 <_start@@Base+0xe2b4>
   1d510:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d514:	str	r3, [fp, #-16]
   1d518:	sub	r3, fp, #38	; 0x26
   1d51c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d520:	ldr	r1, [fp, #-16]
   1d524:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d528:	bl	14854 <_start@@Base+0x2144>
   1d52c:	str	r0, [fp, #-140]	; 0xffffff74
   1d530:	ldr	r2, [fp, #-16]
   1d534:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d538:	cmp	r2, r3
   1d53c:	bne	1d58c <_start@@Base+0xae7c>
   1d540:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d544:	str	r3, [fp, #-16]
   1d548:	sub	r3, fp, #38	; 0x26
   1d54c:	str	r3, [sp]
   1d550:	ldr	r3, [pc, #-120]	; 1d4e0 <_start@@Base+0xadd0>
   1d554:	add	r3, pc, r3
   1d558:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d55c:	ldr	r1, [fp, #-16]
   1d560:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d564:	bl	152f0 <_start@@Base+0x2be0>
   1d568:	str	r0, [fp, #-140]	; 0xffffff74
   1d56c:	ldr	r2, [fp, #-140]	; 0xffffff74
   1d570:	ldr	r3, [fp, #-16]
   1d574:	cmp	r2, r3
   1d578:	beq	209c4 <_start@@Base+0xe2b4>
   1d57c:	ldr	r2, [fp, #-140]	; 0xffffff74
   1d580:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d584:	cmp	r2, r3
   1d588:	beq	209c4 <_start@@Base+0xe2b4>
   1d58c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1d590:	mov	r1, r3
   1d594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d598:	bl	12860 <_start@@Base+0x150>
   1d59c:	sub	r3, fp, #28
   1d5a0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d5a4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d5a8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d5ac:	bl	13c50 <_start@@Base+0x1540>
   1d5b0:	str	r0, [fp, #-140]	; 0xffffff74
   1d5b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d5b8:	cmp	r3, #0
   1d5bc:	bne	1d4e4 <_start@@Base+0xadd4>
   1d5c0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d5c4:	ldr	r3, [r3]
   1d5c8:	mov	r0, r3
   1d5cc:	bl	29ba4 <flatcc_builder_end_vector@@Base>
   1d5d0:	mov	r3, r0
   1d5d4:	str	r3, [fp, #-32]	; 0xffffffe0
   1d5d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d5dc:	cmp	r3, #0
   1d5e0:	beq	20af8 <_start@@Base+0xe3e8>
   1d5e4:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d5e8:	ldr	r3, [r3]
   1d5ec:	mov	r1, #30
   1d5f0:	mov	r0, r3
   1d5f4:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1d5f8:	str	r0, [fp, #-20]	; 0xffffffec
   1d5fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d600:	cmp	r3, #0
   1d604:	beq	20af8 <_start@@Base+0xe3e8>
   1d608:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d60c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d610:	str	r2, [r3]
   1d614:	b	208e8 <_start@@Base+0xe1d8>
   1d618:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d61c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d620:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d624:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1d628:	str	r0, [fp, #-140]	; 0xffffff74
   1d62c:	b	208e8 <_start@@Base+0xe1d8>
   1d630:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d634:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d638:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d63c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1d640:	str	r0, [fp, #-140]	; 0xffffff74
   1d644:	b	208e8 <_start@@Base+0xe1d8>
   1d648:	ldrd	r2, [fp, #-12]
   1d64c:	add	r1, pc, #924	; 0x39c
   1d650:	ldrd	r0, [r1]
   1d654:	cmp	r3, r1
   1d658:	cmpeq	r2, r0
   1d65c:	bhi	1d7c8 <_start@@Base+0xb0b8>
   1d660:	ldrd	r2, [fp, #-12]
   1d664:	mov	r0, #0
   1d668:	ldr	r1, [pc, #912]	; 1da00 <_start@@Base+0xb2f0>
   1d66c:	and	r2, r2, r0
   1d670:	and	r3, r3, r1
   1d674:	mov	r0, #0
   1d678:	ldr	r1, [pc, #900]	; 1da04 <_start@@Base+0xb2f4>
   1d67c:	cmp	r3, r1
   1d680:	cmpeq	r2, r0
   1d684:	bne	1d7b0 <_start@@Base+0xb0a0>
   1d688:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d68c:	str	r3, [fp, #-16]
   1d690:	mov	r3, #2
   1d694:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d698:	ldr	r1, [fp, #-16]
   1d69c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d6a0:	bl	13db8 <_start@@Base+0x16a8>
   1d6a4:	str	r0, [fp, #-140]	; 0xffffff74
   1d6a8:	ldr	r2, [fp, #-16]
   1d6ac:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d6b0:	cmp	r2, r3
   1d6b4:	beq	1d798 <_start@@Base+0xb088>
   1d6b8:	mov	r3, #0
   1d6bc:	strh	r3, [fp, #-40]	; 0xffffffd8
   1d6c0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d6c4:	str	r3, [fp, #-16]
   1d6c8:	sub	r3, fp, #40	; 0x28
   1d6cc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d6d0:	ldr	r1, [fp, #-16]
   1d6d4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d6d8:	bl	14ac8 <_start@@Base+0x23b8>
   1d6dc:	str	r0, [fp, #-140]	; 0xffffff74
   1d6e0:	ldr	r2, [fp, #-16]
   1d6e4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d6e8:	cmp	r2, r3
   1d6ec:	bne	1d73c <_start@@Base+0xb02c>
   1d6f0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d6f4:	str	r3, [fp, #-16]
   1d6f8:	sub	r3, fp, #40	; 0x28
   1d6fc:	str	r3, [sp]
   1d700:	ldr	r3, [pc, #768]	; 1da08 <_start@@Base+0xb2f8>
   1d704:	add	r3, pc, r3
   1d708:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d70c:	ldr	r1, [fp, #-16]
   1d710:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d714:	bl	15864 <_start@@Base+0x3154>
   1d718:	str	r0, [fp, #-140]	; 0xffffff74
   1d71c:	ldr	r2, [fp, #-140]	; 0xffffff74
   1d720:	ldr	r3, [fp, #-16]
   1d724:	cmp	r2, r3
   1d728:	beq	20af8 <_start@@Base+0xe3e8>
   1d72c:	ldr	r2, [fp, #-140]	; 0xffffff74
   1d730:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d734:	cmp	r2, r3
   1d738:	beq	20af8 <_start@@Base+0xe3e8>
   1d73c:	ldrsh	r3, [fp, #-40]	; 0xffffffd8
   1d740:	cmp	r3, #100	; 0x64
   1d744:	bne	1d75c <_start@@Base+0xb04c>
   1d748:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d74c:	ldr	r3, [r3, #8]
   1d750:	and	r3, r3, #2
   1d754:	cmp	r3, #0
   1d758:	beq	208e8 <_start@@Base+0xe1d8>
   1d75c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d760:	ldr	r0, [r3]
   1d764:	mov	r3, #2
   1d768:	mov	r2, #2
   1d76c:	mov	r1, #2
   1d770:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1d774:	str	r0, [fp, #-24]	; 0xffffffe8
   1d778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d77c:	cmp	r3, #0
   1d780:	beq	209cc <_start@@Base+0xe2bc>
   1d784:	ldrsh	r3, [fp, #-40]	; 0xffffffd8
   1d788:	mov	r1, r3
   1d78c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d790:	bl	12b00 <_start@@Base+0x3f0>
   1d794:	b	208e8 <_start@@Base+0xe1d8>
   1d798:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d79c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d7a0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d7a4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1d7a8:	str	r0, [fp, #-140]	; 0xffffff74
   1d7ac:	b	208e8 <_start@@Base+0xe1d8>
   1d7b0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d7b4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d7b8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d7bc:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1d7c0:	str	r0, [fp, #-140]	; 0xffffff74
   1d7c4:	b	208e8 <_start@@Base+0xe1d8>
   1d7c8:	ldrd	r2, [fp, #-12]
   1d7cc:	add	r1, pc, #548	; 0x224
   1d7d0:	ldrd	r0, [r1]
   1d7d4:	cmp	r3, r1
   1d7d8:	cmpeq	r2, r0
   1d7dc:	bne	1da10 <_start@@Base+0xb300>
   1d7e0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d7e4:	add	r3, r3, #8
   1d7e8:	str	r3, [fp, #-140]	; 0xffffff74
   1d7ec:	ldr	r1, [fp, #-144]	; 0xffffff70
   1d7f0:	ldr	r0, [fp, #-140]	; 0xffffff74
   1d7f4:	bl	137ec <_start@@Base+0x10dc>
   1d7f8:	strd	r0, [fp, #-12]
   1d7fc:	ldrd	r2, [fp, #-12]
   1d800:	mov	r0, #0
   1d804:	mov	r1, #-16777216	; 0xff000000
   1d808:	and	r2, r2, r0
   1d80c:	and	r3, r3, r1
   1d810:	cmp	r3, #2030043136	; 0x79000000
   1d814:	cmpeq	r2, #0
   1d818:	bne	1d9d8 <_start@@Base+0xb2c8>
   1d81c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d820:	str	r3, [fp, #-16]
   1d824:	mov	r3, #1
   1d828:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d82c:	ldr	r1, [fp, #-16]
   1d830:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d834:	bl	13db8 <_start@@Base+0x16a8>
   1d838:	str	r0, [fp, #-140]	; 0xffffff74
   1d83c:	ldr	r2, [fp, #-16]
   1d840:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d844:	cmp	r2, r3
   1d848:	beq	1d9c0 <_start@@Base+0xb2b0>
   1d84c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d850:	ldr	r0, [r3]
   1d854:	mvn	r3, #0
   1d858:	mov	r2, #1
   1d85c:	mov	r1, #1
   1d860:	bl	2894c <flatcc_builder_start_vector@@Base>
   1d864:	mov	r3, r0
   1d868:	cmp	r3, #0
   1d86c:	bne	209d4 <_start@@Base+0xe2c4>
   1d870:	sub	r3, fp, #28
   1d874:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d878:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d87c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d880:	bl	13b68 <_start@@Base+0x1458>
   1d884:	str	r0, [fp, #-140]	; 0xffffff74
   1d888:	b	1d95c <_start@@Base+0xb24c>
   1d88c:	mov	r3, #0
   1d890:	strb	r3, [fp, #-41]	; 0xffffffd7
   1d894:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d898:	ldr	r3, [r3]
   1d89c:	mov	r1, #1
   1d8a0:	mov	r0, r3
   1d8a4:	bl	2805c <flatcc_builder_extend_vector@@Base>
   1d8a8:	str	r0, [fp, #-24]	; 0xffffffe8
   1d8ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d8b0:	cmp	r3, #0
   1d8b4:	beq	209dc <_start@@Base+0xe2cc>
   1d8b8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d8bc:	str	r3, [fp, #-16]
   1d8c0:	sub	r3, fp, #41	; 0x29
   1d8c4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d8c8:	ldr	r1, [fp, #-16]
   1d8cc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d8d0:	bl	14854 <_start@@Base+0x2144>
   1d8d4:	str	r0, [fp, #-140]	; 0xffffff74
   1d8d8:	ldr	r2, [fp, #-16]
   1d8dc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d8e0:	cmp	r2, r3
   1d8e4:	bne	1d934 <_start@@Base+0xb224>
   1d8e8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d8ec:	str	r3, [fp, #-16]
   1d8f0:	sub	r3, fp, #41	; 0x29
   1d8f4:	str	r3, [sp]
   1d8f8:	ldr	r3, [pc, #268]	; 1da0c <_start@@Base+0xb2fc>
   1d8fc:	add	r3, pc, r3
   1d900:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d904:	ldr	r1, [fp, #-16]
   1d908:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d90c:	bl	152f0 <_start@@Base+0x2be0>
   1d910:	str	r0, [fp, #-140]	; 0xffffff74
   1d914:	ldr	r2, [fp, #-140]	; 0xffffff74
   1d918:	ldr	r3, [fp, #-16]
   1d91c:	cmp	r2, r3
   1d920:	beq	209dc <_start@@Base+0xe2cc>
   1d924:	ldr	r2, [fp, #-140]	; 0xffffff74
   1d928:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d92c:	cmp	r2, r3
   1d930:	beq	209dc <_start@@Base+0xe2cc>
   1d934:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1d938:	mov	r1, r3
   1d93c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d940:	bl	12860 <_start@@Base+0x150>
   1d944:	sub	r3, fp, #28
   1d948:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d94c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d950:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d954:	bl	13c50 <_start@@Base+0x1540>
   1d958:	str	r0, [fp, #-140]	; 0xffffff74
   1d95c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d960:	cmp	r3, #0
   1d964:	bne	1d88c <_start@@Base+0xb17c>
   1d968:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d96c:	ldr	r3, [r3]
   1d970:	mov	r0, r3
   1d974:	bl	29ba4 <flatcc_builder_end_vector@@Base>
   1d978:	mov	r3, r0
   1d97c:	str	r3, [fp, #-32]	; 0xffffffe0
   1d980:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d984:	cmp	r3, #0
   1d988:	beq	20af8 <_start@@Base+0xe3e8>
   1d98c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d990:	ldr	r3, [r3]
   1d994:	mov	r1, #5
   1d998:	mov	r0, r3
   1d99c:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1d9a0:	str	r0, [fp, #-20]	; 0xffffffec
   1d9a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d9a8:	cmp	r3, #0
   1d9ac:	beq	20af8 <_start@@Base+0xe3e8>
   1d9b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d9b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d9b8:	str	r2, [r3]
   1d9bc:	b	208e8 <_start@@Base+0xe1d8>
   1d9c0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d9c4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d9c8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d9cc:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1d9d0:	str	r0, [fp, #-140]	; 0xffffff74
   1d9d4:	b	208e8 <_start@@Base+0xe1d8>
   1d9d8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1d9dc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1d9e0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d9e4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1d9e8:	str	r0, [fp, #-140]	; 0xffffff74
   1d9ec:	b	208e8 <_start@@Base+0xe1d8>
   1d9f0:	mrcvs	15, 3, r6, cr4, cr1, {3}
   1d9f4:	stmdbvs	lr!, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^
   1d9f8:	mrcvs	15, 3, r6, cr4, cr2, {3}
   1d9fc:	stmdbvs	lr!, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^
   1da00:			; <UNDEFINED> instruction: 0xffff0000
   1da04:	ldmdavs	r0!, {}^	; <UNPREDICTABLE>
   1da08:	andeq	sl, r2, r4, asr #22
   1da0c:	andeq	sl, r2, r8, asr r9
   1da10:	ldrd	r2, [fp, #-12]
   1da14:	mov	r0, #0
   1da18:	mvn	r1, #0
   1da1c:	and	r2, r2, r0
   1da20:	and	r3, r3, r1
   1da24:	add	r1, pc, #956	; 0x3bc
   1da28:	ldrd	r0, [r1]
   1da2c:	cmp	r3, r1
   1da30:	cmpeq	r2, r0
   1da34:	bne	1db60 <_start@@Base+0xb450>
   1da38:	ldr	r3, [fp, #-140]	; 0xffffff74
   1da3c:	str	r3, [fp, #-16]
   1da40:	mov	r3, #4
   1da44:	ldr	r2, [fp, #-144]	; 0xffffff70
   1da48:	ldr	r1, [fp, #-16]
   1da4c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1da50:	bl	13db8 <_start@@Base+0x16a8>
   1da54:	str	r0, [fp, #-140]	; 0xffffff74
   1da58:	ldr	r2, [fp, #-16]
   1da5c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1da60:	cmp	r2, r3
   1da64:	beq	1db48 <_start@@Base+0xb438>
   1da68:	mov	r3, #0
   1da6c:	strh	r3, [fp, #-44]	; 0xffffffd4
   1da70:	ldr	r3, [fp, #-140]	; 0xffffff74
   1da74:	str	r3, [fp, #-16]
   1da78:	sub	r3, fp, #44	; 0x2c
   1da7c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1da80:	ldr	r1, [fp, #-16]
   1da84:	ldr	r0, [fp, #-136]	; 0xffffff78
   1da88:	bl	14ac8 <_start@@Base+0x23b8>
   1da8c:	str	r0, [fp, #-140]	; 0xffffff74
   1da90:	ldr	r2, [fp, #-16]
   1da94:	ldr	r3, [fp, #-140]	; 0xffffff74
   1da98:	cmp	r2, r3
   1da9c:	bne	1daec <_start@@Base+0xb3dc>
   1daa0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1daa4:	str	r3, [fp, #-16]
   1daa8:	sub	r3, fp, #44	; 0x2c
   1daac:	str	r3, [sp]
   1dab0:	ldr	r3, [pc, #872]	; 1de20 <_start@@Base+0xb710>
   1dab4:	add	r3, pc, r3
   1dab8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1dabc:	ldr	r1, [fp, #-16]
   1dac0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1dac4:	bl	15864 <_start@@Base+0x3154>
   1dac8:	str	r0, [fp, #-140]	; 0xffffff74
   1dacc:	ldr	r2, [fp, #-140]	; 0xffffff74
   1dad0:	ldr	r3, [fp, #-16]
   1dad4:	cmp	r2, r3
   1dad8:	beq	20af8 <_start@@Base+0xe3e8>
   1dadc:	ldr	r2, [fp, #-140]	; 0xffffff74
   1dae0:	ldr	r3, [fp, #-144]	; 0xffffff70
   1dae4:	cmp	r2, r3
   1dae8:	beq	20af8 <_start@@Base+0xe3e8>
   1daec:	ldrsh	r3, [fp, #-44]	; 0xffffffd4
   1daf0:	cmp	r3, #150	; 0x96
   1daf4:	bne	1db0c <_start@@Base+0xb3fc>
   1daf8:	ldr	r3, [fp, #-136]	; 0xffffff78
   1dafc:	ldr	r3, [r3, #8]
   1db00:	and	r3, r3, #2
   1db04:	cmp	r3, #0
   1db08:	beq	208e8 <_start@@Base+0xe1d8>
   1db0c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1db10:	ldr	r0, [r3]
   1db14:	mov	r3, #2
   1db18:	mov	r2, #2
   1db1c:	mov	r1, #1
   1db20:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1db24:	str	r0, [fp, #-24]	; 0xffffffe8
   1db28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db2c:	cmp	r3, #0
   1db30:	beq	209e4 <_start@@Base+0xe2d4>
   1db34:	ldrsh	r3, [fp, #-44]	; 0xffffffd4
   1db38:	mov	r1, r3
   1db3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db40:	bl	12b00 <_start@@Base+0x3f0>
   1db44:	b	208e8 <_start@@Base+0xe1d8>
   1db48:	ldr	r2, [fp, #-144]	; 0xffffff70
   1db4c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1db50:	ldr	r0, [fp, #-136]	; 0xffffff78
   1db54:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1db58:	str	r0, [fp, #-140]	; 0xffffff74
   1db5c:	b	208e8 <_start@@Base+0xe1d8>
   1db60:	ldr	r2, [fp, #-144]	; 0xffffff70
   1db64:	ldr	r1, [fp, #-140]	; 0xffffff74
   1db68:	ldr	r0, [fp, #-136]	; 0xffffff78
   1db6c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1db70:	str	r0, [fp, #-140]	; 0xffffff74
   1db74:	b	208e8 <_start@@Base+0xe1d8>
   1db78:	ldrd	r2, [fp, #-12]
   1db7c:	add	r1, pc, #620	; 0x26c
   1db80:	ldrd	r0, [r1]
   1db84:	cmp	r3, r1
   1db88:	cmpeq	r2, r0
   1db8c:	bhi	1def0 <_start@@Base+0xb7e0>
   1db90:	ldrd	r2, [fp, #-12]
   1db94:	add	r1, pc, #604	; 0x25c
   1db98:	ldrd	r0, [r1]
   1db9c:	cmp	r3, r1
   1dba0:	cmpeq	r2, r0
   1dba4:	bhi	1dc88 <_start@@Base+0xb578>
   1dba8:	ldrd	r2, [fp, #-12]
   1dbac:	mov	r0, #0
   1dbb0:	mvn	r1, #0
   1dbb4:	and	r2, r2, r0
   1dbb8:	and	r3, r3, r1
   1dbbc:	add	r1, pc, #572	; 0x23c
   1dbc0:	ldrd	r0, [r1]
   1dbc4:	cmp	r3, r1
   1dbc8:	cmpeq	r2, r0
   1dbcc:	bne	1dc70 <_start@@Base+0xb560>
   1dbd0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1dbd4:	str	r3, [fp, #-16]
   1dbd8:	mov	r3, #4
   1dbdc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1dbe0:	ldr	r1, [fp, #-16]
   1dbe4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1dbe8:	bl	13db8 <_start@@Base+0x16a8>
   1dbec:	str	r0, [fp, #-140]	; 0xffffff74
   1dbf0:	ldr	r2, [fp, #-16]
   1dbf4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1dbf8:	cmp	r2, r3
   1dbfc:	beq	1dc58 <_start@@Base+0xb548>
   1dc00:	sub	r3, fp, #32
   1dc04:	ldr	r2, [fp, #-144]	; 0xffffff70
   1dc08:	ldr	r1, [fp, #-140]	; 0xffffff74
   1dc0c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1dc10:	bl	33a78 <flatcc_json_parser_build_string@@Base>
   1dc14:	str	r0, [fp, #-140]	; 0xffffff74
   1dc18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dc1c:	cmp	r3, #0
   1dc20:	beq	20af8 <_start@@Base+0xe3e8>
   1dc24:	ldr	r3, [fp, #-136]	; 0xffffff78
   1dc28:	ldr	r3, [r3]
   1dc2c:	mov	r1, #3
   1dc30:	mov	r0, r3
   1dc34:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1dc38:	str	r0, [fp, #-20]	; 0xffffffec
   1dc3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dc40:	cmp	r3, #0
   1dc44:	beq	20af8 <_start@@Base+0xe3e8>
   1dc48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1dc4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dc50:	str	r2, [r3]
   1dc54:	b	208e8 <_start@@Base+0xe1d8>
   1dc58:	ldr	r2, [fp, #-144]	; 0xffffff70
   1dc5c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1dc60:	ldr	r0, [fp, #-136]	; 0xffffff78
   1dc64:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1dc68:	str	r0, [fp, #-140]	; 0xffffff74
   1dc6c:	b	208e8 <_start@@Base+0xe1d8>
   1dc70:	ldr	r2, [fp, #-144]	; 0xffffff70
   1dc74:	ldr	r1, [fp, #-140]	; 0xffffff74
   1dc78:	ldr	r0, [fp, #-136]	; 0xffffff78
   1dc7c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1dc80:	str	r0, [fp, #-140]	; 0xffffff74
   1dc84:	b	208e8 <_start@@Base+0xe1d8>
   1dc88:	ldrd	r2, [fp, #-12]
   1dc8c:	add	r1, pc, #372	; 0x174
   1dc90:	ldrd	r0, [r1]
   1dc94:	cmp	r3, r1
   1dc98:	cmpeq	r2, r0
   1dc9c:	bne	1de24 <_start@@Base+0xb714>
   1dca0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1dca4:	add	r3, r3, #8
   1dca8:	str	r3, [fp, #-140]	; 0xffffff74
   1dcac:	ldr	r1, [fp, #-144]	; 0xffffff70
   1dcb0:	ldr	r0, [fp, #-140]	; 0xffffff74
   1dcb4:	bl	137ec <_start@@Base+0x10dc>
   1dcb8:	strd	r0, [fp, #-12]
   1dcbc:	ldrd	r2, [fp, #-12]
   1dcc0:	add	r1, pc, #328	; 0x148
   1dcc4:	ldrd	r0, [r1]
   1dcc8:	cmp	r3, r1
   1dccc:	cmpeq	r2, r0
   1dcd0:	bne	1ddd0 <_start@@Base+0xb6c0>
   1dcd4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1dcd8:	add	r3, r3, #8
   1dcdc:	str	r3, [fp, #-140]	; 0xffffff74
   1dce0:	ldr	r1, [fp, #-144]	; 0xffffff70
   1dce4:	ldr	r0, [fp, #-140]	; 0xffffff74
   1dce8:	bl	137ec <_start@@Base+0x10dc>
   1dcec:	strd	r0, [fp, #-12]
   1dcf0:	ldrd	r2, [fp, #-12]
   1dcf4:	mov	r0, #-16777216	; 0xff000000
   1dcf8:	mvn	r1, #0
   1dcfc:	and	r2, r2, r0
   1dd00:	and	r3, r3, r1
   1dd04:	add	r1, pc, #268	; 0x10c
   1dd08:	ldrd	r0, [r1]
   1dd0c:	cmp	r3, r1
   1dd10:	cmpeq	r2, r0
   1dd14:	bne	1ddb8 <_start@@Base+0xb6a8>
   1dd18:	ldr	r3, [fp, #-140]	; 0xffffff74
   1dd1c:	str	r3, [fp, #-16]
   1dd20:	mov	r3, #5
   1dd24:	ldr	r2, [fp, #-144]	; 0xffffff70
   1dd28:	ldr	r1, [fp, #-16]
   1dd2c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1dd30:	bl	13db8 <_start@@Base+0x16a8>
   1dd34:	str	r0, [fp, #-140]	; 0xffffff74
   1dd38:	ldr	r2, [fp, #-16]
   1dd3c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1dd40:	cmp	r2, r3
   1dd44:	beq	1dda0 <_start@@Base+0xb690>
   1dd48:	sub	r3, fp, #32
   1dd4c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1dd50:	ldr	r1, [fp, #-140]	; 0xffffff74
   1dd54:	ldr	r0, [fp, #-136]	; 0xffffff78
   1dd58:	bl	16f1c <_start@@Base+0x480c>
   1dd5c:	str	r0, [fp, #-140]	; 0xffffff74
   1dd60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dd64:	cmp	r3, #0
   1dd68:	beq	20af8 <_start@@Base+0xe3e8>
   1dd6c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1dd70:	ldr	r3, [r3]
   1dd74:	mov	r1, #34	; 0x22
   1dd78:	mov	r0, r3
   1dd7c:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1dd80:	str	r0, [fp, #-20]	; 0xffffffec
   1dd84:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dd88:	cmp	r3, #0
   1dd8c:	beq	20af8 <_start@@Base+0xe3e8>
   1dd90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1dd94:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dd98:	str	r2, [r3]
   1dd9c:	b	208e8 <_start@@Base+0xe1d8>
   1dda0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1dda4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1dda8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ddac:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ddb0:	str	r0, [fp, #-140]	; 0xffffff74
   1ddb4:	b	208e8 <_start@@Base+0xe1d8>
   1ddb8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ddbc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ddc0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ddc4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ddc8:	str	r0, [fp, #-140]	; 0xffffff74
   1ddcc:	b	208e8 <_start@@Base+0xe1d8>
   1ddd0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ddd4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ddd8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1dddc:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1dde0:	str	r0, [fp, #-140]	; 0xffffff74
   1dde4:	b	208e8 <_start@@Base+0xe1d8>
   1dde8:	andeq	r0, r0, r0
   1ddec:	stclvs	14, cr6, [r1, #-388]!	; 0xfffffe7c
   1ddf0:			; <UNDEFINED> instruction: 0xffffffff
   1ddf4:	strbtvc	r7, [r5], #-883	; 0xfffffc8d
   1ddf8:	cdpvs	15, 7, cr5, cr4, cr13, {3}
   1ddfc:	rsbvc	r7, r1, r5, ror #4
   1de00:	andeq	r0, r0, r0
   1de04:	cdpvs	13, 6, cr6, cr1, cr5, {3}
   1de08:	cdpvs	15, 7, cr5, cr4, cr14, {3}
   1de0c:	rsbvc	r7, r1, r5, ror #4
   1de10:	rsbvc	r6, r1, r5, ror #6
   1de14:	smcvs	54867	; 0xd653
   1de18:	strvc	r0, [r0], #-0
   1de1c:	svcpl	0x00746573
   1de20:	andeq	sl, r2, ip, lsr #15
   1de24:	ldrd	r2, [fp, #-12]
   1de28:	mov	r0, #0
   1de2c:	mvn	r1, #255	; 0xff
   1de30:	and	r2, r2, r0
   1de34:	and	r3, r3, r1
   1de38:	add	r1, pc, #832	; 0x340
   1de3c:	ldrd	r0, [r1]
   1de40:	cmp	r3, r1
   1de44:	cmpeq	r2, r0
   1de48:	bne	1ded8 <_start@@Base+0xb7c8>
   1de4c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1de50:	str	r3, [fp, #-16]
   1de54:	mov	r3, #3
   1de58:	ldr	r2, [fp, #-144]	; 0xffffff70
   1de5c:	ldr	r1, [fp, #-16]
   1de60:	ldr	r0, [fp, #-136]	; 0xffffff78
   1de64:	bl	13db8 <_start@@Base+0x16a8>
   1de68:	str	r0, [fp, #-140]	; 0xffffff74
   1de6c:	ldr	r2, [fp, #-16]
   1de70:	ldr	r3, [fp, #-140]	; 0xffffff74
   1de74:	cmp	r2, r3
   1de78:	beq	1dec0 <_start@@Base+0xb7b0>
   1de7c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1de80:	ldr	r0, [r3]
   1de84:	mov	r3, #16
   1de88:	mov	r2, #32
   1de8c:	mov	r1, #0
   1de90:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1de94:	str	r0, [fp, #-24]	; 0xffffffe8
   1de98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1de9c:	cmp	r3, #0
   1dea0:	beq	209ec <_start@@Base+0xe2dc>
   1dea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dea8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1deac:	ldr	r1, [fp, #-140]	; 0xffffff74
   1deb0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1deb4:	bl	19d24 <_start@@Base+0x7614>
   1deb8:	str	r0, [fp, #-140]	; 0xffffff74
   1debc:	b	208e8 <_start@@Base+0xe1d8>
   1dec0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1dec4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1dec8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1decc:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ded0:	str	r0, [fp, #-140]	; 0xffffff74
   1ded4:	b	208e8 <_start@@Base+0xe1d8>
   1ded8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1dedc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1dee0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1dee4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1dee8:	str	r0, [fp, #-140]	; 0xffffff74
   1deec:	b	208e8 <_start@@Base+0xe1d8>
   1def0:	ldrd	r2, [fp, #-12]
   1def4:	mov	r0, #-16777216	; 0xff000000
   1def8:	mvn	r1, #0
   1defc:	and	r2, r2, r0
   1df00:	and	r3, r3, r1
   1df04:	add	r1, pc, #636	; 0x27c
   1df08:	ldrd	r0, [r1]
   1df0c:	cmp	r3, r1
   1df10:	cmpeq	r2, r0
   1df14:	bne	1e040 <_start@@Base+0xb930>
   1df18:	ldr	r3, [fp, #-140]	; 0xffffff74
   1df1c:	str	r3, [fp, #-16]
   1df20:	mov	r3, #5
   1df24:	ldr	r2, [fp, #-144]	; 0xffffff70
   1df28:	ldr	r1, [fp, #-16]
   1df2c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1df30:	bl	13db8 <_start@@Base+0x16a8>
   1df34:	str	r0, [fp, #-140]	; 0xffffff74
   1df38:	ldr	r2, [fp, #-16]
   1df3c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1df40:	cmp	r2, r3
   1df44:	beq	1e0d0 <_start@@Base+0xb9c0>
   1df48:	ldr	r3, [fp, #-136]	; 0xffffff78
   1df4c:	ldr	r0, [r3]
   1df50:	mvn	r3, #-1073741824	; 0xc0000000
   1df54:	mov	r2, #2
   1df58:	mov	r1, #4
   1df5c:	bl	2894c <flatcc_builder_start_vector@@Base>
   1df60:	mov	r3, r0
   1df64:	cmp	r3, #0
   1df68:	bne	209f4 <_start@@Base+0xe2e4>
   1df6c:	sub	r3, fp, #28
   1df70:	ldr	r2, [fp, #-144]	; 0xffffff70
   1df74:	ldr	r1, [fp, #-140]	; 0xffffff74
   1df78:	ldr	r0, [fp, #-136]	; 0xffffff78
   1df7c:	bl	13b68 <_start@@Base+0x1458>
   1df80:	str	r0, [fp, #-140]	; 0xffffff74
   1df84:	b	1dfdc <_start@@Base+0xb8cc>
   1df88:	ldr	r3, [fp, #-136]	; 0xffffff78
   1df8c:	ldr	r3, [r3]
   1df90:	mov	r1, #1
   1df94:	mov	r0, r3
   1df98:	bl	2805c <flatcc_builder_extend_vector@@Base>
   1df9c:	str	r0, [fp, #-24]	; 0xffffffe8
   1dfa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dfa4:	cmp	r3, #0
   1dfa8:	beq	209fc <_start@@Base+0xe2ec>
   1dfac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dfb0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1dfb4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1dfb8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1dfbc:	bl	183c8 <_start@@Base+0x5cb8>
   1dfc0:	str	r0, [fp, #-140]	; 0xffffff74
   1dfc4:	sub	r3, fp, #28
   1dfc8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1dfcc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1dfd0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1dfd4:	bl	13c50 <_start@@Base+0x1540>
   1dfd8:	str	r0, [fp, #-140]	; 0xffffff74
   1dfdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dfe0:	cmp	r3, #0
   1dfe4:	bne	1df88 <_start@@Base+0xb878>
   1dfe8:	ldr	r3, [fp, #-136]	; 0xffffff78
   1dfec:	ldr	r3, [r3]
   1dff0:	mov	r0, r3
   1dff4:	bl	29ba4 <flatcc_builder_end_vector@@Base>
   1dff8:	mov	r3, r0
   1dffc:	str	r3, [fp, #-32]	; 0xffffffe0
   1e000:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e004:	cmp	r3, #0
   1e008:	beq	20af8 <_start@@Base+0xe3e8>
   1e00c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e010:	ldr	r3, [r3]
   1e014:	mov	r1, #9
   1e018:	mov	r0, r3
   1e01c:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1e020:	str	r0, [fp, #-20]	; 0xffffffec
   1e024:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e028:	cmp	r3, #0
   1e02c:	beq	20af8 <_start@@Base+0xe3e8>
   1e030:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e034:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e038:	str	r2, [r3]
   1e03c:	b	208e8 <_start@@Base+0xe1d8>
   1e040:	ldrd	r2, [fp, #-12]
   1e044:	mov	r0, #0
   1e048:	mvn	r1, #0
   1e04c:	and	r2, r2, r0
   1e050:	and	r3, r3, r1
   1e054:	add	r1, pc, #308	; 0x134
   1e058:	ldrd	r0, [r1]
   1e05c:	cmp	r3, r1
   1e060:	cmpeq	r2, r0
   1e064:	bne	1e0d8 <_start@@Base+0xb9c8>
   1e068:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e06c:	str	r3, [fp, #-16]
   1e070:	mov	r3, #4
   1e074:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e078:	ldr	r1, [fp, #-16]
   1e07c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e080:	bl	13db8 <_start@@Base+0x16a8>
   1e084:	str	r0, [fp, #-140]	; 0xffffff74
   1e088:	ldr	r2, [fp, #-16]
   1e08c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e090:	cmp	r2, r3
   1e094:	beq	1e0e0 <_start@@Base+0xb9d0>
   1e098:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e09c:	ldr	r2, [pc, #252]	; 1e1a0 <_start@@Base+0xba90>
   1e0a0:	add	r2, pc, r2
   1e0a4:	str	r2, [sp, #8]
   1e0a8:	str	r3, [sp, #4]
   1e0ac:	mov	r3, #8
   1e0b0:	str	r3, [sp]
   1e0b4:	mov	r3, #0
   1e0b8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e0bc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e0c0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e0c4:	bl	33dac <flatcc_json_parser_union@@Base>
   1e0c8:	str	r0, [fp, #-140]	; 0xffffff74
   1e0cc:	b	208e8 <_start@@Base+0xe1d8>
   1e0d0:	nop			; (mov r0, r0)
   1e0d4:	b	1e0e4 <_start@@Base+0xb9d4>
   1e0d8:	nop			; (mov r0, r0)
   1e0dc:	b	1e0e4 <_start@@Base+0xb9d4>
   1e0e0:	nop			; (mov r0, r0)
   1e0e4:	ldrd	r2, [fp, #-12]
   1e0e8:	mov	r0, #-16777216	; 0xff000000
   1e0ec:	mvn	r1, #0
   1e0f0:	and	r2, r2, r0
   1e0f4:	and	r3, r3, r1
   1e0f8:	add	r1, pc, #152	; 0x98
   1e0fc:	ldrd	r0, [r1]
   1e100:	cmp	r3, r1
   1e104:	cmpeq	r2, r0
   1e108:	bne	1e25c <_start@@Base+0xbb4c>
   1e10c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e110:	str	r3, [fp, #-16]
   1e114:	mov	r3, #5
   1e118:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e11c:	ldr	r1, [fp, #-16]
   1e120:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e124:	bl	13db8 <_start@@Base+0x16a8>
   1e128:	str	r0, [fp, #-140]	; 0xffffff74
   1e12c:	ldr	r2, [fp, #-16]
   1e130:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e134:	cmp	r2, r3
   1e138:	beq	1e264 <_start@@Base+0xbb54>
   1e13c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e140:	ldr	r0, [r3]
   1e144:	mvn	r3, #-1073741824	; 0xc0000000
   1e148:	mov	r2, #2
   1e14c:	mov	r1, #4
   1e150:	bl	2894c <flatcc_builder_start_vector@@Base>
   1e154:	mov	r3, r0
   1e158:	cmp	r3, #0
   1e15c:	bne	20a04 <_start@@Base+0xe2f4>
   1e160:	sub	r3, fp, #28
   1e164:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e168:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e16c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e170:	bl	13b68 <_start@@Base+0x1458>
   1e174:	str	r0, [fp, #-140]	; 0xffffff74
   1e178:	b	1e1f8 <_start@@Base+0xbae8>
   1e17c:	nop			; (mov r0, r0)
   1e180:	andeq	r0, r0, r0
   1e184:	rsbvc	r7, pc, r0, lsl #6
   1e188:	strcc	r0, [r0], #-0
   1e18c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1e190:	andeq	r0, r0, r0
   1e194:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1e198:	strcc	r0, [r0, #-0]
   1e19c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1e1a0:			; <UNDEFINED> instruction: 0xffff9d78
   1e1a4:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e1a8:	ldr	r3, [r3]
   1e1ac:	mov	r1, #1
   1e1b0:	mov	r0, r3
   1e1b4:	bl	2805c <flatcc_builder_extend_vector@@Base>
   1e1b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1e1bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e1c0:	cmp	r3, #0
   1e1c4:	beq	20a0c <_start@@Base+0xe2fc>
   1e1c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e1cc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e1d0:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e1d4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e1d8:	bl	183c8 <_start@@Base+0x5cb8>
   1e1dc:	str	r0, [fp, #-140]	; 0xffffff74
   1e1e0:	sub	r3, fp, #28
   1e1e4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e1e8:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e1ec:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e1f0:	bl	13c50 <_start@@Base+0x1540>
   1e1f4:	str	r0, [fp, #-140]	; 0xffffff74
   1e1f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e1fc:	cmp	r3, #0
   1e200:	bne	1e1a4 <_start@@Base+0xba94>
   1e204:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e208:	ldr	r3, [r3]
   1e20c:	mov	r0, r3
   1e210:	bl	29ba4 <flatcc_builder_end_vector@@Base>
   1e214:	mov	r3, r0
   1e218:	str	r3, [fp, #-32]	; 0xffffffe0
   1e21c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e220:	cmp	r3, #0
   1e224:	beq	20af8 <_start@@Base+0xe3e8>
   1e228:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e22c:	ldr	r3, [r3]
   1e230:	mov	r1, #31
   1e234:	mov	r0, r3
   1e238:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1e23c:	str	r0, [fp, #-20]	; 0xffffffec
   1e240:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e244:	cmp	r3, #0
   1e248:	beq	20af8 <_start@@Base+0xe3e8>
   1e24c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e250:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e254:	str	r2, [r3]
   1e258:	b	208e8 <_start@@Base+0xe1d8>
   1e25c:	nop			; (mov r0, r0)
   1e260:	b	1e268 <_start@@Base+0xbb58>
   1e264:	nop			; (mov r0, r0)
   1e268:	ldrd	r2, [fp, #-12]
   1e26c:	add	r1, pc, #812	; 0x32c
   1e270:	ldrd	r0, [r1]
   1e274:	cmp	r3, r1
   1e278:	cmpeq	r2, r0
   1e27c:	bne	1e360 <_start@@Base+0xbc50>
   1e280:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e284:	add	r3, r3, #8
   1e288:	str	r3, [fp, #-140]	; 0xffffff74
   1e28c:	ldr	r1, [fp, #-144]	; 0xffffff70
   1e290:	ldr	r0, [fp, #-140]	; 0xffffff74
   1e294:	bl	137ec <_start@@Base+0x10dc>
   1e298:	strd	r0, [fp, #-12]
   1e29c:	ldrd	r2, [fp, #-12]
   1e2a0:	mov	r0, #0
   1e2a4:	mov	r1, #-16777216	; 0xff000000
   1e2a8:	and	r2, r2, r0
   1e2ac:	and	r3, r3, r1
   1e2b0:	cmp	r3, #1694498816	; 0x65000000
   1e2b4:	cmpeq	r2, #0
   1e2b8:	bne	1e348 <_start@@Base+0xbc38>
   1e2bc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e2c0:	str	r3, [fp, #-16]
   1e2c4:	mov	r3, #1
   1e2c8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e2cc:	ldr	r1, [fp, #-16]
   1e2d0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e2d4:	bl	13db8 <_start@@Base+0x16a8>
   1e2d8:	str	r0, [fp, #-140]	; 0xffffff74
   1e2dc:	ldr	r2, [fp, #-16]
   1e2e0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e2e4:	cmp	r2, r3
   1e2e8:	beq	1e330 <_start@@Base+0xbc20>
   1e2ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e2f0:	ldr	r2, [pc, #720]	; 1e5c8 <_start@@Base+0xbeb8>
   1e2f4:	add	r2, pc, r2
   1e2f8:	str	r2, [sp, #12]
   1e2fc:	ldr	r2, [pc, #712]	; 1e5cc <_start@@Base+0xbebc>
   1e300:	add	r2, pc, r2
   1e304:	str	r2, [sp, #8]
   1e308:	str	r3, [sp, #4]
   1e30c:	mov	r3, #8
   1e310:	str	r3, [sp]
   1e314:	mov	r3, #0
   1e318:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e31c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e320:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e324:	bl	33f7c <flatcc_json_parser_union_type@@Base>
   1e328:	str	r0, [fp, #-140]	; 0xffffff74
   1e32c:	b	208e8 <_start@@Base+0xe1d8>
   1e330:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e334:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e338:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e33c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1e340:	str	r0, [fp, #-140]	; 0xffffff74
   1e344:	b	208e8 <_start@@Base+0xe1d8>
   1e348:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e34c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e350:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e354:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1e358:	str	r0, [fp, #-140]	; 0xffffff74
   1e35c:	b	208e8 <_start@@Base+0xe1d8>
   1e360:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e364:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e368:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e36c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1e370:	str	r0, [fp, #-140]	; 0xffffff74
   1e374:	b	208e8 <_start@@Base+0xe1d8>
   1e378:	ldrd	r2, [fp, #-12]
   1e37c:	add	r1, pc, #548	; 0x224
   1e380:	ldrd	r0, [r1]
   1e384:	cmp	r3, r1
   1e388:	cmpeq	r2, r0
   1e38c:	bhi	1f3a8 <_start@@Base+0xcc98>
   1e390:	ldrd	r2, [fp, #-12]
   1e394:	add	r1, pc, #532	; 0x214
   1e398:	ldrd	r0, [r1]
   1e39c:	cmp	r3, r1
   1e3a0:	cmpeq	r2, r0
   1e3a4:	bne	1eccc <_start@@Base+0xc5bc>
   1e3a8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e3ac:	add	r3, r3, #8
   1e3b0:	str	r3, [fp, #-140]	; 0xffffff74
   1e3b4:	ldr	r1, [fp, #-144]	; 0xffffff70
   1e3b8:	ldr	r0, [fp, #-140]	; 0xffffff74
   1e3bc:	bl	137ec <_start@@Base+0x10dc>
   1e3c0:	strd	r0, [fp, #-12]
   1e3c4:	ldrd	r2, [fp, #-12]
   1e3c8:	add	r1, pc, #488	; 0x1e8
   1e3cc:	ldrd	r0, [r1]
   1e3d0:	cmp	r3, r1
   1e3d4:	cmpeq	r2, r0
   1e3d8:	bhi	1e7a4 <_start@@Base+0xc094>
   1e3dc:	ldrd	r2, [fp, #-12]
   1e3e0:	add	r1, pc, #472	; 0x1d8
   1e3e4:	ldrd	r0, [r1]
   1e3e8:	cmp	r3, r1
   1e3ec:	cmpeq	r2, r0
   1e3f0:	bne	1e598 <_start@@Base+0xbe88>
   1e3f4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e3f8:	str	r3, [fp, #-16]
   1e3fc:	mov	r3, #8
   1e400:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e404:	ldr	r1, [fp, #-16]
   1e408:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e40c:	bl	13db8 <_start@@Base+0x16a8>
   1e410:	str	r0, [fp, #-140]	; 0xffffff74
   1e414:	ldr	r2, [fp, #-16]
   1e418:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e41c:	cmp	r2, r3
   1e420:	beq	1e5d4 <_start@@Base+0xbec4>
   1e424:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e428:	ldr	r0, [r3]
   1e42c:	mvn	r3, #0
   1e430:	mov	r2, #1
   1e434:	mov	r1, #1
   1e438:	bl	2894c <flatcc_builder_start_vector@@Base>
   1e43c:	mov	r3, r0
   1e440:	cmp	r3, #0
   1e444:	bne	20a14 <_start@@Base+0xe304>
   1e448:	sub	r3, fp, #28
   1e44c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e450:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e454:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e458:	bl	13b68 <_start@@Base+0x1458>
   1e45c:	str	r0, [fp, #-140]	; 0xffffff74
   1e460:	b	1e534 <_start@@Base+0xbe24>
   1e464:	mov	r3, #0
   1e468:	strb	r3, [fp, #-45]	; 0xffffffd3
   1e46c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e470:	ldr	r3, [r3]
   1e474:	mov	r1, #1
   1e478:	mov	r0, r3
   1e47c:	bl	2805c <flatcc_builder_extend_vector@@Base>
   1e480:	str	r0, [fp, #-24]	; 0xffffffe8
   1e484:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e488:	cmp	r3, #0
   1e48c:	beq	20a1c <_start@@Base+0xe30c>
   1e490:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e494:	str	r3, [fp, #-16]
   1e498:	sub	r3, fp, #45	; 0x2d
   1e49c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e4a0:	ldr	r1, [fp, #-16]
   1e4a4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e4a8:	bl	14c68 <_start@@Base+0x2558>
   1e4ac:	str	r0, [fp, #-140]	; 0xffffff74
   1e4b0:	ldr	r2, [fp, #-16]
   1e4b4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e4b8:	cmp	r2, r3
   1e4bc:	bne	1e50c <_start@@Base+0xbdfc>
   1e4c0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e4c4:	str	r3, [fp, #-16]
   1e4c8:	sub	r3, fp, #45	; 0x2d
   1e4cc:	str	r3, [sp]
   1e4d0:	ldr	r3, [pc, #248]	; 1e5d0 <_start@@Base+0xbec0>
   1e4d4:	add	r3, pc, r3
   1e4d8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e4dc:	ldr	r1, [fp, #-16]
   1e4e0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e4e4:	bl	15c1c <_start@@Base+0x350c>
   1e4e8:	str	r0, [fp, #-140]	; 0xffffff74
   1e4ec:	ldr	r2, [fp, #-140]	; 0xffffff74
   1e4f0:	ldr	r3, [fp, #-16]
   1e4f4:	cmp	r2, r3
   1e4f8:	beq	20a1c <_start@@Base+0xe30c>
   1e4fc:	ldr	r2, [fp, #-140]	; 0xffffff74
   1e500:	ldr	r3, [fp, #-144]	; 0xffffff70
   1e504:	cmp	r2, r3
   1e508:	beq	20a1c <_start@@Base+0xe30c>
   1e50c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   1e510:	mov	r1, r3
   1e514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e518:	bl	12dc8 <_start@@Base+0x6b8>
   1e51c:	sub	r3, fp, #28
   1e520:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e524:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e528:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e52c:	bl	13c50 <_start@@Base+0x1540>
   1e530:	str	r0, [fp, #-140]	; 0xffffff74
   1e534:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e538:	cmp	r3, #0
   1e53c:	bne	1e464 <_start@@Base+0xbd54>
   1e540:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e544:	ldr	r3, [r3]
   1e548:	mov	r0, r3
   1e54c:	bl	29ba4 <flatcc_builder_end_vector@@Base>
   1e550:	mov	r3, r0
   1e554:	str	r3, [fp, #-32]	; 0xffffffe0
   1e558:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e55c:	cmp	r3, #0
   1e560:	beq	20af8 <_start@@Base+0xe3e8>
   1e564:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e568:	ldr	r3, [r3]
   1e56c:	mov	r1, #24
   1e570:	mov	r0, r3
   1e574:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1e578:	str	r0, [fp, #-20]	; 0xffffffec
   1e57c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e580:	cmp	r3, #0
   1e584:	beq	20af8 <_start@@Base+0xe3e8>
   1e588:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e58c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e590:	str	r2, [r3]
   1e594:	b	208e8 <_start@@Base+0xe1d8>
   1e598:	nop			; (mov r0, r0)
   1e59c:	b	1e5d8 <_start@@Base+0xbec8>
   1e5a0:	svcpl	0x00747970
   1e5a4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1e5a8:	shsub8vs	pc, r2, pc	; <UNPREDICTABLE>
   1e5ac:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1e5b0:	cmnvs	r2, r1, ror #4
   1e5b4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1e5b8:	ldrbtvc	r6, [r2], #-2413	; 0xfffff693
   1e5bc:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1e5c0:	svcvs	0x006f6c73
   1e5c4:	stmdbvc	pc!, {r1, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1e5c8:			; <UNDEFINED> instruction: 0xffff9b24
   1e5cc:	andeq	r9, r2, ip, ror #30
   1e5d0:	andeq	r9, r2, r8, lsr #27
   1e5d4:	nop			; (mov r0, r0)
   1e5d8:	ldrd	r2, [fp, #-12]
   1e5dc:	add	r1, pc, #876	; 0x36c
   1e5e0:	ldrd	r0, [r1]
   1e5e4:	cmp	r3, r1
   1e5e8:	cmpeq	r2, r0
   1e5ec:	bne	1e78c <_start@@Base+0xc07c>
   1e5f0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e5f4:	add	r3, r3, #8
   1e5f8:	str	r3, [fp, #-140]	; 0xffffff74
   1e5fc:	ldr	r1, [fp, #-144]	; 0xffffff70
   1e600:	ldr	r0, [fp, #-140]	; 0xffffff74
   1e604:	bl	137ec <_start@@Base+0x10dc>
   1e608:	strd	r0, [fp, #-12]
   1e60c:	ldrd	r2, [fp, #-12]
   1e610:	mvn	r0, #255	; 0xff
   1e614:	mvn	r1, #0
   1e618:	and	r2, r2, r0
   1e61c:	and	r3, r3, r1
   1e620:	add	r1, pc, #816	; 0x330
   1e624:	ldrd	r0, [r1]
   1e628:	cmp	r3, r1
   1e62c:	cmpeq	r2, r0
   1e630:	bne	1e774 <_start@@Base+0xc064>
   1e634:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e638:	str	r3, [fp, #-16]
   1e63c:	mov	r3, #7
   1e640:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e644:	ldr	r1, [fp, #-16]
   1e648:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e64c:	bl	13db8 <_start@@Base+0x16a8>
   1e650:	str	r0, [fp, #-140]	; 0xffffff74
   1e654:	ldr	r2, [fp, #-16]
   1e658:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e65c:	cmp	r2, r3
   1e660:	beq	1e75c <_start@@Base+0xc04c>
   1e664:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e668:	ldr	r0, [r3]
   1e66c:	mvn	r3, #-536870912	; 0xe0000000
   1e670:	mov	r2, #4
   1e674:	mov	r1, #8
   1e678:	bl	2894c <flatcc_builder_start_vector@@Base>
   1e67c:	mov	r3, r0
   1e680:	cmp	r3, #0
   1e684:	bne	20a24 <_start@@Base+0xe314>
   1e688:	sub	r3, fp, #28
   1e68c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e690:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e694:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e698:	bl	13b68 <_start@@Base+0x1458>
   1e69c:	str	r0, [fp, #-140]	; 0xffffff74
   1e6a0:	b	1e6f8 <_start@@Base+0xbfe8>
   1e6a4:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e6a8:	ldr	r3, [r3]
   1e6ac:	mov	r1, #1
   1e6b0:	mov	r0, r3
   1e6b4:	bl	2805c <flatcc_builder_extend_vector@@Base>
   1e6b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1e6bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e6c0:	cmp	r3, #0
   1e6c4:	beq	20a2c <_start@@Base+0xe31c>
   1e6c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e6cc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e6d0:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e6d4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e6d8:	bl	1a564 <_start@@Base+0x7e54>
   1e6dc:	str	r0, [fp, #-140]	; 0xffffff74
   1e6e0:	sub	r3, fp, #28
   1e6e4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e6e8:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e6ec:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e6f0:	bl	13c50 <_start@@Base+0x1540>
   1e6f4:	str	r0, [fp, #-140]	; 0xffffff74
   1e6f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e6fc:	cmp	r3, #0
   1e700:	bne	1e6a4 <_start@@Base+0xbf94>
   1e704:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e708:	ldr	r3, [r3]
   1e70c:	mov	r0, r3
   1e710:	bl	29ba4 <flatcc_builder_end_vector@@Base>
   1e714:	mov	r3, r0
   1e718:	str	r3, [fp, #-32]	; 0xffffffe0
   1e71c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e720:	cmp	r3, #0
   1e724:	beq	20af8 <_start@@Base+0xe3e8>
   1e728:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e72c:	ldr	r3, [r3]
   1e730:	mov	r1, #29
   1e734:	mov	r0, r3
   1e738:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1e73c:	str	r0, [fp, #-20]	; 0xffffffec
   1e740:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e744:	cmp	r3, #0
   1e748:	beq	20af8 <_start@@Base+0xe3e8>
   1e74c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e750:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e754:	str	r2, [r3]
   1e758:	b	208e8 <_start@@Base+0xe1d8>
   1e75c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e760:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e764:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e768:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1e76c:	str	r0, [fp, #-140]	; 0xffffff74
   1e770:	b	208e8 <_start@@Base+0xe1d8>
   1e774:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e778:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e77c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e780:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1e784:	str	r0, [fp, #-140]	; 0xffffff74
   1e788:	b	208e8 <_start@@Base+0xe1d8>
   1e78c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e790:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e794:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e798:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1e79c:	str	r0, [fp, #-140]	; 0xffffff74
   1e7a0:	b	208e8 <_start@@Base+0xe1d8>
   1e7a4:	ldrd	r2, [fp, #-12]
   1e7a8:	add	r1, pc, #432	; 0x1b0
   1e7ac:	ldrd	r0, [r1]
   1e7b0:	cmp	r3, r1
   1e7b4:	cmpeq	r2, r0
   1e7b8:	bne	1eaf8 <_start@@Base+0xc3e8>
   1e7bc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e7c0:	add	r3, r3, #8
   1e7c4:	str	r3, [fp, #-140]	; 0xffffff74
   1e7c8:	ldr	r1, [fp, #-144]	; 0xffffff70
   1e7cc:	ldr	r0, [fp, #-140]	; 0xffffff74
   1e7d0:	bl	137ec <_start@@Base+0x10dc>
   1e7d4:	strd	r0, [fp, #-12]
   1e7d8:	ldrd	r2, [fp, #-12]
   1e7dc:	mov	r0, #0
   1e7e0:	ldr	r1, [pc, #384]	; 1e968 <_start@@Base+0xc258>
   1e7e4:	and	r2, r2, r0
   1e7e8:	and	r3, r3, r1
   1e7ec:	mov	r0, #0
   1e7f0:	ldr	r1, [pc, #372]	; 1e96c <_start@@Base+0xc25c>
   1e7f4:	cmp	r3, r1
   1e7f8:	cmpeq	r2, r0
   1e7fc:	bne	1e970 <_start@@Base+0xc260>
   1e800:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e804:	str	r3, [fp, #-16]
   1e808:	mov	r3, #2
   1e80c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e810:	ldr	r1, [fp, #-16]
   1e814:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e818:	bl	13db8 <_start@@Base+0x16a8>
   1e81c:	str	r0, [fp, #-140]	; 0xffffff74
   1e820:	ldr	r2, [fp, #-16]
   1e824:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e828:	cmp	r2, r3
   1e82c:	beq	1e938 <_start@@Base+0xc228>
   1e830:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e834:	ldr	r3, [r3]
   1e838:	mov	r0, r3
   1e83c:	bl	289f8 <flatcc_builder_start_offset_vector@@Base>
   1e840:	mov	r3, r0
   1e844:	cmp	r3, #0
   1e848:	bne	20a34 <_start@@Base+0xe324>
   1e84c:	sub	r3, fp, #28
   1e850:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e854:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e858:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e85c:	bl	13b68 <_start@@Base+0x1458>
   1e860:	str	r0, [fp, #-140]	; 0xffffff74
   1e864:	b	1e8d4 <_start@@Base+0xc1c4>
   1e868:	sub	r3, fp, #32
   1e86c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e870:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e874:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e878:	bl	33a78 <flatcc_json_parser_build_string@@Base>
   1e87c:	str	r0, [fp, #-140]	; 0xffffff74
   1e880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e884:	cmp	r3, #0
   1e888:	beq	20af8 <_start@@Base+0xe3e8>
   1e88c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e890:	ldr	r3, [r3]
   1e894:	mov	r1, #1
   1e898:	mov	r0, r3
   1e89c:	bl	282a4 <flatcc_builder_extend_offset_vector@@Base>
   1e8a0:	str	r0, [fp, #-20]	; 0xffffffec
   1e8a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e8a8:	cmp	r3, #0
   1e8ac:	beq	20af8 <_start@@Base+0xe3e8>
   1e8b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e8b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e8b8:	str	r2, [r3]
   1e8bc:	sub	r3, fp, #28
   1e8c0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e8c4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e8c8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e8cc:	bl	13c50 <_start@@Base+0x1540>
   1e8d0:	str	r0, [fp, #-140]	; 0xffffff74
   1e8d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e8d8:	cmp	r3, #0
   1e8dc:	bne	1e868 <_start@@Base+0xc158>
   1e8e0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e8e4:	ldr	r3, [r3]
   1e8e8:	mov	r0, r3
   1e8ec:	bl	2a04c <flatcc_builder_end_offset_vector@@Base>
   1e8f0:	mov	r3, r0
   1e8f4:	str	r3, [fp, #-32]	; 0xffffffe0
   1e8f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e8fc:	cmp	r3, #0
   1e900:	beq	20af8 <_start@@Base+0xe3e8>
   1e904:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e908:	ldr	r3, [r3]
   1e90c:	mov	r1, #28
   1e910:	mov	r0, r3
   1e914:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1e918:	str	r0, [fp, #-20]	; 0xffffffec
   1e91c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e920:	cmp	r3, #0
   1e924:	beq	20af8 <_start@@Base+0xe3e8>
   1e928:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e92c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e930:	str	r2, [r3]
   1e934:	b	208e8 <_start@@Base+0xe1d8>
   1e938:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e93c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e940:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e944:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1e948:	str	r0, [fp, #-140]	; 0xffffff74
   1e94c:	b	208e8 <_start@@Base+0xe1d8>
   1e950:	svcvs	0x00727465
   1e954:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1e958:	strbvc	r7, [r3, #-1024]!	; 0xfffffc00
   1e95c:	ldrbtvs	r7, [r3], #-1138	; 0xfffffb8e
   1e960:	ldrbtvc	r6, [r2], #-2414	; 0xfffff692
   1e964:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1e968:			; <UNDEFINED> instruction: 0xffff0000
   1e96c:	ldrvs	r0, [r2, -r0]!
   1e970:	ldrd	r2, [fp, #-12]
   1e974:	mov	r0, #0
   1e978:	mov	r1, #-16777216	; 0xff000000
   1e97c:	and	r2, r2, r0
   1e980:	and	r3, r3, r1
   1e984:	cmp	r3, #1728053248	; 0x67000000
   1e988:	cmpeq	r2, #0
   1e98c:	bne	1eae0 <_start@@Base+0xc3d0>
   1e990:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e994:	str	r3, [fp, #-16]
   1e998:	mov	r3, #1
   1e99c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e9a0:	ldr	r1, [fp, #-16]
   1e9a4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e9a8:	bl	13db8 <_start@@Base+0x16a8>
   1e9ac:	str	r0, [fp, #-140]	; 0xffffff74
   1e9b0:	ldr	r2, [fp, #-16]
   1e9b4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e9b8:	cmp	r2, r3
   1e9bc:	beq	1eac8 <_start@@Base+0xc3b8>
   1e9c0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e9c4:	ldr	r3, [r3]
   1e9c8:	mov	r0, r3
   1e9cc:	bl	289f8 <flatcc_builder_start_offset_vector@@Base>
   1e9d0:	mov	r3, r0
   1e9d4:	cmp	r3, #0
   1e9d8:	bne	20a3c <_start@@Base+0xe32c>
   1e9dc:	sub	r3, fp, #28
   1e9e0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e9e4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e9e8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e9ec:	bl	13b68 <_start@@Base+0x1458>
   1e9f0:	str	r0, [fp, #-140]	; 0xffffff74
   1e9f4:	b	1ea64 <_start@@Base+0xc354>
   1e9f8:	sub	r3, fp, #32
   1e9fc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ea00:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ea04:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ea08:	bl	33a78 <flatcc_json_parser_build_string@@Base>
   1ea0c:	str	r0, [fp, #-140]	; 0xffffff74
   1ea10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ea14:	cmp	r3, #0
   1ea18:	beq	20af8 <_start@@Base+0xe3e8>
   1ea1c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ea20:	ldr	r3, [r3]
   1ea24:	mov	r1, #1
   1ea28:	mov	r0, r3
   1ea2c:	bl	282a4 <flatcc_builder_extend_offset_vector@@Base>
   1ea30:	str	r0, [fp, #-20]	; 0xffffffec
   1ea34:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea38:	cmp	r3, #0
   1ea3c:	beq	20af8 <_start@@Base+0xe3e8>
   1ea40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ea44:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea48:	str	r2, [r3]
   1ea4c:	sub	r3, fp, #28
   1ea50:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ea54:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ea58:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ea5c:	bl	13c50 <_start@@Base+0x1540>
   1ea60:	str	r0, [fp, #-140]	; 0xffffff74
   1ea64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ea68:	cmp	r3, #0
   1ea6c:	bne	1e9f8 <_start@@Base+0xc2e8>
   1ea70:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ea74:	ldr	r3, [r3]
   1ea78:	mov	r0, r3
   1ea7c:	bl	2a04c <flatcc_builder_end_offset_vector@@Base>
   1ea80:	mov	r3, r0
   1ea84:	str	r3, [fp, #-32]	; 0xffffffe0
   1ea88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ea8c:	cmp	r3, #0
   1ea90:	beq	20af8 <_start@@Base+0xe3e8>
   1ea94:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ea98:	ldr	r3, [r3]
   1ea9c:	mov	r1, #10
   1eaa0:	mov	r0, r3
   1eaa4:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1eaa8:	str	r0, [fp, #-20]	; 0xffffffec
   1eaac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eab0:	cmp	r3, #0
   1eab4:	beq	20af8 <_start@@Base+0xe3e8>
   1eab8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1eabc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eac0:	str	r2, [r3]
   1eac4:	b	208e8 <_start@@Base+0xe1d8>
   1eac8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eacc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ead0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ead4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ead8:	str	r0, [fp, #-140]	; 0xffffff74
   1eadc:	b	208e8 <_start@@Base+0xe1d8>
   1eae0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eae4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1eae8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eaec:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1eaf0:	str	r0, [fp, #-140]	; 0xffffff74
   1eaf4:	b	208e8 <_start@@Base+0xe1d8>
   1eaf8:	ldrd	r2, [fp, #-12]
   1eafc:	add	r1, pc, #756	; 0x2f4
   1eb00:	ldrd	r0, [r1]
   1eb04:	cmp	r3, r1
   1eb08:	cmpeq	r2, r0
   1eb0c:	bne	1ecb4 <_start@@Base+0xc5a4>
   1eb10:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eb14:	add	r3, r3, #8
   1eb18:	str	r3, [fp, #-140]	; 0xffffff74
   1eb1c:	ldr	r1, [fp, #-144]	; 0xffffff70
   1eb20:	ldr	r0, [fp, #-140]	; 0xffffff74
   1eb24:	bl	137ec <_start@@Base+0x10dc>
   1eb28:	strd	r0, [fp, #-12]
   1eb2c:	ldrd	r2, [fp, #-12]
   1eb30:	mov	r0, #0
   1eb34:	mov	r1, #-16777216	; 0xff000000
   1eb38:	and	r2, r2, r0
   1eb3c:	and	r3, r3, r1
   1eb40:	cmp	r3, #1929379840	; 0x73000000
   1eb44:	cmpeq	r2, #0
   1eb48:	bne	1ec9c <_start@@Base+0xc58c>
   1eb4c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eb50:	str	r3, [fp, #-16]
   1eb54:	mov	r3, #1
   1eb58:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eb5c:	ldr	r1, [fp, #-16]
   1eb60:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eb64:	bl	13db8 <_start@@Base+0x16a8>
   1eb68:	str	r0, [fp, #-140]	; 0xffffff74
   1eb6c:	ldr	r2, [fp, #-16]
   1eb70:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eb74:	cmp	r2, r3
   1eb78:	beq	1ec84 <_start@@Base+0xc574>
   1eb7c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1eb80:	ldr	r3, [r3]
   1eb84:	mov	r0, r3
   1eb88:	bl	289f8 <flatcc_builder_start_offset_vector@@Base>
   1eb8c:	mov	r3, r0
   1eb90:	cmp	r3, #0
   1eb94:	bne	20a44 <_start@@Base+0xe334>
   1eb98:	sub	r3, fp, #28
   1eb9c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eba0:	ldr	r1, [fp, #-140]	; 0xffffff74
   1eba4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eba8:	bl	13b68 <_start@@Base+0x1458>
   1ebac:	str	r0, [fp, #-140]	; 0xffffff74
   1ebb0:	b	1ec20 <_start@@Base+0xc510>
   1ebb4:	sub	r3, fp, #32
   1ebb8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ebbc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ebc0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ebc4:	bl	1d0cc <_start@@Base+0xa9bc>
   1ebc8:	str	r0, [fp, #-140]	; 0xffffff74
   1ebcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ebd0:	cmp	r3, #0
   1ebd4:	beq	20af8 <_start@@Base+0xe3e8>
   1ebd8:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ebdc:	ldr	r3, [r3]
   1ebe0:	mov	r1, #1
   1ebe4:	mov	r0, r3
   1ebe8:	bl	282a4 <flatcc_builder_extend_offset_vector@@Base>
   1ebec:	str	r0, [fp, #-20]	; 0xffffffec
   1ebf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ebf4:	cmp	r3, #0
   1ebf8:	beq	20af8 <_start@@Base+0xe3e8>
   1ebfc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ec00:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ec04:	str	r2, [r3]
   1ec08:	sub	r3, fp, #28
   1ec0c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ec10:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ec14:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ec18:	bl	13c50 <_start@@Base+0x1540>
   1ec1c:	str	r0, [fp, #-140]	; 0xffffff74
   1ec20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ec24:	cmp	r3, #0
   1ec28:	bne	1ebb4 <_start@@Base+0xc4a4>
   1ec2c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ec30:	ldr	r3, [r3]
   1ec34:	mov	r0, r3
   1ec38:	bl	2a04c <flatcc_builder_end_offset_vector@@Base>
   1ec3c:	mov	r3, r0
   1ec40:	str	r3, [fp, #-32]	; 0xffffffe0
   1ec44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ec48:	cmp	r3, #0
   1ec4c:	beq	20af8 <_start@@Base+0xe3e8>
   1ec50:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ec54:	ldr	r3, [r3]
   1ec58:	mov	r1, #11
   1ec5c:	mov	r0, r3
   1ec60:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1ec64:	str	r0, [fp, #-20]	; 0xffffffec
   1ec68:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ec6c:	cmp	r3, #0
   1ec70:	beq	20af8 <_start@@Base+0xe3e8>
   1ec74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ec78:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ec7c:	str	r2, [r3]
   1ec80:	b	208e8 <_start@@Base+0xe1d8>
   1ec84:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ec88:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ec8c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ec90:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ec94:	str	r0, [fp, #-140]	; 0xffffff74
   1ec98:	b	208e8 <_start@@Base+0xe1d8>
   1ec9c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eca0:	ldr	r1, [fp, #-140]	; 0xffffff74
   1eca4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eca8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ecac:	str	r0, [fp, #-140]	; 0xffffff74
   1ecb0:	b	208e8 <_start@@Base+0xe1d8>
   1ecb4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ecb8:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ecbc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ecc0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ecc4:	str	r0, [fp, #-140]	; 0xffffff74
   1ecc8:	b	208e8 <_start@@Base+0xe1d8>
   1eccc:	ldrd	r2, [fp, #-12]
   1ecd0:	add	r1, pc, #296	; 0x128
   1ecd4:	ldrd	r0, [r1]
   1ecd8:	cmp	r3, r1
   1ecdc:	cmpeq	r2, r0
   1ece0:	bhi	1ef70 <_start@@Base+0xc860>
   1ece4:	ldrd	r2, [fp, #-12]
   1ece8:	add	r1, pc, #280	; 0x118
   1ecec:	ldrd	r0, [r1]
   1ecf0:	cmp	r3, r1
   1ecf4:	cmpeq	r2, r0
   1ecf8:	bne	1ee18 <_start@@Base+0xc708>
   1ecfc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ed00:	add	r3, r3, #8
   1ed04:	str	r3, [fp, #-140]	; 0xffffff74
   1ed08:	ldr	r1, [fp, #-144]	; 0xffffff70
   1ed0c:	ldr	r0, [fp, #-140]	; 0xffffff74
   1ed10:	bl	137ec <_start@@Base+0x10dc>
   1ed14:	strd	r0, [fp, #-12]
   1ed18:	ldrd	r2, [fp, #-12]
   1ed1c:	mov	r0, #0
   1ed20:	ldr	r1, [pc, #232]	; 1ee10 <_start@@Base+0xc700>
   1ed24:	and	r2, r2, r0
   1ed28:	and	r3, r3, r1
   1ed2c:	mov	r0, #0
   1ed30:	ldr	r1, [pc, #220]	; 1ee14 <_start@@Base+0xc704>
   1ed34:	cmp	r3, r1
   1ed38:	cmpeq	r2, r0
   1ed3c:	bne	1ede0 <_start@@Base+0xc6d0>
   1ed40:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ed44:	str	r3, [fp, #-16]
   1ed48:	mov	r3, #2
   1ed4c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ed50:	ldr	r1, [fp, #-16]
   1ed54:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ed58:	bl	13db8 <_start@@Base+0x16a8>
   1ed5c:	str	r0, [fp, #-140]	; 0xffffff74
   1ed60:	ldr	r2, [fp, #-16]
   1ed64:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ed68:	cmp	r2, r3
   1ed6c:	beq	1edc8 <_start@@Base+0xc6b8>
   1ed70:	sub	r3, fp, #32
   1ed74:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ed78:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ed7c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ed80:	bl	1ccc0 <_start@@Base+0xa5b0>
   1ed84:	str	r0, [fp, #-140]	; 0xffffff74
   1ed88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ed8c:	cmp	r3, #0
   1ed90:	beq	20af8 <_start@@Base+0xe3e8>
   1ed94:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ed98:	ldr	r3, [r3]
   1ed9c:	mov	r1, #35	; 0x23
   1eda0:	mov	r0, r3
   1eda4:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1eda8:	str	r0, [fp, #-20]	; 0xffffffec
   1edac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1edb0:	cmp	r3, #0
   1edb4:	beq	20af8 <_start@@Base+0xe3e8>
   1edb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1edbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1edc0:	str	r2, [r3]
   1edc4:	b	208e8 <_start@@Base+0xe1d8>
   1edc8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1edcc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1edd0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1edd4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1edd8:	str	r0, [fp, #-140]	; 0xffffff74
   1eddc:	b	208e8 <_start@@Base+0xe1d8>
   1ede0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ede4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ede8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1edec:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1edf0:	str	r0, [fp, #-140]	; 0xffffff74
   1edf4:	b	208e8 <_start@@Base+0xe1d8>
   1edf8:	cmnvs	r2, r5, ror #24
   1edfc:	stmdbvc	pc!, {r2, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1ee00:	strbvs	r7, [sp, #-115]!	; 0xffffff8d
   1ee04:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1ee08:	rsbvs	r7, r1, #-1811939327	; 0x94000001
   1ee0c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1ee10:			; <UNDEFINED> instruction: 0xffff0000
   1ee14:	ldrtcc	r0, [r4], -r0
   1ee18:	ldrd	r2, [fp, #-12]
   1ee1c:	add	r1, pc, #972	; 0x3cc
   1ee20:	ldrd	r0, [r1]
   1ee24:	cmp	r3, r1
   1ee28:	cmpeq	r2, r0
   1ee2c:	bne	1ef58 <_start@@Base+0xc848>
   1ee30:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ee34:	str	r3, [fp, #-16]
   1ee38:	mov	r3, #8
   1ee3c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ee40:	ldr	r1, [fp, #-16]
   1ee44:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ee48:	bl	13db8 <_start@@Base+0x16a8>
   1ee4c:	str	r0, [fp, #-140]	; 0xffffff74
   1ee50:	ldr	r2, [fp, #-16]
   1ee54:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ee58:	cmp	r2, r3
   1ee5c:	beq	1ef40 <_start@@Base+0xc830>
   1ee60:	mov	r3, #0
   1ee64:	strb	r3, [fp, #-46]	; 0xffffffd2
   1ee68:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ee6c:	str	r3, [fp, #-16]
   1ee70:	sub	r3, fp, #46	; 0x2e
   1ee74:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ee78:	ldr	r1, [fp, #-16]
   1ee7c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ee80:	bl	14c68 <_start@@Base+0x2558>
   1ee84:	str	r0, [fp, #-140]	; 0xffffff74
   1ee88:	ldr	r2, [fp, #-16]
   1ee8c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ee90:	cmp	r2, r3
   1ee94:	bne	1eee4 <_start@@Base+0xc7d4>
   1ee98:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ee9c:	str	r3, [fp, #-16]
   1eea0:	sub	r3, fp, #46	; 0x2e
   1eea4:	str	r3, [sp]
   1eea8:	ldr	r3, [pc, #868]	; 1f214 <_start@@Base+0xcb04>
   1eeac:	add	r3, pc, r3
   1eeb0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eeb4:	ldr	r1, [fp, #-16]
   1eeb8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eebc:	bl	15c1c <_start@@Base+0x350c>
   1eec0:	str	r0, [fp, #-140]	; 0xffffff74
   1eec4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1eec8:	ldr	r3, [fp, #-16]
   1eecc:	cmp	r2, r3
   1eed0:	beq	20af8 <_start@@Base+0xe3e8>
   1eed4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1eed8:	ldr	r3, [fp, #-144]	; 0xffffff70
   1eedc:	cmp	r2, r3
   1eee0:	beq	20af8 <_start@@Base+0xe3e8>
   1eee4:	ldrb	r3, [fp, #-46]	; 0xffffffd2
   1eee8:	cmp	r3, #1
   1eeec:	bne	1ef04 <_start@@Base+0xc7f4>
   1eef0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1eef4:	ldr	r3, [r3, #8]
   1eef8:	and	r3, r3, #2
   1eefc:	cmp	r3, #0
   1ef00:	beq	208e8 <_start@@Base+0xe1d8>
   1ef04:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ef08:	ldr	r0, [r3]
   1ef0c:	mov	r3, #1
   1ef10:	mov	r2, #1
   1ef14:	mov	r1, #15
   1ef18:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1ef1c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ef20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ef24:	cmp	r3, #0
   1ef28:	beq	20a4c <_start@@Base+0xe33c>
   1ef2c:	ldrb	r3, [fp, #-46]	; 0xffffffd2
   1ef30:	mov	r1, r3
   1ef34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef38:	bl	12dc8 <_start@@Base+0x6b8>
   1ef3c:	b	208e8 <_start@@Base+0xe1d8>
   1ef40:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ef44:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ef48:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ef4c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ef50:	str	r0, [fp, #-140]	; 0xffffff74
   1ef54:	b	208e8 <_start@@Base+0xe1d8>
   1ef58:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ef5c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ef60:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ef64:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1ef68:	str	r0, [fp, #-140]	; 0xffffff74
   1ef6c:	b	208e8 <_start@@Base+0xe1d8>
   1ef70:	ldrd	r2, [fp, #-12]
   1ef74:	add	r1, pc, #636	; 0x27c
   1ef78:	ldrd	r0, [r1]
   1ef7c:	cmp	r3, r1
   1ef80:	cmpeq	r2, r0
   1ef84:	bhi	1f0ac <_start@@Base+0xc99c>
   1ef88:	ldrd	r2, [fp, #-12]
   1ef8c:	add	r1, pc, #620	; 0x26c
   1ef90:	ldrd	r0, [r1]
   1ef94:	cmp	r3, r1
   1ef98:	cmpeq	r2, r0
   1ef9c:	bne	1f094 <_start@@Base+0xc984>
   1efa0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1efa4:	add	r3, r3, #8
   1efa8:	str	r3, [fp, #-140]	; 0xffffff74
   1efac:	ldr	r1, [fp, #-144]	; 0xffffff70
   1efb0:	ldr	r0, [fp, #-140]	; 0xffffff74
   1efb4:	bl	137ec <_start@@Base+0x10dc>
   1efb8:	strd	r0, [fp, #-12]
   1efbc:	ldrd	r2, [fp, #-12]
   1efc0:	mov	r0, #0
   1efc4:	mov	r1, #-16777216	; 0xff000000
   1efc8:	and	r2, r2, r0
   1efcc:	and	r3, r3, r1
   1efd0:	cmp	r3, #2030043136	; 0x79000000
   1efd4:	cmpeq	r2, #0
   1efd8:	bne	1f07c <_start@@Base+0xc96c>
   1efdc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1efe0:	str	r3, [fp, #-16]
   1efe4:	mov	r3, #1
   1efe8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1efec:	ldr	r1, [fp, #-16]
   1eff0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eff4:	bl	13db8 <_start@@Base+0x16a8>
   1eff8:	str	r0, [fp, #-140]	; 0xffffff74
   1effc:	ldr	r2, [fp, #-16]
   1f000:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f004:	cmp	r2, r3
   1f008:	beq	1f064 <_start@@Base+0xc954>
   1f00c:	sub	r3, fp, #32
   1f010:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f014:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f018:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f01c:	bl	1a924 <_start@@Base+0x8214>
   1f020:	str	r0, [fp, #-140]	; 0xffffff74
   1f024:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f028:	cmp	r3, #0
   1f02c:	beq	20af8 <_start@@Base+0xe3e8>
   1f030:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f034:	ldr	r3, [r3]
   1f038:	mov	r1, #14
   1f03c:	mov	r0, r3
   1f040:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   1f044:	str	r0, [fp, #-20]	; 0xffffffec
   1f048:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f04c:	cmp	r3, #0
   1f050:	beq	20af8 <_start@@Base+0xe3e8>
   1f054:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f058:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f05c:	str	r2, [r3]
   1f060:	b	208e8 <_start@@Base+0xe1d8>
   1f064:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f068:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f06c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f070:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1f074:	str	r0, [fp, #-140]	; 0xffffff74
   1f078:	b	208e8 <_start@@Base+0xe1d8>
   1f07c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f080:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f084:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f088:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1f08c:	str	r0, [fp, #-140]	; 0xffffff74
   1f090:	b	208e8 <_start@@Base+0xe1d8>
   1f094:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f098:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f09c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f0a0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1f0a4:	str	r0, [fp, #-140]	; 0xffffff74
   1f0a8:	b	208e8 <_start@@Base+0xe1d8>
   1f0ac:	ldrd	r2, [fp, #-12]
   1f0b0:	ldr	r0, [pc, #352]	; 1f218 <_start@@Base+0xcb08>
   1f0b4:	mvn	r1, #0
   1f0b8:	and	r2, r2, r0
   1f0bc:	and	r3, r3, r1
   1f0c0:	add	r1, pc, #320	; 0x140
   1f0c4:	ldrd	r0, [r1]
   1f0c8:	cmp	r3, r1
   1f0cc:	cmpeq	r2, r0
   1f0d0:	bne	1f238 <_start@@Base+0xcb28>
   1f0d4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f0d8:	str	r3, [fp, #-16]
   1f0dc:	mov	r3, #6
   1f0e0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f0e4:	ldr	r1, [fp, #-16]
   1f0e8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f0ec:	bl	13db8 <_start@@Base+0x16a8>
   1f0f0:	str	r0, [fp, #-140]	; 0xffffff74
   1f0f4:	ldr	r2, [fp, #-16]
   1f0f8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f0fc:	cmp	r2, r3
   1f100:	beq	1f220 <_start@@Base+0xcb10>
   1f104:	mov	r3, #0
   1f108:	str	r3, [fp, #-52]	; 0xffffffcc
   1f10c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f110:	str	r3, [fp, #-16]
   1f114:	sub	r3, fp, #52	; 0x34
   1f118:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f11c:	ldr	r1, [fp, #-16]
   1f120:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f124:	bl	33008 <flatcc_json_parser_float@@Base>
   1f128:	str	r0, [fp, #-140]	; 0xffffff74
   1f12c:	ldr	r2, [fp, #-16]
   1f130:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f134:	cmp	r2, r3
   1f138:	bne	1f188 <_start@@Base+0xca78>
   1f13c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f140:	str	r3, [fp, #-16]
   1f144:	sub	r3, fp, #52	; 0x34
   1f148:	str	r3, [sp]
   1f14c:	ldr	r3, [pc, #200]	; 1f21c <_start@@Base+0xcb0c>
   1f150:	add	r3, pc, r3
   1f154:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f158:	ldr	r1, [fp, #-16]
   1f15c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f160:	bl	15dec <_start@@Base+0x36dc>
   1f164:	str	r0, [fp, #-140]	; 0xffffff74
   1f168:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f16c:	ldr	r3, [fp, #-16]
   1f170:	cmp	r2, r3
   1f174:	beq	20af8 <_start@@Base+0xe3e8>
   1f178:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f17c:	ldr	r3, [fp, #-144]	; 0xffffff70
   1f180:	cmp	r2, r3
   1f184:	beq	20af8 <_start@@Base+0xe3e8>
   1f188:	vldr	s15, [fp, #-52]	; 0xffffffcc
   1f18c:	vldr	s14, [pc, #124]	; 1f210 <_start@@Base+0xcb00>
   1f190:	vcmp.f32	s15, s14
   1f194:	vmrs	APSR_nzcv, fpscr
   1f198:	bne	1f1b0 <_start@@Base+0xcaa0>
   1f19c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f1a0:	ldr	r3, [r3, #8]
   1f1a4:	and	r3, r3, #2
   1f1a8:	cmp	r3, #0
   1f1ac:	beq	208e8 <_start@@Base+0xe1d8>
   1f1b0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f1b4:	ldr	r0, [r3]
   1f1b8:	mov	r3, #4
   1f1bc:	mov	r2, #4
   1f1c0:	mov	r1, #26
   1f1c4:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1f1c8:	str	r0, [fp, #-24]	; 0xffffffe8
   1f1cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f1d0:	cmp	r3, #0
   1f1d4:	beq	20a54 <_start@@Base+0xe344>
   1f1d8:	vldr	s15, [fp, #-52]	; 0xffffffcc
   1f1dc:	vmov.f32	s0, s15
   1f1e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1e4:	bl	12c98 <_start@@Base+0x588>
   1f1e8:	b	208e8 <_start@@Base+0xe1d8>
   1f1ec:	nop			; (mov r0, r0)
   1f1f0:	rsbvs	r6, pc, #108, 30	; 0x1b0
   1f1f4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f1f8:	ldrbvs	pc, [pc, #4095]!	; 201ff <_start@@Base+0xdaef>	; <UNPREDICTABLE>
   1f1fc:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f200:	strbvs	r7, [sp, #-116]!	; 0xffffff8c
   1f204:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f208:	ldrtvs	r0, [r2], -r0
   1f20c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f210:	submi	r0, r0, r0
   1f214:	ldrdeq	r9, [r2], -ip
   1f218:			; <UNDEFINED> instruction: 0xffff0000
   1f21c:	andeq	r9, r2, r4, asr #2
   1f220:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f224:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f228:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f22c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1f230:	str	r0, [fp, #-140]	; 0xffffff74
   1f234:	b	208e8 <_start@@Base+0xe1d8>
   1f238:	ldrd	r2, [fp, #-12]
   1f23c:	mov	r0, #-16777216	; 0xff000000
   1f240:	mvn	r1, #0
   1f244:	and	r2, r2, r0
   1f248:	and	r3, r3, r1
   1f24c:	add	r1, pc, #732	; 0x2dc
   1f250:	ldrd	r0, [r1]
   1f254:	cmp	r3, r1
   1f258:	cmpeq	r2, r0
   1f25c:	bne	1f390 <_start@@Base+0xcc80>
   1f260:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f264:	str	r3, [fp, #-16]
   1f268:	mov	r3, #5
   1f26c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f270:	ldr	r1, [fp, #-16]
   1f274:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f278:	bl	13db8 <_start@@Base+0x16a8>
   1f27c:	str	r0, [fp, #-140]	; 0xffffff74
   1f280:	ldr	r2, [fp, #-16]
   1f284:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f288:	cmp	r2, r3
   1f28c:	beq	1f378 <_start@@Base+0xcc68>
   1f290:	mov	r3, #0
   1f294:	str	r3, [fp, #-56]	; 0xffffffc8
   1f298:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f29c:	str	r3, [fp, #-16]
   1f2a0:	sub	r3, fp, #56	; 0x38
   1f2a4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f2a8:	ldr	r1, [fp, #-16]
   1f2ac:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f2b0:	bl	33008 <flatcc_json_parser_float@@Base>
   1f2b4:	str	r0, [fp, #-140]	; 0xffffff74
   1f2b8:	ldr	r2, [fp, #-16]
   1f2bc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f2c0:	cmp	r2, r3
   1f2c4:	bne	1f314 <_start@@Base+0xcc04>
   1f2c8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f2cc:	str	r3, [fp, #-16]
   1f2d0:	sub	r3, fp, #56	; 0x38
   1f2d4:	str	r3, [sp]
   1f2d8:	ldr	r3, [pc, #620]	; 1f54c <_start@@Base+0xce3c>
   1f2dc:	add	r3, pc, r3
   1f2e0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f2e4:	ldr	r1, [fp, #-16]
   1f2e8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f2ec:	bl	15dec <_start@@Base+0x36dc>
   1f2f0:	str	r0, [fp, #-140]	; 0xffffff74
   1f2f4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f2f8:	ldr	r3, [fp, #-16]
   1f2fc:	cmp	r2, r3
   1f300:	beq	20af8 <_start@@Base+0xe3e8>
   1f304:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f308:	ldr	r3, [fp, #-144]	; 0xffffff70
   1f30c:	cmp	r2, r3
   1f310:	beq	20af8 <_start@@Base+0xe3e8>
   1f314:	vldr	s15, [fp, #-56]	; 0xffffffc8
   1f318:	vldr	s14, [pc, #552]	; 1f548 <_start@@Base+0xce38>
   1f31c:	vcmp.f32	s15, s14
   1f320:	vmrs	APSR_nzcv, fpscr
   1f324:	bne	1f33c <_start@@Base+0xcc2c>
   1f328:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f32c:	ldr	r3, [r3, #8]
   1f330:	and	r3, r3, #2
   1f334:	cmp	r3, #0
   1f338:	beq	208e8 <_start@@Base+0xe1d8>
   1f33c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f340:	ldr	r0, [r3]
   1f344:	mov	r3, #4
   1f348:	mov	r2, #4
   1f34c:	mov	r1, #25
   1f350:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1f354:	str	r0, [fp, #-24]	; 0xffffffe8
   1f358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f35c:	cmp	r3, #0
   1f360:	beq	20a5c <_start@@Base+0xe34c>
   1f364:	vldr	s15, [fp, #-56]	; 0xffffffc8
   1f368:	vmov.f32	s0, s15
   1f36c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f370:	bl	12c98 <_start@@Base+0x588>
   1f374:	b	208e8 <_start@@Base+0xe1d8>
   1f378:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f37c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f380:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f384:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1f388:	str	r0, [fp, #-140]	; 0xffffff74
   1f38c:	b	208e8 <_start@@Base+0xe1d8>
   1f390:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f394:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f398:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f39c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1f3a0:	str	r0, [fp, #-140]	; 0xffffff74
   1f3a4:	b	208e8 <_start@@Base+0xe1d8>
   1f3a8:	ldrd	r2, [fp, #-12]
   1f3ac:	add	r1, pc, #388	; 0x184
   1f3b0:	ldrd	r0, [r1]
   1f3b4:	cmp	r3, r1
   1f3b8:	cmpeq	r2, r0
   1f3bc:	bhi	1f558 <_start@@Base+0xce48>
   1f3c0:	ldrd	r2, [fp, #-12]
   1f3c4:	ldr	r0, [pc, #388]	; 1f550 <_start@@Base+0xce40>
   1f3c8:	mvn	r1, #0
   1f3cc:	and	r2, r2, r0
   1f3d0:	and	r3, r3, r1
   1f3d4:	add	r1, pc, #356	; 0x164
   1f3d8:	ldrd	r0, [r1]
   1f3dc:	cmp	r3, r1
   1f3e0:	cmpeq	r2, r0
   1f3e4:	bne	1f514 <_start@@Base+0xce04>
   1f3e8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f3ec:	str	r3, [fp, #-16]
   1f3f0:	mov	r3, #6
   1f3f4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f3f8:	ldr	r1, [fp, #-16]
   1f3fc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f400:	bl	13db8 <_start@@Base+0x16a8>
   1f404:	str	r0, [fp, #-140]	; 0xffffff74
   1f408:	ldr	r2, [fp, #-16]
   1f40c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f410:	cmp	r2, r3
   1f414:	beq	1f4fc <_start@@Base+0xcdec>
   1f418:	mov	r3, #0
   1f41c:	str	r3, [fp, #-60]	; 0xffffffc4
   1f420:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f424:	str	r3, [fp, #-16]
   1f428:	sub	r3, fp, #60	; 0x3c
   1f42c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f430:	ldr	r1, [fp, #-16]
   1f434:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f438:	bl	33008 <flatcc_json_parser_float@@Base>
   1f43c:	str	r0, [fp, #-140]	; 0xffffff74
   1f440:	ldr	r2, [fp, #-16]
   1f444:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f448:	cmp	r2, r3
   1f44c:	bne	1f49c <_start@@Base+0xcd8c>
   1f450:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f454:	str	r3, [fp, #-16]
   1f458:	sub	r3, fp, #60	; 0x3c
   1f45c:	str	r3, [sp]
   1f460:	ldr	r3, [pc, #236]	; 1f554 <_start@@Base+0xce44>
   1f464:	add	r3, pc, r3
   1f468:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f46c:	ldr	r1, [fp, #-16]
   1f470:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f474:	bl	15dec <_start@@Base+0x36dc>
   1f478:	str	r0, [fp, #-140]	; 0xffffff74
   1f47c:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f480:	ldr	r3, [fp, #-16]
   1f484:	cmp	r2, r3
   1f488:	beq	20af8 <_start@@Base+0xe3e8>
   1f48c:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f490:	ldr	r3, [fp, #-144]	; 0xffffff70
   1f494:	cmp	r2, r3
   1f498:	beq	20af8 <_start@@Base+0xe3e8>
   1f49c:	vldr	s15, [fp, #-60]	; 0xffffffc4
   1f4a0:	vcmp.f32	s15, #0.0
   1f4a4:	vmrs	APSR_nzcv, fpscr
   1f4a8:	bne	1f4c0 <_start@@Base+0xcdb0>
   1f4ac:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f4b0:	ldr	r3, [r3, #8]
   1f4b4:	and	r3, r3, #2
   1f4b8:	cmp	r3, #0
   1f4bc:	beq	208e8 <_start@@Base+0xe1d8>
   1f4c0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f4c4:	ldr	r0, [r3]
   1f4c8:	mov	r3, #4
   1f4cc:	mov	r2, #4
   1f4d0:	mov	r1, #27
   1f4d4:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1f4d8:	str	r0, [fp, #-24]	; 0xffffffe8
   1f4dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f4e0:	cmp	r3, #0
   1f4e4:	beq	20a64 <_start@@Base+0xe354>
   1f4e8:	vldr	s15, [fp, #-60]	; 0xffffffc4
   1f4ec:	vmov.f32	s0, s15
   1f4f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f4f4:	bl	12c98 <_start@@Base+0x588>
   1f4f8:	b	208e8 <_start@@Base+0xe1d8>
   1f4fc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f500:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f504:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f508:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1f50c:	str	r0, [fp, #-140]	; 0xffffff74
   1f510:	b	208e8 <_start@@Base+0xe1d8>
   1f514:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f518:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f51c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f520:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1f524:	str	r0, [fp, #-140]	; 0xffffff74
   1f528:	b	208e8 <_start@@Base+0xe1d8>
   1f52c:	nop			; (mov r0, r0)
   1f530:	strvs	r0, [r0], -r0
   1f534:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f538:	stmdavs	r1!, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}^
   1f53c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f540:	ldrtvs	r0, [r3], -r0
   1f544:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f548:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   1f54c:	andeq	r8, r2, r4, asr #31
   1f550:			; <UNDEFINED> instruction: 0xffff0000
   1f554:	andeq	r8, r2, r8, asr #28
   1f558:	ldrd	r2, [fp, #-12]
   1f55c:	add	r1, pc, #764	; 0x2fc
   1f560:	ldrd	r0, [r1]
   1f564:	cmp	r3, r1
   1f568:	cmpeq	r2, r0
   1f56c:	bne	200f4 <_start@@Base+0xd9e4>
   1f570:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f574:	add	r3, r3, #8
   1f578:	str	r3, [fp, #-140]	; 0xffffff74
   1f57c:	ldr	r1, [fp, #-144]	; 0xffffff70
   1f580:	ldr	r0, [fp, #-140]	; 0xffffff74
   1f584:	bl	137ec <_start@@Base+0x10dc>
   1f588:	strd	r0, [fp, #-12]
   1f58c:	ldrd	r2, [fp, #-12]
   1f590:	add	r1, pc, #720	; 0x2d0
   1f594:	ldrd	r0, [r1]
   1f598:	cmp	r3, r1
   1f59c:	cmpeq	r2, r0
   1f5a0:	bhi	1f880 <_start@@Base+0xd170>
   1f5a4:	ldrd	r2, [fp, #-12]
   1f5a8:	add	r1, pc, #704	; 0x2c0
   1f5ac:	ldrd	r0, [r1]
   1f5b0:	cmp	r3, r1
   1f5b4:	cmpeq	r2, r0
   1f5b8:	bne	1f848 <_start@@Base+0xd138>
   1f5bc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f5c0:	str	r3, [fp, #-16]
   1f5c4:	mov	r3, #8
   1f5c8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f5cc:	ldr	r1, [fp, #-16]
   1f5d0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f5d4:	bl	13db8 <_start@@Base+0x16a8>
   1f5d8:	str	r0, [fp, #-140]	; 0xffffff74
   1f5dc:	ldr	r2, [fp, #-16]
   1f5e0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f5e4:	cmp	r2, r3
   1f5e8:	beq	1f6cc <_start@@Base+0xcfbc>
   1f5ec:	mov	r3, #0
   1f5f0:	str	r3, [fp, #-64]	; 0xffffffc0
   1f5f4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f5f8:	str	r3, [fp, #-16]
   1f5fc:	sub	r3, fp, #64	; 0x40
   1f600:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f604:	ldr	r1, [fp, #-16]
   1f608:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f60c:	bl	149f8 <_start@@Base+0x22e8>
   1f610:	str	r0, [fp, #-140]	; 0xffffff74
   1f614:	ldr	r2, [fp, #-16]
   1f618:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f61c:	cmp	r2, r3
   1f620:	bne	1f670 <_start@@Base+0xcf60>
   1f624:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f628:	str	r3, [fp, #-16]
   1f62c:	sub	r3, fp, #64	; 0x40
   1f630:	str	r3, [sp]
   1f634:	ldr	r3, [pc, #572]	; 1f878 <_start@@Base+0xd168>
   1f638:	add	r3, pc, r3
   1f63c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f640:	ldr	r1, [fp, #-16]
   1f644:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f648:	bl	15698 <_start@@Base+0x2f88>
   1f64c:	str	r0, [fp, #-140]	; 0xffffff74
   1f650:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f654:	ldr	r3, [fp, #-16]
   1f658:	cmp	r2, r3
   1f65c:	beq	20af8 <_start@@Base+0xe3e8>
   1f660:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f664:	ldr	r3, [fp, #-144]	; 0xffffff70
   1f668:	cmp	r2, r3
   1f66c:	beq	20af8 <_start@@Base+0xe3e8>
   1f670:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f674:	cmp	r3, #0
   1f678:	bne	1f690 <_start@@Base+0xcf80>
   1f67c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f680:	ldr	r3, [r3, #8]
   1f684:	and	r3, r3, #2
   1f688:	cmp	r3, #0
   1f68c:	beq	208e8 <_start@@Base+0xe1d8>
   1f690:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f694:	ldr	r0, [r3]
   1f698:	mov	r3, #4
   1f69c:	mov	r2, #4
   1f6a0:	mov	r1, #16
   1f6a4:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1f6a8:	str	r0, [fp, #-24]	; 0xffffffe8
   1f6ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f6b0:	cmp	r3, #0
   1f6b4:	beq	20a6c <_start@@Base+0xe35c>
   1f6b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f6bc:	mov	r1, r3
   1f6c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6c4:	bl	12b64 <_start@@Base+0x454>
   1f6c8:	b	208e8 <_start@@Base+0xe1d8>
   1f6cc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f6d0:	add	r3, r3, #8
   1f6d4:	str	r3, [fp, #-140]	; 0xffffff74
   1f6d8:	ldr	r1, [fp, #-144]	; 0xffffff70
   1f6dc:	ldr	r0, [fp, #-140]	; 0xffffff74
   1f6e0:	bl	137ec <_start@@Base+0x10dc>
   1f6e4:	strd	r0, [fp, #-12]
   1f6e8:	ldrd	r2, [fp, #-12]
   1f6ec:	mov	r0, #0
   1f6f0:	mov	r1, #-16777216	; 0xff000000
   1f6f4:	and	r2, r2, r0
   1f6f8:	and	r3, r3, r1
   1f6fc:	cmp	r3, #1627389952	; 0x61000000
   1f700:	cmpeq	r2, #0
   1f704:	bne	1f830 <_start@@Base+0xd120>
   1f708:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f70c:	str	r3, [fp, #-16]
   1f710:	mov	r3, #1
   1f714:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f718:	ldr	r1, [fp, #-16]
   1f71c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f720:	bl	13db8 <_start@@Base+0x16a8>
   1f724:	str	r0, [fp, #-140]	; 0xffffff74
   1f728:	ldr	r2, [fp, #-16]
   1f72c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f730:	cmp	r2, r3
   1f734:	beq	1f818 <_start@@Base+0xd108>
   1f738:	mov	r3, #0
   1f73c:	str	r3, [fp, #-68]	; 0xffffffbc
   1f740:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f744:	str	r3, [fp, #-16]
   1f748:	sub	r3, fp, #68	; 0x44
   1f74c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f750:	ldr	r1, [fp, #-16]
   1f754:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f758:	bl	149f8 <_start@@Base+0x22e8>
   1f75c:	str	r0, [fp, #-140]	; 0xffffff74
   1f760:	ldr	r2, [fp, #-16]
   1f764:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f768:	cmp	r2, r3
   1f76c:	bne	1f7bc <_start@@Base+0xd0ac>
   1f770:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f774:	str	r3, [fp, #-16]
   1f778:	sub	r3, fp, #68	; 0x44
   1f77c:	str	r3, [sp]
   1f780:	ldr	r3, [pc, #244]	; 1f87c <_start@@Base+0xd16c>
   1f784:	add	r3, pc, r3
   1f788:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f78c:	ldr	r1, [fp, #-16]
   1f790:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f794:	bl	15698 <_start@@Base+0x2f88>
   1f798:	str	r0, [fp, #-140]	; 0xffffff74
   1f79c:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f7a0:	ldr	r3, [fp, #-16]
   1f7a4:	cmp	r2, r3
   1f7a8:	beq	20af8 <_start@@Base+0xe3e8>
   1f7ac:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f7b0:	ldr	r3, [fp, #-144]	; 0xffffff70
   1f7b4:	cmp	r2, r3
   1f7b8:	beq	20af8 <_start@@Base+0xe3e8>
   1f7bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1f7c0:	cmp	r3, #0
   1f7c4:	bne	1f7dc <_start@@Base+0xd0cc>
   1f7c8:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f7cc:	ldr	r3, [r3, #8]
   1f7d0:	and	r3, r3, #2
   1f7d4:	cmp	r3, #0
   1f7d8:	beq	208e8 <_start@@Base+0xe1d8>
   1f7dc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f7e0:	ldr	r0, [r3]
   1f7e4:	mov	r3, #4
   1f7e8:	mov	r2, #4
   1f7ec:	mov	r1, #20
   1f7f0:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1f7f4:	str	r0, [fp, #-24]	; 0xffffffe8
   1f7f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f7fc:	cmp	r3, #0
   1f800:	beq	20a74 <_start@@Base+0xe364>
   1f804:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1f808:	mov	r1, r3
   1f80c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f810:	bl	12b64 <_start@@Base+0x454>
   1f814:	b	208e8 <_start@@Base+0xe1d8>
   1f818:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f81c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f820:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f824:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1f828:	str	r0, [fp, #-140]	; 0xffffff74
   1f82c:	b	208e8 <_start@@Base+0xe1d8>
   1f830:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f834:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f838:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f83c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1f840:	str	r0, [fp, #-140]	; 0xffffff74
   1f844:	b	208e8 <_start@@Base+0xe1d8>
   1f848:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f84c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f850:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f854:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1f858:	str	r0, [fp, #-140]	; 0xffffff74
   1f85c:	b	208e8 <_start@@Base+0xe1d8>
   1f860:	stmdavs	r1!, {r3, r5, r6, r8, r9, ip, sp, lr}^
   1f864:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f868:			; <UNDEFINED> instruction: 0x666e7630
   1f86c:	teqvc	r6, #1593835520	; 0x5f000000
   1f870:			; <UNDEFINED> instruction: 0x666e7631
   1f874:	teqvc	r3, #-268435451	; 0xf0000005
   1f878:	andeq	r8, r2, r0, lsl #25
   1f87c:	andeq	r8, r2, r0, asr #22
   1f880:	ldrd	r2, [fp, #-12]
   1f884:	add	r1, pc, #716	; 0x2cc
   1f888:	ldrd	r0, [r1]
   1f88c:	cmp	r3, r1
   1f890:	cmpeq	r2, r0
   1f894:	bhi	1fb70 <_start@@Base+0xd460>
   1f898:	ldrd	r2, [fp, #-12]
   1f89c:	add	r1, pc, #700	; 0x2bc
   1f8a0:	ldrd	r0, [r1]
   1f8a4:	cmp	r3, r1
   1f8a8:	cmpeq	r2, r0
   1f8ac:	bne	1fb3c <_start@@Base+0xd42c>
   1f8b0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f8b4:	str	r3, [fp, #-16]
   1f8b8:	mov	r3, #8
   1f8bc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f8c0:	ldr	r1, [fp, #-16]
   1f8c4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f8c8:	bl	13db8 <_start@@Base+0x16a8>
   1f8cc:	str	r0, [fp, #-140]	; 0xffffff74
   1f8d0:	ldr	r2, [fp, #-16]
   1f8d4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f8d8:	cmp	r2, r3
   1f8dc:	beq	1f9c0 <_start@@Base+0xd2b0>
   1f8e0:	mov	r2, #0
   1f8e4:	mov	r3, #0
   1f8e8:	strd	r2, [fp, #-76]	; 0xffffffb4
   1f8ec:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f8f0:	str	r3, [fp, #-16]
   1f8f4:	sub	r3, fp, #76	; 0x4c
   1f8f8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f8fc:	ldr	r1, [fp, #-16]
   1f900:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f904:	bl	14924 <_start@@Base+0x2214>
   1f908:	str	r0, [fp, #-140]	; 0xffffff74
   1f90c:	ldr	r2, [fp, #-16]
   1f910:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f914:	cmp	r2, r3
   1f918:	bne	1f968 <_start@@Base+0xd258>
   1f91c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f920:	str	r3, [fp, #-16]
   1f924:	sub	r3, fp, #76	; 0x4c
   1f928:	str	r3, [sp]
   1f92c:	ldr	r3, [pc, #564]	; 1fb68 <_start@@Base+0xd458>
   1f930:	add	r3, pc, r3
   1f934:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f938:	ldr	r1, [fp, #-16]
   1f93c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f940:	bl	154c0 <_start@@Base+0x2db0>
   1f944:	str	r0, [fp, #-140]	; 0xffffff74
   1f948:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f94c:	ldr	r3, [fp, #-16]
   1f950:	cmp	r2, r3
   1f954:	beq	20af8 <_start@@Base+0xe3e8>
   1f958:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f95c:	ldr	r3, [fp, #-144]	; 0xffffff70
   1f960:	cmp	r2, r3
   1f964:	beq	20af8 <_start@@Base+0xe3e8>
   1f968:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1f96c:	orrs	r3, r2, r3
   1f970:	bne	1f988 <_start@@Base+0xd278>
   1f974:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f978:	ldr	r3, [r3, #8]
   1f97c:	and	r3, r3, #2
   1f980:	cmp	r3, #0
   1f984:	beq	208e8 <_start@@Base+0xe1d8>
   1f988:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f98c:	ldr	r0, [r3]
   1f990:	mov	r3, #8
   1f994:	mov	r2, #8
   1f998:	mov	r1, #18
   1f99c:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1f9a0:	str	r0, [fp, #-24]	; 0xffffffe8
   1f9a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f9a8:	cmp	r3, #0
   1f9ac:	beq	20a7c <_start@@Base+0xe36c>
   1f9b0:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1f9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f9b8:	bl	12bc0 <_start@@Base+0x4b0>
   1f9bc:	b	208e8 <_start@@Base+0xe1d8>
   1f9c0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f9c4:	add	r3, r3, #8
   1f9c8:	str	r3, [fp, #-140]	; 0xffffff74
   1f9cc:	ldr	r1, [fp, #-144]	; 0xffffff70
   1f9d0:	ldr	r0, [fp, #-140]	; 0xffffff74
   1f9d4:	bl	137ec <_start@@Base+0x10dc>
   1f9d8:	strd	r0, [fp, #-12]
   1f9dc:	ldrd	r2, [fp, #-12]
   1f9e0:	mov	r0, #0
   1f9e4:	mov	r1, #-16777216	; 0xff000000
   1f9e8:	and	r2, r2, r0
   1f9ec:	and	r3, r3, r1
   1f9f0:	cmp	r3, #1627389952	; 0x61000000
   1f9f4:	cmpeq	r2, #0
   1f9f8:	bne	1fb24 <_start@@Base+0xd414>
   1f9fc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fa00:	str	r3, [fp, #-16]
   1fa04:	mov	r3, #1
   1fa08:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fa0c:	ldr	r1, [fp, #-16]
   1fa10:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fa14:	bl	13db8 <_start@@Base+0x16a8>
   1fa18:	str	r0, [fp, #-140]	; 0xffffff74
   1fa1c:	ldr	r2, [fp, #-16]
   1fa20:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fa24:	cmp	r2, r3
   1fa28:	beq	1fb0c <_start@@Base+0xd3fc>
   1fa2c:	mov	r2, #0
   1fa30:	mov	r3, #0
   1fa34:	strd	r2, [fp, #-84]	; 0xffffffac
   1fa38:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fa3c:	str	r3, [fp, #-16]
   1fa40:	sub	r3, fp, #84	; 0x54
   1fa44:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fa48:	ldr	r1, [fp, #-16]
   1fa4c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fa50:	bl	14924 <_start@@Base+0x2214>
   1fa54:	str	r0, [fp, #-140]	; 0xffffff74
   1fa58:	ldr	r2, [fp, #-16]
   1fa5c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fa60:	cmp	r2, r3
   1fa64:	bne	1fab4 <_start@@Base+0xd3a4>
   1fa68:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fa6c:	str	r3, [fp, #-16]
   1fa70:	sub	r3, fp, #84	; 0x54
   1fa74:	str	r3, [sp]
   1fa78:	ldr	r3, [pc, #236]	; 1fb6c <_start@@Base+0xd45c>
   1fa7c:	add	r3, pc, r3
   1fa80:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fa84:	ldr	r1, [fp, #-16]
   1fa88:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fa8c:	bl	154c0 <_start@@Base+0x2db0>
   1fa90:	str	r0, [fp, #-140]	; 0xffffff74
   1fa94:	ldr	r2, [fp, #-140]	; 0xffffff74
   1fa98:	ldr	r3, [fp, #-16]
   1fa9c:	cmp	r2, r3
   1faa0:	beq	20af8 <_start@@Base+0xe3e8>
   1faa4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1faa8:	ldr	r3, [fp, #-144]	; 0xffffff70
   1faac:	cmp	r2, r3
   1fab0:	beq	20af8 <_start@@Base+0xe3e8>
   1fab4:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1fab8:	orrs	r3, r2, r3
   1fabc:	bne	1fad4 <_start@@Base+0xd3c4>
   1fac0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fac4:	ldr	r3, [r3, #8]
   1fac8:	and	r3, r3, #2
   1facc:	cmp	r3, #0
   1fad0:	beq	208e8 <_start@@Base+0xe1d8>
   1fad4:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fad8:	ldr	r0, [r3]
   1fadc:	mov	r3, #8
   1fae0:	mov	r2, #8
   1fae4:	mov	r1, #22
   1fae8:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1faec:	str	r0, [fp, #-24]	; 0xffffffe8
   1faf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1faf4:	cmp	r3, #0
   1faf8:	beq	20a84 <_start@@Base+0xe374>
   1fafc:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1fb00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fb04:	bl	12bc0 <_start@@Base+0x4b0>
   1fb08:	b	208e8 <_start@@Base+0xe1d8>
   1fb0c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fb10:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fb14:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fb18:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1fb1c:	str	r0, [fp, #-140]	; 0xffffff74
   1fb20:	b	208e8 <_start@@Base+0xe1d8>
   1fb24:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fb28:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fb2c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fb30:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1fb34:	str	r0, [fp, #-140]	; 0xffffff74
   1fb38:	b	208e8 <_start@@Base+0xe1d8>
   1fb3c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fb40:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fb44:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fb48:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1fb4c:	str	r0, [fp, #-140]	; 0xffffff74
   1fb50:	b	208e8 <_start@@Base+0xe1d8>
   1fb54:	nop			; (mov r0, r0)
   1fb58:			; <UNDEFINED> instruction: 0x666e7630
   1fb5c:	ldrvc	r3, [r3, #-607]!	; 0xfffffda1
   1fb60:			; <UNDEFINED> instruction: 0x666e7631
   1fb64:	teqvc	r6, #1593835520	; 0x5f000000
   1fb68:	andeq	r8, r2, r0, lsr #19
   1fb6c:	andeq	r8, r2, r0, ror #16
   1fb70:	ldrd	r2, [fp, #-12]
   1fb74:	add	r1, pc, #964	; 0x3c4
   1fb78:	ldrd	r0, [r1]
   1fb7c:	cmp	r3, r1
   1fb80:	cmpeq	r2, r0
   1fb84:	bne	1fe14 <_start@@Base+0xd704>
   1fb88:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fb8c:	str	r3, [fp, #-16]
   1fb90:	mov	r3, #8
   1fb94:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fb98:	ldr	r1, [fp, #-16]
   1fb9c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fba0:	bl	13db8 <_start@@Base+0x16a8>
   1fba4:	str	r0, [fp, #-140]	; 0xffffff74
   1fba8:	ldr	r2, [fp, #-16]
   1fbac:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fbb0:	cmp	r2, r3
   1fbb4:	beq	1fc98 <_start@@Base+0xd588>
   1fbb8:	mov	r3, #0
   1fbbc:	str	r3, [fp, #-88]	; 0xffffffa8
   1fbc0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fbc4:	str	r3, [fp, #-16]
   1fbc8:	sub	r3, fp, #88	; 0x58
   1fbcc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fbd0:	ldr	r1, [fp, #-16]
   1fbd4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fbd8:	bl	146b4 <_start@@Base+0x1fa4>
   1fbdc:	str	r0, [fp, #-140]	; 0xffffff74
   1fbe0:	ldr	r2, [fp, #-16]
   1fbe4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fbe8:	cmp	r2, r3
   1fbec:	bne	1fc3c <_start@@Base+0xd52c>
   1fbf0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fbf4:	str	r3, [fp, #-16]
   1fbf8:	sub	r3, fp, #88	; 0x58
   1fbfc:	str	r3, [sp]
   1fc00:	ldr	r3, [pc, #840]	; 1ff50 <_start@@Base+0xd840>
   1fc04:	add	r3, pc, r3
   1fc08:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fc0c:	ldr	r1, [fp, #-16]
   1fc10:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fc14:	bl	14f54 <_start@@Base+0x2844>
   1fc18:	str	r0, [fp, #-140]	; 0xffffff74
   1fc1c:	ldr	r2, [fp, #-140]	; 0xffffff74
   1fc20:	ldr	r3, [fp, #-16]
   1fc24:	cmp	r2, r3
   1fc28:	beq	20af8 <_start@@Base+0xe3e8>
   1fc2c:	ldr	r2, [fp, #-140]	; 0xffffff74
   1fc30:	ldr	r3, [fp, #-144]	; 0xffffff70
   1fc34:	cmp	r2, r3
   1fc38:	beq	20af8 <_start@@Base+0xe3e8>
   1fc3c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1fc40:	cmp	r3, #0
   1fc44:	bne	1fc5c <_start@@Base+0xd54c>
   1fc48:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fc4c:	ldr	r3, [r3, #8]
   1fc50:	and	r3, r3, #2
   1fc54:	cmp	r3, #0
   1fc58:	beq	208e8 <_start@@Base+0xe1d8>
   1fc5c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fc60:	ldr	r0, [r3]
   1fc64:	mov	r3, #4
   1fc68:	mov	r2, #4
   1fc6c:	mov	r1, #17
   1fc70:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1fc74:	str	r0, [fp, #-24]	; 0xffffffe8
   1fc78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fc7c:	cmp	r3, #0
   1fc80:	beq	20a8c <_start@@Base+0xe37c>
   1fc84:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1fc88:	mov	r1, r3
   1fc8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fc90:	bl	1292c <_start@@Base+0x21c>
   1fc94:	b	208e8 <_start@@Base+0xe1d8>
   1fc98:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fc9c:	add	r3, r3, #8
   1fca0:	str	r3, [fp, #-140]	; 0xffffff74
   1fca4:	ldr	r1, [fp, #-144]	; 0xffffff70
   1fca8:	ldr	r0, [fp, #-140]	; 0xffffff74
   1fcac:	bl	137ec <_start@@Base+0x10dc>
   1fcb0:	strd	r0, [fp, #-12]
   1fcb4:	ldrd	r2, [fp, #-12]
   1fcb8:	mov	r0, #0
   1fcbc:	mov	r1, #-16777216	; 0xff000000
   1fcc0:	and	r2, r2, r0
   1fcc4:	and	r3, r3, r1
   1fcc8:	cmp	r3, #1627389952	; 0x61000000
   1fccc:	cmpeq	r2, #0
   1fcd0:	bne	1fdfc <_start@@Base+0xd6ec>
   1fcd4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fcd8:	str	r3, [fp, #-16]
   1fcdc:	mov	r3, #1
   1fce0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fce4:	ldr	r1, [fp, #-16]
   1fce8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fcec:	bl	13db8 <_start@@Base+0x16a8>
   1fcf0:	str	r0, [fp, #-140]	; 0xffffff74
   1fcf4:	ldr	r2, [fp, #-16]
   1fcf8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fcfc:	cmp	r2, r3
   1fd00:	beq	1fde4 <_start@@Base+0xd6d4>
   1fd04:	mov	r3, #0
   1fd08:	str	r3, [fp, #-92]	; 0xffffffa4
   1fd0c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fd10:	str	r3, [fp, #-16]
   1fd14:	sub	r3, fp, #92	; 0x5c
   1fd18:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fd1c:	ldr	r1, [fp, #-16]
   1fd20:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fd24:	bl	146b4 <_start@@Base+0x1fa4>
   1fd28:	str	r0, [fp, #-140]	; 0xffffff74
   1fd2c:	ldr	r2, [fp, #-16]
   1fd30:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fd34:	cmp	r2, r3
   1fd38:	bne	1fd88 <_start@@Base+0xd678>
   1fd3c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fd40:	str	r3, [fp, #-16]
   1fd44:	sub	r3, fp, #92	; 0x5c
   1fd48:	str	r3, [sp]
   1fd4c:	ldr	r3, [pc, #512]	; 1ff54 <_start@@Base+0xd844>
   1fd50:	add	r3, pc, r3
   1fd54:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fd58:	ldr	r1, [fp, #-16]
   1fd5c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fd60:	bl	14f54 <_start@@Base+0x2844>
   1fd64:	str	r0, [fp, #-140]	; 0xffffff74
   1fd68:	ldr	r2, [fp, #-140]	; 0xffffff74
   1fd6c:	ldr	r3, [fp, #-16]
   1fd70:	cmp	r2, r3
   1fd74:	beq	20af8 <_start@@Base+0xe3e8>
   1fd78:	ldr	r2, [fp, #-140]	; 0xffffff74
   1fd7c:	ldr	r3, [fp, #-144]	; 0xffffff70
   1fd80:	cmp	r2, r3
   1fd84:	beq	20af8 <_start@@Base+0xe3e8>
   1fd88:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1fd8c:	cmp	r3, #0
   1fd90:	bne	1fda8 <_start@@Base+0xd698>
   1fd94:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fd98:	ldr	r3, [r3, #8]
   1fd9c:	and	r3, r3, #2
   1fda0:	cmp	r3, #0
   1fda4:	beq	208e8 <_start@@Base+0xe1d8>
   1fda8:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fdac:	ldr	r0, [r3]
   1fdb0:	mov	r3, #4
   1fdb4:	mov	r2, #4
   1fdb8:	mov	r1, #21
   1fdbc:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1fdc0:	str	r0, [fp, #-24]	; 0xffffffe8
   1fdc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fdc8:	cmp	r3, #0
   1fdcc:	beq	20a94 <_start@@Base+0xe384>
   1fdd0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1fdd4:	mov	r1, r3
   1fdd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fddc:	bl	1292c <_start@@Base+0x21c>
   1fde0:	b	208e8 <_start@@Base+0xe1d8>
   1fde4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fde8:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fdec:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fdf0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1fdf4:	str	r0, [fp, #-140]	; 0xffffff74
   1fdf8:	b	208e8 <_start@@Base+0xe1d8>
   1fdfc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fe00:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fe04:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fe08:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   1fe0c:	str	r0, [fp, #-140]	; 0xffffff74
   1fe10:	b	208e8 <_start@@Base+0xe1d8>
   1fe14:	ldrd	r2, [fp, #-12]
   1fe18:	add	r1, pc, #296	; 0x128
   1fe1c:	ldrd	r0, [r1]
   1fe20:	cmp	r3, r1
   1fe24:	cmpeq	r2, r0
   1fe28:	bne	200dc <_start@@Base+0xd9cc>
   1fe2c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fe30:	str	r3, [fp, #-16]
   1fe34:	mov	r3, #8
   1fe38:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fe3c:	ldr	r1, [fp, #-16]
   1fe40:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fe44:	bl	13db8 <_start@@Base+0x16a8>
   1fe48:	str	r0, [fp, #-140]	; 0xffffff74
   1fe4c:	ldr	r2, [fp, #-16]
   1fe50:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fe54:	cmp	r2, r3
   1fe58:	beq	1ff60 <_start@@Base+0xd850>
   1fe5c:	mov	r2, #0
   1fe60:	mov	r3, #0
   1fe64:	strd	r2, [fp, #-100]	; 0xffffff9c
   1fe68:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fe6c:	str	r3, [fp, #-16]
   1fe70:	sub	r3, fp, #100	; 0x64
   1fe74:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fe78:	ldr	r1, [fp, #-16]
   1fe7c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fe80:	bl	145e0 <_start@@Base+0x1ed0>
   1fe84:	str	r0, [fp, #-140]	; 0xffffff74
   1fe88:	ldr	r2, [fp, #-16]
   1fe8c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fe90:	cmp	r2, r3
   1fe94:	bne	1fee4 <_start@@Base+0xd7d4>
   1fe98:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fe9c:	str	r3, [fp, #-16]
   1fea0:	sub	r3, fp, #100	; 0x64
   1fea4:	str	r3, [sp]
   1fea8:	ldr	r3, [pc, #168]	; 1ff58 <_start@@Base+0xd848>
   1feac:	add	r3, pc, r3
   1feb0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1feb4:	ldr	r1, [fp, #-16]
   1feb8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1febc:	bl	14d7c <_start@@Base+0x266c>
   1fec0:	str	r0, [fp, #-140]	; 0xffffff74
   1fec4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1fec8:	ldr	r3, [fp, #-16]
   1fecc:	cmp	r2, r3
   1fed0:	beq	20af8 <_start@@Base+0xe3e8>
   1fed4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1fed8:	ldr	r3, [fp, #-144]	; 0xffffff70
   1fedc:	cmp	r2, r3
   1fee0:	beq	20af8 <_start@@Base+0xe3e8>
   1fee4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1fee8:	orrs	r3, r2, r3
   1feec:	bne	1ff04 <_start@@Base+0xd7f4>
   1fef0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fef4:	ldr	r3, [r3, #8]
   1fef8:	and	r3, r3, #2
   1fefc:	cmp	r3, #0
   1ff00:	beq	208e8 <_start@@Base+0xe1d8>
   1ff04:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ff08:	ldr	r0, [r3]
   1ff0c:	mov	r3, #8
   1ff10:	mov	r2, #8
   1ff14:	mov	r1, #19
   1ff18:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   1ff1c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ff20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ff24:	cmp	r3, #0
   1ff28:	beq	20a9c <_start@@Base+0xe38c>
   1ff2c:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1ff30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ff34:	bl	12988 <_start@@Base+0x278>
   1ff38:	b	208e8 <_start@@Base+0xe1d8>
   1ff3c:	nop			; (mov r0, r0)
   1ff40:			; <UNDEFINED> instruction: 0x666e7631
   1ff44:	ldrvc	r3, [r3, #-607]!	; 0xfffffda1
   1ff48:			; <UNDEFINED> instruction: 0x666e7631
   1ff4c:	ldrvc	r3, [r6, #-1119]!	; 0xfffffba1
   1ff50:	andeq	r8, r2, r4, ror #13
   1ff54:	andeq	r8, r2, r4, lsr #11
   1ff58:	andeq	r8, r2, r4, asr r4
   1ff5c:	strdeq	r8, [r2], -r0
   1ff60:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ff64:	add	r3, r3, #8
   1ff68:	str	r3, [fp, #-140]	; 0xffffff74
   1ff6c:	ldr	r1, [fp, #-144]	; 0xffffff70
   1ff70:	ldr	r0, [fp, #-140]	; 0xffffff74
   1ff74:	bl	137ec <_start@@Base+0x10dc>
   1ff78:	strd	r0, [fp, #-12]
   1ff7c:	ldrd	r2, [fp, #-12]
   1ff80:	mov	r0, #0
   1ff84:	mov	r1, #-16777216	; 0xff000000
   1ff88:	and	r2, r2, r0
   1ff8c:	and	r3, r3, r1
   1ff90:	cmp	r3, #1627389952	; 0x61000000
   1ff94:	cmpeq	r2, #0
   1ff98:	bne	200c4 <_start@@Base+0xd9b4>
   1ff9c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ffa0:	str	r3, [fp, #-16]
   1ffa4:	mov	r3, #1
   1ffa8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ffac:	ldr	r1, [fp, #-16]
   1ffb0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ffb4:	bl	13db8 <_start@@Base+0x16a8>
   1ffb8:	str	r0, [fp, #-140]	; 0xffffff74
   1ffbc:	ldr	r2, [fp, #-16]
   1ffc0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ffc4:	cmp	r2, r3
   1ffc8:	beq	200ac <_start@@Base+0xd99c>
   1ffcc:	mov	r2, #0
   1ffd0:	mov	r3, #0
   1ffd4:	strd	r2, [fp, #-108]	; 0xffffff94
   1ffd8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ffdc:	str	r3, [fp, #-16]
   1ffe0:	sub	r3, fp, #108	; 0x6c
   1ffe4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ffe8:	ldr	r1, [fp, #-16]
   1ffec:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fff0:	bl	145e0 <_start@@Base+0x1ed0>
   1fff4:	str	r0, [fp, #-140]	; 0xffffff74
   1fff8:	ldr	r2, [fp, #-16]
   1fffc:	ldr	r3, [fp, #-140]	; 0xffffff74
   20000:	cmp	r2, r3
   20004:	bne	20054 <_start@@Base+0xd944>
   20008:	ldr	r3, [fp, #-140]	; 0xffffff74
   2000c:	str	r3, [fp, #-16]
   20010:	sub	r3, fp, #108	; 0x6c
   20014:	str	r3, [sp]
   20018:	ldr	r3, [pc, #-196]	; 1ff5c <_start@@Base+0xd84c>
   2001c:	add	r3, pc, r3
   20020:	ldr	r2, [fp, #-144]	; 0xffffff70
   20024:	ldr	r1, [fp, #-16]
   20028:	ldr	r0, [fp, #-136]	; 0xffffff78
   2002c:	bl	14d7c <_start@@Base+0x266c>
   20030:	str	r0, [fp, #-140]	; 0xffffff74
   20034:	ldr	r2, [fp, #-140]	; 0xffffff74
   20038:	ldr	r3, [fp, #-16]
   2003c:	cmp	r2, r3
   20040:	beq	20af8 <_start@@Base+0xe3e8>
   20044:	ldr	r2, [fp, #-140]	; 0xffffff74
   20048:	ldr	r3, [fp, #-144]	; 0xffffff70
   2004c:	cmp	r2, r3
   20050:	beq	20af8 <_start@@Base+0xe3e8>
   20054:	ldrd	r2, [fp, #-108]	; 0xffffff94
   20058:	orrs	r3, r2, r3
   2005c:	bne	20074 <_start@@Base+0xd964>
   20060:	ldr	r3, [fp, #-136]	; 0xffffff78
   20064:	ldr	r3, [r3, #8]
   20068:	and	r3, r3, #2
   2006c:	cmp	r3, #0
   20070:	beq	208e8 <_start@@Base+0xe1d8>
   20074:	ldr	r3, [fp, #-136]	; 0xffffff78
   20078:	ldr	r0, [r3]
   2007c:	mov	r3, #8
   20080:	mov	r2, #8
   20084:	mov	r1, #23
   20088:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   2008c:	str	r0, [fp, #-24]	; 0xffffffe8
   20090:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20094:	cmp	r3, #0
   20098:	beq	20aa4 <_start@@Base+0xe394>
   2009c:	ldrd	r2, [fp, #-108]	; 0xffffff94
   200a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   200a4:	bl	12988 <_start@@Base+0x278>
   200a8:	b	208e8 <_start@@Base+0xe1d8>
   200ac:	ldr	r2, [fp, #-144]	; 0xffffff70
   200b0:	ldr	r1, [fp, #-140]	; 0xffffff74
   200b4:	ldr	r0, [fp, #-136]	; 0xffffff78
   200b8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   200bc:	str	r0, [fp, #-140]	; 0xffffff74
   200c0:	b	208e8 <_start@@Base+0xe1d8>
   200c4:	ldr	r2, [fp, #-144]	; 0xffffff70
   200c8:	ldr	r1, [fp, #-140]	; 0xffffff74
   200cc:	ldr	r0, [fp, #-136]	; 0xffffff78
   200d0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   200d4:	str	r0, [fp, #-140]	; 0xffffff74
   200d8:	b	208e8 <_start@@Base+0xe1d8>
   200dc:	ldr	r2, [fp, #-144]	; 0xffffff70
   200e0:	ldr	r1, [fp, #-140]	; 0xffffff74
   200e4:	ldr	r0, [fp, #-136]	; 0xffffff78
   200e8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   200ec:	str	r0, [fp, #-140]	; 0xffffff74
   200f0:	b	208e8 <_start@@Base+0xe1d8>
   200f4:	ldrd	r2, [fp, #-12]
   200f8:	add	r1, pc, #816	; 0x330
   200fc:	ldrd	r0, [r1]
   20100:	cmp	r3, r1
   20104:	cmpeq	r2, r0
   20108:	bhi	20454 <_start@@Base+0xdd44>
   2010c:	ldrd	r2, [fp, #-12]
   20110:	add	r1, pc, #800	; 0x320
   20114:	ldrd	r0, [r1]
   20118:	cmp	r3, r1
   2011c:	cmpeq	r2, r0
   20120:	bne	20414 <_start@@Base+0xdd04>
   20124:	ldr	r3, [fp, #-140]	; 0xffffff74
   20128:	add	r3, r3, #8
   2012c:	str	r3, [fp, #-140]	; 0xffffff74
   20130:	ldr	r1, [fp, #-144]	; 0xffffff70
   20134:	ldr	r0, [fp, #-140]	; 0xffffff74
   20138:	bl	137ec <_start@@Base+0x10dc>
   2013c:	strd	r0, [fp, #-12]
   20140:	ldrd	r2, [fp, #-12]
   20144:	add	r1, pc, #756	; 0x2f4
   20148:	ldrd	r0, [r1]
   2014c:	cmp	r3, r1
   20150:	cmpeq	r2, r0
   20154:	bne	203fc <_start@@Base+0xdcec>
   20158:	ldr	r3, [fp, #-140]	; 0xffffff74
   2015c:	add	r3, r3, #8
   20160:	str	r3, [fp, #-140]	; 0xffffff74
   20164:	ldr	r1, [fp, #-144]	; 0xffffff70
   20168:	ldr	r0, [fp, #-140]	; 0xffffff74
   2016c:	bl	137ec <_start@@Base+0x10dc>
   20170:	strd	r0, [fp, #-12]
   20174:	ldrd	r2, [fp, #-12]
   20178:	mov	r0, #0
   2017c:	mvn	r1, #0
   20180:	and	r2, r2, r0
   20184:	and	r3, r3, r1
   20188:	add	r1, pc, #696	; 0x2b8
   2018c:	ldrd	r0, [r1]
   20190:	cmp	r3, r1
   20194:	cmpeq	r2, r0
   20198:	bne	203e4 <_start@@Base+0xdcd4>
   2019c:	ldr	r3, [fp, #-140]	; 0xffffff74
   201a0:	str	r3, [fp, #-16]
   201a4:	mov	r3, #4
   201a8:	ldr	r2, [fp, #-144]	; 0xffffff70
   201ac:	ldr	r1, [fp, #-16]
   201b0:	ldr	r0, [fp, #-136]	; 0xffffff78
   201b4:	bl	13db8 <_start@@Base+0x16a8>
   201b8:	str	r0, [fp, #-140]	; 0xffffff74
   201bc:	ldr	r2, [fp, #-16]
   201c0:	ldr	r3, [fp, #-140]	; 0xffffff74
   201c4:	cmp	r2, r3
   201c8:	beq	203cc <_start@@Base+0xdcbc>
   201cc:	ldr	r2, [fp, #-140]	; 0xffffff74
   201d0:	ldr	r3, [fp, #-144]	; 0xffffff70
   201d4:	cmp	r2, r3
   201d8:	beq	20324 <_start@@Base+0xdc14>
   201dc:	ldr	r3, [fp, #-140]	; 0xffffff74
   201e0:	ldrb	r3, [r3]
   201e4:	cmp	r3, #91	; 0x5b
   201e8:	bne	20324 <_start@@Base+0xdc14>
   201ec:	ldr	r3, [fp, #-136]	; 0xffffff78
   201f0:	ldr	r0, [r3]
   201f4:	mvn	r3, #0
   201f8:	mov	r2, #1
   201fc:	mov	r1, #1
   20200:	bl	2894c <flatcc_builder_start_vector@@Base>
   20204:	mov	r3, r0
   20208:	cmp	r3, #0
   2020c:	bne	20aac <_start@@Base+0xe39c>
   20210:	sub	r3, fp, #28
   20214:	ldr	r2, [fp, #-144]	; 0xffffff70
   20218:	ldr	r1, [fp, #-140]	; 0xffffff74
   2021c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20220:	bl	13b68 <_start@@Base+0x1458>
   20224:	str	r0, [fp, #-140]	; 0xffffff74
   20228:	b	202fc <_start@@Base+0xdbec>
   2022c:	mov	r3, #0
   20230:	strb	r3, [fp, #-109]	; 0xffffff93
   20234:	ldr	r3, [fp, #-136]	; 0xffffff78
   20238:	ldr	r3, [r3]
   2023c:	mov	r1, #1
   20240:	mov	r0, r3
   20244:	bl	2805c <flatcc_builder_extend_vector@@Base>
   20248:	str	r0, [fp, #-24]	; 0xffffffe8
   2024c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20250:	cmp	r3, #0
   20254:	beq	20ab4 <_start@@Base+0xe3a4>
   20258:	ldr	r3, [fp, #-140]	; 0xffffff74
   2025c:	str	r3, [fp, #-16]
   20260:	sub	r3, fp, #109	; 0x6d
   20264:	ldr	r2, [fp, #-144]	; 0xffffff70
   20268:	ldr	r1, [fp, #-16]
   2026c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20270:	bl	14854 <_start@@Base+0x2144>
   20274:	str	r0, [fp, #-140]	; 0xffffff74
   20278:	ldr	r2, [fp, #-16]
   2027c:	ldr	r3, [fp, #-140]	; 0xffffff74
   20280:	cmp	r2, r3
   20284:	bne	202d4 <_start@@Base+0xdbc4>
   20288:	ldr	r3, [fp, #-140]	; 0xffffff74
   2028c:	str	r3, [fp, #-16]
   20290:	sub	r3, fp, #109	; 0x6d
   20294:	str	r3, [sp]
   20298:	ldr	r3, [pc, #432]	; 20450 <_start@@Base+0xdd40>
   2029c:	add	r3, pc, r3
   202a0:	ldr	r2, [fp, #-144]	; 0xffffff70
   202a4:	ldr	r1, [fp, #-16]
   202a8:	ldr	r0, [fp, #-136]	; 0xffffff78
   202ac:	bl	152f0 <_start@@Base+0x2be0>
   202b0:	str	r0, [fp, #-140]	; 0xffffff74
   202b4:	ldr	r2, [fp, #-140]	; 0xffffff74
   202b8:	ldr	r3, [fp, #-16]
   202bc:	cmp	r2, r3
   202c0:	beq	20ab4 <_start@@Base+0xe3a4>
   202c4:	ldr	r2, [fp, #-140]	; 0xffffff74
   202c8:	ldr	r3, [fp, #-144]	; 0xffffff70
   202cc:	cmp	r2, r3
   202d0:	beq	20ab4 <_start@@Base+0xe3a4>
   202d4:	ldrb	r3, [fp, #-109]	; 0xffffff93
   202d8:	mov	r1, r3
   202dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   202e0:	bl	12860 <_start@@Base+0x150>
   202e4:	sub	r3, fp, #28
   202e8:	ldr	r2, [fp, #-144]	; 0xffffff70
   202ec:	ldr	r1, [fp, #-140]	; 0xffffff74
   202f0:	ldr	r0, [fp, #-136]	; 0xffffff78
   202f4:	bl	13c50 <_start@@Base+0x1540>
   202f8:	str	r0, [fp, #-140]	; 0xffffff74
   202fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20300:	cmp	r3, #0
   20304:	bne	2022c <_start@@Base+0xdb1c>
   20308:	ldr	r3, [fp, #-136]	; 0xffffff78
   2030c:	ldr	r3, [r3]
   20310:	mov	r0, r3
   20314:	bl	29ba4 <flatcc_builder_end_vector@@Base>
   20318:	mov	r3, r0
   2031c:	str	r3, [fp, #-32]	; 0xffffffe0
   20320:	b	2038c <_start@@Base+0xdc7c>
   20324:	ldr	r3, [fp, #-136]	; 0xffffff78
   20328:	ldr	r0, [r3]
   2032c:	mov	r3, #0
   20330:	mov	r2, #0
   20334:	mov	r1, #0
   20338:	bl	27ba0 <flatcc_builder_start_buffer@@Base>
   2033c:	mov	r3, r0
   20340:	cmp	r3, #0
   20344:	bne	20abc <_start@@Base+0xe3ac>
   20348:	sub	r3, fp, #32
   2034c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20350:	ldr	r1, [fp, #-140]	; 0xffffff74
   20354:	ldr	r0, [fp, #-136]	; 0xffffff78
   20358:	bl	1d0cc <_start@@Base+0xa9bc>
   2035c:	str	r0, [fp, #-140]	; 0xffffff74
   20360:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20364:	cmp	r3, #0
   20368:	beq	20ac4 <_start@@Base+0xe3b4>
   2036c:	ldr	r3, [fp, #-136]	; 0xffffff78
   20370:	ldr	r3, [r3]
   20374:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20378:	mov	r1, r2
   2037c:	mov	r0, r3
   20380:	bl	27cf8 <flatcc_builder_end_buffer@@Base>
   20384:	mov	r3, r0
   20388:	str	r3, [fp, #-32]	; 0xffffffe0
   2038c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20390:	cmp	r3, #0
   20394:	beq	20af8 <_start@@Base+0xe3e8>
   20398:	ldr	r3, [fp, #-136]	; 0xffffff78
   2039c:	ldr	r3, [r3]
   203a0:	mov	r1, #13
   203a4:	mov	r0, r3
   203a8:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   203ac:	str	r0, [fp, #-20]	; 0xffffffec
   203b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   203b4:	cmp	r3, #0
   203b8:	beq	20af8 <_start@@Base+0xe3e8>
   203bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   203c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   203c4:	str	r2, [r3]
   203c8:	b	208e8 <_start@@Base+0xe1d8>
   203cc:	ldr	r2, [fp, #-144]	; 0xffffff70
   203d0:	ldr	r1, [fp, #-140]	; 0xffffff74
   203d4:	ldr	r0, [fp, #-136]	; 0xffffff78
   203d8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   203dc:	str	r0, [fp, #-140]	; 0xffffff74
   203e0:	b	208e8 <_start@@Base+0xe1d8>
   203e4:	ldr	r2, [fp, #-144]	; 0xffffff70
   203e8:	ldr	r1, [fp, #-140]	; 0xffffff74
   203ec:	ldr	r0, [fp, #-136]	; 0xffffff78
   203f0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   203f4:	str	r0, [fp, #-140]	; 0xffffff74
   203f8:	b	208e8 <_start@@Base+0xe1d8>
   203fc:	ldr	r2, [fp, #-144]	; 0xffffff70
   20400:	ldr	r1, [fp, #-140]	; 0xffffff74
   20404:	ldr	r0, [fp, #-136]	; 0xffffff78
   20408:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   2040c:	str	r0, [fp, #-140]	; 0xffffff74
   20410:	b	208e8 <_start@@Base+0xe1d8>
   20414:	ldr	r2, [fp, #-144]	; 0xffffff70
   20418:	ldr	r1, [fp, #-140]	; 0xffffff74
   2041c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20420:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   20424:	str	r0, [fp, #-140]	; 0xffffff74
   20428:	b	208e8 <_start@@Base+0xe1d8>
   2042c:	nop			; (mov r0, r0)
   20430:	svcvs	0x00725f6e
   20434:			; <UNDEFINED> instruction: 0x76656374
   20438:	mcrvs	3, 3, r7, cr5, cr4, {3}
   2043c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20440:	cmnvs	r4, r5, ror r2
   20444:	strbvs	r6, [r4, #-1644]!	; 0xfffff994
   20448:	andeq	r0, r0, r0
   2044c:			; <UNDEFINED> instruction: 0x66666572
   20450:	andeq	r8, r2, ip, ror r0
   20454:	ldrd	r2, [fp, #-12]
   20458:	add	r1, pc, #752	; 0x2f0
   2045c:	ldrd	r0, [r1]
   20460:	cmp	r3, r1
   20464:	cmpeq	r2, r0
   20468:	bne	208d4 <_start@@Base+0xe1c4>
   2046c:	ldr	r3, [fp, #-140]	; 0xffffff74
   20470:	add	r3, r3, #8
   20474:	str	r3, [fp, #-140]	; 0xffffff74
   20478:	ldr	r1, [fp, #-144]	; 0xffffff70
   2047c:	ldr	r0, [fp, #-140]	; 0xffffff74
   20480:	bl	137ec <_start@@Base+0x10dc>
   20484:	strd	r0, [fp, #-12]
   20488:	ldrd	r2, [fp, #-12]
   2048c:	add	r1, pc, #708	; 0x2c4
   20490:	ldrd	r0, [r1]
   20494:	cmp	r3, r1
   20498:	cmpeq	r2, r0
   2049c:	bne	206b4 <_start@@Base+0xdfa4>
   204a0:	ldr	r3, [fp, #-140]	; 0xffffff74
   204a4:	add	r3, r3, #8
   204a8:	str	r3, [fp, #-140]	; 0xffffff74
   204ac:	ldr	r1, [fp, #-144]	; 0xffffff70
   204b0:	ldr	r0, [fp, #-140]	; 0xffffff74
   204b4:	bl	137ec <_start@@Base+0x10dc>
   204b8:	strd	r0, [fp, #-12]
   204bc:	ldrd	r2, [fp, #-12]
   204c0:	mov	r0, #0
   204c4:	mov	r1, #-16777216	; 0xff000000
   204c8:	and	r2, r2, r0
   204cc:	and	r3, r3, r1
   204d0:	cmp	r3, #1929379840	; 0x73000000
   204d4:	cmpeq	r2, #0
   204d8:	bne	2069c <_start@@Base+0xdf8c>
   204dc:	ldr	r3, [fp, #-140]	; 0xffffff74
   204e0:	str	r3, [fp, #-16]
   204e4:	mov	r3, #1
   204e8:	ldr	r2, [fp, #-144]	; 0xffffff70
   204ec:	ldr	r1, [fp, #-16]
   204f0:	ldr	r0, [fp, #-136]	; 0xffffff78
   204f4:	bl	13db8 <_start@@Base+0x16a8>
   204f8:	str	r0, [fp, #-140]	; 0xffffff74
   204fc:	ldr	r2, [fp, #-16]
   20500:	ldr	r3, [fp, #-140]	; 0xffffff74
   20504:	cmp	r2, r3
   20508:	beq	20684 <_start@@Base+0xdf74>
   2050c:	ldr	r3, [fp, #-136]	; 0xffffff78
   20510:	ldr	r0, [r3]
   20514:	mvn	r3, #-536870912	; 0xe0000000
   20518:	mov	r2, #8
   2051c:	mov	r1, #8
   20520:	bl	2894c <flatcc_builder_start_vector@@Base>
   20524:	mov	r3, r0
   20528:	cmp	r3, #0
   2052c:	bne	20acc <_start@@Base+0xe3bc>
   20530:	sub	r3, fp, #28
   20534:	ldr	r2, [fp, #-144]	; 0xffffff70
   20538:	ldr	r1, [fp, #-140]	; 0xffffff74
   2053c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20540:	bl	13b68 <_start@@Base+0x1458>
   20544:	str	r0, [fp, #-140]	; 0xffffff74
   20548:	b	20620 <_start@@Base+0xdf10>
   2054c:	mov	r2, #0
   20550:	mov	r3, #0
   20554:	strd	r2, [fp, #-124]	; 0xffffff84
   20558:	ldr	r3, [fp, #-136]	; 0xffffff78
   2055c:	ldr	r3, [r3]
   20560:	mov	r1, #1
   20564:	mov	r0, r3
   20568:	bl	2805c <flatcc_builder_extend_vector@@Base>
   2056c:	str	r0, [fp, #-24]	; 0xffffffe8
   20570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20574:	cmp	r3, #0
   20578:	beq	20ad4 <_start@@Base+0xe3c4>
   2057c:	ldr	r3, [fp, #-140]	; 0xffffff74
   20580:	str	r3, [fp, #-16]
   20584:	sub	r3, fp, #124	; 0x7c
   20588:	ldr	r2, [fp, #-144]	; 0xffffff70
   2058c:	ldr	r1, [fp, #-16]
   20590:	ldr	r0, [fp, #-136]	; 0xffffff78
   20594:	bl	32e64 <flatcc_json_parser_double@@Base>
   20598:	str	r0, [fp, #-140]	; 0xffffff74
   2059c:	ldr	r2, [fp, #-16]
   205a0:	ldr	r3, [fp, #-140]	; 0xffffff74
   205a4:	cmp	r2, r3
   205a8:	bne	205f8 <_start@@Base+0xdee8>
   205ac:	ldr	r3, [fp, #-140]	; 0xffffff74
   205b0:	str	r3, [fp, #-16]
   205b4:	sub	r3, fp, #124	; 0x7c
   205b8:	str	r3, [sp]
   205bc:	ldr	r3, [pc, #420]	; 20768 <_start@@Base+0xe058>
   205c0:	add	r3, pc, r3
   205c4:	ldr	r2, [fp, #-144]	; 0xffffff70
   205c8:	ldr	r1, [fp, #-16]
   205cc:	ldr	r0, [fp, #-136]	; 0xffffff78
   205d0:	bl	15fb8 <_start@@Base+0x38a8>
   205d4:	str	r0, [fp, #-140]	; 0xffffff74
   205d8:	ldr	r2, [fp, #-140]	; 0xffffff74
   205dc:	ldr	r3, [fp, #-16]
   205e0:	cmp	r2, r3
   205e4:	beq	20ad4 <_start@@Base+0xe3c4>
   205e8:	ldr	r2, [fp, #-140]	; 0xffffff74
   205ec:	ldr	r3, [fp, #-144]	; 0xffffff70
   205f0:	cmp	r2, r3
   205f4:	beq	20ad4 <_start@@Base+0xe3c4>
   205f8:	vldr	d7, [fp, #-124]	; 0xffffff84
   205fc:	vmov.f64	d0, d7
   20600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20604:	bl	12d6c <_start@@Base+0x65c>
   20608:	sub	r3, fp, #28
   2060c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20610:	ldr	r1, [fp, #-140]	; 0xffffff74
   20614:	ldr	r0, [fp, #-136]	; 0xffffff78
   20618:	bl	13c50 <_start@@Base+0x1540>
   2061c:	str	r0, [fp, #-140]	; 0xffffff74
   20620:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20624:	cmp	r3, #0
   20628:	bne	2054c <_start@@Base+0xde3c>
   2062c:	ldr	r3, [fp, #-136]	; 0xffffff78
   20630:	ldr	r3, [r3]
   20634:	mov	r0, r3
   20638:	bl	29ba4 <flatcc_builder_end_vector@@Base>
   2063c:	mov	r3, r0
   20640:	str	r3, [fp, #-32]	; 0xffffffe0
   20644:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20648:	cmp	r3, #0
   2064c:	beq	20af8 <_start@@Base+0xe3e8>
   20650:	ldr	r3, [fp, #-136]	; 0xffffff78
   20654:	ldr	r3, [r3]
   20658:	mov	r1, #33	; 0x21
   2065c:	mov	r0, r3
   20660:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   20664:	str	r0, [fp, #-20]	; 0xffffffec
   20668:	ldr	r3, [fp, #-20]	; 0xffffffec
   2066c:	cmp	r3, #0
   20670:	beq	20af8 <_start@@Base+0xe3e8>
   20674:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20678:	ldr	r3, [fp, #-20]	; 0xffffffec
   2067c:	str	r2, [r3]
   20680:	b	208e8 <_start@@Base+0xe1d8>
   20684:	ldr	r2, [fp, #-144]	; 0xffffff70
   20688:	ldr	r1, [fp, #-140]	; 0xffffff74
   2068c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20690:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   20694:	str	r0, [fp, #-140]	; 0xffffff74
   20698:	b	208e8 <_start@@Base+0xe1d8>
   2069c:	ldr	r2, [fp, #-144]	; 0xffffff70
   206a0:	ldr	r1, [fp, #-140]	; 0xffffff74
   206a4:	ldr	r0, [fp, #-136]	; 0xffffff78
   206a8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   206ac:	str	r0, [fp, #-140]	; 0xffffff74
   206b0:	b	208e8 <_start@@Base+0xe1d8>
   206b4:	ldrd	r2, [fp, #-12]
   206b8:	mvn	r0, #255	; 0xff
   206bc:	mvn	r1, #0
   206c0:	and	r2, r2, r0
   206c4:	and	r3, r3, r1
   206c8:	add	r1, pc, #144	; 0x90
   206cc:	ldrd	r0, [r1]
   206d0:	cmp	r3, r1
   206d4:	cmpeq	r2, r0
   206d8:	bne	208bc <_start@@Base+0xe1ac>
   206dc:	ldr	r3, [fp, #-140]	; 0xffffff74
   206e0:	str	r3, [fp, #-16]
   206e4:	mov	r3, #7
   206e8:	ldr	r2, [fp, #-144]	; 0xffffff70
   206ec:	ldr	r1, [fp, #-16]
   206f0:	ldr	r0, [fp, #-136]	; 0xffffff78
   206f4:	bl	13db8 <_start@@Base+0x16a8>
   206f8:	str	r0, [fp, #-140]	; 0xffffff74
   206fc:	ldr	r2, [fp, #-16]
   20700:	ldr	r3, [fp, #-140]	; 0xffffff74
   20704:	cmp	r2, r3
   20708:	beq	208a4 <_start@@Base+0xe194>
   2070c:	ldr	r3, [fp, #-136]	; 0xffffff78
   20710:	ldr	r0, [r3]
   20714:	mvn	r3, #-536870912	; 0xe0000000
   20718:	mov	r2, #8
   2071c:	mov	r1, #8
   20720:	bl	2894c <flatcc_builder_start_vector@@Base>
   20724:	mov	r3, r0
   20728:	cmp	r3, #0
   2072c:	bne	20adc <_start@@Base+0xe3cc>
   20730:	sub	r3, fp, #28
   20734:	ldr	r2, [fp, #-144]	; 0xffffff70
   20738:	ldr	r1, [fp, #-140]	; 0xffffff74
   2073c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20740:	bl	13b68 <_start@@Base+0x1458>
   20744:	str	r0, [fp, #-140]	; 0xffffff74
   20748:	b	20840 <_start@@Base+0xe130>
   2074c:	nop			; (mov r0, r0)
   20750:	svcvs	0x00725f6f
   20754:			; <UNDEFINED> instruction: 0x76656374
   20758:	strbvc	r6, [r2, #-3173]!	; 0xfffff39b
   2075c:	ldrbvs	r6, [pc], -pc, ror #8
   20760:	cdpvs	3, 6, cr7, cr7, cr0, {0}
   20764:	ldrbvs	r6, [pc], -pc, ror #24
   20768:	andeq	r7, r2, r4, ror #26
   2076c:	andeq	r7, r2, ip, asr #22
   20770:	mov	r2, #0
   20774:	mov	r3, #0
   20778:	strd	r2, [fp, #-132]	; 0xffffff7c
   2077c:	ldr	r3, [fp, #-136]	; 0xffffff78
   20780:	ldr	r3, [r3]
   20784:	mov	r1, #1
   20788:	mov	r0, r3
   2078c:	bl	2805c <flatcc_builder_extend_vector@@Base>
   20790:	str	r0, [fp, #-24]	; 0xffffffe8
   20794:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20798:	cmp	r3, #0
   2079c:	beq	20ae4 <_start@@Base+0xe3d4>
   207a0:	ldr	r3, [fp, #-140]	; 0xffffff74
   207a4:	str	r3, [fp, #-16]
   207a8:	sub	r3, fp, #132	; 0x84
   207ac:	ldr	r2, [fp, #-144]	; 0xffffff70
   207b0:	ldr	r1, [fp, #-16]
   207b4:	ldr	r0, [fp, #-136]	; 0xffffff78
   207b8:	bl	14924 <_start@@Base+0x2214>
   207bc:	str	r0, [fp, #-140]	; 0xffffff74
   207c0:	ldr	r2, [fp, #-16]
   207c4:	ldr	r3, [fp, #-140]	; 0xffffff74
   207c8:	cmp	r2, r3
   207cc:	bne	2081c <_start@@Base+0xe10c>
   207d0:	ldr	r3, [fp, #-140]	; 0xffffff74
   207d4:	str	r3, [fp, #-16]
   207d8:	sub	r3, fp, #132	; 0x84
   207dc:	str	r3, [sp]
   207e0:	ldr	r3, [pc, #-124]	; 2076c <_start@@Base+0xe05c>
   207e4:	add	r3, pc, r3
   207e8:	ldr	r2, [fp, #-144]	; 0xffffff70
   207ec:	ldr	r1, [fp, #-16]
   207f0:	ldr	r0, [fp, #-136]	; 0xffffff78
   207f4:	bl	154c0 <_start@@Base+0x2db0>
   207f8:	str	r0, [fp, #-140]	; 0xffffff74
   207fc:	ldr	r2, [fp, #-140]	; 0xffffff74
   20800:	ldr	r3, [fp, #-16]
   20804:	cmp	r2, r3
   20808:	beq	20ae4 <_start@@Base+0xe3d4>
   2080c:	ldr	r2, [fp, #-140]	; 0xffffff74
   20810:	ldr	r3, [fp, #-144]	; 0xffffff70
   20814:	cmp	r2, r3
   20818:	beq	20ae4 <_start@@Base+0xe3d4>
   2081c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   20820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20824:	bl	12bc0 <_start@@Base+0x4b0>
   20828:	sub	r3, fp, #28
   2082c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20830:	ldr	r1, [fp, #-140]	; 0xffffff74
   20834:	ldr	r0, [fp, #-136]	; 0xffffff78
   20838:	bl	13c50 <_start@@Base+0x1540>
   2083c:	str	r0, [fp, #-140]	; 0xffffff74
   20840:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20844:	cmp	r3, #0
   20848:	bne	20770 <_start@@Base+0xe060>
   2084c:	ldr	r3, [fp, #-136]	; 0xffffff78
   20850:	ldr	r3, [r3]
   20854:	mov	r0, r3
   20858:	bl	29ba4 <flatcc_builder_end_vector@@Base>
   2085c:	mov	r3, r0
   20860:	str	r3, [fp, #-32]	; 0xffffffe0
   20864:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20868:	cmp	r3, #0
   2086c:	beq	20af8 <_start@@Base+0xe3e8>
   20870:	ldr	r3, [fp, #-136]	; 0xffffff78
   20874:	ldr	r3, [r3]
   20878:	mov	r1, #32
   2087c:	mov	r0, r3
   20880:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   20884:	str	r0, [fp, #-20]	; 0xffffffec
   20888:	ldr	r3, [fp, #-20]	; 0xffffffec
   2088c:	cmp	r3, #0
   20890:	beq	20af8 <_start@@Base+0xe3e8>
   20894:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20898:	ldr	r3, [fp, #-20]	; 0xffffffec
   2089c:	str	r2, [r3]
   208a0:	b	208e8 <_start@@Base+0xe1d8>
   208a4:	ldr	r2, [fp, #-144]	; 0xffffff70
   208a8:	ldr	r1, [fp, #-140]	; 0xffffff74
   208ac:	ldr	r0, [fp, #-136]	; 0xffffff78
   208b0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   208b4:	str	r0, [fp, #-140]	; 0xffffff74
   208b8:	b	208e8 <_start@@Base+0xe1d8>
   208bc:	ldr	r2, [fp, #-144]	; 0xffffff70
   208c0:	ldr	r1, [fp, #-140]	; 0xffffff74
   208c4:	ldr	r0, [fp, #-136]	; 0xffffff78
   208c8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   208cc:	str	r0, [fp, #-140]	; 0xffffff74
   208d0:	b	208e8 <_start@@Base+0xe1d8>
   208d4:	ldr	r2, [fp, #-144]	; 0xffffff70
   208d8:	ldr	r1, [fp, #-140]	; 0xffffff74
   208dc:	ldr	r0, [fp, #-136]	; 0xffffff78
   208e0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   208e4:	str	r0, [fp, #-140]	; 0xffffff74
   208e8:	sub	r3, fp, #28
   208ec:	ldr	r2, [fp, #-144]	; 0xffffff70
   208f0:	ldr	r1, [fp, #-140]	; 0xffffff74
   208f4:	ldr	r0, [fp, #-136]	; 0xffffff78
   208f8:	bl	13a00 <_start@@Base+0x12f0>
   208fc:	str	r0, [fp, #-140]	; 0xffffff74
   20900:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20904:	cmp	r3, #0
   20908:	bne	1d15c <_start@@Base+0xaa4c>
   2090c:	ldr	r3, [fp, #-136]	; 0xffffff78
   20910:	ldr	r3, [r3, #24]
   20914:	cmp	r3, #0
   20918:	bne	20aec <_start@@Base+0xe3dc>
   2091c:	ldr	r3, [fp, #-136]	; 0xffffff78
   20920:	ldr	r3, [r3]
   20924:	mov	r1, #3
   20928:	mov	r0, r3
   2092c:	bl	2944c <flatcc_builder_check_required_field@@Base>
   20930:	mov	r3, r0
   20934:	cmp	r3, #0
   20938:	bne	20958 <_start@@Base+0xe248>
   2093c:	mov	r3, #29
   20940:	ldr	r2, [fp, #-144]	; 0xffffff70
   20944:	ldr	r1, [fp, #-140]	; 0xffffff74
   20948:	ldr	r0, [fp, #-136]	; 0xffffff78
   2094c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   20950:	str	r0, [fp, #-140]	; 0xffffff74
   20954:	b	20af8 <_start@@Base+0xe3e8>
   20958:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2095c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20960:	ldr	r1, [fp, #-140]	; 0xffffff74
   20964:	ldr	r0, [fp, #-136]	; 0xffffff78
   20968:	bl	33d2c <flatcc_json_parser_finalize_unions@@Base>
   2096c:	str	r0, [fp, #-140]	; 0xffffff74
   20970:	ldr	r3, [fp, #-136]	; 0xffffff78
   20974:	ldr	r3, [r3]
   20978:	mov	r0, r3
   2097c:	bl	29748 <flatcc_builder_end_table@@Base>
   20980:	mov	r2, r0
   20984:	ldr	r3, [fp, #-148]	; 0xffffff6c
   20988:	str	r2, [r3]
   2098c:	ldr	r3, [fp, #-148]	; 0xffffff6c
   20990:	ldr	r3, [r3]
   20994:	cmp	r3, #0
   20998:	beq	20af4 <_start@@Base+0xe3e4>
   2099c:	ldr	r3, [fp, #-140]	; 0xffffff74
   209a0:	b	20b10 <_start@@Base+0xe400>
   209a4:	nop			; (mov r0, r0)
   209a8:	b	20af8 <_start@@Base+0xe3e8>
   209ac:	nop			; (mov r0, r0)
   209b0:	b	20af8 <_start@@Base+0xe3e8>
   209b4:	nop			; (mov r0, r0)
   209b8:	b	20af8 <_start@@Base+0xe3e8>
   209bc:	nop			; (mov r0, r0)
   209c0:	b	20af8 <_start@@Base+0xe3e8>
   209c4:	nop			; (mov r0, r0)
   209c8:	b	20af8 <_start@@Base+0xe3e8>
   209cc:	nop			; (mov r0, r0)
   209d0:	b	20af8 <_start@@Base+0xe3e8>
   209d4:	nop			; (mov r0, r0)
   209d8:	b	20af8 <_start@@Base+0xe3e8>
   209dc:	nop			; (mov r0, r0)
   209e0:	b	20af8 <_start@@Base+0xe3e8>
   209e4:	nop			; (mov r0, r0)
   209e8:	b	20af8 <_start@@Base+0xe3e8>
   209ec:	nop			; (mov r0, r0)
   209f0:	b	20af8 <_start@@Base+0xe3e8>
   209f4:	nop			; (mov r0, r0)
   209f8:	b	20af8 <_start@@Base+0xe3e8>
   209fc:	nop			; (mov r0, r0)
   20a00:	b	20af8 <_start@@Base+0xe3e8>
   20a04:	nop			; (mov r0, r0)
   20a08:	b	20af8 <_start@@Base+0xe3e8>
   20a0c:	nop			; (mov r0, r0)
   20a10:	b	20af8 <_start@@Base+0xe3e8>
   20a14:	nop			; (mov r0, r0)
   20a18:	b	20af8 <_start@@Base+0xe3e8>
   20a1c:	nop			; (mov r0, r0)
   20a20:	b	20af8 <_start@@Base+0xe3e8>
   20a24:	nop			; (mov r0, r0)
   20a28:	b	20af8 <_start@@Base+0xe3e8>
   20a2c:	nop			; (mov r0, r0)
   20a30:	b	20af8 <_start@@Base+0xe3e8>
   20a34:	nop			; (mov r0, r0)
   20a38:	b	20af8 <_start@@Base+0xe3e8>
   20a3c:	nop			; (mov r0, r0)
   20a40:	b	20af8 <_start@@Base+0xe3e8>
   20a44:	nop			; (mov r0, r0)
   20a48:	b	20af8 <_start@@Base+0xe3e8>
   20a4c:	nop			; (mov r0, r0)
   20a50:	b	20af8 <_start@@Base+0xe3e8>
   20a54:	nop			; (mov r0, r0)
   20a58:	b	20af8 <_start@@Base+0xe3e8>
   20a5c:	nop			; (mov r0, r0)
   20a60:	b	20af8 <_start@@Base+0xe3e8>
   20a64:	nop			; (mov r0, r0)
   20a68:	b	20af8 <_start@@Base+0xe3e8>
   20a6c:	nop			; (mov r0, r0)
   20a70:	b	20af8 <_start@@Base+0xe3e8>
   20a74:	nop			; (mov r0, r0)
   20a78:	b	20af8 <_start@@Base+0xe3e8>
   20a7c:	nop			; (mov r0, r0)
   20a80:	b	20af8 <_start@@Base+0xe3e8>
   20a84:	nop			; (mov r0, r0)
   20a88:	b	20af8 <_start@@Base+0xe3e8>
   20a8c:	nop			; (mov r0, r0)
   20a90:	b	20af8 <_start@@Base+0xe3e8>
   20a94:	nop			; (mov r0, r0)
   20a98:	b	20af8 <_start@@Base+0xe3e8>
   20a9c:	nop			; (mov r0, r0)
   20aa0:	b	20af8 <_start@@Base+0xe3e8>
   20aa4:	nop			; (mov r0, r0)
   20aa8:	b	20af8 <_start@@Base+0xe3e8>
   20aac:	nop			; (mov r0, r0)
   20ab0:	b	20af8 <_start@@Base+0xe3e8>
   20ab4:	nop			; (mov r0, r0)
   20ab8:	b	20af8 <_start@@Base+0xe3e8>
   20abc:	nop			; (mov r0, r0)
   20ac0:	b	20af8 <_start@@Base+0xe3e8>
   20ac4:	nop			; (mov r0, r0)
   20ac8:	b	20af8 <_start@@Base+0xe3e8>
   20acc:	nop			; (mov r0, r0)
   20ad0:	b	20af8 <_start@@Base+0xe3e8>
   20ad4:	nop			; (mov r0, r0)
   20ad8:	b	20af8 <_start@@Base+0xe3e8>
   20adc:	nop			; (mov r0, r0)
   20ae0:	b	20af8 <_start@@Base+0xe3e8>
   20ae4:	nop			; (mov r0, r0)
   20ae8:	b	20af8 <_start@@Base+0xe3e8>
   20aec:	nop			; (mov r0, r0)
   20af0:	b	20af8 <_start@@Base+0xe3e8>
   20af4:	nop			; (mov r0, r0)
   20af8:	mov	r3, #33	; 0x21
   20afc:	ldr	r2, [fp, #-144]	; 0xffffff70
   20b00:	ldr	r1, [fp, #-140]	; 0xffffff74
   20b04:	ldr	r0, [fp, #-136]	; 0xffffff78
   20b08:	bl	3198c <flatcc_json_parser_set_error@@Base>
   20b0c:	mov	r3, r0
   20b10:	mov	r0, r3
   20b14:	sub	sp, fp, #4
   20b18:	pop	{fp, pc}
   20b1c:	push	{fp, lr}
   20b20:	add	fp, sp, #4
   20b24:	sub	sp, sp, #128	; 0x80
   20b28:	str	r0, [fp, #-112]	; 0xffffff90
   20b2c:	str	r1, [fp, #-116]	; 0xffffff8c
   20b30:	str	r2, [fp, #-120]	; 0xffffff88
   20b34:	str	r3, [fp, #-124]	; 0xffffff84
   20b38:	ldr	r3, [fp, #-124]	; 0xffffff84
   20b3c:	mov	r2, #0
   20b40:	str	r2, [r3]
   20b44:	ldr	r3, [fp, #-112]	; 0xffffff90
   20b48:	ldr	r3, [r3]
   20b4c:	mov	r1, #12
   20b50:	mov	r0, r3
   20b54:	bl	28be4 <flatcc_builder_start_table@@Base>
   20b58:	mov	r3, r0
   20b5c:	cmp	r3, #0
   20b60:	bne	21f20 <_start@@Base+0xf810>
   20b64:	sub	r3, fp, #32
   20b68:	ldr	r2, [fp, #-120]	; 0xffffff88
   20b6c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   20b70:	ldr	r0, [fp, #-112]	; 0xffffff90
   20b74:	bl	13918 <_start@@Base+0x1208>
   20b78:	str	r0, [fp, #-116]	; 0xffffff8c
   20b7c:	b	21ed0 <_start@@Base+0xf7c0>
   20b80:	ldr	r2, [fp, #-120]	; 0xffffff88
   20b84:	ldr	r1, [fp, #-116]	; 0xffffff8c
   20b88:	ldr	r0, [fp, #-112]	; 0xffffff90
   20b8c:	bl	13508 <_start@@Base+0xdf8>
   20b90:	str	r0, [fp, #-116]	; 0xffffff8c
   20b94:	ldr	r1, [fp, #-120]	; 0xffffff88
   20b98:	ldr	r0, [fp, #-116]	; 0xffffff8c
   20b9c:	bl	137ec <_start@@Base+0x10dc>
   20ba0:	strd	r0, [fp, #-12]
   20ba4:	ldrd	r2, [fp, #-12]
   20ba8:	mvn	r0, #0
   20bac:	ldr	r1, [pc, #764]	; 20eb0 <_start@@Base+0xe7a0>
   20bb0:	cmp	r3, r1
   20bb4:	cmpeq	r2, r0
   20bb8:	bhi	21318 <_start@@Base+0xec08>
   20bbc:	ldrd	r2, [fp, #-12]
   20bc0:	add	r1, pc, #720	; 0x2d0
   20bc4:	ldrd	r0, [r1]
   20bc8:	cmp	r3, r1
   20bcc:	cmpeq	r2, r0
   20bd0:	bhi	20ebc <_start@@Base+0xe7ac>
   20bd4:	ldrd	r2, [fp, #-12]
   20bd8:	mov	r0, #0
   20bdc:	mvn	r1, #255	; 0xff
   20be0:	and	r2, r2, r0
   20be4:	and	r3, r3, r1
   20be8:	add	r1, pc, #688	; 0x2b0
   20bec:	ldrd	r0, [r1]
   20bf0:	cmp	r3, r1
   20bf4:	cmpeq	r2, r0
   20bf8:	bne	20d2c <_start@@Base+0xe61c>
   20bfc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20c00:	str	r3, [fp, #-16]
   20c04:	mov	r3, #3
   20c08:	ldr	r2, [fp, #-120]	; 0xffffff88
   20c0c:	ldr	r1, [fp, #-16]
   20c10:	ldr	r0, [fp, #-112]	; 0xffffff90
   20c14:	bl	13db8 <_start@@Base+0x16a8>
   20c18:	str	r0, [fp, #-116]	; 0xffffff8c
   20c1c:	ldr	r2, [fp, #-16]
   20c20:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20c24:	cmp	r2, r3
   20c28:	beq	20d14 <_start@@Base+0xe604>
   20c2c:	mov	r2, #0
   20c30:	mov	r3, #0
   20c34:	strd	r2, [fp, #-44]	; 0xffffffd4
   20c38:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20c3c:	str	r3, [fp, #-16]
   20c40:	sub	r3, fp, #44	; 0x2c
   20c44:	ldr	r2, [fp, #-120]	; 0xffffff88
   20c48:	ldr	r1, [fp, #-16]
   20c4c:	ldr	r0, [fp, #-112]	; 0xffffff90
   20c50:	bl	32e64 <flatcc_json_parser_double@@Base>
   20c54:	str	r0, [fp, #-116]	; 0xffffff8c
   20c58:	ldr	r2, [fp, #-16]
   20c5c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20c60:	cmp	r2, r3
   20c64:	bne	20cb4 <_start@@Base+0xe5a4>
   20c68:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20c6c:	str	r3, [fp, #-16]
   20c70:	sub	r3, fp, #44	; 0x2c
   20c74:	str	r3, [sp]
   20c78:	ldr	r3, [pc, #564]	; 20eb4 <_start@@Base+0xe7a4>
   20c7c:	add	r3, pc, r3
   20c80:	ldr	r2, [fp, #-120]	; 0xffffff88
   20c84:	ldr	r1, [fp, #-16]
   20c88:	ldr	r0, [fp, #-112]	; 0xffffff90
   20c8c:	bl	15fb8 <_start@@Base+0x38a8>
   20c90:	str	r0, [fp, #-116]	; 0xffffff8c
   20c94:	ldr	r2, [fp, #-116]	; 0xffffff8c
   20c98:	ldr	r3, [fp, #-16]
   20c9c:	cmp	r2, r3
   20ca0:	beq	21fa4 <_start@@Base+0xf894>
   20ca4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   20ca8:	ldr	r3, [fp, #-120]	; 0xffffff88
   20cac:	cmp	r2, r3
   20cb0:	beq	21fa4 <_start@@Base+0xf894>
   20cb4:	vldr	d7, [fp, #-44]	; 0xffffffd4
   20cb8:	vcmp.f64	d7, #0.0
   20cbc:	vmrs	APSR_nzcv, fpscr
   20cc0:	bne	20cd8 <_start@@Base+0xe5c8>
   20cc4:	ldr	r3, [fp, #-112]	; 0xffffff90
   20cc8:	ldr	r3, [r3, #8]
   20ccc:	and	r3, r3, #2
   20cd0:	cmp	r3, #0
   20cd4:	beq	21eb8 <_start@@Base+0xf7a8>
   20cd8:	ldr	r3, [fp, #-112]	; 0xffffff90
   20cdc:	ldr	r0, [r3]
   20ce0:	mov	r3, #8
   20ce4:	mov	r2, #8
   20ce8:	mov	r1, #9
   20cec:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   20cf0:	str	r0, [fp, #-20]	; 0xffffffec
   20cf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   20cf8:	cmp	r3, #0
   20cfc:	beq	21f28 <_start@@Base+0xf818>
   20d00:	vldr	d7, [fp, #-44]	; 0xffffffd4
   20d04:	vmov.f64	d0, d7
   20d08:	ldr	r0, [fp, #-20]	; 0xffffffec
   20d0c:	bl	12d6c <_start@@Base+0x65c>
   20d10:	b	21eb8 <_start@@Base+0xf7a8>
   20d14:	ldr	r2, [fp, #-120]	; 0xffffff88
   20d18:	ldr	r1, [fp, #-116]	; 0xffffff8c
   20d1c:	ldr	r0, [fp, #-112]	; 0xffffff90
   20d20:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   20d24:	str	r0, [fp, #-116]	; 0xffffff8c
   20d28:	b	21eb8 <_start@@Base+0xf7a8>
   20d2c:	ldrd	r2, [fp, #-12]
   20d30:	mov	r0, #0
   20d34:	mvn	r1, #255	; 0xff
   20d38:	and	r2, r2, r0
   20d3c:	and	r3, r3, r1
   20d40:	add	r1, pc, #352	; 0x160
   20d44:	ldrd	r0, [r1]
   20d48:	cmp	r3, r1
   20d4c:	cmpeq	r2, r0
   20d50:	bne	20e80 <_start@@Base+0xe770>
   20d54:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20d58:	str	r3, [fp, #-16]
   20d5c:	mov	r3, #3
   20d60:	ldr	r2, [fp, #-120]	; 0xffffff88
   20d64:	ldr	r1, [fp, #-16]
   20d68:	ldr	r0, [fp, #-112]	; 0xffffff90
   20d6c:	bl	13db8 <_start@@Base+0x16a8>
   20d70:	str	r0, [fp, #-116]	; 0xffffff8c
   20d74:	ldr	r2, [fp, #-16]
   20d78:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20d7c:	cmp	r2, r3
   20d80:	beq	20e68 <_start@@Base+0xe758>
   20d84:	mov	r3, #0
   20d88:	str	r3, [fp, #-48]	; 0xffffffd0
   20d8c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20d90:	str	r3, [fp, #-16]
   20d94:	sub	r3, fp, #48	; 0x30
   20d98:	ldr	r2, [fp, #-120]	; 0xffffff88
   20d9c:	ldr	r1, [fp, #-16]
   20da0:	ldr	r0, [fp, #-112]	; 0xffffff90
   20da4:	bl	33008 <flatcc_json_parser_float@@Base>
   20da8:	str	r0, [fp, #-116]	; 0xffffff8c
   20dac:	ldr	r2, [fp, #-16]
   20db0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20db4:	cmp	r2, r3
   20db8:	bne	20e08 <_start@@Base+0xe6f8>
   20dbc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20dc0:	str	r3, [fp, #-16]
   20dc4:	sub	r3, fp, #48	; 0x30
   20dc8:	str	r3, [sp]
   20dcc:	ldr	r3, [pc, #228]	; 20eb8 <_start@@Base+0xe7a8>
   20dd0:	add	r3, pc, r3
   20dd4:	ldr	r2, [fp, #-120]	; 0xffffff88
   20dd8:	ldr	r1, [fp, #-16]
   20ddc:	ldr	r0, [fp, #-112]	; 0xffffff90
   20de0:	bl	15dec <_start@@Base+0x36dc>
   20de4:	str	r0, [fp, #-116]	; 0xffffff8c
   20de8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   20dec:	ldr	r3, [fp, #-16]
   20df0:	cmp	r2, r3
   20df4:	beq	21fa4 <_start@@Base+0xf894>
   20df8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   20dfc:	ldr	r3, [fp, #-120]	; 0xffffff88
   20e00:	cmp	r2, r3
   20e04:	beq	21fa4 <_start@@Base+0xf894>
   20e08:	vldr	s15, [fp, #-48]	; 0xffffffd0
   20e0c:	vcmp.f32	s15, #0.0
   20e10:	vmrs	APSR_nzcv, fpscr
   20e14:	bne	20e2c <_start@@Base+0xe71c>
   20e18:	ldr	r3, [fp, #-112]	; 0xffffff90
   20e1c:	ldr	r3, [r3, #8]
   20e20:	and	r3, r3, #2
   20e24:	cmp	r3, #0
   20e28:	beq	21eb8 <_start@@Base+0xf7a8>
   20e2c:	ldr	r3, [fp, #-112]	; 0xffffff90
   20e30:	ldr	r0, [r3]
   20e34:	mov	r3, #4
   20e38:	mov	r2, #4
   20e3c:	mov	r1, #8
   20e40:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   20e44:	str	r0, [fp, #-20]	; 0xffffffec
   20e48:	ldr	r3, [fp, #-20]	; 0xffffffec
   20e4c:	cmp	r3, #0
   20e50:	beq	21f30 <_start@@Base+0xf820>
   20e54:	vldr	s15, [fp, #-48]	; 0xffffffd0
   20e58:	vmov.f32	s0, s15
   20e5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20e60:	bl	12c98 <_start@@Base+0x588>
   20e64:	b	21eb8 <_start@@Base+0xf7a8>
   20e68:	ldr	r2, [fp, #-120]	; 0xffffff88
   20e6c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   20e70:	ldr	r0, [fp, #-112]	; 0xffffff90
   20e74:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   20e78:	str	r0, [fp, #-116]	; 0xffffff8c
   20e7c:	b	21eb8 <_start@@Base+0xf7a8>
   20e80:	ldr	r2, [fp, #-120]	; 0xffffff88
   20e84:	ldr	r1, [fp, #-116]	; 0xffffff8c
   20e88:	ldr	r0, [fp, #-112]	; 0xffffff90
   20e8c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   20e90:	str	r0, [fp, #-116]	; 0xffffff8c
   20e94:	b	21eb8 <_start@@Base+0xf7a8>
   20e98:			; <UNDEFINED> instruction: 0xffffffff
   20e9c:	ldmdbvs	r1!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, ip, sp}
   20ea0:	andeq	r0, r0, r0
   20ea4:	ldrtvs	r3, [r6], -r0, lsl #8
   20ea8:	andeq	r0, r0, r0
   20eac:	ldrtvs	r3, [r3], -r0, lsl #4
   20eb0:	ldmdbvs	r7!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
   20eb4:	andeq	r7, r2, r0, asr #13
   20eb8:	andeq	r7, r2, r8, ror r5
   20ebc:	ldrd	r2, [fp, #-12]
   20ec0:	add	r1, pc, #712	; 0x2c8
   20ec4:	ldrd	r0, [r1]
   20ec8:	cmp	r3, r1
   20ecc:	cmpeq	r2, r0
   20ed0:	bhi	2103c <_start@@Base+0xe92c>
   20ed4:	ldrd	r2, [fp, #-12]
   20ed8:	mov	r0, #0
   20edc:	mvn	r1, #255	; 0xff
   20ee0:	and	r2, r2, r0
   20ee4:	and	r3, r3, r1
   20ee8:	add	r1, pc, #680	; 0x2a8
   20eec:	ldrd	r0, [r1]
   20ef0:	cmp	r3, r1
   20ef4:	cmpeq	r2, r0
   20ef8:	bne	21024 <_start@@Base+0xe914>
   20efc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20f00:	str	r3, [fp, #-16]
   20f04:	mov	r3, #3
   20f08:	ldr	r2, [fp, #-120]	; 0xffffff88
   20f0c:	ldr	r1, [fp, #-16]
   20f10:	ldr	r0, [fp, #-112]	; 0xffffff90
   20f14:	bl	13db8 <_start@@Base+0x16a8>
   20f18:	str	r0, [fp, #-116]	; 0xffffff8c
   20f1c:	ldr	r2, [fp, #-16]
   20f20:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20f24:	cmp	r2, r3
   20f28:	beq	2100c <_start@@Base+0xe8fc>
   20f2c:	mov	r3, #0
   20f30:	strh	r3, [fp, #-50]	; 0xffffffce
   20f34:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20f38:	str	r3, [fp, #-16]
   20f3c:	sub	r3, fp, #50	; 0x32
   20f40:	ldr	r2, [fp, #-120]	; 0xffffff88
   20f44:	ldr	r1, [fp, #-16]
   20f48:	ldr	r0, [fp, #-112]	; 0xffffff90
   20f4c:	bl	14ac8 <_start@@Base+0x23b8>
   20f50:	str	r0, [fp, #-116]	; 0xffffff8c
   20f54:	ldr	r2, [fp, #-16]
   20f58:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20f5c:	cmp	r2, r3
   20f60:	bne	20fb0 <_start@@Base+0xe8a0>
   20f64:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20f68:	str	r3, [fp, #-16]
   20f6c:	sub	r3, fp, #50	; 0x32
   20f70:	str	r3, [sp]
   20f74:	ldr	r3, [pc, #556]	; 211a8 <_start@@Base+0xea98>
   20f78:	add	r3, pc, r3
   20f7c:	ldr	r2, [fp, #-120]	; 0xffffff88
   20f80:	ldr	r1, [fp, #-16]
   20f84:	ldr	r0, [fp, #-112]	; 0xffffff90
   20f88:	bl	15864 <_start@@Base+0x3154>
   20f8c:	str	r0, [fp, #-116]	; 0xffffff8c
   20f90:	ldr	r2, [fp, #-116]	; 0xffffff8c
   20f94:	ldr	r3, [fp, #-16]
   20f98:	cmp	r2, r3
   20f9c:	beq	21fa4 <_start@@Base+0xf894>
   20fa0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   20fa4:	ldr	r3, [fp, #-120]	; 0xffffff88
   20fa8:	cmp	r2, r3
   20fac:	beq	21fa4 <_start@@Base+0xf894>
   20fb0:	ldrsh	r3, [fp, #-50]	; 0xffffffce
   20fb4:	cmp	r3, #0
   20fb8:	bne	20fd0 <_start@@Base+0xe8c0>
   20fbc:	ldr	r3, [fp, #-112]	; 0xffffff90
   20fc0:	ldr	r3, [r3, #8]
   20fc4:	and	r3, r3, #2
   20fc8:	cmp	r3, #0
   20fcc:	beq	21eb8 <_start@@Base+0xf7a8>
   20fd0:	ldr	r3, [fp, #-112]	; 0xffffff90
   20fd4:	ldr	r0, [r3]
   20fd8:	mov	r3, #2
   20fdc:	mov	r2, #2
   20fe0:	mov	r1, #2
   20fe4:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   20fe8:	str	r0, [fp, #-20]	; 0xffffffec
   20fec:	ldr	r3, [fp, #-20]	; 0xffffffec
   20ff0:	cmp	r3, #0
   20ff4:	beq	21f38 <_start@@Base+0xf828>
   20ff8:	ldrsh	r3, [fp, #-50]	; 0xffffffce
   20ffc:	mov	r1, r3
   21000:	ldr	r0, [fp, #-20]	; 0xffffffec
   21004:	bl	12b00 <_start@@Base+0x3f0>
   21008:	b	21eb8 <_start@@Base+0xf7a8>
   2100c:	ldr	r2, [fp, #-120]	; 0xffffff88
   21010:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21014:	ldr	r0, [fp, #-112]	; 0xffffff90
   21018:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   2101c:	str	r0, [fp, #-116]	; 0xffffff8c
   21020:	b	21eb8 <_start@@Base+0xf7a8>
   21024:	ldr	r2, [fp, #-120]	; 0xffffff88
   21028:	ldr	r1, [fp, #-116]	; 0xffffff8c
   2102c:	ldr	r0, [fp, #-112]	; 0xffffff90
   21030:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   21034:	str	r0, [fp, #-116]	; 0xffffff8c
   21038:	b	21eb8 <_start@@Base+0xf7a8>
   2103c:	ldrd	r2, [fp, #-12]
   21040:	mov	r0, #0
   21044:	mvn	r1, #255	; 0xff
   21048:	and	r2, r2, r0
   2104c:	and	r3, r3, r1
   21050:	add	r1, pc, #328	; 0x148
   21054:	ldrd	r0, [r1]
   21058:	cmp	r3, r1
   2105c:	cmpeq	r2, r0
   21060:	bne	211b0 <_start@@Base+0xeaa0>
   21064:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21068:	str	r3, [fp, #-16]
   2106c:	mov	r3, #3
   21070:	ldr	r2, [fp, #-120]	; 0xffffff88
   21074:	ldr	r1, [fp, #-16]
   21078:	ldr	r0, [fp, #-112]	; 0xffffff90
   2107c:	bl	13db8 <_start@@Base+0x16a8>
   21080:	str	r0, [fp, #-116]	; 0xffffff8c
   21084:	ldr	r2, [fp, #-16]
   21088:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2108c:	cmp	r2, r3
   21090:	beq	21174 <_start@@Base+0xea64>
   21094:	mov	r2, #0
   21098:	mov	r3, #0
   2109c:	strd	r2, [fp, #-60]	; 0xffffffc4
   210a0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   210a4:	str	r3, [fp, #-16]
   210a8:	sub	r3, fp, #60	; 0x3c
   210ac:	ldr	r2, [fp, #-120]	; 0xffffff88
   210b0:	ldr	r1, [fp, #-16]
   210b4:	ldr	r0, [fp, #-112]	; 0xffffff90
   210b8:	bl	14924 <_start@@Base+0x2214>
   210bc:	str	r0, [fp, #-116]	; 0xffffff8c
   210c0:	ldr	r2, [fp, #-16]
   210c4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   210c8:	cmp	r2, r3
   210cc:	bne	2111c <_start@@Base+0xea0c>
   210d0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   210d4:	str	r3, [fp, #-16]
   210d8:	sub	r3, fp, #60	; 0x3c
   210dc:	str	r3, [sp]
   210e0:	ldr	r3, [pc, #196]	; 211ac <_start@@Base+0xea9c>
   210e4:	add	r3, pc, r3
   210e8:	ldr	r2, [fp, #-120]	; 0xffffff88
   210ec:	ldr	r1, [fp, #-16]
   210f0:	ldr	r0, [fp, #-112]	; 0xffffff90
   210f4:	bl	154c0 <_start@@Base+0x2db0>
   210f8:	str	r0, [fp, #-116]	; 0xffffff8c
   210fc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21100:	ldr	r3, [fp, #-16]
   21104:	cmp	r2, r3
   21108:	beq	21fa4 <_start@@Base+0xf894>
   2110c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21110:	ldr	r3, [fp, #-120]	; 0xffffff88
   21114:	cmp	r2, r3
   21118:	beq	21fa4 <_start@@Base+0xf894>
   2111c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   21120:	orrs	r3, r2, r3
   21124:	bne	2113c <_start@@Base+0xea2c>
   21128:	ldr	r3, [fp, #-112]	; 0xffffff90
   2112c:	ldr	r3, [r3, #8]
   21130:	and	r3, r3, #2
   21134:	cmp	r3, #0
   21138:	beq	21eb8 <_start@@Base+0xf7a8>
   2113c:	ldr	r3, [fp, #-112]	; 0xffffff90
   21140:	ldr	r0, [r3]
   21144:	mov	r3, #8
   21148:	mov	r2, #8
   2114c:	mov	r1, #6
   21150:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   21154:	str	r0, [fp, #-20]	; 0xffffffec
   21158:	ldr	r3, [fp, #-20]	; 0xffffffec
   2115c:	cmp	r3, #0
   21160:	beq	21f40 <_start@@Base+0xf830>
   21164:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   21168:	ldr	r0, [fp, #-20]	; 0xffffffec
   2116c:	bl	12bc0 <_start@@Base+0x4b0>
   21170:	b	21eb8 <_start@@Base+0xf7a8>
   21174:	ldr	r2, [fp, #-120]	; 0xffffff88
   21178:	ldr	r1, [fp, #-116]	; 0xffffff8c
   2117c:	ldr	r0, [fp, #-112]	; 0xffffff90
   21180:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   21184:	str	r0, [fp, #-116]	; 0xffffff8c
   21188:	b	21eb8 <_start@@Base+0xf7a8>
   2118c:	nop			; (mov r0, r0)
   21190:			; <UNDEFINED> instruction: 0xffffffff
   21194:	ldmdbvs	r3!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, ip, sp}
   21198:	andeq	r0, r0, r0
   2119c:	ldmdbvs	r1!, {r9, sl, ip, sp}
   211a0:	andeq	r0, r0, r0
   211a4:	ldmdbvs	r6!, {sl, ip, sp}
   211a8:	ldrdeq	r7, [r2], -ip
   211ac:	andeq	r7, r2, ip, ror r2
   211b0:	ldrd	r2, [fp, #-12]
   211b4:	mov	r0, #0
   211b8:	mvn	r1, #255	; 0xff
   211bc:	and	r2, r2, r0
   211c0:	and	r3, r3, r1
   211c4:	add	r1, pc, #740	; 0x2e4
   211c8:	ldrd	r0, [r1]
   211cc:	cmp	r3, r1
   211d0:	cmpeq	r2, r0
   211d4:	bne	21300 <_start@@Base+0xebf0>
   211d8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   211dc:	str	r3, [fp, #-16]
   211e0:	mov	r3, #3
   211e4:	ldr	r2, [fp, #-120]	; 0xffffff88
   211e8:	ldr	r1, [fp, #-16]
   211ec:	ldr	r0, [fp, #-112]	; 0xffffff90
   211f0:	bl	13db8 <_start@@Base+0x16a8>
   211f4:	str	r0, [fp, #-116]	; 0xffffff8c
   211f8:	ldr	r2, [fp, #-16]
   211fc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21200:	cmp	r2, r3
   21204:	beq	212e8 <_start@@Base+0xebd8>
   21208:	mov	r3, #0
   2120c:	str	r3, [fp, #-64]	; 0xffffffc0
   21210:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21214:	str	r3, [fp, #-16]
   21218:	sub	r3, fp, #64	; 0x40
   2121c:	ldr	r2, [fp, #-120]	; 0xffffff88
   21220:	ldr	r1, [fp, #-16]
   21224:	ldr	r0, [fp, #-112]	; 0xffffff90
   21228:	bl	149f8 <_start@@Base+0x22e8>
   2122c:	str	r0, [fp, #-116]	; 0xffffff8c
   21230:	ldr	r2, [fp, #-16]
   21234:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21238:	cmp	r2, r3
   2123c:	bne	2128c <_start@@Base+0xeb7c>
   21240:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21244:	str	r3, [fp, #-16]
   21248:	sub	r3, fp, #64	; 0x40
   2124c:	str	r3, [sp]
   21250:	ldr	r3, [pc, #624]	; 214c8 <_start@@Base+0xedb8>
   21254:	add	r3, pc, r3
   21258:	ldr	r2, [fp, #-120]	; 0xffffff88
   2125c:	ldr	r1, [fp, #-16]
   21260:	ldr	r0, [fp, #-112]	; 0xffffff90
   21264:	bl	15698 <_start@@Base+0x2f88>
   21268:	str	r0, [fp, #-116]	; 0xffffff8c
   2126c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21270:	ldr	r3, [fp, #-16]
   21274:	cmp	r2, r3
   21278:	beq	21fa4 <_start@@Base+0xf894>
   2127c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21280:	ldr	r3, [fp, #-120]	; 0xffffff88
   21284:	cmp	r2, r3
   21288:	beq	21fa4 <_start@@Base+0xf894>
   2128c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   21290:	cmp	r3, #0
   21294:	bne	212ac <_start@@Base+0xeb9c>
   21298:	ldr	r3, [fp, #-112]	; 0xffffff90
   2129c:	ldr	r3, [r3, #8]
   212a0:	and	r3, r3, #2
   212a4:	cmp	r3, #0
   212a8:	beq	21eb8 <_start@@Base+0xf7a8>
   212ac:	ldr	r3, [fp, #-112]	; 0xffffff90
   212b0:	ldr	r0, [r3]
   212b4:	mov	r3, #4
   212b8:	mov	r2, #4
   212bc:	mov	r1, #4
   212c0:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   212c4:	str	r0, [fp, #-20]	; 0xffffffec
   212c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   212cc:	cmp	r3, #0
   212d0:	beq	21f48 <_start@@Base+0xf838>
   212d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   212d8:	mov	r1, r3
   212dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   212e0:	bl	12b64 <_start@@Base+0x454>
   212e4:	b	21eb8 <_start@@Base+0xf7a8>
   212e8:	ldr	r2, [fp, #-120]	; 0xffffff88
   212ec:	ldr	r1, [fp, #-116]	; 0xffffff8c
   212f0:	ldr	r0, [fp, #-112]	; 0xffffff90
   212f4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   212f8:	str	r0, [fp, #-116]	; 0xffffff8c
   212fc:	b	21eb8 <_start@@Base+0xf7a8>
   21300:	ldr	r2, [fp, #-120]	; 0xffffff88
   21304:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21308:	ldr	r0, [fp, #-112]	; 0xffffff90
   2130c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   21310:	str	r0, [fp, #-116]	; 0xffffff8c
   21314:	b	21eb8 <_start@@Base+0xf7a8>
   21318:	ldrd	r2, [fp, #-12]
   2131c:	add	r1, pc, #404	; 0x194
   21320:	ldrd	r0, [r1]
   21324:	cmp	r3, r1
   21328:	cmpeq	r2, r0
   2132c:	bhi	217ac <_start@@Base+0xf09c>
   21330:	ldrd	r2, [fp, #-12]
   21334:	add	r1, pc, #388	; 0x184
   21338:	ldrd	r0, [r1]
   2133c:	cmp	r3, r1
   21340:	cmpeq	r2, r0
   21344:	bhi	214d8 <_start@@Base+0xedc8>
   21348:	ldrd	r2, [fp, #-12]
   2134c:	mov	r0, #0
   21350:	ldr	r1, [pc, #372]	; 214cc <_start@@Base+0xedbc>
   21354:	and	r2, r2, r0
   21358:	and	r3, r3, r1
   2135c:	mov	r0, #0
   21360:	ldr	r1, [pc, #360]	; 214d0 <_start@@Base+0xedc0>
   21364:	cmp	r3, r1
   21368:	cmpeq	r2, r0
   2136c:	bne	21498 <_start@@Base+0xed88>
   21370:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21374:	str	r3, [fp, #-16]
   21378:	mov	r3, #2
   2137c:	ldr	r2, [fp, #-120]	; 0xffffff88
   21380:	ldr	r1, [fp, #-16]
   21384:	ldr	r0, [fp, #-112]	; 0xffffff90
   21388:	bl	13db8 <_start@@Base+0x16a8>
   2138c:	str	r0, [fp, #-116]	; 0xffffff8c
   21390:	ldr	r2, [fp, #-16]
   21394:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21398:	cmp	r2, r3
   2139c:	beq	21480 <_start@@Base+0xed70>
   213a0:	mov	r3, #0
   213a4:	strb	r3, [fp, #-65]	; 0xffffffbf
   213a8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   213ac:	str	r3, [fp, #-16]
   213b0:	sub	r3, fp, #65	; 0x41
   213b4:	ldr	r2, [fp, #-120]	; 0xffffff88
   213b8:	ldr	r1, [fp, #-16]
   213bc:	ldr	r0, [fp, #-112]	; 0xffffff90
   213c0:	bl	14b98 <_start@@Base+0x2488>
   213c4:	str	r0, [fp, #-116]	; 0xffffff8c
   213c8:	ldr	r2, [fp, #-16]
   213cc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   213d0:	cmp	r2, r3
   213d4:	bne	21424 <_start@@Base+0xed14>
   213d8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   213dc:	str	r3, [fp, #-16]
   213e0:	sub	r3, fp, #65	; 0x41
   213e4:	str	r3, [sp]
   213e8:	ldr	r3, [pc, #228]	; 214d4 <_start@@Base+0xedc4>
   213ec:	add	r3, pc, r3
   213f0:	ldr	r2, [fp, #-120]	; 0xffffff88
   213f4:	ldr	r1, [fp, #-16]
   213f8:	ldr	r0, [fp, #-112]	; 0xffffff90
   213fc:	bl	15a40 <_start@@Base+0x3330>
   21400:	str	r0, [fp, #-116]	; 0xffffff8c
   21404:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21408:	ldr	r3, [fp, #-16]
   2140c:	cmp	r2, r3
   21410:	beq	21fa4 <_start@@Base+0xf894>
   21414:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21418:	ldr	r3, [fp, #-120]	; 0xffffff88
   2141c:	cmp	r2, r3
   21420:	beq	21fa4 <_start@@Base+0xf894>
   21424:	ldrsb	r3, [fp, #-65]	; 0xffffffbf
   21428:	cmp	r3, #0
   2142c:	bne	21444 <_start@@Base+0xed34>
   21430:	ldr	r3, [fp, #-112]	; 0xffffff90
   21434:	ldr	r3, [r3, #8]
   21438:	and	r3, r3, #2
   2143c:	cmp	r3, #0
   21440:	beq	21eb8 <_start@@Base+0xf7a8>
   21444:	ldr	r3, [fp, #-112]	; 0xffffff90
   21448:	ldr	r0, [r3]
   2144c:	mov	r3, #1
   21450:	mov	r2, #1
   21454:	mov	r1, #0
   21458:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   2145c:	str	r0, [fp, #-20]	; 0xffffffec
   21460:	ldr	r3, [fp, #-20]	; 0xffffffec
   21464:	cmp	r3, #0
   21468:	beq	21f50 <_start@@Base+0xf840>
   2146c:	ldrsb	r3, [fp, #-65]	; 0xffffffbf
   21470:	mov	r1, r3
   21474:	ldr	r0, [fp, #-20]	; 0xffffffec
   21478:	bl	12a40 <_start@@Base+0x330>
   2147c:	b	21eb8 <_start@@Base+0xf7a8>
   21480:	ldr	r2, [fp, #-120]	; 0xffffff88
   21484:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21488:	ldr	r0, [fp, #-112]	; 0xffffff90
   2148c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   21490:	str	r0, [fp, #-116]	; 0xffffff8c
   21494:	b	21eb8 <_start@@Base+0xf7a8>
   21498:	ldr	r2, [fp, #-120]	; 0xffffff88
   2149c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   214a0:	ldr	r0, [fp, #-112]	; 0xffffff90
   214a4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   214a8:	str	r0, [fp, #-116]	; 0xffffff8c
   214ac:	b	21eb8 <_start@@Base+0xf7a8>
   214b0:	andeq	r0, r0, r0
   214b4:	ldmdbvs	r3!, {r9, ip, sp}
   214b8:			; <UNDEFINED> instruction: 0xffffffff
   214bc:	ldrvc	r3, [r6, #-1023]!	; 0xfffffc01
   214c0:			; <UNDEFINED> instruction: 0xffffffff
   214c4:	ldrvc	r3, [r1, #-1535]!	; 0xfffffa01
   214c8:	andeq	r7, r2, r8, lsl r1
   214cc:			; <UNDEFINED> instruction: 0xffff0000
   214d0:	ldmdbvs	r8!, {}	; <UNPREDICTABLE>
   214d4:	andeq	r6, r2, ip, lsl #31
   214d8:	ldrd	r2, [fp, #-12]
   214dc:	mov	r0, #0
   214e0:	mvn	r1, #255	; 0xff
   214e4:	and	r2, r2, r0
   214e8:	and	r3, r3, r1
   214ec:	add	r1, pc, #668	; 0x29c
   214f0:	ldrd	r0, [r1]
   214f4:	cmp	r3, r1
   214f8:	cmpeq	r2, r0
   214fc:	bne	21628 <_start@@Base+0xef18>
   21500:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21504:	str	r3, [fp, #-16]
   21508:	mov	r3, #3
   2150c:	ldr	r2, [fp, #-120]	; 0xffffff88
   21510:	ldr	r1, [fp, #-16]
   21514:	ldr	r0, [fp, #-112]	; 0xffffff90
   21518:	bl	13db8 <_start@@Base+0x16a8>
   2151c:	str	r0, [fp, #-116]	; 0xffffff8c
   21520:	ldr	r2, [fp, #-16]
   21524:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21528:	cmp	r2, r3
   2152c:	beq	21610 <_start@@Base+0xef00>
   21530:	mov	r3, #0
   21534:	str	r3, [fp, #-72]	; 0xffffffb8
   21538:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2153c:	str	r3, [fp, #-16]
   21540:	sub	r3, fp, #72	; 0x48
   21544:	ldr	r2, [fp, #-120]	; 0xffffff88
   21548:	ldr	r1, [fp, #-16]
   2154c:	ldr	r0, [fp, #-112]	; 0xffffff90
   21550:	bl	146b4 <_start@@Base+0x1fa4>
   21554:	str	r0, [fp, #-116]	; 0xffffff8c
   21558:	ldr	r2, [fp, #-16]
   2155c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21560:	cmp	r2, r3
   21564:	bne	215b4 <_start@@Base+0xeea4>
   21568:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2156c:	str	r3, [fp, #-16]
   21570:	sub	r3, fp, #72	; 0x48
   21574:	str	r3, [sp]
   21578:	ldr	r3, [pc, #544]	; 217a0 <_start@@Base+0xf090>
   2157c:	add	r3, pc, r3
   21580:	ldr	r2, [fp, #-120]	; 0xffffff88
   21584:	ldr	r1, [fp, #-16]
   21588:	ldr	r0, [fp, #-112]	; 0xffffff90
   2158c:	bl	14f54 <_start@@Base+0x2844>
   21590:	str	r0, [fp, #-116]	; 0xffffff8c
   21594:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21598:	ldr	r3, [fp, #-16]
   2159c:	cmp	r2, r3
   215a0:	beq	21fa4 <_start@@Base+0xf894>
   215a4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   215a8:	ldr	r3, [fp, #-120]	; 0xffffff88
   215ac:	cmp	r2, r3
   215b0:	beq	21fa4 <_start@@Base+0xf894>
   215b4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   215b8:	cmp	r3, #0
   215bc:	bne	215d4 <_start@@Base+0xeec4>
   215c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   215c4:	ldr	r3, [r3, #8]
   215c8:	and	r3, r3, #2
   215cc:	cmp	r3, #0
   215d0:	beq	21eb8 <_start@@Base+0xf7a8>
   215d4:	ldr	r3, [fp, #-112]	; 0xffffff90
   215d8:	ldr	r0, [r3]
   215dc:	mov	r3, #4
   215e0:	mov	r2, #4
   215e4:	mov	r1, #5
   215e8:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   215ec:	str	r0, [fp, #-20]	; 0xffffffec
   215f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   215f4:	cmp	r3, #0
   215f8:	beq	21f58 <_start@@Base+0xf848>
   215fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   21600:	mov	r1, r3
   21604:	ldr	r0, [fp, #-20]	; 0xffffffec
   21608:	bl	1292c <_start@@Base+0x21c>
   2160c:	b	21eb8 <_start@@Base+0xf7a8>
   21610:	ldr	r2, [fp, #-120]	; 0xffffff88
   21614:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21618:	ldr	r0, [fp, #-112]	; 0xffffff90
   2161c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   21620:	str	r0, [fp, #-116]	; 0xffffff8c
   21624:	b	21eb8 <_start@@Base+0xf7a8>
   21628:	ldrd	r2, [fp, #-12]
   2162c:	mov	r0, #0
   21630:	mvn	r1, #255	; 0xff
   21634:	and	r2, r2, r0
   21638:	and	r3, r3, r1
   2163c:	add	r1, pc, #340	; 0x154
   21640:	ldrd	r0, [r1]
   21644:	cmp	r3, r1
   21648:	cmpeq	r2, r0
   2164c:	bne	21778 <_start@@Base+0xf068>
   21650:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21654:	str	r3, [fp, #-16]
   21658:	mov	r3, #3
   2165c:	ldr	r2, [fp, #-120]	; 0xffffff88
   21660:	ldr	r1, [fp, #-16]
   21664:	ldr	r0, [fp, #-112]	; 0xffffff90
   21668:	bl	13db8 <_start@@Base+0x16a8>
   2166c:	str	r0, [fp, #-116]	; 0xffffff8c
   21670:	ldr	r2, [fp, #-16]
   21674:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21678:	cmp	r2, r3
   2167c:	beq	21760 <_start@@Base+0xf050>
   21680:	mov	r3, #0
   21684:	strh	r3, [fp, #-74]	; 0xffffffb6
   21688:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2168c:	str	r3, [fp, #-16]
   21690:	sub	r3, fp, #74	; 0x4a
   21694:	ldr	r2, [fp, #-120]	; 0xffffff88
   21698:	ldr	r1, [fp, #-16]
   2169c:	ldr	r0, [fp, #-112]	; 0xffffff90
   216a0:	bl	14784 <_start@@Base+0x2074>
   216a4:	str	r0, [fp, #-116]	; 0xffffff8c
   216a8:	ldr	r2, [fp, #-16]
   216ac:	ldr	r3, [fp, #-116]	; 0xffffff8c
   216b0:	cmp	r2, r3
   216b4:	bne	21704 <_start@@Base+0xeff4>
   216b8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   216bc:	str	r3, [fp, #-16]
   216c0:	sub	r3, fp, #74	; 0x4a
   216c4:	str	r3, [sp]
   216c8:	ldr	r3, [pc, #212]	; 217a4 <_start@@Base+0xf094>
   216cc:	add	r3, pc, r3
   216d0:	ldr	r2, [fp, #-120]	; 0xffffff88
   216d4:	ldr	r1, [fp, #-16]
   216d8:	ldr	r0, [fp, #-112]	; 0xffffff90
   216dc:	bl	15120 <_start@@Base+0x2a10>
   216e0:	str	r0, [fp, #-116]	; 0xffffff8c
   216e4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   216e8:	ldr	r3, [fp, #-16]
   216ec:	cmp	r2, r3
   216f0:	beq	21fa4 <_start@@Base+0xf894>
   216f4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   216f8:	ldr	r3, [fp, #-120]	; 0xffffff88
   216fc:	cmp	r2, r3
   21700:	beq	21fa4 <_start@@Base+0xf894>
   21704:	ldrh	r3, [fp, #-74]	; 0xffffffb6
   21708:	cmp	r3, #0
   2170c:	bne	21724 <_start@@Base+0xf014>
   21710:	ldr	r3, [fp, #-112]	; 0xffffff90
   21714:	ldr	r3, [r3, #8]
   21718:	and	r3, r3, #2
   2171c:	cmp	r3, #0
   21720:	beq	21eb8 <_start@@Base+0xf7a8>
   21724:	ldr	r3, [fp, #-112]	; 0xffffff90
   21728:	ldr	r0, [r3]
   2172c:	mov	r3, #2
   21730:	mov	r2, #2
   21734:	mov	r1, #3
   21738:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   2173c:	str	r0, [fp, #-20]	; 0xffffffec
   21740:	ldr	r3, [fp, #-20]	; 0xffffffec
   21744:	cmp	r3, #0
   21748:	beq	21f60 <_start@@Base+0xf850>
   2174c:	ldrh	r3, [fp, #-74]	; 0xffffffb6
   21750:	mov	r1, r3
   21754:	ldr	r0, [fp, #-20]	; 0xffffffec
   21758:	bl	128c8 <_start@@Base+0x1b8>
   2175c:	b	21eb8 <_start@@Base+0xf7a8>
   21760:	ldr	r2, [fp, #-120]	; 0xffffff88
   21764:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21768:	ldr	r0, [fp, #-112]	; 0xffffff90
   2176c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   21770:	str	r0, [fp, #-116]	; 0xffffff8c
   21774:	b	21eb8 <_start@@Base+0xf7a8>
   21778:	ldr	r2, [fp, #-120]	; 0xffffff88
   2177c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21780:	ldr	r0, [fp, #-112]	; 0xffffff90
   21784:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   21788:	str	r0, [fp, #-116]	; 0xffffff8c
   2178c:	b	21eb8 <_start@@Base+0xf7a8>
   21790:	andeq	r0, r0, r0
   21794:	ldrvc	r3, [r3, #-512]!	; 0xfffffe00
   21798:	andeq	r0, r0, r0
   2179c:	ldrvc	r3, [r1, #-1536]!	; 0xfffffa00
   217a0:	andeq	r6, r2, r8, lsl #28
   217a4:	andeq	r6, r2, r4, asr #25
   217a8:	ldrvc	pc, [r7, #-4095]!	; 0xfffff001
   217ac:	ldrd	r2, [fp, #-12]
   217b0:	mvn	r0, #0
   217b4:	ldr	r1, [pc, #-20]	; 217a8 <_start@@Base+0xf098>
   217b8:	cmp	r3, r1
   217bc:	cmpeq	r2, r0
   217c0:	bhi	2192c <_start@@Base+0xf21c>
   217c4:	ldrd	r2, [fp, #-12]
   217c8:	mov	r0, #0
   217cc:	mvn	r1, #255	; 0xff
   217d0:	and	r2, r2, r0
   217d4:	and	r3, r3, r1
   217d8:	add	r1, pc, #872	; 0x368
   217dc:	ldrd	r0, [r1]
   217e0:	cmp	r3, r1
   217e4:	cmpeq	r2, r0
   217e8:	bne	21914 <_start@@Base+0xf204>
   217ec:	ldr	r3, [fp, #-116]	; 0xffffff8c
   217f0:	str	r3, [fp, #-16]
   217f4:	mov	r3, #3
   217f8:	ldr	r2, [fp, #-120]	; 0xffffff88
   217fc:	ldr	r1, [fp, #-16]
   21800:	ldr	r0, [fp, #-112]	; 0xffffff90
   21804:	bl	13db8 <_start@@Base+0x16a8>
   21808:	str	r0, [fp, #-116]	; 0xffffff8c
   2180c:	ldr	r2, [fp, #-16]
   21810:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21814:	cmp	r2, r3
   21818:	beq	218fc <_start@@Base+0xf1ec>
   2181c:	mov	r2, #0
   21820:	mov	r3, #0
   21824:	strd	r2, [fp, #-84]	; 0xffffffac
   21828:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2182c:	str	r3, [fp, #-16]
   21830:	sub	r3, fp, #84	; 0x54
   21834:	ldr	r2, [fp, #-120]	; 0xffffff88
   21838:	ldr	r1, [fp, #-16]
   2183c:	ldr	r0, [fp, #-112]	; 0xffffff90
   21840:	bl	145e0 <_start@@Base+0x1ed0>
   21844:	str	r0, [fp, #-116]	; 0xffffff8c
   21848:	ldr	r2, [fp, #-16]
   2184c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21850:	cmp	r2, r3
   21854:	bne	218a4 <_start@@Base+0xf194>
   21858:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2185c:	str	r3, [fp, #-16]
   21860:	sub	r3, fp, #84	; 0x54
   21864:	str	r3, [sp]
   21868:	ldr	r3, [pc, #744]	; 21b58 <_start@@Base+0xf448>
   2186c:	add	r3, pc, r3
   21870:	ldr	r2, [fp, #-120]	; 0xffffff88
   21874:	ldr	r1, [fp, #-16]
   21878:	ldr	r0, [fp, #-112]	; 0xffffff90
   2187c:	bl	14d7c <_start@@Base+0x266c>
   21880:	str	r0, [fp, #-116]	; 0xffffff8c
   21884:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21888:	ldr	r3, [fp, #-16]
   2188c:	cmp	r2, r3
   21890:	beq	21fa4 <_start@@Base+0xf894>
   21894:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21898:	ldr	r3, [fp, #-120]	; 0xffffff88
   2189c:	cmp	r2, r3
   218a0:	beq	21fa4 <_start@@Base+0xf894>
   218a4:	ldrd	r2, [fp, #-84]	; 0xffffffac
   218a8:	orrs	r3, r2, r3
   218ac:	bne	218c4 <_start@@Base+0xf1b4>
   218b0:	ldr	r3, [fp, #-112]	; 0xffffff90
   218b4:	ldr	r3, [r3, #8]
   218b8:	and	r3, r3, #2
   218bc:	cmp	r3, #0
   218c0:	beq	21eb8 <_start@@Base+0xf7a8>
   218c4:	ldr	r3, [fp, #-112]	; 0xffffff90
   218c8:	ldr	r0, [r3]
   218cc:	mov	r3, #8
   218d0:	mov	r2, #8
   218d4:	mov	r1, #7
   218d8:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   218dc:	str	r0, [fp, #-20]	; 0xffffffec
   218e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   218e4:	cmp	r3, #0
   218e8:	beq	21f68 <_start@@Base+0xf858>
   218ec:	ldrd	r2, [fp, #-84]	; 0xffffffac
   218f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   218f4:	bl	12988 <_start@@Base+0x278>
   218f8:	b	21eb8 <_start@@Base+0xf7a8>
   218fc:	ldr	r2, [fp, #-120]	; 0xffffff88
   21900:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21904:	ldr	r0, [fp, #-112]	; 0xffffff90
   21908:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   2190c:	str	r0, [fp, #-116]	; 0xffffff8c
   21910:	b	21eb8 <_start@@Base+0xf7a8>
   21914:	ldr	r2, [fp, #-120]	; 0xffffff88
   21918:	ldr	r1, [fp, #-116]	; 0xffffff8c
   2191c:	ldr	r0, [fp, #-112]	; 0xffffff90
   21920:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   21924:	str	r0, [fp, #-116]	; 0xffffff8c
   21928:	b	21eb8 <_start@@Base+0xf7a8>
   2192c:	ldrd	r2, [fp, #-12]
   21930:	mvn	r0, #0
   21934:	ldr	r1, [pc, #544]	; 21b5c <_start@@Base+0xf44c>
   21938:	cmp	r3, r1
   2193c:	cmpeq	r2, r0
   21940:	bhi	21aac <_start@@Base+0xf39c>
   21944:	ldrd	r2, [fp, #-12]
   21948:	mov	r0, #0
   2194c:	ldr	r1, [pc, #536]	; 21b6c <_start@@Base+0xf45c>
   21950:	and	r2, r2, r0
   21954:	and	r3, r3, r1
   21958:	mov	r0, #0
   2195c:	ldr	r1, [pc, #508]	; 21b60 <_start@@Base+0xf450>
   21960:	cmp	r3, r1
   21964:	cmpeq	r2, r0
   21968:	bne	21a94 <_start@@Base+0xf384>
   2196c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21970:	str	r3, [fp, #-16]
   21974:	mov	r3, #2
   21978:	ldr	r2, [fp, #-120]	; 0xffffff88
   2197c:	ldr	r1, [fp, #-16]
   21980:	ldr	r0, [fp, #-112]	; 0xffffff90
   21984:	bl	13db8 <_start@@Base+0x16a8>
   21988:	str	r0, [fp, #-116]	; 0xffffff8c
   2198c:	ldr	r2, [fp, #-16]
   21990:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21994:	cmp	r2, r3
   21998:	beq	21a7c <_start@@Base+0xf36c>
   2199c:	mov	r3, #0
   219a0:	strb	r3, [fp, #-85]	; 0xffffffab
   219a4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   219a8:	str	r3, [fp, #-16]
   219ac:	sub	r3, fp, #85	; 0x55
   219b0:	ldr	r2, [fp, #-120]	; 0xffffff88
   219b4:	ldr	r1, [fp, #-16]
   219b8:	ldr	r0, [fp, #-112]	; 0xffffff90
   219bc:	bl	14854 <_start@@Base+0x2144>
   219c0:	str	r0, [fp, #-116]	; 0xffffff8c
   219c4:	ldr	r2, [fp, #-16]
   219c8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   219cc:	cmp	r2, r3
   219d0:	bne	21a20 <_start@@Base+0xf310>
   219d4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   219d8:	str	r3, [fp, #-16]
   219dc:	sub	r3, fp, #85	; 0x55
   219e0:	str	r3, [sp]
   219e4:	ldr	r3, [pc, #376]	; 21b64 <_start@@Base+0xf454>
   219e8:	add	r3, pc, r3
   219ec:	ldr	r2, [fp, #-120]	; 0xffffff88
   219f0:	ldr	r1, [fp, #-16]
   219f4:	ldr	r0, [fp, #-112]	; 0xffffff90
   219f8:	bl	152f0 <_start@@Base+0x2be0>
   219fc:	str	r0, [fp, #-116]	; 0xffffff8c
   21a00:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21a04:	ldr	r3, [fp, #-16]
   21a08:	cmp	r2, r3
   21a0c:	beq	21fa4 <_start@@Base+0xf894>
   21a10:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21a14:	ldr	r3, [fp, #-120]	; 0xffffff88
   21a18:	cmp	r2, r3
   21a1c:	beq	21fa4 <_start@@Base+0xf894>
   21a20:	ldrb	r3, [fp, #-85]	; 0xffffffab
   21a24:	cmp	r3, #0
   21a28:	bne	21a40 <_start@@Base+0xf330>
   21a2c:	ldr	r3, [fp, #-112]	; 0xffffff90
   21a30:	ldr	r3, [r3, #8]
   21a34:	and	r3, r3, #2
   21a38:	cmp	r3, #0
   21a3c:	beq	21eb8 <_start@@Base+0xf7a8>
   21a40:	ldr	r3, [fp, #-112]	; 0xffffff90
   21a44:	ldr	r0, [r3]
   21a48:	mov	r3, #1
   21a4c:	mov	r2, #1
   21a50:	mov	r1, #1
   21a54:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   21a58:	str	r0, [fp, #-20]	; 0xffffffec
   21a5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21a60:	cmp	r3, #0
   21a64:	beq	21f70 <_start@@Base+0xf860>
   21a68:	ldrb	r3, [fp, #-85]	; 0xffffffab
   21a6c:	mov	r1, r3
   21a70:	ldr	r0, [fp, #-20]	; 0xffffffec
   21a74:	bl	12860 <_start@@Base+0x150>
   21a78:	b	21eb8 <_start@@Base+0xf7a8>
   21a7c:	ldr	r2, [fp, #-120]	; 0xffffff88
   21a80:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21a84:	ldr	r0, [fp, #-112]	; 0xffffff90
   21a88:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   21a8c:	str	r0, [fp, #-116]	; 0xffffff8c
   21a90:	b	21eb8 <_start@@Base+0xf7a8>
   21a94:	ldr	r2, [fp, #-120]	; 0xffffff88
   21a98:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21a9c:	ldr	r0, [fp, #-112]	; 0xffffff90
   21aa0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   21aa4:	str	r0, [fp, #-116]	; 0xffffff8c
   21aa8:	b	21eb8 <_start@@Base+0xf7a8>
   21aac:	ldrd	r2, [fp, #-12]
   21ab0:	mov	r0, #0
   21ab4:	mvn	r1, #0
   21ab8:	and	r2, r2, r0
   21abc:	and	r3, r3, r1
   21ac0:	add	r1, pc, #136	; 0x88
   21ac4:	ldrd	r0, [r1]
   21ac8:	cmp	r3, r1
   21acc:	cmpeq	r2, r0
   21ad0:	bne	21cc4 <_start@@Base+0xf5b4>
   21ad4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21ad8:	str	r3, [fp, #-16]
   21adc:	mov	r3, #4
   21ae0:	ldr	r2, [fp, #-120]	; 0xffffff88
   21ae4:	ldr	r1, [fp, #-16]
   21ae8:	ldr	r0, [fp, #-112]	; 0xffffff90
   21aec:	bl	13db8 <_start@@Base+0x16a8>
   21af0:	str	r0, [fp, #-116]	; 0xffffff8c
   21af4:	ldr	r2, [fp, #-16]
   21af8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21afc:	cmp	r2, r3
   21b00:	beq	21cac <_start@@Base+0xf59c>
   21b04:	ldr	r3, [fp, #-112]	; 0xffffff90
   21b08:	ldr	r0, [r3]
   21b0c:	mvn	r3, #-536870912	; 0xe0000000
   21b10:	mov	r2, #8
   21b14:	mov	r1, #8
   21b18:	bl	2894c <flatcc_builder_start_vector@@Base>
   21b1c:	mov	r3, r0
   21b20:	cmp	r3, #0
   21b24:	bne	21f78 <_start@@Base+0xf868>
   21b28:	sub	r3, fp, #32
   21b2c:	ldr	r2, [fp, #-120]	; 0xffffff88
   21b30:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21b34:	ldr	r0, [fp, #-112]	; 0xffffff90
   21b38:	bl	13b68 <_start@@Base+0x1458>
   21b3c:	str	r0, [fp, #-116]	; 0xffffff8c
   21b40:	b	21c4c <_start@@Base+0xf53c>
   21b44:	nop			; (mov r0, r0)
   21b48:	andeq	r0, r0, r0
   21b4c:	ldrvc	r3, [r6, #-1024]!	; 0xfffffc00
   21b50:	andeq	r0, r0, r0
   21b54:			; <UNDEFINED> instruction: 0x76663634
   21b58:	andeq	r6, r2, r0, lsr fp
   21b5c:	shsub8vc	pc, r7, pc	; <UNPREDICTABLE>
   21b60:	ldrvc	r0, [r8, #-0]!
   21b64:	andeq	r6, r2, r0, asr #19
   21b68:	andeq	r6, r2, r8, asr #15
   21b6c:			; <UNDEFINED> instruction: 0xffff0000
   21b70:	ldrtvc	r0, [r8], -r0
   21b74:	strdeq	r6, [r2], -r4
   21b78:	mov	r2, #0
   21b7c:	mov	r3, #0
   21b80:	strd	r2, [fp, #-100]	; 0xffffff9c
   21b84:	ldr	r3, [fp, #-112]	; 0xffffff90
   21b88:	ldr	r3, [r3]
   21b8c:	mov	r1, #1
   21b90:	mov	r0, r3
   21b94:	bl	2805c <flatcc_builder_extend_vector@@Base>
   21b98:	str	r0, [fp, #-20]	; 0xffffffec
   21b9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21ba0:	cmp	r3, #0
   21ba4:	beq	21f80 <_start@@Base+0xf870>
   21ba8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21bac:	str	r3, [fp, #-16]
   21bb0:	sub	r3, fp, #100	; 0x64
   21bb4:	ldr	r2, [fp, #-120]	; 0xffffff88
   21bb8:	ldr	r1, [fp, #-16]
   21bbc:	ldr	r0, [fp, #-112]	; 0xffffff90
   21bc0:	bl	32e64 <flatcc_json_parser_double@@Base>
   21bc4:	str	r0, [fp, #-116]	; 0xffffff8c
   21bc8:	ldr	r2, [fp, #-16]
   21bcc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21bd0:	cmp	r2, r3
   21bd4:	bne	21c24 <_start@@Base+0xf514>
   21bd8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21bdc:	str	r3, [fp, #-16]
   21be0:	sub	r3, fp, #100	; 0x64
   21be4:	str	r3, [sp]
   21be8:	ldr	r3, [pc, #-136]	; 21b68 <_start@@Base+0xf458>
   21bec:	add	r3, pc, r3
   21bf0:	ldr	r2, [fp, #-120]	; 0xffffff88
   21bf4:	ldr	r1, [fp, #-16]
   21bf8:	ldr	r0, [fp, #-112]	; 0xffffff90
   21bfc:	bl	15fb8 <_start@@Base+0x38a8>
   21c00:	str	r0, [fp, #-116]	; 0xffffff8c
   21c04:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21c08:	ldr	r3, [fp, #-16]
   21c0c:	cmp	r2, r3
   21c10:	beq	21f80 <_start@@Base+0xf870>
   21c14:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21c18:	ldr	r3, [fp, #-120]	; 0xffffff88
   21c1c:	cmp	r2, r3
   21c20:	beq	21f80 <_start@@Base+0xf870>
   21c24:	vldr	d7, [fp, #-100]	; 0xffffff9c
   21c28:	vmov.f64	d0, d7
   21c2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21c30:	bl	12d6c <_start@@Base+0x65c>
   21c34:	sub	r3, fp, #32
   21c38:	ldr	r2, [fp, #-120]	; 0xffffff88
   21c3c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21c40:	ldr	r0, [fp, #-112]	; 0xffffff90
   21c44:	bl	13c50 <_start@@Base+0x1540>
   21c48:	str	r0, [fp, #-116]	; 0xffffff8c
   21c4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21c50:	cmp	r3, #0
   21c54:	bne	21b78 <_start@@Base+0xf468>
   21c58:	ldr	r3, [fp, #-112]	; 0xffffff90
   21c5c:	ldr	r3, [r3]
   21c60:	mov	r0, r3
   21c64:	bl	29ba4 <flatcc_builder_end_vector@@Base>
   21c68:	str	r0, [fp, #-24]	; 0xffffffe8
   21c6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21c70:	cmp	r3, #0
   21c74:	beq	21fa4 <_start@@Base+0xf894>
   21c78:	ldr	r3, [fp, #-112]	; 0xffffff90
   21c7c:	ldr	r3, [r3]
   21c80:	mov	r1, #11
   21c84:	mov	r0, r3
   21c88:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   21c8c:	str	r0, [fp, #-28]	; 0xffffffe4
   21c90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21c94:	cmp	r3, #0
   21c98:	beq	21fa4 <_start@@Base+0xf894>
   21c9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21ca0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21ca4:	str	r2, [r3]
   21ca8:	b	21eb8 <_start@@Base+0xf7a8>
   21cac:	ldr	r2, [fp, #-120]	; 0xffffff88
   21cb0:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21cb4:	ldr	r0, [fp, #-112]	; 0xffffff90
   21cb8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   21cbc:	str	r0, [fp, #-116]	; 0xffffff8c
   21cc0:	b	21eb8 <_start@@Base+0xf7a8>
   21cc4:	ldrd	r2, [fp, #-12]
   21cc8:	mov	r0, #0
   21ccc:	ldr	r1, [pc, #-360]	; 21b6c <_start@@Base+0xf45c>
   21cd0:	and	r2, r2, r0
   21cd4:	and	r3, r3, r1
   21cd8:	mov	r0, #0
   21cdc:	ldr	r1, [pc, #-372]	; 21b70 <_start@@Base+0xf460>
   21ce0:	cmp	r3, r1
   21ce4:	cmpeq	r2, r0
   21ce8:	bne	21ea4 <_start@@Base+0xf794>
   21cec:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21cf0:	str	r3, [fp, #-16]
   21cf4:	mov	r3, #2
   21cf8:	ldr	r2, [fp, #-120]	; 0xffffff88
   21cfc:	ldr	r1, [fp, #-16]
   21d00:	ldr	r0, [fp, #-112]	; 0xffffff90
   21d04:	bl	13db8 <_start@@Base+0x16a8>
   21d08:	str	r0, [fp, #-116]	; 0xffffff8c
   21d0c:	ldr	r2, [fp, #-16]
   21d10:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21d14:	cmp	r2, r3
   21d18:	beq	21e8c <_start@@Base+0xf77c>
   21d1c:	ldr	r3, [fp, #-112]	; 0xffffff90
   21d20:	ldr	r0, [r3]
   21d24:	mvn	r3, #0
   21d28:	mov	r2, #1
   21d2c:	mov	r1, #1
   21d30:	bl	2894c <flatcc_builder_start_vector@@Base>
   21d34:	mov	r3, r0
   21d38:	cmp	r3, #0
   21d3c:	bne	21f88 <_start@@Base+0xf878>
   21d40:	sub	r3, fp, #32
   21d44:	ldr	r2, [fp, #-120]	; 0xffffff88
   21d48:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21d4c:	ldr	r0, [fp, #-112]	; 0xffffff90
   21d50:	bl	13b68 <_start@@Base+0x1458>
   21d54:	str	r0, [fp, #-116]	; 0xffffff8c
   21d58:	b	21e2c <_start@@Base+0xf71c>
   21d5c:	mov	r3, #0
   21d60:	strb	r3, [fp, #-101]	; 0xffffff9b
   21d64:	ldr	r3, [fp, #-112]	; 0xffffff90
   21d68:	ldr	r3, [r3]
   21d6c:	mov	r1, #1
   21d70:	mov	r0, r3
   21d74:	bl	2805c <flatcc_builder_extend_vector@@Base>
   21d78:	str	r0, [fp, #-20]	; 0xffffffec
   21d7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21d80:	cmp	r3, #0
   21d84:	beq	21f90 <_start@@Base+0xf880>
   21d88:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21d8c:	str	r3, [fp, #-16]
   21d90:	sub	r3, fp, #101	; 0x65
   21d94:	ldr	r2, [fp, #-120]	; 0xffffff88
   21d98:	ldr	r1, [fp, #-16]
   21d9c:	ldr	r0, [fp, #-112]	; 0xffffff90
   21da0:	bl	14b98 <_start@@Base+0x2488>
   21da4:	str	r0, [fp, #-116]	; 0xffffff8c
   21da8:	ldr	r2, [fp, #-16]
   21dac:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21db0:	cmp	r2, r3
   21db4:	bne	21e04 <_start@@Base+0xf6f4>
   21db8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21dbc:	str	r3, [fp, #-16]
   21dc0:	sub	r3, fp, #101	; 0x65
   21dc4:	str	r3, [sp]
   21dc8:	ldr	r3, [pc, #-604]	; 21b74 <_start@@Base+0xf464>
   21dcc:	add	r3, pc, r3
   21dd0:	ldr	r2, [fp, #-120]	; 0xffffff88
   21dd4:	ldr	r1, [fp, #-16]
   21dd8:	ldr	r0, [fp, #-112]	; 0xffffff90
   21ddc:	bl	15a40 <_start@@Base+0x3330>
   21de0:	str	r0, [fp, #-116]	; 0xffffff8c
   21de4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21de8:	ldr	r3, [fp, #-16]
   21dec:	cmp	r2, r3
   21df0:	beq	21f90 <_start@@Base+0xf880>
   21df4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   21df8:	ldr	r3, [fp, #-120]	; 0xffffff88
   21dfc:	cmp	r2, r3
   21e00:	beq	21f90 <_start@@Base+0xf880>
   21e04:	ldrsb	r3, [fp, #-101]	; 0xffffff9b
   21e08:	mov	r1, r3
   21e0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21e10:	bl	12a40 <_start@@Base+0x330>
   21e14:	sub	r3, fp, #32
   21e18:	ldr	r2, [fp, #-120]	; 0xffffff88
   21e1c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21e20:	ldr	r0, [fp, #-112]	; 0xffffff90
   21e24:	bl	13c50 <_start@@Base+0x1540>
   21e28:	str	r0, [fp, #-116]	; 0xffffff8c
   21e2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21e30:	cmp	r3, #0
   21e34:	bne	21d5c <_start@@Base+0xf64c>
   21e38:	ldr	r3, [fp, #-112]	; 0xffffff90
   21e3c:	ldr	r3, [r3]
   21e40:	mov	r0, r3
   21e44:	bl	29ba4 <flatcc_builder_end_vector@@Base>
   21e48:	str	r0, [fp, #-24]	; 0xffffffe8
   21e4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21e50:	cmp	r3, #0
   21e54:	beq	21fa4 <_start@@Base+0xf894>
   21e58:	ldr	r3, [fp, #-112]	; 0xffffff90
   21e5c:	ldr	r3, [r3]
   21e60:	mov	r1, #10
   21e64:	mov	r0, r3
   21e68:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   21e6c:	str	r0, [fp, #-28]	; 0xffffffe4
   21e70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21e74:	cmp	r3, #0
   21e78:	beq	21fa4 <_start@@Base+0xf894>
   21e7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21e80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21e84:	str	r2, [r3]
   21e88:	b	21eb8 <_start@@Base+0xf7a8>
   21e8c:	ldr	r2, [fp, #-120]	; 0xffffff88
   21e90:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21e94:	ldr	r0, [fp, #-112]	; 0xffffff90
   21e98:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   21e9c:	str	r0, [fp, #-116]	; 0xffffff8c
   21ea0:	b	21eb8 <_start@@Base+0xf7a8>
   21ea4:	ldr	r2, [fp, #-120]	; 0xffffff88
   21ea8:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21eac:	ldr	r0, [fp, #-112]	; 0xffffff90
   21eb0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   21eb4:	str	r0, [fp, #-116]	; 0xffffff8c
   21eb8:	sub	r3, fp, #32
   21ebc:	ldr	r2, [fp, #-120]	; 0xffffff88
   21ec0:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21ec4:	ldr	r0, [fp, #-112]	; 0xffffff90
   21ec8:	bl	13a00 <_start@@Base+0x12f0>
   21ecc:	str	r0, [fp, #-116]	; 0xffffff8c
   21ed0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21ed4:	cmp	r3, #0
   21ed8:	bne	20b80 <_start@@Base+0xe470>
   21edc:	ldr	r3, [fp, #-112]	; 0xffffff90
   21ee0:	ldr	r3, [r3, #24]
   21ee4:	cmp	r3, #0
   21ee8:	bne	21f98 <_start@@Base+0xf888>
   21eec:	ldr	r3, [fp, #-112]	; 0xffffff90
   21ef0:	ldr	r3, [r3]
   21ef4:	mov	r0, r3
   21ef8:	bl	29748 <flatcc_builder_end_table@@Base>
   21efc:	mov	r2, r0
   21f00:	ldr	r3, [fp, #-124]	; 0xffffff84
   21f04:	str	r2, [r3]
   21f08:	ldr	r3, [fp, #-124]	; 0xffffff84
   21f0c:	ldr	r3, [r3]
   21f10:	cmp	r3, #0
   21f14:	beq	21fa0 <_start@@Base+0xf890>
   21f18:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21f1c:	b	21fbc <_start@@Base+0xf8ac>
   21f20:	nop			; (mov r0, r0)
   21f24:	b	21fa4 <_start@@Base+0xf894>
   21f28:	nop			; (mov r0, r0)
   21f2c:	b	21fa4 <_start@@Base+0xf894>
   21f30:	nop			; (mov r0, r0)
   21f34:	b	21fa4 <_start@@Base+0xf894>
   21f38:	nop			; (mov r0, r0)
   21f3c:	b	21fa4 <_start@@Base+0xf894>
   21f40:	nop			; (mov r0, r0)
   21f44:	b	21fa4 <_start@@Base+0xf894>
   21f48:	nop			; (mov r0, r0)
   21f4c:	b	21fa4 <_start@@Base+0xf894>
   21f50:	nop			; (mov r0, r0)
   21f54:	b	21fa4 <_start@@Base+0xf894>
   21f58:	nop			; (mov r0, r0)
   21f5c:	b	21fa4 <_start@@Base+0xf894>
   21f60:	nop			; (mov r0, r0)
   21f64:	b	21fa4 <_start@@Base+0xf894>
   21f68:	nop			; (mov r0, r0)
   21f6c:	b	21fa4 <_start@@Base+0xf894>
   21f70:	nop			; (mov r0, r0)
   21f74:	b	21fa4 <_start@@Base+0xf894>
   21f78:	nop			; (mov r0, r0)
   21f7c:	b	21fa4 <_start@@Base+0xf894>
   21f80:	nop			; (mov r0, r0)
   21f84:	b	21fa4 <_start@@Base+0xf894>
   21f88:	nop			; (mov r0, r0)
   21f8c:	b	21fa4 <_start@@Base+0xf894>
   21f90:	nop			; (mov r0, r0)
   21f94:	b	21fa4 <_start@@Base+0xf894>
   21f98:	nop			; (mov r0, r0)
   21f9c:	b	21fa4 <_start@@Base+0xf894>
   21fa0:	nop			; (mov r0, r0)
   21fa4:	mov	r3, #33	; 0x21
   21fa8:	ldr	r2, [fp, #-120]	; 0xffffff88
   21fac:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21fb0:	ldr	r0, [fp, #-112]	; 0xffffff90
   21fb4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   21fb8:	mov	r3, r0
   21fbc:	mov	r0, r3
   21fc0:	sub	sp, fp, #4
   21fc4:	pop	{fp, pc}
   21fc8:	push	{fp, lr}
   21fcc:	add	fp, sp, #4
   21fd0:	sub	sp, sp, #48	; 0x30
   21fd4:	str	r0, [fp, #-32]	; 0xffffffe0
   21fd8:	str	r1, [fp, #-36]	; 0xffffffdc
   21fdc:	str	r2, [fp, #-40]	; 0xffffffd8
   21fe0:	str	r3, [fp, #-44]	; 0xffffffd4
   21fe4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21fe8:	mov	r2, #0
   21fec:	str	r2, [r3]
   21ff0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21ff4:	ldr	r3, [r3]
   21ff8:	mov	r1, #1
   21ffc:	mov	r0, r3
   22000:	bl	28be4 <flatcc_builder_start_table@@Base>
   22004:	mov	r3, r0
   22008:	cmp	r3, #0
   2200c:	bne	222b4 <_start@@Base+0xfba4>
   22010:	sub	r3, fp, #24
   22014:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22018:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2201c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22020:	bl	13918 <_start@@Base+0x1208>
   22024:	str	r0, [fp, #-36]	; 0xffffffdc
   22028:	b	22264 <_start@@Base+0xfb54>
   2202c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22030:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22034:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22038:	bl	13508 <_start@@Base+0xdf8>
   2203c:	str	r0, [fp, #-36]	; 0xffffffdc
   22040:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22044:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22048:	bl	137ec <_start@@Base+0x10dc>
   2204c:	strd	r0, [fp, #-12]
   22050:	ldrd	r2, [fp, #-12]
   22054:	add	r1, pc, #668	; 0x29c
   22058:	ldrd	r0, [r1]
   2205c:	cmp	r3, r1
   22060:	cmpeq	r2, r0
   22064:	bne	22238 <_start@@Base+0xfb28>
   22068:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2206c:	add	r3, r3, #8
   22070:	str	r3, [fp, #-36]	; 0xffffffdc
   22074:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22078:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2207c:	bl	137ec <_start@@Base+0x10dc>
   22080:	strd	r0, [fp, #-12]
   22084:	ldrd	r2, [fp, #-12]
   22088:	add	r1, pc, #624	; 0x270
   2208c:	ldrd	r0, [r1]
   22090:	cmp	r3, r1
   22094:	cmpeq	r2, r0
   22098:	bne	22220 <_start@@Base+0xfb10>
   2209c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   220a0:	add	r3, r3, #8
   220a4:	str	r3, [fp, #-36]	; 0xffffffdc
   220a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   220ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   220b0:	bl	137ec <_start@@Base+0x10dc>
   220b4:	strd	r0, [fp, #-12]
   220b8:	ldrd	r2, [fp, #-12]
   220bc:	mov	r0, #0
   220c0:	mvn	r1, #255	; 0xff
   220c4:	and	r2, r2, r0
   220c8:	and	r3, r3, r1
   220cc:	add	r1, pc, #564	; 0x234
   220d0:	ldrd	r0, [r1]
   220d4:	cmp	r3, r1
   220d8:	cmpeq	r2, r0
   220dc:	bne	22208 <_start@@Base+0xfaf8>
   220e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   220e4:	str	r3, [fp, #-16]
   220e8:	mov	r3, #3
   220ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   220f0:	ldr	r1, [fp, #-16]
   220f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   220f8:	bl	13db8 <_start@@Base+0x16a8>
   220fc:	str	r0, [fp, #-36]	; 0xffffffdc
   22100:	ldr	r2, [fp, #-16]
   22104:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22108:	cmp	r2, r3
   2210c:	beq	221f0 <_start@@Base+0xfae0>
   22110:	mov	r3, #0
   22114:	str	r3, [fp, #-28]	; 0xffffffe4
   22118:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2211c:	str	r3, [fp, #-16]
   22120:	sub	r3, fp, #28
   22124:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22128:	ldr	r1, [fp, #-16]
   2212c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22130:	bl	149f8 <_start@@Base+0x22e8>
   22134:	str	r0, [fp, #-36]	; 0xffffffdc
   22138:	ldr	r2, [fp, #-16]
   2213c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22140:	cmp	r2, r3
   22144:	bne	22194 <_start@@Base+0xfa84>
   22148:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2214c:	str	r3, [fp, #-16]
   22150:	sub	r3, fp, #28
   22154:	str	r3, [sp]
   22158:	ldr	r3, [pc, #432]	; 22310 <_start@@Base+0xfc00>
   2215c:	add	r3, pc, r3
   22160:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22164:	ldr	r1, [fp, #-16]
   22168:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2216c:	bl	15698 <_start@@Base+0x2f88>
   22170:	str	r0, [fp, #-36]	; 0xffffffdc
   22174:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22178:	ldr	r3, [fp, #-16]
   2217c:	cmp	r2, r3
   22180:	beq	222d0 <_start@@Base+0xfbc0>
   22184:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22188:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2218c:	cmp	r2, r3
   22190:	beq	222d0 <_start@@Base+0xfbc0>
   22194:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22198:	cmp	r3, #0
   2219c:	bne	221b4 <_start@@Base+0xfaa4>
   221a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   221a4:	ldr	r3, [r3, #8]
   221a8:	and	r3, r3, #2
   221ac:	cmp	r3, #0
   221b0:	beq	2224c <_start@@Base+0xfb3c>
   221b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   221b8:	ldr	r0, [r3]
   221bc:	mov	r3, #4
   221c0:	mov	r2, #4
   221c4:	mov	r1, #0
   221c8:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   221cc:	str	r0, [fp, #-20]	; 0xffffffec
   221d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   221d4:	cmp	r3, #0
   221d8:	beq	222bc <_start@@Base+0xfbac>
   221dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   221e0:	mov	r1, r3
   221e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   221e8:	bl	12b64 <_start@@Base+0x454>
   221ec:	b	2224c <_start@@Base+0xfb3c>
   221f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   221f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   221f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   221fc:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   22200:	str	r0, [fp, #-36]	; 0xffffffdc
   22204:	b	2224c <_start@@Base+0xfb3c>
   22208:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2220c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22210:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22214:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   22218:	str	r0, [fp, #-36]	; 0xffffffdc
   2221c:	b	2224c <_start@@Base+0xfb3c>
   22220:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22224:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22228:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2222c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   22230:	str	r0, [fp, #-36]	; 0xffffffdc
   22234:	b	2224c <_start@@Base+0xfb3c>
   22238:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2223c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22240:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22244:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   22248:	str	r0, [fp, #-36]	; 0xffffffdc
   2224c:	sub	r3, fp, #24
   22250:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22254:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22258:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2225c:	bl	13a00 <_start@@Base+0x12f0>
   22260:	str	r0, [fp, #-36]	; 0xffffffdc
   22264:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22268:	cmp	r3, #0
   2226c:	bne	2202c <_start@@Base+0xf91c>
   22270:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22274:	ldr	r3, [r3, #24]
   22278:	cmp	r3, #0
   2227c:	bne	222c4 <_start@@Base+0xfbb4>
   22280:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22284:	ldr	r3, [r3]
   22288:	mov	r0, r3
   2228c:	bl	29748 <flatcc_builder_end_table@@Base>
   22290:	mov	r2, r0
   22294:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22298:	str	r2, [r3]
   2229c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   222a0:	ldr	r3, [r3]
   222a4:	cmp	r3, #0
   222a8:	beq	222cc <_start@@Base+0xfbbc>
   222ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   222b0:	b	222e8 <_start@@Base+0xfbd8>
   222b4:	nop			; (mov r0, r0)
   222b8:	b	222d0 <_start@@Base+0xfbc0>
   222bc:	nop			; (mov r0, r0)
   222c0:	b	222d0 <_start@@Base+0xfbc0>
   222c4:	nop			; (mov r0, r0)
   222c8:	b	222d0 <_start@@Base+0xfbc0>
   222cc:	nop			; (mov r0, r0)
   222d0:	mov	r3, #33	; 0x21
   222d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   222d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   222dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   222e0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   222e4:	mov	r3, r0
   222e8:	mov	r0, r3
   222ec:	sub	sp, fp, #4
   222f0:	pop	{fp, pc}
   222f4:	nop			; (mov r0, r0)
   222f8:	ldrbvs	r6, [pc], #-372	; 22300 <_start@@Base+0xfbf0>
   222fc:	cmnvc	r7, #456	; 0x1c8
   22300:	svcpl	0x0064616d
   22304:	strbtvc	r6, [r1], #-875	; 0xfffffc95
   22308:	andeq	r0, r0, r0
   2230c:	cmnvs	r7, r0, lsl #10
   22310:	andeq	r6, r2, r0, ror r2
   22314:	push	{fp, lr}
   22318:	add	fp, sp, #4
   2231c:	sub	sp, sp, #48	; 0x30
   22320:	str	r0, [fp, #-32]	; 0xffffffe0
   22324:	str	r1, [fp, #-36]	; 0xffffffdc
   22328:	str	r2, [fp, #-40]	; 0xffffffd8
   2232c:	str	r3, [fp, #-44]	; 0xffffffd4
   22330:	sub	r3, fp, #24
   22334:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22338:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2233c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22340:	bl	13918 <_start@@Base+0x1208>
   22344:	str	r0, [fp, #-36]	; 0xffffffdc
   22348:	b	224f8 <_start@@Base+0xfde8>
   2234c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22350:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22354:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22358:	bl	13508 <_start@@Base+0xdf8>
   2235c:	str	r0, [fp, #-36]	; 0xffffffdc
   22360:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22364:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22368:	bl	137ec <_start@@Base+0x10dc>
   2236c:	strd	r0, [fp, #-12]
   22370:	ldrd	r2, [fp, #-12]
   22374:	add	r1, pc, #436	; 0x1b4
   22378:	ldrd	r0, [r1]
   2237c:	cmp	r3, r1
   22380:	cmpeq	r2, r0
   22384:	bne	224cc <_start@@Base+0xfdbc>
   22388:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2238c:	add	r3, r3, #8
   22390:	str	r3, [fp, #-36]	; 0xffffffdc
   22394:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22398:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2239c:	bl	137ec <_start@@Base+0x10dc>
   223a0:	strd	r0, [fp, #-12]
   223a4:	ldrd	r2, [fp, #-12]
   223a8:	mov	r0, #0
   223ac:	mvn	r1, #255	; 0xff
   223b0:	and	r2, r2, r0
   223b4:	and	r3, r3, r1
   223b8:	add	r1, pc, #376	; 0x178
   223bc:	ldrd	r0, [r1]
   223c0:	cmp	r3, r1
   223c4:	cmpeq	r2, r0
   223c8:	bne	224b4 <_start@@Base+0xfda4>
   223cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   223d0:	str	r3, [fp, #-16]
   223d4:	mov	r3, #3
   223d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   223dc:	ldr	r1, [fp, #-16]
   223e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   223e4:	bl	13db8 <_start@@Base+0x16a8>
   223e8:	str	r0, [fp, #-36]	; 0xffffffdc
   223ec:	ldr	r2, [fp, #-16]
   223f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   223f4:	cmp	r2, r3
   223f8:	beq	2249c <_start@@Base+0xfd8c>
   223fc:	mov	r3, #0
   22400:	strh	r3, [fp, #-26]	; 0xffffffe6
   22404:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22408:	str	r3, [fp, #-20]	; 0xffffffec
   2240c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22410:	str	r3, [fp, #-16]
   22414:	sub	r3, fp, #26
   22418:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2241c:	ldr	r1, [fp, #-16]
   22420:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22424:	bl	14784 <_start@@Base+0x2074>
   22428:	str	r0, [fp, #-36]	; 0xffffffdc
   2242c:	ldr	r2, [fp, #-16]
   22430:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22434:	cmp	r2, r3
   22438:	bne	22488 <_start@@Base+0xfd78>
   2243c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22440:	str	r3, [fp, #-16]
   22444:	sub	r3, fp, #26
   22448:	str	r3, [sp]
   2244c:	ldr	r3, [pc, #236]	; 22540 <_start@@Base+0xfe30>
   22450:	add	r3, pc, r3
   22454:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22458:	ldr	r1, [fp, #-16]
   2245c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22460:	bl	15120 <_start@@Base+0x2a10>
   22464:	str	r0, [fp, #-36]	; 0xffffffdc
   22468:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2246c:	ldr	r3, [fp, #-16]
   22470:	cmp	r2, r3
   22474:	beq	2250c <_start@@Base+0xfdfc>
   22478:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2247c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22480:	cmp	r2, r3
   22484:	beq	2250c <_start@@Base+0xfdfc>
   22488:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   2248c:	mov	r1, r3
   22490:	ldr	r0, [fp, #-20]	; 0xffffffec
   22494:	bl	128c8 <_start@@Base+0x1b8>
   22498:	b	224e0 <_start@@Base+0xfdd0>
   2249c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   224a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   224a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   224a8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   224ac:	str	r0, [fp, #-36]	; 0xffffffdc
   224b0:	b	224e0 <_start@@Base+0xfdd0>
   224b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   224b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   224bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   224c0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   224c4:	str	r0, [fp, #-36]	; 0xffffffdc
   224c8:	b	224e0 <_start@@Base+0xfdd0>
   224cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   224d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   224d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   224d8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   224dc:	str	r0, [fp, #-36]	; 0xffffffdc
   224e0:	sub	r3, fp, #24
   224e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   224e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   224ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   224f0:	bl	13a00 <_start@@Base+0x12f0>
   224f4:	str	r0, [fp, #-36]	; 0xffffffdc
   224f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   224fc:	cmp	r3, #0
   22500:	bne	2234c <_start@@Base+0xfc3c>
   22504:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22508:	b	22524 <_start@@Base+0xfe14>
   2250c:	mov	r3, #33	; 0x21
   22510:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22514:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22518:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2251c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   22520:	mov	r3, r0
   22524:	mov	r0, r3
   22528:	sub	sp, fp, #4
   2252c:	pop	{fp, pc}
   22530:	svcpl	0x006c656e
   22534:	stmdavs	r1!, {r1, r4, r5, r6, r8, fp, sp, lr}^
   22538:	andeq	r0, r0, r0
   2253c:	ldrbvs	r6, [r4, -r0, lsl #16]!
   22540:	andeq	r5, r2, r8, lsl #31
   22544:	push	{fp, lr}
   22548:	add	fp, sp, #4
   2254c:	sub	sp, sp, #24
   22550:	str	r0, [fp, #-16]
   22554:	str	r1, [fp, #-20]	; 0xffffffec
   22558:	str	r2, [fp, #-24]	; 0xffffffe8
   2255c:	str	r3, [fp, #-28]	; 0xffffffe4
   22560:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22564:	mov	r2, #0
   22568:	str	r2, [r3]
   2256c:	ldr	r3, [fp, #-16]
   22570:	ldr	r3, [r3]
   22574:	mov	r2, #2
   22578:	mov	r1, #2
   2257c:	mov	r0, r3
   22580:	bl	27e50 <flatcc_builder_start_struct@@Base>
   22584:	str	r0, [fp, #-8]
   22588:	ldr	r3, [fp, #-8]
   2258c:	cmp	r3, #0
   22590:	beq	225f0 <_start@@Base+0xfee0>
   22594:	ldr	r3, [fp, #-8]
   22598:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2259c:	ldr	r1, [fp, #-20]	; 0xffffffec
   225a0:	ldr	r0, [fp, #-16]
   225a4:	bl	22314 <_start@@Base+0xfc04>
   225a8:	str	r0, [fp, #-20]	; 0xffffffec
   225ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   225b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   225b4:	cmp	r2, r3
   225b8:	beq	225f4 <_start@@Base+0xfee4>
   225bc:	ldr	r3, [fp, #-16]
   225c0:	ldr	r3, [r3]
   225c4:	mov	r0, r3
   225c8:	bl	27ef0 <flatcc_builder_end_struct@@Base>
   225cc:	mov	r2, r0
   225d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   225d4:	str	r2, [r3]
   225d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   225dc:	ldr	r3, [r3]
   225e0:	cmp	r3, #0
   225e4:	beq	225f4 <_start@@Base+0xfee4>
   225e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   225ec:	b	2260c <_start@@Base+0xfefc>
   225f0:	nop			; (mov r0, r0)
   225f4:	mov	r3, #33	; 0x21
   225f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   225fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   22600:	ldr	r0, [fp, #-16]
   22604:	bl	3198c <flatcc_json_parser_set_error@@Base>
   22608:	mov	r3, r0
   2260c:	mov	r0, r3
   22610:	sub	sp, fp, #4
   22614:	pop	{fp, pc}
   22618:	push	{fp, lr}
   2261c:	add	fp, sp, #4
   22620:	sub	sp, sp, #48	; 0x30
   22624:	str	r0, [fp, #-32]	; 0xffffffe0
   22628:	str	r1, [fp, #-36]	; 0xffffffdc
   2262c:	str	r2, [fp, #-40]	; 0xffffffd8
   22630:	str	r3, [fp, #-44]	; 0xffffffd4
   22634:	sub	r3, fp, #24
   22638:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2263c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22640:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22644:	bl	13918 <_start@@Base+0x1208>
   22648:	str	r0, [fp, #-36]	; 0xffffffdc
   2264c:	b	227fc <_start@@Base+0x100ec>
   22650:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22654:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22658:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2265c:	bl	13508 <_start@@Base+0xdf8>
   22660:	str	r0, [fp, #-36]	; 0xffffffdc
   22664:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22668:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2266c:	bl	137ec <_start@@Base+0x10dc>
   22670:	strd	r0, [fp, #-12]
   22674:	ldrd	r2, [fp, #-12]
   22678:	add	r1, pc, #440	; 0x1b8
   2267c:	ldrd	r0, [r1]
   22680:	cmp	r3, r1
   22684:	cmpeq	r2, r0
   22688:	bne	227d0 <_start@@Base+0x100c0>
   2268c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22690:	add	r3, r3, #8
   22694:	str	r3, [fp, #-36]	; 0xffffffdc
   22698:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2269c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   226a0:	bl	137ec <_start@@Base+0x10dc>
   226a4:	strd	r0, [fp, #-12]
   226a8:	ldrd	r2, [fp, #-12]
   226ac:	mov	r0, #0
   226b0:	ldr	r1, [pc, #392]	; 22840 <_start@@Base+0x10130>
   226b4:	and	r2, r2, r0
   226b8:	and	r3, r3, r1
   226bc:	mov	r0, #0
   226c0:	ldr	r1, [pc, #380]	; 22844 <_start@@Base+0x10134>
   226c4:	cmp	r3, r1
   226c8:	cmpeq	r2, r0
   226cc:	bne	227b8 <_start@@Base+0x100a8>
   226d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   226d4:	str	r3, [fp, #-16]
   226d8:	mov	r3, #2
   226dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   226e0:	ldr	r1, [fp, #-16]
   226e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   226e8:	bl	13db8 <_start@@Base+0x16a8>
   226ec:	str	r0, [fp, #-36]	; 0xffffffdc
   226f0:	ldr	r2, [fp, #-16]
   226f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   226f8:	cmp	r2, r3
   226fc:	beq	227a0 <_start@@Base+0x10090>
   22700:	mov	r3, #0
   22704:	str	r3, [fp, #-28]	; 0xffffffe4
   22708:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2270c:	str	r3, [fp, #-20]	; 0xffffffec
   22710:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22714:	str	r3, [fp, #-16]
   22718:	sub	r3, fp, #28
   2271c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22720:	ldr	r1, [fp, #-16]
   22724:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22728:	bl	149f8 <_start@@Base+0x22e8>
   2272c:	str	r0, [fp, #-36]	; 0xffffffdc
   22730:	ldr	r2, [fp, #-16]
   22734:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22738:	cmp	r2, r3
   2273c:	bne	2278c <_start@@Base+0x1007c>
   22740:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22744:	str	r3, [fp, #-16]
   22748:	sub	r3, fp, #28
   2274c:	str	r3, [sp]
   22750:	ldr	r3, [pc, #240]	; 22848 <_start@@Base+0x10138>
   22754:	add	r3, pc, r3
   22758:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2275c:	ldr	r1, [fp, #-16]
   22760:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22764:	bl	15698 <_start@@Base+0x2f88>
   22768:	str	r0, [fp, #-36]	; 0xffffffdc
   2276c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22770:	ldr	r3, [fp, #-16]
   22774:	cmp	r2, r3
   22778:	beq	22810 <_start@@Base+0x10100>
   2277c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22780:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22784:	cmp	r2, r3
   22788:	beq	22810 <_start@@Base+0x10100>
   2278c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22790:	mov	r1, r3
   22794:	ldr	r0, [fp, #-20]	; 0xffffffec
   22798:	bl	12b64 <_start@@Base+0x454>
   2279c:	b	227e4 <_start@@Base+0x100d4>
   227a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   227a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   227a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   227ac:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   227b0:	str	r0, [fp, #-36]	; 0xffffffdc
   227b4:	b	227e4 <_start@@Base+0x100d4>
   227b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   227bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   227c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   227c4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   227c8:	str	r0, [fp, #-36]	; 0xffffffdc
   227cc:	b	227e4 <_start@@Base+0x100d4>
   227d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   227d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   227d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   227dc:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   227e0:	str	r0, [fp, #-36]	; 0xffffffdc
   227e4:	sub	r3, fp, #24
   227e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   227ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   227f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   227f4:	bl	13a00 <_start@@Base+0x12f0>
   227f8:	str	r0, [fp, #-36]	; 0xffffffdc
   227fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22800:	cmp	r3, #0
   22804:	bne	22650 <_start@@Base+0xff40>
   22808:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2280c:	b	22828 <_start@@Base+0x10118>
   22810:	mov	r3, #33	; 0x21
   22814:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22818:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2281c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22820:	bl	3198c <flatcc_json_parser_set_error@@Base>
   22824:	mov	r3, r0
   22828:	mov	r0, r3
   2282c:	sub	sp, fp, #4
   22830:	pop	{fp, pc}
   22834:	nop			; (mov r0, r0)
   22838:	cmpvc	pc, #1342177286	; 0x50000006
   2283c:	rsbvs	r6, pc, #428	; 0x1ac
   22840:			; <UNDEFINED> instruction: 0xffff0000
   22844:	cmnvs	r4, r0
   22848:	muleq	r2, r0, ip
   2284c:	push	{fp, lr}
   22850:	add	fp, sp, #4
   22854:	sub	sp, sp, #24
   22858:	str	r0, [fp, #-16]
   2285c:	str	r1, [fp, #-20]	; 0xffffffec
   22860:	str	r2, [fp, #-24]	; 0xffffffe8
   22864:	str	r3, [fp, #-28]	; 0xffffffe4
   22868:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2286c:	mov	r2, #0
   22870:	str	r2, [r3]
   22874:	ldr	r3, [fp, #-16]
   22878:	ldr	r3, [r3]
   2287c:	mov	r2, #4
   22880:	mov	r1, #4
   22884:	mov	r0, r3
   22888:	bl	27e50 <flatcc_builder_start_struct@@Base>
   2288c:	str	r0, [fp, #-8]
   22890:	ldr	r3, [fp, #-8]
   22894:	cmp	r3, #0
   22898:	beq	228f8 <_start@@Base+0x101e8>
   2289c:	ldr	r3, [fp, #-8]
   228a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   228a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   228a8:	ldr	r0, [fp, #-16]
   228ac:	bl	22618 <_start@@Base+0xff08>
   228b0:	str	r0, [fp, #-20]	; 0xffffffec
   228b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   228b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   228bc:	cmp	r2, r3
   228c0:	beq	228fc <_start@@Base+0x101ec>
   228c4:	ldr	r3, [fp, #-16]
   228c8:	ldr	r3, [r3]
   228cc:	mov	r0, r3
   228d0:	bl	27ef0 <flatcc_builder_end_struct@@Base>
   228d4:	mov	r2, r0
   228d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   228dc:	str	r2, [r3]
   228e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   228e4:	ldr	r3, [r3]
   228e8:	cmp	r3, #0
   228ec:	beq	228fc <_start@@Base+0x101ec>
   228f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   228f4:	b	22914 <_start@@Base+0x10204>
   228f8:	nop			; (mov r0, r0)
   228fc:	mov	r3, #33	; 0x21
   22900:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22904:	ldr	r1, [fp, #-20]	; 0xffffffec
   22908:	ldr	r0, [fp, #-16]
   2290c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   22910:	mov	r3, r0
   22914:	mov	r0, r3
   22918:	sub	sp, fp, #4
   2291c:	pop	{fp, pc}
   22920:	push	{fp, lr}
   22924:	add	fp, sp, #4
   22928:	sub	sp, sp, #16
   2292c:	str	r0, [fp, #-8]
   22930:	str	r1, [fp, #-12]
   22934:	str	r2, [fp, #-16]
   22938:	strb	r3, [fp, #-17]	; 0xffffffef
   2293c:	ldr	r3, [fp, #4]
   22940:	mov	r2, #0
   22944:	str	r2, [r3]
   22948:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2294c:	cmp	r3, #9
   22950:	beq	229e4 <_start@@Base+0x102d4>
   22954:	cmp	r3, #9
   22958:	bgt	22978 <_start@@Base+0x10268>
   2295c:	cmp	r3, #2
   22960:	beq	229ac <_start@@Base+0x1029c>
   22964:	cmp	r3, #8
   22968:	beq	229c8 <_start@@Base+0x102b8>
   2296c:	cmp	r3, #0
   22970:	beq	22994 <_start@@Base+0x10284>
   22974:	b	22a54 <_start@@Base+0x10344>
   22978:	cmp	r3, #11
   2297c:	beq	22a1c <_start@@Base+0x1030c>
   22980:	cmp	r3, #11
   22984:	blt	22a00 <_start@@Base+0x102f0>
   22988:	cmp	r3, #255	; 0xff
   2298c:	beq	22a38 <_start@@Base+0x10328>
   22990:	b	22a54 <_start@@Base+0x10344>
   22994:	ldr	r2, [fp, #-16]
   22998:	ldr	r1, [fp, #-12]
   2299c:	ldr	r0, [fp, #-8]
   229a0:	bl	1455c <_start@@Base+0x1e4c>
   229a4:	mov	r3, r0
   229a8:	b	22ae4 <_start@@Base+0x103d4>
   229ac:	ldr	r3, [fp, #4]
   229b0:	ldr	r2, [fp, #-16]
   229b4:	ldr	r1, [fp, #-12]
   229b8:	ldr	r0, [fp, #-8]
   229bc:	bl	21fc8 <_start@@Base+0xf8b8>
   229c0:	str	r0, [fp, #-12]
   229c4:	b	22a9c <_start@@Base+0x1038c>
   229c8:	ldr	r3, [fp, #4]
   229cc:	ldr	r2, [fp, #-16]
   229d0:	ldr	r1, [fp, #-12]
   229d4:	ldr	r0, [fp, #-8]
   229d8:	bl	22544 <_start@@Base+0xfe34>
   229dc:	str	r0, [fp, #-12]
   229e0:	b	22a9c <_start@@Base+0x1038c>
   229e4:	ldr	r3, [fp, #4]
   229e8:	ldr	r2, [fp, #-16]
   229ec:	ldr	r1, [fp, #-12]
   229f0:	ldr	r0, [fp, #-8]
   229f4:	bl	2284c <_start@@Base+0x1013c>
   229f8:	str	r0, [fp, #-12]
   229fc:	b	22a9c <_start@@Base+0x1038c>
   22a00:	ldr	r3, [fp, #4]
   22a04:	ldr	r2, [fp, #-16]
   22a08:	ldr	r1, [fp, #-12]
   22a0c:	ldr	r0, [fp, #-8]
   22a10:	bl	2284c <_start@@Base+0x1013c>
   22a14:	str	r0, [fp, #-12]
   22a18:	b	22a9c <_start@@Base+0x1038c>
   22a1c:	ldr	r3, [fp, #4]
   22a20:	ldr	r2, [fp, #-16]
   22a24:	ldr	r1, [fp, #-12]
   22a28:	ldr	r0, [fp, #-8]
   22a2c:	bl	33a78 <flatcc_json_parser_build_string@@Base>
   22a30:	str	r0, [fp, #-12]
   22a34:	b	22a9c <_start@@Base+0x1038c>
   22a38:	ldr	r3, [fp, #4]
   22a3c:	ldr	r2, [fp, #-16]
   22a40:	ldr	r1, [fp, #-12]
   22a44:	ldr	r0, [fp, #-8]
   22a48:	bl	33a78 <flatcc_json_parser_build_string@@Base>
   22a4c:	str	r0, [fp, #-12]
   22a50:	b	22a9c <_start@@Base+0x1038c>
   22a54:	ldr	r3, [fp, #-8]
   22a58:	ldr	r3, [r3, #8]
   22a5c:	and	r3, r3, #1
   22a60:	cmp	r3, #0
   22a64:	bne	22a84 <_start@@Base+0x10374>
   22a68:	mov	r3, #15
   22a6c:	ldr	r2, [fp, #-16]
   22a70:	ldr	r1, [fp, #-12]
   22a74:	ldr	r0, [fp, #-8]
   22a78:	bl	3198c <flatcc_json_parser_set_error@@Base>
   22a7c:	mov	r3, r0
   22a80:	b	22ae4 <_start@@Base+0x103d4>
   22a84:	ldr	r2, [fp, #-16]
   22a88:	ldr	r1, [fp, #-12]
   22a8c:	ldr	r0, [fp, #-8]
   22a90:	bl	331a0 <flatcc_json_parser_generic_json@@Base>
   22a94:	mov	r3, r0
   22a98:	b	22ae4 <_start@@Base+0x103d4>
   22a9c:	ldr	r3, [fp, #-8]
   22aa0:	ldr	r3, [r3, #24]
   22aa4:	cmp	r3, #0
   22aa8:	beq	22ab4 <_start@@Base+0x103a4>
   22aac:	ldr	r3, [fp, #-12]
   22ab0:	b	22ae4 <_start@@Base+0x103d4>
   22ab4:	ldr	r3, [fp, #4]
   22ab8:	ldr	r3, [r3]
   22abc:	cmp	r3, #0
   22ac0:	bne	22ae0 <_start@@Base+0x103d0>
   22ac4:	mov	r3, #33	; 0x21
   22ac8:	ldr	r2, [fp, #-16]
   22acc:	ldr	r1, [fp, #-12]
   22ad0:	ldr	r0, [fp, #-8]
   22ad4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   22ad8:	mov	r3, r0
   22adc:	b	22ae4 <_start@@Base+0x103d4>
   22ae0:	ldr	r3, [fp, #-12]
   22ae4:	mov	r0, r3
   22ae8:	sub	sp, fp, #4
   22aec:	pop	{fp, pc}
   22af0:	push	{fp}		; (str fp, [sp, #-4]!)
   22af4:	add	fp, sp, #0
   22af8:	sub	sp, sp, #12
   22afc:	mov	r3, r0
   22b00:	strb	r3, [fp, #-5]
   22b04:	ldrb	r3, [fp, #-5]
   22b08:	cmp	r3, #9
   22b0c:	beq	22b68 <_start@@Base+0x10458>
   22b10:	cmp	r3, #9
   22b14:	bgt	22b34 <_start@@Base+0x10424>
   22b18:	cmp	r3, #2
   22b1c:	beq	22b58 <_start@@Base+0x10448>
   22b20:	cmp	r3, #8
   22b24:	beq	22b60 <_start@@Base+0x10450>
   22b28:	cmp	r3, #0
   22b2c:	beq	22b50 <_start@@Base+0x10440>
   22b30:	b	22b88 <_start@@Base+0x10478>
   22b34:	cmp	r3, #11
   22b38:	beq	22b78 <_start@@Base+0x10468>
   22b3c:	cmp	r3, #11
   22b40:	blt	22b70 <_start@@Base+0x10460>
   22b44:	cmp	r3, #255	; 0xff
   22b48:	beq	22b80 <_start@@Base+0x10470>
   22b4c:	b	22b88 <_start@@Base+0x10478>
   22b50:	mov	r3, #1
   22b54:	b	22b8c <_start@@Base+0x1047c>
   22b58:	mov	r3, #1
   22b5c:	b	22b8c <_start@@Base+0x1047c>
   22b60:	mov	r3, #1
   22b64:	b	22b8c <_start@@Base+0x1047c>
   22b68:	mov	r3, #1
   22b6c:	b	22b8c <_start@@Base+0x1047c>
   22b70:	mov	r3, #1
   22b74:	b	22b8c <_start@@Base+0x1047c>
   22b78:	mov	r3, #1
   22b7c:	b	22b8c <_start@@Base+0x1047c>
   22b80:	mov	r3, #1
   22b84:	b	22b8c <_start@@Base+0x1047c>
   22b88:	mov	r3, #0
   22b8c:	mov	r0, r3
   22b90:	add	sp, fp, #0
   22b94:	pop	{fp}		; (ldr fp, [sp], #4)
   22b98:	bx	lr
   22b9c:	push	{fp, lr}
   22ba0:	add	fp, sp, #4
   22ba4:	sub	sp, sp, #48	; 0x30
   22ba8:	str	r0, [fp, #-32]	; 0xffffffe0
   22bac:	str	r1, [fp, #-36]	; 0xffffffdc
   22bb0:	str	r2, [fp, #-40]	; 0xffffffd8
   22bb4:	str	r3, [fp, #-44]	; 0xffffffd4
   22bb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22bbc:	str	r3, [fp, #-8]
   22bc0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22bc4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22bc8:	bl	137ec <_start@@Base+0x10dc>
   22bcc:	strd	r0, [fp, #-20]	; 0xffffffec
   22bd0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   22bd4:	add	r1, pc, #932	; 0x3a4
   22bd8:	ldrd	r0, [r1]
   22bdc:	cmp	r3, r1
   22be0:	cmpeq	r2, r0
   22be4:	bhi	22da8 <_start@@Base+0x10698>
   22be8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   22bec:	add	r1, pc, #916	; 0x394
   22bf0:	ldrd	r0, [r1]
   22bf4:	cmp	r3, r1
   22bf8:	cmpeq	r2, r0
   22bfc:	bhi	22c90 <_start@@Base+0x10580>
   22c00:	ldrd	r2, [fp, #-20]	; 0xffffffec
   22c04:	mov	r0, #-16777216	; 0xff000000
   22c08:	mvn	r1, #0
   22c0c:	and	r2, r2, r0
   22c10:	and	r3, r3, r1
   22c14:	add	r1, pc, #884	; 0x374
   22c18:	ldrd	r0, [r1]
   22c1c:	cmp	r3, r1
   22c20:	cmpeq	r2, r0
   22c24:	bne	22c88 <_start@@Base+0x10578>
   22c28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22c2c:	str	r3, [fp, #-24]	; 0xffffffe8
   22c30:	ldr	r3, [fp, #8]
   22c34:	str	r3, [sp]
   22c38:	mov	r3, #5
   22c3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22c40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22c48:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   22c4c:	str	r0, [fp, #-36]	; 0xffffffdc
   22c50:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22c54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22c58:	cmp	r2, r3
   22c5c:	beq	22c80 <_start@@Base+0x10570>
   22c60:	ldr	r1, [fp, #4]
   22c64:	mov	r2, #9
   22c68:	mov	r3, #0
   22c6c:	strd	r2, [r1]
   22c70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22c74:	mov	r2, #0
   22c78:	str	r2, [r3]
   22c7c:	b	23054 <_start@@Base+0x10944>
   22c80:	ldr	r3, [fp, #-8]
   22c84:	b	23058 <_start@@Base+0x10948>
   22c88:	ldr	r3, [fp, #-8]
   22c8c:	b	23058 <_start@@Base+0x10948>
   22c90:	ldrd	r2, [fp, #-20]	; 0xffffffec
   22c94:	mov	r0, #-16777216	; 0xff000000
   22c98:	mvn	r1, #0
   22c9c:	and	r2, r2, r0
   22ca0:	and	r3, r3, r1
   22ca4:	add	r1, pc, #748	; 0x2ec
   22ca8:	ldrd	r0, [r1]
   22cac:	cmp	r3, r1
   22cb0:	cmpeq	r2, r0
   22cb4:	bne	22d18 <_start@@Base+0x10608>
   22cb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22cbc:	str	r3, [fp, #-24]	; 0xffffffe8
   22cc0:	ldr	r3, [fp, #8]
   22cc4:	str	r3, [sp]
   22cc8:	mov	r3, #5
   22ccc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22cd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22cd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22cd8:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   22cdc:	str	r0, [fp, #-36]	; 0xffffffdc
   22ce0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22ce4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22ce8:	cmp	r2, r3
   22cec:	beq	22d10 <_start@@Base+0x10600>
   22cf0:	ldr	r1, [fp, #4]
   22cf4:	mov	r2, #2
   22cf8:	mov	r3, #0
   22cfc:	strd	r2, [r1]
   22d00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22d04:	mov	r2, #0
   22d08:	str	r2, [r3]
   22d0c:	b	23054 <_start@@Base+0x10944>
   22d10:	ldr	r3, [fp, #-8]
   22d14:	b	23058 <_start@@Base+0x10948>
   22d18:	ldrd	r2, [fp, #-20]	; 0xffffffec
   22d1c:	mvn	r0, #255	; 0xff
   22d20:	mvn	r1, #0
   22d24:	and	r2, r2, r0
   22d28:	and	r3, r3, r1
   22d2c:	add	r1, pc, #620	; 0x26c
   22d30:	ldrd	r0, [r1]
   22d34:	cmp	r3, r1
   22d38:	cmpeq	r2, r0
   22d3c:	bne	22da0 <_start@@Base+0x10690>
   22d40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22d44:	str	r3, [fp, #-24]	; 0xffffffe8
   22d48:	ldr	r3, [fp, #8]
   22d4c:	str	r3, [sp]
   22d50:	mov	r3, #7
   22d54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22d58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22d5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22d60:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   22d64:	str	r0, [fp, #-36]	; 0xffffffdc
   22d68:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22d6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22d70:	cmp	r2, r3
   22d74:	beq	22d98 <_start@@Base+0x10688>
   22d78:	ldr	r1, [fp, #4]
   22d7c:	mov	r2, #10
   22d80:	mov	r3, #0
   22d84:	strd	r2, [r1]
   22d88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22d8c:	mov	r2, #0
   22d90:	str	r2, [r3]
   22d94:	b	23054 <_start@@Base+0x10944>
   22d98:	ldr	r3, [fp, #-8]
   22d9c:	b	23058 <_start@@Base+0x10948>
   22da0:	ldr	r3, [fp, #-8]
   22da4:	b	23058 <_start@@Base+0x10948>
   22da8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   22dac:	add	r1, pc, #500	; 0x1f4
   22db0:	ldrd	r0, [r1]
   22db4:	cmp	r3, r1
   22db8:	cmpeq	r2, r0
   22dbc:	bhi	22e50 <_start@@Base+0x10740>
   22dc0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   22dc4:	mov	r0, #0
   22dc8:	mvn	r1, #0
   22dcc:	and	r2, r2, r0
   22dd0:	and	r3, r3, r1
   22dd4:	add	r1, pc, #468	; 0x1d4
   22dd8:	ldrd	r0, [r1]
   22ddc:	cmp	r3, r1
   22de0:	cmpeq	r2, r0
   22de4:	bne	22e48 <_start@@Base+0x10738>
   22de8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22dec:	str	r3, [fp, #-24]	; 0xffffffe8
   22df0:	ldr	r3, [fp, #8]
   22df4:	str	r3, [sp]
   22df8:	mov	r3, #4
   22dfc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22e00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22e04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22e08:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   22e0c:	str	r0, [fp, #-36]	; 0xffffffdc
   22e10:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22e14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22e18:	cmp	r2, r3
   22e1c:	beq	22e40 <_start@@Base+0x10730>
   22e20:	ldr	r1, [fp, #4]
   22e24:	mov	r2, #0
   22e28:	mov	r3, #0
   22e2c:	strd	r2, [r1]
   22e30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22e34:	mov	r2, #0
   22e38:	str	r2, [r3]
   22e3c:	b	23054 <_start@@Base+0x10944>
   22e40:	ldr	r3, [fp, #-8]
   22e44:	b	23058 <_start@@Base+0x10948>
   22e48:	ldr	r3, [fp, #-8]
   22e4c:	b	23058 <_start@@Base+0x10948>
   22e50:	ldrd	r2, [fp, #-20]	; 0xffffffec
   22e54:	add	r1, pc, #348	; 0x15c
   22e58:	ldrd	r0, [r1]
   22e5c:	cmp	r3, r1
   22e60:	cmpeq	r2, r0
   22e64:	bhi	22ef8 <_start@@Base+0x107e8>
   22e68:	ldrd	r2, [fp, #-20]	; 0xffffffec
   22e6c:	mov	r0, #-16777216	; 0xff000000
   22e70:	mvn	r1, #0
   22e74:	and	r2, r2, r0
   22e78:	and	r3, r3, r1
   22e7c:	add	r1, pc, #316	; 0x13c
   22e80:	ldrd	r0, [r1]
   22e84:	cmp	r3, r1
   22e88:	cmpeq	r2, r0
   22e8c:	bne	22ef0 <_start@@Base+0x107e0>
   22e90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22e94:	str	r3, [fp, #-24]	; 0xffffffe8
   22e98:	ldr	r3, [fp, #8]
   22e9c:	str	r3, [sp]
   22ea0:	mov	r3, #5
   22ea4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22ea8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22eac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22eb0:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   22eb4:	str	r0, [fp, #-36]	; 0xffffffdc
   22eb8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22ebc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22ec0:	cmp	r2, r3
   22ec4:	beq	22ee8 <_start@@Base+0x107d8>
   22ec8:	ldr	r1, [fp, #4]
   22ecc:	mov	r2, #11
   22ed0:	mov	r3, #0
   22ed4:	strd	r2, [r1]
   22ed8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22edc:	mov	r2, #0
   22ee0:	str	r2, [r3]
   22ee4:	b	23054 <_start@@Base+0x10944>
   22ee8:	ldr	r3, [fp, #-8]
   22eec:	b	23058 <_start@@Base+0x10948>
   22ef0:	ldr	r3, [fp, #-8]
   22ef4:	b	23058 <_start@@Base+0x10948>
   22ef8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   22efc:	ldr	r0, [pc, #204]	; 22fd0 <_start@@Base+0x108c0>
   22f00:	mvn	r1, #0
   22f04:	and	r2, r2, r0
   22f08:	and	r3, r3, r1
   22f0c:	add	r1, pc, #180	; 0xb4
   22f10:	ldrd	r0, [r1]
   22f14:	cmp	r3, r1
   22f18:	cmpeq	r2, r0
   22f1c:	bne	22fd4 <_start@@Base+0x108c4>
   22f20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22f24:	str	r3, [fp, #-24]	; 0xffffffe8
   22f28:	ldr	r3, [fp, #8]
   22f2c:	str	r3, [sp]
   22f30:	mov	r3, #6
   22f34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22f38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22f3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22f40:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   22f44:	str	r0, [fp, #-36]	; 0xffffffdc
   22f48:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22f4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22f50:	cmp	r2, r3
   22f54:	beq	22f78 <_start@@Base+0x10868>
   22f58:	ldr	r1, [fp, #4]
   22f5c:	mov	r2, #255	; 0xff
   22f60:	mov	r3, #0
   22f64:	strd	r2, [r1]
   22f68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22f6c:	mov	r2, #0
   22f70:	str	r2, [r3]
   22f74:	b	23054 <_start@@Base+0x10944>
   22f78:	ldr	r3, [fp, #-8]
   22f7c:	b	23058 <_start@@Base+0x10948>
   22f80:			; <UNDEFINED> instruction: 0xffffffff
   22f84:	cdpmi	14, 4, cr4, cr15, cr4, {2}
   22f88:			; <UNDEFINED> instruction: 0x46616dff
   22f8c:	rsbmi	r6, pc, #428	; 0x1ac
   22f90:	strvs	r0, [r0, #-0]
   22f94:	rsbmi	r6, r5, #108, 24	; 0x6c00
   22f98:	cdpvs	0, 0, cr0, cr0, cr0, {0}
   22f9c:	ldclmi	12, cr4, [r5, #-388]!	; 0xfffffe7c
   22fa0:	strbtmi	r6, [r1], -r0, lsl #28
   22fa4:	rsbmi	r6, pc, #428	; 0x1ac
   22fa8:	ldrshvc	pc, [pc, #255]	; 230af <_start@@Base+0x1099f>	; <UNPREDICTABLE>
   22fac:	svcmi	0x00746865
   22fb0:	andeq	r0, r0, r0
   22fb4:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   22fb8:	cdpvs	5, 7, cr6, cr10, cr11, {3}
   22fbc:	rsbpl	r7, r1, #117	; 0x75
   22fc0:	andvc	r0, r0, #0
   22fc4:	svcmi	0x00746865
   22fc8:	strbvs	r0, [r4, #-0]!
   22fcc:	strbpl	r7, [lr, #-1395]!	; 0xfffffa8d
   22fd0:			; <UNDEFINED> instruction: 0xffff0000
   22fd4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   22fd8:	add	r1, pc, #136	; 0x88
   22fdc:	ldrd	r0, [r1]
   22fe0:	cmp	r3, r1
   22fe4:	cmpeq	r2, r0
   22fe8:	bne	2304c <_start@@Base+0x1093c>
   22fec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22ff0:	str	r3, [fp, #-24]	; 0xffffffe8
   22ff4:	ldr	r3, [fp, #8]
   22ff8:	str	r3, [sp]
   22ffc:	mov	r3, #8
   23000:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23004:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23008:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2300c:	bl	32740 <flatcc_json_parser_match_constant@@Base>
   23010:	str	r0, [fp, #-36]	; 0xffffffdc
   23014:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2301c:	cmp	r2, r3
   23020:	beq	23044 <_start@@Base+0x10934>
   23024:	ldr	r1, [fp, #4]
   23028:	mov	r2, #8
   2302c:	mov	r3, #0
   23030:	strd	r2, [r1]
   23034:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23038:	mov	r2, #0
   2303c:	str	r2, [r3]
   23040:	b	23054 <_start@@Base+0x10944>
   23044:	ldr	r3, [fp, #-8]
   23048:	b	23058 <_start@@Base+0x10948>
   2304c:	ldr	r3, [fp, #-8]
   23050:	b	23058 <_start@@Base+0x10948>
   23054:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23058:	mov	r0, r3
   2305c:	sub	sp, fp, #4
   23060:	pop	{fp, pc}
   23064:	nop			; (mov r0, r0)
   23068:	cdpvs	5, 7, cr6, cr10, cr12, {3}
   2306c:	rsbpl	r7, r1, #117	; 0x75
   23070:	push	{fp, lr}
   23074:	add	fp, sp, #4
   23078:	sub	sp, sp, #64	; 0x40
   2307c:	str	r0, [fp, #-32]	; 0xffffffe0
   23080:	str	r1, [fp, #-36]	; 0xffffffdc
   23084:	str	r2, [fp, #-40]	; 0xffffffd8
   23088:	str	r3, [fp, #-44]	; 0xffffffd4
   2308c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23090:	mov	r2, #0
   23094:	str	r2, [r3]
   23098:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2309c:	ldr	r3, [r3]
   230a0:	mov	r1, #10
   230a4:	mov	r0, r3
   230a8:	bl	28be4 <flatcc_builder_start_table@@Base>
   230ac:	mov	r3, r0
   230b0:	cmp	r3, #0
   230b4:	bne	23b60 <_start@@Base+0x11450>
   230b8:	sub	r3, fp, #24
   230bc:	str	r3, [sp]
   230c0:	mov	r3, #5
   230c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   230c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   230cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   230d0:	bl	33c74 <flatcc_json_parser_prepare_unions@@Base>
   230d4:	mov	r2, r0
   230d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   230dc:	cmp	r2, r3
   230e0:	beq	23b68 <_start@@Base+0x11458>
   230e4:	sub	r3, fp, #20
   230e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   230ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   230f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   230f4:	bl	13918 <_start@@Base+0x1208>
   230f8:	str	r0, [fp, #-36]	; 0xffffffdc
   230fc:	b	23af8 <_start@@Base+0x113e8>
   23100:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23104:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23108:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2310c:	bl	13508 <_start@@Base+0xdf8>
   23110:	str	r0, [fp, #-36]	; 0xffffffdc
   23114:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23118:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2311c:	bl	137ec <_start@@Base+0x10dc>
   23120:	strd	r0, [fp, #-12]
   23124:	ldrd	r2, [fp, #-12]
   23128:	add	r1, pc, #888	; 0x378
   2312c:	ldrd	r0, [r1]
   23130:	cmp	r3, r1
   23134:	cmpeq	r2, r0
   23138:	bhi	234f4 <_start@@Base+0x10de4>
   2313c:	ldrd	r2, [fp, #-12]
   23140:	add	r1, pc, #872	; 0x368
   23144:	ldrd	r0, [r1]
   23148:	cmp	r3, r1
   2314c:	cmpeq	r2, r0
   23150:	bne	232e4 <_start@@Base+0x10bd4>
   23154:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23158:	add	r3, r3, #8
   2315c:	str	r3, [fp, #-36]	; 0xffffffdc
   23160:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23164:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23168:	bl	137ec <_start@@Base+0x10dc>
   2316c:	strd	r0, [fp, #-12]
   23170:	ldrd	r2, [fp, #-12]
   23174:	mvn	r0, #255	; 0xff
   23178:	mvn	r1, #0
   2317c:	and	r2, r2, r0
   23180:	and	r3, r3, r1
   23184:	add	r1, pc, #812	; 0x32c
   23188:	ldrd	r0, [r1]
   2318c:	cmp	r3, r1
   23190:	cmpeq	r2, r0
   23194:	bne	23224 <_start@@Base+0x10b14>
   23198:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2319c:	str	r3, [fp, #-16]
   231a0:	mov	r3, #7
   231a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   231a8:	ldr	r1, [fp, #-16]
   231ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   231b0:	bl	13db8 <_start@@Base+0x16a8>
   231b4:	str	r0, [fp, #-36]	; 0xffffffdc
   231b8:	ldr	r2, [fp, #-16]
   231bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   231c0:	cmp	r2, r3
   231c4:	beq	2320c <_start@@Base+0x10afc>
   231c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   231cc:	ldr	r2, [pc, #764]	; 234d0 <_start@@Base+0x10dc0>
   231d0:	add	r2, pc, r2
   231d4:	str	r2, [sp, #12]
   231d8:	ldr	r2, [pc, #756]	; 234d4 <_start@@Base+0x10dc4>
   231dc:	add	r2, pc, r2
   231e0:	str	r2, [sp, #8]
   231e4:	str	r3, [sp, #4]
   231e8:	mov	r3, #3
   231ec:	str	r3, [sp]
   231f0:	mov	r3, #1
   231f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   231f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   231fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23200:	bl	33f7c <flatcc_json_parser_union_type@@Base>
   23204:	str	r0, [fp, #-36]	; 0xffffffdc
   23208:	b	23ae0 <_start@@Base+0x113d0>
   2320c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23210:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23214:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23218:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   2321c:	str	r0, [fp, #-36]	; 0xffffffdc
   23220:	b	23ae0 <_start@@Base+0x113d0>
   23224:	ldrd	r2, [fp, #-12]
   23228:	mov	r0, #0
   2322c:	ldr	r1, [pc, #676]	; 234d8 <_start@@Base+0x10dc8>
   23230:	and	r2, r2, r0
   23234:	and	r3, r3, r1
   23238:	mov	r0, #0
   2323c:	ldr	r1, [pc, #664]	; 234dc <_start@@Base+0x10dcc>
   23240:	cmp	r3, r1
   23244:	cmpeq	r2, r0
   23248:	bne	232cc <_start@@Base+0x10bbc>
   2324c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23250:	str	r3, [fp, #-16]
   23254:	mov	r3, #2
   23258:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2325c:	ldr	r1, [fp, #-16]
   23260:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23264:	bl	13db8 <_start@@Base+0x16a8>
   23268:	str	r0, [fp, #-36]	; 0xffffffdc
   2326c:	ldr	r2, [fp, #-16]
   23270:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23274:	cmp	r2, r3
   23278:	beq	232b4 <_start@@Base+0x10ba4>
   2327c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23280:	ldr	r2, [pc, #600]	; 234e0 <_start@@Base+0x10dd0>
   23284:	add	r2, pc, r2
   23288:	str	r2, [sp, #8]
   2328c:	str	r3, [sp, #4]
   23290:	mov	r3, #3
   23294:	str	r3, [sp]
   23298:	mov	r3, #1
   2329c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   232a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   232a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   232a8:	bl	33dac <flatcc_json_parser_union@@Base>
   232ac:	str	r0, [fp, #-36]	; 0xffffffdc
   232b0:	b	23ae0 <_start@@Base+0x113d0>
   232b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   232b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   232bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   232c0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   232c4:	str	r0, [fp, #-36]	; 0xffffffdc
   232c8:	b	23ae0 <_start@@Base+0x113d0>
   232cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   232d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   232d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   232d8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   232dc:	str	r0, [fp, #-36]	; 0xffffffdc
   232e0:	b	23ae0 <_start@@Base+0x113d0>
   232e4:	ldrd	r2, [fp, #-12]
   232e8:	add	r1, pc, #464	; 0x1d0
   232ec:	ldrd	r0, [r1]
   232f0:	cmp	r3, r1
   232f4:	cmpeq	r2, r0
   232f8:	bne	233e4 <_start@@Base+0x10cd4>
   232fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23300:	add	r3, r3, #8
   23304:	str	r3, [fp, #-36]	; 0xffffffdc
   23308:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2330c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23310:	bl	137ec <_start@@Base+0x10dc>
   23314:	strd	r0, [fp, #-12]
   23318:	ldrd	r2, [fp, #-12]
   2331c:	mov	r0, #0
   23320:	ldr	r1, [pc, #432]	; 234d8 <_start@@Base+0x10dc8>
   23324:	and	r2, r2, r0
   23328:	and	r3, r3, r1
   2332c:	mov	r0, #0
   23330:	ldr	r1, [pc, #428]	; 234e4 <_start@@Base+0x10dd4>
   23334:	cmp	r3, r1
   23338:	cmpeq	r2, r0
   2333c:	bne	233cc <_start@@Base+0x10cbc>
   23340:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23344:	str	r3, [fp, #-16]
   23348:	mov	r3, #2
   2334c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23350:	ldr	r1, [fp, #-16]
   23354:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23358:	bl	13db8 <_start@@Base+0x16a8>
   2335c:	str	r0, [fp, #-36]	; 0xffffffdc
   23360:	ldr	r2, [fp, #-16]
   23364:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23368:	cmp	r2, r3
   2336c:	beq	233b4 <_start@@Base+0x10ca4>
   23370:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23374:	ldr	r2, [pc, #364]	; 234e8 <_start@@Base+0x10dd8>
   23378:	add	r2, pc, r2
   2337c:	str	r2, [sp, #12]
   23380:	ldr	r2, [pc, #356]	; 234ec <_start@@Base+0x10ddc>
   23384:	add	r2, pc, r2
   23388:	str	r2, [sp, #8]
   2338c:	str	r3, [sp, #4]
   23390:	mov	r3, #7
   23394:	str	r3, [sp]
   23398:	mov	r3, #3
   2339c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   233a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   233a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   233a8:	bl	33f7c <flatcc_json_parser_union_type@@Base>
   233ac:	str	r0, [fp, #-36]	; 0xffffffdc
   233b0:	b	23ae0 <_start@@Base+0x113d0>
   233b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   233b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   233bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   233c0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   233c4:	str	r0, [fp, #-36]	; 0xffffffdc
   233c8:	b	23ae0 <_start@@Base+0x113d0>
   233cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   233d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   233d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   233d8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   233dc:	str	r0, [fp, #-36]	; 0xffffffdc
   233e0:	b	23ae0 <_start@@Base+0x113d0>
   233e4:	ldrd	r2, [fp, #-12]
   233e8:	mov	r0, #-16777216	; 0xff000000
   233ec:	mvn	r1, #0
   233f0:	and	r2, r2, r0
   233f4:	and	r3, r3, r1
   233f8:	add	r1, pc, #200	; 0xc8
   233fc:	ldrd	r0, [r1]
   23400:	cmp	r3, r1
   23404:	cmpeq	r2, r0
   23408:	bne	2348c <_start@@Base+0x10d7c>
   2340c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23410:	str	r3, [fp, #-16]
   23414:	mov	r3, #5
   23418:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2341c:	ldr	r1, [fp, #-16]
   23420:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23424:	bl	13db8 <_start@@Base+0x16a8>
   23428:	str	r0, [fp, #-36]	; 0xffffffdc
   2342c:	ldr	r2, [fp, #-16]
   23430:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23434:	cmp	r2, r3
   23438:	beq	23474 <_start@@Base+0x10d64>
   2343c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23440:	ldr	r2, [pc, #168]	; 234f0 <_start@@Base+0x10de0>
   23444:	add	r2, pc, r2
   23448:	str	r2, [sp, #8]
   2344c:	str	r3, [sp, #4]
   23450:	mov	r3, #7
   23454:	str	r3, [sp]
   23458:	mov	r3, #3
   2345c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23460:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23464:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23468:	bl	33dac <flatcc_json_parser_union@@Base>
   2346c:	str	r0, [fp, #-36]	; 0xffffffdc
   23470:	b	23ae0 <_start@@Base+0x113d0>
   23474:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23478:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2347c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23480:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   23484:	str	r0, [fp, #-36]	; 0xffffffdc
   23488:	b	23ae0 <_start@@Base+0x113d0>
   2348c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23490:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23494:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23498:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   2349c:	str	r0, [fp, #-36]	; 0xffffffdc
   234a0:	b	23ae0 <_start@@Base+0x113d0>
   234a4:	nop			; (mov r0, r0)
   234a8:	cmnvs	r3, r4, ror #8
   234ac:	cmnvs	r8, #-2147483620	; 0x8000001c
   234b0:	strbvs	r6, [pc, -r9, ror #28]!
   234b4:	cmnvs	lr, r1, ror #8
   234b8:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   234bc:	cmnvc	r4, #116, 30	; 0x1d0
   234c0:	svcvs	0x005f7479
   234c4:	cmnvs	r1, #6464	; 0x1940
   234c8:	svcvs	0x00000000
   234cc:	cmnvs	r1, #6464	; 0x1940
   234d0:			; <UNDEFINED> instruction: 0xfffff748
   234d4:	andeq	r5, r2, r4, lsl r2
   234d8:			; <UNDEFINED> instruction: 0xffff0000
   234dc:	cmnvc	r4, #0
   234e0:			; <UNDEFINED> instruction: 0xfffff694
   234e4:	rsbvc	r0, r5, r0
   234e8:			; <UNDEFINED> instruction: 0xfffff5a0
   234ec:	andeq	r5, r2, ip, ror r0
   234f0:			; <UNDEFINED> instruction: 0xfffff4d4
   234f4:	ldrd	r2, [fp, #-12]
   234f8:	add	r1, pc, #952	; 0x3b8
   234fc:	ldrd	r0, [r1]
   23500:	cmp	r3, r1
   23504:	cmpeq	r2, r0
   23508:	bhi	236d8 <_start@@Base+0x10fc8>
   2350c:	ldrd	r2, [fp, #-12]
   23510:	add	r1, pc, #936	; 0x3a8
   23514:	ldrd	r0, [r1]
   23518:	cmp	r3, r1
   2351c:	cmpeq	r2, r0
   23520:	bne	236c0 <_start@@Base+0x10fb0>
   23524:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23528:	add	r3, r3, #8
   2352c:	str	r3, [fp, #-36]	; 0xffffffdc
   23530:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23534:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23538:	bl	137ec <_start@@Base+0x10dc>
   2353c:	strd	r0, [fp, #-12]
   23540:	ldrd	r2, [fp, #-12]
   23544:	mvn	r0, #255	; 0xff
   23548:	mvn	r1, #0
   2354c:	and	r2, r2, r0
   23550:	and	r3, r3, r1
   23554:	add	r1, pc, #876	; 0x36c
   23558:	ldrd	r0, [r1]
   2355c:	cmp	r3, r1
   23560:	cmpeq	r2, r0
   23564:	bne	23600 <_start@@Base+0x10ef0>
   23568:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2356c:	str	r3, [fp, #-16]
   23570:	mov	r3, #7
   23574:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23578:	ldr	r1, [fp, #-16]
   2357c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23580:	bl	13db8 <_start@@Base+0x16a8>
   23584:	str	r0, [fp, #-36]	; 0xffffffdc
   23588:	ldr	r2, [fp, #-16]
   2358c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23590:	cmp	r2, r3
   23594:	beq	235e8 <_start@@Base+0x10ed8>
   23598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2359c:	ldr	r2, [pc, #844]	; 238f0 <_start@@Base+0x111e0>
   235a0:	add	r2, pc, r2
   235a4:	str	r2, [sp, #16]
   235a8:	ldr	r2, [pc, #836]	; 238f4 <_start@@Base+0x111e4>
   235ac:	add	r2, pc, r2
   235b0:	str	r2, [sp, #12]
   235b4:	ldr	r2, [pc, #828]	; 238f8 <_start@@Base+0x111e8>
   235b8:	add	r2, pc, r2
   235bc:	str	r2, [sp, #8]
   235c0:	str	r3, [sp, #4]
   235c4:	mov	r3, #9
   235c8:	str	r3, [sp]
   235cc:	mov	r3, #4
   235d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   235d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   235d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   235dc:	bl	34580 <flatcc_json_parser_union_type_vector@@Base>
   235e0:	str	r0, [fp, #-36]	; 0xffffffdc
   235e4:	b	23ae0 <_start@@Base+0x113d0>
   235e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   235ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   235f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   235f4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   235f8:	str	r0, [fp, #-36]	; 0xffffffdc
   235fc:	b	23ae0 <_start@@Base+0x113d0>
   23600:	ldrd	r2, [fp, #-12]
   23604:	mov	r0, #0
   23608:	ldr	r1, [pc, #748]	; 238fc <_start@@Base+0x111ec>
   2360c:	and	r2, r2, r0
   23610:	and	r3, r3, r1
   23614:	mov	r0, #0
   23618:	ldr	r1, [pc, #736]	; 23900 <_start@@Base+0x111f0>
   2361c:	cmp	r3, r1
   23620:	cmpeq	r2, r0
   23624:	bne	236a8 <_start@@Base+0x10f98>
   23628:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2362c:	str	r3, [fp, #-16]
   23630:	mov	r3, #2
   23634:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23638:	ldr	r1, [fp, #-16]
   2363c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23640:	bl	13db8 <_start@@Base+0x16a8>
   23644:	str	r0, [fp, #-36]	; 0xffffffdc
   23648:	ldr	r2, [fp, #-16]
   2364c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23650:	cmp	r2, r3
   23654:	beq	23690 <_start@@Base+0x10f80>
   23658:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2365c:	ldr	r2, [pc, #672]	; 23904 <_start@@Base+0x111f4>
   23660:	add	r2, pc, r2
   23664:	str	r2, [sp, #8]
   23668:	str	r3, [sp, #4]
   2366c:	mov	r3, #9
   23670:	str	r3, [sp]
   23674:	mov	r3, #4
   23678:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2367c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23680:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23684:	bl	3442c <flatcc_json_parser_union_vector@@Base>
   23688:	str	r0, [fp, #-36]	; 0xffffffdc
   2368c:	b	23ae0 <_start@@Base+0x113d0>
   23690:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23694:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23698:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2369c:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   236a0:	str	r0, [fp, #-36]	; 0xffffffdc
   236a4:	b	23ae0 <_start@@Base+0x113d0>
   236a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   236ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   236b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   236b4:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   236b8:	str	r0, [fp, #-36]	; 0xffffffdc
   236bc:	b	23ae0 <_start@@Base+0x113d0>
   236c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   236c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   236c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   236cc:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   236d0:	str	r0, [fp, #-36]	; 0xffffffdc
   236d4:	b	23ae0 <_start@@Base+0x113d0>
   236d8:	ldrd	r2, [fp, #-12]
   236dc:	add	r1, pc, #492	; 0x1ec
   236e0:	ldrd	r0, [r1]
   236e4:	cmp	r3, r1
   236e8:	cmpeq	r2, r0
   236ec:	bne	2392c <_start@@Base+0x1121c>
   236f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   236f4:	add	r3, r3, #8
   236f8:	str	r3, [fp, #-36]	; 0xffffffdc
   236fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23700:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23704:	bl	137ec <_start@@Base+0x10dc>
   23708:	strd	r0, [fp, #-12]
   2370c:	ldrd	r2, [fp, #-12]
   23710:	add	r1, pc, #448	; 0x1c0
   23714:	ldrd	r0, [r1]
   23718:	cmp	r3, r1
   2371c:	cmpeq	r2, r0
   23720:	bne	2380c <_start@@Base+0x110fc>
   23724:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23728:	add	r3, r3, #8
   2372c:	str	r3, [fp, #-36]	; 0xffffffdc
   23730:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23734:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23738:	bl	137ec <_start@@Base+0x10dc>
   2373c:	strd	r0, [fp, #-12]
   23740:	ldrd	r2, [fp, #-12]
   23744:	mov	r0, #0
   23748:	mvn	r1, #255	; 0xff
   2374c:	and	r2, r2, r0
   23750:	and	r3, r3, r1
   23754:	add	r1, pc, #388	; 0x184
   23758:	ldrd	r0, [r1]
   2375c:	cmp	r3, r1
   23760:	cmpeq	r2, r0
   23764:	bne	237f4 <_start@@Base+0x110e4>
   23768:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2376c:	str	r3, [fp, #-16]
   23770:	mov	r3, #3
   23774:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23778:	ldr	r1, [fp, #-16]
   2377c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23780:	bl	13db8 <_start@@Base+0x16a8>
   23784:	str	r0, [fp, #-36]	; 0xffffffdc
   23788:	ldr	r2, [fp, #-16]
   2378c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23790:	cmp	r2, r3
   23794:	beq	237dc <_start@@Base+0x110cc>
   23798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2379c:	ldr	r2, [pc, #356]	; 23908 <_start@@Base+0x111f8>
   237a0:	add	r2, pc, r2
   237a4:	str	r2, [sp, #12]
   237a8:	ldr	r2, [pc, #348]	; 2390c <_start@@Base+0x111fc>
   237ac:	add	r2, pc, r2
   237b0:	str	r2, [sp, #8]
   237b4:	str	r3, [sp, #4]
   237b8:	mov	r3, #1
   237bc:	str	r3, [sp]
   237c0:	mov	r3, #0
   237c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   237c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   237cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   237d0:	bl	33f7c <flatcc_json_parser_union_type@@Base>
   237d4:	str	r0, [fp, #-36]	; 0xffffffdc
   237d8:	b	23ae0 <_start@@Base+0x113d0>
   237dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   237e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   237e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   237e8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   237ec:	str	r0, [fp, #-36]	; 0xffffffdc
   237f0:	b	23ae0 <_start@@Base+0x113d0>
   237f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   237f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   237fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23800:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   23804:	str	r0, [fp, #-36]	; 0xffffffdc
   23808:	b	23ae0 <_start@@Base+0x113d0>
   2380c:	ldrd	r2, [fp, #-12]
   23810:	ldr	r0, [pc, #228]	; 238fc <_start@@Base+0x111ec>
   23814:	mvn	r1, #0
   23818:	and	r2, r2, r0
   2381c:	and	r3, r3, r1
   23820:	add	r1, pc, #192	; 0xc0
   23824:	ldrd	r0, [r1]
   23828:	cmp	r3, r1
   2382c:	cmpeq	r2, r0
   23830:	bne	23914 <_start@@Base+0x11204>
   23834:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23838:	str	r3, [fp, #-16]
   2383c:	mov	r3, #6
   23840:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23844:	ldr	r1, [fp, #-16]
   23848:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2384c:	bl	13db8 <_start@@Base+0x16a8>
   23850:	str	r0, [fp, #-36]	; 0xffffffdc
   23854:	ldr	r2, [fp, #-16]
   23858:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2385c:	cmp	r2, r3
   23860:	beq	2389c <_start@@Base+0x1118c>
   23864:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23868:	ldr	r2, [pc, #160]	; 23910 <_start@@Base+0x11200>
   2386c:	add	r2, pc, r2
   23870:	str	r2, [sp, #8]
   23874:	str	r3, [sp, #4]
   23878:	mov	r3, #1
   2387c:	str	r3, [sp]
   23880:	mov	r3, #0
   23884:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23888:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2388c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23890:	bl	33dac <flatcc_json_parser_union@@Base>
   23894:	str	r0, [fp, #-36]	; 0xffffffdc
   23898:	b	23ae0 <_start@@Base+0x113d0>
   2389c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   238a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   238a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   238a8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   238ac:	str	r0, [fp, #-36]	; 0xffffffdc
   238b0:	b	23ae0 <_start@@Base+0x113d0>
   238b4:	nop			; (mov r0, r0)
   238b8:	svcpl	0x00636860
   238bc:			; <UNDEFINED> instruction: 0x6d61696e
   238c0:	cmnvs	r3, r5, ror #8
   238c4:	cmnvs	r8, #-2147483620	; 0x8000001c
   238c8:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   238cc:	rsbsvc	r5, r3, #116, 30	; 0x1d0
   238d0:	svcpl	0x00636861
   238d4:			; <UNDEFINED> instruction: 0x6d61696e
   238d8:	ldrbvs	r5, [r2, #-3956]!	; 0xfffff08c
   238dc:	rsbvc	r6, r1, #116, 6	; 0xd0000001
   238e0:	andeq	r0, r0, r0
   238e4:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   238e8:	ldrbvs	r0, [r2, #-0]!
   238ec:	rsbvc	r6, r1, #116, 6	; 0xd0000001
   238f0:			; <UNDEFINED> instruction: 0xfffff548
   238f4:			; <UNDEFINED> instruction: 0xfffff36c
   238f8:	andeq	r4, r2, r8, asr lr
   238fc:			; <UNDEFINED> instruction: 0xffff0000
   23900:	rsbsvc	r0, r3, #0
   23904:			; <UNDEFINED> instruction: 0xfffff2b8
   23908:			; <UNDEFINED> instruction: 0xfffff178
   2390c:	andeq	r4, r2, r4, ror ip
   23910:			; <UNDEFINED> instruction: 0xfffff0ac
   23914:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23918:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2391c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23920:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   23924:	str	r0, [fp, #-36]	; 0xffffffdc
   23928:	b	23ae0 <_start@@Base+0x113d0>
   2392c:	ldrd	r2, [fp, #-12]
   23930:	add	r1, pc, #616	; 0x268
   23934:	ldrd	r0, [r1]
   23938:	cmp	r3, r1
   2393c:	cmpeq	r2, r0
   23940:	bne	23acc <_start@@Base+0x113bc>
   23944:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23948:	add	r3, r3, #8
   2394c:	str	r3, [fp, #-36]	; 0xffffffdc
   23950:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23954:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23958:	bl	137ec <_start@@Base+0x10dc>
   2395c:	strd	r0, [fp, #-12]
   23960:	ldrd	r2, [fp, #-12]
   23964:	ldr	r0, [pc, #580]	; 23bb0 <_start@@Base+0x114a0>
   23968:	mvn	r1, #0
   2396c:	and	r2, r2, r0
   23970:	and	r3, r3, r1
   23974:	add	r1, pc, #556	; 0x22c
   23978:	ldrd	r0, [r1]
   2397c:	cmp	r3, r1
   23980:	cmpeq	r2, r0
   23984:	bne	23a14 <_start@@Base+0x11304>
   23988:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2398c:	str	r3, [fp, #-16]
   23990:	mov	r3, #6
   23994:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23998:	ldr	r1, [fp, #-16]
   2399c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   239a0:	bl	13db8 <_start@@Base+0x16a8>
   239a4:	str	r0, [fp, #-36]	; 0xffffffdc
   239a8:	ldr	r2, [fp, #-16]
   239ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   239b0:	cmp	r2, r3
   239b4:	beq	239fc <_start@@Base+0x112ec>
   239b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   239bc:	ldr	r2, [pc, #496]	; 23bb4 <_start@@Base+0x114a4>
   239c0:	add	r2, pc, r2
   239c4:	str	r2, [sp, #12]
   239c8:	ldr	r2, [pc, #488]	; 23bb8 <_start@@Base+0x114a8>
   239cc:	add	r2, pc, r2
   239d0:	str	r2, [sp, #8]
   239d4:	str	r3, [sp, #4]
   239d8:	mov	r3, #5
   239dc:	str	r3, [sp]
   239e0:	mov	r3, #2
   239e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   239e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   239ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   239f0:	bl	33f7c <flatcc_json_parser_union_type@@Base>
   239f4:	str	r0, [fp, #-36]	; 0xffffffdc
   239f8:	b	23ae0 <_start@@Base+0x113d0>
   239fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23a00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23a04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23a08:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   23a0c:	str	r0, [fp, #-36]	; 0xffffffdc
   23a10:	b	23ae0 <_start@@Base+0x113d0>
   23a14:	ldrd	r2, [fp, #-12]
   23a18:	mov	r0, #0
   23a1c:	mov	r1, #-16777216	; 0xff000000
   23a20:	and	r2, r2, r0
   23a24:	and	r3, r3, r1
   23a28:	cmp	r3, #1795162112	; 0x6b000000
   23a2c:	cmpeq	r2, #0
   23a30:	bne	23ab4 <_start@@Base+0x113a4>
   23a34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23a38:	str	r3, [fp, #-16]
   23a3c:	mov	r3, #1
   23a40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23a44:	ldr	r1, [fp, #-16]
   23a48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23a4c:	bl	13db8 <_start@@Base+0x16a8>
   23a50:	str	r0, [fp, #-36]	; 0xffffffdc
   23a54:	ldr	r2, [fp, #-16]
   23a58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23a5c:	cmp	r2, r3
   23a60:	beq	23a9c <_start@@Base+0x1138c>
   23a64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23a68:	ldr	r2, [pc, #332]	; 23bbc <_start@@Base+0x114ac>
   23a6c:	add	r2, pc, r2
   23a70:	str	r2, [sp, #8]
   23a74:	str	r3, [sp, #4]
   23a78:	mov	r3, #5
   23a7c:	str	r3, [sp]
   23a80:	mov	r3, #2
   23a84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23a88:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23a8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23a90:	bl	33dac <flatcc_json_parser_union@@Base>
   23a94:	str	r0, [fp, #-36]	; 0xffffffdc
   23a98:	b	23ae0 <_start@@Base+0x113d0>
   23a9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23aa0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23aa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23aa8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   23aac:	str	r0, [fp, #-36]	; 0xffffffdc
   23ab0:	b	23ae0 <_start@@Base+0x113d0>
   23ab4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23ab8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23abc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23ac0:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   23ac4:	str	r0, [fp, #-36]	; 0xffffffdc
   23ac8:	b	23ae0 <_start@@Base+0x113d0>
   23acc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23ad0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23ad4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23ad8:	bl	329dc <flatcc_json_parser_unmatched_symbol@@Base>
   23adc:	str	r0, [fp, #-36]	; 0xffffffdc
   23ae0:	sub	r3, fp, #20
   23ae4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23ae8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23aec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23af0:	bl	13a00 <_start@@Base+0x12f0>
   23af4:	str	r0, [fp, #-36]	; 0xffffffdc
   23af8:	ldr	r3, [fp, #-20]	; 0xffffffec
   23afc:	cmp	r3, #0
   23b00:	bne	23100 <_start@@Base+0x109f0>
   23b04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23b08:	ldr	r3, [r3, #24]
   23b0c:	cmp	r3, #0
   23b10:	bne	23b70 <_start@@Base+0x11460>
   23b14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23b18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23b1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23b20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23b24:	bl	33d2c <flatcc_json_parser_finalize_unions@@Base>
   23b28:	str	r0, [fp, #-36]	; 0xffffffdc
   23b2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23b30:	ldr	r3, [r3]
   23b34:	mov	r0, r3
   23b38:	bl	29748 <flatcc_builder_end_table@@Base>
   23b3c:	mov	r2, r0
   23b40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23b44:	str	r2, [r3]
   23b48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23b4c:	ldr	r3, [r3]
   23b50:	cmp	r3, #0
   23b54:	beq	23b78 <_start@@Base+0x11468>
   23b58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23b5c:	b	23b94 <_start@@Base+0x11484>
   23b60:	nop			; (mov r0, r0)
   23b64:	b	23b7c <_start@@Base+0x1146c>
   23b68:	nop			; (mov r0, r0)
   23b6c:	b	23b7c <_start@@Base+0x1146c>
   23b70:	nop			; (mov r0, r0)
   23b74:	b	23b7c <_start@@Base+0x1146c>
   23b78:	nop			; (mov r0, r0)
   23b7c:	mov	r3, #33	; 0x21
   23b80:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23b84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23b88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23b8c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   23b90:	mov	r3, r0
   23b94:	mov	r0, r3
   23b98:	sub	sp, fp, #4
   23b9c:	pop	{fp, pc}
   23ba0:	svcpl	0x006b6963
   23ba4:	cmnvc	r9, #1694498816	; 0x65000000
   23ba8:	rsbvc	r0, r5, r0
   23bac:	blvs	1800d98 <__bss_end__@@Base+0x17b88dc>
   23bb0:			; <UNDEFINED> instruction: 0xffff0000
   23bb4:			; <UNDEFINED> instruction: 0xffffef58
   23bb8:	andeq	r4, r2, r4, ror #20
   23bbc:			; <UNDEFINED> instruction: 0xffffeeac
   23bc0:	push	{fp}		; (str fp, [sp, #-4]!)
   23bc4:	add	fp, sp, #0
   23bc8:	sub	sp, sp, #20
   23bcc:	str	r0, [fp, #-8]
   23bd0:	str	r1, [fp, #-12]
   23bd4:	str	r2, [fp, #-16]
   23bd8:	str	r3, [fp, #-20]	; 0xffffffec
   23bdc:	ldr	r3, [fp, #-12]
   23be0:	mov	r0, r3
   23be4:	add	sp, fp, #0
   23be8:	pop	{fp}		; (ldr fp, [sp], #4)
   23bec:	bx	lr
   23bf0:	push	{fp, lr}
   23bf4:	add	fp, sp, #4
   23bf8:	sub	sp, sp, #48	; 0x30
   23bfc:	str	r0, [fp, #-32]	; 0xffffffe0
   23c00:	str	r1, [fp, #-36]	; 0xffffffdc
   23c04:	str	r2, [fp, #-40]	; 0xffffffd8
   23c08:	str	r3, [fp, #-44]	; 0xffffffd4
   23c0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23c10:	str	r3, [fp, #-8]
   23c14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23c18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23c1c:	bl	137ec <_start@@Base+0x10dc>
   23c20:	strd	r0, [fp, #-20]	; 0xffffffec
   23c24:	ldrd	r2, [fp, #-20]	; 0xffffffec
   23c28:	add	r1, pc, #912	; 0x390
   23c2c:	ldrd	r0, [r1]
   23c30:	cmp	r3, r1
   23c34:	cmpeq	r2, r0
   23c38:	bhi	23e08 <_start@@Base+0x116f8>
   23c3c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   23c40:	add	r1, pc, #896	; 0x380
   23c44:	ldrd	r0, [r1]
   23c48:	cmp	r3, r1
   23c4c:	cmpeq	r2, r0
   23c50:	bhi	23ce8 <_start@@Base+0x115d8>
   23c54:	ldrd	r2, [fp, #-20]	; 0xffffffec
   23c58:	mov	r0, #0
   23c5c:	mvn	r1, #255	; 0xff
   23c60:	and	r2, r2, r0
   23c64:	and	r3, r3, r1
   23c68:	add	r1, pc, #864	; 0x360
   23c6c:	ldrd	r0, [r1]
   23c70:	cmp	r3, r1
   23c74:	cmpeq	r2, r0
   23c78:	bne	23ce0 <_start@@Base+0x115d0>
   23c7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23c80:	str	r3, [fp, #-24]	; 0xffffffe8
   23c84:	mov	r3, #3
   23c88:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23c8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23c90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23c94:	bl	13834 <_start@@Base+0x1124>
   23c98:	str	r0, [fp, #-36]	; 0xffffffdc
   23c9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23ca0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23ca4:	cmp	r2, r3
   23ca8:	beq	23cd8 <_start@@Base+0x115c8>
   23cac:	ldr	r3, [fp, #8]
   23cb0:	str	r3, [sp, #4]
   23cb4:	ldr	r3, [fp, #4]
   23cb8:	str	r3, [sp]
   23cbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23cc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23cc4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23cc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23ccc:	bl	18004 <_start@@Base+0x58f4>
   23cd0:	str	r0, [fp, #-36]	; 0xffffffdc
   23cd4:	b	240f4 <_start@@Base+0x119e4>
   23cd8:	ldr	r3, [fp, #-8]
   23cdc:	b	240f8 <_start@@Base+0x119e8>
   23ce0:	ldr	r3, [fp, #-8]
   23ce4:	b	240f8 <_start@@Base+0x119e8>
   23ce8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   23cec:	mov	r0, #0
   23cf0:	mvn	r1, #255	; 0xff
   23cf4:	and	r2, r2, r0
   23cf8:	and	r3, r3, r1
   23cfc:	add	r1, pc, #724	; 0x2d4
   23d00:	ldrd	r0, [r1]
   23d04:	cmp	r3, r1
   23d08:	cmpeq	r2, r0
   23d0c:	bne	23d74 <_start@@Base+0x11664>
   23d10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23d14:	str	r3, [fp, #-24]	; 0xffffffe8
   23d18:	mov	r3, #3
   23d1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23d20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23d24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23d28:	bl	13834 <_start@@Base+0x1124>
   23d2c:	str	r0, [fp, #-36]	; 0xffffffdc
   23d30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23d34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23d38:	cmp	r2, r3
   23d3c:	beq	23d6c <_start@@Base+0x1165c>
   23d40:	ldr	r3, [fp, #8]
   23d44:	str	r3, [sp, #4]
   23d48:	ldr	r3, [fp, #4]
   23d4c:	str	r3, [sp]
   23d50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23d54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23d58:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23d5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23d60:	bl	172d8 <_start@@Base+0x4bc8>
   23d64:	str	r0, [fp, #-36]	; 0xffffffdc
   23d68:	b	240f4 <_start@@Base+0x119e4>
   23d6c:	ldr	r3, [fp, #-8]
   23d70:	b	240f8 <_start@@Base+0x119e8>
   23d74:	ldrd	r2, [fp, #-20]	; 0xffffffec
   23d78:	mov	r0, #-16777216	; 0xff000000
   23d7c:	mvn	r1, #0
   23d80:	and	r2, r2, r0
   23d84:	and	r3, r3, r1
   23d88:	add	r1, pc, #592	; 0x250
   23d8c:	ldrd	r0, [r1]
   23d90:	cmp	r3, r1
   23d94:	cmpeq	r2, r0
   23d98:	bne	23e00 <_start@@Base+0x116f0>
   23d9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23da0:	str	r3, [fp, #-24]	; 0xffffffe8
   23da4:	mov	r3, #5
   23da8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23dac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23db0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23db4:	bl	13834 <_start@@Base+0x1124>
   23db8:	str	r0, [fp, #-36]	; 0xffffffdc
   23dbc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23dc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23dc4:	cmp	r2, r3
   23dc8:	beq	23df8 <_start@@Base+0x116e8>
   23dcc:	ldr	r3, [fp, #8]
   23dd0:	str	r3, [sp, #4]
   23dd4:	ldr	r3, [fp, #4]
   23dd8:	str	r3, [sp]
   23ddc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23de0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23de4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23de8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23dec:	bl	17bfc <_start@@Base+0x54ec>
   23df0:	str	r0, [fp, #-36]	; 0xffffffdc
   23df4:	b	240f4 <_start@@Base+0x119e4>
   23df8:	ldr	r3, [fp, #-8]
   23dfc:	b	240f8 <_start@@Base+0x119e8>
   23e00:	ldr	r3, [fp, #-8]
   23e04:	b	240f8 <_start@@Base+0x119e8>
   23e08:	ldrd	r2, [fp, #-20]	; 0xffffffec
   23e0c:	add	r1, pc, #468	; 0x1d4
   23e10:	ldrd	r0, [r1]
   23e14:	cmp	r3, r1
   23e18:	cmpeq	r2, r0
   23e1c:	bhi	23ea4 <_start@@Base+0x11794>
   23e20:	ldrd	r2, [fp, #-20]	; 0xffffffec
   23e24:	add	r1, pc, #452	; 0x1c4
   23e28:	ldrd	r0, [r1]
   23e2c:	cmp	r3, r1
   23e30:	cmpeq	r2, r0
   23e34:	bne	23e9c <_start@@Base+0x1178c>
   23e38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23e3c:	str	r3, [fp, #-24]	; 0xffffffe8
   23e40:	mov	r3, #8
   23e44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23e48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23e4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23e50:	bl	13834 <_start@@Base+0x1124>
   23e54:	str	r0, [fp, #-36]	; 0xffffffdc
   23e58:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23e5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23e60:	cmp	r2, r3
   23e64:	beq	23e94 <_start@@Base+0x11784>
   23e68:	ldr	r3, [fp, #8]
   23e6c:	str	r3, [sp, #4]
   23e70:	ldr	r3, [fp, #4]
   23e74:	str	r3, [sp]
   23e78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23e7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23e80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23e84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23e88:	bl	179cc <_start@@Base+0x52bc>
   23e8c:	str	r0, [fp, #-36]	; 0xffffffdc
   23e90:	b	240f4 <_start@@Base+0x119e4>
   23e94:	ldr	r3, [fp, #-8]
   23e98:	b	240f8 <_start@@Base+0x119e8>
   23e9c:	ldr	r3, [fp, #-8]
   23ea0:	b	240f8 <_start@@Base+0x119e8>
   23ea4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   23ea8:	add	r1, pc, #328	; 0x148
   23eac:	ldrd	r0, [r1]
   23eb0:	cmp	r3, r1
   23eb4:	cmpeq	r2, r0
   23eb8:	bhi	23f40 <_start@@Base+0x11830>
   23ebc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   23ec0:	add	r1, pc, #312	; 0x138
   23ec4:	ldrd	r0, [r1]
   23ec8:	cmp	r3, r1
   23ecc:	cmpeq	r2, r0
   23ed0:	bne	23f38 <_start@@Base+0x11828>
   23ed4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23ed8:	str	r3, [fp, #-24]	; 0xffffffe8
   23edc:	mov	r3, #8
   23ee0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23ee4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23ee8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23eec:	bl	13834 <_start@@Base+0x1124>
   23ef0:	str	r0, [fp, #-36]	; 0xffffffdc
   23ef4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23ef8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23efc:	cmp	r2, r3
   23f00:	beq	23f30 <_start@@Base+0x11820>
   23f04:	ldr	r3, [fp, #8]
   23f08:	str	r3, [sp, #4]
   23f0c:	ldr	r3, [fp, #4]
   23f10:	str	r3, [sp]
   23f14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23f18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23f1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23f20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23f24:	bl	176e8 <_start@@Base+0x4fd8>
   23f28:	str	r0, [fp, #-36]	; 0xffffffdc
   23f2c:	b	240f4 <_start@@Base+0x119e4>
   23f30:	ldr	r3, [fp, #-8]
   23f34:	b	240f8 <_start@@Base+0x119e8>
   23f38:	ldr	r3, [fp, #-8]
   23f3c:	b	240f8 <_start@@Base+0x119e8>
   23f40:	ldrd	r2, [fp, #-20]	; 0xffffffec
   23f44:	add	r1, pc, #188	; 0xbc
   23f48:	ldrd	r0, [r1]
   23f4c:	cmp	r3, r1
   23f50:	cmpeq	r2, r0
   23f54:	bne	23fb4 <_start@@Base+0x118a4>
   23f58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23f5c:	str	r3, [fp, #-24]	; 0xffffffe8
   23f60:	mov	r3, #8
   23f64:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23f68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23f6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23f70:	bl	13834 <_start@@Base+0x1124>
   23f74:	str	r0, [fp, #-36]	; 0xffffffdc
   23f78:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23f7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23f80:	cmp	r2, r3
   23f84:	beq	24020 <_start@@Base+0x11910>
   23f88:	ldr	r3, [fp, #8]
   23f8c:	str	r3, [sp, #4]
   23f90:	ldr	r3, [fp, #4]
   23f94:	str	r3, [sp]
   23f98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23f9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23fa0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23fa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23fa8:	bl	174c0 <_start@@Base+0x4db0>
   23fac:	str	r0, [fp, #-36]	; 0xffffffdc
   23fb0:	b	240f4 <_start@@Base+0x119e4>
   23fb4:	nop			; (mov r0, r0)
   23fb8:	b	24024 <_start@@Base+0x11914>
   23fbc:	nop			; (mov r0, r0)
   23fc0:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   23fc4:	stmdavs	r5!, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}^
   23fc8:	ldrshvc	pc, [pc, #255]	; 240cf <_start@@Base+0x119bf>	; <UNPREDICTABLE>
   23fcc:	cmnmi	pc, #28416	; 0x6f00
   23fd0:	andeq	r0, r0, r0
   23fd4:	cmnmi	lr, r0, lsl #18
   23fd8:	andeq	r0, r0, r0
   23fdc:	strbtmi	r6, [pc], -r0, lsl #30
   23fe0:	andvc	r0, r0, #0
   23fe4:	cmnmi	pc, #28416	; 0x6f00
   23fe8:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   23fec:	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
   23ff0:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   23ff4:	stmdavs	r5!, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}^
   23ff8:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   23ffc:	mcrvs	7, 3, r6, cr5, cr15, {2}
   24000:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   24004:	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
   24008:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   2400c:	mcrvs	7, 3, r6, cr5, cr15, {2}
   24010:	cfldrdvs	mvd7, [r0, #-484]!	; 0xfffffe1c
   24014:	cdpvs	4, 6, cr7, cr15, cr5, {3}
   24018:	andeq	r0, r0, r0
   2401c:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   24020:	nop			; (mov r0, r0)
   24024:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24028:	sub	r1, pc, #32
   2402c:	ldrd	r0, [r1]
   24030:	cmp	r3, r1
   24034:	cmpeq	r2, r0
   24038:	bne	240ec <_start@@Base+0x119dc>
   2403c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24040:	add	r3, r3, #8
   24044:	str	r3, [fp, #-36]	; 0xffffffdc
   24048:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2404c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24050:	bl	137ec <_start@@Base+0x10dc>
   24054:	strd	r0, [fp, #-20]	; 0xffffffec
   24058:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2405c:	mov	r0, #0
   24060:	mvn	r1, #0
   24064:	and	r2, r2, r0
   24068:	and	r3, r3, r1
   2406c:	sub	r1, pc, #92	; 0x5c
   24070:	ldrd	r0, [r1]
   24074:	cmp	r3, r1
   24078:	cmpeq	r2, r0
   2407c:	bne	240e4 <_start@@Base+0x119d4>
   24080:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24084:	str	r3, [fp, #-24]	; 0xffffffe8
   24088:	mov	r3, #4
   2408c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24090:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24094:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24098:	bl	13834 <_start@@Base+0x1124>
   2409c:	str	r0, [fp, #-36]	; 0xffffffdc
   240a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   240a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   240a8:	cmp	r2, r3
   240ac:	beq	240dc <_start@@Base+0x119cc>
   240b0:	ldr	r3, [fp, #8]
   240b4:	str	r3, [sp, #4]
   240b8:	ldr	r3, [fp, #4]
   240bc:	str	r3, [sp]
   240c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   240c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   240c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   240cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   240d0:	bl	18bf8 <_start@@Base+0x64e8>
   240d4:	str	r0, [fp, #-36]	; 0xffffffdc
   240d8:	b	240f4 <_start@@Base+0x119e4>
   240dc:	ldr	r3, [fp, #-8]
   240e0:	b	240f8 <_start@@Base+0x119e8>
   240e4:	ldr	r3, [fp, #-8]
   240e8:	b	240f8 <_start@@Base+0x119e8>
   240ec:	ldr	r3, [fp, #-8]
   240f0:	b	240f8 <_start@@Base+0x119e8>
   240f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   240f8:	mov	r0, r3
   240fc:	sub	sp, fp, #4
   24100:	pop	{fp, pc}
   24104:	push	{fp}		; (str fp, [sp, #-4]!)
   24108:	add	fp, sp, #0
   2410c:	sub	sp, sp, #20
   24110:	str	r0, [fp, #-8]
   24114:	str	r1, [fp, #-12]
   24118:	str	r2, [fp, #-16]
   2411c:	str	r3, [fp, #-20]	; 0xffffffec
   24120:	ldr	r3, [fp, #-12]
   24124:	mov	r0, r3
   24128:	add	sp, fp, #0
   2412c:	pop	{fp}		; (ldr fp, [sp], #4)
   24130:	bx	lr
   24134:	push	{fp}		; (str fp, [sp, #-4]!)
   24138:	add	fp, sp, #0
   2413c:	sub	sp, sp, #20
   24140:	str	r0, [fp, #-8]
   24144:	str	r1, [fp, #-12]
   24148:	str	r2, [fp, #-16]
   2414c:	str	r3, [fp, #-20]	; 0xffffffec
   24150:	ldr	r3, [fp, #-12]
   24154:	mov	r0, r3
   24158:	add	sp, fp, #0
   2415c:	pop	{fp}		; (ldr fp, [sp], #4)
   24160:	bx	lr
   24164:	push	{fp, lr}
   24168:	add	fp, sp, #4
   2416c:	sub	sp, sp, #48	; 0x30
   24170:	str	r0, [fp, #-32]	; 0xffffffe0
   24174:	str	r1, [fp, #-36]	; 0xffffffdc
   24178:	str	r2, [fp, #-40]	; 0xffffffd8
   2417c:	str	r3, [fp, #-44]	; 0xffffffd4
   24180:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24184:	str	r3, [fp, #-8]
   24188:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2418c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24190:	bl	137ec <_start@@Base+0x10dc>
   24194:	strd	r0, [fp, #-20]	; 0xffffffec
   24198:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2419c:	add	r1, pc, #204	; 0xcc
   241a0:	ldrd	r0, [r1]
   241a4:	cmp	r3, r1
   241a8:	cmpeq	r2, r0
   241ac:	bne	2425c <_start@@Base+0x11b4c>
   241b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   241b4:	add	r3, r3, #8
   241b8:	str	r3, [fp, #-36]	; 0xffffffdc
   241bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   241c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   241c4:	bl	137ec <_start@@Base+0x10dc>
   241c8:	strd	r0, [fp, #-20]	; 0xffffffec
   241cc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   241d0:	mov	r0, #0
   241d4:	mov	r1, #-16777216	; 0xff000000
   241d8:	and	r2, r2, r0
   241dc:	and	r3, r3, r1
   241e0:	cmp	r3, #1912602624	; 0x72000000
   241e4:	cmpeq	r2, #0
   241e8:	bne	24254 <_start@@Base+0x11b44>
   241ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   241f0:	str	r3, [fp, #-24]	; 0xffffffe8
   241f4:	mov	r3, #1
   241f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   241fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24200:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24204:	bl	13834 <_start@@Base+0x1124>
   24208:	str	r0, [fp, #-36]	; 0xffffffdc
   2420c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   24210:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24214:	cmp	r2, r3
   24218:	beq	2424c <_start@@Base+0x11b3c>
   2421c:	ldr	r3, [fp, #8]
   24220:	str	r3, [sp, #4]
   24224:	ldr	r3, [fp, #4]
   24228:	str	r3, [sp]
   2422c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24230:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24234:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24238:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2423c:	bl	22b9c <_start@@Base+0x1048c>
   24240:	str	r0, [fp, #-36]	; 0xffffffdc
   24244:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24248:	b	24260 <_start@@Base+0x11b50>
   2424c:	ldr	r3, [fp, #-8]
   24250:	b	24260 <_start@@Base+0x11b50>
   24254:	ldr	r3, [fp, #-8]
   24258:	b	24260 <_start@@Base+0x11b50>
   2425c:	ldr	r3, [fp, #-8]
   24260:	mov	r0, r3
   24264:	sub	sp, fp, #4
   24268:	pop	{fp, pc}
   2426c:	nop			; (mov r0, r0)
   24270:	cmnvs	r3, r5, ror #8
   24274:	cmnmi	r8, #-2147483620	; 0x8000001c
   24278:	push	{fp, lr}
   2427c:	add	fp, sp, #4
   24280:	sub	sp, sp, #48	; 0x30
   24284:	str	r0, [fp, #-32]	; 0xffffffe0
   24288:	str	r1, [fp, #-36]	; 0xffffffdc
   2428c:	str	r2, [fp, #-40]	; 0xffffffd8
   24290:	str	r3, [fp, #-44]	; 0xffffffd4
   24294:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24298:	str	r3, [fp, #-8]
   2429c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   242a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   242a4:	bl	137ec <_start@@Base+0x10dc>
   242a8:	strd	r0, [fp, #-20]	; 0xffffffec
   242ac:	ldrd	r2, [fp, #-20]	; 0xffffffec
   242b0:	add	r1, pc, #208	; 0xd0
   242b4:	ldrd	r0, [r1]
   242b8:	cmp	r3, r1
   242bc:	cmpeq	r2, r0
   242c0:	bne	24378 <_start@@Base+0x11c68>
   242c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   242c8:	add	r3, r3, #8
   242cc:	str	r3, [fp, #-36]	; 0xffffffdc
   242d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   242d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   242d8:	bl	137ec <_start@@Base+0x10dc>
   242dc:	strd	r0, [fp, #-20]	; 0xffffffec
   242e0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   242e4:	mov	r0, #0
   242e8:	mvn	r1, #255	; 0xff
   242ec:	and	r2, r2, r0
   242f0:	and	r3, r3, r1
   242f4:	add	r1, pc, #148	; 0x94
   242f8:	ldrd	r0, [r1]
   242fc:	cmp	r3, r1
   24300:	cmpeq	r2, r0
   24304:	bne	24370 <_start@@Base+0x11c60>
   24308:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2430c:	str	r3, [fp, #-24]	; 0xffffffe8
   24310:	mov	r3, #3
   24314:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24318:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2431c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24320:	bl	13834 <_start@@Base+0x1124>
   24324:	str	r0, [fp, #-36]	; 0xffffffdc
   24328:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2432c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24330:	cmp	r2, r3
   24334:	beq	24368 <_start@@Base+0x11c58>
   24338:	ldr	r3, [fp, #8]
   2433c:	str	r3, [sp, #4]
   24340:	ldr	r3, [fp, #4]
   24344:	str	r3, [sp]
   24348:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2434c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24350:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24354:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24358:	bl	1618c <_start@@Base+0x3a7c>
   2435c:	str	r0, [fp, #-36]	; 0xffffffdc
   24360:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24364:	b	2437c <_start@@Base+0x11c6c>
   24368:	ldr	r3, [fp, #-8]
   2436c:	b	2437c <_start@@Base+0x11c6c>
   24370:	ldr	r3, [fp, #-8]
   24374:	b	2437c <_start@@Base+0x11c6c>
   24378:	ldr	r3, [fp, #-8]
   2437c:	mov	r0, r3
   24380:	sub	sp, fp, #4
   24384:	pop	{fp, pc}
   24388:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   2438c:	ldrbtmi	r6, [r2], -sp, ror #30
   24390:	andeq	r0, r0, r0
   24394:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   24398:	push	{fp, lr}
   2439c:	add	fp, sp, #4
   243a0:	sub	sp, sp, #48	; 0x30
   243a4:	str	r0, [fp, #-32]	; 0xffffffe0
   243a8:	str	r1, [fp, #-36]	; 0xffffffdc
   243ac:	str	r2, [fp, #-40]	; 0xffffffd8
   243b0:	str	r3, [fp, #-44]	; 0xffffffd4
   243b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   243b8:	str	r3, [fp, #-8]
   243bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   243c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   243c4:	bl	137ec <_start@@Base+0x10dc>
   243c8:	strd	r0, [fp, #-20]	; 0xffffffec
   243cc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   243d0:	add	r1, pc, #784	; 0x310
   243d4:	ldrd	r0, [r1]
   243d8:	cmp	r3, r1
   243dc:	cmpeq	r2, r0
   243e0:	bhi	244e8 <_start@@Base+0x11dd8>
   243e4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   243e8:	add	r1, pc, #768	; 0x300
   243ec:	ldrd	r0, [r1]
   243f0:	cmp	r3, r1
   243f4:	cmpeq	r2, r0
   243f8:	bne	244e0 <_start@@Base+0x11dd0>
   243fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24400:	add	r3, r3, #8
   24404:	str	r3, [fp, #-36]	; 0xffffffdc
   24408:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2440c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24410:	bl	137ec <_start@@Base+0x10dc>
   24414:	strd	r0, [fp, #-20]	; 0xffffffec
   24418:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2441c:	add	r1, pc, #724	; 0x2d4
   24420:	ldrd	r0, [r1]
   24424:	cmp	r3, r1
   24428:	cmpeq	r2, r0
   2442c:	bne	244d8 <_start@@Base+0x11dc8>
   24430:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24434:	add	r3, r3, #8
   24438:	str	r3, [fp, #-36]	; 0xffffffdc
   2443c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24440:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24444:	bl	137ec <_start@@Base+0x10dc>
   24448:	strd	r0, [fp, #-20]	; 0xffffffec
   2444c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24450:	mov	r0, #0
   24454:	mov	r1, #-16777216	; 0xff000000
   24458:	and	r2, r2, r0
   2445c:	and	r3, r3, r1
   24460:	cmp	r3, #1912602624	; 0x72000000
   24464:	cmpeq	r2, #0
   24468:	bne	244d0 <_start@@Base+0x11dc0>
   2446c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24470:	str	r3, [fp, #-24]	; 0xffffffe8
   24474:	mov	r3, #1
   24478:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2447c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24480:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24484:	bl	13834 <_start@@Base+0x1124>
   24488:	str	r0, [fp, #-36]	; 0xffffffdc
   2448c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   24490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24494:	cmp	r2, r3
   24498:	beq	244c8 <_start@@Base+0x11db8>
   2449c:	ldr	r3, [fp, #8]
   244a0:	str	r3, [sp, #4]
   244a4:	ldr	r3, [fp, #4]
   244a8:	str	r3, [sp]
   244ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   244b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   244b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   244b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   244bc:	bl	22b9c <_start@@Base+0x1048c>
   244c0:	str	r0, [fp, #-36]	; 0xffffffdc
   244c4:	b	24d38 <_start@@Base+0x12628>
   244c8:	ldr	r3, [fp, #-8]
   244cc:	b	24d3c <_start@@Base+0x1262c>
   244d0:	ldr	r3, [fp, #-8]
   244d4:	b	24d3c <_start@@Base+0x1262c>
   244d8:	ldr	r3, [fp, #-8]
   244dc:	b	24d3c <_start@@Base+0x1262c>
   244e0:	ldr	r3, [fp, #-8]
   244e4:	b	24d3c <_start@@Base+0x1262c>
   244e8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   244ec:	add	r1, pc, #524	; 0x20c
   244f0:	ldrd	r0, [r1]
   244f4:	cmp	r3, r1
   244f8:	cmpeq	r2, r0
   244fc:	bne	24bbc <_start@@Base+0x124ac>
   24500:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24504:	add	r3, r3, #8
   24508:	str	r3, [fp, #-36]	; 0xffffffdc
   2450c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24510:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24514:	bl	137ec <_start@@Base+0x10dc>
   24518:	strd	r0, [fp, #-20]	; 0xffffffec
   2451c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24520:	add	r1, pc, #480	; 0x1e0
   24524:	ldrd	r0, [r1]
   24528:	cmp	r3, r1
   2452c:	cmpeq	r2, r0
   24530:	bhi	24808 <_start@@Base+0x120f8>
   24534:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24538:	add	r1, pc, #464	; 0x1d0
   2453c:	ldrd	r0, [r1]
   24540:	cmp	r3, r1
   24544:	cmpeq	r2, r0
   24548:	bhi	2461c <_start@@Base+0x11f0c>
   2454c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24550:	add	r1, pc, #448	; 0x1c0
   24554:	ldrd	r0, [r1]
   24558:	cmp	r3, r1
   2455c:	cmpeq	r2, r0
   24560:	bne	24614 <_start@@Base+0x11f04>
   24564:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24568:	add	r3, r3, #8
   2456c:	str	r3, [fp, #-36]	; 0xffffffdc
   24570:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24574:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24578:	bl	137ec <_start@@Base+0x10dc>
   2457c:	strd	r0, [fp, #-20]	; 0xffffffec
   24580:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24584:	mov	r0, #0
   24588:	ldr	r1, [pc, #416]	; 24730 <_start@@Base+0x12020>
   2458c:	and	r2, r2, r0
   24590:	and	r3, r3, r1
   24594:	mov	r0, #0
   24598:	ldr	r1, [pc, #404]	; 24734 <_start@@Base+0x12024>
   2459c:	cmp	r3, r1
   245a0:	cmpeq	r2, r0
   245a4:	bne	2460c <_start@@Base+0x11efc>
   245a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   245ac:	str	r3, [fp, #-24]	; 0xffffffe8
   245b0:	mov	r3, #2
   245b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   245b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   245bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   245c0:	bl	13834 <_start@@Base+0x1124>
   245c4:	str	r0, [fp, #-36]	; 0xffffffdc
   245c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   245cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   245d0:	cmp	r2, r3
   245d4:	beq	24604 <_start@@Base+0x11ef4>
   245d8:	ldr	r3, [fp, #8]
   245dc:	str	r3, [sp, #4]
   245e0:	ldr	r3, [fp, #4]
   245e4:	str	r3, [sp]
   245e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   245ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   245f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   245f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   245f8:	bl	18004 <_start@@Base+0x58f4>
   245fc:	str	r0, [fp, #-36]	; 0xffffffdc
   24600:	b	24d38 <_start@@Base+0x12628>
   24604:	ldr	r3, [fp, #-8]
   24608:	b	24d3c <_start@@Base+0x1262c>
   2460c:	ldr	r3, [fp, #-8]
   24610:	b	24d3c <_start@@Base+0x1262c>
   24614:	ldr	r3, [fp, #-8]
   24618:	b	24d3c <_start@@Base+0x1262c>
   2461c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24620:	add	r1, pc, #248	; 0xf8
   24624:	ldrd	r0, [r1]
   24628:	cmp	r3, r1
   2462c:	cmpeq	r2, r0
   24630:	bne	24738 <_start@@Base+0x12028>
   24634:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24638:	add	r3, r3, #8
   2463c:	str	r3, [fp, #-36]	; 0xffffffdc
   24640:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24644:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24648:	bl	137ec <_start@@Base+0x10dc>
   2464c:	strd	r0, [fp, #-20]	; 0xffffffec
   24650:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24654:	mov	r0, #0
   24658:	mvn	r1, #0
   2465c:	and	r2, r2, r0
   24660:	and	r3, r3, r1
   24664:	add	r1, pc, #188	; 0xbc
   24668:	ldrd	r0, [r1]
   2466c:	cmp	r3, r1
   24670:	cmpeq	r2, r0
   24674:	bne	246dc <_start@@Base+0x11fcc>
   24678:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2467c:	str	r3, [fp, #-24]	; 0xffffffe8
   24680:	mov	r3, #4
   24684:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24688:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2468c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24690:	bl	13834 <_start@@Base+0x1124>
   24694:	str	r0, [fp, #-36]	; 0xffffffdc
   24698:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2469c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   246a0:	cmp	r2, r3
   246a4:	beq	246d4 <_start@@Base+0x11fc4>
   246a8:	ldr	r3, [fp, #8]
   246ac:	str	r3, [sp, #4]
   246b0:	ldr	r3, [fp, #4]
   246b4:	str	r3, [sp]
   246b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   246bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   246c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   246c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   246c8:	bl	17bfc <_start@@Base+0x54ec>
   246cc:	str	r0, [fp, #-36]	; 0xffffffdc
   246d0:	b	24d38 <_start@@Base+0x12628>
   246d4:	ldr	r3, [fp, #-8]
   246d8:	b	24d3c <_start@@Base+0x1262c>
   246dc:	ldr	r3, [fp, #-8]
   246e0:	b	24d3c <_start@@Base+0x1262c>
   246e4:	nop			; (mov r0, r0)
   246e8:	stclvs	14, cr2, [r5, #-272]!	; 0xfffffef0
   246ec:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   246f0:	cmnvs	r3, lr, lsr #18
   246f4:			; <UNDEFINED> instruction: 0x46616e74
   246f8:	cmnvs	r3, r5, ror #8
   246fc:	cmnmi	r8, #-2147483620	; 0x8000001c
   24700:	stclvs	14, cr2, [r5, #-276]!	; 0xfffffeec
   24704:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   24708:	stclvs	14, cr2, [r5], #-412	; 0xfffffe64
   2470c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   24710:	stclvs	14, cr2, [r5], #-264	; 0xfffffef8
   24714:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   24718:	stclvs	14, cr2, [r5], #-260	; 0xfffffefc
   2471c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   24720:	stclvs	14, cr2, [r5], #-268	; 0xfffffef4
   24724:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   24728:	andeq	r0, r0, r0
   2472c:	svcvs	0x006c6f72
   24730:			; <UNDEFINED> instruction: 0xffff0000
   24734:	cdpvs	0, 7, cr0, cr9, cr0, {0}
   24738:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2473c:	add	r1, pc, #852	; 0x354
   24740:	ldrd	r0, [r1]
   24744:	cmp	r3, r1
   24748:	cmpeq	r2, r0
   2474c:	bne	24800 <_start@@Base+0x120f0>
   24750:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24754:	add	r3, r3, #8
   24758:	str	r3, [fp, #-36]	; 0xffffffdc
   2475c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24760:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24764:	bl	137ec <_start@@Base+0x10dc>
   24768:	strd	r0, [fp, #-20]	; 0xffffffec
   2476c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24770:	mov	r0, #0
   24774:	ldr	r1, [pc, #860]	; 24ad8 <_start@@Base+0x123c8>
   24778:	and	r2, r2, r0
   2477c:	and	r3, r3, r1
   24780:	mov	r0, #0
   24784:	ldr	r1, [pc, #848]	; 24adc <_start@@Base+0x123cc>
   24788:	cmp	r3, r1
   2478c:	cmpeq	r2, r0
   24790:	bne	247f8 <_start@@Base+0x120e8>
   24794:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24798:	str	r3, [fp, #-24]	; 0xffffffe8
   2479c:	mov	r3, #2
   247a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   247a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   247a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   247ac:	bl	13834 <_start@@Base+0x1124>
   247b0:	str	r0, [fp, #-36]	; 0xffffffdc
   247b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   247b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   247bc:	cmp	r2, r3
   247c0:	beq	247f0 <_start@@Base+0x120e0>
   247c4:	ldr	r3, [fp, #8]
   247c8:	str	r3, [sp, #4]
   247cc:	ldr	r3, [fp, #4]
   247d0:	str	r3, [sp]
   247d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   247d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   247dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   247e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   247e4:	bl	172d8 <_start@@Base+0x4bc8>
   247e8:	str	r0, [fp, #-36]	; 0xffffffdc
   247ec:	b	24d38 <_start@@Base+0x12628>
   247f0:	ldr	r3, [fp, #-8]
   247f4:	b	24d3c <_start@@Base+0x1262c>
   247f8:	ldr	r3, [fp, #-8]
   247fc:	b	24d3c <_start@@Base+0x1262c>
   24800:	ldr	r3, [fp, #-8]
   24804:	b	24d3c <_start@@Base+0x1262c>
   24808:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2480c:	add	r1, pc, #652	; 0x28c
   24810:	ldrd	r0, [r1]
   24814:	cmp	r3, r1
   24818:	cmpeq	r2, r0
   2481c:	bhi	248f0 <_start@@Base+0x121e0>
   24820:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24824:	add	r1, pc, #628	; 0x274
   24828:	ldrd	r0, [r1]
   2482c:	cmp	r3, r1
   24830:	cmpeq	r2, r0
   24834:	bne	248e8 <_start@@Base+0x121d8>
   24838:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2483c:	add	r3, r3, #8
   24840:	str	r3, [fp, #-36]	; 0xffffffdc
   24844:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24848:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2484c:	bl	137ec <_start@@Base+0x10dc>
   24850:	strd	r0, [fp, #-20]	; 0xffffffec
   24854:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24858:	mvn	r0, #255	; 0xff
   2485c:	mvn	r1, #0
   24860:	and	r2, r2, r0
   24864:	and	r3, r3, r1
   24868:	add	r1, pc, #568	; 0x238
   2486c:	ldrd	r0, [r1]
   24870:	cmp	r3, r1
   24874:	cmpeq	r2, r0
   24878:	bne	248e0 <_start@@Base+0x121d0>
   2487c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24880:	str	r3, [fp, #-24]	; 0xffffffe8
   24884:	mov	r3, #7
   24888:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2488c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24890:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24894:	bl	13834 <_start@@Base+0x1124>
   24898:	str	r0, [fp, #-36]	; 0xffffffdc
   2489c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   248a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   248a4:	cmp	r2, r3
   248a8:	beq	248d8 <_start@@Base+0x121c8>
   248ac:	ldr	r3, [fp, #8]
   248b0:	str	r3, [sp, #4]
   248b4:	ldr	r3, [fp, #4]
   248b8:	str	r3, [sp]
   248bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   248c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   248c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   248c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   248cc:	bl	179cc <_start@@Base+0x52bc>
   248d0:	str	r0, [fp, #-36]	; 0xffffffdc
   248d4:	b	24d38 <_start@@Base+0x12628>
   248d8:	ldr	r3, [fp, #-8]
   248dc:	b	24d3c <_start@@Base+0x1262c>
   248e0:	ldr	r3, [fp, #-8]
   248e4:	b	24d3c <_start@@Base+0x1262c>
   248e8:	ldr	r3, [fp, #-8]
   248ec:	b	24d3c <_start@@Base+0x1262c>
   248f0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   248f4:	add	r1, pc, #436	; 0x1b4
   248f8:	ldrd	r0, [r1]
   248fc:	cmp	r3, r1
   24900:	cmpeq	r2, r0
   24904:	bhi	249d8 <_start@@Base+0x122c8>
   24908:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2490c:	add	r1, pc, #420	; 0x1a4
   24910:	ldrd	r0, [r1]
   24914:	cmp	r3, r1
   24918:	cmpeq	r2, r0
   2491c:	bne	249d0 <_start@@Base+0x122c0>
   24920:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24924:	add	r3, r3, #8
   24928:	str	r3, [fp, #-36]	; 0xffffffdc
   2492c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24930:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24934:	bl	137ec <_start@@Base+0x10dc>
   24938:	strd	r0, [fp, #-20]	; 0xffffffec
   2493c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24940:	mvn	r0, #255	; 0xff
   24944:	mvn	r1, #0
   24948:	and	r2, r2, r0
   2494c:	and	r3, r3, r1
   24950:	add	r1, pc, #360	; 0x168
   24954:	ldrd	r0, [r1]
   24958:	cmp	r3, r1
   2495c:	cmpeq	r2, r0
   24960:	bne	249c8 <_start@@Base+0x122b8>
   24964:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24968:	str	r3, [fp, #-24]	; 0xffffffe8
   2496c:	mov	r3, #7
   24970:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24974:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24978:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2497c:	bl	13834 <_start@@Base+0x1124>
   24980:	str	r0, [fp, #-36]	; 0xffffffdc
   24984:	ldr	r2, [fp, #-36]	; 0xffffffdc
   24988:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2498c:	cmp	r2, r3
   24990:	beq	249c0 <_start@@Base+0x122b0>
   24994:	ldr	r3, [fp, #8]
   24998:	str	r3, [sp, #4]
   2499c:	ldr	r3, [fp, #4]
   249a0:	str	r3, [sp]
   249a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   249a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   249ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   249b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   249b4:	bl	176e8 <_start@@Base+0x4fd8>
   249b8:	str	r0, [fp, #-36]	; 0xffffffdc
   249bc:	b	24d38 <_start@@Base+0x12628>
   249c0:	ldr	r3, [fp, #-8]
   249c4:	b	24d3c <_start@@Base+0x1262c>
   249c8:	ldr	r3, [fp, #-8]
   249cc:	b	24d3c <_start@@Base+0x1262c>
   249d0:	ldr	r3, [fp, #-8]
   249d4:	b	24d3c <_start@@Base+0x1262c>
   249d8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   249dc:	add	r1, pc, #228	; 0xe4
   249e0:	ldrd	r0, [r1]
   249e4:	cmp	r3, r1
   249e8:	cmpeq	r2, r0
   249ec:	bne	24bb4 <_start@@Base+0x124a4>
   249f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   249f4:	add	r3, r3, #8
   249f8:	str	r3, [fp, #-36]	; 0xffffffdc
   249fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24a00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24a04:	bl	137ec <_start@@Base+0x10dc>
   24a08:	strd	r0, [fp, #-20]	; 0xffffffec
   24a0c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24a10:	mvn	r0, #255	; 0xff
   24a14:	mvn	r1, #0
   24a18:	and	r2, r2, r0
   24a1c:	and	r3, r3, r1
   24a20:	add	r1, pc, #168	; 0xa8
   24a24:	ldrd	r0, [r1]
   24a28:	cmp	r3, r1
   24a2c:	cmpeq	r2, r0
   24a30:	bne	24a90 <_start@@Base+0x12380>
   24a34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24a38:	str	r3, [fp, #-24]	; 0xffffffe8
   24a3c:	mov	r3, #7
   24a40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24a44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24a48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24a4c:	bl	13834 <_start@@Base+0x1124>
   24a50:	str	r0, [fp, #-36]	; 0xffffffdc
   24a54:	ldr	r2, [fp, #-36]	; 0xffffffdc
   24a58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24a5c:	cmp	r2, r3
   24a60:	beq	24ae0 <_start@@Base+0x123d0>
   24a64:	ldr	r3, [fp, #8]
   24a68:	str	r3, [sp, #4]
   24a6c:	ldr	r3, [fp, #4]
   24a70:	str	r3, [sp]
   24a74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24a78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24a7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24a80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24a84:	bl	174c0 <_start@@Base+0x4db0>
   24a88:	str	r0, [fp, #-36]	; 0xffffffdc
   24a8c:	b	24d38 <_start@@Base+0x12628>
   24a90:	nop			; (mov r0, r0)
   24a94:	b	24ae4 <_start@@Base+0x123d4>
   24a98:	stclvs	14, cr2, [r5], #-280	; 0xfffffee8
   24a9c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   24aa0:	stclvs	14, cr2, [r5], #-416	; 0xfffffe60
   24aa4:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   24aa8:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   24aac:	ldrbvs	r5, [r8, #-3941]!	; 0xfffff09b
   24ab0:	stclvs	14, cr2, [r5], #-436	; 0xfffffe4c
   24ab4:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   24ab8:	stclvs	14, cr2, [r5], #-420	; 0xfffffe5c
   24abc:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   24ac0:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   24ac4:	cdpvs	15, 7, cr5, cr4, cr5, {3}
   24ac8:	stclvs	14, cr2, [r5], #-440	; 0xfffffe48
   24acc:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   24ad0:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   24ad4:	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
   24ad8:			; <UNDEFINED> instruction: 0xffff0000
   24adc:	svcvs	0x006f0000
   24ae0:	nop			; (mov r0, r0)
   24ae4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24ae8:	add	r1, pc, #600	; 0x258
   24aec:	ldrd	r0, [r1]
   24af0:	cmp	r3, r1
   24af4:	cmpeq	r2, r0
   24af8:	bne	24bac <_start@@Base+0x1249c>
   24afc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24b00:	add	r3, r3, #8
   24b04:	str	r3, [fp, #-36]	; 0xffffffdc
   24b08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24b0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24b10:	bl	137ec <_start@@Base+0x10dc>
   24b14:	strd	r0, [fp, #-20]	; 0xffffffec
   24b18:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24b1c:	mov	r0, #0
   24b20:	mvn	r1, #255	; 0xff
   24b24:	and	r2, r2, r0
   24b28:	and	r3, r3, r1
   24b2c:	add	r1, pc, #540	; 0x21c
   24b30:	ldrd	r0, [r1]
   24b34:	cmp	r3, r1
   24b38:	cmpeq	r2, r0
   24b3c:	bne	24ba4 <_start@@Base+0x12494>
   24b40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24b44:	str	r3, [fp, #-24]	; 0xffffffe8
   24b48:	mov	r3, #3
   24b4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24b50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24b54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24b58:	bl	13834 <_start@@Base+0x1124>
   24b5c:	str	r0, [fp, #-36]	; 0xffffffdc
   24b60:	ldr	r2, [fp, #-36]	; 0xffffffdc
   24b64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24b68:	cmp	r2, r3
   24b6c:	beq	24b9c <_start@@Base+0x1248c>
   24b70:	ldr	r3, [fp, #8]
   24b74:	str	r3, [sp, #4]
   24b78:	ldr	r3, [fp, #4]
   24b7c:	str	r3, [sp]
   24b80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24b84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24b88:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24b8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24b90:	bl	18bf8 <_start@@Base+0x64e8>
   24b94:	str	r0, [fp, #-36]	; 0xffffffdc
   24b98:	b	24d38 <_start@@Base+0x12628>
   24b9c:	ldr	r3, [fp, #-8]
   24ba0:	b	24d3c <_start@@Base+0x1262c>
   24ba4:	ldr	r3, [fp, #-8]
   24ba8:	b	24d3c <_start@@Base+0x1262c>
   24bac:	ldr	r3, [fp, #-8]
   24bb0:	b	24d3c <_start@@Base+0x1262c>
   24bb4:	ldr	r3, [fp, #-8]
   24bb8:	b	24d3c <_start@@Base+0x1262c>
   24bbc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24bc0:	add	r1, pc, #400	; 0x190
   24bc4:	ldrd	r0, [r1]
   24bc8:	cmp	r3, r1
   24bcc:	cmpeq	r2, r0
   24bd0:	bne	24d30 <_start@@Base+0x12620>
   24bd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24bd8:	add	r3, r3, #8
   24bdc:	str	r3, [fp, #-36]	; 0xffffffdc
   24be0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24be4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24be8:	bl	137ec <_start@@Base+0x10dc>
   24bec:	strd	r0, [fp, #-20]	; 0xffffffec
   24bf0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24bf4:	add	r1, pc, #356	; 0x164
   24bf8:	ldrd	r0, [r1]
   24bfc:	cmp	r3, r1
   24c00:	cmpeq	r2, r0
   24c04:	bne	24d28 <_start@@Base+0x12618>
   24c08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24c0c:	add	r3, r3, #8
   24c10:	str	r3, [fp, #-36]	; 0xffffffdc
   24c14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24c18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24c1c:	bl	137ec <_start@@Base+0x10dc>
   24c20:	strd	r0, [fp, #-20]	; 0xffffffec
   24c24:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24c28:	add	r1, pc, #312	; 0x138
   24c2c:	ldrd	r0, [r1]
   24c30:	cmp	r3, r1
   24c34:	cmpeq	r2, r0
   24c38:	bne	24d20 <_start@@Base+0x12610>
   24c3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24c40:	add	r3, r3, #8
   24c44:	str	r3, [fp, #-36]	; 0xffffffdc
   24c48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24c4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24c50:	bl	137ec <_start@@Base+0x10dc>
   24c54:	strd	r0, [fp, #-20]	; 0xffffffec
   24c58:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24c5c:	add	r1, pc, #268	; 0x10c
   24c60:	ldrd	r0, [r1]
   24c64:	cmp	r3, r1
   24c68:	cmpeq	r2, r0
   24c6c:	bne	24d18 <_start@@Base+0x12608>
   24c70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24c74:	add	r3, r3, #8
   24c78:	str	r3, [fp, #-36]	; 0xffffffdc
   24c7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24c80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24c84:	bl	137ec <_start@@Base+0x10dc>
   24c88:	strd	r0, [fp, #-20]	; 0xffffffec
   24c8c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24c90:	mov	r0, #0
   24c94:	mov	r1, #-16777216	; 0xff000000
   24c98:	and	r2, r2, r0
   24c9c:	and	r3, r3, r1
   24ca0:	cmp	r3, #1694498816	; 0x65000000
   24ca4:	cmpeq	r2, #0
   24ca8:	bne	24d10 <_start@@Base+0x12600>
   24cac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24cb0:	str	r3, [fp, #-24]	; 0xffffffe8
   24cb4:	mov	r3, #1
   24cb8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24cbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24cc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24cc4:	bl	13834 <_start@@Base+0x1124>
   24cc8:	str	r0, [fp, #-36]	; 0xffffffdc
   24ccc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   24cd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24cd4:	cmp	r2, r3
   24cd8:	beq	24d08 <_start@@Base+0x125f8>
   24cdc:	ldr	r3, [fp, #8]
   24ce0:	str	r3, [sp, #4]
   24ce4:	ldr	r3, [fp, #4]
   24ce8:	str	r3, [sp]
   24cec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24cf0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24cf4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24cf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24cfc:	bl	1618c <_start@@Base+0x3a7c>
   24d00:	str	r0, [fp, #-36]	; 0xffffffdc
   24d04:	b	24d38 <_start@@Base+0x12628>
   24d08:	ldr	r3, [fp, #-8]
   24d0c:	b	24d3c <_start@@Base+0x1262c>
   24d10:	ldr	r3, [fp, #-8]
   24d14:	b	24d3c <_start@@Base+0x1262c>
   24d18:	ldr	r3, [fp, #-8]
   24d1c:	b	24d3c <_start@@Base+0x1262c>
   24d20:	ldr	r3, [fp, #-8]
   24d24:	b	24d3c <_start@@Base+0x1262c>
   24d28:	ldr	r3, [fp, #-8]
   24d2c:	b	24d3c <_start@@Base+0x1262c>
   24d30:	ldr	r3, [fp, #-8]
   24d34:	b	24d3c <_start@@Base+0x1262c>
   24d38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24d3c:	mov	r0, r3
   24d40:	sub	sp, fp, #4
   24d44:	pop	{fp, pc}
   24d48:	rsbsvc	r7, r4, r5, ror #18
   24d4c:	svcvs	0x0074656d
   24d50:	andeq	r0, r0, r0
   24d54:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   24d58:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   24d5c:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   24d60:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   24d64:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   24d68:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   24d6c:	cmnpl	r0, #-1073741800	; 0xc0000018
   24d70:	cmnvs	ip, #100, 10	; 0x19000000
   24d74:	svcvs	0x006d496e
   24d78:	push	{fp, lr}
   24d7c:	add	fp, sp, #4
   24d80:	sub	sp, sp, #72	; 0x48
   24d84:	str	r0, [fp, #-56]	; 0xffffffc8
   24d88:	str	r1, [fp, #-60]	; 0xffffffc4
   24d8c:	str	r2, [fp, #-64]	; 0xffffffc0
   24d90:	str	r3, [fp, #-68]	; 0xffffffbc
   24d94:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24d98:	cmp	r3, #0
   24d9c:	bne	24da8 <_start@@Base+0x12698>
   24da0:	sub	r3, fp, #48	; 0x30
   24da4:	b	24dac <_start@@Base+0x1269c>
   24da8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24dac:	str	r3, [fp, #-60]	; 0xffffffc4
   24db0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24db4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24db8:	add	r2, r2, r3
   24dbc:	ldr	r3, [fp, #4]
   24dc0:	str	r3, [sp]
   24dc4:	mov	r3, r2
   24dc8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24dcc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   24dd0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   24dd4:	bl	133e8 <_start@@Base+0xcd8>
   24dd8:	mov	r3, #0
   24ddc:	mov	r2, #0
   24de0:	ldr	r1, [pc, #148]	; 24e7c <_start@@Base+0x1276c>
   24de4:	add	r1, pc, r1
   24de8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24dec:	bl	27ba0 <flatcc_builder_start_buffer@@Base>
   24df0:	mov	r3, r0
   24df4:	cmp	r3, #0
   24df8:	beq	24e04 <_start@@Base+0x126f4>
   24dfc:	mvn	r3, #0
   24e00:	b	24e70 <_start@@Base+0x12760>
   24e04:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24e08:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24e0c:	add	r2, r2, r3
   24e10:	sub	r3, fp, #52	; 0x34
   24e14:	ldr	r1, [fp, #-64]	; 0xffffffc0
   24e18:	ldr	r0, [fp, #-60]	; 0xffffffc4
   24e1c:	bl	1d0cc <_start@@Base+0xa9bc>
   24e20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24e24:	ldr	r3, [r3, #24]
   24e28:	cmp	r3, #0
   24e2c:	beq	24e3c <_start@@Base+0x1272c>
   24e30:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24e34:	ldr	r3, [r3, #24]
   24e38:	b	24e70 <_start@@Base+0x12760>
   24e3c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24e40:	mov	r1, r3
   24e44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24e48:	bl	27cf8 <flatcc_builder_end_buffer@@Base>
   24e4c:	mov	r3, r0
   24e50:	cmp	r3, #0
   24e54:	bne	24e60 <_start@@Base+0x12750>
   24e58:	mvn	r3, #0
   24e5c:	b	24e70 <_start@@Base+0x12760>
   24e60:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24e64:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24e68:	str	r2, [r3, #40]	; 0x28
   24e6c:	mov	r3, #0
   24e70:	mov	r0, r3
   24e74:	sub	sp, fp, #4
   24e78:	pop	{fp, pc}
   24e7c:	ldrdeq	r0, [r1], -r4
   24e80:	push	{fp, lr}
   24e84:	add	fp, sp, #4
   24e88:	sub	sp, sp, #48	; 0x30
   24e8c:	str	r0, [fp, #-40]	; 0xffffffd8
   24e90:	str	r1, [fp, #-44]	; 0xffffffd4
   24e94:	str	r2, [fp, #-48]	; 0xffffffd0
   24e98:	str	r3, [fp, #-52]	; 0xffffffcc
   24e9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24ea0:	str	r3, [fp, #-12]
   24ea4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24ea8:	cmp	r3, #0
   24eac:	beq	24ec8 <_start@@Base+0x127b8>
   24eb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24eb4:	ldr	r3, [pc, #440]	; 25074 <_start@@Base+0x12964>
   24eb8:	add	r3, pc, r3
   24ebc:	mov	r1, r3
   24ec0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   24ec4:	bl	1268c <fprintf@plt>
   24ec8:	mov	r3, #0
   24ecc:	str	r3, [fp, #-8]
   24ed0:	b	25004 <_start@@Base+0x128f4>
   24ed4:	ldr	r3, [fp, #-8]
   24ed8:	and	r3, r3, #15
   24edc:	cmp	r3, #0
   24ee0:	bne	24f28 <_start@@Base+0x12818>
   24ee4:	ldr	r3, [fp, #-8]
   24ee8:	cmp	r3, #0
   24eec:	beq	24f0c <_start@@Base+0x127fc>
   24ef0:	sub	r3, fp, #32
   24ef4:	mov	r2, r3
   24ef8:	ldr	r3, [pc, #376]	; 25078 <_start@@Base+0x12968>
   24efc:	add	r3, pc, r3
   24f00:	mov	r1, r3
   24f04:	ldr	r0, [fp, #-52]	; 0xffffffcc
   24f08:	bl	1268c <fprintf@plt>
   24f0c:	ldr	r2, [fp, #-8]
   24f10:	ldr	r3, [pc, #356]	; 2507c <_start@@Base+0x1296c>
   24f14:	add	r3, pc, r3
   24f18:	mov	r1, r3
   24f1c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   24f20:	bl	1268c <fprintf@plt>
   24f24:	b	24f44 <_start@@Base+0x12834>
   24f28:	ldr	r3, [fp, #-8]
   24f2c:	and	r3, r3, #7
   24f30:	cmp	r3, #0
   24f34:	bne	24f44 <_start@@Base+0x12834>
   24f38:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24f3c:	mov	r0, #32
   24f40:	bl	126e0 <fputc@plt>
   24f44:	ldr	r2, [fp, #-12]
   24f48:	ldr	r3, [fp, #-8]
   24f4c:	add	r3, r2, r3
   24f50:	ldrb	r3, [r3]
   24f54:	mov	r2, r3
   24f58:	ldr	r3, [pc, #288]	; 25080 <_start@@Base+0x12970>
   24f5c:	add	r3, pc, r3
   24f60:	mov	r1, r3
   24f64:	ldr	r0, [fp, #-52]	; 0xffffffcc
   24f68:	bl	1268c <fprintf@plt>
   24f6c:	ldr	r2, [fp, #-12]
   24f70:	ldr	r3, [fp, #-8]
   24f74:	add	r3, r2, r3
   24f78:	ldrb	r3, [r3]
   24f7c:	cmp	r3, #31
   24f80:	bls	24f9c <_start@@Base+0x1288c>
   24f84:	ldr	r2, [fp, #-12]
   24f88:	ldr	r3, [fp, #-8]
   24f8c:	add	r3, r2, r3
   24f90:	ldrb	r3, [r3]
   24f94:	cmp	r3, #126	; 0x7e
   24f98:	bls	24fb8 <_start@@Base+0x128a8>
   24f9c:	ldr	r3, [fp, #-8]
   24fa0:	and	r3, r3, #15
   24fa4:	sub	r2, fp, #4
   24fa8:	add	r3, r2, r3
   24fac:	mov	r2, #46	; 0x2e
   24fb0:	strb	r2, [r3, #-28]	; 0xffffffe4
   24fb4:	b	24fdc <_start@@Base+0x128cc>
   24fb8:	ldr	r3, [fp, #-8]
   24fbc:	and	r3, r3, #15
   24fc0:	ldr	r1, [fp, #-12]
   24fc4:	ldr	r2, [fp, #-8]
   24fc8:	add	r2, r1, r2
   24fcc:	ldrb	r2, [r2]
   24fd0:	sub	r1, fp, #4
   24fd4:	add	r3, r1, r3
   24fd8:	strb	r2, [r3, #-28]	; 0xffffffe4
   24fdc:	ldr	r3, [fp, #-8]
   24fe0:	and	r3, r3, #15
   24fe4:	add	r3, r3, #1
   24fe8:	sub	r2, fp, #4
   24fec:	add	r3, r2, r3
   24ff0:	mov	r2, #0
   24ff4:	strb	r2, [r3, #-28]	; 0xffffffe4
   24ff8:	ldr	r3, [fp, #-8]
   24ffc:	add	r3, r3, #1
   25000:	str	r3, [fp, #-8]
   25004:	ldr	r2, [fp, #-8]
   25008:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2500c:	cmp	r2, r3
   25010:	bcc	24ed4 <_start@@Base+0x127c4>
   25014:	b	2503c <_start@@Base+0x1292c>
   25018:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2501c:	mov	r2, #3
   25020:	mov	r1, #1
   25024:	ldr	r0, [pc, #88]	; 25084 <_start@@Base+0x12974>
   25028:	add	r0, pc, r0
   2502c:	bl	12638 <fwrite@plt>
   25030:	ldr	r3, [fp, #-8]
   25034:	add	r3, r3, #1
   25038:	str	r3, [fp, #-8]
   2503c:	ldr	r3, [fp, #-8]
   25040:	and	r3, r3, #15
   25044:	cmp	r3, #0
   25048:	bne	25018 <_start@@Base+0x12908>
   2504c:	sub	r3, fp, #32
   25050:	mov	r2, r3
   25054:	ldr	r3, [pc, #44]	; 25088 <_start@@Base+0x12978>
   25058:	add	r3, pc, r3
   2505c:	mov	r1, r3
   25060:	ldr	r0, [fp, #-52]	; 0xffffffcc
   25064:	bl	1268c <fprintf@plt>
   25068:	nop			; (mov r0, r0)
   2506c:	sub	sp, fp, #4
   25070:	pop	{fp, pc}
   25074:	andeq	r0, r1, r8, lsl #14
   25078:	andeq	r0, r1, ip, asr #13
   2507c:			; <UNDEFINED> instruction: 0x000106bc
   25080:	andeq	r0, r1, ip, ror r6
   25084:			; <UNDEFINED> instruction: 0x000105b8
   25088:	andeq	r0, r1, r0, ror r5
   2508c:	push	{fp, lr}
   25090:	add	fp, sp, #4
   25094:	sub	sp, sp, #48	; 0x30
   25098:	str	r0, [fp, #-40]	; 0xffffffd8
   2509c:	str	r1, [fp, #-44]	; 0xffffffd4
   250a0:	str	r2, [fp, #-48]	; 0xffffffd0
   250a4:	str	r3, [fp, #-52]	; 0xffffffcc
   250a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   250ac:	str	r3, [fp, #-12]
   250b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   250b4:	cmp	r3, #0
   250b8:	beq	250c4 <_start@@Base+0x129b4>
   250bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   250c0:	b	250cc <_start@@Base+0x129bc>
   250c4:	ldr	r3, [pc, #228]	; 251b0 <_start@@Base+0x12aa0>
   250c8:	add	r3, pc, r3
   250cc:	str	r3, [fp, #-40]	; 0xffffffd8
   250d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   250d4:	ldr	r3, [pc, #216]	; 251b4 <_start@@Base+0x12aa4>
   250d8:	add	r3, pc, r3
   250dc:	mov	r1, r3
   250e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   250e4:	bl	1268c <fprintf@plt>
   250e8:	mov	r3, #0
   250ec:	str	r3, [fp, #-8]
   250f0:	b	2517c <_start@@Base+0x12a6c>
   250f4:	ldr	r3, [fp, #-8]
   250f8:	and	r3, r3, #15
   250fc:	cmp	r3, #0
   25100:	bne	25120 <_start@@Base+0x12a10>
   25104:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25108:	mov	r2, #4
   2510c:	mov	r1, #1
   25110:	ldr	r0, [pc, #160]	; 251b8 <_start@@Base+0x12aa8>
   25114:	add	r0, pc, r0
   25118:	bl	12638 <fwrite@plt>
   2511c:	b	25148 <_start@@Base+0x12a38>
   25120:	ldr	r3, [fp, #-8]
   25124:	and	r3, r3, #7
   25128:	cmp	r3, #0
   2512c:	bne	25148 <_start@@Base+0x12a38>
   25130:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25134:	mov	r2, #3
   25138:	mov	r1, #1
   2513c:	ldr	r0, [pc, #120]	; 251bc <_start@@Base+0x12aac>
   25140:	add	r0, pc, r0
   25144:	bl	12638 <fwrite@plt>
   25148:	ldr	r2, [fp, #-12]
   2514c:	ldr	r3, [fp, #-8]
   25150:	add	r3, r2, r3
   25154:	ldrb	r3, [r3]
   25158:	mov	r2, r3
   2515c:	ldr	r3, [pc, #92]	; 251c0 <_start@@Base+0x12ab0>
   25160:	add	r3, pc, r3
   25164:	mov	r1, r3
   25168:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2516c:	bl	1268c <fprintf@plt>
   25170:	ldr	r3, [fp, #-8]
   25174:	add	r3, r3, #1
   25178:	str	r3, [fp, #-8]
   2517c:	ldr	r2, [fp, #-8]
   25180:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25184:	cmp	r2, r3
   25188:	bcc	250f4 <_start@@Base+0x129e4>
   2518c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25190:	mov	r2, #4
   25194:	mov	r1, #1
   25198:	ldr	r0, [pc, #36]	; 251c4 <_start@@Base+0x12ab4>
   2519c:	add	r0, pc, r0
   251a0:	bl	12638 <fwrite@plt>
   251a4:	nop			; (mov r0, r0)
   251a8:	sub	sp, fp, #4
   251ac:	pop	{fp, pc}
   251b0:	andeq	r0, r1, ip, lsl r5
   251b4:	andeq	r0, r1, r4, lsl r5
   251b8:	strdeq	r0, [r1], -r8
   251bc:	andeq	r0, r1, r0, lsr #9
   251c0:			; <UNDEFINED> instruction: 0x000104b4
   251c4:	andeq	r0, r1, r4, lsl #9
   251c8:	push	{fp, lr}
   251cc:	add	fp, sp, #4
   251d0:	sub	sp, sp, #40	; 0x28
   251d4:	str	r0, [fp, #-32]	; 0xffffffe0
   251d8:	str	r1, [fp, #-36]	; 0xffffffdc
   251dc:	str	r2, [fp, #-40]	; 0xffffffd8
   251e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   251e4:	cmp	r3, #0
   251e8:	bne	251f4 <_start@@Base+0x12ae4>
   251ec:	sub	r3, fp, #28
   251f0:	b	251f8 <_start@@Base+0x12ae8>
   251f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   251f8:	str	r3, [fp, #-40]	; 0xffffffd8
   251fc:	ldr	r3, [pc, #396]	; 25390 <_start@@Base+0x12c80>
   25200:	add	r3, pc, r3
   25204:	mov	r1, r3
   25208:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2520c:	bl	125e4 <fopen@plt>
   25210:	str	r0, [fp, #-20]	; 0xffffffec
   25214:	mov	r3, #0
   25218:	str	r3, [fp, #-8]
   2521c:	mov	r3, #0
   25220:	str	r3, [fp, #-16]
   25224:	ldr	r3, [fp, #-20]	; 0xffffffec
   25228:	cmp	r3, #0
   2522c:	beq	25330 <_start@@Base+0x12c20>
   25230:	mov	r2, #2
   25234:	mov	r1, #0
   25238:	ldr	r0, [fp, #-20]	; 0xffffffec
   2523c:	bl	126ec <fseek@plt>
   25240:	ldr	r0, [fp, #-20]	; 0xffffffec
   25244:	bl	12608 <ftell@plt>
   25248:	mov	r3, r0
   2524c:	str	r3, [fp, #-8]
   25250:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25254:	ldr	r2, [fp, #-8]
   25258:	str	r2, [r3]
   2525c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25260:	cmp	r3, #0
   25264:	beq	25278 <_start@@Base+0x12b68>
   25268:	ldr	r2, [fp, #-8]
   2526c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25270:	cmp	r2, r3
   25274:	bhi	25338 <_start@@Base+0x12c28>
   25278:	ldr	r0, [fp, #-20]	; 0xffffffec
   2527c:	bl	12620 <rewind@plt>
   25280:	ldr	r3, [fp, #-8]
   25284:	cmp	r3, #0
   25288:	beq	25294 <_start@@Base+0x12b84>
   2528c:	ldr	r3, [fp, #-8]
   25290:	b	25298 <_start@@Base+0x12b88>
   25294:	mov	r3, #1
   25298:	mov	r0, r3
   2529c:	bl	12650 <malloc@plt>
   252a0:	mov	r3, r0
   252a4:	str	r3, [fp, #-16]
   252a8:	ldr	r3, [fp, #-16]
   252ac:	cmp	r3, #0
   252b0:	beq	25340 <_start@@Base+0x12c30>
   252b4:	mov	r3, #0
   252b8:	str	r3, [fp, #-12]
   252bc:	b	252d0 <_start@@Base+0x12bc0>
   252c0:	ldr	r2, [fp, #-12]
   252c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   252c8:	add	r3, r2, r3
   252cc:	str	r3, [fp, #-12]
   252d0:	ldr	r2, [fp, #-16]
   252d4:	ldr	r3, [fp, #-12]
   252d8:	add	r0, r2, r3
   252dc:	ldr	r2, [fp, #-8]
   252e0:	ldr	r3, [fp, #-12]
   252e4:	sub	r2, r2, r3
   252e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   252ec:	mov	r1, #1
   252f0:	bl	12644 <fread@plt>
   252f4:	str	r0, [fp, #-24]	; 0xffffffe8
   252f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   252fc:	cmp	r3, #0
   25300:	bne	252c0 <_start@@Base+0x12bb0>
   25304:	ldr	r2, [fp, #-12]
   25308:	ldr	r3, [fp, #-8]
   2530c:	cmp	r2, r3
   25310:	bne	25348 <_start@@Base+0x12c38>
   25314:	ldr	r0, [fp, #-20]	; 0xffffffec
   25318:	bl	126d4 <fclose@plt>
   2531c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25320:	ldr	r2, [fp, #-8]
   25324:	str	r2, [r3]
   25328:	ldr	r3, [fp, #-16]
   2532c:	b	25384 <_start@@Base+0x12c74>
   25330:	nop			; (mov r0, r0)
   25334:	b	2534c <_start@@Base+0x12c3c>
   25338:	nop			; (mov r0, r0)
   2533c:	b	2534c <_start@@Base+0x12c3c>
   25340:	nop			; (mov r0, r0)
   25344:	b	2534c <_start@@Base+0x12c3c>
   25348:	nop			; (mov r0, r0)
   2534c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25350:	cmp	r3, #0
   25354:	beq	25360 <_start@@Base+0x12c50>
   25358:	ldr	r0, [fp, #-20]	; 0xffffffec
   2535c:	bl	126d4 <fclose@plt>
   25360:	ldr	r3, [fp, #-16]
   25364:	cmp	r3, #0
   25368:	beq	25374 <_start@@Base+0x12c64>
   2536c:	ldr	r0, [fp, #-16]
   25370:	bl	125f0 <free@plt>
   25374:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25378:	ldr	r2, [fp, #-8]
   2537c:	str	r2, [r3]
   25380:	mov	r3, #0
   25384:	mov	r0, r3
   25388:	sub	sp, fp, #4
   2538c:	pop	{fp, pc}
   25390:	andeq	r0, r1, r8, lsr #8

00025394 <verify_parse@@Base>:
   25394:	push	{fp, lr}
   25398:	add	fp, sp, #4
   2539c:	sub	sp, sp, #24
   253a0:	str	r0, [fp, #-24]	; 0xffffffe8
   253a4:	ldr	r3, [pc, #560]	; 255dc <verify_parse@@Base+0x248>
   253a8:	add	r3, pc, r3
   253ac:	mov	r1, r3
   253b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   253b4:	bl	132a0 <_start@@Base+0xb90>
   253b8:	str	r0, [fp, #-8]
   253bc:	ldr	r0, [fp, #-8]
   253c0:	bl	13300 <_start@@Base+0xbf0>
   253c4:	str	r0, [fp, #-12]
   253c8:	ldr	r3, [fp, #-12]
   253cc:	cmp	r3, #0
   253d0:	bne	253f4 <verify_parse@@Base+0x60>
   253d4:	ldr	r3, [pc, #516]	; 255e0 <verify_parse@@Base+0x24c>
   253d8:	add	r3, pc, r3
   253dc:	mov	r2, #45	; 0x2d
   253e0:	ldr	r1, [pc, #508]	; 255e4 <verify_parse@@Base+0x250>
   253e4:	add	r1, pc, r1
   253e8:	ldr	r0, [pc, #504]	; 255e8 <verify_parse@@Base+0x254>
   253ec:	add	r0, pc, r0
   253f0:	bl	12704 <__assert_fail@plt>
   253f4:	ldr	r0, [fp, #-12]
   253f8:	bl	130fc <_start@@Base+0x9ec>
   253fc:	vmov.f32	s14, s0
   25400:	vldr	s15, [pc, #456]	; 255d0 <verify_parse@@Base+0x23c>
   25404:	vcmp.f32	s14, s15
   25408:	vmrs	APSR_nzcv, fpscr
   2540c:	beq	25430 <verify_parse@@Base+0x9c>
   25410:	ldr	r3, [pc, #468]	; 255ec <verify_parse@@Base+0x258>
   25414:	add	r3, pc, r3
   25418:	mov	r2, #46	; 0x2e
   2541c:	ldr	r1, [pc, #460]	; 255f0 <verify_parse@@Base+0x25c>
   25420:	add	r1, pc, r1
   25424:	ldr	r0, [pc, #456]	; 255f4 <verify_parse@@Base+0x260>
   25428:	add	r0, pc, r0
   2542c:	bl	12704 <__assert_fail@plt>
   25430:	ldr	r0, [fp, #-12]
   25434:	bl	13140 <_start@@Base+0xa30>
   25438:	vmov.f32	s14, s0
   2543c:	vldr	s15, [pc, #400]	; 255d4 <verify_parse@@Base+0x240>
   25440:	vcmp.f32	s14, s15
   25444:	vmrs	APSR_nzcv, fpscr
   25448:	beq	2546c <verify_parse@@Base+0xd8>
   2544c:	ldr	r3, [pc, #420]	; 255f8 <verify_parse@@Base+0x264>
   25450:	add	r3, pc, r3
   25454:	mov	r2, #47	; 0x2f
   25458:	ldr	r1, [pc, #412]	; 255fc <verify_parse@@Base+0x268>
   2545c:	add	r1, pc, r1
   25460:	ldr	r0, [pc, #408]	; 25600 <verify_parse@@Base+0x26c>
   25464:	add	r0, pc, r0
   25468:	bl	12704 <__assert_fail@plt>
   2546c:	ldr	r0, [fp, #-12]
   25470:	bl	13188 <_start@@Base+0xa78>
   25474:	vmov.f32	s14, s0
   25478:	vldr	s15, [pc, #344]	; 255d8 <verify_parse@@Base+0x244>
   2547c:	vcmp.f32	s14, s15
   25480:	vmrs	APSR_nzcv, fpscr
   25484:	beq	254a8 <verify_parse@@Base+0x114>
   25488:	ldr	r3, [pc, #372]	; 25604 <verify_parse@@Base+0x270>
   2548c:	add	r3, pc, r3
   25490:	mov	r2, #48	; 0x30
   25494:	ldr	r1, [pc, #364]	; 25608 <verify_parse@@Base+0x274>
   25498:	add	r1, pc, r1
   2549c:	ldr	r0, [pc, #360]	; 2560c <verify_parse@@Base+0x278>
   254a0:	add	r0, pc, r0
   254a4:	bl	12704 <__assert_fail@plt>
   254a8:	ldr	r0, [fp, #-12]
   254ac:	bl	131d0 <_start@@Base+0xac0>
   254b0:	vmov.f64	d6, d0
   254b4:	vldr	d7, [pc, #268]	; 255c8 <verify_parse@@Base+0x234>
   254b8:	vcmp.f64	d6, d7
   254bc:	vmrs	APSR_nzcv, fpscr
   254c0:	beq	254e4 <verify_parse@@Base+0x150>
   254c4:	ldr	r3, [pc, #324]	; 25610 <verify_parse@@Base+0x27c>
   254c8:	add	r3, pc, r3
   254cc:	mov	r2, #49	; 0x31
   254d0:	ldr	r1, [pc, #316]	; 25614 <verify_parse@@Base+0x280>
   254d4:	add	r1, pc, r1
   254d8:	ldr	r0, [pc, #312]	; 25618 <verify_parse@@Base+0x284>
   254dc:	add	r0, pc, r0
   254e0:	bl	12704 <__assert_fail@plt>
   254e4:	ldr	r0, [fp, #-12]
   254e8:	bl	13220 <_start@@Base+0xb10>
   254ec:	mov	r3, r0
   254f0:	cmp	r3, #2
   254f4:	beq	25518 <verify_parse@@Base+0x184>
   254f8:	ldr	r3, [pc, #284]	; 2561c <verify_parse@@Base+0x288>
   254fc:	add	r3, pc, r3
   25500:	mov	r2, #50	; 0x32
   25504:	ldr	r1, [pc, #276]	; 25620 <verify_parse@@Base+0x28c>
   25508:	add	r1, pc, r1
   2550c:	ldr	r0, [pc, #272]	; 25624 <verify_parse@@Base+0x290>
   25510:	add	r0, pc, r0
   25514:	bl	12704 <__assert_fail@plt>
   25518:	ldr	r0, [fp, #-12]
   2551c:	bl	13264 <_start@@Base+0xb54>
   25520:	str	r0, [fp, #-16]
   25524:	ldr	r3, [fp, #-16]
   25528:	cmp	r3, #0
   2552c:	bne	25550 <verify_parse@@Base+0x1bc>
   25530:	ldr	r3, [pc, #240]	; 25628 <verify_parse@@Base+0x294>
   25534:	add	r3, pc, r3
   25538:	mov	r2, #52	; 0x34
   2553c:	ldr	r1, [pc, #232]	; 2562c <verify_parse@@Base+0x298>
   25540:	add	r1, pc, r1
   25544:	ldr	r0, [pc, #228]	; 25630 <verify_parse@@Base+0x29c>
   25548:	add	r0, pc, r0
   2554c:	bl	12704 <__assert_fail@plt>
   25550:	ldr	r0, [fp, #-16]
   25554:	bl	13078 <_start@@Base+0x968>
   25558:	mov	r3, r0
   2555c:	cmp	r3, #5
   25560:	beq	25584 <verify_parse@@Base+0x1f0>
   25564:	ldr	r3, [pc, #200]	; 25634 <verify_parse@@Base+0x2a0>
   25568:	add	r3, pc, r3
   2556c:	mov	r2, #53	; 0x35
   25570:	ldr	r1, [pc, #192]	; 25638 <verify_parse@@Base+0x2a4>
   25574:	add	r1, pc, r1
   25578:	ldr	r0, [pc, #188]	; 2563c <verify_parse@@Base+0x2a8>
   2557c:	add	r0, pc, r0
   25580:	bl	12704 <__assert_fail@plt>
   25584:	ldr	r0, [fp, #-16]
   25588:	bl	130b8 <_start@@Base+0x9a8>
   2558c:	mov	r3, r0
   25590:	cmp	r3, #6
   25594:	beq	255b8 <verify_parse@@Base+0x224>
   25598:	ldr	r3, [pc, #160]	; 25640 <verify_parse@@Base+0x2ac>
   2559c:	add	r3, pc, r3
   255a0:	mov	r2, #54	; 0x36
   255a4:	ldr	r1, [pc, #152]	; 25644 <verify_parse@@Base+0x2b0>
   255a8:	add	r1, pc, r1
   255ac:	ldr	r0, [pc, #148]	; 25648 <verify_parse@@Base+0x2b4>
   255b0:	add	r0, pc, r0
   255b4:	bl	12704 <__assert_fail@plt>
   255b8:	mov	r3, #0
   255bc:	mov	r0, r3
   255c0:	sub	sp, fp, #4
   255c4:	pop	{fp, pc}
   255c8:	andeq	r0, r0, r0
   255cc:	andmi	r0, r8, r0
   255d0:	svccc	0x00800000
   255d4:	andmi	r0, r0, r0
   255d8:	submi	r0, r0, r0
   255dc:	andeq	r0, r1, r0, lsl r2
   255e0:	ldrdeq	r0, [r1], -r4
   255e4:	andeq	r0, r1, r0, ror #4
   255e8:	andeq	r0, r1, r4, asr #5
   255ec:	muleq	r1, r8, r3
   255f0:	andeq	r0, r1, r4, lsr #4
   255f4:	andeq	r0, r1, r8, lsl #5
   255f8:	andeq	r0, r1, ip, asr r3
   255fc:	andeq	r0, r1, r8, ror #3
   25600:	andeq	r0, r1, ip, asr #4
   25604:	andeq	r0, r1, r0, lsr #6
   25608:	andeq	r0, r1, ip, lsr #3
   2560c:	andeq	r0, r1, r0, lsl r2
   25610:	andeq	r0, r1, r4, ror #5
   25614:	andeq	r0, r1, r0, ror r1
   25618:	ldrdeq	r0, [r1], -r4
   2561c:			; <UNDEFINED> instruction: 0x000102b0
   25620:	andeq	r0, r1, ip, lsr r1
   25624:	andeq	r0, r1, r0, lsr #3
   25628:	andeq	r0, r1, r8, ror r2
   2562c:	andeq	r0, r1, r4, lsl #2
   25630:	andeq	r0, r1, r8, ror #2
   25634:	andeq	r0, r1, r4, asr #4
   25638:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   2563c:	andeq	r0, r1, r4, lsr r1
   25640:	andeq	r0, r1, r0, lsl r2
   25644:	muleq	r1, ip, r0
   25648:	andeq	r0, r1, r0, lsl #2

0002564c <test_parse@@Base>:
   2564c:	push	{r4, r5, r6, r7, fp, lr}
   25650:	add	fp, sp, #20
   25654:	sub	sp, sp, #312	; 0x138
   25658:	ldr	r4, [pc, #532]	; 25874 <test_parse@@Base+0x228>
   2565c:	add	r4, pc, r4
   25660:	mov	r3, #0
   25664:	str	r3, [fp, #-24]	; 0xffffffe8
   25668:	sub	r3, fp, #324	; 0x144
   2566c:	str	r3, [fp, #-32]	; 0xffffffe0
   25670:	mvn	r3, #0
   25674:	str	r3, [fp, #-28]	; 0xffffffe4
   25678:	mov	r3, #0
   2567c:	str	r3, [fp, #-36]	; 0xffffffdc
   25680:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25684:	bl	26680 <flatcc_builder_init@@Base>
   25688:	ldr	r3, [pc, #488]	; 25878 <test_parse@@Base+0x22c>
   2568c:	ldr	r3, [r4, r3]
   25690:	ldr	r3, [r3]
   25694:	sub	r2, fp, #44	; 0x2c
   25698:	mov	r1, #10240	; 0x2800
   2569c:	mov	r0, r3
   256a0:	bl	251c8 <_start@@Base+0x12ab8>
   256a4:	str	r0, [fp, #-40]	; 0xffffffd8
   256a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   256ac:	cmp	r3, #0
   256b0:	bne	256e8 <test_parse@@Base+0x9c>
   256b4:	ldr	r3, [pc, #448]	; 2587c <test_parse@@Base+0x230>
   256b8:	ldr	r3, [r4, r3]
   256bc:	ldr	r0, [r3]
   256c0:	ldr	r3, [pc, #432]	; 25878 <test_parse@@Base+0x22c>
   256c4:	ldr	r3, [r4, r3]
   256c8:	ldr	r3, [r3]
   256cc:	mov	r2, r3
   256d0:	ldr	r3, [pc, #424]	; 25880 <test_parse@@Base+0x234>
   256d4:	add	r3, pc, r3
   256d8:	mov	r1, r3
   256dc:	bl	1268c <fprintf@plt>
   256e0:	mvn	r3, #0
   256e4:	b	25868 <test_parse@@Base+0x21c>
   256e8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   256ec:	sub	r1, fp, #92	; 0x5c
   256f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   256f4:	str	r3, [sp]
   256f8:	mov	r3, r2
   256fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25700:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25704:	bl	24d78 <_start@@Base+0x12668>
   25708:	mov	r3, r0
   2570c:	cmp	r3, #0
   25710:	bne	25800 <test_parse@@Base+0x1b4>
   25714:	ldr	r3, [pc, #352]	; 2587c <test_parse@@Base+0x230>
   25718:	ldr	r3, [r4, r3]
   2571c:	ldr	r0, [r3]
   25720:	ldr	r3, [pc, #336]	; 25878 <test_parse@@Base+0x22c>
   25724:	ldr	r3, [r4, r3]
   25728:	ldr	r2, [r3]
   2572c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   25730:	ldr	r1, [pc, #332]	; 25884 <test_parse@@Base+0x238>
   25734:	add	r1, pc, r1
   25738:	bl	1268c <fprintf@plt>
   2573c:	sub	r3, fp, #48	; 0x30
   25740:	mov	r1, r3
   25744:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25748:	bl	2b9ec <flatcc_builder_finalize_aligned_buffer@@Base>
   2574c:	str	r0, [fp, #-24]	; 0xffffffe8
   25750:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25754:	ldr	r3, [pc, #300]	; 25888 <test_parse@@Base+0x23c>
   25758:	ldr	r3, [r4, r3]
   2575c:	ldr	r3, [r3]
   25760:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25764:	ldr	r0, [pc, #288]	; 2588c <test_parse@@Base+0x240>
   25768:	add	r0, pc, r0
   2576c:	bl	24e80 <_start@@Base+0x12770>
   25770:	ldr	r3, [pc, #260]	; 2587c <test_parse@@Base+0x230>
   25774:	ldr	r3, [r4, r3]
   25778:	ldr	r0, [r3]
   2577c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   25780:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25784:	ldr	r1, [pc, #260]	; 25890 <test_parse@@Base+0x244>
   25788:	add	r1, pc, r1
   2578c:	bl	1268c <fprintf@plt>
   25790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25794:	bl	25394 <verify_parse@@Base>
   25798:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2579c:	ldr	r3, [pc, #228]	; 25888 <test_parse@@Base+0x23c>
   257a0:	ldr	r3, [r4, r3]
   257a4:	ldr	r3, [r3]
   257a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   257ac:	ldr	r0, [pc, #224]	; 25894 <test_parse@@Base+0x248>
   257b0:	add	r0, pc, r0
   257b4:	bl	2508c <_start@@Base+0x1297c>
   257b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   257bc:	bl	26904 <flatcc_builder_reset@@Base>
   257c0:	mov	r3, #0
   257c4:	str	r3, [fp, #-28]	; 0xffffffe4
   257c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   257cc:	cmp	r3, #0
   257d0:	beq	257dc <test_parse@@Base+0x190>
   257d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   257d8:	bl	2bb08 <flatcc_builder_aligned_free@@Base>
   257dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   257e0:	cmp	r3, #0
   257e4:	beq	257f0 <test_parse@@Base+0x1a4>
   257e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   257ec:	bl	125f0 <free@plt>
   257f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   257f4:	bl	26934 <flatcc_builder_clear@@Base>
   257f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   257fc:	b	25868 <test_parse@@Base+0x21c>
   25800:	nop			; (mov r0, r0)
   25804:	ldr	r3, [pc, #112]	; 2587c <test_parse@@Base+0x230>
   25808:	ldr	r3, [r4, r3]
   2580c:	ldr	r5, [r3]
   25810:	ldr	r3, [pc, #96]	; 25878 <test_parse@@Base+0x22c>
   25814:	ldr	r3, [r4, r3]
   25818:	ldr	r6, [r3]
   2581c:	ldr	r7, [fp, #-76]	; 0xffffffb4
   25820:	ldr	r3, [fp, #-56]	; 0xffffffc8
   25824:	mov	r2, r3
   25828:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2582c:	sub	r3, r2, r3
   25830:	add	r4, r3, #1
   25834:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25838:	mov	r0, r3
   2583c:	bl	31694 <flatcc_json_parser_error_string@@Base>
   25840:	mov	r3, r0
   25844:	str	r3, [sp, #4]
   25848:	str	r4, [sp]
   2584c:	mov	r3, r7
   25850:	mov	r2, r6
   25854:	ldr	r1, [pc, #60]	; 25898 <test_parse@@Base+0x24c>
   25858:	add	r1, pc, r1
   2585c:	mov	r0, r5
   25860:	bl	1268c <fprintf@plt>
   25864:	b	257c8 <test_parse@@Base+0x17c>
   25868:	mov	r0, r3
   2586c:	sub	sp, fp, #20
   25870:	pop	{r4, r5, r6, r7, fp, pc}
   25874:	muleq	r2, ip, r9
   25878:	andeq	r0, r0, r0, lsl #1
   2587c:	andeq	r0, r0, r8, ror r0
   25880:	andeq	pc, r0, r0, ror #31
   25884:	andeq	pc, r0, r4, lsr #31
   25888:	andeq	r0, r0, r8, lsl #1
   2588c:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   25890:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   25894:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   25898:	strdeq	pc, [r0], -r0

0002589c <main@@Base>:
   2589c:	push	{r4, fp, lr}
   258a0:	add	fp, sp, #8
   258a4:	sub	sp, sp, #12
   258a8:	str	r0, [fp, #-16]
   258ac:	str	r1, [fp, #-20]	; 0xffffffec
   258b0:	ldr	r4, [pc, #148]	; 2594c <main@@Base+0xb0>
   258b4:	add	r4, pc, r4
   258b8:	ldr	r3, [pc, #144]	; 25950 <main@@Base+0xb4>
   258bc:	ldr	r3, [r4, r3]
   258c0:	ldr	r3, [r3]
   258c4:	mov	r2, #16
   258c8:	mov	r1, #1
   258cc:	ldr	r0, [pc, #128]	; 25954 <main@@Base+0xb8>
   258d0:	add	r0, pc, r0
   258d4:	bl	12638 <fwrite@plt>
   258d8:	ldr	r3, [fp, #-16]
   258dc:	cmp	r3, #1
   258e0:	beq	25918 <main@@Base+0x7c>
   258e4:	ldr	r3, [fp, #-16]
   258e8:	cmp	r3, #2
   258ec:	beq	25918 <main@@Base+0x7c>
   258f0:	ldr	r3, [pc, #88]	; 25950 <main@@Base+0xb4>
   258f4:	ldr	r3, [r4, r3]
   258f8:	ldr	r3, [r3]
   258fc:	mov	r2, #63	; 0x3f
   25900:	mov	r1, #1
   25904:	ldr	r0, [pc, #76]	; 25958 <main@@Base+0xbc>
   25908:	add	r0, pc, r0
   2590c:	bl	12638 <fwrite@plt>
   25910:	mov	r0, #1
   25914:	bl	12674 <exit@plt>
   25918:	ldr	r3, [fp, #-16]
   2591c:	cmp	r3, #2
   25920:	bne	25938 <main@@Base+0x9c>
   25924:	ldr	r3, [fp, #-20]	; 0xffffffec
   25928:	ldr	r2, [r3, #4]
   2592c:	ldr	r3, [pc, #40]	; 2595c <main@@Base+0xc0>
   25930:	ldr	r3, [r4, r3]
   25934:	str	r2, [r3]
   25938:	bl	2564c <test_parse@@Base>
   2593c:	mov	r3, r0
   25940:	mov	r0, r3
   25944:	sub	sp, fp, #8
   25948:	pop	{r4, fp, pc}
   2594c:	andeq	r2, r2, r4, asr #14
   25950:	andeq	r0, r0, r8, ror r0
   25954:	andeq	pc, r0, r8, lsl #29
   25958:	andeq	pc, r0, r4, ror #28
   2595c:	andeq	r0, r0, r0, lsl #1
   25960:	push	{fp, lr}
   25964:	add	fp, sp, #4
   25968:	sub	sp, sp, #16
   2596c:	str	r0, [fp, #-16]
   25970:	str	r1, [fp, #-20]	; 0xffffffec
   25974:	mov	r3, #0
   25978:	str	r3, [fp, #-12]
   2597c:	ldr	r3, [fp, #-16]
   25980:	cmp	r3, #3
   25984:	bhi	25990 <main@@Base+0xf4>
   25988:	mov	r3, #4
   2598c:	str	r3, [fp, #-16]
   25990:	sub	r3, fp, #12
   25994:	ldr	r2, [fp, #-20]	; 0xffffffec
   25998:	ldr	r1, [fp, #-16]
   2599c:	mov	r0, r3
   259a0:	bl	12698 <posix_memalign@plt>
   259a4:	str	r0, [fp, #-8]
   259a8:	ldr	r3, [fp, #-8]
   259ac:	cmp	r3, #0
   259b0:	beq	259d4 <main@@Base+0x138>
   259b4:	ldr	r3, [fp, #-12]
   259b8:	cmp	r3, #0
   259bc:	beq	259d4 <main@@Base+0x138>
   259c0:	ldr	r3, [fp, #-12]
   259c4:	mov	r0, r3
   259c8:	bl	125f0 <free@plt>
   259cc:	mov	r3, #0
   259d0:	str	r3, [fp, #-12]
   259d4:	ldr	r3, [fp, #-12]
   259d8:	mov	r0, r3
   259dc:	sub	sp, fp, #4
   259e0:	pop	{fp, pc}
   259e4:	push	{fp}		; (str fp, [sp, #-4]!)
   259e8:	add	fp, sp, #0
   259ec:	sub	sp, sp, #12
   259f0:	str	r0, [fp, #-8]
   259f4:	ldr	r3, [fp, #-8]
   259f8:	mov	r0, r3
   259fc:	add	sp, fp, #0
   25a00:	pop	{fp}		; (ldr fp, [sp], #4)
   25a04:	bx	lr
   25a08:	push	{fp}		; (str fp, [sp, #-4]!)
   25a0c:	add	fp, sp, #0
   25a10:	sub	sp, sp, #12
   25a14:	mov	r3, r0
   25a18:	strb	r3, [fp, #-5]
   25a1c:	ldrb	r3, [fp, #-5]
   25a20:	mov	r0, r3
   25a24:	add	sp, fp, #0
   25a28:	pop	{fp}		; (ldr fp, [sp], #4)
   25a2c:	bx	lr
   25a30:	push	{fp}		; (str fp, [sp, #-4]!)
   25a34:	add	fp, sp, #0
   25a38:	sub	sp, sp, #12
   25a3c:	str	r0, [fp, #-8]
   25a40:	ldr	r3, [fp, #-8]
   25a44:	mov	r0, r3
   25a48:	add	sp, fp, #0
   25a4c:	pop	{fp}		; (ldr fp, [sp], #4)
   25a50:	bx	lr
   25a54:	push	{fp}		; (str fp, [sp, #-4]!)
   25a58:	add	fp, sp, #0
   25a5c:	sub	sp, sp, #12
   25a60:	str	r0, [fp, #-8]
   25a64:	str	r1, [fp, #-12]
   25a68:	ldr	r3, [fp, #-8]
   25a6c:	ldr	r2, [r3]
   25a70:	ldr	r3, [fp, #-8]
   25a74:	ldr	r3, [r3, #4]
   25a78:	cmp	r2, r3
   25a7c:	bne	25aa8 <main@@Base+0x20c>
   25a80:	ldr	r3, [fp, #-12]
   25a84:	cmp	r3, #0
   25a88:	beq	25a9c <main@@Base+0x200>
   25a8c:	ldr	r3, [fp, #-8]
   25a90:	ldr	r2, [r3, #24]
   25a94:	ldr	r3, [fp, #-12]
   25a98:	str	r2, [r3]
   25a9c:	ldr	r3, [fp, #-8]
   25aa0:	ldr	r3, [r3, #8]
   25aa4:	b	25ac4 <main@@Base+0x228>
   25aa8:	ldr	r3, [fp, #-12]
   25aac:	cmp	r3, #0
   25ab0:	beq	25ac0 <main@@Base+0x224>
   25ab4:	ldr	r3, [fp, #-12]
   25ab8:	mov	r2, #0
   25abc:	str	r2, [r3]
   25ac0:	mov	r3, #0
   25ac4:	mov	r0, r3
   25ac8:	add	sp, fp, #0
   25acc:	pop	{fp}		; (ldr fp, [sp], #4)
   25ad0:	bx	lr
   25ad4:	push	{fp, lr}
   25ad8:	add	fp, sp, #4
   25adc:	sub	sp, sp, #16
   25ae0:	str	r0, [fp, #-16]
   25ae4:	str	r1, [fp, #-20]	; 0xffffffec
   25ae8:	ldr	r2, [fp, #-20]	; 0xffffffec
   25aec:	mov	r1, #0
   25af0:	ldr	r0, [fp, #-16]
   25af4:	bl	126c8 <memchr@plt>
   25af8:	str	r0, [fp, #-8]
   25afc:	ldr	r3, [fp, #-8]
   25b00:	cmp	r3, #0
   25b04:	beq	25b18 <main@@Base+0x27c>
   25b08:	ldr	r2, [fp, #-8]
   25b0c:	ldr	r3, [fp, #-16]
   25b10:	sub	r3, r2, r3
   25b14:	b	25b1c <main@@Base+0x280>
   25b18:	ldr	r3, [fp, #-20]	; 0xffffffec
   25b1c:	mov	r0, r3
   25b20:	sub	sp, fp, #4
   25b24:	pop	{fp, pc}

00025b28 <flatcc_builder_default_alloc@@Base>:
   25b28:	push	{fp, lr}
   25b2c:	add	fp, sp, #4
   25b30:	sub	sp, sp, #24
   25b34:	str	r0, [fp, #-16]
   25b38:	str	r1, [fp, #-20]	; 0xffffffec
   25b3c:	str	r2, [fp, #-24]	; 0xffffffe8
   25b40:	str	r3, [fp, #-28]	; 0xffffffe4
   25b44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b48:	cmp	r3, #0
   25b4c:	bne	25b90 <flatcc_builder_default_alloc@@Base+0x68>
   25b50:	ldr	r3, [fp, #-20]	; 0xffffffec
   25b54:	ldr	r3, [r3]
   25b58:	cmp	r3, #0
   25b5c:	beq	25b88 <flatcc_builder_default_alloc@@Base+0x60>
   25b60:	ldr	r3, [fp, #-20]	; 0xffffffec
   25b64:	ldr	r3, [r3]
   25b68:	mov	r0, r3
   25b6c:	bl	125f0 <free@plt>
   25b70:	ldr	r3, [fp, #-20]	; 0xffffffec
   25b74:	mov	r2, #0
   25b78:	str	r2, [r3]
   25b7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25b80:	mov	r2, #0
   25b84:	str	r2, [r3, #4]
   25b88:	mov	r3, #0
   25b8c:	b	25ce4 <flatcc_builder_default_alloc@@Base+0x1bc>
   25b90:	ldr	r3, [fp, #4]
   25b94:	sub	r3, r3, #1
   25b98:	cmp	r3, #6
   25b9c:	addls	pc, pc, r3, lsl #2
   25ba0:	b	25bf0 <flatcc_builder_default_alloc@@Base+0xc8>
   25ba4:	b	25bc0 <flatcc_builder_default_alloc@@Base+0x98>
   25ba8:	b	25bf0 <flatcc_builder_default_alloc@@Base+0xc8>
   25bac:	b	25bf0 <flatcc_builder_default_alloc@@Base+0xc8>
   25bb0:	b	25bd8 <flatcc_builder_default_alloc@@Base+0xb0>
   25bb4:	b	25bcc <flatcc_builder_default_alloc@@Base+0xa4>
   25bb8:	b	25bf0 <flatcc_builder_default_alloc@@Base+0xc8>
   25bbc:	b	25be4 <flatcc_builder_default_alloc@@Base+0xbc>
   25bc0:	mov	r3, #256	; 0x100
   25bc4:	str	r3, [fp, #-8]
   25bc8:	b	25bfc <flatcc_builder_default_alloc@@Base+0xd4>
   25bcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25bd0:	str	r3, [fp, #-8]
   25bd4:	b	25bfc <flatcc_builder_default_alloc@@Base+0xd4>
   25bd8:	mov	r3, #288	; 0x120
   25bdc:	str	r3, [fp, #-8]
   25be0:	b	25bfc <flatcc_builder_default_alloc@@Base+0xd4>
   25be4:	mov	r3, #64	; 0x40
   25be8:	str	r3, [fp, #-8]
   25bec:	b	25bfc <flatcc_builder_default_alloc@@Base+0xd4>
   25bf0:	mov	r3, #32
   25bf4:	str	r3, [fp, #-8]
   25bf8:	nop			; (mov r0, r0)
   25bfc:	b	25c0c <flatcc_builder_default_alloc@@Base+0xe4>
   25c00:	ldr	r3, [fp, #-8]
   25c04:	lsl	r3, r3, #1
   25c08:	str	r3, [fp, #-8]
   25c0c:	ldr	r2, [fp, #-8]
   25c10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25c14:	cmp	r2, r3
   25c18:	bcc	25c00 <flatcc_builder_default_alloc@@Base+0xd8>
   25c1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25c20:	ldr	r2, [r3, #4]
   25c24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25c28:	cmp	r2, r3
   25c2c:	bcc	25c50 <flatcc_builder_default_alloc@@Base+0x128>
   25c30:	ldr	r3, [fp, #-20]	; 0xffffffec
   25c34:	ldr	r3, [r3, #4]
   25c38:	lsr	r2, r3, #1
   25c3c:	ldr	r3, [fp, #-8]
   25c40:	cmp	r2, r3
   25c44:	bcc	25c50 <flatcc_builder_default_alloc@@Base+0x128>
   25c48:	mov	r3, #0
   25c4c:	b	25ce4 <flatcc_builder_default_alloc@@Base+0x1bc>
   25c50:	ldr	r3, [fp, #-20]	; 0xffffffec
   25c54:	ldr	r3, [r3]
   25c58:	ldr	r1, [fp, #-8]
   25c5c:	mov	r0, r3
   25c60:	bl	1262c <realloc@plt>
   25c64:	str	r0, [fp, #-12]
   25c68:	ldr	r3, [fp, #-12]
   25c6c:	cmp	r3, #0
   25c70:	bne	25c7c <flatcc_builder_default_alloc@@Base+0x154>
   25c74:	mvn	r3, #0
   25c78:	b	25ce4 <flatcc_builder_default_alloc@@Base+0x1bc>
   25c7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25c80:	cmp	r3, #0
   25c84:	beq	25cc8 <flatcc_builder_default_alloc@@Base+0x1a0>
   25c88:	ldr	r3, [fp, #-20]	; 0xffffffec
   25c8c:	ldr	r2, [r3, #4]
   25c90:	ldr	r3, [fp, #-8]
   25c94:	cmp	r2, r3
   25c98:	bcs	25cc8 <flatcc_builder_default_alloc@@Base+0x1a0>
   25c9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25ca0:	ldr	r3, [r3, #4]
   25ca4:	ldr	r2, [fp, #-12]
   25ca8:	add	r0, r2, r3
   25cac:	ldr	r3, [fp, #-20]	; 0xffffffec
   25cb0:	ldr	r3, [r3, #4]
   25cb4:	ldr	r2, [fp, #-8]
   25cb8:	sub	r3, r2, r3
   25cbc:	mov	r2, r3
   25cc0:	mov	r1, #0
   25cc4:	bl	126a4 <memset@plt>
   25cc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   25ccc:	ldr	r2, [fp, #-12]
   25cd0:	str	r2, [r3]
   25cd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   25cd8:	ldr	r2, [fp, #-8]
   25cdc:	str	r2, [r3, #4]
   25ce0:	mov	r3, #0
   25ce4:	mov	r0, r3
   25ce8:	sub	sp, fp, #4
   25cec:	pop	{fp, pc}
   25cf0:	push	{fp}		; (str fp, [sp, #-4]!)
   25cf4:	add	fp, sp, #0
   25cf8:	sub	sp, sp, #20
   25cfc:	str	r0, [fp, #-16]
   25d00:	str	r1, [fp, #-20]	; 0xffffffec
   25d04:	ldr	r3, [fp, #-16]
   25d08:	add	r3, r3, #52	; 0x34
   25d0c:	add	r3, r3, #8
   25d10:	str	r3, [fp, #-8]
   25d14:	ldr	r3, [fp, #-16]
   25d18:	ldr	r2, [r3, #60]	; 0x3c
   25d1c:	ldr	r3, [fp, #-16]
   25d20:	ldr	r3, [r3, #28]
   25d24:	add	r2, r2, r3
   25d28:	ldr	r3, [fp, #-16]
   25d2c:	str	r2, [r3, #16]
   25d30:	ldr	r3, [fp, #-8]
   25d34:	ldr	r2, [r3, #4]
   25d38:	ldr	r3, [fp, #-16]
   25d3c:	ldr	r3, [r3, #28]
   25d40:	sub	r2, r2, r3
   25d44:	ldr	r3, [fp, #-16]
   25d48:	str	r2, [r3, #24]
   25d4c:	ldr	r3, [fp, #-16]
   25d50:	ldr	r2, [r3, #24]
   25d54:	ldr	r3, [fp, #-20]	; 0xffffffec
   25d58:	cmp	r2, r3
   25d5c:	bls	25d6c <flatcc_builder_default_alloc@@Base+0x244>
   25d60:	ldr	r3, [fp, #-16]
   25d64:	ldr	r2, [fp, #-20]	; 0xffffffec
   25d68:	str	r2, [r3, #24]
   25d6c:	ldr	r3, [fp, #-16]
   25d70:	ldr	r3, [r3, #32]
   25d74:	ldr	r2, [fp, #-20]	; 0xffffffec
   25d78:	str	r2, [r3, #4]
   25d7c:	nop			; (mov r0, r0)
   25d80:	add	sp, fp, #0
   25d84:	pop	{fp}		; (ldr fp, [sp], #4)
   25d88:	bx	lr
   25d8c:	push	{r4, fp, lr}
   25d90:	add	fp, sp, #8
   25d94:	sub	sp, sp, #36	; 0x24
   25d98:	str	r0, [fp, #-24]	; 0xffffffe8
   25d9c:	str	r1, [fp, #-28]	; 0xffffffe4
   25da0:	str	r2, [fp, #-32]	; 0xffffffe0
   25da4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25da8:	add	r3, r3, #52	; 0x34
   25dac:	add	r3, r3, #8
   25db0:	str	r3, [fp, #-16]
   25db4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25db8:	ldr	r4, [r3, #48]	; 0x30
   25dbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25dc0:	ldr	r0, [r3, #40]	; 0x28
   25dc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25dc8:	ldr	r2, [r3, #28]
   25dcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25dd0:	add	r2, r2, r3
   25dd4:	mov	r3, #1
   25dd8:	str	r3, [sp]
   25ddc:	mov	r3, #1
   25de0:	ldr	r1, [fp, #-16]
   25de4:	blx	r4
   25de8:	mov	r3, r0
   25dec:	cmp	r3, #0
   25df0:	beq	25dfc <flatcc_builder_default_alloc@@Base+0x2d4>
   25df4:	mvn	r3, #0
   25df8:	b	25e0c <flatcc_builder_default_alloc@@Base+0x2e4>
   25dfc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25e04:	bl	25cf0 <flatcc_builder_default_alloc@@Base+0x1c8>
   25e08:	mov	r3, #0
   25e0c:	mov	r0, r3
   25e10:	sub	sp, fp, #8
   25e14:	pop	{r4, fp, pc}
   25e18:	push	{fp, lr}
   25e1c:	add	fp, sp, #4
   25e20:	sub	sp, sp, #16
   25e24:	str	r0, [fp, #-16]
   25e28:	str	r1, [fp, #-20]	; 0xffffffec
   25e2c:	ldr	r3, [fp, #-16]
   25e30:	ldr	r3, [r3, #20]
   25e34:	str	r3, [fp, #-8]
   25e38:	ldr	r3, [fp, #-16]
   25e3c:	ldr	r2, [r3, #20]
   25e40:	ldr	r3, [fp, #-20]	; 0xffffffec
   25e44:	add	r2, r2, r3
   25e48:	ldr	r3, [fp, #-16]
   25e4c:	str	r2, [r3, #20]
   25e50:	ldr	r3, [fp, #-16]
   25e54:	ldr	r2, [r3, #20]
   25e58:	ldr	r3, [fp, #-16]
   25e5c:	ldr	r3, [r3, #24]
   25e60:	cmp	r2, r3
   25e64:	bcc	25e98 <flatcc_builder_default_alloc@@Base+0x370>
   25e68:	ldr	r3, [fp, #-16]
   25e6c:	ldr	r3, [r3, #20]
   25e70:	add	r3, r3, #1
   25e74:	mvn	r2, #3
   25e78:	mov	r1, r3
   25e7c:	ldr	r0, [fp, #-16]
   25e80:	bl	25d8c <flatcc_builder_default_alloc@@Base+0x264>
   25e84:	mov	r3, r0
   25e88:	cmp	r3, #0
   25e8c:	beq	25e98 <flatcc_builder_default_alloc@@Base+0x370>
   25e90:	mov	r3, #0
   25e94:	b	25ea8 <flatcc_builder_default_alloc@@Base+0x380>
   25e98:	ldr	r3, [fp, #-16]
   25e9c:	ldr	r2, [r3, #16]
   25ea0:	ldr	r3, [fp, #-8]
   25ea4:	add	r3, r2, r3
   25ea8:	mov	r0, r3
   25eac:	sub	sp, fp, #4
   25eb0:	pop	{fp, pc}
   25eb4:	push	{fp, lr}
   25eb8:	add	fp, sp, #4
   25ebc:	sub	sp, sp, #8
   25ec0:	str	r0, [fp, #-8]
   25ec4:	str	r1, [fp, #-12]
   25ec8:	ldr	r3, [fp, #-8]
   25ecc:	ldr	r2, [r3, #20]
   25ed0:	ldr	r3, [fp, #-12]
   25ed4:	sub	r2, r2, r3
   25ed8:	ldr	r3, [fp, #-8]
   25edc:	str	r2, [r3, #20]
   25ee0:	ldr	r3, [fp, #-8]
   25ee4:	ldr	r2, [r3, #16]
   25ee8:	ldr	r3, [fp, #-8]
   25eec:	ldr	r3, [r3, #20]
   25ef0:	add	r3, r2, r3
   25ef4:	ldr	r2, [fp, #-12]
   25ef8:	mov	r1, #0
   25efc:	mov	r0, r3
   25f00:	bl	126a4 <memset@plt>
   25f04:	nop			; (mov r0, r0)
   25f08:	sub	sp, fp, #4
   25f0c:	pop	{fp, pc}
   25f10:	push	{fp, lr}
   25f14:	add	fp, sp, #4
   25f18:	sub	sp, sp, #24
   25f1c:	str	r0, [fp, #-16]
   25f20:	str	r1, [fp, #-20]	; 0xffffffec
   25f24:	str	r2, [fp, #-24]	; 0xffffffe8
   25f28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25f2c:	ldr	r0, [fp, #-16]
   25f30:	bl	25e18 <flatcc_builder_default_alloc@@Base+0x2f0>
   25f34:	str	r0, [fp, #-8]
   25f38:	ldr	r3, [fp, #-8]
   25f3c:	cmp	r3, #0
   25f40:	bne	25f4c <flatcc_builder_default_alloc@@Base+0x424>
   25f44:	mov	r3, #0
   25f48:	b	25f60 <flatcc_builder_default_alloc@@Base+0x438>
   25f4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25f50:	ldr	r1, [fp, #-20]	; 0xffffffec
   25f54:	ldr	r0, [fp, #-8]
   25f58:	bl	125fc <memcpy@plt>
   25f5c:	ldr	r3, [fp, #-8]
   25f60:	mov	r0, r3
   25f64:	sub	sp, fp, #4
   25f68:	pop	{fp, pc}
   25f6c:	push	{fp, lr}
   25f70:	add	fp, sp, #4
   25f74:	sub	sp, sp, #24
   25f78:	str	r0, [fp, #-16]
   25f7c:	str	r1, [fp, #-20]	; 0xffffffec
   25f80:	strh	r2, [fp, #-22]	; 0xffffffea
   25f84:	strh	r3, [fp, #-24]	; 0xffffffe8
   25f88:	ldr	r3, [fp, #-16]
   25f8c:	ldr	r2, [r3, #20]
   25f90:	ldrh	r3, [fp, #-22]	; 0xffffffea
   25f94:	add	r3, r2, r3
   25f98:	sub	r3, r3, #1
   25f9c:	ldrh	r2, [fp, #-22]	; 0xffffffea
   25fa0:	rsb	r2, r2, #0
   25fa4:	and	r3, r3, r2
   25fa8:	str	r3, [fp, #-8]
   25fac:	ldr	r2, [fp, #-8]
   25fb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   25fb4:	add	r2, r2, r3
   25fb8:	ldr	r3, [fp, #-16]
   25fbc:	str	r2, [r3, #20]
   25fc0:	ldr	r3, [fp, #-16]
   25fc4:	ldr	r2, [r3, #20]
   25fc8:	ldr	r3, [fp, #-16]
   25fcc:	ldr	r3, [r3, #24]
   25fd0:	cmp	r2, r3
   25fd4:	bcc	26008 <flatcc_builder_default_alloc@@Base+0x4e0>
   25fd8:	ldr	r3, [fp, #-16]
   25fdc:	ldr	r3, [r3, #20]
   25fe0:	add	r3, r3, #1
   25fe4:	ldr	r2, [pc, #136]	; 26074 <flatcc_builder_default_alloc@@Base+0x54c>
   25fe8:	mov	r1, r3
   25fec:	ldr	r0, [fp, #-16]
   25ff0:	bl	25d8c <flatcc_builder_default_alloc@@Base+0x264>
   25ff4:	mov	r3, r0
   25ff8:	cmp	r3, #0
   25ffc:	beq	26008 <flatcc_builder_default_alloc@@Base+0x4e0>
   26000:	mov	r3, #0
   26004:	b	26068 <flatcc_builder_default_alloc@@Base+0x540>
   26008:	ldr	r3, [fp, #-16]
   2600c:	ldr	r2, [r3, #4]
   26010:	ldrh	r3, [fp, #-24]	; 0xffffffe8
   26014:	lsl	r3, r3, #1
   26018:	add	r3, r2, r3
   2601c:	ldr	r2, [fp, #-8]
   26020:	uxth	r2, r2
   26024:	add	r2, r2, #4
   26028:	uxth	r2, r2
   2602c:	strh	r2, [r3]
   26030:	ldr	r3, [fp, #-16]
   26034:	ldrh	r3, [r3, #8]
   26038:	ldrh	r2, [fp, #-24]	; 0xffffffe8
   2603c:	cmp	r2, r3
   26040:	bcc	26058 <flatcc_builder_default_alloc@@Base+0x530>
   26044:	ldrh	r3, [fp, #-24]	; 0xffffffe8
   26048:	add	r3, r3, #1
   2604c:	uxth	r2, r3
   26050:	ldr	r3, [fp, #-16]
   26054:	strh	r2, [r3, #8]
   26058:	ldr	r3, [fp, #-16]
   2605c:	ldr	r2, [r3, #16]
   26060:	ldr	r3, [fp, #-8]
   26064:	add	r3, r2, r3
   26068:	mov	r0, r3
   2606c:	sub	sp, fp, #4
   26070:	pop	{fp, pc}
   26074:	strdeq	pc, [r0], -ip
   26078:	push	{fp, lr}
   2607c:	add	fp, sp, #4
   26080:	sub	sp, sp, #16
   26084:	str	r0, [fp, #-16]
   26088:	mov	r3, r1
   2608c:	strh	r3, [fp, #-18]	; 0xffffffee
   26090:	ldr	r3, [fp, #-16]
   26094:	ldr	r3, [r3, #20]
   26098:	add	r3, r3, #3
   2609c:	bic	r3, r3, #3
   260a0:	str	r3, [fp, #-8]
   260a4:	ldr	r3, [fp, #-8]
   260a8:	add	r2, r3, #4
   260ac:	ldr	r3, [fp, #-16]
   260b0:	str	r2, [r3, #20]
   260b4:	ldr	r3, [fp, #-16]
   260b8:	ldr	r2, [r3, #20]
   260bc:	ldr	r3, [fp, #-16]
   260c0:	ldr	r3, [r3, #24]
   260c4:	cmp	r2, r3
   260c8:	bls	260f8 <flatcc_builder_default_alloc@@Base+0x5d0>
   260cc:	ldr	r3, [fp, #-16]
   260d0:	ldr	r3, [r3, #20]
   260d4:	ldr	r2, [pc, #168]	; 26184 <flatcc_builder_default_alloc@@Base+0x65c>
   260d8:	mov	r1, r3
   260dc:	ldr	r0, [fp, #-16]
   260e0:	bl	25d8c <flatcc_builder_default_alloc@@Base+0x264>
   260e4:	mov	r3, r0
   260e8:	cmp	r3, #0
   260ec:	beq	260f8 <flatcc_builder_default_alloc@@Base+0x5d0>
   260f0:	mov	r3, #0
   260f4:	b	26178 <flatcc_builder_default_alloc@@Base+0x650>
   260f8:	ldr	r3, [fp, #-16]
   260fc:	ldr	r2, [r3, #4]
   26100:	ldrh	r3, [fp, #-18]	; 0xffffffee
   26104:	lsl	r3, r3, #1
   26108:	add	r3, r2, r3
   2610c:	ldr	r2, [fp, #-8]
   26110:	uxth	r2, r2
   26114:	add	r2, r2, #4
   26118:	uxth	r2, r2
   2611c:	strh	r2, [r3]
   26120:	ldr	r3, [fp, #-16]
   26124:	ldrh	r3, [r3, #8]
   26128:	ldrh	r2, [fp, #-18]	; 0xffffffee
   2612c:	cmp	r2, r3
   26130:	bcc	26148 <flatcc_builder_default_alloc@@Base+0x620>
   26134:	ldrh	r3, [fp, #-18]	; 0xffffffee
   26138:	add	r3, r3, #1
   2613c:	uxth	r2, r3
   26140:	ldr	r3, [fp, #-16]
   26144:	strh	r2, [r3, #8]
   26148:	ldr	r3, [fp, #-16]
   2614c:	ldr	r3, [r3]
   26150:	add	r1, r3, #2
   26154:	ldr	r2, [fp, #-16]
   26158:	str	r1, [r2]
   2615c:	ldr	r2, [fp, #-8]
   26160:	uxth	r2, r2
   26164:	strh	r2, [r3]
   26168:	ldr	r3, [fp, #-16]
   2616c:	ldr	r2, [r3, #16]
   26170:	ldr	r3, [fp, #-8]
   26174:	add	r3, r2, r3
   26178:	mov	r0, r3
   2617c:	sub	sp, fp, #4
   26180:	pop	{fp, pc}
   26184:	strdeq	pc, [r0], -ip
   26188:	push	{r4, fp, lr}
   2618c:	add	fp, sp, #8
   26190:	sub	sp, sp, #36	; 0x24
   26194:	str	r0, [fp, #-24]	; 0xffffffe8
   26198:	str	r1, [fp, #-28]	; 0xffffffe4
   2619c:	str	r2, [fp, #-32]	; 0xffffffe0
   261a0:	str	r3, [fp, #-36]	; 0xffffffdc
   261a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   261a8:	add	r2, r3, #52	; 0x34
   261ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   261b0:	lsl	r3, r3, #3
   261b4:	add	r3, r2, r3
   261b8:	str	r3, [fp, #-16]
   261bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   261c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   261c4:	add	r2, r2, r3
   261c8:	ldr	r3, [fp, #-16]
   261cc:	ldr	r3, [r3, #4]
   261d0:	cmp	r2, r3
   261d4:	bls	26234 <flatcc_builder_default_alloc@@Base+0x70c>
   261d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   261dc:	ldr	r4, [r3, #48]	; 0x30
   261e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   261e4:	ldr	r0, [r3, #40]	; 0x28
   261e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   261ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   261f0:	add	r2, r2, r3
   261f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   261f8:	str	r3, [sp]
   261fc:	ldr	r3, [fp, #4]
   26200:	ldr	r1, [fp, #-16]
   26204:	blx	r4
   26208:	mov	r3, r0
   2620c:	cmp	r3, #0
   26210:	beq	26234 <flatcc_builder_default_alloc@@Base+0x70c>
   26214:	ldr	r3, [pc, #56]	; 26254 <flatcc_builder_default_alloc@@Base+0x72c>
   26218:	add	r3, pc, r3
   2621c:	mov	r2, #308	; 0x134
   26220:	ldr	r1, [pc, #48]	; 26258 <flatcc_builder_default_alloc@@Base+0x730>
   26224:	add	r1, pc, r1
   26228:	ldr	r0, [pc, #44]	; 2625c <flatcc_builder_default_alloc@@Base+0x734>
   2622c:	add	r0, pc, r0
   26230:	bl	12704 <__assert_fail@plt>
   26234:	ldr	r3, [fp, #-16]
   26238:	ldr	r3, [r3]
   2623c:	mov	r2, r3
   26240:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26244:	add	r3, r2, r3
   26248:	mov	r0, r3
   2624c:	sub	sp, fp, #8
   26250:	pop	{r4, fp, pc}
   26254:	strdeq	pc, [r0], -r8
   26258:			; <UNDEFINED> instruction: 0x0000f7b8
   2625c:	andeq	pc, r0, r0, lsl r8	; <UNPREDICTABLE>
   26260:	push	{fp, lr}
   26264:	add	fp, sp, #4
   26268:	sub	sp, sp, #24
   2626c:	str	r0, [fp, #-16]
   26270:	str	r1, [fp, #-20]	; 0xffffffec
   26274:	ldr	r3, [fp, #-16]
   26278:	ldr	r3, [r3, #32]
   2627c:	ldr	r2, [r3, #16]
   26280:	ldr	r3, [fp, #-16]
   26284:	ldr	r3, [r3, #32]
   26288:	ldrh	r3, [r3, #28]
   2628c:	lsl	r3, r3, #1
   26290:	add	r3, r2, r3
   26294:	str	r3, [fp, #-8]
   26298:	ldr	r3, [fp, #-20]	; 0xffffffec
   2629c:	add	r3, r3, #2
   262a0:	lsl	r3, r3, #1
   262a4:	str	r3, [fp, #-12]
   262a8:	mov	r3, #1
   262ac:	str	r3, [sp]
   262b0:	ldr	r3, [fp, #-12]
   262b4:	ldr	r2, [fp, #-8]
   262b8:	mov	r1, #0
   262bc:	ldr	r0, [fp, #-16]
   262c0:	bl	26188 <flatcc_builder_default_alloc@@Base+0x660>
   262c4:	mov	r2, r0
   262c8:	ldr	r3, [fp, #-16]
   262cc:	str	r2, [r3, #4]
   262d0:	ldr	r3, [fp, #-16]
   262d4:	ldr	r3, [r3, #4]
   262d8:	cmp	r3, #0
   262dc:	bne	262e8 <flatcc_builder_default_alloc@@Base+0x7c0>
   262e0:	mvn	r3, #0
   262e4:	b	26360 <flatcc_builder_default_alloc@@Base+0x838>
   262e8:	ldr	r3, [fp, #-16]
   262ec:	ldr	r3, [r3, #4]
   262f0:	add	r2, r3, #4
   262f4:	ldr	r3, [fp, #-16]
   262f8:	str	r2, [r3, #4]
   262fc:	ldr	r3, [fp, #-16]
   26300:	ldr	r3, [r3, #32]
   26304:	ldr	r3, [r3, #20]
   26308:	str	r3, [fp, #-8]
   2630c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26310:	lsl	r3, r3, #1
   26314:	add	r3, r3, #1
   26318:	str	r3, [fp, #-12]
   2631c:	mov	r3, #0
   26320:	str	r3, [sp]
   26324:	ldr	r3, [fp, #-12]
   26328:	ldr	r2, [fp, #-8]
   2632c:	mov	r1, #3
   26330:	ldr	r0, [fp, #-16]
   26334:	bl	26188 <flatcc_builder_default_alloc@@Base+0x660>
   26338:	mov	r2, r0
   2633c:	ldr	r3, [fp, #-16]
   26340:	str	r2, [r3]
   26344:	ldr	r3, [fp, #-16]
   26348:	ldr	r3, [r3]
   2634c:	cmp	r3, #0
   26350:	bne	2635c <flatcc_builder_default_alloc@@Base+0x834>
   26354:	mvn	r3, #0
   26358:	b	26360 <flatcc_builder_default_alloc@@Base+0x838>
   2635c:	mov	r3, #0
   26360:	mov	r0, r3
   26364:	sub	sp, fp, #4
   26368:	pop	{fp, pc}
   2636c:	push	{r4, fp, lr}
   26370:	add	fp, sp, #8
   26374:	sub	sp, sp, #36	; 0x24
   26378:	str	r0, [fp, #-32]	; 0xffffffe0
   2637c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26380:	add	r3, r3, #52	; 0x34
   26384:	add	r3, r3, #40	; 0x28
   26388:	str	r3, [fp, #-24]	; 0xffffffe8
   2638c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26390:	ldr	r3, [r3, #124]	; 0x7c
   26394:	cmp	r3, #0
   26398:	beq	263bc <flatcc_builder_default_alloc@@Base+0x894>
   2639c:	ldr	r3, [pc, #280]	; 264bc <flatcc_builder_default_alloc@@Base+0x994>
   263a0:	add	r3, pc, r3
   263a4:	ldr	r2, [pc, #276]	; 264c0 <flatcc_builder_default_alloc@@Base+0x998>
   263a8:	ldr	r1, [pc, #276]	; 264c4 <flatcc_builder_default_alloc@@Base+0x99c>
   263ac:	add	r1, pc, r1
   263b0:	ldr	r0, [pc, #272]	; 264c8 <flatcc_builder_default_alloc@@Base+0x9a0>
   263b4:	add	r0, pc, r0
   263b8:	bl	12704 <__assert_fail@plt>
   263bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   263c0:	ldr	r2, [r3, #124]	; 0x7c
   263c4:	mov	r3, #0
   263c8:	str	r3, [sp]
   263cc:	mov	r3, #16
   263d0:	mov	r1, #6
   263d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   263d8:	bl	26188 <flatcc_builder_default_alloc@@Base+0x660>
   263dc:	mov	r3, r0
   263e0:	cmp	r3, #0
   263e4:	bne	263f0 <flatcc_builder_default_alloc@@Base+0x8c8>
   263e8:	mvn	r3, #0
   263ec:	b	264b0 <flatcc_builder_default_alloc@@Base+0x988>
   263f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   263f4:	mov	r2, #16
   263f8:	str	r2, [r3, #124]	; 0x7c
   263fc:	mov	r3, #256	; 0x100
   26400:	str	r3, [fp, #-16]
   26404:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26408:	ldr	r4, [r3, #48]	; 0x30
   2640c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26410:	ldr	r0, [r3, #40]	; 0x28
   26414:	mov	r3, #5
   26418:	str	r3, [sp]
   2641c:	mov	r3, #1
   26420:	ldr	r2, [fp, #-16]
   26424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26428:	blx	r4
   2642c:	mov	r3, r0
   26430:	cmp	r3, #0
   26434:	beq	2644c <flatcc_builder_default_alloc@@Base+0x924>
   26438:	mvn	r3, #0
   2643c:	b	264b0 <flatcc_builder_default_alloc@@Base+0x988>
   26440:	ldr	r3, [fp, #-16]
   26444:	lsl	r3, r3, #1
   26448:	str	r3, [fp, #-16]
   2644c:	ldr	r3, [fp, #-16]
   26450:	lsl	r2, r3, #1
   26454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26458:	ldr	r3, [r3, #4]
   2645c:	cmp	r2, r3
   26460:	bls	26440 <flatcc_builder_default_alloc@@Base+0x918>
   26464:	ldr	r3, [fp, #-16]
   26468:	lsr	r3, r3, #2
   2646c:	str	r3, [fp, #-16]
   26470:	mov	r3, #0
   26474:	str	r3, [fp, #-20]	; 0xffffffec
   26478:	b	26488 <flatcc_builder_default_alloc@@Base+0x960>
   2647c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26480:	add	r3, r3, #1
   26484:	str	r3, [fp, #-20]	; 0xffffffec
   26488:	mov	r2, #1
   2648c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26490:	lsl	r2, r2, r3
   26494:	ldr	r3, [fp, #-16]
   26498:	cmp	r2, r3
   2649c:	bcc	2647c <flatcc_builder_default_alloc@@Base+0x954>
   264a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   264a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   264a8:	str	r2, [r3, #116]	; 0x74
   264ac:	mov	r3, #0
   264b0:	mov	r0, r3
   264b4:	sub	sp, fp, #8
   264b8:	pop	{r4, fp, pc}
   264bc:	andeq	pc, r0, r4, ror #20
   264c0:	andeq	r0, r0, r6, asr r1
   264c4:	andeq	pc, r0, r0, lsr r6	; <UNPREDICTABLE>
   264c8:	andeq	pc, r0, ip, lsl #13
   264cc:	push	{fp, lr}
   264d0:	add	fp, sp, #4
   264d4:	sub	sp, sp, #16
   264d8:	str	r0, [fp, #-16]
   264dc:	str	r1, [fp, #-20]	; 0xffffffec
   264e0:	ldr	r3, [fp, #-16]
   264e4:	ldr	r3, [r3, #116]	; 0x74
   264e8:	cmp	r3, #0
   264ec:	bne	2650c <flatcc_builder_default_alloc@@Base+0x9e4>
   264f0:	ldr	r0, [fp, #-16]
   264f4:	bl	2636c <flatcc_builder_default_alloc@@Base+0x844>
   264f8:	mov	r3, r0
   264fc:	cmp	r3, #0
   26500:	beq	2650c <flatcc_builder_default_alloc@@Base+0x9e4>
   26504:	mov	r3, #0
   26508:	b	26538 <flatcc_builder_default_alloc@@Base+0xa10>
   2650c:	ldr	r3, [fp, #-16]
   26510:	ldr	r3, [r3, #92]	; 0x5c
   26514:	str	r3, [fp, #-8]
   26518:	ldr	r3, [fp, #-16]
   2651c:	ldr	r3, [r3, #116]	; 0x74
   26520:	rsb	r3, r3, #32
   26524:	ldr	r2, [fp, #-20]	; 0xffffffec
   26528:	lsr	r3, r2, r3
   2652c:	lsl	r3, r3, #2
   26530:	ldr	r2, [fp, #-8]
   26534:	add	r3, r2, r3
   26538:	mov	r0, r3
   2653c:	sub	sp, fp, #4
   26540:	pop	{fp, pc}

00026544 <flatcc_builder_flush_vtable_cache@@Base>:
   26544:	push	{fp, lr}
   26548:	add	fp, sp, #4
   2654c:	sub	sp, sp, #16
   26550:	str	r0, [fp, #-16]
   26554:	ldr	r3, [fp, #-16]
   26558:	add	r3, r3, #52	; 0x34
   2655c:	add	r3, r3, #40	; 0x28
   26560:	str	r3, [fp, #-8]
   26564:	ldr	r3, [fp, #-16]
   26568:	ldr	r3, [r3, #116]	; 0x74
   2656c:	cmp	r3, #0
   26570:	beq	265ac <flatcc_builder_flush_vtable_cache@@Base+0x68>
   26574:	ldr	r3, [fp, #-8]
   26578:	ldr	r0, [r3]
   2657c:	ldr	r3, [fp, #-8]
   26580:	ldr	r3, [r3, #4]
   26584:	mov	r2, r3
   26588:	mov	r1, #0
   2658c:	bl	126a4 <memset@plt>
   26590:	ldr	r3, [fp, #-16]
   26594:	mov	r2, #16
   26598:	str	r2, [r3, #124]	; 0x7c
   2659c:	ldr	r3, [fp, #-16]
   265a0:	mov	r2, #0
   265a4:	str	r2, [r3, #120]	; 0x78
   265a8:	b	265b0 <flatcc_builder_flush_vtable_cache@@Base+0x6c>
   265ac:	nop			; (mov r0, r0)
   265b0:	sub	sp, fp, #4
   265b4:	pop	{fp, pc}

000265b8 <flatcc_builder_custom_init@@Base>:
   265b8:	push	{r4, fp, lr}
   265bc:	add	fp, sp, #8
   265c0:	sub	sp, sp, #20
   265c4:	str	r0, [fp, #-16]
   265c8:	str	r1, [fp, #-20]	; 0xffffffec
   265cc:	str	r2, [fp, #-24]	; 0xffffffe8
   265d0:	str	r3, [fp, #-28]	; 0xffffffe4
   265d4:	ldr	r4, [pc, #152]	; 26674 <flatcc_builder_custom_init@@Base+0xbc>
   265d8:	add	r4, pc, r4
   265dc:	mov	r2, #232	; 0xe8
   265e0:	mov	r1, #0
   265e4:	ldr	r0, [fp, #-16]
   265e8:	bl	126a4 <memset@plt>
   265ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   265f0:	cmp	r3, #0
   265f4:	bne	2661c <flatcc_builder_custom_init@@Base+0x64>
   265f8:	ldr	r3, [fp, #-16]
   265fc:	mov	r2, #1
   26600:	str	r2, [r3, #184]	; 0xb8
   26604:	ldr	r3, [pc, #108]	; 26678 <flatcc_builder_custom_init@@Base+0xc0>
   26608:	ldr	r3, [r4, r3]
   2660c:	str	r3, [fp, #-20]	; 0xffffffec
   26610:	ldr	r3, [fp, #-16]
   26614:	add	r3, r3, #188	; 0xbc
   26618:	str	r3, [fp, #-24]	; 0xffffffe8
   2661c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26620:	cmp	r3, #0
   26624:	bne	26634 <flatcc_builder_custom_init@@Base+0x7c>
   26628:	ldr	r3, [pc, #76]	; 2667c <flatcc_builder_custom_init@@Base+0xc4>
   2662c:	ldr	r3, [r4, r3]
   26630:	str	r3, [fp, #-28]	; 0xffffffe4
   26634:	ldr	r3, [fp, #-16]
   26638:	ldr	r2, [fp, #4]
   2663c:	str	r2, [r3, #40]	; 0x28
   26640:	ldr	r3, [fp, #-16]
   26644:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26648:	str	r2, [r3, #48]	; 0x30
   2664c:	ldr	r3, [fp, #-16]
   26650:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26654:	str	r2, [r3, #36]	; 0x24
   26658:	ldr	r3, [fp, #-16]
   2665c:	ldr	r2, [fp, #-20]	; 0xffffffec
   26660:	str	r2, [r3, #44]	; 0x2c
   26664:	mov	r3, #0
   26668:	mov	r0, r3
   2666c:	sub	sp, fp, #8
   26670:	pop	{r4, fp, pc}
   26674:	andeq	r1, r2, r0, lsr #20
   26678:	andeq	r0, r0, ip, lsl #1
   2667c:	andeq	r0, r0, r4, lsl #1

00026680 <flatcc_builder_init@@Base>:
   26680:	push	{fp, lr}
   26684:	add	fp, sp, #4
   26688:	sub	sp, sp, #16
   2668c:	str	r0, [fp, #-8]
   26690:	mov	r3, #0
   26694:	str	r3, [sp]
   26698:	mov	r3, #0
   2669c:	mov	r2, #0
   266a0:	mov	r1, #0
   266a4:	ldr	r0, [fp, #-8]
   266a8:	bl	265b8 <flatcc_builder_custom_init@@Base>
   266ac:	mov	r3, r0
   266b0:	mov	r0, r3
   266b4:	sub	sp, fp, #4
   266b8:	pop	{fp, pc}

000266bc <flatcc_builder_custom_reset@@Base>:
   266bc:	push	{r4, fp, lr}
   266c0:	add	fp, sp, #8
   266c4:	sub	sp, sp, #36	; 0x24
   266c8:	str	r0, [fp, #-24]	; 0xffffffe8
   266cc:	str	r1, [fp, #-28]	; 0xffffffe4
   266d0:	str	r2, [fp, #-32]	; 0xffffffe0
   266d4:	mov	r3, #0
   266d8:	str	r3, [fp, #-16]
   266dc:	b	267b8 <flatcc_builder_custom_reset@@Base+0xfc>
   266e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   266e4:	add	r2, r3, #52	; 0x34
   266e8:	ldr	r3, [fp, #-16]
   266ec:	lsl	r3, r3, #3
   266f0:	add	r3, r2, r3
   266f4:	str	r3, [fp, #-20]	; 0xffffffec
   266f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   266fc:	ldr	r3, [r3]
   26700:	cmp	r3, #0
   26704:	beq	2677c <flatcc_builder_custom_reset@@Base+0xc0>
   26708:	ldr	r3, [fp, #-16]
   2670c:	cmp	r3, #5
   26710:	beq	2675c <flatcc_builder_custom_reset@@Base+0xa0>
   26714:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26718:	cmp	r3, #0
   2671c:	beq	2675c <flatcc_builder_custom_reset@@Base+0xa0>
   26720:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26724:	ldr	r4, [r3, #48]	; 0x30
   26728:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2672c:	ldr	r0, [r3, #40]	; 0x28
   26730:	ldr	r3, [fp, #-16]
   26734:	str	r3, [sp]
   26738:	mov	r3, #1
   2673c:	mov	r2, #1
   26740:	ldr	r1, [fp, #-20]	; 0xffffffec
   26744:	blx	r4
   26748:	mov	r3, r0
   2674c:	cmp	r3, #0
   26750:	beq	2675c <flatcc_builder_custom_reset@@Base+0xa0>
   26754:	mvn	r3, #0
   26758:	b	268e8 <flatcc_builder_custom_reset@@Base+0x22c>
   2675c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26760:	ldr	r0, [r3]
   26764:	ldr	r3, [fp, #-20]	; 0xffffffec
   26768:	ldr	r3, [r3, #4]
   2676c:	mov	r2, r3
   26770:	mov	r1, #0
   26774:	bl	126a4 <memset@plt>
   26778:	b	267ac <flatcc_builder_custom_reset@@Base+0xf0>
   2677c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26780:	ldr	r3, [r3, #4]
   26784:	cmp	r3, #0
   26788:	beq	267ac <flatcc_builder_custom_reset@@Base+0xf0>
   2678c:	ldr	r3, [pc, #352]	; 268f4 <flatcc_builder_custom_reset@@Base+0x238>
   26790:	add	r3, pc, r3
   26794:	ldr	r2, [pc, #348]	; 268f8 <flatcc_builder_custom_reset@@Base+0x23c>
   26798:	ldr	r1, [pc, #348]	; 268fc <flatcc_builder_custom_reset@@Base+0x240>
   2679c:	add	r1, pc, r1
   267a0:	ldr	r0, [pc, #344]	; 26900 <flatcc_builder_custom_reset@@Base+0x244>
   267a4:	add	r0, pc, r0
   267a8:	bl	12704 <__assert_fail@plt>
   267ac:	ldr	r3, [fp, #-16]
   267b0:	add	r3, r3, #1
   267b4:	str	r3, [fp, #-16]
   267b8:	ldr	r3, [fp, #-16]
   267bc:	cmp	r3, #7
   267c0:	ble	266e0 <flatcc_builder_custom_reset@@Base+0x24>
   267c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   267c8:	mov	r2, #0
   267cc:	str	r2, [r3, #120]	; 0x78
   267d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   267d4:	ldr	r3, [r3, #124]	; 0x7c
   267d8:	cmp	r3, #0
   267dc:	beq	267ec <flatcc_builder_custom_reset@@Base+0x130>
   267e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   267e4:	mov	r2, #16
   267e8:	str	r2, [r3, #124]	; 0x7c
   267ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   267f0:	mov	r2, #0
   267f4:	strh	r2, [r3, #128]	; 0x80
   267f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   267fc:	mov	r2, #0
   26800:	str	r2, [r3, #136]	; 0x88
   26804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26808:	mov	r2, #0
   2680c:	str	r2, [r3, #140]	; 0x8c
   26810:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26814:	mov	r2, #0
   26818:	str	r2, [r3, #156]	; 0x9c
   2681c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26820:	mov	r2, #0
   26824:	str	r2, [r3, #160]	; 0xa0
   26828:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2682c:	mov	r2, #0
   26830:	str	r2, [r3, #20]
   26834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26838:	mov	r2, #0
   2683c:	str	r2, [r3, #24]
   26840:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26844:	mov	r2, #0
   26848:	str	r2, [r3, #148]	; 0x94
   2684c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26850:	mov	r2, #0
   26854:	str	r2, [r3, #152]	; 0x98
   26858:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2685c:	ldr	r2, [r3, #60]	; 0x3c
   26860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26864:	str	r2, [r3, #16]
   26868:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2686c:	ldr	r2, [r3, #76]	; 0x4c
   26870:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26874:	str	r2, [r3]
   26878:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2687c:	ldr	r2, [r3, #52]	; 0x34
   26880:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26884:	str	r2, [r3, #4]
   26888:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2688c:	mov	r2, #0
   26890:	str	r2, [r3, #32]
   26894:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26898:	cmp	r3, #0
   2689c:	beq	268c4 <flatcc_builder_custom_reset@@Base+0x208>
   268a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   268a4:	mov	r2, #0
   268a8:	str	r2, [r3, #172]	; 0xac
   268ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   268b0:	mov	r2, #0
   268b4:	str	r2, [r3, #176]	; 0xb0
   268b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   268bc:	mov	r2, #0
   268c0:	str	r2, [r3, #180]	; 0xb4
   268c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   268c8:	ldr	r3, [r3, #184]	; 0xb8
   268cc:	cmp	r3, #0
   268d0:	beq	268e4 <flatcc_builder_custom_reset@@Base+0x228>
   268d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   268d8:	add	r3, r3, #188	; 0xbc
   268dc:	mov	r0, r3
   268e0:	bl	2c1e0 <flatcc_emitter_reset@@Base>
   268e4:	mov	r3, #0
   268e8:	mov	r0, r3
   268ec:	sub	sp, fp, #8
   268f0:	pop	{r4, fp, pc}
   268f4:	muleq	r0, r0, r6
   268f8:			; <UNDEFINED> instruction: 0x000001b2
   268fc:	andeq	pc, r0, r0, asr #4
   26900:	andeq	pc, r0, ip, lsr #5

00026904 <flatcc_builder_reset@@Base>:
   26904:	push	{fp, lr}
   26908:	add	fp, sp, #4
   2690c:	sub	sp, sp, #8
   26910:	str	r0, [fp, #-8]
   26914:	mov	r2, #0
   26918:	mov	r1, #0
   2691c:	ldr	r0, [fp, #-8]
   26920:	bl	266bc <flatcc_builder_custom_reset@@Base>
   26924:	mov	r3, r0
   26928:	mov	r0, r3
   2692c:	sub	sp, fp, #4
   26930:	pop	{fp, pc}

00026934 <flatcc_builder_clear@@Base>:
   26934:	push	{r4, fp, lr}
   26938:	add	fp, sp, #8
   2693c:	sub	sp, sp, #28
   26940:	str	r0, [fp, #-24]	; 0xffffffe8
   26944:	mov	r3, #0
   26948:	str	r3, [fp, #-16]
   2694c:	b	2699c <flatcc_builder_clear@@Base+0x68>
   26950:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26954:	add	r2, r3, #52	; 0x34
   26958:	ldr	r3, [fp, #-16]
   2695c:	lsl	r3, r3, #3
   26960:	add	r3, r2, r3
   26964:	str	r3, [fp, #-20]	; 0xffffffec
   26968:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2696c:	ldr	r4, [r3, #48]	; 0x30
   26970:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26974:	ldr	r0, [r3, #40]	; 0x28
   26978:	ldr	r3, [fp, #-16]
   2697c:	str	r3, [sp]
   26980:	mov	r3, #0
   26984:	mov	r2, #0
   26988:	ldr	r1, [fp, #-20]	; 0xffffffec
   2698c:	blx	r4
   26990:	ldr	r3, [fp, #-16]
   26994:	add	r3, r3, #1
   26998:	str	r3, [fp, #-16]
   2699c:	ldr	r3, [fp, #-16]
   269a0:	cmp	r3, #7
   269a4:	ble	26950 <flatcc_builder_clear@@Base+0x1c>
   269a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   269ac:	ldr	r3, [r3, #184]	; 0xb8
   269b0:	cmp	r3, #0
   269b4:	beq	269c8 <flatcc_builder_clear@@Base+0x94>
   269b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   269bc:	add	r3, r3, #188	; 0xbc
   269c0:	mov	r0, r3
   269c4:	bl	2c36c <flatcc_emitter_clear@@Base>
   269c8:	mov	r2, #232	; 0xe8
   269cc:	mov	r1, #0
   269d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   269d4:	bl	126a4 <memset@plt>
   269d8:	nop			; (mov r0, r0)
   269dc:	sub	sp, fp, #8
   269e0:	pop	{r4, fp, pc}
   269e4:	push	{fp}		; (str fp, [sp, #-4]!)
   269e8:	add	fp, sp, #0
   269ec:	sub	sp, sp, #12
   269f0:	str	r0, [fp, #-8]
   269f4:	mov	r3, r1
   269f8:	strh	r3, [fp, #-10]
   269fc:	ldr	r3, [fp, #-8]
   26a00:	ldrh	r3, [r3, #128]	; 0x80
   26a04:	ldrh	r2, [fp, #-10]
   26a08:	cmp	r2, r3
   26a0c:	bls	26a1c <flatcc_builder_clear@@Base+0xe8>
   26a10:	ldr	r3, [fp, #-8]
   26a14:	ldrh	r2, [fp, #-10]
   26a18:	strh	r2, [r3, #128]	; 0x80
   26a1c:	nop			; (mov r0, r0)
   26a20:	add	sp, fp, #0
   26a24:	pop	{fp}		; (ldr fp, [sp], #4)
   26a28:	bx	lr
   26a2c:	push	{fp}		; (str fp, [sp, #-4]!)
   26a30:	add	fp, sp, #0
   26a34:	sub	sp, sp, #12
   26a38:	str	r0, [fp, #-8]
   26a3c:	mov	r3, r1
   26a40:	strh	r3, [fp, #-10]
   26a44:	ldr	r3, [fp, #-8]
   26a48:	ldrh	r3, [r3]
   26a4c:	ldrh	r2, [fp, #-10]
   26a50:	cmp	r2, r3
   26a54:	bls	26a64 <flatcc_builder_clear@@Base+0x130>
   26a58:	ldr	r3, [fp, #-8]
   26a5c:	ldrh	r2, [fp, #-10]
   26a60:	strh	r2, [r3]
   26a64:	nop			; (mov r0, r0)
   26a68:	add	sp, fp, #0
   26a6c:	pop	{fp}		; (ldr fp, [sp], #4)
   26a70:	bx	lr

00026a74 <flatcc_builder_enter_user_frame_ptr@@Base>:
   26a74:	push	{fp, lr}
   26a78:	add	fp, sp, #4
   26a7c:	sub	sp, sp, #24
   26a80:	str	r0, [fp, #-16]
   26a84:	str	r1, [fp, #-20]	; 0xffffffec
   26a88:	ldr	r3, [fp, #-20]	; 0xffffffec
   26a8c:	add	r3, r3, #3
   26a90:	bic	r3, r3, #3
   26a94:	add	r3, r3, #4
   26a98:	str	r3, [fp, #-20]	; 0xffffffec
   26a9c:	ldr	r3, [fp, #-16]
   26aa0:	ldr	r2, [r3, #228]	; 0xe4
   26aa4:	mov	r3, #0
   26aa8:	str	r3, [sp]
   26aac:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ab0:	mov	r1, #7
   26ab4:	ldr	r0, [fp, #-16]
   26ab8:	bl	26188 <flatcc_builder_default_alloc@@Base+0x660>
   26abc:	str	r0, [fp, #-8]
   26ac0:	ldr	r3, [fp, #-8]
   26ac4:	cmp	r3, #0
   26ac8:	bne	26ad4 <flatcc_builder_enter_user_frame_ptr@@Base+0x60>
   26acc:	mov	r3, #0
   26ad0:	b	26b2c <flatcc_builder_enter_user_frame_ptr@@Base+0xb8>
   26ad4:	ldr	r2, [fp, #-20]	; 0xffffffec
   26ad8:	mov	r1, #0
   26adc:	ldr	r0, [fp, #-8]
   26ae0:	bl	126a4 <memset@plt>
   26ae4:	ldr	r3, [fp, #-8]
   26ae8:	add	r2, r3, #4
   26aec:	str	r2, [fp, #-8]
   26af0:	ldr	r2, [fp, #-16]
   26af4:	ldr	r2, [r2, #224]	; 0xe0
   26af8:	str	r2, [r3]
   26afc:	ldr	r3, [fp, #-16]
   26b00:	ldr	r3, [r3, #228]	; 0xe4
   26b04:	add	r2, r3, #4
   26b08:	ldr	r3, [fp, #-16]
   26b0c:	str	r2, [r3, #224]	; 0xe0
   26b10:	ldr	r3, [fp, #-16]
   26b14:	ldr	r2, [r3, #228]	; 0xe4
   26b18:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b1c:	add	r2, r2, r3
   26b20:	ldr	r3, [fp, #-16]
   26b24:	str	r2, [r3, #228]	; 0xe4
   26b28:	ldr	r3, [fp, #-8]
   26b2c:	mov	r0, r3
   26b30:	sub	sp, fp, #4
   26b34:	pop	{fp, pc}

00026b38 <flatcc_builder_enter_user_frame@@Base>:
   26b38:	push	{fp, lr}
   26b3c:	add	fp, sp, #4
   26b40:	sub	sp, sp, #24
   26b44:	str	r0, [fp, #-16]
   26b48:	str	r1, [fp, #-20]	; 0xffffffec
   26b4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b50:	add	r3, r3, #3
   26b54:	bic	r3, r3, #3
   26b58:	add	r3, r3, #4
   26b5c:	str	r3, [fp, #-20]	; 0xffffffec
   26b60:	ldr	r3, [fp, #-16]
   26b64:	ldr	r2, [r3, #228]	; 0xe4
   26b68:	mov	r3, #0
   26b6c:	str	r3, [sp]
   26b70:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b74:	mov	r1, #7
   26b78:	ldr	r0, [fp, #-16]
   26b7c:	bl	26188 <flatcc_builder_default_alloc@@Base+0x660>
   26b80:	str	r0, [fp, #-8]
   26b84:	ldr	r3, [fp, #-8]
   26b88:	cmp	r3, #0
   26b8c:	bne	26b98 <flatcc_builder_enter_user_frame@@Base+0x60>
   26b90:	mov	r3, #0
   26b94:	b	26bf4 <flatcc_builder_enter_user_frame@@Base+0xbc>
   26b98:	ldr	r2, [fp, #-20]	; 0xffffffec
   26b9c:	mov	r1, #0
   26ba0:	ldr	r0, [fp, #-8]
   26ba4:	bl	126a4 <memset@plt>
   26ba8:	ldr	r3, [fp, #-8]
   26bac:	add	r2, r3, #4
   26bb0:	str	r2, [fp, #-8]
   26bb4:	ldr	r2, [fp, #-16]
   26bb8:	ldr	r2, [r2, #224]	; 0xe0
   26bbc:	str	r2, [r3]
   26bc0:	ldr	r3, [fp, #-16]
   26bc4:	ldr	r3, [r3, #228]	; 0xe4
   26bc8:	add	r2, r3, #4
   26bcc:	ldr	r3, [fp, #-16]
   26bd0:	str	r2, [r3, #224]	; 0xe0
   26bd4:	ldr	r3, [fp, #-16]
   26bd8:	ldr	r2, [r3, #228]	; 0xe4
   26bdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   26be0:	add	r2, r2, r3
   26be4:	ldr	r3, [fp, #-16]
   26be8:	str	r2, [r3, #228]	; 0xe4
   26bec:	ldr	r3, [fp, #-16]
   26bf0:	ldr	r3, [r3, #224]	; 0xe0
   26bf4:	mov	r0, r3
   26bf8:	sub	sp, fp, #4
   26bfc:	pop	{fp, pc}

00026c00 <flatcc_builder_exit_user_frame@@Base>:
   26c00:	push	{fp, lr}
   26c04:	add	fp, sp, #4
   26c08:	sub	sp, sp, #16
   26c0c:	str	r0, [fp, #-16]
   26c10:	ldr	r3, [fp, #-16]
   26c14:	ldr	r3, [r3, #224]	; 0xe0
   26c18:	cmp	r3, #0
   26c1c:	bne	26c40 <flatcc_builder_exit_user_frame@@Base+0x40>
   26c20:	ldr	r3, [pc, #104]	; 26c90 <flatcc_builder_exit_user_frame@@Base+0x90>
   26c24:	add	r3, pc, r3
   26c28:	ldr	r2, [pc, #100]	; 26c94 <flatcc_builder_exit_user_frame@@Base+0x94>
   26c2c:	ldr	r1, [pc, #100]	; 26c98 <flatcc_builder_exit_user_frame@@Base+0x98>
   26c30:	add	r1, pc, r1
   26c34:	ldr	r0, [pc, #96]	; 26c9c <flatcc_builder_exit_user_frame@@Base+0x9c>
   26c38:	add	r0, pc, r0
   26c3c:	bl	12704 <__assert_fail@plt>
   26c40:	ldr	r3, [fp, #-16]
   26c44:	ldr	r2, [r3, #108]	; 0x6c
   26c48:	ldr	r3, [fp, #-16]
   26c4c:	ldr	r3, [r3, #224]	; 0xe0
   26c50:	add	r3, r2, r3
   26c54:	str	r3, [fp, #-8]
   26c58:	ldr	r3, [fp, #-16]
   26c5c:	ldr	r3, [r3, #224]	; 0xe0
   26c60:	sub	r2, r3, #4
   26c64:	ldr	r3, [fp, #-16]
   26c68:	str	r2, [r3, #228]	; 0xe4
   26c6c:	ldr	r3, [fp, #-8]
   26c70:	ldr	r2, [r3, #-4]
   26c74:	ldr	r3, [fp, #-16]
   26c78:	str	r2, [r3, #224]	; 0xe0
   26c7c:	ldr	r3, [fp, #-16]
   26c80:	ldr	r3, [r3, #224]	; 0xe0
   26c84:	mov	r0, r3
   26c88:	sub	sp, fp, #4
   26c8c:	pop	{fp, pc}
   26c90:	andeq	pc, r0, r8, lsl r2	; <UNPREDICTABLE>
   26c94:	andeq	r0, r0, lr, lsl r2
   26c98:	andeq	lr, r0, ip, lsr #27
   26c9c:	andeq	lr, r0, ip, lsr #28

00026ca0 <flatcc_builder_exit_user_frame_at@@Base>:
   26ca0:	push	{fp, lr}
   26ca4:	add	fp, sp, #4
   26ca8:	sub	sp, sp, #8
   26cac:	str	r0, [fp, #-8]
   26cb0:	str	r1, [fp, #-12]
   26cb4:	ldr	r3, [fp, #-8]
   26cb8:	ldr	r2, [r3, #224]	; 0xe0
   26cbc:	ldr	r3, [fp, #-12]
   26cc0:	cmp	r2, r3
   26cc4:	bcs	26ce8 <flatcc_builder_exit_user_frame_at@@Base+0x48>
   26cc8:	ldr	r3, [pc, #60]	; 26d0c <flatcc_builder_exit_user_frame_at@@Base+0x6c>
   26ccc:	add	r3, pc, r3
   26cd0:	ldr	r2, [pc, #56]	; 26d10 <flatcc_builder_exit_user_frame_at@@Base+0x70>
   26cd4:	ldr	r1, [pc, #56]	; 26d14 <flatcc_builder_exit_user_frame_at@@Base+0x74>
   26cd8:	add	r1, pc, r1
   26cdc:	ldr	r0, [pc, #52]	; 26d18 <flatcc_builder_exit_user_frame_at@@Base+0x78>
   26ce0:	add	r0, pc, r0
   26ce4:	bl	12704 <__assert_fail@plt>
   26ce8:	ldr	r3, [fp, #-8]
   26cec:	ldr	r2, [fp, #-12]
   26cf0:	str	r2, [r3, #224]	; 0xe0
   26cf4:	ldr	r0, [fp, #-8]
   26cf8:	bl	26c00 <flatcc_builder_exit_user_frame@@Base>
   26cfc:	mov	r3, r0
   26d00:	mov	r0, r3
   26d04:	sub	sp, fp, #4
   26d08:	pop	{fp, pc}
   26d0c:	muleq	r0, r0, r1
   26d10:	andeq	r0, r0, r7, lsr #4
   26d14:	andeq	lr, r0, r4, lsl #26
   26d18:	andeq	lr, r0, r0, lsr #27

00026d1c <flatcc_builder_get_current_user_frame@@Base>:
   26d1c:	push	{fp}		; (str fp, [sp, #-4]!)
   26d20:	add	fp, sp, #0
   26d24:	sub	sp, sp, #12
   26d28:	str	r0, [fp, #-8]
   26d2c:	ldr	r3, [fp, #-8]
   26d30:	ldr	r3, [r3, #224]	; 0xe0
   26d34:	mov	r0, r3
   26d38:	add	sp, fp, #0
   26d3c:	pop	{fp}		; (ldr fp, [sp], #4)
   26d40:	bx	lr

00026d44 <flatcc_builder_get_user_frame_ptr@@Base>:
   26d44:	push	{fp}		; (str fp, [sp, #-4]!)
   26d48:	add	fp, sp, #0
   26d4c:	sub	sp, sp, #12
   26d50:	str	r0, [fp, #-8]
   26d54:	str	r1, [fp, #-12]
   26d58:	ldr	r3, [fp, #-8]
   26d5c:	ldr	r2, [r3, #108]	; 0x6c
   26d60:	ldr	r3, [fp, #-12]
   26d64:	add	r3, r2, r3
   26d68:	mov	r0, r3
   26d6c:	add	sp, fp, #0
   26d70:	pop	{fp}		; (ldr fp, [sp], #4)
   26d74:	bx	lr
   26d78:	push	{fp, lr}
   26d7c:	add	fp, sp, #4
   26d80:	sub	sp, sp, #16
   26d84:	str	r0, [fp, #-8]
   26d88:	mov	r3, r1
   26d8c:	strh	r3, [fp, #-10]
   26d90:	ldr	r3, [fp, #-8]
   26d94:	ldr	r3, [r3, #156]	; 0x9c
   26d98:	add	r2, r3, #1
   26d9c:	ldr	r3, [fp, #-8]
   26da0:	str	r2, [r3, #156]	; 0x9c
   26da4:	ldr	r3, [fp, #-8]
   26da8:	ldr	r2, [r3, #156]	; 0x9c
   26dac:	ldr	r3, [fp, #-8]
   26db0:	ldr	r3, [r3, #160]	; 0xa0
   26db4:	cmp	r2, r3
   26db8:	ble	26ea8 <flatcc_builder_get_user_frame_ptr@@Base+0x164>
   26dbc:	ldr	r3, [fp, #-8]
   26dc0:	ldr	r3, [r3, #176]	; 0xb0
   26dc4:	cmp	r3, #0
   26dc8:	ble	26dec <flatcc_builder_get_user_frame_ptr@@Base+0xa8>
   26dcc:	ldr	r3, [fp, #-8]
   26dd0:	ldr	r2, [r3, #156]	; 0x9c
   26dd4:	ldr	r3, [fp, #-8]
   26dd8:	ldr	r3, [r3, #176]	; 0xb0
   26ddc:	cmp	r2, r3
   26de0:	ble	26dec <flatcc_builder_get_user_frame_ptr@@Base+0xa8>
   26de4:	mvn	r3, #0
   26de8:	b	26f48 <flatcc_builder_get_user_frame_ptr@@Base+0x204>
   26dec:	ldr	r3, [fp, #-8]
   26df0:	ldr	r3, [r3, #156]	; 0x9c
   26df4:	sub	r3, r3, #1
   26df8:	mov	r2, r3
   26dfc:	mov	r3, r2
   26e00:	lsl	r3, r3, #3
   26e04:	add	r3, r3, r2
   26e08:	lsl	r3, r3, #2
   26e0c:	mov	r2, r3
   26e10:	mov	r3, #0
   26e14:	str	r3, [sp]
   26e18:	mov	r3, #36	; 0x24
   26e1c:	mov	r1, #4
   26e20:	ldr	r0, [fp, #-8]
   26e24:	bl	26188 <flatcc_builder_default_alloc@@Base+0x660>
   26e28:	mov	r2, r0
   26e2c:	ldr	r3, [fp, #-8]
   26e30:	str	r2, [r3, #32]
   26e34:	ldr	r3, [fp, #-8]
   26e38:	ldr	r3, [r3, #32]
   26e3c:	cmp	r3, #0
   26e40:	bne	26e4c <flatcc_builder_get_user_frame_ptr@@Base+0x108>
   26e44:	mvn	r3, #0
   26e48:	b	26f48 <flatcc_builder_get_user_frame_ptr@@Base+0x204>
   26e4c:	ldr	r3, [fp, #-8]
   26e50:	ldr	r3, [r3, #88]	; 0x58
   26e54:	ldr	r2, [pc, #248]	; 26f54 <flatcc_builder_get_user_frame_ptr@@Base+0x210>
   26e58:	umull	r2, r3, r2, r3
   26e5c:	lsr	r3, r3, #3
   26e60:	mov	r2, r3
   26e64:	ldr	r3, [fp, #-8]
   26e68:	str	r2, [r3, #160]	; 0xa0
   26e6c:	ldr	r3, [fp, #-8]
   26e70:	ldr	r3, [r3, #176]	; 0xb0
   26e74:	cmp	r3, #0
   26e78:	ble	26ebc <flatcc_builder_get_user_frame_ptr@@Base+0x178>
   26e7c:	ldr	r3, [fp, #-8]
   26e80:	ldr	r2, [r3, #176]	; 0xb0
   26e84:	ldr	r3, [fp, #-8]
   26e88:	ldr	r3, [r3, #160]	; 0xa0
   26e8c:	cmp	r2, r3
   26e90:	bge	26ebc <flatcc_builder_get_user_frame_ptr@@Base+0x178>
   26e94:	ldr	r3, [fp, #-8]
   26e98:	ldr	r2, [r3, #176]	; 0xb0
   26e9c:	ldr	r3, [fp, #-8]
   26ea0:	str	r2, [r3, #160]	; 0xa0
   26ea4:	b	26ebc <flatcc_builder_get_user_frame_ptr@@Base+0x178>
   26ea8:	ldr	r3, [fp, #-8]
   26eac:	ldr	r3, [r3, #32]
   26eb0:	add	r2, r3, #36	; 0x24
   26eb4:	ldr	r3, [fp, #-8]
   26eb8:	str	r2, [r3, #32]
   26ebc:	ldr	r3, [fp, #-8]
   26ec0:	ldr	r3, [r3, #32]
   26ec4:	ldr	r2, [fp, #-8]
   26ec8:	ldr	r2, [r2, #20]
   26ecc:	str	r2, [r3, #8]
   26ed0:	ldr	r3, [fp, #-8]
   26ed4:	ldr	r3, [r3, #32]
   26ed8:	ldr	r2, [fp, #-8]
   26edc:	ldrh	r2, [r2, #130]	; 0x82
   26ee0:	strh	r2, [r3, #12]
   26ee4:	ldr	r3, [fp, #-8]
   26ee8:	ldrh	r2, [fp, #-10]
   26eec:	strh	r2, [r3, #130]	; 0x82
   26ef0:	ldr	r3, [fp, #-8]
   26ef4:	ldr	r3, [r3, #32]
   26ef8:	ldr	r2, [fp, #-8]
   26efc:	ldr	r2, [r2, #28]
   26f00:	str	r2, [r3]
   26f04:	ldr	r3, [fp, #-8]
   26f08:	ldr	r3, [r3, #32]
   26f0c:	mvn	r2, #3
   26f10:	str	r2, [r3, #4]
   26f14:	ldr	r3, [fp, #-8]
   26f18:	ldr	r2, [r3, #28]
   26f1c:	ldr	r3, [fp, #-8]
   26f20:	ldr	r3, [r3, #20]
   26f24:	add	r3, r2, r3
   26f28:	add	r3, r3, #7
   26f2c:	bic	r2, r3, #7
   26f30:	ldr	r3, [fp, #-8]
   26f34:	str	r2, [r3, #28]
   26f38:	ldr	r3, [fp, #-8]
   26f3c:	mov	r2, #0
   26f40:	str	r2, [r3, #20]
   26f44:	mov	r3, #0
   26f48:	mov	r0, r3
   26f4c:	sub	sp, fp, #4
   26f50:	pop	{fp, pc}
   26f54:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   26f58:	push	{fp, lr}
   26f5c:	add	fp, sp, #4
   26f60:	sub	sp, sp, #8
   26f64:	str	r0, [fp, #-8]
   26f68:	ldr	r3, [fp, #-8]
   26f6c:	ldr	r0, [r3, #16]
   26f70:	ldr	r3, [fp, #-8]
   26f74:	ldr	r3, [r3, #20]
   26f78:	mov	r2, r3
   26f7c:	mov	r1, #0
   26f80:	bl	126a4 <memset@plt>
   26f84:	ldr	r3, [fp, #-8]
   26f88:	ldr	r3, [r3, #32]
   26f8c:	ldr	r2, [r3, #8]
   26f90:	ldr	r3, [fp, #-8]
   26f94:	str	r2, [r3, #20]
   26f98:	ldr	r3, [fp, #-8]
   26f9c:	ldr	r3, [r3, #32]
   26fa0:	ldr	r2, [r3]
   26fa4:	ldr	r3, [fp, #-8]
   26fa8:	str	r2, [r3, #28]
   26fac:	ldr	r3, [fp, #-8]
   26fb0:	ldr	r3, [r3, #32]
   26fb4:	ldr	r3, [r3, #4]
   26fb8:	mov	r1, r3
   26fbc:	ldr	r0, [fp, #-8]
   26fc0:	bl	25cf0 <flatcc_builder_default_alloc@@Base+0x1c8>
   26fc4:	ldr	r3, [fp, #-8]
   26fc8:	ldrh	r3, [r3, #130]	; 0x82
   26fcc:	mov	r1, r3
   26fd0:	ldr	r0, [fp, #-8]
   26fd4:	bl	269e4 <flatcc_builder_clear@@Base+0xb0>
   26fd8:	ldr	r3, [fp, #-8]
   26fdc:	ldr	r3, [r3, #32]
   26fe0:	ldrh	r2, [r3, #12]
   26fe4:	ldr	r3, [fp, #-8]
   26fe8:	strh	r2, [r3, #130]	; 0x82
   26fec:	ldr	r3, [fp, #-8]
   26ff0:	ldr	r3, [r3, #32]
   26ff4:	sub	r2, r3, #36	; 0x24
   26ff8:	ldr	r3, [fp, #-8]
   26ffc:	str	r2, [r3, #32]
   27000:	ldr	r3, [fp, #-8]
   27004:	ldr	r3, [r3, #156]	; 0x9c
   27008:	sub	r2, r3, #1
   2700c:	ldr	r3, [fp, #-8]
   27010:	str	r2, [r3, #156]	; 0x9c
   27014:	nop			; (mov r0, r0)
   27018:	sub	sp, fp, #4
   2701c:	pop	{fp, pc}
   27020:	push	{fp}		; (str fp, [sp, #-4]!)
   27024:	add	fp, sp, #0
   27028:	sub	sp, sp, #20
   2702c:	str	r0, [fp, #-8]
   27030:	str	r1, [fp, #-12]
   27034:	mov	r3, r2
   27038:	strh	r3, [fp, #-14]
   2703c:	ldr	r3, [fp, #-8]
   27040:	ldr	r3, [r3, #136]	; 0x88
   27044:	mov	r2, r3
   27048:	ldr	r3, [fp, #-12]
   2704c:	sub	r3, r2, r3
   27050:	ldrh	r2, [fp, #-14]
   27054:	sub	r2, r2, #1
   27058:	and	r3, r3, r2
   2705c:	mov	r0, r3
   27060:	add	sp, fp, #0
   27064:	pop	{fp}		; (ldr fp, [sp], #4)
   27068:	bx	lr
   2706c:	push	{fp}		; (str fp, [sp, #-4]!)
   27070:	add	fp, sp, #0
   27074:	sub	sp, sp, #12
   27078:	str	r0, [fp, #-8]
   2707c:	mov	r3, r1
   27080:	strh	r3, [fp, #-10]
   27084:	ldr	r3, [fp, #-8]
   27088:	ldr	r2, [r3, #140]	; 0x8c
   2708c:	ldrh	r3, [fp, #-10]
   27090:	sub	r3, r3, #1
   27094:	and	r3, r3, r2
   27098:	mov	r0, r3
   2709c:	add	sp, fp, #0
   270a0:	pop	{fp}		; (ldr fp, [sp], #4)
   270a4:	bx	lr
   270a8:	push	{r4, fp, lr}
   270ac:	add	fp, sp, #8
   270b0:	sub	sp, sp, #28
   270b4:	str	r0, [fp, #-24]	; 0xffffffe8
   270b8:	str	r1, [fp, #-28]	; 0xffffffe4
   270bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   270c0:	ldr	r3, [r3, #136]	; 0x88
   270c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   270c8:	ldr	r2, [r2]
   270cc:	sub	r3, r3, r2
   270d0:	str	r3, [fp, #-16]
   270d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   270d8:	ldr	r2, [r3, #136]	; 0x88
   270dc:	ldr	r3, [fp, #-16]
   270e0:	cmp	r2, r3
   270e4:	bgt	27108 <flatcc_builder_get_user_frame_ptr@@Base+0x3c4>
   270e8:	ldr	r3, [pc, #152]	; 27188 <flatcc_builder_get_user_frame_ptr@@Base+0x444>
   270ec:	add	r3, pc, r3
   270f0:	ldr	r2, [pc, #148]	; 2718c <flatcc_builder_get_user_frame_ptr@@Base+0x448>
   270f4:	ldr	r1, [pc, #148]	; 27190 <flatcc_builder_get_user_frame_ptr@@Base+0x44c>
   270f8:	add	r1, pc, r1
   270fc:	ldr	r0, [pc, #144]	; 27194 <flatcc_builder_get_user_frame_ptr@@Base+0x450>
   27100:	add	r0, pc, r0
   27104:	bl	12704 <__assert_fail@plt>
   27108:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2710c:	ldr	r4, [r3, #44]	; 0x2c
   27110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27114:	ldr	r0, [r3, #36]	; 0x24
   27118:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2711c:	add	r1, r3, #8
   27120:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27124:	ldr	r2, [r3, #4]
   27128:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2712c:	ldr	r3, [r3]
   27130:	str	r3, [sp]
   27134:	ldr	r3, [fp, #-16]
   27138:	blx	r4
   2713c:	mov	r3, r0
   27140:	cmp	r3, #0
   27144:	beq	27168 <flatcc_builder_get_user_frame_ptr@@Base+0x424>
   27148:	ldr	r3, [pc, #72]	; 27198 <flatcc_builder_get_user_frame_ptr@@Base+0x454>
   2714c:	add	r3, pc, r3
   27150:	ldr	r2, [pc, #68]	; 2719c <flatcc_builder_get_user_frame_ptr@@Base+0x458>
   27154:	ldr	r1, [pc, #68]	; 271a0 <flatcc_builder_get_user_frame_ptr@@Base+0x45c>
   27158:	add	r1, pc, r1
   2715c:	ldr	r0, [pc, #64]	; 271a4 <flatcc_builder_get_user_frame_ptr@@Base+0x460>
   27160:	add	r0, pc, r0
   27164:	bl	12704 <__assert_fail@plt>
   27168:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2716c:	ldr	r2, [fp, #-16]
   27170:	str	r2, [r3, #136]	; 0x88
   27174:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27178:	ldr	r3, [r3, #136]	; 0x88
   2717c:	mov	r0, r3
   27180:	sub	sp, fp, #8
   27184:	pop	{r4, fp, pc}
   27188:			; <UNDEFINED> instruction: 0x0000edb0
   2718c:	andeq	r0, r0, r7, lsl #5
   27190:	andeq	lr, r0, r4, ror #17
   27194:	andeq	lr, r0, ip, lsr r9
   27198:	andeq	lr, r0, r0, asr sp
   2719c:	andeq	r0, r0, fp, lsl #5
   271a0:	andeq	lr, r0, r4, lsl #17
   271a4:	ldrdeq	lr, [r0], -ip
   271a8:	push	{r4, fp, lr}
   271ac:	add	fp, sp, #8
   271b0:	sub	sp, sp, #28
   271b4:	str	r0, [fp, #-24]	; 0xffffffe8
   271b8:	str	r1, [fp, #-28]	; 0xffffffe4
   271bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   271c0:	ldr	r3, [r3, #140]	; 0x8c
   271c4:	str	r3, [fp, #-16]
   271c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   271cc:	ldr	r3, [r3]
   271d0:	mov	r2, r3
   271d4:	ldr	r3, [fp, #-16]
   271d8:	add	r2, r2, r3
   271dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   271e0:	str	r2, [r3, #140]	; 0x8c
   271e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   271e8:	ldr	r2, [r3, #140]	; 0x8c
   271ec:	ldr	r3, [fp, #-16]
   271f0:	cmp	r2, r3
   271f4:	bge	27218 <flatcc_builder_get_user_frame_ptr@@Base+0x4d4>
   271f8:	ldr	r3, [pc, #140]	; 2728c <flatcc_builder_get_user_frame_ptr@@Base+0x548>
   271fc:	add	r3, pc, r3
   27200:	ldr	r2, [pc, #136]	; 27290 <flatcc_builder_get_user_frame_ptr@@Base+0x54c>
   27204:	ldr	r1, [pc, #136]	; 27294 <flatcc_builder_get_user_frame_ptr@@Base+0x550>
   27208:	add	r1, pc, r1
   2720c:	ldr	r0, [pc, #132]	; 27298 <flatcc_builder_get_user_frame_ptr@@Base+0x554>
   27210:	add	r0, pc, r0
   27214:	bl	12704 <__assert_fail@plt>
   27218:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2721c:	ldr	r4, [r3, #44]	; 0x2c
   27220:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27224:	ldr	r0, [r3, #36]	; 0x24
   27228:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2722c:	add	r1, r3, #8
   27230:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27234:	ldr	r2, [r3, #4]
   27238:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2723c:	ldr	r3, [r3]
   27240:	str	r3, [sp]
   27244:	ldr	r3, [fp, #-16]
   27248:	blx	r4
   2724c:	mov	r3, r0
   27250:	cmp	r3, #0
   27254:	beq	27278 <flatcc_builder_get_user_frame_ptr@@Base+0x534>
   27258:	ldr	r3, [pc, #60]	; 2729c <flatcc_builder_get_user_frame_ptr@@Base+0x558>
   2725c:	add	r3, pc, r3
   27260:	ldr	r2, [pc, #56]	; 272a0 <flatcc_builder_get_user_frame_ptr@@Base+0x55c>
   27264:	ldr	r1, [pc, #56]	; 272a4 <flatcc_builder_get_user_frame_ptr@@Base+0x560>
   27268:	add	r1, pc, r1
   2726c:	ldr	r0, [pc, #52]	; 272a8 <flatcc_builder_get_user_frame_ptr@@Base+0x564>
   27270:	add	r0, pc, r0
   27274:	bl	12704 <__assert_fail@plt>
   27278:	ldr	r3, [fp, #-16]
   2727c:	add	r3, r3, #1
   27280:	mov	r0, r3
   27284:	sub	sp, fp, #8
   27288:	pop	{r4, fp, pc}
   2728c:	muleq	r0, r4, ip
   27290:	andeq	r0, r0, r1, lsr #5
   27294:	ldrdeq	lr, [r0], -r4
   27298:	andeq	lr, r0, ip, lsr #16
   2729c:	andeq	lr, r0, r4, lsr ip
   272a0:	andeq	r0, r0, r5, lsr #5
   272a4:	andeq	lr, r0, r4, ror r7
   272a8:	andeq	lr, r0, ip, asr #15
   272ac:	push	{r4, fp, lr}
   272b0:	add	fp, sp, #8
   272b4:	sub	sp, sp, #100	; 0x64
   272b8:	str	r0, [fp, #-96]	; 0xffffffa0
   272bc:	str	r1, [fp, #-100]	; 0xffffff9c
   272c0:	str	r3, [fp, #-108]	; 0xffffff94
   272c4:	strh	r2, [fp, #-102]	; 0xffffff9a
   272c8:	ldr	r4, [pc, #320]	; 27410 <flatcc_builder_get_user_frame_ptr@@Base+0x6cc>
   272cc:	add	r4, pc, r4
   272d0:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   272d4:	cmp	r3, #0
   272d8:	bne	27300 <flatcc_builder_get_user_frame_ptr@@Base+0x5bc>
   272dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   272e0:	ldrh	r3, [r3, #132]	; 0x84
   272e4:	cmp	r3, #0
   272e8:	beq	272f8 <flatcc_builder_get_user_frame_ptr@@Base+0x5b4>
   272ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   272f0:	ldrh	r3, [r3, #132]	; 0x84
   272f4:	b	27304 <flatcc_builder_get_user_frame_ptr@@Base+0x5c0>
   272f8:	mov	r3, #1
   272fc:	b	27304 <flatcc_builder_get_user_frame_ptr@@Base+0x5c0>
   27300:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   27304:	strh	r3, [fp, #-102]	; 0xffffff9a
   27308:	mov	r1, #4
   2730c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   27310:	bl	26a2c <flatcc_builder_clear@@Base+0xf8>
   27314:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   27318:	mov	r1, r3
   2731c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   27320:	bl	26a2c <flatcc_builder_clear@@Base+0xf8>
   27324:	ldr	r3, [fp, #-108]	; 0xffffff94
   27328:	cmp	r3, #0
   2732c:	bne	27400 <flatcc_builder_get_user_frame_ptr@@Base+0x6bc>
   27330:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   27334:	mov	r1, r3
   27338:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2733c:	bl	2706c <flatcc_builder_get_user_frame_ptr@@Base+0x328>
   27340:	str	r0, [fp, #-16]
   27344:	ldr	r3, [fp, #-16]
   27348:	cmp	r3, #0
   2734c:	beq	27400 <flatcc_builder_get_user_frame_ptr@@Base+0x6bc>
   27350:	mov	r3, #0
   27354:	str	r3, [fp, #-88]	; 0xffffffa8
   27358:	mov	r3, #0
   2735c:	str	r3, [fp, #-84]	; 0xffffffac
   27360:	ldr	r3, [fp, #-16]
   27364:	cmp	r3, #0
   27368:	beq	273c4 <flatcc_builder_get_user_frame_ptr@@Base+0x680>
   2736c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   27370:	ldr	r3, [fp, #-16]
   27374:	add	r3, r2, r3
   27378:	str	r3, [fp, #-88]	; 0xffffffa8
   2737c:	ldr	r3, [fp, #-84]	; 0xffffffac
   27380:	add	r3, r3, #1
   27384:	lsl	r3, r3, #3
   27388:	sub	r2, fp, #12
   2738c:	add	r3, r2, r3
   27390:	ldr	r2, [pc, #124]	; 27414 <flatcc_builder_get_user_frame_ptr@@Base+0x6d0>
   27394:	ldr	r2, [r4, r2]
   27398:	str	r2, [r3, #-76]	; 0xffffffb4
   2739c:	ldr	r3, [fp, #-84]	; 0xffffffac
   273a0:	add	r3, r3, #1
   273a4:	lsl	r3, r3, #3
   273a8:	sub	r2, fp, #12
   273ac:	add	r3, r2, r3
   273b0:	ldr	r2, [fp, #-16]
   273b4:	str	r2, [r3, #-72]	; 0xffffffb8
   273b8:	ldr	r3, [fp, #-84]	; 0xffffffac
   273bc:	add	r3, r3, #1
   273c0:	str	r3, [fp, #-84]	; 0xffffffac
   273c4:	sub	r3, fp, #88	; 0x58
   273c8:	mov	r1, r3
   273cc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   273d0:	bl	271a8 <flatcc_builder_get_user_frame_ptr@@Base+0x464>
   273d4:	mov	r3, r0
   273d8:	cmp	r3, #0
   273dc:	bne	27400 <flatcc_builder_get_user_frame_ptr@@Base+0x6bc>
   273e0:	ldr	r3, [pc, #48]	; 27418 <flatcc_builder_get_user_frame_ptr@@Base+0x6d4>
   273e4:	add	r3, pc, r3
   273e8:	ldr	r2, [pc, #44]	; 2741c <flatcc_builder_get_user_frame_ptr@@Base+0x6d8>
   273ec:	ldr	r1, [pc, #44]	; 27420 <flatcc_builder_get_user_frame_ptr@@Base+0x6dc>
   273f0:	add	r1, pc, r1
   273f4:	ldr	r0, [pc, #40]	; 27424 <flatcc_builder_get_user_frame_ptr@@Base+0x6e0>
   273f8:	add	r0, pc, r0
   273fc:	bl	12704 <__assert_fail@plt>
   27400:	mov	r3, #0
   27404:	mov	r0, r3
   27408:	sub	sp, fp, #8
   2740c:	pop	{r4, fp, pc}
   27410:	andeq	r0, r2, ip, lsr #26
   27414:	andeq	r0, r0, r4, ror r0
   27418:	muleq	r0, ip, sl
   2741c:			; <UNDEFINED> instruction: 0x000002be
   27420:	andeq	lr, r0, ip, ror #11
   27424:	andeq	lr, r0, r4, asr #12

00027428 <flatcc_builder_embed_buffer@@Base>:
   27428:	push	{r4, fp, lr}
   2742c:	add	fp, sp, #8
   27430:	sub	sp, sp, #108	; 0x6c
   27434:	str	r0, [fp, #-104]	; 0xffffff98
   27438:	str	r2, [fp, #-112]	; 0xffffff90
   2743c:	str	r3, [fp, #-116]	; 0xffffff8c
   27440:	strh	r1, [fp, #-106]	; 0xffffff96
   27444:	ldr	r4, [pc, #492]	; 27638 <flatcc_builder_embed_buffer@@Base+0x210>
   27448:	add	r4, pc, r4
   2744c:	ldr	r3, [fp, #8]
   27450:	and	r3, r3, #2
   27454:	str	r3, [fp, #-16]
   27458:	ldr	r3, [fp, #-104]	; 0xffffff98
   2745c:	ldr	r3, [r3, #152]	; 0x98
   27460:	cmp	r3, #0
   27464:	movne	r3, #1
   27468:	moveq	r3, #0
   2746c:	uxtb	r3, r3
   27470:	ldrh	r2, [fp, #-106]	; 0xffffff96
   27474:	add	r1, fp, #4
   27478:	ldr	r0, [fp, #-104]	; 0xffffff98
   2747c:	bl	272ac <flatcc_builder_get_user_frame_ptr@@Base+0x568>
   27480:	mov	r3, r0
   27484:	cmp	r3, #0
   27488:	beq	27494 <flatcc_builder_embed_buffer@@Base+0x6c>
   2748c:	mov	r3, #0
   27490:	b	2762c <flatcc_builder_embed_buffer@@Base+0x204>
   27494:	ldr	r3, [fp, #-16]
   27498:	cmp	r3, #0
   2749c:	beq	274a8 <flatcc_builder_embed_buffer@@Base+0x80>
   274a0:	mov	r2, #4
   274a4:	b	274ac <flatcc_builder_embed_buffer@@Base+0x84>
   274a8:	mov	r2, #0
   274ac:	ldr	r3, [fp, #-116]	; 0xffffff8c
   274b0:	add	r3, r2, r3
   274b4:	ldrh	r2, [fp, #4]
   274b8:	mov	r1, r3
   274bc:	ldr	r0, [fp, #-104]	; 0xffffff98
   274c0:	bl	27020 <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   274c4:	str	r0, [fp, #-20]	; 0xffffffec
   274c8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   274cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   274d0:	add	r3, r2, r3
   274d4:	mov	r0, r3
   274d8:	bl	259e4 <main@@Base+0x148>
   274dc:	mov	r3, r0
   274e0:	str	r3, [fp, #-24]	; 0xffffffe8
   274e4:	mov	r3, #0
   274e8:	str	r3, [fp, #-96]	; 0xffffffa0
   274ec:	mov	r3, #0
   274f0:	str	r3, [fp, #-92]	; 0xffffffa4
   274f4:	ldr	r3, [fp, #-104]	; 0xffffff98
   274f8:	ldr	r3, [r3, #152]	; 0x98
   274fc:	cmp	r3, #0
   27500:	beq	27554 <flatcc_builder_embed_buffer@@Base+0x12c>
   27504:	ldr	r3, [fp, #-96]	; 0xffffffa0
   27508:	add	r3, r3, #4
   2750c:	str	r3, [fp, #-96]	; 0xffffffa0
   27510:	ldr	r3, [fp, #-92]	; 0xffffffa4
   27514:	add	r3, r3, #1
   27518:	lsl	r3, r3, #3
   2751c:	sub	r2, fp, #12
   27520:	add	r3, r2, r3
   27524:	sub	r2, fp, #24
   27528:	str	r2, [r3, #-84]	; 0xffffffac
   2752c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   27530:	add	r3, r3, #1
   27534:	lsl	r3, r3, #3
   27538:	sub	r2, fp, #12
   2753c:	add	r3, r2, r3
   27540:	mov	r2, #4
   27544:	str	r2, [r3, #-80]	; 0xffffffb0
   27548:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2754c:	add	r3, r3, #1
   27550:	str	r3, [fp, #-92]	; 0xffffffa4
   27554:	ldr	r3, [fp, #-116]	; 0xffffff8c
   27558:	cmp	r3, #0
   2755c:	beq	275b4 <flatcc_builder_embed_buffer@@Base+0x18c>
   27560:	ldr	r2, [fp, #-96]	; 0xffffffa0
   27564:	ldr	r3, [fp, #-116]	; 0xffffff8c
   27568:	add	r3, r2, r3
   2756c:	str	r3, [fp, #-96]	; 0xffffffa0
   27570:	ldr	r3, [fp, #-92]	; 0xffffffa4
   27574:	add	r3, r3, #1
   27578:	lsl	r3, r3, #3
   2757c:	sub	r2, fp, #12
   27580:	add	r3, r2, r3
   27584:	ldr	r2, [fp, #-112]	; 0xffffff90
   27588:	str	r2, [r3, #-84]	; 0xffffffac
   2758c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   27590:	add	r3, r3, #1
   27594:	lsl	r3, r3, #3
   27598:	sub	r2, fp, #12
   2759c:	add	r3, r2, r3
   275a0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   275a4:	str	r2, [r3, #-80]	; 0xffffffb0
   275a8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   275ac:	add	r3, r3, #1
   275b0:	str	r3, [fp, #-92]	; 0xffffffa4
   275b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   275b8:	cmp	r3, #0
   275bc:	beq	27618 <flatcc_builder_embed_buffer@@Base+0x1f0>
   275c0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   275c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   275c8:	add	r3, r2, r3
   275cc:	str	r3, [fp, #-96]	; 0xffffffa0
   275d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   275d4:	add	r3, r3, #1
   275d8:	lsl	r3, r3, #3
   275dc:	sub	r2, fp, #12
   275e0:	add	r3, r2, r3
   275e4:	ldr	r2, [pc, #80]	; 2763c <flatcc_builder_embed_buffer@@Base+0x214>
   275e8:	ldr	r2, [r4, r2]
   275ec:	str	r2, [r3, #-84]	; 0xffffffac
   275f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   275f4:	add	r3, r3, #1
   275f8:	lsl	r3, r3, #3
   275fc:	sub	r2, fp, #12
   27600:	add	r3, r2, r3
   27604:	ldr	r2, [fp, #-20]	; 0xffffffec
   27608:	str	r2, [r3, #-80]	; 0xffffffb0
   2760c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   27610:	add	r3, r3, #1
   27614:	str	r3, [fp, #-92]	; 0xffffffa4
   27618:	sub	r3, fp, #96	; 0x60
   2761c:	mov	r1, r3
   27620:	ldr	r0, [fp, #-104]	; 0xffffff98
   27624:	bl	270a8 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   27628:	mov	r3, r0
   2762c:	mov	r0, r3
   27630:	sub	sp, fp, #8
   27634:	pop	{r4, fp, pc}
   27638:			; <UNDEFINED> instruction: 0x00020bb0
   2763c:	andeq	r0, r0, r4, ror r0

00027640 <flatcc_builder_create_buffer@@Base>:
   27640:	push	{r4, fp, lr}
   27644:	add	fp, sp, #8
   27648:	sub	sp, sp, #132	; 0x84
   2764c:	str	r0, [fp, #-128]	; 0xffffff80
   27650:	str	r1, [fp, #-132]	; 0xffffff7c
   27654:	str	r3, [fp, #-140]	; 0xffffff74
   27658:	strh	r2, [fp, #-134]	; 0xffffff7a
   2765c:	ldr	r4, [pc, #932]	; 27a08 <flatcc_builder_create_buffer@@Base+0x3c8>
   27660:	add	r4, pc, r4
   27664:	mov	r3, #0
   27668:	str	r3, [fp, #-16]
   2766c:	mov	r3, #0
   27670:	str	r3, [fp, #-120]	; 0xffffff88
   27674:	ldr	r3, [fp, #8]
   27678:	and	r3, r3, #1
   2767c:	cmp	r3, #0
   27680:	movne	r3, #1
   27684:	moveq	r3, #0
   27688:	uxtb	r3, r3
   2768c:	str	r3, [fp, #-20]	; 0xffffffec
   27690:	ldr	r3, [fp, #8]
   27694:	and	r3, r3, #2
   27698:	cmp	r3, #0
   2769c:	movne	r3, #1
   276a0:	moveq	r3, #0
   276a4:	uxtb	r3, r3
   276a8:	str	r3, [fp, #-24]	; 0xffffffe8
   276ac:	ldrh	r2, [fp, #-134]	; 0xffffff7a
   276b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   276b4:	add	r1, fp, #4
   276b8:	ldr	r0, [fp, #-128]	; 0xffffff80
   276bc:	bl	272ac <flatcc_builder_get_user_frame_ptr@@Base+0x568>
   276c0:	mov	r3, r0
   276c4:	cmp	r3, #0
   276c8:	beq	276d4 <flatcc_builder_create_buffer@@Base+0x94>
   276cc:	mov	r3, #0
   276d0:	b	279fc <flatcc_builder_create_buffer@@Base+0x3bc>
   276d4:	ldrh	r3, [fp, #4]
   276d8:	mov	r1, r3
   276dc:	ldr	r0, [fp, #-128]	; 0xffffff80
   276e0:	bl	269e4 <flatcc_builder_clear@@Base+0xb0>
   276e4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   276e8:	cmp	r3, #0
   276ec:	beq	27724 <flatcc_builder_create_buffer@@Base+0xe4>
   276f0:	ldr	r3, [fp, #-132]	; 0xffffff7c
   276f4:	ldr	r3, [r3]
   276f8:	str	r3, [fp, #-120]	; 0xffffff88
   276fc:	ldr	r3, [fp, #-120]	; 0xffffff88
   27700:	mov	r0, r3
   27704:	bl	25a30 <main@@Base+0x194>
   27708:	mov	r3, r0
   2770c:	str	r3, [fp, #-120]	; 0xffffff88
   27710:	ldr	r3, [fp, #-120]	; 0xffffff88
   27714:	mov	r0, r3
   27718:	bl	259e4 <main@@Base+0x148>
   2771c:	mov	r3, r0
   27720:	str	r3, [fp, #-120]	; 0xffffff88
   27724:	ldr	r3, [fp, #-120]	; 0xffffff88
   27728:	cmp	r3, #0
   2772c:	beq	27738 <flatcc_builder_create_buffer@@Base+0xf8>
   27730:	mov	r3, #4
   27734:	b	2773c <flatcc_builder_create_buffer@@Base+0xfc>
   27738:	mov	r3, #0
   2773c:	str	r3, [fp, #-16]
   27740:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27744:	cmp	r3, #0
   27748:	beq	27754 <flatcc_builder_create_buffer@@Base+0x114>
   2774c:	mov	r2, #4
   27750:	b	27758 <flatcc_builder_create_buffer@@Base+0x118>
   27754:	mov	r2, #0
   27758:	ldr	r3, [fp, #-16]
   2775c:	add	r3, r2, r3
   27760:	add	r3, r3, #4
   27764:	ldrh	r2, [fp, #4]
   27768:	mov	r1, r3
   2776c:	ldr	r0, [fp, #-128]	; 0xffffff80
   27770:	bl	27020 <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   27774:	str	r0, [fp, #-28]	; 0xffffffe4
   27778:	mov	r3, #0
   2777c:	str	r3, [fp, #-116]	; 0xffffff8c
   27780:	mov	r3, #0
   27784:	str	r3, [fp, #-112]	; 0xffffff90
   27788:	ldr	r3, [fp, #-20]	; 0xffffffec
   2778c:	cmp	r3, #0
   27790:	bne	277a0 <flatcc_builder_create_buffer@@Base+0x160>
   27794:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27798:	cmp	r3, #0
   2779c:	beq	277f0 <flatcc_builder_create_buffer@@Base+0x1b0>
   277a0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   277a4:	add	r3, r3, #4
   277a8:	str	r3, [fp, #-116]	; 0xffffff8c
   277ac:	ldr	r3, [fp, #-112]	; 0xffffff90
   277b0:	add	r3, r3, #1
   277b4:	lsl	r3, r3, #3
   277b8:	sub	r2, fp, #12
   277bc:	add	r3, r2, r3
   277c0:	sub	r2, fp, #44	; 0x2c
   277c4:	str	r2, [r3, #-104]	; 0xffffff98
   277c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   277cc:	add	r3, r3, #1
   277d0:	lsl	r3, r3, #3
   277d4:	sub	r2, fp, #12
   277d8:	add	r3, r2, r3
   277dc:	mov	r2, #4
   277e0:	str	r2, [r3, #-100]	; 0xffffff9c
   277e4:	ldr	r3, [fp, #-112]	; 0xffffff90
   277e8:	add	r3, r3, #1
   277ec:	str	r3, [fp, #-112]	; 0xffffff90
   277f0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   277f4:	add	r3, r3, #4
   277f8:	str	r3, [fp, #-116]	; 0xffffff8c
   277fc:	ldr	r3, [fp, #-112]	; 0xffffff90
   27800:	add	r3, r3, #1
   27804:	lsl	r3, r3, #3
   27808:	sub	r2, fp, #12
   2780c:	add	r3, r2, r3
   27810:	sub	r2, fp, #40	; 0x28
   27814:	str	r2, [r3, #-104]	; 0xffffff98
   27818:	ldr	r3, [fp, #-112]	; 0xffffff90
   2781c:	add	r3, r3, #1
   27820:	lsl	r3, r3, #3
   27824:	sub	r2, fp, #12
   27828:	add	r3, r2, r3
   2782c:	mov	r2, #4
   27830:	str	r2, [r3, #-100]	; 0xffffff9c
   27834:	ldr	r3, [fp, #-112]	; 0xffffff90
   27838:	add	r3, r3, #1
   2783c:	str	r3, [fp, #-112]	; 0xffffff90
   27840:	ldr	r3, [fp, #-16]
   27844:	cmp	r3, #0
   27848:	beq	278a0 <flatcc_builder_create_buffer@@Base+0x260>
   2784c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   27850:	ldr	r3, [fp, #-16]
   27854:	add	r3, r2, r3
   27858:	str	r3, [fp, #-116]	; 0xffffff8c
   2785c:	ldr	r3, [fp, #-112]	; 0xffffff90
   27860:	add	r3, r3, #1
   27864:	lsl	r3, r3, #3
   27868:	sub	r2, fp, #12
   2786c:	add	r3, r2, r3
   27870:	sub	r2, fp, #120	; 0x78
   27874:	str	r2, [r3, #-104]	; 0xffffff98
   27878:	ldr	r3, [fp, #-112]	; 0xffffff90
   2787c:	add	r3, r3, #1
   27880:	lsl	r3, r3, #3
   27884:	sub	r2, fp, #12
   27888:	add	r3, r2, r3
   2788c:	ldr	r2, [fp, #-16]
   27890:	str	r2, [r3, #-100]	; 0xffffff9c
   27894:	ldr	r3, [fp, #-112]	; 0xffffff90
   27898:	add	r3, r3, #1
   2789c:	str	r3, [fp, #-112]	; 0xffffff90
   278a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   278a4:	cmp	r3, #0
   278a8:	beq	27904 <flatcc_builder_create_buffer@@Base+0x2c4>
   278ac:	ldr	r2, [fp, #-116]	; 0xffffff8c
   278b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   278b4:	add	r3, r2, r3
   278b8:	str	r3, [fp, #-116]	; 0xffffff8c
   278bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   278c0:	add	r3, r3, #1
   278c4:	lsl	r3, r3, #3
   278c8:	sub	r2, fp, #12
   278cc:	add	r3, r2, r3
   278d0:	ldr	r2, [pc, #308]	; 27a0c <flatcc_builder_create_buffer@@Base+0x3cc>
   278d4:	ldr	r2, [r4, r2]
   278d8:	str	r2, [r3, #-104]	; 0xffffff98
   278dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   278e0:	add	r3, r3, #1
   278e4:	lsl	r3, r3, #3
   278e8:	sub	r2, fp, #12
   278ec:	add	r3, r2, r3
   278f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   278f4:	str	r2, [r3, #-100]	; 0xffffff9c
   278f8:	ldr	r3, [fp, #-112]	; 0xffffff90
   278fc:	add	r3, r3, #1
   27900:	str	r3, [fp, #-112]	; 0xffffff90
   27904:	ldr	r3, [fp, #-128]	; 0xffffff80
   27908:	ldr	r3, [r3, #136]	; 0x88
   2790c:	mov	r2, r3
   27910:	ldr	r3, [fp, #-116]	; 0xffffff8c
   27914:	sub	r2, r2, r3
   27918:	ldr	r3, [fp, #-20]	; 0xffffffec
   2791c:	cmp	r3, #0
   27920:	bne	27930 <flatcc_builder_create_buffer@@Base+0x2f0>
   27924:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27928:	cmp	r3, #0
   2792c:	beq	27938 <flatcc_builder_create_buffer@@Base+0x2f8>
   27930:	mov	r3, #4
   27934:	b	2793c <flatcc_builder_create_buffer@@Base+0x2fc>
   27938:	mov	r3, #0
   2793c:	add	r3, r2, r3
   27940:	str	r3, [fp, #-32]	; 0xffffffe0
   27944:	ldr	r3, [fp, #-20]	; 0xffffffec
   27948:	cmp	r3, #0
   2794c:	beq	27978 <flatcc_builder_create_buffer@@Base+0x338>
   27950:	ldr	r3, [fp, #-128]	; 0xffffff80
   27954:	ldr	r3, [r3, #144]	; 0x90
   27958:	mov	r2, r3
   2795c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27960:	sub	r3, r2, r3
   27964:	mov	r0, r3
   27968:	bl	259e4 <main@@Base+0x148>
   2796c:	mov	r3, r0
   27970:	str	r3, [fp, #-44]	; 0xffffffd4
   27974:	b	2799c <flatcc_builder_create_buffer@@Base+0x35c>
   27978:	ldr	r3, [fp, #-128]	; 0xffffff80
   2797c:	ldr	r3, [r3, #140]	; 0x8c
   27980:	mov	r2, r3
   27984:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27988:	sub	r3, r2, r3
   2798c:	mov	r0, r3
   27990:	bl	259e4 <main@@Base+0x148>
   27994:	mov	r3, r0
   27998:	str	r3, [fp, #-44]	; 0xffffffd4
   2799c:	ldr	r2, [fp, #-140]	; 0xffffff74
   279a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   279a4:	sub	r3, r2, r3
   279a8:	mov	r0, r3
   279ac:	bl	259e4 <main@@Base+0x148>
   279b0:	mov	r3, r0
   279b4:	str	r3, [fp, #-40]	; 0xffffffd8
   279b8:	sub	r3, fp, #116	; 0x74
   279bc:	mov	r1, r3
   279c0:	ldr	r0, [fp, #-128]	; 0xffffff80
   279c4:	bl	270a8 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   279c8:	str	r0, [fp, #-36]	; 0xffffffdc
   279cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   279d0:	cmp	r3, #0
   279d4:	bne	279f8 <flatcc_builder_create_buffer@@Base+0x3b8>
   279d8:	ldr	r3, [pc, #48]	; 27a10 <flatcc_builder_create_buffer@@Base+0x3d0>
   279dc:	add	r3, pc, r3
   279e0:	mov	r2, #772	; 0x304
   279e4:	ldr	r1, [pc, #40]	; 27a14 <flatcc_builder_create_buffer@@Base+0x3d4>
   279e8:	add	r1, pc, r1
   279ec:	ldr	r0, [pc, #36]	; 27a18 <flatcc_builder_create_buffer@@Base+0x3d8>
   279f0:	add	r0, pc, r0
   279f4:	bl	12704 <__assert_fail@plt>
   279f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   279fc:	mov	r0, r3
   27a00:	sub	sp, fp, #8
   27a04:	pop	{r4, fp, pc}
   27a08:	muleq	r2, r8, r9
   27a0c:	andeq	r0, r0, r4, ror r0
   27a10:	andeq	lr, r0, ip, asr #9
   27a14:	strdeq	sp, [r0], -r4
   27a18:	andeq	lr, r0, ip, asr #32

00027a1c <flatcc_builder_create_struct@@Base>:
   27a1c:	push	{r4, fp, lr}
   27a20:	add	fp, sp, #8
   27a24:	sub	sp, sp, #100	; 0x64
   27a28:	str	r0, [fp, #-96]	; 0xffffffa0
   27a2c:	str	r1, [fp, #-100]	; 0xffffff9c
   27a30:	str	r2, [fp, #-104]	; 0xffffff98
   27a34:	strh	r3, [fp, #-106]	; 0xffffff96
   27a38:	ldr	r4, [pc, #328]	; 27b88 <flatcc_builder_create_struct@@Base+0x16c>
   27a3c:	add	r4, pc, r4
   27a40:	ldrh	r3, [fp, #-106]	; 0xffffff96
   27a44:	cmp	r3, #0
   27a48:	bne	27a6c <flatcc_builder_create_struct@@Base+0x50>
   27a4c:	ldr	r3, [pc, #312]	; 27b8c <flatcc_builder_create_struct@@Base+0x170>
   27a50:	add	r3, pc, r3
   27a54:	ldr	r2, [pc, #308]	; 27b90 <flatcc_builder_create_struct@@Base+0x174>
   27a58:	ldr	r1, [pc, #308]	; 27b94 <flatcc_builder_create_struct@@Base+0x178>
   27a5c:	add	r1, pc, r1
   27a60:	ldr	r0, [pc, #304]	; 27b98 <flatcc_builder_create_struct@@Base+0x17c>
   27a64:	add	r0, pc, r0
   27a68:	bl	12704 <__assert_fail@plt>
   27a6c:	ldrh	r3, [fp, #-106]	; 0xffffff96
   27a70:	mov	r1, r3
   27a74:	ldr	r0, [fp, #-96]	; 0xffffffa0
   27a78:	bl	269e4 <flatcc_builder_clear@@Base+0xb0>
   27a7c:	ldrh	r3, [fp, #-106]	; 0xffffff96
   27a80:	mov	r2, r3
   27a84:	ldr	r1, [fp, #-104]	; 0xffffff98
   27a88:	ldr	r0, [fp, #-96]	; 0xffffffa0
   27a8c:	bl	27020 <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   27a90:	str	r0, [fp, #-16]
   27a94:	mov	r3, #0
   27a98:	str	r3, [fp, #-88]	; 0xffffffa8
   27a9c:	mov	r3, #0
   27aa0:	str	r3, [fp, #-84]	; 0xffffffac
   27aa4:	ldr	r3, [fp, #-104]	; 0xffffff98
   27aa8:	cmp	r3, #0
   27aac:	beq	27b04 <flatcc_builder_create_struct@@Base+0xe8>
   27ab0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   27ab4:	ldr	r3, [fp, #-104]	; 0xffffff98
   27ab8:	add	r3, r2, r3
   27abc:	str	r3, [fp, #-88]	; 0xffffffa8
   27ac0:	ldr	r3, [fp, #-84]	; 0xffffffac
   27ac4:	add	r3, r3, #1
   27ac8:	lsl	r3, r3, #3
   27acc:	sub	r2, fp, #12
   27ad0:	add	r3, r2, r3
   27ad4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   27ad8:	str	r2, [r3, #-76]	; 0xffffffb4
   27adc:	ldr	r3, [fp, #-84]	; 0xffffffac
   27ae0:	add	r3, r3, #1
   27ae4:	lsl	r3, r3, #3
   27ae8:	sub	r2, fp, #12
   27aec:	add	r3, r2, r3
   27af0:	ldr	r2, [fp, #-104]	; 0xffffff98
   27af4:	str	r2, [r3, #-72]	; 0xffffffb8
   27af8:	ldr	r3, [fp, #-84]	; 0xffffffac
   27afc:	add	r3, r3, #1
   27b00:	str	r3, [fp, #-84]	; 0xffffffac
   27b04:	ldr	r3, [fp, #-16]
   27b08:	cmp	r3, #0
   27b0c:	beq	27b68 <flatcc_builder_create_struct@@Base+0x14c>
   27b10:	ldr	r2, [fp, #-88]	; 0xffffffa8
   27b14:	ldr	r3, [fp, #-16]
   27b18:	add	r3, r2, r3
   27b1c:	str	r3, [fp, #-88]	; 0xffffffa8
   27b20:	ldr	r3, [fp, #-84]	; 0xffffffac
   27b24:	add	r3, r3, #1
   27b28:	lsl	r3, r3, #3
   27b2c:	sub	r2, fp, #12
   27b30:	add	r3, r2, r3
   27b34:	ldr	r2, [pc, #96]	; 27b9c <flatcc_builder_create_struct@@Base+0x180>
   27b38:	ldr	r2, [r4, r2]
   27b3c:	str	r2, [r3, #-76]	; 0xffffffb4
   27b40:	ldr	r3, [fp, #-84]	; 0xffffffac
   27b44:	add	r3, r3, #1
   27b48:	lsl	r3, r3, #3
   27b4c:	sub	r2, fp, #12
   27b50:	add	r3, r2, r3
   27b54:	ldr	r2, [fp, #-16]
   27b58:	str	r2, [r3, #-72]	; 0xffffffb8
   27b5c:	ldr	r3, [fp, #-84]	; 0xffffffac
   27b60:	add	r3, r3, #1
   27b64:	str	r3, [fp, #-84]	; 0xffffffac
   27b68:	sub	r3, fp, #88	; 0x58
   27b6c:	mov	r1, r3
   27b70:	ldr	r0, [fp, #-96]	; 0xffffffa0
   27b74:	bl	270a8 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   27b78:	mov	r3, r0
   27b7c:	mov	r0, r3
   27b80:	sub	sp, fp, #8
   27b84:	pop	{r4, fp, pc}
   27b88:			; <UNDEFINED> instruction: 0x000205bc
   27b8c:	andeq	lr, r0, r8, ror r4
   27b90:	andeq	r0, r0, pc, lsl #6
   27b94:	andeq	sp, r0, r0, lsl #31
   27b98:	andeq	lr, r0, ip, lsr r0
   27b9c:	andeq	r0, r0, r4, ror r0

00027ba0 <flatcc_builder_start_buffer@@Base>:
   27ba0:	push	{r4, fp, lr}
   27ba4:	add	fp, sp, #8
   27ba8:	sub	sp, sp, #20
   27bac:	str	r0, [fp, #-16]
   27bb0:	str	r1, [fp, #-20]	; 0xffffffec
   27bb4:	str	r3, [fp, #-28]	; 0xffffffe4
   27bb8:	strh	r2, [fp, #-22]	; 0xffffffea
   27bbc:	ldr	r4, [pc, #300]	; 27cf0 <flatcc_builder_start_buffer@@Base+0x150>
   27bc0:	add	r4, pc, r4
   27bc4:	ldr	r3, [fp, #-16]
   27bc8:	ldrh	r3, [r3, #128]	; 0x80
   27bcc:	mov	r1, r3
   27bd0:	ldr	r0, [fp, #-16]
   27bd4:	bl	26d78 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   27bd8:	mov	r3, r0
   27bdc:	cmp	r3, #0
   27be0:	beq	27bec <flatcc_builder_start_buffer@@Base+0x4c>
   27be4:	mvn	r3, #0
   27be8:	b	27ce4 <flatcc_builder_start_buffer@@Base+0x144>
   27bec:	ldr	r3, [fp, #-16]
   27bf0:	mov	r2, #1
   27bf4:	strh	r2, [r3, #128]	; 0x80
   27bf8:	ldr	r3, [fp, #-16]
   27bfc:	ldr	r3, [r3, #32]
   27c00:	ldr	r2, [fp, #-16]
   27c04:	ldrh	r2, [r2, #132]	; 0x84
   27c08:	strh	r2, [r3, #34]	; 0x22
   27c0c:	ldr	r3, [fp, #-16]
   27c10:	ldrh	r2, [fp, #-22]	; 0xffffffea
   27c14:	strh	r2, [r3, #132]	; 0x84
   27c18:	ldr	r3, [fp, #-16]
   27c1c:	ldr	r3, [r3, #32]
   27c20:	ldr	r2, [fp, #-16]
   27c24:	ldrh	r2, [r2, #164]	; 0xa4
   27c28:	strh	r2, [r3, #32]
   27c2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27c30:	uxth	r2, r3
   27c34:	ldr	r3, [fp, #-16]
   27c38:	strh	r2, [r3, #164]	; 0xa4
   27c3c:	ldr	r3, [fp, #-16]
   27c40:	ldr	r3, [r3, #32]
   27c44:	ldr	r2, [fp, #-16]
   27c48:	ldr	r2, [r2, #144]	; 0x90
   27c4c:	str	r2, [r3, #20]
   27c50:	ldr	r3, [fp, #-16]
   27c54:	ldr	r3, [r3, #32]
   27c58:	ldr	r2, [fp, #-16]
   27c5c:	ldr	r2, [r2, #152]	; 0x98
   27c60:	str	r2, [r3, #28]
   27c64:	ldr	r3, [fp, #-16]
   27c68:	ldr	r2, [r3, #136]	; 0x88
   27c6c:	ldr	r3, [fp, #-16]
   27c70:	str	r2, [r3, #144]	; 0x90
   27c74:	ldr	r3, [fp, #-16]
   27c78:	ldr	r3, [r3, #148]	; 0x94
   27c7c:	add	r1, r3, #1
   27c80:	ldr	r2, [fp, #-16]
   27c84:	str	r1, [r2, #148]	; 0x94
   27c88:	ldr	r2, [fp, #-16]
   27c8c:	str	r3, [r2, #152]	; 0x98
   27c90:	ldr	r3, [fp, #-16]
   27c94:	ldr	r3, [r3, #32]
   27c98:	ldr	r2, [fp, #-16]
   27c9c:	ldr	r2, [r2, #168]	; 0xa8
   27ca0:	str	r2, [r3, #16]
   27ca4:	ldr	r3, [fp, #-16]
   27ca8:	add	r2, r3, #168	; 0xa8
   27cac:	ldr	r3, [fp, #-20]	; 0xffffffec
   27cb0:	cmp	r3, #0
   27cb4:	beq	27cc0 <flatcc_builder_start_buffer@@Base+0x120>
   27cb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   27cbc:	b	27cc8 <flatcc_builder_start_buffer@@Base+0x128>
   27cc0:	ldr	r3, [pc, #44]	; 27cf4 <flatcc_builder_start_buffer@@Base+0x154>
   27cc4:	ldr	r3, [r4, r3]
   27cc8:	ldr	r3, [r3]
   27ccc:	str	r3, [r2]
   27cd0:	ldr	r3, [fp, #-16]
   27cd4:	ldr	r3, [r3, #32]
   27cd8:	mov	r2, #1
   27cdc:	strh	r2, [r3, #14]
   27ce0:	mov	r3, #0
   27ce4:	mov	r0, r3
   27ce8:	sub	sp, fp, #8
   27cec:	pop	{r4, fp, pc}
   27cf0:	andeq	r0, r2, r8, lsr r4
   27cf4:	andeq	r0, r0, r4, ror r0

00027cf8 <flatcc_builder_end_buffer@@Base>:
   27cf8:	push	{fp, lr}
   27cfc:	add	fp, sp, #4
   27d00:	sub	sp, sp, #24
   27d04:	str	r0, [fp, #-16]
   27d08:	str	r1, [fp, #-20]	; 0xffffffec
   27d0c:	ldr	r3, [fp, #-16]
   27d10:	ldrh	r3, [r3, #164]	; 0xa4
   27d14:	and	r3, r3, #2
   27d18:	str	r3, [fp, #-8]
   27d1c:	ldr	r3, [fp, #-16]
   27d20:	ldr	r3, [r3, #152]	; 0x98
   27d24:	cmp	r3, #0
   27d28:	movne	r3, #1
   27d2c:	moveq	r3, #0
   27d30:	uxtb	r3, r3
   27d34:	mov	r2, r3
   27d38:	ldr	r3, [fp, #-8]
   27d3c:	orr	r3, r3, r2
   27d40:	str	r3, [fp, #-8]
   27d44:	ldr	r3, [fp, #-16]
   27d48:	ldr	r3, [r3, #32]
   27d4c:	ldrh	r3, [r3, #14]
   27d50:	cmp	r3, #1
   27d54:	beq	27d78 <flatcc_builder_end_buffer@@Base+0x80>
   27d58:	ldr	r3, [pc, #224]	; 27e40 <flatcc_builder_end_buffer@@Base+0x148>
   27d5c:	add	r3, pc, r3
   27d60:	ldr	r2, [pc, #220]	; 27e44 <flatcc_builder_end_buffer@@Base+0x14c>
   27d64:	ldr	r1, [pc, #220]	; 27e48 <flatcc_builder_end_buffer@@Base+0x150>
   27d68:	add	r1, pc, r1
   27d6c:	ldr	r0, [pc, #216]	; 27e4c <flatcc_builder_end_buffer@@Base+0x154>
   27d70:	add	r0, pc, r0
   27d74:	bl	12704 <__assert_fail@plt>
   27d78:	ldr	r3, [fp, #-16]
   27d7c:	ldrh	r3, [r3, #132]	; 0x84
   27d80:	mov	r1, r3
   27d84:	ldr	r0, [fp, #-16]
   27d88:	bl	269e4 <flatcc_builder_clear@@Base+0xb0>
   27d8c:	ldr	r3, [fp, #-16]
   27d90:	add	r1, r3, #168	; 0xa8
   27d94:	ldr	r3, [fp, #-16]
   27d98:	ldrh	r0, [r3, #132]	; 0x84
   27d9c:	ldr	r3, [fp, #-16]
   27da0:	ldrh	r3, [r3, #128]	; 0x80
   27da4:	ldr	r2, [fp, #-8]
   27da8:	str	r2, [sp, #4]
   27dac:	str	r3, [sp]
   27db0:	ldr	r3, [fp, #-20]	; 0xffffffec
   27db4:	mov	r2, r0
   27db8:	ldr	r0, [fp, #-16]
   27dbc:	bl	27640 <flatcc_builder_create_buffer@@Base>
   27dc0:	str	r0, [fp, #-12]
   27dc4:	ldr	r3, [fp, #-12]
   27dc8:	cmp	r3, #0
   27dcc:	bne	27dd8 <flatcc_builder_end_buffer@@Base+0xe0>
   27dd0:	mov	r3, #0
   27dd4:	b	27e34 <flatcc_builder_end_buffer@@Base+0x13c>
   27dd8:	ldr	r3, [fp, #-16]
   27ddc:	ldr	r3, [r3, #32]
   27de0:	ldr	r2, [r3, #20]
   27de4:	ldr	r3, [fp, #-16]
   27de8:	str	r2, [r3, #144]	; 0x90
   27dec:	ldr	r3, [fp, #-16]
   27df0:	ldr	r3, [r3, #32]
   27df4:	ldr	r2, [r3, #28]
   27df8:	ldr	r3, [fp, #-16]
   27dfc:	str	r2, [r3, #152]	; 0x98
   27e00:	ldr	r3, [fp, #-16]
   27e04:	ldr	r3, [r3, #32]
   27e08:	ldr	r2, [r3, #16]
   27e0c:	ldr	r3, [fp, #-16]
   27e10:	str	r2, [r3, #168]	; 0xa8
   27e14:	ldr	r3, [fp, #-16]
   27e18:	ldr	r3, [r3, #32]
   27e1c:	ldrh	r2, [r3, #32]
   27e20:	ldr	r3, [fp, #-16]
   27e24:	strh	r2, [r3, #164]	; 0xa4
   27e28:	ldr	r0, [fp, #-16]
   27e2c:	bl	26f58 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   27e30:	ldr	r3, [fp, #-12]
   27e34:	mov	r0, r3
   27e38:	sub	sp, fp, #4
   27e3c:	pop	{fp, pc}
   27e40:	andeq	lr, r0, ip, lsl #3
   27e44:	andeq	r0, r0, r6, asr #6
   27e48:	andeq	sp, r0, r4, ror ip
   27e4c:	andeq	sp, r0, ip, lsr sp

00027e50 <flatcc_builder_start_struct@@Base>:
   27e50:	push	{fp, lr}
   27e54:	add	fp, sp, #4
   27e58:	sub	sp, sp, #16
   27e5c:	str	r0, [fp, #-8]
   27e60:	str	r1, [fp, #-12]
   27e64:	mov	r3, r2
   27e68:	strh	r3, [fp, #-14]
   27e6c:	ldrh	r3, [fp, #-14]
   27e70:	mov	r1, r3
   27e74:	ldr	r0, [fp, #-8]
   27e78:	bl	26d78 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   27e7c:	mov	r3, r0
   27e80:	cmp	r3, #0
   27e84:	beq	27e90 <flatcc_builder_start_struct@@Base+0x40>
   27e88:	mov	r3, #0
   27e8c:	b	27ebc <flatcc_builder_start_struct@@Base+0x6c>
   27e90:	ldr	r3, [fp, #-8]
   27e94:	ldr	r3, [r3, #32]
   27e98:	mov	r2, #2
   27e9c:	strh	r2, [r3, #14]
   27ea0:	mvn	r1, #3
   27ea4:	ldr	r0, [fp, #-8]
   27ea8:	bl	25cf0 <flatcc_builder_default_alloc@@Base+0x1c8>
   27eac:	ldr	r1, [fp, #-12]
   27eb0:	ldr	r0, [fp, #-8]
   27eb4:	bl	25e18 <flatcc_builder_default_alloc@@Base+0x2f0>
   27eb8:	mov	r3, r0
   27ebc:	mov	r0, r3
   27ec0:	sub	sp, fp, #4
   27ec4:	pop	{fp, pc}

00027ec8 <flatcc_builder_struct_edit@@Base>:
   27ec8:	push	{fp}		; (str fp, [sp, #-4]!)
   27ecc:	add	fp, sp, #0
   27ed0:	sub	sp, sp, #12
   27ed4:	str	r0, [fp, #-8]
   27ed8:	ldr	r3, [fp, #-8]
   27edc:	ldr	r3, [r3, #16]
   27ee0:	mov	r0, r3
   27ee4:	add	sp, fp, #0
   27ee8:	pop	{fp}		; (ldr fp, [sp], #4)
   27eec:	bx	lr

00027ef0 <flatcc_builder_end_struct@@Base>:
   27ef0:	push	{fp, lr}
   27ef4:	add	fp, sp, #4
   27ef8:	sub	sp, sp, #16
   27efc:	str	r0, [fp, #-16]
   27f00:	ldr	r3, [fp, #-16]
   27f04:	ldr	r3, [r3, #32]
   27f08:	ldrh	r3, [r3, #14]
   27f0c:	cmp	r3, #2
   27f10:	beq	27f34 <flatcc_builder_end_struct@@Base+0x44>
   27f14:	ldr	r3, [pc, #104]	; 27f84 <flatcc_builder_end_struct@@Base+0x94>
   27f18:	add	r3, pc, r3
   27f1c:	mov	r2, #872	; 0x368
   27f20:	ldr	r1, [pc, #96]	; 27f88 <flatcc_builder_end_struct@@Base+0x98>
   27f24:	add	r1, pc, r1
   27f28:	ldr	r0, [pc, #92]	; 27f8c <flatcc_builder_end_struct@@Base+0x9c>
   27f2c:	add	r0, pc, r0
   27f30:	bl	12704 <__assert_fail@plt>
   27f34:	ldr	r3, [fp, #-16]
   27f38:	ldr	r1, [r3, #16]
   27f3c:	ldr	r3, [fp, #-16]
   27f40:	ldr	r2, [r3, #20]
   27f44:	ldr	r3, [fp, #-16]
   27f48:	ldrh	r3, [r3, #130]	; 0x82
   27f4c:	ldr	r0, [fp, #-16]
   27f50:	bl	27a1c <flatcc_builder_create_struct@@Base>
   27f54:	str	r0, [fp, #-8]
   27f58:	ldr	r3, [fp, #-8]
   27f5c:	cmp	r3, #0
   27f60:	bne	27f6c <flatcc_builder_end_struct@@Base+0x7c>
   27f64:	mov	r3, #0
   27f68:	b	27f78 <flatcc_builder_end_struct@@Base+0x88>
   27f6c:	ldr	r0, [fp, #-16]
   27f70:	bl	26f58 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   27f74:	ldr	r3, [fp, #-8]
   27f78:	mov	r0, r3
   27f7c:	sub	sp, fp, #4
   27f80:	pop	{fp, pc}
   27f84:	andeq	sp, r0, ip, ror #31
   27f88:			; <UNDEFINED> instruction: 0x0000dab8
   27f8c:	andeq	sp, r0, ip, lsr #23
   27f90:	push	{fp, lr}
   27f94:	add	fp, sp, #4
   27f98:	sub	sp, sp, #24
   27f9c:	str	r0, [fp, #-16]
   27fa0:	str	r1, [fp, #-20]	; 0xffffffec
   27fa4:	str	r2, [fp, #-24]	; 0xffffffe8
   27fa8:	ldr	r3, [fp, #-16]
   27fac:	ldr	r3, [r3, #32]
   27fb0:	ldr	r3, [r3, #20]
   27fb4:	str	r3, [fp, #-8]
   27fb8:	ldr	r2, [fp, #-8]
   27fbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   27fc0:	add	r3, r2, r3
   27fc4:	str	r3, [fp, #-12]
   27fc8:	ldr	r2, [fp, #-8]
   27fcc:	ldr	r3, [fp, #-12]
   27fd0:	cmp	r2, r3
   27fd4:	bhi	27fe8 <flatcc_builder_end_struct@@Base+0xf8>
   27fd8:	ldr	r2, [fp, #-12]
   27fdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27fe0:	cmp	r2, r3
   27fe4:	bls	28030 <flatcc_builder_end_struct@@Base+0x140>
   27fe8:	ldr	r2, [fp, #-8]
   27fec:	ldr	r3, [fp, #-12]
   27ff0:	cmp	r2, r3
   27ff4:	bhi	28008 <flatcc_builder_end_struct@@Base+0x118>
   27ff8:	ldr	r2, [fp, #-12]
   27ffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28000:	cmp	r2, r3
   28004:	bls	28028 <flatcc_builder_end_struct@@Base+0x138>
   28008:	ldr	r3, [pc, #64]	; 28050 <flatcc_builder_end_struct@@Base+0x160>
   2800c:	add	r3, pc, r3
   28010:	mov	r2, #892	; 0x37c
   28014:	ldr	r1, [pc, #56]	; 28054 <flatcc_builder_end_struct@@Base+0x164>
   28018:	add	r1, pc, r1
   2801c:	ldr	r0, [pc, #52]	; 28058 <flatcc_builder_end_struct@@Base+0x168>
   28020:	add	r0, pc, r0
   28024:	bl	12704 <__assert_fail@plt>
   28028:	mvn	r3, #0
   2802c:	b	28044 <flatcc_builder_end_struct@@Base+0x154>
   28030:	ldr	r3, [fp, #-16]
   28034:	ldr	r3, [r3, #32]
   28038:	ldr	r2, [fp, #-12]
   2803c:	str	r2, [r3, #20]
   28040:	mov	r3, #0
   28044:	mov	r0, r3
   28048:	sub	sp, fp, #4
   2804c:	pop	{fp, pc}
   28050:	andeq	sp, r0, r4, lsl pc
   28054:	andeq	sp, r0, r4, asr #19
   28058:	andeq	sp, r0, r4, ror #21

0002805c <flatcc_builder_extend_vector@@Base>:
   2805c:	push	{fp, lr}
   28060:	add	fp, sp, #4
   28064:	sub	sp, sp, #8
   28068:	str	r0, [fp, #-8]
   2806c:	str	r1, [fp, #-12]
   28070:	ldr	r3, [fp, #-8]
   28074:	ldr	r3, [r3, #32]
   28078:	ldr	r3, [r3, #24]
   2807c:	mov	r2, r3
   28080:	ldr	r1, [fp, #-12]
   28084:	ldr	r0, [fp, #-8]
   28088:	bl	27f90 <flatcc_builder_end_struct@@Base+0xa0>
   2808c:	mov	r3, r0
   28090:	cmp	r3, #0
   28094:	beq	280a0 <flatcc_builder_extend_vector@@Base+0x44>
   28098:	mov	r3, #0
   2809c:	b	280c4 <flatcc_builder_extend_vector@@Base+0x68>
   280a0:	ldr	r3, [fp, #-8]
   280a4:	ldr	r3, [r3, #32]
   280a8:	ldr	r3, [r3, #16]
   280ac:	ldr	r2, [fp, #-12]
   280b0:	mul	r3, r2, r3
   280b4:	mov	r1, r3
   280b8:	ldr	r0, [fp, #-8]
   280bc:	bl	25e18 <flatcc_builder_default_alloc@@Base+0x2f0>
   280c0:	mov	r3, r0
   280c4:	mov	r0, r3
   280c8:	sub	sp, fp, #4
   280cc:	pop	{fp, pc}

000280d0 <flatcc_builder_vector_push@@Base>:
   280d0:	push	{fp, lr}
   280d4:	add	fp, sp, #4
   280d8:	sub	sp, sp, #8
   280dc:	str	r0, [fp, #-8]
   280e0:	str	r1, [fp, #-12]
   280e4:	ldr	r3, [fp, #-8]
   280e8:	ldr	r3, [r3, #32]
   280ec:	ldrh	r3, [r3, #14]
   280f0:	cmp	r3, #4
   280f4:	beq	28118 <flatcc_builder_vector_push@@Base+0x48>
   280f8:	ldr	r3, [pc, #200]	; 281c8 <flatcc_builder_vector_push@@Base+0xf8>
   280fc:	add	r3, pc, r3
   28100:	ldr	r2, [pc, #196]	; 281cc <flatcc_builder_vector_push@@Base+0xfc>
   28104:	ldr	r1, [pc, #196]	; 281d0 <flatcc_builder_vector_push@@Base+0x100>
   28108:	add	r1, pc, r1
   2810c:	ldr	r0, [pc, #192]	; 281d4 <flatcc_builder_vector_push@@Base+0x104>
   28110:	add	r0, pc, r0
   28114:	bl	12704 <__assert_fail@plt>
   28118:	ldr	r3, [fp, #-8]
   2811c:	ldr	r3, [r3, #32]
   28120:	ldr	r2, [r3, #20]
   28124:	ldr	r3, [fp, #-8]
   28128:	ldr	r3, [r3, #32]
   2812c:	ldr	r3, [r3, #24]
   28130:	cmp	r2, r3
   28134:	bls	28180 <flatcc_builder_vector_push@@Base+0xb0>
   28138:	ldr	r3, [fp, #-8]
   2813c:	ldr	r3, [r3, #32]
   28140:	ldr	r2, [r3, #20]
   28144:	ldr	r3, [fp, #-8]
   28148:	ldr	r3, [r3, #32]
   2814c:	ldr	r3, [r3, #24]
   28150:	cmp	r2, r3
   28154:	bls	28178 <flatcc_builder_vector_push@@Base+0xa8>
   28158:	ldr	r3, [pc, #120]	; 281d8 <flatcc_builder_vector_push@@Base+0x108>
   2815c:	add	r3, pc, r3
   28160:	mov	r2, #908	; 0x38c
   28164:	ldr	r1, [pc, #112]	; 281dc <flatcc_builder_vector_push@@Base+0x10c>
   28168:	add	r1, pc, r1
   2816c:	ldr	r0, [pc, #108]	; 281e0 <flatcc_builder_vector_push@@Base+0x110>
   28170:	add	r0, pc, r0
   28174:	bl	12704 <__assert_fail@plt>
   28178:	mov	r3, #0
   2817c:	b	281bc <flatcc_builder_vector_push@@Base+0xec>
   28180:	ldr	r3, [fp, #-8]
   28184:	ldr	r3, [r3, #32]
   28188:	ldr	r2, [fp, #-8]
   2818c:	ldr	r2, [r2, #32]
   28190:	ldr	r2, [r2, #20]
   28194:	add	r2, r2, #1
   28198:	str	r2, [r3, #20]
   2819c:	ldr	r3, [fp, #-8]
   281a0:	ldr	r3, [r3, #32]
   281a4:	ldr	r3, [r3, #16]
   281a8:	mov	r2, r3
   281ac:	ldr	r1, [fp, #-12]
   281b0:	ldr	r0, [fp, #-8]
   281b4:	bl	25f10 <flatcc_builder_default_alloc@@Base+0x3e8>
   281b8:	mov	r3, r0
   281bc:	mov	r0, r3
   281c0:	sub	sp, fp, #4
   281c4:	pop	{fp, pc}
   281c8:	andeq	sp, r0, r8, lsr lr
   281cc:	andeq	r0, r0, fp, lsl #7
   281d0:	ldrdeq	sp, [r0], -r4
   281d4:	andeq	sp, r0, r0, lsl sl
   281d8:	ldrdeq	sp, [r0], -r8
   281dc:	andeq	sp, r0, r4, ror r8
   281e0:	ldrdeq	sp, [r0], -ip

000281e4 <flatcc_builder_append_vector@@Base>:
   281e4:	push	{fp, lr}
   281e8:	add	fp, sp, #4
   281ec:	sub	sp, sp, #16
   281f0:	str	r0, [fp, #-8]
   281f4:	str	r1, [fp, #-12]
   281f8:	str	r2, [fp, #-16]
   281fc:	ldr	r3, [fp, #-8]
   28200:	ldr	r3, [r3, #32]
   28204:	ldrh	r3, [r3, #14]
   28208:	cmp	r3, #4
   2820c:	beq	28230 <flatcc_builder_append_vector@@Base+0x4c>
   28210:	ldr	r3, [pc, #124]	; 28294 <flatcc_builder_append_vector@@Base+0xb0>
   28214:	add	r3, pc, r3
   28218:	ldr	r2, [pc, #120]	; 28298 <flatcc_builder_append_vector@@Base+0xb4>
   2821c:	ldr	r1, [pc, #120]	; 2829c <flatcc_builder_append_vector@@Base+0xb8>
   28220:	add	r1, pc, r1
   28224:	ldr	r0, [pc, #116]	; 282a0 <flatcc_builder_append_vector@@Base+0xbc>
   28228:	add	r0, pc, r0
   2822c:	bl	12704 <__assert_fail@plt>
   28230:	ldr	r3, [fp, #-8]
   28234:	ldr	r3, [r3, #32]
   28238:	ldr	r3, [r3, #24]
   2823c:	mov	r2, r3
   28240:	ldr	r1, [fp, #-16]
   28244:	ldr	r0, [fp, #-8]
   28248:	bl	27f90 <flatcc_builder_end_struct@@Base+0xa0>
   2824c:	mov	r3, r0
   28250:	cmp	r3, #0
   28254:	beq	28260 <flatcc_builder_append_vector@@Base+0x7c>
   28258:	mov	r3, #0
   2825c:	b	28288 <flatcc_builder_append_vector@@Base+0xa4>
   28260:	ldr	r3, [fp, #-8]
   28264:	ldr	r3, [r3, #32]
   28268:	ldr	r3, [r3, #16]
   2826c:	ldr	r2, [fp, #-16]
   28270:	mul	r3, r2, r3
   28274:	mov	r2, r3
   28278:	ldr	r1, [fp, #-12]
   2827c:	ldr	r0, [fp, #-8]
   28280:	bl	25f10 <flatcc_builder_default_alloc@@Base+0x3e8>
   28284:	mov	r3, r0
   28288:	mov	r0, r3
   2828c:	sub	sp, fp, #4
   28290:	pop	{fp, pc}
   28294:	andeq	sp, r0, ip, lsr sp
   28298:	muleq	r0, r3, r3
   2829c:			; <UNDEFINED> instruction: 0x0000d7bc
   282a0:	strdeq	sp, [r0], -r8

000282a4 <flatcc_builder_extend_offset_vector@@Base>:
   282a4:	push	{fp, lr}
   282a8:	add	fp, sp, #4
   282ac:	sub	sp, sp, #8
   282b0:	str	r0, [fp, #-8]
   282b4:	str	r1, [fp, #-12]
   282b8:	mvn	r2, #-1073741824	; 0xc0000000
   282bc:	ldr	r1, [fp, #-12]
   282c0:	ldr	r0, [fp, #-8]
   282c4:	bl	27f90 <flatcc_builder_end_struct@@Base+0xa0>
   282c8:	mov	r3, r0
   282cc:	cmp	r3, #0
   282d0:	beq	282dc <flatcc_builder_extend_offset_vector@@Base+0x38>
   282d4:	mov	r3, #0
   282d8:	b	282f4 <flatcc_builder_extend_offset_vector@@Base+0x50>
   282dc:	ldr	r3, [fp, #-12]
   282e0:	lsl	r3, r3, #2
   282e4:	mov	r1, r3
   282e8:	ldr	r0, [fp, #-8]
   282ec:	bl	25e18 <flatcc_builder_default_alloc@@Base+0x2f0>
   282f0:	mov	r3, r0
   282f4:	mov	r0, r3
   282f8:	sub	sp, fp, #4
   282fc:	pop	{fp, pc}

00028300 <flatcc_builder_offset_vector_push@@Base>:
   28300:	push	{fp, lr}
   28304:	add	fp, sp, #4
   28308:	sub	sp, sp, #16
   2830c:	str	r0, [fp, #-16]
   28310:	str	r1, [fp, #-20]	; 0xffffffec
   28314:	ldr	r3, [fp, #-16]
   28318:	ldr	r3, [r3, #32]
   2831c:	ldrh	r3, [r3, #14]
   28320:	cmp	r3, #5
   28324:	beq	28348 <flatcc_builder_offset_vector_push@@Base+0x48>
   28328:	ldr	r3, [pc, #144]	; 283c0 <flatcc_builder_offset_vector_push@@Base+0xc0>
   2832c:	add	r3, pc, r3
   28330:	ldr	r2, [pc, #140]	; 283c4 <flatcc_builder_offset_vector_push@@Base+0xc4>
   28334:	ldr	r1, [pc, #140]	; 283c8 <flatcc_builder_offset_vector_push@@Base+0xc8>
   28338:	add	r1, pc, r1
   2833c:	ldr	r0, [pc, #136]	; 283cc <flatcc_builder_offset_vector_push@@Base+0xcc>
   28340:	add	r0, pc, r0
   28344:	bl	12704 <__assert_fail@plt>
   28348:	ldr	r3, [fp, #-16]
   2834c:	ldr	r3, [r3, #32]
   28350:	ldr	r3, [r3, #20]
   28354:	cmn	r3, #-1073741823	; 0xc0000001
   28358:	bne	28364 <flatcc_builder_offset_vector_push@@Base+0x64>
   2835c:	mov	r3, #0
   28360:	b	283b4 <flatcc_builder_offset_vector_push@@Base+0xb4>
   28364:	ldr	r3, [fp, #-16]
   28368:	ldr	r3, [r3, #32]
   2836c:	ldr	r2, [fp, #-16]
   28370:	ldr	r2, [r2, #32]
   28374:	ldr	r2, [r2, #20]
   28378:	add	r2, r2, #1
   2837c:	str	r2, [r3, #20]
   28380:	mov	r1, #4
   28384:	ldr	r0, [fp, #-16]
   28388:	bl	25e18 <flatcc_builder_default_alloc@@Base+0x2f0>
   2838c:	str	r0, [fp, #-8]
   28390:	ldr	r3, [fp, #-8]
   28394:	cmp	r3, #0
   28398:	bne	283a4 <flatcc_builder_offset_vector_push@@Base+0xa4>
   2839c:	mov	r3, #0
   283a0:	b	283b4 <flatcc_builder_offset_vector_push@@Base+0xb4>
   283a4:	ldr	r3, [fp, #-8]
   283a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   283ac:	str	r2, [r3]
   283b0:	ldr	r3, [fp, #-8]
   283b4:	mov	r0, r3
   283b8:	sub	sp, fp, #4
   283bc:	pop	{fp, pc}
   283c0:	andeq	sp, r0, r4, asr #24
   283c4:	andeq	r0, r0, r6, lsr #7
   283c8:	andeq	sp, r0, r4, lsr #13
   283cc:	andeq	sp, r0, ip, asr #16

000283d0 <flatcc_builder_append_offset_vector@@Base>:
   283d0:	push	{fp, lr}
   283d4:	add	fp, sp, #4
   283d8:	sub	sp, sp, #16
   283dc:	str	r0, [fp, #-8]
   283e0:	str	r1, [fp, #-12]
   283e4:	str	r2, [fp, #-16]
   283e8:	ldr	r3, [fp, #-8]
   283ec:	ldr	r3, [r3, #32]
   283f0:	ldrh	r3, [r3, #14]
   283f4:	cmp	r3, #5
   283f8:	beq	2841c <flatcc_builder_append_offset_vector@@Base+0x4c>
   283fc:	ldr	r3, [pc, #100]	; 28468 <flatcc_builder_append_offset_vector@@Base+0x98>
   28400:	add	r3, pc, r3
   28404:	mov	r2, #948	; 0x3b4
   28408:	ldr	r1, [pc, #92]	; 2846c <flatcc_builder_append_offset_vector@@Base+0x9c>
   2840c:	add	r1, pc, r1
   28410:	ldr	r0, [pc, #88]	; 28470 <flatcc_builder_append_offset_vector@@Base+0xa0>
   28414:	add	r0, pc, r0
   28418:	bl	12704 <__assert_fail@plt>
   2841c:	mvn	r2, #-1073741824	; 0xc0000000
   28420:	ldr	r1, [fp, #-16]
   28424:	ldr	r0, [fp, #-8]
   28428:	bl	27f90 <flatcc_builder_end_struct@@Base+0xa0>
   2842c:	mov	r3, r0
   28430:	cmp	r3, #0
   28434:	beq	28440 <flatcc_builder_append_offset_vector@@Base+0x70>
   28438:	mov	r3, #0
   2843c:	b	2845c <flatcc_builder_append_offset_vector@@Base+0x8c>
   28440:	ldr	r3, [fp, #-16]
   28444:	lsl	r3, r3, #2
   28448:	mov	r2, r3
   2844c:	ldr	r1, [fp, #-12]
   28450:	ldr	r0, [fp, #-8]
   28454:	bl	25f10 <flatcc_builder_default_alloc@@Base+0x3e8>
   28458:	mov	r3, r0
   2845c:	mov	r0, r3
   28460:	sub	sp, fp, #4
   28464:	pop	{fp, pc}
   28468:	muleq	r0, r4, fp
   2846c:	ldrdeq	sp, [r0], -r0
   28470:	andeq	sp, r0, r8, ror r7

00028474 <flatcc_builder_extend_string@@Base>:
   28474:	push	{fp, lr}
   28478:	add	fp, sp, #4
   2847c:	sub	sp, sp, #8
   28480:	str	r0, [fp, #-8]
   28484:	str	r1, [fp, #-12]
   28488:	ldr	r3, [fp, #-8]
   2848c:	ldr	r3, [r3, #32]
   28490:	ldrh	r3, [r3, #14]
   28494:	cmp	r3, #6
   28498:	beq	284bc <flatcc_builder_extend_string@@Base+0x48>
   2849c:	ldr	r3, [pc, #88]	; 284fc <flatcc_builder_extend_string@@Base+0x88>
   284a0:	add	r3, pc, r3
   284a4:	ldr	r2, [pc, #84]	; 28500 <flatcc_builder_extend_string@@Base+0x8c>
   284a8:	ldr	r1, [pc, #84]	; 28504 <flatcc_builder_extend_string@@Base+0x90>
   284ac:	add	r1, pc, r1
   284b0:	ldr	r0, [pc, #80]	; 28508 <flatcc_builder_extend_string@@Base+0x94>
   284b4:	add	r0, pc, r0
   284b8:	bl	12704 <__assert_fail@plt>
   284bc:	mvn	r2, #0
   284c0:	ldr	r1, [fp, #-12]
   284c4:	ldr	r0, [fp, #-8]
   284c8:	bl	27f90 <flatcc_builder_end_struct@@Base+0xa0>
   284cc:	mov	r3, r0
   284d0:	cmp	r3, #0
   284d4:	beq	284e0 <flatcc_builder_extend_string@@Base+0x6c>
   284d8:	mov	r3, #0
   284dc:	b	284f0 <flatcc_builder_extend_string@@Base+0x7c>
   284e0:	ldr	r1, [fp, #-12]
   284e4:	ldr	r0, [fp, #-8]
   284e8:	bl	25e18 <flatcc_builder_default_alloc@@Base+0x2f0>
   284ec:	mov	r3, r0
   284f0:	mov	r0, r3
   284f4:	sub	sp, fp, #4
   284f8:	pop	{fp, pc}
   284fc:	andeq	sp, r0, r8, lsl fp
   28500:			; <UNDEFINED> instruction: 0x000003bd
   28504:	andeq	sp, r0, r0, lsr r5
   28508:	andeq	sp, r0, ip, lsl #14

0002850c <flatcc_builder_append_string@@Base>:
   2850c:	push	{fp, lr}
   28510:	add	fp, sp, #4
   28514:	sub	sp, sp, #16
   28518:	str	r0, [fp, #-8]
   2851c:	str	r1, [fp, #-12]
   28520:	str	r2, [fp, #-16]
   28524:	ldr	r3, [fp, #-8]
   28528:	ldr	r3, [r3, #32]
   2852c:	ldrh	r3, [r3, #14]
   28530:	cmp	r3, #6
   28534:	beq	28558 <flatcc_builder_append_string@@Base+0x4c>
   28538:	ldr	r3, [pc, #92]	; 2859c <flatcc_builder_append_string@@Base+0x90>
   2853c:	add	r3, pc, r3
   28540:	ldr	r2, [pc, #88]	; 285a0 <flatcc_builder_append_string@@Base+0x94>
   28544:	ldr	r1, [pc, #88]	; 285a4 <flatcc_builder_append_string@@Base+0x98>
   28548:	add	r1, pc, r1
   2854c:	ldr	r0, [pc, #84]	; 285a8 <flatcc_builder_append_string@@Base+0x9c>
   28550:	add	r0, pc, r0
   28554:	bl	12704 <__assert_fail@plt>
   28558:	mvn	r2, #0
   2855c:	ldr	r1, [fp, #-16]
   28560:	ldr	r0, [fp, #-8]
   28564:	bl	27f90 <flatcc_builder_end_struct@@Base+0xa0>
   28568:	mov	r3, r0
   2856c:	cmp	r3, #0
   28570:	beq	2857c <flatcc_builder_append_string@@Base+0x70>
   28574:	mov	r3, #0
   28578:	b	28590 <flatcc_builder_append_string@@Base+0x84>
   2857c:	ldr	r2, [fp, #-16]
   28580:	ldr	r1, [fp, #-12]
   28584:	ldr	r0, [fp, #-8]
   28588:	bl	25f10 <flatcc_builder_default_alloc@@Base+0x3e8>
   2858c:	mov	r3, r0
   28590:	mov	r0, r3
   28594:	sub	sp, fp, #4
   28598:	pop	{fp, pc}
   2859c:	muleq	r0, ip, sl
   285a0:	andeq	r0, r0, r6, asr #7
   285a4:	muleq	r0, r4, r4
   285a8:	andeq	sp, r0, r0, ror r6

000285ac <flatcc_builder_append_string_str@@Base>:
   285ac:	push	{fp, lr}
   285b0:	add	fp, sp, #4
   285b4:	sub	sp, sp, #8
   285b8:	str	r0, [fp, #-8]
   285bc:	str	r1, [fp, #-12]
   285c0:	ldr	r0, [fp, #-12]
   285c4:	bl	12680 <strlen@plt>
   285c8:	mov	r3, r0
   285cc:	mov	r2, r3
   285d0:	ldr	r1, [fp, #-12]
   285d4:	ldr	r0, [fp, #-8]
   285d8:	bl	2850c <flatcc_builder_append_string@@Base>
   285dc:	mov	r3, r0
   285e0:	mov	r0, r3
   285e4:	sub	sp, fp, #4
   285e8:	pop	{fp, pc}

000285ec <flatcc_builder_append_string_strn@@Base>:
   285ec:	push	{fp, lr}
   285f0:	add	fp, sp, #4
   285f4:	sub	sp, sp, #16
   285f8:	str	r0, [fp, #-8]
   285fc:	str	r1, [fp, #-12]
   28600:	str	r2, [fp, #-16]
   28604:	ldr	r1, [fp, #-16]
   28608:	ldr	r0, [fp, #-12]
   2860c:	bl	25ad4 <main@@Base+0x238>
   28610:	mov	r3, r0
   28614:	mov	r2, r3
   28618:	ldr	r1, [fp, #-12]
   2861c:	ldr	r0, [fp, #-8]
   28620:	bl	2850c <flatcc_builder_append_string@@Base>
   28624:	mov	r3, r0
   28628:	mov	r0, r3
   2862c:	sub	sp, fp, #4
   28630:	pop	{fp, pc}

00028634 <flatcc_builder_truncate_vector@@Base>:
   28634:	push	{fp, lr}
   28638:	add	fp, sp, #4
   2863c:	sub	sp, sp, #8
   28640:	str	r0, [fp, #-8]
   28644:	str	r1, [fp, #-12]
   28648:	ldr	r3, [fp, #-8]
   2864c:	ldr	r3, [r3, #32]
   28650:	ldrh	r3, [r3, #14]
   28654:	cmp	r3, #4
   28658:	beq	2867c <flatcc_builder_truncate_vector@@Base+0x48>
   2865c:	ldr	r3, [pc, #192]	; 28724 <flatcc_builder_truncate_vector@@Base+0xf0>
   28660:	add	r3, pc, r3
   28664:	ldr	r2, [pc, #188]	; 28728 <flatcc_builder_truncate_vector@@Base+0xf4>
   28668:	ldr	r1, [pc, #188]	; 2872c <flatcc_builder_truncate_vector@@Base+0xf8>
   2866c:	add	r1, pc, r1
   28670:	ldr	r0, [pc, #184]	; 28730 <flatcc_builder_truncate_vector@@Base+0xfc>
   28674:	add	r0, pc, r0
   28678:	bl	12704 <__assert_fail@plt>
   2867c:	ldr	r3, [fp, #-8]
   28680:	ldr	r3, [r3, #32]
   28684:	ldr	r2, [r3, #20]
   28688:	ldr	r3, [fp, #-12]
   2868c:	cmp	r2, r3
   28690:	bcs	286d4 <flatcc_builder_truncate_vector@@Base+0xa0>
   28694:	ldr	r3, [fp, #-8]
   28698:	ldr	r3, [r3, #32]
   2869c:	ldr	r2, [r3, #20]
   286a0:	ldr	r3, [fp, #-12]
   286a4:	cmp	r2, r3
   286a8:	bcs	286cc <flatcc_builder_truncate_vector@@Base+0x98>
   286ac:	ldr	r3, [pc, #128]	; 28734 <flatcc_builder_truncate_vector@@Base+0x100>
   286b0:	add	r3, pc, r3
   286b4:	ldr	r2, [pc, #124]	; 28738 <flatcc_builder_truncate_vector@@Base+0x104>
   286b8:	ldr	r1, [pc, #124]	; 2873c <flatcc_builder_truncate_vector@@Base+0x108>
   286bc:	add	r1, pc, r1
   286c0:	ldr	r0, [pc, #120]	; 28740 <flatcc_builder_truncate_vector@@Base+0x10c>
   286c4:	add	r0, pc, r0
   286c8:	bl	12704 <__assert_fail@plt>
   286cc:	mvn	r3, #0
   286d0:	b	28718 <flatcc_builder_truncate_vector@@Base+0xe4>
   286d4:	ldr	r3, [fp, #-8]
   286d8:	ldr	r3, [r3, #32]
   286dc:	ldr	r2, [fp, #-8]
   286e0:	ldr	r2, [r2, #32]
   286e4:	ldr	r1, [r2, #20]
   286e8:	ldr	r2, [fp, #-12]
   286ec:	sub	r2, r1, r2
   286f0:	str	r2, [r3, #20]
   286f4:	ldr	r3, [fp, #-8]
   286f8:	ldr	r3, [r3, #32]
   286fc:	ldr	r3, [r3, #16]
   28700:	ldr	r2, [fp, #-12]
   28704:	mul	r3, r2, r3
   28708:	mov	r1, r3
   2870c:	ldr	r0, [fp, #-8]
   28710:	bl	25eb4 <flatcc_builder_default_alloc@@Base+0x38c>
   28714:	mov	r3, #0
   28718:	mov	r0, r3
   2871c:	sub	sp, fp, #4
   28720:	pop	{fp, pc}
   28724:	muleq	r0, r8, r9
   28728:	ldrdeq	r0, [r0], -r9
   2872c:	andeq	sp, r0, r0, ror r3
   28730:	andeq	sp, r0, ip, lsr #9
   28734:	andeq	sp, r0, r8, asr #18
   28738:	ldrdeq	r0, [r0], -sl
   2873c:	andeq	sp, r0, r0, lsr #6
   28740:	andeq	sp, r0, r8, lsr #10

00028744 <flatcc_builder_truncate_offset_vector@@Base>:
   28744:	push	{fp, lr}
   28748:	add	fp, sp, #4
   2874c:	sub	sp, sp, #8
   28750:	str	r0, [fp, #-8]
   28754:	str	r1, [fp, #-12]
   28758:	ldr	r3, [fp, #-8]
   2875c:	ldr	r3, [r3, #32]
   28760:	ldrh	r3, [r3, #14]
   28764:	cmp	r3, #5
   28768:	beq	2878c <flatcc_builder_truncate_offset_vector@@Base+0x48>
   2876c:	ldr	r3, [pc, #192]	; 28834 <flatcc_builder_truncate_offset_vector@@Base+0xf0>
   28770:	add	r3, pc, r3
   28774:	ldr	r2, [pc, #188]	; 28838 <flatcc_builder_truncate_offset_vector@@Base+0xf4>
   28778:	ldr	r1, [pc, #188]	; 2883c <flatcc_builder_truncate_offset_vector@@Base+0xf8>
   2877c:	add	r1, pc, r1
   28780:	ldr	r0, [pc, #184]	; 28840 <flatcc_builder_truncate_offset_vector@@Base+0xfc>
   28784:	add	r0, pc, r0
   28788:	bl	12704 <__assert_fail@plt>
   2878c:	ldr	r3, [fp, #-8]
   28790:	ldr	r3, [r3, #32]
   28794:	ldr	r2, [r3, #20]
   28798:	ldr	r3, [fp, #-12]
   2879c:	cmp	r2, r3
   287a0:	bcs	287e4 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   287a4:	ldr	r3, [fp, #-8]
   287a8:	ldr	r3, [r3, #32]
   287ac:	ldr	r2, [r3, #20]
   287b0:	ldr	r3, [fp, #-12]
   287b4:	cmp	r2, r3
   287b8:	bcs	287dc <flatcc_builder_truncate_offset_vector@@Base+0x98>
   287bc:	ldr	r3, [pc, #128]	; 28844 <flatcc_builder_truncate_offset_vector@@Base+0x100>
   287c0:	add	r3, pc, r3
   287c4:	ldr	r2, [pc, #124]	; 28848 <flatcc_builder_truncate_offset_vector@@Base+0x104>
   287c8:	ldr	r1, [pc, #124]	; 2884c <flatcc_builder_truncate_offset_vector@@Base+0x108>
   287cc:	add	r1, pc, r1
   287d0:	ldr	r0, [pc, #120]	; 28850 <flatcc_builder_truncate_offset_vector@@Base+0x10c>
   287d4:	add	r0, pc, r0
   287d8:	bl	12704 <__assert_fail@plt>
   287dc:	mvn	r3, #0
   287e0:	b	28828 <flatcc_builder_truncate_offset_vector@@Base+0xe4>
   287e4:	ldr	r3, [fp, #-8]
   287e8:	ldr	r3, [r3, #32]
   287ec:	ldr	r2, [fp, #-8]
   287f0:	ldr	r2, [r2, #32]
   287f4:	ldr	r1, [r2, #20]
   287f8:	ldr	r2, [fp, #-12]
   287fc:	sub	r2, r1, r2
   28800:	str	r2, [r3, #20]
   28804:	ldr	r3, [fp, #-8]
   28808:	ldr	r3, [r3, #32]
   2880c:	ldr	r3, [r3, #16]
   28810:	ldr	r2, [fp, #-12]
   28814:	mul	r3, r2, r3
   28818:	mov	r1, r3
   2881c:	ldr	r0, [fp, #-8]
   28820:	bl	25eb4 <flatcc_builder_default_alloc@@Base+0x38c>
   28824:	mov	r3, #0
   28828:	mov	r0, r3
   2882c:	sub	sp, fp, #4
   28830:	pop	{fp, pc}
   28834:	andeq	sp, r0, r8, lsr #17
   28838:	andeq	r0, r0, r2, ror #7
   2883c:	andeq	sp, r0, r0, ror #4
   28840:	andeq	sp, r0, r8, lsl #8
   28844:	andeq	sp, r0, r8, asr r8
   28848:	andeq	r0, r0, r3, ror #7
   2884c:	andeq	sp, r0, r0, lsl r2
   28850:	andeq	sp, r0, ip, lsr r4

00028854 <flatcc_builder_truncate_string@@Base>:
   28854:	push	{fp, lr}
   28858:	add	fp, sp, #4
   2885c:	sub	sp, sp, #8
   28860:	str	r0, [fp, #-8]
   28864:	str	r1, [fp, #-12]
   28868:	ldr	r3, [fp, #-8]
   2886c:	ldr	r3, [r3, #32]
   28870:	ldrh	r3, [r3, #14]
   28874:	cmp	r3, #6
   28878:	beq	2889c <flatcc_builder_truncate_string@@Base+0x48>
   2887c:	ldr	r3, [pc, #172]	; 28930 <flatcc_builder_truncate_string@@Base+0xdc>
   28880:	add	r3, pc, r3
   28884:	ldr	r2, [pc, #168]	; 28934 <flatcc_builder_truncate_string@@Base+0xe0>
   28888:	ldr	r1, [pc, #168]	; 28938 <flatcc_builder_truncate_string@@Base+0xe4>
   2888c:	add	r1, pc, r1
   28890:	ldr	r0, [pc, #164]	; 2893c <flatcc_builder_truncate_string@@Base+0xe8>
   28894:	add	r0, pc, r0
   28898:	bl	12704 <__assert_fail@plt>
   2889c:	ldr	r3, [fp, #-8]
   288a0:	ldr	r3, [r3, #32]
   288a4:	ldr	r2, [r3, #20]
   288a8:	ldr	r3, [fp, #-12]
   288ac:	cmp	r2, r3
   288b0:	bcs	288f4 <flatcc_builder_truncate_string@@Base+0xa0>
   288b4:	ldr	r3, [fp, #-8]
   288b8:	ldr	r3, [r3, #32]
   288bc:	ldr	r2, [r3, #20]
   288c0:	ldr	r3, [fp, #-12]
   288c4:	cmp	r2, r3
   288c8:	bcs	288ec <flatcc_builder_truncate_string@@Base+0x98>
   288cc:	ldr	r3, [pc, #108]	; 28940 <flatcc_builder_truncate_string@@Base+0xec>
   288d0:	add	r3, pc, r3
   288d4:	mov	r2, #1004	; 0x3ec
   288d8:	ldr	r1, [pc, #100]	; 28944 <flatcc_builder_truncate_string@@Base+0xf0>
   288dc:	add	r1, pc, r1
   288e0:	ldr	r0, [pc, #96]	; 28948 <flatcc_builder_truncate_string@@Base+0xf4>
   288e4:	add	r0, pc, r0
   288e8:	bl	12704 <__assert_fail@plt>
   288ec:	mvn	r3, #0
   288f0:	b	28924 <flatcc_builder_truncate_string@@Base+0xd0>
   288f4:	ldr	r3, [fp, #-8]
   288f8:	ldr	r3, [r3, #32]
   288fc:	ldr	r2, [fp, #-8]
   28900:	ldr	r2, [r2, #32]
   28904:	ldr	r1, [r2, #20]
   28908:	ldr	r2, [fp, #-12]
   2890c:	sub	r2, r1, r2
   28910:	str	r2, [r3, #20]
   28914:	ldr	r1, [fp, #-12]
   28918:	ldr	r0, [fp, #-8]
   2891c:	bl	25eb4 <flatcc_builder_default_alloc@@Base+0x38c>
   28920:	mov	r3, #0
   28924:	mov	r0, r3
   28928:	sub	sp, fp, #4
   2892c:	pop	{fp, pc}
   28930:	andeq	sp, r0, r0, asr #15
   28934:	andeq	r0, r0, fp, ror #7
   28938:	andeq	sp, r0, r0, asr r1
   2893c:	andeq	sp, r0, ip, lsr #6
   28940:	andeq	sp, r0, r0, ror r7
   28944:	andeq	sp, r0, r0, lsl #2
   28948:	andeq	sp, r0, r8, ror #6

0002894c <flatcc_builder_start_vector@@Base>:
   2894c:	push	{fp, lr}
   28950:	add	fp, sp, #4
   28954:	sub	sp, sp, #16
   28958:	str	r0, [fp, #-8]
   2895c:	str	r1, [fp, #-12]
   28960:	str	r3, [fp, #-20]	; 0xffffffec
   28964:	strh	r2, [fp, #-14]
   28968:	sub	r3, fp, #14
   2896c:	mov	r1, #4
   28970:	mov	r0, r3
   28974:	bl	26a2c <flatcc_builder_clear@@Base+0xf8>
   28978:	ldrh	r3, [fp, #-14]
   2897c:	mov	r1, r3
   28980:	ldr	r0, [fp, #-8]
   28984:	bl	26d78 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   28988:	mov	r3, r0
   2898c:	cmp	r3, #0
   28990:	beq	2899c <flatcc_builder_start_vector@@Base+0x50>
   28994:	mvn	r3, #0
   28998:	b	289ec <flatcc_builder_start_vector@@Base+0xa0>
   2899c:	ldr	r3, [fp, #-8]
   289a0:	ldr	r3, [r3, #32]
   289a4:	ldr	r2, [fp, #-12]
   289a8:	str	r2, [r3, #16]
   289ac:	ldr	r3, [fp, #-8]
   289b0:	ldr	r3, [r3, #32]
   289b4:	mov	r2, #0
   289b8:	str	r2, [r3, #20]
   289bc:	ldr	r3, [fp, #-8]
   289c0:	ldr	r3, [r3, #32]
   289c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   289c8:	str	r2, [r3, #24]
   289cc:	ldr	r3, [fp, #-8]
   289d0:	ldr	r3, [r3, #32]
   289d4:	mov	r2, #4
   289d8:	strh	r2, [r3, #14]
   289dc:	mvn	r1, #3
   289e0:	ldr	r0, [fp, #-8]
   289e4:	bl	25cf0 <flatcc_builder_default_alloc@@Base+0x1c8>
   289e8:	mov	r3, #0
   289ec:	mov	r0, r3
   289f0:	sub	sp, fp, #4
   289f4:	pop	{fp, pc}

000289f8 <flatcc_builder_start_offset_vector@@Base>:
   289f8:	push	{fp, lr}
   289fc:	add	fp, sp, #4
   28a00:	sub	sp, sp, #8
   28a04:	str	r0, [fp, #-8]
   28a08:	mov	r1, #4
   28a0c:	ldr	r0, [fp, #-8]
   28a10:	bl	26d78 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   28a14:	mov	r3, r0
   28a18:	cmp	r3, #0
   28a1c:	beq	28a28 <flatcc_builder_start_offset_vector@@Base+0x30>
   28a20:	mvn	r3, #0
   28a24:	b	28a68 <flatcc_builder_start_offset_vector@@Base+0x70>
   28a28:	ldr	r3, [fp, #-8]
   28a2c:	ldr	r3, [r3, #32]
   28a30:	mov	r2, #4
   28a34:	str	r2, [r3, #16]
   28a38:	ldr	r3, [fp, #-8]
   28a3c:	ldr	r3, [r3, #32]
   28a40:	mov	r2, #0
   28a44:	str	r2, [r3, #20]
   28a48:	ldr	r3, [fp, #-8]
   28a4c:	ldr	r3, [r3, #32]
   28a50:	mov	r2, #5
   28a54:	strh	r2, [r3, #14]
   28a58:	mvn	r1, #3
   28a5c:	ldr	r0, [fp, #-8]
   28a60:	bl	25cf0 <flatcc_builder_default_alloc@@Base+0x1c8>
   28a64:	mov	r3, #0
   28a68:	mov	r0, r3
   28a6c:	sub	sp, fp, #4
   28a70:	pop	{fp, pc}

00028a74 <flatcc_builder_create_offset_vector@@Base>:
   28a74:	push	{fp, lr}
   28a78:	add	fp, sp, #4
   28a7c:	sub	sp, sp, #24
   28a80:	str	r0, [fp, #-16]
   28a84:	str	r1, [fp, #-20]	; 0xffffffec
   28a88:	str	r2, [fp, #-24]	; 0xffffffe8
   28a8c:	ldr	r0, [fp, #-16]
   28a90:	bl	289f8 <flatcc_builder_start_offset_vector@@Base>
   28a94:	mov	r3, r0
   28a98:	cmp	r3, #0
   28a9c:	beq	28aa8 <flatcc_builder_create_offset_vector@@Base+0x34>
   28aa0:	mov	r3, #0
   28aa4:	b	28af0 <flatcc_builder_create_offset_vector@@Base+0x7c>
   28aa8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28aac:	ldr	r0, [fp, #-16]
   28ab0:	bl	282a4 <flatcc_builder_extend_offset_vector@@Base>
   28ab4:	str	r0, [fp, #-8]
   28ab8:	ldr	r3, [fp, #-8]
   28abc:	cmp	r3, #0
   28ac0:	bne	28acc <flatcc_builder_create_offset_vector@@Base+0x58>
   28ac4:	mov	r3, #0
   28ac8:	b	28af0 <flatcc_builder_create_offset_vector@@Base+0x7c>
   28acc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28ad0:	lsl	r3, r3, #2
   28ad4:	mov	r2, r3
   28ad8:	ldr	r1, [fp, #-20]	; 0xffffffec
   28adc:	ldr	r0, [fp, #-8]
   28ae0:	bl	125fc <memcpy@plt>
   28ae4:	ldr	r0, [fp, #-16]
   28ae8:	bl	2a04c <flatcc_builder_end_offset_vector@@Base>
   28aec:	mov	r3, r0
   28af0:	mov	r0, r3
   28af4:	sub	sp, fp, #4
   28af8:	pop	{fp, pc}

00028afc <flatcc_builder_start_string@@Base>:
   28afc:	push	{fp, lr}
   28b00:	add	fp, sp, #4
   28b04:	sub	sp, sp, #8
   28b08:	str	r0, [fp, #-8]
   28b0c:	mov	r1, #1
   28b10:	ldr	r0, [fp, #-8]
   28b14:	bl	26d78 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   28b18:	mov	r3, r0
   28b1c:	cmp	r3, #0
   28b20:	beq	28b2c <flatcc_builder_start_string@@Base+0x30>
   28b24:	mvn	r3, #0
   28b28:	b	28b6c <flatcc_builder_start_string@@Base+0x70>
   28b2c:	ldr	r3, [fp, #-8]
   28b30:	ldr	r3, [r3, #32]
   28b34:	mov	r2, #1
   28b38:	str	r2, [r3, #16]
   28b3c:	ldr	r3, [fp, #-8]
   28b40:	ldr	r3, [r3, #32]
   28b44:	mov	r2, #0
   28b48:	str	r2, [r3, #20]
   28b4c:	ldr	r3, [fp, #-8]
   28b50:	ldr	r3, [r3, #32]
   28b54:	mov	r2, #6
   28b58:	strh	r2, [r3, #14]
   28b5c:	mvn	r1, #3
   28b60:	ldr	r0, [fp, #-8]
   28b64:	bl	25cf0 <flatcc_builder_default_alloc@@Base+0x1c8>
   28b68:	mov	r3, #0
   28b6c:	mov	r0, r3
   28b70:	sub	sp, fp, #4
   28b74:	pop	{fp, pc}

00028b78 <flatcc_builder_reserve_table@@Base>:
   28b78:	push	{fp, lr}
   28b7c:	add	fp, sp, #4
   28b80:	sub	sp, sp, #8
   28b84:	str	r0, [fp, #-8]
   28b88:	str	r1, [fp, #-12]
   28b8c:	ldr	r3, [fp, #-12]
   28b90:	cmp	r3, #0
   28b94:	bge	28bb8 <flatcc_builder_reserve_table@@Base+0x40>
   28b98:	ldr	r3, [pc, #52]	; 28bd4 <flatcc_builder_reserve_table@@Base+0x5c>
   28b9c:	add	r3, pc, r3
   28ba0:	ldr	r2, [pc, #48]	; 28bd8 <flatcc_builder_reserve_table@@Base+0x60>
   28ba4:	ldr	r1, [pc, #48]	; 28bdc <flatcc_builder_reserve_table@@Base+0x64>
   28ba8:	add	r1, pc, r1
   28bac:	ldr	r0, [pc, #44]	; 28be0 <flatcc_builder_reserve_table@@Base+0x68>
   28bb0:	add	r0, pc, r0
   28bb4:	bl	12704 <__assert_fail@plt>
   28bb8:	ldr	r1, [fp, #-12]
   28bbc:	ldr	r0, [fp, #-8]
   28bc0:	bl	26260 <flatcc_builder_default_alloc@@Base+0x738>
   28bc4:	mov	r3, r0
   28bc8:	mov	r0, r3
   28bcc:	sub	sp, fp, #4
   28bd0:	pop	{fp, pc}
   28bd4:	andeq	sp, r0, r4, asr #9
   28bd8:	andeq	r0, r0, r9, lsr #8
   28bdc:	andeq	ip, r0, r4, lsr lr
   28be0:	andeq	sp, r0, r0, asr #1

00028be4 <flatcc_builder_start_table@@Base>:
   28be4:	push	{fp, lr}
   28be8:	add	fp, sp, #4
   28bec:	sub	sp, sp, #8
   28bf0:	str	r0, [fp, #-8]
   28bf4:	str	r1, [fp, #-12]
   28bf8:	mov	r1, #4
   28bfc:	ldr	r0, [fp, #-8]
   28c00:	bl	26d78 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   28c04:	mov	r3, r0
   28c08:	cmp	r3, #0
   28c0c:	beq	28c18 <flatcc_builder_start_table@@Base+0x34>
   28c10:	mvn	r3, #0
   28c14:	b	28cec <flatcc_builder_start_table@@Base+0x108>
   28c18:	ldr	r3, [fp, #-8]
   28c1c:	ldr	r3, [r3, #32]
   28c20:	ldr	r2, [fp, #-8]
   28c24:	ldr	r2, [r2, #4]
   28c28:	mov	r1, r2
   28c2c:	ldr	r2, [fp, #-8]
   28c30:	ldr	r2, [r2, #52]	; 0x34
   28c34:	sub	r2, r1, r2
   28c38:	str	r2, [r3, #16]
   28c3c:	ldr	r3, [fp, #-8]
   28c40:	ldr	r3, [r3, #32]
   28c44:	ldr	r2, [fp, #-8]
   28c48:	ldr	r2, [r2]
   28c4c:	mov	r1, r2
   28c50:	ldr	r2, [fp, #-8]
   28c54:	ldr	r2, [r2, #76]	; 0x4c
   28c58:	sub	r2, r1, r2
   28c5c:	str	r2, [r3, #20]
   28c60:	ldr	r3, [fp, #-8]
   28c64:	ldr	r3, [r3, #32]
   28c68:	ldr	r2, [fp, #-8]
   28c6c:	ldr	r2, [r2, #12]
   28c70:	str	r2, [r3, #24]
   28c74:	ldr	r3, [fp, #-8]
   28c78:	ldr	r3, [r3, #32]
   28c7c:	ldr	r2, [fp, #-8]
   28c80:	ldrh	r2, [r2, #8]
   28c84:	strh	r2, [r3, #28]
   28c88:	ldr	r3, [fp, #-8]
   28c8c:	mov	r2, #0
   28c90:	str	r2, [r3, #12]
   28c94:	ldr	r3, [fp, #-8]
   28c98:	ldr	r2, [pc, #88]	; 28cf8 <flatcc_builder_start_table@@Base+0x114>
   28c9c:	str	r2, [r3, #12]
   28ca0:	ldr	r3, [fp, #-8]
   28ca4:	mov	r2, #0
   28ca8:	strh	r2, [r3, #8]
   28cac:	ldr	r3, [fp, #-8]
   28cb0:	ldr	r3, [r3, #32]
   28cb4:	mov	r2, #3
   28cb8:	strh	r2, [r3, #14]
   28cbc:	ldr	r1, [fp, #-12]
   28cc0:	ldr	r0, [fp, #-8]
   28cc4:	bl	26260 <flatcc_builder_default_alloc@@Base+0x738>
   28cc8:	mov	r3, r0
   28ccc:	cmp	r3, #0
   28cd0:	beq	28cdc <flatcc_builder_start_table@@Base+0xf8>
   28cd4:	mvn	r3, #0
   28cd8:	b	28cec <flatcc_builder_start_table@@Base+0x108>
   28cdc:	ldr	r1, [pc, #24]	; 28cfc <flatcc_builder_start_table@@Base+0x118>
   28ce0:	ldr	r0, [fp, #-8]
   28ce4:	bl	25cf0 <flatcc_builder_default_alloc@@Base+0x1c8>
   28ce8:	mov	r3, #0
   28cec:	mov	r0, r3
   28cf0:	sub	sp, fp, #4
   28cf4:	pop	{fp, pc}
   28cf8:	svccs	0x00693b52
   28cfc:	strdeq	pc, [r0], -ip

00028d00 <flatcc_builder_create_vtable@@Base>:
   28d00:	push	{fp, lr}
   28d04:	add	fp, sp, #4
   28d08:	sub	sp, sp, #96	; 0x60
   28d0c:	str	r0, [fp, #-88]	; 0xffffffa8
   28d10:	str	r1, [fp, #-92]	; 0xffffffa4
   28d14:	mov	r3, r2
   28d18:	strh	r3, [fp, #-94]	; 0xffffffa2
   28d1c:	mov	r3, #0
   28d20:	str	r3, [fp, #-80]	; 0xffffffb0
   28d24:	mov	r3, #0
   28d28:	str	r3, [fp, #-76]	; 0xffffffb4
   28d2c:	ldrh	r3, [fp, #-94]	; 0xffffffa2
   28d30:	cmp	r3, #0
   28d34:	beq	28d8c <flatcc_builder_create_vtable@@Base+0x8c>
   28d38:	ldr	r2, [fp, #-80]	; 0xffffffb0
   28d3c:	ldrh	r3, [fp, #-94]	; 0xffffffa2
   28d40:	add	r3, r2, r3
   28d44:	str	r3, [fp, #-80]	; 0xffffffb0
   28d48:	ldr	r3, [fp, #-76]	; 0xffffffb4
   28d4c:	add	r3, r3, #1
   28d50:	lsl	r3, r3, #3
   28d54:	sub	r2, fp, #4
   28d58:	add	r3, r2, r3
   28d5c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   28d60:	str	r2, [r3, #-76]	; 0xffffffb4
   28d64:	ldr	r3, [fp, #-76]	; 0xffffffb4
   28d68:	ldrh	r2, [fp, #-94]	; 0xffffffa2
   28d6c:	add	r3, r3, #1
   28d70:	lsl	r3, r3, #3
   28d74:	sub	r1, fp, #4
   28d78:	add	r3, r1, r3
   28d7c:	str	r2, [r3, #-72]	; 0xffffffb8
   28d80:	ldr	r3, [fp, #-76]	; 0xffffffb4
   28d84:	add	r3, r3, #1
   28d88:	str	r3, [fp, #-76]	; 0xffffffb4
   28d8c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   28d90:	ldr	r3, [r3, #152]	; 0x98
   28d94:	cmp	r3, #0
   28d98:	bne	28dd4 <flatcc_builder_create_vtable@@Base+0xd4>
   28d9c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   28da0:	ldr	r3, [r3, #180]	; 0xb4
   28da4:	cmp	r3, #0
   28da8:	bne	28dd4 <flatcc_builder_create_vtable@@Base+0xd4>
   28dac:	sub	r3, fp, #80	; 0x50
   28db0:	mov	r1, r3
   28db4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   28db8:	bl	271a8 <flatcc_builder_get_user_frame_ptr@@Base+0x464>
   28dbc:	str	r0, [fp, #-8]
   28dc0:	ldr	r3, [fp, #-8]
   28dc4:	cmp	r3, #0
   28dc8:	bne	28e08 <flatcc_builder_create_vtable@@Base+0x108>
   28dcc:	mov	r3, #0
   28dd0:	b	28e0c <flatcc_builder_create_vtable@@Base+0x10c>
   28dd4:	sub	r3, fp, #80	; 0x50
   28dd8:	mov	r1, r3
   28ddc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   28de0:	bl	270a8 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   28de4:	str	r0, [fp, #-8]
   28de8:	ldr	r3, [fp, #-8]
   28dec:	cmp	r3, #0
   28df0:	bne	28dfc <flatcc_builder_create_vtable@@Base+0xfc>
   28df4:	mov	r3, #0
   28df8:	b	28e0c <flatcc_builder_create_vtable@@Base+0x10c>
   28dfc:	ldr	r3, [fp, #-8]
   28e00:	add	r3, r3, #1
   28e04:	str	r3, [fp, #-8]
   28e08:	ldr	r3, [fp, #-8]
   28e0c:	mov	r0, r3
   28e10:	sub	sp, fp, #4
   28e14:	pop	{fp, pc}

00028e18 <flatcc_builder_create_cached_vtable@@Base>:
   28e18:	push	{fp, lr}
   28e1c:	add	fp, sp, #4
   28e20:	sub	sp, sp, #48	; 0x30
   28e24:	str	r0, [fp, #-32]	; 0xffffffe0
   28e28:	str	r1, [fp, #-36]	; 0xffffffdc
   28e2c:	str	r3, [fp, #-44]	; 0xffffffd4
   28e30:	strh	r2, [fp, #-38]	; 0xffffffda
   28e34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28e38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28e3c:	bl	264cc <flatcc_builder_default_alloc@@Base+0x9a4>
   28e40:	str	r0, [fp, #-20]	; 0xffffffec
   28e44:	ldr	r3, [fp, #-20]	; 0xffffffec
   28e48:	cmp	r3, #0
   28e4c:	bne	28e58 <flatcc_builder_create_cached_vtable@@Base+0x40>
   28e50:	mov	r3, #0
   28e54:	b	2911c <flatcc_builder_create_cached_vtable@@Base+0x304>
   28e58:	ldr	r3, [fp, #-20]	; 0xffffffec
   28e5c:	str	r3, [fp, #-12]
   28e60:	ldr	r3, [fp, #-12]
   28e64:	ldr	r3, [r3]
   28e68:	str	r3, [fp, #-16]
   28e6c:	mov	r3, #0
   28e70:	str	r3, [fp, #-8]
   28e74:	b	28f78 <flatcc_builder_create_cached_vtable@@Base+0x160>
   28e78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28e7c:	ldr	r2, [r3, #100]	; 0x64
   28e80:	ldr	r3, [fp, #-16]
   28e84:	add	r3, r2, r3
   28e88:	str	r3, [fp, #-24]	; 0xffffffe8
   28e8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28e90:	ldr	r2, [r3, #68]	; 0x44
   28e94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28e98:	ldr	r3, [r3, #8]
   28e9c:	add	r3, r2, r3
   28ea0:	str	r3, [fp, #-28]	; 0xffffffe4
   28ea4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28ea8:	ldrh	r3, [r3]
   28eac:	ldrh	r2, [fp, #-38]	; 0xffffffda
   28eb0:	cmp	r2, r3
   28eb4:	bne	28ed8 <flatcc_builder_create_cached_vtable@@Base+0xc0>
   28eb8:	ldrh	r3, [fp, #-38]	; 0xffffffda
   28ebc:	mov	r2, r3
   28ec0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28ec4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28ec8:	bl	12614 <memcmp@plt>
   28ecc:	mov	r3, r0
   28ed0:	cmp	r3, #0
   28ed4:	beq	28ef4 <flatcc_builder_create_cached_vtable@@Base+0xdc>
   28ed8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28edc:	add	r3, r3, #12
   28ee0:	str	r3, [fp, #-12]
   28ee4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28ee8:	ldr	r3, [r3, #12]
   28eec:	str	r3, [fp, #-16]
   28ef0:	b	28f78 <flatcc_builder_create_cached_vtable@@Base+0x160>
   28ef4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28ef8:	ldr	r2, [r3, #4]
   28efc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28f00:	ldr	r3, [r3, #152]	; 0x98
   28f04:	cmp	r2, r3
   28f08:	beq	28f30 <flatcc_builder_create_cached_vtable@@Base+0x118>
   28f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28f10:	str	r3, [fp, #-8]
   28f14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28f18:	add	r3, r3, #12
   28f1c:	str	r3, [fp, #-12]
   28f20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28f24:	ldr	r3, [r3, #12]
   28f28:	str	r3, [fp, #-16]
   28f2c:	b	28f78 <flatcc_builder_create_cached_vtable@@Base+0x160>
   28f30:	ldr	r2, [fp, #-12]
   28f34:	ldr	r3, [fp, #-20]	; 0xffffffec
   28f38:	cmp	r2, r3
   28f3c:	beq	28f6c <flatcc_builder_create_cached_vtable@@Base+0x154>
   28f40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28f44:	ldr	r2, [r3, #12]
   28f48:	ldr	r3, [fp, #-12]
   28f4c:	str	r2, [r3]
   28f50:	ldr	r3, [fp, #-20]	; 0xffffffec
   28f54:	ldr	r2, [r3]
   28f58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28f5c:	str	r2, [r3, #12]
   28f60:	ldr	r3, [fp, #-20]	; 0xffffffec
   28f64:	ldr	r2, [fp, #-16]
   28f68:	str	r2, [r3]
   28f6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28f70:	ldr	r3, [r3]
   28f74:	b	2911c <flatcc_builder_create_cached_vtable@@Base+0x304>
   28f78:	ldr	r3, [fp, #-16]
   28f7c:	cmp	r3, #0
   28f80:	bne	28e78 <flatcc_builder_create_cached_vtable@@Base+0x60>
   28f84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28f88:	ldr	r2, [r3, #124]	; 0x7c
   28f8c:	mov	r3, #0
   28f90:	str	r3, [sp]
   28f94:	mov	r3, #16
   28f98:	mov	r1, #6
   28f9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28fa0:	bl	26188 <flatcc_builder_default_alloc@@Base+0x660>
   28fa4:	str	r0, [fp, #-24]	; 0xffffffe8
   28fa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28fac:	cmp	r3, #0
   28fb0:	bne	28fbc <flatcc_builder_create_cached_vtable@@Base+0x1a4>
   28fb4:	mov	r3, #0
   28fb8:	b	2911c <flatcc_builder_create_cached_vtable@@Base+0x304>
   28fbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28fc0:	ldr	r3, [r3, #124]	; 0x7c
   28fc4:	str	r3, [fp, #-16]
   28fc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28fcc:	ldr	r3, [r3, #124]	; 0x7c
   28fd0:	add	r2, r3, #16
   28fd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28fd8:	str	r2, [r3, #124]	; 0x7c
   28fdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28fe0:	ldr	r2, [r3, #152]	; 0x98
   28fe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28fe8:	str	r2, [r3, #4]
   28fec:	ldr	r3, [fp, #-20]	; 0xffffffec
   28ff0:	ldr	r2, [r3]
   28ff4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28ff8:	str	r2, [r3, #12]
   28ffc:	ldr	r3, [fp, #-20]	; 0xffffffec
   29000:	ldr	r2, [fp, #-16]
   29004:	str	r2, [r3]
   29008:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2900c:	mov	r2, r3
   29010:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29014:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29018:	bl	28d00 <flatcc_builder_create_vtable@@Base>
   2901c:	mov	r2, r0
   29020:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29024:	str	r2, [r3]
   29028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2902c:	ldr	r3, [r3]
   29030:	cmp	r3, #0
   29034:	bne	29040 <flatcc_builder_create_cached_vtable@@Base+0x228>
   29038:	mov	r3, #0
   2903c:	b	2911c <flatcc_builder_create_cached_vtable@@Base+0x304>
   29040:	ldr	r3, [fp, #-8]
   29044:	cmp	r3, #0
   29048:	beq	29060 <flatcc_builder_create_cached_vtable@@Base+0x248>
   2904c:	ldr	r3, [fp, #-8]
   29050:	ldr	r2, [r3, #8]
   29054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29058:	str	r2, [r3, #8]
   2905c:	b	29114 <flatcc_builder_create_cached_vtable@@Base+0x2fc>
   29060:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29064:	ldr	r3, [r3, #172]	; 0xac
   29068:	cmp	r3, #0
   2906c:	beq	2909c <flatcc_builder_create_cached_vtable@@Base+0x284>
   29070:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29074:	ldr	r2, [r3, #172]	; 0xac
   29078:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2907c:	ldr	r1, [r3, #120]	; 0x78
   29080:	ldrh	r3, [fp, #-38]	; 0xffffffda
   29084:	add	r3, r1, r3
   29088:	cmp	r2, r3
   2908c:	bcs	2909c <flatcc_builder_create_cached_vtable@@Base+0x284>
   29090:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29094:	bl	26544 <flatcc_builder_flush_vtable_cache@@Base>
   29098:	b	29114 <flatcc_builder_create_cached_vtable@@Base+0x2fc>
   2909c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   290a0:	ldr	r2, [r3, #120]	; 0x78
   290a4:	ldrh	r1, [fp, #-38]	; 0xffffffda
   290a8:	mov	r3, #0
   290ac:	str	r3, [sp]
   290b0:	mov	r3, r1
   290b4:	mov	r1, #2
   290b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   290bc:	bl	26188 <flatcc_builder_default_alloc@@Base+0x660>
   290c0:	str	r0, [fp, #-28]	; 0xffffffe4
   290c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   290c8:	cmp	r3, #0
   290cc:	bne	290d8 <flatcc_builder_create_cached_vtable@@Base+0x2c0>
   290d0:	mvn	r3, #0
   290d4:	b	2911c <flatcc_builder_create_cached_vtable@@Base+0x304>
   290d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   290dc:	ldr	r2, [r3, #120]	; 0x78
   290e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   290e4:	str	r2, [r3, #8]
   290e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   290ec:	ldr	r2, [r3, #120]	; 0x78
   290f0:	ldrh	r3, [fp, #-38]	; 0xffffffda
   290f4:	add	r2, r2, r3
   290f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   290fc:	str	r2, [r3, #120]	; 0x78
   29100:	ldrh	r3, [fp, #-38]	; 0xffffffda
   29104:	mov	r2, r3
   29108:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2910c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29110:	bl	125fc <memcpy@plt>
   29114:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29118:	ldr	r3, [r3]
   2911c:	mov	r0, r3
   29120:	sub	sp, fp, #4
   29124:	pop	{fp, pc}

00029128 <flatcc_builder_create_table@@Base>:
   29128:	push	{r4, fp, lr}
   2912c:	add	fp, sp, #8
   29130:	sub	sp, sp, #124	; 0x7c
   29134:	str	r0, [fp, #-120]	; 0xffffff88
   29138:	str	r1, [fp, #-124]	; 0xffffff84
   2913c:	str	r2, [fp, #-128]	; 0xffffff80
   29140:	strh	r3, [fp, #-130]	; 0xffffff7e
   29144:	ldr	r4, [pc, #728]	; 29424 <flatcc_builder_create_table@@Base+0x2fc>
   29148:	add	r4, pc, r4
   2914c:	ldr	r3, [fp, #8]
   29150:	cmp	r3, #0
   29154:	bge	29178 <flatcc_builder_create_table@@Base+0x50>
   29158:	ldr	r3, [pc, #712]	; 29428 <flatcc_builder_create_table@@Base+0x300>
   2915c:	add	r3, pc, r3
   29160:	ldr	r2, [pc, #708]	; 2942c <flatcc_builder_create_table@@Base+0x304>
   29164:	ldr	r1, [pc, #708]	; 29430 <flatcc_builder_create_table@@Base+0x308>
   29168:	add	r1, pc, r1
   2916c:	ldr	r0, [pc, #704]	; 29434 <flatcc_builder_create_table@@Base+0x30c>
   29170:	add	r0, pc, r0
   29174:	bl	12704 <__assert_fail@plt>
   29178:	ldr	r3, [fp, #12]
   2917c:	and	r3, r3, #1
   29180:	cmp	r3, #0
   29184:	bne	291a8 <flatcc_builder_create_table@@Base+0x80>
   29188:	ldr	r3, [pc, #680]	; 29438 <flatcc_builder_create_table@@Base+0x310>
   2918c:	add	r3, pc, r3
   29190:	ldr	r2, [pc, #676]	; 2943c <flatcc_builder_create_table@@Base+0x314>
   29194:	ldr	r1, [pc, #676]	; 29440 <flatcc_builder_create_table@@Base+0x318>
   29198:	add	r1, pc, r1
   2919c:	ldr	r0, [pc, #672]	; 29444 <flatcc_builder_create_table@@Base+0x31c>
   291a0:	add	r0, pc, r0
   291a4:	bl	12704 <__assert_fail@plt>
   291a8:	sub	r3, fp, #130	; 0x82
   291ac:	mov	r1, #4
   291b0:	mov	r0, r3
   291b4:	bl	26a2c <flatcc_builder_clear@@Base+0xf8>
   291b8:	ldrh	r3, [fp, #-130]	; 0xffffff7e
   291bc:	mov	r1, r3
   291c0:	ldr	r0, [fp, #-120]	; 0xffffff88
   291c4:	bl	269e4 <flatcc_builder_clear@@Base+0xb0>
   291c8:	ldrh	r3, [fp, #-130]	; 0xffffff7e
   291cc:	mov	r2, r3
   291d0:	ldr	r1, [fp, #-128]	; 0xffffff80
   291d4:	ldr	r0, [fp, #-120]	; 0xffffff88
   291d8:	bl	27020 <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   291dc:	str	r0, [fp, #-20]	; 0xffffffec
   291e0:	ldr	r3, [fp, #-120]	; 0xffffff88
   291e4:	ldr	r3, [r3, #136]	; 0x88
   291e8:	mov	r1, r3
   291ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   291f0:	ldr	r3, [fp, #-128]	; 0xffffff80
   291f4:	add	r3, r2, r3
   291f8:	sub	r3, r1, r3
   291fc:	sub	r3, r3, #4
   29200:	str	r3, [fp, #-24]	; 0xffffffe8
   29204:	ldr	r3, [fp, #12]
   29208:	sub	r3, r3, #1
   2920c:	str	r3, [fp, #-28]	; 0xffffffe4
   29210:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29214:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29218:	sub	r3, r2, r3
   2921c:	str	r3, [fp, #-32]	; 0xffffffe0
   29220:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29224:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29228:	sub	r2, r2, r3
   2922c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29230:	cmp	r2, r3
   29234:	beq	29240 <flatcc_builder_create_table@@Base+0x118>
   29238:	mvn	r3, #0
   2923c:	b	29418 <flatcc_builder_create_table@@Base+0x2f0>
   29240:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29244:	bl	259e4 <main@@Base+0x148>
   29248:	mov	r3, r0
   2924c:	str	r3, [fp, #-44]	; 0xffffffd4
   29250:	mov	r3, #0
   29254:	str	r3, [fp, #-16]
   29258:	b	292d0 <flatcc_builder_create_table@@Base+0x1a8>
   2925c:	ldr	r3, [fp, #-16]
   29260:	lsl	r3, r3, #1
   29264:	ldr	r2, [fp, #4]
   29268:	add	r3, r2, r3
   2926c:	ldrh	r3, [r3]
   29270:	mov	r2, r3
   29274:	ldr	r3, [fp, #-124]	; 0xffffff84
   29278:	add	r3, r2, r3
   2927c:	str	r3, [fp, #-36]	; 0xffffffdc
   29280:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29284:	ldr	r2, [r3]
   29288:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2928c:	sub	r3, r2, r3
   29290:	ldr	r2, [fp, #-16]
   29294:	lsl	r2, r2, #1
   29298:	ldr	r1, [fp, #4]
   2929c:	add	r2, r1, r2
   292a0:	ldrh	r2, [r2]
   292a4:	sub	r3, r3, r2
   292a8:	sub	r3, r3, #4
   292ac:	str	r3, [fp, #-40]	; 0xffffffd8
   292b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   292b4:	bl	259e4 <main@@Base+0x148>
   292b8:	mov	r2, r0
   292bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   292c0:	str	r2, [r3]
   292c4:	ldr	r3, [fp, #-16]
   292c8:	add	r3, r3, #1
   292cc:	str	r3, [fp, #-16]
   292d0:	ldr	r2, [fp, #-16]
   292d4:	ldr	r3, [fp, #8]
   292d8:	cmp	r2, r3
   292dc:	blt	2925c <flatcc_builder_create_table@@Base+0x134>
   292e0:	mov	r3, #0
   292e4:	str	r3, [fp, #-116]	; 0xffffff8c
   292e8:	mov	r3, #0
   292ec:	str	r3, [fp, #-112]	; 0xffffff90
   292f0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   292f4:	add	r3, r3, #4
   292f8:	str	r3, [fp, #-116]	; 0xffffff8c
   292fc:	ldr	r3, [fp, #-112]	; 0xffffff90
   29300:	add	r3, r3, #1
   29304:	lsl	r3, r3, #3
   29308:	sub	r2, fp, #12
   2930c:	add	r3, r2, r3
   29310:	sub	r2, fp, #44	; 0x2c
   29314:	str	r2, [r3, #-104]	; 0xffffff98
   29318:	ldr	r3, [fp, #-112]	; 0xffffff90
   2931c:	add	r3, r3, #1
   29320:	lsl	r3, r3, #3
   29324:	sub	r2, fp, #12
   29328:	add	r3, r2, r3
   2932c:	mov	r2, #4
   29330:	str	r2, [r3, #-100]	; 0xffffff9c
   29334:	ldr	r3, [fp, #-112]	; 0xffffff90
   29338:	add	r3, r3, #1
   2933c:	str	r3, [fp, #-112]	; 0xffffff90
   29340:	ldr	r3, [fp, #-128]	; 0xffffff80
   29344:	cmp	r3, #0
   29348:	beq	293a0 <flatcc_builder_create_table@@Base+0x278>
   2934c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   29350:	ldr	r3, [fp, #-128]	; 0xffffff80
   29354:	add	r3, r2, r3
   29358:	str	r3, [fp, #-116]	; 0xffffff8c
   2935c:	ldr	r3, [fp, #-112]	; 0xffffff90
   29360:	add	r3, r3, #1
   29364:	lsl	r3, r3, #3
   29368:	sub	r2, fp, #12
   2936c:	add	r3, r2, r3
   29370:	ldr	r2, [fp, #-124]	; 0xffffff84
   29374:	str	r2, [r3, #-104]	; 0xffffff98
   29378:	ldr	r3, [fp, #-112]	; 0xffffff90
   2937c:	add	r3, r3, #1
   29380:	lsl	r3, r3, #3
   29384:	sub	r2, fp, #12
   29388:	add	r3, r2, r3
   2938c:	ldr	r2, [fp, #-128]	; 0xffffff80
   29390:	str	r2, [r3, #-100]	; 0xffffff9c
   29394:	ldr	r3, [fp, #-112]	; 0xffffff90
   29398:	add	r3, r3, #1
   2939c:	str	r3, [fp, #-112]	; 0xffffff90
   293a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   293a4:	cmp	r3, #0
   293a8:	beq	29404 <flatcc_builder_create_table@@Base+0x2dc>
   293ac:	ldr	r2, [fp, #-116]	; 0xffffff8c
   293b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   293b4:	add	r3, r2, r3
   293b8:	str	r3, [fp, #-116]	; 0xffffff8c
   293bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   293c0:	add	r3, r3, #1
   293c4:	lsl	r3, r3, #3
   293c8:	sub	r2, fp, #12
   293cc:	add	r3, r2, r3
   293d0:	ldr	r2, [pc, #112]	; 29448 <flatcc_builder_create_table@@Base+0x320>
   293d4:	ldr	r2, [r4, r2]
   293d8:	str	r2, [r3, #-104]	; 0xffffff98
   293dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   293e0:	add	r3, r3, #1
   293e4:	lsl	r3, r3, #3
   293e8:	sub	r2, fp, #12
   293ec:	add	r3, r2, r3
   293f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   293f4:	str	r2, [r3, #-100]	; 0xffffff9c
   293f8:	ldr	r3, [fp, #-112]	; 0xffffff90
   293fc:	add	r3, r3, #1
   29400:	str	r3, [fp, #-112]	; 0xffffff90
   29404:	sub	r3, fp, #116	; 0x74
   29408:	mov	r1, r3
   2940c:	ldr	r0, [fp, #-120]	; 0xffffff88
   29410:	bl	270a8 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   29414:	mov	r3, r0
   29418:	mov	r0, r3
   2941c:	sub	sp, fp, #8
   29420:	pop	{r4, fp, pc}
   29424:			; <UNDEFINED> instruction: 0x0001eeb0
   29428:	andeq	ip, r0, r4, lsr #30
   2942c:	ldrdeq	r0, [r0], -r5
   29430:	andeq	ip, r0, r4, ror r8
   29434:	andeq	ip, r0, ip, lsl #22
   29438:	strdeq	ip, [r0], -r4
   2943c:	ldrdeq	r0, [r0], -fp
   29440:	andeq	ip, r0, r4, asr #16
   29444:	strdeq	ip, [r0], -r0
   29448:	andeq	r0, r0, r4, ror r0

0002944c <flatcc_builder_check_required_field@@Base>:
   2944c:	push	{fp, lr}
   29450:	add	fp, sp, #4
   29454:	sub	sp, sp, #8
   29458:	str	r0, [fp, #-8]
   2945c:	mov	r3, r1
   29460:	strh	r3, [fp, #-10]
   29464:	ldr	r3, [fp, #-8]
   29468:	ldr	r3, [r3, #32]
   2946c:	ldrh	r3, [r3, #14]
   29470:	cmp	r3, #3
   29474:	beq	29498 <flatcc_builder_check_required_field@@Base+0x4c>
   29478:	ldr	r3, [pc, #100]	; 294e4 <flatcc_builder_check_required_field@@Base+0x98>
   2947c:	add	r3, pc, r3
   29480:	ldr	r2, [pc, #96]	; 294e8 <flatcc_builder_check_required_field@@Base+0x9c>
   29484:	ldr	r1, [pc, #96]	; 294ec <flatcc_builder_check_required_field@@Base+0xa0>
   29488:	add	r1, pc, r1
   2948c:	ldr	r0, [pc, #92]	; 294f0 <flatcc_builder_check_required_field@@Base+0xa4>
   29490:	add	r0, pc, r0
   29494:	bl	12704 <__assert_fail@plt>
   29498:	ldr	r3, [fp, #-8]
   2949c:	ldrh	r3, [r3, #8]
   294a0:	ldrh	r2, [fp, #-10]
   294a4:	cmp	r2, r3
   294a8:	bcs	294d4 <flatcc_builder_check_required_field@@Base+0x88>
   294ac:	ldr	r3, [fp, #-8]
   294b0:	ldr	r2, [r3, #4]
   294b4:	ldrh	r3, [fp, #-10]
   294b8:	lsl	r3, r3, #1
   294bc:	add	r3, r2, r3
   294c0:	ldrh	r3, [r3]
   294c4:	cmp	r3, #0
   294c8:	beq	294d4 <flatcc_builder_check_required_field@@Base+0x88>
   294cc:	mov	r3, #1
   294d0:	b	294d8 <flatcc_builder_check_required_field@@Base+0x8c>
   294d4:	mov	r3, #0
   294d8:	mov	r0, r3
   294dc:	sub	sp, fp, #4
   294e0:	pop	{fp, pc}
   294e4:	andeq	ip, r0, r0, lsr #24
   294e8:	strdeq	r0, [r0], -r8
   294ec:	andeq	ip, r0, r4, asr r5
   294f0:	andeq	ip, r0, ip, lsl #16

000294f4 <flatcc_builder_check_union_field@@Base>:
   294f4:	push	{fp, lr}
   294f8:	add	fp, sp, #4
   294fc:	sub	sp, sp, #8
   29500:	str	r0, [fp, #-8]
   29504:	mov	r3, r1
   29508:	strh	r3, [fp, #-10]
   2950c:	ldr	r3, [fp, #-8]
   29510:	ldr	r3, [r3, #32]
   29514:	ldrh	r3, [r3, #14]
   29518:	cmp	r3, #3
   2951c:	beq	29540 <flatcc_builder_check_union_field@@Base+0x4c>
   29520:	ldr	r3, [pc, #292]	; 2964c <flatcc_builder_check_union_field@@Base+0x158>
   29524:	add	r3, pc, r3
   29528:	ldr	r2, [pc, #288]	; 29650 <flatcc_builder_check_union_field@@Base+0x15c>
   2952c:	ldr	r1, [pc, #288]	; 29654 <flatcc_builder_check_union_field@@Base+0x160>
   29530:	add	r1, pc, r1
   29534:	ldr	r0, [pc, #284]	; 29658 <flatcc_builder_check_union_field@@Base+0x164>
   29538:	add	r0, pc, r0
   2953c:	bl	12704 <__assert_fail@plt>
   29540:	ldrh	r3, [fp, #-10]
   29544:	cmp	r3, #0
   29548:	beq	29560 <flatcc_builder_check_union_field@@Base+0x6c>
   2954c:	ldr	r3, [fp, #-8]
   29550:	ldrh	r3, [r3, #8]
   29554:	ldrh	r2, [fp, #-10]
   29558:	cmp	r2, r3
   2955c:	bcc	29568 <flatcc_builder_check_union_field@@Base+0x74>
   29560:	mov	r3, #0
   29564:	b	29640 <flatcc_builder_check_union_field@@Base+0x14c>
   29568:	ldr	r3, [fp, #-8]
   2956c:	ldr	r2, [r3, #4]
   29570:	ldrh	r3, [fp, #-10]
   29574:	sub	r3, r3, #-2147483647	; 0x80000001
   29578:	lsl	r3, r3, #1
   2957c:	add	r3, r2, r3
   29580:	ldrh	r3, [r3]
   29584:	cmp	r3, #0
   29588:	bne	295b8 <flatcc_builder_check_union_field@@Base+0xc4>
   2958c:	ldr	r3, [fp, #-8]
   29590:	ldr	r2, [r3, #4]
   29594:	ldrh	r3, [fp, #-10]
   29598:	lsl	r3, r3, #1
   2959c:	add	r3, r2, r3
   295a0:	ldrh	r3, [r3]
   295a4:	cmp	r3, #0
   295a8:	moveq	r3, #1
   295ac:	movne	r3, #0
   295b0:	uxtb	r3, r3
   295b4:	b	29640 <flatcc_builder_check_union_field@@Base+0x14c>
   295b8:	ldr	r3, [fp, #-8]
   295bc:	ldr	r3, [r3, #16]
   295c0:	ldr	r2, [fp, #-8]
   295c4:	ldr	r1, [r2, #4]
   295c8:	ldrh	r2, [fp, #-10]
   295cc:	sub	r2, r2, #-2147483647	; 0x80000001
   295d0:	lsl	r2, r2, #1
   295d4:	add	r2, r1, r2
   295d8:	ldrh	r2, [r2]
   295dc:	add	r3, r3, r2
   295e0:	ldrb	r3, [r3]
   295e4:	cmp	r3, #0
   295e8:	beq	29618 <flatcc_builder_check_union_field@@Base+0x124>
   295ec:	ldr	r3, [fp, #-8]
   295f0:	ldr	r2, [r3, #4]
   295f4:	ldrh	r3, [fp, #-10]
   295f8:	lsl	r3, r3, #1
   295fc:	add	r3, r2, r3
   29600:	ldrh	r3, [r3]
   29604:	cmp	r3, #0
   29608:	movne	r3, #1
   2960c:	moveq	r3, #0
   29610:	uxtb	r3, r3
   29614:	b	29640 <flatcc_builder_check_union_field@@Base+0x14c>
   29618:	ldr	r3, [fp, #-8]
   2961c:	ldr	r2, [r3, #4]
   29620:	ldrh	r3, [fp, #-10]
   29624:	lsl	r3, r3, #1
   29628:	add	r3, r2, r3
   2962c:	ldrh	r3, [r3]
   29630:	cmp	r3, #0
   29634:	moveq	r3, #1
   29638:	movne	r3, #0
   2963c:	uxtb	r3, r3
   29640:	mov	r0, r3
   29644:	sub	sp, fp, #4
   29648:	pop	{fp, pc}
   2964c:	muleq	r0, ip, fp
   29650:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   29654:	andeq	ip, r0, ip, lsr #9
   29658:	andeq	ip, r0, r4, ror #14

0002965c <flatcc_builder_check_required@@Base>:
   2965c:	push	{fp, lr}
   29660:	add	fp, sp, #4
   29664:	sub	sp, sp, #24
   29668:	str	r0, [fp, #-16]
   2966c:	str	r1, [fp, #-20]	; 0xffffffec
   29670:	str	r2, [fp, #-24]	; 0xffffffe8
   29674:	ldr	r3, [fp, #-16]
   29678:	ldr	r3, [r3, #32]
   2967c:	ldrh	r3, [r3, #14]
   29680:	cmp	r3, #3
   29684:	beq	296a8 <flatcc_builder_check_required@@Base+0x4c>
   29688:	ldr	r3, [pc, #168]	; 29738 <flatcc_builder_check_required@@Base+0xdc>
   2968c:	add	r3, pc, r3
   29690:	ldr	r2, [pc, #164]	; 2973c <flatcc_builder_check_required@@Base+0xe0>
   29694:	ldr	r1, [pc, #164]	; 29740 <flatcc_builder_check_required@@Base+0xe4>
   29698:	add	r1, pc, r1
   2969c:	ldr	r0, [pc, #160]	; 29744 <flatcc_builder_check_required@@Base+0xe8>
   296a0:	add	r0, pc, r0
   296a4:	bl	12704 <__assert_fail@plt>
   296a8:	ldr	r3, [fp, #-16]
   296ac:	ldrh	r3, [r3, #8]
   296b0:	mov	r2, r3
   296b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   296b8:	cmp	r2, r3
   296bc:	bge	296c8 <flatcc_builder_check_required@@Base+0x6c>
   296c0:	mov	r3, #0
   296c4:	b	2972c <flatcc_builder_check_required@@Base+0xd0>
   296c8:	mov	r3, #0
   296cc:	str	r3, [fp, #-8]
   296d0:	b	29718 <flatcc_builder_check_required@@Base+0xbc>
   296d4:	ldr	r3, [fp, #-16]
   296d8:	ldr	r2, [r3, #4]
   296dc:	ldr	r3, [fp, #-8]
   296e0:	lsl	r3, r3, #1
   296e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   296e8:	add	r3, r1, r3
   296ec:	ldrh	r3, [r3]
   296f0:	lsl	r3, r3, #1
   296f4:	add	r3, r2, r3
   296f8:	ldrh	r3, [r3]
   296fc:	cmp	r3, #0
   29700:	bne	2970c <flatcc_builder_check_required@@Base+0xb0>
   29704:	mov	r3, #0
   29708:	b	2972c <flatcc_builder_check_required@@Base+0xd0>
   2970c:	ldr	r3, [fp, #-8]
   29710:	add	r3, r3, #1
   29714:	str	r3, [fp, #-8]
   29718:	ldr	r2, [fp, #-8]
   2971c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29720:	cmp	r2, r3
   29724:	blt	296d4 <flatcc_builder_check_required@@Base+0x78>
   29728:	mov	r3, #1
   2972c:	mov	r0, r3
   29730:	sub	sp, fp, #4
   29734:	pop	{fp, pc}
   29738:	andeq	ip, r0, r8, asr sl
   2973c:	andeq	r0, r0, r1, lsl r5
   29740:	andeq	ip, r0, r4, asr #6
   29744:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>

00029748 <flatcc_builder_end_table@@Base>:
   29748:	push	{fp, lr}
   2974c:	add	fp, sp, #4
   29750:	sub	sp, sp, #48	; 0x30
   29754:	str	r0, [fp, #-32]	; 0xffffffe0
   29758:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2975c:	ldr	r3, [r3, #32]
   29760:	ldrh	r3, [r3, #14]
   29764:	cmp	r3, #3
   29768:	beq	2978c <flatcc_builder_end_table@@Base+0x44>
   2976c:	ldr	r3, [pc, #508]	; 29970 <flatcc_builder_end_table@@Base+0x228>
   29770:	add	r3, pc, r3
   29774:	ldr	r2, [pc, #504]	; 29974 <flatcc_builder_end_table@@Base+0x22c>
   29778:	ldr	r1, [pc, #504]	; 29978 <flatcc_builder_end_table@@Base+0x230>
   2977c:	add	r1, pc, r1
   29780:	ldr	r0, [pc, #500]	; 2997c <flatcc_builder_end_table@@Base+0x234>
   29784:	add	r0, pc, r0
   29788:	bl	12704 <__assert_fail@plt>
   2978c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29790:	ldr	r3, [r3, #4]
   29794:	sub	r3, r3, #4
   29798:	str	r3, [fp, #-8]
   2979c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   297a0:	ldrh	r3, [r3, #8]
   297a4:	add	r3, r3, #2
   297a8:	uxth	r3, r3
   297ac:	lsl	r3, r3, #1
   297b0:	strh	r3, [fp, #-10]
   297b4:	ldr	r3, [fp, #-8]
   297b8:	ldrh	r2, [fp, #-10]
   297bc:	strh	r2, [r3]
   297c0:	ldr	r3, [fp, #-8]
   297c4:	add	r3, r3, #2
   297c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   297cc:	ldr	r2, [r2, #20]
   297d0:	uxth	r2, r2
   297d4:	add	r2, r2, #4
   297d8:	uxth	r2, r2
   297dc:	strh	r2, [r3]
   297e0:	ldr	r3, [fp, #-8]
   297e4:	ldrh	r3, [r3]
   297e8:	mov	r2, r3
   297ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   297f0:	ldr	r3, [r3, #12]
   297f4:	eor	r3, r3, r2
   297f8:	ldr	r2, [pc, #384]	; 29980 <flatcc_builder_end_table@@Base+0x238>
   297fc:	mul	r3, r2, r3
   29800:	ldr	r2, [fp, #-8]
   29804:	add	r2, r2, #2
   29808:	ldrh	r2, [r2]
   2980c:	eor	r3, r3, r2
   29810:	ldr	r2, [pc, #360]	; 29980 <flatcc_builder_end_table@@Base+0x238>
   29814:	mul	r2, r2, r3
   29818:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2981c:	str	r2, [r3, #12]
   29820:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29824:	ldr	r3, [r3, #12]
   29828:	ldrh	r2, [fp, #-10]
   2982c:	ldr	r1, [fp, #-8]
   29830:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29834:	bl	28e18 <flatcc_builder_create_cached_vtable@@Base>
   29838:	str	r0, [fp, #-16]
   2983c:	ldr	r3, [fp, #-16]
   29840:	cmp	r3, #0
   29844:	bne	29850 <flatcc_builder_end_table@@Base+0x108>
   29848:	mov	r3, #0
   2984c:	b	29964 <flatcc_builder_end_table@@Base+0x21c>
   29850:	ldrh	r3, [fp, #-10]
   29854:	mov	r2, r3
   29858:	mov	r1, #0
   2985c:	ldr	r0, [fp, #-8]
   29860:	bl	126a4 <memset@plt>
   29864:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29868:	ldr	r2, [r3, #76]	; 0x4c
   2986c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29870:	ldr	r3, [r3, #32]
   29874:	ldr	r3, [r3, #20]
   29878:	add	r3, r2, r3
   2987c:	str	r3, [fp, #-20]	; 0xffffffec
   29880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29884:	ldr	r3, [r3]
   29888:	mov	r2, r3
   2988c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29890:	sub	r3, r2, r3
   29894:	asr	r3, r3, #1
   29898:	str	r3, [fp, #-24]	; 0xffffffe8
   2989c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   298a0:	ldr	r1, [r3, #16]
   298a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   298a8:	ldr	r2, [r3, #20]
   298ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   298b0:	ldrh	r0, [r3, #130]	; 0x82
   298b4:	ldr	r3, [fp, #-16]
   298b8:	str	r3, [sp, #8]
   298bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   298c0:	str	r3, [sp, #4]
   298c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   298c8:	str	r3, [sp]
   298cc:	mov	r3, r0
   298d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   298d4:	bl	29128 <flatcc_builder_create_table@@Base>
   298d8:	str	r0, [fp, #-28]	; 0xffffffe4
   298dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   298e0:	cmp	r3, #0
   298e4:	bne	298f0 <flatcc_builder_end_table@@Base+0x1a8>
   298e8:	mov	r3, #0
   298ec:	b	29964 <flatcc_builder_end_table@@Base+0x21c>
   298f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   298f4:	ldr	r3, [r3, #32]
   298f8:	ldr	r2, [r3, #24]
   298fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29900:	str	r2, [r3, #12]
   29904:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29908:	ldr	r3, [r3, #32]
   2990c:	ldrh	r2, [r3, #28]
   29910:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29914:	strh	r2, [r3, #8]
   29918:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2991c:	ldr	r2, [r3, #52]	; 0x34
   29920:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29924:	ldr	r3, [r3, #32]
   29928:	ldr	r3, [r3, #16]
   2992c:	add	r2, r2, r3
   29930:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29934:	str	r2, [r3, #4]
   29938:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2993c:	ldr	r2, [r3, #76]	; 0x4c
   29940:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29944:	ldr	r3, [r3, #32]
   29948:	ldr	r3, [r3, #20]
   2994c:	add	r2, r2, r3
   29950:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29954:	str	r2, [r3]
   29958:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2995c:	bl	26f58 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   29960:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29964:	mov	r0, r3
   29968:	sub	sp, fp, #4
   2996c:	pop	{fp, pc}
   29970:	muleq	r0, r4, r9
   29974:	andeq	r0, r0, r5, lsr #10
   29978:	andeq	ip, r0, r0, ror #4
   2997c:	andeq	ip, r0, r8, lsl r5
   29980:			; <UNDEFINED> instruction: 0x9e3779b1

00029984 <flatcc_builder_create_vector@@Base>:
   29984:	push	{r4, fp, lr}
   29988:	add	fp, sp, #8
   2998c:	sub	sp, sp, #108	; 0x6c
   29990:	str	r0, [fp, #-104]	; 0xffffff98
   29994:	str	r1, [fp, #-108]	; 0xffffff94
   29998:	str	r2, [fp, #-112]	; 0xffffff90
   2999c:	str	r3, [fp, #-116]	; 0xffffff8c
   299a0:	ldr	r4, [pc, #484]	; 29b8c <flatcc_builder_create_vector@@Base+0x208>
   299a4:	add	r4, pc, r4
   299a8:	ldr	r2, [fp, #-112]	; 0xffffff90
   299ac:	ldr	r3, [fp, #8]
   299b0:	cmp	r2, r3
   299b4:	bls	299f0 <flatcc_builder_create_vector@@Base+0x6c>
   299b8:	ldr	r2, [fp, #-112]	; 0xffffff90
   299bc:	ldr	r3, [fp, #8]
   299c0:	cmp	r2, r3
   299c4:	bls	299e8 <flatcc_builder_create_vector@@Base+0x64>
   299c8:	ldr	r3, [pc, #448]	; 29b90 <flatcc_builder_create_vector@@Base+0x20c>
   299cc:	add	r3, pc, r3
   299d0:	ldr	r2, [pc, #444]	; 29b94 <flatcc_builder_create_vector@@Base+0x210>
   299d4:	ldr	r1, [pc, #444]	; 29b98 <flatcc_builder_create_vector@@Base+0x214>
   299d8:	add	r1, pc, r1
   299dc:	ldr	r0, [pc, #440]	; 29b9c <flatcc_builder_create_vector@@Base+0x218>
   299e0:	add	r0, pc, r0
   299e4:	bl	12704 <__assert_fail@plt>
   299e8:	mov	r3, #0
   299ec:	b	29b80 <flatcc_builder_create_vector@@Base+0x1fc>
   299f0:	mov	r1, #4
   299f4:	add	r3, fp, #4
   299f8:	mov	r0, r3
   299fc:	bl	26a2c <flatcc_builder_clear@@Base+0xf8>
   29a00:	ldrh	r3, [fp, #4]
   29a04:	mov	r1, r3
   29a08:	ldr	r0, [fp, #-104]	; 0xffffff98
   29a0c:	bl	269e4 <flatcc_builder_clear@@Base+0xb0>
   29a10:	ldr	r3, [fp, #-112]	; 0xffffff90
   29a14:	ldr	r2, [fp, #-116]	; 0xffffff8c
   29a18:	mul	r3, r2, r3
   29a1c:	str	r3, [fp, #-16]
   29a20:	ldr	r0, [fp, #-112]	; 0xffffff90
   29a24:	bl	259e4 <main@@Base+0x148>
   29a28:	mov	r3, r0
   29a2c:	str	r3, [fp, #-24]	; 0xffffffe8
   29a30:	ldrh	r3, [fp, #4]
   29a34:	mov	r2, r3
   29a38:	ldr	r1, [fp, #-16]
   29a3c:	ldr	r0, [fp, #-104]	; 0xffffff98
   29a40:	bl	27020 <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   29a44:	str	r0, [fp, #-20]	; 0xffffffec
   29a48:	mov	r3, #0
   29a4c:	str	r3, [fp, #-96]	; 0xffffffa0
   29a50:	mov	r3, #0
   29a54:	str	r3, [fp, #-92]	; 0xffffffa4
   29a58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   29a5c:	add	r3, r3, #4
   29a60:	str	r3, [fp, #-96]	; 0xffffffa0
   29a64:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29a68:	add	r3, r3, #1
   29a6c:	lsl	r3, r3, #3
   29a70:	sub	r2, fp, #12
   29a74:	add	r3, r2, r3
   29a78:	sub	r2, fp, #24
   29a7c:	str	r2, [r3, #-84]	; 0xffffffac
   29a80:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29a84:	add	r3, r3, #1
   29a88:	lsl	r3, r3, #3
   29a8c:	sub	r2, fp, #12
   29a90:	add	r3, r2, r3
   29a94:	mov	r2, #4
   29a98:	str	r2, [r3, #-80]	; 0xffffffb0
   29a9c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29aa0:	add	r3, r3, #1
   29aa4:	str	r3, [fp, #-92]	; 0xffffffa4
   29aa8:	ldr	r3, [fp, #-16]
   29aac:	cmp	r3, #0
   29ab0:	beq	29b08 <flatcc_builder_create_vector@@Base+0x184>
   29ab4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29ab8:	ldr	r3, [fp, #-16]
   29abc:	add	r3, r2, r3
   29ac0:	str	r3, [fp, #-96]	; 0xffffffa0
   29ac4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29ac8:	add	r3, r3, #1
   29acc:	lsl	r3, r3, #3
   29ad0:	sub	r2, fp, #12
   29ad4:	add	r3, r2, r3
   29ad8:	ldr	r2, [fp, #-108]	; 0xffffff94
   29adc:	str	r2, [r3, #-84]	; 0xffffffac
   29ae0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29ae4:	add	r3, r3, #1
   29ae8:	lsl	r3, r3, #3
   29aec:	sub	r2, fp, #12
   29af0:	add	r3, r2, r3
   29af4:	ldr	r2, [fp, #-16]
   29af8:	str	r2, [r3, #-80]	; 0xffffffb0
   29afc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29b00:	add	r3, r3, #1
   29b04:	str	r3, [fp, #-92]	; 0xffffffa4
   29b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   29b0c:	cmp	r3, #0
   29b10:	beq	29b6c <flatcc_builder_create_vector@@Base+0x1e8>
   29b14:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29b18:	ldr	r3, [fp, #-20]	; 0xffffffec
   29b1c:	add	r3, r2, r3
   29b20:	str	r3, [fp, #-96]	; 0xffffffa0
   29b24:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29b28:	add	r3, r3, #1
   29b2c:	lsl	r3, r3, #3
   29b30:	sub	r2, fp, #12
   29b34:	add	r3, r2, r3
   29b38:	ldr	r2, [pc, #96]	; 29ba0 <flatcc_builder_create_vector@@Base+0x21c>
   29b3c:	ldr	r2, [r4, r2]
   29b40:	str	r2, [r3, #-84]	; 0xffffffac
   29b44:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29b48:	add	r3, r3, #1
   29b4c:	lsl	r3, r3, #3
   29b50:	sub	r2, fp, #12
   29b54:	add	r3, r2, r3
   29b58:	ldr	r2, [fp, #-20]	; 0xffffffec
   29b5c:	str	r2, [r3, #-80]	; 0xffffffb0
   29b60:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29b64:	add	r3, r3, #1
   29b68:	str	r3, [fp, #-92]	; 0xffffffa4
   29b6c:	sub	r3, fp, #96	; 0x60
   29b70:	mov	r1, r3
   29b74:	ldr	r0, [fp, #-104]	; 0xffffff98
   29b78:	bl	270a8 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   29b7c:	mov	r3, r0
   29b80:	mov	r0, r3
   29b84:	sub	sp, fp, #8
   29b88:	pop	{r4, fp, pc}
   29b8c:	andeq	lr, r1, r4, asr r6
   29b90:	andeq	ip, r0, r4, asr r7
   29b94:	andeq	r0, r0, r5, asr r5
   29b98:	andeq	ip, r0, r4
   29b9c:	andeq	ip, r0, r8, ror #5
   29ba0:	andeq	r0, r0, r4, ror r0

00029ba4 <flatcc_builder_end_vector@@Base>:
   29ba4:	push	{fp, lr}
   29ba8:	add	fp, sp, #4
   29bac:	sub	sp, sp, #24
   29bb0:	str	r0, [fp, #-16]
   29bb4:	ldr	r3, [fp, #-16]
   29bb8:	ldr	r3, [r3, #32]
   29bbc:	ldrh	r3, [r3, #14]
   29bc0:	cmp	r3, #4
   29bc4:	beq	29be8 <flatcc_builder_end_vector@@Base+0x44>
   29bc8:	ldr	r3, [pc, #148]	; 29c64 <flatcc_builder_end_vector@@Base+0xc0>
   29bcc:	add	r3, pc, r3
   29bd0:	ldr	r2, [pc, #144]	; 29c68 <flatcc_builder_end_vector@@Base+0xc4>
   29bd4:	ldr	r1, [pc, #144]	; 29c6c <flatcc_builder_end_vector@@Base+0xc8>
   29bd8:	add	r1, pc, r1
   29bdc:	ldr	r0, [pc, #140]	; 29c70 <flatcc_builder_end_vector@@Base+0xcc>
   29be0:	add	r0, pc, r0
   29be4:	bl	12704 <__assert_fail@plt>
   29be8:	ldr	r3, [fp, #-16]
   29bec:	ldr	r1, [r3, #16]
   29bf0:	ldr	r3, [fp, #-16]
   29bf4:	ldr	r3, [r3, #32]
   29bf8:	ldr	r0, [r3, #20]
   29bfc:	ldr	r3, [fp, #-16]
   29c00:	ldr	r3, [r3, #32]
   29c04:	ldr	ip, [r3, #16]
   29c08:	ldr	r3, [fp, #-16]
   29c0c:	ldrh	r3, [r3, #130]	; 0x82
   29c10:	ldr	r2, [fp, #-16]
   29c14:	ldr	r2, [r2, #32]
   29c18:	ldr	r2, [r2, #24]
   29c1c:	str	r2, [sp, #4]
   29c20:	str	r3, [sp]
   29c24:	mov	r3, ip
   29c28:	mov	r2, r0
   29c2c:	ldr	r0, [fp, #-16]
   29c30:	bl	29984 <flatcc_builder_create_vector@@Base>
   29c34:	str	r0, [fp, #-8]
   29c38:	ldr	r3, [fp, #-8]
   29c3c:	cmp	r3, #0
   29c40:	bne	29c4c <flatcc_builder_end_vector@@Base+0xa8>
   29c44:	mov	r3, #0
   29c48:	b	29c58 <flatcc_builder_end_vector@@Base+0xb4>
   29c4c:	ldr	r0, [fp, #-16]
   29c50:	bl	26f58 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   29c54:	ldr	r3, [fp, #-8]
   29c58:	mov	r0, r3
   29c5c:	sub	sp, fp, #4
   29c60:	pop	{fp, pc}
   29c64:	andeq	ip, r0, r4, ror r5
   29c68:	andeq	r0, r0, r8, ror r5
   29c6c:	andeq	fp, r0, r4, lsl #28
   29c70:	andeq	fp, r0, r0, asr #30

00029c74 <flatcc_builder_vector_count@@Base>:
   29c74:	push	{fp}		; (str fp, [sp, #-4]!)
   29c78:	add	fp, sp, #0
   29c7c:	sub	sp, sp, #12
   29c80:	str	r0, [fp, #-8]
   29c84:	ldr	r3, [fp, #-8]
   29c88:	ldr	r3, [r3, #32]
   29c8c:	ldr	r3, [r3, #20]
   29c90:	mov	r0, r3
   29c94:	add	sp, fp, #0
   29c98:	pop	{fp}		; (ldr fp, [sp], #4)
   29c9c:	bx	lr

00029ca0 <flatcc_builder_vector_edit@@Base>:
   29ca0:	push	{fp}		; (str fp, [sp, #-4]!)
   29ca4:	add	fp, sp, #0
   29ca8:	sub	sp, sp, #12
   29cac:	str	r0, [fp, #-8]
   29cb0:	ldr	r3, [fp, #-8]
   29cb4:	ldr	r3, [r3, #16]
   29cb8:	mov	r0, r3
   29cbc:	add	sp, fp, #0
   29cc0:	pop	{fp}		; (ldr fp, [sp], #4)
   29cc4:	bx	lr
   29cc8:	push	{r4, fp, lr}
   29ccc:	add	fp, sp, #8
   29cd0:	sub	sp, sp, #116	; 0x74
   29cd4:	str	r0, [fp, #-112]	; 0xffffff90
   29cd8:	str	r1, [fp, #-116]	; 0xffffff8c
   29cdc:	str	r2, [fp, #-120]	; 0xffffff88
   29ce0:	str	r3, [fp, #-124]	; 0xffffff84
   29ce4:	ldr	r4, [pc, #748]	; 29fd8 <flatcc_builder_vector_edit@@Base+0x338>
   29ce8:	add	r4, pc, r4
   29cec:	ldr	r3, [fp, #-120]	; 0xffffff88
   29cf0:	cmn	r3, #-1073741823	; 0xc0000001
   29cf4:	bls	29d00 <flatcc_builder_vector_edit@@Base+0x60>
   29cf8:	mov	r3, #0
   29cfc:	b	29fcc <flatcc_builder_vector_edit@@Base+0x32c>
   29d00:	mov	r1, #4
   29d04:	ldr	r0, [fp, #-112]	; 0xffffff90
   29d08:	bl	269e4 <flatcc_builder_clear@@Base+0xb0>
   29d0c:	ldr	r3, [fp, #-120]	; 0xffffff88
   29d10:	lsl	r3, r3, #2
   29d14:	str	r3, [fp, #-20]	; 0xffffffec
   29d18:	ldr	r0, [fp, #-120]	; 0xffffff88
   29d1c:	bl	259e4 <main@@Base+0x148>
   29d20:	mov	r3, r0
   29d24:	str	r3, [fp, #-36]	; 0xffffffdc
   29d28:	mov	r2, #4
   29d2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   29d30:	ldr	r0, [fp, #-112]	; 0xffffff90
   29d34:	bl	27020 <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   29d38:	str	r0, [fp, #-24]	; 0xffffffe8
   29d3c:	mov	r3, #0
   29d40:	str	r3, [fp, #-108]	; 0xffffff94
   29d44:	mov	r3, #0
   29d48:	str	r3, [fp, #-104]	; 0xffffff98
   29d4c:	ldr	r3, [fp, #-108]	; 0xffffff94
   29d50:	add	r3, r3, #4
   29d54:	str	r3, [fp, #-108]	; 0xffffff94
   29d58:	ldr	r3, [fp, #-104]	; 0xffffff98
   29d5c:	add	r3, r3, #1
   29d60:	lsl	r3, r3, #3
   29d64:	sub	r2, fp, #12
   29d68:	add	r3, r2, r3
   29d6c:	sub	r2, fp, #36	; 0x24
   29d70:	str	r2, [r3, #-96]	; 0xffffffa0
   29d74:	ldr	r3, [fp, #-104]	; 0xffffff98
   29d78:	add	r3, r3, #1
   29d7c:	lsl	r3, r3, #3
   29d80:	sub	r2, fp, #12
   29d84:	add	r3, r2, r3
   29d88:	mov	r2, #4
   29d8c:	str	r2, [r3, #-92]	; 0xffffffa4
   29d90:	ldr	r3, [fp, #-104]	; 0xffffff98
   29d94:	add	r3, r3, #1
   29d98:	str	r3, [fp, #-104]	; 0xffffff98
   29d9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29da0:	cmp	r3, #0
   29da4:	beq	29dfc <flatcc_builder_vector_edit@@Base+0x15c>
   29da8:	ldr	r2, [fp, #-108]	; 0xffffff94
   29dac:	ldr	r3, [fp, #-20]	; 0xffffffec
   29db0:	add	r3, r2, r3
   29db4:	str	r3, [fp, #-108]	; 0xffffff94
   29db8:	ldr	r3, [fp, #-104]	; 0xffffff98
   29dbc:	add	r3, r3, #1
   29dc0:	lsl	r3, r3, #3
   29dc4:	sub	r2, fp, #12
   29dc8:	add	r3, r2, r3
   29dcc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   29dd0:	str	r2, [r3, #-96]	; 0xffffffa0
   29dd4:	ldr	r3, [fp, #-104]	; 0xffffff98
   29dd8:	add	r3, r3, #1
   29ddc:	lsl	r3, r3, #3
   29de0:	sub	r2, fp, #12
   29de4:	add	r3, r2, r3
   29de8:	ldr	r2, [fp, #-20]	; 0xffffffec
   29dec:	str	r2, [r3, #-92]	; 0xffffffa4
   29df0:	ldr	r3, [fp, #-104]	; 0xffffff98
   29df4:	add	r3, r3, #1
   29df8:	str	r3, [fp, #-104]	; 0xffffff98
   29dfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29e00:	cmp	r3, #0
   29e04:	beq	29e60 <flatcc_builder_vector_edit@@Base+0x1c0>
   29e08:	ldr	r2, [fp, #-108]	; 0xffffff94
   29e0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29e10:	add	r3, r2, r3
   29e14:	str	r3, [fp, #-108]	; 0xffffff94
   29e18:	ldr	r3, [fp, #-104]	; 0xffffff98
   29e1c:	add	r3, r3, #1
   29e20:	lsl	r3, r3, #3
   29e24:	sub	r2, fp, #12
   29e28:	add	r3, r2, r3
   29e2c:	ldr	r2, [pc, #424]	; 29fdc <flatcc_builder_vector_edit@@Base+0x33c>
   29e30:	ldr	r2, [r4, r2]
   29e34:	str	r2, [r3, #-96]	; 0xffffffa0
   29e38:	ldr	r3, [fp, #-104]	; 0xffffff98
   29e3c:	add	r3, r3, #1
   29e40:	lsl	r3, r3, #3
   29e44:	sub	r2, fp, #12
   29e48:	add	r3, r2, r3
   29e4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29e50:	str	r2, [r3, #-92]	; 0xffffffa4
   29e54:	ldr	r3, [fp, #-104]	; 0xffffff98
   29e58:	add	r3, r3, #1
   29e5c:	str	r3, [fp, #-104]	; 0xffffff98
   29e60:	ldr	r3, [fp, #-112]	; 0xffffff90
   29e64:	ldr	r3, [r3, #136]	; 0x88
   29e68:	mov	r2, r3
   29e6c:	ldr	r3, [fp, #-108]	; 0xffffff94
   29e70:	sub	r3, r2, r3
   29e74:	str	r3, [fp, #-28]	; 0xffffffe4
   29e78:	mov	r3, #0
   29e7c:	str	r3, [fp, #-16]
   29e80:	b	29fa8 <flatcc_builder_vector_edit@@Base+0x308>
   29e84:	ldr	r3, [fp, #-16]
   29e88:	lsl	r3, r3, #2
   29e8c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   29e90:	add	r3, r2, r3
   29e94:	ldr	r3, [r3]
   29e98:	cmp	r3, #0
   29e9c:	beq	29f38 <flatcc_builder_vector_edit@@Base+0x298>
   29ea0:	ldr	r3, [fp, #-16]
   29ea4:	lsl	r3, r3, #2
   29ea8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   29eac:	add	r3, r2, r3
   29eb0:	ldr	r3, [r3]
   29eb4:	mov	r2, r3
   29eb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29ebc:	sub	r2, r2, r3
   29ec0:	ldr	r3, [fp, #-16]
   29ec4:	lsl	r3, r3, #2
   29ec8:	sub	r3, r2, r3
   29ecc:	sub	r3, r3, #4
   29ed0:	str	r3, [fp, #-32]	; 0xffffffe0
   29ed4:	ldr	r3, [fp, #-16]
   29ed8:	lsl	r3, r3, #2
   29edc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   29ee0:	add	r4, r2, r3
   29ee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29ee8:	bl	259e4 <main@@Base+0x148>
   29eec:	mov	r3, r0
   29ef0:	str	r3, [r4]
   29ef4:	ldr	r3, [fp, #-124]	; 0xffffff84
   29ef8:	cmp	r3, #0
   29efc:	beq	29f9c <flatcc_builder_vector_edit@@Base+0x2fc>
   29f00:	ldr	r2, [fp, #-124]	; 0xffffff84
   29f04:	ldr	r3, [fp, #-16]
   29f08:	add	r3, r2, r3
   29f0c:	ldrb	r3, [r3]
   29f10:	cmp	r3, #0
   29f14:	bne	29f9c <flatcc_builder_vector_edit@@Base+0x2fc>
   29f18:	ldr	r3, [pc, #192]	; 29fe0 <flatcc_builder_vector_edit@@Base+0x340>
   29f1c:	add	r3, pc, r3
   29f20:	ldr	r2, [pc, #188]	; 29fe4 <flatcc_builder_vector_edit@@Base+0x344>
   29f24:	ldr	r1, [pc, #188]	; 29fe8 <flatcc_builder_vector_edit@@Base+0x348>
   29f28:	add	r1, pc, r1
   29f2c:	ldr	r0, [pc, #184]	; 29fec <flatcc_builder_vector_edit@@Base+0x34c>
   29f30:	add	r0, pc, r0
   29f34:	bl	12704 <__assert_fail@plt>
   29f38:	ldr	r3, [fp, #-124]	; 0xffffff84
   29f3c:	cmp	r3, #0
   29f40:	beq	29f7c <flatcc_builder_vector_edit@@Base+0x2dc>
   29f44:	ldr	r2, [fp, #-124]	; 0xffffff84
   29f48:	ldr	r3, [fp, #-16]
   29f4c:	add	r3, r2, r3
   29f50:	ldrb	r3, [r3]
   29f54:	cmp	r3, #0
   29f58:	beq	29f9c <flatcc_builder_vector_edit@@Base+0x2fc>
   29f5c:	ldr	r3, [pc, #140]	; 29ff0 <flatcc_builder_vector_edit@@Base+0x350>
   29f60:	add	r3, pc, r3
   29f64:	ldr	r2, [pc, #136]	; 29ff4 <flatcc_builder_vector_edit@@Base+0x354>
   29f68:	ldr	r1, [pc, #136]	; 29ff8 <flatcc_builder_vector_edit@@Base+0x358>
   29f6c:	add	r1, pc, r1
   29f70:	ldr	r0, [pc, #132]	; 29ffc <flatcc_builder_vector_edit@@Base+0x35c>
   29f74:	add	r0, pc, r0
   29f78:	bl	12704 <__assert_fail@plt>
   29f7c:	ldr	r3, [pc, #124]	; 2a000 <flatcc_builder_vector_edit@@Base+0x360>
   29f80:	add	r3, pc, r3
   29f84:	ldr	r2, [pc, #120]	; 2a004 <flatcc_builder_vector_edit@@Base+0x364>
   29f88:	ldr	r1, [pc, #120]	; 2a008 <flatcc_builder_vector_edit@@Base+0x368>
   29f8c:	add	r1, pc, r1
   29f90:	ldr	r0, [pc, #116]	; 2a00c <flatcc_builder_vector_edit@@Base+0x36c>
   29f94:	add	r0, pc, r0
   29f98:	bl	12704 <__assert_fail@plt>
   29f9c:	ldr	r3, [fp, #-16]
   29fa0:	add	r3, r3, #1
   29fa4:	str	r3, [fp, #-16]
   29fa8:	ldr	r2, [fp, #-16]
   29fac:	ldr	r3, [fp, #-120]	; 0xffffff88
   29fb0:	cmp	r2, r3
   29fb4:	bcc	29e84 <flatcc_builder_vector_edit@@Base+0x1e4>
   29fb8:	sub	r3, fp, #108	; 0x6c
   29fbc:	mov	r1, r3
   29fc0:	ldr	r0, [fp, #-112]	; 0xffffff90
   29fc4:	bl	270a8 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   29fc8:	mov	r3, r0
   29fcc:	mov	r0, r3
   29fd0:	sub	sp, fp, #8
   29fd4:	pop	{r4, fp, pc}
   29fd8:	andeq	lr, r1, r0, lsl r3
   29fdc:	andeq	r0, r0, r4, ror r0
   29fe0:	andeq	ip, r0, r0, asr #4
   29fe4:			; <UNDEFINED> instruction: 0x000005b1
   29fe8:			; <UNDEFINED> instruction: 0x0000bab4
   29fec:	andeq	fp, r0, ip, lsr #27
   29ff0:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   29ff4:			; <UNDEFINED> instruction: 0x000005b5
   29ff8:	andeq	fp, r0, r0, ror sl
   29ffc:	andeq	fp, r0, r8, ror sp
   2a000:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   2a004:			; <UNDEFINED> instruction: 0x000005b7
   2a008:	andeq	fp, r0, r0, asr sl
   2a00c:	andeq	fp, r0, r8, lsr #21

0002a010 <flatcc_builder_create_offset_vector_direct@@Base>:
   2a010:	push	{fp, lr}
   2a014:	add	fp, sp, #4
   2a018:	sub	sp, sp, #16
   2a01c:	str	r0, [fp, #-8]
   2a020:	str	r1, [fp, #-12]
   2a024:	str	r2, [fp, #-16]
   2a028:	mov	r3, #0
   2a02c:	ldr	r2, [fp, #-16]
   2a030:	ldr	r1, [fp, #-12]
   2a034:	ldr	r0, [fp, #-8]
   2a038:	bl	29cc8 <flatcc_builder_vector_edit@@Base+0x28>
   2a03c:	mov	r3, r0
   2a040:	mov	r0, r3
   2a044:	sub	sp, fp, #4
   2a048:	pop	{fp, pc}

0002a04c <flatcc_builder_end_offset_vector@@Base>:
   2a04c:	push	{fp, lr}
   2a050:	add	fp, sp, #4
   2a054:	sub	sp, sp, #16
   2a058:	str	r0, [fp, #-16]
   2a05c:	ldr	r3, [fp, #-16]
   2a060:	ldr	r3, [r3, #32]
   2a064:	ldrh	r3, [r3, #14]
   2a068:	cmp	r3, #5
   2a06c:	beq	2a090 <flatcc_builder_end_offset_vector@@Base+0x44>
   2a070:	ldr	r3, [pc, #104]	; 2a0e0 <flatcc_builder_end_offset_vector@@Base+0x94>
   2a074:	add	r3, pc, r3
   2a078:	ldr	r2, [pc, #100]	; 2a0e4 <flatcc_builder_end_offset_vector@@Base+0x98>
   2a07c:	ldr	r1, [pc, #100]	; 2a0e8 <flatcc_builder_end_offset_vector@@Base+0x9c>
   2a080:	add	r1, pc, r1
   2a084:	ldr	r0, [pc, #96]	; 2a0ec <flatcc_builder_end_offset_vector@@Base+0xa0>
   2a088:	add	r0, pc, r0
   2a08c:	bl	12704 <__assert_fail@plt>
   2a090:	ldr	r3, [fp, #-16]
   2a094:	ldr	r1, [r3, #16]
   2a098:	ldr	r3, [fp, #-16]
   2a09c:	ldr	r3, [r3, #32]
   2a0a0:	ldr	r3, [r3, #20]
   2a0a4:	mov	r2, r3
   2a0a8:	ldr	r0, [fp, #-16]
   2a0ac:	bl	2a010 <flatcc_builder_create_offset_vector_direct@@Base>
   2a0b0:	str	r0, [fp, #-8]
   2a0b4:	ldr	r3, [fp, #-8]
   2a0b8:	cmp	r3, #0
   2a0bc:	bne	2a0c8 <flatcc_builder_end_offset_vector@@Base+0x7c>
   2a0c0:	mov	r3, #0
   2a0c4:	b	2a0d4 <flatcc_builder_end_offset_vector@@Base+0x88>
   2a0c8:	ldr	r0, [fp, #-16]
   2a0cc:	bl	26f58 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   2a0d0:	ldr	r3, [fp, #-8]
   2a0d4:	mov	r0, r3
   2a0d8:	sub	sp, fp, #4
   2a0dc:	pop	{fp, pc}
   2a0e0:	andeq	ip, r0, r8, lsl #2
   2a0e4:	andeq	r0, r0, r8, asr #11
   2a0e8:	andeq	fp, r0, ip, asr r9
   2a0ec:	andeq	fp, r0, r4, lsl #22

0002a0f0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2a0f0:	push	{fp, lr}
   2a0f4:	add	fp, sp, #4
   2a0f8:	sub	sp, sp, #16
   2a0fc:	str	r0, [fp, #-16]
   2a100:	str	r1, [fp, #-20]	; 0xffffffec
   2a104:	ldr	r3, [fp, #-16]
   2a108:	ldr	r3, [r3, #32]
   2a10c:	ldrh	r3, [r3, #14]
   2a110:	cmp	r3, #5
   2a114:	beq	2a138 <flatcc_builder_end_offset_vector_for_unions@@Base+0x48>
   2a118:	ldr	r3, [pc, #104]	; 2a188 <flatcc_builder_end_offset_vector_for_unions@@Base+0x98>
   2a11c:	add	r3, pc, r3
   2a120:	ldr	r2, [pc, #100]	; 2a18c <flatcc_builder_end_offset_vector_for_unions@@Base+0x9c>
   2a124:	ldr	r1, [pc, #100]	; 2a190 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa0>
   2a128:	add	r1, pc, r1
   2a12c:	ldr	r0, [pc, #96]	; 2a194 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa4>
   2a130:	add	r0, pc, r0
   2a134:	bl	12704 <__assert_fail@plt>
   2a138:	ldr	r3, [fp, #-16]
   2a13c:	ldr	r1, [r3, #16]
   2a140:	ldr	r3, [fp, #-16]
   2a144:	ldr	r3, [r3, #32]
   2a148:	ldr	r2, [r3, #20]
   2a14c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a150:	ldr	r0, [fp, #-16]
   2a154:	bl	29cc8 <flatcc_builder_vector_edit@@Base+0x28>
   2a158:	str	r0, [fp, #-8]
   2a15c:	ldr	r3, [fp, #-8]
   2a160:	cmp	r3, #0
   2a164:	bne	2a170 <flatcc_builder_end_offset_vector_for_unions@@Base+0x80>
   2a168:	mov	r3, #0
   2a16c:	b	2a17c <flatcc_builder_end_offset_vector_for_unions@@Base+0x8c>
   2a170:	ldr	r0, [fp, #-16]
   2a174:	bl	26f58 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   2a178:	ldr	r3, [fp, #-8]
   2a17c:	mov	r0, r3
   2a180:	sub	sp, fp, #4
   2a184:	pop	{fp, pc}
   2a188:	andeq	ip, r0, r4, lsl #1
   2a18c:	ldrdeq	r0, [r0], -r5
   2a190:			; <UNDEFINED> instruction: 0x0000b8b4
   2a194:	andeq	fp, r0, ip, asr sl

0002a198 <flatcc_builder_offset_vector_edit@@Base>:
   2a198:	push	{fp}		; (str fp, [sp, #-4]!)
   2a19c:	add	fp, sp, #0
   2a1a0:	sub	sp, sp, #12
   2a1a4:	str	r0, [fp, #-8]
   2a1a8:	ldr	r3, [fp, #-8]
   2a1ac:	ldr	r3, [r3, #16]
   2a1b0:	mov	r0, r3
   2a1b4:	add	sp, fp, #0
   2a1b8:	pop	{fp}		; (ldr fp, [sp], #4)
   2a1bc:	bx	lr

0002a1c0 <flatcc_builder_offset_vector_count@@Base>:
   2a1c0:	push	{fp}		; (str fp, [sp, #-4]!)
   2a1c4:	add	fp, sp, #0
   2a1c8:	sub	sp, sp, #12
   2a1cc:	str	r0, [fp, #-8]
   2a1d0:	ldr	r3, [fp, #-8]
   2a1d4:	ldr	r3, [r3, #32]
   2a1d8:	ldr	r3, [r3, #20]
   2a1dc:	mov	r0, r3
   2a1e0:	add	sp, fp, #0
   2a1e4:	pop	{fp}		; (ldr fp, [sp], #4)
   2a1e8:	bx	lr

0002a1ec <flatcc_builder_table_add_union@@Base>:
   2a1ec:	push	{fp, lr}
   2a1f0:	add	fp, sp, #4
   2a1f4:	sub	sp, sp, #24
   2a1f8:	str	r0, [fp, #-16]
   2a1fc:	str	r1, [fp, #-20]	; 0xffffffec
   2a200:	sub	r1, fp, #28
   2a204:	stm	r1, {r2, r3}
   2a208:	ldr	r3, [fp, #-16]
   2a20c:	ldr	r3, [r3, #32]
   2a210:	ldrh	r3, [r3, #14]
   2a214:	cmp	r3, #3
   2a218:	beq	2a23c <flatcc_builder_table_add_union@@Base+0x50>
   2a21c:	ldr	r3, [pc, #352]	; 2a384 <flatcc_builder_table_add_union@@Base+0x198>
   2a220:	add	r3, pc, r3
   2a224:	ldr	r2, [pc, #348]	; 2a388 <flatcc_builder_table_add_union@@Base+0x19c>
   2a228:	ldr	r1, [pc, #348]	; 2a38c <flatcc_builder_table_add_union@@Base+0x1a0>
   2a22c:	add	r1, pc, r1
   2a230:	ldr	r0, [pc, #344]	; 2a390 <flatcc_builder_table_add_union@@Base+0x1a4>
   2a234:	add	r0, pc, r0
   2a238:	bl	12704 <__assert_fail@plt>
   2a23c:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   2a240:	cmp	r3, #0
   2a244:	bne	2a294 <flatcc_builder_table_add_union@@Base+0xa8>
   2a248:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a24c:	cmp	r3, #0
   2a250:	beq	2a294 <flatcc_builder_table_add_union@@Base+0xa8>
   2a254:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   2a258:	cmp	r3, #0
   2a25c:	bne	2a28c <flatcc_builder_table_add_union@@Base+0xa0>
   2a260:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a264:	cmp	r3, #0
   2a268:	beq	2a28c <flatcc_builder_table_add_union@@Base+0xa0>
   2a26c:	ldr	r3, [pc, #288]	; 2a394 <flatcc_builder_table_add_union@@Base+0x1a8>
   2a270:	add	r3, pc, r3
   2a274:	ldr	r2, [pc, #284]	; 2a398 <flatcc_builder_table_add_union@@Base+0x1ac>
   2a278:	ldr	r1, [pc, #284]	; 2a39c <flatcc_builder_table_add_union@@Base+0x1b0>
   2a27c:	add	r1, pc, r1
   2a280:	ldr	r0, [pc, #280]	; 2a3a0 <flatcc_builder_table_add_union@@Base+0x1b4>
   2a284:	add	r0, pc, r0
   2a288:	bl	12704 <__assert_fail@plt>
   2a28c:	mvn	r3, #0
   2a290:	b	2a378 <flatcc_builder_table_add_union@@Base+0x18c>
   2a294:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a298:	cmp	r3, #0
   2a29c:	beq	2a2fc <flatcc_builder_table_add_union@@Base+0x110>
   2a2a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a2a4:	ldr	r0, [fp, #-16]
   2a2a8:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   2a2ac:	str	r0, [fp, #-8]
   2a2b0:	ldr	r3, [fp, #-8]
   2a2b4:	cmp	r3, #0
   2a2b8:	bne	2a2f0 <flatcc_builder_table_add_union@@Base+0x104>
   2a2bc:	ldr	r3, [fp, #-8]
   2a2c0:	cmp	r3, #0
   2a2c4:	bne	2a2e8 <flatcc_builder_table_add_union@@Base+0xfc>
   2a2c8:	ldr	r3, [pc, #212]	; 2a3a4 <flatcc_builder_table_add_union@@Base+0x1b8>
   2a2cc:	add	r3, pc, r3
   2a2d0:	ldr	r2, [pc, #208]	; 2a3a8 <flatcc_builder_table_add_union@@Base+0x1bc>
   2a2d4:	ldr	r1, [pc, #208]	; 2a3ac <flatcc_builder_table_add_union@@Base+0x1c0>
   2a2d8:	add	r1, pc, r1
   2a2dc:	ldr	r0, [pc, #204]	; 2a3b0 <flatcc_builder_table_add_union@@Base+0x1c4>
   2a2e0:	add	r0, pc, r0
   2a2e4:	bl	12704 <__assert_fail@plt>
   2a2e8:	mvn	r3, #0
   2a2ec:	b	2a378 <flatcc_builder_table_add_union@@Base+0x18c>
   2a2f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a2f4:	ldr	r3, [fp, #-8]
   2a2f8:	str	r2, [r3]
   2a2fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a300:	sub	r1, r3, #1
   2a304:	mov	r3, #1
   2a308:	mov	r2, #1
   2a30c:	ldr	r0, [fp, #-16]
   2a310:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   2a314:	str	r0, [fp, #-12]
   2a318:	ldr	r3, [fp, #-12]
   2a31c:	cmp	r3, #0
   2a320:	bne	2a358 <flatcc_builder_table_add_union@@Base+0x16c>
   2a324:	ldr	r3, [fp, #-12]
   2a328:	cmp	r3, #0
   2a32c:	bne	2a350 <flatcc_builder_table_add_union@@Base+0x164>
   2a330:	ldr	r3, [pc, #124]	; 2a3b4 <flatcc_builder_table_add_union@@Base+0x1c8>
   2a334:	add	r3, pc, r3
   2a338:	ldr	r2, [pc, #120]	; 2a3b8 <flatcc_builder_table_add_union@@Base+0x1cc>
   2a33c:	ldr	r1, [pc, #120]	; 2a3bc <flatcc_builder_table_add_union@@Base+0x1d0>
   2a340:	add	r1, pc, r1
   2a344:	ldr	r0, [pc, #116]	; 2a3c0 <flatcc_builder_table_add_union@@Base+0x1d4>
   2a348:	add	r0, pc, r0
   2a34c:	bl	12704 <__assert_fail@plt>
   2a350:	mvn	r3, #0
   2a354:	b	2a378 <flatcc_builder_table_add_union@@Base+0x18c>
   2a358:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   2a35c:	mov	r0, r3
   2a360:	bl	25a08 <main@@Base+0x16c>
   2a364:	mov	r3, r0
   2a368:	mov	r2, r3
   2a36c:	ldr	r3, [fp, #-12]
   2a370:	strb	r2, [r3]
   2a374:	mov	r3, #0
   2a378:	mov	r0, r3
   2a37c:	sub	sp, fp, #4
   2a380:	pop	{fp, pc}
   2a384:	andeq	fp, r0, ip, lsr #31
   2a388:	andeq	r0, r0, lr, ror #11
   2a38c:			; <UNDEFINED> instruction: 0x0000b7b0
   2a390:	andeq	fp, r0, r8, ror #20
   2a394:	andeq	fp, r0, ip, asr pc
   2a398:	andeq	r0, r0, pc, ror #11
   2a39c:	andeq	fp, r0, r0, ror #14
   2a3a0:	andeq	fp, r0, r8, ror sl
   2a3a4:	andeq	fp, r0, r0, lsl #30
   2a3a8:	strdeq	r0, [r0], -r2
   2a3ac:	andeq	fp, r0, r4, lsl #14
   2a3b0:	andeq	fp, r0, r0, asr #20
   2a3b4:	muleq	r0, r8, lr
   2a3b8:	strdeq	r0, [r0], -r6
   2a3bc:	muleq	r0, ip, r6
   2a3c0:	andeq	fp, r0, r4, ror #19

0002a3c4 <flatcc_builder_table_add_union_vector@@Base>:
   2a3c4:	push	{fp, lr}
   2a3c8:	add	fp, sp, #4
   2a3cc:	sub	sp, sp, #24
   2a3d0:	str	r0, [fp, #-16]
   2a3d4:	str	r1, [fp, #-20]	; 0xffffffec
   2a3d8:	sub	r1, fp, #28
   2a3dc:	stm	r1, {r2, r3}
   2a3e0:	ldr	r3, [fp, #-16]
   2a3e4:	ldr	r3, [r3, #32]
   2a3e8:	ldrh	r3, [r3, #14]
   2a3ec:	cmp	r3, #3
   2a3f0:	beq	2a414 <flatcc_builder_table_add_union_vector@@Base+0x50>
   2a3f4:	ldr	r3, [pc, #396]	; 2a588 <flatcc_builder_table_add_union_vector@@Base+0x1c4>
   2a3f8:	add	r3, pc, r3
   2a3fc:	mov	r2, #1536	; 0x600
   2a400:	ldr	r1, [pc, #388]	; 2a58c <flatcc_builder_table_add_union_vector@@Base+0x1c8>
   2a404:	add	r1, pc, r1
   2a408:	ldr	r0, [pc, #384]	; 2a590 <flatcc_builder_table_add_union_vector@@Base+0x1cc>
   2a40c:	add	r0, pc, r0
   2a410:	bl	12704 <__assert_fail@plt>
   2a414:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a418:	cmp	r3, #0
   2a41c:	moveq	r3, #1
   2a420:	movne	r3, #0
   2a424:	uxtb	r2, r3
   2a428:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a42c:	cmp	r3, #0
   2a430:	moveq	r3, #1
   2a434:	movne	r3, #0
   2a438:	uxtb	r3, r3
   2a43c:	eor	r3, r3, r2
   2a440:	uxtb	r3, r3
   2a444:	cmp	r3, #0
   2a448:	beq	2a4ac <flatcc_builder_table_add_union_vector@@Base+0xe8>
   2a44c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a450:	cmp	r3, #0
   2a454:	movne	r3, #1
   2a458:	moveq	r3, #0
   2a45c:	uxtb	r2, r3
   2a460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a464:	cmp	r3, #0
   2a468:	moveq	r3, #1
   2a46c:	movne	r3, #0
   2a470:	uxtb	r3, r3
   2a474:	eor	r3, r3, r2
   2a478:	uxtb	r3, r3
   2a47c:	cmp	r3, #0
   2a480:	bne	2a4a4 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2a484:	ldr	r3, [pc, #264]	; 2a594 <flatcc_builder_table_add_union_vector@@Base+0x1d0>
   2a488:	add	r3, pc, r3
   2a48c:	ldr	r2, [pc, #260]	; 2a598 <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   2a490:	ldr	r1, [pc, #260]	; 2a59c <flatcc_builder_table_add_union_vector@@Base+0x1d8>
   2a494:	add	r1, pc, r1
   2a498:	ldr	r0, [pc, #256]	; 2a5a0 <flatcc_builder_table_add_union_vector@@Base+0x1dc>
   2a49c:	add	r0, pc, r0
   2a4a0:	bl	12704 <__assert_fail@plt>
   2a4a4:	mvn	r3, #0
   2a4a8:	b	2a57c <flatcc_builder_table_add_union_vector@@Base+0x1b8>
   2a4ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a4b0:	cmp	r3, #0
   2a4b4:	beq	2a578 <flatcc_builder_table_add_union_vector@@Base+0x1b4>
   2a4b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a4bc:	sub	r3, r3, #1
   2a4c0:	mov	r1, r3
   2a4c4:	ldr	r0, [fp, #-16]
   2a4c8:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   2a4cc:	str	r0, [fp, #-8]
   2a4d0:	ldr	r3, [fp, #-8]
   2a4d4:	cmp	r3, #0
   2a4d8:	bne	2a510 <flatcc_builder_table_add_union_vector@@Base+0x14c>
   2a4dc:	ldr	r3, [fp, #-8]
   2a4e0:	cmp	r3, #0
   2a4e4:	bne	2a508 <flatcc_builder_table_add_union_vector@@Base+0x144>
   2a4e8:	ldr	r3, [pc, #180]	; 2a5a4 <flatcc_builder_table_add_union_vector@@Base+0x1e0>
   2a4ec:	add	r3, pc, r3
   2a4f0:	ldr	r2, [pc, #176]	; 2a5a8 <flatcc_builder_table_add_union_vector@@Base+0x1e4>
   2a4f4:	ldr	r1, [pc, #176]	; 2a5ac <flatcc_builder_table_add_union_vector@@Base+0x1e8>
   2a4f8:	add	r1, pc, r1
   2a4fc:	ldr	r0, [pc, #172]	; 2a5b0 <flatcc_builder_table_add_union_vector@@Base+0x1ec>
   2a500:	add	r0, pc, r0
   2a504:	bl	12704 <__assert_fail@plt>
   2a508:	mvn	r3, #0
   2a50c:	b	2a57c <flatcc_builder_table_add_union_vector@@Base+0x1b8>
   2a510:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2a514:	ldr	r3, [fp, #-8]
   2a518:	str	r2, [r3]
   2a51c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a520:	ldr	r0, [fp, #-16]
   2a524:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   2a528:	str	r0, [fp, #-8]
   2a52c:	ldr	r3, [fp, #-8]
   2a530:	cmp	r3, #0
   2a534:	bne	2a56c <flatcc_builder_table_add_union_vector@@Base+0x1a8>
   2a538:	ldr	r3, [fp, #-8]
   2a53c:	cmp	r3, #0
   2a540:	bne	2a564 <flatcc_builder_table_add_union_vector@@Base+0x1a0>
   2a544:	ldr	r3, [pc, #104]	; 2a5b4 <flatcc_builder_table_add_union_vector@@Base+0x1f0>
   2a548:	add	r3, pc, r3
   2a54c:	ldr	r2, [pc, #100]	; 2a5b8 <flatcc_builder_table_add_union_vector@@Base+0x1f4>
   2a550:	ldr	r1, [pc, #100]	; 2a5bc <flatcc_builder_table_add_union_vector@@Base+0x1f8>
   2a554:	add	r1, pc, r1
   2a558:	ldr	r0, [pc, #96]	; 2a5c0 <flatcc_builder_table_add_union_vector@@Base+0x1fc>
   2a55c:	add	r0, pc, r0
   2a560:	bl	12704 <__assert_fail@plt>
   2a564:	mvn	r3, #0
   2a568:	b	2a57c <flatcc_builder_table_add_union_vector@@Base+0x1b8>
   2a56c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a570:	ldr	r3, [fp, #-8]
   2a574:	str	r2, [r3]
   2a578:	mov	r3, #0
   2a57c:	mov	r0, r3
   2a580:	sub	sp, fp, #4
   2a584:	pop	{fp, pc}
   2a588:	strdeq	fp, [r0], -r4
   2a58c:	ldrdeq	fp, [r0], -r8
   2a590:	muleq	r0, r0, r8
   2a594:	andeq	fp, r0, r4, ror #26
   2a598:	andeq	r0, r0, r1, lsl #12
   2a59c:	andeq	fp, r0, r8, asr #10
   2a5a0:	muleq	r0, ip, r8
   2a5a4:	andeq	fp, r0, r0, lsl #26
   2a5a8:	andeq	r0, r0, r4, lsl #12
   2a5ac:	andeq	fp, r0, r4, ror #9
   2a5b0:	andeq	fp, r0, r0, lsr #16
   2a5b4:	andeq	fp, r0, r4, lsr #25
   2a5b8:	andeq	r0, r0, r8, lsl #12
   2a5bc:	andeq	fp, r0, r8, lsl #9
   2a5c0:	andeq	fp, r0, r4, asr #15

0002a5c4 <flatcc_builder_create_union_vector@@Base>:
   2a5c4:	push	{fp, lr}
   2a5c8:	add	fp, sp, #4
   2a5cc:	sub	sp, sp, #48	; 0x30
   2a5d0:	str	r0, [fp, #-32]	; 0xffffffe0
   2a5d4:	str	r1, [fp, #-36]	; 0xffffffdc
   2a5d8:	str	r2, [fp, #-40]	; 0xffffffd8
   2a5dc:	str	r3, [fp, #-44]	; 0xffffffd4
   2a5e0:	mov	r3, #0
   2a5e4:	str	r3, [fp, #-24]	; 0xffffffe8
   2a5e8:	mov	r3, #0
   2a5ec:	str	r3, [fp, #-20]	; 0xffffffec
   2a5f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a5f4:	bl	289f8 <flatcc_builder_start_offset_vector@@Base>
   2a5f8:	mov	r3, r0
   2a5fc:	cmp	r3, #0
   2a600:	beq	2a61c <flatcc_builder_create_union_vector@@Base+0x58>
   2a604:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a608:	mov	r2, r3
   2a60c:	sub	r3, fp, #24
   2a610:	ldm	r3, {r0, r1}
   2a614:	stm	r2, {r0, r1}
   2a618:	b	2a738 <flatcc_builder_create_union_vector@@Base+0x174>
   2a61c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a620:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a624:	bl	282a4 <flatcc_builder_extend_offset_vector@@Base>
   2a628:	mov	r3, r0
   2a62c:	cmp	r3, #0
   2a630:	bne	2a64c <flatcc_builder_create_union_vector@@Base+0x88>
   2a634:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a638:	mov	r2, r3
   2a63c:	sub	r3, fp, #24
   2a640:	ldm	r3, {r0, r1}
   2a644:	stm	r2, {r0, r1}
   2a648:	b	2a738 <flatcc_builder_create_union_vector@@Base+0x174>
   2a64c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a650:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a654:	bl	25e18 <flatcc_builder_default_alloc@@Base+0x2f0>
   2a658:	str	r0, [fp, #-12]
   2a65c:	ldr	r3, [fp, #-12]
   2a660:	cmp	r3, #0
   2a664:	bne	2a680 <flatcc_builder_create_union_vector@@Base+0xbc>
   2a668:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a66c:	mov	r2, r3
   2a670:	sub	r3, fp, #24
   2a674:	ldm	r3, {r0, r1}
   2a678:	stm	r2, {r0, r1}
   2a67c:	b	2a738 <flatcc_builder_create_union_vector@@Base+0x174>
   2a680:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a684:	bl	2a198 <flatcc_builder_offset_vector_edit@@Base>
   2a688:	str	r0, [fp, #-16]
   2a68c:	mov	r3, #0
   2a690:	str	r3, [fp, #-8]
   2a694:	b	2a6f0 <flatcc_builder_create_union_vector@@Base+0x12c>
   2a698:	ldr	r2, [fp, #-12]
   2a69c:	ldr	r3, [fp, #-8]
   2a6a0:	add	r3, r2, r3
   2a6a4:	ldr	r2, [fp, #-8]
   2a6a8:	lsl	r2, r2, #3
   2a6ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2a6b0:	add	r2, r1, r2
   2a6b4:	ldrb	r2, [r2]
   2a6b8:	strb	r2, [r3]
   2a6bc:	ldr	r3, [fp, #-8]
   2a6c0:	lsl	r3, r3, #2
   2a6c4:	ldr	r2, [fp, #-16]
   2a6c8:	add	r3, r2, r3
   2a6cc:	ldr	r2, [fp, #-8]
   2a6d0:	lsl	r2, r2, #3
   2a6d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2a6d8:	add	r2, r1, r2
   2a6dc:	ldr	r2, [r2, #4]
   2a6e0:	str	r2, [r3]
   2a6e4:	ldr	r3, [fp, #-8]
   2a6e8:	add	r3, r3, #1
   2a6ec:	str	r3, [fp, #-8]
   2a6f0:	ldr	r2, [fp, #-8]
   2a6f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a6f8:	cmp	r2, r3
   2a6fc:	bcc	2a698 <flatcc_builder_create_union_vector@@Base+0xd4>
   2a700:	sub	r0, fp, #24
   2a704:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a708:	str	r3, [sp]
   2a70c:	ldr	r3, [fp, #-16]
   2a710:	ldr	r2, [fp, #-12]
   2a714:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a718:	bl	2a744 <flatcc_builder_create_union_vector_direct@@Base>
   2a71c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a720:	bl	26f58 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   2a724:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a728:	mov	r2, r3
   2a72c:	sub	r3, fp, #24
   2a730:	ldm	r3, {r0, r1}
   2a734:	stm	r2, {r0, r1}
   2a738:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a73c:	sub	sp, fp, #4
   2a740:	pop	{fp, pc}

0002a744 <flatcc_builder_create_union_vector_direct@@Base>:
   2a744:	push	{fp, lr}
   2a748:	add	fp, sp, #4
   2a74c:	sub	sp, sp, #32
   2a750:	str	r0, [fp, #-16]
   2a754:	str	r1, [fp, #-20]	; 0xffffffec
   2a758:	str	r2, [fp, #-24]	; 0xffffffe8
   2a75c:	str	r3, [fp, #-28]	; 0xffffffe4
   2a760:	mov	r3, #0
   2a764:	str	r3, [fp, #-12]
   2a768:	mov	r3, #0
   2a76c:	str	r3, [fp, #-8]
   2a770:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a774:	ldr	r2, [fp, #4]
   2a778:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a77c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a780:	bl	29cc8 <flatcc_builder_vector_edit@@Base+0x28>
   2a784:	mov	r3, r0
   2a788:	str	r3, [fp, #-8]
   2a78c:	ldr	r3, [fp, #-8]
   2a790:	cmp	r3, #0
   2a794:	bne	2a7b0 <flatcc_builder_create_union_vector_direct@@Base+0x6c>
   2a798:	ldr	r3, [fp, #-16]
   2a79c:	mov	r2, r3
   2a7a0:	sub	r3, fp, #12
   2a7a4:	ldm	r3, {r0, r1}
   2a7a8:	stm	r2, {r0, r1}
   2a7ac:	b	2a814 <flatcc_builder_create_union_vector_direct@@Base+0xd0>
   2a7b0:	mvn	r3, #0
   2a7b4:	str	r3, [sp, #4]
   2a7b8:	mov	r3, #1
   2a7bc:	str	r3, [sp]
   2a7c0:	mov	r3, #1
   2a7c4:	ldr	r2, [fp, #4]
   2a7c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a7cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a7d0:	bl	29984 <flatcc_builder_create_vector@@Base>
   2a7d4:	mov	r3, r0
   2a7d8:	str	r3, [fp, #-12]
   2a7dc:	ldr	r3, [fp, #-12]
   2a7e0:	cmp	r3, #0
   2a7e4:	bne	2a800 <flatcc_builder_create_union_vector_direct@@Base+0xbc>
   2a7e8:	ldr	r3, [fp, #-16]
   2a7ec:	mov	r2, r3
   2a7f0:	sub	r3, fp, #12
   2a7f4:	ldm	r3, {r0, r1}
   2a7f8:	stm	r2, {r0, r1}
   2a7fc:	b	2a814 <flatcc_builder_create_union_vector_direct@@Base+0xd0>
   2a800:	ldr	r3, [fp, #-16]
   2a804:	mov	r2, r3
   2a808:	sub	r3, fp, #12
   2a80c:	ldm	r3, {r0, r1}
   2a810:	stm	r2, {r0, r1}
   2a814:	ldr	r0, [fp, #-16]
   2a818:	sub	sp, fp, #4
   2a81c:	pop	{fp, pc}

0002a820 <flatcc_builder_start_union_vector@@Base>:
   2a820:	push	{fp, lr}
   2a824:	add	fp, sp, #4
   2a828:	sub	sp, sp, #8
   2a82c:	str	r0, [fp, #-8]
   2a830:	mov	r1, #4
   2a834:	ldr	r0, [fp, #-8]
   2a838:	bl	26d78 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2a83c:	mov	r3, r0
   2a840:	cmp	r3, #0
   2a844:	beq	2a850 <flatcc_builder_start_union_vector@@Base+0x30>
   2a848:	mvn	r3, #0
   2a84c:	b	2a890 <flatcc_builder_start_union_vector@@Base+0x70>
   2a850:	ldr	r3, [fp, #-8]
   2a854:	ldr	r3, [r3, #32]
   2a858:	mov	r2, #8
   2a85c:	str	r2, [r3, #16]
   2a860:	ldr	r3, [fp, #-8]
   2a864:	ldr	r3, [r3, #32]
   2a868:	mov	r2, #0
   2a86c:	str	r2, [r3, #20]
   2a870:	ldr	r3, [fp, #-8]
   2a874:	ldr	r3, [r3, #32]
   2a878:	mov	r2, #7
   2a87c:	strh	r2, [r3, #14]
   2a880:	mvn	r1, #3
   2a884:	ldr	r0, [fp, #-8]
   2a888:	bl	25cf0 <flatcc_builder_default_alloc@@Base+0x1c8>
   2a88c:	mov	r3, #0
   2a890:	mov	r0, r3
   2a894:	sub	sp, fp, #4
   2a898:	pop	{fp, pc}

0002a89c <flatcc_builder_end_union_vector@@Base>:
   2a89c:	push	{fp, lr}
   2a8a0:	add	fp, sp, #4
   2a8a4:	sub	sp, sp, #48	; 0x30
   2a8a8:	str	r0, [fp, #-40]	; 0xffffffd8
   2a8ac:	str	r1, [fp, #-44]	; 0xffffffd4
   2a8b0:	mov	r3, #0
   2a8b4:	str	r3, [fp, #-32]	; 0xffffffe0
   2a8b8:	mov	r3, #0
   2a8bc:	str	r3, [fp, #-28]	; 0xffffffe4
   2a8c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a8c4:	ldr	r3, [r3, #32]
   2a8c8:	ldrh	r3, [r3, #14]
   2a8cc:	cmp	r3, #7
   2a8d0:	beq	2a8f4 <flatcc_builder_end_union_vector@@Base+0x58>
   2a8d4:	ldr	r3, [pc, #320]	; 2aa1c <flatcc_builder_end_union_vector@@Base+0x180>
   2a8d8:	add	r3, pc, r3
   2a8dc:	ldr	r2, [pc, #316]	; 2aa20 <flatcc_builder_end_union_vector@@Base+0x184>
   2a8e0:	ldr	r1, [pc, #316]	; 2aa24 <flatcc_builder_end_union_vector@@Base+0x188>
   2a8e4:	add	r1, pc, r1
   2a8e8:	ldr	r0, [pc, #312]	; 2aa28 <flatcc_builder_end_union_vector@@Base+0x18c>
   2a8ec:	add	r0, pc, r0
   2a8f0:	bl	12704 <__assert_fail@plt>
   2a8f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a8f8:	bl	2aa54 <flatcc_builder_union_vector_count@@Base>
   2a8fc:	str	r0, [fp, #-12]
   2a900:	ldr	r2, [fp, #-12]
   2a904:	mov	r3, r2
   2a908:	lsl	r3, r3, #2
   2a90c:	add	r3, r3, r2
   2a910:	mov	r1, r3
   2a914:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a918:	bl	25e18 <flatcc_builder_default_alloc@@Base+0x2f0>
   2a91c:	str	r0, [fp, #-16]
   2a920:	ldr	r3, [fp, #-16]
   2a924:	cmp	r3, #0
   2a928:	bne	2a944 <flatcc_builder_end_union_vector@@Base+0xa8>
   2a92c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a930:	mov	r2, r3
   2a934:	sub	r3, fp, #32
   2a938:	ldm	r3, {r0, r1}
   2a93c:	stm	r2, {r0, r1}
   2a940:	b	2aa10 <flatcc_builder_end_union_vector@@Base+0x174>
   2a944:	ldr	r3, [fp, #-12]
   2a948:	lsl	r3, r3, #2
   2a94c:	ldr	r2, [fp, #-16]
   2a950:	add	r3, r2, r3
   2a954:	str	r3, [fp, #-20]	; 0xffffffec
   2a958:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a95c:	bl	2aa2c <flatcc_builder_union_vector_edit@@Base>
   2a960:	str	r0, [fp, #-24]	; 0xffffffe8
   2a964:	mov	r3, #0
   2a968:	str	r3, [fp, #-8]
   2a96c:	b	2a9c8 <flatcc_builder_end_union_vector@@Base+0x12c>
   2a970:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a974:	ldr	r3, [fp, #-8]
   2a978:	add	r3, r2, r3
   2a97c:	ldr	r2, [fp, #-8]
   2a980:	lsl	r2, r2, #3
   2a984:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a988:	add	r2, r1, r2
   2a98c:	ldrb	r2, [r2]
   2a990:	strb	r2, [r3]
   2a994:	ldr	r3, [fp, #-8]
   2a998:	lsl	r3, r3, #2
   2a99c:	ldr	r2, [fp, #-16]
   2a9a0:	add	r3, r2, r3
   2a9a4:	ldr	r2, [fp, #-8]
   2a9a8:	lsl	r2, r2, #3
   2a9ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a9b0:	add	r2, r1, r2
   2a9b4:	ldr	r2, [r2, #4]
   2a9b8:	str	r2, [r3]
   2a9bc:	ldr	r3, [fp, #-8]
   2a9c0:	add	r3, r3, #1
   2a9c4:	str	r3, [fp, #-8]
   2a9c8:	ldr	r2, [fp, #-8]
   2a9cc:	ldr	r3, [fp, #-12]
   2a9d0:	cmp	r2, r3
   2a9d4:	bcc	2a970 <flatcc_builder_end_union_vector@@Base+0xd4>
   2a9d8:	sub	r0, fp, #32
   2a9dc:	ldr	r3, [fp, #-12]
   2a9e0:	str	r3, [sp]
   2a9e4:	ldr	r3, [fp, #-16]
   2a9e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a9ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a9f0:	bl	2a744 <flatcc_builder_create_union_vector_direct@@Base>
   2a9f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a9f8:	bl	26f58 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   2a9fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2aa00:	mov	r2, r3
   2aa04:	sub	r3, fp, #32
   2aa08:	ldm	r3, {r0, r1}
   2aa0c:	stm	r2, {r0, r1}
   2aa10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2aa14:	sub	sp, fp, #4
   2aa18:	pop	{fp, pc}
   2aa1c:	andeq	fp, r0, ip, lsr r9
   2aa20:	andeq	r0, r0, r1, asr r6
   2aa24:	strdeq	fp, [r0], -r8
   2aa28:	andeq	fp, r0, r4, ror r4

0002aa2c <flatcc_builder_union_vector_edit@@Base>:
   2aa2c:	push	{fp}		; (str fp, [sp, #-4]!)
   2aa30:	add	fp, sp, #0
   2aa34:	sub	sp, sp, #12
   2aa38:	str	r0, [fp, #-8]
   2aa3c:	ldr	r3, [fp, #-8]
   2aa40:	ldr	r3, [r3, #16]
   2aa44:	mov	r0, r3
   2aa48:	add	sp, fp, #0
   2aa4c:	pop	{fp}		; (ldr fp, [sp], #4)
   2aa50:	bx	lr

0002aa54 <flatcc_builder_union_vector_count@@Base>:
   2aa54:	push	{fp}		; (str fp, [sp, #-4]!)
   2aa58:	add	fp, sp, #0
   2aa5c:	sub	sp, sp, #12
   2aa60:	str	r0, [fp, #-8]
   2aa64:	ldr	r3, [fp, #-8]
   2aa68:	ldr	r3, [r3, #32]
   2aa6c:	ldr	r3, [r3, #20]
   2aa70:	mov	r0, r3
   2aa74:	add	sp, fp, #0
   2aa78:	pop	{fp}		; (ldr fp, [sp], #4)
   2aa7c:	bx	lr

0002aa80 <flatcc_builder_extend_union_vector@@Base>:
   2aa80:	push	{fp, lr}
   2aa84:	add	fp, sp, #4
   2aa88:	sub	sp, sp, #8
   2aa8c:	str	r0, [fp, #-8]
   2aa90:	str	r1, [fp, #-12]
   2aa94:	mvn	r2, #-536870912	; 0xe0000000
   2aa98:	ldr	r1, [fp, #-12]
   2aa9c:	ldr	r0, [fp, #-8]
   2aaa0:	bl	27f90 <flatcc_builder_end_struct@@Base+0xa0>
   2aaa4:	mov	r3, r0
   2aaa8:	cmp	r3, #0
   2aaac:	beq	2aab8 <flatcc_builder_extend_union_vector@@Base+0x38>
   2aab0:	mov	r3, #0
   2aab4:	b	2aad0 <flatcc_builder_extend_union_vector@@Base+0x50>
   2aab8:	ldr	r3, [fp, #-12]
   2aabc:	lsl	r3, r3, #3
   2aac0:	mov	r1, r3
   2aac4:	ldr	r0, [fp, #-8]
   2aac8:	bl	25e18 <flatcc_builder_default_alloc@@Base+0x2f0>
   2aacc:	mov	r3, r0
   2aad0:	mov	r0, r3
   2aad4:	sub	sp, fp, #4
   2aad8:	pop	{fp, pc}

0002aadc <flatcc_builder_truncate_union_vector@@Base>:
   2aadc:	push	{fp, lr}
   2aae0:	add	fp, sp, #4
   2aae4:	sub	sp, sp, #8
   2aae8:	str	r0, [fp, #-8]
   2aaec:	str	r1, [fp, #-12]
   2aaf0:	ldr	r3, [fp, #-8]
   2aaf4:	ldr	r3, [r3, #32]
   2aaf8:	ldrh	r3, [r3, #14]
   2aafc:	cmp	r3, #7
   2ab00:	beq	2ab24 <flatcc_builder_truncate_union_vector@@Base+0x48>
   2ab04:	ldr	r3, [pc, #192]	; 2abcc <flatcc_builder_truncate_union_vector@@Base+0xf0>
   2ab08:	add	r3, pc, r3
   2ab0c:	ldr	r2, [pc, #188]	; 2abd0 <flatcc_builder_truncate_union_vector@@Base+0xf4>
   2ab10:	ldr	r1, [pc, #188]	; 2abd4 <flatcc_builder_truncate_union_vector@@Base+0xf8>
   2ab14:	add	r1, pc, r1
   2ab18:	ldr	r0, [pc, #184]	; 2abd8 <flatcc_builder_truncate_union_vector@@Base+0xfc>
   2ab1c:	add	r0, pc, r0
   2ab20:	bl	12704 <__assert_fail@plt>
   2ab24:	ldr	r3, [fp, #-8]
   2ab28:	ldr	r3, [r3, #32]
   2ab2c:	ldr	r2, [r3, #20]
   2ab30:	ldr	r3, [fp, #-12]
   2ab34:	cmp	r2, r3
   2ab38:	bcs	2ab7c <flatcc_builder_truncate_union_vector@@Base+0xa0>
   2ab3c:	ldr	r3, [fp, #-8]
   2ab40:	ldr	r3, [r3, #32]
   2ab44:	ldr	r2, [r3, #20]
   2ab48:	ldr	r3, [fp, #-12]
   2ab4c:	cmp	r2, r3
   2ab50:	bcs	2ab74 <flatcc_builder_truncate_union_vector@@Base+0x98>
   2ab54:	ldr	r3, [pc, #128]	; 2abdc <flatcc_builder_truncate_union_vector@@Base+0x100>
   2ab58:	add	r3, pc, r3
   2ab5c:	ldr	r2, [pc, #124]	; 2abe0 <flatcc_builder_truncate_union_vector@@Base+0x104>
   2ab60:	ldr	r1, [pc, #124]	; 2abe4 <flatcc_builder_truncate_union_vector@@Base+0x108>
   2ab64:	add	r1, pc, r1
   2ab68:	ldr	r0, [pc, #120]	; 2abe8 <flatcc_builder_truncate_union_vector@@Base+0x10c>
   2ab6c:	add	r0, pc, r0
   2ab70:	bl	12704 <__assert_fail@plt>
   2ab74:	mvn	r3, #0
   2ab78:	b	2abc0 <flatcc_builder_truncate_union_vector@@Base+0xe4>
   2ab7c:	ldr	r3, [fp, #-8]
   2ab80:	ldr	r3, [r3, #32]
   2ab84:	ldr	r2, [fp, #-8]
   2ab88:	ldr	r2, [r2, #32]
   2ab8c:	ldr	r1, [r2, #20]
   2ab90:	ldr	r2, [fp, #-12]
   2ab94:	sub	r2, r1, r2
   2ab98:	str	r2, [r3, #20]
   2ab9c:	ldr	r3, [fp, #-8]
   2aba0:	ldr	r3, [r3, #32]
   2aba4:	ldr	r3, [r3, #16]
   2aba8:	ldr	r2, [fp, #-12]
   2abac:	mul	r3, r2, r3
   2abb0:	mov	r1, r3
   2abb4:	ldr	r0, [fp, #-8]
   2abb8:	bl	25eb4 <flatcc_builder_default_alloc@@Base+0x38c>
   2abbc:	mov	r3, #0
   2abc0:	mov	r0, r3
   2abc4:	sub	sp, fp, #4
   2abc8:	pop	{fp, pc}
   2abcc:	andeq	fp, r0, ip, lsr #14
   2abd0:	andeq	r0, r0, r1, lsl #13
   2abd4:	andeq	sl, r0, r8, asr #29
   2abd8:	andeq	fp, r0, r4, asr #4
   2abdc:	ldrdeq	fp, [r0], -ip
   2abe0:	andeq	r0, r0, r2, lsl #13
   2abe4:	andeq	sl, r0, r8, ror lr
   2abe8:	andeq	fp, r0, r4, lsr #1

0002abec <flatcc_builder_union_vector_push@@Base>:
   2abec:	push	{fp, lr}
   2abf0:	add	fp, sp, #4
   2abf4:	sub	sp, sp, #24
   2abf8:	str	r0, [fp, #-16]
   2abfc:	sub	r3, fp, #24
   2ac00:	stm	r3, {r1, r2}
   2ac04:	ldr	r3, [fp, #-16]
   2ac08:	ldr	r3, [r3, #32]
   2ac0c:	ldrh	r3, [r3, #14]
   2ac10:	cmp	r3, #7
   2ac14:	beq	2ac38 <flatcc_builder_union_vector_push@@Base+0x4c>
   2ac18:	ldr	r3, [pc, #152]	; 2acb8 <flatcc_builder_union_vector_push@@Base+0xcc>
   2ac1c:	add	r3, pc, r3
   2ac20:	ldr	r2, [pc, #148]	; 2acbc <flatcc_builder_union_vector_push@@Base+0xd0>
   2ac24:	ldr	r1, [pc, #148]	; 2acc0 <flatcc_builder_union_vector_push@@Base+0xd4>
   2ac28:	add	r1, pc, r1
   2ac2c:	ldr	r0, [pc, #144]	; 2acc4 <flatcc_builder_union_vector_push@@Base+0xd8>
   2ac30:	add	r0, pc, r0
   2ac34:	bl	12704 <__assert_fail@plt>
   2ac38:	ldr	r3, [fp, #-16]
   2ac3c:	ldr	r3, [r3, #32]
   2ac40:	ldr	r3, [r3, #20]
   2ac44:	cmn	r3, #-536870911	; 0xe0000001
   2ac48:	bne	2ac54 <flatcc_builder_union_vector_push@@Base+0x68>
   2ac4c:	mov	r3, #0
   2ac50:	b	2acac <flatcc_builder_union_vector_push@@Base+0xc0>
   2ac54:	ldr	r3, [fp, #-16]
   2ac58:	ldr	r3, [r3, #32]
   2ac5c:	ldr	r2, [fp, #-16]
   2ac60:	ldr	r2, [r2, #32]
   2ac64:	ldr	r2, [r2, #20]
   2ac68:	add	r2, r2, #1
   2ac6c:	str	r2, [r3, #20]
   2ac70:	mov	r1, #8
   2ac74:	ldr	r0, [fp, #-16]
   2ac78:	bl	25e18 <flatcc_builder_default_alloc@@Base+0x2f0>
   2ac7c:	str	r0, [fp, #-8]
   2ac80:	ldr	r3, [fp, #-8]
   2ac84:	cmp	r3, #0
   2ac88:	bne	2ac94 <flatcc_builder_union_vector_push@@Base+0xa8>
   2ac8c:	mov	r3, #0
   2ac90:	b	2acac <flatcc_builder_union_vector_push@@Base+0xc0>
   2ac94:	ldr	r3, [fp, #-8]
   2ac98:	mov	r2, r3
   2ac9c:	sub	r3, fp, #24
   2aca0:	ldm	r3, {r0, r1}
   2aca4:	stm	r2, {r0, r1}
   2aca8:	ldr	r3, [fp, #-8]
   2acac:	mov	r0, r3
   2acb0:	sub	sp, fp, #4
   2acb4:	pop	{fp, pc}
   2acb8:	andeq	fp, r0, r0, asr #12
   2acbc:	andeq	r0, r0, sp, lsl #13
   2acc0:			; <UNDEFINED> instruction: 0x0000adb4
   2acc4:	andeq	fp, r0, r0, lsr r1

0002acc8 <flatcc_builder_append_union_vector@@Base>:
   2acc8:	push	{fp, lr}
   2accc:	add	fp, sp, #4
   2acd0:	sub	sp, sp, #16
   2acd4:	str	r0, [fp, #-8]
   2acd8:	str	r1, [fp, #-12]
   2acdc:	str	r2, [fp, #-16]
   2ace0:	ldr	r3, [fp, #-8]
   2ace4:	ldr	r3, [r3, #32]
   2ace8:	ldrh	r3, [r3, #14]
   2acec:	cmp	r3, #7
   2acf0:	beq	2ad14 <flatcc_builder_append_union_vector@@Base+0x4c>
   2acf4:	ldr	r3, [pc, #100]	; 2ad60 <flatcc_builder_append_union_vector@@Base+0x98>
   2acf8:	add	r3, pc, r3
   2acfc:	ldr	r2, [pc, #96]	; 2ad64 <flatcc_builder_append_union_vector@@Base+0x9c>
   2ad00:	ldr	r1, [pc, #96]	; 2ad68 <flatcc_builder_append_union_vector@@Base+0xa0>
   2ad04:	add	r1, pc, r1
   2ad08:	ldr	r0, [pc, #92]	; 2ad6c <flatcc_builder_append_union_vector@@Base+0xa4>
   2ad0c:	add	r0, pc, r0
   2ad10:	bl	12704 <__assert_fail@plt>
   2ad14:	mvn	r2, #-536870912	; 0xe0000000
   2ad18:	ldr	r1, [fp, #-16]
   2ad1c:	ldr	r0, [fp, #-8]
   2ad20:	bl	27f90 <flatcc_builder_end_struct@@Base+0xa0>
   2ad24:	mov	r3, r0
   2ad28:	cmp	r3, #0
   2ad2c:	beq	2ad38 <flatcc_builder_append_union_vector@@Base+0x70>
   2ad30:	mov	r3, #0
   2ad34:	b	2ad54 <flatcc_builder_append_union_vector@@Base+0x8c>
   2ad38:	ldr	r3, [fp, #-16]
   2ad3c:	lsl	r3, r3, #3
   2ad40:	mov	r2, r3
   2ad44:	ldr	r1, [fp, #-12]
   2ad48:	ldr	r0, [fp, #-8]
   2ad4c:	bl	25f10 <flatcc_builder_default_alloc@@Base+0x3e8>
   2ad50:	mov	r3, r0
   2ad54:	mov	r0, r3
   2ad58:	sub	sp, fp, #4
   2ad5c:	pop	{fp, pc}
   2ad60:	andeq	fp, r0, r8, lsl #11
   2ad64:	muleq	r0, ip, r6
   2ad68:	ldrdeq	sl, [r0], -r8
   2ad6c:	andeq	fp, r0, r4, asr r0

0002ad70 <flatcc_builder_create_string@@Base>:
   2ad70:	push	{r4, fp, lr}
   2ad74:	add	fp, sp, #8
   2ad78:	sub	sp, sp, #100	; 0x64
   2ad7c:	str	r0, [fp, #-96]	; 0xffffffa0
   2ad80:	str	r1, [fp, #-100]	; 0xffffff9c
   2ad84:	str	r2, [fp, #-104]	; 0xffffff98
   2ad88:	ldr	r4, [pc, #376]	; 2af08 <flatcc_builder_create_string@@Base+0x198>
   2ad8c:	add	r4, pc, r4
   2ad90:	ldr	r0, [fp, #-104]	; 0xffffff98
   2ad94:	bl	259e4 <main@@Base+0x148>
   2ad98:	mov	r3, r0
   2ad9c:	str	r3, [fp, #-20]	; 0xffffffec
   2ada0:	ldr	r3, [fp, #-104]	; 0xffffff98
   2ada4:	add	r3, r3, #1
   2ada8:	mov	r2, #4
   2adac:	mov	r1, r3
   2adb0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2adb4:	bl	27020 <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   2adb8:	mov	r3, r0
   2adbc:	add	r3, r3, #1
   2adc0:	str	r3, [fp, #-16]
   2adc4:	mov	r3, #0
   2adc8:	str	r3, [fp, #-92]	; 0xffffffa4
   2adcc:	mov	r3, #0
   2add0:	str	r3, [fp, #-88]	; 0xffffffa8
   2add4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2add8:	add	r3, r3, #4
   2addc:	str	r3, [fp, #-92]	; 0xffffffa4
   2ade0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2ade4:	add	r3, r3, #1
   2ade8:	lsl	r3, r3, #3
   2adec:	sub	r2, fp, #12
   2adf0:	add	r3, r2, r3
   2adf4:	sub	r2, fp, #20
   2adf8:	str	r2, [r3, #-80]	; 0xffffffb0
   2adfc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2ae00:	add	r3, r3, #1
   2ae04:	lsl	r3, r3, #3
   2ae08:	sub	r2, fp, #12
   2ae0c:	add	r3, r2, r3
   2ae10:	mov	r2, #4
   2ae14:	str	r2, [r3, #-76]	; 0xffffffb4
   2ae18:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2ae1c:	add	r3, r3, #1
   2ae20:	str	r3, [fp, #-88]	; 0xffffffa8
   2ae24:	ldr	r3, [fp, #-104]	; 0xffffff98
   2ae28:	cmp	r3, #0
   2ae2c:	beq	2ae84 <flatcc_builder_create_string@@Base+0x114>
   2ae30:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2ae34:	ldr	r3, [fp, #-104]	; 0xffffff98
   2ae38:	add	r3, r2, r3
   2ae3c:	str	r3, [fp, #-92]	; 0xffffffa4
   2ae40:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2ae44:	add	r3, r3, #1
   2ae48:	lsl	r3, r3, #3
   2ae4c:	sub	r2, fp, #12
   2ae50:	add	r3, r2, r3
   2ae54:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2ae58:	str	r2, [r3, #-80]	; 0xffffffb0
   2ae5c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2ae60:	add	r3, r3, #1
   2ae64:	lsl	r3, r3, #3
   2ae68:	sub	r2, fp, #12
   2ae6c:	add	r3, r2, r3
   2ae70:	ldr	r2, [fp, #-104]	; 0xffffff98
   2ae74:	str	r2, [r3, #-76]	; 0xffffffb4
   2ae78:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2ae7c:	add	r3, r3, #1
   2ae80:	str	r3, [fp, #-88]	; 0xffffffa8
   2ae84:	ldr	r3, [fp, #-16]
   2ae88:	cmp	r3, #0
   2ae8c:	beq	2aee8 <flatcc_builder_create_string@@Base+0x178>
   2ae90:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2ae94:	ldr	r3, [fp, #-16]
   2ae98:	add	r3, r2, r3
   2ae9c:	str	r3, [fp, #-92]	; 0xffffffa4
   2aea0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2aea4:	add	r3, r3, #1
   2aea8:	lsl	r3, r3, #3
   2aeac:	sub	r2, fp, #12
   2aeb0:	add	r3, r2, r3
   2aeb4:	ldr	r2, [pc, #80]	; 2af0c <flatcc_builder_create_string@@Base+0x19c>
   2aeb8:	ldr	r2, [r4, r2]
   2aebc:	str	r2, [r3, #-80]	; 0xffffffb0
   2aec0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2aec4:	add	r3, r3, #1
   2aec8:	lsl	r3, r3, #3
   2aecc:	sub	r2, fp, #12
   2aed0:	add	r3, r2, r3
   2aed4:	ldr	r2, [fp, #-16]
   2aed8:	str	r2, [r3, #-76]	; 0xffffffb4
   2aedc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2aee0:	add	r3, r3, #1
   2aee4:	str	r3, [fp, #-88]	; 0xffffffa8
   2aee8:	sub	r3, fp, #92	; 0x5c
   2aeec:	mov	r1, r3
   2aef0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2aef4:	bl	270a8 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   2aef8:	mov	r3, r0
   2aefc:	mov	r0, r3
   2af00:	sub	sp, fp, #8
   2af04:	pop	{r4, fp, pc}
   2af08:	andeq	sp, r1, ip, ror #4
   2af0c:	andeq	r0, r0, r4, ror r0

0002af10 <flatcc_builder_create_string_str@@Base>:
   2af10:	push	{fp, lr}
   2af14:	add	fp, sp, #4
   2af18:	sub	sp, sp, #8
   2af1c:	str	r0, [fp, #-8]
   2af20:	str	r1, [fp, #-12]
   2af24:	ldr	r0, [fp, #-12]
   2af28:	bl	12680 <strlen@plt>
   2af2c:	mov	r3, r0
   2af30:	mov	r2, r3
   2af34:	ldr	r1, [fp, #-12]
   2af38:	ldr	r0, [fp, #-8]
   2af3c:	bl	2ad70 <flatcc_builder_create_string@@Base>
   2af40:	mov	r3, r0
   2af44:	mov	r0, r3
   2af48:	sub	sp, fp, #4
   2af4c:	pop	{fp, pc}

0002af50 <flatcc_builder_create_string_strn@@Base>:
   2af50:	push	{fp, lr}
   2af54:	add	fp, sp, #4
   2af58:	sub	sp, sp, #16
   2af5c:	str	r0, [fp, #-8]
   2af60:	str	r1, [fp, #-12]
   2af64:	str	r2, [fp, #-16]
   2af68:	ldr	r1, [fp, #-16]
   2af6c:	ldr	r0, [fp, #-12]
   2af70:	bl	25ad4 <main@@Base+0x238>
   2af74:	mov	r3, r0
   2af78:	mov	r2, r3
   2af7c:	ldr	r1, [fp, #-12]
   2af80:	ldr	r0, [fp, #-8]
   2af84:	bl	2ad70 <flatcc_builder_create_string@@Base>
   2af88:	mov	r3, r0
   2af8c:	mov	r0, r3
   2af90:	sub	sp, fp, #4
   2af94:	pop	{fp, pc}

0002af98 <flatcc_builder_end_string@@Base>:
   2af98:	push	{fp, lr}
   2af9c:	add	fp, sp, #4
   2afa0:	sub	sp, sp, #16
   2afa4:	str	r0, [fp, #-16]
   2afa8:	ldr	r3, [fp, #-16]
   2afac:	ldr	r3, [r3, #32]
   2afb0:	ldrh	r3, [r3, #14]
   2afb4:	cmp	r3, #6
   2afb8:	beq	2afdc <flatcc_builder_end_string@@Base+0x44>
   2afbc:	ldr	r3, [pc, #160]	; 2b064 <flatcc_builder_end_string@@Base+0xcc>
   2afc0:	add	r3, pc, r3
   2afc4:	ldr	r2, [pc, #156]	; 2b068 <flatcc_builder_end_string@@Base+0xd0>
   2afc8:	ldr	r1, [pc, #156]	; 2b06c <flatcc_builder_end_string@@Base+0xd4>
   2afcc:	add	r1, pc, r1
   2afd0:	ldr	r0, [pc, #152]	; 2b070 <flatcc_builder_end_string@@Base+0xd8>
   2afd4:	add	r0, pc, r0
   2afd8:	bl	12704 <__assert_fail@plt>
   2afdc:	ldr	r3, [fp, #-16]
   2afe0:	ldr	r3, [r3, #32]
   2afe4:	ldr	r2, [r3, #20]
   2afe8:	ldr	r3, [fp, #-16]
   2afec:	ldr	r3, [r3, #20]
   2aff0:	cmp	r2, r3
   2aff4:	beq	2b018 <flatcc_builder_end_string@@Base+0x80>
   2aff8:	ldr	r3, [pc, #116]	; 2b074 <flatcc_builder_end_string@@Base+0xdc>
   2affc:	add	r3, pc, r3
   2b000:	ldr	r2, [pc, #112]	; 2b078 <flatcc_builder_end_string@@Base+0xe0>
   2b004:	ldr	r1, [pc, #112]	; 2b07c <flatcc_builder_end_string@@Base+0xe4>
   2b008:	add	r1, pc, r1
   2b00c:	ldr	r0, [pc, #108]	; 2b080 <flatcc_builder_end_string@@Base+0xe8>
   2b010:	add	r0, pc, r0
   2b014:	bl	12704 <__assert_fail@plt>
   2b018:	ldr	r3, [fp, #-16]
   2b01c:	ldr	r1, [r3, #16]
   2b020:	ldr	r3, [fp, #-16]
   2b024:	ldr	r3, [r3, #20]
   2b028:	mov	r2, r3
   2b02c:	ldr	r0, [fp, #-16]
   2b030:	bl	2ad70 <flatcc_builder_create_string@@Base>
   2b034:	str	r0, [fp, #-8]
   2b038:	ldr	r3, [fp, #-8]
   2b03c:	cmp	r3, #0
   2b040:	bne	2b04c <flatcc_builder_end_string@@Base+0xb4>
   2b044:	mov	r3, #0
   2b048:	b	2b058 <flatcc_builder_end_string@@Base+0xc0>
   2b04c:	ldr	r0, [fp, #-16]
   2b050:	bl	26f58 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   2b054:	ldr	r3, [fp, #-8]
   2b058:	mov	r0, r3
   2b05c:	sub	sp, fp, #4
   2b060:	pop	{fp, pc}
   2b064:	andeq	fp, r0, r4, ror #5
   2b068:	andeq	r0, r0, r4, asr #13
   2b06c:	andeq	sl, r0, r0, lsl sl
   2b070:	andeq	sl, r0, ip, ror #23
   2b074:	andeq	fp, r0, r8, lsr #5
   2b078:	andeq	r0, r0, r5, asr #13
   2b07c:	ldrdeq	sl, [r0], -r4
   2b080:	andeq	sl, r0, r4, lsl #27

0002b084 <flatcc_builder_string_edit@@Base>:
   2b084:	push	{fp}		; (str fp, [sp, #-4]!)
   2b088:	add	fp, sp, #0
   2b08c:	sub	sp, sp, #12
   2b090:	str	r0, [fp, #-8]
   2b094:	ldr	r3, [fp, #-8]
   2b098:	ldr	r3, [r3, #16]
   2b09c:	mov	r0, r3
   2b0a0:	add	sp, fp, #0
   2b0a4:	pop	{fp}		; (ldr fp, [sp], #4)
   2b0a8:	bx	lr

0002b0ac <flatcc_builder_string_len@@Base>:
   2b0ac:	push	{fp}		; (str fp, [sp, #-4]!)
   2b0b0:	add	fp, sp, #0
   2b0b4:	sub	sp, sp, #12
   2b0b8:	str	r0, [fp, #-8]
   2b0bc:	ldr	r3, [fp, #-8]
   2b0c0:	ldr	r3, [r3, #32]
   2b0c4:	ldr	r3, [r3, #20]
   2b0c8:	mov	r0, r3
   2b0cc:	add	sp, fp, #0
   2b0d0:	pop	{fp}		; (ldr fp, [sp], #4)
   2b0d4:	bx	lr

0002b0d8 <flatcc_builder_table_add@@Base>:
   2b0d8:	push	{fp, lr}
   2b0dc:	add	fp, sp, #4
   2b0e0:	sub	sp, sp, #16
   2b0e4:	str	r0, [fp, #-8]
   2b0e8:	str	r1, [fp, #-12]
   2b0ec:	str	r2, [fp, #-16]
   2b0f0:	strh	r3, [fp, #-18]	; 0xffffffee
   2b0f4:	ldr	r3, [fp, #-8]
   2b0f8:	ldr	r3, [r3, #32]
   2b0fc:	ldrh	r3, [r3, #14]
   2b100:	cmp	r3, #3
   2b104:	beq	2b128 <flatcc_builder_table_add@@Base+0x50>
   2b108:	ldr	r3, [pc, #268]	; 2b21c <flatcc_builder_table_add@@Base+0x144>
   2b10c:	add	r3, pc, r3
   2b110:	ldr	r2, [pc, #264]	; 2b220 <flatcc_builder_table_add@@Base+0x148>
   2b114:	ldr	r1, [pc, #264]	; 2b224 <flatcc_builder_table_add@@Base+0x14c>
   2b118:	add	r1, pc, r1
   2b11c:	ldr	r0, [pc, #260]	; 2b228 <flatcc_builder_table_add@@Base+0x150>
   2b120:	add	r0, pc, r0
   2b124:	bl	12704 <__assert_fail@plt>
   2b128:	ldr	r3, [fp, #-12]
   2b12c:	cmp	r3, #0
   2b130:	blt	2b144 <flatcc_builder_table_add@@Base+0x6c>
   2b134:	ldr	r3, [fp, #-12]
   2b138:	ldr	r2, [pc, #236]	; 2b22c <flatcc_builder_table_add@@Base+0x154>
   2b13c:	cmp	r3, r2
   2b140:	ble	2b164 <flatcc_builder_table_add@@Base+0x8c>
   2b144:	ldr	r3, [pc, #228]	; 2b230 <flatcc_builder_table_add@@Base+0x158>
   2b148:	add	r3, pc, r3
   2b14c:	ldr	r2, [pc, #224]	; 2b234 <flatcc_builder_table_add@@Base+0x15c>
   2b150:	ldr	r1, [pc, #224]	; 2b238 <flatcc_builder_table_add@@Base+0x160>
   2b154:	add	r1, pc, r1
   2b158:	ldr	r0, [pc, #220]	; 2b23c <flatcc_builder_table_add@@Base+0x164>
   2b15c:	add	r0, pc, r0
   2b160:	bl	12704 <__assert_fail@plt>
   2b164:	ldr	r3, [fp, #-8]
   2b168:	ldrh	r3, [r3, #130]	; 0x82
   2b16c:	ldrh	r2, [fp, #-18]	; 0xffffffee
   2b170:	cmp	r2, r3
   2b174:	bls	2b184 <flatcc_builder_table_add@@Base+0xac>
   2b178:	ldr	r3, [fp, #-8]
   2b17c:	ldrh	r2, [fp, #-18]	; 0xffffffee
   2b180:	strh	r2, [r3, #130]	; 0x82
   2b184:	ldr	r3, [fp, #-8]
   2b188:	ldr	r2, [r3, #4]
   2b18c:	ldr	r3, [fp, #-12]
   2b190:	lsl	r3, r3, #1
   2b194:	add	r3, r2, r3
   2b198:	ldrh	r3, [r3]
   2b19c:	cmp	r3, #0
   2b1a0:	beq	2b1c4 <flatcc_builder_table_add@@Base+0xec>
   2b1a4:	ldr	r3, [pc, #148]	; 2b240 <flatcc_builder_table_add@@Base+0x168>
   2b1a8:	add	r3, pc, r3
   2b1ac:	ldr	r2, [pc, #144]	; 2b244 <flatcc_builder_table_add@@Base+0x16c>
   2b1b0:	ldr	r1, [pc, #144]	; 2b248 <flatcc_builder_table_add@@Base+0x170>
   2b1b4:	add	r1, pc, r1
   2b1b8:	ldr	r0, [pc, #140]	; 2b24c <flatcc_builder_table_add@@Base+0x174>
   2b1bc:	add	r0, pc, r0
   2b1c0:	bl	12704 <__assert_fail@plt>
   2b1c4:	ldr	r3, [fp, #-8]
   2b1c8:	ldr	r2, [r3, #12]
   2b1cc:	ldr	r3, [fp, #-12]
   2b1d0:	eor	r3, r3, r2
   2b1d4:	ldr	r2, [pc, #116]	; 2b250 <flatcc_builder_table_add@@Base+0x178>
   2b1d8:	mul	r2, r2, r3
   2b1dc:	ldr	r3, [fp, #-16]
   2b1e0:	eor	r3, r3, r2
   2b1e4:	ldr	r2, [pc, #100]	; 2b250 <flatcc_builder_table_add@@Base+0x178>
   2b1e8:	mul	r2, r2, r3
   2b1ec:	ldr	r3, [fp, #-8]
   2b1f0:	str	r2, [r3, #12]
   2b1f4:	ldr	r3, [fp, #-12]
   2b1f8:	uxth	r3, r3
   2b1fc:	ldrh	r2, [fp, #-18]	; 0xffffffee
   2b200:	ldr	r1, [fp, #-16]
   2b204:	ldr	r0, [fp, #-8]
   2b208:	bl	25f6c <flatcc_builder_default_alloc@@Base+0x444>
   2b20c:	mov	r3, r0
   2b210:	mov	r0, r3
   2b214:	sub	sp, fp, #4
   2b218:	pop	{fp, pc}
   2b21c:			; <UNDEFINED> instruction: 0x0000b1b4
   2b220:	andeq	r0, r0, sp, ror #13
   2b224:	andeq	sl, r0, r4, asr #17
   2b228:	andeq	sl, r0, ip, ror fp
   2b22c:	strdeq	r7, [r0], -ip
   2b230:	andeq	fp, r0, r8, ror r1
   2b234:	andeq	r0, r0, lr, ror #13
   2b238:	andeq	sl, r0, r8, lsl #17
   2b23c:	andeq	sl, r0, ip, asr ip
   2b240:	andeq	fp, r0, r8, lsl r1
   2b244:	strdeq	r0, [r0], -r8
   2b248:	andeq	sl, r0, r8, lsr #16
   2b24c:	andeq	sl, r0, r0, lsl #17
   2b250:			; <UNDEFINED> instruction: 0x9e3779b1

0002b254 <flatcc_builder_table_edit@@Base>:
   2b254:	push	{fp, lr}
   2b258:	add	fp, sp, #4
   2b25c:	sub	sp, sp, #8
   2b260:	str	r0, [fp, #-8]
   2b264:	str	r1, [fp, #-12]
   2b268:	ldr	r3, [fp, #-8]
   2b26c:	ldr	r3, [r3, #32]
   2b270:	ldrh	r3, [r3, #14]
   2b274:	cmp	r3, #3
   2b278:	beq	2b29c <flatcc_builder_table_edit@@Base+0x48>
   2b27c:	ldr	r3, [pc, #64]	; 2b2c4 <flatcc_builder_table_edit@@Base+0x70>
   2b280:	add	r3, pc, r3
   2b284:	ldr	r2, [pc, #60]	; 2b2c8 <flatcc_builder_table_edit@@Base+0x74>
   2b288:	ldr	r1, [pc, #60]	; 2b2cc <flatcc_builder_table_edit@@Base+0x78>
   2b28c:	add	r1, pc, r1
   2b290:	ldr	r0, [pc, #56]	; 2b2d0 <flatcc_builder_table_edit@@Base+0x7c>
   2b294:	add	r0, pc, r0
   2b298:	bl	12704 <__assert_fail@plt>
   2b29c:	ldr	r3, [fp, #-8]
   2b2a0:	ldr	r2, [r3, #16]
   2b2a4:	ldr	r3, [fp, #-8]
   2b2a8:	ldr	r1, [r3, #20]
   2b2ac:	ldr	r3, [fp, #-12]
   2b2b0:	sub	r3, r1, r3
   2b2b4:	add	r3, r2, r3
   2b2b8:	mov	r0, r3
   2b2bc:	sub	sp, fp, #4
   2b2c0:	pop	{fp, pc}
   2b2c4:	andeq	fp, r0, ip, asr r0
   2b2c8:	andeq	r0, r0, r2, lsl #14
   2b2cc:	andeq	sl, r0, r0, asr r7
   2b2d0:	andeq	sl, r0, r8, lsl #20

0002b2d4 <flatcc_builder_table_add_copy@@Base>:
   2b2d4:	push	{fp, lr}
   2b2d8:	add	fp, sp, #4
   2b2dc:	sub	sp, sp, #24
   2b2e0:	str	r0, [fp, #-16]
   2b2e4:	str	r1, [fp, #-20]	; 0xffffffec
   2b2e8:	str	r2, [fp, #-24]	; 0xffffffe8
   2b2ec:	str	r3, [fp, #-28]	; 0xffffffe4
   2b2f0:	ldrh	r3, [fp, #4]
   2b2f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b2f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b2fc:	ldr	r0, [fp, #-16]
   2b300:	bl	2b0d8 <flatcc_builder_table_add@@Base>
   2b304:	str	r0, [fp, #-8]
   2b308:	ldr	r3, [fp, #-8]
   2b30c:	cmp	r3, #0
   2b310:	beq	2b324 <flatcc_builder_table_add_copy@@Base+0x50>
   2b314:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b318:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b31c:	ldr	r0, [fp, #-8]
   2b320:	bl	125fc <memcpy@plt>
   2b324:	ldr	r3, [fp, #-8]
   2b328:	mov	r0, r3
   2b32c:	sub	sp, fp, #4
   2b330:	pop	{fp, pc}

0002b334 <flatcc_builder_table_add_offset@@Base>:
   2b334:	push	{fp, lr}
   2b338:	add	fp, sp, #4
   2b33c:	sub	sp, sp, #8
   2b340:	str	r0, [fp, #-8]
   2b344:	str	r1, [fp, #-12]
   2b348:	ldr	r3, [fp, #-8]
   2b34c:	ldr	r3, [r3, #32]
   2b350:	ldrh	r3, [r3, #14]
   2b354:	cmp	r3, #3
   2b358:	beq	2b37c <flatcc_builder_table_add_offset@@Base+0x48>
   2b35c:	ldr	r3, [pc, #228]	; 2b448 <flatcc_builder_table_add_offset@@Base+0x114>
   2b360:	add	r3, pc, r3
   2b364:	ldr	r2, [pc, #224]	; 2b44c <flatcc_builder_table_add_offset@@Base+0x118>
   2b368:	ldr	r1, [pc, #224]	; 2b450 <flatcc_builder_table_add_offset@@Base+0x11c>
   2b36c:	add	r1, pc, r1
   2b370:	ldr	r0, [pc, #220]	; 2b454 <flatcc_builder_table_add_offset@@Base+0x120>
   2b374:	add	r0, pc, r0
   2b378:	bl	12704 <__assert_fail@plt>
   2b37c:	ldr	r3, [fp, #-12]
   2b380:	cmp	r3, #0
   2b384:	blt	2b398 <flatcc_builder_table_add_offset@@Base+0x64>
   2b388:	ldr	r3, [fp, #-12]
   2b38c:	ldr	r2, [pc, #196]	; 2b458 <flatcc_builder_table_add_offset@@Base+0x124>
   2b390:	cmp	r3, r2
   2b394:	ble	2b3b8 <flatcc_builder_table_add_offset@@Base+0x84>
   2b398:	ldr	r3, [pc, #188]	; 2b45c <flatcc_builder_table_add_offset@@Base+0x128>
   2b39c:	add	r3, pc, r3
   2b3a0:	ldr	r2, [pc, #184]	; 2b460 <flatcc_builder_table_add_offset@@Base+0x12c>
   2b3a4:	ldr	r1, [pc, #184]	; 2b464 <flatcc_builder_table_add_offset@@Base+0x130>
   2b3a8:	add	r1, pc, r1
   2b3ac:	ldr	r0, [pc, #180]	; 2b468 <flatcc_builder_table_add_offset@@Base+0x134>
   2b3b0:	add	r0, pc, r0
   2b3b4:	bl	12704 <__assert_fail@plt>
   2b3b8:	ldr	r3, [fp, #-8]
   2b3bc:	ldr	r2, [r3, #4]
   2b3c0:	ldr	r3, [fp, #-12]
   2b3c4:	lsl	r3, r3, #1
   2b3c8:	add	r3, r2, r3
   2b3cc:	ldrh	r3, [r3]
   2b3d0:	cmp	r3, #0
   2b3d4:	beq	2b3f8 <flatcc_builder_table_add_offset@@Base+0xc4>
   2b3d8:	ldr	r3, [pc, #140]	; 2b46c <flatcc_builder_table_add_offset@@Base+0x138>
   2b3dc:	add	r3, pc, r3
   2b3e0:	ldr	r2, [pc, #136]	; 2b470 <flatcc_builder_table_add_offset@@Base+0x13c>
   2b3e4:	ldr	r1, [pc, #136]	; 2b474 <flatcc_builder_table_add_offset@@Base+0x140>
   2b3e8:	add	r1, pc, r1
   2b3ec:	ldr	r0, [pc, #132]	; 2b478 <flatcc_builder_table_add_offset@@Base+0x144>
   2b3f0:	add	r0, pc, r0
   2b3f4:	bl	12704 <__assert_fail@plt>
   2b3f8:	ldr	r3, [fp, #-8]
   2b3fc:	ldr	r2, [r3, #12]
   2b400:	ldr	r3, [fp, #-12]
   2b404:	eor	r3, r3, r2
   2b408:	ldr	r2, [pc, #108]	; 2b47c <flatcc_builder_table_add_offset@@Base+0x148>
   2b40c:	mul	r3, r2, r3
   2b410:	eor	r3, r3, #4
   2b414:	ldr	r2, [pc, #96]	; 2b47c <flatcc_builder_table_add_offset@@Base+0x148>
   2b418:	mul	r2, r2, r3
   2b41c:	ldr	r3, [fp, #-8]
   2b420:	str	r2, [r3, #12]
   2b424:	ldr	r3, [fp, #-12]
   2b428:	uxth	r3, r3
   2b42c:	mov	r1, r3
   2b430:	ldr	r0, [fp, #-8]
   2b434:	bl	26078 <flatcc_builder_default_alloc@@Base+0x550>
   2b438:	mov	r3, r0
   2b43c:	mov	r0, r3
   2b440:	sub	sp, fp, #4
   2b444:	pop	{fp, pc}
   2b448:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   2b44c:	andeq	r0, r0, r3, lsl r7
   2b450:	andeq	sl, r0, r0, ror r6
   2b454:	andeq	sl, r0, r8, lsr #18
   2b458:	strdeq	r7, [r0], -ip
   2b45c:	andeq	sl, r0, ip, asr pc
   2b460:	andeq	r0, r0, r4, lsl r7
   2b464:	andeq	sl, r0, r4, lsr r6
   2b468:	andeq	sl, r0, r8, lsl #20
   2b46c:	andeq	sl, r0, ip, lsl pc
   2b470:	andeq	r0, r0, fp, lsl r7
   2b474:	strdeq	sl, [r0], -r4
   2b478:	andeq	sl, r0, ip, asr #12
   2b47c:			; <UNDEFINED> instruction: 0x9e3779b1

0002b480 <flatcc_builder_push_buffer_alignment@@Base>:
   2b480:	push	{fp}		; (str fp, [sp, #-4]!)
   2b484:	add	fp, sp, #0
   2b488:	sub	sp, sp, #20
   2b48c:	str	r0, [fp, #-16]
   2b490:	ldr	r3, [fp, #-16]
   2b494:	ldrh	r3, [r3, #128]	; 0x80
   2b498:	strh	r3, [fp, #-6]
   2b49c:	ldr	r3, [fp, #-16]
   2b4a0:	mov	r2, #4
   2b4a4:	strh	r2, [r3, #128]	; 0x80
   2b4a8:	ldrh	r3, [fp, #-6]
   2b4ac:	mov	r0, r3
   2b4b0:	add	sp, fp, #0
   2b4b4:	pop	{fp}		; (ldr fp, [sp], #4)
   2b4b8:	bx	lr

0002b4bc <flatcc_builder_pop_buffer_alignment@@Base>:
   2b4bc:	push	{fp, lr}
   2b4c0:	add	fp, sp, #4
   2b4c4:	sub	sp, sp, #8
   2b4c8:	str	r0, [fp, #-8]
   2b4cc:	mov	r3, r1
   2b4d0:	strh	r3, [fp, #-10]
   2b4d4:	ldrh	r3, [fp, #-10]
   2b4d8:	mov	r1, r3
   2b4dc:	ldr	r0, [fp, #-8]
   2b4e0:	bl	269e4 <flatcc_builder_clear@@Base+0xb0>
   2b4e4:	nop			; (mov r0, r0)
   2b4e8:	sub	sp, fp, #4
   2b4ec:	pop	{fp, pc}

0002b4f0 <flatcc_builder_get_buffer_alignment@@Base>:
   2b4f0:	push	{fp}		; (str fp, [sp, #-4]!)
   2b4f4:	add	fp, sp, #0
   2b4f8:	sub	sp, sp, #12
   2b4fc:	str	r0, [fp, #-8]
   2b500:	ldr	r3, [fp, #-8]
   2b504:	ldrh	r3, [r3, #128]	; 0x80
   2b508:	mov	r0, r3
   2b50c:	add	sp, fp, #0
   2b510:	pop	{fp}		; (ldr fp, [sp], #4)
   2b514:	bx	lr

0002b518 <flatcc_builder_set_vtable_clustering@@Base>:
   2b518:	push	{fp}		; (str fp, [sp, #-4]!)
   2b51c:	add	fp, sp, #0
   2b520:	sub	sp, sp, #12
   2b524:	str	r0, [fp, #-8]
   2b528:	str	r1, [fp, #-12]
   2b52c:	ldr	r3, [fp, #-12]
   2b530:	cmp	r3, #0
   2b534:	moveq	r3, #1
   2b538:	movne	r3, #0
   2b53c:	uxtb	r3, r3
   2b540:	mov	r2, r3
   2b544:	ldr	r3, [fp, #-8]
   2b548:	str	r2, [r3, #180]	; 0xb4
   2b54c:	nop			; (mov r0, r0)
   2b550:	add	sp, fp, #0
   2b554:	pop	{fp}		; (ldr fp, [sp], #4)
   2b558:	bx	lr

0002b55c <flatcc_builder_set_block_align@@Base>:
   2b55c:	push	{fp}		; (str fp, [sp, #-4]!)
   2b560:	add	fp, sp, #0
   2b564:	sub	sp, sp, #12
   2b568:	str	r0, [fp, #-8]
   2b56c:	mov	r3, r1
   2b570:	strh	r3, [fp, #-10]
   2b574:	ldr	r3, [fp, #-8]
   2b578:	ldrh	r2, [fp, #-10]
   2b57c:	strh	r2, [r3, #132]	; 0x84
   2b580:	nop			; (mov r0, r0)
   2b584:	add	sp, fp, #0
   2b588:	pop	{fp}		; (ldr fp, [sp], #4)
   2b58c:	bx	lr

0002b590 <flatcc_builder_get_level@@Base>:
   2b590:	push	{fp}		; (str fp, [sp, #-4]!)
   2b594:	add	fp, sp, #0
   2b598:	sub	sp, sp, #12
   2b59c:	str	r0, [fp, #-8]
   2b5a0:	ldr	r3, [fp, #-8]
   2b5a4:	ldr	r3, [r3, #156]	; 0x9c
   2b5a8:	mov	r0, r3
   2b5ac:	add	sp, fp, #0
   2b5b0:	pop	{fp}		; (ldr fp, [sp], #4)
   2b5b4:	bx	lr

0002b5b8 <flatcc_builder_set_max_level@@Base>:
   2b5b8:	push	{fp}		; (str fp, [sp, #-4]!)
   2b5bc:	add	fp, sp, #0
   2b5c0:	sub	sp, sp, #12
   2b5c4:	str	r0, [fp, #-8]
   2b5c8:	str	r1, [fp, #-12]
   2b5cc:	ldr	r3, [fp, #-8]
   2b5d0:	ldr	r2, [fp, #-12]
   2b5d4:	str	r2, [r3, #176]	; 0xb0
   2b5d8:	ldr	r3, [fp, #-8]
   2b5dc:	ldr	r2, [r3, #160]	; 0xa0
   2b5e0:	ldr	r3, [fp, #-8]
   2b5e4:	ldr	r3, [r3, #176]	; 0xb0
   2b5e8:	cmp	r2, r3
   2b5ec:	bge	2b600 <flatcc_builder_set_max_level@@Base+0x48>
   2b5f0:	ldr	r3, [fp, #-8]
   2b5f4:	ldr	r2, [r3, #176]	; 0xb0
   2b5f8:	ldr	r3, [fp, #-8]
   2b5fc:	str	r2, [r3, #160]	; 0xa0
   2b600:	nop			; (mov r0, r0)
   2b604:	add	sp, fp, #0
   2b608:	pop	{fp}		; (ldr fp, [sp], #4)
   2b60c:	bx	lr

0002b610 <flatcc_builder_get_buffer_size@@Base>:
   2b610:	push	{fp}		; (str fp, [sp, #-4]!)
   2b614:	add	fp, sp, #0
   2b618:	sub	sp, sp, #12
   2b61c:	str	r0, [fp, #-8]
   2b620:	ldr	r3, [fp, #-8]
   2b624:	ldr	r2, [r3, #140]	; 0x8c
   2b628:	ldr	r3, [fp, #-8]
   2b62c:	ldr	r3, [r3, #136]	; 0x88
   2b630:	sub	r3, r2, r3
   2b634:	mov	r0, r3
   2b638:	add	sp, fp, #0
   2b63c:	pop	{fp}		; (ldr fp, [sp], #4)
   2b640:	bx	lr

0002b644 <flatcc_builder_get_buffer_start@@Base>:
   2b644:	push	{fp}		; (str fp, [sp, #-4]!)
   2b648:	add	fp, sp, #0
   2b64c:	sub	sp, sp, #12
   2b650:	str	r0, [fp, #-8]
   2b654:	ldr	r3, [fp, #-8]
   2b658:	ldr	r3, [r3, #136]	; 0x88
   2b65c:	mov	r0, r3
   2b660:	add	sp, fp, #0
   2b664:	pop	{fp}		; (ldr fp, [sp], #4)
   2b668:	bx	lr

0002b66c <flatcc_builder_get_buffer_end@@Base>:
   2b66c:	push	{fp}		; (str fp, [sp, #-4]!)
   2b670:	add	fp, sp, #0
   2b674:	sub	sp, sp, #12
   2b678:	str	r0, [fp, #-8]
   2b67c:	ldr	r3, [fp, #-8]
   2b680:	ldr	r3, [r3, #140]	; 0x8c
   2b684:	mov	r0, r3
   2b688:	add	sp, fp, #0
   2b68c:	pop	{fp}		; (ldr fp, [sp], #4)
   2b690:	bx	lr

0002b694 <flatcc_builder_set_vtable_cache_limit@@Base>:
   2b694:	push	{fp}		; (str fp, [sp, #-4]!)
   2b698:	add	fp, sp, #0
   2b69c:	sub	sp, sp, #12
   2b6a0:	str	r0, [fp, #-8]
   2b6a4:	str	r1, [fp, #-12]
   2b6a8:	ldr	r3, [fp, #-8]
   2b6ac:	ldr	r2, [fp, #-12]
   2b6b0:	str	r2, [r3, #172]	; 0xac
   2b6b4:	nop			; (mov r0, r0)
   2b6b8:	add	sp, fp, #0
   2b6bc:	pop	{fp}		; (ldr fp, [sp], #4)
   2b6c0:	bx	lr

0002b6c4 <flatcc_builder_set_identifier@@Base>:
   2b6c4:	push	{fp}		; (str fp, [sp, #-4]!)
   2b6c8:	add	fp, sp, #0
   2b6cc:	sub	sp, sp, #12
   2b6d0:	str	r0, [fp, #-8]
   2b6d4:	str	r1, [fp, #-12]
   2b6d8:	ldr	r1, [pc, #60]	; 2b71c <flatcc_builder_set_identifier@@Base+0x58>
   2b6dc:	add	r1, pc, r1
   2b6e0:	ldr	r3, [fp, #-8]
   2b6e4:	add	r2, r3, #168	; 0xa8
   2b6e8:	ldr	r3, [fp, #-12]
   2b6ec:	cmp	r3, #0
   2b6f0:	beq	2b6fc <flatcc_builder_set_identifier@@Base+0x38>
   2b6f4:	ldr	r3, [fp, #-12]
   2b6f8:	b	2b704 <flatcc_builder_set_identifier@@Base+0x40>
   2b6fc:	ldr	r3, [pc, #28]	; 2b720 <flatcc_builder_set_identifier@@Base+0x5c>
   2b700:	ldr	r3, [r1, r3]
   2b704:	ldr	r3, [r3]
   2b708:	str	r3, [r2]
   2b70c:	nop			; (mov r0, r0)
   2b710:	add	sp, fp, #0
   2b714:	pop	{fp}		; (ldr fp, [sp], #4)
   2b718:	bx	lr
   2b71c:	andeq	ip, r1, ip, lsl r9
   2b720:	andeq	r0, r0, r4, ror r0

0002b724 <flatcc_builder_get_type@@Base>:
   2b724:	push	{fp}		; (str fp, [sp, #-4]!)
   2b728:	add	fp, sp, #0
   2b72c:	sub	sp, sp, #12
   2b730:	str	r0, [fp, #-8]
   2b734:	ldr	r3, [fp, #-8]
   2b738:	ldr	r3, [r3, #32]
   2b73c:	cmp	r3, #0
   2b740:	beq	2b754 <flatcc_builder_get_type@@Base+0x30>
   2b744:	ldr	r3, [fp, #-8]
   2b748:	ldr	r3, [r3, #32]
   2b74c:	ldrh	r3, [r3, #14]
   2b750:	b	2b758 <flatcc_builder_get_type@@Base+0x34>
   2b754:	mov	r3, #0
   2b758:	mov	r0, r3
   2b75c:	add	sp, fp, #0
   2b760:	pop	{fp}		; (ldr fp, [sp], #4)
   2b764:	bx	lr

0002b768 <flatcc_builder_get_type_at@@Base>:
   2b768:	push	{fp}		; (str fp, [sp, #-4]!)
   2b76c:	add	fp, sp, #0
   2b770:	sub	sp, sp, #12
   2b774:	str	r0, [fp, #-8]
   2b778:	str	r1, [fp, #-12]
   2b77c:	ldr	r3, [fp, #-12]
   2b780:	cmp	r3, #0
   2b784:	ble	2b79c <flatcc_builder_get_type_at@@Base+0x34>
   2b788:	ldr	r3, [fp, #-8]
   2b78c:	ldr	r2, [r3, #156]	; 0x9c
   2b790:	ldr	r3, [fp, #-12]
   2b794:	cmp	r2, r3
   2b798:	bge	2b7a4 <flatcc_builder_get_type_at@@Base+0x3c>
   2b79c:	mov	r3, #0
   2b7a0:	b	2b7d8 <flatcc_builder_get_type_at@@Base+0x70>
   2b7a4:	ldr	r3, [fp, #-8]
   2b7a8:	ldr	r2, [r3, #32]
   2b7ac:	ldr	r3, [fp, #-8]
   2b7b0:	ldr	r3, [r3, #156]	; 0x9c
   2b7b4:	ldr	r1, [fp, #-12]
   2b7b8:	sub	r3, r1, r3
   2b7bc:	mov	r1, r3
   2b7c0:	mov	r3, r1
   2b7c4:	lsl	r3, r3, #3
   2b7c8:	add	r3, r3, r1
   2b7cc:	lsl	r3, r3, #2
   2b7d0:	add	r3, r2, r3
   2b7d4:	ldrh	r3, [r3, #14]
   2b7d8:	mov	r0, r3
   2b7dc:	add	sp, fp, #0
   2b7e0:	pop	{fp}		; (ldr fp, [sp], #4)
   2b7e4:	bx	lr

0002b7e8 <flatcc_builder_get_direct_buffer@@Base>:
   2b7e8:	push	{fp, lr}
   2b7ec:	add	fp, sp, #4
   2b7f0:	sub	sp, sp, #8
   2b7f4:	str	r0, [fp, #-8]
   2b7f8:	str	r1, [fp, #-12]
   2b7fc:	ldr	r3, [fp, #-8]
   2b800:	ldr	r3, [r3, #184]	; 0xb8
   2b804:	cmp	r3, #0
   2b808:	beq	2b828 <flatcc_builder_get_direct_buffer@@Base+0x40>
   2b80c:	ldr	r3, [fp, #-8]
   2b810:	add	r3, r3, #188	; 0xbc
   2b814:	ldr	r1, [fp, #-12]
   2b818:	mov	r0, r3
   2b81c:	bl	25a54 <main@@Base+0x1b8>
   2b820:	mov	r3, r0
   2b824:	b	2b844 <flatcc_builder_get_direct_buffer@@Base+0x5c>
   2b828:	ldr	r3, [fp, #-12]
   2b82c:	cmp	r3, #0
   2b830:	beq	2b840 <flatcc_builder_get_direct_buffer@@Base+0x58>
   2b834:	ldr	r3, [fp, #-12]
   2b838:	mov	r2, #0
   2b83c:	str	r2, [r3]
   2b840:	mov	r3, #0
   2b844:	mov	r0, r3
   2b848:	sub	sp, fp, #4
   2b84c:	pop	{fp, pc}

0002b850 <flatcc_builder_copy_buffer@@Base>:
   2b850:	push	{fp, lr}
   2b854:	add	fp, sp, #4
   2b858:	sub	sp, sp, #16
   2b85c:	str	r0, [fp, #-8]
   2b860:	str	r1, [fp, #-12]
   2b864:	str	r2, [fp, #-16]
   2b868:	ldr	r3, [fp, #-8]
   2b86c:	ldr	r3, [r3, #184]	; 0xb8
   2b870:	cmp	r3, #0
   2b874:	bne	2b880 <flatcc_builder_copy_buffer@@Base+0x30>
   2b878:	mov	r3, #0
   2b87c:	b	2b8cc <flatcc_builder_copy_buffer@@Base+0x7c>
   2b880:	ldr	r3, [fp, #-8]
   2b884:	add	r3, r3, #188	; 0xbc
   2b888:	ldr	r2, [fp, #-16]
   2b88c:	ldr	r1, [fp, #-12]
   2b890:	mov	r0, r3
   2b894:	bl	2c618 <flatcc_emitter_copy_buffer@@Base>
   2b898:	str	r0, [fp, #-12]
   2b89c:	ldr	r3, [fp, #-12]
   2b8a0:	cmp	r3, #0
   2b8a4:	bne	2b8c8 <flatcc_builder_copy_buffer@@Base+0x78>
   2b8a8:	ldr	r3, [pc, #40]	; 2b8d8 <flatcc_builder_copy_buffer@@Base+0x88>
   2b8ac:	add	r3, pc, r3
   2b8b0:	ldr	r2, [pc, #36]	; 2b8dc <flatcc_builder_copy_buffer@@Base+0x8c>
   2b8b4:	ldr	r1, [pc, #36]	; 2b8e0 <flatcc_builder_copy_buffer@@Base+0x90>
   2b8b8:	add	r1, pc, r1
   2b8bc:	ldr	r0, [pc, #32]	; 2b8e4 <flatcc_builder_copy_buffer@@Base+0x94>
   2b8c0:	add	r0, pc, r0
   2b8c4:	bl	12704 <__assert_fail@plt>
   2b8c8:	ldr	r3, [fp, #-12]
   2b8cc:	mov	r0, r3
   2b8d0:	sub	sp, fp, #4
   2b8d4:	pop	{fp, pc}
   2b8d8:	andeq	sl, r0, ip, ror #20
   2b8dc:	andeq	r0, r0, r6, lsl #15
   2b8e0:	andeq	sl, r0, r4, lsr #2
   2b8e4:	andeq	sl, r0, ip, lsr r5

0002b8e8 <flatcc_builder_finalize_buffer@@Base>:
   2b8e8:	push	{fp, lr}
   2b8ec:	add	fp, sp, #4
   2b8f0:	sub	sp, sp, #16
   2b8f4:	str	r0, [fp, #-16]
   2b8f8:	str	r1, [fp, #-20]	; 0xffffffec
   2b8fc:	ldr	r0, [fp, #-16]
   2b900:	bl	2b610 <flatcc_builder_get_buffer_size@@Base>
   2b904:	str	r0, [fp, #-8]
   2b908:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b90c:	cmp	r3, #0
   2b910:	beq	2b920 <flatcc_builder_finalize_buffer@@Base+0x38>
   2b914:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b918:	ldr	r2, [fp, #-8]
   2b91c:	str	r2, [r3]
   2b920:	ldr	r0, [fp, #-8]
   2b924:	bl	12650 <malloc@plt>
   2b928:	mov	r3, r0
   2b92c:	str	r3, [fp, #-12]
   2b930:	ldr	r3, [fp, #-12]
   2b934:	cmp	r3, #0
   2b938:	bne	2b95c <flatcc_builder_finalize_buffer@@Base+0x74>
   2b93c:	ldr	r3, [pc, #136]	; 2b9cc <flatcc_builder_finalize_buffer@@Base+0xe4>
   2b940:	add	r3, pc, r3
   2b944:	ldr	r2, [pc, #132]	; 2b9d0 <flatcc_builder_finalize_buffer@@Base+0xe8>
   2b948:	ldr	r1, [pc, #132]	; 2b9d4 <flatcc_builder_finalize_buffer@@Base+0xec>
   2b94c:	add	r1, pc, r1
   2b950:	ldr	r0, [pc, #128]	; 2b9d8 <flatcc_builder_finalize_buffer@@Base+0xf0>
   2b954:	add	r0, pc, r0
   2b958:	bl	12704 <__assert_fail@plt>
   2b95c:	ldr	r2, [fp, #-8]
   2b960:	ldr	r1, [fp, #-12]
   2b964:	ldr	r0, [fp, #-16]
   2b968:	bl	2b850 <flatcc_builder_copy_buffer@@Base>
   2b96c:	mov	r3, r0
   2b970:	cmp	r3, #0
   2b974:	bne	2b998 <flatcc_builder_finalize_buffer@@Base+0xb0>
   2b978:	ldr	r3, [pc, #92]	; 2b9dc <flatcc_builder_finalize_buffer@@Base+0xf4>
   2b97c:	add	r3, pc, r3
   2b980:	ldr	r2, [pc, #88]	; 2b9e0 <flatcc_builder_finalize_buffer@@Base+0xf8>
   2b984:	ldr	r1, [pc, #88]	; 2b9e4 <flatcc_builder_finalize_buffer@@Base+0xfc>
   2b988:	add	r1, pc, r1
   2b98c:	ldr	r0, [pc, #84]	; 2b9e8 <flatcc_builder_finalize_buffer@@Base+0x100>
   2b990:	add	r0, pc, r0
   2b994:	bl	12704 <__assert_fail@plt>
   2b998:	ldr	r3, [fp, #-12]
   2b99c:	cmp	r3, #0
   2b9a0:	bne	2b9bc <flatcc_builder_finalize_buffer@@Base+0xd4>
   2b9a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b9a8:	cmp	r3, #0
   2b9ac:	beq	2b9bc <flatcc_builder_finalize_buffer@@Base+0xd4>
   2b9b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b9b4:	mov	r2, #0
   2b9b8:	str	r2, [r3]
   2b9bc:	ldr	r3, [fp, #-12]
   2b9c0:	mov	r0, r3
   2b9c4:	sub	sp, fp, #4
   2b9c8:	pop	{fp, pc}
   2b9cc:	strdeq	sl, [r0], -r4
   2b9d0:	muleq	r0, r8, r7
   2b9d4:	muleq	r0, r0, r0
   2b9d8:	andeq	sl, r0, r8, ror #1
   2b9dc:			; <UNDEFINED> instruction: 0x0000a9b8
   2b9e0:	muleq	r0, ip, r7
   2b9e4:	andeq	sl, r0, r4, asr r0
   2b9e8:	andeq	sl, r0, ip, lsr #1

0002b9ec <flatcc_builder_finalize_aligned_buffer@@Base>:
   2b9ec:	push	{fp, lr}
   2b9f0:	add	fp, sp, #4
   2b9f4:	sub	sp, sp, #24
   2b9f8:	str	r0, [fp, #-24]	; 0xffffffe8
   2b9fc:	str	r1, [fp, #-28]	; 0xffffffe4
   2ba00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ba04:	bl	2b610 <flatcc_builder_get_buffer_size@@Base>
   2ba08:	str	r0, [fp, #-12]
   2ba0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ba10:	cmp	r3, #0
   2ba14:	beq	2ba24 <flatcc_builder_finalize_aligned_buffer@@Base+0x38>
   2ba18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ba1c:	ldr	r2, [fp, #-12]
   2ba20:	str	r2, [r3]
   2ba24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ba28:	bl	2b4f0 <flatcc_builder_get_buffer_alignment@@Base>
   2ba2c:	mov	r3, r0
   2ba30:	str	r3, [fp, #-16]
   2ba34:	ldr	r2, [fp, #-12]
   2ba38:	ldr	r3, [fp, #-16]
   2ba3c:	add	r3, r2, r3
   2ba40:	sub	r2, r3, #1
   2ba44:	ldr	r3, [fp, #-16]
   2ba48:	rsb	r3, r3, #0
   2ba4c:	and	r3, r3, r2
   2ba50:	str	r3, [fp, #-12]
   2ba54:	ldr	r1, [fp, #-12]
   2ba58:	ldr	r0, [fp, #-16]
   2ba5c:	bl	25960 <main@@Base+0xc4>
   2ba60:	str	r0, [fp, #-8]
   2ba64:	ldr	r3, [fp, #-8]
   2ba68:	cmp	r3, #0
   2ba6c:	beq	2baa0 <flatcc_builder_finalize_aligned_buffer@@Base+0xb4>
   2ba70:	ldr	r2, [fp, #-12]
   2ba74:	ldr	r1, [fp, #-8]
   2ba78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ba7c:	bl	2b850 <flatcc_builder_copy_buffer@@Base>
   2ba80:	mov	r3, r0
   2ba84:	cmp	r3, #0
   2ba88:	bne	2baa4 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   2ba8c:	ldr	r0, [fp, #-8]
   2ba90:	bl	125f0 <free@plt>
   2ba94:	mov	r3, #0
   2ba98:	str	r3, [fp, #-8]
   2ba9c:	b	2baa4 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   2baa0:	nop			; (mov r0, r0)
   2baa4:	ldr	r3, [fp, #-8]
   2baa8:	cmp	r3, #0
   2baac:	bne	2bac8 <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
   2bab0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bab4:	cmp	r3, #0
   2bab8:	beq	2bac8 <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
   2babc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bac0:	mov	r2, #0
   2bac4:	str	r2, [r3]
   2bac8:	ldr	r3, [fp, #-8]
   2bacc:	mov	r0, r3
   2bad0:	sub	sp, fp, #4
   2bad4:	pop	{fp, pc}

0002bad8 <flatcc_builder_aligned_alloc@@Base>:
   2bad8:	push	{fp, lr}
   2badc:	add	fp, sp, #4
   2bae0:	sub	sp, sp, #8
   2bae4:	str	r0, [fp, #-8]
   2bae8:	str	r1, [fp, #-12]
   2baec:	ldr	r1, [fp, #-12]
   2baf0:	ldr	r0, [fp, #-8]
   2baf4:	bl	25960 <main@@Base+0xc4>
   2baf8:	mov	r3, r0
   2bafc:	mov	r0, r3
   2bb00:	sub	sp, fp, #4
   2bb04:	pop	{fp, pc}

0002bb08 <flatcc_builder_aligned_free@@Base>:
   2bb08:	push	{fp, lr}
   2bb0c:	add	fp, sp, #4
   2bb10:	sub	sp, sp, #8
   2bb14:	str	r0, [fp, #-8]
   2bb18:	ldr	r0, [fp, #-8]
   2bb1c:	bl	125f0 <free@plt>
   2bb20:	nop			; (mov r0, r0)
   2bb24:	sub	sp, fp, #4
   2bb28:	pop	{fp, pc}

0002bb2c <flatcc_builder_get_emit_context@@Base>:
   2bb2c:	push	{fp}		; (str fp, [sp, #-4]!)
   2bb30:	add	fp, sp, #0
   2bb34:	sub	sp, sp, #12
   2bb38:	str	r0, [fp, #-8]
   2bb3c:	ldr	r3, [fp, #-8]
   2bb40:	ldr	r3, [r3, #36]	; 0x24
   2bb44:	mov	r0, r3
   2bb48:	add	sp, fp, #0
   2bb4c:	pop	{fp}		; (ldr fp, [sp], #4)
   2bb50:	bx	lr
   2bb54:	push	{fp, lr}
   2bb58:	add	fp, sp, #4
   2bb5c:	sub	sp, sp, #16
   2bb60:	str	r0, [fp, #-16]
   2bb64:	mov	r3, #0
   2bb68:	str	r3, [fp, #-8]
   2bb6c:	ldr	r3, [fp, #-16]
   2bb70:	ldr	r3, [r3]
   2bb74:	cmp	r3, #0
   2bb78:	beq	2bbd0 <flatcc_builder_get_emit_context@@Base+0xa4>
   2bb7c:	ldr	r3, [fp, #-16]
   2bb80:	ldr	r3, [r3]
   2bb84:	ldr	r2, [r3, #2948]	; 0xb84
   2bb88:	ldr	r3, [fp, #-16]
   2bb8c:	ldr	r3, [r3, #4]
   2bb90:	cmp	r2, r3
   2bb94:	beq	2bbd0 <flatcc_builder_get_emit_context@@Base+0xa4>
   2bb98:	ldr	r3, [fp, #-16]
   2bb9c:	ldr	r3, [r3]
   2bba0:	ldr	r3, [r3, #2948]	; 0xb84
   2bba4:	ldr	r2, [fp, #-16]
   2bba8:	ldr	r2, [r2]
   2bbac:	ldr	r2, [r2, #2952]	; 0xb88
   2bbb0:	sub	r2, r2, #2944	; 0xb80
   2bbb4:	str	r2, [r3, #2952]	; 0xb88
   2bbb8:	ldr	r3, [fp, #-16]
   2bbbc:	ldr	r3, [r3]
   2bbc0:	ldr	r2, [r3, #2948]	; 0xb84
   2bbc4:	ldr	r3, [fp, #-16]
   2bbc8:	str	r2, [r3]
   2bbcc:	b	2bcf8 <flatcc_builder_get_emit_context@@Base+0x1cc>
   2bbd0:	ldr	r0, [pc, #368]	; 2bd48 <flatcc_builder_get_emit_context@@Base+0x21c>
   2bbd4:	bl	12650 <malloc@plt>
   2bbd8:	mov	r3, r0
   2bbdc:	str	r3, [fp, #-8]
   2bbe0:	ldr	r3, [fp, #-8]
   2bbe4:	cmp	r3, #0
   2bbe8:	bne	2bbf4 <flatcc_builder_get_emit_context@@Base+0xc8>
   2bbec:	mvn	r3, #0
   2bbf0:	b	2bd3c <flatcc_builder_get_emit_context@@Base+0x210>
   2bbf4:	ldr	r3, [fp, #-16]
   2bbf8:	ldr	r3, [r3, #28]
   2bbfc:	add	r2, r3, #2944	; 0xb80
   2bc00:	ldr	r3, [fp, #-16]
   2bc04:	str	r2, [r3, #28]
   2bc08:	ldr	r3, [fp, #-16]
   2bc0c:	ldr	r3, [r3]
   2bc10:	cmp	r3, #0
   2bc14:	beq	2bc68 <flatcc_builder_get_emit_context@@Base+0x13c>
   2bc18:	ldr	r3, [fp, #-16]
   2bc1c:	ldr	r2, [r3, #4]
   2bc20:	ldr	r3, [fp, #-8]
   2bc24:	str	r2, [r3, #2948]	; 0xb84
   2bc28:	ldr	r3, [fp, #-16]
   2bc2c:	ldr	r2, [r3]
   2bc30:	ldr	r3, [fp, #-8]
   2bc34:	str	r2, [r3, #2944]	; 0xb80
   2bc38:	ldr	r3, [fp, #-16]
   2bc3c:	ldr	r3, [r3]
   2bc40:	ldr	r2, [fp, #-8]
   2bc44:	str	r2, [r3, #2948]	; 0xb84
   2bc48:	ldr	r3, [fp, #-16]
   2bc4c:	ldr	r3, [r3, #4]
   2bc50:	ldr	r2, [fp, #-8]
   2bc54:	str	r2, [r3, #2944]	; 0xb80
   2bc58:	ldr	r3, [fp, #-16]
   2bc5c:	ldr	r2, [fp, #-8]
   2bc60:	str	r2, [r3]
   2bc64:	b	2bcf8 <flatcc_builder_get_emit_context@@Base+0x1cc>
   2bc68:	ldr	r3, [fp, #-16]
   2bc6c:	ldr	r2, [fp, #-8]
   2bc70:	str	r2, [r3]
   2bc74:	ldr	r3, [fp, #-16]
   2bc78:	ldr	r2, [fp, #-8]
   2bc7c:	str	r2, [r3, #4]
   2bc80:	ldr	r3, [fp, #-8]
   2bc84:	ldr	r2, [fp, #-8]
   2bc88:	str	r2, [r3, #2944]	; 0xb80
   2bc8c:	ldr	r3, [fp, #-8]
   2bc90:	ldr	r2, [fp, #-8]
   2bc94:	str	r2, [r3, #2948]	; 0xb84
   2bc98:	ldr	r3, [fp, #-16]
   2bc9c:	ldr	r3, [r3]
   2bca0:	add	r2, r3, #1472	; 0x5c0
   2bca4:	ldr	r3, [fp, #-16]
   2bca8:	str	r2, [r3, #8]
   2bcac:	ldr	r3, [fp, #-16]
   2bcb0:	ldr	r2, [r3, #8]
   2bcb4:	ldr	r3, [fp, #-16]
   2bcb8:	str	r2, [r3, #16]
   2bcbc:	ldr	r3, [fp, #-16]
   2bcc0:	mov	r2, #1472	; 0x5c0
   2bcc4:	str	r2, [r3, #12]
   2bcc8:	ldr	r3, [fp, #-16]
   2bccc:	ldr	r3, [r3, #12]
   2bcd0:	rsb	r2, r3, #2944	; 0xb80
   2bcd4:	ldr	r3, [fp, #-16]
   2bcd8:	str	r2, [r3, #20]
   2bcdc:	ldr	r3, [fp, #-16]
   2bce0:	ldr	r3, [r3, #12]
   2bce4:	rsb	r2, r3, #0
   2bce8:	ldr	r3, [fp, #-8]
   2bcec:	str	r2, [r3, #2952]	; 0xb88
   2bcf0:	mov	r3, #0
   2bcf4:	b	2bd3c <flatcc_builder_get_emit_context@@Base+0x210>
   2bcf8:	ldr	r3, [fp, #-16]
   2bcfc:	ldr	r3, [r3]
   2bd00:	add	r2, r3, #2944	; 0xb80
   2bd04:	ldr	r3, [fp, #-16]
   2bd08:	str	r2, [r3, #8]
   2bd0c:	ldr	r3, [fp, #-16]
   2bd10:	mov	r2, #2944	; 0xb80
   2bd14:	str	r2, [r3, #12]
   2bd18:	ldr	r3, [fp, #-16]
   2bd1c:	ldr	r3, [r3]
   2bd20:	ldr	r2, [fp, #-16]
   2bd24:	ldr	r2, [r2]
   2bd28:	ldr	r2, [r2, #2944]	; 0xb80
   2bd2c:	ldr	r2, [r2, #2952]	; 0xb88
   2bd30:	sub	r2, r2, #2944	; 0xb80
   2bd34:	str	r2, [r3, #2952]	; 0xb88
   2bd38:	mov	r3, #0
   2bd3c:	mov	r0, r3
   2bd40:	sub	sp, fp, #4
   2bd44:	pop	{fp, pc}
   2bd48:	andeq	r0, r0, ip, lsl #23
   2bd4c:	push	{fp, lr}
   2bd50:	add	fp, sp, #4
   2bd54:	sub	sp, sp, #16
   2bd58:	str	r0, [fp, #-16]
   2bd5c:	mov	r3, #0
   2bd60:	str	r3, [fp, #-8]
   2bd64:	ldr	r3, [fp, #-16]
   2bd68:	ldr	r3, [r3, #4]
   2bd6c:	cmp	r3, #0
   2bd70:	beq	2bda8 <flatcc_builder_get_emit_context@@Base+0x27c>
   2bd74:	ldr	r3, [fp, #-16]
   2bd78:	ldr	r3, [r3, #4]
   2bd7c:	ldr	r2, [r3, #2944]	; 0xb80
   2bd80:	ldr	r3, [fp, #-16]
   2bd84:	ldr	r3, [r3]
   2bd88:	cmp	r2, r3
   2bd8c:	beq	2bda8 <flatcc_builder_get_emit_context@@Base+0x27c>
   2bd90:	ldr	r3, [fp, #-16]
   2bd94:	ldr	r3, [r3, #4]
   2bd98:	ldr	r2, [r3, #2944]	; 0xb80
   2bd9c:	ldr	r3, [fp, #-16]
   2bda0:	str	r2, [r3, #4]
   2bda4:	b	2bed0 <flatcc_builder_get_emit_context@@Base+0x3a4>
   2bda8:	ldr	r0, [pc, #368]	; 2bf20 <flatcc_builder_get_emit_context@@Base+0x3f4>
   2bdac:	bl	12650 <malloc@plt>
   2bdb0:	mov	r3, r0
   2bdb4:	str	r3, [fp, #-8]
   2bdb8:	ldr	r3, [fp, #-8]
   2bdbc:	cmp	r3, #0
   2bdc0:	bne	2bdcc <flatcc_builder_get_emit_context@@Base+0x2a0>
   2bdc4:	mvn	r3, #0
   2bdc8:	b	2bf14 <flatcc_builder_get_emit_context@@Base+0x3e8>
   2bdcc:	ldr	r3, [fp, #-16]
   2bdd0:	ldr	r3, [r3, #28]
   2bdd4:	add	r2, r3, #2944	; 0xb80
   2bdd8:	ldr	r3, [fp, #-16]
   2bddc:	str	r2, [r3, #28]
   2bde0:	ldr	r3, [fp, #-16]
   2bde4:	ldr	r3, [r3, #4]
   2bde8:	cmp	r3, #0
   2bdec:	beq	2be40 <flatcc_builder_get_emit_context@@Base+0x314>
   2bdf0:	ldr	r3, [fp, #-16]
   2bdf4:	ldr	r2, [r3, #4]
   2bdf8:	ldr	r3, [fp, #-8]
   2bdfc:	str	r2, [r3, #2948]	; 0xb84
   2be00:	ldr	r3, [fp, #-16]
   2be04:	ldr	r2, [r3]
   2be08:	ldr	r3, [fp, #-8]
   2be0c:	str	r2, [r3, #2944]	; 0xb80
   2be10:	ldr	r3, [fp, #-16]
   2be14:	ldr	r3, [r3]
   2be18:	ldr	r2, [fp, #-8]
   2be1c:	str	r2, [r3, #2948]	; 0xb84
   2be20:	ldr	r3, [fp, #-16]
   2be24:	ldr	r3, [r3, #4]
   2be28:	ldr	r2, [fp, #-8]
   2be2c:	str	r2, [r3, #2944]	; 0xb80
   2be30:	ldr	r3, [fp, #-16]
   2be34:	ldr	r2, [fp, #-8]
   2be38:	str	r2, [r3, #4]
   2be3c:	b	2bed0 <flatcc_builder_get_emit_context@@Base+0x3a4>
   2be40:	ldr	r3, [fp, #-16]
   2be44:	ldr	r2, [fp, #-8]
   2be48:	str	r2, [r3]
   2be4c:	ldr	r3, [fp, #-16]
   2be50:	ldr	r2, [fp, #-8]
   2be54:	str	r2, [r3, #4]
   2be58:	ldr	r3, [fp, #-8]
   2be5c:	ldr	r2, [fp, #-8]
   2be60:	str	r2, [r3, #2944]	; 0xb80
   2be64:	ldr	r3, [fp, #-8]
   2be68:	ldr	r2, [fp, #-8]
   2be6c:	str	r2, [r3, #2948]	; 0xb84
   2be70:	ldr	r3, [fp, #-16]
   2be74:	ldr	r3, [r3]
   2be78:	add	r2, r3, #1472	; 0x5c0
   2be7c:	ldr	r3, [fp, #-16]
   2be80:	str	r2, [r3, #8]
   2be84:	ldr	r3, [fp, #-16]
   2be88:	ldr	r2, [r3, #8]
   2be8c:	ldr	r3, [fp, #-16]
   2be90:	str	r2, [r3, #16]
   2be94:	ldr	r3, [fp, #-16]
   2be98:	mov	r2, #1472	; 0x5c0
   2be9c:	str	r2, [r3, #12]
   2bea0:	ldr	r3, [fp, #-16]
   2bea4:	ldr	r3, [r3, #12]
   2bea8:	rsb	r2, r3, #2944	; 0xb80
   2beac:	ldr	r3, [fp, #-16]
   2beb0:	str	r2, [r3, #20]
   2beb4:	ldr	r3, [fp, #-16]
   2beb8:	ldr	r3, [r3, #12]
   2bebc:	rsb	r2, r3, #0
   2bec0:	ldr	r3, [fp, #-8]
   2bec4:	str	r2, [r3, #2952]	; 0xb88
   2bec8:	mov	r3, #0
   2becc:	b	2bf14 <flatcc_builder_get_emit_context@@Base+0x3e8>
   2bed0:	ldr	r3, [fp, #-16]
   2bed4:	ldr	r3, [r3, #4]
   2bed8:	mov	r2, r3
   2bedc:	ldr	r3, [fp, #-16]
   2bee0:	str	r2, [r3, #16]
   2bee4:	ldr	r3, [fp, #-16]
   2bee8:	mov	r2, #2944	; 0xb80
   2beec:	str	r2, [r3, #20]
   2bef0:	ldr	r3, [fp, #-16]
   2bef4:	ldr	r3, [r3, #4]
   2bef8:	ldr	r2, [fp, #-16]
   2befc:	ldr	r2, [r2, #4]
   2bf00:	ldr	r2, [r2, #2948]	; 0xb84
   2bf04:	ldr	r2, [r2, #2952]	; 0xb88
   2bf08:	add	r2, r2, #2944	; 0xb80
   2bf0c:	str	r2, [r3, #2952]	; 0xb88
   2bf10:	mov	r3, #0
   2bf14:	mov	r0, r3
   2bf18:	sub	sp, fp, #4
   2bf1c:	pop	{fp, pc}
   2bf20:	andeq	r0, r0, ip, lsl #23
   2bf24:	push	{fp, lr}
   2bf28:	add	fp, sp, #4
   2bf2c:	sub	sp, sp, #24
   2bf30:	str	r0, [fp, #-16]
   2bf34:	str	r1, [fp, #-20]	; 0xffffffec
   2bf38:	str	r2, [fp, #-24]	; 0xffffffe8
   2bf3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bf40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bf44:	add	r3, r2, r3
   2bf48:	str	r3, [fp, #-20]	; 0xffffffec
   2bf4c:	b	2c010 <flatcc_builder_get_emit_context@@Base+0x4e4>
   2bf50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bf54:	str	r3, [fp, #-8]
   2bf58:	ldr	r3, [fp, #-16]
   2bf5c:	ldr	r2, [r3, #12]
   2bf60:	ldr	r3, [fp, #-8]
   2bf64:	cmp	r2, r3
   2bf68:	bcs	2bfa0 <flatcc_builder_get_emit_context@@Base+0x474>
   2bf6c:	ldr	r3, [fp, #-16]
   2bf70:	ldr	r3, [r3, #12]
   2bf74:	str	r3, [fp, #-8]
   2bf78:	ldr	r3, [fp, #-8]
   2bf7c:	cmp	r3, #0
   2bf80:	bne	2bfa0 <flatcc_builder_get_emit_context@@Base+0x474>
   2bf84:	ldr	r0, [fp, #-16]
   2bf88:	bl	2bb54 <flatcc_builder_get_emit_context@@Base+0x28>
   2bf8c:	mov	r3, r0
   2bf90:	cmp	r3, #0
   2bf94:	beq	2c010 <flatcc_builder_get_emit_context@@Base+0x4e4>
   2bf98:	mvn	r3, #0
   2bf9c:	b	2c020 <flatcc_builder_get_emit_context@@Base+0x4f4>
   2bfa0:	ldr	r3, [fp, #-16]
   2bfa4:	ldr	r2, [r3, #8]
   2bfa8:	ldr	r3, [fp, #-8]
   2bfac:	rsb	r3, r3, #0
   2bfb0:	add	r2, r2, r3
   2bfb4:	ldr	r3, [fp, #-16]
   2bfb8:	str	r2, [r3, #8]
   2bfbc:	ldr	r3, [fp, #-16]
   2bfc0:	ldr	r2, [r3, #12]
   2bfc4:	ldr	r3, [fp, #-8]
   2bfc8:	sub	r2, r2, r3
   2bfcc:	ldr	r3, [fp, #-16]
   2bfd0:	str	r2, [r3, #12]
   2bfd4:	ldr	r3, [fp, #-8]
   2bfd8:	rsb	r3, r3, #0
   2bfdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bfe0:	add	r3, r2, r3
   2bfe4:	str	r3, [fp, #-20]	; 0xffffffec
   2bfe8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2bfec:	ldr	r3, [fp, #-8]
   2bff0:	sub	r3, r2, r3
   2bff4:	str	r3, [fp, #-24]	; 0xffffffe8
   2bff8:	ldr	r3, [fp, #-16]
   2bffc:	ldr	r3, [r3, #8]
   2c000:	ldr	r2, [fp, #-8]
   2c004:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c008:	mov	r0, r3
   2c00c:	bl	125fc <memcpy@plt>
   2c010:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c014:	cmp	r3, #0
   2c018:	bne	2bf50 <flatcc_builder_get_emit_context@@Base+0x424>
   2c01c:	mov	r3, #0
   2c020:	mov	r0, r3
   2c024:	sub	sp, fp, #4
   2c028:	pop	{fp, pc}
   2c02c:	push	{fp, lr}
   2c030:	add	fp, sp, #4
   2c034:	sub	sp, sp, #24
   2c038:	str	r0, [fp, #-16]
   2c03c:	str	r1, [fp, #-20]	; 0xffffffec
   2c040:	str	r2, [fp, #-24]	; 0xffffffe8
   2c044:	b	2c100 <flatcc_builder_get_emit_context@@Base+0x5d4>
   2c048:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c04c:	str	r3, [fp, #-8]
   2c050:	ldr	r3, [fp, #-16]
   2c054:	ldr	r2, [r3, #20]
   2c058:	ldr	r3, [fp, #-8]
   2c05c:	cmp	r2, r3
   2c060:	bcs	2c098 <flatcc_builder_get_emit_context@@Base+0x56c>
   2c064:	ldr	r3, [fp, #-16]
   2c068:	ldr	r3, [r3, #20]
   2c06c:	str	r3, [fp, #-8]
   2c070:	ldr	r3, [fp, #-8]
   2c074:	cmp	r3, #0
   2c078:	bne	2c098 <flatcc_builder_get_emit_context@@Base+0x56c>
   2c07c:	ldr	r0, [fp, #-16]
   2c080:	bl	2bd4c <flatcc_builder_get_emit_context@@Base+0x220>
   2c084:	mov	r3, r0
   2c088:	cmp	r3, #0
   2c08c:	beq	2c100 <flatcc_builder_get_emit_context@@Base+0x5d4>
   2c090:	mvn	r3, #0
   2c094:	b	2c110 <flatcc_builder_get_emit_context@@Base+0x5e4>
   2c098:	ldr	r3, [fp, #-16]
   2c09c:	ldr	r3, [r3, #16]
   2c0a0:	ldr	r2, [fp, #-8]
   2c0a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c0a8:	mov	r0, r3
   2c0ac:	bl	125fc <memcpy@plt>
   2c0b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c0b4:	ldr	r3, [fp, #-8]
   2c0b8:	sub	r3, r2, r3
   2c0bc:	str	r3, [fp, #-24]	; 0xffffffe8
   2c0c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c0c4:	ldr	r3, [fp, #-8]
   2c0c8:	add	r3, r2, r3
   2c0cc:	str	r3, [fp, #-20]	; 0xffffffec
   2c0d0:	ldr	r3, [fp, #-16]
   2c0d4:	ldr	r2, [r3, #16]
   2c0d8:	ldr	r3, [fp, #-8]
   2c0dc:	add	r2, r2, r3
   2c0e0:	ldr	r3, [fp, #-16]
   2c0e4:	str	r2, [r3, #16]
   2c0e8:	ldr	r3, [fp, #-16]
   2c0ec:	ldr	r2, [r3, #20]
   2c0f0:	ldr	r3, [fp, #-8]
   2c0f4:	sub	r2, r2, r3
   2c0f8:	ldr	r3, [fp, #-16]
   2c0fc:	str	r2, [r3, #20]
   2c100:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c104:	cmp	r3, #0
   2c108:	bne	2c048 <flatcc_builder_get_emit_context@@Base+0x51c>
   2c10c:	mov	r3, #0
   2c110:	mov	r0, r3
   2c114:	sub	sp, fp, #4
   2c118:	pop	{fp, pc}

0002c11c <flatcc_emitter_recycle_page@@Base>:
   2c11c:	push	{fp}		; (str fp, [sp, #-4]!)
   2c120:	add	fp, sp, #0
   2c124:	sub	sp, sp, #12
   2c128:	str	r0, [fp, #-8]
   2c12c:	str	r1, [fp, #-12]
   2c130:	ldr	r3, [fp, #-8]
   2c134:	ldr	r2, [r3]
   2c138:	ldr	r3, [fp, #-12]
   2c13c:	cmp	r2, r3
   2c140:	beq	2c158 <flatcc_emitter_recycle_page@@Base+0x3c>
   2c144:	ldr	r3, [fp, #-8]
   2c148:	ldr	r2, [r3, #4]
   2c14c:	ldr	r3, [fp, #-12]
   2c150:	cmp	r2, r3
   2c154:	bne	2c160 <flatcc_emitter_recycle_page@@Base+0x44>
   2c158:	mvn	r3, #0
   2c15c:	b	2c1d0 <flatcc_emitter_recycle_page@@Base+0xb4>
   2c160:	ldr	r3, [fp, #-12]
   2c164:	ldr	r3, [r3, #2944]	; 0xb80
   2c168:	ldr	r2, [fp, #-12]
   2c16c:	ldr	r2, [r2, #2948]	; 0xb84
   2c170:	str	r2, [r3, #2948]	; 0xb84
   2c174:	ldr	r3, [fp, #-12]
   2c178:	ldr	r3, [r3, #2948]	; 0xb84
   2c17c:	ldr	r2, [fp, #-12]
   2c180:	ldr	r2, [r2, #2944]	; 0xb80
   2c184:	str	r2, [r3, #2944]	; 0xb80
   2c188:	ldr	r3, [fp, #-8]
   2c18c:	ldr	r3, [r3]
   2c190:	ldr	r2, [r3, #2948]	; 0xb84
   2c194:	ldr	r3, [fp, #-12]
   2c198:	str	r2, [r3, #2948]	; 0xb84
   2c19c:	ldr	r3, [fp, #-8]
   2c1a0:	ldr	r2, [r3]
   2c1a4:	ldr	r3, [fp, #-12]
   2c1a8:	str	r2, [r3, #2944]	; 0xb80
   2c1ac:	ldr	r3, [fp, #-12]
   2c1b0:	ldr	r3, [r3, #2948]	; 0xb84
   2c1b4:	ldr	r2, [fp, #-12]
   2c1b8:	str	r2, [r3, #2944]	; 0xb80
   2c1bc:	ldr	r3, [fp, #-12]
   2c1c0:	ldr	r3, [r3, #2944]	; 0xb80
   2c1c4:	ldr	r2, [fp, #-12]
   2c1c8:	str	r2, [r3, #2948]	; 0xb84
   2c1cc:	mov	r3, #0
   2c1d0:	mov	r0, r3
   2c1d4:	add	sp, fp, #0
   2c1d8:	pop	{fp}		; (ldr fp, [sp], #4)
   2c1dc:	bx	lr

0002c1e0 <flatcc_emitter_reset@@Base>:
   2c1e0:	push	{fp, lr}
   2c1e4:	add	fp, sp, #4
   2c1e8:	sub	sp, sp, #16
   2c1ec:	str	r0, [fp, #-16]
   2c1f0:	ldr	r3, [fp, #-16]
   2c1f4:	ldr	r3, [r3]
   2c1f8:	str	r3, [fp, #-8]
   2c1fc:	ldr	r3, [fp, #-16]
   2c200:	ldr	r3, [r3]
   2c204:	cmp	r3, #0
   2c208:	beq	2c360 <flatcc_emitter_reset@@Base+0x180>
   2c20c:	ldr	r3, [fp, #-16]
   2c210:	ldr	r2, [r3]
   2c214:	ldr	r3, [fp, #-16]
   2c218:	str	r2, [r3, #4]
   2c21c:	ldr	r3, [fp, #-16]
   2c220:	ldr	r3, [r3]
   2c224:	add	r2, r3, #1472	; 0x5c0
   2c228:	ldr	r3, [fp, #-16]
   2c22c:	str	r2, [r3, #8]
   2c230:	ldr	r3, [fp, #-16]
   2c234:	ldr	r2, [r3, #8]
   2c238:	ldr	r3, [fp, #-16]
   2c23c:	str	r2, [r3, #16]
   2c240:	ldr	r3, [fp, #-16]
   2c244:	mov	r2, #1472	; 0x5c0
   2c248:	str	r2, [r3, #12]
   2c24c:	ldr	r3, [fp, #-16]
   2c250:	mov	r2, #1472	; 0x5c0
   2c254:	str	r2, [r3, #20]
   2c258:	ldr	r3, [fp, #-16]
   2c25c:	ldr	r3, [r3]
   2c260:	ldr	r2, [fp, #-16]
   2c264:	ldr	r2, [r2, #12]
   2c268:	rsb	r2, r2, #0
   2c26c:	str	r2, [r3, #2952]	; 0xb88
   2c270:	ldr	r3, [fp, #-16]
   2c274:	ldr	r3, [r3, #32]
   2c278:	cmp	r3, #0
   2c27c:	bne	2c290 <flatcc_emitter_reset@@Base+0xb0>
   2c280:	ldr	r3, [fp, #-16]
   2c284:	ldr	r2, [r3, #24]
   2c288:	ldr	r3, [fp, #-16]
   2c28c:	str	r2, [r3, #32]
   2c290:	ldr	r3, [fp, #-16]
   2c294:	ldr	r2, [r3, #32]
   2c298:	mov	r3, r2
   2c29c:	lsl	r3, r3, #1
   2c2a0:	add	r3, r3, r2
   2c2a4:	lsr	r2, r3, #2
   2c2a8:	ldr	r3, [fp, #-16]
   2c2ac:	ldr	r3, [r3, #24]
   2c2b0:	lsr	r3, r3, #2
   2c2b4:	add	r2, r2, r3
   2c2b8:	ldr	r3, [fp, #-16]
   2c2bc:	str	r2, [r3, #32]
   2c2c0:	ldr	r3, [fp, #-16]
   2c2c4:	mov	r2, #0
   2c2c8:	str	r2, [r3, #24]
   2c2cc:	b	2c324 <flatcc_emitter_reset@@Base+0x144>
   2c2d0:	ldr	r3, [fp, #-16]
   2c2d4:	ldr	r3, [r3, #4]
   2c2d8:	ldr	r3, [r3, #2944]	; 0xb80
   2c2dc:	str	r3, [fp, #-8]
   2c2e0:	ldr	r3, [fp, #-16]
   2c2e4:	ldr	r3, [r3, #4]
   2c2e8:	ldr	r2, [fp, #-8]
   2c2ec:	ldr	r2, [r2, #2944]	; 0xb80
   2c2f0:	str	r2, [r3, #2944]	; 0xb80
   2c2f4:	ldr	r3, [fp, #-8]
   2c2f8:	ldr	r3, [r3, #2944]	; 0xb80
   2c2fc:	ldr	r2, [fp, #-16]
   2c300:	ldr	r2, [r2, #4]
   2c304:	str	r2, [r3, #2948]	; 0xb84
   2c308:	ldr	r0, [fp, #-8]
   2c30c:	bl	125f0 <free@plt>
   2c310:	ldr	r3, [fp, #-16]
   2c314:	ldr	r3, [r3, #28]
   2c318:	sub	r2, r3, #2944	; 0xb80
   2c31c:	ldr	r3, [fp, #-16]
   2c320:	str	r2, [r3, #28]
   2c324:	ldr	r3, [fp, #-16]
   2c328:	ldr	r3, [r3, #32]
   2c32c:	lsl	r2, r3, #1
   2c330:	ldr	r3, [fp, #-16]
   2c334:	ldr	r3, [r3, #28]
   2c338:	cmp	r2, r3
   2c33c:	bcs	2c364 <flatcc_emitter_reset@@Base+0x184>
   2c340:	ldr	r3, [fp, #-16]
   2c344:	ldr	r3, [r3, #4]
   2c348:	ldr	r2, [r3, #2944]	; 0xb80
   2c34c:	ldr	r3, [fp, #-16]
   2c350:	ldr	r3, [r3]
   2c354:	cmp	r2, r3
   2c358:	bne	2c2d0 <flatcc_emitter_reset@@Base+0xf0>
   2c35c:	b	2c364 <flatcc_emitter_reset@@Base+0x184>
   2c360:	nop			; (mov r0, r0)
   2c364:	sub	sp, fp, #4
   2c368:	pop	{fp, pc}

0002c36c <flatcc_emitter_clear@@Base>:
   2c36c:	push	{fp, lr}
   2c370:	add	fp, sp, #4
   2c374:	sub	sp, sp, #16
   2c378:	str	r0, [fp, #-16]
   2c37c:	ldr	r3, [fp, #-16]
   2c380:	ldr	r3, [r3]
   2c384:	str	r3, [fp, #-8]
   2c388:	ldr	r3, [fp, #-8]
   2c38c:	cmp	r3, #0
   2c390:	beq	2c3f0 <flatcc_emitter_clear@@Base+0x84>
   2c394:	ldr	r3, [fp, #-8]
   2c398:	ldr	r3, [r3, #2948]	; 0xb84
   2c39c:	mov	r2, #0
   2c3a0:	str	r2, [r3, #2944]	; 0xb80
   2c3a4:	b	2c3c4 <flatcc_emitter_clear@@Base+0x58>
   2c3a8:	ldr	r3, [fp, #-8]
   2c3ac:	ldr	r3, [r3, #2944]	; 0xb80
   2c3b0:	str	r3, [fp, #-8]
   2c3b4:	ldr	r3, [fp, #-8]
   2c3b8:	ldr	r3, [r3, #2948]	; 0xb84
   2c3bc:	mov	r0, r3
   2c3c0:	bl	125f0 <free@plt>
   2c3c4:	ldr	r3, [fp, #-8]
   2c3c8:	ldr	r3, [r3, #2944]	; 0xb80
   2c3cc:	cmp	r3, #0
   2c3d0:	bne	2c3a8 <flatcc_emitter_clear@@Base+0x3c>
   2c3d4:	ldr	r0, [fp, #-8]
   2c3d8:	bl	125f0 <free@plt>
   2c3dc:	mov	r2, #36	; 0x24
   2c3e0:	mov	r1, #0
   2c3e4:	ldr	r0, [fp, #-16]
   2c3e8:	bl	126a4 <memset@plt>
   2c3ec:	b	2c3f4 <flatcc_emitter_clear@@Base+0x88>
   2c3f0:	nop			; (mov r0, r0)
   2c3f4:	sub	sp, fp, #4
   2c3f8:	pop	{fp, pc}

0002c3fc <flatcc_emitter@@Base>:
   2c3fc:	push	{fp, lr}
   2c400:	add	fp, sp, #4
   2c404:	sub	sp, sp, #24
   2c408:	str	r0, [fp, #-16]
   2c40c:	str	r1, [fp, #-20]	; 0xffffffec
   2c410:	str	r2, [fp, #-24]	; 0xffffffe8
   2c414:	str	r3, [fp, #-28]	; 0xffffffe4
   2c418:	ldr	r3, [fp, #-16]
   2c41c:	str	r3, [fp, #-12]
   2c420:	ldr	r3, [fp, #-12]
   2c424:	ldr	r2, [r3, #24]
   2c428:	ldr	r3, [fp, #4]
   2c42c:	add	r2, r2, r3
   2c430:	ldr	r3, [fp, #-12]
   2c434:	str	r2, [r3, #24]
   2c438:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c43c:	cmp	r3, #0
   2c440:	bge	2c508 <flatcc_emitter@@Base+0x10c>
   2c444:	ldr	r3, [fp, #-12]
   2c448:	ldr	r2, [r3, #12]
   2c44c:	ldr	r3, [fp, #4]
   2c450:	cmp	r2, r3
   2c454:	bcc	2c49c <flatcc_emitter@@Base+0xa0>
   2c458:	ldr	r3, [fp, #-12]
   2c45c:	ldr	r2, [r3, #8]
   2c460:	ldr	r3, [fp, #4]
   2c464:	rsb	r3, r3, #0
   2c468:	add	r2, r2, r3
   2c46c:	ldr	r3, [fp, #-12]
   2c470:	str	r2, [r3, #8]
   2c474:	ldr	r3, [fp, #-12]
   2c478:	ldr	r2, [r3, #12]
   2c47c:	ldr	r3, [fp, #4]
   2c480:	sub	r2, r2, r3
   2c484:	ldr	r3, [fp, #-12]
   2c488:	str	r2, [r3, #12]
   2c48c:	ldr	r3, [fp, #-12]
   2c490:	ldr	r3, [r3, #8]
   2c494:	str	r3, [fp, #-8]
   2c498:	b	2c5b4 <flatcc_emitter@@Base+0x1b8>
   2c49c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c4a0:	lsl	r3, r3, #3
   2c4a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c4a8:	add	r3, r2, r3
   2c4ac:	str	r3, [fp, #-20]	; 0xffffffec
   2c4b0:	b	2c4f0 <flatcc_emitter@@Base+0xf4>
   2c4b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c4b8:	sub	r3, r3, #8
   2c4bc:	str	r3, [fp, #-20]	; 0xffffffec
   2c4c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c4c4:	ldr	r1, [r3]
   2c4c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c4cc:	ldr	r3, [r3, #4]
   2c4d0:	mov	r2, r3
   2c4d4:	ldr	r0, [fp, #-12]
   2c4d8:	bl	2bf24 <flatcc_builder_get_emit_context@@Base+0x3f8>
   2c4dc:	mov	r3, r0
   2c4e0:	cmp	r3, #0
   2c4e4:	beq	2c4f0 <flatcc_emitter@@Base+0xf4>
   2c4e8:	mvn	r3, #0
   2c4ec:	b	2c60c <flatcc_emitter@@Base+0x210>
   2c4f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c4f4:	sub	r2, r3, #1
   2c4f8:	str	r2, [fp, #-24]	; 0xffffffe8
   2c4fc:	cmp	r3, #0
   2c500:	bne	2c4b4 <flatcc_emitter@@Base+0xb8>
   2c504:	b	2c5ac <flatcc_emitter@@Base+0x1b0>
   2c508:	ldr	r3, [fp, #-12]
   2c50c:	ldr	r2, [r3, #20]
   2c510:	ldr	r3, [fp, #4]
   2c514:	cmp	r2, r3
   2c518:	bcc	2c598 <flatcc_emitter@@Base+0x19c>
   2c51c:	ldr	r3, [fp, #-12]
   2c520:	ldr	r3, [r3, #16]
   2c524:	str	r3, [fp, #-8]
   2c528:	ldr	r3, [fp, #-12]
   2c52c:	ldr	r2, [r3, #16]
   2c530:	ldr	r3, [fp, #4]
   2c534:	add	r2, r2, r3
   2c538:	ldr	r3, [fp, #-12]
   2c53c:	str	r2, [r3, #16]
   2c540:	ldr	r3, [fp, #-12]
   2c544:	ldr	r2, [r3, #20]
   2c548:	ldr	r3, [fp, #4]
   2c54c:	sub	r2, r2, r3
   2c550:	ldr	r3, [fp, #-12]
   2c554:	str	r2, [r3, #20]
   2c558:	b	2c5b4 <flatcc_emitter@@Base+0x1b8>
   2c55c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c560:	ldr	r1, [r3]
   2c564:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c568:	ldr	r3, [r3, #4]
   2c56c:	mov	r2, r3
   2c570:	ldr	r0, [fp, #-12]
   2c574:	bl	2c02c <flatcc_builder_get_emit_context@@Base+0x500>
   2c578:	mov	r3, r0
   2c57c:	cmp	r3, #0
   2c580:	beq	2c58c <flatcc_emitter@@Base+0x190>
   2c584:	mvn	r3, #0
   2c588:	b	2c60c <flatcc_emitter@@Base+0x210>
   2c58c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c590:	add	r3, r3, #8
   2c594:	str	r3, [fp, #-20]	; 0xffffffec
   2c598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c59c:	sub	r2, r3, #1
   2c5a0:	str	r2, [fp, #-24]	; 0xffffffe8
   2c5a4:	cmp	r3, #0
   2c5a8:	bne	2c55c <flatcc_emitter@@Base+0x160>
   2c5ac:	mov	r3, #0
   2c5b0:	b	2c60c <flatcc_emitter@@Base+0x210>
   2c5b4:	b	2c5f4 <flatcc_emitter@@Base+0x1f8>
   2c5b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c5bc:	ldr	r1, [r3]
   2c5c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c5c4:	ldr	r3, [r3, #4]
   2c5c8:	mov	r2, r3
   2c5cc:	ldr	r0, [fp, #-8]
   2c5d0:	bl	125fc <memcpy@plt>
   2c5d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c5d8:	ldr	r3, [r3, #4]
   2c5dc:	ldr	r2, [fp, #-8]
   2c5e0:	add	r3, r2, r3
   2c5e4:	str	r3, [fp, #-8]
   2c5e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c5ec:	add	r3, r3, #8
   2c5f0:	str	r3, [fp, #-20]	; 0xffffffec
   2c5f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c5f8:	sub	r2, r3, #1
   2c5fc:	str	r2, [fp, #-24]	; 0xffffffe8
   2c600:	cmp	r3, #0
   2c604:	bne	2c5b8 <flatcc_emitter@@Base+0x1bc>
   2c608:	mov	r3, #0
   2c60c:	mov	r0, r3
   2c610:	sub	sp, fp, #4
   2c614:	pop	{fp, pc}

0002c618 <flatcc_emitter_copy_buffer@@Base>:
   2c618:	push	{fp, lr}
   2c61c:	add	fp, sp, #4
   2c620:	sub	sp, sp, #24
   2c624:	str	r0, [fp, #-16]
   2c628:	str	r1, [fp, #-20]	; 0xffffffec
   2c62c:	str	r2, [fp, #-24]	; 0xffffffe8
   2c630:	ldr	r3, [fp, #-16]
   2c634:	ldr	r2, [r3, #24]
   2c638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c63c:	cmp	r2, r3
   2c640:	bls	2c64c <flatcc_emitter_copy_buffer@@Base+0x34>
   2c644:	mov	r3, #0
   2c648:	b	2c74c <flatcc_emitter_copy_buffer@@Base+0x134>
   2c64c:	ldr	r3, [fp, #-16]
   2c650:	ldr	r3, [r3]
   2c654:	cmp	r3, #0
   2c658:	bne	2c664 <flatcc_emitter_copy_buffer@@Base+0x4c>
   2c65c:	mov	r3, #0
   2c660:	b	2c74c <flatcc_emitter_copy_buffer@@Base+0x134>
   2c664:	ldr	r3, [fp, #-16]
   2c668:	ldr	r2, [r3]
   2c66c:	ldr	r3, [fp, #-16]
   2c670:	ldr	r3, [r3, #4]
   2c674:	cmp	r2, r3
   2c678:	bne	2c6a0 <flatcc_emitter_copy_buffer@@Base+0x88>
   2c67c:	ldr	r3, [fp, #-16]
   2c680:	ldr	r1, [r3, #8]
   2c684:	ldr	r3, [fp, #-16]
   2c688:	ldr	r3, [r3, #24]
   2c68c:	mov	r2, r3
   2c690:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c694:	bl	125fc <memcpy@plt>
   2c698:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c69c:	b	2c74c <flatcc_emitter_copy_buffer@@Base+0x134>
   2c6a0:	ldr	r3, [fp, #-16]
   2c6a4:	ldr	r3, [r3, #12]
   2c6a8:	rsb	r3, r3, #2944	; 0xb80
   2c6ac:	str	r3, [fp, #-12]
   2c6b0:	ldr	r3, [fp, #-16]
   2c6b4:	ldr	r3, [r3, #8]
   2c6b8:	ldr	r2, [fp, #-12]
   2c6bc:	mov	r1, r3
   2c6c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c6c4:	bl	125fc <memcpy@plt>
   2c6c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c6cc:	ldr	r3, [fp, #-12]
   2c6d0:	add	r3, r2, r3
   2c6d4:	str	r3, [fp, #-20]	; 0xffffffec
   2c6d8:	ldr	r3, [fp, #-16]
   2c6dc:	ldr	r3, [r3]
   2c6e0:	ldr	r3, [r3, #2944]	; 0xb80
   2c6e4:	str	r3, [fp, #-8]
   2c6e8:	b	2c718 <flatcc_emitter_copy_buffer@@Base+0x100>
   2c6ec:	ldr	r3, [fp, #-8]
   2c6f0:	mov	r2, #2944	; 0xb80
   2c6f4:	mov	r1, r3
   2c6f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c6fc:	bl	125fc <memcpy@plt>
   2c700:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c704:	add	r3, r3, #2944	; 0xb80
   2c708:	str	r3, [fp, #-20]	; 0xffffffec
   2c70c:	ldr	r3, [fp, #-8]
   2c710:	ldr	r3, [r3, #2944]	; 0xb80
   2c714:	str	r3, [fp, #-8]
   2c718:	ldr	r3, [fp, #-16]
   2c71c:	ldr	r2, [r3, #4]
   2c720:	ldr	r3, [fp, #-8]
   2c724:	cmp	r2, r3
   2c728:	bne	2c6ec <flatcc_emitter_copy_buffer@@Base+0xd4>
   2c72c:	ldr	r1, [fp, #-8]
   2c730:	ldr	r3, [fp, #-16]
   2c734:	ldr	r3, [r3, #20]
   2c738:	rsb	r3, r3, #2944	; 0xb80
   2c73c:	mov	r2, r3
   2c740:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c744:	bl	125fc <memcpy@plt>
   2c748:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c74c:	mov	r0, r3
   2c750:	sub	sp, fp, #4
   2c754:	pop	{fp, pc}
   2c758:	push	{fp}		; (str fp, [sp, #-4]!)
   2c75c:	add	fp, sp, #0
   2c760:	sub	sp, sp, #12
   2c764:	mov	r3, r0
   2c768:	strb	r3, [fp, #-5]
   2c76c:	ldrb	r3, [fp, #-5]
   2c770:	mov	r0, r3
   2c774:	add	sp, fp, #0
   2c778:	pop	{fp}		; (ldr fp, [sp], #4)
   2c77c:	bx	lr
   2c780:	push	{fp, lr}
   2c784:	add	fp, sp, #4
   2c788:	sub	sp, sp, #8
   2c78c:	str	r0, [fp, #-8]
   2c790:	mov	r3, r1
   2c794:	strb	r3, [fp, #-9]
   2c798:	ldrb	r3, [fp, #-9]
   2c79c:	mov	r0, r3
   2c7a0:	bl	2c758 <flatcc_emitter_copy_buffer@@Base+0x140>
   2c7a4:	mov	r3, r0
   2c7a8:	mov	r2, r3
   2c7ac:	ldr	r3, [fp, #-8]
   2c7b0:	strb	r2, [r3]
   2c7b4:	nop			; (mov r0, r0)
   2c7b8:	sub	sp, fp, #4
   2c7bc:	pop	{fp, pc}
   2c7c0:	push	{fp, lr}
   2c7c4:	add	fp, sp, #4
   2c7c8:	sub	sp, sp, #16
   2c7cc:	str	r0, [fp, #-8]
   2c7d0:	str	r1, [fp, #-12]
   2c7d4:	str	r2, [fp, #-16]
   2c7d8:	str	r3, [fp, #-20]	; 0xffffffec
   2c7dc:	mov	r2, #44	; 0x2c
   2c7e0:	mov	r1, #0
   2c7e4:	ldr	r0, [fp, #-8]
   2c7e8:	bl	126a4 <memset@plt>
   2c7ec:	ldr	r3, [fp, #-8]
   2c7f0:	ldr	r2, [fp, #-12]
   2c7f4:	str	r2, [r3]
   2c7f8:	ldr	r3, [fp, #-8]
   2c7fc:	ldr	r2, [fp, #-16]
   2c800:	str	r2, [r3, #4]
   2c804:	ldr	r3, [fp, #-8]
   2c808:	mov	r2, #1
   2c80c:	str	r2, [r3, #16]
   2c810:	ldr	r3, [fp, #-8]
   2c814:	ldr	r2, [fp, #4]
   2c818:	str	r2, [r3, #8]
   2c81c:	ldr	r3, [fp, #-8]
   2c820:	ldr	r2, [fp, #-16]
   2c824:	str	r2, [r3, #28]
   2c828:	ldr	r3, [fp, #-8]
   2c82c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c830:	str	r2, [r3, #32]
   2c834:	ldr	r3, [fp, #-8]
   2c838:	ldr	r2, [fp, #-16]
   2c83c:	str	r2, [r3, #36]	; 0x24
   2c840:	nop			; (mov r0, r0)
   2c844:	sub	sp, fp, #4
   2c848:	pop	{fp, pc}
   2c84c:	push	{fp, lr}
   2c850:	add	fp, sp, #4
   2c854:	sub	sp, sp, #16
   2c858:	str	r0, [fp, #-8]
   2c85c:	str	r1, [fp, #-12]
   2c860:	str	r2, [fp, #-16]
   2c864:	ldr	r2, [fp, #-16]
   2c868:	ldr	r3, [fp, #-12]
   2c86c:	sub	r3, r2, r3
   2c870:	cmp	r3, #1
   2c874:	ble	2c8c0 <flatcc_emitter_copy_buffer@@Base+0x2a8>
   2c878:	ldr	r3, [fp, #-12]
   2c87c:	ldrb	r3, [r3]
   2c880:	cmp	r3, #32
   2c884:	bls	2c890 <flatcc_emitter_copy_buffer@@Base+0x278>
   2c888:	ldr	r3, [fp, #-12]
   2c88c:	b	2c8d4 <flatcc_emitter_copy_buffer@@Base+0x2bc>
   2c890:	ldr	r3, [fp, #-12]
   2c894:	ldrb	r3, [r3]
   2c898:	cmp	r3, #32
   2c89c:	bne	2c8c0 <flatcc_emitter_copy_buffer@@Base+0x2a8>
   2c8a0:	ldr	r3, [fp, #-12]
   2c8a4:	add	r3, r3, #1
   2c8a8:	ldrb	r3, [r3]
   2c8ac:	cmp	r3, #32
   2c8b0:	bls	2c8c0 <flatcc_emitter_copy_buffer@@Base+0x2a8>
   2c8b4:	ldr	r3, [fp, #-12]
   2c8b8:	add	r3, r3, #1
   2c8bc:	b	2c8d4 <flatcc_emitter_copy_buffer@@Base+0x2bc>
   2c8c0:	ldr	r2, [fp, #-16]
   2c8c4:	ldr	r1, [fp, #-12]
   2c8c8:	ldr	r0, [fp, #-8]
   2c8cc:	bl	31ae8 <flatcc_json_parser_space_ext@@Base>
   2c8d0:	mov	r3, r0
   2c8d4:	mov	r0, r3
   2c8d8:	sub	sp, fp, #4
   2c8dc:	pop	{fp, pc}
   2c8e0:	push	{fp, lr}
   2c8e4:	add	fp, sp, #4
   2c8e8:	sub	sp, sp, #16
   2c8ec:	str	r0, [fp, #-8]
   2c8f0:	str	r1, [fp, #-12]
   2c8f4:	str	r2, [fp, #-16]
   2c8f8:	ldr	r2, [fp, #-12]
   2c8fc:	ldr	r3, [fp, #-16]
   2c900:	cmp	r2, r3
   2c904:	beq	2c918 <flatcc_emitter_copy_buffer@@Base+0x300>
   2c908:	ldr	r3, [fp, #-12]
   2c90c:	ldrb	r3, [r3]
   2c910:	cmp	r3, #34	; 0x22
   2c914:	beq	2c934 <flatcc_emitter_copy_buffer@@Base+0x31c>
   2c918:	mov	r3, #16
   2c91c:	ldr	r2, [fp, #-16]
   2c920:	ldr	r1, [fp, #-12]
   2c924:	ldr	r0, [fp, #-8]
   2c928:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2c92c:	mov	r3, r0
   2c930:	b	2c944 <flatcc_emitter_copy_buffer@@Base+0x32c>
   2c934:	ldr	r3, [fp, #-12]
   2c938:	add	r3, r3, #1
   2c93c:	str	r3, [fp, #-12]
   2c940:	ldr	r3, [fp, #-12]
   2c944:	mov	r0, r3
   2c948:	sub	sp, fp, #4
   2c94c:	pop	{fp, pc}
   2c950:	push	{fp, lr}
   2c954:	add	fp, sp, #4
   2c958:	sub	sp, sp, #16
   2c95c:	str	r0, [fp, #-8]
   2c960:	str	r1, [fp, #-12]
   2c964:	str	r2, [fp, #-16]
   2c968:	ldr	r2, [fp, #-12]
   2c96c:	ldr	r3, [fp, #-16]
   2c970:	cmp	r2, r3
   2c974:	beq	2c988 <flatcc_emitter_copy_buffer@@Base+0x370>
   2c978:	ldr	r3, [fp, #-12]
   2c97c:	ldrb	r3, [r3]
   2c980:	cmp	r3, #34	; 0x22
   2c984:	beq	2c9a4 <flatcc_emitter_copy_buffer@@Base+0x38c>
   2c988:	mov	r3, #20
   2c98c:	ldr	r2, [fp, #-16]
   2c990:	ldr	r1, [fp, #-12]
   2c994:	ldr	r0, [fp, #-8]
   2c998:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2c99c:	mov	r3, r0
   2c9a0:	b	2c9b4 <flatcc_emitter_copy_buffer@@Base+0x39c>
   2c9a4:	ldr	r3, [fp, #-12]
   2c9a8:	add	r3, r3, #1
   2c9ac:	str	r3, [fp, #-12]
   2c9b0:	ldr	r3, [fp, #-12]
   2c9b4:	mov	r0, r3
   2c9b8:	sub	sp, fp, #4
   2c9bc:	pop	{fp, pc}
   2c9c0:	push	{fp, lr}
   2c9c4:	add	fp, sp, #4
   2c9c8:	sub	sp, sp, #16
   2c9cc:	str	r0, [fp, #-8]
   2c9d0:	str	r1, [fp, #-12]
   2c9d4:	str	r2, [fp, #-16]
   2c9d8:	ldr	r2, [fp, #-12]
   2c9dc:	ldr	r3, [fp, #-16]
   2c9e0:	cmp	r2, r3
   2c9e4:	bne	2c9f0 <flatcc_emitter_copy_buffer@@Base+0x3d8>
   2c9e8:	ldr	r3, [fp, #-12]
   2c9ec:	b	2ca58 <flatcc_emitter_copy_buffer@@Base+0x440>
   2c9f0:	ldr	r3, [fp, #-12]
   2c9f4:	ldrb	r3, [r3]
   2c9f8:	cmp	r3, #34	; 0x22
   2c9fc:	bne	2ca1c <flatcc_emitter_copy_buffer@@Base+0x404>
   2ca00:	ldr	r3, [fp, #-12]
   2ca04:	add	r3, r3, #1
   2ca08:	str	r3, [fp, #-12]
   2ca0c:	ldr	r3, [fp, #-8]
   2ca10:	mov	r2, #0
   2ca14:	str	r2, [r3, #12]
   2ca18:	b	2ca54 <flatcc_emitter_copy_buffer@@Base+0x43c>
   2ca1c:	ldr	r3, [fp, #-12]
   2ca20:	ldrb	r3, [r3]
   2ca24:	cmp	r3, #46	; 0x2e
   2ca28:	bne	2ca48 <flatcc_emitter_copy_buffer@@Base+0x430>
   2ca2c:	mov	r3, #5
   2ca30:	ldr	r2, [fp, #-16]
   2ca34:	ldr	r1, [fp, #-12]
   2ca38:	ldr	r0, [fp, #-8]
   2ca3c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2ca40:	mov	r3, r0
   2ca44:	b	2ca58 <flatcc_emitter_copy_buffer@@Base+0x440>
   2ca48:	ldr	r3, [fp, #-8]
   2ca4c:	mov	r2, #1
   2ca50:	str	r2, [r3, #12]
   2ca54:	ldr	r3, [fp, #-12]
   2ca58:	mov	r0, r3
   2ca5c:	sub	sp, fp, #4
   2ca60:	pop	{fp, pc}
   2ca64:	push	{fp, lr}
   2ca68:	add	fp, sp, #4
   2ca6c:	sub	sp, sp, #24
   2ca70:	str	r0, [fp, #-16]
   2ca74:	str	r1, [fp, #-20]	; 0xffffffec
   2ca78:	str	r2, [fp, #-24]	; 0xffffffe8
   2ca7c:	mov	r3, #0
   2ca80:	strb	r3, [fp, #-5]
   2ca84:	ldr	r3, [fp, #-16]
   2ca88:	ldr	r3, [r3, #12]
   2ca8c:	cmp	r3, #0
   2ca90:	beq	2cbb8 <flatcc_emitter_copy_buffer@@Base+0x5a0>
   2ca94:	b	2cb2c <flatcc_emitter_copy_buffer@@Base+0x514>
   2ca98:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ca9c:	ldrb	r3, [r3]
   2caa0:	strb	r3, [fp, #-6]
   2caa4:	ldrb	r3, [fp, #-6]
   2caa8:	strb	r3, [fp, #-5]
   2caac:	ldrb	r3, [fp, #-6]
   2cab0:	cmp	r3, #95	; 0x5f
   2cab4:	beq	2cae8 <flatcc_emitter_copy_buffer@@Base+0x4d0>
   2cab8:	ldrb	r3, [fp, #-6]
   2cabc:	cmp	r3, #46	; 0x2e
   2cac0:	beq	2cae8 <flatcc_emitter_copy_buffer@@Base+0x4d0>
   2cac4:	ldrsb	r3, [fp, #-6]
   2cac8:	cmp	r3, #0
   2cacc:	blt	2cae8 <flatcc_emitter_copy_buffer@@Base+0x4d0>
   2cad0:	ldrb	r3, [fp, #-6]
   2cad4:	cmp	r3, #47	; 0x2f
   2cad8:	bls	2caf8 <flatcc_emitter_copy_buffer@@Base+0x4e0>
   2cadc:	ldrb	r3, [fp, #-6]
   2cae0:	cmp	r3, #57	; 0x39
   2cae4:	bhi	2caf8 <flatcc_emitter_copy_buffer@@Base+0x4e0>
   2cae8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2caec:	add	r3, r3, #1
   2caf0:	str	r3, [fp, #-20]	; 0xffffffec
   2caf4:	b	2cb2c <flatcc_emitter_copy_buffer@@Base+0x514>
   2caf8:	ldrb	r3, [fp, #-6]
   2cafc:	orr	r3, r3, #32
   2cb00:	strb	r3, [fp, #-6]
   2cb04:	ldrb	r3, [fp, #-6]
   2cb08:	cmp	r3, #96	; 0x60
   2cb0c:	bls	2cb50 <flatcc_emitter_copy_buffer@@Base+0x538>
   2cb10:	ldrb	r3, [fp, #-6]
   2cb14:	cmp	r3, #122	; 0x7a
   2cb18:	bhi	2cb50 <flatcc_emitter_copy_buffer@@Base+0x538>
   2cb1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cb20:	add	r3, r3, #1
   2cb24:	str	r3, [fp, #-20]	; 0xffffffec
   2cb28:	nop			; (mov r0, r0)
   2cb2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2cb30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cb34:	cmp	r2, r3
   2cb38:	beq	2cb54 <flatcc_emitter_copy_buffer@@Base+0x53c>
   2cb3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cb40:	ldrb	r3, [r3]
   2cb44:	cmp	r3, #32
   2cb48:	bhi	2ca98 <flatcc_emitter_copy_buffer@@Base+0x480>
   2cb4c:	b	2cb54 <flatcc_emitter_copy_buffer@@Base+0x53c>
   2cb50:	nop			; (mov r0, r0)
   2cb54:	ldrb	r3, [fp, #-5]
   2cb58:	cmp	r3, #46	; 0x2e
   2cb5c:	bne	2cc28 <flatcc_emitter_copy_buffer@@Base+0x610>
   2cb60:	mov	r3, #5
   2cb64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2cb68:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cb6c:	ldr	r0, [fp, #-16]
   2cb70:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2cb74:	mov	r3, r0
   2cb78:	b	2cc2c <flatcc_emitter_copy_buffer@@Base+0x614>
   2cb7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cb80:	ldrb	r3, [r3]
   2cb84:	cmp	r3, #92	; 0x5c
   2cb88:	bne	2cbac <flatcc_emitter_copy_buffer@@Base+0x594>
   2cb8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2cb90:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cb94:	sub	r3, r2, r3
   2cb98:	cmp	r3, #1
   2cb9c:	ble	2cbdc <flatcc_emitter_copy_buffer@@Base+0x5c4>
   2cba0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cba4:	add	r3, r3, #1
   2cba8:	str	r3, [fp, #-20]	; 0xffffffec
   2cbac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cbb0:	add	r3, r3, #1
   2cbb4:	str	r3, [fp, #-20]	; 0xffffffec
   2cbb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2cbbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cbc0:	cmp	r2, r3
   2cbc4:	beq	2cbe0 <flatcc_emitter_copy_buffer@@Base+0x5c8>
   2cbc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cbcc:	ldrb	r3, [r3]
   2cbd0:	cmp	r3, #34	; 0x22
   2cbd4:	bne	2cb7c <flatcc_emitter_copy_buffer@@Base+0x564>
   2cbd8:	b	2cbe0 <flatcc_emitter_copy_buffer@@Base+0x5c8>
   2cbdc:	nop			; (mov r0, r0)
   2cbe0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2cbe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cbe8:	cmp	r2, r3
   2cbec:	beq	2cc00 <flatcc_emitter_copy_buffer@@Base+0x5e8>
   2cbf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cbf4:	ldrb	r3, [r3]
   2cbf8:	cmp	r3, #34	; 0x22
   2cbfc:	beq	2cc1c <flatcc_emitter_copy_buffer@@Base+0x604>
   2cc00:	mov	r3, #20
   2cc04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2cc08:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cc0c:	ldr	r0, [fp, #-16]
   2cc10:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2cc14:	mov	r3, r0
   2cc18:	b	2cc2c <flatcc_emitter_copy_buffer@@Base+0x614>
   2cc1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cc20:	add	r3, r3, #1
   2cc24:	str	r3, [fp, #-20]	; 0xffffffec
   2cc28:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cc2c:	mov	r0, r3
   2cc30:	sub	sp, fp, #4
   2cc34:	pop	{fp, pc}
   2cc38:	push	{fp, lr}
   2cc3c:	add	fp, sp, #4
   2cc40:	sub	sp, sp, #16
   2cc44:	str	r0, [fp, #-8]
   2cc48:	str	r1, [fp, #-12]
   2cc4c:	str	r2, [fp, #-16]
   2cc50:	ldr	r2, [fp, #-16]
   2cc54:	ldr	r1, [fp, #-12]
   2cc58:	ldr	r0, [fp, #-8]
   2cc5c:	bl	2c9c0 <flatcc_emitter_copy_buffer@@Base+0x3a8>
   2cc60:	str	r0, [fp, #-12]
   2cc64:	ldr	r3, [fp, #-8]
   2cc68:	ldr	r3, [r3, #12]
   2cc6c:	cmp	r3, #0
   2cc70:	bne	2cc88 <flatcc_emitter_copy_buffer@@Base+0x670>
   2cc74:	ldr	r2, [fp, #-16]
   2cc78:	ldr	r1, [fp, #-12]
   2cc7c:	ldr	r0, [fp, #-8]
   2cc80:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   2cc84:	str	r0, [fp, #-12]
   2cc88:	ldr	r3, [fp, #-12]
   2cc8c:	mov	r0, r3
   2cc90:	sub	sp, fp, #4
   2cc94:	pop	{fp, pc}
   2cc98:	push	{fp, lr}
   2cc9c:	add	fp, sp, #4
   2cca0:	sub	sp, sp, #16
   2cca4:	str	r0, [fp, #-8]
   2cca8:	str	r1, [fp, #-12]
   2ccac:	str	r2, [fp, #-16]
   2ccb0:	str	r3, [fp, #-20]	; 0xffffffec
   2ccb4:	ldr	r2, [fp, #-16]
   2ccb8:	ldr	r1, [fp, #-12]
   2ccbc:	ldr	r0, [fp, #-8]
   2ccc0:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   2ccc4:	str	r0, [fp, #-12]
   2ccc8:	ldr	r2, [fp, #-12]
   2cccc:	ldr	r3, [fp, #-16]
   2ccd0:	cmp	r2, r3
   2ccd4:	bne	2ccec <flatcc_emitter_copy_buffer@@Base+0x6d4>
   2ccd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ccdc:	mov	r2, #0
   2cce0:	str	r2, [r3]
   2cce4:	ldr	r3, [fp, #-12]
   2cce8:	b	2cdf4 <flatcc_emitter_copy_buffer@@Base+0x7dc>
   2ccec:	ldr	r3, [fp, #-12]
   2ccf0:	ldrb	r3, [r3]
   2ccf4:	cmp	r3, #44	; 0x2c
   2ccf8:	beq	2cd54 <flatcc_emitter_copy_buffer@@Base+0x73c>
   2ccfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cd00:	mov	r2, #0
   2cd04:	str	r2, [r3]
   2cd08:	ldr	r3, [fp, #-12]
   2cd0c:	ldrb	r3, [r3]
   2cd10:	cmp	r3, #125	; 0x7d
   2cd14:	beq	2cd34 <flatcc_emitter_copy_buffer@@Base+0x71c>
   2cd18:	mov	r3, #10
   2cd1c:	ldr	r2, [fp, #-16]
   2cd20:	ldr	r1, [fp, #-12]
   2cd24:	ldr	r0, [fp, #-8]
   2cd28:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2cd2c:	mov	r3, r0
   2cd30:	b	2cdf4 <flatcc_emitter_copy_buffer@@Base+0x7dc>
   2cd34:	ldr	r3, [fp, #-12]
   2cd38:	add	r3, r3, #1
   2cd3c:	ldr	r2, [fp, #-16]
   2cd40:	mov	r1, r3
   2cd44:	ldr	r0, [fp, #-8]
   2cd48:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   2cd4c:	mov	r3, r0
   2cd50:	b	2cdf4 <flatcc_emitter_copy_buffer@@Base+0x7dc>
   2cd54:	ldr	r3, [fp, #-12]
   2cd58:	add	r3, r3, #1
   2cd5c:	ldr	r2, [fp, #-16]
   2cd60:	mov	r1, r3
   2cd64:	ldr	r0, [fp, #-8]
   2cd68:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   2cd6c:	str	r0, [fp, #-12]
   2cd70:	ldr	r2, [fp, #-12]
   2cd74:	ldr	r3, [fp, #-16]
   2cd78:	cmp	r2, r3
   2cd7c:	bne	2cda8 <flatcc_emitter_copy_buffer@@Base+0x790>
   2cd80:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cd84:	mov	r2, #0
   2cd88:	str	r2, [r3]
   2cd8c:	mov	r3, #10
   2cd90:	ldr	r2, [fp, #-16]
   2cd94:	ldr	r1, [fp, #-12]
   2cd98:	ldr	r0, [fp, #-8]
   2cd9c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2cda0:	mov	r3, r0
   2cda4:	b	2cdf4 <flatcc_emitter_copy_buffer@@Base+0x7dc>
   2cda8:	ldr	r3, [fp, #-12]
   2cdac:	ldrb	r3, [r3]
   2cdb0:	cmp	r3, #125	; 0x7d
   2cdb4:	bne	2cde4 <flatcc_emitter_copy_buffer@@Base+0x7cc>
   2cdb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cdbc:	mov	r2, #0
   2cdc0:	str	r2, [r3]
   2cdc4:	ldr	r3, [fp, #-12]
   2cdc8:	add	r3, r3, #1
   2cdcc:	ldr	r2, [fp, #-16]
   2cdd0:	mov	r1, r3
   2cdd4:	ldr	r0, [fp, #-8]
   2cdd8:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   2cddc:	mov	r3, r0
   2cde0:	b	2cdf4 <flatcc_emitter_copy_buffer@@Base+0x7dc>
   2cde4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cde8:	mov	r2, #1
   2cdec:	str	r2, [r3]
   2cdf0:	ldr	r3, [fp, #-12]
   2cdf4:	mov	r0, r3
   2cdf8:	sub	sp, fp, #4
   2cdfc:	pop	{fp, pc}
   2ce00:	push	{fp, lr}
   2ce04:	add	fp, sp, #4
   2ce08:	sub	sp, sp, #16
   2ce0c:	str	r0, [fp, #-8]
   2ce10:	str	r1, [fp, #-12]
   2ce14:	str	r2, [fp, #-16]
   2ce18:	str	r3, [fp, #-20]	; 0xffffffec
   2ce1c:	ldr	r2, [fp, #-12]
   2ce20:	ldr	r3, [fp, #-16]
   2ce24:	cmp	r2, r3
   2ce28:	beq	2ce3c <flatcc_emitter_copy_buffer@@Base+0x824>
   2ce2c:	ldr	r3, [fp, #-12]
   2ce30:	ldrb	r3, [r3]
   2ce34:	cmp	r3, #91	; 0x5b
   2ce38:	beq	2ce64 <flatcc_emitter_copy_buffer@@Base+0x84c>
   2ce3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ce40:	mov	r2, #0
   2ce44:	str	r2, [r3]
   2ce48:	mov	r3, #22
   2ce4c:	ldr	r2, [fp, #-16]
   2ce50:	ldr	r1, [fp, #-12]
   2ce54:	ldr	r0, [fp, #-8]
   2ce58:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2ce5c:	mov	r3, r0
   2ce60:	b	2cedc <flatcc_emitter_copy_buffer@@Base+0x8c4>
   2ce64:	ldr	r3, [fp, #-12]
   2ce68:	add	r3, r3, #1
   2ce6c:	ldr	r2, [fp, #-16]
   2ce70:	mov	r1, r3
   2ce74:	ldr	r0, [fp, #-8]
   2ce78:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   2ce7c:	str	r0, [fp, #-12]
   2ce80:	ldr	r2, [fp, #-12]
   2ce84:	ldr	r3, [fp, #-16]
   2ce88:	cmp	r2, r3
   2ce8c:	beq	2cecc <flatcc_emitter_copy_buffer@@Base+0x8b4>
   2ce90:	ldr	r3, [fp, #-12]
   2ce94:	ldrb	r3, [r3]
   2ce98:	cmp	r3, #93	; 0x5d
   2ce9c:	bne	2cecc <flatcc_emitter_copy_buffer@@Base+0x8b4>
   2cea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cea4:	mov	r2, #0
   2cea8:	str	r2, [r3]
   2ceac:	ldr	r3, [fp, #-12]
   2ceb0:	add	r3, r3, #1
   2ceb4:	ldr	r2, [fp, #-16]
   2ceb8:	mov	r1, r3
   2cebc:	ldr	r0, [fp, #-8]
   2cec0:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   2cec4:	mov	r3, r0
   2cec8:	b	2cedc <flatcc_emitter_copy_buffer@@Base+0x8c4>
   2cecc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ced0:	mov	r2, #1
   2ced4:	str	r2, [r3]
   2ced8:	ldr	r3, [fp, #-12]
   2cedc:	mov	r0, r3
   2cee0:	sub	sp, fp, #4
   2cee4:	pop	{fp, pc}
   2cee8:	push	{fp, lr}
   2ceec:	add	fp, sp, #4
   2cef0:	sub	sp, sp, #16
   2cef4:	str	r0, [fp, #-8]
   2cef8:	str	r1, [fp, #-12]
   2cefc:	str	r2, [fp, #-16]
   2cf00:	str	r3, [fp, #-20]	; 0xffffffec
   2cf04:	ldr	r2, [fp, #-16]
   2cf08:	ldr	r1, [fp, #-12]
   2cf0c:	ldr	r0, [fp, #-8]
   2cf10:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   2cf14:	str	r0, [fp, #-12]
   2cf18:	ldr	r2, [fp, #-12]
   2cf1c:	ldr	r3, [fp, #-16]
   2cf20:	cmp	r2, r3
   2cf24:	bne	2cf3c <flatcc_emitter_copy_buffer@@Base+0x924>
   2cf28:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cf2c:	mov	r2, #0
   2cf30:	str	r2, [r3]
   2cf34:	ldr	r3, [fp, #-12]
   2cf38:	b	2d044 <flatcc_emitter_copy_buffer@@Base+0xa2c>
   2cf3c:	ldr	r3, [fp, #-12]
   2cf40:	ldrb	r3, [r3]
   2cf44:	cmp	r3, #44	; 0x2c
   2cf48:	beq	2cfa4 <flatcc_emitter_copy_buffer@@Base+0x98c>
   2cf4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cf50:	mov	r2, #0
   2cf54:	str	r2, [r3]
   2cf58:	ldr	r3, [fp, #-12]
   2cf5c:	ldrb	r3, [r3]
   2cf60:	cmp	r3, #93	; 0x5d
   2cf64:	beq	2cf84 <flatcc_emitter_copy_buffer@@Base+0x96c>
   2cf68:	mov	r3, #9
   2cf6c:	ldr	r2, [fp, #-16]
   2cf70:	ldr	r1, [fp, #-12]
   2cf74:	ldr	r0, [fp, #-8]
   2cf78:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2cf7c:	mov	r3, r0
   2cf80:	b	2d044 <flatcc_emitter_copy_buffer@@Base+0xa2c>
   2cf84:	ldr	r3, [fp, #-12]
   2cf88:	add	r3, r3, #1
   2cf8c:	ldr	r2, [fp, #-16]
   2cf90:	mov	r1, r3
   2cf94:	ldr	r0, [fp, #-8]
   2cf98:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   2cf9c:	mov	r3, r0
   2cfa0:	b	2d044 <flatcc_emitter_copy_buffer@@Base+0xa2c>
   2cfa4:	ldr	r3, [fp, #-12]
   2cfa8:	add	r3, r3, #1
   2cfac:	ldr	r2, [fp, #-16]
   2cfb0:	mov	r1, r3
   2cfb4:	ldr	r0, [fp, #-8]
   2cfb8:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   2cfbc:	str	r0, [fp, #-12]
   2cfc0:	ldr	r2, [fp, #-12]
   2cfc4:	ldr	r3, [fp, #-16]
   2cfc8:	cmp	r2, r3
   2cfcc:	bne	2cff8 <flatcc_emitter_copy_buffer@@Base+0x9e0>
   2cfd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cfd4:	mov	r2, #0
   2cfd8:	str	r2, [r3]
   2cfdc:	mov	r3, #9
   2cfe0:	ldr	r2, [fp, #-16]
   2cfe4:	ldr	r1, [fp, #-12]
   2cfe8:	ldr	r0, [fp, #-8]
   2cfec:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2cff0:	mov	r3, r0
   2cff4:	b	2d044 <flatcc_emitter_copy_buffer@@Base+0xa2c>
   2cff8:	ldr	r3, [fp, #-12]
   2cffc:	ldrb	r3, [r3]
   2d000:	cmp	r3, #93	; 0x5d
   2d004:	bne	2d034 <flatcc_emitter_copy_buffer@@Base+0xa1c>
   2d008:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d00c:	mov	r2, #0
   2d010:	str	r2, [r3]
   2d014:	ldr	r3, [fp, #-12]
   2d018:	add	r3, r3, #1
   2d01c:	ldr	r2, [fp, #-16]
   2d020:	mov	r1, r3
   2d024:	ldr	r0, [fp, #-8]
   2d028:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   2d02c:	mov	r3, r0
   2d030:	b	2d044 <flatcc_emitter_copy_buffer@@Base+0xa2c>
   2d034:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d038:	mov	r2, #1
   2d03c:	str	r2, [r3]
   2d040:	ldr	r3, [fp, #-12]
   2d044:	mov	r0, r3
   2d048:	sub	sp, fp, #4
   2d04c:	pop	{fp, pc}
   2d050:	push	{fp, lr}
   2d054:	add	fp, sp, #4
   2d058:	sub	sp, sp, #16
   2d05c:	str	r0, [fp, #-8]
   2d060:	str	r1, [fp, #-12]
   2d064:	str	r2, [fp, #-16]
   2d068:	str	r3, [fp, #-20]	; 0xffffffec
   2d06c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d070:	cmp	r3, #0
   2d074:	beq	2d094 <flatcc_emitter_copy_buffer@@Base+0xa7c>
   2d078:	mov	r3, #8
   2d07c:	ldr	r2, [fp, #-16]
   2d080:	ldr	r1, [fp, #-12]
   2d084:	ldr	r0, [fp, #-8]
   2d088:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d08c:	mov	r3, r0
   2d090:	b	2d0a4 <flatcc_emitter_copy_buffer@@Base+0xa8c>
   2d094:	ldr	r1, [fp, #12]
   2d098:	ldrd	r2, [fp, #4]
   2d09c:	strd	r2, [r1]
   2d0a0:	ldr	r3, [fp, #-12]
   2d0a4:	mov	r0, r3
   2d0a8:	sub	sp, fp, #4
   2d0ac:	pop	{fp, pc}
   2d0b0:	push	{fp, lr}
   2d0b4:	add	fp, sp, #4
   2d0b8:	sub	sp, sp, #16
   2d0bc:	str	r0, [fp, #-8]
   2d0c0:	str	r1, [fp, #-12]
   2d0c4:	str	r2, [fp, #-16]
   2d0c8:	str	r3, [fp, #-20]	; 0xffffffec
   2d0cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d0d0:	cmp	r3, #0
   2d0d4:	beq	2d0f4 <flatcc_emitter_copy_buffer@@Base+0xadc>
   2d0d8:	mov	r3, #8
   2d0dc:	ldr	r2, [fp, #-16]
   2d0e0:	ldr	r1, [fp, #-12]
   2d0e4:	ldr	r0, [fp, #-8]
   2d0e8:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d0ec:	mov	r3, r0
   2d0f0:	b	2d120 <flatcc_emitter_copy_buffer@@Base+0xb08>
   2d0f4:	ldr	r2, [fp, #4]
   2d0f8:	ldr	r3, [fp, #8]
   2d0fc:	orr	r3, r2, r3
   2d100:	cmp	r3, #0
   2d104:	movne	r3, #1
   2d108:	moveq	r3, #0
   2d10c:	uxtb	r3, r3
   2d110:	mov	r2, r3
   2d114:	ldr	r3, [fp, #12]
   2d118:	strb	r2, [r3]
   2d11c:	ldr	r3, [fp, #-12]
   2d120:	mov	r0, r3
   2d124:	sub	sp, fp, #4
   2d128:	pop	{fp, pc}
   2d12c:	push	{fp, lr}
   2d130:	add	fp, sp, #4
   2d134:	sub	sp, sp, #16
   2d138:	str	r0, [fp, #-8]
   2d13c:	str	r1, [fp, #-12]
   2d140:	str	r2, [fp, #-16]
   2d144:	str	r3, [fp, #-20]	; 0xffffffec
   2d148:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d14c:	cmp	r3, #0
   2d150:	beq	2d170 <flatcc_emitter_copy_buffer@@Base+0xb58>
   2d154:	mov	r3, #8
   2d158:	ldr	r2, [fp, #-16]
   2d15c:	ldr	r1, [fp, #-12]
   2d160:	ldr	r0, [fp, #-8]
   2d164:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d168:	mov	r3, r0
   2d16c:	b	2d1b4 <flatcc_emitter_copy_buffer@@Base+0xb9c>
   2d170:	ldrd	r2, [fp, #4]
   2d174:	mvn	r0, #0
   2d178:	mov	r1, #0
   2d17c:	cmp	r3, r1
   2d180:	cmpeq	r2, r0
   2d184:	bls	2d1a4 <flatcc_emitter_copy_buffer@@Base+0xb8c>
   2d188:	mov	r3, #7
   2d18c:	ldr	r2, [fp, #-16]
   2d190:	ldr	r1, [fp, #-12]
   2d194:	ldr	r0, [fp, #-8]
   2d198:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d19c:	mov	r3, r0
   2d1a0:	b	2d1b4 <flatcc_emitter_copy_buffer@@Base+0xb9c>
   2d1a4:	ldr	r2, [fp, #4]
   2d1a8:	ldr	r3, [fp, #12]
   2d1ac:	str	r2, [r3]
   2d1b0:	ldr	r3, [fp, #-12]
   2d1b4:	mov	r0, r3
   2d1b8:	sub	sp, fp, #4
   2d1bc:	pop	{fp, pc}
   2d1c0:	push	{fp, lr}
   2d1c4:	add	fp, sp, #4
   2d1c8:	sub	sp, sp, #16
   2d1cc:	str	r0, [fp, #-8]
   2d1d0:	str	r1, [fp, #-12]
   2d1d4:	str	r2, [fp, #-16]
   2d1d8:	str	r3, [fp, #-20]	; 0xffffffec
   2d1dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d1e0:	cmp	r3, #0
   2d1e4:	beq	2d204 <flatcc_emitter_copy_buffer@@Base+0xbec>
   2d1e8:	mov	r3, #8
   2d1ec:	ldr	r2, [fp, #-16]
   2d1f0:	ldr	r1, [fp, #-12]
   2d1f4:	ldr	r0, [fp, #-8]
   2d1f8:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d1fc:	mov	r3, r0
   2d200:	b	2d248 <flatcc_emitter_copy_buffer@@Base+0xc30>
   2d204:	ldrd	r2, [fp, #4]
   2d208:	ldr	r0, [pc, #68]	; 2d254 <flatcc_emitter_copy_buffer@@Base+0xc3c>
   2d20c:	mov	r1, #0
   2d210:	cmp	r3, r1
   2d214:	cmpeq	r2, r0
   2d218:	bls	2d238 <flatcc_emitter_copy_buffer@@Base+0xc20>
   2d21c:	mov	r3, #7
   2d220:	ldr	r2, [fp, #-16]
   2d224:	ldr	r1, [fp, #-12]
   2d228:	ldr	r0, [fp, #-8]
   2d22c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d230:	mov	r3, r0
   2d234:	b	2d248 <flatcc_emitter_copy_buffer@@Base+0xc30>
   2d238:	ldrh	r2, [fp, #4]
   2d23c:	ldr	r3, [fp, #12]
   2d240:	strh	r2, [r3]
   2d244:	ldr	r3, [fp, #-12]
   2d248:	mov	r0, r3
   2d24c:	sub	sp, fp, #4
   2d250:	pop	{fp, pc}
   2d254:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   2d258:	push	{fp, lr}
   2d25c:	add	fp, sp, #4
   2d260:	sub	sp, sp, #16
   2d264:	str	r0, [fp, #-8]
   2d268:	str	r1, [fp, #-12]
   2d26c:	str	r2, [fp, #-16]
   2d270:	str	r3, [fp, #-20]	; 0xffffffec
   2d274:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d278:	cmp	r3, #0
   2d27c:	beq	2d29c <flatcc_emitter_copy_buffer@@Base+0xc84>
   2d280:	mov	r3, #8
   2d284:	ldr	r2, [fp, #-16]
   2d288:	ldr	r1, [fp, #-12]
   2d28c:	ldr	r0, [fp, #-8]
   2d290:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d294:	mov	r3, r0
   2d298:	b	2d2d8 <flatcc_emitter_copy_buffer@@Base+0xcc0>
   2d29c:	ldrd	r2, [fp, #4]
   2d2a0:	cmp	r3, #0
   2d2a4:	cmpeq	r2, #255	; 0xff
   2d2a8:	bls	2d2c8 <flatcc_emitter_copy_buffer@@Base+0xcb0>
   2d2ac:	mov	r3, #7
   2d2b0:	ldr	r2, [fp, #-16]
   2d2b4:	ldr	r1, [fp, #-12]
   2d2b8:	ldr	r0, [fp, #-8]
   2d2bc:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d2c0:	mov	r3, r0
   2d2c4:	b	2d2d8 <flatcc_emitter_copy_buffer@@Base+0xcc0>
   2d2c8:	ldrb	r2, [fp, #4]
   2d2cc:	ldr	r3, [fp, #12]
   2d2d0:	strb	r2, [r3]
   2d2d4:	ldr	r3, [fp, #-12]
   2d2d8:	mov	r0, r3
   2d2dc:	sub	sp, fp, #4
   2d2e0:	pop	{fp, pc}
   2d2e4:	push	{fp, lr}
   2d2e8:	add	fp, sp, #4
   2d2ec:	sub	sp, sp, #16
   2d2f0:	str	r0, [fp, #-8]
   2d2f4:	str	r1, [fp, #-12]
   2d2f8:	str	r2, [fp, #-16]
   2d2fc:	str	r3, [fp, #-20]	; 0xffffffec
   2d300:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d304:	cmp	r3, #0
   2d308:	beq	2d350 <flatcc_emitter_copy_buffer@@Base+0xd38>
   2d30c:	ldrd	r2, [fp, #4]
   2d310:	cmp	r3, #-2147483648	; 0x80000000
   2d314:	cmpeq	r2, #0
   2d318:	bls	2d338 <flatcc_emitter_copy_buffer@@Base+0xd20>
   2d31c:	mov	r3, #8
   2d320:	ldr	r2, [fp, #-16]
   2d324:	ldr	r1, [fp, #-12]
   2d328:	ldr	r0, [fp, #-8]
   2d32c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d330:	mov	r3, r0
   2d334:	b	2d38c <flatcc_emitter_copy_buffer@@Base+0xd74>
   2d338:	ldrd	r2, [fp, #4]
   2d33c:	rsbs	r2, r2, #0
   2d340:	rsc	r3, r3, #0
   2d344:	ldr	r1, [fp, #12]
   2d348:	strd	r2, [r1]
   2d34c:	b	2d388 <flatcc_emitter_copy_buffer@@Base+0xd70>
   2d350:	ldrd	r2, [fp, #4]
   2d354:	cmp	r2, #0
   2d358:	sbcs	r3, r3, #0
   2d35c:	bge	2d37c <flatcc_emitter_copy_buffer@@Base+0xd64>
   2d360:	mov	r3, #7
   2d364:	ldr	r2, [fp, #-16]
   2d368:	ldr	r1, [fp, #-12]
   2d36c:	ldr	r0, [fp, #-8]
   2d370:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d374:	mov	r3, r0
   2d378:	b	2d38c <flatcc_emitter_copy_buffer@@Base+0xd74>
   2d37c:	ldrd	r2, [fp, #4]
   2d380:	ldr	r1, [fp, #12]
   2d384:	strd	r2, [r1]
   2d388:	ldr	r3, [fp, #-12]
   2d38c:	mov	r0, r3
   2d390:	sub	sp, fp, #4
   2d394:	pop	{fp, pc}
   2d398:	push	{fp, lr}
   2d39c:	add	fp, sp, #4
   2d3a0:	sub	sp, sp, #16
   2d3a4:	str	r0, [fp, #-8]
   2d3a8:	str	r1, [fp, #-12]
   2d3ac:	str	r2, [fp, #-16]
   2d3b0:	str	r3, [fp, #-20]	; 0xffffffec
   2d3b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d3b8:	cmp	r3, #0
   2d3bc:	beq	2d404 <flatcc_emitter_copy_buffer@@Base+0xdec>
   2d3c0:	ldrd	r2, [fp, #4]
   2d3c4:	cmp	r3, #0
   2d3c8:	cmpeq	r2, #-2147483648	; 0x80000000
   2d3cc:	bls	2d3ec <flatcc_emitter_copy_buffer@@Base+0xdd4>
   2d3d0:	mov	r3, #8
   2d3d4:	ldr	r2, [fp, #-16]
   2d3d8:	ldr	r1, [fp, #-12]
   2d3dc:	ldr	r0, [fp, #-8]
   2d3e0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d3e4:	mov	r3, r0
   2d3e8:	b	2d448 <flatcc_emitter_copy_buffer@@Base+0xe30>
   2d3ec:	ldr	r3, [fp, #4]
   2d3f0:	rsb	r3, r3, #0
   2d3f4:	mov	r2, r3
   2d3f8:	ldr	r3, [fp, #12]
   2d3fc:	str	r2, [r3]
   2d400:	b	2d444 <flatcc_emitter_copy_buffer@@Base+0xe2c>
   2d404:	ldrd	r2, [fp, #4]
   2d408:	mvn	r0, #-2147483648	; 0x80000000
   2d40c:	mov	r1, #0
   2d410:	cmp	r3, r1
   2d414:	cmpeq	r2, r0
   2d418:	bls	2d438 <flatcc_emitter_copy_buffer@@Base+0xe20>
   2d41c:	mov	r3, #7
   2d420:	ldr	r2, [fp, #-16]
   2d424:	ldr	r1, [fp, #-12]
   2d428:	ldr	r0, [fp, #-8]
   2d42c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d430:	mov	r3, r0
   2d434:	b	2d448 <flatcc_emitter_copy_buffer@@Base+0xe30>
   2d438:	ldr	r2, [fp, #4]
   2d43c:	ldr	r3, [fp, #12]
   2d440:	str	r2, [r3]
   2d444:	ldr	r3, [fp, #-12]
   2d448:	mov	r0, r3
   2d44c:	sub	sp, fp, #4
   2d450:	pop	{fp, pc}
   2d454:	push	{fp, lr}
   2d458:	add	fp, sp, #4
   2d45c:	sub	sp, sp, #16
   2d460:	str	r0, [fp, #-8]
   2d464:	str	r1, [fp, #-12]
   2d468:	str	r2, [fp, #-16]
   2d46c:	str	r3, [fp, #-20]	; 0xffffffec
   2d470:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d474:	cmp	r3, #0
   2d478:	beq	2d4c4 <flatcc_emitter_copy_buffer@@Base+0xeac>
   2d47c:	ldrd	r2, [fp, #4]
   2d480:	cmp	r3, #0
   2d484:	cmpeq	r2, #32768	; 0x8000
   2d488:	bls	2d4a8 <flatcc_emitter_copy_buffer@@Base+0xe90>
   2d48c:	mov	r3, #8
   2d490:	ldr	r2, [fp, #-16]
   2d494:	ldr	r1, [fp, #-12]
   2d498:	ldr	r0, [fp, #-8]
   2d49c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d4a0:	mov	r3, r0
   2d4a4:	b	2d508 <flatcc_emitter_copy_buffer@@Base+0xef0>
   2d4a8:	ldrh	r3, [fp, #4]
   2d4ac:	rsb	r3, r3, #0
   2d4b0:	uxth	r3, r3
   2d4b4:	sxth	r2, r3
   2d4b8:	ldr	r3, [fp, #12]
   2d4bc:	strh	r2, [r3]
   2d4c0:	b	2d504 <flatcc_emitter_copy_buffer@@Base+0xeec>
   2d4c4:	ldrd	r2, [fp, #4]
   2d4c8:	ldr	r0, [pc, #68]	; 2d514 <flatcc_emitter_copy_buffer@@Base+0xefc>
   2d4cc:	mov	r1, #0
   2d4d0:	cmp	r3, r1
   2d4d4:	cmpeq	r2, r0
   2d4d8:	bls	2d4f8 <flatcc_emitter_copy_buffer@@Base+0xee0>
   2d4dc:	mov	r3, #7
   2d4e0:	ldr	r2, [fp, #-16]
   2d4e4:	ldr	r1, [fp, #-12]
   2d4e8:	ldr	r0, [fp, #-8]
   2d4ec:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d4f0:	mov	r3, r0
   2d4f4:	b	2d508 <flatcc_emitter_copy_buffer@@Base+0xef0>
   2d4f8:	ldrsh	r2, [fp, #4]
   2d4fc:	ldr	r3, [fp, #12]
   2d500:	strh	r2, [r3]
   2d504:	ldr	r3, [fp, #-12]
   2d508:	mov	r0, r3
   2d50c:	sub	sp, fp, #4
   2d510:	pop	{fp, pc}
   2d514:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   2d518:	push	{fp, lr}
   2d51c:	add	fp, sp, #4
   2d520:	sub	sp, sp, #16
   2d524:	str	r0, [fp, #-8]
   2d528:	str	r1, [fp, #-12]
   2d52c:	str	r2, [fp, #-16]
   2d530:	str	r3, [fp, #-20]	; 0xffffffec
   2d534:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d538:	cmp	r3, #0
   2d53c:	beq	2d588 <flatcc_emitter_copy_buffer@@Base+0xf70>
   2d540:	ldrd	r2, [fp, #4]
   2d544:	cmp	r3, #0
   2d548:	cmpeq	r2, #128	; 0x80
   2d54c:	bls	2d56c <flatcc_emitter_copy_buffer@@Base+0xf54>
   2d550:	mov	r3, #8
   2d554:	ldr	r2, [fp, #-16]
   2d558:	ldr	r1, [fp, #-12]
   2d55c:	ldr	r0, [fp, #-8]
   2d560:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d564:	mov	r3, r0
   2d568:	b	2d5c4 <flatcc_emitter_copy_buffer@@Base+0xfac>
   2d56c:	ldrb	r3, [fp, #4]
   2d570:	rsb	r3, r3, #0
   2d574:	uxtb	r3, r3
   2d578:	sxtb	r2, r3
   2d57c:	ldr	r3, [fp, #12]
   2d580:	strb	r2, [r3]
   2d584:	b	2d5c0 <flatcc_emitter_copy_buffer@@Base+0xfa8>
   2d588:	ldrd	r2, [fp, #4]
   2d58c:	cmp	r3, #0
   2d590:	cmpeq	r2, #127	; 0x7f
   2d594:	bls	2d5b4 <flatcc_emitter_copy_buffer@@Base+0xf9c>
   2d598:	mov	r3, #7
   2d59c:	ldr	r2, [fp, #-16]
   2d5a0:	ldr	r1, [fp, #-12]
   2d5a4:	ldr	r0, [fp, #-8]
   2d5a8:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d5ac:	mov	r3, r0
   2d5b0:	b	2d5c4 <flatcc_emitter_copy_buffer@@Base+0xfac>
   2d5b4:	ldrsb	r2, [fp, #4]
   2d5b8:	ldr	r3, [fp, #12]
   2d5bc:	strb	r2, [r3]
   2d5c0:	ldr	r3, [fp, #-12]
   2d5c4:	mov	r0, r3
   2d5c8:	sub	sp, fp, #4
   2d5cc:	pop	{fp, pc}
   2d5d0:	push	{fp, lr}
   2d5d4:	add	fp, sp, #4
   2d5d8:	sub	sp, sp, #16
   2d5dc:	str	r0, [fp, #-8]
   2d5e0:	str	r1, [fp, #-12]
   2d5e4:	str	r2, [fp, #-16]
   2d5e8:	str	r3, [fp, #-20]	; 0xffffffec
   2d5ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d5f0:	cmp	r3, #0
   2d5f4:	beq	2d60c <flatcc_emitter_copy_buffer@@Base+0xff4>
   2d5f8:	ldrd	r0, [fp, #4]
   2d5fc:	bl	353f4 <flatcc_json_parser_struct_as_root@@Base+0x8e0>
   2d600:	mov	r3, r0
   2d604:	eor	r2, r3, #-2147483648	; 0x80000000
   2d608:	b	2d618 <flatcc_emitter_copy_buffer@@Base+0x1000>
   2d60c:	ldrd	r0, [fp, #4]
   2d610:	bl	353f4 <flatcc_json_parser_struct_as_root@@Base+0x8e0>
   2d614:	mov	r2, r0
   2d618:	ldr	r3, [fp, #12]
   2d61c:	str	r2, [r3]
   2d620:	ldr	r3, [fp, #-12]
   2d624:	mov	r0, r3
   2d628:	sub	sp, fp, #4
   2d62c:	pop	{fp, pc}
   2d630:	push	{fp, lr}
   2d634:	add	fp, sp, #4
   2d638:	sub	sp, sp, #16
   2d63c:	str	r0, [fp, #-8]
   2d640:	str	r1, [fp, #-12]
   2d644:	str	r2, [fp, #-16]
   2d648:	str	r3, [fp, #-20]	; 0xffffffec
   2d64c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d650:	cmp	r3, #0
   2d654:	beq	2d670 <flatcc_emitter_copy_buffer@@Base+0x1058>
   2d658:	ldrd	r0, [fp, #4]
   2d65c:	bl	351bc <flatcc_json_parser_struct_as_root@@Base+0x6a8>
   2d660:	mov	r2, r0
   2d664:	mov	r3, r1
   2d668:	eor	r3, r3, #-2147483648	; 0x80000000
   2d66c:	b	2d680 <flatcc_emitter_copy_buffer@@Base+0x1068>
   2d670:	ldrd	r0, [fp, #4]
   2d674:	bl	351bc <flatcc_json_parser_struct_as_root@@Base+0x6a8>
   2d678:	mov	r2, r0
   2d67c:	mov	r3, r1
   2d680:	ldr	r1, [fp, #12]
   2d684:	strd	r2, [r1]
   2d688:	ldr	r3, [fp, #-12]
   2d68c:	mov	r0, r3
   2d690:	sub	sp, fp, #4
   2d694:	pop	{fp, pc}
   2d698:	push	{fp, lr}
   2d69c:	add	fp, sp, #4
   2d6a0:	sub	sp, sp, #56	; 0x38
   2d6a4:	str	r0, [fp, #-32]	; 0xffffffe0
   2d6a8:	str	r1, [fp, #-36]	; 0xffffffdc
   2d6ac:	str	r2, [fp, #-40]	; 0xffffffd8
   2d6b0:	str	r3, [fp, #-44]	; 0xffffffd4
   2d6b4:	mov	r2, #0
   2d6b8:	mov	r3, #0
   2d6bc:	strd	r2, [fp, #-20]	; 0xffffffec
   2d6c0:	mov	r3, #0
   2d6c4:	str	r3, [fp, #-24]	; 0xffffffe8
   2d6c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d6cc:	str	r3, [fp, #-8]
   2d6d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d6d4:	mov	r2, #0
   2d6d8:	strb	r2, [r3]
   2d6dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d6e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d6e4:	cmp	r2, r3
   2d6e8:	bne	2d6f4 <flatcc_emitter_copy_buffer@@Base+0x10dc>
   2d6ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d6f0:	b	2d75c <flatcc_emitter_copy_buffer@@Base+0x1144>
   2d6f4:	sub	r2, fp, #24
   2d6f8:	sub	r3, fp, #20
   2d6fc:	str	r3, [sp]
   2d700:	mov	r3, r2
   2d704:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d708:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d70c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d710:	bl	33610 <flatcc_json_parser_integer@@Base>
   2d714:	str	r0, [fp, #-36]	; 0xffffffdc
   2d718:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d71c:	ldr	r3, [fp, #-8]
   2d720:	cmp	r2, r3
   2d724:	beq	2d758 <flatcc_emitter_copy_buffer@@Base+0x1140>
   2d728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d72c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2d730:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d734:	str	r1, [sp, #8]
   2d738:	strd	r2, [sp]
   2d73c:	mov	r3, r0
   2d740:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d744:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d748:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d74c:	bl	2d258 <flatcc_emitter_copy_buffer@@Base+0xc40>
   2d750:	mov	r3, r0
   2d754:	b	2d75c <flatcc_emitter_copy_buffer@@Base+0x1144>
   2d758:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d75c:	mov	r0, r3
   2d760:	sub	sp, fp, #4
   2d764:	pop	{fp, pc}
   2d768:	push	{r4, fp, lr}
   2d76c:	add	fp, sp, #8
   2d770:	sub	sp, sp, #76	; 0x4c
   2d774:	str	r0, [fp, #-56]	; 0xffffffc8
   2d778:	str	r1, [fp, #-60]	; 0xffffffc4
   2d77c:	str	r2, [fp, #-64]	; 0xffffffc0
   2d780:	str	r3, [fp, #-68]	; 0xffffffbc
   2d784:	mov	r2, #0
   2d788:	mov	r3, #0
   2d78c:	strd	r2, [fp, #-36]	; 0xffffffdc
   2d790:	mov	r3, #0
   2d794:	str	r3, [fp, #-20]	; 0xffffffec
   2d798:	ldr	r1, [fp, #4]
   2d79c:	mov	r2, #0
   2d7a0:	mov	r3, #0
   2d7a4:	strd	r2, [r1]
   2d7a8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2d7ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2d7b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2d7b4:	bl	2cc38 <flatcc_emitter_copy_buffer@@Base+0x620>
   2d7b8:	str	r0, [fp, #-60]	; 0xffffffc4
   2d7bc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2d7c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d7c4:	cmp	r2, r3
   2d7c8:	bne	2d7d4 <flatcc_emitter_copy_buffer@@Base+0x11bc>
   2d7cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d7d0:	b	2d934 <flatcc_emitter_copy_buffer@@Base+0x131c>
   2d7d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2d7d8:	str	r3, [fp, #-16]
   2d7dc:	ldr	r3, [fp, #-16]
   2d7e0:	ldr	r4, [r3]
   2d7e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d7e8:	str	r3, [fp, #-24]	; 0xffffffe8
   2d7ec:	sub	r2, fp, #48	; 0x30
   2d7f0:	sub	r3, fp, #52	; 0x34
   2d7f4:	str	r3, [sp, #4]
   2d7f8:	sub	r3, fp, #44	; 0x2c
   2d7fc:	str	r3, [sp]
   2d800:	mov	r3, r2
   2d804:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2d808:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d80c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2d810:	blx	r4
   2d814:	str	r0, [fp, #-60]	; 0xffffffc4
   2d818:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2d81c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d820:	cmp	r2, r3
   2d824:	bne	2d830 <flatcc_emitter_copy_buffer@@Base+0x1218>
   2d828:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d82c:	b	2d934 <flatcc_emitter_copy_buffer@@Base+0x131c>
   2d830:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2d834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d838:	cmp	r2, r3
   2d83c:	bne	2d85c <flatcc_emitter_copy_buffer@@Base+0x1244>
   2d840:	ldr	r3, [fp, #-16]
   2d844:	add	r3, r3, #4
   2d848:	str	r3, [fp, #-16]
   2d84c:	ldr	r3, [fp, #-16]
   2d850:	ldr	r3, [r3]
   2d854:	cmp	r3, #0
   2d858:	bne	2d7dc <flatcc_emitter_copy_buffer@@Base+0x11c4>
   2d85c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d860:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d864:	cmp	r2, r3
   2d868:	bne	2d888 <flatcc_emitter_copy_buffer@@Base+0x1270>
   2d86c:	mov	r3, #23
   2d870:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2d874:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2d878:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2d87c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d880:	mov	r3, r0
   2d884:	b	2d934 <flatcc_emitter_copy_buffer@@Base+0x131c>
   2d888:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d88c:	add	r2, r3, #1
   2d890:	str	r2, [fp, #-20]	; 0xffffffec
   2d894:	cmp	r3, #0
   2d898:	beq	2d8c8 <flatcc_emitter_copy_buffer@@Base+0x12b0>
   2d89c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d8a0:	ldr	r3, [r3, #12]
   2d8a4:	cmp	r3, #0
   2d8a8:	beq	2d8c8 <flatcc_emitter_copy_buffer@@Base+0x12b0>
   2d8ac:	mov	r3, #14
   2d8b0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2d8b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2d8b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2d8bc:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2d8c0:	mov	r3, r0
   2d8c4:	b	2d934 <flatcc_emitter_copy_buffer@@Base+0x131c>
   2d8c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d8cc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2d8d0:	sub	r1, fp, #36	; 0x24
   2d8d4:	str	r1, [sp, #8]
   2d8d8:	strd	r2, [sp]
   2d8dc:	mov	r3, r0
   2d8e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2d8e4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2d8e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2d8ec:	bl	2d050 <flatcc_emitter_copy_buffer@@Base+0xa38>
   2d8f0:	mov	r2, r0
   2d8f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d8f8:	cmp	r2, r3
   2d8fc:	bne	2d908 <flatcc_emitter_copy_buffer@@Base+0x12f0>
   2d900:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d904:	b	2d934 <flatcc_emitter_copy_buffer@@Base+0x131c>
   2d908:	ldr	r3, [fp, #4]
   2d90c:	ldrd	r0, [r3]
   2d910:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2d914:	adds	r2, r2, r0
   2d918:	adc	r3, r3, r1
   2d91c:	ldr	r1, [fp, #4]
   2d920:	strd	r2, [r1]
   2d924:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d928:	cmp	r3, #0
   2d92c:	bne	2d7d4 <flatcc_emitter_copy_buffer@@Base+0x11bc>
   2d930:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d934:	mov	r0, r3
   2d938:	sub	sp, fp, #8
   2d93c:	pop	{r4, fp, pc}
   2d940:	push	{r4, fp, lr}
   2d944:	add	fp, sp, #8
   2d948:	sub	sp, sp, #68	; 0x44
   2d94c:	str	r0, [fp, #-48]	; 0xffffffd0
   2d950:	str	r1, [fp, #-52]	; 0xffffffcc
   2d954:	str	r2, [fp, #-56]	; 0xffffffc8
   2d958:	str	r3, [fp, #-60]	; 0xffffffc4
   2d95c:	mov	r3, #0
   2d960:	str	r3, [fp, #-28]	; 0xffffffe4
   2d964:	mov	r3, #0
   2d968:	str	r3, [fp, #-20]	; 0xffffffec
   2d96c:	ldr	r3, [fp, #4]
   2d970:	mov	r2, #0
   2d974:	str	r2, [r3]
   2d978:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2d97c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2d980:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d984:	bl	2cc38 <flatcc_emitter_copy_buffer@@Base+0x620>
   2d988:	str	r0, [fp, #-52]	; 0xffffffcc
   2d98c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2d990:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d994:	cmp	r2, r3
   2d998:	bne	2d9a4 <flatcc_emitter_copy_buffer@@Base+0x138c>
   2d99c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d9a0:	b	2db00 <flatcc_emitter_copy_buffer@@Base+0x14e8>
   2d9a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d9a8:	str	r3, [fp, #-16]
   2d9ac:	ldr	r3, [fp, #-16]
   2d9b0:	ldr	r4, [r3]
   2d9b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d9b8:	str	r3, [fp, #-24]	; 0xffffffe8
   2d9bc:	sub	r2, fp, #40	; 0x28
   2d9c0:	sub	r3, fp, #44	; 0x2c
   2d9c4:	str	r3, [sp, #4]
   2d9c8:	sub	r3, fp, #36	; 0x24
   2d9cc:	str	r3, [sp]
   2d9d0:	mov	r3, r2
   2d9d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2d9d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d9dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d9e0:	blx	r4
   2d9e4:	str	r0, [fp, #-52]	; 0xffffffcc
   2d9e8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2d9ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d9f0:	cmp	r2, r3
   2d9f4:	bne	2da00 <flatcc_emitter_copy_buffer@@Base+0x13e8>
   2d9f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d9fc:	b	2db00 <flatcc_emitter_copy_buffer@@Base+0x14e8>
   2da00:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2da04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da08:	cmp	r2, r3
   2da0c:	bne	2da2c <flatcc_emitter_copy_buffer@@Base+0x1414>
   2da10:	ldr	r3, [fp, #-16]
   2da14:	add	r3, r3, #4
   2da18:	str	r3, [fp, #-16]
   2da1c:	ldr	r3, [fp, #-16]
   2da20:	ldr	r3, [r3]
   2da24:	cmp	r3, #0
   2da28:	bne	2d9ac <flatcc_emitter_copy_buffer@@Base+0x1394>
   2da2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2da30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2da34:	cmp	r2, r3
   2da38:	bne	2da58 <flatcc_emitter_copy_buffer@@Base+0x1440>
   2da3c:	mov	r3, #23
   2da40:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2da44:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2da48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2da4c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2da50:	mov	r3, r0
   2da54:	b	2db00 <flatcc_emitter_copy_buffer@@Base+0x14e8>
   2da58:	ldr	r3, [fp, #-20]	; 0xffffffec
   2da5c:	add	r2, r3, #1
   2da60:	str	r2, [fp, #-20]	; 0xffffffec
   2da64:	cmp	r3, #0
   2da68:	beq	2da98 <flatcc_emitter_copy_buffer@@Base+0x1480>
   2da6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2da70:	ldr	r3, [r3, #12]
   2da74:	cmp	r3, #0
   2da78:	beq	2da98 <flatcc_emitter_copy_buffer@@Base+0x1480>
   2da7c:	mov	r3, #14
   2da80:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2da84:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2da88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2da8c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2da90:	mov	r3, r0
   2da94:	b	2db00 <flatcc_emitter_copy_buffer@@Base+0x14e8>
   2da98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2da9c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2daa0:	sub	r1, fp, #28
   2daa4:	str	r1, [sp, #8]
   2daa8:	strd	r2, [sp]
   2daac:	mov	r3, r0
   2dab0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2dab4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2dab8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2dabc:	bl	2d12c <flatcc_emitter_copy_buffer@@Base+0xb14>
   2dac0:	mov	r2, r0
   2dac4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dac8:	cmp	r2, r3
   2dacc:	bne	2dad8 <flatcc_emitter_copy_buffer@@Base+0x14c0>
   2dad0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dad4:	b	2db00 <flatcc_emitter_copy_buffer@@Base+0x14e8>
   2dad8:	ldr	r3, [fp, #4]
   2dadc:	ldr	r2, [r3]
   2dae0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2dae4:	add	r2, r2, r3
   2dae8:	ldr	r3, [fp, #4]
   2daec:	str	r2, [r3]
   2daf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2daf4:	cmp	r3, #0
   2daf8:	bne	2d9a4 <flatcc_emitter_copy_buffer@@Base+0x138c>
   2dafc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2db00:	mov	r0, r3
   2db04:	sub	sp, fp, #8
   2db08:	pop	{r4, fp, pc}
   2db0c:	push	{r4, fp, lr}
   2db10:	add	fp, sp, #8
   2db14:	sub	sp, sp, #68	; 0x44
   2db18:	str	r0, [fp, #-48]	; 0xffffffd0
   2db1c:	str	r1, [fp, #-52]	; 0xffffffcc
   2db20:	str	r2, [fp, #-56]	; 0xffffffc8
   2db24:	str	r3, [fp, #-60]	; 0xffffffc4
   2db28:	mov	r3, #0
   2db2c:	strh	r3, [fp, #-26]	; 0xffffffe6
   2db30:	mov	r3, #0
   2db34:	str	r3, [fp, #-20]	; 0xffffffec
   2db38:	ldr	r3, [fp, #4]
   2db3c:	mov	r2, #0
   2db40:	strh	r2, [r3]
   2db44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2db48:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2db4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2db50:	bl	2cc38 <flatcc_emitter_copy_buffer@@Base+0x620>
   2db54:	str	r0, [fp, #-52]	; 0xffffffcc
   2db58:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2db5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2db60:	cmp	r2, r3
   2db64:	bne	2db70 <flatcc_emitter_copy_buffer@@Base+0x1558>
   2db68:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2db6c:	b	2dcd0 <flatcc_emitter_copy_buffer@@Base+0x16b8>
   2db70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2db74:	str	r3, [fp, #-16]
   2db78:	ldr	r3, [fp, #-16]
   2db7c:	ldr	r4, [r3]
   2db80:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2db84:	str	r3, [fp, #-24]	; 0xffffffe8
   2db88:	sub	r2, fp, #40	; 0x28
   2db8c:	sub	r3, fp, #44	; 0x2c
   2db90:	str	r3, [sp, #4]
   2db94:	sub	r3, fp, #36	; 0x24
   2db98:	str	r3, [sp]
   2db9c:	mov	r3, r2
   2dba0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2dba4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2dba8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2dbac:	blx	r4
   2dbb0:	str	r0, [fp, #-52]	; 0xffffffcc
   2dbb4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2dbb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dbbc:	cmp	r2, r3
   2dbc0:	bne	2dbcc <flatcc_emitter_copy_buffer@@Base+0x15b4>
   2dbc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2dbc8:	b	2dcd0 <flatcc_emitter_copy_buffer@@Base+0x16b8>
   2dbcc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2dbd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dbd4:	cmp	r2, r3
   2dbd8:	bne	2dbf8 <flatcc_emitter_copy_buffer@@Base+0x15e0>
   2dbdc:	ldr	r3, [fp, #-16]
   2dbe0:	add	r3, r3, #4
   2dbe4:	str	r3, [fp, #-16]
   2dbe8:	ldr	r3, [fp, #-16]
   2dbec:	ldr	r3, [r3]
   2dbf0:	cmp	r3, #0
   2dbf4:	bne	2db78 <flatcc_emitter_copy_buffer@@Base+0x1560>
   2dbf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2dbfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2dc00:	cmp	r2, r3
   2dc04:	bne	2dc24 <flatcc_emitter_copy_buffer@@Base+0x160c>
   2dc08:	mov	r3, #23
   2dc0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2dc10:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2dc14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2dc18:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2dc1c:	mov	r3, r0
   2dc20:	b	2dcd0 <flatcc_emitter_copy_buffer@@Base+0x16b8>
   2dc24:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dc28:	add	r2, r3, #1
   2dc2c:	str	r2, [fp, #-20]	; 0xffffffec
   2dc30:	cmp	r3, #0
   2dc34:	beq	2dc64 <flatcc_emitter_copy_buffer@@Base+0x164c>
   2dc38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2dc3c:	ldr	r3, [r3, #12]
   2dc40:	cmp	r3, #0
   2dc44:	beq	2dc64 <flatcc_emitter_copy_buffer@@Base+0x164c>
   2dc48:	mov	r3, #14
   2dc4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2dc50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2dc54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2dc58:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2dc5c:	mov	r3, r0
   2dc60:	b	2dcd0 <flatcc_emitter_copy_buffer@@Base+0x16b8>
   2dc64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2dc68:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2dc6c:	sub	r1, fp, #26
   2dc70:	str	r1, [sp, #8]
   2dc74:	strd	r2, [sp]
   2dc78:	mov	r3, r0
   2dc7c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2dc80:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2dc84:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2dc88:	bl	2d1c0 <flatcc_emitter_copy_buffer@@Base+0xba8>
   2dc8c:	mov	r2, r0
   2dc90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dc94:	cmp	r2, r3
   2dc98:	bne	2dca4 <flatcc_emitter_copy_buffer@@Base+0x168c>
   2dc9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dca0:	b	2dcd0 <flatcc_emitter_copy_buffer@@Base+0x16b8>
   2dca4:	ldr	r3, [fp, #4]
   2dca8:	ldrh	r2, [r3]
   2dcac:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   2dcb0:	add	r3, r2, r3
   2dcb4:	uxth	r2, r3
   2dcb8:	ldr	r3, [fp, #4]
   2dcbc:	strh	r2, [r3]
   2dcc0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dcc4:	cmp	r3, #0
   2dcc8:	bne	2db70 <flatcc_emitter_copy_buffer@@Base+0x1558>
   2dccc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2dcd0:	mov	r0, r3
   2dcd4:	sub	sp, fp, #8
   2dcd8:	pop	{r4, fp, pc}
   2dcdc:	push	{r4, fp, lr}
   2dce0:	add	fp, sp, #8
   2dce4:	sub	sp, sp, #68	; 0x44
   2dce8:	str	r0, [fp, #-48]	; 0xffffffd0
   2dcec:	str	r1, [fp, #-52]	; 0xffffffcc
   2dcf0:	str	r2, [fp, #-56]	; 0xffffffc8
   2dcf4:	str	r3, [fp, #-60]	; 0xffffffc4
   2dcf8:	mov	r3, #0
   2dcfc:	strb	r3, [fp, #-25]	; 0xffffffe7
   2dd00:	mov	r3, #0
   2dd04:	str	r3, [fp, #-20]	; 0xffffffec
   2dd08:	ldr	r3, [fp, #4]
   2dd0c:	mov	r2, #0
   2dd10:	strb	r2, [r3]
   2dd14:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2dd18:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2dd1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2dd20:	bl	2cc38 <flatcc_emitter_copy_buffer@@Base+0x620>
   2dd24:	str	r0, [fp, #-52]	; 0xffffffcc
   2dd28:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2dd2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dd30:	cmp	r2, r3
   2dd34:	bne	2dd40 <flatcc_emitter_copy_buffer@@Base+0x1728>
   2dd38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2dd3c:	b	2dea0 <flatcc_emitter_copy_buffer@@Base+0x1888>
   2dd40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2dd44:	str	r3, [fp, #-16]
   2dd48:	ldr	r3, [fp, #-16]
   2dd4c:	ldr	r4, [r3]
   2dd50:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2dd54:	str	r3, [fp, #-24]	; 0xffffffe8
   2dd58:	sub	r2, fp, #40	; 0x28
   2dd5c:	sub	r3, fp, #44	; 0x2c
   2dd60:	str	r3, [sp, #4]
   2dd64:	sub	r3, fp, #36	; 0x24
   2dd68:	str	r3, [sp]
   2dd6c:	mov	r3, r2
   2dd70:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2dd74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2dd78:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2dd7c:	blx	r4
   2dd80:	str	r0, [fp, #-52]	; 0xffffffcc
   2dd84:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2dd88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dd8c:	cmp	r2, r3
   2dd90:	bne	2dd9c <flatcc_emitter_copy_buffer@@Base+0x1784>
   2dd94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2dd98:	b	2dea0 <flatcc_emitter_copy_buffer@@Base+0x1888>
   2dd9c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2dda0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dda4:	cmp	r2, r3
   2dda8:	bne	2ddc8 <flatcc_emitter_copy_buffer@@Base+0x17b0>
   2ddac:	ldr	r3, [fp, #-16]
   2ddb0:	add	r3, r3, #4
   2ddb4:	str	r3, [fp, #-16]
   2ddb8:	ldr	r3, [fp, #-16]
   2ddbc:	ldr	r3, [r3]
   2ddc0:	cmp	r3, #0
   2ddc4:	bne	2dd48 <flatcc_emitter_copy_buffer@@Base+0x1730>
   2ddc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ddcc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ddd0:	cmp	r2, r3
   2ddd4:	bne	2ddf4 <flatcc_emitter_copy_buffer@@Base+0x17dc>
   2ddd8:	mov	r3, #23
   2dddc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2dde0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2dde4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2dde8:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2ddec:	mov	r3, r0
   2ddf0:	b	2dea0 <flatcc_emitter_copy_buffer@@Base+0x1888>
   2ddf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ddf8:	add	r2, r3, #1
   2ddfc:	str	r2, [fp, #-20]	; 0xffffffec
   2de00:	cmp	r3, #0
   2de04:	beq	2de34 <flatcc_emitter_copy_buffer@@Base+0x181c>
   2de08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2de0c:	ldr	r3, [r3, #12]
   2de10:	cmp	r3, #0
   2de14:	beq	2de34 <flatcc_emitter_copy_buffer@@Base+0x181c>
   2de18:	mov	r3, #14
   2de1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2de20:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2de24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2de28:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2de2c:	mov	r3, r0
   2de30:	b	2dea0 <flatcc_emitter_copy_buffer@@Base+0x1888>
   2de34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2de38:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2de3c:	sub	r1, fp, #25
   2de40:	str	r1, [sp, #8]
   2de44:	strd	r2, [sp]
   2de48:	mov	r3, r0
   2de4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2de50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2de54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2de58:	bl	2d258 <flatcc_emitter_copy_buffer@@Base+0xc40>
   2de5c:	mov	r2, r0
   2de60:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2de64:	cmp	r2, r3
   2de68:	bne	2de74 <flatcc_emitter_copy_buffer@@Base+0x185c>
   2de6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2de70:	b	2dea0 <flatcc_emitter_copy_buffer@@Base+0x1888>
   2de74:	ldr	r3, [fp, #4]
   2de78:	ldrb	r2, [r3]
   2de7c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2de80:	add	r3, r2, r3
   2de84:	uxtb	r2, r3
   2de88:	ldr	r3, [fp, #4]
   2de8c:	strb	r2, [r3]
   2de90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2de94:	cmp	r3, #0
   2de98:	bne	2dd40 <flatcc_emitter_copy_buffer@@Base+0x1728>
   2de9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2dea0:	mov	r0, r3
   2dea4:	sub	sp, fp, #8
   2dea8:	pop	{r4, fp, pc}
   2deac:	push	{r4, fp, lr}
   2deb0:	add	fp, sp, #8
   2deb4:	sub	sp, sp, #76	; 0x4c
   2deb8:	str	r0, [fp, #-56]	; 0xffffffc8
   2debc:	str	r1, [fp, #-60]	; 0xffffffc4
   2dec0:	str	r2, [fp, #-64]	; 0xffffffc0
   2dec4:	str	r3, [fp, #-68]	; 0xffffffbc
   2dec8:	mov	r2, #0
   2decc:	mov	r3, #0
   2ded0:	strd	r2, [fp, #-36]	; 0xffffffdc
   2ded4:	mov	r3, #0
   2ded8:	str	r3, [fp, #-20]	; 0xffffffec
   2dedc:	ldr	r1, [fp, #4]
   2dee0:	mov	r2, #0
   2dee4:	mov	r3, #0
   2dee8:	strd	r2, [r1]
   2deec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2def0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2def4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2def8:	bl	2cc38 <flatcc_emitter_copy_buffer@@Base+0x620>
   2defc:	str	r0, [fp, #-60]	; 0xffffffc4
   2df00:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2df04:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2df08:	cmp	r2, r3
   2df0c:	bne	2df18 <flatcc_emitter_copy_buffer@@Base+0x1900>
   2df10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2df14:	b	2e078 <flatcc_emitter_copy_buffer@@Base+0x1a60>
   2df18:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2df1c:	str	r3, [fp, #-16]
   2df20:	ldr	r3, [fp, #-16]
   2df24:	ldr	r4, [r3]
   2df28:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2df2c:	str	r3, [fp, #-24]	; 0xffffffe8
   2df30:	sub	r2, fp, #48	; 0x30
   2df34:	sub	r3, fp, #52	; 0x34
   2df38:	str	r3, [sp, #4]
   2df3c:	sub	r3, fp, #44	; 0x2c
   2df40:	str	r3, [sp]
   2df44:	mov	r3, r2
   2df48:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2df4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2df50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2df54:	blx	r4
   2df58:	str	r0, [fp, #-60]	; 0xffffffc4
   2df5c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2df60:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2df64:	cmp	r2, r3
   2df68:	bne	2df74 <flatcc_emitter_copy_buffer@@Base+0x195c>
   2df6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2df70:	b	2e078 <flatcc_emitter_copy_buffer@@Base+0x1a60>
   2df74:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2df78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2df7c:	cmp	r2, r3
   2df80:	bne	2dfa0 <flatcc_emitter_copy_buffer@@Base+0x1988>
   2df84:	ldr	r3, [fp, #-16]
   2df88:	add	r3, r3, #4
   2df8c:	str	r3, [fp, #-16]
   2df90:	ldr	r3, [fp, #-16]
   2df94:	ldr	r3, [r3]
   2df98:	cmp	r3, #0
   2df9c:	bne	2df20 <flatcc_emitter_copy_buffer@@Base+0x1908>
   2dfa0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2dfa4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2dfa8:	cmp	r2, r3
   2dfac:	bne	2dfcc <flatcc_emitter_copy_buffer@@Base+0x19b4>
   2dfb0:	mov	r3, #23
   2dfb4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2dfb8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2dfbc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2dfc0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2dfc4:	mov	r3, r0
   2dfc8:	b	2e078 <flatcc_emitter_copy_buffer@@Base+0x1a60>
   2dfcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dfd0:	add	r2, r3, #1
   2dfd4:	str	r2, [fp, #-20]	; 0xffffffec
   2dfd8:	cmp	r3, #0
   2dfdc:	beq	2e00c <flatcc_emitter_copy_buffer@@Base+0x19f4>
   2dfe0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dfe4:	ldr	r3, [r3, #12]
   2dfe8:	cmp	r3, #0
   2dfec:	beq	2e00c <flatcc_emitter_copy_buffer@@Base+0x19f4>
   2dff0:	mov	r3, #14
   2dff4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2dff8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2dffc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2e000:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2e004:	mov	r3, r0
   2e008:	b	2e078 <flatcc_emitter_copy_buffer@@Base+0x1a60>
   2e00c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e010:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2e014:	sub	r1, fp, #36	; 0x24
   2e018:	str	r1, [sp, #8]
   2e01c:	strd	r2, [sp]
   2e020:	mov	r3, r0
   2e024:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2e028:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2e02c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2e030:	bl	2d2e4 <flatcc_emitter_copy_buffer@@Base+0xccc>
   2e034:	mov	r2, r0
   2e038:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2e03c:	cmp	r2, r3
   2e040:	bne	2e04c <flatcc_emitter_copy_buffer@@Base+0x1a34>
   2e044:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2e048:	b	2e078 <flatcc_emitter_copy_buffer@@Base+0x1a60>
   2e04c:	ldr	r3, [fp, #4]
   2e050:	ldrd	r0, [r3]
   2e054:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2e058:	adds	r2, r2, r0
   2e05c:	adc	r3, r3, r1
   2e060:	ldr	r1, [fp, #4]
   2e064:	strd	r2, [r1]
   2e068:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e06c:	cmp	r3, #0
   2e070:	bne	2df18 <flatcc_emitter_copy_buffer@@Base+0x1900>
   2e074:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e078:	mov	r0, r3
   2e07c:	sub	sp, fp, #8
   2e080:	pop	{r4, fp, pc}
   2e084:	push	{r4, fp, lr}
   2e088:	add	fp, sp, #8
   2e08c:	sub	sp, sp, #68	; 0x44
   2e090:	str	r0, [fp, #-48]	; 0xffffffd0
   2e094:	str	r1, [fp, #-52]	; 0xffffffcc
   2e098:	str	r2, [fp, #-56]	; 0xffffffc8
   2e09c:	str	r3, [fp, #-60]	; 0xffffffc4
   2e0a0:	mov	r3, #0
   2e0a4:	str	r3, [fp, #-28]	; 0xffffffe4
   2e0a8:	mov	r3, #0
   2e0ac:	str	r3, [fp, #-20]	; 0xffffffec
   2e0b0:	ldr	r3, [fp, #4]
   2e0b4:	mov	r2, #0
   2e0b8:	str	r2, [r3]
   2e0bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e0c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e0c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e0c8:	bl	2cc38 <flatcc_emitter_copy_buffer@@Base+0x620>
   2e0cc:	str	r0, [fp, #-52]	; 0xffffffcc
   2e0d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e0d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e0d8:	cmp	r2, r3
   2e0dc:	bne	2e0e8 <flatcc_emitter_copy_buffer@@Base+0x1ad0>
   2e0e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e0e4:	b	2e244 <flatcc_emitter_copy_buffer@@Base+0x1c2c>
   2e0e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e0ec:	str	r3, [fp, #-16]
   2e0f0:	ldr	r3, [fp, #-16]
   2e0f4:	ldr	r4, [r3]
   2e0f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e0fc:	str	r3, [fp, #-24]	; 0xffffffe8
   2e100:	sub	r2, fp, #40	; 0x28
   2e104:	sub	r3, fp, #44	; 0x2c
   2e108:	str	r3, [sp, #4]
   2e10c:	sub	r3, fp, #36	; 0x24
   2e110:	str	r3, [sp]
   2e114:	mov	r3, r2
   2e118:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e11c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e120:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e124:	blx	r4
   2e128:	str	r0, [fp, #-52]	; 0xffffffcc
   2e12c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e130:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e134:	cmp	r2, r3
   2e138:	bne	2e144 <flatcc_emitter_copy_buffer@@Base+0x1b2c>
   2e13c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e140:	b	2e244 <flatcc_emitter_copy_buffer@@Base+0x1c2c>
   2e144:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e14c:	cmp	r2, r3
   2e150:	bne	2e170 <flatcc_emitter_copy_buffer@@Base+0x1b58>
   2e154:	ldr	r3, [fp, #-16]
   2e158:	add	r3, r3, #4
   2e15c:	str	r3, [fp, #-16]
   2e160:	ldr	r3, [fp, #-16]
   2e164:	ldr	r3, [r3]
   2e168:	cmp	r3, #0
   2e16c:	bne	2e0f0 <flatcc_emitter_copy_buffer@@Base+0x1ad8>
   2e170:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e174:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e178:	cmp	r2, r3
   2e17c:	bne	2e19c <flatcc_emitter_copy_buffer@@Base+0x1b84>
   2e180:	mov	r3, #23
   2e184:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e188:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e18c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e190:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2e194:	mov	r3, r0
   2e198:	b	2e244 <flatcc_emitter_copy_buffer@@Base+0x1c2c>
   2e19c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e1a0:	add	r2, r3, #1
   2e1a4:	str	r2, [fp, #-20]	; 0xffffffec
   2e1a8:	cmp	r3, #0
   2e1ac:	beq	2e1dc <flatcc_emitter_copy_buffer@@Base+0x1bc4>
   2e1b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e1b4:	ldr	r3, [r3, #12]
   2e1b8:	cmp	r3, #0
   2e1bc:	beq	2e1dc <flatcc_emitter_copy_buffer@@Base+0x1bc4>
   2e1c0:	mov	r3, #14
   2e1c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e1c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e1cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e1d0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2e1d4:	mov	r3, r0
   2e1d8:	b	2e244 <flatcc_emitter_copy_buffer@@Base+0x1c2c>
   2e1dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e1e0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2e1e4:	sub	r1, fp, #28
   2e1e8:	str	r1, [sp, #8]
   2e1ec:	strd	r2, [sp]
   2e1f0:	mov	r3, r0
   2e1f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e1f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e1fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e200:	bl	2d398 <flatcc_emitter_copy_buffer@@Base+0xd80>
   2e204:	mov	r2, r0
   2e208:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e20c:	cmp	r2, r3
   2e210:	bne	2e21c <flatcc_emitter_copy_buffer@@Base+0x1c04>
   2e214:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e218:	b	2e244 <flatcc_emitter_copy_buffer@@Base+0x1c2c>
   2e21c:	ldr	r3, [fp, #4]
   2e220:	ldr	r2, [r3]
   2e224:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e228:	add	r2, r2, r3
   2e22c:	ldr	r3, [fp, #4]
   2e230:	str	r2, [r3]
   2e234:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e238:	cmp	r3, #0
   2e23c:	bne	2e0e8 <flatcc_emitter_copy_buffer@@Base+0x1ad0>
   2e240:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e244:	mov	r0, r3
   2e248:	sub	sp, fp, #8
   2e24c:	pop	{r4, fp, pc}
   2e250:	push	{r4, fp, lr}
   2e254:	add	fp, sp, #8
   2e258:	sub	sp, sp, #68	; 0x44
   2e25c:	str	r0, [fp, #-48]	; 0xffffffd0
   2e260:	str	r1, [fp, #-52]	; 0xffffffcc
   2e264:	str	r2, [fp, #-56]	; 0xffffffc8
   2e268:	str	r3, [fp, #-60]	; 0xffffffc4
   2e26c:	mov	r3, #0
   2e270:	strh	r3, [fp, #-26]	; 0xffffffe6
   2e274:	mov	r3, #0
   2e278:	str	r3, [fp, #-20]	; 0xffffffec
   2e27c:	ldr	r3, [fp, #4]
   2e280:	mov	r2, #0
   2e284:	strh	r2, [r3]
   2e288:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e28c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e290:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e294:	bl	2cc38 <flatcc_emitter_copy_buffer@@Base+0x620>
   2e298:	str	r0, [fp, #-52]	; 0xffffffcc
   2e29c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e2a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e2a4:	cmp	r2, r3
   2e2a8:	bne	2e2b4 <flatcc_emitter_copy_buffer@@Base+0x1c9c>
   2e2ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e2b0:	b	2e420 <flatcc_emitter_copy_buffer@@Base+0x1e08>
   2e2b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e2b8:	str	r3, [fp, #-16]
   2e2bc:	ldr	r3, [fp, #-16]
   2e2c0:	ldr	r4, [r3]
   2e2c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e2c8:	str	r3, [fp, #-24]	; 0xffffffe8
   2e2cc:	sub	r2, fp, #40	; 0x28
   2e2d0:	sub	r3, fp, #44	; 0x2c
   2e2d4:	str	r3, [sp, #4]
   2e2d8:	sub	r3, fp, #36	; 0x24
   2e2dc:	str	r3, [sp]
   2e2e0:	mov	r3, r2
   2e2e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e2e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e2ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e2f0:	blx	r4
   2e2f4:	str	r0, [fp, #-52]	; 0xffffffcc
   2e2f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e2fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e300:	cmp	r2, r3
   2e304:	bne	2e310 <flatcc_emitter_copy_buffer@@Base+0x1cf8>
   2e308:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e30c:	b	2e420 <flatcc_emitter_copy_buffer@@Base+0x1e08>
   2e310:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e314:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e318:	cmp	r2, r3
   2e31c:	bne	2e33c <flatcc_emitter_copy_buffer@@Base+0x1d24>
   2e320:	ldr	r3, [fp, #-16]
   2e324:	add	r3, r3, #4
   2e328:	str	r3, [fp, #-16]
   2e32c:	ldr	r3, [fp, #-16]
   2e330:	ldr	r3, [r3]
   2e334:	cmp	r3, #0
   2e338:	bne	2e2bc <flatcc_emitter_copy_buffer@@Base+0x1ca4>
   2e33c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e340:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e344:	cmp	r2, r3
   2e348:	bne	2e368 <flatcc_emitter_copy_buffer@@Base+0x1d50>
   2e34c:	mov	r3, #23
   2e350:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e354:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e358:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e35c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2e360:	mov	r3, r0
   2e364:	b	2e420 <flatcc_emitter_copy_buffer@@Base+0x1e08>
   2e368:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e36c:	add	r2, r3, #1
   2e370:	str	r2, [fp, #-20]	; 0xffffffec
   2e374:	cmp	r3, #0
   2e378:	beq	2e3a8 <flatcc_emitter_copy_buffer@@Base+0x1d90>
   2e37c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e380:	ldr	r3, [r3, #12]
   2e384:	cmp	r3, #0
   2e388:	beq	2e3a8 <flatcc_emitter_copy_buffer@@Base+0x1d90>
   2e38c:	mov	r3, #14
   2e390:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e394:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e398:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e39c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2e3a0:	mov	r3, r0
   2e3a4:	b	2e420 <flatcc_emitter_copy_buffer@@Base+0x1e08>
   2e3a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e3ac:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2e3b0:	sub	r1, fp, #26
   2e3b4:	str	r1, [sp, #8]
   2e3b8:	strd	r2, [sp]
   2e3bc:	mov	r3, r0
   2e3c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e3c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e3c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e3cc:	bl	2d454 <flatcc_emitter_copy_buffer@@Base+0xe3c>
   2e3d0:	mov	r2, r0
   2e3d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e3d8:	cmp	r2, r3
   2e3dc:	bne	2e3e8 <flatcc_emitter_copy_buffer@@Base+0x1dd0>
   2e3e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e3e4:	b	2e420 <flatcc_emitter_copy_buffer@@Base+0x1e08>
   2e3e8:	ldr	r3, [fp, #4]
   2e3ec:	ldrsh	r3, [r3]
   2e3f0:	uxth	r2, r3
   2e3f4:	ldrsh	r3, [fp, #-26]	; 0xffffffe6
   2e3f8:	uxth	r3, r3
   2e3fc:	add	r3, r2, r3
   2e400:	uxth	r3, r3
   2e404:	sxth	r2, r3
   2e408:	ldr	r3, [fp, #4]
   2e40c:	strh	r2, [r3]
   2e410:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e414:	cmp	r3, #0
   2e418:	bne	2e2b4 <flatcc_emitter_copy_buffer@@Base+0x1c9c>
   2e41c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e420:	mov	r0, r3
   2e424:	sub	sp, fp, #8
   2e428:	pop	{r4, fp, pc}
   2e42c:	push	{r4, fp, lr}
   2e430:	add	fp, sp, #8
   2e434:	sub	sp, sp, #68	; 0x44
   2e438:	str	r0, [fp, #-48]	; 0xffffffd0
   2e43c:	str	r1, [fp, #-52]	; 0xffffffcc
   2e440:	str	r2, [fp, #-56]	; 0xffffffc8
   2e444:	str	r3, [fp, #-60]	; 0xffffffc4
   2e448:	mov	r3, #0
   2e44c:	strb	r3, [fp, #-25]	; 0xffffffe7
   2e450:	mov	r3, #0
   2e454:	str	r3, [fp, #-20]	; 0xffffffec
   2e458:	ldr	r3, [fp, #4]
   2e45c:	mov	r2, #0
   2e460:	strb	r2, [r3]
   2e464:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e468:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e46c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e470:	bl	2cc38 <flatcc_emitter_copy_buffer@@Base+0x620>
   2e474:	str	r0, [fp, #-52]	; 0xffffffcc
   2e478:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e47c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e480:	cmp	r2, r3
   2e484:	bne	2e490 <flatcc_emitter_copy_buffer@@Base+0x1e78>
   2e488:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e48c:	b	2e5fc <flatcc_emitter_copy_buffer@@Base+0x1fe4>
   2e490:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e494:	str	r3, [fp, #-16]
   2e498:	ldr	r3, [fp, #-16]
   2e49c:	ldr	r4, [r3]
   2e4a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e4a4:	str	r3, [fp, #-24]	; 0xffffffe8
   2e4a8:	sub	r2, fp, #40	; 0x28
   2e4ac:	sub	r3, fp, #44	; 0x2c
   2e4b0:	str	r3, [sp, #4]
   2e4b4:	sub	r3, fp, #36	; 0x24
   2e4b8:	str	r3, [sp]
   2e4bc:	mov	r3, r2
   2e4c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e4c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e4c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e4cc:	blx	r4
   2e4d0:	str	r0, [fp, #-52]	; 0xffffffcc
   2e4d4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e4d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e4dc:	cmp	r2, r3
   2e4e0:	bne	2e4ec <flatcc_emitter_copy_buffer@@Base+0x1ed4>
   2e4e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e4e8:	b	2e5fc <flatcc_emitter_copy_buffer@@Base+0x1fe4>
   2e4ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e4f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e4f4:	cmp	r2, r3
   2e4f8:	bne	2e518 <flatcc_emitter_copy_buffer@@Base+0x1f00>
   2e4fc:	ldr	r3, [fp, #-16]
   2e500:	add	r3, r3, #4
   2e504:	str	r3, [fp, #-16]
   2e508:	ldr	r3, [fp, #-16]
   2e50c:	ldr	r3, [r3]
   2e510:	cmp	r3, #0
   2e514:	bne	2e498 <flatcc_emitter_copy_buffer@@Base+0x1e80>
   2e518:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e51c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e520:	cmp	r2, r3
   2e524:	bne	2e544 <flatcc_emitter_copy_buffer@@Base+0x1f2c>
   2e528:	mov	r3, #23
   2e52c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e530:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e534:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e538:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2e53c:	mov	r3, r0
   2e540:	b	2e5fc <flatcc_emitter_copy_buffer@@Base+0x1fe4>
   2e544:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e548:	add	r2, r3, #1
   2e54c:	str	r2, [fp, #-20]	; 0xffffffec
   2e550:	cmp	r3, #0
   2e554:	beq	2e584 <flatcc_emitter_copy_buffer@@Base+0x1f6c>
   2e558:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e55c:	ldr	r3, [r3, #12]
   2e560:	cmp	r3, #0
   2e564:	beq	2e584 <flatcc_emitter_copy_buffer@@Base+0x1f6c>
   2e568:	mov	r3, #14
   2e56c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e570:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e574:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e578:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2e57c:	mov	r3, r0
   2e580:	b	2e5fc <flatcc_emitter_copy_buffer@@Base+0x1fe4>
   2e584:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e588:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2e58c:	sub	r1, fp, #25
   2e590:	str	r1, [sp, #8]
   2e594:	strd	r2, [sp]
   2e598:	mov	r3, r0
   2e59c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e5a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e5a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e5a8:	bl	2d518 <flatcc_emitter_copy_buffer@@Base+0xf00>
   2e5ac:	mov	r2, r0
   2e5b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e5b4:	cmp	r2, r3
   2e5b8:	bne	2e5c4 <flatcc_emitter_copy_buffer@@Base+0x1fac>
   2e5bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e5c0:	b	2e5fc <flatcc_emitter_copy_buffer@@Base+0x1fe4>
   2e5c4:	ldr	r3, [fp, #4]
   2e5c8:	ldrsb	r3, [r3]
   2e5cc:	uxtb	r2, r3
   2e5d0:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   2e5d4:	uxtb	r3, r3
   2e5d8:	add	r3, r2, r3
   2e5dc:	uxtb	r3, r3
   2e5e0:	sxtb	r2, r3
   2e5e4:	ldr	r3, [fp, #4]
   2e5e8:	strb	r2, [r3]
   2e5ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e5f0:	cmp	r3, #0
   2e5f4:	bne	2e490 <flatcc_emitter_copy_buffer@@Base+0x1e78>
   2e5f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e5fc:	mov	r0, r3
   2e600:	sub	sp, fp, #8
   2e604:	pop	{r4, fp, pc}
   2e608:	push	{r4, fp, lr}
   2e60c:	add	fp, sp, #8
   2e610:	sub	sp, sp, #68	; 0x44
   2e614:	str	r0, [fp, #-48]	; 0xffffffd0
   2e618:	str	r1, [fp, #-52]	; 0xffffffcc
   2e61c:	str	r2, [fp, #-56]	; 0xffffffc8
   2e620:	str	r3, [fp, #-60]	; 0xffffffc4
   2e624:	mov	r3, #0
   2e628:	strb	r3, [fp, #-25]	; 0xffffffe7
   2e62c:	mov	r3, #0
   2e630:	str	r3, [fp, #-20]	; 0xffffffec
   2e634:	ldr	r3, [fp, #4]
   2e638:	mov	r2, #0
   2e63c:	strb	r2, [r3]
   2e640:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e644:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e648:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e64c:	bl	2cc38 <flatcc_emitter_copy_buffer@@Base+0x620>
   2e650:	str	r0, [fp, #-52]	; 0xffffffcc
   2e654:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e658:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e65c:	cmp	r2, r3
   2e660:	bne	2e66c <flatcc_emitter_copy_buffer@@Base+0x2054>
   2e664:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e668:	b	2e7cc <flatcc_emitter_copy_buffer@@Base+0x21b4>
   2e66c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e670:	str	r3, [fp, #-16]
   2e674:	ldr	r3, [fp, #-16]
   2e678:	ldr	r4, [r3]
   2e67c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e680:	str	r3, [fp, #-24]	; 0xffffffe8
   2e684:	sub	r2, fp, #40	; 0x28
   2e688:	sub	r3, fp, #44	; 0x2c
   2e68c:	str	r3, [sp, #4]
   2e690:	sub	r3, fp, #36	; 0x24
   2e694:	str	r3, [sp]
   2e698:	mov	r3, r2
   2e69c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e6a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e6a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e6a8:	blx	r4
   2e6ac:	str	r0, [fp, #-52]	; 0xffffffcc
   2e6b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e6b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e6b8:	cmp	r2, r3
   2e6bc:	bne	2e6c8 <flatcc_emitter_copy_buffer@@Base+0x20b0>
   2e6c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e6c4:	b	2e7cc <flatcc_emitter_copy_buffer@@Base+0x21b4>
   2e6c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e6cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e6d0:	cmp	r2, r3
   2e6d4:	bne	2e6f4 <flatcc_emitter_copy_buffer@@Base+0x20dc>
   2e6d8:	ldr	r3, [fp, #-16]
   2e6dc:	add	r3, r3, #4
   2e6e0:	str	r3, [fp, #-16]
   2e6e4:	ldr	r3, [fp, #-16]
   2e6e8:	ldr	r3, [r3]
   2e6ec:	cmp	r3, #0
   2e6f0:	bne	2e674 <flatcc_emitter_copy_buffer@@Base+0x205c>
   2e6f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e6f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e6fc:	cmp	r2, r3
   2e700:	bne	2e720 <flatcc_emitter_copy_buffer@@Base+0x2108>
   2e704:	mov	r3, #23
   2e708:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e70c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e710:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e714:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2e718:	mov	r3, r0
   2e71c:	b	2e7cc <flatcc_emitter_copy_buffer@@Base+0x21b4>
   2e720:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e724:	add	r2, r3, #1
   2e728:	str	r2, [fp, #-20]	; 0xffffffec
   2e72c:	cmp	r3, #0
   2e730:	beq	2e760 <flatcc_emitter_copy_buffer@@Base+0x2148>
   2e734:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e738:	ldr	r3, [r3, #12]
   2e73c:	cmp	r3, #0
   2e740:	beq	2e760 <flatcc_emitter_copy_buffer@@Base+0x2148>
   2e744:	mov	r3, #14
   2e748:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e74c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e750:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e754:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2e758:	mov	r3, r0
   2e75c:	b	2e7cc <flatcc_emitter_copy_buffer@@Base+0x21b4>
   2e760:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e764:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2e768:	sub	r1, fp, #25
   2e76c:	str	r1, [sp, #8]
   2e770:	strd	r2, [sp]
   2e774:	mov	r3, r0
   2e778:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e77c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e780:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e784:	bl	2d0b0 <flatcc_emitter_copy_buffer@@Base+0xa98>
   2e788:	mov	r2, r0
   2e78c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e790:	cmp	r2, r3
   2e794:	bne	2e7a0 <flatcc_emitter_copy_buffer@@Base+0x2188>
   2e798:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e79c:	b	2e7cc <flatcc_emitter_copy_buffer@@Base+0x21b4>
   2e7a0:	ldr	r3, [fp, #4]
   2e7a4:	ldrb	r2, [r3]
   2e7a8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2e7ac:	add	r3, r2, r3
   2e7b0:	uxtb	r2, r3
   2e7b4:	ldr	r3, [fp, #4]
   2e7b8:	strb	r2, [r3]
   2e7bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e7c0:	cmp	r3, #0
   2e7c4:	bne	2e66c <flatcc_emitter_copy_buffer@@Base+0x2054>
   2e7c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e7cc:	mov	r0, r3
   2e7d0:	sub	sp, fp, #8
   2e7d4:	pop	{r4, fp, pc}
   2e7d8:	push	{r4, fp, lr}
   2e7dc:	add	fp, sp, #8
   2e7e0:	sub	sp, sp, #68	; 0x44
   2e7e4:	str	r0, [fp, #-48]	; 0xffffffd0
   2e7e8:	str	r1, [fp, #-52]	; 0xffffffcc
   2e7ec:	str	r2, [fp, #-56]	; 0xffffffc8
   2e7f0:	str	r3, [fp, #-60]	; 0xffffffc4
   2e7f4:	mov	r3, #0
   2e7f8:	str	r3, [fp, #-28]	; 0xffffffe4
   2e7fc:	mov	r3, #0
   2e800:	str	r3, [fp, #-20]	; 0xffffffec
   2e804:	ldr	r3, [fp, #4]
   2e808:	mov	r2, #0
   2e80c:	str	r2, [r3]
   2e810:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e814:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e818:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e81c:	bl	2cc38 <flatcc_emitter_copy_buffer@@Base+0x620>
   2e820:	str	r0, [fp, #-52]	; 0xffffffcc
   2e824:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e828:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e82c:	cmp	r2, r3
   2e830:	bne	2e83c <flatcc_emitter_copy_buffer@@Base+0x2224>
   2e834:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e838:	b	2e998 <flatcc_emitter_copy_buffer@@Base+0x2380>
   2e83c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e840:	str	r3, [fp, #-16]
   2e844:	ldr	r3, [fp, #-16]
   2e848:	ldr	r4, [r3]
   2e84c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e850:	str	r3, [fp, #-24]	; 0xffffffe8
   2e854:	sub	r2, fp, #40	; 0x28
   2e858:	sub	r3, fp, #44	; 0x2c
   2e85c:	str	r3, [sp, #4]
   2e860:	sub	r3, fp, #36	; 0x24
   2e864:	str	r3, [sp]
   2e868:	mov	r3, r2
   2e86c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e870:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e874:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e878:	blx	r4
   2e87c:	str	r0, [fp, #-52]	; 0xffffffcc
   2e880:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e884:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e888:	cmp	r2, r3
   2e88c:	bne	2e898 <flatcc_emitter_copy_buffer@@Base+0x2280>
   2e890:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e894:	b	2e998 <flatcc_emitter_copy_buffer@@Base+0x2380>
   2e898:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e89c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e8a0:	cmp	r2, r3
   2e8a4:	bne	2e8c4 <flatcc_emitter_copy_buffer@@Base+0x22ac>
   2e8a8:	ldr	r3, [fp, #-16]
   2e8ac:	add	r3, r3, #4
   2e8b0:	str	r3, [fp, #-16]
   2e8b4:	ldr	r3, [fp, #-16]
   2e8b8:	ldr	r3, [r3]
   2e8bc:	cmp	r3, #0
   2e8c0:	bne	2e844 <flatcc_emitter_copy_buffer@@Base+0x222c>
   2e8c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e8c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e8cc:	cmp	r2, r3
   2e8d0:	bne	2e8f0 <flatcc_emitter_copy_buffer@@Base+0x22d8>
   2e8d4:	mov	r3, #23
   2e8d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e8dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e8e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e8e4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2e8e8:	mov	r3, r0
   2e8ec:	b	2e998 <flatcc_emitter_copy_buffer@@Base+0x2380>
   2e8f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e8f4:	add	r2, r3, #1
   2e8f8:	str	r2, [fp, #-20]	; 0xffffffec
   2e8fc:	cmp	r3, #0
   2e900:	beq	2e930 <flatcc_emitter_copy_buffer@@Base+0x2318>
   2e904:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e908:	ldr	r3, [r3, #12]
   2e90c:	cmp	r3, #0
   2e910:	beq	2e930 <flatcc_emitter_copy_buffer@@Base+0x2318>
   2e914:	mov	r3, #14
   2e918:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e91c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e920:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e924:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2e928:	mov	r3, r0
   2e92c:	b	2e998 <flatcc_emitter_copy_buffer@@Base+0x2380>
   2e930:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e934:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2e938:	sub	r1, fp, #28
   2e93c:	str	r1, [sp, #8]
   2e940:	strd	r2, [sp]
   2e944:	mov	r3, r0
   2e948:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e94c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e950:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2e954:	bl	2d5d0 <flatcc_emitter_copy_buffer@@Base+0xfb8>
   2e958:	mov	r2, r0
   2e95c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e960:	cmp	r2, r3
   2e964:	bne	2e970 <flatcc_emitter_copy_buffer@@Base+0x2358>
   2e968:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e96c:	b	2e998 <flatcc_emitter_copy_buffer@@Base+0x2380>
   2e970:	ldr	r3, [fp, #4]
   2e974:	vldr	s14, [r3]
   2e978:	vldr	s15, [fp, #-28]	; 0xffffffe4
   2e97c:	vadd.f32	s15, s14, s15
   2e980:	ldr	r3, [fp, #4]
   2e984:	vstr	s15, [r3]
   2e988:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e98c:	cmp	r3, #0
   2e990:	bne	2e83c <flatcc_emitter_copy_buffer@@Base+0x2224>
   2e994:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e998:	mov	r0, r3
   2e99c:	sub	sp, fp, #8
   2e9a0:	pop	{r4, fp, pc}
   2e9a4:	push	{r4, fp, lr}
   2e9a8:	add	fp, sp, #8
   2e9ac:	sub	sp, sp, #76	; 0x4c
   2e9b0:	str	r0, [fp, #-56]	; 0xffffffc8
   2e9b4:	str	r1, [fp, #-60]	; 0xffffffc4
   2e9b8:	str	r2, [fp, #-64]	; 0xffffffc0
   2e9bc:	str	r3, [fp, #-68]	; 0xffffffbc
   2e9c0:	mov	r2, #0
   2e9c4:	mov	r3, #0
   2e9c8:	strd	r2, [fp, #-36]	; 0xffffffdc
   2e9cc:	mov	r3, #0
   2e9d0:	str	r3, [fp, #-20]	; 0xffffffec
   2e9d4:	ldr	r1, [fp, #4]
   2e9d8:	mov	r2, #0
   2e9dc:	mov	r3, #0
   2e9e0:	strd	r2, [r1]
   2e9e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2e9e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2e9ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2e9f0:	bl	2cc38 <flatcc_emitter_copy_buffer@@Base+0x620>
   2e9f4:	str	r0, [fp, #-60]	; 0xffffffc4
   2e9f8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2e9fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ea00:	cmp	r2, r3
   2ea04:	bne	2ea10 <flatcc_emitter_copy_buffer@@Base+0x23f8>
   2ea08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ea0c:	b	2eb6c <flatcc_emitter_copy_buffer@@Base+0x2554>
   2ea10:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ea14:	str	r3, [fp, #-16]
   2ea18:	ldr	r3, [fp, #-16]
   2ea1c:	ldr	r4, [r3]
   2ea20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ea24:	str	r3, [fp, #-24]	; 0xffffffe8
   2ea28:	sub	r2, fp, #48	; 0x30
   2ea2c:	sub	r3, fp, #52	; 0x34
   2ea30:	str	r3, [sp, #4]
   2ea34:	sub	r3, fp, #44	; 0x2c
   2ea38:	str	r3, [sp]
   2ea3c:	mov	r3, r2
   2ea40:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2ea44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ea48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ea4c:	blx	r4
   2ea50:	str	r0, [fp, #-60]	; 0xffffffc4
   2ea54:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2ea58:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ea5c:	cmp	r2, r3
   2ea60:	bne	2ea6c <flatcc_emitter_copy_buffer@@Base+0x2454>
   2ea64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ea68:	b	2eb6c <flatcc_emitter_copy_buffer@@Base+0x2554>
   2ea6c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2ea70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ea74:	cmp	r2, r3
   2ea78:	bne	2ea98 <flatcc_emitter_copy_buffer@@Base+0x2480>
   2ea7c:	ldr	r3, [fp, #-16]
   2ea80:	add	r3, r3, #4
   2ea84:	str	r3, [fp, #-16]
   2ea88:	ldr	r3, [fp, #-16]
   2ea8c:	ldr	r3, [r3]
   2ea90:	cmp	r3, #0
   2ea94:	bne	2ea18 <flatcc_emitter_copy_buffer@@Base+0x2400>
   2ea98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ea9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2eaa0:	cmp	r2, r3
   2eaa4:	bne	2eac4 <flatcc_emitter_copy_buffer@@Base+0x24ac>
   2eaa8:	mov	r3, #23
   2eaac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2eab0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2eab4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2eab8:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2eabc:	mov	r3, r0
   2eac0:	b	2eb6c <flatcc_emitter_copy_buffer@@Base+0x2554>
   2eac4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2eac8:	add	r2, r3, #1
   2eacc:	str	r2, [fp, #-20]	; 0xffffffec
   2ead0:	cmp	r3, #0
   2ead4:	beq	2eb04 <flatcc_emitter_copy_buffer@@Base+0x24ec>
   2ead8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2eadc:	ldr	r3, [r3, #12]
   2eae0:	cmp	r3, #0
   2eae4:	beq	2eb04 <flatcc_emitter_copy_buffer@@Base+0x24ec>
   2eae8:	mov	r3, #14
   2eaec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2eaf0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2eaf4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2eaf8:	bl	3198c <flatcc_json_parser_set_error@@Base>
   2eafc:	mov	r3, r0
   2eb00:	b	2eb6c <flatcc_emitter_copy_buffer@@Base+0x2554>
   2eb04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2eb08:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2eb0c:	sub	r1, fp, #36	; 0x24
   2eb10:	str	r1, [sp, #8]
   2eb14:	strd	r2, [sp]
   2eb18:	mov	r3, r0
   2eb1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2eb20:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2eb24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2eb28:	bl	2d630 <flatcc_emitter_copy_buffer@@Base+0x1018>
   2eb2c:	mov	r2, r0
   2eb30:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2eb34:	cmp	r2, r3
   2eb38:	bne	2eb44 <flatcc_emitter_copy_buffer@@Base+0x252c>
   2eb3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2eb40:	b	2eb6c <flatcc_emitter_copy_buffer@@Base+0x2554>
   2eb44:	ldr	r3, [fp, #4]
   2eb48:	vldr	d6, [r3]
   2eb4c:	vldr	d7, [fp, #-36]	; 0xffffffdc
   2eb50:	vadd.f64	d7, d6, d7
   2eb54:	ldr	r3, [fp, #4]
   2eb58:	vstr	d7, [r3]
   2eb5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2eb60:	cmp	r3, #0
   2eb64:	bne	2ea10 <flatcc_emitter_copy_buffer@@Base+0x23f8>
   2eb68:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2eb6c:	mov	r0, r3
   2eb70:	sub	sp, fp, #8
   2eb74:	pop	{r4, fp, pc}
   2eb78:	push	{fp}		; (str fp, [sp, #-4]!)
   2eb7c:	add	fp, sp, #0
   2eb80:	sub	sp, sp, #20
   2eb84:	vstr	d0, [fp, #-20]	; 0xffffffec
   2eb88:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2eb8c:	strd	r2, [fp, #-12]
   2eb90:	ldrd	r2, [fp, #-12]
   2eb94:	mov	r0, r2
   2eb98:	mov	r1, r3
   2eb9c:	add	sp, fp, #0
   2eba0:	pop	{fp}		; (ldr fp, [sp], #4)
   2eba4:	bx	lr
   2eba8:	push	{fp}		; (str fp, [sp, #-4]!)
   2ebac:	add	fp, sp, #0
   2ebb0:	sub	sp, sp, #20
   2ebb4:	strd	r0, [fp, #-20]	; 0xffffffec
   2ebb8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2ebbc:	strd	r2, [fp, #-12]
   2ebc0:	ldrd	r2, [fp, #-12]
   2ebc4:	vmov	d7, r2, r3
   2ebc8:	vmov.f64	d0, d7
   2ebcc:	add	sp, fp, #0
   2ebd0:	pop	{fp}		; (ldr fp, [sp], #4)
   2ebd4:	bx	lr
   2ebd8:	push	{fp}		; (str fp, [sp, #-4]!)
   2ebdc:	add	fp, sp, #0
   2ebe0:	sub	sp, sp, #20
   2ebe4:	vstr	d0, [fp, #-20]	; 0xffffffec
   2ebe8:	vldr	d7, [fp, #-20]	; 0xffffffec
   2ebec:	vcvt.s32.f64	s15, d7
   2ebf0:	vmov	r3, s15
   2ebf4:	str	r3, [fp, #-8]
   2ebf8:	vldr	d7, [fp, #-20]	; 0xffffffec
   2ebfc:	vcmpe.f64	d7, #0.0
   2ec00:	vmrs	APSR_nzcv, fpscr
   2ec04:	bpl	2ec10 <flatcc_emitter_copy_buffer@@Base+0x25f8>
   2ec08:	ldr	r3, [fp, #-8]
   2ec0c:	b	2ec40 <flatcc_emitter_copy_buffer@@Base+0x2628>
   2ec10:	ldr	r3, [fp, #-8]
   2ec14:	vmov	s15, r3
   2ec18:	vcvt.f64.s32	d7, s15
   2ec1c:	vldr	d6, [fp, #-20]	; 0xffffffec
   2ec20:	vsub.f64	d7, d6, d7
   2ec24:	vcmp.f64	d7, #0.0
   2ec28:	vmrs	APSR_nzcv, fpscr
   2ec2c:	beq	2ec3c <flatcc_emitter_copy_buffer@@Base+0x2624>
   2ec30:	ldr	r3, [fp, #-8]
   2ec34:	add	r3, r3, #1
   2ec38:	b	2ec40 <flatcc_emitter_copy_buffer@@Base+0x2628>
   2ec3c:	ldr	r3, [fp, #-8]
   2ec40:	mov	r0, r3
   2ec44:	add	sp, fp, #0
   2ec48:	pop	{fp}		; (ldr fp, [sp], #4)
   2ec4c:	bx	lr
   2ec50:	push	{fp, lr}
   2ec54:	add	fp, sp, #4
   2ec58:	sub	sp, sp, #16
   2ec5c:	str	r0, [fp, #-16]
   2ec60:	str	r1, [fp, #-20]	; 0xffffffec
   2ec64:	ldr	r3, [fp, #-16]
   2ec68:	add	r3, r3, #63	; 0x3f
   2ec6c:	vmov	s15, r3
   2ec70:	vcvt.f64.s32	d7, s15
   2ec74:	vldr	d6, [pc, #164]	; 2ed20 <flatcc_emitter_copy_buffer@@Base+0x2708>
   2ec78:	vmul.f64	d7, d7, d6
   2ec7c:	vmov.f64	d0, d7
   2ec80:	bl	2ebd8 <flatcc_emitter_copy_buffer@@Base+0x25c0>
   2ec84:	str	r0, [fp, #-8]
   2ec88:	ldr	r3, [fp, #-8]
   2ec8c:	add	r3, r3, #344	; 0x158
   2ec90:	add	r3, r3, #3
   2ec94:	add	r2, r3, #7
   2ec98:	cmp	r3, #0
   2ec9c:	movlt	r3, r2
   2eca0:	movge	r3, r3
   2eca4:	asr	r3, r3, #3
   2eca8:	add	r3, r3, #1
   2ecac:	str	r3, [fp, #-12]
   2ecb0:	ldr	r2, [pc, #112]	; 2ed28 <flatcc_emitter_copy_buffer@@Base+0x2710>
   2ecb4:	add	r2, pc, r2
   2ecb8:	ldr	r3, [fp, #-12]
   2ecbc:	lsl	r3, r3, #4
   2ecc0:	add	r3, r2, r3
   2ecc4:	ldrd	r2, [r3]
   2ecc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2eccc:	strd	r2, [r1]
   2ecd0:	ldr	r2, [pc, #84]	; 2ed2c <flatcc_emitter_copy_buffer@@Base+0x2714>
   2ecd4:	add	r2, pc, r2
   2ecd8:	ldr	r3, [fp, #-12]
   2ecdc:	lsl	r3, r3, #4
   2ece0:	add	r3, r2, r3
   2ece4:	add	r3, r3, #8
   2ece8:	ldrsh	r3, [r3]
   2ecec:	mov	r2, r3
   2ecf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ecf4:	str	r2, [r3, #8]
   2ecf8:	ldr	r2, [pc, #48]	; 2ed30 <flatcc_emitter_copy_buffer@@Base+0x2718>
   2ecfc:	add	r2, pc, r2
   2ed00:	ldr	r3, [fp, #-12]
   2ed04:	lsl	r3, r3, #4
   2ed08:	add	r3, r2, r3
   2ed0c:	add	r3, r3, #10
   2ed10:	ldrsh	r3, [r3]
   2ed14:	mov	r0, r3
   2ed18:	sub	sp, fp, #4
   2ed1c:	pop	{fp, pc}
   2ed20:			; <UNDEFINED> instruction: 0x509f79fe
   2ed24:	svccc	0x00d34413
   2ed28:	andeq	r7, r0, ip, lsr #13
   2ed2c:	andeq	r7, r0, ip, lsl #13
   2ed30:	andeq	r7, r0, r4, ror #12
   2ed34:	sub	sp, sp, #8
   2ed38:	push	{fp, lr}
   2ed3c:	add	fp, sp, #4
   2ed40:	sub	sp, sp, #24
   2ed44:	str	r0, [fp, #-24]	; 0xffffffe8
   2ed48:	add	r1, fp, #4
   2ed4c:	stm	r1, {r2, r3}
   2ed50:	ldrd	r0, [fp, #4]
   2ed54:	ldrd	r2, [fp, #20]
   2ed58:	subs	r2, r0, r2
   2ed5c:	sbc	r3, r1, r3
   2ed60:	strd	r2, [fp, #-20]	; 0xffffffec
   2ed64:	ldr	r3, [fp, #12]
   2ed68:	str	r3, [fp, #-12]
   2ed6c:	ldr	r2, [fp, #12]
   2ed70:	ldr	r3, [fp, #28]
   2ed74:	cmp	r2, r3
   2ed78:	bne	2ed90 <flatcc_emitter_copy_buffer@@Base+0x2778>
   2ed7c:	ldrd	r0, [fp, #4]
   2ed80:	ldrd	r2, [fp, #20]
   2ed84:	cmp	r1, r3
   2ed88:	cmpeq	r0, r2
   2ed8c:	bcs	2edb0 <flatcc_emitter_copy_buffer@@Base+0x2798>
   2ed90:	ldr	r3, [pc, #64]	; 2edd8 <flatcc_emitter_copy_buffer@@Base+0x27c0>
   2ed94:	add	r3, pc, r3
   2ed98:	mov	r2, #239	; 0xef
   2ed9c:	ldr	r1, [pc, #56]	; 2eddc <flatcc_emitter_copy_buffer@@Base+0x27c4>
   2eda0:	add	r1, pc, r1
   2eda4:	ldr	r0, [pc, #52]	; 2ede0 <flatcc_emitter_copy_buffer@@Base+0x27c8>
   2eda8:	add	r0, pc, r0
   2edac:	bl	12704 <__assert_fail@plt>
   2edb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2edb4:	mov	ip, r3
   2edb8:	sub	r3, fp, #20
   2edbc:	ldm	r3, {r0, r1, r2, r3}
   2edc0:	stm	ip, {r0, r1, r2, r3}
   2edc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2edc8:	sub	sp, fp, #4
   2edcc:	pop	{fp, lr}
   2edd0:	add	sp, sp, #8
   2edd4:	bx	lr
   2edd8:	andeq	r8, r0, r4, lsr r1
   2eddc:	andeq	r7, r0, r0, lsr fp
   2ede0:	muleq	r0, r8, fp
   2ede4:	sub	sp, sp, #8
   2ede8:	push	{r4, r5, r6, r7, r8, r9, fp}
   2edec:	add	fp, sp, #24
   2edf0:	sub	sp, sp, #124	; 0x7c
   2edf4:	str	r0, [fp, #-120]	; 0xffffff88
   2edf8:	add	r1, fp, #4
   2edfc:	stm	r1, {r2, r3}
   2ee00:	ldrd	r2, [fp, #4]
   2ee04:	mov	r4, r3
   2ee08:	mov	r5, #0
   2ee0c:	strd	r4, [fp, #-36]	; 0xffffffdc
   2ee10:	ldrd	r2, [fp, #4]
   2ee14:	mvn	r0, #0
   2ee18:	mov	r1, #0
   2ee1c:	and	r2, r2, r0
   2ee20:	and	r3, r3, r1
   2ee24:	strd	r2, [fp, #-44]	; 0xffffffd4
   2ee28:	ldrd	r2, [fp, #20]
   2ee2c:	mov	r3, r3
   2ee30:	str	r3, [fp, #-148]	; 0xffffff6c
   2ee34:	mov	r3, #0
   2ee38:	str	r3, [fp, #-144]	; 0xffffff70
   2ee3c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   2ee40:	strd	r2, [fp, #-52]	; 0xffffffcc
   2ee44:	ldrd	r2, [fp, #20]
   2ee48:	mvn	r0, #0
   2ee4c:	mov	r1, #0
   2ee50:	and	r2, r2, r0
   2ee54:	and	r3, r3, r1
   2ee58:	strd	r2, [fp, #-60]	; 0xffffffc4
   2ee5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ee60:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2ee64:	mul	r2, r2, r3
   2ee68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ee6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ee70:	mul	r3, r1, r3
   2ee74:	add	r1, r2, r3
   2ee78:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ee7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ee80:	umull	r2, r3, r2, r3
   2ee84:	add	r1, r1, r3
   2ee88:	mov	r3, r1
   2ee8c:	strd	r2, [fp, #-68]	; 0xffffffbc
   2ee90:	strd	r2, [fp, #-68]	; 0xffffffbc
   2ee94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ee98:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2ee9c:	mul	r2, r2, r3
   2eea0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2eea4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2eea8:	mul	r3, r1, r3
   2eeac:	add	r1, r2, r3
   2eeb0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2eeb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2eeb8:	umull	r2, r3, r2, r3
   2eebc:	add	r1, r1, r3
   2eec0:	mov	r3, r1
   2eec4:	strd	r2, [fp, #-76]	; 0xffffffb4
   2eec8:	strd	r2, [fp, #-76]	; 0xffffffb4
   2eecc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2eed0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2eed4:	mul	r2, r2, r3
   2eed8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2eedc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2eee0:	mul	r3, r1, r3
   2eee4:	add	r1, r2, r3
   2eee8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2eeec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2eef0:	umull	r2, r3, r2, r3
   2eef4:	add	r1, r1, r3
   2eef8:	mov	r3, r1
   2eefc:	strd	r2, [fp, #-84]	; 0xffffffac
   2ef00:	strd	r2, [fp, #-84]	; 0xffffffac
   2ef04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ef08:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2ef0c:	mul	r2, r2, r3
   2ef10:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ef14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ef18:	mul	r3, r1, r3
   2ef1c:	add	r1, r2, r3
   2ef20:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2ef24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ef28:	umull	r2, r3, r2, r3
   2ef2c:	add	r1, r1, r3
   2ef30:	mov	r3, r1
   2ef34:	strd	r2, [fp, #-92]	; 0xffffffa4
   2ef38:	strd	r2, [fp, #-92]	; 0xffffffa4
   2ef3c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   2ef40:	mov	r3, r3
   2ef44:	str	r3, [fp, #-132]	; 0xffffff7c
   2ef48:	mov	r3, #0
   2ef4c:	str	r3, [fp, #-128]	; 0xffffff80
   2ef50:	ldrd	r2, [fp, #-84]	; 0xffffffac
   2ef54:	mvn	r0, #0
   2ef58:	mov	r1, #0
   2ef5c:	and	r2, r2, r0
   2ef60:	and	r3, r3, r1
   2ef64:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   2ef68:	adds	r0, r0, r2
   2ef6c:	adc	r1, r1, r3
   2ef70:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   2ef74:	mvn	r4, #0
   2ef78:	mov	r5, #0
   2ef7c:	and	r2, r2, r4
   2ef80:	and	r3, r3, r5
   2ef84:	adds	r2, r2, r0
   2ef88:	adc	r3, r3, r1
   2ef8c:	strd	r2, [fp, #-100]	; 0xffffff9c
   2ef90:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   2ef94:	adds	r2, r2, #-2147483648	; 0x80000000
   2ef98:	adc	r3, r3, #0
   2ef9c:	strd	r2, [fp, #-100]	; 0xffffff9c
   2efa0:	ldrd	r2, [fp, #-84]	; 0xffffffac
   2efa4:	mov	r3, r3
   2efa8:	str	r3, [fp, #-140]	; 0xffffff74
   2efac:	mov	r3, #0
   2efb0:	str	r3, [fp, #-136]	; 0xffffff78
   2efb4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   2efb8:	ldrd	r0, [fp, #-140]	; 0xffffff74
   2efbc:	adds	r0, r0, r2
   2efc0:	adc	r1, r1, r3
   2efc4:	mov	r2, r0
   2efc8:	mov	r3, r1
   2efcc:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   2efd0:	mov	r8, r1
   2efd4:	mov	r9, #0
   2efd8:	adds	r2, r2, r8
   2efdc:	adc	r3, r3, r9
   2efe0:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   2efe4:	mov	r6, r1
   2efe8:	mov	r7, #0
   2efec:	adds	r2, r2, r6
   2eff0:	adc	r3, r3, r7
   2eff4:	strd	r2, [fp, #-116]	; 0xffffff8c
   2eff8:	ldr	r2, [fp, #12]
   2effc:	ldr	r3, [fp, #28]
   2f000:	add	r3, r2, r3
   2f004:	add	r3, r3, #64	; 0x40
   2f008:	str	r3, [fp, #-108]	; 0xffffff94
   2f00c:	ldr	r3, [fp, #-120]	; 0xffffff88
   2f010:	mov	ip, r3
   2f014:	sub	r3, fp, #116	; 0x74
   2f018:	ldm	r3, {r0, r1, r2, r3}
   2f01c:	stm	ip, {r0, r1, r2, r3}
   2f020:	ldr	r0, [fp, #-120]	; 0xffffff88
   2f024:	sub	sp, fp, #24
   2f028:	pop	{r4, r5, r6, r7, r8, r9, fp}
   2f02c:	add	sp, sp, #8
   2f030:	bx	lr
   2f034:	sub	sp, sp, #8
   2f038:	push	{r4, r5, fp, lr}
   2f03c:	add	fp, sp, #12
   2f040:	sub	sp, sp, #8
   2f044:	str	r0, [fp, #-16]
   2f048:	add	r1, fp, #4
   2f04c:	stm	r1, {r2, r3}
   2f050:	ldrd	r2, [fp, #4]
   2f054:	orrs	r3, r2, r3
   2f058:	bne	2f09c <flatcc_emitter_copy_buffer@@Base+0x2a84>
   2f05c:	ldr	r3, [pc, #172]	; 2f110 <flatcc_emitter_copy_buffer@@Base+0x2af8>
   2f060:	add	r3, pc, r3
   2f064:	mov	r2, #260	; 0x104
   2f068:	ldr	r1, [pc, #164]	; 2f114 <flatcc_emitter_copy_buffer@@Base+0x2afc>
   2f06c:	add	r1, pc, r1
   2f070:	ldr	r0, [pc, #160]	; 2f118 <flatcc_emitter_copy_buffer@@Base+0x2b00>
   2f074:	add	r0, pc, r0
   2f078:	bl	12704 <__assert_fail@plt>
   2f07c:	ldrd	r2, [fp, #4]
   2f080:	lsl	r5, r3, #10
   2f084:	orr	r5, r5, r2, lsr #22
   2f088:	lsl	r4, r2, #10
   2f08c:	strd	r4, [fp, #4]
   2f090:	ldr	r3, [fp, #12]
   2f094:	sub	r3, r3, #10
   2f098:	str	r3, [fp, #12]
   2f09c:	ldrd	r2, [fp, #4]
   2f0a0:	mov	r0, #0
   2f0a4:	ldr	r1, [pc, #112]	; 2f11c <flatcc_emitter_copy_buffer@@Base+0x2b04>
   2f0a8:	and	r2, r2, r0
   2f0ac:	and	r3, r3, r1
   2f0b0:	orrs	r3, r2, r3
   2f0b4:	beq	2f07c <flatcc_emitter_copy_buffer@@Base+0x2a64>
   2f0b8:	b	2f0d8 <flatcc_emitter_copy_buffer@@Base+0x2ac0>
   2f0bc:	ldrd	r2, [fp, #4]
   2f0c0:	adds	r2, r2, r2
   2f0c4:	adc	r3, r3, r3
   2f0c8:	strd	r2, [fp, #4]
   2f0cc:	ldr	r3, [fp, #12]
   2f0d0:	sub	r3, r3, #1
   2f0d4:	str	r3, [fp, #12]
   2f0d8:	ldrd	r2, [fp, #4]
   2f0dc:	cmp	r2, #0
   2f0e0:	sbcs	r3, r3, #0
   2f0e4:	bge	2f0bc <flatcc_emitter_copy_buffer@@Base+0x2aa4>
   2f0e8:	ldr	r3, [fp, #-16]
   2f0ec:	mov	ip, r3
   2f0f0:	add	r3, fp, #4
   2f0f4:	ldm	r3, {r0, r1, r2, r3}
   2f0f8:	stm	ip, {r0, r1, r2, r3}
   2f0fc:	ldr	r0, [fp, #-16]
   2f100:	sub	sp, fp, #12
   2f104:	pop	{r4, r5, fp, lr}
   2f108:	add	sp, sp, #8
   2f10c:	bx	lr
   2f110:	andeq	r7, r0, ip, ror lr
   2f114:	andeq	r7, r0, r4, ror #16
   2f118:	andeq	r7, r0, r8, ror #17
   2f11c:			; <UNDEFINED> instruction: 0xffc00000
   2f120:	push	{r4, r5, fp, lr}
   2f124:	add	fp, sp, #12
   2f128:	sub	sp, sp, #40	; 0x28
   2f12c:	str	r0, [fp, #-40]	; 0xffffffd8
   2f130:	vstr	d0, [fp, #-52]	; 0xffffffcc
   2f134:	vldr	d0, [fp, #-52]	; 0xffffffcc
   2f138:	bl	2eb78 <flatcc_emitter_copy_buffer@@Base+0x2560>
   2f13c:	strd	r0, [fp, #-20]	; 0xffffffec
   2f140:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2f144:	mov	r0, #0
   2f148:	ldr	r1, [pc, #148]	; 2f1e4 <flatcc_emitter_copy_buffer@@Base+0x2bcc>
   2f14c:	and	r2, r2, r0
   2f150:	and	r3, r3, r1
   2f154:	orrs	r3, r2, r3
   2f158:	bne	2f180 <flatcc_emitter_copy_buffer@@Base+0x2b68>
   2f15c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2f160:	mvn	r0, #0
   2f164:	ldr	r1, [pc, #124]	; 2f1e8 <flatcc_emitter_copy_buffer@@Base+0x2bd0>
   2f168:	and	r2, r2, r0
   2f16c:	and	r3, r3, r1
   2f170:	strd	r2, [fp, #-36]	; 0xffffffdc
   2f174:	ldr	r3, [pc, #112]	; 2f1ec <flatcc_emitter_copy_buffer@@Base+0x2bd4>
   2f178:	str	r3, [fp, #-28]	; 0xffffffe4
   2f17c:	b	2f1c4 <flatcc_emitter_copy_buffer@@Base+0x2bac>
   2f180:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2f184:	mvn	r0, #0
   2f188:	ldr	r1, [pc, #88]	; 2f1e8 <flatcc_emitter_copy_buffer@@Base+0x2bd0>
   2f18c:	and	r2, r2, r0
   2f190:	and	r3, r3, r1
   2f194:	adds	r2, r2, #0
   2f198:	adc	r3, r3, #1048576	; 0x100000
   2f19c:	strd	r2, [fp, #-36]	; 0xffffffdc
   2f1a0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2f1a4:	lsr	r4, r3, #20
   2f1a8:	mov	r5, #0
   2f1ac:	mov	r3, r4
   2f1b0:	lsl	r3, r3, #21
   2f1b4:	lsr	r3, r3, #21
   2f1b8:	sub	r3, r3, #1072	; 0x430
   2f1bc:	sub	r3, r3, #3
   2f1c0:	str	r3, [fp, #-28]	; 0xffffffe4
   2f1c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f1c8:	mov	ip, r3
   2f1cc:	sub	r3, fp, #36	; 0x24
   2f1d0:	ldm	r3, {r0, r1, r2, r3}
   2f1d4:	stm	ip, {r0, r1, r2, r3}
   2f1d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2f1dc:	sub	sp, fp, #12
   2f1e0:	pop	{r4, r5, fp, pc}
   2f1e4:	svcvc	0x00f00000	; IMB
   2f1e8:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   2f1ec:			; <UNDEFINED> instruction: 0xfffffbce
   2f1f0:	push	{r4, r5, r6, r7, fp, lr}
   2f1f4:	add	fp, sp, #20
   2f1f8:	sub	sp, sp, #72	; 0x48
   2f1fc:	sub	ip, fp, #92	; 0x5c
   2f200:	stm	ip, {r0, r1, r2, r3}
   2f204:	mov	r2, #0
   2f208:	mov	r3, #1048576	; 0x100000
   2f20c:	strd	r2, [fp, #-36]	; 0xffffffdc
   2f210:	mvn	r2, #0
   2f214:	ldr	r3, [pc, #372]	; 2f390 <flatcc_emitter_copy_buffer@@Base+0x2d78>
   2f218:	strd	r2, [fp, #-44]	; 0xffffffd4
   2f21c:	ldr	r3, [pc, #368]	; 2f394 <flatcc_emitter_copy_buffer@@Base+0x2d7c>
   2f220:	str	r3, [fp, #-48]	; 0xffffffd0
   2f224:	ldr	r3, [pc, #364]	; 2f398 <flatcc_emitter_copy_buffer@@Base+0x2d80>
   2f228:	str	r3, [fp, #-52]	; 0xffffffcc
   2f22c:	mov	r3, #52	; 0x34
   2f230:	str	r3, [fp, #-56]	; 0xffffffc8
   2f234:	sub	ip, fp, #76	; 0x4c
   2f238:	sub	r3, fp, #92	; 0x5c
   2f23c:	ldm	r3, {r0, r1, r2, r3}
   2f240:	stm	ip, {r0, r1, r2, r3}
   2f244:	b	2f264 <flatcc_emitter_copy_buffer@@Base+0x2c4c>
   2f248:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   2f24c:	lsrs	r3, r3, #1
   2f250:	rrx	r2, r2
   2f254:	strd	r2, [fp, #-76]	; 0xffffffb4
   2f258:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f25c:	add	r3, r3, #1
   2f260:	str	r3, [fp, #-68]	; 0xffffffbc
   2f264:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   2f268:	ldrd	r6, [fp, #-36]	; 0xffffffdc
   2f26c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2f270:	adds	r2, r2, r6
   2f274:	adc	r3, r3, r7
   2f278:	cmp	r1, r3
   2f27c:	cmpeq	r0, r2
   2f280:	bhi	2f248 <flatcc_emitter_copy_buffer@@Base+0x2c30>
   2f284:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2f288:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f28c:	cmp	r2, r3
   2f290:	bge	2f2b8 <flatcc_emitter_copy_buffer@@Base+0x2ca0>
   2f294:	vldr	d7, [pc, #236]	; 2f388 <flatcc_emitter_copy_buffer@@Base+0x2d70>
   2f298:	b	2f378 <flatcc_emitter_copy_buffer@@Base+0x2d60>
   2f29c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   2f2a0:	adds	r2, r2, r2
   2f2a4:	adc	r3, r3, r3
   2f2a8:	strd	r2, [fp, #-76]	; 0xffffffb4
   2f2ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f2b0:	sub	r3, r3, #1
   2f2b4:	str	r3, [fp, #-68]	; 0xffffffbc
   2f2b8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2f2bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f2c0:	cmp	r2, r3
   2f2c4:	ble	2f2e0 <flatcc_emitter_copy_buffer@@Base+0x2cc8>
   2f2c8:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   2f2cc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2f2d0:	and	r2, r2, r0
   2f2d4:	and	r3, r3, r1
   2f2d8:	orrs	r3, r2, r3
   2f2dc:	beq	2f29c <flatcc_emitter_copy_buffer@@Base+0x2c84>
   2f2e0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2f2e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f2e8:	cmp	r2, r3
   2f2ec:	bne	2f318 <flatcc_emitter_copy_buffer@@Base+0x2d00>
   2f2f0:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   2f2f4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2f2f8:	and	r2, r2, r0
   2f2fc:	and	r3, r3, r1
   2f300:	orrs	r3, r2, r3
   2f304:	bne	2f318 <flatcc_emitter_copy_buffer@@Base+0x2d00>
   2f308:	mov	r2, #0
   2f30c:	mov	r3, #0
   2f310:	strd	r2, [fp, #-28]	; 0xffffffe4
   2f314:	b	2f330 <flatcc_emitter_copy_buffer@@Base+0x2d18>
   2f318:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2f31c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f320:	add	r3, r2, r3
   2f324:	mov	r2, r3
   2f328:	asr	r3, r2, #31
   2f32c:	strd	r2, [fp, #-28]	; 0xffffffe4
   2f330:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   2f334:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2f338:	and	r6, r0, r2
   2f33c:	and	r7, r1, r3
   2f340:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2f344:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2f348:	sub	ip, r1, #32
   2f34c:	rsb	r0, r1, #32
   2f350:	lsl	r5, r3, r1
   2f354:	orr	r5, r5, r2, lsl ip
   2f358:	orr	r5, r5, r2, lsr r0
   2f35c:	lsl	r4, r2, r1
   2f360:	orr	r2, r6, r4
   2f364:	orr	r3, r7, r5
   2f368:	mov	r0, r2
   2f36c:	mov	r1, r3
   2f370:	bl	2eba8 <flatcc_emitter_copy_buffer@@Base+0x2590>
   2f374:	vmov.f64	d7, d0
   2f378:	vmov.f64	d0, d7
   2f37c:	sub	sp, fp, #20
   2f380:	pop	{r4, r5, r6, r7, fp, pc}
   2f384:	nop			; (mov r0, r0)
	...
   2f390:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   2f394:			; <UNDEFINED> instruction: 0xfffffbce
   2f398:	andeq	r0, r0, r3, lsr r4
   2f39c:	push	{fp}		; (str fp, [sp, #-4]!)
   2f3a0:	add	fp, sp, #0
   2f3a4:	sub	sp, sp, #28
   2f3a8:	str	r0, [fp, #-16]
   2f3ac:	str	r1, [fp, #-20]	; 0xffffffec
   2f3b0:	str	r2, [fp, #-24]	; 0xffffffe8
   2f3b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f3b8:	add	r2, r3, #1
   2f3bc:	mov	r3, r2
   2f3c0:	lsl	r3, r3, #4
   2f3c4:	add	r3, r3, r2
   2f3c8:	lsl	r3, r3, #3
   2f3cc:	add	r3, r3, r2
   2f3d0:	lsl	r2, r3, #3
   2f3d4:	add	r3, r3, r2
   2f3d8:	asr	r3, r3, #12
   2f3dc:	add	r3, r3, #1
   2f3e0:	str	r3, [fp, #-8]
   2f3e4:	ldr	r3, [pc, #76]	; 2f438 <flatcc_emitter_copy_buffer@@Base+0x2e20>
   2f3e8:	add	r3, pc, r3
   2f3ec:	ldr	r2, [fp, #-8]
   2f3f0:	ldr	r2, [r3, r2, lsl #2]
   2f3f4:	ldr	r3, [fp, #-16]
   2f3f8:	cmp	r2, r3
   2f3fc:	bls	2f40c <flatcc_emitter_copy_buffer@@Base+0x2df4>
   2f400:	ldr	r3, [fp, #-8]
   2f404:	sub	r3, r3, #1
   2f408:	str	r3, [fp, #-8]
   2f40c:	ldr	r3, [pc, #40]	; 2f43c <flatcc_emitter_copy_buffer@@Base+0x2e24>
   2f410:	add	r3, pc, r3
   2f414:	ldr	r2, [fp, #-8]
   2f418:	ldr	r2, [r3, r2, lsl #2]
   2f41c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f420:	str	r2, [r3]
   2f424:	ldr	r3, [fp, #-8]
   2f428:	mov	r0, r3
   2f42c:	add	sp, fp, #0
   2f430:	pop	{fp}		; (ldr fp, [sp], #4)
   2f434:	bx	lr
   2f438:	andeq	r7, r0, r0, lsl #11
   2f43c:	andeq	r7, r0, r8, asr r5
   2f440:	push	{fp, lr}
   2f444:	add	fp, sp, #4
   2f448:	sub	sp, sp, #24
   2f44c:	str	r0, [fp, #-24]	; 0xffffffe8
   2f450:	str	r1, [fp, #-28]	; 0xffffffe4
   2f454:	mov	r3, #348	; 0x15c
   2f458:	str	r3, [fp, #-8]
   2f45c:	mov	r3, #8
   2f460:	str	r3, [fp, #-12]
   2f464:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f468:	cmn	r3, #348	; 0x15c
   2f46c:	bge	2f490 <flatcc_emitter_copy_buffer@@Base+0x2e78>
   2f470:	ldr	r3, [pc, #332]	; 2f5c4 <flatcc_emitter_copy_buffer@@Base+0x2fac>
   2f474:	add	r3, pc, r3
   2f478:	mov	r2, #80	; 0x50
   2f47c:	ldr	r1, [pc, #324]	; 2f5c8 <flatcc_emitter_copy_buffer@@Base+0x2fb0>
   2f480:	add	r1, pc, r1
   2f484:	ldr	r0, [pc, #320]	; 2f5cc <flatcc_emitter_copy_buffer@@Base+0x2fb4>
   2f488:	add	r0, pc, r0
   2f48c:	bl	12704 <__assert_fail@plt>
   2f490:	ldr	r3, [fp, #-12]
   2f494:	add	r2, r3, #340	; 0x154
   2f498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f49c:	cmp	r2, r3
   2f4a0:	bgt	2f4c4 <flatcc_emitter_copy_buffer@@Base+0x2eac>
   2f4a4:	ldr	r3, [pc, #292]	; 2f5d0 <flatcc_emitter_copy_buffer@@Base+0x2fb8>
   2f4a8:	add	r3, pc, r3
   2f4ac:	mov	r2, #81	; 0x51
   2f4b0:	ldr	r1, [pc, #284]	; 2f5d4 <flatcc_emitter_copy_buffer@@Base+0x2fbc>
   2f4b4:	add	r1, pc, r1
   2f4b8:	ldr	r0, [pc, #280]	; 2f5d8 <flatcc_emitter_copy_buffer@@Base+0x2fc0>
   2f4bc:	add	r0, pc, r0
   2f4c0:	bl	12704 <__assert_fail@plt>
   2f4c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f4c8:	ldr	r3, [fp, #-8]
   2f4cc:	add	r3, r2, r3
   2f4d0:	ldr	r1, [fp, #-12]
   2f4d4:	mov	r0, r3
   2f4d8:	bl	34c38 <flatcc_json_parser_struct_as_root@@Base+0x124>
   2f4dc:	mov	r3, r0
   2f4e0:	str	r3, [fp, #-16]
   2f4e4:	ldr	r2, [pc, #240]	; 2f5dc <flatcc_emitter_copy_buffer@@Base+0x2fc4>
   2f4e8:	add	r2, pc, r2
   2f4ec:	ldr	r3, [fp, #-16]
   2f4f0:	lsl	r3, r3, #4
   2f4f4:	add	r3, r2, r3
   2f4f8:	add	r3, r3, #10
   2f4fc:	ldrsh	r3, [r3]
   2f500:	str	r3, [fp, #-20]	; 0xffffffec
   2f504:	ldr	r2, [pc, #212]	; 2f5e0 <flatcc_emitter_copy_buffer@@Base+0x2fc8>
   2f508:	add	r2, pc, r2
   2f50c:	ldr	r3, [fp, #-16]
   2f510:	lsl	r3, r3, #4
   2f514:	add	r3, r2, r3
   2f518:	ldrd	r2, [r3]
   2f51c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2f520:	strd	r2, [r1]
   2f524:	ldr	r2, [pc, #184]	; 2f5e4 <flatcc_emitter_copy_buffer@@Base+0x2fcc>
   2f528:	add	r2, pc, r2
   2f52c:	ldr	r3, [fp, #-16]
   2f530:	lsl	r3, r3, #4
   2f534:	add	r3, r2, r3
   2f538:	add	r3, r3, #8
   2f53c:	ldrsh	r3, [r3]
   2f540:	mov	r2, r3
   2f544:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f548:	str	r2, [r3, #8]
   2f54c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f550:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f554:	cmp	r2, r3
   2f558:	ble	2f57c <flatcc_emitter_copy_buffer@@Base+0x2f64>
   2f55c:	ldr	r3, [pc, #132]	; 2f5e8 <flatcc_emitter_copy_buffer@@Base+0x2fd0>
   2f560:	add	r3, pc, r3
   2f564:	mov	r2, #88	; 0x58
   2f568:	ldr	r1, [pc, #124]	; 2f5ec <flatcc_emitter_copy_buffer@@Base+0x2fd4>
   2f56c:	add	r1, pc, r1
   2f570:	ldr	r0, [pc, #120]	; 2f5f0 <flatcc_emitter_copy_buffer@@Base+0x2fd8>
   2f574:	add	r0, pc, r0
   2f578:	bl	12704 <__assert_fail@plt>
   2f57c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f580:	ldr	r3, [fp, #-12]
   2f584:	add	r2, r2, r3
   2f588:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f58c:	cmp	r2, r3
   2f590:	bgt	2f5b4 <flatcc_emitter_copy_buffer@@Base+0x2f9c>
   2f594:	ldr	r3, [pc, #88]	; 2f5f4 <flatcc_emitter_copy_buffer@@Base+0x2fdc>
   2f598:	add	r3, pc, r3
   2f59c:	mov	r2, #89	; 0x59
   2f5a0:	ldr	r1, [pc, #80]	; 2f5f8 <flatcc_emitter_copy_buffer@@Base+0x2fe0>
   2f5a4:	add	r1, pc, r1
   2f5a8:	ldr	r0, [pc, #76]	; 2f5fc <flatcc_emitter_copy_buffer@@Base+0x2fe4>
   2f5ac:	add	r0, pc, r0
   2f5b0:	bl	12704 <__assert_fail@plt>
   2f5b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f5b8:	mov	r0, r3
   2f5bc:	sub	sp, fp, #4
   2f5c0:	pop	{fp, pc}
   2f5c4:	andeq	r7, r0, r0, lsl #21
   2f5c8:	andeq	r7, r0, r4, lsl r5
   2f5cc:	andeq	r7, r0, ip, ror r5
   2f5d0:	andeq	r7, r0, ip, asr #20
   2f5d4:	andeq	r7, r0, r0, ror #9
   2f5d8:	andeq	r7, r0, r8, ror #10
   2f5dc:	andeq	r6, r0, r8, ror lr
   2f5e0:	andeq	r6, r0, r8, asr lr
   2f5e4:	andeq	r6, r0, r8, lsr lr
   2f5e8:	muleq	r0, r4, r9
   2f5ec:	andeq	r7, r0, r8, lsr #8
   2f5f0:	ldrdeq	r7, [r0], -ip
   2f5f4:	andeq	r7, r0, ip, asr r9
   2f5f8:	strdeq	r7, [r0], -r0
   2f5fc:			; <UNDEFINED> instruction: 0x000074b4

0002f600 <grisu3_diy_fp_encode_double@@Base>:
   2f600:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2f604:	add	fp, sp, #28
   2f608:	sub	sp, sp, #184	; 0xb8
   2f60c:	strd	r0, [fp, #-156]	; 0xffffff64
   2f610:	str	r2, [fp, #-160]	; 0xffffff60
   2f614:	str	r3, [fp, #-164]	; 0xffffff5c
   2f618:	mov	r3, #3
   2f61c:	str	r3, [fp, #-40]	; 0xffffffd8
   2f620:	mov	r2, #1
   2f624:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f628:	lsl	r3, r2, r3
   2f62c:	str	r3, [fp, #-44]	; 0xffffffd4
   2f630:	ldr	r3, [pc, #1264]	; 2fb28 <grisu3_diy_fp_encode_double@@Base+0x528>
   2f634:	str	r3, [fp, #-48]	; 0xffffffd0
   2f638:	mov	r2, #0
   2f63c:	mov	r3, #1048576	; 0x100000
   2f640:	strd	r2, [fp, #-60]	; 0xffffffc4
   2f644:	mov	r3, #64	; 0x40
   2f648:	str	r3, [fp, #-64]	; 0xffffffc0
   2f64c:	mov	r3, #19
   2f650:	str	r3, [fp, #-68]	; 0xffffffbc
   2f654:	ldr	r3, [fp, #4]
   2f658:	cmp	r3, #0
   2f65c:	beq	2f674 <grisu3_diy_fp_encode_double@@Base+0x74>
   2f660:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f664:	lsr	r2, r3, #31
   2f668:	add	r3, r2, r3
   2f66c:	asr	r3, r3, #1
   2f670:	b	2f678 <grisu3_diy_fp_encode_double@@Base+0x78>
   2f674:	mov	r3, #0
   2f678:	str	r3, [fp, #-32]	; 0xffffffe0
   2f67c:	ldr	r2, [fp, #-160]	; 0xffffff60
   2f680:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2f684:	sub	r3, r2, r3
   2f688:	str	r3, [fp, #-72]	; 0xffffffb8
   2f68c:	ldrd	r2, [fp, #-156]	; 0xffffff64
   2f690:	strd	r2, [fp, #-116]	; 0xffffff8c
   2f694:	mov	r3, #0
   2f698:	str	r3, [fp, #-108]	; 0xffffff94
   2f69c:	sub	ip, fp, #116	; 0x74
   2f6a0:	mov	r2, sp
   2f6a4:	sub	r3, fp, #108	; 0x6c
   2f6a8:	ldm	r3, {r0, r1}
   2f6ac:	stm	r2, {r0, r1}
   2f6b0:	sub	r3, fp, #116	; 0x74
   2f6b4:	ldm	r3, {r2, r3}
   2f6b8:	mov	r0, ip
   2f6bc:	bl	2f034 <flatcc_emitter_copy_buffer@@Base+0x2a1c>
   2f6c0:	ldr	r3, [fp, #-108]	; 0xffffff94
   2f6c4:	rsb	r3, r3, #0
   2f6c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f6cc:	lsl	r3, r2, r3
   2f6d0:	str	r3, [fp, #-32]	; 0xffffffe0
   2f6d4:	sub	r3, fp, #132	; 0x84
   2f6d8:	mov	r1, r3
   2f6dc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2f6e0:	bl	2f440 <flatcc_emitter_copy_buffer@@Base+0x2e28>
   2f6e4:	str	r0, [fp, #-76]	; 0xffffffb4
   2f6e8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   2f6ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2f6f0:	cmp	r2, r3
   2f6f4:	beq	2f7d4 <grisu3_diy_fp_encode_double@@Base+0x1d4>
   2f6f8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2f6fc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2f700:	sub	r3, r2, r3
   2f704:	sub	r3, r3, #1
   2f708:	str	r3, [fp, #-80]	; 0xffffffb0
   2f70c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2f710:	cmp	r3, #0
   2f714:	blt	2f724 <grisu3_diy_fp_encode_double@@Base+0x124>
   2f718:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2f71c:	cmp	r3, #6
   2f720:	ble	2f744 <grisu3_diy_fp_encode_double@@Base+0x144>
   2f724:	ldr	r3, [pc, #1024]	; 2fb2c <grisu3_diy_fp_encode_double@@Base+0x52c>
   2f728:	add	r3, pc, r3
   2f72c:	mov	r2, #185	; 0xb9
   2f730:	ldr	r1, [pc, #1016]	; 2fb30 <grisu3_diy_fp_encode_double@@Base+0x530>
   2f734:	add	r1, pc, r1
   2f738:	ldr	r0, [pc, #1012]	; 2fb34 <grisu3_diy_fp_encode_double@@Base+0x534>
   2f73c:	add	r0, pc, r0
   2f740:	bl	12704 <__assert_fail@plt>
   2f744:	sub	lr, fp, #180	; 0xb4
   2f748:	ldr	r2, [pc, #1000]	; 2fb38 <grisu3_diy_fp_encode_double@@Base+0x538>
   2f74c:	add	r2, pc, r2
   2f750:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2f754:	add	ip, sp, #8
   2f758:	lsl	r3, r3, #4
   2f75c:	add	r3, r2, r3
   2f760:	ldm	r3, {r0, r1, r2, r3}
   2f764:	stm	ip, {r0, r1, r2, r3}
   2f768:	mov	r2, sp
   2f76c:	sub	r3, fp, #108	; 0x6c
   2f770:	ldm	r3, {r0, r1}
   2f774:	stm	r2, {r0, r1}
   2f778:	sub	r3, fp, #116	; 0x74
   2f77c:	ldm	r3, {r2, r3}
   2f780:	mov	r0, lr
   2f784:	bl	2ede4 <flatcc_emitter_copy_buffer@@Base+0x27cc>
   2f788:	sub	ip, fp, #116	; 0x74
   2f78c:	sub	r3, fp, #180	; 0xb4
   2f790:	ldm	r3, {r0, r1, r2, r3}
   2f794:	stm	ip, {r0, r1, r2, r3}
   2f798:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2f79c:	add	r2, r3, #1
   2f7a0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2f7a4:	add	r2, r2, r3
   2f7a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f7ac:	cmp	r2, r3
   2f7b0:	ble	2f7d4 <grisu3_diy_fp_encode_double@@Base+0x1d4>
   2f7b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f7b8:	lsr	r2, r3, #31
   2f7bc:	add	r3, r2, r3
   2f7c0:	asr	r3, r3, #1
   2f7c4:	mov	r2, r3
   2f7c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f7cc:	add	r3, r3, r2
   2f7d0:	str	r3, [fp, #-32]	; 0xffffffe0
   2f7d4:	sub	lr, fp, #180	; 0xb4
   2f7d8:	add	ip, sp, #8
   2f7dc:	sub	r3, fp, #132	; 0x84
   2f7e0:	ldm	r3, {r0, r1, r2, r3}
   2f7e4:	stm	ip, {r0, r1, r2, r3}
   2f7e8:	mov	r2, sp
   2f7ec:	sub	r3, fp, #108	; 0x6c
   2f7f0:	ldm	r3, {r0, r1}
   2f7f4:	stm	r2, {r0, r1}
   2f7f8:	sub	r3, fp, #116	; 0x74
   2f7fc:	ldm	r3, {r2, r3}
   2f800:	mov	r0, lr
   2f804:	bl	2ede4 <flatcc_emitter_copy_buffer@@Base+0x27cc>
   2f808:	sub	ip, fp, #116	; 0x74
   2f80c:	sub	r3, fp, #180	; 0xb4
   2f810:	ldm	r3, {r0, r1, r2, r3}
   2f814:	stm	ip, {r0, r1, r2, r3}
   2f818:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f81c:	cmp	r3, #0
   2f820:	movne	r3, #1
   2f824:	moveq	r3, #0
   2f828:	uxtb	r3, r3
   2f82c:	mov	r2, r3
   2f830:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f834:	add	r3, r2, r3
   2f838:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f83c:	add	r3, r2, r3
   2f840:	str	r3, [fp, #-32]	; 0xffffffe0
   2f844:	ldr	r3, [fp, #-108]	; 0xffffff94
   2f848:	str	r3, [fp, #-84]	; 0xffffffac
   2f84c:	sub	ip, fp, #180	; 0xb4
   2f850:	mov	r2, sp
   2f854:	sub	r3, fp, #108	; 0x6c
   2f858:	ldm	r3, {r0, r1}
   2f85c:	stm	r2, {r0, r1}
   2f860:	sub	r3, fp, #116	; 0x74
   2f864:	ldm	r3, {r2, r3}
   2f868:	mov	r0, ip
   2f86c:	bl	2f034 <flatcc_emitter_copy_buffer@@Base+0x2a1c>
   2f870:	sub	ip, fp, #116	; 0x74
   2f874:	sub	r3, fp, #180	; 0xb4
   2f878:	ldm	r3, {r0, r1, r2, r3}
   2f87c:	stm	ip, {r0, r1, r2, r3}
   2f880:	ldr	r3, [fp, #-108]	; 0xffffff94
   2f884:	ldr	r2, [fp, #-84]	; 0xffffffac
   2f888:	sub	r3, r2, r3
   2f88c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f890:	lsl	r3, r2, r3
   2f894:	str	r3, [fp, #-32]	; 0xffffffe0
   2f898:	ldr	r2, [fp, #-108]	; 0xffffff94
   2f89c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2f8a0:	add	r3, r2, r3
   2f8a4:	str	r3, [fp, #-88]	; 0xffffffa8
   2f8a8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2f8ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f8b0:	add	r2, r2, r3
   2f8b4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2f8b8:	cmp	r2, r3
   2f8bc:	ble	2f8e8 <grisu3_diy_fp_encode_double@@Base+0x2e8>
   2f8c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2f8c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f8c8:	cmp	r2, r3
   2f8cc:	ble	2f8e0 <grisu3_diy_fp_encode_double@@Base+0x2e0>
   2f8d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2f8d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f8d8:	sub	r3, r2, r3
   2f8dc:	b	2f8ec <grisu3_diy_fp_encode_double@@Base+0x2ec>
   2f8e0:	mov	r3, #0
   2f8e4:	b	2f8ec <grisu3_diy_fp_encode_double@@Base+0x2ec>
   2f8e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2f8ec:	str	r3, [fp, #-88]	; 0xffffffa8
   2f8f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2f8f4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2f8f8:	sub	r3, r2, r3
   2f8fc:	str	r3, [fp, #-36]	; 0xffffffdc
   2f900:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f904:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f908:	add	r2, r2, r3
   2f90c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2f910:	cmp	r2, r3
   2f914:	blt	2f994 <grisu3_diy_fp_encode_double@@Base+0x394>
   2f918:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f91c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f920:	add	r2, r2, r3
   2f924:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2f928:	sub	r3, r2, r3
   2f92c:	sub	r3, r3, #1
   2f930:	str	r3, [fp, #-92]	; 0xffffffa4
   2f934:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   2f938:	ldr	r1, [fp, #-92]	; 0xffffffa4
   2f93c:	rsb	ip, r1, #32
   2f940:	sub	r0, r1, #32
   2f944:	lsr	r8, r2, r1
   2f948:	orr	r8, r8, r3, lsl ip
   2f94c:	orr	r8, r8, r3, lsr r0
   2f950:	lsr	r9, r3, r1
   2f954:	strd	r8, [fp, #-116]	; 0xffffff8c
   2f958:	ldr	r2, [fp, #-108]	; 0xffffff94
   2f95c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2f960:	add	r3, r2, r3
   2f964:	str	r3, [fp, #-108]	; 0xffffff94
   2f968:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f96c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2f970:	asr	r3, r2, r3
   2f974:	add	r2, r3, #1
   2f978:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f97c:	add	r3, r2, r3
   2f980:	str	r3, [fp, #-32]	; 0xffffffe0
   2f984:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f988:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2f98c:	sub	r3, r2, r3
   2f990:	str	r3, [fp, #-36]	; 0xffffffdc
   2f994:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   2f998:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f99c:	rsb	ip, r1, #32
   2f9a0:	sub	r0, r1, #32
   2f9a4:	lsr	r6, r2, r1
   2f9a8:	orr	r6, r6, r3, lsl ip
   2f9ac:	orr	r6, r6, r3, lsr r0
   2f9b0:	lsr	r7, r3, r1
   2f9b4:	strd	r6, [fp, #-148]	; 0xffffff6c
   2f9b8:	ldr	r2, [fp, #-108]	; 0xffffff94
   2f9bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f9c0:	add	r3, r2, r3
   2f9c4:	str	r3, [fp, #-140]	; 0xffffff74
   2f9c8:	ldrd	r6, [fp, #-116]	; 0xffffff8c
   2f9cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f9d0:	sub	r1, r3, #1
   2f9d4:	mov	r2, #1
   2f9d8:	mov	r3, #0
   2f9dc:	sub	ip, r1, #32
   2f9e0:	rsb	r0, r1, #32
   2f9e4:	lsl	r5, r3, r1
   2f9e8:	orr	r5, r5, r2, lsl ip
   2f9ec:	orr	r5, r5, r2, lsr r0
   2f9f0:	lsl	r4, r2, r1
   2f9f4:	and	r2, r6, r4
   2f9f8:	and	r3, r7, r5
   2f9fc:	mov	r1, r2
   2fa00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fa04:	mov	r2, r3
   2fa08:	asr	r3, r2, #31
   2fa0c:	mov	r3, r2
   2fa10:	mul	r3, r3, r1
   2fa14:	str	r3, [fp, #-96]	; 0xffffffa0
   2fa18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fa1c:	mov	r2, r3
   2fa20:	asr	r3, r2, #31
   2fa24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2fa28:	sub	r1, r1, #1
   2fa2c:	sub	ip, r1, #32
   2fa30:	rsb	r0, r1, #32
   2fa34:	lsl	lr, r3, r1
   2fa38:	str	lr, [fp, #-184]	; 0xffffff48
   2fa3c:	ldr	lr, [fp, #-184]	; 0xffffff48
   2fa40:	orr	ip, lr, r2, lsl ip
   2fa44:	str	ip, [fp, #-184]	; 0xffffff48
   2fa48:	ldr	ip, [fp, #-184]	; 0xffffff48
   2fa4c:	orr	r0, ip, r2, lsr r0
   2fa50:	str	r0, [fp, #-184]	; 0xffffff48
   2fa54:	lsl	r3, r2, r1
   2fa58:	str	r3, [fp, #-188]	; 0xffffff44
   2fa5c:	ldr	r3, [fp, #-188]	; 0xffffff44
   2fa60:	str	r3, [fp, #-100]	; 0xffffff9c
   2fa64:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2fa68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fa6c:	add	r2, r2, r3
   2fa70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fa74:	cmp	r2, r3
   2fa78:	bgt	2fac8 <grisu3_diy_fp_encode_double@@Base+0x4c8>
   2fa7c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   2fa80:	adds	r2, r2, #1
   2fa84:	adc	r3, r3, #0
   2fa88:	strd	r2, [fp, #-148]	; 0xffffff6c
   2fa8c:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   2fa90:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   2fa94:	adds	r2, r2, r2
   2fa98:	adc	r3, r3, r3
   2fa9c:	and	r2, r2, r0
   2faa0:	and	r3, r3, r1
   2faa4:	orrs	r3, r2, r3
   2faa8:	beq	2fac8 <grisu3_diy_fp_encode_double@@Base+0x4c8>
   2faac:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   2fab0:	lsrs	r3, r3, #1
   2fab4:	rrx	r2, r2
   2fab8:	strd	r2, [fp, #-148]	; 0xffffff6c
   2fabc:	ldr	r3, [fp, #-140]	; 0xffffff74
   2fac0:	add	r3, r3, #1
   2fac4:	str	r3, [fp, #-140]	; 0xffffff74
   2fac8:	sub	r3, fp, #148	; 0x94
   2facc:	ldm	r3, {r0, r1, r2, r3}
   2fad0:	bl	2f1f0 <flatcc_emitter_copy_buffer@@Base+0x2bd8>
   2fad4:	vmov.f64	d7, d0
   2fad8:	ldr	r3, [fp, #8]
   2fadc:	vstr	d7, [r3]
   2fae0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2fae4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fae8:	sub	r2, r2, r3
   2faec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2faf0:	cmp	r2, r3
   2faf4:	bge	2fb10 <grisu3_diy_fp_encode_double@@Base+0x510>
   2faf8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2fafc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fb00:	add	r2, r2, r3
   2fb04:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2fb08:	cmp	r2, r3
   2fb0c:	bgt	2fb18 <grisu3_diy_fp_encode_double@@Base+0x518>
   2fb10:	mov	r3, #1
   2fb14:	b	2fb1c <grisu3_diy_fp_encode_double@@Base+0x51c>
   2fb18:	mov	r3, #0
   2fb1c:	mov	r0, r3
   2fb20:	sub	sp, fp, #28
   2fb24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2fb28:			; <UNDEFINED> instruction: 0xfffffbce
   2fb2c:	andeq	r7, r0, ip, ror #15
   2fb30:	andeq	r7, r0, r0, ror #4
   2fb34:	andeq	r7, r0, r0, asr #6
   2fb38:	strdeq	r8, [r1], -r4
   2fb3c:	push	{fp, lr}
   2fb40:	add	fp, sp, #4
   2fb44:	sub	sp, sp, #48	; 0x30
   2fb48:	str	r0, [fp, #-32]	; 0xffffffe0
   2fb4c:	str	r1, [fp, #-36]	; 0xffffffdc
   2fb50:	str	r2, [fp, #-40]	; 0xffffffd8
   2fb54:	ldr	r3, [pc, #1556]	; 30170 <grisu3_diy_fp_encode_double@@Base+0xb70>
   2fb58:	str	r3, [fp, #-16]
   2fb5c:	ldr	r3, [pc, #1552]	; 30174 <grisu3_diy_fp_encode_double@@Base+0xb74>
   2fb60:	str	r3, [fp, #-20]	; 0xffffffec
   2fb64:	ldrd	r2, [fp, #4]
   2fb68:	orrs	r3, r2, r3
   2fb6c:	beq	2fb80 <grisu3_diy_fp_encode_double@@Base+0x580>
   2fb70:	ldr	r2, [fp, #12]
   2fb74:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fb78:	cmp	r2, r3
   2fb7c:	bge	2fb94 <grisu3_diy_fp_encode_double@@Base+0x594>
   2fb80:	ldr	r1, [fp, #24]
   2fb84:	mov	r2, #0
   2fb88:	mov	r3, #0
   2fb8c:	strd	r2, [r1]
   2fb90:	b	30184 <grisu3_diy_fp_encode_double@@Base+0xb84>
   2fb94:	ldr	r3, [fp, #12]
   2fb98:	sub	r2, r3, #1
   2fb9c:	ldr	r3, [fp, #-16]
   2fba0:	cmp	r2, r3
   2fba4:	ble	2fbc4 <grisu3_diy_fp_encode_double@@Base+0x5c4>
   2fba8:	mov	r0, #0
   2fbac:	ldr	r1, [pc, #1476]	; 30178 <grisu3_diy_fp_encode_double@@Base+0xb78>
   2fbb0:	bl	2eba8 <flatcc_emitter_copy_buffer@@Base+0x2590>
   2fbb4:	vmov.f64	d7, d0
   2fbb8:	ldr	r3, [fp, #24]
   2fbbc:	vstr	d7, [r3]
   2fbc0:	b	30184 <grisu3_diy_fp_encode_double@@Base+0xb84>
   2fbc4:	ldrd	r2, [fp, #4]
   2fbc8:	mvn	r0, #0
   2fbcc:	ldr	r1, [pc, #1448]	; 3017c <grisu3_diy_fp_encode_double@@Base+0xb7c>
   2fbd0:	cmp	r3, r1
   2fbd4:	cmpeq	r2, r0
   2fbd8:	bhi	30058 <grisu3_diy_fp_encode_double@@Base+0xa58>
   2fbdc:	ldr	r3, [fp, #12]
   2fbe0:	cmp	r3, #0
   2fbe4:	blt	30058 <grisu3_diy_fp_encode_double@@Base+0xa58>
   2fbe8:	ldr	r3, [fp, #12]
   2fbec:	cmp	r3, #22
   2fbf0:	bgt	30058 <grisu3_diy_fp_encode_double@@Base+0xa58>
   2fbf4:	ldrd	r0, [fp, #4]
   2fbf8:	bl	351bc <flatcc_json_parser_struct_as_root@@Base+0x6a8>
   2fbfc:	mov	r2, r0
   2fc00:	mov	r3, r1
   2fc04:	strd	r2, [fp, #-12]
   2fc08:	ldr	r2, [fp, #12]
   2fc0c:	ldr	r3, [fp, #16]
   2fc10:	sub	r3, r2, r3
   2fc14:	add	r3, r3, #22
   2fc18:	cmp	r3, #44	; 0x2c
   2fc1c:	addls	pc, pc, r3, lsl #2
   2fc20:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fc24:	b	2fcd8 <grisu3_diy_fp_encode_double@@Base+0x6d8>
   2fc28:	b	2fcec <grisu3_diy_fp_encode_double@@Base+0x6ec>
   2fc2c:	b	2fd00 <grisu3_diy_fp_encode_double@@Base+0x700>
   2fc30:	b	2fd14 <grisu3_diy_fp_encode_double@@Base+0x714>
   2fc34:	b	2fd28 <grisu3_diy_fp_encode_double@@Base+0x728>
   2fc38:	b	2fd3c <grisu3_diy_fp_encode_double@@Base+0x73c>
   2fc3c:	b	2fd50 <grisu3_diy_fp_encode_double@@Base+0x750>
   2fc40:	b	2fd64 <grisu3_diy_fp_encode_double@@Base+0x764>
   2fc44:	b	2fd78 <grisu3_diy_fp_encode_double@@Base+0x778>
   2fc48:	b	2fd8c <grisu3_diy_fp_encode_double@@Base+0x78c>
   2fc4c:	b	2fda0 <grisu3_diy_fp_encode_double@@Base+0x7a0>
   2fc50:	b	2fdb4 <grisu3_diy_fp_encode_double@@Base+0x7b4>
   2fc54:	b	2fdc8 <grisu3_diy_fp_encode_double@@Base+0x7c8>
   2fc58:	b	2fddc <grisu3_diy_fp_encode_double@@Base+0x7dc>
   2fc5c:	b	2fdf0 <grisu3_diy_fp_encode_double@@Base+0x7f0>
   2fc60:	b	2fe04 <grisu3_diy_fp_encode_double@@Base+0x804>
   2fc64:	b	2fe18 <grisu3_diy_fp_encode_double@@Base+0x818>
   2fc68:	b	2fe2c <grisu3_diy_fp_encode_double@@Base+0x82c>
   2fc6c:	b	2fe40 <grisu3_diy_fp_encode_double@@Base+0x840>
   2fc70:	b	2fe54 <grisu3_diy_fp_encode_double@@Base+0x854>
   2fc74:	b	2fe68 <grisu3_diy_fp_encode_double@@Base+0x868>
   2fc78:	b	2fe7c <grisu3_diy_fp_encode_double@@Base+0x87c>
   2fc7c:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fc80:	b	2fe90 <grisu3_diy_fp_encode_double@@Base+0x890>
   2fc84:	b	2fea4 <grisu3_diy_fp_encode_double@@Base+0x8a4>
   2fc88:	b	2feb8 <grisu3_diy_fp_encode_double@@Base+0x8b8>
   2fc8c:	b	2fecc <grisu3_diy_fp_encode_double@@Base+0x8cc>
   2fc90:	b	2fee0 <grisu3_diy_fp_encode_double@@Base+0x8e0>
   2fc94:	b	2fef4 <grisu3_diy_fp_encode_double@@Base+0x8f4>
   2fc98:	b	2ff08 <grisu3_diy_fp_encode_double@@Base+0x908>
   2fc9c:	b	2ff1c <grisu3_diy_fp_encode_double@@Base+0x91c>
   2fca0:	b	2ff30 <grisu3_diy_fp_encode_double@@Base+0x930>
   2fca4:	b	2ff44 <grisu3_diy_fp_encode_double@@Base+0x944>
   2fca8:	b	2ff58 <grisu3_diy_fp_encode_double@@Base+0x958>
   2fcac:	b	2ff6c <grisu3_diy_fp_encode_double@@Base+0x96c>
   2fcb0:	b	2ff80 <grisu3_diy_fp_encode_double@@Base+0x980>
   2fcb4:	b	2ff94 <grisu3_diy_fp_encode_double@@Base+0x994>
   2fcb8:	b	2ffa8 <grisu3_diy_fp_encode_double@@Base+0x9a8>
   2fcbc:	b	2ffbc <grisu3_diy_fp_encode_double@@Base+0x9bc>
   2fcc0:	b	2ffd0 <grisu3_diy_fp_encode_double@@Base+0x9d0>
   2fcc4:	b	2ffe4 <grisu3_diy_fp_encode_double@@Base+0x9e4>
   2fcc8:	b	2fff8 <grisu3_diy_fp_encode_double@@Base+0x9f8>
   2fccc:	b	3000c <grisu3_diy_fp_encode_double@@Base+0xa0c>
   2fcd0:	b	30020 <grisu3_diy_fp_encode_double@@Base+0xa20>
   2fcd4:	b	30034 <grisu3_diy_fp_encode_double@@Base+0xa34>
   2fcd8:	vldr	d6, [fp, #-12]
   2fcdc:	vldr	d5, [pc, #988]	; 300c0 <grisu3_diy_fp_encode_double@@Base+0xac0>
   2fce0:	vdiv.f64	d7, d6, d5
   2fce4:	vstr	d7, [fp, #-12]
   2fce8:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fcec:	vldr	d6, [fp, #-12]
   2fcf0:	vldr	d5, [pc, #976]	; 300c8 <grisu3_diy_fp_encode_double@@Base+0xac8>
   2fcf4:	vdiv.f64	d7, d6, d5
   2fcf8:	vstr	d7, [fp, #-12]
   2fcfc:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fd00:	vldr	d6, [fp, #-12]
   2fd04:	vldr	d5, [pc, #964]	; 300d0 <grisu3_diy_fp_encode_double@@Base+0xad0>
   2fd08:	vdiv.f64	d7, d6, d5
   2fd0c:	vstr	d7, [fp, #-12]
   2fd10:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fd14:	vldr	d6, [fp, #-12]
   2fd18:	vldr	d5, [pc, #952]	; 300d8 <grisu3_diy_fp_encode_double@@Base+0xad8>
   2fd1c:	vdiv.f64	d7, d6, d5
   2fd20:	vstr	d7, [fp, #-12]
   2fd24:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fd28:	vldr	d6, [fp, #-12]
   2fd2c:	vldr	d5, [pc, #940]	; 300e0 <grisu3_diy_fp_encode_double@@Base+0xae0>
   2fd30:	vdiv.f64	d7, d6, d5
   2fd34:	vstr	d7, [fp, #-12]
   2fd38:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fd3c:	vldr	d6, [fp, #-12]
   2fd40:	vldr	d5, [pc, #928]	; 300e8 <grisu3_diy_fp_encode_double@@Base+0xae8>
   2fd44:	vdiv.f64	d7, d6, d5
   2fd48:	vstr	d7, [fp, #-12]
   2fd4c:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fd50:	vldr	d6, [fp, #-12]
   2fd54:	vldr	d5, [pc, #916]	; 300f0 <grisu3_diy_fp_encode_double@@Base+0xaf0>
   2fd58:	vdiv.f64	d7, d6, d5
   2fd5c:	vstr	d7, [fp, #-12]
   2fd60:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fd64:	vldr	d6, [fp, #-12]
   2fd68:	vldr	d5, [pc, #904]	; 300f8 <grisu3_diy_fp_encode_double@@Base+0xaf8>
   2fd6c:	vdiv.f64	d7, d6, d5
   2fd70:	vstr	d7, [fp, #-12]
   2fd74:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fd78:	vldr	d6, [fp, #-12]
   2fd7c:	vldr	d5, [pc, #892]	; 30100 <grisu3_diy_fp_encode_double@@Base+0xb00>
   2fd80:	vdiv.f64	d7, d6, d5
   2fd84:	vstr	d7, [fp, #-12]
   2fd88:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fd8c:	vldr	d6, [fp, #-12]
   2fd90:	vldr	d5, [pc, #880]	; 30108 <grisu3_diy_fp_encode_double@@Base+0xb08>
   2fd94:	vdiv.f64	d7, d6, d5
   2fd98:	vstr	d7, [fp, #-12]
   2fd9c:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fda0:	vldr	d6, [fp, #-12]
   2fda4:	vldr	d5, [pc, #868]	; 30110 <grisu3_diy_fp_encode_double@@Base+0xb10>
   2fda8:	vdiv.f64	d7, d6, d5
   2fdac:	vstr	d7, [fp, #-12]
   2fdb0:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fdb4:	vldr	d6, [fp, #-12]
   2fdb8:	vldr	d5, [pc, #856]	; 30118 <grisu3_diy_fp_encode_double@@Base+0xb18>
   2fdbc:	vdiv.f64	d7, d6, d5
   2fdc0:	vstr	d7, [fp, #-12]
   2fdc4:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fdc8:	vldr	d6, [fp, #-12]
   2fdcc:	vldr	d5, [pc, #844]	; 30120 <grisu3_diy_fp_encode_double@@Base+0xb20>
   2fdd0:	vdiv.f64	d7, d6, d5
   2fdd4:	vstr	d7, [fp, #-12]
   2fdd8:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fddc:	vldr	d6, [fp, #-12]
   2fde0:	vldr	d5, [pc, #832]	; 30128 <grisu3_diy_fp_encode_double@@Base+0xb28>
   2fde4:	vdiv.f64	d7, d6, d5
   2fde8:	vstr	d7, [fp, #-12]
   2fdec:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fdf0:	vldr	d6, [fp, #-12]
   2fdf4:	vldr	d5, [pc, #820]	; 30130 <grisu3_diy_fp_encode_double@@Base+0xb30>
   2fdf8:	vdiv.f64	d7, d6, d5
   2fdfc:	vstr	d7, [fp, #-12]
   2fe00:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fe04:	vldr	d6, [fp, #-12]
   2fe08:	vldr	d5, [pc, #808]	; 30138 <grisu3_diy_fp_encode_double@@Base+0xb38>
   2fe0c:	vdiv.f64	d7, d6, d5
   2fe10:	vstr	d7, [fp, #-12]
   2fe14:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fe18:	vldr	d6, [fp, #-12]
   2fe1c:	vldr	d5, [pc, #796]	; 30140 <grisu3_diy_fp_encode_double@@Base+0xb40>
   2fe20:	vdiv.f64	d7, d6, d5
   2fe24:	vstr	d7, [fp, #-12]
   2fe28:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fe2c:	vldr	d6, [fp, #-12]
   2fe30:	vldr	d5, [pc, #784]	; 30148 <grisu3_diy_fp_encode_double@@Base+0xb48>
   2fe34:	vdiv.f64	d7, d6, d5
   2fe38:	vstr	d7, [fp, #-12]
   2fe3c:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fe40:	vldr	d6, [fp, #-12]
   2fe44:	vldr	d5, [pc, #772]	; 30150 <grisu3_diy_fp_encode_double@@Base+0xb50>
   2fe48:	vdiv.f64	d7, d6, d5
   2fe4c:	vstr	d7, [fp, #-12]
   2fe50:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fe54:	vldr	d6, [fp, #-12]
   2fe58:	vldr	d5, [pc, #760]	; 30158 <grisu3_diy_fp_encode_double@@Base+0xb58>
   2fe5c:	vdiv.f64	d7, d6, d5
   2fe60:	vstr	d7, [fp, #-12]
   2fe64:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fe68:	vldr	d6, [fp, #-12]
   2fe6c:	vldr	d5, [pc, #748]	; 30160 <grisu3_diy_fp_encode_double@@Base+0xb60>
   2fe70:	vdiv.f64	d7, d6, d5
   2fe74:	vstr	d7, [fp, #-12]
   2fe78:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fe7c:	vldr	d6, [fp, #-12]
   2fe80:	vldr	d5, [pc, #736]	; 30168 <grisu3_diy_fp_encode_double@@Base+0xb68>
   2fe84:	vdiv.f64	d7, d6, d5
   2fe88:	vstr	d7, [fp, #-12]
   2fe8c:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fe90:	vldr	d7, [fp, #-12]
   2fe94:	vldr	d6, [pc, #716]	; 30168 <grisu3_diy_fp_encode_double@@Base+0xb68>
   2fe98:	vmul.f64	d7, d7, d6
   2fe9c:	vstr	d7, [fp, #-12]
   2fea0:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fea4:	vldr	d7, [fp, #-12]
   2fea8:	vldr	d6, [pc, #688]	; 30160 <grisu3_diy_fp_encode_double@@Base+0xb60>
   2feac:	vmul.f64	d7, d7, d6
   2feb0:	vstr	d7, [fp, #-12]
   2feb4:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2feb8:	vldr	d7, [fp, #-12]
   2febc:	vldr	d6, [pc, #660]	; 30158 <grisu3_diy_fp_encode_double@@Base+0xb58>
   2fec0:	vmul.f64	d7, d7, d6
   2fec4:	vstr	d7, [fp, #-12]
   2fec8:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fecc:	vldr	d7, [fp, #-12]
   2fed0:	vldr	d6, [pc, #632]	; 30150 <grisu3_diy_fp_encode_double@@Base+0xb50>
   2fed4:	vmul.f64	d7, d7, d6
   2fed8:	vstr	d7, [fp, #-12]
   2fedc:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fee0:	vldr	d7, [fp, #-12]
   2fee4:	vldr	d6, [pc, #604]	; 30148 <grisu3_diy_fp_encode_double@@Base+0xb48>
   2fee8:	vmul.f64	d7, d7, d6
   2feec:	vstr	d7, [fp, #-12]
   2fef0:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fef4:	vldr	d7, [fp, #-12]
   2fef8:	vldr	d6, [pc, #576]	; 30140 <grisu3_diy_fp_encode_double@@Base+0xb40>
   2fefc:	vmul.f64	d7, d7, d6
   2ff00:	vstr	d7, [fp, #-12]
   2ff04:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2ff08:	vldr	d7, [fp, #-12]
   2ff0c:	vldr	d6, [pc, #548]	; 30138 <grisu3_diy_fp_encode_double@@Base+0xb38>
   2ff10:	vmul.f64	d7, d7, d6
   2ff14:	vstr	d7, [fp, #-12]
   2ff18:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2ff1c:	vldr	d7, [fp, #-12]
   2ff20:	vldr	d6, [pc, #520]	; 30130 <grisu3_diy_fp_encode_double@@Base+0xb30>
   2ff24:	vmul.f64	d7, d7, d6
   2ff28:	vstr	d7, [fp, #-12]
   2ff2c:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2ff30:	vldr	d7, [fp, #-12]
   2ff34:	vldr	d6, [pc, #492]	; 30128 <grisu3_diy_fp_encode_double@@Base+0xb28>
   2ff38:	vmul.f64	d7, d7, d6
   2ff3c:	vstr	d7, [fp, #-12]
   2ff40:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2ff44:	vldr	d7, [fp, #-12]
   2ff48:	vldr	d6, [pc, #464]	; 30120 <grisu3_diy_fp_encode_double@@Base+0xb20>
   2ff4c:	vmul.f64	d7, d7, d6
   2ff50:	vstr	d7, [fp, #-12]
   2ff54:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2ff58:	vldr	d7, [fp, #-12]
   2ff5c:	vldr	d6, [pc, #436]	; 30118 <grisu3_diy_fp_encode_double@@Base+0xb18>
   2ff60:	vmul.f64	d7, d7, d6
   2ff64:	vstr	d7, [fp, #-12]
   2ff68:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2ff6c:	vldr	d7, [fp, #-12]
   2ff70:	vldr	d6, [pc, #408]	; 30110 <grisu3_diy_fp_encode_double@@Base+0xb10>
   2ff74:	vmul.f64	d7, d7, d6
   2ff78:	vstr	d7, [fp, #-12]
   2ff7c:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2ff80:	vldr	d7, [fp, #-12]
   2ff84:	vldr	d6, [pc, #380]	; 30108 <grisu3_diy_fp_encode_double@@Base+0xb08>
   2ff88:	vmul.f64	d7, d7, d6
   2ff8c:	vstr	d7, [fp, #-12]
   2ff90:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2ff94:	vldr	d7, [fp, #-12]
   2ff98:	vldr	d6, [pc, #352]	; 30100 <grisu3_diy_fp_encode_double@@Base+0xb00>
   2ff9c:	vmul.f64	d7, d7, d6
   2ffa0:	vstr	d7, [fp, #-12]
   2ffa4:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2ffa8:	vldr	d7, [fp, #-12]
   2ffac:	vldr	d6, [pc, #324]	; 300f8 <grisu3_diy_fp_encode_double@@Base+0xaf8>
   2ffb0:	vmul.f64	d7, d7, d6
   2ffb4:	vstr	d7, [fp, #-12]
   2ffb8:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2ffbc:	vldr	d7, [fp, #-12]
   2ffc0:	vldr	d6, [pc, #296]	; 300f0 <grisu3_diy_fp_encode_double@@Base+0xaf0>
   2ffc4:	vmul.f64	d7, d7, d6
   2ffc8:	vstr	d7, [fp, #-12]
   2ffcc:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2ffd0:	vldr	d7, [fp, #-12]
   2ffd4:	vldr	d6, [pc, #268]	; 300e8 <grisu3_diy_fp_encode_double@@Base+0xae8>
   2ffd8:	vmul.f64	d7, d7, d6
   2ffdc:	vstr	d7, [fp, #-12]
   2ffe0:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2ffe4:	vldr	d7, [fp, #-12]
   2ffe8:	vldr	d6, [pc, #240]	; 300e0 <grisu3_diy_fp_encode_double@@Base+0xae0>
   2ffec:	vmul.f64	d7, d7, d6
   2fff0:	vstr	d7, [fp, #-12]
   2fff4:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2fff8:	vldr	d7, [fp, #-12]
   2fffc:	vldr	d6, [pc, #212]	; 300d8 <grisu3_diy_fp_encode_double@@Base+0xad8>
   30000:	vmul.f64	d7, d7, d6
   30004:	vstr	d7, [fp, #-12]
   30008:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   3000c:	vldr	d7, [fp, #-12]
   30010:	vldr	d6, [pc, #184]	; 300d0 <grisu3_diy_fp_encode_double@@Base+0xad0>
   30014:	vmul.f64	d7, d7, d6
   30018:	vstr	d7, [fp, #-12]
   3001c:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   30020:	vldr	d7, [fp, #-12]
   30024:	vldr	d6, [pc, #156]	; 300c8 <grisu3_diy_fp_encode_double@@Base+0xac8>
   30028:	vmul.f64	d7, d7, d6
   3002c:	vstr	d7, [fp, #-12]
   30030:	b	30048 <grisu3_diy_fp_encode_double@@Base+0xa48>
   30034:	vldr	d7, [fp, #-12]
   30038:	vldr	d6, [pc, #128]	; 300c0 <grisu3_diy_fp_encode_double@@Base+0xac0>
   3003c:	vmul.f64	d7, d7, d6
   30040:	vstr	d7, [fp, #-12]
   30044:	nop			; (mov r0, r0)
   30048:	ldr	r1, [fp, #24]
   3004c:	ldrd	r2, [fp, #-12]
   30050:	strd	r2, [r1]
   30054:	b	30184 <grisu3_diy_fp_encode_double@@Base+0xb84>
   30058:	ldr	r3, [fp, #24]
   3005c:	str	r3, [sp, #4]
   30060:	ldr	r3, [fp, #20]
   30064:	str	r3, [sp]
   30068:	ldr	r3, [fp, #16]
   3006c:	ldr	r2, [fp, #12]
   30070:	ldrd	r0, [fp, #4]
   30074:	bl	2f600 <grisu3_diy_fp_encode_double@@Base>
   30078:	mov	r3, r0
   3007c:	cmp	r3, #0
   30080:	bne	30180 <grisu3_diy_fp_encode_double@@Base+0xb80>
   30084:	sub	r3, fp, #24
   30088:	mov	r1, r3
   3008c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30090:	bl	126bc <strtod@plt>
   30094:	vmov.f64	d7, d0
   30098:	ldr	r3, [fp, #24]
   3009c:	vstr	d7, [r3]
   300a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   300a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   300a8:	cmp	r2, r3
   300ac:	bcs	300b8 <grisu3_diy_fp_encode_double@@Base+0xab8>
   300b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   300b4:	b	301a8 <grisu3_diy_fp_encode_double@@Base+0xba8>
   300b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   300bc:	b	301a8 <grisu3_diy_fp_encode_double@@Base+0xba8>
   300c0:			; <UNDEFINED> instruction: 0x064dd592
   300c4:	strmi	pc, [r0], #207	; 0xcf
   300c8:	usatle	lr, #2, r0, asr #30
   300cc:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   300d0:	ldmvc	r5!, {r6, sl, fp, pc}
   300d4:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   300d8:	addsvs	r3, r1, r0, lsl #26
   300dc:	mvnmi	r5, #228, 16	; 0xe40000
   300e0:	strbvs	ip, [lr, -r0, lsl #16]
   300e4:			; <UNDEFINED> instruction: 0x43abc16d
   300e8:	ldrbhi	sl, [r8]
   300ec:	cmnmi	r6, #1459617792	; 0x57000000
   300f0:	strbcc	r8, [r0, r0]!
   300f4:	movtmi	ip, #4985	; 0x1379
   300f8:	ldrtcs	r0, [r4], -r0
   300fc:	movwmi	r6, #52213	; 0xcbf5
   30100:	cdpne	0, 9, cr0, cr0, cr0, {0}
   30104:	sbcsmi	fp, r6, #196, 24	; 0xc400
   30108:	strb	r0, [r0, #-0]
   3010c:	adcmi	r3, r2, #156	; 0x9c
   30110:	andge	r0, r0, #0
   30114:	rsbmi	r1, sp, #148, 20	; 0x94000
   30118:	stmda	r0, {}	; <UNPREDICTABLE>
   3011c:	eorsmi	r4, r7, #7733248	; 0x760000
   30120:	andcs	r0, r0, r0
   30124:	andmi	sl, r2, #95	; 0x5f
   30128:	andeq	r0, r0, r0
   3012c:	bicmi	ip, sp, r5, ror #26
   30130:	andeq	r0, r0, r0
   30134:	orrsmi	sp, r7, r4, lsl #15
   30138:	andeq	r0, r0, r0
   3013c:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   30140:	andeq	r0, r0, r0
   30144:	smlawbmi	lr, r0, r4, r8
   30148:	andeq	r0, r0, r0
   3014c:	rscsmi	r6, r8, r0, lsl #20
   30150:	andeq	r0, r0, r0
   30154:	sbcmi	r8, r3, r0, lsl #16
   30158:	andeq	r0, r0, r0
   3015c:	addmi	r4, pc, r0
   30160:	andeq	r0, r0, r0
   30164:	subsmi	r0, r9, r0
   30168:	andeq	r0, r0, r0
   3016c:	eormi	r0, r4, r0
   30170:	andeq	r0, r0, r5, lsr r1
   30174:			; <UNDEFINED> instruction: 0xfffffebc
   30178:	svcvc	0x00f00000	; IMB
   3017c:			; <UNDEFINED> instruction: 0x001fffff
   30180:	nop			; (mov r0, r0)
   30184:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30188:	cmp	r3, #0
   3018c:	beq	301a4 <grisu3_diy_fp_encode_double@@Base+0xba4>
   30190:	ldr	r3, [fp, #24]
   30194:	vldr	d7, [r3]
   30198:	vneg.f64	d7, d7
   3019c:	ldr	r3, [fp, #24]
   301a0:	vstr	d7, [r3]
   301a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   301a8:	mov	r0, r3
   301ac:	sub	sp, fp, #4
   301b0:	pop	{fp, pc}
   301b4:	push	{fp}		; (str fp, [sp, #-4]!)
   301b8:	add	fp, sp, #0
   301bc:	sub	sp, sp, #20
   301c0:	str	r0, [fp, #-8]
   301c4:	str	r1, [fp, #-12]
   301c8:	str	r2, [fp, #-16]
   301cc:	str	r3, [fp, #-20]	; 0xffffffec
   301d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   301d4:	mov	r2, #0
   301d8:	mov	r3, #0
   301dc:	strd	r2, [r1]
   301e0:	ldr	r3, [fp, #-8]
   301e4:	mov	r0, r3
   301e8:	add	sp, fp, #0
   301ec:	pop	{fp}		; (ldr fp, [sp], #4)
   301f0:	bx	lr
   301f4:	push	{fp, lr}
   301f8:	add	fp, sp, #4
   301fc:	sub	sp, sp, #88	; 0x58
   30200:	str	r0, [fp, #-56]	; 0xffffffc8
   30204:	str	r1, [fp, #-60]	; 0xffffffc4
   30208:	str	r2, [fp, #-64]	; 0xffffffc0
   3020c:	mov	r3, #0
   30210:	str	r3, [fp, #-12]
   30214:	mov	r3, #0
   30218:	str	r3, [fp, #-16]
   3021c:	mov	r2, #0
   30220:	mov	r3, #0
   30224:	strd	r2, [fp, #-28]	; 0xffffffe4
   30228:	mov	r3, #0
   3022c:	str	r3, [fp, #-32]	; 0xffffffe0
   30230:	mov	r3, #0
   30234:	str	r3, [fp, #-36]	; 0xffffffdc
   30238:	mov	r3, #0
   3023c:	str	r3, [fp, #-40]	; 0xffffffd8
   30240:	mov	r3, #0
   30244:	str	r3, [fp, #-44]	; 0xffffffd4
   30248:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3024c:	mov	r2, #0
   30250:	mov	r3, #0
   30254:	strd	r2, [r1]
   30258:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3025c:	add	r3, r3, #1
   30260:	ldr	r2, [fp, #-56]	; 0xffffffc8
   30264:	add	r3, r2, r3
   30268:	str	r3, [fp, #-8]
   3026c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   30270:	cmp	r3, #1000	; 0x3e8
   30274:	ble	30288 <grisu3_diy_fp_encode_double@@Base+0xc88>
   30278:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3027c:	add	r3, r3, #1000	; 0x3e8
   30280:	add	r3, r3, #1
   30284:	str	r3, [fp, #-8]
   30288:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3028c:	ldr	r3, [fp, #-8]
   30290:	cmp	r2, r3
   30294:	bne	302a0 <grisu3_diy_fp_encode_double@@Base+0xca0>
   30298:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3029c:	b	30a00 <grisu3_diy_fp_encode_double@@Base+0x1400>
   302a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   302a4:	str	r3, [fp, #-48]	; 0xffffffd0
   302a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   302ac:	ldrb	r3, [r3]
   302b0:	cmp	r3, #45	; 0x2d
   302b4:	bne	302e4 <grisu3_diy_fp_encode_double@@Base+0xce4>
   302b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   302bc:	add	r3, r3, #1
   302c0:	str	r3, [fp, #-56]	; 0xffffffc8
   302c4:	mov	r3, #1
   302c8:	str	r3, [fp, #-12]
   302cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   302d0:	ldr	r3, [fp, #-8]
   302d4:	cmp	r2, r3
   302d8:	bne	302e4 <grisu3_diy_fp_encode_double@@Base+0xce4>
   302dc:	mov	r3, #0
   302e0:	b	30a00 <grisu3_diy_fp_encode_double@@Base+0x1400>
   302e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   302e8:	ldrb	r3, [r3]
   302ec:	cmp	r3, #48	; 0x30
   302f0:	bne	30390 <grisu3_diy_fp_encode_double@@Base+0xd90>
   302f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   302f8:	add	r3, r3, #1
   302fc:	str	r3, [fp, #-56]	; 0xffffffc8
   30300:	ldr	r2, [fp, #-56]	; 0xffffffc8
   30304:	ldr	r3, [fp, #-8]
   30308:	cmp	r2, r3
   3030c:	beq	3036c <grisu3_diy_fp_encode_double@@Base+0xd6c>
   30310:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30314:	ldrb	r3, [r3]
   30318:	orr	r3, r3, #32
   3031c:	uxtb	r3, r3
   30320:	cmp	r3, #120	; 0x78
   30324:	bne	3036c <grisu3_diy_fp_encode_double@@Base+0xd6c>
   30328:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3032c:	ldr	r2, [fp, #-12]
   30330:	ldr	r1, [fp, #-8]
   30334:	ldr	r0, [fp, #-56]	; 0xffffffc8
   30338:	bl	301b4 <grisu3_diy_fp_encode_double@@Base+0xbb4>
   3033c:	str	r0, [fp, #-52]	; 0xffffffcc
   30340:	ldr	r2, [fp, #-52]	; 0xffffffcc
   30344:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30348:	cmp	r2, r3
   3034c:	bne	30358 <grisu3_diy_fp_encode_double@@Base+0xd58>
   30350:	ldr	r3, [fp, #-48]	; 0xffffffd0
   30354:	b	30a00 <grisu3_diy_fp_encode_double@@Base+0x1400>
   30358:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3035c:	b	30a00 <grisu3_diy_fp_encode_double@@Base+0x1400>
   30360:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30364:	add	r3, r3, #1
   30368:	str	r3, [fp, #-56]	; 0xffffffc8
   3036c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   30370:	ldr	r3, [fp, #-8]
   30374:	cmp	r2, r3
   30378:	beq	303ec <grisu3_diy_fp_encode_double@@Base+0xdec>
   3037c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30380:	ldrb	r3, [r3]
   30384:	cmp	r3, #48	; 0x30
   30388:	beq	30360 <grisu3_diy_fp_encode_double@@Base+0xd60>
   3038c:	b	303ec <grisu3_diy_fp_encode_double@@Base+0xdec>
   30390:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30394:	ldrb	r3, [r3]
   30398:	cmp	r3, #48	; 0x30
   3039c:	bls	303b0 <grisu3_diy_fp_encode_double@@Base+0xdb0>
   303a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   303a4:	ldrb	r3, [r3]
   303a8:	cmp	r3, #57	; 0x39
   303ac:	bls	303cc <grisu3_diy_fp_encode_double@@Base+0xdcc>
   303b0:	ldr	r3, [fp, #-12]
   303b4:	cmp	r3, #0
   303b8:	bne	303c4 <grisu3_diy_fp_encode_double@@Base+0xdc4>
   303bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   303c0:	b	30a00 <grisu3_diy_fp_encode_double@@Base+0x1400>
   303c4:	mov	r3, #0
   303c8:	b	30a00 <grisu3_diy_fp_encode_double@@Base+0x1400>
   303cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   303d0:	add	r2, r3, #1
   303d4:	str	r2, [fp, #-56]	; 0xffffffc8
   303d8:	ldrb	r3, [r3]
   303dc:	sub	r3, r3, #48	; 0x30
   303e0:	mov	r2, r3
   303e4:	asr	r3, r2, #31
   303e8:	strd	r2, [fp, #-28]	; 0xffffffe4
   303ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   303f0:	str	r3, [fp, #-52]	; 0xffffffcc
   303f4:	b	304a8 <grisu3_diy_fp_encode_double@@Base+0xea8>
   303f8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   303fc:	add	r1, pc, #948	; 0x3b4
   30400:	ldrd	r0, [r1]
   30404:	cmp	r3, r1
   30408:	cmpeq	r2, r0
   3040c:	bls	3044c <grisu3_diy_fp_encode_double@@Base+0xe4c>
   30410:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30414:	ldrb	r3, [r3]
   30418:	cmp	r3, #52	; 0x34
   3041c:	movhi	r3, #1
   30420:	movls	r3, #0
   30424:	uxtb	r3, r3
   30428:	uxtb	r2, r3
   3042c:	mov	r3, #0
   30430:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   30434:	adds	r2, r2, r0
   30438:	adc	r3, r3, r1
   3043c:	strd	r2, [fp, #-28]	; 0xffffffe4
   30440:	mov	r3, #1
   30444:	str	r3, [fp, #-44]	; 0xffffffd4
   30448:	b	304d8 <grisu3_diy_fp_encode_double@@Base+0xed8>
   3044c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30450:	mov	r2, #10
   30454:	mul	r2, r2, r3
   30458:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3045c:	mov	r1, #0
   30460:	mul	r3, r1, r3
   30464:	add	r1, r2, r3
   30468:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3046c:	mov	r2, #10
   30470:	umull	r2, r3, r3, r2
   30474:	add	r1, r1, r3
   30478:	mov	r3, r1
   3047c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   30480:	add	r0, r1, #1
   30484:	str	r0, [fp, #-56]	; 0xffffffc8
   30488:	ldrb	r1, [r1]
   3048c:	uxtb	r0, r1
   30490:	mov	r1, #0
   30494:	adds	r2, r2, r0
   30498:	adc	r3, r3, r1
   3049c:	subs	r2, r2, #48	; 0x30
   304a0:	sbc	r3, r3, #0
   304a4:	strd	r2, [fp, #-28]	; 0xffffffe4
   304a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   304ac:	ldr	r3, [fp, #-8]
   304b0:	cmp	r2, r3
   304b4:	beq	304d8 <grisu3_diy_fp_encode_double@@Base+0xed8>
   304b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   304bc:	ldrb	r3, [r3]
   304c0:	cmp	r3, #47	; 0x2f
   304c4:	bls	304d8 <grisu3_diy_fp_encode_double@@Base+0xed8>
   304c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   304cc:	ldrb	r3, [r3]
   304d0:	cmp	r3, #57	; 0x39
   304d4:	bls	303f8 <grisu3_diy_fp_encode_double@@Base+0xdf8>
   304d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   304dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   304e0:	sub	r3, r2, r3
   304e4:	str	r3, [fp, #-40]	; 0xffffffd8
   304e8:	b	30504 <grisu3_diy_fp_encode_double@@Base+0xf04>
   304ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   304f0:	add	r3, r3, #1
   304f4:	str	r3, [fp, #-32]	; 0xffffffe0
   304f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   304fc:	add	r3, r3, #1
   30500:	str	r3, [fp, #-56]	; 0xffffffc8
   30504:	ldr	r2, [fp, #-56]	; 0xffffffc8
   30508:	ldr	r3, [fp, #-8]
   3050c:	cmp	r2, r3
   30510:	beq	30524 <grisu3_diy_fp_encode_double@@Base+0xf24>
   30514:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30518:	ldrb	r3, [r3]
   3051c:	cmp	r3, #48	; 0x30
   30520:	beq	304ec <grisu3_diy_fp_encode_double@@Base+0xeec>
   30524:	ldr	r2, [fp, #-56]	; 0xffffffc8
   30528:	ldr	r3, [fp, #-8]
   3052c:	cmp	r2, r3
   30530:	beq	305c0 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   30534:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30538:	ldrb	r3, [r3]
   3053c:	cmp	r3, #48	; 0x30
   30540:	bls	305c0 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   30544:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30548:	ldrb	r3, [r3]
   3054c:	cmp	r3, #57	; 0x39
   30550:	bhi	305c0 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   30554:	mov	r3, #1
   30558:	str	r3, [fp, #-44]	; 0xffffffd4
   3055c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30560:	add	r3, r3, #1
   30564:	str	r3, [fp, #-32]	; 0xffffffe0
   30568:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3056c:	add	r3, r3, #1
   30570:	str	r3, [fp, #-56]	; 0xffffffc8
   30574:	b	30590 <grisu3_diy_fp_encode_double@@Base+0xf90>
   30578:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3057c:	add	r3, r3, #1
   30580:	str	r3, [fp, #-32]	; 0xffffffe0
   30584:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30588:	add	r3, r3, #1
   3058c:	str	r3, [fp, #-56]	; 0xffffffc8
   30590:	ldr	r2, [fp, #-56]	; 0xffffffc8
   30594:	ldr	r3, [fp, #-8]
   30598:	cmp	r2, r3
   3059c:	beq	305c0 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   305a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   305a4:	ldrb	r3, [r3]
   305a8:	cmp	r3, #47	; 0x2f
   305ac:	bls	305c0 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   305b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   305b4:	ldrb	r3, [r3]
   305b8:	cmp	r3, #57	; 0x39
   305bc:	bls	30578 <grisu3_diy_fp_encode_double@@Base+0xf78>
   305c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   305c4:	ldr	r3, [fp, #-8]
   305c8:	cmp	r2, r3
   305cc:	beq	307fc <grisu3_diy_fp_encode_double@@Base+0x11fc>
   305d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   305d4:	ldrb	r3, [r3]
   305d8:	cmp	r3, #46	; 0x2e
   305dc:	bne	307fc <grisu3_diy_fp_encode_double@@Base+0x11fc>
   305e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   305e4:	add	r3, r3, #1
   305e8:	str	r3, [fp, #-56]	; 0xffffffc8
   305ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   305f0:	str	r3, [fp, #-52]	; 0xffffffcc
   305f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   305f8:	ldrb	r3, [r3]
   305fc:	cmp	r3, #47	; 0x2f
   30600:	bls	30614 <grisu3_diy_fp_encode_double@@Base+0x1014>
   30604:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30608:	ldrb	r3, [r3]
   3060c:	cmp	r3, #57	; 0x39
   30610:	bls	306e4 <grisu3_diy_fp_encode_double@@Base+0x10e4>
   30614:	mov	r3, #0
   30618:	b	30a00 <grisu3_diy_fp_encode_double@@Base+0x1400>
   3061c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   30620:	add	r1, pc, #400	; 0x190
   30624:	ldrd	r0, [r1]
   30628:	cmp	r3, r1
   3062c:	cmpeq	r2, r0
   30630:	bls	3067c <grisu3_diy_fp_encode_double@@Base+0x107c>
   30634:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30638:	cmp	r3, #0
   3063c:	bne	30718 <grisu3_diy_fp_encode_double@@Base+0x1118>
   30640:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30644:	ldrb	r3, [r3]
   30648:	cmp	r3, #52	; 0x34
   3064c:	movhi	r3, #1
   30650:	movls	r3, #0
   30654:	uxtb	r3, r3
   30658:	uxtb	r2, r3
   3065c:	mov	r3, #0
   30660:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   30664:	adds	r2, r2, r0
   30668:	adc	r3, r3, r1
   3066c:	strd	r2, [fp, #-28]	; 0xffffffe4
   30670:	mov	r3, #1
   30674:	str	r3, [fp, #-44]	; 0xffffffd4
   30678:	b	30718 <grisu3_diy_fp_encode_double@@Base+0x1118>
   3067c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30680:	mov	r2, #10
   30684:	mul	r2, r2, r3
   30688:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3068c:	mov	r1, #0
   30690:	mul	r3, r1, r3
   30694:	add	r1, r2, r3
   30698:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3069c:	mov	r2, #10
   306a0:	umull	r2, r3, r3, r2
   306a4:	add	r1, r1, r3
   306a8:	mov	r3, r1
   306ac:	ldr	r1, [fp, #-56]	; 0xffffffc8
   306b0:	add	r0, r1, #1
   306b4:	str	r0, [fp, #-56]	; 0xffffffc8
   306b8:	ldrb	r1, [r1]
   306bc:	uxtb	r0, r1
   306c0:	mov	r1, #0
   306c4:	adds	r2, r2, r0
   306c8:	adc	r3, r3, r1
   306cc:	subs	r2, r2, #48	; 0x30
   306d0:	sbc	r3, r3, #0
   306d4:	strd	r2, [fp, #-28]	; 0xffffffe4
   306d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   306dc:	sub	r3, r3, #1
   306e0:	str	r3, [fp, #-32]	; 0xffffffe0
   306e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   306e8:	ldr	r3, [fp, #-8]
   306ec:	cmp	r2, r3
   306f0:	beq	3071c <grisu3_diy_fp_encode_double@@Base+0x111c>
   306f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   306f8:	ldrb	r3, [r3]
   306fc:	cmp	r3, #47	; 0x2f
   30700:	bls	3071c <grisu3_diy_fp_encode_double@@Base+0x111c>
   30704:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30708:	ldrb	r3, [r3]
   3070c:	cmp	r3, #57	; 0x39
   30710:	bls	3061c <grisu3_diy_fp_encode_double@@Base+0x101c>
   30714:	b	3071c <grisu3_diy_fp_encode_double@@Base+0x111c>
   30718:	nop			; (mov r0, r0)
   3071c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   30720:	ldr	r3, [fp, #-52]	; 0xffffffcc
   30724:	sub	r3, r2, r3
   30728:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3072c:	add	r3, r2, r3
   30730:	str	r3, [fp, #-40]	; 0xffffffd8
   30734:	b	30750 <grisu3_diy_fp_encode_double@@Base+0x1150>
   30738:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3073c:	add	r3, r3, #1
   30740:	str	r3, [fp, #-32]	; 0xffffffe0
   30744:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30748:	add	r3, r3, #1
   3074c:	str	r3, [fp, #-56]	; 0xffffffc8
   30750:	ldr	r2, [fp, #-56]	; 0xffffffc8
   30754:	ldr	r3, [fp, #-8]
   30758:	cmp	r2, r3
   3075c:	beq	30770 <grisu3_diy_fp_encode_double@@Base+0x1170>
   30760:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30764:	ldrb	r3, [r3]
   30768:	cmp	r3, #48	; 0x30
   3076c:	beq	30738 <grisu3_diy_fp_encode_double@@Base+0x1138>
   30770:	ldr	r2, [fp, #-56]	; 0xffffffc8
   30774:	ldr	r3, [fp, #-8]
   30778:	cmp	r2, r3
   3077c:	beq	307fc <grisu3_diy_fp_encode_double@@Base+0x11fc>
   30780:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30784:	ldrb	r3, [r3]
   30788:	cmp	r3, #48	; 0x30
   3078c:	bls	307fc <grisu3_diy_fp_encode_double@@Base+0x11fc>
   30790:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30794:	ldrb	r3, [r3]
   30798:	cmp	r3, #57	; 0x39
   3079c:	bhi	307fc <grisu3_diy_fp_encode_double@@Base+0x11fc>
   307a0:	mov	r3, #1
   307a4:	str	r3, [fp, #-44]	; 0xffffffd4
   307a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   307ac:	add	r3, r3, #1
   307b0:	str	r3, [fp, #-56]	; 0xffffffc8
   307b4:	b	307cc <grisu3_diy_fp_encode_double@@Base+0x11cc>
   307b8:	ldmibls	r9, {r3, r4, r7, r8, fp, ip, pc}
   307bc:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   307c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   307c4:	add	r3, r3, #1
   307c8:	str	r3, [fp, #-56]	; 0xffffffc8
   307cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   307d0:	ldr	r3, [fp, #-8]
   307d4:	cmp	r2, r3
   307d8:	beq	307fc <grisu3_diy_fp_encode_double@@Base+0x11fc>
   307dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   307e0:	ldrb	r3, [r3]
   307e4:	cmp	r3, #47	; 0x2f
   307e8:	bls	307fc <grisu3_diy_fp_encode_double@@Base+0x11fc>
   307ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   307f0:	ldrb	r3, [r3]
   307f4:	cmp	r3, #57	; 0x39
   307f8:	bls	307c0 <grisu3_diy_fp_encode_double@@Base+0x11c0>
   307fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30800:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30804:	add	r3, r2, r3
   30808:	str	r3, [fp, #-32]	; 0xffffffe0
   3080c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   30810:	ldr	r3, [fp, #-8]
   30814:	cmp	r2, r3
   30818:	beq	30984 <grisu3_diy_fp_encode_double@@Base+0x1384>
   3081c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30820:	ldrb	r3, [r3]
   30824:	orr	r3, r3, #32
   30828:	uxtb	r3, r3
   3082c:	cmp	r3, #101	; 0x65
   30830:	bne	30984 <grisu3_diy_fp_encode_double@@Base+0x1384>
   30834:	ldr	r2, [fp, #-8]
   30838:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3083c:	sub	r3, r2, r3
   30840:	cmp	r3, #1
   30844:	bgt	30850 <grisu3_diy_fp_encode_double@@Base+0x1250>
   30848:	mov	r3, #0
   3084c:	b	30a00 <grisu3_diy_fp_encode_double@@Base+0x1400>
   30850:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30854:	add	r3, r3, #1
   30858:	str	r3, [fp, #-56]	; 0xffffffc8
   3085c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30860:	ldrb	r3, [r3]
   30864:	cmp	r3, #43	; 0x2b
   30868:	bne	30890 <grisu3_diy_fp_encode_double@@Base+0x1290>
   3086c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30870:	add	r3, r3, #1
   30874:	str	r3, [fp, #-56]	; 0xffffffc8
   30878:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3087c:	ldr	r3, [fp, #-8]
   30880:	cmp	r2, r3
   30884:	bne	308cc <grisu3_diy_fp_encode_double@@Base+0x12cc>
   30888:	mov	r3, #0
   3088c:	b	30a00 <grisu3_diy_fp_encode_double@@Base+0x1400>
   30890:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30894:	ldrb	r3, [r3]
   30898:	cmp	r3, #45	; 0x2d
   3089c:	bne	308cc <grisu3_diy_fp_encode_double@@Base+0x12cc>
   308a0:	mov	r3, #1
   308a4:	str	r3, [fp, #-16]
   308a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   308ac:	add	r3, r3, #1
   308b0:	str	r3, [fp, #-56]	; 0xffffffc8
   308b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   308b8:	ldr	r3, [fp, #-8]
   308bc:	cmp	r2, r3
   308c0:	bne	308cc <grisu3_diy_fp_encode_double@@Base+0x12cc>
   308c4:	mov	r3, #0
   308c8:	b	30a00 <grisu3_diy_fp_encode_double@@Base+0x1400>
   308cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   308d0:	ldrb	r3, [r3]
   308d4:	cmp	r3, #47	; 0x2f
   308d8:	bls	308ec <grisu3_diy_fp_encode_double@@Base+0x12ec>
   308dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   308e0:	ldrb	r3, [r3]
   308e4:	cmp	r3, #57	; 0x39
   308e8:	bls	308f4 <grisu3_diy_fp_encode_double@@Base+0x12f4>
   308ec:	mov	r3, #0
   308f0:	b	30a00 <grisu3_diy_fp_encode_double@@Base+0x1400>
   308f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   308f8:	add	r2, r3, #1
   308fc:	str	r2, [fp, #-56]	; 0xffffffc8
   30900:	ldrb	r3, [r3]
   30904:	sub	r3, r3, #48	; 0x30
   30908:	str	r3, [fp, #-36]	; 0xffffffdc
   3090c:	b	30954 <grisu3_diy_fp_encode_double@@Base+0x1354>
   30910:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30914:	cmp	r3, #32768	; 0x8000
   30918:	bge	30948 <grisu3_diy_fp_encode_double@@Base+0x1348>
   3091c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30920:	mov	r3, r2
   30924:	lsl	r3, r3, #2
   30928:	add	r3, r3, r2
   3092c:	lsl	r3, r3, #1
   30930:	mov	r2, r3
   30934:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30938:	ldrb	r3, [r3]
   3093c:	add	r3, r2, r3
   30940:	sub	r3, r3, #48	; 0x30
   30944:	str	r3, [fp, #-36]	; 0xffffffdc
   30948:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3094c:	add	r3, r3, #1
   30950:	str	r3, [fp, #-56]	; 0xffffffc8
   30954:	ldr	r2, [fp, #-56]	; 0xffffffc8
   30958:	ldr	r3, [fp, #-8]
   3095c:	cmp	r2, r3
   30960:	beq	30984 <grisu3_diy_fp_encode_double@@Base+0x1384>
   30964:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30968:	ldrb	r3, [r3]
   3096c:	cmp	r3, #47	; 0x2f
   30970:	bls	30984 <grisu3_diy_fp_encode_double@@Base+0x1384>
   30974:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30978:	ldrb	r3, [r3]
   3097c:	cmp	r3, #57	; 0x39
   30980:	bls	30910 <grisu3_diy_fp_encode_double@@Base+0x1310>
   30984:	ldr	r3, [fp, #-16]
   30988:	cmp	r3, #0
   3098c:	beq	3099c <grisu3_diy_fp_encode_double@@Base+0x139c>
   30990:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30994:	rsb	r3, r3, #0
   30998:	b	309a0 <grisu3_diy_fp_encode_double@@Base+0x13a0>
   3099c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   309a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   309a4:	add	r3, r2, r3
   309a8:	str	r3, [fp, #-32]	; 0xffffffe0
   309ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   309b0:	ldr	r3, [fp, #-8]
   309b4:	cmp	r2, r3
   309b8:	bne	309c4 <grisu3_diy_fp_encode_double@@Base+0x13c4>
   309bc:	mov	r3, #0
   309c0:	b	30a00 <grisu3_diy_fp_encode_double@@Base+0x1400>
   309c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   309c8:	str	r3, [sp, #20]
   309cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   309d0:	str	r3, [sp, #16]
   309d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   309d8:	str	r3, [sp, #12]
   309dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   309e0:	str	r3, [sp, #8]
   309e4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   309e8:	strd	r2, [sp]
   309ec:	ldr	r2, [fp, #-12]
   309f0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   309f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   309f8:	bl	2fb3c <grisu3_diy_fp_encode_double@@Base+0x53c>
   309fc:	mov	r3, r0
   30a00:	mov	r0, r3
   30a04:	sub	sp, fp, #4
   30a08:	pop	{fp, pc}
   30a0c:	push	{fp, lr}
   30a10:	add	fp, sp, #4
   30a14:	sub	sp, sp, #16
   30a18:	str	r0, [fp, #-8]
   30a1c:	str	r1, [fp, #-12]
   30a20:	str	r2, [fp, #-16]
   30a24:	ldr	r2, [fp, #-16]
   30a28:	ldr	r1, [fp, #-12]
   30a2c:	ldr	r0, [fp, #-8]
   30a30:	bl	301f4 <grisu3_diy_fp_encode_double@@Base+0xbf4>
   30a34:	mov	r3, r0
   30a38:	mov	r0, r3
   30a3c:	sub	sp, fp, #4
   30a40:	pop	{fp, pc}
   30a44:	push	{fp, lr}
   30a48:	add	fp, sp, #4
   30a4c:	sub	sp, sp, #40	; 0x28
   30a50:	str	r0, [fp, #-32]	; 0xffffffe0
   30a54:	str	r1, [fp, #-36]	; 0xffffffdc
   30a58:	str	r2, [fp, #-40]	; 0xffffffd8
   30a5c:	ldr	r3, [pc, #180]	; 30b18 <grisu3_diy_fp_encode_double@@Base+0x1518>
   30a60:	str	r3, [fp, #-24]	; 0xffffffe8
   30a64:	sub	r3, fp, #20
   30a68:	mov	r2, r3
   30a6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30a70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30a74:	bl	30a0c <grisu3_diy_fp_encode_double@@Base+0x140c>
   30a78:	str	r0, [fp, #-8]
   30a7c:	vldr	d7, [fp, #-20]	; 0xffffffec
   30a80:	vcvt.f32.f64	s15, d7
   30a84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30a88:	vstr	s15, [r3]
   30a8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30a90:	vldr	s15, [r3]
   30a94:	vabs.f32	s15, s15
   30a98:	vldr	s14, [pc, #116]	; 30b14 <grisu3_diy_fp_encode_double@@Base+0x1514>
   30a9c:	vcmp.f32	s15, s14
   30aa0:	vmrs	APSR_nzcv, fpscr
   30aa4:	movle	r3, #1
   30aa8:	movgt	r3, #0
   30aac:	uxtb	r3, r3
   30ab0:	eor	r3, r3, #1
   30ab4:	uxtb	r3, r3
   30ab8:	cmp	r3, #0
   30abc:	beq	30ac8 <grisu3_diy_fp_encode_double@@Base+0x14c8>
   30ac0:	mov	r3, #1
   30ac4:	b	30acc <grisu3_diy_fp_encode_double@@Base+0x14cc>
   30ac8:	mov	r3, #0
   30acc:	cmp	r3, #0
   30ad0:	beq	30b04 <grisu3_diy_fp_encode_double@@Base+0x1504>
   30ad4:	vldr	d7, [fp, #-20]	; 0xffffffec
   30ad8:	vcmpe.f64	d7, #0.0
   30adc:	vmrs	APSR_nzcv, fpscr
   30ae0:	bpl	30af0 <grisu3_diy_fp_encode_double@@Base+0x14f0>
   30ae4:	vldr	s15, [fp, #-24]	; 0xffffffe8
   30ae8:	vneg.f32	s15, s15
   30aec:	b	30af4 <grisu3_diy_fp_encode_double@@Base+0x14f4>
   30af0:	vldr	s15, [fp, #-24]	; 0xffffffe8
   30af4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30af8:	vstr	s15, [r3]
   30afc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30b00:	b	30b08 <grisu3_diy_fp_encode_double@@Base+0x1508>
   30b04:	ldr	r3, [fp, #-8]
   30b08:	mov	r0, r3
   30b0c:	sub	sp, fp, #4
   30b10:	pop	{fp, pc}
   30b14:	svcvc	0x007fffff
   30b18:	svcvc	0x00800000
   30b1c:	push	{fp}		; (str fp, [sp, #-4]!)
   30b20:	add	fp, sp, #0
   30b24:	sub	sp, sp, #12
   30b28:	str	r0, [fp, #-8]
   30b2c:	ldr	r3, [fp, #-8]
   30b30:	cmp	r3, #5
   30b34:	addls	pc, pc, r3, lsl #2
   30b38:	b	30b9c <grisu3_diy_fp_encode_double@@Base+0x159c>
   30b3c:	b	30b54 <grisu3_diy_fp_encode_double@@Base+0x1554>
   30b40:	b	30b78 <grisu3_diy_fp_encode_double@@Base+0x1578>
   30b44:	b	30b60 <grisu3_diy_fp_encode_double@@Base+0x1560>
   30b48:	b	30b6c <grisu3_diy_fp_encode_double@@Base+0x156c>
   30b4c:	b	30b84 <grisu3_diy_fp_encode_double@@Base+0x1584>
   30b50:	b	30b90 <grisu3_diy_fp_encode_double@@Base+0x1590>
   30b54:	ldr	r3, [pc, #88]	; 30bb4 <grisu3_diy_fp_encode_double@@Base+0x15b4>
   30b58:	add	r3, pc, r3
   30b5c:	b	30ba4 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   30b60:	ldr	r3, [pc, #80]	; 30bb8 <grisu3_diy_fp_encode_double@@Base+0x15b8>
   30b64:	add	r3, pc, r3
   30b68:	b	30ba4 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   30b6c:	ldr	r3, [pc, #72]	; 30bbc <grisu3_diy_fp_encode_double@@Base+0x15bc>
   30b70:	add	r3, pc, r3
   30b74:	b	30ba4 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   30b78:	ldr	r3, [pc, #64]	; 30bc0 <grisu3_diy_fp_encode_double@@Base+0x15c0>
   30b7c:	add	r3, pc, r3
   30b80:	b	30ba4 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   30b84:	ldr	r3, [pc, #56]	; 30bc4 <grisu3_diy_fp_encode_double@@Base+0x15c4>
   30b88:	add	r3, pc, r3
   30b8c:	b	30ba4 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   30b90:	ldr	r3, [pc, #48]	; 30bc8 <grisu3_diy_fp_encode_double@@Base+0x15c8>
   30b94:	add	r3, pc, r3
   30b98:	b	30ba4 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   30b9c:	ldr	r3, [pc, #40]	; 30bcc <grisu3_diy_fp_encode_double@@Base+0x15cc>
   30ba0:	add	r3, pc, r3
   30ba4:	mov	r0, r3
   30ba8:	add	sp, fp, #0
   30bac:	pop	{fp}		; (ldr fp, [sp], #4)
   30bb0:	bx	lr
   30bb4:	andeq	r5, r0, r0, asr #30
   30bb8:	andeq	r5, r0, r8, lsr pc
   30bbc:	andeq	r5, r0, r0, asr #30
   30bc0:	andeq	r5, r0, r4, asr #30
   30bc4:	andeq	r5, r0, ip, asr #30
   30bc8:	andeq	r5, r0, r4, asr pc
   30bcc:	andeq	r5, r0, r0, ror #30
   30bd0:	push	{fp}		; (str fp, [sp, #-4]!)
   30bd4:	add	fp, sp, #0
   30bd8:	sub	sp, sp, #28
   30bdc:	str	r0, [fp, #-24]	; 0xffffffe8
   30be0:	str	r1, [fp, #-28]	; 0xffffffe4
   30be4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30be8:	ldr	r3, [pc, #156]	; 30c8c <grisu3_diy_fp_encode_double@@Base+0x168c>
   30bec:	umull	r1, r3, r3, r2
   30bf0:	lsr	r1, r3, #1
   30bf4:	mov	r3, r1
   30bf8:	lsl	r3, r3, #1
   30bfc:	add	r3, r3, r1
   30c00:	sub	r3, r2, r3
   30c04:	str	r3, [fp, #-12]
   30c08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30c0c:	lsl	r3, r3, #2
   30c10:	ldr	r2, [pc, #116]	; 30c8c <grisu3_diy_fp_encode_double@@Base+0x168c>
   30c14:	umull	r2, r3, r2, r3
   30c18:	lsr	r3, r3, #1
   30c1c:	add	r3, r3, #3
   30c20:	bic	r3, r3, #3
   30c24:	str	r3, [fp, #-8]
   30c28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30c2c:	and	r3, r3, #128	; 0x80
   30c30:	str	r3, [fp, #-16]
   30c34:	ldr	r3, [fp, #-16]
   30c38:	cmp	r3, #0
   30c3c:	bne	30c78 <grisu3_diy_fp_encode_double@@Base+0x1678>
   30c40:	ldr	r3, [fp, #-12]
   30c44:	cmp	r3, #1
   30c48:	beq	30c68 <grisu3_diy_fp_encode_double@@Base+0x1668>
   30c4c:	cmp	r3, #2
   30c50:	beq	30c58 <grisu3_diy_fp_encode_double@@Base+0x1658>
   30c54:	b	30c78 <grisu3_diy_fp_encode_double@@Base+0x1678>
   30c58:	ldr	r3, [fp, #-8]
   30c5c:	sub	r3, r3, #1
   30c60:	str	r3, [fp, #-8]
   30c64:	b	30c78 <grisu3_diy_fp_encode_double@@Base+0x1678>
   30c68:	ldr	r3, [fp, #-8]
   30c6c:	sub	r3, r3, #2
   30c70:	str	r3, [fp, #-8]
   30c74:	nop			; (mov r0, r0)
   30c78:	ldr	r3, [fp, #-8]
   30c7c:	mov	r0, r3
   30c80:	add	sp, fp, #0
   30c84:	pop	{fp}		; (ldr fp, [sp], #4)
   30c88:	bx	lr
   30c8c:	bge	feadb740 <__bss_end__@@Base+0xfea93284>
   30c90:	push	{fp}		; (str fp, [sp, #-4]!)
   30c94:	add	fp, sp, #0
   30c98:	sub	sp, sp, #20
   30c9c:	str	r0, [fp, #-16]
   30ca0:	ldr	r3, [fp, #-16]
   30ca4:	and	r3, r3, #3
   30ca8:	str	r3, [fp, #-8]
   30cac:	ldr	r3, [fp, #-16]
   30cb0:	lsr	r2, r3, #2
   30cb4:	mov	r3, r2
   30cb8:	lsl	r3, r3, #1
   30cbc:	add	r3, r3, r2
   30cc0:	str	r3, [fp, #-12]
   30cc4:	ldr	r3, [fp, #-8]
   30cc8:	cmp	r3, #2
   30ccc:	beq	30ce4 <grisu3_diy_fp_encode_double@@Base+0x16e4>
   30cd0:	cmp	r3, #3
   30cd4:	bne	30cf0 <grisu3_diy_fp_encode_double@@Base+0x16f0>
   30cd8:	ldr	r3, [fp, #-12]
   30cdc:	add	r3, r3, #2
   30ce0:	b	30cf4 <grisu3_diy_fp_encode_double@@Base+0x16f4>
   30ce4:	ldr	r3, [fp, #-12]
   30ce8:	add	r3, r3, #1
   30cec:	b	30cf4 <grisu3_diy_fp_encode_double@@Base+0x16f4>
   30cf0:	ldr	r3, [fp, #-12]
   30cf4:	mov	r0, r3
   30cf8:	add	sp, fp, #0
   30cfc:	pop	{fp}		; (ldr fp, [sp], #4)
   30d00:	bx	lr
   30d04:	push	{fp}		; (str fp, [sp, #-4]!)
   30d08:	add	fp, sp, #0
   30d0c:	sub	sp, sp, #52	; 0x34
   30d10:	str	r0, [fp, #-40]	; 0xffffffd8
   30d14:	str	r1, [fp, #-44]	; 0xffffffd4
   30d18:	str	r2, [fp, #-48]	; 0xffffffd0
   30d1c:	str	r3, [fp, #-52]	; 0xffffffcc
   30d20:	ldr	r3, [pc, #920]	; 310c0 <grisu3_diy_fp_encode_double@@Base+0x1ac0>
   30d24:	add	r3, pc, r3
   30d28:	str	r3, [fp, #-20]	; 0xffffffec
   30d2c:	ldr	r3, [pc, #912]	; 310c4 <grisu3_diy_fp_encode_double@@Base+0x1ac4>
   30d30:	add	r3, pc, r3
   30d34:	str	r3, [fp, #-24]	; 0xffffffe8
   30d38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30d3c:	str	r3, [fp, #-28]	; 0xffffffe4
   30d40:	ldr	r3, [fp, #4]
   30d44:	and	r3, r3, #128	; 0x80
   30d48:	str	r3, [fp, #-32]	; 0xffffffe0
   30d4c:	mov	r3, #0
   30d50:	str	r3, [fp, #-12]
   30d54:	mov	r3, #3
   30d58:	str	r3, [fp, #-16]
   30d5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   30d60:	cmp	r3, #0
   30d64:	bne	30d74 <grisu3_diy_fp_encode_double@@Base+0x1774>
   30d68:	mov	r3, #2
   30d6c:	str	r3, [fp, #-16]
   30d70:	b	31064 <grisu3_diy_fp_encode_double@@Base+0x1a64>
   30d74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   30d78:	ldr	r3, [r3]
   30d7c:	str	r3, [fp, #-12]
   30d80:	ldr	r3, [fp, #4]
   30d84:	bic	r3, r3, #224	; 0xe0
   30d88:	str	r3, [fp, #4]
   30d8c:	ldr	r3, [fp, #4]
   30d90:	cmp	r3, #0
   30d94:	beq	30da4 <grisu3_diy_fp_encode_double@@Base+0x17a4>
   30d98:	cmp	r3, #1
   30d9c:	beq	30db0 <grisu3_diy_fp_encode_double@@Base+0x17b0>
   30da0:	b	31064 <grisu3_diy_fp_encode_double@@Base+0x1a64>
   30da4:	ldr	r3, [fp, #-20]	; 0xffffffec
   30da8:	str	r3, [fp, #-8]
   30dac:	b	30dbc <grisu3_diy_fp_encode_double@@Base+0x17bc>
   30db0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30db4:	str	r3, [fp, #-8]
   30db8:	nop			; (mov r0, r0)
   30dbc:	mov	r3, #0
   30dc0:	str	r3, [fp, #-16]
   30dc4:	b	30ec8 <grisu3_diy_fp_encode_double@@Base+0x18c8>
   30dc8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30dcc:	ldrb	r3, [r3]
   30dd0:	lsr	r3, r3, #2
   30dd4:	uxtb	r3, r3
   30dd8:	mov	r2, r3
   30ddc:	ldr	r3, [fp, #-8]
   30de0:	add	r3, r3, r2
   30de4:	ldrb	r2, [r3]
   30de8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30dec:	strb	r2, [r3]
   30df0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30df4:	add	r3, r3, #1
   30df8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30dfc:	ldrb	r2, [r2]
   30e00:	lsl	r2, r2, #4
   30e04:	and	r2, r2, #48	; 0x30
   30e08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   30e0c:	add	r1, r1, #1
   30e10:	ldrb	r1, [r1]
   30e14:	lsr	r1, r1, #4
   30e18:	uxtb	r1, r1
   30e1c:	orr	r2, r2, r1
   30e20:	mov	r1, r2
   30e24:	ldr	r2, [fp, #-8]
   30e28:	add	r2, r2, r1
   30e2c:	ldrb	r2, [r2]
   30e30:	strb	r2, [r3]
   30e34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30e38:	add	r3, r3, #2
   30e3c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30e40:	add	r2, r2, #1
   30e44:	ldrb	r2, [r2]
   30e48:	lsl	r2, r2, #2
   30e4c:	and	r2, r2, #60	; 0x3c
   30e50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   30e54:	add	r1, r1, #2
   30e58:	ldrb	r1, [r1]
   30e5c:	lsr	r1, r1, #6
   30e60:	uxtb	r1, r1
   30e64:	orr	r2, r2, r1
   30e68:	mov	r1, r2
   30e6c:	ldr	r2, [fp, #-8]
   30e70:	add	r2, r2, r1
   30e74:	ldrb	r2, [r2]
   30e78:	strb	r2, [r3]
   30e7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30e80:	add	r3, r3, #3
   30e84:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30e88:	add	r2, r2, #2
   30e8c:	ldrb	r2, [r2]
   30e90:	and	r2, r2, #63	; 0x3f
   30e94:	ldr	r1, [fp, #-8]
   30e98:	add	r2, r1, r2
   30e9c:	ldrb	r2, [r2]
   30ea0:	strb	r2, [r3]
   30ea4:	ldr	r3, [fp, #-12]
   30ea8:	sub	r3, r3, #3
   30eac:	str	r3, [fp, #-12]
   30eb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30eb4:	add	r3, r3, #4
   30eb8:	str	r3, [fp, #-40]	; 0xffffffd8
   30ebc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30ec0:	add	r3, r3, #3
   30ec4:	str	r3, [fp, #-44]	; 0xffffffd4
   30ec8:	ldr	r3, [fp, #-12]
   30ecc:	cmp	r3, #2
   30ed0:	bhi	30dc8 <grisu3_diy_fp_encode_double@@Base+0x17c8>
   30ed4:	ldr	r3, [fp, #-12]
   30ed8:	cmp	r3, #1
   30edc:	beq	30fb0 <grisu3_diy_fp_encode_double@@Base+0x19b0>
   30ee0:	cmp	r3, #2
   30ee4:	bne	31044 <grisu3_diy_fp_encode_double@@Base+0x1a44>
   30ee8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30eec:	ldrb	r3, [r3]
   30ef0:	lsr	r3, r3, #2
   30ef4:	uxtb	r3, r3
   30ef8:	mov	r2, r3
   30efc:	ldr	r3, [fp, #-8]
   30f00:	add	r3, r3, r2
   30f04:	ldrb	r2, [r3]
   30f08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30f0c:	strb	r2, [r3]
   30f10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30f14:	add	r3, r3, #1
   30f18:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30f1c:	ldrb	r2, [r2]
   30f20:	lsl	r2, r2, #4
   30f24:	and	r2, r2, #48	; 0x30
   30f28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   30f2c:	add	r1, r1, #1
   30f30:	ldrb	r1, [r1]
   30f34:	lsr	r1, r1, #4
   30f38:	uxtb	r1, r1
   30f3c:	orr	r2, r2, r1
   30f40:	mov	r1, r2
   30f44:	ldr	r2, [fp, #-8]
   30f48:	add	r2, r2, r1
   30f4c:	ldrb	r2, [r2]
   30f50:	strb	r2, [r3]
   30f54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30f58:	add	r3, r3, #2
   30f5c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30f60:	add	r2, r2, #1
   30f64:	ldrb	r2, [r2]
   30f68:	lsl	r2, r2, #2
   30f6c:	and	r2, r2, #60	; 0x3c
   30f70:	ldr	r1, [fp, #-8]
   30f74:	add	r2, r1, r2
   30f78:	ldrb	r2, [r2]
   30f7c:	strb	r2, [r3]
   30f80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30f84:	add	r3, r3, #3
   30f88:	str	r3, [fp, #-40]	; 0xffffffd8
   30f8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30f90:	cmp	r3, #0
   30f94:	beq	31050 <grisu3_diy_fp_encode_double@@Base+0x1a50>
   30f98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30f9c:	add	r2, r3, #1
   30fa0:	str	r2, [fp, #-40]	; 0xffffffd8
   30fa4:	mov	r2, #61	; 0x3d
   30fa8:	strb	r2, [r3]
   30fac:	b	31050 <grisu3_diy_fp_encode_double@@Base+0x1a50>
   30fb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30fb4:	ldrb	r3, [r3]
   30fb8:	lsr	r3, r3, #2
   30fbc:	uxtb	r3, r3
   30fc0:	mov	r2, r3
   30fc4:	ldr	r3, [fp, #-8]
   30fc8:	add	r3, r3, r2
   30fcc:	ldrb	r2, [r3]
   30fd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30fd4:	strb	r2, [r3]
   30fd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30fdc:	add	r3, r3, #1
   30fe0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30fe4:	ldrb	r2, [r2]
   30fe8:	lsl	r2, r2, #4
   30fec:	and	r2, r2, #48	; 0x30
   30ff0:	ldr	r1, [fp, #-8]
   30ff4:	add	r2, r1, r2
   30ff8:	ldrb	r2, [r2]
   30ffc:	strb	r2, [r3]
   31000:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31004:	add	r3, r3, #2
   31008:	str	r3, [fp, #-40]	; 0xffffffd8
   3100c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31010:	cmp	r3, #0
   31014:	beq	31058 <grisu3_diy_fp_encode_double@@Base+0x1a58>
   31018:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3101c:	add	r2, r3, #1
   31020:	str	r2, [fp, #-40]	; 0xffffffd8
   31024:	mov	r2, #61	; 0x3d
   31028:	strb	r2, [r3]
   3102c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31030:	add	r2, r3, #1
   31034:	str	r2, [fp, #-40]	; 0xffffffd8
   31038:	mov	r2, #61	; 0x3d
   3103c:	strb	r2, [r3]
   31040:	b	31058 <grisu3_diy_fp_encode_double@@Base+0x1a58>
   31044:	mov	r3, #0
   31048:	str	r3, [fp, #-32]	; 0xffffffe0
   3104c:	b	3105c <grisu3_diy_fp_encode_double@@Base+0x1a5c>
   31050:	nop			; (mov r0, r0)
   31054:	b	3105c <grisu3_diy_fp_encode_double@@Base+0x1a5c>
   31058:	nop			; (mov r0, r0)
   3105c:	mov	r3, #0
   31060:	str	r3, [fp, #-12]
   31064:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31068:	cmp	r3, #0
   3106c:	beq	31088 <grisu3_diy_fp_encode_double@@Base+0x1a88>
   31070:	ldr	r2, [fp, #-40]	; 0xffffffd8
   31074:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31078:	sub	r3, r2, r3
   3107c:	mov	r2, r3
   31080:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31084:	str	r2, [r3]
   31088:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3108c:	cmp	r3, #0
   31090:	beq	310ac <grisu3_diy_fp_encode_double@@Base+0x1aac>
   31094:	ldr	r3, [fp, #-52]	; 0xffffffcc
   31098:	ldr	r2, [r3]
   3109c:	ldr	r3, [fp, #-12]
   310a0:	sub	r2, r2, r3
   310a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   310a8:	str	r2, [r3]
   310ac:	ldr	r3, [fp, #-16]
   310b0:	mov	r0, r3
   310b4:	add	sp, fp, #0
   310b8:	pop	{fp}		; (ldr fp, [sp], #4)
   310bc:	bx	lr
   310c0:	andeq	r5, r0, ip, ror #27
   310c4:	andeq	r5, r0, r4, lsr #28
   310c8:	push	{fp}		; (str fp, [sp, #-4]!)
   310cc:	add	fp, sp, #0
   310d0:	sub	sp, sp, #60	; 0x3c
   310d4:	str	r0, [fp, #-48]	; 0xffffffd0
   310d8:	str	r1, [fp, #-52]	; 0xffffffcc
   310dc:	str	r2, [fp, #-56]	; 0xffffffc8
   310e0:	str	r3, [fp, #-60]	; 0xffffffc4
   310e4:	mov	r3, #0
   310e8:	str	r3, [fp, #-8]
   310ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   310f0:	str	r3, [fp, #-36]	; 0xffffffdc
   310f4:	mvn	r3, #0
   310f8:	str	r3, [fp, #-20]	; 0xffffffec
   310fc:	mvn	r3, #0
   31100:	str	r3, [fp, #-24]	; 0xffffffe8
   31104:	ldr	r3, [pc, #1376]	; 3166c <grisu3_diy_fp_encode_double@@Base+0x206c>
   31108:	add	r3, pc, r3
   3110c:	str	r3, [fp, #-32]	; 0xffffffe0
   31110:	ldr	r3, [fp, #4]
   31114:	and	r3, r3, #32
   31118:	str	r3, [fp, #-40]	; 0xffffffd8
   3111c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   31120:	cmp	r3, #0
   31124:	beq	31134 <grisu3_diy_fp_encode_double@@Base+0x1b34>
   31128:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3112c:	ldr	r3, [r3]
   31130:	str	r3, [fp, #-24]	; 0xffffffe8
   31134:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31138:	str	r3, [fp, #-28]	; 0xffffffe4
   3113c:	ldr	r3, [fp, #4]
   31140:	bic	r3, r3, #224	; 0xe0
   31144:	str	r3, [fp, #4]
   31148:	ldr	r3, [fp, #4]
   3114c:	cmp	r3, #0
   31150:	beq	31160 <grisu3_diy_fp_encode_double@@Base+0x1b60>
   31154:	cmp	r3, #1
   31158:	beq	31188 <grisu3_diy_fp_encode_double@@Base+0x1b88>
   3115c:	b	311b0 <grisu3_diy_fp_encode_double@@Base+0x1bb0>
   31160:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31164:	cmp	r3, #0
   31168:	beq	31178 <grisu3_diy_fp_encode_double@@Base+0x1b78>
   3116c:	ldr	r3, [pc, #1276]	; 31670 <grisu3_diy_fp_encode_double@@Base+0x2070>
   31170:	add	r3, pc, r3
   31174:	b	31180 <grisu3_diy_fp_encode_double@@Base+0x1b80>
   31178:	ldr	r3, [pc, #1268]	; 31674 <grisu3_diy_fp_encode_double@@Base+0x2074>
   3117c:	add	r3, pc, r3
   31180:	str	r3, [fp, #-32]	; 0xffffffe0
   31184:	b	311bc <grisu3_diy_fp_encode_double@@Base+0x1bbc>
   31188:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3118c:	cmp	r3, #0
   31190:	beq	311a0 <grisu3_diy_fp_encode_double@@Base+0x1ba0>
   31194:	ldr	r3, [pc, #1244]	; 31678 <grisu3_diy_fp_encode_double@@Base+0x2078>
   31198:	add	r3, pc, r3
   3119c:	b	311a8 <grisu3_diy_fp_encode_double@@Base+0x1ba8>
   311a0:	ldr	r3, [pc, #1236]	; 3167c <grisu3_diy_fp_encode_double@@Base+0x207c>
   311a4:	add	r3, pc, r3
   311a8:	str	r3, [fp, #-32]	; 0xffffffe0
   311ac:	b	311bc <grisu3_diy_fp_encode_double@@Base+0x1bbc>
   311b0:	mov	r3, #3
   311b4:	str	r3, [fp, #-8]
   311b8:	b	314a4 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   311bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   311c0:	cmp	r3, #0
   311c4:	beq	31498 <grisu3_diy_fp_encode_double@@Base+0x1e98>
   311c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   311cc:	ldr	r3, [r3]
   311d0:	cmp	r3, #0
   311d4:	beq	31498 <grisu3_diy_fp_encode_double@@Base+0x1e98>
   311d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   311dc:	ldr	r3, [r3]
   311e0:	str	r3, [fp, #-20]	; 0xffffffec
   311e4:	b	31498 <grisu3_diy_fp_encode_double@@Base+0x1e98>
   311e8:	mov	r3, #0
   311ec:	str	r3, [fp, #-12]
   311f0:	b	313b8 <grisu3_diy_fp_encode_double@@Base+0x1db8>
   311f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   311f8:	ldr	r3, [fp, #-12]
   311fc:	cmp	r2, r3
   31200:	bne	31220 <grisu3_diy_fp_encode_double@@Base+0x1c20>
   31204:	ldr	r3, [fp, #-12]
   31208:	str	r3, [fp, #-16]
   3120c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31210:	ldr	r3, [fp, #-12]
   31214:	sub	r3, r2, r3
   31218:	str	r3, [fp, #-24]	; 0xffffffe8
   3121c:	b	314f4 <grisu3_diy_fp_encode_double@@Base+0x1ef4>
   31220:	ldr	r2, [fp, #-52]	; 0xffffffcc
   31224:	ldr	r3, [fp, #-12]
   31228:	add	r3, r2, r3
   3122c:	ldrb	r3, [r3]
   31230:	mov	r2, r3
   31234:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31238:	add	r3, r3, r2
   3123c:	ldrb	r1, [r3]
   31240:	sub	r2, fp, #44	; 0x2c
   31244:	ldr	r3, [fp, #-12]
   31248:	add	r3, r2, r3
   3124c:	mov	r2, r1
   31250:	strb	r2, [r3]
   31254:	sub	r2, fp, #44	; 0x2c
   31258:	ldr	r3, [fp, #-12]
   3125c:	add	r3, r2, r3
   31260:	ldrb	r2, [r3]
   31264:	ldr	r3, [pc, #1044]	; 31680 <grisu3_diy_fp_encode_double@@Base+0x2080>
   31268:	add	r3, pc, r3
   3126c:	ldrb	r3, [r3]
   31270:	cmp	r2, r3
   31274:	bcc	313ac <grisu3_diy_fp_encode_double@@Base+0x1dac>
   31278:	sub	r2, fp, #44	; 0x2c
   3127c:	ldr	r3, [fp, #-12]
   31280:	add	r3, r2, r3
   31284:	ldrb	r2, [r3]
   31288:	ldr	r3, [pc, #1012]	; 31684 <grisu3_diy_fp_encode_double@@Base+0x2084>
   3128c:	add	r3, pc, r3
   31290:	ldrb	r3, [r3]
   31294:	cmp	r2, r3
   31298:	bne	312c4 <grisu3_diy_fp_encode_double@@Base+0x1cc4>
   3129c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   312a0:	add	r3, r3, #1
   312a4:	str	r3, [fp, #-52]	; 0xffffffcc
   312a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   312ac:	sub	r3, r3, #1
   312b0:	str	r3, [fp, #-24]	; 0xffffffe8
   312b4:	ldr	r3, [fp, #-12]
   312b8:	sub	r3, r3, #1
   312bc:	str	r3, [fp, #-12]
   312c0:	b	313ac <grisu3_diy_fp_encode_double@@Base+0x1dac>
   312c4:	ldr	r3, [fp, #-12]
   312c8:	str	r3, [fp, #-16]
   312cc:	sub	r2, fp, #44	; 0x2c
   312d0:	ldr	r3, [fp, #-12]
   312d4:	add	r3, r2, r3
   312d8:	ldrb	r2, [r3]
   312dc:	ldr	r3, [pc, #932]	; 31688 <grisu3_diy_fp_encode_double@@Base+0x2088>
   312e0:	add	r3, pc, r3
   312e4:	ldrb	r3, [r3]
   312e8:	cmp	r2, r3
   312ec:	bne	31398 <grisu3_diy_fp_encode_double@@Base+0x1d98>
   312f0:	ldr	r3, [fp, #-12]
   312f4:	add	r3, r3, #1
   312f8:	str	r3, [fp, #-12]
   312fc:	b	31374 <grisu3_diy_fp_encode_double@@Base+0x1d74>
   31300:	ldr	r2, [fp, #-52]	; 0xffffffcc
   31304:	ldr	r3, [fp, #-12]
   31308:	add	r3, r2, r3
   3130c:	ldrb	r3, [r3]
   31310:	mov	r2, r3
   31314:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31318:	add	r3, r3, r2
   3131c:	ldrb	r2, [r3]
   31320:	ldr	r3, [pc, #868]	; 3168c <grisu3_diy_fp_encode_double@@Base+0x208c>
   31324:	add	r3, pc, r3
   31328:	ldrb	r3, [r3]
   3132c:	cmp	r2, r3
   31330:	beq	31368 <grisu3_diy_fp_encode_double@@Base+0x1d68>
   31334:	ldr	r2, [fp, #-52]	; 0xffffffcc
   31338:	ldr	r3, [fp, #-12]
   3133c:	add	r3, r2, r3
   31340:	ldrb	r3, [r3]
   31344:	mov	r2, r3
   31348:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3134c:	add	r3, r3, r2
   31350:	ldrb	r2, [r3]
   31354:	ldr	r3, [pc, #820]	; 31690 <grisu3_diy_fp_encode_double@@Base+0x2090>
   31358:	add	r3, pc, r3
   3135c:	ldrb	r3, [r3]
   31360:	cmp	r2, r3
   31364:	bne	31394 <grisu3_diy_fp_encode_double@@Base+0x1d94>
   31368:	ldr	r3, [fp, #-12]
   3136c:	add	r3, r3, #1
   31370:	str	r3, [fp, #-12]
   31374:	ldr	r2, [fp, #-12]
   31378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3137c:	cmp	r2, r3
   31380:	bcs	31398 <grisu3_diy_fp_encode_double@@Base+0x1d98>
   31384:	ldr	r3, [fp, #-12]
   31388:	cmp	r3, #7
   3138c:	bls	31300 <grisu3_diy_fp_encode_double@@Base+0x1d00>
   31390:	b	31398 <grisu3_diy_fp_encode_double@@Base+0x1d98>
   31394:	nop			; (mov r0, r0)
   31398:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3139c:	ldr	r3, [fp, #-12]
   313a0:	sub	r3, r2, r3
   313a4:	str	r3, [fp, #-24]	; 0xffffffe8
   313a8:	b	314f4 <grisu3_diy_fp_encode_double@@Base+0x1ef4>
   313ac:	ldr	r3, [fp, #-12]
   313b0:	add	r3, r3, #1
   313b4:	str	r3, [fp, #-12]
   313b8:	ldr	r3, [fp, #-12]
   313bc:	cmp	r3, #3
   313c0:	bls	311f4 <grisu3_diy_fp_encode_double@@Base+0x1bf4>
   313c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   313c8:	cmp	r3, #2
   313cc:	bls	3163c <grisu3_diy_fp_encode_double@@Base+0x203c>
   313d0:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   313d4:	lsl	r3, r3, #2
   313d8:	sxtb	r2, r3
   313dc:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   313e0:	lsr	r3, r3, #4
   313e4:	uxtb	r3, r3
   313e8:	sxtb	r3, r3
   313ec:	orr	r3, r2, r3
   313f0:	sxtb	r3, r3
   313f4:	uxtb	r2, r3
   313f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   313fc:	strb	r2, [r3]
   31400:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31404:	add	r3, r3, #1
   31408:	ldrb	r2, [fp, #-43]	; 0xffffffd5
   3140c:	lsl	r2, r2, #4
   31410:	sxtb	r1, r2
   31414:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   31418:	lsr	r2, r2, #2
   3141c:	uxtb	r2, r2
   31420:	sxtb	r2, r2
   31424:	orr	r2, r1, r2
   31428:	sxtb	r2, r2
   3142c:	uxtb	r2, r2
   31430:	strb	r2, [r3]
   31434:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31438:	add	r3, r3, #2
   3143c:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   31440:	lsl	r2, r2, #6
   31444:	sxtb	r1, r2
   31448:	ldrb	r2, [fp, #-41]	; 0xffffffd7
   3144c:	sxtb	r2, r2
   31450:	orr	r2, r1, r2
   31454:	sxtb	r2, r2
   31458:	uxtb	r2, r2
   3145c:	strb	r2, [r3]
   31460:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31464:	add	r3, r3, #3
   31468:	str	r3, [fp, #-48]	; 0xffffffd0
   3146c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   31470:	add	r3, r3, #4
   31474:	str	r3, [fp, #-52]	; 0xffffffcc
   31478:	ldr	r3, [fp, #-20]	; 0xffffffec
   3147c:	sub	r3, r3, #3
   31480:	str	r3, [fp, #-20]	; 0xffffffec
   31484:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31488:	sub	r3, r3, #4
   3148c:	str	r3, [fp, #-24]	; 0xffffffe8
   31490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31494:	str	r3, [fp, #-28]	; 0xffffffe4
   31498:	ldr	r3, [fp, #-20]	; 0xffffffec
   3149c:	cmp	r3, #0
   314a0:	bne	311e8 <grisu3_diy_fp_encode_double@@Base+0x1be8>
   314a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   314a8:	cmp	r3, #0
   314ac:	beq	314c8 <grisu3_diy_fp_encode_double@@Base+0x1ec8>
   314b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   314b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   314b8:	sub	r3, r2, r3
   314bc:	mov	r2, r3
   314c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   314c4:	str	r2, [r3]
   314c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   314cc:	cmp	r3, #0
   314d0:	beq	314ec <grisu3_diy_fp_encode_double@@Base+0x1eec>
   314d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   314d8:	ldr	r2, [r3]
   314dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   314e0:	sub	r2, r2, r3
   314e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   314e8:	str	r2, [r3]
   314ec:	ldr	r3, [fp, #-8]
   314f0:	b	3165c <grisu3_diy_fp_encode_double@@Base+0x205c>
   314f4:	ldr	r3, [fp, #-16]
   314f8:	cmp	r3, #2
   314fc:	beq	31514 <grisu3_diy_fp_encode_double@@Base+0x1f14>
   31500:	cmp	r3, #3
   31504:	beq	31574 <grisu3_diy_fp_encode_double@@Base+0x1f74>
   31508:	cmp	r3, #0
   3150c:	beq	31614 <grisu3_diy_fp_encode_double@@Base+0x2014>
   31510:	b	31608 <grisu3_diy_fp_encode_double@@Base+0x2008>
   31514:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   31518:	lsl	r3, r3, #4
   3151c:	uxtb	r3, r3
   31520:	cmp	r3, #0
   31524:	bne	31624 <grisu3_diy_fp_encode_double@@Base+0x2024>
   31528:	ldr	r3, [fp, #-20]	; 0xffffffec
   3152c:	cmp	r3, #0
   31530:	beq	31644 <grisu3_diy_fp_encode_double@@Base+0x2044>
   31534:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   31538:	lsl	r3, r3, #2
   3153c:	sxtb	r2, r3
   31540:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   31544:	lsr	r3, r3, #4
   31548:	uxtb	r3, r3
   3154c:	sxtb	r3, r3
   31550:	orr	r3, r2, r3
   31554:	sxtb	r3, r3
   31558:	uxtb	r2, r3
   3155c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31560:	strb	r2, [r3]
   31564:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31568:	add	r3, r3, #1
   3156c:	str	r3, [fp, #-48]	; 0xffffffd0
   31570:	b	31618 <grisu3_diy_fp_encode_double@@Base+0x2018>
   31574:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   31578:	lsl	r3, r3, #6
   3157c:	uxtb	r3, r3
   31580:	cmp	r3, #0
   31584:	bne	3162c <grisu3_diy_fp_encode_double@@Base+0x202c>
   31588:	ldr	r3, [fp, #-20]	; 0xffffffec
   3158c:	cmp	r3, #1
   31590:	bls	3164c <grisu3_diy_fp_encode_double@@Base+0x204c>
   31594:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   31598:	lsl	r3, r3, #2
   3159c:	sxtb	r2, r3
   315a0:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   315a4:	lsr	r3, r3, #4
   315a8:	uxtb	r3, r3
   315ac:	sxtb	r3, r3
   315b0:	orr	r3, r2, r3
   315b4:	sxtb	r3, r3
   315b8:	uxtb	r2, r3
   315bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   315c0:	strb	r2, [r3]
   315c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   315c8:	add	r3, r3, #1
   315cc:	ldrb	r2, [fp, #-43]	; 0xffffffd5
   315d0:	lsl	r2, r2, #4
   315d4:	sxtb	r1, r2
   315d8:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   315dc:	lsr	r2, r2, #2
   315e0:	uxtb	r2, r2
   315e4:	sxtb	r2, r2
   315e8:	orr	r2, r1, r2
   315ec:	sxtb	r2, r2
   315f0:	uxtb	r2, r2
   315f4:	strb	r2, [r3]
   315f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   315fc:	add	r3, r3, #2
   31600:	str	r3, [fp, #-48]	; 0xffffffd0
   31604:	b	31618 <grisu3_diy_fp_encode_double@@Base+0x2018>
   31608:	mov	r3, #4
   3160c:	str	r3, [fp, #-8]
   31610:	b	314a4 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   31614:	nop			; (mov r0, r0)
   31618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3161c:	str	r3, [fp, #-28]	; 0xffffffe4
   31620:	b	314a4 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   31624:	nop			; (mov r0, r0)
   31628:	b	31630 <grisu3_diy_fp_encode_double@@Base+0x2030>
   3162c:	nop			; (mov r0, r0)
   31630:	mov	r3, #5
   31634:	str	r3, [fp, #-8]
   31638:	b	314a4 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   3163c:	nop			; (mov r0, r0)
   31640:	b	31650 <grisu3_diy_fp_encode_double@@Base+0x2050>
   31644:	nop			; (mov r0, r0)
   31648:	b	31650 <grisu3_diy_fp_encode_double@@Base+0x2050>
   3164c:	nop			; (mov r0, r0)
   31650:	mov	r3, #1
   31654:	str	r3, [fp, #-8]
   31658:	b	314a4 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   3165c:	mov	r0, r3
   31660:	add	sp, fp, #0
   31664:	pop	{fp}		; (ldr fp, [sp], #4)
   31668:	bx	lr
   3166c:	andeq	r5, r0, r8, lsr #28
   31670:	andeq	r5, r0, r0, asr #29
   31674:			; <UNDEFINED> instruction: 0x00005db4
   31678:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   3167c:	andeq	r6, r0, ip, lsl #1
   31680:	andeq	r6, r0, r8, asr #1
   31684:	andeq	r6, r0, r5, lsr #1
   31688:	andeq	r6, r0, r2, asr r0
   3168c:	andeq	r6, r0, lr
   31690:	ldrdeq	r5, [r0], -r9

00031694 <flatcc_json_parser_error_string@@Base>:
   31694:	push	{fp}		; (str fp, [sp, #-4]!)
   31698:	add	fp, sp, #0
   3169c:	sub	sp, sp, #12
   316a0:	str	r0, [fp, #-8]
   316a4:	ldr	r3, [fp, #-8]
   316a8:	cmp	r3, #34	; 0x22
   316ac:	addls	pc, pc, r3, lsl #2
   316b0:	b	318e4 <flatcc_json_parser_error_string@@Base+0x250>
   316b4:	b	31740 <flatcc_json_parser_error_string@@Base+0xac>
   316b8:	b	3174c <flatcc_json_parser_error_string@@Base+0xb8>
   316bc:	b	31758 <flatcc_json_parser_error_string@@Base+0xc4>
   316c0:	b	31764 <flatcc_json_parser_error_string@@Base+0xd0>
   316c4:	b	31770 <flatcc_json_parser_error_string@@Base+0xdc>
   316c8:	b	3177c <flatcc_json_parser_error_string@@Base+0xe8>
   316cc:	b	31788 <flatcc_json_parser_error_string@@Base+0xf4>
   316d0:	b	31794 <flatcc_json_parser_error_string@@Base+0x100>
   316d4:	b	317a0 <flatcc_json_parser_error_string@@Base+0x10c>
   316d8:	b	317ac <flatcc_json_parser_error_string@@Base+0x118>
   316dc:	b	317b8 <flatcc_json_parser_error_string@@Base+0x124>
   316e0:	b	317c4 <flatcc_json_parser_error_string@@Base+0x130>
   316e4:	b	317d0 <flatcc_json_parser_error_string@@Base+0x13c>
   316e8:	b	317dc <flatcc_json_parser_error_string@@Base+0x148>
   316ec:	b	317e8 <flatcc_json_parser_error_string@@Base+0x154>
   316f0:	b	317f4 <flatcc_json_parser_error_string@@Base+0x160>
   316f4:	b	31800 <flatcc_json_parser_error_string@@Base+0x16c>
   316f8:	b	3180c <flatcc_json_parser_error_string@@Base+0x178>
   316fc:	b	31818 <flatcc_json_parser_error_string@@Base+0x184>
   31700:	b	31824 <flatcc_json_parser_error_string@@Base+0x190>
   31704:	b	31830 <flatcc_json_parser_error_string@@Base+0x19c>
   31708:	b	3183c <flatcc_json_parser_error_string@@Base+0x1a8>
   3170c:	b	31848 <flatcc_json_parser_error_string@@Base+0x1b4>
   31710:	b	31854 <flatcc_json_parser_error_string@@Base+0x1c0>
   31714:	b	31860 <flatcc_json_parser_error_string@@Base+0x1cc>
   31718:	b	3186c <flatcc_json_parser_error_string@@Base+0x1d8>
   3171c:	b	31878 <flatcc_json_parser_error_string@@Base+0x1e4>
   31720:	b	31884 <flatcc_json_parser_error_string@@Base+0x1f0>
   31724:	b	31890 <flatcc_json_parser_error_string@@Base+0x1fc>
   31728:	b	3189c <flatcc_json_parser_error_string@@Base+0x208>
   3172c:	b	318a8 <flatcc_json_parser_error_string@@Base+0x214>
   31730:	b	318b4 <flatcc_json_parser_error_string@@Base+0x220>
   31734:	b	318c0 <flatcc_json_parser_error_string@@Base+0x22c>
   31738:	b	318cc <flatcc_json_parser_error_string@@Base+0x238>
   3173c:	b	318d8 <flatcc_json_parser_error_string@@Base+0x244>
   31740:	ldr	r3, [pc, #436]	; 318fc <flatcc_json_parser_error_string@@Base+0x268>
   31744:	add	r3, pc, r3
   31748:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   3174c:	ldr	r3, [pc, #428]	; 31900 <flatcc_json_parser_error_string@@Base+0x26c>
   31750:	add	r3, pc, r3
   31754:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31758:	ldr	r3, [pc, #420]	; 31904 <flatcc_json_parser_error_string@@Base+0x270>
   3175c:	add	r3, pc, r3
   31760:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31764:	ldr	r3, [pc, #412]	; 31908 <flatcc_json_parser_error_string@@Base+0x274>
   31768:	add	r3, pc, r3
   3176c:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31770:	ldr	r3, [pc, #404]	; 3190c <flatcc_json_parser_error_string@@Base+0x278>
   31774:	add	r3, pc, r3
   31778:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   3177c:	ldr	r3, [pc, #396]	; 31910 <flatcc_json_parser_error_string@@Base+0x27c>
   31780:	add	r3, pc, r3
   31784:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31788:	ldr	r3, [pc, #388]	; 31914 <flatcc_json_parser_error_string@@Base+0x280>
   3178c:	add	r3, pc, r3
   31790:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31794:	ldr	r3, [pc, #380]	; 31918 <flatcc_json_parser_error_string@@Base+0x284>
   31798:	add	r3, pc, r3
   3179c:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   317a0:	ldr	r3, [pc, #372]	; 3191c <flatcc_json_parser_error_string@@Base+0x288>
   317a4:	add	r3, pc, r3
   317a8:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   317ac:	ldr	r3, [pc, #364]	; 31920 <flatcc_json_parser_error_string@@Base+0x28c>
   317b0:	add	r3, pc, r3
   317b4:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   317b8:	ldr	r3, [pc, #356]	; 31924 <flatcc_json_parser_error_string@@Base+0x290>
   317bc:	add	r3, pc, r3
   317c0:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   317c4:	ldr	r3, [pc, #348]	; 31928 <flatcc_json_parser_error_string@@Base+0x294>
   317c8:	add	r3, pc, r3
   317cc:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   317d0:	ldr	r3, [pc, #340]	; 3192c <flatcc_json_parser_error_string@@Base+0x298>
   317d4:	add	r3, pc, r3
   317d8:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   317dc:	ldr	r3, [pc, #332]	; 31930 <flatcc_json_parser_error_string@@Base+0x29c>
   317e0:	add	r3, pc, r3
   317e4:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   317e8:	ldr	r3, [pc, #324]	; 31934 <flatcc_json_parser_error_string@@Base+0x2a0>
   317ec:	add	r3, pc, r3
   317f0:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   317f4:	ldr	r3, [pc, #316]	; 31938 <flatcc_json_parser_error_string@@Base+0x2a4>
   317f8:	add	r3, pc, r3
   317fc:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31800:	ldr	r3, [pc, #308]	; 3193c <flatcc_json_parser_error_string@@Base+0x2a8>
   31804:	add	r3, pc, r3
   31808:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   3180c:	ldr	r3, [pc, #300]	; 31940 <flatcc_json_parser_error_string@@Base+0x2ac>
   31810:	add	r3, pc, r3
   31814:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31818:	ldr	r3, [pc, #292]	; 31944 <flatcc_json_parser_error_string@@Base+0x2b0>
   3181c:	add	r3, pc, r3
   31820:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31824:	ldr	r3, [pc, #284]	; 31948 <flatcc_json_parser_error_string@@Base+0x2b4>
   31828:	add	r3, pc, r3
   3182c:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31830:	ldr	r3, [pc, #276]	; 3194c <flatcc_json_parser_error_string@@Base+0x2b8>
   31834:	add	r3, pc, r3
   31838:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   3183c:	ldr	r3, [pc, #268]	; 31950 <flatcc_json_parser_error_string@@Base+0x2bc>
   31840:	add	r3, pc, r3
   31844:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31848:	ldr	r3, [pc, #260]	; 31954 <flatcc_json_parser_error_string@@Base+0x2c0>
   3184c:	add	r3, pc, r3
   31850:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31854:	ldr	r3, [pc, #252]	; 31958 <flatcc_json_parser_error_string@@Base+0x2c4>
   31858:	add	r3, pc, r3
   3185c:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31860:	ldr	r3, [pc, #244]	; 3195c <flatcc_json_parser_error_string@@Base+0x2c8>
   31864:	add	r3, pc, r3
   31868:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   3186c:	ldr	r3, [pc, #236]	; 31960 <flatcc_json_parser_error_string@@Base+0x2cc>
   31870:	add	r3, pc, r3
   31874:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31878:	ldr	r3, [pc, #228]	; 31964 <flatcc_json_parser_error_string@@Base+0x2d0>
   3187c:	add	r3, pc, r3
   31880:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31884:	ldr	r3, [pc, #220]	; 31968 <flatcc_json_parser_error_string@@Base+0x2d4>
   31888:	add	r3, pc, r3
   3188c:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   31890:	ldr	r3, [pc, #212]	; 3196c <flatcc_json_parser_error_string@@Base+0x2d8>
   31894:	add	r3, pc, r3
   31898:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   3189c:	ldr	r3, [pc, #204]	; 31970 <flatcc_json_parser_error_string@@Base+0x2dc>
   318a0:	add	r3, pc, r3
   318a4:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   318a8:	ldr	r3, [pc, #196]	; 31974 <flatcc_json_parser_error_string@@Base+0x2e0>
   318ac:	add	r3, pc, r3
   318b0:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   318b4:	ldr	r3, [pc, #188]	; 31978 <flatcc_json_parser_error_string@@Base+0x2e4>
   318b8:	add	r3, pc, r3
   318bc:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   318c0:	ldr	r3, [pc, #180]	; 3197c <flatcc_json_parser_error_string@@Base+0x2e8>
   318c4:	add	r3, pc, r3
   318c8:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   318cc:	ldr	r3, [pc, #172]	; 31980 <flatcc_json_parser_error_string@@Base+0x2ec>
   318d0:	add	r3, pc, r3
   318d4:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   318d8:	ldr	r3, [pc, #164]	; 31984 <flatcc_json_parser_error_string@@Base+0x2f0>
   318dc:	add	r3, pc, r3
   318e0:	b	318ec <flatcc_json_parser_error_string@@Base+0x258>
   318e4:	ldr	r3, [pc, #156]	; 31988 <flatcc_json_parser_error_string@@Base+0x2f4>
   318e8:	add	r3, pc, r3
   318ec:	mov	r0, r3
   318f0:	add	sp, fp, #0
   318f4:	pop	{fp}		; (ldr fp, [sp], #4)
   318f8:	bx	lr
   318fc:	andeq	r5, r0, r4, asr r3
   31900:	andeq	r5, r0, r8, asr #8
   31904:	andeq	r5, r0, r0, asr #8
   31908:	andeq	r5, r0, r4, asr #8
   3190c:	andeq	r5, r0, r8, asr #8
   31910:	andeq	r5, r0, ip, asr #8
   31914:	andeq	r5, r0, r8, asr r4
   31918:	andeq	r5, r0, ip, asr r4
   3191c:	andeq	r5, r0, ip, asr r4
   31920:	andeq	r5, r0, ip, asr r4
   31924:	andeq	r5, r0, r4, ror #8
   31928:	andeq	r5, r0, ip, ror #8
   3192c:	andeq	r5, r0, r0, ror r4
   31930:	andeq	r5, r0, r8, ror r4
   31934:	andeq	r5, r0, ip, ror r4
   31938:	andeq	r5, r0, ip, lsl #9
   3193c:	muleq	r0, r4, r4
   31940:	muleq	r0, r8, r4
   31944:	andeq	r5, r0, r0, lsr #9
   31948:	andeq	r5, r0, r4, lsr #9
   3194c:	andeq	r5, r0, r8, lsr #9
   31950:			; <UNDEFINED> instruction: 0x000054b0
   31954:			; <UNDEFINED> instruction: 0x000054b4
   31958:			; <UNDEFINED> instruction: 0x000054b8
   3195c:	ldrdeq	r5, [r0], -r0
   31960:	ldrdeq	r5, [r0], -r8
   31964:	andeq	r5, r0, ip, ror #9
   31968:	andeq	r5, r0, r0, lsl #10
   3196c:	andeq	r5, r0, r0, lsl r5
   31970:	andeq	r5, r0, r0, lsr #10
   31974:	andeq	r5, r0, ip, lsr #10
   31978:	andeq	r5, r0, r0, asr #10
   3197c:	andeq	r5, r0, ip, asr #10
   31980:	andeq	r5, r0, ip, asr r5
   31984:	andeq	r5, r0, r0, ror #10
   31988:	andeq	r5, r0, r4, ror #10

0003198c <flatcc_json_parser_set_error@@Base>:
   3198c:	push	{fp}		; (str fp, [sp, #-4]!)
   31990:	add	fp, sp, #0
   31994:	sub	sp, sp, #20
   31998:	str	r0, [fp, #-8]
   3199c:	str	r1, [fp, #-12]
   319a0:	str	r2, [fp, #-16]
   319a4:	str	r3, [fp, #-20]	; 0xffffffec
   319a8:	ldr	r3, [fp, #-8]
   319ac:	ldr	r3, [r3, #24]
   319b0:	cmp	r3, #0
   319b4:	bne	319ec <flatcc_json_parser_set_error@@Base+0x60>
   319b8:	ldr	r3, [fp, #-8]
   319bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   319c0:	str	r2, [r3, #24]
   319c4:	ldr	r3, [fp, #-12]
   319c8:	ldr	r2, [fp, #-8]
   319cc:	ldr	r2, [r2, #4]
   319d0:	sub	r3, r3, r2
   319d4:	add	r2, r3, #1
   319d8:	ldr	r3, [fp, #-8]
   319dc:	str	r2, [r3, #20]
   319e0:	ldr	r3, [fp, #-8]
   319e4:	ldr	r2, [fp, #-12]
   319e8:	str	r2, [r3, #36]	; 0x24
   319ec:	ldr	r3, [fp, #-16]
   319f0:	mov	r0, r3
   319f4:	add	sp, fp, #0
   319f8:	pop	{fp}		; (ldr fp, [sp], #4)
   319fc:	bx	lr

00031a00 <flatcc_json_parser_string_part@@Base>:
   31a00:	push	{fp, lr}
   31a04:	add	fp, sp, #4
   31a08:	sub	sp, sp, #16
   31a0c:	str	r0, [fp, #-8]
   31a10:	str	r1, [fp, #-12]
   31a14:	str	r2, [fp, #-16]
   31a18:	b	31a28 <flatcc_json_parser_string_part@@Base+0x28>
   31a1c:	ldr	r3, [fp, #-12]
   31a20:	add	r3, r3, #1
   31a24:	str	r3, [fp, #-12]
   31a28:	ldr	r2, [fp, #-12]
   31a2c:	ldr	r3, [fp, #-16]
   31a30:	cmp	r2, r3
   31a34:	beq	31a68 <flatcc_json_parser_string_part@@Base+0x68>
   31a38:	ldr	r3, [fp, #-12]
   31a3c:	ldrb	r3, [r3]
   31a40:	cmp	r3, #34	; 0x22
   31a44:	beq	31a68 <flatcc_json_parser_string_part@@Base+0x68>
   31a48:	ldr	r3, [fp, #-12]
   31a4c:	ldrb	r3, [r3]
   31a50:	cmp	r3, #31
   31a54:	bls	31a68 <flatcc_json_parser_string_part@@Base+0x68>
   31a58:	ldr	r3, [fp, #-12]
   31a5c:	ldrb	r3, [r3]
   31a60:	cmp	r3, #92	; 0x5c
   31a64:	bne	31a1c <flatcc_json_parser_string_part@@Base+0x1c>
   31a68:	ldr	r2, [fp, #-12]
   31a6c:	ldr	r3, [fp, #-16]
   31a70:	cmp	r2, r3
   31a74:	bne	31a94 <flatcc_json_parser_string_part@@Base+0x94>
   31a78:	mov	r3, #20
   31a7c:	ldr	r2, [fp, #-16]
   31a80:	ldr	r1, [fp, #-12]
   31a84:	ldr	r0, [fp, #-8]
   31a88:	bl	3198c <flatcc_json_parser_set_error@@Base>
   31a8c:	mov	r3, r0
   31a90:	b	31adc <flatcc_json_parser_string_part@@Base+0xdc>
   31a94:	ldr	r3, [fp, #-12]
   31a98:	ldrb	r3, [r3]
   31a9c:	cmp	r3, #34	; 0x22
   31aa0:	bne	31aac <flatcc_json_parser_string_part@@Base+0xac>
   31aa4:	ldr	r3, [fp, #-12]
   31aa8:	b	31adc <flatcc_json_parser_string_part@@Base+0xdc>
   31aac:	ldr	r3, [fp, #-12]
   31ab0:	ldrb	r3, [r3]
   31ab4:	cmp	r3, #31
   31ab8:	bhi	31ad8 <flatcc_json_parser_string_part@@Base+0xd8>
   31abc:	mov	r3, #17
   31ac0:	ldr	r2, [fp, #-16]
   31ac4:	ldr	r1, [fp, #-12]
   31ac8:	ldr	r0, [fp, #-8]
   31acc:	bl	3198c <flatcc_json_parser_set_error@@Base>
   31ad0:	mov	r3, r0
   31ad4:	b	31adc <flatcc_json_parser_string_part@@Base+0xdc>
   31ad8:	ldr	r3, [fp, #-12]
   31adc:	mov	r0, r3
   31ae0:	sub	sp, fp, #4
   31ae4:	pop	{fp, pc}

00031ae8 <flatcc_json_parser_space_ext@@Base>:
   31ae8:	push	{fp, lr}
   31aec:	add	fp, sp, #4
   31af0:	sub	sp, sp, #16
   31af4:	str	r0, [fp, #-8]
   31af8:	str	r1, [fp, #-12]
   31afc:	str	r2, [fp, #-16]
   31b00:	b	31b10 <flatcc_json_parser_space_ext@@Base+0x28>
   31b04:	ldr	r3, [fp, #-12]
   31b08:	add	r3, r3, #1
   31b0c:	str	r3, [fp, #-12]
   31b10:	ldr	r2, [fp, #-12]
   31b14:	ldr	r3, [fp, #-16]
   31b18:	cmp	r2, r3
   31b1c:	beq	31c4c <flatcc_json_parser_space_ext@@Base+0x164>
   31b20:	ldr	r3, [fp, #-12]
   31b24:	ldrb	r3, [r3]
   31b28:	cmp	r3, #32
   31b2c:	beq	31b04 <flatcc_json_parser_space_ext@@Base+0x1c>
   31b30:	b	31c4c <flatcc_json_parser_space_ext@@Base+0x164>
   31b34:	ldr	r3, [fp, #-12]
   31b38:	ldrb	r3, [r3]
   31b3c:	sub	r3, r3, #9
   31b40:	cmp	r3, #23
   31b44:	addls	pc, pc, r3, lsl #2
   31b48:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b4c:	b	31c20 <flatcc_json_parser_space_ext@@Base+0x138>
   31b50:	b	31bf0 <flatcc_json_parser_space_ext@@Base+0x108>
   31b54:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b58:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b5c:	b	31bac <flatcc_json_parser_space_ext@@Base+0xc4>
   31b60:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b64:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b68:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b6c:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b70:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b74:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b78:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b7c:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b80:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b84:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b88:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b8c:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b90:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b94:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b98:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31b9c:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31ba0:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31ba4:	b	31c30 <flatcc_json_parser_space_ext@@Base+0x148>
   31ba8:	b	31b00 <flatcc_json_parser_space_ext@@Base+0x18>
   31bac:	ldr	r2, [fp, #-16]
   31bb0:	ldr	r3, [fp, #-12]
   31bb4:	sub	r3, r2, r3
   31bb8:	cmp	r3, #1
   31bbc:	ble	31bdc <flatcc_json_parser_space_ext@@Base+0xf4>
   31bc0:	ldr	r3, [fp, #-12]
   31bc4:	add	r3, r3, #1
   31bc8:	ldrb	r3, [r3]
   31bcc:	cmp	r3, #10
   31bd0:	bne	31bdc <flatcc_json_parser_space_ext@@Base+0xf4>
   31bd4:	mov	r3, #1
   31bd8:	b	31be0 <flatcc_json_parser_space_ext@@Base+0xf8>
   31bdc:	mov	r3, #0
   31be0:	mov	r2, r3
   31be4:	ldr	r3, [fp, #-12]
   31be8:	add	r3, r3, r2
   31bec:	str	r3, [fp, #-12]
   31bf0:	ldr	r3, [fp, #-8]
   31bf4:	ldr	r3, [r3, #16]
   31bf8:	add	r2, r3, #1
   31bfc:	ldr	r3, [fp, #-8]
   31c00:	str	r2, [r3, #16]
   31c04:	ldr	r3, [fp, #-12]
   31c08:	add	r3, r3, #1
   31c0c:	str	r3, [fp, #-12]
   31c10:	ldr	r3, [fp, #-8]
   31c14:	ldr	r2, [fp, #-12]
   31c18:	str	r2, [r3, #4]
   31c1c:	b	31c4c <flatcc_json_parser_space_ext@@Base+0x164>
   31c20:	ldr	r3, [fp, #-12]
   31c24:	add	r3, r3, #1
   31c28:	str	r3, [fp, #-12]
   31c2c:	b	31c4c <flatcc_json_parser_space_ext@@Base+0x164>
   31c30:	mov	r3, #5
   31c34:	ldr	r2, [fp, #-16]
   31c38:	ldr	r1, [fp, #-12]
   31c3c:	ldr	r0, [fp, #-8]
   31c40:	bl	3198c <flatcc_json_parser_set_error@@Base>
   31c44:	mov	r3, r0
   31c48:	b	31c70 <flatcc_json_parser_space_ext@@Base+0x188>
   31c4c:	ldr	r2, [fp, #-12]
   31c50:	ldr	r3, [fp, #-16]
   31c54:	cmp	r2, r3
   31c58:	beq	31c6c <flatcc_json_parser_space_ext@@Base+0x184>
   31c5c:	ldr	r3, [fp, #-12]
   31c60:	ldrb	r3, [r3]
   31c64:	cmp	r3, #32
   31c68:	bls	31b34 <flatcc_json_parser_space_ext@@Base+0x4c>
   31c6c:	ldr	r3, [fp, #-12]
   31c70:	mov	r0, r3
   31c74:	sub	sp, fp, #4
   31c78:	pop	{fp, pc}

00031c7c <flatcc_json_parser_string_escape@@Base>:
   31c7c:	push	{fp, lr}
   31c80:	add	fp, sp, #4
   31c84:	sub	sp, sp, #24
   31c88:	str	r0, [fp, #-16]
   31c8c:	str	r1, [fp, #-20]	; 0xffffffec
   31c90:	str	r2, [fp, #-24]	; 0xffffffe8
   31c94:	str	r3, [fp, #-28]	; 0xffffffe4
   31c98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31c9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31ca0:	sub	r3, r2, r3
   31ca4:	cmp	r3, #1
   31ca8:	ble	31cbc <flatcc_json_parser_string_escape@@Base+0x40>
   31cac:	ldr	r3, [fp, #-20]	; 0xffffffec
   31cb0:	ldrb	r3, [r3]
   31cb4:	cmp	r3, #92	; 0x5c
   31cb8:	beq	31ce4 <flatcc_json_parser_string_escape@@Base+0x68>
   31cbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31cc0:	mov	r2, #0
   31cc4:	strb	r2, [r3]
   31cc8:	mov	r3, #18
   31ccc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31cd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   31cd4:	ldr	r0, [fp, #-16]
   31cd8:	bl	3198c <flatcc_json_parser_set_error@@Base>
   31cdc:	mov	r3, r0
   31ce0:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   31ce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   31ce8:	add	r3, r3, #1
   31cec:	ldrb	r3, [r3]
   31cf0:	sub	r3, r3, #34	; 0x22
   31cf4:	cmp	r3, #86	; 0x56
   31cf8:	addls	pc, pc, r3, lsl #2
   31cfc:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d00:	b	3259c <flatcc_json_parser_string_escape@@Base+0x920>
   31d04:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d08:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d0c:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d10:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d14:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d18:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d1c:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d20:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d24:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d28:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d2c:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d30:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d34:	b	325ec <flatcc_json_parser_string_escape@@Base+0x970>
   31d38:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d3c:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d40:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d44:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d48:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d4c:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d50:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d54:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d58:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d5c:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d60:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d64:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d68:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d6c:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d70:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d74:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d78:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d7c:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d80:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d84:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d88:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d8c:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d90:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d94:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d98:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31d9c:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31da0:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31da4:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31da8:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31dac:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31db0:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31db4:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31db8:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31dbc:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31dc0:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31dc4:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31dc8:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31dcc:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31dd0:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31dd4:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31dd8:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31ddc:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31de0:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31de4:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31de8:	b	325c4 <flatcc_json_parser_string_escape@@Base+0x948>
   31dec:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31df0:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31df4:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31df8:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31dfc:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e00:	b	3254c <flatcc_json_parser_string_escape@@Base+0x8d0>
   31e04:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e08:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e0c:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e10:	b	32574 <flatcc_json_parser_string_escape@@Base+0x8f8>
   31e14:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e18:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e1c:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e20:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e24:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e28:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e2c:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e30:	b	324fc <flatcc_json_parser_string_escape@@Base+0x880>
   31e34:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e38:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e3c:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e40:	b	32524 <flatcc_json_parser_string_escape@@Base+0x8a8>
   31e44:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e48:	b	324d4 <flatcc_json_parser_string_escape@@Base+0x858>
   31e4c:	b	32038 <flatcc_json_parser_string_escape@@Base+0x3bc>
   31e50:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e54:	b	32614 <flatcc_json_parser_string_escape@@Base+0x998>
   31e58:	b	31e5c <flatcc_json_parser_string_escape@@Base+0x1e0>
   31e5c:	mov	r3, #0
   31e60:	strb	r3, [fp, #-5]
   31e64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31e68:	mov	r2, #1
   31e6c:	strb	r2, [r3]
   31e70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31e74:	ldr	r3, [fp, #-20]	; 0xffffffec
   31e78:	sub	r3, r2, r3
   31e7c:	cmp	r3, #3
   31e80:	bgt	31eac <flatcc_json_parser_string_escape@@Base+0x230>
   31e84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31e88:	mov	r2, #0
   31e8c:	strb	r2, [r3]
   31e90:	mov	r3, #18
   31e94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31e98:	ldr	r1, [fp, #-20]	; 0xffffffec
   31e9c:	ldr	r0, [fp, #-16]
   31ea0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   31ea4:	mov	r3, r0
   31ea8:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   31eac:	ldr	r3, [fp, #-20]	; 0xffffffec
   31eb0:	ldrb	r3, [r3, #2]
   31eb4:	strb	r3, [fp, #-9]
   31eb8:	ldrb	r3, [fp, #-9]
   31ebc:	cmp	r3, #47	; 0x2f
   31ec0:	bls	31ef4 <flatcc_json_parser_string_escape@@Base+0x278>
   31ec4:	ldrb	r3, [fp, #-9]
   31ec8:	cmp	r3, #57	; 0x39
   31ecc:	bhi	31ef4 <flatcc_json_parser_string_escape@@Base+0x278>
   31ed0:	ldrb	r3, [fp, #-9]
   31ed4:	sub	r3, r3, #48	; 0x30
   31ed8:	lsl	r3, r3, #4
   31edc:	sxtb	r2, r3
   31ee0:	ldrsb	r3, [fp, #-5]
   31ee4:	orr	r3, r2, r3
   31ee8:	sxtb	r3, r3
   31eec:	strb	r3, [fp, #-5]
   31ef0:	b	31f64 <flatcc_json_parser_string_escape@@Base+0x2e8>
   31ef4:	ldrb	r3, [fp, #-9]
   31ef8:	orr	r3, r3, #32
   31efc:	strb	r3, [fp, #-9]
   31f00:	ldrb	r3, [fp, #-9]
   31f04:	cmp	r3, #96	; 0x60
   31f08:	bls	31f3c <flatcc_json_parser_string_escape@@Base+0x2c0>
   31f0c:	ldrb	r3, [fp, #-9]
   31f10:	cmp	r3, #102	; 0x66
   31f14:	bhi	31f3c <flatcc_json_parser_string_escape@@Base+0x2c0>
   31f18:	ldrb	r3, [fp, #-9]
   31f1c:	sub	r3, r3, #87	; 0x57
   31f20:	lsl	r3, r3, #4
   31f24:	sxtb	r2, r3
   31f28:	ldrsb	r3, [fp, #-5]
   31f2c:	orr	r3, r2, r3
   31f30:	sxtb	r3, r3
   31f34:	strb	r3, [fp, #-5]
   31f38:	b	31f64 <flatcc_json_parser_string_escape@@Base+0x2e8>
   31f3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31f40:	mov	r2, #0
   31f44:	strb	r2, [r3]
   31f48:	mov	r3, #18
   31f4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31f50:	ldr	r1, [fp, #-20]	; 0xffffffec
   31f54:	ldr	r0, [fp, #-16]
   31f58:	bl	3198c <flatcc_json_parser_set_error@@Base>
   31f5c:	mov	r3, r0
   31f60:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   31f64:	ldr	r3, [fp, #-20]	; 0xffffffec
   31f68:	ldrb	r3, [r3, #3]
   31f6c:	strb	r3, [fp, #-9]
   31f70:	ldrb	r3, [fp, #-9]
   31f74:	cmp	r3, #47	; 0x2f
   31f78:	bls	31fac <flatcc_json_parser_string_escape@@Base+0x330>
   31f7c:	ldrb	r3, [fp, #-9]
   31f80:	cmp	r3, #57	; 0x39
   31f84:	bhi	31fac <flatcc_json_parser_string_escape@@Base+0x330>
   31f88:	ldrb	r3, [fp, #-9]
   31f8c:	sub	r3, r3, #48	; 0x30
   31f90:	uxtb	r3, r3
   31f94:	sxtb	r2, r3
   31f98:	ldrsb	r3, [fp, #-5]
   31f9c:	orr	r3, r2, r3
   31fa0:	sxtb	r3, r3
   31fa4:	strb	r3, [fp, #-5]
   31fa8:	b	3201c <flatcc_json_parser_string_escape@@Base+0x3a0>
   31fac:	ldrb	r3, [fp, #-9]
   31fb0:	orr	r3, r3, #32
   31fb4:	strb	r3, [fp, #-9]
   31fb8:	ldrb	r3, [fp, #-9]
   31fbc:	cmp	r3, #96	; 0x60
   31fc0:	bls	31ff4 <flatcc_json_parser_string_escape@@Base+0x378>
   31fc4:	ldrb	r3, [fp, #-9]
   31fc8:	cmp	r3, #102	; 0x66
   31fcc:	bhi	31ff4 <flatcc_json_parser_string_escape@@Base+0x378>
   31fd0:	ldrb	r3, [fp, #-9]
   31fd4:	sub	r3, r3, #87	; 0x57
   31fd8:	uxtb	r3, r3
   31fdc:	sxtb	r2, r3
   31fe0:	ldrsb	r3, [fp, #-5]
   31fe4:	orr	r3, r2, r3
   31fe8:	sxtb	r3, r3
   31fec:	strb	r3, [fp, #-5]
   31ff0:	b	3201c <flatcc_json_parser_string_escape@@Base+0x3a0>
   31ff4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31ff8:	mov	r2, #0
   31ffc:	strb	r2, [r3]
   32000:	mov	r3, #18
   32004:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32008:	ldr	r1, [fp, #-20]	; 0xffffffec
   3200c:	ldr	r0, [fp, #-16]
   32010:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32014:	mov	r3, r0
   32018:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3201c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32020:	add	r3, r3, #1
   32024:	ldrb	r2, [fp, #-5]
   32028:	strb	r2, [r3]
   3202c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32030:	add	r3, r3, #4
   32034:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   32038:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3203c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32040:	sub	r3, r2, r3
   32044:	cmp	r3, #5
   32048:	bgt	32074 <flatcc_json_parser_string_escape@@Base+0x3f8>
   3204c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32050:	mov	r2, #0
   32054:	strb	r2, [r3]
   32058:	mov	r3, #18
   3205c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32060:	ldr	r1, [fp, #-20]	; 0xffffffec
   32064:	ldr	r0, [fp, #-16]
   32068:	bl	3198c <flatcc_json_parser_set_error@@Base>
   3206c:	mov	r3, r0
   32070:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   32074:	mov	r3, #0
   32078:	strh	r3, [fp, #-8]
   3207c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32080:	ldrb	r3, [r3, #2]
   32084:	strb	r3, [fp, #-9]
   32088:	ldrb	r3, [fp, #-9]
   3208c:	cmp	r3, #47	; 0x2f
   32090:	bls	320c0 <flatcc_json_parser_string_escape@@Base+0x444>
   32094:	ldrb	r3, [fp, #-9]
   32098:	cmp	r3, #57	; 0x39
   3209c:	bhi	320c0 <flatcc_json_parser_string_escape@@Base+0x444>
   320a0:	ldrb	r3, [fp, #-9]
   320a4:	uxth	r3, r3
   320a8:	sub	r3, r3, #48	; 0x30
   320ac:	strh	r3, [fp, #-12]
   320b0:	ldrh	r3, [fp, #-12]
   320b4:	lsl	r3, r3, #12
   320b8:	strh	r3, [fp, #-8]
   320bc:	b	3213c <flatcc_json_parser_string_escape@@Base+0x4c0>
   320c0:	ldrb	r3, [fp, #-9]
   320c4:	orr	r3, r3, #32
   320c8:	strb	r3, [fp, #-9]
   320cc:	ldrb	r3, [fp, #-9]
   320d0:	cmp	r3, #96	; 0x60
   320d4:	bls	32114 <flatcc_json_parser_string_escape@@Base+0x498>
   320d8:	ldrb	r3, [fp, #-9]
   320dc:	cmp	r3, #102	; 0x66
   320e0:	bhi	32114 <flatcc_json_parser_string_escape@@Base+0x498>
   320e4:	ldrb	r3, [fp, #-9]
   320e8:	uxth	r3, r3
   320ec:	sub	r3, r3, #87	; 0x57
   320f0:	strh	r3, [fp, #-12]
   320f4:	ldrh	r3, [fp, #-12]
   320f8:	lsl	r3, r3, #12
   320fc:	sxth	r2, r3
   32100:	ldrsh	r3, [fp, #-8]
   32104:	orr	r3, r2, r3
   32108:	sxth	r3, r3
   3210c:	strh	r3, [fp, #-8]
   32110:	b	3213c <flatcc_json_parser_string_escape@@Base+0x4c0>
   32114:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32118:	mov	r2, #0
   3211c:	strb	r2, [r3]
   32120:	mov	r3, #18
   32124:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32128:	ldr	r1, [fp, #-20]	; 0xffffffec
   3212c:	ldr	r0, [fp, #-16]
   32130:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32134:	mov	r3, r0
   32138:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3213c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32140:	ldrb	r3, [r3, #3]
   32144:	strb	r3, [fp, #-9]
   32148:	ldrb	r3, [fp, #-9]
   3214c:	cmp	r3, #47	; 0x2f
   32150:	bls	32190 <flatcc_json_parser_string_escape@@Base+0x514>
   32154:	ldrb	r3, [fp, #-9]
   32158:	cmp	r3, #57	; 0x39
   3215c:	bhi	32190 <flatcc_json_parser_string_escape@@Base+0x514>
   32160:	ldrb	r3, [fp, #-9]
   32164:	uxth	r3, r3
   32168:	sub	r3, r3, #48	; 0x30
   3216c:	strh	r3, [fp, #-12]
   32170:	ldrh	r3, [fp, #-12]
   32174:	lsl	r3, r3, #8
   32178:	sxth	r2, r3
   3217c:	ldrsh	r3, [fp, #-8]
   32180:	orr	r3, r2, r3
   32184:	sxth	r3, r3
   32188:	strh	r3, [fp, #-8]
   3218c:	b	3220c <flatcc_json_parser_string_escape@@Base+0x590>
   32190:	ldrb	r3, [fp, #-9]
   32194:	orr	r3, r3, #32
   32198:	strb	r3, [fp, #-9]
   3219c:	ldrb	r3, [fp, #-9]
   321a0:	cmp	r3, #96	; 0x60
   321a4:	bls	321e4 <flatcc_json_parser_string_escape@@Base+0x568>
   321a8:	ldrb	r3, [fp, #-9]
   321ac:	cmp	r3, #102	; 0x66
   321b0:	bhi	321e4 <flatcc_json_parser_string_escape@@Base+0x568>
   321b4:	ldrb	r3, [fp, #-9]
   321b8:	uxth	r3, r3
   321bc:	sub	r3, r3, #87	; 0x57
   321c0:	strh	r3, [fp, #-12]
   321c4:	ldrh	r3, [fp, #-12]
   321c8:	lsl	r3, r3, #8
   321cc:	sxth	r2, r3
   321d0:	ldrsh	r3, [fp, #-8]
   321d4:	orr	r3, r2, r3
   321d8:	sxth	r3, r3
   321dc:	strh	r3, [fp, #-8]
   321e0:	b	3220c <flatcc_json_parser_string_escape@@Base+0x590>
   321e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   321e8:	mov	r2, #0
   321ec:	strb	r2, [r3]
   321f0:	mov	r3, #18
   321f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   321f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   321fc:	ldr	r0, [fp, #-16]
   32200:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32204:	mov	r3, r0
   32208:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3220c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32210:	ldrb	r3, [r3, #4]
   32214:	strb	r3, [fp, #-9]
   32218:	ldrb	r3, [fp, #-9]
   3221c:	cmp	r3, #47	; 0x2f
   32220:	bls	32260 <flatcc_json_parser_string_escape@@Base+0x5e4>
   32224:	ldrb	r3, [fp, #-9]
   32228:	cmp	r3, #57	; 0x39
   3222c:	bhi	32260 <flatcc_json_parser_string_escape@@Base+0x5e4>
   32230:	ldrb	r3, [fp, #-9]
   32234:	uxth	r3, r3
   32238:	sub	r3, r3, #48	; 0x30
   3223c:	strh	r3, [fp, #-12]
   32240:	ldrh	r3, [fp, #-12]
   32244:	lsl	r3, r3, #4
   32248:	sxth	r2, r3
   3224c:	ldrsh	r3, [fp, #-8]
   32250:	orr	r3, r2, r3
   32254:	sxth	r3, r3
   32258:	strh	r3, [fp, #-8]
   3225c:	b	322dc <flatcc_json_parser_string_escape@@Base+0x660>
   32260:	ldrb	r3, [fp, #-9]
   32264:	orr	r3, r3, #32
   32268:	strb	r3, [fp, #-9]
   3226c:	ldrb	r3, [fp, #-9]
   32270:	cmp	r3, #96	; 0x60
   32274:	bls	322b4 <flatcc_json_parser_string_escape@@Base+0x638>
   32278:	ldrb	r3, [fp, #-9]
   3227c:	cmp	r3, #102	; 0x66
   32280:	bhi	322b4 <flatcc_json_parser_string_escape@@Base+0x638>
   32284:	ldrb	r3, [fp, #-9]
   32288:	uxth	r3, r3
   3228c:	sub	r3, r3, #87	; 0x57
   32290:	strh	r3, [fp, #-12]
   32294:	ldrh	r3, [fp, #-12]
   32298:	lsl	r3, r3, #4
   3229c:	sxth	r2, r3
   322a0:	ldrsh	r3, [fp, #-8]
   322a4:	orr	r3, r2, r3
   322a8:	sxth	r3, r3
   322ac:	strh	r3, [fp, #-8]
   322b0:	b	322dc <flatcc_json_parser_string_escape@@Base+0x660>
   322b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   322b8:	mov	r2, #0
   322bc:	strb	r2, [r3]
   322c0:	mov	r3, #18
   322c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   322c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   322cc:	ldr	r0, [fp, #-16]
   322d0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   322d4:	mov	r3, r0
   322d8:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   322dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   322e0:	ldrb	r3, [r3, #5]
   322e4:	strb	r3, [fp, #-9]
   322e8:	ldrb	r3, [fp, #-9]
   322ec:	cmp	r3, #47	; 0x2f
   322f0:	bls	32324 <flatcc_json_parser_string_escape@@Base+0x6a8>
   322f4:	ldrb	r3, [fp, #-9]
   322f8:	cmp	r3, #57	; 0x39
   322fc:	bhi	32324 <flatcc_json_parser_string_escape@@Base+0x6a8>
   32300:	ldrb	r3, [fp, #-9]
   32304:	uxth	r3, r3
   32308:	sub	r3, r3, #48	; 0x30
   3230c:	strh	r3, [fp, #-12]
   32310:	ldrh	r2, [fp, #-8]
   32314:	ldrh	r3, [fp, #-12]
   32318:	orr	r3, r2, r3
   3231c:	strh	r3, [fp, #-8]
   32320:	b	32394 <flatcc_json_parser_string_escape@@Base+0x718>
   32324:	ldrb	r3, [fp, #-9]
   32328:	orr	r3, r3, #32
   3232c:	strb	r3, [fp, #-9]
   32330:	ldrb	r3, [fp, #-9]
   32334:	cmp	r3, #96	; 0x60
   32338:	bls	3236c <flatcc_json_parser_string_escape@@Base+0x6f0>
   3233c:	ldrb	r3, [fp, #-9]
   32340:	cmp	r3, #102	; 0x66
   32344:	bhi	3236c <flatcc_json_parser_string_escape@@Base+0x6f0>
   32348:	ldrb	r3, [fp, #-9]
   3234c:	uxth	r3, r3
   32350:	sub	r3, r3, #87	; 0x57
   32354:	strh	r3, [fp, #-12]
   32358:	ldrh	r2, [fp, #-8]
   3235c:	ldrh	r3, [fp, #-12]
   32360:	orr	r3, r2, r3
   32364:	strh	r3, [fp, #-8]
   32368:	b	32394 <flatcc_json_parser_string_escape@@Base+0x718>
   3236c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32370:	mov	r2, #0
   32374:	strb	r2, [r3]
   32378:	mov	r3, #18
   3237c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32380:	ldr	r1, [fp, #-20]	; 0xffffffec
   32384:	ldr	r0, [fp, #-16]
   32388:	bl	3198c <flatcc_json_parser_set_error@@Base>
   3238c:	mov	r3, r0
   32390:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   32394:	ldrh	r3, [fp, #-8]
   32398:	cmp	r3, #127	; 0x7f
   3239c:	bhi	323c4 <flatcc_json_parser_string_escape@@Base+0x748>
   323a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   323a4:	mov	r2, #1
   323a8:	strb	r2, [r3]
   323ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   323b0:	add	r3, r3, #1
   323b4:	ldrh	r2, [fp, #-8]
   323b8:	uxtb	r2, r2
   323bc:	strb	r2, [r3]
   323c0:	b	324c8 <flatcc_json_parser_string_escape@@Base+0x84c>
   323c4:	ldrh	r3, [fp, #-8]
   323c8:	cmp	r3, #2048	; 0x800
   323cc:	bcs	32434 <flatcc_json_parser_string_escape@@Base+0x7b8>
   323d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   323d4:	mov	r2, #2
   323d8:	strb	r2, [r3]
   323dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   323e0:	add	r2, r3, #1
   323e4:	ldrh	r3, [fp, #-8]
   323e8:	lsr	r3, r3, #6
   323ec:	uxth	r3, r3
   323f0:	uxtb	r3, r3
   323f4:	mvn	r3, r3, lsl #26
   323f8:	mvn	r3, r3, lsr #26
   323fc:	uxtb	r3, r3
   32400:	strb	r3, [r2]
   32404:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32408:	add	r2, r3, #2
   3240c:	ldrh	r3, [fp, #-8]
   32410:	sxtb	r3, r3
   32414:	and	r3, r3, #63	; 0x3f
   32418:	sxtb	r3, r3
   3241c:	mvn	r3, r3, lsl #25
   32420:	mvn	r3, r3, lsr #25
   32424:	sxtb	r3, r3
   32428:	uxtb	r3, r3
   3242c:	strb	r3, [r2]
   32430:	b	324c8 <flatcc_json_parser_string_escape@@Base+0x84c>
   32434:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32438:	mov	r2, #3
   3243c:	strb	r2, [r3]
   32440:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32444:	add	r2, r3, #1
   32448:	ldrh	r3, [fp, #-8]
   3244c:	lsr	r3, r3, #12
   32450:	uxth	r3, r3
   32454:	uxtb	r3, r3
   32458:	mvn	r3, r3, lsl #27
   3245c:	mvn	r3, r3, lsr #27
   32460:	uxtb	r3, r3
   32464:	strb	r3, [r2]
   32468:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3246c:	add	r2, r3, #2
   32470:	ldrh	r3, [fp, #-8]
   32474:	lsr	r3, r3, #6
   32478:	uxth	r3, r3
   3247c:	sxtb	r3, r3
   32480:	and	r3, r3, #63	; 0x3f
   32484:	sxtb	r3, r3
   32488:	mvn	r3, r3, lsl #25
   3248c:	mvn	r3, r3, lsr #25
   32490:	sxtb	r3, r3
   32494:	uxtb	r3, r3
   32498:	strb	r3, [r2]
   3249c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   324a0:	add	r2, r3, #3
   324a4:	ldrh	r3, [fp, #-8]
   324a8:	sxtb	r3, r3
   324ac:	and	r3, r3, #63	; 0x3f
   324b0:	sxtb	r3, r3
   324b4:	mvn	r3, r3, lsl #25
   324b8:	mvn	r3, r3, lsr #25
   324bc:	sxtb	r3, r3
   324c0:	uxtb	r3, r3
   324c4:	strb	r3, [r2]
   324c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   324cc:	add	r3, r3, #6
   324d0:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   324d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   324d8:	mov	r2, #1
   324dc:	strb	r2, [r3]
   324e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   324e4:	add	r3, r3, #1
   324e8:	mov	r2, #9
   324ec:	strb	r2, [r3]
   324f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   324f4:	add	r3, r3, #2
   324f8:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   324fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32500:	mov	r2, #1
   32504:	strb	r2, [r3]
   32508:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3250c:	add	r3, r3, #1
   32510:	mov	r2, #10
   32514:	strb	r2, [r3]
   32518:	ldr	r3, [fp, #-20]	; 0xffffffec
   3251c:	add	r3, r3, #2
   32520:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   32524:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32528:	mov	r2, #1
   3252c:	strb	r2, [r3]
   32530:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32534:	add	r3, r3, #1
   32538:	mov	r2, #13
   3253c:	strb	r2, [r3]
   32540:	ldr	r3, [fp, #-20]	; 0xffffffec
   32544:	add	r3, r3, #2
   32548:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3254c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32550:	mov	r2, #1
   32554:	strb	r2, [r3]
   32558:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3255c:	add	r3, r3, #1
   32560:	mov	r2, #8
   32564:	strb	r2, [r3]
   32568:	ldr	r3, [fp, #-20]	; 0xffffffec
   3256c:	add	r3, r3, #2
   32570:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   32574:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32578:	mov	r2, #1
   3257c:	strb	r2, [r3]
   32580:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32584:	add	r3, r3, #1
   32588:	mov	r2, #12
   3258c:	strb	r2, [r3]
   32590:	ldr	r3, [fp, #-20]	; 0xffffffec
   32594:	add	r3, r3, #2
   32598:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3259c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   325a0:	mov	r2, #1
   325a4:	strb	r2, [r3]
   325a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   325ac:	add	r3, r3, #1
   325b0:	mov	r2, #34	; 0x22
   325b4:	strb	r2, [r3]
   325b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   325bc:	add	r3, r3, #2
   325c0:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   325c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   325c8:	mov	r2, #1
   325cc:	strb	r2, [r3]
   325d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   325d4:	add	r3, r3, #1
   325d8:	mov	r2, #92	; 0x5c
   325dc:	strb	r2, [r3]
   325e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   325e4:	add	r3, r3, #2
   325e8:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   325ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   325f0:	mov	r2, #1
   325f4:	strb	r2, [r3]
   325f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   325fc:	add	r3, r3, #1
   32600:	mov	r2, #47	; 0x2f
   32604:	strb	r2, [r3]
   32608:	ldr	r3, [fp, #-20]	; 0xffffffec
   3260c:	add	r3, r3, #2
   32610:	b	32638 <flatcc_json_parser_string_escape@@Base+0x9bc>
   32614:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32618:	mov	r2, #0
   3261c:	strb	r2, [r3]
   32620:	mov	r3, #18
   32624:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32628:	ldr	r1, [fp, #-20]	; 0xffffffec
   3262c:	ldr	r0, [fp, #-16]
   32630:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32634:	mov	r3, r0
   32638:	mov	r0, r3
   3263c:	sub	sp, fp, #4
   32640:	pop	{fp, pc}

00032644 <flatcc_json_parser_skip_constant@@Base>:
   32644:	push	{fp, lr}
   32648:	add	fp, sp, #4
   3264c:	sub	sp, sp, #24
   32650:	str	r0, [fp, #-16]
   32654:	str	r1, [fp, #-20]	; 0xffffffec
   32658:	str	r2, [fp, #-24]	; 0xffffffe8
   3265c:	b	32720 <flatcc_json_parser_skip_constant@@Base+0xdc>
   32660:	ldr	r3, [fp, #-20]	; 0xffffffec
   32664:	ldrb	r3, [r3]
   32668:	strb	r3, [fp, #-5]
   3266c:	ldrsb	r3, [fp, #-5]
   32670:	cmp	r3, #0
   32674:	blt	326a8 <flatcc_json_parser_skip_constant@@Base+0x64>
   32678:	ldrb	r3, [fp, #-5]
   3267c:	cmp	r3, #95	; 0x5f
   32680:	beq	326a8 <flatcc_json_parser_skip_constant@@Base+0x64>
   32684:	ldrb	r3, [fp, #-5]
   32688:	cmp	r3, #47	; 0x2f
   3268c:	bls	3269c <flatcc_json_parser_skip_constant@@Base+0x58>
   32690:	ldrb	r3, [fp, #-5]
   32694:	cmp	r3, #57	; 0x39
   32698:	bls	326a8 <flatcc_json_parser_skip_constant@@Base+0x64>
   3269c:	ldrb	r3, [fp, #-5]
   326a0:	cmp	r3, #46	; 0x2e
   326a4:	bne	326b8 <flatcc_json_parser_skip_constant@@Base+0x74>
   326a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   326ac:	add	r3, r3, #1
   326b0:	str	r3, [fp, #-20]	; 0xffffffec
   326b4:	b	32720 <flatcc_json_parser_skip_constant@@Base+0xdc>
   326b8:	ldrb	r3, [fp, #-5]
   326bc:	orr	r3, r3, #32
   326c0:	strb	r3, [fp, #-5]
   326c4:	ldrb	r3, [fp, #-5]
   326c8:	cmp	r3, #96	; 0x60
   326cc:	bls	326ec <flatcc_json_parser_skip_constant@@Base+0xa8>
   326d0:	ldrb	r3, [fp, #-5]
   326d4:	cmp	r3, #122	; 0x7a
   326d8:	bhi	326ec <flatcc_json_parser_skip_constant@@Base+0xa8>
   326dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   326e0:	add	r3, r3, #1
   326e4:	str	r3, [fp, #-20]	; 0xffffffec
   326e8:	b	32720 <flatcc_json_parser_skip_constant@@Base+0xdc>
   326ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   326f0:	str	r3, [fp, #-12]
   326f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   326f8:	ldr	r1, [fp, #-12]
   326fc:	ldr	r0, [fp, #-16]
   32700:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   32704:	str	r0, [fp, #-20]	; 0xffffffec
   32708:	ldr	r2, [fp, #-20]	; 0xffffffec
   3270c:	ldr	r3, [fp, #-12]
   32710:	cmp	r2, r3
   32714:	bne	32720 <flatcc_json_parser_skip_constant@@Base+0xdc>
   32718:	ldr	r3, [fp, #-20]	; 0xffffffec
   3271c:	b	32734 <flatcc_json_parser_skip_constant@@Base+0xf0>
   32720:	ldr	r2, [fp, #-20]	; 0xffffffec
   32724:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32728:	cmp	r2, r3
   3272c:	bne	32660 <flatcc_json_parser_skip_constant@@Base+0x1c>
   32730:	ldr	r3, [fp, #-20]	; 0xffffffec
   32734:	mov	r0, r3
   32738:	sub	sp, fp, #4
   3273c:	pop	{fp, pc}

00032740 <flatcc_json_parser_match_constant@@Base>:
   32740:	push	{fp, lr}
   32744:	add	fp, sp, #4
   32748:	sub	sp, sp, #32
   3274c:	str	r0, [fp, #-24]	; 0xffffffe8
   32750:	str	r1, [fp, #-28]	; 0xffffffe4
   32754:	str	r2, [fp, #-32]	; 0xffffffe0
   32758:	str	r3, [fp, #-36]	; 0xffffffdc
   3275c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32760:	str	r3, [fp, #-8]
   32764:	ldr	r3, [fp, #-36]	; 0xffffffdc
   32768:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3276c:	add	r3, r2, r3
   32770:	str	r3, [fp, #-12]
   32774:	ldr	r2, [fp, #-32]	; 0xffffffe0
   32778:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3277c:	sub	r2, r2, r3
   32780:	ldr	r3, [fp, #-36]	; 0xffffffdc
   32784:	cmp	r2, r3
   32788:	bgt	327a0 <flatcc_json_parser_match_constant@@Base+0x60>
   3278c:	ldr	r3, [fp, #4]
   32790:	mov	r2, #0
   32794:	str	r2, [r3]
   32798:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3279c:	b	329d0 <flatcc_json_parser_match_constant@@Base+0x290>
   327a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   327a4:	ldr	r3, [r3, #12]
   327a8:	cmp	r3, #0
   327ac:	beq	328b4 <flatcc_json_parser_match_constant@@Base+0x174>
   327b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   327b4:	ldr	r1, [fp, #-12]
   327b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   327bc:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   327c0:	str	r0, [fp, #-28]	; 0xffffffe4
   327c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   327c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   327cc:	cmp	r2, r3
   327d0:	bne	327e8 <flatcc_json_parser_match_constant@@Base+0xa8>
   327d4:	ldr	r3, [fp, #4]
   327d8:	mov	r2, #0
   327dc:	str	r2, [r3]
   327e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   327e4:	b	329d0 <flatcc_json_parser_match_constant@@Base+0x290>
   327e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   327ec:	ldr	r3, [fp, #-12]
   327f0:	cmp	r2, r3
   327f4:	beq	32868 <flatcc_json_parser_match_constant@@Base+0x128>
   327f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   327fc:	ldrb	r3, [r3]
   32800:	strb	r3, [fp, #-13]
   32804:	ldrb	r3, [fp, #-13]
   32808:	cmp	r3, #95	; 0x5f
   3280c:	beq	3281c <flatcc_json_parser_match_constant@@Base+0xdc>
   32810:	ldrsb	r3, [fp, #-13]
   32814:	cmp	r3, #0
   32818:	bge	32830 <flatcc_json_parser_match_constant@@Base+0xf0>
   3281c:	ldr	r3, [fp, #4]
   32820:	mov	r2, #1
   32824:	str	r2, [r3]
   32828:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3282c:	b	329d0 <flatcc_json_parser_match_constant@@Base+0x290>
   32830:	ldrb	r3, [fp, #-13]
   32834:	orr	r3, r3, #32
   32838:	strb	r3, [fp, #-13]
   3283c:	ldrb	r3, [fp, #-13]
   32840:	cmp	r3, #96	; 0x60
   32844:	bls	32868 <flatcc_json_parser_match_constant@@Base+0x128>
   32848:	ldrb	r3, [fp, #-13]
   3284c:	cmp	r3, #122	; 0x7a
   32850:	bhi	32868 <flatcc_json_parser_match_constant@@Base+0x128>
   32854:	ldr	r3, [fp, #4]
   32858:	mov	r2, #1
   3285c:	str	r2, [r3]
   32860:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32864:	b	329d0 <flatcc_json_parser_match_constant@@Base+0x290>
   32868:	ldr	r3, [fp, #4]
   3286c:	mov	r2, #0
   32870:	str	r2, [r3]
   32874:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32878:	ldrb	r3, [r3]
   3287c:	cmp	r3, #44	; 0x2c
   32880:	beq	328a4 <flatcc_json_parser_match_constant@@Base+0x164>
   32884:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32888:	ldrb	r3, [r3]
   3288c:	cmp	r3, #125	; 0x7d
   32890:	beq	328a4 <flatcc_json_parser_match_constant@@Base+0x164>
   32894:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32898:	ldrb	r3, [r3]
   3289c:	cmp	r3, #93	; 0x5d
   328a0:	bne	328ac <flatcc_json_parser_match_constant@@Base+0x16c>
   328a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   328a8:	b	329d0 <flatcc_json_parser_match_constant@@Base+0x290>
   328ac:	ldr	r3, [fp, #-8]
   328b0:	b	329d0 <flatcc_json_parser_match_constant@@Base+0x290>
   328b4:	ldr	r3, [fp, #-12]
   328b8:	str	r3, [fp, #-28]	; 0xffffffe4
   328bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   328c0:	ldrb	r3, [r3]
   328c4:	cmp	r3, #32
   328c8:	bne	32950 <flatcc_json_parser_match_constant@@Base+0x210>
   328cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   328d0:	add	r3, r3, #1
   328d4:	str	r3, [fp, #-28]	; 0xffffffe4
   328d8:	b	328e8 <flatcc_json_parser_match_constant@@Base+0x1a8>
   328dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   328e0:	add	r3, r3, #1
   328e4:	str	r3, [fp, #-28]	; 0xffffffe4
   328e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   328ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   328f0:	cmp	r2, r3
   328f4:	beq	32908 <flatcc_json_parser_match_constant@@Base+0x1c8>
   328f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   328fc:	ldrb	r3, [r3]
   32900:	cmp	r3, #32
   32904:	beq	328dc <flatcc_json_parser_match_constant@@Base+0x19c>
   32908:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3290c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32910:	cmp	r2, r3
   32914:	bne	3292c <flatcc_json_parser_match_constant@@Base+0x1ec>
   32918:	ldr	r3, [fp, #4]
   3291c:	mov	r2, #0
   32920:	str	r2, [r3]
   32924:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32928:	b	329d0 <flatcc_json_parser_match_constant@@Base+0x290>
   3292c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32930:	ldrb	r3, [r3]
   32934:	cmp	r3, #34	; 0x22
   32938:	beq	32950 <flatcc_json_parser_match_constant@@Base+0x210>
   3293c:	ldr	r3, [fp, #4]
   32940:	mov	r2, #1
   32944:	str	r2, [r3]
   32948:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3294c:	b	329d0 <flatcc_json_parser_match_constant@@Base+0x290>
   32950:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32954:	ldrb	r3, [r3]
   32958:	cmp	r3, #34	; 0x22
   3295c:	beq	32990 <flatcc_json_parser_match_constant@@Base+0x250>
   32960:	cmp	r3, #92	; 0x5c
   32964:	bne	329c0 <flatcc_json_parser_match_constant@@Base+0x280>
   32968:	ldr	r3, [fp, #4]
   3296c:	mov	r2, #0
   32970:	str	r2, [r3]
   32974:	mov	r3, #18
   32978:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3297c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   32980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32984:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32988:	mov	r3, r0
   3298c:	b	329d0 <flatcc_json_parser_match_constant@@Base+0x290>
   32990:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32994:	add	r3, r3, #1
   32998:	mov	r2, #0
   3299c:	mov	r1, r3
   329a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   329a4:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   329a8:	str	r0, [fp, #-28]	; 0xffffffe4
   329ac:	ldr	r3, [fp, #4]
   329b0:	mov	r2, #0
   329b4:	str	r2, [r3]
   329b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   329bc:	b	329d0 <flatcc_json_parser_match_constant@@Base+0x290>
   329c0:	ldr	r3, [fp, #4]
   329c4:	mov	r2, #0
   329c8:	str	r2, [r3]
   329cc:	ldr	r3, [fp, #-8]
   329d0:	mov	r0, r3
   329d4:	sub	sp, fp, #4
   329d8:	pop	{fp, pc}

000329dc <flatcc_json_parser_unmatched_symbol@@Base>:
   329dc:	push	{fp, lr}
   329e0:	add	fp, sp, #4
   329e4:	sub	sp, sp, #16
   329e8:	str	r0, [fp, #-8]
   329ec:	str	r1, [fp, #-12]
   329f0:	str	r2, [fp, #-16]
   329f4:	ldr	r3, [fp, #-8]
   329f8:	ldr	r3, [r3, #8]
   329fc:	and	r3, r3, #1
   32a00:	cmp	r3, #0
   32a04:	beq	32aa4 <flatcc_json_parser_unmatched_symbol@@Base+0xc8>
   32a08:	ldr	r2, [fp, #-16]
   32a0c:	ldr	r1, [fp, #-12]
   32a10:	ldr	r0, [fp, #-8]
   32a14:	bl	2ca64 <flatcc_emitter_copy_buffer@@Base+0x44c>
   32a18:	str	r0, [fp, #-12]
   32a1c:	ldr	r2, [fp, #-16]
   32a20:	ldr	r1, [fp, #-12]
   32a24:	ldr	r0, [fp, #-8]
   32a28:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   32a2c:	str	r0, [fp, #-12]
   32a30:	ldr	r2, [fp, #-12]
   32a34:	ldr	r3, [fp, #-16]
   32a38:	cmp	r2, r3
   32a3c:	beq	32a88 <flatcc_json_parser_unmatched_symbol@@Base+0xac>
   32a40:	ldr	r3, [fp, #-12]
   32a44:	ldrb	r3, [r3]
   32a48:	cmp	r3, #58	; 0x3a
   32a4c:	bne	32a88 <flatcc_json_parser_unmatched_symbol@@Base+0xac>
   32a50:	ldr	r3, [fp, #-12]
   32a54:	add	r3, r3, #1
   32a58:	str	r3, [fp, #-12]
   32a5c:	ldr	r2, [fp, #-16]
   32a60:	ldr	r1, [fp, #-12]
   32a64:	ldr	r0, [fp, #-8]
   32a68:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   32a6c:	str	r0, [fp, #-12]
   32a70:	ldr	r2, [fp, #-16]
   32a74:	ldr	r1, [fp, #-12]
   32a78:	ldr	r0, [fp, #-8]
   32a7c:	bl	331a0 <flatcc_json_parser_generic_json@@Base>
   32a80:	mov	r3, r0
   32a84:	b	32abc <flatcc_json_parser_unmatched_symbol@@Base+0xe0>
   32a88:	mov	r3, #4
   32a8c:	ldr	r2, [fp, #-16]
   32a90:	ldr	r1, [fp, #-12]
   32a94:	ldr	r0, [fp, #-8]
   32a98:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32a9c:	mov	r3, r0
   32aa0:	b	32abc <flatcc_json_parser_unmatched_symbol@@Base+0xe0>
   32aa4:	mov	r3, #13
   32aa8:	ldr	r2, [fp, #-16]
   32aac:	ldr	r1, [fp, #-12]
   32ab0:	ldr	r0, [fp, #-8]
   32ab4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32ab8:	mov	r3, r0
   32abc:	mov	r0, r3
   32ac0:	sub	sp, fp, #4
   32ac4:	pop	{fp, pc}
   32ac8:	push	{fp, lr}
   32acc:	add	fp, sp, #4
   32ad0:	sub	sp, sp, #16
   32ad4:	str	r0, [fp, #-8]
   32ad8:	str	r1, [fp, #-12]
   32adc:	str	r2, [fp, #-16]
   32ae0:	ldr	r2, [fp, #-12]
   32ae4:	ldr	r3, [fp, #-16]
   32ae8:	cmp	r2, r3
   32aec:	bne	32af8 <flatcc_json_parser_unmatched_symbol@@Base+0x11c>
   32af0:	ldr	r3, [fp, #-12]
   32af4:	b	32e58 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   32af8:	ldr	r3, [fp, #-12]
   32afc:	ldrb	r3, [r3]
   32b00:	cmp	r3, #45	; 0x2d
   32b04:	bne	32b40 <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   32b08:	ldr	r3, [fp, #-12]
   32b0c:	add	r3, r3, #1
   32b10:	str	r3, [fp, #-12]
   32b14:	ldr	r2, [fp, #-12]
   32b18:	ldr	r3, [fp, #-16]
   32b1c:	cmp	r2, r3
   32b20:	bne	32b40 <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   32b24:	mov	r3, #6
   32b28:	ldr	r2, [fp, #-16]
   32b2c:	ldr	r1, [fp, #-12]
   32b30:	ldr	r0, [fp, #-8]
   32b34:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32b38:	mov	r3, r0
   32b3c:	b	32e58 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   32b40:	ldr	r3, [fp, #-12]
   32b44:	ldrb	r3, [r3]
   32b48:	cmp	r3, #48	; 0x30
   32b4c:	bne	32b60 <flatcc_json_parser_unmatched_symbol@@Base+0x184>
   32b50:	ldr	r3, [fp, #-12]
   32b54:	add	r3, r3, #1
   32b58:	str	r3, [fp, #-12]
   32b5c:	b	32be8 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   32b60:	ldr	r3, [fp, #-12]
   32b64:	ldrb	r3, [r3]
   32b68:	cmp	r3, #48	; 0x30
   32b6c:	bls	32b80 <flatcc_json_parser_unmatched_symbol@@Base+0x1a4>
   32b70:	ldr	r3, [fp, #-12]
   32b74:	ldrb	r3, [r3]
   32b78:	cmp	r3, #57	; 0x39
   32b7c:	bls	32b9c <flatcc_json_parser_unmatched_symbol@@Base+0x1c0>
   32b80:	mov	r3, #6
   32b84:	ldr	r2, [fp, #-16]
   32b88:	ldr	r1, [fp, #-12]
   32b8c:	ldr	r0, [fp, #-8]
   32b90:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32b94:	mov	r3, r0
   32b98:	b	32e58 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   32b9c:	ldr	r3, [fp, #-12]
   32ba0:	add	r3, r3, #1
   32ba4:	str	r3, [fp, #-12]
   32ba8:	b	32bb8 <flatcc_json_parser_unmatched_symbol@@Base+0x1dc>
   32bac:	ldr	r3, [fp, #-12]
   32bb0:	add	r3, r3, #1
   32bb4:	str	r3, [fp, #-12]
   32bb8:	ldr	r2, [fp, #-12]
   32bbc:	ldr	r3, [fp, #-16]
   32bc0:	cmp	r2, r3
   32bc4:	beq	32be8 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   32bc8:	ldr	r3, [fp, #-12]
   32bcc:	ldrb	r3, [r3]
   32bd0:	cmp	r3, #47	; 0x2f
   32bd4:	bls	32be8 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   32bd8:	ldr	r3, [fp, #-12]
   32bdc:	ldrb	r3, [r3]
   32be0:	cmp	r3, #57	; 0x39
   32be4:	bls	32bac <flatcc_json_parser_unmatched_symbol@@Base+0x1d0>
   32be8:	ldr	r2, [fp, #-12]
   32bec:	ldr	r3, [fp, #-16]
   32bf0:	cmp	r2, r3
   32bf4:	beq	32c9c <flatcc_json_parser_unmatched_symbol@@Base+0x2c0>
   32bf8:	ldr	r3, [fp, #-12]
   32bfc:	ldrb	r3, [r3]
   32c00:	cmp	r3, #46	; 0x2e
   32c04:	bne	32c9c <flatcc_json_parser_unmatched_symbol@@Base+0x2c0>
   32c08:	ldr	r3, [fp, #-12]
   32c0c:	add	r3, r3, #1
   32c10:	str	r3, [fp, #-12]
   32c14:	ldr	r3, [fp, #-12]
   32c18:	ldrb	r3, [r3]
   32c1c:	cmp	r3, #47	; 0x2f
   32c20:	bls	32c34 <flatcc_json_parser_unmatched_symbol@@Base+0x258>
   32c24:	ldr	r3, [fp, #-12]
   32c28:	ldrb	r3, [r3]
   32c2c:	cmp	r3, #57	; 0x39
   32c30:	bls	32c50 <flatcc_json_parser_unmatched_symbol@@Base+0x274>
   32c34:	mov	r3, #6
   32c38:	ldr	r2, [fp, #-16]
   32c3c:	ldr	r1, [fp, #-12]
   32c40:	ldr	r0, [fp, #-8]
   32c44:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32c48:	mov	r3, r0
   32c4c:	b	32e58 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   32c50:	ldr	r3, [fp, #-12]
   32c54:	add	r3, r3, #1
   32c58:	str	r3, [fp, #-12]
   32c5c:	b	32c6c <flatcc_json_parser_unmatched_symbol@@Base+0x290>
   32c60:	ldr	r3, [fp, #-12]
   32c64:	add	r3, r3, #1
   32c68:	str	r3, [fp, #-12]
   32c6c:	ldr	r2, [fp, #-12]
   32c70:	ldr	r3, [fp, #-16]
   32c74:	cmp	r2, r3
   32c78:	beq	32c9c <flatcc_json_parser_unmatched_symbol@@Base+0x2c0>
   32c7c:	ldr	r3, [fp, #-12]
   32c80:	ldrb	r3, [r3]
   32c84:	cmp	r3, #47	; 0x2f
   32c88:	bls	32c9c <flatcc_json_parser_unmatched_symbol@@Base+0x2c0>
   32c8c:	ldr	r3, [fp, #-12]
   32c90:	ldrb	r3, [r3]
   32c94:	cmp	r3, #57	; 0x39
   32c98:	bls	32c60 <flatcc_json_parser_unmatched_symbol@@Base+0x284>
   32c9c:	ldr	r2, [fp, #-12]
   32ca0:	ldr	r3, [fp, #-16]
   32ca4:	cmp	r2, r3
   32ca8:	beq	32dc8 <flatcc_json_parser_unmatched_symbol@@Base+0x3ec>
   32cac:	ldr	r3, [fp, #-12]
   32cb0:	ldrb	r3, [r3]
   32cb4:	cmp	r3, #101	; 0x65
   32cb8:	beq	32ccc <flatcc_json_parser_unmatched_symbol@@Base+0x2f0>
   32cbc:	ldr	r3, [fp, #-12]
   32cc0:	ldrb	r3, [r3]
   32cc4:	cmp	r3, #69	; 0x45
   32cc8:	bne	32dc8 <flatcc_json_parser_unmatched_symbol@@Base+0x3ec>
   32ccc:	ldr	r3, [fp, #-12]
   32cd0:	add	r3, r3, #1
   32cd4:	str	r3, [fp, #-12]
   32cd8:	ldr	r2, [fp, #-12]
   32cdc:	ldr	r3, [fp, #-16]
   32ce0:	cmp	r2, r3
   32ce4:	bne	32d04 <flatcc_json_parser_unmatched_symbol@@Base+0x328>
   32ce8:	mov	r3, #6
   32cec:	ldr	r2, [fp, #-16]
   32cf0:	ldr	r1, [fp, #-12]
   32cf4:	ldr	r0, [fp, #-8]
   32cf8:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32cfc:	mov	r3, r0
   32d00:	b	32e58 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   32d04:	ldr	r3, [fp, #-12]
   32d08:	ldrb	r3, [r3]
   32d0c:	cmp	r3, #43	; 0x2b
   32d10:	beq	32d24 <flatcc_json_parser_unmatched_symbol@@Base+0x348>
   32d14:	ldr	r3, [fp, #-12]
   32d18:	ldrb	r3, [r3]
   32d1c:	cmp	r3, #45	; 0x2d
   32d20:	bne	32d30 <flatcc_json_parser_unmatched_symbol@@Base+0x354>
   32d24:	ldr	r3, [fp, #-12]
   32d28:	add	r3, r3, #1
   32d2c:	str	r3, [fp, #-12]
   32d30:	ldr	r2, [fp, #-12]
   32d34:	ldr	r3, [fp, #-16]
   32d38:	cmp	r2, r3
   32d3c:	beq	32d60 <flatcc_json_parser_unmatched_symbol@@Base+0x384>
   32d40:	ldr	r3, [fp, #-12]
   32d44:	ldrb	r3, [r3]
   32d48:	cmp	r3, #47	; 0x2f
   32d4c:	bls	32d60 <flatcc_json_parser_unmatched_symbol@@Base+0x384>
   32d50:	ldr	r3, [fp, #-12]
   32d54:	ldrb	r3, [r3]
   32d58:	cmp	r3, #57	; 0x39
   32d5c:	bls	32d7c <flatcc_json_parser_unmatched_symbol@@Base+0x3a0>
   32d60:	mov	r3, #6
   32d64:	ldr	r2, [fp, #-16]
   32d68:	ldr	r1, [fp, #-12]
   32d6c:	ldr	r0, [fp, #-8]
   32d70:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32d74:	mov	r3, r0
   32d78:	b	32e58 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   32d7c:	ldr	r3, [fp, #-12]
   32d80:	add	r3, r3, #1
   32d84:	str	r3, [fp, #-12]
   32d88:	b	32d98 <flatcc_json_parser_unmatched_symbol@@Base+0x3bc>
   32d8c:	ldr	r3, [fp, #-12]
   32d90:	add	r3, r3, #1
   32d94:	str	r3, [fp, #-12]
   32d98:	ldr	r2, [fp, #-12]
   32d9c:	ldr	r3, [fp, #-16]
   32da0:	cmp	r2, r3
   32da4:	beq	32dc8 <flatcc_json_parser_unmatched_symbol@@Base+0x3ec>
   32da8:	ldr	r3, [fp, #-12]
   32dac:	ldrb	r3, [r3]
   32db0:	cmp	r3, #47	; 0x2f
   32db4:	bls	32dc8 <flatcc_json_parser_unmatched_symbol@@Base+0x3ec>
   32db8:	ldr	r3, [fp, #-12]
   32dbc:	ldrb	r3, [r3]
   32dc0:	cmp	r3, #57	; 0x39
   32dc4:	bls	32d8c <flatcc_json_parser_unmatched_symbol@@Base+0x3b0>
   32dc8:	ldr	r2, [fp, #-12]
   32dcc:	ldr	r3, [fp, #-16]
   32dd0:	cmp	r2, r3
   32dd4:	beq	32e40 <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   32dd8:	ldr	r3, [fp, #-12]
   32ddc:	ldrb	r3, [r3]
   32de0:	cmp	r3, #32
   32de4:	beq	32e38 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   32de8:	cmp	r3, #32
   32dec:	bgt	32e0c <flatcc_json_parser_unmatched_symbol@@Base+0x430>
   32df0:	cmp	r3, #9
   32df4:	blt	32e40 <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   32df8:	cmp	r3, #11
   32dfc:	ble	32e38 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   32e00:	cmp	r3, #13
   32e04:	beq	32e38 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   32e08:	b	32e40 <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   32e0c:	cmp	r3, #58	; 0x3a
   32e10:	beq	32e38 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   32e14:	cmp	r3, #58	; 0x3a
   32e18:	bgt	32e28 <flatcc_json_parser_unmatched_symbol@@Base+0x44c>
   32e1c:	cmp	r3, #44	; 0x2c
   32e20:	beq	32e38 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   32e24:	b	32e40 <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   32e28:	cmp	r3, #93	; 0x5d
   32e2c:	beq	32e38 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   32e30:	cmp	r3, #125	; 0x7d
   32e34:	bne	32e40 <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   32e38:	ldr	r3, [fp, #-12]
   32e3c:	b	32e58 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   32e40:	mov	r3, #6
   32e44:	ldr	r2, [fp, #-16]
   32e48:	ldr	r1, [fp, #-12]
   32e4c:	ldr	r0, [fp, #-8]
   32e50:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32e54:	mov	r3, r0
   32e58:	mov	r0, r3
   32e5c:	sub	sp, fp, #4
   32e60:	pop	{fp, pc}

00032e64 <flatcc_json_parser_double@@Base>:
   32e64:	push	{fp, lr}
   32e68:	add	fp, sp, #4
   32e6c:	sub	sp, sp, #24
   32e70:	str	r0, [fp, #-16]
   32e74:	str	r1, [fp, #-20]	; 0xffffffec
   32e78:	str	r2, [fp, #-24]	; 0xffffffe8
   32e7c:	str	r3, [fp, #-28]	; 0xffffffe4
   32e80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   32e84:	mov	r2, #0
   32e88:	mov	r3, #0
   32e8c:	strd	r2, [r1]
   32e90:	ldr	r2, [fp, #-20]	; 0xffffffec
   32e94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32e98:	cmp	r2, r3
   32e9c:	bne	32ea8 <flatcc_json_parser_double@@Base+0x44>
   32ea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   32ea4:	b	32ff0 <flatcc_json_parser_double@@Base+0x18c>
   32ea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   32eac:	str	r3, [fp, #-8]
   32eb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   32eb4:	ldrb	r3, [r3]
   32eb8:	cmp	r3, #45	; 0x2d
   32ebc:	bne	32ecc <flatcc_json_parser_double@@Base+0x68>
   32ec0:	ldr	r3, [fp, #-8]
   32ec4:	add	r3, r3, #1
   32ec8:	str	r3, [fp, #-8]
   32ecc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32ed0:	ldr	r3, [fp, #-8]
   32ed4:	sub	r3, r2, r3
   32ed8:	cmp	r3, #1
   32edc:	ble	32f30 <flatcc_json_parser_double@@Base+0xcc>
   32ee0:	ldr	r3, [fp, #-8]
   32ee4:	ldrb	r3, [r3]
   32ee8:	cmp	r3, #46	; 0x2e
   32eec:	beq	32f14 <flatcc_json_parser_double@@Base+0xb0>
   32ef0:	ldr	r3, [fp, #-8]
   32ef4:	ldrb	r3, [r3]
   32ef8:	cmp	r3, #48	; 0x30
   32efc:	bne	32f30 <flatcc_json_parser_double@@Base+0xcc>
   32f00:	ldr	r3, [fp, #-8]
   32f04:	add	r3, r3, #1
   32f08:	ldrb	r3, [r3]
   32f0c:	cmp	r3, #48	; 0x30
   32f10:	bne	32f30 <flatcc_json_parser_double@@Base+0xcc>
   32f14:	mov	r3, #6
   32f18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32f1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   32f20:	ldr	r0, [fp, #-16]
   32f24:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32f28:	mov	r3, r0
   32f2c:	b	32ff0 <flatcc_json_parser_double@@Base+0x18c>
   32f30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32f34:	ldr	r3, [fp, #-20]	; 0xffffffec
   32f38:	sub	r3, r2, r3
   32f3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   32f40:	mov	r1, r3
   32f44:	ldr	r0, [fp, #-20]	; 0xffffffec
   32f48:	bl	30a0c <grisu3_diy_fp_encode_double@@Base+0x140c>
   32f4c:	str	r0, [fp, #-12]
   32f50:	ldr	r3, [fp, #-12]
   32f54:	cmp	r3, #0
   32f58:	beq	32f6c <flatcc_json_parser_double@@Base+0x108>
   32f5c:	ldr	r2, [fp, #-12]
   32f60:	ldr	r3, [fp, #-20]	; 0xffffffec
   32f64:	cmp	r2, r3
   32f68:	bne	32fec <flatcc_json_parser_double@@Base+0x188>
   32f6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32f70:	vldr	d7, [r3]
   32f74:	vabs.f64	d7, d7
   32f78:	vldr	d6, [pc, #128]	; 33000 <flatcc_json_parser_double@@Base+0x19c>
   32f7c:	vcmp.f64	d7, d6
   32f80:	vmrs	APSR_nzcv, fpscr
   32f84:	movle	r3, #1
   32f88:	movgt	r3, #0
   32f8c:	uxtb	r3, r3
   32f90:	eor	r3, r3, #1
   32f94:	uxtb	r3, r3
   32f98:	cmp	r3, #0
   32f9c:	beq	32fa8 <flatcc_json_parser_double@@Base+0x144>
   32fa0:	mov	r3, #1
   32fa4:	b	32fac <flatcc_json_parser_double@@Base+0x148>
   32fa8:	mov	r3, #0
   32fac:	cmp	r3, #0
   32fb0:	beq	32fd0 <flatcc_json_parser_double@@Base+0x16c>
   32fb4:	mov	r3, #7
   32fb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32fbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   32fc0:	ldr	r0, [fp, #-16]
   32fc4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32fc8:	mov	r3, r0
   32fcc:	b	32ff0 <flatcc_json_parser_double@@Base+0x18c>
   32fd0:	mov	r3, #6
   32fd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32fd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   32fdc:	ldr	r0, [fp, #-16]
   32fe0:	bl	3198c <flatcc_json_parser_set_error@@Base>
   32fe4:	mov	r3, r0
   32fe8:	b	32ff0 <flatcc_json_parser_double@@Base+0x18c>
   32fec:	ldr	r3, [fp, #-12]
   32ff0:	mov	r0, r3
   32ff4:	sub	sp, fp, #4
   32ff8:	pop	{fp, pc}
   32ffc:	nop			; (mov r0, r0)
   33000:			; <UNDEFINED> instruction: 0xffffffff
   33004:	svcvc	0x00efffff

00033008 <flatcc_json_parser_float@@Base>:
   33008:	push	{fp, lr}
   3300c:	add	fp, sp, #4
   33010:	sub	sp, sp, #24
   33014:	str	r0, [fp, #-16]
   33018:	str	r1, [fp, #-20]	; 0xffffffec
   3301c:	str	r2, [fp, #-24]	; 0xffffffe8
   33020:	str	r3, [fp, #-28]	; 0xffffffe4
   33024:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33028:	mov	r2, #0
   3302c:	str	r2, [r3]
   33030:	ldr	r2, [fp, #-20]	; 0xffffffec
   33034:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33038:	cmp	r2, r3
   3303c:	bne	33048 <flatcc_json_parser_float@@Base+0x40>
   33040:	ldr	r3, [fp, #-20]	; 0xffffffec
   33044:	b	33190 <flatcc_json_parser_float@@Base+0x188>
   33048:	ldr	r3, [fp, #-20]	; 0xffffffec
   3304c:	str	r3, [fp, #-8]
   33050:	ldr	r3, [fp, #-20]	; 0xffffffec
   33054:	ldrb	r3, [r3]
   33058:	cmp	r3, #45	; 0x2d
   3305c:	bne	3306c <flatcc_json_parser_float@@Base+0x64>
   33060:	ldr	r3, [fp, #-8]
   33064:	add	r3, r3, #1
   33068:	str	r3, [fp, #-8]
   3306c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33070:	ldr	r3, [fp, #-8]
   33074:	sub	r3, r2, r3
   33078:	cmp	r3, #1
   3307c:	ble	330d0 <flatcc_json_parser_float@@Base+0xc8>
   33080:	ldr	r3, [fp, #-8]
   33084:	ldrb	r3, [r3]
   33088:	cmp	r3, #46	; 0x2e
   3308c:	beq	330b4 <flatcc_json_parser_float@@Base+0xac>
   33090:	ldr	r3, [fp, #-8]
   33094:	ldrb	r3, [r3]
   33098:	cmp	r3, #48	; 0x30
   3309c:	bne	330d0 <flatcc_json_parser_float@@Base+0xc8>
   330a0:	ldr	r3, [fp, #-8]
   330a4:	add	r3, r3, #1
   330a8:	ldrb	r3, [r3]
   330ac:	cmp	r3, #48	; 0x30
   330b0:	bne	330d0 <flatcc_json_parser_float@@Base+0xc8>
   330b4:	mov	r3, #6
   330b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   330bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   330c0:	ldr	r0, [fp, #-16]
   330c4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   330c8:	mov	r3, r0
   330cc:	b	33190 <flatcc_json_parser_float@@Base+0x188>
   330d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   330d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   330d8:	sub	r3, r2, r3
   330dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   330e0:	mov	r1, r3
   330e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   330e8:	bl	30a44 <grisu3_diy_fp_encode_double@@Base+0x1444>
   330ec:	str	r0, [fp, #-12]
   330f0:	ldr	r3, [fp, #-12]
   330f4:	cmp	r3, #0
   330f8:	beq	3310c <flatcc_json_parser_float@@Base+0x104>
   330fc:	ldr	r2, [fp, #-12]
   33100:	ldr	r3, [fp, #-20]	; 0xffffffec
   33104:	cmp	r2, r3
   33108:	bne	3318c <flatcc_json_parser_float@@Base+0x184>
   3310c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33110:	vldr	s15, [r3]
   33114:	vabs.f32	s15, s15
   33118:	vldr	s14, [pc, #124]	; 3319c <flatcc_json_parser_float@@Base+0x194>
   3311c:	vcmp.f32	s15, s14
   33120:	vmrs	APSR_nzcv, fpscr
   33124:	movle	r3, #1
   33128:	movgt	r3, #0
   3312c:	uxtb	r3, r3
   33130:	eor	r3, r3, #1
   33134:	uxtb	r3, r3
   33138:	cmp	r3, #0
   3313c:	beq	33148 <flatcc_json_parser_float@@Base+0x140>
   33140:	mov	r3, #1
   33144:	b	3314c <flatcc_json_parser_float@@Base+0x144>
   33148:	mov	r3, #0
   3314c:	cmp	r3, #0
   33150:	beq	33170 <flatcc_json_parser_float@@Base+0x168>
   33154:	mov	r3, #7
   33158:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3315c:	ldr	r1, [fp, #-20]	; 0xffffffec
   33160:	ldr	r0, [fp, #-16]
   33164:	bl	3198c <flatcc_json_parser_set_error@@Base>
   33168:	mov	r3, r0
   3316c:	b	33190 <flatcc_json_parser_float@@Base+0x188>
   33170:	mov	r3, #6
   33174:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33178:	ldr	r1, [fp, #-20]	; 0xffffffec
   3317c:	ldr	r0, [fp, #-16]
   33180:	bl	3198c <flatcc_json_parser_set_error@@Base>
   33184:	mov	r3, r0
   33188:	b	33190 <flatcc_json_parser_float@@Base+0x188>
   3318c:	ldr	r3, [fp, #-12]
   33190:	mov	r0, r3
   33194:	sub	sp, fp, #4
   33198:	pop	{fp, pc}
   3319c:	svcvc	0x007fffff

000331a0 <flatcc_json_parser_generic_json@@Base>:
   331a0:	push	{fp, lr}
   331a4:	add	fp, sp, #4
   331a8:	sub	sp, sp, #552	; 0x228
   331ac:	str	r0, [fp, #-544]	; 0xfffffde0
   331b0:	str	r1, [fp, #-548]	; 0xfffffddc
   331b4:	str	r2, [fp, #-552]	; 0xfffffdd8
   331b8:	mov	r3, #0
   331bc:	str	r3, [fp, #-536]	; 0xfffffde8
   331c0:	sub	r3, fp, #528	; 0x210
   331c4:	str	r3, [fp, #-8]
   331c8:	ldr	r3, [fp, #-8]
   331cc:	add	r3, r3, #512	; 0x200
   331d0:	str	r3, [fp, #-12]
   331d4:	ldr	r2, [fp, #-548]	; 0xfffffddc
   331d8:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   331dc:	cmp	r2, r3
   331e0:	bne	331ec <flatcc_json_parser_generic_json@@Base+0x4c>
   331e4:	ldr	r3, [fp, #-548]	; 0xfffffddc
   331e8:	b	33604 <flatcc_json_parser_generic_json@@Base+0x464>
   331ec:	sub	r3, fp, #528	; 0x210
   331f0:	ldr	r2, [fp, #-8]
   331f4:	cmp	r2, r3
   331f8:	beq	332c0 <flatcc_json_parser_generic_json@@Base+0x120>
   331fc:	ldr	r3, [fp, #-8]
   33200:	sub	r3, r3, #1
   33204:	ldrb	r3, [r3]
   33208:	cmp	r3, #125	; 0x7d
   3320c:	bne	332c0 <flatcc_json_parser_generic_json@@Base+0x120>
   33210:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   33214:	ldr	r1, [fp, #-548]	; 0xfffffddc
   33218:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3321c:	bl	2c9c0 <flatcc_emitter_copy_buffer@@Base+0x3a8>
   33220:	str	r0, [fp, #-548]	; 0xfffffddc
   33224:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   33228:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3322c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   33230:	bl	2ca64 <flatcc_emitter_copy_buffer@@Base+0x44c>
   33234:	str	r0, [fp, #-548]	; 0xfffffddc
   33238:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3323c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   33240:	ldr	r0, [fp, #-544]	; 0xfffffde0
   33244:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   33248:	str	r0, [fp, #-548]	; 0xfffffddc
   3324c:	ldr	r2, [fp, #-548]	; 0xfffffddc
   33250:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   33254:	cmp	r2, r3
   33258:	bne	33278 <flatcc_json_parser_generic_json@@Base+0xd8>
   3325c:	mov	r3, #10
   33260:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   33264:	ldr	r1, [fp, #-548]	; 0xfffffddc
   33268:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3326c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   33270:	mov	r3, r0
   33274:	b	33604 <flatcc_json_parser_generic_json@@Base+0x464>
   33278:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3327c:	ldrb	r3, [r3]
   33280:	cmp	r3, #58	; 0x3a
   33284:	beq	332a4 <flatcc_json_parser_generic_json@@Base+0x104>
   33288:	mov	r3, #4
   3328c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   33290:	ldr	r1, [fp, #-548]	; 0xfffffddc
   33294:	ldr	r0, [fp, #-544]	; 0xfffffde0
   33298:	bl	3198c <flatcc_json_parser_set_error@@Base>
   3329c:	mov	r3, r0
   332a0:	b	33604 <flatcc_json_parser_generic_json@@Base+0x464>
   332a4:	ldr	r3, [fp, #-548]	; 0xfffffddc
   332a8:	add	r3, r3, #1
   332ac:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   332b0:	mov	r1, r3
   332b4:	ldr	r0, [fp, #-544]	; 0xfffffde0
   332b8:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   332bc:	str	r0, [fp, #-548]	; 0xfffffddc
   332c0:	ldr	r3, [fp, #-548]	; 0xfffffddc
   332c4:	ldrb	r3, [r3]
   332c8:	cmp	r3, #57	; 0x39
   332cc:	bgt	332ec <flatcc_json_parser_generic_json@@Base+0x14c>
   332d0:	cmp	r3, #48	; 0x30
   332d4:	bge	333a4 <flatcc_json_parser_generic_json@@Base+0x204>
   332d8:	cmp	r3, #34	; 0x22
   332dc:	beq	33300 <flatcc_json_parser_generic_json@@Base+0x160>
   332e0:	cmp	r3, #45	; 0x2d
   332e4:	beq	333a4 <flatcc_json_parser_generic_json@@Base+0x204>
   332e8:	b	334bc <flatcc_json_parser_generic_json@@Base+0x31c>
   332ec:	cmp	r3, #91	; 0x5b
   332f0:	beq	333bc <flatcc_json_parser_generic_json@@Base+0x21c>
   332f4:	cmp	r3, #123	; 0x7b
   332f8:	beq	3343c <flatcc_json_parser_generic_json@@Base+0x29c>
   332fc:	b	334bc <flatcc_json_parser_generic_json@@Base+0x31c>
   33300:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   33304:	ldr	r1, [fp, #-548]	; 0xfffffddc
   33308:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3330c:	bl	2c8e0 <flatcc_emitter_copy_buffer@@Base+0x2c8>
   33310:	str	r0, [fp, #-548]	; 0xfffffddc
   33314:	b	33364 <flatcc_json_parser_generic_json@@Base+0x1c4>
   33318:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3331c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   33320:	ldr	r0, [fp, #-544]	; 0xfffffde0
   33324:	bl	31a00 <flatcc_json_parser_string_part@@Base>
   33328:	str	r0, [fp, #-548]	; 0xfffffddc
   3332c:	ldr	r2, [fp, #-548]	; 0xfffffddc
   33330:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   33334:	cmp	r2, r3
   33338:	beq	3334c <flatcc_json_parser_generic_json@@Base+0x1ac>
   3333c:	ldr	r3, [fp, #-548]	; 0xfffffddc
   33340:	ldrb	r3, [r3]
   33344:	cmp	r3, #34	; 0x22
   33348:	beq	33388 <flatcc_json_parser_generic_json@@Base+0x1e8>
   3334c:	sub	r3, fp, #532	; 0x214
   33350:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   33354:	ldr	r1, [fp, #-548]	; 0xfffffddc
   33358:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3335c:	bl	31c7c <flatcc_json_parser_string_escape@@Base>
   33360:	str	r0, [fp, #-548]	; 0xfffffddc
   33364:	ldr	r2, [fp, #-548]	; 0xfffffddc
   33368:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3336c:	cmp	r2, r3
   33370:	beq	3338c <flatcc_json_parser_generic_json@@Base+0x1ec>
   33374:	ldr	r3, [fp, #-548]	; 0xfffffddc
   33378:	ldrb	r3, [r3]
   3337c:	cmp	r3, #34	; 0x22
   33380:	bne	33318 <flatcc_json_parser_generic_json@@Base+0x178>
   33384:	b	3338c <flatcc_json_parser_generic_json@@Base+0x1ec>
   33388:	nop			; (mov r0, r0)
   3338c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   33390:	ldr	r1, [fp, #-548]	; 0xfffffddc
   33394:	ldr	r0, [fp, #-544]	; 0xfffffde0
   33398:	bl	2c950 <flatcc_emitter_copy_buffer@@Base+0x338>
   3339c:	str	r0, [fp, #-548]	; 0xfffffddc
   333a0:	b	33518 <flatcc_json_parser_generic_json@@Base+0x378>
   333a4:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   333a8:	ldr	r1, [fp, #-548]	; 0xfffffddc
   333ac:	ldr	r0, [fp, #-544]	; 0xfffffde0
   333b0:	bl	32ac8 <flatcc_json_parser_unmatched_symbol@@Base+0xec>
   333b4:	str	r0, [fp, #-548]	; 0xfffffddc
   333b8:	b	33518 <flatcc_json_parser_generic_json@@Base+0x378>
   333bc:	ldr	r2, [fp, #-8]
   333c0:	ldr	r3, [fp, #-12]
   333c4:	cmp	r2, r3
   333c8:	bne	333e8 <flatcc_json_parser_generic_json@@Base+0x248>
   333cc:	mov	r3, #2
   333d0:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   333d4:	ldr	r1, [fp, #-548]	; 0xfffffddc
   333d8:	ldr	r0, [fp, #-544]	; 0xfffffde0
   333dc:	bl	3198c <flatcc_json_parser_set_error@@Base>
   333e0:	mov	r3, r0
   333e4:	b	33604 <flatcc_json_parser_generic_json@@Base+0x464>
   333e8:	ldr	r3, [fp, #-8]
   333ec:	add	r2, r3, #1
   333f0:	str	r2, [fp, #-8]
   333f4:	mov	r2, #93	; 0x5d
   333f8:	strb	r2, [r3]
   333fc:	ldr	r3, [fp, #-548]	; 0xfffffddc
   33400:	add	r3, r3, #1
   33404:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   33408:	mov	r1, r3
   3340c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   33410:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   33414:	str	r0, [fp, #-548]	; 0xfffffddc
   33418:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3341c:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   33420:	cmp	r2, r3
   33424:	beq	331d4 <flatcc_json_parser_generic_json@@Base+0x34>
   33428:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3342c:	ldrb	r3, [r3]
   33430:	cmp	r3, #93	; 0x5d
   33434:	beq	33504 <flatcc_json_parser_generic_json@@Base+0x364>
   33438:	b	331d4 <flatcc_json_parser_generic_json@@Base+0x34>
   3343c:	ldr	r2, [fp, #-8]
   33440:	ldr	r3, [fp, #-12]
   33444:	cmp	r2, r3
   33448:	bne	33468 <flatcc_json_parser_generic_json@@Base+0x2c8>
   3344c:	mov	r3, #2
   33450:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   33454:	ldr	r1, [fp, #-548]	; 0xfffffddc
   33458:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3345c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   33460:	mov	r3, r0
   33464:	b	33604 <flatcc_json_parser_generic_json@@Base+0x464>
   33468:	ldr	r3, [fp, #-8]
   3346c:	add	r2, r3, #1
   33470:	str	r2, [fp, #-8]
   33474:	mov	r2, #125	; 0x7d
   33478:	strb	r2, [r3]
   3347c:	ldr	r3, [fp, #-548]	; 0xfffffddc
   33480:	add	r3, r3, #1
   33484:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   33488:	mov	r1, r3
   3348c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   33490:	bl	2c84c <flatcc_emitter_copy_buffer@@Base+0x234>
   33494:	str	r0, [fp, #-548]	; 0xfffffddc
   33498:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3349c:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   334a0:	cmp	r2, r3
   334a4:	beq	331d4 <flatcc_json_parser_generic_json@@Base+0x34>
   334a8:	ldr	r3, [fp, #-548]	; 0xfffffddc
   334ac:	ldrb	r3, [r3]
   334b0:	cmp	r3, #125	; 0x7d
   334b4:	beq	3350c <flatcc_json_parser_generic_json@@Base+0x36c>
   334b8:	b	331d4 <flatcc_json_parser_generic_json@@Base+0x34>
   334bc:	ldr	r3, [fp, #-548]	; 0xfffffddc
   334c0:	str	r3, [fp, #-16]
   334c4:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   334c8:	ldr	r1, [fp, #-16]
   334cc:	ldr	r0, [fp, #-544]	; 0xfffffde0
   334d0:	bl	32644 <flatcc_json_parser_skip_constant@@Base>
   334d4:	str	r0, [fp, #-548]	; 0xfffffddc
   334d8:	ldr	r2, [fp, #-16]
   334dc:	ldr	r3, [fp, #-548]	; 0xfffffddc
   334e0:	cmp	r2, r3
   334e4:	bne	33514 <flatcc_json_parser_generic_json@@Base+0x374>
   334e8:	mov	r3, #5
   334ec:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   334f0:	ldr	r1, [fp, #-548]	; 0xfffffddc
   334f4:	ldr	r0, [fp, #-544]	; 0xfffffde0
   334f8:	bl	3198c <flatcc_json_parser_set_error@@Base>
   334fc:	mov	r3, r0
   33500:	b	33604 <flatcc_json_parser_generic_json@@Base+0x464>
   33504:	nop			; (mov r0, r0)
   33508:	b	33588 <flatcc_json_parser_generic_json@@Base+0x3e8>
   3350c:	nop			; (mov r0, r0)
   33510:	b	33588 <flatcc_json_parser_generic_json@@Base+0x3e8>
   33514:	nop			; (mov r0, r0)
   33518:	b	33588 <flatcc_json_parser_generic_json@@Base+0x3e8>
   3351c:	ldr	r3, [fp, #-8]
   33520:	sub	r3, r3, #1
   33524:	str	r3, [fp, #-8]
   33528:	ldr	r3, [fp, #-8]
   3352c:	ldrb	r3, [r3]
   33530:	cmp	r3, #93	; 0x5d
   33534:	bne	33554 <flatcc_json_parser_generic_json@@Base+0x3b4>
   33538:	sub	r3, fp, #536	; 0x218
   3353c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   33540:	ldr	r1, [fp, #-548]	; 0xfffffddc
   33544:	ldr	r0, [fp, #-544]	; 0xfffffde0
   33548:	bl	2cee8 <flatcc_emitter_copy_buffer@@Base+0x8d0>
   3354c:	str	r0, [fp, #-548]	; 0xfffffddc
   33550:	b	3356c <flatcc_json_parser_generic_json@@Base+0x3cc>
   33554:	sub	r3, fp, #536	; 0x218
   33558:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3355c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   33560:	ldr	r0, [fp, #-544]	; 0xfffffde0
   33564:	bl	2cc98 <flatcc_emitter_copy_buffer@@Base+0x680>
   33568:	str	r0, [fp, #-548]	; 0xfffffddc
   3356c:	ldr	r3, [fp, #-536]	; 0xfffffde8
   33570:	cmp	r3, #0
   33574:	beq	33588 <flatcc_json_parser_generic_json@@Base+0x3e8>
   33578:	ldr	r3, [fp, #-8]
   3357c:	add	r3, r3, #1
   33580:	str	r3, [fp, #-8]
   33584:	b	331d4 <flatcc_json_parser_generic_json@@Base+0x34>
   33588:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3358c:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   33590:	cmp	r2, r3
   33594:	beq	335a8 <flatcc_json_parser_generic_json@@Base+0x408>
   33598:	sub	r3, fp, #528	; 0x210
   3359c:	ldr	r2, [fp, #-8]
   335a0:	cmp	r2, r3
   335a4:	bne	3351c <flatcc_json_parser_generic_json@@Base+0x37c>
   335a8:	ldr	r2, [fp, #-548]	; 0xfffffddc
   335ac:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   335b0:	cmp	r2, r3
   335b4:	bne	33600 <flatcc_json_parser_generic_json@@Base+0x460>
   335b8:	sub	r3, fp, #528	; 0x210
   335bc:	ldr	r2, [fp, #-8]
   335c0:	cmp	r2, r3
   335c4:	beq	33600 <flatcc_json_parser_generic_json@@Base+0x460>
   335c8:	ldr	r3, [fp, #-8]
   335cc:	sub	r3, r3, #1
   335d0:	ldrb	r3, [r3]
   335d4:	cmp	r3, #93	; 0x5d
   335d8:	bne	335e4 <flatcc_json_parser_generic_json@@Base+0x444>
   335dc:	mov	r3, #9
   335e0:	b	335e8 <flatcc_json_parser_generic_json@@Base+0x448>
   335e4:	mov	r3, #10
   335e8:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   335ec:	ldr	r1, [fp, #-548]	; 0xfffffddc
   335f0:	ldr	r0, [fp, #-544]	; 0xfffffde0
   335f4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   335f8:	mov	r3, r0
   335fc:	b	33604 <flatcc_json_parser_generic_json@@Base+0x464>
   33600:	ldr	r3, [fp, #-548]	; 0xfffffddc
   33604:	mov	r0, r3
   33608:	sub	sp, fp, #4
   3360c:	pop	{fp, pc}

00033610 <flatcc_json_parser_integer@@Base>:
   33610:	push	{fp, lr}
   33614:	add	fp, sp, #4
   33618:	sub	sp, sp, #40	; 0x28
   3361c:	str	r0, [fp, #-32]	; 0xffffffe0
   33620:	str	r1, [fp, #-36]	; 0xffffffdc
   33624:	str	r2, [fp, #-40]	; 0xffffffd8
   33628:	str	r3, [fp, #-44]	; 0xffffffd4
   3362c:	mov	r2, #0
   33630:	mov	r3, #0
   33634:	strd	r2, [fp, #-12]
   33638:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3363c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33640:	cmp	r2, r3
   33644:	bne	33650 <flatcc_json_parser_integer@@Base+0x40>
   33648:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3364c:	b	337f8 <flatcc_json_parser_integer@@Base+0x1e8>
   33650:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33654:	str	r3, [fp, #-16]
   33658:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3365c:	ldrb	r3, [r3]
   33660:	cmp	r3, #45	; 0x2d
   33664:	moveq	r3, #1
   33668:	movne	r3, #0
   3366c:	uxtb	r3, r3
   33670:	mov	r2, r3
   33674:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33678:	str	r2, [r3]
   3367c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33680:	ldr	r3, [r3]
   33684:	mov	r2, r3
   33688:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3368c:	add	r3, r3, r2
   33690:	str	r3, [fp, #-36]	; 0xffffffdc
   33694:	b	33744 <flatcc_json_parser_integer@@Base+0x134>
   33698:	ldrd	r2, [fp, #-12]
   3369c:	strd	r2, [fp, #-28]	; 0xffffffe4
   336a0:	ldr	r3, [fp, #-8]
   336a4:	mov	r2, #10
   336a8:	mul	r2, r2, r3
   336ac:	ldr	r3, [fp, #-12]
   336b0:	mov	r1, #0
   336b4:	mul	r3, r1, r3
   336b8:	add	r1, r2, r3
   336bc:	ldr	r3, [fp, #-12]
   336c0:	mov	r2, #10
   336c4:	umull	r2, r3, r3, r2
   336c8:	add	r1, r1, r3
   336cc:	mov	r3, r1
   336d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   336d4:	ldrb	r1, [r1]
   336d8:	uxtb	r0, r1
   336dc:	mov	r1, #0
   336e0:	adds	r2, r2, r0
   336e4:	adc	r3, r3, r1
   336e8:	subs	r2, r2, #48	; 0x30
   336ec:	sbc	r3, r3, #0
   336f0:	strd	r2, [fp, #-12]
   336f4:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   336f8:	ldrd	r2, [fp, #-12]
   336fc:	cmp	r1, r3
   33700:	cmpeq	r0, r2
   33704:	bls	33738 <flatcc_json_parser_integer@@Base+0x128>
   33708:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3370c:	cmp	r3, #0
   33710:	beq	3371c <flatcc_json_parser_integer@@Base+0x10c>
   33714:	mov	r3, #8
   33718:	b	33720 <flatcc_json_parser_integer@@Base+0x110>
   3371c:	mov	r3, #7
   33720:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33724:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33728:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3372c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   33730:	mov	r3, r0
   33734:	b	337f8 <flatcc_json_parser_integer@@Base+0x1e8>
   33738:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3373c:	add	r3, r3, #1
   33740:	str	r3, [fp, #-36]	; 0xffffffdc
   33744:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33748:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3374c:	cmp	r2, r3
   33750:	beq	33774 <flatcc_json_parser_integer@@Base+0x164>
   33754:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33758:	ldrb	r3, [r3]
   3375c:	cmp	r3, #47	; 0x2f
   33760:	bls	33774 <flatcc_json_parser_integer@@Base+0x164>
   33764:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33768:	ldrb	r3, [r3]
   3376c:	cmp	r3, #57	; 0x39
   33770:	bls	33698 <flatcc_json_parser_integer@@Base+0x88>
   33774:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33778:	ldr	r3, [fp, #-16]
   3377c:	cmp	r2, r3
   33780:	bne	3378c <flatcc_json_parser_integer@@Base+0x17c>
   33784:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33788:	b	337f8 <flatcc_json_parser_integer@@Base+0x1e8>
   3378c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33790:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33794:	cmp	r2, r3
   33798:	beq	337e8 <flatcc_json_parser_integer@@Base+0x1d8>
   3379c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   337a0:	ldrb	r3, [r3]
   337a4:	cmp	r3, #101	; 0x65
   337a8:	beq	337cc <flatcc_json_parser_integer@@Base+0x1bc>
   337ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   337b0:	ldrb	r3, [r3]
   337b4:	cmp	r3, #69	; 0x45
   337b8:	beq	337cc <flatcc_json_parser_integer@@Base+0x1bc>
   337bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   337c0:	ldrb	r3, [r3]
   337c4:	cmp	r3, #46	; 0x2e
   337c8:	bne	337e8 <flatcc_json_parser_integer@@Base+0x1d8>
   337cc:	mov	r3, #12
   337d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   337d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   337d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   337dc:	bl	3198c <flatcc_json_parser_set_error@@Base>
   337e0:	mov	r3, r0
   337e4:	b	337f8 <flatcc_json_parser_integer@@Base+0x1e8>
   337e8:	ldr	r1, [fp, #4]
   337ec:	ldrd	r2, [fp, #-12]
   337f0:	strd	r2, [r1]
   337f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   337f8:	mov	r0, r3
   337fc:	sub	sp, fp, #4
   33800:	pop	{fp, pc}

00033804 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   33804:	push	{fp, lr}
   33808:	add	fp, sp, #4
   3380c:	sub	sp, sp, #56	; 0x38
   33810:	str	r0, [fp, #-40]	; 0xffffffd8
   33814:	str	r1, [fp, #-44]	; 0xffffffd4
   33818:	str	r2, [fp, #-48]	; 0xffffffd0
   3381c:	str	r3, [fp, #-52]	; 0xffffffcc
   33820:	ldr	r3, [fp, #4]
   33824:	cmp	r3, #0
   33828:	movne	r3, #1
   3382c:	moveq	r3, #0
   33830:	uxtb	r3, r3
   33834:	str	r3, [fp, #-8]
   33838:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3383c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   33840:	ldr	r0, [fp, #-40]	; 0xffffffd8
   33844:	bl	2c8e0 <flatcc_emitter_copy_buffer@@Base+0x2c8>
   33848:	str	r0, [fp, #-44]	; 0xffffffd4
   3384c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33850:	str	r3, [fp, #-12]
   33854:	ldr	r2, [fp, #-48]	; 0xffffffd0
   33858:	ldr	r1, [fp, #-12]
   3385c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   33860:	bl	31a00 <flatcc_json_parser_string_part@@Base>
   33864:	str	r0, [fp, #-44]	; 0xffffffd4
   33868:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3386c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   33870:	cmp	r2, r3
   33874:	beq	33a34 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x230>
   33878:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3387c:	ldrb	r3, [r3]
   33880:	cmp	r3, #34	; 0x22
   33884:	bne	33a34 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x230>
   33888:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3388c:	ldr	r3, [fp, #-12]
   33890:	sub	r3, r2, r3
   33894:	mov	r0, r3
   33898:	bl	30c90 <grisu3_diy_fp_encode_double@@Base+0x1690>
   3389c:	str	r0, [fp, #-16]
   338a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   338a4:	ldr	r0, [r3]
   338a8:	mvn	r3, #0
   338ac:	mov	r2, #1
   338b0:	mov	r1, #1
   338b4:	bl	2894c <flatcc_builder_start_vector@@Base>
   338b8:	mov	r3, r0
   338bc:	cmp	r3, #0
   338c0:	bne	339f0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ec>
   338c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   338c8:	ldr	r3, [r3]
   338cc:	ldr	r1, [fp, #-16]
   338d0:	mov	r0, r3
   338d4:	bl	2805c <flatcc_builder_extend_vector@@Base>
   338d8:	str	r0, [fp, #-20]	; 0xffffffec
   338dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   338e0:	cmp	r3, #0
   338e4:	beq	339f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f4>
   338e8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   338ec:	ldr	r3, [fp, #-12]
   338f0:	sub	r3, r2, r3
   338f4:	str	r3, [fp, #-32]	; 0xffffffe0
   338f8:	ldr	r3, [fp, #-16]
   338fc:	str	r3, [fp, #-28]	; 0xffffffe4
   33900:	sub	r1, fp, #32
   33904:	sub	r2, fp, #28
   33908:	ldr	r3, [fp, #-8]
   3390c:	str	r3, [sp]
   33910:	mov	r3, r1
   33914:	ldr	r1, [fp, #-12]
   33918:	ldr	r0, [fp, #-20]	; 0xffffffec
   3391c:	bl	310c8 <grisu3_diy_fp_encode_double@@Base+0x1ac8>
   33920:	str	r0, [fp, #-24]	; 0xffffffe8
   33924:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33928:	cmp	r3, #0
   3392c:	beq	33944 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x140>
   33930:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33934:	ldr	r2, [fp, #-12]
   33938:	add	r3, r2, r3
   3393c:	str	r3, [fp, #-44]	; 0xffffffd4
   33940:	b	33a34 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x230>
   33944:	ldr	r2, [fp, #-44]	; 0xffffffd4
   33948:	ldr	r3, [fp, #-12]
   3394c:	sub	r3, r2, r3
   33950:	mov	r2, r3
   33954:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33958:	cmp	r2, r3
   3395c:	beq	33974 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x170>
   33960:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33964:	ldr	r2, [fp, #-12]
   33968:	add	r3, r2, r3
   3396c:	str	r3, [fp, #-44]	; 0xffffffd4
   33970:	b	33a34 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x230>
   33974:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33978:	ldr	r3, [fp, #-16]
   3397c:	cmp	r2, r3
   33980:	bcs	339ac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1a8>
   33984:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33988:	ldr	r0, [r3]
   3398c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33990:	ldr	r2, [fp, #-16]
   33994:	sub	r3, r2, r3
   33998:	mov	r1, r3
   3399c:	bl	28634 <flatcc_builder_truncate_vector@@Base>
   339a0:	mov	r3, r0
   339a4:	cmp	r3, #0
   339a8:	bne	33a00 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fc>
   339ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   339b0:	ldr	r3, [r3]
   339b4:	mov	r0, r3
   339b8:	bl	29ba4 <flatcc_builder_end_vector@@Base>
   339bc:	mov	r2, r0
   339c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   339c4:	str	r2, [r3]
   339c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   339cc:	ldr	r3, [r3]
   339d0:	cmp	r3, #0
   339d4:	beq	33a08 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x204>
   339d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   339dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   339e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   339e4:	bl	2c950 <flatcc_emitter_copy_buffer@@Base+0x338>
   339e8:	mov	r3, r0
   339ec:	b	33a6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x268>
   339f0:	nop			; (mov r0, r0)
   339f4:	b	33a0c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x208>
   339f8:	nop			; (mov r0, r0)
   339fc:	b	33a0c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x208>
   33a00:	nop			; (mov r0, r0)
   33a04:	b	33a0c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x208>
   33a08:	nop			; (mov r0, r0)
   33a0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   33a10:	mov	r2, #0
   33a14:	str	r2, [r3]
   33a18:	mov	r3, #33	; 0x21
   33a1c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   33a20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   33a24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   33a28:	bl	3198c <flatcc_json_parser_set_error@@Base>
   33a2c:	mov	r3, r0
   33a30:	b	33a6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x268>
   33a34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   33a38:	mov	r2, #0
   33a3c:	str	r2, [r3]
   33a40:	ldr	r3, [fp, #4]
   33a44:	cmp	r3, #0
   33a48:	beq	33a54 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x250>
   33a4c:	mov	r3, #32
   33a50:	b	33a58 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x254>
   33a54:	mov	r3, #31
   33a58:	ldr	r2, [fp, #-48]	; 0xffffffd0
   33a5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   33a60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   33a64:	bl	3198c <flatcc_json_parser_set_error@@Base>
   33a68:	mov	r3, r0
   33a6c:	mov	r0, r3
   33a70:	sub	sp, fp, #4
   33a74:	pop	{fp, pc}

00033a78 <flatcc_json_parser_build_string@@Base>:
   33a78:	push	{fp, lr}
   33a7c:	add	fp, sp, #4
   33a80:	sub	sp, sp, #24
   33a84:	str	r0, [fp, #-16]
   33a88:	str	r1, [fp, #-20]	; 0xffffffec
   33a8c:	str	r2, [fp, #-24]	; 0xffffffe8
   33a90:	str	r3, [fp, #-28]	; 0xffffffe4
   33a94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33a98:	ldr	r1, [fp, #-20]	; 0xffffffec
   33a9c:	ldr	r0, [fp, #-16]
   33aa0:	bl	2c8e0 <flatcc_emitter_copy_buffer@@Base+0x2c8>
   33aa4:	str	r0, [fp, #-20]	; 0xffffffec
   33aa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   33aac:	str	r3, [fp, #-8]
   33ab0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33ab4:	ldr	r1, [fp, #-8]
   33ab8:	ldr	r0, [fp, #-16]
   33abc:	bl	31a00 <flatcc_json_parser_string_part@@Base>
   33ac0:	str	r0, [fp, #-20]	; 0xffffffec
   33ac4:	ldr	r2, [fp, #-20]	; 0xffffffec
   33ac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33acc:	cmp	r2, r3
   33ad0:	beq	33b14 <flatcc_json_parser_build_string@@Base+0x9c>
   33ad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   33ad8:	ldrb	r3, [r3]
   33adc:	cmp	r3, #34	; 0x22
   33ae0:	bne	33b14 <flatcc_json_parser_build_string@@Base+0x9c>
   33ae4:	ldr	r3, [fp, #-16]
   33ae8:	ldr	r0, [r3]
   33aec:	ldr	r2, [fp, #-20]	; 0xffffffec
   33af0:	ldr	r3, [fp, #-8]
   33af4:	sub	r3, r2, r3
   33af8:	mov	r2, r3
   33afc:	ldr	r1, [fp, #-8]
   33b00:	bl	2ad70 <flatcc_builder_create_string@@Base>
   33b04:	mov	r2, r0
   33b08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33b0c:	str	r2, [r3]
   33b10:	b	33c34 <flatcc_json_parser_build_string@@Base+0x1bc>
   33b14:	ldr	r3, [fp, #-16]
   33b18:	ldr	r3, [r3]
   33b1c:	mov	r0, r3
   33b20:	bl	28afc <flatcc_builder_start_string@@Base>
   33b24:	mov	r3, r0
   33b28:	cmp	r3, #0
   33b2c:	bne	33c58 <flatcc_json_parser_build_string@@Base+0x1e0>
   33b30:	ldr	r3, [fp, #-16]
   33b34:	ldr	r0, [r3]
   33b38:	ldr	r2, [fp, #-20]	; 0xffffffec
   33b3c:	ldr	r3, [fp, #-8]
   33b40:	sub	r3, r2, r3
   33b44:	mov	r2, r3
   33b48:	ldr	r1, [fp, #-8]
   33b4c:	bl	2850c <flatcc_builder_append_string@@Base>
   33b50:	mov	r3, r0
   33b54:	cmp	r3, #0
   33b58:	beq	33c58 <flatcc_json_parser_build_string@@Base+0x1e0>
   33b5c:	b	33bf8 <flatcc_json_parser_build_string@@Base+0x180>
   33b60:	sub	r3, fp, #12
   33b64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33b68:	ldr	r1, [fp, #-20]	; 0xffffffec
   33b6c:	ldr	r0, [fp, #-16]
   33b70:	bl	31c7c <flatcc_json_parser_string_escape@@Base>
   33b74:	str	r0, [fp, #-20]	; 0xffffffec
   33b78:	ldr	r3, [fp, #-16]
   33b7c:	ldr	r0, [r3]
   33b80:	sub	r3, fp, #12
   33b84:	add	r3, r3, #1
   33b88:	ldrb	r2, [fp, #-12]
   33b8c:	mov	r1, r3
   33b90:	bl	2850c <flatcc_builder_append_string@@Base>
   33b94:	mov	r3, r0
   33b98:	cmp	r3, #0
   33b9c:	beq	33c4c <flatcc_json_parser_build_string@@Base+0x1d4>
   33ba0:	ldr	r3, [fp, #-20]	; 0xffffffec
   33ba4:	str	r3, [fp, #-8]
   33ba8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33bac:	ldr	r1, [fp, #-8]
   33bb0:	ldr	r0, [fp, #-16]
   33bb4:	bl	31a00 <flatcc_json_parser_string_part@@Base>
   33bb8:	str	r0, [fp, #-20]	; 0xffffffec
   33bbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   33bc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33bc4:	cmp	r2, r3
   33bc8:	beq	33bf8 <flatcc_json_parser_build_string@@Base+0x180>
   33bcc:	ldr	r3, [fp, #-16]
   33bd0:	ldr	r0, [r3]
   33bd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   33bd8:	ldr	r3, [fp, #-8]
   33bdc:	sub	r3, r2, r3
   33be0:	mov	r2, r3
   33be4:	ldr	r1, [fp, #-8]
   33be8:	bl	2850c <flatcc_builder_append_string@@Base>
   33bec:	mov	r3, r0
   33bf0:	cmp	r3, #0
   33bf4:	beq	33c54 <flatcc_json_parser_build_string@@Base+0x1dc>
   33bf8:	ldr	r2, [fp, #-20]	; 0xffffffec
   33bfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33c00:	cmp	r2, r3
   33c04:	beq	33c18 <flatcc_json_parser_build_string@@Base+0x1a0>
   33c08:	ldr	r3, [fp, #-20]	; 0xffffffec
   33c0c:	ldrb	r3, [r3]
   33c10:	cmp	r3, #34	; 0x22
   33c14:	bne	33b60 <flatcc_json_parser_build_string@@Base+0xe8>
   33c18:	ldr	r3, [fp, #-16]
   33c1c:	ldr	r3, [r3]
   33c20:	mov	r0, r3
   33c24:	bl	2af98 <flatcc_builder_end_string@@Base>
   33c28:	mov	r2, r0
   33c2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33c30:	str	r2, [r3]
   33c34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33c38:	ldr	r1, [fp, #-20]	; 0xffffffec
   33c3c:	ldr	r0, [fp, #-16]
   33c40:	bl	2c950 <flatcc_emitter_copy_buffer@@Base+0x338>
   33c44:	mov	r3, r0
   33c48:	b	33c68 <flatcc_json_parser_build_string@@Base+0x1f0>
   33c4c:	nop			; (mov r0, r0)
   33c50:	b	33c58 <flatcc_json_parser_build_string@@Base+0x1e0>
   33c54:	nop			; (mov r0, r0)
   33c58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33c5c:	mov	r2, #0
   33c60:	str	r2, [r3]
   33c64:	ldr	r3, [fp, #-20]	; 0xffffffec
   33c68:	mov	r0, r3
   33c6c:	sub	sp, fp, #4
   33c70:	pop	{fp, pc}

00033c74 <flatcc_json_parser_prepare_unions@@Base>:
   33c74:	push	{fp, lr}
   33c78:	add	fp, sp, #4
   33c7c:	sub	sp, sp, #24
   33c80:	str	r0, [fp, #-16]
   33c84:	str	r1, [fp, #-20]	; 0xffffffec
   33c88:	str	r2, [fp, #-24]	; 0xffffffe8
   33c8c:	str	r3, [fp, #-28]	; 0xffffffe4
   33c90:	ldr	r3, [fp, #-16]
   33c94:	ldr	r0, [r3]
   33c98:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33c9c:	mov	r3, r2
   33ca0:	lsl	r3, r3, #1
   33ca4:	add	r3, r3, r2
   33ca8:	lsl	r3, r3, #3
   33cac:	add	r3, r3, #8
   33cb0:	mov	r1, r3
   33cb4:	bl	26b38 <flatcc_builder_enter_user_frame@@Base>
   33cb8:	mov	r2, r0
   33cbc:	ldr	r3, [fp, #4]
   33cc0:	str	r2, [r3]
   33cc4:	ldr	r3, [fp, #4]
   33cc8:	ldr	r3, [r3]
   33ccc:	cmp	r3, #0
   33cd0:	bne	33cf0 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   33cd4:	mov	r3, #33	; 0x21
   33cd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33cdc:	ldr	r1, [fp, #-20]	; 0xffffffec
   33ce0:	ldr	r0, [fp, #-16]
   33ce4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   33ce8:	mov	r3, r0
   33cec:	b	33d20 <flatcc_json_parser_prepare_unions@@Base+0xac>
   33cf0:	ldr	r3, [fp, #-16]
   33cf4:	ldr	r2, [r3]
   33cf8:	ldr	r3, [fp, #4]
   33cfc:	ldr	r3, [r3]
   33d00:	mov	r1, r3
   33d04:	mov	r0, r2
   33d08:	bl	26d44 <flatcc_builder_get_user_frame_ptr@@Base>
   33d0c:	str	r0, [fp, #-8]
   33d10:	ldr	r3, [fp, #-8]
   33d14:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33d18:	str	r2, [r3]
   33d1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33d20:	mov	r0, r3
   33d24:	sub	sp, fp, #4
   33d28:	pop	{fp, pc}

00033d2c <flatcc_json_parser_finalize_unions@@Base>:
   33d2c:	push	{fp, lr}
   33d30:	add	fp, sp, #4
   33d34:	sub	sp, sp, #24
   33d38:	str	r0, [fp, #-16]
   33d3c:	str	r1, [fp, #-20]	; 0xffffffec
   33d40:	str	r2, [fp, #-24]	; 0xffffffe8
   33d44:	str	r3, [fp, #-28]	; 0xffffffe4
   33d48:	ldr	r3, [fp, #-16]
   33d4c:	ldr	r3, [r3]
   33d50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33d54:	mov	r0, r3
   33d58:	bl	26d44 <flatcc_builder_get_user_frame_ptr@@Base>
   33d5c:	str	r0, [fp, #-8]
   33d60:	ldr	r3, [fp, #-8]
   33d64:	ldr	r3, [r3, #4]
   33d68:	cmp	r3, #0
   33d6c:	beq	33d88 <flatcc_json_parser_finalize_unions@@Base+0x5c>
   33d70:	mov	r3, #27
   33d74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33d78:	ldr	r1, [fp, #-20]	; 0xffffffec
   33d7c:	ldr	r0, [fp, #-16]
   33d80:	bl	3198c <flatcc_json_parser_set_error@@Base>
   33d84:	str	r0, [fp, #-20]	; 0xffffffec
   33d88:	ldr	r3, [fp, #-16]
   33d8c:	ldr	r3, [r3]
   33d90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33d94:	mov	r0, r3
   33d98:	bl	26ca0 <flatcc_builder_exit_user_frame_at@@Base>
   33d9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33da0:	mov	r0, r3
   33da4:	sub	sp, fp, #4
   33da8:	pop	{fp, pc}

00033dac <flatcc_json_parser_union@@Base>:
   33dac:	push	{r4, fp, lr}
   33db0:	add	fp, sp, #8
   33db4:	sub	sp, sp, #44	; 0x2c
   33db8:	str	r0, [fp, #-32]	; 0xffffffe0
   33dbc:	str	r1, [fp, #-36]	; 0xffffffdc
   33dc0:	str	r2, [fp, #-40]	; 0xffffffd8
   33dc4:	str	r3, [fp, #-44]	; 0xffffffd4
   33dc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33dcc:	ldr	r3, [r3]
   33dd0:	ldr	r1, [fp, #8]
   33dd4:	mov	r0, r3
   33dd8:	bl	26d44 <flatcc_builder_get_user_frame_ptr@@Base>
   33ddc:	str	r0, [fp, #-16]
   33de0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   33de4:	mov	r3, r2
   33de8:	lsl	r3, r3, #1
   33dec:	add	r3, r3, r2
   33df0:	lsl	r3, r3, #3
   33df4:	add	r3, r3, #8
   33df8:	ldr	r2, [fp, #-16]
   33dfc:	add	r3, r2, r3
   33e00:	str	r3, [fp, #-20]	; 0xffffffec
   33e04:	ldr	r3, [fp, #-20]	; 0xffffffec
   33e08:	ldr	r3, [r3]
   33e0c:	cmp	r3, #0
   33e10:	beq	33e30 <flatcc_json_parser_union@@Base+0x84>
   33e14:	mov	r3, #28
   33e18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33e1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33e20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33e24:	bl	3198c <flatcc_json_parser_set_error@@Base>
   33e28:	mov	r3, r0
   33e2c:	b	33f70 <flatcc_json_parser_union@@Base+0x1c4>
   33e30:	ldr	r3, [fp, #-20]	; 0xffffffec
   33e34:	ldrb	r3, [r3, #12]
   33e38:	cmp	r3, #0
   33e3c:	bne	33ea0 <flatcc_json_parser_union@@Base+0xf4>
   33e40:	ldr	r3, [fp, #-16]
   33e44:	ldr	r3, [r3, #4]
   33e48:	add	r2, r3, #1
   33e4c:	ldr	r3, [fp, #-16]
   33e50:	str	r2, [r3, #4]
   33e54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33e58:	ldr	r2, [r3, #16]
   33e5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33e60:	str	r2, [r3, #8]
   33e64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33e68:	ldr	r2, [r3, #4]
   33e6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33e70:	str	r2, [r3, #4]
   33e74:	ldr	r3, [fp, #-20]	; 0xffffffec
   33e78:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33e7c:	str	r2, [r3]
   33e80:	ldr	r3, [fp, #-20]	; 0xffffffec
   33e84:	ldr	r3, [r3]
   33e88:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33e8c:	mov	r1, r3
   33e90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33e94:	bl	331a0 <flatcc_json_parser_generic_json@@Base>
   33e98:	str	r0, [fp, #-36]	; 0xffffffdc
   33e9c:	b	33f6c <flatcc_json_parser_union@@Base+0x1c0>
   33ea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   33ea4:	ldrb	r3, [r3, #13]
   33ea8:	strb	r3, [fp, #-28]	; 0xffffffe4
   33eac:	ldr	r3, [fp, #-20]	; 0xffffffec
   33eb0:	ldrb	r3, [r3, #13]
   33eb4:	cmp	r3, #0
   33eb8:	bne	33ed8 <flatcc_json_parser_union@@Base+0x12c>
   33ebc:	mov	r3, #25
   33ec0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33ec4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33ec8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33ecc:	bl	3198c <flatcc_json_parser_set_error@@Base>
   33ed0:	mov	r3, r0
   33ed4:	b	33f70 <flatcc_json_parser_union@@Base+0x1c4>
   33ed8:	ldr	r3, [fp, #-16]
   33edc:	ldr	r3, [r3, #4]
   33ee0:	sub	r2, r3, #1
   33ee4:	ldr	r3, [fp, #-16]
   33ee8:	str	r2, [r3, #4]
   33eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   33ef0:	ldrb	r2, [r3, #13]
   33ef4:	sub	r3, fp, #28
   33ef8:	add	r3, r3, #4
   33efc:	str	r3, [sp]
   33f00:	ldr	r4, [fp, #12]
   33f04:	mov	r3, r2
   33f08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33f0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33f10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33f14:	blx	r4
   33f18:	str	r0, [fp, #-36]	; 0xffffffdc
   33f1c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33f20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33f24:	cmp	r2, r3
   33f28:	beq	33f6c <flatcc_json_parser_union@@Base+0x1c0>
   33f2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33f30:	ldr	r0, [r3]
   33f34:	ldrh	r1, [fp, #4]
   33f38:	sub	r3, fp, #28
   33f3c:	ldm	r3, {r2, r3}
   33f40:	bl	2a1ec <flatcc_builder_table_add_union@@Base>
   33f44:	mov	r3, r0
   33f48:	cmp	r3, #0
   33f4c:	beq	33f6c <flatcc_json_parser_union@@Base+0x1c0>
   33f50:	mov	r3, #28
   33f54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33f58:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33f5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33f60:	bl	3198c <flatcc_json_parser_set_error@@Base>
   33f64:	mov	r3, r0
   33f68:	b	33f70 <flatcc_json_parser_union@@Base+0x1c4>
   33f6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33f70:	mov	r0, r3
   33f74:	sub	sp, fp, #8
   33f78:	pop	{r4, fp, pc}

00033f7c <flatcc_json_parser_union_type@@Base>:
   33f7c:	push	{r4, fp, lr}
   33f80:	add	fp, sp, #8
   33f84:	sub	sp, sp, #60	; 0x3c
   33f88:	str	r0, [fp, #-48]	; 0xffffffd0
   33f8c:	str	r1, [fp, #-52]	; 0xffffffcc
   33f90:	str	r2, [fp, #-56]	; 0xffffffc8
   33f94:	str	r3, [fp, #-60]	; 0xffffffc4
   33f98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   33f9c:	ldr	r3, [r3]
   33fa0:	ldr	r1, [fp, #8]
   33fa4:	mov	r0, r3
   33fa8:	bl	26d44 <flatcc_builder_get_user_frame_ptr@@Base>
   33fac:	str	r0, [fp, #-16]
   33fb0:	ldr	r3, [fp, #-16]
   33fb4:	add	r1, r3, #8
   33fb8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   33fbc:	mov	r3, r2
   33fc0:	lsl	r3, r3, #1
   33fc4:	add	r3, r3, r2
   33fc8:	lsl	r3, r3, #3
   33fcc:	add	r3, r1, r3
   33fd0:	str	r3, [fp, #-20]	; 0xffffffec
   33fd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   33fd8:	ldrb	r3, [r3, #12]
   33fdc:	cmp	r3, #0
   33fe0:	beq	34000 <flatcc_json_parser_union_type@@Base+0x84>
   33fe4:	mov	r3, #28
   33fe8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   33fec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   33ff0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   33ff4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   33ff8:	mov	r3, r0
   33ffc:	b	341d4 <flatcc_json_parser_union_type@@Base+0x258>
   34000:	ldr	r3, [fp, #-20]	; 0xffffffec
   34004:	mov	r2, #1
   34008:	strb	r2, [r3, #12]
   3400c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   34010:	str	r3, [fp, #-24]	; 0xffffffe8
   34014:	ldr	r3, [fp, #-20]	; 0xffffffec
   34018:	add	r3, r3, #13
   3401c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   34020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34024:	ldr	r0, [fp, #-48]	; 0xffffffd0
   34028:	bl	2d698 <flatcc_emitter_copy_buffer@@Base+0x1080>
   3402c:	str	r0, [fp, #-52]	; 0xffffffcc
   34030:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34034:	ldr	r3, [fp, #-52]	; 0xffffffcc
   34038:	cmp	r2, r3
   3403c:	bne	34064 <flatcc_json_parser_union_type@@Base+0xe8>
   34040:	ldr	r3, [fp, #-20]	; 0xffffffec
   34044:	add	r3, r3, #13
   34048:	str	r3, [sp]
   3404c:	ldr	r3, [fp, #12]
   34050:	ldr	r2, [fp, #-56]	; 0xffffffc8
   34054:	ldr	r1, [fp, #-52]	; 0xffffffcc
   34058:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3405c:	bl	2dcdc <flatcc_emitter_copy_buffer@@Base+0x16c4>
   34060:	str	r0, [fp, #-52]	; 0xffffffcc
   34064:	ldr	r3, [fp, #-20]	; 0xffffffec
   34068:	ldr	r3, [r3]
   3406c:	cmp	r3, #0
   34070:	bne	340a8 <flatcc_json_parser_union_type@@Base+0x12c>
   34074:	ldr	r3, [fp, #-16]
   34078:	ldr	r3, [r3, #4]
   3407c:	ldr	r2, [fp, #-20]	; 0xffffffec
   34080:	ldrb	r2, [r2, #13]
   34084:	cmp	r2, #0
   34088:	movne	r2, #1
   3408c:	moveq	r2, #0
   34090:	uxtb	r2, r2
   34094:	add	r2, r3, r2
   34098:	ldr	r3, [fp, #-16]
   3409c:	str	r2, [r3, #4]
   340a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   340a4:	b	341d4 <flatcc_json_parser_union_type@@Base+0x258>
   340a8:	ldr	r3, [fp, #-16]
   340ac:	ldr	r3, [r3, #4]
   340b0:	cmp	r3, #0
   340b4:	bne	340d8 <flatcc_json_parser_union_type@@Base+0x15c>
   340b8:	ldr	r3, [pc, #288]	; 341e0 <flatcc_json_parser_union_type@@Base+0x264>
   340bc:	add	r3, pc, r3
   340c0:	ldr	r2, [pc, #284]	; 341e4 <flatcc_json_parser_union_type@@Base+0x268>
   340c4:	ldr	r1, [pc, #284]	; 341e8 <flatcc_json_parser_union_type@@Base+0x26c>
   340c8:	add	r1, pc, r1
   340cc:	ldr	r0, [pc, #280]	; 341ec <flatcc_json_parser_union_type@@Base+0x270>
   340d0:	add	r0, pc, r0
   340d4:	bl	12704 <__assert_fail@plt>
   340d8:	ldr	r3, [fp, #-16]
   340dc:	ldr	r3, [r3, #4]
   340e0:	sub	r2, r3, #1
   340e4:	ldr	r3, [fp, #-16]
   340e8:	str	r2, [r3, #4]
   340ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   340f0:	ldr	r3, [r3, #16]
   340f4:	str	r3, [fp, #-28]	; 0xffffffe4
   340f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   340fc:	ldr	r3, [r3, #4]
   34100:	str	r3, [fp, #-32]	; 0xffffffe0
   34104:	ldr	r3, [fp, #-20]	; 0xffffffec
   34108:	ldr	r2, [r3, #8]
   3410c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   34110:	str	r2, [r3, #16]
   34114:	ldr	r3, [fp, #-20]	; 0xffffffec
   34118:	ldr	r2, [r3, #4]
   3411c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   34120:	str	r2, [r3, #4]
   34124:	ldr	r3, [fp, #-20]	; 0xffffffec
   34128:	ldrb	r3, [r3, #13]
   3412c:	strb	r3, [fp, #-40]	; 0xffffffd8
   34130:	ldr	r3, [fp, #-20]	; 0xffffffec
   34134:	ldr	r1, [r3]
   34138:	ldr	r3, [fp, #-20]	; 0xffffffec
   3413c:	ldrb	r2, [r3, #13]
   34140:	sub	r3, fp, #40	; 0x28
   34144:	add	r3, r3, #4
   34148:	str	r3, [sp]
   3414c:	ldr	r4, [fp, #16]
   34150:	mov	r3, r2
   34154:	ldr	r2, [fp, #-56]	; 0xffffffc8
   34158:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3415c:	blx	r4
   34160:	mov	r2, r0
   34164:	ldr	r3, [fp, #-56]	; 0xffffffc8
   34168:	cmp	r2, r3
   3416c:	bne	34178 <flatcc_json_parser_union_type@@Base+0x1fc>
   34170:	ldr	r3, [fp, #-56]	; 0xffffffc8
   34174:	b	341d4 <flatcc_json_parser_union_type@@Base+0x258>
   34178:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3417c:	ldr	r0, [r3]
   34180:	ldrh	r1, [fp, #4]
   34184:	sub	r3, fp, #40	; 0x28
   34188:	ldm	r3, {r2, r3}
   3418c:	bl	2a1ec <flatcc_builder_table_add_union@@Base>
   34190:	mov	r3, r0
   34194:	cmp	r3, #0
   34198:	beq	341b8 <flatcc_json_parser_union_type@@Base+0x23c>
   3419c:	mov	r3, #28
   341a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   341a4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   341a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   341ac:	bl	3198c <flatcc_json_parser_set_error@@Base>
   341b0:	mov	r3, r0
   341b4:	b	341d4 <flatcc_json_parser_union_type@@Base+0x258>
   341b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   341bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   341c0:	str	r2, [r3, #16]
   341c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   341c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   341cc:	str	r2, [r3, #4]
   341d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   341d4:	mov	r0, r3
   341d8:	sub	sp, fp, #8
   341dc:	pop	{r4, fp, pc}
   341e0:	andeq	r3, r0, r8, ror r2
   341e4:	andeq	r0, r0, r5, asr #7
   341e8:	andeq	r2, r0, ip, lsl #27
   341ec:	andeq	r2, r0, r8, ror #27
   341f0:	push	{r4, fp, lr}
   341f4:	add	fp, sp, #8
   341f8:	sub	sp, sp, #52	; 0x34
   341fc:	str	r0, [fp, #-40]	; 0xffffffd8
   34200:	str	r1, [fp, #-44]	; 0xffffffd4
   34204:	str	r2, [fp, #-48]	; 0xffffffd0
   34208:	str	r3, [fp, #-52]	; 0xffffffcc
   3420c:	mov	r3, #0
   34210:	str	r3, [fp, #-28]	; 0xffffffe4
   34214:	ldr	r3, [fp, #-40]	; 0xffffffd8
   34218:	ldr	r3, [r3]
   3421c:	mov	r0, r3
   34220:	bl	289f8 <flatcc_builder_start_offset_vector@@Base>
   34224:	mov	r3, r0
   34228:	cmp	r3, #0
   3422c:	bne	343ec <flatcc_json_parser_union_type@@Base+0x470>
   34230:	sub	r3, fp, #32
   34234:	ldr	r2, [fp, #-48]	; 0xffffffd0
   34238:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3423c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   34240:	bl	2ce00 <flatcc_emitter_copy_buffer@@Base+0x7e8>
   34244:	str	r0, [fp, #-44]	; 0xffffffd4
   34248:	mov	r3, #0
   3424c:	str	r3, [fp, #-16]
   34250:	b	34338 <flatcc_json_parser_union_type@@Base+0x3bc>
   34254:	ldr	r2, [fp, #-16]
   34258:	ldr	r3, [fp, #4]
   3425c:	cmp	r2, r3
   34260:	bne	34280 <flatcc_json_parser_union_type@@Base+0x304>
   34264:	mov	r3, #30
   34268:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3426c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   34270:	ldr	r0, [fp, #-40]	; 0xffffffd8
   34274:	bl	3198c <flatcc_json_parser_set_error@@Base>
   34278:	mov	r3, r0
   3427c:	b	34420 <flatcc_json_parser_union_type@@Base+0x4a4>
   34280:	ldr	r3, [fp, #-40]	; 0xffffffd8
   34284:	ldr	r3, [r3]
   34288:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3428c:	mov	r0, r3
   34290:	bl	26d44 <flatcc_builder_get_user_frame_ptr@@Base>
   34294:	str	r0, [fp, #-20]	; 0xffffffec
   34298:	ldr	r2, [fp, #-20]	; 0xffffffec
   3429c:	ldr	r3, [fp, #-16]
   342a0:	add	r3, r2, r3
   342a4:	ldrb	r2, [r3]
   342a8:	sub	r3, fp, #28
   342ac:	str	r3, [sp]
   342b0:	ldr	r4, [fp, #12]
   342b4:	mov	r3, r2
   342b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   342bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   342c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   342c4:	blx	r4
   342c8:	str	r0, [fp, #-44]	; 0xffffffd4
   342cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   342d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   342d4:	cmp	r2, r3
   342d8:	bne	342e4 <flatcc_json_parser_union_type@@Base+0x368>
   342dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   342e0:	b	34420 <flatcc_json_parser_union_type@@Base+0x4a4>
   342e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   342e8:	ldr	r3, [r3]
   342ec:	mov	r1, #1
   342f0:	mov	r0, r3
   342f4:	bl	282a4 <flatcc_builder_extend_offset_vector@@Base>
   342f8:	str	r0, [fp, #-24]	; 0xffffffe8
   342fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34300:	cmp	r3, #0
   34304:	beq	343f4 <flatcc_json_parser_union_type@@Base+0x478>
   34308:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3430c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34310:	str	r2, [r3]
   34314:	sub	r3, fp, #32
   34318:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3431c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   34320:	ldr	r0, [fp, #-40]	; 0xffffffd8
   34324:	bl	2cee8 <flatcc_emitter_copy_buffer@@Base+0x8d0>
   34328:	str	r0, [fp, #-44]	; 0xffffffd4
   3432c:	ldr	r3, [fp, #-16]
   34330:	add	r3, r3, #1
   34334:	str	r3, [fp, #-16]
   34338:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3433c:	cmp	r3, #0
   34340:	bne	34254 <flatcc_json_parser_union_type@@Base+0x2d8>
   34344:	ldr	r2, [fp, #-16]
   34348:	ldr	r3, [fp, #4]
   3434c:	cmp	r2, r3
   34350:	beq	34370 <flatcc_json_parser_union_type@@Base+0x3f4>
   34354:	mov	r3, #30
   34358:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3435c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   34360:	ldr	r0, [fp, #-40]	; 0xffffffd8
   34364:	bl	3198c <flatcc_json_parser_set_error@@Base>
   34368:	mov	r3, r0
   3436c:	b	34420 <flatcc_json_parser_union_type@@Base+0x4a4>
   34370:	ldr	r3, [fp, #-40]	; 0xffffffd8
   34374:	ldr	r3, [r3]
   34378:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3437c:	mov	r0, r3
   34380:	bl	26d44 <flatcc_builder_get_user_frame_ptr@@Base>
   34384:	str	r0, [fp, #-20]	; 0xffffffec
   34388:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3438c:	ldr	r3, [r3]
   34390:	ldr	r1, [fp, #-20]	; 0xffffffec
   34394:	mov	r0, r3
   34398:	bl	2a0f0 <flatcc_builder_end_offset_vector_for_unions@@Base>
   3439c:	mov	r3, r0
   343a0:	str	r3, [fp, #-28]	; 0xffffffe4
   343a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   343a8:	cmp	r3, #0
   343ac:	beq	343fc <flatcc_json_parser_union_type@@Base+0x480>
   343b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   343b4:	ldr	r3, [r3]
   343b8:	ldrh	r2, [fp, #8]
   343bc:	mov	r1, r2
   343c0:	mov	r0, r3
   343c4:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   343c8:	str	r0, [fp, #-24]	; 0xffffffe8
   343cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   343d0:	cmp	r3, #0
   343d4:	beq	34404 <flatcc_json_parser_union_type@@Base+0x488>
   343d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   343dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   343e0:	str	r2, [r3]
   343e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   343e8:	b	34420 <flatcc_json_parser_union_type@@Base+0x4a4>
   343ec:	nop			; (mov r0, r0)
   343f0:	b	34408 <flatcc_json_parser_union_type@@Base+0x48c>
   343f4:	nop			; (mov r0, r0)
   343f8:	b	34408 <flatcc_json_parser_union_type@@Base+0x48c>
   343fc:	nop			; (mov r0, r0)
   34400:	b	34408 <flatcc_json_parser_union_type@@Base+0x48c>
   34404:	nop			; (mov r0, r0)
   34408:	mov	r3, #33	; 0x21
   3440c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   34410:	ldr	r1, [fp, #-44]	; 0xffffffd4
   34414:	ldr	r0, [fp, #-40]	; 0xffffffd8
   34418:	bl	3198c <flatcc_json_parser_set_error@@Base>
   3441c:	mov	r3, r0
   34420:	mov	r0, r3
   34424:	sub	sp, fp, #8
   34428:	pop	{r4, fp, pc}

0003442c <flatcc_json_parser_union_vector@@Base>:
   3442c:	push	{fp, lr}
   34430:	add	fp, sp, #4
   34434:	sub	sp, sp, #40	; 0x28
   34438:	str	r0, [fp, #-16]
   3443c:	str	r1, [fp, #-20]	; 0xffffffec
   34440:	str	r2, [fp, #-24]	; 0xffffffe8
   34444:	str	r3, [fp, #-28]	; 0xffffffe4
   34448:	ldr	r3, [fp, #-16]
   3444c:	ldr	r3, [r3]
   34450:	ldr	r1, [fp, #8]
   34454:	mov	r0, r3
   34458:	bl	26d44 <flatcc_builder_get_user_frame_ptr@@Base>
   3445c:	str	r0, [fp, #-8]
   34460:	ldr	r3, [fp, #-8]
   34464:	add	r1, r3, #8
   34468:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3446c:	mov	r3, r2
   34470:	lsl	r3, r3, #1
   34474:	add	r3, r3, r2
   34478:	lsl	r3, r3, #3
   3447c:	add	r3, r1, r3
   34480:	str	r3, [fp, #-12]
   34484:	ldr	r3, [fp, #-12]
   34488:	ldr	r3, [r3]
   3448c:	cmp	r3, #0
   34490:	beq	344b0 <flatcc_json_parser_union_vector@@Base+0x84>
   34494:	mov	r3, #28
   34498:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3449c:	ldr	r1, [fp, #-20]	; 0xffffffec
   344a0:	ldr	r0, [fp, #-16]
   344a4:	bl	3198c <flatcc_json_parser_set_error@@Base>
   344a8:	mov	r3, r0
   344ac:	b	34574 <flatcc_json_parser_union_vector@@Base+0x148>
   344b0:	ldr	r3, [fp, #-12]
   344b4:	ldrb	r3, [r3, #12]
   344b8:	cmp	r3, #0
   344bc:	bne	34520 <flatcc_json_parser_union_vector@@Base+0xf4>
   344c0:	ldr	r3, [fp, #-8]
   344c4:	ldr	r3, [r3, #4]
   344c8:	add	r2, r3, #1
   344cc:	ldr	r3, [fp, #-8]
   344d0:	str	r2, [r3, #4]
   344d4:	ldr	r3, [fp, #-16]
   344d8:	ldr	r2, [r3, #16]
   344dc:	ldr	r3, [fp, #-12]
   344e0:	str	r2, [r3, #8]
   344e4:	ldr	r3, [fp, #-16]
   344e8:	ldr	r2, [r3, #4]
   344ec:	ldr	r3, [fp, #-12]
   344f0:	str	r2, [r3, #4]
   344f4:	ldr	r3, [fp, #-12]
   344f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   344fc:	str	r2, [r3]
   34500:	ldr	r3, [fp, #-12]
   34504:	ldr	r3, [r3]
   34508:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3450c:	mov	r1, r3
   34510:	ldr	r0, [fp, #-16]
   34514:	bl	331a0 <flatcc_json_parser_generic_json@@Base>
   34518:	str	r0, [fp, #-20]	; 0xffffffec
   3451c:	b	34570 <flatcc_json_parser_union_vector@@Base+0x144>
   34520:	ldr	r3, [fp, #-8]
   34524:	ldr	r3, [r3, #4]
   34528:	sub	r2, r3, #1
   3452c:	ldr	r3, [fp, #-8]
   34530:	str	r2, [r3, #4]
   34534:	ldr	r3, [fp, #-12]
   34538:	ldr	r1, [r3, #20]
   3453c:	ldr	r3, [fp, #-12]
   34540:	ldr	r3, [r3, #16]
   34544:	ldr	r2, [fp, #12]
   34548:	str	r2, [sp, #8]
   3454c:	ldrh	r2, [fp, #4]
   34550:	str	r2, [sp, #4]
   34554:	str	r3, [sp]
   34558:	mov	r3, r1
   3455c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34560:	ldr	r1, [fp, #-20]	; 0xffffffec
   34564:	ldr	r0, [fp, #-16]
   34568:	bl	341f0 <flatcc_json_parser_union_type@@Base+0x274>
   3456c:	str	r0, [fp, #-20]	; 0xffffffec
   34570:	ldr	r3, [fp, #-20]	; 0xffffffec
   34574:	mov	r0, r3
   34578:	sub	sp, fp, #4
   3457c:	pop	{fp, pc}

00034580 <flatcc_json_parser_union_type_vector@@Base>:
   34580:	push	{fp, lr}
   34584:	add	fp, sp, #4
   34588:	sub	sp, sp, #88	; 0x58
   3458c:	str	r0, [fp, #-64]	; 0xffffffc0
   34590:	str	r1, [fp, #-68]	; 0xffffffbc
   34594:	str	r2, [fp, #-72]	; 0xffffffb8
   34598:	str	r3, [fp, #-76]	; 0xffffffb4
   3459c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   345a0:	ldr	r3, [r3]
   345a4:	ldr	r1, [fp, #8]
   345a8:	mov	r0, r3
   345ac:	bl	26d44 <flatcc_builder_get_user_frame_ptr@@Base>
   345b0:	str	r0, [fp, #-8]
   345b4:	ldr	r3, [fp, #-8]
   345b8:	add	r1, r3, #8
   345bc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   345c0:	mov	r3, r2
   345c4:	lsl	r3, r3, #1
   345c8:	add	r3, r3, r2
   345cc:	lsl	r3, r3, #3
   345d0:	add	r3, r1, r3
   345d4:	str	r3, [fp, #-12]
   345d8:	ldr	r3, [fp, #-12]
   345dc:	ldrb	r3, [r3, #12]
   345e0:	cmp	r3, #0
   345e4:	beq	34604 <flatcc_json_parser_union_type_vector@@Base+0x84>
   345e8:	mov	r3, #28
   345ec:	ldr	r2, [fp, #-72]	; 0xffffffb8
   345f0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   345f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   345f8:	bl	3198c <flatcc_json_parser_set_error@@Base>
   345fc:	mov	r3, r0
   34600:	b	349d4 <flatcc_json_parser_union_type_vector@@Base+0x454>
   34604:	ldr	r3, [fp, #-12]
   34608:	mov	r2, #1
   3460c:	strb	r2, [r3, #12]
   34610:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34614:	ldr	r0, [r3]
   34618:	mvn	r3, #0
   3461c:	mov	r2, #1
   34620:	mov	r1, #1
   34624:	bl	2894c <flatcc_builder_start_vector@@Base>
   34628:	mov	r3, r0
   3462c:	cmp	r3, #0
   34630:	bne	349a0 <flatcc_json_parser_union_type_vector@@Base+0x420>
   34634:	sub	r3, fp, #56	; 0x38
   34638:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3463c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   34640:	ldr	r0, [fp, #-64]	; 0xffffffc0
   34644:	bl	2ce00 <flatcc_emitter_copy_buffer@@Base+0x7e8>
   34648:	str	r0, [fp, #-68]	; 0xffffffbc
   3464c:	b	34768 <flatcc_json_parser_union_type_vector@@Base+0x1e8>
   34650:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34654:	ldr	r3, [r3]
   34658:	mov	r1, #1
   3465c:	mov	r0, r3
   34660:	bl	2805c <flatcc_builder_extend_vector@@Base>
   34664:	str	r0, [fp, #-16]
   34668:	ldr	r3, [fp, #-16]
   3466c:	cmp	r3, #0
   34670:	beq	349a8 <flatcc_json_parser_union_type_vector@@Base+0x428>
   34674:	ldr	r3, [fp, #-68]	; 0xffffffbc
   34678:	str	r3, [fp, #-20]	; 0xffffffec
   3467c:	sub	r3, fp, #57	; 0x39
   34680:	ldr	r2, [fp, #-72]	; 0xffffffb8
   34684:	ldr	r1, [fp, #-20]	; 0xffffffec
   34688:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3468c:	bl	2d698 <flatcc_emitter_copy_buffer@@Base+0x1080>
   34690:	str	r0, [fp, #-68]	; 0xffffffbc
   34694:	ldr	r2, [fp, #-20]	; 0xffffffec
   34698:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3469c:	cmp	r2, r3
   346a0:	bne	346ec <flatcc_json_parser_union_type_vector@@Base+0x16c>
   346a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   346a8:	str	r3, [fp, #-20]	; 0xffffffec
   346ac:	sub	r3, fp, #57	; 0x39
   346b0:	str	r3, [sp]
   346b4:	ldr	r3, [fp, #12]
   346b8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   346bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   346c0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   346c4:	bl	2dcdc <flatcc_emitter_copy_buffer@@Base+0x16c4>
   346c8:	str	r0, [fp, #-68]	; 0xffffffbc
   346cc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   346d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   346d4:	cmp	r2, r3
   346d8:	beq	349bc <flatcc_json_parser_union_type_vector@@Base+0x43c>
   346dc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   346e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   346e4:	cmp	r2, r3
   346e8:	beq	349bc <flatcc_json_parser_union_type_vector@@Base+0x43c>
   346ec:	ldrb	r2, [fp, #-57]	; 0xffffffc7
   346f0:	ldr	r3, [fp, #20]
   346f4:	mov	r0, r2
   346f8:	blx	r3
   346fc:	mov	r3, r0
   34700:	cmp	r3, #0
   34704:	bne	34740 <flatcc_json_parser_union_type_vector@@Base+0x1c0>
   34708:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3470c:	ldr	r3, [r3, #8]
   34710:	and	r3, r3, #1
   34714:	cmp	r3, #0
   34718:	bne	34738 <flatcc_json_parser_union_type_vector@@Base+0x1b8>
   3471c:	mov	r3, #15
   34720:	ldr	r2, [fp, #-72]	; 0xffffffb8
   34724:	ldr	r1, [fp, #-68]	; 0xffffffbc
   34728:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3472c:	bl	3198c <flatcc_json_parser_set_error@@Base>
   34730:	mov	r3, r0
   34734:	b	349d4 <flatcc_json_parser_union_type_vector@@Base+0x454>
   34738:	mov	r3, #0
   3473c:	strb	r3, [fp, #-57]	; 0xffffffc7
   34740:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   34744:	mov	r1, r3
   34748:	ldr	r0, [fp, #-16]
   3474c:	bl	2c780 <flatcc_emitter_copy_buffer@@Base+0x168>
   34750:	sub	r3, fp, #56	; 0x38
   34754:	ldr	r2, [fp, #-72]	; 0xffffffb8
   34758:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3475c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   34760:	bl	2cee8 <flatcc_emitter_copy_buffer@@Base+0x8d0>
   34764:	str	r0, [fp, #-68]	; 0xffffffbc
   34768:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3476c:	cmp	r3, #0
   34770:	bne	34650 <flatcc_json_parser_union_type_vector@@Base+0xd0>
   34774:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34778:	ldr	r3, [r3]
   3477c:	mov	r0, r3
   34780:	bl	29c74 <flatcc_builder_vector_count@@Base>
   34784:	str	r0, [fp, #-24]	; 0xffffffe8
   34788:	ldr	r3, [fp, #-12]
   3478c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34790:	str	r2, [r3, #16]
   34794:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34798:	str	r3, [fp, #-28]	; 0xffffffe4
   3479c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   347a0:	ldr	r3, [r3]
   347a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   347a8:	mov	r0, r3
   347ac:	bl	26b38 <flatcc_builder_enter_user_frame@@Base>
   347b0:	str	r0, [fp, #-32]	; 0xffffffe0
   347b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   347b8:	ldr	r3, [r3]
   347bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   347c0:	mov	r0, r3
   347c4:	bl	26d44 <flatcc_builder_get_user_frame_ptr@@Base>
   347c8:	str	r0, [fp, #-36]	; 0xffffffdc
   347cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   347d0:	ldr	r3, [r3]
   347d4:	mov	r0, r3
   347d8:	bl	29ca0 <flatcc_builder_vector_edit@@Base>
   347dc:	mov	r3, r0
   347e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   347e4:	mov	r1, r3
   347e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   347ec:	bl	125fc <memcpy@plt>
   347f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   347f4:	ldr	r3, [r3]
   347f8:	mov	r0, r3
   347fc:	bl	29ba4 <flatcc_builder_end_vector@@Base>
   34800:	str	r0, [fp, #-40]	; 0xffffffd8
   34804:	ldr	r3, [fp, #-40]	; 0xffffffd8
   34808:	cmp	r3, #0
   3480c:	beq	349b0 <flatcc_json_parser_union_type_vector@@Base+0x430>
   34810:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34814:	ldr	r2, [r3]
   34818:	ldrh	r3, [fp, #4]
   3481c:	sub	r3, r3, #1
   34820:	mov	r1, r3
   34824:	mov	r0, r2
   34828:	bl	2b334 <flatcc_builder_table_add_offset@@Base>
   3482c:	str	r0, [fp, #-44]	; 0xffffffd4
   34830:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34834:	cmp	r3, #0
   34838:	beq	349b8 <flatcc_json_parser_union_type_vector@@Base+0x438>
   3483c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34840:	ldr	r2, [fp, #-40]	; 0xffffffd8
   34844:	str	r2, [r3]
   34848:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3484c:	ldr	r3, [r3]
   34850:	ldr	r1, [fp, #8]
   34854:	mov	r0, r3
   34858:	bl	26d44 <flatcc_builder_get_user_frame_ptr@@Base>
   3485c:	str	r0, [fp, #-8]
   34860:	ldr	r3, [fp, #-8]
   34864:	add	r1, r3, #8
   34868:	ldr	r2, [fp, #-76]	; 0xffffffb4
   3486c:	mov	r3, r2
   34870:	lsl	r3, r3, #1
   34874:	add	r3, r3, r2
   34878:	lsl	r3, r3, #3
   3487c:	add	r3, r1, r3
   34880:	str	r3, [fp, #-12]
   34884:	ldr	r3, [fp, #-12]
   34888:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3488c:	str	r2, [r3, #20]
   34890:	ldr	r3, [fp, #-12]
   34894:	ldr	r3, [r3]
   34898:	cmp	r3, #0
   3489c:	bne	348bc <flatcc_json_parser_union_type_vector@@Base+0x33c>
   348a0:	ldr	r3, [fp, #-8]
   348a4:	ldr	r3, [r3, #4]
   348a8:	add	r2, r3, #1
   348ac:	ldr	r3, [fp, #-8]
   348b0:	str	r2, [r3, #4]
   348b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   348b8:	b	349d4 <flatcc_json_parser_union_type_vector@@Base+0x454>
   348bc:	ldr	r3, [fp, #-8]
   348c0:	ldr	r3, [r3, #4]
   348c4:	cmp	r3, #0
   348c8:	bne	348ec <flatcc_json_parser_union_type_vector@@Base+0x36c>
   348cc:	ldr	r3, [pc, #268]	; 349e0 <flatcc_json_parser_union_type_vector@@Base+0x460>
   348d0:	add	r3, pc, r3
   348d4:	ldr	r2, [pc, #264]	; 349e4 <flatcc_json_parser_union_type_vector@@Base+0x464>
   348d8:	ldr	r1, [pc, #264]	; 349e8 <flatcc_json_parser_union_type_vector@@Base+0x468>
   348dc:	add	r1, pc, r1
   348e0:	ldr	r0, [pc, #260]	; 349ec <flatcc_json_parser_union_type_vector@@Base+0x46c>
   348e4:	add	r0, pc, r0
   348e8:	bl	12704 <__assert_fail@plt>
   348ec:	ldr	r3, [fp, #-8]
   348f0:	ldr	r3, [r3, #4]
   348f4:	sub	r2, r3, #1
   348f8:	ldr	r3, [fp, #-8]
   348fc:	str	r2, [r3, #4]
   34900:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34904:	ldr	r3, [r3, #16]
   34908:	str	r3, [fp, #-48]	; 0xffffffd0
   3490c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34910:	ldr	r3, [r3, #4]
   34914:	str	r3, [fp, #-52]	; 0xffffffcc
   34918:	ldr	r3, [fp, #-12]
   3491c:	ldr	r2, [r3, #8]
   34920:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34924:	str	r2, [r3, #16]
   34928:	ldr	r3, [fp, #-12]
   3492c:	ldr	r2, [r3, #4]
   34930:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34934:	str	r2, [r3, #4]
   34938:	ldr	r3, [fp, #-12]
   3493c:	ldr	r1, [r3]
   34940:	ldr	r3, [fp, #16]
   34944:	str	r3, [sp, #8]
   34948:	ldrh	r3, [fp, #4]
   3494c:	str	r3, [sp, #4]
   34950:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34954:	str	r3, [sp]
   34958:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3495c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   34960:	ldr	r0, [fp, #-64]	; 0xffffffc0
   34964:	bl	341f0 <flatcc_json_parser_union_type@@Base+0x274>
   34968:	mov	r2, r0
   3496c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   34970:	cmp	r2, r3
   34974:	bne	34980 <flatcc_json_parser_union_type_vector@@Base+0x400>
   34978:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3497c:	b	349d4 <flatcc_json_parser_union_type_vector@@Base+0x454>
   34980:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34984:	ldr	r2, [fp, #-48]	; 0xffffffd0
   34988:	str	r2, [r3, #16]
   3498c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34990:	ldr	r2, [fp, #-52]	; 0xffffffcc
   34994:	str	r2, [r3, #4]
   34998:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3499c:	b	349d4 <flatcc_json_parser_union_type_vector@@Base+0x454>
   349a0:	nop			; (mov r0, r0)
   349a4:	b	349bc <flatcc_json_parser_union_type_vector@@Base+0x43c>
   349a8:	nop			; (mov r0, r0)
   349ac:	b	349bc <flatcc_json_parser_union_type_vector@@Base+0x43c>
   349b0:	nop			; (mov r0, r0)
   349b4:	b	349bc <flatcc_json_parser_union_type_vector@@Base+0x43c>
   349b8:	nop			; (mov r0, r0)
   349bc:	mov	r3, #33	; 0x21
   349c0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   349c4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   349c8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   349cc:	bl	3198c <flatcc_json_parser_set_error@@Base>
   349d0:	mov	r3, r0
   349d4:	mov	r0, r3
   349d8:	sub	sp, fp, #4
   349dc:	pop	{fp, pc}
   349e0:	andeq	r2, r0, r4, lsl #21
   349e4:	andeq	r0, r0, r2, ror #8
   349e8:	andeq	r2, r0, r8, ror r5
   349ec:	ldrdeq	r2, [r0], -r4

000349f0 <flatcc_json_parser_table_as_root@@Base>:
   349f0:	push	{r4, fp, lr}
   349f4:	add	fp, sp, #8
   349f8:	sub	sp, sp, #84	; 0x54
   349fc:	str	r0, [fp, #-72]	; 0xffffffb8
   34a00:	str	r1, [fp, #-76]	; 0xffffffb4
   34a04:	str	r2, [fp, #-80]	; 0xffffffb0
   34a08:	str	r3, [fp, #-84]	; 0xffffffac
   34a0c:	ldr	r3, [fp, #4]
   34a10:	and	r3, r3, #4
   34a14:	cmp	r3, #0
   34a18:	beq	34a24 <flatcc_json_parser_table_as_root@@Base+0x34>
   34a1c:	mov	r3, #2
   34a20:	b	34a28 <flatcc_json_parser_table_as_root@@Base+0x38>
   34a24:	mov	r3, #0
   34a28:	str	r3, [fp, #-16]
   34a2c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   34a30:	cmp	r3, #0
   34a34:	bne	34a40 <flatcc_json_parser_table_as_root@@Base+0x50>
   34a38:	sub	r3, fp, #60	; 0x3c
   34a3c:	b	34a44 <flatcc_json_parser_table_as_root@@Base+0x54>
   34a40:	ldr	r3, [fp, #-76]	; 0xffffffb4
   34a44:	str	r3, [fp, #-76]	; 0xffffffb4
   34a48:	ldr	r2, [fp, #-80]	; 0xffffffb0
   34a4c:	ldr	r3, [fp, #-84]	; 0xffffffac
   34a50:	add	r2, r2, r3
   34a54:	ldr	r3, [fp, #4]
   34a58:	str	r3, [sp]
   34a5c:	mov	r3, r2
   34a60:	ldr	r2, [fp, #-80]	; 0xffffffb0
   34a64:	ldr	r1, [fp, #-72]	; 0xffffffb8
   34a68:	ldr	r0, [fp, #-76]	; 0xffffffb4
   34a6c:	bl	2c7c0 <flatcc_emitter_copy_buffer@@Base+0x1a8>
   34a70:	ldr	r3, [fp, #-16]
   34a74:	mov	r2, #0
   34a78:	ldr	r1, [fp, #8]
   34a7c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   34a80:	bl	27ba0 <flatcc_builder_start_buffer@@Base>
   34a84:	mov	r3, r0
   34a88:	cmp	r3, #0
   34a8c:	beq	34a98 <flatcc_json_parser_table_as_root@@Base+0xa8>
   34a90:	mvn	r3, #0
   34a94:	b	34b08 <flatcc_json_parser_table_as_root@@Base+0x118>
   34a98:	ldr	r2, [fp, #-80]	; 0xffffffb0
   34a9c:	ldr	r3, [fp, #-84]	; 0xffffffac
   34aa0:	add	r2, r2, r3
   34aa4:	sub	r3, fp, #64	; 0x40
   34aa8:	ldr	r4, [fp, #12]
   34aac:	ldr	r1, [fp, #-80]	; 0xffffffb0
   34ab0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   34ab4:	blx	r4
   34ab8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   34abc:	ldr	r3, [r3, #24]
   34ac0:	cmp	r3, #0
   34ac4:	beq	34ad4 <flatcc_json_parser_table_as_root@@Base+0xe4>
   34ac8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   34acc:	ldr	r3, [r3, #24]
   34ad0:	b	34b08 <flatcc_json_parser_table_as_root@@Base+0x118>
   34ad4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34ad8:	mov	r1, r3
   34adc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   34ae0:	bl	27cf8 <flatcc_builder_end_buffer@@Base>
   34ae4:	mov	r3, r0
   34ae8:	cmp	r3, #0
   34aec:	bne	34af8 <flatcc_json_parser_table_as_root@@Base+0x108>
   34af0:	mvn	r3, #0
   34af4:	b	34b08 <flatcc_json_parser_table_as_root@@Base+0x118>
   34af8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   34afc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   34b00:	str	r2, [r3, #40]	; 0x28
   34b04:	mov	r3, #0
   34b08:	mov	r0, r3
   34b0c:	sub	sp, fp, #8
   34b10:	pop	{r4, fp, pc}

00034b14 <flatcc_json_parser_struct_as_root@@Base>:
   34b14:	push	{r4, fp, lr}
   34b18:	add	fp, sp, #8
   34b1c:	sub	sp, sp, #84	; 0x54
   34b20:	str	r0, [fp, #-72]	; 0xffffffb8
   34b24:	str	r1, [fp, #-76]	; 0xffffffb4
   34b28:	str	r2, [fp, #-80]	; 0xffffffb0
   34b2c:	str	r3, [fp, #-84]	; 0xffffffac
   34b30:	ldr	r3, [fp, #4]
   34b34:	and	r3, r3, #4
   34b38:	cmp	r3, #0
   34b3c:	beq	34b48 <flatcc_json_parser_struct_as_root@@Base+0x34>
   34b40:	mov	r3, #2
   34b44:	b	34b4c <flatcc_json_parser_struct_as_root@@Base+0x38>
   34b48:	mov	r3, #0
   34b4c:	str	r3, [fp, #-16]
   34b50:	ldr	r3, [fp, #-76]	; 0xffffffb4
   34b54:	cmp	r3, #0
   34b58:	bne	34b64 <flatcc_json_parser_struct_as_root@@Base+0x50>
   34b5c:	sub	r3, fp, #60	; 0x3c
   34b60:	b	34b68 <flatcc_json_parser_struct_as_root@@Base+0x54>
   34b64:	ldr	r3, [fp, #-76]	; 0xffffffb4
   34b68:	str	r3, [fp, #-76]	; 0xffffffb4
   34b6c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   34b70:	ldr	r3, [fp, #-84]	; 0xffffffac
   34b74:	add	r2, r2, r3
   34b78:	ldr	r3, [fp, #4]
   34b7c:	str	r3, [sp]
   34b80:	mov	r3, r2
   34b84:	ldr	r2, [fp, #-80]	; 0xffffffb0
   34b88:	ldr	r1, [fp, #-72]	; 0xffffffb8
   34b8c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   34b90:	bl	2c7c0 <flatcc_emitter_copy_buffer@@Base+0x1a8>
   34b94:	ldr	r3, [fp, #-16]
   34b98:	mov	r2, #0
   34b9c:	ldr	r1, [fp, #8]
   34ba0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   34ba4:	bl	27ba0 <flatcc_builder_start_buffer@@Base>
   34ba8:	mov	r3, r0
   34bac:	cmp	r3, #0
   34bb0:	beq	34bbc <flatcc_json_parser_struct_as_root@@Base+0xa8>
   34bb4:	mvn	r3, #0
   34bb8:	b	34c2c <flatcc_json_parser_struct_as_root@@Base+0x118>
   34bbc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   34bc0:	ldr	r3, [fp, #-84]	; 0xffffffac
   34bc4:	add	r2, r2, r3
   34bc8:	sub	r3, fp, #64	; 0x40
   34bcc:	ldr	r4, [fp, #12]
   34bd0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   34bd4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   34bd8:	blx	r4
   34bdc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   34be0:	ldr	r3, [r3, #24]
   34be4:	cmp	r3, #0
   34be8:	beq	34bf8 <flatcc_json_parser_struct_as_root@@Base+0xe4>
   34bec:	ldr	r3, [fp, #-76]	; 0xffffffb4
   34bf0:	ldr	r3, [r3, #24]
   34bf4:	b	34c2c <flatcc_json_parser_struct_as_root@@Base+0x118>
   34bf8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34bfc:	mov	r1, r3
   34c00:	ldr	r0, [fp, #-72]	; 0xffffffb8
   34c04:	bl	27cf8 <flatcc_builder_end_buffer@@Base>
   34c08:	mov	r3, r0
   34c0c:	cmp	r3, #0
   34c10:	bne	34c1c <flatcc_json_parser_struct_as_root@@Base+0x108>
   34c14:	mvn	r3, #0
   34c18:	b	34c2c <flatcc_json_parser_struct_as_root@@Base+0x118>
   34c1c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   34c20:	ldr	r2, [fp, #-80]	; 0xffffffb0
   34c24:	str	r2, [r3, #40]	; 0x28
   34c28:	mov	r3, #0
   34c2c:	mov	r0, r3
   34c30:	sub	sp, fp, #8
   34c34:	pop	{r4, fp, pc}
   34c38:	cmp	r1, #0
   34c3c:	beq	34e48 <flatcc_json_parser_struct_as_root@@Base+0x334>
   34c40:	eor	ip, r0, r1
   34c44:	rsbmi	r1, r1, #0
   34c48:	subs	r2, r1, #1
   34c4c:	beq	34e14 <flatcc_json_parser_struct_as_root@@Base+0x300>
   34c50:	movs	r3, r0
   34c54:	rsbmi	r3, r0, #0
   34c58:	cmp	r3, r1
   34c5c:	bls	34e20 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   34c60:	tst	r1, r2
   34c64:	beq	34e30 <flatcc_json_parser_struct_as_root@@Base+0x31c>
   34c68:	clz	r2, r3
   34c6c:	clz	r0, r1
   34c70:	sub	r2, r0, r2
   34c74:	rsbs	r2, r2, #31
   34c78:	addne	r2, r2, r2, lsl #1
   34c7c:	mov	r0, #0
   34c80:	addne	pc, pc, r2, lsl #2
   34c84:	nop			; (mov r0, r0)
   34c88:	cmp	r3, r1, lsl #31
   34c8c:	adc	r0, r0, r0
   34c90:	subcs	r3, r3, r1, lsl #31
   34c94:	cmp	r3, r1, lsl #30
   34c98:	adc	r0, r0, r0
   34c9c:	subcs	r3, r3, r1, lsl #30
   34ca0:	cmp	r3, r1, lsl #29
   34ca4:	adc	r0, r0, r0
   34ca8:	subcs	r3, r3, r1, lsl #29
   34cac:	cmp	r3, r1, lsl #28
   34cb0:	adc	r0, r0, r0
   34cb4:	subcs	r3, r3, r1, lsl #28
   34cb8:	cmp	r3, r1, lsl #27
   34cbc:	adc	r0, r0, r0
   34cc0:	subcs	r3, r3, r1, lsl #27
   34cc4:	cmp	r3, r1, lsl #26
   34cc8:	adc	r0, r0, r0
   34ccc:	subcs	r3, r3, r1, lsl #26
   34cd0:	cmp	r3, r1, lsl #25
   34cd4:	adc	r0, r0, r0
   34cd8:	subcs	r3, r3, r1, lsl #25
   34cdc:	cmp	r3, r1, lsl #24
   34ce0:	adc	r0, r0, r0
   34ce4:	subcs	r3, r3, r1, lsl #24
   34ce8:	cmp	r3, r1, lsl #23
   34cec:	adc	r0, r0, r0
   34cf0:	subcs	r3, r3, r1, lsl #23
   34cf4:	cmp	r3, r1, lsl #22
   34cf8:	adc	r0, r0, r0
   34cfc:	subcs	r3, r3, r1, lsl #22
   34d00:	cmp	r3, r1, lsl #21
   34d04:	adc	r0, r0, r0
   34d08:	subcs	r3, r3, r1, lsl #21
   34d0c:	cmp	r3, r1, lsl #20
   34d10:	adc	r0, r0, r0
   34d14:	subcs	r3, r3, r1, lsl #20
   34d18:	cmp	r3, r1, lsl #19
   34d1c:	adc	r0, r0, r0
   34d20:	subcs	r3, r3, r1, lsl #19
   34d24:	cmp	r3, r1, lsl #18
   34d28:	adc	r0, r0, r0
   34d2c:	subcs	r3, r3, r1, lsl #18
   34d30:	cmp	r3, r1, lsl #17
   34d34:	adc	r0, r0, r0
   34d38:	subcs	r3, r3, r1, lsl #17
   34d3c:	cmp	r3, r1, lsl #16
   34d40:	adc	r0, r0, r0
   34d44:	subcs	r3, r3, r1, lsl #16
   34d48:	cmp	r3, r1, lsl #15
   34d4c:	adc	r0, r0, r0
   34d50:	subcs	r3, r3, r1, lsl #15
   34d54:	cmp	r3, r1, lsl #14
   34d58:	adc	r0, r0, r0
   34d5c:	subcs	r3, r3, r1, lsl #14
   34d60:	cmp	r3, r1, lsl #13
   34d64:	adc	r0, r0, r0
   34d68:	subcs	r3, r3, r1, lsl #13
   34d6c:	cmp	r3, r1, lsl #12
   34d70:	adc	r0, r0, r0
   34d74:	subcs	r3, r3, r1, lsl #12
   34d78:	cmp	r3, r1, lsl #11
   34d7c:	adc	r0, r0, r0
   34d80:	subcs	r3, r3, r1, lsl #11
   34d84:	cmp	r3, r1, lsl #10
   34d88:	adc	r0, r0, r0
   34d8c:	subcs	r3, r3, r1, lsl #10
   34d90:	cmp	r3, r1, lsl #9
   34d94:	adc	r0, r0, r0
   34d98:	subcs	r3, r3, r1, lsl #9
   34d9c:	cmp	r3, r1, lsl #8
   34da0:	adc	r0, r0, r0
   34da4:	subcs	r3, r3, r1, lsl #8
   34da8:	cmp	r3, r1, lsl #7
   34dac:	adc	r0, r0, r0
   34db0:	subcs	r3, r3, r1, lsl #7
   34db4:	cmp	r3, r1, lsl #6
   34db8:	adc	r0, r0, r0
   34dbc:	subcs	r3, r3, r1, lsl #6
   34dc0:	cmp	r3, r1, lsl #5
   34dc4:	adc	r0, r0, r0
   34dc8:	subcs	r3, r3, r1, lsl #5
   34dcc:	cmp	r3, r1, lsl #4
   34dd0:	adc	r0, r0, r0
   34dd4:	subcs	r3, r3, r1, lsl #4
   34dd8:	cmp	r3, r1, lsl #3
   34ddc:	adc	r0, r0, r0
   34de0:	subcs	r3, r3, r1, lsl #3
   34de4:	cmp	r3, r1, lsl #2
   34de8:	adc	r0, r0, r0
   34dec:	subcs	r3, r3, r1, lsl #2
   34df0:	cmp	r3, r1, lsl #1
   34df4:	adc	r0, r0, r0
   34df8:	subcs	r3, r3, r1, lsl #1
   34dfc:	cmp	r3, r1
   34e00:	adc	r0, r0, r0
   34e04:	subcs	r3, r3, r1
   34e08:	cmp	ip, #0
   34e0c:	rsbmi	r0, r0, #0
   34e10:	bx	lr
   34e14:	teq	ip, r0
   34e18:	rsbmi	r0, r0, #0
   34e1c:	bx	lr
   34e20:	movcc	r0, #0
   34e24:	asreq	r0, ip, #31
   34e28:	orreq	r0, r0, #1
   34e2c:	bx	lr
   34e30:	clz	r2, r1
   34e34:	rsb	r2, r2, #31
   34e38:	cmp	ip, #0
   34e3c:	lsr	r0, r3, r2
   34e40:	rsbmi	r0, r0, #0
   34e44:	bx	lr
   34e48:	cmp	r0, #0
   34e4c:	mvngt	r0, #-2147483648	; 0x80000000
   34e50:	movlt	r0, #-2147483648	; 0x80000000
   34e54:	b	35480 <flatcc_json_parser_struct_as_root@@Base+0x96c>
   34e58:	cmp	r1, #0
   34e5c:	beq	34e48 <flatcc_json_parser_struct_as_root@@Base+0x334>
   34e60:	push	{r0, r1, lr}
   34e64:	bl	34c40 <flatcc_json_parser_struct_as_root@@Base+0x12c>
   34e68:	pop	{r1, r2, lr}
   34e6c:	mul	r3, r2, r0
   34e70:	sub	r1, r1, r3
   34e74:	bx	lr
   34e78:	eor	r1, r1, #-2147483648	; 0x80000000
   34e7c:	b	34e84 <flatcc_json_parser_struct_as_root@@Base+0x370>
   34e80:	eor	r3, r3, #-2147483648	; 0x80000000
   34e84:	push	{r4, r5, lr}
   34e88:	lsl	r4, r1, #1
   34e8c:	lsl	r5, r3, #1
   34e90:	teq	r4, r5
   34e94:	teqeq	r0, r2
   34e98:	orrsne	ip, r4, r0
   34e9c:	orrsne	ip, r5, r2
   34ea0:	mvnsne	ip, r4, asr #21
   34ea4:	mvnsne	ip, r5, asr #21
   34ea8:	beq	35094 <flatcc_json_parser_struct_as_root@@Base+0x580>
   34eac:	lsr	r4, r4, #21
   34eb0:	rsbs	r5, r4, r5, lsr #21
   34eb4:	rsblt	r5, r5, #0
   34eb8:	ble	34ed8 <flatcc_json_parser_struct_as_root@@Base+0x3c4>
   34ebc:	add	r4, r4, r5
   34ec0:	eor	r2, r0, r2
   34ec4:	eor	r3, r1, r3
   34ec8:	eor	r0, r2, r0
   34ecc:	eor	r1, r3, r1
   34ed0:	eor	r2, r0, r2
   34ed4:	eor	r3, r1, r3
   34ed8:	cmp	r5, #54	; 0x36
   34edc:	pophi	{r4, r5, pc}
   34ee0:	tst	r1, #-2147483648	; 0x80000000
   34ee4:	lsl	r1, r1, #12
   34ee8:	mov	ip, #1048576	; 0x100000
   34eec:	orr	r1, ip, r1, lsr #12
   34ef0:	beq	34efc <flatcc_json_parser_struct_as_root@@Base+0x3e8>
   34ef4:	rsbs	r0, r0, #0
   34ef8:	rsc	r1, r1, #0
   34efc:	tst	r3, #-2147483648	; 0x80000000
   34f00:	lsl	r3, r3, #12
   34f04:	orr	r3, ip, r3, lsr #12
   34f08:	beq	34f14 <flatcc_json_parser_struct_as_root@@Base+0x400>
   34f0c:	rsbs	r2, r2, #0
   34f10:	rsc	r3, r3, #0
   34f14:	teq	r4, r5
   34f18:	beq	3507c <flatcc_json_parser_struct_as_root@@Base+0x568>
   34f1c:	sub	r4, r4, #1
   34f20:	rsbs	lr, r5, #32
   34f24:	blt	34f40 <flatcc_json_parser_struct_as_root@@Base+0x42c>
   34f28:	lsl	ip, r2, lr
   34f2c:	adds	r0, r0, r2, lsr r5
   34f30:	adc	r1, r1, #0
   34f34:	adds	r0, r0, r3, lsl lr
   34f38:	adcs	r1, r1, r3, asr r5
   34f3c:	b	34f5c <flatcc_json_parser_struct_as_root@@Base+0x448>
   34f40:	sub	r5, r5, #32
   34f44:	add	lr, lr, #32
   34f48:	cmp	r2, #1
   34f4c:	lsl	ip, r3, lr
   34f50:	orrcs	ip, ip, #2
   34f54:	adds	r0, r0, r3, asr r5
   34f58:	adcs	r1, r1, r3, asr #31
   34f5c:	and	r5, r1, #-2147483648	; 0x80000000
   34f60:	bpl	34f70 <flatcc_json_parser_struct_as_root@@Base+0x45c>
   34f64:	rsbs	ip, ip, #0
   34f68:	rscs	r0, r0, #0
   34f6c:	rsc	r1, r1, #0
   34f70:	cmp	r1, #1048576	; 0x100000
   34f74:	bcc	34fb4 <flatcc_json_parser_struct_as_root@@Base+0x4a0>
   34f78:	cmp	r1, #2097152	; 0x200000
   34f7c:	bcc	34f9c <flatcc_json_parser_struct_as_root@@Base+0x488>
   34f80:	lsrs	r1, r1, #1
   34f84:	rrxs	r0, r0
   34f88:	rrx	ip, ip
   34f8c:	add	r4, r4, #1
   34f90:	lsl	r2, r4, #21
   34f94:	cmn	r2, #4194304	; 0x400000
   34f98:	bcs	350f4 <flatcc_json_parser_struct_as_root@@Base+0x5e0>
   34f9c:	cmp	ip, #-2147483648	; 0x80000000
   34fa0:	lsrseq	ip, r0, #1
   34fa4:	adcs	r0, r0, #0
   34fa8:	adc	r1, r1, r4, lsl #20
   34fac:	orr	r1, r1, r5
   34fb0:	pop	{r4, r5, pc}
   34fb4:	lsls	ip, ip, #1
   34fb8:	adcs	r0, r0, r0
   34fbc:	adc	r1, r1, r1
   34fc0:	tst	r1, #1048576	; 0x100000
   34fc4:	sub	r4, r4, #1
   34fc8:	bne	34f9c <flatcc_json_parser_struct_as_root@@Base+0x488>
   34fcc:	teq	r1, #0
   34fd0:	moveq	r1, r0
   34fd4:	moveq	r0, #0
   34fd8:	clz	r3, r1
   34fdc:	addeq	r3, r3, #32
   34fe0:	sub	r3, r3, #11
   34fe4:	subs	r2, r3, #32
   34fe8:	bge	3500c <flatcc_json_parser_struct_as_root@@Base+0x4f8>
   34fec:	adds	r2, r2, #12
   34ff0:	ble	35008 <flatcc_json_parser_struct_as_root@@Base+0x4f4>
   34ff4:	add	ip, r2, #20
   34ff8:	rsb	r2, r2, #12
   34ffc:	lsl	r0, r1, ip
   35000:	lsr	r1, r1, r2
   35004:	b	3501c <flatcc_json_parser_struct_as_root@@Base+0x508>
   35008:	add	r2, r2, #20
   3500c:	rsble	ip, r2, #32
   35010:	lsl	r1, r1, r2
   35014:	orrle	r1, r1, r0, lsr ip
   35018:	lslle	r0, r0, r2
   3501c:	subs	r4, r4, r3
   35020:	addge	r1, r1, r4, lsl #20
   35024:	orrge	r1, r1, r5
   35028:	popge	{r4, r5, pc}
   3502c:	mvn	r4, r4
   35030:	subs	r4, r4, #31
   35034:	bge	35070 <flatcc_json_parser_struct_as_root@@Base+0x55c>
   35038:	adds	r4, r4, #12
   3503c:	bgt	35058 <flatcc_json_parser_struct_as_root@@Base+0x544>
   35040:	add	r4, r4, #20
   35044:	rsb	r2, r4, #32
   35048:	lsr	r0, r0, r4
   3504c:	orr	r0, r0, r1, lsl r2
   35050:	orr	r1, r5, r1, lsr r4
   35054:	pop	{r4, r5, pc}
   35058:	rsb	r4, r4, #12
   3505c:	rsb	r2, r4, #32
   35060:	lsr	r0, r0, r2
   35064:	orr	r0, r0, r1, lsl r4
   35068:	mov	r1, r5
   3506c:	pop	{r4, r5, pc}
   35070:	lsr	r0, r1, r4
   35074:	mov	r1, r5
   35078:	pop	{r4, r5, pc}
   3507c:	teq	r4, #0
   35080:	eor	r3, r3, #1048576	; 0x100000
   35084:	eoreq	r1, r1, #1048576	; 0x100000
   35088:	addeq	r4, r4, #1
   3508c:	subne	r5, r5, #1
   35090:	b	34f1c <flatcc_json_parser_struct_as_root@@Base+0x408>
   35094:	mvns	ip, r4, asr #21
   35098:	mvnsne	ip, r5, asr #21
   3509c:	beq	35104 <flatcc_json_parser_struct_as_root@@Base+0x5f0>
   350a0:	teq	r4, r5
   350a4:	teqeq	r0, r2
   350a8:	beq	350bc <flatcc_json_parser_struct_as_root@@Base+0x5a8>
   350ac:	orrs	ip, r4, r0
   350b0:	moveq	r1, r3
   350b4:	moveq	r0, r2
   350b8:	pop	{r4, r5, pc}
   350bc:	teq	r1, r3
   350c0:	movne	r1, #0
   350c4:	movne	r0, #0
   350c8:	popne	{r4, r5, pc}
   350cc:	lsrs	ip, r4, #21
   350d0:	bne	350e4 <flatcc_json_parser_struct_as_root@@Base+0x5d0>
   350d4:	lsls	r0, r0, #1
   350d8:	adcs	r1, r1, r1
   350dc:	orrcs	r1, r1, #-2147483648	; 0x80000000
   350e0:	pop	{r4, r5, pc}
   350e4:	adds	r4, r4, #4194304	; 0x400000
   350e8:	addcc	r1, r1, #1048576	; 0x100000
   350ec:	popcc	{r4, r5, pc}
   350f0:	and	r5, r1, #-2147483648	; 0x80000000
   350f4:	orr	r1, r5, #2130706432	; 0x7f000000
   350f8:	orr	r1, r1, #15728640	; 0xf00000
   350fc:	mov	r0, #0
   35100:	pop	{r4, r5, pc}
   35104:	mvns	ip, r4, asr #21
   35108:	movne	r1, r3
   3510c:	movne	r0, r2
   35110:	mvnseq	ip, r5, asr #21
   35114:	movne	r3, r1
   35118:	movne	r2, r0
   3511c:	orrs	r4, r0, r1, lsl #12
   35120:	orrseq	r5, r2, r3, lsl #12
   35124:	teqeq	r1, r3
   35128:	orrne	r1, r1, #524288	; 0x80000
   3512c:	pop	{r4, r5, pc}
   35130:	teq	r0, #0
   35134:	moveq	r1, #0
   35138:	bxeq	lr
   3513c:	push	{r4, r5, lr}
   35140:	mov	r4, #1024	; 0x400
   35144:	add	r4, r4, #50	; 0x32
   35148:	mov	r5, #0
   3514c:	mov	r1, #0
   35150:	b	34fcc <flatcc_json_parser_struct_as_root@@Base+0x4b8>
   35154:	teq	r0, #0
   35158:	moveq	r1, #0
   3515c:	bxeq	lr
   35160:	push	{r4, r5, lr}
   35164:	mov	r4, #1024	; 0x400
   35168:	add	r4, r4, #50	; 0x32
   3516c:	ands	r5, r0, #-2147483648	; 0x80000000
   35170:	rsbmi	r0, r0, #0
   35174:	mov	r1, #0
   35178:	b	34fcc <flatcc_json_parser_struct_as_root@@Base+0x4b8>
   3517c:	lsls	r2, r0, #1
   35180:	asr	r1, r2, #3
   35184:	rrx	r1, r1
   35188:	lsl	r0, r2, #28
   3518c:	andsne	r3, r2, #-16777216	; 0xff000000
   35190:	teqne	r3, #-16777216	; 0xff000000
   35194:	eorne	r1, r1, #939524096	; 0x38000000
   35198:	bxne	lr
   3519c:	teq	r2, #0
   351a0:	teqne	r3, #-16777216	; 0xff000000
   351a4:	bxeq	lr
   351a8:	push	{r4, r5, lr}
   351ac:	mov	r4, #896	; 0x380
   351b0:	and	r5, r1, #-2147483648	; 0x80000000
   351b4:	bic	r1, r1, #-2147483648	; 0x80000000
   351b8:	b	34fcc <flatcc_json_parser_struct_as_root@@Base+0x4b8>
   351bc:	orrs	r2, r0, r1
   351c0:	bxeq	lr
   351c4:	push	{r4, r5, lr}
   351c8:	mov	r5, #0
   351cc:	b	351ec <flatcc_json_parser_struct_as_root@@Base+0x6d8>
   351d0:	orrs	r2, r0, r1
   351d4:	bxeq	lr
   351d8:	push	{r4, r5, lr}
   351dc:	ands	r5, r1, #-2147483648	; 0x80000000
   351e0:	bpl	351ec <flatcc_json_parser_struct_as_root@@Base+0x6d8>
   351e4:	rsbs	r0, r0, #0
   351e8:	rsc	r1, r1, #0
   351ec:	mov	r4, #1024	; 0x400
   351f0:	add	r4, r4, #50	; 0x32
   351f4:	lsrs	ip, r1, #22
   351f8:	beq	34f70 <flatcc_json_parser_struct_as_root@@Base+0x45c>
   351fc:	mov	r2, #3
   35200:	lsrs	ip, ip, #3
   35204:	addne	r2, r2, #3
   35208:	lsrs	ip, ip, #3
   3520c:	addne	r2, r2, #3
   35210:	add	r2, r2, ip, lsr #3
   35214:	rsb	r3, r2, #32
   35218:	lsl	ip, r0, r3
   3521c:	lsr	r0, r0, r2
   35220:	orr	r0, r0, r1, lsl r3
   35224:	lsr	r1, r1, r2
   35228:	add	r4, r4, r2
   3522c:	b	34f70 <flatcc_json_parser_struct_as_root@@Base+0x45c>
   35230:	eor	r0, r0, #-2147483648	; 0x80000000
   35234:	b	3523c <flatcc_json_parser_struct_as_root@@Base+0x728>
   35238:	eor	r1, r1, #-2147483648	; 0x80000000
   3523c:	lsls	r2, r0, #1
   35240:	lslsne	r3, r1, #1
   35244:	teqne	r2, r3
   35248:	mvnsne	ip, r2, asr #24
   3524c:	mvnsne	ip, r3, asr #24
   35250:	beq	35348 <flatcc_json_parser_struct_as_root@@Base+0x834>
   35254:	lsr	r2, r2, #24
   35258:	rsbs	r3, r2, r3, lsr #24
   3525c:	addgt	r2, r2, r3
   35260:	eorgt	r1, r0, r1
   35264:	eorgt	r0, r1, r0
   35268:	eorgt	r1, r0, r1
   3526c:	rsblt	r3, r3, #0
   35270:	cmp	r3, #25
   35274:	bxhi	lr
   35278:	tst	r0, #-2147483648	; 0x80000000
   3527c:	orr	r0, r0, #8388608	; 0x800000
   35280:	bic	r0, r0, #-16777216	; 0xff000000
   35284:	rsbne	r0, r0, #0
   35288:	tst	r1, #-2147483648	; 0x80000000
   3528c:	orr	r1, r1, #8388608	; 0x800000
   35290:	bic	r1, r1, #-16777216	; 0xff000000
   35294:	rsbne	r1, r1, #0
   35298:	teq	r2, r3
   3529c:	beq	35330 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   352a0:	sub	r2, r2, #1
   352a4:	adds	r0, r0, r1, asr r3
   352a8:	rsb	r3, r3, #32
   352ac:	lsl	r1, r1, r3
   352b0:	and	r3, r0, #-2147483648	; 0x80000000
   352b4:	bpl	352c0 <flatcc_json_parser_struct_as_root@@Base+0x7ac>
   352b8:	rsbs	r1, r1, #0
   352bc:	rsc	r0, r0, #0
   352c0:	cmp	r0, #8388608	; 0x800000
   352c4:	bcc	352f8 <flatcc_json_parser_struct_as_root@@Base+0x7e4>
   352c8:	cmp	r0, #16777216	; 0x1000000
   352cc:	bcc	352e4 <flatcc_json_parser_struct_as_root@@Base+0x7d0>
   352d0:	lsrs	r0, r0, #1
   352d4:	rrx	r1, r1
   352d8:	add	r2, r2, #1
   352dc:	cmp	r2, #254	; 0xfe
   352e0:	bcs	3539c <flatcc_json_parser_struct_as_root@@Base+0x888>
   352e4:	cmp	r1, #-2147483648	; 0x80000000
   352e8:	adc	r0, r0, r2, lsl #23
   352ec:	biceq	r0, r0, #1
   352f0:	orr	r0, r0, r3
   352f4:	bx	lr
   352f8:	lsls	r1, r1, #1
   352fc:	adc	r0, r0, r0
   35300:	tst	r0, #8388608	; 0x800000
   35304:	sub	r2, r2, #1
   35308:	bne	352e4 <flatcc_json_parser_struct_as_root@@Base+0x7d0>
   3530c:	clz	ip, r0
   35310:	sub	ip, ip, #8
   35314:	subs	r2, r2, ip
   35318:	lsl	r0, r0, ip
   3531c:	addge	r0, r0, r2, lsl #23
   35320:	rsblt	r2, r2, #0
   35324:	orrge	r0, r0, r3
   35328:	orrlt	r0, r3, r0, lsr r2
   3532c:	bx	lr
   35330:	teq	r2, #0
   35334:	eor	r1, r1, #8388608	; 0x800000
   35338:	eoreq	r0, r0, #8388608	; 0x800000
   3533c:	addeq	r2, r2, #1
   35340:	subne	r3, r3, #1
   35344:	b	352a0 <flatcc_json_parser_struct_as_root@@Base+0x78c>
   35348:	lsl	r3, r1, #1
   3534c:	mvns	ip, r2, asr #24
   35350:	mvnsne	ip, r3, asr #24
   35354:	beq	353a8 <flatcc_json_parser_struct_as_root@@Base+0x894>
   35358:	teq	r2, r3
   3535c:	beq	3536c <flatcc_json_parser_struct_as_root@@Base+0x858>
   35360:	teq	r2, #0
   35364:	moveq	r0, r1
   35368:	bx	lr
   3536c:	teq	r0, r1
   35370:	movne	r0, #0
   35374:	bxne	lr
   35378:	tst	r2, #-16777216	; 0xff000000
   3537c:	bne	3538c <flatcc_json_parser_struct_as_root@@Base+0x878>
   35380:	lsls	r0, r0, #1
   35384:	orrcs	r0, r0, #-2147483648	; 0x80000000
   35388:	bx	lr
   3538c:	adds	r2, r2, #33554432	; 0x2000000
   35390:	addcc	r0, r0, #8388608	; 0x800000
   35394:	bxcc	lr
   35398:	and	r3, r0, #-2147483648	; 0x80000000
   3539c:	orr	r0, r3, #2130706432	; 0x7f000000
   353a0:	orr	r0, r0, #8388608	; 0x800000
   353a4:	bx	lr
   353a8:	mvns	r2, r2, asr #24
   353ac:	movne	r0, r1
   353b0:	mvnseq	r3, r3, asr #24
   353b4:	movne	r1, r0
   353b8:	lsls	r2, r0, #9
   353bc:	lslseq	r3, r1, #9
   353c0:	teqeq	r0, r1
   353c4:	orrne	r0, r0, #4194304	; 0x400000
   353c8:	bx	lr
   353cc:	mov	r3, #0
   353d0:	b	353dc <flatcc_json_parser_struct_as_root@@Base+0x8c8>
   353d4:	ands	r3, r0, #-2147483648	; 0x80000000
   353d8:	rsbmi	r0, r0, #0
   353dc:	movs	ip, r0
   353e0:	bxeq	lr
   353e4:	orr	r3, r3, #1258291200	; 0x4b000000
   353e8:	mov	r1, r0
   353ec:	mov	r0, #0
   353f0:	b	35434 <flatcc_json_parser_struct_as_root@@Base+0x920>
   353f4:	orrs	r2, r0, r1
   353f8:	bxeq	lr
   353fc:	mov	r3, #0
   35400:	b	3541c <flatcc_json_parser_struct_as_root@@Base+0x908>
   35404:	orrs	r2, r0, r1
   35408:	bxeq	lr
   3540c:	ands	r3, r1, #-2147483648	; 0x80000000
   35410:	bpl	3541c <flatcc_json_parser_struct_as_root@@Base+0x908>
   35414:	rsbs	r0, r0, #0
   35418:	rsc	r1, r1, #0
   3541c:	movs	ip, r1
   35420:	moveq	ip, r0
   35424:	moveq	r1, r0
   35428:	moveq	r0, #0
   3542c:	orr	r3, r3, #1526726656	; 0x5b000000
   35430:	subeq	r3, r3, #268435456	; 0x10000000
   35434:	sub	r3, r3, #8388608	; 0x800000
   35438:	clz	r2, ip
   3543c:	subs	r2, r2, #8
   35440:	sub	r3, r3, r2, lsl #23
   35444:	blt	35464 <flatcc_json_parser_struct_as_root@@Base+0x950>
   35448:	add	r3, r3, r1, lsl r2
   3544c:	lsl	ip, r0, r2
   35450:	rsb	r2, r2, #32
   35454:	cmp	ip, #-2147483648	; 0x80000000
   35458:	adc	r0, r3, r0, lsr r2
   3545c:	biceq	r0, r0, #1
   35460:	bx	lr
   35464:	add	r2, r2, #32
   35468:	lsl	ip, r1, r2
   3546c:	rsb	r2, r2, #32
   35470:	orrs	r0, r0, ip, lsl #1
   35474:	adc	r0, r3, r1, lsr r2
   35478:	biceq	r0, r0, ip, lsr #31
   3547c:	bx	lr
   35480:	push	{r1, lr}
   35484:	mov	r0, #8
   35488:	bl	125d8 <raise@plt>
   3548c:	pop	{r1, pc}

00035490 <__libc_csu_init@@Base>:
   35490:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   35494:	mov	r7, r0
   35498:	ldr	r6, [pc, #72]	; 354e8 <__libc_csu_init@@Base+0x58>
   3549c:	ldr	r5, [pc, #72]	; 354ec <__libc_csu_init@@Base+0x5c>
   354a0:	add	r6, pc, r6
   354a4:	add	r5, pc, r5
   354a8:	sub	r6, r6, r5
   354ac:	mov	r8, r1
   354b0:	mov	r9, r2
   354b4:	bl	125b8 <raise@plt-0x20>
   354b8:	asrs	r6, r6, #2
   354bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   354c0:	mov	r4, #0
   354c4:	add	r4, r4, #1
   354c8:	ldr	r3, [r5], #4
   354cc:	mov	r2, r9
   354d0:	mov	r1, r8
   354d4:	mov	r0, r7
   354d8:	blx	r3
   354dc:	cmp	r6, r4
   354e0:	bne	354c4 <__libc_csu_init@@Base+0x34>
   354e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   354e8:	andeq	r2, r1, r8, ror #20
   354ec:	andeq	r2, r1, r0, ror #20

000354f0 <__libc_csu_fini@@Base>:
   354f0:	bx	lr

Disassembly of section .fini:

000354f4 <.fini>:
   354f4:	push	{r3, lr}
   354f8:	pop	{r3, pc}
