
../repos/charybdis/extensions/.libs/ip_cloaking_old.so:     file format elf32-littlearm


Disassembly of section .init:

000006e8 <_init>:
 6e8:	push	{r3, lr}
 6ec:	bl	7c8 <call_weak_fn>
 6f0:	pop	{r3, pc}

Disassembly of section .plt:

000006f4 <.plt>:
 6f4:	push	{lr}		; (str lr, [sp, #-4]!)
 6f8:	ldr	lr, [pc, #4]	; 704 <.plt+0x10>
 6fc:	add	lr, pc, lr
 700:	ldr	pc, [lr, #8]!
 704:	.word	0x000118fc

00000708 <calloc@plt>:
 708:	add	ip, pc, #0, 12
 70c:	add	ip, ip, #69632	; 0x11000
 710:	ldr	pc, [ip, #2300]!	; 0x8fc

00000714 <strcmp@plt>:
 714:	add	ip, pc, #0, 12
 718:	add	ip, ip, #69632	; 0x11000
 71c:	ldr	pc, [ip, #2292]!	; 0x8f4

00000720 <__cxa_finalize@plt>:
 720:	add	ip, pc, #0, 12
 724:	add	ip, ip, #69632	; 0x11000
 728:	ldr	pc, [ip, #2284]!	; 0x8ec

0000072c <rb_outofmemory@plt>:
 72c:	add	ip, pc, #0, 12
 730:	add	ip, ip, #69632	; 0x11000
 734:	ldr	pc, [ip, #2276]!	; 0x8e4

00000738 <find_umode_slot@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2268]!	; 0x8dc

00000744 <sendto_server@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2260]!	; 0x8d4

00000750 <__gmon_start__@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2252]!	; 0x8cc

0000075c <sendto_one_numeric@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #69632	; 0x11000
 764:	ldr	pc, [ip, #2244]!	; 0x8c4

00000768 <strlen@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #69632	; 0x11000
 770:	ldr	pc, [ip, #2236]!	; 0x8bc

00000774 <strchr@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #69632	; 0x11000
 77c:	ldr	pc, [ip, #2228]!	; 0x8b4

00000780 <snprintf@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2220]!	; 0x8ac

0000078c <change_nick_user_host@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2212]!	; 0x8a4

00000798 <rb_strlcpy@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2204]!	; 0x89c

000007a4 <irccmp@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2196]!	; 0x894

000007b0 <rb_strlcat@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #69632	; 0x11000
 7b8:	ldr	pc, [ip, #2188]!	; 0x88c

000007bc <construct_umodebuf@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #69632	; 0x11000
 7c4:	ldr	pc, [ip, #2180]!	; 0x884

Disassembly of section .text:

000007c8 <call_weak_fn>:
 7c8:	ldr	r3, [pc, #20]	; 7e4 <call_weak_fn+0x1c>
 7cc:	ldr	r2, [pc, #20]	; 7e8 <call_weak_fn+0x20>
 7d0:	add	r3, pc, r3
 7d4:	ldr	r2, [r3, r2]
 7d8:	cmp	r2, #0
 7dc:	bxeq	lr
 7e0:	b	750 <__gmon_start__@plt>
 7e4:	.word	0x00011828
 7e8:	.word	0x00000060

000007ec <deregister_tm_clones>:
 7ec:	ldr	r0, [pc, #44]	; 820 <deregister_tm_clones+0x34>
 7f0:	ldr	r3, [pc, #44]	; 824 <deregister_tm_clones+0x38>
 7f4:	add	r0, pc, r0
 7f8:	add	r3, pc, r3
 7fc:	cmp	r3, r0
 800:	ldr	r3, [pc, #32]	; 828 <deregister_tm_clones+0x3c>
 804:	add	r3, pc, r3
 808:	bxeq	lr
 80c:	ldr	r2, [pc, #24]	; 82c <deregister_tm_clones+0x40>
 810:	ldr	r3, [r3, r2]
 814:	cmp	r3, #0
 818:	bxeq	lr
 81c:	bx	r3
 820:	.word	0x000118c4
 824:	.word	0x000118c0
 828:	.word	0x000117f4
 82c:	.word	0x00000050

00000830 <register_tm_clones>:
 830:	ldr	r0, [pc, #56]	; 870 <register_tm_clones+0x40>
 834:	ldr	r3, [pc, #56]	; 874 <register_tm_clones+0x44>
 838:	add	r0, pc, r0
 83c:	add	r3, pc, r3
 840:	sub	r1, r3, r0
 844:	ldr	r3, [pc, #44]	; 878 <register_tm_clones+0x48>
 848:	asr	r1, r1, #2
 84c:	add	r3, pc, r3
 850:	add	r1, r1, r1, lsr #31
 854:	asrs	r1, r1, #1
 858:	bxeq	lr
 85c:	ldr	r2, [pc, #24]	; 87c <register_tm_clones+0x4c>
 860:	ldr	r3, [r3, r2]
 864:	cmp	r3, #0
 868:	bxeq	lr
 86c:	bx	r3
 870:	.word	0x00011880
 874:	.word	0x0001187c
 878:	.word	0x000117ac
 87c:	.word	0x00000068

00000880 <__do_global_dtors_aux>:
 880:	ldr	r3, [pc, #76]	; 8d4 <__do_global_dtors_aux+0x54>
 884:	ldr	r2, [pc, #76]	; 8d8 <__do_global_dtors_aux+0x58>
 888:	add	r3, pc, r3
 88c:	add	r2, pc, r2
 890:	ldrb	r3, [r3]
 894:	cmp	r3, #0
 898:	bxne	lr
 89c:	ldr	r3, [pc, #56]	; 8dc <__do_global_dtors_aux+0x5c>
 8a0:	push	{r4, lr}
 8a4:	ldr	r3, [r2, r3]
 8a8:	cmp	r3, #0
 8ac:	beq	8bc <__do_global_dtors_aux+0x3c>
 8b0:	ldr	r3, [pc, #40]	; 8e0 <__do_global_dtors_aux+0x60>
 8b4:	ldr	r0, [pc, r3]
 8b8:	bl	720 <__cxa_finalize@plt>
 8bc:	bl	7ec <deregister_tm_clones>
 8c0:	ldr	r3, [pc, #28]	; 8e4 <__do_global_dtors_aux+0x64>
 8c4:	mov	r2, #1
 8c8:	add	r3, pc, r3
 8cc:	strb	r2, [r3]
 8d0:	pop	{r4, pc}
 8d4:	.word	0x00011830
 8d8:	.word	0x0001176c
 8dc:	.word	0x0000004c
 8e0:	.word	0x000117b4
 8e4:	.word	0x000117f0

000008e8 <frame_dummy>:
 8e8:	b	830 <register_tm_clones>

000008ec <check_umode_change>:
 8ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8f0:	add	fp, sp, #28
 8f4:	sub	sp, sp, #20
 8f8:	ldr	r4, [r0]
 8fc:	mov	r7, r4
 900:	ldr	r1, [r7, #64]!	; 0x40
 904:	tst	r1, #8192	; 0x2000
 908:	beq	ab4 <check_umode_change+0x1c8>
 90c:	ldrh	r2, [r4, #80]	; 0x50
 910:	cmp	r2, #64	; 0x40
 914:	bne	ab4 <check_umode_change+0x1c8>
 918:	ldr	r0, [r0, #4]
 91c:	ldr	r5, [r4, #56]	; 0x38
 920:	ldr	r2, [pc, #776]	; c30 <check_umode_change+0x344>
 924:	ldr	r2, [pc, r2]
 928:	eor	r0, r5, r0
 92c:	ldr	r6, [r2, #416]	; 0x1a0
 930:	tst	r0, r6
 934:	beq	ab4 <check_umode_change+0x1c8>
 938:	tst	r6, r5
 93c:	beq	988 <check_umode_change+0x9c>
 940:	tst	r1, #16777216	; 0x1000000
 944:	bne	978 <check_umode_change+0x8c>
 948:	ldr	r0, [r4, #432]	; 0x1b0
 94c:	ldr	sl, [r0, #432]	; 0x1b0
 950:	cmp	sl, #0
 954:	beq	978 <check_umode_change+0x8c>
 958:	add	r8, r4, #163	; 0xa3
 95c:	tst	r1, #131072	; 0x20000
 960:	beq	abc <check_umode_change+0x1d0>
 964:	mov	r0, r8
 968:	mov	r1, sl
 96c:	bl	714 <strcmp@plt>
 970:	cmp	r0, #0
 974:	beq	abc <check_umode_change+0x1d0>
 978:	bic	r0, r5, r6
 97c:	str	r0, [r4, #56]	; 0x38
 980:	sub	sp, fp, #28
 984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 988:	ldr	r0, [r4, #432]	; 0x1b0
 98c:	ldr	r1, [r0, #432]	; 0x1b0
 990:	cmp	r1, #0
 994:	beq	ab4 <check_umode_change+0x1c8>
 998:	add	r0, r4, #163	; 0xa3
 99c:	bl	714 <strcmp@plt>
 9a0:	cmp	r0, #0
 9a4:	bne	ab4 <check_umode_change+0x1c8>
 9a8:	ldr	r2, [pc, #688]	; c60 <check_umode_change+0x374>
 9ac:	add	r8, r4, #227	; 0xe3
 9b0:	mov	r0, r4
 9b4:	mov	r1, #396	; 0x18c
 9b8:	mov	r3, r8
 9bc:	add	r2, pc, r2
 9c0:	bl	75c <sendto_one_numeric@plt>
 9c4:	ldr	r0, [pc, #664]	; c64 <check_umode_change+0x378>
 9c8:	mov	r6, r4
 9cc:	add	r9, r4, #88	; 0x58
 9d0:	ldr	r0, [pc, r0]
 9d4:	ldr	r0, [r0]
 9d8:	ldr	r1, [pc, #648]	; c68 <check_umode_change+0x37c>
 9dc:	ldr	r1, [pc, r1]
 9e0:	ldr	r1, [r1]
 9e4:	ldr	r5, [pc, #640]	; c6c <check_umode_change+0x380>
 9e8:	ldr	r5, [pc, r5]
 9ec:	ldrb	r3, [r6, #396]!	; 0x18c
 9f0:	ldrb	r2, [r5, #396]!	; 0x18c
 9f4:	ldr	ip, [pc, #628]	; c70 <check_umode_change+0x384>
 9f8:	cmp	r3, #0
 9fc:	mov	r3, r6
 a00:	moveq	r3, r9
 a04:	cmp	r2, #0
 a08:	sub	sl, r5, #308	; 0x134
 a0c:	mov	r2, r5
 a10:	add	ip, pc, ip
 a14:	moveq	r2, sl
 a18:	str	ip, [sp]
 a1c:	stmib	sp, {r2, r3, r8}
 a20:	orr	r2, r0, r1
 a24:	mov	r0, #0
 a28:	mov	r1, #0
 a2c:	mov	r3, #0
 a30:	bl	744 <sendto_server@plt>
 a34:	ldr	r0, [pc, #568]	; c74 <check_umode_change+0x388>
 a38:	ldr	r0, [pc, r0]
 a3c:	ldr	r3, [r0]
 a40:	ldr	r0, [pc, #560]	; c78 <check_umode_change+0x38c>
 a44:	ldr	r0, [pc, r0]
 a48:	ldrb	r1, [r6]
 a4c:	ldr	r2, [r0]
 a50:	ldrb	r0, [r5]
 a54:	ldr	ip, [pc, #544]	; c7c <check_umode_change+0x390>
 a58:	cmp	r1, #0
 a5c:	mov	r1, #0
 a60:	moveq	r6, r9
 a64:	cmp	r0, #0
 a68:	add	ip, pc, ip
 a6c:	mov	r0, #0
 a70:	moveq	r5, sl
 a74:	str	ip, [sp]
 a78:	stmib	sp, {r5, r6, r8}
 a7c:	bl	744 <sendto_server@plt>
 a80:	ldr	r0, [pc, #504]	; c80 <check_umode_change+0x394>
 a84:	mov	r1, #0
 a88:	add	r2, r4, #152	; 0x98
 a8c:	mov	r3, r8
 a90:	str	r1, [sp]
 a94:	mov	r1, r9
 a98:	add	r0, pc, r0
 a9c:	str	r0, [sp, #4]
 aa0:	mov	r0, r4
 aa4:	bl	78c <change_nick_user_host@plt>
 aa8:	ldr	r0, [r7]
 aac:	bic	r0, r0, #131072	; 0x20000
 ab0:	str	r0, [r7]
 ab4:	sub	sp, fp, #28
 ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 abc:	mov	r0, r8
 ac0:	mov	r1, sl
 ac4:	bl	714 <strcmp@plt>
 ac8:	cmp	r0, #0
 acc:	beq	aec <check_umode_change+0x200>
 ad0:	add	r0, r4, #227	; 0xe3
 ad4:	cmp	r0, sl
 ad8:	str	r0, [sp, #16]
 adc:	beq	b0c <check_umode_change+0x220>
 ae0:	ldr	r2, [pc, #332]	; c34 <check_umode_change+0x348>
 ae4:	add	r2, pc, r2
 ae8:	b	b14 <check_umode_change+0x228>
 aec:	ldr	r2, [pc, #360]	; c5c <check_umode_change+0x370>
 af0:	mov	r0, r4
 af4:	mov	r1, #396	; 0x18c
 af8:	mov	r3, r8
 afc:	add	r2, pc, r2
 b00:	sub	sp, fp, #28
 b04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 b08:	b	75c <sendto_one_numeric@plt>
 b0c:	ldr	r2, [pc, #292]	; c38 <check_umode_change+0x34c>
 b10:	add	r2, pc, r2
 b14:	mov	r0, r4
 b18:	mov	r1, #396	; 0x18c
 b1c:	mov	r3, sl
 b20:	bl	75c <sendto_one_numeric@plt>
 b24:	mov	r6, r4
 b28:	add	r9, r4, #88	; 0x58
 b2c:	ldrb	r0, [r6, #396]!	; 0x18c
 b30:	ldr	r1, [pc, #260]	; c3c <check_umode_change+0x350>
 b34:	ldr	r1, [pc, r1]
 b38:	cmp	r0, #0
 b3c:	mov	r0, r6
 b40:	moveq	r0, r9
 b44:	ldr	lr, [r1]
 b48:	ldr	r5, [pc, #240]	; c40 <check_umode_change+0x354>
 b4c:	ldr	r5, [pc, r5]
 b50:	ldrb	r2, [r5, #396]!	; 0x18c
 b54:	ldr	r1, [pc, #232]	; c44 <check_umode_change+0x358>
 b58:	ldr	r1, [pc, r1]
 b5c:	cmp	r2, #0
 b60:	sub	r8, r5, #308	; 0x134
 b64:	mov	r2, r5
 b68:	moveq	r2, r8
 b6c:	ldr	r3, [r1]
 b70:	ldr	ip, [pc, #208]	; c48 <check_umode_change+0x35c>
 b74:	str	r2, [sp, #4]
 b78:	str	r0, [sp, #8]
 b7c:	mov	r0, #0
 b80:	mov	r1, #0
 b84:	str	sl, [sp, #12]
 b88:	add	ip, pc, ip
 b8c:	orr	r2, lr, r3
 b90:	mov	r3, #0
 b94:	str	ip, [sp]
 b98:	bl	744 <sendto_server@plt>
 b9c:	ldr	r0, [pc, #168]	; c4c <check_umode_change+0x360>
 ba0:	ldr	r0, [pc, r0]
 ba4:	ldr	r3, [r0]
 ba8:	ldr	r0, [pc, #160]	; c50 <check_umode_change+0x364>
 bac:	ldr	r0, [pc, r0]
 bb0:	ldrb	r1, [r6]
 bb4:	ldr	r2, [r0]
 bb8:	ldrb	r0, [r5]
 bbc:	ldr	ip, [pc, #144]	; c54 <check_umode_change+0x368>
 bc0:	cmp	r1, #0
 bc4:	mov	r1, #0
 bc8:	moveq	r6, r9
 bcc:	cmp	r0, #0
 bd0:	add	ip, pc, ip
 bd4:	mov	r0, #0
 bd8:	moveq	r5, r8
 bdc:	str	ip, [sp]
 be0:	stmib	sp, {r5, r6, sl}
 be4:	bl	744 <sendto_server@plt>
 be8:	ldr	r0, [pc, #104]	; c58 <check_umode_change+0x36c>
 bec:	mov	r1, #0
 bf0:	add	r2, r4, #152	; 0x98
 bf4:	mov	r3, sl
 bf8:	str	r1, [sp]
 bfc:	mov	r1, r9
 c00:	add	r0, pc, r0
 c04:	str	r0, [sp, #4]
 c08:	mov	r0, r4
 c0c:	bl	78c <change_nick_user_host@plt>
 c10:	ldr	r0, [r7]
 c14:	ldr	r2, [sp, #16]
 c18:	bic	r1, r0, #131072	; 0x20000
 c1c:	cmp	r2, sl
 c20:	orrne	r1, r0, #131072	; 0x20000
 c24:	str	r1, [r7]
 c28:	sub	sp, fp, #28
 c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c30:	.word	0x00011730
 c34:	.word	0x000004cd
 c38:	.word	0x000004bd
 c3c:	.word	0x00011518
 c40:	.word	0x00011518
 c44:	.word	0x00011504
 c48:	.word	0x00000458
 c4c:	.word	0x000114bc
 c50:	.word	0x000114a0
 c54:	.word	0x00000423
 c58:	.word	0x0000040e
 c5c:	.word	0x000004b5
 c60:	.word	0x00000611
 c64:	.word	0x0001167c
 c68:	.word	0x00011680
 c6c:	.word	0x0001167c
 c70:	.word	0x000005d0
 c74:	.word	0x00011624
 c78:	.word	0x00011608
 c7c:	.word	0x0000058b
 c80:	.word	0x00000576

00000c84 <check_new_user>:
 c84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 c88:	add	fp, sp, #24
 c8c:	sub	sp, sp, #8
 c90:	mov	r4, r0
 c94:	ldrb	r0, [r0, #67]	; 0x43
 c98:	tst	r0, #1
 c9c:	bne	d4c <check_new_user+0xc8>
 ca0:	mov	r0, #1
 ca4:	mov	r1, #64	; 0x40
 ca8:	bl	708 <calloc@plt>
 cac:	cmp	r0, #0
 cb0:	beq	f30 <check_new_user+0x2ac>
 cb4:	ldr	r1, [r4, #432]	; 0x1b0
 cb8:	add	r5, r4, #227	; 0xe3
 cbc:	add	r9, r4, #64	; 0x40
 cc0:	str	r0, [r1, #432]	; 0x1b0
 cc4:	movw	r0, #291	; 0x123
 cc8:	add	r1, r4, r0
 ccc:	mov	r0, r5
 cd0:	bl	7a4 <irccmp@plt>
 cd4:	mov	r6, r0
 cd8:	ldr	r0, [r4, #432]	; 0x1b0
 cdc:	ldr	r8, [r0, #432]	; 0x1b0
 ce0:	mov	r0, r5
 ce4:	bl	768 <strlen@plt>
 ce8:	sub	r3, r0, #2
 cec:	mov	r1, #1
 cf0:	cmp	r6, #0
 cf4:	beq	d6c <check_new_user+0xe8>
 cf8:	cmp	r3, #0
 cfc:	mov	r7, #1
 d00:	mov	r2, #1
 d04:	beq	d2c <check_new_user+0xa8>
 d08:	mov	r2, #1
 d0c:	mov	r7, #0
 d10:	ldrb	r6, [r5, r7]
 d14:	add	r7, r7, #2
 d18:	cmp	r7, r3
 d1c:	mul	r2, r2, r6
 d20:	bcc	d10 <check_new_user+0x8c>
 d24:	subs	r7, r0, #1
 d28:	beq	dc0 <check_new_user+0x13c>
 d2c:	mvn	r0, #226	; 0xe2
 d30:	sub	r0, r0, r7
 d34:	ldrb	r3, [r4, -r0]
 d38:	add	r0, r0, #2
 d3c:	cmn	r0, #227	; 0xe3
 d40:	mul	r1, r1, r3
 d44:	bne	d34 <check_new_user+0xb0>
 d48:	b	dc4 <check_new_user+0x140>
 d4c:	ldr	r0, [r4, #56]	; 0x38
 d50:	ldr	r1, [pc, #476]	; f34 <check_new_user+0x2b0>
 d54:	ldr	r1, [pc, r1]
 d58:	ldr	r1, [r1, #416]	; 0x1a0
 d5c:	bic	r0, r0, r1
 d60:	str	r0, [r4, #56]	; 0x38
 d64:	sub	sp, fp, #24
 d68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 d6c:	cmp	r3, #0
 d70:	mov	r7, #1
 d74:	mov	r2, #1
 d78:	beq	da0 <check_new_user+0x11c>
 d7c:	mov	r2, #1
 d80:	mov	r7, #0
 d84:	ldrb	r6, [r5, r7]
 d88:	add	r7, r7, #2
 d8c:	cmp	r7, r3
 d90:	mul	r2, r2, r6
 d94:	bcc	d84 <check_new_user+0x100>
 d98:	subs	r7, r0, #1
 d9c:	beq	e78 <check_new_user+0x1f4>
 da0:	mvn	r0, #226	; 0xe2
 da4:	sub	r0, r0, r7
 da8:	ldrb	r3, [r4, -r0]
 dac:	add	r0, r0, #2
 db0:	cmn	r0, #227	; 0xe3
 db4:	mul	r1, r1, r3
 db8:	bne	da8 <check_new_user+0x124>
 dbc:	b	e7c <check_new_user+0x1f8>
 dc0:	mov	r1, #1
 dc4:	movw	r0, #24317	; 0x5efd
 dc8:	movt	r0, #26948	; 0x6944
 dcc:	umull	r3, r7, r1, r0
 dd0:	ldr	r3, [pc, #360]	; f40 <check_new_user+0x2bc>
 dd4:	add	r2, r2, r7, lsr #27
 dd8:	umull	r0, r7, r2, r0
 ddc:	add	r0, r1, r7, lsr #27
 de0:	mov	r1, #63	; 0x3f
 de4:	ldr	r3, [pc, r3]
 de8:	ldr	r3, [r3, #12]
 dec:	stm	sp, {r0, r2}
 df0:	mov	r0, r8
 df4:	ldr	r2, [pc, #328]	; f44 <check_new_user+0x2c0>
 df8:	add	r2, pc, r2
 dfc:	bl	780 <snprintf@plt>
 e00:	mov	r0, r8
 e04:	bl	768 <strlen@plt>
 e08:	mov	r7, r0
 e0c:	mov	r0, r5
 e10:	mov	r1, #46	; 0x2e
 e14:	bl	774 <strchr@plt>
 e18:	mov	r1, r0
 e1c:	ldr	r0, [pc, #292]	; f48 <check_new_user+0x2c4>
 e20:	cmp	r1, #0
 e24:	add	r0, pc, r0
 e28:	movne	r0, r1
 e2c:	mov	r6, r0
 e30:	bl	768 <strlen@plt>
 e34:	add	r0, r0, r7
 e38:	cmp	r0, #63	; 0x3f
 e3c:	bcc	e54 <check_new_user+0x1d0>
 e40:	add	r0, r6, #1
 e44:	mov	r1, #46	; 0x2e
 e48:	bl	774 <strchr@plt>
 e4c:	cmp	r0, #0
 e50:	bne	e2c <check_new_user+0x1a8>
 e54:	mov	r0, r8
 e58:	mov	r1, r6
 e5c:	mov	r2, #63	; 0x3f
 e60:	bl	7b0 <rb_strlcat@plt>
 e64:	ldrb	r0, [r9, #2]
 e68:	tst	r0, #2
 e6c:	bne	ec8 <check_new_user+0x244>
 e70:	ldr	r0, [r4, #56]	; 0x38
 e74:	b	ee0 <check_new_user+0x25c>
 e78:	mov	r1, #1
 e7c:	ldr	r0, [pc, #180]	; f38 <check_new_user+0x2b4>
 e80:	movw	r3, #24317	; 0x5efd
 e84:	movt	r3, #26948	; 0x6944
 e88:	umull	r7, r6, r1, r3
 e8c:	add	r2, r2, r6, lsr #27
 e90:	ldr	r0, [pc, r0]
 e94:	str	r2, [sp]
 e98:	ldr	r0, [r0, #12]
 e9c:	str	r0, [sp, #4]
 ea0:	umull	r0, r2, r2, r3
 ea4:	add	r3, r1, r2, lsr #27
 ea8:	ldr	r2, [pc, #140]	; f3c <check_new_user+0x2b8>
 eac:	mov	r0, r8
 eb0:	mov	r1, #63	; 0x3f
 eb4:	add	r2, pc, r2
 eb8:	bl	780 <snprintf@plt>
 ebc:	ldrb	r0, [r9, #2]
 ec0:	tst	r0, #2
 ec4:	beq	e70 <check_new_user+0x1ec>
 ec8:	ldr	r0, [r4, #56]	; 0x38
 ecc:	ldr	r1, [pc, #120]	; f4c <check_new_user+0x2c8>
 ed0:	ldr	r1, [pc, r1]
 ed4:	ldr	r1, [r1, #416]	; 0x1a0
 ed8:	bic	r0, r0, r1
 edc:	str	r0, [r4, #56]	; 0x38
 ee0:	ldr	r1, [pc, #104]	; f50 <check_new_user+0x2cc>
 ee4:	ldr	r1, [pc, r1]
 ee8:	ldr	r1, [r1, #416]	; 0x1a0
 eec:	tst	r1, r0
 ef0:	beq	f28 <check_new_user+0x2a4>
 ef4:	ldr	r0, [r4, #432]	; 0x1b0
 ef8:	add	r4, r4, #163	; 0xa3
 efc:	mov	r2, #64	; 0x40
 f00:	ldr	r1, [r0, #432]	; 0x1b0
 f04:	mov	r0, r4
 f08:	bl	798 <rb_strlcpy@plt>
 f0c:	mov	r0, r4
 f10:	mov	r1, r5
 f14:	bl	7a4 <irccmp@plt>
 f18:	cmp	r0, #0
 f1c:	ldrne	r0, [r9]
 f20:	orrne	r0, r0, #131072	; 0x20000
 f24:	strne	r0, [r9]
 f28:	sub	sp, fp, #24
 f2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 f30:	bl	72c <rb_outofmemory@plt>
 f34:	.word	0x00011300
 f38:	.word	0x000111c0
 f3c:	.word	0x00000172
 f40:	.word	0x0001126c
 f44:	.word	0x00000224
 f48:	.word	0x00000200
 f4c:	.word	0x00011184
 f50:	.word	0x00011170

00000f54 <_modinit>:
 f54:	push	{fp, lr}
 f58:	mov	fp, sp
 f5c:	bl	738 <find_umode_slot@plt>
 f60:	ldr	r1, [pc, #16]	; f78 <_modinit+0x24>
 f64:	ldr	r1, [pc, r1]
 f68:	str	r0, [r1, #416]	; 0x1a0
 f6c:	bl	7bc <construct_umodebuf@plt>
 f70:	mov	r0, #0
 f74:	pop	{fp, pc}
 f78:	.word	0x000110f0

00000f7c <_moddeinit>:
 f7c:	ldr	r0, [pc, #12]	; f90 <_moddeinit+0x14>
 f80:	mov	r1, #0
 f84:	ldr	r0, [pc, r0]
 f88:	str	r1, [r0, #416]	; 0x1a0
 f8c:	b	7bc <construct_umodebuf@plt>
 f90:	.word	0x000110d0

Disassembly of section .fini:

00000f94 <_fini>:
 f94:	push	{r3, lr}
 f98:	pop	{r3, pc}
