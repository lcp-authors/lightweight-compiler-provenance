
../repos/charybdis/modules/.libs/m_map.so:     file format elf32-littlearm


Disassembly of section .init:

000005f4 <_init>:
 5f4:	push	{r3, lr}
 5f8:	bl	674 <call_weak_fn>
 5fc:	pop	{r3, pc}

Disassembly of section .plt:

00000600 <.plt>:
 600:	push	{lr}		; (str lr, [sp, #-4]!)
 604:	ldr	lr, [pc, #4]	; 610 <.plt+0x10>
 608:	add	lr, pc, lr
 60c:	ldr	pc, [lr, #8]!
 610:	.word	0x000119f0

00000614 <__cxa_finalize@plt>:
 614:	add	ip, pc, #0, 12
 618:	add	ip, ip, #69632	; 0x11000
 61c:	ldr	pc, [ip, #2544]!	; 0x9f0

00000620 <__gmon_start__@plt>:
 620:	add	ip, pc, #0, 12
 624:	add	ip, ip, #69632	; 0x11000
 628:	ldr	pc, [ip, #2536]!	; 0x9e8

0000062c <sendto_one_numeric@plt>:
 62c:	add	ip, pc, #0, 12
 630:	add	ip, ip, #69632	; 0x11000
 634:	ldr	pc, [ip, #2528]!	; 0x9e0

00000638 <strlen@plt>:
 638:	add	ip, pc, #0, 12
 63c:	add	ip, ip, #69632	; 0x11000
 640:	ldr	pc, [ip, #2520]!	; 0x9d8

00000644 <snprintf@plt>:
 644:	add	ip, pc, #0, 12
 648:	add	ip, ip, #69632	; 0x11000
 64c:	ldr	pc, [ip, #2512]!	; 0x9d0

00000650 <scache_send_missing@plt>:
 650:	add	ip, pc, #0, 12
 654:	add	ip, ip, #69632	; 0x11000
 658:	ldr	pc, [ip, #2504]!	; 0x9c8

0000065c <rb_strlcpy@plt>:
 65c:	add	ip, pc, #0, 12
 660:	add	ip, ip, #69632	; 0x11000
 664:	ldr	pc, [ip, #2496]!	; 0x9c0

00000668 <rb_strlcat@plt>:
 668:	add	ip, pc, #0, 12
 66c:	add	ip, ip, #69632	; 0x11000
 670:	ldr	pc, [ip, #2488]!	; 0x9b8

Disassembly of section .text:

00000674 <call_weak_fn>:
 674:	ldr	r3, [pc, #20]	; 690 <call_weak_fn+0x1c>
 678:	ldr	r2, [pc, #20]	; 694 <call_weak_fn+0x20>
 67c:	add	r3, pc, r3
 680:	ldr	r2, [r3, r2]
 684:	cmp	r2, #0
 688:	bxeq	lr
 68c:	b	620 <__gmon_start__@plt>
 690:	.word	0x0001197c
 694:	.word	0x00000040

00000698 <deregister_tm_clones>:
 698:	ldr	r0, [pc, #44]	; 6cc <deregister_tm_clones+0x34>
 69c:	ldr	r3, [pc, #44]	; 6d0 <deregister_tm_clones+0x38>
 6a0:	add	r0, pc, r0
 6a4:	add	r3, pc, r3
 6a8:	cmp	r3, r0
 6ac:	ldr	r3, [pc, #32]	; 6d4 <deregister_tm_clones+0x3c>
 6b0:	add	r3, pc, r3
 6b4:	bxeq	lr
 6b8:	ldr	r2, [pc, #24]	; 6d8 <deregister_tm_clones+0x40>
 6bc:	ldr	r3, [r3, r2]
 6c0:	cmp	r3, #0
 6c4:	bxeq	lr
 6c8:	bx	r3
 6cc:	.word	0x00011a20
 6d0:	.word	0x00011a1c
 6d4:	.word	0x00011948
 6d8:	.word	0x00000034

000006dc <register_tm_clones>:
 6dc:	ldr	r0, [pc, #56]	; 71c <register_tm_clones+0x40>
 6e0:	ldr	r3, [pc, #56]	; 720 <register_tm_clones+0x44>
 6e4:	add	r0, pc, r0
 6e8:	add	r3, pc, r3
 6ec:	sub	r1, r3, r0
 6f0:	ldr	r3, [pc, #44]	; 724 <register_tm_clones+0x48>
 6f4:	asr	r1, r1, #2
 6f8:	add	r3, pc, r3
 6fc:	add	r1, r1, r1, lsr #31
 700:	asrs	r1, r1, #1
 704:	bxeq	lr
 708:	ldr	r2, [pc, #24]	; 728 <register_tm_clones+0x4c>
 70c:	ldr	r3, [r3, r2]
 710:	cmp	r3, #0
 714:	bxeq	lr
 718:	bx	r3
 71c:	.word	0x000119dc
 720:	.word	0x000119d8
 724:	.word	0x00011900
 728:	.word	0x00000044

0000072c <__do_global_dtors_aux>:
 72c:	ldr	r3, [pc, #76]	; 780 <__do_global_dtors_aux+0x54>
 730:	ldr	r2, [pc, #76]	; 784 <__do_global_dtors_aux+0x58>
 734:	add	r3, pc, r3
 738:	add	r2, pc, r2
 73c:	ldrb	r3, [r3]
 740:	cmp	r3, #0
 744:	bxne	lr
 748:	ldr	r3, [pc, #56]	; 788 <__do_global_dtors_aux+0x5c>
 74c:	push	{r4, lr}
 750:	ldr	r3, [r2, r3]
 754:	cmp	r3, #0
 758:	beq	768 <__do_global_dtors_aux+0x3c>
 75c:	ldr	r3, [pc, #40]	; 78c <__do_global_dtors_aux+0x60>
 760:	ldr	r0, [pc, r3]
 764:	bl	614 <__cxa_finalize@plt>
 768:	bl	698 <deregister_tm_clones>
 76c:	ldr	r3, [pc, #28]	; 790 <__do_global_dtors_aux+0x64>
 770:	mov	r2, #1
 774:	add	r3, pc, r3
 778:	strb	r2, [r3]
 77c:	pop	{r4, pc}
 780:	.word	0x0001198c
 784:	.word	0x000118c0
 788:	.word	0x00000030
 78c:	.word	0x000118e8
 790:	.word	0x0001194c

00000794 <frame_dummy>:
 794:	b	6dc <register_tm_clones>

00000798 <m_map>:
 798:	push	{fp, lr}
 79c:	mov	fp, sp
 7a0:	sub	sp, sp, #24
 7a4:	ldr	ip, [fp, #8]
 7a8:	str	r0, [fp, #-4]
 7ac:	str	r1, [fp, #-8]
 7b0:	str	r2, [sp, #12]
 7b4:	str	r3, [sp, #8]
 7b8:	ldr	r0, [sp, #12]
 7bc:	ldrb	r0, [r0, #67]	; 0x43
 7c0:	tst	r0, #4
 7c4:	str	ip, [sp, #4]
 7c8:	bne	7e4 <m_map+0x4c>
 7cc:	b	7d0 <m_map+0x38>
 7d0:	ldr	r0, [pc, #116]	; 84c <m_map+0xb4>
 7d4:	ldr	r0, [pc, r0]
 7d8:	ldr	r0, [r0]
 7dc:	cmp	r0, #0
 7e0:	bne	7f8 <m_map+0x60>
 7e4:	ldr	r0, [pc, #100]	; 850 <m_map+0xb8>
 7e8:	ldr	r0, [pc, r0]
 7ec:	ldr	r0, [r0, #176]	; 0xb0
 7f0:	cmp	r0, #0
 7f4:	beq	818 <m_map+0x80>
 7f8:	ldr	r0, [fp, #-8]
 7fc:	bl	8d8 <flattened_map>
 800:	ldr	r0, [pc, #88]	; 860 <m_map+0xc8>
 804:	add	r2, pc, r0
 808:	ldr	r0, [fp, #-8]
 80c:	movw	r1, #17
 810:	bl	62c <sendto_one_numeric@plt>
 814:	b	844 <m_map+0xac>
 818:	ldr	r0, [pc, #56]	; 858 <m_map+0xc0>
 81c:	ldr	r1, [pc, r0]
 820:	ldr	r0, [pc, #52]	; 85c <m_map+0xc4>
 824:	add	r2, pc, r0
 828:	ldr	r0, [fp, #-8]
 82c:	bl	c30 <dump_map>
 830:	ldr	r0, [pc, #28]	; 854 <m_map+0xbc>
 834:	add	r2, pc, r0
 838:	ldr	r0, [fp, #-8]
 83c:	movw	r1, #17
 840:	bl	62c <sendto_one_numeric@plt>
 844:	mov	sp, fp
 848:	pop	{fp, pc}
 84c:	.word	0x00011860
 850:	.word	0x0001185c
 854:	.word	0x00000764
 858:	.word	0x00011824
 85c:	.word	0x0001189d
 860:	.word	0x00000794

00000864 <mo_map>:
 864:	push	{r4, sl, fp, lr}
 868:	add	fp, sp, #8
 86c:	sub	sp, sp, #24
 870:	ldr	ip, [fp, #8]
 874:	ldr	lr, [pc, #84]	; 8d0 <mo_map+0x6c>
 878:	ldr	lr, [pc, lr]
 87c:	ldr	r4, [pc, #80]	; 8d4 <mo_map+0x70>
 880:	add	r4, pc, r4
 884:	str	r0, [fp, #-12]
 888:	str	r1, [sp, #16]
 88c:	str	r2, [sp, #12]
 890:	str	r3, [sp, #8]
 894:	ldr	r0, [sp, #16]
 898:	mov	r1, lr
 89c:	mov	r2, r4
 8a0:	str	ip, [sp, #4]
 8a4:	bl	c30 <dump_map>
 8a8:	ldr	r0, [sp, #16]
 8ac:	bl	650 <scache_send_missing@plt>
 8b0:	ldr	r0, [pc, #20]	; 8cc <mo_map+0x68>
 8b4:	add	r2, pc, r0
 8b8:	ldr	r0, [sp, #16]
 8bc:	movw	r1, #17
 8c0:	bl	62c <sendto_one_numeric@plt>
 8c4:	sub	sp, fp, #8
 8c8:	pop	{r4, sl, fp, pc}
 8cc:	.word	0x000006e4
 8d0:	.word	0x000117c8
 8d4:	.word	0x00011841

000008d8 <flattened_map>:
 8d8:	push	{r4, r5, fp, lr}
 8dc:	add	fp, sp, #8
 8e0:	sub	sp, sp, #576	; 0x240
 8e4:	ldr	r1, [pc, #780]	; bf8 <flattened_map+0x320>
 8e8:	ldr	r1, [pc, r1]
 8ec:	add	r1, r1, #88	; 0x58
 8f0:	add	r2, sp, #60	; 0x3c
 8f4:	str	r0, [fp, #-12]
 8f8:	movw	r0, #0
 8fc:	str	r0, [sp, #40]	; 0x28
 900:	mov	r0, r2
 904:	movw	r2, #512	; 0x200
 908:	bl	65c <rb_strlcpy@plt>
 90c:	add	r1, sp, #60	; 0x3c
 910:	str	r0, [sp, #36]	; 0x24
 914:	mov	r0, r1
 918:	str	r1, [sp, #32]
 91c:	bl	638 <strlen@plt>
 920:	str	r0, [sp, #44]	; 0x2c
 924:	ldr	r0, [sp, #44]	; 0x2c
 928:	ldr	r1, [sp, #32]
 92c:	add	r0, r1, r0
 930:	movw	r2, #32
 934:	strb	r2, [r0]
 938:	ldr	r0, [sp, #44]	; 0x2c
 93c:	cmp	r0, #50	; 0x32
 940:	bge	984 <flattened_map+0xac>
 944:	ldr	r0, [sp, #44]	; 0x2c
 948:	add	r0, r0, #1
 94c:	str	r0, [sp, #48]	; 0x30
 950:	ldr	r0, [sp, #48]	; 0x30
 954:	cmp	r0, #50	; 0x32
 958:	bge	980 <flattened_map+0xa8>
 95c:	ldr	r0, [sp, #48]	; 0x30
 960:	add	r1, sp, #60	; 0x3c
 964:	add	r0, r1, r0
 968:	movw	r1, #45	; 0x2d
 96c:	strb	r1, [r0]
 970:	ldr	r0, [sp, #48]	; 0x30
 974:	add	r0, r0, #1
 978:	str	r0, [sp, #48]	; 0x30
 97c:	b	950 <flattened_map+0x78>
 980:	b	984 <flattened_map+0xac>
 984:	ldr	r0, [pc, #632]	; c04 <flattened_map+0x32c>
 988:	add	r2, pc, r0
 98c:	ldr	r0, [pc, #628]	; c08 <flattened_map+0x330>
 990:	ldr	r0, [pc, r0]
 994:	vldr	s0, [pc, #624]	; c0c <flattened_map+0x334>
 998:	ldr	r1, [pc, #624]	; c10 <flattened_map+0x338>
 99c:	ldr	r1, [pc, r1]
 9a0:	add	r3, sp, #60	; 0x3c
 9a4:	add	r3, r3, #50	; 0x32
 9a8:	ldr	ip, [r1, #28]
 9ac:	ldr	ip, [ip, #56]	; 0x38
 9b0:	ldr	r1, [r1, #28]
 9b4:	ldr	r1, [r1, #56]	; 0x38
 9b8:	vmov	s2, r1
 9bc:	vcvt.f32.u32	s2, s2
 9c0:	vmul.f32	s0, s0, s2
 9c4:	ldr	r0, [r0, #4]
 9c8:	vmov	s2, r0
 9cc:	vcvt.f32.s32	s2, s2
 9d0:	vdiv.f32	s0, s0, s2
 9d4:	vcvt.f64.f32	d16, s0
 9d8:	mov	r0, r3
 9dc:	movw	r1, #462	; 0x1ce
 9e0:	mov	r3, ip
 9e4:	vstr	d16, [sp]
 9e8:	bl	644 <snprintf@plt>
 9ec:	ldr	r1, [pc, #524]	; c00 <flattened_map+0x328>
 9f0:	add	r2, pc, r1
 9f4:	add	r3, sp, #60	; 0x3c
 9f8:	ldr	r1, [fp, #-12]
 9fc:	str	r0, [sp, #28]
 a00:	mov	r0, r1
 a04:	movw	r1, #15
 a08:	bl	62c <sendto_one_numeric@plt>
 a0c:	ldr	r0, [pc, #488]	; bfc <flattened_map+0x324>
 a10:	ldr	r0, [pc, r0]
 a14:	ldr	r0, [r0]
 a18:	str	r0, [sp, #56]	; 0x38
 a1c:	ldr	r0, [sp, #56]	; 0x38
 a20:	movw	r1, #0
 a24:	cmp	r0, r1
 a28:	beq	bf0 <flattened_map+0x318>
 a2c:	ldr	r0, [sp, #56]	; 0x38
 a30:	ldr	r0, [r0]
 a34:	str	r0, [sp, #52]	; 0x34
 a38:	ldr	r0, [sp, #40]	; 0x28
 a3c:	add	r0, r0, #1
 a40:	str	r0, [sp, #40]	; 0x28
 a44:	ldr	r0, [sp, #52]	; 0x34
 a48:	ldrh	r0, [r0, #80]	; 0x50
 a4c:	cmp	r0, #4
 a50:	bne	a58 <flattened_map+0x180>
 a54:	b	be0 <flattened_map+0x308>
 a58:	ldr	r0, [pc, #436]	; c14 <flattened_map+0x33c>
 a5c:	ldr	r0, [pc, r0]
 a60:	ldr	r0, [r0, #12]
 a64:	cmp	r0, #0
 a68:	bne	a84 <flattened_map+0x1ac>
 a6c:	ldr	r0, [sp, #52]	; 0x34
 a70:	ldrb	r0, [r0, #65]	; 0x41
 a74:	tst	r0, #8
 a78:	beq	a84 <flattened_map+0x1ac>
 a7c:	b	a80 <flattened_map+0x1a8>
 a80:	b	be0 <flattened_map+0x308>
 a84:	ldr	r0, [pc, #396]	; c18 <flattened_map+0x340>
 a88:	ldr	r0, [pc, r0]
 a8c:	ldr	r1, [sp, #40]	; 0x28
 a90:	ldr	r0, [r0, #8]
 a94:	cmp	r1, r0
 a98:	bne	ab8 <flattened_map+0x1e0>
 a9c:	ldr	r0, [pc, #380]	; c20 <flattened_map+0x348>
 aa0:	add	r1, pc, r0
 aa4:	add	r0, sp, #60	; 0x3c
 aa8:	movw	r2, #512	; 0x200
 aac:	bl	65c <rb_strlcpy@plt>
 ab0:	str	r0, [sp, #24]
 ab4:	b	ad0 <flattened_map+0x1f8>
 ab8:	ldr	r0, [pc, #348]	; c1c <flattened_map+0x344>
 abc:	add	r1, pc, r0
 ac0:	add	r0, sp, #60	; 0x3c
 ac4:	movw	r2, #512	; 0x200
 ac8:	bl	65c <rb_strlcpy@plt>
 acc:	str	r0, [sp, #20]
 ad0:	add	r0, sp, #60	; 0x3c
 ad4:	ldr	r1, [sp, #52]	; 0x34
 ad8:	add	r1, r1, #88	; 0x58
 adc:	movw	r2, #512	; 0x200
 ae0:	bl	668 <rb_strlcat@plt>
 ae4:	add	r1, sp, #60	; 0x3c
 ae8:	str	r0, [sp, #16]
 aec:	mov	r0, r1
 af0:	str	r1, [sp, #12]
 af4:	bl	638 <strlen@plt>
 af8:	str	r0, [sp, #44]	; 0x2c
 afc:	ldr	r0, [sp, #44]	; 0x2c
 b00:	ldr	r1, [sp, #12]
 b04:	add	r0, r1, r0
 b08:	movw	r2, #32
 b0c:	strb	r2, [r0]
 b10:	ldr	r0, [sp, #44]	; 0x2c
 b14:	cmp	r0, #50	; 0x32
 b18:	bge	b5c <flattened_map+0x284>
 b1c:	ldr	r0, [sp, #44]	; 0x2c
 b20:	add	r0, r0, #1
 b24:	str	r0, [sp, #48]	; 0x30
 b28:	ldr	r0, [sp, #48]	; 0x30
 b2c:	cmp	r0, #50	; 0x32
 b30:	bge	b58 <flattened_map+0x280>
 b34:	ldr	r0, [sp, #48]	; 0x30
 b38:	add	r1, sp, #60	; 0x3c
 b3c:	add	r0, r1, r0
 b40:	movw	r1, #45	; 0x2d
 b44:	strb	r1, [r0]
 b48:	ldr	r0, [sp, #48]	; 0x30
 b4c:	add	r0, r0, #1
 b50:	str	r0, [sp, #48]	; 0x30
 b54:	b	b28 <flattened_map+0x250>
 b58:	b	b5c <flattened_map+0x284>
 b5c:	ldr	r0, [pc, #196]	; c28 <flattened_map+0x350>
 b60:	add	r2, pc, r0
 b64:	ldr	r0, [pc, #192]	; c2c <flattened_map+0x354>
 b68:	ldr	r0, [pc, r0]
 b6c:	vldr	s0, [pc, #152]	; c0c <flattened_map+0x334>
 b70:	add	r1, sp, #60	; 0x3c
 b74:	add	r1, r1, #50	; 0x32
 b78:	ldr	r3, [sp, #52]	; 0x34
 b7c:	ldr	r3, [r3, #28]
 b80:	ldr	r3, [r3, #56]	; 0x38
 b84:	ldr	ip, [sp, #52]	; 0x34
 b88:	ldr	ip, [ip, #28]
 b8c:	ldr	ip, [ip, #56]	; 0x38
 b90:	vmov	s2, ip
 b94:	vcvt.f32.u32	s2, s2
 b98:	vmul.f32	s0, s0, s2
 b9c:	ldr	r0, [r0, #4]
 ba0:	vmov	s2, r0
 ba4:	vcvt.f32.s32	s2, s2
 ba8:	vdiv.f32	s0, s0, s2
 bac:	vcvt.f64.f32	d16, s0
 bb0:	mov	r0, r1
 bb4:	movw	r1, #462	; 0x1ce
 bb8:	vstr	d16, [sp]
 bbc:	bl	644 <snprintf@plt>
 bc0:	ldr	r1, [pc, #92]	; c24 <flattened_map+0x34c>
 bc4:	add	r2, pc, r1
 bc8:	add	r3, sp, #60	; 0x3c
 bcc:	ldr	r1, [fp, #-12]
 bd0:	str	r0, [sp, #8]
 bd4:	mov	r0, r1
 bd8:	movw	r1, #15
 bdc:	bl	62c <sendto_one_numeric@plt>
 be0:	ldr	r0, [sp, #56]	; 0x38
 be4:	ldr	r0, [r0, #8]
 be8:	str	r0, [sp, #56]	; 0x38
 bec:	b	a1c <flattened_map+0x144>
 bf0:	sub	sp, fp, #8
 bf4:	pop	{r4, r5, fp, pc}
 bf8:	.word	0x00011758
 bfc:	.word	0x00011614
 c00:	.word	0x000005ce
 c04:	.word	0x0000061d
 c08:	.word	0x000116a0
 c0c:	.word	0x42c80000
 c10:	.word	0x000116a4
 c14:	.word	0x000115d8
 c18:	.word	0x0001159c
 c1c:	.word	0x0000050b
 c20:	.word	0x00000522
 c24:	.word	0x000003fa
 c28:	.word	0x00000445
 c2c:	.word	0x000114c8

00000c30 <dump_map>:
 c30:	push	{fp, lr}
 c34:	mov	fp, sp
 c38:	sub	sp, sp, #72	; 0x48
 c3c:	str	r0, [fp, #-4]
 c40:	str	r1, [fp, #-8]
 c44:	str	r2, [fp, #-12]
 c48:	movw	r0, #0
 c4c:	str	r0, [fp, #-16]
 c50:	str	r0, [fp, #-20]	; 0xffffffec
 c54:	ldr	r0, [fp, #-12]
 c58:	movw	r1, #0
 c5c:	strb	r1, [r0]
 c60:	ldr	r0, [fp, #-12]
 c64:	ldr	r1, [fp, #-8]
 c68:	add	r1, r1, #88	; 0x58
 c6c:	movw	r2, #512	; 0x200
 c70:	bl	668 <rb_strlcat@plt>
 c74:	ldr	r1, [fp, #-8]
 c78:	ldrb	r1, [r1, #396]	; 0x18c
 c7c:	cmp	r1, #0
 c80:	str	r0, [sp, #32]
 c84:	beq	cdc <dump_map+0xac>
 c88:	ldr	r0, [pc, #736]	; f70 <dump_map+0x340>
 c8c:	add	r1, pc, r0
 c90:	ldr	r0, [fp, #-12]
 c94:	movw	r2, #512	; 0x200
 c98:	bl	668 <rb_strlcat@plt>
 c9c:	ldr	r1, [fp, #-12]
 ca0:	ldr	r2, [fp, #-8]
 ca4:	add	r2, r2, #396	; 0x18c
 ca8:	str	r0, [sp, #28]
 cac:	mov	r0, r1
 cb0:	mov	r1, r2
 cb4:	movw	r2, #512	; 0x200
 cb8:	bl	668 <rb_strlcat@plt>
 cbc:	ldr	r1, [pc, #680]	; f6c <dump_map+0x33c>
 cc0:	add	r1, pc, r1
 cc4:	ldr	r2, [fp, #-12]
 cc8:	str	r0, [sp, #24]
 ccc:	mov	r0, r2
 cd0:	movw	r2, #512	; 0x200
 cd4:	bl	668 <rb_strlcat@plt>
 cd8:	str	r0, [sp, #20]
 cdc:	ldr	r0, [pc, #656]	; f74 <dump_map+0x344>
 ce0:	add	r0, pc, r0
 ce4:	ldr	r1, [pc, #676]	; f90 <dump_map+0x360>
 ce8:	add	r1, pc, r1
 cec:	str	r0, [sp, #16]
 cf0:	mov	r0, r1
 cf4:	bl	638 <strlen@plt>
 cf8:	str	r0, [fp, #-24]	; 0xffffffe8
 cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
 d00:	ldr	r1, [sp, #16]
 d04:	add	r0, r1, r0
 d08:	movw	lr, #32
 d0c:	strb	lr, [r0]
 d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
 d14:	cmp	r0, #50	; 0x32
 d18:	bge	d60 <dump_map+0x130>
 d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 d20:	add	r0, r0, #1
 d24:	str	r0, [fp, #-20]	; 0xffffffec
 d28:	ldr	r0, [fp, #-20]	; 0xffffffec
 d2c:	cmp	r0, #50	; 0x32
 d30:	bge	d5c <dump_map+0x12c>
 d34:	ldr	r0, [pc, #592]	; f8c <dump_map+0x35c>
 d38:	add	r0, pc, r0
 d3c:	ldr	r1, [fp, #-20]	; 0xffffffec
 d40:	add	r0, r0, r1
 d44:	movw	r1, #45	; 0x2d
 d48:	strb	r1, [r0]
 d4c:	ldr	r0, [fp, #-20]	; 0xffffffec
 d50:	add	r0, r0, #1
 d54:	str	r0, [fp, #-20]	; 0xffffffec
 d58:	b	d28 <dump_map+0xf8>
 d5c:	b	d60 <dump_map+0x130>
 d60:	ldr	r0, [pc, #536]	; f80 <dump_map+0x350>
 d64:	add	r0, pc, r0
 d68:	add	r0, r0, #50	; 0x32
 d6c:	ldr	r1, [pc, #528]	; f84 <dump_map+0x354>
 d70:	add	r2, pc, r1
 d74:	ldr	r1, [fp, #-8]
 d78:	ldr	r1, [r1, #28]
 d7c:	ldr	r1, [r1, #56]	; 0x38
 d80:	mov	r3, #1000	; 0x3e8
 d84:	mul	r1, r1, r3
 d88:	ldr	r3, [pc, #516]	; f94 <dump_map+0x364>
 d8c:	ldr	r3, [pc, r3]
 d90:	ldr	r3, [r3, #4]
 d94:	add	ip, r3, r3, lsr #31
 d98:	add	r1, r1, ip, asr #1
 d9c:	udiv	r1, r1, r3
 da0:	str	r1, [fp, #-28]	; 0xffffffe4
 da4:	ldr	r1, [fp, #-8]
 da8:	ldr	r1, [r1, #28]
 dac:	ldr	r3, [r1, #56]	; 0x38
 db0:	ldr	r1, [fp, #-28]	; 0xffffffe4
 db4:	movw	ip, #26215	; 0x6667
 db8:	movt	ip, #26214	; 0x6666
 dbc:	smmul	ip, r1, ip
 dc0:	asr	lr, ip, #2
 dc4:	add	ip, lr, ip, lsr #31
 dc8:	add	lr, ip, ip, lsl #2
 dcc:	sub	r1, r1, lr, lsl #1
 dd0:	movw	lr, #462	; 0x1ce
 dd4:	str	r1, [sp, #12]
 dd8:	mov	r1, lr
 ddc:	str	ip, [sp]
 de0:	ldr	ip, [sp, #12]
 de4:	str	ip, [sp, #4]
 de8:	bl	644 <snprintf@plt>
 dec:	ldr	r1, [pc, #388]	; f78 <dump_map+0x348>
 df0:	add	r2, pc, r1
 df4:	ldr	r1, [pc, #384]	; f7c <dump_map+0x34c>
 df8:	add	r3, pc, r1
 dfc:	ldr	r1, [fp, #-4]
 e00:	str	r0, [sp, #8]
 e04:	mov	r0, r1
 e08:	movw	r1, #15
 e0c:	bl	62c <sendto_one_numeric@plt>
 e10:	ldr	r0, [fp, #-8]
 e14:	ldr	r0, [r0, #28]
 e18:	ldr	r0, [r0, #36]	; 0x24
 e1c:	movw	r1, #0
 e20:	cmp	r0, r1
 e24:	beq	eb0 <dump_map+0x280>
 e28:	ldr	r0, [fp, #-8]
 e2c:	ldr	r0, [r0, #28]
 e30:	ldr	r0, [r0, #44]	; 0x2c
 e34:	ldr	r1, [fp, #-16]
 e38:	add	r0, r1, r0
 e3c:	str	r0, [fp, #-16]
 e40:	ldr	r0, [fp, #-16]
 e44:	cmp	r0, #0
 e48:	beq	eac <dump_map+0x27c>
 e4c:	ldr	r0, [pc, #308]	; f88 <dump_map+0x358>
 e50:	add	r0, pc, r0
 e54:	add	r0, r0, #3
 e58:	ldr	r1, [fp, #-12]
 e5c:	cmp	r1, r0
 e60:	bls	ea8 <dump_map+0x278>
 e64:	ldr	r0, [fp, #-12]
 e68:	mvn	r1, #1
 e6c:	add	r0, r0, r1
 e70:	movw	r1, #32
 e74:	strb	r1, [r0]
 e78:	ldr	r0, [fp, #-12]
 e7c:	mvn	r1, #2
 e80:	add	r0, r0, r1
 e84:	ldrb	r0, [r0]
 e88:	cmp	r0, #96	; 0x60
 e8c:	bne	ea4 <dump_map+0x274>
 e90:	ldr	r0, [fp, #-12]
 e94:	mvn	r1, #2
 e98:	add	r0, r0, r1
 e9c:	movw	r1, #32
 ea0:	strb	r1, [r0]
 ea4:	b	ea8 <dump_map+0x278>
 ea8:	b	eac <dump_map+0x27c>
 eac:	b	eb0 <dump_map+0x280>
 eb0:	movw	r0, #1
 eb4:	str	r0, [fp, #-20]	; 0xffffffec
 eb8:	ldr	r0, [fp, #-8]
 ebc:	ldr	r0, [r0, #28]
 ec0:	ldr	r0, [r0, #36]	; 0x24
 ec4:	str	r0, [sp, #36]	; 0x24
 ec8:	ldr	r0, [sp, #36]	; 0x24
 ecc:	movw	r1, #0
 ed0:	cmp	r0, r1
 ed4:	beq	f64 <dump_map+0x334>
 ed8:	ldr	r0, [sp, #36]	; 0x24
 edc:	ldr	r0, [r0]
 ee0:	str	r0, [fp, #-32]	; 0xffffffe0
 ee4:	ldr	r0, [fp, #-12]
 ee8:	movw	r1, #32
 eec:	strb	r1, [r0]
 ef0:	ldr	r0, [fp, #-20]	; 0xffffffec
 ef4:	ldr	r1, [fp, #-16]
 ef8:	cmp	r0, r1
 efc:	bge	f10 <dump_map+0x2e0>
 f00:	ldr	r0, [fp, #-12]
 f04:	movw	r1, #124	; 0x7c
 f08:	strb	r1, [r0, #1]
 f0c:	b	f1c <dump_map+0x2ec>
 f10:	ldr	r0, [fp, #-12]
 f14:	movw	r1, #96	; 0x60
 f18:	strb	r1, [r0, #1]
 f1c:	ldr	r0, [fp, #-12]
 f20:	movw	r1, #45	; 0x2d
 f24:	strb	r1, [r0, #2]
 f28:	ldr	r0, [fp, #-12]
 f2c:	movw	r1, #32
 f30:	strb	r1, [r0, #3]
 f34:	ldr	r0, [fp, #-4]
 f38:	ldr	r1, [fp, #-32]	; 0xffffffe0
 f3c:	ldr	r2, [fp, #-12]
 f40:	add	r2, r2, #4
 f44:	bl	c30 <dump_map>
 f48:	ldr	r0, [fp, #-20]	; 0xffffffec
 f4c:	add	r0, r0, #1
 f50:	str	r0, [fp, #-20]	; 0xffffffec
 f54:	ldr	r0, [sp, #36]	; 0x24
 f58:	ldr	r0, [r0, #8]
 f5c:	str	r0, [sp, #36]	; 0x24
 f60:	b	ec8 <dump_map+0x298>
 f64:	mov	sp, fp
 f68:	pop	{fp, pc}
 f6c:	.word	0x0000030e
 f70:	.word	0x00000340
 f74:	.word	0x000113e1
 f78:	.word	0x000001ce
 f7c:	.word	0x000112c9
 f80:	.word	0x0001135d
 f84:	.word	0x00000260
 f88:	.word	0x00011271
 f8c:	.word	0x00011389
 f90:	.word	0x000113d9
 f94:	.word	0x000112a4

Disassembly of section .fini:

00000f98 <_fini>:
 f98:	push	{r3, lr}
 f9c:	pop	{r3, pc}
