
../repos/daq-2.0.7/os-daq-modules/.libs/daq_afpacket.so:     file format elf32-littlearm


Disassembly of section .init:

00000944 <_init>:
 944:	push	{r3, lr}
 948:	bl	b00 <call_weak_fn>
 94c:	pop	{r3, pc}

Disassembly of section .plt:

00000950 <.plt>:
 950:	push	{lr}		; (str lr, [sp, #-4]!)
 954:	ldr	lr, [pc, #4]	; 960 <.plt+0x10>
 958:	add	lr, pc, lr
 95c:	ldr	pc, [lr, #8]!
 960:	.word	0x000126a0

00000964 <calloc@plt>:
 964:	add	ip, pc, #0, 12
 968:	add	ip, ip, #73728	; 0x12000
 96c:	ldr	pc, [ip, #1696]!	; 0x6a0

00000970 <strstr@plt>:
 970:	add	ip, pc, #0, 12
 974:	add	ip, ip, #73728	; 0x12000
 978:	ldr	pc, [ip, #1688]!	; 0x698

0000097c <strcmp@plt>:
 97c:	add	ip, pc, #0, 12
 980:	add	ip, ip, #73728	; 0x12000
 984:	ldr	pc, [ip, #1680]!	; 0x690

00000988 <__cxa_finalize@plt>:
 988:	add	ip, pc, #0, 12
 98c:	add	ip, ip, #73728	; 0x12000
 990:	ldr	pc, [ip, #1672]!	; 0x688

00000994 <setsockopt@plt>:
 994:	add	ip, pc, #0, 12
 998:	add	ip, ip, #73728	; 0x12000
 99c:	ldr	pc, [ip, #1664]!	; 0x680

000009a0 <strcspn@plt>:
 9a0:	add	ip, pc, #0, 12
 9a4:	add	ip, ip, #73728	; 0x12000
 9a8:	ldr	pc, [ip, #1656]!	; 0x678

000009ac <printf@plt>:
 9ac:	add	ip, pc, #0, 12
 9b0:	add	ip, ip, #73728	; 0x12000
 9b4:	ldr	pc, [ip, #1648]!	; 0x670

000009b8 <free@plt>:
 9b8:	add	ip, pc, #0, 12
 9bc:	add	ip, ip, #73728	; 0x12000
 9c0:	ldr	pc, [ip, #1640]!	; 0x668

000009c4 <memcpy@plt>:
 9c4:	add	ip, pc, #0, 12
 9c8:	add	ip, ip, #73728	; 0x12000
 9cc:	ldr	pc, [ip, #1632]!	; 0x660

000009d0 <strdup@plt>:
 9d0:	add	ip, pc, #0, 12
 9d4:	add	ip, ip, #73728	; 0x12000
 9d8:	ldr	pc, [ip, #1624]!	; 0x658

000009dc <poll@plt>:
 9dc:	add	ip, pc, #0, 12
 9e0:	add	ip, ip, #73728	; 0x12000
 9e4:	ldr	pc, [ip, #1616]!	; 0x650

000009e8 <getsockopt@plt>:
 9e8:	add	ip, pc, #0, 12
 9ec:	add	ip, ip, #73728	; 0x12000
 9f0:	ldr	pc, [ip, #1608]!	; 0x648

000009f4 <ioctl@plt>:
 9f4:	add	ip, pc, #0, 12
 9f8:	add	ip, ip, #73728	; 0x12000
 9fc:	ldr	pc, [ip, #1600]!	; 0x640

00000a00 <sfbpf_freecode@plt>:
 a00:	add	ip, pc, #0, 12
 a04:	add	ip, ip, #73728	; 0x12000
 a08:	ldr	pc, [ip, #1592]!	; 0x638

00000a0c <getenv@plt>:
 a0c:	add	ip, pc, #0, 12
 a10:	add	ip, ip, #73728	; 0x12000
 a14:	ldr	pc, [ip, #1584]!	; 0x630

00000a18 <puts@plt>:
 a18:	add	ip, pc, #0, 12
 a1c:	add	ip, ip, #73728	; 0x12000
 a20:	ldr	pc, [ip, #1576]!	; 0x628

00000a24 <sfbpf_compile@plt>:
 a24:	add	ip, pc, #0, 12
 a28:	add	ip, ip, #73728	; 0x12000
 a2c:	ldr	pc, [ip, #1568]!	; 0x620

00000a30 <strerror@plt>:
 a30:	add	ip, pc, #0, 12
 a34:	add	ip, ip, #73728	; 0x12000
 a38:	ldr	pc, [ip, #1560]!	; 0x618

00000a3c <__gmon_start__@plt>:
 a3c:	add	ip, pc, #0, 12
 a40:	add	ip, ip, #73728	; 0x12000
 a44:	ldr	pc, [ip, #1552]!	; 0x610

00000a48 <strtoul@plt>:
 a48:	add	ip, pc, #0, 12
 a4c:	add	ip, ip, #73728	; 0x12000
 a50:	ldr	pc, [ip, #1544]!	; 0x608

00000a54 <strlen@plt>:
 a54:	add	ip, pc, #0, 12
 a58:	add	ip, ip, #73728	; 0x12000
 a5c:	ldr	pc, [ip, #1536]!	; 0x600

00000a60 <mmap@plt>:
 a60:	add	ip, pc, #0, 12
 a64:	add	ip, ip, #73728	; 0x12000
 a68:	ldr	pc, [ip, #1528]!	; 0x5f8

00000a6c <fprintf@plt>:
 a6c:	add	ip, pc, #0, 12
 a70:	add	ip, ip, #73728	; 0x12000
 a74:	ldr	pc, [ip, #1520]!	; 0x5f0

00000a78 <getpagesize@plt>:
 a78:	add	ip, pc, #0, 12
 a7c:	add	ip, ip, #73728	; 0x12000
 a80:	ldr	pc, [ip, #1512]!	; 0x5e8

00000a84 <__errno_location@plt>:
 a84:	add	ip, pc, #0, 12
 a88:	add	ip, ip, #73728	; 0x12000
 a8c:	ldr	pc, [ip, #1504]!	; 0x5e0

00000a90 <snprintf@plt>:
 a90:	add	ip, pc, #0, 12
 a94:	add	ip, ip, #73728	; 0x12000
 a98:	ldr	pc, [ip, #1496]!	; 0x5d8

00000a9c <bind@plt>:
 a9c:	add	ip, pc, #0, 12
 aa0:	add	ip, ip, #73728	; 0x12000
 aa4:	ldr	pc, [ip, #1488]!	; 0x5d0

00000aa8 <memset@plt>:
 aa8:	add	ip, pc, #0, 12
 aac:	add	ip, ip, #73728	; 0x12000
 ab0:	ldr	pc, [ip, #1480]!	; 0x5c8

00000ab4 <strncpy@plt>:
 ab4:	add	ip, pc, #0, 12
 ab8:	add	ip, ip, #73728	; 0x12000
 abc:	ldr	pc, [ip, #1472]!	; 0x5c0

00000ac0 <munmap@plt>:
 ac0:	add	ip, pc, #0, 12
 ac4:	add	ip, ip, #73728	; 0x12000
 ac8:	ldr	pc, [ip, #1464]!	; 0x5b8

00000acc <sfbpf_filter@plt>:
 acc:	add	ip, pc, #0, 12
 ad0:	add	ip, ip, #73728	; 0x12000
 ad4:	ldr	pc, [ip, #1456]!	; 0x5b0

00000ad8 <socket@plt>:
 ad8:	add	ip, pc, #0, 12
 adc:	add	ip, ip, #73728	; 0x12000
 ae0:	ldr	pc, [ip, #1448]!	; 0x5a8

00000ae4 <close@plt>:
 ae4:	add	ip, pc, #0, 12
 ae8:	add	ip, ip, #73728	; 0x12000
 aec:	ldr	pc, [ip, #1440]!	; 0x5a0

00000af0 <send@plt>:
 af0:	add	ip, pc, #0, 12
 af4:	add	ip, ip, #73728	; 0x12000
 af8:	ldr	pc, [ip, #1432]!	; 0x598

Disassembly of section .text:

00000b00 <call_weak_fn>:
     b00:	ldr	r3, [pc, #20]	; b1c <call_weak_fn+0x1c>
     b04:	ldr	r2, [pc, #20]	; b20 <call_weak_fn+0x20>
     b08:	add	r3, pc, r3
     b0c:	ldr	r2, [r3, r2]
     b10:	cmp	r2, #0
     b14:	bxeq	lr
     b18:	b	a3c <__gmon_start__@plt>
     b1c:	.word	0x000124f0
     b20:	.word	0x000000a0

00000b24 <deregister_tm_clones>:
     b24:	ldr	r0, [pc, #44]	; b58 <deregister_tm_clones+0x34>
     b28:	ldr	r3, [pc, #44]	; b5c <deregister_tm_clones+0x38>
     b2c:	add	r0, pc, r0
     b30:	add	r3, pc, r3
     b34:	cmp	r3, r0
     b38:	ldr	r3, [pc, #32]	; b60 <deregister_tm_clones+0x3c>
     b3c:	add	r3, pc, r3
     b40:	bxeq	lr
     b44:	ldr	r2, [pc, #24]	; b64 <deregister_tm_clones+0x40>
     b48:	ldr	r3, [r3, r2]
     b4c:	cmp	r3, #0
     b50:	bxeq	lr
     b54:	bx	r3
     b58:	.word	0x00012578
     b5c:	.word	0x00012574
     b60:	.word	0x000124bc
     b64:	.word	0x00000098

00000b68 <register_tm_clones>:
     b68:	ldr	r0, [pc, #56]	; ba8 <register_tm_clones+0x40>
     b6c:	ldr	r3, [pc, #56]	; bac <register_tm_clones+0x44>
     b70:	add	r0, pc, r0
     b74:	add	r3, pc, r3
     b78:	sub	r1, r3, r0
     b7c:	ldr	r3, [pc, #44]	; bb0 <register_tm_clones+0x48>
     b80:	asr	r1, r1, #2
     b84:	add	r3, pc, r3
     b88:	add	r1, r1, r1, lsr #31
     b8c:	asrs	r1, r1, #1
     b90:	bxeq	lr
     b94:	ldr	r2, [pc, #24]	; bb4 <register_tm_clones+0x4c>
     b98:	ldr	r3, [r3, r2]
     b9c:	cmp	r3, #0
     ba0:	bxeq	lr
     ba4:	bx	r3
     ba8:	.word	0x00012534
     bac:	.word	0x00012530
     bb0:	.word	0x00012474
     bb4:	.word	0x000000a4

00000bb8 <__do_global_dtors_aux>:
     bb8:	ldr	r3, [pc, #76]	; c0c <__do_global_dtors_aux+0x54>
     bbc:	ldr	r2, [pc, #76]	; c10 <__do_global_dtors_aux+0x58>
     bc0:	add	r3, pc, r3
     bc4:	add	r2, pc, r2
     bc8:	ldrb	r3, [r3]
     bcc:	cmp	r3, #0
     bd0:	bxne	lr
     bd4:	ldr	r3, [pc, #56]	; c14 <__do_global_dtors_aux+0x5c>
     bd8:	push	{r4, lr}
     bdc:	ldr	r3, [r2, r3]
     be0:	cmp	r3, #0
     be4:	beq	bf4 <__do_global_dtors_aux+0x3c>
     be8:	ldr	r3, [pc, #40]	; c18 <__do_global_dtors_aux+0x60>
     bec:	ldr	r0, [pc, r3]
     bf0:	bl	988 <__cxa_finalize@plt>
     bf4:	bl	b24 <deregister_tm_clones>
     bf8:	ldr	r3, [pc, #28]	; c1c <__do_global_dtors_aux+0x64>
     bfc:	mov	r2, #1
     c00:	add	r3, pc, r3
     c04:	strb	r2, [r3]
     c08:	pop	{r4, pc}
     c0c:	.word	0x000124e4
     c10:	.word	0x00012434
     c14:	.word	0x00000094
     c18:	.word	0x000124b4
     c1c:	.word	0x000124a4

00000c20 <frame_dummy>:
     c20:	b	b68 <register_tm_clones>
     c24:	andeq	r0, r0, r0

00000c28 <afpacket_daq_initialize>:
     c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     c2c:	add	fp, sp, #28
     c30:	sub	sp, sp, #4
     c34:	vpush	{d8-d9}
     c38:	sub	sp, sp, #80	; 0x50
     c3c:	mov	r5, r1
     c40:	mov	sl, r0
     c44:	mov	r0, #1
     c48:	mov	r1, #408	; 0x198
     c4c:	mov	r9, r3
     c50:	mov	r6, r2
     c54:	bl	964 <calloc@plt>
     c58:	cmp	r0, #0
     c5c:	beq	fa8 <afpacket_daq_initialize+0x380>
     c60:	mov	r8, r0
     c64:	ldr	r0, [sl]
     c68:	bl	9d0 <strdup@plt>
     c6c:	cmp	r0, #0
     c70:	str	r0, [r8]
     c74:	beq	fcc <afpacket_daq_initialize+0x3a4>
     c78:	mov	r7, r0
     c7c:	ldmib	sl, {r0, r1}
     c80:	cmp	r1, #0
     c84:	ldrb	r4, [r7]
     c88:	mvneq	r1, #0
     c8c:	strd	r0, [r8, #8]
     c90:	cmp	r4, #58	; 0x3a
     c94:	beq	1008 <afpacket_daq_initialize+0x3e0>
     c98:	mov	r0, r7
     c9c:	bl	a54 <strlen@plt>
     ca0:	cmp	r0, #0
     ca4:	beq	cb8 <afpacket_daq_initialize+0x90>
     ca8:	add	r0, r7, r0
     cac:	ldrb	r0, [r0, #-1]
     cb0:	cmp	r0, #58	; 0x3a
     cb4:	beq	1008 <afpacket_daq_initialize+0x3e0>
     cb8:	ldr	r0, [sl, #12]
     cbc:	cmp	r0, #0
     cc0:	beq	ff0 <afpacket_daq_initialize+0x3c8>
     cc4:	cmp	r4, #0
     cc8:	str	r5, [sp, #8]
     ccc:	beq	1060 <afpacket_daq_initialize+0x438>
     cd0:	ldr	r5, [pc, #1220]	; 119c <afpacket_daq_initialize+0x574>
     cd4:	vmov.i32	q4, #0	; 0x00000000
     cd8:	add	r0, sp, #16
     cdc:	mov	r4, #0
     ce0:	str	sl, [sp, #12]
     ce4:	stm	r0, {r6, r8, r9}
     ce8:	add	r5, pc, r5
     cec:	mov	r0, r7
     cf0:	mov	r1, r5
     cf4:	bl	9a0 <strcspn@plt>
     cf8:	cmp	r0, #16
     cfc:	bcs	1098 <afpacket_daq_initialize+0x470>
     d00:	cmp	r0, #0
     d04:	beq	e88 <afpacket_daq_initialize+0x260>
     d08:	ldr	r1, [r8, #28]
     d0c:	add	r1, r1, #1
     d10:	cmp	r1, #32
     d14:	str	r1, [r8, #28]
     d18:	bcs	10a8 <afpacket_daq_initialize+0x480>
     d1c:	str	r0, [sp, #28]
     d20:	mov	r9, r4
     d24:	add	r4, sp, #32
     d28:	add	r1, r0, #1
     d2c:	mov	r3, r7
     d30:	ldr	r2, [pc, #1136]	; 11a8 <afpacket_daq_initialize+0x580>
     d34:	mov	r0, r4
     d38:	add	r2, pc, r2
     d3c:	bl	a90 <snprintf@plt>
     d40:	mov	r0, #1
     d44:	mov	r1, #116	; 0x74
     d48:	bl	964 <calloc@plt>
     d4c:	mov	r5, r0
     d50:	cmp	r0, #0
     d54:	beq	10bc <afpacket_daq_initialize+0x494>
     d58:	mvn	r0, #0
     d5c:	str	r0, [r5, #16]
     d60:	mov	r0, r4
     d64:	bl	9d0 <strdup@plt>
     d68:	cmp	r0, #0
     d6c:	str	r0, [r5, #84]	; 0x54
     d70:	beq	10c8 <afpacket_daq_initialize+0x4a0>
     d74:	mov	r0, #17
     d78:	mov	r1, #3
     d7c:	mov	r2, #768	; 0x300
     d80:	bl	ad8 <socket@plt>
     d84:	cmn	r0, #1
     d88:	str	r0, [r5, #4]
     d8c:	beq	10d4 <afpacket_daq_initialize+0x4ac>
     d90:	add	r4, sp, #48	; 0x30
     d94:	add	r1, sp, #32
     d98:	mov	r2, #16
     d9c:	mov	r0, r4
     da0:	vst1.64	{d8-d9}, [r0]!
     da4:	vst1.64	{d8-d9}, [r0]
     da8:	mov	r0, r4
     dac:	bl	ab4 <strncpy@plt>
     db0:	ldr	r0, [r5, #4]
     db4:	movw	r1, #35123	; 0x8933
     db8:	mov	r2, r4
     dbc:	bl	9f4 <ioctl@plt>
     dc0:	cmn	r0, #1
     dc4:	beq	10f0 <afpacket_daq_initialize+0x4c8>
     dc8:	movw	r1, #17
     dcc:	ldr	r0, [sp, #64]	; 0x40
     dd0:	movt	r1, #768	; 0x300
     dd4:	str	r1, [r5, #96]	; 0x60
     dd8:	ldr	r1, [r8, #24]
     ddc:	str	r5, [r8, #24]
     de0:	str	r0, [r5, #100]	; 0x64
     de4:	str	r0, [r5, #88]	; 0x58
     de8:	add	r0, r9, #1
     dec:	str	r1, [r5]
     df0:	ldr	r2, [sl, #12]
     df4:	cmp	r2, #0
     df8:	beq	e90 <afpacket_daq_initialize+0x268>
     dfc:	cmp	r0, #2
     e00:	bne	ea4 <afpacket_daq_initialize+0x27c>
     e04:	ldr	r9, [r5, #84]	; 0x54
     e08:	ldr	sl, [r1, #84]	; 0x54
     e0c:	mov	r4, #0
     e10:	mov	r8, #0
     e14:	ldr	r6, [r5, #84]	; 0x54
     e18:	mov	r1, sl
     e1c:	mov	r0, r6
     e20:	bl	97c <strcmp@plt>
     e24:	cmp	r0, #0
     e28:	beq	e44 <afpacket_daq_initialize+0x21c>
     e2c:	mov	r0, r6
     e30:	mov	r1, r9
     e34:	bl	97c <strcmp@plt>
     e38:	cmp	r0, #0
     e3c:	moveq	r4, r5
     e40:	b	e48 <afpacket_daq_initialize+0x220>
     e44:	mov	r8, r5
     e48:	ldr	r5, [r5]
     e4c:	cmp	r5, #0
     e50:	bne	e14 <afpacket_daq_initialize+0x1ec>
     e54:	cmp	r8, #0
     e58:	cmpne	r4, #0
     e5c:	beq	106c <afpacket_daq_initialize+0x444>
     e60:	str	r4, [r8, #92]	; 0x5c
     e64:	str	r8, [r4, #92]	; 0x5c
     e68:	add	r9, sp, #16
     e6c:	ldr	sl, [sp, #12]
     e70:	mov	r4, #0
     e74:	ldm	r9, {r6, r8, r9}
     e78:	ldr	r5, [pc, #836]	; 11c4 <afpacket_daq_initialize+0x59c>
     e7c:	ldr	r1, [sp, #28]
     e80:	add	r5, pc, r5
     e84:	b	ec0 <afpacket_daq_initialize+0x298>
     e88:	mov	r1, #1
     e8c:	b	ec0 <afpacket_daq_initialize+0x298>
     e90:	ldr	r5, [pc, #808]	; 11c0 <afpacket_daq_initialize+0x598>
     e94:	ldr	r1, [sp, #28]
     e98:	mov	r4, r0
     e9c:	add	r5, pc, r5
     ea0:	b	ebc <afpacket_daq_initialize+0x294>
     ea4:	ldr	r1, [sp, #28]
     ea8:	cmp	r9, #1
     eac:	mov	r4, r0
     eb0:	bgt	1178 <afpacket_daq_initialize+0x550>
     eb4:	ldr	r5, [pc, #780]	; 11c8 <afpacket_daq_initialize+0x5a0>
     eb8:	add	r5, pc, r5
     ebc:	ldr	r9, [sp, #24]
     ec0:	ldrb	r0, [r7, r1]!
     ec4:	cmp	r0, #0
     ec8:	bne	cec <afpacket_daq_initialize+0xc4>
     ecc:	ldr	r5, [r8, #24]
     ed0:	cmp	r5, #0
     ed4:	beq	1060 <afpacket_daq_initialize+0x438>
     ed8:	cmp	r4, #0
     edc:	ldrne	r0, [sl, #12]
     ee0:	cmpne	r0, #0
     ee4:	bne	1060 <afpacket_daq_initialize+0x438>
     ee8:	ldr	r4, [sl, #20]
     eec:	cmp	r4, #0
     ef0:	beq	f5c <afpacket_daq_initialize+0x334>
     ef4:	ldr	r7, [pc, #720]	; 11cc <afpacket_daq_initialize+0x5a4>
     ef8:	mov	sl, r8
     efc:	ldr	r8, [pc, #716]	; 11d0 <afpacket_daq_initialize+0x5a8>
     f00:	mov	r9, #0
     f04:	add	r7, pc, r7
     f08:	add	r8, pc, r8
     f0c:	ldr	r6, [r4]
     f10:	mov	r1, r7
     f14:	mov	r0, r6
     f18:	bl	97c <strcmp@plt>
     f1c:	cmp	r0, #0
     f20:	beq	f40 <afpacket_daq_initialize+0x318>
     f24:	mov	r0, r6
     f28:	mov	r1, r8
     f2c:	bl	97c <strcmp@plt>
     f30:	cmp	r0, #0
     f34:	moveq	r0, #1
     f38:	streq	r0, [sl, #20]
     f3c:	b	f44 <afpacket_daq_initialize+0x31c>
     f40:	ldr	r9, [r4, #4]
     f44:	ldr	r4, [r4, #8]
     f48:	cmp	r4, #0
     f4c:	bne	f0c <afpacket_daq_initialize+0x2e4>
     f50:	cmp	r9, #0
     f54:	mov	r8, sl
     f58:	bne	f74 <afpacket_daq_initialize+0x34c>
     f5c:	ldr	r0, [pc, #624]	; 11d4 <afpacket_daq_initialize+0x5ac>
     f60:	add	r0, pc, r0
     f64:	bl	a0c <getenv@plt>
     f68:	mov	r9, r0
     f6c:	cmp	r0, #0
     f70:	beq	1120 <afpacket_daq_initialize+0x4f8>
     f74:	ldr	r0, [pc, #604]	; 11d8 <afpacket_daq_initialize+0x5b0>
     f78:	mov	r1, r9
     f7c:	add	r0, pc, r0
     f80:	bl	97c <strcmp@plt>
     f84:	cmp	r0, #0
     f88:	beq	1120 <afpacket_daq_initialize+0x4f8>
     f8c:	mov	r0, r9
     f90:	mov	r1, #0
     f94:	mov	r2, #10
     f98:	bl	a48 <strtoul@plt>
     f9c:	ldr	r5, [r8, #24]
     fa0:	lsl	r0, r0, #20
     fa4:	b	1124 <afpacket_daq_initialize+0x4fc>
     fa8:	ldr	r2, [pc, #464]	; 1180 <afpacket_daq_initialize+0x558>
     fac:	ldr	r3, [pc, #464]	; 1184 <afpacket_daq_initialize+0x55c>
     fb0:	mov	r0, r6
     fb4:	mov	r1, r9
     fb8:	add	r2, pc, r2
     fbc:	add	r3, pc, r3
     fc0:	bl	a90 <snprintf@plt>
     fc4:	mvn	r6, #1
     fc8:	b	104c <afpacket_daq_initialize+0x424>
     fcc:	ldr	r2, [pc, #436]	; 1188 <afpacket_daq_initialize+0x560>
     fd0:	ldr	r3, [pc, #436]	; 118c <afpacket_daq_initialize+0x564>
     fd4:	mov	r0, r6
     fd8:	mov	r1, r9
     fdc:	add	r2, pc, r2
     fe0:	add	r3, pc, r3
     fe4:	bl	a90 <snprintf@plt>
     fe8:	mvn	r6, #1
     fec:	b	102c <afpacket_daq_initialize+0x404>
     ff0:	ldr	r1, [pc, #408]	; 1190 <afpacket_daq_initialize+0x568>
     ff4:	mov	r0, r7
     ff8:	add	r1, pc, r1
     ffc:	bl	970 <strstr@plt>
    1000:	cmp	r0, #0
    1004:	beq	cc4 <afpacket_daq_initialize+0x9c>
    1008:	str	r7, [sp]
    100c:	ldr	r2, [pc, #384]	; 1194 <afpacket_daq_initialize+0x56c>
    1010:	add	r2, pc, r2
    1014:	ldr	r3, [pc, #380]	; 1198 <afpacket_daq_initialize+0x570>
    1018:	mov	r0, r6
    101c:	mov	r1, r9
    1020:	add	r3, pc, r3
    1024:	bl	a90 <snprintf@plt>
    1028:	mvn	r6, #0
    102c:	mov	r0, r8
    1030:	bl	1e50 <af_packet_close>
    1034:	ldr	r0, [r8]
    1038:	cmp	r0, #0
    103c:	beq	1044 <afpacket_daq_initialize+0x41c>
    1040:	bl	9b8 <free@plt>
    1044:	mov	r0, r8
    1048:	bl	9b8 <free@plt>
    104c:	mov	r0, r6
    1050:	sub	sp, fp, #48	; 0x30
    1054:	vpop	{d8-d9}
    1058:	add	sp, sp, #4
    105c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1060:	ldr	r0, [r8]
    1064:	str	r0, [sp]
    1068:	b	100c <afpacket_daq_initialize+0x3e4>
    106c:	str	sl, [sp]
    1070:	str	r9, [sp, #4]
    1074:	ldr	r2, [pc, #352]	; 11dc <afpacket_daq_initialize+0x5b4>
    1078:	ldr	r3, [pc, #352]	; 11e0 <afpacket_daq_initialize+0x5b8>
    107c:	ldr	r0, [sp, #16]
    1080:	ldr	r1, [sp, #24]
    1084:	add	r2, pc, r2
    1088:	add	r3, pc, r3
    108c:	bl	a90 <snprintf@plt>
    1090:	ldr	r8, [sp, #20]
    1094:	b	1028 <afpacket_daq_initialize+0x400>
    1098:	str	r0, [sp]
    109c:	ldr	r2, [pc, #252]	; 11a0 <afpacket_daq_initialize+0x578>
    10a0:	add	r2, pc, r2
    10a4:	b	1014 <afpacket_daq_initialize+0x3ec>
    10a8:	mov	r0, #32
    10ac:	str	r0, [sp]
    10b0:	ldr	r2, [pc, #236]	; 11a4 <afpacket_daq_initialize+0x57c>
    10b4:	add	r2, pc, r2
    10b8:	b	1014 <afpacket_daq_initialize+0x3ec>
    10bc:	ldr	r2, [pc, #232]	; 11ac <afpacket_daq_initialize+0x584>
    10c0:	add	r2, pc, r2
    10c4:	b	1100 <afpacket_daq_initialize+0x4d8>
    10c8:	ldr	r2, [pc, #224]	; 11b0 <afpacket_daq_initialize+0x588>
    10cc:	add	r2, pc, r2
    10d0:	b	1100 <afpacket_daq_initialize+0x4d8>
    10d4:	bl	a84 <__errno_location@plt>
    10d8:	ldr	r0, [r0]
    10dc:	bl	a30 <strerror@plt>
    10e0:	str	r0, [sp]
    10e4:	ldr	r2, [pc, #200]	; 11b4 <afpacket_daq_initialize+0x58c>
    10e8:	add	r2, pc, r2
    10ec:	b	1100 <afpacket_daq_initialize+0x4d8>
    10f0:	ldr	r0, [r5, #84]	; 0x54
    10f4:	str	r0, [sp]
    10f8:	ldr	r2, [pc, #184]	; 11b8 <afpacket_daq_initialize+0x590>
    10fc:	add	r2, pc, r2
    1100:	ldr	r3, [pc, #180]	; 11bc <afpacket_daq_initialize+0x594>
    1104:	ldr	r1, [sp, #24]
    1108:	mov	r0, r6
    110c:	add	r3, pc, r3
    1110:	bl	a90 <snprintf@plt>
    1114:	mov	r0, r5
    1118:	bl	1e9c <destroy_instance>
    111c:	b	1028 <afpacket_daq_initialize+0x400>
    1120:	mov	r0, #134217728	; 0x8000000
    1124:	mov	r6, #0
    1128:	cmp	r5, #0
    112c:	mov	r1, #0
    1130:	beq	115c <afpacket_daq_initialize+0x534>
    1134:	mov	r1, #0
    1138:	ldr	r3, [r5, #92]	; 0x5c
    113c:	ldr	r2, [r5]
    1140:	cmp	r3, #0
    1144:	mov	r3, #2
    1148:	mov	r5, r2
    114c:	movweq	r3, #1
    1150:	cmp	r2, #0
    1154:	add	r1, r3, r1
    1158:	bne	1138 <afpacket_daq_initialize+0x510>
    115c:	udiv	r0, r0, r1
    1160:	mov	r2, #1
    1164:	str	r2, [r8, #144]	; 0x90
    1168:	str	r0, [r8, #16]
    116c:	ldr	r0, [sp, #8]
    1170:	str	r8, [r0]
    1174:	b	104c <afpacket_daq_initialize+0x424>
    1178:	ldr	r9, [sp, #24]
    117c:	b	ed0 <afpacket_daq_initialize+0x2a8>
    1180:	.word	0x0000143d
    1184:	.word	0x00001474
    1188:	.word	0x0000146c
    118c:	.word	0x00001450
    1190:	.word	0x00001484
    1194:	.word	0x0000146f
    1198:	.word	0x00001410
    119c:	.word	0x00001795
    11a0:	.word	0x0000140a
    11a4:	.word	0x00001419
    11a8:	.word	0x000019e0
    11ac:	.word	0x000014a2
    11b0:	.word	0x000014d7
    11b4:	.word	0x000014ed
    11b8:	.word	0x00001505
    11bc:	.word	0x00001487
    11c0:	.word	0x000015e1
    11c4:	.word	0x000015fd
    11c8:	.word	0x000015c5
    11cc:	.word	0x0000162f
    11d0:	.word	0x0000163a
    11d4:	.word	0x000015e8
    11d8:	.word	0x000015e2
    11dc:	.word	0x0000147d
    11e0:	.word	0x000013a8

000011e4 <afpacket_daq_set_filter>:
    11e4:	push	{r4, r5, fp, lr}
    11e8:	add	fp, sp, #8
    11ec:	sub	sp, sp, #16
    11f0:	mov	r4, r0
    11f4:	ldr	r0, [r0, #4]
    11f8:	mov	r5, r1
    11fc:	cmp	r0, #0
    1200:	beq	1208 <afpacket_daq_set_filter+0x24>
    1204:	bl	9b8 <free@plt>
    1208:	mov	r0, r5
    120c:	bl	9d0 <strdup@plt>
    1210:	cmp	r0, #0
    1214:	str	r0, [r4, #4]
    1218:	beq	125c <afpacket_daq_set_filter+0x78>
    121c:	mov	r3, r0
    1220:	ldr	r0, [r4, #8]
    1224:	mov	r1, #1
    1228:	mov	r5, #0
    122c:	add	r2, sp, #8
    1230:	stm	sp, {r1, r5}
    1234:	mov	r1, #1
    1238:	bl	a24 <sfbpf_compile@plt>
    123c:	cmn	r0, #1
    1240:	ble	126c <afpacket_daq_set_filter+0x88>
    1244:	add	r0, r4, #32
    1248:	bl	a00 <sfbpf_freecode@plt>
    124c:	ldr	r0, [sp, #8]
    1250:	ldr	r1, [sp, #12]
    1254:	strd	r0, [r4, #32]
    1258:	b	128c <afpacket_daq_set_filter+0xa8>
    125c:	ldr	r2, [pc, #52]	; 1298 <afpacket_daq_set_filter+0xb4>
    1260:	add	r0, r4, #148	; 0x94
    1264:	add	r2, pc, r2
    1268:	b	1278 <afpacket_daq_set_filter+0x94>
    126c:	ldr	r2, [pc, #44]	; 12a0 <afpacket_daq_set_filter+0xbc>
    1270:	add	r0, r4, #148	; 0x94
    1274:	add	r2, pc, r2
    1278:	ldr	r3, [pc, #28]	; 129c <afpacket_daq_set_filter+0xb8>
    127c:	mov	r1, #256	; 0x100
    1280:	add	r3, pc, r3
    1284:	bl	a90 <snprintf@plt>
    1288:	mvn	r5, #0
    128c:	mov	r0, r5
    1290:	sub	sp, fp, #8
    1294:	pop	{r4, r5, fp, pc}
    1298:	.word	0x000013e7
    129c:	.word	0x000013ff
    12a0:	.word	0x00001423

000012a4 <afpacket_daq_start>:
    12a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    12a8:	add	fp, sp, #28
    12ac:	sub	sp, sp, #4
    12b0:	vpush	{d8-d9}
    12b4:	sub	sp, sp, #80	; 0x50
    12b8:	ldr	r5, [r0, #24]
    12bc:	mov	r8, r0
    12c0:	cmp	r5, #0
    12c4:	beq	1548 <afpacket_daq_start+0x2a4>
    12c8:	vmov.i32	q4, #0	; 0x00000000
    12cc:	add	r7, sp, #40	; 0x28
    12d0:	mov	r6, #4
    12d4:	mov	r9, #1
    12d8:	sub	r4, fp, #52	; 0x34
    12dc:	add	sl, r7, #8
    12e0:	mov	r0, #0
    12e4:	str	r6, [sp, #36]	; 0x24
    12e8:	mov	r1, #768	; 0x300
    12ec:	mov	r2, #20
    12f0:	str	r0, [sl]
    12f4:	str	r0, [sl, #4]
    12f8:	str	r0, [sl, #8]
    12fc:	mov	r0, #17
    1300:	strh	r0, [sp, #40]	; 0x28
    1304:	ldr	r0, [r5, #88]	; 0x58
    1308:	strh	r1, [sp, #42]	; 0x2a
    130c:	mov	r1, r7
    1310:	str	r0, [sp, #44]	; 0x2c
    1314:	ldr	r0, [r5, #4]
    1318:	bl	a9c <bind@plt>
    131c:	cmn	r0, #1
    1320:	beq	1560 <afpacket_daq_start+0x2bc>
    1324:	ldr	r0, [r5, #4]
    1328:	add	r1, sp, #36	; 0x24
    132c:	mov	r2, #4
    1330:	mov	r3, r4
    1334:	str	r1, [sp]
    1338:	mov	r1, #1
    133c:	bl	9e8 <getsockopt@plt>
    1340:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1344:	orrs	r0, r1, r0
    1348:	bne	1588 <afpacket_daq_start+0x2e4>
    134c:	add	r3, sp, #16
    1350:	mov	r1, #16
    1354:	mov	r2, #1
    1358:	vst1.64	{d8-d9}, [r3]
    135c:	ldr	r0, [r5, #88]	; 0x58
    1360:	strh	r9, [sp, #20]
    1364:	str	r0, [sp, #16]
    1368:	ldr	r0, [r5, #4]
    136c:	str	r1, [sp]
    1370:	movw	r1, #263	; 0x107
    1374:	bl	994 <setsockopt@plt>
    1378:	cmn	r0, #1
    137c:	beq	15b0 <afpacket_daq_start+0x30c>
    1380:	mov	r0, r7
    1384:	mov	r2, #16
    1388:	vst1.64	{d8-d9}, [r0]!
    138c:	vst1.64	{d8-d9}, [r0]
    1390:	mov	r0, r7
    1394:	ldr	r1, [r5, #84]	; 0x54
    1398:	bl	ab4 <strncpy@plt>
    139c:	ldr	r0, [r5, #4]
    13a0:	movw	r1, #35111	; 0x8927
    13a4:	mov	r2, r7
    13a8:	bl	9f4 <ioctl@plt>
    13ac:	cmn	r0, #1
    13b0:	beq	15d0 <afpacket_daq_start+0x32c>
    13b4:	ldrh	r0, [sp, #56]	; 0x38
    13b8:	cmp	r0, #1
    13bc:	bne	1600 <afpacket_daq_start+0x35c>
    13c0:	str	r6, [sp, #40]	; 0x28
    13c4:	str	r9, [fp, #-52]	; 0xffffffcc
    13c8:	movw	r1, #263	; 0x107
    13cc:	mov	r2, #11
    13d0:	mov	r3, r4
    13d4:	ldr	r0, [r5, #4]
    13d8:	str	r7, [sp]
    13dc:	bl	9e8 <getsockopt@plt>
    13e0:	cmn	r0, #1
    13e4:	ble	1628 <afpacket_daq_start+0x384>
    13e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    13ec:	movw	r1, #263	; 0x107
    13f0:	mov	r2, #10
    13f4:	mov	r3, r4
    13f8:	str	r0, [r5, #12]
    13fc:	str	r9, [fp, #-52]	; 0xffffffcc
    1400:	ldr	r0, [r5, #4]
    1404:	str	r6, [sp]
    1408:	bl	994 <setsockopt@plt>
    140c:	cmn	r0, #1
    1410:	ble	1648 <afpacket_daq_start+0x3a4>
    1414:	str	r9, [r5, #8]
    1418:	str	r6, [fp, #-52]	; 0xffffffcc
    141c:	movw	r1, #263	; 0x107
    1420:	mov	r2, #12
    1424:	mov	r3, r4
    1428:	ldr	r0, [r5, #4]
    142c:	str	r6, [sp]
    1430:	bl	994 <setsockopt@plt>
    1434:	cmn	r0, #1
    1438:	ble	1668 <afpacket_daq_start+0x3c4>
    143c:	ldr	r0, [r8, #20]
    1440:	cmp	r0, #0
    1444:	beq	1468 <afpacket_daq_start+0x1c4>
    1448:	ldr	r1, [r5, #8]
    144c:	ldr	r0, [pc, #680]	; 16fc <afpacket_daq_start+0x458>
    1450:	add	r0, pc, r0
    1454:	bl	9ac <printf@plt>
    1458:	ldr	r1, [r5, #12]
    145c:	ldr	r0, [pc, #668]	; 1700 <afpacket_daq_start+0x45c>
    1460:	add	r0, pc, r0
    1464:	bl	9ac <printf@plt>
    1468:	add	r9, r5, #20
    146c:	mov	r0, r8
    1470:	mov	r1, r5
    1474:	mov	r3, #5
    1478:	mov	r2, r9
    147c:	bl	20d4 <create_ring>
    1480:	cmp	r0, #0
    1484:	bne	16c0 <afpacket_daq_start+0x41c>
    1488:	ldr	r0, [r5, #92]	; 0x5c
    148c:	cmp	r0, #0
    1490:	beq	14b0 <afpacket_daq_start+0x20c>
    1494:	add	r2, r5, #52	; 0x34
    1498:	mov	r0, r8
    149c:	mov	r1, r5
    14a0:	mov	r3, #13
    14a4:	bl	20d4 <create_ring>
    14a8:	cmp	r0, #0
    14ac:	bne	16c0 <afpacket_daq_start+0x41c>
    14b0:	ldr	r0, [r5, #4]
    14b4:	ldr	r1, [r5, #36]	; 0x24
    14b8:	ldr	r2, [r5, #68]	; 0x44
    14bc:	mov	r3, #1
    14c0:	str	r0, [sp]
    14c4:	mov	r0, #0
    14c8:	add	r1, r2, r1
    14cc:	mov	r2, #3
    14d0:	str	r0, [sp, #4]
    14d4:	mov	r0, #0
    14d8:	bl	a60 <mmap@plt>
    14dc:	cmn	r0, #1
    14e0:	str	r0, [r5, #16]
    14e4:	beq	1694 <afpacket_daq_start+0x3f0>
    14e8:	str	r0, [r5, #40]	; 0x28
    14ec:	mov	r2, r9
    14f0:	ldr	r1, [r5, #68]	; 0x44
    14f4:	add	r0, r0, r1
    14f8:	mov	r1, r5
    14fc:	str	r0, [r5, #72]	; 0x48
    1500:	mov	r0, r8
    1504:	bl	22b4 <set_up_ring>
    1508:	cmp	r0, #0
    150c:	bne	16c0 <afpacket_daq_start+0x41c>
    1510:	ldr	r0, [r5, #92]	; 0x5c
    1514:	cmp	r0, #0
    1518:	beq	1534 <afpacket_daq_start+0x290>
    151c:	add	r2, r5, #52	; 0x34
    1520:	mov	r0, r8
    1524:	mov	r1, r5
    1528:	bl	22b4 <set_up_ring>
    152c:	cmp	r0, #0
    1530:	bne	16c0 <afpacket_daq_start+0x41c>
    1534:	ldr	r5, [r5]
    1538:	mov	r9, #1
    153c:	mov	r6, #4
    1540:	cmp	r5, #0
    1544:	bne	12e0 <afpacket_daq_start+0x3c>
    1548:	mov	r0, r8
    154c:	bl	206c <reset_stats>
    1550:	mov	r0, #2
    1554:	str	r0, [r8, #144]	; 0x90
    1558:	mov	r0, #0
    155c:	b	16c4 <afpacket_daq_start+0x420>
    1560:	ldr	r5, [r5, #84]	; 0x54
    1564:	bl	a84 <__errno_location@plt>
    1568:	ldr	r0, [r0]
    156c:	bl	a30 <strerror@plt>
    1570:	str	r0, [sp, #4]
    1574:	str	r5, [sp]
    1578:	add	r0, r8, #148	; 0x94
    157c:	ldr	r2, [pc, #336]	; 16d4 <afpacket_daq_start+0x430>
    1580:	add	r2, pc, r2
    1584:	b	15a4 <afpacket_daq_start+0x300>
    1588:	bl	a84 <__errno_location@plt>
    158c:	ldr	r0, [r0]
    1590:	bl	a30 <strerror@plt>
    1594:	str	r0, [sp]
    1598:	add	r0, r8, #148	; 0x94
    159c:	ldr	r2, [pc, #308]	; 16d8 <afpacket_daq_start+0x434>
    15a0:	add	r2, pc, r2
    15a4:	ldr	r3, [pc, #304]	; 16dc <afpacket_daq_start+0x438>
    15a8:	add	r3, pc, r3
    15ac:	b	16b8 <afpacket_daq_start+0x414>
    15b0:	bl	a84 <__errno_location@plt>
    15b4:	ldr	r0, [r0]
    15b8:	bl	a30 <strerror@plt>
    15bc:	str	r0, [sp]
    15c0:	add	r0, r8, #148	; 0x94
    15c4:	ldr	r2, [pc, #276]	; 16e0 <afpacket_daq_start+0x43c>
    15c8:	add	r2, pc, r2
    15cc:	b	161c <afpacket_daq_start+0x378>
    15d0:	ldr	r6, [r5, #84]	; 0x54
    15d4:	bl	a84 <__errno_location@plt>
    15d8:	ldr	r5, [r0]
    15dc:	mov	r0, r5
    15e0:	bl	a30 <strerror@plt>
    15e4:	str	r0, [sp, #8]
    15e8:	str	r6, [sp]
    15ec:	str	r5, [sp, #4]
    15f0:	add	r0, r8, #148	; 0x94
    15f4:	ldr	r2, [pc, #232]	; 16e4 <afpacket_daq_start+0x440>
    15f8:	add	r2, pc, r2
    15fc:	b	161c <afpacket_daq_start+0x378>
    1600:	ldr	r1, [r5, #84]	; 0x54
    1604:	mov	r2, #1
    1608:	str	r1, [sp]
    160c:	stmib	sp, {r0, r2}
    1610:	add	r0, r8, #148	; 0x94
    1614:	ldr	r2, [pc, #204]	; 16e8 <afpacket_daq_start+0x444>
    1618:	add	r2, pc, r2
    161c:	ldr	r3, [pc, #200]	; 16ec <afpacket_daq_start+0x448>
    1620:	add	r3, pc, r3
    1624:	b	16b8 <afpacket_daq_start+0x414>
    1628:	bl	a84 <__errno_location@plt>
    162c:	ldr	r0, [r0]
    1630:	bl	a30 <strerror@plt>
    1634:	ldr	r2, [pc, #180]	; 16f0 <afpacket_daq_start+0x44c>
    1638:	mov	r3, r0
    163c:	add	r0, r8, #148	; 0x94
    1640:	add	r2, pc, r2
    1644:	b	16b8 <afpacket_daq_start+0x414>
    1648:	bl	a84 <__errno_location@plt>
    164c:	ldr	r0, [r0]
    1650:	bl	a30 <strerror@plt>
    1654:	ldr	r2, [pc, #152]	; 16f4 <afpacket_daq_start+0x450>
    1658:	mov	r3, r0
    165c:	add	r0, r8, #148	; 0x94
    1660:	add	r2, pc, r2
    1664:	b	16b8 <afpacket_daq_start+0x414>
    1668:	ldr	r5, [fp, #-52]	; 0xffffffcc
    166c:	bl	a84 <__errno_location@plt>
    1670:	ldr	r0, [r0]
    1674:	bl	a30 <strerror@plt>
    1678:	str	r0, [sp]
    167c:	add	r0, r8, #148	; 0x94
    1680:	mov	r1, #256	; 0x100
    1684:	mov	r3, r5
    1688:	ldr	r2, [pc, #104]	; 16f8 <afpacket_daq_start+0x454>
    168c:	add	r2, pc, r2
    1690:	b	16bc <afpacket_daq_start+0x418>
    1694:	bl	a84 <__errno_location@plt>
    1698:	ldr	r0, [r0]
    169c:	bl	a30 <strerror@plt>
    16a0:	str	r0, [sp]
    16a4:	add	r0, r8, #148	; 0x94
    16a8:	ldr	r2, [pc, #84]	; 1704 <afpacket_daq_start+0x460>
    16ac:	ldr	r3, [pc, #84]	; 1708 <afpacket_daq_start+0x464>
    16b0:	add	r2, pc, r2
    16b4:	add	r3, pc, r3
    16b8:	mov	r1, #256	; 0x100
    16bc:	bl	a90 <snprintf@plt>
    16c0:	mvn	r0, #0
    16c4:	sub	sp, fp, #48	; 0x30
    16c8:	vpop	{d8-d9}
    16cc:	add	sp, sp, #4
    16d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    16d4:	.word	0x000011ce
    16d8:	.word	0x000011d8
    16dc:	.word	0x000011b8
    16e0:	.word	0x000010f9
    16e4:	.word	0x000010eb
    16e8:	.word	0x00001103
    16ec:	.word	0x000010b4
    16f0:	.word	0x0000114b
    16f4:	.word	0x0000115a
    16f8:	.word	0x00001160
    16fc:	.word	0x000013d4
    1700:	.word	0x000013d1
    1704:	.word	0x000012e1
    1708:	.word	0x000012fd
    170c:	.word	0xe320f000

00001710 <afpacket_daq_acquire>:
    1710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1714:	add	fp, sp, #28
    1718:	sub	sp, sp, #372	; 0x174
    171c:	mov	ip, r0
    1720:	add	r0, sp, #60	; 0x3c
    1724:	str	r1, [sp, #24]
    1728:	mov	r8, r2
    172c:	add	r1, r0, #6
    1730:	add	r0, r0, #4
    1734:	str	ip, [sp, #48]	; 0x30
    1738:	str	r0, [sp, #16]
    173c:	add	r0, ip, #88	; 0x58
    1740:	str	r1, [sp, #12]
    1744:	str	r0, [sp, #28]
    1748:	sub	r0, fp, #84	; 0x54
    174c:	add	r0, r0, #24
    1750:	str	r0, [sp, #36]	; 0x24
    1754:	add	r0, ip, #72	; 0x48
    1758:	str	r0, [sp, #20]
    175c:	add	r0, ip, #64	; 0x40
    1760:	str	r0, [sp, #32]
    1764:	mov	r0, #0
    1768:	str	r0, [sp, #52]	; 0x34
    176c:	ldr	r5, [ip, #24]
    1770:	cmp	r5, #0
    1774:	beq	1a28 <afpacket_daq_acquire+0x318>
    1778:	mov	r9, #0
    177c:	mov	r0, #0
    1780:	str	r0, [sp, #40]	; 0x28
    1784:	ldr	r0, [ip, #40]	; 0x28
    1788:	cmp	r0, #0
    178c:	bne	1b20 <afpacket_daq_acquire+0x410>
    1790:	ldr	r0, [r5, #8]
    1794:	cmp	r0, #1
    1798:	bne	1a18 <afpacket_daq_acquire+0x308>
    179c:	ldr	r0, [r5, #48]	; 0x30
    17a0:	ldr	r6, [r0, #4]
    17a4:	ldr	r1, [r6]
    17a8:	tst	r1, #1
    17ac:	beq	1a18 <afpacket_daq_acquire+0x308>
    17b0:	ldr	r2, [r6, #20]
    17b4:	movw	r4, #19923	; 0x4dd3
    17b8:	ldrh	r0, [r6, #12]
    17bc:	ldr	r7, [r6, #8]
    17c0:	movt	r4, #4194	; 0x1062
    17c4:	umull	r2, sl, r2, r4
    17c8:	ldr	r2, [r5, #28]
    17cc:	add	r3, r7, r0
    17d0:	cmp	r3, r2
    17d4:	bhi	1b2c <afpacket_daq_acquire+0x41c>
    17d8:	ldrh	r2, [r6, #24]
    17dc:	str	r9, [sp, #44]	; 0x2c
    17e0:	mov	r9, r8
    17e4:	ldr	r8, [r6, #4]
    17e8:	ldr	r4, [r6, #16]
    17ec:	and	r1, r1, #16
    17f0:	add	r0, r6, r0
    17f4:	orrs	r1, r1, r2
    17f8:	movwne	r1, #1
    17fc:	cmp	r7, #12
    1800:	bcc	1844 <afpacket_daq_acquire+0x134>
    1804:	cmp	r1, #0
    1808:	beq	1844 <afpacket_daq_acquire+0x134>
    180c:	vld1.8	{d16}, [r0]
    1810:	ldr	r1, [r0, #8]
    1814:	mov	r2, #129	; 0x81
    1818:	add	r8, r8, #4
    181c:	add	r7, r7, #4
    1820:	strh	r2, [r0, #8]
    1824:	sub	r2, r0, #4
    1828:	str	r2, [sp, #56]	; 0x38
    182c:	str	r1, [r0, #4]
    1830:	vst1.8	{d16}, [r2]
    1834:	ldrh	r1, [r6, #24]
    1838:	rev16	r1, r1
    183c:	strh	r1, [r0, #10]
    1840:	b	1848 <afpacket_daq_acquire+0x138>
    1844:	str	r0, [sp, #56]	; 0x38
    1848:	ldr	r0, [ip, #36]	; 0x24
    184c:	cmp	r0, #0
    1850:	beq	1870 <afpacket_daq_acquire+0x160>
    1854:	ldr	r1, [sp, #56]	; 0x38
    1858:	mov	r2, r8
    185c:	mov	r3, r7
    1860:	bl	acc <sfbpf_filter@plt>
    1864:	ldr	ip, [sp, #48]	; 0x30
    1868:	cmp	r0, #0
    186c:	beq	1960 <afpacket_daq_acquire+0x250>
    1870:	lsr	r0, sl, #6
    1874:	sub	r1, fp, #80	; 0x50
    1878:	stm	r1, {r0, r7, r8}
    187c:	str	r4, [fp, #-84]	; 0xffffffac
    1880:	ldr	r0, [r5, #92]	; 0x5c
    1884:	ldr	r1, [r5, #88]	; 0x58
    1888:	cmp	r0, #0
    188c:	str	r1, [fp, #-68]	; 0xffffffbc
    1890:	beq	189c <afpacket_daq_acquire+0x18c>
    1894:	ldr	r0, [r0, #88]	; 0x58
    1898:	b	18a0 <afpacket_daq_acquire+0x190>
    189c:	mvn	r0, #0
    18a0:	add	r1, pc, #808	; 0x328
    18a4:	str	r0, [fp, #-64]	; 0xffffffc0
    18a8:	ldr	r0, [sp, #36]	; 0x24
    18ac:	mov	r8, r9
    18b0:	cmp	r9, #0
    18b4:	vld1.64	{d16-d17}, [r1]
    18b8:	vst1.32	{d16-d17}, [r0]
    18bc:	mov	r0, #0
    18c0:	strh	r0, [fp, #-36]	; 0xffffffdc
    18c4:	str	r0, [fp, #-44]	; 0xffffffd4
    18c8:	beq	1938 <afpacket_daq_acquire+0x228>
    18cc:	ldr	r0, [fp, #8]
    18d0:	ldr	r2, [sp, #56]	; 0x38
    18d4:	sub	r1, fp, #84	; 0x54
    18d8:	blx	r8
    18dc:	ldr	r1, [sp, #28]
    18e0:	cmp	r0, #6
    18e4:	ldr	ip, [sp, #48]	; 0x30
    18e8:	mov	r9, #1
    18ec:	movwhi	r0, #0
    18f0:	ldr	r2, [r1, r0, lsl #3]!
    18f4:	adds	r2, r2, #1
    18f8:	str	r2, [r1]
    18fc:	ldr	r2, [r1, #4]
    1900:	adc	r2, r2, #0
    1904:	str	r2, [r1, #4]
    1908:	ldr	r1, [sp, #32]
    190c:	ldrd	r2, [r1]
    1910:	adds	r2, r2, #1
    1914:	adc	r3, r3, #0
    1918:	strd	r2, [r1]
    191c:	ldr	r1, [sp, #52]	; 0x34
    1920:	add	r1, r1, #1
    1924:	str	r1, [sp, #52]	; 0x34
    1928:	mov	r1, #45	; 0x2d
    192c:	tst	r9, r1, lsr r0
    1930:	bne	1984 <afpacket_daq_acquire+0x274>
    1934:	b	19fc <afpacket_daq_acquire+0x2ec>
    1938:	ldr	r2, [sp, #32]
    193c:	mov	r9, #1
    1940:	ldrd	r0, [r2]
    1944:	adds	r0, r0, #1
    1948:	adc	r1, r1, #0
    194c:	strd	r0, [r2]
    1950:	ldr	r0, [sp, #52]	; 0x34
    1954:	add	r0, r0, #1
    1958:	str	r0, [sp, #52]	; 0x34
    195c:	b	1984 <afpacket_daq_acquire+0x274>
    1960:	ldr	r2, [sp, #20]
    1964:	mov	r8, r9
    1968:	ldrd	r0, [r2]
    196c:	adds	r0, r0, #1
    1970:	adc	r1, r1, #0
    1974:	strd	r0, [r2]
    1978:	mov	r0, #1
    197c:	ldr	r9, [sp, #44]	; 0x2c
    1980:	str	r0, [sp, #40]	; 0x28
    1984:	ldr	r0, [r5, #92]	; 0x5c
    1988:	cmp	r0, #0
    198c:	beq	19fc <afpacket_daq_acquire+0x2ec>
    1990:	ldr	r4, [r0, #80]	; 0x50
    1994:	ldr	r1, [r4, #4]
    1998:	ldr	r2, [r1]
    199c:	cmp	r2, #0
    19a0:	bne	19fc <afpacket_daq_acquire+0x2ec>
    19a4:	ldr	r0, [r0, #12]
    19a8:	mov	r2, r7
    19ac:	add	r0, r0, #15
    19b0:	bic	r0, r0, #15
    19b4:	add	r0, r1, r0
    19b8:	ldr	r1, [sp, #56]	; 0x38
    19bc:	bl	9c4 <memcpy@plt>
    19c0:	ldr	r0, [r4, #4]
    19c4:	mov	r1, #1
    19c8:	mov	r2, #0
    19cc:	mov	r3, #0
    19d0:	str	r7, [r0, #4]
    19d4:	ldr	r0, [r4, #4]
    19d8:	str	r1, [r0]
    19dc:	mov	r1, #0
    19e0:	ldr	r0, [r5, #92]	; 0x5c
    19e4:	ldr	r0, [r0, #4]
    19e8:	bl	af0 <send@plt>
    19ec:	ldr	ip, [sp, #48]	; 0x30
    19f0:	ldr	r0, [r4]
    19f4:	ldr	r1, [r5, #92]	; 0x5c
    19f8:	str	r0, [r1, #80]	; 0x50
    19fc:	ldr	r0, [r5, #8]
    1a00:	cmp	r0, #1
    1a04:	moveq	r0, #0
    1a08:	streq	r0, [r6]
    1a0c:	ldr	r0, [r5, #48]	; 0x30
    1a10:	ldr	r0, [r0]
    1a14:	str	r0, [r5, #48]	; 0x30
    1a18:	ldr	r5, [r5]
    1a1c:	cmp	r5, #0
    1a20:	bne	1784 <afpacket_daq_acquire+0x74>
    1a24:	b	1a34 <afpacket_daq_acquire+0x324>
    1a28:	mov	r0, #0
    1a2c:	mov	r9, #0
    1a30:	str	r0, [sp, #40]	; 0x28
    1a34:	ldr	r0, [sp, #40]	; 0x28
    1a38:	movw	r4, #8248	; 0x2038
    1a3c:	mov	r3, #1
    1a40:	orrs	r0, r9, r0
    1a44:	beq	1a68 <afpacket_daq_acquire+0x358>
    1a48:	ldr	r0, [sp, #24]
    1a4c:	cmp	r0, #1
    1a50:	blt	176c <afpacket_daq_acquire+0x5c>
    1a54:	ldr	r0, [sp, #24]
    1a58:	ldr	r1, [sp, #52]	; 0x34
    1a5c:	cmp	r1, r0
    1a60:	blt	176c <afpacket_daq_acquire+0x5c>
    1a64:	b	1b64 <afpacket_daq_acquire+0x454>
    1a68:	ldr	r0, [ip, #24]
    1a6c:	cmp	r0, #0
    1a70:	beq	1a90 <afpacket_daq_acquire+0x380>
    1a74:	ldr	r1, [sp, #16]
    1a78:	ldr	r2, [r0, #4]
    1a7c:	stmda	r1, {r2, r3}
    1a80:	add	r1, r1, #8
    1a84:	ldr	r0, [r0]
    1a88:	cmp	r0, #0
    1a8c:	bne	1a78 <afpacket_daq_acquire+0x368>
    1a90:	ldr	r2, [ip, #12]
    1a94:	ldr	r1, [ip, #28]
    1a98:	add	r0, sp, #60	; 0x3c
    1a9c:	bl	9dc <poll@plt>
    1aa0:	cmn	r0, #1
    1aa4:	ble	1ae8 <afpacket_daq_acquire+0x3d8>
    1aa8:	cmp	r0, #0
    1aac:	beq	1b64 <afpacket_daq_acquire+0x454>
    1ab0:	ldr	ip, [sp, #48]	; 0x30
    1ab4:	ldr	r0, [ip, #28]
    1ab8:	cmp	r0, #0
    1abc:	beq	1a48 <afpacket_daq_acquire+0x338>
    1ac0:	ldr	r2, [sp, #12]
    1ac4:	mov	r1, #0
    1ac8:	ldrh	r3, [r2]
    1acc:	tst	r3, r4
    1ad0:	bne	1b44 <afpacket_daq_acquire+0x434>
    1ad4:	add	r1, r1, #1
    1ad8:	add	r2, r2, #8
    1adc:	cmp	r1, r0
    1ae0:	bcc	1ac8 <afpacket_daq_acquire+0x3b8>
    1ae4:	b	1a48 <afpacket_daq_acquire+0x338>
    1ae8:	bl	a84 <__errno_location@plt>
    1aec:	mov	r7, r0
    1af0:	ldr	r0, [r0]
    1af4:	ldr	ip, [sp, #48]	; 0x30
    1af8:	cmp	r0, #4
    1afc:	beq	1a48 <afpacket_daq_acquire+0x338>
    1b00:	mov	r4, ip
    1b04:	bl	a30 <strerror@plt>
    1b08:	ldr	r1, [r7]
    1b0c:	stm	sp, {r0, r1}
    1b10:	add	r0, r4, #148	; 0x94
    1b14:	ldr	r2, [pc, #200]	; 1be4 <afpacket_daq_acquire+0x4d4>
    1b18:	add	r2, pc, r2
    1b1c:	b	1bac <afpacket_daq_acquire+0x49c>
    1b20:	mov	r5, #0
    1b24:	str	r5, [ip, #40]	; 0x28
    1b28:	b	1bc0 <afpacket_daq_acquire+0x4b0>
    1b2c:	stm	sp, {r0, r7}
    1b30:	str	r2, [sp, #8]
    1b34:	add	r0, ip, #148	; 0x94
    1b38:	ldr	r2, [pc, #160]	; 1be0 <afpacket_daq_acquire+0x4d0>
    1b3c:	add	r2, pc, r2
    1b40:	b	1bac <afpacket_daq_acquire+0x49c>
    1b44:	sxth	r0, r3
    1b48:	movw	r1, #8208	; 0x2010
    1b4c:	tst	r0, r1
    1b50:	beq	1b6c <afpacket_daq_acquire+0x45c>
    1b54:	ldr	r2, [pc, #140]	; 1be8 <afpacket_daq_acquire+0x4d8>
    1b58:	add	r0, ip, #148	; 0x94
    1b5c:	add	r2, pc, r2
    1b60:	b	1bac <afpacket_daq_acquire+0x49c>
    1b64:	mov	r5, #0
    1b68:	b	1bc0 <afpacket_daq_acquire+0x4b0>
    1b6c:	tst	r0, #8
    1b70:	bne	1ba0 <afpacket_daq_acquire+0x490>
    1b74:	mvn	r5, #0
    1b78:	tst	r0, #32
    1b7c:	beq	1bc0 <afpacket_daq_acquire+0x4b0>
    1b80:	ldr	r2, [pc, #108]	; 1bf4 <afpacket_daq_acquire+0x4e4>
    1b84:	ldr	r3, [pc, #108]	; 1bf8 <afpacket_daq_acquire+0x4e8>
    1b88:	add	r0, ip, #148	; 0x94
    1b8c:	mov	r1, #256	; 0x100
    1b90:	add	r2, pc, r2
    1b94:	add	r3, pc, r3
    1b98:	bl	a90 <snprintf@plt>
    1b9c:	b	1bc0 <afpacket_daq_acquire+0x4b0>
    1ba0:	ldr	r2, [pc, #72]	; 1bf0 <afpacket_daq_acquire+0x4e0>
    1ba4:	add	r0, ip, #148	; 0x94
    1ba8:	add	r2, pc, r2
    1bac:	ldr	r3, [pc, #56]	; 1bec <afpacket_daq_acquire+0x4dc>
    1bb0:	mov	r1, #256	; 0x100
    1bb4:	add	r3, pc, r3
    1bb8:	bl	a90 <snprintf@plt>
    1bbc:	mvn	r5, #0
    1bc0:	mov	r0, r5
    1bc4:	sub	sp, fp, #28
    1bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1bcc:	nop	{0}
    1bd0:	.word	0xffffffff
    1bd4:	.word	0xffffffff
	...
    1be0:	.word	0x00000edb
    1be4:	.word	0x00000f4d
    1be8:	.word	0x00000f22
    1bec:	.word	0x00000e4e
    1bf0:	.word	0x00000ef5
    1bf4:	.word	0x00000f40
    1bf8:	.word	0x00000e6e

00001bfc <afpacket_daq_inject>:
    1bfc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1c00:	add	fp, sp, #24
    1c04:	sub	sp, sp, #8
    1c08:	ldr	r7, [r0, #24]
    1c0c:	mvn	r5, #0
    1c10:	cmp	r7, #0
    1c14:	beq	1d14 <afpacket_daq_inject+0x118>
    1c18:	mov	r4, r0
    1c1c:	ldr	r0, [fp, #8]
    1c20:	ldr	r1, [r1, #16]
    1c24:	mov	r8, r3
    1c28:	ldr	r3, [r7, #88]	; 0x58
    1c2c:	cmp	r3, r1
    1c30:	beq	1c44 <afpacket_daq_inject+0x48>
    1c34:	ldr	r7, [r7]
    1c38:	cmp	r7, #0
    1c3c:	bne	1c28 <afpacket_daq_inject+0x2c>
    1c40:	b	1d14 <afpacket_daq_inject+0x118>
    1c44:	cmp	r0, #0
    1c48:	bne	1c58 <afpacket_daq_inject+0x5c>
    1c4c:	ldr	r7, [r7, #92]	; 0x5c
    1c50:	cmp	r7, #0
    1c54:	beq	1d14 <afpacket_daq_inject+0x118>
    1c58:	ldr	r6, [r7, #80]	; 0x50
    1c5c:	mov	r5, #0
    1c60:	ldr	r0, [r6, #4]
    1c64:	ldr	r1, [r0]
    1c68:	cmp	r1, #0
    1c6c:	bne	1d14 <afpacket_daq_inject+0x118>
    1c70:	ldr	r1, [r7, #12]
    1c74:	add	r1, r1, #15
    1c78:	bic	r1, r1, #15
    1c7c:	add	r0, r0, r1
    1c80:	mov	r1, r2
    1c84:	mov	r2, r8
    1c88:	bl	9c4 <memcpy@plt>
    1c8c:	ldr	r0, [r6, #4]
    1c90:	mov	r1, #1
    1c94:	mov	r2, #0
    1c98:	mov	r3, #0
    1c9c:	mov	r5, #0
    1ca0:	str	r8, [r0, #4]
    1ca4:	ldr	r0, [r6, #4]
    1ca8:	str	r1, [r0]
    1cac:	mov	r1, #0
    1cb0:	ldr	r0, [r6]
    1cb4:	str	r0, [r7, #80]	; 0x50
    1cb8:	ldr	r0, [r7, #4]
    1cbc:	bl	af0 <send@plt>
    1cc0:	cmn	r0, #1
    1cc4:	ble	1cdc <afpacket_daq_inject+0xe0>
    1cc8:	ldrd	r0, [r4, #80]	; 0x50
    1ccc:	adds	r0, r0, #1
    1cd0:	adc	r1, r1, #0
    1cd4:	strd	r0, [r4, #80]	; 0x50
    1cd8:	b	1d14 <afpacket_daq_inject+0x118>
    1cdc:	bl	a84 <__errno_location@plt>
    1ce0:	mov	r5, r0
    1ce4:	ldr	r0, [r0]
    1ce8:	bl	a30 <strerror@plt>
    1cec:	ldr	r1, [r5]
    1cf0:	stm	sp, {r0, r1}
    1cf4:	add	r0, r4, #148	; 0x94
    1cf8:	mov	r1, #256	; 0x100
    1cfc:	ldr	r2, [pc, #28]	; 1d20 <afpacket_daq_inject+0x124>
    1d00:	ldr	r3, [pc, #28]	; 1d24 <afpacket_daq_inject+0x128>
    1d04:	add	r2, pc, r2
    1d08:	add	r3, pc, r3
    1d0c:	bl	a90 <snprintf@plt>
    1d10:	mvn	r5, #0
    1d14:	mov	r0, r5
    1d18:	sub	sp, fp, #24
    1d1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1d20:	.word	0x00000dfb
    1d24:	.word	0x00000e19

00001d28 <afpacket_daq_breakloop>:
    1d28:	mov	r1, #1
    1d2c:	str	r1, [r0, #40]	; 0x28
    1d30:	mov	r0, #0
    1d34:	bx	lr

00001d38 <afpacket_daq_stop>:
    1d38:	push	{fp, lr}
    1d3c:	mov	fp, sp
    1d40:	bl	1e50 <af_packet_close>
    1d44:	mov	r0, #0
    1d48:	pop	{fp, pc}

00001d4c <afpacket_daq_shutdown>:
    1d4c:	push	{r4, sl, fp, lr}
    1d50:	add	fp, sp, #8
    1d54:	mov	r4, r0
    1d58:	bl	1e50 <af_packet_close>
    1d5c:	ldr	r0, [r4]
    1d60:	cmp	r0, #0
    1d64:	beq	1d6c <afpacket_daq_shutdown+0x20>
    1d68:	bl	9b8 <free@plt>
    1d6c:	ldr	r0, [r4, #4]
    1d70:	cmp	r0, #0
    1d74:	beq	1d7c <afpacket_daq_shutdown+0x30>
    1d78:	bl	9b8 <free@plt>
    1d7c:	mov	r0, r4
    1d80:	pop	{r4, sl, fp, lr}
    1d84:	b	9b8 <free@plt>

00001d88 <afpacket_daq_check_status>:
    1d88:	ldr	r0, [r0, #144]	; 0x90
    1d8c:	bx	lr

00001d90 <afpacket_daq_get_stats>:
    1d90:	push	{r4, r5, fp, lr}
    1d94:	add	fp, sp, #8
    1d98:	mov	r4, r1
    1d9c:	mov	r5, r0
    1da0:	bl	1f80 <update_hw_stats>
    1da4:	add	r1, r5, #48	; 0x30
    1da8:	mov	r0, r4
    1dac:	mov	r2, #96	; 0x60
    1db0:	bl	9c4 <memcpy@plt>
    1db4:	mov	r0, #0
    1db8:	pop	{r4, r5, fp, pc}

00001dbc <afpacket_daq_reset_stats>:
    1dbc:	b	206c <reset_stats>

00001dc0 <afpacket_daq_get_snaplen>:
    1dc0:	ldr	r0, [r0, #8]
    1dc4:	bx	lr

00001dc8 <afpacket_daq_get_capabilities>:
    1dc8:	movw	r0, #487	; 0x1e7
    1dcc:	bx	lr

00001dd0 <afpacket_daq_get_datalink_type>:
    1dd0:	mov	r0, #1
    1dd4:	bx	lr

00001dd8 <afpacket_daq_get_errbuf>:
    1dd8:	add	r0, r0, #148	; 0x94
    1ddc:	bx	lr

00001de0 <afpacket_daq_set_errbuf>:
    1de0:	cmp	r1, #0
    1de4:	bxeq	lr
    1de8:	ldr	r2, [pc, #16]	; 1e00 <afpacket_daq_set_errbuf+0x20>
    1dec:	mov	r3, r1
    1df0:	add	r0, r0, #148	; 0x94
    1df4:	mov	r1, #256	; 0x100
    1df8:	add	r2, pc, r2
    1dfc:	b	a90 <snprintf@plt>
    1e00:	.word	0x00000920

00001e04 <afpacket_daq_get_device_index>:
    1e04:	push	{r4, r5, r6, sl, fp, lr}
    1e08:	add	fp, sp, #16
    1e0c:	ldr	r6, [r0, #24]
    1e10:	mvn	r4, #2
    1e14:	cmp	r6, #0
    1e18:	beq	1e48 <afpacket_daq_get_device_index+0x44>
    1e1c:	mov	r5, r1
    1e20:	ldr	r1, [r6, #84]	; 0x54
    1e24:	mov	r0, r5
    1e28:	bl	97c <strcmp@plt>
    1e2c:	cmp	r0, #0
    1e30:	beq	1e44 <afpacket_daq_get_device_index+0x40>
    1e34:	ldr	r6, [r6]
    1e38:	cmp	r6, #0
    1e3c:	bne	1e20 <afpacket_daq_get_device_index+0x1c>
    1e40:	b	1e48 <afpacket_daq_get_device_index+0x44>
    1e44:	ldr	r4, [r6, #88]	; 0x58
    1e48:	mov	r0, r4
    1e4c:	pop	{r4, r5, r6, sl, fp, pc}

00001e50 <af_packet_close>:
    1e50:	cmp	r0, #0
    1e54:	bxeq	lr
    1e58:	push	{r4, sl, fp, lr}
    1e5c:	add	fp, sp, #8
    1e60:	mov	r4, r0
    1e64:	bl	1f80 <update_hw_stats>
    1e68:	ldr	r0, [r4, #24]
    1e6c:	cmp	r0, #0
    1e70:	beq	1e84 <af_packet_close+0x34>
    1e74:	ldr	r1, [r0]
    1e78:	str	r1, [r4, #24]
    1e7c:	bl	1e9c <destroy_instance>
    1e80:	b	1e68 <af_packet_close+0x18>
    1e84:	add	r0, r4, #32
    1e88:	bl	a00 <sfbpf_freecode@plt>
    1e8c:	mov	r0, #3
    1e90:	str	r0, [r4, #144]	; 0x90
    1e94:	pop	{r4, sl, fp, lr}
    1e98:	bx	lr

00001e9c <destroy_instance>:
    1e9c:	cmp	r0, #0
    1ea0:	bxeq	lr
    1ea4:	push	{r4, r5, r6, sl, fp, lr}
    1ea8:	add	fp, sp, #16
    1eac:	sub	sp, sp, #24
    1eb0:	mov	r4, r0
    1eb4:	ldr	r0, [r0, #4]
    1eb8:	cmn	r0, #1
    1ebc:	beq	1f5c <destroy_instance+0xc0>
    1ec0:	ldr	r0, [r4, #44]	; 0x2c
    1ec4:	cmp	r0, #0
    1ec8:	beq	1ed8 <destroy_instance+0x3c>
    1ecc:	bl	9b8 <free@plt>
    1ed0:	mov	r0, #0
    1ed4:	str	r0, [r4, #44]	; 0x2c
    1ed8:	ldr	r0, [r4, #76]	; 0x4c
    1edc:	cmp	r0, #0
    1ee0:	beq	1ef0 <destroy_instance+0x54>
    1ee4:	bl	9b8 <free@plt>
    1ee8:	mov	r0, #0
    1eec:	str	r0, [r4, #76]	; 0x4c
    1ef0:	ldr	r0, [r4, #16]
    1ef4:	cmn	r0, #1
    1ef8:	beq	1f14 <destroy_instance+0x78>
    1efc:	ldr	r1, [r4, #36]	; 0x24
    1f00:	ldr	r2, [r4, #68]	; 0x44
    1f04:	add	r1, r2, r1
    1f08:	bl	ac0 <munmap@plt>
    1f0c:	mvn	r0, #0
    1f10:	str	r0, [r4, #16]
    1f14:	vmov.i32	q8, #0	; 0x00000000
    1f18:	add	r5, sp, #8
    1f1c:	mov	r6, #16
    1f20:	movw	r1, #263	; 0x107
    1f24:	mov	r2, #5
    1f28:	mov	r3, r5
    1f2c:	vst1.64	{d16-d17}, [r5]
    1f30:	ldr	r0, [r4, #4]
    1f34:	str	r6, [sp]
    1f38:	bl	994 <setsockopt@plt>
    1f3c:	ldr	r0, [r4, #4]
    1f40:	movw	r1, #263	; 0x107
    1f44:	mov	r2, #13
    1f48:	mov	r3, r5
    1f4c:	str	r6, [sp]
    1f50:	bl	994 <setsockopt@plt>
    1f54:	ldr	r0, [r4, #4]
    1f58:	bl	ae4 <close@plt>
    1f5c:	ldr	r0, [r4, #84]	; 0x54
    1f60:	cmp	r0, #0
    1f64:	beq	1f6c <destroy_instance+0xd0>
    1f68:	bl	9b8 <free@plt>
    1f6c:	mov	r0, r4
    1f70:	bl	9b8 <free@plt>
    1f74:	sub	sp, fp, #16
    1f78:	pop	{r4, r5, r6, sl, fp, lr}
    1f7c:	bx	lr

00001f80 <update_hw_stats>:
    1f80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f84:	add	fp, sp, #28
    1f88:	sub	sp, sp, #20
    1f8c:	mov	r1, #8
    1f90:	str	r1, [sp, #4]
    1f94:	ldr	r1, [r0, #144]	; 0x90
    1f98:	cmp	r1, #2
    1f9c:	bne	205c <update_hw_stats+0xdc>
    1fa0:	ldr	r6, [r0, #24]
    1fa4:	cmp	r6, #0
    1fa8:	beq	205c <update_hw_stats+0xdc>
    1fac:	add	r7, r0, #48	; 0x30
    1fb0:	mov	r2, #8
    1fb4:	add	r4, sp, #8
    1fb8:	add	r8, sp, #4
    1fbc:	mov	r0, r4
    1fc0:	mov	r1, #0
    1fc4:	bl	aa8 <memset@plt>
    1fc8:	ldr	r0, [r6, #4]
    1fcc:	movw	r1, #263	; 0x107
    1fd0:	mov	r2, #6
    1fd4:	mov	r3, r4
    1fd8:	str	r8, [sp]
    1fdc:	bl	9e8 <getsockopt@plt>
    1fe0:	cmp	r0, #0
    1fe4:	bmi	201c <update_hw_stats+0x9c>
    1fe8:	ldr	r0, [sp, #8]
    1fec:	ldr	r1, [sp, #12]
    1ff0:	vld1.64	{d16-d17}, [r7]
    1ff4:	sub	r0, r0, r1
    1ff8:	vmov.32	d18[0], r0
    1ffc:	vmov.32	d18[1], r1
    2000:	vaddw.u32	q8, q8, d18
    2004:	vst1.64	{d16-d17}, [r7]
    2008:	ldr	r6, [r6]
    200c:	cmp	r6, #0
    2010:	beq	205c <update_hw_stats+0xdc>
    2014:	ldr	r2, [sp, #4]
    2018:	b	1fbc <update_hw_stats+0x3c>
    201c:	ldr	r9, [r6, #84]	; 0x54
    2020:	ldr	r0, [pc, #60]	; 2064 <update_hw_stats+0xe4>
    2024:	ldr	r0, [pc, r0]
    2028:	ldr	sl, [r0]
    202c:	bl	a84 <__errno_location@plt>
    2030:	ldr	r5, [r0]
    2034:	mov	r0, r5
    2038:	bl	a30 <strerror@plt>
    203c:	str	r0, [sp]
    2040:	mov	r0, sl
    2044:	mov	r2, r9
    2048:	mov	r3, r5
    204c:	ldr	r1, [pc, #20]	; 2068 <update_hw_stats+0xe8>
    2050:	add	r1, pc, r1
    2054:	bl	a6c <fprintf@plt>
    2058:	b	2008 <update_hw_stats+0x88>
    205c:	sub	sp, fp, #28
    2060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2064:	.word	0x00011070
    2068:	.word	0x000005d8

0000206c <reset_stats>:
    206c:	push	{r4, r5, r6, sl, fp, lr}
    2070:	add	fp, sp, #16
    2074:	sub	sp, sp, #16
    2078:	mov	r4, r0
    207c:	mov	r0, #8
    2080:	mov	r1, #0
    2084:	mov	r2, #96	; 0x60
    2088:	str	r0, [sp, #4]
    208c:	add	r0, r4, #48	; 0x30
    2090:	bl	aa8 <memset@plt>
    2094:	ldr	r5, [r4, #24]
    2098:	cmp	r5, #0
    209c:	beq	20cc <reset_stats+0x60>
    20a0:	add	r6, sp, #4
    20a4:	add	r4, sp, #8
    20a8:	ldr	r0, [r5, #4]
    20ac:	movw	r1, #263	; 0x107
    20b0:	mov	r2, #6
    20b4:	mov	r3, r4
    20b8:	str	r6, [sp]
    20bc:	bl	9e8 <getsockopt@plt>
    20c0:	ldr	r5, [r5]
    20c4:	cmp	r5, #0
    20c8:	bne	20a8 <reset_stats+0x3c>
    20cc:	sub	sp, fp, #16
    20d0:	pop	{r4, r5, r6, sl, fp, pc}

000020d4 <create_ring>:
    20d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    20d8:	add	fp, sp, #28
    20dc:	sub	sp, sp, #4
    20e0:	mov	r8, r3
    20e4:	mov	r6, r2
    20e8:	mov	r7, r1
    20ec:	mov	r4, r0
    20f0:	mov	r9, #3
    20f4:	bl	a78 <getpagesize@plt>
    20f8:	mov	r5, r0
    20fc:	ldr	r1, [r7, #12]
    2100:	ldr	r0, [r4, #8]
    2104:	mov	sl, r9
    2108:	add	r1, r1, #15
    210c:	bic	r1, r1, #15
    2110:	add	r1, r1, #49	; 0x31
    2114:	orr	r1, r1, #5
    2118:	add	r0, r1, r0
    211c:	lsl	r1, r5, r9
    2120:	bic	r0, r0, #15
    2124:	str	r0, [r6, #8]
    2128:	mov	r2, r1
    212c:	lsl	r1, r1, #1
    2130:	cmp	r2, r0
    2134:	bcc	2128 <create_ring+0x54>
    2138:	str	r2, [r6]
    213c:	udiv	r1, r2, r0
    2140:	ldr	r2, [r4, #16]
    2144:	udiv	r0, r2, r0
    2148:	udiv	r0, r0, r1
    214c:	str	r0, [r6, #4]
    2150:	mul	r0, r0, r1
    2154:	str	r0, [r6, #12]
    2158:	ldr	r0, [r4, #20]
    215c:	cmp	r0, #0
    2160:	beq	21b4 <create_ring+0xe0>
    2164:	ldr	r0, [pc, #288]	; 228c <create_ring+0x1b8>
    2168:	add	r0, pc, r0
    216c:	bl	a18 <puts@plt>
    2170:	ldr	r1, [r6, #8]
    2174:	ldr	r0, [pc, #276]	; 2290 <create_ring+0x1bc>
    2178:	add	r0, pc, r0
    217c:	bl	9ac <printf@plt>
    2180:	ldr	r1, [r6, #12]
    2184:	ldr	r0, [pc, #264]	; 2294 <create_ring+0x1c0>
    2188:	add	r0, pc, r0
    218c:	bl	9ac <printf@plt>
    2190:	ldr	r1, [r6]
    2194:	ldr	r0, [pc, #252]	; 2298 <create_ring+0x1c4>
    2198:	mov	r2, sl
    219c:	add	r0, pc, r0
    21a0:	bl	9ac <printf@plt>
    21a4:	ldr	r1, [r6, #4]
    21a8:	ldr	r0, [pc, #236]	; 229c <create_ring+0x1c8>
    21ac:	add	r0, pc, r0
    21b0:	bl	9ac <printf@plt>
    21b4:	ldr	r0, [r7, #4]
    21b8:	mov	r1, #16
    21bc:	mov	r2, r8
    21c0:	mov	r3, r6
    21c4:	str	r1, [sp]
    21c8:	movw	r1, #263	; 0x107
    21cc:	bl	994 <setsockopt@plt>
    21d0:	cmp	r0, #0
    21d4:	beq	2228 <create_ring+0x154>
    21d8:	bl	a84 <__errno_location@plt>
    21dc:	ldr	r0, [r0]
    21e0:	cmp	r0, #12
    21e4:	bne	2258 <create_ring+0x184>
    21e8:	ldr	r0, [r4, #20]
    21ec:	cmp	r0, #0
    21f0:	beq	2208 <create_ring+0x134>
    21f4:	ldr	r1, [r7, #84]	; 0x54
    21f8:	ldr	r0, [pc, #160]	; 22a0 <create_ring+0x1cc>
    21fc:	mov	r2, sl
    2200:	add	r0, pc, r0
    2204:	bl	9ac <printf@plt>
    2208:	sub	r9, sl, #1
    220c:	cmp	sl, #0
    2210:	bne	20fc <create_ring+0x28>
    2214:	ldr	r3, [r7, #84]	; 0x54
    2218:	ldr	r2, [pc, #132]	; 22a4 <create_ring+0x1d0>
    221c:	add	r0, r4, #148	; 0x94
    2220:	add	r2, pc, r2
    2224:	b	2274 <create_ring+0x1a0>
    2228:	ldm	r6, {r0, r1}
    222c:	mul	r2, r1, r0
    2230:	str	r2, [r6, #16]
    2234:	ldr	r0, [r4, #20]
    2238:	mov	r4, #0
    223c:	cmp	r0, #0
    2240:	beq	2280 <create_ring+0x1ac>
    2244:	ldr	r0, [pc, #100]	; 22b0 <create_ring+0x1dc>
    2248:	mov	r1, r8
    224c:	add	r0, pc, r0
    2250:	bl	9ac <printf@plt>
    2254:	b	2280 <create_ring+0x1ac>
    2258:	bl	a30 <strerror@plt>
    225c:	str	r0, [sp]
    2260:	add	r0, r4, #148	; 0x94
    2264:	ldr	r2, [pc, #60]	; 22a8 <create_ring+0x1d4>
    2268:	ldr	r3, [pc, #60]	; 22ac <create_ring+0x1d8>
    226c:	add	r2, pc, r2
    2270:	add	r3, pc, r3
    2274:	mov	r1, #256	; 0x100
    2278:	bl	a90 <snprintf@plt>
    227c:	mvn	r4, #0
    2280:	mov	r0, r4
    2284:	sub	sp, fp, #28
    2288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    228c:	.word	0x000009cd
    2290:	.word	0x000007c6
    2294:	.word	0x000007c8
    2298:	.word	0x000007c6
    229c:	.word	0x000007d3
    22a0:	.word	0x00000644
    22a4:	.word	0x000006de
    22a8:	.word	0x00000620
    22ac:	.word	0x00000651
    22b0:	.word	0x00000681

000022b4 <set_up_ring>:
    22b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    22b8:	add	fp, sp, #24
    22bc:	sub	sp, sp, #8
    22c0:	ldr	r5, [r2, #12]
    22c4:	mov	r7, r1
    22c8:	mov	r6, r0
    22cc:	mov	r1, #8
    22d0:	mov	r4, r2
    22d4:	mov	r0, r5
    22d8:	bl	964 <calloc@plt>
    22dc:	cmp	r0, #0
    22e0:	str	r0, [r4, #24]
    22e4:	beq	23b4 <set_up_ring+0x100>
    22e8:	ldr	r7, [r4, #4]
    22ec:	cmp	r7, #0
    22f0:	beq	239c <set_up_ring+0xe8>
    22f4:	ldr	r3, [r4]
    22f8:	ldr	r2, [r4, #8]
    22fc:	mov	ip, #0
    2300:	mov	lr, #0
    2304:	cmp	r2, r3
    2308:	bhi	2388 <set_up_ring+0xd4>
    230c:	ldr	r0, [r4, #12]
    2310:	cmp	ip, r0
    2314:	bcs	2384 <set_up_ring+0xd0>
    2318:	mul	r8, r3, lr
    231c:	lsl	r6, ip, #3
    2320:	mov	r5, #0
    2324:	ldr	r1, [r4, #20]
    2328:	ldr	r3, [r4, #24]
    232c:	mov	r0, r5
    2330:	add	r1, r1, r8
    2334:	mla	r1, r2, r5, r1
    2338:	add	r2, r3, r6
    233c:	add	r5, r5, #1
    2340:	str	r1, [r2, #4]
    2344:	ldr	r1, [r4, #24]
    2348:	add	r2, r1, r6
    234c:	add	r2, r2, #8
    2350:	str	r2, [r1, r6]
    2354:	ldr	r3, [r4]
    2358:	ldr	r2, [r4, #8]
    235c:	udiv	r1, r3, r2
    2360:	cmp	r5, r1
    2364:	bcs	237c <set_up_ring+0xc8>
    2368:	ldr	r7, [r4, #12]
    236c:	add	r1, ip, r5
    2370:	add	r6, r6, #8
    2374:	cmp	r1, r7
    2378:	bcc	2324 <set_up_ring+0x70>
    237c:	add	r0, ip, r0
    2380:	add	ip, r0, #1
    2384:	ldr	r7, [r4, #4]
    2388:	add	lr, lr, #1
    238c:	cmp	lr, r7
    2390:	bcc	2304 <set_up_ring+0x50>
    2394:	ldr	r5, [r4, #12]
    2398:	ldr	r0, [r4, #24]
    239c:	add	r1, r0, r5, lsl #3
    23a0:	str	r0, [r1, #-8]
    23a4:	ldr	r0, [r4, #24]
    23a8:	str	r0, [r4, #28]
    23ac:	mov	r0, #0
    23b0:	b	23dc <set_up_ring+0x128>
    23b4:	ldr	r0, [r7, #84]	; 0x54
    23b8:	mov	r1, #256	; 0x100
    23bc:	str	r0, [sp]
    23c0:	add	r0, r6, #148	; 0x94
    23c4:	ldr	r2, [pc, #24]	; 23e4 <set_up_ring+0x130>
    23c8:	ldr	r3, [pc, #24]	; 23e8 <set_up_ring+0x134>
    23cc:	add	r2, pc, r2
    23d0:	add	r3, pc, r3
    23d4:	bl	a90 <snprintf@plt>
    23d8:	mvn	r0, #1
    23dc:	sub	sp, fp, #24
    23e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    23e4:	.word	0x000005f0
    23e8:	.word	0x00000626

Disassembly of section .fini:

000023ec <_fini>:
    23ec:	push	{r3, lr}
    23f0:	pop	{r3, pc}
