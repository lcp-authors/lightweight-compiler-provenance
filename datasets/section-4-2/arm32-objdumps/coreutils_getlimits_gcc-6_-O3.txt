
../repos/coreutils/src/getlimits:     file format elf32-littlearm


Disassembly of section .init:

00010bc0 <.init>:
   10bc0:	push	{r3, lr}
   10bc4:	bl	1180c <__snprintf_chk@plt+0x9ec>
   10bc8:	pop	{r3, pc}

Disassembly of section .plt:

00010bcc <calloc@plt-0x14>:
   10bcc:	push	{lr}		; (str lr, [sp, #-4]!)
   10bd0:	ldr	lr, [pc, #4]	; 10bdc <calloc@plt-0x4>
   10bd4:	add	lr, pc, lr
   10bd8:	ldr	pc, [lr, #8]!
   10bdc:	andeq	r8, r1, r4, lsr #8

00010be0 <calloc@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #24, 20	; 0x18000
   10be8:	ldr	pc, [ip, #1060]!	; 0x424

00010bec <fputs_unlocked@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #24, 20	; 0x18000
   10bf4:	ldr	pc, [ip, #1052]!	; 0x41c

00010bf8 <raise@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #24, 20	; 0x18000
   10c00:	ldr	pc, [ip, #1044]!	; 0x414

00010c04 <strcmp@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #24, 20	; 0x18000
   10c0c:	ldr	pc, [ip, #1036]!	; 0x40c

00010c10 <fflush@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #24, 20	; 0x18000
   10c18:	ldr	pc, [ip, #1028]!	; 0x404

00010c1c <free@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #24, 20	; 0x18000
   10c24:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c28 <_exit@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #24, 20	; 0x18000
   10c30:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c34 <memcpy@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #24, 20	; 0x18000
   10c3c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c40 <mbsinit@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #24, 20	; 0x18000
   10c48:	ldr	pc, [ip, #996]!	; 0x3e4

00010c4c <strtold@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #24, 20	; 0x18000
   10c54:	ldr	pc, [ip, #988]!	; 0x3dc

00010c58 <memcmp@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #24, 20	; 0x18000
   10c60:	ldr	pc, [ip, #980]!	; 0x3d4

00010c64 <fputc_unlocked@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #24, 20	; 0x18000
   10c6c:	ldr	pc, [ip, #972]!	; 0x3cc

00010c70 <dcgettext@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #24, 20	; 0x18000
   10c78:	ldr	pc, [ip, #964]!	; 0x3c4

00010c7c <realloc@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #24, 20	; 0x18000
   10c84:	ldr	pc, [ip, #956]!	; 0x3bc

00010c88 <textdomain@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #24, 20	; 0x18000
   10c90:	ldr	pc, [ip, #948]!	; 0x3b4

00010c94 <iswprint@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #24, 20	; 0x18000
   10c9c:	ldr	pc, [ip, #940]!	; 0x3ac

00010ca0 <fwrite@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #24, 20	; 0x18000
   10ca8:	ldr	pc, [ip, #932]!	; 0x3a4

00010cac <lseek64@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #24, 20	; 0x18000
   10cb4:	ldr	pc, [ip, #924]!	; 0x39c

00010cb8 <__ctype_get_mb_cur_max@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #24, 20	; 0x18000
   10cc0:	ldr	pc, [ip, #916]!	; 0x394

00010cc4 <__fpending@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #24, 20	; 0x18000
   10ccc:	ldr	pc, [ip, #908]!	; 0x38c

00010cd0 <mbrtowc@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #24, 20	; 0x18000
   10cd8:	ldr	pc, [ip, #900]!	; 0x384

00010cdc <error@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #24, 20	; 0x18000
   10ce4:	ldr	pc, [ip, #892]!	; 0x37c

00010ce8 <strtof@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #24, 20	; 0x18000
   10cf0:	ldr	pc, [ip, #884]!	; 0x374

00010cf4 <puts@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #24, 20	; 0x18000
   10cfc:	ldr	pc, [ip, #876]!	; 0x36c

00010d00 <malloc@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #24, 20	; 0x18000
   10d08:	ldr	pc, [ip, #868]!	; 0x364

00010d0c <__libc_start_main@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #24, 20	; 0x18000
   10d14:	ldr	pc, [ip, #860]!	; 0x35c

00010d18 <__freading@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #24, 20	; 0x18000
   10d20:	ldr	pc, [ip, #852]!	; 0x354

00010d24 <__gmon_start__@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #24, 20	; 0x18000
   10d2c:	ldr	pc, [ip, #844]!	; 0x34c

00010d30 <getopt_long@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #24, 20	; 0x18000
   10d38:	ldr	pc, [ip, #836]!	; 0x344

00010d3c <__ctype_b_loc@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #24, 20	; 0x18000
   10d44:	ldr	pc, [ip, #828]!	; 0x33c

00010d48 <exit@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #24, 20	; 0x18000
   10d50:	ldr	pc, [ip, #820]!	; 0x334

00010d54 <strlen@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #24, 20	; 0x18000
   10d5c:	ldr	pc, [ip, #812]!	; 0x32c

00010d60 <__errno_location@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #24, 20	; 0x18000
   10d68:	ldr	pc, [ip, #804]!	; 0x324

00010d6c <__sprintf_chk@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #24, 20	; 0x18000
   10d74:	ldr	pc, [ip, #796]!	; 0x31c

00010d78 <__cxa_atexit@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #24, 20	; 0x18000
   10d80:	ldr	pc, [ip, #788]!	; 0x314

00010d84 <memset@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #24, 20	; 0x18000
   10d8c:	ldr	pc, [ip, #780]!	; 0x30c

00010d90 <__printf_chk@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #24, 20	; 0x18000
   10d98:	ldr	pc, [ip, #772]!	; 0x304

00010d9c <strtod@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #24, 20	; 0x18000
   10da4:	ldr	pc, [ip, #764]!	; 0x2fc

00010da8 <fileno@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #24, 20	; 0x18000
   10db0:	ldr	pc, [ip, #756]!	; 0x2f4

00010db4 <__fprintf_chk@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #24, 20	; 0x18000
   10dbc:	ldr	pc, [ip, #748]!	; 0x2ec

00010dc0 <fclose@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #24, 20	; 0x18000
   10dc8:	ldr	pc, [ip, #740]!	; 0x2e4

00010dcc <fseeko64@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #24, 20	; 0x18000
   10dd4:	ldr	pc, [ip, #732]!	; 0x2dc

00010dd8 <setlocale@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #24, 20	; 0x18000
   10de0:	ldr	pc, [ip, #724]!	; 0x2d4

00010de4 <strrchr@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #24, 20	; 0x18000
   10dec:	ldr	pc, [ip, #716]!	; 0x2cc

00010df0 <nl_langinfo@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #24, 20	; 0x18000
   10df8:	ldr	pc, [ip, #708]!	; 0x2c4

00010dfc <bindtextdomain@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #24, 20	; 0x18000
   10e04:	ldr	pc, [ip, #700]!	; 0x2bc

00010e08 <strncmp@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #24, 20	; 0x18000
   10e10:	ldr	pc, [ip, #692]!	; 0x2b4

00010e14 <abort@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #24, 20	; 0x18000
   10e1c:	ldr	pc, [ip, #684]!	; 0x2ac

00010e20 <__snprintf_chk@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #24, 20	; 0x18000
   10e28:	ldr	pc, [ip, #676]!	; 0x2a4

Disassembly of section .text:

00010e30 <.text>:
   10e30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e34:	vpush	{d8-d9}
   10e38:	mov	r8, r0
   10e3c:	ldr	r4, [pc, #1148]	; 112c0 <__snprintf_chk@plt+0x4a0>
   10e40:	ldr	r0, [r1]
   10e44:	sub	sp, sp, #80	; 0x50
   10e48:	mov	r5, r1
   10e4c:	bl	122cc <__snprintf_chk@plt+0x14ac>
   10e50:	ldr	r1, [pc, #1132]	; 112c4 <__snprintf_chk@plt+0x4a4>
   10e54:	mov	r0, #6
   10e58:	bl	10dd8 <setlocale@plt>
   10e5c:	ldr	r1, [pc, #1124]	; 112c8 <__snprintf_chk@plt+0x4a8>
   10e60:	mov	r0, r4
   10e64:	bl	10dfc <bindtextdomain@plt>
   10e68:	mov	r0, r4
   10e6c:	bl	10c88 <textdomain@plt>
   10e70:	ldr	r0, [pc, #1108]	; 112cc <__snprintf_chk@plt+0x4ac>
   10e74:	bl	17da8 <__snprintf_chk@plt+0x6f88>
   10e78:	ldr	ip, [pc, #1104]	; 112d0 <__snprintf_chk@plt+0x4b0>
   10e7c:	ldr	r2, [pc, #1104]	; 112d4 <__snprintf_chk@plt+0x4b4>
   10e80:	ldr	r3, [pc, #1104]	; 112d8 <__snprintf_chk@plt+0x4b8>
   10e84:	ldr	r4, [pc, #1104]	; 112dc <__snprintf_chk@plt+0x4bc>
   10e88:	mov	sl, #0
   10e8c:	mov	r6, #255	; 0xff
   10e90:	mov	r7, #0
   10e94:	stmib	sp, {r2, ip}
   10e98:	mov	r1, r5
   10e9c:	mov	r0, r8
   10ea0:	str	r3, [sp]
   10ea4:	str	sl, [sp, #12]
   10ea8:	ldr	r3, [pc, #1072]	; 112e0 <__snprintf_chk@plt+0x4c0>
   10eac:	ldr	r2, [pc, #1072]	; 112e4 <__snprintf_chk@plt+0x4c4>
   10eb0:	bl	1213c <__snprintf_chk@plt+0x131c>
   10eb4:	mov	r3, r4
   10eb8:	strd	r6, [sp]
   10ebc:	add	r0, sp, #17
   10ec0:	mov	r2, #21
   10ec4:	mov	r1, #1
   10ec8:	bl	10d6c <__sprintf_chk@plt>
   10ecc:	add	r2, sp, #17
   10ed0:	ldr	r1, [pc, #1040]	; 112e8 <__snprintf_chk@plt+0x4c8>
   10ed4:	mov	r0, #1
   10ed8:	bl	10d90 <__printf_chk@plt>
   10edc:	add	r0, sp, #16
   10ee0:	bl	118f8 <__snprintf_chk@plt+0xad8>
   10ee4:	mov	r8, #127	; 0x7f
   10ee8:	mov	r9, #0
   10eec:	ldr	r1, [pc, #1016]	; 112ec <__snprintf_chk@plt+0x4cc>
   10ef0:	ldr	r5, [pc, #1016]	; 112f0 <__snprintf_chk@plt+0x4d0>
   10ef4:	vldr	d9, [pc, #948]	; 112b0 <__snprintf_chk@plt+0x490>
   10ef8:	vldr	d8, [pc, #952]	; 112b8 <__snprintf_chk@plt+0x498>
   10efc:	mov	r2, r0
   10f00:	mov	r0, #1
   10f04:	bl	10d90 <__printf_chk@plt>
   10f08:	mov	r3, r4
   10f0c:	strd	r8, [sp]
   10f10:	add	r0, sp, #17
   10f14:	mov	r2, #21
   10f18:	mov	r1, #1
   10f1c:	bl	10d6c <__sprintf_chk@plt>
   10f20:	add	r2, sp, #17
   10f24:	ldr	r1, [pc, #968]	; 112f4 <__snprintf_chk@plt+0x4d4>
   10f28:	mov	r0, #1
   10f2c:	bl	10d90 <__printf_chk@plt>
   10f30:	add	r0, sp, #16
   10f34:	bl	118f8 <__snprintf_chk@plt+0xad8>
   10f38:	mvn	r8, #127	; 0x7f
   10f3c:	mvn	r9, #0
   10f40:	ldr	r1, [pc, #944]	; 112f8 <__snprintf_chk@plt+0x4d8>
   10f44:	mov	r2, r0
   10f48:	mov	r0, #1
   10f4c:	bl	10d90 <__printf_chk@plt>
   10f50:	mov	r3, r5
   10f54:	strd	r8, [sp]
   10f58:	add	r0, sp, #17
   10f5c:	mov	r2, #21
   10f60:	mov	r1, #1
   10f64:	bl	10d6c <__sprintf_chk@plt>
   10f68:	add	r2, sp, #17
   10f6c:	ldr	r1, [pc, #904]	; 112fc <__snprintf_chk@plt+0x4dc>
   10f70:	mov	r0, #1
   10f74:	bl	10d90 <__printf_chk@plt>
   10f78:	add	r0, sp, #16
   10f7c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   10f80:	ldr	r1, [pc, #888]	; 11300 <__snprintf_chk@plt+0x4e0>
   10f84:	mvn	r8, #-2147483648	; 0x80000000
   10f88:	mov	r9, #0
   10f8c:	mov	r2, r0
   10f90:	mov	r0, #1
   10f94:	bl	10d90 <__printf_chk@plt>
   10f98:	mov	r3, r4
   10f9c:	strd	r6, [sp]
   10fa0:	add	r0, sp, #17
   10fa4:	mov	r2, #21
   10fa8:	mov	r1, #1
   10fac:	bl	10d6c <__sprintf_chk@plt>
   10fb0:	add	r2, sp, #17
   10fb4:	ldr	r1, [pc, #840]	; 11304 <__snprintf_chk@plt+0x4e4>
   10fb8:	mov	r0, #1
   10fbc:	bl	10d90 <__printf_chk@plt>
   10fc0:	add	r0, sp, #16
   10fc4:	bl	118f8 <__snprintf_chk@plt+0xad8>
   10fc8:	ldr	r6, [pc, #824]	; 11308 <__snprintf_chk@plt+0x4e8>
   10fcc:	mov	r7, #0
   10fd0:	ldr	r1, [pc, #820]	; 1130c <__snprintf_chk@plt+0x4ec>
   10fd4:	mov	r2, r0
   10fd8:	mov	r0, #1
   10fdc:	bl	10d90 <__printf_chk@plt>
   10fe0:	mov	r3, r4
   10fe4:	strd	r6, [sp]
   10fe8:	add	r0, sp, #17
   10fec:	mov	r2, #21
   10ff0:	mov	r1, #1
   10ff4:	bl	10d6c <__sprintf_chk@plt>
   10ff8:	add	r2, sp, #17
   10ffc:	ldr	r1, [pc, #780]	; 11310 <__snprintf_chk@plt+0x4f0>
   11000:	mov	r0, #1
   11004:	bl	10d90 <__printf_chk@plt>
   11008:	add	r0, sp, #16
   1100c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11010:	ldr	r6, [pc, #764]	; 11314 <__snprintf_chk@plt+0x4f4>
   11014:	mvn	r7, #0
   11018:	ldr	r1, [pc, #760]	; 11318 <__snprintf_chk@plt+0x4f8>
   1101c:	mov	r2, r0
   11020:	mov	r0, #1
   11024:	bl	10d90 <__printf_chk@plt>
   11028:	mov	r3, r5
   1102c:	strd	r6, [sp]
   11030:	add	r0, sp, #17
   11034:	mov	r2, #21
   11038:	mov	r1, #1
   1103c:	bl	10d6c <__sprintf_chk@plt>
   11040:	add	r2, sp, #17
   11044:	ldr	r1, [pc, #720]	; 1131c <__snprintf_chk@plt+0x4fc>
   11048:	mov	r0, #1
   1104c:	bl	10d90 <__printf_chk@plt>
   11050:	add	r0, sp, #16
   11054:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11058:	ldr	r1, [pc, #704]	; 11320 <__snprintf_chk@plt+0x500>
   1105c:	mov	r6, #-2147483648	; 0x80000000
   11060:	mvn	r7, #0
   11064:	mov	r2, r0
   11068:	mov	r0, #1
   1106c:	bl	10d90 <__printf_chk@plt>
   11070:	mov	r3, r4
   11074:	strd	r8, [sp]
   11078:	add	r0, sp, #17
   1107c:	mov	r2, #21
   11080:	mov	r1, #1
   11084:	bl	10d6c <__sprintf_chk@plt>
   11088:	add	r2, sp, #17
   1108c:	ldr	r1, [pc, #656]	; 11324 <__snprintf_chk@plt+0x504>
   11090:	mov	r0, #1
   11094:	bl	10d90 <__printf_chk@plt>
   11098:	add	r0, sp, #16
   1109c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   110a0:	ldr	r1, [pc, #640]	; 11328 <__snprintf_chk@plt+0x508>
   110a4:	mov	r2, r0
   110a8:	mov	r0, #1
   110ac:	bl	10d90 <__printf_chk@plt>
   110b0:	mov	r3, r5
   110b4:	strd	r6, [sp]
   110b8:	add	r0, sp, #17
   110bc:	mov	r2, #21
   110c0:	mov	r1, #1
   110c4:	bl	10d6c <__sprintf_chk@plt>
   110c8:	add	r2, sp, #17
   110cc:	ldr	r1, [pc, #600]	; 1132c <__snprintf_chk@plt+0x50c>
   110d0:	mov	r0, #1
   110d4:	bl	10d90 <__printf_chk@plt>
   110d8:	add	r0, sp, #16
   110dc:	bl	118f8 <__snprintf_chk@plt+0xad8>
   110e0:	mvn	r6, #0
   110e4:	mov	r7, #0
   110e8:	ldr	r1, [pc, #576]	; 11330 <__snprintf_chk@plt+0x510>
   110ec:	mov	r2, r0
   110f0:	mov	r0, #1
   110f4:	bl	10d90 <__printf_chk@plt>
   110f8:	mov	r3, r4
   110fc:	strd	r6, [sp]
   11100:	add	r0, sp, #17
   11104:	mov	r2, #21
   11108:	mov	r1, #1
   1110c:	bl	10d6c <__sprintf_chk@plt>
   11110:	add	r2, sp, #17
   11114:	ldr	r1, [pc, #536]	; 11334 <__snprintf_chk@plt+0x514>
   11118:	mov	r0, #1
   1111c:	bl	10d90 <__printf_chk@plt>
   11120:	add	r0, sp, #16
   11124:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11128:	ldr	r1, [pc, #520]	; 11338 <__snprintf_chk@plt+0x518>
   1112c:	mov	r2, r0
   11130:	mov	r0, #1
   11134:	bl	10d90 <__printf_chk@plt>
   11138:	mov	r3, r4
   1113c:	strd	r8, [sp]
   11140:	add	r0, sp, #17
   11144:	mov	r2, #21
   11148:	mov	r1, #1
   1114c:	bl	10d6c <__sprintf_chk@plt>
   11150:	add	r2, sp, #17
   11154:	ldr	r1, [pc, #480]	; 1133c <__snprintf_chk@plt+0x51c>
   11158:	mov	r0, #1
   1115c:	bl	10d90 <__printf_chk@plt>
   11160:	add	r0, sp, #16
   11164:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11168:	ldr	r1, [pc, #464]	; 11340 <__snprintf_chk@plt+0x520>
   1116c:	mov	r2, r0
   11170:	mov	r0, #1
   11174:	bl	10d90 <__printf_chk@plt>
   11178:	mov	r2, #-2147483648	; 0x80000000
   1117c:	mvn	r3, #0
   11180:	add	r0, sp, #17
   11184:	strd	r2, [sp]
   11188:	mov	r1, #1
   1118c:	mov	r3, r5
   11190:	mov	r2, #21
   11194:	bl	10d6c <__sprintf_chk@plt>
   11198:	add	r2, sp, #17
   1119c:	ldr	r1, [pc, #416]	; 11344 <__snprintf_chk@plt+0x524>
   111a0:	mov	r0, #1
   111a4:	bl	10d90 <__printf_chk@plt>
   111a8:	add	r0, sp, #16
   111ac:	bl	118f8 <__snprintf_chk@plt+0xad8>
   111b0:	ldr	r1, [pc, #400]	; 11348 <__snprintf_chk@plt+0x528>
   111b4:	mov	r2, r0
   111b8:	mov	r0, #1
   111bc:	bl	10d90 <__printf_chk@plt>
   111c0:	mov	r3, r4
   111c4:	strd	r6, [sp]
   111c8:	add	r0, sp, #17
   111cc:	mov	r2, #21
   111d0:	mov	r1, #1
   111d4:	bl	10d6c <__sprintf_chk@plt>
   111d8:	add	r2, sp, #17
   111dc:	ldr	r1, [pc, #360]	; 1134c <__snprintf_chk@plt+0x52c>
   111e0:	mov	r0, #1
   111e4:	bl	10d90 <__printf_chk@plt>
   111e8:	add	r0, sp, #16
   111ec:	bl	118f8 <__snprintf_chk@plt+0xad8>
   111f0:	ldr	r1, [pc, #344]	; 11350 <__snprintf_chk@plt+0x530>
   111f4:	mov	r2, r0
   111f8:	mov	r0, #1
   111fc:	bl	10d90 <__printf_chk@plt>
   11200:	mov	r3, r4
   11204:	strd	r6, [sp]
   11208:	add	r0, sp, #17
   1120c:	mov	r2, #21
   11210:	mov	r1, #1
   11214:	bl	10d6c <__sprintf_chk@plt>
   11218:	add	r2, sp, #17
   1121c:	ldr	r1, [pc, #304]	; 11354 <__snprintf_chk@plt+0x534>
   11220:	mov	r0, #1
   11224:	bl	10d90 <__printf_chk@plt>
   11228:	add	r0, sp, #16
   1122c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11230:	ldr	r1, [pc, #288]	; 11358 <__snprintf_chk@plt+0x538>
   11234:	mov	r2, r0
   11238:	mov	r0, #1
   1123c:	bl	10d90 <__printf_chk@plt>
   11240:	mov	r3, r4
   11244:	strd	r8, [sp]
   11248:	add	r0, sp, #17
   1124c:	mov	r2, #21
   11250:	mov	r1, #1
   11254:	bl	10d6c <__sprintf_chk@plt>
   11258:	add	r2, sp, #17
   1125c:	ldr	r1, [pc, #248]	; 1135c <__snprintf_chk@plt+0x53c>
   11260:	mov	r0, #1
   11264:	bl	10d90 <__printf_chk@plt>
   11268:	add	r0, sp, #16
   1126c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11270:	ldr	r1, [pc, #232]	; 11360 <__snprintf_chk@plt+0x540>
   11274:	mov	r2, r0
   11278:	mov	r0, #1
   1127c:	bl	10d90 <__printf_chk@plt>
   11280:	mov	r2, #-2147483648	; 0x80000000
   11284:	mvn	r3, #0
   11288:	add	r0, sp, #17
   1128c:	strd	r2, [sp]
   11290:	mov	r1, #1
   11294:	mov	r3, r5
   11298:	mov	r2, #21
   1129c:	bl	10d6c <__sprintf_chk@plt>
   112a0:	add	r2, sp, #17
   112a4:	ldr	r1, [pc, #184]	; 11364 <__snprintf_chk@plt+0x544>
   112a8:	mov	r0, #1
   112ac:	b	113e4 <__snprintf_chk@plt+0x5c4>
   112b0:	andeq	r0, r0, r0
   112b4:	andseq	r0, r0, r0
   112b8:			; <UNDEFINED> instruction: 0xffffffff
   112bc:	svcvc	0x00efffff
   112c0:	andeq	r7, r1, ip, lsr pc
   112c4:	andeq	r7, r1, ip, lsl #29
   112c8:	andeq	r7, r1, r4, ror #31
   112cc:	andeq	r1, r1, r0, lsl #25
   112d0:	strdeq	r7, [r1], -ip
   112d4:	muleq	r1, r8, r9
   112d8:	andeq	r8, r1, ip
   112dc:	andeq	r8, r1, ip, lsl r0
   112e0:	andeq	r7, r1, r8, lsr pc
   112e4:	andeq	r7, r1, r4, lsl #28
   112e8:	andeq	r8, r1, r4, lsr #32
   112ec:	andeq	r8, r1, r4, lsr r0
   112f0:	andeq	r8, r1, r4, rrx
   112f4:	andeq	r8, r1, r4, asr #32
   112f8:	andeq	r8, r1, r4, asr r0
   112fc:	andeq	r8, r1, ip, rrx
   11300:	andeq	r8, r1, ip, ror r0
   11304:	andeq	r8, r1, ip, lsl #1
   11308:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   1130c:	muleq	r1, ip, r0
   11310:	andeq	r8, r1, ip, lsr #1
   11314:			; <UNDEFINED> instruction: 0xffff8000
   11318:	strheq	r8, [r1], -ip
   1131c:	andeq	r8, r1, ip, asr #1
   11320:	ldrdeq	r8, [r1], -ip
   11324:	andeq	r8, r1, ip, ror #1
   11328:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1132c:	andeq	r8, r1, r8, lsl #2
   11330:	andeq	r8, r1, r4, lsl r1
   11334:	andeq	r8, r1, r4, lsr #2
   11338:	andeq	r8, r1, r4, lsr r1
   1133c:	andeq	r8, r1, r4, asr #2
   11340:	andeq	r8, r1, r4, asr r1
   11344:	andeq	r8, r1, r4, ror #2
   11348:	andeq	r8, r1, r4, ror r1
   1134c:	andeq	r8, r1, r4, lsl #3
   11350:	muleq	r1, r4, r1
   11354:	andeq	r8, r1, r4, lsr #3
   11358:			; <UNDEFINED> instruction: 0x000181b4
   1135c:	andeq	r8, r1, r4, asr #3
   11360:	ldrdeq	r8, [r1], -r4
   11364:	andeq	r8, r1, r4, ror #3
   11368:	strdeq	r8, [r1], -r4
   1136c:	andeq	r8, r1, r4, lsl #4
   11370:	andeq	r8, r1, r4, lsl r2
   11374:	andeq	r8, r1, r8, lsr #4
   11378:	andeq	r8, r1, r8, lsr r2
   1137c:	andeq	r8, r1, ip, asr #4
   11380:	andeq	r8, r1, ip, asr r2
   11384:	andeq	r8, r1, ip, ror #4
   11388:	andeq	r8, r1, ip, ror r2
   1138c:	andeq	r8, r1, ip, lsl #5
   11390:	muleq	r1, ip, r2
   11394:	andeq	r8, r1, ip, lsr #5
   11398:			; <UNDEFINED> instruction: 0x000182bc
   1139c:	andeq	r8, r1, ip, asr #5
   113a0:	ldrdeq	r8, [r1], -ip
   113a4:	andeq	r8, r1, ip, ror #5
   113a8:	strdeq	r8, [r1], -ip
   113ac:	andeq	r8, r1, ip, lsl #6
   113b0:	andeq	r8, r1, ip, lsl r3
   113b4:	andeq	r8, r1, r0, lsr r3
   113b8:	andeq	r8, r1, r0, asr #6
   113bc:	andeq	r8, r1, r4, asr r3
   113c0:	andeq	r8, r1, r4, ror #6
   113c4:	andeq	r8, r1, r8, ror r3
   113c8:	andeq	r8, r1, r4, lsl #7
   113cc:	muleq	r1, r0, r3
   113d0:	muleq	r1, ip, r3
   113d4:	andeq	r8, r1, r8, lsr #7
   113d8:			; <UNDEFINED> instruction: 0x000183b4
   113dc:	addeq	r0, r0, r0
   113e0:	svcvc	0x007fffff
   113e4:	bl	10d90 <__printf_chk@plt>
   113e8:	add	r0, sp, #16
   113ec:	bl	118f8 <__snprintf_chk@plt+0xad8>
   113f0:	ldr	r1, [pc, #-144]	; 11368 <__snprintf_chk@plt+0x548>
   113f4:	mov	r2, r0
   113f8:	mov	r0, #1
   113fc:	bl	10d90 <__printf_chk@plt>
   11400:	mov	r3, r4
   11404:	strd	r8, [sp]
   11408:	add	r0, sp, #17
   1140c:	mov	r2, #21
   11410:	mov	r1, #1
   11414:	bl	10d6c <__sprintf_chk@plt>
   11418:	add	r2, sp, #17
   1141c:	ldr	r1, [pc, #-184]	; 1136c <__snprintf_chk@plt+0x54c>
   11420:	mov	r0, #1
   11424:	bl	10d90 <__printf_chk@plt>
   11428:	add	r0, sp, #16
   1142c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11430:	ldr	r1, [pc, #-200]	; 11370 <__snprintf_chk@plt+0x550>
   11434:	mov	r2, r0
   11438:	mov	r0, #1
   1143c:	bl	10d90 <__printf_chk@plt>
   11440:	mov	r2, #-2147483648	; 0x80000000
   11444:	mvn	r3, #0
   11448:	add	r0, sp, #17
   1144c:	strd	r2, [sp]
   11450:	mov	r1, #1
   11454:	mov	r3, r5
   11458:	mov	r2, #21
   1145c:	bl	10d6c <__sprintf_chk@plt>
   11460:	add	r2, sp, #17
   11464:	ldr	r1, [pc, #-248]	; 11374 <__snprintf_chk@plt+0x554>
   11468:	mov	r0, #1
   1146c:	bl	10d90 <__printf_chk@plt>
   11470:	add	r0, sp, #16
   11474:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11478:	ldr	r1, [pc, #-264]	; 11378 <__snprintf_chk@plt+0x558>
   1147c:	mov	r2, r0
   11480:	mov	r0, #1
   11484:	bl	10d90 <__printf_chk@plt>
   11488:	mov	r3, r4
   1148c:	strd	r6, [sp]
   11490:	add	r0, sp, #17
   11494:	mov	r2, #21
   11498:	mov	r1, #1
   1149c:	bl	10d6c <__sprintf_chk@plt>
   114a0:	add	r2, sp, #17
   114a4:	ldr	r1, [pc, #-304]	; 1137c <__snprintf_chk@plt+0x55c>
   114a8:	mov	r0, #1
   114ac:	bl	10d90 <__printf_chk@plt>
   114b0:	add	r0, sp, #16
   114b4:	bl	118f8 <__snprintf_chk@plt+0xad8>
   114b8:	ldr	r1, [pc, #-320]	; 11380 <__snprintf_chk@plt+0x560>
   114bc:	mov	r2, r0
   114c0:	mov	r0, #1
   114c4:	bl	10d90 <__printf_chk@plt>
   114c8:	mov	r3, r4
   114cc:	strd	r6, [sp]
   114d0:	add	r0, sp, #17
   114d4:	mov	r2, #21
   114d8:	mov	r1, #1
   114dc:	bl	10d6c <__sprintf_chk@plt>
   114e0:	add	r2, sp, #17
   114e4:	ldr	r1, [pc, #-360]	; 11384 <__snprintf_chk@plt+0x564>
   114e8:	mov	r0, #1
   114ec:	bl	10d90 <__printf_chk@plt>
   114f0:	add	r0, sp, #16
   114f4:	bl	118f8 <__snprintf_chk@plt+0xad8>
   114f8:	ldr	r1, [pc, #-376]	; 11388 <__snprintf_chk@plt+0x568>
   114fc:	mov	r6, #0
   11500:	mov	r7, #-2147483648	; 0x80000000
   11504:	mov	r2, r0
   11508:	mov	r0, #1
   1150c:	bl	10d90 <__printf_chk@plt>
   11510:	mov	r3, r4
   11514:	strd	r8, [sp]
   11518:	add	r0, sp, #17
   1151c:	mov	r2, #21
   11520:	mov	r1, #1
   11524:	bl	10d6c <__sprintf_chk@plt>
   11528:	add	r2, sp, #17
   1152c:	ldr	r1, [pc, #-424]	; 1138c <__snprintf_chk@plt+0x56c>
   11530:	mov	r0, #1
   11534:	bl	10d90 <__printf_chk@plt>
   11538:	add	r0, sp, #16
   1153c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11540:	ldr	r1, [pc, #-440]	; 11390 <__snprintf_chk@plt+0x570>
   11544:	mvn	r8, #0
   11548:	mvn	r9, #-2147483648	; 0x80000000
   1154c:	mov	r2, r0
   11550:	mov	r0, #1
   11554:	bl	10d90 <__printf_chk@plt>
   11558:	mov	r2, #-2147483648	; 0x80000000
   1155c:	mvn	r3, #0
   11560:	add	r0, sp, #17
   11564:	strd	r2, [sp]
   11568:	mov	r1, #1
   1156c:	mov	r3, r5
   11570:	mov	r2, #21
   11574:	bl	10d6c <__sprintf_chk@plt>
   11578:	add	r2, sp, #17
   1157c:	ldr	r1, [pc, #-496]	; 11394 <__snprintf_chk@plt+0x574>
   11580:	mov	r0, #1
   11584:	bl	10d90 <__printf_chk@plt>
   11588:	add	r0, sp, #16
   1158c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11590:	ldr	r1, [pc, #-512]	; 11398 <__snprintf_chk@plt+0x578>
   11594:	mov	r2, r0
   11598:	mov	r0, #1
   1159c:	bl	10d90 <__printf_chk@plt>
   115a0:	mov	r3, r4
   115a4:	add	r0, sp, #17
   115a8:	strd	r8, [sp]
   115ac:	mov	r2, #21
   115b0:	mov	r1, #1
   115b4:	bl	10d6c <__sprintf_chk@plt>
   115b8:	add	r2, sp, #17
   115bc:	ldr	r1, [pc, #-552]	; 1139c <__snprintf_chk@plt+0x57c>
   115c0:	mov	r0, #1
   115c4:	bl	10d90 <__printf_chk@plt>
   115c8:	add	r0, sp, #16
   115cc:	bl	118f8 <__snprintf_chk@plt+0xad8>
   115d0:	ldr	r1, [pc, #-568]	; 113a0 <__snprintf_chk@plt+0x580>
   115d4:	mov	r2, r0
   115d8:	mov	r0, #1
   115dc:	bl	10d90 <__printf_chk@plt>
   115e0:	mov	r3, r5
   115e4:	strd	r6, [sp]
   115e8:	add	r0, sp, #17
   115ec:	mov	r2, #21
   115f0:	mov	r1, #1
   115f4:	bl	10d6c <__sprintf_chk@plt>
   115f8:	add	r2, sp, #17
   115fc:	ldr	r1, [pc, #-608]	; 113a4 <__snprintf_chk@plt+0x584>
   11600:	mov	r0, #1
   11604:	bl	10d90 <__printf_chk@plt>
   11608:	add	r0, sp, #16
   1160c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11610:	ldr	r1, [pc, #-624]	; 113a8 <__snprintf_chk@plt+0x588>
   11614:	mov	r2, r0
   11618:	mov	r0, #1
   1161c:	bl	10d90 <__printf_chk@plt>
   11620:	mov	r3, r4
   11624:	strd	r8, [sp]
   11628:	add	r0, sp, #17
   1162c:	mov	r2, #21
   11630:	mov	r1, #1
   11634:	bl	10d6c <__sprintf_chk@plt>
   11638:	add	r2, sp, #17
   1163c:	ldr	r1, [pc, #-664]	; 113ac <__snprintf_chk@plt+0x58c>
   11640:	mov	r0, #1
   11644:	bl	10d90 <__printf_chk@plt>
   11648:	add	r0, sp, #16
   1164c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11650:	ldr	r1, [pc, #-680]	; 113b0 <__snprintf_chk@plt+0x590>
   11654:	mov	r2, r0
   11658:	mov	r0, #1
   1165c:	bl	10d90 <__printf_chk@plt>
   11660:	mov	r3, r5
   11664:	strd	r6, [sp]
   11668:	add	r0, sp, #17
   1166c:	mov	r2, #21
   11670:	mov	r1, #1
   11674:	bl	10d6c <__sprintf_chk@plt>
   11678:	add	r2, sp, #17
   1167c:	ldr	r1, [pc, #-720]	; 113b4 <__snprintf_chk@plt+0x594>
   11680:	mov	r0, #1
   11684:	bl	10d90 <__printf_chk@plt>
   11688:	add	r0, sp, #16
   1168c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11690:	mvn	r6, #0
   11694:	mvn	r7, #0
   11698:	ldr	r1, [pc, #-744]	; 113b8 <__snprintf_chk@plt+0x598>
   1169c:	mov	r2, r0
   116a0:	mov	r0, #1
   116a4:	bl	10d90 <__printf_chk@plt>
   116a8:	mov	r3, r4
   116ac:	add	r0, sp, #17
   116b0:	strd	r6, [sp]
   116b4:	mov	r2, #21
   116b8:	mov	r1, #1
   116bc:	bl	10d6c <__sprintf_chk@plt>
   116c0:	add	r2, sp, #17
   116c4:	ldr	r1, [pc, #-784]	; 113bc <__snprintf_chk@plt+0x59c>
   116c8:	mov	r0, #1
   116cc:	bl	10d90 <__printf_chk@plt>
   116d0:	add	r0, sp, #16
   116d4:	bl	118f8 <__snprintf_chk@plt+0xad8>
   116d8:	ldr	r1, [pc, #-800]	; 113c0 <__snprintf_chk@plt+0x5a0>
   116dc:	mov	r2, r0
   116e0:	mov	r0, #1
   116e4:	bl	10d90 <__printf_chk@plt>
   116e8:	ldr	r1, [pc, #-812]	; 113c4 <__snprintf_chk@plt+0x5a4>
   116ec:	mov	r0, #1
   116f0:	bl	10d90 <__printf_chk@plt>
   116f4:	vldr	s0, [pc, #-800]	; 113dc <__snprintf_chk@plt+0x5bc>
   116f8:	bl	1196c <__snprintf_chk@plt+0xb4c>
   116fc:	ldr	r1, [pc, #-828]	; 113c8 <__snprintf_chk@plt+0x5a8>
   11700:	mov	r0, #1
   11704:	bl	10d90 <__printf_chk@plt>
   11708:	vldr	s0, [pc, #-816]	; 113e0 <__snprintf_chk@plt+0x5c0>
   1170c:	bl	1196c <__snprintf_chk@plt+0xb4c>
   11710:	ldr	r1, [pc, #-844]	; 113cc <__snprintf_chk@plt+0x5ac>
   11714:	mov	r0, #1
   11718:	bl	10d90 <__printf_chk@plt>
   1171c:	mov	r3, sl
   11720:	vmov.f64	d0, d9
   11724:	mov	r2, #1
   11728:	mov	r1, #40	; 0x28
   1172c:	add	r0, sp, #40	; 0x28
   11730:	bl	11d68 <__snprintf_chk@plt+0xf48>
   11734:	add	r0, sp, #40	; 0x28
   11738:	bl	10cf4 <puts@plt>
   1173c:	ldr	r1, [pc, #-884]	; 113d0 <__snprintf_chk@plt+0x5b0>
   11740:	mov	r0, #1
   11744:	bl	10d90 <__printf_chk@plt>
   11748:	mov	r3, sl
   1174c:	vmov.f64	d0, d8
   11750:	mov	r2, #1
   11754:	mov	r1, #40	; 0x28
   11758:	add	r0, sp, #40	; 0x28
   1175c:	bl	11d68 <__snprintf_chk@plt+0xf48>
   11760:	add	r0, sp, #40	; 0x28
   11764:	bl	10cf4 <puts@plt>
   11768:	ldr	r1, [pc, #-924]	; 113d4 <__snprintf_chk@plt+0x5b4>
   1176c:	mov	r0, #1
   11770:	bl	10d90 <__printf_chk@plt>
   11774:	vmov.f64	d0, d9
   11778:	mov	r3, sl
   1177c:	mov	r2, #1
   11780:	mov	r1, #40	; 0x28
   11784:	add	r0, sp, #40	; 0x28
   11788:	bl	11ff8 <__snprintf_chk@plt+0x11d8>
   1178c:	add	r0, sp, #40	; 0x28
   11790:	bl	10cf4 <puts@plt>
   11794:	ldr	r1, [pc, #-964]	; 113d8 <__snprintf_chk@plt+0x5b8>
   11798:	mov	r0, #1
   1179c:	bl	10d90 <__printf_chk@plt>
   117a0:	vmov.f64	d0, d8
   117a4:	mov	r3, sl
   117a8:	mov	r2, #1
   117ac:	mov	r1, #40	; 0x28
   117b0:	add	r0, sp, #40	; 0x28
   117b4:	bl	11ff8 <__snprintf_chk@plt+0x11d8>
   117b8:	add	r0, sp, #40	; 0x28
   117bc:	bl	10cf4 <puts@plt>
   117c0:	mov	r0, sl
   117c4:	add	sp, sp, #80	; 0x50
   117c8:	vpop	{d8-d9}
   117cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   117d0:	mov	fp, #0
   117d4:	mov	lr, #0
   117d8:	pop	{r1}		; (ldr r1, [sp], #4)
   117dc:	mov	r2, sp
   117e0:	push	{r2}		; (str r2, [sp, #-4]!)
   117e4:	push	{r0}		; (str r0, [sp, #-4]!)
   117e8:	ldr	ip, [pc, #16]	; 11800 <__snprintf_chk@plt+0x9e0>
   117ec:	push	{ip}		; (str ip, [sp, #-4]!)
   117f0:	ldr	r0, [pc, #12]	; 11804 <__snprintf_chk@plt+0x9e4>
   117f4:	ldr	r3, [pc, #12]	; 11808 <__snprintf_chk@plt+0x9e8>
   117f8:	bl	10d0c <__libc_start_main@plt>
   117fc:	bl	10e14 <abort@plt>
   11800:	andeq	r7, r1, r4, lsr #27
   11804:	andeq	r0, r1, r0, lsr lr
   11808:	andeq	r7, r1, r4, asr #26
   1180c:	ldr	r3, [pc, #20]	; 11828 <__snprintf_chk@plt+0xa08>
   11810:	ldr	r2, [pc, #20]	; 1182c <__snprintf_chk@plt+0xa0c>
   11814:	add	r3, pc, r3
   11818:	ldr	r2, [r3, r2]
   1181c:	cmp	r2, #0
   11820:	bxeq	lr
   11824:	b	10d24 <__gmon_start__@plt>
   11828:	andeq	r7, r1, r4, ror #15
   1182c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11830:	ldr	r3, [pc, #28]	; 11854 <__snprintf_chk@plt+0xa34>
   11834:	ldr	r0, [pc, #28]	; 11858 <__snprintf_chk@plt+0xa38>
   11838:	sub	r3, r3, r0
   1183c:	cmp	r3, #6
   11840:	bxls	lr
   11844:	ldr	r3, [pc, #16]	; 1185c <__snprintf_chk@plt+0xa3c>
   11848:	cmp	r3, #0
   1184c:	bxeq	lr
   11850:	bx	r3
   11854:	andeq	r9, r2, r3, lsr #2
   11858:	andeq	r9, r2, r0, lsr #2
   1185c:	andeq	r0, r0, r0
   11860:	ldr	r1, [pc, #36]	; 1188c <__snprintf_chk@plt+0xa6c>
   11864:	ldr	r0, [pc, #36]	; 11890 <__snprintf_chk@plt+0xa70>
   11868:	sub	r1, r1, r0
   1186c:	asr	r1, r1, #2
   11870:	add	r1, r1, r1, lsr #31
   11874:	asrs	r1, r1, #1
   11878:	bxeq	lr
   1187c:	ldr	r3, [pc, #16]	; 11894 <__snprintf_chk@plt+0xa74>
   11880:	cmp	r3, #0
   11884:	bxeq	lr
   11888:	bx	r3
   1188c:	andeq	r9, r2, r0, lsr #2
   11890:	andeq	r9, r2, r0, lsr #2
   11894:	andeq	r0, r0, r0
   11898:	push	{r4, lr}
   1189c:	ldr	r4, [pc, #24]	; 118bc <__snprintf_chk@plt+0xa9c>
   118a0:	ldrb	r3, [r4]
   118a4:	cmp	r3, #0
   118a8:	popne	{r4, pc}
   118ac:	bl	11830 <__snprintf_chk@plt+0xa10>
   118b0:	mov	r3, #1
   118b4:	strb	r3, [r4]
   118b8:	pop	{r4, pc}
   118bc:	andeq	r9, r2, ip, lsr r1
   118c0:	ldr	r0, [pc, #40]	; 118f0 <__snprintf_chk@plt+0xad0>
   118c4:	ldr	r3, [r0]
   118c8:	cmp	r3, #0
   118cc:	bne	118d4 <__snprintf_chk@plt+0xab4>
   118d0:	b	11860 <__snprintf_chk@plt+0xa40>
   118d4:	ldr	r3, [pc, #24]	; 118f4 <__snprintf_chk@plt+0xad4>
   118d8:	cmp	r3, #0
   118dc:	beq	118d0 <__snprintf_chk@plt+0xab0>
   118e0:	push	{r4, lr}
   118e4:	blx	r3
   118e8:	pop	{r4, lr}
   118ec:	b	11860 <__snprintf_chk@plt+0xa40>
   118f0:	andeq	r8, r2, r4, lsl pc
   118f4:	andeq	r0, r0, r0
   118f8:	push	{r4, r5, r6, lr}
   118fc:	ldrb	r5, [r0, #1]
   11900:	sub	r4, r5, #45	; 0x2d
   11904:	clz	r4, r4
   11908:	lsr	r4, r4, #5
   1190c:	add	r4, r4, #1
   11910:	add	r4, r0, r4
   11914:	mov	r0, r4
   11918:	bl	10d54 <strlen@plt>
   1191c:	mov	r1, #48	; 0x30
   11920:	strb	r1, [r4, #-1]
   11924:	add	r0, r4, r0
   11928:	sub	r3, r0, #1
   1192c:	ldrb	r2, [r0, #-1]
   11930:	cmp	r2, #57	; 0x39
   11934:	bne	11948 <__snprintf_chk@plt+0xb28>
   11938:	strb	r1, [r3]
   1193c:	ldrb	r2, [r3, #-1]!
   11940:	cmp	r2, #57	; 0x39
   11944:	beq	11938 <__snprintf_chk@plt+0xb18>
   11948:	cmp	r4, r3
   1194c:	movcc	r0, r4
   11950:	movcs	r0, r3
   11954:	add	r2, r2, #1
   11958:	cmp	r5, #45	; 0x2d
   1195c:	strb	r2, [r3]
   11960:	strbeq	r5, [r0, #-1]
   11964:	subeq	r0, r0, #1
   11968:	pop	{r4, r5, r6, pc}
   1196c:	push	{lr}		; (str lr, [sp, #-4]!)
   11970:	sub	sp, sp, #36	; 0x24
   11974:	mov	r3, #0
   11978:	mov	r2, #1
   1197c:	mov	r1, #31
   11980:	mov	r0, sp
   11984:	bl	11eb0 <__snprintf_chk@plt+0x1090>
   11988:	mov	r0, sp
   1198c:	bl	10cf4 <puts@plt>
   11990:	add	sp, sp, #36	; 0x24
   11994:	pop	{pc}		; (ldr pc, [sp], #4)
   11998:	subs	r6, r0, #0
   1199c:	push	{r7, lr}
   119a0:	sub	sp, sp, #56	; 0x38
   119a4:	beq	119e0 <__snprintf_chk@plt+0xbc0>
   119a8:	ldr	r3, [pc, #612]	; 11c14 <__snprintf_chk@plt+0xdf4>
   119ac:	mov	r2, #5
   119b0:	ldr	r1, [pc, #608]	; 11c18 <__snprintf_chk@plt+0xdf8>
   119b4:	mov	r0, #0
   119b8:	ldr	r4, [r3]
   119bc:	bl	10c70 <dcgettext@plt>
   119c0:	ldr	r3, [pc, #596]	; 11c1c <__snprintf_chk@plt+0xdfc>
   119c4:	mov	r1, #1
   119c8:	ldr	r3, [r3]
   119cc:	mov	r2, r0
   119d0:	mov	r0, r4
   119d4:	bl	10db4 <__fprintf_chk@plt>
   119d8:	mov	r0, r6
   119dc:	bl	10d48 <exit@plt>
   119e0:	mov	r2, #5
   119e4:	ldr	r1, [pc, #564]	; 11c20 <__snprintf_chk@plt+0xe00>
   119e8:	bl	10c70 <dcgettext@plt>
   119ec:	ldr	r3, [pc, #552]	; 11c1c <__snprintf_chk@plt+0xdfc>
   119f0:	ldr	r7, [pc, #556]	; 11c24 <__snprintf_chk@plt+0xe04>
   119f4:	ldr	r4, [pc, #556]	; 11c28 <__snprintf_chk@plt+0xe08>
   119f8:	ldr	r2, [r3]
   119fc:	mov	r1, r0
   11a00:	mov	r0, #1
   11a04:	bl	10d90 <__printf_chk@plt>
   11a08:	mov	r2, #5
   11a0c:	ldr	r1, [pc, #536]	; 11c2c <__snprintf_chk@plt+0xe0c>
   11a10:	mov	r0, r6
   11a14:	bl	10c70 <dcgettext@plt>
   11a18:	ldr	r1, [r7]
   11a1c:	bl	10bec <fputs_unlocked@plt>
   11a20:	mov	r2, #5
   11a24:	ldr	r1, [pc, #516]	; 11c30 <__snprintf_chk@plt+0xe10>
   11a28:	mov	r0, r6
   11a2c:	bl	10c70 <dcgettext@plt>
   11a30:	ldr	r1, [r7]
   11a34:	bl	10bec <fputs_unlocked@plt>
   11a38:	mov	r2, #5
   11a3c:	ldr	r1, [pc, #496]	; 11c34 <__snprintf_chk@plt+0xe14>
   11a40:	mov	r0, r6
   11a44:	bl	10c70 <dcgettext@plt>
   11a48:	ldr	r1, [r7]
   11a4c:	bl	10bec <fputs_unlocked@plt>
   11a50:	ldm	r4!, {r0, r1, r2, r3}
   11a54:	mov	lr, sp
   11a58:	stmia	lr!, {r0, r1, r2, r3}
   11a5c:	ldm	r4!, {r0, r1, r2, r3}
   11a60:	ldr	ip, [sp]
   11a64:	stmia	lr!, {r0, r1, r2, r3}
   11a68:	cmp	ip, #0
   11a6c:	ldm	r4!, {r0, r1, r2, r3}
   11a70:	stmia	lr!, {r0, r1, r2, r3}
   11a74:	ldm	r4, {r0, r1}
   11a78:	moveq	r4, sp
   11a7c:	stm	lr, {r0, r1}
   11a80:	beq	11ab0 <__snprintf_chk@plt+0xc90>
   11a84:	ldr	r5, [pc, #428]	; 11c38 <__snprintf_chk@plt+0xe18>
   11a88:	mov	r4, sp
   11a8c:	b	11a9c <__snprintf_chk@plt+0xc7c>
   11a90:	ldr	ip, [r4, #8]!
   11a94:	cmp	ip, #0
   11a98:	beq	11ab0 <__snprintf_chk@plt+0xc90>
   11a9c:	mov	r1, ip
   11aa0:	mov	r0, r5
   11aa4:	bl	10c04 <strcmp@plt>
   11aa8:	cmp	r0, #0
   11aac:	bne	11a90 <__snprintf_chk@plt+0xc70>
   11ab0:	ldr	r4, [r4, #4]
   11ab4:	mov	r2, #5
   11ab8:	cmp	r4, #0
   11abc:	ldr	r1, [pc, #376]	; 11c3c <__snprintf_chk@plt+0xe1c>
   11ac0:	beq	11b68 <__snprintf_chk@plt+0xd48>
   11ac4:	mov	r0, #0
   11ac8:	bl	10c70 <dcgettext@plt>
   11acc:	ldr	r3, [pc, #364]	; 11c40 <__snprintf_chk@plt+0xe20>
   11ad0:	ldr	r2, [pc, #364]	; 11c44 <__snprintf_chk@plt+0xe24>
   11ad4:	mov	r1, r0
   11ad8:	mov	r0, #1
   11adc:	bl	10d90 <__printf_chk@plt>
   11ae0:	mov	r1, #0
   11ae4:	mov	r0, #5
   11ae8:	bl	10dd8 <setlocale@plt>
   11aec:	cmp	r0, #0
   11af0:	ldreq	r5, [pc, #320]	; 11c38 <__snprintf_chk@plt+0xe18>
   11af4:	beq	11b10 <__snprintf_chk@plt+0xcf0>
   11af8:	mov	r2, #3
   11afc:	ldr	r1, [pc, #324]	; 11c48 <__snprintf_chk@plt+0xe28>
   11b00:	bl	10e08 <strncmp@plt>
   11b04:	ldr	r5, [pc, #300]	; 11c38 <__snprintf_chk@plt+0xe18>
   11b08:	cmp	r0, #0
   11b0c:	bne	11bf8 <__snprintf_chk@plt+0xdd8>
   11b10:	mov	r2, #5
   11b14:	ldr	r1, [pc, #304]	; 11c4c <__snprintf_chk@plt+0xe2c>
   11b18:	mov	r0, #0
   11b1c:	bl	10c70 <dcgettext@plt>
   11b20:	ldr	r3, [pc, #272]	; 11c38 <__snprintf_chk@plt+0xe18>
   11b24:	ldr	r2, [pc, #276]	; 11c40 <__snprintf_chk@plt+0xe20>
   11b28:	mov	r1, r0
   11b2c:	mov	r0, #1
   11b30:	bl	10d90 <__printf_chk@plt>
   11b34:	mov	r2, #5
   11b38:	ldr	r1, [pc, #272]	; 11c50 <__snprintf_chk@plt+0xe30>
   11b3c:	mov	r0, #0
   11b40:	bl	10c70 <dcgettext@plt>
   11b44:	ldr	r2, [pc, #264]	; 11c54 <__snprintf_chk@plt+0xe34>
   11b48:	cmp	r4, r5
   11b4c:	ldr	r3, [pc, #260]	; 11c58 <__snprintf_chk@plt+0xe38>
   11b50:	movne	r3, r2
   11b54:	mov	r1, r0
   11b58:	mov	r2, r4
   11b5c:	mov	r0, #1
   11b60:	bl	10d90 <__printf_chk@plt>
   11b64:	b	119d8 <__snprintf_chk@plt+0xbb8>
   11b68:	mov	r0, r4
   11b6c:	bl	10c70 <dcgettext@plt>
   11b70:	ldr	r3, [pc, #200]	; 11c40 <__snprintf_chk@plt+0xe20>
   11b74:	ldr	r2, [pc, #200]	; 11c44 <__snprintf_chk@plt+0xe24>
   11b78:	mov	r1, r0
   11b7c:	mov	r0, #1
   11b80:	bl	10d90 <__printf_chk@plt>
   11b84:	mov	r1, r4
   11b88:	mov	r0, #5
   11b8c:	bl	10dd8 <setlocale@plt>
   11b90:	cmp	r0, #0
   11b94:	beq	11bac <__snprintf_chk@plt+0xd8c>
   11b98:	mov	r2, #3
   11b9c:	ldr	r1, [pc, #164]	; 11c48 <__snprintf_chk@plt+0xe28>
   11ba0:	bl	10e08 <strncmp@plt>
   11ba4:	cmp	r0, #0
   11ba8:	bne	11bf0 <__snprintf_chk@plt+0xdd0>
   11bac:	mov	r2, #5
   11bb0:	ldr	r1, [pc, #148]	; 11c4c <__snprintf_chk@plt+0xe2c>
   11bb4:	mov	r0, #0
   11bb8:	bl	10c70 <dcgettext@plt>
   11bbc:	ldr	r3, [pc, #116]	; 11c38 <__snprintf_chk@plt+0xe18>
   11bc0:	ldr	r2, [pc, #120]	; 11c40 <__snprintf_chk@plt+0xe20>
   11bc4:	mov	r4, r3
   11bc8:	mov	r1, r0
   11bcc:	mov	r0, #1
   11bd0:	bl	10d90 <__printf_chk@plt>
   11bd4:	ldr	r1, [pc, #116]	; 11c50 <__snprintf_chk@plt+0xe30>
   11bd8:	mov	r2, #5
   11bdc:	mov	r0, #0
   11be0:	bl	10c70 <dcgettext@plt>
   11be4:	ldr	r3, [pc, #108]	; 11c58 <__snprintf_chk@plt+0xe38>
   11be8:	mov	r1, r0
   11bec:	b	11b58 <__snprintf_chk@plt+0xd38>
   11bf0:	ldr	r5, [pc, #64]	; 11c38 <__snprintf_chk@plt+0xe18>
   11bf4:	mov	r4, r5
   11bf8:	mov	r2, #5
   11bfc:	ldr	r1, [pc, #88]	; 11c5c <__snprintf_chk@plt+0xe3c>
   11c00:	mov	r0, #0
   11c04:	bl	10c70 <dcgettext@plt>
   11c08:	ldr	r1, [r7]
   11c0c:	bl	10bec <fputs_unlocked@plt>
   11c10:	b	11b10 <__snprintf_chk@plt+0xcf0>
   11c14:	andeq	r9, r2, r0, lsr r1
   11c18:	andeq	r7, r1, r0, lsl lr
   11c1c:	andeq	r9, r2, r8, asr #2
   11c20:	andeq	r7, r1, r8, lsr lr
   11c24:	andeq	r9, r2, r4, lsr r1
   11c28:	andeq	r7, r1, ip, asr #27
   11c2c:	andeq	r7, r1, r4, asr #28
   11c30:	muleq	r1, r0, lr
   11c34:	andeq	r7, r1, r0, asr #29
   11c38:	andeq	r7, r1, r4, lsl #28
   11c3c:	strdeq	r7, [r1], -r8
   11c40:	andeq	r7, r1, r0, lsl pc
   11c44:	andeq	r7, r1, r8, lsr pc
   11c48:	andeq	r7, r1, r8, asr #30
   11c4c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   11c50:			; <UNDEFINED> instruction: 0x00017fb0
   11c54:	andeq	r7, r1, ip, lsl #29
   11c58:	andeq	r8, r1, r8, asr #7
   11c5c:	andeq	r7, r1, ip, asr #30
   11c60:	ldr	r3, [pc, #4]	; 11c6c <__snprintf_chk@plt+0xe4c>
   11c64:	str	r0, [r3]
   11c68:	bx	lr
   11c6c:	andeq	r9, r2, r0, asr #2
   11c70:	ldr	r3, [pc, #4]	; 11c7c <__snprintf_chk@plt+0xe5c>
   11c74:	strb	r0, [r3, #4]
   11c78:	bx	lr
   11c7c:	andeq	r9, r2, r0, asr #2
   11c80:	ldr	r3, [pc, #192]	; 11d48 <__snprintf_chk@plt+0xf28>
   11c84:	push	{r4, r5, r6, lr}
   11c88:	sub	sp, sp, #8
   11c8c:	ldr	r0, [r3]
   11c90:	bl	174ac <__snprintf_chk@plt+0x668c>
   11c94:	cmp	r0, #0
   11c98:	beq	11cbc <__snprintf_chk@plt+0xe9c>
   11c9c:	ldr	r4, [pc, #168]	; 11d4c <__snprintf_chk@plt+0xf2c>
   11ca0:	ldrb	r3, [r4, #4]
   11ca4:	cmp	r3, #0
   11ca8:	beq	11cd8 <__snprintf_chk@plt+0xeb8>
   11cac:	bl	10d60 <__errno_location@plt>
   11cb0:	ldr	r3, [r0]
   11cb4:	cmp	r3, #32
   11cb8:	bne	11cd8 <__snprintf_chk@plt+0xeb8>
   11cbc:	ldr	r3, [pc, #140]	; 11d50 <__snprintf_chk@plt+0xf30>
   11cc0:	ldr	r0, [r3]
   11cc4:	bl	174ac <__snprintf_chk@plt+0x668c>
   11cc8:	cmp	r0, #0
   11ccc:	bne	11d20 <__snprintf_chk@plt+0xf00>
   11cd0:	add	sp, sp, #8
   11cd4:	pop	{r4, r5, r6, pc}
   11cd8:	mov	r2, #5
   11cdc:	ldr	r1, [pc, #112]	; 11d54 <__snprintf_chk@plt+0xf34>
   11ce0:	mov	r0, #0
   11ce4:	bl	10c70 <dcgettext@plt>
   11ce8:	ldr	r4, [r4]
   11cec:	cmp	r4, #0
   11cf0:	mov	r5, r0
   11cf4:	beq	11d2c <__snprintf_chk@plt+0xf0c>
   11cf8:	bl	10d60 <__errno_location@plt>
   11cfc:	ldr	r6, [r0]
   11d00:	mov	r0, r4
   11d04:	bl	14f38 <__snprintf_chk@plt+0x4118>
   11d08:	mov	r1, r6
   11d0c:	str	r5, [sp]
   11d10:	ldr	r2, [pc, #64]	; 11d58 <__snprintf_chk@plt+0xf38>
   11d14:	mov	r3, r0
   11d18:	mov	r0, #0
   11d1c:	bl	10cdc <error@plt>
   11d20:	ldr	r3, [pc, #52]	; 11d5c <__snprintf_chk@plt+0xf3c>
   11d24:	ldr	r0, [r3]
   11d28:	bl	10c28 <_exit@plt>
   11d2c:	bl	10d60 <__errno_location@plt>
   11d30:	mov	r3, r5
   11d34:	ldr	r2, [pc, #36]	; 11d60 <__snprintf_chk@plt+0xf40>
   11d38:	ldr	r1, [r0]
   11d3c:	mov	r0, r4
   11d40:	bl	10cdc <error@plt>
   11d44:	b	11d20 <__snprintf_chk@plt+0xf00>
   11d48:	andeq	r9, r2, r4, lsr r1
   11d4c:	andeq	r9, r2, r0, asr #2
   11d50:	andeq	r9, r2, r0, lsr r1
   11d54:	andeq	r8, r1, ip, lsr #8
   11d58:	andeq	r8, r1, r8, lsr r4
   11d5c:	ldrdeq	r9, [r2], -ip
   11d60:	andeq	r8, r1, ip, lsr r4
   11d64:	andeq	r0, r0, r0
   11d68:	vcmpe.f64	d0, #0.0
   11d6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d70:	vldr	d7, [pc, #304]	; 11ea8 <__snprintf_chk@plt+0x1088>
   11d74:	vpush	{d8}
   11d78:	vmrs	APSR_nzcv, fpscr
   11d7c:	mov	r6, r0
   11d80:	and	r4, r2, #1
   11d84:	sub	sp, sp, #44	; 0x2c
   11d88:	vnegmi.f64	d6, d0
   11d8c:	vmovpl.f64	d6, d0
   11d90:	add	r0, sp, #40	; 0x28
   11d94:	mov	r7, #37	; 0x25
   11d98:	mov	r5, r1
   11d9c:	vcmpe.f64	d6, d7
   11da0:	lsr	r1, r2, #1
   11da4:	mov	sl, r3
   11da8:	mov	r3, #45	; 0x2d
   11dac:	strb	r3, [r0, #-11]!
   11db0:	strb	r7, [sp, #28]
   11db4:	tst	r2, #16
   11db8:	add	lr, r0, r4
   11dbc:	and	r1, r1, #1
   11dc0:	lsr	r3, r2, #2
   11dc4:	mov	r7, #43	; 0x2b
   11dc8:	strb	r7, [r0, r4]
   11dcc:	and	r3, r3, #1
   11dd0:	add	r0, lr, r1
   11dd4:	moveq	ip, #103	; 0x67
   11dd8:	movne	ip, #71	; 0x47
   11ddc:	mov	r4, #32
   11de0:	vmrs	APSR_nzcv, fpscr
   11de4:	lsr	r2, r2, #3
   11de8:	strb	r4, [lr, r1]
   11dec:	and	r2, r2, #1
   11df0:	add	lr, r0, r3
   11df4:	mov	r4, #48	; 0x30
   11df8:	strb	r4, [r0, r3]
   11dfc:	add	r3, lr, r2
   11e00:	mov	r0, #42	; 0x2a
   11e04:	strb	r0, [lr, r2]
   11e08:	mov	r1, #0
   11e0c:	mov	r2, #46	; 0x2e
   11e10:	vmov.f64	d8, d0
   11e14:	movmi	r4, #1
   11e18:	movpl	r4, #15
   11e1c:	strb	r0, [r3, #2]
   11e20:	strb	r2, [r3, #1]
   11e24:	add	r9, sp, #28
   11e28:	strb	ip, [r3, #3]
   11e2c:	mvn	r8, #0
   11e30:	strb	r1, [r3, #4]
   11e34:	mov	r7, #1
   11e38:	b	11e40 <__snprintf_chk@plt+0x1020>
   11e3c:	add	r4, r4, #1
   11e40:	mov	r2, r7
   11e44:	mov	r3, r8
   11e48:	vstr	d8, [sp, #16]
   11e4c:	str	r4, [sp, #8]
   11e50:	stm	sp, {r9, sl}
   11e54:	mov	r1, r5
   11e58:	mov	r0, r6
   11e5c:	bl	10e20 <__snprintf_chk@plt>
   11e60:	cmp	r4, #16
   11e64:	movle	r2, #0
   11e68:	movgt	r2, #1
   11e6c:	orrs	r3, r2, r0, lsr #31
   11e70:	mov	fp, r0
   11e74:	bne	11e98 <__snprintf_chk@plt+0x1078>
   11e78:	cmp	r5, r0
   11e7c:	bls	11e3c <__snprintf_chk@plt+0x101c>
   11e80:	mov	r1, #0
   11e84:	mov	r0, r6
   11e88:	bl	10d9c <strtod@plt>
   11e8c:	vcmp.f64	d8, d0
   11e90:	vmrs	APSR_nzcv, fpscr
   11e94:	bne	11e3c <__snprintf_chk@plt+0x101c>
   11e98:	mov	r0, fp
   11e9c:	add	sp, sp, #44	; 0x2c
   11ea0:	vpop	{d8}
   11ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ea8:	andeq	r0, r0, r0
   11eac:	andseq	r0, r0, r0
   11eb0:	vcmpe.f32	s0, #0.0
   11eb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11eb8:	vldr	s15, [pc, #308]	; 11ff4 <__snprintf_chk@plt+0x11d4>
   11ebc:	vpush	{d8-d9}
   11ec0:	vmrs	APSR_nzcv, fpscr
   11ec4:	mov	r6, r0
   11ec8:	and	r4, r2, #1
   11ecc:	sub	sp, sp, #44	; 0x2c
   11ed0:	vnegmi.f32	s14, s0
   11ed4:	vmovpl.f32	s14, s0
   11ed8:	add	r0, sp, #40	; 0x28
   11edc:	mov	r7, #37	; 0x25
   11ee0:	mov	r5, r1
   11ee4:	vcmpe.f32	s14, s15
   11ee8:	lsr	r1, r2, #1
   11eec:	mov	sl, r3
   11ef0:	mov	r3, #45	; 0x2d
   11ef4:	strb	r3, [r0, #-11]!
   11ef8:	strb	r7, [sp, #28]
   11efc:	tst	r2, #16
   11f00:	add	lr, r0, r4
   11f04:	and	r1, r1, #1
   11f08:	lsr	r3, r2, #2
   11f0c:	mov	r7, #43	; 0x2b
   11f10:	strb	r7, [r0, r4]
   11f14:	and	r3, r3, #1
   11f18:	add	r0, lr, r1
   11f1c:	moveq	ip, #103	; 0x67
   11f20:	movne	ip, #71	; 0x47
   11f24:	mov	r4, #32
   11f28:	vmrs	APSR_nzcv, fpscr
   11f2c:	lsr	r2, r2, #3
   11f30:	strb	r4, [lr, r1]
   11f34:	and	r2, r2, #1
   11f38:	add	lr, r0, r3
   11f3c:	mov	r4, #48	; 0x30
   11f40:	strb	r4, [r0, r3]
   11f44:	add	r3, lr, r2
   11f48:	mov	r0, #42	; 0x2a
   11f4c:	strb	r0, [lr, r2]
   11f50:	mov	r1, #0
   11f54:	mov	r2, #46	; 0x2e
   11f58:	vmov.f32	s18, s0
   11f5c:	vcvt.f64.f32	d8, s0
   11f60:	movmi	r4, #1
   11f64:	movpl	r4, #6
   11f68:	strb	r0, [r3, #2]
   11f6c:	strb	r2, [r3, #1]
   11f70:	add	r9, sp, #28
   11f74:	strb	ip, [r3, #3]
   11f78:	mvn	r8, #0
   11f7c:	strb	r1, [r3, #4]
   11f80:	mov	r7, #1
   11f84:	b	11f8c <__snprintf_chk@plt+0x116c>
   11f88:	add	r4, r4, #1
   11f8c:	mov	r2, r7
   11f90:	mov	r3, r8
   11f94:	vstr	d8, [sp, #16]
   11f98:	str	r4, [sp, #8]
   11f9c:	stm	sp, {r9, sl}
   11fa0:	mov	r1, r5
   11fa4:	mov	r0, r6
   11fa8:	bl	10e20 <__snprintf_chk@plt>
   11fac:	cmp	r4, #8
   11fb0:	movle	r2, #0
   11fb4:	movgt	r2, #1
   11fb8:	orrs	r3, r2, r0, lsr #31
   11fbc:	mov	fp, r0
   11fc0:	bne	11fe4 <__snprintf_chk@plt+0x11c4>
   11fc4:	cmp	r5, r0
   11fc8:	bls	11f88 <__snprintf_chk@plt+0x1168>
   11fcc:	mov	r1, #0
   11fd0:	mov	r0, r6
   11fd4:	bl	10ce8 <strtof@plt>
   11fd8:	vcmp.f32	s18, s0
   11fdc:	vmrs	APSR_nzcv, fpscr
   11fe0:	bne	11f88 <__snprintf_chk@plt+0x1168>
   11fe4:	mov	r0, fp
   11fe8:	add	sp, sp, #44	; 0x2c
   11fec:	vpop	{d8-d9}
   11ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ff4:	addeq	r0, r0, r0
   11ff8:	vcmpe.f64	d0, #0.0
   11ffc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12000:	vldr	d7, [pc, #296]	; 12130 <__snprintf_chk@plt+0x1310>
   12004:	vpush	{d8}
   12008:	vmrs	APSR_nzcv, fpscr
   1200c:	mov	r6, r0
   12010:	and	lr, r2, #1
   12014:	sub	sp, sp, #44	; 0x2c
   12018:	vnegmi.f64	d6, d0
   1201c:	vmovpl.f64	d6, d0
   12020:	add	r0, sp, #40	; 0x28
   12024:	mov	r7, #37	; 0x25
   12028:	mov	r5, r1
   1202c:	vcmpe.f64	d6, d7
   12030:	lsr	r1, r2, #1
   12034:	mov	sl, r3
   12038:	mov	r3, #45	; 0x2d
   1203c:	strb	r3, [r0, #-11]!
   12040:	strb	r7, [sp, #28]
   12044:	tst	r2, #16
   12048:	add	r4, r0, lr
   1204c:	and	r1, r1, #1
   12050:	lsr	r3, r2, #2
   12054:	mov	r7, #43	; 0x2b
   12058:	strb	r7, [r0, lr]
   1205c:	and	r3, r3, #1
   12060:	add	lr, r4, r1
   12064:	moveq	ip, #103	; 0x67
   12068:	movne	ip, #71	; 0x47
   1206c:	mov	r0, #32
   12070:	vmrs	APSR_nzcv, fpscr
   12074:	lsr	r2, r2, #3
   12078:	strb	r0, [r4, r1]
   1207c:	and	r2, r2, #1
   12080:	add	r0, lr, r3
   12084:	mov	r4, #48	; 0x30
   12088:	strb	r4, [lr, r3]
   1208c:	add	r3, r0, r2
   12090:	ldr	lr, [pc, #160]	; 12138 <__snprintf_chk@plt+0x1318>
   12094:	mov	r1, #0
   12098:	str	lr, [r0, r2]
   1209c:	vmov.f64	d8, d0
   120a0:	movmi	r4, #1
   120a4:	movpl	r4, #15
   120a8:	add	r9, sp, #28
   120ac:	strb	ip, [r3, #4]
   120b0:	mvn	r8, #0
   120b4:	strb	r1, [r3, #5]
   120b8:	mov	r7, #1
   120bc:	b	120c4 <__snprintf_chk@plt+0x12a4>
   120c0:	add	r4, r4, #1
   120c4:	mov	r2, r7
   120c8:	mov	r3, r8
   120cc:	vstr	d8, [sp, #16]
   120d0:	str	r4, [sp, #8]
   120d4:	stm	sp, {r9, sl}
   120d8:	mov	r1, r5
   120dc:	mov	r0, r6
   120e0:	bl	10e20 <__snprintf_chk@plt>
   120e4:	cmp	r4, #16
   120e8:	movle	r2, #0
   120ec:	movgt	r2, #1
   120f0:	orrs	r3, r2, r0, lsr #31
   120f4:	mov	fp, r0
   120f8:	bne	1211c <__snprintf_chk@plt+0x12fc>
   120fc:	cmp	r5, r0
   12100:	bls	120c0 <__snprintf_chk@plt+0x12a0>
   12104:	mov	r1, #0
   12108:	mov	r0, r6
   1210c:	bl	10c4c <strtold@plt>
   12110:	vcmp.f64	d8, d0
   12114:	vmrs	APSR_nzcv, fpscr
   12118:	bne	120c0 <__snprintf_chk@plt+0x12a0>
   1211c:	mov	r0, fp
   12120:	add	sp, sp, #44	; 0x2c
   12124:	vpop	{d8}
   12128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1212c:	nop			; (mov r0, r0)
   12130:	andeq	r0, r0, r0
   12134:	andseq	r0, r0, r0
   12138:	stcmi	14, cr2, [sl], #-168	; 0xffffff58
   1213c:	push	{r4, r5, r6, r7, r8, lr}
   12140:	cmp	r0, #2
   12144:	ldr	r4, [pc, #148]	; 121e0 <__snprintf_chk@plt+0x13c0>
   12148:	mov	r5, #0
   1214c:	sub	sp, sp, #16
   12150:	ldr	r6, [r4]
   12154:	str	r5, [r4]
   12158:	beq	12174 <__snprintf_chk@plt+0x1354>
   1215c:	ldr	r3, [pc, #128]	; 121e4 <__snprintf_chk@plt+0x13c4>
   12160:	mov	r2, #0
   12164:	str	r6, [r4]
   12168:	str	r2, [r3]
   1216c:	add	sp, sp, #16
   12170:	pop	{r4, r5, r6, r7, r8, pc}
   12174:	mov	r8, r3
   12178:	mov	r7, r2
   1217c:	str	r5, [sp]
   12180:	ldr	r3, [pc, #96]	; 121e8 <__snprintf_chk@plt+0x13c8>
   12184:	ldr	r2, [pc, #96]	; 121ec <__snprintf_chk@plt+0x13cc>
   12188:	bl	10d30 <getopt_long@plt>
   1218c:	cmn	r0, #1
   12190:	beq	1215c <__snprintf_chk@plt+0x133c>
   12194:	cmp	r0, #104	; 0x68
   12198:	beq	121d0 <__snprintf_chk@plt+0x13b0>
   1219c:	cmp	r0, #118	; 0x76
   121a0:	bne	1215c <__snprintf_chk@plt+0x133c>
   121a4:	ldr	r3, [pc, #68]	; 121f0 <__snprintf_chk@plt+0x13d0>
   121a8:	add	ip, sp, #48	; 0x30
   121ac:	mov	r2, r8
   121b0:	ldr	r0, [r3]
   121b4:	mov	r1, r7
   121b8:	str	ip, [sp]
   121bc:	ldr	r3, [sp, #40]	; 0x28
   121c0:	str	ip, [sp, #12]
   121c4:	bl	166f0 <__snprintf_chk@plt+0x58d0>
   121c8:	mov	r0, r5
   121cc:	bl	10d48 <exit@plt>
   121d0:	mov	r0, r5
   121d4:	ldr	r3, [sp, #44]	; 0x2c
   121d8:	blx	r3
   121dc:	b	1215c <__snprintf_chk@plt+0x133c>
   121e0:	andeq	r9, r2, r8, lsr r1
   121e4:	andeq	r9, r2, r8, lsr #2
   121e8:	andeq	r8, r1, r0, asr #8
   121ec:	andeq	r8, r1, r0, ror r4
   121f0:	andeq	r9, r2, r4, lsr r1
   121f4:	push	{r4, r5, r6, r7, r8, lr}
   121f8:	sub	sp, sp, #16
   121fc:	ldr	r5, [pc, #176]	; 122b4 <__snprintf_chk@plt+0x1494>
   12200:	ldrb	r8, [sp, #44]	; 0x2c
   12204:	ldr	r4, [pc, #172]	; 122b8 <__snprintf_chk@plt+0x1498>
   12208:	ldr	lr, [pc, #172]	; 122bc <__snprintf_chk@plt+0x149c>
   1220c:	cmp	r8, #0
   12210:	mov	r6, r2
   12214:	movne	r2, r5
   12218:	mov	r5, #0
   1221c:	mov	ip, #1
   12220:	moveq	r2, lr
   12224:	mov	r7, r3
   12228:	str	r5, [sp]
   1222c:	ldr	r3, [pc, #140]	; 122c0 <__snprintf_chk@plt+0x14a0>
   12230:	ldr	r8, [r4]
   12234:	str	ip, [r4]
   12238:	bl	10d30 <getopt_long@plt>
   1223c:	cmn	r0, #1
   12240:	beq	12290 <__snprintf_chk@plt+0x1470>
   12244:	cmp	r0, #104	; 0x68
   12248:	beq	1229c <__snprintf_chk@plt+0x147c>
   1224c:	cmp	r0, #118	; 0x76
   12250:	bne	12280 <__snprintf_chk@plt+0x1460>
   12254:	ldr	r3, [pc, #104]	; 122c4 <__snprintf_chk@plt+0x14a4>
   12258:	add	ip, sp, #52	; 0x34
   1225c:	mov	r2, r7
   12260:	ldr	r0, [r3]
   12264:	mov	r1, r6
   12268:	str	ip, [sp]
   1226c:	ldr	r3, [sp, #40]	; 0x28
   12270:	str	ip, [sp, #12]
   12274:	bl	166f0 <__snprintf_chk@plt+0x58d0>
   12278:	mov	r0, r5
   1227c:	bl	10d48 <exit@plt>
   12280:	ldr	r3, [pc, #64]	; 122c8 <__snprintf_chk@plt+0x14a8>
   12284:	ldr	r0, [r3]
   12288:	ldr	r3, [sp, #48]	; 0x30
   1228c:	blx	r3
   12290:	str	r8, [r4]
   12294:	add	sp, sp, #16
   12298:	pop	{r4, r5, r6, r7, r8, pc}
   1229c:	mov	r0, r5
   122a0:	ldr	r3, [sp, #48]	; 0x30
   122a4:	blx	r3
   122a8:	str	r8, [r4]
   122ac:	add	sp, sp, #16
   122b0:	pop	{r4, r5, r6, r7, r8, pc}
   122b4:	andeq	r7, r1, ip, lsl #29
   122b8:	andeq	r9, r2, r8, lsr r1
   122bc:	andeq	r8, r1, r0, ror r4
   122c0:	andeq	r8, r1, r0, asr #8
   122c4:	andeq	r9, r2, r4, lsr r1
   122c8:	ldrdeq	r9, [r2], -ip
   122cc:	push	{r4, r5, r6, lr}
   122d0:	subs	r4, r0, #0
   122d4:	beq	12348 <__snprintf_chk@plt+0x1528>
   122d8:	mov	r1, #47	; 0x2f
   122dc:	bl	10de4 <strrchr@plt>
   122e0:	subs	r5, r0, #0
   122e4:	beq	12334 <__snprintf_chk@plt+0x1514>
   122e8:	add	r6, r5, #1
   122ec:	sub	r3, r6, r4
   122f0:	cmp	r3, #6
   122f4:	ble	12334 <__snprintf_chk@plt+0x1514>
   122f8:	mov	r2, #7
   122fc:	ldr	r1, [pc, #96]	; 12364 <__snprintf_chk@plt+0x1544>
   12300:	sub	r0, r5, #6
   12304:	bl	10e08 <strncmp@plt>
   12308:	cmp	r0, #0
   1230c:	bne	12334 <__snprintf_chk@plt+0x1514>
   12310:	mov	r2, #3
   12314:	ldr	r1, [pc, #76]	; 12368 <__snprintf_chk@plt+0x1548>
   12318:	mov	r0, r6
   1231c:	bl	10e08 <strncmp@plt>
   12320:	cmp	r0, #0
   12324:	movne	r4, r6
   12328:	ldreq	r3, [pc, #60]	; 1236c <__snprintf_chk@plt+0x154c>
   1232c:	addeq	r4, r5, #4
   12330:	streq	r4, [r3]
   12334:	ldr	r2, [pc, #52]	; 12370 <__snprintf_chk@plt+0x1550>
   12338:	ldr	r3, [pc, #52]	; 12374 <__snprintf_chk@plt+0x1554>
   1233c:	str	r4, [r2]
   12340:	str	r4, [r3]
   12344:	pop	{r4, r5, r6, pc}
   12348:	ldr	r3, [pc, #40]	; 12378 <__snprintf_chk@plt+0x1558>
   1234c:	mov	r2, #55	; 0x37
   12350:	mov	r1, #1
   12354:	ldr	r3, [r3]
   12358:	ldr	r0, [pc, #28]	; 1237c <__snprintf_chk@plt+0x155c>
   1235c:	bl	10ca0 <fwrite@plt>
   12360:	bl	10e14 <abort@plt>
   12364:			; <UNDEFINED> instruction: 0x000184bc
   12368:	andeq	r8, r1, r4, asr #9
   1236c:	andeq	r9, r2, r0, lsr #2
   12370:	andeq	r9, r2, r8, asr #2
   12374:	andeq	r9, r2, r4, lsr #2
   12378:	andeq	r9, r2, r0, lsr r1
   1237c:	andeq	r8, r1, r4, lsl #9
   12380:	push	{r4, r5, r6, lr}
   12384:	mov	r4, r0
   12388:	mov	r5, r1
   1238c:	bl	17720 <__snprintf_chk@plt+0x6900>
   12390:	ldrb	r3, [r0]
   12394:	bic	r3, r3, #32
   12398:	cmp	r3, #85	; 0x55
   1239c:	bne	123fc <__snprintf_chk@plt+0x15dc>
   123a0:	ldrb	r3, [r0, #1]
   123a4:	bic	r3, r3, #32
   123a8:	cmp	r3, #84	; 0x54
   123ac:	bne	12438 <__snprintf_chk@plt+0x1618>
   123b0:	ldrb	r3, [r0, #2]
   123b4:	bic	r3, r3, #32
   123b8:	cmp	r3, #70	; 0x46
   123bc:	bne	12438 <__snprintf_chk@plt+0x1618>
   123c0:	ldrb	r3, [r0, #3]
   123c4:	cmp	r3, #45	; 0x2d
   123c8:	bne	12438 <__snprintf_chk@plt+0x1618>
   123cc:	ldrb	r3, [r0, #4]
   123d0:	cmp	r3, #56	; 0x38
   123d4:	bne	12438 <__snprintf_chk@plt+0x1618>
   123d8:	ldrb	r3, [r0, #5]
   123dc:	cmp	r3, #0
   123e0:	bne	12438 <__snprintf_chk@plt+0x1618>
   123e4:	ldrb	r2, [r4]
   123e8:	ldr	r3, [pc, #152]	; 12488 <__snprintf_chk@plt+0x1668>
   123ec:	ldr	r0, [pc, #152]	; 1248c <__snprintf_chk@plt+0x166c>
   123f0:	cmp	r2, #96	; 0x60
   123f4:	movne	r0, r3
   123f8:	pop	{r4, r5, r6, pc}
   123fc:	cmp	r3, #71	; 0x47
   12400:	bne	12438 <__snprintf_chk@plt+0x1618>
   12404:	ldrb	r3, [r0, #1]
   12408:	bic	r3, r3, #32
   1240c:	cmp	r3, #66	; 0x42
   12410:	bne	12438 <__snprintf_chk@plt+0x1618>
   12414:	ldrb	r3, [r0, #2]
   12418:	cmp	r3, #49	; 0x31
   1241c:	bne	12438 <__snprintf_chk@plt+0x1618>
   12420:	ldrb	r3, [r0, #3]
   12424:	cmp	r3, #56	; 0x38
   12428:	bne	12438 <__snprintf_chk@plt+0x1618>
   1242c:	ldrb	r3, [r0, #4]
   12430:	cmp	r3, #48	; 0x30
   12434:	beq	1244c <__snprintf_chk@plt+0x162c>
   12438:	ldr	r3, [pc, #80]	; 12490 <__snprintf_chk@plt+0x1670>
   1243c:	cmp	r5, #9
   12440:	ldr	r0, [pc, #76]	; 12494 <__snprintf_chk@plt+0x1674>
   12444:	movne	r0, r3
   12448:	pop	{r4, r5, r6, pc}
   1244c:	ldrb	r3, [r0, #5]
   12450:	cmp	r3, #51	; 0x33
   12454:	bne	12438 <__snprintf_chk@plt+0x1618>
   12458:	ldrb	r3, [r0, #6]
   1245c:	cmp	r3, #48	; 0x30
   12460:	bne	12438 <__snprintf_chk@plt+0x1618>
   12464:	ldrb	r3, [r0, #7]
   12468:	cmp	r3, #0
   1246c:	bne	12438 <__snprintf_chk@plt+0x1618>
   12470:	ldrb	r2, [r4]
   12474:	ldr	r3, [pc, #28]	; 12498 <__snprintf_chk@plt+0x1678>
   12478:	ldr	r0, [pc, #28]	; 1249c <__snprintf_chk@plt+0x167c>
   1247c:	cmp	r2, #96	; 0x60
   12480:	movne	r0, r3
   12484:	pop	{r4, r5, r6, pc}
   12488:	andeq	r8, r1, r0, lsr #10
   1248c:	andeq	r8, r1, ip, lsl r5
   12490:	andeq	r8, r1, r0, lsr r5
   12494:	andeq	r8, r1, ip, lsr #10
   12498:	andeq	r8, r1, r8, lsr #10
   1249c:	andeq	r8, r1, r4, lsr #10
   124a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124a4:	sub	sp, sp, #140	; 0x8c
   124a8:	mov	r9, r1
   124ac:	str	r3, [sp, #24]
   124b0:	mov	r3, #1
   124b4:	mov	sl, r0
   124b8:	str	r2, [sp, #44]	; 0x2c
   124bc:	str	r3, [sp, #28]
   124c0:	bl	10cb8 <__ctype_get_mb_cur_max@plt>
   124c4:	ldr	r3, [sp, #180]	; 0xb4
   124c8:	mov	fp, r9
   124cc:	mov	r9, sl
   124d0:	lsr	r3, r3, #1
   124d4:	and	r3, r3, #1
   124d8:	str	r3, [sp, #40]	; 0x28
   124dc:	ldr	r3, [sp, #180]	; 0xb4
   124e0:	mov	r2, #0
   124e4:	and	r3, r3, #4
   124e8:	str	r3, [sp, #100]	; 0x64
   124ec:	ldr	r3, [sp, #180]	; 0xb4
   124f0:	str	r2, [sp, #76]	; 0x4c
   124f4:	and	r3, r3, #1
   124f8:	str	r3, [sp, #96]	; 0x60
   124fc:	str	r2, [sp, #36]	; 0x24
   12500:	str	r2, [sp, #56]	; 0x38
   12504:	str	r2, [sp, #68]	; 0x44
   12508:	str	r2, [sp, #72]	; 0x48
   1250c:	str	r2, [sp, #84]	; 0x54
   12510:	str	r0, [sp, #80]	; 0x50
   12514:	ldr	r3, [sp, #176]	; 0xb0
   12518:	cmp	r3, #10
   1251c:	ldrls	pc, [pc, r3, lsl #2]
   12520:	b	136f8 <__snprintf_chk@plt+0x28d8>
   12524:	andeq	r2, r1, r0, asr r5
   12528:	andeq	r2, r1, r0, ror r8
   1252c:	andeq	r2, r1, r8, asr #19
   12530:	andeq	r2, r1, r4, lsr #17
   12534:	andeq	r2, r1, ip, lsl sl
   12538:	strdeq	r2, [r1], -ip
   1253c:	andeq	r2, r1, r4, asr #17
   12540:	andeq	r2, r1, r8, ror #17
   12544:	andeq	r2, r1, r0, lsl r9
   12548:	andeq	r2, r1, r0, lsl r9
   1254c:	andeq	r2, r1, r0, lsl r9
   12550:	mov	r3, #0
   12554:	ldr	r1, [sp, #56]	; 0x38
   12558:	ldr	r2, [sp, #176]	; 0xb0
   1255c:	ldr	lr, [sp, #176]	; 0xb0
   12560:	mov	r8, r3
   12564:	mov	ip, r3
   12568:	str	r3, [sp, #40]	; 0x28
   1256c:	mov	r3, r1
   12570:	cmp	r2, #2
   12574:	moveq	r3, #0
   12578:	andne	r3, r3, #1
   1257c:	mov	r0, r3
   12580:	str	r3, [sp, #92]	; 0x5c
   12584:	ldr	r3, [sp, #68]	; 0x44
   12588:	sub	lr, lr, #2
   1258c:	adds	r2, r3, #0
   12590:	movne	r2, #1
   12594:	and	r3, r1, ip
   12598:	and	r3, r2, r3
   1259c:	clz	lr, lr
   125a0:	str	r3, [sp, #88]	; 0x58
   125a4:	lsr	lr, lr, #5
   125a8:	mov	r3, ip
   125ac:	and	r3, r3, lr
   125b0:	mov	sl, #0
   125b4:	and	r0, r2, r0
   125b8:	str	r3, [sp, #64]	; 0x40
   125bc:	eor	r3, r1, #1
   125c0:	str	lr, [sp, #52]	; 0x34
   125c4:	str	r0, [sp, #48]	; 0x30
   125c8:	str	r3, [sp, #60]	; 0x3c
   125cc:	ldr	r3, [sp, #24]
   125d0:	cmn	r3, #1
   125d4:	beq	12b04 <__snprintf_chk@plt+0x1ce4>
   125d8:	subs	r7, r3, sl
   125dc:	movne	r7, #1
   125e0:	cmp	r7, #0
   125e4:	beq	12b1c <__snprintf_chk@plt+0x1cfc>
   125e8:	ldr	r3, [sp, #48]	; 0x30
   125ec:	cmp	r3, #0
   125f0:	beq	12e88 <__snprintf_chk@plt+0x2068>
   125f4:	ldr	r2, [sp, #68]	; 0x44
   125f8:	ldr	r1, [sp, #24]
   125fc:	cmp	r2, #1
   12600:	mov	r3, r2
   12604:	movls	r3, #0
   12608:	movhi	r3, #1
   1260c:	cmn	r1, #1
   12610:	movne	r3, #0
   12614:	cmp	r3, #0
   12618:	add	r4, sl, r2
   1261c:	beq	1262c <__snprintf_chk@plt+0x180c>
   12620:	ldr	r0, [sp, #44]	; 0x2c
   12624:	bl	10d54 <strlen@plt>
   12628:	str	r0, [sp, #24]
   1262c:	ldr	r3, [sp, #24]
   12630:	cmp	r3, r4
   12634:	ldr	r3, [sp, #44]	; 0x2c
   12638:	add	r5, r3, sl
   1263c:	bcc	12e90 <__snprintf_chk@plt+0x2070>
   12640:	mov	r0, r5
   12644:	ldr	r2, [sp, #68]	; 0x44
   12648:	ldr	r1, [sp, #72]	; 0x48
   1264c:	bl	10c58 <memcmp@plt>
   12650:	cmp	r0, #0
   12654:	bne	12e90 <__snprintf_chk@plt+0x2070>
   12658:	ldr	r3, [sp, #40]	; 0x28
   1265c:	cmp	r3, #0
   12660:	bne	1384c <__snprintf_chk@plt+0x2a2c>
   12664:	ldrb	r4, [r5]
   12668:	cmp	r4, #126	; 0x7e
   1266c:	ldrls	pc, [pc, r4, lsl #2]
   12670:	b	13788 <__snprintf_chk@plt+0x2968>
   12674:	andeq	r2, r1, r8, asr #26
   12678:	andeq	r3, r1, r8, lsl #15
   1267c:	andeq	r3, r1, r8, lsl #15
   12680:	andeq	r3, r1, r8, lsl #15
   12684:	andeq	r3, r1, r8, lsl #15
   12688:	andeq	r3, r1, r8, lsl #15
   1268c:	andeq	r3, r1, r8, lsl #15
   12690:	andeq	r2, r1, r4, lsr sp
   12694:	andeq	r2, r1, r0, lsr #26
   12698:	strdeq	r2, [r1], -ip
   1269c:	ldrdeq	r2, [r1], -ip
   126a0:	andeq	r2, r1, ip, lsl #26
   126a4:	andeq	r2, r1, r4, asr #24
   126a8:	andeq	r2, r1, r8, ror lr
   126ac:	andeq	r3, r1, r8, lsl #15
   126b0:	andeq	r3, r1, r8, lsl #15
   126b4:	andeq	r3, r1, r8, lsl #15
   126b8:	andeq	r3, r1, r8, lsl #15
   126bc:	andeq	r3, r1, r8, lsl #15
   126c0:	andeq	r3, r1, r8, lsl #15
   126c4:	andeq	r3, r1, r8, lsl #15
   126c8:	andeq	r3, r1, r8, lsl #15
   126cc:	andeq	r3, r1, r8, lsl #15
   126d0:	andeq	r3, r1, r8, lsl #15
   126d4:	andeq	r3, r1, r8, lsl #15
   126d8:	andeq	r3, r1, r8, lsl #15
   126dc:	andeq	r3, r1, r8, lsl #15
   126e0:	andeq	r3, r1, r8, lsl #15
   126e4:	andeq	r3, r1, r8, lsl #15
   126e8:	andeq	r3, r1, r8, lsl #15
   126ec:	andeq	r3, r1, r8, lsl #15
   126f0:	andeq	r3, r1, r8, lsl #15
   126f4:	andeq	r2, r1, r8, ror #28
   126f8:	andeq	r2, r1, r8, asr #28
   126fc:	andeq	r2, r1, r8, asr #28
   12700:	andeq	r2, r1, r8, lsr #28
   12704:	andeq	r2, r1, r8, asr #28
   12708:	andeq	r2, r1, r4, lsr ip
   1270c:	andeq	r2, r1, r8, asr #28
   12710:	andeq	r2, r1, r0, lsl ip
   12714:	andeq	r2, r1, r8, asr #28
   12718:	andeq	r2, r1, r8, asr #28
   1271c:	andeq	r2, r1, r8, asr #28
   12720:	andeq	r2, r1, r4, lsr ip
   12724:	andeq	r2, r1, r4, lsr ip
   12728:	andeq	r2, r1, r4, lsr ip
   1272c:	andeq	r2, r1, r4, lsr ip
   12730:	andeq	r2, r1, r4, lsr ip
   12734:	andeq	r2, r1, r4, lsr ip
   12738:	andeq	r2, r1, r4, lsr ip
   1273c:	andeq	r2, r1, r4, lsr ip
   12740:	andeq	r2, r1, r4, lsr ip
   12744:	andeq	r2, r1, r4, lsr ip
   12748:	andeq	r2, r1, r4, lsr ip
   1274c:	andeq	r2, r1, r4, lsr ip
   12750:	andeq	r2, r1, r4, lsr ip
   12754:	andeq	r2, r1, r4, lsr ip
   12758:	andeq	r2, r1, r4, lsr ip
   1275c:	andeq	r2, r1, r4, lsr ip
   12760:	andeq	r2, r1, r8, asr #28
   12764:	andeq	r2, r1, r8, asr #28
   12768:	andeq	r2, r1, r8, asr #28
   1276c:	andeq	r2, r1, r8, asr #28
   12770:	andeq	r2, r1, r0, asr #23
   12774:	andeq	r3, r1, r8, lsl #15
   12778:	andeq	r2, r1, r4, lsr ip
   1277c:	andeq	r2, r1, r4, lsr ip
   12780:	andeq	r2, r1, r4, lsr ip
   12784:	andeq	r2, r1, r4, lsr ip
   12788:	andeq	r2, r1, r4, lsr ip
   1278c:	andeq	r2, r1, r4, lsr ip
   12790:	andeq	r2, r1, r4, lsr ip
   12794:	andeq	r2, r1, r4, lsr ip
   12798:	andeq	r2, r1, r4, lsr ip
   1279c:	andeq	r2, r1, r4, lsr ip
   127a0:	andeq	r2, r1, r4, lsr ip
   127a4:	andeq	r2, r1, r4, lsr ip
   127a8:	andeq	r2, r1, r4, lsr ip
   127ac:	andeq	r2, r1, r4, lsr ip
   127b0:	andeq	r2, r1, r4, lsr ip
   127b4:	andeq	r2, r1, r4, lsr ip
   127b8:	andeq	r2, r1, r4, lsr ip
   127bc:	andeq	r2, r1, r4, lsr ip
   127c0:	andeq	r2, r1, r4, lsr ip
   127c4:	andeq	r2, r1, r4, lsr ip
   127c8:	andeq	r2, r1, r4, lsr ip
   127cc:	andeq	r2, r1, r4, lsr ip
   127d0:	andeq	r2, r1, r4, lsr ip
   127d4:	andeq	r2, r1, r4, lsr ip
   127d8:	andeq	r2, r1, r4, lsr ip
   127dc:	andeq	r2, r1, r4, lsr ip
   127e0:	andeq	r2, r1, r8, asr #28
   127e4:	andeq	r2, r1, ip, lsl #23
   127e8:	andeq	r2, r1, r4, lsr ip
   127ec:	andeq	r2, r1, r8, asr #28
   127f0:	andeq	r2, r1, r4, lsr ip
   127f4:	andeq	r2, r1, r8, asr #28
   127f8:	andeq	r2, r1, r4, lsr ip
   127fc:	andeq	r2, r1, r4, lsr ip
   12800:	andeq	r2, r1, r4, lsr ip
   12804:	andeq	r2, r1, r4, lsr ip
   12808:	andeq	r2, r1, r4, lsr ip
   1280c:	andeq	r2, r1, r4, lsr ip
   12810:	andeq	r2, r1, r4, lsr ip
   12814:	andeq	r2, r1, r4, lsr ip
   12818:	andeq	r2, r1, r4, lsr ip
   1281c:	andeq	r2, r1, r4, lsr ip
   12820:	andeq	r2, r1, r4, lsr ip
   12824:	andeq	r2, r1, r4, lsr ip
   12828:	andeq	r2, r1, r4, lsr ip
   1282c:	andeq	r2, r1, r4, lsr ip
   12830:	andeq	r2, r1, r4, lsr ip
   12834:	andeq	r2, r1, r4, lsr ip
   12838:	andeq	r2, r1, r4, lsr ip
   1283c:	andeq	r2, r1, r4, lsr ip
   12840:	andeq	r2, r1, r4, lsr ip
   12844:	andeq	r2, r1, r4, lsr ip
   12848:	andeq	r2, r1, r4, lsr ip
   1284c:	andeq	r2, r1, r4, lsr ip
   12850:	andeq	r2, r1, r4, lsr ip
   12854:	andeq	r2, r1, r4, lsr ip
   12858:	andeq	r2, r1, r4, lsr ip
   1285c:	andeq	r2, r1, r4, lsr ip
   12860:	andeq	r2, r1, r4, asr #20
   12864:	andeq	r2, r1, r8, asr #28
   12868:	andeq	r2, r1, r4, asr #20
   1286c:	andeq	r2, r1, r8, lsr #28
   12870:	mov	r3, #1
   12874:	str	r3, [sp, #40]	; 0x28
   12878:	str	r3, [sp, #68]	; 0x44
   1287c:	mov	r8, #0
   12880:	ldr	r3, [pc, #4056]	; 13860 <__snprintf_chk@plt+0x2a40>
   12884:	str	r3, [sp, #72]	; 0x48
   12888:	mov	r3, #2
   1288c:	str	r3, [sp, #176]	; 0xb0
   12890:	ldr	r1, [sp, #56]	; 0x38
   12894:	mov	r2, r3
   12898:	ldr	ip, [sp, #40]	; 0x28
   1289c:	mov	lr, r3
   128a0:	b	1256c <__snprintf_chk@plt+0x174c>
   128a4:	mov	r3, #1
   128a8:	str	r3, [sp, #56]	; 0x38
   128ac:	str	r3, [sp, #68]	; 0x44
   128b0:	str	r3, [sp, #40]	; 0x28
   128b4:	ldr	r3, [pc, #4004]	; 13860 <__snprintf_chk@plt+0x2a40>
   128b8:	mov	r8, #0
   128bc:	str	r3, [sp, #72]	; 0x48
   128c0:	b	12888 <__snprintf_chk@plt+0x1a68>
   128c4:	mov	r3, #1
   128c8:	str	r3, [sp, #56]	; 0x38
   128cc:	str	r3, [sp, #68]	; 0x44
   128d0:	str	r3, [sp, #40]	; 0x28
   128d4:	ldr	r3, [pc, #3976]	; 13864 <__snprintf_chk@plt+0x2a44>
   128d8:	mov	r8, #0
   128dc:	str	r3, [sp, #72]	; 0x48
   128e0:	mov	r3, #5
   128e4:	b	1288c <__snprintf_chk@plt+0x1a6c>
   128e8:	mov	r3, #0
   128ec:	str	r3, [sp, #40]	; 0x28
   128f0:	mov	r3, #1
   128f4:	str	r3, [sp, #56]	; 0x38
   128f8:	mov	r8, #0
   128fc:	mov	r1, r3
   12900:	ldr	r2, [sp, #176]	; 0xb0
   12904:	ldr	ip, [sp, #40]	; 0x28
   12908:	ldr	lr, [sp, #176]	; 0xb0
   1290c:	b	1256c <__snprintf_chk@plt+0x174c>
   12910:	ldr	r3, [sp, #176]	; 0xb0
   12914:	cmp	r3, #10
   12918:	beq	1295c <__snprintf_chk@plt+0x1b3c>
   1291c:	mov	r2, #5
   12920:	ldr	r1, [pc, #3904]	; 13868 <__snprintf_chk@plt+0x2a48>
   12924:	mov	r0, #0
   12928:	bl	10c70 <dcgettext@plt>
   1292c:	ldr	r2, [pc, #3892]	; 13868 <__snprintf_chk@plt+0x2a48>
   12930:	cmp	r0, r2
   12934:	str	r0, [sp, #188]	; 0xbc
   12938:	beq	139f4 <__snprintf_chk@plt+0x2bd4>
   1293c:	mov	r2, #5
   12940:	ldr	r1, [pc, #3864]	; 13860 <__snprintf_chk@plt+0x2a40>
   12944:	mov	r0, #0
   12948:	bl	10c70 <dcgettext@plt>
   1294c:	ldr	r2, [pc, #3852]	; 13860 <__snprintf_chk@plt+0x2a40>
   12950:	cmp	r0, r2
   12954:	str	r0, [sp, #192]	; 0xc0
   12958:	beq	139e4 <__snprintf_chk@plt+0x2bc4>
   1295c:	ldr	r8, [sp, #40]	; 0x28
   12960:	cmp	r8, #0
   12964:	movne	r8, #0
   12968:	bne	12998 <__snprintf_chk@plt+0x1b78>
   1296c:	ldr	r3, [sp, #188]	; 0xbc
   12970:	ldrb	r3, [r3]
   12974:	cmp	r3, #0
   12978:	beq	12998 <__snprintf_chk@plt+0x1b78>
   1297c:	ldr	r2, [sp, #188]	; 0xbc
   12980:	cmp	fp, r8
   12984:	strbhi	r3, [r9, r8]
   12988:	ldrb	r3, [r2, #1]!
   1298c:	add	r8, r8, #1
   12990:	cmp	r3, #0
   12994:	bne	12980 <__snprintf_chk@plt+0x1b60>
   12998:	ldr	r0, [sp, #192]	; 0xc0
   1299c:	bl	10d54 <strlen@plt>
   129a0:	ldr	r3, [sp, #192]	; 0xc0
   129a4:	ldr	r2, [sp, #176]	; 0xb0
   129a8:	str	r3, [sp, #72]	; 0x48
   129ac:	mov	r3, #1
   129b0:	str	r3, [sp, #56]	; 0x38
   129b4:	mov	r1, r3
   129b8:	ldr	ip, [sp, #40]	; 0x28
   129bc:	ldr	lr, [sp, #176]	; 0xb0
   129c0:	str	r0, [sp, #68]	; 0x44
   129c4:	b	1256c <__snprintf_chk@plt+0x174c>
   129c8:	ldr	r3, [sp, #40]	; 0x28
   129cc:	cmp	r3, #0
   129d0:	beq	13678 <__snprintf_chk@plt+0x2858>
   129d4:	mov	r3, #1
   129d8:	str	r3, [sp, #68]	; 0x44
   129dc:	ldr	r3, [pc, #3708]	; 13860 <__snprintf_chk@plt+0x2a40>
   129e0:	str	r3, [sp, #72]	; 0x48
   129e4:	mov	r8, #0
   129e8:	ldr	r1, [sp, #56]	; 0x38
   129ec:	ldr	r2, [sp, #176]	; 0xb0
   129f0:	ldr	ip, [sp, #40]	; 0x28
   129f4:	ldr	lr, [sp, #176]	; 0xb0
   129f8:	b	1256c <__snprintf_chk@plt+0x174c>
   129fc:	ldr	r3, [sp, #40]	; 0x28
   12a00:	cmp	r3, #0
   12a04:	beq	136fc <__snprintf_chk@plt+0x28dc>
   12a08:	str	r3, [sp, #56]	; 0x38
   12a0c:	mov	r3, #1
   12a10:	str	r3, [sp, #68]	; 0x44
   12a14:	ldr	r3, [pc, #3656]	; 13864 <__snprintf_chk@plt+0x2a44>
   12a18:	b	129e0 <__snprintf_chk@plt+0x1bc0>
   12a1c:	ldr	r3, [sp, #40]	; 0x28
   12a20:	cmp	r3, #0
   12a24:	mov	r3, #1
   12a28:	streq	r3, [sp, #56]	; 0x38
   12a2c:	beq	13678 <__snprintf_chk@plt+0x2858>
   12a30:	str	r3, [sp, #68]	; 0x44
   12a34:	ldr	r3, [pc, #3620]	; 13860 <__snprintf_chk@plt+0x2a40>
   12a38:	mov	r8, #0
   12a3c:	str	r3, [sp, #72]	; 0x48
   12a40:	b	12888 <__snprintf_chk@plt+0x1a68>
   12a44:	ldr	r3, [sp, #24]
   12a48:	ldr	r6, [sp, #48]	; 0x30
   12a4c:	cmn	r3, #1
   12a50:	beq	130ac <__snprintf_chk@plt+0x228c>
   12a54:	subs	r3, r3, #1
   12a58:	movne	r3, #1
   12a5c:	cmp	r3, #0
   12a60:	beq	12e2c <__snprintf_chk@plt+0x200c>
   12a64:	ldr	r1, [sp, #52]	; 0x34
   12a68:	mov	r7, r3
   12a6c:	mov	r3, #0
   12a70:	str	r3, [sp, #32]
   12a74:	ldr	r3, [sp, #60]	; 0x3c
   12a78:	orr	r2, r1, r3
   12a7c:	ldr	r3, [sp, #40]	; 0x28
   12a80:	eor	r2, r2, #1
   12a84:	orr	r2, r3, r2
   12a88:	tst	r2, #255	; 0xff
   12a8c:	bne	133b0 <__snprintf_chk@plt+0x2590>
   12a90:	cmp	r6, #0
   12a94:	bne	12c70 <__snprintf_chk@plt+0x1e50>
   12a98:	ldr	r3, [sp, #36]	; 0x24
   12a9c:	add	sl, sl, #1
   12aa0:	and	r3, r3, r7
   12aa4:	uxtb	r6, r3
   12aa8:	cmp	r6, #0
   12aac:	beq	12ad8 <__snprintf_chk@plt+0x1cb8>
   12ab0:	cmp	fp, r8
   12ab4:	movhi	r3, #39	; 0x27
   12ab8:	strbhi	r3, [r9, r8]
   12abc:	add	r3, r8, #1
   12ac0:	cmp	fp, r3
   12ac4:	movhi	r2, #39	; 0x27
   12ac8:	add	r8, r8, #2
   12acc:	strbhi	r2, [r9, r3]
   12ad0:	mov	r3, #0
   12ad4:	str	r3, [sp, #36]	; 0x24
   12ad8:	ldr	r2, [sp, #32]
   12adc:	cmp	r8, fp
   12ae0:	ldr	r3, [sp, #28]
   12ae4:	strbcc	r4, [r9, r8]
   12ae8:	cmp	r2, #0
   12aec:	moveq	r3, #0
   12af0:	str	r3, [sp, #28]
   12af4:	ldr	r3, [sp, #24]
   12af8:	add	r8, r8, #1
   12afc:	cmn	r3, #1
   12b00:	bne	125d8 <__snprintf_chk@plt+0x17b8>
   12b04:	ldr	r3, [sp, #44]	; 0x2c
   12b08:	ldrb	r3, [r3, sl]
   12b0c:	adds	r7, r3, #0
   12b10:	movne	r7, #1
   12b14:	cmp	r7, #0
   12b18:	bne	125e8 <__snprintf_chk@plt+0x17c8>
   12b1c:	ldr	r3, [sp, #64]	; 0x40
   12b20:	cmp	r8, #0
   12b24:	movne	r3, #0
   12b28:	andeq	r3, r3, #1
   12b2c:	cmp	r3, #0
   12b30:	str	r3, [sp, #64]	; 0x40
   12b34:	bne	135d8 <__snprintf_chk@plt+0x27b8>
   12b38:	ldr	r3, [sp, #40]	; 0x28
   12b3c:	ldr	r2, [sp, #52]	; 0x34
   12b40:	eor	r3, r3, #1
   12b44:	ands	r2, r2, r3
   12b48:	beq	13a04 <__snprintf_chk@plt+0x2be4>
   12b4c:	ldr	r3, [sp, #76]	; 0x4c
   12b50:	cmp	r3, #0
   12b54:	beq	139d4 <__snprintf_chk@plt+0x2bb4>
   12b58:	ldr	r3, [sp, #28]
   12b5c:	cmp	r3, #0
   12b60:	bne	13990 <__snprintf_chk@plt+0x2b70>
   12b64:	ldr	r2, [sp, #84]	; 0x54
   12b68:	clz	r3, fp
   12b6c:	cmp	r2, #0
   12b70:	lsr	r3, r3, #5
   12b74:	moveq	r3, #0
   12b78:	cmp	r3, #0
   12b7c:	beq	13930 <__snprintf_chk@plt+0x2b10>
   12b80:	mov	fp, r2
   12b84:	str	r3, [sp, #76]	; 0x4c
   12b88:	b	12514 <__snprintf_chk@plt+0x16f4>
   12b8c:	ldr	r3, [sp, #176]	; 0xb0
   12b90:	ldr	r6, [sp, #48]	; 0x30
   12b94:	cmp	r3, #2
   12b98:	beq	130d0 <__snprintf_chk@plt+0x22b0>
   12b9c:	ldr	r3, [sp, #88]	; 0x58
   12ba0:	cmp	r3, #0
   12ba4:	beq	13654 <__snprintf_chk@plt+0x2834>
   12ba8:	mov	r3, #0
   12bac:	add	sl, sl, #1
   12bb0:	ldr	r6, [sp, #36]	; 0x24
   12bb4:	str	r3, [sp, #32]
   12bb8:	mov	r4, #92	; 0x5c
   12bbc:	b	12aa8 <__snprintf_chk@plt+0x1c88>
   12bc0:	ldr	r3, [sp, #176]	; 0xb0
   12bc4:	ldr	r6, [sp, #48]	; 0x30
   12bc8:	cmp	r3, #2
   12bcc:	beq	13100 <__snprintf_chk@plt+0x22e0>
   12bd0:	cmp	r3, #5
   12bd4:	bne	13664 <__snprintf_chk@plt+0x2844>
   12bd8:	ldr	r3, [sp, #100]	; 0x64
   12bdc:	cmp	r3, #0
   12be0:	beq	136c8 <__snprintf_chk@plt+0x28a8>
   12be4:	ldr	r2, [sp, #24]
   12be8:	add	r3, sl, #2
   12bec:	cmp	r2, r3
   12bf0:	bls	12c00 <__snprintf_chk@plt+0x1de0>
   12bf4:	ldrb	r4, [r5, #1]
   12bf8:	cmp	r4, #63	; 0x3f
   12bfc:	beq	13870 <__snprintf_chk@plt+0x2a50>
   12c00:	mov	r1, #0
   12c04:	str	r1, [sp, #32]
   12c08:	mov	r4, #63	; 0x3f
   12c0c:	b	12a74 <__snprintf_chk@plt+0x1c54>
   12c10:	ldr	r3, [sp, #176]	; 0xb0
   12c14:	ldr	r6, [sp, #48]	; 0x30
   12c18:	cmp	r3, #2
   12c1c:	beq	1312c <__snprintf_chk@plt+0x230c>
   12c20:	str	r7, [sp, #32]
   12c24:	str	r7, [sp, #76]	; 0x4c
   12c28:	mov	r1, #0
   12c2c:	mov	r4, #39	; 0x27
   12c30:	b	12a74 <__snprintf_chk@plt+0x1c54>
   12c34:	ldr	r6, [sp, #48]	; 0x30
   12c38:	ldr	r1, [sp, #52]	; 0x34
   12c3c:	str	r7, [sp, #32]
   12c40:	b	12a74 <__snprintf_chk@plt+0x1c54>
   12c44:	ldr	r6, [sp, #48]	; 0x30
   12c48:	ldr	r1, [sp, #52]	; 0x34
   12c4c:	mov	r4, #12
   12c50:	mov	r3, #102	; 0x66
   12c54:	ldr	r2, [sp, #56]	; 0x38
   12c58:	cmp	r2, #0
   12c5c:	streq	r2, [sp, #32]
   12c60:	beq	12a74 <__snprintf_chk@plt+0x1c54>
   12c64:	mov	r4, r3
   12c68:	mov	r3, #0
   12c6c:	str	r3, [sp, #32]
   12c70:	ldr	r3, [sp, #40]	; 0x28
   12c74:	cmp	r3, #0
   12c78:	bne	133e8 <__snprintf_chk@plt+0x25c8>
   12c7c:	ldr	r3, [sp, #36]	; 0x24
   12c80:	eor	r3, r3, #1
   12c84:	and	r3, r3, r1
   12c88:	ands	r3, r3, #255	; 0xff
   12c8c:	beq	12cc4 <__snprintf_chk@plt+0x1ea4>
   12c90:	cmp	fp, r8
   12c94:	movhi	r2, #39	; 0x27
   12c98:	strbhi	r2, [r9, r8]
   12c9c:	add	r2, r8, #1
   12ca0:	cmp	fp, r2
   12ca4:	movhi	r1, #36	; 0x24
   12ca8:	strbhi	r1, [r9, r2]
   12cac:	add	r2, r8, #2
   12cb0:	cmp	fp, r2
   12cb4:	add	r8, r8, #3
   12cb8:	movhi	r1, #39	; 0x27
   12cbc:	strbhi	r1, [r9, r2]
   12cc0:	str	r3, [sp, #36]	; 0x24
   12cc4:	cmp	fp, r8
   12cc8:	movhi	r3, #92	; 0x5c
   12ccc:	strbhi	r3, [r9, r8]
   12cd0:	add	sl, sl, #1
   12cd4:	add	r8, r8, #1
   12cd8:	b	12ad8 <__snprintf_chk@plt+0x1cb8>
   12cdc:	ldr	r6, [sp, #48]	; 0x30
   12ce0:	mov	r4, #10
   12ce4:	mov	r3, #110	; 0x6e
   12ce8:	ldr	r2, [sp, #64]	; 0x40
   12cec:	cmp	r2, #0
   12cf0:	bne	13770 <__snprintf_chk@plt+0x2950>
   12cf4:	ldr	r1, [sp, #52]	; 0x34
   12cf8:	b	12c54 <__snprintf_chk@plt+0x1e34>
   12cfc:	ldr	r6, [sp, #48]	; 0x30
   12d00:	ldr	r1, [sp, #52]	; 0x34
   12d04:	mov	r3, #116	; 0x74
   12d08:	b	12c54 <__snprintf_chk@plt+0x1e34>
   12d0c:	ldr	r6, [sp, #48]	; 0x30
   12d10:	ldr	r1, [sp, #52]	; 0x34
   12d14:	mov	r4, #11
   12d18:	mov	r3, #118	; 0x76
   12d1c:	b	12c54 <__snprintf_chk@plt+0x1e34>
   12d20:	ldr	r6, [sp, #48]	; 0x30
   12d24:	ldr	r1, [sp, #52]	; 0x34
   12d28:	mov	r4, #8
   12d2c:	mov	r3, #98	; 0x62
   12d30:	b	12c54 <__snprintf_chk@plt+0x1e34>
   12d34:	ldr	r6, [sp, #48]	; 0x30
   12d38:	ldr	r1, [sp, #52]	; 0x34
   12d3c:	mov	r4, #7
   12d40:	mov	r3, #97	; 0x61
   12d44:	b	12c54 <__snprintf_chk@plt+0x1e34>
   12d48:	ldr	r3, [sp, #56]	; 0x38
   12d4c:	ldr	r6, [sp, #48]	; 0x30
   12d50:	cmp	r3, #0
   12d54:	beq	13218 <__snprintf_chk@plt+0x23f8>
   12d58:	ldr	r3, [sp, #40]	; 0x28
   12d5c:	cmp	r3, #0
   12d60:	bne	1384c <__snprintf_chk@plt+0x2a2c>
   12d64:	ldr	r3, [sp, #36]	; 0x24
   12d68:	ldr	r2, [sp, #52]	; 0x34
   12d6c:	eor	r3, r3, #1
   12d70:	ands	r3, r2, r3
   12d74:	moveq	r2, r8
   12d78:	beq	12db0 <__snprintf_chk@plt+0x1f90>
   12d7c:	cmp	fp, r8
   12d80:	movhi	r2, #39	; 0x27
   12d84:	strbhi	r2, [r9, r8]
   12d88:	add	r2, r8, #1
   12d8c:	cmp	fp, r2
   12d90:	movhi	r1, #36	; 0x24
   12d94:	strbhi	r1, [r9, r2]
   12d98:	add	r2, r8, #2
   12d9c:	cmp	fp, r2
   12da0:	movhi	r1, #39	; 0x27
   12da4:	strbhi	r1, [r9, r2]
   12da8:	add	r2, r8, #3
   12dac:	str	r3, [sp, #36]	; 0x24
   12db0:	cmp	fp, r2
   12db4:	movhi	r3, #92	; 0x5c
   12db8:	strbhi	r3, [r9, r2]
   12dbc:	ldr	r3, [sp, #92]	; 0x5c
   12dc0:	add	r8, r2, #1
   12dc4:	cmp	r3, #0
   12dc8:	beq	1374c <__snprintf_chk@plt+0x292c>
   12dcc:	ldr	r1, [sp, #24]
   12dd0:	add	r3, sl, #1
   12dd4:	cmp	r1, r3
   12dd8:	bls	12e10 <__snprintf_chk@plt+0x1ff0>
   12ddc:	ldr	r1, [sp, #44]	; 0x2c
   12de0:	ldrb	r3, [r1, r3]
   12de4:	sub	r3, r3, #48	; 0x30
   12de8:	cmp	r3, #9
   12dec:	bhi	12e10 <__snprintf_chk@plt+0x1ff0>
   12df0:	cmp	fp, r8
   12df4:	movhi	r3, #48	; 0x30
   12df8:	strbhi	r3, [r9, r8]
   12dfc:	add	r3, r2, #2
   12e00:	cmp	fp, r3
   12e04:	add	r8, r2, #3
   12e08:	movhi	r1, #48	; 0x30
   12e0c:	strbhi	r1, [r9, r3]
   12e10:	ldr	r3, [sp, #40]	; 0x28
   12e14:	ldr	r1, [sp, #52]	; 0x34
   12e18:	mov	r7, r3
   12e1c:	str	r3, [sp, #32]
   12e20:	mov	r4, #48	; 0x30
   12e24:	b	12a74 <__snprintf_chk@plt+0x1c54>
   12e28:	ldr	r6, [sp, #48]	; 0x30
   12e2c:	cmp	sl, #0
   12e30:	streq	r7, [sp, #32]
   12e34:	beq	12e54 <__snprintf_chk@plt+0x2034>
   12e38:	mov	r3, #0
   12e3c:	ldr	r1, [sp, #52]	; 0x34
   12e40:	str	r3, [sp, #32]
   12e44:	b	12a74 <__snprintf_chk@plt+0x1c54>
   12e48:	ldr	r6, [sp, #48]	; 0x30
   12e4c:	mov	r3, #0
   12e50:	str	r3, [sp, #32]
   12e54:	ldr	r3, [sp, #64]	; 0x40
   12e58:	cmp	r3, #0
   12e5c:	bne	135d8 <__snprintf_chk@plt+0x27b8>
   12e60:	ldr	r1, [sp, #52]	; 0x34
   12e64:	b	12a74 <__snprintf_chk@plt+0x1c54>
   12e68:	ldr	r3, [sp, #48]	; 0x30
   12e6c:	mov	r6, r3
   12e70:	str	r3, [sp, #32]
   12e74:	b	12e54 <__snprintf_chk@plt+0x2034>
   12e78:	ldr	r6, [sp, #48]	; 0x30
   12e7c:	mov	r4, #13
   12e80:	mov	r3, #114	; 0x72
   12e84:	b	12ce8 <__snprintf_chk@plt+0x1ec8>
   12e88:	ldr	r3, [sp, #44]	; 0x2c
   12e8c:	add	r5, r3, sl
   12e90:	ldrb	r4, [r5]
   12e94:	cmp	r4, #126	; 0x7e
   12e98:	ldrls	pc, [pc, r4, lsl #2]
   12e9c:	b	13238 <__snprintf_chk@plt+0x2418>
   12ea0:	andeq	r3, r1, r8, lsl #4
   12ea4:	andeq	r3, r1, r8, lsr r2
   12ea8:	andeq	r3, r1, r8, lsr r2
   12eac:	andeq	r3, r1, r8, lsr r2
   12eb0:	andeq	r3, r1, r8, lsr r2
   12eb4:	andeq	r3, r1, r8, lsr r2
   12eb8:	andeq	r3, r1, r8, lsr r2
   12ebc:	andeq	r3, r1, r0, lsl #4
   12ec0:	strdeq	r3, [r1], -r8
   12ec4:	andeq	r3, r1, ip, ror #3
   12ec8:	andeq	r3, r1, r4, ror #3
   12ecc:	ldrdeq	r3, [r1], -ip
   12ed0:	ldrdeq	r3, [r1], -r4
   12ed4:	andeq	r3, r1, ip, asr #3
   12ed8:	andeq	r3, r1, r8, lsr r2
   12edc:	andeq	r3, r1, r8, lsr r2
   12ee0:	andeq	r3, r1, r8, lsr r2
   12ee4:	andeq	r3, r1, r8, lsr r2
   12ee8:	andeq	r3, r1, r8, lsr r2
   12eec:	andeq	r3, r1, r8, lsr r2
   12ef0:	andeq	r3, r1, r8, lsr r2
   12ef4:	andeq	r3, r1, r8, lsr r2
   12ef8:	andeq	r3, r1, r8, lsr r2
   12efc:	andeq	r3, r1, r8, lsr r2
   12f00:	andeq	r3, r1, r8, lsr r2
   12f04:	andeq	r3, r1, r8, lsr r2
   12f08:	andeq	r3, r1, r8, lsr r2
   12f0c:	andeq	r3, r1, r8, lsr r2
   12f10:	andeq	r3, r1, r8, lsr r2
   12f14:	andeq	r3, r1, r8, lsr r2
   12f18:	andeq	r3, r1, r8, lsr r2
   12f1c:	andeq	r3, r1, r8, lsr r2
   12f20:	andeq	r3, r1, r0, asr #3
   12f24:			; <UNDEFINED> instruction: 0x000131b8
   12f28:			; <UNDEFINED> instruction: 0x000131b8
   12f2c:			; <UNDEFINED> instruction: 0x000131b0
   12f30:			; <UNDEFINED> instruction: 0x000131b8
   12f34:	andeq	r3, r1, r8, lsr #3
   12f38:			; <UNDEFINED> instruction: 0x000131b8
   12f3c:	andeq	r3, r1, ip, lsl r1
   12f40:			; <UNDEFINED> instruction: 0x000131b8
   12f44:			; <UNDEFINED> instruction: 0x000131b8
   12f48:			; <UNDEFINED> instruction: 0x000131b8
   12f4c:	andeq	r3, r1, r8, lsr #3
   12f50:	andeq	r3, r1, r8, lsr #3
   12f54:	andeq	r3, r1, r8, lsr #3
   12f58:	andeq	r3, r1, r8, lsr #3
   12f5c:	andeq	r3, r1, r8, lsr #3
   12f60:	andeq	r3, r1, r8, lsr #3
   12f64:	andeq	r3, r1, r8, lsr #3
   12f68:	andeq	r3, r1, r8, lsr #3
   12f6c:	andeq	r3, r1, r8, lsr #3
   12f70:	andeq	r3, r1, r8, lsr #3
   12f74:	andeq	r3, r1, r8, lsr #3
   12f78:	andeq	r3, r1, r8, lsr #3
   12f7c:	andeq	r3, r1, r8, lsr #3
   12f80:	andeq	r3, r1, r8, lsr #3
   12f84:	andeq	r3, r1, r8, lsr #3
   12f88:	andeq	r3, r1, r8, lsr #3
   12f8c:			; <UNDEFINED> instruction: 0x000131b8
   12f90:			; <UNDEFINED> instruction: 0x000131b8
   12f94:			; <UNDEFINED> instruction: 0x000131b8
   12f98:			; <UNDEFINED> instruction: 0x000131b8
   12f9c:	strdeq	r3, [r1], -r0
   12fa0:	andeq	r3, r1, r8, lsr r2
   12fa4:	andeq	r3, r1, r8, lsr #3
   12fa8:	andeq	r3, r1, r8, lsr #3
   12fac:	andeq	r3, r1, r8, lsr #3
   12fb0:	andeq	r3, r1, r8, lsr #3
   12fb4:	andeq	r3, r1, r8, lsr #3
   12fb8:	andeq	r3, r1, r8, lsr #3
   12fbc:	andeq	r3, r1, r8, lsr #3
   12fc0:	andeq	r3, r1, r8, lsr #3
   12fc4:	andeq	r3, r1, r8, lsr #3
   12fc8:	andeq	r3, r1, r8, lsr #3
   12fcc:	andeq	r3, r1, r8, lsr #3
   12fd0:	andeq	r3, r1, r8, lsr #3
   12fd4:	andeq	r3, r1, r8, lsr #3
   12fd8:	andeq	r3, r1, r8, lsr #3
   12fdc:	andeq	r3, r1, r8, lsr #3
   12fe0:	andeq	r3, r1, r8, lsr #3
   12fe4:	andeq	r3, r1, r8, lsr #3
   12fe8:	andeq	r3, r1, r8, lsr #3
   12fec:	andeq	r3, r1, r8, lsr #3
   12ff0:	andeq	r3, r1, r8, lsr #3
   12ff4:	andeq	r3, r1, r8, lsr #3
   12ff8:	andeq	r3, r1, r8, lsr #3
   12ffc:	andeq	r3, r1, r8, lsr #3
   13000:	andeq	r3, r1, r8, lsr #3
   13004:	andeq	r3, r1, r8, lsr #3
   13008:	andeq	r3, r1, r8, lsr #3
   1300c:			; <UNDEFINED> instruction: 0x000131b8
   13010:	andeq	r3, r1, r0, asr #1
   13014:	andeq	r3, r1, r8, lsr #3
   13018:			; <UNDEFINED> instruction: 0x000131b8
   1301c:	andeq	r3, r1, r8, lsr #3
   13020:			; <UNDEFINED> instruction: 0x000131b8
   13024:	andeq	r3, r1, r8, lsr #3
   13028:	andeq	r3, r1, r8, lsr #3
   1302c:	andeq	r3, r1, r8, lsr #3
   13030:	andeq	r3, r1, r8, lsr #3
   13034:	andeq	r3, r1, r8, lsr #3
   13038:	andeq	r3, r1, r8, lsr #3
   1303c:	andeq	r3, r1, r8, lsr #3
   13040:	andeq	r3, r1, r8, lsr #3
   13044:	andeq	r3, r1, r8, lsr #3
   13048:	andeq	r3, r1, r8, lsr #3
   1304c:	andeq	r3, r1, r8, lsr #3
   13050:	andeq	r3, r1, r8, lsr #3
   13054:	andeq	r3, r1, r8, lsr #3
   13058:	andeq	r3, r1, r8, lsr #3
   1305c:	andeq	r3, r1, r8, lsr #3
   13060:	andeq	r3, r1, r8, lsr #3
   13064:	andeq	r3, r1, r8, lsr #3
   13068:	andeq	r3, r1, r8, lsr #3
   1306c:	andeq	r3, r1, r8, lsr #3
   13070:	andeq	r3, r1, r8, lsr #3
   13074:	andeq	r3, r1, r8, lsr #3
   13078:	andeq	r3, r1, r8, lsr #3
   1307c:	andeq	r3, r1, r8, lsr #3
   13080:	andeq	r3, r1, r8, lsr #3
   13084:	andeq	r3, r1, r8, lsr #3
   13088:	andeq	r3, r1, r8, lsr #3
   1308c:	muleq	r1, ip, r0
   13090:			; <UNDEFINED> instruction: 0x000131b8
   13094:	muleq	r1, ip, r0
   13098:			; <UNDEFINED> instruction: 0x000131b0
   1309c:	ldr	r3, [sp, #24]
   130a0:	mov	r6, #0
   130a4:	cmn	r3, #1
   130a8:	bne	12a54 <__snprintf_chk@plt+0x1c34>
   130ac:	ldr	r3, [sp, #44]	; 0x2c
   130b0:	ldrb	r3, [r3, #1]
   130b4:	adds	r3, r3, #0
   130b8:	movne	r3, #1
   130bc:	b	12a5c <__snprintf_chk@plt+0x1c3c>
   130c0:	ldr	r3, [sp, #176]	; 0xb0
   130c4:	mov	r6, #0
   130c8:	cmp	r3, #2
   130cc:	bne	12b9c <__snprintf_chk@plt+0x1d7c>
   130d0:	ldr	r3, [sp, #64]	; 0x40
   130d4:	cmp	r3, #0
   130d8:	bne	13910 <__snprintf_chk@plt+0x2af0>
   130dc:	add	sl, sl, #1
   130e0:	ldr	r6, [sp, #36]	; 0x24
   130e4:	str	r3, [sp, #32]
   130e8:	mov	r4, #92	; 0x5c
   130ec:	b	12aa8 <__snprintf_chk@plt+0x1c88>
   130f0:	ldr	r3, [sp, #176]	; 0xb0
   130f4:	mov	r6, #0
   130f8:	cmp	r3, #2
   130fc:	bne	12bd0 <__snprintf_chk@plt+0x1db0>
   13100:	ldr	r3, [sp, #40]	; 0x28
   13104:	cmp	r3, #0
   13108:	bne	133ec <__snprintf_chk@plt+0x25cc>
   1310c:	mov	r1, r7
   13110:	str	r3, [sp, #32]
   13114:	mov	r4, #63	; 0x3f
   13118:	b	12a74 <__snprintf_chk@plt+0x1c54>
   1311c:	ldr	r3, [sp, #176]	; 0xb0
   13120:	mov	r6, #0
   13124:	cmp	r3, #2
   13128:	bne	12c20 <__snprintf_chk@plt+0x1e00>
   1312c:	ldr	r3, [sp, #64]	; 0x40
   13130:	cmp	r3, #0
   13134:	bne	13910 <__snprintf_chk@plt+0x2af0>
   13138:	ldr	r2, [sp, #84]	; 0x54
   1313c:	adds	r3, fp, #0
   13140:	movne	r3, #1
   13144:	cmp	r2, #0
   13148:	movne	r3, #0
   1314c:	cmp	r3, #0
   13150:	strne	fp, [sp, #84]	; 0x54
   13154:	movne	fp, #0
   13158:	bne	13188 <__snprintf_chk@plt+0x2368>
   1315c:	cmp	fp, r8
   13160:	movhi	r3, #39	; 0x27
   13164:	strbhi	r3, [r9, r8]
   13168:	add	r3, r8, #1
   1316c:	cmp	fp, r3
   13170:	movhi	r2, #92	; 0x5c
   13174:	strbhi	r2, [r9, r3]
   13178:	add	r3, r8, #2
   1317c:	cmp	fp, r3
   13180:	movhi	r2, #39	; 0x27
   13184:	strbhi	r2, [r9, r3]
   13188:	ldr	r3, [sp, #64]	; 0x40
   1318c:	add	r8, r8, #3
   13190:	mov	r1, r7
   13194:	str	r7, [sp, #32]
   13198:	str	r7, [sp, #76]	; 0x4c
   1319c:	str	r3, [sp, #36]	; 0x24
   131a0:	mov	r4, #39	; 0x27
   131a4:	b	12a74 <__snprintf_chk@plt+0x1c54>
   131a8:	mov	r6, #0
   131ac:	b	12c38 <__snprintf_chk@plt+0x1e18>
   131b0:	mov	r6, #0
   131b4:	b	12e2c <__snprintf_chk@plt+0x200c>
   131b8:	mov	r6, #0
   131bc:	b	12e4c <__snprintf_chk@plt+0x202c>
   131c0:	str	r7, [sp, #32]
   131c4:	mov	r6, #0
   131c8:	b	12e54 <__snprintf_chk@plt+0x2034>
   131cc:	mov	r6, #0
   131d0:	b	12e7c <__snprintf_chk@plt+0x205c>
   131d4:	mov	r6, #0
   131d8:	b	12c48 <__snprintf_chk@plt+0x1e28>
   131dc:	mov	r6, #0
   131e0:	b	12d10 <__snprintf_chk@plt+0x1ef0>
   131e4:	mov	r6, #0
   131e8:	b	12ce0 <__snprintf_chk@plt+0x1ec0>
   131ec:	mov	r6, #0
   131f0:	mov	r3, #116	; 0x74
   131f4:	b	12ce8 <__snprintf_chk@plt+0x1ec8>
   131f8:	mov	r6, #0
   131fc:	b	12d24 <__snprintf_chk@plt+0x1f04>
   13200:	mov	r6, #0
   13204:	b	12d38 <__snprintf_chk@plt+0x1f18>
   13208:	ldr	r3, [sp, #56]	; 0x38
   1320c:	mov	r6, #0
   13210:	cmp	r3, #0
   13214:	bne	12d58 <__snprintf_chk@plt+0x1f38>
   13218:	ldr	r3, [sp, #96]	; 0x60
   1321c:	cmp	r3, #0
   13220:	addne	sl, sl, #1
   13224:	bne	125cc <__snprintf_chk@plt+0x17ac>
   13228:	ldr	r1, [sp, #52]	; 0x34
   1322c:	str	r3, [sp, #32]
   13230:	mov	r4, r3
   13234:	b	12a74 <__snprintf_chk@plt+0x1c54>
   13238:	mov	r6, #0
   1323c:	ldr	r3, [sp, #80]	; 0x50
   13240:	cmp	r3, #1
   13244:	bne	13434 <__snprintf_chk@plt+0x2614>
   13248:	bl	10d3c <__ctype_b_loc@plt>
   1324c:	ldr	r2, [sp, #80]	; 0x50
   13250:	sxth	r3, r4
   13254:	mov	r1, r2
   13258:	lsl	r3, r3, #1
   1325c:	ldr	r2, [r0]
   13260:	ldrh	r3, [r2, r3]
   13264:	and	r3, r3, #16384	; 0x4000
   13268:	cmp	r3, #0
   1326c:	movne	r3, #1
   13270:	moveq	r3, #0
   13274:	str	r3, [sp, #32]
   13278:	moveq	r3, #1
   1327c:	movne	r3, #0
   13280:	ldr	r2, [sp, #56]	; 0x38
   13284:	and	r3, r3, r2
   13288:	ands	r3, r3, #255	; 0xff
   1328c:	beq	12e60 <__snprintf_chk@plt+0x2040>
   13290:	add	r1, sl, r1
   13294:	mov	r0, #0
   13298:	ldr	r7, [sp, #40]	; 0x28
   1329c:	ldr	r2, [sp, #36]	; 0x24
   132a0:	ldr	lr, [sp, #52]	; 0x34
   132a4:	b	13354 <__snprintf_chk@plt+0x2534>
   132a8:	cmp	r7, #0
   132ac:	bne	136a8 <__snprintf_chk@plt+0x2888>
   132b0:	eor	r0, r2, #1
   132b4:	ands	r0, lr, r0
   132b8:	beq	132f0 <__snprintf_chk@plt+0x24d0>
   132bc:	cmp	fp, r8
   132c0:	movhi	r2, #39	; 0x27
   132c4:	strbhi	r2, [r9, r8]
   132c8:	add	r2, r8, #1
   132cc:	cmp	fp, r2
   132d0:	movhi	ip, #36	; 0x24
   132d4:	strbhi	ip, [r9, r2]
   132d8:	add	r2, r8, #2
   132dc:	cmp	fp, r2
   132e0:	movhi	ip, #39	; 0x27
   132e4:	strbhi	ip, [r9, r2]
   132e8:	add	r8, r8, #3
   132ec:	mov	r2, r0
   132f0:	cmp	fp, r8
   132f4:	movhi	r0, #92	; 0x5c
   132f8:	strbhi	r0, [r9, r8]
   132fc:	add	r0, r8, #1
   13300:	cmp	fp, r0
   13304:	lsrhi	ip, r4, #6
   13308:	addhi	ip, ip, #48	; 0x30
   1330c:	strbhi	ip, [r9, r0]
   13310:	add	ip, r8, #2
   13314:	cmp	fp, ip
   13318:	lsrhi	r0, r4, #3
   1331c:	andhi	r0, r0, #7
   13320:	addhi	r0, r0, #48	; 0x30
   13324:	add	sl, sl, #1
   13328:	strbhi	r0, [r9, ip]
   1332c:	and	r4, r4, #7
   13330:	cmp	sl, r1
   13334:	add	r4, r4, #48	; 0x30
   13338:	add	r8, r8, #3
   1333c:	bcs	136c0 <__snprintf_chk@plt+0x28a0>
   13340:	mov	r0, r3
   13344:	cmp	fp, r8
   13348:	strbhi	r4, [r9, r8]
   1334c:	ldrb	r4, [r5, #1]!
   13350:	add	r8, r8, #1
   13354:	cmp	r3, #0
   13358:	bne	132a8 <__snprintf_chk@plt+0x2488>
   1335c:	cmp	r6, #0
   13360:	bne	13404 <__snprintf_chk@plt+0x25e4>
   13364:	eor	r6, r0, #1
   13368:	and	r6, r6, r2
   1336c:	add	sl, sl, #1
   13370:	cmp	r1, sl
   13374:	uxtb	r6, r6
   13378:	bls	1342c <__snprintf_chk@plt+0x260c>
   1337c:	cmp	r6, #0
   13380:	beq	13344 <__snprintf_chk@plt+0x2524>
   13384:	cmp	fp, r8
   13388:	movhi	r2, #39	; 0x27
   1338c:	strbhi	r2, [r9, r8]
   13390:	add	r2, r8, #1
   13394:	cmp	fp, r2
   13398:	movhi	ip, #39	; 0x27
   1339c:	strbhi	ip, [r9, r2]
   133a0:	add	r8, r8, #2
   133a4:	mov	r6, r3
   133a8:	mov	r2, r3
   133ac:	b	13344 <__snprintf_chk@plt+0x2524>
   133b0:	ldr	r3, [sp, #184]	; 0xb8
   133b4:	cmp	r3, #0
   133b8:	beq	12a90 <__snprintf_chk@plt+0x1c70>
   133bc:	lsr	r2, r4, #5
   133c0:	mov	r0, r3
   133c4:	uxtb	r2, r2
   133c8:	and	r3, r4, #31
   133cc:	ldr	r2, [r0, r2, lsl #2]
   133d0:	lsr	r3, r2, r3
   133d4:	tst	r3, #1
   133d8:	beq	12a90 <__snprintf_chk@plt+0x1c70>
   133dc:	ldr	r3, [sp, #40]	; 0x28
   133e0:	cmp	r3, #0
   133e4:	beq	12c7c <__snprintf_chk@plt+0x1e5c>
   133e8:	mov	r3, r1
   133ec:	str	r3, [sp, #64]	; 0x40
   133f0:	mov	sl, r9
   133f4:	ldr	r3, [sp, #56]	; 0x38
   133f8:	mov	r9, fp
   133fc:	ldr	r2, [sp, #64]	; 0x40
   13400:	b	135f0 <__snprintf_chk@plt+0x27d0>
   13404:	cmp	fp, r8
   13408:	eor	r6, r0, #1
   1340c:	movhi	ip, #92	; 0x5c
   13410:	and	r6, r6, r2
   13414:	add	sl, sl, #1
   13418:	strbhi	ip, [r9, r8]
   1341c:	cmp	r1, sl
   13420:	add	r8, r8, #1
   13424:	uxtb	r6, r6
   13428:	bhi	1337c <__snprintf_chk@plt+0x255c>
   1342c:	str	r2, [sp, #36]	; 0x24
   13430:	b	12aa8 <__snprintf_chk@plt+0x1c88>
   13434:	ldr	r3, [sp, #24]
   13438:	cmn	r3, #1
   1343c:	mov	r3, #0
   13440:	str	r3, [sp, #128]	; 0x80
   13444:	str	r3, [sp, #132]	; 0x84
   13448:	beq	1373c <__snprintf_chk@plt+0x291c>
   1344c:	mov	r2, r7
   13450:	mov	r3, #0
   13454:	str	r7, [sp, #104]	; 0x68
   13458:	str	r5, [sp, #116]	; 0x74
   1345c:	mov	r7, r3
   13460:	mov	r5, r2
   13464:	str	r4, [sp, #32]
   13468:	str	r6, [sp, #108]	; 0x6c
   1346c:	str	r8, [sp, #112]	; 0x70
   13470:	ldr	r3, [sp, #44]	; 0x2c
   13474:	add	r6, sl, r7
   13478:	add	r4, r3, r6
   1347c:	ldr	r3, [sp, #24]
   13480:	mov	r1, r4
   13484:	sub	r2, r3, r6
   13488:	add	r0, sp, #124	; 0x7c
   1348c:	add	r3, sp, #128	; 0x80
   13490:	bl	17754 <__snprintf_chk@plt+0x6934>
   13494:	subs	r8, r0, #0
   13498:	beq	13820 <__snprintf_chk@plt+0x2a00>
   1349c:	cmn	r8, #1
   134a0:	beq	137f8 <__snprintf_chk@plt+0x29d8>
   134a4:	cmn	r8, #2
   134a8:	beq	13790 <__snprintf_chk@plt+0x2970>
   134ac:	ldr	r3, [sp, #64]	; 0x40
   134b0:	cmp	r3, #0
   134b4:	beq	13574 <__snprintf_chk@plt+0x2754>
   134b8:	cmp	r8, #1
   134bc:	beq	13574 <__snprintf_chk@plt+0x2754>
   134c0:	sub	r3, r8, #1
   134c4:	add	r6, r3, r6
   134c8:	ldr	r3, [sp, #44]	; 0x2c
   134cc:	add	r6, r3, r6
   134d0:	ldrb	r3, [r4, #1]!
   134d4:	sub	r3, r3, #91	; 0x5b
   134d8:	cmp	r3, #33	; 0x21
   134dc:	ldrls	pc, [pc, r3, lsl #2]
   134e0:	b	1356c <__snprintf_chk@plt+0x274c>
   134e4:	ldrdeq	r3, [r1], -r8
   134e8:	ldrdeq	r3, [r1], -r8
   134ec:	andeq	r3, r1, ip, ror #10
   134f0:	ldrdeq	r3, [r1], -r8
   134f4:	andeq	r3, r1, ip, ror #10
   134f8:	ldrdeq	r3, [r1], -r8
   134fc:	andeq	r3, r1, ip, ror #10
   13500:	andeq	r3, r1, ip, ror #10
   13504:	andeq	r3, r1, ip, ror #10
   13508:	andeq	r3, r1, ip, ror #10
   1350c:	andeq	r3, r1, ip, ror #10
   13510:	andeq	r3, r1, ip, ror #10
   13514:	andeq	r3, r1, ip, ror #10
   13518:	andeq	r3, r1, ip, ror #10
   1351c:	andeq	r3, r1, ip, ror #10
   13520:	andeq	r3, r1, ip, ror #10
   13524:	andeq	r3, r1, ip, ror #10
   13528:	andeq	r3, r1, ip, ror #10
   1352c:	andeq	r3, r1, ip, ror #10
   13530:	andeq	r3, r1, ip, ror #10
   13534:	andeq	r3, r1, ip, ror #10
   13538:	andeq	r3, r1, ip, ror #10
   1353c:	andeq	r3, r1, ip, ror #10
   13540:	andeq	r3, r1, ip, ror #10
   13544:	andeq	r3, r1, ip, ror #10
   13548:	andeq	r3, r1, ip, ror #10
   1354c:	andeq	r3, r1, ip, ror #10
   13550:	andeq	r3, r1, ip, ror #10
   13554:	andeq	r3, r1, ip, ror #10
   13558:	andeq	r3, r1, ip, ror #10
   1355c:	andeq	r3, r1, ip, ror #10
   13560:	andeq	r3, r1, ip, ror #10
   13564:	andeq	r3, r1, ip, ror #10
   13568:	ldrdeq	r3, [r1], -r8
   1356c:	cmp	r6, r4
   13570:	bne	134d0 <__snprintf_chk@plt+0x26b0>
   13574:	ldr	r0, [sp, #124]	; 0x7c
   13578:	bl	10c94 <iswprint@plt>
   1357c:	add	r7, r7, r8
   13580:	cmp	r0, #0
   13584:	add	r0, sp, #128	; 0x80
   13588:	moveq	r5, #0
   1358c:	bl	10c40 <mbsinit@plt>
   13590:	cmp	r0, #0
   13594:	beq	13470 <__snprintf_chk@plt+0x2650>
   13598:	ldr	r4, [sp, #32]
   1359c:	str	r5, [sp, #32]
   135a0:	ldr	r3, [sp, #32]
   135a4:	mov	r1, r7
   135a8:	eor	r3, r3, #1
   135ac:	ldr	r7, [sp, #104]	; 0x68
   135b0:	ldr	r6, [sp, #108]	; 0x6c
   135b4:	ldr	r8, [sp, #112]	; 0x70
   135b8:	ldr	r5, [sp, #116]	; 0x74
   135bc:	uxtb	r3, r3
   135c0:	cmp	r1, #1
   135c4:	bls	13280 <__snprintf_chk@plt+0x2460>
   135c8:	ldr	r2, [sp, #56]	; 0x38
   135cc:	and	r3, r3, r2
   135d0:	uxtb	r3, r3
   135d4:	b	13290 <__snprintf_chk@plt+0x2470>
   135d8:	mov	r3, #2
   135dc:	str	r3, [sp, #176]	; 0xb0
   135e0:	ldr	r2, [sp, #64]	; 0x40
   135e4:	ldr	r3, [sp, #56]	; 0x38
   135e8:	mov	sl, r9
   135ec:	mov	r9, fp
   135f0:	and	r3, r3, r2
   135f4:	tst	r3, #255	; 0xff
   135f8:	ldr	r3, [sp, #176]	; 0xb0
   135fc:	movne	r3, #4
   13600:	str	r3, [sp, #176]	; 0xb0
   13604:	ldr	r3, [sp, #180]	; 0xb4
   13608:	mov	ip, #0
   1360c:	bic	r3, r3, #2
   13610:	str	r3, [sp, #4]
   13614:	ldr	r3, [sp, #192]	; 0xc0
   13618:	ldr	r2, [sp, #44]	; 0x2c
   1361c:	str	r3, [sp, #16]
   13620:	ldr	r3, [sp, #188]	; 0xbc
   13624:	mov	r1, r9
   13628:	str	r3, [sp, #12]
   1362c:	ldr	r3, [sp, #176]	; 0xb0
   13630:	mov	r0, sl
   13634:	str	r3, [sp]
   13638:	str	ip, [sp, #8]
   1363c:	ldr	r3, [sp, #24]
   13640:	bl	124a0 <__snprintf_chk@plt+0x1680>
   13644:	mov	fp, r0
   13648:	mov	r0, fp
   1364c:	add	sp, sp, #140	; 0x8c
   13650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13654:	mov	r4, #92	; 0x5c
   13658:	mov	r1, #0
   1365c:	mov	r3, r4
   13660:	b	12c54 <__snprintf_chk@plt+0x1e34>
   13664:	mov	r3, #0
   13668:	ldr	r1, [sp, #52]	; 0x34
   1366c:	str	r3, [sp, #32]
   13670:	mov	r4, #63	; 0x3f
   13674:	b	12a74 <__snprintf_chk@plt+0x1c54>
   13678:	cmp	fp, #0
   1367c:	beq	136d8 <__snprintf_chk@plt+0x28b8>
   13680:	mov	r3, #39	; 0x27
   13684:	strb	r3, [r9]
   13688:	mov	r3, #0
   1368c:	str	r3, [sp, #40]	; 0x28
   13690:	mov	r3, #1
   13694:	str	r3, [sp, #68]	; 0x44
   13698:	ldr	r3, [pc, #448]	; 13860 <__snprintf_chk@plt+0x2a40>
   1369c:	mov	r8, #1
   136a0:	str	r3, [sp, #72]	; 0x48
   136a4:	b	12888 <__snprintf_chk@plt+0x1a68>
   136a8:	ldr	r3, [sp, #40]	; 0x28
   136ac:	mov	sl, r9
   136b0:	str	r3, [sp, #56]	; 0x38
   136b4:	mov	r9, fp
   136b8:	ldr	r2, [sp, #64]	; 0x40
   136bc:	b	135f0 <__snprintf_chk@plt+0x27d0>
   136c0:	str	r2, [sp, #36]	; 0x24
   136c4:	b	12ad8 <__snprintf_chk@plt+0x1cb8>
   136c8:	mov	r1, #0
   136cc:	str	r3, [sp, #32]
   136d0:	mov	r4, #63	; 0x3f
   136d4:	b	12a74 <__snprintf_chk@plt+0x1c54>
   136d8:	ldr	r3, [pc, #384]	; 13860 <__snprintf_chk@plt+0x2a40>
   136dc:	str	r3, [sp, #72]	; 0x48
   136e0:	mov	r3, #0
   136e4:	str	r3, [sp, #40]	; 0x28
   136e8:	mov	r3, #1
   136ec:	str	r3, [sp, #68]	; 0x44
   136f0:	mov	r8, r3
   136f4:	b	12888 <__snprintf_chk@plt+0x1a68>
   136f8:	bl	10e14 <abort@plt>
   136fc:	cmp	fp, #0
   13700:	beq	13760 <__snprintf_chk@plt+0x2940>
   13704:	mov	r2, #1
   13708:	mov	r3, #34	; 0x22
   1370c:	strb	r3, [r9]
   13710:	mov	r8, r2
   13714:	mov	r3, r2
   13718:	str	r2, [sp, #68]	; 0x44
   1371c:	str	r3, [sp, #56]	; 0x38
   13720:	ldr	r3, [pc, #316]	; 13864 <__snprintf_chk@plt+0x2a44>
   13724:	ldr	r1, [sp, #56]	; 0x38
   13728:	str	r3, [sp, #72]	; 0x48
   1372c:	ldr	r2, [sp, #176]	; 0xb0
   13730:	ldr	ip, [sp, #40]	; 0x28
   13734:	ldr	lr, [sp, #176]	; 0xb0
   13738:	b	1256c <__snprintf_chk@plt+0x174c>
   1373c:	ldr	r0, [sp, #44]	; 0x2c
   13740:	bl	10d54 <strlen@plt>
   13744:	str	r0, [sp, #24]
   13748:	b	1344c <__snprintf_chk@plt+0x262c>
   1374c:	mov	r7, #0
   13750:	ldr	r1, [sp, #52]	; 0x34
   13754:	str	r3, [sp, #32]
   13758:	mov	r4, #48	; 0x30
   1375c:	b	12a74 <__snprintf_chk@plt+0x1c54>
   13760:	mov	r3, #1
   13764:	str	r3, [sp, #68]	; 0x44
   13768:	mov	r8, r3
   1376c:	b	1371c <__snprintf_chk@plt+0x28fc>
   13770:	mov	r3, #2
   13774:	mov	sl, r9
   13778:	str	r3, [sp, #176]	; 0xb0
   1377c:	mov	r9, fp
   13780:	ldr	r3, [sp, #56]	; 0x38
   13784:	b	135f0 <__snprintf_chk@plt+0x27d0>
   13788:	ldr	r6, [sp, #48]	; 0x30
   1378c:	b	1323c <__snprintf_chk@plt+0x241c>
   13790:	ldr	r0, [sp, #24]
   13794:	mov	ip, r6
   13798:	cmp	r0, ip
   1379c:	mov	r1, r7
   137a0:	mov	r2, r4
   137a4:	ldr	r7, [sp, #104]	; 0x68
   137a8:	ldr	r4, [sp, #32]
   137ac:	ldr	r6, [sp, #108]	; 0x6c
   137b0:	ldr	r8, [sp, #112]	; 0x70
   137b4:	ldr	r5, [sp, #116]	; 0x74
   137b8:	bls	137e8 <__snprintf_chk@plt+0x29c8>
   137bc:	ldrb	r3, [r2]
   137c0:	cmp	r3, #0
   137c4:	bne	137d8 <__snprintf_chk@plt+0x29b8>
   137c8:	b	138f8 <__snprintf_chk@plt+0x2ad8>
   137cc:	ldrb	r3, [r2, #1]!
   137d0:	cmp	r3, #0
   137d4:	beq	138f8 <__snprintf_chk@plt+0x2ad8>
   137d8:	add	r1, r1, #1
   137dc:	add	r3, sl, r1
   137e0:	cmp	r0, r3
   137e4:	bhi	137cc <__snprintf_chk@plt+0x29ac>
   137e8:	mov	r2, #0
   137ec:	mov	r3, r7
   137f0:	str	r2, [sp, #32]
   137f4:	b	135c0 <__snprintf_chk@plt+0x27a0>
   137f8:	mov	r1, r7
   137fc:	ldr	r7, [sp, #104]	; 0x68
   13800:	mov	r2, #0
   13804:	ldr	r4, [sp, #32]
   13808:	ldr	r6, [sp, #108]	; 0x6c
   1380c:	ldr	r8, [sp, #112]	; 0x70
   13810:	ldr	r5, [sp, #116]	; 0x74
   13814:	mov	r3, r7
   13818:	str	r2, [sp, #32]
   1381c:	b	135c0 <__snprintf_chk@plt+0x27a0>
   13820:	mov	r3, r5
   13824:	eor	r3, r3, #1
   13828:	ldr	r4, [sp, #32]
   1382c:	mov	r1, r7
   13830:	str	r5, [sp, #32]
   13834:	ldr	r7, [sp, #104]	; 0x68
   13838:	ldr	r6, [sp, #108]	; 0x6c
   1383c:	ldr	r8, [sp, #112]	; 0x70
   13840:	ldr	r5, [sp, #116]	; 0x74
   13844:	uxtb	r3, r3
   13848:	b	135c0 <__snprintf_chk@plt+0x27a0>
   1384c:	mov	sl, r9
   13850:	str	r3, [sp, #56]	; 0x38
   13854:	mov	r9, fp
   13858:	ldr	r2, [sp, #64]	; 0x40
   1385c:	b	135f0 <__snprintf_chk@plt+0x27d0>
   13860:	andeq	r8, r1, r0, lsr r5
   13864:	andeq	r8, r1, ip, lsr #10
   13868:	andeq	r8, r1, r4, lsr r5
   1386c:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13870:	ldr	r2, [sp, #44]	; 0x2c
   13874:	ldrb	r1, [r2, r3]
   13878:	sub	r2, r1, #33	; 0x21
   1387c:	uxtb	r2, r2
   13880:	cmp	r2, #29
   13884:	bhi	13904 <__snprintf_chk@plt+0x2ae4>
   13888:	ldr	r0, [pc, #-36]	; 1386c <__snprintf_chk@plt+0x2a4c>
   1388c:	mov	ip, #1
   13890:	ands	r2, r0, ip, lsl r2
   13894:	beq	13924 <__snprintf_chk@plt+0x2b04>
   13898:	ldr	r2, [sp, #40]	; 0x28
   1389c:	cmp	r2, #0
   138a0:	bne	13a18 <__snprintf_chk@plt+0x2bf8>
   138a4:	add	r2, r8, #1
   138a8:	cmp	fp, r8
   138ac:	strbhi	r4, [r9, r8]
   138b0:	cmp	fp, r2
   138b4:	movhi	r0, #34	; 0x22
   138b8:	strbhi	r0, [r9, r2]
   138bc:	add	r2, r8, #2
   138c0:	cmp	fp, r2
   138c4:	movhi	r0, #34	; 0x22
   138c8:	strbhi	r0, [r9, r2]
   138cc:	add	r2, r8, #3
   138d0:	cmp	fp, r2
   138d4:	mov	sl, r3
   138d8:	ldr	r3, [sp, #40]	; 0x28
   138dc:	movhi	r0, #63	; 0x3f
   138e0:	mov	r4, r1
   138e4:	strbhi	r0, [r9, r2]
   138e8:	add	r8, r8, #4
   138ec:	mov	r1, r3
   138f0:	str	r3, [sp, #32]
   138f4:	b	12a74 <__snprintf_chk@plt+0x1c54>
   138f8:	str	r3, [sp, #32]
   138fc:	mov	r3, r7
   13900:	b	135c0 <__snprintf_chk@plt+0x27a0>
   13904:	mov	r1, #0
   13908:	str	r1, [sp, #32]
   1390c:	b	12a74 <__snprintf_chk@plt+0x1c54>
   13910:	mov	sl, r9
   13914:	ldr	r3, [sp, #56]	; 0x38
   13918:	mov	r9, fp
   1391c:	ldr	r2, [sp, #64]	; 0x40
   13920:	b	135f0 <__snprintf_chk@plt+0x27d0>
   13924:	str	r2, [sp, #32]
   13928:	mov	r1, #0
   1392c:	b	12a74 <__snprintf_chk@plt+0x1c54>
   13930:	ldr	r2, [sp, #76]	; 0x4c
   13934:	mov	sl, r9
   13938:	mov	r9, fp
   1393c:	mov	fp, r8
   13940:	ldr	r1, [sp, #72]	; 0x48
   13944:	cmp	r1, #0
   13948:	moveq	r3, #0
   1394c:	andne	r3, r2, #1
   13950:	cmp	r3, #0
   13954:	beq	13980 <__snprintf_chk@plt+0x2b60>
   13958:	ldrb	r3, [r1]
   1395c:	cmp	r3, #0
   13960:	beq	13980 <__snprintf_chk@plt+0x2b60>
   13964:	mov	r2, r1
   13968:	cmp	r9, fp
   1396c:	strbhi	r3, [sl, fp]
   13970:	ldrb	r3, [r2, #1]!
   13974:	add	fp, fp, #1
   13978:	cmp	r3, #0
   1397c:	bne	13968 <__snprintf_chk@plt+0x2b48>
   13980:	cmp	r9, fp
   13984:	movhi	r3, #0
   13988:	strbhi	r3, [sl, fp]
   1398c:	b	13648 <__snprintf_chk@plt+0x2828>
   13990:	ldr	r3, [sp, #192]	; 0xc0
   13994:	mov	ip, #5
   13998:	str	r3, [sp, #16]
   1399c:	ldr	r3, [sp, #188]	; 0xbc
   139a0:	ldr	r2, [sp, #44]	; 0x2c
   139a4:	str	r3, [sp, #12]
   139a8:	ldr	r3, [sp, #184]	; 0xb8
   139ac:	ldr	r1, [sp, #84]	; 0x54
   139b0:	str	r3, [sp, #8]
   139b4:	ldr	r3, [sp, #180]	; 0xb4
   139b8:	mov	r0, r9
   139bc:	str	r3, [sp, #4]
   139c0:	str	ip, [sp]
   139c4:	ldr	r3, [sp, #24]
   139c8:	bl	124a0 <__snprintf_chk@plt+0x1680>
   139cc:	mov	fp, r0
   139d0:	b	13648 <__snprintf_chk@plt+0x2828>
   139d4:	mov	sl, r9
   139d8:	mov	r9, fp
   139dc:	mov	fp, r8
   139e0:	b	13940 <__snprintf_chk@plt+0x2b20>
   139e4:	ldr	r1, [sp, #176]	; 0xb0
   139e8:	bl	12380 <__snprintf_chk@plt+0x1560>
   139ec:	str	r0, [sp, #192]	; 0xc0
   139f0:	b	1295c <__snprintf_chk@plt+0x1b3c>
   139f4:	ldr	r1, [sp, #176]	; 0xb0
   139f8:	bl	12380 <__snprintf_chk@plt+0x1560>
   139fc:	str	r0, [sp, #188]	; 0xbc
   13a00:	b	1293c <__snprintf_chk@plt+0x1b1c>
   13a04:	mov	sl, r9
   13a08:	mov	r2, r3
   13a0c:	mov	r9, fp
   13a10:	mov	fp, r8
   13a14:	b	13940 <__snprintf_chk@plt+0x2b20>
   13a18:	mov	sl, r9
   13a1c:	mov	r9, fp
   13a20:	b	13604 <__snprintf_chk@plt+0x27e4>
   13a24:	push	{r4, r5, r6, lr}
   13a28:	mov	r5, r0
   13a2c:	bl	10d60 <__errno_location@plt>
   13a30:	cmp	r5, #0
   13a34:	mov	r1, #48	; 0x30
   13a38:	mov	r4, r0
   13a3c:	ldr	r0, [pc, #16]	; 13a54 <__snprintf_chk@plt+0x2c34>
   13a40:	ldr	r6, [r4]
   13a44:	movne	r0, r5
   13a48:	bl	172c0 <__snprintf_chk@plt+0x64a0>
   13a4c:	str	r6, [r4]
   13a50:	pop	{r4, r5, r6, pc}
   13a54:	andeq	r9, r2, ip, asr #2
   13a58:	ldr	r3, [pc, #12]	; 13a6c <__snprintf_chk@plt+0x2c4c>
   13a5c:	cmp	r0, #0
   13a60:	moveq	r0, r3
   13a64:	ldr	r0, [r0]
   13a68:	bx	lr
   13a6c:	andeq	r9, r2, ip, asr #2
   13a70:	ldr	r3, [pc, #12]	; 13a84 <__snprintf_chk@plt+0x2c64>
   13a74:	cmp	r0, #0
   13a78:	moveq	r0, r3
   13a7c:	str	r1, [r0]
   13a80:	bx	lr
   13a84:	andeq	r9, r2, ip, asr #2
   13a88:	ldr	r3, [pc, #52]	; 13ac4 <__snprintf_chk@plt+0x2ca4>
   13a8c:	cmp	r0, #0
   13a90:	moveq	r0, r3
   13a94:	add	r3, r0, #8
   13a98:	push	{lr}		; (str lr, [sp, #-4]!)
   13a9c:	lsr	lr, r1, #5
   13aa0:	and	r1, r1, #31
   13aa4:	ldr	ip, [r3, lr, lsl #2]
   13aa8:	lsr	r0, ip, r1
   13aac:	eor	r2, r2, r0
   13ab0:	and	r2, r2, #1
   13ab4:	and	r0, r0, #1
   13ab8:	eor	r1, ip, r2, lsl r1
   13abc:	str	r1, [r3, lr, lsl #2]
   13ac0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ac4:	andeq	r9, r2, ip, asr #2
   13ac8:	ldr	r3, [pc, #16]	; 13ae0 <__snprintf_chk@plt+0x2cc0>
   13acc:	cmp	r0, #0
   13ad0:	movne	r3, r0
   13ad4:	ldr	r0, [r3, #4]
   13ad8:	str	r1, [r3, #4]
   13adc:	bx	lr
   13ae0:	andeq	r9, r2, ip, asr #2
   13ae4:	ldr	r3, [pc, #44]	; 13b18 <__snprintf_chk@plt+0x2cf8>
   13ae8:	cmp	r0, #0
   13aec:	moveq	r0, r3
   13af0:	mov	ip, #10
   13af4:	cmp	r2, #0
   13af8:	cmpne	r1, #0
   13afc:	str	ip, [r0]
   13b00:	beq	13b10 <__snprintf_chk@plt+0x2cf0>
   13b04:	str	r1, [r0, #40]	; 0x28
   13b08:	str	r2, [r0, #44]	; 0x2c
   13b0c:	bx	lr
   13b10:	push	{r4, lr}
   13b14:	bl	10e14 <abort@plt>
   13b18:	andeq	r9, r2, ip, asr #2
   13b1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b20:	sub	sp, sp, #24
   13b24:	ldr	ip, [pc, #108]	; 13b98 <__snprintf_chk@plt+0x2d78>
   13b28:	ldr	r4, [sp, #56]	; 0x38
   13b2c:	mov	r9, r2
   13b30:	cmp	r4, #0
   13b34:	moveq	r4, ip
   13b38:	mov	sl, r3
   13b3c:	mov	r7, r0
   13b40:	mov	r8, r1
   13b44:	bl	10d60 <__errno_location@plt>
   13b48:	ldr	r3, [r4, #44]	; 0x2c
   13b4c:	mov	r1, r8
   13b50:	ldr	r6, [r0]
   13b54:	str	r3, [sp, #16]
   13b58:	ldr	r2, [r4, #40]	; 0x28
   13b5c:	add	r3, r4, #8
   13b60:	str	r3, [sp, #8]
   13b64:	str	r2, [sp, #12]
   13b68:	ldr	r2, [r4, #4]
   13b6c:	mov	r5, r0
   13b70:	str	r2, [sp, #4]
   13b74:	ldr	ip, [r4]
   13b78:	mov	r3, sl
   13b7c:	mov	r2, r9
   13b80:	mov	r0, r7
   13b84:	str	ip, [sp]
   13b88:	bl	124a0 <__snprintf_chk@plt+0x1680>
   13b8c:	str	r6, [r5]
   13b90:	add	sp, sp, #24
   13b94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b98:	andeq	r9, r2, ip, asr #2
   13b9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ba0:	cmp	r2, #0
   13ba4:	sub	sp, sp, #36	; 0x24
   13ba8:	ldr	r4, [pc, #164]	; 13c54 <__snprintf_chk@plt+0x2e34>
   13bac:	mov	r8, r1
   13bb0:	movne	r4, r2
   13bb4:	mov	r7, r0
   13bb8:	bl	10d60 <__errno_location@plt>
   13bbc:	ldr	r3, [r4, #44]	; 0x2c
   13bc0:	ldr	r5, [r4, #4]
   13bc4:	add	r9, r4, #8
   13bc8:	orr	r5, r5, #1
   13bcc:	mov	r1, #0
   13bd0:	mov	r2, r7
   13bd4:	ldr	fp, [r0]
   13bd8:	str	r3, [sp, #16]
   13bdc:	ldr	r3, [r4, #40]	; 0x28
   13be0:	stmib	sp, {r5, r9}
   13be4:	str	r3, [sp, #12]
   13be8:	ldr	r3, [r4]
   13bec:	mov	r6, r0
   13bf0:	str	r3, [sp]
   13bf4:	mov	r0, r1
   13bf8:	mov	r3, r8
   13bfc:	bl	124a0 <__snprintf_chk@plt+0x1680>
   13c00:	add	r1, r0, #1
   13c04:	mov	r0, r1
   13c08:	str	r1, [sp, #28]
   13c0c:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   13c10:	ldr	r3, [r4, #44]	; 0x2c
   13c14:	ldr	r1, [sp, #28]
   13c18:	str	r3, [sp, #16]
   13c1c:	ldr	r3, [r4, #40]	; 0x28
   13c20:	str	r5, [sp, #4]
   13c24:	str	r3, [sp, #12]
   13c28:	str	r9, [sp, #8]
   13c2c:	ldr	ip, [r4]
   13c30:	mov	r3, r8
   13c34:	mov	r2, r7
   13c38:	str	ip, [sp]
   13c3c:	mov	sl, r0
   13c40:	bl	124a0 <__snprintf_chk@plt+0x1680>
   13c44:	mov	r0, sl
   13c48:	str	fp, [r6]
   13c4c:	add	sp, sp, #36	; 0x24
   13c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c54:	andeq	r9, r2, ip, asr #2
   13c58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c5c:	cmp	r3, #0
   13c60:	sub	sp, sp, #44	; 0x2c
   13c64:	ldr	r4, [pc, #192]	; 13d2c <__snprintf_chk@plt+0x2f0c>
   13c68:	mov	r6, r2
   13c6c:	movne	r4, r3
   13c70:	mov	r9, r1
   13c74:	mov	r8, r0
   13c78:	bl	10d60 <__errno_location@plt>
   13c7c:	ldr	r3, [r4, #44]	; 0x2c
   13c80:	ldr	r5, [r4, #4]
   13c84:	add	sl, r4, #8
   13c88:	cmp	r6, #0
   13c8c:	orreq	r5, r5, #1
   13c90:	mov	r1, #0
   13c94:	ldr	r2, [r0]
   13c98:	str	r3, [sp, #16]
   13c9c:	ldr	r3, [r4, #40]	; 0x28
   13ca0:	stmib	sp, {r5, sl}
   13ca4:	str	r3, [sp, #12]
   13ca8:	ldr	r3, [r4]
   13cac:	mov	r7, r0
   13cb0:	str	r2, [sp, #28]
   13cb4:	str	r3, [sp]
   13cb8:	mov	r2, r8
   13cbc:	mov	r3, r9
   13cc0:	mov	r0, r1
   13cc4:	bl	124a0 <__snprintf_chk@plt+0x1680>
   13cc8:	add	r1, r0, #1
   13ccc:	mov	fp, r0
   13cd0:	mov	r0, r1
   13cd4:	str	r1, [sp, #36]	; 0x24
   13cd8:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   13cdc:	ldr	r3, [r4, #44]	; 0x2c
   13ce0:	mov	r2, r8
   13ce4:	str	r3, [sp, #16]
   13ce8:	ldr	r3, [r4, #40]	; 0x28
   13cec:	str	r5, [sp, #4]
   13cf0:	str	r3, [sp, #12]
   13cf4:	str	sl, [sp, #8]
   13cf8:	ldr	ip, [r4]
   13cfc:	ldr	r1, [sp, #36]	; 0x24
   13d00:	mov	r3, r9
   13d04:	str	ip, [sp]
   13d08:	str	r0, [sp, #32]
   13d0c:	bl	124a0 <__snprintf_chk@plt+0x1680>
   13d10:	ldr	r2, [sp, #28]
   13d14:	cmp	r6, #0
   13d18:	str	r2, [r7]
   13d1c:	ldr	r0, [sp, #32]
   13d20:	strne	fp, [r6]
   13d24:	add	sp, sp, #44	; 0x2c
   13d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d2c:	andeq	r9, r2, ip, asr #2
   13d30:	push	{r4, r5, r6, r7, r8, lr}
   13d34:	ldr	r6, [pc, #116]	; 13db0 <__snprintf_chk@plt+0x2f90>
   13d38:	ldr	r3, [r6, #4]
   13d3c:	ldr	r7, [r6]
   13d40:	cmp	r3, #1
   13d44:	movgt	r5, r7
   13d48:	movgt	r4, #1
   13d4c:	ble	13d6c <__snprintf_chk@plt+0x2f4c>
   13d50:	ldr	r0, [r5, #12]
   13d54:	bl	17628 <__snprintf_chk@plt+0x6808>
   13d58:	ldr	r3, [r6, #4]
   13d5c:	add	r4, r4, #1
   13d60:	cmp	r3, r4
   13d64:	add	r5, r5, #8
   13d68:	bgt	13d50 <__snprintf_chk@plt+0x2f30>
   13d6c:	ldr	r0, [r7, #4]
   13d70:	ldr	r4, [pc, #60]	; 13db4 <__snprintf_chk@plt+0x2f94>
   13d74:	cmp	r0, r4
   13d78:	beq	13d8c <__snprintf_chk@plt+0x2f6c>
   13d7c:	bl	17628 <__snprintf_chk@plt+0x6808>
   13d80:	mov	r3, #256	; 0x100
   13d84:	str	r4, [r6, #12]
   13d88:	str	r3, [r6, #8]
   13d8c:	ldr	r4, [pc, #36]	; 13db8 <__snprintf_chk@plt+0x2f98>
   13d90:	cmp	r7, r4
   13d94:	beq	13da4 <__snprintf_chk@plt+0x2f84>
   13d98:	mov	r0, r7
   13d9c:	bl	17628 <__snprintf_chk@plt+0x6808>
   13da0:	str	r4, [r6]
   13da4:	mov	r3, #1
   13da8:	str	r3, [r6, #4]
   13dac:	pop	{r4, r5, r6, r7, r8, pc}
   13db0:	andeq	r9, r2, r0, ror #1
   13db4:	andeq	r9, r2, ip, ror r1
   13db8:	andeq	r9, r2, r8, ror #1
   13dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dc0:	sub	sp, sp, #44	; 0x2c
   13dc4:	mov	r5, r0
   13dc8:	mov	sl, r1
   13dcc:	bl	10d60 <__errno_location@plt>
   13dd0:	ldr	r4, [pc, #400]	; 13f68 <__snprintf_chk@plt+0x3148>
   13dd4:	cmn	r5, #-2147483647	; 0x80000001
   13dd8:	ldr	r6, [r4]
   13ddc:	mov	r8, r0
   13de0:	movne	r0, #0
   13de4:	moveq	r0, #1
   13de8:	ldr	r3, [r8]
   13dec:	orrs	r0, r0, r5, lsr #31
   13df0:	str	r3, [sp, #24]
   13df4:	bne	13f64 <__snprintf_chk@plt+0x3144>
   13df8:	ldr	r2, [r4, #4]
   13dfc:	cmp	r5, r2
   13e00:	blt	13e60 <__snprintf_chk@plt+0x3040>
   13e04:	add	r7, r4, #8
   13e08:	cmp	r6, r7
   13e0c:	str	r2, [sp, #36]	; 0x24
   13e10:	beq	13f34 <__snprintf_chk@plt+0x3114>
   13e14:	mov	r3, #8
   13e18:	sub	r2, r5, r2
   13e1c:	mov	r0, r6
   13e20:	str	r3, [sp]
   13e24:	add	r2, r2, #1
   13e28:	mvn	r3, #-2147483648	; 0x80000000
   13e2c:	add	r1, sp, #36	; 0x24
   13e30:	bl	16f98 <__snprintf_chk@plt+0x6178>
   13e34:	mov	r6, r0
   13e38:	str	r0, [r4]
   13e3c:	ldr	r0, [r4, #4]
   13e40:	ldr	r2, [sp, #36]	; 0x24
   13e44:	mov	r1, #0
   13e48:	sub	r2, r2, r0
   13e4c:	add	r0, r6, r0, lsl #3
   13e50:	lsl	r2, r2, #3
   13e54:	bl	10d84 <memset@plt>
   13e58:	ldr	r3, [sp, #36]	; 0x24
   13e5c:	str	r3, [r4, #4]
   13e60:	ldr	r4, [pc, #260]	; 13f6c <__snprintf_chk@plt+0x314c>
   13e64:	add	fp, r6, r5, lsl #3
   13e68:	ldr	r9, [r6, r5, lsl #3]
   13e6c:	ldr	r0, [r4, #4]
   13e70:	ldr	r3, [r4]
   13e74:	ldr	r7, [fp, #4]
   13e78:	ldr	r1, [r4, #44]	; 0x2c
   13e7c:	ldr	r2, [r4, #40]	; 0x28
   13e80:	orr	r0, r0, #1
   13e84:	str	r3, [sp]
   13e88:	add	r3, r4, #8
   13e8c:	str	r0, [sp, #28]
   13e90:	str	r0, [sp, #4]
   13e94:	str	r1, [sp, #16]
   13e98:	str	r2, [sp, #12]
   13e9c:	str	r3, [sp, #8]
   13ea0:	mov	r0, r7
   13ea4:	mov	r1, r9
   13ea8:	mvn	r3, #0
   13eac:	mov	r2, sl
   13eb0:	bl	124a0 <__snprintf_chk@plt+0x1680>
   13eb4:	cmp	r9, r0
   13eb8:	bhi	13f20 <__snprintf_chk@plt+0x3100>
   13ebc:	add	r3, r4, #48	; 0x30
   13ec0:	add	r9, r0, #1
   13ec4:	cmp	r7, r3
   13ec8:	str	r9, [r6, r5, lsl #3]
   13ecc:	beq	13ed8 <__snprintf_chk@plt+0x30b8>
   13ed0:	mov	r0, r7
   13ed4:	bl	17628 <__snprintf_chk@plt+0x6808>
   13ed8:	mov	r0, r9
   13edc:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   13ee0:	ldr	ip, [r4, #44]	; 0x2c
   13ee4:	ldr	r3, [r4]
   13ee8:	ldr	lr, [r4, #40]	; 0x28
   13eec:	ldr	r4, [pc, #124]	; 13f70 <__snprintf_chk@plt+0x3150>
   13ef0:	mov	r2, sl
   13ef4:	mov	r1, r9
   13ef8:	str	r0, [fp, #4]
   13efc:	str	r4, [sp, #8]
   13f00:	ldr	r4, [sp, #28]
   13f04:	str	r3, [sp]
   13f08:	str	r4, [sp, #4]
   13f0c:	str	ip, [sp, #16]
   13f10:	str	lr, [sp, #12]
   13f14:	mvn	r3, #0
   13f18:	mov	r7, r0
   13f1c:	bl	124a0 <__snprintf_chk@plt+0x1680>
   13f20:	ldr	r3, [sp, #24]
   13f24:	mov	r0, r7
   13f28:	str	r3, [r8]
   13f2c:	add	sp, sp, #44	; 0x2c
   13f30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f34:	mov	r3, #8
   13f38:	sub	r2, r5, r2
   13f3c:	str	r3, [sp]
   13f40:	add	r1, sp, #36	; 0x24
   13f44:	add	r2, r2, #1
   13f48:	mvn	r3, #-2147483648	; 0x80000000
   13f4c:	bl	16f98 <__snprintf_chk@plt+0x6178>
   13f50:	mov	r6, r0
   13f54:	ldm	r7, {r0, r1}
   13f58:	str	r6, [r4]
   13f5c:	stm	r6, {r0, r1}
   13f60:	b	13e3c <__snprintf_chk@plt+0x301c>
   13f64:	bl	10e14 <abort@plt>
   13f68:	andeq	r9, r2, r0, ror #1
   13f6c:	andeq	r9, r2, ip, asr #2
   13f70:	andeq	r9, r2, r4, asr r1
   13f74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f78:	sub	sp, sp, #52	; 0x34
   13f7c:	mov	r5, r0
   13f80:	mov	sl, r1
   13f84:	mov	fp, r2
   13f88:	bl	10d60 <__errno_location@plt>
   13f8c:	ldr	r4, [pc, #408]	; 1412c <__snprintf_chk@plt+0x330c>
   13f90:	cmn	r5, #-2147483647	; 0x80000001
   13f94:	ldr	r6, [r4]
   13f98:	mov	r8, r0
   13f9c:	movne	r0, #0
   13fa0:	moveq	r0, #1
   13fa4:	ldr	r3, [r8]
   13fa8:	orrs	r0, r0, r5, lsr #31
   13fac:	str	r3, [sp, #28]
   13fb0:	bne	14128 <__snprintf_chk@plt+0x3308>
   13fb4:	ldr	r2, [r4, #4]
   13fb8:	cmp	r5, r2
   13fbc:	blt	1401c <__snprintf_chk@plt+0x31fc>
   13fc0:	add	r7, r4, #8
   13fc4:	cmp	r6, r7
   13fc8:	str	r2, [sp, #44]	; 0x2c
   13fcc:	beq	140f8 <__snprintf_chk@plt+0x32d8>
   13fd0:	mov	r3, #8
   13fd4:	sub	r2, r5, r2
   13fd8:	mov	r0, r6
   13fdc:	str	r3, [sp]
   13fe0:	add	r2, r2, #1
   13fe4:	mvn	r3, #-2147483648	; 0x80000000
   13fe8:	add	r1, sp, #44	; 0x2c
   13fec:	bl	16f98 <__snprintf_chk@plt+0x6178>
   13ff0:	mov	r6, r0
   13ff4:	str	r0, [r4]
   13ff8:	ldr	r0, [r4, #4]
   13ffc:	ldr	r2, [sp, #44]	; 0x2c
   14000:	mov	r1, #0
   14004:	sub	r2, r2, r0
   14008:	add	r0, r6, r0, lsl #3
   1400c:	lsl	r2, r2, #3
   14010:	bl	10d84 <memset@plt>
   14014:	ldr	r3, [sp, #44]	; 0x2c
   14018:	str	r3, [r4, #4]
   1401c:	ldr	r4, [pc, #268]	; 14130 <__snprintf_chk@plt+0x3310>
   14020:	add	r3, r6, r5, lsl #3
   14024:	str	r3, [sp, #32]
   14028:	ldr	r7, [r3, #4]
   1402c:	ldr	r0, [r4, #4]
   14030:	ldr	r3, [r4]
   14034:	ldr	r9, [r6, r5, lsl #3]
   14038:	ldr	r1, [r4, #44]	; 0x2c
   1403c:	ldr	r2, [r4, #40]	; 0x28
   14040:	orr	r0, r0, #1
   14044:	str	r3, [sp]
   14048:	add	r3, r4, #8
   1404c:	str	r0, [sp, #36]	; 0x24
   14050:	str	r0, [sp, #4]
   14054:	str	r1, [sp, #16]
   14058:	str	r2, [sp, #12]
   1405c:	str	r3, [sp, #8]
   14060:	mov	r0, r7
   14064:	mov	r1, r9
   14068:	mov	r3, fp
   1406c:	mov	r2, sl
   14070:	bl	124a0 <__snprintf_chk@plt+0x1680>
   14074:	cmp	r9, r0
   14078:	bhi	140e4 <__snprintf_chk@plt+0x32c4>
   1407c:	add	r3, r4, #48	; 0x30
   14080:	add	r9, r0, #1
   14084:	cmp	r7, r3
   14088:	str	r9, [r6, r5, lsl #3]
   1408c:	beq	14098 <__snprintf_chk@plt+0x3278>
   14090:	mov	r0, r7
   14094:	bl	17628 <__snprintf_chk@plt+0x6808>
   14098:	mov	r0, r9
   1409c:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   140a0:	ldr	ip, [sp, #32]
   140a4:	ldr	lr, [r4, #44]	; 0x2c
   140a8:	ldr	r5, [r4, #40]	; 0x28
   140ac:	mov	r3, fp
   140b0:	mov	r2, sl
   140b4:	mov	r1, r9
   140b8:	str	r0, [ip, #4]
   140bc:	ldr	ip, [r4]
   140c0:	ldr	r4, [pc, #108]	; 14134 <__snprintf_chk@plt+0x3314>
   140c4:	str	lr, [sp, #16]
   140c8:	str	r4, [sp, #8]
   140cc:	ldr	r4, [sp, #36]	; 0x24
   140d0:	str	r5, [sp, #12]
   140d4:	str	r4, [sp, #4]
   140d8:	str	ip, [sp]
   140dc:	mov	r7, r0
   140e0:	bl	124a0 <__snprintf_chk@plt+0x1680>
   140e4:	ldr	r3, [sp, #28]
   140e8:	mov	r0, r7
   140ec:	str	r3, [r8]
   140f0:	add	sp, sp, #52	; 0x34
   140f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140f8:	mov	r3, #8
   140fc:	sub	r2, r5, r2
   14100:	str	r3, [sp]
   14104:	add	r1, sp, #44	; 0x2c
   14108:	add	r2, r2, #1
   1410c:	mvn	r3, #-2147483648	; 0x80000000
   14110:	bl	16f98 <__snprintf_chk@plt+0x6178>
   14114:	mov	r6, r0
   14118:	ldm	r7, {r0, r1}
   1411c:	str	r6, [r4]
   14120:	stm	r6, {r0, r1}
   14124:	b	13ff8 <__snprintf_chk@plt+0x31d8>
   14128:	bl	10e14 <abort@plt>
   1412c:	andeq	r9, r2, r0, ror #1
   14130:	andeq	r9, r2, ip, asr #2
   14134:	andeq	r9, r2, r4, asr r1
   14138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1413c:	sub	sp, sp, #44	; 0x2c
   14140:	mov	sl, r0
   14144:	bl	10d60 <__errno_location@plt>
   14148:	ldr	r4, [pc, #352]	; 142b0 <__snprintf_chk@plt+0x3490>
   1414c:	ldr	r2, [r4, #4]
   14150:	ldr	r5, [r4]
   14154:	cmp	r2, #0
   14158:	ldr	r3, [r0]
   1415c:	mov	r8, r0
   14160:	str	r3, [sp, #28]
   14164:	bgt	141c0 <__snprintf_chk@plt+0x33a0>
   14168:	add	r6, r4, #8
   1416c:	cmp	r5, r6
   14170:	str	r2, [sp, #36]	; 0x24
   14174:	beq	14280 <__snprintf_chk@plt+0x3460>
   14178:	mov	r3, #8
   1417c:	mov	r0, r5
   14180:	str	r3, [sp]
   14184:	rsb	r2, r2, #1
   14188:	mvn	r3, #-2147483648	; 0x80000000
   1418c:	add	r1, sp, #36	; 0x24
   14190:	bl	16f98 <__snprintf_chk@plt+0x6178>
   14194:	mov	r5, r0
   14198:	str	r0, [r4]
   1419c:	ldr	r0, [r4, #4]
   141a0:	ldr	r2, [sp, #36]	; 0x24
   141a4:	mov	r1, #0
   141a8:	sub	r2, r2, r0
   141ac:	add	r0, r5, r0, lsl #3
   141b0:	lsl	r2, r2, #3
   141b4:	bl	10d84 <memset@plt>
   141b8:	ldr	r3, [sp, #36]	; 0x24
   141bc:	str	r3, [r4, #4]
   141c0:	ldr	r4, [pc, #236]	; 142b4 <__snprintf_chk@plt+0x3494>
   141c4:	ldr	r9, [r5]
   141c8:	ldr	r6, [r5, #4]
   141cc:	ldr	r7, [r4, #4]
   141d0:	ldr	r1, [r4, #44]	; 0x2c
   141d4:	ldr	r2, [r4, #40]	; 0x28
   141d8:	ldr	r3, [r4]
   141dc:	orr	r7, r7, #1
   141e0:	add	fp, r4, #8
   141e4:	str	r1, [sp, #16]
   141e8:	str	r2, [sp, #12]
   141ec:	str	r3, [sp]
   141f0:	str	r7, [sp, #4]
   141f4:	str	fp, [sp, #8]
   141f8:	mov	r1, r9
   141fc:	mov	r0, r6
   14200:	mvn	r3, #0
   14204:	mov	r2, sl
   14208:	bl	124a0 <__snprintf_chk@plt+0x1680>
   1420c:	cmp	r9, r0
   14210:	bhi	1426c <__snprintf_chk@plt+0x344c>
   14214:	add	r3, r4, #48	; 0x30
   14218:	add	r9, r0, #1
   1421c:	cmp	r6, r3
   14220:	str	r9, [r5]
   14224:	beq	14230 <__snprintf_chk@plt+0x3410>
   14228:	mov	r0, r6
   1422c:	bl	17628 <__snprintf_chk@plt+0x6808>
   14230:	mov	r0, r9
   14234:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   14238:	ldr	ip, [r4, #44]	; 0x2c
   1423c:	ldr	r3, [r4]
   14240:	ldr	lr, [r4, #40]	; 0x28
   14244:	mov	r2, sl
   14248:	mov	r1, r9
   1424c:	str	r0, [r5, #4]
   14250:	str	r3, [sp]
   14254:	stmib	sp, {r7, fp}
   14258:	str	ip, [sp, #16]
   1425c:	str	lr, [sp, #12]
   14260:	mvn	r3, #0
   14264:	mov	r6, r0
   14268:	bl	124a0 <__snprintf_chk@plt+0x1680>
   1426c:	ldr	r3, [sp, #28]
   14270:	mov	r0, r6
   14274:	str	r3, [r8]
   14278:	add	sp, sp, #44	; 0x2c
   1427c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14280:	mov	r3, #8
   14284:	str	r3, [sp]
   14288:	add	r1, sp, #36	; 0x24
   1428c:	rsb	r2, r2, #1
   14290:	mvn	r3, #-2147483648	; 0x80000000
   14294:	mov	r0, #0
   14298:	bl	16f98 <__snprintf_chk@plt+0x6178>
   1429c:	mov	r5, r0
   142a0:	ldm	r6, {r0, r1}
   142a4:	str	r5, [r4]
   142a8:	stm	r5, {r0, r1}
   142ac:	b	1419c <__snprintf_chk@plt+0x337c>
   142b0:	andeq	r9, r2, r0, ror #1
   142b4:	andeq	r9, r2, ip, asr #2
   142b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142bc:	sub	sp, sp, #44	; 0x2c
   142c0:	mov	r9, r0
   142c4:	mov	sl, r1
   142c8:	bl	10d60 <__errno_location@plt>
   142cc:	ldr	r4, [pc, #364]	; 14440 <__snprintf_chk@plt+0x3620>
   142d0:	ldr	r2, [r4, #4]
   142d4:	ldr	r5, [r4]
   142d8:	cmp	r2, #0
   142dc:	ldr	r3, [r0]
   142e0:	mov	r7, r0
   142e4:	str	r3, [sp, #24]
   142e8:	bgt	14344 <__snprintf_chk@plt+0x3524>
   142ec:	add	r6, r4, #8
   142f0:	cmp	r5, r6
   142f4:	str	r2, [sp, #36]	; 0x24
   142f8:	beq	14410 <__snprintf_chk@plt+0x35f0>
   142fc:	mov	r3, #8
   14300:	mov	r0, r5
   14304:	str	r3, [sp]
   14308:	rsb	r2, r2, #1
   1430c:	mvn	r3, #-2147483648	; 0x80000000
   14310:	add	r1, sp, #36	; 0x24
   14314:	bl	16f98 <__snprintf_chk@plt+0x6178>
   14318:	mov	r5, r0
   1431c:	str	r0, [r4]
   14320:	ldr	r0, [r4, #4]
   14324:	ldr	r2, [sp, #36]	; 0x24
   14328:	mov	r1, #0
   1432c:	sub	r2, r2, r0
   14330:	add	r0, r5, r0, lsl #3
   14334:	lsl	r2, r2, #3
   14338:	bl	10d84 <memset@plt>
   1433c:	ldr	r3, [sp, #36]	; 0x24
   14340:	str	r3, [r4, #4]
   14344:	ldr	r4, [pc, #248]	; 14444 <__snprintf_chk@plt+0x3624>
   14348:	ldr	r8, [r5]
   1434c:	ldr	r6, [r5, #4]
   14350:	ldr	r0, [r4, #4]
   14354:	ldr	r1, [r4, #44]	; 0x2c
   14358:	ldr	r2, [r4, #40]	; 0x28
   1435c:	ldr	r3, [r4]
   14360:	orr	r0, r0, #1
   14364:	add	fp, r4, #8
   14368:	str	r0, [sp, #28]
   1436c:	str	r0, [sp, #4]
   14370:	str	r1, [sp, #16]
   14374:	str	r2, [sp, #12]
   14378:	str	r3, [sp]
   1437c:	str	fp, [sp, #8]
   14380:	mov	r1, r8
   14384:	mov	r0, r6
   14388:	mov	r3, sl
   1438c:	mov	r2, r9
   14390:	bl	124a0 <__snprintf_chk@plt+0x1680>
   14394:	cmp	r8, r0
   14398:	bhi	143fc <__snprintf_chk@plt+0x35dc>
   1439c:	add	r3, r4, #48	; 0x30
   143a0:	add	r8, r0, #1
   143a4:	cmp	r6, r3
   143a8:	str	r8, [r5]
   143ac:	beq	143b8 <__snprintf_chk@plt+0x3598>
   143b0:	mov	r0, r6
   143b4:	bl	17628 <__snprintf_chk@plt+0x6808>
   143b8:	mov	r0, r8
   143bc:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   143c0:	ldr	lr, [r4, #44]	; 0x2c
   143c4:	ldr	ip, [r4]
   143c8:	mov	r3, sl
   143cc:	mov	r2, r9
   143d0:	mov	r1, r8
   143d4:	str	r0, [r5, #4]
   143d8:	ldr	r5, [r4, #40]	; 0x28
   143dc:	ldr	r4, [sp, #28]
   143e0:	str	fp, [sp, #8]
   143e4:	str	r4, [sp, #4]
   143e8:	str	lr, [sp, #16]
   143ec:	str	r5, [sp, #12]
   143f0:	str	ip, [sp]
   143f4:	mov	r6, r0
   143f8:	bl	124a0 <__snprintf_chk@plt+0x1680>
   143fc:	ldr	r3, [sp, #24]
   14400:	mov	r0, r6
   14404:	str	r3, [r7]
   14408:	add	sp, sp, #44	; 0x2c
   1440c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14410:	mov	r3, #8
   14414:	str	r3, [sp]
   14418:	add	r1, sp, #36	; 0x24
   1441c:	rsb	r2, r2, #1
   14420:	mvn	r3, #-2147483648	; 0x80000000
   14424:	mov	r0, #0
   14428:	bl	16f98 <__snprintf_chk@plt+0x6178>
   1442c:	mov	r5, r0
   14430:	ldm	r6, {r0, r1}
   14434:	str	r5, [r4]
   14438:	stm	r5, {r0, r1}
   1443c:	b	14320 <__snprintf_chk@plt+0x3500>
   14440:	andeq	r9, r2, r0, ror #1
   14444:	andeq	r9, r2, ip, asr #2
   14448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1444c:	sub	sp, sp, #132	; 0x84
   14450:	mov	r5, r1
   14454:	mov	r4, r0
   14458:	mov	r9, r2
   1445c:	add	r0, sp, #80	; 0x50
   14460:	mov	r2, #48	; 0x30
   14464:	mov	r1, #0
   14468:	bl	10d84 <memset@plt>
   1446c:	cmp	r5, #10
   14470:	beq	14628 <__snprintf_chk@plt+0x3808>
   14474:	add	lr, sp, #80	; 0x50
   14478:	str	r5, [sp, #80]	; 0x50
   1447c:	ldm	lr!, {r0, r1, r2, r3}
   14480:	add	ip, sp, #32
   14484:	ldr	r6, [pc, #416]	; 1462c <__snprintf_chk@plt+0x380c>
   14488:	stmia	ip!, {r0, r1, r2, r3}
   1448c:	ldm	lr!, {r0, r1, r2, r3}
   14490:	stmia	ip!, {r0, r1, r2, r3}
   14494:	ldm	lr, {r0, r1, r2, r3}
   14498:	stm	ip, {r0, r1, r2, r3}
   1449c:	bl	10d60 <__errno_location@plt>
   144a0:	cmn	r4, #-2147483647	; 0x80000001
   144a4:	ldr	r5, [r6]
   144a8:	mov	r7, r0
   144ac:	movne	r0, #0
   144b0:	moveq	r0, #1
   144b4:	ldr	r3, [r7]
   144b8:	orrs	r0, r0, r4, lsr #31
   144bc:	str	r3, [sp, #24]
   144c0:	bne	14628 <__snprintf_chk@plt+0x3808>
   144c4:	ldr	r2, [r6, #4]
   144c8:	cmp	r4, r2
   144cc:	blt	1452c <__snprintf_chk@plt+0x370c>
   144d0:	add	r8, r6, #8
   144d4:	cmp	r5, r8
   144d8:	str	r2, [sp, #80]	; 0x50
   144dc:	beq	145f8 <__snprintf_chk@plt+0x37d8>
   144e0:	mov	r3, #8
   144e4:	sub	r2, r4, r2
   144e8:	mov	r0, r5
   144ec:	str	r3, [sp]
   144f0:	add	r2, r2, #1
   144f4:	add	r1, sp, #80	; 0x50
   144f8:	mvn	r3, #-2147483648	; 0x80000000
   144fc:	bl	16f98 <__snprintf_chk@plt+0x6178>
   14500:	mov	r5, r0
   14504:	str	r0, [r6]
   14508:	ldr	r0, [r6, #4]
   1450c:	ldr	r2, [sp, #80]	; 0x50
   14510:	mov	r1, #0
   14514:	sub	r2, r2, r0
   14518:	add	r0, r5, r0, lsl #3
   1451c:	lsl	r2, r2, #3
   14520:	bl	10d84 <memset@plt>
   14524:	ldr	r3, [sp, #80]	; 0x50
   14528:	str	r3, [r6, #4]
   1452c:	add	fp, r5, r4, lsl #3
   14530:	ldr	r1, [sp, #36]	; 0x24
   14534:	ldr	r8, [r5, r4, lsl #3]
   14538:	ldr	r6, [fp, #4]
   1453c:	ldr	r2, [sp, #72]	; 0x48
   14540:	ldr	r3, [sp, #32]
   14544:	ldr	ip, [sp, #76]	; 0x4c
   14548:	orr	r1, r1, #1
   1454c:	add	sl, sp, #40	; 0x28
   14550:	str	r1, [sp, #28]
   14554:	str	r1, [sp, #4]
   14558:	str	r2, [sp, #12]
   1455c:	str	r3, [sp]
   14560:	mov	r0, r6
   14564:	mov	r1, r8
   14568:	str	ip, [sp, #16]
   1456c:	str	sl, [sp, #8]
   14570:	mvn	r3, #0
   14574:	mov	r2, r9
   14578:	bl	124a0 <__snprintf_chk@plt+0x1680>
   1457c:	cmp	r8, r0
   14580:	bhi	145e4 <__snprintf_chk@plt+0x37c4>
   14584:	ldr	r3, [pc, #164]	; 14630 <__snprintf_chk@plt+0x3810>
   14588:	add	r8, r0, #1
   1458c:	cmp	r6, r3
   14590:	str	r8, [r5, r4, lsl #3]
   14594:	beq	145a0 <__snprintf_chk@plt+0x3780>
   14598:	mov	r0, r6
   1459c:	bl	17628 <__snprintf_chk@plt+0x6808>
   145a0:	mov	r0, r8
   145a4:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   145a8:	ldr	lr, [sp, #76]	; 0x4c
   145ac:	ldr	r3, [sp, #32]
   145b0:	ldr	ip, [sp, #72]	; 0x48
   145b4:	ldr	r4, [sp, #28]
   145b8:	mov	r2, r9
   145bc:	mov	r1, r8
   145c0:	str	r0, [fp, #4]
   145c4:	str	r3, [sp]
   145c8:	str	sl, [sp, #8]
   145cc:	str	r4, [sp, #4]
   145d0:	str	lr, [sp, #16]
   145d4:	str	ip, [sp, #12]
   145d8:	mvn	r3, #0
   145dc:	mov	r6, r0
   145e0:	bl	124a0 <__snprintf_chk@plt+0x1680>
   145e4:	ldr	r3, [sp, #24]
   145e8:	mov	r0, r6
   145ec:	str	r3, [r7]
   145f0:	add	sp, sp, #132	; 0x84
   145f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145f8:	mov	r3, #8
   145fc:	sub	r2, r4, r2
   14600:	add	r1, sp, #80	; 0x50
   14604:	str	r3, [sp]
   14608:	add	r2, r2, #1
   1460c:	mvn	r3, #-2147483648	; 0x80000000
   14610:	bl	16f98 <__snprintf_chk@plt+0x6178>
   14614:	mov	r5, r0
   14618:	ldm	r8, {r0, r1}
   1461c:	str	r5, [r6]
   14620:	stm	r5, {r0, r1}
   14624:	b	14508 <__snprintf_chk@plt+0x36e8>
   14628:	bl	10e14 <abort@plt>
   1462c:	andeq	r9, r2, r0, ror #1
   14630:	andeq	r9, r2, ip, ror r1
   14634:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14638:	sub	sp, sp, #132	; 0x84
   1463c:	mov	r5, r1
   14640:	mov	r4, r0
   14644:	mov	r9, r2
   14648:	add	r0, sp, #80	; 0x50
   1464c:	mov	r2, #48	; 0x30
   14650:	mov	r1, #0
   14654:	mov	sl, r3
   14658:	bl	10d84 <memset@plt>
   1465c:	cmp	r5, #10
   14660:	beq	1481c <__snprintf_chk@plt+0x39fc>
   14664:	add	lr, sp, #80	; 0x50
   14668:	str	r5, [sp, #80]	; 0x50
   1466c:	ldm	lr!, {r0, r1, r2, r3}
   14670:	add	ip, sp, #32
   14674:	ldr	r6, [pc, #420]	; 14820 <__snprintf_chk@plt+0x3a00>
   14678:	stmia	ip!, {r0, r1, r2, r3}
   1467c:	ldm	lr!, {r0, r1, r2, r3}
   14680:	stmia	ip!, {r0, r1, r2, r3}
   14684:	ldm	lr, {r0, r1, r2, r3}
   14688:	stm	ip, {r0, r1, r2, r3}
   1468c:	bl	10d60 <__errno_location@plt>
   14690:	cmn	r4, #-2147483647	; 0x80000001
   14694:	ldr	r5, [r6]
   14698:	mov	r7, r0
   1469c:	movne	r0, #0
   146a0:	moveq	r0, #1
   146a4:	ldr	r3, [r7]
   146a8:	orrs	r0, r0, r4, lsr #31
   146ac:	str	r3, [sp, #24]
   146b0:	bne	1481c <__snprintf_chk@plt+0x39fc>
   146b4:	ldr	r2, [r6, #4]
   146b8:	cmp	r4, r2
   146bc:	blt	1471c <__snprintf_chk@plt+0x38fc>
   146c0:	add	r8, r6, #8
   146c4:	cmp	r5, r8
   146c8:	str	r2, [sp, #80]	; 0x50
   146cc:	beq	147ec <__snprintf_chk@plt+0x39cc>
   146d0:	mov	r3, #8
   146d4:	sub	r2, r4, r2
   146d8:	mov	r0, r5
   146dc:	str	r3, [sp]
   146e0:	add	r2, r2, #1
   146e4:	add	r1, sp, #80	; 0x50
   146e8:	mvn	r3, #-2147483648	; 0x80000000
   146ec:	bl	16f98 <__snprintf_chk@plt+0x6178>
   146f0:	mov	r5, r0
   146f4:	str	r0, [r6]
   146f8:	ldr	r0, [r6, #4]
   146fc:	ldr	r2, [sp, #80]	; 0x50
   14700:	mov	r1, #0
   14704:	sub	r2, r2, r0
   14708:	add	r0, r5, r0, lsl #3
   1470c:	lsl	r2, r2, #3
   14710:	bl	10d84 <memset@plt>
   14714:	ldr	r3, [sp, #80]	; 0x50
   14718:	str	r3, [r6, #4]
   1471c:	add	fp, r5, r4, lsl #3
   14720:	ldr	r3, [sp, #32]
   14724:	ldr	r1, [sp, #36]	; 0x24
   14728:	ldr	r8, [r5, r4, lsl #3]
   1472c:	ldr	r6, [fp, #4]
   14730:	ldr	r2, [sp, #72]	; 0x48
   14734:	ldr	ip, [sp, #76]	; 0x4c
   14738:	orr	r1, r1, #1
   1473c:	str	r3, [sp]
   14740:	add	r3, sp, #40	; 0x28
   14744:	str	r1, [sp, #28]
   14748:	str	r1, [sp, #4]
   1474c:	str	r2, [sp, #12]
   14750:	str	r3, [sp, #8]
   14754:	mov	r0, r6
   14758:	mov	r1, r8
   1475c:	str	ip, [sp, #16]
   14760:	mov	r3, sl
   14764:	mov	r2, r9
   14768:	bl	124a0 <__snprintf_chk@plt+0x1680>
   1476c:	cmp	r8, r0
   14770:	bhi	147d8 <__snprintf_chk@plt+0x39b8>
   14774:	ldr	r3, [pc, #168]	; 14824 <__snprintf_chk@plt+0x3a04>
   14778:	add	r8, r0, #1
   1477c:	cmp	r6, r3
   14780:	str	r8, [r5, r4, lsl #3]
   14784:	beq	14790 <__snprintf_chk@plt+0x3970>
   14788:	mov	r0, r6
   1478c:	bl	17628 <__snprintf_chk@plt+0x6808>
   14790:	mov	r0, r8
   14794:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   14798:	add	lr, sp, #40	; 0x28
   1479c:	ldr	ip, [sp, #76]	; 0x4c
   147a0:	ldr	r4, [sp, #72]	; 0x48
   147a4:	ldr	r5, [sp, #28]
   147a8:	mov	r3, sl
   147ac:	mov	r2, r9
   147b0:	mov	r1, r8
   147b4:	str	r0, [fp, #4]
   147b8:	str	lr, [sp, #8]
   147bc:	ldr	lr, [sp, #32]
   147c0:	str	r5, [sp, #4]
   147c4:	str	ip, [sp, #16]
   147c8:	str	r4, [sp, #12]
   147cc:	str	lr, [sp]
   147d0:	mov	r6, r0
   147d4:	bl	124a0 <__snprintf_chk@plt+0x1680>
   147d8:	ldr	r3, [sp, #24]
   147dc:	mov	r0, r6
   147e0:	str	r3, [r7]
   147e4:	add	sp, sp, #132	; 0x84
   147e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147ec:	mov	r3, #8
   147f0:	sub	r2, r4, r2
   147f4:	add	r1, sp, #80	; 0x50
   147f8:	str	r3, [sp]
   147fc:	add	r2, r2, #1
   14800:	mvn	r3, #-2147483648	; 0x80000000
   14804:	bl	16f98 <__snprintf_chk@plt+0x6178>
   14808:	mov	r5, r0
   1480c:	ldm	r8, {r0, r1}
   14810:	str	r5, [r6]
   14814:	stm	r5, {r0, r1}
   14818:	b	146f8 <__snprintf_chk@plt+0x38d8>
   1481c:	bl	10e14 <abort@plt>
   14820:	andeq	r9, r2, r0, ror #1
   14824:	andeq	r9, r2, ip, ror r1
   14828:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1482c:	sub	sp, sp, #124	; 0x7c
   14830:	mov	r4, r0
   14834:	mov	r9, r1
   14838:	add	r0, sp, #72	; 0x48
   1483c:	mov	r2, #48	; 0x30
   14840:	mov	r1, #0
   14844:	bl	10d84 <memset@plt>
   14848:	cmp	r4, #10
   1484c:	beq	149d8 <__snprintf_chk@plt+0x3bb8>
   14850:	add	lr, sp, #72	; 0x48
   14854:	str	r4, [sp, #72]	; 0x48
   14858:	ldm	lr!, {r0, r1, r2, r3}
   1485c:	add	ip, sp, #24
   14860:	ldr	r5, [pc, #372]	; 149dc <__snprintf_chk@plt+0x3bbc>
   14864:	stmia	ip!, {r0, r1, r2, r3}
   14868:	ldm	lr!, {r0, r1, r2, r3}
   1486c:	stmia	ip!, {r0, r1, r2, r3}
   14870:	ldm	lr, {r0, r1, r2, r3}
   14874:	stm	ip, {r0, r1, r2, r3}
   14878:	bl	10d60 <__errno_location@plt>
   1487c:	ldr	r2, [r5, #4]
   14880:	ldr	r4, [r5]
   14884:	cmp	r2, #0
   14888:	mov	r7, r0
   1488c:	ldr	fp, [r0]
   14890:	bgt	148ec <__snprintf_chk@plt+0x3acc>
   14894:	add	r6, r5, #8
   14898:	cmp	r4, r6
   1489c:	str	r2, [sp, #72]	; 0x48
   148a0:	beq	149a8 <__snprintf_chk@plt+0x3b88>
   148a4:	mov	r3, #8
   148a8:	mov	r0, r4
   148ac:	str	r3, [sp]
   148b0:	rsb	r2, r2, #1
   148b4:	add	r1, sp, #72	; 0x48
   148b8:	mvn	r3, #-2147483648	; 0x80000000
   148bc:	bl	16f98 <__snprintf_chk@plt+0x6178>
   148c0:	mov	r4, r0
   148c4:	str	r0, [r5]
   148c8:	ldr	r0, [r5, #4]
   148cc:	ldr	r2, [sp, #72]	; 0x48
   148d0:	mov	r1, #0
   148d4:	sub	r2, r2, r0
   148d8:	add	r0, r4, r0, lsl #3
   148dc:	lsl	r2, r2, #3
   148e0:	bl	10d84 <memset@plt>
   148e4:	ldr	r3, [sp, #72]	; 0x48
   148e8:	str	r3, [r5, #4]
   148ec:	ldr	r6, [sp, #28]
   148f0:	ldr	r8, [r4]
   148f4:	ldr	r5, [r4, #4]
   148f8:	ldr	r2, [sp, #64]	; 0x40
   148fc:	ldr	r3, [sp, #24]
   14900:	ldr	ip, [sp, #68]	; 0x44
   14904:	orr	r6, r6, #1
   14908:	add	sl, sp, #32
   1490c:	str	r2, [sp, #12]
   14910:	str	r3, [sp]
   14914:	str	r6, [sp, #4]
   14918:	mov	r1, r8
   1491c:	mov	r0, r5
   14920:	str	ip, [sp, #16]
   14924:	str	sl, [sp, #8]
   14928:	mvn	r3, #0
   1492c:	mov	r2, r9
   14930:	bl	124a0 <__snprintf_chk@plt+0x1680>
   14934:	cmp	r8, r0
   14938:	bhi	14998 <__snprintf_chk@plt+0x3b78>
   1493c:	ldr	r3, [pc, #156]	; 149e0 <__snprintf_chk@plt+0x3bc0>
   14940:	add	r8, r0, #1
   14944:	cmp	r5, r3
   14948:	str	r8, [r4]
   1494c:	beq	14958 <__snprintf_chk@plt+0x3b38>
   14950:	mov	r0, r5
   14954:	bl	17628 <__snprintf_chk@plt+0x6808>
   14958:	mov	r0, r8
   1495c:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   14960:	ldr	lr, [sp, #68]	; 0x44
   14964:	ldr	r3, [sp, #24]
   14968:	ldr	ip, [sp, #64]	; 0x40
   1496c:	mov	r2, r9
   14970:	mov	r1, r8
   14974:	str	r0, [r4, #4]
   14978:	str	r3, [sp]
   1497c:	str	sl, [sp, #8]
   14980:	str	r6, [sp, #4]
   14984:	str	lr, [sp, #16]
   14988:	str	ip, [sp, #12]
   1498c:	mvn	r3, #0
   14990:	mov	r5, r0
   14994:	bl	124a0 <__snprintf_chk@plt+0x1680>
   14998:	mov	r0, r5
   1499c:	str	fp, [r7]
   149a0:	add	sp, sp, #124	; 0x7c
   149a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149a8:	mov	r3, #8
   149ac:	add	r1, sp, #72	; 0x48
   149b0:	str	r3, [sp]
   149b4:	rsb	r2, r2, #1
   149b8:	mvn	r3, #-2147483648	; 0x80000000
   149bc:	mov	r0, #0
   149c0:	bl	16f98 <__snprintf_chk@plt+0x6178>
   149c4:	mov	r4, r0
   149c8:	ldm	r6, {r0, r1}
   149cc:	str	r4, [r5]
   149d0:	stm	r4, {r0, r1}
   149d4:	b	148c8 <__snprintf_chk@plt+0x3aa8>
   149d8:	bl	10e14 <abort@plt>
   149dc:	andeq	r9, r2, r0, ror #1
   149e0:	andeq	r9, r2, ip, ror r1
   149e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149e8:	sub	sp, sp, #132	; 0x84
   149ec:	mov	r4, r0
   149f0:	mov	r9, r1
   149f4:	mov	sl, r2
   149f8:	add	r0, sp, #80	; 0x50
   149fc:	mov	r2, #48	; 0x30
   14a00:	mov	r1, #0
   14a04:	bl	10d84 <memset@plt>
   14a08:	cmp	r4, #10
   14a0c:	beq	14ba0 <__snprintf_chk@plt+0x3d80>
   14a10:	add	lr, sp, #80	; 0x50
   14a14:	str	r4, [sp, #80]	; 0x50
   14a18:	ldm	lr!, {r0, r1, r2, r3}
   14a1c:	add	ip, sp, #32
   14a20:	ldr	r5, [pc, #380]	; 14ba4 <__snprintf_chk@plt+0x3d84>
   14a24:	stmia	ip!, {r0, r1, r2, r3}
   14a28:	ldm	lr!, {r0, r1, r2, r3}
   14a2c:	stmia	ip!, {r0, r1, r2, r3}
   14a30:	ldm	lr, {r0, r1, r2, r3}
   14a34:	stm	ip, {r0, r1, r2, r3}
   14a38:	bl	10d60 <__errno_location@plt>
   14a3c:	ldr	r2, [r5, #4]
   14a40:	ldr	r4, [r5]
   14a44:	cmp	r2, #0
   14a48:	ldr	r3, [r0]
   14a4c:	mov	r7, r0
   14a50:	str	r3, [sp, #28]
   14a54:	bgt	14ab0 <__snprintf_chk@plt+0x3c90>
   14a58:	add	r6, r5, #8
   14a5c:	cmp	r4, r6
   14a60:	str	r2, [sp, #80]	; 0x50
   14a64:	beq	14b70 <__snprintf_chk@plt+0x3d50>
   14a68:	mov	r3, #8
   14a6c:	mov	r0, r4
   14a70:	str	r3, [sp]
   14a74:	rsb	r2, r2, #1
   14a78:	add	r1, sp, #80	; 0x50
   14a7c:	mvn	r3, #-2147483648	; 0x80000000
   14a80:	bl	16f98 <__snprintf_chk@plt+0x6178>
   14a84:	mov	r4, r0
   14a88:	str	r0, [r5]
   14a8c:	ldr	r0, [r5, #4]
   14a90:	ldr	r2, [sp, #80]	; 0x50
   14a94:	mov	r1, #0
   14a98:	sub	r2, r2, r0
   14a9c:	add	r0, r4, r0, lsl #3
   14aa0:	lsl	r2, r2, #3
   14aa4:	bl	10d84 <memset@plt>
   14aa8:	ldr	r3, [sp, #80]	; 0x50
   14aac:	str	r3, [r5, #4]
   14ab0:	ldr	r6, [sp, #36]	; 0x24
   14ab4:	ldr	r8, [r4]
   14ab8:	ldr	r5, [r4, #4]
   14abc:	ldr	r2, [sp, #72]	; 0x48
   14ac0:	ldr	r3, [sp, #32]
   14ac4:	ldr	ip, [sp, #76]	; 0x4c
   14ac8:	orr	r6, r6, #1
   14acc:	add	fp, sp, #40	; 0x28
   14ad0:	str	r2, [sp, #12]
   14ad4:	str	r3, [sp]
   14ad8:	str	r6, [sp, #4]
   14adc:	mov	r1, r8
   14ae0:	mov	r0, r5
   14ae4:	str	ip, [sp, #16]
   14ae8:	str	fp, [sp, #8]
   14aec:	mov	r3, sl
   14af0:	mov	r2, r9
   14af4:	bl	124a0 <__snprintf_chk@plt+0x1680>
   14af8:	cmp	r8, r0
   14afc:	bhi	14b5c <__snprintf_chk@plt+0x3d3c>
   14b00:	ldr	r3, [pc, #160]	; 14ba8 <__snprintf_chk@plt+0x3d88>
   14b04:	add	r8, r0, #1
   14b08:	cmp	r5, r3
   14b0c:	str	r8, [r4]
   14b10:	beq	14b1c <__snprintf_chk@plt+0x3cfc>
   14b14:	mov	r0, r5
   14b18:	bl	17628 <__snprintf_chk@plt+0x6808>
   14b1c:	mov	r0, r8
   14b20:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   14b24:	ldr	ip, [sp, #76]	; 0x4c
   14b28:	ldr	lr, [sp, #32]
   14b2c:	mov	r3, sl
   14b30:	mov	r2, r9
   14b34:	mov	r1, r8
   14b38:	str	r0, [r4, #4]
   14b3c:	ldr	r4, [sp, #72]	; 0x48
   14b40:	str	fp, [sp, #8]
   14b44:	str	r6, [sp, #4]
   14b48:	str	ip, [sp, #16]
   14b4c:	str	r4, [sp, #12]
   14b50:	str	lr, [sp]
   14b54:	mov	r5, r0
   14b58:	bl	124a0 <__snprintf_chk@plt+0x1680>
   14b5c:	ldr	r3, [sp, #28]
   14b60:	mov	r0, r5
   14b64:	str	r3, [r7]
   14b68:	add	sp, sp, #132	; 0x84
   14b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b70:	mov	r3, #8
   14b74:	add	r1, sp, #80	; 0x50
   14b78:	str	r3, [sp]
   14b7c:	rsb	r2, r2, #1
   14b80:	mvn	r3, #-2147483648	; 0x80000000
   14b84:	mov	r0, #0
   14b88:	bl	16f98 <__snprintf_chk@plt+0x6178>
   14b8c:	mov	r4, r0
   14b90:	ldm	r6, {r0, r1}
   14b94:	str	r4, [r5]
   14b98:	stm	r4, {r0, r1}
   14b9c:	b	14a8c <__snprintf_chk@plt+0x3c6c>
   14ba0:	bl	10e14 <abort@plt>
   14ba4:	andeq	r9, r2, r0, ror #1
   14ba8:	andeq	r9, r2, ip, ror r1
   14bac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bb0:	mov	r4, r2
   14bb4:	ldr	lr, [pc, #432]	; 14d6c <__snprintf_chk@plt+0x3f4c>
   14bb8:	mov	sl, r0
   14bbc:	mov	fp, r1
   14bc0:	ldm	lr!, {r0, r1, r2, r3}
   14bc4:	sub	sp, sp, #92	; 0x5c
   14bc8:	add	ip, sp, #40	; 0x28
   14bcc:	lsr	r7, r4, #5
   14bd0:	stmia	ip!, {r0, r1, r2, r3}
   14bd4:	add	r6, sp, #48	; 0x30
   14bd8:	ldm	lr!, {r0, r1, r2, r3}
   14bdc:	and	r4, r4, #31
   14be0:	ldr	r5, [pc, #392]	; 14d70 <__snprintf_chk@plt+0x3f50>
   14be4:	stmia	ip!, {r0, r1, r2, r3}
   14be8:	ldm	lr, {r0, r1, r2, r3}
   14bec:	stm	ip, {r0, r1, r2, r3}
   14bf0:	ldr	r2, [r6, r7, lsl #2]
   14bf4:	lsr	r3, r2, r4
   14bf8:	eor	r3, r3, #1
   14bfc:	and	r3, r3, #1
   14c00:	eor	r4, r2, r3, lsl r4
   14c04:	str	r4, [r6, r7, lsl #2]
   14c08:	bl	10d60 <__errno_location@plt>
   14c0c:	ldr	r2, [r5, #4]
   14c10:	ldr	r4, [r5]
   14c14:	cmp	r2, #0
   14c18:	ldr	r3, [r0]
   14c1c:	mov	r8, r0
   14c20:	str	r3, [sp, #28]
   14c24:	bgt	14c80 <__snprintf_chk@plt+0x3e60>
   14c28:	add	r7, r5, #8
   14c2c:	cmp	r4, r7
   14c30:	str	r2, [sp, #36]	; 0x24
   14c34:	beq	14d3c <__snprintf_chk@plt+0x3f1c>
   14c38:	mov	r3, #8
   14c3c:	mov	r0, r4
   14c40:	str	r3, [sp]
   14c44:	rsb	r2, r2, #1
   14c48:	mvn	r3, #-2147483648	; 0x80000000
   14c4c:	add	r1, sp, #36	; 0x24
   14c50:	bl	16f98 <__snprintf_chk@plt+0x6178>
   14c54:	mov	r4, r0
   14c58:	str	r0, [r5]
   14c5c:	ldr	r0, [r5, #4]
   14c60:	ldr	r2, [sp, #36]	; 0x24
   14c64:	mov	r1, #0
   14c68:	sub	r2, r2, r0
   14c6c:	add	r0, r4, r0, lsl #3
   14c70:	lsl	r2, r2, #3
   14c74:	bl	10d84 <memset@plt>
   14c78:	ldr	r3, [sp, #36]	; 0x24
   14c7c:	str	r3, [r5, #4]
   14c80:	ldr	r7, [sp, #44]	; 0x2c
   14c84:	ldr	r9, [r4]
   14c88:	ldr	r5, [r4, #4]
   14c8c:	ldr	r2, [sp, #80]	; 0x50
   14c90:	ldr	r3, [sp, #40]	; 0x28
   14c94:	ldr	ip, [sp, #84]	; 0x54
   14c98:	orr	r7, r7, #1
   14c9c:	str	r2, [sp, #12]
   14ca0:	str	r3, [sp]
   14ca4:	str	r7, [sp, #4]
   14ca8:	str	r6, [sp, #8]
   14cac:	mov	r1, r9
   14cb0:	mov	r0, r5
   14cb4:	str	ip, [sp, #16]
   14cb8:	mov	r3, fp
   14cbc:	mov	r2, sl
   14cc0:	bl	124a0 <__snprintf_chk@plt+0x1680>
   14cc4:	cmp	r9, r0
   14cc8:	bhi	14d28 <__snprintf_chk@plt+0x3f08>
   14ccc:	ldr	r3, [pc, #160]	; 14d74 <__snprintf_chk@plt+0x3f54>
   14cd0:	add	r9, r0, #1
   14cd4:	cmp	r5, r3
   14cd8:	str	r9, [r4]
   14cdc:	beq	14ce8 <__snprintf_chk@plt+0x3ec8>
   14ce0:	mov	r0, r5
   14ce4:	bl	17628 <__snprintf_chk@plt+0x6808>
   14ce8:	mov	r0, r9
   14cec:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   14cf0:	ldr	ip, [sp, #84]	; 0x54
   14cf4:	ldr	lr, [sp, #40]	; 0x28
   14cf8:	mov	r3, fp
   14cfc:	mov	r2, sl
   14d00:	mov	r1, r9
   14d04:	str	r0, [r4, #4]
   14d08:	ldr	r4, [sp, #80]	; 0x50
   14d0c:	str	r6, [sp, #8]
   14d10:	str	r7, [sp, #4]
   14d14:	str	ip, [sp, #16]
   14d18:	str	r4, [sp, #12]
   14d1c:	str	lr, [sp]
   14d20:	mov	r5, r0
   14d24:	bl	124a0 <__snprintf_chk@plt+0x1680>
   14d28:	ldr	r3, [sp, #28]
   14d2c:	mov	r0, r5
   14d30:	str	r3, [r8]
   14d34:	add	sp, sp, #92	; 0x5c
   14d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d3c:	mov	r3, #8
   14d40:	str	r3, [sp]
   14d44:	add	r1, sp, #36	; 0x24
   14d48:	rsb	r2, r2, #1
   14d4c:	mvn	r3, #-2147483648	; 0x80000000
   14d50:	mov	r0, #0
   14d54:	bl	16f98 <__snprintf_chk@plt+0x6178>
   14d58:	mov	r4, r0
   14d5c:	ldm	r7, {r0, r1}
   14d60:	str	r4, [r5]
   14d64:	stm	r4, {r0, r1}
   14d68:	b	14c5c <__snprintf_chk@plt+0x3e3c>
   14d6c:	andeq	r9, r2, ip, asr #2
   14d70:	andeq	r9, r2, r0, ror #1
   14d74:	andeq	r9, r2, ip, ror r1
   14d78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d7c:	mov	r4, r1
   14d80:	ldr	lr, [pc, #420]	; 14f2c <__snprintf_chk@plt+0x410c>
   14d84:	mov	r6, r0
   14d88:	sub	sp, sp, #84	; 0x54
   14d8c:	ldm	lr!, {r0, r1, r2, r3}
   14d90:	add	ip, sp, #32
   14d94:	lsr	r8, r4, #5
   14d98:	add	r5, sp, #40	; 0x28
   14d9c:	stmia	ip!, {r0, r1, r2, r3}
   14da0:	and	r4, r4, #31
   14da4:	ldm	lr!, {r0, r1, r2, r3}
   14da8:	ldr	r7, [pc, #384]	; 14f30 <__snprintf_chk@plt+0x4110>
   14dac:	stmia	ip!, {r0, r1, r2, r3}
   14db0:	ldm	lr, {r0, r1, r2, r3}
   14db4:	stm	ip, {r0, r1, r2, r3}
   14db8:	ldr	r2, [r5, r8, lsl #2]
   14dbc:	lsr	r3, r2, r4
   14dc0:	eor	r3, r3, #1
   14dc4:	and	r3, r3, #1
   14dc8:	eor	r4, r2, r3, lsl r4
   14dcc:	str	r4, [r5, r8, lsl #2]
   14dd0:	bl	10d60 <__errno_location@plt>
   14dd4:	ldr	r2, [r7, #4]
   14dd8:	ldr	r4, [r7]
   14ddc:	cmp	r2, #0
   14de0:	mov	r9, r0
   14de4:	ldr	sl, [r0]
   14de8:	bgt	14e44 <__snprintf_chk@plt+0x4024>
   14dec:	add	r8, r7, #8
   14df0:	cmp	r4, r8
   14df4:	str	r2, [sp, #28]
   14df8:	beq	14efc <__snprintf_chk@plt+0x40dc>
   14dfc:	mov	r3, #8
   14e00:	mov	r0, r4
   14e04:	str	r3, [sp]
   14e08:	rsb	r2, r2, #1
   14e0c:	mvn	r3, #-2147483648	; 0x80000000
   14e10:	add	r1, sp, #28
   14e14:	bl	16f98 <__snprintf_chk@plt+0x6178>
   14e18:	mov	r4, r0
   14e1c:	str	r0, [r7]
   14e20:	ldr	r0, [r7, #4]
   14e24:	ldr	r2, [sp, #28]
   14e28:	mov	r1, #0
   14e2c:	sub	r2, r2, r0
   14e30:	add	r0, r4, r0, lsl #3
   14e34:	lsl	r2, r2, #3
   14e38:	bl	10d84 <memset@plt>
   14e3c:	ldr	r3, [sp, #28]
   14e40:	str	r3, [r7, #4]
   14e44:	ldr	r8, [sp, #36]	; 0x24
   14e48:	ldr	fp, [r4]
   14e4c:	ldr	r7, [r4, #4]
   14e50:	ldr	r2, [sp, #72]	; 0x48
   14e54:	ldr	r3, [sp, #32]
   14e58:	ldr	ip, [sp, #76]	; 0x4c
   14e5c:	orr	r8, r8, #1
   14e60:	str	r2, [sp, #12]
   14e64:	str	r3, [sp]
   14e68:	str	r8, [sp, #4]
   14e6c:	str	r5, [sp, #8]
   14e70:	mov	r1, fp
   14e74:	mov	r0, r7
   14e78:	str	ip, [sp, #16]
   14e7c:	mvn	r3, #0
   14e80:	mov	r2, r6
   14e84:	bl	124a0 <__snprintf_chk@plt+0x1680>
   14e88:	cmp	fp, r0
   14e8c:	bhi	14eec <__snprintf_chk@plt+0x40cc>
   14e90:	ldr	r3, [pc, #156]	; 14f34 <__snprintf_chk@plt+0x4114>
   14e94:	add	fp, r0, #1
   14e98:	cmp	r7, r3
   14e9c:	str	fp, [r4]
   14ea0:	beq	14eac <__snprintf_chk@plt+0x408c>
   14ea4:	mov	r0, r7
   14ea8:	bl	17628 <__snprintf_chk@plt+0x6808>
   14eac:	mov	r0, fp
   14eb0:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   14eb4:	ldr	lr, [sp, #76]	; 0x4c
   14eb8:	ldr	r3, [sp, #32]
   14ebc:	ldr	ip, [sp, #72]	; 0x48
   14ec0:	mov	r2, r6
   14ec4:	mov	r1, fp
   14ec8:	str	r0, [r4, #4]
   14ecc:	str	r3, [sp]
   14ed0:	str	r5, [sp, #8]
   14ed4:	str	r8, [sp, #4]
   14ed8:	str	lr, [sp, #16]
   14edc:	str	ip, [sp, #12]
   14ee0:	mvn	r3, #0
   14ee4:	mov	r7, r0
   14ee8:	bl	124a0 <__snprintf_chk@plt+0x1680>
   14eec:	mov	r0, r7
   14ef0:	str	sl, [r9]
   14ef4:	add	sp, sp, #84	; 0x54
   14ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14efc:	mov	r3, #8
   14f00:	str	r3, [sp]
   14f04:	add	r1, sp, #28
   14f08:	rsb	r2, r2, #1
   14f0c:	mvn	r3, #-2147483648	; 0x80000000
   14f10:	mov	r0, #0
   14f14:	bl	16f98 <__snprintf_chk@plt+0x6178>
   14f18:	mov	r4, r0
   14f1c:	ldm	r8, {r0, r1}
   14f20:	str	r4, [r7]
   14f24:	stm	r4, {r0, r1}
   14f28:	b	14e20 <__snprintf_chk@plt+0x4000>
   14f2c:	andeq	r9, r2, ip, asr #2
   14f30:	andeq	r9, r2, r0, ror #1
   14f34:	andeq	r9, r2, ip, ror r1
   14f38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f3c:	mov	r6, r0
   14f40:	ldr	lr, [pc, #404]	; 150dc <__snprintf_chk@plt+0x42bc>
   14f44:	sub	sp, sp, #84	; 0x54
   14f48:	add	ip, sp, #32
   14f4c:	ldm	lr!, {r0, r1, r2, r3}
   14f50:	ldr	r5, [pc, #392]	; 150e0 <__snprintf_chk@plt+0x42c0>
   14f54:	stmia	ip!, {r0, r1, r2, r3}
   14f58:	ldm	lr!, {r0, r1, r2, r3}
   14f5c:	ldr	r4, [sp, #44]	; 0x2c
   14f60:	stmia	ip!, {r0, r1, r2, r3}
   14f64:	ldm	lr, {r0, r1, r2, r3}
   14f68:	mvn	lr, r4
   14f6c:	and	lr, lr, #67108864	; 0x4000000
   14f70:	eor	lr, lr, r4
   14f74:	stm	ip, {r0, r1, r2, r3}
   14f78:	str	lr, [sp, #44]	; 0x2c
   14f7c:	bl	10d60 <__errno_location@plt>
   14f80:	ldr	r2, [r5, #4]
   14f84:	ldr	r4, [r5]
   14f88:	cmp	r2, #0
   14f8c:	mov	r8, r0
   14f90:	ldr	sl, [r0]
   14f94:	bgt	14ff0 <__snprintf_chk@plt+0x41d0>
   14f98:	add	r7, r5, #8
   14f9c:	cmp	r4, r7
   14fa0:	str	r2, [sp, #28]
   14fa4:	beq	150ac <__snprintf_chk@plt+0x428c>
   14fa8:	mov	r3, #8
   14fac:	mov	r0, r4
   14fb0:	str	r3, [sp]
   14fb4:	rsb	r2, r2, #1
   14fb8:	mvn	r3, #-2147483648	; 0x80000000
   14fbc:	add	r1, sp, #28
   14fc0:	bl	16f98 <__snprintf_chk@plt+0x6178>
   14fc4:	mov	r4, r0
   14fc8:	str	r0, [r5]
   14fcc:	ldr	r0, [r5, #4]
   14fd0:	ldr	r2, [sp, #28]
   14fd4:	mov	r1, #0
   14fd8:	sub	r2, r2, r0
   14fdc:	add	r0, r4, r0, lsl #3
   14fe0:	lsl	r2, r2, #3
   14fe4:	bl	10d84 <memset@plt>
   14fe8:	ldr	r3, [sp, #28]
   14fec:	str	r3, [r5, #4]
   14ff0:	ldr	r7, [sp, #36]	; 0x24
   14ff4:	ldr	r9, [r4]
   14ff8:	ldr	r5, [r4, #4]
   14ffc:	ldr	r2, [sp, #72]	; 0x48
   15000:	ldr	r3, [sp, #32]
   15004:	ldr	ip, [sp, #76]	; 0x4c
   15008:	orr	r7, r7, #1
   1500c:	add	fp, sp, #40	; 0x28
   15010:	str	r2, [sp, #12]
   15014:	str	r3, [sp]
   15018:	str	r7, [sp, #4]
   1501c:	mov	r1, r9
   15020:	mov	r0, r5
   15024:	str	ip, [sp, #16]
   15028:	str	fp, [sp, #8]
   1502c:	mvn	r3, #0
   15030:	mov	r2, r6
   15034:	bl	124a0 <__snprintf_chk@plt+0x1680>
   15038:	cmp	r9, r0
   1503c:	bhi	1509c <__snprintf_chk@plt+0x427c>
   15040:	ldr	r3, [pc, #156]	; 150e4 <__snprintf_chk@plt+0x42c4>
   15044:	add	r9, r0, #1
   15048:	cmp	r5, r3
   1504c:	str	r9, [r4]
   15050:	beq	1505c <__snprintf_chk@plt+0x423c>
   15054:	mov	r0, r5
   15058:	bl	17628 <__snprintf_chk@plt+0x6808>
   1505c:	mov	r0, r9
   15060:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   15064:	ldr	lr, [sp, #76]	; 0x4c
   15068:	ldr	r3, [sp, #32]
   1506c:	ldr	ip, [sp, #72]	; 0x48
   15070:	mov	r2, r6
   15074:	mov	r1, r9
   15078:	str	r0, [r4, #4]
   1507c:	str	r3, [sp]
   15080:	str	fp, [sp, #8]
   15084:	str	r7, [sp, #4]
   15088:	str	lr, [sp, #16]
   1508c:	str	ip, [sp, #12]
   15090:	mvn	r3, #0
   15094:	mov	r5, r0
   15098:	bl	124a0 <__snprintf_chk@plt+0x1680>
   1509c:	mov	r0, r5
   150a0:	str	sl, [r8]
   150a4:	add	sp, sp, #84	; 0x54
   150a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150ac:	mov	r3, #8
   150b0:	str	r3, [sp]
   150b4:	add	r1, sp, #28
   150b8:	rsb	r2, r2, #1
   150bc:	mvn	r3, #-2147483648	; 0x80000000
   150c0:	mov	r0, #0
   150c4:	bl	16f98 <__snprintf_chk@plt+0x6178>
   150c8:	mov	r4, r0
   150cc:	ldm	r7, {r0, r1}
   150d0:	str	r4, [r5]
   150d4:	stm	r4, {r0, r1}
   150d8:	b	14fcc <__snprintf_chk@plt+0x41ac>
   150dc:	andeq	r9, r2, ip, asr #2
   150e0:	andeq	r9, r2, r0, ror #1
   150e4:	andeq	r9, r2, ip, ror r1
   150e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150ec:	mov	r9, r0
   150f0:	ldr	lr, [pc, #416]	; 15298 <__snprintf_chk@plt+0x4478>
   150f4:	mov	sl, r1
   150f8:	sub	sp, sp, #92	; 0x5c
   150fc:	ldm	lr!, {r0, r1, r2, r3}
   15100:	add	ip, sp, #40	; 0x28
   15104:	ldr	r5, [pc, #400]	; 1529c <__snprintf_chk@plt+0x447c>
   15108:	stmia	ip!, {r0, r1, r2, r3}
   1510c:	ldm	lr!, {r0, r1, r2, r3}
   15110:	ldr	r4, [sp, #52]	; 0x34
   15114:	stmia	ip!, {r0, r1, r2, r3}
   15118:	ldm	lr, {r0, r1, r2, r3}
   1511c:	mvn	lr, r4
   15120:	and	lr, lr, #67108864	; 0x4000000
   15124:	eor	lr, lr, r4
   15128:	stm	ip, {r0, r1, r2, r3}
   1512c:	str	lr, [sp, #52]	; 0x34
   15130:	bl	10d60 <__errno_location@plt>
   15134:	ldr	r2, [r5, #4]
   15138:	ldr	r4, [r5]
   1513c:	cmp	r2, #0
   15140:	ldr	r3, [r0]
   15144:	mov	r7, r0
   15148:	str	r3, [sp, #28]
   1514c:	bgt	151a8 <__snprintf_chk@plt+0x4388>
   15150:	add	r6, r5, #8
   15154:	cmp	r4, r6
   15158:	str	r2, [sp, #36]	; 0x24
   1515c:	beq	15268 <__snprintf_chk@plt+0x4448>
   15160:	mov	r3, #8
   15164:	mov	r0, r4
   15168:	str	r3, [sp]
   1516c:	rsb	r2, r2, #1
   15170:	mvn	r3, #-2147483648	; 0x80000000
   15174:	add	r1, sp, #36	; 0x24
   15178:	bl	16f98 <__snprintf_chk@plt+0x6178>
   1517c:	mov	r4, r0
   15180:	str	r0, [r5]
   15184:	ldr	r0, [r5, #4]
   15188:	ldr	r2, [sp, #36]	; 0x24
   1518c:	mov	r1, #0
   15190:	sub	r2, r2, r0
   15194:	add	r0, r4, r0, lsl #3
   15198:	lsl	r2, r2, #3
   1519c:	bl	10d84 <memset@plt>
   151a0:	ldr	r3, [sp, #36]	; 0x24
   151a4:	str	r3, [r5, #4]
   151a8:	ldr	r6, [sp, #44]	; 0x2c
   151ac:	ldr	r8, [r4]
   151b0:	ldr	r5, [r4, #4]
   151b4:	ldr	r2, [sp, #80]	; 0x50
   151b8:	ldr	r3, [sp, #40]	; 0x28
   151bc:	ldr	ip, [sp, #84]	; 0x54
   151c0:	orr	r6, r6, #1
   151c4:	add	fp, sp, #48	; 0x30
   151c8:	str	r2, [sp, #12]
   151cc:	str	r3, [sp]
   151d0:	str	r6, [sp, #4]
   151d4:	mov	r1, r8
   151d8:	mov	r0, r5
   151dc:	str	ip, [sp, #16]
   151e0:	str	fp, [sp, #8]
   151e4:	mov	r3, sl
   151e8:	mov	r2, r9
   151ec:	bl	124a0 <__snprintf_chk@plt+0x1680>
   151f0:	cmp	r8, r0
   151f4:	bhi	15254 <__snprintf_chk@plt+0x4434>
   151f8:	ldr	r3, [pc, #160]	; 152a0 <__snprintf_chk@plt+0x4480>
   151fc:	add	r8, r0, #1
   15200:	cmp	r5, r3
   15204:	str	r8, [r4]
   15208:	beq	15214 <__snprintf_chk@plt+0x43f4>
   1520c:	mov	r0, r5
   15210:	bl	17628 <__snprintf_chk@plt+0x6808>
   15214:	mov	r0, r8
   15218:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   1521c:	ldr	ip, [sp, #84]	; 0x54
   15220:	ldr	lr, [sp, #40]	; 0x28
   15224:	mov	r3, sl
   15228:	mov	r2, r9
   1522c:	mov	r1, r8
   15230:	str	r0, [r4, #4]
   15234:	ldr	r4, [sp, #80]	; 0x50
   15238:	str	fp, [sp, #8]
   1523c:	str	r6, [sp, #4]
   15240:	str	ip, [sp, #16]
   15244:	str	r4, [sp, #12]
   15248:	str	lr, [sp]
   1524c:	mov	r5, r0
   15250:	bl	124a0 <__snprintf_chk@plt+0x1680>
   15254:	ldr	r3, [sp, #28]
   15258:	mov	r0, r5
   1525c:	str	r3, [r7]
   15260:	add	sp, sp, #92	; 0x5c
   15264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15268:	mov	r3, #8
   1526c:	str	r3, [sp]
   15270:	add	r1, sp, #36	; 0x24
   15274:	rsb	r2, r2, #1
   15278:	mvn	r3, #-2147483648	; 0x80000000
   1527c:	mov	r0, #0
   15280:	bl	16f98 <__snprintf_chk@plt+0x6178>
   15284:	mov	r4, r0
   15288:	ldm	r6, {r0, r1}
   1528c:	str	r4, [r5]
   15290:	stm	r4, {r0, r1}
   15294:	b	15184 <__snprintf_chk@plt+0x4364>
   15298:	andeq	r9, r2, ip, asr #2
   1529c:	andeq	r9, r2, r0, ror #1
   152a0:	andeq	r9, r2, ip, ror r1
   152a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152a8:	sub	sp, sp, #180	; 0xb4
   152ac:	mov	r6, r1
   152b0:	mov	r4, r0
   152b4:	mov	r9, r2
   152b8:	add	r0, sp, #80	; 0x50
   152bc:	mov	r2, #48	; 0x30
   152c0:	mov	r1, #0
   152c4:	bl	10d84 <memset@plt>
   152c8:	cmp	r6, #10
   152cc:	beq	154ac <__snprintf_chk@plt+0x468c>
   152d0:	add	r5, sp, #80	; 0x50
   152d4:	str	r6, [sp, #80]	; 0x50
   152d8:	ldm	r5!, {r0, r1, r2, r3}
   152dc:	add	ip, sp, #128	; 0x80
   152e0:	mov	r7, ip
   152e4:	add	lr, sp, #32
   152e8:	stmia	ip!, {r0, r1, r2, r3}
   152ec:	mov	r8, #67108864	; 0x4000000
   152f0:	ldm	r5!, {r0, r1, r2, r3}
   152f4:	ldr	r6, [pc, #436]	; 154b0 <__snprintf_chk@plt+0x4690>
   152f8:	stmia	ip!, {r0, r1, r2, r3}
   152fc:	ldm	r5, {r0, r1, r2, r3}
   15300:	stm	ip, {r0, r1, r2, r3}
   15304:	ldm	r7!, {r0, r1, r2, r3}
   15308:	stmia	lr!, {r0, r1, r2, r3}
   1530c:	ldm	r7!, {r0, r1, r2, r3}
   15310:	str	r8, [sp, #44]	; 0x2c
   15314:	stmia	lr!, {r0, r1, r2, r3}
   15318:	ldm	ip, {r0, r1, r2, r3}
   1531c:	stm	lr, {r0, r1, r2, r3}
   15320:	bl	10d60 <__errno_location@plt>
   15324:	cmn	r4, #-2147483647	; 0x80000001
   15328:	ldr	r5, [r6]
   1532c:	mov	r7, r0
   15330:	movne	r0, #0
   15334:	moveq	r0, #1
   15338:	ldr	r3, [r7]
   1533c:	orrs	r0, r0, r4, lsr #31
   15340:	str	r3, [sp, #24]
   15344:	bne	154ac <__snprintf_chk@plt+0x468c>
   15348:	ldr	r2, [r6, #4]
   1534c:	cmp	r4, r2
   15350:	blt	153b0 <__snprintf_chk@plt+0x4590>
   15354:	add	r8, r6, #8
   15358:	cmp	r5, r8
   1535c:	str	r2, [sp, #80]	; 0x50
   15360:	beq	1547c <__snprintf_chk@plt+0x465c>
   15364:	mov	r3, #8
   15368:	sub	r2, r4, r2
   1536c:	mov	r0, r5
   15370:	str	r3, [sp]
   15374:	add	r2, r2, #1
   15378:	add	r1, sp, #80	; 0x50
   1537c:	mvn	r3, #-2147483648	; 0x80000000
   15380:	bl	16f98 <__snprintf_chk@plt+0x6178>
   15384:	mov	r5, r0
   15388:	str	r0, [r6]
   1538c:	ldr	r0, [r6, #4]
   15390:	ldr	r2, [sp, #80]	; 0x50
   15394:	mov	r1, #0
   15398:	sub	r2, r2, r0
   1539c:	add	r0, r5, r0, lsl #3
   153a0:	lsl	r2, r2, #3
   153a4:	bl	10d84 <memset@plt>
   153a8:	ldr	r3, [sp, #80]	; 0x50
   153ac:	str	r3, [r6, #4]
   153b0:	add	fp, r5, r4, lsl #3
   153b4:	ldr	r1, [sp, #36]	; 0x24
   153b8:	ldr	r8, [r5, r4, lsl #3]
   153bc:	ldr	r6, [fp, #4]
   153c0:	ldr	r2, [sp, #72]	; 0x48
   153c4:	ldr	r3, [sp, #32]
   153c8:	ldr	ip, [sp, #76]	; 0x4c
   153cc:	orr	r1, r1, #1
   153d0:	add	sl, sp, #40	; 0x28
   153d4:	str	r1, [sp, #28]
   153d8:	str	r1, [sp, #4]
   153dc:	str	r2, [sp, #12]
   153e0:	str	r3, [sp]
   153e4:	mov	r0, r6
   153e8:	mov	r1, r8
   153ec:	str	ip, [sp, #16]
   153f0:	str	sl, [sp, #8]
   153f4:	mvn	r3, #0
   153f8:	mov	r2, r9
   153fc:	bl	124a0 <__snprintf_chk@plt+0x1680>
   15400:	cmp	r8, r0
   15404:	bhi	15468 <__snprintf_chk@plt+0x4648>
   15408:	ldr	r3, [pc, #164]	; 154b4 <__snprintf_chk@plt+0x4694>
   1540c:	add	r8, r0, #1
   15410:	cmp	r6, r3
   15414:	str	r8, [r5, r4, lsl #3]
   15418:	beq	15424 <__snprintf_chk@plt+0x4604>
   1541c:	mov	r0, r6
   15420:	bl	17628 <__snprintf_chk@plt+0x6808>
   15424:	mov	r0, r8
   15428:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   1542c:	ldr	lr, [sp, #76]	; 0x4c
   15430:	ldr	r3, [sp, #32]
   15434:	ldr	ip, [sp, #72]	; 0x48
   15438:	ldr	r4, [sp, #28]
   1543c:	mov	r2, r9
   15440:	mov	r1, r8
   15444:	str	r0, [fp, #4]
   15448:	str	r3, [sp]
   1544c:	str	sl, [sp, #8]
   15450:	str	r4, [sp, #4]
   15454:	str	lr, [sp, #16]
   15458:	str	ip, [sp, #12]
   1545c:	mvn	r3, #0
   15460:	mov	r6, r0
   15464:	bl	124a0 <__snprintf_chk@plt+0x1680>
   15468:	ldr	r3, [sp, #24]
   1546c:	mov	r0, r6
   15470:	str	r3, [r7]
   15474:	add	sp, sp, #180	; 0xb4
   15478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1547c:	mov	r3, #8
   15480:	sub	r2, r4, r2
   15484:	add	r1, sp, #80	; 0x50
   15488:	str	r3, [sp]
   1548c:	add	r2, r2, #1
   15490:	mvn	r3, #-2147483648	; 0x80000000
   15494:	bl	16f98 <__snprintf_chk@plt+0x6178>
   15498:	mov	r5, r0
   1549c:	ldm	r8, {r0, r1}
   154a0:	str	r5, [r6]
   154a4:	stm	r5, {r0, r1}
   154a8:	b	1538c <__snprintf_chk@plt+0x456c>
   154ac:	bl	10e14 <abort@plt>
   154b0:	andeq	r9, r2, r0, ror #1
   154b4:	andeq	r9, r2, ip, ror r1
   154b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154bc:	mov	r7, r1
   154c0:	ldr	lr, [pc, #492]	; 156b4 <__snprintf_chk@plt+0x4894>
   154c4:	mov	r8, r2
   154c8:	mov	r4, r0
   154cc:	mov	fp, r3
   154d0:	ldm	lr!, {r0, r1, r2, r3}
   154d4:	sub	sp, sp, #100	; 0x64
   154d8:	add	ip, sp, #48	; 0x30
   154dc:	mov	sl, #10
   154e0:	stmia	ip!, {r0, r1, r2, r3}
   154e4:	cmp	r8, #0
   154e8:	cmpne	r7, #0
   154ec:	ldm	lr!, {r0, r1, r2, r3}
   154f0:	str	sl, [sp, #48]	; 0x30
   154f4:	stmia	ip!, {r0, r1, r2, r3}
   154f8:	ldm	lr, {r0, r1, r2, r3}
   154fc:	stm	ip, {r0, r1, r2, r3}
   15500:	beq	156b0 <__snprintf_chk@plt+0x4890>
   15504:	str	r7, [sp, #88]	; 0x58
   15508:	str	r8, [sp, #92]	; 0x5c
   1550c:	bl	10d60 <__errno_location@plt>
   15510:	ldr	r6, [pc, #416]	; 156b8 <__snprintf_chk@plt+0x4898>
   15514:	cmn	r4, #-2147483647	; 0x80000001
   15518:	ldr	r5, [r6]
   1551c:	mov	r9, r0
   15520:	movne	r0, #0
   15524:	moveq	r0, #1
   15528:	ldr	r3, [r9]
   1552c:	orrs	r0, r0, r4, lsr #31
   15530:	str	r3, [sp, #28]
   15534:	bne	156b0 <__snprintf_chk@plt+0x4890>
   15538:	ldr	r2, [r6, #4]
   1553c:	cmp	r4, r2
   15540:	movlt	r3, sl
   15544:	blt	155b0 <__snprintf_chk@plt+0x4790>
   15548:	add	r7, r6, #8
   1554c:	cmp	r5, r7
   15550:	str	r2, [sp, #44]	; 0x2c
   15554:	beq	15680 <__snprintf_chk@plt+0x4860>
   15558:	mov	r3, #8
   1555c:	sub	r2, r4, r2
   15560:	mov	r0, r5
   15564:	str	r3, [sp]
   15568:	add	r2, r2, #1
   1556c:	mvn	r3, #-2147483648	; 0x80000000
   15570:	add	r1, sp, #44	; 0x2c
   15574:	bl	16f98 <__snprintf_chk@plt+0x6178>
   15578:	mov	r5, r0
   1557c:	str	r0, [r6]
   15580:	ldr	r0, [r6, #4]
   15584:	ldr	r2, [sp, #44]	; 0x2c
   15588:	mov	r1, #0
   1558c:	sub	r2, r2, r0
   15590:	add	r0, r5, r0, lsl #3
   15594:	lsl	r2, r2, #3
   15598:	bl	10d84 <memset@plt>
   1559c:	ldr	r3, [sp, #48]	; 0x30
   155a0:	ldr	r7, [sp, #88]	; 0x58
   155a4:	ldr	r8, [sp, #92]	; 0x5c
   155a8:	ldr	r2, [sp, #44]	; 0x2c
   155ac:	str	r2, [r6, #4]
   155b0:	add	r2, r5, r4, lsl #3
   155b4:	mov	r1, r2
   155b8:	str	r2, [sp, #32]
   155bc:	ldr	r2, [sp, #52]	; 0x34
   155c0:	ldr	r6, [r1, #4]
   155c4:	ldr	sl, [r5, r4, lsl #3]
   155c8:	orr	r2, r2, #1
   155cc:	str	r3, [sp]
   155d0:	add	r3, sp, #56	; 0x38
   155d4:	str	r2, [sp, #36]	; 0x24
   155d8:	str	r2, [sp, #4]
   155dc:	str	r3, [sp, #8]
   155e0:	mov	r0, r6
   155e4:	str	r8, [sp, #16]
   155e8:	str	r7, [sp, #12]
   155ec:	mov	r1, sl
   155f0:	mvn	r3, #0
   155f4:	mov	r2, fp
   155f8:	bl	124a0 <__snprintf_chk@plt+0x1680>
   155fc:	cmp	sl, r0
   15600:	bhi	1566c <__snprintf_chk@plt+0x484c>
   15604:	ldr	r3, [pc, #176]	; 156bc <__snprintf_chk@plt+0x489c>
   15608:	add	r7, r0, #1
   1560c:	cmp	r6, r3
   15610:	str	r7, [r5, r4, lsl #3]
   15614:	beq	15620 <__snprintf_chk@plt+0x4800>
   15618:	mov	r0, r6
   1561c:	bl	17628 <__snprintf_chk@plt+0x6808>
   15620:	mov	r0, r7
   15624:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   15628:	ldr	r3, [sp, #32]
   1562c:	ldr	lr, [sp, #92]	; 0x5c
   15630:	ldr	ip, [sp, #88]	; 0x58
   15634:	ldr	r4, [sp, #36]	; 0x24
   15638:	mov	r2, fp
   1563c:	mov	r1, r7
   15640:	str	r0, [r3, #4]
   15644:	add	r3, sp, #56	; 0x38
   15648:	str	r3, [sp, #8]
   1564c:	ldr	r3, [sp, #48]	; 0x30
   15650:	str	r4, [sp, #4]
   15654:	str	r3, [sp]
   15658:	str	lr, [sp, #16]
   1565c:	str	ip, [sp, #12]
   15660:	mvn	r3, #0
   15664:	mov	r6, r0
   15668:	bl	124a0 <__snprintf_chk@plt+0x1680>
   1566c:	ldr	r3, [sp, #28]
   15670:	mov	r0, r6
   15674:	str	r3, [r9]
   15678:	add	sp, sp, #100	; 0x64
   1567c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15680:	mov	r3, #8
   15684:	sub	r2, r4, r2
   15688:	str	r3, [sp]
   1568c:	add	r1, sp, #44	; 0x2c
   15690:	add	r2, r2, #1
   15694:	mvn	r3, #-2147483648	; 0x80000000
   15698:	bl	16f98 <__snprintf_chk@plt+0x6178>
   1569c:	mov	r5, r0
   156a0:	ldm	r7, {r0, r1}
   156a4:	str	r5, [r6]
   156a8:	stm	r5, {r0, r1}
   156ac:	b	15580 <__snprintf_chk@plt+0x4760>
   156b0:	bl	10e14 <abort@plt>
   156b4:	andeq	r9, r2, ip, asr #2
   156b8:	andeq	r9, r2, r0, ror #1
   156bc:	andeq	r9, r2, ip, ror r1
   156c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156c4:	mov	r7, r1
   156c8:	ldr	lr, [pc, #492]	; 158bc <__snprintf_chk@plt+0x4a9c>
   156cc:	mov	r8, r2
   156d0:	mov	r4, r0
   156d4:	mov	fp, r3
   156d8:	ldm	lr!, {r0, r1, r2, r3}
   156dc:	sub	sp, sp, #100	; 0x64
   156e0:	add	ip, sp, #48	; 0x30
   156e4:	mov	sl, #10
   156e8:	stmia	ip!, {r0, r1, r2, r3}
   156ec:	cmp	r8, #0
   156f0:	cmpne	r7, #0
   156f4:	ldm	lr!, {r0, r1, r2, r3}
   156f8:	str	sl, [sp, #48]	; 0x30
   156fc:	stmia	ip!, {r0, r1, r2, r3}
   15700:	ldm	lr, {r0, r1, r2, r3}
   15704:	stm	ip, {r0, r1, r2, r3}
   15708:	beq	158b8 <__snprintf_chk@plt+0x4a98>
   1570c:	str	r7, [sp, #88]	; 0x58
   15710:	str	r8, [sp, #92]	; 0x5c
   15714:	bl	10d60 <__errno_location@plt>
   15718:	ldr	r6, [pc, #416]	; 158c0 <__snprintf_chk@plt+0x4aa0>
   1571c:	cmn	r4, #-2147483647	; 0x80000001
   15720:	ldr	r5, [r6]
   15724:	mov	r9, r0
   15728:	movne	r0, #0
   1572c:	moveq	r0, #1
   15730:	ldr	r3, [r9]
   15734:	orrs	r0, r0, r4, lsr #31
   15738:	str	r3, [sp, #28]
   1573c:	bne	158b8 <__snprintf_chk@plt+0x4a98>
   15740:	ldr	r2, [r6, #4]
   15744:	cmp	r4, r2
   15748:	movlt	r3, sl
   1574c:	blt	157b8 <__snprintf_chk@plt+0x4998>
   15750:	add	r7, r6, #8
   15754:	cmp	r5, r7
   15758:	str	r2, [sp, #44]	; 0x2c
   1575c:	beq	15888 <__snprintf_chk@plt+0x4a68>
   15760:	mov	r3, #8
   15764:	sub	r2, r4, r2
   15768:	mov	r0, r5
   1576c:	str	r3, [sp]
   15770:	add	r2, r2, #1
   15774:	mvn	r3, #-2147483648	; 0x80000000
   15778:	add	r1, sp, #44	; 0x2c
   1577c:	bl	16f98 <__snprintf_chk@plt+0x6178>
   15780:	mov	r5, r0
   15784:	str	r0, [r6]
   15788:	ldr	r0, [r6, #4]
   1578c:	ldr	r2, [sp, #44]	; 0x2c
   15790:	mov	r1, #0
   15794:	sub	r2, r2, r0
   15798:	add	r0, r5, r0, lsl #3
   1579c:	lsl	r2, r2, #3
   157a0:	bl	10d84 <memset@plt>
   157a4:	ldr	r3, [sp, #48]	; 0x30
   157a8:	ldr	r7, [sp, #88]	; 0x58
   157ac:	ldr	r8, [sp, #92]	; 0x5c
   157b0:	ldr	r2, [sp, #44]	; 0x2c
   157b4:	str	r2, [r6, #4]
   157b8:	add	r2, r5, r4, lsl #3
   157bc:	mov	r1, r2
   157c0:	str	r2, [sp, #32]
   157c4:	ldr	r2, [sp, #52]	; 0x34
   157c8:	ldr	r6, [r1, #4]
   157cc:	ldr	sl, [r5, r4, lsl #3]
   157d0:	orr	r2, r2, #1
   157d4:	str	r3, [sp]
   157d8:	add	r3, sp, #56	; 0x38
   157dc:	str	r2, [sp, #36]	; 0x24
   157e0:	str	r2, [sp, #4]
   157e4:	str	r3, [sp, #8]
   157e8:	mov	r0, r6
   157ec:	str	r8, [sp, #16]
   157f0:	str	r7, [sp, #12]
   157f4:	mov	r1, sl
   157f8:	ldr	r3, [sp, #136]	; 0x88
   157fc:	mov	r2, fp
   15800:	bl	124a0 <__snprintf_chk@plt+0x1680>
   15804:	cmp	sl, r0
   15808:	bhi	15874 <__snprintf_chk@plt+0x4a54>
   1580c:	ldr	r3, [pc, #176]	; 158c4 <__snprintf_chk@plt+0x4aa4>
   15810:	add	r7, r0, #1
   15814:	cmp	r6, r3
   15818:	str	r7, [r5, r4, lsl #3]
   1581c:	beq	15828 <__snprintf_chk@plt+0x4a08>
   15820:	mov	r0, r6
   15824:	bl	17628 <__snprintf_chk@plt+0x6808>
   15828:	mov	r0, r7
   1582c:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   15830:	ldr	r3, [sp, #32]
   15834:	ldr	lr, [sp, #92]	; 0x5c
   15838:	ldr	ip, [sp, #88]	; 0x58
   1583c:	ldr	r4, [sp, #36]	; 0x24
   15840:	mov	r2, fp
   15844:	mov	r1, r7
   15848:	str	r0, [r3, #4]
   1584c:	add	r3, sp, #56	; 0x38
   15850:	str	r3, [sp, #8]
   15854:	ldr	r3, [sp, #48]	; 0x30
   15858:	str	r4, [sp, #4]
   1585c:	str	r3, [sp]
   15860:	str	lr, [sp, #16]
   15864:	str	ip, [sp, #12]
   15868:	ldr	r3, [sp, #136]	; 0x88
   1586c:	mov	r6, r0
   15870:	bl	124a0 <__snprintf_chk@plt+0x1680>
   15874:	ldr	r3, [sp, #28]
   15878:	mov	r0, r6
   1587c:	str	r3, [r9]
   15880:	add	sp, sp, #100	; 0x64
   15884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15888:	mov	r3, #8
   1588c:	sub	r2, r4, r2
   15890:	str	r3, [sp]
   15894:	add	r1, sp, #44	; 0x2c
   15898:	add	r2, r2, #1
   1589c:	mvn	r3, #-2147483648	; 0x80000000
   158a0:	bl	16f98 <__snprintf_chk@plt+0x6178>
   158a4:	mov	r5, r0
   158a8:	ldm	r7, {r0, r1}
   158ac:	str	r5, [r6]
   158b0:	stm	r5, {r0, r1}
   158b4:	b	15788 <__snprintf_chk@plt+0x4968>
   158b8:	bl	10e14 <abort@plt>
   158bc:	andeq	r9, r2, ip, asr #2
   158c0:	andeq	r9, r2, r0, ror #1
   158c4:	andeq	r9, r2, ip, ror r1
   158c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158cc:	mov	r5, r0
   158d0:	ldr	lr, [pc, #452]	; 15a9c <__snprintf_chk@plt+0x4c7c>
   158d4:	mov	r6, r1
   158d8:	mov	sl, r2
   158dc:	ldm	lr!, {r0, r1, r2, r3}
   158e0:	sub	sp, sp, #92	; 0x5c
   158e4:	add	ip, sp, #40	; 0x28
   158e8:	cmp	r6, #0
   158ec:	cmpne	r5, #0
   158f0:	stmia	ip!, {r0, r1, r2, r3}
   158f4:	mov	r9, #10
   158f8:	ldm	lr!, {r0, r1, r2, r3}
   158fc:	moveq	fp, #1
   15900:	movne	fp, #0
   15904:	str	r9, [sp, #40]	; 0x28
   15908:	stmia	ip!, {r0, r1, r2, r3}
   1590c:	ldm	lr, {r0, r1, r2, r3}
   15910:	stm	ip, {r0, r1, r2, r3}
   15914:	beq	15a98 <__snprintf_chk@plt+0x4c78>
   15918:	str	r5, [sp, #80]	; 0x50
   1591c:	str	r6, [sp, #84]	; 0x54
   15920:	bl	10d60 <__errno_location@plt>
   15924:	ldr	r7, [pc, #372]	; 15aa0 <__snprintf_chk@plt+0x4c80>
   15928:	ldr	r2, [r7, #4]
   1592c:	ldr	r4, [r7]
   15930:	cmp	r2, #0
   15934:	ldr	r3, [r0]
   15938:	mov	r8, r0
   1593c:	str	r3, [sp, #24]
   15940:	movgt	r3, r9
   15944:	bgt	159ac <__snprintf_chk@plt+0x4b8c>
   15948:	add	r5, r7, #8
   1594c:	cmp	r4, r5
   15950:	str	r2, [sp, #36]	; 0x24
   15954:	beq	15a68 <__snprintf_chk@plt+0x4c48>
   15958:	mov	r3, #8
   1595c:	mov	r0, r4
   15960:	str	r3, [sp]
   15964:	rsb	r2, r2, #1
   15968:	mvn	r3, #-2147483648	; 0x80000000
   1596c:	add	r1, sp, #36	; 0x24
   15970:	bl	16f98 <__snprintf_chk@plt+0x6178>
   15974:	mov	r4, r0
   15978:	str	r0, [r7]
   1597c:	ldr	r0, [r7, #4]
   15980:	ldr	r2, [sp, #36]	; 0x24
   15984:	mov	r1, #0
   15988:	sub	r2, r2, r0
   1598c:	add	r0, r4, r0, lsl #3
   15990:	lsl	r2, r2, #3
   15994:	bl	10d84 <memset@plt>
   15998:	ldr	r3, [sp, #40]	; 0x28
   1599c:	ldr	r5, [sp, #80]	; 0x50
   159a0:	ldr	r6, [sp, #84]	; 0x54
   159a4:	ldr	r2, [sp, #36]	; 0x24
   159a8:	str	r2, [r7, #4]
   159ac:	ldr	r2, [sp, #44]	; 0x2c
   159b0:	ldr	r9, [r4]
   159b4:	ldr	r7, [r4, #4]
   159b8:	orr	r2, r2, #1
   159bc:	add	fp, sp, #48	; 0x30
   159c0:	str	r2, [sp, #28]
   159c4:	str	r2, [sp, #4]
   159c8:	str	r3, [sp]
   159cc:	str	r6, [sp, #16]
   159d0:	str	r5, [sp, #12]
   159d4:	mov	r1, r9
   159d8:	mov	r0, r7
   159dc:	str	fp, [sp, #8]
   159e0:	mvn	r3, #0
   159e4:	mov	r2, sl
   159e8:	bl	124a0 <__snprintf_chk@plt+0x1680>
   159ec:	cmp	r9, r0
   159f0:	bhi	15a54 <__snprintf_chk@plt+0x4c34>
   159f4:	ldr	r3, [pc, #168]	; 15aa4 <__snprintf_chk@plt+0x4c84>
   159f8:	add	r5, r0, #1
   159fc:	cmp	r7, r3
   15a00:	str	r5, [r4]
   15a04:	beq	15a10 <__snprintf_chk@plt+0x4bf0>
   15a08:	mov	r0, r7
   15a0c:	bl	17628 <__snprintf_chk@plt+0x6808>
   15a10:	mov	r0, r5
   15a14:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   15a18:	ldr	lr, [sp, #84]	; 0x54
   15a1c:	ldr	r3, [sp, #40]	; 0x28
   15a20:	ldr	ip, [sp, #80]	; 0x50
   15a24:	mov	r2, sl
   15a28:	mov	r1, r5
   15a2c:	str	r0, [r4, #4]
   15a30:	ldr	r4, [sp, #28]
   15a34:	str	r3, [sp]
   15a38:	str	fp, [sp, #8]
   15a3c:	str	r4, [sp, #4]
   15a40:	str	lr, [sp, #16]
   15a44:	str	ip, [sp, #12]
   15a48:	mvn	r3, #0
   15a4c:	mov	r7, r0
   15a50:	bl	124a0 <__snprintf_chk@plt+0x1680>
   15a54:	ldr	r3, [sp, #24]
   15a58:	mov	r0, r7
   15a5c:	str	r3, [r8]
   15a60:	add	sp, sp, #92	; 0x5c
   15a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a68:	mov	r3, #8
   15a6c:	str	r3, [sp]
   15a70:	add	r1, sp, #36	; 0x24
   15a74:	rsb	r2, r2, #1
   15a78:	mov	r0, fp
   15a7c:	mvn	r3, #-2147483648	; 0x80000000
   15a80:	bl	16f98 <__snprintf_chk@plt+0x6178>
   15a84:	mov	r4, r0
   15a88:	ldm	r5, {r0, r1}
   15a8c:	str	r4, [r7]
   15a90:	stm	r4, {r0, r1}
   15a94:	b	1597c <__snprintf_chk@plt+0x4b5c>
   15a98:	bl	10e14 <abort@plt>
   15a9c:	andeq	r9, r2, ip, asr #2
   15aa0:	andeq	r9, r2, r0, ror #1
   15aa4:	andeq	r9, r2, ip, ror r1
   15aa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15aac:	mov	r5, r0
   15ab0:	ldr	lr, [pc, #464]	; 15c88 <__snprintf_chk@plt+0x4e68>
   15ab4:	mov	r6, r1
   15ab8:	mov	sl, r2
   15abc:	mov	fp, r3
   15ac0:	ldm	lr!, {r0, r1, r2, r3}
   15ac4:	sub	sp, sp, #92	; 0x5c
   15ac8:	add	ip, sp, #40	; 0x28
   15acc:	cmp	r6, #0
   15ad0:	cmpne	r5, #0
   15ad4:	stmia	ip!, {r0, r1, r2, r3}
   15ad8:	moveq	r4, #1
   15adc:	ldm	lr!, {r0, r1, r2, r3}
   15ae0:	movne	r4, #0
   15ae4:	mov	r9, #10
   15ae8:	str	r4, [sp, #28]
   15aec:	stmia	ip!, {r0, r1, r2, r3}
   15af0:	ldm	lr, {r0, r1, r2, r3}
   15af4:	str	r9, [sp, #40]	; 0x28
   15af8:	stm	ip, {r0, r1, r2, r3}
   15afc:	beq	15c84 <__snprintf_chk@plt+0x4e64>
   15b00:	str	r5, [sp, #80]	; 0x50
   15b04:	str	r6, [sp, #84]	; 0x54
   15b08:	bl	10d60 <__errno_location@plt>
   15b0c:	ldr	r7, [pc, #376]	; 15c8c <__snprintf_chk@plt+0x4e6c>
   15b10:	ldr	r2, [r7, #4]
   15b14:	ldr	r4, [r7]
   15b18:	cmp	r2, #0
   15b1c:	ldr	r3, [r0]
   15b20:	mov	r8, r0
   15b24:	str	r3, [sp, #24]
   15b28:	movgt	r3, r9
   15b2c:	bgt	15b94 <__snprintf_chk@plt+0x4d74>
   15b30:	add	r5, r7, #8
   15b34:	cmp	r4, r5
   15b38:	str	r2, [sp, #36]	; 0x24
   15b3c:	beq	15c54 <__snprintf_chk@plt+0x4e34>
   15b40:	mov	r3, #8
   15b44:	mov	r0, r4
   15b48:	str	r3, [sp]
   15b4c:	rsb	r2, r2, #1
   15b50:	mvn	r3, #-2147483648	; 0x80000000
   15b54:	add	r1, sp, #36	; 0x24
   15b58:	bl	16f98 <__snprintf_chk@plt+0x6178>
   15b5c:	mov	r4, r0
   15b60:	str	r0, [r7]
   15b64:	ldr	r0, [r7, #4]
   15b68:	ldr	r2, [sp, #36]	; 0x24
   15b6c:	mov	r1, #0
   15b70:	sub	r2, r2, r0
   15b74:	add	r0, r4, r0, lsl #3
   15b78:	lsl	r2, r2, #3
   15b7c:	bl	10d84 <memset@plt>
   15b80:	ldr	r3, [sp, #40]	; 0x28
   15b84:	ldr	r5, [sp, #80]	; 0x50
   15b88:	ldr	r6, [sp, #84]	; 0x54
   15b8c:	ldr	r2, [sp, #36]	; 0x24
   15b90:	str	r2, [r7, #4]
   15b94:	ldr	r2, [sp, #44]	; 0x2c
   15b98:	ldr	r9, [r4]
   15b9c:	ldr	r7, [r4, #4]
   15ba0:	orr	r2, r2, #1
   15ba4:	str	r3, [sp]
   15ba8:	add	r3, sp, #48	; 0x30
   15bac:	str	r2, [sp, #28]
   15bb0:	str	r2, [sp, #4]
   15bb4:	str	r3, [sp, #8]
   15bb8:	str	r6, [sp, #16]
   15bbc:	str	r5, [sp, #12]
   15bc0:	mov	r1, r9
   15bc4:	mov	r0, r7
   15bc8:	mov	r3, fp
   15bcc:	mov	r2, sl
   15bd0:	bl	124a0 <__snprintf_chk@plt+0x1680>
   15bd4:	cmp	r9, r0
   15bd8:	bhi	15c40 <__snprintf_chk@plt+0x4e20>
   15bdc:	ldr	r3, [pc, #172]	; 15c90 <__snprintf_chk@plt+0x4e70>
   15be0:	add	r5, r0, #1
   15be4:	cmp	r7, r3
   15be8:	str	r5, [r4]
   15bec:	beq	15bf8 <__snprintf_chk@plt+0x4dd8>
   15bf0:	mov	r0, r7
   15bf4:	bl	17628 <__snprintf_chk@plt+0x6808>
   15bf8:	mov	r0, r5
   15bfc:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   15c00:	add	lr, sp, #48	; 0x30
   15c04:	ldr	ip, [sp, #84]	; 0x54
   15c08:	mov	r1, r5
   15c0c:	ldr	r5, [sp, #28]
   15c10:	mov	r3, fp
   15c14:	mov	r2, sl
   15c18:	str	r0, [r4, #4]
   15c1c:	ldr	r4, [sp, #80]	; 0x50
   15c20:	str	lr, [sp, #8]
   15c24:	ldr	lr, [sp, #40]	; 0x28
   15c28:	str	r5, [sp, #4]
   15c2c:	str	ip, [sp, #16]
   15c30:	str	r4, [sp, #12]
   15c34:	str	lr, [sp]
   15c38:	mov	r7, r0
   15c3c:	bl	124a0 <__snprintf_chk@plt+0x1680>
   15c40:	ldr	r3, [sp, #24]
   15c44:	mov	r0, r7
   15c48:	str	r3, [r8]
   15c4c:	add	sp, sp, #92	; 0x5c
   15c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c54:	mov	r3, #8
   15c58:	str	r3, [sp]
   15c5c:	add	r1, sp, #36	; 0x24
   15c60:	rsb	r2, r2, #1
   15c64:	ldr	r0, [sp, #28]
   15c68:	mvn	r3, #-2147483648	; 0x80000000
   15c6c:	bl	16f98 <__snprintf_chk@plt+0x6178>
   15c70:	mov	r4, r0
   15c74:	ldm	r5, {r0, r1}
   15c78:	str	r4, [r7]
   15c7c:	stm	r4, {r0, r1}
   15c80:	b	15b64 <__snprintf_chk@plt+0x4d44>
   15c84:	bl	10e14 <abort@plt>
   15c88:	andeq	r9, r2, ip, asr #2
   15c8c:	andeq	r9, r2, r0, ror #1
   15c90:	andeq	r9, r2, ip, ror r1
   15c94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c98:	sub	sp, sp, #52	; 0x34
   15c9c:	mov	r5, r0
   15ca0:	mov	sl, r1
   15ca4:	mov	fp, r2
   15ca8:	bl	10d60 <__errno_location@plt>
   15cac:	ldr	r4, [pc, #404]	; 15e48 <__snprintf_chk@plt+0x5028>
   15cb0:	cmn	r5, #-2147483647	; 0x80000001
   15cb4:	ldr	r6, [r4]
   15cb8:	mov	r8, r0
   15cbc:	movne	r0, #0
   15cc0:	moveq	r0, #1
   15cc4:	ldr	r3, [r8]
   15cc8:	orrs	r0, r0, r5, lsr #31
   15ccc:	str	r3, [sp, #28]
   15cd0:	bne	15e44 <__snprintf_chk@plt+0x5024>
   15cd4:	ldr	r2, [r4, #4]
   15cd8:	cmp	r5, r2
   15cdc:	blt	15d3c <__snprintf_chk@plt+0x4f1c>
   15ce0:	add	r7, r4, #8
   15ce4:	cmp	r6, r7
   15ce8:	str	r2, [sp, #44]	; 0x2c
   15cec:	beq	15e14 <__snprintf_chk@plt+0x4ff4>
   15cf0:	mov	r3, #8
   15cf4:	sub	r2, r5, r2
   15cf8:	mov	r0, r6
   15cfc:	str	r3, [sp]
   15d00:	add	r2, r2, #1
   15d04:	mvn	r3, #-2147483648	; 0x80000000
   15d08:	add	r1, sp, #44	; 0x2c
   15d0c:	bl	16f98 <__snprintf_chk@plt+0x6178>
   15d10:	mov	r6, r0
   15d14:	str	r0, [r4]
   15d18:	ldr	r0, [r4, #4]
   15d1c:	ldr	r2, [sp, #44]	; 0x2c
   15d20:	mov	r1, #0
   15d24:	sub	r2, r2, r0
   15d28:	add	r0, r6, r0, lsl #3
   15d2c:	lsl	r2, r2, #3
   15d30:	bl	10d84 <memset@plt>
   15d34:	ldr	r3, [sp, #44]	; 0x2c
   15d38:	str	r3, [r4, #4]
   15d3c:	ldr	r2, [r4, #56]	; 0x38
   15d40:	add	r3, r6, r5, lsl #3
   15d44:	ldr	r1, [r4, #20]
   15d48:	ldr	r7, [r3, #4]
   15d4c:	ldr	r9, [r6, r5, lsl #3]
   15d50:	ldr	ip, [r4, #60]	; 0x3c
   15d54:	str	r3, [sp, #32]
   15d58:	ldr	r3, [r4, #16]
   15d5c:	str	r2, [sp, #12]
   15d60:	ldr	r2, [pc, #228]	; 15e4c <__snprintf_chk@plt+0x502c>
   15d64:	orr	r1, r1, #1
   15d68:	str	r1, [sp, #36]	; 0x24
   15d6c:	str	r1, [sp, #4]
   15d70:	str	r2, [sp, #8]
   15d74:	str	r3, [sp]
   15d78:	mov	r0, r7
   15d7c:	mov	r1, r9
   15d80:	str	ip, [sp, #16]
   15d84:	mov	r3, fp
   15d88:	mov	r2, sl
   15d8c:	bl	124a0 <__snprintf_chk@plt+0x1680>
   15d90:	cmp	r9, r0
   15d94:	bhi	15e00 <__snprintf_chk@plt+0x4fe0>
   15d98:	ldr	r3, [pc, #176]	; 15e50 <__snprintf_chk@plt+0x5030>
   15d9c:	add	r9, r0, #1
   15da0:	cmp	r7, r3
   15da4:	str	r9, [r6, r5, lsl #3]
   15da8:	beq	15db4 <__snprintf_chk@plt+0x4f94>
   15dac:	mov	r0, r7
   15db0:	bl	17628 <__snprintf_chk@plt+0x6808>
   15db4:	mov	r0, r9
   15db8:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   15dbc:	ldr	ip, [sp, #32]
   15dc0:	ldr	lr, [r4, #60]	; 0x3c
   15dc4:	ldr	r5, [r4, #56]	; 0x38
   15dc8:	mov	r3, fp
   15dcc:	mov	r2, sl
   15dd0:	mov	r1, r9
   15dd4:	str	r0, [ip, #4]
   15dd8:	ldr	ip, [r4, #16]
   15ddc:	ldr	r4, [pc, #104]	; 15e4c <__snprintf_chk@plt+0x502c>
   15de0:	str	lr, [sp, #16]
   15de4:	str	r4, [sp, #8]
   15de8:	ldr	r4, [sp, #36]	; 0x24
   15dec:	str	r5, [sp, #12]
   15df0:	str	r4, [sp, #4]
   15df4:	str	ip, [sp]
   15df8:	mov	r7, r0
   15dfc:	bl	124a0 <__snprintf_chk@plt+0x1680>
   15e00:	ldr	r3, [sp, #28]
   15e04:	mov	r0, r7
   15e08:	str	r3, [r8]
   15e0c:	add	sp, sp, #52	; 0x34
   15e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e14:	mov	r3, #8
   15e18:	sub	r2, r5, r2
   15e1c:	str	r3, [sp]
   15e20:	add	r1, sp, #44	; 0x2c
   15e24:	add	r2, r2, #1
   15e28:	mvn	r3, #-2147483648	; 0x80000000
   15e2c:	bl	16f98 <__snprintf_chk@plt+0x6178>
   15e30:	mov	r6, r0
   15e34:	ldm	r7, {r0, r1}
   15e38:	str	r6, [r4]
   15e3c:	stm	r6, {r0, r1}
   15e40:	b	15d18 <__snprintf_chk@plt+0x4ef8>
   15e44:	bl	10e14 <abort@plt>
   15e48:	andeq	r9, r2, r0, ror #1
   15e4c:	strdeq	r9, [r2], -r8
   15e50:	andeq	r9, r2, ip, ror r1
   15e54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e58:	sub	sp, sp, #44	; 0x2c
   15e5c:	mov	r9, r0
   15e60:	mov	sl, r1
   15e64:	bl	10d60 <__errno_location@plt>
   15e68:	ldr	r4, [pc, #360]	; 15fd8 <__snprintf_chk@plt+0x51b8>
   15e6c:	ldr	r2, [r4, #4]
   15e70:	ldr	r5, [r4]
   15e74:	cmp	r2, #0
   15e78:	ldr	r3, [r0]
   15e7c:	mov	r7, r0
   15e80:	str	r3, [sp, #24]
   15e84:	bgt	15ee0 <__snprintf_chk@plt+0x50c0>
   15e88:	add	r6, r4, #8
   15e8c:	cmp	r5, r6
   15e90:	str	r2, [sp, #36]	; 0x24
   15e94:	beq	15fa8 <__snprintf_chk@plt+0x5188>
   15e98:	mov	r3, #8
   15e9c:	mov	r0, r5
   15ea0:	str	r3, [sp]
   15ea4:	rsb	r2, r2, #1
   15ea8:	mvn	r3, #-2147483648	; 0x80000000
   15eac:	add	r1, sp, #36	; 0x24
   15eb0:	bl	16f98 <__snprintf_chk@plt+0x6178>
   15eb4:	mov	r5, r0
   15eb8:	str	r0, [r4]
   15ebc:	ldr	r0, [r4, #4]
   15ec0:	ldr	r2, [sp, #36]	; 0x24
   15ec4:	mov	r1, #0
   15ec8:	sub	r2, r2, r0
   15ecc:	add	r0, r5, r0, lsl #3
   15ed0:	lsl	r2, r2, #3
   15ed4:	bl	10d84 <memset@plt>
   15ed8:	ldr	r3, [sp, #36]	; 0x24
   15edc:	str	r3, [r4, #4]
   15ee0:	ldr	r1, [r4, #20]
   15ee4:	ldr	r8, [r5]
   15ee8:	ldr	r6, [r5, #4]
   15eec:	ldr	r2, [r4, #56]	; 0x38
   15ef0:	ldr	r3, [r4, #16]
   15ef4:	ldr	ip, [r4, #60]	; 0x3c
   15ef8:	ldr	fp, [pc, #220]	; 15fdc <__snprintf_chk@plt+0x51bc>
   15efc:	orr	r1, r1, #1
   15f00:	str	r1, [sp, #28]
   15f04:	str	r1, [sp, #4]
   15f08:	str	r2, [sp, #12]
   15f0c:	str	r3, [sp]
   15f10:	mov	r1, r8
   15f14:	mov	r0, r6
   15f18:	str	ip, [sp, #16]
   15f1c:	str	fp, [sp, #8]
   15f20:	mov	r3, sl
   15f24:	mov	r2, r9
   15f28:	bl	124a0 <__snprintf_chk@plt+0x1680>
   15f2c:	cmp	r8, r0
   15f30:	bhi	15f94 <__snprintf_chk@plt+0x5174>
   15f34:	ldr	r3, [pc, #164]	; 15fe0 <__snprintf_chk@plt+0x51c0>
   15f38:	add	r8, r0, #1
   15f3c:	cmp	r6, r3
   15f40:	str	r8, [r5]
   15f44:	beq	15f50 <__snprintf_chk@plt+0x5130>
   15f48:	mov	r0, r6
   15f4c:	bl	17628 <__snprintf_chk@plt+0x6808>
   15f50:	mov	r0, r8
   15f54:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   15f58:	ldr	lr, [r4, #60]	; 0x3c
   15f5c:	ldr	ip, [r4, #16]
   15f60:	mov	r3, sl
   15f64:	mov	r2, r9
   15f68:	mov	r1, r8
   15f6c:	str	r0, [r5, #4]
   15f70:	ldr	r5, [r4, #56]	; 0x38
   15f74:	ldr	r4, [sp, #28]
   15f78:	str	fp, [sp, #8]
   15f7c:	str	r4, [sp, #4]
   15f80:	str	lr, [sp, #16]
   15f84:	str	r5, [sp, #12]
   15f88:	str	ip, [sp]
   15f8c:	mov	r6, r0
   15f90:	bl	124a0 <__snprintf_chk@plt+0x1680>
   15f94:	ldr	r3, [sp, #24]
   15f98:	mov	r0, r6
   15f9c:	str	r3, [r7]
   15fa0:	add	sp, sp, #44	; 0x2c
   15fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fa8:	mov	r3, #8
   15fac:	str	r3, [sp]
   15fb0:	add	r1, sp, #36	; 0x24
   15fb4:	rsb	r2, r2, #1
   15fb8:	mvn	r3, #-2147483648	; 0x80000000
   15fbc:	mov	r0, #0
   15fc0:	bl	16f98 <__snprintf_chk@plt+0x6178>
   15fc4:	mov	r5, r0
   15fc8:	ldm	r6, {r0, r1}
   15fcc:	str	r5, [r4]
   15fd0:	stm	r5, {r0, r1}
   15fd4:	b	15ebc <__snprintf_chk@plt+0x509c>
   15fd8:	andeq	r9, r2, r0, ror #1
   15fdc:	strdeq	r9, [r2], -r8
   15fe0:	andeq	r9, r2, ip, ror r1
   15fe4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15fe8:	sub	sp, sp, #44	; 0x2c
   15fec:	mov	r5, r0
   15ff0:	mov	sl, r1
   15ff4:	bl	10d60 <__errno_location@plt>
   15ff8:	ldr	r4, [pc, #396]	; 1618c <__snprintf_chk@plt+0x536c>
   15ffc:	cmn	r5, #-2147483647	; 0x80000001
   16000:	ldr	r6, [r4]
   16004:	mov	r8, r0
   16008:	movne	r0, #0
   1600c:	moveq	r0, #1
   16010:	ldr	r3, [r8]
   16014:	orrs	r0, r0, r5, lsr #31
   16018:	str	r3, [sp, #24]
   1601c:	bne	16188 <__snprintf_chk@plt+0x5368>
   16020:	ldr	r2, [r4, #4]
   16024:	cmp	r5, r2
   16028:	blt	16088 <__snprintf_chk@plt+0x5268>
   1602c:	add	r7, r4, #8
   16030:	cmp	r6, r7
   16034:	str	r2, [sp, #36]	; 0x24
   16038:	beq	16158 <__snprintf_chk@plt+0x5338>
   1603c:	mov	r3, #8
   16040:	sub	r2, r5, r2
   16044:	mov	r0, r6
   16048:	str	r3, [sp]
   1604c:	add	r2, r2, #1
   16050:	mvn	r3, #-2147483648	; 0x80000000
   16054:	add	r1, sp, #36	; 0x24
   16058:	bl	16f98 <__snprintf_chk@plt+0x6178>
   1605c:	mov	r6, r0
   16060:	str	r0, [r4]
   16064:	ldr	r0, [r4, #4]
   16068:	ldr	r2, [sp, #36]	; 0x24
   1606c:	mov	r1, #0
   16070:	sub	r2, r2, r0
   16074:	add	r0, r6, r0, lsl #3
   16078:	lsl	r2, r2, #3
   1607c:	bl	10d84 <memset@plt>
   16080:	ldr	r3, [sp, #36]	; 0x24
   16084:	str	r3, [r4, #4]
   16088:	ldr	r2, [r4, #56]	; 0x38
   1608c:	add	fp, r6, r5, lsl #3
   16090:	ldr	r1, [r4, #20]
   16094:	ldr	r9, [r6, r5, lsl #3]
   16098:	ldr	r7, [fp, #4]
   1609c:	ldr	r3, [r4, #16]
   160a0:	ldr	ip, [r4, #60]	; 0x3c
   160a4:	str	r2, [sp, #12]
   160a8:	ldr	r2, [pc, #224]	; 16190 <__snprintf_chk@plt+0x5370>
   160ac:	orr	r1, r1, #1
   160b0:	str	r1, [sp, #28]
   160b4:	str	r1, [sp, #4]
   160b8:	str	r2, [sp, #8]
   160bc:	str	r3, [sp]
   160c0:	mov	r0, r7
   160c4:	mov	r1, r9
   160c8:	str	ip, [sp, #16]
   160cc:	mvn	r3, #0
   160d0:	mov	r2, sl
   160d4:	bl	124a0 <__snprintf_chk@plt+0x1680>
   160d8:	cmp	r9, r0
   160dc:	bhi	16144 <__snprintf_chk@plt+0x5324>
   160e0:	ldr	r3, [pc, #172]	; 16194 <__snprintf_chk@plt+0x5374>
   160e4:	add	r9, r0, #1
   160e8:	cmp	r7, r3
   160ec:	str	r9, [r6, r5, lsl #3]
   160f0:	beq	160fc <__snprintf_chk@plt+0x52dc>
   160f4:	mov	r0, r7
   160f8:	bl	17628 <__snprintf_chk@plt+0x6808>
   160fc:	mov	r0, r9
   16100:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   16104:	ldr	ip, [r4, #60]	; 0x3c
   16108:	ldr	r3, [r4, #16]
   1610c:	ldr	lr, [r4, #56]	; 0x38
   16110:	ldr	r4, [pc, #120]	; 16190 <__snprintf_chk@plt+0x5370>
   16114:	mov	r2, sl
   16118:	mov	r1, r9
   1611c:	str	r0, [fp, #4]
   16120:	str	r4, [sp, #8]
   16124:	ldr	r4, [sp, #28]
   16128:	str	r3, [sp]
   1612c:	str	r4, [sp, #4]
   16130:	str	ip, [sp, #16]
   16134:	str	lr, [sp, #12]
   16138:	mvn	r3, #0
   1613c:	mov	r7, r0
   16140:	bl	124a0 <__snprintf_chk@plt+0x1680>
   16144:	ldr	r3, [sp, #24]
   16148:	mov	r0, r7
   1614c:	str	r3, [r8]
   16150:	add	sp, sp, #44	; 0x2c
   16154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16158:	mov	r3, #8
   1615c:	sub	r2, r5, r2
   16160:	str	r3, [sp]
   16164:	add	r1, sp, #36	; 0x24
   16168:	add	r2, r2, #1
   1616c:	mvn	r3, #-2147483648	; 0x80000000
   16170:	bl	16f98 <__snprintf_chk@plt+0x6178>
   16174:	mov	r6, r0
   16178:	ldm	r7, {r0, r1}
   1617c:	str	r6, [r4]
   16180:	stm	r6, {r0, r1}
   16184:	b	16064 <__snprintf_chk@plt+0x5244>
   16188:	bl	10e14 <abort@plt>
   1618c:	andeq	r9, r2, r0, ror #1
   16190:	strdeq	r9, [r2], -r8
   16194:	andeq	r9, r2, ip, ror r1
   16198:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1619c:	sub	sp, sp, #44	; 0x2c
   161a0:	mov	sl, r0
   161a4:	bl	10d60 <__errno_location@plt>
   161a8:	ldr	r4, [pc, #348]	; 1630c <__snprintf_chk@plt+0x54ec>
   161ac:	ldr	r2, [r4, #4]
   161b0:	ldr	r5, [r4]
   161b4:	cmp	r2, #0
   161b8:	ldr	r3, [r0]
   161bc:	mov	r8, r0
   161c0:	str	r3, [sp, #28]
   161c4:	bgt	16220 <__snprintf_chk@plt+0x5400>
   161c8:	add	r6, r4, #8
   161cc:	cmp	r5, r6
   161d0:	str	r2, [sp, #36]	; 0x24
   161d4:	beq	162dc <__snprintf_chk@plt+0x54bc>
   161d8:	mov	r3, #8
   161dc:	mov	r0, r5
   161e0:	str	r3, [sp]
   161e4:	rsb	r2, r2, #1
   161e8:	mvn	r3, #-2147483648	; 0x80000000
   161ec:	add	r1, sp, #36	; 0x24
   161f0:	bl	16f98 <__snprintf_chk@plt+0x6178>
   161f4:	mov	r5, r0
   161f8:	str	r0, [r4]
   161fc:	ldr	r0, [r4, #4]
   16200:	ldr	r2, [sp, #36]	; 0x24
   16204:	mov	r1, #0
   16208:	sub	r2, r2, r0
   1620c:	add	r0, r5, r0, lsl #3
   16210:	lsl	r2, r2, #3
   16214:	bl	10d84 <memset@plt>
   16218:	ldr	r3, [sp, #36]	; 0x24
   1621c:	str	r3, [r4, #4]
   16220:	ldr	r7, [r4, #20]
   16224:	ldr	r9, [r5]
   16228:	ldr	r6, [r5, #4]
   1622c:	ldr	r2, [r4, #56]	; 0x38
   16230:	ldr	r3, [r4, #16]
   16234:	ldr	ip, [r4, #60]	; 0x3c
   16238:	ldr	fp, [pc, #208]	; 16310 <__snprintf_chk@plt+0x54f0>
   1623c:	orr	r7, r7, #1
   16240:	str	r2, [sp, #12]
   16244:	str	r3, [sp]
   16248:	str	r7, [sp, #4]
   1624c:	mov	r1, r9
   16250:	mov	r0, r6
   16254:	str	ip, [sp, #16]
   16258:	str	fp, [sp, #8]
   1625c:	mvn	r3, #0
   16260:	mov	r2, sl
   16264:	bl	124a0 <__snprintf_chk@plt+0x1680>
   16268:	cmp	r9, r0
   1626c:	bhi	162c8 <__snprintf_chk@plt+0x54a8>
   16270:	ldr	r3, [pc, #156]	; 16314 <__snprintf_chk@plt+0x54f4>
   16274:	add	r9, r0, #1
   16278:	cmp	r6, r3
   1627c:	str	r9, [r5]
   16280:	beq	1628c <__snprintf_chk@plt+0x546c>
   16284:	mov	r0, r6
   16288:	bl	17628 <__snprintf_chk@plt+0x6808>
   1628c:	mov	r0, r9
   16290:	bl	16d7c <__snprintf_chk@plt+0x5f5c>
   16294:	ldr	ip, [r4, #60]	; 0x3c
   16298:	ldr	r3, [r4, #16]
   1629c:	ldr	lr, [r4, #56]	; 0x38
   162a0:	mov	r2, sl
   162a4:	mov	r1, r9
   162a8:	str	r0, [r5, #4]
   162ac:	str	r3, [sp]
   162b0:	stmib	sp, {r7, fp}
   162b4:	str	ip, [sp, #16]
   162b8:	str	lr, [sp, #12]
   162bc:	mvn	r3, #0
   162c0:	mov	r6, r0
   162c4:	bl	124a0 <__snprintf_chk@plt+0x1680>
   162c8:	ldr	r3, [sp, #28]
   162cc:	mov	r0, r6
   162d0:	str	r3, [r8]
   162d4:	add	sp, sp, #44	; 0x2c
   162d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162dc:	mov	r3, #8
   162e0:	str	r3, [sp]
   162e4:	add	r1, sp, #36	; 0x24
   162e8:	rsb	r2, r2, #1
   162ec:	mvn	r3, #-2147483648	; 0x80000000
   162f0:	mov	r0, #0
   162f4:	bl	16f98 <__snprintf_chk@plt+0x6178>
   162f8:	mov	r5, r0
   162fc:	ldm	r6, {r0, r1}
   16300:	str	r5, [r4]
   16304:	stm	r5, {r0, r1}
   16308:	b	161fc <__snprintf_chk@plt+0x53dc>
   1630c:	andeq	r9, r2, r0, ror #1
   16310:	strdeq	r9, [r2], -r8
   16314:	andeq	r9, r2, ip, ror r1
   16318:	push	{r4, r5, r6, lr}
   1631c:	sub	sp, sp, #32
   16320:	cmp	r1, #0
   16324:	mov	r4, r0
   16328:	ldr	r5, [sp, #48]	; 0x30
   1632c:	ldr	r6, [sp, #52]	; 0x34
   16330:	beq	16648 <__snprintf_chk@plt+0x5828>
   16334:	stm	sp, {r2, r3}
   16338:	mov	r3, r1
   1633c:	ldr	r2, [pc, #808]	; 1666c <__snprintf_chk@plt+0x584c>
   16340:	mov	r1, #1
   16344:	bl	10db4 <__fprintf_chk@plt>
   16348:	mov	r2, #5
   1634c:	ldr	r1, [pc, #796]	; 16670 <__snprintf_chk@plt+0x5850>
   16350:	mov	r0, #0
   16354:	bl	10c70 <dcgettext@plt>
   16358:	ldr	r3, [pc, #788]	; 16674 <__snprintf_chk@plt+0x5854>
   1635c:	ldr	r2, [pc, #788]	; 16678 <__snprintf_chk@plt+0x5858>
   16360:	str	r3, [sp]
   16364:	mov	r1, #1
   16368:	mov	r3, r0
   1636c:	mov	r0, r4
   16370:	bl	10db4 <__fprintf_chk@plt>
   16374:	mov	r1, r4
   16378:	mov	r0, #10
   1637c:	bl	10c64 <fputc_unlocked@plt>
   16380:	mov	r2, #5
   16384:	ldr	r1, [pc, #752]	; 1667c <__snprintf_chk@plt+0x585c>
   16388:	mov	r0, #0
   1638c:	bl	10c70 <dcgettext@plt>
   16390:	mov	r1, #1
   16394:	ldr	r3, [pc, #740]	; 16680 <__snprintf_chk@plt+0x5860>
   16398:	mov	r2, r0
   1639c:	mov	r0, r4
   163a0:	bl	10db4 <__fprintf_chk@plt>
   163a4:	mov	r1, r4
   163a8:	mov	r0, #10
   163ac:	bl	10c64 <fputc_unlocked@plt>
   163b0:	cmp	r6, #9
   163b4:	ldrls	pc, [pc, r6, lsl #2]
   163b8:	b	16660 <__snprintf_chk@plt+0x5840>
   163bc:	andeq	r6, r1, r0, asr #8
   163c0:	andeq	r6, r1, r8, asr #8
   163c4:	andeq	r6, r1, r4, ror r4
   163c8:	andeq	r6, r1, r8, lsr #9
   163cc:	andeq	r6, r1, r4, ror #9
   163d0:	andeq	r6, r1, r0, lsr #10
   163d4:	andeq	r6, r1, ip, asr r5
   163d8:	andeq	r6, r1, r0, lsr #11
   163dc:	strdeq	r6, [r1], -r0
   163e0:	andeq	r6, r1, r4, ror #7
   163e4:	ldr	r1, [pc, #664]	; 16684 <__snprintf_chk@plt+0x5864>
   163e8:	mov	r2, #5
   163ec:	mov	r0, #0
   163f0:	bl	10c70 <dcgettext@plt>
   163f4:	ldr	ip, [r5, #32]
   163f8:	ldr	r1, [r5, #28]
   163fc:	ldr	r2, [r5, #24]
   16400:	ldr	r3, [r5]
   16404:	ldr	r6, [r5, #20]
   16408:	str	ip, [sp, #28]
   1640c:	ldr	lr, [r5, #16]
   16410:	str	r1, [sp, #24]
   16414:	ldr	ip, [r5, #12]
   16418:	str	r2, [sp, #20]
   1641c:	ldr	r1, [r5, #8]
   16420:	ldr	r2, [r5, #4]
   16424:	str	r6, [sp, #16]
   16428:	stmib	sp, {r1, ip, lr}
   1642c:	mov	r1, #1
   16430:	str	r2, [sp]
   16434:	mov	r2, r0
   16438:	mov	r0, r4
   1643c:	bl	10db4 <__fprintf_chk@plt>
   16440:	add	sp, sp, #32
   16444:	pop	{r4, r5, r6, pc}
   16448:	mov	r2, #5
   1644c:	ldr	r1, [pc, #564]	; 16688 <__snprintf_chk@plt+0x5868>
   16450:	mov	r0, #0
   16454:	bl	10c70 <dcgettext@plt>
   16458:	ldr	r3, [r5]
   1645c:	mov	r1, #1
   16460:	mov	r2, r0
   16464:	mov	r0, r4
   16468:	add	sp, sp, #32
   1646c:	pop	{r4, r5, r6, lr}
   16470:	b	10db4 <__fprintf_chk@plt>
   16474:	mov	r2, #5
   16478:	ldr	r1, [pc, #524]	; 1668c <__snprintf_chk@plt+0x586c>
   1647c:	mov	r0, #0
   16480:	bl	10c70 <dcgettext@plt>
   16484:	ldr	r2, [r5, #4]
   16488:	ldr	r3, [r5]
   1648c:	mov	r1, #1
   16490:	str	r2, [sp, #48]	; 0x30
   16494:	mov	r2, r0
   16498:	mov	r0, r4
   1649c:	add	sp, sp, #32
   164a0:	pop	{r4, r5, r6, lr}
   164a4:	b	10db4 <__fprintf_chk@plt>
   164a8:	mov	r2, #5
   164ac:	ldr	r1, [pc, #476]	; 16690 <__snprintf_chk@plt+0x5870>
   164b0:	mov	r0, #0
   164b4:	bl	10c70 <dcgettext@plt>
   164b8:	ldr	r1, [r5, #8]
   164bc:	ldr	r2, [r5, #4]
   164c0:	ldr	r3, [r5]
   164c4:	str	r1, [sp, #52]	; 0x34
   164c8:	str	r2, [sp, #48]	; 0x30
   164cc:	mov	r1, #1
   164d0:	mov	r2, r0
   164d4:	mov	r0, r4
   164d8:	add	sp, sp, #32
   164dc:	pop	{r4, r5, r6, lr}
   164e0:	b	10db4 <__fprintf_chk@plt>
   164e4:	mov	r2, #5
   164e8:	ldr	r1, [pc, #420]	; 16694 <__snprintf_chk@plt+0x5874>
   164ec:	mov	r0, #0
   164f0:	bl	10c70 <dcgettext@plt>
   164f4:	ldr	r1, [r5, #8]
   164f8:	ldr	ip, [r5, #12]
   164fc:	ldr	r2, [r5, #4]
   16500:	ldr	r3, [r5]
   16504:	stmib	sp, {r1, ip}
   16508:	str	r2, [sp]
   1650c:	mov	r1, #1
   16510:	mov	r2, r0
   16514:	mov	r0, r4
   16518:	bl	10db4 <__fprintf_chk@plt>
   1651c:	b	16440 <__snprintf_chk@plt+0x5620>
   16520:	mov	r2, #5
   16524:	ldr	r1, [pc, #364]	; 16698 <__snprintf_chk@plt+0x5878>
   16528:	mov	r0, #0
   1652c:	bl	10c70 <dcgettext@plt>
   16530:	add	r1, r5, #8
   16534:	ldr	r2, [r5, #4]
   16538:	ldm	r1, {r1, ip, lr}
   1653c:	ldr	r3, [r5]
   16540:	str	r2, [sp]
   16544:	stmib	sp, {r1, ip, lr}
   16548:	mov	r1, #1
   1654c:	mov	r2, r0
   16550:	mov	r0, r4
   16554:	bl	10db4 <__fprintf_chk@plt>
   16558:	b	16440 <__snprintf_chk@plt+0x5620>
   1655c:	mov	r2, #5
   16560:	ldr	r1, [pc, #308]	; 1669c <__snprintf_chk@plt+0x587c>
   16564:	mov	r0, #0
   16568:	bl	10c70 <dcgettext@plt>
   1656c:	add	r1, r5, #8
   16570:	ldr	r2, [r5, #4]
   16574:	ldm	r1, {r1, ip, lr}
   16578:	ldr	r6, [r5, #20]
   1657c:	ldr	r3, [r5]
   16580:	stmib	sp, {r1, ip, lr}
   16584:	mov	r1, #1
   16588:	str	r2, [sp]
   1658c:	str	r6, [sp, #16]
   16590:	mov	r2, r0
   16594:	mov	r0, r4
   16598:	bl	10db4 <__fprintf_chk@plt>
   1659c:	b	16440 <__snprintf_chk@plt+0x5620>
   165a0:	mov	r2, #5
   165a4:	ldr	r1, [pc, #244]	; 166a0 <__snprintf_chk@plt+0x5880>
   165a8:	mov	r0, #0
   165ac:	bl	10c70 <dcgettext@plt>
   165b0:	ldr	r2, [r5, #24]
   165b4:	ldr	r3, [r5]
   165b8:	ldr	r6, [r5, #20]
   165bc:	ldr	lr, [r5, #16]
   165c0:	ldr	ip, [r5, #12]
   165c4:	str	r2, [sp, #20]
   165c8:	ldr	r1, [r5, #8]
   165cc:	ldr	r2, [r5, #4]
   165d0:	str	r6, [sp, #16]
   165d4:	stmib	sp, {r1, ip, lr}
   165d8:	mov	r1, #1
   165dc:	str	r2, [sp]
   165e0:	mov	r2, r0
   165e4:	mov	r0, r4
   165e8:	bl	10db4 <__fprintf_chk@plt>
   165ec:	b	16440 <__snprintf_chk@plt+0x5620>
   165f0:	mov	r2, #5
   165f4:	ldr	r1, [pc, #168]	; 166a4 <__snprintf_chk@plt+0x5884>
   165f8:	mov	r0, #0
   165fc:	bl	10c70 <dcgettext@plt>
   16600:	ldr	r1, [r5, #28]
   16604:	ldr	r2, [r5, #24]
   16608:	ldr	r3, [r5]
   1660c:	ldr	r6, [r5, #20]
   16610:	ldr	lr, [r5, #16]
   16614:	str	r1, [sp, #24]
   16618:	ldr	ip, [r5, #12]
   1661c:	str	r2, [sp, #20]
   16620:	ldr	r1, [r5, #8]
   16624:	ldr	r2, [r5, #4]
   16628:	str	r6, [sp, #16]
   1662c:	stmib	sp, {r1, ip, lr}
   16630:	mov	r1, #1
   16634:	str	r2, [sp]
   16638:	mov	r2, r0
   1663c:	mov	r0, r4
   16640:	bl	10db4 <__fprintf_chk@plt>
   16644:	b	16440 <__snprintf_chk@plt+0x5620>
   16648:	str	r3, [sp]
   1664c:	mov	r1, #1
   16650:	mov	r3, r2
   16654:	ldr	r2, [pc, #76]	; 166a8 <__snprintf_chk@plt+0x5888>
   16658:	bl	10db4 <__fprintf_chk@plt>
   1665c:	b	16348 <__snprintf_chk@plt+0x5528>
   16660:	mov	r2, #5
   16664:	ldr	r1, [pc, #64]	; 166ac <__snprintf_chk@plt+0x588c>
   16668:	b	163ec <__snprintf_chk@plt+0x55cc>
   1666c:	andeq	r8, r1, r0, lsr #11
   16670:			; <UNDEFINED> instruction: 0x000185b4
   16674:	andeq	r0, r0, r6, ror #15
   16678:	andeq	r8, r1, ip, lsl #17
   1667c:			; <UNDEFINED> instruction: 0x000185b8
   16680:	andeq	r8, r1, r4, ror #12
   16684:	muleq	r1, r4, r7
   16688:	andeq	r8, r1, r8, lsl #13
   1668c:	muleq	r1, r8, r6
   16690:			; <UNDEFINED> instruction: 0x000186b0
   16694:	andeq	r8, r1, ip, asr #13
   16698:	andeq	r8, r1, ip, ror #13
   1669c:	andeq	r8, r1, r0, lsl r7
   166a0:	andeq	r8, r1, r8, lsr r7
   166a4:	andeq	r8, r1, r4, ror #14
   166a8:	andeq	r8, r1, ip, lsr #11
   166ac:	andeq	r8, r1, r8, asr #15
   166b0:	push	{r4, r5, lr}
   166b4:	sub	sp, sp, #12
   166b8:	ldr	r5, [sp, #24]
   166bc:	ldr	ip, [r5]
   166c0:	cmp	ip, #0
   166c4:	beq	166e0 <__snprintf_chk@plt+0x58c0>
   166c8:	mov	lr, r5
   166cc:	mov	ip, #0
   166d0:	ldr	r4, [lr, #4]!
   166d4:	add	ip, ip, #1
   166d8:	cmp	r4, #0
   166dc:	bne	166d0 <__snprintf_chk@plt+0x58b0>
   166e0:	stm	sp, {r5, ip}
   166e4:	bl	16318 <__snprintf_chk@plt+0x54f8>
   166e8:	add	sp, sp, #12
   166ec:	pop	{r4, r5, pc}
   166f0:	push	{r4, r5, lr}
   166f4:	sub	sp, sp, #76	; 0x4c
   166f8:	mov	r5, r0
   166fc:	ldr	ip, [sp, #88]	; 0x58
   16700:	ldr	r0, [ip]
   16704:	cmp	r0, #0
   16708:	str	r0, [sp, #32]
   1670c:	beq	16ae0 <__snprintf_chk@plt+0x5cc0>
   16710:	ldr	r0, [ip, #4]
   16714:	cmp	r0, #0
   16718:	str	r0, [sp, #36]	; 0x24
   1671c:	beq	16ae8 <__snprintf_chk@plt+0x5cc8>
   16720:	ldr	r0, [ip, #8]
   16724:	cmp	r0, #0
   16728:	str	r0, [sp, #40]	; 0x28
   1672c:	beq	16af0 <__snprintf_chk@plt+0x5cd0>
   16730:	ldr	r0, [ip, #12]
   16734:	cmp	r0, #0
   16738:	str	r0, [sp, #44]	; 0x2c
   1673c:	beq	16af8 <__snprintf_chk@plt+0x5cd8>
   16740:	ldr	r0, [ip, #16]
   16744:	cmp	r0, #0
   16748:	str	r0, [sp, #48]	; 0x30
   1674c:	beq	16b00 <__snprintf_chk@plt+0x5ce0>
   16750:	ldr	r0, [ip, #20]
   16754:	cmp	r0, #0
   16758:	str	r0, [sp, #52]	; 0x34
   1675c:	beq	16b08 <__snprintf_chk@plt+0x5ce8>
   16760:	ldr	r0, [ip, #24]
   16764:	cmp	r0, #0
   16768:	str	r0, [sp, #56]	; 0x38
   1676c:	beq	16b10 <__snprintf_chk@plt+0x5cf0>
   16770:	ldr	r0, [ip, #28]
   16774:	cmp	r0, #0
   16778:	str	r0, [sp, #60]	; 0x3c
   1677c:	beq	16b18 <__snprintf_chk@plt+0x5cf8>
   16780:	ldr	r0, [ip, #32]
   16784:	cmp	r0, #0
   16788:	str	r0, [sp, #64]	; 0x40
   1678c:	beq	16b20 <__snprintf_chk@plt+0x5d00>
   16790:	ldr	r0, [ip, #36]	; 0x24
   16794:	cmp	r0, #0
   16798:	movne	r4, #10
   1679c:	moveq	r4, #9
   167a0:	cmp	r1, #0
   167a4:	beq	16ab8 <__snprintf_chk@plt+0x5c98>
   167a8:	stm	sp, {r2, r3}
   167ac:	mov	r0, r5
   167b0:	mov	r3, r1
   167b4:	ldr	r2, [pc, #876]	; 16b28 <__snprintf_chk@plt+0x5d08>
   167b8:	mov	r1, #1
   167bc:	bl	10db4 <__fprintf_chk@plt>
   167c0:	mov	r2, #5
   167c4:	ldr	r1, [pc, #864]	; 16b2c <__snprintf_chk@plt+0x5d0c>
   167c8:	mov	r0, #0
   167cc:	bl	10c70 <dcgettext@plt>
   167d0:	ldr	r3, [pc, #856]	; 16b30 <__snprintf_chk@plt+0x5d10>
   167d4:	ldr	r2, [pc, #856]	; 16b34 <__snprintf_chk@plt+0x5d14>
   167d8:	str	r3, [sp]
   167dc:	mov	r1, #1
   167e0:	mov	r3, r0
   167e4:	mov	r0, r5
   167e8:	bl	10db4 <__fprintf_chk@plt>
   167ec:	mov	r1, r5
   167f0:	mov	r0, #10
   167f4:	bl	10c64 <fputc_unlocked@plt>
   167f8:	mov	r2, #5
   167fc:	ldr	r1, [pc, #820]	; 16b38 <__snprintf_chk@plt+0x5d18>
   16800:	mov	r0, #0
   16804:	bl	10c70 <dcgettext@plt>
   16808:	mov	r1, #1
   1680c:	ldr	r3, [pc, #808]	; 16b3c <__snprintf_chk@plt+0x5d1c>
   16810:	mov	r2, r0
   16814:	mov	r0, r5
   16818:	bl	10db4 <__fprintf_chk@plt>
   1681c:	mov	r1, r5
   16820:	mov	r0, #10
   16824:	bl	10c64 <fputc_unlocked@plt>
   16828:	cmp	r4, #9
   1682c:	ldrls	pc, [pc, r4, lsl #2]
   16830:	b	16ad4 <__snprintf_chk@plt+0x5cb4>
   16834:			; <UNDEFINED> instruction: 0x000168b8
   16838:	andeq	r6, r1, r0, asr #17
   1683c:	andeq	r6, r1, ip, ror #17
   16840:	andeq	r6, r1, r0, lsr #18
   16844:	andeq	r6, r1, r8, asr r9
   16848:	muleq	r1, r4, r9
   1684c:	ldrdeq	r6, [r1], -r0
   16850:	andeq	r6, r1, r4, lsl sl
   16854:	andeq	r6, r1, r0, ror #20
   16858:	andeq	r6, r1, ip, asr r8
   1685c:	ldr	r1, [pc, #732]	; 16b40 <__snprintf_chk@plt+0x5d20>
   16860:	mov	r2, #5
   16864:	mov	r0, #0
   16868:	bl	10c70 <dcgettext@plt>
   1686c:	ldr	ip, [sp, #64]	; 0x40
   16870:	ldr	r1, [sp, #60]	; 0x3c
   16874:	ldr	r2, [sp, #56]	; 0x38
   16878:	ldr	lr, [sp, #48]	; 0x30
   1687c:	str	ip, [sp, #28]
   16880:	str	r1, [sp, #24]
   16884:	ldr	ip, [sp, #44]	; 0x2c
   16888:	ldr	r1, [sp, #40]	; 0x28
   1688c:	ldr	r4, [sp, #52]	; 0x34
   16890:	str	r2, [sp, #20]
   16894:	ldr	r2, [sp, #36]	; 0x24
   16898:	stmib	sp, {r1, ip, lr}
   1689c:	mov	r1, #1
   168a0:	str	r2, [sp]
   168a4:	ldr	r3, [sp, #32]
   168a8:	str	r4, [sp, #16]
   168ac:	mov	r2, r0
   168b0:	mov	r0, r5
   168b4:	bl	10db4 <__fprintf_chk@plt>
   168b8:	add	sp, sp, #76	; 0x4c
   168bc:	pop	{r4, r5, pc}
   168c0:	mov	r2, #5
   168c4:	ldr	r1, [pc, #632]	; 16b44 <__snprintf_chk@plt+0x5d24>
   168c8:	mov	r0, #0
   168cc:	bl	10c70 <dcgettext@plt>
   168d0:	ldr	r3, [sp, #32]
   168d4:	mov	r1, #1
   168d8:	mov	r2, r0
   168dc:	mov	r0, r5
   168e0:	add	sp, sp, #76	; 0x4c
   168e4:	pop	{r4, r5, lr}
   168e8:	b	10db4 <__fprintf_chk@plt>
   168ec:	mov	r2, #5
   168f0:	ldr	r1, [pc, #592]	; 16b48 <__snprintf_chk@plt+0x5d28>
   168f4:	mov	r0, #0
   168f8:	bl	10c70 <dcgettext@plt>
   168fc:	ldr	r2, [sp, #36]	; 0x24
   16900:	ldr	r3, [sp, #32]
   16904:	str	r2, [sp, #88]	; 0x58
   16908:	mov	r1, #1
   1690c:	mov	r2, r0
   16910:	mov	r0, r5
   16914:	add	sp, sp, #76	; 0x4c
   16918:	pop	{r4, r5, lr}
   1691c:	b	10db4 <__fprintf_chk@plt>
   16920:	mov	r2, #5
   16924:	ldr	r1, [pc, #544]	; 16b4c <__snprintf_chk@plt+0x5d2c>
   16928:	mov	r0, #0
   1692c:	bl	10c70 <dcgettext@plt>
   16930:	ldr	r1, [sp, #40]	; 0x28
   16934:	ldr	r2, [sp, #36]	; 0x24
   16938:	str	r1, [sp, #4]
   1693c:	str	r2, [sp]
   16940:	ldr	r3, [sp, #32]
   16944:	mov	r1, #1
   16948:	mov	r2, r0
   1694c:	mov	r0, r5
   16950:	bl	10db4 <__fprintf_chk@plt>
   16954:	b	168b8 <__snprintf_chk@plt+0x5a98>
   16958:	mov	r2, #5
   1695c:	ldr	r1, [pc, #492]	; 16b50 <__snprintf_chk@plt+0x5d30>
   16960:	mov	r0, #0
   16964:	bl	10c70 <dcgettext@plt>
   16968:	ldr	r1, [sp, #40]	; 0x28
   1696c:	ldr	ip, [sp, #44]	; 0x2c
   16970:	ldr	r2, [sp, #36]	; 0x24
   16974:	ldr	r3, [sp, #32]
   16978:	stmib	sp, {r1, ip}
   1697c:	str	r2, [sp]
   16980:	mov	r1, #1
   16984:	mov	r2, r0
   16988:	mov	r0, r5
   1698c:	bl	10db4 <__fprintf_chk@plt>
   16990:	b	168b8 <__snprintf_chk@plt+0x5a98>
   16994:	mov	r2, #5
   16998:	ldr	r1, [pc, #436]	; 16b54 <__snprintf_chk@plt+0x5d34>
   1699c:	mov	r0, #0
   169a0:	bl	10c70 <dcgettext@plt>
   169a4:	add	r1, sp, #40	; 0x28
   169a8:	ldr	r2, [sp, #36]	; 0x24
   169ac:	ldm	r1, {r1, ip, lr}
   169b0:	ldr	r3, [sp, #32]
   169b4:	str	r2, [sp]
   169b8:	stmib	sp, {r1, ip, lr}
   169bc:	mov	r1, #1
   169c0:	mov	r2, r0
   169c4:	mov	r0, r5
   169c8:	bl	10db4 <__fprintf_chk@plt>
   169cc:	b	168b8 <__snprintf_chk@plt+0x5a98>
   169d0:	mov	r2, #5
   169d4:	ldr	r1, [pc, #380]	; 16b58 <__snprintf_chk@plt+0x5d38>
   169d8:	mov	r0, #0
   169dc:	bl	10c70 <dcgettext@plt>
   169e0:	add	r1, sp, #40	; 0x28
   169e4:	ldr	r2, [sp, #36]	; 0x24
   169e8:	ldm	r1, {r1, ip, lr}
   169ec:	ldr	r4, [sp, #52]	; 0x34
   169f0:	str	r2, [sp]
   169f4:	stmib	sp, {r1, ip, lr}
   169f8:	mov	r1, #1
   169fc:	ldr	r3, [sp, #32]
   16a00:	str	r4, [sp, #16]
   16a04:	mov	r2, r0
   16a08:	mov	r0, r5
   16a0c:	bl	10db4 <__fprintf_chk@plt>
   16a10:	b	168b8 <__snprintf_chk@plt+0x5a98>
   16a14:	mov	r2, #5
   16a18:	ldr	r1, [pc, #316]	; 16b5c <__snprintf_chk@plt+0x5d3c>
   16a1c:	mov	r0, #0
   16a20:	bl	10c70 <dcgettext@plt>
   16a24:	add	r1, sp, #40	; 0x28
   16a28:	ldr	r2, [sp, #56]	; 0x38
   16a2c:	ldm	r1, {r1, ip, lr}
   16a30:	ldr	r4, [sp, #52]	; 0x34
   16a34:	str	r2, [sp, #20]
   16a38:	ldr	r2, [sp, #36]	; 0x24
   16a3c:	stmib	sp, {r1, ip, lr}
   16a40:	mov	r1, #1
   16a44:	str	r2, [sp]
   16a48:	ldr	r3, [sp, #32]
   16a4c:	str	r4, [sp, #16]
   16a50:	mov	r2, r0
   16a54:	mov	r0, r5
   16a58:	bl	10db4 <__fprintf_chk@plt>
   16a5c:	b	168b8 <__snprintf_chk@plt+0x5a98>
   16a60:	mov	r2, #5
   16a64:	ldr	r1, [pc, #244]	; 16b60 <__snprintf_chk@plt+0x5d40>
   16a68:	mov	r0, #0
   16a6c:	bl	10c70 <dcgettext@plt>
   16a70:	ldr	r1, [sp, #60]	; 0x3c
   16a74:	ldr	r2, [sp, #56]	; 0x38
   16a78:	ldr	lr, [sp, #48]	; 0x30
   16a7c:	ldr	ip, [sp, #44]	; 0x2c
   16a80:	str	r1, [sp, #24]
   16a84:	ldr	r1, [sp, #40]	; 0x28
   16a88:	ldr	r4, [sp, #52]	; 0x34
   16a8c:	str	r2, [sp, #20]
   16a90:	ldr	r2, [sp, #36]	; 0x24
   16a94:	stmib	sp, {r1, ip, lr}
   16a98:	mov	r1, #1
   16a9c:	str	r2, [sp]
   16aa0:	ldr	r3, [sp, #32]
   16aa4:	str	r4, [sp, #16]
   16aa8:	mov	r2, r0
   16aac:	mov	r0, r5
   16ab0:	bl	10db4 <__fprintf_chk@plt>
   16ab4:	b	168b8 <__snprintf_chk@plt+0x5a98>
   16ab8:	str	r3, [sp]
   16abc:	mov	r1, #1
   16ac0:	mov	r3, r2
   16ac4:	mov	r0, r5
   16ac8:	ldr	r2, [pc, #148]	; 16b64 <__snprintf_chk@plt+0x5d44>
   16acc:	bl	10db4 <__fprintf_chk@plt>
   16ad0:	b	167c0 <__snprintf_chk@plt+0x59a0>
   16ad4:	mov	r2, #5
   16ad8:	ldr	r1, [pc, #136]	; 16b68 <__snprintf_chk@plt+0x5d48>
   16adc:	b	16864 <__snprintf_chk@plt+0x5a44>
   16ae0:	mov	r4, r0
   16ae4:	b	167a0 <__snprintf_chk@plt+0x5980>
   16ae8:	mov	r4, #1
   16aec:	b	167a0 <__snprintf_chk@plt+0x5980>
   16af0:	mov	r4, #2
   16af4:	b	167a0 <__snprintf_chk@plt+0x5980>
   16af8:	mov	r4, #3
   16afc:	b	167a0 <__snprintf_chk@plt+0x5980>
   16b00:	mov	r4, #4
   16b04:	b	167a0 <__snprintf_chk@plt+0x5980>
   16b08:	mov	r4, #5
   16b0c:	b	167a0 <__snprintf_chk@plt+0x5980>
   16b10:	mov	r4, #6
   16b14:	b	167a0 <__snprintf_chk@plt+0x5980>
   16b18:	mov	r4, #7
   16b1c:	b	167a0 <__snprintf_chk@plt+0x5980>
   16b20:	mov	r4, #8
   16b24:	b	167a0 <__snprintf_chk@plt+0x5980>
   16b28:	andeq	r8, r1, r0, lsr #11
   16b2c:			; <UNDEFINED> instruction: 0x000185b4
   16b30:	andeq	r0, r0, r6, ror #15
   16b34:	andeq	r8, r1, ip, lsl #17
   16b38:			; <UNDEFINED> instruction: 0x000185b8
   16b3c:	andeq	r8, r1, r4, ror #12
   16b40:	muleq	r1, r4, r7
   16b44:	andeq	r8, r1, r8, lsl #13
   16b48:	muleq	r1, r8, r6
   16b4c:			; <UNDEFINED> instruction: 0x000186b0
   16b50:	andeq	r8, r1, ip, asr #13
   16b54:	andeq	r8, r1, ip, ror #13
   16b58:	andeq	r8, r1, r0, lsl r7
   16b5c:	andeq	r8, r1, r8, lsr r7
   16b60:	andeq	r8, r1, r4, ror #14
   16b64:	andeq	r8, r1, ip, lsr #11
   16b68:	andeq	r8, r1, r8, asr #15
   16b6c:	push	{r3}		; (str r3, [sp, #-4]!)
   16b70:	push	{lr}		; (str lr, [sp, #-4]!)
   16b74:	sub	sp, sp, #56	; 0x38
   16b78:	add	r3, sp, #64	; 0x40
   16b7c:	ldr	ip, [sp, #64]	; 0x40
   16b80:	str	r3, [sp, #12]
   16b84:	cmp	ip, #0
   16b88:	str	ip, [sp, #16]
   16b8c:	beq	16c24 <__snprintf_chk@plt+0x5e04>
   16b90:	ldr	ip, [sp, #68]	; 0x44
   16b94:	cmp	ip, #0
   16b98:	str	ip, [sp, #20]
   16b9c:	beq	16c44 <__snprintf_chk@plt+0x5e24>
   16ba0:	ldr	ip, [sp, #72]	; 0x48
   16ba4:	cmp	ip, #0
   16ba8:	str	ip, [sp, #24]
   16bac:	beq	16c4c <__snprintf_chk@plt+0x5e2c>
   16bb0:	ldr	ip, [sp, #76]	; 0x4c
   16bb4:	cmp	ip, #0
   16bb8:	str	ip, [sp, #28]
   16bbc:	beq	16c54 <__snprintf_chk@plt+0x5e34>
   16bc0:	ldr	ip, [sp, #80]	; 0x50
   16bc4:	cmp	ip, #0
   16bc8:	str	ip, [sp, #32]
   16bcc:	beq	16c5c <__snprintf_chk@plt+0x5e3c>
   16bd0:	ldr	ip, [sp, #84]	; 0x54
   16bd4:	cmp	ip, #0
   16bd8:	str	ip, [sp, #36]	; 0x24
   16bdc:	beq	16c64 <__snprintf_chk@plt+0x5e44>
   16be0:	ldr	ip, [sp, #88]	; 0x58
   16be4:	cmp	ip, #0
   16be8:	str	ip, [sp, #40]	; 0x28
   16bec:	beq	16c6c <__snprintf_chk@plt+0x5e4c>
   16bf0:	ldr	ip, [sp, #92]	; 0x5c
   16bf4:	cmp	ip, #0
   16bf8:	str	ip, [sp, #44]	; 0x2c
   16bfc:	beq	16c74 <__snprintf_chk@plt+0x5e54>
   16c00:	ldr	ip, [sp, #96]	; 0x60
   16c04:	cmp	ip, #0
   16c08:	str	ip, [sp, #48]	; 0x30
   16c0c:	beq	16c7c <__snprintf_chk@plt+0x5e5c>
   16c10:	ldr	ip, [sp, #100]	; 0x64
   16c14:	cmp	ip, #0
   16c18:	str	ip, [sp, #52]	; 0x34
   16c1c:	movne	ip, #10
   16c20:	moveq	ip, #9
   16c24:	add	r3, sp, #16
   16c28:	stm	sp, {r3, ip}
   16c2c:	ldr	r3, [sp, #60]	; 0x3c
   16c30:	bl	16318 <__snprintf_chk@plt+0x54f8>
   16c34:	add	sp, sp, #56	; 0x38
   16c38:	pop	{lr}		; (ldr lr, [sp], #4)
   16c3c:	add	sp, sp, #4
   16c40:	bx	lr
   16c44:	mov	ip, #1
   16c48:	b	16c24 <__snprintf_chk@plt+0x5e04>
   16c4c:	mov	ip, #2
   16c50:	b	16c24 <__snprintf_chk@plt+0x5e04>
   16c54:	mov	ip, #3
   16c58:	b	16c24 <__snprintf_chk@plt+0x5e04>
   16c5c:	mov	ip, #4
   16c60:	b	16c24 <__snprintf_chk@plt+0x5e04>
   16c64:	mov	ip, #5
   16c68:	b	16c24 <__snprintf_chk@plt+0x5e04>
   16c6c:	mov	ip, #6
   16c70:	b	16c24 <__snprintf_chk@plt+0x5e04>
   16c74:	mov	ip, #7
   16c78:	b	16c24 <__snprintf_chk@plt+0x5e04>
   16c7c:	mov	ip, #8
   16c80:	b	16c24 <__snprintf_chk@plt+0x5e04>
   16c84:	ldr	r3, [pc, #116]	; 16d00 <__snprintf_chk@plt+0x5ee0>
   16c88:	push	{r4, lr}
   16c8c:	mov	r0, #10
   16c90:	ldr	r1, [r3]
   16c94:	bl	10c64 <fputc_unlocked@plt>
   16c98:	mov	r2, #5
   16c9c:	ldr	r1, [pc, #96]	; 16d04 <__snprintf_chk@plt+0x5ee4>
   16ca0:	mov	r0, #0
   16ca4:	bl	10c70 <dcgettext@plt>
   16ca8:	ldr	r2, [pc, #88]	; 16d08 <__snprintf_chk@plt+0x5ee8>
   16cac:	mov	r1, r0
   16cb0:	mov	r0, #1
   16cb4:	bl	10d90 <__printf_chk@plt>
   16cb8:	mov	r2, #5
   16cbc:	ldr	r1, [pc, #72]	; 16d0c <__snprintf_chk@plt+0x5eec>
   16cc0:	mov	r0, #0
   16cc4:	bl	10c70 <dcgettext@plt>
   16cc8:	ldr	r3, [pc, #64]	; 16d10 <__snprintf_chk@plt+0x5ef0>
   16ccc:	ldr	r2, [pc, #64]	; 16d14 <__snprintf_chk@plt+0x5ef4>
   16cd0:	mov	r1, r0
   16cd4:	mov	r0, #1
   16cd8:	bl	10d90 <__printf_chk@plt>
   16cdc:	mov	r2, #5
   16ce0:	ldr	r1, [pc, #48]	; 16d18 <__snprintf_chk@plt+0x5ef8>
   16ce4:	mov	r0, #0
   16ce8:	bl	10c70 <dcgettext@plt>
   16cec:	ldr	r2, [pc, #40]	; 16d1c <__snprintf_chk@plt+0x5efc>
   16cf0:	pop	{r4, lr}
   16cf4:	mov	r1, r0
   16cf8:	mov	r0, #1
   16cfc:	b	10d90 <__printf_chk@plt>
   16d00:	andeq	r9, r2, r4, lsr r1
   16d04:	andeq	r8, r1, r4, lsl #16
   16d08:	andeq	r8, r1, r8, lsl r8
   16d0c:	andeq	r8, r1, r0, lsr r8
   16d10:	andeq	r7, r1, r0, lsl pc
   16d14:	andeq	r7, r1, r8, lsr pc
   16d18:	andeq	r8, r1, r4, asr #16
   16d1c:	andeq	r8, r1, ip, ror #16
   16d20:	push	{r4, r5, r6, lr}
   16d24:	mov	r6, r0
   16d28:	mov	r5, r1
   16d2c:	mov	r4, r2
   16d30:	bl	177a8 <__snprintf_chk@plt+0x6988>
   16d34:	cmp	r0, #0
   16d38:	popne	{r4, r5, r6, pc}
   16d3c:	cmp	r6, #0
   16d40:	beq	16d50 <__snprintf_chk@plt+0x5f30>
   16d44:	cmp	r5, #0
   16d48:	cmpne	r4, #0
   16d4c:	popeq	{r4, r5, r6, pc}
   16d50:	bl	1739c <__snprintf_chk@plt+0x657c>
   16d54:	push	{r4, lr}
   16d58:	bl	17424 <__snprintf_chk@plt+0x6604>
   16d5c:	cmp	r0, #0
   16d60:	popne	{r4, pc}
   16d64:	bl	1739c <__snprintf_chk@plt+0x657c>
   16d68:	push	{r4, lr}
   16d6c:	bl	17424 <__snprintf_chk@plt+0x6604>
   16d70:	cmp	r0, #0
   16d74:	popne	{r4, pc}
   16d78:	bl	1739c <__snprintf_chk@plt+0x657c>
   16d7c:	push	{r4, lr}
   16d80:	bl	17424 <__snprintf_chk@plt+0x6604>
   16d84:	cmp	r0, #0
   16d88:	popne	{r4, pc}
   16d8c:	bl	1739c <__snprintf_chk@plt+0x657c>
   16d90:	push	{r4, r5, r6, lr}
   16d94:	mov	r5, r0
   16d98:	mov	r4, r1
   16d9c:	bl	17450 <__snprintf_chk@plt+0x6630>
   16da0:	cmp	r0, #0
   16da4:	popne	{r4, r5, r6, pc}
   16da8:	adds	r4, r4, #0
   16dac:	movne	r4, #1
   16db0:	cmp	r5, #0
   16db4:	orreq	r4, r4, #1
   16db8:	cmp	r4, #0
   16dbc:	popeq	{r4, r5, r6, pc}
   16dc0:	bl	1739c <__snprintf_chk@plt+0x657c>
   16dc4:	push	{r4, lr}
   16dc8:	cmp	r1, #0
   16dcc:	orreq	r1, r1, #1
   16dd0:	bl	17450 <__snprintf_chk@plt+0x6630>
   16dd4:	cmp	r0, #0
   16dd8:	popne	{r4, pc}
   16ddc:	bl	1739c <__snprintf_chk@plt+0x657c>
   16de0:	push	{r4, r5, r6, lr}
   16de4:	mov	r6, r0
   16de8:	mov	r5, r1
   16dec:	mov	r4, r2
   16df0:	bl	177a8 <__snprintf_chk@plt+0x6988>
   16df4:	cmp	r0, #0
   16df8:	popne	{r4, r5, r6, pc}
   16dfc:	cmp	r6, #0
   16e00:	beq	16e10 <__snprintf_chk@plt+0x5ff0>
   16e04:	cmp	r5, #0
   16e08:	cmpne	r4, #0
   16e0c:	popeq	{r4, r5, r6, pc}
   16e10:	bl	1739c <__snprintf_chk@plt+0x657c>
   16e14:	cmp	r2, #0
   16e18:	cmpne	r1, #0
   16e1c:	moveq	r2, #1
   16e20:	moveq	r1, r2
   16e24:	push	{r4, lr}
   16e28:	bl	177a8 <__snprintf_chk@plt+0x6988>
   16e2c:	cmp	r0, #0
   16e30:	popne	{r4, pc}
   16e34:	bl	1739c <__snprintf_chk@plt+0x657c>
   16e38:	push	{r4, lr}
   16e3c:	mov	r2, r1
   16e40:	mov	r1, r0
   16e44:	mov	r0, #0
   16e48:	bl	177a8 <__snprintf_chk@plt+0x6988>
   16e4c:	cmp	r0, #0
   16e50:	popne	{r4, pc}
   16e54:	bl	1739c <__snprintf_chk@plt+0x657c>
   16e58:	cmp	r1, #0
   16e5c:	cmpne	r0, #0
   16e60:	moveq	r2, #1
   16e64:	movne	r2, r1
   16e68:	moveq	r1, r2
   16e6c:	movne	r1, r0
   16e70:	push	{r4, lr}
   16e74:	mov	r0, #0
   16e78:	bl	177a8 <__snprintf_chk@plt+0x6988>
   16e7c:	cmp	r0, #0
   16e80:	popne	{r4, pc}
   16e84:	bl	1739c <__snprintf_chk@plt+0x657c>
   16e88:	cmp	r0, #0
   16e8c:	push	{r4, r5, r6, lr}
   16e90:	mov	r5, r1
   16e94:	ldr	r4, [r1]
   16e98:	beq	16ed4 <__snprintf_chk@plt+0x60b4>
   16e9c:	lsr	r2, r4, #1
   16ea0:	add	r3, r2, #1
   16ea4:	mvn	r3, r3
   16ea8:	cmp	r4, r3
   16eac:	bhi	16ef0 <__snprintf_chk@plt+0x60d0>
   16eb0:	add	r4, r4, #1
   16eb4:	add	r4, r4, r2
   16eb8:	mov	r1, r4
   16ebc:	mov	r2, #1
   16ec0:	bl	177a8 <__snprintf_chk@plt+0x6988>
   16ec4:	cmp	r0, #0
   16ec8:	beq	16ef4 <__snprintf_chk@plt+0x60d4>
   16ecc:	str	r4, [r5]
   16ed0:	pop	{r4, r5, r6, pc}
   16ed4:	cmp	r4, #0
   16ed8:	moveq	r4, #64	; 0x40
   16edc:	mov	r1, r4
   16ee0:	mov	r2, #1
   16ee4:	bl	177a8 <__snprintf_chk@plt+0x6988>
   16ee8:	cmp	r0, #0
   16eec:	bne	16ecc <__snprintf_chk@plt+0x60ac>
   16ef0:	bl	1739c <__snprintf_chk@plt+0x657c>
   16ef4:	cmp	r4, #0
   16ef8:	bne	16ef0 <__snprintf_chk@plt+0x60d0>
   16efc:	str	r4, [r5]
   16f00:	pop	{r4, r5, r6, pc}
   16f04:	cmp	r0, #0
   16f08:	push	{r4, r5, r6, lr}
   16f0c:	mov	r5, r1
   16f10:	ldr	r4, [r1]
   16f14:	mov	r6, r2
   16f18:	beq	16f5c <__snprintf_chk@plt+0x613c>
   16f1c:	lsr	r1, r4, #1
   16f20:	add	r3, r1, #1
   16f24:	mvn	r3, r3
   16f28:	cmp	r4, r3
   16f2c:	bhi	16f94 <__snprintf_chk@plt+0x6174>
   16f30:	add	r4, r4, #1
   16f34:	add	r4, r4, r1
   16f38:	mov	r1, r4
   16f3c:	bl	177a8 <__snprintf_chk@plt+0x6988>
   16f40:	cmp	r0, #0
   16f44:	bne	16f54 <__snprintf_chk@plt+0x6134>
   16f48:	cmp	r4, #0
   16f4c:	cmpne	r6, #0
   16f50:	bne	16f94 <__snprintf_chk@plt+0x6174>
   16f54:	str	r4, [r5]
   16f58:	pop	{r4, r5, r6, pc}
   16f5c:	cmp	r4, #0
   16f60:	bne	16f7c <__snprintf_chk@plt+0x615c>
   16f64:	mov	r1, r2
   16f68:	mov	r0, #64	; 0x40
   16f6c:	bl	178e8 <__snprintf_chk@plt+0x6ac8>
   16f70:	cmp	r0, #0
   16f74:	movne	r4, r0
   16f78:	addeq	r4, r0, #1
   16f7c:	mov	r2, r6
   16f80:	mov	r1, r4
   16f84:	mov	r0, #0
   16f88:	bl	177a8 <__snprintf_chk@plt+0x6988>
   16f8c:	cmp	r0, #0
   16f90:	bne	16f54 <__snprintf_chk@plt+0x6134>
   16f94:	bl	1739c <__snprintf_chk@plt+0x657c>
   16f98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f9c:	sub	sp, sp, #12
   16fa0:	ldr	r6, [r1]
   16fa4:	mov	r8, r1
   16fa8:	mov	r9, r0
   16fac:	asrs	r4, r6, #1
   16fb0:	mov	sl, r2
   16fb4:	mov	fp, r3
   16fb8:	ldr	r7, [sp, #48]	; 0x30
   16fbc:	bmi	17138 <__snprintf_chk@plt+0x6318>
   16fc0:	mvn	r1, #-2147483648	; 0x80000000
   16fc4:	sub	r1, r1, r4
   16fc8:	cmp	r6, r1
   16fcc:	movle	r1, #0
   16fd0:	movgt	r1, #1
   16fd4:	mvn	r3, fp
   16fd8:	cmp	r1, #0
   16fdc:	addeq	r4, r4, r6
   16fe0:	mvnne	r4, #-2147483648	; 0x80000000
   16fe4:	lsr	r3, r3, #31
   16fe8:	cmp	fp, r4
   16fec:	movge	r2, #0
   16ff0:	andlt	r2, r3, #1
   16ff4:	cmp	r2, #0
   16ff8:	beq	170e8 <__snprintf_chk@plt+0x62c8>
   16ffc:	cmp	r7, #0
   17000:	blt	171d0 <__snprintf_chk@plt+0x63b0>
   17004:	bne	171c8 <__snprintf_chk@plt+0x63a8>
   17008:	mov	r5, #64	; 0x40
   1700c:	mov	r1, r7
   17010:	mov	r0, r5
   17014:	str	r3, [sp, #4]
   17018:	bl	17af4 <__snprintf_chk@plt+0x6cd4>
   1701c:	mov	r1, r7
   17020:	mov	r4, r0
   17024:	mov	r0, r5
   17028:	bl	17d14 <__snprintf_chk@plt+0x6ef4>
   1702c:	ldr	r3, [sp, #4]
   17030:	sub	r5, r5, r1
   17034:	cmp	r9, #0
   17038:	sub	r2, r4, r6
   1703c:	streq	r9, [r8]
   17040:	cmp	r2, sl
   17044:	bge	170c8 <__snprintf_chk@plt+0x62a8>
   17048:	cmp	sl, #0
   1704c:	blt	17168 <__snprintf_chk@plt+0x6348>
   17050:	cmp	r6, #0
   17054:	blt	17074 <__snprintf_chk@plt+0x6254>
   17058:	mvn	r2, #-2147483648	; 0x80000000
   1705c:	sub	r2, r2, sl
   17060:	cmp	r6, r2
   17064:	movle	r2, #0
   17068:	movgt	r2, #1
   1706c:	cmp	r2, #0
   17070:	bne	17164 <__snprintf_chk@plt+0x6344>
   17074:	add	r6, r6, sl
   17078:	cmp	fp, r6
   1707c:	movge	r3, #0
   17080:	andlt	r3, r3, #1
   17084:	cmp	r3, #0
   17088:	mov	r4, r6
   1708c:	bne	17164 <__snprintf_chk@plt+0x6344>
   17090:	cmp	r7, #0
   17094:	blt	1717c <__snprintf_chk@plt+0x635c>
   17098:	beq	170c4 <__snprintf_chk@plt+0x62a4>
   1709c:	cmp	r6, #0
   170a0:	blt	17220 <__snprintf_chk@plt+0x6400>
   170a4:	mov	r1, r7
   170a8:	mvn	r0, #-2147483648	; 0x80000000
   170ac:	bl	17af4 <__snprintf_chk@plt+0x6cd4>
   170b0:	cmp	r6, r0
   170b4:	movle	r0, #0
   170b8:	movgt	r0, #1
   170bc:	cmp	r0, #0
   170c0:	bne	17164 <__snprintf_chk@plt+0x6344>
   170c4:	mul	r5, r6, r7
   170c8:	mov	r1, r5
   170cc:	mov	r0, r9
   170d0:	bl	17450 <__snprintf_chk@plt+0x6630>
   170d4:	cmp	r0, #0
   170d8:	beq	1714c <__snprintf_chk@plt+0x632c>
   170dc:	str	r4, [r8]
   170e0:	add	sp, sp, #12
   170e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170e8:	cmp	r7, #0
   170ec:	blt	171a8 <__snprintf_chk@plt+0x6388>
   170f0:	beq	17008 <__snprintf_chk@plt+0x61e8>
   170f4:	cmp	r4, #0
   170f8:	blt	171d8 <__snprintf_chk@plt+0x63b8>
   170fc:	mov	r1, r7
   17100:	mvn	r0, #-2147483648	; 0x80000000
   17104:	str	r3, [sp, #4]
   17108:	bl	17af4 <__snprintf_chk@plt+0x6cd4>
   1710c:	ldr	r3, [sp, #4]
   17110:	cmp	r0, r4
   17114:	movge	r0, #0
   17118:	movlt	r0, #1
   1711c:	cmp	r0, #0
   17120:	mvnne	r5, #-2147483648	; 0x80000000
   17124:	bne	1700c <__snprintf_chk@plt+0x61ec>
   17128:	mul	r5, r7, r4
   1712c:	cmp	r5, #63	; 0x3f
   17130:	bgt	17034 <__snprintf_chk@plt+0x6214>
   17134:	b	17008 <__snprintf_chk@plt+0x61e8>
   17138:	rsb	r1, r4, #-2147483648	; 0x80000000
   1713c:	cmp	r6, r1
   17140:	movge	r1, #0
   17144:	movlt	r1, #1
   17148:	b	16fd4 <__snprintf_chk@plt+0x61b4>
   1714c:	adds	r5, r5, #0
   17150:	movne	r5, #1
   17154:	cmp	r9, #0
   17158:	orreq	r5, r5, #1
   1715c:	cmp	r5, #0
   17160:	beq	170dc <__snprintf_chk@plt+0x62bc>
   17164:	bl	1739c <__snprintf_chk@plt+0x657c>
   17168:	rsb	r2, sl, #-2147483648	; 0x80000000
   1716c:	cmp	r6, r2
   17170:	movge	r2, #0
   17174:	movlt	r2, #1
   17178:	b	1706c <__snprintf_chk@plt+0x624c>
   1717c:	cmp	r6, #0
   17180:	blt	17204 <__snprintf_chk@plt+0x63e4>
   17184:	cmn	r7, #1
   17188:	beq	170c4 <__snprintf_chk@plt+0x62a4>
   1718c:	mov	r1, r7
   17190:	mov	r0, #-2147483648	; 0x80000000
   17194:	bl	17af4 <__snprintf_chk@plt+0x6cd4>
   17198:	cmp	r6, r0
   1719c:	movle	r0, #0
   171a0:	movgt	r0, #1
   171a4:	b	170bc <__snprintf_chk@plt+0x629c>
   171a8:	cmp	r4, #0
   171ac:	blt	17244 <__snprintf_chk@plt+0x6424>
   171b0:	cmn	r7, #1
   171b4:	beq	17128 <__snprintf_chk@plt+0x6308>
   171b8:	str	r3, [sp, #4]
   171bc:	mov	r1, r7
   171c0:	mov	r0, #-2147483648	; 0x80000000
   171c4:	b	17108 <__snprintf_chk@plt+0x62e8>
   171c8:	mov	r4, fp
   171cc:	b	170fc <__snprintf_chk@plt+0x62dc>
   171d0:	mov	r4, fp
   171d4:	b	171b0 <__snprintf_chk@plt+0x6390>
   171d8:	cmn	r4, #1
   171dc:	beq	17128 <__snprintf_chk@plt+0x6308>
   171e0:	mov	r1, r4
   171e4:	mov	r0, #-2147483648	; 0x80000000
   171e8:	str	r3, [sp, #4]
   171ec:	bl	17af4 <__snprintf_chk@plt+0x6cd4>
   171f0:	ldr	r3, [sp, #4]
   171f4:	cmp	r7, r0
   171f8:	movle	r0, #0
   171fc:	movgt	r0, #1
   17200:	b	1711c <__snprintf_chk@plt+0x62fc>
   17204:	mov	r1, r7
   17208:	mvn	r0, #-2147483648	; 0x80000000
   1720c:	bl	17af4 <__snprintf_chk@plt+0x6cd4>
   17210:	cmp	r6, r0
   17214:	movge	r0, #0
   17218:	movlt	r0, #1
   1721c:	b	170bc <__snprintf_chk@plt+0x629c>
   17220:	cmn	r6, #1
   17224:	beq	170c4 <__snprintf_chk@plt+0x62a4>
   17228:	mov	r1, r6
   1722c:	mov	r0, #-2147483648	; 0x80000000
   17230:	bl	17af4 <__snprintf_chk@plt+0x6cd4>
   17234:	cmp	r7, r0
   17238:	movle	r0, #0
   1723c:	movgt	r0, #1
   17240:	b	170bc <__snprintf_chk@plt+0x629c>
   17244:	mov	r1, r7
   17248:	mvn	r0, #-2147483648	; 0x80000000
   1724c:	str	r3, [sp, #4]
   17250:	bl	17af4 <__snprintf_chk@plt+0x6cd4>
   17254:	ldr	r3, [sp, #4]
   17258:	cmp	r0, r4
   1725c:	movle	r0, #0
   17260:	movgt	r0, #1
   17264:	b	1711c <__snprintf_chk@plt+0x62fc>
   17268:	push	{r4, lr}
   1726c:	mov	r1, #1
   17270:	bl	173dc <__snprintf_chk@plt+0x65bc>
   17274:	cmp	r0, #0
   17278:	popne	{r4, pc}
   1727c:	bl	1739c <__snprintf_chk@plt+0x657c>
   17280:	push	{r4, lr}
   17284:	mov	r1, #1
   17288:	bl	173dc <__snprintf_chk@plt+0x65bc>
   1728c:	cmp	r0, #0
   17290:	popne	{r4, pc}
   17294:	bl	1739c <__snprintf_chk@plt+0x657c>
   17298:	push	{r4, lr}
   1729c:	bl	173dc <__snprintf_chk@plt+0x65bc>
   172a0:	cmp	r0, #0
   172a4:	popne	{r4, pc}
   172a8:	bl	1739c <__snprintf_chk@plt+0x657c>
   172ac:	push	{r4, lr}
   172b0:	bl	173dc <__snprintf_chk@plt+0x65bc>
   172b4:	cmp	r0, #0
   172b8:	popne	{r4, pc}
   172bc:	bl	1739c <__snprintf_chk@plt+0x657c>
   172c0:	push	{r4, r5, r6, lr}
   172c4:	mov	r6, r0
   172c8:	mov	r0, r1
   172cc:	mov	r4, r1
   172d0:	bl	17424 <__snprintf_chk@plt+0x6604>
   172d4:	subs	r5, r0, #0
   172d8:	beq	172f0 <__snprintf_chk@plt+0x64d0>
   172dc:	mov	r2, r4
   172e0:	mov	r1, r6
   172e4:	bl	10c34 <memcpy@plt>
   172e8:	mov	r0, r5
   172ec:	pop	{r4, r5, r6, pc}
   172f0:	bl	1739c <__snprintf_chk@plt+0x657c>
   172f4:	push	{r4, r5, r6, lr}
   172f8:	mov	r6, r0
   172fc:	mov	r0, r1
   17300:	mov	r4, r1
   17304:	bl	17424 <__snprintf_chk@plt+0x6604>
   17308:	subs	r5, r0, #0
   1730c:	beq	17324 <__snprintf_chk@plt+0x6504>
   17310:	mov	r2, r4
   17314:	mov	r1, r6
   17318:	bl	10c34 <memcpy@plt>
   1731c:	mov	r0, r5
   17320:	pop	{r4, r5, r6, pc}
   17324:	bl	1739c <__snprintf_chk@plt+0x657c>
   17328:	push	{r4, r5, r6, lr}
   1732c:	mov	r6, r0
   17330:	add	r0, r1, #1
   17334:	mov	r4, r1
   17338:	bl	17424 <__snprintf_chk@plt+0x6604>
   1733c:	subs	r5, r0, #0
   17340:	beq	17360 <__snprintf_chk@plt+0x6540>
   17344:	mov	r3, #0
   17348:	mov	r1, r6
   1734c:	strb	r3, [r5, r4]
   17350:	mov	r2, r4
   17354:	bl	10c34 <memcpy@plt>
   17358:	mov	r0, r5
   1735c:	pop	{r4, r5, r6, pc}
   17360:	bl	1739c <__snprintf_chk@plt+0x657c>
   17364:	push	{r4, r5, r6, lr}
   17368:	mov	r6, r0
   1736c:	bl	10d54 <strlen@plt>
   17370:	add	r4, r0, #1
   17374:	mov	r0, r4
   17378:	bl	17424 <__snprintf_chk@plt+0x6604>
   1737c:	subs	r5, r0, #0
   17380:	beq	17398 <__snprintf_chk@plt+0x6578>
   17384:	mov	r2, r4
   17388:	mov	r1, r6
   1738c:	bl	10c34 <memcpy@plt>
   17390:	mov	r0, r5
   17394:	pop	{r4, r5, r6, pc}
   17398:	bl	1739c <__snprintf_chk@plt+0x657c>
   1739c:	ldr	r3, [pc, #44]	; 173d0 <__snprintf_chk@plt+0x65b0>
   173a0:	push	{r4, lr}
   173a4:	mov	r2, #5
   173a8:	ldr	r1, [pc, #36]	; 173d4 <__snprintf_chk@plt+0x65b4>
   173ac:	mov	r0, #0
   173b0:	ldr	r4, [r3]
   173b4:	bl	10c70 <dcgettext@plt>
   173b8:	ldr	r2, [pc, #24]	; 173d8 <__snprintf_chk@plt+0x65b8>
   173bc:	mov	r1, #0
   173c0:	mov	r3, r0
   173c4:	mov	r0, r4
   173c8:	bl	10cdc <error@plt>
   173cc:	bl	10e14 <abort@plt>
   173d0:	ldrdeq	r9, [r2], -ip
   173d4:			; <UNDEFINED> instruction: 0x000188bc
   173d8:	andeq	r8, r1, ip, lsr r4
   173dc:	cmp	r1, #0
   173e0:	cmpne	r0, #0
   173e4:	moveq	r1, #1
   173e8:	moveq	r0, r1
   173ec:	umull	r2, r3, r0, r1
   173f0:	adds	r3, r3, #0
   173f4:	movne	r3, #1
   173f8:	cmp	r2, #0
   173fc:	blt	1740c <__snprintf_chk@plt+0x65ec>
   17400:	cmp	r3, #0
   17404:	bne	1740c <__snprintf_chk@plt+0x65ec>
   17408:	b	10be0 <calloc@plt>
   1740c:	push	{r4, lr}
   17410:	bl	10d60 <__errno_location@plt>
   17414:	mov	r3, #12
   17418:	str	r3, [r0]
   1741c:	mov	r0, #0
   17420:	pop	{r4, pc}
   17424:	cmp	r0, #0
   17428:	moveq	r0, #1
   1742c:	cmp	r0, #0
   17430:	blt	17438 <__snprintf_chk@plt+0x6618>
   17434:	b	10d00 <malloc@plt>
   17438:	push	{r4, lr}
   1743c:	bl	10d60 <__errno_location@plt>
   17440:	mov	r3, #12
   17444:	str	r3, [r0]
   17448:	mov	r0, #0
   1744c:	pop	{r4, pc}
   17450:	cmp	r0, #0
   17454:	beq	17478 <__snprintf_chk@plt+0x6658>
   17458:	cmp	r1, #0
   1745c:	push	{lr}		; (str lr, [sp, #-4]!)
   17460:	sub	sp, sp, #12
   17464:	beq	17480 <__snprintf_chk@plt+0x6660>
   17468:	blt	17498 <__snprintf_chk@plt+0x6678>
   1746c:	add	sp, sp, #12
   17470:	pop	{lr}		; (ldr lr, [sp], #4)
   17474:	b	10c7c <realloc@plt>
   17478:	mov	r0, r1
   1747c:	b	17424 <__snprintf_chk@plt+0x6604>
   17480:	str	r1, [sp, #4]
   17484:	bl	17628 <__snprintf_chk@plt+0x6808>
   17488:	ldr	r3, [sp, #4]
   1748c:	mov	r0, r3
   17490:	add	sp, sp, #12
   17494:	pop	{pc}		; (ldr pc, [sp], #4)
   17498:	bl	10d60 <__errno_location@plt>
   1749c:	mov	r2, #12
   174a0:	mov	r3, #0
   174a4:	str	r2, [r0]
   174a8:	b	1748c <__snprintf_chk@plt+0x666c>
   174ac:	push	{r4, r5, r6, lr}
   174b0:	mov	r4, r0
   174b4:	bl	10cc4 <__fpending@plt>
   174b8:	ldr	r5, [r4]
   174bc:	and	r5, r5, #32
   174c0:	mov	r6, r0
   174c4:	mov	r0, r4
   174c8:	bl	17528 <__snprintf_chk@plt+0x6708>
   174cc:	cmp	r5, #0
   174d0:	mov	r4, r0
   174d4:	bne	174f4 <__snprintf_chk@plt+0x66d4>
   174d8:	cmp	r0, #0
   174dc:	beq	174ec <__snprintf_chk@plt+0x66cc>
   174e0:	cmp	r6, #0
   174e4:	beq	17510 <__snprintf_chk@plt+0x66f0>
   174e8:	mvn	r4, #0
   174ec:	mov	r0, r4
   174f0:	pop	{r4, r5, r6, pc}
   174f4:	cmp	r0, #0
   174f8:	bne	174e8 <__snprintf_chk@plt+0x66c8>
   174fc:	bl	10d60 <__errno_location@plt>
   17500:	str	r4, [r0]
   17504:	mvn	r4, #0
   17508:	mov	r0, r4
   1750c:	pop	{r4, r5, r6, pc}
   17510:	bl	10d60 <__errno_location@plt>
   17514:	ldr	r4, [r0]
   17518:	subs	r4, r4, #9
   1751c:	mvnne	r4, #0
   17520:	mov	r0, r4
   17524:	pop	{r4, r5, r6, pc}
   17528:	push	{r4, r5, lr}
   1752c:	sub	sp, sp, #12
   17530:	mov	r4, r0
   17534:	bl	10da8 <fileno@plt>
   17538:	cmp	r0, #0
   1753c:	mov	r0, r4
   17540:	blt	175bc <__snprintf_chk@plt+0x679c>
   17544:	bl	10d18 <__freading@plt>
   17548:	cmp	r0, #0
   1754c:	bne	17588 <__snprintf_chk@plt+0x6768>
   17550:	mov	r0, r4
   17554:	bl	175c8 <__snprintf_chk@plt+0x67a8>
   17558:	cmp	r0, #0
   1755c:	beq	175b8 <__snprintf_chk@plt+0x6798>
   17560:	bl	10d60 <__errno_location@plt>
   17564:	mov	r5, r0
   17568:	mov	r0, r4
   1756c:	ldr	r4, [r5]
   17570:	bl	10dc0 <fclose@plt>
   17574:	cmp	r4, #0
   17578:	mvnne	r0, #0
   1757c:	strne	r4, [r5]
   17580:	add	sp, sp, #12
   17584:	pop	{r4, r5, pc}
   17588:	mov	r0, r4
   1758c:	bl	10da8 <fileno@plt>
   17590:	mov	r3, #1
   17594:	str	r3, [sp]
   17598:	mov	r2, #0
   1759c:	mov	r3, #0
   175a0:	bl	10cac <lseek64@plt>
   175a4:	mvn	r3, #0
   175a8:	mvn	r2, #0
   175ac:	cmp	r1, r3
   175b0:	cmpeq	r0, r2
   175b4:	bne	17550 <__snprintf_chk@plt+0x6730>
   175b8:	mov	r0, r4
   175bc:	add	sp, sp, #12
   175c0:	pop	{r4, r5, lr}
   175c4:	b	10dc0 <fclose@plt>
   175c8:	push	{r4, lr}
   175cc:	subs	r4, r0, #0
   175d0:	sub	sp, sp, #8
   175d4:	beq	175f0 <__snprintf_chk@plt+0x67d0>
   175d8:	bl	10d18 <__freading@plt>
   175dc:	cmp	r0, #0
   175e0:	beq	175f0 <__snprintf_chk@plt+0x67d0>
   175e4:	ldr	r3, [r4]
   175e8:	tst	r3, #256	; 0x100
   175ec:	bne	17600 <__snprintf_chk@plt+0x67e0>
   175f0:	mov	r0, r4
   175f4:	add	sp, sp, #8
   175f8:	pop	{r4, lr}
   175fc:	b	10c10 <fflush@plt>
   17600:	mov	r3, #1
   17604:	str	r3, [sp]
   17608:	mov	r2, #0
   1760c:	mov	r3, #0
   17610:	mov	r0, r4
   17614:	bl	17680 <__snprintf_chk@plt+0x6860>
   17618:	mov	r0, r4
   1761c:	add	sp, sp, #8
   17620:	pop	{r4, lr}
   17624:	b	10c10 <fflush@plt>
   17628:	push	{r4, r5, lr}
   1762c:	sub	sp, sp, #12
   17630:	mov	r5, r0
   17634:	bl	10d60 <__errno_location@plt>
   17638:	mov	r2, #0
   1763c:	mov	r4, r0
   17640:	ldr	r3, [r0]
   17644:	str	r2, [r4]
   17648:	mov	r0, r5
   1764c:	str	r3, [sp]
   17650:	str	r3, [sp, #4]
   17654:	bl	10c1c <free@plt>
   17658:	ldr	r3, [r4]
   1765c:	add	r2, sp, #8
   17660:	cmp	r3, #0
   17664:	moveq	r3, #4
   17668:	movne	r3, #0
   1766c:	add	r3, r2, r3
   17670:	ldr	r3, [r3, #-8]
   17674:	str	r3, [r4]
   17678:	add	sp, sp, #12
   1767c:	pop	{r4, r5, pc}
   17680:	push	{r4, r5, r6, r7, r8, lr}
   17684:	sub	sp, sp, #8
   17688:	ldmib	r0, {ip, lr}
   1768c:	mov	r4, r0
   17690:	ldr	r5, [sp, #32]
   17694:	cmp	lr, ip
   17698:	beq	176b0 <__snprintf_chk@plt+0x6890>
   1769c:	str	r5, [sp, #32]
   176a0:	mov	r0, r4
   176a4:	add	sp, sp, #8
   176a8:	pop	{r4, r5, r6, r7, r8, lr}
   176ac:	b	10dcc <fseeko64@plt>
   176b0:	ldr	lr, [r0, #20]
   176b4:	ldr	ip, [r0, #16]
   176b8:	cmp	lr, ip
   176bc:	bne	1769c <__snprintf_chk@plt+0x687c>
   176c0:	ldr	r8, [r0, #36]	; 0x24
   176c4:	cmp	r8, #0
   176c8:	bne	1769c <__snprintf_chk@plt+0x687c>
   176cc:	mov	r6, r2
   176d0:	mov	r7, r3
   176d4:	bl	10da8 <fileno@plt>
   176d8:	mov	r2, r6
   176dc:	mov	r3, r7
   176e0:	str	r5, [sp]
   176e4:	bl	10cac <lseek64@plt>
   176e8:	mvn	r3, #0
   176ec:	mvn	r2, #0
   176f0:	cmp	r1, r3
   176f4:	cmpeq	r0, r2
   176f8:	beq	17718 <__snprintf_chk@plt+0x68f8>
   176fc:	ldr	r3, [r4]
   17700:	strd	r0, [r4, #80]	; 0x50
   17704:	mov	r0, r8
   17708:	bic	r3, r3, #16
   1770c:	str	r3, [r4]
   17710:	add	sp, sp, #8
   17714:	pop	{r4, r5, r6, r7, r8, pc}
   17718:	mvn	r0, #0
   1771c:	b	17710 <__snprintf_chk@plt+0x68f0>
   17720:	push	{r4, lr}
   17724:	mov	r0, #14
   17728:	bl	10df0 <nl_langinfo@plt>
   1772c:	cmp	r0, #0
   17730:	beq	17748 <__snprintf_chk@plt+0x6928>
   17734:	ldrb	r2, [r0]
   17738:	ldr	r3, [pc, #16]	; 17750 <__snprintf_chk@plt+0x6930>
   1773c:	cmp	r2, #0
   17740:	moveq	r0, r3
   17744:	pop	{r4, pc}
   17748:	ldr	r0, [pc]	; 17750 <__snprintf_chk@plt+0x6930>
   1774c:	pop	{r4, pc}
   17750:	ldrdeq	r8, [r1], -r0
   17754:	push	{r4, r5, r6, r7, lr}
   17758:	subs	r6, r0, #0
   1775c:	sub	sp, sp, #12
   17760:	addeq	r6, sp, #4
   17764:	mov	r0, r6
   17768:	mov	r5, r2
   1776c:	mov	r7, r1
   17770:	bl	10cd0 <mbrtowc@plt>
   17774:	cmp	r5, #0
   17778:	cmnne	r0, #3
   1777c:	mov	r4, r0
   17780:	bls	1779c <__snprintf_chk@plt+0x697c>
   17784:	mov	r0, #0
   17788:	bl	177f4 <__snprintf_chk@plt+0x69d4>
   1778c:	cmp	r0, #0
   17790:	moveq	r4, #1
   17794:	ldrbeq	r3, [r7]
   17798:	streq	r3, [r6]
   1779c:	mov	r0, r4
   177a0:	add	sp, sp, #12
   177a4:	pop	{r4, r5, r6, r7, pc}
   177a8:	push	{r4, r5, r6, lr}
   177ac:	subs	r4, r2, #0
   177b0:	mov	r6, r0
   177b4:	mov	r5, r1
   177b8:	beq	177e4 <__snprintf_chk@plt+0x69c4>
   177bc:	mov	r1, r4
   177c0:	mvn	r0, #0
   177c4:	bl	178e8 <__snprintf_chk@plt+0x6ac8>
   177c8:	cmp	r0, r5
   177cc:	bcs	177e4 <__snprintf_chk@plt+0x69c4>
   177d0:	bl	10d60 <__errno_location@plt>
   177d4:	mov	r3, #12
   177d8:	str	r3, [r0]
   177dc:	mov	r0, #0
   177e0:	pop	{r4, r5, r6, pc}
   177e4:	mul	r1, r5, r4
   177e8:	mov	r0, r6
   177ec:	pop	{r4, r5, r6, lr}
   177f0:	b	17450 <__snprintf_chk@plt+0x6630>
   177f4:	push	{lr}		; (str lr, [sp, #-4]!)
   177f8:	sub	sp, sp, #268	; 0x10c
   177fc:	add	r1, sp, #4
   17800:	ldr	r2, [pc, #60]	; 17844 <__snprintf_chk@plt+0x6a24>
   17804:	bl	17850 <__snprintf_chk@plt+0x6a30>
   17808:	cmp	r0, #0
   1780c:	movne	r0, #0
   17810:	bne	1783c <__snprintf_chk@plt+0x6a1c>
   17814:	ldr	r1, [pc, #44]	; 17848 <__snprintf_chk@plt+0x6a28>
   17818:	add	r0, sp, #4
   1781c:	bl	10c04 <strcmp@plt>
   17820:	cmp	r0, #0
   17824:	beq	1783c <__snprintf_chk@plt+0x6a1c>
   17828:	add	r0, sp, #4
   1782c:	ldr	r1, [pc, #24]	; 1784c <__snprintf_chk@plt+0x6a2c>
   17830:	bl	10c04 <strcmp@plt>
   17834:	adds	r0, r0, #0
   17838:	movne	r0, #1
   1783c:	add	sp, sp, #268	; 0x10c
   17840:	pop	{pc}		; (ldr pc, [sp], #4)
   17844:	andeq	r0, r0, r1, lsl #2
   17848:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1784c:	ldrdeq	r8, [r1], -ip
   17850:	push	{r4, r5, r6, lr}
   17854:	mov	r5, r1
   17858:	mov	r1, #0
   1785c:	mov	r4, r2
   17860:	bl	10dd8 <setlocale@plt>
   17864:	subs	r6, r0, #0
   17868:	beq	178c4 <__snprintf_chk@plt+0x6aa4>
   1786c:	bl	10d54 <strlen@plt>
   17870:	cmp	r4, r0
   17874:	bhi	178ac <__snprintf_chk@plt+0x6a8c>
   17878:	cmp	r4, #0
   1787c:	bne	17888 <__snprintf_chk@plt+0x6a68>
   17880:	mov	r0, #34	; 0x22
   17884:	pop	{r4, r5, r6, pc}
   17888:	sub	r4, r4, #1
   1788c:	mov	r1, r6
   17890:	mov	r2, r4
   17894:	mov	r0, r5
   17898:	bl	10c34 <memcpy@plt>
   1789c:	mov	r3, #0
   178a0:	strb	r3, [r5, r4]
   178a4:	mov	r0, #34	; 0x22
   178a8:	pop	{r4, r5, r6, pc}
   178ac:	add	r2, r0, #1
   178b0:	mov	r1, r6
   178b4:	mov	r0, r5
   178b8:	bl	10c34 <memcpy@plt>
   178bc:	mov	r0, #0
   178c0:	pop	{r4, r5, r6, pc}
   178c4:	cmp	r4, #0
   178c8:	beq	178d8 <__snprintf_chk@plt+0x6ab8>
   178cc:	strb	r6, [r5]
   178d0:	mov	r0, #22
   178d4:	pop	{r4, r5, r6, pc}
   178d8:	mov	r0, #22
   178dc:	pop	{r4, r5, r6, pc}
   178e0:	mov	r1, #0
   178e4:	b	10dd8 <setlocale@plt>
   178e8:	subs	r2, r1, #1
   178ec:	bxeq	lr
   178f0:	bcc	17ac8 <__snprintf_chk@plt+0x6ca8>
   178f4:	cmp	r0, r1
   178f8:	bls	17aac <__snprintf_chk@plt+0x6c8c>
   178fc:	tst	r1, r2
   17900:	beq	17ab8 <__snprintf_chk@plt+0x6c98>
   17904:	clz	r3, r0
   17908:	clz	r2, r1
   1790c:	sub	r3, r2, r3
   17910:	rsbs	r3, r3, #31
   17914:	addne	r3, r3, r3, lsl #1
   17918:	mov	r2, #0
   1791c:	addne	pc, pc, r3, lsl #2
   17920:	nop			; (mov r0, r0)
   17924:	cmp	r0, r1, lsl #31
   17928:	adc	r2, r2, r2
   1792c:	subcs	r0, r0, r1, lsl #31
   17930:	cmp	r0, r1, lsl #30
   17934:	adc	r2, r2, r2
   17938:	subcs	r0, r0, r1, lsl #30
   1793c:	cmp	r0, r1, lsl #29
   17940:	adc	r2, r2, r2
   17944:	subcs	r0, r0, r1, lsl #29
   17948:	cmp	r0, r1, lsl #28
   1794c:	adc	r2, r2, r2
   17950:	subcs	r0, r0, r1, lsl #28
   17954:	cmp	r0, r1, lsl #27
   17958:	adc	r2, r2, r2
   1795c:	subcs	r0, r0, r1, lsl #27
   17960:	cmp	r0, r1, lsl #26
   17964:	adc	r2, r2, r2
   17968:	subcs	r0, r0, r1, lsl #26
   1796c:	cmp	r0, r1, lsl #25
   17970:	adc	r2, r2, r2
   17974:	subcs	r0, r0, r1, lsl #25
   17978:	cmp	r0, r1, lsl #24
   1797c:	adc	r2, r2, r2
   17980:	subcs	r0, r0, r1, lsl #24
   17984:	cmp	r0, r1, lsl #23
   17988:	adc	r2, r2, r2
   1798c:	subcs	r0, r0, r1, lsl #23
   17990:	cmp	r0, r1, lsl #22
   17994:	adc	r2, r2, r2
   17998:	subcs	r0, r0, r1, lsl #22
   1799c:	cmp	r0, r1, lsl #21
   179a0:	adc	r2, r2, r2
   179a4:	subcs	r0, r0, r1, lsl #21
   179a8:	cmp	r0, r1, lsl #20
   179ac:	adc	r2, r2, r2
   179b0:	subcs	r0, r0, r1, lsl #20
   179b4:	cmp	r0, r1, lsl #19
   179b8:	adc	r2, r2, r2
   179bc:	subcs	r0, r0, r1, lsl #19
   179c0:	cmp	r0, r1, lsl #18
   179c4:	adc	r2, r2, r2
   179c8:	subcs	r0, r0, r1, lsl #18
   179cc:	cmp	r0, r1, lsl #17
   179d0:	adc	r2, r2, r2
   179d4:	subcs	r0, r0, r1, lsl #17
   179d8:	cmp	r0, r1, lsl #16
   179dc:	adc	r2, r2, r2
   179e0:	subcs	r0, r0, r1, lsl #16
   179e4:	cmp	r0, r1, lsl #15
   179e8:	adc	r2, r2, r2
   179ec:	subcs	r0, r0, r1, lsl #15
   179f0:	cmp	r0, r1, lsl #14
   179f4:	adc	r2, r2, r2
   179f8:	subcs	r0, r0, r1, lsl #14
   179fc:	cmp	r0, r1, lsl #13
   17a00:	adc	r2, r2, r2
   17a04:	subcs	r0, r0, r1, lsl #13
   17a08:	cmp	r0, r1, lsl #12
   17a0c:	adc	r2, r2, r2
   17a10:	subcs	r0, r0, r1, lsl #12
   17a14:	cmp	r0, r1, lsl #11
   17a18:	adc	r2, r2, r2
   17a1c:	subcs	r0, r0, r1, lsl #11
   17a20:	cmp	r0, r1, lsl #10
   17a24:	adc	r2, r2, r2
   17a28:	subcs	r0, r0, r1, lsl #10
   17a2c:	cmp	r0, r1, lsl #9
   17a30:	adc	r2, r2, r2
   17a34:	subcs	r0, r0, r1, lsl #9
   17a38:	cmp	r0, r1, lsl #8
   17a3c:	adc	r2, r2, r2
   17a40:	subcs	r0, r0, r1, lsl #8
   17a44:	cmp	r0, r1, lsl #7
   17a48:	adc	r2, r2, r2
   17a4c:	subcs	r0, r0, r1, lsl #7
   17a50:	cmp	r0, r1, lsl #6
   17a54:	adc	r2, r2, r2
   17a58:	subcs	r0, r0, r1, lsl #6
   17a5c:	cmp	r0, r1, lsl #5
   17a60:	adc	r2, r2, r2
   17a64:	subcs	r0, r0, r1, lsl #5
   17a68:	cmp	r0, r1, lsl #4
   17a6c:	adc	r2, r2, r2
   17a70:	subcs	r0, r0, r1, lsl #4
   17a74:	cmp	r0, r1, lsl #3
   17a78:	adc	r2, r2, r2
   17a7c:	subcs	r0, r0, r1, lsl #3
   17a80:	cmp	r0, r1, lsl #2
   17a84:	adc	r2, r2, r2
   17a88:	subcs	r0, r0, r1, lsl #2
   17a8c:	cmp	r0, r1, lsl #1
   17a90:	adc	r2, r2, r2
   17a94:	subcs	r0, r0, r1, lsl #1
   17a98:	cmp	r0, r1
   17a9c:	adc	r2, r2, r2
   17aa0:	subcs	r0, r0, r1
   17aa4:	mov	r0, r2
   17aa8:	bx	lr
   17aac:	moveq	r0, #1
   17ab0:	movne	r0, #0
   17ab4:	bx	lr
   17ab8:	clz	r2, r1
   17abc:	rsb	r2, r2, #31
   17ac0:	lsr	r0, r0, r2
   17ac4:	bx	lr
   17ac8:	cmp	r0, #0
   17acc:	mvnne	r0, #0
   17ad0:	b	17d34 <__snprintf_chk@plt+0x6f14>
   17ad4:	cmp	r1, #0
   17ad8:	beq	17ac8 <__snprintf_chk@plt+0x6ca8>
   17adc:	push	{r0, r1, lr}
   17ae0:	bl	178e8 <__snprintf_chk@plt+0x6ac8>
   17ae4:	pop	{r1, r2, lr}
   17ae8:	mul	r3, r2, r0
   17aec:	sub	r1, r1, r3
   17af0:	bx	lr
   17af4:	cmp	r1, #0
   17af8:	beq	17d04 <__snprintf_chk@plt+0x6ee4>
   17afc:	eor	ip, r0, r1
   17b00:	rsbmi	r1, r1, #0
   17b04:	subs	r2, r1, #1
   17b08:	beq	17cd0 <__snprintf_chk@plt+0x6eb0>
   17b0c:	movs	r3, r0
   17b10:	rsbmi	r3, r0, #0
   17b14:	cmp	r3, r1
   17b18:	bls	17cdc <__snprintf_chk@plt+0x6ebc>
   17b1c:	tst	r1, r2
   17b20:	beq	17cec <__snprintf_chk@plt+0x6ecc>
   17b24:	clz	r2, r3
   17b28:	clz	r0, r1
   17b2c:	sub	r2, r0, r2
   17b30:	rsbs	r2, r2, #31
   17b34:	addne	r2, r2, r2, lsl #1
   17b38:	mov	r0, #0
   17b3c:	addne	pc, pc, r2, lsl #2
   17b40:	nop			; (mov r0, r0)
   17b44:	cmp	r3, r1, lsl #31
   17b48:	adc	r0, r0, r0
   17b4c:	subcs	r3, r3, r1, lsl #31
   17b50:	cmp	r3, r1, lsl #30
   17b54:	adc	r0, r0, r0
   17b58:	subcs	r3, r3, r1, lsl #30
   17b5c:	cmp	r3, r1, lsl #29
   17b60:	adc	r0, r0, r0
   17b64:	subcs	r3, r3, r1, lsl #29
   17b68:	cmp	r3, r1, lsl #28
   17b6c:	adc	r0, r0, r0
   17b70:	subcs	r3, r3, r1, lsl #28
   17b74:	cmp	r3, r1, lsl #27
   17b78:	adc	r0, r0, r0
   17b7c:	subcs	r3, r3, r1, lsl #27
   17b80:	cmp	r3, r1, lsl #26
   17b84:	adc	r0, r0, r0
   17b88:	subcs	r3, r3, r1, lsl #26
   17b8c:	cmp	r3, r1, lsl #25
   17b90:	adc	r0, r0, r0
   17b94:	subcs	r3, r3, r1, lsl #25
   17b98:	cmp	r3, r1, lsl #24
   17b9c:	adc	r0, r0, r0
   17ba0:	subcs	r3, r3, r1, lsl #24
   17ba4:	cmp	r3, r1, lsl #23
   17ba8:	adc	r0, r0, r0
   17bac:	subcs	r3, r3, r1, lsl #23
   17bb0:	cmp	r3, r1, lsl #22
   17bb4:	adc	r0, r0, r0
   17bb8:	subcs	r3, r3, r1, lsl #22
   17bbc:	cmp	r3, r1, lsl #21
   17bc0:	adc	r0, r0, r0
   17bc4:	subcs	r3, r3, r1, lsl #21
   17bc8:	cmp	r3, r1, lsl #20
   17bcc:	adc	r0, r0, r0
   17bd0:	subcs	r3, r3, r1, lsl #20
   17bd4:	cmp	r3, r1, lsl #19
   17bd8:	adc	r0, r0, r0
   17bdc:	subcs	r3, r3, r1, lsl #19
   17be0:	cmp	r3, r1, lsl #18
   17be4:	adc	r0, r0, r0
   17be8:	subcs	r3, r3, r1, lsl #18
   17bec:	cmp	r3, r1, lsl #17
   17bf0:	adc	r0, r0, r0
   17bf4:	subcs	r3, r3, r1, lsl #17
   17bf8:	cmp	r3, r1, lsl #16
   17bfc:	adc	r0, r0, r0
   17c00:	subcs	r3, r3, r1, lsl #16
   17c04:	cmp	r3, r1, lsl #15
   17c08:	adc	r0, r0, r0
   17c0c:	subcs	r3, r3, r1, lsl #15
   17c10:	cmp	r3, r1, lsl #14
   17c14:	adc	r0, r0, r0
   17c18:	subcs	r3, r3, r1, lsl #14
   17c1c:	cmp	r3, r1, lsl #13
   17c20:	adc	r0, r0, r0
   17c24:	subcs	r3, r3, r1, lsl #13
   17c28:	cmp	r3, r1, lsl #12
   17c2c:	adc	r0, r0, r0
   17c30:	subcs	r3, r3, r1, lsl #12
   17c34:	cmp	r3, r1, lsl #11
   17c38:	adc	r0, r0, r0
   17c3c:	subcs	r3, r3, r1, lsl #11
   17c40:	cmp	r3, r1, lsl #10
   17c44:	adc	r0, r0, r0
   17c48:	subcs	r3, r3, r1, lsl #10
   17c4c:	cmp	r3, r1, lsl #9
   17c50:	adc	r0, r0, r0
   17c54:	subcs	r3, r3, r1, lsl #9
   17c58:	cmp	r3, r1, lsl #8
   17c5c:	adc	r0, r0, r0
   17c60:	subcs	r3, r3, r1, lsl #8
   17c64:	cmp	r3, r1, lsl #7
   17c68:	adc	r0, r0, r0
   17c6c:	subcs	r3, r3, r1, lsl #7
   17c70:	cmp	r3, r1, lsl #6
   17c74:	adc	r0, r0, r0
   17c78:	subcs	r3, r3, r1, lsl #6
   17c7c:	cmp	r3, r1, lsl #5
   17c80:	adc	r0, r0, r0
   17c84:	subcs	r3, r3, r1, lsl #5
   17c88:	cmp	r3, r1, lsl #4
   17c8c:	adc	r0, r0, r0
   17c90:	subcs	r3, r3, r1, lsl #4
   17c94:	cmp	r3, r1, lsl #3
   17c98:	adc	r0, r0, r0
   17c9c:	subcs	r3, r3, r1, lsl #3
   17ca0:	cmp	r3, r1, lsl #2
   17ca4:	adc	r0, r0, r0
   17ca8:	subcs	r3, r3, r1, lsl #2
   17cac:	cmp	r3, r1, lsl #1
   17cb0:	adc	r0, r0, r0
   17cb4:	subcs	r3, r3, r1, lsl #1
   17cb8:	cmp	r3, r1
   17cbc:	adc	r0, r0, r0
   17cc0:	subcs	r3, r3, r1
   17cc4:	cmp	ip, #0
   17cc8:	rsbmi	r0, r0, #0
   17ccc:	bx	lr
   17cd0:	teq	ip, r0
   17cd4:	rsbmi	r0, r0, #0
   17cd8:	bx	lr
   17cdc:	movcc	r0, #0
   17ce0:	asreq	r0, ip, #31
   17ce4:	orreq	r0, r0, #1
   17ce8:	bx	lr
   17cec:	clz	r2, r1
   17cf0:	rsb	r2, r2, #31
   17cf4:	cmp	ip, #0
   17cf8:	lsr	r0, r3, r2
   17cfc:	rsbmi	r0, r0, #0
   17d00:	bx	lr
   17d04:	cmp	r0, #0
   17d08:	mvngt	r0, #-2147483648	; 0x80000000
   17d0c:	movlt	r0, #-2147483648	; 0x80000000
   17d10:	b	17d34 <__snprintf_chk@plt+0x6f14>
   17d14:	cmp	r1, #0
   17d18:	beq	17d04 <__snprintf_chk@plt+0x6ee4>
   17d1c:	push	{r0, r1, lr}
   17d20:	bl	17afc <__snprintf_chk@plt+0x6cdc>
   17d24:	pop	{r1, r2, lr}
   17d28:	mul	r3, r2, r0
   17d2c:	sub	r1, r1, r3
   17d30:	bx	lr
   17d34:	push	{r1, lr}
   17d38:	mov	r0, #8
   17d3c:	bl	10bf8 <raise@plt>
   17d40:	pop	{r1, pc}
   17d44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17d48:	mov	r7, r0
   17d4c:	ldr	r6, [pc, #72]	; 17d9c <__snprintf_chk@plt+0x6f7c>
   17d50:	ldr	r5, [pc, #72]	; 17da0 <__snprintf_chk@plt+0x6f80>
   17d54:	add	r6, pc, r6
   17d58:	add	r5, pc, r5
   17d5c:	sub	r6, r6, r5
   17d60:	mov	r8, r1
   17d64:	mov	r9, r2
   17d68:	bl	10bc0 <calloc@plt-0x20>
   17d6c:	asrs	r6, r6, #2
   17d70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d74:	mov	r4, #0
   17d78:	add	r4, r4, #1
   17d7c:	ldr	r3, [r5], #4
   17d80:	mov	r2, r9
   17d84:	mov	r1, r8
   17d88:	mov	r0, r7
   17d8c:	blx	r3
   17d90:	cmp	r6, r4
   17d94:	bne	17d78 <__snprintf_chk@plt+0x6f58>
   17d98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d9c:			; <UNDEFINED> instruction: 0x000111b4
   17da0:	andeq	r1, r1, ip, lsr #3
   17da4:	bx	lr
   17da8:	ldr	r3, [pc, #12]	; 17dbc <__snprintf_chk@plt+0x6f9c>
   17dac:	mov	r1, #0
   17db0:	add	r3, pc, r3
   17db4:	ldr	r2, [r3]
   17db8:	b	10d78 <__cxa_atexit@plt>
   17dbc:	andeq	r1, r1, r0, lsr #6

Disassembly of section .fini:

00017dc0 <.fini>:
   17dc0:	push	{r3, lr}
   17dc4:	pop	{r3, pc}
