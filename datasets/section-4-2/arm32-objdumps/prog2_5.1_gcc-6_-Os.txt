
../repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

00010a08 <.init>:
   10a08:	push	{r3, lr}
   10a0c:	bl	10f38 <_start@@Base+0x3c>
   10a10:	pop	{r3, pc}

Disassembly of section .plt:

00010a14 <calloc@plt-0x14>:
   10a14:	push	{lr}		; (str lr, [sp, #-4]!)
   10a18:	ldr	lr, [pc, #4]	; 10a24 <calloc@plt-0x4>
   10a1c:	add	lr, pc, lr
   10a20:	ldr	pc, [lr, #8]!
   10a24:	ldrdeq	r1, [r1], -ip

00010a28 <calloc@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a34 <printf@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a40 <free@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a4c <strcpy@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a58 <puts@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a64 <malloc@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a70 <__libc_start_main@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1452]!	; 0x5ac

00010a7c <__gmon_start__@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1444]!	; 0x5a4

00010a88 <strlen@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1436]!	; 0x59c

00010a94 <putchar@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1428]!	; 0x594

00010aa0 <abort@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1420]!	; 0x58c

Disassembly of section .text:

00010aac <main@@Base>:
   10aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ab0:	mov	r1, #3
   10ab4:	sub	sp, sp, #28
   10ab8:	mov	r0, #4
   10abc:	bl	1112c <armazem_novo@@Base>
   10ac0:	mov	r7, r0
   10ac4:	ldr	r0, [pc, #952]	; 10e84 <main@@Base+0x3d8>
   10ac8:	bl	10a58 <puts@plt>
   10acc:	vldr	s0, [pc, #896]	; 10e54 <main@@Base+0x3a8>
   10ad0:	ldr	r0, [pc, #944]	; 10e88 <main@@Base+0x3dc>
   10ad4:	bl	112f8 <contentor_novo@@Base>
   10ad8:	vldr	s0, [pc, #888]	; 10e58 <main@@Base+0x3ac>
   10adc:	mov	fp, r0
   10ae0:	ldr	r0, [pc, #932]	; 10e8c <main@@Base+0x3e0>
   10ae4:	bl	112f8 <contentor_novo@@Base>
   10ae8:	vldr	s0, [pc, #876]	; 10e5c <main@@Base+0x3b0>
   10aec:	mov	sl, r0
   10af0:	ldr	r0, [pc, #920]	; 10e90 <main@@Base+0x3e4>
   10af4:	bl	112f8 <contentor_novo@@Base>
   10af8:	vldr	s0, [pc, #864]	; 10e60 <main@@Base+0x3b4>
   10afc:	mov	r4, r0
   10b00:	ldr	r0, [pc, #908]	; 10e94 <main@@Base+0x3e8>
   10b04:	bl	112f8 <contentor_novo@@Base>
   10b08:	vldr	s0, [pc, #852]	; 10e64 <main@@Base+0x3b8>
   10b0c:	mov	r9, r0
   10b10:	ldr	r0, [pc, #896]	; 10e98 <main@@Base+0x3ec>
   10b14:	bl	112f8 <contentor_novo@@Base>
   10b18:	vldr	s0, [pc, #840]	; 10e68 <main@@Base+0x3bc>
   10b1c:	mov	r8, r0
   10b20:	ldr	r0, [pc, #884]	; 10e9c <main@@Base+0x3f0>
   10b24:	bl	112f8 <contentor_novo@@Base>
   10b28:	vldr	s0, [pc, #828]	; 10e6c <main@@Base+0x3c0>
   10b2c:	str	r0, [sp]
   10b30:	ldr	r0, [pc, #872]	; 10ea0 <main@@Base+0x3f4>
   10b34:	bl	112f8 <contentor_novo@@Base>
   10b38:	vldr	s0, [pc, #816]	; 10e70 <main@@Base+0x3c4>
   10b3c:	mov	r6, r0
   10b40:	ldr	r0, [pc, #860]	; 10ea4 <main@@Base+0x3f8>
   10b44:	bl	112f8 <contentor_novo@@Base>
   10b48:	vldr	s0, [pc, #788]	; 10e64 <main@@Base+0x3b8>
   10b4c:	str	r0, [sp, #4]
   10b50:	ldr	r0, [pc, #848]	; 10ea8 <main@@Base+0x3fc>
   10b54:	bl	112f8 <contentor_novo@@Base>
   10b58:	vldr	s0, [pc, #788]	; 10e74 <main@@Base+0x3c8>
   10b5c:	str	r0, [sp, #8]
   10b60:	ldr	r0, [pc, #836]	; 10eac <main@@Base+0x400>
   10b64:	bl	112f8 <contentor_novo@@Base>
   10b68:	vldr	s0, [pc, #776]	; 10e78 <main@@Base+0x3cc>
   10b6c:	str	r0, [sp, #12]
   10b70:	ldr	r0, [pc, #824]	; 10eb0 <main@@Base+0x404>
   10b74:	bl	112f8 <contentor_novo@@Base>
   10b78:	vldr	s0, [pc, #764]	; 10e7c <main@@Base+0x3d0>
   10b7c:	str	r0, [sp, #16]
   10b80:	ldr	r0, [pc, #812]	; 10eb4 <main@@Base+0x408>
   10b84:	bl	112f8 <contentor_novo@@Base>
   10b88:	vldr	s0, [pc, #752]	; 10e80 <main@@Base+0x3d4>
   10b8c:	mov	r5, r0
   10b90:	ldr	r0, [pc, #800]	; 10eb8 <main@@Base+0x40c>
   10b94:	bl	112f8 <contentor_novo@@Base>
   10b98:	str	r0, [sp, #20]
   10b9c:	ldr	r0, [pc, #792]	; 10ebc <main@@Base+0x410>
   10ba0:	bl	10a58 <puts@plt>
   10ba4:	mov	r0, r7
   10ba8:	bl	11024 <imprimeArmazem@@Base>
   10bac:	ldr	r0, [pc, #780]	; 10ec0 <main@@Base+0x414>
   10bb0:	bl	10a58 <puts@plt>
   10bb4:	mov	r1, fp
   10bb8:	mov	r0, r7
   10bbc:	bl	111d4 <armazenar_contentor@@Base>
   10bc0:	cmp	r0, #0
   10bc4:	beq	10bd4 <main@@Base+0x128>
   10bc8:	ldr	r1, [fp]
   10bcc:	ldr	r0, [pc, #752]	; 10ec4 <main@@Base+0x418>
   10bd0:	bl	10a34 <printf@plt>
   10bd4:	mov	r1, sl
   10bd8:	mov	r0, r7
   10bdc:	bl	111d4 <armazenar_contentor@@Base>
   10be0:	cmp	r0, #0
   10be4:	beq	10bf4 <main@@Base+0x148>
   10be8:	ldr	r1, [sl]
   10bec:	ldr	r0, [pc, #720]	; 10ec4 <main@@Base+0x418>
   10bf0:	bl	10a34 <printf@plt>
   10bf4:	mov	r1, r4
   10bf8:	mov	r0, r7
   10bfc:	bl	111d4 <armazenar_contentor@@Base>
   10c00:	cmp	r0, #0
   10c04:	beq	10c14 <main@@Base+0x168>
   10c08:	ldr	r1, [r4]
   10c0c:	ldr	r0, [pc, #688]	; 10ec4 <main@@Base+0x418>
   10c10:	bl	10a34 <printf@plt>
   10c14:	mov	r1, r9
   10c18:	mov	r0, r7
   10c1c:	bl	111d4 <armazenar_contentor@@Base>
   10c20:	cmp	r0, #0
   10c24:	beq	10c34 <main@@Base+0x188>
   10c28:	ldr	r1, [r9]
   10c2c:	ldr	r0, [pc, #656]	; 10ec4 <main@@Base+0x418>
   10c30:	bl	10a34 <printf@plt>
   10c34:	ldr	r0, [pc, #652]	; 10ec8 <main@@Base+0x41c>
   10c38:	bl	10a58 <puts@plt>
   10c3c:	mov	r0, r7
   10c40:	bl	11024 <imprimeArmazem@@Base>
   10c44:	ldr	r0, [pc, #640]	; 10ecc <main@@Base+0x420>
   10c48:	bl	10a58 <puts@plt>
   10c4c:	mov	r1, r8
   10c50:	mov	r0, r7
   10c54:	bl	111d4 <armazenar_contentor@@Base>
   10c58:	cmp	r0, #0
   10c5c:	beq	10c6c <main@@Base+0x1c0>
   10c60:	ldr	r1, [r8]
   10c64:	ldr	r0, [pc, #600]	; 10ec4 <main@@Base+0x418>
   10c68:	bl	10a34 <printf@plt>
   10c6c:	ldr	r1, [sp]
   10c70:	mov	r0, r7
   10c74:	bl	111d4 <armazenar_contentor@@Base>
   10c78:	cmp	r0, #0
   10c7c:	beq	10c90 <main@@Base+0x1e4>
   10c80:	ldr	r3, [sp]
   10c84:	ldr	r0, [pc, #568]	; 10ec4 <main@@Base+0x418>
   10c88:	ldr	r1, [r3]
   10c8c:	bl	10a34 <printf@plt>
   10c90:	mov	r1, r6
   10c94:	mov	r0, r7
   10c98:	bl	111d4 <armazenar_contentor@@Base>
   10c9c:	cmp	r0, #0
   10ca0:	beq	10cb0 <main@@Base+0x204>
   10ca4:	ldr	r1, [r6]
   10ca8:	ldr	r0, [pc, #532]	; 10ec4 <main@@Base+0x418>
   10cac:	bl	10a34 <printf@plt>
   10cb0:	ldr	r1, [sp, #4]
   10cb4:	mov	r0, r7
   10cb8:	bl	111d4 <armazenar_contentor@@Base>
   10cbc:	cmp	r0, #0
   10cc0:	beq	10cd4 <main@@Base+0x228>
   10cc4:	ldr	r3, [sp, #4]
   10cc8:	ldr	r0, [pc, #500]	; 10ec4 <main@@Base+0x418>
   10ccc:	ldr	r1, [r3]
   10cd0:	bl	10a34 <printf@plt>
   10cd4:	ldr	r1, [sp, #8]
   10cd8:	mov	r0, r7
   10cdc:	bl	111d4 <armazenar_contentor@@Base>
   10ce0:	cmp	r0, #0
   10ce4:	beq	10cf8 <main@@Base+0x24c>
   10ce8:	ldr	r3, [sp, #8]
   10cec:	ldr	r0, [pc, #464]	; 10ec4 <main@@Base+0x418>
   10cf0:	ldr	r1, [r3]
   10cf4:	bl	10a34 <printf@plt>
   10cf8:	ldr	r1, [sp, #12]
   10cfc:	mov	r0, r7
   10d00:	bl	111d4 <armazenar_contentor@@Base>
   10d04:	cmp	r0, #0
   10d08:	beq	10d1c <main@@Base+0x270>
   10d0c:	ldr	r3, [sp, #12]
   10d10:	ldr	r0, [pc, #428]	; 10ec4 <main@@Base+0x418>
   10d14:	ldr	r1, [r3]
   10d18:	bl	10a34 <printf@plt>
   10d1c:	ldr	r1, [sp, #16]
   10d20:	mov	r0, r7
   10d24:	bl	111d4 <armazenar_contentor@@Base>
   10d28:	cmp	r0, #0
   10d2c:	beq	10d40 <main@@Base+0x294>
   10d30:	ldr	r3, [sp, #16]
   10d34:	ldr	r0, [pc, #392]	; 10ec4 <main@@Base+0x418>
   10d38:	ldr	r1, [r3]
   10d3c:	bl	10a34 <printf@plt>
   10d40:	mov	r1, r5
   10d44:	mov	r0, r7
   10d48:	bl	111d4 <armazenar_contentor@@Base>
   10d4c:	cmp	r0, #0
   10d50:	beq	10d60 <main@@Base+0x2b4>
   10d54:	ldr	r1, [r5]
   10d58:	ldr	r0, [pc, #356]	; 10ec4 <main@@Base+0x418>
   10d5c:	bl	10a34 <printf@plt>
   10d60:	ldr	r0, [pc, #360]	; 10ed0 <main@@Base+0x424>
   10d64:	bl	10a58 <puts@plt>
   10d68:	mov	r0, r7
   10d6c:	bl	11024 <imprimeArmazem@@Base>
   10d70:	mov	r0, r7
   10d74:	bl	11184 <armazem_cheio@@Base>
   10d78:	cmp	r0, #0
   10d7c:	ldrne	r0, [pc, #336]	; 10ed4 <main@@Base+0x428>
   10d80:	ldreq	r0, [pc, #336]	; 10ed8 <main@@Base+0x42c>
   10d84:	bl	10a58 <puts@plt>
   10d88:	ldr	r1, [sp, #20]
   10d8c:	mov	r0, r7
   10d90:	bl	111d4 <armazenar_contentor@@Base>
   10d94:	cmp	r0, #0
   10d98:	beq	10da8 <main@@Base+0x2fc>
   10d9c:	ldr	r1, [r4]
   10da0:	ldr	r0, [pc, #308]	; 10edc <main@@Base+0x430>
   10da4:	bl	10a34 <printf@plt>
   10da8:	ldr	r0, [pc, #304]	; 10ee0 <main@@Base+0x434>
   10dac:	bl	10a58 <puts@plt>
   10db0:	ldr	r6, [pc, #300]	; 10ee4 <main@@Base+0x438>
   10db4:	mov	r4, #8
   10db8:	mov	r0, r7
   10dbc:	bl	1126c <expedir_contentor@@Base>
   10dc0:	mov	r5, r0
   10dc4:	mov	r0, r6
   10dc8:	bl	10a58 <puts@plt>
   10dcc:	mov	r0, r5
   10dd0:	bl	1135c <contentor_imprime@@Base>
   10dd4:	subs	r4, r4, #1
   10dd8:	bne	10db8 <main@@Base+0x30c>
   10ddc:	ldr	r0, [pc, #260]	; 10ee8 <main@@Base+0x43c>
   10de0:	bl	10a58 <puts@plt>
   10de4:	mov	r0, r7
   10de8:	bl	11024 <imprimeArmazem@@Base>
   10dec:	ldr	r0, [pc, #248]	; 10eec <main@@Base+0x440>
   10df0:	bl	10a58 <puts@plt>
   10df4:	ldr	r6, [pc, #232]	; 10ee4 <main@@Base+0x438>
   10df8:	mov	r4, #4
   10dfc:	mov	r0, r7
   10e00:	bl	1126c <expedir_contentor@@Base>
   10e04:	mov	r5, r0
   10e08:	mov	r0, r6
   10e0c:	bl	10a58 <puts@plt>
   10e10:	mov	r0, r5
   10e14:	bl	1135c <contentor_imprime@@Base>
   10e18:	subs	r4, r4, #1
   10e1c:	bne	10dfc <main@@Base+0x350>
   10e20:	ldr	r0, [pc, #200]	; 10ef0 <main@@Base+0x444>
   10e24:	bl	10a58 <puts@plt>
   10e28:	mov	r0, r7
   10e2c:	bl	11024 <imprimeArmazem@@Base>
   10e30:	mov	r0, r7
   10e34:	bl	1115c <armazem_vazio@@Base>
   10e38:	cmp	r0, #0
   10e3c:	ldrne	r0, [pc, #176]	; 10ef4 <main@@Base+0x448>
   10e40:	ldreq	r0, [pc, #176]	; 10ef8 <main@@Base+0x44c>
   10e44:	bl	10a58 <puts@plt>
   10e48:	mov	r0, #0
   10e4c:	add	sp, sp, #28
   10e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e54:	cmnmi	r6, #0
   10e58:	cmnmi	sl, #0
   10e5c:	strmi	r8, [r4], #-0
   10e60:	ldrtmi	r8, [r1], #-0
   10e64:			; <UNDEFINED> instruction: 0x43be0000
   10e68:	bicmi	r0, r3, #0
   10e6c:	sbcmi	r0, r8, #0
   10e70:	adcmi	r0, r0, #0
   10e74:	tstmi	r6, #0
   10e78:	orrmi	r0, r7, #0
   10e7c:	bicsmi	r0, r7, #0
   10e80:	movtmi	r0, #32768	; 0x8000
   10e84:	andeq	r1, r1, fp, lsl #14
   10e88:	andeq	r1, r1, lr, lsl r7
   10e8c:	andeq	r1, r1, r5, lsr #14
   10e90:	andeq	r1, r1, r8, lsr #14
   10e94:	andeq	r1, r1, pc, lsr #14
   10e98:	andeq	r1, r1, r5, lsr r7
   10e9c:	andeq	r1, r1, fp, lsr r7
   10ea0:	andeq	r1, r1, r3, asr #14
   10ea4:	andeq	r1, r1, sp, asr #14
   10ea8:	andeq	r1, r1, r4, asr r7
   10eac:	andeq	r1, r1, r0, ror #14
   10eb0:	andeq	r1, r1, r8, ror #14
   10eb4:	andeq	r1, r1, r1, ror r7
   10eb8:	andeq	r1, r1, r7, ror r7
   10ebc:	andeq	r1, r1, pc, ror r7
   10ec0:	muleq	r1, sl, r7
   10ec4:			; <UNDEFINED> instruction: 0x000117bb
   10ec8:	andeq	r1, r1, r1, ror #15
   10ecc:	strdeq	r1, [r1], -ip
   10ed0:	andeq	r1, r1, sp, lsl r8
   10ed4:	andeq	r1, r1, r8, lsr r8
   10ed8:	andeq	r1, r1, r6, asr #16
   10edc:	andeq	r1, r1, fp, ror #16
   10ee0:			; <UNDEFINED> instruction: 0x000118b6
   10ee4:	ldrdeq	r1, [r1], -r7
   10ee8:	strdeq	r1, [r1], -r5
   10eec:	andeq	r1, r1, r0, lsl r9
   10ef0:	andeq	r1, r1, r1, lsr r9
   10ef4:	andeq	r1, r1, ip, asr #18
   10ef8:	andeq	r1, r1, sl, asr r9

00010efc <_start@@Base>:
   10efc:	mov	fp, #0
   10f00:	mov	lr, #0
   10f04:	pop	{r1}		; (ldr r1, [sp], #4)
   10f08:	mov	r2, sp
   10f0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f10:	push	{r0}		; (str r0, [sp, #-4]!)
   10f14:	ldr	ip, [pc, #16]	; 10f2c <_start@@Base+0x30>
   10f18:	push	{ip}		; (str ip, [sp, #-4]!)
   10f1c:	ldr	r0, [pc, #12]	; 10f30 <_start@@Base+0x34>
   10f20:	ldr	r3, [pc, #12]	; 10f34 <_start@@Base+0x38>
   10f24:	bl	10a70 <__libc_start_main@plt>
   10f28:	bl	10aa0 <abort@plt>
   10f2c:	andeq	r1, r1, ip, ror #13
   10f30:	andeq	r0, r1, ip, lsr #21
   10f34:	andeq	r1, r1, ip, lsl #13
   10f38:	ldr	r3, [pc, #20]	; 10f54 <_start@@Base+0x58>
   10f3c:	ldr	r2, [pc, #20]	; 10f58 <_start@@Base+0x5c>
   10f40:	add	r3, pc, r3
   10f44:	ldr	r2, [r3, r2]
   10f48:	cmp	r2, #0
   10f4c:	bxeq	lr
   10f50:	b	10a7c <__gmon_start__@plt>
   10f54:	strheq	r1, [r1], -r8
   10f58:	andeq	r0, r0, r8, lsr r0
   10f5c:	ldr	r3, [pc, #28]	; 10f80 <_start@@Base+0x84>
   10f60:	ldr	r0, [pc, #28]	; 10f84 <_start@@Base+0x88>
   10f64:	sub	r3, r3, r0
   10f68:	cmp	r3, #6
   10f6c:	bxls	lr
   10f70:	ldr	r3, [pc, #16]	; 10f88 <_start@@Base+0x8c>
   10f74:	cmp	r3, #0
   10f78:	bxeq	lr
   10f7c:	bx	r3
   10f80:	andeq	r2, r2, r7, asr #32
   10f84:	andeq	r2, r2, r4, asr #32
   10f88:	andeq	r0, r0, r0
   10f8c:	ldr	r1, [pc, #36]	; 10fb8 <_start@@Base+0xbc>
   10f90:	ldr	r0, [pc, #36]	; 10fbc <_start@@Base+0xc0>
   10f94:	sub	r1, r1, r0
   10f98:	asr	r1, r1, #2
   10f9c:	add	r1, r1, r1, lsr #31
   10fa0:	asrs	r1, r1, #1
   10fa4:	bxeq	lr
   10fa8:	ldr	r3, [pc, #16]	; 10fc0 <_start@@Base+0xc4>
   10fac:	cmp	r3, #0
   10fb0:	bxeq	lr
   10fb4:	bx	r3
   10fb8:	andeq	r2, r2, r4, asr #32
   10fbc:	andeq	r2, r2, r4, asr #32
   10fc0:	andeq	r0, r0, r0
   10fc4:	push	{r4, lr}
   10fc8:	ldr	r4, [pc, #24]	; 10fe8 <_start@@Base+0xec>
   10fcc:	ldrb	r3, [r4]
   10fd0:	cmp	r3, #0
   10fd4:	popne	{r4, pc}
   10fd8:	bl	10f5c <_start@@Base+0x60>
   10fdc:	mov	r3, #1
   10fe0:	strb	r3, [r4]
   10fe4:	pop	{r4, pc}
   10fe8:	andeq	r2, r2, r4, asr #32
   10fec:	ldr	r0, [pc, #40]	; 1101c <_start@@Base+0x120>
   10ff0:	ldr	r3, [r0]
   10ff4:	cmp	r3, #0
   10ff8:	bne	11000 <_start@@Base+0x104>
   10ffc:	b	10f8c <_start@@Base+0x90>
   11000:	ldr	r3, [pc, #24]	; 11020 <_start@@Base+0x124>
   11004:	cmp	r3, #0
   11008:	beq	10ffc <_start@@Base+0x100>
   1100c:	push	{r4, lr}
   11010:	blx	r3
   11014:	pop	{r4, lr}
   11018:	b	10f8c <_start@@Base+0x90>
   1101c:	andeq	r1, r2, r4, lsl pc
   11020:	andeq	r0, r0, r0

00011024 <imprimeArmazem@@Base>:
   11024:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11028:	subs	r4, r0, #0
   1102c:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11030:	ldr	r5, [r4, #8]
   11034:	cmp	r5, #0
   11038:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1103c:	ldr	r8, [r5, #4]
   11040:	mov	r1, #4
   11044:	mov	r0, r8
   11048:	bl	10a28 <calloc@plt>
   1104c:	ldr	r3, [r5]
   11050:	mov	r7, r0
   11054:	sub	r2, r0, #4
   11058:	cmp	r3, #0
   1105c:	bne	110b0 <imprimeArmazem@@Base+0x8c>
   11060:	mov	r0, #10
   11064:	bl	10a94 <putchar@plt>
   11068:	ldr	r9, [pc, #164]	; 11114 <imprimeArmazem@@Base+0xf0>
   1106c:	ldr	r5, [r4, #4]
   11070:	ldr	sl, [pc, #160]	; 11118 <imprimeArmazem@@Base+0xf4>
   11074:	ldr	fp, [pc, #160]	; 1111c <imprimeArmazem@@Base+0xf8>
   11078:	cmp	r5, #0
   1107c:	bgt	110c4 <imprimeArmazem@@Base+0xa0>
   11080:	ldr	r0, [pc, #152]	; 11120 <imprimeArmazem@@Base+0xfc>
   11084:	bl	10a34 <printf@plt>
   11088:	ldr	r6, [pc, #148]	; 11124 <imprimeArmazem@@Base+0x100>
   1108c:	mov	r5, #0
   11090:	ldr	r3, [r4]
   11094:	cmp	r5, r3
   11098:	blt	11104 <imprimeArmazem@@Base+0xe0>
   1109c:	ldr	r0, [pc, #132]	; 11128 <imprimeArmazem@@Base+0x104>
   110a0:	bl	10a58 <puts@plt>
   110a4:	mov	r0, r7
   110a8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110ac:	b	10a40 <free@plt>
   110b0:	ldr	r1, [r3]
   110b4:	ldr	r3, [r3, #4]
   110b8:	ldr	r1, [r1, #4]
   110bc:	str	r1, [r2, #4]!
   110c0:	b	11058 <imprimeArmazem@@Base+0x34>
   110c4:	mov	r0, r9
   110c8:	bl	10a34 <printf@plt>
   110cc:	mov	r6, #0
   110d0:	cmp	r6, r8
   110d4:	blt	110e8 <imprimeArmazem@@Base+0xc4>
   110d8:	mov	r0, #10
   110dc:	bl	10a94 <putchar@plt>
   110e0:	sub	r5, r5, #1
   110e4:	b	11078 <imprimeArmazem@@Base+0x54>
   110e8:	ldr	r3, [r7, r6, lsl #2]
   110ec:	add	r6, r6, #1
   110f0:	cmp	r5, r3
   110f4:	movle	r0, fp
   110f8:	movgt	r0, sl
   110fc:	bl	10a34 <printf@plt>
   11100:	b	110d0 <imprimeArmazem@@Base+0xac>
   11104:	mov	r0, r6
   11108:	bl	10a34 <printf@plt>
   1110c:	add	r5, r5, #1
   11110:	b	11090 <imprimeArmazem@@Base+0x6c>
   11114:	andeq	r1, r1, r3, lsl #14
   11118:	andeq	r1, r1, r1, lsl #14
   1111c:	strdeq	r1, [r1], -ip
   11120:	andeq	r1, r1, r8, lsl #14
   11124:	andeq	r1, r1, r6, lsl #14
   11128:	ldrdeq	r1, [r1], -pc	; <UNPREDICTABLE>

0001112c <armazem_novo@@Base>:
   1112c:	push	{r4, r5, r6, lr}
   11130:	mov	r6, r0
   11134:	mov	r0, #12
   11138:	mov	r5, r1
   1113c:	bl	10a64 <malloc@plt>
   11140:	str	r6, [r0]
   11144:	str	r5, [r0, #4]
   11148:	mov	r4, r0
   1114c:	bl	113c8 <fila_nova@@Base>
   11150:	str	r0, [r4, #8]
   11154:	mov	r0, r4
   11158:	pop	{r4, r5, r6, pc}

0001115c <armazem_vazio@@Base>:
   1115c:	cmp	r0, #0
   11160:	beq	1117c <armazem_vazio@@Base+0x20>
   11164:	push	{r4, lr}
   11168:	ldr	r0, [r0, #8]
   1116c:	bl	11428 <fila_tamanho@@Base>
   11170:	clz	r0, r0
   11174:	lsr	r0, r0, #5
   11178:	pop	{r4, pc}
   1117c:	mov	r0, #1
   11180:	bx	lr

00011184 <armazem_cheio@@Base>:
   11184:	push	{r4, lr}
   11188:	mov	r4, r0
   1118c:	bl	1115c <armazem_vazio@@Base>
   11190:	cmp	r0, #0
   11194:	beq	111a0 <armazem_cheio@@Base+0x1c>
   11198:	mov	r0, #0
   1119c:	pop	{r4, pc}
   111a0:	ldr	r0, [r4, #8]
   111a4:	bl	11428 <fila_tamanho@@Base>
   111a8:	ldr	r3, [r4]
   111ac:	cmp	r0, r3
   111b0:	bne	11198 <armazem_cheio@@Base+0x14>
   111b4:	ldr	r0, [r4, #8]
   111b8:	bl	1145c <fila_back@@Base>
   111bc:	ldr	r3, [r4, #4]
   111c0:	ldr	r0, [r0, #4]
   111c4:	sub	r0, r0, r3
   111c8:	clz	r0, r0
   111cc:	lsr	r0, r0, #5
   111d0:	pop	{r4, pc}

000111d4 <armazenar_contentor@@Base>:
   111d4:	push	{r4, r5, r6, r7, r8, lr}
   111d8:	mov	r4, r0
   111dc:	mov	r5, r1
   111e0:	bl	1157c <pilha_nova@@Base>
   111e4:	cmp	r5, #0
   111e8:	cmpne	r4, #0
   111ec:	bne	111f8 <armazenar_contentor@@Base+0x24>
   111f0:	mov	r0, #0
   111f4:	pop	{r4, r5, r6, r7, r8, pc}
   111f8:	mov	r6, r0
   111fc:	mov	r0, r4
   11200:	bl	11184 <armazem_cheio@@Base>
   11204:	cmp	r0, #0
   11208:	bne	111f0 <armazenar_contentor@@Base+0x1c>
   1120c:	mov	r0, r4
   11210:	bl	1115c <armazem_vazio@@Base>
   11214:	cmp	r0, #0
   11218:	beq	11230 <armazenar_contentor@@Base+0x5c>
   1121c:	ldr	r7, [r4, #8]
   11220:	bl	1157c <pilha_nova@@Base>
   11224:	mov	r1, r0
   11228:	mov	r0, r7
   1122c:	bl	11498 <fila_push@@Base>
   11230:	ldr	r0, [r4, #8]
   11234:	bl	1145c <fila_back@@Base>
   11238:	ldr	r3, [r4, #4]
   1123c:	ldr	r2, [r0, #4]
   11240:	cmp	r2, r3
   11244:	bne	11254 <armazenar_contentor@@Base+0x80>
   11248:	mov	r1, r6
   1124c:	ldr	r0, [r4, #8]
   11250:	bl	11498 <fila_push@@Base>
   11254:	ldr	r0, [r4, #8]
   11258:	bl	1145c <fila_back@@Base>
   1125c:	mov	r1, r5
   11260:	bl	11610 <pilha_push@@Base>
   11264:	mov	r0, #1
   11268:	pop	{r4, r5, r6, r7, r8, pc}

0001126c <expedir_contentor@@Base>:
   1126c:	push	{r4, r5, r6, lr}
   11270:	mov	r4, r0
   11274:	bl	1115c <armazem_vazio@@Base>
   11278:	cmp	r0, #0
   1127c:	beq	1128c <expedir_contentor@@Base+0x20>
   11280:	mov	r5, #0
   11284:	mov	r0, r5
   11288:	pop	{r4, r5, r6, pc}
   1128c:	ldr	r0, [r4, #8]
   11290:	bl	11438 <fila_front@@Base>
   11294:	bl	115ec <pilha_top@@Base>
   11298:	cmp	r0, #0
   1129c:	beq	11280 <expedir_contentor@@Base+0x14>
   112a0:	ldr	r0, [r4, #8]
   112a4:	bl	11438 <fila_front@@Base>
   112a8:	bl	115ec <pilha_top@@Base>
   112ac:	ldr	r5, [r0]
   112b0:	ldr	r0, [r4, #8]
   112b4:	bl	11438 <fila_front@@Base>
   112b8:	bl	115ec <pilha_top@@Base>
   112bc:	vldr	s0, [r0, #4]
   112c0:	mov	r0, r5
   112c4:	bl	112f8 <contentor_novo@@Base>
   112c8:	mov	r5, r0
   112cc:	ldr	r0, [r4, #8]
   112d0:	bl	11438 <fila_front@@Base>
   112d4:	ldr	r3, [r0, #4]
   112d8:	ldr	r0, [r4, #8]
   112dc:	cmp	r3, #1
   112e0:	bgt	112ec <expedir_contentor@@Base+0x80>
   112e4:	bl	114ec <fila_pop@@Base>
   112e8:	b	11284 <expedir_contentor@@Base+0x18>
   112ec:	bl	11438 <fila_front@@Base>
   112f0:	bl	1164c <pilha_pop@@Base>
   112f4:	b	11284 <expedir_contentor@@Base+0x18>

000112f8 <contentor_novo@@Base>:
   112f8:	push	{r4, r5, r6, lr}
   112fc:	mov	r5, r0
   11300:	vpush	{d8}
   11304:	mov	r0, #8
   11308:	vmov.f32	s16, s0
   1130c:	bl	10a64 <malloc@plt>
   11310:	mov	r4, r0
   11314:	mov	r0, r5
   11318:	bl	10a88 <strlen@plt>
   1131c:	add	r0, r0, #1
   11320:	bl	10a64 <malloc@plt>
   11324:	mov	r1, r5
   11328:	str	r0, [r4]
   1132c:	bl	10a4c <strcpy@plt>
   11330:	vstr	s16, [r4, #4]
   11334:	vpop	{d8}
   11338:	mov	r0, r4
   1133c:	pop	{r4, r5, r6, pc}

00011340 <contentor_apaga@@Base>:
   11340:	push	{r4, lr}
   11344:	mov	r4, r0
   11348:	ldr	r0, [r0]
   1134c:	bl	10a40 <free@plt>
   11350:	mov	r0, r4
   11354:	pop	{r4, lr}
   11358:	b	10a40 <free@plt>

0001135c <contentor_imprime@@Base>:
   1135c:	cmp	r0, #0
   11360:	bne	1136c <contentor_imprime@@Base+0x10>
   11364:	ldr	r0, [pc, #24]	; 11384 <contentor_imprime@@Base+0x28>
   11368:	b	10a58 <puts@plt>
   1136c:	vldr	s15, [r0, #4]
   11370:	ldr	r1, [r0]
   11374:	ldr	r0, [pc, #12]	; 11388 <contentor_imprime@@Base+0x2c>
   11378:	vcvt.f64.f32	d7, s15
   1137c:	vmov	r2, r3, d7
   11380:	b	10a34 <printf@plt>
   11384:	andeq	r1, r1, pc, ror r9
   11388:	andeq	r1, r1, lr, lsl #19

0001138c <fila_novo_elemento@@Base>:
   1138c:	push	{r4, lr}
   11390:	mov	r4, r0
   11394:	mov	r0, #8
   11398:	bl	10a64 <malloc@plt>
   1139c:	subs	r3, r0, #0
   113a0:	beq	113c0 <fila_novo_elemento@@Base+0x34>
   113a4:	cmp	r4, #0
   113a8:	movne	r2, #0
   113ac:	str	r4, [r3]
   113b0:	strne	r2, [r3, #4]
   113b4:	bne	113c0 <fila_novo_elemento@@Base+0x34>
   113b8:	bl	10a40 <free@plt>
   113bc:	mov	r3, r4
   113c0:	mov	r0, r3
   113c4:	pop	{r4, pc}

000113c8 <fila_nova@@Base>:
   113c8:	push	{r4, lr}
   113cc:	mov	r0, #8
   113d0:	bl	10a64 <malloc@plt>
   113d4:	cmp	r0, #0
   113d8:	movne	r3, #0
   113dc:	strne	r3, [r0]
   113e0:	strne	r3, [r0, #4]
   113e4:	pop	{r4, pc}

000113e8 <fila_apaga@@Base>:
   113e8:	push	{r4, r5, r6, lr}
   113ec:	subs	r5, r0, #0
   113f0:	bne	11410 <fila_apaga@@Base+0x28>
   113f4:	pop	{r4, r5, r6, pc}
   113f8:	ldr	r3, [r4, #4]
   113fc:	ldr	r0, [r4]
   11400:	str	r3, [r5]
   11404:	bl	1159c <pilha_apaga@@Base>
   11408:	mov	r0, r4
   1140c:	bl	10a40 <free@plt>
   11410:	ldr	r4, [r5]
   11414:	cmp	r4, #0
   11418:	bne	113f8 <fila_apaga@@Base+0x10>
   1141c:	mov	r0, r5
   11420:	pop	{r4, r5, r6, lr}
   11424:	b	10a40 <free@plt>

00011428 <fila_tamanho@@Base>:
   11428:	cmp	r0, #0
   1142c:	ldrne	r0, [r0, #4]
   11430:	mvneq	r0, #0
   11434:	bx	lr

00011438 <fila_front@@Base>:
   11438:	subs	r3, r0, #0
   1143c:	beq	11454 <fila_front@@Base+0x1c>
   11440:	ldr	r0, [r3, #4]
   11444:	cmp	r0, #0
   11448:	ldrne	r3, [r3]
   1144c:	ldrne	r0, [r3]
   11450:	bx	lr
   11454:	mov	r0, r3
   11458:	bx	lr

0001145c <fila_back@@Base>:
   1145c:	subs	r3, r0, #0
   11460:	beq	11490 <fila_back@@Base+0x34>
   11464:	ldr	r0, [r3, #4]
   11468:	cmp	r0, #0
   1146c:	ldrne	r3, [r3]
   11470:	bne	1147c <fila_back@@Base+0x20>
   11474:	bx	lr
   11478:	mov	r3, r2
   1147c:	ldr	r2, [r3, #4]
   11480:	cmp	r2, #0
   11484:	bne	11478 <fila_back@@Base+0x1c>
   11488:	ldr	r0, [r3]
   1148c:	bx	lr
   11490:	mov	r0, r3
   11494:	bx	lr

00011498 <fila_push@@Base>:
   11498:	push	{r4, r5, r6, lr}
   1149c:	subs	r4, r0, #0
   114a0:	popeq	{r4, r5, r6, pc}
   114a4:	mov	r0, r1
   114a8:	ldr	r5, [r4]
   114ac:	bl	1138c <fila_novo_elemento@@Base>
   114b0:	cmp	r0, #0
   114b4:	popeq	{r4, r5, r6, pc}
   114b8:	ldr	r3, [r4, #4]
   114bc:	cmp	r5, #0
   114c0:	add	r3, r3, #1
   114c4:	str	r3, [r4, #4]
   114c8:	bne	114d8 <fila_push@@Base+0x40>
   114cc:	str	r0, [r4]
   114d0:	pop	{r4, r5, r6, pc}
   114d4:	mov	r5, r3
   114d8:	ldr	r3, [r5, #4]
   114dc:	cmp	r3, #0
   114e0:	bne	114d4 <fila_push@@Base+0x3c>
   114e4:	str	r0, [r5, #4]
   114e8:	pop	{r4, r5, r6, pc}

000114ec <fila_pop@@Base>:
   114ec:	cmp	r0, #0
   114f0:	bxeq	lr
   114f4:	ldr	r3, [r0, #4]
   114f8:	cmp	r3, #0
   114fc:	bxeq	lr
   11500:	push	{r4, lr}
   11504:	sub	r3, r3, #1
   11508:	ldr	r4, [r0]
   1150c:	str	r3, [r0, #4]
   11510:	ldr	r3, [r4, #4]
   11514:	str	r3, [r0]
   11518:	ldr	r0, [r4]
   1151c:	bl	1159c <pilha_apaga@@Base>
   11520:	mov	r0, r4
   11524:	pop	{r4, lr}
   11528:	b	10a40 <free@plt>

0001152c <pilha_novo_elemento@@Base>:
   1152c:	push	{r4, r5, r6, lr}
   11530:	mov	r5, r0
   11534:	mov	r0, #8
   11538:	bl	10a64 <malloc@plt>
   1153c:	subs	r4, r0, #0
   11540:	beq	11574 <pilha_novo_elemento@@Base+0x48>
   11544:	vldr	s0, [r5, #4]
   11548:	ldr	r0, [r5]
   1154c:	bl	112f8 <contentor_novo@@Base>
   11550:	cmp	r0, #0
   11554:	movne	r3, #0
   11558:	mov	r5, r0
   1155c:	str	r0, [r4]
   11560:	strne	r3, [r4, #4]
   11564:	bne	11574 <pilha_novo_elemento@@Base+0x48>
   11568:	mov	r0, r4
   1156c:	bl	10a40 <free@plt>
   11570:	mov	r4, r5
   11574:	mov	r0, r4
   11578:	pop	{r4, r5, r6, pc}

0001157c <pilha_nova@@Base>:
   1157c:	push	{r4, lr}
   11580:	mov	r0, #8
   11584:	bl	10a64 <malloc@plt>
   11588:	cmp	r0, #0
   1158c:	movne	r3, #0
   11590:	strne	r3, [r0]
   11594:	strne	r3, [r0, #4]
   11598:	pop	{r4, pc}

0001159c <pilha_apaga@@Base>:
   1159c:	push	{r4, r5, r6, lr}
   115a0:	subs	r5, r0, #0
   115a4:	bne	115c4 <pilha_apaga@@Base+0x28>
   115a8:	pop	{r4, r5, r6, pc}
   115ac:	ldr	r3, [r4, #4]
   115b0:	ldr	r0, [r4]
   115b4:	str	r3, [r5]
   115b8:	bl	11340 <contentor_apaga@@Base>
   115bc:	mov	r0, r4
   115c0:	bl	10a40 <free@plt>
   115c4:	ldr	r4, [r5]
   115c8:	cmp	r4, #0
   115cc:	bne	115ac <pilha_apaga@@Base+0x10>
   115d0:	mov	r0, r5
   115d4:	pop	{r4, r5, r6, lr}
   115d8:	b	10a40 <free@plt>

000115dc <pilha_tamanho@@Base>:
   115dc:	cmp	r0, #0
   115e0:	ldrne	r0, [r0, #4]
   115e4:	mvneq	r0, #0
   115e8:	bx	lr

000115ec <pilha_top@@Base>:
   115ec:	subs	r3, r0, #0
   115f0:	beq	11608 <pilha_top@@Base+0x1c>
   115f4:	ldr	r0, [r3, #4]
   115f8:	cmp	r0, #0
   115fc:	ldrne	r3, [r3]
   11600:	ldrne	r0, [r3]
   11604:	bx	lr
   11608:	mov	r0, r3
   1160c:	bx	lr

00011610 <pilha_push@@Base>:
   11610:	push	{r4, lr}
   11614:	subs	r4, r0, #0
   11618:	popeq	{r4, pc}
   1161c:	mov	r0, r1
   11620:	bl	1152c <pilha_novo_elemento@@Base>
   11624:	cmp	r0, #0
   11628:	popeq	{r4, pc}
   1162c:	ldr	r3, [r4, #4]
   11630:	add	r3, r3, #1
   11634:	str	r3, [r4, #4]
   11638:	ldr	r3, [r4]
   1163c:	cmp	r3, #0
   11640:	strne	r3, [r0, #4]
   11644:	str	r0, [r4]
   11648:	pop	{r4, pc}

0001164c <pilha_pop@@Base>:
   1164c:	cmp	r0, #0
   11650:	bxeq	lr
   11654:	ldr	r3, [r0, #4]
   11658:	cmp	r3, #0
   1165c:	bxeq	lr
   11660:	push	{r4, lr}
   11664:	sub	r3, r3, #1
   11668:	ldr	r4, [r0]
   1166c:	ldr	r2, [r4, #4]
   11670:	str	r3, [r0, #4]
   11674:	str	r2, [r0]
   11678:	ldr	r0, [r4]
   1167c:	bl	11340 <contentor_apaga@@Base>
   11680:	mov	r0, r4
   11684:	pop	{r4, lr}
   11688:	b	10a40 <free@plt>

0001168c <__libc_csu_init@@Base>:
   1168c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11690:	mov	r7, r0
   11694:	ldr	r6, [pc, #72]	; 116e4 <__libc_csu_init@@Base+0x58>
   11698:	ldr	r5, [pc, #72]	; 116e8 <__libc_csu_init@@Base+0x5c>
   1169c:	add	r6, pc, r6
   116a0:	add	r5, pc, r5
   116a4:	sub	r6, r6, r5
   116a8:	mov	r8, r1
   116ac:	mov	r9, r2
   116b0:	bl	10a08 <calloc@plt-0x20>
   116b4:	asrs	r6, r6, #2
   116b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   116bc:	mov	r4, #0
   116c0:	add	r4, r4, #1
   116c4:	ldr	r3, [r5], #4
   116c8:	mov	r2, r9
   116cc:	mov	r1, r8
   116d0:	mov	r0, r7
   116d4:	blx	r3
   116d8:	cmp	r6, r4
   116dc:	bne	116c0 <__libc_csu_init@@Base+0x34>
   116e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   116e4:	andeq	r0, r1, ip, ror #16
   116e8:	andeq	r0, r1, r4, ror #16

000116ec <__libc_csu_fini@@Base>:
   116ec:	bx	lr

Disassembly of section .fini:

000116f0 <.fini>:
   116f0:	push	{r3, lr}
   116f4:	pop	{r3, pc}
