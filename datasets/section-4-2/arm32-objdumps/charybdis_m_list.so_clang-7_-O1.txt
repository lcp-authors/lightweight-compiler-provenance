
../repos/charybdis/modules/.libs/m_list.so:     file format elf32-littlearm


Disassembly of section .init:

00000a7c <_init>:
 a7c:	push	{r3, lr}
 a80:	bl	c04 <call_weak_fn>
 a84:	pop	{r3, pc}

Disassembly of section .plt:

00000a88 <.plt>:
 a88:	push	{lr}		; (str lr, [sp, #-4]!)
 a8c:	ldr	lr, [pc, #4]	; a98 <.plt+0x10>
 a90:	add	lr, pc, lr
 a94:	ldr	pc, [lr, #8]!
 a98:	.word	0x00011568

00000a9c <calloc@plt>:
 a9c:	add	ip, pc, #0, 12
 aa0:	add	ip, ip, #69632	; 0x11000
 aa4:	ldr	pc, [ip, #1384]!	; 0x568

00000aa8 <delete_isupport@plt>:
 aa8:	add	ip, pc, #0, 12
 aac:	add	ip, ip, #69632	; 0x11000
 ab0:	ldr	pc, [ip, #1376]!	; 0x560

00000ab4 <rb_current_time@plt>:
 ab4:	add	ip, pc, #0, 12
 ab8:	add	ip, ip, #69632	; 0x11000
 abc:	ldr	pc, [ip, #1368]!	; 0x558

00000ac0 <rb_event_add@plt>:
 ac0:	add	ip, pc, #0, 12
 ac4:	add	ip, ip, #69632	; 0x11000
 ac8:	ldr	pc, [ip, #1360]!	; 0x550

00000acc <__cxa_finalize@plt>:
 acc:	add	ip, pc, #0, 12
 ad0:	add	ip, ip, #69632	; 0x11000
 ad4:	ldr	pc, [ip, #1352]!	; 0x548

00000ad8 <sendto_one@plt>:
 ad8:	add	ip, pc, #0, 12
 adc:	add	ip, ip, #69632	; 0x11000
 ae0:	ldr	pc, [ip, #1344]!	; 0x540

00000ae4 <rb_event_delete@plt>:
 ae4:	add	ip, pc, #0, 12
 ae8:	add	ip, ip, #69632	; 0x11000
 aec:	ldr	pc, [ip, #1336]!	; 0x538

00000af0 <free@plt>:
 af0:	add	ip, pc, #0, 12
 af4:	add	ip, ip, #69632	; 0x11000
 af8:	ldr	pc, [ip, #1328]!	; 0x530

00000afc <rb_radixtree_foreach_start_from@plt>:
 afc:	add	ip, pc, #0, 12
 b00:	add	ip, ip, #69632	; 0x11000
 b04:	ldr	pc, [ip, #1320]!	; 0x528

00000b08 <rb_outofmemory@plt>:
 b08:	add	ip, pc, #0, 12
 b0c:	add	ip, ip, #69632	; 0x11000
 b10:	ldr	pc, [ip, #1312]!	; 0x520

00000b14 <rb_radixtree_foreach_next@plt>:
 b14:	add	ip, pc, #0, 12
 b18:	add	ip, ip, #69632	; 0x11000
 b1c:	ldr	pc, [ip, #1304]!	; 0x518

00000b20 <find_channel@plt>:
 b20:	add	ip, pc, #0, 12
 b24:	add	ip, ip, #69632	; 0x11000
 b28:	ldr	pc, [ip, #1296]!	; 0x510

00000b2c <rb_free_rb_dlink_node@plt>:
 b2c:	add	ip, pc, #0, 12
 b30:	add	ip, ip, #69632	; 0x11000
 b34:	ldr	pc, [ip, #1288]!	; 0x508

00000b38 <strcpy@plt>:
 b38:	add	ip, pc, #0, 12
 b3c:	add	ip, ip, #69632	; 0x11000
 b40:	ldr	pc, [ip, #1280]!	; 0x500

00000b44 <find_channel_membership@plt>:
 b44:	add	ip, pc, #0, 12
 b48:	add	ip, ip, #69632	; 0x11000
 b4c:	ldr	pc, [ip, #1272]!	; 0x4f8

00000b50 <malloc@plt>:
 b50:	add	ip, pc, #0, 12
 b54:	add	ip, ip, #69632	; 0x11000
 b58:	ldr	pc, [ip, #1264]!	; 0x4f0

00000b5c <__gmon_start__@plt>:
 b5c:	add	ip, pc, #0, 12
 b60:	add	ip, ip, #69632	; 0x11000
 b64:	ldr	pc, [ip, #1256]!	; 0x4e8

00000b68 <rb_make_rb_dlink_node@plt>:
 b68:	add	ip, pc, #0, 12
 b6c:	add	ip, ip, #69632	; 0x11000
 b70:	ldr	pc, [ip, #1248]!	; 0x4e0

00000b74 <get_sendq@plt>:
 b74:	add	ip, pc, #0, 12
 b78:	add	ip, ip, #69632	; 0x11000
 b7c:	ldr	pc, [ip, #1240]!	; 0x4d8

00000b80 <sendto_one_numeric@plt>:
 b80:	add	ip, pc, #0, 12
 b84:	add	ip, ip, #69632	; 0x11000
 b88:	ldr	pc, [ip, #1232]!	; 0x4d0

00000b8c <strlen@plt>:
 b8c:	add	ip, pc, #0, 12
 b90:	add	ip, ip, #69632	; 0x11000
 b94:	ldr	pc, [ip, #1224]!	; 0x4c8

00000b98 <strchr@plt>:
 b98:	add	ip, pc, #0, 12
 b9c:	add	ip, ip, #69632	; 0x11000
 ba0:	ldr	pc, [ip, #1216]!	; 0x4c0

00000ba4 <report_operspy@plt>:
 ba4:	add	ip, pc, #0, 12
 ba8:	add	ip, ip, #69632	; 0x11000
 bac:	ldr	pc, [ip, #1208]!	; 0x4b8

00000bb0 <rb_radixtree_foreach_cur@plt>:
 bb0:	add	ip, pc, #0, 12
 bb4:	add	ip, ip, #69632	; 0x11000
 bb8:	ldr	pc, [ip, #1200]!	; 0x4b0

00000bbc <sendto_one_notice@plt>:
 bbc:	add	ip, pc, #0, 12
 bc0:	add	ip, ip, #69632	; 0x11000
 bc4:	ldr	pc, [ip, #1192]!	; 0x4a8

00000bc8 <atoi@plt>:
 bc8:	add	ip, pc, #0, 12
 bcc:	add	ip, ip, #69632	; 0x11000
 bd0:	ldr	pc, [ip, #1184]!	; 0x4a0

00000bd4 <add_isupport@plt>:
 bd4:	add	ip, pc, #0, 12
 bd8:	add	ip, ip, #69632	; 0x11000
 bdc:	ldr	pc, [ip, #1176]!	; 0x498

00000be0 <rb_strlcpy@plt>:
 be0:	add	ip, pc, #0, 12
 be4:	add	ip, ip, #69632	; 0x11000
 be8:	ldr	pc, [ip, #1168]!	; 0x490

00000bec <privilegeset_in_set@plt>:
 bec:	add	ip, pc, #0, 12
 bf0:	add	ip, ip, #69632	; 0x11000
 bf4:	ldr	pc, [ip, #1160]!	; 0x488

00000bf8 <__assert_fail@plt>:
 bf8:	add	ip, pc, #0, 12
 bfc:	add	ip, ip, #69632	; 0x11000
 c00:	ldr	pc, [ip, #1152]!	; 0x480

Disassembly of section .text:

00000c04 <call_weak_fn>:
     c04:	ldr	r3, [pc, #20]	; c20 <call_weak_fn+0x1c>
     c08:	ldr	r2, [pc, #20]	; c24 <call_weak_fn+0x20>
     c0c:	add	r3, pc, r3
     c10:	ldr	r2, [r3, r2]
     c14:	cmp	r2, #0
     c18:	bxeq	lr
     c1c:	b	b5c <__gmon_start__@plt>
     c20:	.word	0x000113ec
     c24:	.word	0x0000008c

00000c28 <deregister_tm_clones>:
     c28:	ldr	r0, [pc, #44]	; c5c <deregister_tm_clones+0x34>
     c2c:	ldr	r3, [pc, #44]	; c60 <deregister_tm_clones+0x38>
     c30:	add	r0, pc, r0
     c34:	add	r3, pc, r3
     c38:	cmp	r3, r0
     c3c:	ldr	r3, [pc, #32]	; c64 <deregister_tm_clones+0x3c>
     c40:	add	r3, pc, r3
     c44:	bxeq	lr
     c48:	ldr	r2, [pc, #24]	; c68 <deregister_tm_clones+0x40>
     c4c:	ldr	r3, [r3, r2]
     c50:	cmp	r3, #0
     c54:	bxeq	lr
     c58:	bx	r3
     c5c:	.word	0x00011504
     c60:	.word	0x00011500
     c64:	.word	0x000113b8
     c68:	.word	0x00000088

00000c6c <register_tm_clones>:
     c6c:	ldr	r0, [pc, #56]	; cac <register_tm_clones+0x40>
     c70:	ldr	r3, [pc, #56]	; cb0 <register_tm_clones+0x44>
     c74:	add	r0, pc, r0
     c78:	add	r3, pc, r3
     c7c:	sub	r1, r3, r0
     c80:	ldr	r3, [pc, #44]	; cb4 <register_tm_clones+0x48>
     c84:	asr	r1, r1, #2
     c88:	add	r3, pc, r3
     c8c:	add	r1, r1, r1, lsr #31
     c90:	asrs	r1, r1, #1
     c94:	bxeq	lr
     c98:	ldr	r2, [pc, #24]	; cb8 <register_tm_clones+0x4c>
     c9c:	ldr	r3, [r3, r2]
     ca0:	cmp	r3, #0
     ca4:	bxeq	lr
     ca8:	bx	r3
     cac:	.word	0x000114c0
     cb0:	.word	0x000114bc
     cb4:	.word	0x00011370
     cb8:	.word	0x000000a0

00000cbc <__do_global_dtors_aux>:
     cbc:	ldr	r3, [pc, #76]	; d10 <__do_global_dtors_aux+0x54>
     cc0:	ldr	r2, [pc, #76]	; d14 <__do_global_dtors_aux+0x58>
     cc4:	add	r3, pc, r3
     cc8:	add	r2, pc, r2
     ccc:	ldrb	r3, [r3]
     cd0:	cmp	r3, #0
     cd4:	bxne	lr
     cd8:	ldr	r3, [pc, #56]	; d18 <__do_global_dtors_aux+0x5c>
     cdc:	push	{r4, lr}
     ce0:	ldr	r3, [r2, r3]
     ce4:	cmp	r3, #0
     ce8:	beq	cf8 <__do_global_dtors_aux+0x3c>
     cec:	ldr	r3, [pc, #40]	; d1c <__do_global_dtors_aux+0x60>
     cf0:	ldr	r0, [pc, r3]
     cf4:	bl	acc <__cxa_finalize@plt>
     cf8:	bl	c28 <deregister_tm_clones>
     cfc:	ldr	r3, [pc, #28]	; d20 <__do_global_dtors_aux+0x64>
     d00:	mov	r2, #1
     d04:	add	r3, pc, r3
     d08:	strb	r2, [r3]
     d0c:	pop	{r4, pc}
     d10:	.word	0x00011470
     d14:	.word	0x00011330
     d18:	.word	0x00000084
     d1c:	.word	0x000113b4
     d20:	.word	0x00011430

00000d24 <frame_dummy>:
     d24:	b	c6c <register_tm_clones>

00000d28 <m_list>:
     d28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
     d2c:	add	fp, sp, #24
     d30:	sub	sp, sp, #8
     d34:	mov	r4, r2
     d38:	mov	r7, r0
     d3c:	ldr	r0, [r2, #432]	; 0x1b0
     d40:	ldr	r0, [r0, #428]	; 0x1ac
     d44:	cmp	r0, #0
     d48:	beq	d6c <m_list+0x44>
     d4c:	ldr	r1, [pc, #264]	; e5c <m_list+0x134>
     d50:	add	r1, pc, r1
     d54:	mov	r0, r4
     d58:	bl	bbc <sendto_one_notice@plt>
     d5c:	mov	r0, r4
     d60:	sub	sp, fp, #24
     d64:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
     d68:	b	1650 <safelist_client_release>
     d6c:	mov	r5, r3
     d70:	mov	r8, r1
     d74:	cmp	r3, #2
     d78:	blt	da8 <m_list+0x80>
     d7c:	ldr	r0, [fp, #8]
     d80:	ldr	r0, [r0, #4]
     d84:	cmp	r0, #0
     d88:	beq	da8 <m_list+0x80>
     d8c:	ldrb	r0, [r0]
     d90:	ldr	r1, [pc, #180]	; e4c <m_list+0x124>
     d94:	ldr	r1, [pc, r1]
     d98:	add	r0, r1, r0, lsl #2
     d9c:	ldrb	r0, [r0, #1]
     da0:	tst	r0, #2
     da4:	bne	e30 <m_list+0x108>
     da8:	ldr	r0, [pc, #160]	; e50 <m_list+0x128>
     dac:	ldr	r0, [pc, r0]
     db0:	ldr	r0, [r0, #184]	; 0xb8
     db4:	ldr	r1, [pc, #152]	; e54 <m_list+0x12c>
     db8:	ldr	r1, [pc, r1]
     dbc:	add	r6, r0, r1
     dc0:	bl	ab4 <rb_current_time@plt>
     dc4:	cmp	r6, r0
     dc8:	ble	e20 <m_list+0xf8>
     dcc:	ldr	r0, [pc, #140]	; e60 <m_list+0x138>
     dd0:	add	r0, pc, r0
     dd4:	str	r0, [sp]
     dd8:	add	r5, r4, #88	; 0x58
     ddc:	ldr	r0, [pc, #128]	; e64 <m_list+0x13c>
     de0:	ldr	r0, [pc, r0]
     de4:	add	r6, r0, #88	; 0x58
     de8:	ldr	r1, [pc, #120]	; e68 <m_list+0x140>
     dec:	add	r1, pc, r1
     df0:	mov	r0, r4
     df4:	mov	r2, r6
     df8:	mov	r3, r5
     dfc:	bl	ad8 <sendto_one@plt>
     e00:	ldr	r1, [pc, #100]	; e6c <m_list+0x144>
     e04:	add	r1, pc, r1
     e08:	mov	r0, r4
     e0c:	mov	r2, r6
     e10:	mov	r3, r5
     e14:	sub	sp, fp, #24
     e18:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
     e1c:	b	ad8 <sendto_one@plt>
     e20:	bl	ab4 <rb_current_time@plt>
     e24:	ldr	r1, [pc, #44]	; e58 <m_list+0x130>
     e28:	add	r1, pc, r1
     e2c:	str	r0, [r1]
     e30:	mov	r0, r7
     e34:	mov	r1, r8
     e38:	mov	r2, r4
     e3c:	mov	r3, r5
     e40:	sub	sp, fp, #24
     e44:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
     e48:	b	e70 <mo_list>
     e4c:	.word	0x000112f4
     e50:	.word	0x000112f4
     e54:	.word	0x00011390
     e58:	.word	0x00011320
     e5c:	.word	0x00000fe6
     e60:	.word	0x00000ecc
     e64:	.word	0x000112bc
     e68:	.word	0x00000f59
     e6c:	.word	0x00000e84

00000e70 <mo_list>:
     e70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     e74:	add	fp, sp, #28
     e78:	sub	sp, sp, #12
     e7c:	mov	r8, r2
     e80:	ldr	r0, [r2, #432]	; 0x1b0
     e84:	ldr	r0, [r0, #428]	; 0x1ac
     e88:	cmp	r0, #0
     e8c:	beq	eb0 <mo_list+0x40>
     e90:	ldr	r1, [pc, #1100]	; 12e4 <mo_list+0x474>
     e94:	add	r1, pc, r1
     e98:	mov	r0, r8
     e9c:	bl	bbc <sendto_one_notice@plt>
     ea0:	mov	r0, r8
     ea4:	sub	sp, fp, #28
     ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     eac:	b	1650 <safelist_client_release>
     eb0:	cmp	r3, #2
     eb4:	blt	f94 <mo_list+0x124>
     eb8:	ldr	r0, [fp, #8]
     ebc:	ldr	r6, [r0, #4]
     ec0:	mov	r0, r6
     ec4:	bl	b8c <strlen@plt>
     ec8:	add	r0, r0, #8
     ecc:	bic	r7, r0, #7
     ed0:	mov	r4, sp
     ed4:	sub	r5, r4, r7
     ed8:	mov	sp, r5
     edc:	mov	r0, r5
     ee0:	mov	r1, r6
     ee4:	bl	b38 <strcpy@plt>
     ee8:	ldrb	r0, [r4, -r7]
     eec:	mov	r9, #0
     ef0:	cmp	r0, #33	; 0x21
     ef4:	mov	r7, #0
     ef8:	mov	r6, r5
     efc:	bne	f60 <mo_list+0xf0>
     f00:	ldr	r0, [r8, #24]
     f04:	cmp	r0, #0
     f08:	mov	r7, #0
     f0c:	mov	r6, r5
     f10:	beq	f60 <mo_list+0xf0>
     f14:	ldr	r0, [r0, #36]	; 0x24
     f18:	cmp	r0, #0
     f1c:	mov	r7, #0
     f20:	mov	r6, r5
     f24:	beq	f60 <mo_list+0xf0>
     f28:	ldr	r1, [pc, #920]	; 12c8 <mo_list+0x458>
     f2c:	add	r1, pc, r1
     f30:	bl	bec <privilegeset_in_set@plt>
     f34:	cmp	r0, #0
     f38:	mov	r7, #0
     f3c:	mov	r6, r5
     f40:	beq	f60 <mo_list+0xf0>
     f44:	add	r6, r5, #1
     f48:	ldr	r1, [pc, #892]	; 12cc <mo_list+0x45c>
     f4c:	add	r1, pc, r1
     f50:	mov	r0, r8
     f54:	mov	r2, r6
     f58:	bl	ba4 <report_operspy@plt>
     f5c:	mov	r7, #1
     f60:	ldrb	r0, [r5, r7]
     f64:	ldr	r1, [pc, #868]	; 12d0 <mo_list+0x460>
     f68:	ldr	r1, [pc, r1]
     f6c:	add	r0, r1, r0, lsl #2
     f70:	ldrb	r0, [r0, #1]
     f74:	tst	r0, #2
     f78:	beq	fa0 <mo_list+0x130>
     f7c:	mov	r0, r8
     f80:	mov	r1, r6
     f84:	mov	r2, r7
     f88:	bl	19e0 <safelist_channel_named>
     f8c:	sub	sp, fp, #28
     f90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f94:	mov	r6, #0
     f98:	mov	r9, #1
     f9c:	mov	r7, #0
     fa0:	bl	1af0 <rb_malloc>
     fa4:	mov	r5, r0
     fa8:	ldr	r0, [pc, #784]	; 12c0 <mo_list+0x450>
     fac:	ldr	r0, [pc, r0]
     fb0:	ldr	r0, [r0, #84]	; 0x54
     fb4:	mvn	r1, #-2147483648	; 0x80000000
     fb8:	vmov.i32	q8, #0	; 0x00000000
     fbc:	str	r7, [r5, #28]
     fc0:	add	r2, r5, #12
     fc4:	str	r2, [fp, #-36]	; 0xffffffdc
     fc8:	vst1.32	{d16-d17}, [r2]
     fcc:	stmib	r5, {r0, r1}
     fd0:	cmp	r9, #0
     fd4:	bne	12ac <mo_list+0x43c>
     fd8:	ldrb	r0, [r6]
     fdc:	cmp	r0, #0
     fe0:	beq	12ac <mo_list+0x43c>
     fe4:	mov	r4, #0
     fe8:	str	r4, [r5, #4]
     fec:	mov	r7, #1
     ff0:	ldr	sl, [pc, #716]	; 12c4 <mo_list+0x454>
     ff4:	ldr	sl, [pc, sl]
     ff8:	mov	r0, r6
     ffc:	mov	r1, #44	; 0x2c
    1000:	bl	b98 <strchr@plt>
    1004:	cmp	r0, #0
    1008:	mov	r9, #0
    100c:	strbne	r4, [r0], #1
    1010:	movne	r9, r0
    1014:	ldrb	r0, [r6]
    1018:	sub	r0, r0, #60	; 0x3c
    101c:	cmp	r0, #56	; 0x38
    1020:	bhi	1288 <mo_list+0x418>
    1024:	add	r1, pc, #4
    1028:	ldr	r0, [r1, r0, lsl #2]
    102c:	add	pc, r1, r0
    1030:	.word	0x00000184
    1034:	.word	0x00000258
    1038:	.word	0x000001b4
    103c:	.word	0x00000258
    1040:	.word	0x00000258
    1044:	.word	0x00000258
    1048:	.word	0x00000258
    104c:	.word	0x000000e4
    1050:	.word	0x00000258
    1054:	.word	0x00000258
    1058:	.word	0x00000258
    105c:	.word	0x00000258
    1060:	.word	0x00000258
    1064:	.word	0x00000258
    1068:	.word	0x00000258
    106c:	.word	0x00000258
    1070:	.word	0x00000258
    1074:	.word	0x00000258
    1078:	.word	0x00000258
    107c:	.word	0x00000258
    1080:	.word	0x00000258
    1084:	.word	0x00000258
    1088:	.word	0x00000258
    108c:	.word	0x00000258
    1090:	.word	0x00000134
    1094:	.word	0x00000258
    1098:	.word	0x00000258
    109c:	.word	0x00000258
    10a0:	.word	0x00000258
    10a4:	.word	0x00000258
    10a8:	.word	0x00000258
    10ac:	.word	0x00000258
    10b0:	.word	0x00000258
    10b4:	.word	0x00000258
    10b8:	.word	0x00000258
    10bc:	.word	0x00000258
    10c0:	.word	0x00000258
    10c4:	.word	0x00000258
    10c8:	.word	0x00000258
    10cc:	.word	0x000000e4
    10d0:	.word	0x00000258
    10d4:	.word	0x00000258
    10d8:	.word	0x00000258
    10dc:	.word	0x00000258
    10e0:	.word	0x00000258
    10e4:	.word	0x00000258
    10e8:	.word	0x00000258
    10ec:	.word	0x00000258
    10f0:	.word	0x00000258
    10f4:	.word	0x00000258
    10f8:	.word	0x00000258
    10fc:	.word	0x00000258
    1100:	.word	0x00000258
    1104:	.word	0x00000258
    1108:	.word	0x00000258
    110c:	.word	0x00000258
    1110:	.word	0x00000134
    1114:	ldrb	r0, [r6, #1]
    1118:	cmp	r0, #60	; 0x3c
    111c:	beq	1238 <mo_list+0x3c8>
    1120:	cmp	r0, #62	; 0x3e
    1124:	bne	1288 <mo_list+0x418>
    1128:	ldrb	r0, [r6, #2]!
    112c:	ldrb	r0, [sl, r0, lsl #2]
    1130:	tst	r0, #16
    1134:	beq	1288 <mo_list+0x418>
    1138:	bl	ab4 <rb_current_time@plt>
    113c:	mov	sl, r0
    1140:	mov	r0, r6
    1144:	bl	bc8 <atoi@plt>
    1148:	sub	r0, r0, r0, lsl #4
    114c:	add	r0, sl, r0, lsl #2
    1150:	ldr	sl, [pc, #380]	; 12d4 <mo_list+0x464>
    1154:	ldr	sl, [pc, sl]
    1158:	mov	r4, #0
    115c:	str	r0, [r5, #16]
    1160:	b	1288 <mo_list+0x418>
    1164:	ldrb	r0, [r6, #1]
    1168:	cmp	r0, #60	; 0x3c
    116c:	beq	11fc <mo_list+0x38c>
    1170:	cmp	r0, #62	; 0x3e
    1174:	bne	1288 <mo_list+0x418>
    1178:	ldrb	r0, [r6, #2]!
    117c:	ldrb	r0, [sl, r0, lsl #2]
    1180:	tst	r0, #16
    1184:	beq	1288 <mo_list+0x418>
    1188:	bl	ab4 <rb_current_time@plt>
    118c:	mov	sl, r0
    1190:	mov	r0, r6
    1194:	bl	bc8 <atoi@plt>
    1198:	sub	r0, r0, r0, lsl #4
    119c:	add	r0, sl, r0, lsl #2
    11a0:	ldr	sl, [pc, #308]	; 12dc <mo_list+0x46c>
    11a4:	ldr	sl, [pc, sl]
    11a8:	mov	r4, #0
    11ac:	str	r0, [r5, #24]
    11b0:	b	1288 <mo_list+0x418>
    11b4:	ldrb	r0, [r6, #1]!
    11b8:	ldrb	r0, [sl, r0, lsl #2]
    11bc:	tst	r0, #16
    11c0:	beq	1288 <mo_list+0x418>
    11c4:	mov	r0, r6
    11c8:	bl	bc8 <atoi@plt>
    11cc:	str	r0, [r5, #8]
    11d0:	cmp	r0, #0
    11d4:	subne	r0, r0, #1
    11d8:	mvneq	r0, #-2147483648	; 0x80000000
    11dc:	str	r0, [r5, #8]
    11e0:	b	1288 <mo_list+0x418>
    11e4:	ldrb	r0, [r6, #1]!
    11e8:	ldrb	r0, [sl, r0, lsl #2]
    11ec:	tst	r0, #16
    11f0:	bne	1278 <mo_list+0x408>
    11f4:	str	r4, [r5, #4]
    11f8:	b	1288 <mo_list+0x418>
    11fc:	ldrb	r0, [r6, #2]!
    1200:	ldrb	r0, [sl, r0, lsl #2]
    1204:	tst	r0, #16
    1208:	beq	1288 <mo_list+0x418>
    120c:	bl	ab4 <rb_current_time@plt>
    1210:	mov	sl, r0
    1214:	mov	r0, r6
    1218:	bl	bc8 <atoi@plt>
    121c:	sub	r0, r0, r0, lsl #4
    1220:	add	r0, sl, r0, lsl #2
    1224:	ldr	sl, [pc, #180]	; 12e0 <mo_list+0x470>
    1228:	ldr	sl, [pc, sl]
    122c:	mov	r4, #0
    1230:	str	r0, [r5, #20]
    1234:	b	1288 <mo_list+0x418>
    1238:	ldrb	r0, [r6, #2]!
    123c:	ldrb	r0, [sl, r0, lsl #2]
    1240:	tst	r0, #16
    1244:	beq	1288 <mo_list+0x418>
    1248:	bl	ab4 <rb_current_time@plt>
    124c:	mov	sl, r0
    1250:	mov	r0, r6
    1254:	bl	bc8 <atoi@plt>
    1258:	sub	r0, r0, r0, lsl #4
    125c:	add	r0, sl, r0, lsl #2
    1260:	ldr	sl, [pc, #112]	; 12d8 <mo_list+0x468>
    1264:	ldr	sl, [pc, sl]
    1268:	mov	r4, #0
    126c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1270:	str	r0, [r1]
    1274:	b	1288 <mo_list+0x418>
    1278:	mov	r0, r6
    127c:	bl	bc8 <atoi@plt>
    1280:	add	r0, r0, #1
    1284:	str	r0, [r5, #4]
    1288:	cmp	r9, #0
    128c:	ldrbne	r0, [r9]
    1290:	cmpne	r0, #0
    1294:	beq	12ac <mo_list+0x43c>
    1298:	add	r0, r7, #1
    129c:	cmp	r7, #7
    12a0:	mov	r7, r0
    12a4:	mov	r6, r9
    12a8:	bcc	ff8 <mo_list+0x188>
    12ac:	mov	r0, r8
    12b0:	mov	r1, r5
    12b4:	bl	1b10 <safelist_client_instantiate>
    12b8:	sub	sp, fp, #28
    12bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    12c0:	.word	0x000110e8
    12c4:	.word	0x00011094
    12c8:	.word	0x00000e84
    12cc:	.word	0x00000d50
    12d0:	.word	0x00011120
    12d4:	.word	0x00010f34
    12d8:	.word	0x00010e24
    12dc:	.word	0x00010ee4
    12e0:	.word	0x00010e60
    12e4:	.word	0x00000ea2

000012e8 <safelist_check_cliexit>:
    12e8:	ldr	r0, [r0, #4]
    12ec:	ldrb	r1, [r0, #65]	; 0x41
    12f0:	tst	r1, #32
    12f4:	beq	1318 <safelist_check_cliexit+0x30>
    12f8:	ldrh	r1, [r0, #80]	; 0x50
    12fc:	cmp	r1, #64	; 0x40
    1300:	bxne	lr
    1304:	ldr	r1, [r0, #432]	; 0x1b0
    1308:	ldr	r1, [r1, #428]	; 0x1ac
    130c:	cmp	r1, #0
    1310:	beq	1318 <safelist_check_cliexit+0x30>
    1314:	b	1650 <safelist_client_release>
    1318:	bx	lr

0000131c <_modinit>:
    131c:	push	{r4, sl, fp, lr}
    1320:	add	fp, sp, #8
    1324:	ldr	r0, [pc, #96]	; 138c <_modinit+0x70>
    1328:	add	r0, pc, r0
    132c:	ldr	r1, [pc, #92]	; 1390 <_modinit+0x74>
    1330:	add	r1, pc, r1
    1334:	mov	r2, #0
    1338:	mov	r3, #3
    133c:	bl	ac0 <rb_event_add@plt>
    1340:	ldr	r1, [pc, #76]	; 1394 <_modinit+0x78>
    1344:	add	r1, pc, r1
    1348:	str	r0, [r1]
    134c:	ldr	r4, [pc, #68]	; 1398 <_modinit+0x7c>
    1350:	ldr	r4, [pc, r4]
    1354:	ldr	r0, [pc, #64]	; 139c <_modinit+0x80>
    1358:	add	r0, pc, r0
    135c:	ldr	r2, [pc, #60]	; 13a0 <_modinit+0x84>
    1360:	add	r2, pc, r2
    1364:	mov	r1, r4
    1368:	bl	bd4 <add_isupport@plt>
    136c:	ldr	r0, [pc, #48]	; 13a4 <_modinit+0x88>
    1370:	add	r0, pc, r0
    1374:	ldr	r2, [pc, #44]	; 13a8 <_modinit+0x8c>
    1378:	add	r2, pc, r2
    137c:	mov	r1, r4
    1380:	bl	bd4 <add_isupport@plt>
    1384:	mov	r0, #0
    1388:	pop	{r4, sl, fp, pc}
    138c:	.word	0x00000920
    1390:	.word	0x000000b0
    1394:	.word	0x00010df4
    1398:	.word	0x00010d40
    139c:	.word	0x00000909
    13a0:	.word	0x00000927
    13a4:	.word	0x000008f4
    13a8:	.word	0x000008f2

000013ac <_moddeinit>:
    13ac:	push	{fp, lr}
    13b0:	mov	fp, sp
    13b4:	ldr	r0, [pc, #32]	; 13dc <_moddeinit+0x30>
    13b8:	ldr	r0, [pc, r0]
    13bc:	bl	ae4 <rb_event_delete@plt>
    13c0:	ldr	r0, [pc, #24]	; 13e0 <_moddeinit+0x34>
    13c4:	add	r0, pc, r0
    13c8:	bl	aa8 <delete_isupport@plt>
    13cc:	ldr	r0, [pc, #16]	; 13e4 <_moddeinit+0x38>
    13d0:	add	r0, pc, r0
    13d4:	pop	{fp, lr}
    13d8:	b	aa8 <delete_isupport@plt>
    13dc:	.word	0x00010d80
    13e0:	.word	0x0000089d
    13e4:	.word	0x00000894

000013e8 <safelist_iterate_clients>:
    13e8:	push	{r4, sl, fp, lr}
    13ec:	add	fp, sp, #8
    13f0:	ldr	r4, [pc, #28]	; 1414 <safelist_iterate_clients+0x2c>
    13f4:	ldr	r4, [pc, r4]
    13f8:	b	1408 <safelist_iterate_clients+0x20>
    13fc:	ldr	r0, [r4]
    1400:	ldr	r4, [r4, #8]
    1404:	bl	1418 <safelist_iterate_client>
    1408:	cmp	r4, #0
    140c:	popeq	{r4, sl, fp, pc}
    1410:	b	13fc <safelist_iterate_clients+0x14>
    1414:	.word	0x00010d48

00001418 <safelist_iterate_client>:
    1418:	push	{r4, r5, r6, r7, fp, lr}
    141c:	add	fp, sp, #16
    1420:	sub	sp, sp, #40	; 0x28
    1424:	mov	r4, r0
    1428:	ldr	r7, [pc, #180]	; 14e4 <safelist_iterate_client+0xcc>
    142c:	ldr	r7, [pc, r7]
    1430:	ldr	r0, [r7]
    1434:	ldr	r1, [r4, #432]	; 0x1b0
    1438:	ldr	r1, [r1, #428]	; 0x1ac
    143c:	ldr	r2, [r1]
    1440:	mov	r5, sp
    1444:	mov	r1, r5
    1448:	bl	afc <rb_radixtree_foreach_start_from@plt>
    144c:	ldr	r0, [r7]
    1450:	mov	r1, r5
    1454:	bl	bb0 <rb_radixtree_foreach_cur@plt>
    1458:	cmp	r0, #0
    145c:	beq	14b0 <safelist_iterate_client+0x98>
    1460:	mov	r6, r0
    1464:	mov	r5, sp
    1468:	ldr	r0, [r4, #36]	; 0x24
    146c:	bl	14e8 <safelist_sendq_exceeded>
    1470:	ldr	r1, [r4, #432]	; 0x1b0
    1474:	ldr	r2, [r1, #428]	; 0x1ac
    1478:	cmp	r0, #0
    147c:	bne	14c0 <safelist_iterate_client+0xa8>
    1480:	mov	r0, r4
    1484:	mov	r1, r6
    1488:	bl	1554 <safelist_one_channel>
    148c:	ldr	r0, [r7]
    1490:	mov	r1, r5
    1494:	bl	b14 <rb_radixtree_foreach_next@plt>
    1498:	ldr	r0, [r7]
    149c:	mov	r1, r5
    14a0:	bl	bb0 <rb_radixtree_foreach_cur@plt>
    14a4:	mov	r6, r0
    14a8:	cmp	r0, #0
    14ac:	bne	1468 <safelist_iterate_client+0x50>
    14b0:	mov	r0, r4
    14b4:	bl	1650 <safelist_client_release>
    14b8:	sub	sp, fp, #16
    14bc:	pop	{r4, r5, r6, r7, fp, pc}
    14c0:	ldr	r0, [r2]
    14c4:	bl	1510 <rb_free>
    14c8:	ldr	r0, [r6, #236]	; 0xec
    14cc:	bl	151c <rb_strdup>
    14d0:	ldr	r1, [r4, #432]	; 0x1b0
    14d4:	ldr	r1, [r1, #428]	; 0x1ac
    14d8:	str	r0, [r1]
    14dc:	sub	sp, fp, #16
    14e0:	pop	{r4, r5, r6, r7, fp, pc}
    14e4:	.word	0x00010c60

000014e8 <safelist_sendq_exceeded>:
    14e8:	push	{r4, sl, fp, lr}
    14ec:	add	fp, sp, #8
    14f0:	ldr	r1, [r0, #432]	; 0x1b0
    14f4:	ldr	r4, [r1, #64]	; 0x40
    14f8:	bl	b74 <get_sendq@plt>
    14fc:	add	r1, r0, r0, lsr #31
    1500:	mov	r0, #0
    1504:	cmp	r4, r1, asr #1
    1508:	movwgt	r0, #1
    150c:	pop	{r4, sl, fp, pc}

00001510 <rb_free>:
    1510:	cmp	r0, #0
    1514:	bxeq	lr
    1518:	b	af0 <free@plt>

0000151c <rb_strdup>:
    151c:	push	{r4, r5, fp, lr}
    1520:	add	fp, sp, #8
    1524:	mov	r4, r0
    1528:	bl	b8c <strlen@plt>
    152c:	add	r0, r0, #1
    1530:	bl	b50 <malloc@plt>
    1534:	cmp	r0, #0
    1538:	beq	1550 <rb_strdup+0x34>
    153c:	mov	r5, r0
    1540:	mov	r1, r4
    1544:	bl	b38 <strcpy@plt>
    1548:	mov	r0, r5
    154c:	pop	{r4, r5, fp, pc}
    1550:	bl	b08 <rb_outofmemory@plt>

00001554 <safelist_one_channel>:
    1554:	push	{r4, r5, r6, r7, fp, lr}
    1558:	add	fp, sp, #16
    155c:	mov	r7, r2
    1560:	mov	r4, r1
    1564:	mov	r5, r0
    1568:	mov	r6, #1
    156c:	cmp	r1, #0
    1570:	ldrbne	r0, [r4, #12]
    1574:	tstne	r0, #2
    1578:	bne	1614 <safelist_one_channel+0xc0>
    157c:	ldr	r0, [r4, #132]	; 0x84
    1580:	ldr	r1, [r7, #4]
    1584:	cmp	r0, r1
    1588:	bcc	1634 <safelist_one_channel+0xe0>
    158c:	ldr	r1, [r7, #8]
    1590:	cmp	r0, r1
    1594:	bhi	1634 <safelist_one_channel+0xe0>
    1598:	ldr	r0, [r7, #20]
    159c:	cmp	r0, #0
    15a0:	beq	15b0 <safelist_one_channel+0x5c>
    15a4:	ldr	r1, [r4, #116]	; 0x74
    15a8:	cmp	r1, r0
    15ac:	blt	1634 <safelist_one_channel+0xe0>
    15b0:	ldr	r0, [r7, #24]
    15b4:	cmp	r0, #0
    15b8:	beq	15d0 <safelist_one_channel+0x7c>
    15bc:	ldr	r1, [r4, #116]	; 0x74
    15c0:	cmp	r1, r0
    15c4:	bgt	1634 <safelist_one_channel+0xe0>
    15c8:	cmp	r1, #0
    15cc:	beq	1634 <safelist_one_channel+0xe0>
    15d0:	ldr	r0, [r7, #12]
    15d4:	cmp	r0, #0
    15d8:	beq	15e8 <safelist_one_channel+0x94>
    15dc:	ldr	r1, [r4, #232]	; 0xe8
    15e0:	cmp	r1, r0
    15e4:	poplt	{r4, r5, r6, r7, fp, pc}
    15e8:	ldr	r0, [r7, #16]
    15ec:	cmp	r0, #0
    15f0:	beq	1600 <safelist_one_channel+0xac>
    15f4:	ldr	r1, [r4, #232]	; 0xe8
    15f8:	cmp	r1, r0
    15fc:	bgt	1634 <safelist_one_channel+0xe0>
    1600:	mov	r0, r5
    1604:	mov	r1, r4
    1608:	mov	r2, r6
    160c:	pop	{r4, r5, r6, r7, fp, lr}
    1610:	b	16d4 <list_one_channel>
    1614:	cmp	r5, #0
    1618:	ldrne	r0, [r5, #24]
    161c:	cmpne	r0, #0
    1620:	bne	1638 <safelist_one_channel+0xe4>
    1624:	ldr	r0, [r7, #28]
    1628:	mov	r6, #0
    162c:	cmp	r0, #0
    1630:	bne	157c <safelist_one_channel+0x28>
    1634:	pop	{r4, r5, r6, r7, fp, pc}
    1638:	mov	r0, r4
    163c:	mov	r1, r5
    1640:	bl	b44 <find_channel_membership@plt>
    1644:	cmp	r0, #0
    1648:	bne	157c <safelist_one_channel+0x28>
    164c:	b	1624 <safelist_one_channel+0xd0>

00001650 <safelist_client_release>:
    1650:	push	{r4, sl, fp, lr}
    1654:	add	fp, sp, #8
    1658:	mov	r4, r0
    165c:	ldrb	r0, [r0, #65]	; 0x41
    1660:	tst	r0, #32
    1664:	popeq	{r4, sl, fp, pc}
    1668:	ldrh	r0, [r4, #80]	; 0x50
    166c:	cmp	r0, #64	; 0x40
    1670:	bne	16c8 <safelist_client_release+0x78>
    1674:	mov	r0, r4
    1678:	bl	18d8 <rb_dlinkFindDestroy>
    167c:	ldr	r0, [r4, #432]	; 0x1b0
    1680:	ldr	r0, [r0, #428]	; 0x1ac
    1684:	ldr	r0, [r0]
    1688:	bl	1510 <rb_free>
    168c:	ldr	r0, [r4, #432]	; 0x1b0
    1690:	ldr	r0, [r0, #428]	; 0x1ac
    1694:	bl	1510 <rb_free>
    1698:	ldr	r0, [r4, #432]	; 0x1b0
    169c:	mov	r1, #0
    16a0:	str	r1, [r0, #428]	; 0x1ac
    16a4:	add	r3, r4, #88	; 0x58
    16a8:	ldr	r0, [pc, #28]	; 16cc <safelist_client_release+0x7c>
    16ac:	ldr	r0, [pc, r0]
    16b0:	add	r2, r0, #88	; 0x58
    16b4:	ldr	r1, [pc, #20]	; 16d0 <safelist_client_release+0x80>
    16b8:	add	r1, pc, r1
    16bc:	mov	r0, r4
    16c0:	pop	{r4, sl, fp, lr}
    16c4:	b	ad8 <sendto_one@plt>
    16c8:	pop	{r4, sl, fp, pc}
    16cc:	.word	0x000109f0
    16d0:	.word	0x000005d0

000016d4 <list_one_channel>:
    16d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    16d8:	add	fp, sp, #24
    16dc:	sub	sp, sp, #408	; 0x198
    16e0:	mov	r5, r2
    16e4:	mov	r6, r1
    16e8:	mov	r4, r0
    16ec:	ldr	r1, [r1, #108]	; 0x6c
    16f0:	cmp	r1, #0
    16f4:	beq	1708 <list_one_channel+0x34>
    16f8:	add	r0, sp, #17
    16fc:	movw	r2, #391	; 0x187
    1700:	bl	be0 <rb_strlcpy@plt>
    1704:	b	1710 <list_one_channel+0x3c>
    1708:	mov	r0, #0
    170c:	strb	r0, [sp, #17]
    1710:	add	r7, sp, #17
    1714:	mov	r0, r7
    1718:	bl	1784 <strip_colour>
    171c:	ldr	r0, [r6, #132]	; 0x84
    1720:	ldr	r1, [r6, #236]	; 0xec
    1724:	ldr	r2, [pc, #72]	; 1774 <list_one_channel+0xa0>
    1728:	add	r2, pc, r2
    172c:	ldr	r3, [pc, #68]	; 1778 <list_one_channel+0xa4>
    1730:	add	r3, pc, r3
    1734:	cmp	r5, #0
    1738:	moveq	r3, r2
    173c:	str	r3, [sp]
    1740:	str	r1, [sp, #4]
    1744:	str	r0, [sp, #8]
    1748:	str	r7, [sp, #12]
    174c:	add	r3, r4, #88	; 0x58
    1750:	ldr	r0, [pc, #36]	; 177c <list_one_channel+0xa8>
    1754:	ldr	r0, [pc, r0]
    1758:	add	r2, r0, #88	; 0x58
    175c:	ldr	r1, [pc, #28]	; 1780 <list_one_channel+0xac>
    1760:	add	r1, pc, r1
    1764:	mov	r0, r4
    1768:	bl	ad8 <sendto_one@plt>
    176c:	sub	sp, fp, #24
    1770:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1774:	.word	0x0000055e
    1778:	.word	0x00000557
    177c:	.word	0x00010948
    1780:	.word	0x0000050e

00001784 <strip_colour>:
    1784:	cmp	r0, #0
    1788:	beq	18d0 <strip_colour+0x14c>
    178c:	push	{r4, sl, fp, lr}
    1790:	add	fp, sp, #8
    1794:	mov	lr, #0
    1798:	ldr	ip, [pc, #308]	; 18d4 <strip_colour+0x150>
    179c:	ldr	ip, [pc, ip]
    17a0:	mov	r3, r0
    17a4:	b	17ac <strip_colour+0x28>
    17a8:	add	r3, r3, #1
    17ac:	ldrb	r2, [r3]
    17b0:	cmp	r2, #32
    17b4:	bhi	18a4 <strip_colour+0x120>
    17b8:	add	r1, pc, #4
    17bc:	ldr	r4, [r1, r2, lsl #2]
    17c0:	add	pc, r1, r4
    17c4:	.word	0x000000f8
    17c8:	.word	0x000000e0
    17cc:	.word	0xffffffe4
    17d0:	.word	0x00000084
    17d4:	.word	0xffffffe4
    17d8:	.word	0x000000e0
    17dc:	.word	0xffffffe4
    17e0:	.word	0xffffffe4
    17e4:	.word	0x000000e0
    17e8:	.word	0x000000e0
    17ec:	.word	0x000000e0
    17f0:	.word	0x000000e0
    17f4:	.word	0x000000e0
    17f8:	.word	0x000000e0
    17fc:	.word	0x000000e0
    1800:	.word	0xffffffe4
    1804:	.word	0x000000e0
    1808:	.word	0x000000e0
    180c:	.word	0x000000e0
    1810:	.word	0x000000e0
    1814:	.word	0x000000e0
    1818:	.word	0x000000e0
    181c:	.word	0xffffffe4
    1820:	.word	0xffffffe4
    1824:	.word	0x000000e0
    1828:	.word	0x000000e0
    182c:	.word	0x000000e0
    1830:	.word	0xffffffe4
    1834:	.word	0x000000e0
    1838:	.word	0xffffffe4
    183c:	.word	0x000000e0
    1840:	.word	0xffffffe4
    1844:	.word	0x000000ec
    1848:	mov	r2, r3
    184c:	ldrb	r1, [r2, #1]!
    1850:	ldrb	r1, [ip, r1, lsl #2]
    1854:	tst	r1, #16
    1858:	beq	17a8 <strip_colour+0x24>
    185c:	ldrb	r1, [r3, #2]!
    1860:	ldrb	r1, [ip, r1, lsl #2]
    1864:	tst	r1, #16
    1868:	moveq	r3, r2
    186c:	ldrb	r1, [r3, #1]
    1870:	cmp	r1, #44	; 0x2c
    1874:	bne	17a8 <strip_colour+0x24>
    1878:	mov	r2, r3
    187c:	ldrb	r1, [r2, #2]!
    1880:	ldrb	r1, [ip, r1, lsl #2]
    1884:	tst	r1, #16
    1888:	beq	17a8 <strip_colour+0x24>
    188c:	ldrb	r1, [r3, #3]!
    1890:	ldrb	r1, [ip, r1, lsl #2]
    1894:	tst	r1, #16
    1898:	moveq	r3, r2
    189c:	add	r3, r3, #1
    18a0:	b	17ac <strip_colour+0x28>
    18a4:	strb	r2, [r0], #1
    18a8:	mov	lr, r0
    18ac:	b	17a8 <strip_colour+0x24>
    18b0:	strb	r2, [r0], #1
    18b4:	add	r3, r3, #1
    18b8:	b	17ac <strip_colour+0x28>
    18bc:	mov	r2, #0
    18c0:	strb	r2, [r0]
    18c4:	cmp	lr, #0
    18c8:	strbne	r2, [lr]
    18cc:	pop	{r4, sl, fp, pc}
    18d0:	udf	#65006	; 0xfdee
    18d4:	.word	0x000108ec

000018d8 <rb_dlinkFindDestroy>:
    18d8:	push	{fp, lr}
    18dc:	mov	fp, sp
    18e0:	cmp	r0, #0
    18e4:	beq	18fc <rb_dlinkFindDestroy+0x24>
    18e8:	bl	1928 <rb_dlinkFindDelete>
    18ec:	cmp	r0, #0
    18f0:	popeq	{fp, pc}
    18f4:	pop	{fp, lr}
    18f8:	b	b2c <rb_free_rb_dlink_node@plt>
    18fc:	ldr	r0, [pc, #24]	; 191c <rb_dlinkFindDestroy+0x44>
    1900:	add	r0, pc, r0
    1904:	ldr	r1, [pc, #20]	; 1920 <rb_dlinkFindDestroy+0x48>
    1908:	add	r1, pc, r1
    190c:	ldr	r3, [pc, #16]	; 1924 <rb_dlinkFindDestroy+0x4c>
    1910:	add	r3, pc, r3
    1914:	mov	r2, #288	; 0x120
    1918:	bl	bf8 <__assert_fail@plt>
    191c:	.word	0x000003ee
    1920:	.word	0x00000399
    1924:	.word	0x000003ad

00001928 <rb_dlinkFindDelete>:
    1928:	cmp	r0, #0
    192c:	beq	19a4 <rb_dlinkFindDelete+0x7c>
    1930:	mov	r1, r0
    1934:	ldr	r2, [pc, #144]	; 19cc <rb_dlinkFindDelete+0xa4>
    1938:	ldr	r2, [pc, r2]
    193c:	mov	r0, r2
    1940:	cmp	r2, #0
    1944:	bxeq	lr
    1948:	ldr	r3, [r0]
    194c:	ldr	r2, [r0, #8]
    1950:	cmp	r3, r1
    1954:	bne	193c <rb_dlinkFindDelete+0x14>
    1958:	ldr	ip, [pc, #112]	; 19d0 <rb_dlinkFindDelete+0xa8>
    195c:	add	ip, pc, ip
    1960:	add	r3, r2, #4
    1964:	cmp	r2, #0
    1968:	addeq	r3, ip, #4
    196c:	ldr	r2, [r0, #4]
    1970:	str	r2, [r3]
    1974:	ldmib	r0, {r2, r3}
    1978:	cmp	r2, #0
    197c:	mov	r1, ip
    1980:	addne	r1, r2, #8
    1984:	str	r3, [r1]
    1988:	mov	r1, #0
    198c:	str	r1, [r0, #4]
    1990:	str	r1, [r0, #8]
    1994:	ldr	r1, [ip, #8]
    1998:	sub	r1, r1, #1
    199c:	str	r1, [ip, #8]
    19a0:	bx	lr
    19a4:	push	{fp, lr}
    19a8:	mov	fp, sp
    19ac:	ldr	r0, [pc, #32]	; 19d4 <rb_dlinkFindDelete+0xac>
    19b0:	add	r0, pc, r0
    19b4:	ldr	r1, [pc, #28]	; 19d8 <rb_dlinkFindDelete+0xb0>
    19b8:	add	r1, pc, r1
    19bc:	ldr	r3, [pc, #24]	; 19dc <rb_dlinkFindDelete+0xb4>
    19c0:	add	r3, pc, r3
    19c4:	movw	r2, #259	; 0x103
    19c8:	bl	bf8 <__assert_fail@plt>
    19cc:	.word	0x00010804
    19d0:	.word	0x000107e0
    19d4:	.word	0x0000033e
    19d8:	.word	0x000002e9
    19dc:	.word	0x0000033b

000019e0 <safelist_channel_named>:
    19e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    19e4:	add	fp, sp, #24
    19e8:	mov	r8, r2
    19ec:	mov	r7, r1
    19f0:	mov	r6, r0
    19f4:	add	r9, r0, #88	; 0x58
    19f8:	ldr	r0, [pc, #224]	; 1ae0 <safelist_channel_named+0x100>
    19fc:	ldr	r0, [pc, r0]
    1a00:	add	r5, r0, #88	; 0x58
    1a04:	ldr	r1, [pc, #216]	; 1ae4 <safelist_channel_named+0x104>
    1a08:	add	r1, pc, r1
    1a0c:	mov	r0, r6
    1a10:	mov	r2, r5
    1a14:	mov	r3, r9
    1a18:	bl	ad8 <sendto_one@plt>
    1a1c:	mov	r0, r7
    1a20:	mov	r1, #44	; 0x2c
    1a24:	bl	b98 <strchr@plt>
    1a28:	cmp	r0, #0
    1a2c:	movne	r1, #0
    1a30:	strbne	r1, [r0]
    1a34:	ldrb	r0, [r7]
    1a38:	cmp	r0, #0
    1a3c:	beq	1aac <safelist_channel_named+0xcc>
    1a40:	mov	r0, r7
    1a44:	bl	b20 <find_channel@plt>
    1a48:	cmp	r0, #0
    1a4c:	beq	1aac <safelist_channel_named+0xcc>
    1a50:	mov	r4, r0
    1a54:	ldrb	r0, [r0, #12]
    1a58:	mov	r2, #1
    1a5c:	tst	r0, #2
    1a60:	beq	1a9c <safelist_channel_named+0xbc>
    1a64:	mov	r2, #0
    1a68:	cmp	r6, #0
    1a6c:	ldrne	r0, [r6, #24]
    1a70:	cmpne	r0, #0
    1a74:	beq	1a90 <safelist_channel_named+0xb0>
    1a78:	mov	r0, r4
    1a7c:	mov	r1, r6
    1a80:	bl	b44 <find_channel_membership@plt>
    1a84:	mov	r2, r0
    1a88:	cmp	r0, #0
    1a8c:	movwne	r2, #1
    1a90:	cmp	r8, #0
    1a94:	cmpeq	r2, #0
    1a98:	beq	1ac4 <safelist_channel_named+0xe4>
    1a9c:	mov	r0, r6
    1aa0:	mov	r1, r4
    1aa4:	bl	16d4 <list_one_channel>
    1aa8:	b	1ac4 <safelist_channel_named+0xe4>
    1aac:	ldr	r2, [pc, #52]	; 1ae8 <safelist_channel_named+0x108>
    1ab0:	add	r2, pc, r2
    1ab4:	mov	r0, r6
    1ab8:	movw	r1, #401	; 0x191
    1abc:	mov	r3, r7
    1ac0:	bl	b80 <sendto_one_numeric@plt>
    1ac4:	ldr	r1, [pc, #32]	; 1aec <safelist_channel_named+0x10c>
    1ac8:	add	r1, pc, r1
    1acc:	mov	r0, r6
    1ad0:	mov	r2, r5
    1ad4:	mov	r3, r9
    1ad8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    1adc:	b	ad8 <sendto_one@plt>
    1ae0:	.word	0x000106a0
    1ae4:	.word	0x000003b1
    1ae8:	.word	0x00000329
    1aec:	.word	0x000001c0

00001af0 <rb_malloc>:
    1af0:	push	{fp, lr}
    1af4:	mov	fp, sp
    1af8:	mov	r0, #1
    1afc:	mov	r1, #32
    1b00:	bl	a9c <calloc@plt>
    1b04:	cmp	r0, #0
    1b08:	popne	{fp, pc}
    1b0c:	bl	b08 <rb_outofmemory@plt>

00001b10 <safelist_client_instantiate>:
    1b10:	push	{r4, sl, fp, lr}
    1b14:	add	fp, sp, #8
    1b18:	mov	r4, r0
    1b1c:	ldr	r0, [r0, #432]	; 0x1b0
    1b20:	str	r1, [r0, #428]	; 0x1ac
    1b24:	add	r3, r4, #88	; 0x58
    1b28:	ldr	r0, [pc, #48]	; 1b60 <safelist_client_instantiate+0x50>
    1b2c:	ldr	r0, [pc, r0]
    1b30:	add	r2, r0, #88	; 0x58
    1b34:	ldr	r1, [pc, #40]	; 1b64 <safelist_client_instantiate+0x54>
    1b38:	add	r1, pc, r1
    1b3c:	mov	r0, r4
    1b40:	bl	ad8 <sendto_one@plt>
    1b44:	bl	b68 <rb_make_rb_dlink_node@plt>
    1b48:	mov	r1, r0
    1b4c:	mov	r0, r4
    1b50:	bl	1b68 <rb_dlinkAdd>
    1b54:	mov	r0, r4
    1b58:	pop	{r4, sl, fp, lr}
    1b5c:	b	1418 <safelist_iterate_client>
    1b60:	.word	0x00010570
    1b64:	.word	0x00000281

00001b68 <rb_dlinkAdd>:
    1b68:	push	{fp, lr}
    1b6c:	mov	fp, sp
    1b70:	cmp	r0, #0
    1b74:	beq	1bd8 <rb_dlinkAdd+0x70>
    1b78:	cmp	r1, #0
    1b7c:	beq	1bf8 <rb_dlinkAdd+0x90>
    1b80:	mov	r2, #0
    1b84:	stm	r1, {r0, r2}
    1b88:	ldr	r0, [pc, #136]	; 1c18 <rb_dlinkAdd+0xb0>
    1b8c:	ldr	r0, [pc, r0]
    1b90:	str	r0, [r1, #8]
    1b94:	cmp	r0, #0
    1b98:	beq	1ba8 <rb_dlinkAdd+0x40>
    1b9c:	add	r0, r0, #4
    1ba0:	str	r1, [r0]
    1ba4:	b	1bbc <rb_dlinkAdd+0x54>
    1ba8:	ldr	r0, [pc, #108]	; 1c1c <rb_dlinkAdd+0xb4>
    1bac:	add	r0, pc, r0
    1bb0:	ldr	r2, [r0, #4]!
    1bb4:	cmp	r2, #0
    1bb8:	streq	r1, [r0]
    1bbc:	ldr	r0, [pc, #92]	; 1c20 <rb_dlinkAdd+0xb8>
    1bc0:	add	r0, pc, r0
    1bc4:	str	r1, [r0]
    1bc8:	ldr	r1, [r0, #8]
    1bcc:	add	r1, r1, #1
    1bd0:	str	r1, [r0, #8]
    1bd4:	pop	{fp, pc}
    1bd8:	ldr	r0, [pc, #68]	; 1c24 <rb_dlinkAdd+0xbc>
    1bdc:	add	r0, pc, r0
    1be0:	ldr	r1, [pc, #64]	; 1c28 <rb_dlinkAdd+0xc0>
    1be4:	add	r1, pc, r1
    1be8:	ldr	r3, [pc, #60]	; 1c2c <rb_dlinkAdd+0xc4>
    1bec:	add	r3, pc, r3
    1bf0:	mov	r2, #143	; 0x8f
    1bf4:	bl	bf8 <__assert_fail@plt>
    1bf8:	ldr	r0, [pc, #48]	; 1c30 <rb_dlinkAdd+0xc8>
    1bfc:	add	r0, pc, r0
    1c00:	ldr	r1, [pc, #44]	; 1c34 <rb_dlinkAdd+0xcc>
    1c04:	add	r1, pc, r1
    1c08:	ldr	r3, [pc, #40]	; 1c38 <rb_dlinkAdd+0xd0>
    1c0c:	add	r3, pc, r3
    1c10:	mov	r2, #144	; 0x90
    1c14:	bl	bf8 <__assert_fail@plt>
    1c18:	.word	0x000105b0
    1c1c:	.word	0x00010590
    1c20:	.word	0x0001057c
    1c24:	.word	0x00000112
    1c28:	.word	0x000000bd
    1c2c:	.word	0x00000206
    1c30:	.word	0x00000231
    1c34:	.word	0x0000009d
    1c38:	.word	0x000001e6

Disassembly of section .fini:

00001c3c <_fini>:
    1c3c:	push	{r3, lr}
    1c40:	pop	{r3, pc}
