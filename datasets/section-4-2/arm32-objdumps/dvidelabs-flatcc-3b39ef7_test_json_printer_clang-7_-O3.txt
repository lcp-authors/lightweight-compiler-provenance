
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

0001285c <.init>:
   1285c:	push	{r3, lr}
   12860:	bl	129e4 <_start@@Base+0x3c>
   12864:	pop	{r3, pc}

Disassembly of section .plt:

00012868 <raise@plt-0x14>:
   12868:	push	{lr}		; (str lr, [sp, #-4]!)
   1286c:	ldr	lr, [pc, #4]	; 12878 <raise@plt-0x4>
   12870:	add	lr, pc, lr
   12874:	ldr	pc, [lr, #8]!
   12878:	andeq	r0, r2, r8, lsl #15

0001287c <raise@plt>:
   1287c:	add	ip, pc, #0, 12
   12880:	add	ip, ip, #32, 20	; 0x20000
   12884:	ldr	pc, [ip, #1928]!	; 0x788

00012888 <strcmp@plt>:
   12888:	add	ip, pc, #0, 12
   1288c:	add	ip, ip, #32, 20	; 0x20000
   12890:	ldr	pc, [ip, #1920]!	; 0x780

00012894 <fopen@plt>:
   12894:	add	ip, pc, #0, 12
   12898:	add	ip, ip, #32, 20	; 0x20000
   1289c:	ldr	pc, [ip, #1912]!	; 0x778

000128a0 <memmove@plt>:
   128a0:	add	ip, pc, #0, 12
   128a4:	add	ip, ip, #32, 20	; 0x20000
   128a8:	ldr	pc, [ip, #1904]!	; 0x770

000128ac <free@plt>:
   128ac:	add	ip, pc, #0, 12
   128b0:	add	ip, ip, #32, 20	; 0x20000
   128b4:	ldr	pc, [ip, #1896]!	; 0x768

000128b8 <memcpy@plt>:
   128b8:	add	ip, pc, #0, 12
   128bc:	add	ip, ip, #32, 20	; 0x20000
   128c0:	ldr	pc, [ip, #1888]!	; 0x760

000128c4 <ftell@plt>:
   128c4:	add	ip, pc, #0, 12
   128c8:	add	ip, ip, #32, 20	; 0x20000
   128cc:	ldr	pc, [ip, #1880]!	; 0x758

000128d0 <memcmp@plt>:
   128d0:	add	ip, pc, #0, 12
   128d4:	add	ip, ip, #32, 20	; 0x20000
   128d8:	ldr	pc, [ip, #1872]!	; 0x750

000128dc <rewind@plt>:
   128dc:	add	ip, pc, #0, 12
   128e0:	add	ip, ip, #32, 20	; 0x20000
   128e4:	ldr	pc, [ip, #1864]!	; 0x748

000128e8 <realloc@plt>:
   128e8:	add	ip, pc, #0, 12
   128ec:	add	ip, ip, #32, 20	; 0x20000
   128f0:	ldr	pc, [ip, #1856]!	; 0x740

000128f4 <fwrite@plt>:
   128f4:	add	ip, pc, #0, 12
   128f8:	add	ip, ip, #32, 20	; 0x20000
   128fc:	ldr	pc, [ip, #1848]!	; 0x738

00012900 <puts@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #32, 20	; 0x20000
   12908:	ldr	pc, [ip, #1840]!	; 0x730

0001290c <malloc@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #32, 20	; 0x20000
   12914:	ldr	pc, [ip, #1832]!	; 0x728

00012918 <__libc_start_main@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #32, 20	; 0x20000
   12920:	ldr	pc, [ip, #1824]!	; 0x720

00012924 <__gmon_start__@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #32, 20	; 0x20000
   1292c:	ldr	pc, [ip, #1816]!	; 0x718

00012930 <exit@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #32, 20	; 0x20000
   12938:	ldr	pc, [ip, #1808]!	; 0x710

0001293c <fprintf@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #32, 20	; 0x20000
   12944:	ldr	pc, [ip, #1800]!	; 0x708

00012948 <memset@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #32, 20	; 0x20000
   12950:	ldr	pc, [ip, #1792]!	; 0x700

00012954 <strncpy@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #32, 20	; 0x20000
   1295c:	ldr	pc, [ip, #1784]!	; 0x6f8

00012960 <fclose@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #32, 20	; 0x20000
   12968:	ldr	pc, [ip, #1776]!	; 0x6f0

0001296c <sprintf@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #32, 20	; 0x20000
   12974:	ldr	pc, [ip, #1768]!	; 0x6e8

00012978 <fread_unlocked@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #32, 20	; 0x20000
   12980:	ldr	pc, [ip, #1760]!	; 0x6e0

00012984 <fseek@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #32, 20	; 0x20000
   1298c:	ldr	pc, [ip, #1752]!	; 0x6d8

00012990 <abort@plt>:
   12990:	add	ip, pc, #0, 12
   12994:	add	ip, ip, #32, 20	; 0x20000
   12998:	ldr	pc, [ip, #1744]!	; 0x6d0

0001299c <__assert_fail@plt>:
   1299c:	add	ip, pc, #0, 12
   129a0:	add	ip, ip, #32, 20	; 0x20000
   129a4:	ldr	pc, [ip, #1736]!	; 0x6c8

Disassembly of section .text:

000129a8 <_start@@Base>:
   129a8:	mov	fp, #0
   129ac:	mov	lr, #0
   129b0:	pop	{r1}		; (ldr r1, [sp], #4)
   129b4:	mov	r2, sp
   129b8:	push	{r2}		; (str r2, [sp, #-4]!)
   129bc:	push	{r0}		; (str r0, [sp, #-4]!)
   129c0:	ldr	ip, [pc, #16]	; 129d8 <_start@@Base+0x30>
   129c4:	push	{ip}		; (str ip, [sp, #-4]!)
   129c8:	ldr	r0, [pc, #12]	; 129dc <_start@@Base+0x34>
   129cc:	ldr	r3, [pc, #12]	; 129e0 <_start@@Base+0x38>
   129d0:	bl	12918 <__libc_start_main@plt>
   129d4:	bl	12990 <abort@plt>
   129d8:	andeq	r0, r2, r8, ror #27
   129dc:	andeq	r2, r1, r8, asr lr
   129e0:	andeq	r0, r2, r8, lsl #27
   129e4:	ldr	r3, [pc, #20]	; 12a00 <_start@@Base+0x58>
   129e8:	ldr	r2, [pc, #20]	; 12a04 <_start@@Base+0x5c>
   129ec:	add	r3, pc, r3
   129f0:	ldr	r2, [r3, r2]
   129f4:	cmp	r2, #0
   129f8:	bxeq	lr
   129fc:	b	12924 <__gmon_start__@plt>
   12a00:	andeq	r0, r2, ip, lsl #12
   12a04:	andeq	r0, r0, r0, ror r0
   12a08:	ldr	r0, [pc, #24]	; 12a28 <_start@@Base+0x80>
   12a0c:	ldr	r3, [pc, #24]	; 12a2c <_start@@Base+0x84>
   12a10:	cmp	r3, r0
   12a14:	bxeq	lr
   12a18:	ldr	r3, [pc, #16]	; 12a30 <_start@@Base+0x88>
   12a1c:	cmp	r3, #0
   12a20:	bxeq	lr
   12a24:	bx	r3
   12a28:	andeq	r3, r3, r8, lsl #1
   12a2c:	andeq	r3, r3, r8, lsl #1
   12a30:	andeq	r0, r0, r0
   12a34:	ldr	r0, [pc, #36]	; 12a60 <_start@@Base+0xb8>
   12a38:	ldr	r1, [pc, #36]	; 12a64 <_start@@Base+0xbc>
   12a3c:	sub	r1, r1, r0
   12a40:	asr	r1, r1, #2
   12a44:	add	r1, r1, r1, lsr #31
   12a48:	asrs	r1, r1, #1
   12a4c:	bxeq	lr
   12a50:	ldr	r3, [pc, #16]	; 12a68 <_start@@Base+0xc0>
   12a54:	cmp	r3, #0
   12a58:	bxeq	lr
   12a5c:	bx	r3
   12a60:	andeq	r3, r3, r8, lsl #1
   12a64:	andeq	r3, r3, r8, lsl #1
   12a68:	andeq	r0, r0, r0
   12a6c:	push	{r4, lr}
   12a70:	ldr	r4, [pc, #24]	; 12a90 <_start@@Base+0xe8>
   12a74:	ldrb	r3, [r4]
   12a78:	cmp	r3, #0
   12a7c:	popne	{r4, pc}
   12a80:	bl	12a08 <_start@@Base+0x60>
   12a84:	mov	r3, #1
   12a88:	strb	r3, [r4]
   12a8c:	pop	{r4, pc}
   12a90:	muleq	r3, r0, r0
   12a94:	b	12a34 <_start@@Base+0x8c>

00012a98 <test_print@@Base>:
   12a98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a9c:	add	fp, sp, #24
   12aa0:	sub	sp, sp, #64	; 0x40
   12aa4:	movw	r9, #12412	; 0x307c
   12aa8:	movw	r1, #3638	; 0xe36
   12aac:	mov	r4, #0
   12ab0:	movt	r9, #3
   12ab4:	movt	r1, #2
   12ab8:	str	r4, [fp, #-28]	; 0xffffffe4
   12abc:	str	r4, [fp, #-32]	; 0xffffffe0
   12ac0:	str	r4, [fp, #-36]	; 0xffffffdc
   12ac4:	ldr	r0, [r9, #8]
   12ac8:	bl	12894 <fopen@plt>
   12acc:	cmp	r0, #0
   12ad0:	bne	12b00 <test_print@@Base+0x68>
   12ad4:	movw	r0, #12424	; 0x3088
   12ad8:	ldr	r2, [r9, #8]
   12adc:	movw	r1, #3641	; 0xe39
   12ae0:	movt	r0, #3
   12ae4:	movt	r1, #2
   12ae8:	ldr	r0, [r0]
   12aec:	bl	1293c <fprintf@plt>
   12af0:	mvn	r4, #0
   12af4:	mov	r0, r4
   12af8:	sub	sp, fp, #24
   12afc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12b00:	mov	r5, r0
   12b04:	add	r0, sp, #4
   12b08:	mov	r1, r5
   12b0c:	bl	206b4 <flatcc_json_printer_init@@Base>
   12b10:	movw	r0, #258	; 0x102
   12b14:	strh	r0, [sp, #29]
   12b18:	strb	r4, [sp, #31]
   12b1c:	ldr	r4, [r9]
   12b20:	cmp	r4, #0
   12b24:	beq	12b40 <test_print@@Base+0xa8>
   12b28:	movw	r1, #3673	; 0xe59
   12b2c:	mov	r0, r4
   12b30:	movt	r1, #2
   12b34:	bl	12888 <strcmp@plt>
   12b38:	cmp	r0, #0
   12b3c:	bne	12c28 <test_print@@Base+0x190>
   12b40:	movw	r8, #5013	; 0x1395
   12b44:	mov	r0, #288	; 0x120
   12b48:	movt	r8, #2
   12b4c:	str	r0, [fp, #-28]	; 0xffffffe4
   12b50:	ldr	r0, [r9, #4]
   12b54:	sub	r1, fp, #32
   12b58:	bl	12d54 <test_print@@Base+0x2bc>
   12b5c:	cmp	r0, #0
   12b60:	bne	12b90 <test_print@@Base+0xf8>
   12b64:	movw	r0, #12424	; 0x3088
   12b68:	ldr	r2, [r9, #4]
   12b6c:	movw	r1, #3717	; 0xe85
   12b70:	movt	r0, #3
   12b74:	movt	r1, #2
   12b78:	ldr	r0, [r0]
   12b7c:	bl	1293c <fprintf@plt>
   12b80:	mov	r6, #0
   12b84:	mvn	r4, #0
   12b88:	mov	r7, #0
   12b8c:	b	12cec <test_print@@Base+0x254>
   12b90:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12b94:	mov	r6, r0
   12b98:	movw	r0, #12000	; 0x2ee0
   12b9c:	movw	r3, #3760	; 0xeb0
   12ba0:	add	r4, sp, #4
   12ba4:	mov	r1, r8
   12ba8:	movt	r0, #1
   12bac:	movt	r3, #2
   12bb0:	str	r0, [sp]
   12bb4:	mov	r0, r4
   12bb8:	bl	1ff7c <flatcc_json_printer_table_as_root@@Base>
   12bbc:	ldr	r2, [sp, #48]	; 0x30
   12bc0:	mov	r0, r4
   12bc4:	mov	r1, #1
   12bc8:	blx	r2
   12bcc:	ldr	r0, [sp, #40]	; 0x28
   12bd0:	cmp	r0, #0
   12bd4:	beq	12be4 <test_print@@Base+0x14c>
   12bd8:	movw	r0, #5312	; 0x14c0
   12bdc:	movt	r0, #2
   12be0:	bl	12900 <puts@plt>
   12be4:	mov	r0, r5
   12be8:	bl	12960 <fclose@plt>
   12bec:	ldr	r0, [r9, #8]
   12bf0:	sub	r1, fp, #36	; 0x24
   12bf4:	bl	12d54 <test_print@@Base+0x2bc>
   12bf8:	cmp	r0, #0
   12bfc:	bne	12c70 <test_print@@Base+0x1d8>
   12c00:	movw	r0, #12424	; 0x3088
   12c04:	ldr	r2, [r9, #8]
   12c08:	movw	r1, #3765	; 0xeb5
   12c0c:	movt	r0, #3
   12c10:	movt	r1, #2
   12c14:	ldr	r0, [r0]
   12c18:	bl	1293c <fprintf@plt>
   12c1c:	mov	r7, #0
   12c20:	mvn	r4, #0
   12c24:	b	12cbc <test_print@@Base+0x224>
   12c28:	sub	r1, fp, #28
   12c2c:	mov	r0, r4
   12c30:	bl	12d54 <test_print@@Base+0x2bc>
   12c34:	mov	r8, r0
   12c38:	cmp	r0, #0
   12c3c:	bne	12b50 <test_print@@Base+0xb8>
   12c40:	movw	r0, #12424	; 0x3088
   12c44:	ldr	r2, [r9]
   12c48:	movw	r1, #3675	; 0xe5b
   12c4c:	movt	r0, #3
   12c50:	movt	r1, #2
   12c54:	ldr	r0, [r0]
   12c58:	bl	1293c <fprintf@plt>
   12c5c:	mvn	r4, #0
   12c60:	mov	r8, #0
   12c64:	mov	r6, #0
   12c68:	mov	r7, #0
   12c6c:	b	12cec <test_print@@Base+0x254>
   12c70:	mov	r7, r0
   12c74:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12c78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c7c:	cmp	r2, r0
   12c80:	bne	12cc4 <test_print@@Base+0x22c>
   12c84:	mov	r0, r7
   12c88:	mov	r1, r6
   12c8c:	bl	128d0 <memcmp@plt>
   12c90:	cmp	r0, #0
   12c94:	bne	12cc4 <test_print@@Base+0x22c>
   12c98:	movw	r0, #12424	; 0x3088
   12c9c:	mov	r1, #26
   12ca0:	mov	r2, #1
   12ca4:	movt	r0, #3
   12ca8:	ldr	r3, [r0]
   12cac:	movw	r0, #3857	; 0xf11
   12cb0:	movt	r0, #2
   12cb4:	bl	128f4 <fwrite@plt>
   12cb8:	mov	r4, #0
   12cbc:	mov	r5, #0
   12cc0:	b	12cec <test_print@@Base+0x254>
   12cc4:	movw	r0, #12424	; 0x3088
   12cc8:	mov	r1, #54	; 0x36
   12ccc:	mov	r2, #1
   12cd0:	movt	r0, #3
   12cd4:	ldr	r3, [r0]
   12cd8:	movw	r0, #3802	; 0xeda
   12cdc:	movt	r0, #2
   12ce0:	bl	128f4 <fwrite@plt>
   12ce4:	mov	r5, #0
   12ce8:	mvn	r4, #0
   12cec:	add	r0, sp, #4
   12cf0:	bl	20a7c <flatcc_json_printer_clear@@Base>
   12cf4:	cmp	r8, #0
   12cf8:	ldrne	r0, [r9]
   12cfc:	cmpne	r0, #0
   12d00:	bne	12d40 <test_print@@Base+0x2a8>
   12d04:	cmp	r6, #0
   12d08:	beq	12d14 <test_print@@Base+0x27c>
   12d0c:	mov	r0, r6
   12d10:	bl	128ac <free@plt>
   12d14:	cmp	r7, #0
   12d18:	beq	12d24 <test_print@@Base+0x28c>
   12d1c:	mov	r0, r7
   12d20:	bl	128ac <free@plt>
   12d24:	cmp	r5, #0
   12d28:	beq	12d34 <test_print@@Base+0x29c>
   12d2c:	mov	r0, r5
   12d30:	bl	12960 <fclose@plt>
   12d34:	mov	r0, r4
   12d38:	sub	sp, fp, #24
   12d3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12d40:	mov	r0, r8
   12d44:	bl	128ac <free@plt>
   12d48:	cmp	r6, #0
   12d4c:	bne	12d0c <test_print@@Base+0x274>
   12d50:	b	12d14 <test_print@@Base+0x27c>
   12d54:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d58:	add	fp, sp, #24
   12d5c:	sub	sp, sp, #8
   12d60:	add	r9, sp, #4
   12d64:	cmp	r1, #0
   12d68:	movne	r9, r1
   12d6c:	movw	r1, #4101	; 0x1005
   12d70:	movt	r1, #2
   12d74:	bl	12894 <fopen@plt>
   12d78:	cmp	r0, #0
   12d7c:	beq	12e34 <test_print@@Base+0x39c>
   12d80:	mov	r1, #0
   12d84:	mov	r2, #2
   12d88:	mov	r5, r0
   12d8c:	mov	r8, #0
   12d90:	bl	12984 <fseek@plt>
   12d94:	mov	r0, r5
   12d98:	bl	128c4 <ftell@plt>
   12d9c:	mov	r4, r0
   12da0:	cmp	r0, #10240	; 0x2800
   12da4:	str	r0, [r9]
   12da8:	bhi	12e1c <test_print@@Base+0x384>
   12dac:	mov	r0, r5
   12db0:	bl	128dc <rewind@plt>
   12db4:	cmp	r4, #0
   12db8:	mov	r0, r4
   12dbc:	movweq	r0, #1
   12dc0:	bl	1290c <malloc@plt>
   12dc4:	cmp	r0, #0
   12dc8:	beq	12e1c <test_print@@Base+0x384>
   12dcc:	mov	r7, r0
   12dd0:	mov	r1, #0
   12dd4:	mov	r6, r1
   12dd8:	add	r0, r7, r1
   12ddc:	sub	r2, r4, r1
   12de0:	mov	r1, #1
   12de4:	mov	r3, r5
   12de8:	bl	12978 <fread_unlocked@plt>
   12dec:	add	r1, r0, r6
   12df0:	cmp	r0, #0
   12df4:	bne	12dd4 <test_print@@Base+0x33c>
   12df8:	mov	r0, r5
   12dfc:	bl	12960 <fclose@plt>
   12e00:	cmp	r4, r6
   12e04:	bne	12e3c <test_print@@Base+0x3a4>
   12e08:	mov	r8, r7
   12e0c:	str	r4, [r9]
   12e10:	mov	r0, r8
   12e14:	sub	sp, fp, #24
   12e18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12e1c:	mov	r0, r5
   12e20:	bl	12960 <fclose@plt>
   12e24:	str	r4, [r9]
   12e28:	mov	r0, r8
   12e2c:	sub	sp, fp, #24
   12e30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12e34:	mov	r4, #0
   12e38:	b	12e44 <test_print@@Base+0x3ac>
   12e3c:	mov	r0, r7
   12e40:	bl	128ac <free@plt>
   12e44:	mov	r8, #0
   12e48:	str	r4, [r9]
   12e4c:	mov	r0, r8
   12e50:	sub	sp, fp, #24
   12e54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012e58 <main@@Base>:
   12e58:	push	{r4, r5, r6, sl, fp, lr}
   12e5c:	add	fp, sp, #16
   12e60:	movw	r6, #12424	; 0x3088
   12e64:	mov	r5, r0
   12e68:	movw	r0, #3884	; 0xf2c
   12e6c:	mov	r4, r1
   12e70:	mov	r1, #24
   12e74:	mov	r2, #1
   12e78:	movt	r6, #3
   12e7c:	movt	r0, #2
   12e80:	ldr	r3, [r6]
   12e84:	bl	128f4 <fwrite@plt>
   12e88:	cmp	r5, #1
   12e8c:	beq	12eb8 <main@@Base+0x60>
   12e90:	cmp	r5, #4
   12e94:	bne	12ec0 <main@@Base+0x68>
   12e98:	ldr	r0, [r4, #4]
   12e9c:	movw	r1, #12412	; 0x307c
   12ea0:	movt	r1, #3
   12ea4:	str	r0, [r1]
   12ea8:	ldr	r0, [r4, #8]
   12eac:	str	r0, [r1, #4]
   12eb0:	ldr	r0, [r4, #12]
   12eb4:	str	r0, [r1, #8]
   12eb8:	pop	{r4, r5, r6, sl, fp, lr}
   12ebc:	b	12a98 <test_print@@Base>
   12ec0:	ldr	r3, [r6]
   12ec4:	movw	r0, #3909	; 0xf45
   12ec8:	mov	r1, #191	; 0xbf
   12ecc:	mov	r2, #1
   12ed0:	movt	r0, #2
   12ed4:	bl	128f4 <fwrite@plt>
   12ed8:	mov	r0, #1
   12edc:	bl	12930 <exit@plt>
   12ee0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ee4:	add	fp, sp, #28
   12ee8:	sub	sp, sp, #20
   12eec:	mov	r5, r0
   12ef0:	movw	r0, #13292	; 0x33ec
   12ef4:	movw	r3, #4104	; 0x1008
   12ef8:	mov	r4, r1
   12efc:	mov	r1, #3
   12f00:	mov	r2, #0
   12f04:	mov	r8, #0
   12f08:	movt	r0, #1
   12f0c:	str	r1, [sp]
   12f10:	movt	r3, #2
   12f14:	mov	r1, r4
   12f18:	str	r0, [sp, #4]
   12f1c:	mov	r0, r5
   12f20:	bl	1fbc4 <flatcc_json_printer_struct_field@@Base>
   12f24:	movw	r3, #4108	; 0x100c
   12f28:	mov	r0, #150	; 0x96
   12f2c:	mov	r1, #4
   12f30:	mov	r2, #1
   12f34:	mov	r6, #4
   12f38:	str	r1, [sp]
   12f3c:	str	r0, [sp, #4]
   12f40:	movt	r3, #2
   12f44:	mov	r0, r5
   12f48:	mov	r1, r4
   12f4c:	bl	16bd8 <flatcc_json_printer_int16_field@@Base>
   12f50:	movw	r3, #4113	; 0x1011
   12f54:	mov	r0, #100	; 0x64
   12f58:	mov	r1, #2
   12f5c:	mov	r2, #2
   12f60:	str	r1, [sp]
   12f64:	str	r0, [sp, #4]
   12f68:	movt	r3, #2
   12f6c:	mov	r0, r5
   12f70:	mov	r1, r4
   12f74:	bl	16bd8 <flatcc_json_printer_int16_field@@Base>
   12f78:	movw	r3, #4116	; 0x1014
   12f7c:	mov	r0, r5
   12f80:	mov	r1, r4
   12f84:	mov	r2, #3
   12f88:	str	r6, [sp]
   12f8c:	movt	r3, #2
   12f90:	bl	16204 <flatcc_json_printer_string_field@@Base>
   12f94:	movw	r3, #4121	; 0x1019
   12f98:	mov	r0, #9
   12f9c:	mov	r1, r4
   12fa0:	mov	r2, #5
   12fa4:	mov	r7, #5
   12fa8:	str	r0, [sp]
   12fac:	movt	r3, #2
   12fb0:	mov	r0, r5
   12fb4:	bl	18cb8 <flatcc_json_printer_uint8_vector_field@@Base>
   12fb8:	movw	r0, #13544	; 0x34e8
   12fbc:	movw	r3, #4131	; 0x1023
   12fc0:	mov	r1, #8
   12fc4:	mov	r2, #6
   12fc8:	str	r7, [sp]
   12fcc:	mov	r7, #5
   12fd0:	movt	r0, #1
   12fd4:	str	r1, [sp, #4]
   12fd8:	movt	r3, #2
   12fdc:	mov	r1, r4
   12fe0:	str	r0, [sp, #8]
   12fe4:	mov	r0, r5
   12fe8:	bl	17568 <flatcc_json_printer_int8_enum_field@@Base>
   12fec:	movw	r0, #13888	; 0x3640
   12ff0:	movw	r1, #13772	; 0x35cc
   12ff4:	movw	r3, #4507	; 0x119b
   12ff8:	mov	r2, #8
   12ffc:	str	r6, [sp]
   13000:	movt	r0, #1
   13004:	movt	r1, #1
   13008:	movt	r3, #2
   1300c:	str	r1, [sp, #4]
   13010:	str	r0, [sp, #8]
   13014:	mov	r0, r5
   13018:	mov	r1, r4
   1301c:	bl	1f2d0 <flatcc_json_printer_union_field@@Base>
   13020:	movw	r0, #13976	; 0x3698
   13024:	movw	r3, #4137	; 0x1029
   13028:	mov	r1, r4
   1302c:	mov	r2, #9
   13030:	str	r7, [sp]
   13034:	mov	sl, #5
   13038:	str	r6, [sp, #4]
   1303c:	movt	r0, #1
   13040:	movt	r3, #2
   13044:	str	r0, [sp, #8]
   13048:	mov	r0, r5
   1304c:	bl	1df24 <flatcc_json_printer_struct_vector_field@@Base>
   13050:	movw	r3, #4143	; 0x102f
   13054:	mov	r7, #17
   13058:	mov	r0, r5
   1305c:	mov	r1, r4
   13060:	mov	r2, #10
   13064:	movt	r3, #2
   13068:	str	r7, [sp]
   1306c:	bl	1e4c0 <flatcc_json_printer_string_vector_field@@Base>
   13070:	movw	r9, #12000	; 0x2ee0
   13074:	movw	r3, #4161	; 0x1041
   13078:	mov	r0, r5
   1307c:	mov	r1, r4
   13080:	mov	r2, #11
   13084:	movt	r9, #1
   13088:	movt	r3, #2
   1308c:	stm	sp, {r7, r9}
   13090:	bl	1e878 <flatcc_json_printer_table_vector_field@@Base>
   13094:	movw	r3, #4179	; 0x1053
   13098:	mov	r0, r5
   1309c:	mov	r1, r4
   130a0:	mov	r2, #12
   130a4:	str	sl, [sp]
   130a8:	mov	sl, #5
   130ac:	str	r9, [sp, #4]
   130b0:	movt	r3, #2
   130b4:	bl	1f0e8 <flatcc_json_printer_table_field@@Base>
   130b8:	movw	r3, #4185	; 0x1059
   130bc:	mov	r0, #20
   130c0:	mov	r1, r4
   130c4:	mov	r2, #13
   130c8:	stm	sp, {r0, r8, r9}
   130cc:	movt	r3, #2
   130d0:	mov	r0, r5
   130d4:	bl	20420 <flatcc_json_printer_table_as_nested_root@@Base>
   130d8:	movw	r0, #14072	; 0x36f8
   130dc:	movw	r3, #4206	; 0x106e
   130e0:	mov	r1, #9
   130e4:	mov	r2, #14
   130e8:	movt	r0, #1
   130ec:	str	r1, [sp]
   130f0:	movt	r3, #2
   130f4:	mov	r1, r4
   130f8:	str	r0, [sp, #4]
   130fc:	mov	r0, r5
   13100:	bl	1f0e8 <flatcc_json_printer_table_field@@Base>
   13104:	movw	r3, #4216	; 0x1078
   13108:	mov	r0, #1
   1310c:	mov	r9, #8
   13110:	mov	r1, r4
   13114:	mov	r2, #15
   13118:	str	r0, [sp, #4]
   1311c:	movt	r3, #2
   13120:	mov	r0, r5
   13124:	str	r9, [sp]
   13128:	bl	16e88 <flatcc_json_printer_bool_field@@Base>
   1312c:	movw	r3, #4225	; 0x1081
   13130:	mov	r6, #16
   13134:	mov	r0, r5
   13138:	mov	r1, r4
   1313c:	mov	r2, #16
   13140:	movt	r3, #2
   13144:	stm	sp, {r6, r8}
   13148:	bl	16cb8 <flatcc_json_printer_int32_field@@Base>
   1314c:	movw	r3, #4242	; 0x1092
   13150:	mov	r0, r5
   13154:	mov	r1, r4
   13158:	mov	r2, #17
   1315c:	stm	sp, {r6, r8}
   13160:	movt	r3, #2
   13164:	bl	168b8 <flatcc_json_printer_uint32_field@@Base>
   13168:	movw	r3, #4259	; 0x10a3
   1316c:	mov	r0, r5
   13170:	mov	r1, r4
   13174:	mov	r2, #18
   13178:	str	r8, [sp, #8]
   1317c:	str	r8, [sp, #12]
   13180:	str	r6, [sp]
   13184:	movt	r3, #2
   13188:	bl	16d90 <flatcc_json_printer_int64_field@@Base>
   1318c:	movw	r3, #4276	; 0x10b4
   13190:	mov	r0, r5
   13194:	mov	r1, r4
   13198:	mov	r2, #19
   1319c:	str	r8, [sp, #8]
   131a0:	str	r8, [sp, #12]
   131a4:	str	r6, [sp]
   131a8:	movt	r3, #2
   131ac:	bl	16978 <flatcc_json_printer_uint64_field@@Base>
   131b0:	movw	r3, #4293	; 0x10c5
   131b4:	mov	r0, r5
   131b8:	mov	r1, r4
   131bc:	mov	r2, #20
   131c0:	stm	sp, {r7, r8}
   131c4:	movt	r3, #2
   131c8:	bl	16cb8 <flatcc_json_printer_int32_field@@Base>
   131cc:	movw	r3, #4311	; 0x10d7
   131d0:	mov	r0, r5
   131d4:	mov	r1, r4
   131d8:	mov	r2, #21
   131dc:	stm	sp, {r7, r8}
   131e0:	movt	r3, #2
   131e4:	bl	168b8 <flatcc_json_printer_uint32_field@@Base>
   131e8:	movw	r3, #4329	; 0x10e9
   131ec:	mov	r0, r5
   131f0:	mov	r1, r4
   131f4:	mov	r2, #22
   131f8:	str	r8, [sp, #8]
   131fc:	str	r8, [sp, #12]
   13200:	str	r7, [sp]
   13204:	movt	r3, #2
   13208:	bl	16d90 <flatcc_json_printer_int64_field@@Base>
   1320c:	movw	r3, #4347	; 0x10fb
   13210:	mov	r0, r5
   13214:	mov	r1, r4
   13218:	mov	r2, #23
   1321c:	str	r8, [sp, #8]
   13220:	str	r8, [sp, #12]
   13224:	str	r7, [sp]
   13228:	mov	r8, #23
   1322c:	movt	r3, #2
   13230:	bl	16978 <flatcc_json_printer_uint64_field@@Base>
   13234:	movw	r3, #4365	; 0x110d
   13238:	mov	r0, r5
   1323c:	mov	r1, r4
   13240:	mov	r2, #24
   13244:	str	r6, [sp]
   13248:	movt	r3, #2
   1324c:	bl	1ae08 <flatcc_json_printer_bool_vector_field@@Base>
   13250:	vldr	s0, [pc, #396]	; 133e4 <main@@Base+0x58c>
   13254:	movw	r3, #4382	; 0x111e
   13258:	mov	r0, r5
   1325c:	mov	r1, r4
   13260:	mov	r2, #25
   13264:	str	sl, [sp]
   13268:	movt	r3, #2
   1326c:	bl	16f7c <flatcc_json_printer_float_field@@Base>
   13270:	movw	r3, #4388	; 0x1124
   13274:	mov	r6, #6
   13278:	vmov.f32	s0, #8	; 0x40400000  3.0
   1327c:	mov	r0, r5
   13280:	mov	r1, r4
   13284:	mov	r2, #26
   13288:	movt	r3, #2
   1328c:	str	r6, [sp]
   13290:	bl	16f7c <flatcc_json_printer_float_field@@Base>
   13294:	vldr	s0, [pc, #332]	; 133e8 <main@@Base+0x590>
   13298:	movw	r3, #4395	; 0x112b
   1329c:	mov	r0, r5
   132a0:	mov	r1, r4
   132a4:	mov	r2, #27
   132a8:	str	r6, [sp]
   132ac:	movt	r3, #2
   132b0:	bl	16f7c <flatcc_json_printer_float_field@@Base>
   132b4:	movw	r3, #4402	; 0x1132
   132b8:	mov	r0, #18
   132bc:	mov	r1, r4
   132c0:	mov	r2, #28
   132c4:	str	r0, [sp]
   132c8:	movt	r3, #2
   132cc:	mov	r0, r5
   132d0:	bl	1e4c0 <flatcc_json_printer_string_vector_field@@Base>
   132d4:	movw	r0, #14204	; 0x377c
   132d8:	movw	r3, #4421	; 0x1145
   132dc:	stm	sp, {r8, r9}
   132e0:	mov	r1, r4
   132e4:	mov	r2, #29
   132e8:	movt	r0, #1
   132ec:	movt	r3, #2
   132f0:	str	r0, [sp, #8]
   132f4:	mov	r0, r5
   132f8:	bl	1df24 <flatcc_json_printer_struct_vector_field@@Base>
   132fc:	movw	r3, #4445	; 0x115d
   13300:	mov	r6, #4
   13304:	mov	r0, r5
   13308:	mov	r1, r4
   1330c:	mov	r2, #30
   13310:	movt	r3, #2
   13314:	str	r6, [sp]
   13318:	bl	18cb8 <flatcc_json_printer_uint8_vector_field@@Base>
   1331c:	movw	r0, #13976	; 0x3698
   13320:	movw	r3, #4450	; 0x1162
   13324:	mov	r1, r4
   13328:	mov	r2, #31
   1332c:	str	sl, [sp]
   13330:	str	r6, [sp, #4]
   13334:	movt	r0, #1
   13338:	movt	r3, #2
   1333c:	str	r0, [sp, #8]
   13340:	mov	r0, r5
   13344:	bl	1df24 <flatcc_json_printer_struct_vector_field@@Base>
   13348:	movw	r3, #4456	; 0x1168
   1334c:	mov	r0, #15
   13350:	mov	r1, r4
   13354:	mov	r2, #32
   13358:	str	r0, [sp]
   1335c:	movt	r3, #2
   13360:	mov	r0, r5
   13364:	bl	1aa00 <flatcc_json_printer_int64_vector_field@@Base>
   13368:	movw	r3, #4472	; 0x1178
   1336c:	mov	r0, r5
   13370:	mov	r1, r4
   13374:	mov	r2, #33	; 0x21
   13378:	str	r7, [sp]
   1337c:	movt	r3, #2
   13380:	bl	1b60c <flatcc_json_printer_double_vector_field@@Base>
   13384:	movw	r0, #14312	; 0x37e8
   13388:	movw	r3, #4490	; 0x118a
   1338c:	mov	r1, #21
   13390:	mov	r2, #34	; 0x22
   13394:	movt	r0, #1
   13398:	str	r1, [sp]
   1339c:	movt	r3, #2
   133a0:	mov	r1, r4
   133a4:	str	r0, [sp, #4]
   133a8:	mov	r0, r5
   133ac:	bl	1f0e8 <flatcc_json_printer_table_field@@Base>
   133b0:	movw	r0, #14316	; 0x37ec
   133b4:	movw	r3, #4512	; 0x11a0
   133b8:	mov	r1, #10
   133bc:	mov	r2, #35	; 0x23
   133c0:	movt	r0, #1
   133c4:	str	r1, [sp]
   133c8:	movt	r3, #2
   133cc:	mov	r1, r4
   133d0:	str	r0, [sp, #4]
   133d4:	mov	r0, r5
   133d8:	bl	1f0e8 <flatcc_json_printer_table_field@@Base>
   133dc:	sub	sp, fp, #28
   133e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133e4:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   133e8:	andeq	r0, r0, r0
   133ec:	push	{r4, r5, r6, sl, fp, lr}
   133f0:	add	fp, sp, #16
   133f4:	sub	sp, sp, #16
   133f8:	mov	r5, r0
   133fc:	movw	r0, #4448	; 0x1160
   13400:	mov	r4, r1
   13404:	mov	r6, #1
   13408:	mov	r1, #0
   1340c:	mov	r3, #0
   13410:	movt	r0, #2
   13414:	mov	r2, r4
   13418:	stm	sp, {r0, r6}
   1341c:	mov	r0, r5
   13420:	bl	18088 <flatcc_json_printer_float_struct_field@@Base>
   13424:	movw	r0, #4183	; 0x1057
   13428:	mov	r1, #1
   1342c:	mov	r2, r4
   13430:	mov	r3, #4
   13434:	movt	r0, #2
   13438:	stm	sp, {r0, r6}
   1343c:	mov	r0, r5
   13440:	bl	18088 <flatcc_json_printer_float_struct_field@@Base>
   13444:	movw	r0, #4523	; 0x11ab
   13448:	mov	r1, #2
   1344c:	mov	r2, r4
   13450:	mov	r3, #8
   13454:	movt	r0, #2
   13458:	stm	sp, {r0, r6}
   1345c:	mov	r0, r5
   13460:	bl	18088 <flatcc_json_printer_float_struct_field@@Base>
   13464:	movw	r0, #4525	; 0x11ad
   13468:	mov	r6, #5
   1346c:	mov	r1, #3
   13470:	mov	r2, r4
   13474:	mov	r3, #16
   13478:	movt	r0, #2
   1347c:	stm	sp, {r0, r6}
   13480:	mov	r0, r5
   13484:	bl	180ec <flatcc_json_printer_double_struct_field@@Base>
   13488:	movw	r0, #13544	; 0x34e8
   1348c:	movw	r1, #4531	; 0x11b3
   13490:	mov	r2, r4
   13494:	mov	r3, #24
   13498:	movt	r1, #2
   1349c:	movt	r0, #1
   134a0:	stm	sp, {r1, r6}
   134a4:	str	r0, [sp, #8]
   134a8:	mov	r0, r5
   134ac:	mov	r1, #4
   134b0:	bl	183f0 <flatcc_json_printer_int8_enum_struct_field@@Base>
   134b4:	movw	r0, #13976	; 0x3698
   134b8:	movw	r1, #4537	; 0x11b9
   134bc:	mov	r2, r4
   134c0:	mov	r3, #26
   134c4:	movt	r1, #2
   134c8:	movt	r0, #1
   134cc:	stm	sp, {r1, r6}
   134d0:	str	r0, [sp, #8]
   134d4:	mov	r0, r5
   134d8:	mov	r1, #5
   134dc:	bl	1fa78 <flatcc_json_printer_embedded_struct_field@@Base>
   134e0:	sub	sp, fp, #16
   134e4:	pop	{r4, r5, r6, sl, fp, pc}
   134e8:	push	{r4, r5, r6, r7, fp, lr}
   134ec:	add	fp, sp, #16
   134f0:	mov	r4, r0
   134f4:	mvn	r0, #0
   134f8:	uxtb	r7, r1
   134fc:	uxtab	r0, r0, r1
   13500:	ands	r5, r0, r7
   13504:	movwne	r5, #1
   13508:	cmp	r1, #0
   1350c:	beq	13550 <main@@Base+0x6f8>
   13510:	ands	r0, r1, #244	; 0xf4
   13514:	bne	13550 <main@@Base+0x6f8>
   13518:	mov	r0, r4
   1351c:	mov	r1, r5
   13520:	bl	16104 <flatcc_json_printer_delimit_enum_flags@@Base>
   13524:	mov	r6, #0
   13528:	tst	r7, #1
   1352c:	bne	1355c <main@@Base+0x704>
   13530:	tst	r7, #2
   13534:	bne	13580 <main@@Base+0x728>
   13538:	tst	r7, #8
   1353c:	bne	135a4 <main@@Base+0x74c>
   13540:	mov	r0, r4
   13544:	mov	r1, r5
   13548:	pop	{r4, r5, r6, r7, fp, lr}
   1354c:	b	16104 <flatcc_json_printer_delimit_enum_flags@@Base>
   13550:	mov	r0, r4
   13554:	pop	{r4, r5, r6, r7, fp, lr}
   13558:	b	15e14 <flatcc_json_printer_int8@@Base>
   1355c:	movw	r2, #4543	; 0x11bf
   13560:	mov	r0, r4
   13564:	mov	r1, #0
   13568:	mov	r3, #3
   1356c:	movt	r2, #2
   13570:	bl	16138 <flatcc_json_printer_enum_flag@@Base>
   13574:	mov	r6, #1
   13578:	tst	r7, #2
   1357c:	beq	13538 <main@@Base+0x6e0>
   13580:	movw	r2, #4547	; 0x11c3
   13584:	mov	r0, r4
   13588:	mov	r1, r6
   1358c:	mov	r3, #5
   13590:	movt	r2, #2
   13594:	bl	16138 <flatcc_json_printer_enum_flag@@Base>
   13598:	add	r6, r6, #1
   1359c:	tst	r7, #8
   135a0:	beq	13540 <main@@Base+0x6e8>
   135a4:	movw	r2, #4553	; 0x11c9
   135a8:	mov	r0, r4
   135ac:	mov	r1, r6
   135b0:	mov	r3, #4
   135b4:	movt	r2, #2
   135b8:	bl	16138 <flatcc_json_printer_enum_flag@@Base>
   135bc:	mov	r0, r4
   135c0:	mov	r1, r5
   135c4:	pop	{r4, r5, r6, r7, fp, lr}
   135c8:	b	16104 <flatcc_json_printer_delimit_enum_flags@@Base>
   135cc:	sub	r1, r1, #1
   135d0:	cmp	r1, #3
   135d4:	bhi	13600 <main@@Base+0x7a8>
   135d8:	add	r2, pc, #0
   135dc:	ldr	pc, [r2, r1, lsl #2]
   135e0:	strdeq	r3, [r1], -r0
   135e4:	andeq	r3, r1, r0, lsl r6
   135e8:	andeq	r3, r1, r0, lsr #12
   135ec:	andeq	r3, r1, r0, lsr r6
   135f0:	movw	r1, #4558	; 0x11ce
   135f4:	mov	r2, #7
   135f8:	movt	r1, #2
   135fc:	b	16018 <flatcc_json_printer_enum@@Base>
   13600:	movw	r1, #4603	; 0x11fb
   13604:	mov	r2, #4
   13608:	movt	r1, #2
   1360c:	b	16018 <flatcc_json_printer_enum@@Base>
   13610:	movw	r1, #4566	; 0x11d6
   13614:	mov	r2, #23
   13618:	movt	r1, #2
   1361c:	b	16018 <flatcc_json_printer_enum@@Base>
   13620:	movw	r1, #4590	; 0x11ee
   13624:	mov	r2, #8
   13628:	movt	r1, #2
   1362c:	b	16018 <flatcc_json_printer_enum@@Base>
   13630:	movw	r1, #4599	; 0x11f7
   13634:	mov	r2, #3
   13638:	movt	r1, #2
   1363c:	b	16018 <flatcc_json_printer_enum@@Base>
   13640:	ldrb	r2, [r1, #8]
   13644:	sub	r2, r2, #1
   13648:	cmp	r2, #3
   1364c:	bxhi	lr
   13650:	add	r3, pc, #0
   13654:	ldr	pc, [r3, r2, lsl #2]
   13658:	andeq	r3, r1, r8, ror #12
   1365c:	andeq	r3, r1, ip, lsl #13
   13660:	andeq	r3, r1, r4, ror r6
   13664:	andeq	r3, r1, r0, lsl #13
   13668:	movw	r2, #12000	; 0x2ee0
   1366c:	movt	r2, #1
   13670:	b	1f7c4 <flatcc_json_printer_union_table@@Base>
   13674:	movw	r2, #14612	; 0x3914
   13678:	movt	r2, #1
   1367c:	b	1f7c4 <flatcc_json_printer_union_table@@Base>
   13680:	movw	r2, #14616	; 0x3918
   13684:	movt	r2, #1
   13688:	b	1f7c4 <flatcc_json_printer_union_table@@Base>
   1368c:	movw	r2, #14448	; 0x3870
   13690:	movt	r2, #1
   13694:	b	1f7c4 <flatcc_json_printer_union_table@@Base>
   13698:	push	{r4, r5, r6, sl, fp, lr}
   1369c:	add	fp, sp, #16
   136a0:	sub	sp, sp, #8
   136a4:	mov	r5, r0
   136a8:	movw	r0, #4309	; 0x10d5
   136ac:	mov	r4, r1
   136b0:	mov	r6, #1
   136b4:	mov	r1, #0
   136b8:	mov	r3, #0
   136bc:	movt	r0, #2
   136c0:	mov	r2, r4
   136c4:	stm	sp, {r0, r6}
   136c8:	mov	r0, r5
   136cc:	bl	17e8c <flatcc_json_printer_int16_struct_field@@Base>
   136d0:	movw	r0, #4729	; 0x1279
   136d4:	mov	r1, #1
   136d8:	mov	r2, r4
   136dc:	mov	r3, #2
   136e0:	movt	r0, #2
   136e4:	stm	sp, {r0, r6}
   136e8:	mov	r0, r5
   136ec:	bl	17d74 <flatcc_json_printer_int8_struct_field@@Base>
   136f0:	sub	sp, fp, #16
   136f4:	pop	{r4, r5, r6, sl, fp, pc}
   136f8:	push	{r4, r5, r6, sl, fp, lr}
   136fc:	add	fp, sp, #16
   13700:	sub	sp, sp, #16
   13704:	movw	r3, #4976	; 0x1370
   13708:	mov	r5, r0
   1370c:	mov	r0, #2
   13710:	mov	r2, #0
   13714:	mov	r4, r1
   13718:	mov	r6, #0
   1371c:	str	r0, [sp]
   13720:	movt	r3, #2
   13724:	mov	r0, r5
   13728:	bl	16204 <flatcc_json_printer_string_field@@Base>
   1372c:	movw	r3, #4979	; 0x1373
   13730:	mov	r0, #3
   13734:	mov	r1, r4
   13738:	mov	r2, #1
   1373c:	str	r6, [sp, #8]
   13740:	str	r6, [sp, #12]
   13744:	str	r0, [sp]
   13748:	movt	r3, #2
   1374c:	mov	r0, r5
   13750:	bl	16d90 <flatcc_json_printer_int64_field@@Base>
   13754:	movw	r3, #4983	; 0x1377
   13758:	mov	r0, #5
   1375c:	mov	r1, r4
   13760:	mov	r2, #2
   13764:	stm	sp, {r0, r6}
   13768:	movt	r3, #2
   1376c:	mov	r0, r5
   13770:	bl	167f8 <flatcc_json_printer_uint16_field@@Base>
   13774:	sub	sp, fp, #16
   13778:	pop	{r4, r5, r6, sl, fp, pc}
   1377c:	push	{r4, r5, fp, lr}
   13780:	add	fp, sp, #8
   13784:	sub	sp, sp, #8
   13788:	mov	r4, r1
   1378c:	movw	r1, #4976	; 0x1370
   13790:	mov	r5, r0
   13794:	mov	r0, #2
   13798:	mov	r3, #0
   1379c:	movt	r1, #2
   137a0:	str	r0, [sp, #4]
   137a4:	mov	r0, r5
   137a8:	mov	r2, r4
   137ac:	str	r1, [sp]
   137b0:	mov	r1, #0
   137b4:	bl	17cbc <flatcc_json_printer_uint32_struct_field@@Base>
   137b8:	movw	r1, #4989	; 0x137d
   137bc:	mov	r0, #8
   137c0:	mov	r2, r4
   137c4:	mov	r3, #4
   137c8:	movt	r1, #2
   137cc:	str	r0, [sp, #4]
   137d0:	mov	r0, r5
   137d4:	str	r1, [sp]
   137d8:	mov	r1, #1
   137dc:	bl	17cbc <flatcc_json_printer_uint32_struct_field@@Base>
   137e0:	sub	sp, fp, #8
   137e4:	pop	{r4, r5, fp, pc}
   137e8:	bx	lr
   137ec:	push	{r4, r5, r6, sl, fp, lr}
   137f0:	add	fp, sp, #16
   137f4:	sub	sp, sp, #8
   137f8:	movw	r3, #5001	; 0x1389
   137fc:	mov	r5, r0
   13800:	mov	r6, #0
   13804:	mov	r0, #4
   13808:	mov	r2, #0
   1380c:	mov	r4, r1
   13810:	stm	sp, {r0, r6}
   13814:	movt	r3, #2
   13818:	mov	r0, r5
   1381c:	bl	16494 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13820:	movw	r3, #4998	; 0x1386
   13824:	mov	r0, #1
   13828:	mov	r1, #7
   1382c:	mov	r2, #1
   13830:	str	r1, [sp]
   13834:	str	r0, [sp, #4]
   13838:	movt	r3, #2
   1383c:	mov	r0, r5
   13840:	mov	r1, r4
   13844:	bl	16494 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13848:	movw	r3, #5006	; 0x138e
   1384c:	mov	r0, #6
   13850:	mov	r1, r4
   13854:	mov	r2, #2
   13858:	stm	sp, {r0, r6}
   1385c:	movt	r3, #2
   13860:	mov	r0, r5
   13864:	bl	16494 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13868:	sub	sp, fp, #16
   1386c:	pop	{r4, r5, r6, sl, fp, pc}
   13870:	push	{r4, r5, r6, r7, fp, lr}
   13874:	add	fp, sp, #16
   13878:	sub	sp, sp, #16
   1387c:	movw	r7, #13544	; 0x34e8
   13880:	movw	r3, #4131	; 0x1023
   13884:	mov	r5, r0
   13888:	mov	r6, #2
   1388c:	mov	r0, #5
   13890:	mov	r2, #0
   13894:	mov	r4, r1
   13898:	movt	r7, #1
   1389c:	movt	r3, #2
   138a0:	stm	sp, {r0, r6, r7}
   138a4:	mov	r0, r5
   138a8:	bl	17568 <flatcc_json_printer_int8_enum_field@@Base>
   138ac:	movw	r3, #4608	; 0x1200
   138b0:	mov	r0, #6
   138b4:	mov	r1, r4
   138b8:	mov	r2, #1
   138bc:	stm	sp, {r0, r6, r7}
   138c0:	movt	r3, #2
   138c4:	mov	r0, r5
   138c8:	bl	17568 <flatcc_json_printer_int8_enum_field@@Base>
   138cc:	movw	r3, #4615	; 0x1207
   138d0:	mov	r0, r5
   138d4:	mov	r1, r4
   138d8:	mov	r2, #2
   138dc:	str	r6, [sp]
   138e0:	str	r6, [sp, #4]
   138e4:	movt	r3, #2
   138e8:	bl	166a0 <flatcc_json_printer_uint8_field@@Base>
   138ec:	movw	r3, #4618	; 0x120a
   138f0:	mov	r0, #3
   138f4:	mov	r1, r4
   138f8:	mov	r2, #3
   138fc:	stm	sp, {r0, r6}
   13900:	movt	r3, #2
   13904:	mov	r0, r5
   13908:	bl	166a0 <flatcc_json_printer_uint8_field@@Base>
   1390c:	sub	sp, fp, #16
   13910:	pop	{r4, r5, r6, r7, fp, pc}
   13914:	bx	lr
   13918:	push	{r4, r5, fp, lr}
   1391c:	add	fp, sp, #8
   13920:	sub	sp, sp, #16
   13924:	mov	r5, r0
   13928:	movw	r0, #14788	; 0x39c4
   1392c:	movw	r3, #4622	; 0x120e
   13930:	mov	r4, r1
   13934:	mov	r1, #6
   13938:	mov	r2, #0
   1393c:	movt	r0, #1
   13940:	str	r1, [sp]
   13944:	movt	r3, #2
   13948:	mov	r1, r4
   1394c:	str	r0, [sp, #4]
   13950:	mov	r0, r5
   13954:	bl	1f0e8 <flatcc_json_printer_table_field@@Base>
   13958:	movw	r0, #14944	; 0x3a60
   1395c:	movw	r3, #4629	; 0x1215
   13960:	mov	r1, #5
   13964:	mov	r2, #1
   13968:	movt	r0, #1
   1396c:	str	r1, [sp]
   13970:	movt	r3, #2
   13974:	mov	r1, r4
   13978:	str	r0, [sp, #4]
   1397c:	mov	r0, r5
   13980:	bl	1f0e8 <flatcc_json_printer_table_field@@Base>
   13984:	movw	r0, #13888	; 0x3640
   13988:	movw	r1, #13772	; 0x35cc
   1398c:	movw	r3, #4635	; 0x121b
   13990:	mov	r2, #7
   13994:	movt	r0, #1
   13998:	movt	r1, #1
   1399c:	str	r2, [sp]
   139a0:	movt	r3, #2
   139a4:	mov	r2, #3
   139a8:	str	r1, [sp, #4]
   139ac:	str	r0, [sp, #8]
   139b0:	mov	r0, r5
   139b4:	mov	r1, r4
   139b8:	bl	1ed10 <flatcc_json_printer_union_vector_field@@Base>
   139bc:	sub	sp, fp, #8
   139c0:	pop	{r4, r5, fp, pc}
   139c4:	push	{r4, r5, r6, sl, fp, lr}
   139c8:	add	fp, sp, #16
   139cc:	sub	sp, sp, #8
   139d0:	mov	r5, r0
   139d4:	movw	r0, #15172	; 0x3b44
   139d8:	movw	r3, #4643	; 0x1223
   139dc:	mov	r4, r1
   139e0:	mov	r1, #21
   139e4:	mov	r2, #0
   139e8:	movt	r0, #1
   139ec:	str	r1, [sp]
   139f0:	movt	r3, #2
   139f4:	mov	r1, r4
   139f8:	str	r0, [sp, #4]
   139fc:	mov	r0, r5
   13a00:	bl	1f0e8 <flatcc_json_printer_table_field@@Base>
   13a04:	movw	r0, #15496	; 0x3c88
   13a08:	movw	r3, #4665	; 0x1239
   13a0c:	mov	r6, #22
   13a10:	mov	r1, r4
   13a14:	mov	r2, #1
   13a18:	movt	r0, #1
   13a1c:	movt	r3, #2
   13a20:	str	r6, [sp]
   13a24:	str	r0, [sp, #4]
   13a28:	mov	r0, r5
   13a2c:	bl	1f0e8 <flatcc_json_printer_table_field@@Base>
   13a30:	movw	r0, #15596	; 0x3cec
   13a34:	movw	r3, #4688	; 0x1250
   13a38:	mov	r1, r4
   13a3c:	mov	r2, #2
   13a40:	str	r6, [sp]
   13a44:	movt	r0, #1
   13a48:	movt	r3, #2
   13a4c:	str	r0, [sp, #4]
   13a50:	mov	r0, r5
   13a54:	bl	1f0e8 <flatcc_json_printer_table_field@@Base>
   13a58:	sub	sp, fp, #16
   13a5c:	pop	{r4, r5, r6, sl, fp, pc}
   13a60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a64:	add	fp, sp, #24
   13a68:	sub	sp, sp, #16
   13a6c:	movw	r7, #15696	; 0x3d50
   13a70:	movw	r6, #15876	; 0x3e04
   13a74:	movw	r3, #4838	; 0x12e6
   13a78:	mov	r5, r0
   13a7c:	mov	r0, #14
   13a80:	mov	r2, #1
   13a84:	mov	r4, r1
   13a88:	movt	r7, #1
   13a8c:	movt	r6, #1
   13a90:	movt	r3, #2
   13a94:	stm	sp, {r0, r7}
   13a98:	mov	r0, r5
   13a9c:	str	r6, [sp, #8]
   13aa0:	bl	1f2d0 <flatcc_json_printer_union_field@@Base>
   13aa4:	movw	r3, #4853	; 0x12f5
   13aa8:	mov	r8, #10
   13aac:	mov	r0, r5
   13ab0:	mov	r1, r4
   13ab4:	mov	r2, #3
   13ab8:	str	r7, [sp, #4]
   13abc:	str	r6, [sp, #8]
   13ac0:	movt	r3, #2
   13ac4:	str	r8, [sp]
   13ac8:	bl	1f2d0 <flatcc_json_printer_union_field@@Base>
   13acc:	movw	r3, #4864	; 0x1300
   13ad0:	mov	r0, #9
   13ad4:	mov	r1, r4
   13ad8:	mov	r2, #5
   13adc:	mov	r9, #5
   13ae0:	stm	sp, {r0, r7}
   13ae4:	movt	r3, #2
   13ae8:	mov	r0, r5
   13aec:	str	r6, [sp, #8]
   13af0:	bl	1f2d0 <flatcc_json_printer_union_field@@Base>
   13af4:	movw	r3, #4874	; 0x130a
   13af8:	mov	r0, r5
   13afc:	mov	r1, r4
   13b00:	mov	r2, #7
   13b04:	str	r9, [sp]
   13b08:	str	r7, [sp, #4]
   13b0c:	str	r6, [sp, #8]
   13b10:	movt	r3, #2
   13b14:	bl	1f2d0 <flatcc_json_printer_union_field@@Base>
   13b18:	movw	r3, #4880	; 0x1310
   13b1c:	mov	r0, r5
   13b20:	mov	r1, r4
   13b24:	mov	r2, #9
   13b28:	str	r8, [sp]
   13b2c:	str	r7, [sp, #4]
   13b30:	str	r6, [sp, #8]
   13b34:	movt	r3, #2
   13b38:	bl	1ed10 <flatcc_json_printer_union_vector_field@@Base>
   13b3c:	sub	sp, fp, #24
   13b40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13b44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13b48:	add	fp, sp, #24
   13b4c:	sub	sp, sp, #16
   13b50:	movw	r3, #4711	; 0x1267
   13b54:	mov	r9, #4
   13b58:	mov	r2, #0
   13b5c:	mov	r4, r1
   13b60:	mov	r5, r0
   13b64:	mov	r6, #0
   13b68:	movt	r3, #2
   13b6c:	str	r9, [sp]
   13b70:	bl	16204 <flatcc_json_printer_string_field@@Base>
   13b74:	movw	r3, #4716	; 0x126c
   13b78:	mov	r8, #9
   13b7c:	mov	r0, r5
   13b80:	mov	r1, r4
   13b84:	mov	r2, #1
   13b88:	str	r6, [sp, #4]
   13b8c:	movt	r3, #2
   13b90:	str	r8, [sp]
   13b94:	bl	168b8 <flatcc_json_printer_uint32_field@@Base>
   13b98:	movw	r3, #4726	; 0x1276
   13b9c:	mov	r0, r5
   13ba0:	mov	r1, r4
   13ba4:	mov	r2, #2
   13ba8:	str	r9, [sp]
   13bac:	movt	r3, #2
   13bb0:	bl	16204 <flatcc_json_printer_string_field@@Base>
   13bb4:	movw	r3, #4731	; 0x127b
   13bb8:	mov	r7, #8
   13bbc:	mov	r0, r5
   13bc0:	mov	r1, r4
   13bc4:	mov	r2, #3
   13bc8:	str	r6, [sp, #8]
   13bcc:	str	r6, [sp, #12]
   13bd0:	movt	r3, #2
   13bd4:	str	r7, [sp]
   13bd8:	bl	16d90 <flatcc_json_printer_int64_field@@Base>
   13bdc:	movw	r3, #4740	; 0x1284
   13be0:	mov	r0, r5
   13be4:	mov	r1, r4
   13be8:	mov	r2, #4
   13bec:	str	r9, [sp]
   13bf0:	movt	r3, #2
   13bf4:	bl	16204 <flatcc_json_printer_string_field@@Base>
   13bf8:	movw	r3, #4745	; 0x1289
   13bfc:	mov	r0, r5
   13c00:	mov	r1, r4
   13c04:	mov	r2, #5
   13c08:	str	r6, [sp, #8]
   13c0c:	str	r6, [sp, #12]
   13c10:	str	r7, [sp]
   13c14:	movt	r3, #2
   13c18:	bl	16d90 <flatcc_json_printer_int64_field@@Base>
   13c1c:	movw	r3, #4754	; 0x1292
   13c20:	mov	r0, r5
   13c24:	mov	r1, r4
   13c28:	mov	r2, #6
   13c2c:	str	r8, [sp]
   13c30:	str	r6, [sp, #4]
   13c34:	movt	r3, #2
   13c38:	bl	168b8 <flatcc_json_printer_uint32_field@@Base>
   13c3c:	movw	r3, #4764	; 0x129c
   13c40:	mov	r0, r5
   13c44:	mov	r1, r4
   13c48:	mov	r2, #7
   13c4c:	str	r6, [sp, #8]
   13c50:	str	r6, [sp, #12]
   13c54:	str	r7, [sp]
   13c58:	movt	r3, #2
   13c5c:	bl	16d90 <flatcc_json_printer_int64_field@@Base>
   13c60:	movw	r3, #4773	; 0x12a5
   13c64:	mov	r0, r5
   13c68:	mov	r1, r4
   13c6c:	mov	r2, #8
   13c70:	str	r8, [sp]
   13c74:	str	r6, [sp, #4]
   13c78:	movt	r3, #2
   13c7c:	bl	168b8 <flatcc_json_printer_uint32_field@@Base>
   13c80:	sub	sp, fp, #24
   13c84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13c88:	push	{r4, r5, r6, sl, fp, lr}
   13c8c:	add	fp, sp, #16
   13c90:	sub	sp, sp, #16
   13c94:	movw	r3, #4783	; 0x12af
   13c98:	mov	r5, r0
   13c9c:	mov	r0, #15
   13ca0:	mov	r6, #0
   13ca4:	mov	r2, #0
   13ca8:	mov	r4, r1
   13cac:	str	r0, [sp]
   13cb0:	movt	r3, #2
   13cb4:	mov	r0, r5
   13cb8:	str	r6, [sp, #8]
   13cbc:	str	r6, [sp, #12]
   13cc0:	bl	16d90 <flatcc_json_printer_int64_field@@Base>
   13cc4:	movw	r3, #4799	; 0x12bf
   13cc8:	mov	r0, #16
   13ccc:	mov	r1, r4
   13cd0:	mov	r2, #1
   13cd4:	stm	sp, {r0, r6}
   13cd8:	movt	r3, #2
   13cdc:	mov	r0, r5
   13ce0:	bl	168b8 <flatcc_json_printer_uint32_field@@Base>
   13ce4:	sub	sp, fp, #16
   13ce8:	pop	{r4, r5, r6, sl, fp, pc}
   13cec:	push	{r4, r5, r6, sl, fp, lr}
   13cf0:	add	fp, sp, #16
   13cf4:	sub	sp, sp, #16
   13cf8:	movw	r3, #4783	; 0x12af
   13cfc:	mov	r5, r0
   13d00:	mov	r0, #15
   13d04:	mov	r6, #0
   13d08:	mov	r2, #0
   13d0c:	mov	r4, r1
   13d10:	str	r0, [sp]
   13d14:	movt	r3, #2
   13d18:	mov	r0, r5
   13d1c:	str	r6, [sp, #8]
   13d20:	str	r6, [sp, #12]
   13d24:	bl	16d90 <flatcc_json_printer_int64_field@@Base>
   13d28:	movw	r3, #4816	; 0x12d0
   13d2c:	mov	r0, #21
   13d30:	mov	r1, r4
   13d34:	mov	r2, #1
   13d38:	stm	sp, {r0, r6}
   13d3c:	movt	r3, #2
   13d40:	mov	r0, r5
   13d44:	bl	168b8 <flatcc_json_printer_uint32_field@@Base>
   13d48:	sub	sp, fp, #16
   13d4c:	pop	{r4, r5, r6, sl, fp, pc}
   13d50:	sub	r2, r1, #2
   13d54:	cmp	r2, #9
   13d58:	bhi	13d9c <main@@Base+0xf44>
   13d5c:	add	r1, pc, #0
   13d60:	ldr	pc, [r1, r2, lsl #2]
   13d64:	andeq	r3, r1, ip, lsl #27
   13d68:			; <UNDEFINED> instruction: 0x00013db4
   13d6c:			; <UNDEFINED> instruction: 0x00013db4
   13d70:			; <UNDEFINED> instruction: 0x00013db4
   13d74:			; <UNDEFINED> instruction: 0x00013db4
   13d78:			; <UNDEFINED> instruction: 0x00013db4
   13d7c:	andeq	r3, r1, r4, asr #27
   13d80:	ldrdeq	r3, [r1], -r4
   13d84:	andeq	r3, r1, r4, ror #27
   13d88:	strdeq	r3, [r1], -r4
   13d8c:	movw	r1, #4891	; 0x131b
   13d90:	mov	r2, #5
   13d94:	movt	r1, #2
   13d98:	b	16018 <flatcc_json_printer_enum@@Base>
   13d9c:	cmp	r1, #255	; 0xff
   13da0:	bne	13db4 <main@@Base+0xf5c>
   13da4:	movw	r1, #4926	; 0x133e
   13da8:	mov	r2, #6
   13dac:	movt	r1, #2
   13db0:	b	16018 <flatcc_json_printer_enum@@Base>
   13db4:	movw	r1, #4603	; 0x11fb
   13db8:	mov	r2, #4
   13dbc:	movt	r1, #2
   13dc0:	b	16018 <flatcc_json_printer_enum@@Base>
   13dc4:	movw	r1, #4897	; 0x1321
   13dc8:	mov	r2, #8
   13dcc:	movt	r1, #2
   13dd0:	b	16018 <flatcc_json_printer_enum@@Base>
   13dd4:	movw	r1, #4906	; 0x132a
   13dd8:	mov	r2, #5
   13ddc:	movt	r1, #2
   13de0:	b	16018 <flatcc_json_printer_enum@@Base>
   13de4:	movw	r1, #4912	; 0x1330
   13de8:	mov	r2, #7
   13dec:	movt	r1, #2
   13df0:	b	16018 <flatcc_json_printer_enum@@Base>
   13df4:	movw	r1, #4920	; 0x1338
   13df8:	mov	r2, #5
   13dfc:	movt	r1, #2
   13e00:	b	16018 <flatcc_json_printer_enum@@Base>
   13e04:	ldrb	r3, [r1, #8]
   13e08:	sub	r2, r3, #2
   13e0c:	cmp	r2, #9
   13e10:	bhi	13e50 <main@@Base+0xff8>
   13e14:	add	r3, pc, #0
   13e18:	ldr	pc, [r3, r2, lsl #2]
   13e1c:	andeq	r3, r1, ip, asr lr
   13e20:	andeq	r3, r1, r4, ror lr
   13e24:	andeq	r3, r1, r4, ror lr
   13e28:	andeq	r3, r1, r4, ror lr
   13e2c:	andeq	r3, r1, r4, ror lr
   13e30:	andeq	r3, r1, r4, ror lr
   13e34:	andeq	r3, r1, r8, ror #28
   13e38:	andeq	r3, r1, r4, asr #28
   13e3c:	andeq	r3, r1, r4, asr #28
   13e40:	andeq	r3, r1, r8, asr lr
   13e44:	movw	r2, #16100	; 0x3ee4
   13e48:	movt	r2, #1
   13e4c:	b	1f944 <flatcc_json_printer_union_struct@@Base>
   13e50:	cmp	r3, #255	; 0xff
   13e54:	bxne	lr
   13e58:	b	1fa64 <flatcc_json_printer_union_string@@Base>
   13e5c:	movw	r2, #15992	; 0x3e78
   13e60:	movt	r2, #1
   13e64:	b	1f7c4 <flatcc_json_printer_union_table@@Base>
   13e68:	movw	r2, #16044	; 0x3eac
   13e6c:	movt	r2, #1
   13e70:	b	1f944 <flatcc_json_printer_union_struct@@Base>
   13e74:	bx	lr
   13e78:	push	{fp, lr}
   13e7c:	mov	fp, sp
   13e80:	sub	sp, sp, #8
   13e84:	mov	r3, #19
   13e88:	mov	r2, #0
   13e8c:	str	r3, [sp]
   13e90:	movw	r3, #4933	; 0x1345
   13e94:	str	r2, [sp, #4]
   13e98:	mov	r2, #0
   13e9c:	movt	r3, #2
   13ea0:	bl	16cb8 <flatcc_json_printer_int32_field@@Base>
   13ea4:	mov	sp, fp
   13ea8:	pop	{fp, pc}
   13eac:	push	{fp, lr}
   13eb0:	mov	fp, sp
   13eb4:	sub	sp, sp, #8
   13eb8:	movw	r3, #4953	; 0x1359
   13ebc:	mov	r2, r1
   13ec0:	mov	r1, #11
   13ec4:	movt	r3, #2
   13ec8:	str	r1, [sp, #4]
   13ecc:	mov	r1, #0
   13ed0:	str	r3, [sp]
   13ed4:	mov	r3, #0
   13ed8:	bl	17c60 <flatcc_json_printer_uint16_struct_field@@Base>
   13edc:	mov	sp, fp
   13ee0:	pop	{fp, pc}
   13ee4:	push	{fp, lr}
   13ee8:	mov	fp, sp
   13eec:	sub	sp, sp, #8
   13ef0:	movw	r3, #4965	; 0x1365
   13ef4:	mov	r2, r1
   13ef8:	mov	r1, #10
   13efc:	movt	r3, #2
   13f00:	str	r1, [sp, #4]
   13f04:	mov	r1, #0
   13f08:	str	r3, [sp]
   13f0c:	mov	r3, #0
   13f10:	bl	17f00 <flatcc_json_printer_int32_struct_field@@Base>
   13f14:	mov	sp, fp
   13f18:	pop	{fp, pc}
   13f1c:	andeq	r0, r0, r0

00013f20 <flatcc_json_printer_error_string@@Base>:
   13f20:	cmp	r0, #3
   13f24:	movwhi	r0, #5381	; 0x1505
   13f28:	movthi	r0, #2
   13f2c:	bxhi	lr
   13f30:	movw	r1, #8308	; 0x2074
   13f34:	movt	r1, #2
   13f38:	ldr	r0, [r1, r0, lsl #2]
   13f3c:	bx	lr

00013f40 <flatcc_json_printer_fmt_float@@Base>:
   13f40:	vcvt.f64.f32	d0, s0
   13f44:	b	13f48 <flatcc_json_printer_fmt_float@@Base+0x8>
   13f48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f4c:	add	fp, sp, #28
   13f50:	sub	sp, sp, #84	; 0x54
   13f54:	cmp	r0, #0
   13f58:	beq	14d18 <flatcc_json_printer_fmt_float@@Base+0xdd8>
   13f5c:	mov	ip, r0
   13f60:	vmov	r3, r2, d0
   13f64:	mov	r0, #-2147483648	; 0x80000000
   13f68:	mov	r6, #0
   13f6c:	add	r1, r0, #266338304	; 0xfe00000
   13f70:	lsl	r7, r2, #1
   13f74:	subs	r6, r6, r3, lsl #1
   13f78:	add	r1, r1, #1879048192	; 0x70000000
   13f7c:	orr	r7, r7, r3, lsr #31
   13f80:	sbcs	r1, r1, r7
   13f84:	bcs	13fa0 <flatcc_json_printer_fmt_float@@Base+0x60>
   13f88:	movw	r1, #5954	; 0x1742
   13f8c:	mov	r0, ip
   13f90:	movt	r1, #2
   13f94:	sub	sp, fp, #28
   13f98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f9c:	b	1296c <sprintf@plt>
   13fa0:	cmn	r2, #1
   13fa4:	ble	13fb0 <flatcc_json_printer_fmt_float@@Base+0x70>
   13fa8:	mov	r5, ip
   13fac:	b	13fc4 <flatcc_json_printer_fmt_float@@Base+0x84>
   13fb0:	mov	r1, #45	; 0x2d
   13fb4:	mov	r5, ip
   13fb8:	vneg.f64	d0, d0
   13fbc:	eor	r2, r2, r0
   13fc0:	strb	r1, [r5], #1
   13fc4:	movw	r0, #0
   13fc8:	movt	r0, #32752	; 0x7ff0
   13fcc:	eor	r1, r2, r0
   13fd0:	orrs	r1, r3, r1
   13fd4:	beq	13ff4 <flatcc_json_printer_fmt_float@@Base+0xb4>
   13fd8:	orrs	r1, r3, r2
   13fdc:	bne	1400c <flatcc_json_printer_fmt_float@@Base+0xcc>
   13fe0:	mov	r0, #48	; 0x30
   13fe4:	strh	r0, [r5], #1
   13fe8:	sub	r0, r5, ip
   13fec:	sub	sp, fp, #28
   13ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ff4:	movw	r0, #28265	; 0x6e69
   13ff8:	movt	r0, #102	; 0x66
   13ffc:	str	r0, [r5], #3
   14000:	sub	r0, r5, ip
   14004:	sub	sp, fp, #28
   14008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1400c:	vmov	sl, r9, d0
   14010:	ands	r1, r9, r0
   14014:	bfc	r9, #20, #12
   14018:	str	r1, [fp, #-40]	; 0xffffffd8
   1401c:	beq	14038 <flatcc_json_printer_fmt_float@@Base+0xf8>
   14020:	movw	r0, #64461	; 0xfbcd
   14024:	orr	r6, r9, #1048576	; 0x100000
   14028:	movt	r0, #65535	; 0xffff
   1402c:	add	r4, r0, r1, lsr #20
   14030:	mov	r0, #0
   14034:	b	14050 <flatcc_json_printer_fmt_float@@Base+0x110>
   14038:	orrs	r0, sl, r9
   1403c:	beq	14d78 <flatcc_json_printer_fmt_float@@Base+0xe38>
   14040:	movw	r4, #64462	; 0xfbce
   14044:	mov	r0, #0
   14048:	mov	r6, r9
   1404c:	movt	r4, #65535	; 0xffff
   14050:	mov	r7, r4
   14054:	mov	r3, sl
   14058:	mov	r2, r6
   1405c:	lsl	r1, r2, #10
   14060:	sub	r7, r7, #10
   14064:	orr	r2, r1, r3, lsr #22
   14068:	lsl	r3, r3, #10
   1406c:	cmp	r2, #4194304	; 0x400000
   14070:	bcc	1405c <flatcc_json_printer_fmt_float@@Base+0x11c>
   14074:	cmp	r2, #0
   14078:	str	r5, [fp, #-36]	; 0xffffffdc
   1407c:	blt	140a8 <flatcc_json_printer_fmt_float@@Base+0x168>
   14080:	mvn	r5, #0
   14084:	lsl	r1, r2, #1
   14088:	sub	r7, r7, #1
   1408c:	orr	r2, r1, r3, lsr #31
   14090:	lsl	r1, r3, #1
   14094:	subs	r3, r5, r3, lsl #1
   14098:	sbcs	r3, r5, r2
   1409c:	mov	r3, r1
   140a0:	blt	14084 <flatcc_json_printer_fmt_float@@Base+0x144>
   140a4:	b	140b0 <flatcc_json_printer_fmt_float@@Base+0x170>
   140a8:	mov	r1, r3
   140ac:	mvn	r5, #0
   140b0:	mov	r0, #1
   140b4:	sub	r8, r4, #1
   140b8:	str	r6, [fp, #-44]	; 0xffffffd4
   140bc:	str	r4, [fp, #-32]	; 0xffffffe0
   140c0:	orr	r3, r0, sl, lsl #1
   140c4:	lsl	r0, r6, #1
   140c8:	orr	lr, r0, sl, lsr #31
   140cc:	mov	r0, #0
   140d0:	cmp	r0, lr, lsr #22
   140d4:	bne	14114 <flatcc_json_printer_fmt_float@@Base+0x1d4>
   140d8:	mov	r0, #0
   140dc:	mov	r6, lr
   140e0:	mov	r4, r8
   140e4:	str	r0, [fp, #-48]	; 0xffffffd0
   140e8:	lsl	r0, r6, #10
   140ec:	sub	r4, r4, #10
   140f0:	orr	r6, r0, r3, lsr #22
   140f4:	lsl	r3, r3, #10
   140f8:	cmp	r6, #4194304	; 0x400000
   140fc:	bcc	140e8 <flatcc_json_printer_fmt_float@@Base+0x1a8>
   14100:	subs	r0, r5, r3
   14104:	str	ip, [sp, #24]
   14108:	sbcs	r0, r5, r6
   1410c:	blt	14134 <flatcc_json_printer_fmt_float@@Base+0x1f4>
   14110:	b	14158 <flatcc_json_printer_fmt_float@@Base+0x218>
   14114:	mov	r0, #0
   14118:	mov	r4, r8
   1411c:	mov	r6, lr
   14120:	str	r0, [fp, #-48]	; 0xffffffd0
   14124:	subs	r0, r5, r3
   14128:	str	ip, [sp, #24]
   1412c:	sbcs	r0, r5, r6
   14130:	bge	14158 <flatcc_json_printer_fmt_float@@Base+0x218>
   14134:	lsl	r0, r6, #1
   14138:	lsl	ip, r3, #1
   1413c:	sub	r4, r4, #1
   14140:	orr	r6, r0, r3, lsr #31
   14144:	subs	r0, r5, r3, lsl #1
   14148:	mov	r3, ip
   1414c:	sbcs	r0, r5, r6
   14150:	blt	14134 <flatcc_json_printer_fmt_float@@Base+0x1f4>
   14154:	b	1415c <flatcc_json_printer_fmt_float@@Base+0x21c>
   14158:	mov	ip, r3
   1415c:	vcmpe.f64	d0, #0.0
   14160:	vmrs	APSR_nzcv, fpscr
   14164:	ble	14d58 <flatcc_json_printer_fmt_float@@Base+0xe18>
   14168:	vldr	d16, [pc, #672]	; 14410 <flatcc_json_printer_fmt_float@@Base+0x4d0>
   1416c:	vcmpe.f64	d0, d16
   14170:	vmrs	APSR_nzcv, fpscr
   14174:	bhi	14d58 <flatcc_json_printer_fmt_float@@Base+0xe18>
   14178:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1417c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14180:	orrs	r3, sl, r9
   14184:	vldr	d16, [pc, #652]	; 14418 <flatcc_json_printer_fmt_float@@Base+0x4d8>
   14188:	movwne	r3, #1
   1418c:	clz	r5, r5
   14190:	lsl	r0, r0, #2
   14194:	lsr	r5, r5, #5
   14198:	orrs	r3, r3, r5
   1419c:	mvn	r5, #60	; 0x3c
   141a0:	sub	r5, r5, r7
   141a4:	orreq	lr, r0, sl, lsr #30
   141a8:	lsl	r0, sl, #2
   141ac:	lslne	r0, sl, #1
   141b0:	vmov	s2, r5
   141b4:	subs	r9, r0, #1
   141b8:	vcvt.f64.s32	d17, s2
   141bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   141c0:	sbc	lr, lr, #0
   141c4:	cmp	r3, #0
   141c8:	vmul.f64	d16, d17, d16
   141cc:	vcvt.s32.f64	s2, d16
   141d0:	vcmpe.f64	d16, #0.0
   141d4:	subeq	r8, r0, #2
   141d8:	sub	r3, r8, r4
   141dc:	rsb	r0, r3, #32
   141e0:	lsl	sl, r9, r3
   141e4:	lsr	r0, r9, r0
   141e8:	orr	r5, r0, lr, lsl r3
   141ec:	sub	r0, r3, #32
   141f0:	cmp	r0, #0
   141f4:	lslge	r5, r9, r0
   141f8:	movwge	sl, #0
   141fc:	vmrs	APSR_nzcv, fpscr
   14200:	str	r5, [fp, #-32]	; 0xffffffe0
   14204:	vmov	r5, s2
   14208:	bmi	14220 <flatcc_json_printer_fmt_float@@Base+0x2e0>
   1420c:	vcvt.f64.s32	d17, s2
   14210:	vsub.f64	d16, d16, d17
   14214:	vcmp.f64	d16, #0.0
   14218:	vmrs	APSR_nzcv, fpscr
   1421c:	addne	r5, r5, #1
   14220:	movw	r0, #347	; 0x15b
   14224:	bic	r1, r1, #1
   14228:	add	r0, r5, r0
   1422c:	asr	r5, r0, #31
   14230:	add	r0, r0, r5, lsr #29
   14234:	mvn	r5, #15
   14238:	and	r0, r5, r0, lsl #1
   1423c:	movw	r5, #6856	; 0x1ac8
   14240:	movt	r5, #2
   14244:	add	r0, r5, r0
   14248:	ldrd	r8, [r0, #16]
   1424c:	str	r0, [sp, #28]
   14250:	umull	r0, r5, r9, ip
   14254:	str	r0, [fp, #-40]	; 0xffffffd8
   14258:	umull	r0, lr, r8, r6
   1425c:	umaal	lr, r5, r9, r6
   14260:	umull	r6, r3, r8, ip
   14264:	ldr	r6, [fp, #-40]	; 0xffffffd8
   14268:	adds	r0, r0, r3
   1426c:	mov	r3, #0
   14270:	adc	r3, r3, #0
   14274:	adds	r0, r0, r6
   14278:	adc	r3, r3, #0
   1427c:	adds	r0, r0, #-2147483648	; 0x80000000
   14280:	adc	r0, r3, #0
   14284:	adds	r0, lr, r0
   14288:	adc	r3, r5, #0
   1428c:	adds	r0, r0, #1
   14290:	str	r0, [sp, #36]	; 0x24
   14294:	adc	ip, r3, #0
   14298:	umull	r0, r3, r9, sl
   1429c:	str	r0, [fp, #-40]	; 0xffffffd8
   142a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   142a4:	umull	lr, r5, r8, r0
   142a8:	umaal	r5, r3, r9, r0
   142ac:	umull	r0, r6, r8, sl
   142b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   142b4:	adds	sl, lr, r6
   142b8:	mov	r6, #0
   142bc:	mov	lr, ip
   142c0:	adc	r6, r6, #0
   142c4:	adds	r0, sl, r0
   142c8:	adc	r6, r6, #0
   142cc:	adds	r0, r0, #-2147483648	; 0x80000000
   142d0:	adc	r0, r6, #0
   142d4:	adds	r0, r5, r0
   142d8:	adc	r3, r3, #0
   142dc:	subs	ip, r0, #1
   142e0:	umull	r0, r6, r8, r2
   142e4:	sbc	sl, r3, #0
   142e8:	umull	r3, r5, r9, r1
   142ec:	umaal	r6, r5, r9, r2
   142f0:	umull	r1, r2, r8, r1
   142f4:	ldr	r8, [sp, #36]	; 0x24
   142f8:	mov	r1, #0
   142fc:	adds	r0, r0, r2
   14300:	bic	r2, r3, #1
   14304:	str	r1, [sp, #40]	; 0x28
   14308:	mov	r1, #0
   1430c:	adc	r1, r1, #0
   14310:	adds	r0, r0, r2
   14314:	adc	r1, r1, #0
   14318:	adds	r0, r0, #-2147483648	; 0x80000000
   1431c:	adc	r0, r1, #0
   14320:	adds	r0, r6, r0
   14324:	str	r0, [sp, #12]
   14328:	adc	r0, r5, #0
   1432c:	str	r0, [sp, #16]
   14330:	subs	r0, r8, ip
   14334:	str	r0, [sp, #48]	; 0x30
   14338:	sbcs	r0, lr, sl
   1433c:	str	r0, [fp, #-44]	; 0xffffffd4
   14340:	bcc	14d38 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   14344:	ldr	r0, [sp, #28]
   14348:	movw	sl, #8248	; 0x2038
   1434c:	movt	sl, #2
   14350:	ldrsh	r0, [r0, #24]
   14354:	add	r0, r0, #64	; 0x40
   14358:	add	r1, r0, r4
   1435c:	add	r6, r0, r7
   14360:	movw	r7, #1233	; 0x4d1
   14364:	str	r1, [sp, #8]
   14368:	mvn	r1, #31
   1436c:	rsb	r3, r6, #0
   14370:	add	r2, r6, #32
   14374:	str	r6, [sp, #4]
   14378:	sub	r4, r1, r6
   1437c:	movw	r1, #14609	; 0x3911
   14380:	lsr	r0, r8, r3
   14384:	movt	r1, #1
   14388:	orr	r0, r0, lr, lsl r2
   1438c:	cmp	r4, #0
   14390:	mla	r5, r6, r7, r1
   14394:	mov	r1, #1
   14398:	lsrge	r0, lr, r4
   1439c:	add	r7, r1, r5, asr #12
   143a0:	lsr	r2, r1, r2
   143a4:	ldr	r6, [sl, r7, lsl #2]
   143a8:	cmp	r6, r0
   143ac:	asrhi	r7, r5, #12
   143b0:	cmp	r4, #0
   143b4:	lslge	r2, r1, r4
   143b8:	str	r2, [sp, #44]	; 0x2c
   143bc:	str	r3, [fp, #-40]	; 0xffffffd8
   143c0:	lsl	r3, r1, r3
   143c4:	movwge	r3, #0
   143c8:	subs	r1, r3, #1
   143cc:	str	r3, [sp, #32]
   143d0:	str	lr, [sp, #20]
   143d4:	sbc	r2, r2, #0
   143d8:	and	r3, r8, r1
   143dc:	cmp	r7, #0
   143e0:	str	r1, [fp, #-48]	; 0xffffffd0
   143e4:	and	r9, lr, r2
   143e8:	str	r2, [fp, #-52]	; 0xffffffcc
   143ec:	ble	144a4 <flatcc_json_printer_fmt_float@@Base+0x564>
   143f0:	ldr	r1, [sl, r7, lsl #2]
   143f4:	movw	ip, #52429	; 0xcccd
   143f8:	sub	r7, r7, #1
   143fc:	mov	r4, #0
   14400:	mov	r8, r9
   14404:	movt	ip, #52428	; 0xcccc
   14408:	str	r7, [fp, #-32]	; 0xffffffe0
   1440c:	b	14438 <flatcc_json_printer_fmt_float@@Base+0x4f8>
   14410:			; <UNDEFINED> instruction: 0xffffffff
   14414:	svcvc	0x00efffff
   14418:			; <UNDEFINED> instruction: 0x509f79fe
   1441c:	svccc	0x00d34413
   14420:	umull	r1, r2, r1, ip
   14424:	mov	r4, lr
   14428:	sub	r7, r7, #1
   1442c:	add	r4, lr, #1
   14430:	lsr	r1, r2, #3
   14434:	str	r7, [fp, #-32]	; 0xffffffe0
   14438:	udiv	r2, r0, r1
   1443c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14440:	mov	lr, r4
   14444:	ldr	r7, [sp, #48]	; 0x30
   14448:	add	r6, r2, #48	; 0x30
   1444c:	mls	r0, r2, r1, r0
   14450:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14454:	strb	r6, [r5, r4]
   14458:	sub	r4, r2, #32
   1445c:	rsb	sl, r2, #32
   14460:	lsl	r2, r0, r2
   14464:	cmp	r4, #0
   14468:	lsr	r5, r0, sl
   1446c:	movwge	r2, #0
   14470:	lslge	r5, r0, r4
   14474:	adds	r2, r2, r3
   14478:	adc	r5, r5, r8
   1447c:	subs	r7, r2, r7
   14480:	ldr	r7, [fp, #-44]	; 0xffffffd4
   14484:	sbcs	r7, r5, r7
   14488:	bcc	146b4 <flatcc_json_printer_fmt_float@@Base+0x774>
   1448c:	ldr	r7, [fp, #-32]	; 0xffffffe0
   14490:	add	r2, r7, #1
   14494:	cmp	r2, #2
   14498:	bge	14420 <flatcc_json_printer_fmt_float@@Base+0x4e0>
   1449c:	add	r0, lr, #1
   144a0:	str	r0, [sp, #40]	; 0x28
   144a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   144a8:	mov	r4, r9
   144ac:	mov	r1, #0
   144b0:	mov	r9, #1
   144b4:	rsb	r2, r0, #32
   144b8:	str	r2, [sp, #56]	; 0x38
   144bc:	sub	r2, r0, #32
   144c0:	str	r2, [sp, #52]	; 0x34
   144c4:	ldr	lr, [sp, #40]	; 0x28
   144c8:	ldr	sl, [fp, #-44]	; 0xffffffd4
   144cc:	ldr	r6, [sp, #48]	; 0x30
   144d0:	mov	ip, r1
   144d4:	mov	r1, #10
   144d8:	str	r7, [fp, #-32]	; 0xffffffe0
   144dc:	mov	r2, r9
   144e0:	umull	r7, r1, r3, r1
   144e4:	add	r3, r4, r4, lsl #2
   144e8:	add	r8, ip, ip, lsl #2
   144ec:	lsr	r5, r7, r0
   144f0:	ldr	r0, [sp, #56]	; 0x38
   144f4:	add	r3, r1, r3, lsl #1
   144f8:	orr	r1, r5, r3, lsl r0
   144fc:	ldr	r0, [sp, #52]	; 0x34
   14500:	cmp	r0, #0
   14504:	lsrge	r1, r3, r0
   14508:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1450c:	add	r5, r1, #48	; 0x30
   14510:	strb	r5, [r0, lr]
   14514:	mov	r0, #10
   14518:	add	lr, lr, #1
   1451c:	umull	r9, r1, r9, r0
   14520:	umull	r6, r4, r6, r0
   14524:	add	r0, sl, sl, lsl #2
   14528:	add	sl, r4, r0, lsl #1
   1452c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14530:	add	r1, r1, r8, lsl #1
   14534:	and	r4, r3, r0
   14538:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1453c:	and	r3, r7, r0
   14540:	ldr	r7, [fp, #-32]	; 0xffffffe0
   14544:	subs	r0, r3, r6
   14548:	sbcs	r0, r4, sl
   1454c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14550:	sub	r7, r7, #1
   14554:	bcs	144d0 <flatcc_json_printer_fmt_float@@Base+0x590>
   14558:	str	r4, [sp]
   1455c:	str	r8, [sp, #52]	; 0x34
   14560:	str	r2, [sp, #56]	; 0x38
   14564:	str	ip, [fp, #-52]	; 0xffffffcc
   14568:	str	lr, [sp, #40]	; 0x28
   1456c:	ldr	r0, [sp, #8]
   14570:	ldr	r2, [sp, #4]
   14574:	ldr	ip, [sp, #20]
   14578:	ldr	lr, [sp, #36]	; 0x24
   1457c:	ldr	r4, [sp, #12]
   14580:	cmp	r0, r2
   14584:	ldr	r2, [sp, #16]
   14588:	bne	14d38 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   1458c:	subs	r0, lr, r4
   14590:	sbcs	r0, ip, r2
   14594:	bcc	14d38 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   14598:	subs	r0, lr, r4
   1459c:	sbc	r2, ip, r2
   145a0:	umull	ip, r4, r9, r0
   145a4:	mla	r2, r9, r2, r4
   145a8:	mla	r0, r1, r0, r2
   145ac:	adds	r2, ip, r9
   145b0:	str	r2, [sp, #36]	; 0x24
   145b4:	adc	r2, r0, r1
   145b8:	subs	lr, ip, r9
   145bc:	mov	ip, #0
   145c0:	str	r2, [sp, #20]
   145c4:	sbc	r9, r0, r1
   145c8:	subs	r0, r6, r3
   145cc:	ldr	r4, [sp]
   145d0:	str	sl, [fp, #-44]	; 0xffffffd4
   145d4:	ldr	r2, [sp, #32]
   145d8:	sbc	r1, sl, r4
   145dc:	subs	r0, r0, r2
   145e0:	ldr	r0, [sp, #44]	; 0x2c
   145e4:	str	r7, [fp, #-32]	; 0xffffffe0
   145e8:	str	r6, [sp, #48]	; 0x30
   145ec:	sbcs	r0, r1, r0
   145f0:	movwcc	ip, #1
   145f4:	cmp	ip, #0
   145f8:	bne	146ac <flatcc_json_printer_fmt_float@@Base+0x76c>
   145fc:	subs	r0, r3, lr
   14600:	str	lr, [fp, #-40]	; 0xffffffd8
   14604:	sbcs	r0, r4, r9
   14608:	bcs	146ac <flatcc_json_printer_fmt_float@@Base+0x76c>
   1460c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14610:	ldr	r1, [sp, #40]	; 0x28
   14614:	add	r0, r0, r1
   14618:	str	r0, [fp, #-48]	; 0xffffffd0
   1461c:	ldr	r6, [sp, #44]	; 0x2c
   14620:	ldr	lr, [sp, #32]
   14624:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14628:	adds	r8, r3, lr
   1462c:	adc	sl, r4, r6
   14630:	subs	r0, r8, r2
   14634:	sbcs	r0, sl, r9
   14638:	bcc	1465c <flatcc_json_printer_fmt_float@@Base+0x71c>
   1463c:	subs	r0, r8, r2
   14640:	sbc	r1, sl, r9
   14644:	subs	r7, r2, r3
   14648:	sbc	r6, r9, r4
   1464c:	subs	r0, r7, r0
   14650:	sbcs	r0, r6, r1
   14654:	ldr	r6, [sp, #44]	; 0x2c
   14658:	bcc	14808 <flatcc_json_printer_fmt_float@@Base+0x8c8>
   1465c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14660:	sub	r5, r5, #1
   14664:	mov	ip, #0
   14668:	strb	r5, [r0, #-1]
   1466c:	ldr	r0, [sp, #48]	; 0x30
   14670:	subs	r1, r0, r8
   14674:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14678:	sbc	r7, r0, sl
   1467c:	subs	r0, r1, lr
   14680:	sbcs	r0, r7, r6
   14684:	movwcc	ip, #1
   14688:	subs	r0, r8, r2
   1468c:	sbcs	r0, sl, r9
   14690:	bcs	14814 <flatcc_json_printer_fmt_float@@Base+0x8d4>
   14694:	subs	r0, r1, lr
   14698:	mov	r3, r8
   1469c:	mov	r4, sl
   146a0:	sbcs	r0, r7, r6
   146a4:	bcs	14628 <flatcc_json_printer_fmt_float@@Base+0x6e8>
   146a8:	b	14814 <flatcc_json_printer_fmt_float@@Base+0x8d4>
   146ac:	ldr	r6, [sp, #44]	; 0x2c
   146b0:	b	1480c <flatcc_json_printer_fmt_float@@Base+0x8cc>
   146b4:	ldr	r9, [sp, #36]	; 0x24
   146b8:	ldr	r0, [sp, #12]
   146bc:	subs	r3, r9, r0
   146c0:	str	r3, [sp, #52]	; 0x34
   146c4:	ldr	r8, [sp, #20]
   146c8:	ldr	r7, [sp, #16]
   146cc:	sbc	r3, r8, r7
   146d0:	str	r3, [sp, #56]	; 0x38
   146d4:	ldr	r3, [sp, #8]
   146d8:	ldr	ip, [sp, #4]
   146dc:	cmp	r3, ip
   146e0:	bne	14d38 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   146e4:	subs	r0, r9, r0
   146e8:	sbcs	r0, r8, r7
   146ec:	bcc	14d38 <flatcc_json_printer_fmt_float@@Base+0xdf8>
   146f0:	ldr	r0, [sp, #48]	; 0x30
   146f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   146f8:	lsr	r8, r1, sl
   146fc:	subs	r0, r0, r2
   14700:	sbc	r3, r3, r5
   14704:	cmp	r4, #0
   14708:	mov	sl, r3
   1470c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14710:	lslge	r8, r1, r4
   14714:	lsl	r9, r1, r3
   14718:	mov	r1, #0
   1471c:	movwge	r9, #0
   14720:	subs	r7, r0, r9
   14724:	sbcs	r7, sl, r8
   14728:	ldr	r7, [sp, #52]	; 0x34
   1472c:	movwcc	r1, #1
   14730:	adds	r3, r7, #1
   14734:	str	r3, [fp, #-48]	; 0xffffffd0
   14738:	ldr	r4, [sp, #56]	; 0x38
   1473c:	adc	r3, r4, #0
   14740:	subs	ip, r7, #1
   14744:	str	r3, [fp, #-52]	; 0xffffffcc
   14748:	sbc	r3, r4, #0
   1474c:	subs	r4, r2, ip
   14750:	sbcs	r4, r5, r3
   14754:	bcs	14800 <flatcc_json_printer_fmt_float@@Base+0x8c0>
   14758:	subs	r0, r0, r9
   1475c:	sbcs	r0, sl, r8
   14760:	bcc	14800 <flatcc_json_printer_fmt_float@@Base+0x8c0>
   14764:	ldr	sl, [sp, #48]	; 0x30
   14768:	adds	r4, r2, r9
   1476c:	adc	r0, r5, r8
   14770:	subs	r1, r4, ip
   14774:	sbcs	r1, r0, r3
   14778:	bcc	147b4 <flatcc_json_printer_fmt_float@@Base+0x874>
   1477c:	subs	sl, r4, ip
   14780:	mov	r7, r9
   14784:	mov	r9, r8
   14788:	sbc	r1, r0, r3
   1478c:	str	r1, [fp, #-40]	; 0xffffffd8
   14790:	subs	r1, ip, r2
   14794:	sbc	r8, r3, r5
   14798:	subs	r1, r1, sl
   1479c:	ldr	sl, [sp, #48]	; 0x30
   147a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   147a4:	sbcs	r1, r8, r1
   147a8:	mov	r8, r9
   147ac:	mov	r9, r7
   147b0:	bcc	148f0 <flatcc_json_printer_fmt_float@@Base+0x9b0>
   147b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   147b8:	sub	r6, r6, #1
   147bc:	subs	r2, sl, r4
   147c0:	strb	r6, [r1, lr]
   147c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   147c8:	sbc	r5, r1, r0
   147cc:	subs	r1, r2, r9
   147d0:	sbcs	r1, r5, r8
   147d4:	mov	r1, #0
   147d8:	movwcc	r1, #1
   147dc:	subs	r7, r4, ip
   147e0:	sbcs	r7, r0, r3
   147e4:	bcs	148fc <flatcc_json_printer_fmt_float@@Base+0x9bc>
   147e8:	subs	r2, r2, r9
   147ec:	sbcs	r2, r5, r8
   147f0:	mov	r5, r0
   147f4:	mov	r2, r4
   147f8:	bcs	14768 <flatcc_json_printer_fmt_float@@Base+0x828>
   147fc:	b	148fc <flatcc_json_printer_fmt_float@@Base+0x9bc>
   14800:	ldr	sl, [sp, #48]	; 0x30
   14804:	b	148f4 <flatcc_json_printer_fmt_float@@Base+0x9b4>
   14808:	mov	ip, #0
   1480c:	mov	r8, r3
   14810:	mov	sl, r4
   14814:	ldr	r3, [sp, #36]	; 0x24
   14818:	ldr	r4, [sp, #20]
   1481c:	subs	r0, r8, r3
   14820:	sbcs	r0, sl, r4
   14824:	bcs	1488c <flatcc_json_printer_fmt_float@@Base+0x94c>
   14828:	cmp	ip, #0
   1482c:	bne	1488c <flatcc_json_printer_fmt_float@@Base+0x94c>
   14830:	ldr	r0, [sp, #32]
   14834:	ldr	r5, [sp, #56]	; 0x38
   14838:	ldr	r9, [sp, #52]	; 0x34
   1483c:	adds	r1, r8, r0
   14840:	adc	r7, sl, r6
   14844:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14848:	subs	r0, r1, r3
   1484c:	sbcs	r0, r7, r4
   14850:	bcc	149f4 <flatcc_json_printer_fmt_float@@Base+0xab4>
   14854:	subs	ip, r1, r3
   14858:	mov	r0, #20
   1485c:	sbc	lr, r7, r4
   14860:	subs	r7, r3, r8
   14864:	umull	r0, r3, r5, r0
   14868:	sbc	r1, r4, sl
   1486c:	add	r3, r3, r9, lsl #2
   14870:	subs	r0, r8, r0
   14874:	sbcs	r0, sl, r3
   14878:	bcc	149f4 <flatcc_json_printer_fmt_float@@Base+0xab4>
   1487c:	subs	r0, ip, r7
   14880:	sbcs	r0, lr, r1
   14884:	bcs	148b0 <flatcc_json_printer_fmt_float@@Base+0x970>
   14888:	b	149f4 <flatcc_json_printer_fmt_float@@Base+0xab4>
   1488c:	ldr	r5, [sp, #56]	; 0x38
   14890:	ldr	r3, [sp, #52]	; 0x34
   14894:	mov	r0, #20
   14898:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1489c:	umull	r0, r1, r5, r0
   148a0:	add	r1, r1, r3, lsl #2
   148a4:	subs	r0, r8, r0
   148a8:	sbcs	r0, sl, r1
   148ac:	bcc	149f4 <flatcc_json_printer_fmt_float@@Base+0xab4>
   148b0:	mvn	r7, #0
   148b4:	ldr	r2, [sp, #48]	; 0x30
   148b8:	subs	r0, r7, #39	; 0x27
   148bc:	umull	r1, r3, r5, r0
   148c0:	sbc	r7, r7, #0
   148c4:	mla	r3, r5, r7, r3
   148c8:	mla	r0, r6, r0, r3
   148cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   148d0:	adds	r1, r1, r2
   148d4:	adc	r0, r0, r3
   148d8:	subs	r1, r1, r8
   148dc:	sbcs	r0, r0, sl
   148e0:	bcc	149f4 <flatcc_json_printer_fmt_float@@Base+0xab4>
   148e4:	ldr	r0, [sp, #40]	; 0x28
   148e8:	sub	lr, r0, #1
   148ec:	b	1499c <flatcc_json_printer_fmt_float@@Base+0xa5c>
   148f0:	mov	r1, #0
   148f4:	mov	r4, r2
   148f8:	mov	r0, r5
   148fc:	add	r2, lr, #1
   14900:	str	r2, [sp, #40]	; 0x28
   14904:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14908:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1490c:	subs	r2, r4, r5
   14910:	sbcs	r2, r0, r6
   14914:	bcs	14978 <flatcc_json_printer_fmt_float@@Base+0xa38>
   14918:	cmp	r1, #0
   1491c:	bne	14978 <flatcc_json_printer_fmt_float@@Base+0xa38>
   14920:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14924:	adds	r1, r4, r9
   14928:	adc	r2, r0, r8
   1492c:	subs	r7, r1, r5
   14930:	sbcs	r7, r2, r6
   14934:	bcc	149f4 <flatcc_json_printer_fmt_float@@Base+0xab4>
   14938:	subs	ip, r1, r5
   1493c:	sbc	r9, r2, r6
   14940:	subs	r7, r5, r4
   14944:	sbc	r1, r6, r0
   14948:	subs	r8, sl, #4
   1494c:	sbc	r3, r3, #0
   14950:	subs	r2, r4, #2
   14954:	sbcs	r2, r0, #0
   14958:	bcc	149f4 <flatcc_json_printer_fmt_float@@Base+0xab4>
   1495c:	subs	r2, ip, r7
   14960:	sbcs	r1, r9, r1
   14964:	bcc	149f4 <flatcc_json_printer_fmt_float@@Base+0xab4>
   14968:	subs	r1, r8, r4
   1496c:	sbcs	r0, r3, r0
   14970:	bcs	1499c <flatcc_json_printer_fmt_float@@Base+0xa5c>
   14974:	b	149f4 <flatcc_json_printer_fmt_float@@Base+0xab4>
   14978:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1497c:	subs	r1, sl, #4
   14980:	sbc	r2, r2, #0
   14984:	subs	r3, r4, #2
   14988:	sbcs	r3, r0, #0
   1498c:	bcc	149f4 <flatcc_json_printer_fmt_float@@Base+0xab4>
   14990:	subs	r1, r1, r4
   14994:	sbcs	r0, r2, r0
   14998:	bcc	149f4 <flatcc_json_printer_fmt_float@@Base+0xab4>
   1499c:	ldr	r0, [sp, #28]
   149a0:	ldr	r4, [sp, #40]	; 0x28
   149a4:	ldr	r7, [fp, #-32]	; 0xffffffe0
   149a8:	ldrsh	r5, [r0, #26]
   149ac:	sub	r0, r4, #1
   149b0:	cmp	r4, #3
   149b4:	movwlt	r0, #1
   149b8:	sub	r9, r7, r5
   149bc:	rsb	r3, r9, #0
   149c0:	cmp	r0, r3
   149c4:	movge	r0, r3
   149c8:	cmn	r9, #1
   149cc:	ble	14a20 <flatcc_json_printer_fmt_float@@Base+0xae0>
   149d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   149d4:	cmp	r9, #3
   149d8:	bcc	14aa0 <flatcc_json_printer_fmt_float@@Base+0xb60>
   149dc:	mov	r0, #101	; 0x65
   149e0:	add	lr, r4, #1
   149e4:	strb	r0, [r1, r4]
   149e8:	add	r0, r1, lr
   149ec:	mov	r2, r0
   149f0:	b	14bfc <flatcc_json_printer_fmt_float@@Base+0xcbc>
   149f4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   149f8:	movw	r1, #5968	; 0x1750
   149fc:	vmov	r2, r3, d0
   14a00:	movt	r1, #2
   14a04:	mov	r0, r4
   14a08:	bl	1296c <sprintf@plt>
   14a0c:	ldr	r1, [sp, #24]
   14a10:	sub	r1, r4, r1
   14a14:	add	r0, r1, r0
   14a18:	sub	sp, fp, #28
   14a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14a24:	cmp	r4, r3
   14a28:	bgt	14b04 <flatcc_json_printer_fmt_float@@Base+0xbc4>
   14a2c:	add	r2, r9, r4
   14a30:	cmn	r2, #2
   14a34:	blt	14b04 <flatcc_json_printer_fmt_float@@Base+0xbc4>
   14a38:	add	r8, r1, #2
   14a3c:	mvn	r0, lr
   14a40:	add	r2, r8, r3
   14a44:	add	r0, r2, r0
   14a48:	mov	r2, r4
   14a4c:	bl	128a0 <memmove@plt>
   14a50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14a54:	movw	r0, #11824	; 0x2e30
   14a58:	mov	r6, r4
   14a5c:	strh	r0, [r1]
   14a60:	rsb	r0, r4, #2
   14a64:	sub	r4, r0, r9
   14a68:	mov	r0, #2
   14a6c:	cmp	r4, #3
   14a70:	blt	14a90 <flatcc_json_printer_fmt_float@@Base+0xb50>
   14a74:	sub	r0, r5, r7
   14a78:	mov	r1, #48	; 0x30
   14a7c:	sub	r2, r0, r6
   14a80:	mov	r0, r8
   14a84:	bl	12948 <memset@plt>
   14a88:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14a8c:	mov	r0, r4
   14a90:	ldr	ip, [sp, #24]
   14a94:	add	r6, r0, r6
   14a98:	mov	r4, r6
   14a9c:	b	14c78 <flatcc_json_printer_fmt_float@@Base+0xd38>
   14aa0:	cmp	r9, #0
   14aa4:	beq	14b74 <flatcc_json_printer_fmt_float@@Base+0xc34>
   14aa8:	add	r0, r1, r4
   14aac:	mvn	r1, r7
   14ab0:	mov	r6, r4
   14ab4:	mvn	r4, #1
   14ab8:	add	r1, r1, r5
   14abc:	cmn	r1, #2
   14ac0:	movle	r1, r4
   14ac4:	add	r1, r7, r1
   14ac8:	add	r1, r1, #2
   14acc:	sub	r2, r1, r5
   14ad0:	mov	r1, #48	; 0x30
   14ad4:	bl	12948 <memset@plt>
   14ad8:	mvn	r0, r9
   14adc:	cmn	r0, #2
   14ae0:	movgt	r4, r0
   14ae4:	add	r0, r9, r4
   14ae8:	add	r0, r0, #2
   14aec:	cmp	r0, #4
   14af0:	bcs	14b7c <flatcc_json_printer_fmt_float@@Base+0xc3c>
   14af4:	ldr	ip, [sp, #24]
   14af8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14afc:	mov	r4, r6
   14b00:	b	14bc8 <flatcc_json_printer_fmt_float@@Base+0xc88>
   14b04:	cmp	r4, #2
   14b08:	blt	14be0 <flatcc_json_printer_fmt_float@@Base+0xca0>
   14b0c:	ldr	ip, [sp, #24]
   14b10:	cmp	r0, #1
   14b14:	blt	14b3c <flatcc_json_printer_fmt_float@@Base+0xbfc>
   14b18:	add	r2, r1, r4
   14b1c:	mov	r6, #0
   14b20:	mov	r3, r2
   14b24:	ldrb	r7, [r3, #-1]!
   14b28:	add	r6, r6, #1
   14b2c:	cmp	r6, r0
   14b30:	strb	r7, [r2]
   14b34:	mov	r2, r3
   14b38:	blt	14b24 <flatcc_json_printer_fmt_float@@Base+0xbe4>
   14b3c:	sub	r3, r4, r0
   14b40:	mov	r2, #46	; 0x2e
   14b44:	adds	r7, r0, r9
   14b48:	add	r0, r4, #1
   14b4c:	strb	r2, [r1, r3]
   14b50:	beq	14c8c <flatcc_json_printer_fmt_float@@Base+0xd4c>
   14b54:	mov	r2, #101	; 0x65
   14b58:	add	lr, r4, #2
   14b5c:	cmn	r7, #1
   14b60:	strb	r2, [r1, r0]
   14b64:	add	r0, r1, lr
   14b68:	ble	14c94 <flatcc_json_printer_fmt_float@@Base+0xd54>
   14b6c:	mov	r2, r0
   14b70:	b	14ca4 <flatcc_json_printer_fmt_float@@Base+0xd64>
   14b74:	ldr	ip, [sp, #24]
   14b78:	b	14c78 <flatcc_json_printer_fmt_float@@Base+0xd38>
   14b7c:	ldr	ip, [sp, #24]
   14b80:	mov	r1, #0
   14b84:	vmov.i32	q9, #1	; 0x00000001
   14b88:	vdup.32	q8, r1
   14b8c:	bic	r1, r0, #3
   14b90:	vmov.32	d16[0], r6
   14b94:	sub	r9, r9, r1
   14b98:	mov	r2, r1
   14b9c:	subs	r2, r2, #4
   14ba0:	vadd.i32	q8, q8, q9
   14ba4:	bne	14b9c <flatcc_json_printer_fmt_float@@Base+0xc5c>
   14ba8:	vext.8	q9, q8, q8, #8
   14bac:	cmp	r0, r1
   14bb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14bb4:	vadd.i32	q8, q8, q9
   14bb8:	vdup.32	q9, d16[1]
   14bbc:	vadd.i32	q8, q8, q9
   14bc0:	vmov.32	r4, d16[0]
   14bc4:	beq	14c78 <flatcc_json_printer_fmt_float@@Base+0xd38>
   14bc8:	add	r0, r9, #1
   14bcc:	sub	r0, r0, #1
   14bd0:	add	r4, r4, #1
   14bd4:	cmp	r0, #1
   14bd8:	bgt	14bcc <flatcc_json_printer_fmt_float@@Base+0xc8c>
   14bdc:	b	14c78 <flatcc_json_printer_fmt_float@@Base+0xd38>
   14be0:	add	r0, r1, r4
   14be4:	movw	r2, #11621	; 0x2d65
   14be8:	add	lr, r4, #1
   14bec:	mov	r9, r3
   14bf0:	strh	r2, [r0]
   14bf4:	add	r0, r1, lr
   14bf8:	add	r2, r0, #1
   14bfc:	ldr	ip, [sp, #24]
   14c00:	movw	r7, #26215	; 0x6667
   14c04:	mov	r3, r2
   14c08:	movt	r7, #26214	; 0x6666
   14c0c:	smmul	r6, r9, r7
   14c10:	asr	r5, r6, #2
   14c14:	add	r4, r5, r6, lsr #31
   14c18:	add	r6, r4, r4, lsl #2
   14c1c:	sub	r6, r9, r6, lsl #1
   14c20:	add	r6, r6, #48	; 0x30
   14c24:	strb	r6, [r3], #1
   14c28:	add	r6, r9, #9
   14c2c:	mov	r9, r4
   14c30:	cmp	r6, #18
   14c34:	bhi	14c0c <flatcc_json_printer_fmt_float@@Base+0xccc>
   14c38:	mov	r6, #0
   14c3c:	mov	r7, r3
   14c40:	strb	r6, [r7], -r2
   14c44:	cmp	r7, #2
   14c48:	blt	14c70 <flatcc_json_printer_fmt_float@@Base+0xd30>
   14c4c:	add	r7, r7, r7, lsr #31
   14c50:	sub	r6, r3, #1
   14c54:	asr	r7, r7, #1
   14c58:	ldrb	r5, [r2]
   14c5c:	ldrb	r4, [r6]
   14c60:	subs	r7, r7, #1
   14c64:	strb	r4, [r2], #1
   14c68:	strb	r5, [r6], #-1
   14c6c:	bne	14c58 <flatcc_json_printer_fmt_float@@Base+0xd18>
   14c70:	sub	r0, lr, r0
   14c74:	add	r4, r0, r3
   14c78:	mov	r0, #0
   14c7c:	strb	r0, [r1, r4]!
   14c80:	sub	r0, r1, ip
   14c84:	sub	sp, fp, #28
   14c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c8c:	mov	r4, r0
   14c90:	b	14c78 <flatcc_json_printer_fmt_float@@Base+0xd38>
   14c94:	mov	r3, #45	; 0x2d
   14c98:	mov	r2, r0
   14c9c:	rsb	r7, r7, #0
   14ca0:	strb	r3, [r2], #1
   14ca4:	movw	r6, #26215	; 0x6667
   14ca8:	mov	r3, r2
   14cac:	movt	r6, #26214	; 0x6666
   14cb0:	smmul	r5, r7, r6
   14cb4:	asr	r4, r5, #2
   14cb8:	add	r5, r4, r5, lsr #31
   14cbc:	add	r4, r5, r5, lsl #2
   14cc0:	sub	r4, r7, r4, lsl #1
   14cc4:	add	r7, r7, #9
   14cc8:	add	r4, r4, #48	; 0x30
   14ccc:	cmp	r7, #18
   14cd0:	mov	r7, r5
   14cd4:	strb	r4, [r3], #1
   14cd8:	bhi	14cb0 <flatcc_json_printer_fmt_float@@Base+0xd70>
   14cdc:	mov	r6, #0
   14ce0:	mov	r7, r3
   14ce4:	strb	r6, [r7], -r2
   14ce8:	cmp	r7, #2
   14cec:	blt	14c70 <flatcc_json_printer_fmt_float@@Base+0xd30>
   14cf0:	add	r7, r7, r7, lsr #31
   14cf4:	sub	r6, r3, #1
   14cf8:	asr	r7, r7, #1
   14cfc:	ldrb	r5, [r2]
   14d00:	ldrb	r4, [r6]
   14d04:	subs	r7, r7, #1
   14d08:	strb	r4, [r2], #1
   14d0c:	strb	r5, [r6], #-1
   14d10:	bne	14cfc <flatcc_json_printer_fmt_float@@Base+0xdbc>
   14d14:	b	14c70 <flatcc_json_printer_fmt_float@@Base+0xd30>
   14d18:	movw	r0, #5823	; 0x16bf
   14d1c:	movw	r1, #5827	; 0x16c3
   14d20:	movw	r3, #5914	; 0x171a
   14d24:	mov	r2, #189	; 0xbd
   14d28:	movt	r0, #2
   14d2c:	movt	r1, #2
   14d30:	movt	r3, #2
   14d34:	bl	1299c <__assert_fail@plt>
   14d38:	movw	r0, #6204	; 0x183c
   14d3c:	movw	r1, #6061	; 0x17ad
   14d40:	movw	r3, #6229	; 0x1855
   14d44:	mov	r2, #239	; 0xef
   14d48:	movt	r0, #2
   14d4c:	movt	r1, #2
   14d50:	movt	r3, #2
   14d54:	bl	1299c <__assert_fail@plt>
   14d58:	movw	r0, #5974	; 0x1756
   14d5c:	movw	r1, #5827	; 0x16c3
   14d60:	movw	r3, #6011	; 0x177b
   14d64:	mov	r2, #138	; 0x8a
   14d68:	movt	r0, #2
   14d6c:	movt	r1, #2
   14d70:	movt	r3, #2
   14d74:	bl	1299c <__assert_fail@plt>
   14d78:	movw	r0, #6052	; 0x17a4
   14d7c:	movw	r1, #6061	; 0x17ad
   14d80:	movw	r3, #6147	; 0x1803
   14d84:	mov	r2, #260	; 0x104
   14d88:	movt	r0, #2
   14d8c:	movt	r1, #2
   14d90:	movt	r3, #2
   14d94:	bl	1299c <__assert_fail@plt>

00014d98 <flatcc_json_printer_fmt_double@@Base>:
   14d98:	b	13f48 <flatcc_json_printer_fmt_float@@Base+0x8>

00014d9c <flatcc_json_printer_fmt_bool@@Base>:
   14d9c:	cmp	r1, #0
   14da0:	movwne	r1, #29300	; 0x7274
   14da4:	movtne	r1, #25973	; 0x6575
   14da8:	strne	r1, [r0]
   14dac:	movne	r0, #4
   14db0:	bxne	lr
   14db4:	mov	r1, #101	; 0x65
   14db8:	strb	r1, [r0, #4]
   14dbc:	movw	r1, #24934	; 0x6166
   14dc0:	movt	r1, #29548	; 0x736c
   14dc4:	str	r1, [r0]
   14dc8:	mov	r0, #5
   14dcc:	bx	lr

00014dd0 <flatcc_json_printer_string@@Base>:
   14dd0:	b	14dd4 <flatcc_json_printer_string@@Base+0x4>
   14dd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dd8:	add	fp, sp, #28
   14ddc:	sub	sp, sp, #12
   14de0:	mov	r5, r0
   14de4:	mov	r4, r0
   14de8:	mov	r6, r1
   14dec:	mov	r3, r2
   14df0:	ldr	r0, [r5, #20]!
   14df4:	add	r1, r0, #1
   14df8:	str	r5, [sp, #4]
   14dfc:	str	r1, [r5]
   14e00:	mov	r1, #34	; 0x22
   14e04:	strb	r1, [r0]
   14e08:	ldrb	sl, [r6]
   14e0c:	mov	r8, r6
   14e10:	cmp	sl, #32
   14e14:	bcc	14e54 <flatcc_json_printer_string@@Base+0x84>
   14e18:	b	14e38 <flatcc_json_printer_string@@Base+0x68>
   14e1c:	strb	r2, [r1]
   14e20:	sub	r3, r0, #1
   14e24:	add	r6, r8, #1
   14e28:	ldrb	sl, [r6]
   14e2c:	mov	r8, r6
   14e30:	cmp	sl, #32
   14e34:	bcc	14e54 <flatcc_json_printer_string@@Base+0x84>
   14e38:	uxtb	r0, sl
   14e3c:	cmp	r0, #34	; 0x22
   14e40:	cmpne	r0, #92	; 0x5c
   14e44:	beq	14e54 <flatcc_json_printer_string@@Base+0x84>
   14e48:	ldrb	sl, [r8, #1]!
   14e4c:	cmp	sl, #31
   14e50:	bhi	14e38 <flatcc_json_printer_string@@Base+0x68>
   14e54:	ldr	r0, [r4, #20]
   14e58:	ldr	r1, [r4, #16]
   14e5c:	sub	r9, r8, r6
   14e60:	add	r2, r0, r9
   14e64:	cmp	r2, r1
   14e68:	bcs	14e88 <flatcc_json_printer_string@@Base+0xb8>
   14e6c:	mov	r1, r6
   14e70:	mov	r2, r9
   14e74:	mov	r6, r3
   14e78:	bl	128b8 <memcpy@plt>
   14e7c:	mov	r2, r6
   14e80:	mov	r7, r9
   14e84:	b	14f14 <flatcc_json_printer_string@@Base+0x144>
   14e88:	cmp	r0, r1
   14e8c:	str	r3, [sp, #8]
   14e90:	bcc	14eac <flatcc_json_printer_string@@Base+0xdc>
   14e94:	ldr	r2, [r4, #44]	; 0x2c
   14e98:	mov	r0, r4
   14e9c:	mov	r1, #0
   14ea0:	blx	r2
   14ea4:	ldr	r1, [r4, #16]
   14ea8:	ldr	r0, [r4, #20]
   14eac:	sub	r5, r1, r0
   14eb0:	mov	r7, r9
   14eb4:	cmp	r5, r9
   14eb8:	bcs	14f00 <flatcc_json_printer_string@@Base+0x130>
   14ebc:	mov	r1, r6
   14ec0:	mov	r2, r5
   14ec4:	bl	128b8 <memcpy@plt>
   14ec8:	ldr	r0, [r4, #20]
   14ecc:	ldr	r2, [r4, #44]	; 0x2c
   14ed0:	mov	r1, #0
   14ed4:	add	r0, r0, r5
   14ed8:	str	r0, [r4, #20]
   14edc:	mov	r0, r4
   14ee0:	blx	r2
   14ee4:	ldr	r1, [r4, #16]
   14ee8:	ldr	r0, [r4, #20]
   14eec:	sub	r7, r7, r5
   14ef0:	add	r6, r6, r5
   14ef4:	sub	r5, r1, r0
   14ef8:	cmp	r7, r5
   14efc:	bhi	14ebc <flatcc_json_printer_string@@Base+0xec>
   14f00:	ldr	r5, [sp, #4]
   14f04:	mov	r1, r6
   14f08:	mov	r2, r7
   14f0c:	bl	128b8 <memcpy@plt>
   14f10:	ldr	r2, [sp, #8]
   14f14:	ldr	r0, [r5]
   14f18:	add	r1, r0, r7
   14f1c:	add	r0, r1, #1
   14f20:	str	r0, [r5]
   14f24:	subs	r0, r2, r9
   14f28:	beq	150cc <flatcc_json_printer_string@@Base+0x2fc>
   14f2c:	mov	r2, #92	; 0x5c
   14f30:	strb	r2, [r1]
   14f34:	mvn	r1, #7
   14f38:	uxtab	r2, r1, sl
   14f3c:	uxtb	r1, sl
   14f40:	cmp	r2, #26
   14f44:	bhi	14fd0 <flatcc_json_printer_string@@Base+0x200>
   14f48:	add	r3, pc, #0
   14f4c:	ldr	pc, [r3, r2, lsl #2]
   14f50:			; <UNDEFINED> instruction: 0x00014fbc
   14f54:	andeq	r5, r1, r8, rrx
   14f58:	andeq	r5, r1, ip, ror r0
   14f5c:	andeq	r4, r1, ip, ror #31
   14f60:	muleq	r1, r0, r0
   14f64:	andeq	r5, r1, r4, lsr #1
   14f68:	andeq	r4, r1, ip, ror #31
   14f6c:	andeq	r4, r1, ip, ror #31
   14f70:	andeq	r4, r1, ip, ror #31
   14f74:	andeq	r4, r1, ip, ror #31
   14f78:	andeq	r4, r1, ip, ror #31
   14f7c:	andeq	r4, r1, ip, ror #31
   14f80:	andeq	r4, r1, ip, ror #31
   14f84:	andeq	r4, r1, ip, ror #31
   14f88:	andeq	r4, r1, ip, ror #31
   14f8c:	andeq	r4, r1, ip, ror #31
   14f90:	andeq	r4, r1, ip, ror #31
   14f94:	andeq	r4, r1, ip, ror #31
   14f98:	andeq	r4, r1, ip, ror #31
   14f9c:	andeq	r4, r1, ip, ror #31
   14fa0:	andeq	r4, r1, ip, ror #31
   14fa4:	andeq	r4, r1, ip, ror #31
   14fa8:	andeq	r4, r1, ip, ror #31
   14fac:	andeq	r4, r1, ip, ror #31
   14fb0:	andeq	r4, r1, ip, ror #31
   14fb4:	andeq	r4, r1, ip, ror #31
   14fb8:	strheq	r5, [r1], -r8
   14fbc:	ldr	r1, [r5]
   14fc0:	add	r2, r1, #1
   14fc4:	str	r2, [r5]
   14fc8:	mov	r2, #98	; 0x62
   14fcc:	b	14e1c <flatcc_json_printer_string@@Base+0x4c>
   14fd0:	cmp	r1, #92	; 0x5c
   14fd4:	bne	14fec <flatcc_json_printer_string@@Base+0x21c>
   14fd8:	ldr	r1, [r5]
   14fdc:	add	r2, r1, #1
   14fe0:	str	r2, [r5]
   14fe4:	mov	r2, #92	; 0x5c
   14fe8:	b	14e1c <flatcc_json_printer_string@@Base+0x4c>
   14fec:	ldr	r2, [r5]
   14ff0:	mov	r7, #48	; 0x30
   14ff4:	cmp	r1, #160	; 0xa0
   14ff8:	add	r3, r2, #1
   14ffc:	str	r3, [r5]
   15000:	mov	r3, #117	; 0x75
   15004:	strb	r3, [r2]
   15008:	ldr	r2, [r5]
   1500c:	add	r3, r2, #1
   15010:	str	r3, [r5]
   15014:	strb	r7, [r2]
   15018:	ldr	r2, [r5]
   1501c:	add	r3, r2, #1
   15020:	str	r3, [r5]
   15024:	strb	r7, [r2]
   15028:	ldr	r2, [r5]
   1502c:	add	r3, r2, #1
   15030:	str	r3, [r5]
   15034:	mov	r3, #87	; 0x57
   15038:	movwcc	r3, #48	; 0x30
   1503c:	add	r1, r3, r1, lsr #4
   15040:	mov	r3, #87	; 0x57
   15044:	strb	r1, [r2]
   15048:	ldr	r1, [r5]
   1504c:	add	r2, r1, #1
   15050:	str	r2, [r5]
   15054:	and	r2, sl, #15
   15058:	cmp	r2, #10
   1505c:	movwcc	r3, #48	; 0x30
   15060:	add	r2, r3, r2
   15064:	b	14e1c <flatcc_json_printer_string@@Base+0x4c>
   15068:	ldr	r1, [r5]
   1506c:	add	r2, r1, #1
   15070:	str	r2, [r5]
   15074:	mov	r2, #116	; 0x74
   15078:	b	14e1c <flatcc_json_printer_string@@Base+0x4c>
   1507c:	ldr	r1, [r5]
   15080:	add	r2, r1, #1
   15084:	str	r2, [r5]
   15088:	mov	r2, #110	; 0x6e
   1508c:	b	14e1c <flatcc_json_printer_string@@Base+0x4c>
   15090:	ldr	r1, [r5]
   15094:	add	r2, r1, #1
   15098:	str	r2, [r5]
   1509c:	mov	r2, #102	; 0x66
   150a0:	b	14e1c <flatcc_json_printer_string@@Base+0x4c>
   150a4:	ldr	r1, [r5]
   150a8:	add	r2, r1, #1
   150ac:	str	r2, [r5]
   150b0:	mov	r2, #114	; 0x72
   150b4:	b	14e1c <flatcc_json_printer_string@@Base+0x4c>
   150b8:	ldr	r1, [r5]
   150bc:	add	r2, r1, #1
   150c0:	str	r2, [r5]
   150c4:	mov	r2, #34	; 0x22
   150c8:	b	14e1c <flatcc_json_printer_string@@Base+0x4c>
   150cc:	mov	r0, #34	; 0x22
   150d0:	strb	r0, [r1]
   150d4:	sub	sp, fp, #28
   150d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000150dc <flatcc_json_printer_write@@Base>:
   150dc:	push	{r4, r5, r6, r7, fp, lr}
   150e0:	add	fp, sp, #16
   150e4:	mov	r6, r1
   150e8:	mov	r5, r0
   150ec:	ldr	r1, [r0, #16]
   150f0:	ldr	r0, [r0, #20]
   150f4:	mov	r4, r2
   150f8:	add	r2, r0, r2
   150fc:	cmp	r2, r1
   15100:	bcc	15174 <flatcc_json_printer_write@@Base+0x98>
   15104:	cmp	r0, r1
   15108:	bcc	15124 <flatcc_json_printer_write@@Base+0x48>
   1510c:	ldr	r2, [r5, #44]	; 0x2c
   15110:	mov	r0, r5
   15114:	mov	r1, #0
   15118:	blx	r2
   1511c:	ldr	r1, [r5, #16]
   15120:	ldr	r0, [r5, #20]
   15124:	sub	r7, r1, r0
   15128:	cmp	r7, r4
   1512c:	bcs	15174 <flatcc_json_printer_write@@Base+0x98>
   15130:	mov	r1, r6
   15134:	mov	r2, r7
   15138:	bl	128b8 <memcpy@plt>
   1513c:	ldr	r0, [r5, #20]
   15140:	ldr	r2, [r5, #44]	; 0x2c
   15144:	mov	r1, #0
   15148:	add	r0, r0, r7
   1514c:	str	r0, [r5, #20]
   15150:	mov	r0, r5
   15154:	blx	r2
   15158:	ldr	r1, [r5, #16]
   1515c:	ldr	r0, [r5, #20]
   15160:	sub	r4, r4, r7
   15164:	add	r6, r6, r7
   15168:	sub	r7, r1, r0
   1516c:	cmp	r4, r7
   15170:	bhi	15130 <flatcc_json_printer_write@@Base+0x54>
   15174:	mov	r1, r6
   15178:	mov	r2, r4
   1517c:	bl	128b8 <memcpy@plt>
   15180:	ldr	r0, [r5, #20]
   15184:	add	r0, r0, r4
   15188:	str	r0, [r5, #20]
   1518c:	pop	{r4, r5, r6, r7, fp, pc}

00015190 <flatcc_json_printer_nl@@Base>:
   15190:	ldr	r1, [r0, #20]
   15194:	add	r2, r1, #1
   15198:	str	r2, [r0, #20]
   1519c:	mov	r2, #10
   151a0:	strb	r2, [r1]
   151a4:	ldr	r1, [r0, #16]
   151a8:	ldr	r2, [r0, #20]
   151ac:	cmp	r2, r1
   151b0:	bxcc	lr
   151b4:	ldr	r2, [r0, #44]	; 0x2c
   151b8:	mov	r1, #0
   151bc:	bx	r2

000151c0 <flatcc_json_printer_char@@Base>:
   151c0:	ldr	r2, [r0, #20]
   151c4:	add	r3, r2, #1
   151c8:	str	r3, [r0, #20]
   151cc:	strb	r1, [r2]
   151d0:	bx	lr

000151d4 <flatcc_json_printer_indent@@Base>:
   151d4:	push	{r4, r5, r6, sl, fp, lr}
   151d8:	add	fp, sp, #16
   151dc:	mov	r4, r0
   151e0:	ldr	r1, [r0, #16]
   151e4:	ldr	r0, [r0, #20]
   151e8:	ldrb	r2, [r4, #25]
   151ec:	ldr	r3, [r4, #32]
   151f0:	mla	r6, r3, r2, r0
   151f4:	mul	r5, r3, r2
   151f8:	cmp	r6, r1
   151fc:	bls	1526c <flatcc_json_printer_indent@@Base+0x98>
   15200:	cmp	r0, r1
   15204:	bcc	15220 <flatcc_json_printer_indent@@Base+0x4c>
   15208:	ldr	r2, [r4, #44]	; 0x2c
   1520c:	mov	r0, r4
   15210:	mov	r1, #0
   15214:	blx	r2
   15218:	ldr	r1, [r4, #16]
   1521c:	ldr	r0, [r4, #20]
   15220:	sub	r6, r1, r0
   15224:	cmp	r6, r5
   15228:	bcs	1526c <flatcc_json_printer_indent@@Base+0x98>
   1522c:	mov	r1, #32
   15230:	mov	r2, r6
   15234:	bl	12948 <memset@plt>
   15238:	ldr	r0, [r4, #20]
   1523c:	ldr	r2, [r4, #44]	; 0x2c
   15240:	mov	r1, #0
   15244:	add	r0, r0, r6
   15248:	str	r0, [r4, #20]
   1524c:	mov	r0, r4
   15250:	blx	r2
   15254:	ldr	r1, [r4, #16]
   15258:	ldr	r0, [r4, #20]
   1525c:	sub	r5, r5, r6
   15260:	sub	r6, r1, r0
   15264:	cmp	r5, r6
   15268:	bhi	1522c <flatcc_json_printer_indent@@Base+0x58>
   1526c:	mov	r1, #32
   15270:	mov	r2, r5
   15274:	bl	12948 <memset@plt>
   15278:	ldr	r0, [r4, #20]
   1527c:	add	r0, r0, r5
   15280:	str	r0, [r4, #20]
   15284:	pop	{r4, r5, r6, sl, fp, pc}

00015288 <flatcc_json_printer_add_level@@Base>:
   15288:	ldr	r2, [r0, #32]
   1528c:	add	r1, r2, r1
   15290:	str	r1, [r0, #32]
   15294:	bx	lr

00015298 <flatcc_json_printer_get_level@@Base>:
   15298:	ldr	r0, [r0, #32]
   1529c:	bx	lr

000152a0 <flatcc_json_printer_uint8@@Base>:
   152a0:	push	{fp, lr}
   152a4:	mov	fp, sp
   152a8:	ldr	lr, [r0, #20]
   152ac:	cmp	r1, #100	; 0x64
   152b0:	bcc	15308 <flatcc_json_printer_uint8@@Base+0x68>
   152b4:	mov	r3, #0
   152b8:	strb	r3, [lr, #3]
   152bc:	movw	r3, #34079	; 0x851f
   152c0:	movt	r3, #20971	; 0x51eb
   152c4:	umull	r3, ip, r1, r3
   152c8:	mov	r3, #48	; 0x30
   152cc:	orr	r3, r3, ip, lsr #5
   152d0:	lsr	ip, ip, #5
   152d4:	strb	r3, [lr]
   152d8:	mov	r3, #100	; 0x64
   152dc:	mls	r1, ip, r3, r1
   152e0:	movw	r3, #6299	; 0x189b
   152e4:	movt	r3, #2
   152e8:	add	r1, r3, r1, lsl #1
   152ec:	ldrh	r1, [r1]
   152f0:	strh	r1, [lr, #1]
   152f4:	mov	r1, #3
   152f8:	ldr	r2, [r0, #20]
   152fc:	add	r1, r2, r1
   15300:	str	r1, [r0, #20]
   15304:	pop	{fp, pc}
   15308:	cmp	r1, #10
   1530c:	bcc	15358 <flatcc_json_printer_uint8@@Base+0xb8>
   15310:	mov	r3, #0
   15314:	strb	r3, [lr, #2]
   15318:	movw	r3, #34079	; 0x851f
   1531c:	movt	r3, #20971	; 0x51eb
   15320:	umull	r3, r2, r1, r3
   15324:	lsr	r2, r2, #5
   15328:	mov	r3, #100	; 0x64
   1532c:	mls	r1, r2, r3, r1
   15330:	movw	r2, #6299	; 0x189b
   15334:	movt	r2, #2
   15338:	add	r1, r2, r1, lsl #1
   1533c:	ldrh	r1, [r1]
   15340:	strh	r1, [lr]
   15344:	mov	r1, #2
   15348:	ldr	r2, [r0, #20]
   1534c:	add	r1, r2, r1
   15350:	str	r1, [r0, #20]
   15354:	pop	{fp, pc}
   15358:	mov	r2, #0
   1535c:	add	r1, r1, #48	; 0x30
   15360:	strb	r2, [lr, #1]
   15364:	strb	r1, [lr]
   15368:	mov	r1, #1
   1536c:	ldr	r2, [r0, #20]
   15370:	add	r1, r2, r1
   15374:	str	r1, [r0, #20]
   15378:	pop	{fp, pc}

0001537c <flatcc_json_printer_uint16@@Base>:
   1537c:	push	{r4, sl, fp, lr}
   15380:	add	fp, sp, #8
   15384:	mov	r2, r1
   15388:	ldr	r1, [r0, #20]
   1538c:	mov	r4, r0
   15390:	mov	r0, r2
   15394:	bl	153a8 <flatcc_json_printer_uint16@@Base+0x2c>
   15398:	ldr	r1, [r4, #20]
   1539c:	add	r0, r1, r0
   153a0:	str	r0, [r4, #20]
   153a4:	pop	{r4, sl, fp, pc}
   153a8:	mov	ip, r0
   153ac:	cmp	r0, #1000	; 0x3e8
   153b0:	bcc	15418 <flatcc_json_printer_uint16@@Base+0x9c>
   153b4:	movw	r3, #9999	; 0x270f
   153b8:	mov	r0, #4
   153bc:	cmp	ip, r3
   153c0:	movwhi	r0, #5
   153c4:	mov	r3, #0
   153c8:	tst	r0, #1
   153cc:	strb	r3, [r1, r0]!
   153d0:	bne	1544c <flatcc_json_printer_uint16@@Base+0xd0>
   153d4:	cmp	r0, #2
   153d8:	beq	154d4 <flatcc_json_printer_uint16@@Base+0x158>
   153dc:	cmp	r0, #4
   153e0:	bxne	lr
   153e4:	movw	r2, #34079	; 0x851f
   153e8:	movt	r2, #20971	; 0x51eb
   153ec:	umull	r2, r3, ip, r2
   153f0:	lsr	r3, r3, #5
   153f4:	mov	r2, #100	; 0x64
   153f8:	mls	r2, r3, r2, ip
   153fc:	uxth	ip, r2
   15400:	movw	r2, #6299	; 0x189b
   15404:	movt	r2, #2
   15408:	add	r2, r2, ip, lsl #1
   1540c:	ldrh	r2, [r2]
   15410:	strh	r2, [r1, #-2]!
   15414:	b	154d8 <flatcc_json_printer_uint16@@Base+0x15c>
   15418:	cmp	ip, #100	; 0x64
   1541c:	bcc	15430 <flatcc_json_printer_uint16@@Base+0xb4>
   15420:	mov	r0, #0
   15424:	strb	r0, [r1, #3]!
   15428:	mov	r0, #3
   1542c:	b	15494 <flatcc_json_printer_uint16@@Base+0x118>
   15430:	mov	r0, #1
   15434:	cmp	ip, #9
   15438:	movwhi	r0, #2
   1543c:	mov	r3, #0
   15440:	tst	r0, #1
   15444:	strb	r3, [r1, r0]!
   15448:	beq	153d4 <flatcc_json_printer_uint16@@Base+0x58>
   1544c:	cmp	r0, #1
   15450:	beq	1550c <flatcc_json_printer_uint16@@Base+0x190>
   15454:	cmp	r0, #3
   15458:	beq	15494 <flatcc_json_printer_uint16@@Base+0x118>
   1545c:	cmp	r0, #5
   15460:	bne	15508 <flatcc_json_printer_uint16@@Base+0x18c>
   15464:	movw	r3, #34079	; 0x851f
   15468:	movt	r3, #20971	; 0x51eb
   1546c:	umull	r3, r2, ip, r3
   15470:	lsr	r2, r2, #5
   15474:	mov	r3, #100	; 0x64
   15478:	mls	ip, r2, r3, ip
   1547c:	movw	r3, #6299	; 0x189b
   15480:	movt	r3, #2
   15484:	add	r3, r3, ip, lsl #1
   15488:	mov	ip, r2
   1548c:	ldrh	r3, [r3]
   15490:	strh	r3, [r1, #-2]!
   15494:	movw	r3, #34079	; 0x851f
   15498:	uxth	r2, ip
   1549c:	movt	r3, #20971	; 0x51eb
   154a0:	umull	r2, r3, r2, r3
   154a4:	lsr	r3, r3, #5
   154a8:	mov	r2, #100	; 0x64
   154ac:	mls	r2, r3, r2, ip
   154b0:	uxth	ip, r2
   154b4:	movw	r2, #6299	; 0x189b
   154b8:	movt	r2, #2
   154bc:	add	r2, r2, ip, lsl #1
   154c0:	ldrh	r2, [r2]
   154c4:	strh	r2, [r1, #-2]!
   154c8:	add	r2, r3, #48	; 0x30
   154cc:	strb	r2, [r1, #-1]
   154d0:	bx	lr
   154d4:	mov	r3, ip
   154d8:	uxth	ip, r3
   154dc:	movw	r3, #34079	; 0x851f
   154e0:	movt	r3, #20971	; 0x51eb
   154e4:	umull	r3, r2, ip, r3
   154e8:	lsr	r2, r2, #5
   154ec:	mov	r3, #100	; 0x64
   154f0:	mls	r2, r2, r3, ip
   154f4:	movw	r3, #6299	; 0x189b
   154f8:	movt	r3, #2
   154fc:	add	r2, r3, r2, lsl #1
   15500:	ldrh	r2, [r2]
   15504:	strh	r2, [r1, #-2]
   15508:	bx	lr
   1550c:	mov	r3, ip
   15510:	add	r2, r3, #48	; 0x30
   15514:	strb	r2, [r1, #-1]
   15518:	bx	lr

0001551c <flatcc_json_printer_uint32@@Base>:
   1551c:	push	{r4, sl, fp, lr}
   15520:	add	fp, sp, #8
   15524:	mov	r2, r1
   15528:	ldr	r1, [r0, #20]
   1552c:	mov	r4, r0
   15530:	mov	r0, r2
   15534:	bl	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   15538:	ldr	r1, [r4, #20]
   1553c:	add	r0, r1, r0
   15540:	str	r0, [r4, #20]
   15544:	pop	{r4, sl, fp, pc}
   15548:	mov	ip, r0
   1554c:	movw	r0, #10000	; 0x2710
   15550:	cmp	ip, r0
   15554:	bcc	15588 <flatcc_json_printer_uint32@@Base+0x6c>
   15558:	movw	r0, #38528	; 0x9680
   1555c:	movt	r0, #152	; 0x98
   15560:	cmp	ip, r0
   15564:	bcc	155b4 <flatcc_json_printer_uint32@@Base+0x98>
   15568:	movw	r0, #51712	; 0xca00
   1556c:	movt	r0, #15258	; 0x3b9a
   15570:	cmp	ip, r0
   15574:	bcc	15724 <flatcc_json_printer_uint32@@Base+0x208>
   15578:	mov	r0, #0
   1557c:	strb	r0, [r1, #10]!
   15580:	mov	r0, #10
   15584:	b	155f0 <flatcc_json_printer_uint32@@Base+0xd4>
   15588:	cmp	ip, #100	; 0x64
   1558c:	bcc	155d4 <flatcc_json_printer_uint32@@Base+0xb8>
   15590:	lsr	r3, ip, #3
   15594:	mov	r0, #3
   15598:	cmp	r3, #124	; 0x7c
   1559c:	movwhi	r0, #4
   155a0:	mov	r3, #0
   155a4:	tst	r0, #1
   155a8:	strb	r3, [r1, r0]!
   155ac:	beq	155f0 <flatcc_json_printer_uint32@@Base+0xd4>
   155b0:	b	15770 <flatcc_json_printer_uint32@@Base+0x254>
   155b4:	movw	r0, #16960	; 0x4240
   155b8:	movt	r0, #15
   155bc:	cmp	ip, r0
   155c0:	bcc	1574c <flatcc_json_printer_uint32@@Base+0x230>
   155c4:	mov	r0, #0
   155c8:	strb	r0, [r1, #7]!
   155cc:	mov	r0, #7
   155d0:	b	15770 <flatcc_json_printer_uint32@@Base+0x254>
   155d4:	mov	r0, #1
   155d8:	cmp	ip, #9
   155dc:	movwhi	r0, #2
   155e0:	mov	r3, #0
   155e4:	tst	r0, #1
   155e8:	strb	r3, [r1, r0]!
   155ec:	bne	15770 <flatcc_json_printer_uint32@@Base+0x254>
   155f0:	lsr	r2, r0, #1
   155f4:	orr	r2, r2, r0, lsl #3
   155f8:	eor	r3, r2, #4
   155fc:	sbfx	r2, r3, #0, #4
   15600:	cmp	r2, #0
   15604:	blt	15720 <flatcc_json_printer_uint32@@Base+0x204>
   15608:	and	r2, r3, #15
   1560c:	add	r3, pc, #0
   15610:	ldr	pc, [r3, r2, lsl #2]
   15614:	andeq	r5, r1, r4, ror #12
   15618:	andeq	r5, r1, r4, lsr r6
   1561c:	andeq	r5, r1, r0, lsr #14
   15620:	andeq	r5, r1, r0, lsr #14
   15624:	andeq	r5, r1, r0, lsr #14
   15628:	strdeq	r5, [r1], -r4
   1562c:	andeq	r5, r1, r4, asr #13
   15630:	muleq	r1, r4, r6
   15634:	movw	r2, #34079	; 0x851f
   15638:	movt	r2, #20971	; 0x51eb
   1563c:	umull	r2, r3, ip, r2
   15640:	lsr	r2, r3, #5
   15644:	mov	r3, #100	; 0x64
   15648:	mls	ip, r2, r3, ip
   1564c:	movw	r3, #6299	; 0x189b
   15650:	movt	r3, #2
   15654:	add	r3, r3, ip, lsl #1
   15658:	mov	ip, r2
   1565c:	ldrh	r3, [r3]
   15660:	strh	r3, [r1, #-2]!
   15664:	movw	r2, #34079	; 0x851f
   15668:	movt	r2, #20971	; 0x51eb
   1566c:	umull	r2, r3, ip, r2
   15670:	lsr	r2, r3, #5
   15674:	mov	r3, #100	; 0x64
   15678:	mls	ip, r2, r3, ip
   1567c:	movw	r3, #6299	; 0x189b
   15680:	movt	r3, #2
   15684:	add	r3, r3, ip, lsl #1
   15688:	mov	ip, r2
   1568c:	ldrh	r3, [r3]
   15690:	strh	r3, [r1, #-2]!
   15694:	movw	r2, #34079	; 0x851f
   15698:	movt	r2, #20971	; 0x51eb
   1569c:	umull	r2, r3, ip, r2
   156a0:	lsr	r2, r3, #5
   156a4:	mov	r3, #100	; 0x64
   156a8:	mls	ip, r2, r3, ip
   156ac:	movw	r3, #6299	; 0x189b
   156b0:	movt	r3, #2
   156b4:	add	r3, r3, ip, lsl #1
   156b8:	mov	ip, r2
   156bc:	ldrh	r3, [r3]
   156c0:	strh	r3, [r1, #-2]!
   156c4:	movw	r2, #34079	; 0x851f
   156c8:	movt	r2, #20971	; 0x51eb
   156cc:	umull	r2, r3, ip, r2
   156d0:	lsr	r2, r3, #5
   156d4:	mov	r3, #100	; 0x64
   156d8:	mls	ip, r2, r3, ip
   156dc:	movw	r3, #6299	; 0x189b
   156e0:	movt	r3, #2
   156e4:	add	r3, r3, ip, lsl #1
   156e8:	mov	ip, r2
   156ec:	ldrh	r3, [r3]
   156f0:	strh	r3, [r1, #-2]!
   156f4:	movw	r2, #34079	; 0x851f
   156f8:	movt	r2, #20971	; 0x51eb
   156fc:	umull	r2, r3, ip, r2
   15700:	lsr	r2, r3, #5
   15704:	mov	r3, #100	; 0x64
   15708:	mls	r2, r2, r3, ip
   1570c:	movw	r3, #6299	; 0x189b
   15710:	movt	r3, #2
   15714:	add	r2, r3, r2, lsl #1
   15718:	ldrh	r2, [r2]
   1571c:	strh	r2, [r1, #-2]
   15720:	bx	lr
   15724:	movw	r3, #57599	; 0xe0ff
   15728:	mov	r0, #8
   1572c:	movt	r3, #1525	; 0x5f5
   15730:	cmp	ip, r3
   15734:	movwhi	r0, #9
   15738:	mov	r3, #0
   1573c:	tst	r0, #1
   15740:	strb	r3, [r1, r0]!
   15744:	beq	155f0 <flatcc_json_printer_uint32@@Base+0xd4>
   15748:	b	15770 <flatcc_json_printer_uint32@@Base+0x254>
   1574c:	movw	r3, #34463	; 0x869f
   15750:	mov	r0, #5
   15754:	movt	r3, #1
   15758:	cmp	ip, r3
   1575c:	movwhi	r0, #6
   15760:	mov	r3, #0
   15764:	tst	r0, #1
   15768:	strb	r3, [r1, r0]!
   1576c:	beq	155f0 <flatcc_json_printer_uint32@@Base+0xd4>
   15770:	add	r3, r0, #7
   15774:	ubfx	r2, r3, #1, #3
   15778:	orr	r3, r2, r3, lsl #3
   1577c:	sbfx	r2, r3, #0, #4
   15780:	cmp	r2, #0
   15784:	bxlt	lr
   15788:	and	r2, r3, #15
   1578c:	add	r3, pc, #0
   15790:	ldr	pc, [r3, r2, lsl #2]
   15794:			; <UNDEFINED> instruction: 0x000157b4
   15798:	andeq	r5, r1, r0, lsr #14
   1579c:	andeq	r5, r1, r0, lsr #14
   157a0:	andeq	r5, r1, r0, lsr #14
   157a4:	andeq	r5, r1, r4, ror r8
   157a8:	andeq	r5, r1, r4, asr #16
   157ac:	andeq	r5, r1, r4, lsl r8
   157b0:	andeq	r5, r1, r4, ror #15
   157b4:	movw	r2, #34079	; 0x851f
   157b8:	movt	r2, #20971	; 0x51eb
   157bc:	umull	r2, r3, ip, r2
   157c0:	lsr	r2, r3, #5
   157c4:	mov	r3, #100	; 0x64
   157c8:	mls	ip, r2, r3, ip
   157cc:	movw	r3, #6299	; 0x189b
   157d0:	movt	r3, #2
   157d4:	add	r3, r3, ip, lsl #1
   157d8:	mov	ip, r2
   157dc:	ldrh	r3, [r3]
   157e0:	strh	r3, [r1, #-2]!
   157e4:	movw	r2, #34079	; 0x851f
   157e8:	movt	r2, #20971	; 0x51eb
   157ec:	umull	r2, r3, ip, r2
   157f0:	lsr	r2, r3, #5
   157f4:	mov	r3, #100	; 0x64
   157f8:	mls	ip, r2, r3, ip
   157fc:	movw	r3, #6299	; 0x189b
   15800:	movt	r3, #2
   15804:	add	r3, r3, ip, lsl #1
   15808:	mov	ip, r2
   1580c:	ldrh	r3, [r3]
   15810:	strh	r3, [r1, #-2]!
   15814:	movw	r2, #34079	; 0x851f
   15818:	movt	r2, #20971	; 0x51eb
   1581c:	umull	r2, r3, ip, r2
   15820:	lsr	r2, r3, #5
   15824:	mov	r3, #100	; 0x64
   15828:	mls	ip, r2, r3, ip
   1582c:	movw	r3, #6299	; 0x189b
   15830:	movt	r3, #2
   15834:	add	r3, r3, ip, lsl #1
   15838:	mov	ip, r2
   1583c:	ldrh	r3, [r3]
   15840:	strh	r3, [r1, #-2]!
   15844:	movw	r2, #34079	; 0x851f
   15848:	movt	r2, #20971	; 0x51eb
   1584c:	umull	r2, r3, ip, r2
   15850:	lsr	r2, r3, #5
   15854:	mov	r3, #100	; 0x64
   15858:	mls	ip, r2, r3, ip
   1585c:	movw	r3, #6299	; 0x189b
   15860:	movt	r3, #2
   15864:	add	r3, r3, ip, lsl #1
   15868:	mov	ip, r2
   1586c:	ldrh	r3, [r3]
   15870:	strh	r3, [r1, #-2]!
   15874:	add	r2, ip, #48	; 0x30
   15878:	strb	r2, [r1, #-1]
   1587c:	bx	lr

00015880 <flatcc_json_printer_uint64@@Base>:
   15880:	push	{r4, sl, fp, lr}
   15884:	add	fp, sp, #8
   15888:	mov	r1, r3
   1588c:	mov	r3, r2
   15890:	ldr	r2, [r0, #20]
   15894:	mov	r4, r0
   15898:	mov	r0, r3
   1589c:	bl	158b0 <flatcc_json_printer_uint64@@Base+0x30>
   158a0:	ldr	r1, [r4, #20]
   158a4:	add	r0, r1, r0
   158a8:	str	r0, [r4, #20]
   158ac:	pop	{r4, sl, fp, pc}
   158b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   158b4:	add	fp, sp, #24
   158b8:	mov	r7, r0
   158bc:	movw	r0, #51711	; 0xc9ff
   158c0:	mov	r4, r2
   158c4:	movt	r0, #15258	; 0x3b9a
   158c8:	subs	r0, r0, r7
   158cc:	rscs	r0, r1, #0
   158d0:	bcc	158e4 <flatcc_json_printer_uint64@@Base+0x64>
   158d4:	mov	r0, r7
   158d8:	mov	r1, r4
   158dc:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   158e0:	b	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   158e4:	mov	r6, r1
   158e8:	movw	r1, #40960	; 0xa000
   158ec:	movw	r0, #2328	; 0x918
   158f0:	movt	r1, #20082	; 0x4e72
   158f4:	subs	r1, r7, r1
   158f8:	sbcs	r0, r6, r0
   158fc:	bcc	1596c <flatcc_json_printer_uint64@@Base+0xec>
   15900:	movw	r1, #0
   15904:	movw	r0, #34546	; 0x86f2
   15908:	movt	r1, #28609	; 0x6fc1
   1590c:	movt	r0, #35	; 0x23
   15910:	subs	r1, r7, r1
   15914:	sbcs	r0, r6, r0
   15918:	bcc	15b20 <flatcc_json_printer_uint64@@Base+0x2a0>
   1591c:	movw	r1, #0
   15920:	movw	r0, #46771	; 0xb6b3
   15924:	movt	r1, #42852	; 0xa764
   15928:	movt	r0, #3552	; 0xde0
   1592c:	subs	r1, r7, r1
   15930:	sbcs	r0, r6, r0
   15934:	bcc	15db0 <flatcc_json_printer_uint64@@Base+0x530>
   15938:	movw	r1, #65535	; 0xffff
   1593c:	movw	r0, #8964	; 0x2304
   15940:	mov	r8, #19
   15944:	movt	r1, #35303	; 0x89e7
   15948:	movt	r0, #35527	; 0x8ac7
   1594c:	subs	r1, r1, r7
   15950:	sbcs	r0, r0, r6
   15954:	movwcc	r8, #20
   15958:	mov	r0, #0
   1595c:	tst	r8, #1
   15960:	strb	r0, [r4, r8]!
   15964:	bne	159a8 <flatcc_json_printer_uint64@@Base+0x128>
   15968:	b	15b74 <flatcc_json_printer_uint64@@Base+0x2f4>
   1596c:	movw	r0, #59392	; 0xe800
   15970:	movt	r0, #18550	; 0x4876
   15974:	subs	r0, r7, r0
   15978:	sbcs	r0, r6, #23
   1597c:	bcc	15b4c <flatcc_json_printer_uint64@@Base+0x2cc>
   15980:	movw	r0, #4095	; 0xfff
   15984:	mov	r8, #12
   15988:	movt	r0, #54437	; 0xd4a5
   1598c:	subs	r0, r0, r7
   15990:	rscs	r0, r6, #232	; 0xe8
   15994:	movwcc	r8, #13
   15998:	mov	r0, #0
   1599c:	tst	r8, #1
   159a0:	strb	r0, [r4, r8]!
   159a4:	beq	15b74 <flatcc_json_printer_uint64@@Base+0x2f4>
   159a8:	sub	r0, r8, #11
   159ac:	cmp	r0, #8
   159b0:	bhi	15d04 <flatcc_json_printer_uint64@@Base+0x484>
   159b4:	add	r1, pc, #0
   159b8:	ldr	pc, [r1, r0, lsl #2]
   159bc:			; <UNDEFINED> instruction: 0x00015ab8
   159c0:	andeq	r5, r1, r4, lsl #26
   159c4:	andeq	r5, r1, r0, lsl #21
   159c8:	andeq	r5, r1, r4, lsl #26
   159cc:	andeq	r5, r1, r8, asr #20
   159d0:	andeq	r5, r1, r4, lsl #26
   159d4:	andeq	r5, r1, r0, lsl sl
   159d8:	andeq	r5, r1, r4, lsl #26
   159dc:	andeq	r5, r1, r0, ror #19
   159e0:	mov	r0, r7
   159e4:	mov	r1, r6
   159e8:	mov	r2, #100	; 0x64
   159ec:	mov	r3, #0
   159f0:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   159f4:	mov	r7, r0
   159f8:	movw	r0, #6299	; 0x189b
   159fc:	mov	r6, r1
   15a00:	movt	r0, #2
   15a04:	add	r0, r0, r2, lsl #1
   15a08:	ldrh	r0, [r0]
   15a0c:	strh	r0, [r4, #-2]!
   15a10:	mov	r0, r7
   15a14:	mov	r1, r6
   15a18:	mov	r2, #100	; 0x64
   15a1c:	mov	r3, #0
   15a20:	mov	r5, #100	; 0x64
   15a24:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15a28:	movw	r2, #6299	; 0x189b
   15a2c:	mov	r6, r1
   15a30:	mls	r1, r0, r5, r7
   15a34:	mov	r7, r0
   15a38:	movt	r2, #2
   15a3c:	add	r1, r2, r1, lsl #1
   15a40:	ldrh	r1, [r1]
   15a44:	strh	r1, [r4, #-2]!
   15a48:	mov	r0, r7
   15a4c:	mov	r1, r6
   15a50:	mov	r2, #100	; 0x64
   15a54:	mov	r3, #0
   15a58:	mov	r5, #100	; 0x64
   15a5c:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15a60:	movw	r2, #6299	; 0x189b
   15a64:	mov	r6, r1
   15a68:	mls	r1, r0, r5, r7
   15a6c:	mov	r7, r0
   15a70:	movt	r2, #2
   15a74:	add	r1, r2, r1, lsl #1
   15a78:	ldrh	r1, [r1]
   15a7c:	strh	r1, [r4, #-2]!
   15a80:	mov	r0, r7
   15a84:	mov	r1, r6
   15a88:	mov	r2, #100	; 0x64
   15a8c:	mov	r3, #0
   15a90:	mov	r5, #100	; 0x64
   15a94:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15a98:	movw	r2, #6299	; 0x189b
   15a9c:	mov	r6, r1
   15aa0:	mls	r1, r0, r5, r7
   15aa4:	mov	r7, r0
   15aa8:	movt	r2, #2
   15aac:	add	r1, r2, r1, lsl #1
   15ab0:	ldrh	r1, [r1]
   15ab4:	strh	r1, [r4, #-2]!
   15ab8:	mov	r0, r7
   15abc:	mov	r1, r6
   15ac0:	mov	r2, #100	; 0x64
   15ac4:	mov	r3, #0
   15ac8:	mov	r9, #100	; 0x64
   15acc:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15ad0:	mov	r2, #10
   15ad4:	mov	r3, #0
   15ad8:	mov	r5, r0
   15adc:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15ae0:	orr	r0, r2, #48	; 0x30
   15ae4:	movw	r1, #6299	; 0x189b
   15ae8:	mov	r2, #1000	; 0x3e8
   15aec:	mov	r3, #0
   15af0:	strb	r0, [r4, #-3]!
   15af4:	mls	r0, r5, r9, r7
   15af8:	movt	r1, #2
   15afc:	add	r0, r1, r0, lsl #1
   15b00:	mov	r1, r6
   15b04:	ldrh	r0, [r0]
   15b08:	strh	r0, [r4, #1]
   15b0c:	mov	r0, r7
   15b10:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15b14:	mov	r7, r0
   15b18:	mov	r6, r1
   15b1c:	b	15d04 <flatcc_json_printer_uint64@@Base+0x484>
   15b20:	movw	r1, #32768	; 0x8000
   15b24:	movw	r0, #36222	; 0x8d7e
   15b28:	movt	r1, #42182	; 0xa4c6
   15b2c:	movt	r0, #3
   15b30:	subs	r1, r7, r1
   15b34:	sbcs	r0, r6, r0
   15b38:	bcc	15de4 <flatcc_json_printer_uint64@@Base+0x564>
   15b3c:	mov	r0, #0
   15b40:	mov	r8, #16
   15b44:	strb	r0, [r4, #16]!
   15b48:	b	15c24 <flatcc_json_printer_uint64@@Base+0x3a4>
   15b4c:	movw	r0, #58367	; 0xe3ff
   15b50:	mov	r8, #10
   15b54:	movt	r0, #21515	; 0x540b
   15b58:	subs	r0, r0, r7
   15b5c:	rscs	r0, r6, #2
   15b60:	movwcc	r8, #11
   15b64:	mov	r0, #0
   15b68:	tst	r8, #1
   15b6c:	strb	r0, [r4, r8]!
   15b70:	bne	159a8 <flatcc_json_printer_uint64@@Base+0x128>
   15b74:	sub	r0, r8, #10
   15b78:	cmp	r0, #10
   15b7c:	bhi	15d04 <flatcc_json_printer_uint64@@Base+0x484>
   15b80:	add	r1, pc, #0
   15b84:	ldr	pc, [r1, r0, lsl #2]
   15b88:	andeq	r5, r1, ip, asr #25
   15b8c:	andeq	r5, r1, r4, lsl #26
   15b90:	muleq	r1, r4, ip
   15b94:	andeq	r5, r1, r4, lsl #26
   15b98:	andeq	r5, r1, ip, asr ip
   15b9c:	andeq	r5, r1, r4, lsl #26
   15ba0:	andeq	r5, r1, r4, lsr #24
   15ba4:	andeq	r5, r1, r4, lsl #26
   15ba8:	andeq	r5, r1, ip, ror #23
   15bac:	andeq	r5, r1, r4, lsl #26
   15bb0:			; <UNDEFINED> instruction: 0x00015bb4
   15bb4:	mov	r0, r7
   15bb8:	mov	r1, r6
   15bbc:	mov	r2, #100	; 0x64
   15bc0:	mov	r3, #0
   15bc4:	mov	r5, #100	; 0x64
   15bc8:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15bcc:	movw	r2, #6299	; 0x189b
   15bd0:	mov	r6, r1
   15bd4:	mls	r1, r0, r5, r7
   15bd8:	mov	r7, r0
   15bdc:	movt	r2, #2
   15be0:	add	r1, r2, r1, lsl #1
   15be4:	ldrh	r1, [r1]
   15be8:	strh	r1, [r4, #-2]!
   15bec:	mov	r0, r7
   15bf0:	mov	r1, r6
   15bf4:	mov	r2, #100	; 0x64
   15bf8:	mov	r3, #0
   15bfc:	mov	r5, #100	; 0x64
   15c00:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15c04:	movw	r2, #6299	; 0x189b
   15c08:	mov	r6, r1
   15c0c:	mls	r1, r0, r5, r7
   15c10:	mov	r7, r0
   15c14:	movt	r2, #2
   15c18:	add	r1, r2, r1, lsl #1
   15c1c:	ldrh	r1, [r1]
   15c20:	strh	r1, [r4, #-2]!
   15c24:	mov	r0, r7
   15c28:	mov	r1, r6
   15c2c:	mov	r2, #100	; 0x64
   15c30:	mov	r3, #0
   15c34:	mov	r5, #100	; 0x64
   15c38:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15c3c:	movw	r2, #6299	; 0x189b
   15c40:	mov	r6, r1
   15c44:	mls	r1, r0, r5, r7
   15c48:	mov	r7, r0
   15c4c:	movt	r2, #2
   15c50:	add	r1, r2, r1, lsl #1
   15c54:	ldrh	r1, [r1]
   15c58:	strh	r1, [r4, #-2]!
   15c5c:	mov	r0, r7
   15c60:	mov	r1, r6
   15c64:	mov	r2, #100	; 0x64
   15c68:	mov	r3, #0
   15c6c:	mov	r5, #100	; 0x64
   15c70:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15c74:	movw	r2, #6299	; 0x189b
   15c78:	mov	r6, r1
   15c7c:	mls	r1, r0, r5, r7
   15c80:	mov	r7, r0
   15c84:	movt	r2, #2
   15c88:	add	r1, r2, r1, lsl #1
   15c8c:	ldrh	r1, [r1]
   15c90:	strh	r1, [r4, #-2]!
   15c94:	mov	r0, r7
   15c98:	mov	r1, r6
   15c9c:	mov	r2, #100	; 0x64
   15ca0:	mov	r3, #0
   15ca4:	mov	r5, #100	; 0x64
   15ca8:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15cac:	movw	r2, #6299	; 0x189b
   15cb0:	mov	r6, r1
   15cb4:	mls	r1, r0, r5, r7
   15cb8:	mov	r7, r0
   15cbc:	movt	r2, #2
   15cc0:	add	r1, r2, r1, lsl #1
   15cc4:	ldrh	r1, [r1]
   15cc8:	strh	r1, [r4, #-2]!
   15ccc:	mov	r0, r7
   15cd0:	mov	r1, r6
   15cd4:	mov	r2, #100	; 0x64
   15cd8:	mov	r3, #0
   15cdc:	mov	r5, #100	; 0x64
   15ce0:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15ce4:	movw	r2, #6299	; 0x189b
   15ce8:	mov	r6, r1
   15cec:	mls	r1, r0, r5, r7
   15cf0:	mov	r7, r0
   15cf4:	movt	r2, #2
   15cf8:	add	r1, r2, r1, lsl #1
   15cfc:	ldrh	r1, [r1]
   15d00:	strh	r1, [r4, #-2]!
   15d04:	mov	r0, r7
   15d08:	mov	r1, r6
   15d0c:	mov	r2, #100	; 0x64
   15d10:	mov	r3, #0
   15d14:	mov	r5, #100	; 0x64
   15d18:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15d1c:	mls	r2, r0, r5, r7
   15d20:	movw	r5, #6299	; 0x189b
   15d24:	mov	r3, #0
   15d28:	movt	r5, #2
   15d2c:	add	r2, r5, r2, lsl #1
   15d30:	ldrh	r2, [r2]
   15d34:	strh	r2, [r4, #-2]
   15d38:	mov	r2, #100	; 0x64
   15d3c:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15d40:	add	r0, r5, r2, lsl #1
   15d44:	mov	r1, r6
   15d48:	movw	r2, #10000	; 0x2710
   15d4c:	mov	r3, #0
   15d50:	ldrh	r0, [r0]
   15d54:	strh	r0, [r4, #-4]
   15d58:	mov	r0, r7
   15d5c:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15d60:	mov	r2, #100	; 0x64
   15d64:	mov	r3, #0
   15d68:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15d6c:	add	r0, r5, r2, lsl #1
   15d70:	movw	r2, #16960	; 0x4240
   15d74:	mov	r1, r6
   15d78:	mov	r3, #0
   15d7c:	ldrh	r0, [r0]
   15d80:	movt	r2, #15
   15d84:	strh	r0, [r4, #-6]
   15d88:	mov	r0, r7
   15d8c:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15d90:	mov	r2, #100	; 0x64
   15d94:	mov	r3, #0
   15d98:	bl	20c14 <flatcc_json_printer_clear@@Base+0x198>
   15d9c:	add	r0, r5, r2, lsl #1
   15da0:	ldrh	r0, [r0]
   15da4:	strh	r0, [r4, #-8]
   15da8:	mov	r0, r8
   15dac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15db0:	movw	r1, #65535	; 0xffff
   15db4:	movw	r0, #17784	; 0x4578
   15db8:	mov	r8, #17
   15dbc:	movt	r1, #23945	; 0x5d89
   15dc0:	movt	r0, #355	; 0x163
   15dc4:	subs	r1, r1, r7
   15dc8:	sbcs	r0, r0, r6
   15dcc:	movwcc	r8, #18
   15dd0:	mov	r0, #0
   15dd4:	tst	r8, #1
   15dd8:	strb	r0, [r4, r8]!
   15ddc:	bne	159a8 <flatcc_json_printer_uint64@@Base+0x128>
   15de0:	b	15b74 <flatcc_json_printer_uint64@@Base+0x2f4>
   15de4:	movw	r1, #16383	; 0x3fff
   15de8:	movw	r0, #23283	; 0x5af3
   15dec:	mov	r8, #14
   15df0:	movt	r1, #4218	; 0x107a
   15df4:	subs	r1, r1, r7
   15df8:	sbcs	r0, r0, r6
   15dfc:	movwcc	r8, #15
   15e00:	mov	r0, #0
   15e04:	tst	r8, #1
   15e08:	strb	r0, [r4, r8]!
   15e0c:	bne	159a8 <flatcc_json_printer_uint64@@Base+0x128>
   15e10:	b	15b74 <flatcc_json_printer_uint64@@Base+0x2f4>

00015e14 <flatcc_json_printer_int8@@Base>:
   15e14:	push	{r4, sl, fp, lr}
   15e18:	add	fp, sp, #8
   15e1c:	ubfx	ip, r1, #7, #1
   15e20:	ldr	r4, [r0, #20]
   15e24:	cmn	r1, #1
   15e28:	movle	r2, #45	; 0x2d
   15e2c:	rsble	r1, r1, #0
   15e30:	strble	r2, [r4], #1
   15e34:	uxtb	r2, r1
   15e38:	cmp	r2, #100	; 0x64
   15e3c:	bcc	15e88 <flatcc_json_printer_int8@@Base+0x74>
   15e40:	mov	r1, #0
   15e44:	strb	r1, [r4, #3]
   15e48:	movw	r1, #34079	; 0x851f
   15e4c:	movt	r1, #20971	; 0x51eb
   15e50:	umull	r1, lr, r2, r1
   15e54:	mov	r1, #48	; 0x30
   15e58:	orr	r1, r1, lr, lsr #5
   15e5c:	lsr	lr, lr, #5
   15e60:	strb	r1, [r4]
   15e64:	mov	r1, #100	; 0x64
   15e68:	mls	r1, lr, r1, r2
   15e6c:	movw	r2, #6299	; 0x189b
   15e70:	movt	r2, #2
   15e74:	add	r1, r2, r1, lsl #1
   15e78:	ldrh	r1, [r1]
   15e7c:	strh	r1, [r4, #1]
   15e80:	mov	r1, #3
   15e84:	b	15ee0 <flatcc_json_printer_int8@@Base+0xcc>
   15e88:	cmp	r2, #10
   15e8c:	bcc	15ecc <flatcc_json_printer_int8@@Base+0xb8>
   15e90:	mov	r1, #0
   15e94:	strb	r1, [r4, #2]
   15e98:	movw	r1, #34079	; 0x851f
   15e9c:	movt	r1, #20971	; 0x51eb
   15ea0:	umull	r1, r3, r2, r1
   15ea4:	lsr	r1, r3, #5
   15ea8:	mov	r3, #100	; 0x64
   15eac:	mls	r1, r1, r3, r2
   15eb0:	movw	r2, #6299	; 0x189b
   15eb4:	movt	r2, #2
   15eb8:	add	r1, r2, r1, lsl #1
   15ebc:	ldrh	r1, [r1]
   15ec0:	strh	r1, [r4]
   15ec4:	mov	r1, #2
   15ec8:	b	15ee0 <flatcc_json_printer_int8@@Base+0xcc>
   15ecc:	mov	r2, #0
   15ed0:	add	r1, r1, #48	; 0x30
   15ed4:	strb	r2, [r4, #1]
   15ed8:	strb	r1, [r4]
   15edc:	mov	r1, #1
   15ee0:	ldr	r2, [r0, #20]
   15ee4:	add	r1, r1, ip
   15ee8:	add	r1, r2, r1
   15eec:	str	r1, [r0, #20]
   15ef0:	pop	{r4, sl, fp, pc}

00015ef4 <flatcc_json_printer_int16@@Base>:
   15ef4:	push	{r4, r5, fp, lr}
   15ef8:	add	fp, sp, #8
   15efc:	ubfx	r5, r1, #15, #1
   15f00:	ldr	r2, [r0, #20]
   15f04:	cmn	r1, #1
   15f08:	mov	r4, r0
   15f0c:	movle	r0, #45	; 0x2d
   15f10:	rsble	r1, r1, #0
   15f14:	strble	r0, [r2], #1
   15f18:	uxth	r0, r1
   15f1c:	mov	r1, r2
   15f20:	bl	153a8 <flatcc_json_printer_uint16@@Base+0x2c>
   15f24:	ldr	r1, [r4, #20]
   15f28:	add	r0, r0, r5
   15f2c:	add	r0, r1, r0
   15f30:	str	r0, [r4, #20]
   15f34:	pop	{r4, r5, fp, pc}

00015f38 <flatcc_json_printer_int32@@Base>:
   15f38:	push	{r4, r5, fp, lr}
   15f3c:	add	fp, sp, #8
   15f40:	mov	r2, r1
   15f44:	lsr	r5, r1, #31
   15f48:	ldr	r1, [r0, #20]
   15f4c:	mov	r4, r0
   15f50:	cmn	r2, #1
   15f54:	movle	r0, #45	; 0x2d
   15f58:	rsble	r2, r2, #0
   15f5c:	strble	r0, [r1], #1
   15f60:	mov	r0, r2
   15f64:	bl	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   15f68:	ldr	r1, [r4, #20]
   15f6c:	add	r0, r0, r5
   15f70:	add	r0, r1, r0
   15f74:	str	r0, [r4, #20]
   15f78:	pop	{r4, r5, fp, pc}

00015f7c <flatcc_json_printer_int64@@Base>:
   15f7c:	push	{r4, r5, fp, lr}
   15f80:	add	fp, sp, #8
   15f84:	mov	r1, r3
   15f88:	mov	r3, r2
   15f8c:	ldr	r2, [r0, #20]
   15f90:	mov	r4, r0
   15f94:	lsr	r5, r1, #31
   15f98:	cmn	r1, #1
   15f9c:	bgt	15fb0 <flatcc_json_printer_int64@@Base+0x34>
   15fa0:	mov	r0, #45	; 0x2d
   15fa4:	rsbs	r3, r3, #0
   15fa8:	strb	r0, [r2], #1
   15fac:	rsc	r1, r1, #0
   15fb0:	mov	r0, r3
   15fb4:	bl	158b0 <flatcc_json_printer_uint64@@Base+0x30>
   15fb8:	ldr	r1, [r4, #20]
   15fbc:	add	r0, r0, r5
   15fc0:	add	r0, r1, r0
   15fc4:	str	r0, [r4, #20]
   15fc8:	pop	{r4, r5, fp, pc}

00015fcc <flatcc_json_printer_float@@Base>:
   15fcc:	push	{r4, sl, fp, lr}
   15fd0:	add	fp, sp, #8
   15fd4:	mov	r4, r0
   15fd8:	ldr	r0, [r0, #20]
   15fdc:	vcvt.f64.f32	d0, s0
   15fe0:	bl	13f48 <flatcc_json_printer_fmt_float@@Base+0x8>
   15fe4:	ldr	r1, [r4, #20]
   15fe8:	add	r0, r1, r0
   15fec:	str	r0, [r4, #20]
   15ff0:	pop	{r4, sl, fp, pc}

00015ff4 <flatcc_json_printer_double@@Base>:
   15ff4:	push	{r4, sl, fp, lr}
   15ff8:	add	fp, sp, #8
   15ffc:	mov	r4, r0
   16000:	ldr	r0, [r0, #20]
   16004:	bl	13f48 <flatcc_json_printer_fmt_float@@Base+0x8>
   16008:	ldr	r1, [r4, #20]
   1600c:	add	r0, r1, r0
   16010:	str	r0, [r4, #20]
   16014:	pop	{r4, sl, fp, pc}

00016018 <flatcc_json_printer_enum@@Base>:
   16018:	push	{r4, r5, r6, r7, fp, lr}
   1601c:	add	fp, sp, #16
   16020:	mov	r4, r0
   16024:	ldr	r0, [r0, #20]
   16028:	mov	r6, r1
   1602c:	mov	r1, #34	; 0x22
   16030:	mov	r5, r2
   16034:	strb	r1, [r0]
   16038:	ldrb	r2, [r4, #26]
   1603c:	ldr	r0, [r4, #20]
   16040:	ldr	r1, [r4, #16]
   16044:	cmp	r2, #0
   16048:	addeq	r0, r0, #1
   1604c:	add	r2, r0, r5
   16050:	str	r0, [r4, #20]
   16054:	cmp	r2, r1
   16058:	bcc	160cc <flatcc_json_printer_enum@@Base+0xb4>
   1605c:	cmp	r0, r1
   16060:	bcc	1607c <flatcc_json_printer_enum@@Base+0x64>
   16064:	ldr	r2, [r4, #44]	; 0x2c
   16068:	mov	r0, r4
   1606c:	mov	r1, #0
   16070:	blx	r2
   16074:	ldr	r1, [r4, #16]
   16078:	ldr	r0, [r4, #20]
   1607c:	sub	r7, r1, r0
   16080:	cmp	r7, r5
   16084:	bcs	160cc <flatcc_json_printer_enum@@Base+0xb4>
   16088:	mov	r1, r6
   1608c:	mov	r2, r7
   16090:	bl	128b8 <memcpy@plt>
   16094:	ldr	r0, [r4, #20]
   16098:	ldr	r2, [r4, #44]	; 0x2c
   1609c:	mov	r1, #0
   160a0:	add	r0, r0, r7
   160a4:	str	r0, [r4, #20]
   160a8:	mov	r0, r4
   160ac:	blx	r2
   160b0:	ldr	r1, [r4, #16]
   160b4:	ldr	r0, [r4, #20]
   160b8:	sub	r5, r5, r7
   160bc:	add	r6, r6, r7
   160c0:	sub	r7, r1, r0
   160c4:	cmp	r5, r7
   160c8:	bhi	16088 <flatcc_json_printer_enum@@Base+0x70>
   160cc:	mov	r1, r6
   160d0:	mov	r2, r5
   160d4:	bl	128b8 <memcpy@plt>
   160d8:	ldr	r0, [r4, #20]
   160dc:	add	r1, r0, r5
   160e0:	str	r1, [r4, #20]
   160e4:	mov	r1, #34	; 0x22
   160e8:	strb	r1, [r0, r5]
   160ec:	ldrb	r0, [r4, #26]
   160f0:	ldr	r1, [r4, #20]
   160f4:	cmp	r0, #0
   160f8:	addeq	r1, r1, #1
   160fc:	str	r1, [r4, #20]
   16100:	pop	{r4, r5, r6, r7, fp, pc}

00016104 <flatcc_json_printer_delimit_enum_flags@@Base>:
   16104:	ldrb	ip, [r0, #26]
   16108:	ldr	r3, [r0, #20]
   1610c:	mov	r2, #34	; 0x22
   16110:	cmp	r1, #0
   16114:	movwne	r1, #1
   16118:	strb	r2, [r3]
   1611c:	clz	r2, ip
   16120:	lsr	r2, r2, #5
   16124:	orr	r1, r1, r2
   16128:	ldr	r2, [r0, #20]
   1612c:	add	r1, r2, r1
   16130:	str	r1, [r0, #20]
   16134:	bx	lr

00016138 <flatcc_json_printer_enum_flag@@Base>:
   16138:	push	{r4, r5, r6, r7, fp, lr}
   1613c:	add	fp, sp, #16
   16140:	mov	r5, r0
   16144:	ldr	r0, [r0, #20]
   16148:	mov	r6, r2
   1614c:	mov	r2, #32
   16150:	cmp	r1, #0
   16154:	mov	r4, r3
   16158:	strb	r2, [r0]
   1615c:	ldr	r0, [r5, #20]
   16160:	ldr	r2, [r5, #16]
   16164:	addgt	r0, r0, #1
   16168:	add	r1, r0, r3
   1616c:	str	r0, [r5, #20]
   16170:	cmp	r1, r2
   16174:	bcc	161e8 <flatcc_json_printer_enum_flag@@Base+0xb0>
   16178:	cmp	r0, r2
   1617c:	bcc	16198 <flatcc_json_printer_enum_flag@@Base+0x60>
   16180:	ldr	r2, [r5, #44]	; 0x2c
   16184:	mov	r0, r5
   16188:	mov	r1, #0
   1618c:	blx	r2
   16190:	ldr	r2, [r5, #16]
   16194:	ldr	r0, [r5, #20]
   16198:	sub	r7, r2, r0
   1619c:	cmp	r7, r4
   161a0:	bcs	161e8 <flatcc_json_printer_enum_flag@@Base+0xb0>
   161a4:	mov	r1, r6
   161a8:	mov	r2, r7
   161ac:	bl	128b8 <memcpy@plt>
   161b0:	ldr	r0, [r5, #20]
   161b4:	ldr	r2, [r5, #44]	; 0x2c
   161b8:	mov	r1, #0
   161bc:	add	r0, r0, r7
   161c0:	str	r0, [r5, #20]
   161c4:	mov	r0, r5
   161c8:	blx	r2
   161cc:	ldr	r1, [r5, #16]
   161d0:	ldr	r0, [r5, #20]
   161d4:	sub	r4, r4, r7
   161d8:	add	r6, r6, r7
   161dc:	sub	r7, r1, r0
   161e0:	cmp	r4, r7
   161e4:	bhi	161a4 <flatcc_json_printer_enum_flag@@Base+0x6c>
   161e8:	mov	r1, r6
   161ec:	mov	r2, r4
   161f0:	bl	128b8 <memcpy@plt>
   161f4:	ldr	r0, [r5, #20]
   161f8:	add	r0, r0, r4
   161fc:	str	r0, [r5, #20]
   16200:	pop	{r4, r5, r6, r7, fp, pc}

00016204 <flatcc_json_printer_string_field@@Base>:
   16204:	push	{r4, r5, r6, sl, fp, lr}
   16208:	add	fp, sp, #16
   1620c:	mov	r4, r0
   16210:	mov	r0, #4
   16214:	add	r0, r0, r2, lsl #1
   16218:	ldr	r2, [r1, #8]
   1621c:	cmp	r0, r2
   16220:	popge	{r4, r5, r6, sl, fp, pc}
   16224:	ldr	r2, [r1, #4]
   16228:	add	r0, r2, r0
   1622c:	ldrh	r0, [r0]
   16230:	cmp	r0, #0
   16234:	ldrne	r2, [r1]
   16238:	addsne	r6, r2, r0
   1623c:	bne	16244 <flatcc_json_printer_string_field@@Base+0x40>
   16240:	pop	{r4, r5, r6, sl, fp, pc}
   16244:	ldr	r0, [r1, #16]
   16248:	ldr	r2, [fp, #8]
   1624c:	add	r5, r0, #1
   16250:	cmp	r0, #0
   16254:	str	r5, [r1, #16]
   16258:	ldrne	r0, [r4, #20]
   1625c:	addne	r1, r0, #1
   16260:	strne	r1, [r4, #20]
   16264:	movne	r1, #44	; 0x2c
   16268:	strbne	r1, [r0]
   1626c:	mov	r0, r4
   16270:	mov	r1, r3
   16274:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   16278:	ldr	r0, [r6]
   1627c:	ldr	r2, [r6, r0]!
   16280:	mov	r0, r4
   16284:	add	r1, r6, #4
   16288:	pop	{r4, r5, r6, sl, fp, lr}
   1628c:	b	14dd4 <flatcc_json_printer_string@@Base+0x4>
   16290:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16294:	add	fp, sp, #24
   16298:	mov	r4, r0
   1629c:	mov	r6, r1
   162a0:	ldr	r0, [r0, #20]
   162a4:	mov	r8, r2
   162a8:	ldrb	r1, [r4, #25]
   162ac:	cmp	r1, #0
   162b0:	beq	16370 <flatcc_json_printer_string_field@@Base+0x16c>
   162b4:	add	r1, r0, #1
   162b8:	mov	r9, r4
   162bc:	str	r1, [r4, #20]
   162c0:	mov	r1, #10
   162c4:	strb	r1, [r0]
   162c8:	ldr	r1, [r9, #16]!
   162cc:	ldr	r0, [r4, #20]
   162d0:	ldrb	r2, [r9, #9]
   162d4:	ldr	r3, [r9, #16]
   162d8:	mla	r5, r3, r2, r0
   162dc:	mul	r7, r3, r2
   162e0:	cmp	r5, r1
   162e4:	bls	16354 <flatcc_json_printer_string_field@@Base+0x150>
   162e8:	cmp	r0, r1
   162ec:	bcc	16308 <flatcc_json_printer_string_field@@Base+0x104>
   162f0:	ldr	r2, [r4, #44]	; 0x2c
   162f4:	mov	r0, r4
   162f8:	mov	r1, #0
   162fc:	blx	r2
   16300:	ldr	r1, [r4, #16]
   16304:	ldr	r0, [r4, #20]
   16308:	sub	r5, r1, r0
   1630c:	cmp	r5, r7
   16310:	bcs	16354 <flatcc_json_printer_string_field@@Base+0x150>
   16314:	mov	r1, #32
   16318:	mov	r2, r5
   1631c:	bl	12948 <memset@plt>
   16320:	ldr	r0, [r4, #20]
   16324:	ldr	r2, [r4, #44]	; 0x2c
   16328:	mov	r1, #0
   1632c:	add	r0, r0, r5
   16330:	str	r0, [r4, #20]
   16334:	mov	r0, r4
   16338:	blx	r2
   1633c:	ldr	r1, [r4, #16]
   16340:	ldr	r0, [r4, #20]
   16344:	sub	r7, r7, r5
   16348:	sub	r5, r1, r0
   1634c:	cmp	r7, r5
   16350:	bhi	16314 <flatcc_json_printer_string_field@@Base+0x110>
   16354:	mov	r1, #32
   16358:	mov	r2, r7
   1635c:	bl	12948 <memset@plt>
   16360:	ldr	r0, [r4, #20]
   16364:	add	r0, r0, r7
   16368:	str	r0, [r4, #20]
   1636c:	b	16394 <flatcc_json_printer_string_field@@Base+0x190>
   16370:	mov	r9, r4
   16374:	ldr	r1, [r9, #16]!
   16378:	cmp	r0, r1
   1637c:	bcc	16394 <flatcc_json_printer_string_field@@Base+0x190>
   16380:	ldr	r2, [r4, #44]	; 0x2c
   16384:	mov	r0, r4
   16388:	mov	r1, #0
   1638c:	blx	r2
   16390:	ldr	r0, [r4, #20]
   16394:	mov	r1, #34	; 0x22
   16398:	strb	r1, [r0]
   1639c:	ldrb	r2, [r4, #26]
   163a0:	ldr	r0, [r4, #20]
   163a4:	ldr	r1, [r4, #16]
   163a8:	cmp	r2, #0
   163ac:	addeq	r0, r0, #1
   163b0:	add	r2, r0, r8
   163b4:	str	r0, [r4, #20]
   163b8:	cmp	r2, r1
   163bc:	bcc	16430 <flatcc_json_printer_string_field@@Base+0x22c>
   163c0:	cmp	r0, r1
   163c4:	bcc	163e0 <flatcc_json_printer_string_field@@Base+0x1dc>
   163c8:	ldr	r2, [r4, #44]	; 0x2c
   163cc:	mov	r0, r4
   163d0:	mov	r1, #0
   163d4:	blx	r2
   163d8:	ldr	r0, [r4, #20]
   163dc:	ldr	r1, [r9]
   163e0:	sub	r7, r1, r0
   163e4:	cmp	r7, r8
   163e8:	bcs	16430 <flatcc_json_printer_string_field@@Base+0x22c>
   163ec:	mov	r1, r6
   163f0:	mov	r2, r7
   163f4:	bl	128b8 <memcpy@plt>
   163f8:	ldr	r0, [r4, #20]
   163fc:	ldr	r2, [r4, #44]	; 0x2c
   16400:	mov	r1, #0
   16404:	add	r0, r0, r7
   16408:	str	r0, [r4, #20]
   1640c:	mov	r0, r4
   16410:	blx	r2
   16414:	ldr	r0, [r4, #20]
   16418:	ldr	r1, [r9]
   1641c:	sub	r8, r8, r7
   16420:	add	r6, r6, r7
   16424:	sub	r7, r1, r0
   16428:	cmp	r8, r7
   1642c:	bhi	163ec <flatcc_json_printer_string_field@@Base+0x1e8>
   16430:	mov	r1, r6
   16434:	mov	r2, r8
   16438:	bl	128b8 <memcpy@plt>
   1643c:	ldr	r0, [r4, #20]
   16440:	add	r1, r0, r8
   16444:	str	r1, [r4, #20]
   16448:	mov	r1, #34	; 0x22
   1644c:	strb	r1, [r0, r8]
   16450:	ldrb	r0, [r4, #26]
   16454:	ldr	r1, [r4, #20]
   16458:	cmp	r0, #0
   1645c:	addeq	r1, r1, #1
   16460:	add	r0, r1, #1
   16464:	str	r0, [r4, #20]
   16468:	mov	r0, #58	; 0x3a
   1646c:	strb	r0, [r1]
   16470:	mov	r1, #32
   16474:	ldr	r0, [r4, #20]
   16478:	strb	r1, [r0]
   1647c:	ldrb	r0, [r4, #25]
   16480:	ldr	r1, [r4, #20]
   16484:	cmp	r0, #0
   16488:	addne	r1, r1, #1
   1648c:	str	r1, [r4, #20]
   16490:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00016494 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   16494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16498:	add	fp, sp, #28
   1649c:	sub	sp, sp, #12
   164a0:	mov	r4, r0
   164a4:	mov	r0, #4
   164a8:	add	r0, r0, r2, lsl #1
   164ac:	ldr	r2, [r1, #8]
   164b0:	cmp	r0, r2
   164b4:	bge	16678 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e4>
   164b8:	ldr	r2, [r1, #4]
   164bc:	add	r0, r2, r0
   164c0:	ldrh	r0, [r0]
   164c4:	cmp	r0, #0
   164c8:	beq	16678 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e4>
   164cc:	ldr	r5, [fp, #12]
   164d0:	ldr	r2, [r1]
   164d4:	cmp	r5, #0
   164d8:	add	r6, r2, r0
   164dc:	movwne	r5, #1
   164e0:	cmp	r6, #0
   164e4:	beq	16678 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e4>
   164e8:	ldr	r0, [r1, #16]
   164ec:	ldr	r2, [fp, #8]
   164f0:	add	r7, r0, #1
   164f4:	cmp	r0, #0
   164f8:	str	r7, [r1, #16]
   164fc:	beq	1652c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x98>
   16500:	mov	r7, r4
   16504:	ldr	r0, [r7, #20]!
   16508:	add	r1, r0, #1
   1650c:	str	r7, [sp]
   16510:	str	r1, [r7]
   16514:	mov	r1, #44	; 0x2c
   16518:	strb	r1, [r0]
   1651c:	mov	r0, r4
   16520:	mov	r1, r3
   16524:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   16528:	b	16540 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xac>
   1652c:	mov	r0, r4
   16530:	mov	r1, r3
   16534:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   16538:	add	r0, r4, #20
   1653c:	str	r0, [sp]
   16540:	ldr	r0, [r6]
   16544:	ldr	r0, [r6, r0]!
   16548:	str	r0, [sp, #8]
   1654c:	ldr	r0, [r4, #20]
   16550:	add	r1, r0, #1
   16554:	str	r1, [r4, #20]
   16558:	mov	r1, #34	; 0x22
   1655c:	strb	r1, [r0]
   16560:	movw	r1, #43691	; 0xaaab
   16564:	ldr	r0, [sp, #8]
   16568:	movt	r1, #43690	; 0xaaaa
   1656c:	lsl	r0, r0, #2
   16570:	umull	r0, r1, r0, r1
   16574:	mov	r0, #3
   16578:	add	r0, r0, r1, lsr #1
   1657c:	ldr	r1, [r4, #16]
   16580:	bic	r7, r0, #3
   16584:	ldr	r0, [r4, #20]
   16588:	add	r2, r0, r7
   1658c:	cmp	r2, r1
   16590:	bcc	165b0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x11c>
   16594:	ldr	r2, [r4, #44]	; 0x2c
   16598:	mov	r0, r4
   1659c:	mov	r1, #0
   165a0:	blx	r2
   165a4:	ldr	r0, [r4, #20]
   165a8:	ldr	r1, [r4, #16]
   165ac:	add	r2, r0, r7
   165b0:	add	r6, r6, #4
   165b4:	cmp	r2, r1
   165b8:	bls	1664c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1b8>
   165bc:	add	sl, sp, #4
   165c0:	mov	r8, #3
   165c4:	sub	r1, r1, r0
   165c8:	bic	r7, r1, #3
   165cc:	add	r1, r7, r7, lsl #1
   165d0:	cmp	r1, #0
   165d4:	beq	16680 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1ec>
   165d8:	lsr	r9, r1, #2
   165dc:	mov	r1, r6
   165e0:	mov	r2, sl
   165e4:	mov	r3, r5
   165e8:	str	r9, [sp, #4]
   165ec:	bl	20abc <flatcc_json_printer_clear@@Base+0x40>
   165f0:	ldr	r0, [r4, #20]
   165f4:	mov	r1, #0
   165f8:	add	r0, r0, r7
   165fc:	str	r0, [r4, #20]
   16600:	ldr	r0, [sp, #8]
   16604:	sub	r0, r0, r9
   16608:	str	r0, [sp, #8]
   1660c:	mov	r0, r4
   16610:	ldr	r2, [r4, #44]	; 0x2c
   16614:	blx	r2
   16618:	ldr	r0, [sp, #8]
   1661c:	movw	r1, #43691	; 0xaaab
   16620:	add	r6, r6, r9
   16624:	movt	r1, #43690	; 0xaaaa
   16628:	lsl	r0, r0, #2
   1662c:	umull	r0, r1, r0, r1
   16630:	add	r0, r8, r1, lsr #1
   16634:	ldr	r1, [r4, #16]
   16638:	bic	r7, r0, #3
   1663c:	ldr	r0, [r4, #20]
   16640:	add	r2, r0, r7
   16644:	cmp	r2, r1
   16648:	bhi	165c4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x130>
   1664c:	orr	r3, r5, #128	; 0x80
   16650:	add	r2, sp, #8
   16654:	mov	r1, r6
   16658:	bl	20abc <flatcc_json_printer_clear@@Base+0x40>
   1665c:	ldr	r2, [sp]
   16660:	ldr	r0, [r2]
   16664:	add	r1, r0, r7
   16668:	add	r1, r1, #1
   1666c:	str	r1, [r2]
   16670:	mov	r1, #34	; 0x22
   16674:	strb	r1, [r0, r7]
   16678:	sub	sp, fp, #28
   1667c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16680:	movw	r0, #6500	; 0x1964
   16684:	movw	r1, #5422	; 0x152e
   16688:	movw	r3, #6506	; 0x196a
   1668c:	movw	r2, #277	; 0x115
   16690:	movt	r0, #2
   16694:	movt	r1, #2
   16698:	movt	r3, #2
   1669c:	bl	1299c <__assert_fail@plt>

000166a0 <flatcc_json_printer_uint8_field@@Base>:
   166a0:	push	{r4, r5, r6, sl, fp, lr}
   166a4:	add	fp, sp, #16
   166a8:	mov	r6, r0
   166ac:	mov	r0, #4
   166b0:	ldr	r5, [r1, #8]
   166b4:	add	r2, r0, r2, lsl #1
   166b8:	ldr	r0, [fp, #12]
   166bc:	cmp	r2, r5
   166c0:	bge	166e0 <flatcc_json_printer_uint8_field@@Base+0x40>
   166c4:	ldr	r5, [r1, #4]
   166c8:	add	r2, r5, r2
   166cc:	ldrh	r2, [r2]
   166d0:	cmp	r2, #0
   166d4:	ldrne	r5, [r1]
   166d8:	addsne	r2, r5, r2
   166dc:	bne	167d8 <flatcc_json_printer_uint8_field@@Base+0x138>
   166e0:	ldrb	r2, [r6, #29]
   166e4:	mov	r5, r0
   166e8:	cmp	r2, #0
   166ec:	popeq	{r4, r5, r6, sl, fp, pc}
   166f0:	ldr	r0, [r1, #16]
   166f4:	ldr	r2, [fp, #8]
   166f8:	add	r4, r0, #1
   166fc:	cmp	r0, #0
   16700:	str	r4, [r1, #16]
   16704:	ldrne	r0, [r6, #20]
   16708:	addne	r1, r0, #1
   1670c:	strne	r1, [r6, #20]
   16710:	movne	r1, #44	; 0x2c
   16714:	strbne	r1, [r0]
   16718:	mov	r0, r6
   1671c:	mov	r1, r3
   16720:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   16724:	ldr	r0, [r6, #20]
   16728:	mov	r1, #0
   1672c:	cmp	r5, #100	; 0x64
   16730:	bcc	16778 <flatcc_json_printer_uint8_field@@Base+0xd8>
   16734:	strb	r1, [r0, #3]
   16738:	movw	r1, #34079	; 0x851f
   1673c:	movt	r1, #20971	; 0x51eb
   16740:	umull	r1, r2, r5, r1
   16744:	mov	r1, #48	; 0x30
   16748:	orr	r1, r1, r2, lsr #5
   1674c:	strb	r1, [r0]
   16750:	lsr	r1, r2, #5
   16754:	mov	r2, #100	; 0x64
   16758:	mls	r1, r1, r2, r5
   1675c:	movw	r2, #6299	; 0x189b
   16760:	movt	r2, #2
   16764:	add	r1, r2, r1, lsl #1
   16768:	ldrh	r1, [r1]
   1676c:	strh	r1, [r0, #1]
   16770:	mov	r0, #3
   16774:	b	167c8 <flatcc_json_printer_uint8_field@@Base+0x128>
   16778:	cmp	r5, #10
   1677c:	bcc	167b8 <flatcc_json_printer_uint8_field@@Base+0x118>
   16780:	strb	r1, [r0, #2]
   16784:	movw	r1, #34079	; 0x851f
   16788:	movt	r1, #20971	; 0x51eb
   1678c:	umull	r1, r2, r5, r1
   16790:	lsr	r1, r2, #5
   16794:	mov	r2, #100	; 0x64
   16798:	mls	r1, r1, r2, r5
   1679c:	movw	r2, #6299	; 0x189b
   167a0:	movt	r2, #2
   167a4:	add	r1, r2, r1, lsl #1
   167a8:	ldrh	r1, [r1]
   167ac:	strh	r1, [r0]
   167b0:	mov	r0, #2
   167b4:	b	167c8 <flatcc_json_printer_uint8_field@@Base+0x128>
   167b8:	strb	r1, [r0, #1]
   167bc:	add	r1, r5, #48	; 0x30
   167c0:	strb	r1, [r0]
   167c4:	mov	r0, #1
   167c8:	ldr	r1, [r6, #20]
   167cc:	add	r0, r1, r0
   167d0:	str	r0, [r6, #20]
   167d4:	pop	{r4, r5, r6, sl, fp, pc}
   167d8:	ldrb	r5, [r2]
   167dc:	cmp	r5, r0
   167e0:	bne	166f0 <flatcc_json_printer_uint8_field@@Base+0x50>
   167e4:	ldrb	r2, [r6, #28]
   167e8:	mov	r5, r0
   167ec:	cmp	r2, #0
   167f0:	bne	167d4 <flatcc_json_printer_uint8_field@@Base+0x134>
   167f4:	b	166f0 <flatcc_json_printer_uint8_field@@Base+0x50>

000167f8 <flatcc_json_printer_uint16_field@@Base>:
   167f8:	push	{r4, r5, r6, sl, fp, lr}
   167fc:	add	fp, sp, #16
   16800:	mov	r4, r0
   16804:	mov	r0, #4
   16808:	ldr	r5, [r1, #8]
   1680c:	add	r2, r0, r2, lsl #1
   16810:	ldr	r0, [fp, #12]
   16814:	cmp	r2, r5
   16818:	bge	16838 <flatcc_json_printer_uint16_field@@Base+0x40>
   1681c:	ldr	r5, [r1, #4]
   16820:	add	r2, r5, r2
   16824:	ldrh	r2, [r2]
   16828:	cmp	r2, #0
   1682c:	ldrne	r5, [r1]
   16830:	addsne	r2, r5, r2
   16834:	bne	16898 <flatcc_json_printer_uint16_field@@Base+0xa0>
   16838:	ldrb	r2, [r4, #29]
   1683c:	mov	r6, r0
   16840:	cmp	r2, #0
   16844:	popeq	{r4, r5, r6, sl, fp, pc}
   16848:	ldr	r0, [r1, #16]
   1684c:	ldr	r2, [fp, #8]
   16850:	add	r5, r0, #1
   16854:	cmp	r0, #0
   16858:	str	r5, [r1, #16]
   1685c:	ldrne	r0, [r4, #20]
   16860:	addne	r1, r0, #1
   16864:	strne	r1, [r4, #20]
   16868:	movne	r1, #44	; 0x2c
   1686c:	strbne	r1, [r0]
   16870:	mov	r0, r4
   16874:	mov	r1, r3
   16878:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1687c:	ldr	r1, [r4, #20]
   16880:	mov	r0, r6
   16884:	bl	153a8 <flatcc_json_printer_uint16@@Base+0x2c>
   16888:	ldr	r1, [r4, #20]
   1688c:	add	r0, r1, r0
   16890:	str	r0, [r4, #20]
   16894:	pop	{r4, r5, r6, sl, fp, pc}
   16898:	ldrh	r6, [r2]
   1689c:	cmp	r6, r0
   168a0:	bne	16848 <flatcc_json_printer_uint16_field@@Base+0x50>
   168a4:	ldrb	r2, [r4, #28]
   168a8:	mov	r6, r0
   168ac:	cmp	r2, #0
   168b0:	bne	16894 <flatcc_json_printer_uint16_field@@Base+0x9c>
   168b4:	b	16848 <flatcc_json_printer_uint16_field@@Base+0x50>

000168b8 <flatcc_json_printer_uint32_field@@Base>:
   168b8:	push	{r4, r5, r6, sl, fp, lr}
   168bc:	add	fp, sp, #16
   168c0:	mov	r4, r0
   168c4:	mov	r0, #4
   168c8:	ldr	r5, [r1, #8]
   168cc:	add	r2, r0, r2, lsl #1
   168d0:	ldr	r0, [fp, #12]
   168d4:	cmp	r2, r5
   168d8:	bge	168f8 <flatcc_json_printer_uint32_field@@Base+0x40>
   168dc:	ldr	r5, [r1, #4]
   168e0:	add	r2, r5, r2
   168e4:	ldrh	r2, [r2]
   168e8:	cmp	r2, #0
   168ec:	ldrne	r5, [r1]
   168f0:	addsne	r2, r5, r2
   168f4:	bne	16958 <flatcc_json_printer_uint32_field@@Base+0xa0>
   168f8:	ldrb	r2, [r4, #29]
   168fc:	mov	r6, r0
   16900:	cmp	r2, #0
   16904:	popeq	{r4, r5, r6, sl, fp, pc}
   16908:	ldr	r0, [r1, #16]
   1690c:	ldr	r2, [fp, #8]
   16910:	add	r5, r0, #1
   16914:	cmp	r0, #0
   16918:	str	r5, [r1, #16]
   1691c:	ldrne	r0, [r4, #20]
   16920:	addne	r1, r0, #1
   16924:	strne	r1, [r4, #20]
   16928:	movne	r1, #44	; 0x2c
   1692c:	strbne	r1, [r0]
   16930:	mov	r0, r4
   16934:	mov	r1, r3
   16938:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1693c:	ldr	r1, [r4, #20]
   16940:	mov	r0, r6
   16944:	bl	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   16948:	ldr	r1, [r4, #20]
   1694c:	add	r0, r1, r0
   16950:	str	r0, [r4, #20]
   16954:	pop	{r4, r5, r6, sl, fp, pc}
   16958:	ldr	r6, [r2]
   1695c:	cmp	r6, r0
   16960:	bne	16908 <flatcc_json_printer_uint32_field@@Base+0x50>
   16964:	ldrb	r2, [r4, #28]
   16968:	mov	r6, r0
   1696c:	cmp	r2, #0
   16970:	bne	16954 <flatcc_json_printer_uint32_field@@Base+0x9c>
   16974:	b	16908 <flatcc_json_printer_uint32_field@@Base+0x50>

00016978 <flatcc_json_printer_uint64_field@@Base>:
   16978:	push	{r4, r6, r7, r8, fp, lr}
   1697c:	add	fp, sp, #16
   16980:	mov	r4, r0
   16984:	mov	r0, #4
   16988:	ldr	r6, [r1, #8]
   1698c:	ldr	lr, [fp, #20]
   16990:	add	r7, r0, r2, lsl #1
   16994:	ldr	r2, [fp, #16]
   16998:	cmp	r7, r6
   1699c:	bge	169bc <flatcc_json_printer_uint64_field@@Base+0x44>
   169a0:	ldr	r6, [r1, #4]
   169a4:	add	r7, r6, r7
   169a8:	ldrh	r7, [r7]
   169ac:	cmp	r7, #0
   169b0:	ldrne	r6, [r1]
   169b4:	addsne	r7, r6, r7
   169b8:	bne	16a24 <flatcc_json_printer_uint64_field@@Base+0xac>
   169bc:	ldrb	r0, [r4, #29]
   169c0:	mov	r8, r2
   169c4:	mov	r7, lr
   169c8:	cmp	r0, #0
   169cc:	popeq	{r4, r6, r7, r8, fp, pc}
   169d0:	ldr	r0, [r1, #16]
   169d4:	ldr	r2, [fp, #8]
   169d8:	add	r6, r0, #1
   169dc:	cmp	r0, #0
   169e0:	str	r6, [r1, #16]
   169e4:	ldrne	r0, [r4, #20]
   169e8:	addne	r1, r0, #1
   169ec:	strne	r1, [r4, #20]
   169f0:	movne	r1, #44	; 0x2c
   169f4:	strbne	r1, [r0]
   169f8:	mov	r0, r4
   169fc:	mov	r1, r3
   16a00:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   16a04:	ldr	r2, [r4, #20]
   16a08:	mov	r0, r8
   16a0c:	mov	r1, r7
   16a10:	bl	158b0 <flatcc_json_printer_uint64@@Base+0x30>
   16a14:	ldr	r1, [r4, #20]
   16a18:	add	r0, r1, r0
   16a1c:	str	r0, [r4, #20]
   16a20:	pop	{r4, r6, r7, r8, fp, pc}
   16a24:	ldr	r8, [r7]
   16a28:	ldr	r7, [r7, #4]
   16a2c:	eor	ip, r7, lr
   16a30:	eor	r0, r8, r2
   16a34:	orrs	r0, r0, ip
   16a38:	bne	169d0 <flatcc_json_printer_uint64_field@@Base+0x58>
   16a3c:	ldrb	r0, [r4, #28]
   16a40:	mov	r8, r2
   16a44:	mov	r7, lr
   16a48:	cmp	r0, #0
   16a4c:	bne	16a20 <flatcc_json_printer_uint64_field@@Base+0xa8>
   16a50:	b	169d0 <flatcc_json_printer_uint64_field@@Base+0x58>

00016a54 <flatcc_json_printer_int8_field@@Base>:
   16a54:	push	{r4, r5, r6, sl, fp, lr}
   16a58:	add	fp, sp, #16
   16a5c:	mov	r6, r0
   16a60:	mov	r0, #4
   16a64:	ldr	r5, [r1, #8]
   16a68:	add	r2, r0, r2, lsl #1
   16a6c:	ldr	r0, [fp, #12]
   16a70:	cmp	r2, r5
   16a74:	bge	16a94 <flatcc_json_printer_int8_field@@Base+0x40>
   16a78:	ldr	r5, [r1, #4]
   16a7c:	add	r2, r5, r2
   16a80:	ldrh	r2, [r2]
   16a84:	cmp	r2, #0
   16a88:	ldrne	r5, [r1]
   16a8c:	addsne	r2, r5, r2
   16a90:	bne	16bb4 <flatcc_json_printer_int8_field@@Base+0x160>
   16a94:	ldrb	r2, [r6, #29]
   16a98:	mov	r5, r0
   16a9c:	cmp	r2, #0
   16aa0:	popeq	{r4, r5, r6, sl, fp, pc}
   16aa4:	ldr	r0, [r1, #16]
   16aa8:	ldr	r2, [fp, #8]
   16aac:	add	r4, r0, #1
   16ab0:	cmp	r0, #0
   16ab4:	str	r4, [r1, #16]
   16ab8:	ldrne	r0, [r6, #20]
   16abc:	addne	r1, r0, #1
   16ac0:	strne	r1, [r6, #20]
   16ac4:	movne	r1, #44	; 0x2c
   16ac8:	strbne	r1, [r0]
   16acc:	mov	r0, r6
   16ad0:	mov	r1, r3
   16ad4:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   16ad8:	ubfx	r0, r5, #7, #1
   16adc:	ldr	r1, [r6, #20]
   16ae0:	sxtb	r2, r5
   16ae4:	cmn	r2, #1
   16ae8:	movle	r2, #45	; 0x2d
   16aec:	rsble	r5, r5, #0
   16af0:	strble	r2, [r1], #1
   16af4:	uxtb	r2, r5
   16af8:	cmp	r2, #100	; 0x64
   16afc:	bcc	16b48 <flatcc_json_printer_int8_field@@Base+0xf4>
   16b00:	mov	r3, #0
   16b04:	strb	r3, [r1, #3]
   16b08:	movw	r3, #34079	; 0x851f
   16b0c:	movt	r3, #20971	; 0x51eb
   16b10:	umull	r3, r5, r2, r3
   16b14:	mov	r3, #48	; 0x30
   16b18:	orr	r3, r3, r5, lsr #5
   16b1c:	strb	r3, [r1]
   16b20:	lsr	r3, r5, #5
   16b24:	mov	r5, #100	; 0x64
   16b28:	mls	r2, r3, r5, r2
   16b2c:	movw	r3, #6299	; 0x189b
   16b30:	movt	r3, #2
   16b34:	add	r2, r3, r2, lsl #1
   16b38:	ldrh	r2, [r2]
   16b3c:	strh	r2, [r1, #1]
   16b40:	mov	r1, #3
   16b44:	b	16ba0 <flatcc_json_printer_int8_field@@Base+0x14c>
   16b48:	cmp	r2, #10
   16b4c:	bcc	16b8c <flatcc_json_printer_int8_field@@Base+0x138>
   16b50:	mov	r3, #0
   16b54:	strb	r3, [r1, #2]
   16b58:	movw	r3, #34079	; 0x851f
   16b5c:	movt	r3, #20971	; 0x51eb
   16b60:	umull	r3, r5, r2, r3
   16b64:	lsr	r3, r5, #5
   16b68:	mov	r5, #100	; 0x64
   16b6c:	mls	r2, r3, r5, r2
   16b70:	movw	r3, #6299	; 0x189b
   16b74:	movt	r3, #2
   16b78:	add	r2, r3, r2, lsl #1
   16b7c:	ldrh	r2, [r2]
   16b80:	strh	r2, [r1]
   16b84:	mov	r1, #2
   16b88:	b	16ba0 <flatcc_json_printer_int8_field@@Base+0x14c>
   16b8c:	mov	r2, #0
   16b90:	strb	r2, [r1, #1]
   16b94:	add	r2, r5, #48	; 0x30
   16b98:	strb	r2, [r1]
   16b9c:	mov	r1, #1
   16ba0:	add	r0, r1, r0
   16ba4:	ldr	r1, [r6, #20]
   16ba8:	add	r0, r1, r0
   16bac:	str	r0, [r6, #20]
   16bb0:	pop	{r4, r5, r6, sl, fp, pc}
   16bb4:	ldrb	r5, [r2]
   16bb8:	uxtb	r2, r0
   16bbc:	cmp	r5, r2
   16bc0:	bne	16aa4 <flatcc_json_printer_int8_field@@Base+0x50>
   16bc4:	ldrb	r2, [r6, #28]
   16bc8:	mov	r5, r0
   16bcc:	cmp	r2, #0
   16bd0:	bne	16bb0 <flatcc_json_printer_int8_field@@Base+0x15c>
   16bd4:	b	16aa4 <flatcc_json_printer_int8_field@@Base+0x50>

00016bd8 <flatcc_json_printer_int16_field@@Base>:
   16bd8:	push	{r4, r5, r6, sl, fp, lr}
   16bdc:	add	fp, sp, #16
   16be0:	mov	r4, r0
   16be4:	mov	r0, #4
   16be8:	ldr	r6, [r1, #8]
   16bec:	add	r2, r0, r2, lsl #1
   16bf0:	ldr	r0, [fp, #12]
   16bf4:	cmp	r2, r6
   16bf8:	bge	16c18 <flatcc_json_printer_int16_field@@Base+0x40>
   16bfc:	ldr	r6, [r1, #4]
   16c00:	add	r2, r6, r2
   16c04:	ldrh	r2, [r2]
   16c08:	cmp	r2, #0
   16c0c:	ldrne	r6, [r1]
   16c10:	addsne	r2, r6, r2
   16c14:	bne	16c94 <flatcc_json_printer_int16_field@@Base+0xbc>
   16c18:	ldrb	r2, [r4, #29]
   16c1c:	mov	r5, r0
   16c20:	cmp	r2, #0
   16c24:	popeq	{r4, r5, r6, sl, fp, pc}
   16c28:	ldr	r0, [r1, #16]
   16c2c:	ldr	r2, [fp, #8]
   16c30:	add	r6, r0, #1
   16c34:	cmp	r0, #0
   16c38:	str	r6, [r1, #16]
   16c3c:	ldrne	r0, [r4, #20]
   16c40:	addne	r1, r0, #1
   16c44:	strne	r1, [r4, #20]
   16c48:	movne	r1, #44	; 0x2c
   16c4c:	strbne	r1, [r0]
   16c50:	mov	r0, r4
   16c54:	mov	r1, r3
   16c58:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   16c5c:	ubfx	r6, r5, #15, #1
   16c60:	ldr	r1, [r4, #20]
   16c64:	sxth	r0, r5
   16c68:	cmn	r0, #1
   16c6c:	movle	r0, #45	; 0x2d
   16c70:	rsble	r5, r5, #0
   16c74:	strble	r0, [r1], #1
   16c78:	uxth	r0, r5
   16c7c:	bl	153a8 <flatcc_json_printer_uint16@@Base+0x2c>
   16c80:	ldr	r1, [r4, #20]
   16c84:	add	r0, r0, r6
   16c88:	add	r0, r1, r0
   16c8c:	str	r0, [r4, #20]
   16c90:	pop	{r4, r5, r6, sl, fp, pc}
   16c94:	ldrh	r5, [r2]
   16c98:	uxth	r2, r0
   16c9c:	cmp	r5, r2
   16ca0:	bne	16c28 <flatcc_json_printer_int16_field@@Base+0x50>
   16ca4:	ldrb	r2, [r4, #28]
   16ca8:	mov	r5, r0
   16cac:	cmp	r2, #0
   16cb0:	bne	16c90 <flatcc_json_printer_int16_field@@Base+0xb8>
   16cb4:	b	16c28 <flatcc_json_printer_int16_field@@Base+0x50>

00016cb8 <flatcc_json_printer_int32_field@@Base>:
   16cb8:	push	{r4, r5, r6, sl, fp, lr}
   16cbc:	add	fp, sp, #16
   16cc0:	mov	r4, r0
   16cc4:	mov	r0, #4
   16cc8:	ldr	r6, [r1, #8]
   16ccc:	add	r2, r0, r2, lsl #1
   16cd0:	ldr	r0, [fp, #12]
   16cd4:	cmp	r2, r6
   16cd8:	bge	16cf8 <flatcc_json_printer_int32_field@@Base+0x40>
   16cdc:	ldr	r6, [r1, #4]
   16ce0:	add	r2, r6, r2
   16ce4:	ldrh	r2, [r2]
   16ce8:	cmp	r2, #0
   16cec:	ldrne	r6, [r1]
   16cf0:	addsne	r2, r6, r2
   16cf4:	bne	16d70 <flatcc_json_printer_int32_field@@Base+0xb8>
   16cf8:	ldrb	r2, [r4, #29]
   16cfc:	mov	r5, r0
   16d00:	cmp	r2, #0
   16d04:	popeq	{r4, r5, r6, sl, fp, pc}
   16d08:	ldr	r0, [r1, #16]
   16d0c:	ldr	r2, [fp, #8]
   16d10:	add	r6, r0, #1
   16d14:	cmp	r0, #0
   16d18:	str	r6, [r1, #16]
   16d1c:	ldrne	r0, [r4, #20]
   16d20:	addne	r1, r0, #1
   16d24:	strne	r1, [r4, #20]
   16d28:	movne	r1, #44	; 0x2c
   16d2c:	strbne	r1, [r0]
   16d30:	mov	r0, r4
   16d34:	mov	r1, r3
   16d38:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   16d3c:	ldr	r1, [r4, #20]
   16d40:	cmn	r5, #1
   16d44:	lsr	r6, r5, #31
   16d48:	movle	r0, #45	; 0x2d
   16d4c:	rsble	r5, r5, #0
   16d50:	strble	r0, [r1], #1
   16d54:	mov	r0, r5
   16d58:	bl	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   16d5c:	ldr	r1, [r4, #20]
   16d60:	add	r0, r0, r6
   16d64:	add	r0, r1, r0
   16d68:	str	r0, [r4, #20]
   16d6c:	pop	{r4, r5, r6, sl, fp, pc}
   16d70:	ldr	r5, [r2]
   16d74:	cmp	r5, r0
   16d78:	bne	16d08 <flatcc_json_printer_int32_field@@Base+0x50>
   16d7c:	ldrb	r2, [r4, #28]
   16d80:	mov	r5, r0
   16d84:	cmp	r2, #0
   16d88:	bne	16d6c <flatcc_json_printer_int32_field@@Base+0xb4>
   16d8c:	b	16d08 <flatcc_json_printer_int32_field@@Base+0x50>

00016d90 <flatcc_json_printer_int64_field@@Base>:
   16d90:	push	{r4, r5, r6, r7, fp, lr}
   16d94:	add	fp, sp, #16
   16d98:	mov	r4, r0
   16d9c:	mov	r0, #4
   16da0:	ldr	r6, [r1, #8]
   16da4:	add	r7, r0, r2, lsl #1
   16da8:	ldr	r0, [fp, #20]
   16dac:	ldr	r2, [fp, #16]
   16db0:	cmp	r7, r6
   16db4:	bge	16dd4 <flatcc_json_printer_int64_field@@Base+0x44>
   16db8:	ldr	r6, [r1, #4]
   16dbc:	add	r7, r6, r7
   16dc0:	ldrh	r7, [r7]
   16dc4:	cmp	r7, #0
   16dc8:	ldrne	r6, [r1]
   16dcc:	addsne	r7, r6, r7
   16dd0:	bne	16e5c <flatcc_json_printer_int64_field@@Base+0xcc>
   16dd4:	ldrb	r7, [r4, #29]
   16dd8:	mov	r6, r2
   16ddc:	cmp	r7, #0
   16de0:	mov	r7, r0
   16de4:	popeq	{r4, r5, r6, r7, fp, pc}
   16de8:	ldr	r0, [r1, #16]
   16dec:	ldr	r2, [fp, #8]
   16df0:	add	r5, r0, #1
   16df4:	cmp	r0, #0
   16df8:	str	r5, [r1, #16]
   16dfc:	ldrne	r0, [r4, #20]
   16e00:	addne	r1, r0, #1
   16e04:	strne	r1, [r4, #20]
   16e08:	movne	r1, #44	; 0x2c
   16e0c:	strbne	r1, [r0]
   16e10:	mov	r0, r4
   16e14:	mov	r1, r3
   16e18:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   16e1c:	ldr	r2, [r4, #20]
   16e20:	lsr	r5, r7, #31
   16e24:	cmn	r7, #1
   16e28:	bgt	16e3c <flatcc_json_printer_int64_field@@Base+0xac>
   16e2c:	mov	r0, #45	; 0x2d
   16e30:	rsbs	r6, r6, #0
   16e34:	strb	r0, [r2], #1
   16e38:	rsc	r7, r7, #0
   16e3c:	mov	r0, r6
   16e40:	mov	r1, r7
   16e44:	bl	158b0 <flatcc_json_printer_uint64@@Base+0x30>
   16e48:	ldr	r1, [r4, #20]
   16e4c:	add	r0, r0, r5
   16e50:	add	r0, r1, r0
   16e54:	str	r0, [r4, #20]
   16e58:	pop	{r4, r5, r6, r7, fp, pc}
   16e5c:	ldrd	r6, [r7]
   16e60:	eor	ip, r7, r0
   16e64:	eor	r5, r6, r2
   16e68:	orrs	r5, r5, ip
   16e6c:	bne	16de8 <flatcc_json_printer_int64_field@@Base+0x58>
   16e70:	ldrb	r7, [r4, #28]
   16e74:	mov	r6, r2
   16e78:	cmp	r7, #0
   16e7c:	mov	r7, r0
   16e80:	bne	16e58 <flatcc_json_printer_int64_field@@Base+0xc8>
   16e84:	b	16de8 <flatcc_json_printer_int64_field@@Base+0x58>

00016e88 <flatcc_json_printer_bool_field@@Base>:
   16e88:	push	{r4, r5, r6, sl, fp, lr}
   16e8c:	add	fp, sp, #16
   16e90:	mov	r4, r0
   16e94:	mov	r0, #4
   16e98:	ldr	r5, [r1, #8]
   16e9c:	add	r2, r0, r2, lsl #1
   16ea0:	ldr	r0, [fp, #12]
   16ea4:	cmp	r2, r5
   16ea8:	bge	16ec8 <flatcc_json_printer_bool_field@@Base+0x40>
   16eac:	ldr	r5, [r1, #4]
   16eb0:	add	r2, r5, r2
   16eb4:	ldrh	r2, [r2]
   16eb8:	cmp	r2, #0
   16ebc:	ldrne	r5, [r1]
   16ec0:	addsne	r2, r5, r2
   16ec4:	bne	16f5c <flatcc_json_printer_bool_field@@Base+0xd4>
   16ec8:	ldrb	r2, [r4, #29]
   16ecc:	mov	r6, r0
   16ed0:	cmp	r2, #0
   16ed4:	popeq	{r4, r5, r6, sl, fp, pc}
   16ed8:	ldr	r0, [r1, #16]
   16edc:	ldr	r2, [fp, #8]
   16ee0:	add	r5, r0, #1
   16ee4:	cmp	r0, #0
   16ee8:	str	r5, [r1, #16]
   16eec:	ldrne	r0, [r4, #20]
   16ef0:	addne	r1, r0, #1
   16ef4:	strne	r1, [r4, #20]
   16ef8:	movne	r1, #44	; 0x2c
   16efc:	strbne	r1, [r0]
   16f00:	mov	r0, r4
   16f04:	mov	r1, r3
   16f08:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   16f0c:	ldr	r0, [r4, #20]
   16f10:	cmp	r6, #0
   16f14:	beq	16f34 <flatcc_json_printer_bool_field@@Base+0xac>
   16f18:	mov	r1, #0
   16f1c:	strb	r1, [r0, #4]
   16f20:	movw	r1, #29300	; 0x7274
   16f24:	movt	r1, #25973	; 0x6575
   16f28:	str	r1, [r0]
   16f2c:	mov	r0, #4
   16f30:	b	16f4c <flatcc_json_printer_bool_field@@Base+0xc4>
   16f34:	mov	r1, #101	; 0x65
   16f38:	strh	r1, [r0, #4]
   16f3c:	movw	r1, #24934	; 0x6166
   16f40:	movt	r1, #29548	; 0x736c
   16f44:	str	r1, [r0]
   16f48:	mov	r0, #5
   16f4c:	ldr	r1, [r4, #20]
   16f50:	add	r0, r1, r0
   16f54:	str	r0, [r4, #20]
   16f58:	pop	{r4, r5, r6, sl, fp, pc}
   16f5c:	ldrb	r6, [r2]
   16f60:	cmp	r6, r0
   16f64:	bne	16ed8 <flatcc_json_printer_bool_field@@Base+0x50>
   16f68:	ldrb	r2, [r4, #28]
   16f6c:	mov	r6, r0
   16f70:	cmp	r2, #0
   16f74:	bne	16f58 <flatcc_json_printer_bool_field@@Base+0xd0>
   16f78:	b	16ed8 <flatcc_json_printer_bool_field@@Base+0x50>

00016f7c <flatcc_json_printer_float_field@@Base>:
   16f7c:	push	{r4, r5, fp, lr}
   16f80:	add	fp, sp, #8
   16f84:	vpush	{d8}
   16f88:	mov	r5, r0
   16f8c:	mov	r0, #4
   16f90:	vmov.f32	s16, s0
   16f94:	add	r0, r0, r2, lsl #1
   16f98:	ldr	r2, [r1, #8]
   16f9c:	cmp	r0, r2
   16fa0:	bge	16fc0 <flatcc_json_printer_float_field@@Base+0x44>
   16fa4:	ldr	r2, [r1, #4]
   16fa8:	add	r0, r2, r0
   16fac:	ldrh	r0, [r0]
   16fb0:	cmp	r0, #0
   16fb4:	ldrne	r2, [r1]
   16fb8:	addsne	r0, r2, r0
   16fbc:	bne	17020 <flatcc_json_printer_float_field@@Base+0xa4>
   16fc0:	ldrb	r0, [r5, #29]
   16fc4:	cmp	r0, #0
   16fc8:	beq	17018 <flatcc_json_printer_float_field@@Base+0x9c>
   16fcc:	ldr	r0, [r1, #16]
   16fd0:	ldr	r2, [fp, #8]
   16fd4:	add	r4, r0, #1
   16fd8:	cmp	r0, #0
   16fdc:	str	r4, [r1, #16]
   16fe0:	ldrne	r0, [r5, #20]
   16fe4:	addne	r1, r0, #1
   16fe8:	strne	r1, [r5, #20]
   16fec:	movne	r1, #44	; 0x2c
   16ff0:	strbne	r1, [r0]
   16ff4:	mov	r0, r5
   16ff8:	mov	r1, r3
   16ffc:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   17000:	ldr	r0, [r5, #20]
   17004:	vcvt.f64.f32	d0, s16
   17008:	bl	13f48 <flatcc_json_printer_fmt_float@@Base+0x8>
   1700c:	ldr	r1, [r5, #20]
   17010:	add	r0, r1, r0
   17014:	str	r0, [r5, #20]
   17018:	vpop	{d8}
   1701c:	pop	{r4, r5, fp, pc}
   17020:	vldr	s0, [r0]
   17024:	vcmp.f32	s0, s16
   17028:	vmrs	APSR_nzcv, fpscr
   1702c:	bne	17044 <flatcc_json_printer_float_field@@Base+0xc8>
   17030:	ldrb	r0, [r5, #28]
   17034:	vmov.f32	s16, s0
   17038:	cmp	r0, #0
   1703c:	bne	17018 <flatcc_json_printer_float_field@@Base+0x9c>
   17040:	b	16fcc <flatcc_json_printer_float_field@@Base+0x50>
   17044:	vmov.f32	s16, s0
   17048:	b	16fcc <flatcc_json_printer_float_field@@Base+0x50>

0001704c <flatcc_json_printer_double_field@@Base>:
   1704c:	push	{r4, r5, fp, lr}
   17050:	add	fp, sp, #8
   17054:	vpush	{d8}
   17058:	mov	r5, r0
   1705c:	mov	r0, #4
   17060:	vmov.f64	d8, d0
   17064:	add	r0, r0, r2, lsl #1
   17068:	ldr	r2, [r1, #8]
   1706c:	cmp	r0, r2
   17070:	bge	17090 <flatcc_json_printer_double_field@@Base+0x44>
   17074:	ldr	r2, [r1, #4]
   17078:	add	r0, r2, r0
   1707c:	ldrh	r0, [r0]
   17080:	cmp	r0, #0
   17084:	ldrne	r2, [r1]
   17088:	addsne	r0, r2, r0
   1708c:	bne	170f0 <flatcc_json_printer_double_field@@Base+0xa4>
   17090:	ldrb	r0, [r5, #29]
   17094:	cmp	r0, #0
   17098:	beq	170e8 <flatcc_json_printer_double_field@@Base+0x9c>
   1709c:	ldr	r0, [r1, #16]
   170a0:	ldr	r2, [fp, #8]
   170a4:	add	r4, r0, #1
   170a8:	cmp	r0, #0
   170ac:	str	r4, [r1, #16]
   170b0:	ldrne	r0, [r5, #20]
   170b4:	addne	r1, r0, #1
   170b8:	strne	r1, [r5, #20]
   170bc:	movne	r1, #44	; 0x2c
   170c0:	strbne	r1, [r0]
   170c4:	mov	r0, r5
   170c8:	mov	r1, r3
   170cc:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   170d0:	ldr	r0, [r5, #20]
   170d4:	vmov.f64	d0, d8
   170d8:	bl	13f48 <flatcc_json_printer_fmt_float@@Base+0x8>
   170dc:	ldr	r1, [r5, #20]
   170e0:	add	r0, r1, r0
   170e4:	str	r0, [r5, #20]
   170e8:	vpop	{d8}
   170ec:	pop	{r4, r5, fp, pc}
   170f0:	vldr	d16, [r0]
   170f4:	vcmp.f64	d16, d8
   170f8:	vmrs	APSR_nzcv, fpscr
   170fc:	bne	17114 <flatcc_json_printer_double_field@@Base+0xc8>
   17100:	ldrb	r0, [r5, #28]
   17104:	vmov.f64	d8, d16
   17108:	cmp	r0, #0
   1710c:	bne	170e8 <flatcc_json_printer_double_field@@Base+0x9c>
   17110:	b	1709c <flatcc_json_printer_double_field@@Base+0x50>
   17114:	vmov.f64	d8, d16
   17118:	b	1709c <flatcc_json_printer_double_field@@Base+0x50>

0001711c <flatcc_json_printer_uint8_enum_field@@Base>:
   1711c:	push	{r4, r5, r6, r7, fp, lr}
   17120:	add	fp, sp, #16
   17124:	mov	r6, r0
   17128:	mov	r0, #4
   1712c:	ldr	r4, [r1, #8]
   17130:	ldr	ip, [fp, #16]
   17134:	add	r5, r0, r2, lsl #1
   17138:	ldr	r0, [fp, #12]
   1713c:	ldr	r2, [fp, #8]
   17140:	cmp	r5, r4
   17144:	bge	17164 <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   17148:	ldr	r4, [r1, #4]
   1714c:	add	r5, r4, r5
   17150:	ldrh	r5, [r5]
   17154:	cmp	r5, #0
   17158:	ldrne	r4, [r1]
   1715c:	addsne	r5, r4, r5
   17160:	bne	1727c <flatcc_json_printer_uint8_enum_field@@Base+0x160>
   17164:	ldrb	r5, [r6, #29]
   17168:	cmp	r5, #0
   1716c:	mov	r5, r0
   17170:	popeq	{r4, r5, r6, r7, fp, pc}
   17174:	ldr	r0, [r1, #16]
   17178:	mov	r7, ip
   1717c:	add	r4, r0, #1
   17180:	cmp	r0, #0
   17184:	str	r4, [r1, #16]
   17188:	ldrne	r0, [r6, #20]
   1718c:	addne	r1, r0, #1
   17190:	strne	r1, [r6, #20]
   17194:	movne	r1, #44	; 0x2c
   17198:	strbne	r1, [r0]
   1719c:	mov	r0, r6
   171a0:	mov	r1, r3
   171a4:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   171a8:	ldrb	r0, [r6, #27]
   171ac:	cmp	r0, #0
   171b0:	beq	17208 <flatcc_json_printer_uint8_enum_field@@Base+0xec>
   171b4:	ldr	r0, [r6, #20]
   171b8:	mov	r1, #0
   171bc:	cmp	r5, #100	; 0x64
   171c0:	bcc	1721c <flatcc_json_printer_uint8_enum_field@@Base+0x100>
   171c4:	strb	r1, [r0, #3]
   171c8:	movw	r1, #34079	; 0x851f
   171cc:	movt	r1, #20971	; 0x51eb
   171d0:	umull	r1, r2, r5, r1
   171d4:	mov	r1, #48	; 0x30
   171d8:	orr	r1, r1, r2, lsr #5
   171dc:	strb	r1, [r0]
   171e0:	lsr	r1, r2, #5
   171e4:	mov	r2, #100	; 0x64
   171e8:	mls	r1, r1, r2, r5
   171ec:	movw	r2, #6299	; 0x189b
   171f0:	movt	r2, #2
   171f4:	add	r1, r2, r1, lsl #1
   171f8:	ldrh	r1, [r1]
   171fc:	strh	r1, [r0, #1]
   17200:	mov	r0, #3
   17204:	b	1726c <flatcc_json_printer_uint8_enum_field@@Base+0x150>
   17208:	mov	r0, r6
   1720c:	mov	r1, r5
   17210:	mov	r2, r7
   17214:	pop	{r4, r5, r6, r7, fp, lr}
   17218:	bx	r2
   1721c:	cmp	r5, #10
   17220:	bcc	1725c <flatcc_json_printer_uint8_enum_field@@Base+0x140>
   17224:	strb	r1, [r0, #2]
   17228:	movw	r1, #34079	; 0x851f
   1722c:	movt	r1, #20971	; 0x51eb
   17230:	umull	r1, r2, r5, r1
   17234:	lsr	r1, r2, #5
   17238:	mov	r2, #100	; 0x64
   1723c:	mls	r1, r1, r2, r5
   17240:	movw	r2, #6299	; 0x189b
   17244:	movt	r2, #2
   17248:	add	r1, r2, r1, lsl #1
   1724c:	ldrh	r1, [r1]
   17250:	strh	r1, [r0]
   17254:	mov	r0, #2
   17258:	b	1726c <flatcc_json_printer_uint8_enum_field@@Base+0x150>
   1725c:	strb	r1, [r0, #1]
   17260:	add	r1, r5, #48	; 0x30
   17264:	strb	r1, [r0]
   17268:	mov	r0, #1
   1726c:	ldr	r1, [r6, #20]
   17270:	add	r0, r1, r0
   17274:	str	r0, [r6, #20]
   17278:	pop	{r4, r5, r6, r7, fp, pc}
   1727c:	ldrb	r5, [r5]
   17280:	cmp	r5, r0
   17284:	bne	17174 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   17288:	ldrb	r5, [r6, #28]
   1728c:	cmp	r5, #0
   17290:	mov	r5, r0
   17294:	bne	17278 <flatcc_json_printer_uint8_enum_field@@Base+0x15c>
   17298:	b	17174 <flatcc_json_printer_uint8_enum_field@@Base+0x58>

0001729c <flatcc_json_printer_uint16_enum_field@@Base>:
   1729c:	push	{r4, r5, r6, r7, fp, lr}
   172a0:	add	fp, sp, #16
   172a4:	mov	r4, r0
   172a8:	mov	r0, #4
   172ac:	ldr	r7, [fp, #16]
   172b0:	ldr	ip, [fp, #12]
   172b4:	add	r5, r0, r2, lsl #1
   172b8:	ldr	r0, [r1, #8]
   172bc:	ldr	r2, [fp, #8]
   172c0:	cmp	r5, r0
   172c4:	bge	172e4 <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   172c8:	ldr	r0, [r1, #4]
   172cc:	add	r0, r0, r5
   172d0:	ldrh	r5, [r0]
   172d4:	cmp	r5, #0
   172d8:	ldrne	r0, [r1]
   172dc:	addsne	r5, r0, r5
   172e0:	bne	17360 <flatcc_json_printer_uint16_enum_field@@Base+0xc4>
   172e4:	ldrb	r0, [r4, #29]
   172e8:	mov	r6, ip
   172ec:	cmp	r0, #0
   172f0:	popeq	{r4, r5, r6, r7, fp, pc}
   172f4:	ldr	r0, [r1, #16]
   172f8:	add	r5, r0, #1
   172fc:	cmp	r0, #0
   17300:	str	r5, [r1, #16]
   17304:	ldrne	r0, [r4, #20]
   17308:	addne	r1, r0, #1
   1730c:	strne	r1, [r4, #20]
   17310:	movne	r1, #44	; 0x2c
   17314:	strbne	r1, [r0]
   17318:	mov	r0, r4
   1731c:	mov	r1, r3
   17320:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   17324:	ldrb	r0, [r4, #27]
   17328:	cmp	r0, #0
   1732c:	beq	1734c <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   17330:	ldr	r1, [r4, #20]
   17334:	mov	r0, r6
   17338:	bl	153a8 <flatcc_json_printer_uint16@@Base+0x2c>
   1733c:	ldr	r1, [r4, #20]
   17340:	add	r0, r1, r0
   17344:	str	r0, [r4, #20]
   17348:	pop	{r4, r5, r6, r7, fp, pc}
   1734c:	mov	r0, r4
   17350:	mov	r1, r6
   17354:	mov	r2, r7
   17358:	pop	{r4, r5, r6, r7, fp, lr}
   1735c:	bx	r2
   17360:	ldrh	r6, [r5]
   17364:	cmp	r6, ip
   17368:	bne	172f4 <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   1736c:	ldrb	r0, [r4, #28]
   17370:	mov	r6, ip
   17374:	cmp	r0, #0
   17378:	bne	17348 <flatcc_json_printer_uint16_enum_field@@Base+0xac>
   1737c:	b	172f4 <flatcc_json_printer_uint16_enum_field@@Base+0x58>

00017380 <flatcc_json_printer_uint32_enum_field@@Base>:
   17380:	push	{r4, r5, r6, r7, fp, lr}
   17384:	add	fp, sp, #16
   17388:	mov	r4, r0
   1738c:	mov	r0, #4
   17390:	ldr	r7, [fp, #16]
   17394:	ldr	ip, [fp, #12]
   17398:	add	r5, r0, r2, lsl #1
   1739c:	ldr	r0, [r1, #8]
   173a0:	ldr	r2, [fp, #8]
   173a4:	cmp	r5, r0
   173a8:	bge	173c8 <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   173ac:	ldr	r0, [r1, #4]
   173b0:	add	r0, r0, r5
   173b4:	ldrh	r5, [r0]
   173b8:	cmp	r5, #0
   173bc:	ldrne	r0, [r1]
   173c0:	addsne	r5, r0, r5
   173c4:	bne	17444 <flatcc_json_printer_uint32_enum_field@@Base+0xc4>
   173c8:	ldrb	r0, [r4, #29]
   173cc:	mov	r6, ip
   173d0:	cmp	r0, #0
   173d4:	popeq	{r4, r5, r6, r7, fp, pc}
   173d8:	ldr	r0, [r1, #16]
   173dc:	add	r5, r0, #1
   173e0:	cmp	r0, #0
   173e4:	str	r5, [r1, #16]
   173e8:	ldrne	r0, [r4, #20]
   173ec:	addne	r1, r0, #1
   173f0:	strne	r1, [r4, #20]
   173f4:	movne	r1, #44	; 0x2c
   173f8:	strbne	r1, [r0]
   173fc:	mov	r0, r4
   17400:	mov	r1, r3
   17404:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   17408:	ldrb	r0, [r4, #27]
   1740c:	cmp	r0, #0
   17410:	beq	17430 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   17414:	ldr	r1, [r4, #20]
   17418:	mov	r0, r6
   1741c:	bl	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   17420:	ldr	r1, [r4, #20]
   17424:	add	r0, r1, r0
   17428:	str	r0, [r4, #20]
   1742c:	pop	{r4, r5, r6, r7, fp, pc}
   17430:	mov	r0, r4
   17434:	mov	r1, r6
   17438:	mov	r2, r7
   1743c:	pop	{r4, r5, r6, r7, fp, lr}
   17440:	bx	r2
   17444:	ldr	r6, [r5]
   17448:	cmp	r6, ip
   1744c:	bne	173d8 <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   17450:	ldrb	r0, [r4, #28]
   17454:	mov	r6, ip
   17458:	cmp	r0, #0
   1745c:	bne	1742c <flatcc_json_printer_uint32_enum_field@@Base+0xac>
   17460:	b	173d8 <flatcc_json_printer_uint32_enum_field@@Base+0x58>

00017464 <flatcc_json_printer_uint64_enum_field@@Base>:
   17464:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17468:	add	fp, sp, #24
   1746c:	mov	r4, r0
   17470:	mov	r0, #4
   17474:	ldr	ip, [fp, #20]
   17478:	ldr	r6, [fp, #16]
   1747c:	ldr	r5, [fp, #24]
   17480:	add	r7, r0, r2, lsl #1
   17484:	ldr	r0, [r1, #8]
   17488:	ldr	r2, [fp, #8]
   1748c:	cmp	r7, r0
   17490:	bge	174b0 <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   17494:	ldr	r0, [r1, #4]
   17498:	add	r0, r0, r7
   1749c:	ldrh	r7, [r0]
   174a0:	cmp	r7, #0
   174a4:	ldrne	r0, [r1]
   174a8:	addsne	r7, r0, r7
   174ac:	bne	17538 <flatcc_json_printer_uint64_enum_field@@Base+0xd4>
   174b0:	ldrb	r0, [r4, #29]
   174b4:	mov	r8, r6
   174b8:	mov	r7, ip
   174bc:	cmp	r0, #0
   174c0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   174c4:	ldr	r0, [r1, #16]
   174c8:	add	r6, r0, #1
   174cc:	cmp	r0, #0
   174d0:	str	r6, [r1, #16]
   174d4:	ldrne	r0, [r4, #20]
   174d8:	addne	r1, r0, #1
   174dc:	strne	r1, [r4, #20]
   174e0:	movne	r1, #44	; 0x2c
   174e4:	strbne	r1, [r0]
   174e8:	mov	r0, r4
   174ec:	mov	r1, r3
   174f0:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   174f4:	ldrb	r0, [r4, #27]
   174f8:	cmp	r0, #0
   174fc:	beq	17520 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   17500:	ldr	r2, [r4, #20]
   17504:	mov	r0, r8
   17508:	mov	r1, r7
   1750c:	bl	158b0 <flatcc_json_printer_uint64@@Base+0x30>
   17510:	ldr	r1, [r4, #20]
   17514:	add	r0, r1, r0
   17518:	str	r0, [r4, #20]
   1751c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17520:	mov	r0, r4
   17524:	mov	r2, r8
   17528:	mov	r3, r7
   1752c:	mov	r1, r5
   17530:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   17534:	bx	r1
   17538:	ldr	r8, [r7]
   1753c:	ldr	r7, [r7, #4]
   17540:	eor	lr, r7, ip
   17544:	eor	r0, r8, r6
   17548:	orrs	r0, r0, lr
   1754c:	bne	174c4 <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   17550:	ldrb	r0, [r4, #28]
   17554:	mov	r8, r6
   17558:	mov	r7, ip
   1755c:	cmp	r0, #0
   17560:	bne	1751c <flatcc_json_printer_uint64_enum_field@@Base+0xb8>
   17564:	b	174c4 <flatcc_json_printer_uint64_enum_field@@Base+0x60>

00017568 <flatcc_json_printer_int8_enum_field@@Base>:
   17568:	push	{r4, r5, r6, r7, fp, lr}
   1756c:	add	fp, sp, #16
   17570:	mov	r6, r0
   17574:	mov	r0, #4
   17578:	ldr	r4, [r1, #8]
   1757c:	ldr	ip, [fp, #16]
   17580:	add	r5, r0, r2, lsl #1
   17584:	ldr	r0, [fp, #12]
   17588:	ldr	r2, [fp, #8]
   1758c:	cmp	r5, r4
   17590:	bge	175b0 <flatcc_json_printer_int8_enum_field@@Base+0x48>
   17594:	ldr	r4, [r1, #4]
   17598:	add	r5, r4, r5
   1759c:	ldrh	r5, [r5]
   175a0:	cmp	r5, #0
   175a4:	ldrne	r4, [r1]
   175a8:	addsne	r5, r4, r5
   175ac:	bne	176f0 <flatcc_json_printer_int8_enum_field@@Base+0x188>
   175b0:	ldrb	r5, [r6, #29]
   175b4:	cmp	r5, #0
   175b8:	mov	r5, r0
   175bc:	popeq	{r4, r5, r6, r7, fp, pc}
   175c0:	ldr	r0, [r1, #16]
   175c4:	mov	r7, ip
   175c8:	add	r4, r0, #1
   175cc:	cmp	r0, #0
   175d0:	str	r4, [r1, #16]
   175d4:	ldrne	r0, [r6, #20]
   175d8:	addne	r1, r0, #1
   175dc:	strne	r1, [r6, #20]
   175e0:	movne	r1, #44	; 0x2c
   175e4:	strbne	r1, [r0]
   175e8:	mov	r0, r6
   175ec:	mov	r1, r3
   175f0:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   175f4:	ldrb	r0, [r6, #27]
   175f8:	cmp	r0, #0
   175fc:	beq	17670 <flatcc_json_printer_int8_enum_field@@Base+0x108>
   17600:	ubfx	r0, r5, #7, #1
   17604:	ldr	r1, [r6, #20]
   17608:	sxtb	r2, r5
   1760c:	cmn	r2, #1
   17610:	movle	r2, #45	; 0x2d
   17614:	rsble	r5, r5, #0
   17618:	strble	r2, [r1], #1
   1761c:	uxtb	r2, r5
   17620:	cmp	r2, #100	; 0x64
   17624:	bcc	17684 <flatcc_json_printer_int8_enum_field@@Base+0x11c>
   17628:	mov	r3, #0
   1762c:	strb	r3, [r1, #3]
   17630:	movw	r3, #34079	; 0x851f
   17634:	movt	r3, #20971	; 0x51eb
   17638:	umull	r3, r5, r2, r3
   1763c:	mov	r3, #48	; 0x30
   17640:	orr	r3, r3, r5, lsr #5
   17644:	strb	r3, [r1]
   17648:	lsr	r3, r5, #5
   1764c:	mov	r5, #100	; 0x64
   17650:	mls	r2, r3, r5, r2
   17654:	movw	r3, #6299	; 0x189b
   17658:	movt	r3, #2
   1765c:	add	r2, r3, r2, lsl #1
   17660:	ldrh	r2, [r2]
   17664:	strh	r2, [r1, #1]
   17668:	mov	r1, #3
   1766c:	b	176dc <flatcc_json_printer_int8_enum_field@@Base+0x174>
   17670:	sxtb	r1, r5
   17674:	mov	r0, r6
   17678:	mov	r2, r7
   1767c:	pop	{r4, r5, r6, r7, fp, lr}
   17680:	bx	r2
   17684:	cmp	r2, #10
   17688:	bcc	176c8 <flatcc_json_printer_int8_enum_field@@Base+0x160>
   1768c:	mov	r3, #0
   17690:	strb	r3, [r1, #2]
   17694:	movw	r3, #34079	; 0x851f
   17698:	movt	r3, #20971	; 0x51eb
   1769c:	umull	r3, r5, r2, r3
   176a0:	lsr	r3, r5, #5
   176a4:	mov	r5, #100	; 0x64
   176a8:	mls	r2, r3, r5, r2
   176ac:	movw	r3, #6299	; 0x189b
   176b0:	movt	r3, #2
   176b4:	add	r2, r3, r2, lsl #1
   176b8:	ldrh	r2, [r2]
   176bc:	strh	r2, [r1]
   176c0:	mov	r1, #2
   176c4:	b	176dc <flatcc_json_printer_int8_enum_field@@Base+0x174>
   176c8:	mov	r2, #0
   176cc:	strb	r2, [r1, #1]
   176d0:	add	r2, r5, #48	; 0x30
   176d4:	strb	r2, [r1]
   176d8:	mov	r1, #1
   176dc:	add	r0, r1, r0
   176e0:	ldr	r1, [r6, #20]
   176e4:	add	r0, r1, r0
   176e8:	str	r0, [r6, #20]
   176ec:	pop	{r4, r5, r6, r7, fp, pc}
   176f0:	ldrb	r5, [r5]
   176f4:	uxtb	r4, r0
   176f8:	cmp	r5, r4
   176fc:	bne	175c0 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   17700:	ldrb	r5, [r6, #28]
   17704:	cmp	r5, #0
   17708:	mov	r5, r0
   1770c:	bne	176ec <flatcc_json_printer_int8_enum_field@@Base+0x184>
   17710:	b	175c0 <flatcc_json_printer_int8_enum_field@@Base+0x58>

00017714 <flatcc_json_printer_int16_enum_field@@Base>:
   17714:	push	{r4, r5, r6, r7, fp, lr}
   17718:	add	fp, sp, #16
   1771c:	mov	r4, r0
   17720:	mov	r0, #4
   17724:	ldr	r5, [r1, #8]
   17728:	ldr	ip, [fp, #16]
   1772c:	add	r6, r0, r2, lsl #1
   17730:	ldr	r0, [fp, #12]
   17734:	ldr	r2, [fp, #8]
   17738:	cmp	r6, r5
   1773c:	bge	1775c <flatcc_json_printer_int16_enum_field@@Base+0x48>
   17740:	ldr	r5, [r1, #4]
   17744:	add	r6, r5, r6
   17748:	ldrh	r6, [r6]
   1774c:	cmp	r6, #0
   17750:	ldrne	r5, [r1]
   17754:	addsne	r6, r5, r6
   17758:	bne	177f8 <flatcc_json_printer_int16_enum_field@@Base+0xe4>
   1775c:	ldrb	r6, [r4, #29]
   17760:	mov	r5, r0
   17764:	cmp	r6, #0
   17768:	popeq	{r4, r5, r6, r7, fp, pc}
   1776c:	ldr	r0, [r1, #16]
   17770:	mov	r7, ip
   17774:	add	r6, r0, #1
   17778:	cmp	r0, #0
   1777c:	str	r6, [r1, #16]
   17780:	ldrne	r0, [r4, #20]
   17784:	addne	r1, r0, #1
   17788:	strne	r1, [r4, #20]
   1778c:	movne	r1, #44	; 0x2c
   17790:	strbne	r1, [r0]
   17794:	mov	r0, r4
   17798:	mov	r1, r3
   1779c:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   177a0:	ldrb	r0, [r4, #27]
   177a4:	cmp	r0, #0
   177a8:	beq	177e4 <flatcc_json_printer_int16_enum_field@@Base+0xd0>
   177ac:	ubfx	r6, r5, #15, #1
   177b0:	ldr	r1, [r4, #20]
   177b4:	sxth	r0, r5
   177b8:	cmn	r0, #1
   177bc:	movle	r0, #45	; 0x2d
   177c0:	rsble	r5, r5, #0
   177c4:	strble	r0, [r1], #1
   177c8:	uxth	r0, r5
   177cc:	bl	153a8 <flatcc_json_printer_uint16@@Base+0x2c>
   177d0:	ldr	r1, [r4, #20]
   177d4:	add	r0, r0, r6
   177d8:	add	r0, r1, r0
   177dc:	str	r0, [r4, #20]
   177e0:	pop	{r4, r5, r6, r7, fp, pc}
   177e4:	sxth	r1, r5
   177e8:	mov	r0, r4
   177ec:	mov	r2, r7
   177f0:	pop	{r4, r5, r6, r7, fp, lr}
   177f4:	bx	r2
   177f8:	ldrh	r5, [r6]
   177fc:	uxth	r6, r0
   17800:	cmp	r5, r6
   17804:	bne	1776c <flatcc_json_printer_int16_enum_field@@Base+0x58>
   17808:	ldrb	r6, [r4, #28]
   1780c:	mov	r5, r0
   17810:	cmp	r6, #0
   17814:	bne	177e0 <flatcc_json_printer_int16_enum_field@@Base+0xcc>
   17818:	b	1776c <flatcc_json_printer_int16_enum_field@@Base+0x58>

0001781c <flatcc_json_printer_int32_enum_field@@Base>:
   1781c:	push	{r4, r5, r6, r7, fp, lr}
   17820:	add	fp, sp, #16
   17824:	mov	r4, r0
   17828:	mov	r0, #4
   1782c:	ldr	r5, [r1, #8]
   17830:	ldr	ip, [fp, #16]
   17834:	add	r6, r0, r2, lsl #1
   17838:	ldr	r0, [fp, #12]
   1783c:	ldr	r2, [fp, #8]
   17840:	cmp	r6, r5
   17844:	bge	17864 <flatcc_json_printer_int32_enum_field@@Base+0x48>
   17848:	ldr	r5, [r1, #4]
   1784c:	add	r6, r5, r6
   17850:	ldrh	r6, [r6]
   17854:	cmp	r6, #0
   17858:	ldrne	r5, [r1]
   1785c:	addsne	r6, r5, r6
   17860:	bne	178fc <flatcc_json_printer_int32_enum_field@@Base+0xe0>
   17864:	ldrb	r6, [r4, #29]
   17868:	mov	r5, r0
   1786c:	cmp	r6, #0
   17870:	popeq	{r4, r5, r6, r7, fp, pc}
   17874:	ldr	r0, [r1, #16]
   17878:	mov	r7, ip
   1787c:	add	r6, r0, #1
   17880:	cmp	r0, #0
   17884:	str	r6, [r1, #16]
   17888:	ldrne	r0, [r4, #20]
   1788c:	addne	r1, r0, #1
   17890:	strne	r1, [r4, #20]
   17894:	movne	r1, #44	; 0x2c
   17898:	strbne	r1, [r0]
   1789c:	mov	r0, r4
   178a0:	mov	r1, r3
   178a4:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   178a8:	ldrb	r0, [r4, #27]
   178ac:	cmp	r0, #0
   178b0:	beq	178e8 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   178b4:	ldr	r1, [r4, #20]
   178b8:	cmn	r5, #1
   178bc:	lsr	r6, r5, #31
   178c0:	movle	r0, #45	; 0x2d
   178c4:	rsble	r5, r5, #0
   178c8:	strble	r0, [r1], #1
   178cc:	mov	r0, r5
   178d0:	bl	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   178d4:	ldr	r1, [r4, #20]
   178d8:	add	r0, r0, r6
   178dc:	add	r0, r1, r0
   178e0:	str	r0, [r4, #20]
   178e4:	pop	{r4, r5, r6, r7, fp, pc}
   178e8:	mov	r0, r4
   178ec:	mov	r1, r5
   178f0:	mov	r2, r7
   178f4:	pop	{r4, r5, r6, r7, fp, lr}
   178f8:	bx	r2
   178fc:	ldr	r5, [r6]
   17900:	cmp	r5, r0
   17904:	bne	17874 <flatcc_json_printer_int32_enum_field@@Base+0x58>
   17908:	ldrb	r6, [r4, #28]
   1790c:	mov	r5, r0
   17910:	cmp	r6, #0
   17914:	bne	178e4 <flatcc_json_printer_int32_enum_field@@Base+0xc8>
   17918:	b	17874 <flatcc_json_printer_int32_enum_field@@Base+0x58>

0001791c <flatcc_json_printer_int64_enum_field@@Base>:
   1791c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17920:	add	fp, sp, #24
   17924:	mov	r4, r0
   17928:	mov	r0, #4
   1792c:	ldr	r5, [r1, #8]
   17930:	ldr	r6, [fp, #16]
   17934:	ldr	r9, [fp, #24]
   17938:	add	r7, r0, r2, lsl #1
   1793c:	ldr	r0, [fp, #20]
   17940:	ldr	r2, [fp, #8]
   17944:	cmp	r7, r5
   17948:	bge	17968 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   1794c:	ldr	r5, [r1, #4]
   17950:	add	r7, r5, r7
   17954:	ldrh	r7, [r7]
   17958:	cmp	r7, #0
   1795c:	ldrne	r5, [r1]
   17960:	addsne	r7, r5, r7
   17964:	bne	17a10 <flatcc_json_printer_int64_enum_field@@Base+0xf4>
   17968:	ldrb	r7, [r4, #29]
   1796c:	mov	r8, r6
   17970:	cmp	r7, #0
   17974:	mov	r7, r0
   17978:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   1797c:	ldr	r0, [r1, #16]
   17980:	add	r6, r0, #1
   17984:	cmp	r0, #0
   17988:	str	r6, [r1, #16]
   1798c:	ldrne	r0, [r4, #20]
   17990:	addne	r1, r0, #1
   17994:	strne	r1, [r4, #20]
   17998:	movne	r1, #44	; 0x2c
   1799c:	strbne	r1, [r0]
   179a0:	mov	r0, r4
   179a4:	mov	r1, r3
   179a8:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   179ac:	ldrb	r0, [r4, #27]
   179b0:	cmp	r0, #0
   179b4:	beq	179f8 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   179b8:	ldr	r2, [r4, #20]
   179bc:	lsr	r5, r7, #31
   179c0:	cmn	r7, #1
   179c4:	bgt	179d8 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   179c8:	mov	r0, #45	; 0x2d
   179cc:	rsbs	r8, r8, #0
   179d0:	strb	r0, [r2], #1
   179d4:	rsc	r7, r7, #0
   179d8:	mov	r0, r8
   179dc:	mov	r1, r7
   179e0:	bl	158b0 <flatcc_json_printer_uint64@@Base+0x30>
   179e4:	ldr	r1, [r4, #20]
   179e8:	add	r0, r0, r5
   179ec:	add	r0, r1, r0
   179f0:	str	r0, [r4, #20]
   179f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   179f8:	mov	r0, r4
   179fc:	mov	r2, r8
   17a00:	mov	r3, r7
   17a04:	mov	r1, r9
   17a08:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17a0c:	bx	r1
   17a10:	ldr	r8, [r7]
   17a14:	ldr	r7, [r7, #4]
   17a18:	eor	ip, r7, r0
   17a1c:	eor	r5, r8, r6
   17a20:	orrs	r5, r5, ip
   17a24:	bne	1797c <flatcc_json_printer_int64_enum_field@@Base+0x60>
   17a28:	ldrb	r7, [r4, #28]
   17a2c:	mov	r8, r6
   17a30:	cmp	r7, #0
   17a34:	mov	r7, r0
   17a38:	bne	179f4 <flatcc_json_printer_int64_enum_field@@Base+0xd8>
   17a3c:	b	1797c <flatcc_json_printer_int64_enum_field@@Base+0x60>

00017a40 <flatcc_json_printer_bool_enum_field@@Base>:
   17a40:	push	{r4, r5, r6, r7, fp, lr}
   17a44:	add	fp, sp, #16
   17a48:	mov	r4, r0
   17a4c:	mov	r0, #4
   17a50:	ldr	r7, [fp, #16]
   17a54:	ldr	ip, [fp, #12]
   17a58:	add	r5, r0, r2, lsl #1
   17a5c:	ldr	r0, [r1, #8]
   17a60:	ldr	r2, [fp, #8]
   17a64:	cmp	r5, r0
   17a68:	bge	17a88 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   17a6c:	ldr	r0, [r1, #4]
   17a70:	add	r0, r0, r5
   17a74:	ldrh	r5, [r0]
   17a78:	cmp	r5, #0
   17a7c:	ldrne	r0, [r1]
   17a80:	addsne	r5, r0, r5
   17a84:	bne	17b38 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   17a88:	ldrb	r0, [r4, #29]
   17a8c:	mov	r6, ip
   17a90:	cmp	r0, #0
   17a94:	popeq	{r4, r5, r6, r7, fp, pc}
   17a98:	ldr	r0, [r1, #16]
   17a9c:	add	r5, r0, #1
   17aa0:	cmp	r0, #0
   17aa4:	str	r5, [r1, #16]
   17aa8:	ldrne	r0, [r4, #20]
   17aac:	addne	r1, r0, #1
   17ab0:	strne	r1, [r4, #20]
   17ab4:	movne	r1, #44	; 0x2c
   17ab8:	strbne	r1, [r0]
   17abc:	mov	r0, r4
   17ac0:	mov	r1, r3
   17ac4:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   17ac8:	ldrb	r0, [r4, #27]
   17acc:	cmp	r0, #0
   17ad0:	beq	17afc <flatcc_json_printer_bool_enum_field@@Base+0xbc>
   17ad4:	ldr	r0, [r4, #20]
   17ad8:	cmp	r6, #0
   17adc:	beq	17b10 <flatcc_json_printer_bool_enum_field@@Base+0xd0>
   17ae0:	mov	r1, #0
   17ae4:	strb	r1, [r0, #4]
   17ae8:	movw	r1, #29300	; 0x7274
   17aec:	movt	r1, #25973	; 0x6575
   17af0:	str	r1, [r0]
   17af4:	mov	r0, #4
   17af8:	b	17b28 <flatcc_json_printer_bool_enum_field@@Base+0xe8>
   17afc:	mov	r0, r4
   17b00:	mov	r1, r6
   17b04:	mov	r2, r7
   17b08:	pop	{r4, r5, r6, r7, fp, lr}
   17b0c:	bx	r2
   17b10:	mov	r1, #101	; 0x65
   17b14:	strh	r1, [r0, #4]
   17b18:	movw	r1, #24934	; 0x6166
   17b1c:	movt	r1, #29548	; 0x736c
   17b20:	str	r1, [r0]
   17b24:	mov	r0, #5
   17b28:	ldr	r1, [r4, #20]
   17b2c:	add	r0, r1, r0
   17b30:	str	r0, [r4, #20]
   17b34:	pop	{r4, r5, r6, r7, fp, pc}
   17b38:	ldrb	r6, [r5]
   17b3c:	cmp	r6, ip
   17b40:	bne	17a98 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   17b44:	ldrb	r0, [r4, #28]
   17b48:	mov	r6, ip
   17b4c:	cmp	r0, #0
   17b50:	bne	17b34 <flatcc_json_printer_bool_enum_field@@Base+0xf4>
   17b54:	b	17a98 <flatcc_json_printer_bool_enum_field@@Base+0x58>

00017b58 <flatcc_json_printer_uint8_struct_field@@Base>:
   17b58:	push	{r4, r5, r6, sl, fp, lr}
   17b5c:	add	fp, sp, #16
   17b60:	mov	r4, r1
   17b64:	mov	r5, r0
   17b68:	ldrb	r6, [r2, r3]
   17b6c:	ldr	r2, [fp, #12]
   17b70:	ldr	r1, [fp, #8]
   17b74:	cmp	r4, #0
   17b78:	ldrne	r0, [r5, #20]
   17b7c:	addne	r3, r0, #1
   17b80:	strne	r3, [r5, #20]
   17b84:	movne	r3, #44	; 0x2c
   17b88:	strbne	r3, [r0]
   17b8c:	mov	r0, r5
   17b90:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   17b94:	ldr	r0, [r5, #20]
   17b98:	mov	r1, #0
   17b9c:	cmp	r6, #100	; 0x64
   17ba0:	bcc	17bf4 <flatcc_json_printer_uint8_struct_field@@Base+0x9c>
   17ba4:	strb	r1, [r0, #3]
   17ba8:	movw	r1, #34079	; 0x851f
   17bac:	movt	r1, #20971	; 0x51eb
   17bb0:	umull	r1, r2, r6, r1
   17bb4:	mov	r1, #48	; 0x30
   17bb8:	orr	r1, r1, r2, lsr #5
   17bbc:	strb	r1, [r0]
   17bc0:	lsr	r1, r2, #5
   17bc4:	mov	r2, #100	; 0x64
   17bc8:	mls	r1, r1, r2, r6
   17bcc:	movw	r2, #6299	; 0x189b
   17bd0:	movt	r2, #2
   17bd4:	add	r1, r2, r1, lsl #1
   17bd8:	ldrh	r1, [r1]
   17bdc:	strh	r1, [r0, #1]
   17be0:	mov	r0, #3
   17be4:	ldr	r1, [r5, #20]
   17be8:	add	r0, r1, r0
   17bec:	str	r0, [r5, #20]
   17bf0:	pop	{r4, r5, r6, sl, fp, pc}
   17bf4:	cmp	r6, #10
   17bf8:	bcc	17c40 <flatcc_json_printer_uint8_struct_field@@Base+0xe8>
   17bfc:	strb	r1, [r0, #2]
   17c00:	movw	r1, #34079	; 0x851f
   17c04:	movt	r1, #20971	; 0x51eb
   17c08:	umull	r1, r2, r6, r1
   17c0c:	lsr	r1, r2, #5
   17c10:	mov	r2, #100	; 0x64
   17c14:	mls	r1, r1, r2, r6
   17c18:	movw	r2, #6299	; 0x189b
   17c1c:	movt	r2, #2
   17c20:	add	r1, r2, r1, lsl #1
   17c24:	ldrh	r1, [r1]
   17c28:	strh	r1, [r0]
   17c2c:	mov	r0, #2
   17c30:	ldr	r1, [r5, #20]
   17c34:	add	r0, r1, r0
   17c38:	str	r0, [r5, #20]
   17c3c:	pop	{r4, r5, r6, sl, fp, pc}
   17c40:	strb	r1, [r0, #1]
   17c44:	add	r1, r6, #48	; 0x30
   17c48:	strb	r1, [r0]
   17c4c:	mov	r0, #1
   17c50:	ldr	r1, [r5, #20]
   17c54:	add	r0, r1, r0
   17c58:	str	r0, [r5, #20]
   17c5c:	pop	{r4, r5, r6, sl, fp, pc}

00017c60 <flatcc_json_printer_uint16_struct_field@@Base>:
   17c60:	push	{r4, r5, r6, sl, fp, lr}
   17c64:	add	fp, sp, #16
   17c68:	mov	r5, r1
   17c6c:	mov	r4, r0
   17c70:	add	r0, r2, r3
   17c74:	ldr	r2, [fp, #12]
   17c78:	ldr	r1, [fp, #8]
   17c7c:	cmp	r5, #0
   17c80:	ldrh	r6, [r0]
   17c84:	ldrne	r0, [r4, #20]
   17c88:	addne	r3, r0, #1
   17c8c:	strne	r3, [r4, #20]
   17c90:	movne	r3, #44	; 0x2c
   17c94:	strbne	r3, [r0]
   17c98:	mov	r0, r4
   17c9c:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   17ca0:	ldr	r1, [r4, #20]
   17ca4:	mov	r0, r6
   17ca8:	bl	153a8 <flatcc_json_printer_uint16@@Base+0x2c>
   17cac:	ldr	r1, [r4, #20]
   17cb0:	add	r0, r1, r0
   17cb4:	str	r0, [r4, #20]
   17cb8:	pop	{r4, r5, r6, sl, fp, pc}

00017cbc <flatcc_json_printer_uint32_struct_field@@Base>:
   17cbc:	push	{r4, r5, r6, sl, fp, lr}
   17cc0:	add	fp, sp, #16
   17cc4:	mov	r5, r1
   17cc8:	mov	r4, r0
   17ccc:	ldr	r6, [r2, r3]
   17cd0:	ldr	r2, [fp, #12]
   17cd4:	ldr	r1, [fp, #8]
   17cd8:	cmp	r5, #0
   17cdc:	ldrne	r0, [r4, #20]
   17ce0:	addne	r3, r0, #1
   17ce4:	strne	r3, [r4, #20]
   17ce8:	movne	r3, #44	; 0x2c
   17cec:	strbne	r3, [r0]
   17cf0:	mov	r0, r4
   17cf4:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   17cf8:	ldr	r1, [r4, #20]
   17cfc:	mov	r0, r6
   17d00:	bl	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   17d04:	ldr	r1, [r4, #20]
   17d08:	add	r0, r1, r0
   17d0c:	str	r0, [r4, #20]
   17d10:	pop	{r4, r5, r6, sl, fp, pc}

00017d14 <flatcc_json_printer_uint64_struct_field@@Base>:
   17d14:	push	{r4, r5, r6, r7, fp, lr}
   17d18:	add	fp, sp, #16
   17d1c:	mov	r5, r1
   17d20:	ldr	r7, [r2, r3]!
   17d24:	mov	r4, r0
   17d28:	ldr	r1, [fp, #8]
   17d2c:	cmp	r5, #0
   17d30:	ldrne	r0, [r4, #20]
   17d34:	ldr	r6, [r2, #4]
   17d38:	ldr	r2, [fp, #12]
   17d3c:	addne	r3, r0, #1
   17d40:	strne	r3, [r4, #20]
   17d44:	movne	r3, #44	; 0x2c
   17d48:	strbne	r3, [r0]
   17d4c:	mov	r0, r4
   17d50:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   17d54:	ldr	r2, [r4, #20]
   17d58:	mov	r0, r7
   17d5c:	mov	r1, r6
   17d60:	bl	158b0 <flatcc_json_printer_uint64@@Base+0x30>
   17d64:	ldr	r1, [r4, #20]
   17d68:	add	r0, r1, r0
   17d6c:	str	r0, [r4, #20]
   17d70:	pop	{r4, r5, r6, r7, fp, pc}

00017d74 <flatcc_json_printer_int8_struct_field@@Base>:
   17d74:	push	{r4, r5, r6, sl, fp, lr}
   17d78:	add	fp, sp, #16
   17d7c:	mov	r4, r1
   17d80:	mov	r5, r0
   17d84:	add	r0, r2, r3
   17d88:	ldr	r2, [fp, #12]
   17d8c:	ldr	r1, [fp, #8]
   17d90:	cmp	r4, #0
   17d94:	ldrsb	r6, [r0]
   17d98:	ldrne	r0, [r5, #20]
   17d9c:	addne	r3, r0, #1
   17da0:	strne	r3, [r5, #20]
   17da4:	movne	r3, #44	; 0x2c
   17da8:	strbne	r3, [r0]
   17dac:	mov	r0, r5
   17db0:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   17db4:	ubfx	r0, r6, #7, #1
   17db8:	ldr	r1, [r5, #20]
   17dbc:	cmn	r6, #1
   17dc0:	movle	r2, #45	; 0x2d
   17dc4:	rsble	r6, r6, #0
   17dc8:	strble	r2, [r1], #1
   17dcc:	uxtb	r2, r6
   17dd0:	cmp	r2, #100	; 0x64
   17dd4:	bcc	17e20 <flatcc_json_printer_int8_struct_field@@Base+0xac>
   17dd8:	mov	r3, #0
   17ddc:	strb	r3, [r1, #3]
   17de0:	movw	r3, #34079	; 0x851f
   17de4:	movt	r3, #20971	; 0x51eb
   17de8:	umull	r3, r6, r2, r3
   17dec:	mov	r3, #48	; 0x30
   17df0:	orr	r3, r3, r6, lsr #5
   17df4:	strb	r3, [r1]
   17df8:	lsr	r3, r6, #5
   17dfc:	mov	r6, #100	; 0x64
   17e00:	mls	r2, r3, r6, r2
   17e04:	movw	r3, #6299	; 0x189b
   17e08:	movt	r3, #2
   17e0c:	add	r2, r3, r2, lsl #1
   17e10:	ldrh	r2, [r2]
   17e14:	strh	r2, [r1, #1]
   17e18:	mov	r1, #3
   17e1c:	b	17e78 <flatcc_json_printer_int8_struct_field@@Base+0x104>
   17e20:	cmp	r2, #10
   17e24:	bcc	17e64 <flatcc_json_printer_int8_struct_field@@Base+0xf0>
   17e28:	mov	r3, #0
   17e2c:	strb	r3, [r1, #2]
   17e30:	movw	r3, #34079	; 0x851f
   17e34:	movt	r3, #20971	; 0x51eb
   17e38:	umull	r3, r6, r2, r3
   17e3c:	lsr	r3, r6, #5
   17e40:	mov	r6, #100	; 0x64
   17e44:	mls	r2, r3, r6, r2
   17e48:	movw	r3, #6299	; 0x189b
   17e4c:	movt	r3, #2
   17e50:	add	r2, r3, r2, lsl #1
   17e54:	ldrh	r2, [r2]
   17e58:	strh	r2, [r1]
   17e5c:	mov	r1, #2
   17e60:	b	17e78 <flatcc_json_printer_int8_struct_field@@Base+0x104>
   17e64:	mov	r2, #0
   17e68:	strb	r2, [r1, #1]
   17e6c:	add	r2, r6, #48	; 0x30
   17e70:	strb	r2, [r1]
   17e74:	mov	r1, #1
   17e78:	add	r0, r1, r0
   17e7c:	ldr	r1, [r5, #20]
   17e80:	add	r0, r1, r0
   17e84:	str	r0, [r5, #20]
   17e88:	pop	{r4, r5, r6, sl, fp, pc}

00017e8c <flatcc_json_printer_int16_struct_field@@Base>:
   17e8c:	push	{r4, r5, r6, sl, fp, lr}
   17e90:	add	fp, sp, #16
   17e94:	mov	ip, r1
   17e98:	mov	r4, r0
   17e9c:	add	r0, r2, r3
   17ea0:	ldr	r2, [fp, #12]
   17ea4:	ldr	r1, [fp, #8]
   17ea8:	cmp	ip, #0
   17eac:	ldrsh	r5, [r0]
   17eb0:	ldrne	r0, [r4, #20]
   17eb4:	addne	r3, r0, #1
   17eb8:	strne	r3, [r4, #20]
   17ebc:	movne	r3, #44	; 0x2c
   17ec0:	strbne	r3, [r0]
   17ec4:	mov	r0, r4
   17ec8:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   17ecc:	ubfx	r6, r5, #15, #1
   17ed0:	ldr	r1, [r4, #20]
   17ed4:	cmn	r5, #1
   17ed8:	movle	r0, #45	; 0x2d
   17edc:	rsble	r5, r5, #0
   17ee0:	strble	r0, [r1], #1
   17ee4:	uxth	r0, r5
   17ee8:	bl	153a8 <flatcc_json_printer_uint16@@Base+0x2c>
   17eec:	ldr	r1, [r4, #20]
   17ef0:	add	r0, r0, r6
   17ef4:	add	r0, r1, r0
   17ef8:	str	r0, [r4, #20]
   17efc:	pop	{r4, r5, r6, sl, fp, pc}

00017f00 <flatcc_json_printer_int32_struct_field@@Base>:
   17f00:	push	{r4, r5, r6, sl, fp, lr}
   17f04:	add	fp, sp, #16
   17f08:	mov	ip, r1
   17f0c:	mov	r4, r0
   17f10:	ldr	r5, [r2, r3]
   17f14:	ldr	r2, [fp, #12]
   17f18:	ldr	r1, [fp, #8]
   17f1c:	cmp	ip, #0
   17f20:	ldrne	r0, [r4, #20]
   17f24:	addne	r3, r0, #1
   17f28:	strne	r3, [r4, #20]
   17f2c:	movne	r3, #44	; 0x2c
   17f30:	strbne	r3, [r0]
   17f34:	mov	r0, r4
   17f38:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   17f3c:	ldr	r1, [r4, #20]
   17f40:	cmn	r5, #1
   17f44:	lsr	r6, r5, #31
   17f48:	movle	r0, #45	; 0x2d
   17f4c:	rsble	r5, r5, #0
   17f50:	strble	r0, [r1], #1
   17f54:	mov	r0, r5
   17f58:	bl	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   17f5c:	ldr	r1, [r4, #20]
   17f60:	add	r0, r0, r6
   17f64:	add	r0, r1, r0
   17f68:	str	r0, [r4, #20]
   17f6c:	pop	{r4, r5, r6, sl, fp, pc}

00017f70 <flatcc_json_printer_int64_struct_field@@Base>:
   17f70:	push	{r4, r5, r6, r7, fp, lr}
   17f74:	add	fp, sp, #16
   17f78:	mov	r5, r1
   17f7c:	ldr	r7, [r2, r3]!
   17f80:	mov	r4, r0
   17f84:	ldr	r1, [fp, #8]
   17f88:	cmp	r5, #0
   17f8c:	ldrne	r0, [r4, #20]
   17f90:	ldr	r6, [r2, #4]
   17f94:	ldr	r2, [fp, #12]
   17f98:	addne	r3, r0, #1
   17f9c:	strne	r3, [r4, #20]
   17fa0:	movne	r3, #44	; 0x2c
   17fa4:	strbne	r3, [r0]
   17fa8:	mov	r0, r4
   17fac:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   17fb0:	ldr	r2, [r4, #20]
   17fb4:	lsr	r5, r6, #31
   17fb8:	cmn	r6, #1
   17fbc:	bgt	17fd0 <flatcc_json_printer_int64_struct_field@@Base+0x60>
   17fc0:	mov	r0, #45	; 0x2d
   17fc4:	rsbs	r7, r7, #0
   17fc8:	strb	r0, [r2], #1
   17fcc:	rsc	r6, r6, #0
   17fd0:	mov	r0, r7
   17fd4:	mov	r1, r6
   17fd8:	bl	158b0 <flatcc_json_printer_uint64@@Base+0x30>
   17fdc:	ldr	r1, [r4, #20]
   17fe0:	add	r0, r0, r5
   17fe4:	add	r0, r1, r0
   17fe8:	str	r0, [r4, #20]
   17fec:	pop	{r4, r5, r6, r7, fp, pc}

00017ff0 <flatcc_json_printer_bool_struct_field@@Base>:
   17ff0:	push	{r4, r5, fp, lr}
   17ff4:	add	fp, sp, #8
   17ff8:	mov	ip, r1
   17ffc:	mov	r4, r0
   18000:	ldrb	r5, [r2, r3]
   18004:	ldr	r2, [fp, #12]
   18008:	ldr	r1, [fp, #8]
   1800c:	cmp	ip, #0
   18010:	ldrne	r0, [r4, #20]
   18014:	addne	r3, r0, #1
   18018:	strne	r3, [r4, #20]
   1801c:	movne	r3, #44	; 0x2c
   18020:	strbne	r3, [r0]
   18024:	mov	r0, r4
   18028:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1802c:	ldr	r0, [r4, #20]
   18030:	cmp	r5, #0
   18034:	beq	18060 <flatcc_json_printer_bool_struct_field@@Base+0x70>
   18038:	mov	r1, #0
   1803c:	strb	r1, [r0, #4]
   18040:	movw	r1, #29300	; 0x7274
   18044:	movt	r1, #25973	; 0x6575
   18048:	str	r1, [r0]
   1804c:	mov	r0, #4
   18050:	ldr	r1, [r4, #20]
   18054:	add	r0, r1, r0
   18058:	str	r0, [r4, #20]
   1805c:	pop	{r4, r5, fp, pc}
   18060:	mov	r1, #101	; 0x65
   18064:	strh	r1, [r0, #4]
   18068:	movw	r1, #24934	; 0x6166
   1806c:	movt	r1, #29548	; 0x736c
   18070:	str	r1, [r0]
   18074:	mov	r0, #5
   18078:	ldr	r1, [r4, #20]
   1807c:	add	r0, r1, r0
   18080:	str	r0, [r4, #20]
   18084:	pop	{r4, r5, fp, pc}

00018088 <flatcc_json_printer_float_struct_field@@Base>:
   18088:	push	{r4, sl, fp, lr}
   1808c:	add	fp, sp, #8
   18090:	vpush	{d8}
   18094:	mov	ip, r1
   18098:	mov	r4, r0
   1809c:	add	r0, r2, r3
   180a0:	ldr	r2, [fp, #12]
   180a4:	ldr	r1, [fp, #8]
   180a8:	cmp	ip, #0
   180ac:	vldr	s16, [r0]
   180b0:	ldrne	r0, [r4, #20]
   180b4:	addne	r3, r0, #1
   180b8:	strne	r3, [r4, #20]
   180bc:	movne	r3, #44	; 0x2c
   180c0:	strbne	r3, [r0]
   180c4:	mov	r0, r4
   180c8:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   180cc:	ldr	r0, [r4, #20]
   180d0:	vcvt.f64.f32	d0, s16
   180d4:	bl	13f48 <flatcc_json_printer_fmt_float@@Base+0x8>
   180d8:	ldr	r1, [r4, #20]
   180dc:	add	r0, r1, r0
   180e0:	str	r0, [r4, #20]
   180e4:	vpop	{d8}
   180e8:	pop	{r4, sl, fp, pc}

000180ec <flatcc_json_printer_double_struct_field@@Base>:
   180ec:	push	{r4, sl, fp, lr}
   180f0:	add	fp, sp, #8
   180f4:	vpush	{d8}
   180f8:	mov	ip, r1
   180fc:	mov	r4, r0
   18100:	add	r0, r2, r3
   18104:	ldr	r2, [fp, #12]
   18108:	ldr	r1, [fp, #8]
   1810c:	cmp	ip, #0
   18110:	vldr	d8, [r0]
   18114:	ldrne	r0, [r4, #20]
   18118:	addne	r3, r0, #1
   1811c:	strne	r3, [r4, #20]
   18120:	movne	r3, #44	; 0x2c
   18124:	strbne	r3, [r0]
   18128:	mov	r0, r4
   1812c:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   18130:	ldr	r0, [r4, #20]
   18134:	vorr	d0, d8, d8
   18138:	bl	13f48 <flatcc_json_printer_fmt_float@@Base+0x8>
   1813c:	ldr	r1, [r4, #20]
   18140:	add	r0, r1, r0
   18144:	str	r0, [r4, #20]
   18148:	vpop	{d8}
   1814c:	pop	{r4, sl, fp, pc}

00018150 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   18150:	push	{r4, r5, r6, r7, fp, lr}
   18154:	add	fp, sp, #16
   18158:	mov	r5, r1
   1815c:	mov	r4, r0
   18160:	add	r7, fp, #8
   18164:	ldrb	r6, [r2, r3]
   18168:	cmp	r5, #0
   1816c:	ldm	r7, {r1, r2, r7}
   18170:	ldrne	r0, [r4, #20]
   18174:	addne	r3, r0, #1
   18178:	strne	r3, [r4, #20]
   1817c:	movne	r3, #44	; 0x2c
   18180:	strbne	r3, [r0]
   18184:	mov	r0, r4
   18188:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1818c:	ldrb	r0, [r4, #27]
   18190:	cmp	r0, #0
   18194:	beq	181f8 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xa8>
   18198:	ldr	r0, [r4, #20]
   1819c:	mov	r1, #0
   181a0:	cmp	r6, #100	; 0x64
   181a4:	bcc	1820c <flatcc_json_printer_uint8_enum_struct_field@@Base+0xbc>
   181a8:	strb	r1, [r0, #3]
   181ac:	movw	r1, #34079	; 0x851f
   181b0:	movt	r1, #20971	; 0x51eb
   181b4:	umull	r1, r2, r6, r1
   181b8:	mov	r1, #48	; 0x30
   181bc:	orr	r1, r1, r2, lsr #5
   181c0:	strb	r1, [r0]
   181c4:	lsr	r1, r2, #5
   181c8:	mov	r2, #100	; 0x64
   181cc:	mls	r1, r1, r2, r6
   181d0:	movw	r2, #6299	; 0x189b
   181d4:	movt	r2, #2
   181d8:	add	r1, r2, r1, lsl #1
   181dc:	ldrh	r1, [r1]
   181e0:	strh	r1, [r0, #1]
   181e4:	mov	r0, #3
   181e8:	ldr	r1, [r4, #20]
   181ec:	add	r0, r1, r0
   181f0:	str	r0, [r4, #20]
   181f4:	pop	{r4, r5, r6, r7, fp, pc}
   181f8:	mov	r0, r4
   181fc:	mov	r1, r6
   18200:	mov	r2, r7
   18204:	pop	{r4, r5, r6, r7, fp, lr}
   18208:	bx	r2
   1820c:	cmp	r6, #10
   18210:	bcc	18258 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x108>
   18214:	strb	r1, [r0, #2]
   18218:	movw	r1, #34079	; 0x851f
   1821c:	movt	r1, #20971	; 0x51eb
   18220:	umull	r1, r2, r6, r1
   18224:	lsr	r1, r2, #5
   18228:	mov	r2, #100	; 0x64
   1822c:	mls	r1, r1, r2, r6
   18230:	movw	r2, #6299	; 0x189b
   18234:	movt	r2, #2
   18238:	add	r1, r2, r1, lsl #1
   1823c:	ldrh	r1, [r1]
   18240:	strh	r1, [r0]
   18244:	mov	r0, #2
   18248:	ldr	r1, [r4, #20]
   1824c:	add	r0, r1, r0
   18250:	str	r0, [r4, #20]
   18254:	pop	{r4, r5, r6, r7, fp, pc}
   18258:	strb	r1, [r0, #1]
   1825c:	add	r1, r6, #48	; 0x30
   18260:	strb	r1, [r0]
   18264:	mov	r0, #1
   18268:	ldr	r1, [r4, #20]
   1826c:	add	r0, r1, r0
   18270:	str	r0, [r4, #20]
   18274:	pop	{r4, r5, r6, r7, fp, pc}

00018278 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   18278:	push	{r4, r5, r6, r7, fp, lr}
   1827c:	add	fp, sp, #16
   18280:	mov	r5, r1
   18284:	mov	r4, r0
   18288:	add	r0, r2, r3
   1828c:	add	r7, fp, #8
   18290:	cmp	r5, #0
   18294:	ldrh	r6, [r0]
   18298:	ldm	r7, {r1, r2, r7}
   1829c:	ldrne	r0, [r4, #20]
   182a0:	addne	r3, r0, #1
   182a4:	strne	r3, [r4, #20]
   182a8:	movne	r3, #44	; 0x2c
   182ac:	strbne	r3, [r0]
   182b0:	mov	r0, r4
   182b4:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   182b8:	ldrb	r0, [r4, #27]
   182bc:	cmp	r0, #0
   182c0:	beq	182e0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x68>
   182c4:	ldr	r1, [r4, #20]
   182c8:	mov	r0, r6
   182cc:	bl	153a8 <flatcc_json_printer_uint16@@Base+0x2c>
   182d0:	ldr	r1, [r4, #20]
   182d4:	add	r0, r1, r0
   182d8:	str	r0, [r4, #20]
   182dc:	pop	{r4, r5, r6, r7, fp, pc}
   182e0:	mov	r0, r4
   182e4:	mov	r1, r6
   182e8:	mov	r2, r7
   182ec:	pop	{r4, r5, r6, r7, fp, lr}
   182f0:	bx	r2

000182f4 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   182f4:	push	{r4, r5, r6, r7, fp, lr}
   182f8:	add	fp, sp, #16
   182fc:	mov	r5, r1
   18300:	mov	r4, r0
   18304:	add	r7, fp, #8
   18308:	ldr	r6, [r2, r3]
   1830c:	cmp	r5, #0
   18310:	ldm	r7, {r1, r2, r7}
   18314:	ldrne	r0, [r4, #20]
   18318:	addne	r3, r0, #1
   1831c:	strne	r3, [r4, #20]
   18320:	movne	r3, #44	; 0x2c
   18324:	strbne	r3, [r0]
   18328:	mov	r0, r4
   1832c:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   18330:	ldrb	r0, [r4, #27]
   18334:	cmp	r0, #0
   18338:	beq	18358 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x64>
   1833c:	ldr	r1, [r4, #20]
   18340:	mov	r0, r6
   18344:	bl	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   18348:	ldr	r1, [r4, #20]
   1834c:	add	r0, r1, r0
   18350:	str	r0, [r4, #20]
   18354:	pop	{r4, r5, r6, r7, fp, pc}
   18358:	mov	r0, r4
   1835c:	mov	r1, r6
   18360:	mov	r2, r7
   18364:	pop	{r4, r5, r6, r7, fp, lr}
   18368:	bx	r2

0001836c <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   1836c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18370:	add	fp, sp, #24
   18374:	ldr	r6, [r2, r3]!
   18378:	mov	r5, r1
   1837c:	mov	r4, r0
   18380:	add	r8, fp, #8
   18384:	cmp	r5, #0
   18388:	ldr	r7, [r2, #4]
   1838c:	ldm	r8, {r1, r2, r8}
   18390:	ldrne	r0, [r4, #20]
   18394:	addne	r3, r0, #1
   18398:	strne	r3, [r4, #20]
   1839c:	movne	r3, #44	; 0x2c
   183a0:	strbne	r3, [r0]
   183a4:	mov	r0, r4
   183a8:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   183ac:	ldrb	r0, [r4, #27]
   183b0:	cmp	r0, #0
   183b4:	beq	183d8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x6c>
   183b8:	ldr	r2, [r4, #20]
   183bc:	mov	r0, r6
   183c0:	mov	r1, r7
   183c4:	bl	158b0 <flatcc_json_printer_uint64@@Base+0x30>
   183c8:	ldr	r1, [r4, #20]
   183cc:	add	r0, r1, r0
   183d0:	str	r0, [r4, #20]
   183d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   183d8:	mov	r0, r4
   183dc:	mov	r2, r6
   183e0:	mov	r3, r7
   183e4:	mov	r1, r8
   183e8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   183ec:	bx	r1

000183f0 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   183f0:	push	{r4, r5, r6, r7, fp, lr}
   183f4:	add	fp, sp, #16
   183f8:	mov	r5, r1
   183fc:	mov	r4, r0
   18400:	add	r0, r2, r3
   18404:	add	r7, fp, #8
   18408:	cmp	r5, #0
   1840c:	ldrsb	r6, [r0]
   18410:	ldm	r7, {r1, r2, r7}
   18414:	ldrne	r0, [r4, #20]
   18418:	addne	r3, r0, #1
   1841c:	strne	r3, [r4, #20]
   18420:	movne	r3, #44	; 0x2c
   18424:	strbne	r3, [r0]
   18428:	mov	r0, r4
   1842c:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   18430:	ldrb	r0, [r4, #27]
   18434:	cmp	r0, #0
   18438:	beq	184a8 <flatcc_json_printer_int8_enum_struct_field@@Base+0xb8>
   1843c:	ubfx	r0, r6, #7, #1
   18440:	ldr	r1, [r4, #20]
   18444:	cmn	r6, #1
   18448:	movle	r2, #45	; 0x2d
   1844c:	rsble	r6, r6, #0
   18450:	strble	r2, [r1], #1
   18454:	uxtb	r2, r6
   18458:	cmp	r2, #100	; 0x64
   1845c:	bcc	184bc <flatcc_json_printer_int8_enum_struct_field@@Base+0xcc>
   18460:	mov	r3, #0
   18464:	strb	r3, [r1, #3]
   18468:	movw	r3, #34079	; 0x851f
   1846c:	movt	r3, #20971	; 0x51eb
   18470:	umull	r3, r6, r2, r3
   18474:	mov	r3, #48	; 0x30
   18478:	orr	r3, r3, r6, lsr #5
   1847c:	strb	r3, [r1]
   18480:	lsr	r3, r6, #5
   18484:	mov	r6, #100	; 0x64
   18488:	mls	r2, r3, r6, r2
   1848c:	movw	r3, #6299	; 0x189b
   18490:	movt	r3, #2
   18494:	add	r2, r3, r2, lsl #1
   18498:	ldrh	r2, [r2]
   1849c:	strh	r2, [r1, #1]
   184a0:	mov	r1, #3
   184a4:	b	18514 <flatcc_json_printer_int8_enum_struct_field@@Base+0x124>
   184a8:	mov	r0, r4
   184ac:	mov	r1, r6
   184b0:	mov	r2, r7
   184b4:	pop	{r4, r5, r6, r7, fp, lr}
   184b8:	bx	r2
   184bc:	cmp	r2, #10
   184c0:	bcc	18500 <flatcc_json_printer_int8_enum_struct_field@@Base+0x110>
   184c4:	mov	r3, #0
   184c8:	strb	r3, [r1, #2]
   184cc:	movw	r3, #34079	; 0x851f
   184d0:	movt	r3, #20971	; 0x51eb
   184d4:	umull	r3, r6, r2, r3
   184d8:	lsr	r3, r6, #5
   184dc:	mov	r6, #100	; 0x64
   184e0:	mls	r2, r3, r6, r2
   184e4:	movw	r3, #6299	; 0x189b
   184e8:	movt	r3, #2
   184ec:	add	r2, r3, r2, lsl #1
   184f0:	ldrh	r2, [r2]
   184f4:	strh	r2, [r1]
   184f8:	mov	r1, #2
   184fc:	b	18514 <flatcc_json_printer_int8_enum_struct_field@@Base+0x124>
   18500:	mov	r2, #0
   18504:	strb	r2, [r1, #1]
   18508:	add	r2, r6, #48	; 0x30
   1850c:	strb	r2, [r1]
   18510:	mov	r1, #1
   18514:	add	r0, r1, r0
   18518:	ldr	r1, [r4, #20]
   1851c:	add	r0, r1, r0
   18520:	str	r0, [r4, #20]
   18524:	pop	{r4, r5, r6, r7, fp, pc}

00018528 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   18528:	push	{r4, r5, r6, r7, fp, lr}
   1852c:	add	fp, sp, #16
   18530:	mov	r5, r1
   18534:	mov	r4, r0
   18538:	add	r0, r2, r3
   1853c:	add	r7, fp, #8
   18540:	cmp	r5, #0
   18544:	ldrsh	r6, [r0]
   18548:	ldm	r7, {r1, r2, r7}
   1854c:	ldrne	r0, [r4, #20]
   18550:	addne	r3, r0, #1
   18554:	strne	r3, [r4, #20]
   18558:	movne	r3, #44	; 0x2c
   1855c:	strbne	r3, [r0]
   18560:	mov	r0, r4
   18564:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   18568:	ldrb	r0, [r4, #27]
   1856c:	cmp	r0, #0
   18570:	beq	185a8 <flatcc_json_printer_int16_enum_struct_field@@Base+0x80>
   18574:	ubfx	r5, r6, #15, #1
   18578:	ldr	r1, [r4, #20]
   1857c:	cmn	r6, #1
   18580:	movle	r0, #45	; 0x2d
   18584:	rsble	r6, r6, #0
   18588:	strble	r0, [r1], #1
   1858c:	uxth	r0, r6
   18590:	bl	153a8 <flatcc_json_printer_uint16@@Base+0x2c>
   18594:	ldr	r1, [r4, #20]
   18598:	add	r0, r0, r5
   1859c:	add	r0, r1, r0
   185a0:	str	r0, [r4, #20]
   185a4:	pop	{r4, r5, r6, r7, fp, pc}
   185a8:	mov	r0, r4
   185ac:	mov	r1, r6
   185b0:	mov	r2, r7
   185b4:	pop	{r4, r5, r6, r7, fp, lr}
   185b8:	bx	r2

000185bc <flatcc_json_printer_int32_enum_struct_field@@Base>:
   185bc:	push	{r4, r5, r6, r7, fp, lr}
   185c0:	add	fp, sp, #16
   185c4:	mov	r5, r1
   185c8:	mov	r4, r0
   185cc:	add	r7, fp, #8
   185d0:	ldr	r6, [r2, r3]
   185d4:	cmp	r5, #0
   185d8:	ldm	r7, {r1, r2, r7}
   185dc:	ldrne	r0, [r4, #20]
   185e0:	addne	r3, r0, #1
   185e4:	strne	r3, [r4, #20]
   185e8:	movne	r3, #44	; 0x2c
   185ec:	strbne	r3, [r0]
   185f0:	mov	r0, r4
   185f4:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   185f8:	ldrb	r0, [r4, #27]
   185fc:	cmp	r0, #0
   18600:	beq	18638 <flatcc_json_printer_int32_enum_struct_field@@Base+0x7c>
   18604:	ldr	r1, [r4, #20]
   18608:	cmn	r6, #1
   1860c:	lsr	r5, r6, #31
   18610:	movle	r0, #45	; 0x2d
   18614:	rsble	r6, r6, #0
   18618:	strble	r0, [r1], #1
   1861c:	mov	r0, r6
   18620:	bl	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   18624:	ldr	r1, [r4, #20]
   18628:	add	r0, r0, r5
   1862c:	add	r0, r1, r0
   18630:	str	r0, [r4, #20]
   18634:	pop	{r4, r5, r6, r7, fp, pc}
   18638:	mov	r0, r4
   1863c:	mov	r1, r6
   18640:	mov	r2, r7
   18644:	pop	{r4, r5, r6, r7, fp, lr}
   18648:	bx	r2

0001864c <flatcc_json_printer_int64_enum_struct_field@@Base>:
   1864c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18650:	add	fp, sp, #24
   18654:	ldr	r7, [r2, r3]!
   18658:	mov	r6, r1
   1865c:	mov	r4, r0
   18660:	add	r8, fp, #8
   18664:	cmp	r6, #0
   18668:	ldr	r5, [r2, #4]
   1866c:	ldm	r8, {r1, r2, r8}
   18670:	ldrne	r0, [r4, #20]
   18674:	addne	r3, r0, #1
   18678:	strne	r3, [r4, #20]
   1867c:	movne	r3, #44	; 0x2c
   18680:	strbne	r3, [r0]
   18684:	mov	r0, r4
   18688:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1868c:	ldrb	r0, [r4, #27]
   18690:	cmp	r0, #0
   18694:	beq	186d8 <flatcc_json_printer_int64_enum_struct_field@@Base+0x8c>
   18698:	ldr	r2, [r4, #20]
   1869c:	lsr	r6, r5, #31
   186a0:	cmn	r5, #1
   186a4:	bgt	186b8 <flatcc_json_printer_int64_enum_struct_field@@Base+0x6c>
   186a8:	mov	r0, #45	; 0x2d
   186ac:	rsbs	r7, r7, #0
   186b0:	strb	r0, [r2], #1
   186b4:	rsc	r5, r5, #0
   186b8:	mov	r0, r7
   186bc:	mov	r1, r5
   186c0:	bl	158b0 <flatcc_json_printer_uint64@@Base+0x30>
   186c4:	ldr	r1, [r4, #20]
   186c8:	add	r0, r0, r6
   186cc:	add	r0, r1, r0
   186d0:	str	r0, [r4, #20]
   186d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   186d8:	mov	r0, r4
   186dc:	mov	r2, r7
   186e0:	mov	r3, r5
   186e4:	mov	r1, r8
   186e8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   186ec:	bx	r1

000186f0 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   186f0:	push	{r4, r5, r6, r7, fp, lr}
   186f4:	add	fp, sp, #16
   186f8:	mov	r5, r1
   186fc:	mov	r4, r0
   18700:	add	r7, fp, #8
   18704:	ldrb	r6, [r2, r3]
   18708:	cmp	r5, #0
   1870c:	ldm	r7, {r1, r2, r7}
   18710:	ldrne	r0, [r4, #20]
   18714:	addne	r3, r0, #1
   18718:	strne	r3, [r4, #20]
   1871c:	movne	r3, #44	; 0x2c
   18720:	strbne	r3, [r0]
   18724:	mov	r0, r4
   18728:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1872c:	ldrb	r0, [r4, #27]
   18730:	cmp	r0, #0
   18734:	beq	1876c <flatcc_json_printer_bool_enum_struct_field@@Base+0x7c>
   18738:	ldr	r0, [r4, #20]
   1873c:	cmp	r6, #0
   18740:	beq	18780 <flatcc_json_printer_bool_enum_struct_field@@Base+0x90>
   18744:	mov	r1, #0
   18748:	strb	r1, [r0, #4]
   1874c:	movw	r1, #29300	; 0x7274
   18750:	movt	r1, #25973	; 0x6575
   18754:	str	r1, [r0]
   18758:	mov	r0, #4
   1875c:	ldr	r1, [r4, #20]
   18760:	add	r0, r1, r0
   18764:	str	r0, [r4, #20]
   18768:	pop	{r4, r5, r6, r7, fp, pc}
   1876c:	mov	r0, r4
   18770:	mov	r1, r6
   18774:	mov	r2, r7
   18778:	pop	{r4, r5, r6, r7, fp, lr}
   1877c:	bx	r2
   18780:	mov	r1, #101	; 0x65
   18784:	strh	r1, [r0, #4]
   18788:	movw	r1, #24934	; 0x6166
   1878c:	movt	r1, #29548	; 0x736c
   18790:	str	r1, [r0]
   18794:	mov	r0, #5
   18798:	ldr	r1, [r4, #20]
   1879c:	add	r0, r1, r0
   187a0:	str	r0, [r4, #20]
   187a4:	pop	{r4, r5, r6, r7, fp, pc}

000187a8 <flatcc_json_printer_utype_vector_field@@Base>:
   187a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187ac:	add	fp, sp, #28
   187b0:	sub	sp, sp, #4
   187b4:	mov	r4, r0
   187b8:	mov	r0, #4
   187bc:	add	r0, r0, r2, lsl #1
   187c0:	ldr	r2, [r1, #8]
   187c4:	cmp	r0, r2
   187c8:	bge	187e8 <flatcc_json_printer_utype_vector_field@@Base+0x40>
   187cc:	ldr	r2, [r1, #4]
   187d0:	add	r0, r2, r0
   187d4:	ldrh	r0, [r0]
   187d8:	cmp	r0, #0
   187dc:	ldrne	r2, [r1]
   187e0:	addsne	r9, r2, r0
   187e4:	bne	187f0 <flatcc_json_printer_utype_vector_field@@Base+0x48>
   187e8:	sub	sp, fp, #28
   187ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   187f0:	ldr	r0, [r1, #16]
   187f4:	ldr	r2, [fp, #8]
   187f8:	add	r7, r0, #1
   187fc:	cmp	r0, #0
   18800:	str	r7, [r1, #16]
   18804:	ldrne	r0, [r4, #20]
   18808:	addne	r1, r0, #1
   1880c:	strne	r1, [r4, #20]
   18810:	movne	r1, #44	; 0x2c
   18814:	strbne	r1, [r0]
   18818:	mov	r1, r3
   1881c:	ldr	r0, [r9]
   18820:	ldr	r8, [r9, r0]!
   18824:	mov	r0, r4
   18828:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1882c:	ldr	r1, [r4, #32]
   18830:	ldr	r0, [r4, #20]
   18834:	cmp	r8, #0
   18838:	add	r1, r1, #1
   1883c:	str	r1, [r4, #32]
   18840:	add	r1, r0, #1
   18844:	str	r1, [r4, #20]
   18848:	mov	r1, #91	; 0x5b
   1884c:	strb	r1, [r0]
   18850:	beq	18bd4 <flatcc_json_printer_utype_vector_field@@Base+0x42c>
   18854:	ldrb	r1, [r4, #25]
   18858:	ldr	r0, [r4, #20]
   1885c:	cmp	r1, #0
   18860:	beq	1892c <flatcc_json_printer_utype_vector_field@@Base+0x184>
   18864:	add	r1, r0, #1
   18868:	str	r1, [r4, #20]
   1886c:	mov	r1, #10
   18870:	strb	r1, [r0]
   18874:	ldr	r0, [r4, #20]
   18878:	ldrb	r2, [r4, #25]
   1887c:	ldr	r3, [r4, #32]
   18880:	ldr	r1, [r4, #16]
   18884:	mla	r7, r3, r2, r0
   18888:	mul	r5, r3, r2
   1888c:	cmp	r7, r1
   18890:	bls	18900 <flatcc_json_printer_utype_vector_field@@Base+0x158>
   18894:	cmp	r0, r1
   18898:	bcc	188b4 <flatcc_json_printer_utype_vector_field@@Base+0x10c>
   1889c:	ldr	r2, [r4, #44]	; 0x2c
   188a0:	mov	r0, r4
   188a4:	mov	r1, #0
   188a8:	blx	r2
   188ac:	ldr	r1, [r4, #16]
   188b0:	ldr	r0, [r4, #20]
   188b4:	sub	r6, r1, r0
   188b8:	cmp	r6, r5
   188bc:	bcs	18900 <flatcc_json_printer_utype_vector_field@@Base+0x158>
   188c0:	mov	r1, #32
   188c4:	mov	r2, r6
   188c8:	bl	12948 <memset@plt>
   188cc:	ldr	r0, [r4, #20]
   188d0:	ldr	r2, [r4, #44]	; 0x2c
   188d4:	mov	r1, #0
   188d8:	add	r0, r0, r6
   188dc:	str	r0, [r4, #20]
   188e0:	mov	r0, r4
   188e4:	blx	r2
   188e8:	ldr	r1, [r4, #16]
   188ec:	ldr	r0, [r4, #20]
   188f0:	sub	r5, r5, r6
   188f4:	sub	r6, r1, r0
   188f8:	cmp	r5, r6
   188fc:	bhi	188c0 <flatcc_json_printer_utype_vector_field@@Base+0x118>
   18900:	mov	r1, #32
   18904:	mov	r2, r5
   18908:	bl	12948 <memset@plt>
   1890c:	ldr	r0, [r4, #20]
   18910:	add	r0, r0, r5
   18914:	str	r0, [r4, #20]
   18918:	ldrb	r1, [r9, #4]
   1891c:	mov	r2, #0
   18920:	cmp	r1, #100	; 0x64
   18924:	bcs	1895c <flatcc_json_printer_utype_vector_field@@Base+0x1b4>
   18928:	b	189a0 <flatcc_json_printer_utype_vector_field@@Base+0x1f8>
   1892c:	ldr	r1, [r4, #16]
   18930:	cmp	r0, r1
   18934:	bcc	1894c <flatcc_json_printer_utype_vector_field@@Base+0x1a4>
   18938:	ldr	r2, [r4, #44]	; 0x2c
   1893c:	mov	r0, r4
   18940:	mov	r1, #0
   18944:	blx	r2
   18948:	ldr	r0, [r4, #20]
   1894c:	ldrb	r1, [r9, #4]
   18950:	mov	r2, #0
   18954:	cmp	r1, #100	; 0x64
   18958:	bcc	189a0 <flatcc_json_printer_utype_vector_field@@Base+0x1f8>
   1895c:	strb	r2, [r0, #3]
   18960:	movw	r2, #34079	; 0x851f
   18964:	movt	r2, #20971	; 0x51eb
   18968:	umull	r2, r3, r1, r2
   1896c:	mov	r2, #48	; 0x30
   18970:	orr	r2, r2, r3, lsr #5
   18974:	strb	r2, [r0]
   18978:	lsr	r2, r3, #5
   1897c:	mov	r3, #100	; 0x64
   18980:	mls	r1, r2, r3, r1
   18984:	movw	r2, #6299	; 0x189b
   18988:	movt	r2, #2
   1898c:	add	r1, r2, r1, lsl #1
   18990:	ldrh	r1, [r1]
   18994:	strh	r1, [r0, #1]
   18998:	mov	r0, #3
   1899c:	b	189f0 <flatcc_json_printer_utype_vector_field@@Base+0x248>
   189a0:	cmp	r1, #10
   189a4:	bcc	189e0 <flatcc_json_printer_utype_vector_field@@Base+0x238>
   189a8:	strb	r2, [r0, #2]
   189ac:	movw	r2, #34079	; 0x851f
   189b0:	movt	r2, #20971	; 0x51eb
   189b4:	umull	r2, r3, r1, r2
   189b8:	lsr	r2, r3, #5
   189bc:	mov	r3, #100	; 0x64
   189c0:	mls	r1, r2, r3, r1
   189c4:	movw	r2, #6299	; 0x189b
   189c8:	movt	r2, #2
   189cc:	add	r1, r2, r1, lsl #1
   189d0:	ldrh	r1, [r1]
   189d4:	strh	r1, [r0]
   189d8:	mov	r0, #2
   189dc:	b	189f0 <flatcc_json_printer_utype_vector_field@@Base+0x248>
   189e0:	add	r1, r1, #48	; 0x30
   189e4:	strb	r2, [r0, #1]
   189e8:	strb	r1, [r0]
   189ec:	mov	r0, #1
   189f0:	ldr	r1, [r4, #20]
   189f4:	subs	r8, r8, #1
   189f8:	add	r0, r1, r0
   189fc:	str	r0, [r4, #20]
   18a00:	beq	18bd4 <flatcc_json_printer_utype_vector_field@@Base+0x42c>
   18a04:	ldr	r0, [r4, #20]
   18a08:	add	r7, r9, #5
   18a0c:	mov	r9, #44	; 0x2c
   18a10:	mov	sl, #0
   18a14:	add	r1, r0, #1
   18a18:	str	r1, [r4, #20]
   18a1c:	strb	r9, [r0]
   18a20:	ldrb	r1, [r4, #25]
   18a24:	ldr	r0, [r4, #20]
   18a28:	cmp	r1, #0
   18a2c:	beq	18af8 <flatcc_json_printer_utype_vector_field@@Base+0x350>
   18a30:	add	r1, r0, #1
   18a34:	str	r1, [r4, #20]
   18a38:	mov	r1, #10
   18a3c:	strb	r1, [r0]
   18a40:	ldr	r0, [r4, #20]
   18a44:	ldrb	r2, [r4, #25]
   18a48:	ldr	r3, [r4, #32]
   18a4c:	ldr	r1, [r4, #16]
   18a50:	mla	r6, r3, r2, r0
   18a54:	mul	r5, r3, r2
   18a58:	cmp	r6, r1
   18a5c:	bls	18acc <flatcc_json_printer_utype_vector_field@@Base+0x324>
   18a60:	cmp	r0, r1
   18a64:	bcc	18a80 <flatcc_json_printer_utype_vector_field@@Base+0x2d8>
   18a68:	ldr	r2, [r4, #44]	; 0x2c
   18a6c:	mov	r0, r4
   18a70:	mov	r1, #0
   18a74:	blx	r2
   18a78:	ldr	r1, [r4, #16]
   18a7c:	ldr	r0, [r4, #20]
   18a80:	sub	r6, r1, r0
   18a84:	cmp	r6, r5
   18a88:	bcs	18acc <flatcc_json_printer_utype_vector_field@@Base+0x324>
   18a8c:	mov	r1, #32
   18a90:	mov	r2, r6
   18a94:	bl	12948 <memset@plt>
   18a98:	ldr	r0, [r4, #20]
   18a9c:	ldr	r2, [r4, #44]	; 0x2c
   18aa0:	mov	r1, #0
   18aa4:	add	r0, r0, r6
   18aa8:	str	r0, [r4, #20]
   18aac:	mov	r0, r4
   18ab0:	blx	r2
   18ab4:	ldr	r1, [r4, #16]
   18ab8:	ldr	r0, [r4, #20]
   18abc:	sub	r5, r5, r6
   18ac0:	sub	r6, r1, r0
   18ac4:	cmp	r5, r6
   18ac8:	bhi	18a8c <flatcc_json_printer_utype_vector_field@@Base+0x2e4>
   18acc:	mov	r1, #32
   18ad0:	mov	r2, r5
   18ad4:	bl	12948 <memset@plt>
   18ad8:	ldr	r0, [r4, #20]
   18adc:	add	r0, r0, r5
   18ae0:	str	r0, [r4, #20]
   18ae4:	ldrb	r1, [r7]
   18ae8:	sub	r8, r8, #1
   18aec:	cmp	r1, #100	; 0x64
   18af0:	bcs	18b28 <flatcc_json_printer_utype_vector_field@@Base+0x380>
   18af4:	b	18b6c <flatcc_json_printer_utype_vector_field@@Base+0x3c4>
   18af8:	ldr	r1, [r4, #16]
   18afc:	cmp	r0, r1
   18b00:	bcc	18b18 <flatcc_json_printer_utype_vector_field@@Base+0x370>
   18b04:	ldr	r2, [r4, #44]	; 0x2c
   18b08:	mov	r0, r4
   18b0c:	mov	r1, #0
   18b10:	blx	r2
   18b14:	ldr	r0, [r4, #20]
   18b18:	ldrb	r1, [r7]
   18b1c:	sub	r8, r8, #1
   18b20:	cmp	r1, #100	; 0x64
   18b24:	bcc	18b6c <flatcc_json_printer_utype_vector_field@@Base+0x3c4>
   18b28:	movw	r2, #34079	; 0x851f
   18b2c:	strb	sl, [r0, #3]
   18b30:	movt	r2, #20971	; 0x51eb
   18b34:	umull	r2, r3, r1, r2
   18b38:	mov	r2, #48	; 0x30
   18b3c:	orr	r2, r2, r3, lsr #5
   18b40:	strb	r2, [r0]
   18b44:	lsr	r2, r3, #5
   18b48:	mov	r3, #100	; 0x64
   18b4c:	mls	r1, r2, r3, r1
   18b50:	movw	r2, #6299	; 0x189b
   18b54:	movt	r2, #2
   18b58:	add	r1, r2, r1, lsl #1
   18b5c:	ldrh	r1, [r1]
   18b60:	strh	r1, [r0, #1]
   18b64:	mov	r0, #3
   18b68:	b	18bbc <flatcc_json_printer_utype_vector_field@@Base+0x414>
   18b6c:	cmp	r1, #10
   18b70:	bcc	18bac <flatcc_json_printer_utype_vector_field@@Base+0x404>
   18b74:	movw	r2, #34079	; 0x851f
   18b78:	strb	sl, [r0, #2]
   18b7c:	movt	r2, #20971	; 0x51eb
   18b80:	umull	r2, r3, r1, r2
   18b84:	lsr	r2, r3, #5
   18b88:	mov	r3, #100	; 0x64
   18b8c:	mls	r1, r2, r3, r1
   18b90:	movw	r2, #6299	; 0x189b
   18b94:	movt	r2, #2
   18b98:	add	r1, r2, r1, lsl #1
   18b9c:	ldrh	r1, [r1]
   18ba0:	strh	r1, [r0]
   18ba4:	mov	r0, #2
   18ba8:	b	18bbc <flatcc_json_printer_utype_vector_field@@Base+0x414>
   18bac:	add	r1, r1, #48	; 0x30
   18bb0:	strb	sl, [r0, #1]
   18bb4:	strb	r1, [r0]
   18bb8:	mov	r0, #1
   18bbc:	ldr	r1, [r4, #20]
   18bc0:	add	r7, r7, #1
   18bc4:	cmp	r8, #0
   18bc8:	add	r0, r1, r0
   18bcc:	str	r0, [r4, #20]
   18bd0:	bne	18a14 <flatcc_json_printer_utype_vector_field@@Base+0x26c>
   18bd4:	ldrb	r1, [r4, #25]
   18bd8:	ldr	r0, [r4, #20]
   18bdc:	cmp	r1, #0
   18be0:	beq	18ca0 <flatcc_json_printer_utype_vector_field@@Base+0x4f8>
   18be4:	add	r1, r0, #1
   18be8:	str	r1, [r4, #20]
   18bec:	mov	r1, #10
   18bf0:	strb	r1, [r0]
   18bf4:	ldr	r0, [r4, #32]
   18bf8:	sub	r2, r0, #1
   18bfc:	str	r2, [r4, #32]
   18c00:	ldrb	r3, [r4, #25]
   18c04:	ldr	r0, [r4, #20]
   18c08:	ldr	r1, [r4, #16]
   18c0c:	mla	r7, r2, r3, r0
   18c10:	mul	r5, r2, r3
   18c14:	cmp	r7, r1
   18c18:	bls	18c88 <flatcc_json_printer_utype_vector_field@@Base+0x4e0>
   18c1c:	cmp	r0, r1
   18c20:	bcc	18c3c <flatcc_json_printer_utype_vector_field@@Base+0x494>
   18c24:	ldr	r2, [r4, #44]	; 0x2c
   18c28:	mov	r0, r4
   18c2c:	mov	r1, #0
   18c30:	blx	r2
   18c34:	ldr	r1, [r4, #16]
   18c38:	ldr	r0, [r4, #20]
   18c3c:	sub	r6, r1, r0
   18c40:	cmp	r6, r5
   18c44:	bcs	18c88 <flatcc_json_printer_utype_vector_field@@Base+0x4e0>
   18c48:	mov	r1, #32
   18c4c:	mov	r2, r6
   18c50:	bl	12948 <memset@plt>
   18c54:	ldr	r0, [r4, #20]
   18c58:	ldr	r2, [r4, #44]	; 0x2c
   18c5c:	mov	r1, #0
   18c60:	add	r0, r0, r6
   18c64:	str	r0, [r4, #20]
   18c68:	mov	r0, r4
   18c6c:	blx	r2
   18c70:	ldr	r1, [r4, #16]
   18c74:	ldr	r0, [r4, #20]
   18c78:	sub	r5, r5, r6
   18c7c:	sub	r6, r1, r0
   18c80:	cmp	r5, r6
   18c84:	bhi	18c48 <flatcc_json_printer_utype_vector_field@@Base+0x4a0>
   18c88:	mov	r1, #32
   18c8c:	mov	r2, r5
   18c90:	bl	12948 <memset@plt>
   18c94:	ldr	r0, [r4, #20]
   18c98:	add	r0, r0, r5
   18c9c:	str	r0, [r4, #20]
   18ca0:	add	r1, r0, #1
   18ca4:	str	r1, [r4, #20]
   18ca8:	mov	r1, #93	; 0x5d
   18cac:	strb	r1, [r0]
   18cb0:	sub	sp, fp, #28
   18cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018cb8 <flatcc_json_printer_uint8_vector_field@@Base>:
   18cb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18cbc:	add	fp, sp, #28
   18cc0:	sub	sp, sp, #4
   18cc4:	mov	r4, r0
   18cc8:	mov	r0, #4
   18ccc:	add	r0, r0, r2, lsl #1
   18cd0:	ldr	r2, [r1, #8]
   18cd4:	cmp	r0, r2
   18cd8:	bge	18cf8 <flatcc_json_printer_uint8_vector_field@@Base+0x40>
   18cdc:	ldr	r2, [r1, #4]
   18ce0:	add	r0, r2, r0
   18ce4:	ldrh	r0, [r0]
   18ce8:	cmp	r0, #0
   18cec:	ldrne	r2, [r1]
   18cf0:	addsne	r9, r2, r0
   18cf4:	bne	18d00 <flatcc_json_printer_uint8_vector_field@@Base+0x48>
   18cf8:	sub	sp, fp, #28
   18cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d00:	ldr	r0, [r1, #16]
   18d04:	ldr	r2, [fp, #8]
   18d08:	add	r7, r0, #1
   18d0c:	cmp	r0, #0
   18d10:	str	r7, [r1, #16]
   18d14:	ldrne	r0, [r4, #20]
   18d18:	addne	r1, r0, #1
   18d1c:	strne	r1, [r4, #20]
   18d20:	movne	r1, #44	; 0x2c
   18d24:	strbne	r1, [r0]
   18d28:	mov	r1, r3
   18d2c:	ldr	r0, [r9]
   18d30:	ldr	r8, [r9, r0]!
   18d34:	mov	r0, r4
   18d38:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   18d3c:	ldr	r1, [r4, #32]
   18d40:	ldr	r0, [r4, #20]
   18d44:	cmp	r8, #0
   18d48:	add	r1, r1, #1
   18d4c:	str	r1, [r4, #32]
   18d50:	add	r1, r0, #1
   18d54:	str	r1, [r4, #20]
   18d58:	mov	r1, #91	; 0x5b
   18d5c:	strb	r1, [r0]
   18d60:	beq	190e4 <flatcc_json_printer_uint8_vector_field@@Base+0x42c>
   18d64:	ldrb	r1, [r4, #25]
   18d68:	ldr	r0, [r4, #20]
   18d6c:	cmp	r1, #0
   18d70:	beq	18e3c <flatcc_json_printer_uint8_vector_field@@Base+0x184>
   18d74:	add	r1, r0, #1
   18d78:	str	r1, [r4, #20]
   18d7c:	mov	r1, #10
   18d80:	strb	r1, [r0]
   18d84:	ldr	r0, [r4, #20]
   18d88:	ldrb	r2, [r4, #25]
   18d8c:	ldr	r3, [r4, #32]
   18d90:	ldr	r1, [r4, #16]
   18d94:	mla	r7, r3, r2, r0
   18d98:	mul	r5, r3, r2
   18d9c:	cmp	r7, r1
   18da0:	bls	18e10 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
   18da4:	cmp	r0, r1
   18da8:	bcc	18dc4 <flatcc_json_printer_uint8_vector_field@@Base+0x10c>
   18dac:	ldr	r2, [r4, #44]	; 0x2c
   18db0:	mov	r0, r4
   18db4:	mov	r1, #0
   18db8:	blx	r2
   18dbc:	ldr	r1, [r4, #16]
   18dc0:	ldr	r0, [r4, #20]
   18dc4:	sub	r6, r1, r0
   18dc8:	cmp	r6, r5
   18dcc:	bcs	18e10 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
   18dd0:	mov	r1, #32
   18dd4:	mov	r2, r6
   18dd8:	bl	12948 <memset@plt>
   18ddc:	ldr	r0, [r4, #20]
   18de0:	ldr	r2, [r4, #44]	; 0x2c
   18de4:	mov	r1, #0
   18de8:	add	r0, r0, r6
   18dec:	str	r0, [r4, #20]
   18df0:	mov	r0, r4
   18df4:	blx	r2
   18df8:	ldr	r1, [r4, #16]
   18dfc:	ldr	r0, [r4, #20]
   18e00:	sub	r5, r5, r6
   18e04:	sub	r6, r1, r0
   18e08:	cmp	r5, r6
   18e0c:	bhi	18dd0 <flatcc_json_printer_uint8_vector_field@@Base+0x118>
   18e10:	mov	r1, #32
   18e14:	mov	r2, r5
   18e18:	bl	12948 <memset@plt>
   18e1c:	ldr	r0, [r4, #20]
   18e20:	add	r0, r0, r5
   18e24:	str	r0, [r4, #20]
   18e28:	ldrb	r1, [r9, #4]
   18e2c:	mov	r2, #0
   18e30:	cmp	r1, #100	; 0x64
   18e34:	bcs	18e6c <flatcc_json_printer_uint8_vector_field@@Base+0x1b4>
   18e38:	b	18eb0 <flatcc_json_printer_uint8_vector_field@@Base+0x1f8>
   18e3c:	ldr	r1, [r4, #16]
   18e40:	cmp	r0, r1
   18e44:	bcc	18e5c <flatcc_json_printer_uint8_vector_field@@Base+0x1a4>
   18e48:	ldr	r2, [r4, #44]	; 0x2c
   18e4c:	mov	r0, r4
   18e50:	mov	r1, #0
   18e54:	blx	r2
   18e58:	ldr	r0, [r4, #20]
   18e5c:	ldrb	r1, [r9, #4]
   18e60:	mov	r2, #0
   18e64:	cmp	r1, #100	; 0x64
   18e68:	bcc	18eb0 <flatcc_json_printer_uint8_vector_field@@Base+0x1f8>
   18e6c:	strb	r2, [r0, #3]
   18e70:	movw	r2, #34079	; 0x851f
   18e74:	movt	r2, #20971	; 0x51eb
   18e78:	umull	r2, r3, r1, r2
   18e7c:	mov	r2, #48	; 0x30
   18e80:	orr	r2, r2, r3, lsr #5
   18e84:	strb	r2, [r0]
   18e88:	lsr	r2, r3, #5
   18e8c:	mov	r3, #100	; 0x64
   18e90:	mls	r1, r2, r3, r1
   18e94:	movw	r2, #6299	; 0x189b
   18e98:	movt	r2, #2
   18e9c:	add	r1, r2, r1, lsl #1
   18ea0:	ldrh	r1, [r1]
   18ea4:	strh	r1, [r0, #1]
   18ea8:	mov	r0, #3
   18eac:	b	18f00 <flatcc_json_printer_uint8_vector_field@@Base+0x248>
   18eb0:	cmp	r1, #10
   18eb4:	bcc	18ef0 <flatcc_json_printer_uint8_vector_field@@Base+0x238>
   18eb8:	strb	r2, [r0, #2]
   18ebc:	movw	r2, #34079	; 0x851f
   18ec0:	movt	r2, #20971	; 0x51eb
   18ec4:	umull	r2, r3, r1, r2
   18ec8:	lsr	r2, r3, #5
   18ecc:	mov	r3, #100	; 0x64
   18ed0:	mls	r1, r2, r3, r1
   18ed4:	movw	r2, #6299	; 0x189b
   18ed8:	movt	r2, #2
   18edc:	add	r1, r2, r1, lsl #1
   18ee0:	ldrh	r1, [r1]
   18ee4:	strh	r1, [r0]
   18ee8:	mov	r0, #2
   18eec:	b	18f00 <flatcc_json_printer_uint8_vector_field@@Base+0x248>
   18ef0:	add	r1, r1, #48	; 0x30
   18ef4:	strb	r2, [r0, #1]
   18ef8:	strb	r1, [r0]
   18efc:	mov	r0, #1
   18f00:	ldr	r1, [r4, #20]
   18f04:	subs	r8, r8, #1
   18f08:	add	r0, r1, r0
   18f0c:	str	r0, [r4, #20]
   18f10:	beq	190e4 <flatcc_json_printer_uint8_vector_field@@Base+0x42c>
   18f14:	ldr	r0, [r4, #20]
   18f18:	add	r7, r9, #5
   18f1c:	mov	r9, #44	; 0x2c
   18f20:	mov	sl, #0
   18f24:	add	r1, r0, #1
   18f28:	str	r1, [r4, #20]
   18f2c:	strb	r9, [r0]
   18f30:	ldrb	r1, [r4, #25]
   18f34:	ldr	r0, [r4, #20]
   18f38:	cmp	r1, #0
   18f3c:	beq	19008 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
   18f40:	add	r1, r0, #1
   18f44:	str	r1, [r4, #20]
   18f48:	mov	r1, #10
   18f4c:	strb	r1, [r0]
   18f50:	ldr	r0, [r4, #20]
   18f54:	ldrb	r2, [r4, #25]
   18f58:	ldr	r3, [r4, #32]
   18f5c:	ldr	r1, [r4, #16]
   18f60:	mla	r6, r3, r2, r0
   18f64:	mul	r5, r3, r2
   18f68:	cmp	r6, r1
   18f6c:	bls	18fdc <flatcc_json_printer_uint8_vector_field@@Base+0x324>
   18f70:	cmp	r0, r1
   18f74:	bcc	18f90 <flatcc_json_printer_uint8_vector_field@@Base+0x2d8>
   18f78:	ldr	r2, [r4, #44]	; 0x2c
   18f7c:	mov	r0, r4
   18f80:	mov	r1, #0
   18f84:	blx	r2
   18f88:	ldr	r1, [r4, #16]
   18f8c:	ldr	r0, [r4, #20]
   18f90:	sub	r6, r1, r0
   18f94:	cmp	r6, r5
   18f98:	bcs	18fdc <flatcc_json_printer_uint8_vector_field@@Base+0x324>
   18f9c:	mov	r1, #32
   18fa0:	mov	r2, r6
   18fa4:	bl	12948 <memset@plt>
   18fa8:	ldr	r0, [r4, #20]
   18fac:	ldr	r2, [r4, #44]	; 0x2c
   18fb0:	mov	r1, #0
   18fb4:	add	r0, r0, r6
   18fb8:	str	r0, [r4, #20]
   18fbc:	mov	r0, r4
   18fc0:	blx	r2
   18fc4:	ldr	r1, [r4, #16]
   18fc8:	ldr	r0, [r4, #20]
   18fcc:	sub	r5, r5, r6
   18fd0:	sub	r6, r1, r0
   18fd4:	cmp	r5, r6
   18fd8:	bhi	18f9c <flatcc_json_printer_uint8_vector_field@@Base+0x2e4>
   18fdc:	mov	r1, #32
   18fe0:	mov	r2, r5
   18fe4:	bl	12948 <memset@plt>
   18fe8:	ldr	r0, [r4, #20]
   18fec:	add	r0, r0, r5
   18ff0:	str	r0, [r4, #20]
   18ff4:	ldrb	r1, [r7]
   18ff8:	sub	r8, r8, #1
   18ffc:	cmp	r1, #100	; 0x64
   19000:	bcs	19038 <flatcc_json_printer_uint8_vector_field@@Base+0x380>
   19004:	b	1907c <flatcc_json_printer_uint8_vector_field@@Base+0x3c4>
   19008:	ldr	r1, [r4, #16]
   1900c:	cmp	r0, r1
   19010:	bcc	19028 <flatcc_json_printer_uint8_vector_field@@Base+0x370>
   19014:	ldr	r2, [r4, #44]	; 0x2c
   19018:	mov	r0, r4
   1901c:	mov	r1, #0
   19020:	blx	r2
   19024:	ldr	r0, [r4, #20]
   19028:	ldrb	r1, [r7]
   1902c:	sub	r8, r8, #1
   19030:	cmp	r1, #100	; 0x64
   19034:	bcc	1907c <flatcc_json_printer_uint8_vector_field@@Base+0x3c4>
   19038:	movw	r2, #34079	; 0x851f
   1903c:	strb	sl, [r0, #3]
   19040:	movt	r2, #20971	; 0x51eb
   19044:	umull	r2, r3, r1, r2
   19048:	mov	r2, #48	; 0x30
   1904c:	orr	r2, r2, r3, lsr #5
   19050:	strb	r2, [r0]
   19054:	lsr	r2, r3, #5
   19058:	mov	r3, #100	; 0x64
   1905c:	mls	r1, r2, r3, r1
   19060:	movw	r2, #6299	; 0x189b
   19064:	movt	r2, #2
   19068:	add	r1, r2, r1, lsl #1
   1906c:	ldrh	r1, [r1]
   19070:	strh	r1, [r0, #1]
   19074:	mov	r0, #3
   19078:	b	190cc <flatcc_json_printer_uint8_vector_field@@Base+0x414>
   1907c:	cmp	r1, #10
   19080:	bcc	190bc <flatcc_json_printer_uint8_vector_field@@Base+0x404>
   19084:	movw	r2, #34079	; 0x851f
   19088:	strb	sl, [r0, #2]
   1908c:	movt	r2, #20971	; 0x51eb
   19090:	umull	r2, r3, r1, r2
   19094:	lsr	r2, r3, #5
   19098:	mov	r3, #100	; 0x64
   1909c:	mls	r1, r2, r3, r1
   190a0:	movw	r2, #6299	; 0x189b
   190a4:	movt	r2, #2
   190a8:	add	r1, r2, r1, lsl #1
   190ac:	ldrh	r1, [r1]
   190b0:	strh	r1, [r0]
   190b4:	mov	r0, #2
   190b8:	b	190cc <flatcc_json_printer_uint8_vector_field@@Base+0x414>
   190bc:	add	r1, r1, #48	; 0x30
   190c0:	strb	sl, [r0, #1]
   190c4:	strb	r1, [r0]
   190c8:	mov	r0, #1
   190cc:	ldr	r1, [r4, #20]
   190d0:	add	r7, r7, #1
   190d4:	cmp	r8, #0
   190d8:	add	r0, r1, r0
   190dc:	str	r0, [r4, #20]
   190e0:	bne	18f24 <flatcc_json_printer_uint8_vector_field@@Base+0x26c>
   190e4:	ldrb	r1, [r4, #25]
   190e8:	ldr	r0, [r4, #20]
   190ec:	cmp	r1, #0
   190f0:	beq	191b0 <flatcc_json_printer_uint8_vector_field@@Base+0x4f8>
   190f4:	add	r1, r0, #1
   190f8:	str	r1, [r4, #20]
   190fc:	mov	r1, #10
   19100:	strb	r1, [r0]
   19104:	ldr	r0, [r4, #32]
   19108:	sub	r2, r0, #1
   1910c:	str	r2, [r4, #32]
   19110:	ldrb	r3, [r4, #25]
   19114:	ldr	r0, [r4, #20]
   19118:	ldr	r1, [r4, #16]
   1911c:	mla	r7, r2, r3, r0
   19120:	mul	r5, r2, r3
   19124:	cmp	r7, r1
   19128:	bls	19198 <flatcc_json_printer_uint8_vector_field@@Base+0x4e0>
   1912c:	cmp	r0, r1
   19130:	bcc	1914c <flatcc_json_printer_uint8_vector_field@@Base+0x494>
   19134:	ldr	r2, [r4, #44]	; 0x2c
   19138:	mov	r0, r4
   1913c:	mov	r1, #0
   19140:	blx	r2
   19144:	ldr	r1, [r4, #16]
   19148:	ldr	r0, [r4, #20]
   1914c:	sub	r6, r1, r0
   19150:	cmp	r6, r5
   19154:	bcs	19198 <flatcc_json_printer_uint8_vector_field@@Base+0x4e0>
   19158:	mov	r1, #32
   1915c:	mov	r2, r6
   19160:	bl	12948 <memset@plt>
   19164:	ldr	r0, [r4, #20]
   19168:	ldr	r2, [r4, #44]	; 0x2c
   1916c:	mov	r1, #0
   19170:	add	r0, r0, r6
   19174:	str	r0, [r4, #20]
   19178:	mov	r0, r4
   1917c:	blx	r2
   19180:	ldr	r1, [r4, #16]
   19184:	ldr	r0, [r4, #20]
   19188:	sub	r5, r5, r6
   1918c:	sub	r6, r1, r0
   19190:	cmp	r5, r6
   19194:	bhi	19158 <flatcc_json_printer_uint8_vector_field@@Base+0x4a0>
   19198:	mov	r1, #32
   1919c:	mov	r2, r5
   191a0:	bl	12948 <memset@plt>
   191a4:	ldr	r0, [r4, #20]
   191a8:	add	r0, r0, r5
   191ac:	str	r0, [r4, #20]
   191b0:	add	r1, r0, #1
   191b4:	str	r1, [r4, #20]
   191b8:	mov	r1, #93	; 0x5d
   191bc:	strb	r1, [r0]
   191c0:	sub	sp, fp, #28
   191c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000191c8 <flatcc_json_printer_uint16_vector_field@@Base>:
   191c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   191cc:	add	fp, sp, #28
   191d0:	sub	sp, sp, #4
   191d4:	mov	r4, r0
   191d8:	mov	r0, #4
   191dc:	add	r0, r0, r2, lsl #1
   191e0:	ldr	r2, [r1, #8]
   191e4:	cmp	r0, r2
   191e8:	bge	19208 <flatcc_json_printer_uint16_vector_field@@Base+0x40>
   191ec:	ldr	r2, [r1, #4]
   191f0:	add	r0, r2, r0
   191f4:	ldrh	r0, [r0]
   191f8:	cmp	r0, #0
   191fc:	ldrne	r2, [r1]
   19200:	addsne	r8, r2, r0
   19204:	bne	19210 <flatcc_json_printer_uint16_vector_field@@Base+0x48>
   19208:	sub	sp, fp, #28
   1920c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19210:	ldr	r0, [r1, #16]
   19214:	ldr	r2, [fp, #8]
   19218:	add	r7, r0, #1
   1921c:	cmp	r0, #0
   19220:	str	r7, [r1, #16]
   19224:	ldrne	r0, [r4, #20]
   19228:	addne	r1, r0, #1
   1922c:	strne	r1, [r4, #20]
   19230:	movne	r1, #44	; 0x2c
   19234:	strbne	r1, [r0]
   19238:	mov	r1, r3
   1923c:	ldr	r0, [r8]
   19240:	ldr	r7, [r8, r0]!
   19244:	mov	r0, r4
   19248:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1924c:	ldr	r1, [r4, #32]
   19250:	ldr	r0, [r4, #20]
   19254:	cmp	r7, #0
   19258:	add	r1, r1, #1
   1925c:	str	r1, [r4, #32]
   19260:	add	r1, r0, #1
   19264:	str	r1, [r4, #20]
   19268:	mov	r1, #91	; 0x5b
   1926c:	strb	r1, [r0]
   19270:	beq	19498 <flatcc_json_printer_uint16_vector_field@@Base+0x2d0>
   19274:	ldrb	r0, [r4, #25]
   19278:	ldr	r1, [r4, #20]
   1927c:	cmp	r0, #0
   19280:	beq	1933c <flatcc_json_printer_uint16_vector_field@@Base+0x174>
   19284:	add	r0, r1, #1
   19288:	str	r0, [r4, #20]
   1928c:	mov	r0, #10
   19290:	strb	r0, [r1]
   19294:	ldr	r0, [r4, #20]
   19298:	ldrb	r2, [r4, #25]
   1929c:	ldr	r3, [r4, #32]
   192a0:	ldr	r1, [r4, #16]
   192a4:	mla	r6, r3, r2, r0
   192a8:	mul	r5, r3, r2
   192ac:	cmp	r6, r1
   192b0:	bls	19320 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   192b4:	cmp	r0, r1
   192b8:	bcc	192d4 <flatcc_json_printer_uint16_vector_field@@Base+0x10c>
   192bc:	ldr	r2, [r4, #44]	; 0x2c
   192c0:	mov	r0, r4
   192c4:	mov	r1, #0
   192c8:	blx	r2
   192cc:	ldr	r1, [r4, #16]
   192d0:	ldr	r0, [r4, #20]
   192d4:	sub	r6, r1, r0
   192d8:	cmp	r6, r5
   192dc:	bcs	19320 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   192e0:	mov	r1, #32
   192e4:	mov	r2, r6
   192e8:	bl	12948 <memset@plt>
   192ec:	ldr	r0, [r4, #20]
   192f0:	ldr	r2, [r4, #44]	; 0x2c
   192f4:	mov	r1, #0
   192f8:	add	r0, r0, r6
   192fc:	str	r0, [r4, #20]
   19300:	mov	r0, r4
   19304:	blx	r2
   19308:	ldr	r1, [r4, #16]
   1930c:	ldr	r0, [r4, #20]
   19310:	sub	r5, r5, r6
   19314:	sub	r6, r1, r0
   19318:	cmp	r5, r6
   1931c:	bhi	192e0 <flatcc_json_printer_uint16_vector_field@@Base+0x118>
   19320:	mov	r1, #32
   19324:	mov	r2, r5
   19328:	bl	12948 <memset@plt>
   1932c:	ldr	r0, [r4, #20]
   19330:	add	r1, r0, r5
   19334:	str	r1, [r4, #20]
   19338:	b	1935c <flatcc_json_printer_uint16_vector_field@@Base+0x194>
   1933c:	ldr	r0, [r4, #16]
   19340:	cmp	r1, r0
   19344:	bcc	1935c <flatcc_json_printer_uint16_vector_field@@Base+0x194>
   19348:	ldr	r2, [r4, #44]	; 0x2c
   1934c:	mov	r0, r4
   19350:	mov	r1, #0
   19354:	blx	r2
   19358:	ldr	r1, [r4, #20]
   1935c:	ldrh	r0, [r8, #4]
   19360:	bl	153a8 <flatcc_json_printer_uint16@@Base+0x2c>
   19364:	ldr	r1, [r4, #20]
   19368:	subs	r9, r7, #1
   1936c:	add	r0, r1, r0
   19370:	str	r0, [r4, #20]
   19374:	beq	19498 <flatcc_json_printer_uint16_vector_field@@Base+0x2d0>
   19378:	ldr	r0, [r4, #20]
   1937c:	add	r7, r8, #6
   19380:	mov	r8, #44	; 0x2c
   19384:	mov	sl, #10
   19388:	add	r1, r0, #1
   1938c:	sub	r9, r9, #1
   19390:	str	r1, [r4, #20]
   19394:	strb	r8, [r0]
   19398:	ldrb	r0, [r4, #25]
   1939c:	ldr	r1, [r4, #20]
   193a0:	cmp	r0, #0
   193a4:	beq	1945c <flatcc_json_printer_uint16_vector_field@@Base+0x294>
   193a8:	add	r0, r1, #1
   193ac:	str	r0, [r4, #20]
   193b0:	strb	sl, [r1]
   193b4:	ldr	r0, [r4, #20]
   193b8:	ldrb	r2, [r4, #25]
   193bc:	ldr	r3, [r4, #32]
   193c0:	ldr	r1, [r4, #16]
   193c4:	mla	r6, r3, r2, r0
   193c8:	mul	r5, r3, r2
   193cc:	cmp	r6, r1
   193d0:	bls	19440 <flatcc_json_printer_uint16_vector_field@@Base+0x278>
   193d4:	cmp	r0, r1
   193d8:	bcc	193f4 <flatcc_json_printer_uint16_vector_field@@Base+0x22c>
   193dc:	ldr	r2, [r4, #44]	; 0x2c
   193e0:	mov	r0, r4
   193e4:	mov	r1, #0
   193e8:	blx	r2
   193ec:	ldr	r1, [r4, #16]
   193f0:	ldr	r0, [r4, #20]
   193f4:	sub	r6, r1, r0
   193f8:	cmp	r6, r5
   193fc:	bcs	19440 <flatcc_json_printer_uint16_vector_field@@Base+0x278>
   19400:	mov	r1, #32
   19404:	mov	r2, r6
   19408:	bl	12948 <memset@plt>
   1940c:	ldr	r0, [r4, #20]
   19410:	ldr	r2, [r4, #44]	; 0x2c
   19414:	mov	r1, #0
   19418:	add	r0, r0, r6
   1941c:	str	r0, [r4, #20]
   19420:	mov	r0, r4
   19424:	blx	r2
   19428:	ldr	r1, [r4, #16]
   1942c:	ldr	r0, [r4, #20]
   19430:	sub	r5, r5, r6
   19434:	sub	r6, r1, r0
   19438:	cmp	r5, r6
   1943c:	bhi	19400 <flatcc_json_printer_uint16_vector_field@@Base+0x238>
   19440:	mov	r1, #32
   19444:	mov	r2, r5
   19448:	bl	12948 <memset@plt>
   1944c:	ldr	r0, [r4, #20]
   19450:	add	r1, r0, r5
   19454:	str	r1, [r4, #20]
   19458:	b	1947c <flatcc_json_printer_uint16_vector_field@@Base+0x2b4>
   1945c:	ldr	r0, [r4, #16]
   19460:	cmp	r1, r0
   19464:	bcc	1947c <flatcc_json_printer_uint16_vector_field@@Base+0x2b4>
   19468:	ldr	r2, [r4, #44]	; 0x2c
   1946c:	mov	r0, r4
   19470:	mov	r1, #0
   19474:	blx	r2
   19478:	ldr	r1, [r4, #20]
   1947c:	ldrh	r0, [r7], #2
   19480:	bl	153a8 <flatcc_json_printer_uint16@@Base+0x2c>
   19484:	ldr	r1, [r4, #20]
   19488:	cmp	r9, #0
   1948c:	add	r0, r1, r0
   19490:	str	r0, [r4, #20]
   19494:	bne	19388 <flatcc_json_printer_uint16_vector_field@@Base+0x1c0>
   19498:	ldrb	r1, [r4, #25]
   1949c:	ldr	r0, [r4, #20]
   194a0:	cmp	r1, #0
   194a4:	beq	19564 <flatcc_json_printer_uint16_vector_field@@Base+0x39c>
   194a8:	add	r1, r0, #1
   194ac:	str	r1, [r4, #20]
   194b0:	mov	r1, #10
   194b4:	strb	r1, [r0]
   194b8:	ldr	r0, [r4, #32]
   194bc:	sub	r2, r0, #1
   194c0:	str	r2, [r4, #32]
   194c4:	ldrb	r3, [r4, #25]
   194c8:	ldr	r0, [r4, #20]
   194cc:	ldr	r1, [r4, #16]
   194d0:	mla	r7, r2, r3, r0
   194d4:	mul	r5, r2, r3
   194d8:	cmp	r7, r1
   194dc:	bls	1954c <flatcc_json_printer_uint16_vector_field@@Base+0x384>
   194e0:	cmp	r0, r1
   194e4:	bcc	19500 <flatcc_json_printer_uint16_vector_field@@Base+0x338>
   194e8:	ldr	r2, [r4, #44]	; 0x2c
   194ec:	mov	r0, r4
   194f0:	mov	r1, #0
   194f4:	blx	r2
   194f8:	ldr	r1, [r4, #16]
   194fc:	ldr	r0, [r4, #20]
   19500:	sub	r6, r1, r0
   19504:	cmp	r6, r5
   19508:	bcs	1954c <flatcc_json_printer_uint16_vector_field@@Base+0x384>
   1950c:	mov	r1, #32
   19510:	mov	r2, r6
   19514:	bl	12948 <memset@plt>
   19518:	ldr	r0, [r4, #20]
   1951c:	ldr	r2, [r4, #44]	; 0x2c
   19520:	mov	r1, #0
   19524:	add	r0, r0, r6
   19528:	str	r0, [r4, #20]
   1952c:	mov	r0, r4
   19530:	blx	r2
   19534:	ldr	r1, [r4, #16]
   19538:	ldr	r0, [r4, #20]
   1953c:	sub	r5, r5, r6
   19540:	sub	r6, r1, r0
   19544:	cmp	r5, r6
   19548:	bhi	1950c <flatcc_json_printer_uint16_vector_field@@Base+0x344>
   1954c:	mov	r1, #32
   19550:	mov	r2, r5
   19554:	bl	12948 <memset@plt>
   19558:	ldr	r0, [r4, #20]
   1955c:	add	r0, r0, r5
   19560:	str	r0, [r4, #20]
   19564:	add	r1, r0, #1
   19568:	str	r1, [r4, #20]
   1956c:	mov	r1, #93	; 0x5d
   19570:	strb	r1, [r0]
   19574:	sub	sp, fp, #28
   19578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001957c <flatcc_json_printer_uint32_vector_field@@Base>:
   1957c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19580:	add	fp, sp, #28
   19584:	sub	sp, sp, #4
   19588:	mov	r4, r0
   1958c:	mov	r0, #4
   19590:	add	r0, r0, r2, lsl #1
   19594:	ldr	r2, [r1, #8]
   19598:	cmp	r0, r2
   1959c:	bge	195bc <flatcc_json_printer_uint32_vector_field@@Base+0x40>
   195a0:	ldr	r2, [r1, #4]
   195a4:	add	r0, r2, r0
   195a8:	ldrh	r0, [r0]
   195ac:	cmp	r0, #0
   195b0:	ldrne	r2, [r1]
   195b4:	addsne	r8, r2, r0
   195b8:	bne	195c4 <flatcc_json_printer_uint32_vector_field@@Base+0x48>
   195bc:	sub	sp, fp, #28
   195c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195c4:	ldr	r0, [r1, #16]
   195c8:	ldr	r2, [fp, #8]
   195cc:	add	r7, r0, #1
   195d0:	cmp	r0, #0
   195d4:	str	r7, [r1, #16]
   195d8:	ldrne	r0, [r4, #20]
   195dc:	addne	r1, r0, #1
   195e0:	strne	r1, [r4, #20]
   195e4:	movne	r1, #44	; 0x2c
   195e8:	strbne	r1, [r0]
   195ec:	mov	r1, r3
   195f0:	ldr	r0, [r8]
   195f4:	ldr	r7, [r8, r0]!
   195f8:	mov	r0, r4
   195fc:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   19600:	ldr	r1, [r4, #32]
   19604:	ldr	r0, [r4, #20]
   19608:	cmp	r7, #0
   1960c:	add	r1, r1, #1
   19610:	str	r1, [r4, #32]
   19614:	add	r1, r0, #1
   19618:	str	r1, [r4, #20]
   1961c:	mov	r1, #91	; 0x5b
   19620:	strb	r1, [r0]
   19624:	beq	1984c <flatcc_json_printer_uint32_vector_field@@Base+0x2d0>
   19628:	ldrb	r0, [r4, #25]
   1962c:	ldr	r1, [r4, #20]
   19630:	cmp	r0, #0
   19634:	beq	196f0 <flatcc_json_printer_uint32_vector_field@@Base+0x174>
   19638:	add	r0, r1, #1
   1963c:	str	r0, [r4, #20]
   19640:	mov	r0, #10
   19644:	strb	r0, [r1]
   19648:	ldr	r0, [r4, #20]
   1964c:	ldrb	r2, [r4, #25]
   19650:	ldr	r3, [r4, #32]
   19654:	ldr	r1, [r4, #16]
   19658:	mla	r6, r3, r2, r0
   1965c:	mul	r5, r3, r2
   19660:	cmp	r6, r1
   19664:	bls	196d4 <flatcc_json_printer_uint32_vector_field@@Base+0x158>
   19668:	cmp	r0, r1
   1966c:	bcc	19688 <flatcc_json_printer_uint32_vector_field@@Base+0x10c>
   19670:	ldr	r2, [r4, #44]	; 0x2c
   19674:	mov	r0, r4
   19678:	mov	r1, #0
   1967c:	blx	r2
   19680:	ldr	r1, [r4, #16]
   19684:	ldr	r0, [r4, #20]
   19688:	sub	r6, r1, r0
   1968c:	cmp	r6, r5
   19690:	bcs	196d4 <flatcc_json_printer_uint32_vector_field@@Base+0x158>
   19694:	mov	r1, #32
   19698:	mov	r2, r6
   1969c:	bl	12948 <memset@plt>
   196a0:	ldr	r0, [r4, #20]
   196a4:	ldr	r2, [r4, #44]	; 0x2c
   196a8:	mov	r1, #0
   196ac:	add	r0, r0, r6
   196b0:	str	r0, [r4, #20]
   196b4:	mov	r0, r4
   196b8:	blx	r2
   196bc:	ldr	r1, [r4, #16]
   196c0:	ldr	r0, [r4, #20]
   196c4:	sub	r5, r5, r6
   196c8:	sub	r6, r1, r0
   196cc:	cmp	r5, r6
   196d0:	bhi	19694 <flatcc_json_printer_uint32_vector_field@@Base+0x118>
   196d4:	mov	r1, #32
   196d8:	mov	r2, r5
   196dc:	bl	12948 <memset@plt>
   196e0:	ldr	r0, [r4, #20]
   196e4:	add	r1, r0, r5
   196e8:	str	r1, [r4, #20]
   196ec:	b	19710 <flatcc_json_printer_uint32_vector_field@@Base+0x194>
   196f0:	ldr	r0, [r4, #16]
   196f4:	cmp	r1, r0
   196f8:	bcc	19710 <flatcc_json_printer_uint32_vector_field@@Base+0x194>
   196fc:	ldr	r2, [r4, #44]	; 0x2c
   19700:	mov	r0, r4
   19704:	mov	r1, #0
   19708:	blx	r2
   1970c:	ldr	r1, [r4, #20]
   19710:	ldr	r0, [r8, #4]
   19714:	bl	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   19718:	ldr	r1, [r4, #20]
   1971c:	subs	r9, r7, #1
   19720:	add	r0, r1, r0
   19724:	str	r0, [r4, #20]
   19728:	beq	1984c <flatcc_json_printer_uint32_vector_field@@Base+0x2d0>
   1972c:	ldr	r0, [r4, #20]
   19730:	add	r7, r8, #8
   19734:	mov	r8, #44	; 0x2c
   19738:	mov	sl, #10
   1973c:	add	r1, r0, #1
   19740:	sub	r9, r9, #1
   19744:	str	r1, [r4, #20]
   19748:	strb	r8, [r0]
   1974c:	ldrb	r0, [r4, #25]
   19750:	ldr	r1, [r4, #20]
   19754:	cmp	r0, #0
   19758:	beq	19810 <flatcc_json_printer_uint32_vector_field@@Base+0x294>
   1975c:	add	r0, r1, #1
   19760:	str	r0, [r4, #20]
   19764:	strb	sl, [r1]
   19768:	ldr	r0, [r4, #20]
   1976c:	ldrb	r2, [r4, #25]
   19770:	ldr	r3, [r4, #32]
   19774:	ldr	r1, [r4, #16]
   19778:	mla	r6, r3, r2, r0
   1977c:	mul	r5, r3, r2
   19780:	cmp	r6, r1
   19784:	bls	197f4 <flatcc_json_printer_uint32_vector_field@@Base+0x278>
   19788:	cmp	r0, r1
   1978c:	bcc	197a8 <flatcc_json_printer_uint32_vector_field@@Base+0x22c>
   19790:	ldr	r2, [r4, #44]	; 0x2c
   19794:	mov	r0, r4
   19798:	mov	r1, #0
   1979c:	blx	r2
   197a0:	ldr	r1, [r4, #16]
   197a4:	ldr	r0, [r4, #20]
   197a8:	sub	r6, r1, r0
   197ac:	cmp	r6, r5
   197b0:	bcs	197f4 <flatcc_json_printer_uint32_vector_field@@Base+0x278>
   197b4:	mov	r1, #32
   197b8:	mov	r2, r6
   197bc:	bl	12948 <memset@plt>
   197c0:	ldr	r0, [r4, #20]
   197c4:	ldr	r2, [r4, #44]	; 0x2c
   197c8:	mov	r1, #0
   197cc:	add	r0, r0, r6
   197d0:	str	r0, [r4, #20]
   197d4:	mov	r0, r4
   197d8:	blx	r2
   197dc:	ldr	r1, [r4, #16]
   197e0:	ldr	r0, [r4, #20]
   197e4:	sub	r5, r5, r6
   197e8:	sub	r6, r1, r0
   197ec:	cmp	r5, r6
   197f0:	bhi	197b4 <flatcc_json_printer_uint32_vector_field@@Base+0x238>
   197f4:	mov	r1, #32
   197f8:	mov	r2, r5
   197fc:	bl	12948 <memset@plt>
   19800:	ldr	r0, [r4, #20]
   19804:	add	r1, r0, r5
   19808:	str	r1, [r4, #20]
   1980c:	b	19830 <flatcc_json_printer_uint32_vector_field@@Base+0x2b4>
   19810:	ldr	r0, [r4, #16]
   19814:	cmp	r1, r0
   19818:	bcc	19830 <flatcc_json_printer_uint32_vector_field@@Base+0x2b4>
   1981c:	ldr	r2, [r4, #44]	; 0x2c
   19820:	mov	r0, r4
   19824:	mov	r1, #0
   19828:	blx	r2
   1982c:	ldr	r1, [r4, #20]
   19830:	ldr	r0, [r7], #4
   19834:	bl	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   19838:	ldr	r1, [r4, #20]
   1983c:	cmp	r9, #0
   19840:	add	r0, r1, r0
   19844:	str	r0, [r4, #20]
   19848:	bne	1973c <flatcc_json_printer_uint32_vector_field@@Base+0x1c0>
   1984c:	ldrb	r1, [r4, #25]
   19850:	ldr	r0, [r4, #20]
   19854:	cmp	r1, #0
   19858:	beq	19918 <flatcc_json_printer_uint32_vector_field@@Base+0x39c>
   1985c:	add	r1, r0, #1
   19860:	str	r1, [r4, #20]
   19864:	mov	r1, #10
   19868:	strb	r1, [r0]
   1986c:	ldr	r0, [r4, #32]
   19870:	sub	r2, r0, #1
   19874:	str	r2, [r4, #32]
   19878:	ldrb	r3, [r4, #25]
   1987c:	ldr	r0, [r4, #20]
   19880:	ldr	r1, [r4, #16]
   19884:	mla	r7, r2, r3, r0
   19888:	mul	r5, r2, r3
   1988c:	cmp	r7, r1
   19890:	bls	19900 <flatcc_json_printer_uint32_vector_field@@Base+0x384>
   19894:	cmp	r0, r1
   19898:	bcc	198b4 <flatcc_json_printer_uint32_vector_field@@Base+0x338>
   1989c:	ldr	r2, [r4, #44]	; 0x2c
   198a0:	mov	r0, r4
   198a4:	mov	r1, #0
   198a8:	blx	r2
   198ac:	ldr	r1, [r4, #16]
   198b0:	ldr	r0, [r4, #20]
   198b4:	sub	r6, r1, r0
   198b8:	cmp	r6, r5
   198bc:	bcs	19900 <flatcc_json_printer_uint32_vector_field@@Base+0x384>
   198c0:	mov	r1, #32
   198c4:	mov	r2, r6
   198c8:	bl	12948 <memset@plt>
   198cc:	ldr	r0, [r4, #20]
   198d0:	ldr	r2, [r4, #44]	; 0x2c
   198d4:	mov	r1, #0
   198d8:	add	r0, r0, r6
   198dc:	str	r0, [r4, #20]
   198e0:	mov	r0, r4
   198e4:	blx	r2
   198e8:	ldr	r1, [r4, #16]
   198ec:	ldr	r0, [r4, #20]
   198f0:	sub	r5, r5, r6
   198f4:	sub	r6, r1, r0
   198f8:	cmp	r5, r6
   198fc:	bhi	198c0 <flatcc_json_printer_uint32_vector_field@@Base+0x344>
   19900:	mov	r1, #32
   19904:	mov	r2, r5
   19908:	bl	12948 <memset@plt>
   1990c:	ldr	r0, [r4, #20]
   19910:	add	r0, r0, r5
   19914:	str	r0, [r4, #20]
   19918:	add	r1, r0, #1
   1991c:	str	r1, [r4, #20]
   19920:	mov	r1, #93	; 0x5d
   19924:	strb	r1, [r0]
   19928:	sub	sp, fp, #28
   1992c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019930 <flatcc_json_printer_uint64_vector_field@@Base>:
   19930:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19934:	add	fp, sp, #28
   19938:	sub	sp, sp, #4
   1993c:	mov	r4, r0
   19940:	mov	r0, #4
   19944:	add	r0, r0, r2, lsl #1
   19948:	ldr	r2, [r1, #8]
   1994c:	cmp	r0, r2
   19950:	bge	19970 <flatcc_json_printer_uint64_vector_field@@Base+0x40>
   19954:	ldr	r2, [r1, #4]
   19958:	add	r0, r2, r0
   1995c:	ldrh	r0, [r0]
   19960:	cmp	r0, #0
   19964:	ldrne	r2, [r1]
   19968:	addsne	r8, r2, r0
   1996c:	bne	19978 <flatcc_json_printer_uint64_vector_field@@Base+0x48>
   19970:	sub	sp, fp, #28
   19974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19978:	ldr	r0, [r1, #16]
   1997c:	ldr	r2, [fp, #8]
   19980:	add	r7, r0, #1
   19984:	cmp	r0, #0
   19988:	str	r7, [r1, #16]
   1998c:	ldrne	r0, [r4, #20]
   19990:	addne	r1, r0, #1
   19994:	strne	r1, [r4, #20]
   19998:	movne	r1, #44	; 0x2c
   1999c:	strbne	r1, [r0]
   199a0:	mov	r1, r3
   199a4:	ldr	r0, [r8]
   199a8:	ldr	r7, [r8, r0]!
   199ac:	mov	r0, r4
   199b0:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   199b4:	ldr	r1, [r4, #32]
   199b8:	ldr	r0, [r4, #20]
   199bc:	cmp	r7, #0
   199c0:	add	r1, r1, #1
   199c4:	str	r1, [r4, #32]
   199c8:	add	r1, r0, #1
   199cc:	str	r1, [r4, #20]
   199d0:	mov	r1, #91	; 0x5b
   199d4:	strb	r1, [r0]
   199d8:	beq	19c04 <flatcc_json_printer_uint64_vector_field@@Base+0x2d4>
   199dc:	ldrb	r0, [r4, #25]
   199e0:	ldr	r2, [r4, #20]
   199e4:	cmp	r0, #0
   199e8:	beq	19aa4 <flatcc_json_printer_uint64_vector_field@@Base+0x174>
   199ec:	add	r0, r2, #1
   199f0:	str	r0, [r4, #20]
   199f4:	mov	r0, #10
   199f8:	strb	r0, [r2]
   199fc:	ldr	r0, [r4, #20]
   19a00:	ldrb	r2, [r4, #25]
   19a04:	ldr	r3, [r4, #32]
   19a08:	ldr	r1, [r4, #16]
   19a0c:	mla	r6, r3, r2, r0
   19a10:	mul	r5, r3, r2
   19a14:	cmp	r6, r1
   19a18:	bls	19a88 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
   19a1c:	cmp	r0, r1
   19a20:	bcc	19a3c <flatcc_json_printer_uint64_vector_field@@Base+0x10c>
   19a24:	ldr	r2, [r4, #44]	; 0x2c
   19a28:	mov	r0, r4
   19a2c:	mov	r1, #0
   19a30:	blx	r2
   19a34:	ldr	r1, [r4, #16]
   19a38:	ldr	r0, [r4, #20]
   19a3c:	sub	r6, r1, r0
   19a40:	cmp	r6, r5
   19a44:	bcs	19a88 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
   19a48:	mov	r1, #32
   19a4c:	mov	r2, r6
   19a50:	bl	12948 <memset@plt>
   19a54:	ldr	r0, [r4, #20]
   19a58:	ldr	r2, [r4, #44]	; 0x2c
   19a5c:	mov	r1, #0
   19a60:	add	r0, r0, r6
   19a64:	str	r0, [r4, #20]
   19a68:	mov	r0, r4
   19a6c:	blx	r2
   19a70:	ldr	r1, [r4, #16]
   19a74:	ldr	r0, [r4, #20]
   19a78:	sub	r5, r5, r6
   19a7c:	sub	r6, r1, r0
   19a80:	cmp	r5, r6
   19a84:	bhi	19a48 <flatcc_json_printer_uint64_vector_field@@Base+0x118>
   19a88:	mov	r1, #32
   19a8c:	mov	r2, r5
   19a90:	bl	12948 <memset@plt>
   19a94:	ldr	r0, [r4, #20]
   19a98:	add	r2, r0, r5
   19a9c:	str	r2, [r4, #20]
   19aa0:	b	19ac4 <flatcc_json_printer_uint64_vector_field@@Base+0x194>
   19aa4:	ldr	r0, [r4, #16]
   19aa8:	cmp	r2, r0
   19aac:	bcc	19ac4 <flatcc_json_printer_uint64_vector_field@@Base+0x194>
   19ab0:	ldr	r2, [r4, #44]	; 0x2c
   19ab4:	mov	r0, r4
   19ab8:	mov	r1, #0
   19abc:	blx	r2
   19ac0:	ldr	r2, [r4, #20]
   19ac4:	ldrd	r0, [r8, #4]
   19ac8:	bl	158b0 <flatcc_json_printer_uint64@@Base+0x30>
   19acc:	ldr	r1, [r4, #20]
   19ad0:	subs	r9, r7, #1
   19ad4:	add	r0, r1, r0
   19ad8:	str	r0, [r4, #20]
   19adc:	beq	19c04 <flatcc_json_printer_uint64_vector_field@@Base+0x2d4>
   19ae0:	ldr	r0, [r4, #20]
   19ae4:	add	r7, r8, #12
   19ae8:	mov	r8, #44	; 0x2c
   19aec:	mov	sl, #10
   19af0:	add	r1, r0, #1
   19af4:	sub	r9, r9, #1
   19af8:	str	r1, [r4, #20]
   19afc:	strb	r8, [r0]
   19b00:	ldrb	r0, [r4, #25]
   19b04:	ldr	r2, [r4, #20]
   19b08:	cmp	r0, #0
   19b0c:	beq	19bc4 <flatcc_json_printer_uint64_vector_field@@Base+0x294>
   19b10:	add	r0, r2, #1
   19b14:	str	r0, [r4, #20]
   19b18:	strb	sl, [r2]
   19b1c:	ldr	r0, [r4, #20]
   19b20:	ldrb	r2, [r4, #25]
   19b24:	ldr	r3, [r4, #32]
   19b28:	ldr	r1, [r4, #16]
   19b2c:	mla	r6, r3, r2, r0
   19b30:	mul	r5, r3, r2
   19b34:	cmp	r6, r1
   19b38:	bls	19ba8 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   19b3c:	cmp	r0, r1
   19b40:	bcc	19b5c <flatcc_json_printer_uint64_vector_field@@Base+0x22c>
   19b44:	ldr	r2, [r4, #44]	; 0x2c
   19b48:	mov	r0, r4
   19b4c:	mov	r1, #0
   19b50:	blx	r2
   19b54:	ldr	r1, [r4, #16]
   19b58:	ldr	r0, [r4, #20]
   19b5c:	sub	r6, r1, r0
   19b60:	cmp	r6, r5
   19b64:	bcs	19ba8 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   19b68:	mov	r1, #32
   19b6c:	mov	r2, r6
   19b70:	bl	12948 <memset@plt>
   19b74:	ldr	r0, [r4, #20]
   19b78:	ldr	r2, [r4, #44]	; 0x2c
   19b7c:	mov	r1, #0
   19b80:	add	r0, r0, r6
   19b84:	str	r0, [r4, #20]
   19b88:	mov	r0, r4
   19b8c:	blx	r2
   19b90:	ldr	r1, [r4, #16]
   19b94:	ldr	r0, [r4, #20]
   19b98:	sub	r5, r5, r6
   19b9c:	sub	r6, r1, r0
   19ba0:	cmp	r5, r6
   19ba4:	bhi	19b68 <flatcc_json_printer_uint64_vector_field@@Base+0x238>
   19ba8:	mov	r1, #32
   19bac:	mov	r2, r5
   19bb0:	bl	12948 <memset@plt>
   19bb4:	ldr	r0, [r4, #20]
   19bb8:	add	r2, r0, r5
   19bbc:	str	r2, [r4, #20]
   19bc0:	b	19be4 <flatcc_json_printer_uint64_vector_field@@Base+0x2b4>
   19bc4:	ldr	r0, [r4, #16]
   19bc8:	cmp	r2, r0
   19bcc:	bcc	19be4 <flatcc_json_printer_uint64_vector_field@@Base+0x2b4>
   19bd0:	ldr	r2, [r4, #44]	; 0x2c
   19bd4:	mov	r0, r4
   19bd8:	mov	r1, #0
   19bdc:	blx	r2
   19be0:	ldr	r2, [r4, #20]
   19be4:	ldrd	r0, [r7]
   19be8:	bl	158b0 <flatcc_json_printer_uint64@@Base+0x30>
   19bec:	ldr	r1, [r4, #20]
   19bf0:	add	r7, r7, #8
   19bf4:	cmp	r9, #0
   19bf8:	add	r0, r1, r0
   19bfc:	str	r0, [r4, #20]
   19c00:	bne	19af0 <flatcc_json_printer_uint64_vector_field@@Base+0x1c0>
   19c04:	ldrb	r1, [r4, #25]
   19c08:	ldr	r0, [r4, #20]
   19c0c:	cmp	r1, #0
   19c10:	beq	19cd0 <flatcc_json_printer_uint64_vector_field@@Base+0x3a0>
   19c14:	add	r1, r0, #1
   19c18:	str	r1, [r4, #20]
   19c1c:	mov	r1, #10
   19c20:	strb	r1, [r0]
   19c24:	ldr	r0, [r4, #32]
   19c28:	sub	r2, r0, #1
   19c2c:	str	r2, [r4, #32]
   19c30:	ldrb	r3, [r4, #25]
   19c34:	ldr	r0, [r4, #20]
   19c38:	ldr	r1, [r4, #16]
   19c3c:	mla	r7, r2, r3, r0
   19c40:	mul	r5, r2, r3
   19c44:	cmp	r7, r1
   19c48:	bls	19cb8 <flatcc_json_printer_uint64_vector_field@@Base+0x388>
   19c4c:	cmp	r0, r1
   19c50:	bcc	19c6c <flatcc_json_printer_uint64_vector_field@@Base+0x33c>
   19c54:	ldr	r2, [r4, #44]	; 0x2c
   19c58:	mov	r0, r4
   19c5c:	mov	r1, #0
   19c60:	blx	r2
   19c64:	ldr	r1, [r4, #16]
   19c68:	ldr	r0, [r4, #20]
   19c6c:	sub	r6, r1, r0
   19c70:	cmp	r6, r5
   19c74:	bcs	19cb8 <flatcc_json_printer_uint64_vector_field@@Base+0x388>
   19c78:	mov	r1, #32
   19c7c:	mov	r2, r6
   19c80:	bl	12948 <memset@plt>
   19c84:	ldr	r0, [r4, #20]
   19c88:	ldr	r2, [r4, #44]	; 0x2c
   19c8c:	mov	r1, #0
   19c90:	add	r0, r0, r6
   19c94:	str	r0, [r4, #20]
   19c98:	mov	r0, r4
   19c9c:	blx	r2
   19ca0:	ldr	r1, [r4, #16]
   19ca4:	ldr	r0, [r4, #20]
   19ca8:	sub	r5, r5, r6
   19cac:	sub	r6, r1, r0
   19cb0:	cmp	r5, r6
   19cb4:	bhi	19c78 <flatcc_json_printer_uint64_vector_field@@Base+0x348>
   19cb8:	mov	r1, #32
   19cbc:	mov	r2, r5
   19cc0:	bl	12948 <memset@plt>
   19cc4:	ldr	r0, [r4, #20]
   19cc8:	add	r0, r0, r5
   19ccc:	str	r0, [r4, #20]
   19cd0:	add	r1, r0, #1
   19cd4:	str	r1, [r4, #20]
   19cd8:	mov	r1, #93	; 0x5d
   19cdc:	strb	r1, [r0]
   19ce0:	sub	sp, fp, #28
   19ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019ce8 <flatcc_json_printer_int8_vector_field@@Base>:
   19ce8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19cec:	add	fp, sp, #28
   19cf0:	sub	sp, sp, #4
   19cf4:	mov	r4, r0
   19cf8:	mov	r0, #4
   19cfc:	add	r0, r0, r2, lsl #1
   19d00:	ldr	r2, [r1, #8]
   19d04:	cmp	r0, r2
   19d08:	bge	19d28 <flatcc_json_printer_int8_vector_field@@Base+0x40>
   19d0c:	ldr	r2, [r1, #4]
   19d10:	add	r0, r2, r0
   19d14:	ldrh	r0, [r0]
   19d18:	cmp	r0, #0
   19d1c:	ldrne	r2, [r1]
   19d20:	addsne	r9, r2, r0
   19d24:	bne	19d30 <flatcc_json_printer_int8_vector_field@@Base+0x48>
   19d28:	sub	sp, fp, #28
   19d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19d30:	ldr	r0, [r1, #16]
   19d34:	ldr	r2, [fp, #8]
   19d38:	add	r7, r0, #1
   19d3c:	cmp	r0, #0
   19d40:	str	r7, [r1, #16]
   19d44:	ldrne	r0, [r4, #20]
   19d48:	addne	r1, r0, #1
   19d4c:	strne	r1, [r4, #20]
   19d50:	movne	r1, #44	; 0x2c
   19d54:	strbne	r1, [r0]
   19d58:	mov	r1, r3
   19d5c:	ldr	r0, [r9]
   19d60:	ldr	r8, [r9, r0]!
   19d64:	mov	r0, r4
   19d68:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   19d6c:	ldr	r1, [r4, #32]
   19d70:	ldr	r0, [r4, #20]
   19d74:	cmp	r8, #0
   19d78:	add	r1, r1, #1
   19d7c:	str	r1, [r4, #32]
   19d80:	add	r1, r0, #1
   19d84:	str	r1, [r4, #20]
   19d88:	mov	r1, #91	; 0x5b
   19d8c:	strb	r1, [r0]
   19d90:	beq	1a13c <flatcc_json_printer_int8_vector_field@@Base+0x454>
   19d94:	ldrb	r1, [r4, #25]
   19d98:	ldr	r0, [r4, #20]
   19d9c:	cmp	r1, #0
   19da0:	beq	19e5c <flatcc_json_printer_int8_vector_field@@Base+0x174>
   19da4:	add	r1, r0, #1
   19da8:	str	r1, [r4, #20]
   19dac:	mov	r1, #10
   19db0:	strb	r1, [r0]
   19db4:	ldr	r0, [r4, #20]
   19db8:	ldrb	r2, [r4, #25]
   19dbc:	ldr	r3, [r4, #32]
   19dc0:	ldr	r1, [r4, #16]
   19dc4:	mla	r7, r3, r2, r0
   19dc8:	mul	r5, r3, r2
   19dcc:	cmp	r7, r1
   19dd0:	bls	19e40 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   19dd4:	cmp	r0, r1
   19dd8:	bcc	19df4 <flatcc_json_printer_int8_vector_field@@Base+0x10c>
   19ddc:	ldr	r2, [r4, #44]	; 0x2c
   19de0:	mov	r0, r4
   19de4:	mov	r1, #0
   19de8:	blx	r2
   19dec:	ldr	r1, [r4, #16]
   19df0:	ldr	r0, [r4, #20]
   19df4:	sub	r6, r1, r0
   19df8:	cmp	r6, r5
   19dfc:	bcs	19e40 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   19e00:	mov	r1, #32
   19e04:	mov	r2, r6
   19e08:	bl	12948 <memset@plt>
   19e0c:	ldr	r0, [r4, #20]
   19e10:	ldr	r2, [r4, #44]	; 0x2c
   19e14:	mov	r1, #0
   19e18:	add	r0, r0, r6
   19e1c:	str	r0, [r4, #20]
   19e20:	mov	r0, r4
   19e24:	blx	r2
   19e28:	ldr	r1, [r4, #16]
   19e2c:	ldr	r0, [r4, #20]
   19e30:	sub	r5, r5, r6
   19e34:	sub	r6, r1, r0
   19e38:	cmp	r5, r6
   19e3c:	bhi	19e00 <flatcc_json_printer_int8_vector_field@@Base+0x118>
   19e40:	mov	r1, #32
   19e44:	mov	r2, r5
   19e48:	bl	12948 <memset@plt>
   19e4c:	ldr	r0, [r4, #20]
   19e50:	add	r0, r0, r5
   19e54:	str	r0, [r4, #20]
   19e58:	b	19e7c <flatcc_json_printer_int8_vector_field@@Base+0x194>
   19e5c:	ldr	r1, [r4, #16]
   19e60:	cmp	r0, r1
   19e64:	bcc	19e7c <flatcc_json_printer_int8_vector_field@@Base+0x194>
   19e68:	ldr	r2, [r4, #44]	; 0x2c
   19e6c:	mov	r0, r4
   19e70:	mov	r1, #0
   19e74:	blx	r2
   19e78:	ldr	r0, [r4, #20]
   19e7c:	ldrb	r1, [r9, #4]
   19e80:	sxtb	r2, r1
   19e84:	lsr	r1, r1, #7
   19e88:	cmn	r2, #1
   19e8c:	movle	r3, #45	; 0x2d
   19e90:	rsble	r2, r2, #0
   19e94:	strble	r3, [r0], #1
   19e98:	uxtb	r3, r2
   19e9c:	cmp	r3, #100	; 0x64
   19ea0:	bcc	19eec <flatcc_json_printer_int8_vector_field@@Base+0x204>
   19ea4:	mov	r2, #0
   19ea8:	strb	r2, [r0, #3]
   19eac:	movw	r2, #34079	; 0x851f
   19eb0:	movt	r2, #20971	; 0x51eb
   19eb4:	umull	r2, r7, r3, r2
   19eb8:	mov	r2, #48	; 0x30
   19ebc:	orr	r2, r2, r7, lsr #5
   19ec0:	strb	r2, [r0]
   19ec4:	lsr	r2, r7, #5
   19ec8:	mov	r7, #100	; 0x64
   19ecc:	mls	r2, r2, r7, r3
   19ed0:	movw	r3, #6299	; 0x189b
   19ed4:	movt	r3, #2
   19ed8:	add	r2, r3, r2, lsl #1
   19edc:	ldrh	r2, [r2]
   19ee0:	strh	r2, [r0, #1]
   19ee4:	mov	r0, #3
   19ee8:	b	19f44 <flatcc_json_printer_int8_vector_field@@Base+0x25c>
   19eec:	cmp	r3, #10
   19ef0:	bcc	19f30 <flatcc_json_printer_int8_vector_field@@Base+0x248>
   19ef4:	mov	r2, #0
   19ef8:	strb	r2, [r0, #2]
   19efc:	movw	r2, #34079	; 0x851f
   19f00:	movt	r2, #20971	; 0x51eb
   19f04:	umull	r2, r7, r3, r2
   19f08:	lsr	r2, r7, #5
   19f0c:	mov	r7, #100	; 0x64
   19f10:	mls	r2, r2, r7, r3
   19f14:	movw	r3, #6299	; 0x189b
   19f18:	movt	r3, #2
   19f1c:	add	r2, r3, r2, lsl #1
   19f20:	ldrh	r2, [r2]
   19f24:	strh	r2, [r0]
   19f28:	mov	r0, #2
   19f2c:	b	19f44 <flatcc_json_printer_int8_vector_field@@Base+0x25c>
   19f30:	mov	r3, #0
   19f34:	add	r2, r2, #48	; 0x30
   19f38:	strb	r3, [r0, #1]
   19f3c:	strb	r2, [r0]
   19f40:	mov	r0, #1
   19f44:	add	r0, r0, r1
   19f48:	ldr	r1, [r4, #20]
   19f4c:	subs	r8, r8, #1
   19f50:	add	r0, r1, r0
   19f54:	str	r0, [r4, #20]
   19f58:	beq	1a13c <flatcc_json_printer_int8_vector_field@@Base+0x454>
   19f5c:	ldr	r0, [r4, #20]
   19f60:	add	r7, r9, #5
   19f64:	mov	r9, #44	; 0x2c
   19f68:	mov	sl, #0
   19f6c:	add	r1, r0, #1
   19f70:	str	r1, [r4, #20]
   19f74:	strb	r9, [r0]
   19f78:	ldrb	r1, [r4, #25]
   19f7c:	ldr	r0, [r4, #20]
   19f80:	cmp	r1, #0
   19f84:	beq	1a040 <flatcc_json_printer_int8_vector_field@@Base+0x358>
   19f88:	add	r1, r0, #1
   19f8c:	str	r1, [r4, #20]
   19f90:	mov	r1, #10
   19f94:	strb	r1, [r0]
   19f98:	ldr	r0, [r4, #20]
   19f9c:	ldrb	r2, [r4, #25]
   19fa0:	ldr	r3, [r4, #32]
   19fa4:	ldr	r1, [r4, #16]
   19fa8:	mla	r6, r3, r2, r0
   19fac:	mul	r5, r3, r2
   19fb0:	cmp	r6, r1
   19fb4:	bls	1a024 <flatcc_json_printer_int8_vector_field@@Base+0x33c>
   19fb8:	cmp	r0, r1
   19fbc:	bcc	19fd8 <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
   19fc0:	ldr	r2, [r4, #44]	; 0x2c
   19fc4:	mov	r0, r4
   19fc8:	mov	r1, #0
   19fcc:	blx	r2
   19fd0:	ldr	r1, [r4, #16]
   19fd4:	ldr	r0, [r4, #20]
   19fd8:	sub	r6, r1, r0
   19fdc:	cmp	r6, r5
   19fe0:	bcs	1a024 <flatcc_json_printer_int8_vector_field@@Base+0x33c>
   19fe4:	mov	r1, #32
   19fe8:	mov	r2, r6
   19fec:	bl	12948 <memset@plt>
   19ff0:	ldr	r0, [r4, #20]
   19ff4:	ldr	r2, [r4, #44]	; 0x2c
   19ff8:	mov	r1, #0
   19ffc:	add	r0, r0, r6
   1a000:	str	r0, [r4, #20]
   1a004:	mov	r0, r4
   1a008:	blx	r2
   1a00c:	ldr	r1, [r4, #16]
   1a010:	ldr	r0, [r4, #20]
   1a014:	sub	r5, r5, r6
   1a018:	sub	r6, r1, r0
   1a01c:	cmp	r5, r6
   1a020:	bhi	19fe4 <flatcc_json_printer_int8_vector_field@@Base+0x2fc>
   1a024:	mov	r1, #32
   1a028:	mov	r2, r5
   1a02c:	bl	12948 <memset@plt>
   1a030:	ldr	r0, [r4, #20]
   1a034:	add	r0, r0, r5
   1a038:	str	r0, [r4, #20]
   1a03c:	b	1a060 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   1a040:	ldr	r1, [r4, #16]
   1a044:	cmp	r0, r1
   1a048:	bcc	1a060 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   1a04c:	ldr	r2, [r4, #44]	; 0x2c
   1a050:	mov	r0, r4
   1a054:	mov	r1, #0
   1a058:	blx	r2
   1a05c:	ldr	r0, [r4, #20]
   1a060:	ldrb	r1, [r7]
   1a064:	sub	r8, r8, #1
   1a068:	sxtb	r2, r1
   1a06c:	lsr	r1, r1, #7
   1a070:	cmn	r2, #1
   1a074:	movle	r3, #45	; 0x2d
   1a078:	rsble	r2, r2, #0
   1a07c:	strble	r3, [r0], #1
   1a080:	uxtb	r3, r2
   1a084:	cmp	r3, #100	; 0x64
   1a088:	bcc	1a0d0 <flatcc_json_printer_int8_vector_field@@Base+0x3e8>
   1a08c:	movw	r2, #34079	; 0x851f
   1a090:	strb	sl, [r0, #3]
   1a094:	movt	r2, #20971	; 0x51eb
   1a098:	umull	r2, r6, r3, r2
   1a09c:	mov	r2, #48	; 0x30
   1a0a0:	orr	r2, r2, r6, lsr #5
   1a0a4:	strb	r2, [r0]
   1a0a8:	lsr	r2, r6, #5
   1a0ac:	mov	r6, #100	; 0x64
   1a0b0:	mls	r2, r2, r6, r3
   1a0b4:	movw	r3, #6299	; 0x189b
   1a0b8:	movt	r3, #2
   1a0bc:	add	r2, r3, r2, lsl #1
   1a0c0:	ldrh	r2, [r2]
   1a0c4:	strh	r2, [r0, #1]
   1a0c8:	mov	r0, #3
   1a0cc:	b	1a120 <flatcc_json_printer_int8_vector_field@@Base+0x438>
   1a0d0:	cmp	r3, #10
   1a0d4:	bcc	1a110 <flatcc_json_printer_int8_vector_field@@Base+0x428>
   1a0d8:	movw	r2, #34079	; 0x851f
   1a0dc:	strb	sl, [r0, #2]
   1a0e0:	movt	r2, #20971	; 0x51eb
   1a0e4:	umull	r2, r6, r3, r2
   1a0e8:	lsr	r2, r6, #5
   1a0ec:	mov	r6, #100	; 0x64
   1a0f0:	mls	r2, r2, r6, r3
   1a0f4:	movw	r3, #6299	; 0x189b
   1a0f8:	movt	r3, #2
   1a0fc:	add	r2, r3, r2, lsl #1
   1a100:	ldrh	r2, [r2]
   1a104:	strh	r2, [r0]
   1a108:	mov	r0, #2
   1a10c:	b	1a120 <flatcc_json_printer_int8_vector_field@@Base+0x438>
   1a110:	add	r2, r2, #48	; 0x30
   1a114:	strb	sl, [r0, #1]
   1a118:	strb	r2, [r0]
   1a11c:	mov	r0, #1
   1a120:	add	r0, r0, r1
   1a124:	ldr	r1, [r4, #20]
   1a128:	add	r7, r7, #1
   1a12c:	cmp	r8, #0
   1a130:	add	r0, r1, r0
   1a134:	str	r0, [r4, #20]
   1a138:	bne	19f6c <flatcc_json_printer_int8_vector_field@@Base+0x284>
   1a13c:	ldrb	r1, [r4, #25]
   1a140:	ldr	r0, [r4, #20]
   1a144:	cmp	r1, #0
   1a148:	beq	1a208 <flatcc_json_printer_int8_vector_field@@Base+0x520>
   1a14c:	add	r1, r0, #1
   1a150:	str	r1, [r4, #20]
   1a154:	mov	r1, #10
   1a158:	strb	r1, [r0]
   1a15c:	ldr	r0, [r4, #32]
   1a160:	sub	r2, r0, #1
   1a164:	str	r2, [r4, #32]
   1a168:	ldrb	r3, [r4, #25]
   1a16c:	ldr	r0, [r4, #20]
   1a170:	ldr	r1, [r4, #16]
   1a174:	mla	r7, r2, r3, r0
   1a178:	mul	r5, r2, r3
   1a17c:	cmp	r7, r1
   1a180:	bls	1a1f0 <flatcc_json_printer_int8_vector_field@@Base+0x508>
   1a184:	cmp	r0, r1
   1a188:	bcc	1a1a4 <flatcc_json_printer_int8_vector_field@@Base+0x4bc>
   1a18c:	ldr	r2, [r4, #44]	; 0x2c
   1a190:	mov	r0, r4
   1a194:	mov	r1, #0
   1a198:	blx	r2
   1a19c:	ldr	r1, [r4, #16]
   1a1a0:	ldr	r0, [r4, #20]
   1a1a4:	sub	r6, r1, r0
   1a1a8:	cmp	r6, r5
   1a1ac:	bcs	1a1f0 <flatcc_json_printer_int8_vector_field@@Base+0x508>
   1a1b0:	mov	r1, #32
   1a1b4:	mov	r2, r6
   1a1b8:	bl	12948 <memset@plt>
   1a1bc:	ldr	r0, [r4, #20]
   1a1c0:	ldr	r2, [r4, #44]	; 0x2c
   1a1c4:	mov	r1, #0
   1a1c8:	add	r0, r0, r6
   1a1cc:	str	r0, [r4, #20]
   1a1d0:	mov	r0, r4
   1a1d4:	blx	r2
   1a1d8:	ldr	r1, [r4, #16]
   1a1dc:	ldr	r0, [r4, #20]
   1a1e0:	sub	r5, r5, r6
   1a1e4:	sub	r6, r1, r0
   1a1e8:	cmp	r5, r6
   1a1ec:	bhi	1a1b0 <flatcc_json_printer_int8_vector_field@@Base+0x4c8>
   1a1f0:	mov	r1, #32
   1a1f4:	mov	r2, r5
   1a1f8:	bl	12948 <memset@plt>
   1a1fc:	ldr	r0, [r4, #20]
   1a200:	add	r0, r0, r5
   1a204:	str	r0, [r4, #20]
   1a208:	add	r1, r0, #1
   1a20c:	str	r1, [r4, #20]
   1a210:	mov	r1, #93	; 0x5d
   1a214:	strb	r1, [r0]
   1a218:	sub	sp, fp, #28
   1a21c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a220 <flatcc_json_printer_int16_vector_field@@Base>:
   1a220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a224:	add	fp, sp, #28
   1a228:	sub	sp, sp, #4
   1a22c:	mov	r4, r0
   1a230:	mov	r0, #4
   1a234:	add	r0, r0, r2, lsl #1
   1a238:	ldr	r2, [r1, #8]
   1a23c:	cmp	r0, r2
   1a240:	bge	1a260 <flatcc_json_printer_int16_vector_field@@Base+0x40>
   1a244:	ldr	r2, [r1, #4]
   1a248:	add	r0, r2, r0
   1a24c:	ldrh	r0, [r0]
   1a250:	cmp	r0, #0
   1a254:	ldrne	r2, [r1]
   1a258:	addsne	r8, r2, r0
   1a25c:	bne	1a268 <flatcc_json_printer_int16_vector_field@@Base+0x48>
   1a260:	sub	sp, fp, #28
   1a264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a268:	ldr	r0, [r1, #16]
   1a26c:	ldr	r2, [fp, #8]
   1a270:	add	r7, r0, #1
   1a274:	cmp	r0, #0
   1a278:	str	r7, [r1, #16]
   1a27c:	ldrne	r0, [r4, #20]
   1a280:	addne	r1, r0, #1
   1a284:	strne	r1, [r4, #20]
   1a288:	movne	r1, #44	; 0x2c
   1a28c:	strbne	r1, [r0]
   1a290:	mov	r1, r3
   1a294:	ldr	r0, [r8]
   1a298:	ldr	r7, [r8, r0]!
   1a29c:	mov	r0, r4
   1a2a0:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1a2a4:	ldr	r1, [r4, #32]
   1a2a8:	ldr	r0, [r4, #20]
   1a2ac:	cmp	r7, #0
   1a2b0:	add	r1, r1, #1
   1a2b4:	str	r1, [r4, #32]
   1a2b8:	add	r1, r0, #1
   1a2bc:	str	r1, [r4, #20]
   1a2c0:	mov	r1, #91	; 0x5b
   1a2c4:	strb	r1, [r0]
   1a2c8:	beq	1a534 <flatcc_json_printer_int16_vector_field@@Base+0x314>
   1a2cc:	ldrb	r0, [r4, #25]
   1a2d0:	ldr	r1, [r4, #20]
   1a2d4:	cmp	r0, #0
   1a2d8:	beq	1a394 <flatcc_json_printer_int16_vector_field@@Base+0x174>
   1a2dc:	add	r0, r1, #1
   1a2e0:	str	r0, [r4, #20]
   1a2e4:	mov	r0, #10
   1a2e8:	strb	r0, [r1]
   1a2ec:	ldr	r0, [r4, #20]
   1a2f0:	ldrb	r2, [r4, #25]
   1a2f4:	ldr	r3, [r4, #32]
   1a2f8:	ldr	r1, [r4, #16]
   1a2fc:	mla	r6, r3, r2, r0
   1a300:	mul	r5, r3, r2
   1a304:	cmp	r6, r1
   1a308:	bls	1a378 <flatcc_json_printer_int16_vector_field@@Base+0x158>
   1a30c:	cmp	r0, r1
   1a310:	bcc	1a32c <flatcc_json_printer_int16_vector_field@@Base+0x10c>
   1a314:	ldr	r2, [r4, #44]	; 0x2c
   1a318:	mov	r0, r4
   1a31c:	mov	r1, #0
   1a320:	blx	r2
   1a324:	ldr	r1, [r4, #16]
   1a328:	ldr	r0, [r4, #20]
   1a32c:	sub	r6, r1, r0
   1a330:	cmp	r6, r5
   1a334:	bcs	1a378 <flatcc_json_printer_int16_vector_field@@Base+0x158>
   1a338:	mov	r1, #32
   1a33c:	mov	r2, r6
   1a340:	bl	12948 <memset@plt>
   1a344:	ldr	r0, [r4, #20]
   1a348:	ldr	r2, [r4, #44]	; 0x2c
   1a34c:	mov	r1, #0
   1a350:	add	r0, r0, r6
   1a354:	str	r0, [r4, #20]
   1a358:	mov	r0, r4
   1a35c:	blx	r2
   1a360:	ldr	r1, [r4, #16]
   1a364:	ldr	r0, [r4, #20]
   1a368:	sub	r5, r5, r6
   1a36c:	sub	r6, r1, r0
   1a370:	cmp	r5, r6
   1a374:	bhi	1a338 <flatcc_json_printer_int16_vector_field@@Base+0x118>
   1a378:	mov	r1, #32
   1a37c:	mov	r2, r5
   1a380:	bl	12948 <memset@plt>
   1a384:	ldr	r0, [r4, #20]
   1a388:	add	r1, r0, r5
   1a38c:	str	r1, [r4, #20]
   1a390:	b	1a3b4 <flatcc_json_printer_int16_vector_field@@Base+0x194>
   1a394:	ldr	r0, [r4, #16]
   1a398:	cmp	r1, r0
   1a39c:	bcc	1a3b4 <flatcc_json_printer_int16_vector_field@@Base+0x194>
   1a3a0:	ldr	r2, [r4, #44]	; 0x2c
   1a3a4:	mov	r0, r4
   1a3a8:	mov	r1, #0
   1a3ac:	blx	r2
   1a3b0:	ldr	r1, [r4, #20]
   1a3b4:	ldrh	r0, [r8, #4]
   1a3b8:	lsr	r5, r0, #15
   1a3bc:	sxth	r0, r0
   1a3c0:	cmn	r0, #1
   1a3c4:	rsble	r0, r0, #0
   1a3c8:	movle	r2, #45	; 0x2d
   1a3cc:	strble	r2, [r1], #1
   1a3d0:	uxth	r0, r0
   1a3d4:	bl	153a8 <flatcc_json_printer_uint16@@Base+0x2c>
   1a3d8:	ldr	r1, [r4, #20]
   1a3dc:	add	r0, r0, r5
   1a3e0:	subs	r9, r7, #1
   1a3e4:	add	r0, r1, r0
   1a3e8:	str	r0, [r4, #20]
   1a3ec:	beq	1a534 <flatcc_json_printer_int16_vector_field@@Base+0x314>
   1a3f0:	ldr	r0, [r4, #20]
   1a3f4:	add	r7, r8, #6
   1a3f8:	mov	r8, #44	; 0x2c
   1a3fc:	mov	sl, #10
   1a400:	add	r1, r0, #1
   1a404:	str	r1, [r4, #20]
   1a408:	strb	r8, [r0]
   1a40c:	ldrb	r0, [r4, #25]
   1a410:	ldr	r1, [r4, #20]
   1a414:	cmp	r0, #0
   1a418:	beq	1a4d0 <flatcc_json_printer_int16_vector_field@@Base+0x2b0>
   1a41c:	add	r0, r1, #1
   1a420:	str	r0, [r4, #20]
   1a424:	strb	sl, [r1]
   1a428:	ldr	r0, [r4, #20]
   1a42c:	ldrb	r2, [r4, #25]
   1a430:	ldr	r3, [r4, #32]
   1a434:	ldr	r1, [r4, #16]
   1a438:	mla	r6, r3, r2, r0
   1a43c:	mul	r5, r3, r2
   1a440:	cmp	r6, r1
   1a444:	bls	1a4b4 <flatcc_json_printer_int16_vector_field@@Base+0x294>
   1a448:	cmp	r0, r1
   1a44c:	bcc	1a468 <flatcc_json_printer_int16_vector_field@@Base+0x248>
   1a450:	ldr	r2, [r4, #44]	; 0x2c
   1a454:	mov	r0, r4
   1a458:	mov	r1, #0
   1a45c:	blx	r2
   1a460:	ldr	r1, [r4, #16]
   1a464:	ldr	r0, [r4, #20]
   1a468:	sub	r6, r1, r0
   1a46c:	cmp	r6, r5
   1a470:	bcs	1a4b4 <flatcc_json_printer_int16_vector_field@@Base+0x294>
   1a474:	mov	r1, #32
   1a478:	mov	r2, r6
   1a47c:	bl	12948 <memset@plt>
   1a480:	ldr	r0, [r4, #20]
   1a484:	ldr	r2, [r4, #44]	; 0x2c
   1a488:	mov	r1, #0
   1a48c:	add	r0, r0, r6
   1a490:	str	r0, [r4, #20]
   1a494:	mov	r0, r4
   1a498:	blx	r2
   1a49c:	ldr	r1, [r4, #16]
   1a4a0:	ldr	r0, [r4, #20]
   1a4a4:	sub	r5, r5, r6
   1a4a8:	sub	r6, r1, r0
   1a4ac:	cmp	r5, r6
   1a4b0:	bhi	1a474 <flatcc_json_printer_int16_vector_field@@Base+0x254>
   1a4b4:	mov	r1, #32
   1a4b8:	mov	r2, r5
   1a4bc:	bl	12948 <memset@plt>
   1a4c0:	ldr	r0, [r4, #20]
   1a4c4:	add	r1, r0, r5
   1a4c8:	str	r1, [r4, #20]
   1a4cc:	b	1a4f0 <flatcc_json_printer_int16_vector_field@@Base+0x2d0>
   1a4d0:	ldr	r0, [r4, #16]
   1a4d4:	cmp	r1, r0
   1a4d8:	bcc	1a4f0 <flatcc_json_printer_int16_vector_field@@Base+0x2d0>
   1a4dc:	ldr	r2, [r4, #44]	; 0x2c
   1a4e0:	mov	r0, r4
   1a4e4:	mov	r1, #0
   1a4e8:	blx	r2
   1a4ec:	ldr	r1, [r4, #20]
   1a4f0:	ldrh	r0, [r7]
   1a4f4:	sub	r9, r9, #1
   1a4f8:	lsr	r5, r0, #15
   1a4fc:	sxth	r0, r0
   1a500:	cmn	r0, #1
   1a504:	rsble	r0, r0, #0
   1a508:	movle	r2, #45	; 0x2d
   1a50c:	strble	r2, [r1], #1
   1a510:	uxth	r0, r0
   1a514:	bl	153a8 <flatcc_json_printer_uint16@@Base+0x2c>
   1a518:	ldr	r1, [r4, #20]
   1a51c:	add	r0, r0, r5
   1a520:	add	r7, r7, #2
   1a524:	cmp	r9, #0
   1a528:	add	r0, r1, r0
   1a52c:	str	r0, [r4, #20]
   1a530:	bne	1a400 <flatcc_json_printer_int16_vector_field@@Base+0x1e0>
   1a534:	ldrb	r1, [r4, #25]
   1a538:	ldr	r0, [r4, #20]
   1a53c:	cmp	r1, #0
   1a540:	beq	1a600 <flatcc_json_printer_int16_vector_field@@Base+0x3e0>
   1a544:	add	r1, r0, #1
   1a548:	str	r1, [r4, #20]
   1a54c:	mov	r1, #10
   1a550:	strb	r1, [r0]
   1a554:	ldr	r0, [r4, #32]
   1a558:	sub	r2, r0, #1
   1a55c:	str	r2, [r4, #32]
   1a560:	ldrb	r3, [r4, #25]
   1a564:	ldr	r0, [r4, #20]
   1a568:	ldr	r1, [r4, #16]
   1a56c:	mla	r7, r2, r3, r0
   1a570:	mul	r5, r2, r3
   1a574:	cmp	r7, r1
   1a578:	bls	1a5e8 <flatcc_json_printer_int16_vector_field@@Base+0x3c8>
   1a57c:	cmp	r0, r1
   1a580:	bcc	1a59c <flatcc_json_printer_int16_vector_field@@Base+0x37c>
   1a584:	ldr	r2, [r4, #44]	; 0x2c
   1a588:	mov	r0, r4
   1a58c:	mov	r1, #0
   1a590:	blx	r2
   1a594:	ldr	r1, [r4, #16]
   1a598:	ldr	r0, [r4, #20]
   1a59c:	sub	r6, r1, r0
   1a5a0:	cmp	r6, r5
   1a5a4:	bcs	1a5e8 <flatcc_json_printer_int16_vector_field@@Base+0x3c8>
   1a5a8:	mov	r1, #32
   1a5ac:	mov	r2, r6
   1a5b0:	bl	12948 <memset@plt>
   1a5b4:	ldr	r0, [r4, #20]
   1a5b8:	ldr	r2, [r4, #44]	; 0x2c
   1a5bc:	mov	r1, #0
   1a5c0:	add	r0, r0, r6
   1a5c4:	str	r0, [r4, #20]
   1a5c8:	mov	r0, r4
   1a5cc:	blx	r2
   1a5d0:	ldr	r1, [r4, #16]
   1a5d4:	ldr	r0, [r4, #20]
   1a5d8:	sub	r5, r5, r6
   1a5dc:	sub	r6, r1, r0
   1a5e0:	cmp	r5, r6
   1a5e4:	bhi	1a5a8 <flatcc_json_printer_int16_vector_field@@Base+0x388>
   1a5e8:	mov	r1, #32
   1a5ec:	mov	r2, r5
   1a5f0:	bl	12948 <memset@plt>
   1a5f4:	ldr	r0, [r4, #20]
   1a5f8:	add	r0, r0, r5
   1a5fc:	str	r0, [r4, #20]
   1a600:	add	r1, r0, #1
   1a604:	str	r1, [r4, #20]
   1a608:	mov	r1, #93	; 0x5d
   1a60c:	strb	r1, [r0]
   1a610:	sub	sp, fp, #28
   1a614:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a618 <flatcc_json_printer_int32_vector_field@@Base>:
   1a618:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a61c:	add	fp, sp, #28
   1a620:	sub	sp, sp, #4
   1a624:	mov	r4, r0
   1a628:	mov	r0, #4
   1a62c:	add	r0, r0, r2, lsl #1
   1a630:	ldr	r2, [r1, #8]
   1a634:	cmp	r0, r2
   1a638:	bge	1a658 <flatcc_json_printer_int32_vector_field@@Base+0x40>
   1a63c:	ldr	r2, [r1, #4]
   1a640:	add	r0, r2, r0
   1a644:	ldrh	r0, [r0]
   1a648:	cmp	r0, #0
   1a64c:	ldrne	r2, [r1]
   1a650:	addsne	r8, r2, r0
   1a654:	bne	1a660 <flatcc_json_printer_int32_vector_field@@Base+0x48>
   1a658:	sub	sp, fp, #28
   1a65c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a660:	ldr	r0, [r1, #16]
   1a664:	ldr	r2, [fp, #8]
   1a668:	add	r7, r0, #1
   1a66c:	cmp	r0, #0
   1a670:	str	r7, [r1, #16]
   1a674:	ldrne	r0, [r4, #20]
   1a678:	addne	r1, r0, #1
   1a67c:	strne	r1, [r4, #20]
   1a680:	movne	r1, #44	; 0x2c
   1a684:	strbne	r1, [r0]
   1a688:	mov	r1, r3
   1a68c:	ldr	r0, [r8]
   1a690:	ldr	r7, [r8, r0]!
   1a694:	mov	r0, r4
   1a698:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1a69c:	ldr	r1, [r4, #32]
   1a6a0:	ldr	r0, [r4, #20]
   1a6a4:	cmp	r7, #0
   1a6a8:	add	r1, r1, #1
   1a6ac:	str	r1, [r4, #32]
   1a6b0:	add	r1, r0, #1
   1a6b4:	str	r1, [r4, #20]
   1a6b8:	mov	r1, #91	; 0x5b
   1a6bc:	strb	r1, [r0]
   1a6c0:	beq	1a91c <flatcc_json_printer_int32_vector_field@@Base+0x304>
   1a6c4:	ldrb	r0, [r4, #25]
   1a6c8:	ldr	r1, [r4, #20]
   1a6cc:	cmp	r0, #0
   1a6d0:	beq	1a78c <flatcc_json_printer_int32_vector_field@@Base+0x174>
   1a6d4:	add	r0, r1, #1
   1a6d8:	str	r0, [r4, #20]
   1a6dc:	mov	r0, #10
   1a6e0:	strb	r0, [r1]
   1a6e4:	ldr	r0, [r4, #20]
   1a6e8:	ldrb	r2, [r4, #25]
   1a6ec:	ldr	r3, [r4, #32]
   1a6f0:	ldr	r1, [r4, #16]
   1a6f4:	mla	r6, r3, r2, r0
   1a6f8:	mul	r5, r3, r2
   1a6fc:	cmp	r6, r1
   1a700:	bls	1a770 <flatcc_json_printer_int32_vector_field@@Base+0x158>
   1a704:	cmp	r0, r1
   1a708:	bcc	1a724 <flatcc_json_printer_int32_vector_field@@Base+0x10c>
   1a70c:	ldr	r2, [r4, #44]	; 0x2c
   1a710:	mov	r0, r4
   1a714:	mov	r1, #0
   1a718:	blx	r2
   1a71c:	ldr	r1, [r4, #16]
   1a720:	ldr	r0, [r4, #20]
   1a724:	sub	r6, r1, r0
   1a728:	cmp	r6, r5
   1a72c:	bcs	1a770 <flatcc_json_printer_int32_vector_field@@Base+0x158>
   1a730:	mov	r1, #32
   1a734:	mov	r2, r6
   1a738:	bl	12948 <memset@plt>
   1a73c:	ldr	r0, [r4, #20]
   1a740:	ldr	r2, [r4, #44]	; 0x2c
   1a744:	mov	r1, #0
   1a748:	add	r0, r0, r6
   1a74c:	str	r0, [r4, #20]
   1a750:	mov	r0, r4
   1a754:	blx	r2
   1a758:	ldr	r1, [r4, #16]
   1a75c:	ldr	r0, [r4, #20]
   1a760:	sub	r5, r5, r6
   1a764:	sub	r6, r1, r0
   1a768:	cmp	r5, r6
   1a76c:	bhi	1a730 <flatcc_json_printer_int32_vector_field@@Base+0x118>
   1a770:	mov	r1, #32
   1a774:	mov	r2, r5
   1a778:	bl	12948 <memset@plt>
   1a77c:	ldr	r0, [r4, #20]
   1a780:	add	r1, r0, r5
   1a784:	str	r1, [r4, #20]
   1a788:	b	1a7ac <flatcc_json_printer_int32_vector_field@@Base+0x194>
   1a78c:	ldr	r0, [r4, #16]
   1a790:	cmp	r1, r0
   1a794:	bcc	1a7ac <flatcc_json_printer_int32_vector_field@@Base+0x194>
   1a798:	ldr	r2, [r4, #44]	; 0x2c
   1a79c:	mov	r0, r4
   1a7a0:	mov	r1, #0
   1a7a4:	blx	r2
   1a7a8:	ldr	r1, [r4, #20]
   1a7ac:	ldr	r0, [r8, #4]
   1a7b0:	cmn	r0, #1
   1a7b4:	lsr	r5, r0, #31
   1a7b8:	movle	r2, #45	; 0x2d
   1a7bc:	rsble	r0, r0, #0
   1a7c0:	strble	r2, [r1], #1
   1a7c4:	bl	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   1a7c8:	ldr	r1, [r4, #20]
   1a7cc:	add	r0, r0, r5
   1a7d0:	subs	r9, r7, #1
   1a7d4:	add	r0, r1, r0
   1a7d8:	str	r0, [r4, #20]
   1a7dc:	beq	1a91c <flatcc_json_printer_int32_vector_field@@Base+0x304>
   1a7e0:	ldr	r0, [r4, #20]
   1a7e4:	add	r7, r8, #8
   1a7e8:	mov	r8, #44	; 0x2c
   1a7ec:	mov	sl, #10
   1a7f0:	add	r1, r0, #1
   1a7f4:	str	r1, [r4, #20]
   1a7f8:	strb	r8, [r0]
   1a7fc:	ldrb	r0, [r4, #25]
   1a800:	ldr	r1, [r4, #20]
   1a804:	cmp	r0, #0
   1a808:	beq	1a8c0 <flatcc_json_printer_int32_vector_field@@Base+0x2a8>
   1a80c:	add	r0, r1, #1
   1a810:	str	r0, [r4, #20]
   1a814:	strb	sl, [r1]
   1a818:	ldr	r0, [r4, #20]
   1a81c:	ldrb	r2, [r4, #25]
   1a820:	ldr	r3, [r4, #32]
   1a824:	ldr	r1, [r4, #16]
   1a828:	mla	r6, r3, r2, r0
   1a82c:	mul	r5, r3, r2
   1a830:	cmp	r6, r1
   1a834:	bls	1a8a4 <flatcc_json_printer_int32_vector_field@@Base+0x28c>
   1a838:	cmp	r0, r1
   1a83c:	bcc	1a858 <flatcc_json_printer_int32_vector_field@@Base+0x240>
   1a840:	ldr	r2, [r4, #44]	; 0x2c
   1a844:	mov	r0, r4
   1a848:	mov	r1, #0
   1a84c:	blx	r2
   1a850:	ldr	r1, [r4, #16]
   1a854:	ldr	r0, [r4, #20]
   1a858:	sub	r6, r1, r0
   1a85c:	cmp	r6, r5
   1a860:	bcs	1a8a4 <flatcc_json_printer_int32_vector_field@@Base+0x28c>
   1a864:	mov	r1, #32
   1a868:	mov	r2, r6
   1a86c:	bl	12948 <memset@plt>
   1a870:	ldr	r0, [r4, #20]
   1a874:	ldr	r2, [r4, #44]	; 0x2c
   1a878:	mov	r1, #0
   1a87c:	add	r0, r0, r6
   1a880:	str	r0, [r4, #20]
   1a884:	mov	r0, r4
   1a888:	blx	r2
   1a88c:	ldr	r1, [r4, #16]
   1a890:	ldr	r0, [r4, #20]
   1a894:	sub	r5, r5, r6
   1a898:	sub	r6, r1, r0
   1a89c:	cmp	r5, r6
   1a8a0:	bhi	1a864 <flatcc_json_printer_int32_vector_field@@Base+0x24c>
   1a8a4:	mov	r1, #32
   1a8a8:	mov	r2, r5
   1a8ac:	bl	12948 <memset@plt>
   1a8b0:	ldr	r0, [r4, #20]
   1a8b4:	add	r1, r0, r5
   1a8b8:	str	r1, [r4, #20]
   1a8bc:	b	1a8e0 <flatcc_json_printer_int32_vector_field@@Base+0x2c8>
   1a8c0:	ldr	r0, [r4, #16]
   1a8c4:	cmp	r1, r0
   1a8c8:	bcc	1a8e0 <flatcc_json_printer_int32_vector_field@@Base+0x2c8>
   1a8cc:	ldr	r2, [r4, #44]	; 0x2c
   1a8d0:	mov	r0, r4
   1a8d4:	mov	r1, #0
   1a8d8:	blx	r2
   1a8dc:	ldr	r1, [r4, #20]
   1a8e0:	ldr	r0, [r7]
   1a8e4:	sub	r9, r9, #1
   1a8e8:	cmn	r0, #1
   1a8ec:	lsr	r5, r0, #31
   1a8f0:	movle	r2, #45	; 0x2d
   1a8f4:	rsble	r0, r0, #0
   1a8f8:	strble	r2, [r1], #1
   1a8fc:	bl	15548 <flatcc_json_printer_uint32@@Base+0x2c>
   1a900:	ldr	r1, [r4, #20]
   1a904:	add	r0, r0, r5
   1a908:	add	r7, r7, #4
   1a90c:	cmp	r9, #0
   1a910:	add	r0, r1, r0
   1a914:	str	r0, [r4, #20]
   1a918:	bne	1a7f0 <flatcc_json_printer_int32_vector_field@@Base+0x1d8>
   1a91c:	ldrb	r1, [r4, #25]
   1a920:	ldr	r0, [r4, #20]
   1a924:	cmp	r1, #0
   1a928:	beq	1a9e8 <flatcc_json_printer_int32_vector_field@@Base+0x3d0>
   1a92c:	add	r1, r0, #1
   1a930:	str	r1, [r4, #20]
   1a934:	mov	r1, #10
   1a938:	strb	r1, [r0]
   1a93c:	ldr	r0, [r4, #32]
   1a940:	sub	r2, r0, #1
   1a944:	str	r2, [r4, #32]
   1a948:	ldrb	r3, [r4, #25]
   1a94c:	ldr	r0, [r4, #20]
   1a950:	ldr	r1, [r4, #16]
   1a954:	mla	r7, r2, r3, r0
   1a958:	mul	r5, r2, r3
   1a95c:	cmp	r7, r1
   1a960:	bls	1a9d0 <flatcc_json_printer_int32_vector_field@@Base+0x3b8>
   1a964:	cmp	r0, r1
   1a968:	bcc	1a984 <flatcc_json_printer_int32_vector_field@@Base+0x36c>
   1a96c:	ldr	r2, [r4, #44]	; 0x2c
   1a970:	mov	r0, r4
   1a974:	mov	r1, #0
   1a978:	blx	r2
   1a97c:	ldr	r1, [r4, #16]
   1a980:	ldr	r0, [r4, #20]
   1a984:	sub	r6, r1, r0
   1a988:	cmp	r6, r5
   1a98c:	bcs	1a9d0 <flatcc_json_printer_int32_vector_field@@Base+0x3b8>
   1a990:	mov	r1, #32
   1a994:	mov	r2, r6
   1a998:	bl	12948 <memset@plt>
   1a99c:	ldr	r0, [r4, #20]
   1a9a0:	ldr	r2, [r4, #44]	; 0x2c
   1a9a4:	mov	r1, #0
   1a9a8:	add	r0, r0, r6
   1a9ac:	str	r0, [r4, #20]
   1a9b0:	mov	r0, r4
   1a9b4:	blx	r2
   1a9b8:	ldr	r1, [r4, #16]
   1a9bc:	ldr	r0, [r4, #20]
   1a9c0:	sub	r5, r5, r6
   1a9c4:	sub	r6, r1, r0
   1a9c8:	cmp	r5, r6
   1a9cc:	bhi	1a990 <flatcc_json_printer_int32_vector_field@@Base+0x378>
   1a9d0:	mov	r1, #32
   1a9d4:	mov	r2, r5
   1a9d8:	bl	12948 <memset@plt>
   1a9dc:	ldr	r0, [r4, #20]
   1a9e0:	add	r0, r0, r5
   1a9e4:	str	r0, [r4, #20]
   1a9e8:	add	r1, r0, #1
   1a9ec:	str	r1, [r4, #20]
   1a9f0:	mov	r1, #93	; 0x5d
   1a9f4:	strb	r1, [r0]
   1a9f8:	sub	sp, fp, #28
   1a9fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001aa00 <flatcc_json_printer_int64_vector_field@@Base>:
   1aa00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aa04:	add	fp, sp, #28
   1aa08:	sub	sp, sp, #4
   1aa0c:	mov	r4, r0
   1aa10:	mov	r0, #4
   1aa14:	add	r0, r0, r2, lsl #1
   1aa18:	ldr	r2, [r1, #8]
   1aa1c:	cmp	r0, r2
   1aa20:	bge	1aa40 <flatcc_json_printer_int64_vector_field@@Base+0x40>
   1aa24:	ldr	r2, [r1, #4]
   1aa28:	add	r0, r2, r0
   1aa2c:	ldrh	r0, [r0]
   1aa30:	cmp	r0, #0
   1aa34:	ldrne	r2, [r1]
   1aa38:	addsne	r8, r2, r0
   1aa3c:	bne	1aa48 <flatcc_json_printer_int64_vector_field@@Base+0x48>
   1aa40:	sub	sp, fp, #28
   1aa44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa48:	ldr	r0, [r1, #16]
   1aa4c:	ldr	r2, [fp, #8]
   1aa50:	add	r7, r0, #1
   1aa54:	cmp	r0, #0
   1aa58:	str	r7, [r1, #16]
   1aa5c:	ldrne	r0, [r4, #20]
   1aa60:	addne	r1, r0, #1
   1aa64:	strne	r1, [r4, #20]
   1aa68:	movne	r1, #44	; 0x2c
   1aa6c:	strbne	r1, [r0]
   1aa70:	mov	r1, r3
   1aa74:	ldr	r0, [r8]
   1aa78:	ldr	r7, [r8, r0]!
   1aa7c:	mov	r0, r4
   1aa80:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1aa84:	ldr	r1, [r4, #32]
   1aa88:	ldr	r0, [r4, #20]
   1aa8c:	cmp	r7, #0
   1aa90:	add	r1, r1, #1
   1aa94:	str	r1, [r4, #32]
   1aa98:	add	r1, r0, #1
   1aa9c:	str	r1, [r4, #20]
   1aaa0:	mov	r1, #91	; 0x5b
   1aaa4:	strb	r1, [r0]
   1aaa8:	beq	1ad24 <flatcc_json_printer_int64_vector_field@@Base+0x324>
   1aaac:	ldrb	r0, [r4, #25]
   1aab0:	ldr	r2, [r4, #20]
   1aab4:	cmp	r0, #0
   1aab8:	beq	1ab84 <flatcc_json_printer_int64_vector_field@@Base+0x184>
   1aabc:	add	r0, r2, #1
   1aac0:	str	r0, [r4, #20]
   1aac4:	mov	r0, #10
   1aac8:	strb	r0, [r2]
   1aacc:	ldr	r0, [r4, #20]
   1aad0:	ldrb	r2, [r4, #25]
   1aad4:	ldr	r3, [r4, #32]
   1aad8:	ldr	r1, [r4, #16]
   1aadc:	mla	r6, r3, r2, r0
   1aae0:	mul	r5, r3, r2
   1aae4:	cmp	r6, r1
   1aae8:	bls	1ab58 <flatcc_json_printer_int64_vector_field@@Base+0x158>
   1aaec:	cmp	r0, r1
   1aaf0:	bcc	1ab0c <flatcc_json_printer_int64_vector_field@@Base+0x10c>
   1aaf4:	ldr	r2, [r4, #44]	; 0x2c
   1aaf8:	mov	r0, r4
   1aafc:	mov	r1, #0
   1ab00:	blx	r2
   1ab04:	ldr	r1, [r4, #16]
   1ab08:	ldr	r0, [r4, #20]
   1ab0c:	sub	r6, r1, r0
   1ab10:	cmp	r6, r5
   1ab14:	bcs	1ab58 <flatcc_json_printer_int64_vector_field@@Base+0x158>
   1ab18:	mov	r1, #32
   1ab1c:	mov	r2, r6
   1ab20:	bl	12948 <memset@plt>
   1ab24:	ldr	r0, [r4, #20]
   1ab28:	ldr	r2, [r4, #44]	; 0x2c
   1ab2c:	mov	r1, #0
   1ab30:	add	r0, r0, r6
   1ab34:	str	r0, [r4, #20]
   1ab38:	mov	r0, r4
   1ab3c:	blx	r2
   1ab40:	ldr	r1, [r4, #16]
   1ab44:	ldr	r0, [r4, #20]
   1ab48:	sub	r5, r5, r6
   1ab4c:	sub	r6, r1, r0
   1ab50:	cmp	r5, r6
   1ab54:	bhi	1ab18 <flatcc_json_printer_int64_vector_field@@Base+0x118>
   1ab58:	mov	r1, #32
   1ab5c:	mov	r2, r5
   1ab60:	bl	12948 <memset@plt>
   1ab64:	ldr	r0, [r4, #20]
   1ab68:	add	r2, r0, r5
   1ab6c:	str	r2, [r4, #20]
   1ab70:	ldrd	r0, [r8, #4]
   1ab74:	lsr	r5, r1, #31
   1ab78:	cmn	r1, #1
   1ab7c:	bgt	1abc4 <flatcc_json_printer_int64_vector_field@@Base+0x1c4>
   1ab80:	b	1abb4 <flatcc_json_printer_int64_vector_field@@Base+0x1b4>
   1ab84:	ldr	r0, [r4, #16]
   1ab88:	cmp	r2, r0
   1ab8c:	bcc	1aba4 <flatcc_json_printer_int64_vector_field@@Base+0x1a4>
   1ab90:	ldr	r2, [r4, #44]	; 0x2c
   1ab94:	mov	r0, r4
   1ab98:	mov	r1, #0
   1ab9c:	blx	r2
   1aba0:	ldr	r2, [r4, #20]
   1aba4:	ldrd	r0, [r8, #4]
   1aba8:	lsr	r5, r1, #31
   1abac:	cmn	r1, #1
   1abb0:	bgt	1abc4 <flatcc_json_printer_int64_vector_field@@Base+0x1c4>
   1abb4:	mov	r3, #45	; 0x2d
   1abb8:	rsbs	r0, r0, #0
   1abbc:	strb	r3, [r2], #1
   1abc0:	rsc	r1, r1, #0
   1abc4:	bl	158b0 <flatcc_json_printer_uint64@@Base+0x30>
   1abc8:	ldr	r1, [r4, #20]
   1abcc:	add	r0, r0, r5
   1abd0:	subs	r9, r7, #1
   1abd4:	add	r0, r1, r0
   1abd8:	str	r0, [r4, #20]
   1abdc:	beq	1ad24 <flatcc_json_printer_int64_vector_field@@Base+0x324>
   1abe0:	ldr	r0, [r4, #20]
   1abe4:	add	r7, r8, #12
   1abe8:	mov	r8, #44	; 0x2c
   1abec:	mov	sl, #10
   1abf0:	add	r1, r0, #1
   1abf4:	str	r1, [r4, #20]
   1abf8:	strb	r8, [r0]
   1abfc:	ldrb	r0, [r4, #25]
   1ac00:	ldr	r2, [r4, #20]
   1ac04:	cmp	r0, #0
   1ac08:	beq	1acc0 <flatcc_json_printer_int64_vector_field@@Base+0x2c0>
   1ac0c:	add	r0, r2, #1
   1ac10:	str	r0, [r4, #20]
   1ac14:	strb	sl, [r2]
   1ac18:	ldr	r0, [r4, #20]
   1ac1c:	ldrb	r2, [r4, #25]
   1ac20:	ldr	r3, [r4, #32]
   1ac24:	ldr	r1, [r4, #16]
   1ac28:	mla	r6, r3, r2, r0
   1ac2c:	mul	r5, r3, r2
   1ac30:	cmp	r6, r1
   1ac34:	bls	1aca4 <flatcc_json_printer_int64_vector_field@@Base+0x2a4>
   1ac38:	cmp	r0, r1
   1ac3c:	bcc	1ac58 <flatcc_json_printer_int64_vector_field@@Base+0x258>
   1ac40:	ldr	r2, [r4, #44]	; 0x2c
   1ac44:	mov	r0, r4
   1ac48:	mov	r1, #0
   1ac4c:	blx	r2
   1ac50:	ldr	r1, [r4, #16]
   1ac54:	ldr	r0, [r4, #20]
   1ac58:	sub	r6, r1, r0
   1ac5c:	cmp	r6, r5
   1ac60:	bcs	1aca4 <flatcc_json_printer_int64_vector_field@@Base+0x2a4>
   1ac64:	mov	r1, #32
   1ac68:	mov	r2, r6
   1ac6c:	bl	12948 <memset@plt>
   1ac70:	ldr	r0, [r4, #20]
   1ac74:	ldr	r2, [r4, #44]	; 0x2c
   1ac78:	mov	r1, #0
   1ac7c:	add	r0, r0, r6
   1ac80:	str	r0, [r4, #20]
   1ac84:	mov	r0, r4
   1ac88:	blx	r2
   1ac8c:	ldr	r1, [r4, #16]
   1ac90:	ldr	r0, [r4, #20]
   1ac94:	sub	r5, r5, r6
   1ac98:	sub	r6, r1, r0
   1ac9c:	cmp	r5, r6
   1aca0:	bhi	1ac64 <flatcc_json_printer_int64_vector_field@@Base+0x264>
   1aca4:	mov	r1, #32
   1aca8:	mov	r2, r5
   1acac:	bl	12948 <memset@plt>
   1acb0:	ldr	r0, [r4, #20]
   1acb4:	add	r2, r0, r5
   1acb8:	str	r2, [r4, #20]
   1acbc:	b	1ace0 <flatcc_json_printer_int64_vector_field@@Base+0x2e0>
   1acc0:	ldr	r0, [r4, #16]
   1acc4:	cmp	r2, r0
   1acc8:	bcc	1ace0 <flatcc_json_printer_int64_vector_field@@Base+0x2e0>
   1accc:	ldr	r2, [r4, #44]	; 0x2c
   1acd0:	mov	r0, r4
   1acd4:	mov	r1, #0
   1acd8:	blx	r2
   1acdc:	ldr	r2, [r4, #20]
   1ace0:	ldrd	r0, [r7]
   1ace4:	sub	r9, r9, #1
   1ace8:	lsr	r5, r1, #31
   1acec:	cmn	r1, #1
   1acf0:	bgt	1ad04 <flatcc_json_printer_int64_vector_field@@Base+0x304>
   1acf4:	mov	r3, #45	; 0x2d
   1acf8:	rsbs	r0, r0, #0
   1acfc:	strb	r3, [r2], #1
   1ad00:	rsc	r1, r1, #0
   1ad04:	bl	158b0 <flatcc_json_printer_uint64@@Base+0x30>
   1ad08:	ldr	r1, [r4, #20]
   1ad0c:	add	r0, r0, r5
   1ad10:	add	r7, r7, #8
   1ad14:	cmp	r9, #0
   1ad18:	add	r0, r1, r0
   1ad1c:	str	r0, [r4, #20]
   1ad20:	bne	1abf0 <flatcc_json_printer_int64_vector_field@@Base+0x1f0>
   1ad24:	ldrb	r1, [r4, #25]
   1ad28:	ldr	r0, [r4, #20]
   1ad2c:	cmp	r1, #0
   1ad30:	beq	1adf0 <flatcc_json_printer_int64_vector_field@@Base+0x3f0>
   1ad34:	add	r1, r0, #1
   1ad38:	str	r1, [r4, #20]
   1ad3c:	mov	r1, #10
   1ad40:	strb	r1, [r0]
   1ad44:	ldr	r0, [r4, #32]
   1ad48:	sub	r2, r0, #1
   1ad4c:	str	r2, [r4, #32]
   1ad50:	ldrb	r3, [r4, #25]
   1ad54:	ldr	r0, [r4, #20]
   1ad58:	ldr	r1, [r4, #16]
   1ad5c:	mla	r7, r2, r3, r0
   1ad60:	mul	r5, r2, r3
   1ad64:	cmp	r7, r1
   1ad68:	bls	1add8 <flatcc_json_printer_int64_vector_field@@Base+0x3d8>
   1ad6c:	cmp	r0, r1
   1ad70:	bcc	1ad8c <flatcc_json_printer_int64_vector_field@@Base+0x38c>
   1ad74:	ldr	r2, [r4, #44]	; 0x2c
   1ad78:	mov	r0, r4
   1ad7c:	mov	r1, #0
   1ad80:	blx	r2
   1ad84:	ldr	r1, [r4, #16]
   1ad88:	ldr	r0, [r4, #20]
   1ad8c:	sub	r6, r1, r0
   1ad90:	cmp	r6, r5
   1ad94:	bcs	1add8 <flatcc_json_printer_int64_vector_field@@Base+0x3d8>
   1ad98:	mov	r1, #32
   1ad9c:	mov	r2, r6
   1ada0:	bl	12948 <memset@plt>
   1ada4:	ldr	r0, [r4, #20]
   1ada8:	ldr	r2, [r4, #44]	; 0x2c
   1adac:	mov	r1, #0
   1adb0:	add	r0, r0, r6
   1adb4:	str	r0, [r4, #20]
   1adb8:	mov	r0, r4
   1adbc:	blx	r2
   1adc0:	ldr	r1, [r4, #16]
   1adc4:	ldr	r0, [r4, #20]
   1adc8:	sub	r5, r5, r6
   1adcc:	sub	r6, r1, r0
   1add0:	cmp	r5, r6
   1add4:	bhi	1ad98 <flatcc_json_printer_int64_vector_field@@Base+0x398>
   1add8:	mov	r1, #32
   1addc:	mov	r2, r5
   1ade0:	bl	12948 <memset@plt>
   1ade4:	ldr	r0, [r4, #20]
   1ade8:	add	r0, r0, r5
   1adec:	str	r0, [r4, #20]
   1adf0:	add	r1, r0, #1
   1adf4:	str	r1, [r4, #20]
   1adf8:	mov	r1, #93	; 0x5d
   1adfc:	strb	r1, [r0]
   1ae00:	sub	sp, fp, #28
   1ae04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ae08 <flatcc_json_printer_bool_vector_field@@Base>:
   1ae08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ae0c:	add	fp, sp, #28
   1ae10:	sub	sp, sp, #4
   1ae14:	mov	r4, r0
   1ae18:	mov	r0, #4
   1ae1c:	add	r0, r0, r2, lsl #1
   1ae20:	ldr	r2, [r1, #8]
   1ae24:	cmp	r0, r2
   1ae28:	bge	1ae48 <flatcc_json_printer_bool_vector_field@@Base+0x40>
   1ae2c:	ldr	r2, [r1, #4]
   1ae30:	add	r0, r2, r0
   1ae34:	ldrh	r0, [r0]
   1ae38:	cmp	r0, #0
   1ae3c:	ldrne	r2, [r1]
   1ae40:	addsne	r8, r2, r0
   1ae44:	bne	1ae50 <flatcc_json_printer_bool_vector_field@@Base+0x48>
   1ae48:	sub	sp, fp, #28
   1ae4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae50:	ldr	r0, [r1, #16]
   1ae54:	ldr	r2, [fp, #8]
   1ae58:	add	r7, r0, #1
   1ae5c:	cmp	r0, #0
   1ae60:	str	r7, [r1, #16]
   1ae64:	ldrne	r0, [r4, #20]
   1ae68:	addne	r1, r0, #1
   1ae6c:	strne	r1, [r4, #20]
   1ae70:	movne	r1, #44	; 0x2c
   1ae74:	strbne	r1, [r0]
   1ae78:	mov	r1, r3
   1ae7c:	ldr	r0, [r8]
   1ae80:	ldr	r7, [r8, r0]!
   1ae84:	mov	r0, r4
   1ae88:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1ae8c:	ldr	r1, [r4, #32]
   1ae90:	ldr	r0, [r4, #20]
   1ae94:	cmp	r7, #0
   1ae98:	add	r1, r1, #1
   1ae9c:	str	r1, [r4, #32]
   1aea0:	add	r1, r0, #1
   1aea4:	str	r1, [r4, #20]
   1aea8:	mov	r1, #91	; 0x5b
   1aeac:	strb	r1, [r0]
   1aeb0:	beq	1b168 <flatcc_json_printer_bool_vector_field@@Base+0x360>
   1aeb4:	ldrb	r1, [r4, #25]
   1aeb8:	ldr	r0, [r4, #20]
   1aebc:	cmp	r1, #0
   1aec0:	beq	1af88 <flatcc_json_printer_bool_vector_field@@Base+0x180>
   1aec4:	add	r1, r0, #1
   1aec8:	str	r1, [r4, #20]
   1aecc:	mov	r1, #10
   1aed0:	strb	r1, [r0]
   1aed4:	ldr	r0, [r4, #20]
   1aed8:	ldrb	r2, [r4, #25]
   1aedc:	ldr	r3, [r4, #32]
   1aee0:	ldr	r1, [r4, #16]
   1aee4:	mla	r6, r3, r2, r0
   1aee8:	mul	r5, r3, r2
   1aeec:	cmp	r6, r1
   1aef0:	bls	1af60 <flatcc_json_printer_bool_vector_field@@Base+0x158>
   1aef4:	cmp	r0, r1
   1aef8:	bcc	1af14 <flatcc_json_printer_bool_vector_field@@Base+0x10c>
   1aefc:	ldr	r2, [r4, #44]	; 0x2c
   1af00:	mov	r0, r4
   1af04:	mov	r1, #0
   1af08:	blx	r2
   1af0c:	ldr	r1, [r4, #16]
   1af10:	ldr	r0, [r4, #20]
   1af14:	sub	r6, r1, r0
   1af18:	cmp	r6, r5
   1af1c:	bcs	1af60 <flatcc_json_printer_bool_vector_field@@Base+0x158>
   1af20:	mov	r1, #32
   1af24:	mov	r2, r6
   1af28:	bl	12948 <memset@plt>
   1af2c:	ldr	r0, [r4, #20]
   1af30:	ldr	r2, [r4, #44]	; 0x2c
   1af34:	mov	r1, #0
   1af38:	add	r0, r0, r6
   1af3c:	str	r0, [r4, #20]
   1af40:	mov	r0, r4
   1af44:	blx	r2
   1af48:	ldr	r1, [r4, #16]
   1af4c:	ldr	r0, [r4, #20]
   1af50:	sub	r5, r5, r6
   1af54:	sub	r6, r1, r0
   1af58:	cmp	r5, r6
   1af5c:	bhi	1af20 <flatcc_json_printer_bool_vector_field@@Base+0x118>
   1af60:	mov	r1, #32
   1af64:	mov	r2, r5
   1af68:	bl	12948 <memset@plt>
   1af6c:	ldr	r0, [r4, #20]
   1af70:	add	r0, r0, r5
   1af74:	str	r0, [r4, #20]
   1af78:	ldrb	r1, [r8, #4]
   1af7c:	cmp	r1, #0
   1af80:	bne	1afb4 <flatcc_json_printer_bool_vector_field@@Base+0x1ac>
   1af84:	b	1afd0 <flatcc_json_printer_bool_vector_field@@Base+0x1c8>
   1af88:	ldr	r1, [r4, #16]
   1af8c:	cmp	r0, r1
   1af90:	bcc	1afa8 <flatcc_json_printer_bool_vector_field@@Base+0x1a0>
   1af94:	ldr	r2, [r4, #44]	; 0x2c
   1af98:	mov	r0, r4
   1af9c:	mov	r1, #0
   1afa0:	blx	r2
   1afa4:	ldr	r0, [r4, #20]
   1afa8:	ldrb	r1, [r8, #4]
   1afac:	cmp	r1, #0
   1afb0:	beq	1afd0 <flatcc_json_printer_bool_vector_field@@Base+0x1c8>
   1afb4:	mov	r1, #0
   1afb8:	strb	r1, [r0, #4]
   1afbc:	movw	r1, #29300	; 0x7274
   1afc0:	movt	r1, #25973	; 0x6575
   1afc4:	str	r1, [r0]
   1afc8:	mov	r0, #4
   1afcc:	b	1afe8 <flatcc_json_printer_bool_vector_field@@Base+0x1e0>
   1afd0:	mov	r1, #101	; 0x65
   1afd4:	strh	r1, [r0, #4]
   1afd8:	movw	r1, #24934	; 0x6166
   1afdc:	movt	r1, #29548	; 0x736c
   1afe0:	str	r1, [r0]
   1afe4:	mov	r0, #5
   1afe8:	ldr	r1, [r4, #20]
   1afec:	subs	r9, r7, #1
   1aff0:	add	r0, r1, r0
   1aff4:	str	r0, [r4, #20]
   1aff8:	beq	1b168 <flatcc_json_printer_bool_vector_field@@Base+0x360>
   1affc:	ldr	r0, [r4, #20]
   1b000:	add	r7, r8, #5
   1b004:	mov	r8, #44	; 0x2c
   1b008:	mov	sl, #10
   1b00c:	add	r1, r0, #1
   1b010:	str	r1, [r4, #20]
   1b014:	strb	r8, [r0]
   1b018:	ldrb	r1, [r4, #25]
   1b01c:	ldr	r0, [r4, #20]
   1b020:	cmp	r1, #0
   1b024:	beq	1b0ec <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   1b028:	add	r1, r0, #1
   1b02c:	str	r1, [r4, #20]
   1b030:	strb	sl, [r0]
   1b034:	ldr	r0, [r4, #20]
   1b038:	ldrb	r2, [r4, #25]
   1b03c:	ldr	r3, [r4, #32]
   1b040:	ldr	r1, [r4, #16]
   1b044:	mla	r6, r3, r2, r0
   1b048:	mul	r5, r3, r2
   1b04c:	cmp	r6, r1
   1b050:	bls	1b0c0 <flatcc_json_printer_bool_vector_field@@Base+0x2b8>
   1b054:	cmp	r0, r1
   1b058:	bcc	1b074 <flatcc_json_printer_bool_vector_field@@Base+0x26c>
   1b05c:	ldr	r2, [r4, #44]	; 0x2c
   1b060:	mov	r0, r4
   1b064:	mov	r1, #0
   1b068:	blx	r2
   1b06c:	ldr	r1, [r4, #16]
   1b070:	ldr	r0, [r4, #20]
   1b074:	sub	r6, r1, r0
   1b078:	cmp	r6, r5
   1b07c:	bcs	1b0c0 <flatcc_json_printer_bool_vector_field@@Base+0x2b8>
   1b080:	mov	r1, #32
   1b084:	mov	r2, r6
   1b088:	bl	12948 <memset@plt>
   1b08c:	ldr	r0, [r4, #20]
   1b090:	ldr	r2, [r4, #44]	; 0x2c
   1b094:	mov	r1, #0
   1b098:	add	r0, r0, r6
   1b09c:	str	r0, [r4, #20]
   1b0a0:	mov	r0, r4
   1b0a4:	blx	r2
   1b0a8:	ldr	r1, [r4, #16]
   1b0ac:	ldr	r0, [r4, #20]
   1b0b0:	sub	r5, r5, r6
   1b0b4:	sub	r6, r1, r0
   1b0b8:	cmp	r5, r6
   1b0bc:	bhi	1b080 <flatcc_json_printer_bool_vector_field@@Base+0x278>
   1b0c0:	mov	r1, #32
   1b0c4:	mov	r2, r5
   1b0c8:	bl	12948 <memset@plt>
   1b0cc:	ldr	r0, [r4, #20]
   1b0d0:	add	r0, r0, r5
   1b0d4:	str	r0, [r4, #20]
   1b0d8:	ldrb	r1, [r7]
   1b0dc:	sub	r9, r9, #1
   1b0e0:	cmp	r1, #0
   1b0e4:	bne	1b11c <flatcc_json_printer_bool_vector_field@@Base+0x314>
   1b0e8:	b	1b138 <flatcc_json_printer_bool_vector_field@@Base+0x330>
   1b0ec:	ldr	r1, [r4, #16]
   1b0f0:	cmp	r0, r1
   1b0f4:	bcc	1b10c <flatcc_json_printer_bool_vector_field@@Base+0x304>
   1b0f8:	ldr	r2, [r4, #44]	; 0x2c
   1b0fc:	mov	r0, r4
   1b100:	mov	r1, #0
   1b104:	blx	r2
   1b108:	ldr	r0, [r4, #20]
   1b10c:	ldrb	r1, [r7]
   1b110:	sub	r9, r9, #1
   1b114:	cmp	r1, #0
   1b118:	beq	1b138 <flatcc_json_printer_bool_vector_field@@Base+0x330>
   1b11c:	mov	r1, #0
   1b120:	strb	r1, [r0, #4]
   1b124:	movw	r1, #29300	; 0x7274
   1b128:	movt	r1, #25973	; 0x6575
   1b12c:	str	r1, [r0]
   1b130:	mov	r0, #4
   1b134:	b	1b150 <flatcc_json_printer_bool_vector_field@@Base+0x348>
   1b138:	mov	r1, #101	; 0x65
   1b13c:	strh	r1, [r0, #4]
   1b140:	movw	r1, #24934	; 0x6166
   1b144:	movt	r1, #29548	; 0x736c
   1b148:	str	r1, [r0]
   1b14c:	mov	r0, #5
   1b150:	ldr	r1, [r4, #20]
   1b154:	add	r7, r7, #1
   1b158:	cmp	r9, #0
   1b15c:	add	r0, r1, r0
   1b160:	str	r0, [r4, #20]
   1b164:	bne	1b00c <flatcc_json_printer_bool_vector_field@@Base+0x204>
   1b168:	ldrb	r1, [r4, #25]
   1b16c:	ldr	r0, [r4, #20]
   1b170:	cmp	r1, #0
   1b174:	beq	1b234 <flatcc_json_printer_bool_vector_field@@Base+0x42c>
   1b178:	add	r1, r0, #1
   1b17c:	str	r1, [r4, #20]
   1b180:	mov	r1, #10
   1b184:	strb	r1, [r0]
   1b188:	ldr	r0, [r4, #32]
   1b18c:	sub	r2, r0, #1
   1b190:	str	r2, [r4, #32]
   1b194:	ldrb	r3, [r4, #25]
   1b198:	ldr	r0, [r4, #20]
   1b19c:	ldr	r1, [r4, #16]
   1b1a0:	mla	r7, r2, r3, r0
   1b1a4:	mul	r5, r2, r3
   1b1a8:	cmp	r7, r1
   1b1ac:	bls	1b21c <flatcc_json_printer_bool_vector_field@@Base+0x414>
   1b1b0:	cmp	r0, r1
   1b1b4:	bcc	1b1d0 <flatcc_json_printer_bool_vector_field@@Base+0x3c8>
   1b1b8:	ldr	r2, [r4, #44]	; 0x2c
   1b1bc:	mov	r0, r4
   1b1c0:	mov	r1, #0
   1b1c4:	blx	r2
   1b1c8:	ldr	r1, [r4, #16]
   1b1cc:	ldr	r0, [r4, #20]
   1b1d0:	sub	r6, r1, r0
   1b1d4:	cmp	r6, r5
   1b1d8:	bcs	1b21c <flatcc_json_printer_bool_vector_field@@Base+0x414>
   1b1dc:	mov	r1, #32
   1b1e0:	mov	r2, r6
   1b1e4:	bl	12948 <memset@plt>
   1b1e8:	ldr	r0, [r4, #20]
   1b1ec:	ldr	r2, [r4, #44]	; 0x2c
   1b1f0:	mov	r1, #0
   1b1f4:	add	r0, r0, r6
   1b1f8:	str	r0, [r4, #20]
   1b1fc:	mov	r0, r4
   1b200:	blx	r2
   1b204:	ldr	r1, [r4, #16]
   1b208:	ldr	r0, [r4, #20]
   1b20c:	sub	r5, r5, r6
   1b210:	sub	r6, r1, r0
   1b214:	cmp	r5, r6
   1b218:	bhi	1b1dc <flatcc_json_printer_bool_vector_field@@Base+0x3d4>
   1b21c:	mov	r1, #32
   1b220:	mov	r2, r5
   1b224:	bl	12948 <memset@plt>
   1b228:	ldr	r0, [r4, #20]
   1b22c:	add	r0, r0, r5
   1b230:	str	r0, [r4, #20]
   1b234:	add	r1, r0, #1
   1b238:	str	r1, [r4, #20]
   1b23c:	mov	r1, #93	; 0x5d
   1b240:	strb	r1, [r0]
   1b244:	sub	sp, fp, #28
   1b248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b24c <flatcc_json_printer_float_vector_field@@Base>:
   1b24c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b250:	add	fp, sp, #28
   1b254:	sub	sp, sp, #4
   1b258:	mov	r4, r0
   1b25c:	mov	r0, #4
   1b260:	add	r0, r0, r2, lsl #1
   1b264:	ldr	r2, [r1, #8]
   1b268:	cmp	r0, r2
   1b26c:	bge	1b28c <flatcc_json_printer_float_vector_field@@Base+0x40>
   1b270:	ldr	r2, [r1, #4]
   1b274:	add	r0, r2, r0
   1b278:	ldrh	r0, [r0]
   1b27c:	cmp	r0, #0
   1b280:	ldrne	r2, [r1]
   1b284:	addsne	r8, r2, r0
   1b288:	bne	1b294 <flatcc_json_printer_float_vector_field@@Base+0x48>
   1b28c:	sub	sp, fp, #28
   1b290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b294:	ldr	r0, [r1, #16]
   1b298:	ldr	r2, [fp, #8]
   1b29c:	add	r7, r0, #1
   1b2a0:	cmp	r0, #0
   1b2a4:	str	r7, [r1, #16]
   1b2a8:	ldrne	r0, [r4, #20]
   1b2ac:	addne	r1, r0, #1
   1b2b0:	strne	r1, [r4, #20]
   1b2b4:	movne	r1, #44	; 0x2c
   1b2b8:	strbne	r1, [r0]
   1b2bc:	mov	r1, r3
   1b2c0:	ldr	r0, [r8]
   1b2c4:	ldr	r7, [r8, r0]!
   1b2c8:	mov	r0, r4
   1b2cc:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1b2d0:	ldr	r1, [r4, #32]
   1b2d4:	ldr	r0, [r4, #20]
   1b2d8:	cmp	r7, #0
   1b2dc:	add	r1, r1, #1
   1b2e0:	str	r1, [r4, #32]
   1b2e4:	add	r1, r0, #1
   1b2e8:	str	r1, [r4, #20]
   1b2ec:	mov	r1, #91	; 0x5b
   1b2f0:	strb	r1, [r0]
   1b2f4:	beq	1b528 <flatcc_json_printer_float_vector_field@@Base+0x2dc>
   1b2f8:	ldrb	r1, [r4, #25]
   1b2fc:	ldr	r0, [r4, #20]
   1b300:	cmp	r1, #0
   1b304:	beq	1b3c0 <flatcc_json_printer_float_vector_field@@Base+0x174>
   1b308:	add	r1, r0, #1
   1b30c:	str	r1, [r4, #20]
   1b310:	mov	r1, #10
   1b314:	strb	r1, [r0]
   1b318:	ldr	r0, [r4, #20]
   1b31c:	ldrb	r2, [r4, #25]
   1b320:	ldr	r3, [r4, #32]
   1b324:	ldr	r1, [r4, #16]
   1b328:	mla	r6, r3, r2, r0
   1b32c:	mul	r5, r3, r2
   1b330:	cmp	r6, r1
   1b334:	bls	1b3a4 <flatcc_json_printer_float_vector_field@@Base+0x158>
   1b338:	cmp	r0, r1
   1b33c:	bcc	1b358 <flatcc_json_printer_float_vector_field@@Base+0x10c>
   1b340:	ldr	r2, [r4, #44]	; 0x2c
   1b344:	mov	r0, r4
   1b348:	mov	r1, #0
   1b34c:	blx	r2
   1b350:	ldr	r1, [r4, #16]
   1b354:	ldr	r0, [r4, #20]
   1b358:	sub	r6, r1, r0
   1b35c:	cmp	r6, r5
   1b360:	bcs	1b3a4 <flatcc_json_printer_float_vector_field@@Base+0x158>
   1b364:	mov	r1, #32
   1b368:	mov	r2, r6
   1b36c:	bl	12948 <memset@plt>
   1b370:	ldr	r0, [r4, #20]
   1b374:	ldr	r2, [r4, #44]	; 0x2c
   1b378:	mov	r1, #0
   1b37c:	add	r0, r0, r6
   1b380:	str	r0, [r4, #20]
   1b384:	mov	r0, r4
   1b388:	blx	r2
   1b38c:	ldr	r1, [r4, #16]
   1b390:	ldr	r0, [r4, #20]
   1b394:	sub	r5, r5, r6
   1b398:	sub	r6, r1, r0
   1b39c:	cmp	r5, r6
   1b3a0:	bhi	1b364 <flatcc_json_printer_float_vector_field@@Base+0x118>
   1b3a4:	mov	r1, #32
   1b3a8:	mov	r2, r5
   1b3ac:	bl	12948 <memset@plt>
   1b3b0:	ldr	r0, [r4, #20]
   1b3b4:	add	r0, r0, r5
   1b3b8:	str	r0, [r4, #20]
   1b3bc:	b	1b3e0 <flatcc_json_printer_float_vector_field@@Base+0x194>
   1b3c0:	ldr	r1, [r4, #16]
   1b3c4:	cmp	r0, r1
   1b3c8:	bcc	1b3e0 <flatcc_json_printer_float_vector_field@@Base+0x194>
   1b3cc:	ldr	r2, [r4, #44]	; 0x2c
   1b3d0:	mov	r0, r4
   1b3d4:	mov	r1, #0
   1b3d8:	blx	r2
   1b3dc:	ldr	r0, [r4, #20]
   1b3e0:	vldr	s0, [r8, #4]
   1b3e4:	vcvt.f64.f32	d0, s0
   1b3e8:	bl	13f48 <flatcc_json_printer_fmt_float@@Base+0x8>
   1b3ec:	ldr	r1, [r4, #20]
   1b3f0:	subs	r9, r7, #1
   1b3f4:	add	r0, r1, r0
   1b3f8:	str	r0, [r4, #20]
   1b3fc:	beq	1b528 <flatcc_json_printer_float_vector_field@@Base+0x2dc>
   1b400:	ldr	r0, [r4, #20]
   1b404:	add	r7, r8, #8
   1b408:	mov	r8, #44	; 0x2c
   1b40c:	mov	sl, #10
   1b410:	add	r1, r0, #1
   1b414:	sub	r9, r9, #1
   1b418:	str	r1, [r4, #20]
   1b41c:	strb	r8, [r0]
   1b420:	ldrb	r1, [r4, #25]
   1b424:	ldr	r0, [r4, #20]
   1b428:	cmp	r1, #0
   1b42c:	beq	1b4e4 <flatcc_json_printer_float_vector_field@@Base+0x298>
   1b430:	add	r1, r0, #1
   1b434:	str	r1, [r4, #20]
   1b438:	strb	sl, [r0]
   1b43c:	ldr	r0, [r4, #20]
   1b440:	ldrb	r2, [r4, #25]
   1b444:	ldr	r3, [r4, #32]
   1b448:	ldr	r1, [r4, #16]
   1b44c:	mla	r6, r3, r2, r0
   1b450:	mul	r5, r3, r2
   1b454:	cmp	r6, r1
   1b458:	bls	1b4c8 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   1b45c:	cmp	r0, r1
   1b460:	bcc	1b47c <flatcc_json_printer_float_vector_field@@Base+0x230>
   1b464:	ldr	r2, [r4, #44]	; 0x2c
   1b468:	mov	r0, r4
   1b46c:	mov	r1, #0
   1b470:	blx	r2
   1b474:	ldr	r1, [r4, #16]
   1b478:	ldr	r0, [r4, #20]
   1b47c:	sub	r6, r1, r0
   1b480:	cmp	r6, r5
   1b484:	bcs	1b4c8 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   1b488:	mov	r1, #32
   1b48c:	mov	r2, r6
   1b490:	bl	12948 <memset@plt>
   1b494:	ldr	r0, [r4, #20]
   1b498:	ldr	r2, [r4, #44]	; 0x2c
   1b49c:	mov	r1, #0
   1b4a0:	add	r0, r0, r6
   1b4a4:	str	r0, [r4, #20]
   1b4a8:	mov	r0, r4
   1b4ac:	blx	r2
   1b4b0:	ldr	r1, [r4, #16]
   1b4b4:	ldr	r0, [r4, #20]
   1b4b8:	sub	r5, r5, r6
   1b4bc:	sub	r6, r1, r0
   1b4c0:	cmp	r5, r6
   1b4c4:	bhi	1b488 <flatcc_json_printer_float_vector_field@@Base+0x23c>
   1b4c8:	mov	r1, #32
   1b4cc:	mov	r2, r5
   1b4d0:	bl	12948 <memset@plt>
   1b4d4:	ldr	r0, [r4, #20]
   1b4d8:	add	r0, r0, r5
   1b4dc:	str	r0, [r4, #20]
   1b4e0:	b	1b504 <flatcc_json_printer_float_vector_field@@Base+0x2b8>
   1b4e4:	ldr	r1, [r4, #16]
   1b4e8:	cmp	r0, r1
   1b4ec:	bcc	1b504 <flatcc_json_printer_float_vector_field@@Base+0x2b8>
   1b4f0:	ldr	r2, [r4, #44]	; 0x2c
   1b4f4:	mov	r0, r4
   1b4f8:	mov	r1, #0
   1b4fc:	blx	r2
   1b500:	ldr	r0, [r4, #20]
   1b504:	vldr	s0, [r7]
   1b508:	vcvt.f64.f32	d0, s0
   1b50c:	bl	13f48 <flatcc_json_printer_fmt_float@@Base+0x8>
   1b510:	ldr	r1, [r4, #20]
   1b514:	add	r7, r7, #4
   1b518:	cmp	r9, #0
   1b51c:	add	r0, r1, r0
   1b520:	str	r0, [r4, #20]
   1b524:	bne	1b410 <flatcc_json_printer_float_vector_field@@Base+0x1c4>
   1b528:	ldrb	r1, [r4, #25]
   1b52c:	ldr	r0, [r4, #20]
   1b530:	cmp	r1, #0
   1b534:	beq	1b5f4 <flatcc_json_printer_float_vector_field@@Base+0x3a8>
   1b538:	add	r1, r0, #1
   1b53c:	str	r1, [r4, #20]
   1b540:	mov	r1, #10
   1b544:	strb	r1, [r0]
   1b548:	ldr	r0, [r4, #32]
   1b54c:	sub	r2, r0, #1
   1b550:	str	r2, [r4, #32]
   1b554:	ldrb	r3, [r4, #25]
   1b558:	ldr	r0, [r4, #20]
   1b55c:	ldr	r1, [r4, #16]
   1b560:	mla	r7, r2, r3, r0
   1b564:	mul	r5, r2, r3
   1b568:	cmp	r7, r1
   1b56c:	bls	1b5dc <flatcc_json_printer_float_vector_field@@Base+0x390>
   1b570:	cmp	r0, r1
   1b574:	bcc	1b590 <flatcc_json_printer_float_vector_field@@Base+0x344>
   1b578:	ldr	r2, [r4, #44]	; 0x2c
   1b57c:	mov	r0, r4
   1b580:	mov	r1, #0
   1b584:	blx	r2
   1b588:	ldr	r1, [r4, #16]
   1b58c:	ldr	r0, [r4, #20]
   1b590:	sub	r6, r1, r0
   1b594:	cmp	r6, r5
   1b598:	bcs	1b5dc <flatcc_json_printer_float_vector_field@@Base+0x390>
   1b59c:	mov	r1, #32
   1b5a0:	mov	r2, r6
   1b5a4:	bl	12948 <memset@plt>
   1b5a8:	ldr	r0, [r4, #20]
   1b5ac:	ldr	r2, [r4, #44]	; 0x2c
   1b5b0:	mov	r1, #0
   1b5b4:	add	r0, r0, r6
   1b5b8:	str	r0, [r4, #20]
   1b5bc:	mov	r0, r4
   1b5c0:	blx	r2
   1b5c4:	ldr	r1, [r4, #16]
   1b5c8:	ldr	r0, [r4, #20]
   1b5cc:	sub	r5, r5, r6
   1b5d0:	sub	r6, r1, r0
   1b5d4:	cmp	r5, r6
   1b5d8:	bhi	1b59c <flatcc_json_printer_float_vector_field@@Base+0x350>
   1b5dc:	mov	r1, #32
   1b5e0:	mov	r2, r5
   1b5e4:	bl	12948 <memset@plt>
   1b5e8:	ldr	r0, [r4, #20]
   1b5ec:	add	r0, r0, r5
   1b5f0:	str	r0, [r4, #20]
   1b5f4:	add	r1, r0, #1
   1b5f8:	str	r1, [r4, #20]
   1b5fc:	mov	r1, #93	; 0x5d
   1b600:	strb	r1, [r0]
   1b604:	sub	sp, fp, #28
   1b608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b60c <flatcc_json_printer_double_vector_field@@Base>:
   1b60c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b610:	add	fp, sp, #28
   1b614:	sub	sp, sp, #4
   1b618:	mov	r4, r0
   1b61c:	mov	r0, #4
   1b620:	add	r0, r0, r2, lsl #1
   1b624:	ldr	r2, [r1, #8]
   1b628:	cmp	r0, r2
   1b62c:	bge	1b64c <flatcc_json_printer_double_vector_field@@Base+0x40>
   1b630:	ldr	r2, [r1, #4]
   1b634:	add	r0, r2, r0
   1b638:	ldrh	r0, [r0]
   1b63c:	cmp	r0, #0
   1b640:	ldrne	r2, [r1]
   1b644:	addsne	r8, r2, r0
   1b648:	bne	1b654 <flatcc_json_printer_double_vector_field@@Base+0x48>
   1b64c:	sub	sp, fp, #28
   1b650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b654:	ldr	r0, [r1, #16]
   1b658:	ldr	r2, [fp, #8]
   1b65c:	add	r7, r0, #1
   1b660:	cmp	r0, #0
   1b664:	str	r7, [r1, #16]
   1b668:	ldrne	r0, [r4, #20]
   1b66c:	addne	r1, r0, #1
   1b670:	strne	r1, [r4, #20]
   1b674:	movne	r1, #44	; 0x2c
   1b678:	strbne	r1, [r0]
   1b67c:	mov	r1, r3
   1b680:	ldr	r0, [r8]
   1b684:	ldr	r7, [r8, r0]!
   1b688:	mov	r0, r4
   1b68c:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1b690:	ldr	r1, [r4, #32]
   1b694:	ldr	r0, [r4, #20]
   1b698:	cmp	r7, #0
   1b69c:	add	r1, r1, #1
   1b6a0:	str	r1, [r4, #32]
   1b6a4:	add	r1, r0, #1
   1b6a8:	str	r1, [r4, #20]
   1b6ac:	mov	r1, #91	; 0x5b
   1b6b0:	strb	r1, [r0]
   1b6b4:	beq	1b8e0 <flatcc_json_printer_double_vector_field@@Base+0x2d4>
   1b6b8:	ldrb	r1, [r4, #25]
   1b6bc:	ldr	r0, [r4, #20]
   1b6c0:	cmp	r1, #0
   1b6c4:	beq	1b780 <flatcc_json_printer_double_vector_field@@Base+0x174>
   1b6c8:	add	r1, r0, #1
   1b6cc:	str	r1, [r4, #20]
   1b6d0:	mov	r1, #10
   1b6d4:	strb	r1, [r0]
   1b6d8:	ldr	r0, [r4, #20]
   1b6dc:	ldrb	r2, [r4, #25]
   1b6e0:	ldr	r3, [r4, #32]
   1b6e4:	ldr	r1, [r4, #16]
   1b6e8:	mla	r6, r3, r2, r0
   1b6ec:	mul	r5, r3, r2
   1b6f0:	cmp	r6, r1
   1b6f4:	bls	1b764 <flatcc_json_printer_double_vector_field@@Base+0x158>
   1b6f8:	cmp	r0, r1
   1b6fc:	bcc	1b718 <flatcc_json_printer_double_vector_field@@Base+0x10c>
   1b700:	ldr	r2, [r4, #44]	; 0x2c
   1b704:	mov	r0, r4
   1b708:	mov	r1, #0
   1b70c:	blx	r2
   1b710:	ldr	r1, [r4, #16]
   1b714:	ldr	r0, [r4, #20]
   1b718:	sub	r6, r1, r0
   1b71c:	cmp	r6, r5
   1b720:	bcs	1b764 <flatcc_json_printer_double_vector_field@@Base+0x158>
   1b724:	mov	r1, #32
   1b728:	mov	r2, r6
   1b72c:	bl	12948 <memset@plt>
   1b730:	ldr	r0, [r4, #20]
   1b734:	ldr	r2, [r4, #44]	; 0x2c
   1b738:	mov	r1, #0
   1b73c:	add	r0, r0, r6
   1b740:	str	r0, [r4, #20]
   1b744:	mov	r0, r4
   1b748:	blx	r2
   1b74c:	ldr	r1, [r4, #16]
   1b750:	ldr	r0, [r4, #20]
   1b754:	sub	r5, r5, r6
   1b758:	sub	r6, r1, r0
   1b75c:	cmp	r5, r6
   1b760:	bhi	1b724 <flatcc_json_printer_double_vector_field@@Base+0x118>
   1b764:	mov	r1, #32
   1b768:	mov	r2, r5
   1b76c:	bl	12948 <memset@plt>
   1b770:	ldr	r0, [r4, #20]
   1b774:	add	r0, r0, r5
   1b778:	str	r0, [r4, #20]
   1b77c:	b	1b7a0 <flatcc_json_printer_double_vector_field@@Base+0x194>
   1b780:	ldr	r1, [r4, #16]
   1b784:	cmp	r0, r1
   1b788:	bcc	1b7a0 <flatcc_json_printer_double_vector_field@@Base+0x194>
   1b78c:	ldr	r2, [r4, #44]	; 0x2c
   1b790:	mov	r0, r4
   1b794:	mov	r1, #0
   1b798:	blx	r2
   1b79c:	ldr	r0, [r4, #20]
   1b7a0:	vldr	d0, [r8, #4]
   1b7a4:	bl	13f48 <flatcc_json_printer_fmt_float@@Base+0x8>
   1b7a8:	ldr	r1, [r4, #20]
   1b7ac:	subs	r9, r7, #1
   1b7b0:	add	r0, r1, r0
   1b7b4:	str	r0, [r4, #20]
   1b7b8:	beq	1b8e0 <flatcc_json_printer_double_vector_field@@Base+0x2d4>
   1b7bc:	ldr	r0, [r4, #20]
   1b7c0:	add	r7, r8, #12
   1b7c4:	mov	r8, #44	; 0x2c
   1b7c8:	mov	sl, #10
   1b7cc:	add	r1, r0, #1
   1b7d0:	sub	r9, r9, #1
   1b7d4:	str	r1, [r4, #20]
   1b7d8:	strb	r8, [r0]
   1b7dc:	ldrb	r1, [r4, #25]
   1b7e0:	ldr	r0, [r4, #20]
   1b7e4:	cmp	r1, #0
   1b7e8:	beq	1b8a0 <flatcc_json_printer_double_vector_field@@Base+0x294>
   1b7ec:	add	r1, r0, #1
   1b7f0:	str	r1, [r4, #20]
   1b7f4:	strb	sl, [r0]
   1b7f8:	ldr	r0, [r4, #20]
   1b7fc:	ldrb	r2, [r4, #25]
   1b800:	ldr	r3, [r4, #32]
   1b804:	ldr	r1, [r4, #16]
   1b808:	mla	r6, r3, r2, r0
   1b80c:	mul	r5, r3, r2
   1b810:	cmp	r6, r1
   1b814:	bls	1b884 <flatcc_json_printer_double_vector_field@@Base+0x278>
   1b818:	cmp	r0, r1
   1b81c:	bcc	1b838 <flatcc_json_printer_double_vector_field@@Base+0x22c>
   1b820:	ldr	r2, [r4, #44]	; 0x2c
   1b824:	mov	r0, r4
   1b828:	mov	r1, #0
   1b82c:	blx	r2
   1b830:	ldr	r1, [r4, #16]
   1b834:	ldr	r0, [r4, #20]
   1b838:	sub	r6, r1, r0
   1b83c:	cmp	r6, r5
   1b840:	bcs	1b884 <flatcc_json_printer_double_vector_field@@Base+0x278>
   1b844:	mov	r1, #32
   1b848:	mov	r2, r6
   1b84c:	bl	12948 <memset@plt>
   1b850:	ldr	r0, [r4, #20]
   1b854:	ldr	r2, [r4, #44]	; 0x2c
   1b858:	mov	r1, #0
   1b85c:	add	r0, r0, r6
   1b860:	str	r0, [r4, #20]
   1b864:	mov	r0, r4
   1b868:	blx	r2
   1b86c:	ldr	r1, [r4, #16]
   1b870:	ldr	r0, [r4, #20]
   1b874:	sub	r5, r5, r6
   1b878:	sub	r6, r1, r0
   1b87c:	cmp	r5, r6
   1b880:	bhi	1b844 <flatcc_json_printer_double_vector_field@@Base+0x238>
   1b884:	mov	r1, #32
   1b888:	mov	r2, r5
   1b88c:	bl	12948 <memset@plt>
   1b890:	ldr	r0, [r4, #20]
   1b894:	add	r0, r0, r5
   1b898:	str	r0, [r4, #20]
   1b89c:	b	1b8c0 <flatcc_json_printer_double_vector_field@@Base+0x2b4>
   1b8a0:	ldr	r1, [r4, #16]
   1b8a4:	cmp	r0, r1
   1b8a8:	bcc	1b8c0 <flatcc_json_printer_double_vector_field@@Base+0x2b4>
   1b8ac:	ldr	r2, [r4, #44]	; 0x2c
   1b8b0:	mov	r0, r4
   1b8b4:	mov	r1, #0
   1b8b8:	blx	r2
   1b8bc:	ldr	r0, [r4, #20]
   1b8c0:	vldr	d0, [r7]
   1b8c4:	bl	13f48 <flatcc_json_printer_fmt_float@@Base+0x8>
   1b8c8:	ldr	r1, [r4, #20]
   1b8cc:	add	r7, r7, #8
   1b8d0:	cmp	r9, #0
   1b8d4:	add	r0, r1, r0
   1b8d8:	str	r0, [r4, #20]
   1b8dc:	bne	1b7cc <flatcc_json_printer_double_vector_field@@Base+0x1c0>
   1b8e0:	ldrb	r1, [r4, #25]
   1b8e4:	ldr	r0, [r4, #20]
   1b8e8:	cmp	r1, #0
   1b8ec:	beq	1b9ac <flatcc_json_printer_double_vector_field@@Base+0x3a0>
   1b8f0:	add	r1, r0, #1
   1b8f4:	str	r1, [r4, #20]
   1b8f8:	mov	r1, #10
   1b8fc:	strb	r1, [r0]
   1b900:	ldr	r0, [r4, #32]
   1b904:	sub	r2, r0, #1
   1b908:	str	r2, [r4, #32]
   1b90c:	ldrb	r3, [r4, #25]
   1b910:	ldr	r0, [r4, #20]
   1b914:	ldr	r1, [r4, #16]
   1b918:	mla	r7, r2, r3, r0
   1b91c:	mul	r5, r2, r3
   1b920:	cmp	r7, r1
   1b924:	bls	1b994 <flatcc_json_printer_double_vector_field@@Base+0x388>
   1b928:	cmp	r0, r1
   1b92c:	bcc	1b948 <flatcc_json_printer_double_vector_field@@Base+0x33c>
   1b930:	ldr	r2, [r4, #44]	; 0x2c
   1b934:	mov	r0, r4
   1b938:	mov	r1, #0
   1b93c:	blx	r2
   1b940:	ldr	r1, [r4, #16]
   1b944:	ldr	r0, [r4, #20]
   1b948:	sub	r6, r1, r0
   1b94c:	cmp	r6, r5
   1b950:	bcs	1b994 <flatcc_json_printer_double_vector_field@@Base+0x388>
   1b954:	mov	r1, #32
   1b958:	mov	r2, r6
   1b95c:	bl	12948 <memset@plt>
   1b960:	ldr	r0, [r4, #20]
   1b964:	ldr	r2, [r4, #44]	; 0x2c
   1b968:	mov	r1, #0
   1b96c:	add	r0, r0, r6
   1b970:	str	r0, [r4, #20]
   1b974:	mov	r0, r4
   1b978:	blx	r2
   1b97c:	ldr	r1, [r4, #16]
   1b980:	ldr	r0, [r4, #20]
   1b984:	sub	r5, r5, r6
   1b988:	sub	r6, r1, r0
   1b98c:	cmp	r5, r6
   1b990:	bhi	1b954 <flatcc_json_printer_double_vector_field@@Base+0x348>
   1b994:	mov	r1, #32
   1b998:	mov	r2, r5
   1b99c:	bl	12948 <memset@plt>
   1b9a0:	ldr	r0, [r4, #20]
   1b9a4:	add	r0, r0, r5
   1b9a8:	str	r0, [r4, #20]
   1b9ac:	add	r1, r0, #1
   1b9b0:	str	r1, [r4, #20]
   1b9b4:	mov	r1, #93	; 0x5d
   1b9b8:	strb	r1, [r0]
   1b9bc:	sub	sp, fp, #28
   1b9c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b9c4 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   1b9c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b9c8:	add	fp, sp, #28
   1b9cc:	sub	sp, sp, #4
   1b9d0:	mov	r4, r0
   1b9d4:	ldrb	r0, [r0, #27]
   1b9d8:	cmp	r0, #0
   1b9dc:	beq	1b9f0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   1b9e0:	mov	r0, r4
   1b9e4:	sub	sp, fp, #28
   1b9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b9ec:	b	187a8 <flatcc_json_printer_utype_vector_field@@Base>
   1b9f0:	mov	r0, #4
   1b9f4:	add	r0, r0, r2, lsl #1
   1b9f8:	ldr	r2, [r1, #8]
   1b9fc:	cmp	r0, r2
   1ba00:	bge	1ba20 <flatcc_json_printer_utype_enum_vector_field@@Base+0x5c>
   1ba04:	ldr	r2, [r1, #4]
   1ba08:	add	r0, r2, r0
   1ba0c:	ldrh	r0, [r0]
   1ba10:	cmp	r0, #0
   1ba14:	ldrne	r2, [r1]
   1ba18:	addsne	r8, r2, r0
   1ba1c:	bne	1ba28 <flatcc_json_printer_utype_enum_vector_field@@Base+0x64>
   1ba20:	sub	sp, fp, #28
   1ba24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ba28:	ldr	r0, [r1, #16]
   1ba2c:	ldr	sl, [fp, #12]
   1ba30:	ldr	r2, [fp, #8]
   1ba34:	add	r7, r0, #1
   1ba38:	cmp	r0, #0
   1ba3c:	str	r7, [r1, #16]
   1ba40:	ldrne	r0, [r4, #20]
   1ba44:	addne	r1, r0, #1
   1ba48:	strne	r1, [r4, #20]
   1ba4c:	movne	r1, #44	; 0x2c
   1ba50:	strbne	r1, [r0]
   1ba54:	mov	r1, r3
   1ba58:	ldr	r0, [r8]
   1ba5c:	ldr	r9, [r8, r0]!
   1ba60:	mov	r0, r4
   1ba64:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1ba68:	ldr	r1, [r4, #32]
   1ba6c:	ldr	r0, [r4, #20]
   1ba70:	cmp	r9, #0
   1ba74:	add	r1, r1, #1
   1ba78:	str	r1, [r4, #32]
   1ba7c:	add	r1, r0, #1
   1ba80:	str	r1, [r4, #20]
   1ba84:	mov	r1, #91	; 0x5b
   1ba88:	strb	r1, [r0]
   1ba8c:	beq	1bc9c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d8>
   1ba90:	ldrb	r1, [r4, #25]
   1ba94:	ldr	r0, [r4, #20]
   1ba98:	cmp	r1, #0
   1ba9c:	beq	1bb58 <flatcc_json_printer_utype_enum_vector_field@@Base+0x194>
   1baa0:	add	r1, r0, #1
   1baa4:	str	r1, [r4, #20]
   1baa8:	mov	r1, #10
   1baac:	strb	r1, [r0]
   1bab0:	ldr	r0, [r4, #20]
   1bab4:	ldrb	r2, [r4, #25]
   1bab8:	ldr	r3, [r4, #32]
   1babc:	ldr	r1, [r4, #16]
   1bac0:	mla	r7, r3, r2, r0
   1bac4:	mul	r5, r3, r2
   1bac8:	cmp	r7, r1
   1bacc:	bls	1bb3c <flatcc_json_printer_utype_enum_vector_field@@Base+0x178>
   1bad0:	cmp	r0, r1
   1bad4:	bcc	1baf0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x12c>
   1bad8:	ldr	r2, [r4, #44]	; 0x2c
   1badc:	mov	r0, r4
   1bae0:	mov	r1, #0
   1bae4:	blx	r2
   1bae8:	ldr	r1, [r4, #16]
   1baec:	ldr	r0, [r4, #20]
   1baf0:	sub	r6, r1, r0
   1baf4:	cmp	r6, r5
   1baf8:	bcs	1bb3c <flatcc_json_printer_utype_enum_vector_field@@Base+0x178>
   1bafc:	mov	r1, #32
   1bb00:	mov	r2, r6
   1bb04:	bl	12948 <memset@plt>
   1bb08:	ldr	r0, [r4, #20]
   1bb0c:	ldr	r2, [r4, #44]	; 0x2c
   1bb10:	mov	r1, #0
   1bb14:	add	r0, r0, r6
   1bb18:	str	r0, [r4, #20]
   1bb1c:	mov	r0, r4
   1bb20:	blx	r2
   1bb24:	ldr	r1, [r4, #16]
   1bb28:	ldr	r0, [r4, #20]
   1bb2c:	sub	r5, r5, r6
   1bb30:	sub	r6, r1, r0
   1bb34:	cmp	r5, r6
   1bb38:	bhi	1bafc <flatcc_json_printer_utype_enum_vector_field@@Base+0x138>
   1bb3c:	mov	r1, #32
   1bb40:	mov	r2, r5
   1bb44:	bl	12948 <memset@plt>
   1bb48:	ldr	r0, [r4, #20]
   1bb4c:	add	r0, r0, r5
   1bb50:	str	r0, [r4, #20]
   1bb54:	b	1bb74 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   1bb58:	ldr	r1, [r4, #16]
   1bb5c:	cmp	r0, r1
   1bb60:	bcc	1bb74 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   1bb64:	ldr	r2, [r4, #44]	; 0x2c
   1bb68:	mov	r0, r4
   1bb6c:	mov	r1, #0
   1bb70:	blx	r2
   1bb74:	ldrb	r1, [r8, #4]
   1bb78:	mov	r0, r4
   1bb7c:	blx	sl
   1bb80:	subs	r9, r9, #1
   1bb84:	beq	1bc9c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d8>
   1bb88:	add	r7, r8, #5
   1bb8c:	mov	r8, #44	; 0x2c
   1bb90:	ldr	r0, [r4, #20]
   1bb94:	sub	r9, r9, #1
   1bb98:	add	r1, r0, #1
   1bb9c:	str	r1, [r4, #20]
   1bba0:	strb	r8, [r0]
   1bba4:	ldrb	r1, [r4, #25]
   1bba8:	ldr	r0, [r4, #20]
   1bbac:	cmp	r1, #0
   1bbb0:	beq	1bc6c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a8>
   1bbb4:	add	r1, r0, #1
   1bbb8:	str	r1, [r4, #20]
   1bbbc:	mov	r1, #10
   1bbc0:	strb	r1, [r0]
   1bbc4:	ldr	r0, [r4, #20]
   1bbc8:	ldrb	r2, [r4, #25]
   1bbcc:	ldr	r3, [r4, #32]
   1bbd0:	ldr	r1, [r4, #16]
   1bbd4:	mla	r6, r3, r2, r0
   1bbd8:	mul	r5, r3, r2
   1bbdc:	cmp	r6, r1
   1bbe0:	bls	1bc50 <flatcc_json_printer_utype_enum_vector_field@@Base+0x28c>
   1bbe4:	cmp	r0, r1
   1bbe8:	bcc	1bc04 <flatcc_json_printer_utype_enum_vector_field@@Base+0x240>
   1bbec:	ldr	r2, [r4, #44]	; 0x2c
   1bbf0:	mov	r0, r4
   1bbf4:	mov	r1, #0
   1bbf8:	blx	r2
   1bbfc:	ldr	r1, [r4, #16]
   1bc00:	ldr	r0, [r4, #20]
   1bc04:	sub	r6, r1, r0
   1bc08:	cmp	r6, r5
   1bc0c:	bcs	1bc50 <flatcc_json_printer_utype_enum_vector_field@@Base+0x28c>
   1bc10:	mov	r1, #32
   1bc14:	mov	r2, r6
   1bc18:	bl	12948 <memset@plt>
   1bc1c:	ldr	r0, [r4, #20]
   1bc20:	ldr	r2, [r4, #44]	; 0x2c
   1bc24:	mov	r1, #0
   1bc28:	add	r0, r0, r6
   1bc2c:	str	r0, [r4, #20]
   1bc30:	mov	r0, r4
   1bc34:	blx	r2
   1bc38:	ldr	r1, [r4, #16]
   1bc3c:	ldr	r0, [r4, #20]
   1bc40:	sub	r5, r5, r6
   1bc44:	sub	r6, r1, r0
   1bc48:	cmp	r5, r6
   1bc4c:	bhi	1bc10 <flatcc_json_printer_utype_enum_vector_field@@Base+0x24c>
   1bc50:	mov	r1, #32
   1bc54:	mov	r2, r5
   1bc58:	bl	12948 <memset@plt>
   1bc5c:	ldr	r0, [r4, #20]
   1bc60:	add	r0, r0, r5
   1bc64:	str	r0, [r4, #20]
   1bc68:	b	1bc88 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   1bc6c:	ldr	r1, [r4, #16]
   1bc70:	cmp	r0, r1
   1bc74:	bcc	1bc88 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   1bc78:	ldr	r2, [r4, #44]	; 0x2c
   1bc7c:	mov	r0, r4
   1bc80:	mov	r1, #0
   1bc84:	blx	r2
   1bc88:	ldrb	r1, [r7], #1
   1bc8c:	mov	r0, r4
   1bc90:	blx	sl
   1bc94:	cmp	r9, #0
   1bc98:	bne	1bb90 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1cc>
   1bc9c:	ldrb	r1, [r4, #25]
   1bca0:	ldr	r0, [r4, #20]
   1bca4:	cmp	r1, #0
   1bca8:	beq	1bd68 <flatcc_json_printer_utype_enum_vector_field@@Base+0x3a4>
   1bcac:	add	r1, r0, #1
   1bcb0:	str	r1, [r4, #20]
   1bcb4:	mov	r1, #10
   1bcb8:	strb	r1, [r0]
   1bcbc:	ldr	r0, [r4, #32]
   1bcc0:	sub	r2, r0, #1
   1bcc4:	str	r2, [r4, #32]
   1bcc8:	ldrb	r3, [r4, #25]
   1bccc:	ldr	r0, [r4, #20]
   1bcd0:	ldr	r1, [r4, #16]
   1bcd4:	mla	r7, r2, r3, r0
   1bcd8:	mul	r5, r2, r3
   1bcdc:	cmp	r7, r1
   1bce0:	bls	1bd50 <flatcc_json_printer_utype_enum_vector_field@@Base+0x38c>
   1bce4:	cmp	r0, r1
   1bce8:	bcc	1bd04 <flatcc_json_printer_utype_enum_vector_field@@Base+0x340>
   1bcec:	ldr	r2, [r4, #44]	; 0x2c
   1bcf0:	mov	r0, r4
   1bcf4:	mov	r1, #0
   1bcf8:	blx	r2
   1bcfc:	ldr	r1, [r4, #16]
   1bd00:	ldr	r0, [r4, #20]
   1bd04:	sub	r6, r1, r0
   1bd08:	cmp	r6, r5
   1bd0c:	bcs	1bd50 <flatcc_json_printer_utype_enum_vector_field@@Base+0x38c>
   1bd10:	mov	r1, #32
   1bd14:	mov	r2, r6
   1bd18:	bl	12948 <memset@plt>
   1bd1c:	ldr	r0, [r4, #20]
   1bd20:	ldr	r2, [r4, #44]	; 0x2c
   1bd24:	mov	r1, #0
   1bd28:	add	r0, r0, r6
   1bd2c:	str	r0, [r4, #20]
   1bd30:	mov	r0, r4
   1bd34:	blx	r2
   1bd38:	ldr	r1, [r4, #16]
   1bd3c:	ldr	r0, [r4, #20]
   1bd40:	sub	r5, r5, r6
   1bd44:	sub	r6, r1, r0
   1bd48:	cmp	r5, r6
   1bd4c:	bhi	1bd10 <flatcc_json_printer_utype_enum_vector_field@@Base+0x34c>
   1bd50:	mov	r1, #32
   1bd54:	mov	r2, r5
   1bd58:	bl	12948 <memset@plt>
   1bd5c:	ldr	r0, [r4, #20]
   1bd60:	add	r0, r0, r5
   1bd64:	str	r0, [r4, #20]
   1bd68:	add	r1, r0, #1
   1bd6c:	str	r1, [r4, #20]
   1bd70:	mov	r1, #93	; 0x5d
   1bd74:	strb	r1, [r0]
   1bd78:	sub	sp, fp, #28
   1bd7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001bd80 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   1bd80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd84:	add	fp, sp, #28
   1bd88:	sub	sp, sp, #4
   1bd8c:	mov	r4, r0
   1bd90:	ldrb	r0, [r0, #27]
   1bd94:	cmp	r0, #0
   1bd98:	beq	1bdac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   1bd9c:	mov	r0, r4
   1bda0:	sub	sp, fp, #28
   1bda4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bda8:	b	18cb8 <flatcc_json_printer_uint8_vector_field@@Base>
   1bdac:	mov	r0, #4
   1bdb0:	add	r0, r0, r2, lsl #1
   1bdb4:	ldr	r2, [r1, #8]
   1bdb8:	cmp	r0, r2
   1bdbc:	bge	1bddc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x5c>
   1bdc0:	ldr	r2, [r1, #4]
   1bdc4:	add	r0, r2, r0
   1bdc8:	ldrh	r0, [r0]
   1bdcc:	cmp	r0, #0
   1bdd0:	ldrne	r2, [r1]
   1bdd4:	addsne	r8, r2, r0
   1bdd8:	bne	1bde4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x64>
   1bddc:	sub	sp, fp, #28
   1bde0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bde4:	ldr	r0, [r1, #16]
   1bde8:	ldr	sl, [fp, #12]
   1bdec:	ldr	r2, [fp, #8]
   1bdf0:	add	r7, r0, #1
   1bdf4:	cmp	r0, #0
   1bdf8:	str	r7, [r1, #16]
   1bdfc:	ldrne	r0, [r4, #20]
   1be00:	addne	r1, r0, #1
   1be04:	strne	r1, [r4, #20]
   1be08:	movne	r1, #44	; 0x2c
   1be0c:	strbne	r1, [r0]
   1be10:	mov	r1, r3
   1be14:	ldr	r0, [r8]
   1be18:	ldr	r9, [r8, r0]!
   1be1c:	mov	r0, r4
   1be20:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1be24:	ldr	r1, [r4, #32]
   1be28:	ldr	r0, [r4, #20]
   1be2c:	cmp	r9, #0
   1be30:	add	r1, r1, #1
   1be34:	str	r1, [r4, #32]
   1be38:	add	r1, r0, #1
   1be3c:	str	r1, [r4, #20]
   1be40:	mov	r1, #91	; 0x5b
   1be44:	strb	r1, [r0]
   1be48:	beq	1c058 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d8>
   1be4c:	ldrb	r1, [r4, #25]
   1be50:	ldr	r0, [r4, #20]
   1be54:	cmp	r1, #0
   1be58:	beq	1bf14 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x194>
   1be5c:	add	r1, r0, #1
   1be60:	str	r1, [r4, #20]
   1be64:	mov	r1, #10
   1be68:	strb	r1, [r0]
   1be6c:	ldr	r0, [r4, #20]
   1be70:	ldrb	r2, [r4, #25]
   1be74:	ldr	r3, [r4, #32]
   1be78:	ldr	r1, [r4, #16]
   1be7c:	mla	r7, r3, r2, r0
   1be80:	mul	r5, r3, r2
   1be84:	cmp	r7, r1
   1be88:	bls	1bef8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x178>
   1be8c:	cmp	r0, r1
   1be90:	bcc	1beac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x12c>
   1be94:	ldr	r2, [r4, #44]	; 0x2c
   1be98:	mov	r0, r4
   1be9c:	mov	r1, #0
   1bea0:	blx	r2
   1bea4:	ldr	r1, [r4, #16]
   1bea8:	ldr	r0, [r4, #20]
   1beac:	sub	r6, r1, r0
   1beb0:	cmp	r6, r5
   1beb4:	bcs	1bef8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x178>
   1beb8:	mov	r1, #32
   1bebc:	mov	r2, r6
   1bec0:	bl	12948 <memset@plt>
   1bec4:	ldr	r0, [r4, #20]
   1bec8:	ldr	r2, [r4, #44]	; 0x2c
   1becc:	mov	r1, #0
   1bed0:	add	r0, r0, r6
   1bed4:	str	r0, [r4, #20]
   1bed8:	mov	r0, r4
   1bedc:	blx	r2
   1bee0:	ldr	r1, [r4, #16]
   1bee4:	ldr	r0, [r4, #20]
   1bee8:	sub	r5, r5, r6
   1beec:	sub	r6, r1, r0
   1bef0:	cmp	r5, r6
   1bef4:	bhi	1beb8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x138>
   1bef8:	mov	r1, #32
   1befc:	mov	r2, r5
   1bf00:	bl	12948 <memset@plt>
   1bf04:	ldr	r0, [r4, #20]
   1bf08:	add	r0, r0, r5
   1bf0c:	str	r0, [r4, #20]
   1bf10:	b	1bf30 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   1bf14:	ldr	r1, [r4, #16]
   1bf18:	cmp	r0, r1
   1bf1c:	bcc	1bf30 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   1bf20:	ldr	r2, [r4, #44]	; 0x2c
   1bf24:	mov	r0, r4
   1bf28:	mov	r1, #0
   1bf2c:	blx	r2
   1bf30:	ldrb	r1, [r8, #4]
   1bf34:	mov	r0, r4
   1bf38:	blx	sl
   1bf3c:	subs	r9, r9, #1
   1bf40:	beq	1c058 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d8>
   1bf44:	add	r7, r8, #5
   1bf48:	mov	r8, #44	; 0x2c
   1bf4c:	ldr	r0, [r4, #20]
   1bf50:	sub	r9, r9, #1
   1bf54:	add	r1, r0, #1
   1bf58:	str	r1, [r4, #20]
   1bf5c:	strb	r8, [r0]
   1bf60:	ldrb	r1, [r4, #25]
   1bf64:	ldr	r0, [r4, #20]
   1bf68:	cmp	r1, #0
   1bf6c:	beq	1c028 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a8>
   1bf70:	add	r1, r0, #1
   1bf74:	str	r1, [r4, #20]
   1bf78:	mov	r1, #10
   1bf7c:	strb	r1, [r0]
   1bf80:	ldr	r0, [r4, #20]
   1bf84:	ldrb	r2, [r4, #25]
   1bf88:	ldr	r3, [r4, #32]
   1bf8c:	ldr	r1, [r4, #16]
   1bf90:	mla	r6, r3, r2, r0
   1bf94:	mul	r5, r3, r2
   1bf98:	cmp	r6, r1
   1bf9c:	bls	1c00c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   1bfa0:	cmp	r0, r1
   1bfa4:	bcc	1bfc0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x240>
   1bfa8:	ldr	r2, [r4, #44]	; 0x2c
   1bfac:	mov	r0, r4
   1bfb0:	mov	r1, #0
   1bfb4:	blx	r2
   1bfb8:	ldr	r1, [r4, #16]
   1bfbc:	ldr	r0, [r4, #20]
   1bfc0:	sub	r6, r1, r0
   1bfc4:	cmp	r6, r5
   1bfc8:	bcs	1c00c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   1bfcc:	mov	r1, #32
   1bfd0:	mov	r2, r6
   1bfd4:	bl	12948 <memset@plt>
   1bfd8:	ldr	r0, [r4, #20]
   1bfdc:	ldr	r2, [r4, #44]	; 0x2c
   1bfe0:	mov	r1, #0
   1bfe4:	add	r0, r0, r6
   1bfe8:	str	r0, [r4, #20]
   1bfec:	mov	r0, r4
   1bff0:	blx	r2
   1bff4:	ldr	r1, [r4, #16]
   1bff8:	ldr	r0, [r4, #20]
   1bffc:	sub	r5, r5, r6
   1c000:	sub	r6, r1, r0
   1c004:	cmp	r5, r6
   1c008:	bhi	1bfcc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x24c>
   1c00c:	mov	r1, #32
   1c010:	mov	r2, r5
   1c014:	bl	12948 <memset@plt>
   1c018:	ldr	r0, [r4, #20]
   1c01c:	add	r0, r0, r5
   1c020:	str	r0, [r4, #20]
   1c024:	b	1c044 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   1c028:	ldr	r1, [r4, #16]
   1c02c:	cmp	r0, r1
   1c030:	bcc	1c044 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   1c034:	ldr	r2, [r4, #44]	; 0x2c
   1c038:	mov	r0, r4
   1c03c:	mov	r1, #0
   1c040:	blx	r2
   1c044:	ldrb	r1, [r7], #1
   1c048:	mov	r0, r4
   1c04c:	blx	sl
   1c050:	cmp	r9, #0
   1c054:	bne	1bf4c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1cc>
   1c058:	ldrb	r1, [r4, #25]
   1c05c:	ldr	r0, [r4, #20]
   1c060:	cmp	r1, #0
   1c064:	beq	1c124 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3a4>
   1c068:	add	r1, r0, #1
   1c06c:	str	r1, [r4, #20]
   1c070:	mov	r1, #10
   1c074:	strb	r1, [r0]
   1c078:	ldr	r0, [r4, #32]
   1c07c:	sub	r2, r0, #1
   1c080:	str	r2, [r4, #32]
   1c084:	ldrb	r3, [r4, #25]
   1c088:	ldr	r0, [r4, #20]
   1c08c:	ldr	r1, [r4, #16]
   1c090:	mla	r7, r2, r3, r0
   1c094:	mul	r5, r2, r3
   1c098:	cmp	r7, r1
   1c09c:	bls	1c10c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38c>
   1c0a0:	cmp	r0, r1
   1c0a4:	bcc	1c0c0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x340>
   1c0a8:	ldr	r2, [r4, #44]	; 0x2c
   1c0ac:	mov	r0, r4
   1c0b0:	mov	r1, #0
   1c0b4:	blx	r2
   1c0b8:	ldr	r1, [r4, #16]
   1c0bc:	ldr	r0, [r4, #20]
   1c0c0:	sub	r6, r1, r0
   1c0c4:	cmp	r6, r5
   1c0c8:	bcs	1c10c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38c>
   1c0cc:	mov	r1, #32
   1c0d0:	mov	r2, r6
   1c0d4:	bl	12948 <memset@plt>
   1c0d8:	ldr	r0, [r4, #20]
   1c0dc:	ldr	r2, [r4, #44]	; 0x2c
   1c0e0:	mov	r1, #0
   1c0e4:	add	r0, r0, r6
   1c0e8:	str	r0, [r4, #20]
   1c0ec:	mov	r0, r4
   1c0f0:	blx	r2
   1c0f4:	ldr	r1, [r4, #16]
   1c0f8:	ldr	r0, [r4, #20]
   1c0fc:	sub	r5, r5, r6
   1c100:	sub	r6, r1, r0
   1c104:	cmp	r5, r6
   1c108:	bhi	1c0cc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x34c>
   1c10c:	mov	r1, #32
   1c110:	mov	r2, r5
   1c114:	bl	12948 <memset@plt>
   1c118:	ldr	r0, [r4, #20]
   1c11c:	add	r0, r0, r5
   1c120:	str	r0, [r4, #20]
   1c124:	add	r1, r0, #1
   1c128:	str	r1, [r4, #20]
   1c12c:	mov	r1, #93	; 0x5d
   1c130:	strb	r1, [r0]
   1c134:	sub	sp, fp, #28
   1c138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c13c <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   1c13c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c140:	add	fp, sp, #28
   1c144:	sub	sp, sp, #4
   1c148:	mov	r4, r0
   1c14c:	ldrb	r0, [r0, #27]
   1c150:	cmp	r0, #0
   1c154:	beq	1c168 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   1c158:	mov	r0, r4
   1c15c:	sub	sp, fp, #28
   1c160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c164:	b	191c8 <flatcc_json_printer_uint16_vector_field@@Base>
   1c168:	mov	r0, #4
   1c16c:	add	r0, r0, r2, lsl #1
   1c170:	ldr	r2, [r1, #8]
   1c174:	cmp	r0, r2
   1c178:	bge	1c198 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x5c>
   1c17c:	ldr	r2, [r1, #4]
   1c180:	add	r0, r2, r0
   1c184:	ldrh	r0, [r0]
   1c188:	cmp	r0, #0
   1c18c:	ldrne	r2, [r1]
   1c190:	addsne	r8, r2, r0
   1c194:	bne	1c1a0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x64>
   1c198:	sub	sp, fp, #28
   1c19c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1a0:	ldr	r0, [r1, #16]
   1c1a4:	ldr	sl, [fp, #12]
   1c1a8:	ldr	r2, [fp, #8]
   1c1ac:	add	r7, r0, #1
   1c1b0:	cmp	r0, #0
   1c1b4:	str	r7, [r1, #16]
   1c1b8:	ldrne	r0, [r4, #20]
   1c1bc:	addne	r1, r0, #1
   1c1c0:	strne	r1, [r4, #20]
   1c1c4:	movne	r1, #44	; 0x2c
   1c1c8:	strbne	r1, [r0]
   1c1cc:	mov	r1, r3
   1c1d0:	ldr	r0, [r8]
   1c1d4:	ldr	r9, [r8, r0]!
   1c1d8:	mov	r0, r4
   1c1dc:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1c1e0:	ldr	r1, [r4, #32]
   1c1e4:	ldr	r0, [r4, #20]
   1c1e8:	cmp	r9, #0
   1c1ec:	add	r1, r1, #1
   1c1f0:	str	r1, [r4, #32]
   1c1f4:	add	r1, r0, #1
   1c1f8:	str	r1, [r4, #20]
   1c1fc:	mov	r1, #91	; 0x5b
   1c200:	strb	r1, [r0]
   1c204:	beq	1c414 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d8>
   1c208:	ldrb	r1, [r4, #25]
   1c20c:	ldr	r0, [r4, #20]
   1c210:	cmp	r1, #0
   1c214:	beq	1c2d0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x194>
   1c218:	add	r1, r0, #1
   1c21c:	str	r1, [r4, #20]
   1c220:	mov	r1, #10
   1c224:	strb	r1, [r0]
   1c228:	ldr	r0, [r4, #20]
   1c22c:	ldrb	r2, [r4, #25]
   1c230:	ldr	r3, [r4, #32]
   1c234:	ldr	r1, [r4, #16]
   1c238:	mla	r7, r3, r2, r0
   1c23c:	mul	r5, r3, r2
   1c240:	cmp	r7, r1
   1c244:	bls	1c2b4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
   1c248:	cmp	r0, r1
   1c24c:	bcc	1c268 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x12c>
   1c250:	ldr	r2, [r4, #44]	; 0x2c
   1c254:	mov	r0, r4
   1c258:	mov	r1, #0
   1c25c:	blx	r2
   1c260:	ldr	r1, [r4, #16]
   1c264:	ldr	r0, [r4, #20]
   1c268:	sub	r6, r1, r0
   1c26c:	cmp	r6, r5
   1c270:	bcs	1c2b4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
   1c274:	mov	r1, #32
   1c278:	mov	r2, r6
   1c27c:	bl	12948 <memset@plt>
   1c280:	ldr	r0, [r4, #20]
   1c284:	ldr	r2, [r4, #44]	; 0x2c
   1c288:	mov	r1, #0
   1c28c:	add	r0, r0, r6
   1c290:	str	r0, [r4, #20]
   1c294:	mov	r0, r4
   1c298:	blx	r2
   1c29c:	ldr	r1, [r4, #16]
   1c2a0:	ldr	r0, [r4, #20]
   1c2a4:	sub	r5, r5, r6
   1c2a8:	sub	r6, r1, r0
   1c2ac:	cmp	r5, r6
   1c2b0:	bhi	1c274 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x138>
   1c2b4:	mov	r1, #32
   1c2b8:	mov	r2, r5
   1c2bc:	bl	12948 <memset@plt>
   1c2c0:	ldr	r0, [r4, #20]
   1c2c4:	add	r0, r0, r5
   1c2c8:	str	r0, [r4, #20]
   1c2cc:	b	1c2ec <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   1c2d0:	ldr	r1, [r4, #16]
   1c2d4:	cmp	r0, r1
   1c2d8:	bcc	1c2ec <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   1c2dc:	ldr	r2, [r4, #44]	; 0x2c
   1c2e0:	mov	r0, r4
   1c2e4:	mov	r1, #0
   1c2e8:	blx	r2
   1c2ec:	ldrh	r1, [r8, #4]
   1c2f0:	mov	r0, r4
   1c2f4:	blx	sl
   1c2f8:	subs	r9, r9, #1
   1c2fc:	beq	1c414 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d8>
   1c300:	add	r7, r8, #6
   1c304:	mov	r8, #44	; 0x2c
   1c308:	ldr	r0, [r4, #20]
   1c30c:	sub	r9, r9, #1
   1c310:	add	r1, r0, #1
   1c314:	str	r1, [r4, #20]
   1c318:	strb	r8, [r0]
   1c31c:	ldrb	r1, [r4, #25]
   1c320:	ldr	r0, [r4, #20]
   1c324:	cmp	r1, #0
   1c328:	beq	1c3e4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a8>
   1c32c:	add	r1, r0, #1
   1c330:	str	r1, [r4, #20]
   1c334:	mov	r1, #10
   1c338:	strb	r1, [r0]
   1c33c:	ldr	r0, [r4, #20]
   1c340:	ldrb	r2, [r4, #25]
   1c344:	ldr	r3, [r4, #32]
   1c348:	ldr	r1, [r4, #16]
   1c34c:	mla	r6, r3, r2, r0
   1c350:	mul	r5, r3, r2
   1c354:	cmp	r6, r1
   1c358:	bls	1c3c8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x28c>
   1c35c:	cmp	r0, r1
   1c360:	bcc	1c37c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x240>
   1c364:	ldr	r2, [r4, #44]	; 0x2c
   1c368:	mov	r0, r4
   1c36c:	mov	r1, #0
   1c370:	blx	r2
   1c374:	ldr	r1, [r4, #16]
   1c378:	ldr	r0, [r4, #20]
   1c37c:	sub	r6, r1, r0
   1c380:	cmp	r6, r5
   1c384:	bcs	1c3c8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x28c>
   1c388:	mov	r1, #32
   1c38c:	mov	r2, r6
   1c390:	bl	12948 <memset@plt>
   1c394:	ldr	r0, [r4, #20]
   1c398:	ldr	r2, [r4, #44]	; 0x2c
   1c39c:	mov	r1, #0
   1c3a0:	add	r0, r0, r6
   1c3a4:	str	r0, [r4, #20]
   1c3a8:	mov	r0, r4
   1c3ac:	blx	r2
   1c3b0:	ldr	r1, [r4, #16]
   1c3b4:	ldr	r0, [r4, #20]
   1c3b8:	sub	r5, r5, r6
   1c3bc:	sub	r6, r1, r0
   1c3c0:	cmp	r5, r6
   1c3c4:	bhi	1c388 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x24c>
   1c3c8:	mov	r1, #32
   1c3cc:	mov	r2, r5
   1c3d0:	bl	12948 <memset@plt>
   1c3d4:	ldr	r0, [r4, #20]
   1c3d8:	add	r0, r0, r5
   1c3dc:	str	r0, [r4, #20]
   1c3e0:	b	1c400 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   1c3e4:	ldr	r1, [r4, #16]
   1c3e8:	cmp	r0, r1
   1c3ec:	bcc	1c400 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   1c3f0:	ldr	r2, [r4, #44]	; 0x2c
   1c3f4:	mov	r0, r4
   1c3f8:	mov	r1, #0
   1c3fc:	blx	r2
   1c400:	ldrh	r1, [r7], #2
   1c404:	mov	r0, r4
   1c408:	blx	sl
   1c40c:	cmp	r9, #0
   1c410:	bne	1c308 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1cc>
   1c414:	ldrb	r1, [r4, #25]
   1c418:	ldr	r0, [r4, #20]
   1c41c:	cmp	r1, #0
   1c420:	beq	1c4e0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3a4>
   1c424:	add	r1, r0, #1
   1c428:	str	r1, [r4, #20]
   1c42c:	mov	r1, #10
   1c430:	strb	r1, [r0]
   1c434:	ldr	r0, [r4, #32]
   1c438:	sub	r2, r0, #1
   1c43c:	str	r2, [r4, #32]
   1c440:	ldrb	r3, [r4, #25]
   1c444:	ldr	r0, [r4, #20]
   1c448:	ldr	r1, [r4, #16]
   1c44c:	mla	r7, r2, r3, r0
   1c450:	mul	r5, r2, r3
   1c454:	cmp	r7, r1
   1c458:	bls	1c4c8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38c>
   1c45c:	cmp	r0, r1
   1c460:	bcc	1c47c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x340>
   1c464:	ldr	r2, [r4, #44]	; 0x2c
   1c468:	mov	r0, r4
   1c46c:	mov	r1, #0
   1c470:	blx	r2
   1c474:	ldr	r1, [r4, #16]
   1c478:	ldr	r0, [r4, #20]
   1c47c:	sub	r6, r1, r0
   1c480:	cmp	r6, r5
   1c484:	bcs	1c4c8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38c>
   1c488:	mov	r1, #32
   1c48c:	mov	r2, r6
   1c490:	bl	12948 <memset@plt>
   1c494:	ldr	r0, [r4, #20]
   1c498:	ldr	r2, [r4, #44]	; 0x2c
   1c49c:	mov	r1, #0
   1c4a0:	add	r0, r0, r6
   1c4a4:	str	r0, [r4, #20]
   1c4a8:	mov	r0, r4
   1c4ac:	blx	r2
   1c4b0:	ldr	r1, [r4, #16]
   1c4b4:	ldr	r0, [r4, #20]
   1c4b8:	sub	r5, r5, r6
   1c4bc:	sub	r6, r1, r0
   1c4c0:	cmp	r5, r6
   1c4c4:	bhi	1c488 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x34c>
   1c4c8:	mov	r1, #32
   1c4cc:	mov	r2, r5
   1c4d0:	bl	12948 <memset@plt>
   1c4d4:	ldr	r0, [r4, #20]
   1c4d8:	add	r0, r0, r5
   1c4dc:	str	r0, [r4, #20]
   1c4e0:	add	r1, r0, #1
   1c4e4:	str	r1, [r4, #20]
   1c4e8:	mov	r1, #93	; 0x5d
   1c4ec:	strb	r1, [r0]
   1c4f0:	sub	sp, fp, #28
   1c4f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c4f8 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   1c4f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4fc:	add	fp, sp, #28
   1c500:	sub	sp, sp, #4
   1c504:	mov	r4, r0
   1c508:	ldrb	r0, [r0, #27]
   1c50c:	cmp	r0, #0
   1c510:	beq	1c524 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   1c514:	mov	r0, r4
   1c518:	sub	sp, fp, #28
   1c51c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c520:	b	1957c <flatcc_json_printer_uint32_vector_field@@Base>
   1c524:	mov	r0, #4
   1c528:	add	r0, r0, r2, lsl #1
   1c52c:	ldr	r2, [r1, #8]
   1c530:	cmp	r0, r2
   1c534:	bge	1c554 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x5c>
   1c538:	ldr	r2, [r1, #4]
   1c53c:	add	r0, r2, r0
   1c540:	ldrh	r0, [r0]
   1c544:	cmp	r0, #0
   1c548:	ldrne	r2, [r1]
   1c54c:	addsne	r8, r2, r0
   1c550:	bne	1c55c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x64>
   1c554:	sub	sp, fp, #28
   1c558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c55c:	ldr	r0, [r1, #16]
   1c560:	ldr	sl, [fp, #12]
   1c564:	ldr	r2, [fp, #8]
   1c568:	add	r7, r0, #1
   1c56c:	cmp	r0, #0
   1c570:	str	r7, [r1, #16]
   1c574:	ldrne	r0, [r4, #20]
   1c578:	addne	r1, r0, #1
   1c57c:	strne	r1, [r4, #20]
   1c580:	movne	r1, #44	; 0x2c
   1c584:	strbne	r1, [r0]
   1c588:	mov	r1, r3
   1c58c:	ldr	r0, [r8]
   1c590:	ldr	r9, [r8, r0]!
   1c594:	mov	r0, r4
   1c598:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1c59c:	ldr	r1, [r4, #32]
   1c5a0:	ldr	r0, [r4, #20]
   1c5a4:	cmp	r9, #0
   1c5a8:	add	r1, r1, #1
   1c5ac:	str	r1, [r4, #32]
   1c5b0:	add	r1, r0, #1
   1c5b4:	str	r1, [r4, #20]
   1c5b8:	mov	r1, #91	; 0x5b
   1c5bc:	strb	r1, [r0]
   1c5c0:	beq	1c7d0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d8>
   1c5c4:	ldrb	r1, [r4, #25]
   1c5c8:	ldr	r0, [r4, #20]
   1c5cc:	cmp	r1, #0
   1c5d0:	beq	1c68c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x194>
   1c5d4:	add	r1, r0, #1
   1c5d8:	str	r1, [r4, #20]
   1c5dc:	mov	r1, #10
   1c5e0:	strb	r1, [r0]
   1c5e4:	ldr	r0, [r4, #20]
   1c5e8:	ldrb	r2, [r4, #25]
   1c5ec:	ldr	r3, [r4, #32]
   1c5f0:	ldr	r1, [r4, #16]
   1c5f4:	mla	r7, r3, r2, r0
   1c5f8:	mul	r5, r3, r2
   1c5fc:	cmp	r7, r1
   1c600:	bls	1c670 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x178>
   1c604:	cmp	r0, r1
   1c608:	bcc	1c624 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x12c>
   1c60c:	ldr	r2, [r4, #44]	; 0x2c
   1c610:	mov	r0, r4
   1c614:	mov	r1, #0
   1c618:	blx	r2
   1c61c:	ldr	r1, [r4, #16]
   1c620:	ldr	r0, [r4, #20]
   1c624:	sub	r6, r1, r0
   1c628:	cmp	r6, r5
   1c62c:	bcs	1c670 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x178>
   1c630:	mov	r1, #32
   1c634:	mov	r2, r6
   1c638:	bl	12948 <memset@plt>
   1c63c:	ldr	r0, [r4, #20]
   1c640:	ldr	r2, [r4, #44]	; 0x2c
   1c644:	mov	r1, #0
   1c648:	add	r0, r0, r6
   1c64c:	str	r0, [r4, #20]
   1c650:	mov	r0, r4
   1c654:	blx	r2
   1c658:	ldr	r1, [r4, #16]
   1c65c:	ldr	r0, [r4, #20]
   1c660:	sub	r5, r5, r6
   1c664:	sub	r6, r1, r0
   1c668:	cmp	r5, r6
   1c66c:	bhi	1c630 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x138>
   1c670:	mov	r1, #32
   1c674:	mov	r2, r5
   1c678:	bl	12948 <memset@plt>
   1c67c:	ldr	r0, [r4, #20]
   1c680:	add	r0, r0, r5
   1c684:	str	r0, [r4, #20]
   1c688:	b	1c6a8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b0>
   1c68c:	ldr	r1, [r4, #16]
   1c690:	cmp	r0, r1
   1c694:	bcc	1c6a8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b0>
   1c698:	ldr	r2, [r4, #44]	; 0x2c
   1c69c:	mov	r0, r4
   1c6a0:	mov	r1, #0
   1c6a4:	blx	r2
   1c6a8:	ldr	r1, [r8, #4]
   1c6ac:	mov	r0, r4
   1c6b0:	blx	sl
   1c6b4:	subs	r9, r9, #1
   1c6b8:	beq	1c7d0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d8>
   1c6bc:	add	r7, r8, #8
   1c6c0:	mov	r8, #44	; 0x2c
   1c6c4:	ldr	r0, [r4, #20]
   1c6c8:	sub	r9, r9, #1
   1c6cc:	add	r1, r0, #1
   1c6d0:	str	r1, [r4, #20]
   1c6d4:	strb	r8, [r0]
   1c6d8:	ldrb	r1, [r4, #25]
   1c6dc:	ldr	r0, [r4, #20]
   1c6e0:	cmp	r1, #0
   1c6e4:	beq	1c7a0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a8>
   1c6e8:	add	r1, r0, #1
   1c6ec:	str	r1, [r4, #20]
   1c6f0:	mov	r1, #10
   1c6f4:	strb	r1, [r0]
   1c6f8:	ldr	r0, [r4, #20]
   1c6fc:	ldrb	r2, [r4, #25]
   1c700:	ldr	r3, [r4, #32]
   1c704:	ldr	r1, [r4, #16]
   1c708:	mla	r6, r3, r2, r0
   1c70c:	mul	r5, r3, r2
   1c710:	cmp	r6, r1
   1c714:	bls	1c784 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   1c718:	cmp	r0, r1
   1c71c:	bcc	1c738 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x240>
   1c720:	ldr	r2, [r4, #44]	; 0x2c
   1c724:	mov	r0, r4
   1c728:	mov	r1, #0
   1c72c:	blx	r2
   1c730:	ldr	r1, [r4, #16]
   1c734:	ldr	r0, [r4, #20]
   1c738:	sub	r6, r1, r0
   1c73c:	cmp	r6, r5
   1c740:	bcs	1c784 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   1c744:	mov	r1, #32
   1c748:	mov	r2, r6
   1c74c:	bl	12948 <memset@plt>
   1c750:	ldr	r0, [r4, #20]
   1c754:	ldr	r2, [r4, #44]	; 0x2c
   1c758:	mov	r1, #0
   1c75c:	add	r0, r0, r6
   1c760:	str	r0, [r4, #20]
   1c764:	mov	r0, r4
   1c768:	blx	r2
   1c76c:	ldr	r1, [r4, #16]
   1c770:	ldr	r0, [r4, #20]
   1c774:	sub	r5, r5, r6
   1c778:	sub	r6, r1, r0
   1c77c:	cmp	r5, r6
   1c780:	bhi	1c744 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x24c>
   1c784:	mov	r1, #32
   1c788:	mov	r2, r5
   1c78c:	bl	12948 <memset@plt>
   1c790:	ldr	r0, [r4, #20]
   1c794:	add	r0, r0, r5
   1c798:	str	r0, [r4, #20]
   1c79c:	b	1c7bc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   1c7a0:	ldr	r1, [r4, #16]
   1c7a4:	cmp	r0, r1
   1c7a8:	bcc	1c7bc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   1c7ac:	ldr	r2, [r4, #44]	; 0x2c
   1c7b0:	mov	r0, r4
   1c7b4:	mov	r1, #0
   1c7b8:	blx	r2
   1c7bc:	ldr	r1, [r7], #4
   1c7c0:	mov	r0, r4
   1c7c4:	blx	sl
   1c7c8:	cmp	r9, #0
   1c7cc:	bne	1c6c4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1cc>
   1c7d0:	ldrb	r1, [r4, #25]
   1c7d4:	ldr	r0, [r4, #20]
   1c7d8:	cmp	r1, #0
   1c7dc:	beq	1c89c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3a4>
   1c7e0:	add	r1, r0, #1
   1c7e4:	str	r1, [r4, #20]
   1c7e8:	mov	r1, #10
   1c7ec:	strb	r1, [r0]
   1c7f0:	ldr	r0, [r4, #32]
   1c7f4:	sub	r2, r0, #1
   1c7f8:	str	r2, [r4, #32]
   1c7fc:	ldrb	r3, [r4, #25]
   1c800:	ldr	r0, [r4, #20]
   1c804:	ldr	r1, [r4, #16]
   1c808:	mla	r7, r2, r3, r0
   1c80c:	mul	r5, r2, r3
   1c810:	cmp	r7, r1
   1c814:	bls	1c884 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38c>
   1c818:	cmp	r0, r1
   1c81c:	bcc	1c838 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x340>
   1c820:	ldr	r2, [r4, #44]	; 0x2c
   1c824:	mov	r0, r4
   1c828:	mov	r1, #0
   1c82c:	blx	r2
   1c830:	ldr	r1, [r4, #16]
   1c834:	ldr	r0, [r4, #20]
   1c838:	sub	r6, r1, r0
   1c83c:	cmp	r6, r5
   1c840:	bcs	1c884 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38c>
   1c844:	mov	r1, #32
   1c848:	mov	r2, r6
   1c84c:	bl	12948 <memset@plt>
   1c850:	ldr	r0, [r4, #20]
   1c854:	ldr	r2, [r4, #44]	; 0x2c
   1c858:	mov	r1, #0
   1c85c:	add	r0, r0, r6
   1c860:	str	r0, [r4, #20]
   1c864:	mov	r0, r4
   1c868:	blx	r2
   1c86c:	ldr	r1, [r4, #16]
   1c870:	ldr	r0, [r4, #20]
   1c874:	sub	r5, r5, r6
   1c878:	sub	r6, r1, r0
   1c87c:	cmp	r5, r6
   1c880:	bhi	1c844 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x34c>
   1c884:	mov	r1, #32
   1c888:	mov	r2, r5
   1c88c:	bl	12948 <memset@plt>
   1c890:	ldr	r0, [r4, #20]
   1c894:	add	r0, r0, r5
   1c898:	str	r0, [r4, #20]
   1c89c:	add	r1, r0, #1
   1c8a0:	str	r1, [r4, #20]
   1c8a4:	mov	r1, #93	; 0x5d
   1c8a8:	strb	r1, [r0]
   1c8ac:	sub	sp, fp, #28
   1c8b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c8b4 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   1c8b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c8b8:	add	fp, sp, #28
   1c8bc:	sub	sp, sp, #4
   1c8c0:	mov	r4, r0
   1c8c4:	ldrb	r0, [r0, #27]
   1c8c8:	cmp	r0, #0
   1c8cc:	beq	1c8e0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   1c8d0:	mov	r0, r4
   1c8d4:	sub	sp, fp, #28
   1c8d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c8dc:	b	19930 <flatcc_json_printer_uint64_vector_field@@Base>
   1c8e0:	mov	r0, #4
   1c8e4:	add	r0, r0, r2, lsl #1
   1c8e8:	ldr	r2, [r1, #8]
   1c8ec:	cmp	r0, r2
   1c8f0:	bge	1c910 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x5c>
   1c8f4:	ldr	r2, [r1, #4]
   1c8f8:	add	r0, r2, r0
   1c8fc:	ldrh	r0, [r0]
   1c900:	cmp	r0, #0
   1c904:	ldrne	r2, [r1]
   1c908:	addsne	r8, r2, r0
   1c90c:	bne	1c918 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x64>
   1c910:	sub	sp, fp, #28
   1c914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c918:	ldr	r0, [r1, #16]
   1c91c:	ldr	sl, [fp, #12]
   1c920:	ldr	r2, [fp, #8]
   1c924:	add	r7, r0, #1
   1c928:	cmp	r0, #0
   1c92c:	str	r7, [r1, #16]
   1c930:	ldrne	r0, [r4, #20]
   1c934:	addne	r1, r0, #1
   1c938:	strne	r1, [r4, #20]
   1c93c:	movne	r1, #44	; 0x2c
   1c940:	strbne	r1, [r0]
   1c944:	mov	r1, r3
   1c948:	ldr	r0, [r8]
   1c94c:	ldr	r9, [r8, r0]!
   1c950:	mov	r0, r4
   1c954:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1c958:	ldr	r1, [r4, #32]
   1c95c:	ldr	r0, [r4, #20]
   1c960:	cmp	r9, #0
   1c964:	add	r1, r1, #1
   1c968:	str	r1, [r4, #32]
   1c96c:	add	r1, r0, #1
   1c970:	str	r1, [r4, #20]
   1c974:	mov	r1, #91	; 0x5b
   1c978:	strb	r1, [r0]
   1c97c:	beq	1cb90 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2dc>
   1c980:	ldrb	r1, [r4, #25]
   1c984:	ldr	r0, [r4, #20]
   1c988:	cmp	r1, #0
   1c98c:	beq	1ca48 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x194>
   1c990:	add	r1, r0, #1
   1c994:	str	r1, [r4, #20]
   1c998:	mov	r1, #10
   1c99c:	strb	r1, [r0]
   1c9a0:	ldr	r0, [r4, #20]
   1c9a4:	ldrb	r2, [r4, #25]
   1c9a8:	ldr	r3, [r4, #32]
   1c9ac:	ldr	r1, [r4, #16]
   1c9b0:	mla	r7, r3, r2, r0
   1c9b4:	mul	r5, r3, r2
   1c9b8:	cmp	r7, r1
   1c9bc:	bls	1ca2c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
   1c9c0:	cmp	r0, r1
   1c9c4:	bcc	1c9e0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x12c>
   1c9c8:	ldr	r2, [r4, #44]	; 0x2c
   1c9cc:	mov	r0, r4
   1c9d0:	mov	r1, #0
   1c9d4:	blx	r2
   1c9d8:	ldr	r1, [r4, #16]
   1c9dc:	ldr	r0, [r4, #20]
   1c9e0:	sub	r6, r1, r0
   1c9e4:	cmp	r6, r5
   1c9e8:	bcs	1ca2c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
   1c9ec:	mov	r1, #32
   1c9f0:	mov	r2, r6
   1c9f4:	bl	12948 <memset@plt>
   1c9f8:	ldr	r0, [r4, #20]
   1c9fc:	ldr	r2, [r4, #44]	; 0x2c
   1ca00:	mov	r1, #0
   1ca04:	add	r0, r0, r6
   1ca08:	str	r0, [r4, #20]
   1ca0c:	mov	r0, r4
   1ca10:	blx	r2
   1ca14:	ldr	r1, [r4, #16]
   1ca18:	ldr	r0, [r4, #20]
   1ca1c:	sub	r5, r5, r6
   1ca20:	sub	r6, r1, r0
   1ca24:	cmp	r5, r6
   1ca28:	bhi	1c9ec <flatcc_json_printer_uint64_enum_vector_field@@Base+0x138>
   1ca2c:	mov	r1, #32
   1ca30:	mov	r2, r5
   1ca34:	bl	12948 <memset@plt>
   1ca38:	ldr	r0, [r4, #20]
   1ca3c:	add	r0, r0, r5
   1ca40:	str	r0, [r4, #20]
   1ca44:	b	1ca64 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   1ca48:	ldr	r1, [r4, #16]
   1ca4c:	cmp	r0, r1
   1ca50:	bcc	1ca64 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   1ca54:	ldr	r2, [r4, #44]	; 0x2c
   1ca58:	mov	r0, r4
   1ca5c:	mov	r1, #0
   1ca60:	blx	r2
   1ca64:	ldrd	r2, [r8, #4]
   1ca68:	mov	r0, r4
   1ca6c:	blx	sl
   1ca70:	subs	r9, r9, #1
   1ca74:	beq	1cb90 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2dc>
   1ca78:	add	r7, r8, #12
   1ca7c:	mov	r8, #44	; 0x2c
   1ca80:	ldr	r0, [r4, #20]
   1ca84:	sub	r9, r9, #1
   1ca88:	add	r1, r0, #1
   1ca8c:	str	r1, [r4, #20]
   1ca90:	strb	r8, [r0]
   1ca94:	ldrb	r1, [r4, #25]
   1ca98:	ldr	r0, [r4, #20]
   1ca9c:	cmp	r1, #0
   1caa0:	beq	1cb5c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a8>
   1caa4:	add	r1, r0, #1
   1caa8:	str	r1, [r4, #20]
   1caac:	mov	r1, #10
   1cab0:	strb	r1, [r0]
   1cab4:	ldr	r0, [r4, #20]
   1cab8:	ldrb	r2, [r4, #25]
   1cabc:	ldr	r3, [r4, #32]
   1cac0:	ldr	r1, [r4, #16]
   1cac4:	mla	r6, r3, r2, r0
   1cac8:	mul	r5, r3, r2
   1cacc:	cmp	r6, r1
   1cad0:	bls	1cb40 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   1cad4:	cmp	r0, r1
   1cad8:	bcc	1caf4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x240>
   1cadc:	ldr	r2, [r4, #44]	; 0x2c
   1cae0:	mov	r0, r4
   1cae4:	mov	r1, #0
   1cae8:	blx	r2
   1caec:	ldr	r1, [r4, #16]
   1caf0:	ldr	r0, [r4, #20]
   1caf4:	sub	r6, r1, r0
   1caf8:	cmp	r6, r5
   1cafc:	bcs	1cb40 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   1cb00:	mov	r1, #32
   1cb04:	mov	r2, r6
   1cb08:	bl	12948 <memset@plt>
   1cb0c:	ldr	r0, [r4, #20]
   1cb10:	ldr	r2, [r4, #44]	; 0x2c
   1cb14:	mov	r1, #0
   1cb18:	add	r0, r0, r6
   1cb1c:	str	r0, [r4, #20]
   1cb20:	mov	r0, r4
   1cb24:	blx	r2
   1cb28:	ldr	r1, [r4, #16]
   1cb2c:	ldr	r0, [r4, #20]
   1cb30:	sub	r5, r5, r6
   1cb34:	sub	r6, r1, r0
   1cb38:	cmp	r5, r6
   1cb3c:	bhi	1cb00 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x24c>
   1cb40:	mov	r1, #32
   1cb44:	mov	r2, r5
   1cb48:	bl	12948 <memset@plt>
   1cb4c:	ldr	r0, [r4, #20]
   1cb50:	add	r0, r0, r5
   1cb54:	str	r0, [r4, #20]
   1cb58:	b	1cb78 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   1cb5c:	ldr	r1, [r4, #16]
   1cb60:	cmp	r0, r1
   1cb64:	bcc	1cb78 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   1cb68:	ldr	r2, [r4, #44]	; 0x2c
   1cb6c:	mov	r0, r4
   1cb70:	mov	r1, #0
   1cb74:	blx	r2
   1cb78:	ldrd	r2, [r7]
   1cb7c:	mov	r0, r4
   1cb80:	blx	sl
   1cb84:	add	r7, r7, #8
   1cb88:	cmp	r9, #0
   1cb8c:	bne	1ca80 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1cc>
   1cb90:	ldrb	r1, [r4, #25]
   1cb94:	ldr	r0, [r4, #20]
   1cb98:	cmp	r1, #0
   1cb9c:	beq	1cc5c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3a8>
   1cba0:	add	r1, r0, #1
   1cba4:	str	r1, [r4, #20]
   1cba8:	mov	r1, #10
   1cbac:	strb	r1, [r0]
   1cbb0:	ldr	r0, [r4, #32]
   1cbb4:	sub	r2, r0, #1
   1cbb8:	str	r2, [r4, #32]
   1cbbc:	ldrb	r3, [r4, #25]
   1cbc0:	ldr	r0, [r4, #20]
   1cbc4:	ldr	r1, [r4, #16]
   1cbc8:	mla	r7, r2, r3, r0
   1cbcc:	mul	r5, r2, r3
   1cbd0:	cmp	r7, r1
   1cbd4:	bls	1cc44 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x390>
   1cbd8:	cmp	r0, r1
   1cbdc:	bcc	1cbf8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x344>
   1cbe0:	ldr	r2, [r4, #44]	; 0x2c
   1cbe4:	mov	r0, r4
   1cbe8:	mov	r1, #0
   1cbec:	blx	r2
   1cbf0:	ldr	r1, [r4, #16]
   1cbf4:	ldr	r0, [r4, #20]
   1cbf8:	sub	r6, r1, r0
   1cbfc:	cmp	r6, r5
   1cc00:	bcs	1cc44 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x390>
   1cc04:	mov	r1, #32
   1cc08:	mov	r2, r6
   1cc0c:	bl	12948 <memset@plt>
   1cc10:	ldr	r0, [r4, #20]
   1cc14:	ldr	r2, [r4, #44]	; 0x2c
   1cc18:	mov	r1, #0
   1cc1c:	add	r0, r0, r6
   1cc20:	str	r0, [r4, #20]
   1cc24:	mov	r0, r4
   1cc28:	blx	r2
   1cc2c:	ldr	r1, [r4, #16]
   1cc30:	ldr	r0, [r4, #20]
   1cc34:	sub	r5, r5, r6
   1cc38:	sub	r6, r1, r0
   1cc3c:	cmp	r5, r6
   1cc40:	bhi	1cc04 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x350>
   1cc44:	mov	r1, #32
   1cc48:	mov	r2, r5
   1cc4c:	bl	12948 <memset@plt>
   1cc50:	ldr	r0, [r4, #20]
   1cc54:	add	r0, r0, r5
   1cc58:	str	r0, [r4, #20]
   1cc5c:	add	r1, r0, #1
   1cc60:	str	r1, [r4, #20]
   1cc64:	mov	r1, #93	; 0x5d
   1cc68:	strb	r1, [r0]
   1cc6c:	sub	sp, fp, #28
   1cc70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001cc74 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   1cc74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc78:	add	fp, sp, #28
   1cc7c:	sub	sp, sp, #4
   1cc80:	mov	r4, r0
   1cc84:	ldrb	r0, [r0, #27]
   1cc88:	cmp	r0, #0
   1cc8c:	beq	1cca0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   1cc90:	mov	r0, r4
   1cc94:	sub	sp, fp, #28
   1cc98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc9c:	b	19ce8 <flatcc_json_printer_int8_vector_field@@Base>
   1cca0:	mov	r0, #4
   1cca4:	add	r0, r0, r2, lsl #1
   1cca8:	ldr	r2, [r1, #8]
   1ccac:	cmp	r0, r2
   1ccb0:	bge	1ccd0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x5c>
   1ccb4:	ldr	r2, [r1, #4]
   1ccb8:	add	r0, r2, r0
   1ccbc:	ldrh	r0, [r0]
   1ccc0:	cmp	r0, #0
   1ccc4:	ldrne	r2, [r1]
   1ccc8:	addsne	r8, r2, r0
   1cccc:	bne	1ccd8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x64>
   1ccd0:	sub	sp, fp, #28
   1ccd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ccd8:	ldr	r0, [r1, #16]
   1ccdc:	ldr	sl, [fp, #12]
   1cce0:	ldr	r2, [fp, #8]
   1cce4:	add	r7, r0, #1
   1cce8:	cmp	r0, #0
   1ccec:	str	r7, [r1, #16]
   1ccf0:	ldrne	r0, [r4, #20]
   1ccf4:	addne	r1, r0, #1
   1ccf8:	strne	r1, [r4, #20]
   1ccfc:	movne	r1, #44	; 0x2c
   1cd00:	strbne	r1, [r0]
   1cd04:	mov	r1, r3
   1cd08:	ldr	r0, [r8]
   1cd0c:	ldr	r9, [r8, r0]!
   1cd10:	mov	r0, r4
   1cd14:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1cd18:	ldr	r1, [r4, #32]
   1cd1c:	ldr	r0, [r4, #20]
   1cd20:	cmp	r9, #0
   1cd24:	add	r1, r1, #1
   1cd28:	str	r1, [r4, #32]
   1cd2c:	add	r1, r0, #1
   1cd30:	str	r1, [r4, #20]
   1cd34:	mov	r1, #91	; 0x5b
   1cd38:	strb	r1, [r0]
   1cd3c:	beq	1cf4c <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d8>
   1cd40:	ldrb	r1, [r4, #25]
   1cd44:	ldr	r0, [r4, #20]
   1cd48:	cmp	r1, #0
   1cd4c:	beq	1ce08 <flatcc_json_printer_int8_enum_vector_field@@Base+0x194>
   1cd50:	add	r1, r0, #1
   1cd54:	str	r1, [r4, #20]
   1cd58:	mov	r1, #10
   1cd5c:	strb	r1, [r0]
   1cd60:	ldr	r0, [r4, #20]
   1cd64:	ldrb	r2, [r4, #25]
   1cd68:	ldr	r3, [r4, #32]
   1cd6c:	ldr	r1, [r4, #16]
   1cd70:	mla	r7, r3, r2, r0
   1cd74:	mul	r5, r3, r2
   1cd78:	cmp	r7, r1
   1cd7c:	bls	1cdec <flatcc_json_printer_int8_enum_vector_field@@Base+0x178>
   1cd80:	cmp	r0, r1
   1cd84:	bcc	1cda0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x12c>
   1cd88:	ldr	r2, [r4, #44]	; 0x2c
   1cd8c:	mov	r0, r4
   1cd90:	mov	r1, #0
   1cd94:	blx	r2
   1cd98:	ldr	r1, [r4, #16]
   1cd9c:	ldr	r0, [r4, #20]
   1cda0:	sub	r6, r1, r0
   1cda4:	cmp	r6, r5
   1cda8:	bcs	1cdec <flatcc_json_printer_int8_enum_vector_field@@Base+0x178>
   1cdac:	mov	r1, #32
   1cdb0:	mov	r2, r6
   1cdb4:	bl	12948 <memset@plt>
   1cdb8:	ldr	r0, [r4, #20]
   1cdbc:	ldr	r2, [r4, #44]	; 0x2c
   1cdc0:	mov	r1, #0
   1cdc4:	add	r0, r0, r6
   1cdc8:	str	r0, [r4, #20]
   1cdcc:	mov	r0, r4
   1cdd0:	blx	r2
   1cdd4:	ldr	r1, [r4, #16]
   1cdd8:	ldr	r0, [r4, #20]
   1cddc:	sub	r5, r5, r6
   1cde0:	sub	r6, r1, r0
   1cde4:	cmp	r5, r6
   1cde8:	bhi	1cdac <flatcc_json_printer_int8_enum_vector_field@@Base+0x138>
   1cdec:	mov	r1, #32
   1cdf0:	mov	r2, r5
   1cdf4:	bl	12948 <memset@plt>
   1cdf8:	ldr	r0, [r4, #20]
   1cdfc:	add	r0, r0, r5
   1ce00:	str	r0, [r4, #20]
   1ce04:	b	1ce24 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   1ce08:	ldr	r1, [r4, #16]
   1ce0c:	cmp	r0, r1
   1ce10:	bcc	1ce24 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   1ce14:	ldr	r2, [r4, #44]	; 0x2c
   1ce18:	mov	r0, r4
   1ce1c:	mov	r1, #0
   1ce20:	blx	r2
   1ce24:	ldrsb	r1, [r8, #4]
   1ce28:	mov	r0, r4
   1ce2c:	blx	sl
   1ce30:	subs	r9, r9, #1
   1ce34:	beq	1cf4c <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d8>
   1ce38:	add	r7, r8, #5
   1ce3c:	mov	r8, #44	; 0x2c
   1ce40:	ldr	r0, [r4, #20]
   1ce44:	sub	r9, r9, #1
   1ce48:	add	r1, r0, #1
   1ce4c:	str	r1, [r4, #20]
   1ce50:	strb	r8, [r0]
   1ce54:	ldrb	r1, [r4, #25]
   1ce58:	ldr	r0, [r4, #20]
   1ce5c:	cmp	r1, #0
   1ce60:	beq	1cf1c <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a8>
   1ce64:	add	r1, r0, #1
   1ce68:	str	r1, [r4, #20]
   1ce6c:	mov	r1, #10
   1ce70:	strb	r1, [r0]
   1ce74:	ldr	r0, [r4, #20]
   1ce78:	ldrb	r2, [r4, #25]
   1ce7c:	ldr	r3, [r4, #32]
   1ce80:	ldr	r1, [r4, #16]
   1ce84:	mla	r6, r3, r2, r0
   1ce88:	mul	r5, r3, r2
   1ce8c:	cmp	r6, r1
   1ce90:	bls	1cf00 <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   1ce94:	cmp	r0, r1
   1ce98:	bcc	1ceb4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x240>
   1ce9c:	ldr	r2, [r4, #44]	; 0x2c
   1cea0:	mov	r0, r4
   1cea4:	mov	r1, #0
   1cea8:	blx	r2
   1ceac:	ldr	r1, [r4, #16]
   1ceb0:	ldr	r0, [r4, #20]
   1ceb4:	sub	r6, r1, r0
   1ceb8:	cmp	r6, r5
   1cebc:	bcs	1cf00 <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   1cec0:	mov	r1, #32
   1cec4:	mov	r2, r6
   1cec8:	bl	12948 <memset@plt>
   1cecc:	ldr	r0, [r4, #20]
   1ced0:	ldr	r2, [r4, #44]	; 0x2c
   1ced4:	mov	r1, #0
   1ced8:	add	r0, r0, r6
   1cedc:	str	r0, [r4, #20]
   1cee0:	mov	r0, r4
   1cee4:	blx	r2
   1cee8:	ldr	r1, [r4, #16]
   1ceec:	ldr	r0, [r4, #20]
   1cef0:	sub	r5, r5, r6
   1cef4:	sub	r6, r1, r0
   1cef8:	cmp	r5, r6
   1cefc:	bhi	1cec0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x24c>
   1cf00:	mov	r1, #32
   1cf04:	mov	r2, r5
   1cf08:	bl	12948 <memset@plt>
   1cf0c:	ldr	r0, [r4, #20]
   1cf10:	add	r0, r0, r5
   1cf14:	str	r0, [r4, #20]
   1cf18:	b	1cf38 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   1cf1c:	ldr	r1, [r4, #16]
   1cf20:	cmp	r0, r1
   1cf24:	bcc	1cf38 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   1cf28:	ldr	r2, [r4, #44]	; 0x2c
   1cf2c:	mov	r0, r4
   1cf30:	mov	r1, #0
   1cf34:	blx	r2
   1cf38:	ldrsb	r1, [r7], #1
   1cf3c:	mov	r0, r4
   1cf40:	blx	sl
   1cf44:	cmp	r9, #0
   1cf48:	bne	1ce40 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1cc>
   1cf4c:	ldrb	r1, [r4, #25]
   1cf50:	ldr	r0, [r4, #20]
   1cf54:	cmp	r1, #0
   1cf58:	beq	1d018 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3a4>
   1cf5c:	add	r1, r0, #1
   1cf60:	str	r1, [r4, #20]
   1cf64:	mov	r1, #10
   1cf68:	strb	r1, [r0]
   1cf6c:	ldr	r0, [r4, #32]
   1cf70:	sub	r2, r0, #1
   1cf74:	str	r2, [r4, #32]
   1cf78:	ldrb	r3, [r4, #25]
   1cf7c:	ldr	r0, [r4, #20]
   1cf80:	ldr	r1, [r4, #16]
   1cf84:	mla	r7, r2, r3, r0
   1cf88:	mul	r5, r2, r3
   1cf8c:	cmp	r7, r1
   1cf90:	bls	1d000 <flatcc_json_printer_int8_enum_vector_field@@Base+0x38c>
   1cf94:	cmp	r0, r1
   1cf98:	bcc	1cfb4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x340>
   1cf9c:	ldr	r2, [r4, #44]	; 0x2c
   1cfa0:	mov	r0, r4
   1cfa4:	mov	r1, #0
   1cfa8:	blx	r2
   1cfac:	ldr	r1, [r4, #16]
   1cfb0:	ldr	r0, [r4, #20]
   1cfb4:	sub	r6, r1, r0
   1cfb8:	cmp	r6, r5
   1cfbc:	bcs	1d000 <flatcc_json_printer_int8_enum_vector_field@@Base+0x38c>
   1cfc0:	mov	r1, #32
   1cfc4:	mov	r2, r6
   1cfc8:	bl	12948 <memset@plt>
   1cfcc:	ldr	r0, [r4, #20]
   1cfd0:	ldr	r2, [r4, #44]	; 0x2c
   1cfd4:	mov	r1, #0
   1cfd8:	add	r0, r0, r6
   1cfdc:	str	r0, [r4, #20]
   1cfe0:	mov	r0, r4
   1cfe4:	blx	r2
   1cfe8:	ldr	r1, [r4, #16]
   1cfec:	ldr	r0, [r4, #20]
   1cff0:	sub	r5, r5, r6
   1cff4:	sub	r6, r1, r0
   1cff8:	cmp	r5, r6
   1cffc:	bhi	1cfc0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x34c>
   1d000:	mov	r1, #32
   1d004:	mov	r2, r5
   1d008:	bl	12948 <memset@plt>
   1d00c:	ldr	r0, [r4, #20]
   1d010:	add	r0, r0, r5
   1d014:	str	r0, [r4, #20]
   1d018:	add	r1, r0, #1
   1d01c:	str	r1, [r4, #20]
   1d020:	mov	r1, #93	; 0x5d
   1d024:	strb	r1, [r0]
   1d028:	sub	sp, fp, #28
   1d02c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d030 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   1d030:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d034:	add	fp, sp, #28
   1d038:	sub	sp, sp, #4
   1d03c:	mov	r4, r0
   1d040:	ldrb	r0, [r0, #27]
   1d044:	cmp	r0, #0
   1d048:	beq	1d05c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   1d04c:	mov	r0, r4
   1d050:	sub	sp, fp, #28
   1d054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d058:	b	1a220 <flatcc_json_printer_int16_vector_field@@Base>
   1d05c:	mov	r0, #4
   1d060:	add	r0, r0, r2, lsl #1
   1d064:	ldr	r2, [r1, #8]
   1d068:	cmp	r0, r2
   1d06c:	bge	1d08c <flatcc_json_printer_int16_enum_vector_field@@Base+0x5c>
   1d070:	ldr	r2, [r1, #4]
   1d074:	add	r0, r2, r0
   1d078:	ldrh	r0, [r0]
   1d07c:	cmp	r0, #0
   1d080:	ldrne	r2, [r1]
   1d084:	addsne	r8, r2, r0
   1d088:	bne	1d094 <flatcc_json_printer_int16_enum_vector_field@@Base+0x64>
   1d08c:	sub	sp, fp, #28
   1d090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d094:	ldr	r0, [r1, #16]
   1d098:	ldr	sl, [fp, #12]
   1d09c:	ldr	r2, [fp, #8]
   1d0a0:	add	r7, r0, #1
   1d0a4:	cmp	r0, #0
   1d0a8:	str	r7, [r1, #16]
   1d0ac:	ldrne	r0, [r4, #20]
   1d0b0:	addne	r1, r0, #1
   1d0b4:	strne	r1, [r4, #20]
   1d0b8:	movne	r1, #44	; 0x2c
   1d0bc:	strbne	r1, [r0]
   1d0c0:	mov	r1, r3
   1d0c4:	ldr	r0, [r8]
   1d0c8:	ldr	r9, [r8, r0]!
   1d0cc:	mov	r0, r4
   1d0d0:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1d0d4:	ldr	r1, [r4, #32]
   1d0d8:	ldr	r0, [r4, #20]
   1d0dc:	cmp	r9, #0
   1d0e0:	add	r1, r1, #1
   1d0e4:	str	r1, [r4, #32]
   1d0e8:	add	r1, r0, #1
   1d0ec:	str	r1, [r4, #20]
   1d0f0:	mov	r1, #91	; 0x5b
   1d0f4:	strb	r1, [r0]
   1d0f8:	beq	1d308 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d8>
   1d0fc:	ldrb	r1, [r4, #25]
   1d100:	ldr	r0, [r4, #20]
   1d104:	cmp	r1, #0
   1d108:	beq	1d1c4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x194>
   1d10c:	add	r1, r0, #1
   1d110:	str	r1, [r4, #20]
   1d114:	mov	r1, #10
   1d118:	strb	r1, [r0]
   1d11c:	ldr	r0, [r4, #20]
   1d120:	ldrb	r2, [r4, #25]
   1d124:	ldr	r3, [r4, #32]
   1d128:	ldr	r1, [r4, #16]
   1d12c:	mla	r7, r3, r2, r0
   1d130:	mul	r5, r3, r2
   1d134:	cmp	r7, r1
   1d138:	bls	1d1a8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
   1d13c:	cmp	r0, r1
   1d140:	bcc	1d15c <flatcc_json_printer_int16_enum_vector_field@@Base+0x12c>
   1d144:	ldr	r2, [r4, #44]	; 0x2c
   1d148:	mov	r0, r4
   1d14c:	mov	r1, #0
   1d150:	blx	r2
   1d154:	ldr	r1, [r4, #16]
   1d158:	ldr	r0, [r4, #20]
   1d15c:	sub	r6, r1, r0
   1d160:	cmp	r6, r5
   1d164:	bcs	1d1a8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
   1d168:	mov	r1, #32
   1d16c:	mov	r2, r6
   1d170:	bl	12948 <memset@plt>
   1d174:	ldr	r0, [r4, #20]
   1d178:	ldr	r2, [r4, #44]	; 0x2c
   1d17c:	mov	r1, #0
   1d180:	add	r0, r0, r6
   1d184:	str	r0, [r4, #20]
   1d188:	mov	r0, r4
   1d18c:	blx	r2
   1d190:	ldr	r1, [r4, #16]
   1d194:	ldr	r0, [r4, #20]
   1d198:	sub	r5, r5, r6
   1d19c:	sub	r6, r1, r0
   1d1a0:	cmp	r5, r6
   1d1a4:	bhi	1d168 <flatcc_json_printer_int16_enum_vector_field@@Base+0x138>
   1d1a8:	mov	r1, #32
   1d1ac:	mov	r2, r5
   1d1b0:	bl	12948 <memset@plt>
   1d1b4:	ldr	r0, [r4, #20]
   1d1b8:	add	r0, r0, r5
   1d1bc:	str	r0, [r4, #20]
   1d1c0:	b	1d1e0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   1d1c4:	ldr	r1, [r4, #16]
   1d1c8:	cmp	r0, r1
   1d1cc:	bcc	1d1e0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   1d1d0:	ldr	r2, [r4, #44]	; 0x2c
   1d1d4:	mov	r0, r4
   1d1d8:	mov	r1, #0
   1d1dc:	blx	r2
   1d1e0:	ldrsh	r1, [r8, #4]
   1d1e4:	mov	r0, r4
   1d1e8:	blx	sl
   1d1ec:	subs	r9, r9, #1
   1d1f0:	beq	1d308 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d8>
   1d1f4:	add	r7, r8, #6
   1d1f8:	mov	r8, #44	; 0x2c
   1d1fc:	ldr	r0, [r4, #20]
   1d200:	sub	r9, r9, #1
   1d204:	add	r1, r0, #1
   1d208:	str	r1, [r4, #20]
   1d20c:	strb	r8, [r0]
   1d210:	ldrb	r1, [r4, #25]
   1d214:	ldr	r0, [r4, #20]
   1d218:	cmp	r1, #0
   1d21c:	beq	1d2d8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a8>
   1d220:	add	r1, r0, #1
   1d224:	str	r1, [r4, #20]
   1d228:	mov	r1, #10
   1d22c:	strb	r1, [r0]
   1d230:	ldr	r0, [r4, #20]
   1d234:	ldrb	r2, [r4, #25]
   1d238:	ldr	r3, [r4, #32]
   1d23c:	ldr	r1, [r4, #16]
   1d240:	mla	r6, r3, r2, r0
   1d244:	mul	r5, r3, r2
   1d248:	cmp	r6, r1
   1d24c:	bls	1d2bc <flatcc_json_printer_int16_enum_vector_field@@Base+0x28c>
   1d250:	cmp	r0, r1
   1d254:	bcc	1d270 <flatcc_json_printer_int16_enum_vector_field@@Base+0x240>
   1d258:	ldr	r2, [r4, #44]	; 0x2c
   1d25c:	mov	r0, r4
   1d260:	mov	r1, #0
   1d264:	blx	r2
   1d268:	ldr	r1, [r4, #16]
   1d26c:	ldr	r0, [r4, #20]
   1d270:	sub	r6, r1, r0
   1d274:	cmp	r6, r5
   1d278:	bcs	1d2bc <flatcc_json_printer_int16_enum_vector_field@@Base+0x28c>
   1d27c:	mov	r1, #32
   1d280:	mov	r2, r6
   1d284:	bl	12948 <memset@plt>
   1d288:	ldr	r0, [r4, #20]
   1d28c:	ldr	r2, [r4, #44]	; 0x2c
   1d290:	mov	r1, #0
   1d294:	add	r0, r0, r6
   1d298:	str	r0, [r4, #20]
   1d29c:	mov	r0, r4
   1d2a0:	blx	r2
   1d2a4:	ldr	r1, [r4, #16]
   1d2a8:	ldr	r0, [r4, #20]
   1d2ac:	sub	r5, r5, r6
   1d2b0:	sub	r6, r1, r0
   1d2b4:	cmp	r5, r6
   1d2b8:	bhi	1d27c <flatcc_json_printer_int16_enum_vector_field@@Base+0x24c>
   1d2bc:	mov	r1, #32
   1d2c0:	mov	r2, r5
   1d2c4:	bl	12948 <memset@plt>
   1d2c8:	ldr	r0, [r4, #20]
   1d2cc:	add	r0, r0, r5
   1d2d0:	str	r0, [r4, #20]
   1d2d4:	b	1d2f4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   1d2d8:	ldr	r1, [r4, #16]
   1d2dc:	cmp	r0, r1
   1d2e0:	bcc	1d2f4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   1d2e4:	ldr	r2, [r4, #44]	; 0x2c
   1d2e8:	mov	r0, r4
   1d2ec:	mov	r1, #0
   1d2f0:	blx	r2
   1d2f4:	ldrsh	r1, [r7], #2
   1d2f8:	mov	r0, r4
   1d2fc:	blx	sl
   1d300:	cmp	r9, #0
   1d304:	bne	1d1fc <flatcc_json_printer_int16_enum_vector_field@@Base+0x1cc>
   1d308:	ldrb	r1, [r4, #25]
   1d30c:	ldr	r0, [r4, #20]
   1d310:	cmp	r1, #0
   1d314:	beq	1d3d4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3a4>
   1d318:	add	r1, r0, #1
   1d31c:	str	r1, [r4, #20]
   1d320:	mov	r1, #10
   1d324:	strb	r1, [r0]
   1d328:	ldr	r0, [r4, #32]
   1d32c:	sub	r2, r0, #1
   1d330:	str	r2, [r4, #32]
   1d334:	ldrb	r3, [r4, #25]
   1d338:	ldr	r0, [r4, #20]
   1d33c:	ldr	r1, [r4, #16]
   1d340:	mla	r7, r2, r3, r0
   1d344:	mul	r5, r2, r3
   1d348:	cmp	r7, r1
   1d34c:	bls	1d3bc <flatcc_json_printer_int16_enum_vector_field@@Base+0x38c>
   1d350:	cmp	r0, r1
   1d354:	bcc	1d370 <flatcc_json_printer_int16_enum_vector_field@@Base+0x340>
   1d358:	ldr	r2, [r4, #44]	; 0x2c
   1d35c:	mov	r0, r4
   1d360:	mov	r1, #0
   1d364:	blx	r2
   1d368:	ldr	r1, [r4, #16]
   1d36c:	ldr	r0, [r4, #20]
   1d370:	sub	r6, r1, r0
   1d374:	cmp	r6, r5
   1d378:	bcs	1d3bc <flatcc_json_printer_int16_enum_vector_field@@Base+0x38c>
   1d37c:	mov	r1, #32
   1d380:	mov	r2, r6
   1d384:	bl	12948 <memset@plt>
   1d388:	ldr	r0, [r4, #20]
   1d38c:	ldr	r2, [r4, #44]	; 0x2c
   1d390:	mov	r1, #0
   1d394:	add	r0, r0, r6
   1d398:	str	r0, [r4, #20]
   1d39c:	mov	r0, r4
   1d3a0:	blx	r2
   1d3a4:	ldr	r1, [r4, #16]
   1d3a8:	ldr	r0, [r4, #20]
   1d3ac:	sub	r5, r5, r6
   1d3b0:	sub	r6, r1, r0
   1d3b4:	cmp	r5, r6
   1d3b8:	bhi	1d37c <flatcc_json_printer_int16_enum_vector_field@@Base+0x34c>
   1d3bc:	mov	r1, #32
   1d3c0:	mov	r2, r5
   1d3c4:	bl	12948 <memset@plt>
   1d3c8:	ldr	r0, [r4, #20]
   1d3cc:	add	r0, r0, r5
   1d3d0:	str	r0, [r4, #20]
   1d3d4:	add	r1, r0, #1
   1d3d8:	str	r1, [r4, #20]
   1d3dc:	mov	r1, #93	; 0x5d
   1d3e0:	strb	r1, [r0]
   1d3e4:	sub	sp, fp, #28
   1d3e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d3ec <flatcc_json_printer_int32_enum_vector_field@@Base>:
   1d3ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d3f0:	add	fp, sp, #28
   1d3f4:	sub	sp, sp, #4
   1d3f8:	mov	r4, r0
   1d3fc:	ldrb	r0, [r0, #27]
   1d400:	cmp	r0, #0
   1d404:	beq	1d418 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   1d408:	mov	r0, r4
   1d40c:	sub	sp, fp, #28
   1d410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d414:	b	1a618 <flatcc_json_printer_int32_vector_field@@Base>
   1d418:	mov	r0, #4
   1d41c:	add	r0, r0, r2, lsl #1
   1d420:	ldr	r2, [r1, #8]
   1d424:	cmp	r0, r2
   1d428:	bge	1d448 <flatcc_json_printer_int32_enum_vector_field@@Base+0x5c>
   1d42c:	ldr	r2, [r1, #4]
   1d430:	add	r0, r2, r0
   1d434:	ldrh	r0, [r0]
   1d438:	cmp	r0, #0
   1d43c:	ldrne	r2, [r1]
   1d440:	addsne	r8, r2, r0
   1d444:	bne	1d450 <flatcc_json_printer_int32_enum_vector_field@@Base+0x64>
   1d448:	sub	sp, fp, #28
   1d44c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d450:	ldr	r0, [r1, #16]
   1d454:	ldr	sl, [fp, #12]
   1d458:	ldr	r2, [fp, #8]
   1d45c:	add	r7, r0, #1
   1d460:	cmp	r0, #0
   1d464:	str	r7, [r1, #16]
   1d468:	ldrne	r0, [r4, #20]
   1d46c:	addne	r1, r0, #1
   1d470:	strne	r1, [r4, #20]
   1d474:	movne	r1, #44	; 0x2c
   1d478:	strbne	r1, [r0]
   1d47c:	mov	r1, r3
   1d480:	ldr	r0, [r8]
   1d484:	ldr	r9, [r8, r0]!
   1d488:	mov	r0, r4
   1d48c:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1d490:	ldr	r1, [r4, #32]
   1d494:	ldr	r0, [r4, #20]
   1d498:	cmp	r9, #0
   1d49c:	add	r1, r1, #1
   1d4a0:	str	r1, [r4, #32]
   1d4a4:	add	r1, r0, #1
   1d4a8:	str	r1, [r4, #20]
   1d4ac:	mov	r1, #91	; 0x5b
   1d4b0:	strb	r1, [r0]
   1d4b4:	beq	1d6c4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d8>
   1d4b8:	ldrb	r1, [r4, #25]
   1d4bc:	ldr	r0, [r4, #20]
   1d4c0:	cmp	r1, #0
   1d4c4:	beq	1d580 <flatcc_json_printer_int32_enum_vector_field@@Base+0x194>
   1d4c8:	add	r1, r0, #1
   1d4cc:	str	r1, [r4, #20]
   1d4d0:	mov	r1, #10
   1d4d4:	strb	r1, [r0]
   1d4d8:	ldr	r0, [r4, #20]
   1d4dc:	ldrb	r2, [r4, #25]
   1d4e0:	ldr	r3, [r4, #32]
   1d4e4:	ldr	r1, [r4, #16]
   1d4e8:	mla	r7, r3, r2, r0
   1d4ec:	mul	r5, r3, r2
   1d4f0:	cmp	r7, r1
   1d4f4:	bls	1d564 <flatcc_json_printer_int32_enum_vector_field@@Base+0x178>
   1d4f8:	cmp	r0, r1
   1d4fc:	bcc	1d518 <flatcc_json_printer_int32_enum_vector_field@@Base+0x12c>
   1d500:	ldr	r2, [r4, #44]	; 0x2c
   1d504:	mov	r0, r4
   1d508:	mov	r1, #0
   1d50c:	blx	r2
   1d510:	ldr	r1, [r4, #16]
   1d514:	ldr	r0, [r4, #20]
   1d518:	sub	r6, r1, r0
   1d51c:	cmp	r6, r5
   1d520:	bcs	1d564 <flatcc_json_printer_int32_enum_vector_field@@Base+0x178>
   1d524:	mov	r1, #32
   1d528:	mov	r2, r6
   1d52c:	bl	12948 <memset@plt>
   1d530:	ldr	r0, [r4, #20]
   1d534:	ldr	r2, [r4, #44]	; 0x2c
   1d538:	mov	r1, #0
   1d53c:	add	r0, r0, r6
   1d540:	str	r0, [r4, #20]
   1d544:	mov	r0, r4
   1d548:	blx	r2
   1d54c:	ldr	r1, [r4, #16]
   1d550:	ldr	r0, [r4, #20]
   1d554:	sub	r5, r5, r6
   1d558:	sub	r6, r1, r0
   1d55c:	cmp	r5, r6
   1d560:	bhi	1d524 <flatcc_json_printer_int32_enum_vector_field@@Base+0x138>
   1d564:	mov	r1, #32
   1d568:	mov	r2, r5
   1d56c:	bl	12948 <memset@plt>
   1d570:	ldr	r0, [r4, #20]
   1d574:	add	r0, r0, r5
   1d578:	str	r0, [r4, #20]
   1d57c:	b	1d59c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b0>
   1d580:	ldr	r1, [r4, #16]
   1d584:	cmp	r0, r1
   1d588:	bcc	1d59c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b0>
   1d58c:	ldr	r2, [r4, #44]	; 0x2c
   1d590:	mov	r0, r4
   1d594:	mov	r1, #0
   1d598:	blx	r2
   1d59c:	ldr	r1, [r8, #4]
   1d5a0:	mov	r0, r4
   1d5a4:	blx	sl
   1d5a8:	subs	r9, r9, #1
   1d5ac:	beq	1d6c4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d8>
   1d5b0:	add	r7, r8, #8
   1d5b4:	mov	r8, #44	; 0x2c
   1d5b8:	ldr	r0, [r4, #20]
   1d5bc:	sub	r9, r9, #1
   1d5c0:	add	r1, r0, #1
   1d5c4:	str	r1, [r4, #20]
   1d5c8:	strb	r8, [r0]
   1d5cc:	ldrb	r1, [r4, #25]
   1d5d0:	ldr	r0, [r4, #20]
   1d5d4:	cmp	r1, #0
   1d5d8:	beq	1d694 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a8>
   1d5dc:	add	r1, r0, #1
   1d5e0:	str	r1, [r4, #20]
   1d5e4:	mov	r1, #10
   1d5e8:	strb	r1, [r0]
   1d5ec:	ldr	r0, [r4, #20]
   1d5f0:	ldrb	r2, [r4, #25]
   1d5f4:	ldr	r3, [r4, #32]
   1d5f8:	ldr	r1, [r4, #16]
   1d5fc:	mla	r6, r3, r2, r0
   1d600:	mul	r5, r3, r2
   1d604:	cmp	r6, r1
   1d608:	bls	1d678 <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   1d60c:	cmp	r0, r1
   1d610:	bcc	1d62c <flatcc_json_printer_int32_enum_vector_field@@Base+0x240>
   1d614:	ldr	r2, [r4, #44]	; 0x2c
   1d618:	mov	r0, r4
   1d61c:	mov	r1, #0
   1d620:	blx	r2
   1d624:	ldr	r1, [r4, #16]
   1d628:	ldr	r0, [r4, #20]
   1d62c:	sub	r6, r1, r0
   1d630:	cmp	r6, r5
   1d634:	bcs	1d678 <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   1d638:	mov	r1, #32
   1d63c:	mov	r2, r6
   1d640:	bl	12948 <memset@plt>
   1d644:	ldr	r0, [r4, #20]
   1d648:	ldr	r2, [r4, #44]	; 0x2c
   1d64c:	mov	r1, #0
   1d650:	add	r0, r0, r6
   1d654:	str	r0, [r4, #20]
   1d658:	mov	r0, r4
   1d65c:	blx	r2
   1d660:	ldr	r1, [r4, #16]
   1d664:	ldr	r0, [r4, #20]
   1d668:	sub	r5, r5, r6
   1d66c:	sub	r6, r1, r0
   1d670:	cmp	r5, r6
   1d674:	bhi	1d638 <flatcc_json_printer_int32_enum_vector_field@@Base+0x24c>
   1d678:	mov	r1, #32
   1d67c:	mov	r2, r5
   1d680:	bl	12948 <memset@plt>
   1d684:	ldr	r0, [r4, #20]
   1d688:	add	r0, r0, r5
   1d68c:	str	r0, [r4, #20]
   1d690:	b	1d6b0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   1d694:	ldr	r1, [r4, #16]
   1d698:	cmp	r0, r1
   1d69c:	bcc	1d6b0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   1d6a0:	ldr	r2, [r4, #44]	; 0x2c
   1d6a4:	mov	r0, r4
   1d6a8:	mov	r1, #0
   1d6ac:	blx	r2
   1d6b0:	ldr	r1, [r7], #4
   1d6b4:	mov	r0, r4
   1d6b8:	blx	sl
   1d6bc:	cmp	r9, #0
   1d6c0:	bne	1d5b8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1cc>
   1d6c4:	ldrb	r1, [r4, #25]
   1d6c8:	ldr	r0, [r4, #20]
   1d6cc:	cmp	r1, #0
   1d6d0:	beq	1d790 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3a4>
   1d6d4:	add	r1, r0, #1
   1d6d8:	str	r1, [r4, #20]
   1d6dc:	mov	r1, #10
   1d6e0:	strb	r1, [r0]
   1d6e4:	ldr	r0, [r4, #32]
   1d6e8:	sub	r2, r0, #1
   1d6ec:	str	r2, [r4, #32]
   1d6f0:	ldrb	r3, [r4, #25]
   1d6f4:	ldr	r0, [r4, #20]
   1d6f8:	ldr	r1, [r4, #16]
   1d6fc:	mla	r7, r2, r3, r0
   1d700:	mul	r5, r2, r3
   1d704:	cmp	r7, r1
   1d708:	bls	1d778 <flatcc_json_printer_int32_enum_vector_field@@Base+0x38c>
   1d70c:	cmp	r0, r1
   1d710:	bcc	1d72c <flatcc_json_printer_int32_enum_vector_field@@Base+0x340>
   1d714:	ldr	r2, [r4, #44]	; 0x2c
   1d718:	mov	r0, r4
   1d71c:	mov	r1, #0
   1d720:	blx	r2
   1d724:	ldr	r1, [r4, #16]
   1d728:	ldr	r0, [r4, #20]
   1d72c:	sub	r6, r1, r0
   1d730:	cmp	r6, r5
   1d734:	bcs	1d778 <flatcc_json_printer_int32_enum_vector_field@@Base+0x38c>
   1d738:	mov	r1, #32
   1d73c:	mov	r2, r6
   1d740:	bl	12948 <memset@plt>
   1d744:	ldr	r0, [r4, #20]
   1d748:	ldr	r2, [r4, #44]	; 0x2c
   1d74c:	mov	r1, #0
   1d750:	add	r0, r0, r6
   1d754:	str	r0, [r4, #20]
   1d758:	mov	r0, r4
   1d75c:	blx	r2
   1d760:	ldr	r1, [r4, #16]
   1d764:	ldr	r0, [r4, #20]
   1d768:	sub	r5, r5, r6
   1d76c:	sub	r6, r1, r0
   1d770:	cmp	r5, r6
   1d774:	bhi	1d738 <flatcc_json_printer_int32_enum_vector_field@@Base+0x34c>
   1d778:	mov	r1, #32
   1d77c:	mov	r2, r5
   1d780:	bl	12948 <memset@plt>
   1d784:	ldr	r0, [r4, #20]
   1d788:	add	r0, r0, r5
   1d78c:	str	r0, [r4, #20]
   1d790:	add	r1, r0, #1
   1d794:	str	r1, [r4, #20]
   1d798:	mov	r1, #93	; 0x5d
   1d79c:	strb	r1, [r0]
   1d7a0:	sub	sp, fp, #28
   1d7a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d7a8 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   1d7a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7ac:	add	fp, sp, #28
   1d7b0:	sub	sp, sp, #4
   1d7b4:	mov	r4, r0
   1d7b8:	ldrb	r0, [r0, #27]
   1d7bc:	cmp	r0, #0
   1d7c0:	beq	1d7d4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   1d7c4:	mov	r0, r4
   1d7c8:	sub	sp, fp, #28
   1d7cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7d0:	b	1aa00 <flatcc_json_printer_int64_vector_field@@Base>
   1d7d4:	mov	r0, #4
   1d7d8:	add	r0, r0, r2, lsl #1
   1d7dc:	ldr	r2, [r1, #8]
   1d7e0:	cmp	r0, r2
   1d7e4:	bge	1d804 <flatcc_json_printer_int64_enum_vector_field@@Base+0x5c>
   1d7e8:	ldr	r2, [r1, #4]
   1d7ec:	add	r0, r2, r0
   1d7f0:	ldrh	r0, [r0]
   1d7f4:	cmp	r0, #0
   1d7f8:	ldrne	r2, [r1]
   1d7fc:	addsne	r8, r2, r0
   1d800:	bne	1d80c <flatcc_json_printer_int64_enum_vector_field@@Base+0x64>
   1d804:	sub	sp, fp, #28
   1d808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d80c:	ldr	r0, [r1, #16]
   1d810:	ldr	sl, [fp, #12]
   1d814:	ldr	r2, [fp, #8]
   1d818:	add	r7, r0, #1
   1d81c:	cmp	r0, #0
   1d820:	str	r7, [r1, #16]
   1d824:	ldrne	r0, [r4, #20]
   1d828:	addne	r1, r0, #1
   1d82c:	strne	r1, [r4, #20]
   1d830:	movne	r1, #44	; 0x2c
   1d834:	strbne	r1, [r0]
   1d838:	mov	r1, r3
   1d83c:	ldr	r0, [r8]
   1d840:	ldr	r9, [r8, r0]!
   1d844:	mov	r0, r4
   1d848:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1d84c:	ldr	r1, [r4, #32]
   1d850:	ldr	r0, [r4, #20]
   1d854:	cmp	r9, #0
   1d858:	add	r1, r1, #1
   1d85c:	str	r1, [r4, #32]
   1d860:	add	r1, r0, #1
   1d864:	str	r1, [r4, #20]
   1d868:	mov	r1, #91	; 0x5b
   1d86c:	strb	r1, [r0]
   1d870:	beq	1da84 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2dc>
   1d874:	ldrb	r1, [r4, #25]
   1d878:	ldr	r0, [r4, #20]
   1d87c:	cmp	r1, #0
   1d880:	beq	1d93c <flatcc_json_printer_int64_enum_vector_field@@Base+0x194>
   1d884:	add	r1, r0, #1
   1d888:	str	r1, [r4, #20]
   1d88c:	mov	r1, #10
   1d890:	strb	r1, [r0]
   1d894:	ldr	r0, [r4, #20]
   1d898:	ldrb	r2, [r4, #25]
   1d89c:	ldr	r3, [r4, #32]
   1d8a0:	ldr	r1, [r4, #16]
   1d8a4:	mla	r7, r3, r2, r0
   1d8a8:	mul	r5, r3, r2
   1d8ac:	cmp	r7, r1
   1d8b0:	bls	1d920 <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
   1d8b4:	cmp	r0, r1
   1d8b8:	bcc	1d8d4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x12c>
   1d8bc:	ldr	r2, [r4, #44]	; 0x2c
   1d8c0:	mov	r0, r4
   1d8c4:	mov	r1, #0
   1d8c8:	blx	r2
   1d8cc:	ldr	r1, [r4, #16]
   1d8d0:	ldr	r0, [r4, #20]
   1d8d4:	sub	r6, r1, r0
   1d8d8:	cmp	r6, r5
   1d8dc:	bcs	1d920 <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
   1d8e0:	mov	r1, #32
   1d8e4:	mov	r2, r6
   1d8e8:	bl	12948 <memset@plt>
   1d8ec:	ldr	r0, [r4, #20]
   1d8f0:	ldr	r2, [r4, #44]	; 0x2c
   1d8f4:	mov	r1, #0
   1d8f8:	add	r0, r0, r6
   1d8fc:	str	r0, [r4, #20]
   1d900:	mov	r0, r4
   1d904:	blx	r2
   1d908:	ldr	r1, [r4, #16]
   1d90c:	ldr	r0, [r4, #20]
   1d910:	sub	r5, r5, r6
   1d914:	sub	r6, r1, r0
   1d918:	cmp	r5, r6
   1d91c:	bhi	1d8e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x138>
   1d920:	mov	r1, #32
   1d924:	mov	r2, r5
   1d928:	bl	12948 <memset@plt>
   1d92c:	ldr	r0, [r4, #20]
   1d930:	add	r0, r0, r5
   1d934:	str	r0, [r4, #20]
   1d938:	b	1d958 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   1d93c:	ldr	r1, [r4, #16]
   1d940:	cmp	r0, r1
   1d944:	bcc	1d958 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   1d948:	ldr	r2, [r4, #44]	; 0x2c
   1d94c:	mov	r0, r4
   1d950:	mov	r1, #0
   1d954:	blx	r2
   1d958:	ldrd	r2, [r8, #4]
   1d95c:	mov	r0, r4
   1d960:	blx	sl
   1d964:	subs	r9, r9, #1
   1d968:	beq	1da84 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2dc>
   1d96c:	add	r7, r8, #12
   1d970:	mov	r8, #44	; 0x2c
   1d974:	ldr	r0, [r4, #20]
   1d978:	sub	r9, r9, #1
   1d97c:	add	r1, r0, #1
   1d980:	str	r1, [r4, #20]
   1d984:	strb	r8, [r0]
   1d988:	ldrb	r1, [r4, #25]
   1d98c:	ldr	r0, [r4, #20]
   1d990:	cmp	r1, #0
   1d994:	beq	1da50 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a8>
   1d998:	add	r1, r0, #1
   1d99c:	str	r1, [r4, #20]
   1d9a0:	mov	r1, #10
   1d9a4:	strb	r1, [r0]
   1d9a8:	ldr	r0, [r4, #20]
   1d9ac:	ldrb	r2, [r4, #25]
   1d9b0:	ldr	r3, [r4, #32]
   1d9b4:	ldr	r1, [r4, #16]
   1d9b8:	mla	r6, r3, r2, r0
   1d9bc:	mul	r5, r3, r2
   1d9c0:	cmp	r6, r1
   1d9c4:	bls	1da34 <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   1d9c8:	cmp	r0, r1
   1d9cc:	bcc	1d9e8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x240>
   1d9d0:	ldr	r2, [r4, #44]	; 0x2c
   1d9d4:	mov	r0, r4
   1d9d8:	mov	r1, #0
   1d9dc:	blx	r2
   1d9e0:	ldr	r1, [r4, #16]
   1d9e4:	ldr	r0, [r4, #20]
   1d9e8:	sub	r6, r1, r0
   1d9ec:	cmp	r6, r5
   1d9f0:	bcs	1da34 <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   1d9f4:	mov	r1, #32
   1d9f8:	mov	r2, r6
   1d9fc:	bl	12948 <memset@plt>
   1da00:	ldr	r0, [r4, #20]
   1da04:	ldr	r2, [r4, #44]	; 0x2c
   1da08:	mov	r1, #0
   1da0c:	add	r0, r0, r6
   1da10:	str	r0, [r4, #20]
   1da14:	mov	r0, r4
   1da18:	blx	r2
   1da1c:	ldr	r1, [r4, #16]
   1da20:	ldr	r0, [r4, #20]
   1da24:	sub	r5, r5, r6
   1da28:	sub	r6, r1, r0
   1da2c:	cmp	r5, r6
   1da30:	bhi	1d9f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x24c>
   1da34:	mov	r1, #32
   1da38:	mov	r2, r5
   1da3c:	bl	12948 <memset@plt>
   1da40:	ldr	r0, [r4, #20]
   1da44:	add	r0, r0, r5
   1da48:	str	r0, [r4, #20]
   1da4c:	b	1da6c <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   1da50:	ldr	r1, [r4, #16]
   1da54:	cmp	r0, r1
   1da58:	bcc	1da6c <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   1da5c:	ldr	r2, [r4, #44]	; 0x2c
   1da60:	mov	r0, r4
   1da64:	mov	r1, #0
   1da68:	blx	r2
   1da6c:	ldrd	r2, [r7]
   1da70:	mov	r0, r4
   1da74:	blx	sl
   1da78:	add	r7, r7, #8
   1da7c:	cmp	r9, #0
   1da80:	bne	1d974 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1cc>
   1da84:	ldrb	r1, [r4, #25]
   1da88:	ldr	r0, [r4, #20]
   1da8c:	cmp	r1, #0
   1da90:	beq	1db50 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3a8>
   1da94:	add	r1, r0, #1
   1da98:	str	r1, [r4, #20]
   1da9c:	mov	r1, #10
   1daa0:	strb	r1, [r0]
   1daa4:	ldr	r0, [r4, #32]
   1daa8:	sub	r2, r0, #1
   1daac:	str	r2, [r4, #32]
   1dab0:	ldrb	r3, [r4, #25]
   1dab4:	ldr	r0, [r4, #20]
   1dab8:	ldr	r1, [r4, #16]
   1dabc:	mla	r7, r2, r3, r0
   1dac0:	mul	r5, r2, r3
   1dac4:	cmp	r7, r1
   1dac8:	bls	1db38 <flatcc_json_printer_int64_enum_vector_field@@Base+0x390>
   1dacc:	cmp	r0, r1
   1dad0:	bcc	1daec <flatcc_json_printer_int64_enum_vector_field@@Base+0x344>
   1dad4:	ldr	r2, [r4, #44]	; 0x2c
   1dad8:	mov	r0, r4
   1dadc:	mov	r1, #0
   1dae0:	blx	r2
   1dae4:	ldr	r1, [r4, #16]
   1dae8:	ldr	r0, [r4, #20]
   1daec:	sub	r6, r1, r0
   1daf0:	cmp	r6, r5
   1daf4:	bcs	1db38 <flatcc_json_printer_int64_enum_vector_field@@Base+0x390>
   1daf8:	mov	r1, #32
   1dafc:	mov	r2, r6
   1db00:	bl	12948 <memset@plt>
   1db04:	ldr	r0, [r4, #20]
   1db08:	ldr	r2, [r4, #44]	; 0x2c
   1db0c:	mov	r1, #0
   1db10:	add	r0, r0, r6
   1db14:	str	r0, [r4, #20]
   1db18:	mov	r0, r4
   1db1c:	blx	r2
   1db20:	ldr	r1, [r4, #16]
   1db24:	ldr	r0, [r4, #20]
   1db28:	sub	r5, r5, r6
   1db2c:	sub	r6, r1, r0
   1db30:	cmp	r5, r6
   1db34:	bhi	1daf8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x350>
   1db38:	mov	r1, #32
   1db3c:	mov	r2, r5
   1db40:	bl	12948 <memset@plt>
   1db44:	ldr	r0, [r4, #20]
   1db48:	add	r0, r0, r5
   1db4c:	str	r0, [r4, #20]
   1db50:	add	r1, r0, #1
   1db54:	str	r1, [r4, #20]
   1db58:	mov	r1, #93	; 0x5d
   1db5c:	strb	r1, [r0]
   1db60:	sub	sp, fp, #28
   1db64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001db68 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   1db68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db6c:	add	fp, sp, #28
   1db70:	sub	sp, sp, #4
   1db74:	mov	r4, r0
   1db78:	ldrb	r0, [r0, #27]
   1db7c:	cmp	r0, #0
   1db80:	beq	1db94 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   1db84:	mov	r0, r4
   1db88:	sub	sp, fp, #28
   1db8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db90:	b	1ae08 <flatcc_json_printer_bool_vector_field@@Base>
   1db94:	mov	r0, #4
   1db98:	add	r0, r0, r2, lsl #1
   1db9c:	ldr	r2, [r1, #8]
   1dba0:	cmp	r0, r2
   1dba4:	bge	1dbc4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x5c>
   1dba8:	ldr	r2, [r1, #4]
   1dbac:	add	r0, r2, r0
   1dbb0:	ldrh	r0, [r0]
   1dbb4:	cmp	r0, #0
   1dbb8:	ldrne	r2, [r1]
   1dbbc:	addsne	r8, r2, r0
   1dbc0:	bne	1dbcc <flatcc_json_printer_bool_enum_vector_field@@Base+0x64>
   1dbc4:	sub	sp, fp, #28
   1dbc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dbcc:	ldr	r0, [r1, #16]
   1dbd0:	ldr	sl, [fp, #12]
   1dbd4:	ldr	r2, [fp, #8]
   1dbd8:	add	r7, r0, #1
   1dbdc:	cmp	r0, #0
   1dbe0:	str	r7, [r1, #16]
   1dbe4:	ldrne	r0, [r4, #20]
   1dbe8:	addne	r1, r0, #1
   1dbec:	strne	r1, [r4, #20]
   1dbf0:	movne	r1, #44	; 0x2c
   1dbf4:	strbne	r1, [r0]
   1dbf8:	mov	r1, r3
   1dbfc:	ldr	r0, [r8]
   1dc00:	ldr	r9, [r8, r0]!
   1dc04:	mov	r0, r4
   1dc08:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1dc0c:	ldr	r1, [r4, #32]
   1dc10:	ldr	r0, [r4, #20]
   1dc14:	cmp	r9, #0
   1dc18:	add	r1, r1, #1
   1dc1c:	str	r1, [r4, #32]
   1dc20:	add	r1, r0, #1
   1dc24:	str	r1, [r4, #20]
   1dc28:	mov	r1, #91	; 0x5b
   1dc2c:	strb	r1, [r0]
   1dc30:	beq	1de40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d8>
   1dc34:	ldrb	r1, [r4, #25]
   1dc38:	ldr	r0, [r4, #20]
   1dc3c:	cmp	r1, #0
   1dc40:	beq	1dcfc <flatcc_json_printer_bool_enum_vector_field@@Base+0x194>
   1dc44:	add	r1, r0, #1
   1dc48:	str	r1, [r4, #20]
   1dc4c:	mov	r1, #10
   1dc50:	strb	r1, [r0]
   1dc54:	ldr	r0, [r4, #20]
   1dc58:	ldrb	r2, [r4, #25]
   1dc5c:	ldr	r3, [r4, #32]
   1dc60:	ldr	r1, [r4, #16]
   1dc64:	mla	r7, r3, r2, r0
   1dc68:	mul	r5, r3, r2
   1dc6c:	cmp	r7, r1
   1dc70:	bls	1dce0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x178>
   1dc74:	cmp	r0, r1
   1dc78:	bcc	1dc94 <flatcc_json_printer_bool_enum_vector_field@@Base+0x12c>
   1dc7c:	ldr	r2, [r4, #44]	; 0x2c
   1dc80:	mov	r0, r4
   1dc84:	mov	r1, #0
   1dc88:	blx	r2
   1dc8c:	ldr	r1, [r4, #16]
   1dc90:	ldr	r0, [r4, #20]
   1dc94:	sub	r6, r1, r0
   1dc98:	cmp	r6, r5
   1dc9c:	bcs	1dce0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x178>
   1dca0:	mov	r1, #32
   1dca4:	mov	r2, r6
   1dca8:	bl	12948 <memset@plt>
   1dcac:	ldr	r0, [r4, #20]
   1dcb0:	ldr	r2, [r4, #44]	; 0x2c
   1dcb4:	mov	r1, #0
   1dcb8:	add	r0, r0, r6
   1dcbc:	str	r0, [r4, #20]
   1dcc0:	mov	r0, r4
   1dcc4:	blx	r2
   1dcc8:	ldr	r1, [r4, #16]
   1dccc:	ldr	r0, [r4, #20]
   1dcd0:	sub	r5, r5, r6
   1dcd4:	sub	r6, r1, r0
   1dcd8:	cmp	r5, r6
   1dcdc:	bhi	1dca0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x138>
   1dce0:	mov	r1, #32
   1dce4:	mov	r2, r5
   1dce8:	bl	12948 <memset@plt>
   1dcec:	ldr	r0, [r4, #20]
   1dcf0:	add	r0, r0, r5
   1dcf4:	str	r0, [r4, #20]
   1dcf8:	b	1dd18 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   1dcfc:	ldr	r1, [r4, #16]
   1dd00:	cmp	r0, r1
   1dd04:	bcc	1dd18 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   1dd08:	ldr	r2, [r4, #44]	; 0x2c
   1dd0c:	mov	r0, r4
   1dd10:	mov	r1, #0
   1dd14:	blx	r2
   1dd18:	ldrb	r1, [r8, #4]
   1dd1c:	mov	r0, r4
   1dd20:	blx	sl
   1dd24:	subs	r9, r9, #1
   1dd28:	beq	1de40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d8>
   1dd2c:	add	r7, r8, #5
   1dd30:	mov	r8, #44	; 0x2c
   1dd34:	ldr	r0, [r4, #20]
   1dd38:	sub	r9, r9, #1
   1dd3c:	add	r1, r0, #1
   1dd40:	str	r1, [r4, #20]
   1dd44:	strb	r8, [r0]
   1dd48:	ldrb	r1, [r4, #25]
   1dd4c:	ldr	r0, [r4, #20]
   1dd50:	cmp	r1, #0
   1dd54:	beq	1de10 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a8>
   1dd58:	add	r1, r0, #1
   1dd5c:	str	r1, [r4, #20]
   1dd60:	mov	r1, #10
   1dd64:	strb	r1, [r0]
   1dd68:	ldr	r0, [r4, #20]
   1dd6c:	ldrb	r2, [r4, #25]
   1dd70:	ldr	r3, [r4, #32]
   1dd74:	ldr	r1, [r4, #16]
   1dd78:	mla	r6, r3, r2, r0
   1dd7c:	mul	r5, r3, r2
   1dd80:	cmp	r6, r1
   1dd84:	bls	1ddf4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   1dd88:	cmp	r0, r1
   1dd8c:	bcc	1dda8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x240>
   1dd90:	ldr	r2, [r4, #44]	; 0x2c
   1dd94:	mov	r0, r4
   1dd98:	mov	r1, #0
   1dd9c:	blx	r2
   1dda0:	ldr	r1, [r4, #16]
   1dda4:	ldr	r0, [r4, #20]
   1dda8:	sub	r6, r1, r0
   1ddac:	cmp	r6, r5
   1ddb0:	bcs	1ddf4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   1ddb4:	mov	r1, #32
   1ddb8:	mov	r2, r6
   1ddbc:	bl	12948 <memset@plt>
   1ddc0:	ldr	r0, [r4, #20]
   1ddc4:	ldr	r2, [r4, #44]	; 0x2c
   1ddc8:	mov	r1, #0
   1ddcc:	add	r0, r0, r6
   1ddd0:	str	r0, [r4, #20]
   1ddd4:	mov	r0, r4
   1ddd8:	blx	r2
   1dddc:	ldr	r1, [r4, #16]
   1dde0:	ldr	r0, [r4, #20]
   1dde4:	sub	r5, r5, r6
   1dde8:	sub	r6, r1, r0
   1ddec:	cmp	r5, r6
   1ddf0:	bhi	1ddb4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x24c>
   1ddf4:	mov	r1, #32
   1ddf8:	mov	r2, r5
   1ddfc:	bl	12948 <memset@plt>
   1de00:	ldr	r0, [r4, #20]
   1de04:	add	r0, r0, r5
   1de08:	str	r0, [r4, #20]
   1de0c:	b	1de2c <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   1de10:	ldr	r1, [r4, #16]
   1de14:	cmp	r0, r1
   1de18:	bcc	1de2c <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   1de1c:	ldr	r2, [r4, #44]	; 0x2c
   1de20:	mov	r0, r4
   1de24:	mov	r1, #0
   1de28:	blx	r2
   1de2c:	ldrb	r1, [r7], #1
   1de30:	mov	r0, r4
   1de34:	blx	sl
   1de38:	cmp	r9, #0
   1de3c:	bne	1dd34 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1cc>
   1de40:	ldrb	r1, [r4, #25]
   1de44:	ldr	r0, [r4, #20]
   1de48:	cmp	r1, #0
   1de4c:	beq	1df0c <flatcc_json_printer_bool_enum_vector_field@@Base+0x3a4>
   1de50:	add	r1, r0, #1
   1de54:	str	r1, [r4, #20]
   1de58:	mov	r1, #10
   1de5c:	strb	r1, [r0]
   1de60:	ldr	r0, [r4, #32]
   1de64:	sub	r2, r0, #1
   1de68:	str	r2, [r4, #32]
   1de6c:	ldrb	r3, [r4, #25]
   1de70:	ldr	r0, [r4, #20]
   1de74:	ldr	r1, [r4, #16]
   1de78:	mla	r7, r2, r3, r0
   1de7c:	mul	r5, r2, r3
   1de80:	cmp	r7, r1
   1de84:	bls	1def4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x38c>
   1de88:	cmp	r0, r1
   1de8c:	bcc	1dea8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x340>
   1de90:	ldr	r2, [r4, #44]	; 0x2c
   1de94:	mov	r0, r4
   1de98:	mov	r1, #0
   1de9c:	blx	r2
   1dea0:	ldr	r1, [r4, #16]
   1dea4:	ldr	r0, [r4, #20]
   1dea8:	sub	r6, r1, r0
   1deac:	cmp	r6, r5
   1deb0:	bcs	1def4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x38c>
   1deb4:	mov	r1, #32
   1deb8:	mov	r2, r6
   1debc:	bl	12948 <memset@plt>
   1dec0:	ldr	r0, [r4, #20]
   1dec4:	ldr	r2, [r4, #44]	; 0x2c
   1dec8:	mov	r1, #0
   1decc:	add	r0, r0, r6
   1ded0:	str	r0, [r4, #20]
   1ded4:	mov	r0, r4
   1ded8:	blx	r2
   1dedc:	ldr	r1, [r4, #16]
   1dee0:	ldr	r0, [r4, #20]
   1dee4:	sub	r5, r5, r6
   1dee8:	sub	r6, r1, r0
   1deec:	cmp	r5, r6
   1def0:	bhi	1deb4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x34c>
   1def4:	mov	r1, #32
   1def8:	mov	r2, r5
   1defc:	bl	12948 <memset@plt>
   1df00:	ldr	r0, [r4, #20]
   1df04:	add	r0, r0, r5
   1df08:	str	r0, [r4, #20]
   1df0c:	add	r1, r0, #1
   1df10:	str	r1, [r4, #20]
   1df14:	mov	r1, #93	; 0x5d
   1df18:	strb	r1, [r0]
   1df1c:	sub	sp, fp, #28
   1df20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001df24 <flatcc_json_printer_struct_vector_field@@Base>:
   1df24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df28:	add	fp, sp, #28
   1df2c:	sub	sp, sp, #4
   1df30:	mov	r4, r0
   1df34:	mov	r0, #4
   1df38:	add	r0, r0, r2, lsl #1
   1df3c:	ldr	r2, [r1, #8]
   1df40:	cmp	r0, r2
   1df44:	bge	1df64 <flatcc_json_printer_struct_vector_field@@Base+0x40>
   1df48:	ldr	r2, [r1, #4]
   1df4c:	add	r0, r2, r0
   1df50:	ldrh	r0, [r0]
   1df54:	cmp	r0, #0
   1df58:	ldrne	r2, [r1]
   1df5c:	addsne	r6, r2, r0
   1df60:	bne	1df6c <flatcc_json_printer_struct_vector_field@@Base+0x48>
   1df64:	sub	sp, fp, #28
   1df68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1df6c:	ldr	r0, [r1, #16]
   1df70:	ldr	r2, [fp, #8]
   1df74:	add	r7, r0, #1
   1df78:	cmp	r0, #0
   1df7c:	str	r7, [r1, #16]
   1df80:	ldrne	r0, [r4, #20]
   1df84:	addne	r1, r0, #1
   1df88:	strne	r1, [r4, #20]
   1df8c:	movne	r1, #44	; 0x2c
   1df90:	strbne	r1, [r0]
   1df94:	mov	r1, r3
   1df98:	ldr	r0, [r6]
   1df9c:	ldr	r5, [r6, r0]!
   1dfa0:	mov	r0, r4
   1dfa4:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1dfa8:	ldr	r1, [r4, #32]
   1dfac:	ldr	r0, [r4, #20]
   1dfb0:	cmp	r5, #0
   1dfb4:	add	r1, r1, #1
   1dfb8:	str	r1, [r4, #32]
   1dfbc:	add	r1, r0, #1
   1dfc0:	str	r1, [r4, #20]
   1dfc4:	mov	r1, #91	; 0x5b
   1dfc8:	strb	r1, [r0]
   1dfcc:	beq	1e3dc <flatcc_json_printer_struct_vector_field@@Base+0x4b8>
   1dfd0:	ldrb	r1, [r4, #25]
   1dfd4:	ldr	r0, [r4, #20]
   1dfd8:	add	r9, r6, #4
   1dfdc:	cmp	r1, #0
   1dfe0:	beq	1e09c <flatcc_json_printer_struct_vector_field@@Base+0x178>
   1dfe4:	add	r1, r0, #1
   1dfe8:	str	r1, [r4, #20]
   1dfec:	mov	r1, #10
   1dff0:	strb	r1, [r0]
   1dff4:	ldr	r0, [r4, #20]
   1dff8:	ldrb	r2, [r4, #25]
   1dffc:	ldr	r3, [r4, #32]
   1e000:	ldr	r1, [r4, #16]
   1e004:	mla	r7, r3, r2, r0
   1e008:	mul	r6, r3, r2
   1e00c:	cmp	r7, r1
   1e010:	bls	1e080 <flatcc_json_printer_struct_vector_field@@Base+0x15c>
   1e014:	cmp	r0, r1
   1e018:	bcc	1e034 <flatcc_json_printer_struct_vector_field@@Base+0x110>
   1e01c:	ldr	r2, [r4, #44]	; 0x2c
   1e020:	mov	r0, r4
   1e024:	mov	r1, #0
   1e028:	blx	r2
   1e02c:	ldr	r1, [r4, #16]
   1e030:	ldr	r0, [r4, #20]
   1e034:	sub	r7, r1, r0
   1e038:	cmp	r7, r6
   1e03c:	bcs	1e080 <flatcc_json_printer_struct_vector_field@@Base+0x15c>
   1e040:	mov	r1, #32
   1e044:	mov	r2, r7
   1e048:	bl	12948 <memset@plt>
   1e04c:	ldr	r0, [r4, #20]
   1e050:	ldr	r2, [r4, #44]	; 0x2c
   1e054:	mov	r1, #0
   1e058:	add	r0, r0, r7
   1e05c:	str	r0, [r4, #20]
   1e060:	mov	r0, r4
   1e064:	blx	r2
   1e068:	ldr	r1, [r4, #16]
   1e06c:	ldr	r0, [r4, #20]
   1e070:	sub	r6, r6, r7
   1e074:	sub	r7, r1, r0
   1e078:	cmp	r6, r7
   1e07c:	bhi	1e040 <flatcc_json_printer_struct_vector_field@@Base+0x11c>
   1e080:	mov	r1, #32
   1e084:	mov	r2, r6
   1e088:	bl	12948 <memset@plt>
   1e08c:	ldr	r0, [r4, #20]
   1e090:	add	r0, r0, r6
   1e094:	str	r0, [r4, #20]
   1e098:	b	1e0bc <flatcc_json_printer_struct_vector_field@@Base+0x198>
   1e09c:	ldr	r1, [r4, #16]
   1e0a0:	cmp	r0, r1
   1e0a4:	bcc	1e0bc <flatcc_json_printer_struct_vector_field@@Base+0x198>
   1e0a8:	ldr	r2, [r4, #44]	; 0x2c
   1e0ac:	mov	r0, r4
   1e0b0:	mov	r1, #0
   1e0b4:	blx	r2
   1e0b8:	ldr	r0, [r4, #20]
   1e0bc:	add	r1, r0, #1
   1e0c0:	ldr	r2, [fp, #16]
   1e0c4:	str	r1, [r4, #20]
   1e0c8:	ldr	r1, [r4, #32]
   1e0cc:	add	r1, r1, #1
   1e0d0:	str	r1, [r4, #32]
   1e0d4:	mov	r1, #123	; 0x7b
   1e0d8:	strb	r1, [r0]
   1e0dc:	mov	r0, r4
   1e0e0:	mov	r1, r9
   1e0e4:	blx	r2
   1e0e8:	ldrb	r1, [r4, #25]
   1e0ec:	ldr	r0, [r4, #20]
   1e0f0:	cmp	r1, #0
   1e0f4:	beq	1e1b4 <flatcc_json_printer_struct_vector_field@@Base+0x290>
   1e0f8:	add	r1, r0, #1
   1e0fc:	str	r1, [r4, #20]
   1e100:	mov	r1, #10
   1e104:	strb	r1, [r0]
   1e108:	ldr	r0, [r4, #32]
   1e10c:	sub	r2, r0, #1
   1e110:	str	r2, [r4, #32]
   1e114:	ldrb	r3, [r4, #25]
   1e118:	ldr	r0, [r4, #20]
   1e11c:	ldr	r1, [r4, #16]
   1e120:	mla	r7, r2, r3, r0
   1e124:	mul	r6, r2, r3
   1e128:	cmp	r7, r1
   1e12c:	bls	1e19c <flatcc_json_printer_struct_vector_field@@Base+0x278>
   1e130:	cmp	r0, r1
   1e134:	bcc	1e150 <flatcc_json_printer_struct_vector_field@@Base+0x22c>
   1e138:	ldr	r2, [r4, #44]	; 0x2c
   1e13c:	mov	r0, r4
   1e140:	mov	r1, #0
   1e144:	blx	r2
   1e148:	ldr	r1, [r4, #16]
   1e14c:	ldr	r0, [r4, #20]
   1e150:	sub	r7, r1, r0
   1e154:	cmp	r7, r6
   1e158:	bcs	1e19c <flatcc_json_printer_struct_vector_field@@Base+0x278>
   1e15c:	mov	r1, #32
   1e160:	mov	r2, r7
   1e164:	bl	12948 <memset@plt>
   1e168:	ldr	r0, [r4, #20]
   1e16c:	ldr	r2, [r4, #44]	; 0x2c
   1e170:	mov	r1, #0
   1e174:	add	r0, r0, r7
   1e178:	str	r0, [r4, #20]
   1e17c:	mov	r0, r4
   1e180:	blx	r2
   1e184:	ldr	r1, [r4, #16]
   1e188:	ldr	r0, [r4, #20]
   1e18c:	sub	r6, r6, r7
   1e190:	sub	r7, r1, r0
   1e194:	cmp	r6, r7
   1e198:	bhi	1e15c <flatcc_json_printer_struct_vector_field@@Base+0x238>
   1e19c:	mov	r1, #32
   1e1a0:	mov	r2, r6
   1e1a4:	bl	12948 <memset@plt>
   1e1a8:	ldr	r0, [r4, #20]
   1e1ac:	add	r0, r0, r6
   1e1b0:	str	r0, [r4, #20]
   1e1b4:	add	r1, r0, #1
   1e1b8:	mov	sl, #125	; 0x7d
   1e1bc:	subs	r5, r5, #1
   1e1c0:	str	r1, [r4, #20]
   1e1c4:	strb	sl, [r0]
   1e1c8:	beq	1e3dc <flatcc_json_printer_struct_vector_field@@Base+0x4b8>
   1e1cc:	mov	r8, #10
   1e1d0:	ldr	r0, [r4, #20]
   1e1d4:	add	r1, r0, #1
   1e1d8:	str	r1, [r4, #20]
   1e1dc:	mov	r1, #44	; 0x2c
   1e1e0:	strb	r1, [r0]
   1e1e4:	ldr	r0, [fp, #12]
   1e1e8:	ldrb	r1, [r4, #25]
   1e1ec:	add	r9, r9, r0
   1e1f0:	ldr	r0, [r4, #20]
   1e1f4:	cmp	r1, #0
   1e1f8:	beq	1e2b0 <flatcc_json_printer_struct_vector_field@@Base+0x38c>
   1e1fc:	add	r1, r0, #1
   1e200:	str	r1, [r4, #20]
   1e204:	strb	r8, [r0]
   1e208:	ldr	r0, [r4, #20]
   1e20c:	ldrb	r2, [r4, #25]
   1e210:	ldr	r3, [r4, #32]
   1e214:	ldr	r1, [r4, #16]
   1e218:	mla	r7, r3, r2, r0
   1e21c:	mul	r6, r3, r2
   1e220:	cmp	r7, r1
   1e224:	bls	1e294 <flatcc_json_printer_struct_vector_field@@Base+0x370>
   1e228:	cmp	r0, r1
   1e22c:	bcc	1e248 <flatcc_json_printer_struct_vector_field@@Base+0x324>
   1e230:	ldr	r2, [r4, #44]	; 0x2c
   1e234:	mov	r0, r4
   1e238:	mov	r1, #0
   1e23c:	blx	r2
   1e240:	ldr	r1, [r4, #16]
   1e244:	ldr	r0, [r4, #20]
   1e248:	sub	r7, r1, r0
   1e24c:	cmp	r7, r6
   1e250:	bcs	1e294 <flatcc_json_printer_struct_vector_field@@Base+0x370>
   1e254:	mov	r1, #32
   1e258:	mov	r2, r7
   1e25c:	bl	12948 <memset@plt>
   1e260:	ldr	r0, [r4, #20]
   1e264:	ldr	r2, [r4, #44]	; 0x2c
   1e268:	mov	r1, #0
   1e26c:	add	r0, r0, r7
   1e270:	str	r0, [r4, #20]
   1e274:	mov	r0, r4
   1e278:	blx	r2
   1e27c:	ldr	r1, [r4, #16]
   1e280:	ldr	r0, [r4, #20]
   1e284:	sub	r6, r6, r7
   1e288:	sub	r7, r1, r0
   1e28c:	cmp	r6, r7
   1e290:	bhi	1e254 <flatcc_json_printer_struct_vector_field@@Base+0x330>
   1e294:	mov	r1, #32
   1e298:	mov	r2, r6
   1e29c:	bl	12948 <memset@plt>
   1e2a0:	ldr	r0, [r4, #20]
   1e2a4:	add	r0, r0, r6
   1e2a8:	str	r0, [r4, #20]
   1e2ac:	b	1e2d0 <flatcc_json_printer_struct_vector_field@@Base+0x3ac>
   1e2b0:	ldr	r1, [r4, #16]
   1e2b4:	cmp	r0, r1
   1e2b8:	bcc	1e2d0 <flatcc_json_printer_struct_vector_field@@Base+0x3ac>
   1e2bc:	ldr	r2, [r4, #44]	; 0x2c
   1e2c0:	mov	r0, r4
   1e2c4:	mov	r1, #0
   1e2c8:	blx	r2
   1e2cc:	ldr	r0, [r4, #20]
   1e2d0:	add	r1, r0, #1
   1e2d4:	ldr	r2, [fp, #16]
   1e2d8:	sub	r5, r5, #1
   1e2dc:	str	r1, [r4, #20]
   1e2e0:	ldr	r1, [r4, #32]
   1e2e4:	add	r1, r1, #1
   1e2e8:	str	r1, [r4, #32]
   1e2ec:	mov	r1, #123	; 0x7b
   1e2f0:	strb	r1, [r0]
   1e2f4:	mov	r0, r4
   1e2f8:	mov	r1, r9
   1e2fc:	blx	r2
   1e300:	ldrb	r1, [r4, #25]
   1e304:	ldr	r0, [r4, #20]
   1e308:	cmp	r1, #0
   1e30c:	beq	1e3c8 <flatcc_json_printer_struct_vector_field@@Base+0x4a4>
   1e310:	add	r1, r0, #1
   1e314:	str	r1, [r4, #20]
   1e318:	strb	r8, [r0]
   1e31c:	ldr	r0, [r4, #32]
   1e320:	sub	r2, r0, #1
   1e324:	str	r2, [r4, #32]
   1e328:	ldrb	r3, [r4, #25]
   1e32c:	ldr	r0, [r4, #20]
   1e330:	ldr	r1, [r4, #16]
   1e334:	mla	r7, r2, r3, r0
   1e338:	mul	r6, r2, r3
   1e33c:	cmp	r7, r1
   1e340:	bls	1e3b0 <flatcc_json_printer_struct_vector_field@@Base+0x48c>
   1e344:	cmp	r0, r1
   1e348:	bcc	1e364 <flatcc_json_printer_struct_vector_field@@Base+0x440>
   1e34c:	ldr	r2, [r4, #44]	; 0x2c
   1e350:	mov	r0, r4
   1e354:	mov	r1, #0
   1e358:	blx	r2
   1e35c:	ldr	r1, [r4, #16]
   1e360:	ldr	r0, [r4, #20]
   1e364:	sub	r7, r1, r0
   1e368:	cmp	r7, r6
   1e36c:	bcs	1e3b0 <flatcc_json_printer_struct_vector_field@@Base+0x48c>
   1e370:	mov	r1, #32
   1e374:	mov	r2, r7
   1e378:	bl	12948 <memset@plt>
   1e37c:	ldr	r0, [r4, #20]
   1e380:	ldr	r2, [r4, #44]	; 0x2c
   1e384:	mov	r1, #0
   1e388:	add	r0, r0, r7
   1e38c:	str	r0, [r4, #20]
   1e390:	mov	r0, r4
   1e394:	blx	r2
   1e398:	ldr	r1, [r4, #16]
   1e39c:	ldr	r0, [r4, #20]
   1e3a0:	sub	r6, r6, r7
   1e3a4:	sub	r7, r1, r0
   1e3a8:	cmp	r6, r7
   1e3ac:	bhi	1e370 <flatcc_json_printer_struct_vector_field@@Base+0x44c>
   1e3b0:	mov	r1, #32
   1e3b4:	mov	r2, r6
   1e3b8:	bl	12948 <memset@plt>
   1e3bc:	ldr	r0, [r4, #20]
   1e3c0:	add	r0, r0, r6
   1e3c4:	str	r0, [r4, #20]
   1e3c8:	add	r1, r0, #1
   1e3cc:	cmp	r5, #0
   1e3d0:	str	r1, [r4, #20]
   1e3d4:	strb	sl, [r0]
   1e3d8:	bne	1e1d0 <flatcc_json_printer_struct_vector_field@@Base+0x2ac>
   1e3dc:	ldrb	r1, [r4, #25]
   1e3e0:	ldr	r0, [r4, #20]
   1e3e4:	cmp	r1, #0
   1e3e8:	beq	1e4a8 <flatcc_json_printer_struct_vector_field@@Base+0x584>
   1e3ec:	add	r1, r0, #1
   1e3f0:	str	r1, [r4, #20]
   1e3f4:	mov	r1, #10
   1e3f8:	strb	r1, [r0]
   1e3fc:	ldr	r0, [r4, #32]
   1e400:	sub	r2, r0, #1
   1e404:	str	r2, [r4, #32]
   1e408:	ldrb	r3, [r4, #25]
   1e40c:	ldr	r0, [r4, #20]
   1e410:	ldr	r1, [r4, #16]
   1e414:	mla	r7, r2, r3, r0
   1e418:	mul	r5, r2, r3
   1e41c:	cmp	r7, r1
   1e420:	bls	1e490 <flatcc_json_printer_struct_vector_field@@Base+0x56c>
   1e424:	cmp	r0, r1
   1e428:	bcc	1e444 <flatcc_json_printer_struct_vector_field@@Base+0x520>
   1e42c:	ldr	r2, [r4, #44]	; 0x2c
   1e430:	mov	r0, r4
   1e434:	mov	r1, #0
   1e438:	blx	r2
   1e43c:	ldr	r1, [r4, #16]
   1e440:	ldr	r0, [r4, #20]
   1e444:	sub	r6, r1, r0
   1e448:	cmp	r6, r5
   1e44c:	bcs	1e490 <flatcc_json_printer_struct_vector_field@@Base+0x56c>
   1e450:	mov	r1, #32
   1e454:	mov	r2, r6
   1e458:	bl	12948 <memset@plt>
   1e45c:	ldr	r0, [r4, #20]
   1e460:	ldr	r2, [r4, #44]	; 0x2c
   1e464:	mov	r1, #0
   1e468:	add	r0, r0, r6
   1e46c:	str	r0, [r4, #20]
   1e470:	mov	r0, r4
   1e474:	blx	r2
   1e478:	ldr	r1, [r4, #16]
   1e47c:	ldr	r0, [r4, #20]
   1e480:	sub	r5, r5, r6
   1e484:	sub	r6, r1, r0
   1e488:	cmp	r5, r6
   1e48c:	bhi	1e450 <flatcc_json_printer_struct_vector_field@@Base+0x52c>
   1e490:	mov	r1, #32
   1e494:	mov	r2, r5
   1e498:	bl	12948 <memset@plt>
   1e49c:	ldr	r0, [r4, #20]
   1e4a0:	add	r0, r0, r5
   1e4a4:	str	r0, [r4, #20]
   1e4a8:	add	r1, r0, #1
   1e4ac:	str	r1, [r4, #20]
   1e4b0:	mov	r1, #93	; 0x5d
   1e4b4:	strb	r1, [r0]
   1e4b8:	sub	sp, fp, #28
   1e4bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e4c0 <flatcc_json_printer_string_vector_field@@Base>:
   1e4c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e4c4:	add	fp, sp, #28
   1e4c8:	sub	sp, sp, #4
   1e4cc:	mov	r4, r0
   1e4d0:	mov	r0, #4
   1e4d4:	add	r0, r0, r2, lsl #1
   1e4d8:	ldr	r2, [r1, #8]
   1e4dc:	cmp	r0, r2
   1e4e0:	bge	1e500 <flatcc_json_printer_string_vector_field@@Base+0x40>
   1e4e4:	ldr	r2, [r1, #4]
   1e4e8:	add	r0, r2, r0
   1e4ec:	ldrh	r0, [r0]
   1e4f0:	cmp	r0, #0
   1e4f4:	ldrne	r2, [r1]
   1e4f8:	addsne	r5, r2, r0
   1e4fc:	bne	1e508 <flatcc_json_printer_string_vector_field@@Base+0x48>
   1e500:	sub	sp, fp, #28
   1e504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e508:	ldr	r0, [r1, #16]
   1e50c:	ldr	r2, [fp, #8]
   1e510:	add	r7, r0, #1
   1e514:	cmp	r0, #0
   1e518:	str	r7, [r1, #16]
   1e51c:	ldrne	r0, [r4, #20]
   1e520:	addne	r1, r0, #1
   1e524:	strne	r1, [r4, #20]
   1e528:	movne	r1, #44	; 0x2c
   1e52c:	strbne	r1, [r0]
   1e530:	mov	r1, r3
   1e534:	ldr	r0, [r5]
   1e538:	ldr	r8, [r5, r0]!
   1e53c:	mov	r0, r4
   1e540:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1e544:	ldr	r1, [r4, #32]
   1e548:	ldr	r0, [r4, #20]
   1e54c:	cmp	r8, #0
   1e550:	add	r1, r1, #1
   1e554:	str	r1, [r4, #32]
   1e558:	add	r1, r0, #1
   1e55c:	str	r1, [r4, #20]
   1e560:	mov	r1, #91	; 0x5b
   1e564:	strb	r1, [r0]
   1e568:	beq	1e794 <flatcc_json_printer_string_vector_field@@Base+0x2d4>
   1e56c:	ldrb	r1, [r4, #25]
   1e570:	ldr	r0, [r4, #20]
   1e574:	add	r9, r5, #4
   1e578:	cmp	r1, #0
   1e57c:	beq	1e638 <flatcc_json_printer_string_vector_field@@Base+0x178>
   1e580:	add	r1, r0, #1
   1e584:	str	r1, [r4, #20]
   1e588:	mov	r1, #10
   1e58c:	strb	r1, [r0]
   1e590:	ldr	r0, [r4, #20]
   1e594:	ldrb	r2, [r4, #25]
   1e598:	ldr	r3, [r4, #32]
   1e59c:	ldr	r1, [r4, #16]
   1e5a0:	mla	r7, r3, r2, r0
   1e5a4:	mul	r5, r3, r2
   1e5a8:	cmp	r7, r1
   1e5ac:	bls	1e61c <flatcc_json_printer_string_vector_field@@Base+0x15c>
   1e5b0:	cmp	r0, r1
   1e5b4:	bcc	1e5d0 <flatcc_json_printer_string_vector_field@@Base+0x110>
   1e5b8:	ldr	r2, [r4, #44]	; 0x2c
   1e5bc:	mov	r0, r4
   1e5c0:	mov	r1, #0
   1e5c4:	blx	r2
   1e5c8:	ldr	r1, [r4, #16]
   1e5cc:	ldr	r0, [r4, #20]
   1e5d0:	sub	r6, r1, r0
   1e5d4:	cmp	r6, r5
   1e5d8:	bcs	1e61c <flatcc_json_printer_string_vector_field@@Base+0x15c>
   1e5dc:	mov	r1, #32
   1e5e0:	mov	r2, r6
   1e5e4:	bl	12948 <memset@plt>
   1e5e8:	ldr	r0, [r4, #20]
   1e5ec:	ldr	r2, [r4, #44]	; 0x2c
   1e5f0:	mov	r1, #0
   1e5f4:	add	r0, r0, r6
   1e5f8:	str	r0, [r4, #20]
   1e5fc:	mov	r0, r4
   1e600:	blx	r2
   1e604:	ldr	r1, [r4, #16]
   1e608:	ldr	r0, [r4, #20]
   1e60c:	sub	r5, r5, r6
   1e610:	sub	r6, r1, r0
   1e614:	cmp	r5, r6
   1e618:	bhi	1e5dc <flatcc_json_printer_string_vector_field@@Base+0x11c>
   1e61c:	mov	r1, #32
   1e620:	mov	r2, r5
   1e624:	bl	12948 <memset@plt>
   1e628:	ldr	r0, [r4, #20]
   1e62c:	add	r0, r0, r5
   1e630:	str	r0, [r4, #20]
   1e634:	b	1e654 <flatcc_json_printer_string_vector_field@@Base+0x194>
   1e638:	ldr	r1, [r4, #16]
   1e63c:	cmp	r0, r1
   1e640:	bcc	1e654 <flatcc_json_printer_string_vector_field@@Base+0x194>
   1e644:	ldr	r2, [r4, #44]	; 0x2c
   1e648:	mov	r0, r4
   1e64c:	mov	r1, #0
   1e650:	blx	r2
   1e654:	ldr	r0, [r9]
   1e658:	mov	r1, r9
   1e65c:	ldr	r2, [r1, r0]!
   1e660:	mov	r0, r4
   1e664:	add	r1, r1, #4
   1e668:	bl	14dd4 <flatcc_json_printer_string@@Base+0x4>
   1e66c:	subs	r7, r8, #1
   1e670:	beq	1e794 <flatcc_json_printer_string_vector_field@@Base+0x2d4>
   1e674:	mov	r8, #44	; 0x2c
   1e678:	mov	sl, #10
   1e67c:	ldr	r0, [r4, #20]
   1e680:	add	r9, r9, #4
   1e684:	sub	r7, r7, #1
   1e688:	add	r1, r0, #1
   1e68c:	str	r1, [r4, #20]
   1e690:	strb	r8, [r0]
   1e694:	ldrb	r1, [r4, #25]
   1e698:	ldr	r0, [r4, #20]
   1e69c:	cmp	r1, #0
   1e6a0:	beq	1e758 <flatcc_json_printer_string_vector_field@@Base+0x298>
   1e6a4:	add	r1, r0, #1
   1e6a8:	str	r1, [r4, #20]
   1e6ac:	strb	sl, [r0]
   1e6b0:	ldr	r0, [r4, #20]
   1e6b4:	ldrb	r2, [r4, #25]
   1e6b8:	ldr	r3, [r4, #32]
   1e6bc:	ldr	r1, [r4, #16]
   1e6c0:	mla	r6, r3, r2, r0
   1e6c4:	mul	r5, r3, r2
   1e6c8:	cmp	r6, r1
   1e6cc:	bls	1e73c <flatcc_json_printer_string_vector_field@@Base+0x27c>
   1e6d0:	cmp	r0, r1
   1e6d4:	bcc	1e6f0 <flatcc_json_printer_string_vector_field@@Base+0x230>
   1e6d8:	ldr	r2, [r4, #44]	; 0x2c
   1e6dc:	mov	r0, r4
   1e6e0:	mov	r1, #0
   1e6e4:	blx	r2
   1e6e8:	ldr	r1, [r4, #16]
   1e6ec:	ldr	r0, [r4, #20]
   1e6f0:	sub	r6, r1, r0
   1e6f4:	cmp	r6, r5
   1e6f8:	bcs	1e73c <flatcc_json_printer_string_vector_field@@Base+0x27c>
   1e6fc:	mov	r1, #32
   1e700:	mov	r2, r6
   1e704:	bl	12948 <memset@plt>
   1e708:	ldr	r0, [r4, #20]
   1e70c:	ldr	r2, [r4, #44]	; 0x2c
   1e710:	mov	r1, #0
   1e714:	add	r0, r0, r6
   1e718:	str	r0, [r4, #20]
   1e71c:	mov	r0, r4
   1e720:	blx	r2
   1e724:	ldr	r1, [r4, #16]
   1e728:	ldr	r0, [r4, #20]
   1e72c:	sub	r5, r5, r6
   1e730:	sub	r6, r1, r0
   1e734:	cmp	r5, r6
   1e738:	bhi	1e6fc <flatcc_json_printer_string_vector_field@@Base+0x23c>
   1e73c:	mov	r1, #32
   1e740:	mov	r2, r5
   1e744:	bl	12948 <memset@plt>
   1e748:	ldr	r0, [r4, #20]
   1e74c:	add	r0, r0, r5
   1e750:	str	r0, [r4, #20]
   1e754:	b	1e774 <flatcc_json_printer_string_vector_field@@Base+0x2b4>
   1e758:	ldr	r1, [r4, #16]
   1e75c:	cmp	r0, r1
   1e760:	bcc	1e774 <flatcc_json_printer_string_vector_field@@Base+0x2b4>
   1e764:	ldr	r2, [r4, #44]	; 0x2c
   1e768:	mov	r0, r4
   1e76c:	mov	r1, #0
   1e770:	blx	r2
   1e774:	ldr	r0, [r9]
   1e778:	mov	r1, r9
   1e77c:	ldr	r2, [r1, r0]!
   1e780:	mov	r0, r4
   1e784:	add	r1, r1, #4
   1e788:	bl	14dd4 <flatcc_json_printer_string@@Base+0x4>
   1e78c:	cmp	r7, #0
   1e790:	bne	1e67c <flatcc_json_printer_string_vector_field@@Base+0x1bc>
   1e794:	ldrb	r1, [r4, #25]
   1e798:	ldr	r0, [r4, #20]
   1e79c:	cmp	r1, #0
   1e7a0:	beq	1e860 <flatcc_json_printer_string_vector_field@@Base+0x3a0>
   1e7a4:	add	r1, r0, #1
   1e7a8:	str	r1, [r4, #20]
   1e7ac:	mov	r1, #10
   1e7b0:	strb	r1, [r0]
   1e7b4:	ldr	r0, [r4, #32]
   1e7b8:	sub	r2, r0, #1
   1e7bc:	str	r2, [r4, #32]
   1e7c0:	ldrb	r3, [r4, #25]
   1e7c4:	ldr	r0, [r4, #20]
   1e7c8:	ldr	r1, [r4, #16]
   1e7cc:	mla	r7, r2, r3, r0
   1e7d0:	mul	r5, r2, r3
   1e7d4:	cmp	r7, r1
   1e7d8:	bls	1e848 <flatcc_json_printer_string_vector_field@@Base+0x388>
   1e7dc:	cmp	r0, r1
   1e7e0:	bcc	1e7fc <flatcc_json_printer_string_vector_field@@Base+0x33c>
   1e7e4:	ldr	r2, [r4, #44]	; 0x2c
   1e7e8:	mov	r0, r4
   1e7ec:	mov	r1, #0
   1e7f0:	blx	r2
   1e7f4:	ldr	r1, [r4, #16]
   1e7f8:	ldr	r0, [r4, #20]
   1e7fc:	sub	r6, r1, r0
   1e800:	cmp	r6, r5
   1e804:	bcs	1e848 <flatcc_json_printer_string_vector_field@@Base+0x388>
   1e808:	mov	r1, #32
   1e80c:	mov	r2, r6
   1e810:	bl	12948 <memset@plt>
   1e814:	ldr	r0, [r4, #20]
   1e818:	ldr	r2, [r4, #44]	; 0x2c
   1e81c:	mov	r1, #0
   1e820:	add	r0, r0, r6
   1e824:	str	r0, [r4, #20]
   1e828:	mov	r0, r4
   1e82c:	blx	r2
   1e830:	ldr	r1, [r4, #16]
   1e834:	ldr	r0, [r4, #20]
   1e838:	sub	r5, r5, r6
   1e83c:	sub	r6, r1, r0
   1e840:	cmp	r5, r6
   1e844:	bhi	1e808 <flatcc_json_printer_string_vector_field@@Base+0x348>
   1e848:	mov	r1, #32
   1e84c:	mov	r2, r5
   1e850:	bl	12948 <memset@plt>
   1e854:	ldr	r0, [r4, #20]
   1e858:	add	r0, r0, r5
   1e85c:	str	r0, [r4, #20]
   1e860:	add	r1, r0, #1
   1e864:	str	r1, [r4, #20]
   1e868:	mov	r1, #93	; 0x5d
   1e86c:	strb	r1, [r0]
   1e870:	sub	sp, fp, #28
   1e874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e878 <flatcc_json_printer_table_vector_field@@Base>:
   1e878:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e87c:	add	fp, sp, #28
   1e880:	sub	sp, sp, #20
   1e884:	mov	sl, r1
   1e888:	ldr	r1, [r1, #8]
   1e88c:	mov	r4, r0
   1e890:	mov	r0, #4
   1e894:	add	r0, r0, r2, lsl #1
   1e898:	cmp	r0, r1
   1e89c:	bge	1e8bc <flatcc_json_printer_table_vector_field@@Base+0x44>
   1e8a0:	ldr	r1, [sl, #4]
   1e8a4:	add	r0, r1, r0
   1e8a8:	ldrh	r0, [r0]
   1e8ac:	cmp	r0, #0
   1e8b0:	ldrne	r1, [sl]
   1e8b4:	addsne	r5, r1, r0
   1e8b8:	bne	1e8c4 <flatcc_json_printer_table_vector_field@@Base+0x4c>
   1e8bc:	sub	sp, fp, #28
   1e8c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e8c4:	ldr	r0, [sl, #16]
   1e8c8:	ldr	r2, [fp, #8]
   1e8cc:	add	r1, r0, #1
   1e8d0:	cmp	r0, #0
   1e8d4:	str	r1, [sl, #16]
   1e8d8:	ldrne	r0, [r4, #20]
   1e8dc:	addne	r1, r0, #1
   1e8e0:	strne	r1, [r4, #20]
   1e8e4:	movne	r1, #44	; 0x2c
   1e8e8:	strbne	r1, [r0]
   1e8ec:	mov	r1, r3
   1e8f0:	ldr	r0, [r5]
   1e8f4:	ldr	r8, [r5, r0]!
   1e8f8:	mov	r0, r4
   1e8fc:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1e900:	ldr	r1, [r4, #32]
   1e904:	ldr	r0, [r4, #20]
   1e908:	cmp	r8, #0
   1e90c:	add	r1, r1, #1
   1e910:	str	r1, [r4, #32]
   1e914:	add	r1, r0, #1
   1e918:	str	r1, [r4, #20]
   1e91c:	mov	r1, #91	; 0x5b
   1e920:	strb	r1, [r0]
   1e924:	beq	1ec2c <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   1e928:	ldr	r0, [sl, #12]
   1e92c:	ldr	r6, [fp, #12]
   1e930:	add	r5, r5, #4
   1e934:	subs	r0, r0, #1
   1e938:	beq	1ea80 <flatcc_json_printer_table_vector_field@@Base+0x208>
   1e93c:	ldr	r3, [r4, #32]
   1e940:	ldr	r2, [r4, #20]
   1e944:	ldr	r1, [r5]
   1e948:	add	r3, r3, #1
   1e94c:	add	r1, r5, r1
   1e950:	str	r3, [r4, #32]
   1e954:	add	r3, r2, #1
   1e958:	str	r3, [r4, #20]
   1e95c:	mov	r3, #123	; 0x7b
   1e960:	strb	r3, [r2]
   1e964:	str	r0, [sp, #12]
   1e968:	mov	r0, #0
   1e96c:	str	r0, [sp, #16]
   1e970:	str	r1, [sp]
   1e974:	ldr	r0, [r1]
   1e978:	sub	r2, r1, r0
   1e97c:	str	r2, [sp, #4]
   1e980:	ldrh	r0, [r1, -r0]
   1e984:	mov	r1, sp
   1e988:	str	r0, [sp, #8]
   1e98c:	mov	r0, r4
   1e990:	blx	r6
   1e994:	ldrb	r1, [r4, #25]
   1e998:	ldr	r0, [r4, #20]
   1e99c:	cmp	r1, #0
   1e9a0:	beq	1ea64 <flatcc_json_printer_table_vector_field@@Base+0x1ec>
   1e9a4:	add	r1, r0, #1
   1e9a8:	str	r1, [r4, #20]
   1e9ac:	mov	r1, #10
   1e9b0:	strb	r1, [r0]
   1e9b4:	ldr	r0, [r4, #32]
   1e9b8:	sub	r2, r0, #1
   1e9bc:	str	r2, [r4, #32]
   1e9c0:	ldrb	r3, [r4, #25]
   1e9c4:	ldr	r0, [r4, #20]
   1e9c8:	ldr	r1, [r4, #16]
   1e9cc:	mla	r7, r2, r3, r0
   1e9d0:	mul	r6, r2, r3
   1e9d4:	cmp	r7, r1
   1e9d8:	bls	1ea48 <flatcc_json_printer_table_vector_field@@Base+0x1d0>
   1e9dc:	cmp	r0, r1
   1e9e0:	bcc	1e9fc <flatcc_json_printer_table_vector_field@@Base+0x184>
   1e9e4:	ldr	r2, [r4, #44]	; 0x2c
   1e9e8:	mov	r0, r4
   1e9ec:	mov	r1, #0
   1e9f0:	blx	r2
   1e9f4:	ldr	r1, [r4, #16]
   1e9f8:	ldr	r0, [r4, #20]
   1e9fc:	sub	r7, r1, r0
   1ea00:	cmp	r7, r6
   1ea04:	bcs	1ea48 <flatcc_json_printer_table_vector_field@@Base+0x1d0>
   1ea08:	mov	r1, #32
   1ea0c:	mov	r2, r7
   1ea10:	bl	12948 <memset@plt>
   1ea14:	ldr	r0, [r4, #20]
   1ea18:	ldr	r2, [r4, #44]	; 0x2c
   1ea1c:	mov	r1, #0
   1ea20:	add	r0, r0, r7
   1ea24:	str	r0, [r4, #20]
   1ea28:	mov	r0, r4
   1ea2c:	blx	r2
   1ea30:	ldr	r1, [r4, #16]
   1ea34:	ldr	r0, [r4, #20]
   1ea38:	sub	r6, r6, r7
   1ea3c:	sub	r7, r1, r0
   1ea40:	cmp	r6, r7
   1ea44:	bhi	1ea08 <flatcc_json_printer_table_vector_field@@Base+0x190>
   1ea48:	mov	r1, #32
   1ea4c:	mov	r2, r6
   1ea50:	bl	12948 <memset@plt>
   1ea54:	ldr	r0, [r4, #20]
   1ea58:	add	r0, r0, r6
   1ea5c:	ldr	r6, [fp, #12]
   1ea60:	str	r0, [r4, #20]
   1ea64:	add	r1, r0, #1
   1ea68:	str	r1, [r4, #20]
   1ea6c:	mov	r1, #125	; 0x7d
   1ea70:	strb	r1, [r0]
   1ea74:	subs	r9, r8, #1
   1ea78:	bne	1ea98 <flatcc_json_printer_table_vector_field@@Base+0x220>
   1ea7c:	b	1ec2c <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   1ea80:	ldr	r0, [r4, #36]	; 0x24
   1ea84:	cmp	r0, #0
   1ea88:	moveq	r0, #2
   1ea8c:	streq	r0, [r4, #36]	; 0x24
   1ea90:	subs	r9, r8, #1
   1ea94:	beq	1ec2c <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   1ea98:	mov	r8, #44	; 0x2c
   1ea9c:	ldr	r0, [r4, #20]
   1eaa0:	sub	r9, r9, #1
   1eaa4:	add	r1, r0, #1
   1eaa8:	str	r1, [r4, #20]
   1eaac:	strb	r8, [r0]
   1eab0:	ldr	r0, [sl, #12]
   1eab4:	ldr	r1, [r5, #4]!
   1eab8:	subs	r0, r0, #1
   1eabc:	beq	1ebdc <flatcc_json_printer_table_vector_field@@Base+0x364>
   1eac0:	ldr	r3, [r4, #32]
   1eac4:	ldr	r2, [r4, #20]
   1eac8:	add	r1, r5, r1
   1eacc:	add	r3, r3, #1
   1ead0:	str	r3, [r4, #32]
   1ead4:	add	r3, r2, #1
   1ead8:	str	r3, [r4, #20]
   1eadc:	mov	r3, #123	; 0x7b
   1eae0:	strb	r3, [r2]
   1eae4:	str	r0, [sp, #12]
   1eae8:	mov	r0, #0
   1eaec:	str	r0, [sp, #16]
   1eaf0:	str	r1, [sp]
   1eaf4:	ldr	r0, [r1]
   1eaf8:	sub	r2, r1, r0
   1eafc:	str	r2, [sp, #4]
   1eb00:	ldrh	r0, [r1, -r0]
   1eb04:	mov	r1, sp
   1eb08:	str	r0, [sp, #8]
   1eb0c:	mov	r0, r4
   1eb10:	blx	r6
   1eb14:	ldrb	r1, [r4, #25]
   1eb18:	ldr	r0, [r4, #20]
   1eb1c:	cmp	r1, #0
   1eb20:	beq	1ec14 <flatcc_json_printer_table_vector_field@@Base+0x39c>
   1eb24:	add	r1, r0, #1
   1eb28:	str	r1, [r4, #20]
   1eb2c:	mov	r1, #10
   1eb30:	strb	r1, [r0]
   1eb34:	ldr	r0, [r4, #32]
   1eb38:	sub	r2, r0, #1
   1eb3c:	str	r2, [r4, #32]
   1eb40:	ldrb	r3, [r4, #25]
   1eb44:	ldr	r0, [r4, #20]
   1eb48:	ldr	r1, [r4, #16]
   1eb4c:	mla	r6, r2, r3, r0
   1eb50:	mul	r7, r2, r3
   1eb54:	cmp	r6, r1
   1eb58:	bls	1ebf8 <flatcc_json_printer_table_vector_field@@Base+0x380>
   1eb5c:	cmp	r0, r1
   1eb60:	bcc	1eb7c <flatcc_json_printer_table_vector_field@@Base+0x304>
   1eb64:	ldr	r2, [r4, #44]	; 0x2c
   1eb68:	mov	r0, r4
   1eb6c:	mov	r1, #0
   1eb70:	blx	r2
   1eb74:	ldr	r1, [r4, #16]
   1eb78:	ldr	r0, [r4, #20]
   1eb7c:	sub	r6, r1, r0
   1eb80:	cmp	r6, r7
   1eb84:	bcs	1ebc8 <flatcc_json_printer_table_vector_field@@Base+0x350>
   1eb88:	mov	r1, #32
   1eb8c:	mov	r2, r6
   1eb90:	bl	12948 <memset@plt>
   1eb94:	ldr	r0, [r4, #20]
   1eb98:	ldr	r2, [r4, #44]	; 0x2c
   1eb9c:	mov	r1, #0
   1eba0:	add	r0, r0, r6
   1eba4:	str	r0, [r4, #20]
   1eba8:	mov	r0, r4
   1ebac:	blx	r2
   1ebb0:	ldr	r1, [r4, #16]
   1ebb4:	ldr	r0, [r4, #20]
   1ebb8:	sub	r7, r7, r6
   1ebbc:	sub	r6, r1, r0
   1ebc0:	cmp	r7, r6
   1ebc4:	bhi	1eb88 <flatcc_json_printer_table_vector_field@@Base+0x310>
   1ebc8:	ldr	r6, [fp, #12]
   1ebcc:	mov	r1, #32
   1ebd0:	mov	r2, r7
   1ebd4:	bl	12948 <memset@plt>
   1ebd8:	b	1ec08 <flatcc_json_printer_table_vector_field@@Base+0x390>
   1ebdc:	ldr	r0, [r4, #36]	; 0x24
   1ebe0:	cmp	r0, #0
   1ebe4:	moveq	r0, #2
   1ebe8:	streq	r0, [r4, #36]	; 0x24
   1ebec:	cmp	r9, #0
   1ebf0:	bne	1ea9c <flatcc_json_printer_table_vector_field@@Base+0x224>
   1ebf4:	b	1ec2c <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   1ebf8:	mov	r1, #32
   1ebfc:	mov	r2, r7
   1ec00:	bl	12948 <memset@plt>
   1ec04:	ldr	r6, [fp, #12]
   1ec08:	ldr	r0, [r4, #20]
   1ec0c:	add	r0, r0, r7
   1ec10:	str	r0, [r4, #20]
   1ec14:	add	r1, r0, #1
   1ec18:	str	r1, [r4, #20]
   1ec1c:	mov	r1, #125	; 0x7d
   1ec20:	strb	r1, [r0]
   1ec24:	cmp	r9, #0
   1ec28:	bne	1ea9c <flatcc_json_printer_table_vector_field@@Base+0x224>
   1ec2c:	ldrb	r1, [r4, #25]
   1ec30:	ldr	r0, [r4, #20]
   1ec34:	cmp	r1, #0
   1ec38:	beq	1ecf8 <flatcc_json_printer_table_vector_field@@Base+0x480>
   1ec3c:	add	r1, r0, #1
   1ec40:	str	r1, [r4, #20]
   1ec44:	mov	r1, #10
   1ec48:	strb	r1, [r0]
   1ec4c:	ldr	r0, [r4, #32]
   1ec50:	sub	r2, r0, #1
   1ec54:	str	r2, [r4, #32]
   1ec58:	ldrb	r3, [r4, #25]
   1ec5c:	ldr	r0, [r4, #20]
   1ec60:	ldr	r1, [r4, #16]
   1ec64:	mla	r7, r2, r3, r0
   1ec68:	mul	r5, r2, r3
   1ec6c:	cmp	r7, r1
   1ec70:	bls	1ece0 <flatcc_json_printer_table_vector_field@@Base+0x468>
   1ec74:	cmp	r0, r1
   1ec78:	bcc	1ec94 <flatcc_json_printer_table_vector_field@@Base+0x41c>
   1ec7c:	ldr	r2, [r4, #44]	; 0x2c
   1ec80:	mov	r0, r4
   1ec84:	mov	r1, #0
   1ec88:	blx	r2
   1ec8c:	ldr	r1, [r4, #16]
   1ec90:	ldr	r0, [r4, #20]
   1ec94:	sub	r6, r1, r0
   1ec98:	cmp	r6, r5
   1ec9c:	bcs	1ece0 <flatcc_json_printer_table_vector_field@@Base+0x468>
   1eca0:	mov	r1, #32
   1eca4:	mov	r2, r6
   1eca8:	bl	12948 <memset@plt>
   1ecac:	ldr	r0, [r4, #20]
   1ecb0:	ldr	r2, [r4, #44]	; 0x2c
   1ecb4:	mov	r1, #0
   1ecb8:	add	r0, r0, r6
   1ecbc:	str	r0, [r4, #20]
   1ecc0:	mov	r0, r4
   1ecc4:	blx	r2
   1ecc8:	ldr	r1, [r4, #16]
   1eccc:	ldr	r0, [r4, #20]
   1ecd0:	sub	r5, r5, r6
   1ecd4:	sub	r6, r1, r0
   1ecd8:	cmp	r5, r6
   1ecdc:	bhi	1eca0 <flatcc_json_printer_table_vector_field@@Base+0x428>
   1ece0:	mov	r1, #32
   1ece4:	mov	r2, r5
   1ece8:	bl	12948 <memset@plt>
   1ecec:	ldr	r0, [r4, #20]
   1ecf0:	add	r0, r0, r5
   1ecf4:	str	r0, [r4, #20]
   1ecf8:	add	r1, r0, #1
   1ecfc:	str	r1, [r4, #20]
   1ed00:	mov	r1, #93	; 0x5d
   1ed04:	strb	r1, [r0]
   1ed08:	sub	sp, fp, #28
   1ed0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ed10 <flatcc_json_printer_union_vector_field@@Base>:
   1ed10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed14:	add	fp, sp, #28
   1ed18:	sub	sp, sp, #140	; 0x8c
   1ed1c:	mov	r6, r1
   1ed20:	mov	r9, r0
   1ed24:	sub	r1, r2, #1
   1ed28:	mov	r0, #4
   1ed2c:	mov	r4, r3
   1ed30:	mov	r5, #0
   1ed34:	mov	r8, #0
   1ed38:	str	r1, [sp, #8]
   1ed3c:	add	r3, r0, r1, lsl #1
   1ed40:	ldr	r1, [r6, #8]
   1ed44:	cmp	r3, r1
   1ed48:	bge	1ed68 <flatcc_json_printer_union_vector_field@@Base+0x58>
   1ed4c:	ldr	r7, [r6, #4]
   1ed50:	mov	r8, #0
   1ed54:	add	r3, r7, r3
   1ed58:	ldrh	r3, [r3]
   1ed5c:	cmp	r3, #0
   1ed60:	ldrne	r7, [r6]
   1ed64:	addne	r8, r7, r3
   1ed68:	ldr	sl, [fp, #8]
   1ed6c:	add	r0, r0, r2, lsl #1
   1ed70:	cmp	r0, r1
   1ed74:	bge	1ed90 <flatcc_json_printer_union_vector_field@@Base+0x80>
   1ed78:	ldr	r1, [r6, #4]
   1ed7c:	add	r0, r1, r0
   1ed80:	ldrh	r0, [r0]
   1ed84:	cmp	r0, #0
   1ed88:	ldrne	r1, [r6]
   1ed8c:	addne	r5, r1, r0
   1ed90:	ldr	r0, [r6, #12]
   1ed94:	cmp	sl, #101	; 0x65
   1ed98:	str	r5, [sp, #16]
   1ed9c:	str	r0, [sp, #24]
   1eda0:	bge	1f0b8 <flatcc_json_printer_union_vector_field@@Base+0x3a8>
   1eda4:	add	r5, sp, #32
   1eda8:	mov	r1, r4
   1edac:	mov	r2, sl
   1edb0:	str	r4, [sp, #12]
   1edb4:	mov	r0, r5
   1edb8:	bl	128b8 <memcpy@plt>
   1edbc:	movw	r0, #29791	; 0x745f
   1edc0:	cmp	r8, #0
   1edc4:	mov	r1, #101	; 0x65
   1edc8:	movt	r0, #28793	; 0x7079
   1edcc:	str	r0, [r5, sl]
   1edd0:	add	r0, r5, sl
   1edd4:	ldr	r5, [sp, #16]
   1edd8:	strb	r1, [r0, #4]
   1eddc:	cmpne	r5, #0
   1ede0:	bne	1edec <flatcc_json_printer_union_vector_field@@Base+0xdc>
   1ede4:	sub	sp, fp, #28
   1ede8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1edec:	ldr	r0, [fp, #12]
   1edf0:	ldr	r2, [sp, #8]
   1edf4:	add	r1, sl, #5
   1edf8:	add	r3, sp, #32
   1edfc:	str	r1, [sp]
   1ee00:	mov	r1, r6
   1ee04:	str	r0, [sp, #4]
   1ee08:	mov	r0, r9
   1ee0c:	bl	1b9c4 <flatcc_json_printer_utype_enum_vector_field@@Base>
   1ee10:	ldr	r0, [r6, #16]
   1ee14:	add	r7, r9, #20
   1ee18:	mov	r2, sl
   1ee1c:	add	r1, r0, #1
   1ee20:	cmp	r0, #0
   1ee24:	str	r1, [r6, #16]
   1ee28:	mov	r6, r5
   1ee2c:	ldrne	r0, [r7]
   1ee30:	addne	r1, r0, #1
   1ee34:	strne	r1, [r7]
   1ee38:	movne	r1, #44	; 0x2c
   1ee3c:	strbne	r1, [r0]
   1ee40:	ldr	r1, [sp, #12]
   1ee44:	ldr	r0, [r5]
   1ee48:	ldr	r5, [r8]
   1ee4c:	ldr	r4, [r6, r0]!
   1ee50:	str	r0, [sp, #8]
   1ee54:	mov	r0, r9
   1ee58:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1ee5c:	ldr	r1, [r9, #32]
   1ee60:	ldr	r0, [r9, #20]
   1ee64:	cmp	r4, #0
   1ee68:	add	r1, r1, #1
   1ee6c:	str	r1, [r9, #32]
   1ee70:	add	r1, r0, #1
   1ee74:	str	r1, [r9, #20]
   1ee78:	mov	r1, #91	; 0x5b
   1ee7c:	strb	r1, [r0]
   1ee80:	beq	1efd4 <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   1ee84:	add	r5, r8, r5
   1ee88:	ldr	r2, [fp, #16]
   1ee8c:	ldrb	r0, [r5, #4]
   1ee90:	cmp	r0, #0
   1ee94:	beq	1eec0 <flatcc_json_printer_union_vector_field@@Base+0x1b0>
   1ee98:	add	r1, r6, #4
   1ee9c:	mov	r8, r2
   1eea0:	str	r1, [sp, #20]
   1eea4:	strb	r0, [sp, #28]
   1eea8:	add	r1, sp, #20
   1eeac:	mov	r0, r9
   1eeb0:	blx	r2
   1eeb4:	cmp	r4, #1
   1eeb8:	bne	1ef18 <flatcc_json_printer_union_vector_field@@Base+0x208>
   1eebc:	b	1efd4 <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   1eec0:	ldr	r0, [r7]
   1eec4:	mov	r8, r2
   1eec8:	add	r1, r0, #1
   1eecc:	str	r1, [r7]
   1eed0:	mov	r1, #110	; 0x6e
   1eed4:	strb	r1, [r0]
   1eed8:	ldr	r0, [r7]
   1eedc:	add	r1, r0, #1
   1eee0:	str	r1, [r7]
   1eee4:	mov	r1, #117	; 0x75
   1eee8:	strb	r1, [r0]
   1eeec:	ldr	r0, [r7]
   1eef0:	add	r1, r0, #1
   1eef4:	str	r1, [r7]
   1eef8:	mov	r1, #108	; 0x6c
   1eefc:	strb	r1, [r0]
   1ef00:	ldr	r0, [r7]
   1ef04:	add	r2, r0, #1
   1ef08:	str	r2, [r7]
   1ef0c:	strb	r1, [r0]
   1ef10:	cmp	r4, #1
   1ef14:	beq	1efd4 <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   1ef18:	ldr	r0, [sp, #16]
   1ef1c:	ldr	r1, [sp, #8]
   1ef20:	add	r5, r5, #5
   1ef24:	rsb	r4, r4, #1
   1ef28:	mov	sl, #44	; 0x2c
   1ef2c:	add	r0, r0, r1
   1ef30:	add	r6, r0, #8
   1ef34:	ldrb	r0, [r5]
   1ef38:	ldr	r1, [r7]
   1ef3c:	add	r2, r1, #1
   1ef40:	cmp	r0, #0
   1ef44:	str	r2, [r7]
   1ef48:	strb	sl, [r1]
   1ef4c:	beq	1ef78 <flatcc_json_printer_union_vector_field@@Base+0x268>
   1ef50:	str	r6, [sp, #20]
   1ef54:	strb	r0, [sp, #28]
   1ef58:	mov	r0, r9
   1ef5c:	add	r1, sp, #20
   1ef60:	blx	r8
   1ef64:	add	r6, r6, #4
   1ef68:	add	r5, r5, #1
   1ef6c:	adds	r4, r4, #1
   1ef70:	bne	1ef34 <flatcc_json_printer_union_vector_field@@Base+0x224>
   1ef74:	b	1efd4 <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   1ef78:	ldr	r0, [r7]
   1ef7c:	mov	r2, #108	; 0x6c
   1ef80:	add	r1, r0, #1
   1ef84:	str	r1, [r7]
   1ef88:	mov	r1, #110	; 0x6e
   1ef8c:	strb	r1, [r0]
   1ef90:	ldr	r0, [r7]
   1ef94:	add	r1, r0, #1
   1ef98:	str	r1, [r7]
   1ef9c:	mov	r1, #117	; 0x75
   1efa0:	strb	r1, [r0]
   1efa4:	ldr	r0, [r7]
   1efa8:	add	r1, r0, #1
   1efac:	str	r1, [r7]
   1efb0:	strb	r2, [r0]
   1efb4:	ldr	r0, [r7]
   1efb8:	add	r1, r0, #1
   1efbc:	str	r1, [r7]
   1efc0:	strb	r2, [r0]
   1efc4:	add	r6, r6, #4
   1efc8:	add	r5, r5, #1
   1efcc:	adds	r4, r4, #1
   1efd0:	bne	1ef34 <flatcc_json_printer_union_vector_field@@Base+0x224>
   1efd4:	ldrb	r1, [r9, #25]
   1efd8:	ldr	r0, [r9, #20]
   1efdc:	cmp	r1, #0
   1efe0:	beq	1f0a0 <flatcc_json_printer_union_vector_field@@Base+0x390>
   1efe4:	add	r1, r0, #1
   1efe8:	str	r1, [r9, #20]
   1efec:	mov	r1, #10
   1eff0:	strb	r1, [r0]
   1eff4:	ldr	r0, [r9, #32]
   1eff8:	sub	r2, r0, #1
   1effc:	str	r2, [r9, #32]
   1f000:	ldrb	r3, [r9, #25]
   1f004:	ldr	r0, [r9, #20]
   1f008:	ldr	r1, [r9, #16]
   1f00c:	mla	r6, r2, r3, r0
   1f010:	mul	r5, r2, r3
   1f014:	cmp	r6, r1
   1f018:	bls	1f088 <flatcc_json_printer_union_vector_field@@Base+0x378>
   1f01c:	cmp	r0, r1
   1f020:	bcc	1f03c <flatcc_json_printer_union_vector_field@@Base+0x32c>
   1f024:	ldr	r2, [r9, #44]	; 0x2c
   1f028:	mov	r0, r9
   1f02c:	mov	r1, #0
   1f030:	blx	r2
   1f034:	ldr	r1, [r9, #16]
   1f038:	ldr	r0, [r9, #20]
   1f03c:	sub	r6, r1, r0
   1f040:	cmp	r6, r5
   1f044:	bcs	1f088 <flatcc_json_printer_union_vector_field@@Base+0x378>
   1f048:	mov	r1, #32
   1f04c:	mov	r2, r6
   1f050:	bl	12948 <memset@plt>
   1f054:	ldr	r0, [r9, #20]
   1f058:	ldr	r2, [r9, #44]	; 0x2c
   1f05c:	mov	r1, #0
   1f060:	add	r0, r0, r6
   1f064:	str	r0, [r9, #20]
   1f068:	mov	r0, r9
   1f06c:	blx	r2
   1f070:	ldr	r1, [r9, #16]
   1f074:	ldr	r0, [r9, #20]
   1f078:	sub	r5, r5, r6
   1f07c:	sub	r6, r1, r0
   1f080:	cmp	r5, r6
   1f084:	bhi	1f048 <flatcc_json_printer_union_vector_field@@Base+0x338>
   1f088:	mov	r1, #32
   1f08c:	mov	r2, r5
   1f090:	bl	12948 <memset@plt>
   1f094:	ldr	r0, [r7]
   1f098:	add	r0, r0, r5
   1f09c:	str	r0, [r7]
   1f0a0:	add	r1, r0, #1
   1f0a4:	str	r1, [r7]
   1f0a8:	mov	r1, #93	; 0x5d
   1f0ac:	strb	r1, [r0]
   1f0b0:	sub	sp, fp, #28
   1f0b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f0b8:	ldr	r0, [r9, #36]	; 0x24
   1f0bc:	movw	r1, #5422	; 0x152e
   1f0c0:	movw	r3, #5497	; 0x1579
   1f0c4:	movw	r2, #843	; 0x34b
   1f0c8:	movt	r1, #2
   1f0cc:	movt	r3, #2
   1f0d0:	cmp	r0, #0
   1f0d4:	moveq	r0, #1
   1f0d8:	streq	r0, [r9, #36]	; 0x24
   1f0dc:	movw	r0, #5395	; 0x1513
   1f0e0:	movt	r0, #2
   1f0e4:	bl	1299c <__assert_fail@plt>

0001f0e8 <flatcc_json_printer_table_field@@Base>:
   1f0e8:	push	{r4, r5, r6, sl, fp, lr}
   1f0ec:	add	fp, sp, #16
   1f0f0:	sub	sp, sp, #24
   1f0f4:	mov	r5, r1
   1f0f8:	ldr	r1, [r1, #8]
   1f0fc:	mov	r4, r0
   1f100:	mov	r0, #4
   1f104:	add	r0, r0, r2, lsl #1
   1f108:	cmp	r0, r1
   1f10c:	bge	1f12c <flatcc_json_printer_table_field@@Base+0x44>
   1f110:	ldr	r1, [r5, #4]
   1f114:	add	r0, r1, r0
   1f118:	ldrh	r0, [r0]
   1f11c:	cmp	r0, #0
   1f120:	ldrne	r1, [r5]
   1f124:	addsne	r6, r1, r0
   1f128:	bne	1f134 <flatcc_json_printer_table_field@@Base+0x4c>
   1f12c:	sub	sp, fp, #16
   1f130:	pop	{r4, r5, r6, sl, fp, pc}
   1f134:	ldr	r0, [r5, #16]
   1f138:	ldr	r2, [fp, #8]
   1f13c:	add	r1, r0, #1
   1f140:	cmp	r0, #0
   1f144:	str	r1, [r5, #16]
   1f148:	ldrne	r0, [r4, #20]
   1f14c:	addne	r1, r0, #1
   1f150:	strne	r1, [r4, #20]
   1f154:	movne	r1, #44	; 0x2c
   1f158:	strbne	r1, [r0]
   1f15c:	mov	r0, r4
   1f160:	mov	r1, r3
   1f164:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1f168:	ldr	r0, [r5, #12]
   1f16c:	subs	r0, r0, #1
   1f170:	beq	1f2b4 <flatcc_json_printer_table_field@@Base+0x1cc>
   1f174:	ldr	r1, [r6]
   1f178:	ldr	r3, [r4, #20]
   1f17c:	ldr	r2, [fp, #12]
   1f180:	add	r1, r6, r1
   1f184:	ldr	r6, [r4, #32]
   1f188:	add	r6, r6, #1
   1f18c:	str	r6, [r4, #32]
   1f190:	add	r6, r3, #1
   1f194:	str	r6, [r4, #20]
   1f198:	mov	r6, #123	; 0x7b
   1f19c:	strb	r6, [r3]
   1f1a0:	str	r0, [sp, #16]
   1f1a4:	mov	r0, #0
   1f1a8:	str	r0, [sp, #20]
   1f1ac:	str	r1, [sp, #4]
   1f1b0:	ldr	r0, [r1]
   1f1b4:	sub	r3, r1, r0
   1f1b8:	str	r3, [sp, #8]
   1f1bc:	ldrh	r0, [r1, -r0]
   1f1c0:	add	r1, sp, #4
   1f1c4:	str	r0, [sp, #12]
   1f1c8:	mov	r0, r4
   1f1cc:	blx	r2
   1f1d0:	ldrb	r1, [r4, #25]
   1f1d4:	ldr	r0, [r4, #20]
   1f1d8:	cmp	r1, #0
   1f1dc:	beq	1f29c <flatcc_json_printer_table_field@@Base+0x1b4>
   1f1e0:	add	r1, r0, #1
   1f1e4:	str	r1, [r4, #20]
   1f1e8:	mov	r1, #10
   1f1ec:	strb	r1, [r0]
   1f1f0:	ldr	r0, [r4, #32]
   1f1f4:	sub	r2, r0, #1
   1f1f8:	str	r2, [r4, #32]
   1f1fc:	ldrb	r3, [r4, #25]
   1f200:	ldr	r0, [r4, #20]
   1f204:	ldr	r1, [r4, #16]
   1f208:	mla	r6, r2, r3, r0
   1f20c:	mul	r5, r2, r3
   1f210:	cmp	r6, r1
   1f214:	bls	1f284 <flatcc_json_printer_table_field@@Base+0x19c>
   1f218:	cmp	r0, r1
   1f21c:	bcc	1f238 <flatcc_json_printer_table_field@@Base+0x150>
   1f220:	ldr	r2, [r4, #44]	; 0x2c
   1f224:	mov	r0, r4
   1f228:	mov	r1, #0
   1f22c:	blx	r2
   1f230:	ldr	r1, [r4, #16]
   1f234:	ldr	r0, [r4, #20]
   1f238:	sub	r6, r1, r0
   1f23c:	cmp	r6, r5
   1f240:	bcs	1f284 <flatcc_json_printer_table_field@@Base+0x19c>
   1f244:	mov	r1, #32
   1f248:	mov	r2, r6
   1f24c:	bl	12948 <memset@plt>
   1f250:	ldr	r0, [r4, #20]
   1f254:	ldr	r2, [r4, #44]	; 0x2c
   1f258:	mov	r1, #0
   1f25c:	add	r0, r0, r6
   1f260:	str	r0, [r4, #20]
   1f264:	mov	r0, r4
   1f268:	blx	r2
   1f26c:	ldr	r1, [r4, #16]
   1f270:	ldr	r0, [r4, #20]
   1f274:	sub	r5, r5, r6
   1f278:	sub	r6, r1, r0
   1f27c:	cmp	r5, r6
   1f280:	bhi	1f244 <flatcc_json_printer_table_field@@Base+0x15c>
   1f284:	mov	r1, #32
   1f288:	mov	r2, r5
   1f28c:	bl	12948 <memset@plt>
   1f290:	ldr	r0, [r4, #20]
   1f294:	add	r0, r0, r5
   1f298:	str	r0, [r4, #20]
   1f29c:	add	r1, r0, #1
   1f2a0:	str	r1, [r4, #20]
   1f2a4:	mov	r1, #125	; 0x7d
   1f2a8:	strb	r1, [r0]
   1f2ac:	sub	sp, fp, #16
   1f2b0:	pop	{r4, r5, r6, sl, fp, pc}
   1f2b4:	ldr	r0, [r4, #36]	; 0x24
   1f2b8:	cmp	r0, #0
   1f2bc:	bne	1f12c <flatcc_json_printer_table_field@@Base+0x44>
   1f2c0:	mov	r0, #2
   1f2c4:	str	r0, [r4, #36]	; 0x24
   1f2c8:	sub	sp, fp, #16
   1f2cc:	pop	{r4, r5, r6, sl, fp, pc}

0001f2d0 <flatcc_json_printer_union_field@@Base>:
   1f2d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f2d4:	add	fp, sp, #28
   1f2d8:	sub	sp, sp, #20
   1f2dc:	mov	r9, r1
   1f2e0:	mov	r4, r0
   1f2e4:	mov	r0, #2
   1f2e8:	mov	r8, r3
   1f2ec:	lsl	r1, r2, #1
   1f2f0:	add	r3, r0, r2, lsl #1
   1f2f4:	ldr	r2, [r9, #8]
   1f2f8:	mov	r0, #0
   1f2fc:	cmp	r3, r2
   1f300:	bge	1f31c <flatcc_json_printer_union_field@@Base+0x4c>
   1f304:	ldr	r7, [r9, #4]
   1f308:	add	r3, r7, r3
   1f30c:	ldrh	r3, [r3]
   1f310:	cmp	r3, #0
   1f314:	ldrne	r0, [r9]
   1f318:	addne	r0, r0, r3
   1f31c:	add	r1, r1, #4
   1f320:	cmp	r1, r2
   1f324:	bge	1f34c <flatcc_json_printer_union_field@@Base+0x7c>
   1f328:	ldr	r2, [r9, #4]
   1f32c:	add	r1, r2, r1
   1f330:	ldrh	r1, [r1]
   1f334:	cmp	r1, #0
   1f338:	beq	1f34c <flatcc_json_printer_union_field@@Base+0x7c>
   1f33c:	cmp	r0, #0
   1f340:	ldrne	r2, [r9]
   1f344:	addsne	r2, r2, r1
   1f348:	bne	1f354 <flatcc_json_printer_union_field@@Base+0x84>
   1f34c:	sub	sp, fp, #28
   1f350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f354:	ldrb	r6, [r0]
   1f358:	ldr	r0, [r9, #16]
   1f35c:	ldr	r7, [fp, #8]
   1f360:	str	r2, [sp]
   1f364:	add	r1, r0, #1
   1f368:	cmp	r0, #0
   1f36c:	str	r1, [r9, #16]
   1f370:	ldrne	r0, [r4, #20]
   1f374:	addne	r1, r0, #1
   1f378:	strne	r1, [r4, #20]
   1f37c:	movne	r1, #44	; 0x2c
   1f380:	strbne	r1, [r0]
   1f384:	ldrb	r1, [r4, #25]
   1f388:	ldr	r0, [r4, #20]
   1f38c:	cmp	r1, #0
   1f390:	beq	1f44c <flatcc_json_printer_union_field@@Base+0x17c>
   1f394:	add	r1, r0, #1
   1f398:	mov	sl, r4
   1f39c:	mov	r5, r6
   1f3a0:	str	r1, [r4, #20]
   1f3a4:	mov	r1, #10
   1f3a8:	strb	r1, [r0]
   1f3ac:	ldr	r1, [sl, #16]!
   1f3b0:	ldr	r0, [r4, #20]
   1f3b4:	ldrb	r2, [sl, #9]
   1f3b8:	ldr	r3, [sl, #16]
   1f3bc:	mla	r6, r3, r2, r0
   1f3c0:	mul	r7, r3, r2
   1f3c4:	cmp	r6, r1
   1f3c8:	bls	1f474 <flatcc_json_printer_union_field@@Base+0x1a4>
   1f3cc:	cmp	r0, r1
   1f3d0:	bcc	1f3ec <flatcc_json_printer_union_field@@Base+0x11c>
   1f3d4:	ldr	r2, [r4, #44]	; 0x2c
   1f3d8:	mov	r0, r4
   1f3dc:	mov	r1, #0
   1f3e0:	blx	r2
   1f3e4:	ldr	r1, [r4, #16]
   1f3e8:	ldr	r0, [r4, #20]
   1f3ec:	mov	r6, r5
   1f3f0:	sub	r5, r1, r0
   1f3f4:	cmp	r5, r7
   1f3f8:	bcs	1f43c <flatcc_json_printer_union_field@@Base+0x16c>
   1f3fc:	mov	r1, #32
   1f400:	mov	r2, r5
   1f404:	bl	12948 <memset@plt>
   1f408:	ldr	r0, [r4, #20]
   1f40c:	ldr	r2, [r4, #44]	; 0x2c
   1f410:	mov	r1, #0
   1f414:	add	r0, r0, r5
   1f418:	str	r0, [r4, #20]
   1f41c:	mov	r0, r4
   1f420:	blx	r2
   1f424:	ldr	r1, [r4, #16]
   1f428:	ldr	r0, [r4, #20]
   1f42c:	sub	r7, r7, r5
   1f430:	sub	r5, r1, r0
   1f434:	cmp	r7, r5
   1f438:	bhi	1f3fc <flatcc_json_printer_union_field@@Base+0x12c>
   1f43c:	mov	r1, #32
   1f440:	mov	r2, r7
   1f444:	bl	12948 <memset@plt>
   1f448:	b	1f484 <flatcc_json_printer_union_field@@Base+0x1b4>
   1f44c:	mov	sl, r4
   1f450:	ldr	r1, [sl, #16]!
   1f454:	cmp	r0, r1
   1f458:	bcc	1f494 <flatcc_json_printer_union_field@@Base+0x1c4>
   1f45c:	ldr	r2, [r4, #44]	; 0x2c
   1f460:	mov	r0, r4
   1f464:	mov	r1, #0
   1f468:	blx	r2
   1f46c:	ldr	r0, [r4, #20]
   1f470:	b	1f494 <flatcc_json_printer_union_field@@Base+0x1c4>
   1f474:	mov	r1, #32
   1f478:	mov	r2, r7
   1f47c:	bl	12948 <memset@plt>
   1f480:	mov	r6, r5
   1f484:	ldr	r0, [r4, #20]
   1f488:	add	r0, r0, r7
   1f48c:	ldr	r7, [fp, #8]
   1f490:	str	r0, [r4, #20]
   1f494:	mov	r1, #34	; 0x22
   1f498:	str	r6, [sp, #4]
   1f49c:	strb	r1, [r0]
   1f4a0:	ldrb	r2, [r4, #26]
   1f4a4:	ldr	r0, [r4, #20]
   1f4a8:	ldr	r1, [r4, #16]
   1f4ac:	cmp	r2, #0
   1f4b0:	addeq	r0, r0, #1
   1f4b4:	add	r2, r0, r7
   1f4b8:	str	r0, [r4, #20]
   1f4bc:	cmp	r2, r1
   1f4c0:	bcs	1f4d4 <flatcc_json_printer_union_field@@Base+0x204>
   1f4c4:	mov	r1, r8
   1f4c8:	mov	r2, r7
   1f4cc:	bl	128b8 <memcpy@plt>
   1f4d0:	b	1f568 <flatcc_json_printer_union_field@@Base+0x298>
   1f4d4:	mov	r5, r8
   1f4d8:	cmp	r0, r1
   1f4dc:	bcc	1f4f8 <flatcc_json_printer_union_field@@Base+0x228>
   1f4e0:	ldr	r2, [r4, #44]	; 0x2c
   1f4e4:	mov	r0, r4
   1f4e8:	mov	r1, #0
   1f4ec:	blx	r2
   1f4f0:	ldr	r0, [r4, #20]
   1f4f4:	ldr	r1, [sl]
   1f4f8:	sub	r8, r1, r0
   1f4fc:	mov	r6, r5
   1f500:	cmp	r8, r7
   1f504:	bcs	1f554 <flatcc_json_printer_union_field@@Base+0x284>
   1f508:	ldr	r7, [fp, #8]
   1f50c:	mov	r6, r5
   1f510:	mov	r1, r6
   1f514:	mov	r2, r8
   1f518:	bl	128b8 <memcpy@plt>
   1f51c:	ldr	r0, [r4, #20]
   1f520:	ldr	r2, [r4, #44]	; 0x2c
   1f524:	mov	r1, #0
   1f528:	add	r0, r0, r8
   1f52c:	str	r0, [r4, #20]
   1f530:	mov	r0, r4
   1f534:	blx	r2
   1f538:	ldr	r0, [r4, #20]
   1f53c:	ldr	r1, [sl]
   1f540:	sub	r7, r7, r8
   1f544:	add	r6, r6, r8
   1f548:	sub	r8, r1, r0
   1f54c:	cmp	r7, r8
   1f550:	bhi	1f510 <flatcc_json_printer_union_field@@Base+0x240>
   1f554:	mov	r1, r6
   1f558:	mov	r2, r7
   1f55c:	bl	128b8 <memcpy@plt>
   1f560:	ldr	r6, [sp, #4]
   1f564:	mov	r8, r5
   1f568:	ldr	r0, [r4, #20]
   1f56c:	ldr	r1, [r4, #16]
   1f570:	add	r0, r0, r7
   1f574:	add	r2, r0, #5
   1f578:	str	r0, [r4, #20]
   1f57c:	cmp	r2, r1
   1f580:	bcs	1f5a4 <flatcc_json_printer_union_field@@Base+0x2d4>
   1f584:	ldr	sl, [sp]
   1f588:	mov	r1, #101	; 0x65
   1f58c:	mov	r7, #5
   1f590:	strb	r1, [r0, #4]
   1f594:	movw	r1, #29791	; 0x745f
   1f598:	movt	r1, #28793	; 0x7079
   1f59c:	str	r1, [r0]
   1f5a0:	b	1f644 <flatcc_json_printer_union_field@@Base+0x374>
   1f5a4:	cmp	r0, r1
   1f5a8:	bcc	1f5c4 <flatcc_json_printer_union_field@@Base+0x2f4>
   1f5ac:	ldr	r2, [r4, #44]	; 0x2c
   1f5b0:	mov	r0, r4
   1f5b4:	mov	r1, #0
   1f5b8:	blx	r2
   1f5bc:	ldr	r0, [r4, #20]
   1f5c0:	ldr	r1, [sl]
   1f5c4:	sub	r5, r1, r0
   1f5c8:	cmp	r5, #4
   1f5cc:	bhi	1f624 <flatcc_json_printer_union_field@@Base+0x354>
   1f5d0:	movw	r6, #5699	; 0x1643
   1f5d4:	mov	r7, #5
   1f5d8:	movt	r6, #2
   1f5dc:	mov	r1, r6
   1f5e0:	mov	r2, r5
   1f5e4:	bl	128b8 <memcpy@plt>
   1f5e8:	ldr	r0, [r4, #20]
   1f5ec:	ldr	r2, [r4, #44]	; 0x2c
   1f5f0:	mov	r1, #0
   1f5f4:	add	r0, r0, r5
   1f5f8:	str	r0, [r4, #20]
   1f5fc:	mov	r0, r4
   1f600:	blx	r2
   1f604:	ldr	r0, [r4, #20]
   1f608:	ldr	r1, [sl]
   1f60c:	sub	r7, r7, r5
   1f610:	add	r6, r6, r5
   1f614:	sub	r5, r1, r0
   1f618:	cmp	r7, r5
   1f61c:	bhi	1f5dc <flatcc_json_printer_union_field@@Base+0x30c>
   1f620:	b	1f630 <flatcc_json_printer_union_field@@Base+0x360>
   1f624:	movw	r6, #5699	; 0x1643
   1f628:	mov	r7, #5
   1f62c:	movt	r6, #2
   1f630:	ldr	sl, [sp]
   1f634:	mov	r1, r6
   1f638:	mov	r2, r7
   1f63c:	bl	128b8 <memcpy@plt>
   1f640:	ldr	r6, [sp, #4]
   1f644:	ldr	r0, [r4, #20]
   1f648:	add	r1, r0, r7
   1f64c:	str	r1, [r4, #20]
   1f650:	mov	r1, #34	; 0x22
   1f654:	strb	r1, [r0, r7]
   1f658:	ldrb	r0, [r4, #26]
   1f65c:	ldr	r1, [r4, #20]
   1f660:	cmp	r0, #0
   1f664:	addeq	r1, r1, #1
   1f668:	add	r0, r1, #1
   1f66c:	str	r0, [r4, #20]
   1f670:	mov	r0, #58	; 0x3a
   1f674:	strb	r0, [r1]
   1f678:	mov	r1, #32
   1f67c:	ldr	r0, [r4, #20]
   1f680:	strb	r1, [r0]
   1f684:	ldrb	r1, [r4, #25]
   1f688:	ldr	r0, [r4, #20]
   1f68c:	cmp	r1, #0
   1f690:	addne	r0, r0, #1
   1f694:	str	r0, [r4, #20]
   1f698:	ldrb	r1, [r4, #27]
   1f69c:	cmp	r1, #0
   1f6a0:	beq	1f6f4 <flatcc_json_printer_union_field@@Base+0x424>
   1f6a4:	mov	r1, #0
   1f6a8:	cmp	r6, #100	; 0x64
   1f6ac:	bcc	1f714 <flatcc_json_printer_union_field@@Base+0x444>
   1f6b0:	strb	r1, [r0, #3]
   1f6b4:	movw	r1, #34079	; 0x851f
   1f6b8:	movt	r1, #20971	; 0x51eb
   1f6bc:	umull	r1, r2, r6, r1
   1f6c0:	mov	r1, #48	; 0x30
   1f6c4:	orr	r1, r1, r2, lsr #5
   1f6c8:	strb	r1, [r0]
   1f6cc:	lsr	r1, r2, #5
   1f6d0:	mov	r2, #100	; 0x64
   1f6d4:	mls	r1, r1, r2, r6
   1f6d8:	movw	r2, #6299	; 0x189b
   1f6dc:	movt	r2, #2
   1f6e0:	add	r1, r2, r1, lsl #1
   1f6e4:	ldrh	r1, [r1]
   1f6e8:	strh	r1, [r0, #1]
   1f6ec:	mov	r0, #3
   1f6f0:	b	1f764 <flatcc_json_printer_union_field@@Base+0x494>
   1f6f4:	ldr	r2, [fp, #12]
   1f6f8:	mov	r0, r4
   1f6fc:	mov	r1, r6
   1f700:	blx	r2
   1f704:	ldr	r2, [fp, #8]
   1f708:	cmp	r6, #0
   1f70c:	bne	1f77c <flatcc_json_printer_union_field@@Base+0x4ac>
   1f710:	b	1f34c <flatcc_json_printer_union_field@@Base+0x7c>
   1f714:	cmp	r6, #10
   1f718:	bcc	1f754 <flatcc_json_printer_union_field@@Base+0x484>
   1f71c:	strb	r1, [r0, #2]
   1f720:	movw	r1, #34079	; 0x851f
   1f724:	movt	r1, #20971	; 0x51eb
   1f728:	umull	r1, r2, r6, r1
   1f72c:	lsr	r1, r2, #5
   1f730:	mov	r2, #100	; 0x64
   1f734:	mls	r1, r1, r2, r6
   1f738:	movw	r2, #6299	; 0x189b
   1f73c:	movt	r2, #2
   1f740:	add	r1, r2, r1, lsl #1
   1f744:	ldrh	r1, [r1]
   1f748:	strh	r1, [r0]
   1f74c:	mov	r0, #2
   1f750:	b	1f764 <flatcc_json_printer_union_field@@Base+0x494>
   1f754:	strb	r1, [r0, #1]
   1f758:	add	r1, r6, #48	; 0x30
   1f75c:	strb	r1, [r0]
   1f760:	mov	r0, #1
   1f764:	ldr	r1, [r4, #20]
   1f768:	ldr	r2, [fp, #8]
   1f76c:	add	r0, r1, r0
   1f770:	str	r0, [r4, #20]
   1f774:	cmp	r6, #0
   1f778:	beq	1f34c <flatcc_json_printer_union_field@@Base+0x7c>
   1f77c:	ldr	r0, [r4, #20]
   1f780:	ldr	r5, [fp, #16]
   1f784:	add	r1, r0, #1
   1f788:	str	r1, [r4, #20]
   1f78c:	mov	r1, #44	; 0x2c
   1f790:	strb	r1, [r0]
   1f794:	mov	r0, r4
   1f798:	mov	r1, r8
   1f79c:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1f7a0:	ldr	r0, [r9, #12]
   1f7a4:	strb	r6, [sp, #16]
   1f7a8:	str	sl, [sp, #8]
   1f7ac:	add	r1, sp, #8
   1f7b0:	str	r0, [sp, #12]
   1f7b4:	mov	r0, r4
   1f7b8:	blx	r5
   1f7bc:	sub	sp, fp, #28
   1f7c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001f7c4 <flatcc_json_printer_union_table@@Base>:
   1f7c4:	push	{r4, r5, r6, sl, fp, lr}
   1f7c8:	add	fp, sp, #16
   1f7cc:	sub	sp, sp, #24
   1f7d0:	mov	r4, r0
   1f7d4:	ldr	r0, [r1, #4]
   1f7d8:	subs	r0, r0, #1
   1f7dc:	beq	1f920 <flatcc_json_printer_union_table@@Base+0x15c>
   1f7e0:	ldr	r1, [r1]
   1f7e4:	ldr	r6, [r4, #32]
   1f7e8:	ldr	r3, [r1]
   1f7ec:	add	r6, r6, #1
   1f7f0:	add	r1, r1, r3
   1f7f4:	ldr	r3, [r4, #20]
   1f7f8:	str	r6, [r4, #32]
   1f7fc:	add	r6, r3, #1
   1f800:	str	r6, [r4, #20]
   1f804:	mov	r6, #123	; 0x7b
   1f808:	strb	r6, [r3]
   1f80c:	str	r0, [sp, #16]
   1f810:	mov	r0, #0
   1f814:	str	r0, [sp, #20]
   1f818:	str	r1, [sp, #4]
   1f81c:	ldr	r0, [r1]
   1f820:	sub	r3, r1, r0
   1f824:	str	r3, [sp, #8]
   1f828:	ldrh	r0, [r1, -r0]
   1f82c:	add	r1, sp, #4
   1f830:	str	r0, [sp, #12]
   1f834:	mov	r0, r4
   1f838:	blx	r2
   1f83c:	ldrb	r1, [r4, #25]
   1f840:	ldr	r0, [r4, #20]
   1f844:	cmp	r1, #0
   1f848:	beq	1f908 <flatcc_json_printer_union_table@@Base+0x144>
   1f84c:	add	r1, r0, #1
   1f850:	str	r1, [r4, #20]
   1f854:	mov	r1, #10
   1f858:	strb	r1, [r0]
   1f85c:	ldr	r0, [r4, #32]
   1f860:	sub	r2, r0, #1
   1f864:	str	r2, [r4, #32]
   1f868:	ldrb	r3, [r4, #25]
   1f86c:	ldr	r0, [r4, #20]
   1f870:	ldr	r1, [r4, #16]
   1f874:	mla	r6, r2, r3, r0
   1f878:	mul	r5, r2, r3
   1f87c:	cmp	r6, r1
   1f880:	bls	1f8f0 <flatcc_json_printer_union_table@@Base+0x12c>
   1f884:	cmp	r0, r1
   1f888:	bcc	1f8a4 <flatcc_json_printer_union_table@@Base+0xe0>
   1f88c:	ldr	r2, [r4, #44]	; 0x2c
   1f890:	mov	r0, r4
   1f894:	mov	r1, #0
   1f898:	blx	r2
   1f89c:	ldr	r1, [r4, #16]
   1f8a0:	ldr	r0, [r4, #20]
   1f8a4:	sub	r6, r1, r0
   1f8a8:	cmp	r6, r5
   1f8ac:	bcs	1f8f0 <flatcc_json_printer_union_table@@Base+0x12c>
   1f8b0:	mov	r1, #32
   1f8b4:	mov	r2, r6
   1f8b8:	bl	12948 <memset@plt>
   1f8bc:	ldr	r0, [r4, #20]
   1f8c0:	ldr	r2, [r4, #44]	; 0x2c
   1f8c4:	mov	r1, #0
   1f8c8:	add	r0, r0, r6
   1f8cc:	str	r0, [r4, #20]
   1f8d0:	mov	r0, r4
   1f8d4:	blx	r2
   1f8d8:	ldr	r1, [r4, #16]
   1f8dc:	ldr	r0, [r4, #20]
   1f8e0:	sub	r5, r5, r6
   1f8e4:	sub	r6, r1, r0
   1f8e8:	cmp	r5, r6
   1f8ec:	bhi	1f8b0 <flatcc_json_printer_union_table@@Base+0xec>
   1f8f0:	mov	r1, #32
   1f8f4:	mov	r2, r5
   1f8f8:	bl	12948 <memset@plt>
   1f8fc:	ldr	r0, [r4, #20]
   1f900:	add	r0, r0, r5
   1f904:	str	r0, [r4, #20]
   1f908:	add	r1, r0, #1
   1f90c:	str	r1, [r4, #20]
   1f910:	mov	r1, #125	; 0x7d
   1f914:	strb	r1, [r0]
   1f918:	sub	sp, fp, #16
   1f91c:	pop	{r4, r5, r6, sl, fp, pc}
   1f920:	ldr	r0, [r4, #36]	; 0x24
   1f924:	cmp	r0, #0
   1f928:	beq	1f934 <flatcc_json_printer_union_table@@Base+0x170>
   1f92c:	sub	sp, fp, #16
   1f930:	pop	{r4, r5, r6, sl, fp, pc}
   1f934:	mov	r0, #2
   1f938:	str	r0, [r4, #36]	; 0x24
   1f93c:	sub	sp, fp, #16
   1f940:	pop	{r4, r5, r6, sl, fp, pc}

0001f944 <flatcc_json_printer_union_struct@@Base>:
   1f944:	push	{r4, r5, r6, sl, fp, lr}
   1f948:	add	fp, sp, #16
   1f94c:	mov	r4, r0
   1f950:	ldr	r0, [r0, #20]
   1f954:	ldr	r3, [r4, #32]
   1f958:	add	r3, r3, #1
   1f95c:	str	r3, [r4, #32]
   1f960:	add	r3, r0, #1
   1f964:	str	r3, [r4, #20]
   1f968:	mov	r3, #123	; 0x7b
   1f96c:	strb	r3, [r0]
   1f970:	ldr	r0, [r1]
   1f974:	ldr	r1, [r0]
   1f978:	add	r1, r0, r1
   1f97c:	mov	r0, r4
   1f980:	blx	r2
   1f984:	ldrb	r1, [r4, #25]
   1f988:	ldr	r0, [r4, #20]
   1f98c:	cmp	r1, #0
   1f990:	beq	1fa50 <flatcc_json_printer_union_struct@@Base+0x10c>
   1f994:	add	r1, r0, #1
   1f998:	str	r1, [r4, #20]
   1f99c:	mov	r1, #10
   1f9a0:	strb	r1, [r0]
   1f9a4:	ldr	r0, [r4, #32]
   1f9a8:	sub	r2, r0, #1
   1f9ac:	str	r2, [r4, #32]
   1f9b0:	ldrb	r3, [r4, #25]
   1f9b4:	ldr	r0, [r4, #20]
   1f9b8:	ldr	r1, [r4, #16]
   1f9bc:	mla	r6, r2, r3, r0
   1f9c0:	mul	r5, r2, r3
   1f9c4:	cmp	r6, r1
   1f9c8:	bls	1fa38 <flatcc_json_printer_union_struct@@Base+0xf4>
   1f9cc:	cmp	r0, r1
   1f9d0:	bcc	1f9ec <flatcc_json_printer_union_struct@@Base+0xa8>
   1f9d4:	ldr	r2, [r4, #44]	; 0x2c
   1f9d8:	mov	r0, r4
   1f9dc:	mov	r1, #0
   1f9e0:	blx	r2
   1f9e4:	ldr	r1, [r4, #16]
   1f9e8:	ldr	r0, [r4, #20]
   1f9ec:	sub	r6, r1, r0
   1f9f0:	cmp	r6, r5
   1f9f4:	bcs	1fa38 <flatcc_json_printer_union_struct@@Base+0xf4>
   1f9f8:	mov	r1, #32
   1f9fc:	mov	r2, r6
   1fa00:	bl	12948 <memset@plt>
   1fa04:	ldr	r0, [r4, #20]
   1fa08:	ldr	r2, [r4, #44]	; 0x2c
   1fa0c:	mov	r1, #0
   1fa10:	add	r0, r0, r6
   1fa14:	str	r0, [r4, #20]
   1fa18:	mov	r0, r4
   1fa1c:	blx	r2
   1fa20:	ldr	r1, [r4, #16]
   1fa24:	ldr	r0, [r4, #20]
   1fa28:	sub	r5, r5, r6
   1fa2c:	sub	r6, r1, r0
   1fa30:	cmp	r5, r6
   1fa34:	bhi	1f9f8 <flatcc_json_printer_union_struct@@Base+0xb4>
   1fa38:	mov	r1, #32
   1fa3c:	mov	r2, r5
   1fa40:	bl	12948 <memset@plt>
   1fa44:	ldr	r0, [r4, #20]
   1fa48:	add	r0, r0, r5
   1fa4c:	str	r0, [r4, #20]
   1fa50:	add	r1, r0, #1
   1fa54:	str	r1, [r4, #20]
   1fa58:	mov	r1, #125	; 0x7d
   1fa5c:	strb	r1, [r0]
   1fa60:	pop	{r4, r5, r6, sl, fp, pc}

0001fa64 <flatcc_json_printer_union_string@@Base>:
   1fa64:	ldr	r1, [r1]
   1fa68:	ldr	r2, [r1]
   1fa6c:	ldr	r2, [r1, r2]!
   1fa70:	add	r1, r1, #4
   1fa74:	b	14dd4 <flatcc_json_printer_string@@Base+0x4>

0001fa78 <flatcc_json_printer_embedded_struct_field@@Base>:
   1fa78:	push	{r4, r5, r6, r7, fp, lr}
   1fa7c:	add	fp, sp, #16
   1fa80:	mov	r5, r3
   1fa84:	mov	r3, r1
   1fa88:	mov	r4, r0
   1fa8c:	add	r7, fp, #8
   1fa90:	mov	r6, r2
   1fa94:	cmp	r3, #0
   1fa98:	ldm	r7, {r1, r2, r7}
   1fa9c:	ldrne	r0, [r4, #20]
   1faa0:	addne	r3, r0, #1
   1faa4:	strne	r3, [r4, #20]
   1faa8:	movne	r3, #44	; 0x2c
   1faac:	strbne	r3, [r0]
   1fab0:	mov	r0, r4
   1fab4:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1fab8:	ldr	r1, [r4, #32]
   1fabc:	ldr	r0, [r4, #20]
   1fac0:	add	r1, r1, #1
   1fac4:	str	r1, [r4, #32]
   1fac8:	add	r1, r0, #1
   1facc:	str	r1, [r4, #20]
   1fad0:	mov	r1, #123	; 0x7b
   1fad4:	strb	r1, [r0]
   1fad8:	add	r1, r6, r5
   1fadc:	mov	r0, r4
   1fae0:	blx	r7
   1fae4:	ldrb	r1, [r4, #25]
   1fae8:	ldr	r0, [r4, #20]
   1faec:	cmp	r1, #0
   1faf0:	beq	1fbb0 <flatcc_json_printer_embedded_struct_field@@Base+0x138>
   1faf4:	add	r1, r0, #1
   1faf8:	str	r1, [r4, #20]
   1fafc:	mov	r1, #10
   1fb00:	strb	r1, [r0]
   1fb04:	ldr	r0, [r4, #32]
   1fb08:	sub	r2, r0, #1
   1fb0c:	str	r2, [r4, #32]
   1fb10:	ldrb	r3, [r4, #25]
   1fb14:	ldr	r0, [r4, #20]
   1fb18:	ldr	r1, [r4, #16]
   1fb1c:	mla	r7, r2, r3, r0
   1fb20:	mul	r5, r2, r3
   1fb24:	cmp	r7, r1
   1fb28:	bls	1fb98 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   1fb2c:	cmp	r0, r1
   1fb30:	bcc	1fb4c <flatcc_json_printer_embedded_struct_field@@Base+0xd4>
   1fb34:	ldr	r2, [r4, #44]	; 0x2c
   1fb38:	mov	r0, r4
   1fb3c:	mov	r1, #0
   1fb40:	blx	r2
   1fb44:	ldr	r1, [r4, #16]
   1fb48:	ldr	r0, [r4, #20]
   1fb4c:	sub	r6, r1, r0
   1fb50:	cmp	r6, r5
   1fb54:	bcs	1fb98 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   1fb58:	mov	r1, #32
   1fb5c:	mov	r2, r6
   1fb60:	bl	12948 <memset@plt>
   1fb64:	ldr	r0, [r4, #20]
   1fb68:	ldr	r2, [r4, #44]	; 0x2c
   1fb6c:	mov	r1, #0
   1fb70:	add	r0, r0, r6
   1fb74:	str	r0, [r4, #20]
   1fb78:	mov	r0, r4
   1fb7c:	blx	r2
   1fb80:	ldr	r1, [r4, #16]
   1fb84:	ldr	r0, [r4, #20]
   1fb88:	sub	r5, r5, r6
   1fb8c:	sub	r6, r1, r0
   1fb90:	cmp	r5, r6
   1fb94:	bhi	1fb58 <flatcc_json_printer_embedded_struct_field@@Base+0xe0>
   1fb98:	mov	r1, #32
   1fb9c:	mov	r2, r5
   1fba0:	bl	12948 <memset@plt>
   1fba4:	ldr	r0, [r4, #20]
   1fba8:	add	r0, r0, r5
   1fbac:	str	r0, [r4, #20]
   1fbb0:	add	r1, r0, #1
   1fbb4:	str	r1, [r4, #20]
   1fbb8:	mov	r1, #125	; 0x7d
   1fbbc:	strb	r1, [r0]
   1fbc0:	pop	{r4, r5, r6, r7, fp, pc}

0001fbc4 <flatcc_json_printer_struct_field@@Base>:
   1fbc4:	push	{r4, r5, r6, r7, fp, lr}
   1fbc8:	add	fp, sp, #16
   1fbcc:	mov	r4, r0
   1fbd0:	mov	r0, #4
   1fbd4:	add	r0, r0, r2, lsl #1
   1fbd8:	ldr	r2, [r1, #8]
   1fbdc:	cmp	r0, r2
   1fbe0:	popge	{r4, r5, r6, r7, fp, pc}
   1fbe4:	ldr	r2, [r1, #4]
   1fbe8:	add	r0, r2, r0
   1fbec:	ldrh	r0, [r0]
   1fbf0:	cmp	r0, #0
   1fbf4:	ldrne	r2, [r1]
   1fbf8:	addsne	r5, r2, r0
   1fbfc:	bne	1fc04 <flatcc_json_printer_struct_field@@Base+0x40>
   1fc00:	pop	{r4, r5, r6, r7, fp, pc}
   1fc04:	ldr	r0, [r1, #16]
   1fc08:	ldr	r2, [fp, #8]
   1fc0c:	ldr	r7, [fp, #12]
   1fc10:	add	r6, r0, #1
   1fc14:	cmp	r0, #0
   1fc18:	str	r6, [r1, #16]
   1fc1c:	ldrne	r0, [r4, #20]
   1fc20:	addne	r1, r0, #1
   1fc24:	strne	r1, [r4, #20]
   1fc28:	movne	r1, #44	; 0x2c
   1fc2c:	strbne	r1, [r0]
   1fc30:	mov	r0, r4
   1fc34:	mov	r1, r3
   1fc38:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   1fc3c:	ldr	r1, [r4, #32]
   1fc40:	ldr	r0, [r4, #20]
   1fc44:	add	r1, r1, #1
   1fc48:	str	r1, [r4, #32]
   1fc4c:	add	r1, r0, #1
   1fc50:	str	r1, [r4, #20]
   1fc54:	mov	r1, #123	; 0x7b
   1fc58:	strb	r1, [r0]
   1fc5c:	mov	r0, r4
   1fc60:	mov	r1, r5
   1fc64:	blx	r7
   1fc68:	ldrb	r1, [r4, #25]
   1fc6c:	ldr	r0, [r4, #20]
   1fc70:	cmp	r1, #0
   1fc74:	beq	1fd34 <flatcc_json_printer_struct_field@@Base+0x170>
   1fc78:	add	r1, r0, #1
   1fc7c:	str	r1, [r4, #20]
   1fc80:	mov	r1, #10
   1fc84:	strb	r1, [r0]
   1fc88:	ldr	r0, [r4, #32]
   1fc8c:	sub	r2, r0, #1
   1fc90:	str	r2, [r4, #32]
   1fc94:	ldrb	r3, [r4, #25]
   1fc98:	ldr	r0, [r4, #20]
   1fc9c:	ldr	r1, [r4, #16]
   1fca0:	mla	r7, r2, r3, r0
   1fca4:	mul	r5, r2, r3
   1fca8:	cmp	r7, r1
   1fcac:	bls	1fd1c <flatcc_json_printer_struct_field@@Base+0x158>
   1fcb0:	cmp	r0, r1
   1fcb4:	bcc	1fcd0 <flatcc_json_printer_struct_field@@Base+0x10c>
   1fcb8:	ldr	r2, [r4, #44]	; 0x2c
   1fcbc:	mov	r0, r4
   1fcc0:	mov	r1, #0
   1fcc4:	blx	r2
   1fcc8:	ldr	r1, [r4, #16]
   1fccc:	ldr	r0, [r4, #20]
   1fcd0:	sub	r6, r1, r0
   1fcd4:	cmp	r6, r5
   1fcd8:	bcs	1fd1c <flatcc_json_printer_struct_field@@Base+0x158>
   1fcdc:	mov	r1, #32
   1fce0:	mov	r2, r6
   1fce4:	bl	12948 <memset@plt>
   1fce8:	ldr	r0, [r4, #20]
   1fcec:	ldr	r2, [r4, #44]	; 0x2c
   1fcf0:	mov	r1, #0
   1fcf4:	add	r0, r0, r6
   1fcf8:	str	r0, [r4, #20]
   1fcfc:	mov	r0, r4
   1fd00:	blx	r2
   1fd04:	ldr	r1, [r4, #16]
   1fd08:	ldr	r0, [r4, #20]
   1fd0c:	sub	r5, r5, r6
   1fd10:	sub	r6, r1, r0
   1fd14:	cmp	r5, r6
   1fd18:	bhi	1fcdc <flatcc_json_printer_struct_field@@Base+0x118>
   1fd1c:	mov	r1, #32
   1fd20:	mov	r2, r5
   1fd24:	bl	12948 <memset@plt>
   1fd28:	ldr	r0, [r4, #20]
   1fd2c:	add	r0, r0, r5
   1fd30:	str	r0, [r4, #20]
   1fd34:	add	r1, r0, #1
   1fd38:	str	r1, [r4, #20]
   1fd3c:	mov	r1, #125	; 0x7d
   1fd40:	strb	r1, [r0]
   1fd44:	pop	{r4, r5, r6, r7, fp, pc}

0001fd48 <flatcc_json_printer_struct_as_root@@Base>:
   1fd48:	push	{r4, r5, r6, sl, fp, lr}
   1fd4c:	add	fp, sp, #16
   1fd50:	sub	sp, sp, #8
   1fd54:	cmp	r1, #0
   1fd58:	mov	r4, r0
   1fd5c:	mov	r0, #0
   1fd60:	cmpne	r2, #7
   1fd64:	str	r0, [sp, #4]
   1fd68:	bls	1ff1c <flatcc_json_printer_struct_as_root@@Base+0x1d4>
   1fd6c:	mov	r5, r1
   1fd70:	cmp	r3, #0
   1fd74:	beq	1fd9c <flatcc_json_printer_struct_as_root@@Base+0x54>
   1fd78:	add	r0, sp, #4
   1fd7c:	mov	r1, r3
   1fd80:	mov	r2, #4
   1fd84:	bl	12954 <strncpy@plt>
   1fd88:	ldr	r0, [sp, #4]
   1fd8c:	cmp	r0, #0
   1fd90:	ldrne	r1, [r5, #4]
   1fd94:	cmpne	r1, r0
   1fd98:	bne	1ff4c <flatcc_json_printer_struct_as_root@@Base+0x204>
   1fd9c:	ldr	r1, [r4, #32]
   1fda0:	ldr	r0, [r4, #20]
   1fda4:	ldr	r2, [fp, #8]
   1fda8:	add	r1, r1, #1
   1fdac:	str	r1, [r4, #32]
   1fdb0:	add	r1, r0, #1
   1fdb4:	str	r1, [r4, #20]
   1fdb8:	mov	r1, #123	; 0x7b
   1fdbc:	strb	r1, [r0]
   1fdc0:	ldr	r0, [r5]
   1fdc4:	add	r1, r5, r0
   1fdc8:	mov	r0, r4
   1fdcc:	blx	r2
   1fdd0:	ldrb	r1, [r4, #25]
   1fdd4:	ldr	r0, [r4, #20]
   1fdd8:	cmp	r1, #0
   1fddc:	beq	1fe9c <flatcc_json_printer_struct_as_root@@Base+0x154>
   1fde0:	add	r1, r0, #1
   1fde4:	str	r1, [r4, #20]
   1fde8:	mov	r1, #10
   1fdec:	strb	r1, [r0]
   1fdf0:	ldr	r0, [r4, #32]
   1fdf4:	sub	r2, r0, #1
   1fdf8:	str	r2, [r4, #32]
   1fdfc:	ldrb	r3, [r4, #25]
   1fe00:	ldr	r0, [r4, #20]
   1fe04:	ldr	r1, [r4, #16]
   1fe08:	mla	r6, r2, r3, r0
   1fe0c:	mul	r5, r2, r3
   1fe10:	cmp	r6, r1
   1fe14:	bls	1fe84 <flatcc_json_printer_struct_as_root@@Base+0x13c>
   1fe18:	cmp	r0, r1
   1fe1c:	bcc	1fe38 <flatcc_json_printer_struct_as_root@@Base+0xf0>
   1fe20:	ldr	r2, [r4, #44]	; 0x2c
   1fe24:	mov	r0, r4
   1fe28:	mov	r1, #0
   1fe2c:	blx	r2
   1fe30:	ldr	r1, [r4, #16]
   1fe34:	ldr	r0, [r4, #20]
   1fe38:	sub	r6, r1, r0
   1fe3c:	cmp	r6, r5
   1fe40:	bcs	1fe84 <flatcc_json_printer_struct_as_root@@Base+0x13c>
   1fe44:	mov	r1, #32
   1fe48:	mov	r2, r6
   1fe4c:	bl	12948 <memset@plt>
   1fe50:	ldr	r0, [r4, #20]
   1fe54:	ldr	r2, [r4, #44]	; 0x2c
   1fe58:	mov	r1, #0
   1fe5c:	add	r0, r0, r6
   1fe60:	str	r0, [r4, #20]
   1fe64:	mov	r0, r4
   1fe68:	blx	r2
   1fe6c:	ldr	r1, [r4, #16]
   1fe70:	ldr	r0, [r4, #20]
   1fe74:	sub	r5, r5, r6
   1fe78:	sub	r6, r1, r0
   1fe7c:	cmp	r5, r6
   1fe80:	bhi	1fe44 <flatcc_json_printer_struct_as_root@@Base+0xfc>
   1fe84:	mov	r1, #32
   1fe88:	mov	r2, r5
   1fe8c:	bl	12948 <memset@plt>
   1fe90:	ldr	r0, [r4, #20]
   1fe94:	add	r0, r0, r5
   1fe98:	str	r0, [r4, #20]
   1fe9c:	add	r1, r0, #1
   1fea0:	str	r1, [r4, #20]
   1fea4:	mov	r1, #125	; 0x7d
   1fea8:	strb	r1, [r0]
   1feac:	ldrb	r0, [r4, #25]
   1feb0:	cmp	r0, #0
   1feb4:	beq	1fed8 <flatcc_json_printer_struct_as_root@@Base+0x190>
   1feb8:	ldr	r0, [r4, #32]
   1febc:	cmp	r0, #0
   1fec0:	bne	1fed8 <flatcc_json_printer_struct_as_root@@Base+0x190>
   1fec4:	ldr	r0, [r4, #20]
   1fec8:	add	r1, r0, #1
   1fecc:	str	r1, [r4, #20]
   1fed0:	mov	r1, #10
   1fed4:	strb	r1, [r0]
   1fed8:	ldr	r2, [r4, #44]	; 0x2c
   1fedc:	mov	r0, r4
   1fee0:	mov	r1, #1
   1fee4:	blx	r2
   1fee8:	ldr	r1, [r4, #36]	; 0x24
   1feec:	mvn	r0, #0
   1fef0:	cmp	r1, #0
   1fef4:	beq	1ff00 <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   1fef8:	sub	sp, fp, #16
   1fefc:	pop	{r4, r5, r6, sl, fp, pc}
   1ff00:	ldr	r1, [r4, #12]
   1ff04:	ldr	r2, [r4, #20]
   1ff08:	ldr	r0, [r4]
   1ff0c:	add	r1, r2, r1
   1ff10:	sub	r0, r1, r0
   1ff14:	sub	sp, fp, #16
   1ff18:	pop	{r4, r5, r6, sl, fp, pc}
   1ff1c:	ldr	r0, [r4, #36]	; 0x24
   1ff20:	movw	r1, #5422	; 0x152e
   1ff24:	movw	r3, #6749	; 0x1a5d
   1ff28:	movw	r2, #1019	; 0x3fb
   1ff2c:	movt	r1, #2
   1ff30:	movt	r3, #2
   1ff34:	cmp	r0, #0
   1ff38:	moveq	r0, #1
   1ff3c:	streq	r0, [r4, #36]	; 0x24
   1ff40:	movw	r0, #6718	; 0x1a3e
   1ff44:	movt	r0, #2
   1ff48:	bl	1299c <__assert_fail@plt>
   1ff4c:	ldr	r0, [r4, #36]	; 0x24
   1ff50:	movw	r1, #5422	; 0x152e
   1ff54:	movw	r3, #6749	; 0x1a5d
   1ff58:	movw	r2, #1028	; 0x404
   1ff5c:	movt	r1, #2
   1ff60:	movt	r3, #2
   1ff64:	cmp	r0, #0
   1ff68:	moveq	r0, #1
   1ff6c:	streq	r0, [r4, #36]	; 0x24
   1ff70:	movw	r0, #6828	; 0x1aac
   1ff74:	movt	r0, #2
   1ff78:	bl	1299c <__assert_fail@plt>

0001ff7c <flatcc_json_printer_table_as_root@@Base>:
   1ff7c:	push	{r4, r5, r6, sl, fp, lr}
   1ff80:	add	fp, sp, #16
   1ff84:	sub	sp, sp, #24
   1ff88:	cmp	r1, #0
   1ff8c:	mov	r4, r0
   1ff90:	mov	r0, #0
   1ff94:	cmpne	r2, #7
   1ff98:	str	r0, [sp, #4]
   1ff9c:	bls	2017c <flatcc_json_printer_table_as_root@@Base+0x200>
   1ffa0:	mov	r5, r1
   1ffa4:	cmp	r3, #0
   1ffa8:	beq	1ffd0 <flatcc_json_printer_table_as_root@@Base+0x54>
   1ffac:	add	r0, sp, #4
   1ffb0:	mov	r1, r3
   1ffb4:	mov	r2, #4
   1ffb8:	bl	12954 <strncpy@plt>
   1ffbc:	ldr	r0, [sp, #4]
   1ffc0:	cmp	r0, #0
   1ffc4:	ldrne	r1, [r5, #4]
   1ffc8:	cmpne	r1, r0
   1ffcc:	bne	201ac <flatcc_json_printer_table_as_root@@Base+0x230>
   1ffd0:	ldr	r3, [r4, #32]
   1ffd4:	ldr	r1, [r4, #20]
   1ffd8:	ldr	r0, [r5]
   1ffdc:	ldr	r2, [fp, #8]
   1ffe0:	add	r3, r3, #1
   1ffe4:	str	r3, [r4, #32]
   1ffe8:	add	r3, r1, #1
   1ffec:	str	r3, [r4, #20]
   1fff0:	mov	r3, #123	; 0x7b
   1fff4:	strb	r3, [r1]
   1fff8:	mov	r1, #99	; 0x63
   1fffc:	str	r1, [sp, #16]
   20000:	mov	r1, #0
   20004:	str	r1, [sp, #20]
   20008:	add	r1, r5, r0
   2000c:	str	r1, [sp, #4]
   20010:	ldr	r0, [r5, r0]
   20014:	sub	r3, r1, r0
   20018:	str	r3, [sp, #8]
   2001c:	ldrh	r0, [r1, -r0]
   20020:	add	r1, sp, #4
   20024:	str	r0, [sp, #12]
   20028:	mov	r0, r4
   2002c:	blx	r2
   20030:	ldrb	r1, [r4, #25]
   20034:	ldr	r0, [r4, #20]
   20038:	cmp	r1, #0
   2003c:	beq	200fc <flatcc_json_printer_table_as_root@@Base+0x180>
   20040:	add	r1, r0, #1
   20044:	str	r1, [r4, #20]
   20048:	mov	r1, #10
   2004c:	strb	r1, [r0]
   20050:	ldr	r0, [r4, #32]
   20054:	sub	r2, r0, #1
   20058:	str	r2, [r4, #32]
   2005c:	ldrb	r3, [r4, #25]
   20060:	ldr	r0, [r4, #20]
   20064:	ldr	r1, [r4, #16]
   20068:	mla	r6, r2, r3, r0
   2006c:	mul	r5, r2, r3
   20070:	cmp	r6, r1
   20074:	bls	200e4 <flatcc_json_printer_table_as_root@@Base+0x168>
   20078:	cmp	r0, r1
   2007c:	bcc	20098 <flatcc_json_printer_table_as_root@@Base+0x11c>
   20080:	ldr	r2, [r4, #44]	; 0x2c
   20084:	mov	r0, r4
   20088:	mov	r1, #0
   2008c:	blx	r2
   20090:	ldr	r1, [r4, #16]
   20094:	ldr	r0, [r4, #20]
   20098:	sub	r6, r1, r0
   2009c:	cmp	r6, r5
   200a0:	bcs	200e4 <flatcc_json_printer_table_as_root@@Base+0x168>
   200a4:	mov	r1, #32
   200a8:	mov	r2, r6
   200ac:	bl	12948 <memset@plt>
   200b0:	ldr	r0, [r4, #20]
   200b4:	ldr	r2, [r4, #44]	; 0x2c
   200b8:	mov	r1, #0
   200bc:	add	r0, r0, r6
   200c0:	str	r0, [r4, #20]
   200c4:	mov	r0, r4
   200c8:	blx	r2
   200cc:	ldr	r1, [r4, #16]
   200d0:	ldr	r0, [r4, #20]
   200d4:	sub	r5, r5, r6
   200d8:	sub	r6, r1, r0
   200dc:	cmp	r5, r6
   200e0:	bhi	200a4 <flatcc_json_printer_table_as_root@@Base+0x128>
   200e4:	mov	r1, #32
   200e8:	mov	r2, r5
   200ec:	bl	12948 <memset@plt>
   200f0:	ldr	r0, [r4, #20]
   200f4:	add	r0, r0, r5
   200f8:	str	r0, [r4, #20]
   200fc:	add	r1, r0, #1
   20100:	str	r1, [r4, #20]
   20104:	mov	r1, #125	; 0x7d
   20108:	strb	r1, [r0]
   2010c:	ldrb	r0, [r4, #25]
   20110:	cmp	r0, #0
   20114:	beq	20138 <flatcc_json_printer_table_as_root@@Base+0x1bc>
   20118:	ldr	r0, [r4, #32]
   2011c:	cmp	r0, #0
   20120:	bne	20138 <flatcc_json_printer_table_as_root@@Base+0x1bc>
   20124:	ldr	r0, [r4, #20]
   20128:	add	r1, r0, #1
   2012c:	str	r1, [r4, #20]
   20130:	mov	r1, #10
   20134:	strb	r1, [r0]
   20138:	ldr	r2, [r4, #44]	; 0x2c
   2013c:	mov	r0, r4
   20140:	mov	r1, #1
   20144:	blx	r2
   20148:	ldr	r1, [r4, #36]	; 0x24
   2014c:	mvn	r0, #0
   20150:	cmp	r1, #0
   20154:	beq	20160 <flatcc_json_printer_table_as_root@@Base+0x1e4>
   20158:	sub	sp, fp, #16
   2015c:	pop	{r4, r5, r6, sl, fp, pc}
   20160:	ldr	r1, [r4, #12]
   20164:	ldr	r2, [r4, #20]
   20168:	ldr	r0, [r4]
   2016c:	add	r1, r2, r1
   20170:	sub	r0, r1, r0
   20174:	sub	sp, fp, #16
   20178:	pop	{r4, r5, r6, sl, fp, pc}
   2017c:	ldr	r0, [r4, #36]	; 0x24
   20180:	movw	r1, #5422	; 0x152e
   20184:	movw	r3, #6749	; 0x1a5d
   20188:	movw	r2, #1019	; 0x3fb
   2018c:	movt	r1, #2
   20190:	movt	r3, #2
   20194:	cmp	r0, #0
   20198:	moveq	r0, #1
   2019c:	streq	r0, [r4, #36]	; 0x24
   201a0:	movw	r0, #6718	; 0x1a3e
   201a4:	movt	r0, #2
   201a8:	bl	1299c <__assert_fail@plt>
   201ac:	ldr	r0, [r4, #36]	; 0x24
   201b0:	movw	r1, #5422	; 0x152e
   201b4:	movw	r3, #6749	; 0x1a5d
   201b8:	movw	r2, #1028	; 0x404
   201bc:	movt	r1, #2
   201c0:	movt	r3, #2
   201c4:	cmp	r0, #0
   201c8:	moveq	r0, #1
   201cc:	streq	r0, [r4, #36]	; 0x24
   201d0:	movw	r0, #6828	; 0x1aac
   201d4:	movt	r0, #2
   201d8:	bl	1299c <__assert_fail@plt>

000201dc <flatcc_json_printer_struct_as_nested_root@@Base>:
   201dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   201e0:	add	fp, sp, #24
   201e4:	sub	sp, sp, #8
   201e8:	mov	r6, r1
   201ec:	ldr	r1, [r1, #8]
   201f0:	mov	r4, r0
   201f4:	mov	r0, #4
   201f8:	add	r0, r0, r2, lsl #1
   201fc:	cmp	r0, r1
   20200:	bge	20220 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   20204:	ldr	r1, [r6, #4]
   20208:	add	r0, r1, r0
   2020c:	ldrh	r0, [r0]
   20210:	cmp	r0, #0
   20214:	ldrne	r1, [r6]
   20218:	addsne	r0, r1, r0
   2021c:	bne	20228 <flatcc_json_printer_struct_as_nested_root@@Base+0x4c>
   20220:	sub	sp, fp, #24
   20224:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20228:	ldr	r7, [r0]
   2022c:	mov	r1, #0
   20230:	ldr	r0, [r7, r0]!
   20234:	str	r1, [sp, #4]
   20238:	cmp	r7, #0
   2023c:	cmpne	r0, #7
   20240:	bls	203c0 <flatcc_json_printer_struct_as_nested_root@@Base+0x1e4>
   20244:	ldr	r1, [fp, #12]
   20248:	mov	r5, r3
   2024c:	cmp	r1, #0
   20250:	beq	20274 <flatcc_json_printer_struct_as_nested_root@@Base+0x98>
   20254:	add	r0, sp, #4
   20258:	mov	r2, #4
   2025c:	bl	12954 <strncpy@plt>
   20260:	ldr	r0, [sp, #4]
   20264:	cmp	r0, #0
   20268:	ldrne	r1, [r7, #4]
   2026c:	cmpne	r1, r0
   20270:	bne	203f0 <flatcc_json_printer_struct_as_nested_root@@Base+0x214>
   20274:	ldr	r0, [r6, #16]
   20278:	ldr	r2, [fp, #8]
   2027c:	ldr	r8, [fp, #16]
   20280:	add	r1, r0, #1
   20284:	cmp	r0, #0
   20288:	str	r1, [r6, #16]
   2028c:	ldrne	r0, [r4, #20]
   20290:	addne	r1, r0, #1
   20294:	strne	r1, [r4, #20]
   20298:	movne	r1, #44	; 0x2c
   2029c:	strbne	r1, [r0]
   202a0:	mov	r0, r4
   202a4:	mov	r1, r5
   202a8:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   202ac:	ldr	r1, [r4, #32]
   202b0:	ldr	r0, [r4, #20]
   202b4:	add	r1, r1, #1
   202b8:	str	r1, [r4, #32]
   202bc:	add	r1, r0, #1
   202c0:	str	r1, [r4, #20]
   202c4:	mov	r1, #123	; 0x7b
   202c8:	strb	r1, [r0]
   202cc:	ldr	r0, [r7]
   202d0:	add	r1, r7, r0
   202d4:	mov	r0, r4
   202d8:	blx	r8
   202dc:	ldrb	r1, [r4, #25]
   202e0:	ldr	r0, [r4, #20]
   202e4:	cmp	r1, #0
   202e8:	beq	203a8 <flatcc_json_printer_struct_as_nested_root@@Base+0x1cc>
   202ec:	add	r1, r0, #1
   202f0:	str	r1, [r4, #20]
   202f4:	mov	r1, #10
   202f8:	strb	r1, [r0]
   202fc:	ldr	r0, [r4, #32]
   20300:	sub	r2, r0, #1
   20304:	str	r2, [r4, #32]
   20308:	ldrb	r3, [r4, #25]
   2030c:	ldr	r0, [r4, #20]
   20310:	ldr	r1, [r4, #16]
   20314:	mla	r7, r2, r3, r0
   20318:	mul	r5, r2, r3
   2031c:	cmp	r7, r1
   20320:	bls	20390 <flatcc_json_printer_struct_as_nested_root@@Base+0x1b4>
   20324:	cmp	r0, r1
   20328:	bcc	20344 <flatcc_json_printer_struct_as_nested_root@@Base+0x168>
   2032c:	ldr	r2, [r4, #44]	; 0x2c
   20330:	mov	r0, r4
   20334:	mov	r1, #0
   20338:	blx	r2
   2033c:	ldr	r1, [r4, #16]
   20340:	ldr	r0, [r4, #20]
   20344:	sub	r6, r1, r0
   20348:	cmp	r6, r5
   2034c:	bcs	20390 <flatcc_json_printer_struct_as_nested_root@@Base+0x1b4>
   20350:	mov	r1, #32
   20354:	mov	r2, r6
   20358:	bl	12948 <memset@plt>
   2035c:	ldr	r0, [r4, #20]
   20360:	ldr	r2, [r4, #44]	; 0x2c
   20364:	mov	r1, #0
   20368:	add	r0, r0, r6
   2036c:	str	r0, [r4, #20]
   20370:	mov	r0, r4
   20374:	blx	r2
   20378:	ldr	r1, [r4, #16]
   2037c:	ldr	r0, [r4, #20]
   20380:	sub	r5, r5, r6
   20384:	sub	r6, r1, r0
   20388:	cmp	r5, r6
   2038c:	bhi	20350 <flatcc_json_printer_struct_as_nested_root@@Base+0x174>
   20390:	mov	r1, #32
   20394:	mov	r2, r5
   20398:	bl	12948 <memset@plt>
   2039c:	ldr	r0, [r4, #20]
   203a0:	add	r0, r0, r5
   203a4:	str	r0, [r4, #20]
   203a8:	add	r1, r0, #1
   203ac:	str	r1, [r4, #20]
   203b0:	mov	r1, #125	; 0x7d
   203b4:	strb	r1, [r0]
   203b8:	sub	sp, fp, #24
   203bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   203c0:	ldr	r0, [r4, #36]	; 0x24
   203c4:	movw	r1, #5422	; 0x152e
   203c8:	movw	r3, #6749	; 0x1a5d
   203cc:	movw	r2, #1019	; 0x3fb
   203d0:	movt	r1, #2
   203d4:	movt	r3, #2
   203d8:	cmp	r0, #0
   203dc:	moveq	r0, #1
   203e0:	streq	r0, [r4, #36]	; 0x24
   203e4:	movw	r0, #6718	; 0x1a3e
   203e8:	movt	r0, #2
   203ec:	bl	1299c <__assert_fail@plt>
   203f0:	ldr	r0, [r4, #36]	; 0x24
   203f4:	movw	r1, #5422	; 0x152e
   203f8:	movw	r3, #6749	; 0x1a5d
   203fc:	movw	r2, #1028	; 0x404
   20400:	movt	r1, #2
   20404:	movt	r3, #2
   20408:	cmp	r0, #0
   2040c:	moveq	r0, #1
   20410:	streq	r0, [r4, #36]	; 0x24
   20414:	movw	r0, #6828	; 0x1aac
   20418:	movt	r0, #2
   2041c:	bl	1299c <__assert_fail@plt>

00020420 <flatcc_json_printer_table_as_nested_root@@Base>:
   20420:	push	{r4, r5, r6, r7, fp, lr}
   20424:	add	fp, sp, #16
   20428:	sub	sp, sp, #24
   2042c:	mov	r5, r1
   20430:	ldr	r1, [r1, #8]
   20434:	mov	r4, r0
   20438:	mov	r0, #4
   2043c:	add	r0, r0, r2, lsl #1
   20440:	cmp	r0, r1
   20444:	bge	20464 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   20448:	ldr	r1, [r5, #4]
   2044c:	add	r0, r1, r0
   20450:	ldrh	r0, [r0]
   20454:	cmp	r0, #0
   20458:	ldrne	r1, [r5]
   2045c:	addsne	r0, r1, r0
   20460:	bne	2046c <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   20464:	sub	sp, fp, #16
   20468:	pop	{r4, r5, r6, r7, fp, pc}
   2046c:	ldr	r7, [r0]
   20470:	mov	r1, #0
   20474:	ldr	r0, [r7, r0]!
   20478:	str	r1, [sp, #4]
   2047c:	cmp	r0, #7
   20480:	bls	20654 <flatcc_json_printer_table_as_nested_root@@Base+0x234>
   20484:	ldr	r1, [fp, #12]
   20488:	mov	r6, r3
   2048c:	cmp	r1, #0
   20490:	beq	204b4 <flatcc_json_printer_table_as_nested_root@@Base+0x94>
   20494:	add	r0, sp, #4
   20498:	mov	r2, #4
   2049c:	bl	12954 <strncpy@plt>
   204a0:	ldr	r0, [sp, #4]
   204a4:	cmp	r0, #0
   204a8:	ldrne	r1, [r7, #8]
   204ac:	cmpne	r1, r0
   204b0:	bne	20684 <flatcc_json_printer_table_as_nested_root@@Base+0x264>
   204b4:	ldr	r0, [r5, #16]
   204b8:	ldr	r2, [fp, #8]
   204bc:	add	r1, r0, #1
   204c0:	cmp	r0, #0
   204c4:	str	r1, [r5, #16]
   204c8:	ldrne	r0, [r4, #20]
   204cc:	addne	r1, r0, #1
   204d0:	strne	r1, [r4, #20]
   204d4:	movne	r1, #44	; 0x2c
   204d8:	strbne	r1, [r0]
   204dc:	mov	r0, r4
   204e0:	mov	r1, r6
   204e4:	bl	16290 <flatcc_json_printer_string_field@@Base+0x8c>
   204e8:	ldr	r0, [r5, #12]
   204ec:	subs	r0, r0, #1
   204f0:	beq	20638 <flatcc_json_printer_table_as_nested_root@@Base+0x218>
   204f4:	add	r1, r7, #4
   204f8:	ldr	r7, [r4, #32]
   204fc:	ldr	r2, [fp, #16]
   20500:	ldr	r3, [r1]
   20504:	add	r7, r7, #1
   20508:	add	r1, r1, r3
   2050c:	ldr	r3, [r4, #20]
   20510:	str	r7, [r4, #32]
   20514:	add	r7, r3, #1
   20518:	str	r7, [r4, #20]
   2051c:	mov	r7, #123	; 0x7b
   20520:	strb	r7, [r3]
   20524:	str	r0, [sp, #16]
   20528:	mov	r0, #0
   2052c:	str	r0, [sp, #20]
   20530:	str	r1, [sp, #4]
   20534:	ldr	r0, [r1]
   20538:	sub	r3, r1, r0
   2053c:	str	r3, [sp, #8]
   20540:	ldrh	r0, [r1, -r0]
   20544:	add	r1, sp, #4
   20548:	str	r0, [sp, #12]
   2054c:	mov	r0, r4
   20550:	blx	r2
   20554:	ldrb	r1, [r4, #25]
   20558:	ldr	r0, [r4, #20]
   2055c:	cmp	r1, #0
   20560:	beq	20620 <flatcc_json_printer_table_as_nested_root@@Base+0x200>
   20564:	add	r1, r0, #1
   20568:	str	r1, [r4, #20]
   2056c:	mov	r1, #10
   20570:	strb	r1, [r0]
   20574:	ldr	r0, [r4, #32]
   20578:	sub	r2, r0, #1
   2057c:	str	r2, [r4, #32]
   20580:	ldrb	r3, [r4, #25]
   20584:	ldr	r0, [r4, #20]
   20588:	ldr	r1, [r4, #16]
   2058c:	mla	r7, r2, r3, r0
   20590:	mul	r5, r2, r3
   20594:	cmp	r7, r1
   20598:	bls	20608 <flatcc_json_printer_table_as_nested_root@@Base+0x1e8>
   2059c:	cmp	r0, r1
   205a0:	bcc	205bc <flatcc_json_printer_table_as_nested_root@@Base+0x19c>
   205a4:	ldr	r2, [r4, #44]	; 0x2c
   205a8:	mov	r0, r4
   205ac:	mov	r1, #0
   205b0:	blx	r2
   205b4:	ldr	r1, [r4, #16]
   205b8:	ldr	r0, [r4, #20]
   205bc:	sub	r6, r1, r0
   205c0:	cmp	r6, r5
   205c4:	bcs	20608 <flatcc_json_printer_table_as_nested_root@@Base+0x1e8>
   205c8:	mov	r1, #32
   205cc:	mov	r2, r6
   205d0:	bl	12948 <memset@plt>
   205d4:	ldr	r0, [r4, #20]
   205d8:	ldr	r2, [r4, #44]	; 0x2c
   205dc:	mov	r1, #0
   205e0:	add	r0, r0, r6
   205e4:	str	r0, [r4, #20]
   205e8:	mov	r0, r4
   205ec:	blx	r2
   205f0:	ldr	r1, [r4, #16]
   205f4:	ldr	r0, [r4, #20]
   205f8:	sub	r5, r5, r6
   205fc:	sub	r6, r1, r0
   20600:	cmp	r5, r6
   20604:	bhi	205c8 <flatcc_json_printer_table_as_nested_root@@Base+0x1a8>
   20608:	mov	r1, #32
   2060c:	mov	r2, r5
   20610:	bl	12948 <memset@plt>
   20614:	ldr	r0, [r4, #20]
   20618:	add	r0, r0, r5
   2061c:	str	r0, [r4, #20]
   20620:	add	r1, r0, #1
   20624:	str	r1, [r4, #20]
   20628:	mov	r1, #125	; 0x7d
   2062c:	strb	r1, [r0]
   20630:	sub	sp, fp, #16
   20634:	pop	{r4, r5, r6, r7, fp, pc}
   20638:	ldr	r0, [r4, #36]	; 0x24
   2063c:	cmp	r0, #0
   20640:	bne	20464 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   20644:	mov	r0, #2
   20648:	str	r0, [r4, #36]	; 0x24
   2064c:	sub	sp, fp, #16
   20650:	pop	{r4, r5, r6, r7, fp, pc}
   20654:	ldr	r0, [r4, #36]	; 0x24
   20658:	movw	r1, #5422	; 0x152e
   2065c:	movw	r3, #6749	; 0x1a5d
   20660:	movw	r2, #1019	; 0x3fb
   20664:	movt	r1, #2
   20668:	movt	r3, #2
   2066c:	cmp	r0, #0
   20670:	moveq	r0, #1
   20674:	streq	r0, [r4, #36]	; 0x24
   20678:	movw	r0, #6718	; 0x1a3e
   2067c:	movt	r0, #2
   20680:	bl	1299c <__assert_fail@plt>
   20684:	ldr	r0, [r4, #36]	; 0x24
   20688:	movw	r1, #5422	; 0x152e
   2068c:	movw	r3, #6749	; 0x1a5d
   20690:	movw	r2, #1028	; 0x404
   20694:	movt	r1, #2
   20698:	movt	r3, #2
   2069c:	cmp	r0, #0
   206a0:	moveq	r0, #1
   206a4:	streq	r0, [r4, #36]	; 0x24
   206a8:	movw	r0, #6828	; 0x1aac
   206ac:	movt	r0, #2
   206b0:	bl	1299c <__assert_fail@plt>

000206b4 <flatcc_json_printer_init@@Base>:
   206b4:	push	{r4, r5, r6, sl, fp, lr}
   206b8:	add	fp, sp, #16
   206bc:	mov	r5, r0
   206c0:	mov	r4, #0
   206c4:	vmov.i32	q8, #0	; 0x00000000
   206c8:	cmp	r1, #0
   206cc:	movw	r6, #16448	; 0x4040
   206d0:	str	r4, [r0, #32]
   206d4:	mov	r0, #36	; 0x24
   206d8:	mov	r2, r5
   206dc:	vst1.32	{d16-d17}, [r2], r0
   206e0:	add	r0, r5, #16
   206e4:	vst1.32	{d16-d17}, [r0]
   206e8:	movw	r0, #12428	; 0x308c
   206ec:	str	r4, [r2]
   206f0:	movw	r2, #1872	; 0x750
   206f4:	movt	r0, #3
   206f8:	movt	r2, #2
   206fc:	ldr	r0, [r0]
   20700:	movne	r0, r1
   20704:	str	r0, [r5, #40]	; 0x28
   20708:	movw	r0, #16448	; 0x4040
   2070c:	str	r2, [r5, #44]	; 0x2c
   20710:	bl	1290c <malloc@plt>
   20714:	cmp	r0, #0
   20718:	str	r0, [r5]
   2071c:	mvneq	r4, #0
   20720:	moveq	r0, r4
   20724:	popeq	{r4, r5, r6, sl, fp, pc}
   20728:	mov	r1, #1
   2072c:	strb	r1, [r5, #24]
   20730:	mov	r1, #16384	; 0x4000
   20734:	str	r6, [r5, #4]
   20738:	str	r1, [r5, #8]
   2073c:	add	r1, r0, #16384	; 0x4000
   20740:	str	r1, [r5, #16]
   20744:	str	r0, [r5, #20]
   20748:	mov	r0, r4
   2074c:	pop	{r4, r5, r6, sl, fp, pc}
   20750:	push	{r4, r5, r6, sl, fp, lr}
   20754:	add	fp, sp, #16
   20758:	mov	r4, r0
   2075c:	cmp	r1, #0
   20760:	beq	2076c <flatcc_json_printer_init@@Base+0xb8>
   20764:	ldr	r5, [r4, #20]
   20768:	b	2077c <flatcc_json_printer_init@@Base+0xc8>
   2076c:	ldr	r6, [r4, #16]
   20770:	ldr	r5, [r4, #20]
   20774:	cmp	r5, r6
   20778:	bcs	207b4 <flatcc_json_printer_init@@Base+0x100>
   2077c:	ldr	r0, [r4]
   20780:	ldr	r3, [r4, #40]	; 0x28
   20784:	mov	r2, #1
   20788:	sub	r5, r5, r0
   2078c:	mov	r1, r5
   20790:	bl	128f4 <fwrite@plt>
   20794:	ldr	r1, [r4, #12]
   20798:	ldr	r0, [r4]
   2079c:	str	r0, [r4, #20]
   207a0:	add	r1, r1, r5
   207a4:	str	r1, [r4, #12]
   207a8:	mov	r1, #0
   207ac:	strb	r1, [r0]
   207b0:	pop	{r4, r5, r6, sl, fp, pc}
   207b4:	ldr	r0, [r4]
   207b8:	ldr	r1, [r4, #8]
   207bc:	ldr	r3, [r4, #40]	; 0x28
   207c0:	mov	r2, #1
   207c4:	bl	128f4 <fwrite@plt>
   207c8:	ldr	r0, [r4]
   207cc:	ldr	r1, [r4, #8]
   207d0:	sub	r5, r5, r6
   207d4:	mov	r2, r5
   207d8:	add	r1, r0, r1
   207dc:	bl	128b8 <memcpy@plt>
   207e0:	ldr	r0, [r4]
   207e4:	ldr	r1, [r4, #8]
   207e8:	ldr	r2, [r4, #12]
   207ec:	add	r0, r0, r5
   207f0:	add	r1, r2, r1
   207f4:	str	r0, [r4, #20]
   207f8:	str	r1, [r4, #12]
   207fc:	mov	r1, #0
   20800:	strb	r1, [r0]
   20804:	pop	{r4, r5, r6, sl, fp, pc}

00020808 <flatcc_json_printer_init_buffer@@Base>:
   20808:	cmp	r2, #63	; 0x3f
   2080c:	bls	2084c <flatcc_json_printer_init_buffer@@Base+0x44>
   20810:	vmov.i32	q8, #0	; 0x00000000
   20814:	add	r3, r0, #12
   20818:	vst1.32	{d16-d17}, [r3]
   2081c:	movw	r3, #2164	; 0x874
   20820:	movt	r3, #2
   20824:	str	r3, [r0, #44]	; 0x2c
   20828:	add	r3, r0, #28
   2082c:	vst1.32	{d16-d17}, [r3]
   20830:	sub	r3, r2, #64	; 0x40
   20834:	stm	r0, {r1, r2, r3}
   20838:	add	r2, r1, r3
   2083c:	str	r2, [r0, #16]
   20840:	str	r1, [r0, #20]
   20844:	mov	r0, #0
   20848:	bx	lr
   2084c:	push	{fp, lr}
   20850:	mov	fp, sp
   20854:	movw	r0, #5705	; 0x1649
   20858:	movw	r1, #5422	; 0x152e
   2085c:	movw	r3, #5746	; 0x1672
   20860:	movw	r2, #1165	; 0x48d
   20864:	movt	r0, #2
   20868:	movt	r1, #2
   2086c:	movt	r3, #2
   20870:	bl	1299c <__assert_fail@plt>
   20874:	ldr	r2, [r0, #16]
   20878:	ldr	r1, [r0, #20]
   2087c:	cmp	r1, r2
   20880:	bcs	20894 <flatcc_json_printer_init_buffer@@Base+0x8c>
   20884:	mov	r2, r1
   20888:	mov	r0, #0
   2088c:	strb	r0, [r2]
   20890:	bx	lr
   20894:	ldr	r2, [r0, #36]	; 0x24
   20898:	cmp	r2, #0
   2089c:	moveq	r2, #3
   208a0:	streq	r2, [r0, #36]	; 0x24
   208a4:	ldr	r2, [r0]
   208a8:	ldr	r3, [r0, #12]
   208ac:	sub	r1, r1, r2
   208b0:	str	r2, [r0, #20]
   208b4:	add	r1, r1, r3
   208b8:	str	r1, [r0, #12]
   208bc:	mov	r0, #0
   208c0:	strb	r0, [r2]
   208c4:	bx	lr

000208c8 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   208c8:	push	{r4, r5, fp, lr}
   208cc:	add	fp, sp, #8
   208d0:	mov	r5, r1
   208d4:	cmp	r1, #0
   208d8:	mov	r4, r0
   208dc:	vmov.i32	q8, #0	; 0x00000000
   208e0:	add	r0, r0, #28
   208e4:	movweq	r5, #4096	; 0x1000
   208e8:	vst1.32	{d16-d17}, [r0]
   208ec:	add	r0, r4, #12
   208f0:	cmp	r5, #64	; 0x40
   208f4:	vst1.32	{d16-d17}, [r0]
   208f8:	movls	r5, #64	; 0x40
   208fc:	mov	r0, r5
   20900:	bl	1290c <malloc@plt>
   20904:	mov	r1, r0
   20908:	mov	r0, #1
   2090c:	movw	r2, #2380	; 0x94c
   20910:	strb	r0, [r4, #24]
   20914:	sub	r0, r5, #64	; 0x40
   20918:	stm	r4, {r1, r5}
   2091c:	movt	r2, #2
   20920:	cmp	r1, #0
   20924:	str	r0, [r4, #8]
   20928:	add	r0, r1, r0
   2092c:	str	r2, [r4, #44]	; 0x2c
   20930:	str	r0, [r4, #16]
   20934:	mov	r0, #0
   20938:	str	r1, [r4, #20]
   2093c:	moveq	r0, #3
   20940:	streq	r0, [r4, #36]	; 0x24
   20944:	mvneq	r0, #0
   20948:	pop	{r4, r5, fp, pc}
   2094c:	push	{r4, r5, fp, lr}
   20950:	add	fp, sp, #8
   20954:	mov	r4, r0
   20958:	ldr	r0, [r0]
   2095c:	mov	r1, #0
   20960:	ldr	r5, [r4, #20]
   20964:	strb	r1, [r5], -r0
   20968:	ldr	r0, [r4, #16]
   2096c:	ldr	r1, [r4, #20]
   20970:	cmp	r1, r0
   20974:	popcc	{r4, r5, fp, pc}
   20978:	ldm	r4, {r0, r1}
   2097c:	lsl	r1, r1, #1
   20980:	bl	128e8 <realloc@plt>
   20984:	cmp	r0, #0
   20988:	beq	209c4 <flatcc_json_printer_init_dynamic_buffer@@Base+0xfc>
   2098c:	str	r0, [r4]
   20990:	mvn	r3, #63	; 0x3f
   20994:	add	r1, r0, r5
   20998:	ldr	r2, [r4, #4]
   2099c:	add	r3, r3, r2, lsl #1
   209a0:	lsl	r2, r2, #1
   209a4:	add	r0, r0, r3
   209a8:	str	r3, [r4, #8]
   209ac:	str	r2, [r4, #4]
   209b0:	str	r0, [r4, #16]
   209b4:	str	r1, [r4, #20]
   209b8:	mov	r0, #0
   209bc:	strb	r0, [r1]
   209c0:	pop	{r4, r5, fp, pc}
   209c4:	ldr	r0, [r4, #36]	; 0x24
   209c8:	cmp	r0, #0
   209cc:	moveq	r0, #3
   209d0:	streq	r0, [r4, #36]	; 0x24
   209d4:	ldr	r0, [r4, #12]
   209d8:	ldr	r1, [r4]
   209dc:	add	r0, r0, r5
   209e0:	str	r1, [r4, #20]
   209e4:	str	r0, [r4, #12]
   209e8:	mov	r0, #0
   209ec:	strb	r0, [r1]
   209f0:	pop	{r4, r5, fp, pc}

000209f4 <flatcc_json_printer_get_buffer@@Base>:
   209f4:	push	{r4, r5, fp, lr}
   209f8:	add	fp, sp, #8
   209fc:	ldr	r2, [r0, #44]	; 0x2c
   20a00:	mov	r4, r1
   20a04:	mov	r1, #0
   20a08:	mov	r5, r0
   20a0c:	blx	r2
   20a10:	cmp	r4, #0
   20a14:	ldrne	r0, [r5]
   20a18:	ldrne	r1, [r5, #20]
   20a1c:	subne	r1, r1, r0
   20a20:	strne	r1, [r4]
   20a24:	popne	{r4, r5, fp, pc}
   20a28:	ldr	r0, [r5]
   20a2c:	pop	{r4, r5, fp, pc}

00020a30 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   20a30:	push	{r4, r5, fp, lr}
   20a34:	add	fp, sp, #8
   20a38:	ldr	r2, [r0, #44]	; 0x2c
   20a3c:	mov	r5, r1
   20a40:	mov	r1, #0
   20a44:	mov	r4, r0
   20a48:	blx	r2
   20a4c:	cmp	r5, #0
   20a50:	ldr	r0, [r4]
   20a54:	vmov.i32	q8, #0	; 0x00000000
   20a58:	add	r2, r4, #16
   20a5c:	ldrne	r1, [r4, #20]
   20a60:	subne	r1, r1, r0
   20a64:	strne	r1, [r5]
   20a68:	mov	r1, #32
   20a6c:	vst1.32	{d16-d17}, [r2]
   20a70:	vst1.32	{d16-d17}, [r4], r1
   20a74:	vst1.32	{d16-d17}, [r4]
   20a78:	pop	{r4, r5, fp, pc}

00020a7c <flatcc_json_printer_clear@@Base>:
   20a7c:	push	{r4, sl, fp, lr}
   20a80:	add	fp, sp, #8
   20a84:	mov	r4, r0
   20a88:	ldrb	r0, [r0, #24]
   20a8c:	cmp	r0, #0
   20a90:	ldrne	r0, [r4]
   20a94:	cmpne	r0, #0
   20a98:	beq	20aa0 <flatcc_json_printer_clear@@Base+0x24>
   20a9c:	bl	128ac <free@plt>
   20aa0:	vmov.i32	q8, #0	; 0x00000000
   20aa4:	mov	r0, #32
   20aa8:	add	r1, r4, #16
   20aac:	vst1.32	{d16-d17}, [r4], r0
   20ab0:	vst1.32	{d16-d17}, [r1]
   20ab4:	vst1.32	{d16-d17}, [r4]
   20ab8:	pop	{r4, sl, fp, pc}
   20abc:	cmp	r2, #0
   20ac0:	bxeq	lr
   20ac4:	push	{r4, r5, fp, lr}
   20ac8:	add	fp, sp, #8
   20acc:	ldr	lr, [r2]
   20ad0:	bic	ip, r3, #224	; 0xe0
   20ad4:	cmp	ip, #0
   20ad8:	beq	20af8 <flatcc_json_printer_clear@@Base+0x7c>
   20adc:	cmp	ip, #1
   20ae0:	bne	20bc0 <flatcc_json_printer_clear@@Base+0x144>
   20ae4:	movw	ip, #6653	; 0x19fd
   20ae8:	movt	ip, #2
   20aec:	cmp	lr, #3
   20af0:	bcs	20b08 <flatcc_json_printer_clear@@Base+0x8c>
   20af4:	b	20b68 <flatcc_json_printer_clear@@Base+0xec>
   20af8:	movw	ip, #6588	; 0x19bc
   20afc:	movt	ip, #2
   20b00:	cmp	lr, #3
   20b04:	bcc	20b68 <flatcc_json_printer_clear@@Base+0xec>
   20b08:	ldrb	r4, [r1]
   20b0c:	sub	lr, lr, #3
   20b10:	cmp	lr, #2
   20b14:	ldrb	r4, [ip, r4, lsr #2]
   20b18:	strb	r4, [r0]
   20b1c:	ldrb	r5, [r1, #1]
   20b20:	ldrb	r4, [r1]
   20b24:	lsr	r5, r5, #4
   20b28:	bfi	r5, r4, #4, #2
   20b2c:	ldrb	r4, [ip, r5]
   20b30:	strb	r4, [r0, #1]
   20b34:	ldrb	r5, [r1, #2]
   20b38:	ldrb	r4, [r1, #1]
   20b3c:	lsr	r5, r5, #6
   20b40:	bfi	r5, r4, #2, #4
   20b44:	ldrb	r4, [ip, r5]
   20b48:	strb	r4, [r0, #2]
   20b4c:	ldrb	r4, [r1, #2]
   20b50:	add	r1, r1, #3
   20b54:	and	r4, r4, #63	; 0x3f
   20b58:	ldrb	r4, [ip, r4]
   20b5c:	strb	r4, [r0, #3]
   20b60:	add	r0, r0, #4
   20b64:	bhi	20b08 <flatcc_json_printer_clear@@Base+0x8c>
   20b68:	and	r3, r3, #128	; 0x80
   20b6c:	cmp	lr, #1
   20b70:	beq	20bd4 <flatcc_json_printer_clear@@Base+0x158>
   20b74:	cmp	lr, #2
   20b78:	bne	20bfc <flatcc_json_printer_clear@@Base+0x180>
   20b7c:	ldrb	r5, [r1]
   20b80:	cmp	r3, #0
   20b84:	ldrb	r5, [ip, r5, lsr #2]
   20b88:	strb	r5, [r0]
   20b8c:	ldrb	r4, [r1, #1]
   20b90:	ldrb	r5, [r1]
   20b94:	lsr	r4, r4, #4
   20b98:	bfi	r4, r5, #4, #2
   20b9c:	ldrb	r5, [ip, r4]
   20ba0:	strb	r5, [r0, #1]
   20ba4:	ldrb	r1, [r1, #1]
   20ba8:	and	r1, r1, #15
   20bac:	ldrb	r1, [ip, r1, lsl #2]
   20bb0:	strb	r1, [r0, #2]
   20bb4:	movne	r1, #61	; 0x3d
   20bb8:	strbne	r1, [r0, #3]
   20bbc:	b	20bfc <flatcc_json_printer_clear@@Base+0x180>
   20bc0:	mov	r0, lr
   20bc4:	sub	r0, lr, r0
   20bc8:	str	r0, [r2]
   20bcc:	pop	{r4, r5, fp, lr}
   20bd0:	bx	lr
   20bd4:	ldrb	r5, [r1]
   20bd8:	cmp	r3, #0
   20bdc:	ldrb	r5, [ip, r5, lsr #2]
   20be0:	strb	r5, [r0]
   20be4:	ldrb	r1, [r1]
   20be8:	and	r1, r1, #3
   20bec:	ldrb	r1, [ip, r1, lsl #4]
   20bf0:	strb	r1, [r0, #1]
   20bf4:	movwne	r1, #15677	; 0x3d3d
   20bf8:	strhne	r1, [r0, #2]
   20bfc:	ldr	lr, [r2]
   20c00:	mov	r0, #0
   20c04:	sub	r0, lr, r0
   20c08:	str	r0, [r2]
   20c0c:	pop	{r4, r5, fp, lr}
   20c10:	bx	lr
   20c14:	cmp	r3, #0
   20c18:	cmpeq	r2, #0
   20c1c:	bne	20c34 <flatcc_json_printer_clear@@Base+0x1b8>
   20c20:	cmp	r1, #0
   20c24:	cmpeq	r0, #0
   20c28:	mvnne	r1, #0
   20c2c:	mvnne	r0, #0
   20c30:	b	20c50 <flatcc_json_printer_clear@@Base+0x1d4>
   20c34:	sub	sp, sp, #8
   20c38:	push	{sp, lr}
   20c3c:	bl	20c60 <flatcc_json_printer_clear@@Base+0x1e4>
   20c40:	ldr	lr, [sp, #4]
   20c44:	add	sp, sp, #8
   20c48:	pop	{r2, r3}
   20c4c:	bx	lr
   20c50:	push	{r1, lr}
   20c54:	mov	r0, #8
   20c58:	bl	1287c <raise@plt>
   20c5c:	pop	{r1, pc}
   20c60:	cmp	r1, r3
   20c64:	cmpeq	r0, r2
   20c68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c6c:	mov	r4, r0
   20c70:	movcc	r0, #0
   20c74:	mov	r5, r1
   20c78:	ldr	lr, [sp, #36]	; 0x24
   20c7c:	movcc	r1, r0
   20c80:	bcc	20d7c <flatcc_json_printer_clear@@Base+0x300>
   20c84:	cmp	r3, #0
   20c88:	clzeq	ip, r2
   20c8c:	clzne	ip, r3
   20c90:	addeq	ip, ip, #32
   20c94:	cmp	r5, #0
   20c98:	clzeq	r1, r4
   20c9c:	addeq	r1, r1, #32
   20ca0:	clzne	r1, r5
   20ca4:	sub	ip, ip, r1
   20ca8:	sub	sl, ip, #32
   20cac:	lsl	r9, r3, ip
   20cb0:	rsb	fp, ip, #32
   20cb4:	orr	r9, r9, r2, lsl sl
   20cb8:	orr	r9, r9, r2, lsr fp
   20cbc:	lsl	r8, r2, ip
   20cc0:	cmp	r5, r9
   20cc4:	cmpeq	r4, r8
   20cc8:	movcc	r0, #0
   20ccc:	movcc	r1, r0
   20cd0:	bcc	20cec <flatcc_json_printer_clear@@Base+0x270>
   20cd4:	mov	r0, #1
   20cd8:	subs	r4, r4, r8
   20cdc:	lsl	r1, r0, sl
   20ce0:	orr	r1, r1, r0, lsr fp
   20ce4:	lsl	r0, r0, ip
   20ce8:	sbc	r5, r5, r9
   20cec:	cmp	ip, #0
   20cf0:	beq	20d7c <flatcc_json_printer_clear@@Base+0x300>
   20cf4:	lsr	r6, r8, #1
   20cf8:	orr	r6, r6, r9, lsl #31
   20cfc:	lsr	r7, r9, #1
   20d00:	mov	r2, ip
   20d04:	b	20d28 <flatcc_json_printer_clear@@Base+0x2ac>
   20d08:	subs	r3, r4, r6
   20d0c:	sbc	r8, r5, r7
   20d10:	adds	r3, r3, r3
   20d14:	adc	r8, r8, r8
   20d18:	adds	r4, r3, #1
   20d1c:	adc	r5, r8, #0
   20d20:	subs	r2, r2, #1
   20d24:	beq	20d44 <flatcc_json_printer_clear@@Base+0x2c8>
   20d28:	cmp	r5, r7
   20d2c:	cmpeq	r4, r6
   20d30:	bcs	20d08 <flatcc_json_printer_clear@@Base+0x28c>
   20d34:	adds	r4, r4, r4
   20d38:	adc	r5, r5, r5
   20d3c:	subs	r2, r2, #1
   20d40:	bne	20d28 <flatcc_json_printer_clear@@Base+0x2ac>
   20d44:	lsr	r3, r4, ip
   20d48:	orr	r3, r3, r5, lsl fp
   20d4c:	lsr	r2, r5, ip
   20d50:	orr	r3, r3, r5, lsr sl
   20d54:	adds	r0, r0, r4
   20d58:	mov	r4, r3
   20d5c:	lsl	r3, r2, ip
   20d60:	orr	r3, r3, r4, lsl sl
   20d64:	lsl	ip, r4, ip
   20d68:	orr	r3, r3, r4, lsr fp
   20d6c:	adc	r1, r1, r5
   20d70:	subs	r0, r0, ip
   20d74:	mov	r5, r2
   20d78:	sbc	r1, r1, r3
   20d7c:	cmp	lr, #0
   20d80:	strdne	r4, [lr]
   20d84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020d88 <__libc_csu_init@@Base>:
   20d88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20d8c:	mov	r7, r0
   20d90:	ldr	r6, [pc, #72]	; 20de0 <__libc_csu_init@@Base+0x58>
   20d94:	ldr	r5, [pc, #72]	; 20de4 <__libc_csu_init@@Base+0x5c>
   20d98:	add	r6, pc, r6
   20d9c:	add	r5, pc, r5
   20da0:	sub	r6, r6, r5
   20da4:	mov	r8, r1
   20da8:	mov	r9, r2
   20dac:	bl	1285c <raise@plt-0x20>
   20db0:	asrs	r6, r6, #2
   20db4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   20db8:	mov	r4, #0
   20dbc:	add	r4, r4, #1
   20dc0:	ldr	r3, [r5], #4
   20dc4:	mov	r2, r9
   20dc8:	mov	r1, r8
   20dcc:	mov	r0, r7
   20dd0:	blx	r3
   20dd4:	cmp	r6, r4
   20dd8:	bne	20dbc <__libc_csu_init@@Base+0x34>
   20ddc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20de0:	andeq	r2, r1, ip, ror #2
   20de4:	andeq	r2, r1, r4, ror #2

00020de8 <__libc_csu_fini@@Base>:
   20de8:	bx	lr

Disassembly of section .fini:

00020dec <.fini>:
   20dec:	push	{r3, lr}
   20df0:	pop	{r3, pc}
