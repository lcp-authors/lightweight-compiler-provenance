
../repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

000110a0 <.init>:
   110a0:	push	{r3, lr}
   110a4:	bl	111ec <_start@@Base+0x3c>
   110a8:	pop	{r3, pc}

Disassembly of section .plt:

000110ac <calloc@plt-0x14>:
   110ac:	push	{lr}		; (str lr, [sp, #-4]!)
   110b0:	ldr	lr, [pc, #4]	; 110bc <calloc@plt-0x4>
   110b4:	add	lr, pc, lr
   110b8:	ldr	pc, [lr, #8]!
   110bc:	andeq	r1, r1, r4, asr #30

000110c0 <calloc@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #69632	; 0x11000
   110c8:	ldr	pc, [ip, #3908]!	; 0xf44

000110cc <strcmp@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #69632	; 0x11000
   110d4:	ldr	pc, [ip, #3900]!	; 0xf3c

000110d8 <printf@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #69632	; 0x11000
   110e0:	ldr	pc, [ip, #3892]!	; 0xf34

000110e4 <__isoc99_fscanf@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #69632	; 0x11000
   110ec:	ldr	pc, [ip, #3884]!	; 0xf2c

000110f0 <fopen@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #69632	; 0x11000
   110f8:	ldr	pc, [ip, #3876]!	; 0xf24

000110fc <free@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #69632	; 0x11000
   11104:	ldr	pc, [ip, #3868]!	; 0xf1c

00011108 <realloc@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #69632	; 0x11000
   11110:	ldr	pc, [ip, #3860]!	; 0xf14

00011114 <strcpy@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #69632	; 0x11000
   1111c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011120 <puts@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #69632	; 0x11000
   11128:	ldr	pc, [ip, #3844]!	; 0xf04

0001112c <malloc@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #69632	; 0x11000
   11134:	ldr	pc, [ip, #3836]!	; 0xefc

00011138 <__libc_start_main@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #69632	; 0x11000
   11140:	ldr	pc, [ip, #3828]!	; 0xef4

00011144 <__gmon_start__@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #69632	; 0x11000
   1114c:	ldr	pc, [ip, #3820]!	; 0xeec

00011150 <strlen@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #69632	; 0x11000
   11158:	ldr	pc, [ip, #3812]!	; 0xee4

0001115c <setvbuf@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #69632	; 0x11000
   11164:	ldr	pc, [ip, #3804]!	; 0xedc

00011168 <memset@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #69632	; 0x11000
   11170:	ldr	pc, [ip, #3796]!	; 0xed4

00011174 <putchar@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #69632	; 0x11000
   1117c:	ldr	pc, [ip, #3788]!	; 0xecc

00011180 <fclose@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #69632	; 0x11000
   11188:	ldr	pc, [ip, #3780]!	; 0xec4

0001118c <atoi@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #69632	; 0x11000
   11194:	ldr	pc, [ip, #3772]!	; 0xebc

00011198 <getline@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #69632	; 0x11000
   111a0:	ldr	pc, [ip, #3764]!	; 0xeb4

000111a4 <abort@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #69632	; 0x11000
   111ac:	ldr	pc, [ip, #3756]!	; 0xeac

Disassembly of section .text:

000111b0 <_start@@Base>:
   111b0:	mov	fp, #0
   111b4:	mov	lr, #0
   111b8:	pop	{r1}		; (ldr r1, [sp], #4)
   111bc:	mov	r2, sp
   111c0:	push	{r2}		; (str r2, [sp, #-4]!)
   111c4:	push	{r0}		; (str r0, [sp, #-4]!)
   111c8:	ldr	ip, [pc, #16]	; 111e0 <_start@@Base+0x30>
   111cc:	push	{ip}		; (str ip, [sp, #-4]!)
   111d0:	ldr	r0, [pc, #12]	; 111e4 <_start@@Base+0x34>
   111d4:	ldr	r3, [pc, #12]	; 111e8 <_start@@Base+0x38>
   111d8:	bl	11138 <__libc_start_main@plt>
   111dc:	bl	111a4 <abort@plt>
   111e0:	andeq	r2, r1, r0, lsr #20
   111e4:	andeq	r1, r1, r0, lsr #11
   111e8:	andeq	r2, r1, r0, asr #19
   111ec:	ldr	r3, [pc, #20]	; 11208 <_start@@Base+0x58>
   111f0:	ldr	r2, [pc, #20]	; 1120c <_start@@Base+0x5c>
   111f4:	add	r3, pc, r3
   111f8:	ldr	r2, [r3, r2]
   111fc:	cmp	r2, #0
   11200:	bxeq	lr
   11204:	b	11144 <__gmon_start__@plt>
   11208:	andeq	r1, r1, r4, lsl #28
   1120c:	andeq	r0, r0, ip, asr r0
   11210:	ldr	r0, [pc, #24]	; 11230 <_start@@Base+0x80>
   11214:	ldr	r3, [pc, #24]	; 11234 <_start@@Base+0x84>
   11218:	cmp	r3, r0
   1121c:	bxeq	lr
   11220:	ldr	r3, [pc, #16]	; 11238 <_start@@Base+0x88>
   11224:	cmp	r3, #0
   11228:	bxeq	lr
   1122c:	bx	r3
   11230:	andeq	r3, r2, r8, rrx
   11234:	andeq	r3, r2, r8, rrx
   11238:	andeq	r0, r0, r0
   1123c:	ldr	r0, [pc, #36]	; 11268 <_start@@Base+0xb8>
   11240:	ldr	r1, [pc, #36]	; 1126c <_start@@Base+0xbc>
   11244:	sub	r1, r1, r0
   11248:	asr	r1, r1, #2
   1124c:	add	r1, r1, r1, lsr #31
   11250:	asrs	r1, r1, #1
   11254:	bxeq	lr
   11258:	ldr	r3, [pc, #16]	; 11270 <_start@@Base+0xc0>
   1125c:	cmp	r3, #0
   11260:	bxeq	lr
   11264:	bx	r3
   11268:	andeq	r3, r2, r8, rrx
   1126c:	andeq	r3, r2, r8, rrx
   11270:	andeq	r0, r0, r0
   11274:	push	{r4, lr}
   11278:	ldr	r4, [pc, #24]	; 11298 <_start@@Base+0xe8>
   1127c:	ldrb	r3, [r4]
   11280:	cmp	r3, #0
   11284:	popne	{r4, pc}
   11288:	bl	11210 <_start@@Base+0x60>
   1128c:	mov	r3, #1
   11290:	strb	r3, [r4]
   11294:	pop	{r4, pc}
   11298:	andeq	r3, r2, ip, rrx
   1129c:	b	1123c <_start@@Base+0x8c>

000112a0 <proximas_n_chegadas@@Base>:
   112a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112a4:	add	fp, sp, #28
   112a8:	sub	sp, sp, #4
   112ac:	mov	r8, r3
   112b0:	mov	sl, r2
   112b4:	mov	r4, r1
   112b8:	mov	r5, r0
   112bc:	ldr	r6, [r2]
   112c0:	ldr	r0, [r2, #8]
   112c4:	lsl	r0, r0, #2
   112c8:	bl	1112c <malloc@plt>
   112cc:	mov	r9, r0
   112d0:	cmp	r6, #0
   112d4:	beq	112fc <proximas_n_chegadas@@Base+0x5c>
   112d8:	mov	r7, r9
   112dc:	mov	r0, #200	; 0xc8
   112e0:	bl	1112c <malloc@plt>
   112e4:	str	r0, [r7], #4
   112e8:	ldr	r1, [r6]
   112ec:	bl	11114 <strcpy@plt>
   112f0:	ldr	r6, [r6, #4]
   112f4:	cmp	r6, #0
   112f8:	bne	112dc <proximas_n_chegadas@@Base+0x3c>
   112fc:	ldr	r0, [r5, #8]
   11300:	bl	11f34 <heap_nova@@Base>
   11304:	mov	r7, r0
   11308:	ldr	r6, [r5]
   1130c:	cmp	r6, #0
   11310:	beq	11348 <proximas_n_chegadas@@Base+0xa8>
   11314:	ldr	r4, [r4]
   11318:	ldr	r0, [r4], #4
   1131c:	bl	1118c <atoi@plt>
   11320:	ldr	r5, [r9, r0, lsl #2]
   11324:	ldr	r0, [r6]
   11328:	bl	1118c <atoi@plt>
   1132c:	mov	r2, r0
   11330:	mov	r0, r7
   11334:	mov	r1, r5
   11338:	bl	12070 <heap_insere@@Base>
   1133c:	ldr	r6, [r6, #4]
   11340:	cmp	r6, #0
   11344:	bne	11314 <proximas_n_chegadas@@Base+0x74>
   11348:	ldr	r0, [sl, #8]
   1134c:	cmp	r0, #1
   11350:	blt	11370 <proximas_n_chegadas@@Base+0xd0>
   11354:	mov	r4, #0
   11358:	ldr	r0, [r9, r4, lsl #2]
   1135c:	bl	110fc <free@plt>
   11360:	add	r4, r4, #1
   11364:	ldr	r0, [sl, #8]
   11368:	cmp	r4, r0
   1136c:	blt	11358 <proximas_n_chegadas@@Base+0xb8>
   11370:	mov	r0, r9
   11374:	bl	110fc <free@plt>
   11378:	cmp	r8, #1
   1137c:	blt	113bc <proximas_n_chegadas@@Base+0x11c>
   11380:	mov	r4, #0
   11384:	movw	r5, #10804	; 0x2a34
   11388:	movt	r5, #1
   1138c:	mov	r0, r7
   11390:	bl	1213c <heap_remove@@Base>
   11394:	mov	r6, r0
   11398:	add	r4, r4, #1
   1139c:	mov	r0, r5
   113a0:	mov	r1, r4
   113a4:	mov	r2, r6
   113a8:	bl	110d8 <printf@plt>
   113ac:	mov	r0, r6
   113b0:	bl	110fc <free@plt>
   113b4:	cmp	r8, r4
   113b8:	bne	1138c <proximas_n_chegadas@@Base+0xec>
   113bc:	mov	r0, r7
   113c0:	bl	11f90 <heap_apaga@@Base>
   113c4:	mov	r0, #1
   113c8:	sub	sp, fp, #28
   113cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000113d0 <pesquisa_destinos@@Base>:
   113d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113d4:	add	fp, sp, #28
   113d8:	sub	sp, sp, #4
   113dc:	mov	r7, r2
   113e0:	mov	sl, r1
   113e4:	mov	r8, r0
   113e8:	bl	12364 <lista_nova@@Base>
   113ec:	mov	r9, r0
   113f0:	ldr	r4, [sl]
   113f4:	mov	r6, #0
   113f8:	cmp	r4, #0
   113fc:	bne	11414 <pesquisa_destinos@@Base+0x44>
   11400:	b	11428 <pesquisa_destinos@@Base+0x58>
   11404:	add	r6, r6, #1
   11408:	ldr	r4, [r4, #4]
   1140c:	cmp	r4, #0
   11410:	beq	11428 <pesquisa_destinos@@Base+0x58>
   11414:	ldr	r0, [r4]
   11418:	mov	r1, r7
   1141c:	bl	110cc <strcmp@plt>
   11420:	cmp	r0, #0
   11424:	bne	11404 <pesquisa_destinos@@Base+0x34>
   11428:	mov	r0, r8
   1142c:	mov	r1, r6
   11430:	bl	11b1c <v_sucessores@@Base>
   11434:	mov	r6, r0
   11438:	ldr	r0, [r0]
   1143c:	cmp	r0, #1
   11440:	blt	114a0 <pesquisa_destinos@@Base+0xd0>
   11444:	mov	r7, #0
   11448:	ldr	r4, [sl]
   1144c:	mov	r0, r6
   11450:	mov	r1, r7
   11454:	bl	12784 <vetor_elemento@@Base>
   11458:	cmp	r0, #1
   1145c:	blt	11480 <pesquisa_destinos@@Base+0xb0>
   11460:	mov	r5, #0
   11464:	ldr	r4, [r4, #4]
   11468:	mov	r0, r6
   1146c:	mov	r1, r7
   11470:	bl	12784 <vetor_elemento@@Base>
   11474:	add	r5, r5, #1
   11478:	cmp	r5, r0
   1147c:	blt	11464 <pesquisa_destinos@@Base+0x94>
   11480:	ldr	r1, [r4]
   11484:	mov	r0, r9
   11488:	mov	r2, #0
   1148c:	bl	1240c <lista_insere@@Base>
   11490:	add	r7, r7, #1
   11494:	ldr	r0, [r6]
   11498:	cmp	r7, r0
   1149c:	blt	11448 <pesquisa_destinos@@Base+0x78>
   114a0:	mov	r0, r6
   114a4:	bl	12720 <vetor_apaga@@Base>
   114a8:	mov	r0, r9
   114ac:	sub	sp, fp, #28
   114b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000114b4 <carrega_rotas@@Base>:
   114b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   114b8:	add	fp, sp, #24
   114bc:	sub	sp, sp, #8
   114c0:	cmp	r1, #0
   114c4:	beq	11590 <carrega_rotas@@Base+0xdc>
   114c8:	mov	r4, r1
   114cc:	mov	r6, r0
   114d0:	movw	r1, #10814	; 0x2a3e
   114d4:	movt	r1, #1
   114d8:	mov	r0, r4
   114dc:	bl	110f0 <fopen@plt>
   114e0:	cmp	r0, #0
   114e4:	beq	11570 <carrega_rotas@@Base+0xbc>
   114e8:	mov	r5, r0
   114ec:	mov	r0, r6
   114f0:	bl	123dc <lista_tamanho@@Base>
   114f4:	mov	r1, #0
   114f8:	bl	11818 <grafo_novo@@Base>
   114fc:	cmp	r0, #0
   11500:	beq	11584 <carrega_rotas@@Base+0xd0>
   11504:	mov	r4, r0
   11508:	movw	r1, #10849	; 0x2a61
   1150c:	movt	r1, #1
   11510:	add	r2, sp, #4
   11514:	mov	r3, sp
   11518:	mov	r0, r5
   1151c:	bl	110e4 <__isoc99_fscanf@plt>
   11520:	cmp	r0, #2
   11524:	bne	11564 <carrega_rotas@@Base+0xb0>
   11528:	movw	r8, #10849	; 0x2a61
   1152c:	movt	r8, #1
   11530:	add	r7, sp, #4
   11534:	mov	r6, sp
   11538:	ldr	r2, [sp]
   1153c:	ldr	r1, [sp, #4]
   11540:	mov	r0, r4
   11544:	bl	118f0 <grafo_adiciona@@Base>
   11548:	mov	r0, r5
   1154c:	mov	r1, r8
   11550:	mov	r2, r7
   11554:	mov	r3, r6
   11558:	bl	110e4 <__isoc99_fscanf@plt>
   1155c:	cmp	r0, #2
   11560:	beq	11538 <carrega_rotas@@Base+0x84>
   11564:	mov	r0, r5
   11568:	bl	11180 <fclose@plt>
   1156c:	b	11594 <carrega_rotas@@Base+0xe0>
   11570:	movw	r0, #10816	; 0x2a40
   11574:	movt	r0, #1
   11578:	mov	r1, r4
   1157c:	bl	110d8 <printf@plt>
   11580:	b	11590 <carrega_rotas@@Base+0xdc>
   11584:	movw	r0, #10992	; 0x2af0
   11588:	movt	r0, #1
   1158c:	bl	11120 <puts@plt>
   11590:	mov	r4, #0
   11594:	mov	r0, r4
   11598:	sub	sp, fp, #24
   1159c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000115a0 <main@@Base>:
   115a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115a4:	add	fp, sp, #28
   115a8:	sub	sp, sp, #28
   115ac:	movw	r0, #12392	; 0x3068
   115b0:	movt	r0, #2
   115b4:	ldr	r0, [r0]
   115b8:	mov	r8, #0
   115bc:	mov	r1, #0
   115c0:	mov	r2, #2
   115c4:	mov	r3, #0
   115c8:	bl	1115c <setvbuf@plt>
   115cc:	movw	r0, #10855	; 0x2a67
   115d0:	movt	r0, #1
   115d4:	movw	r1, #10814	; 0x2a3e
   115d8:	movt	r1, #1
   115dc:	bl	110f0 <fopen@plt>
   115e0:	mov	r5, r0
   115e4:	bl	12364 <lista_nova@@Base>
   115e8:	mov	r9, r0
   115ec:	str	r8, [sp, #24]
   115f0:	str	r8, [sp, #20]
   115f4:	add	r0, sp, #24
   115f8:	add	r1, sp, #20
   115fc:	mov	r2, r5
   11600:	bl	11198 <getline@plt>
   11604:	ldr	r4, [sp, #24]
   11608:	cmn	r0, #1
   1160c:	beq	11654 <main@@Base+0xb4>
   11610:	add	r6, sp, #24
   11614:	add	r7, sp, #20
   11618:	mov	r0, r4
   1161c:	bl	11150 <strlen@plt>
   11620:	add	r0, r4, r0
   11624:	strb	r8, [r0, #-1]
   11628:	ldr	r1, [sp, #24]
   1162c:	mov	r0, r9
   11630:	mov	r2, #0
   11634:	bl	1240c <lista_insere@@Base>
   11638:	mov	r0, r6
   1163c:	mov	r1, r7
   11640:	mov	r2, r5
   11644:	bl	11198 <getline@plt>
   11648:	ldr	r4, [sp, #24]
   1164c:	cmn	r0, #1
   11650:	bne	11618 <main@@Base+0x78>
   11654:	mov	r0, r4
   11658:	bl	110fc <free@plt>
   1165c:	mov	r0, r5
   11660:	bl	11180 <fclose@plt>
   11664:	movw	r1, #10870	; 0x2a76
   11668:	movt	r1, #1
   1166c:	mov	r0, r9
   11670:	bl	114b4 <carrega_rotas@@Base>
   11674:	str	r0, [sp]
   11678:	movw	r0, #11024	; 0x2b10
   1167c:	movt	r0, #1
   11680:	bl	11120 <puts@plt>
   11684:	movw	r0, #10880	; 0x2a80
   11688:	movt	r0, #1
   1168c:	movw	r1, #10814	; 0x2a3e
   11690:	movt	r1, #1
   11694:	bl	110f0 <fopen@plt>
   11698:	mov	sl, r0
   1169c:	bl	12364 <lista_nova@@Base>
   116a0:	mov	r7, r0
   116a4:	bl	12364 <lista_nova@@Base>
   116a8:	mov	r5, r0
   116ac:	movw	r1, #10893	; 0x2a8d
   116b0:	movt	r1, #1
   116b4:	add	r2, sp, #15
   116b8:	add	r3, sp, #5
   116bc:	mov	r0, sl
   116c0:	bl	110e4 <__isoc99_fscanf@plt>
   116c4:	cmp	r0, #2
   116c8:	bne	11718 <main@@Base+0x178>
   116cc:	add	r4, sp, #15
   116d0:	add	r6, sp, #5
   116d4:	movw	r8, #10893	; 0x2a8d
   116d8:	movt	r8, #1
   116dc:	mov	r0, r7
   116e0:	mov	r1, r4
   116e4:	mov	r2, #0
   116e8:	bl	1240c <lista_insere@@Base>
   116ec:	mov	r0, r5
   116f0:	mov	r1, r6
   116f4:	mov	r2, #0
   116f8:	bl	1240c <lista_insere@@Base>
   116fc:	mov	r0, sl
   11700:	mov	r1, r8
   11704:	mov	r2, r4
   11708:	mov	r3, r6
   1170c:	bl	110e4 <__isoc99_fscanf@plt>
   11710:	cmp	r0, #2
   11714:	beq	116dc <main@@Base+0x13c>
   11718:	mov	r0, r7
   1171c:	mov	r1, r5
   11720:	mov	r2, r9
   11724:	mov	r3, #5
   11728:	bl	112a0 <proximas_n_chegadas@@Base>
   1172c:	mov	r0, r7
   11730:	bl	12394 <lista_apaga@@Base>
   11734:	mov	r0, r5
   11738:	bl	12394 <lista_apaga@@Base>
   1173c:	mov	r0, sl
   11740:	bl	11180 <fclose@plt>
   11744:	movw	r0, #11056	; 0x2b30
   11748:	movt	r0, #1
   1174c:	bl	11120 <puts@plt>
   11750:	movw	r2, #10899	; 0x2a93
   11754:	movt	r2, #1
   11758:	ldr	r6, [sp]
   1175c:	mov	r0, r6
   11760:	mov	r1, r9
   11764:	bl	113d0 <pesquisa_destinos@@Base>
   11768:	cmp	r0, #0
   1176c:	beq	117bc <main@@Base+0x21c>
   11770:	mov	r5, r0
   11774:	bl	123dc <lista_tamanho@@Base>
   11778:	mov	r2, r0
   1177c:	movw	r0, #10947	; 0x2ac3
   11780:	movt	r0, #1
   11784:	movw	r1, #10899	; 0x2a93
   11788:	movt	r1, #1
   1178c:	bl	110d8 <printf@plt>
   11790:	ldr	r4, [r5]
   11794:	cmp	r4, #0
   11798:	beq	117b0 <main@@Base+0x210>
   1179c:	ldr	r0, [r4]
   117a0:	bl	11120 <puts@plt>
   117a4:	ldr	r4, [r4, #4]
   117a8:	cmp	r4, #0
   117ac:	bne	1179c <main@@Base+0x1fc>
   117b0:	mov	r0, r5
   117b4:	bl	12394 <lista_apaga@@Base>
   117b8:	b	117d0 <main@@Base+0x230>
   117bc:	movw	r0, #10910	; 0x2a9e
   117c0:	movt	r0, #1
   117c4:	movw	r1, #10899	; 0x2a93
   117c8:	movt	r1, #1
   117cc:	bl	110d8 <printf@plt>
   117d0:	mov	r0, r6
   117d4:	bl	11878 <grafo_apaga@@Base>
   117d8:	mov	r0, r9
   117dc:	bl	12394 <lista_apaga@@Base>
   117e0:	mov	r0, #0
   117e4:	sub	sp, fp, #28
   117e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000117ec <cria_no@@Base>:
   117ec:	push	{r4, sl, fp, lr}
   117f0:	add	fp, sp, #8
   117f4:	mov	r4, r0
   117f8:	mov	r0, #8
   117fc:	bl	1112c <malloc@plt>
   11800:	cmp	r0, #0
   11804:	moveq	r0, #0
   11808:	movne	r1, #0
   1180c:	strne	r4, [r0]
   11810:	strne	r1, [r0, #4]
   11814:	pop	{r4, sl, fp, pc}

00011818 <grafo_novo@@Base>:
   11818:	push	{r4, r5, r6, sl, fp, lr}
   1181c:	add	fp, sp, #16
   11820:	mov	r6, r1
   11824:	mov	r5, r0
   11828:	mov	r0, #12
   1182c:	bl	1112c <malloc@plt>
   11830:	cmp	r0, #0
   11834:	beq	1186c <grafo_novo@@Base+0x54>
   11838:	mov	r4, r0
   1183c:	str	r6, [r0]
   11840:	str	r5, [r0, #4]
   11844:	mov	r0, r5
   11848:	mov	r1, #8
   1184c:	bl	110c0 <calloc@plt>
   11850:	str	r0, [r4, #8]
   11854:	cmp	r0, #0
   11858:	beq	11864 <grafo_novo@@Base+0x4c>
   1185c:	mov	r0, r4
   11860:	pop	{r4, r5, r6, sl, fp, pc}
   11864:	mov	r0, r4
   11868:	bl	110fc <free@plt>
   1186c:	mov	r4, #0
   11870:	mov	r0, r4
   11874:	pop	{r4, r5, r6, sl, fp, pc}

00011878 <grafo_apaga@@Base>:
   11878:	cmp	r0, #0
   1187c:	bxeq	lr
   11880:	push	{r4, r5, fp, lr}
   11884:	add	fp, sp, #8
   11888:	mov	r4, r0
   1188c:	ldr	r0, [r0, #8]
   11890:	cmp	r0, #0
   11894:	beq	118e4 <grafo_apaga@@Base+0x6c>
   11898:	ldr	r0, [r4, #4]
   1189c:	cmp	r0, #1
   118a0:	blt	118dc <grafo_apaga@@Base+0x64>
   118a4:	mov	r5, #0
   118a8:	b	118b8 <grafo_apaga@@Base+0x40>
   118ac:	ldr	r2, [r0, #4]
   118b0:	str	r2, [r1]
   118b4:	bl	110fc <free@plt>
   118b8:	ldr	r0, [r4, #8]
   118bc:	add	r1, r0, r5, lsl #3
   118c0:	ldr	r0, [r1, #4]!
   118c4:	cmp	r0, #0
   118c8:	bne	118ac <grafo_apaga@@Base+0x34>
   118cc:	ldr	r0, [r4, #4]
   118d0:	add	r5, r5, #1
   118d4:	cmp	r5, r0
   118d8:	blt	118b8 <grafo_apaga@@Base+0x40>
   118dc:	ldr	r0, [r4, #8]
   118e0:	bl	110fc <free@plt>
   118e4:	mov	r0, r4
   118e8:	pop	{r4, r5, fp, lr}
   118ec:	b	110fc <free@plt>

000118f0 <grafo_adiciona@@Base>:
   118f0:	push	{r4, r5, r6, sl, fp, lr}
   118f4:	add	fp, sp, #16
   118f8:	cmp	r0, #0
   118fc:	beq	11918 <grafo_adiciona@@Base+0x28>
   11900:	mov	r4, r2
   11904:	mov	r6, r1
   11908:	mov	r5, r0
   1190c:	bl	1197c <grafo_aresta@@Base>
   11910:	cmp	r0, #0
   11914:	beq	1191c <grafo_adiciona@@Base+0x2c>
   11918:	pop	{r4, r5, r6, sl, fp, pc}
   1191c:	mov	r0, r4
   11920:	bl	117ec <cria_no@@Base>
   11924:	ldr	r1, [r5, #8]
   11928:	add	r2, r1, r6, lsl #3
   1192c:	ldr	r3, [r2, #4]
   11930:	str	r3, [r0, #4]
   11934:	ldr	r3, [r1, r6, lsl #3]
   11938:	add	r3, r3, #1
   1193c:	str	r3, [r1, r6, lsl #3]
   11940:	str	r0, [r2, #4]
   11944:	ldr	r0, [r5]
   11948:	cmp	r0, #0
   1194c:	popne	{r4, r5, r6, sl, fp, pc}
   11950:	mov	r0, r6
   11954:	bl	117ec <cria_no@@Base>
   11958:	ldr	r1, [r5, #8]
   1195c:	add	r2, r1, r4, lsl #3
   11960:	ldr	r3, [r2, #4]
   11964:	str	r3, [r0, #4]
   11968:	ldr	r3, [r1, r4, lsl #3]
   1196c:	add	r3, r3, #1
   11970:	str	r3, [r1, r4, lsl #3]
   11974:	str	r0, [r2, #4]
   11978:	pop	{r4, r5, r6, sl, fp, pc}

0001197c <grafo_aresta@@Base>:
   1197c:	mov	r3, r0
   11980:	mov	r0, #0
   11984:	cmp	r3, #0
   11988:	beq	119b0 <grafo_aresta@@Base+0x34>
   1198c:	ldr	r3, [r3, #8]
   11990:	add	r1, r3, r1, lsl #3
   11994:	ldr	r1, [r1, #4]
   11998:	cmp	r1, #0
   1199c:	bxeq	lr
   119a0:	ldr	r3, [r1]
   119a4:	cmp	r3, r2
   119a8:	bne	11994 <grafo_aresta@@Base+0x18>
   119ac:	mov	r0, #1
   119b0:	bx	lr

000119b4 <grafo_remove@@Base>:
   119b4:	push	{r4, r5, r6, sl, fp, lr}
   119b8:	add	fp, sp, #16
   119bc:	cmp	r0, #0
   119c0:	beq	11a30 <grafo_remove@@Base+0x7c>
   119c4:	mov	r4, r1
   119c8:	mov	r6, r0
   119cc:	ldr	r0, [r0, #8]
   119d0:	add	r1, r0, r1, lsl #3
   119d4:	ldr	r0, [r1, #4]!
   119d8:	cmp	r0, #0
   119dc:	beq	11a30 <grafo_remove@@Base+0x7c>
   119e0:	mov	r5, r2
   119e4:	ldr	r2, [r0]
   119e8:	cmp	r2, r5
   119ec:	bne	119fc <grafo_remove@@Base+0x48>
   119f0:	ldr	r2, [r0, #4]
   119f4:	str	r2, [r1]
   119f8:	b	11a20 <grafo_remove@@Base+0x6c>
   119fc:	mov	r1, r0
   11a00:	ldr	r0, [r0, #4]
   11a04:	cmp	r0, #0
   11a08:	beq	11a24 <grafo_remove@@Base+0x70>
   11a0c:	ldr	r2, [r0]
   11a10:	cmp	r2, r5
   11a14:	bne	119fc <grafo_remove@@Base+0x48>
   11a18:	ldr	r2, [r0, #4]
   11a1c:	str	r2, [r1, #4]
   11a20:	bl	110fc <free@plt>
   11a24:	ldr	r0, [r6]
   11a28:	cmp	r0, #0
   11a2c:	beq	11a34 <grafo_remove@@Base+0x80>
   11a30:	pop	{r4, r5, r6, sl, fp, pc}
   11a34:	ldr	r0, [r6, #8]
   11a38:	add	r1, r0, r5, lsl #3
   11a3c:	ldr	r0, [r1, #4]!
   11a40:	ldr	r2, [r0]
   11a44:	cmp	r2, r4
   11a48:	bne	11a5c <grafo_remove@@Base+0xa8>
   11a4c:	ldr	r2, [r0, #4]
   11a50:	str	r2, [r1]
   11a54:	pop	{r4, r5, r6, sl, fp, lr}
   11a58:	b	110fc <free@plt>
   11a5c:	mov	r1, r0
   11a60:	ldr	r0, [r0, #4]
   11a64:	cmp	r0, #0
   11a68:	popeq	{r4, r5, r6, sl, fp, pc}
   11a6c:	ldr	r2, [r0]
   11a70:	cmp	r2, r4
   11a74:	bne	11a5c <grafo_remove@@Base+0xa8>
   11a78:	ldr	r2, [r0, #4]
   11a7c:	str	r2, [r1, #4]
   11a80:	pop	{r4, r5, r6, sl, fp, lr}
   11a84:	b	110fc <free@plt>

00011a88 <grafo_imprime@@Base>:
   11a88:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11a8c:	add	fp, sp, #24
   11a90:	mov	r4, r0
   11a94:	ldr	r0, [r0, #4]
   11a98:	cmp	r0, #1
   11a9c:	poplt	{r4, r5, r6, r7, r8, r9, fp, pc}
   11aa0:	mov	r5, #0
   11aa4:	movw	r9, #11088	; 0x2b50
   11aa8:	movt	r9, #1
   11aac:	movw	r8, #10852	; 0x2a64
   11ab0:	movt	r8, #1
   11ab4:	movw	r7, #11093	; 0x2b55
   11ab8:	movt	r7, #1
   11abc:	ldr	r0, [r4, #8]
   11ac0:	add	r0, r0, r5, lsl #3
   11ac4:	ldr	r6, [r0, #4]
   11ac8:	mov	r0, r9
   11acc:	mov	r1, r5
   11ad0:	bl	110d8 <printf@plt>
   11ad4:	cmp	r6, #0
   11ad8:	beq	11b00 <grafo_imprime@@Base+0x78>
   11adc:	ldr	r1, [r6]
   11ae0:	mov	r0, r8
   11ae4:	b	11af0 <grafo_imprime@@Base+0x68>
   11ae8:	ldr	r1, [r6]
   11aec:	mov	r0, r7
   11af0:	bl	110d8 <printf@plt>
   11af4:	ldr	r6, [r6, #4]
   11af8:	cmp	r6, #0
   11afc:	bne	11ae8 <grafo_imprime@@Base+0x60>
   11b00:	mov	r0, #10
   11b04:	bl	11174 <putchar@plt>
   11b08:	add	r5, r5, #1
   11b0c:	ldr	r0, [r4, #4]
   11b10:	cmp	r5, r0
   11b14:	blt	11abc <grafo_imprime@@Base+0x34>
   11b18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011b1c <v_sucessores@@Base>:
   11b1c:	push	{r4, r5, r6, r7, fp, lr}
   11b20:	add	fp, sp, #16
   11b24:	mov	r4, #0
   11b28:	cmp	r0, #0
   11b2c:	beq	11b9c <v_sucessores@@Base+0x80>
   11b30:	mov	r5, r1
   11b34:	cmp	r1, #0
   11b38:	blt	11b9c <v_sucessores@@Base+0x80>
   11b3c:	mov	r6, r0
   11b40:	ldr	r0, [r0, #4]
   11b44:	cmp	r0, r5
   11b48:	ble	11b9c <v_sucessores@@Base+0x80>
   11b4c:	bl	126f0 <vetor_novo@@Base>
   11b50:	mov	r4, r0
   11b54:	ldr	r0, [r6, #4]
   11b58:	cmp	r0, #1
   11b5c:	blt	11b9c <v_sucessores@@Base+0x80>
   11b60:	mov	r7, #0
   11b64:	mov	r0, r6
   11b68:	mov	r1, r5
   11b6c:	mov	r2, r7
   11b70:	bl	1197c <grafo_aresta@@Base>
   11b74:	cmp	r0, #0
   11b78:	beq	11b8c <v_sucessores@@Base+0x70>
   11b7c:	mov	r0, r4
   11b80:	mov	r1, r7
   11b84:	mvn	r2, #0
   11b88:	bl	127ac <vetor_insere@@Base>
   11b8c:	ldr	r0, [r6, #4]
   11b90:	add	r7, r7, #1
   11b94:	cmp	r7, r0
   11b98:	blt	11b64 <v_sucessores@@Base+0x48>
   11b9c:	mov	r0, r4
   11ba0:	pop	{r4, r5, r6, r7, fp, pc}

00011ba4 <v_antecessores@@Base>:
   11ba4:	push	{r4, r5, r6, r7, fp, lr}
   11ba8:	add	fp, sp, #16
   11bac:	mov	r4, #0
   11bb0:	cmp	r0, #0
   11bb4:	beq	11c24 <v_antecessores@@Base+0x80>
   11bb8:	mov	r5, r1
   11bbc:	cmp	r1, #0
   11bc0:	blt	11c24 <v_antecessores@@Base+0x80>
   11bc4:	mov	r6, r0
   11bc8:	ldr	r0, [r0, #4]
   11bcc:	cmp	r0, r5
   11bd0:	ble	11c24 <v_antecessores@@Base+0x80>
   11bd4:	bl	126f0 <vetor_novo@@Base>
   11bd8:	mov	r4, r0
   11bdc:	ldr	r0, [r6, #4]
   11be0:	cmp	r0, #1
   11be4:	blt	11c24 <v_antecessores@@Base+0x80>
   11be8:	mov	r7, #0
   11bec:	mov	r0, r6
   11bf0:	mov	r1, r7
   11bf4:	mov	r2, r5
   11bf8:	bl	1197c <grafo_aresta@@Base>
   11bfc:	cmp	r0, #0
   11c00:	beq	11c14 <v_antecessores@@Base+0x70>
   11c04:	mov	r0, r4
   11c08:	mov	r1, r7
   11c0c:	mvn	r2, #0
   11c10:	bl	127ac <vetor_insere@@Base>
   11c14:	ldr	r0, [r6, #4]
   11c18:	add	r7, r7, #1
   11c1c:	cmp	r7, r0
   11c20:	blt	11bec <v_antecessores@@Base+0x48>
   11c24:	mov	r0, r4
   11c28:	pop	{r4, r5, r6, r7, fp, pc}

00011c2c <dfs_helper@@Base>:
   11c2c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11c30:	add	fp, sp, #24
   11c34:	sub	sp, sp, #8
   11c38:	mov	r4, r1
   11c3c:	mov	r6, r0
   11c40:	ldr	r9, [fp, #8]
   11c44:	ldr	r1, [r9, r1, lsl #2]
   11c48:	mov	r0, #0
   11c4c:	cmp	r1, #0
   11c50:	bne	11cd0 <dfs_helper@@Base+0xa4>
   11c54:	mov	r5, r2
   11c58:	str	r3, [r9, r4, lsl #2]
   11c5c:	cmp	r4, r2
   11c60:	moveq	r0, r3
   11c64:	subeq	sp, fp, #24
   11c68:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   11c6c:	ldr	r0, [r6, #4]
   11c70:	cmp	r0, #1
   11c74:	blt	11cc8 <dfs_helper@@Base+0x9c>
   11c78:	add	r8, r3, #1
   11c7c:	mov	r7, #0
   11c80:	mov	r0, r6
   11c84:	mov	r1, r4
   11c88:	mov	r2, r7
   11c8c:	bl	1197c <grafo_aresta@@Base>
   11c90:	cmp	r0, #0
   11c94:	beq	11cb8 <dfs_helper@@Base+0x8c>
   11c98:	str	r9, [sp]
   11c9c:	mov	r0, r6
   11ca0:	mov	r1, r7
   11ca4:	mov	r2, r5
   11ca8:	mov	r3, r8
   11cac:	bl	11c2c <dfs_helper@@Base>
   11cb0:	cmp	r0, #0
   11cb4:	bne	11cd0 <dfs_helper@@Base+0xa4>
   11cb8:	ldr	r0, [r6, #4]
   11cbc:	add	r7, r7, #1
   11cc0:	cmp	r7, r0
   11cc4:	blt	11c80 <dfs_helper@@Base+0x54>
   11cc8:	mov	r0, #0
   11ccc:	str	r0, [r9, r4, lsl #2]
   11cd0:	sub	sp, fp, #24
   11cd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011cd8 <grafo_dfs@@Base>:
   11cd8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11cdc:	add	fp, sp, #24
   11ce0:	sub	sp, sp, #8
   11ce4:	cmp	r0, #0
   11ce8:	beq	11d9c <grafo_dfs@@Base+0xc4>
   11cec:	mov	r8, r3
   11cf0:	mov	r4, r2
   11cf4:	mov	r7, r1
   11cf8:	mov	r5, r0
   11cfc:	ldr	r0, [r0, #4]
   11d00:	mov	r1, #4
   11d04:	bl	110c0 <calloc@plt>
   11d08:	mov	r6, r0
   11d0c:	str	r0, [sp]
   11d10:	mov	r0, r5
   11d14:	mov	r1, r7
   11d18:	mov	r2, r4
   11d1c:	mov	r3, #1
   11d20:	bl	11c2c <dfs_helper@@Base>
   11d24:	cmp	r0, #0
   11d28:	beq	11da4 <grafo_dfs@@Base+0xcc>
   11d2c:	mov	r4, r0
   11d30:	mov	r1, #4
   11d34:	bl	110c0 <calloc@plt>
   11d38:	mov	r9, r0
   11d3c:	cmp	r4, #1
   11d40:	blt	11d8c <grafo_dfs@@Base+0xb4>
   11d44:	ldr	r0, [r5, #4]
   11d48:	mov	r1, #0
   11d4c:	cmp	r0, #1
   11d50:	blt	11d80 <grafo_dfs@@Base+0xa8>
   11d54:	add	r3, r1, #1
   11d58:	mov	r2, #0
   11d5c:	ldr	r7, [r6, r2, lsl #2]
   11d60:	cmp	r7, r3
   11d64:	beq	11d7c <grafo_dfs@@Base+0xa4>
   11d68:	ldr	r7, [r5, #4]
   11d6c:	add	r2, r2, #1
   11d70:	cmp	r2, r7
   11d74:	blt	11d5c <grafo_dfs@@Base+0x84>
   11d78:	b	11d80 <grafo_dfs@@Base+0xa8>
   11d7c:	str	r2, [r9, r1, lsl #2]
   11d80:	add	r1, r1, #1
   11d84:	cmp	r1, r4
   11d88:	bne	11d4c <grafo_dfs@@Base+0x74>
   11d8c:	str	r4, [r8]
   11d90:	mov	r0, r6
   11d94:	bl	110fc <free@plt>
   11d98:	b	11db4 <grafo_dfs@@Base+0xdc>
   11d9c:	mov	r9, #0
   11da0:	b	11db4 <grafo_dfs@@Base+0xdc>
   11da4:	mov	r0, r6
   11da8:	bl	110fc <free@plt>
   11dac:	mov	r9, #0
   11db0:	str	r9, [r8]
   11db4:	mov	r0, r9
   11db8:	sub	sp, fp, #24
   11dbc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011dc0 <grafo_bfs@@Base>:
   11dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11dc4:	add	fp, sp, #28
   11dc8:	sub	sp, sp, #12
   11dcc:	cmp	r0, #0
   11dd0:	beq	11f04 <grafo_bfs@@Base+0x144>
   11dd4:	mov	r7, r1
   11dd8:	mov	r4, r0
   11ddc:	stm	sp, {r2, r3}
   11de0:	ldr	r6, [r0, #4]
   11de4:	mov	r0, r6
   11de8:	mov	r1, #4
   11dec:	bl	110c0 <calloc@plt>
   11df0:	mov	r5, r0
   11df4:	mov	r0, r6
   11df8:	mov	r1, #4
   11dfc:	bl	110c0 <calloc@plt>
   11e00:	str	r0, [sp, #8]
   11e04:	cmp	r6, #1
   11e08:	blt	11e1c <grafo_bfs@@Base+0x5c>
   11e0c:	lsl	r2, r6, #2
   11e10:	mov	r0, r5
   11e14:	mov	r1, #255	; 0xff
   11e18:	bl	11168 <memset@plt>
   11e1c:	str	r7, [r5, r7, lsl #2]
   11e20:	ldr	r0, [sp, #8]
   11e24:	str	r7, [r0]
   11e28:	mov	sl, #0
   11e2c:	mov	r9, #1
   11e30:	mov	r0, sl
   11e34:	add	r1, sl, #1
   11e38:	sdiv	r2, r1, r6
   11e3c:	mls	sl, r2, r6, r1
   11e40:	cmp	r6, #1
   11e44:	blt	11e9c <grafo_bfs@@Base+0xdc>
   11e48:	ldr	r1, [sp, #8]
   11e4c:	ldr	r7, [r1, r0, lsl #2]
   11e50:	mov	r8, #0
   11e54:	mov	r0, r4
   11e58:	mov	r1, r7
   11e5c:	mov	r2, r8
   11e60:	bl	1197c <grafo_aresta@@Base>
   11e64:	cmp	r0, #0
   11e68:	beq	11e90 <grafo_bfs@@Base+0xd0>
   11e6c:	ldr	r0, [r5, r8, lsl #2]
   11e70:	cmn	r0, #1
   11e74:	bne	11e90 <grafo_bfs@@Base+0xd0>
   11e78:	str	r7, [r5, r8, lsl #2]
   11e7c:	ldr	r0, [sp, #8]
   11e80:	str	r8, [r0, r9, lsl #2]
   11e84:	add	r0, r9, #1
   11e88:	sdiv	r1, r0, r6
   11e8c:	mls	r9, r1, r6, r0
   11e90:	add	r8, r8, #1
   11e94:	cmp	r6, r8
   11e98:	bne	11e54 <grafo_bfs@@Base+0x94>
   11e9c:	cmp	sl, r9
   11ea0:	bne	11e30 <grafo_bfs@@Base+0x70>
   11ea4:	ldr	r4, [sp]
   11ea8:	ldr	r0, [r5, r4, lsl #2]
   11eac:	cmp	r0, #0
   11eb0:	blt	11f0c <grafo_bfs@@Base+0x14c>
   11eb4:	mvn	r7, #3
   11eb8:	mov	r6, #0
   11ebc:	mov	r0, r4
   11ec0:	ldr	r1, [r5, r0, lsl #2]
   11ec4:	add	r6, r6, #1
   11ec8:	add	r7, r7, #4
   11ecc:	cmp	r1, r0
   11ed0:	mov	r0, r1
   11ed4:	bne	11ec0 <grafo_bfs@@Base+0x100>
   11ed8:	add	r0, r7, #4
   11edc:	bl	1112c <malloc@plt>
   11ee0:	mov	r8, r0
   11ee4:	add	r0, r0, r7
   11ee8:	mov	r1, #0
   11eec:	str	r4, [r0, -r1, lsl #2]
   11ef0:	ldr	r4, [r5, r4, lsl #2]
   11ef4:	add	r1, r1, #1
   11ef8:	cmp	r6, r1
   11efc:	bne	11eec <grafo_bfs@@Base+0x12c>
   11f00:	b	11f10 <grafo_bfs@@Base+0x150>
   11f04:	mov	r8, #0
   11f08:	b	11f28 <grafo_bfs@@Base+0x168>
   11f0c:	mov	r6, #0
   11f10:	ldr	r0, [sp, #8]
   11f14:	bl	110fc <free@plt>
   11f18:	mov	r0, r5
   11f1c:	bl	110fc <free@plt>
   11f20:	ldr	r0, [sp, #4]
   11f24:	str	r6, [r0]
   11f28:	mov	r0, r8
   11f2c:	sub	sp, fp, #28
   11f30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011f34 <heap_nova@@Base>:
   11f34:	push	{r4, r5, fp, lr}
   11f38:	add	fp, sp, #8
   11f3c:	mov	r5, r0
   11f40:	mov	r0, #12
   11f44:	bl	1112c <malloc@plt>
   11f48:	cmp	r0, #0
   11f4c:	beq	11f84 <heap_nova@@Base+0x50>
   11f50:	mov	r4, r0
   11f54:	mov	r0, #0
   11f58:	stm	r4, {r0, r5}
   11f5c:	mov	r0, r5
   11f60:	mov	r1, #4
   11f64:	bl	110c0 <calloc@plt>
   11f68:	str	r0, [r4, #8]
   11f6c:	cmp	r0, #0
   11f70:	beq	11f7c <heap_nova@@Base+0x48>
   11f74:	mov	r0, r4
   11f78:	pop	{r4, r5, fp, pc}
   11f7c:	mov	r0, r4
   11f80:	bl	110fc <free@plt>
   11f84:	mov	r4, #0
   11f88:	mov	r0, r4
   11f8c:	pop	{r4, r5, fp, pc}

00011f90 <heap_apaga@@Base>:
   11f90:	cmp	r0, #0
   11f94:	bxeq	lr
   11f98:	push	{r4, r5, r6, sl, fp, lr}
   11f9c:	add	fp, sp, #16
   11fa0:	mov	r4, r0
   11fa4:	ldr	r1, [r0]
   11fa8:	ldr	r0, [r0, #8]
   11fac:	cmp	r1, #1
   11fb0:	blt	11ff0 <heap_apaga@@Base+0x60>
   11fb4:	mov	r5, #0
   11fb8:	mov	r6, #0
   11fbc:	ldr	r0, [r0, r6, lsl #2]
   11fc0:	ldr	r0, [r0, #4]
   11fc4:	bl	110fc <free@plt>
   11fc8:	ldr	r0, [r4, #8]
   11fcc:	ldr	r0, [r0, r6, lsl #2]
   11fd0:	bl	110fc <free@plt>
   11fd4:	ldr	r0, [r4, #8]
   11fd8:	str	r5, [r0, r6, lsl #2]
   11fdc:	add	r6, r6, #1
   11fe0:	ldr	r1, [r4]
   11fe4:	ldr	r0, [r4, #8]
   11fe8:	cmp	r6, r1
   11fec:	blt	11fbc <heap_apaga@@Base+0x2c>
   11ff0:	bl	110fc <free@plt>
   11ff4:	mov	r0, r4
   11ff8:	pop	{r4, r5, r6, sl, fp, lr}
   11ffc:	b	110fc <free@plt>

00012000 <elemento_cria@@Base>:
   12000:	push	{r4, r5, r6, r7, fp, lr}
   12004:	add	fp, sp, #16
   12008:	mov	r7, r1
   1200c:	mov	r4, r0
   12010:	mov	r0, #8
   12014:	bl	1112c <malloc@plt>
   12018:	mov	r5, #0
   1201c:	cmp	r0, #0
   12020:	beq	12058 <elemento_cria@@Base+0x58>
   12024:	mov	r6, r0
   12028:	mov	r0, r7
   1202c:	bl	11150 <strlen@plt>
   12030:	add	r0, r0, #1
   12034:	mov	r1, #1
   12038:	bl	110c0 <calloc@plt>
   1203c:	str	r0, [r6, #4]
   12040:	cmp	r0, #0
   12044:	beq	12060 <elemento_cria@@Base+0x60>
   12048:	mov	r1, r7
   1204c:	bl	11114 <strcpy@plt>
   12050:	str	r4, [r6]
   12054:	mov	r5, r6
   12058:	mov	r0, r5
   1205c:	pop	{r4, r5, r6, r7, fp, pc}
   12060:	mov	r0, r6
   12064:	bl	110fc <free@plt>
   12068:	mov	r0, r5
   1206c:	pop	{r4, r5, r6, r7, fp, pc}

00012070 <heap_insere@@Base>:
   12070:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12074:	add	fp, sp, #24
   12078:	mov	r5, r0
   1207c:	ldr	r0, [r0]
   12080:	ldr	r3, [r5, #4]
   12084:	mov	r8, #0
   12088:	cmp	r0, r3
   1208c:	bge	12104 <heap_insere@@Base+0x94>
   12090:	mov	r0, r2
   12094:	bl	12000 <elemento_cria@@Base>
   12098:	cmp	r0, #0
   1209c:	beq	12104 <heap_insere@@Base+0x94>
   120a0:	ldr	r6, [r5]
   120a4:	ldr	r1, [r5, #8]
   120a8:	str	r0, [r1, r6, lsl #2]
   120ac:	add	r0, r6, #1
   120b0:	str	r0, [r5]
   120b4:	mov	r8, #1
   120b8:	cmp	r6, #0
   120bc:	beq	12104 <heap_insere@@Base+0x94>
   120c0:	ldr	r4, [r5, #8]
   120c4:	sub	r0, r6, #1
   120c8:	add	r0, r0, r0, lsr #31
   120cc:	asr	r7, r0, #1
   120d0:	ldr	r1, [r4, r7, lsl #2]
   120d4:	ldr	r0, [r4, r6, lsl #2]
   120d8:	bl	1210c <menor_que@@Base>
   120dc:	cmp	r0, #0
   120e0:	beq	12104 <heap_insere@@Base+0x94>
   120e4:	ldr	r0, [r4, r7, lsl #2]
   120e8:	ldr	r1, [r4, r6, lsl #2]
   120ec:	str	r1, [r4, r7, lsl #2]
   120f0:	ldr	r1, [r5, #8]
   120f4:	str	r0, [r1, r6, lsl #2]
   120f8:	cmp	r6, #2
   120fc:	mov	r6, r7
   12100:	bhi	120c0 <heap_insere@@Base+0x50>
   12104:	mov	r0, r8
   12108:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001210c <menor_que@@Base>:
   1210c:	mov	r2, r0
   12110:	mov	r0, #0
   12114:	cmp	r2, #0
   12118:	cmpne	r1, #0
   1211c:	bne	12124 <menor_que@@Base+0x18>
   12120:	bx	lr
   12124:	ldr	r1, [r1]
   12128:	ldr	r2, [r2]
   1212c:	mov	r0, #0
   12130:	cmp	r2, r1
   12134:	movwlt	r0, #1
   12138:	bx	lr

0001213c <heap_remove@@Base>:
   1213c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12140:	add	fp, sp, #28
   12144:	sub	sp, sp, #4
   12148:	mov	r8, #0
   1214c:	cmp	r0, #0
   12150:	beq	12218 <heap_remove@@Base+0xdc>
   12154:	mov	r5, r0
   12158:	ldr	r0, [r0]
   1215c:	cmp	r0, #1
   12160:	blt	12218 <heap_remove@@Base+0xdc>
   12164:	ldr	r0, [r5, #8]
   12168:	ldr	r0, [r0]
   1216c:	ldr	r8, [r0, #4]
   12170:	bl	110fc <free@plt>
   12174:	ldr	r1, [r5]
   12178:	ldr	r0, [r5, #8]
   1217c:	sub	sl, r1, #1
   12180:	str	sl, [r5]
   12184:	ldr	r2, [r0, sl, lsl #2]
   12188:	str	r2, [r0]
   1218c:	ldr	r2, [r5, #8]
   12190:	mov	r0, #0
   12194:	str	r0, [r2, sl, lsl #2]
   12198:	cmp	r1, #3
   1219c:	blt	12218 <heap_remove@@Base+0xdc>
   121a0:	mov	r9, #1
   121a4:	mov	r6, #1
   121a8:	mov	r7, #0
   121ac:	add	r4, r0, #2
   121b0:	cmp	r4, sl
   121b4:	bge	121d4 <heap_remove@@Base+0x98>
   121b8:	ldr	r0, [r5, #8]
   121bc:	ldr	r1, [r0, r6, lsl #2]
   121c0:	ldr	r0, [r0, r4, lsl #2]
   121c4:	bl	1210c <menor_que@@Base>
   121c8:	cmp	r0, #0
   121cc:	moveq	r4, r6
   121d0:	b	121d8 <heap_remove@@Base+0x9c>
   121d4:	mov	r4, r6
   121d8:	ldr	r6, [r5, #8]
   121dc:	ldr	r1, [r6, r7, lsl #2]
   121e0:	ldr	r0, [r6, r4, lsl #2]
   121e4:	bl	1210c <menor_que@@Base>
   121e8:	cmp	r0, #0
   121ec:	beq	12218 <heap_remove@@Base+0xdc>
   121f0:	ldr	r0, [r6, r4, lsl #2]
   121f4:	ldr	r1, [r6, r7, lsl #2]
   121f8:	str	r1, [r6, r4, lsl #2]
   121fc:	ldr	r1, [r5, #8]
   12200:	str	r0, [r1, r7, lsl #2]
   12204:	orr	r6, r9, r4, lsl #1
   12208:	lsl	r0, r4, #1
   1220c:	cmp	r6, sl
   12210:	mov	r7, r4
   12214:	blt	121ac <heap_remove@@Base+0x70>
   12218:	mov	r0, r8
   1221c:	sub	sp, fp, #28
   12220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012224 <mostraHeap@@Base>:
   12224:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12228:	add	fp, sp, #28
   1222c:	sub	sp, sp, #4
   12230:	mov	r9, r0
   12234:	ldr	r0, [r0]
   12238:	cmp	r0, r1
   1223c:	ble	122e4 <mostraHeap@@Base+0xc0>
   12240:	mov	sl, r1
   12244:	mov	r7, #0
   12248:	cmp	r1, #1
   1224c:	blt	12270 <mostraHeap@@Base+0x4c>
   12250:	mov	r0, sl
   12254:	add	r7, r7, #1
   12258:	sub	r1, r0, #1
   1225c:	add	r1, r1, r1, lsr #31
   12260:	asr	r1, r1, #1
   12264:	cmp	r0, #2
   12268:	mov	r0, r1
   1226c:	bgt	12254 <mostraHeap@@Base+0x30>
   12270:	mov	r0, #1
   12274:	orr	r1, r0, sl, lsl #1
   12278:	mov	r0, r9
   1227c:	bl	12224 <mostraHeap@@Base>
   12280:	lsl	r8, sl, #1
   12284:	cmp	r7, #0
   12288:	beq	122b0 <mostraHeap@@Base+0x8c>
   1228c:	add	r4, r7, r7, lsl #1
   12290:	mov	r5, #0
   12294:	movw	r6, #11098	; 0x2b5a
   12298:	movt	r6, #1
   1229c:	mov	r0, r6
   122a0:	bl	110d8 <printf@plt>
   122a4:	add	r5, r5, #1
   122a8:	cmp	r5, r4
   122ac:	bcc	1229c <mostraHeap@@Base+0x78>
   122b0:	ldr	r0, [r9, #8]
   122b4:	ldr	r0, [r0, sl, lsl #2]
   122b8:	ldr	r2, [r0]
   122bc:	ldr	r1, [r0, #4]
   122c0:	movw	r0, #11104	; 0x2b60
   122c4:	movt	r0, #1
   122c8:	bl	110d8 <printf@plt>
   122cc:	add	r1, r8, #2
   122d0:	mov	r0, r9
   122d4:	bl	12224 <mostraHeap@@Base>
   122d8:	cmp	r7, #0
   122dc:	subne	sp, fp, #28
   122e0:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122e4:	mov	r0, #10
   122e8:	sub	sp, fp, #28
   122ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122f0:	b	11174 <putchar@plt>

000122f4 <novo_str@@Base>:
   122f4:	push	{r4, r5, r6, sl, fp, lr}
   122f8:	add	fp, sp, #16
   122fc:	mov	r6, r0
   12300:	mov	r0, #12
   12304:	bl	1112c <malloc@plt>
   12308:	mov	r5, #0
   1230c:	cmp	r0, #0
   12310:	beq	1234c <novo_str@@Base+0x58>
   12314:	mov	r4, r0
   12318:	mov	r0, r6
   1231c:	bl	11150 <strlen@plt>
   12320:	add	r0, r0, #1
   12324:	bl	1112c <malloc@plt>
   12328:	str	r0, [r4]
   1232c:	cmp	r0, #0
   12330:	beq	12354 <novo_str@@Base+0x60>
   12334:	mov	r1, r6
   12338:	bl	11114 <strcpy@plt>
   1233c:	mov	r0, #0
   12340:	str	r0, [r4, #4]
   12344:	str	r0, [r4, #8]
   12348:	mov	r5, r4
   1234c:	mov	r0, r5
   12350:	pop	{r4, r5, r6, sl, fp, pc}
   12354:	mov	r0, r4
   12358:	bl	110fc <free@plt>
   1235c:	mov	r0, r5
   12360:	pop	{r4, r5, r6, sl, fp, pc}

00012364 <lista_nova@@Base>:
   12364:	push	{fp, lr}
   12368:	mov	fp, sp
   1236c:	mov	r0, #12
   12370:	bl	1112c <malloc@plt>
   12374:	cmp	r0, #0
   12378:	movne	r1, #0
   1237c:	strne	r1, [r0]
   12380:	strne	r1, [r0, #4]
   12384:	strne	r1, [r0, #8]
   12388:	popne	{fp, pc}
   1238c:	mov	r0, #0
   12390:	pop	{fp, pc}

00012394 <lista_apaga@@Base>:
   12394:	cmp	r0, #0
   12398:	bxeq	lr
   1239c:	push	{r4, r5, fp, lr}
   123a0:	add	fp, sp, #8
   123a4:	mov	r4, r0
   123a8:	b	123c4 <lista_apaga@@Base+0x30>
   123ac:	ldr	r0, [r5, #4]
   123b0:	str	r0, [r4]
   123b4:	ldr	r0, [r5]
   123b8:	bl	110fc <free@plt>
   123bc:	mov	r0, r5
   123c0:	bl	110fc <free@plt>
   123c4:	ldr	r5, [r4]
   123c8:	cmp	r5, #0
   123cc:	bne	123ac <lista_apaga@@Base+0x18>
   123d0:	mov	r0, r4
   123d4:	pop	{r4, r5, fp, lr}
   123d8:	b	110fc <free@plt>

000123dc <lista_tamanho@@Base>:
   123dc:	cmp	r0, #0
   123e0:	ldrne	r0, [r0, #8]
   123e4:	mvneq	r0, #0
   123e8:	bx	lr

000123ec <lista_inicio@@Base>:
   123ec:	cmp	r0, #0
   123f0:	ldrne	r0, [r0]
   123f4:	moveq	r0, #0
   123f8:	bx	lr

000123fc <lista_fim@@Base>:
   123fc:	cmp	r0, #0
   12400:	ldrne	r0, [r0, #4]
   12404:	moveq	r0, #0
   12408:	bx	lr

0001240c <lista_insere@@Base>:
   1240c:	push	{r4, r5, r6, sl, fp, lr}
   12410:	add	fp, sp, #16
   12414:	mov	r6, #0
   12418:	cmp	r0, #0
   1241c:	cmpne	r1, #0
   12420:	bne	1242c <lista_insere@@Base+0x20>
   12424:	mov	r0, r6
   12428:	pop	{r4, r5, r6, sl, fp, pc}
   1242c:	mov	r5, r2
   12430:	mov	r4, r0
   12434:	mov	r0, r1
   12438:	bl	122f4 <novo_str@@Base>
   1243c:	cmp	r0, #0
   12440:	beq	12424 <lista_insere@@Base+0x18>
   12444:	ldr	r1, [r4]
   12448:	ldr	r2, [r4, #8]
   1244c:	add	r2, r2, #1
   12450:	str	r2, [r4, #8]
   12454:	cmp	r5, #0
   12458:	beq	1247c <lista_insere@@Base+0x70>
   1245c:	cmp	r1, r5
   12460:	beq	12494 <lista_insere@@Base+0x88>
   12464:	ldr	r1, [r5, #8]
   12468:	str	r5, [r0, #4]
   1246c:	str	r1, [r0, #8]
   12470:	str	r0, [r1, #4]
   12474:	str	r0, [r5, #8]
   12478:	b	124ac <lista_insere@@Base+0xa0>
   1247c:	cmp	r1, #0
   12480:	beq	124a4 <lista_insere@@Base+0x98>
   12484:	ldr	r1, [r4, #4]
   12488:	str	r1, [r0, #8]
   1248c:	str	r0, [r1, #4]
   12490:	b	124a8 <lista_insere@@Base+0x9c>
   12494:	str	r1, [r0, #4]
   12498:	str	r0, [r1, #8]
   1249c:	str	r0, [r4]
   124a0:	b	124ac <lista_insere@@Base+0xa0>
   124a4:	str	r0, [r4]
   124a8:	str	r0, [r4, #4]
   124ac:	mov	r6, r0
   124b0:	mov	r0, r6
   124b4:	pop	{r4, r5, r6, sl, fp, pc}

000124b8 <lista_remove@@Base>:
   124b8:	push	{r4, r5, fp, lr}
   124bc:	add	fp, sp, #8
   124c0:	mov	r5, #0
   124c4:	cmp	r0, #0
   124c8:	movne	r4, r1
   124cc:	cmpne	r1, #0
   124d0:	bne	124dc <lista_remove@@Base+0x24>
   124d4:	mov	r0, r5
   124d8:	pop	{r4, r5, fp, pc}
   124dc:	ldr	r1, [r0, #8]
   124e0:	sub	r1, r1, #1
   124e4:	str	r1, [r0, #8]
   124e8:	ldmib	r4, {r1, r2}
   124ec:	cmp	r2, #0
   124f0:	mov	r3, r0
   124f4:	addne	r3, r2, #4
   124f8:	str	r1, [r3]
   124fc:	ldr	r5, [r4, #4]
   12500:	ldr	r1, [r4, #8]
   12504:	add	r2, r5, #8
   12508:	cmp	r5, #0
   1250c:	addeq	r2, r0, #4
   12510:	str	r1, [r2]
   12514:	ldr	r0, [r4]
   12518:	bl	110fc <free@plt>
   1251c:	mov	r0, r4
   12520:	bl	110fc <free@plt>
   12524:	mov	r0, r5
   12528:	pop	{r4, r5, fp, pc}

0001252c <lista_pesquisa@@Base>:
   1252c:	push	{r4, r5, r6, sl, fp, lr}
   12530:	add	fp, sp, #16
   12534:	mov	r4, #0
   12538:	cmp	r0, #0
   1253c:	movne	r5, r1
   12540:	cmpne	r1, #0
   12544:	bne	12550 <lista_pesquisa@@Base+0x24>
   12548:	mov	r0, r4
   1254c:	pop	{r4, r5, r6, sl, fp, pc}
   12550:	cmp	r2, #1
   12554:	bhi	12548 <lista_pesquisa@@Base+0x1c>
   12558:	cmp	r2, #0
   1255c:	beq	12594 <lista_pesquisa@@Base+0x68>
   12560:	ldr	r6, [r0, #4]
   12564:	cmp	r6, #0
   12568:	bne	1257c <lista_pesquisa@@Base+0x50>
   1256c:	b	12548 <lista_pesquisa@@Base+0x1c>
   12570:	ldr	r6, [r6, #8]
   12574:	cmp	r6, #0
   12578:	beq	12548 <lista_pesquisa@@Base+0x1c>
   1257c:	ldr	r0, [r6]
   12580:	mov	r1, r5
   12584:	bl	110cc <strcmp@plt>
   12588:	cmp	r0, #0
   1258c:	bne	12570 <lista_pesquisa@@Base+0x44>
   12590:	b	125c4 <lista_pesquisa@@Base+0x98>
   12594:	ldr	r6, [r0]
   12598:	cmp	r6, #0
   1259c:	bne	125b0 <lista_pesquisa@@Base+0x84>
   125a0:	b	12548 <lista_pesquisa@@Base+0x1c>
   125a4:	ldr	r6, [r6, #4]
   125a8:	cmp	r6, #0
   125ac:	beq	12548 <lista_pesquisa@@Base+0x1c>
   125b0:	ldr	r0, [r6]
   125b4:	mov	r1, r5
   125b8:	bl	110cc <strcmp@plt>
   125bc:	cmp	r0, #0
   125c0:	bne	125a4 <lista_pesquisa@@Base+0x78>
   125c4:	mov	r4, r6
   125c8:	mov	r0, r4
   125cc:	pop	{r4, r5, r6, sl, fp, pc}

000125d0 <lista_ordena@@Base>:
   125d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   125d4:	add	fp, sp, #24
   125d8:	cmp	r0, #0
   125dc:	beq	12648 <lista_ordena@@Base+0x78>
   125e0:	ldr	r1, [r0, #8]
   125e4:	mov	r8, #0
   125e8:	cmp	r1, #0
   125ec:	beq	1264c <lista_ordena@@Base+0x7c>
   125f0:	ldr	r4, [r0]
   125f4:	b	12610 <lista_ordena@@Base+0x40>
   125f8:	cmp	r6, r4
   125fc:	ldrne	r0, [r4]
   12600:	ldrne	r1, [r6]
   12604:	strne	r1, [r4]
   12608:	strne	r0, [r6]
   1260c:	ldr	r4, [r5]
   12610:	mov	r5, r4
   12614:	ldr	r7, [r5, #4]!
   12618:	cmp	r7, #0
   1261c:	beq	1264c <lista_ordena@@Base+0x7c>
   12620:	mov	r6, r4
   12624:	ldr	r1, [r6]
   12628:	ldr	r0, [r7]
   1262c:	bl	110cc <strcmp@plt>
   12630:	cmp	r0, #0
   12634:	movlt	r6, r7
   12638:	ldr	r7, [r7, #4]
   1263c:	cmp	r7, #0
   12640:	bne	12624 <lista_ordena@@Base+0x54>
   12644:	b	125f8 <lista_ordena@@Base+0x28>
   12648:	mvn	r8, #0
   1264c:	mov	r0, r8
   12650:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012654 <lista_inverte@@Base>:
   12654:	cmp	r0, #0
   12658:	mvneq	r1, #0
   1265c:	moveq	r0, r1
   12660:	bxeq	lr
   12664:	ldr	r2, [r0, #8]
   12668:	mov	r1, #0
   1266c:	cmp	r2, #2
   12670:	blt	126e8 <lista_inverte@@Base+0x94>
   12674:	beq	126bc <lista_inverte@@Base+0x68>
   12678:	sub	r1, r2, #2
   1267c:	ldr	r2, [r0]
   12680:	ldr	r2, [r2, #4]
   12684:	ldr	ip, [r2, #4]
   12688:	ldr	r3, [r2, #8]
   1268c:	str	ip, [r3, #4]
   12690:	ldr	ip, [r2, #4]
   12694:	ldr	r3, [r2, #8]
   12698:	str	r3, [ip, #8]
   1269c:	ldr	r3, [r0]
   126a0:	str	r3, [r2, #4]
   126a4:	ldr	r3, [r0]
   126a8:	str	r2, [r3, #8]
   126ac:	str	r2, [r0]
   126b0:	subs	r1, r1, #1
   126b4:	mov	r2, ip
   126b8:	bne	12684 <lista_inverte@@Base+0x30>
   126bc:	ldr	r2, [r0, #4]
   126c0:	ldr	r3, [r2, #8]
   126c4:	str	r3, [r0, #4]
   126c8:	mov	r1, #0
   126cc:	str	r1, [r3, #4]
   126d0:	str	r1, [r2, #8]
   126d4:	ldr	r3, [r0]
   126d8:	str	r3, [r2, #4]
   126dc:	ldr	r3, [r0]
   126e0:	str	r2, [r3, #8]
   126e4:	str	r2, [r0]
   126e8:	mov	r0, r1
   126ec:	bx	lr

000126f0 <vetor_novo@@Base>:
   126f0:	push	{fp, lr}
   126f4:	mov	fp, sp
   126f8:	mov	r0, #12
   126fc:	bl	1112c <malloc@plt>
   12700:	cmp	r0, #0
   12704:	movne	r1, #0
   12708:	strne	r1, [r0]
   1270c:	strne	r1, [r0, #4]
   12710:	strne	r1, [r0, #8]
   12714:	popne	{fp, pc}
   12718:	mov	r0, #0
   1271c:	pop	{fp, pc}

00012720 <vetor_apaga@@Base>:
   12720:	cmp	r0, #0
   12724:	bxeq	lr
   12728:	push	{r4, sl, fp, lr}
   1272c:	add	fp, sp, #8
   12730:	mov	r4, r0
   12734:	ldr	r0, [r0, #8]
   12738:	bl	110fc <free@plt>
   1273c:	mov	r0, r4
   12740:	pop	{r4, sl, fp, lr}
   12744:	b	110fc <free@plt>

00012748 <vetor_atribui@@Base>:
   12748:	mov	ip, r0
   1274c:	mvn	r0, #0
   12750:	cmp	ip, #0
   12754:	bxeq	lr
   12758:	cmp	r1, #0
   1275c:	ldrge	r3, [ip]
   12760:	cmpge	r3, r1
   12764:	ldrgt	r0, [ip, #8]
   12768:	strgt	r2, [r0, r1, lsl #2]
   1276c:	movgt	r0, r1
   12770:	bx	lr

00012774 <vetor_tamanho@@Base>:
   12774:	cmp	r0, #0
   12778:	ldrne	r0, [r0]
   1277c:	mvneq	r0, #0
   12780:	bx	lr

00012784 <vetor_elemento@@Base>:
   12784:	mov	r2, r0
   12788:	mov	r0, #-2147483648	; 0x80000000
   1278c:	cmp	r2, #0
   12790:	bxeq	lr
   12794:	cmp	r1, #0
   12798:	ldrge	r3, [r2]
   1279c:	cmpge	r3, r1
   127a0:	ldrgt	r0, [r2, #8]
   127a4:	ldrgt	r0, [r0, r1, lsl #2]
   127a8:	bx	lr

000127ac <vetor_insere@@Base>:
   127ac:	push	{r4, r5, r6, r7, fp, lr}
   127b0:	add	fp, sp, #16
   127b4:	mvn	r7, #0
   127b8:	cmp	r0, #0
   127bc:	beq	12864 <vetor_insere@@Base+0xb8>
   127c0:	mov	r4, r2
   127c4:	cmn	r2, #1
   127c8:	blt	12864 <vetor_insere@@Base+0xb8>
   127cc:	mov	r5, r0
   127d0:	ldr	r0, [r0]
   127d4:	cmp	r0, r4
   127d8:	blt	12864 <vetor_insere@@Base+0xb8>
   127dc:	mov	r6, r1
   127e0:	cmn	r4, #1
   127e4:	moveq	r4, r0
   127e8:	ldr	r1, [r5, #4]
   127ec:	cmp	r0, r1
   127f0:	bne	1281c <vetor_insere@@Base+0x70>
   127f4:	lsl	r0, r1, #1
   127f8:	cmp	r1, #0
   127fc:	movweq	r0, #1
   12800:	str	r0, [r5, #4]
   12804:	lsl	r1, r0, #2
   12808:	ldr	r0, [r5, #8]
   1280c:	bl	11108 <realloc@plt>
   12810:	str	r0, [r5, #8]
   12814:	cmp	r0, #0
   12818:	beq	12864 <vetor_insere@@Base+0xb8>
   1281c:	ldr	r0, [r5]
   12820:	ldr	r1, [r5, #8]
   12824:	cmp	r0, r4
   12828:	ble	12854 <vetor_insere@@Base+0xa8>
   1282c:	ldr	r2, [r5, #8]
   12830:	mov	r3, r0
   12834:	add	r7, r1, r3, lsl #2
   12838:	ldr	r7, [r7, #-4]
   1283c:	str	r7, [r1, r3, lsl #2]
   12840:	sub	r3, r3, #1
   12844:	cmp	r3, r4
   12848:	mov	r1, r2
   1284c:	bgt	12834 <vetor_insere@@Base+0x88>
   12850:	mov	r1, r2
   12854:	str	r6, [r1, r4, lsl #2]
   12858:	add	r0, r0, #1
   1285c:	str	r0, [r5]
   12860:	mov	r7, r4
   12864:	mov	r0, r7
   12868:	pop	{r4, r5, r6, r7, fp, pc}

0001286c <vetor_remove@@Base>:
   1286c:	mvn	r2, #0
   12870:	cmp	r0, #0
   12874:	beq	12888 <vetor_remove@@Base+0x1c>
   12878:	cmp	r1, #0
   1287c:	ldrge	ip, [r0]
   12880:	cmpge	ip, r1
   12884:	bgt	12890 <vetor_remove@@Base+0x24>
   12888:	mov	r0, r2
   1288c:	bx	lr
   12890:	add	r2, r1, #1
   12894:	cmp	r2, ip
   12898:	bge	128c4 <vetor_remove@@Base+0x58>
   1289c:	sub	r2, ip, #1
   128a0:	sub	r2, r2, r1
   128a4:	ldr	r3, [r0, #8]
   128a8:	add	r1, r3, r1, lsl #2
   128ac:	add	r1, r1, #4
   128b0:	ldr	r3, [r1]
   128b4:	str	r3, [r1, #-4]
   128b8:	add	r1, r1, #4
   128bc:	subs	r2, r2, #1
   128c0:	bne	128b0 <vetor_remove@@Base+0x44>
   128c4:	sub	r1, ip, #1
   128c8:	str	r1, [r0]
   128cc:	mov	r2, #0
   128d0:	mov	r0, r2
   128d4:	bx	lr

000128d8 <vetor_pesquisa@@Base>:
   128d8:	push	{fp, lr}
   128dc:	mov	fp, sp
   128e0:	mov	lr, r0
   128e4:	mvn	r0, #0
   128e8:	cmp	lr, #0
   128ec:	beq	12924 <vetor_pesquisa@@Base+0x4c>
   128f0:	ldr	r3, [lr]
   128f4:	cmp	r3, #1
   128f8:	poplt	{fp, pc}
   128fc:	ldr	ip, [lr, #8]
   12900:	mov	r3, #0
   12904:	ldr	r2, [ip, r3, lsl #2]
   12908:	cmp	r2, r1
   1290c:	moveq	r0, r3
   12910:	popeq	{fp, pc}
   12914:	add	r3, r3, #1
   12918:	ldr	r2, [lr]
   1291c:	cmp	r3, r2
   12920:	blt	12904 <vetor_pesquisa@@Base+0x2c>
   12924:	pop	{fp, pc}

00012928 <vetor_ordena@@Base>:
   12928:	cmp	r0, #0
   1292c:	mvneq	r1, #0
   12930:	moveq	r0, r1
   12934:	bxeq	lr
   12938:	ldr	r2, [r0]
   1293c:	mov	r1, #0
   12940:	cmp	r2, #2
   12944:	blt	129b8 <vetor_ordena@@Base+0x90>
   12948:	push	{r4, r5, fp, lr}
   1294c:	add	fp, sp, #8
   12950:	ldr	ip, [r0]
   12954:	ldr	r0, [r0, #8]
   12958:	mov	r2, #1
   1295c:	mov	lr, #0
   12960:	ldr	r1, [r0, r2, lsl #2]
   12964:	mov	r3, lr
   12968:	ldr	r4, [r0, r3, lsl #2]
   1296c:	cmp	r1, r4
   12970:	bge	12998 <vetor_ordena@@Base+0x70>
   12974:	add	r5, r0, r3, lsl #2
   12978:	str	r4, [r5, #4]
   1297c:	sub	r4, r3, #1
   12980:	add	r3, r3, #1
   12984:	cmp	r3, #1
   12988:	mov	r3, r4
   1298c:	bgt	12968 <vetor_ordena@@Base+0x40>
   12990:	add	r3, r4, #1
   12994:	b	1299c <vetor_ordena@@Base+0x74>
   12998:	add	r3, r3, #1
   1299c:	str	r1, [r0, r3, lsl #2]
   129a0:	add	lr, lr, #1
   129a4:	add	r2, r2, #1
   129a8:	cmp	r2, ip
   129ac:	blt	12960 <vetor_ordena@@Base+0x38>
   129b0:	mov	r1, #0
   129b4:	pop	{r4, r5, fp, lr}
   129b8:	mov	r0, r1
   129bc:	bx	lr

000129c0 <__libc_csu_init@@Base>:
   129c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   129c4:	mov	r7, r0
   129c8:	ldr	r6, [pc, #72]	; 12a18 <__libc_csu_init@@Base+0x58>
   129cc:	ldr	r5, [pc, #72]	; 12a1c <__libc_csu_init@@Base+0x5c>
   129d0:	add	r6, pc, r6
   129d4:	add	r5, pc, r5
   129d8:	sub	r6, r6, r5
   129dc:	mov	r8, r1
   129e0:	mov	r9, r2
   129e4:	bl	110a0 <calloc@plt-0x20>
   129e8:	asrs	r6, r6, #2
   129ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   129f0:	mov	r4, #0
   129f4:	add	r4, r4, #1
   129f8:	ldr	r3, [r5], #4
   129fc:	mov	r2, r9
   12a00:	mov	r1, r8
   12a04:	mov	r0, r7
   12a08:	blx	r3
   12a0c:	cmp	r6, r4
   12a10:	bne	129f4 <__libc_csu_init@@Base+0x34>
   12a14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a18:	andeq	r0, r1, r4, lsr r5
   12a1c:	andeq	r0, r1, ip, lsr #10

00012a20 <__libc_csu_fini@@Base>:
   12a20:	bx	lr

Disassembly of section .fini:

00012a24 <.fini>:
   12a24:	push	{r3, lr}
   12a28:	pop	{r3, pc}
