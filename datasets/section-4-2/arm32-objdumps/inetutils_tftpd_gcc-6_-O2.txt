
../repos/inetutils/src/tftpd:     file format elf32-littlearm


Disassembly of section .init:

000111d8 <.init>:
   111d8:	push	{r3, lr}
   111dc:	bl	11a14 <__assert_fail@plt+0x474>
   111e0:	pop	{r3, pc}

Disassembly of section .plt:

000111e4 <fdopen@plt-0x14>:
   111e4:	push	{lr}		; (str lr, [sp, #-4]!)
   111e8:	ldr	lr, [pc, #4]	; 111f4 <fdopen@plt-0x4>
   111ec:	add	lr, pc, lr
   111f0:	ldr	pc, [lr, #8]!
   111f4:	andeq	r9, r1, ip, lsl #28

000111f8 <fdopen@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #102400	; 0x19000
   11200:	ldr	pc, [ip, #3596]!	; 0xe0c

00011204 <calloc@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #102400	; 0x19000
   1120c:	ldr	pc, [ip, #3588]!	; 0xe04

00011210 <fputs_unlocked@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #102400	; 0x19000
   11218:	ldr	pc, [ip, #3580]!	; 0xdfc

0001121c <strstr@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #102400	; 0x19000
   11224:	ldr	pc, [ip, #3572]!	; 0xdf4

00011228 <raise@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #102400	; 0x19000
   11230:	ldr	pc, [ip, #3564]!	; 0xdec

00011234 <getpwnam@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #102400	; 0x19000
   1123c:	ldr	pc, [ip, #3556]!	; 0xde4

00011240 <strcmp@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #102400	; 0x19000
   11248:	ldr	pc, [ip, #3548]!	; 0xddc

0001124c <strtol@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #102400	; 0x19000
   11254:	ldr	pc, [ip, #3540]!	; 0xdd4

00011258 <printf@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #102400	; 0x19000
   11260:	ldr	pc, [ip, #3532]!	; 0xdcc

00011264 <read@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #102400	; 0x19000
   1126c:	ldr	pc, [ip, #3524]!	; 0xdc4

00011270 <getuid@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #102400	; 0x19000
   11278:	ldr	pc, [ip, #3516]!	; 0xdbc

0001127c <memmove@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #102400	; 0x19000
   11284:	ldr	pc, [ip, #3508]!	; 0xdb4

00011288 <strchrnul@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #102400	; 0x19000
   11290:	ldr	pc, [ip, #3500]!	; 0xdac

00011294 <free@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #102400	; 0x19000
   1129c:	ldr	pc, [ip, #3492]!	; 0xda4

000112a0 <gai_strerror@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #102400	; 0x19000
   112a8:	ldr	pc, [ip, #3484]!	; 0xd9c

000112ac <strndup@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #102400	; 0x19000
   112b4:	ldr	pc, [ip, #3476]!	; 0xd94

000112b8 <memcpy@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #102400	; 0x19000
   112c0:	ldr	pc, [ip, #3468]!	; 0xd8c

000112c4 <signal@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #102400	; 0x19000
   112cc:	ldr	pc, [ip, #3460]!	; 0xd84

000112d0 <fwrite_unlocked@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #102400	; 0x19000
   112d8:	ldr	pc, [ip, #3452]!	; 0xd7c

000112dc <sleep@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #102400	; 0x19000
   112e4:	ldr	pc, [ip, #3444]!	; 0xd74

000112e8 <recvfrom@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #102400	; 0x19000
   112f0:	ldr	pc, [ip, #3436]!	; 0xd6c

000112f4 <alarm@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #102400	; 0x19000
   112fc:	ldr	pc, [ip, #3428]!	; 0xd64

00011300 <realloc@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #102400	; 0x19000
   11308:	ldr	pc, [ip, #3420]!	; 0xd5c

0001130c <chdir@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #102400	; 0x19000
   11314:	ldr	pc, [ip, #3412]!	; 0xd54

00011318 <strcasecmp@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #102400	; 0x19000
   11320:	ldr	pc, [ip, #3404]!	; 0xd4c

00011324 <funlockfile@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #102400	; 0x19000
   1132c:	ldr	pc, [ip, #3396]!	; 0xd44

00011330 <fwrite@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #102400	; 0x19000
   11338:	ldr	pc, [ip, #3388]!	; 0xd3c

0001133c <ioctl@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #102400	; 0x19000
   11344:	ldr	pc, [ip, #3380]!	; 0xd34

00011348 <chroot@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #102400	; 0x19000
   11350:	ldr	pc, [ip, #3372]!	; 0xd2c

00011354 <error@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #102400	; 0x19000
   1135c:	ldr	pc, [ip, #3364]!	; 0xd24

00011360 <open64@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #102400	; 0x19000
   11368:	ldr	pc, [ip, #3356]!	; 0xd1c

0001136c <getenv@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #102400	; 0x19000
   11374:	ldr	pc, [ip, #3348]!	; 0xd14

00011378 <setgid@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #102400	; 0x19000
   11380:	ldr	pc, [ip, #3340]!	; 0xd0c

00011384 <malloc@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #102400	; 0x19000
   1138c:	ldr	pc, [ip, #3332]!	; 0xd04

00011390 <__libc_start_main@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #102400	; 0x19000
   11398:	ldr	pc, [ip, #3324]!	; 0xcfc

0001139c <strerror@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #102400	; 0x19000
   113a4:	ldr	pc, [ip, #3316]!	; 0xcf4

000113a8 <__ctype_tolower_loc@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #102400	; 0x19000
   113b0:	ldr	pc, [ip, #3308]!	; 0xcec

000113b4 <__gmon_start__@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #102400	; 0x19000
   113bc:	ldr	pc, [ip, #3300]!	; 0xce4

000113c0 <mempcpy@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #102400	; 0x19000
   113c8:	ldr	pc, [ip, #3292]!	; 0xcdc

000113cc <__ctype_b_loc@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #102400	; 0x19000
   113d4:	ldr	pc, [ip, #3284]!	; 0xcd4

000113d8 <exit@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #102400	; 0x19000
   113e0:	ldr	pc, [ip, #3276]!	; 0xccc

000113e4 <strlen@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #102400	; 0x19000
   113ec:	ldr	pc, [ip, #3268]!	; 0xcc4

000113f0 <strchr@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #102400	; 0x19000
   113f8:	ldr	pc, [ip, #3260]!	; 0xcbc

000113fc <fprintf@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #102400	; 0x19000
   11404:	ldr	pc, [ip, #3252]!	; 0xcb4

00011408 <__errno_location@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #102400	; 0x19000
   11410:	ldr	pc, [ip, #3244]!	; 0xcac

00011414 <strerror_r@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #102400	; 0x19000
   1141c:	ldr	pc, [ip, #3236]!	; 0xca4

00011420 <bind@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #102400	; 0x19000
   11428:	ldr	pc, [ip, #3228]!	; 0xc9c

0001142c <memset@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #102400	; 0x19000
   11434:	ldr	pc, [ip, #3220]!	; 0xc94

00011438 <write@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #102400	; 0x19000
   11440:	ldr	pc, [ip, #3212]!	; 0xc8c

00011444 <fileno@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #102400	; 0x19000
   1144c:	ldr	pc, [ip, #3204]!	; 0xc84

00011450 <memchr@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #102400	; 0x19000
   11458:	ldr	pc, [ip, #3196]!	; 0xc7c

0001145c <fclose@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #102400	; 0x19000
   11464:	ldr	pc, [ip, #3188]!	; 0xc74

00011468 <fseeko64@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #102400	; 0x19000
   11470:	ldr	pc, [ip, #3180]!	; 0xc6c

00011474 <sendto@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #102400	; 0x19000
   1147c:	ldr	pc, [ip, #3172]!	; 0xc64

00011480 <__overflow@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #102400	; 0x19000
   11488:	ldr	pc, [ip, #3164]!	; 0xc5c

0001148c <fork@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #102400	; 0x19000
   11494:	ldr	pc, [ip, #3156]!	; 0xc54

00011498 <getnameinfo@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #102400	; 0x19000
   114a0:	ldr	pc, [ip, #3148]!	; 0xc4c

000114a4 <strrchr@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #102400	; 0x19000
   114ac:	ldr	pc, [ip, #3140]!	; 0xc44

000114b0 <vfprintf@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #102400	; 0x19000
   114b8:	ldr	pc, [ip, #3132]!	; 0xc3c

000114bc <__sigsetjmp@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #102400	; 0x19000
   114c4:	ldr	pc, [ip, #3124]!	; 0xc34

000114c8 <fputc@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #102400	; 0x19000
   114d0:	ldr	pc, [ip, #3116]!	; 0xc2c

000114d4 <syslog@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #102400	; 0x19000
   114dc:	ldr	pc, [ip, #3108]!	; 0xc24

000114e0 <setuid@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #102400	; 0x19000
   114e8:	ldr	pc, [ip, #3100]!	; 0xc1c

000114ec <sprintf@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #102400	; 0x19000
   114f4:	ldr	pc, [ip, #3092]!	; 0xc14

000114f8 <openlog@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #102400	; 0x19000
   11500:	ldr	pc, [ip, #3084]!	; 0xc0c

00011504 <putc@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #102400	; 0x19000
   1150c:	ldr	pc, [ip, #3076]!	; 0xc04

00011510 <flockfile@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #102400	; 0x19000
   11518:	ldr	pc, [ip, #3068]!	; 0xbfc

0001151c <vsnprintf@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #102400	; 0x19000
   11524:	ldr	pc, [ip, #3060]!	; 0xbf4

00011528 <qsort@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #102400	; 0x19000
   11530:	ldr	pc, [ip, #3052]!	; 0xbec

00011534 <socket@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #102400	; 0x19000
   1153c:	ldr	pc, [ip, #3044]!	; 0xbe4

00011540 <__xstat64@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #102400	; 0x19000
   11548:	ldr	pc, [ip, #3036]!	; 0xbdc

0001154c <strncmp@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #102400	; 0x19000
   11554:	ldr	pc, [ip, #3028]!	; 0xbd4

00011558 <abort@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #102400	; 0x19000
   11560:	ldr	pc, [ip, #3020]!	; 0xbcc

00011564 <getc@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #102400	; 0x19000
   1156c:	ldr	pc, [ip, #3012]!	; 0xbc4

00011570 <recv@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #102400	; 0x19000
   11578:	ldr	pc, [ip, #3004]!	; 0xbbc

0001157c <siglongjmp@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #102400	; 0x19000
   11584:	ldr	pc, [ip, #2996]!	; 0xbb4

00011588 <close@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #102400	; 0x19000
   11590:	ldr	pc, [ip, #2988]!	; 0xbac

00011594 <getgrnam@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #102400	; 0x19000
   1159c:	ldr	pc, [ip, #2980]!	; 0xba4

000115a0 <__assert_fail@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #102400	; 0x19000
   115a8:	ldr	pc, [ip, #2972]!	; 0xb9c

Disassembly of section .text:

000115ac <argp_parse@@Base-0x1c04>:
   115ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115b0:	mov	r8, r0
   115b4:	sub	sp, sp, #156	; 0x9c
   115b8:	ldr	r0, [pc, #968]	; 11988 <__assert_fail@plt+0x3e8>
   115bc:	mov	r6, r1
   115c0:	bl	14b54 <argp_parse@@Base+0x19a4>
   115c4:	ldr	r5, [pc, #960]	; 1198c <__assert_fail@plt+0x3ec>
   115c8:	str	r0, [r5, #1356]	; 0x54c
   115cc:	ldr	r0, [r6]
   115d0:	bl	14180 <argp_parse@@Base+0xfd0>
   115d4:	ldr	r3, [pc, #948]	; 11990 <__assert_fail@plt+0x3f0>
   115d8:	ldr	r2, [pc, #948]	; 11994 <__assert_fail@plt+0x3f4>
   115dc:	ldr	r1, [pc, #948]	; 11998 <__assert_fail@plt+0x3f8>
   115e0:	ldr	r0, [pc, #948]	; 1199c <__assert_fail@plt+0x3fc>
   115e4:	str	r2, [r3]
   115e8:	bl	13f74 <argp_parse@@Base+0xdc4>
   115ec:	mov	r3, #0
   115f0:	add	r0, sp, #16
   115f4:	mov	r2, r6
   115f8:	stm	sp, {r0, r3}
   115fc:	mov	r1, r8
   11600:	ldr	r0, [pc, #920]	; 119a0 <__assert_fail@plt+0x400>
   11604:	bl	131b0 <argp_parse@@Base>
   11608:	mov	r2, #88	; 0x58
   1160c:	mov	r1, #9
   11610:	ldr	r0, [pc, #900]	; 1199c <__assert_fail@plt+0x3fc>
   11614:	bl	114f8 <openlog@plt>
   11618:	ldr	r4, [sp, #16]
   1161c:	cmp	r8, r4
   11620:	ble	11680 <__assert_fail@plt+0xe0>
   11624:	add	r6, r6, r4, lsl #2
   11628:	add	r7, r5, #652	; 0x28c
   1162c:	add	r9, r5, #812	; 0x32c
   11630:	b	11658 <__assert_fail@plt+0xb8>
   11634:	cmp	r7, r9
   11638:	add	r4, r4, #1
   1163c:	movcs	r3, #0
   11640:	movcc	r3, #1
   11644:	cmp	r8, r4
   11648:	movle	r3, #0
   1164c:	cmp	r3, #0
   11650:	str	r4, [sp, #16]
   11654:	beq	11680 <__assert_fail@plt+0xe0>
   11658:	ldr	r3, [r6], #4
   1165c:	ldrb	r2, [r3]
   11660:	cmp	r2, #47	; 0x2f
   11664:	bne	11634 <__assert_fail@plt+0x94>
   11668:	str	r3, [r7]
   1166c:	mov	r0, r3
   11670:	bl	113e4 <strlen@plt>
   11674:	add	r7, r7, #8
   11678:	str	r0, [r7, #-4]
   1167c:	b	11634 <__assert_fail@plt+0x94>
   11680:	add	r2, sp, #152	; 0x98
   11684:	mov	fp, #1
   11688:	str	fp, [r2, #-132]!	; 0xffffff7c
   1168c:	ldr	r1, [pc, #784]	; 119a4 <__assert_fail@plt+0x404>
   11690:	mov	r0, #0
   11694:	bl	14150 <argp_parse@@Base+0xfa0>
   11698:	cmp	r0, #0
   1169c:	blt	11810 <__assert_fail@plt+0x270>
   116a0:	ldr	r4, [pc, #768]	; 119a8 <__assert_fail@plt+0x408>
   116a4:	mov	r3, #0
   116a8:	add	r2, r4, #128	; 0x80
   116ac:	str	r2, [sp, #4]
   116b0:	mov	r0, r3
   116b4:	str	r4, [sp]
   116b8:	sub	r1, r4, #520	; 0x208
   116bc:	mov	r6, #128	; 0x80
   116c0:	mov	r2, #516	; 0x204
   116c4:	str	r6, [r5, #648]	; 0x288
   116c8:	bl	112e8 <recvfrom@plt>
   116cc:	subs	r3, r0, #0
   116d0:	str	r3, [sp, #8]
   116d4:	blt	11824 <__assert_fail@plt+0x284>
   116d8:	add	sl, sp, #24
   116dc:	mov	r9, #0
   116e0:	mov	r8, #516	; 0x204
   116e4:	sub	r7, r4, #520	; 0x208
   116e8:	bl	1148c <fork@plt>
   116ec:	subs	r3, r0, #0
   116f0:	bge	11748 <__assert_fail@plt+0x1a8>
   116f4:	mov	r0, fp
   116f8:	bl	112dc <sleep@plt>
   116fc:	mov	r3, r9
   11700:	stm	sp, {r4, sl}
   11704:	mov	r2, r8
   11708:	mov	r1, r7
   1170c:	mov	r0, #0
   11710:	str	r6, [sp, #24]
   11714:	bl	112e8 <recvfrom@plt>
   11718:	cmp	r0, #0
   1171c:	add	fp, r0, #1
   11720:	ldrgt	r3, [sp, #24]
   11724:	strgt	r0, [sp, #8]
   11728:	strgt	r3, [r5, #648]	; 0x288
   1172c:	cmp	fp, #19
   11730:	ble	116e8 <__assert_fail@plt+0x148>
   11734:	ldr	r1, [pc, #624]	; 119ac <__assert_fail@plt+0x40c>
   11738:	mov	r0, #3
   1173c:	bl	114d4 <syslog@plt>
   11740:	mov	r0, #1
   11744:	bl	113d8 <exit@plt>
   11748:	bne	11808 <__assert_fail@plt+0x268>
   1174c:	str	r3, [sp, #12]
   11750:	bl	112f4 <alarm@plt>
   11754:	ldr	r3, [sp, #12]
   11758:	mov	r0, r3
   1175c:	bl	11588 <close@plt>
   11760:	mov	r0, #1
   11764:	bl	11588 <close@plt>
   11768:	ldr	r3, [sp, #12]
   1176c:	mov	r1, #2
   11770:	mov	r2, r3
   11774:	ldrh	r0, [r4]
   11778:	bl	11534 <socket@plt>
   1177c:	ldr	r3, [sp, #12]
   11780:	cmp	r0, #0
   11784:	mov	r6, r0
   11788:	str	r0, [r5, #516]	; 0x204
   1178c:	blt	11838 <__assert_fail@plt+0x298>
   11790:	mov	r1, r3
   11794:	mov	r2, #128	; 0x80
   11798:	add	r0, sp, #24
   1179c:	str	r3, [sp, #12]
   117a0:	bl	1142c <memset@plt>
   117a4:	ldrh	ip, [r4]
   117a8:	add	r1, sp, #24
   117ac:	mov	r0, r6
   117b0:	ldr	r2, [r5, #648]	; 0x288
   117b4:	strh	ip, [sp, #24]
   117b8:	bl	11420 <bind@plt>
   117bc:	ldr	r3, [sp, #12]
   117c0:	cmp	r0, #0
   117c4:	blt	1184c <__assert_fail@plt+0x2ac>
   117c8:	ldr	r2, [r5, #1352]	; 0x548
   117cc:	cmp	r2, #0
   117d0:	beq	117e0 <__assert_fail@plt+0x240>
   117d4:	ldrb	r2, [r2]
   117d8:	cmp	r2, #0
   117dc:	bne	11860 <__assert_fail@plt+0x2c0>
   117e0:	ldrh	r3, [r5]
   117e4:	rev16	r3, r3
   117e8:	sub	r2, r3, #1
   117ec:	strh	r3, [r5]
   117f0:	uxth	r3, r2
   117f4:	cmp	r3, #1
   117f8:	bhi	11740 <__assert_fail@plt+0x1a0>
   117fc:	ldr	r1, [sp, #8]
   11800:	ldr	r0, [pc, #388]	; 1198c <__assert_fail@plt+0x3ec>
   11804:	bl	1254c <__assert_fail@plt+0xfac>
   11808:	mov	r0, #0
   1180c:	bl	113d8 <exit@plt>
   11810:	mov	r0, #3
   11814:	ldr	r1, [pc, #404]	; 119b0 <__assert_fail@plt+0x410>
   11818:	bl	114d4 <syslog@plt>
   1181c:	mov	r0, fp
   11820:	bl	113d8 <exit@plt>
   11824:	mov	r0, #3
   11828:	ldr	r1, [pc, #388]	; 119b4 <__assert_fail@plt+0x414>
   1182c:	bl	114d4 <syslog@plt>
   11830:	mov	r0, fp
   11834:	bl	113d8 <exit@plt>
   11838:	mov	r0, #3
   1183c:	ldr	r1, [pc, #372]	; 119b8 <__assert_fail@plt+0x418>
   11840:	bl	114d4 <syslog@plt>
   11844:	mov	r0, #1
   11848:	bl	113d8 <exit@plt>
   1184c:	mov	r0, #3
   11850:	ldr	r1, [pc, #356]	; 119bc <__assert_fail@plt+0x41c>
   11854:	bl	114d4 <syslog@plt>
   11858:	mov	r0, #1
   1185c:	bl	113d8 <exit@plt>
   11860:	str	r3, [sp, #12]
   11864:	bl	11270 <getuid@plt>
   11868:	ldr	r3, [sp, #12]
   1186c:	cmp	r0, #0
   11870:	bne	11938 <__assert_fail@plt+0x398>
   11874:	ldr	r0, [r5, #1356]	; 0x54c
   11878:	bl	11234 <getpwnam@plt>
   1187c:	subs	r7, r0, #0
   11880:	ldreq	r2, [r5, #1356]	; 0x54c
   11884:	ldreq	r1, [pc, #308]	; 119c0 <__assert_fail@plt+0x420>
   11888:	beq	11958 <__assert_fail@plt+0x3b8>
   1188c:	ldr	r0, [r5, #1344]	; 0x540
   11890:	cmp	r0, #0
   11894:	beq	118a4 <__assert_fail@plt+0x304>
   11898:	ldrb	r3, [r0]
   1189c:	cmp	r3, #0
   118a0:	bne	11944 <__assert_fail@plt+0x3a4>
   118a4:	mov	r4, #0
   118a8:	ldr	r6, [r5, #1352]	; 0x548
   118ac:	mov	r0, r6
   118b0:	bl	11348 <chroot@plt>
   118b4:	cmp	r0, #0
   118b8:	bne	11918 <__assert_fail@plt+0x378>
   118bc:	ldr	r0, [pc, #256]	; 119c4 <__assert_fail@plt+0x424>
   118c0:	bl	1130c <chdir@plt>
   118c4:	cmp	r0, #0
   118c8:	bne	11918 <__assert_fail@plt+0x378>
   118cc:	cmp	r7, #0
   118d0:	beq	117e0 <__assert_fail@plt+0x240>
   118d4:	cmp	r4, #0
   118d8:	beq	11970 <__assert_fail@plt+0x3d0>
   118dc:	ldr	r0, [r4, #8]
   118e0:	bl	11378 <setgid@plt>
   118e4:	cmp	r0, #0
   118e8:	bne	11980 <__assert_fail@plt+0x3e0>
   118ec:	ldr	r0, [r7, #8]
   118f0:	bl	114e0 <setuid@plt>
   118f4:	cmp	r0, #0
   118f8:	beq	117e0 <__assert_fail@plt+0x240>
   118fc:	ldr	r1, [pc, #196]	; 119c8 <__assert_fail@plt+0x428>
   11900:	mov	r0, #3
   11904:	bl	114d4 <syslog@plt>
   11908:	mov	r0, #7
   1190c:	bl	11b0c <__assert_fail@plt+0x56c>
   11910:	mov	r0, #1
   11914:	bl	113d8 <exit@plt>
   11918:	mov	r2, r6
   1191c:	ldr	r1, [pc, #168]	; 119cc <__assert_fail@plt+0x42c>
   11920:	mov	r0, #3
   11924:	bl	114d4 <syslog@plt>
   11928:	mov	r0, #2
   1192c:	bl	11b0c <__assert_fail@plt+0x56c>
   11930:	mov	r0, #1
   11934:	bl	113d8 <exit@plt>
   11938:	mov	r4, r3
   1193c:	mov	r7, r3
   11940:	b	118a8 <__assert_fail@plt+0x308>
   11944:	bl	11594 <getgrnam@plt>
   11948:	subs	r4, r0, #0
   1194c:	bne	118a8 <__assert_fail@plt+0x308>
   11950:	ldr	r2, [r5, #1344]	; 0x540
   11954:	ldr	r1, [pc, #116]	; 119d0 <__assert_fail@plt+0x430>
   11958:	mov	r0, #3
   1195c:	bl	114d4 <syslog@plt>
   11960:	mov	r0, #7
   11964:	bl	11b0c <__assert_fail@plt+0x56c>
   11968:	mov	r0, #1
   1196c:	bl	113d8 <exit@plt>
   11970:	ldr	r0, [r7, #12]
   11974:	bl	11378 <setgid@plt>
   11978:	cmp	r0, #0
   1197c:	beq	118ec <__assert_fail@plt+0x34c>
   11980:	ldr	r1, [pc, #76]	; 119d4 <__assert_fail@plt+0x434>
   11984:	b	11900 <__assert_fail@plt+0x360>
   11988:	andeq	r9, r1, r0, asr #18
   1198c:	strdeq	fp, [r2], -ip
   11990:	andeq	ip, r2, r8, asr #4
   11994:	andeq	r9, r1, r8, asr #18
   11998:	muleq	r2, ip, r2
   1199c:	andeq	r9, r1, r0, ror #18
   119a0:	ldrdeq	fp, [r2], -r8
   119a4:	andeq	r5, r0, r1, lsr #8
   119a8:	andeq	fp, r2, r4, lsl #10
   119ac:	strdeq	r9, [r1], -ip
   119b0:	andeq	r9, r1, r8, ror #18
   119b4:	andeq	r9, r1, ip, ror r9
   119b8:	andeq	r9, r1, ip, lsl #19
   119bc:	muleq	r1, r8, r9
   119c0:	andeq	r9, r1, r4, lsr #19
   119c4:	andeq	r9, r1, r0, ror #19
   119c8:	strdeq	r9, [r1], -r0
   119cc:	andeq	r9, r1, ip, asr #19
   119d0:			; <UNDEFINED> instruction: 0x000199b8
   119d4:	andeq	r9, r1, r4, ror #19
   119d8:	mov	fp, #0
   119dc:	mov	lr, #0
   119e0:	pop	{r1}		; (ldr r1, [sp], #4)
   119e4:	mov	r2, sp
   119e8:	push	{r2}		; (str r2, [sp, #-4]!)
   119ec:	push	{r0}		; (str r0, [sp, #-4]!)
   119f0:	ldr	ip, [pc, #16]	; 11a08 <__assert_fail@plt+0x468>
   119f4:	push	{ip}		; (str ip, [sp, #-4]!)
   119f8:	ldr	r0, [pc, #12]	; 11a0c <__assert_fail@plt+0x46c>
   119fc:	ldr	r3, [pc, #12]	; 11a10 <__assert_fail@plt+0x470>
   11a00:	bl	11390 <__libc_start_main@plt>
   11a04:	bl	11558 <abort@plt>
   11a08:	andeq	r9, r1, r0, ror r8
   11a0c:	andeq	r1, r1, ip, lsr #11
   11a10:	andeq	r9, r1, r0, lsl r8
   11a14:	ldr	r3, [pc, #20]	; 11a30 <__assert_fail@plt+0x490>
   11a18:	ldr	r2, [pc, #20]	; 11a34 <__assert_fail@plt+0x494>
   11a1c:	add	r3, pc, r3
   11a20:	ldr	r2, [r3, r2]
   11a24:	cmp	r2, #0
   11a28:	bxeq	lr
   11a2c:	b	113b4 <__gmon_start__@plt>
   11a30:	ldrdeq	r9, [r1], -ip
   11a34:	andeq	r0, r0, r8, asr #2
   11a38:	ldr	r3, [pc, #28]	; 11a5c <__assert_fail@plt+0x4bc>
   11a3c:	ldr	r0, [pc, #28]	; 11a60 <__assert_fail@plt+0x4c0>
   11a40:	sub	r3, r3, r0
   11a44:	cmp	r3, #6
   11a48:	bxls	lr
   11a4c:	ldr	r3, [pc, #16]	; 11a64 <__assert_fail@plt+0x4c4>
   11a50:	cmp	r3, #0
   11a54:	bxeq	lr
   11a58:	bx	r3
   11a5c:	andeq	fp, r2, r7, ror #5
   11a60:	andeq	fp, r2, r4, ror #5
   11a64:	andeq	r0, r0, r0
   11a68:	ldr	r1, [pc, #36]	; 11a94 <__assert_fail@plt+0x4f4>
   11a6c:	ldr	r0, [pc, #36]	; 11a98 <__assert_fail@plt+0x4f8>
   11a70:	sub	r1, r1, r0
   11a74:	asr	r1, r1, #2
   11a78:	add	r1, r1, r1, lsr #31
   11a7c:	asrs	r1, r1, #1
   11a80:	bxeq	lr
   11a84:	ldr	r3, [pc, #16]	; 11a9c <__assert_fail@plt+0x4fc>
   11a88:	cmp	r3, #0
   11a8c:	bxeq	lr
   11a90:	bx	r3
   11a94:	andeq	fp, r2, r4, ror #5
   11a98:	andeq	fp, r2, r4, ror #5
   11a9c:	andeq	r0, r0, r0
   11aa0:	push	{r4, lr}
   11aa4:	ldr	r4, [pc, #24]	; 11ac4 <__assert_fail@plt+0x524>
   11aa8:	ldrb	r3, [r4]
   11aac:	cmp	r3, #0
   11ab0:	popne	{r4, pc}
   11ab4:	bl	11a38 <__assert_fail@plt+0x498>
   11ab8:	mov	r3, #1
   11abc:	strb	r3, [r4]
   11ac0:	pop	{r4, pc}
   11ac4:	strdeq	fp, [r2], -r8
   11ac8:	ldr	r0, [pc, #40]	; 11af8 <__assert_fail@plt+0x558>
   11acc:	ldr	r3, [r0]
   11ad0:	cmp	r3, #0
   11ad4:	bne	11adc <__assert_fail@plt+0x53c>
   11ad8:	b	11a68 <__assert_fail@plt+0x4c8>
   11adc:	ldr	r3, [pc, #24]	; 11afc <__assert_fail@plt+0x55c>
   11ae0:	cmp	r3, #0
   11ae4:	beq	11ad8 <__assert_fail@plt+0x538>
   11ae8:	push	{r4, lr}
   11aec:	blx	r3
   11af0:	pop	{r4, lr}
   11af4:	b	11a68 <__assert_fail@plt+0x4c8>
   11af8:	andeq	sl, r2, ip, lsl #30
   11afc:	andeq	r0, r0, r0
   11b00:	push	{r4, lr}
   11b04:	mov	r0, #0
   11b08:	bl	113d8 <exit@plt>
   11b0c:	ldr	r3, [pc, #240]	; 11c04 <__assert_fail@plt+0x664>
   11b10:	push	{r4, r5, r6, lr}
   11b14:	rev16	ip, r0
   11b18:	ldr	r5, [pc, #232]	; 11c08 <__assert_fail@plt+0x668>
   11b1c:	ldr	r2, [r3]
   11b20:	mov	r1, #1280	; 0x500
   11b24:	cmp	r2, #0
   11b28:	sub	sp, sp, #8
   11b2c:	strh	ip, [r5, #2]
   11b30:	strh	r1, [r5]
   11b34:	blt	11bf4 <__assert_fail@plt+0x654>
   11b38:	cmp	r0, r2
   11b3c:	bne	11b50 <__assert_fail@plt+0x5b0>
   11b40:	b	11bfc <__assert_fail@plt+0x65c>
   11b44:	cmp	r0, r2
   11b48:	beq	11be4 <__assert_fail@plt+0x644>
   11b4c:	mov	r3, r4
   11b50:	ldr	r2, [r3, #8]
   11b54:	add	r4, r3, #8
   11b58:	cmp	r2, #0
   11b5c:	bge	11b44 <__assert_fail@plt+0x5a4>
   11b60:	sub	r0, r0, #100	; 0x64
   11b64:	bl	1139c <strerror@plt>
   11b68:	mov	r3, #0
   11b6c:	strh	r3, [r5, #2]
   11b70:	mov	r6, r0
   11b74:	str	r0, [r4, #4]
   11b78:	mov	r0, r6
   11b7c:	bl	113e4 <strlen@plt>
   11b80:	mov	r1, r6
   11b84:	mov	r4, r0
   11b88:	mov	r2, r0
   11b8c:	ldr	r0, [pc, #120]	; 11c0c <__assert_fail@plt+0x66c>
   11b90:	bl	112b8 <memcpy@plt>
   11b94:	ldr	r2, [r5, #648]	; 0x288
   11b98:	ldr	r0, [r5, #516]	; 0x204
   11b9c:	ldr	r1, [pc, #108]	; 11c10 <__assert_fail@plt+0x670>
   11ba0:	add	r5, r5, r4
   11ba4:	mov	ip, #0
   11ba8:	add	r4, r4, #5
   11bac:	str	r2, [sp, #4]
   11bb0:	str	r1, [sp]
   11bb4:	mov	r3, ip
   11bb8:	mov	r2, r4
   11bbc:	sub	r1, r1, #520	; 0x208
   11bc0:	strb	ip, [r5, #4]
   11bc4:	bl	11474 <sendto@plt>
   11bc8:	cmp	r4, r0
   11bcc:	beq	11bec <__assert_fail@plt+0x64c>
   11bd0:	ldr	r1, [pc, #60]	; 11c14 <__assert_fail@plt+0x674>
   11bd4:	mov	r0, #3
   11bd8:	add	sp, sp, #8
   11bdc:	pop	{r4, r5, r6, lr}
   11be0:	b	114d4 <syslog@plt>
   11be4:	ldr	r6, [r3, #12]
   11be8:	b	11b78 <__assert_fail@plt+0x5d8>
   11bec:	add	sp, sp, #8
   11bf0:	pop	{r4, r5, r6, pc}
   11bf4:	mov	r4, r3
   11bf8:	b	11b60 <__assert_fail@plt+0x5c0>
   11bfc:	ldr	r6, [r3, #4]
   11c00:	b	11b78 <__assert_fail@plt+0x5d8>
   11c04:	andeq	fp, r2, r4, asr r1
   11c08:	strdeq	fp, [r2], -ip
   11c0c:	andeq	fp, r2, r0, lsl #6
   11c10:	andeq	fp, r2, r4, lsl #10
   11c14:	andeq	r9, r1, r0, lsl #17
   11c18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c1c:	mov	r6, r0
   11c20:	ldr	r5, [r0]
   11c24:	sub	sp, sp, #108	; 0x6c
   11c28:	mov	r4, r1
   11c2c:	mov	r0, r5
   11c30:	ldr	r1, [pc, #568]	; 11e70 <__assert_fail@plt+0x8d0>
   11c34:	bl	1121c <strstr@plt>
   11c38:	cmp	r0, #0
   11c3c:	beq	11c4c <__assert_fail@plt+0x6ac>
   11c40:	mov	r0, #2
   11c44:	add	sp, sp, #108	; 0x6c
   11c48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c4c:	ldrb	r3, [r5]
   11c50:	cmp	r3, #47	; 0x2f
   11c54:	beq	11d28 <__assert_fail@plt+0x788>
   11c58:	cmp	r4, #1
   11c5c:	bne	11c40 <__assert_fail@plt+0x6a0>
   11c60:	mov	r2, #3
   11c64:	ldr	r1, [pc, #520]	; 11e74 <__assert_fail@plt+0x8d4>
   11c68:	mov	r0, r5
   11c6c:	bl	1154c <strncmp@plt>
   11c70:	cmp	r0, #0
   11c74:	beq	11c40 <__assert_fail@plt+0x6a0>
   11c78:	ldr	r8, [pc, #504]	; 11e78 <__assert_fail@plt+0x8d8>
   11c7c:	ldr	r3, [r8, #652]	; 0x28c
   11c80:	cmp	r3, #0
   11c84:	beq	11e24 <__assert_fail@plt+0x884>
   11c88:	ldr	fp, [r8, #820]	; 0x334
   11c8c:	ldr	r9, [pc, #488]	; 11e7c <__assert_fail@plt+0x8dc>
   11c90:	add	r7, r8, #652	; 0x28c
   11c94:	mov	sl, #3
   11c98:	b	11ca8 <__assert_fail@plt+0x708>
   11c9c:	ldr	r2, [r7, #8]!
   11ca0:	cmp	r2, #0
   11ca4:	beq	11e24 <__assert_fail@plt+0x884>
   11ca8:	mov	r0, fp
   11cac:	bl	14048 <argp_parse@@Base+0xe98>
   11cb0:	ldr	r0, [r7]
   11cb4:	bl	113e4 <strlen@plt>
   11cb8:	mov	fp, r0
   11cbc:	mov	r0, r5
   11cc0:	bl	113e4 <strlen@plt>
   11cc4:	add	r0, fp, r0
   11cc8:	add	r0, r0, #2
   11ccc:	bl	14be4 <argp_parse@@Base+0x1a34>
   11cd0:	mov	r3, r5
   11cd4:	mov	r1, r9
   11cd8:	cmp	r0, #0
   11cdc:	str	r0, [r8, #820]	; 0x334
   11ce0:	beq	11e2c <__assert_fail@plt+0x88c>
   11ce4:	ldr	r2, [r7]
   11ce8:	bl	114ec <sprintf@plt>
   11cec:	ldr	fp, [r8, #820]	; 0x334
   11cf0:	mov	r2, sp
   11cf4:	mov	r1, fp
   11cf8:	mov	r0, sl
   11cfc:	bl	11540 <__xstat64@plt>
   11d00:	cmp	r0, #0
   11d04:	bne	11c9c <__assert_fail@plt+0x6fc>
   11d08:	ldr	r2, [sp, #16]
   11d0c:	and	r1, r2, #61440	; 0xf000
   11d10:	cmp	r1, #32768	; 0x8000
   11d14:	bne	11c9c <__assert_fail@plt+0x6fc>
   11d18:	tst	r2, #4
   11d1c:	bne	11e5c <__assert_fail@plt+0x8bc>
   11d20:	mov	r4, #2
   11d24:	b	11c9c <__assert_fail@plt+0x6fc>
   11d28:	ldr	r3, [pc, #328]	; 11e78 <__assert_fail@plt+0x8d8>
   11d2c:	ldr	r1, [r3, #652]	; 0x28c
   11d30:	cmp	r1, #0
   11d34:	beq	11d90 <__assert_fail@plt+0x7f0>
   11d38:	ldr	r6, [r3, #656]	; 0x290
   11d3c:	cmp	r6, #1
   11d40:	beq	11d90 <__assert_fail@plt+0x7f0>
   11d44:	add	r8, r3, #652	; 0x28c
   11d48:	mov	r7, r8
   11d4c:	b	11d5c <__assert_fail@plt+0x7bc>
   11d50:	ldr	r6, [r7, #4]
   11d54:	cmp	r6, #1
   11d58:	beq	11d90 <__assert_fail@plt+0x7f0>
   11d5c:	mov	r2, r6
   11d60:	mov	r0, r5
   11d64:	bl	1154c <strncmp@plt>
   11d68:	cmp	r0, #0
   11d6c:	bne	11d7c <__assert_fail@plt+0x7dc>
   11d70:	ldrb	r3, [r5, r6]
   11d74:	cmp	r3, #47	; 0x2f
   11d78:	beq	11d90 <__assert_fail@plt+0x7f0>
   11d7c:	ldr	r1, [r7, #8]!
   11d80:	cmp	r1, #0
   11d84:	bne	11d50 <__assert_fail@plt+0x7b0>
   11d88:	cmp	r7, r8
   11d8c:	bne	11c40 <__assert_fail@plt+0x6a0>
   11d90:	mov	r2, sp
   11d94:	mov	r1, r5
   11d98:	mov	r0, #3
   11d9c:	bl	11540 <__xstat64@plt>
   11da0:	cmp	r0, #0
   11da4:	blt	11e10 <__assert_fail@plt+0x870>
   11da8:	ldr	r3, [sp, #16]
   11dac:	and	r2, r3, #61440	; 0xf000
   11db0:	cmp	r2, #32768	; 0x8000
   11db4:	beq	11dc0 <__assert_fail@plt+0x820>
   11db8:	mov	r0, #1
   11dbc:	b	11c44 <__assert_fail@plt+0x6a4>
   11dc0:	cmp	r4, #1
   11dc4:	beq	11e34 <__assert_fail@plt+0x894>
   11dc8:	tst	r3, #2
   11dcc:	beq	11c40 <__assert_fail@plt+0x6a0>
   11dd0:	mov	r0, r5
   11dd4:	ldr	r1, [pc, #164]	; 11e80 <__assert_fail@plt+0x8e0>
   11dd8:	bl	11360 <open64@plt>
   11ddc:	cmp	r0, #0
   11de0:	blt	11e00 <__assert_fail@plt+0x860>
   11de4:	ldr	r1, [pc, #152]	; 11e84 <__assert_fail@plt+0x8e4>
   11de8:	bl	111f8 <fdopen@plt>
   11dec:	ldr	r3, [pc, #148]	; 11e88 <__assert_fail@plt+0x8e8>
   11df0:	cmp	r0, #0
   11df4:	str	r0, [r3]
   11df8:	movne	r0, #0
   11dfc:	bne	11c44 <__assert_fail@plt+0x6a4>
   11e00:	bl	11408 <__errno_location@plt>
   11e04:	ldr	r0, [r0]
   11e08:	add	r0, r0, #100	; 0x64
   11e0c:	b	11c44 <__assert_fail@plt+0x6a4>
   11e10:	bl	11408 <__errno_location@plt>
   11e14:	ldr	r3, [r0]
   11e18:	cmp	r3, #2
   11e1c:	bne	11c40 <__assert_fail@plt+0x6a0>
   11e20:	b	11db8 <__assert_fail@plt+0x818>
   11e24:	mov	r0, r4
   11e28:	b	11c44 <__assert_fail@plt+0x6a4>
   11e2c:	mov	r0, #12
   11e30:	b	11c44 <__assert_fail@plt+0x6a4>
   11e34:	tst	r3, #4
   11e38:	movne	fp, r5
   11e3c:	beq	11c40 <__assert_fail@plt+0x6a0>
   11e40:	mov	r1, #0
   11e44:	mov	r0, fp
   11e48:	bl	11360 <open64@plt>
   11e4c:	cmp	r0, #0
   11e50:	ldrge	r1, [pc, #52]	; 11e8c <__assert_fail@plt+0x8ec>
   11e54:	blt	11e00 <__assert_fail@plt+0x860>
   11e58:	b	11de8 <__assert_fail@plt+0x848>
   11e5c:	ldr	r2, [r7]
   11e60:	cmp	r2, #0
   11e64:	beq	11e24 <__assert_fail@plt+0x884>
   11e68:	str	fp, [r6]
   11e6c:	b	11e40 <__assert_fail@plt+0x8a0>
   11e70:	muleq	r1, r0, r8
   11e74:	muleq	r1, r8, r8
   11e78:	strdeq	fp, [r2], -ip
   11e7c:	muleq	r1, ip, r8
   11e80:	andeq	r0, r0, r1, lsl #4
   11e84:	andeq	r9, r1, ip, lsl #17
   11e88:	andeq	fp, r2, r4, lsr lr
   11e8c:	andeq	sl, r1, r4, lsr #9
   11e90:	ldr	r2, [pc, #40]	; 11ec0 <__assert_fail@plt+0x920>
   11e94:	push	{r4, lr}
   11e98:	ldr	r3, [r2]
   11e9c:	add	r3, r3, #5
   11ea0:	cmp	r3, #24
   11ea4:	str	r3, [r2]
   11ea8:	ble	11eb4 <__assert_fail@plt+0x914>
   11eac:	mov	r0, #1
   11eb0:	bl	113d8 <exit@plt>
   11eb4:	mov	r1, #1
   11eb8:	ldr	r0, [pc, #4]	; 11ec4 <__assert_fail@plt+0x924>
   11ebc:	bl	1157c <siglongjmp@plt>
   11ec0:	andeq	fp, r2, r0, lsr lr
   11ec4:	andeq	fp, r2, r8, lsr #25
   11ec8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11ecc:	sub	sp, sp, #32
   11ed0:	ldr	r1, [pc, #536]	; 120f0 <__assert_fail@plt+0xb50>
   11ed4:	str	r0, [sp, #16]
   11ed8:	mov	r0, #14
   11edc:	bl	112c4 <signal@plt>
   11ee0:	bl	12878 <__assert_fail@plt+0x12d8>
   11ee4:	ldr	r3, [pc, #520]	; 120f4 <__assert_fail@plt+0xb54>
   11ee8:	add	r3, r3, #824	; 0x338
   11eec:	str	r3, [sp, #12]
   11ef0:	mov	r3, #1
   11ef4:	str	r3, [sp, #28]
   11ef8:	str	r0, [sp, #24]
   11efc:	ldr	r3, [sp, #16]
   11f00:	add	r1, sp, #24
   11f04:	ldr	r2, [r3, #16]
   11f08:	ldr	r3, [pc, #488]	; 120f8 <__assert_fail@plt+0xb58>
   11f0c:	ldr	r0, [r3]
   11f10:	bl	129ec <__assert_fail@plt+0x144c>
   11f14:	subs	r3, r0, #0
   11f18:	str	r3, [sp, #20]
   11f1c:	blt	120b0 <__assert_fail@plt+0xb10>
   11f20:	ldr	r3, [sp, #28]
   11f24:	ldr	r2, [sp, #24]
   11f28:	rev16	r3, r3
   11f2c:	mov	ip, #0
   11f30:	uxth	r3, r3
   11f34:	strb	r3, [r2, #2]
   11f38:	lsr	r0, r3, #8
   11f3c:	ldr	r3, [pc, #440]	; 120fc <__assert_fail@plt+0xb5c>
   11f40:	mov	r1, #3
   11f44:	strb	r0, [r2, #3]
   11f48:	strb	r1, [r2, #1]
   11f4c:	strb	ip, [r2]
   11f50:	mov	r1, #14
   11f54:	ldr	r0, [pc, #420]	; 12100 <__assert_fail@plt+0xb60>
   11f58:	str	ip, [r3]
   11f5c:	bl	114bc <__sigsetjmp@plt>
   11f60:	mov	r4, #0
   11f64:	mov	r6, #5
   11f68:	ldr	r3, [sp, #20]
   11f6c:	add	r8, r3, #4
   11f70:	ldr	r3, [pc, #380]	; 120f4 <__assert_fail@plt+0xb54>
   11f74:	mov	r9, r8
   11f78:	add	r5, r3, #824	; 0x338
   11f7c:	ldr	r3, [pc, #368]	; 120f4 <__assert_fail@plt+0xb54>
   11f80:	ldr	r2, [pc, #380]	; 12104 <__assert_fail@plt+0xb64>
   11f84:	ldr	r1, [sp, #24]
   11f88:	ldr	r0, [r3, #516]	; 0x204
   11f8c:	ldr	r3, [r3, #648]	; 0x288
   11f90:	stm	sp, {r2, r3}
   11f94:	mov	r3, r4
   11f98:	mov	r2, r9
   11f9c:	bl	11474 <sendto@plt>
   11fa0:	cmp	r0, r8
   11fa4:	bne	120c4 <__assert_fail@plt+0xb24>
   11fa8:	ldr	r3, [sp, #16]
   11fac:	mov	r7, #516	; 0x204
   11fb0:	ldr	r1, [r3, #16]
   11fb4:	ldr	r3, [pc, #316]	; 120f8 <__assert_fail@plt+0xb58>
   11fb8:	ldr	r0, [r3]
   11fbc:	bl	128c8 <__assert_fail@plt+0x1328>
   11fc0:	b	1201c <__assert_fail@plt+0xa7c>
   11fc4:	ldr	ip, [sp, #12]
   11fc8:	ldrb	r0, [ip, #1]
   11fcc:	ldrb	r1, [ip, #3]
   11fd0:	ldrb	r3, [ip]
   11fd4:	ldrb	r2, [ip, #2]
   11fd8:	orr	r3, r3, r0, lsl #8
   11fdc:	orr	r2, r2, r1, lsl #8
   11fe0:	rev16	r3, r3
   11fe4:	rev16	r2, r2
   11fe8:	uxth	r1, r3
   11fec:	uxth	r2, r2
   11ff0:	sxth	r3, r3
   11ff4:	lsr	r0, r1, #8
   11ff8:	strb	r1, [ip]
   11ffc:	cmp	r3, #5
   12000:	lsr	r1, r2, #8
   12004:	strb	r0, [ip, #1]
   12008:	strb	r2, [ip, #2]
   1200c:	strb	r1, [ip, #3]
   12010:	beq	12058 <__assert_fail@plt+0xab8>
   12014:	cmp	r3, #4
   12018:	beq	1206c <__assert_fail@plt+0xacc>
   1201c:	mov	r0, r6
   12020:	bl	112f4 <alarm@plt>
   12024:	mov	r3, r4
   12028:	mov	r2, r7
   1202c:	mov	r1, r5
   12030:	ldr	r0, [r5, #-308]	; 0xfffffecc
   12034:	bl	11570 <recv@plt>
   12038:	mov	sl, r0
   1203c:	mov	r0, r4
   12040:	bl	112f4 <alarm@plt>
   12044:	cmp	sl, #0
   12048:	bge	11fc4 <__assert_fail@plt+0xa24>
   1204c:	ldr	r1, [pc, #180]	; 12108 <__assert_fail@plt+0xb68>
   12050:	mov	r0, #3
   12054:	bl	114d4 <syslog@plt>
   12058:	ldr	r3, [pc, #152]	; 120f8 <__assert_fail@plt+0xb58>
   1205c:	ldr	r0, [r3]
   12060:	bl	1145c <fclose@plt>
   12064:	add	sp, sp, #32
   12068:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1206c:	ldr	r3, [sp, #28]
   12070:	uxth	r3, r3
   12074:	cmp	r3, r2
   12078:	beq	120d4 <__assert_fail@plt+0xb34>
   1207c:	ldr	r3, [pc, #112]	; 120f4 <__assert_fail@plt+0xb54>
   12080:	ldr	r0, [r3, #516]	; 0x204
   12084:	bl	12bd8 <__assert_fail@plt+0x1638>
   12088:	ldr	r2, [sp, #12]
   1208c:	ldr	r3, [sp, #28]
   12090:	ldrb	r1, [r2, #3]
   12094:	ldrb	r2, [r2, #2]
   12098:	sub	r3, r3, #1
   1209c:	orr	r2, r2, r1, lsl #8
   120a0:	uxth	r3, r3
   120a4:	cmp	r2, r3
   120a8:	bne	1201c <__assert_fail@plt+0xa7c>
   120ac:	b	11f7c <__assert_fail@plt+0x9dc>
   120b0:	bl	11408 <__errno_location@plt>
   120b4:	ldr	r0, [r0]
   120b8:	add	r0, r0, #100	; 0x64
   120bc:	bl	11b0c <__assert_fail@plt+0x56c>
   120c0:	b	12058 <__assert_fail@plt+0xab8>
   120c4:	ldr	r1, [pc, #64]	; 1210c <__assert_fail@plt+0xb6c>
   120c8:	mov	r0, #3
   120cc:	bl	114d4 <syslog@plt>
   120d0:	b	12058 <__assert_fail@plt+0xab8>
   120d4:	ldr	r3, [sp, #28]
   120d8:	ldr	r2, [sp, #20]
   120dc:	add	r3, r3, #1
   120e0:	cmp	r2, #512	; 0x200
   120e4:	str	r3, [sp, #28]
   120e8:	bne	12058 <__assert_fail@plt+0xab8>
   120ec:	b	11efc <__assert_fail@plt+0x95c>
   120f0:	muleq	r1, r0, lr
   120f4:	strdeq	fp, [r2], -ip
   120f8:	andeq	fp, r2, r4, lsr lr
   120fc:	andeq	fp, r2, r0, lsr lr
   12100:	andeq	fp, r2, r8, lsr #25
   12104:	andeq	fp, r2, r4, lsl #10
   12108:			; <UNDEFINED> instruction: 0x000198b8
   1210c:	andeq	r9, r1, r4, lsr #17
   12110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12114:	sub	sp, sp, #28
   12118:	ldr	r1, [pc, #784]	; 12430 <__assert_fail@plt+0xe90>
   1211c:	str	r0, [sp, #12]
   12120:	mov	r0, #14
   12124:	bl	112c4 <signal@plt>
   12128:	bl	1282c <__assert_fail@plt+0x128c>
   1212c:	mov	r3, #0
   12130:	str	r3, [sp, #20]
   12134:	str	r0, [sp, #16]
   12138:	ldr	r3, [sp, #20]
   1213c:	ldr	r1, [pc, #752]	; 12434 <__assert_fail@plt+0xe94>
   12140:	mov	r0, #0
   12144:	rev16	r3, r3
   12148:	str	r0, [r1]
   1214c:	ldr	r1, [pc, #740]	; 12438 <__assert_fail@plt+0xe98>
   12150:	uxth	r3, r3
   12154:	ldr	r2, [sp, #20]
   12158:	strb	r3, [r1, #2]
   1215c:	lsr	r3, r3, #8
   12160:	strb	r3, [r1, #3]
   12164:	ldr	r3, [pc, #716]	; 12438 <__assert_fail@plt+0xe98>
   12168:	mov	ip, #4
   1216c:	strb	r0, [r1]
   12170:	add	r2, r2, #1
   12174:	mov	r1, #14
   12178:	ldr	r0, [pc, #700]	; 1243c <__assert_fail@plt+0xe9c>
   1217c:	strb	ip, [r3, #1]
   12180:	str	r2, [sp, #20]
   12184:	bl	114bc <__sigsetjmp@plt>
   12188:	ldr	r3, [pc, #688]	; 12440 <__assert_fail@plt+0xea0>
   1218c:	mov	r9, #4
   12190:	add	r8, r3, #824	; 0x338
   12194:	ldr	r3, [pc, #676]	; 12440 <__assert_fail@plt+0xea0>
   12198:	ldr	r2, [pc, #676]	; 12444 <__assert_fail@plt+0xea4>
   1219c:	mov	r1, r8
   121a0:	ldr	r0, [r3, #516]	; 0x204
   121a4:	ldr	r3, [r3, #648]	; 0x288
   121a8:	stm	sp, {r2, r3}
   121ac:	mov	r3, #0
   121b0:	mov	r2, r9
   121b4:	bl	11474 <sendto@plt>
   121b8:	cmp	r0, #4
   121bc:	bne	122c4 <__assert_fail@plt+0xd24>
   121c0:	ldr	r3, [sp, #12]
   121c4:	mov	r5, #5
   121c8:	ldr	sl, [pc, #624]	; 12440 <__assert_fail@plt+0xea0>
   121cc:	ldr	r1, [r3, #16]
   121d0:	ldr	r3, [pc, #624]	; 12448 <__assert_fail@plt+0xea8>
   121d4:	mov	r4, #516	; 0x204
   121d8:	ldr	r0, [r3]
   121dc:	bl	12a60 <__assert_fail@plt+0x14c0>
   121e0:	b	12240 <__assert_fail@plt+0xca0>
   121e4:	ldr	r1, [sp, #16]
   121e8:	mov	r7, #0
   121ec:	ldrb	ip, [r1, #1]
   121f0:	ldrb	r0, [r1, #3]
   121f4:	ldrb	r3, [r1]
   121f8:	ldrb	r2, [r1, #2]
   121fc:	orr	r3, r3, ip, lsl #8
   12200:	orr	r2, r2, r0, lsl #8
   12204:	rev16	r3, r3
   12208:	rev16	r2, r2
   1220c:	uxth	r0, r3
   12210:	uxth	r2, r2
   12214:	sxth	r3, r3
   12218:	strb	r0, [r1]
   1221c:	lsr	r0, r0, #8
   12220:	strb	r0, [r1, #1]
   12224:	cmp	r3, #5
   12228:	lsr	r0, r2, #8
   1222c:	strb	r2, [r1, #2]
   12230:	strb	r0, [r1, #3]
   12234:	beq	12280 <__assert_fail@plt+0xce0>
   12238:	cmp	r3, #3
   1223c:	beq	12288 <__assert_fail@plt+0xce8>
   12240:	mov	r0, r5
   12244:	bl	112f4 <alarm@plt>
   12248:	ldr	r0, [pc, #496]	; 12440 <__assert_fail@plt+0xea0>
   1224c:	mov	r3, #0
   12250:	mov	r2, r4
   12254:	ldr	r1, [sp, #16]
   12258:	ldr	r0, [r0, #516]	; 0x204
   1225c:	bl	11570 <recv@plt>
   12260:	mov	fp, r0
   12264:	mov	r0, #0
   12268:	bl	112f4 <alarm@plt>
   1226c:	cmp	fp, #0
   12270:	bge	121e4 <__assert_fail@plt+0xc44>
   12274:	ldr	r1, [pc, #464]	; 1244c <__assert_fail@plt+0xeac>
   12278:	mov	r0, #3
   1227c:	bl	114d4 <syslog@plt>
   12280:	add	sp, sp, #28
   12284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12288:	ldr	r1, [sp, #20]
   1228c:	cmp	r2, r1
   12290:	beq	122d4 <__assert_fail@plt+0xd34>
   12294:	ldr	r3, [pc, #420]	; 12440 <__assert_fail@plt+0xea0>
   12298:	ldr	r0, [r3, #516]	; 0x204
   1229c:	bl	12bd8 <__assert_fail@plt+0x1638>
   122a0:	ldr	r1, [sp, #16]
   122a4:	ldr	r3, [sp, #20]
   122a8:	ldrb	r0, [r1, #3]
   122ac:	ldrb	r2, [r1, #2]
   122b0:	sub	r3, r3, #1
   122b4:	orr	r2, r2, r0, lsl #8
   122b8:	cmp	r2, r3
   122bc:	bne	12240 <__assert_fail@plt+0xca0>
   122c0:	b	12194 <__assert_fail@plt+0xbf4>
   122c4:	ldr	r1, [pc, #388]	; 12450 <__assert_fail@plt+0xeb0>
   122c8:	mov	r0, #3
   122cc:	bl	114d4 <syslog@plt>
   122d0:	b	12280 <__assert_fail@plt+0xce0>
   122d4:	mov	r4, r3
   122d8:	ldr	r0, [pc, #360]	; 12448 <__assert_fail@plt+0xea8>
   122dc:	ldr	r3, [sp, #12]
   122e0:	sub	fp, fp, #4
   122e4:	mov	r2, fp
   122e8:	ldr	r3, [r3, #16]
   122ec:	add	r1, sp, #16
   122f0:	ldr	r0, [r0]
   122f4:	bl	12b5c <__assert_fail@plt+0x15bc>
   122f8:	cmp	fp, r0
   122fc:	beq	12314 <__assert_fail@plt+0xd74>
   12300:	cmp	r0, #0
   12304:	blt	1241c <__assert_fail@plt+0xe7c>
   12308:	mov	r0, r4
   1230c:	bl	11b0c <__assert_fail@plt+0x56c>
   12310:	b	12280 <__assert_fail@plt+0xce0>
   12314:	cmp	fp, #512	; 0x200
   12318:	beq	12138 <__assert_fail@plt+0xb98>
   1231c:	ldr	r3, [sp, #12]
   12320:	add	r4, sl, #824	; 0x338
   12324:	add	r5, sl, #520	; 0x208
   12328:	ldr	r1, [r3, #16]
   1232c:	ldr	r3, [pc, #276]	; 12448 <__assert_fail@plt+0xea8>
   12330:	ldr	r0, [r3]
   12334:	bl	12a60 <__assert_fail@plt+0x14c0>
   12338:	ldr	r3, [pc, #264]	; 12448 <__assert_fail@plt+0xea8>
   1233c:	ldr	r0, [r3]
   12340:	bl	1145c <fclose@plt>
   12344:	ldr	r3, [sp, #20]
   12348:	ldr	r2, [sl, #648]	; 0x288
   1234c:	rev16	r3, r3
   12350:	mov	ip, #0
   12354:	uxth	r3, r3
   12358:	str	r2, [sp, #4]
   1235c:	orr	r2, r7, r3, lsr #8
   12360:	orr	r7, r7, #4
   12364:	strb	ip, [sl, #824]	; 0x338
   12368:	strb	r3, [sl, #826]	; 0x33a
   1236c:	str	r5, [sp]
   12370:	mov	r3, #0
   12374:	mov	r1, r4
   12378:	strb	r2, [r4, #3]
   1237c:	ldr	r0, [sl, #516]	; 0x204
   12380:	mov	r2, #4
   12384:	strb	r7, [r4, #1]
   12388:	bl	11474 <sendto@plt>
   1238c:	ldr	r1, [pc, #192]	; 12454 <__assert_fail@plt+0xeb4>
   12390:	mov	r0, #14
   12394:	bl	112c4 <signal@plt>
   12398:	mov	r0, #5
   1239c:	bl	112f4 <alarm@plt>
   123a0:	mov	r3, #0
   123a4:	mov	r2, #516	; 0x204
   123a8:	mov	r1, sl
   123ac:	ldr	r0, [sl, #516]	; 0x204
   123b0:	bl	11570 <recv@plt>
   123b4:	mov	r6, r0
   123b8:	mov	r0, #0
   123bc:	bl	112f4 <alarm@plt>
   123c0:	cmp	r6, #3
   123c4:	ble	12280 <__assert_fail@plt+0xce0>
   123c8:	ldr	r3, [sp, #16]
   123cc:	ldrb	r1, [r3, #1]
   123d0:	ldrb	r2, [r3]
   123d4:	orr	r2, r2, r1, lsl #8
   123d8:	cmp	r2, #3
   123dc:	bne	12280 <__assert_fail@plt+0xce0>
   123e0:	ldrb	r1, [r3, #3]
   123e4:	ldrb	r3, [r3, #2]
   123e8:	ldr	r2, [sp, #20]
   123ec:	orr	r3, r3, r1, lsl #8
   123f0:	cmp	r3, r2
   123f4:	bne	12280 <__assert_fail@plt+0xce0>
   123f8:	ldr	r2, [sl, #648]	; 0x288
   123fc:	ldr	r0, [sl, #516]	; 0x204
   12400:	str	r2, [sp, #4]
   12404:	str	r5, [sp]
   12408:	mov	r3, #0
   1240c:	mov	r1, r4
   12410:	mov	r2, #4
   12414:	bl	11474 <sendto@plt>
   12418:	b	12280 <__assert_fail@plt+0xce0>
   1241c:	bl	11408 <__errno_location@plt>
   12420:	ldr	r0, [r0]
   12424:	add	r0, r0, #100	; 0x64
   12428:	bl	11b0c <__assert_fail@plt+0x56c>
   1242c:	b	12280 <__assert_fail@plt+0xce0>
   12430:	muleq	r1, r0, lr
   12434:	andeq	fp, r2, r0, lsr lr
   12438:	andeq	fp, r2, r4, lsr r6
   1243c:	andeq	fp, r2, r8, lsr #25
   12440:	strdeq	fp, [r2], -ip
   12444:	andeq	fp, r2, r4, lsl #10
   12448:	andeq	fp, r2, r4, lsr lr
   1244c:			; <UNDEFINED> instruction: 0x000198b8
   12450:	andeq	r9, r1, r4, lsr #17
   12454:	andeq	r1, r1, r0, lsl #22
   12458:	sub	r0, r0, #103	; 0x67
   1245c:	push	{r4, r5, r6, lr}
   12460:	mov	r4, r1
   12464:	cmp	r0, #14
   12468:	ldrls	pc, [pc, r0, lsl #2]
   1246c:	b	12540 <__assert_fail@plt+0xfa0>
   12470:	ldrdeq	r2, [r1], -r0
   12474:	andeq	r2, r1, r0, asr #10
   12478:	andeq	r2, r1, r0, asr #10
   1247c:	andeq	r2, r1, r0, asr #10
   12480:	andeq	r2, r1, r0, asr #10
   12484:	strdeq	r2, [r1], -r4
   12488:	andeq	r2, r1, r0, asr #10
   1248c:	andeq	r2, r1, ip, lsl #10
   12490:	andeq	r2, r1, r0, asr #10
   12494:	andeq	r2, r1, r0, asr #10
   12498:	andeq	r2, r1, r0, asr #10
   1249c:	andeq	r2, r1, r0, asr #10
   124a0:	andeq	r2, r1, r4, lsr #10
   124a4:	andeq	r2, r1, r0, asr #10
   124a8:	andeq	r2, r1, ip, lsr #9
   124ac:	ldr	r5, [pc, #148]	; 12548 <__assert_fail@plt+0xfa8>
   124b0:	ldr	r0, [r5, #1356]	; 0x54c
   124b4:	bl	14048 <argp_parse@@Base+0xe98>
   124b8:	mov	r0, r4
   124bc:	bl	14b54 <argp_parse@@Base+0x19a4>
   124c0:	mov	r3, #0
   124c4:	str	r0, [r5, #1356]	; 0x54c
   124c8:	mov	r0, r3
   124cc:	pop	{r4, r5, r6, pc}
   124d0:	ldr	r5, [pc, #112]	; 12548 <__assert_fail@plt+0xfa8>
   124d4:	ldr	r0, [r5, #1344]	; 0x540
   124d8:	bl	14048 <argp_parse@@Base+0xe98>
   124dc:	mov	r0, r4
   124e0:	bl	14b54 <argp_parse@@Base+0x19a4>
   124e4:	mov	r3, #0
   124e8:	str	r0, [r5, #1344]	; 0x540
   124ec:	mov	r0, r3
   124f0:	pop	{r4, r5, r6, pc}
   124f4:	ldr	r2, [pc, #76]	; 12548 <__assert_fail@plt+0xfa8>
   124f8:	mov	r1, #1
   124fc:	mov	r3, #0
   12500:	str	r1, [r2, #1340]	; 0x53c
   12504:	mov	r0, r3
   12508:	pop	{r4, r5, r6, pc}
   1250c:	ldr	r2, [pc, #52]	; 12548 <__assert_fail@plt+0xfa8>
   12510:	mov	r1, #1
   12514:	mov	r3, #0
   12518:	str	r1, [r2, #1348]	; 0x544
   1251c:	mov	r0, r3
   12520:	pop	{r4, r5, r6, pc}
   12524:	mov	r0, r1
   12528:	bl	14b54 <argp_parse@@Base+0x19a4>
   1252c:	ldr	r2, [pc, #20]	; 12548 <__assert_fail@plt+0xfa8>
   12530:	mov	r3, #0
   12534:	str	r0, [r2, #1352]	; 0x548
   12538:	mov	r0, r3
   1253c:	pop	{r4, r5, r6, pc}
   12540:	mov	r3, #7
   12544:	b	124c8 <__assert_fail@plt+0xf28>
   12548:	strdeq	fp, [r2], -ip
   1254c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12550:	sub	sp, sp, #36	; 0x24
   12554:	ldr	r6, [pc, #656]	; 127ec <__assert_fail@plt+0x124c>
   12558:	add	r3, r0, #2
   1255c:	mov	r5, r0
   12560:	add	r2, r0, #3
   12564:	str	r3, [sp, #28]
   12568:	add	r1, r6, r1
   1256c:	mov	r0, #1
   12570:	mov	lr, #0
   12574:	b	12598 <__assert_fail@plt+0xff8>
   12578:	cmp	ip, #0
   1257c:	bne	127a4 <__assert_fail@plt+0x1204>
   12580:	cmp	r0, #0
   12584:	beq	125b4 <__assert_fail@plt+0x1014>
   12588:	mov	r7, r2
   1258c:	mov	r0, lr
   12590:	add	r3, r3, #1
   12594:	add	r2, r2, #1
   12598:	cmp	r1, r3
   1259c:	ldrb	ip, [r3]
   125a0:	bls	12578 <__assert_fail@plt+0xfd8>
   125a4:	cmp	ip, #0
   125a8:	bne	12590 <__assert_fail@plt+0xff0>
   125ac:	cmp	r0, #0
   125b0:	bne	12588 <__assert_fail@plt+0xfe8>
   125b4:	ldrb	r4, [r7]
   125b8:	cmp	r4, #0
   125bc:	beq	12600 <__assert_fail@plt+0x1060>
   125c0:	bl	113cc <__ctype_b_loc@plt>
   125c4:	mov	r8, r7
   125c8:	mov	r9, r0
   125cc:	sxth	r4, r4
   125d0:	ldr	r2, [r9]
   125d4:	lsl	r3, r4, #1
   125d8:	ldrh	r3, [r2, r3]
   125dc:	tst	r3, #256	; 0x100
   125e0:	beq	125f4 <__assert_fail@plt+0x1054>
   125e4:	bl	113a8 <__ctype_tolower_loc@plt>
   125e8:	ldr	r3, [r0]
   125ec:	ldr	r3, [r3, r4, lsl #2]
   125f0:	strb	r3, [r8]
   125f4:	ldrb	r4, [r8, #1]!
   125f8:	cmp	r4, #0
   125fc:	bne	125cc <__assert_fail@plt+0x102c>
   12600:	ldr	r8, [pc, #488]	; 127f0 <__assert_fail@plt+0x1250>
   12604:	ldr	r0, [r8, #72]	; 0x48
   12608:	cmp	r0, #0
   1260c:	addne	r4, r8, #72	; 0x48
   12610:	bne	12624 <__assert_fail@plt+0x1084>
   12614:	b	127a4 <__assert_fail@plt+0x1204>
   12618:	ldr	r0, [r4, #20]!
   1261c:	cmp	r0, #0
   12620:	beq	127a4 <__assert_fail@plt+0x1204>
   12624:	mov	r1, r7
   12628:	bl	11240 <strcmp@plt>
   1262c:	cmp	r0, #0
   12630:	bne	12618 <__assert_fail@plt+0x1078>
   12634:	ldrb	r2, [r5, #1]
   12638:	ldrb	r1, [r5]
   1263c:	ldr	r3, [r4, #4]
   12640:	add	r0, sp, #28
   12644:	orr	r1, r1, r2, lsl #8
   12648:	sxth	r1, r1
   1264c:	blx	r3
   12650:	ldr	r3, [r6, #1340]	; 0x53c
   12654:	cmp	r3, #0
   12658:	mov	r7, r0
   1265c:	beq	12760 <__assert_fail@plt+0x11c0>
   12660:	ldr	r3, [pc, #396]	; 127f4 <__assert_fail@plt+0x1254>
   12664:	ldrh	r3, [r3]
   12668:	cmp	r3, #2
   1266c:	beq	127dc <__assert_fail@plt+0x123c>
   12670:	ldr	r2, [pc, #384]	; 127f8 <__assert_fail@plt+0x1258>
   12674:	cmp	r3, #10
   12678:	ldr	sl, [pc, #380]	; 127fc <__assert_fail@plt+0x125c>
   1267c:	movne	sl, r2
   12680:	ldr	r2, [pc, #376]	; 12800 <__assert_fail@plt+0x1260>
   12684:	mov	r3, #0
   12688:	str	r3, [sp, #8]
   1268c:	str	r3, [sp, #4]
   12690:	str	r3, [sp]
   12694:	sub	r0, r2, #840	; 0x348
   12698:	ldr	r3, [pc, #356]	; 12804 <__assert_fail@plt+0x1264>
   1269c:	ldr	r1, [r6, #648]	; 0x288
   126a0:	bl	11498 <getnameinfo@plt>
   126a4:	cmp	r0, #0
   126a8:	ldreq	fp, [pc, #336]	; 12800 <__assert_fail@plt+0x1260>
   126ac:	beq	126c8 <__assert_fail@plt+0x1128>
   126b0:	bl	112a0 <gai_strerror@plt>
   126b4:	ldr	r1, [pc, #332]	; 12808 <__assert_fail@plt+0x1268>
   126b8:	ldr	fp, [pc, #332]	; 1280c <__assert_fail@plt+0x126c>
   126bc:	mov	r2, r0
   126c0:	mov	r0, #3
   126c4:	bl	114d4 <syslog@plt>
   126c8:	ldrb	r1, [r5, #1]
   126cc:	ldrb	r3, [r5]
   126d0:	ldr	r2, [pc, #312]	; 12810 <__assert_fail@plt+0x1270>
   126d4:	ldr	r9, [pc, #312]	; 12814 <__assert_fail@plt+0x1274>
   126d8:	orr	r3, r3, r1, lsl #8
   126dc:	cmp	r3, #2
   126e0:	moveq	r9, r2
   126e4:	cmp	r7, #0
   126e8:	ldr	r3, [sp, #28]
   126ec:	ldreq	r2, [pc, #292]	; 12818 <__assert_fail@plt+0x1278>
   126f0:	beq	12740 <__assert_fail@plt+0x11a0>
   126f4:	ldr	r2, [r8]
   126f8:	cmp	r2, #0
   126fc:	blt	12724 <__assert_fail@plt+0x1184>
   12700:	cmp	r7, r2
   12704:	ldr	r1, [pc, #228]	; 127f0 <__assert_fail@plt+0x1250>
   12708:	bne	12718 <__assert_fail@plt+0x1178>
   1270c:	b	127e4 <__assert_fail@plt+0x1244>
   12710:	cmp	r7, r2
   12714:	beq	127e4 <__assert_fail@plt+0x1244>
   12718:	ldr	r2, [r1, #8]!
   1271c:	cmp	r2, #0
   12720:	bge	12710 <__assert_fail@plt+0x1170>
   12724:	mov	r2, r7
   12728:	ldr	r1, [pc, #236]	; 1281c <__assert_fail@plt+0x127c>
   1272c:	ldr	r0, [pc, #236]	; 12820 <__assert_fail@plt+0x1280>
   12730:	str	r3, [sp, #20]
   12734:	bl	114ec <sprintf@plt>
   12738:	ldr	r2, [pc, #224]	; 12820 <__assert_fail@plt+0x1280>
   1273c:	ldr	r3, [sp, #20]
   12740:	str	r2, [sp, #8]
   12744:	str	r3, [sp, #4]
   12748:	str	r9, [sp]
   1274c:	mov	r3, sl
   12750:	mov	r2, fp
   12754:	ldr	r1, [pc, #200]	; 12824 <__assert_fail@plt+0x1284>
   12758:	mov	r0, #6
   1275c:	bl	114d4 <syslog@plt>
   12760:	cmp	r7, #0
   12764:	beq	127b4 <__assert_fail@plt+0x1214>
   12768:	ldr	r3, [r6, #1348]	; 0x544
   1276c:	cmp	r3, #0
   12770:	beq	12794 <__assert_fail@plt+0x11f4>
   12774:	ldr	r3, [sp, #28]
   12778:	ldrb	r3, [r3]
   1277c:	subs	r3, r3, #47	; 0x2f
   12780:	movne	r3, #1
   12784:	cmp	r7, #1
   12788:	movne	r3, #0
   1278c:	cmp	r3, #0
   12790:	bne	127d4 <__assert_fail@plt+0x1234>
   12794:	mov	r0, r7
   12798:	bl	11b0c <__assert_fail@plt+0x56c>
   1279c:	mov	r0, #1
   127a0:	bl	113d8 <exit@plt>
   127a4:	mov	r0, #4
   127a8:	bl	11b0c <__assert_fail@plt+0x56c>
   127ac:	mov	r0, #1
   127b0:	bl	113d8 <exit@plt>
   127b4:	ldrb	r2, [r5, #1]
   127b8:	ldrb	r3, [r5]
   127bc:	mov	r0, r4
   127c0:	orr	r3, r3, r2, lsl #8
   127c4:	cmp	r3, #2
   127c8:	ldreq	r3, [r4, #12]
   127cc:	ldrne	r3, [r4, #8]
   127d0:	blx	r3
   127d4:	mov	r0, #0
   127d8:	bl	113d8 <exit@plt>
   127dc:	ldr	sl, [pc, #68]	; 12828 <__assert_fail@plt+0x1288>
   127e0:	b	12680 <__assert_fail@plt+0x10e0>
   127e4:	ldr	r2, [r1, #4]
   127e8:	b	12740 <__assert_fail@plt+0x11a0>
   127ec:	strdeq	fp, [r2], -ip
   127f0:	andeq	fp, r2, r4, asr r1
   127f4:	andeq	fp, r2, r4, lsl #10
   127f8:	ldrdeq	r9, [r1], -ip
   127fc:	ldrdeq	r9, [r1], -r4
   12800:	andeq	fp, r2, ip, asr #16
   12804:	andeq	r0, r0, r1, lsl #8
   12808:	andeq	r9, r1, r0, lsl #18
   1280c:	andeq	r9, r1, r0, ror #17
   12810:	andeq	r9, r1, r8, ror #17
   12814:	strdeq	r9, [r1], -r0
   12818:	strdeq	r9, [r1], -r8
   1281c:	andeq	r9, r1, r4, lsl r9
   12820:	andeq	fp, r2, r0, asr ip
   12824:	andeq	r9, r1, r0, lsr #18
   12828:	andeq	r9, r1, ip, asr #17
   1282c:	push	{r4, lr}
   12830:	mov	r2, #0
   12834:	ldr	r3, [pc, #48]	; 1286c <__assert_fail@plt+0x12cc>
   12838:	ldr	r0, [pc, #48]	; 12870 <__assert_fail@plt+0x12d0>
   1283c:	ldr	lr, [pc, #48]	; 12874 <__assert_fail@plt+0x12d4>
   12840:	mvn	r4, #0
   12844:	mvn	ip, #2
   12848:	mvn	r1, #1
   1284c:	str	ip, [r0]
   12850:	str	r1, [r0, #520]	; 0x208
   12854:	str	r2, [r3]
   12858:	str	r2, [r3, #4]
   1285c:	str	r2, [r3, #8]
   12860:	str	r4, [lr]
   12864:	add	r0, r0, #4
   12868:	pop	{r4, pc}
   1286c:	andeq	fp, r2, r4, ror #24
   12870:	andeq	fp, r2, r8, lsr lr
   12874:	andeq	fp, r2, r4, lsr #5
   12878:	push	{r4, r5, lr}
   1287c:	mov	r2, #0
   12880:	ldr	r3, [pc, #52]	; 128bc <__assert_fail@plt+0x131c>
   12884:	ldr	r0, [pc, #52]	; 128c0 <__assert_fail@plt+0x1320>
   12888:	ldr	lr, [pc, #52]	; 128c4 <__assert_fail@plt+0x1324>
   1288c:	mov	r5, #1
   12890:	mvn	r4, #0
   12894:	mvn	ip, #2
   12898:	mvn	r1, #1
   1289c:	str	ip, [r0]
   128a0:	str	r1, [r0, #520]	; 0x208
   128a4:	str	r5, [r3, #8]
   128a8:	str	r2, [r3]
   128ac:	str	r2, [r3, #4]
   128b0:	str	r4, [lr]
   128b4:	add	r0, r0, #4
   128b8:	pop	{r4, r5, pc}
   128bc:	andeq	fp, r2, r4, ror #24
   128c0:	andeq	fp, r2, r8, lsr lr
   128c4:	andeq	fp, r2, r4, lsr #5
   128c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128cc:	sub	sp, sp, #20
   128d0:	ldr	r5, [pc, #264]	; 129e0 <__assert_fail@plt+0x1440>
   128d4:	ldr	sl, [pc, #264]	; 129e4 <__assert_fail@plt+0x1444>
   128d8:	ldr	r3, [r5, #8]
   128dc:	str	r3, [sp, #4]
   128e0:	lsl	r2, r3, #6
   128e4:	add	r4, r2, r3
   128e8:	str	r2, [sp, #8]
   128ec:	lsl	r4, r4, #3
   128f0:	ldr	r3, [sl, r4]
   128f4:	cmn	r3, #2
   128f8:	beq	12904 <__assert_fail@plt+0x1364>
   128fc:	add	sp, sp, #20
   12900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12904:	cmp	r1, #0
   12908:	ldr	r3, [sp, #4]
   1290c:	add	r1, r4, #4
   12910:	clz	r3, r3
   12914:	lsr	r3, r3, #5
   12918:	str	r3, [r5, #8]
   1291c:	add	r9, sl, r1
   12920:	beq	129c8 <__assert_fail@plt+0x1428>
   12924:	add	r3, r9, #4
   12928:	mov	r6, r0
   1292c:	str	r3, [sp, #12]
   12930:	ldr	r8, [pc, #176]	; 129e8 <__assert_fail@plt+0x1448>
   12934:	add	r9, r9, #516	; 0x204
   12938:	mov	r4, r3
   1293c:	mov	r7, #13
   12940:	mov	fp, #0
   12944:	b	12968 <__assert_fail@plt+0x13c8>
   12948:	ldr	r3, [r8]
   1294c:	str	fp, [r5]
   12950:	cmp	r3, #10
   12954:	moveq	r3, #10
   12958:	movne	r3, #0
   1295c:	strb	r3, [r4], #1
   12960:	cmp	r9, r4
   12964:	beq	129ac <__assert_fail@plt+0x140c>
   12968:	ldr	r3, [r5]
   1296c:	cmp	r3, #0
   12970:	bne	12948 <__assert_fail@plt+0x13a8>
   12974:	mov	r0, r6
   12978:	bl	11564 <getc@plt>
   1297c:	mov	r3, r7
   12980:	cmn	r0, #1
   12984:	beq	129ac <__assert_fail@plt+0x140c>
   12988:	cmp	r0, #13
   1298c:	cmpne	r0, #10
   12990:	uxtbne	r3, r0
   12994:	moveq	r2, #1
   12998:	streq	r0, [r8]
   1299c:	streq	r2, [r5]
   129a0:	strb	r3, [r4], #1
   129a4:	cmp	r9, r4
   129a8:	bne	12968 <__assert_fail@plt+0x13c8>
   129ac:	ldmib	sp, {r2, r3}
   129b0:	add	r8, r3, r2
   129b4:	ldr	r3, [sp, #12]
   129b8:	sub	r4, r4, r3
   129bc:	str	r4, [sl, r8, lsl #3]
   129c0:	add	sp, sp, #20
   129c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129c8:	bl	11444 <fileno@plt>
   129cc:	add	r1, r9, #4
   129d0:	mov	r2, #512	; 0x200
   129d4:	bl	11264 <read@plt>
   129d8:	str	r0, [sl, r4]
   129dc:	b	128fc <__assert_fail@plt+0x135c>
   129e0:	andeq	fp, r2, r4, ror #24
   129e4:	andeq	fp, r2, r8, lsr lr
   129e8:	andeq	fp, r2, r4, lsr #5
   129ec:	ldr	ip, [pc, #100]	; 12a58 <__assert_fail@plt+0x14b8>
   129f0:	push	{r4, r5, r6, r7, r8, lr}
   129f4:	mvn	lr, #1
   129f8:	ldr	r3, [ip, #4]
   129fc:	clz	r5, r3
   12a00:	lsr	r5, r5, #5
   12a04:	ldr	r4, [pc, #80]	; 12a5c <__assert_fail@plt+0x14bc>
   12a08:	lsl	r6, r5, #6
   12a0c:	add	r7, r6, r5
   12a10:	add	r3, r3, r3, lsl #6
   12a14:	lsl	r7, r7, #3
   12a18:	str	lr, [r4, r3, lsl #3]
   12a1c:	ldr	r3, [r4, r7]
   12a20:	mov	r8, r1
   12a24:	cmp	r3, lr
   12a28:	str	r5, [ip, #4]
   12a2c:	beq	12a48 <__assert_fail@plt+0x14a8>
   12a30:	add	r5, r6, r5
   12a34:	mov	r0, r3
   12a38:	add	r4, r4, r5, lsl #3
   12a3c:	add	r4, r4, #4
   12a40:	str	r4, [r8]
   12a44:	pop	{r4, r5, r6, r7, r8, pc}
   12a48:	mov	r1, r2
   12a4c:	bl	128c8 <__assert_fail@plt+0x1328>
   12a50:	ldr	r3, [r4, r7]
   12a54:	b	12a30 <__assert_fail@plt+0x1490>
   12a58:	andeq	fp, r2, r4, ror #24
   12a5c:	andeq	fp, r2, r8, lsr lr
   12a60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12a64:	sub	sp, sp, #8
   12a68:	ldr	lr, [pc, #224]	; 12b50 <__assert_fail@plt+0x15b0>
   12a6c:	ldr	ip, [pc, #224]	; 12b54 <__assert_fail@plt+0x15b4>
   12a70:	ldr	r3, [lr, #8]
   12a74:	add	r2, r3, r3, lsl #6
   12a78:	lsl	r2, r2, #3
   12a7c:	ldr	r9, [ip, r2]
   12a80:	cmn	r9, #1
   12a84:	blt	12b20 <__assert_fail@plt+0x1580>
   12a88:	clz	r3, r3
   12a8c:	mvn	r4, #1
   12a90:	lsr	r3, r3, #5
   12a94:	add	r5, ip, r2
   12a98:	cmp	r9, #0
   12a9c:	str	r3, [lr, #8]
   12aa0:	str	r4, [ip, r2]
   12aa4:	add	r5, r5, #8
   12aa8:	ble	12b48 <__assert_fail@plt+0x15a8>
   12aac:	cmp	r1, #0
   12ab0:	beq	12b30 <__assert_fail@plt+0x1590>
   12ab4:	ldr	r7, [pc, #156]	; 12b58 <__assert_fail@plt+0x15b8>
   12ab8:	mov	r6, r0
   12abc:	add	r8, r5, r9
   12ac0:	ldr	r4, [r7]
   12ac4:	mov	sl, #1
   12ac8:	cmp	r4, #13
   12acc:	ldrb	r4, [r5], #1
   12ad0:	bne	12ae4 <__assert_fail@plt+0x1544>
   12ad4:	cmp	r4, #10
   12ad8:	beq	12b08 <__assert_fail@plt+0x1568>
   12adc:	cmp	r4, #0
   12ae0:	beq	12af0 <__assert_fail@plt+0x1550>
   12ae4:	mov	r1, r6
   12ae8:	mov	r0, r4
   12aec:	bl	11504 <putc@plt>
   12af0:	cmp	r5, r8
   12af4:	str	r4, [r7]
   12af8:	bne	12ac8 <__assert_fail@plt+0x1528>
   12afc:	mov	r0, r9
   12b00:	add	sp, sp, #8
   12b04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b08:	str	sl, [sp]
   12b0c:	mvn	r2, #0
   12b10:	mvn	r3, #0
   12b14:	mov	r0, r6
   12b18:	bl	11468 <fseeko64@plt>
   12b1c:	b	12ae4 <__assert_fail@plt+0x1544>
   12b20:	mov	r9, #0
   12b24:	mov	r0, r9
   12b28:	add	sp, sp, #8
   12b2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b30:	bl	11444 <fileno@plt>
   12b34:	mov	r2, r9
   12b38:	mov	r1, r5
   12b3c:	add	sp, sp, #8
   12b40:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b44:	b	11438 <write@plt>
   12b48:	mvn	r9, #0
   12b4c:	b	12afc <__assert_fail@plt+0x155c>
   12b50:	andeq	fp, r2, r4, ror #24
   12b54:	andeq	fp, r2, r8, lsr lr
   12b58:	andeq	fp, r2, r4, lsr #5
   12b5c:	push	{r4, r5, r6, r7, r8, lr}
   12b60:	mov	r6, r2
   12b64:	ldr	r7, [pc, #100]	; 12bd0 <__assert_fail@plt+0x1630>
   12b68:	ldr	r5, [pc, #100]	; 12bd4 <__assert_fail@plt+0x1634>
   12b6c:	ldr	ip, [r7, #4]
   12b70:	clz	lr, ip
   12b74:	lsr	lr, lr, #5
   12b78:	add	r4, ip, ip, lsl #6
   12b7c:	lsl	ip, lr, #6
   12b80:	add	r2, ip, lr
   12b84:	str	r6, [r5, r4, lsl #3]
   12b88:	ldr	r2, [r5, r2, lsl #3]
   12b8c:	mov	r4, r1
   12b90:	cmn	r2, #2
   12b94:	str	lr, [r7, #4]
   12b98:	beq	12bac <__assert_fail@plt+0x160c>
   12b9c:	mov	r1, r3
   12ba0:	bl	12a60 <__assert_fail@plt+0x14c0>
   12ba4:	ldr	lr, [r7, #4]
   12ba8:	lsl	ip, lr, #6
   12bac:	add	ip, ip, lr
   12bb0:	mvn	r2, #2
   12bb4:	lsl	ip, ip, #3
   12bb8:	add	r3, ip, #4
   12bbc:	add	r3, r5, r3
   12bc0:	str	r2, [r5, ip]
   12bc4:	mov	r0, r6
   12bc8:	str	r3, [r4]
   12bcc:	pop	{r4, r5, r6, r7, r8, pc}
   12bd0:	andeq	fp, r2, r4, ror #24
   12bd4:	andeq	fp, r2, r8, lsr lr
   12bd8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12bdc:	mov	r4, #0
   12be0:	sub	sp, sp, #664	; 0x298
   12be4:	ldr	r7, [pc, #96]	; 12c4c <__assert_fail@plt+0x16ac>
   12be8:	mov	r5, r0
   12bec:	mov	r6, r4
   12bf0:	mov	sl, #128	; 0x80
   12bf4:	add	r9, sp, #20
   12bf8:	add	r8, sp, #16
   12bfc:	b	12c14 <__assert_fail@plt+0x1674>
   12c00:	str	r8, [sp, #4]
   12c04:	str	r9, [sp]
   12c08:	add	r4, r4, #1
   12c0c:	str	sl, [sp, #16]
   12c10:	bl	112e8 <recvfrom@plt>
   12c14:	add	r2, sp, #12
   12c18:	mov	r1, r7
   12c1c:	mov	r0, r5
   12c20:	bl	14150 <argp_parse@@Base+0xfa0>
   12c24:	ldr	r2, [sp, #12]
   12c28:	mov	r3, r6
   12c2c:	cmp	r2, #0
   12c30:	add	r1, sp, #148	; 0x94
   12c34:	mov	r2, #516	; 0x204
   12c38:	mov	r0, r5
   12c3c:	bne	12c00 <__assert_fail@plt+0x1660>
   12c40:	mov	r0, r4
   12c44:	add	sp, sp, #664	; 0x298
   12c48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c4c:	andeq	r5, r0, fp, lsl r4
   12c50:	ldr	r3, [r0]
   12c54:	push	{r4, r5, r6, lr}
   12c58:	cmp	r3, #0
   12c5c:	ldr	r5, [r0, #16]
   12c60:	beq	12cc8 <__assert_fail@plt+0x1728>
   12c64:	ldr	r0, [r1, #8]
   12c68:	mov	r2, #0
   12c6c:	add	r0, r0, #1
   12c70:	str	r0, [r1, #8]
   12c74:	b	12c7c <__assert_fail@plt+0x16dc>
   12c78:	add	r2, r2, #1
   12c7c:	add	r3, r3, #24
   12c80:	ldr	r0, [r3, #-20]	; 0xffffffec
   12c84:	cmp	r0, #0
   12c88:	bne	12c78 <__assert_fail@plt+0x16d8>
   12c8c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12c90:	cmp	r0, #0
   12c94:	bne	12c78 <__assert_fail@plt+0x16d8>
   12c98:	ldr	r0, [r3, #-8]
   12c9c:	cmp	r0, #0
   12ca0:	bne	12c78 <__assert_fail@plt+0x16d8>
   12ca4:	ldr	r0, [r3, #-4]
   12ca8:	cmp	r0, #0
   12cac:	bne	12c78 <__assert_fail@plt+0x16d8>
   12cb0:	ldm	r1, {r0, r3}
   12cb4:	add	ip, r2, r2, lsl #1
   12cb8:	add	r0, r0, ip
   12cbc:	add	r2, r3, r2
   12cc0:	stm	r1, {r0, r2}
   12cc4:	b	12cdc <__assert_fail@plt+0x173c>
   12cc8:	ldr	r3, [r0, #4]
   12ccc:	cmp	r3, #0
   12cd0:	ldrne	r3, [r1, #8]
   12cd4:	addne	r3, r3, #1
   12cd8:	strne	r3, [r1, #8]
   12cdc:	cmp	r5, #0
   12ce0:	popeq	{r4, r5, r6, pc}
   12ce4:	ldr	r0, [r5]
   12ce8:	cmp	r0, #0
   12cec:	popeq	{r4, r5, r6, pc}
   12cf0:	mov	r4, r1
   12cf4:	mov	r1, r4
   12cf8:	bl	12c50 <__assert_fail@plt+0x16b0>
   12cfc:	ldr	r3, [r4, #12]
   12d00:	ldr	r0, [r5, #16]!
   12d04:	add	r3, r3, #1
   12d08:	cmp	r0, #0
   12d0c:	str	r3, [r4, #12]
   12d10:	bne	12cf4 <__assert_fail@plt+0x1754>
   12d14:	pop	{r4, r5, r6, pc}
   12d18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d1c:	sub	sp, sp, #36	; 0x24
   12d20:	ldr	sl, [r0]
   12d24:	str	r0, [sp, #12]
   12d28:	cmp	sl, #0
   12d2c:	str	r1, [sp, #16]
   12d30:	str	r2, [sp, #20]
   12d34:	mov	r9, r3
   12d38:	ldr	r8, [r0, #16]
   12d3c:	ldr	r7, [sp, #72]	; 0x48
   12d40:	beq	12f0c <__assert_fail@plt+0x196c>
   12d44:	add	fp, sl, #24
   12d48:	str	r8, [sp, #28]
   12d4c:	str	r3, [sp, #24]
   12d50:	ldr	r4, [fp, #-20]	; 0xffffffec
   12d54:	sub	r1, fp, #24
   12d58:	cmp	r4, #0
   12d5c:	bne	12d6c <__assert_fail@plt+0x17cc>
   12d60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12d64:	cmp	r3, #0
   12d68:	beq	12ee0 <__assert_fail@plt+0x1940>
   12d6c:	ldr	r3, [fp, #-12]
   12d70:	tst	r3, #4
   12d74:	moveq	sl, r1
   12d78:	moveq	r5, r3
   12d7c:	ldrne	r5, [sl, #12]
   12d80:	ands	r5, r5, #8
   12d84:	bne	12ec8 <__assert_fail@plt+0x1928>
   12d88:	tst	r3, #8
   12d8c:	bne	12e08 <__assert_fail@plt+0x1868>
   12d90:	sub	r3, r4, #1
   12d94:	cmp	r3, #254	; 0xfe
   12d98:	bhi	12e08 <__assert_fail@plt+0x1868>
   12d9c:	bl	113cc <__ctype_b_loc@plt>
   12da0:	lsl	r3, r4, #1
   12da4:	ldr	r1, [r0]
   12da8:	ldrh	r3, [r1, r3]
   12dac:	tst	r3, #16384	; 0x4000
   12db0:	beq	12e08 <__assert_fail@plt+0x1868>
   12db4:	ldr	r3, [r7, #4]
   12db8:	add	r1, r3, #1
   12dbc:	str	r1, [r7, #4]
   12dc0:	strb	r4, [r3]
   12dc4:	ldr	r3, [sl, #8]
   12dc8:	cmp	r3, #0
   12dcc:	beq	12dfc <__assert_fail@plt+0x185c>
   12dd0:	ldr	r3, [r7, #4]
   12dd4:	mov	r2, #58	; 0x3a
   12dd8:	add	r1, r3, #1
   12ddc:	str	r1, [r7, #4]
   12de0:	strb	r2, [r3]
   12de4:	ldr	r3, [sl, #12]
   12de8:	tst	r3, #1
   12dec:	ldrne	r3, [r7, #4]
   12df0:	addne	r1, r3, #1
   12df4:	strne	r1, [r7, #4]
   12df8:	strbne	r2, [r3]
   12dfc:	ldr	r3, [r7, #4]
   12e00:	mov	r2, #0
   12e04:	strb	r2, [r3]
   12e08:	ldr	r4, [fp, #-24]	; 0xffffffe8
   12e0c:	cmp	r4, #0
   12e10:	beq	12ec8 <__assert_fail@plt+0x1928>
   12e14:	ldr	r8, [r7]
   12e18:	ldr	r6, [r8, #8]
   12e1c:	ldr	r0, [r6]
   12e20:	cmp	r0, #0
   12e24:	beq	12e48 <__assert_fail@plt+0x18a8>
   12e28:	mov	r9, r6
   12e2c:	mov	r1, r4
   12e30:	bl	11240 <strcmp@plt>
   12e34:	cmp	r0, #0
   12e38:	beq	12ed0 <__assert_fail@plt+0x1930>
   12e3c:	ldr	r0, [r9, #16]!
   12e40:	cmp	r0, #0
   12e44:	bne	12e2c <__assert_fail@plt+0x188c>
   12e48:	ldr	r3, [sl, #8]
   12e4c:	ldr	r1, [r7, #8]
   12e50:	cmp	r3, #0
   12e54:	str	r4, [r1]
   12e58:	beq	12e6c <__assert_fail@plt+0x18cc>
   12e5c:	ldr	r3, [sl, #12]
   12e60:	tst	r3, #1
   12e64:	moveq	r5, #1
   12e68:	movne	r5, #2
   12e6c:	str	r5, [r1, #4]
   12e70:	ldr	ip, [fp, #-20]	; 0xffffffec
   12e74:	mov	r3, #0
   12e78:	cmp	ip, r3
   12e7c:	str	r3, [r1, #8]
   12e80:	ldr	r2, [sp, #24]
   12e84:	ldr	r3, [r8, #48]	; 0x30
   12e88:	ldreq	ip, [sl, #4]
   12e8c:	sub	r3, r2, r3
   12e90:	bic	ip, ip, #-16777216	; 0xff000000
   12e94:	asr	r3, r3, #2
   12e98:	add	lr, r1, #16
   12e9c:	rsb	r0, r3, r3, lsl #3
   12ea0:	add	r0, r0, r0, lsl #6
   12ea4:	add	r0, r3, r0, lsl #3
   12ea8:	rsb	r0, r0, r0, lsl #15
   12eac:	add	r3, r3, r0, lsl #3
   12eb0:	add	r3, r3, #1
   12eb4:	add	r3, ip, r3, lsl #24
   12eb8:	str	r3, [r1, #12]
   12ebc:	mov	r3, #0
   12ec0:	str	lr, [r7, #8]
   12ec4:	str	r3, [r1, #16]
   12ec8:	add	fp, fp, #24
   12ecc:	b	12d50 <__assert_fail@plt+0x17b0>
   12ed0:	sub	r6, r9, r6
   12ed4:	cmn	r6, #15
   12ed8:	bge	12ec8 <__assert_fail@plt+0x1928>
   12edc:	b	12e48 <__assert_fail@plt+0x18a8>
   12ee0:	ldr	r3, [fp, #-8]
   12ee4:	cmp	r3, #0
   12ee8:	bne	12d6c <__assert_fail@plt+0x17cc>
   12eec:	ldr	r3, [fp, #-4]
   12ef0:	cmp	r3, #0
   12ef4:	bne	12d6c <__assert_fail@plt+0x17cc>
   12ef8:	ldr	r3, [sp, #12]
   12efc:	ldr	r8, [sp, #28]
   12f00:	ldr	r9, [sp, #24]
   12f04:	ldr	r3, [r3, #4]
   12f08:	b	12f24 <__assert_fail@plt+0x1984>
   12f0c:	ldr	r3, [sp, #12]
   12f10:	ldr	r3, [r3, #4]
   12f14:	cmp	r3, #0
   12f18:	moveq	r0, r9
   12f1c:	moveq	r9, r3
   12f20:	beq	12f94 <__assert_fail@plt+0x19f4>
   12f24:	ldr	r2, [r7, #4]
   12f28:	ldr	r1, [sp, #12]
   12f2c:	str	r3, [r9]
   12f30:	cmp	r8, #0
   12f34:	stmib	r9, {r1, r2}
   12f38:	ldr	r2, [sp, #16]
   12f3c:	mov	r3, #0
   12f40:	str	r2, [r9, #16]
   12f44:	ldr	r2, [sp, #20]
   12f48:	str	r3, [r9, #12]
   12f4c:	str	r2, [r9, #20]
   12f50:	str	r3, [r9, #24]
   12f54:	str	r3, [r9, #32]
   12f58:	str	r3, [r9, #28]
   12f5c:	beq	12f90 <__assert_fail@plt+0x19f0>
   12f60:	ldr	r2, [r8]
   12f64:	cmp	r2, r3
   12f68:	beq	12fdc <__assert_fail@plt+0x1a3c>
   12f6c:	add	r3, r3, #1
   12f70:	ldr	r2, [r8, r3, lsl #4]
   12f74:	cmp	r2, #0
   12f78:	bne	12f6c <__assert_fail@plt+0x19cc>
   12f7c:	lsl	r3, r3, #2
   12f80:	ldr	r2, [r7, #12]
   12f84:	add	r3, r2, r3
   12f88:	str	r2, [r9, #28]
   12f8c:	str	r3, [r7, #12]
   12f90:	add	r0, r9, #36	; 0x24
   12f94:	cmp	r8, #0
   12f98:	beq	12fd4 <__assert_fail@plt+0x1a34>
   12f9c:	ldr	r1, [r8]
   12fa0:	cmp	r1, #0
   12fa4:	beq	12fd4 <__assert_fail@plt+0x1a34>
   12fa8:	mov	r2, #0
   12fac:	add	r4, r2, #1
   12fb0:	mov	r3, r0
   12fb4:	str	r7, [sp]
   12fb8:	mov	r0, r1
   12fbc:	mov	r1, r9
   12fc0:	bl	12d18 <__assert_fail@plt+0x1778>
   12fc4:	ldr	r1, [r8, r4, lsl #4]
   12fc8:	mov	r2, r4
   12fcc:	cmp	r1, #0
   12fd0:	bne	12fac <__assert_fail@plt+0x1a0c>
   12fd4:	add	sp, sp, #36	; 0x24
   12fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fdc:	mov	r3, r2
   12fe0:	b	12f80 <__assert_fail@plt+0x19e0>
   12fe4:	cmp	r0, #86	; 0x56
   12fe8:	beq	12ff4 <__assert_fail@plt+0x1a54>
   12fec:	mov	r0, #7
   12ff0:	bx	lr
   12ff4:	ldr	r3, [pc, #104]	; 13064 <__assert_fail@plt+0x1ac4>
   12ff8:	push	{r4, lr}
   12ffc:	mov	r4, r2
   13000:	ldr	r3, [r3]
   13004:	cmp	r3, #0
   13008:	beq	1302c <__assert_fail@plt+0x1a8c>
   1300c:	mov	r1, r2
   13010:	ldr	r0, [r2, #48]	; 0x30
   13014:	blx	r3
   13018:	ldr	r0, [r4, #16]
   1301c:	ands	r0, r0, #32
   13020:	beq	13060 <__assert_fail@plt+0x1ac0>
   13024:	mov	r0, #0
   13028:	pop	{r4, pc}
   1302c:	ldr	r3, [pc, #52]	; 13068 <__assert_fail@plt+0x1ac8>
   13030:	ldr	r2, [r3]
   13034:	cmp	r2, #0
   13038:	beq	1304c <__assert_fail@plt+0x1aac>
   1303c:	ldr	r1, [pc, #40]	; 1306c <__assert_fail@plt+0x1acc>
   13040:	ldr	r0, [r4, #48]	; 0x30
   13044:	bl	113fc <fprintf@plt>
   13048:	b	13018 <__assert_fail@plt+0x1a78>
   1304c:	ldr	r2, [pc, #28]	; 13070 <__assert_fail@plt+0x1ad0>
   13050:	ldr	r1, [pc, #28]	; 13074 <__assert_fail@plt+0x1ad4>
   13054:	mov	r0, r4
   13058:	bl	17e68 <argp_error@@Base>
   1305c:	b	13018 <__assert_fail@plt+0x1a78>
   13060:	bl	113d8 <exit@plt>
   13064:	andeq	fp, r2, r4, ror ip
   13068:	andeq	ip, r2, ip, asr #4
   1306c:	andeq	r9, r1, r8, lsl pc
   13070:	andeq	r9, r1, ip, ror sp
   13074:	andeq	r9, r1, ip, lsr r9
   13078:	cmn	r0, #3
   1307c:	push	{r4, r5, lr}
   13080:	mov	r4, r2
   13084:	sub	sp, sp, #12
   13088:	beq	1316c <__assert_fail@plt+0x1bcc>
   1308c:	ble	130fc <__assert_fail@plt+0x1b5c>
   13090:	cmn	r0, #2
   13094:	beq	130bc <__assert_fail@plt+0x1b1c>
   13098:	cmp	r0, #63	; 0x3f
   1309c:	bne	13160 <__assert_fail@plt+0x1bc0>
   130a0:	mov	r0, r4
   130a4:	ldr	r2, [pc, #236]	; 13198 <__assert_fail@plt+0x1bf8>
   130a8:	ldr	r1, [r4, #48]	; 0x30
   130ac:	bl	17db8 <argp_state_help@@Base>
   130b0:	mov	r0, #0
   130b4:	add	sp, sp, #12
   130b8:	pop	{r4, r5, pc}
   130bc:	ldr	r3, [pc, #216]	; 1319c <__assert_fail@plt+0x1bfc>
   130c0:	mov	r0, r1
   130c4:	str	r1, [sp, #4]
   130c8:	str	r1, [r3]
   130cc:	bl	13f9c <argp_parse@@Base+0xdec>
   130d0:	ldr	r3, [r4, #16]
   130d4:	ldr	r2, [pc, #196]	; 131a0 <__assert_fail@plt+0x1c00>
   130d8:	and	r3, r3, #3
   130dc:	cmp	r3, #1
   130e0:	ldr	r1, [sp, #4]
   130e4:	str	r0, [r4, #40]	; 0x28
   130e8:	str	r0, [r2]
   130ec:	beq	13188 <__assert_fail@plt+0x1be8>
   130f0:	mov	r0, #0
   130f4:	add	sp, sp, #12
   130f8:	pop	{r4, r5, pc}
   130fc:	cmn	r0, #4
   13100:	bne	13160 <__assert_fail@plt+0x1bc0>
   13104:	cmp	r1, #0
   13108:	ldr	r0, [pc, #148]	; 131a4 <__assert_fail@plt+0x1c04>
   1310c:	mov	r2, #10
   13110:	movne	r0, r1
   13114:	mov	r1, #0
   13118:	bl	1124c <strtol@plt>
   1311c:	ldr	r4, [pc, #132]	; 131a8 <__assert_fail@plt+0x1c08>
   13120:	str	r0, [r4]
   13124:	ldr	r3, [r4]
   13128:	cmp	r3, #0
   1312c:	sub	r3, r3, #1
   13130:	str	r3, [r4]
   13134:	ble	130f0 <__assert_fail@plt+0x1b50>
   13138:	mov	r5, #1
   1313c:	mov	r0, r5
   13140:	bl	112dc <sleep@plt>
   13144:	ldr	r3, [r4]
   13148:	cmp	r3, #0
   1314c:	sub	r3, r3, #1
   13150:	str	r3, [r4]
   13154:	bgt	1313c <__assert_fail@plt+0x1b9c>
   13158:	mov	r0, #0
   1315c:	b	130f4 <__assert_fail@plt+0x1b54>
   13160:	mov	r0, #7
   13164:	add	sp, sp, #12
   13168:	pop	{r4, r5, pc}
   1316c:	mov	r0, r4
   13170:	ldr	r2, [pc, #52]	; 131ac <__assert_fail@plt+0x1c0c>
   13174:	ldr	r1, [r4, #48]	; 0x30
   13178:	bl	17db8 <argp_state_help@@Base>
   1317c:	mov	r0, #0
   13180:	add	sp, sp, #12
   13184:	pop	{r4, r5, pc}
   13188:	ldr	r3, [r4, #8]
   1318c:	mov	r0, #0
   13190:	str	r1, [r3]
   13194:	b	130b4 <__assert_fail@plt+0x1b14>
   13198:	andeq	r0, r0, sl, ror r2
   1319c:	andeq	fp, r2, ip, ror #5
   131a0:	andeq	fp, r2, r8, ror #5
   131a4:	andeq	r9, r1, r0, lsr #27
   131a8:	andeq	fp, r2, r0, ror ip
   131ac:	andeq	r0, r0, r1, lsl #4

000131b0 <argp_parse@@Base>:
   131b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131b4:	add	fp, sp, #32
   131b8:	tst	r3, #1
   131bc:	sub	sp, sp, #228	; 0xe4
   131c0:	mov	r6, r3
   131c4:	mov	r7, r0
   131c8:	str	r1, [fp, #-240]	; 0xffffff10
   131cc:	str	r2, [fp, #-232]	; 0xffffff18
   131d0:	bne	131fc <argp_parse@@Base+0x4c>
   131d4:	ldr	r3, [pc, #3260]	; 13e98 <argp_parse@@Base+0xce8>
   131d8:	ldr	r4, [pc, #3260]	; 13e9c <argp_parse@@Base+0xcec>
   131dc:	ldr	r2, [r3]
   131e0:	cmp	r2, #0
   131e4:	ldreq	r2, [fp, #-232]	; 0xffffff18
   131e8:	ldreq	r2, [r2]
   131ec:	streq	r2, [r3]
   131f0:	ldr	r3, [r4]
   131f4:	cmp	r3, #0
   131f8:	beq	1389c <argp_parse@@Base+0x6ec>
   131fc:	ands	r3, r6, #16
   13200:	beq	137a4 <argp_parse@@Base+0x5f4>
   13204:	sub	r4, fp, #196	; 0xc4
   13208:	mov	r0, r4
   1320c:	mov	r2, #36	; 0x24
   13210:	mov	r1, #0
   13214:	bl	1142c <memset@plt>
   13218:	ands	r3, r6, #4
   1321c:	str	r3, [fp, #-244]	; 0xffffff0c
   13220:	mov	r3, #0
   13224:	moveq	r0, #1
   13228:	movne	r0, #0
   1322c:	cmp	r7, r3
   13230:	str	r3, [fp, #-224]	; 0xffffff20
   13234:	str	r3, [fp, #-220]	; 0xffffff24
   13238:	str	r3, [fp, #-216]	; 0xffffff28
   1323c:	str	r0, [fp, #-228]	; 0xffffff1c
   13240:	beq	136a8 <argp_parse@@Base+0x4f8>
   13244:	mov	r0, r7
   13248:	sub	r1, fp, #228	; 0xe4
   1324c:	bl	12c50 <__assert_fail@plt+0x16b0>
   13250:	ldr	r5, [fp, #-220]	; 0xffffff24
   13254:	ldr	r9, [fp, #-216]	; 0xffffff28
   13258:	add	r5, r5, #1
   1325c:	ldr	r3, [fp, #-224]	; 0xffffff20
   13260:	add	r5, r5, r5, lsl #3
   13264:	lsl	r2, r9, #2
   13268:	lsl	r5, r5, #2
   1326c:	add	r3, r3, #1
   13270:	add	sl, r2, r5
   13274:	ldr	r0, [fp, #-228]	; 0xffffff1c
   13278:	add	r9, sl, r3, lsl #4
   1327c:	str	r2, [fp, #-236]	; 0xffffff14
   13280:	add	r0, r9, r0
   13284:	add	r0, r0, #1
   13288:	bl	14be4 <argp_parse@@Base+0x1a34>
   1328c:	cmp	r0, #0
   13290:	mov	r8, r0
   13294:	str	r0, [fp, #-40]	; 0xffffffd8
   13298:	moveq	r5, #12
   1329c:	beq	1369c <argp_parse@@Base+0x4ec>
   132a0:	mov	r3, #1
   132a4:	str	r3, [fp, #-196]	; 0xffffff3c
   132a8:	str	r3, [fp, #-192]	; 0xffffff40
   132ac:	ldm	r4!, {r0, r1, r2, r3}
   132b0:	sub	ip, fp, #148	; 0x94
   132b4:	add	r5, r8, r5
   132b8:	str	r5, [fp, #-104]	; 0xffffff98
   132bc:	stmia	ip!, {r0, r1, r2, r3}
   132c0:	add	r3, r8, sl
   132c4:	mov	lr, r3
   132c8:	ldm	r4!, {r0, r1, r2, r3}
   132cc:	add	sl, r8, r9
   132d0:	str	lr, [fp, #-248]	; 0xffffff08
   132d4:	str	lr, [fp, #-152]	; 0xffffff68
   132d8:	ldr	lr, [r4]
   132dc:	stmia	ip!, {r0, r1, r2, r3}
   132e0:	mov	r0, r5
   132e4:	ldr	r2, [fp, #-236]	; 0xffffff14
   132e8:	mov	r1, #0
   132ec:	str	lr, [ip]
   132f0:	str	r8, [fp, #-112]	; 0xffffff90
   132f4:	str	sl, [fp, #-156]	; 0xffffff64
   132f8:	bl	1142c <memset@plt>
   132fc:	ldr	lr, [fp, #-248]	; 0xffffff08
   13300:	sub	r4, fp, #160	; 0xa0
   13304:	tst	r6, #8
   13308:	str	lr, [fp, #-204]	; 0xffffff34
   1330c:	str	sl, [fp, #-208]	; 0xffffff30
   13310:	str	r5, [fp, #-200]	; 0xffffff38
   13314:	str	r4, [fp, #-212]	; 0xffffff2c
   13318:	bne	136bc <argp_parse@@Base+0x50c>
   1331c:	ldr	r3, [fp, #-244]	; 0xffffff0c
   13320:	cmp	r3, #0
   13324:	addne	r3, sl, #1
   13328:	movne	r2, #43	; 0x2b
   1332c:	strbne	r2, [sl]
   13330:	movne	sl, r3
   13334:	strne	r3, [fp, #-208]	; 0xffffff30
   13338:	mov	r2, #0
   1333c:	strb	r2, [sl]
   13340:	ldr	r3, [fp, #-204]	; 0xffffff34
   13344:	cmp	r7, r2
   13348:	str	r2, [r3]
   1334c:	str	r7, [fp, #-160]	; 0xffffff60
   13350:	beq	13864 <argp_parse@@Base+0x6b4>
   13354:	sub	r1, fp, #212	; 0xd4
   13358:	mov	r0, r7
   1335c:	str	r1, [sp]
   13360:	ldr	r3, [fp, #-112]	; 0xffffff90
   13364:	mov	r1, r2
   13368:	bl	12d18 <__assert_fail@plt+0x1778>
   1336c:	ldr	r7, [fp, #-160]	; 0xffffff60
   13370:	ldr	r5, [fp, #-112]	; 0xffffff90
   13374:	mov	r8, r0
   13378:	str	r0, [fp, #-108]	; 0xffffff94
   1337c:	mov	r2, #56	; 0x38
   13380:	mov	r1, #0
   13384:	sub	r0, fp, #96	; 0x60
   13388:	bl	1142c <memset@plt>
   1338c:	ldr	r2, [pc, #2828]	; 13ea0 <argp_parse@@Base+0xcf0>
   13390:	ldr	r3, [pc, #2828]	; 13ea4 <argp_parse@@Base+0xcf4>
   13394:	ldr	r0, [fp, #-240]	; 0xffffff10
   13398:	ldr	r1, [r2]
   1339c:	str	r0, [fp, #-92]	; 0xffffffa4
   133a0:	ldr	r2, [r3]
   133a4:	ldr	r0, [fp, #-232]	; 0xffffff18
   133a8:	mov	r3, #1
   133ac:	cmp	r5, r8
   133b0:	str	r7, [fp, #-96]	; 0xffffffa0
   133b4:	str	r0, [fp, #-88]	; 0xffffffa8
   133b8:	str	r6, [fp, #-80]	; 0xffffffb0
   133bc:	str	r4, [fp, #-44]	; 0xffffffd4
   133c0:	str	r1, [fp, #-52]	; 0xffffffcc
   133c4:	str	r2, [fp, #-48]	; 0xffffffd0
   133c8:	str	r3, [fp, #-100]	; 0xffffff9c
   133cc:	bcc	136d0 <argp_parse@@Base+0x520>
   133d0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   133d4:	tst	r3, #2
   133d8:	bne	13874 <argp_parse@@Base+0x6c4>
   133dc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   133e0:	ldr	r4, [fp, #-92]	; 0xffffffa4
   133e4:	mov	r2, #1
   133e8:	str	r2, [fp, #-144]	; 0xffffff70
   133ec:	ldr	r2, [fp, #-232]	; 0xffffff18
   133f0:	cmp	r2, r3
   133f4:	beq	13d74 <argp_parse@@Base+0xbc4>
   133f8:	ldr	r3, [pc, #2716]	; 13e9c <argp_parse@@Base+0xcec>
   133fc:	ldr	r3, [r3]
   13400:	str	r3, [fp, #-56]	; 0xffffffc8
   13404:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13408:	ldr	r5, [fp, #-84]	; 0xffffffac
   1340c:	ldr	sl, [pc, #2708]	; 13ea8 <argp_parse@@Base+0xcf8>
   13410:	mov	r0, r4
   13414:	mov	r6, #0
   13418:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1341c:	cmp	r3, #0
   13420:	beq	138b0 <argp_parse@@Base+0x700>
   13424:	cmp	r3, r5
   13428:	strgt	r6, [fp, #-72]	; 0xffffffb8
   1342c:	bgt	138b0 <argp_parse@@Base+0x700>
   13430:	cmp	r5, r0
   13434:	blt	13c4c <argp_parse@@Base+0xa9c>
   13438:	cmp	r5, r0
   1343c:	bne	13c58 <argp_parse@@Base+0xaa8>
   13440:	ldr	r3, [fp, #-112]	; 0xffffff90
   13444:	ldr	ip, [fp, #-108]	; 0xffffff94
   13448:	cmp	r3, ip
   1344c:	bcs	13e3c <argp_parse@@Base+0xc8c>
   13450:	mov	r5, #0
   13454:	add	r4, r3, #36	; 0x24
   13458:	mov	r7, r5
   1345c:	ldr	r6, [pc, #2632]	; 13eac <argp_parse@@Base+0xcfc>
   13460:	mov	r0, r5
   13464:	b	134ac <argp_parse@@Base+0x2fc>
   13468:	ldr	ip, [r4, #-4]
   1346c:	str	ip, [fp, #-60]	; 0xffffffc4
   13470:	ldr	ip, [r4, #-12]
   13474:	str	ip, [fp, #-68]	; 0xffffffbc
   13478:	ldr	ip, [r4, #-8]
   1347c:	str	r3, [fp, #-76]	; 0xffffffb4
   13480:	str	ip, [fp, #-64]	; 0xffffffc0
   13484:	blx	r5
   13488:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1348c:	str	r3, [r4, #-4]
   13490:	ldr	ip, [fp, #-108]	; 0xffffff94
   13494:	cmp	ip, r4
   13498:	bls	13de4 <argp_parse@@Base+0xc34>
   1349c:	cmp	r0, #7
   134a0:	cmpne	r0, #0
   134a4:	bne	13dc0 <argp_parse@@Base+0xc10>
   134a8:	add	r4, r4, #36	; 0x24
   134ac:	ldr	r3, [r4, #-24]	; 0xffffffe8
   134b0:	cmp	r3, #0
   134b4:	bne	13494 <argp_parse@@Base+0x2e4>
   134b8:	ldr	r5, [r4, #-36]	; 0xffffffdc
   134bc:	sub	r2, fp, #96	; 0x60
   134c0:	cmp	r5, #0
   134c4:	mov	r1, r7
   134c8:	mov	r0, r6
   134cc:	bne	13468 <argp_parse@@Base+0x2b8>
   134d0:	cmp	ip, r4
   134d4:	mov	r0, #7
   134d8:	bhi	134a8 <argp_parse@@Base+0x2f8>
   134dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   134e0:	sub	r4, ip, #36	; 0x24
   134e4:	cmp	r4, r3
   134e8:	movcs	r5, #7
   134ec:	bcc	13574 <argp_parse@@Base+0x3c4>
   134f0:	cmp	r5, #7
   134f4:	cmpne	r5, #0
   134f8:	bne	13dd4 <argp_parse@@Base+0xc24>
   134fc:	sub	r4, r4, #36	; 0x24
   13500:	mov	r7, #0
   13504:	ldr	r6, [pc, #2468]	; 13eb0 <argp_parse@@Base+0xd00>
   13508:	b	13554 <argp_parse@@Base+0x3a4>
   1350c:	ldr	r3, [r4, #68]	; 0x44
   13510:	ldr	ip, [r4, #48]	; 0x30
   13514:	str	r3, [fp, #-60]	; 0xffffffc4
   13518:	ldr	r3, [r4, #60]	; 0x3c
   1351c:	str	r3, [fp, #-68]	; 0xffffffbc
   13520:	ldr	r3, [r4, #64]	; 0x40
   13524:	str	ip, [fp, #-76]	; 0xffffffb4
   13528:	str	r3, [fp, #-64]	; 0xffffffc0
   1352c:	blx	r5
   13530:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13534:	str	r3, [r4, #68]	; 0x44
   13538:	ldr	r3, [fp, #-112]	; 0xffffff90
   1353c:	cmp	r4, r3
   13540:	bcc	13e34 <argp_parse@@Base+0xc84>
   13544:	cmp	r0, #7
   13548:	cmpne	r0, #0
   1354c:	bne	13da4 <argp_parse@@Base+0xbf4>
   13550:	sub	r4, r4, #36	; 0x24
   13554:	ldr	r5, [r4, #36]	; 0x24
   13558:	sub	r2, fp, #96	; 0x60
   1355c:	cmp	r5, #0
   13560:	mov	r1, r7
   13564:	mov	r0, r6
   13568:	bne	1350c <argp_parse@@Base+0x35c>
   1356c:	cmp	r4, r3
   13570:	bcs	13550 <argp_parse@@Base+0x3a0>
   13574:	ldr	r2, [fp, #4]
   13578:	cmp	r2, #0
   1357c:	beq	13598 <argp_parse@@Base+0x3e8>
   13580:	mov	r5, #0
   13584:	ldr	r1, [fp, #4]
   13588:	ldr	r2, [fp, #-84]	; 0xffffffac
   1358c:	str	r2, [r1]
   13590:	cmp	r5, #0
   13594:	bne	13db4 <argp_parse@@Base+0xc04>
   13598:	ldr	ip, [fp, #-108]	; 0xffffff94
   1359c:	b	13c70 <argp_parse@@Base+0xac0>
   135a0:	ldr	r3, [fp, #-112]	; 0xffffff90
   135a4:	mov	r5, r0
   135a8:	ldr	ip, [fp, #-108]	; 0xffffff94
   135ac:	cmp	ip, r3
   135b0:	bls	13d6c <argp_parse@@Base+0xbbc>
   135b4:	ldr	r7, [pc, #2296]	; 13eb4 <argp_parse@@Base+0xd04>
   135b8:	add	r4, r3, #36	; 0x24
   135bc:	mov	r8, #0
   135c0:	ldr	r3, [r4, #-36]	; 0xffffffdc
   135c4:	sub	r2, fp, #96	; 0x60
   135c8:	cmp	r3, #0
   135cc:	mov	r1, r8
   135d0:	mov	r0, r7
   135d4:	mov	r6, r4
   135d8:	beq	1360c <argp_parse@@Base+0x45c>
   135dc:	ldr	ip, [r4, #-4]
   135e0:	ldr	lr, [r4, #-24]	; 0xffffffe8
   135e4:	str	ip, [fp, #-60]	; 0xffffffc4
   135e8:	ldr	ip, [r4, #-12]
   135ec:	str	ip, [fp, #-68]	; 0xffffffbc
   135f0:	ldr	ip, [r4, #-8]
   135f4:	str	lr, [fp, #-76]	; 0xffffffb4
   135f8:	str	ip, [fp, #-64]	; 0xffffffc0
   135fc:	blx	r3
   13600:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13604:	str	r3, [r4, #-4]
   13608:	ldr	ip, [fp, #-108]	; 0xffffff94
   1360c:	cmp	ip, r6
   13610:	add	r4, r4, #36	; 0x24
   13614:	bhi	135c0 <argp_parse@@Base+0x410>
   13618:	ldr	r3, [fp, #-112]	; 0xffffff90
   1361c:	sub	ip, ip, #36	; 0x24
   13620:	cmp	r3, ip
   13624:	bhi	1368c <argp_parse@@Base+0x4dc>
   13628:	ldr	r8, [pc, #2184]	; 13eb8 <argp_parse@@Base+0xd08>
   1362c:	sub	r4, ip, #36	; 0x24
   13630:	mov	r9, #0
   13634:	ldr	r6, [r4, #36]	; 0x24
   13638:	sub	r2, fp, #96	; 0x60
   1363c:	cmp	r6, #0
   13640:	mov	r1, r9
   13644:	mov	r0, r8
   13648:	mov	r7, r4
   1364c:	beq	13680 <argp_parse@@Base+0x4d0>
   13650:	ldr	r3, [r4, #68]	; 0x44
   13654:	ldr	ip, [r4, #48]	; 0x30
   13658:	str	r3, [fp, #-60]	; 0xffffffc4
   1365c:	ldr	r3, [r4, #60]	; 0x3c
   13660:	str	r3, [fp, #-68]	; 0xffffffbc
   13664:	ldr	r3, [r4, #64]	; 0x40
   13668:	str	ip, [fp, #-76]	; 0xffffffb4
   1366c:	str	r3, [fp, #-64]	; 0xffffffc0
   13670:	blx	r6
   13674:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13678:	str	r3, [r4, #68]	; 0x44
   1367c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13680:	cmp	r3, r7
   13684:	sub	r4, r4, #36	; 0x24
   13688:	bls	13634 <argp_parse@@Base+0x484>
   1368c:	cmp	r5, #7
   13690:	moveq	r5, #22
   13694:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13698:	bl	14048 <argp_parse@@Base+0xe98>
   1369c:	mov	r0, r5
   136a0:	sub	sp, fp, #32
   136a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136a8:	mov	sl, #36	; 0x24
   136ac:	mov	r5, sl
   136b0:	mov	r9, #52	; 0x34
   136b4:	str	r7, [fp, #-236]	; 0xffffff14
   136b8:	b	13280 <argp_parse@@Base+0xd0>
   136bc:	add	sl, sl, #1
   136c0:	mov	r3, #45	; 0x2d
   136c4:	str	sl, [fp, #-208]	; 0xffffff30
   136c8:	strb	r3, [r8, r9]
   136cc:	b	13338 <argp_parse@@Base+0x188>
   136d0:	ldr	r3, [fp, #8]
   136d4:	add	r4, r5, #36	; 0x24
   136d8:	str	r3, [r5, #24]
   136dc:	mov	r7, #0
   136e0:	ldr	r6, [pc, #2004]	; 13ebc <argp_parse@@Base+0xd0c>
   136e4:	b	1373c <argp_parse@@Base+0x58c>
   136e8:	ldr	r2, [r4, #-4]
   136ec:	ldr	r0, [r4, #-24]	; 0xffffffe8
   136f0:	str	r2, [fp, #-60]	; 0xffffffc4
   136f4:	ldr	r1, [r4, #-12]
   136f8:	sub	r2, fp, #96	; 0x60
   136fc:	str	r1, [fp, #-68]	; 0xffffffbc
   13700:	ldr	ip, [r4, #-8]
   13704:	mov	r1, r7
   13708:	str	r0, [fp, #-76]	; 0xffffffb4
   1370c:	str	ip, [fp, #-64]	; 0xffffffc0
   13710:	mov	r0, r6
   13714:	blx	r3
   13718:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1371c:	str	r3, [r4, #-4]
   13720:	ldr	r3, [fp, #-108]	; 0xffffff94
   13724:	cmp	r3, r4
   13728:	bls	13e58 <argp_parse@@Base+0xca8>
   1372c:	cmp	r0, #7
   13730:	cmpne	r0, #0
   13734:	bne	13854 <argp_parse@@Base+0x6a4>
   13738:	add	r4, r4, #36	; 0x24
   1373c:	ldr	r3, [r4, #-20]	; 0xffffffec
   13740:	cmp	r3, #0
   13744:	ldrne	r3, [r3, #28]
   13748:	ldrne	r2, [r4, #-16]
   1374c:	ldrne	r3, [r3, r2, lsl #2]
   13750:	strne	r3, [r4, #-12]
   13754:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13758:	cmp	r3, #0
   1375c:	bne	136e8 <argp_parse@@Base+0x538>
   13760:	ldr	r3, [r4, #-32]	; 0xffffffe0
   13764:	ldr	r3, [r3, #16]
   13768:	cmp	r3, #0
   1376c:	beq	13794 <argp_parse@@Base+0x5e4>
   13770:	ldr	r3, [r3]
   13774:	cmp	r3, #0
   13778:	beq	13794 <argp_parse@@Base+0x5e4>
   1377c:	ldr	r3, [r4, #-8]
   13780:	ldr	r2, [r4, #-12]
   13784:	str	r2, [r3]
   13788:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1378c:	cmp	r3, #0
   13790:	bne	136e8 <argp_parse@@Base+0x538>
   13794:	ldr	r3, [fp, #-108]	; 0xffffff94
   13798:	cmp	r3, r4
   1379c:	bhi	13738 <argp_parse@@Base+0x588>
   137a0:	b	133d0 <argp_parse@@Base+0x220>
   137a4:	sub	sp, sp, #72	; 0x48
   137a8:	add	r4, sp, #8
   137ac:	sub	sp, sp, #40	; 0x28
   137b0:	add	r5, sp, #8
   137b4:	mov	r1, r3
   137b8:	mov	r0, r4
   137bc:	mov	r2, #64	; 0x40
   137c0:	str	r3, [r5]
   137c4:	str	r3, [r5, #4]
   137c8:	str	r3, [r5, #8]
   137cc:	str	r3, [r5, #12]
   137d0:	str	r3, [r5, #20]
   137d4:	str	r3, [r5, #24]
   137d8:	str	r4, [r5, #16]
   137dc:	bl	1142c <memset@plt>
   137e0:	ldr	r3, [pc, #1752]	; 13ec0 <argp_parse@@Base+0xd10>
   137e4:	cmp	r7, #0
   137e8:	strne	r7, [r4]
   137ec:	ldr	r3, [r3]
   137f0:	addne	r4, r4, #16
   137f4:	ldr	r2, [pc, #1736]	; 13ec4 <argp_parse@@Base+0xd14>
   137f8:	cmp	r3, #0
   137fc:	str	r2, [r4]
   13800:	beq	13d8c <argp_parse@@Base+0xbdc>
   13804:	ldr	r2, [pc, #1724]	; 13ec8 <argp_parse@@Base+0xd18>
   13808:	add	r3, r4, #32
   1380c:	str	r2, [r4, #16]
   13810:	mov	r8, #0
   13814:	sub	r4, fp, #196	; 0xc4
   13818:	str	r8, [r3]
   1381c:	mov	r1, r8
   13820:	mov	r0, r4
   13824:	mov	r2, #36	; 0x24
   13828:	bl	1142c <memset@plt>
   1382c:	ands	r3, r6, #4
   13830:	str	r3, [fp, #-244]	; 0xffffff0c
   13834:	moveq	r3, #1
   13838:	movne	r3, r8
   1383c:	mov	r7, r5
   13840:	str	r8, [fp, #-224]	; 0xffffff20
   13844:	str	r8, [fp, #-220]	; 0xffffff24
   13848:	str	r8, [fp, #-216]	; 0xffffff28
   1384c:	str	r3, [fp, #-228]	; 0xffffff1c
   13850:	b	13244 <argp_parse@@Base+0x94>
   13854:	mov	r5, r0
   13858:	mov	r0, r5
   1385c:	sub	sp, fp, #32
   13860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13864:	ldr	r5, [fp, #-112]	; 0xffffff90
   13868:	mov	r8, r5
   1386c:	str	r5, [fp, #-108]	; 0xffffff94
   13870:	b	1337c <argp_parse@@Base+0x1cc>
   13874:	tst	r3, #1
   13878:	mov	r3, #0
   1387c:	str	r3, [fp, #-144]	; 0xffffff70
   13880:	ldr	r4, [fp, #-92]	; 0xffffffa4
   13884:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13888:	subne	r3, r3, #4
   1388c:	addne	r4, r4, #1
   13890:	strne	r3, [fp, #-88]	; 0xffffffa8
   13894:	strne	r4, [fp, #-92]	; 0xffffffa4
   13898:	b	133ec <argp_parse@@Base+0x23c>
   1389c:	ldr	r3, [fp, #-232]	; 0xffffff18
   138a0:	ldr	r0, [r3]
   138a4:	bl	13f9c <argp_parse@@Base+0xdec>
   138a8:	str	r0, [r4]
   138ac:	b	131fc <argp_parse@@Base+0x4c>
   138b0:	cmp	r2, #0
   138b4:	beq	13430 <argp_parse@@Base+0x280>
   138b8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   138bc:	str	r5, [fp, #-148]	; 0xffffff6c
   138c0:	ands	ip, r3, #64	; 0x40
   138c4:	mvn	r3, #0
   138c8:	str	r3, [fp, #-140]	; 0xffffff74
   138cc:	ldr	r2, [fp, #-156]	; 0xffffff64
   138d0:	ldr	r3, [fp, #-152]	; 0xffffff68
   138d4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   138d8:	beq	13bf8 <argp_parse@@Base+0xa48>
   138dc:	sub	ip, fp, #148	; 0x94
   138e0:	stm	sp, {r6, ip}
   138e4:	bl	1411c <argp_parse@@Base+0xf6c>
   138e8:	ldr	r5, [fp, #-148]	; 0xffffff6c
   138ec:	str	r5, [fp, #-84]	; 0xffffffac
   138f0:	mov	r7, r0
   138f4:	cmn	r7, #1
   138f8:	beq	13c18 <argp_parse@@Base+0xa68>
   138fc:	cmp	r7, #63	; 0x3f
   13900:	beq	13d1c <argp_parse@@Base+0xb6c>
   13904:	cmp	r7, #1
   13908:	beq	13a60 <argp_parse@@Base+0x8b0>
   1390c:	asrs	r8, r7, #24
   13910:	bne	139bc <argp_parse@@Base+0x80c>
   13914:	mov	r1, r7
   13918:	ldr	r0, [fp, #-156]	; 0xffffff64
   1391c:	bl	113f0 <strchr@plt>
   13920:	cmp	r0, #0
   13924:	beq	13a2c <argp_parse@@Base+0x87c>
   13928:	ldr	r4, [fp, #-112]	; 0xffffff90
   1392c:	ldr	r2, [fp, #-108]	; 0xffffff94
   13930:	cmp	r4, r2
   13934:	bcc	13948 <argp_parse@@Base+0x798>
   13938:	b	13a2c <argp_parse@@Base+0x87c>
   1393c:	add	r4, r4, #36	; 0x24
   13940:	cmp	r4, r2
   13944:	bcs	13a2c <argp_parse@@Base+0x87c>
   13948:	ldr	r3, [r4, #8]
   1394c:	cmp	r0, r3
   13950:	bcs	1393c <argp_parse@@Base+0x78c>
   13954:	ldr	r3, [r4]
   13958:	cmp	r3, #0
   1395c:	beq	13a2c <argp_parse@@Base+0x87c>
   13960:	ldr	r2, [r4, #32]
   13964:	ldr	r0, [r4, #28]
   13968:	ldr	ip, [r4, #24]
   1396c:	str	r2, [fp, #-60]	; 0xffffffc4
   13970:	ldr	r2, [r4, #12]
   13974:	ldr	r1, [fp, #-136]	; 0xffffff78
   13978:	str	r0, [fp, #-64]	; 0xffffffc0
   1397c:	str	r2, [fp, #-76]	; 0xffffffb4
   13980:	str	ip, [fp, #-68]	; 0xffffffbc
   13984:	sub	r2, fp, #96	; 0x60
   13988:	mov	r0, r7
   1398c:	blx	r3
   13990:	mov	r8, r6
   13994:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13998:	str	r3, [r4, #32]
   1399c:	cmp	r0, #7
   139a0:	beq	13a24 <argp_parse@@Base+0x874>
   139a4:	cmp	r0, #0
   139a8:	bne	135a0 <argp_parse@@Base+0x3f0>
   139ac:	ldr	r2, [fp, #-100]	; 0xffffff9c
   139b0:	ldr	r5, [fp, #-84]	; 0xffffffac
   139b4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   139b8:	b	13418 <argp_parse@@Base+0x268>
   139bc:	add	r3, r8, r8, lsl #3
   139c0:	ldr	r2, [fp, #-112]	; 0xffffff90
   139c4:	lsl	r3, r3, #2
   139c8:	sub	r3, r3, #36	; 0x24
   139cc:	add	r4, r2, r3
   139d0:	ldr	r5, [r2, r3]
   139d4:	ands	r3, r7, #8388608	; 0x800000
   139d8:	movne	r3, #-16777216	; 0xff000000
   139dc:	cmp	r5, #0
   139e0:	beq	13bb0 <argp_parse@@Base+0xa00>
   139e4:	ldr	r0, [r4, #32]
   139e8:	ldr	r2, [r4, #24]
   139ec:	str	r0, [fp, #-60]	; 0xffffffc4
   139f0:	ldr	r0, [r4, #28]
   139f4:	str	r2, [fp, #-68]	; 0xffffffbc
   139f8:	ldr	r2, [r4, #12]
   139fc:	str	r0, [fp, #-64]	; 0xffffffc0
   13a00:	bic	r0, r7, #-16777216	; 0xff000000
   13a04:	str	r2, [fp, #-76]	; 0xffffffb4
   13a08:	orr	r0, r0, r3
   13a0c:	ldr	r1, [fp, #-136]	; 0xffffff78
   13a10:	sub	r2, fp, #96	; 0x60
   13a14:	blx	r5
   13a18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13a1c:	str	r3, [r4, #32]
   13a20:	b	1399c <argp_parse@@Base+0x7ec>
   13a24:	cmp	r8, #0
   13a28:	bne	13bb0 <argp_parse@@Base+0xa00>
   13a2c:	mov	r2, r7
   13a30:	ldr	r3, [pc, #1172]	; 13ecc <argp_parse@@Base+0xd1c>
   13a34:	ldr	r1, [pc, #1172]	; 13ed0 <argp_parse@@Base+0xd20>
   13a38:	sub	r0, fp, #96	; 0x60
   13a3c:	bl	17e68 <argp_error@@Base>
   13a40:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13a44:	mov	r2, #260	; 0x104
   13a48:	sub	r0, fp, #96	; 0x60
   13a4c:	bl	17db8 <argp_state_help@@Base>
   13a50:	mov	r5, #7
   13a54:	ldr	r3, [fp, #-112]	; 0xffffff90
   13a58:	ldr	ip, [fp, #-108]	; 0xffffff94
   13a5c:	b	135ac <argp_parse@@Base+0x3fc>
   13a60:	ldr	r7, [fp, #-136]	; 0xffffff78
   13a64:	ldr	r3, [fp, #-112]	; 0xffffff90
   13a68:	ldr	ip, [fp, #-108]	; 0xffffff94
   13a6c:	sub	r8, r5, #1
   13a70:	cmp	r3, ip
   13a74:	str	r8, [fp, #-84]	; 0xffffffac
   13a78:	bcs	13ba4 <argp_parse@@Base+0x9f4>
   13a7c:	mov	lr, r8
   13a80:	add	r4, r3, #36	; 0x24
   13a84:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13a88:	add	r5, lr, #1
   13a8c:	cmp	r3, #0
   13a90:	str	r5, [fp, #-84]	; 0xffffffac
   13a94:	sub	r2, fp, #96	; 0x60
   13a98:	mov	r1, r7
   13a9c:	mov	r0, r6
   13aa0:	sub	r5, r4, #36	; 0x24
   13aa4:	mov	r9, r4
   13aa8:	streq	lr, [fp, #-84]	; 0xffffffac
   13aac:	beq	13b98 <argp_parse@@Base+0x9e8>
   13ab0:	ldr	ip, [r4, #-4]
   13ab4:	ldr	lr, [r4, #-24]	; 0xffffffe8
   13ab8:	str	ip, [fp, #-60]	; 0xffffffc4
   13abc:	ldr	ip, [r4, #-12]
   13ac0:	str	ip, [fp, #-68]	; 0xffffffbc
   13ac4:	ldr	ip, [r4, #-8]
   13ac8:	str	lr, [fp, #-76]	; 0xffffffb4
   13acc:	str	ip, [fp, #-64]	; 0xffffffc0
   13ad0:	blx	r3
   13ad4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13ad8:	str	r3, [r4, #-4]
   13adc:	cmp	r0, #7
   13ae0:	beq	13b1c <argp_parse@@Base+0x96c>
   13ae4:	cmp	r0, #0
   13ae8:	bne	135a0 <argp_parse@@Base+0x3f0>
   13aec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13af0:	ldr	r5, [fp, #-84]	; 0xffffffac
   13af4:	cmp	r8, r5
   13af8:	sublt	r8, r5, r8
   13afc:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   13b00:	movge	r3, #1
   13b04:	addlt	r8, r3, r8
   13b08:	strlt	r8, [r4, #-24]	; 0xffffffe8
   13b0c:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   13b10:	strge	r3, [fp, #-100]	; 0xffffff9c
   13b14:	movge	r2, r3
   13b18:	b	13418 <argp_parse@@Base+0x268>
   13b1c:	ldr	lr, [fp, #-84]	; 0xffffffac
   13b20:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13b24:	sub	lr, lr, #1
   13b28:	cmp	r3, #0
   13b2c:	str	lr, [fp, #-84]	; 0xffffffac
   13b30:	beq	13b94 <argp_parse@@Base+0x9e4>
   13b34:	add	r0, r5, #24
   13b38:	ldr	r2, [r5, #12]
   13b3c:	ldm	r0, {r0, r1, ip}
   13b40:	str	r2, [fp, #-76]	; 0xffffffb4
   13b44:	sub	r2, fp, #96	; 0x60
   13b48:	str	ip, [fp, #-60]	; 0xffffffc4
   13b4c:	str	r0, [fp, #-68]	; 0xffffffbc
   13b50:	str	r1, [fp, #-64]	; 0xffffffc0
   13b54:	mov	r0, sl
   13b58:	mov	r1, r6
   13b5c:	blx	r3
   13b60:	ldr	ip, [fp, #-108]	; 0xffffff94
   13b64:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13b68:	cmp	r4, ip
   13b6c:	movcs	r1, #0
   13b70:	movcc	r1, #1
   13b74:	mov	r3, r4
   13b78:	str	r2, [r5, #32]
   13b7c:	cmp	r0, #7
   13b80:	movne	r1, #0
   13b84:	cmp	r1, #0
   13b88:	beq	13e70 <argp_parse@@Base+0xcc0>
   13b8c:	ldr	lr, [fp, #-84]	; 0xffffffac
   13b90:	b	13a80 <argp_parse@@Base+0x8d0>
   13b94:	ldr	ip, [fp, #-108]	; 0xffffff94
   13b98:	cmp	r9, ip
   13b9c:	add	r4, r4, #36	; 0x24
   13ba0:	bcc	13a84 <argp_parse@@Base+0x8d4>
   13ba4:	ldr	r5, [fp, #-84]	; 0xffffffac
   13ba8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13bac:	b	13438 <argp_parse@@Base+0x288>
   13bb0:	ldr	r3, [fp, #-152]	; 0xffffff68
   13bb4:	ldr	r2, [r3, #12]
   13bb8:	cmp	r2, r7
   13bbc:	bne	13bd4 <argp_parse@@Base+0xa24>
   13bc0:	b	13d08 <argp_parse@@Base+0xb58>
   13bc4:	add	r3, r3, #16
   13bc8:	ldr	r2, [r3, #12]
   13bcc:	cmp	r2, r7
   13bd0:	beq	13d08 <argp_parse@@Base+0xb58>
   13bd4:	ldr	r2, [r3]
   13bd8:	cmp	r2, #0
   13bdc:	bne	13bc4 <argp_parse@@Base+0xa14>
   13be0:	ldr	r2, [pc, #748]	; 13ed4 <argp_parse@@Base+0xd24>
   13be4:	ldr	r3, [pc, #736]	; 13ecc <argp_parse@@Base+0xd1c>
   13be8:	ldr	r1, [pc, #744]	; 13ed8 <argp_parse@@Base+0xd28>
   13bec:	sub	r0, fp, #96	; 0x60
   13bf0:	bl	17e68 <argp_error@@Base>
   13bf4:	b	13a40 <argp_parse@@Base+0x890>
   13bf8:	sub	lr, fp, #148	; 0x94
   13bfc:	stm	sp, {ip, lr}
   13c00:	bl	140c8 <argp_parse@@Base+0xf18>
   13c04:	ldr	r5, [fp, #-148]	; 0xffffff6c
   13c08:	str	r5, [fp, #-84]	; 0xffffffac
   13c0c:	mov	r7, r0
   13c10:	cmn	r7, #1
   13c14:	bne	138fc <argp_parse@@Base+0x74c>
   13c18:	cmp	r5, #1
   13c1c:	str	r6, [fp, #-100]	; 0xffffff9c
   13c20:	ble	13c40 <argp_parse@@Base+0xa90>
   13c24:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13c28:	sub	r3, r5, #-1073741823	; 0xc0000001
   13c2c:	ldr	r1, [pc, #680]	; 13edc <argp_parse@@Base+0xd2c>
   13c30:	ldr	r0, [r2, r3, lsl #2]
   13c34:	bl	11240 <strcmp@plt>
   13c38:	cmp	r0, #0
   13c3c:	streq	r5, [fp, #-72]	; 0xffffffb8
   13c40:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13c44:	cmp	r5, r0
   13c48:	bge	13438 <argp_parse@@Base+0x288>
   13c4c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13c50:	tst	r3, #4
   13c54:	beq	13d2c <argp_parse@@Base+0xb7c>
   13c58:	ldr	r3, [fp, #4]
   13c5c:	cmp	r3, #0
   13c60:	beq	13e04 <argp_parse@@Base+0xc54>
   13c64:	str	r5, [r3]
   13c68:	ldr	ip, [fp, #-108]	; 0xffffff94
   13c6c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13c70:	sub	r2, ip, #36	; 0x24
   13c74:	cmp	r3, r2
   13c78:	bhi	13d60 <argp_parse@@Base+0xbb0>
   13c7c:	ldr	r6, [pc, #604]	; 13ee0 <argp_parse@@Base+0xd30>
   13c80:	sub	r4, ip, #72	; 0x48
   13c84:	mov	r7, #0
   13c88:	ldr	r5, [r4, #36]	; 0x24
   13c8c:	sub	r2, fp, #96	; 0x60
   13c90:	cmp	r5, #0
   13c94:	mov	r1, r7
   13c98:	mov	r0, r6
   13c9c:	beq	13cf8 <argp_parse@@Base+0xb48>
   13ca0:	ldr	r3, [r4, #68]	; 0x44
   13ca4:	ldr	ip, [r4, #48]	; 0x30
   13ca8:	str	r3, [fp, #-60]	; 0xffffffc4
   13cac:	ldr	r3, [r4, #60]	; 0x3c
   13cb0:	str	r3, [fp, #-68]	; 0xffffffbc
   13cb4:	ldr	r3, [r4, #64]	; 0x40
   13cb8:	str	ip, [fp, #-76]	; 0xffffffb4
   13cbc:	str	r3, [fp, #-64]	; 0xffffffc0
   13cc0:	blx	r5
   13cc4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13cc8:	str	r3, [r4, #68]	; 0x44
   13ccc:	ldr	r3, [fp, #-112]	; 0xffffff90
   13cd0:	cmp	r4, r3
   13cd4:	bcc	13d40 <argp_parse@@Base+0xb90>
   13cd8:	cmp	r0, #7
   13cdc:	cmpne	r0, #0
   13ce0:	sub	r4, r4, #36	; 0x24
   13ce4:	beq	13c88 <argp_parse@@Base+0xad8>
   13ce8:	ldr	ip, [fp, #-108]	; 0xffffff94
   13cec:	mov	r5, r0
   13cf0:	sub	ip, ip, #36	; 0x24
   13cf4:	b	13620 <argp_parse@@Base+0x470>
   13cf8:	cmp	r4, r3
   13cfc:	bcc	13d4c <argp_parse@@Base+0xb9c>
   13d00:	sub	r4, r4, #36	; 0x24
   13d04:	b	13c88 <argp_parse@@Base+0xad8>
   13d08:	ldr	r2, [r3]
   13d0c:	ldr	r3, [pc, #448]	; 13ed4 <argp_parse@@Base+0xd24>
   13d10:	cmp	r2, #0
   13d14:	moveq	r2, r3
   13d18:	b	13be4 <argp_parse@@Base+0xa34>
   13d1c:	ldr	r3, [fp, #-140]	; 0xffffff74
   13d20:	cmn	r3, #1
   13d24:	bne	13a40 <argp_parse@@Base+0x890>
   13d28:	b	13914 <argp_parse@@Base+0x764>
   13d2c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13d30:	ldr	r7, [r3, r5, lsl #2]
   13d34:	add	r5, r5, #1
   13d38:	str	r7, [fp, #-136]	; 0xffffff78
   13d3c:	b	13a64 <argp_parse@@Base+0x8b4>
   13d40:	cmp	r0, #7
   13d44:	mov	r5, r0
   13d48:	bne	13d68 <argp_parse@@Base+0xbb8>
   13d4c:	ldr	ip, [fp, #-108]	; 0xffffff94
   13d50:	sub	ip, ip, #36	; 0x24
   13d54:	cmp	ip, r3
   13d58:	movcs	r5, #0
   13d5c:	bcs	13628 <argp_parse@@Base+0x478>
   13d60:	mov	r5, #0
   13d64:	b	13694 <argp_parse@@Base+0x4e4>
   13d68:	ldr	ip, [fp, #-108]	; 0xffffff94
   13d6c:	sub	ip, ip, #36	; 0x24
   13d70:	b	13620 <argp_parse@@Base+0x470>
   13d74:	ldr	r0, [r2]
   13d78:	cmp	r0, #0
   13d7c:	beq	133f8 <argp_parse@@Base+0x248>
   13d80:	bl	13f9c <argp_parse@@Base+0xdec>
   13d84:	str	r0, [fp, #-56]	; 0xffffffc8
   13d88:	b	13404 <argp_parse@@Base+0x254>
   13d8c:	ldr	r3, [pc, #336]	; 13ee4 <argp_parse@@Base+0xd34>
   13d90:	ldr	r3, [r3]
   13d94:	cmp	r3, #0
   13d98:	addeq	r3, r4, #16
   13d9c:	bne	13804 <argp_parse@@Base+0x654>
   13da0:	b	13810 <argp_parse@@Base+0x660>
   13da4:	mov	r5, r0
   13da8:	ldr	r2, [fp, #4]
   13dac:	cmp	r2, #0
   13db0:	bne	13584 <argp_parse@@Base+0x3d4>
   13db4:	cmp	r5, #7
   13db8:	bne	135a8 <argp_parse@@Base+0x3f8>
   13dbc:	b	13a40 <argp_parse@@Base+0x890>
   13dc0:	ldr	r3, [fp, #-112]	; 0xffffff90
   13dc4:	sub	ip, ip, #36	; 0x24
   13dc8:	cmp	r3, ip
   13dcc:	mov	r5, r0
   13dd0:	bls	13da8 <argp_parse@@Base+0xbf8>
   13dd4:	ldr	r2, [fp, #4]
   13dd8:	cmp	r2, #0
   13ddc:	bne	13584 <argp_parse@@Base+0x3d4>
   13de0:	b	13590 <argp_parse@@Base+0x3e0>
   13de4:	ldr	r3, [fp, #-112]	; 0xffffff90
   13de8:	sub	r4, ip, #36	; 0x24
   13dec:	cmp	r4, r3
   13df0:	mov	r5, r0
   13df4:	bcs	134f0 <argp_parse@@Base+0x340>
   13df8:	cmp	r5, #7
   13dfc:	beq	13574 <argp_parse@@Base+0x3c4>
   13e00:	b	13dd4 <argp_parse@@Base+0xc24>
   13e04:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13e08:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13e0c:	tst	r3, #2
   13e10:	bne	13a44 <argp_parse@@Base+0x894>
   13e14:	cmp	r1, #0
   13e18:	beq	13a44 <argp_parse@@Base+0x894>
   13e1c:	mov	r0, r1
   13e20:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13e24:	ldr	r1, [pc, #188]	; 13ee8 <argp_parse@@Base+0xd38>
   13e28:	bl	113fc <fprintf@plt>
   13e2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13e30:	b	13a44 <argp_parse@@Base+0x894>
   13e34:	mov	r5, r0
   13e38:	b	13df8 <argp_parse@@Base+0xc48>
   13e3c:	sub	r4, ip, #36	; 0x24
   13e40:	cmp	r3, r4
   13e44:	bls	134fc <argp_parse@@Base+0x34c>
   13e48:	ldr	r2, [fp, #4]
   13e4c:	cmp	r2, #0
   13e50:	bne	13580 <argp_parse@@Base+0x3d0>
   13e54:	b	13c70 <argp_parse@@Base+0xac0>
   13e58:	cmp	r0, #7
   13e5c:	mov	r5, r0
   13e60:	beq	133d0 <argp_parse@@Base+0x220>
   13e64:	cmp	r0, #0
   13e68:	beq	133d0 <argp_parse@@Base+0x220>
   13e6c:	b	1369c <argp_parse@@Base+0x4ec>
   13e70:	cmp	r0, #0
   13e74:	ldreq	r0, [fp, #-92]	; 0xffffffa4
   13e78:	moveq	r5, r0
   13e7c:	streq	r0, [fp, #-84]	; 0xffffffac
   13e80:	beq	13af4 <argp_parse@@Base+0x944>
   13e84:	cmp	r0, #7
   13e88:	mov	r5, r0
   13e8c:	beq	13ba4 <argp_parse@@Base+0x9f4>
   13e90:	ldr	r3, [fp, #-112]	; 0xffffff90
   13e94:	b	135ac <argp_parse@@Base+0x3fc>
   13e98:	andeq	fp, r2, ip, ror #5
   13e9c:	andeq	fp, r2, r8, ror #5
   13ea0:	strdeq	fp, [r2], -r0
   13ea4:	strdeq	fp, [r2], -r4
   13ea8:	tsteq	r0, r6
   13eac:	tsteq	r0, r2
   13eb0:	tsteq	r0, r1
   13eb4:	tsteq	r0, r5
   13eb8:	tsteq	r0, r7
   13ebc:	tsteq	r0, r3
   13ec0:	andeq	ip, r2, ip, asr #4
   13ec4:	andeq	r9, r1, r4, ror #24
   13ec8:	andeq	r9, r1, r0, lsl #25
   13ecc:	muleq	r1, ip, ip
   13ed0:			; <UNDEFINED> instruction: 0x00019db0
   13ed4:	andeq	r9, r1, r8, lsr #27
   13ed8:			; <UNDEFINED> instruction: 0x00019db8
   13edc:	andeq	r9, r1, ip, lsr #27
   13ee0:	tsteq	r0, r4
   13ee4:	andeq	fp, r2, r4, ror ip
   13ee8:	andeq	r9, r1, r4, asr #27
   13eec:	cmp	r1, #0
   13ef0:	beq	13f30 <argp_parse@@Base+0xd80>
   13ef4:	ldr	r2, [r1, #52]	; 0x34
   13ef8:	ldr	r3, [r2, #48]	; 0x30
   13efc:	ldr	r1, [r2, #52]	; 0x34
   13f00:	cmp	r3, r1
   13f04:	bcs	13f30 <argp_parse@@Base+0xd80>
   13f08:	ldr	r2, [r3, #4]
   13f0c:	cmp	r0, r2
   13f10:	bne	13f24 <argp_parse@@Base+0xd74>
   13f14:	b	13f38 <argp_parse@@Base+0xd88>
   13f18:	ldr	r2, [r3, #4]
   13f1c:	cmp	r2, r0
   13f20:	beq	13f38 <argp_parse@@Base+0xd88>
   13f24:	add	r3, r3, #36	; 0x24
   13f28:	cmp	r3, r1
   13f2c:	bcc	13f18 <argp_parse@@Base+0xd68>
   13f30:	mov	r0, #0
   13f34:	bx	lr
   13f38:	ldr	r0, [r3, #24]
   13f3c:	bx	lr
   13f40:	ldr	ip, [pc, #32]	; 13f68 <argp_parse@@Base+0xdb8>
   13f44:	push	{lr}		; (str lr, [sp, #-4]!)
   13f48:	sub	sp, sp, #12
   13f4c:	ldm	ip, {r1, ip}
   13f50:	ldr	r3, [pc, #20]	; 13f6c <argp_parse@@Base+0xdbc>
   13f54:	ldr	r2, [pc, #20]	; 13f70 <argp_parse@@Base+0xdc0>
   13f58:	str	ip, [sp]
   13f5c:	bl	144dc <argp_parse@@Base+0x132c>
   13f60:	add	sp, sp, #12
   13f64:	pop	{pc}		; (ldr pc, [sp], #4)
   13f68:	andeq	fp, r2, r8, ror ip
   13f6c:	andeq	r9, r1, ip, lsr #29
   13f70:			; <UNDEFINED> instruction: 0x00019ebc
   13f74:	ldr	r3, [pc, #20]	; 13f90 <argp_parse@@Base+0xde0>
   13f78:	ldr	r2, [pc, #20]	; 13f94 <argp_parse@@Base+0xde4>
   13f7c:	ldr	ip, [pc, #20]	; 13f98 <argp_parse@@Base+0xde8>
   13f80:	str	r0, [r3]
   13f84:	str	ip, [r2]
   13f88:	str	r1, [r3, #4]
   13f8c:	bx	lr
   13f90:	andeq	fp, r2, r8, ror ip
   13f94:	andeq	fp, r2, r4, ror ip
   13f98:	andeq	r3, r1, r0, asr #30
   13f9c:	ldrb	r3, [r0]
   13fa0:	cmp	r3, #47	; 0x2f
   13fa4:	bne	13fb4 <argp_parse@@Base+0xe04>
   13fa8:	ldrb	r3, [r0, #1]!
   13fac:	cmp	r3, #47	; 0x2f
   13fb0:	beq	13fa8 <argp_parse@@Base+0xdf8>
   13fb4:	cmp	r3, #0
   13fb8:	bxeq	lr
   13fbc:	mov	r2, #0
   13fc0:	push	{lr}		; (str lr, [sp, #-4]!)
   13fc4:	mov	ip, r2
   13fc8:	mov	r1, r0
   13fcc:	mov	lr, #1
   13fd0:	cmp	r3, #47	; 0x2f
   13fd4:	moveq	r2, lr
   13fd8:	beq	13fe8 <argp_parse@@Base+0xe38>
   13fdc:	cmp	r2, #0
   13fe0:	movne	r0, r1
   13fe4:	movne	r2, ip
   13fe8:	ldrb	r3, [r1, #1]!
   13fec:	cmp	r3, #0
   13ff0:	bne	13fd0 <argp_parse@@Base+0xe20>
   13ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ff8:	push	{r4, lr}
   13ffc:	mov	r4, r0
   14000:	bl	113e4 <strlen@plt>
   14004:	cmp	r0, #1
   14008:	popls	{r4, pc}
   1400c:	sub	r3, r0, #1
   14010:	add	r2, r4, r3
   14014:	ldrb	r1, [r4, r3]
   14018:	cmp	r1, #47	; 0x2f
   1401c:	popne	{r4, pc}
   14020:	cmp	r3, #1
   14024:	beq	14038 <argp_parse@@Base+0xe88>
   14028:	ldrb	r1, [r2, #-1]!
   1402c:	sub	r0, r3, #1
   14030:	cmp	r1, #47	; 0x2f
   14034:	beq	14040 <argp_parse@@Base+0xe90>
   14038:	mov	r0, r3
   1403c:	pop	{r4, pc}
   14040:	mov	r3, r0
   14044:	b	14020 <argp_parse@@Base+0xe70>
   14048:	push	{r4, r5, lr}
   1404c:	sub	sp, sp, #12
   14050:	mov	r5, r0
   14054:	bl	11408 <__errno_location@plt>
   14058:	mov	r2, #0
   1405c:	mov	r4, r0
   14060:	ldr	r3, [r0]
   14064:	str	r2, [r4]
   14068:	mov	r0, r5
   1406c:	str	r3, [sp]
   14070:	str	r3, [sp, #4]
   14074:	bl	11294 <free@plt>
   14078:	ldr	r3, [r4]
   1407c:	add	r2, sp, #8
   14080:	cmp	r3, #0
   14084:	moveq	r3, #4
   14088:	movne	r3, #0
   1408c:	add	r3, r2, r3
   14090:	ldr	r3, [r3, #-8]
   14094:	str	r3, [r4]
   14098:	add	sp, sp, #12
   1409c:	pop	{r4, r5, pc}
   140a0:	push	{lr}		; (str lr, [sp, #-4]!)
   140a4:	sub	sp, sp, #20
   140a8:	mov	ip, #0
   140ac:	ldr	lr, [sp, #24]
   140b0:	str	ip, [sp, #8]
   140b4:	str	lr, [sp]
   140b8:	str	ip, [sp, #4]
   140bc:	bl	18b0c <argp_error@@Base+0xca4>
   140c0:	add	sp, sp, #20
   140c4:	pop	{pc}		; (ldr pc, [sp], #4)
   140c8:	push	{r4, lr}
   140cc:	sub	sp, sp, #16
   140d0:	mov	ip, #0
   140d4:	ldr	r4, [sp, #24]
   140d8:	ldr	lr, [sp, #28]
   140dc:	str	r4, [sp]
   140e0:	str	lr, [sp, #8]
   140e4:	str	ip, [sp, #12]
   140e8:	str	ip, [sp, #4]
   140ec:	bl	185ac <argp_error@@Base+0x744>
   140f0:	add	sp, sp, #16
   140f4:	pop	{r4, pc}
   140f8:	push	{r4, lr}
   140fc:	sub	sp, sp, #16
   14100:	mov	lr, #0
   14104:	ldr	r4, [sp, #24]
   14108:	mov	ip, #1
   1410c:	stm	sp, {r4, ip, lr}
   14110:	bl	18b0c <argp_error@@Base+0xca4>
   14114:	add	sp, sp, #16
   14118:	pop	{r4, pc}
   1411c:	push	{r4, r5, lr}
   14120:	sub	sp, sp, #20
   14124:	mov	lr, #0
   14128:	ldr	r5, [sp, #32]
   1412c:	ldr	r4, [sp, #36]	; 0x24
   14130:	mov	ip, #1
   14134:	str	r5, [sp]
   14138:	str	r4, [sp, #8]
   1413c:	str	lr, [sp, #12]
   14140:	str	ip, [sp, #4]
   14144:	bl	185ac <argp_error@@Base+0x744>
   14148:	add	sp, sp, #20
   1414c:	pop	{r4, r5, pc}
   14150:	push	{r1, r2, r3}
   14154:	push	{lr}		; (str lr, [sp, #-4]!)
   14158:	sub	sp, sp, #8
   1415c:	add	r3, sp, #16
   14160:	ldr	r2, [sp, #16]
   14164:	ldr	r1, [sp, #12]
   14168:	str	r3, [sp, #4]
   1416c:	bl	1133c <ioctl@plt>
   14170:	add	sp, sp, #8
   14174:	pop	{lr}		; (ldr lr, [sp], #4)
   14178:	add	sp, sp, #12
   1417c:	bx	lr
   14180:	push	{r4, r5, r6, lr}
   14184:	subs	r4, r0, #0
   14188:	beq	141fc <argp_parse@@Base+0x104c>
   1418c:	mov	r1, #47	; 0x2f
   14190:	bl	114a4 <strrchr@plt>
   14194:	subs	r5, r0, #0
   14198:	beq	141e8 <argp_parse@@Base+0x1038>
   1419c:	add	r6, r5, #1
   141a0:	sub	r3, r6, r4
   141a4:	cmp	r3, #6
   141a8:	ble	141e8 <argp_parse@@Base+0x1038>
   141ac:	mov	r2, #7
   141b0:	ldr	r1, [pc, #96]	; 14218 <argp_parse@@Base+0x1068>
   141b4:	sub	r0, r5, #6
   141b8:	bl	1154c <strncmp@plt>
   141bc:	cmp	r0, #0
   141c0:	bne	141e8 <argp_parse@@Base+0x1038>
   141c4:	mov	r2, #3
   141c8:	ldr	r1, [pc, #76]	; 1421c <argp_parse@@Base+0x106c>
   141cc:	mov	r0, r6
   141d0:	bl	1154c <strncmp@plt>
   141d4:	cmp	r0, #0
   141d8:	movne	r4, r6
   141dc:	ldreq	r3, [pc, #60]	; 14220 <argp_parse@@Base+0x1070>
   141e0:	addeq	r4, r5, #4
   141e4:	streq	r4, [r3]
   141e8:	ldr	r2, [pc, #52]	; 14224 <argp_parse@@Base+0x1074>
   141ec:	ldr	r3, [pc, #52]	; 14228 <argp_parse@@Base+0x1078>
   141f0:	str	r4, [r2]
   141f4:	str	r4, [r3]
   141f8:	pop	{r4, r5, r6, pc}
   141fc:	ldr	r3, [pc, #40]	; 1422c <argp_parse@@Base+0x107c>
   14200:	mov	r2, #55	; 0x37
   14204:	mov	r1, #1
   14208:	ldr	r3, [r3]
   1420c:	ldr	r0, [pc, #28]	; 14230 <argp_parse@@Base+0x1080>
   14210:	bl	11330 <fwrite@plt>
   14214:	bl	11558 <abort@plt>
   14218:	andeq	r9, r1, r4, lsl #30
   1421c:	andeq	r9, r1, ip, lsl #30
   14220:	andeq	fp, r2, r8, ror #5
   14224:	andeq	fp, r2, r0, lsl #25
   14228:	andeq	fp, r2, ip, ror #5
   1422c:	strdeq	fp, [r2], -r0
   14230:	andeq	r9, r1, ip, asr #29
   14234:	push	{r4, r5, r6, r7, lr}
   14238:	sub	sp, sp, #36	; 0x24
   1423c:	cmp	r1, #0
   14240:	mov	r4, r0
   14244:	ldr	r5, [sp, #56]	; 0x38
   14248:	ldr	r6, [sp, #60]	; 0x3c
   1424c:	beq	1448c <argp_parse@@Base+0x12dc>
   14250:	str	r3, [sp]
   14254:	mov	r3, r2
   14258:	mov	r2, r1
   1425c:	ldr	r1, [pc, #564]	; 14498 <argp_parse@@Base+0x12e8>
   14260:	bl	113fc <fprintf@plt>
   14264:	ldr	r3, [pc, #560]	; 1449c <argp_parse@@Base+0x12ec>
   14268:	ldr	r2, [pc, #560]	; 144a0 <argp_parse@@Base+0x12f0>
   1426c:	ldr	r1, [pc, #560]	; 144a4 <argp_parse@@Base+0x12f4>
   14270:	mov	r0, r4
   14274:	bl	113fc <fprintf@plt>
   14278:	mov	r1, r4
   1427c:	mov	r0, #10
   14280:	bl	114c8 <fputc@plt>
   14284:	ldr	r1, [pc, #540]	; 144a8 <argp_parse@@Base+0x12f8>
   14288:	ldr	r2, [pc, #540]	; 144ac <argp_parse@@Base+0x12fc>
   1428c:	mov	r0, r4
   14290:	bl	113fc <fprintf@plt>
   14294:	mov	r1, r4
   14298:	mov	r0, #10
   1429c:	bl	114c8 <fputc@plt>
   142a0:	cmp	r6, #9
   142a4:	ldrls	pc, [pc, r6, lsl #2]
   142a8:	b	142d4 <argp_parse@@Base+0x1124>
   142ac:	andeq	r4, r1, r4, lsl r3
   142b0:	andeq	r4, r1, r0, ror #6
   142b4:	andeq	r4, r1, r8, ror r3
   142b8:	muleq	r1, r0, r3
   142bc:			; <UNDEFINED> instruction: 0x000143b0
   142c0:	ldrdeq	r4, [r1], -r8
   142c4:	strdeq	r4, [r1], -r8
   142c8:	andeq	r4, r1, r0, lsr #8
   142cc:	andeq	r4, r1, r0, asr r4
   142d0:	andeq	r4, r1, ip, lsl r3
   142d4:	ldr	ip, [r5, #32]
   142d8:	ldr	r1, [r5, #28]
   142dc:	ldm	r5, {r2, r3}
   142e0:	ldr	r7, [r5, #24]
   142e4:	ldr	r6, [r5, #20]
   142e8:	str	ip, [sp, #24]
   142ec:	ldr	lr, [r5, #16]
   142f0:	str	r1, [sp, #20]
   142f4:	ldr	r1, [r5, #8]
   142f8:	ldr	ip, [r5, #12]
   142fc:	mov	r0, r4
   14300:	str	r7, [sp, #16]
   14304:	stm	sp, {r1, ip, lr}
   14308:	str	r6, [sp, #12]
   1430c:	ldr	r1, [pc, #412]	; 144b0 <argp_parse@@Base+0x1300>
   14310:	bl	113fc <fprintf@plt>
   14314:	add	sp, sp, #36	; 0x24
   14318:	pop	{r4, r5, r6, r7, pc}
   1431c:	ldr	ip, [r5, #32]
   14320:	ldr	r1, [r5, #28]
   14324:	ldm	r5, {r2, r3}
   14328:	ldr	r7, [r5, #24]
   1432c:	ldr	r6, [r5, #20]
   14330:	str	ip, [sp, #24]
   14334:	ldr	lr, [r5, #16]
   14338:	str	r1, [sp, #20]
   1433c:	ldr	r1, [r5, #8]
   14340:	ldr	ip, [r5, #12]
   14344:	mov	r0, r4
   14348:	str	r7, [sp, #16]
   1434c:	stm	sp, {r1, ip, lr}
   14350:	str	r6, [sp, #12]
   14354:	ldr	r1, [pc, #344]	; 144b4 <argp_parse@@Base+0x1304>
   14358:	bl	113fc <fprintf@plt>
   1435c:	b	14314 <argp_parse@@Base+0x1164>
   14360:	ldr	r2, [r5]
   14364:	mov	r0, r4
   14368:	ldr	r1, [pc, #328]	; 144b8 <argp_parse@@Base+0x1308>
   1436c:	add	sp, sp, #36	; 0x24
   14370:	pop	{r4, r5, r6, r7, lr}
   14374:	b	113fc <fprintf@plt>
   14378:	mov	r0, r4
   1437c:	ldm	r5, {r2, r3}
   14380:	ldr	r1, [pc, #308]	; 144bc <argp_parse@@Base+0x130c>
   14384:	add	sp, sp, #36	; 0x24
   14388:	pop	{r4, r5, r6, r7, lr}
   1438c:	b	113fc <fprintf@plt>
   14390:	ldr	r1, [r5, #8]
   14394:	ldm	r5, {r2, r3}
   14398:	mov	r0, r4
   1439c:	str	r1, [sp, #56]	; 0x38
   143a0:	ldr	r1, [pc, #280]	; 144c0 <argp_parse@@Base+0x1310>
   143a4:	add	sp, sp, #36	; 0x24
   143a8:	pop	{r4, r5, r6, r7, lr}
   143ac:	b	113fc <fprintf@plt>
   143b0:	ldr	r1, [r5, #8]
   143b4:	ldr	ip, [r5, #12]
   143b8:	ldm	r5, {r2, r3}
   143bc:	mov	r0, r4
   143c0:	str	r1, [sp, #56]	; 0x38
   143c4:	str	ip, [sp, #60]	; 0x3c
   143c8:	ldr	r1, [pc, #244]	; 144c4 <argp_parse@@Base+0x1314>
   143cc:	add	sp, sp, #36	; 0x24
   143d0:	pop	{r4, r5, r6, r7, lr}
   143d4:	b	113fc <fprintf@plt>
   143d8:	add	r1, r5, #8
   143dc:	ldm	r5, {r2, r3}
   143e0:	ldm	r1, {r1, ip, lr}
   143e4:	mov	r0, r4
   143e8:	stm	sp, {r1, ip, lr}
   143ec:	ldr	r1, [pc, #212]	; 144c8 <argp_parse@@Base+0x1318>
   143f0:	bl	113fc <fprintf@plt>
   143f4:	b	14314 <argp_parse@@Base+0x1164>
   143f8:	add	r1, r5, #8
   143fc:	ldr	r6, [r5, #20]
   14400:	ldm	r1, {r1, ip, lr}
   14404:	mov	r0, r4
   14408:	ldm	r5, {r2, r3}
   1440c:	str	r6, [sp, #12]
   14410:	stm	sp, {r1, ip, lr}
   14414:	ldr	r1, [pc, #176]	; 144cc <argp_parse@@Base+0x131c>
   14418:	bl	113fc <fprintf@plt>
   1441c:	b	14314 <argp_parse@@Base+0x1164>
   14420:	add	r1, r5, #8
   14424:	ldr	r7, [r5, #24]
   14428:	ldm	r1, {r1, ip, lr}
   1442c:	mov	r0, r4
   14430:	ldr	r6, [r5, #20]
   14434:	ldm	r5, {r2, r3}
   14438:	stm	sp, {r1, ip, lr}
   1443c:	str	r7, [sp, #16]
   14440:	str	r6, [sp, #12]
   14444:	ldr	r1, [pc, #132]	; 144d0 <argp_parse@@Base+0x1320>
   14448:	bl	113fc <fprintf@plt>
   1444c:	b	14314 <argp_parse@@Base+0x1164>
   14450:	ldr	r1, [r5, #28]
   14454:	ldm	r5, {r2, r3}
   14458:	ldr	r7, [r5, #24]
   1445c:	ldr	r6, [r5, #20]
   14460:	ldr	lr, [r5, #16]
   14464:	str	r1, [sp, #20]
   14468:	ldr	r1, [r5, #8]
   1446c:	ldr	ip, [r5, #12]
   14470:	mov	r0, r4
   14474:	str	r7, [sp, #16]
   14478:	stm	sp, {r1, ip, lr}
   1447c:	str	r6, [sp, #12]
   14480:	ldr	r1, [pc, #76]	; 144d4 <argp_parse@@Base+0x1324>
   14484:	bl	113fc <fprintf@plt>
   14488:	b	14314 <argp_parse@@Base+0x1164>
   1448c:	ldr	r1, [pc, #68]	; 144d8 <argp_parse@@Base+0x1328>
   14490:	bl	113fc <fprintf@plt>
   14494:	b	14264 <argp_parse@@Base+0x10b4>
   14498:	andeq	r9, r1, r0, lsl pc
   1449c:	andeq	r0, r0, r6, ror #15
   144a0:	andeq	r9, r1, r4, lsr #30
   144a4:	andeq	sl, r1, r4, lsr #4
   144a8:	andeq	r9, r1, ip, asr #30
   144ac:	andeq	r9, r1, r8, lsr #30
   144b0:	andeq	sl, r1, r8, lsr r1
   144b4:	andeq	sl, r1, r4, lsl #2
   144b8:	strdeq	r9, [r1], -r8
   144bc:	andeq	sl, r1, r8
   144c0:	andeq	sl, r1, r0, lsr #32
   144c4:	andeq	sl, r1, ip, lsr r0
   144c8:	andeq	sl, r1, ip, asr r0
   144cc:	andeq	sl, r1, r0, lsl #1
   144d0:	andeq	sl, r1, r8, lsr #1
   144d4:	ldrdeq	sl, [r1], -r4
   144d8:	andeq	r9, r1, ip, lsl pc
   144dc:	push	{r4, r5, lr}
   144e0:	sub	sp, sp, #12
   144e4:	ldr	r5, [sp, #24]
   144e8:	ldr	ip, [r5]
   144ec:	cmp	ip, #0
   144f0:	beq	1450c <argp_parse@@Base+0x135c>
   144f4:	mov	lr, r5
   144f8:	mov	ip, #0
   144fc:	ldr	r4, [lr, #4]!
   14500:	add	ip, ip, #1
   14504:	cmp	r4, #0
   14508:	bne	144fc <argp_parse@@Base+0x134c>
   1450c:	stm	sp, {r5, ip}
   14510:	bl	14234 <argp_parse@@Base+0x1084>
   14514:	add	sp, sp, #12
   14518:	pop	{r4, r5, pc}
   1451c:	push	{r4, r5, lr}
   14520:	sub	sp, sp, #52	; 0x34
   14524:	add	r5, sp, #4
   14528:	ldr	r4, [sp, #64]	; 0x40
   1452c:	mov	ip, #0
   14530:	sub	r4, r4, #4
   14534:	ldr	lr, [r4, #4]!
   14538:	cmp	lr, #0
   1453c:	str	lr, [r5, #4]!
   14540:	beq	14550 <argp_parse@@Base+0x13a0>
   14544:	add	ip, ip, #1
   14548:	cmp	ip, #10
   1454c:	bne	14534 <argp_parse@@Base+0x1384>
   14550:	add	lr, sp, #8
   14554:	str	ip, [sp, #4]
   14558:	str	lr, [sp]
   1455c:	bl	14234 <argp_parse@@Base+0x1084>
   14560:	add	sp, sp, #52	; 0x34
   14564:	pop	{r4, r5, pc}
   14568:	push	{r3}		; (str r3, [sp, #-4]!)
   1456c:	push	{r4, lr}
   14570:	sub	sp, sp, #60	; 0x3c
   14574:	add	lr, sp, #56	; 0x38
   14578:	add	r3, sp, #72	; 0x48
   1457c:	str	r3, [lr, #-44]!	; 0xffffffd4
   14580:	add	r4, sp, #68	; 0x44
   14584:	mov	r3, #0
   14588:	ldr	ip, [r4, #4]!
   1458c:	cmp	ip, #0
   14590:	str	ip, [lr, #4]!
   14594:	beq	145a4 <argp_parse@@Base+0x13f4>
   14598:	add	r3, r3, #1
   1459c:	cmp	r3, #10
   145a0:	bne	14588 <argp_parse@@Base+0x13d8>
   145a4:	add	ip, sp, #16
   145a8:	str	r3, [sp, #4]
   145ac:	str	ip, [sp]
   145b0:	ldr	r3, [sp, #68]	; 0x44
   145b4:	bl	14234 <argp_parse@@Base+0x1084>
   145b8:	add	sp, sp, #60	; 0x3c
   145bc:	pop	{r4, lr}
   145c0:	add	sp, sp, #4
   145c4:	bx	lr
   145c8:	ldr	r3, [pc, #56]	; 14608 <argp_parse@@Base+0x1458>
   145cc:	push	{r4, lr}
   145d0:	mov	r0, #10
   145d4:	ldr	r1, [r3]
   145d8:	bl	114c8 <fputc@plt>
   145dc:	ldr	r1, [pc, #40]	; 1460c <argp_parse@@Base+0x145c>
   145e0:	ldr	r0, [pc, #40]	; 14610 <argp_parse@@Base+0x1460>
   145e4:	bl	11258 <printf@plt>
   145e8:	ldr	r1, [pc, #36]	; 14614 <argp_parse@@Base+0x1464>
   145ec:	ldr	r2, [pc, #36]	; 14618 <argp_parse@@Base+0x1468>
   145f0:	ldr	r0, [pc, #36]	; 1461c <argp_parse@@Base+0x146c>
   145f4:	bl	11258 <printf@plt>
   145f8:	ldr	r1, [pc, #32]	; 14620 <argp_parse@@Base+0x1470>
   145fc:	ldr	r0, [pc, #32]	; 14624 <argp_parse@@Base+0x1474>
   14600:	pop	{r4, lr}
   14604:	b	11258 <printf@plt>
   14608:	strdeq	fp, [r2], -r4
   1460c:	andeq	sl, r1, r4, ror r1
   14610:	andeq	sl, r1, ip, lsl #3
   14614:			; <UNDEFINED> instruction: 0x00019ebc
   14618:	andeq	sl, r1, r0, lsr #3
   1461c:	andeq	sl, r1, r8, asr #3
   14620:	ldrdeq	sl, [r1], -ip
   14624:	strdeq	sl, [r1], -ip
   14628:	push	{r4, lr}
   1462c:	bl	14be4 <argp_parse@@Base+0x1a34>
   14630:	cmp	r0, #0
   14634:	popne	{r4, pc}
   14638:	bl	14b70 <argp_parse@@Base+0x19c0>
   1463c:	push	{r4, lr}
   14640:	bl	14be4 <argp_parse@@Base+0x1a34>
   14644:	cmp	r0, #0
   14648:	popne	{r4, pc}
   1464c:	bl	14b70 <argp_parse@@Base+0x19c0>
   14650:	push	{r4, lr}
   14654:	bl	14be4 <argp_parse@@Base+0x1a34>
   14658:	cmp	r0, #0
   1465c:	popne	{r4, pc}
   14660:	bl	14b70 <argp_parse@@Base+0x19c0>
   14664:	push	{r4, r5, r6, lr}
   14668:	mov	r5, r0
   1466c:	mov	r4, r1
   14670:	bl	14c10 <argp_parse@@Base+0x1a60>
   14674:	cmp	r0, #0
   14678:	popne	{r4, r5, r6, pc}
   1467c:	adds	r4, r4, #0
   14680:	movne	r4, #1
   14684:	cmp	r5, #0
   14688:	orreq	r4, r4, #1
   1468c:	cmp	r4, #0
   14690:	popeq	{r4, r5, r6, pc}
   14694:	bl	14b70 <argp_parse@@Base+0x19c0>
   14698:	push	{r4, lr}
   1469c:	cmp	r1, #0
   146a0:	orreq	r1, r1, #1
   146a4:	bl	14c10 <argp_parse@@Base+0x1a60>
   146a8:	cmp	r0, #0
   146ac:	popne	{r4, pc}
   146b0:	bl	14b70 <argp_parse@@Base+0x19c0>
   146b4:	push	{r4, r5, r6, lr}
   146b8:	mov	r6, r0
   146bc:	mov	r5, r1
   146c0:	mov	r4, r2
   146c4:	bl	18ba0 <argp_error@@Base+0xd38>
   146c8:	cmp	r0, #0
   146cc:	popne	{r4, r5, r6, pc}
   146d0:	cmp	r6, #0
   146d4:	beq	146e4 <argp_parse@@Base+0x1534>
   146d8:	cmp	r5, #0
   146dc:	cmpne	r4, #0
   146e0:	popeq	{r4, r5, r6, pc}
   146e4:	bl	14b70 <argp_parse@@Base+0x19c0>
   146e8:	b	146b4 <argp_parse@@Base+0x1504>
   146ec:	cmp	r2, #0
   146f0:	cmpne	r1, #0
   146f4:	moveq	r2, #1
   146f8:	moveq	r1, r2
   146fc:	push	{r4, lr}
   14700:	bl	18ba0 <argp_error@@Base+0xd38>
   14704:	cmp	r0, #0
   14708:	popne	{r4, pc}
   1470c:	bl	14b70 <argp_parse@@Base+0x19c0>
   14710:	mov	r2, r1
   14714:	mov	r1, r0
   14718:	mov	r0, #0
   1471c:	b	146b4 <argp_parse@@Base+0x1504>
   14720:	mov	r2, r1
   14724:	mov	r1, r0
   14728:	mov	r0, #0
   1472c:	b	146ec <argp_parse@@Base+0x153c>
   14730:	push	{r4, r5, r6, lr}
   14734:	subs	r6, r0, #0
   14738:	sub	sp, sp, #8
   1473c:	mov	r5, r1
   14740:	ldr	r4, [r1]
   14744:	beq	14780 <argp_parse@@Base+0x15d0>
   14748:	lsr	r1, r4, #1
   1474c:	add	r3, r1, #1
   14750:	mvn	r3, r3
   14754:	cmp	r4, r3
   14758:	bhi	1477c <argp_parse@@Base+0x15cc>
   1475c:	add	r4, r4, #1
   14760:	add	r4, r4, r1
   14764:	mov	r0, r6
   14768:	mov	r1, r4
   1476c:	bl	146b4 <argp_parse@@Base+0x1504>
   14770:	str	r4, [r5]
   14774:	add	sp, sp, #8
   14778:	pop	{r4, r5, r6, pc}
   1477c:	bl	14b70 <argp_parse@@Base+0x19c0>
   14780:	cmp	r4, #0
   14784:	bne	14764 <argp_parse@@Base+0x15b4>
   14788:	mov	r1, r2
   1478c:	mov	r0, #64	; 0x40
   14790:	str	r2, [sp, #4]
   14794:	bl	193b4 <argp_error@@Base+0x154c>
   14798:	ldr	r2, [sp, #4]
   1479c:	cmp	r0, #0
   147a0:	movne	r4, r0
   147a4:	addeq	r4, r0, #1
   147a8:	b	14764 <argp_parse@@Base+0x15b4>
   147ac:	mov	r2, #1
   147b0:	b	14730 <argp_parse@@Base+0x1580>
   147b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147b8:	sub	sp, sp, #12
   147bc:	ldr	r6, [r1]
   147c0:	mov	sl, r1
   147c4:	mov	r9, r0
   147c8:	asrs	r4, r6, #1
   147cc:	mov	r5, r2
   147d0:	mov	fp, r3
   147d4:	ldr	r7, [sp, #48]	; 0x30
   147d8:	bmi	14944 <argp_parse@@Base+0x1794>
   147dc:	mvn	r3, #-2147483648	; 0x80000000
   147e0:	sub	r3, r3, r4
   147e4:	cmp	r6, r3
   147e8:	movle	r3, #0
   147ec:	movgt	r3, #1
   147f0:	mvn	r8, fp
   147f4:	cmp	r3, #0
   147f8:	addeq	r4, r4, r6
   147fc:	mvnne	r4, #-2147483648	; 0x80000000
   14800:	lsr	r8, r8, #31
   14804:	cmp	fp, r4
   14808:	movge	r3, #0
   1480c:	andlt	r3, r8, #1
   14810:	cmp	r3, #0
   14814:	beq	148fc <argp_parse@@Base+0x174c>
   14818:	cmp	r7, #0
   1481c:	blt	149cc <argp_parse@@Base+0x181c>
   14820:	bne	149c4 <argp_parse@@Base+0x1814>
   14824:	mov	r2, #64	; 0x40
   14828:	mov	r1, r7
   1482c:	mov	r0, r2
   14830:	str	r2, [sp, #4]
   14834:	bl	195c0 <argp_error@@Base+0x1758>
   14838:	ldr	r2, [sp, #4]
   1483c:	mov	r1, r7
   14840:	mov	r4, r0
   14844:	mov	r0, r2
   14848:	bl	197e0 <argp_error@@Base+0x1978>
   1484c:	ldr	r2, [sp, #4]
   14850:	sub	r1, r2, r1
   14854:	cmp	r9, #0
   14858:	sub	r3, r4, r6
   1485c:	streq	r9, [sl]
   14860:	cmp	r3, r5
   14864:	bge	148e8 <argp_parse@@Base+0x1738>
   14868:	cmp	r5, #0
   1486c:	blt	14958 <argp_parse@@Base+0x17a8>
   14870:	cmp	r6, #0
   14874:	blt	14894 <argp_parse@@Base+0x16e4>
   14878:	mvn	r3, #-2147483648	; 0x80000000
   1487c:	sub	r3, r3, r5
   14880:	cmp	r6, r3
   14884:	movle	r3, #0
   14888:	movgt	r3, #1
   1488c:	cmp	r3, #0
   14890:	bne	14a54 <argp_parse@@Base+0x18a4>
   14894:	add	r5, r6, r5
   14898:	cmp	fp, r5
   1489c:	movge	r8, #0
   148a0:	andlt	r8, r8, #1
   148a4:	cmp	r8, #0
   148a8:	mov	r4, r5
   148ac:	bne	14a54 <argp_parse@@Base+0x18a4>
   148b0:	cmp	r7, #0
   148b4:	blt	1496c <argp_parse@@Base+0x17bc>
   148b8:	beq	148e4 <argp_parse@@Base+0x1734>
   148bc:	cmp	r5, #0
   148c0:	blt	14a14 <argp_parse@@Base+0x1864>
   148c4:	mov	r1, r7
   148c8:	mvn	r0, #-2147483648	; 0x80000000
   148cc:	bl	195c0 <argp_error@@Base+0x1758>
   148d0:	cmp	r5, r0
   148d4:	movle	r0, #0
   148d8:	movgt	r0, #1
   148dc:	cmp	r0, #0
   148e0:	bne	14a54 <argp_parse@@Base+0x18a4>
   148e4:	mul	r1, r5, r7
   148e8:	mov	r0, r9
   148ec:	bl	14664 <argp_parse@@Base+0x14b4>
   148f0:	str	r4, [sl]
   148f4:	add	sp, sp, #12
   148f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148fc:	cmp	r7, #0
   14900:	blt	14998 <argp_parse@@Base+0x17e8>
   14904:	beq	14824 <argp_parse@@Base+0x1674>
   14908:	cmp	r4, #0
   1490c:	blt	149d4 <argp_parse@@Base+0x1824>
   14910:	mov	r1, r7
   14914:	mvn	r0, #-2147483648	; 0x80000000
   14918:	bl	195c0 <argp_error@@Base+0x1758>
   1491c:	cmp	r0, r4
   14920:	movge	r0, #0
   14924:	movlt	r0, #1
   14928:	cmp	r0, #0
   1492c:	mvnne	r2, #-2147483648	; 0x80000000
   14930:	bne	14828 <argp_parse@@Base+0x1678>
   14934:	mul	r1, r7, r4
   14938:	cmp	r1, #63	; 0x3f
   1493c:	bgt	14854 <argp_parse@@Base+0x16a4>
   14940:	b	14824 <argp_parse@@Base+0x1674>
   14944:	rsb	r3, r4, #-2147483648	; 0x80000000
   14948:	cmp	r6, r3
   1494c:	movge	r3, #0
   14950:	movlt	r3, #1
   14954:	b	147f0 <argp_parse@@Base+0x1640>
   14958:	rsb	r3, r5, #-2147483648	; 0x80000000
   1495c:	cmp	r6, r3
   14960:	movge	r3, #0
   14964:	movlt	r3, #1
   14968:	b	1488c <argp_parse@@Base+0x16dc>
   1496c:	cmp	r5, #0
   14970:	blt	149f8 <argp_parse@@Base+0x1848>
   14974:	cmn	r7, #1
   14978:	beq	148e4 <argp_parse@@Base+0x1734>
   1497c:	mov	r1, r7
   14980:	mov	r0, #-2147483648	; 0x80000000
   14984:	bl	195c0 <argp_error@@Base+0x1758>
   14988:	cmp	r5, r0
   1498c:	movle	r0, #0
   14990:	movgt	r0, #1
   14994:	b	148dc <argp_parse@@Base+0x172c>
   14998:	cmp	r4, #0
   1499c:	blt	14a38 <argp_parse@@Base+0x1888>
   149a0:	cmn	r7, #1
   149a4:	beq	14934 <argp_parse@@Base+0x1784>
   149a8:	mov	r1, r7
   149ac:	mov	r0, #-2147483648	; 0x80000000
   149b0:	bl	195c0 <argp_error@@Base+0x1758>
   149b4:	cmp	r0, r4
   149b8:	movge	r0, #0
   149bc:	movlt	r0, #1
   149c0:	b	14928 <argp_parse@@Base+0x1778>
   149c4:	mov	r4, fp
   149c8:	b	14910 <argp_parse@@Base+0x1760>
   149cc:	mov	r4, fp
   149d0:	b	149a0 <argp_parse@@Base+0x17f0>
   149d4:	cmn	r4, #1
   149d8:	beq	14934 <argp_parse@@Base+0x1784>
   149dc:	mov	r1, r4
   149e0:	mov	r0, #-2147483648	; 0x80000000
   149e4:	bl	195c0 <argp_error@@Base+0x1758>
   149e8:	cmp	r7, r0
   149ec:	movle	r0, #0
   149f0:	movgt	r0, #1
   149f4:	b	14928 <argp_parse@@Base+0x1778>
   149f8:	mov	r1, r7
   149fc:	mvn	r0, #-2147483648	; 0x80000000
   14a00:	bl	195c0 <argp_error@@Base+0x1758>
   14a04:	cmp	r5, r0
   14a08:	movge	r0, #0
   14a0c:	movlt	r0, #1
   14a10:	b	148dc <argp_parse@@Base+0x172c>
   14a14:	cmn	r5, #1
   14a18:	beq	148e4 <argp_parse@@Base+0x1734>
   14a1c:	mov	r1, r5
   14a20:	mov	r0, #-2147483648	; 0x80000000
   14a24:	bl	195c0 <argp_error@@Base+0x1758>
   14a28:	cmp	r7, r0
   14a2c:	movle	r0, #0
   14a30:	movgt	r0, #1
   14a34:	b	148dc <argp_parse@@Base+0x172c>
   14a38:	mov	r1, r7
   14a3c:	mvn	r0, #-2147483648	; 0x80000000
   14a40:	bl	195c0 <argp_error@@Base+0x1758>
   14a44:	cmp	r0, r4
   14a48:	movle	r0, #0
   14a4c:	movgt	r0, #1
   14a50:	b	14928 <argp_parse@@Base+0x1778>
   14a54:	bl	14b70 <argp_parse@@Base+0x19c0>
   14a58:	push	{r4, lr}
   14a5c:	mov	r1, #1
   14a60:	bl	14b9c <argp_parse@@Base+0x19ec>
   14a64:	cmp	r0, #0
   14a68:	popne	{r4, pc}
   14a6c:	bl	14b70 <argp_parse@@Base+0x19c0>
   14a70:	push	{r4, lr}
   14a74:	mov	r1, #1
   14a78:	bl	14b9c <argp_parse@@Base+0x19ec>
   14a7c:	cmp	r0, #0
   14a80:	popne	{r4, pc}
   14a84:	bl	14b70 <argp_parse@@Base+0x19c0>
   14a88:	push	{r4, lr}
   14a8c:	bl	14b9c <argp_parse@@Base+0x19ec>
   14a90:	cmp	r0, #0
   14a94:	popne	{r4, pc}
   14a98:	bl	14b70 <argp_parse@@Base+0x19c0>
   14a9c:	push	{r4, lr}
   14aa0:	bl	14b9c <argp_parse@@Base+0x19ec>
   14aa4:	cmp	r0, #0
   14aa8:	popne	{r4, pc}
   14aac:	bl	14b70 <argp_parse@@Base+0x19c0>
   14ab0:	push	{r4, r5, r6, lr}
   14ab4:	mov	r6, r0
   14ab8:	mov	r0, r1
   14abc:	mov	r4, r1
   14ac0:	bl	14be4 <argp_parse@@Base+0x1a34>
   14ac4:	subs	r5, r0, #0
   14ac8:	beq	14ae0 <argp_parse@@Base+0x1930>
   14acc:	mov	r2, r4
   14ad0:	mov	r1, r6
   14ad4:	bl	112b8 <memcpy@plt>
   14ad8:	mov	r0, r5
   14adc:	pop	{r4, r5, r6, pc}
   14ae0:	bl	14b70 <argp_parse@@Base+0x19c0>
   14ae4:	push	{r4, r5, r6, lr}
   14ae8:	mov	r6, r0
   14aec:	mov	r0, r1
   14af0:	mov	r4, r1
   14af4:	bl	14be4 <argp_parse@@Base+0x1a34>
   14af8:	subs	r5, r0, #0
   14afc:	beq	14b14 <argp_parse@@Base+0x1964>
   14b00:	mov	r2, r4
   14b04:	mov	r1, r6
   14b08:	bl	112b8 <memcpy@plt>
   14b0c:	mov	r0, r5
   14b10:	pop	{r4, r5, r6, pc}
   14b14:	bl	14b70 <argp_parse@@Base+0x19c0>
   14b18:	push	{r4, r5, r6, lr}
   14b1c:	mov	r6, r0
   14b20:	add	r0, r1, #1
   14b24:	mov	r4, r1
   14b28:	bl	14be4 <argp_parse@@Base+0x1a34>
   14b2c:	subs	r5, r0, #0
   14b30:	beq	14b50 <argp_parse@@Base+0x19a0>
   14b34:	mov	r3, #0
   14b38:	mov	r1, r6
   14b3c:	strb	r3, [r5, r4]
   14b40:	mov	r2, r4
   14b44:	bl	112b8 <memcpy@plt>
   14b48:	mov	r0, r5
   14b4c:	pop	{r4, r5, r6, pc}
   14b50:	bl	14b70 <argp_parse@@Base+0x19c0>
   14b54:	push	{r4, lr}
   14b58:	mov	r4, r0
   14b5c:	bl	113e4 <strlen@plt>
   14b60:	add	r1, r0, #1
   14b64:	mov	r0, r4
   14b68:	pop	{r4, lr}
   14b6c:	b	14ab0 <argp_parse@@Base+0x1900>
   14b70:	ldr	r1, [pc, #24]	; 14b90 <argp_parse@@Base+0x19e0>
   14b74:	push	{r4, lr}
   14b78:	ldr	r0, [r1]
   14b7c:	ldr	r3, [pc, #16]	; 14b94 <argp_parse@@Base+0x19e4>
   14b80:	ldr	r2, [pc, #16]	; 14b98 <argp_parse@@Base+0x19e8>
   14b84:	mov	r1, #0
   14b88:	bl	11354 <error@plt>
   14b8c:	bl	11558 <abort@plt>
   14b90:	ldrdeq	fp, [r2], -r0
   14b94:	andeq	sl, r1, r4, asr r2
   14b98:	andeq	r9, r1, ip, lsr r9
   14b9c:	cmp	r1, #0
   14ba0:	cmpne	r0, #0
   14ba4:	moveq	r1, #1
   14ba8:	moveq	r0, r1
   14bac:	umull	r2, r3, r0, r1
   14bb0:	adds	r3, r3, #0
   14bb4:	movne	r3, #1
   14bb8:	cmp	r2, #0
   14bbc:	blt	14bcc <argp_parse@@Base+0x1a1c>
   14bc0:	cmp	r3, #0
   14bc4:	bne	14bcc <argp_parse@@Base+0x1a1c>
   14bc8:	b	11204 <calloc@plt>
   14bcc:	push	{r4, lr}
   14bd0:	bl	11408 <__errno_location@plt>
   14bd4:	mov	r3, #12
   14bd8:	str	r3, [r0]
   14bdc:	mov	r0, #0
   14be0:	pop	{r4, pc}
   14be4:	cmp	r0, #0
   14be8:	moveq	r0, #1
   14bec:	cmp	r0, #0
   14bf0:	blt	14bf8 <argp_parse@@Base+0x1a48>
   14bf4:	b	11384 <malloc@plt>
   14bf8:	push	{r4, lr}
   14bfc:	bl	11408 <__errno_location@plt>
   14c00:	mov	r3, #12
   14c04:	str	r3, [r0]
   14c08:	mov	r0, #0
   14c0c:	pop	{r4, pc}
   14c10:	cmp	r0, #0
   14c14:	beq	14c38 <argp_parse@@Base+0x1a88>
   14c18:	cmp	r1, #0
   14c1c:	push	{lr}		; (str lr, [sp, #-4]!)
   14c20:	sub	sp, sp, #12
   14c24:	beq	14c40 <argp_parse@@Base+0x1a90>
   14c28:	blt	14c58 <argp_parse@@Base+0x1aa8>
   14c2c:	add	sp, sp, #12
   14c30:	pop	{lr}		; (ldr lr, [sp], #4)
   14c34:	b	11300 <realloc@plt>
   14c38:	mov	r0, r1
   14c3c:	b	14be4 <argp_parse@@Base+0x1a34>
   14c40:	str	r1, [sp, #4]
   14c44:	bl	14048 <argp_parse@@Base+0xe98>
   14c48:	ldr	r3, [sp, #4]
   14c4c:	mov	r0, r3
   14c50:	add	sp, sp, #12
   14c54:	pop	{pc}		; (ldr pc, [sp], #4)
   14c58:	bl	11408 <__errno_location@plt>
   14c5c:	mov	r2, #12
   14c60:	mov	r3, #0
   14c64:	str	r2, [r0]
   14c68:	b	14c4c <argp_parse@@Base+0x1a9c>
   14c6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c70:	sub	sp, sp, #20
   14c74:	ldr	r5, [r0, #4]
   14c78:	ldr	r4, [r0]
   14c7c:	cmp	r5, #0
   14c80:	ldr	r7, [r0, #8]
   14c84:	beq	14d5c <argp_parse@@Base+0x1bac>
   14c88:	stmib	sp, {r1, r2, r3}
   14c8c:	mov	r6, #1
   14c90:	str	r4, [sp]
   14c94:	mov	r8, #0
   14c98:	b	14cb8 <argp_parse@@Base+0x1b08>
   14c9c:	mov	r3, r6
   14ca0:	subs	r5, r5, #1
   14ca4:	moveq	r3, #0
   14ca8:	andne	r3, r3, #1
   14cac:	cmp	r3, #0
   14cb0:	add	r4, r4, #24
   14cb4:	beq	14d24 <argp_parse@@Base+0x1b74>
   14cb8:	ldr	fp, [r4, #12]
   14cbc:	ands	r9, fp, #8
   14cc0:	movne	r3, r6
   14cc4:	movne	r9, r8
   14cc8:	bne	14ca0 <argp_parse@@Base+0x1af0>
   14ccc:	ldr	sl, [r4, #4]
   14cd0:	sub	r3, sl, #1
   14cd4:	cmp	r3, #254	; 0xfe
   14cd8:	bhi	14c9c <argp_parse@@Base+0x1aec>
   14cdc:	bl	113cc <__ctype_b_loc@plt>
   14ce0:	lsl	r3, sl, #1
   14ce4:	ldr	r1, [r0]
   14ce8:	ldrh	r3, [r1, r3]
   14cec:	tst	r3, #16384	; 0x4000
   14cf0:	beq	14c9c <argp_parse@@Base+0x1aec>
   14cf4:	ldrb	r3, [r7]
   14cf8:	cmp	r3, sl
   14cfc:	bne	14c9c <argp_parse@@Base+0x1aec>
   14d00:	ldr	r3, [sp]
   14d04:	tst	fp, #4
   14d08:	moveq	r3, r4
   14d0c:	tst	fp, #2
   14d10:	str	r3, [sp]
   14d14:	movne	r3, r6
   14d18:	beq	14d34 <argp_parse@@Base+0x1b84>
   14d1c:	add	r7, r7, #1
   14d20:	b	14ca0 <argp_parse@@Base+0x1af0>
   14d24:	mov	sl, r9
   14d28:	mov	r0, sl
   14d2c:	add	sp, sp, #20
   14d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d34:	ldr	r3, [sp, #12]
   14d38:	ldr	r2, [sp, #8]
   14d3c:	ldr	r1, [sp]
   14d40:	mov	r0, r4
   14d44:	ldr	ip, [sp, #4]
   14d48:	blx	ip
   14d4c:	clz	r3, r0
   14d50:	mov	r9, r0
   14d54:	lsr	r3, r3, #5
   14d58:	b	14d1c <argp_parse@@Base+0x1b6c>
   14d5c:	mov	sl, r5
   14d60:	b	14d28 <argp_parse@@Base+0x1b78>
   14d64:	push	{r4, r5, r6, lr}
   14d68:	ldr	r4, [r0, #12]
   14d6c:	ands	r4, r4, #8
   14d70:	movne	r4, #0
   14d74:	bne	14da0 <argp_parse@@Base+0x1bf0>
   14d78:	ldr	r5, [r0, #4]
   14d7c:	sub	r3, r5, #1
   14d80:	cmp	r3, #254	; 0xfe
   14d84:	bhi	14da0 <argp_parse@@Base+0x1bf0>
   14d88:	bl	113cc <__ctype_b_loc@plt>
   14d8c:	lsl	r3, r5, #1
   14d90:	ldr	r2, [r0]
   14d94:	ldrh	r3, [r2, r3]
   14d98:	tst	r3, #16384	; 0x4000
   14d9c:	movne	r4, r5
   14da0:	mov	r0, r4
   14da4:	pop	{r4, r5, r6, pc}
   14da8:	push	{r4, lr}
   14dac:	mov	r4, r0
   14db0:	bl	113cc <__ctype_b_loc@plt>
   14db4:	ldr	r2, [r4]
   14db8:	ldr	lr, [r0]
   14dbc:	b	14dc4 <argp_parse@@Base+0x1c14>
   14dc0:	str	r2, [r4]
   14dc4:	ldrb	r1, [r2]
   14dc8:	mov	r3, r2
   14dcc:	add	r2, r2, #1
   14dd0:	lsl	r0, r1, #1
   14dd4:	ldrh	ip, [lr, r0]
   14dd8:	tst	ip, #8192	; 0x2000
   14ddc:	bne	14dc0 <argp_parse@@Base+0x1c10>
   14de0:	subs	r0, r1, #45	; 0x2d
   14de4:	movne	r0, #1
   14de8:	cmp	r1, #0
   14dec:	popeq	{r4, pc}
   14df0:	tst	ip, #8
   14df4:	popne	{r4, pc}
   14df8:	add	r3, r3, #1
   14dfc:	str	r3, [r4]
   14e00:	ldrb	r2, [r3]
   14e04:	cmp	r2, #0
   14e08:	lsl	r2, r2, #1
   14e0c:	popeq	{r4, pc}
   14e10:	ldrh	r2, [lr, r2]
   14e14:	tst	r2, #8
   14e18:	beq	14df8 <argp_parse@@Base+0x1c48>
   14e1c:	pop	{r4, pc}
   14e20:	push	{r4, r5, r6, lr}
   14e24:	mov	r5, r0
   14e28:	ldr	r0, [r0, #12]
   14e2c:	cmp	r0, #0
   14e30:	beq	14e44 <argp_parse@@Base+0x1c94>
   14e34:	ldr	r4, [r0, #24]
   14e38:	bl	14048 <argp_parse@@Base+0xe98>
   14e3c:	subs	r0, r4, #0
   14e40:	bne	14e34 <argp_parse@@Base+0x1c84>
   14e44:	ldr	r3, [r5, #4]
   14e48:	cmp	r3, #0
   14e4c:	beq	14e60 <argp_parse@@Base+0x1cb0>
   14e50:	ldr	r0, [r5]
   14e54:	bl	14048 <argp_parse@@Base+0xe98>
   14e58:	ldr	r0, [r5, #8]
   14e5c:	bl	14048 <argp_parse@@Base+0xe98>
   14e60:	mov	r0, r5
   14e64:	pop	{r4, r5, r6, lr}
   14e68:	b	14048 <argp_parse@@Base+0xe98>
   14e6c:	push	{r4, r5, r6, r7, r8, lr}
   14e70:	mov	r5, r1
   14e74:	ldr	r3, [r0, #28]
   14e78:	ldr	r1, [r0, #24]
   14e7c:	ldr	r2, [r0, #16]
   14e80:	sub	r3, r3, r1
   14e84:	cmp	r3, r2
   14e88:	mov	r4, r0
   14e8c:	bhi	14ef8 <argp_parse@@Base+0x1d48>
   14e90:	ldr	r1, [r4, #20]
   14e94:	mov	r6, #32
   14e98:	cmp	r1, #0
   14e9c:	subge	r5, r5, r1
   14ea0:	mov	r7, #1
   14ea4:	cmp	r5, #0
   14ea8:	sub	r5, r5, #1
   14eac:	ble	14ed8 <argp_parse@@Base+0x1d28>
   14eb0:	ldr	r3, [r4, #28]
   14eb4:	ldr	r2, [r4, #32]
   14eb8:	cmp	r3, r2
   14ebc:	bcs	14edc <argp_parse@@Base+0x1d2c>
   14ec0:	add	r2, r3, #1
   14ec4:	cmp	r5, #0
   14ec8:	str	r2, [r4, #28]
   14ecc:	sub	r5, r5, #1
   14ed0:	strb	r6, [r3]
   14ed4:	bgt	14eb0 <argp_parse@@Base+0x1d00>
   14ed8:	pop	{r4, r5, r6, r7, r8, pc}
   14edc:	mov	r1, r7
   14ee0:	mov	r0, r4
   14ee4:	bl	192f8 <argp_error@@Base+0x1490>
   14ee8:	cmp	r0, #0
   14eec:	beq	14ea4 <argp_parse@@Base+0x1cf4>
   14ef0:	ldr	r3, [r4, #28]
   14ef4:	b	14ec0 <argp_parse@@Base+0x1d10>
   14ef8:	bl	18c68 <argp_error@@Base+0xe00>
   14efc:	b	14e90 <argp_parse@@Base+0x1ce0>
   14f00:	push	{r4, r5, r6, lr}
   14f04:	subs	r4, r2, #0
   14f08:	popeq	{r4, r5, r6, pc}
   14f0c:	ldr	ip, [r4, #20]
   14f10:	cmp	ip, #0
   14f14:	popeq	{r4, r5, r6, pc}
   14f18:	mov	r6, r1
   14f1c:	mov	r5, r0
   14f20:	mov	r1, r3
   14f24:	mov	r0, r4
   14f28:	bl	13eec <argp_parse@@Base+0xd3c>
   14f2c:	ldr	r3, [r4, #20]
   14f30:	mov	r1, r5
   14f34:	mov	r2, r0
   14f38:	mov	r0, r6
   14f3c:	pop	{r4, r5, r6, lr}
   14f40:	bx	r3
   14f44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f48:	mov	r5, r2
   14f4c:	sub	sp, sp, #12
   14f50:	mov	r2, r1
   14f54:	ldr	r3, [r5, #16]
   14f58:	ldr	r1, [pc, #488]	; 15148 <argp_parse@@Base+0x1f98>
   14f5c:	mov	r8, r0
   14f60:	bl	14f00 <argp_parse@@Base+0x1d50>
   14f64:	subs	r6, r0, #0
   14f68:	beq	15074 <argp_parse@@Base+0x1ec4>
   14f6c:	ldrb	r3, [r6]
   14f70:	cmp	r3, #0
   14f74:	beq	15068 <argp_parse@@Base+0x1eb8>
   14f78:	ldr	r3, [r5, #8]
   14f7c:	ldr	r3, [r3]
   14f80:	cmp	r3, #0
   14f84:	beq	14fac <argp_parse@@Base+0x1dfc>
   14f88:	ldr	r4, [r5, #4]
   14f8c:	ldr	r3, [r4, #28]
   14f90:	ldr	r2, [r4, #32]
   14f94:	cmp	r3, r2
   14f98:	bcs	1512c <argp_parse@@Base+0x1f7c>
   14f9c:	add	r1, r3, #1
   14fa0:	mov	r2, #10
   14fa4:	str	r1, [r4, #28]
   14fa8:	strb	r2, [r3]
   14fac:	ldr	sl, [pc, #408]	; 1514c <argp_parse@@Base+0x1f9c>
   14fb0:	ldr	r0, [r5, #4]
   14fb4:	ldr	r1, [sl, #24]
   14fb8:	bl	14e6c <argp_parse@@Base+0x1cbc>
   14fbc:	ldr	r4, [r5, #4]
   14fc0:	ldr	r9, [sl, #24]
   14fc4:	ldr	r7, [r4, #28]
   14fc8:	ldr	r3, [r4, #24]
   14fcc:	ldr	r2, [r4, #16]
   14fd0:	sub	r3, r7, r3
   14fd4:	cmp	r3, r2
   14fd8:	strls	r9, [r4, #4]
   14fdc:	movls	fp, r4
   14fe0:	bhi	150b0 <argp_parse@@Base+0x1f00>
   14fe4:	str	r9, [fp, #12]
   14fe8:	mov	r0, r6
   14fec:	bl	113e4 <strlen@plt>
   14ff0:	subs	r9, r0, #0
   14ff4:	beq	1502c <argp_parse@@Base+0x1e7c>
   14ff8:	ldr	r2, [r4, #32]
   14ffc:	add	r3, r7, r9
   15000:	cmp	r2, r3
   15004:	bcc	15094 <argp_parse@@Base+0x1ee4>
   15008:	mov	r2, r9
   1500c:	mov	r0, r7
   15010:	mov	r1, r6
   15014:	bl	112b8 <memcpy@plt>
   15018:	ldr	r3, [r4, #28]
   1501c:	add	r9, r3, r9
   15020:	str	r9, [r4, #28]
   15024:	ldr	r4, [r5, #4]
   15028:	ldr	r7, [r4, #28]
   1502c:	ldr	r3, [r4, #24]
   15030:	ldr	r2, [r4, #16]
   15034:	sub	r3, r7, r3
   15038:	cmp	r3, r2
   1503c:	movls	r9, r4
   15040:	bhi	150fc <argp_parse@@Base+0x1f4c>
   15044:	ldr	r2, [r9, #32]
   15048:	mov	r3, #0
   1504c:	cmp	r2, r7
   15050:	str	r3, [r4, #4]
   15054:	bls	15110 <argp_parse@@Base+0x1f60>
   15058:	add	r2, r7, #1
   1505c:	mov	r3, #10
   15060:	str	r2, [r9, #28]
   15064:	strb	r3, [r7]
   15068:	ldr	r3, [r5, #8]
   1506c:	mov	r2, #1
   15070:	str	r2, [r3, #4]
   15074:	cmp	r8, r6
   15078:	beq	1508c <argp_parse@@Base+0x1edc>
   1507c:	mov	r0, r6
   15080:	add	sp, sp, #12
   15084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15088:	b	14048 <argp_parse@@Base+0xe98>
   1508c:	add	sp, sp, #12
   15090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15094:	mov	r1, r9
   15098:	mov	r0, r4
   1509c:	bl	192f8 <argp_error@@Base+0x1490>
   150a0:	cmp	r0, #0
   150a4:	beq	15024 <argp_parse@@Base+0x1e74>
   150a8:	ldr	r7, [r4, #28]
   150ac:	b	15008 <argp_parse@@Base+0x1e58>
   150b0:	mov	r0, r4
   150b4:	str	r9, [sp, #4]
   150b8:	bl	18c68 <argp_error@@Base+0xe00>
   150bc:	ldr	fp, [r5, #4]
   150c0:	ldr	r3, [sp, #4]
   150c4:	ldr	r9, [sl, #24]
   150c8:	ldr	r7, [fp, #28]
   150cc:	ldr	r2, [fp, #24]
   150d0:	ldr	r1, [fp, #16]
   150d4:	sub	r2, r7, r2
   150d8:	cmp	r2, r1
   150dc:	str	r3, [r4, #4]
   150e0:	movls	r4, fp
   150e4:	bls	14fe4 <argp_parse@@Base+0x1e34>
   150e8:	mov	r0, fp
   150ec:	bl	18c68 <argp_error@@Base+0xe00>
   150f0:	ldr	r4, [r5, #4]
   150f4:	ldr	r7, [r4, #28]
   150f8:	b	14fe4 <argp_parse@@Base+0x1e34>
   150fc:	mov	r0, r4
   15100:	bl	18c68 <argp_error@@Base+0xe00>
   15104:	ldr	r9, [r5, #4]
   15108:	ldr	r7, [r9, #28]
   1510c:	b	15044 <argp_parse@@Base+0x1e94>
   15110:	mov	r1, #1
   15114:	mov	r0, r9
   15118:	bl	192f8 <argp_error@@Base+0x1490>
   1511c:	cmp	r0, #0
   15120:	beq	15068 <argp_parse@@Base+0x1eb8>
   15124:	ldr	r7, [r9, #28]
   15128:	b	15058 <argp_parse@@Base+0x1ea8>
   1512c:	mov	r1, #1
   15130:	mov	r0, r4
   15134:	bl	192f8 <argp_error@@Base+0x1490>
   15138:	cmp	r0, #0
   1513c:	beq	14fac <argp_parse@@Base+0x1dfc>
   15140:	ldr	r3, [r4, #28]
   15144:	b	14f9c <argp_parse@@Base+0x1dec>
   15148:	andeq	r0, r0, #3
   1514c:	andeq	fp, r2, r8, lsr #5
   15150:	ldr	r3, [r1, #12]
   15154:	push	{r4, r5, r6, r7, r8, lr}
   15158:	cmp	r3, #0
   1515c:	mov	r4, r1
   15160:	mov	r6, r0
   15164:	beq	1524c <argp_parse@@Base+0x209c>
   15168:	ldr	r3, [r1, #8]
   1516c:	ldr	r2, [r1]
   15170:	ldr	r7, [r3]
   15174:	ldr	r3, [r3, #4]
   15178:	ldr	r5, [r2, #16]
   1517c:	cmp	r3, #0
   15180:	cmpne	r7, #0
   15184:	beq	151bc <argp_parse@@Base+0x200c>
   15188:	ldr	r2, [r2, #12]
   1518c:	ldr	r3, [r7, #12]
   15190:	cmp	r2, r3
   15194:	beq	151bc <argp_parse@@Base+0x200c>
   15198:	ldr	r8, [r1, #4]
   1519c:	ldr	r3, [r8, #28]
   151a0:	ldr	r2, [r8, #32]
   151a4:	cmp	r3, r2
   151a8:	bcs	152dc <argp_parse@@Base+0x212c>
   151ac:	add	r1, r3, #1
   151b0:	mov	r2, #10
   151b4:	str	r1, [r8, #28]
   151b8:	strb	r2, [r3]
   151bc:	cmp	r5, #0
   151c0:	beq	152a8 <argp_parse@@Base+0x20f8>
   151c4:	ldr	r0, [r5]
   151c8:	cmp	r0, #0
   151cc:	beq	152a8 <argp_parse@@Base+0x20f8>
   151d0:	ldrb	r3, [r0]
   151d4:	cmp	r3, #0
   151d8:	beq	152a8 <argp_parse@@Base+0x20f8>
   151dc:	cmp	r7, #0
   151e0:	beq	15210 <argp_parse@@Base+0x2060>
   151e4:	ldr	r3, [r7, #16]
   151e8:	cmp	r5, r3
   151ec:	beq	152a8 <argp_parse@@Base+0x20f8>
   151f0:	cmp	r3, #0
   151f4:	beq	15210 <argp_parse@@Base+0x2060>
   151f8:	ldr	r3, [r3, #12]
   151fc:	cmp	r3, #0
   15200:	cmpne	r5, r3
   15204:	bne	151f8 <argp_parse@@Base+0x2048>
   15208:	cmp	r5, r3
   1520c:	beq	152a8 <argp_parse@@Base+0x20f8>
   15210:	ldr	r3, [r4, #4]
   15214:	ldr	r1, [r5, #16]
   15218:	mov	r2, r4
   1521c:	ldr	r7, [r3, #12]
   15220:	bl	14f44 <argp_parse@@Base+0x1d94>
   15224:	ldr	r5, [r4, #4]
   15228:	mov	r0, r5
   1522c:	ldr	r3, [r5, #28]
   15230:	ldr	r1, [r5, #24]
   15234:	ldr	r2, [r5, #16]
   15238:	sub	r3, r3, r1
   1523c:	cmp	r3, r2
   15240:	bhi	152d0 <argp_parse@@Base+0x2120>
   15244:	str	r7, [r5, #12]
   15248:	b	152ac <argp_parse@@Base+0x20fc>
   1524c:	ldr	r5, [r1, #4]
   15250:	ldr	r3, [r5, #28]
   15254:	ldr	r1, [r5, #32]
   15258:	add	r2, r3, #2
   1525c:	cmp	r1, r2
   15260:	bcc	1528c <argp_parse@@Base+0x20dc>
   15264:	ldr	r2, [pc, #140]	; 152f8 <argp_parse@@Base+0x2148>
   15268:	mov	r1, r6
   1526c:	ldrh	r2, [r2]
   15270:	strh	r2, [r3]
   15274:	ldr	r3, [r5, #28]
   15278:	ldr	r0, [r4, #4]
   1527c:	add	r3, r3, #2
   15280:	str	r3, [r5, #28]
   15284:	pop	{r4, r5, r6, r7, r8, lr}
   15288:	b	14e6c <argp_parse@@Base+0x1cbc>
   1528c:	mov	r1, #2
   15290:	mov	r0, r5
   15294:	bl	192f8 <argp_error@@Base+0x1490>
   15298:	cmp	r0, #0
   1529c:	beq	152c0 <argp_parse@@Base+0x2110>
   152a0:	ldr	r3, [r5, #28]
   152a4:	b	15264 <argp_parse@@Base+0x20b4>
   152a8:	ldr	r0, [r4, #4]
   152ac:	mov	r3, #0
   152b0:	str	r3, [r4, #12]
   152b4:	mov	r1, r6
   152b8:	pop	{r4, r5, r6, r7, r8, lr}
   152bc:	b	14e6c <argp_parse@@Base+0x1cbc>
   152c0:	ldr	r0, [r4, #4]
   152c4:	mov	r1, r6
   152c8:	pop	{r4, r5, r6, r7, r8, lr}
   152cc:	b	14e6c <argp_parse@@Base+0x1cbc>
   152d0:	bl	18c68 <argp_error@@Base+0xe00>
   152d4:	ldr	r0, [r4, #4]
   152d8:	b	15244 <argp_parse@@Base+0x2094>
   152dc:	mov	r1, #1
   152e0:	mov	r0, r8
   152e4:	bl	192f8 <argp_error@@Base+0x1490>
   152e8:	cmp	r0, #0
   152ec:	beq	151bc <argp_parse@@Base+0x200c>
   152f0:	ldr	r3, [r8, #28]
   152f4:	b	151ac <argp_parse@@Base+0x1ffc>
   152f8:	andeq	sl, r1, r0, lsl r3
   152fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15300:	mov	r7, r3
   15304:	ldr	sl, [r0, #12]
   15308:	sub	sp, sp, #36	; 0x24
   1530c:	ldr	r3, [r0, #16]
   15310:	cmp	sl, #0
   15314:	mov	fp, r0
   15318:	mov	r6, r2
   1531c:	str	r3, [sp, #16]
   15320:	mov	r9, r1
   15324:	ldr	r8, [sp, #72]	; 0x48
   15328:	ldr	r5, [sp, #76]	; 0x4c
   1532c:	beq	156fc <argp_parse@@Base+0x254c>
   15330:	mov	r1, #11
   15334:	mov	r0, sl
   15338:	bl	113f0 <strchr@plt>
   1533c:	cmp	r6, #0
   15340:	bne	15618 <argp_parse@@Base+0x2468>
   15344:	cmp	r0, #0
   15348:	ldr	r3, [fp, #20]
   1534c:	beq	15854 <argp_parse@@Base+0x26a4>
   15350:	cmp	r3, #0
   15354:	sub	r4, r0, sl
   15358:	beq	157ec <argp_parse@@Base+0x263c>
   1535c:	cmp	r4, #0
   15360:	beq	1578c <argp_parse@@Base+0x25dc>
   15364:	mov	r0, sl
   15368:	mov	r1, r4
   1536c:	bl	112ac <strndup@plt>
   15370:	mov	r3, #1
   15374:	str	r3, [sp, #24]
   15378:	mov	sl, r0
   1537c:	adds	r3, r0, #0
   15380:	movne	r3, #1
   15384:	str	r3, [sp, #20]
   15388:	mov	r1, r9
   1538c:	mov	r0, fp
   15390:	bl	13eec <argp_parse@@Base+0xd3c>
   15394:	ldr	r3, [fp, #20]
   15398:	str	r0, [sp, #12]
   1539c:	ldr	r0, [pc, #1272]	; 1589c <argp_parse@@Base+0x26ec>
   153a0:	ldr	r2, [sp, #12]
   153a4:	mov	r1, sl
   153a8:	blx	r3
   153ac:	subs	r3, r0, #0
   153b0:	beq	1573c <argp_parse@@Base+0x258c>
   153b4:	cmp	r7, #0
   153b8:	beq	153dc <argp_parse@@Base+0x222c>
   153bc:	ldr	r2, [r5, #28]
   153c0:	ldr	r1, [r5, #32]
   153c4:	cmp	r2, r1
   153c8:	bcs	15744 <argp_parse@@Base+0x2594>
   153cc:	add	r0, r2, #1
   153d0:	mov	r1, #10
   153d4:	str	r0, [r5, #28]
   153d8:	strb	r1, [r2]
   153dc:	ldr	r2, [sp, #24]
   153e0:	cmp	r3, sl
   153e4:	movne	r2, #0
   153e8:	andeq	r2, r2, #1
   153ec:	cmp	r2, #0
   153f0:	beq	1565c <argp_parse@@Base+0x24ac>
   153f4:	ldr	r0, [r5, #28]
   153f8:	ldr	r1, [r5, #32]
   153fc:	add	r2, r0, r4
   15400:	cmp	r1, r2
   15404:	bcs	156bc <argp_parse@@Base+0x250c>
   15408:	mov	r1, r4
   1540c:	mov	r0, r5
   15410:	str	r3, [sp, #24]
   15414:	bl	192f8 <argp_error@@Base+0x1490>
   15418:	ldr	r3, [sp, #24]
   1541c:	cmp	r0, #0
   15420:	bne	156b8 <argp_parse@@Base+0x2508>
   15424:	ldr	r4, [r5, #28]
   15428:	ldr	r1, [r5, #24]
   1542c:	ldr	r2, [r5, #16]
   15430:	sub	r4, r4, r1
   15434:	cmp	r4, r2
   15438:	bhi	156e0 <argp_parse@@Base+0x2530>
   1543c:	ldr	r2, [r5, #20]
   15440:	ldr	r1, [r5, #4]
   15444:	bic	r2, r2, r2, asr #31
   15448:	cmp	r1, r2
   1544c:	bcs	15470 <argp_parse@@Base+0x22c0>
   15450:	ldr	r2, [r5, #28]
   15454:	ldr	r1, [r5, #32]
   15458:	cmp	r2, r1
   1545c:	bcs	15768 <argp_parse@@Base+0x25b8>
   15460:	add	r0, r2, #1
   15464:	mov	r1, #10
   15468:	str	r0, [r5, #28]
   1546c:	strb	r1, [r2]
   15470:	cmp	r3, sl
   15474:	moveq	r4, #1
   15478:	beq	15488 <argp_parse@@Base+0x22d8>
   1547c:	mov	r0, r3
   15480:	bl	14048 <argp_parse@@Base+0xe98>
   15484:	mov	r4, #1
   15488:	ldr	r3, [sp, #20]
   1548c:	cmp	r3, #0
   15490:	beq	154a8 <argp_parse@@Base+0x22f8>
   15494:	ldr	r3, [fp, #20]
   15498:	cmp	r3, #0
   1549c:	beq	1558c <argp_parse@@Base+0x23dc>
   154a0:	mov	r0, sl
   154a4:	bl	14048 <argp_parse@@Base+0xe98>
   154a8:	cmp	r6, #0
   154ac:	beq	1558c <argp_parse@@Base+0x23dc>
   154b0:	ldr	r3, [fp, #20]
   154b4:	cmp	r3, #0
   154b8:	beq	1558c <argp_parse@@Base+0x23dc>
   154bc:	ldr	r2, [sp, #12]
   154c0:	mov	r1, #0
   154c4:	ldr	r0, [pc, #980]	; 158a0 <argp_parse@@Base+0x26f0>
   154c8:	blx	r3
   154cc:	subs	sl, r0, #0
   154d0:	beq	1558c <argp_parse@@Base+0x23dc>
   154d4:	orrs	r3, r7, r4
   154d8:	beq	154fc <argp_parse@@Base+0x234c>
   154dc:	ldr	r3, [r5, #28]
   154e0:	ldr	r2, [r5, #32]
   154e4:	cmp	r3, r2
   154e8:	bcs	15824 <argp_parse@@Base+0x2674>
   154ec:	add	r1, r3, #1
   154f0:	mov	r2, #10
   154f4:	str	r1, [r5, #28]
   154f8:	strb	r2, [r3]
   154fc:	mov	r0, sl
   15500:	bl	113e4 <strlen@plt>
   15504:	subs	r4, r0, #0
   15508:	beq	15534 <argp_parse@@Base+0x2384>
   1550c:	ldr	r0, [r5, #28]
   15510:	ldr	r2, [r5, #32]
   15514:	add	r3, r0, r4
   15518:	cmp	r2, r3
   1551c:	bcs	1579c <argp_parse@@Base+0x25ec>
   15520:	mov	r1, r4
   15524:	mov	r0, r5
   15528:	bl	192f8 <argp_error@@Base+0x1490>
   1552c:	cmp	r0, #0
   15530:	bne	15798 <argp_parse@@Base+0x25e8>
   15534:	mov	r0, sl
   15538:	bl	14048 <argp_parse@@Base+0xe98>
   1553c:	ldr	r3, [r5, #28]
   15540:	ldr	r1, [r5, #24]
   15544:	ldr	r2, [r5, #16]
   15548:	sub	r3, r3, r1
   1554c:	cmp	r3, r2
   15550:	bhi	157b8 <argp_parse@@Base+0x2608>
   15554:	ldr	r3, [r5, #20]
   15558:	ldr	r2, [r5, #4]
   1555c:	bic	r3, r3, r3, asr #31
   15560:	cmp	r2, r3
   15564:	bcs	156f4 <argp_parse@@Base+0x2544>
   15568:	ldr	r3, [r5, #28]
   1556c:	ldr	r2, [r5, #32]
   15570:	cmp	r3, r2
   15574:	bcs	15808 <argp_parse@@Base+0x2658>
   15578:	mov	r4, #1
   1557c:	add	r2, r3, r4
   15580:	str	r2, [r5, #28]
   15584:	mov	r2, #10
   15588:	strb	r2, [r3]
   1558c:	ldr	fp, [sp, #16]
   15590:	cmp	fp, #0
   15594:	beq	1560c <argp_parse@@Base+0x245c>
   15598:	ldr	r3, [fp]
   1559c:	cmp	r3, #0
   155a0:	beq	1560c <argp_parse@@Base+0x245c>
   155a4:	eor	r2, r4, #1
   155a8:	and	r2, r2, #1
   155ac:	clz	sl, r8
   155b0:	lsr	sl, sl, #5
   155b4:	orrs	r2, sl, r2
   155b8:	bne	155d4 <argp_parse@@Base+0x2424>
   155bc:	b	15840 <argp_parse@@Base+0x2690>
   155c0:	cmp	r4, #0
   155c4:	movne	r2, sl
   155c8:	orreq	r2, sl, #1
   155cc:	cmp	r2, #0
   155d0:	beq	1560c <argp_parse@@Base+0x245c>
   155d4:	orrs	r2, r7, r4
   155d8:	mov	r0, r3
   155dc:	str	r5, [sp, #4]
   155e0:	movne	r3, #1
   155e4:	moveq	r3, #0
   155e8:	str	r8, [sp]
   155ec:	mov	r2, r6
   155f0:	mov	r1, r9
   155f4:	bl	152fc <argp_parse@@Base+0x214c>
   155f8:	ldr	r3, [fp, #16]
   155fc:	add	fp, fp, #16
   15600:	cmp	r3, #0
   15604:	orr	r4, r4, r0
   15608:	bne	155c0 <argp_parse@@Base+0x2410>
   1560c:	mov	r0, r4
   15610:	add	sp, sp, #36	; 0x24
   15614:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15618:	cmp	r0, #0
   1561c:	addne	sl, r0, #1
   15620:	beq	157e4 <argp_parse@@Base+0x2634>
   15624:	ldr	r3, [fp, #20]
   15628:	cmp	r3, #0
   1562c:	beq	157c4 <argp_parse@@Base+0x2614>
   15630:	mov	r3, #0
   15634:	mov	r1, r9
   15638:	mov	r0, fp
   1563c:	mov	r4, r3
   15640:	str	r3, [sp, #20]
   15644:	bl	13eec <argp_parse@@Base+0xd3c>
   15648:	str	r4, [sp, #24]
   1564c:	ldr	r3, [fp, #20]
   15650:	str	r0, [sp, #12]
   15654:	ldr	r0, [pc, #584]	; 158a4 <argp_parse@@Base+0x26f4>
   15658:	b	153a0 <argp_parse@@Base+0x21f0>
   1565c:	mov	r0, r3
   15660:	str	r3, [sp, #24]
   15664:	bl	113e4 <strlen@plt>
   15668:	ldr	r3, [sp, #24]
   1566c:	subs	r4, r0, #0
   15670:	beq	15424 <argp_parse@@Base+0x2274>
   15674:	ldr	r0, [r5, #28]
   15678:	ldr	r1, [r5, #32]
   1567c:	add	r2, r0, r4
   15680:	cmp	r1, r2
   15684:	bcs	156a8 <argp_parse@@Base+0x24f8>
   15688:	mov	r1, r4
   1568c:	mov	r0, r5
   15690:	str	r3, [sp, #24]
   15694:	bl	192f8 <argp_error@@Base+0x1490>
   15698:	ldr	r3, [sp, #24]
   1569c:	cmp	r0, #0
   156a0:	beq	15424 <argp_parse@@Base+0x2274>
   156a4:	ldr	r0, [r5, #28]
   156a8:	mov	r2, r4
   156ac:	mov	r1, r3
   156b0:	str	r3, [sp, #24]
   156b4:	b	156c8 <argp_parse@@Base+0x2518>
   156b8:	ldr	r0, [r5, #28]
   156bc:	mov	r2, r4
   156c0:	mov	r1, sl
   156c4:	str	r3, [sp, #24]
   156c8:	bl	112b8 <memcpy@plt>
   156cc:	ldr	r2, [r5, #28]
   156d0:	ldr	r3, [sp, #24]
   156d4:	add	r4, r2, r4
   156d8:	str	r4, [r5, #28]
   156dc:	b	15428 <argp_parse@@Base+0x2278>
   156e0:	mov	r0, r5
   156e4:	str	r3, [sp, #24]
   156e8:	bl	18c68 <argp_error@@Base+0xe00>
   156ec:	ldr	r3, [sp, #24]
   156f0:	b	1543c <argp_parse@@Base+0x228c>
   156f4:	mov	r4, #1
   156f8:	b	1558c <argp_parse@@Base+0x23dc>
   156fc:	ldr	r4, [r0, #20]
   15700:	cmp	r4, #0
   15704:	beq	1584c <argp_parse@@Base+0x269c>
   15708:	bl	13eec <argp_parse@@Base+0xd3c>
   1570c:	cmp	r6, #0
   15710:	ldr	r3, [fp, #20]
   15714:	strne	sl, [sp, #20]
   15718:	strne	sl, [sp, #24]
   1571c:	movne	r4, sl
   15720:	streq	r6, [sp, #20]
   15724:	streq	r6, [sp, #24]
   15728:	moveq	r4, r6
   1572c:	str	r0, [sp, #12]
   15730:	ldrne	r0, [pc, #364]	; 158a4 <argp_parse@@Base+0x26f4>
   15734:	ldreq	r0, [pc, #352]	; 1589c <argp_parse@@Base+0x26ec>
   15738:	b	153a0 <argp_parse@@Base+0x21f0>
   1573c:	mov	r4, r3
   15740:	b	15488 <argp_parse@@Base+0x22d8>
   15744:	mov	r1, #1
   15748:	mov	r0, r5
   1574c:	str	r3, [sp, #28]
   15750:	bl	192f8 <argp_error@@Base+0x1490>
   15754:	ldr	r3, [sp, #28]
   15758:	cmp	r0, #0
   1575c:	beq	153dc <argp_parse@@Base+0x222c>
   15760:	ldr	r2, [r5, #28]
   15764:	b	153cc <argp_parse@@Base+0x221c>
   15768:	mov	r1, #1
   1576c:	mov	r0, r5
   15770:	str	r3, [sp, #24]
   15774:	bl	192f8 <argp_error@@Base+0x1490>
   15778:	ldr	r3, [sp, #24]
   1577c:	cmp	r0, #0
   15780:	beq	15470 <argp_parse@@Base+0x22c0>
   15784:	ldr	r2, [r5, #28]
   15788:	b	15460 <argp_parse@@Base+0x22b0>
   1578c:	str	r4, [sp, #20]
   15790:	str	r4, [sp, #24]
   15794:	b	15388 <argp_parse@@Base+0x21d8>
   15798:	ldr	r0, [r5, #28]
   1579c:	mov	r2, r4
   157a0:	mov	r1, sl
   157a4:	bl	112b8 <memcpy@plt>
   157a8:	ldr	r3, [r5, #28]
   157ac:	add	r4, r3, r4
   157b0:	str	r4, [r5, #28]
   157b4:	b	15534 <argp_parse@@Base+0x2384>
   157b8:	mov	r0, r5
   157bc:	bl	18c68 <argp_error@@Base+0xe00>
   157c0:	b	15554 <argp_parse@@Base+0x23a4>
   157c4:	cmp	sl, #0
   157c8:	beq	15848 <argp_parse@@Base+0x2698>
   157cc:	str	r3, [sp, #20]
   157d0:	str	r3, [sp, #24]
   157d4:	mov	r4, r3
   157d8:	str	r3, [sp, #12]
   157dc:	mov	r3, sl
   157e0:	b	153b4 <argp_parse@@Base+0x2204>
   157e4:	mov	sl, r0
   157e8:	b	15624 <argp_parse@@Base+0x2474>
   157ec:	adds	r3, r4, #0
   157f0:	movne	r3, #1
   157f4:	str	r3, [sp, #24]
   157f8:	str	r3, [sp, #20]
   157fc:	str	r6, [sp, #12]
   15800:	mov	r3, sl
   15804:	b	153b4 <argp_parse@@Base+0x2204>
   15808:	mov	r1, #1
   1580c:	mov	r0, r5
   15810:	bl	192f8 <argp_error@@Base+0x1490>
   15814:	cmp	r0, #0
   15818:	beq	156f4 <argp_parse@@Base+0x2544>
   1581c:	ldr	r3, [r5, #28]
   15820:	b	15578 <argp_parse@@Base+0x23c8>
   15824:	mov	r1, #1
   15828:	mov	r0, r5
   1582c:	bl	192f8 <argp_error@@Base+0x1490>
   15830:	cmp	r0, #0
   15834:	beq	154fc <argp_parse@@Base+0x234c>
   15838:	ldr	r3, [r5, #28]
   1583c:	b	154ec <argp_parse@@Base+0x233c>
   15840:	mov	r4, #1
   15844:	b	1560c <argp_parse@@Base+0x245c>
   15848:	mov	r4, sl
   1584c:	str	r4, [sp, #12]
   15850:	b	154a8 <argp_parse@@Base+0x22f8>
   15854:	cmp	r3, #0
   15858:	beq	15884 <argp_parse@@Base+0x26d4>
   1585c:	mov	r1, r9
   15860:	mov	r0, fp
   15864:	bl	13eec <argp_parse@@Base+0xd3c>
   15868:	mov	r4, r6
   1586c:	ldr	r3, [fp, #20]
   15870:	str	r6, [sp, #20]
   15874:	str	r6, [sp, #24]
   15878:	str	r0, [sp, #12]
   1587c:	ldr	r0, [pc, #24]	; 1589c <argp_parse@@Base+0x26ec>
   15880:	b	153a0 <argp_parse@@Base+0x21f0>
   15884:	mov	r3, sl
   15888:	str	r6, [sp, #20]
   1588c:	str	r6, [sp, #24]
   15890:	mov	r4, r6
   15894:	str	r6, [sp, #12]
   15898:	b	153b4 <argp_parse@@Base+0x2204>
   1589c:	andeq	r0, r0, #1
   158a0:	andeq	r0, r0, #4
   158a4:	andeq	r0, r0, #2
   158a8:	ldr	r3, [r0, #12]
   158ac:	ldr	r2, [r1, #12]
   158b0:	push	{r4, r5, r6, lr}
   158b4:	cmp	r3, r2
   158b8:	beq	15908 <argp_parse@@Base+0x2758>
   158bc:	mov	r5, r1
   158c0:	mov	r4, r0
   158c4:	mov	r1, r2
   158c8:	mov	r0, r3
   158cc:	bl	158a8 <argp_parse@@Base+0x26f8>
   158d0:	cmp	r0, #0
   158d4:	popne	{r4, r5, r6, pc}
   158d8:	ldr	r3, [r5, #8]
   158dc:	ldr	r0, [r4, #8]
   158e0:	mvn	r2, r3
   158e4:	lsr	r2, r2, #31
   158e8:	cmp	r2, r0, lsr #31
   158ec:	subne	r0, r0, r3
   158f0:	subeq	r0, r3, r0
   158f4:	cmp	r0, #0
   158f8:	ldreq	r3, [r5, #4]
   158fc:	ldreq	r0, [r4, #4]
   15900:	subeq	r0, r3, r0
   15904:	pop	{r4, r5, r6, pc}
   15908:	ldr	r3, [r1, #8]
   1590c:	ldr	r2, [r0, #8]
   15910:	mvn	ip, r3
   15914:	ldr	lr, [r1, #4]
   15918:	lsr	ip, ip, #31
   1591c:	cmp	ip, r2, lsr #31
   15920:	ldr	r1, [r0, #4]
   15924:	subne	r0, r2, r3
   15928:	subeq	r0, r3, r2
   1592c:	cmp	r0, #0
   15930:	subeq	r0, lr, r1
   15934:	pop	{r4, r5, r6, pc}
   15938:	push	{r4, r5, r6, r7, r8, r9, lr}
   1593c:	sub	sp, sp, #12
   15940:	ldr	lr, [r0, #16]
   15944:	cmp	lr, #0
   15948:	movne	r2, lr
   1594c:	bne	15958 <argp_parse@@Base+0x27a8>
   15950:	b	15c1c <argp_parse@@Base+0x2a6c>
   15954:	mov	r2, r3
   15958:	ldr	r3, [r2, #12]
   1595c:	cmp	r3, #0
   15960:	bne	15954 <argp_parse@@Base+0x27a4>
   15964:	ldr	ip, [r1, #16]
   15968:	ldr	r4, [r2, #8]
   1596c:	cmp	ip, #0
   15970:	movne	r2, ip
   15974:	bne	15980 <argp_parse@@Base+0x27d0>
   15978:	b	15c30 <argp_parse@@Base+0x2a80>
   1597c:	mov	r2, r3
   15980:	ldr	r3, [r2, #12]
   15984:	cmp	r3, #0
   15988:	bne	1597c <argp_parse@@Base+0x27cc>
   1598c:	ldr	r3, [r2, #8]
   15990:	mvn	r2, r3
   15994:	lsr	r2, r2, #31
   15998:	cmp	r2, r4, lsr #31
   1599c:	subne	r4, r4, r3
   159a0:	subeq	r4, r3, r4
   159a4:	cmp	r4, #0
   159a8:	bne	15a10 <argp_parse@@Base+0x2860>
   159ac:	adds	r4, ip, #0
   159b0:	movne	r4, #1
   159b4:	cmp	lr, #0
   159b8:	rsbeq	r4, r4, #0
   159bc:	rsbne	r4, r4, #1
   159c0:	cmp	r4, #0
   159c4:	bne	15a10 <argp_parse@@Base+0x2860>
   159c8:	cmp	lr, #0
   159cc:	mov	r5, r1
   159d0:	mov	r6, r0
   159d4:	beq	15a2c <argp_parse@@Base+0x287c>
   159d8:	ldr	r0, [lr, #20]
   159dc:	ldr	r2, [ip, #20]
   159e0:	cmp	r0, r2
   159e4:	ble	15bf0 <argp_parse@@Base+0x2a40>
   159e8:	mov	r0, lr
   159ec:	ldr	r0, [r0, #12]
   159f0:	ldr	r3, [r0, #20]
   159f4:	cmp	r2, r3
   159f8:	blt	159ec <argp_parse@@Base+0x283c>
   159fc:	mov	r1, ip
   15a00:	bl	158a8 <argp_parse@@Base+0x26f8>
   15a04:	cmp	r0, #0
   15a08:	movne	r4, r0
   15a0c:	moveq	r4, #1
   15a10:	mov	r0, r4
   15a14:	add	sp, sp, #12
   15a18:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15a1c:	mov	r0, lr
   15a20:	bl	158a8 <argp_parse@@Base+0x26f8>
   15a24:	subs	r4, r0, #0
   15a28:	bne	15a10 <argp_parse@@Base+0x2860>
   15a2c:	ldr	r4, [r5, #12]
   15a30:	ldr	r3, [r6, #12]
   15a34:	mvn	r2, r4
   15a38:	lsr	r2, r2, #31
   15a3c:	cmp	r2, r3, lsr #31
   15a40:	subne	r4, r3, r4
   15a44:	subeq	r4, r4, r3
   15a48:	cmp	r4, #0
   15a4c:	bne	15a10 <argp_parse@@Base+0x2860>
   15a50:	ldr	r2, [r6, #4]
   15a54:	ldr	lr, [r6]
   15a58:	cmp	r2, #0
   15a5c:	beq	15a88 <argp_parse@@Base+0x28d8>
   15a60:	add	r3, lr, #24
   15a64:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15a68:	cmp	r1, #0
   15a6c:	beq	15a7c <argp_parse@@Base+0x28cc>
   15a70:	ldr	r0, [r3, #-12]
   15a74:	tst	r0, #2
   15a78:	beq	15c38 <argp_parse@@Base+0x2a88>
   15a7c:	subs	r2, r2, #1
   15a80:	add	r3, r3, #24
   15a84:	bne	15a64 <argp_parse@@Base+0x28b4>
   15a88:	ldr	r2, [r5, #4]
   15a8c:	mov	ip, #0
   15a90:	cmp	r2, ip
   15a94:	str	ip, [sp]
   15a98:	ldr	r3, [r5]
   15a9c:	beq	15ca8 <argp_parse@@Base+0x2af8>
   15aa0:	add	r3, r3, #24
   15aa4:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15aa8:	cmp	r1, #0
   15aac:	beq	15abc <argp_parse@@Base+0x290c>
   15ab0:	ldr	r0, [r3, #-12]
   15ab4:	tst	r0, #2
   15ab8:	beq	15acc <argp_parse@@Base+0x291c>
   15abc:	subs	r2, r2, #1
   15ac0:	add	r3, r3, #24
   15ac4:	bne	15aa4 <argp_parse@@Base+0x28f4>
   15ac8:	mov	r1, r2
   15acc:	ldr	r3, [lr, #12]
   15ad0:	str	r1, [sp, #4]
   15ad4:	ands	r3, ip, r3, lsr #3
   15ad8:	beq	15ca0 <argp_parse@@Base+0x2af0>
   15adc:	mov	r0, sp
   15ae0:	bl	14da8 <argp_parse@@Base+0x1bf8>
   15ae4:	ldr	r3, [r5]
   15ae8:	cmp	r0, #0
   15aec:	bne	15c8c <argp_parse@@Base+0x2adc>
   15af0:	ldr	r3, [r3, #12]
   15af4:	tst	r3, #8
   15af8:	beq	15b20 <argp_parse@@Base+0x2970>
   15afc:	ldr	r3, [sp, #4]
   15b00:	cmp	r3, #0
   15b04:	beq	15b20 <argp_parse@@Base+0x2970>
   15b08:	add	r0, sp, #4
   15b0c:	bl	14da8 <argp_parse@@Base+0x1bf8>
   15b10:	cmp	r0, #0
   15b14:	subne	r4, r4, #1
   15b18:	cmp	r4, #0
   15b1c:	bne	15a10 <argp_parse@@Base+0x2860>
   15b20:	ldr	r2, [r6, #20]
   15b24:	mov	r0, r6
   15b28:	mov	r3, #0
   15b2c:	ldr	r2, [r2, #24]
   15b30:	ldr	r1, [pc, #408]	; 15cd0 <argp_parse@@Base+0x2b20>
   15b34:	bl	14c6c <argp_parse@@Base+0x1abc>
   15b38:	ldr	r2, [r5, #20]
   15b3c:	mov	r3, #0
   15b40:	ldr	r1, [pc, #392]	; 15cd0 <argp_parse@@Base+0x2b20>
   15b44:	ldr	r2, [r2, #24]
   15b48:	uxtb	r6, r0
   15b4c:	mov	r0, r5
   15b50:	bl	14c6c <argp_parse@@Base+0x1abc>
   15b54:	cmp	r6, #0
   15b58:	lslne	r4, r6, #2
   15b5c:	movne	r7, r6
   15b60:	uxtb	r5, r0
   15b64:	beq	15c70 <argp_parse@@Base+0x2ac0>
   15b68:	cmp	r5, #0
   15b6c:	lslne	r9, r5, #2
   15b70:	movne	r8, r5
   15b74:	beq	15c54 <argp_parse@@Base+0x2aa4>
   15b78:	bl	113a8 <__ctype_tolower_loc@plt>
   15b7c:	ldr	r3, [r0]
   15b80:	ldr	r4, [r3, r4]
   15b84:	ldr	r3, [r3, r9]
   15b88:	subs	r4, r4, r3
   15b8c:	bne	15a10 <argp_parse@@Base+0x2860>
   15b90:	subs	r4, r8, r7
   15b94:	bne	15a10 <argp_parse@@Base+0x2860>
   15b98:	adds	r4, r5, #0
   15b9c:	movne	r4, #1
   15ba0:	cmp	r6, #0
   15ba4:	rsbeq	r4, r4, #0
   15ba8:	rsbne	r4, r4, #1
   15bac:	cmp	r4, #0
   15bb0:	bne	15a10 <argp_parse@@Base+0x2860>
   15bb4:	cmp	r6, #0
   15bb8:	bne	15a10 <argp_parse@@Base+0x2860>
   15bbc:	ldm	sp, {r0, r1}
   15bc0:	adds	r4, r1, #0
   15bc4:	movne	r4, #1
   15bc8:	cmp	r0, #0
   15bcc:	rsbeq	r4, r4, #0
   15bd0:	rsbne	r4, r4, #1
   15bd4:	cmp	r4, #0
   15bd8:	bne	15a10 <argp_parse@@Base+0x2860>
   15bdc:	cmp	r0, #0
   15be0:	beq	15a10 <argp_parse@@Base+0x2860>
   15be4:	bl	11318 <strcasecmp@plt>
   15be8:	mov	r4, r0
   15bec:	b	15a10 <argp_parse@@Base+0x2860>
   15bf0:	mov	r1, ip
   15bf4:	bge	15a1c <argp_parse@@Base+0x286c>
   15bf8:	ldr	r1, [r1, #12]
   15bfc:	ldr	r3, [r1, #20]
   15c00:	cmp	r0, r3
   15c04:	blt	15bf8 <argp_parse@@Base+0x2a48>
   15c08:	mov	r0, lr
   15c0c:	bl	158a8 <argp_parse@@Base+0x26f8>
   15c10:	subs	r4, r0, #0
   15c14:	mvneq	r4, #0
   15c18:	b	15a10 <argp_parse@@Base+0x2860>
   15c1c:	ldr	ip, [r1, #16]
   15c20:	ldr	r4, [r0, #12]
   15c24:	cmp	ip, #0
   15c28:	movne	r2, ip
   15c2c:	bne	15980 <argp_parse@@Base+0x27d0>
   15c30:	ldr	r3, [r1, #12]
   15c34:	b	15990 <argp_parse@@Base+0x27e0>
   15c38:	ldr	r2, [r5, #4]
   15c3c:	str	r1, [sp]
   15c40:	cmp	r2, #0
   15c44:	ldr	r3, [r5]
   15c48:	beq	15cb0 <argp_parse@@Base+0x2b00>
   15c4c:	mov	ip, #1
   15c50:	b	15aa0 <argp_parse@@Base+0x28f0>
   15c54:	ldr	r3, [sp, #4]
   15c58:	cmp	r3, #0
   15c5c:	moveq	r9, r5
   15c60:	ldrbne	r8, [r3]
   15c64:	moveq	r8, r5
   15c68:	lslne	r9, r8, #2
   15c6c:	b	15b78 <argp_parse@@Base+0x29c8>
   15c70:	ldr	r3, [sp]
   15c74:	cmp	r3, #0
   15c78:	moveq	r4, r6
   15c7c:	ldrbne	r7, [r3]
   15c80:	moveq	r7, r6
   15c84:	lslne	r4, r7, #2
   15c88:	b	15b68 <argp_parse@@Base+0x29b8>
   15c8c:	ldr	r3, [r3, #12]
   15c90:	tst	r3, #8
   15c94:	bne	15cbc <argp_parse@@Base+0x2b0c>
   15c98:	mov	r4, #1
   15c9c:	b	15a10 <argp_parse@@Base+0x2860>
   15ca0:	ldr	r3, [r5]
   15ca4:	b	15af0 <argp_parse@@Base+0x2940>
   15ca8:	str	r2, [sp, #4]
   15cac:	b	15b20 <argp_parse@@Base+0x2970>
   15cb0:	mov	r1, r2
   15cb4:	mov	ip, #1
   15cb8:	b	15acc <argp_parse@@Base+0x291c>
   15cbc:	ldr	r3, [sp, #4]
   15cc0:	mov	r4, #1
   15cc4:	cmp	r3, #0
   15cc8:	bne	15b08 <argp_parse@@Base+0x2958>
   15ccc:	b	15a10 <argp_parse@@Base+0x2860>
   15cd0:	andeq	r4, r1, r4, ror #26
   15cd4:	ldr	r3, [r0, #28]
   15cd8:	ldr	r2, [r0, #24]
   15cdc:	push	{r4, r5, r6, lr}
   15ce0:	mov	r5, r1
   15ce4:	ldr	r1, [r0, #16]
   15ce8:	sub	r2, r3, r2
   15cec:	cmp	r2, r1
   15cf0:	mov	r4, r0
   15cf4:	movls	r2, r3
   15cf8:	bhi	15d54 <argp_parse@@Base+0x2ba4>
   15cfc:	ldr	r1, [r4, #20]
   15d00:	ldr	r0, [r4, #8]
   15d04:	cmp	r1, #0
   15d08:	addge	r5, r5, r1
   15d0c:	cmp	r5, r0
   15d10:	bcc	15d34 <argp_parse@@Base+0x2b84>
   15d14:	ldr	r1, [r4, #32]
   15d18:	cmp	r1, r3
   15d1c:	bls	15d64 <argp_parse@@Base+0x2bb4>
   15d20:	add	r1, r2, #1
   15d24:	mov	r3, #10
   15d28:	str	r1, [r4, #28]
   15d2c:	strb	r3, [r2]
   15d30:	pop	{r4, r5, r6, pc}
   15d34:	ldr	r2, [r4, #32]
   15d38:	cmp	r2, r3
   15d3c:	bls	15d80 <argp_parse@@Base+0x2bd0>
   15d40:	add	r1, r3, #1
   15d44:	mov	r2, #32
   15d48:	str	r1, [r4, #28]
   15d4c:	strb	r2, [r3]
   15d50:	pop	{r4, r5, r6, pc}
   15d54:	bl	18c68 <argp_error@@Base+0xe00>
   15d58:	ldr	r3, [r4, #28]
   15d5c:	mov	r2, r3
   15d60:	b	15cfc <argp_parse@@Base+0x2b4c>
   15d64:	mov	r1, #1
   15d68:	mov	r0, r4
   15d6c:	bl	192f8 <argp_error@@Base+0x1490>
   15d70:	cmp	r0, #0
   15d74:	popeq	{r4, r5, r6, pc}
   15d78:	ldr	r2, [r4, #28]
   15d7c:	b	15d20 <argp_parse@@Base+0x2b70>
   15d80:	mov	r1, #1
   15d84:	mov	r0, r4
   15d88:	bl	192f8 <argp_error@@Base+0x1490>
   15d8c:	cmp	r0, #0
   15d90:	popeq	{r4, r5, r6, pc}
   15d94:	ldr	r3, [r4, #28]
   15d98:	b	15d40 <argp_parse@@Base+0x2b90>
   15d9c:	push	{r4, r5, r6, lr}
   15da0:	ldr	r5, [r0, #8]
   15da4:	ldr	r2, [r0, #12]
   15da8:	ldr	ip, [r1, #12]
   15dac:	cmp	r5, #0
   15db0:	orr	r2, r2, ip
   15db4:	beq	15e1c <argp_parse@@Base+0x2c6c>
   15db8:	tst	r2, #16
   15dbc:	bne	15df8 <argp_parse@@Base+0x2c48>
   15dc0:	tst	r2, #1
   15dc4:	mov	r6, r3
   15dc8:	mov	r4, r0
   15dcc:	bne	15e00 <argp_parse@@Base+0x2c50>
   15dd0:	mov	r0, r5
   15dd4:	bl	113e4 <strlen@plt>
   15dd8:	add	r1, r0, #6
   15ddc:	mov	r0, r6
   15de0:	bl	15cd4 <argp_parse@@Base+0x2b24>
   15de4:	mov	r3, r5
   15de8:	ldr	r2, [r4, #4]
   15dec:	mov	r0, r6
   15df0:	ldr	r1, [pc, #56]	; 15e30 <argp_parse@@Base+0x2c80>
   15df4:	bl	19318 <argp_error@@Base+0x14b0>
   15df8:	mov	r0, #0
   15dfc:	pop	{r4, r5, r6, pc}
   15e00:	ldr	r2, [r0, #4]
   15e04:	mov	r3, r5
   15e08:	mov	r0, r6
   15e0c:	ldr	r1, [pc, #32]	; 15e34 <argp_parse@@Base+0x2c84>
   15e10:	bl	19318 <argp_error@@Base+0x14b0>
   15e14:	mov	r0, #0
   15e18:	pop	{r4, r5, r6, pc}
   15e1c:	ldr	r5, [r1, #8]
   15e20:	cmp	r5, #0
   15e24:	bne	15db8 <argp_parse@@Base+0x2c08>
   15e28:	mov	r0, #0
   15e2c:	pop	{r4, r5, r6, pc}
   15e30:	andeq	sl, r1, r0, lsr #6
   15e34:	andeq	sl, r1, r4, lsl r3
   15e38:	mov	ip, r0
   15e3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e40:	mov	r8, r2
   15e44:	sub	sp, sp, #28
   15e48:	mov	r2, ip
   15e4c:	ldr	ip, [ip, #16]
   15e50:	mov	r9, r1
   15e54:	ldr	r1, [r0, #8]
   15e58:	str	ip, [sp, #8]
   15e5c:	ldr	ip, [r8]
   15e60:	str	r1, [sp, #16]
   15e64:	mov	r0, r1
   15e68:	mov	r4, r3
   15e6c:	ldr	r1, [pc, #456]	; 1603c <argp_parse@@Base+0x2e8c>
   15e70:	mov	r3, r9
   15e74:	mov	r5, ip
   15e78:	str	ip, [sp, #20]
   15e7c:	ldr	r6, [sp, #64]	; 0x40
   15e80:	bl	14f00 <argp_parse@@Base+0x1d50>
   15e84:	subs	r3, r0, #0
   15e88:	str	r3, [sp, #12]
   15e8c:	beq	15fe8 <argp_parse@@Base+0x2e38>
   15e90:	mov	r1, #10
   15e94:	bl	11288 <strchrnul@plt>
   15e98:	ldrb	sl, [r0]
   15e9c:	mov	r7, r0
   15ea0:	cmp	sl, #0
   15ea4:	bne	15fa4 <argp_parse@@Base+0x2df4>
   15ea8:	ldr	r5, [sp, #12]
   15eac:	add	r1, r7, #1
   15eb0:	sub	r1, r1, r5
   15eb4:	mov	r0, r6
   15eb8:	bl	15cd4 <argp_parse@@Base+0x2b24>
   15ebc:	ldr	r0, [r6, #28]
   15ec0:	sub	fp, r7, r5
   15ec4:	ldr	r1, [r6, #32]
   15ec8:	add	r2, r0, fp
   15ecc:	cmp	r1, r2
   15ed0:	bcs	15eec <argp_parse@@Base+0x2d3c>
   15ed4:	mov	r1, fp
   15ed8:	mov	r0, r6
   15edc:	bl	192f8 <argp_error@@Base+0x1490>
   15ee0:	cmp	r0, #0
   15ee4:	beq	15f04 <argp_parse@@Base+0x2d54>
   15ee8:	ldr	r0, [r6, #28]
   15eec:	mov	r2, fp
   15ef0:	mov	r1, r5
   15ef4:	bl	112b8 <memcpy@plt>
   15ef8:	ldr	r3, [r6, #28]
   15efc:	add	fp, r3, fp
   15f00:	str	fp, [r6, #28]
   15f04:	ldr	r3, [sp, #16]
   15f08:	ldr	r2, [sp, #12]
   15f0c:	cmp	r3, r2
   15f10:	beq	15f1c <argp_parse@@Base+0x2d6c>
   15f14:	mov	r0, r2
   15f18:	bl	14048 <argp_parse@@Base+0xe98>
   15f1c:	ldr	r3, [sp, #8]
   15f20:	cmp	r3, #0
   15f24:	beq	15f68 <argp_parse@@Base+0x2db8>
   15f28:	ldr	r2, [r3]
   15f2c:	cmp	r2, #0
   15f30:	beq	15f68 <argp_parse@@Base+0x2db8>
   15f34:	ldr	r5, [sp, #8]
   15f38:	mov	r3, r4
   15f3c:	mov	r0, r2
   15f40:	str	r6, [sp]
   15f44:	mov	r2, r8
   15f48:	mov	r1, r9
   15f4c:	bl	15e38 <argp_parse@@Base+0x2c88>
   15f50:	ldr	r2, [r5, #16]!
   15f54:	cmp	r2, #0
   15f58:	clz	r3, r0
   15f5c:	lsr	r3, r3, #5
   15f60:	bne	15f3c <argp_parse@@Base+0x2d8c>
   15f64:	mov	r4, r3
   15f68:	cmp	r4, #0
   15f6c:	moveq	sl, #0
   15f70:	andne	sl, sl, #1
   15f74:	cmp	sl, #0
   15f78:	beq	16008 <argp_parse@@Base+0x2e58>
   15f7c:	ldrb	r0, [r7]
   15f80:	cmp	r0, #0
   15f84:	bne	16018 <argp_parse@@Base+0x2e68>
   15f88:	ldr	r3, [sp, #20]
   15f8c:	ldrb	r4, [r3]
   15f90:	cmp	r4, #0
   15f94:	moveq	r0, r4
   15f98:	strbne	r0, [r3]
   15f9c:	add	sp, sp, #28
   15fa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fa4:	ldrb	sl, [r5]
   15fa8:	cmp	sl, #0
   15fac:	beq	16034 <argp_parse@@Base+0x2e84>
   15fb0:	mov	fp, #0
   15fb4:	add	r5, r0, #1
   15fb8:	add	fp, fp, #1
   15fbc:	mov	r0, r5
   15fc0:	mov	r1, #10
   15fc4:	bl	11288 <strchrnul@plt>
   15fc8:	cmp	fp, sl
   15fcc:	bne	15fb4 <argp_parse@@Base+0x2e04>
   15fd0:	mov	r7, r0
   15fd4:	ldr	r2, [r8]
   15fd8:	mov	sl, #1
   15fdc:	add	r2, r2, sl
   15fe0:	str	r2, [r8]
   15fe4:	b	15eac <argp_parse@@Base+0x2cfc>
   15fe8:	ldr	r3, [sp, #8]
   15fec:	cmp	r3, #0
   15ff0:	beq	16008 <argp_parse@@Base+0x2e58>
   15ff4:	ldr	r2, [r3]
   15ff8:	cmp	r2, #0
   15ffc:	ldrne	r7, [sp, #12]
   16000:	movne	sl, r7
   16004:	bne	15f34 <argp_parse@@Base+0x2d84>
   16008:	clz	r0, r4
   1600c:	lsr	r0, r0, #5
   16010:	add	sp, sp, #28
   16014:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16018:	ldr	r2, [sp, #20]
   1601c:	mov	r0, #1
   16020:	ldrb	r3, [r2]
   16024:	add	r3, r3, r0
   16028:	strb	r3, [r2]
   1602c:	add	sp, sp, #28
   16030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16034:	ldr	r5, [sp, #12]
   16038:	b	15fd4 <argp_parse@@Base+0x2e24>
   1603c:	andeq	r0, r0, #6
   16040:	ldr	r2, [r0, #8]
   16044:	cmp	r2, #0
   16048:	beq	16054 <argp_parse@@Base+0x2ea4>
   1604c:	mov	r0, #0
   16050:	bx	lr
   16054:	ldr	r2, [r1, #8]
   16058:	cmp	r2, #0
   1605c:	bne	1604c <argp_parse@@Base+0x2e9c>
   16060:	ldr	r1, [r1, #12]
   16064:	ldr	r2, [r0, #12]
   16068:	orr	r2, r2, r1
   1606c:	tst	r2, #16
   16070:	ldreq	r2, [r3]
   16074:	ldreq	r1, [r0, #4]
   16078:	addeq	r0, r2, #1
   1607c:	streq	r0, [r3]
   16080:	strbeq	r1, [r2]
   16084:	b	1604c <argp_parse@@Base+0x2e9c>
   16088:	mov	r3, r0
   1608c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16090:	sub	sp, sp, #52	; 0x34
   16094:	ldr	r2, [r3, #16]
   16098:	str	r0, [sp, #24]
   1609c:	mov	r0, #16
   160a0:	ldr	r4, [r3]
   160a4:	str	r1, [sp, #28]
   160a8:	str	r2, [sp, #8]
   160ac:	bl	14be4 <argp_parse@@Base+0x1a34>
   160b0:	subs	r3, r0, #0
   160b4:	str	r3, [sp, #20]
   160b8:	beq	1671c <argp_parse@@Base+0x356c>
   160bc:	ldr	r2, [sp, #20]
   160c0:	mov	r3, #0
   160c4:	cmp	r4, #0
   160c8:	str	r3, [r2, #4]
   160cc:	str	r3, [r2, #12]
   160d0:	beq	162d4 <argp_parse@@Base+0x3124>
   160d4:	ldr	r5, [r4, #12]
   160d8:	ands	r5, r5, #4
   160dc:	bne	16730 <argp_parse@@Base+0x3580>
   160e0:	add	r6, r4, #24
   160e4:	mov	r9, r5
   160e8:	mov	sl, r5
   160ec:	mov	fp, r2
   160f0:	b	16134 <argp_parse@@Base+0x2f84>
   160f4:	ldr	r3, [r6, #-12]
   160f8:	tst	r3, #4
   160fc:	addeq	r9, r9, #1
   16100:	streq	r9, [fp, #4]
   16104:	tst	r3, #8
   16108:	bne	16130 <argp_parse@@Base+0x2f80>
   1610c:	sub	r3, r8, #1
   16110:	cmp	r3, #254	; 0xfe
   16114:	bhi	16130 <argp_parse@@Base+0x2f80>
   16118:	bl	113cc <__ctype_b_loc@plt>
   1611c:	lsl	r8, r8, #1
   16120:	ldr	r3, [r0]
   16124:	ldrh	r3, [r3, r8]
   16128:	tst	r3, #16384	; 0x4000
   1612c:	addne	sl, sl, #1
   16130:	add	r6, r6, #24
   16134:	ldr	r8, [r6, #-20]	; 0xffffffec
   16138:	cmp	r8, #0
   1613c:	bne	160f4 <argp_parse@@Base+0x2f44>
   16140:	ldr	r3, [r6, #-24]	; 0xffffffe8
   16144:	cmp	r3, #0
   16148:	bne	160f4 <argp_parse@@Base+0x2f44>
   1614c:	ldr	r3, [r6, #-8]
   16150:	cmp	r3, #0
   16154:	bne	160f4 <argp_parse@@Base+0x2f44>
   16158:	ldr	r7, [r6, #-4]
   1615c:	cmp	r7, #0
   16160:	bne	160f4 <argp_parse@@Base+0x2f44>
   16164:	rsb	r9, r9, r9, lsl #3
   16168:	lsl	r0, r9, #2
   1616c:	bl	14be4 <argp_parse@@Base+0x1a34>
   16170:	ldr	r6, [sp, #20]
   16174:	str	r0, [r6]
   16178:	add	r0, sl, #1
   1617c:	bl	14be4 <argp_parse@@Base+0x1a34>
   16180:	ldr	r8, [r6]
   16184:	mov	r3, r6
   16188:	cmp	r0, #0
   1618c:	cmpne	r8, #0
   16190:	mov	sl, r0
   16194:	str	r0, [r3, #8]
   16198:	beq	166e0 <argp_parse@@Base+0x3530>
   1619c:	ldr	r2, [sp, #20]
   161a0:	ldr	r3, [pc, #1436]	; 16744 <argp_parse@@Base+0x3594>
   161a4:	ldr	r2, [r2, #4]
   161a8:	cmp	r2, r3
   161ac:	bhi	166cc <argp_parse@@Base+0x351c>
   161b0:	add	r8, r8, #28
   161b4:	mov	r2, r8
   161b8:	ldr	r3, [r4, #4]
   161bc:	mov	r8, sl
   161c0:	mov	r9, r2
   161c4:	cmp	r3, #0
   161c8:	bne	161d8 <argp_parse@@Base+0x3028>
   161cc:	ldr	r2, [r4]
   161d0:	cmp	r2, #0
   161d4:	beq	16684 <argp_parse@@Base+0x34d4>
   161d8:	str	r7, [r9, #-24]	; 0xffffffe8
   161dc:	ldr	r6, [r4, #20]
   161e0:	str	r4, [r9, #-28]	; 0xffffffe4
   161e4:	cmp	r6, #0
   161e8:	str	sl, [r9, #-20]	; 0xffffffec
   161ec:	bne	16204 <argp_parse@@Base+0x3054>
   161f0:	ldr	r2, [r4]
   161f4:	cmp	r2, #0
   161f8:	cmpeq	r3, #0
   161fc:	movne	r6, r5
   16200:	beq	166a8 <argp_parse@@Base+0x34f8>
   16204:	ldr	r1, [sp, #28]
   16208:	str	r6, [r9, #-16]
   1620c:	mov	r5, r4
   16210:	ldr	r2, [r4, #12]
   16214:	mov	r3, r7
   16218:	str	r1, [r9, #-12]
   1621c:	ldr	r1, [sp, #24]
   16220:	str	r1, [r9, #-8]
   16224:	add	r3, r3, #1
   16228:	tst	r2, #8
   1622c:	str	r3, [r9, #-24]	; 0xffffffe8
   16230:	bne	1629c <argp_parse@@Base+0x30ec>
   16234:	ldr	fp, [r4, #4]
   16238:	sub	r3, fp, #1
   1623c:	cmp	r3, #254	; 0xfe
   16240:	bhi	1629c <argp_parse@@Base+0x30ec>
   16244:	bl	113cc <__ctype_b_loc@plt>
   16248:	lsl	r3, fp, #1
   1624c:	ldr	r2, [r0]
   16250:	ldrh	r3, [r2, r3]
   16254:	tst	r3, #16384	; 0x4000
   16258:	beq	1629c <argp_parse@@Base+0x30ec>
   1625c:	cmp	r8, sl
   16260:	uxtb	r1, fp
   16264:	bcs	16294 <argp_parse@@Base+0x30e4>
   16268:	ldrb	r3, [r8]
   1626c:	cmp	r3, r1
   16270:	movne	r3, r8
   16274:	subne	r0, sl, #1
   16278:	bne	1628c <argp_parse@@Base+0x30dc>
   1627c:	b	1629c <argp_parse@@Base+0x30ec>
   16280:	ldrb	r2, [r3, #1]!
   16284:	cmp	r2, r1
   16288:	beq	1629c <argp_parse@@Base+0x30ec>
   1628c:	cmp	r0, r3
   16290:	bne	16280 <argp_parse@@Base+0x30d0>
   16294:	strb	r1, [sl]
   16298:	add	sl, sl, #1
   1629c:	ldr	r3, [r5, #28]
   162a0:	add	r4, r4, #24
   162a4:	cmp	r3, #0
   162a8:	bne	162b8 <argp_parse@@Base+0x3108>
   162ac:	ldr	r2, [r5, #24]
   162b0:	cmp	r2, #0
   162b4:	beq	16660 <argp_parse@@Base+0x34b0>
   162b8:	ldr	r2, [r5, #36]	; 0x24
   162bc:	tst	r2, #4
   162c0:	beq	16678 <argp_parse@@Base+0x34c8>
   162c4:	ldr	r3, [r9, #-24]	; 0xffffffe8
   162c8:	mov	r5, r4
   162cc:	b	16224 <argp_parse@@Base+0x3074>
   162d0:	strb	r3, [sl]
   162d4:	ldr	r3, [sp, #8]
   162d8:	cmp	r3, #0
   162dc:	beq	16418 <argp_parse@@Base+0x3268>
   162e0:	ldr	r3, [r3]
   162e4:	cmp	r3, #0
   162e8:	beq	16418 <argp_parse@@Base+0x3268>
   162ec:	ldr	r3, [sp, #20]
   162f0:	add	r3, r3, #12
   162f4:	str	r3, [sp, #44]	; 0x2c
   162f8:	ldr	r3, [sp, #8]
   162fc:	ldr	r5, [r3, #12]
   16300:	cmp	r5, #0
   16304:	ldrne	r6, [r3, #8]
   16308:	bne	1631c <argp_parse@@Base+0x316c>
   1630c:	ldr	r3, [sp, #8]
   16310:	ldr	r6, [r3, #8]
   16314:	cmp	r6, #0
   16318:	beq	16640 <argp_parse@@Base+0x3490>
   1631c:	ldr	r7, [sp, #24]
   16320:	ldr	r2, [sp, #8]
   16324:	mov	r0, #28
   16328:	ldr	r3, [r7, #16]
   1632c:	sub	r3, r2, r3
   16330:	asr	r4, r3, #4
   16334:	bl	14be4 <argp_parse@@Base+0x1a34>
   16338:	subs	r1, r0, #0
   1633c:	beq	1637c <argp_parse@@Base+0x31cc>
   16340:	ldr	r3, [sp, #28]
   16344:	ldr	r0, [sp, #20]
   16348:	cmp	r3, #0
   1634c:	str	r3, [r1, #12]
   16350:	ldrne	r3, [r3, #20]
   16354:	ldr	r2, [r0, #12]
   16358:	addne	r3, r3, #1
   1635c:	moveq	r3, #0
   16360:	str	r5, [r1, #8]
   16364:	str	r6, [r1]
   16368:	str	r4, [r1, #4]
   1636c:	str	r7, [r1, #16]
   16370:	str	r3, [r1, #20]
   16374:	str	r2, [r1, #24]
   16378:	str	r1, [r0, #12]
   1637c:	ldr	r3, [sp, #8]
   16380:	ldr	r0, [r3]
   16384:	bl	16088 <argp_parse@@Base+0x2ed8>
   16388:	ldr	r3, [sp, #20]
   1638c:	ldr	r2, [r3, #12]
   16390:	cmp	r2, #0
   16394:	str	r0, [sp, #16]
   16398:	bne	163a4 <argp_parse@@Base+0x31f4>
   1639c:	b	16648 <argp_parse@@Base+0x3498>
   163a0:	mov	r2, r3
   163a4:	ldr	r3, [r2, #24]
   163a8:	cmp	r3, #0
   163ac:	bne	163a0 <argp_parse@@Base+0x31f0>
   163b0:	add	r2, r2, #24
   163b4:	ldr	r0, [sp, #16]
   163b8:	mov	ip, r0
   163bc:	ldr	r3, [r0, #4]
   163c0:	ldr	r1, [r0, #12]
   163c4:	cmp	r3, #0
   163c8:	str	r1, [r2]
   163cc:	mov	r2, #0
   163d0:	str	r2, [r0, #12]
   163d4:	beq	163fc <argp_parse@@Base+0x324c>
   163d8:	ldr	lr, [sp, #20]
   163dc:	ldr	r2, [lr, #4]
   163e0:	cmp	r2, #0
   163e4:	bne	16424 <argp_parse@@Base+0x3274>
   163e8:	ldr	r0, [r0]
   163ec:	ldr	r1, [ip, #8]
   163f0:	stm	lr, {r0, r3}
   163f4:	str	r1, [lr, #8]
   163f8:	str	r2, [ip, #4]
   163fc:	ldr	r0, [sp, #16]
   16400:	bl	14e20 <argp_parse@@Base+0x1c70>
   16404:	ldr	r2, [sp, #8]
   16408:	ldr	r3, [r2, #16]!
   1640c:	cmp	r3, #0
   16410:	str	r2, [sp, #8]
   16414:	bne	162f8 <argp_parse@@Base+0x3148>
   16418:	ldr	r0, [sp, #20]
   1641c:	add	sp, sp, #52	; 0x34
   16420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16424:	add	r3, r3, r2
   16428:	str	r3, [sp, #36]	; 0x24
   1642c:	rsb	r0, r3, r3, lsl #3
   16430:	lsl	r0, r0, #2
   16434:	bl	14be4 <argp_parse@@Base+0x1a34>
   16438:	ldr	r3, [sp, #20]
   1643c:	mov	r4, r0
   16440:	str	r0, [sp, #32]
   16444:	ldr	r0, [r3, #8]
   16448:	bl	113e4 <strlen@plt>
   1644c:	ldr	r3, [sp, #16]
   16450:	mov	r8, r0
   16454:	ldr	r0, [r3, #8]
   16458:	bl	113e4 <strlen@plt>
   1645c:	add	r0, r8, r0
   16460:	add	r0, r0, #1
   16464:	bl	14be4 <argp_parse@@Base+0x1a34>
   16468:	cmp	r4, #0
   1646c:	cmpne	r0, #0
   16470:	mov	r7, r0
   16474:	beq	166f4 <argp_parse@@Base+0x3544>
   16478:	ldr	r3, [sp, #36]	; 0x24
   1647c:	ldr	r2, [pc, #704]	; 16744 <argp_parse@@Base+0x3594>
   16480:	cmp	r3, r2
   16484:	bhi	16708 <argp_parse@@Base+0x3558>
   16488:	ldr	r5, [sp, #20]
   1648c:	ldr	r9, [sp, #32]
   16490:	ldm	r5, {r3, r4}
   16494:	mov	r0, r9
   16498:	rsb	r6, r4, r4, lsl #3
   1649c:	mov	r1, r3
   164a0:	lsl	r6, r6, #2
   164a4:	mov	r2, r6
   164a8:	str	r3, [sp, #40]	; 0x28
   164ac:	bl	113c0 <mempcpy@plt>
   164b0:	ldr	r3, [sp, #16]
   164b4:	ldr	r1, [r3, #4]
   164b8:	mov	ip, r1
   164bc:	str	r1, [sp, #4]
   164c0:	rsb	r2, ip, ip, lsl #3
   164c4:	ldr	r1, [r3]
   164c8:	lsl	r2, r2, #2
   164cc:	bl	112b8 <memcpy@plt>
   164d0:	ldr	r5, [r5, #8]
   164d4:	mov	r2, r8
   164d8:	mov	r1, r5
   164dc:	mov	r0, r7
   164e0:	bl	112b8 <memcpy@plt>
   164e4:	cmp	r4, #0
   164e8:	beq	16658 <argp_parse@@Base+0x34a8>
   164ec:	mov	r2, r9
   164f0:	ldr	r3, [r2, #8]
   164f4:	subs	r4, r4, #1
   164f8:	sub	r3, r3, r5
   164fc:	add	r3, r7, r3
   16500:	str	r3, [r2, #8]
   16504:	add	r2, r2, #28
   16508:	bne	164f0 <argp_parse@@Base+0x3340>
   1650c:	ldr	r3, [sp, #32]
   16510:	add	r1, r3, r6
   16514:	ldr	r3, [sp, #4]
   16518:	ldr	r2, [sp, #16]
   1651c:	cmp	r3, #0
   16520:	add	r3, r7, r8
   16524:	str	r3, [sp, #12]
   16528:	ldr	sl, [r2, #8]
   1652c:	beq	16650 <argp_parse@@Base+0x34a0>
   16530:	sub	r8, r3, #1
   16534:	add	fp, r1, #28
   16538:	mov	r9, r3
   1653c:	mov	r3, r8
   16540:	mov	r8, fp
   16544:	mov	fp, sl
   16548:	mov	sl, r3
   1654c:	ldr	r5, [r8, #-24]	; 0xffffffe8
   16550:	str	r9, [r8, #-20]	; 0xffffffec
   16554:	cmp	r5, #0
   16558:	ldr	r4, [r8, #-28]	; 0xffffffe4
   1655c:	bne	16570 <argp_parse@@Base+0x33c0>
   16560:	b	165fc <argp_parse@@Base+0x344c>
   16564:	subs	r5, r5, #1
   16568:	add	r4, r4, #24
   1656c:	beq	165fc <argp_parse@@Base+0x344c>
   16570:	ldr	r3, [r4, #12]
   16574:	tst	r3, #8
   16578:	bne	16564 <argp_parse@@Base+0x33b4>
   1657c:	ldr	r6, [r4, #4]
   16580:	sub	r3, r6, #1
   16584:	cmp	r3, #254	; 0xfe
   16588:	bhi	16564 <argp_parse@@Base+0x33b4>
   1658c:	bl	113cc <__ctype_b_loc@plt>
   16590:	lsl	r3, r6, #1
   16594:	ldr	r2, [r0]
   16598:	ldrh	r3, [r2, r3]
   1659c:	tst	r3, #16384	; 0x4000
   165a0:	beq	16564 <argp_parse@@Base+0x33b4>
   165a4:	ldrb	r1, [fp]
   165a8:	cmp	r1, r6
   165ac:	bne	16564 <argp_parse@@Base+0x33b4>
   165b0:	ldr	r3, [sp, #12]
   165b4:	cmp	r7, r3
   165b8:	bcs	165e4 <argp_parse@@Base+0x3434>
   165bc:	ldrb	r3, [r7]
   165c0:	cmp	r3, r1
   165c4:	movne	r3, r7
   165c8:	bne	165dc <argp_parse@@Base+0x342c>
   165cc:	b	165ec <argp_parse@@Base+0x343c>
   165d0:	ldrb	r2, [r3, #1]!
   165d4:	cmp	r2, r1
   165d8:	beq	165ec <argp_parse@@Base+0x343c>
   165dc:	cmp	sl, r3
   165e0:	bne	165d0 <argp_parse@@Base+0x3420>
   165e4:	strb	r1, [r9]
   165e8:	add	r9, r9, #1
   165ec:	subs	r5, r5, #1
   165f0:	add	fp, fp, #1
   165f4:	add	r4, r4, #24
   165f8:	bne	16570 <argp_parse@@Base+0x33c0>
   165fc:	ldr	r3, [sp, #4]
   16600:	add	r8, r8, #28
   16604:	subs	r3, r3, #1
   16608:	str	r3, [sp, #4]
   1660c:	bne	1654c <argp_parse@@Base+0x339c>
   16610:	mov	r3, #0
   16614:	strb	r3, [r9]
   16618:	ldr	r0, [sp, #40]	; 0x28
   1661c:	bl	14048 <argp_parse@@Base+0xe98>
   16620:	ldr	r4, [sp, #20]
   16624:	ldr	r0, [r4, #8]
   16628:	bl	14048 <argp_parse@@Base+0xe98>
   1662c:	ldr	r2, [sp, #32]
   16630:	str	r2, [r4]
   16634:	ldr	r2, [sp, #36]	; 0x24
   16638:	stmib	r4, {r2, r7}
   1663c:	b	163fc <argp_parse@@Base+0x324c>
   16640:	ldr	r1, [sp, #28]
   16644:	b	1637c <argp_parse@@Base+0x31cc>
   16648:	ldr	r2, [sp, #44]	; 0x2c
   1664c:	b	163b4 <argp_parse@@Base+0x3204>
   16650:	ldr	r9, [sp, #12]
   16654:	b	16610 <argp_parse@@Base+0x3460>
   16658:	ldr	r1, [sp, #32]
   1665c:	b	16514 <argp_parse@@Base+0x3364>
   16660:	ldr	r2, [r5, #40]	; 0x28
   16664:	cmp	r2, #0
   16668:	bne	162b8 <argp_parse@@Base+0x3108>
   1666c:	ldr	r2, [r5, #44]	; 0x2c
   16670:	cmp	r2, #0
   16674:	bne	162b8 <argp_parse@@Base+0x3108>
   16678:	add	r9, r9, #28
   1667c:	mov	r5, r6
   16680:	b	161c4 <argp_parse@@Base+0x3014>
   16684:	ldr	r2, [r4, #16]
   16688:	cmp	r2, #0
   1668c:	beq	166b0 <argp_parse@@Base+0x3500>
   16690:	str	r3, [r9, #-24]	; 0xffffffe8
   16694:	ldr	r6, [r4, #20]
   16698:	str	r4, [r9, #-28]	; 0xffffffe4
   1669c:	cmp	r6, #0
   166a0:	str	sl, [r9, #-20]	; 0xffffffec
   166a4:	bne	16204 <argp_parse@@Base+0x3054>
   166a8:	add	r6, r5, #1
   166ac:	b	16204 <argp_parse@@Base+0x3054>
   166b0:	ldr	r6, [r4, #20]
   166b4:	cmp	r6, #0
   166b8:	beq	162d0 <argp_parse@@Base+0x3120>
   166bc:	str	r4, [r9, #-28]	; 0xffffffe4
   166c0:	str	r3, [r9, #-24]	; 0xffffffe8
   166c4:	str	sl, [r9, #-20]	; 0xffffffec
   166c8:	b	16204 <argp_parse@@Base+0x3054>
   166cc:	ldr	r3, [pc, #116]	; 16748 <argp_parse@@Base+0x3598>
   166d0:	mov	r2, #476	; 0x1dc
   166d4:	ldr	r1, [pc, #112]	; 1674c <argp_parse@@Base+0x359c>
   166d8:	ldr	r0, [pc, #112]	; 16750 <argp_parse@@Base+0x35a0>
   166dc:	bl	115a0 <__assert_fail@plt>
   166e0:	ldr	r3, [pc, #96]	; 16748 <argp_parse@@Base+0x3598>
   166e4:	ldr	r2, [pc, #104]	; 16754 <argp_parse@@Base+0x35a4>
   166e8:	ldr	r1, [pc, #92]	; 1674c <argp_parse@@Base+0x359c>
   166ec:	ldr	r0, [pc, #100]	; 16758 <argp_parse@@Base+0x35a8>
   166f0:	bl	115a0 <__assert_fail@plt>
   166f4:	ldr	r3, [pc, #96]	; 1675c <argp_parse@@Base+0x35ac>
   166f8:	ldr	r2, [pc, #96]	; 16760 <argp_parse@@Base+0x35b0>
   166fc:	ldr	r1, [pc, #72]	; 1674c <argp_parse@@Base+0x359c>
   16700:	ldr	r0, [pc, #92]	; 16764 <argp_parse@@Base+0x35b4>
   16704:	bl	115a0 <__assert_fail@plt>
   16708:	ldr	r3, [pc, #76]	; 1675c <argp_parse@@Base+0x35ac>
   1670c:	mov	r2, #972	; 0x3cc
   16710:	ldr	r1, [pc, #52]	; 1674c <argp_parse@@Base+0x359c>
   16714:	ldr	r0, [pc, #76]	; 16768 <argp_parse@@Base+0x35b8>
   16718:	bl	115a0 <__assert_fail@plt>
   1671c:	ldr	r3, [pc, #36]	; 16748 <argp_parse@@Base+0x3598>
   16720:	ldr	r2, [pc, #68]	; 1676c <argp_parse@@Base+0x35bc>
   16724:	ldr	r1, [pc, #32]	; 1674c <argp_parse@@Base+0x359c>
   16728:	ldr	r0, [pc, #64]	; 16770 <argp_parse@@Base+0x35c0>
   1672c:	bl	115a0 <__assert_fail@plt>
   16730:	ldr	r3, [pc, #16]	; 16748 <argp_parse@@Base+0x3598>
   16734:	mov	r2, #460	; 0x1cc
   16738:	ldr	r1, [pc, #12]	; 1674c <argp_parse@@Base+0x359c>
   1673c:	ldr	r0, [pc, #48]	; 16774 <argp_parse@@Base+0x35c4>
   16740:	bl	115a0 <__assert_fail@plt>
   16744:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   16748:	andeq	sl, r1, r8, ror #4
   1674c:	andeq	sl, r1, ip, lsr #6
   16750:	andeq	sl, r1, r0, ror r3
   16754:	ldrdeq	r0, [r0], -sl
   16758:	andeq	sl, r1, ip, asr #6
   1675c:	andeq	sl, r1, r4, ror r2
   16760:	andeq	r0, r0, sl, asr #7
   16764:	andeq	sl, r1, ip, lsr #7
   16768:	andeq	sl, r1, r8, asr #7
   1676c:	andeq	r0, r0, r2, asr #3
   16770:	andeq	sl, r1, r8, lsr r3
   16774:	andeq	sl, r1, ip, lsr r3
   16778:	cmp	r1, #0
   1677c:	push	{r4, r5, r6, r7, r8, lr}
   16780:	beq	167f8 <argp_parse@@Base+0x3648>
   16784:	sub	r7, r1, #1
   16788:	mov	r8, r2
   1678c:	mov	r6, r0
   16790:	ldm	r6, {r4, r5}
   16794:	cmp	r5, #0
   16798:	sub	r5, r5, #1
   1679c:	beq	167dc <argp_parse@@Base+0x362c>
   167a0:	add	r4, r4, #24
   167a4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   167a8:	mov	r1, r8
   167ac:	subs	r0, r3, #0
   167b0:	sub	r5, r5, #1
   167b4:	beq	167d0 <argp_parse@@Base+0x3620>
   167b8:	ldr	r3, [r4, #-12]
   167bc:	tst	r3, #2
   167c0:	bne	167d0 <argp_parse@@Base+0x3620>
   167c4:	bl	11240 <strcmp@plt>
   167c8:	cmp	r0, #0
   167cc:	beq	167f0 <argp_parse@@Base+0x3640>
   167d0:	cmn	r5, #1
   167d4:	add	r4, r4, #24
   167d8:	bne	167a4 <argp_parse@@Base+0x35f4>
   167dc:	sub	r7, r7, #1
   167e0:	cmn	r7, #1
   167e4:	add	r6, r6, #28
   167e8:	bne	16790 <argp_parse@@Base+0x35e0>
   167ec:	mov	r6, #0
   167f0:	mov	r0, r6
   167f4:	pop	{r4, r5, r6, r7, r8, pc}
   167f8:	mov	r6, r1
   167fc:	b	167f0 <argp_parse@@Base+0x3640>
   16800:	push	{r4, r5, r6, lr}
   16804:	subs	r4, r0, #0
   16808:	mov	r5, r1
   1680c:	beq	16820 <argp_parse@@Base+0x3670>
   16810:	mov	r1, #10
   16814:	bl	113f0 <strchr@plt>
   16818:	adds	r4, r0, #0
   1681c:	movne	r4, #1
   16820:	cmp	r5, #0
   16824:	beq	16850 <argp_parse@@Base+0x36a0>
   16828:	ldr	r3, [r5]
   1682c:	cmp	r3, #0
   16830:	beq	16850 <argp_parse@@Base+0x36a0>
   16834:	ldr	r1, [r3, #16]
   16838:	ldr	r0, [r3, #8]
   1683c:	bl	16800 <argp_parse@@Base+0x3650>
   16840:	ldr	r3, [r5, #16]!
   16844:	cmp	r3, #0
   16848:	add	r4, r4, r0
   1684c:	bne	16834 <argp_parse@@Base+0x3684>
   16850:	mov	r0, r4
   16854:	pop	{r4, r5, r6, pc}
   16858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1685c:	add	fp, sp, #32
   16860:	sub	sp, sp, #12
   16864:	ldr	r5, [r0, #4]
   16868:	cmp	r5, #0
   1686c:	bne	16878 <argp_parse@@Base+0x36c8>
   16870:	sub	sp, fp, #32
   16874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16878:	mov	r6, r0
   1687c:	ldr	r0, [r0, #8]
   16880:	mov	r9, r1
   16884:	bl	113e4 <strlen@plt>
   16888:	ldr	r8, [pc, #360]	; 169f8 <argp_parse@@Base+0x3848>
   1688c:	ldr	r4, [r6]
   16890:	sub	r7, fp, #36	; 0x24
   16894:	add	r3, r0, #15
   16898:	bic	r3, r3, #7
   1689c:	sub	sp, sp, r3
   168a0:	mov	sl, sp
   168a4:	str	sp, [r7, #-4]!
   168a8:	ldr	r2, [r4, #20]
   168ac:	mov	r0, r4
   168b0:	mov	r3, r7
   168b4:	mov	r1, r8
   168b8:	ldr	r2, [r2, #24]
   168bc:	bl	14c6c <argp_parse@@Base+0x1abc>
   168c0:	subs	r5, r5, #1
   168c4:	add	r4, r4, #28
   168c8:	bne	168a8 <argp_parse@@Base+0x36f8>
   168cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   168d0:	cmp	sl, r3
   168d4:	bcc	169d8 <argp_parse@@Base+0x3828>
   168d8:	ldm	r6, {r4, r5}
   168dc:	cmp	r5, #0
   168e0:	beq	16870 <argp_parse@@Base+0x36c0>
   168e4:	ldr	r7, [pc, #272]	; 169fc <argp_parse@@Base+0x384c>
   168e8:	ldr	r2, [r4, #20]
   168ec:	mov	r0, r4
   168f0:	mov	r3, r9
   168f4:	mov	r1, r7
   168f8:	ldr	r2, [r2, #24]
   168fc:	bl	14c6c <argp_parse@@Base+0x1abc>
   16900:	subs	r5, r5, #1
   16904:	add	r4, r4, #28
   16908:	bne	168e8 <argp_parse@@Base+0x3738>
   1690c:	ldm	r6, {r7, r8}
   16910:	cmp	r8, #0
   16914:	beq	16870 <argp_parse@@Base+0x36c0>
   16918:	ldr	sl, [pc, #224]	; 16a00 <argp_parse@@Base+0x3850>
   1691c:	add	r7, r7, #28
   16920:	ldr	r5, [r7, #-24]	; 0xffffffe8
   16924:	ldr	r4, [r7, #-28]	; 0xffffffe4
   16928:	cmp	r5, #0
   1692c:	movne	r6, r4
   16930:	bne	16944 <argp_parse@@Base+0x3794>
   16934:	b	169a0 <argp_parse@@Base+0x37f0>
   16938:	subs	r5, r5, #1
   1693c:	add	r4, r4, #24
   16940:	beq	169a0 <argp_parse@@Base+0x37f0>
   16944:	ldr	r2, [r4]
   16948:	cmp	r2, #0
   1694c:	beq	16938 <argp_parse@@Base+0x3788>
   16950:	ldr	r1, [r4, #12]
   16954:	tst	r1, #4
   16958:	moveq	r6, r4
   1695c:	tst	r1, #2
   16960:	bne	16938 <argp_parse@@Base+0x3788>
   16964:	ldr	r3, [r4, #8]
   16968:	ldr	r0, [r6, #12]
   1696c:	cmp	r3, #0
   16970:	orr	r1, r1, r0
   16974:	beq	169b4 <argp_parse@@Base+0x3804>
   16978:	tst	r1, #16
   1697c:	bne	16938 <argp_parse@@Base+0x3788>
   16980:	tst	r1, #1
   16984:	moveq	r1, sl
   16988:	ldrne	r1, [pc, #116]	; 16a04 <argp_parse@@Base+0x3854>
   1698c:	mov	r0, r9
   16990:	bl	19318 <argp_error@@Base+0x14b0>
   16994:	subs	r5, r5, #1
   16998:	add	r4, r4, #24
   1699c:	bne	16944 <argp_parse@@Base+0x3794>
   169a0:	subs	r8, r8, #1
   169a4:	add	r7, r7, #28
   169a8:	bne	16920 <argp_parse@@Base+0x3770>
   169ac:	sub	sp, fp, #32
   169b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169b4:	tst	r1, #16
   169b8:	bne	16938 <argp_parse@@Base+0x3788>
   169bc:	ldr	r3, [r6, #8]
   169c0:	cmp	r3, #0
   169c4:	bne	16980 <argp_parse@@Base+0x37d0>
   169c8:	ldr	r1, [pc, #56]	; 16a08 <argp_parse@@Base+0x3858>
   169cc:	mov	r0, r9
   169d0:	bl	19318 <argp_error@@Base+0x14b0>
   169d4:	b	16938 <argp_parse@@Base+0x3788>
   169d8:	add	r1, r3, #1
   169dc:	str	r1, [fp, #-40]	; 0xffffffd8
   169e0:	mov	r2, sl
   169e4:	ldr	r1, [pc, #32]	; 16a0c <argp_parse@@Base+0x385c>
   169e8:	strb	r5, [r3]
   169ec:	mov	r0, r9
   169f0:	bl	19318 <argp_error@@Base+0x14b0>
   169f4:	b	168d8 <argp_parse@@Base+0x3728>
   169f8:	andeq	r6, r1, r0, asr #32
   169fc:	muleq	r1, ip, sp
   16a00:	andeq	sl, r1, r4, lsl r4
   16a04:	andeq	sl, r1, r4, lsl #8
   16a08:	andeq	sl, r1, r0, lsr #8
   16a0c:	strdeq	sl, [r1], -ip

00016a10 <argp_failure@@Base>:
   16a10:	push	{r3}		; (str r3, [sp, #-4]!)
   16a14:	push	{r4, r5, r6, r7, lr}
   16a18:	subs	r5, r0, #0
   16a1c:	sub	sp, sp, #200	; 0xc8
   16a20:	mov	r7, r1
   16a24:	mov	r6, r2
   16a28:	beq	16b78 <argp_failure@@Base+0x168>
   16a2c:	ldr	r3, [r5, #16]
   16a30:	tst	r3, #2
   16a34:	bne	16b68 <argp_failure@@Base+0x158>
   16a38:	ldr	r4, [r5, #44]	; 0x2c
   16a3c:	cmp	r4, #0
   16a40:	beq	16b68 <argp_failure@@Base+0x158>
   16a44:	mov	r0, r4
   16a48:	bl	11510 <flockfile@plt>
   16a4c:	ldr	r0, [r5, #40]	; 0x28
   16a50:	mov	r1, r4
   16a54:	bl	11210 <fputs_unlocked@plt>
   16a58:	ldr	r3, [sp, #220]	; 0xdc
   16a5c:	cmp	r3, #0
   16a60:	beq	16abc <argp_failure@@Base+0xac>
   16a64:	ldr	r3, [r4, #20]
   16a68:	ldr	r1, [r4, #24]
   16a6c:	add	r2, sp, #224	; 0xe0
   16a70:	cmp	r3, r1
   16a74:	str	r2, [sp]
   16a78:	addcc	r1, r3, #1
   16a7c:	movcc	r2, #58	; 0x3a
   16a80:	strcc	r1, [r4, #20]
   16a84:	strbcc	r2, [r3]
   16a88:	bcs	16bc4 <argp_failure@@Base+0x1b4>
   16a8c:	ldr	r3, [r4, #20]
   16a90:	ldr	r2, [r4, #24]
   16a94:	cmp	r3, r2
   16a98:	addcc	r1, r3, #1
   16a9c:	movcc	r2, #32
   16aa0:	strcc	r1, [r4, #20]
   16aa4:	strbcc	r2, [r3]
   16aa8:	bcs	16bb4 <argp_failure@@Base+0x1a4>
   16aac:	ldr	r2, [sp]
   16ab0:	ldr	r1, [sp, #220]	; 0xdc
   16ab4:	mov	r0, r4
   16ab8:	bl	114b0 <vfprintf@plt>
   16abc:	cmp	r6, #0
   16ac0:	beq	16b24 <argp_failure@@Base+0x114>
   16ac4:	ldr	r3, [r4, #20]
   16ac8:	ldr	r2, [r4, #24]
   16acc:	cmp	r3, r2
   16ad0:	addcc	r1, r3, #1
   16ad4:	movcc	r2, #58	; 0x3a
   16ad8:	strcc	r1, [r4, #20]
   16adc:	strbcc	r2, [r3]
   16ae0:	bcs	16be4 <argp_failure@@Base+0x1d4>
   16ae4:	ldr	r3, [r4, #20]
   16ae8:	ldr	r2, [r4, #24]
   16aec:	cmp	r3, r2
   16af0:	addcc	r1, r3, #1
   16af4:	movcc	r2, #32
   16af8:	strcc	r1, [r4, #20]
   16afc:	strbcc	r2, [r3]
   16b00:	bcs	16bd4 <argp_failure@@Base+0x1c4>
   16b04:	mov	r2, #200	; 0xc8
   16b08:	mov	r1, sp
   16b0c:	mov	r0, r6
   16b10:	bl	11414 <strerror_r@plt>
   16b14:	cmp	r0, #0
   16b18:	beq	16bf4 <argp_failure@@Base+0x1e4>
   16b1c:	mov	r1, r4
   16b20:	bl	11210 <fputs_unlocked@plt>
   16b24:	ldr	r3, [r4, #20]
   16b28:	ldr	r2, [r4, #24]
   16b2c:	cmp	r3, r2
   16b30:	addcc	r1, r3, #1
   16b34:	movcc	r2, #10
   16b38:	strcc	r1, [r4, #20]
   16b3c:	strbcc	r2, [r3]
   16b40:	bcs	16b9c <argp_failure@@Base+0x18c>
   16b44:	mov	r0, r4
   16b48:	bl	11324 <funlockfile@plt>
   16b4c:	cmp	r7, #0
   16b50:	beq	16b68 <argp_failure@@Base+0x158>
   16b54:	cmp	r5, #0
   16b58:	beq	16bac <argp_failure@@Base+0x19c>
   16b5c:	ldr	r3, [r5, #16]
   16b60:	tst	r3, #32
   16b64:	beq	16bac <argp_failure@@Base+0x19c>
   16b68:	add	sp, sp, #200	; 0xc8
   16b6c:	pop	{r4, r5, r6, r7, lr}
   16b70:	add	sp, sp, #4
   16b74:	bx	lr
   16b78:	ldr	r3, [pc, #140]	; 16c0c <argp_failure@@Base+0x1fc>
   16b7c:	ldr	r4, [r3]
   16b80:	cmp	r4, #0
   16b84:	beq	16b68 <argp_failure@@Base+0x158>
   16b88:	mov	r0, r4
   16b8c:	bl	11510 <flockfile@plt>
   16b90:	ldr	r3, [pc, #120]	; 16c10 <argp_failure@@Base+0x200>
   16b94:	ldr	r0, [r3]
   16b98:	b	16a50 <argp_failure@@Base+0x40>
   16b9c:	mov	r1, #10
   16ba0:	mov	r0, r4
   16ba4:	bl	11480 <__overflow@plt>
   16ba8:	b	16b44 <argp_failure@@Base+0x134>
   16bac:	mov	r0, r7
   16bb0:	bl	113d8 <exit@plt>
   16bb4:	mov	r1, #32
   16bb8:	mov	r0, r4
   16bbc:	bl	11480 <__overflow@plt>
   16bc0:	b	16aac <argp_failure@@Base+0x9c>
   16bc4:	mov	r1, #58	; 0x3a
   16bc8:	mov	r0, r4
   16bcc:	bl	11480 <__overflow@plt>
   16bd0:	b	16a8c <argp_failure@@Base+0x7c>
   16bd4:	mov	r1, #32
   16bd8:	mov	r0, r4
   16bdc:	bl	11480 <__overflow@plt>
   16be0:	b	16b04 <argp_failure@@Base+0xf4>
   16be4:	mov	r1, #58	; 0x3a
   16be8:	mov	r0, r4
   16bec:	bl	11480 <__overflow@plt>
   16bf0:	b	16ae4 <argp_failure@@Base+0xd4>
   16bf4:	mov	r0, r6
   16bf8:	bl	1139c <strerror@plt>
   16bfc:	ldr	r3, [pc, #16]	; 16c14 <argp_failure@@Base+0x204>
   16c00:	cmp	r0, #0
   16c04:	moveq	r0, r3
   16c08:	b	16b1c <argp_failure@@Base+0x10c>
   16c0c:	strdeq	fp, [r2], -r0
   16c10:	andeq	fp, r2, r8, ror #5
   16c14:	andeq	sl, r1, r8, lsr #8
   16c18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c1c:	add	fp, sp, #32
   16c20:	cmp	r2, #0
   16c24:	sub	sp, sp, #116	; 0x74
   16c28:	str	r2, [fp, #-132]	; 0xffffff7c
   16c2c:	str	r0, [fp, #-112]	; 0xffffff90
   16c30:	str	r1, [fp, #-104]	; 0xffffff98
   16c34:	str	r3, [fp, #-96]	; 0xffffffa0
   16c38:	beq	16cf0 <argp_failure@@Base+0x2e0>
   16c3c:	ldr	sl, [pc, #4064]	; 17c24 <argp_failure@@Base+0x1214>
   16c40:	mov	r0, r2
   16c44:	bl	11510 <flockfile@plt>
   16c48:	ldr	r3, [sl, #36]	; 0x24
   16c4c:	cmp	r3, #0
   16c50:	str	r3, [fp, #-108]	; 0xffffff94
   16c54:	beq	171a0 <argp_failure@@Base+0x790>
   16c58:	mov	r3, #0
   16c5c:	mov	r1, r3
   16c60:	ldr	r2, [sl, #32]
   16c64:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16c68:	bl	18bec <argp_error@@Base+0xd84>
   16c6c:	subs	r9, r0, #0
   16c70:	beq	17ce4 <argp_failure@@Base+0x12d4>
   16c74:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16c78:	ands	r3, r3, #11
   16c7c:	streq	r3, [fp, #-136]	; 0xffffff78
   16c80:	bne	175fc <argp_failure@@Base+0xbec>
   16c84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16c88:	ands	r4, r3, #3
   16c8c:	bne	173f0 <argp_failure@@Base+0x9e0>
   16c90:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16c94:	tst	r3, #16
   16c98:	bne	173cc <argp_failure@@Base+0x9bc>
   16c9c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16ca0:	tst	r3, #4
   16ca4:	bne	173b0 <argp_failure@@Base+0x9a0>
   16ca8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16cac:	tst	r3, #8
   16cb0:	bne	16d44 <argp_failure@@Base+0x334>
   16cb4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16cb8:	tst	r3, #32
   16cbc:	bne	17178 <argp_failure@@Base+0x768>
   16cc0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16cc4:	tst	r3, #64	; 0x40
   16cc8:	bne	16cf8 <argp_failure@@Base+0x2e8>
   16ccc:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16cd0:	bl	11324 <funlockfile@plt>
   16cd4:	ldr	r3, [fp, #-136]	; 0xffffff78
   16cd8:	cmp	r3, #0
   16cdc:	beq	16ce8 <argp_failure@@Base+0x2d8>
   16ce0:	mov	r0, r3
   16ce4:	bl	14e20 <argp_parse@@Base+0x1c70>
   16ce8:	mov	r0, r9
   16cec:	bl	191d8 <argp_error@@Base+0x1370>
   16cf0:	sub	sp, fp, #32
   16cf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16cf8:	ldr	r5, [pc, #3880]	; 17c28 <argp_failure@@Base+0x1218>
   16cfc:	ldr	r2, [r5]
   16d00:	cmp	r2, #0
   16d04:	beq	16ccc <argp_failure@@Base+0x2bc>
   16d08:	cmp	r4, #0
   16d0c:	beq	16d34 <argp_failure@@Base+0x324>
   16d10:	ldr	r3, [r9, #28]
   16d14:	ldr	r2, [r9, #32]
   16d18:	cmp	r3, r2
   16d1c:	bcs	17cc8 <argp_failure@@Base+0x12b8>
   16d20:	add	r1, r3, #1
   16d24:	mov	r2, #10
   16d28:	str	r1, [r9, #28]
   16d2c:	strb	r2, [r3]
   16d30:	ldr	r2, [r5]
   16d34:	ldr	r1, [pc, #3824]	; 17c2c <argp_failure@@Base+0x121c>
   16d38:	mov	r0, r9
   16d3c:	bl	19318 <argp_error@@Base+0x14b0>
   16d40:	b	16ccc <argp_failure@@Base+0x2bc>
   16d44:	ldr	r3, [fp, #-136]	; 0xffffff78
   16d48:	ldr	r3, [r3, #4]
   16d4c:	cmp	r3, #0
   16d50:	str	r3, [fp, #-108]	; 0xffffff94
   16d54:	beq	16cb4 <argp_failure@@Base+0x2a4>
   16d58:	cmp	r4, #0
   16d5c:	beq	17b78 <argp_failure@@Base+0x1168>
   16d60:	ldr	r3, [r9, #28]
   16d64:	ldr	r2, [r9, #32]
   16d68:	cmp	r3, r2
   16d6c:	bcs	17d1c <argp_failure@@Base+0x130c>
   16d70:	add	r1, r3, #1
   16d74:	mov	r2, #10
   16d78:	str	r1, [r9, #28]
   16d7c:	strb	r2, [r3]
   16d80:	ldr	r3, [fp, #-136]	; 0xffffff78
   16d84:	ldr	r2, [fp, #-136]	; 0xffffff78
   16d88:	ldr	r3, [r3, #4]
   16d8c:	ldr	r8, [r2]
   16d90:	str	r3, [fp, #-108]	; 0xffffff94
   16d94:	ldr	r3, [fp, #-108]	; 0xffffff94
   16d98:	cmp	r3, #0
   16d9c:	mov	r3, #0
   16da0:	str	r3, [fp, #-88]	; 0xffffffa8
   16da4:	str	r3, [fp, #-84]	; 0xffffffac
   16da8:	str	r3, [fp, #-80]	; 0xffffffb0
   16dac:	beq	17168 <argp_failure@@Base+0x758>
   16db0:	str	sl, [fp, #-100]	; 0xffffff9c
   16db4:	ldr	lr, [r9, #28]
   16db8:	ldr	r3, [r9, #24]
   16dbc:	ldr	r5, [r9, #16]
   16dc0:	sub	lr, lr, r3
   16dc4:	cmp	lr, r5
   16dc8:	ldr	r6, [r8]
   16dcc:	ldr	sl, [r8, #8]
   16dd0:	bhi	178d0 <argp_failure@@Base+0xec0>
   16dd4:	ldr	r1, [r9, #4]
   16dd8:	ldr	r7, [r6, #12]
   16ddc:	str	r1, [fp, #-116]	; 0xffffff8c
   16de0:	ldr	r1, [r9, #12]
   16de4:	mov	r3, #0
   16de8:	str	r1, [fp, #-120]	; 0xffffff88
   16dec:	sub	r1, fp, #88	; 0x58
   16df0:	str	r3, [r9, #4]
   16df4:	and	r2, r7, #8
   16df8:	str	r1, [fp, #-68]	; 0xffffffbc
   16dfc:	ldr	r1, [fp, #-104]	; 0xffffff98
   16e00:	mov	r0, #1
   16e04:	cmp	r2, r3
   16e08:	mov	r4, r2
   16e0c:	str	r0, [fp, #-64]	; 0xffffffc0
   16e10:	str	r8, [fp, #-76]	; 0xffffffb4
   16e14:	str	r9, [fp, #-72]	; 0xffffffb8
   16e18:	str	r1, [fp, #-60]	; 0xffffffc4
   16e1c:	bne	1775c <argp_failure@@Base+0xd4c>
   16e20:	ldr	ip, [r8, #4]
   16e24:	cmp	ip, r3
   16e28:	beq	16e54 <argp_failure@@Base+0x444>
   16e2c:	add	r0, r6, #24
   16e30:	ldr	r3, [r0, #-24]	; 0xffffffe8
   16e34:	cmp	r3, #0
   16e38:	beq	16e48 <argp_failure@@Base+0x438>
   16e3c:	ldr	r3, [r0, #-12]
   16e40:	tst	r3, #2
   16e44:	beq	17758 <argp_failure@@Base+0xd48>
   16e48:	subs	ip, ip, #1
   16e4c:	add	r0, r0, #24
   16e50:	bne	16e30 <argp_failure@@Base+0x420>
   16e54:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16e58:	cmp	lr, r5
   16e5c:	str	r2, [fp, #-128]	; 0xffffff80
   16e60:	ldr	r5, [r3, #8]
   16e64:	bhi	17770 <argp_failure@@Base+0xd60>
   16e68:	str	r5, [r9, #12]
   16e6c:	ldr	r5, [r8, #4]
   16e70:	cmp	r5, #0
   16e74:	beq	16ef8 <argp_failure@@Base+0x4e8>
   16e78:	mov	r4, r6
   16e7c:	str	r8, [fp, #-124]	; 0xffffff84
   16e80:	b	16e98 <argp_failure@@Base+0x488>
   16e84:	subs	r5, r5, #1
   16e88:	add	r4, r4, #24
   16e8c:	beq	16eec <argp_failure@@Base+0x4dc>
   16e90:	ldr	r7, [r4, #12]
   16e94:	and	r2, r7, #8
   16e98:	cmp	r2, #0
   16e9c:	bne	16e84 <argp_failure@@Base+0x474>
   16ea0:	ldr	r8, [r4, #4]
   16ea4:	sub	r2, r8, #1
   16ea8:	cmp	r2, #254	; 0xfe
   16eac:	bhi	16e84 <argp_failure@@Base+0x474>
   16eb0:	bl	113cc <__ctype_b_loc@plt>
   16eb4:	lsl	r2, r8, #1
   16eb8:	ldr	r1, [r0]
   16ebc:	ldrh	r2, [r1, r2]
   16ec0:	tst	r2, #16384	; 0x4000
   16ec4:	beq	16e84 <argp_failure@@Base+0x474>
   16ec8:	ldrb	r2, [sl]
   16ecc:	cmp	r8, r2
   16ed0:	bne	16e84 <argp_failure@@Base+0x474>
   16ed4:	tst	r7, #2
   16ed8:	beq	1781c <argp_failure@@Base+0xe0c>
   16edc:	subs	r5, r5, #1
   16ee0:	add	sl, sl, #1
   16ee4:	add	r4, r4, #24
   16ee8:	bne	16e90 <argp_failure@@Base+0x480>
   16eec:	ldr	r4, [r6, #12]
   16ef0:	ldr	r8, [fp, #-124]	; 0xffffff84
   16ef4:	and	r4, r4, #8
   16ef8:	ldr	r3, [r9, #28]
   16efc:	ldr	r1, [r9, #24]
   16f00:	cmp	r4, #0
   16f04:	ldr	r2, [r9, #16]
   16f08:	sub	r3, r3, r1
   16f0c:	beq	17788 <argp_failure@@Base+0xd78>
   16f10:	cmp	r3, r2
   16f14:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16f18:	ldr	r4, [r3, #16]
   16f1c:	bhi	17a50 <argp_failure@@Base+0x1040>
   16f20:	str	r4, [r9, #12]
   16f24:	ldr	r5, [r8, #4]
   16f28:	cmp	r5, #0
   16f2c:	addne	r4, r6, #24
   16f30:	bne	16f44 <argp_failure@@Base+0x534>
   16f34:	b	16fd4 <argp_failure@@Base+0x5c4>
   16f38:	subs	r5, r5, #1
   16f3c:	add	r4, r4, #24
   16f40:	beq	16fd4 <argp_failure@@Base+0x5c4>
   16f44:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16f48:	cmp	r3, #0
   16f4c:	beq	16f38 <argp_failure@@Base+0x528>
   16f50:	ldr	r3, [r4, #-12]
   16f54:	tst	r3, #2
   16f58:	bne	16f38 <argp_failure@@Base+0x528>
   16f5c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16f60:	sub	r1, fp, #76	; 0x4c
   16f64:	ldr	r0, [r3, #16]
   16f68:	bl	15150 <argp_parse@@Base+0x1fa0>
   16f6c:	ldr	sl, [r4, #-24]	; 0xffffffe8
   16f70:	mov	r0, sl
   16f74:	bl	113e4 <strlen@plt>
   16f78:	subs	r7, r0, #0
   16f7c:	beq	16f38 <argp_failure@@Base+0x528>
   16f80:	ldr	r2, [r9, #28]
   16f84:	ldr	lr, [r9, #32]
   16f88:	add	ip, r2, r7
   16f8c:	cmp	lr, ip
   16f90:	mov	r1, r7
   16f94:	mov	r0, r9
   16f98:	bcs	16fac <argp_failure@@Base+0x59c>
   16f9c:	bl	192f8 <argp_error@@Base+0x1490>
   16fa0:	cmp	r0, #0
   16fa4:	beq	16f38 <argp_failure@@Base+0x528>
   16fa8:	ldr	r2, [r9, #28]
   16fac:	mov	r0, r2
   16fb0:	mov	r1, sl
   16fb4:	mov	r2, r7
   16fb8:	bl	112b8 <memcpy@plt>
   16fbc:	ldr	r2, [r9, #28]
   16fc0:	subs	r5, r5, #1
   16fc4:	add	r3, r2, r7
   16fc8:	str	r3, [r9, #28]
   16fcc:	add	r4, r4, #24
   16fd0:	bne	16f44 <argp_failure@@Base+0x534>
   16fd4:	ldr	r3, [r9, #28]
   16fd8:	ldr	r1, [r9, #24]
   16fdc:	ldr	r2, [r9, #16]
   16fe0:	sub	r3, r3, r1
   16fe4:	cmp	r3, r2
   16fe8:	bhi	17a04 <argp_failure@@Base+0xff4>
   16fec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16ff0:	mov	r3, #0
   16ff4:	cmp	r2, r3
   16ff8:	str	r3, [r9, #4]
   16ffc:	beq	178ec <argp_failure@@Base+0xedc>
   17000:	ldr	r3, [r6, #12]
   17004:	tst	r3, #8
   17008:	bne	17034 <argp_failure@@Base+0x624>
   1700c:	ldr	r4, [r6, #4]
   17010:	sub	r3, r4, #1
   17014:	cmp	r3, #254	; 0xfe
   17018:	bhi	17034 <argp_failure@@Base+0x624>
   1701c:	bl	113cc <__ctype_b_loc@plt>
   17020:	lsl	r4, r4, #1
   17024:	ldr	r3, [r0]
   17028:	ldrh	r3, [r3, r4]
   1702c:	tst	r3, #16384	; 0x4000
   17030:	bne	17040 <argp_failure@@Base+0x630>
   17034:	ldr	r3, [r6]
   17038:	cmp	r3, #0
   1703c:	beq	17cb4 <argp_failure@@Base+0x12a4>
   17040:	ldr	r3, [r9, #28]
   17044:	ldr	r1, [r9, #24]
   17048:	ldr	r2, [r9, #16]
   1704c:	sub	r3, r3, r1
   17050:	cmp	r3, r2
   17054:	bhi	1789c <argp_failure@@Base+0xe8c>
   17058:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1705c:	str	r3, [r9, #4]
   17060:	ldr	r3, [fp, #-108]	; 0xffffff94
   17064:	add	r8, r8, #28
   17068:	subs	r3, r3, #1
   1706c:	str	r3, [fp, #-108]	; 0xffffff94
   17070:	ldr	r3, [fp, #-120]	; 0xffffff88
   17074:	str	r3, [r9, #12]
   17078:	bne	16db4 <argp_failure@@Base+0x3a4>
   1707c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17080:	ldr	sl, [fp, #-100]	; 0xffffff9c
   17084:	cmp	r3, #0
   17088:	beq	17168 <argp_failure@@Base+0x758>
   1708c:	ldr	r3, [sl, #4]
   17090:	cmp	r3, #0
   17094:	beq	17168 <argp_failure@@Base+0x758>
   17098:	ldr	r3, [fp, #-104]	; 0xffffff98
   1709c:	ldr	r1, [pc, #2956]	; 17c30 <argp_failure@@Base+0x1220>
   170a0:	cmp	r3, #0
   170a4:	ldr	r0, [pc, #2952]	; 17c34 <argp_failure@@Base+0x1224>
   170a8:	ldrne	r2, [r3]
   170ac:	ldreq	r2, [fp, #-104]	; 0xffffff98
   170b0:	ldr	r3, [fp, #-104]	; 0xffffff98
   170b4:	bl	14f00 <argp_parse@@Base+0x1d50>
   170b8:	subs	r4, r0, #0
   170bc:	beq	17168 <argp_failure@@Base+0x758>
   170c0:	ldrb	r3, [r4]
   170c4:	cmp	r3, #0
   170c8:	beq	1715c <argp_failure@@Base+0x74c>
   170cc:	ldr	r3, [r9, #28]
   170d0:	ldr	r2, [r9, #32]
   170d4:	cmp	r3, r2
   170d8:	bcs	17d78 <argp_failure@@Base+0x1368>
   170dc:	add	r1, r3, #1
   170e0:	mov	r2, #10
   170e4:	str	r1, [r9, #28]
   170e8:	strb	r2, [r3]
   170ec:	mov	r0, r4
   170f0:	bl	113e4 <strlen@plt>
   170f4:	subs	r5, r0, #0
   170f8:	beq	17d54 <argp_failure@@Base+0x1344>
   170fc:	ldr	r0, [r9, #28]
   17100:	ldr	r2, [r9, #32]
   17104:	add	r3, r0, r5
   17108:	cmp	r2, r3
   1710c:	bcs	17128 <argp_failure@@Base+0x718>
   17110:	mov	r1, r5
   17114:	mov	r0, r9
   17118:	bl	192f8 <argp_error@@Base+0x1490>
   1711c:	cmp	r0, #0
   17120:	beq	17d54 <argp_failure@@Base+0x1344>
   17124:	ldr	r0, [r9, #28]
   17128:	mov	r2, r5
   1712c:	mov	r1, r4
   17130:	bl	112b8 <memcpy@plt>
   17134:	ldr	r3, [r9, #28]
   17138:	add	r3, r3, r5
   1713c:	str	r3, [r9, #28]
   17140:	ldr	r2, [r9, #32]
   17144:	cmp	r2, r3
   17148:	bls	17d5c <argp_failure@@Base+0x134c>
   1714c:	add	r1, r3, #1
   17150:	mov	r2, #10
   17154:	str	r1, [r9, #28]
   17158:	strb	r2, [r3]
   1715c:	ldr	r3, [pc, #2768]	; 17c34 <argp_failure@@Base+0x1224>
   17160:	cmp	r4, r3
   17164:	bne	17ca8 <argp_failure@@Base+0x1298>
   17168:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1716c:	mov	r4, #1
   17170:	tst	r3, #32
   17174:	beq	16cc0 <argp_failure@@Base+0x2b0>
   17178:	mov	r3, #0
   1717c:	str	r3, [sp]
   17180:	str	r9, [sp, #4]
   17184:	mov	r3, r4
   17188:	ldr	r1, [fp, #-104]	; 0xffffff98
   1718c:	ldr	r0, [fp, #-112]	; 0xffffff90
   17190:	mov	r2, #1
   17194:	bl	152fc <argp_parse@@Base+0x214c>
   17198:	orr	r4, r4, r0
   1719c:	b	16cc0 <argp_failure@@Base+0x2b0>
   171a0:	ldr	r0, [pc, #2704]	; 17c38 <argp_failure@@Base+0x1228>
   171a4:	bl	1136c <getenv@plt>
   171a8:	mov	lr, sl
   171ac:	sub	r3, fp, #76	; 0x4c
   171b0:	mov	ip, r3
   171b4:	str	r3, [fp, #-100]	; 0xffffff9c
   171b8:	mov	r6, r0
   171bc:	ldm	lr!, {r0, r1, r2, r3}
   171c0:	cmp	r6, #0
   171c4:	stmia	ip!, {r0, r1, r2, r3}
   171c8:	ldm	lr!, {r0, r1, r2, r3}
   171cc:	stmia	ip!, {r0, r1, r2, r3}
   171d0:	ldm	lr, {r0, r1}
   171d4:	stm	ip, {r0, r1}
   171d8:	beq	16c58 <argp_failure@@Base+0x248>
   171dc:	ldrb	r9, [r6]
   171e0:	ldr	r8, [pc, #2644]	; 17c3c <argp_failure@@Base+0x122c>
   171e4:	cmp	r9, #0
   171e8:	beq	1733c <argp_failure@@Base+0x92c>
   171ec:	bl	113cc <__ctype_b_loc@plt>
   171f0:	mov	r5, r0
   171f4:	ldr	r1, [r0]
   171f8:	b	17200 <argp_failure@@Base+0x7f0>
   171fc:	ldrb	r9, [r6, #1]!
   17200:	lsl	r3, r9, #1
   17204:	ldrh	r3, [r1, r3]
   17208:	tst	r3, #8192	; 0x2000
   1720c:	bne	171fc <argp_failure@@Base+0x7ec>
   17210:	ands	r2, r3, #1024	; 0x400
   17214:	beq	17334 <argp_failure@@Base+0x924>
   17218:	cmp	r9, #95	; 0x5f
   1721c:	cmpne	r9, #45	; 0x2d
   17220:	lsl	r3, r3, #28
   17224:	moveq	r7, #1
   17228:	movne	r7, #0
   1722c:	orrs	r3, r7, r3, lsr #31
   17230:	beq	17af0 <argp_failure@@Base+0x10e0>
   17234:	mov	r4, r6
   17238:	ldrb	r3, [r4, #1]!
   1723c:	cmp	r3, #95	; 0x5f
   17240:	cmpne	r3, #45	; 0x2d
   17244:	lsl	r2, r3, #1
   17248:	moveq	r0, #1
   1724c:	ldrh	r2, [r1, r2]
   17250:	movne	r0, #0
   17254:	lsl	ip, r2, #28
   17258:	orrs	r0, r0, ip, lsr #31
   1725c:	bne	17238 <argp_failure@@Base+0x828>
   17260:	tst	r2, #8192	; 0x2000
   17264:	sub	r7, r4, r6
   17268:	beq	17280 <argp_failure@@Base+0x870>
   1726c:	ldrb	r3, [r4, #1]!
   17270:	lsl	r2, r3, #1
   17274:	ldrh	r2, [r1, r2]
   17278:	tst	r2, #8192	; 0x2000
   1727c:	bne	1726c <argp_failure@@Base+0x85c>
   17280:	cmp	r3, #44	; 0x2c
   17284:	cmpne	r3, #0
   17288:	beq	1739c <argp_failure@@Base+0x98c>
   1728c:	cmp	r3, #61	; 0x3d
   17290:	beq	176f8 <argp_failure@@Base+0xce8>
   17294:	ldrb	r3, [r4]
   17298:	lsl	r3, r3, #1
   1729c:	ldrh	r3, [r1, r3]
   172a0:	tst	r3, #2048	; 0x800
   172a4:	bne	17698 <argp_failure@@Base+0xc88>
   172a8:	ldr	r3, [fp, #-108]	; 0xffffff94
   172ac:	mov	r9, r3
   172b0:	str	r3, [fp, #-116]	; 0xffffff8c
   172b4:	ldr	r5, [pc, #2436]	; 17c40 <argp_failure@@Base+0x1230>
   172b8:	b	172c8 <argp_failure@@Base+0x8b8>
   172bc:	add	r5, r5, #16
   172c0:	cmp	r5, r8
   172c4:	beq	17b58 <argp_failure@@Base+0x1148>
   172c8:	mov	r0, r5
   172cc:	bl	113e4 <strlen@plt>
   172d0:	cmp	r0, r7
   172d4:	bne	172bc <argp_failure@@Base+0x8ac>
   172d8:	mov	r2, r7
   172dc:	mov	r1, r5
   172e0:	mov	r0, r6
   172e4:	bl	1154c <strncmp@plt>
   172e8:	cmp	r0, #0
   172ec:	bne	172bc <argp_failure@@Base+0x8ac>
   172f0:	cmp	r9, #0
   172f4:	beq	17304 <argp_failure@@Base+0x8f4>
   172f8:	ldrb	r1, [r5, #14]
   172fc:	cmp	r1, #0
   17300:	beq	17d38 <argp_failure@@Base+0x1328>
   17304:	ldrb	r3, [r5, #15]
   17308:	sub	r2, fp, #36	; 0x24
   1730c:	add	r3, r2, r3
   17310:	ldr	r2, [fp, #-116]	; 0xffffff8c
   17314:	str	r2, [r3, #-40]	; 0xffffffd8
   17318:	cmp	r5, r8
   1731c:	beq	17b58 <argp_failure@@Base+0x1148>
   17320:	ldrb	r9, [r4]
   17324:	cmp	r9, #44	; 0x2c
   17328:	beq	17a38 <argp_failure@@Base+0x1028>
   1732c:	mov	r6, r4
   17330:	b	171e4 <argp_failure@@Base+0x7d4>
   17334:	cmp	r9, #0
   17338:	bne	17c90 <argp_failure@@Base+0x1280>
   1733c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   17340:	ldr	r1, [pc, #2296]	; 17c40 <argp_failure@@Base+0x1230>
   17344:	add	r3, r1, #16
   17348:	cmp	r3, r8
   1734c:	mov	r1, r3
   17350:	beq	17a94 <argp_failure@@Base+0x1084>
   17354:	ldrb	r2, [r3, #14]
   17358:	cmp	r2, #0
   1735c:	bne	17344 <argp_failure@@Base+0x934>
   17360:	ldrb	r0, [r3, #15]
   17364:	sub	ip, fp, #36	; 0x24
   17368:	cmp	r0, #32
   1736c:	add	ip, ip, r0
   17370:	beq	17344 <argp_failure@@Base+0x934>
   17374:	ldr	r0, [ip, #-40]	; 0xffffffd8
   17378:	cmp	r0, lr
   1737c:	blt	17344 <argp_failure@@Base+0x934>
   17380:	ldr	r1, [pc, #2236]	; 17c44 <argp_failure@@Base+0x1234>
   17384:	ldr	r0, [fp, #-104]	; 0xffffff98
   17388:	stm	sp, {r1, r3}
   1738c:	ldr	r3, [pc, #2228]	; 17c48 <argp_failure@@Base+0x1238>
   17390:	mov	r1, r2
   17394:	bl	16a10 <argp_failure@@Base>
   17398:	b	16c58 <argp_failure@@Base+0x248>
   1739c:	cmp	r9, #110	; 0x6e
   173a0:	beq	17728 <argp_failure@@Base+0xd18>
   173a4:	mov	r9, #1
   173a8:	str	r9, [fp, #-116]	; 0xffffff8c
   173ac:	b	172b4 <argp_failure@@Base+0x8a4>
   173b0:	ldr	r3, [fp, #4]
   173b4:	ldr	r1, [pc, #2192]	; 17c4c <argp_failure@@Base+0x123c>
   173b8:	mov	r2, r3
   173bc:	mov	r0, r9
   173c0:	bl	19318 <argp_error@@Base+0x14b0>
   173c4:	mov	r4, #1
   173c8:	b	16ca8 <argp_failure@@Base+0x298>
   173cc:	mov	r2, #1
   173d0:	mov	r3, #0
   173d4:	stm	sp, {r2, r9}
   173d8:	ldr	r1, [fp, #-104]	; 0xffffff98
   173dc:	mov	r2, r3
   173e0:	ldr	r0, [fp, #-112]	; 0xffffff90
   173e4:	bl	152fc <argp_parse@@Base+0x214c>
   173e8:	orr	r4, r4, r0
   173ec:	b	16c9c <argp_failure@@Base+0x28c>
   173f0:	ldr	r3, [fp, #-112]	; 0xffffff90
   173f4:	mov	r4, #1
   173f8:	mov	r6, r4
   173fc:	ldr	r1, [r3, #16]
   17400:	ldr	r0, [r3, #8]
   17404:	bl	16800 <argp_parse@@Base+0x3650>
   17408:	mov	r1, #0
   1740c:	add	r3, r0, #14
   17410:	bic	r3, r3, #7
   17414:	sub	sp, sp, r3
   17418:	add	r7, sp, #8
   1741c:	mov	r2, r0
   17420:	mov	r0, r7
   17424:	bl	1142c <memset@plt>
   17428:	sub	r3, fp, #76	; 0x4c
   1742c:	str	r3, [fp, #-100]	; 0xffffff9c
   17430:	ldr	r8, [fp, #-136]	; 0xffffff78
   17434:	str	r7, [fp, #-108]	; 0xffffff94
   17438:	b	17554 <argp_failure@@Base+0xb44>
   1743c:	cmp	r4, #0
   17440:	ldr	r3, [fp, #-108]	; 0xffffff94
   17444:	ldr	r5, [r9, #12]
   17448:	ldrne	r2, [pc, #2048]	; 17c50 <argp_failure@@Base+0x1240>
   1744c:	str	r7, [r9, #12]
   17450:	ldreq	r2, [pc, #2044]	; 17c54 <argp_failure@@Base+0x1244>
   17454:	str	r3, [fp, #-76]	; 0xffffffb4
   17458:	ldr	r1, [pc, #2040]	; 17c58 <argp_failure@@Base+0x1248>
   1745c:	ldr	r3, [fp, #4]
   17460:	mov	r0, r9
   17464:	bl	19318 <argp_error@@Base+0x14b0>
   17468:	ldr	r3, [r9, #28]
   1746c:	ldr	r1, [r9, #24]
   17470:	ldr	r2, [r9, #16]
   17474:	sub	r3, r3, r1
   17478:	cmp	r3, r2
   1747c:	ldr	r7, [sl, #28]
   17480:	bhi	175e8 <argp_failure@@Base+0xbd8>
   17484:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17488:	ldr	r4, [r9, #4]
   1748c:	tst	r3, #2
   17490:	str	r7, [r9, #4]
   17494:	beq	175cc <argp_failure@@Base+0xbbc>
   17498:	ldr	r3, [r8, #4]
   1749c:	cmp	r3, #0
   174a0:	beq	174f0 <argp_failure@@Base+0xae0>
   174a4:	ldr	ip, [r9, #28]
   174a8:	ldr	r2, [r9, #32]
   174ac:	add	r3, ip, #12
   174b0:	cmp	r2, r3
   174b4:	bcs	174d0 <argp_failure@@Base+0xac0>
   174b8:	mov	r1, #12
   174bc:	mov	r0, r9
   174c0:	bl	192f8 <argp_error@@Base+0x1490>
   174c4:	cmp	r0, #0
   174c8:	beq	174f0 <argp_failure@@Base+0xae0>
   174cc:	ldr	ip, [r9, #28]
   174d0:	ldr	r3, [pc, #1924]	; 17c5c <argp_failure@@Base+0x124c>
   174d4:	ldm	r3!, {r0, r1, r2}
   174d8:	str	r0, [ip]
   174dc:	str	r1, [ip, #4]
   174e0:	str	r2, [ip, #8]
   174e4:	ldr	r3, [r9, #28]
   174e8:	add	r3, r3, #12
   174ec:	str	r3, [r9, #28]
   174f0:	mov	r3, r6
   174f4:	ldr	r1, [fp, #-104]	; 0xffffff98
   174f8:	str	r9, [sp]
   174fc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17500:	ldr	r0, [fp, #-112]	; 0xffffff90
   17504:	bl	15e38 <argp_parse@@Base+0x2c88>
   17508:	ldr	r3, [r9, #28]
   1750c:	ldr	r1, [r9, #24]
   17510:	sub	r1, r3, r1
   17514:	mov	r7, r0
   17518:	ldr	r0, [r9, #16]
   1751c:	cmp	r1, r0
   17520:	strls	r5, [r9, #12]
   17524:	bhi	17598 <argp_failure@@Base+0xb88>
   17528:	ldr	r1, [r9, #32]
   1752c:	str	r4, [r9, #4]
   17530:	cmp	r1, r3
   17534:	bls	1757c <argp_failure@@Base+0xb6c>
   17538:	add	r1, r3, #1
   1753c:	mov	r2, #10
   17540:	str	r1, [r9, #28]
   17544:	strb	r2, [r3]
   17548:	cmp	r7, #0
   1754c:	mov	r4, #0
   17550:	beq	175f4 <argp_failure@@Base+0xbe4>
   17554:	ldr	r3, [r9, #28]
   17558:	ldr	r1, [r9, #24]
   1755c:	ldr	r2, [r9, #16]
   17560:	sub	r3, r3, r1
   17564:	cmp	r3, r2
   17568:	ldr	r7, [sl, #28]
   1756c:	bls	1743c <argp_failure@@Base+0xa2c>
   17570:	mov	r0, r9
   17574:	bl	18c68 <argp_error@@Base+0xe00>
   17578:	b	1743c <argp_failure@@Base+0xa2c>
   1757c:	mov	r1, r6
   17580:	mov	r0, r9
   17584:	bl	192f8 <argp_error@@Base+0x1490>
   17588:	cmp	r0, #0
   1758c:	beq	17548 <argp_failure@@Base+0xb38>
   17590:	ldr	r3, [r9, #28]
   17594:	b	17538 <argp_failure@@Base+0xb28>
   17598:	mov	r0, r9
   1759c:	bl	18c68 <argp_error@@Base+0xe00>
   175a0:	ldr	r3, [r9, #28]
   175a4:	ldr	r1, [r9, #24]
   175a8:	ldr	r0, [r9, #16]
   175ac:	sub	r1, r3, r1
   175b0:	cmp	r1, r0
   175b4:	str	r5, [r9, #12]
   175b8:	bls	17528 <argp_failure@@Base+0xb18>
   175bc:	mov	r0, r9
   175c0:	bl	18c68 <argp_error@@Base+0xe00>
   175c4:	ldr	r3, [r9, #28]
   175c8:	b	17528 <argp_failure@@Base+0xb18>
   175cc:	mov	r1, r9
   175d0:	mov	r0, r8
   175d4:	bl	16858 <argp_parse@@Base+0x36a8>
   175d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   175dc:	orr	r3, r3, #2
   175e0:	str	r3, [fp, #-96]	; 0xffffffa0
   175e4:	b	174f0 <argp_failure@@Base+0xae0>
   175e8:	mov	r0, r9
   175ec:	bl	18c68 <argp_error@@Base+0xe00>
   175f0:	b	17484 <argp_failure@@Base+0xa74>
   175f4:	mov	r4, #1
   175f8:	b	16c90 <argp_failure@@Base+0x280>
   175fc:	mov	r1, #0
   17600:	ldr	r0, [fp, #-112]	; 0xffffff90
   17604:	bl	16088 <argp_parse@@Base+0x2ed8>
   17608:	ldr	r2, [pc, #1616]	; 17c60 <argp_failure@@Base+0x1250>
   1760c:	ldr	r4, [r0, #4]
   17610:	ldr	r5, [r0]
   17614:	mov	r1, r4
   17618:	mov	r6, r0
   1761c:	str	r0, [fp, #-136]	; 0xffffff78
   17620:	mov	r0, r5
   17624:	bl	16778 <argp_parse@@Base+0x35c8>
   17628:	ldr	r2, [pc, #1588]	; 17c64 <argp_failure@@Base+0x1254>
   1762c:	cmp	r0, #0
   17630:	mvnne	r3, #0
   17634:	strne	r3, [r0, #12]
   17638:	movne	r3, r6
   1763c:	mov	r0, r5
   17640:	ldrne	r4, [r3, #4]
   17644:	mov	r1, r4
   17648:	bl	16778 <argp_parse@@Base+0x35c8>
   1764c:	cmp	r0, #0
   17650:	mvnne	r3, #0
   17654:	strne	r3, [r0, #12]
   17658:	ldrne	r3, [fp, #-136]	; 0xffffff78
   1765c:	ldrne	r4, [r3, #4]
   17660:	cmp	r4, #0
   17664:	beq	16c84 <argp_failure@@Base+0x274>
   17668:	mov	r3, r5
   1766c:	mov	r1, #0
   17670:	str	r1, [r3, #24]
   17674:	add	r1, r1, #1
   17678:	cmp	r1, r4
   1767c:	add	r3, r3, #28
   17680:	bne	17670 <argp_failure@@Base+0xc60>
   17684:	mov	r0, r5
   17688:	ldr	r3, [pc, #1496]	; 17c68 <argp_failure@@Base+0x1258>
   1768c:	mov	r2, #28
   17690:	bl	11528 <qsort@plt>
   17694:	b	16c84 <argp_failure@@Base+0x274>
   17698:	mov	r2, #10
   1769c:	mov	r1, #0
   176a0:	mov	r0, r4
   176a4:	bl	1124c <strtol@plt>
   176a8:	ldrb	r3, [r4]
   176ac:	ldr	r2, [r5]
   176b0:	lsl	r3, r3, #1
   176b4:	ldrh	r3, [r2, r3]
   176b8:	tst	r3, #2048	; 0x800
   176bc:	str	r0, [fp, #-116]	; 0xffffff8c
   176c0:	beq	176e8 <argp_failure@@Base+0xcd8>
   176c4:	ldrb	r3, [r4, #1]!
   176c8:	lsl	r3, r3, #1
   176cc:	ldrh	r3, [r2, r3]
   176d0:	tst	r3, #2048	; 0x800
   176d4:	bne	176c4 <argp_failure@@Base+0xcb4>
   176d8:	b	176e8 <argp_failure@@Base+0xcd8>
   176dc:	ldrb	r3, [r4, #1]!
   176e0:	lsl	r3, r3, #1
   176e4:	ldrh	r3, [r2, r3]
   176e8:	tst	r3, #8192	; 0x2000
   176ec:	bne	176dc <argp_failure@@Base+0xccc>
   176f0:	ldr	r9, [fp, #-108]	; 0xffffff94
   176f4:	b	172b4 <argp_failure@@Base+0x8a4>
   176f8:	ldrb	r3, [r4, #1]
   176fc:	add	r4, r4, #1
   17700:	lsl	r3, r3, #1
   17704:	ldrh	r3, [r1, r3]
   17708:	tst	r3, #8192	; 0x2000
   1770c:	beq	172a0 <argp_failure@@Base+0x890>
   17710:	ldrb	r3, [r4, #1]!
   17714:	lsl	r3, r3, #1
   17718:	ldrh	r3, [r1, r3]
   1771c:	tst	r3, #8192	; 0x2000
   17720:	bne	17710 <argp_failure@@Base+0xd00>
   17724:	b	172a0 <argp_failure@@Base+0x890>
   17728:	ldrb	r3, [r6, #1]
   1772c:	cmp	r3, #111	; 0x6f
   17730:	bne	173a4 <argp_failure@@Base+0x994>
   17734:	ldrb	r3, [r6, #2]
   17738:	cmp	r3, #45	; 0x2d
   1773c:	bne	173a4 <argp_failure@@Base+0x994>
   17740:	ldr	r3, [fp, #-108]	; 0xffffff94
   17744:	add	r6, r6, #3
   17748:	sub	r7, r7, #3
   1774c:	str	r3, [fp, #-116]	; 0xffffff8c
   17750:	mov	r9, #1
   17754:	b	172b4 <argp_failure@@Base+0x8a4>
   17758:	mov	r3, #1
   1775c:	str	r3, [fp, #-128]	; 0xffffff80
   17760:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17764:	cmp	lr, r5
   17768:	ldr	r5, [r3, #8]
   1776c:	bls	16e68 <argp_failure@@Base+0x458>
   17770:	mov	r0, r9
   17774:	bl	18c68 <argp_error@@Base+0xe00>
   17778:	ldr	r7, [r6, #12]
   1777c:	and	r2, r7, #8
   17780:	mov	r4, r2
   17784:	b	16e68 <argp_failure@@Base+0x458>
   17788:	cmp	r3, r2
   1778c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17790:	ldr	r4, [r3, #12]
   17794:	bhi	17a44 <argp_failure@@Base+0x1034>
   17798:	str	r4, [r9, #12]
   1779c:	ldr	r5, [r8, #4]
   177a0:	cmp	r5, #0
   177a4:	beq	16fd4 <argp_failure@@Base+0x5c4>
   177a8:	add	r4, r6, #24
   177ac:	ldr	r7, [fp, #-100]	; 0xffffff9c
   177b0:	b	177c0 <argp_failure@@Base+0xdb0>
   177b4:	subs	r5, r5, #1
   177b8:	add	r4, r4, #24
   177bc:	beq	16fd4 <argp_failure@@Base+0x5c4>
   177c0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   177c4:	cmp	r3, #0
   177c8:	beq	177b4 <argp_failure@@Base+0xda4>
   177cc:	ldr	r3, [r4, #-12]
   177d0:	tst	r3, #2
   177d4:	bne	177b4 <argp_failure@@Base+0xda4>
   177d8:	sub	r1, fp, #76	; 0x4c
   177dc:	ldr	r0, [r7, #12]
   177e0:	bl	15150 <argp_parse@@Base+0x1fa0>
   177e4:	ldr	r2, [r4, #-24]	; 0xffffffe8
   177e8:	ldr	r1, [pc, #1148]	; 17c6c <argp_failure@@Base+0x125c>
   177ec:	mov	r0, r9
   177f0:	bl	19318 <argp_error@@Base+0x14b0>
   177f4:	ldr	r3, [r6, #8]
   177f8:	ldr	r1, [pc, #1136]	; 17c70 <argp_failure@@Base+0x1260>
   177fc:	subs	r2, r3, #0
   17800:	mov	r0, r9
   17804:	beq	177b4 <argp_failure@@Base+0xda4>
   17808:	ldr	ip, [r6, #12]
   1780c:	tst	ip, #1
   17810:	ldrne	r1, [pc, #1116]	; 17c74 <argp_failure@@Base+0x1264>
   17814:	bl	19318 <argp_error@@Base+0x14b0>
   17818:	b	177b4 <argp_failure@@Base+0xda4>
   1781c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17820:	sub	r1, fp, #76	; 0x4c
   17824:	ldr	r0, [r3, #8]
   17828:	bl	15150 <argp_parse@@Base+0x1fa0>
   1782c:	ldr	r3, [r9, #28]
   17830:	ldr	r2, [r9, #32]
   17834:	cmp	r3, r2
   17838:	bcs	17a78 <argp_failure@@Base+0x1068>
   1783c:	add	r2, r3, #1
   17840:	str	r2, [r9, #28]
   17844:	mov	r2, #45	; 0x2d
   17848:	strb	r2, [r3]
   1784c:	ldr	r3, [r9, #28]
   17850:	ldr	r2, [r9, #32]
   17854:	ldrb	r7, [sl]
   17858:	cmp	r3, r2
   1785c:	bcs	17a5c <argp_failure@@Base+0x104c>
   17860:	add	r2, r3, #1
   17864:	str	r2, [r9, #28]
   17868:	strb	r7, [r3]
   1786c:	ldr	r3, [fp, #-128]	; 0xffffff80
   17870:	cmp	r3, #0
   17874:	beq	17a10 <argp_failure@@Base+0x1000>
   17878:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1787c:	ldr	r3, [r3]
   17880:	cmp	r3, #0
   17884:	bne	17a10 <argp_failure@@Base+0x1000>
   17888:	ldr	r3, [r6, #8]
   1788c:	cmp	r3, #0
   17890:	movne	r3, #1
   17894:	strne	r3, [fp, #-80]	; 0xffffffb0
   17898:	b	16edc <argp_failure@@Base+0x4cc>
   1789c:	mov	r0, r9
   178a0:	bl	18c68 <argp_error@@Base+0xe00>
   178a4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   178a8:	ldr	r3, [r9, #28]
   178ac:	ldr	r1, [r9, #24]
   178b0:	str	r2, [r9, #4]
   178b4:	ldr	r2, [r9, #16]
   178b8:	sub	r3, r3, r1
   178bc:	cmp	r3, r2
   178c0:	bls	17060 <argp_failure@@Base+0x650>
   178c4:	mov	r0, r9
   178c8:	bl	18c68 <argp_error@@Base+0xe00>
   178cc:	b	17060 <argp_failure@@Base+0x650>
   178d0:	mov	r0, r9
   178d4:	bl	18c68 <argp_error@@Base+0xe00>
   178d8:	ldr	lr, [r9, #28]
   178dc:	ldr	r2, [r9, #24]
   178e0:	ldr	r5, [r9, #16]
   178e4:	sub	lr, lr, r2
   178e8:	b	16dd4 <argp_failure@@Base+0x3c4>
   178ec:	ldr	r4, [r6, #16]
   178f0:	ldr	r1, [r6, #4]
   178f4:	mov	r0, r4
   178f8:	ldr	r3, [fp, #-104]	; 0xffffff98
   178fc:	ldr	r2, [r8, #20]
   17900:	bl	14f00 <argp_parse@@Base+0x1d50>
   17904:	subs	r5, r0, #0
   17908:	beq	179c0 <argp_failure@@Base+0xfb0>
   1790c:	ldrb	r3, [r5]
   17910:	cmp	r3, #0
   17914:	beq	179b0 <argp_failure@@Base+0xfa0>
   17918:	ldr	r3, [r9, #28]
   1791c:	ldr	r1, [r9, #24]
   17920:	ldr	r2, [r9, #16]
   17924:	sub	r3, r3, r1
   17928:	cmp	r3, r2
   1792c:	bhi	17bb0 <argp_failure@@Base+0x11a0>
   17930:	ldr	r7, [r9, #20]
   17934:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17938:	bic	r7, r7, r7, asr #31
   1793c:	ldr	r6, [r3, #20]
   17940:	mov	r3, r6
   17944:	str	r6, [r9, #4]
   17948:	add	r2, r6, #3
   1794c:	cmp	r2, r7
   17950:	str	r3, [r9, #12]
   17954:	bcs	17b00 <argp_failure@@Base+0x10f0>
   17958:	ldr	r3, [r9, #28]
   1795c:	ldr	r2, [r9, #32]
   17960:	cmp	r3, r2
   17964:	bcs	17d00 <argp_failure@@Base+0x12f0>
   17968:	add	r1, r3, #1
   1796c:	mov	r2, #10
   17970:	str	r1, [r9, #28]
   17974:	strb	r2, [r3]
   17978:	mov	r0, r5
   1797c:	bl	113e4 <strlen@plt>
   17980:	subs	r6, r0, #0
   17984:	beq	179b0 <argp_failure@@Base+0xfa0>
   17988:	ldr	r0, [r9, #28]
   1798c:	ldr	r2, [r9, #32]
   17990:	add	r3, r0, r6
   17994:	cmp	r2, r3
   17998:	bcs	17b94 <argp_failure@@Base+0x1184>
   1799c:	mov	r1, r6
   179a0:	mov	r0, r9
   179a4:	bl	192f8 <argp_error@@Base+0x1490>
   179a8:	cmp	r0, #0
   179ac:	bne	17b90 <argp_failure@@Base+0x1180>
   179b0:	cmp	r4, r5
   179b4:	beq	179c0 <argp_failure@@Base+0xfb0>
   179b8:	mov	r0, r5
   179bc:	bl	14048 <argp_parse@@Base+0xe98>
   179c0:	ldr	r3, [r9, #28]
   179c4:	ldr	r2, [r9, #24]
   179c8:	ldr	r1, [r9, #16]
   179cc:	sub	r2, r3, r2
   179d0:	cmp	r2, r1
   179d4:	bhi	17ae0 <argp_failure@@Base+0x10d0>
   179d8:	ldr	r1, [r9, #32]
   179dc:	mov	r2, #0
   179e0:	cmp	r1, r3
   179e4:	str	r2, [r9, #4]
   179e8:	bls	17ac4 <argp_failure@@Base+0x10b4>
   179ec:	add	r1, r3, #1
   179f0:	mov	r2, #10
   179f4:	str	r1, [r9, #28]
   179f8:	strb	r2, [r3]
   179fc:	str	r8, [fp, #-88]	; 0xffffffa8
   17a00:	b	17040 <argp_failure@@Base+0x630>
   17a04:	mov	r0, r9
   17a08:	bl	18c68 <argp_error@@Base+0xe00>
   17a0c:	b	16fec <argp_failure@@Base+0x5dc>
   17a10:	ldr	r2, [r6, #8]
   17a14:	cmp	r2, #0
   17a18:	beq	16edc <argp_failure@@Base+0x4cc>
   17a1c:	ldr	r3, [r6, #12]
   17a20:	mov	r0, r9
   17a24:	tst	r3, #1
   17a28:	ldrne	r1, [pc, #584]	; 17c78 <argp_failure@@Base+0x1268>
   17a2c:	ldreq	r1, [pc, #584]	; 17c7c <argp_failure@@Base+0x126c>
   17a30:	bl	19318 <argp_error@@Base+0x14b0>
   17a34:	b	16edc <argp_failure@@Base+0x4cc>
   17a38:	ldrb	r9, [r4, #1]
   17a3c:	add	r4, r4, #1
   17a40:	b	1732c <argp_failure@@Base+0x91c>
   17a44:	mov	r0, r9
   17a48:	bl	18c68 <argp_error@@Base+0xe00>
   17a4c:	b	17798 <argp_failure@@Base+0xd88>
   17a50:	mov	r0, r9
   17a54:	bl	18c68 <argp_error@@Base+0xe00>
   17a58:	b	16f20 <argp_failure@@Base+0x510>
   17a5c:	mov	r1, #1
   17a60:	mov	r0, r9
   17a64:	bl	192f8 <argp_error@@Base+0x1490>
   17a68:	cmp	r0, #0
   17a6c:	beq	1786c <argp_failure@@Base+0xe5c>
   17a70:	ldr	r3, [r9, #28]
   17a74:	b	17860 <argp_failure@@Base+0xe50>
   17a78:	mov	r1, #1
   17a7c:	mov	r0, r9
   17a80:	bl	192f8 <argp_error@@Base+0x1490>
   17a84:	cmp	r0, #0
   17a88:	beq	1784c <argp_failure@@Base+0xe3c>
   17a8c:	ldr	r3, [r9, #28]
   17a90:	b	1783c <argp_failure@@Base+0xe2c>
   17a94:	ldr	lr, [fp, #-100]	; 0xffffff9c
   17a98:	ldr	sl, [pc, #388]	; 17c24 <argp_failure@@Base+0x1214>
   17a9c:	mov	r4, #1
   17aa0:	ldm	lr!, {r0, r1, r2, r3}
   17aa4:	mov	ip, sl
   17aa8:	stmia	ip!, {r0, r1, r2, r3}
   17aac:	ldm	lr!, {r0, r1, r2, r3}
   17ab0:	stmia	ip!, {r0, r1, r2, r3}
   17ab4:	ldm	lr, {r0, r1}
   17ab8:	stm	ip, {r0, r1}
   17abc:	str	r4, [sl, #36]	; 0x24
   17ac0:	b	16c58 <argp_failure@@Base+0x248>
   17ac4:	mov	r1, #1
   17ac8:	mov	r0, r9
   17acc:	bl	192f8 <argp_error@@Base+0x1490>
   17ad0:	cmp	r0, #0
   17ad4:	beq	179fc <argp_failure@@Base+0xfec>
   17ad8:	ldr	r3, [r9, #28]
   17adc:	b	179ec <argp_failure@@Base+0xfdc>
   17ae0:	mov	r0, r9
   17ae4:	bl	18c68 <argp_error@@Base+0xe00>
   17ae8:	ldr	r3, [r9, #28]
   17aec:	b	179d8 <argp_failure@@Base+0xfc8>
   17af0:	mov	r7, r3
   17af4:	mov	r4, r6
   17af8:	mov	r3, r9
   17afc:	b	17280 <argp_failure@@Base+0x870>
   17b00:	cmp	r6, r7
   17b04:	bhi	17cf0 <argp_failure@@Base+0x12e0>
   17b08:	ldr	r3, [r9, #28]
   17b0c:	ldr	r1, [r9, #32]
   17b10:	add	r2, r3, #3
   17b14:	cmp	r1, r2
   17b18:	bcs	17b34 <argp_failure@@Base+0x1124>
   17b1c:	mov	r1, #3
   17b20:	mov	r0, r9
   17b24:	bl	192f8 <argp_error@@Base+0x1490>
   17b28:	cmp	r0, #0
   17b2c:	beq	17978 <argp_failure@@Base+0xf68>
   17b30:	ldr	r3, [r9, #28]
   17b34:	ldr	r2, [pc, #324]	; 17c80 <argp_failure@@Base+0x1270>
   17b38:	ldrh	r1, [r2]
   17b3c:	ldrb	r2, [r2, #2]
   17b40:	strh	r1, [r3]
   17b44:	strb	r2, [r3, #2]
   17b48:	ldr	r3, [r9, #28]
   17b4c:	add	r3, r3, #3
   17b50:	str	r3, [r9, #28]
   17b54:	b	17978 <argp_failure@@Base+0xf68>
   17b58:	mov	r2, #0
   17b5c:	str	r6, [sp, #4]
   17b60:	str	r7, [sp]
   17b64:	ldr	r3, [pc, #280]	; 17c84 <argp_failure@@Base+0x1274>
   17b68:	mov	r1, r2
   17b6c:	ldr	r0, [fp, #-104]	; 0xffffff98
   17b70:	bl	16a10 <argp_failure@@Base>
   17b74:	b	17320 <argp_failure@@Base+0x910>
   17b78:	ldr	r3, [fp, #-136]	; 0xffffff78
   17b7c:	ldr	r8, [r3]
   17b80:	str	r4, [fp, #-88]	; 0xffffffa8
   17b84:	str	r4, [fp, #-84]	; 0xffffffac
   17b88:	str	r4, [fp, #-80]	; 0xffffffb0
   17b8c:	b	16db0 <argp_failure@@Base+0x3a0>
   17b90:	ldr	r0, [r9, #28]
   17b94:	mov	r2, r6
   17b98:	mov	r1, r5
   17b9c:	bl	112b8 <memcpy@plt>
   17ba0:	ldr	r3, [r9, #28]
   17ba4:	add	r6, r3, r6
   17ba8:	str	r6, [r9, #28]
   17bac:	b	179b0 <argp_failure@@Base+0xfa0>
   17bb0:	mov	r0, r9
   17bb4:	bl	18c68 <argp_error@@Base+0xe00>
   17bb8:	ldr	r3, [r9, #28]
   17bbc:	ldr	r1, [r9, #24]
   17bc0:	ldr	r2, [r9, #16]
   17bc4:	ldr	r7, [r9, #20]
   17bc8:	ldr	sl, [fp, #-100]	; 0xffffff9c
   17bcc:	sub	r3, r3, r1
   17bd0:	cmp	r3, r2
   17bd4:	ldr	r6, [sl, #20]
   17bd8:	bic	r7, r7, r7, asr #31
   17bdc:	bls	17940 <argp_failure@@Base+0xf30>
   17be0:	mov	r0, r9
   17be4:	bl	18c68 <argp_error@@Base+0xe00>
   17be8:	ldr	r3, [r9, #28]
   17bec:	ldr	r1, [r9, #24]
   17bf0:	ldr	r2, [r9, #16]
   17bf4:	sub	r3, r3, r1
   17bf8:	cmp	r3, r2
   17bfc:	ldr	r3, [sl, #20]
   17c00:	str	r6, [r9, #4]
   17c04:	movls	r6, r3
   17c08:	bls	17948 <argp_failure@@Base+0xf38>
   17c0c:	mov	r0, r9
   17c10:	str	r3, [fp, #-124]	; 0xffffff84
   17c14:	bl	18c68 <argp_error@@Base+0xe00>
   17c18:	ldr	r6, [sl, #20]
   17c1c:	ldr	r3, [fp, #-124]	; 0xffffff84
   17c20:	b	17948 <argp_failure@@Base+0xf38>
   17c24:	andeq	fp, r2, r8, lsr #5
   17c28:	andeq	ip, r2, r8, asr #4
   17c2c:	strdeq	sl, [r1], -r8
   17c30:	andeq	r0, r0, #5
   17c34:	andeq	sl, r1, r4, lsl #11
   17c38:	andeq	sl, r1, r0, asr #8
   17c3c:	andeq	sl, r1, r0, lsl r3
   17c40:	andeq	sl, r1, r0, lsl #5
   17c44:	strdeq	sl, [r1], -ip
   17c48:	andeq	sl, r1, r8, asr #9
   17c4c:	andeq	sl, r1, ip, lsr #10
   17c50:	andeq	sl, r1, r4, lsl #10
   17c54:	andeq	sl, r1, r4, lsl r5
   17c58:	andeq	sl, r1, ip, lsl #10
   17c5c:	andeq	sl, r1, ip, lsl r5
   17c60:	andeq	r9, r1, r4, lsl #28
   17c64:	andeq	r9, r1, r4, ror #27
   17c68:	andeq	r5, r1, r8, lsr r9
   17c6c:	andeq	sl, r1, ip, ror #10
   17c70:	andeq	sl, r1, ip, ror r5
   17c74:	andeq	sl, r1, r4, ror r5
   17c78:	andeq	sl, r1, r4, ror #10
   17c7c:			; <UNDEFINED> instruction: 0x00019db4
   17c80:	andeq	sl, r1, r0, lsl #11
   17c84:	andeq	sl, r1, r0, lsl #9
   17c88:	andeq	sl, r1, r8, lsr #9
   17c8c:	andeq	sl, r1, r0, asr r4
   17c90:	str	r6, [sp]
   17c94:	ldr	r3, [pc, #-20]	; 17c88 <argp_failure@@Base+0x1278>
   17c98:	mov	r1, r2
   17c9c:	ldr	r0, [fp, #-104]	; 0xffffff98
   17ca0:	bl	16a10 <argp_failure@@Base>
   17ca4:	b	1733c <argp_failure@@Base+0x92c>
   17ca8:	mov	r0, r4
   17cac:	bl	14048 <argp_parse@@Base+0xe98>
   17cb0:	b	17168 <argp_failure@@Base+0x758>
   17cb4:	ldr	r0, [r6, #16]
   17cb8:	sub	r2, fp, #76	; 0x4c
   17cbc:	ldr	r1, [r8, #20]
   17cc0:	bl	14f44 <argp_parse@@Base+0x1d94>
   17cc4:	b	179fc <argp_failure@@Base+0xfec>
   17cc8:	mov	r1, #1
   17ccc:	mov	r0, r9
   17cd0:	bl	192f8 <argp_error@@Base+0x1490>
   17cd4:	cmp	r0, #0
   17cd8:	beq	16d30 <argp_failure@@Base+0x320>
   17cdc:	ldr	r3, [r9, #28]
   17ce0:	b	16d20 <argp_failure@@Base+0x310>
   17ce4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17ce8:	bl	11324 <funlockfile@plt>
   17cec:	b	16cf0 <argp_failure@@Base+0x2e0>
   17cf0:	mov	r1, r6
   17cf4:	mov	r0, r9
   17cf8:	bl	14e6c <argp_parse@@Base+0x1cbc>
   17cfc:	b	17978 <argp_failure@@Base+0xf68>
   17d00:	mov	r1, #1
   17d04:	mov	r0, r9
   17d08:	bl	192f8 <argp_error@@Base+0x1490>
   17d0c:	cmp	r0, #0
   17d10:	beq	17978 <argp_failure@@Base+0xf68>
   17d14:	ldr	r3, [r9, #28]
   17d18:	b	17968 <argp_failure@@Base+0xf58>
   17d1c:	mov	r1, #1
   17d20:	mov	r0, r9
   17d24:	bl	192f8 <argp_error@@Base+0x1490>
   17d28:	cmp	r0, #0
   17d2c:	beq	16d80 <argp_failure@@Base+0x370>
   17d30:	ldr	r3, [r9, #28]
   17d34:	b	16d70 <argp_failure@@Base+0x360>
   17d38:	str	r6, [sp, #4]
   17d3c:	str	r7, [sp]
   17d40:	ldr	r3, [pc, #-188]	; 17c8c <argp_failure@@Base+0x127c>
   17d44:	mov	r2, #0
   17d48:	ldr	r0, [fp, #-104]	; 0xffffff98
   17d4c:	bl	16a10 <argp_failure@@Base>
   17d50:	b	17318 <argp_failure@@Base+0x908>
   17d54:	ldr	r3, [r9, #28]
   17d58:	b	17140 <argp_failure@@Base+0x730>
   17d5c:	mov	r1, #1
   17d60:	mov	r0, r9
   17d64:	bl	192f8 <argp_error@@Base+0x1490>
   17d68:	cmp	r0, #0
   17d6c:	beq	1715c <argp_failure@@Base+0x74c>
   17d70:	ldr	r3, [r9, #28]
   17d74:	b	1714c <argp_failure@@Base+0x73c>
   17d78:	mov	r1, #1
   17d7c:	mov	r0, r9
   17d80:	bl	192f8 <argp_error@@Base+0x1490>
   17d84:	cmp	r0, #0
   17d88:	beq	170ec <argp_failure@@Base+0x6dc>
   17d8c:	ldr	r3, [r9, #28]
   17d90:	b	170dc <argp_failure@@Base+0x6cc>

00017d94 <argp_help@@Base>:
   17d94:	push	{lr}		; (str lr, [sp, #-4]!)
   17d98:	sub	sp, sp, #12
   17d9c:	str	r3, [sp]
   17da0:	mov	r3, r2
   17da4:	mov	r2, r1
   17da8:	mov	r1, #0
   17dac:	bl	16c18 <argp_failure@@Base+0x208>
   17db0:	add	sp, sp, #12
   17db4:	pop	{pc}		; (ldr pc, [sp], #4)

00017db8 <argp_state_help@@Base>:
   17db8:	push	{r4, r5, lr}
   17dbc:	subs	r4, r0, #0
   17dc0:	sub	sp, sp, #12
   17dc4:	mov	r5, r2
   17dc8:	beq	17e28 <argp_state_help@@Base+0x70>
   17dcc:	ldr	r3, [r4, #16]
   17dd0:	tst	r3, #2
   17dd4:	bne	17e20 <argp_state_help@@Base+0x68>
   17dd8:	cmp	r1, #0
   17ddc:	beq	17e20 <argp_state_help@@Base+0x68>
   17de0:	tst	r3, #64	; 0x40
   17de4:	ldr	r3, [r4, #40]	; 0x28
   17de8:	orrne	r5, r5, #128	; 0x80
   17dec:	ldr	r0, [r4]
   17df0:	mov	r2, r1
   17df4:	str	r3, [sp]
   17df8:	mov	r1, r4
   17dfc:	mov	r3, r5
   17e00:	bl	16c18 <argp_failure@@Base+0x208>
   17e04:	ldr	r3, [r4, #16]
   17e08:	tst	r3, #32
   17e0c:	bne	17e20 <argp_state_help@@Base+0x68>
   17e10:	ands	r0, r5, #256	; 0x100
   17e14:	bne	17e54 <argp_state_help@@Base+0x9c>
   17e18:	tst	r5, #512	; 0x200
   17e1c:	bne	17e50 <argp_state_help@@Base+0x98>
   17e20:	add	sp, sp, #12
   17e24:	pop	{r4, r5, pc}
   17e28:	cmp	r1, #0
   17e2c:	beq	17e20 <argp_state_help@@Base+0x68>
   17e30:	ldr	r3, [pc, #40]	; 17e60 <argp_state_help@@Base+0xa8>
   17e34:	mov	r2, r1
   17e38:	mov	r1, r4
   17e3c:	ldr	ip, [r3]
   17e40:	mov	r3, r5
   17e44:	str	ip, [sp]
   17e48:	bl	16c18 <argp_failure@@Base+0x208>
   17e4c:	b	17e10 <argp_state_help@@Base+0x58>
   17e50:	bl	113d8 <exit@plt>
   17e54:	ldr	r3, [pc, #8]	; 17e64 <argp_state_help@@Base+0xac>
   17e58:	ldr	r0, [r3]
   17e5c:	bl	113d8 <exit@plt>
   17e60:	andeq	fp, r2, r8, ror #5
   17e64:	andeq	fp, r2, r0, ror #5

00017e68 <argp_error@@Base>:
   17e68:	push	{r1, r2, r3}
   17e6c:	push	{r4, r5, lr}
   17e70:	subs	r5, r0, #0
   17e74:	sub	sp, sp, #8
   17e78:	beq	17f48 <argp_error@@Base+0xe0>
   17e7c:	ldr	r3, [r5, #16]
   17e80:	tst	r3, #2
   17e84:	bne	17f38 <argp_error@@Base+0xd0>
   17e88:	ldr	r4, [r5, #44]	; 0x2c
   17e8c:	cmp	r4, #0
   17e90:	beq	17f38 <argp_error@@Base+0xd0>
   17e94:	mov	r0, r4
   17e98:	bl	11510 <flockfile@plt>
   17e9c:	ldr	r0, [r5, #40]	; 0x28
   17ea0:	add	r3, sp, #24
   17ea4:	str	r3, [sp, #4]
   17ea8:	mov	r1, r4
   17eac:	bl	11210 <fputs_unlocked@plt>
   17eb0:	ldr	r3, [r4, #20]
   17eb4:	ldr	r2, [r4, #24]
   17eb8:	cmp	r3, r2
   17ebc:	addcc	r1, r3, #1
   17ec0:	movcc	r2, #58	; 0x3a
   17ec4:	strcc	r1, [r4, #20]
   17ec8:	strbcc	r2, [r3]
   17ecc:	bcs	17f94 <argp_error@@Base+0x12c>
   17ed0:	ldr	r3, [r4, #20]
   17ed4:	ldr	r2, [r4, #24]
   17ed8:	cmp	r3, r2
   17edc:	addcc	r1, r3, #1
   17ee0:	movcc	r2, #32
   17ee4:	strcc	r1, [r4, #20]
   17ee8:	strbcc	r2, [r3]
   17eec:	bcs	17f84 <argp_error@@Base+0x11c>
   17ef0:	ldr	r1, [sp, #20]
   17ef4:	ldr	r2, [sp, #4]
   17ef8:	mov	r0, r4
   17efc:	bl	114b0 <vfprintf@plt>
   17f00:	ldr	r3, [r4, #20]
   17f04:	ldr	r2, [r4, #24]
   17f08:	cmp	r3, r2
   17f0c:	addcc	r1, r3, #1
   17f10:	movcc	r2, #10
   17f14:	strcc	r1, [r4, #20]
   17f18:	strbcc	r2, [r3]
   17f1c:	bcs	17f74 <argp_error@@Base+0x10c>
   17f20:	mov	r0, r5
   17f24:	mov	r2, #260	; 0x104
   17f28:	mov	r1, r4
   17f2c:	bl	17db8 <argp_state_help@@Base>
   17f30:	mov	r0, r4
   17f34:	bl	11324 <funlockfile@plt>
   17f38:	add	sp, sp, #8
   17f3c:	pop	{r4, r5, lr}
   17f40:	add	sp, sp, #12
   17f44:	bx	lr
   17f48:	ldr	r3, [pc, #84]	; 17fa4 <argp_error@@Base+0x13c>
   17f4c:	ldr	r4, [r3]
   17f50:	cmp	r4, #0
   17f54:	beq	17f38 <argp_error@@Base+0xd0>
   17f58:	mov	r0, r4
   17f5c:	bl	11510 <flockfile@plt>
   17f60:	ldr	r2, [pc, #64]	; 17fa8 <argp_error@@Base+0x140>
   17f64:	add	r3, sp, #24
   17f68:	str	r3, [sp, #4]
   17f6c:	ldr	r0, [r2]
   17f70:	b	17ea8 <argp_error@@Base+0x40>
   17f74:	mov	r1, #10
   17f78:	mov	r0, r4
   17f7c:	bl	11480 <__overflow@plt>
   17f80:	b	17f20 <argp_error@@Base+0xb8>
   17f84:	mov	r1, #32
   17f88:	mov	r0, r4
   17f8c:	bl	11480 <__overflow@plt>
   17f90:	b	17ef0 <argp_error@@Base+0x88>
   17f94:	mov	r1, #58	; 0x3a
   17f98:	mov	r0, r4
   17f9c:	bl	11480 <__overflow@plt>
   17fa0:	b	17ed0 <argp_error@@Base+0x68>
   17fa4:	strdeq	fp, [r2], -r0
   17fa8:	andeq	fp, r2, r8, ror #5
   17fac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17fb0:	ldr	r4, [r1, #32]
   17fb4:	ldr	r8, [r1, #28]
   17fb8:	ldr	r7, [r1]
   17fbc:	add	r6, r0, r4, lsl #2
   17fc0:	mov	r2, r8
   17fc4:	mov	r5, r7
   17fc8:	cmp	r5, r4
   17fcc:	movle	r3, #0
   17fd0:	movgt	r3, #1
   17fd4:	cmp	r2, r4
   17fd8:	movge	r3, #0
   17fdc:	cmp	r3, #0
   17fe0:	beq	18054 <argp_error@@Base+0x1ec>
   17fe4:	sub	r3, r5, r4
   17fe8:	sub	sl, r4, r2
   17fec:	cmp	r3, sl
   17ff0:	ble	18024 <argp_error@@Base+0x1bc>
   17ff4:	sub	r5, r5, sl
   17ff8:	add	sl, sl, r2
   17ffc:	add	ip, r0, r5, lsl #2
   18000:	add	sl, r0, sl, lsl #2
   18004:	add	r3, r0, r2, lsl #2
   18008:	ldr	r9, [ip]
   1800c:	ldr	lr, [r3]
   18010:	str	r9, [r3], #4
   18014:	cmp	sl, r3
   18018:	str	lr, [ip], #4
   1801c:	bne	18008 <argp_error@@Base+0x1a0>
   18020:	b	17fc8 <argp_error@@Base+0x160>
   18024:	add	sl, r3, r2
   18028:	add	r3, r0, r2, lsl #2
   1802c:	add	r9, r0, sl, lsl #2
   18030:	mov	r2, r6
   18034:	ldr	lr, [r2]
   18038:	ldr	ip, [r3]
   1803c:	str	lr, [r3], #4
   18040:	cmp	r3, r9
   18044:	str	ip, [r2], #4
   18048:	bne	18034 <argp_error@@Base+0x1cc>
   1804c:	mov	r2, sl
   18050:	b	17fc8 <argp_error@@Base+0x160>
   18054:	sub	r4, r7, r4
   18058:	add	r8, r4, r8
   1805c:	str	r8, [r1, #28]
   18060:	str	r7, [r1, #32]
   18064:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1806c:	sub	sp, sp, #44	; 0x2c
   18070:	str	r1, [sp, #20]
   18074:	ldr	r1, [sp, #88]	; 0x58
   18078:	str	r0, [sp, #24]
   1807c:	str	r2, [sp, #28]
   18080:	ldr	r8, [r1, #20]
   18084:	str	r3, [sp, #12]
   18088:	mov	r7, r8
   1808c:	ldrb	r5, [r8]
   18090:	cmp	r5, #61	; 0x3d
   18094:	cmpne	r5, #0
   18098:	movne	r5, #1
   1809c:	moveq	r5, #0
   180a0:	beq	180b8 <argp_error@@Base+0x250>
   180a4:	ldrb	r3, [r7, #1]!
   180a8:	cmp	r3, #0
   180ac:	cmpne	r3, #61	; 0x3d
   180b0:	bne	180a4 <argp_error@@Base+0x23c>
   180b4:	sub	r5, r7, r8
   180b8:	ldr	r3, [sp, #12]
   180bc:	ldr	sl, [r3]
   180c0:	cmp	sl, #0
   180c4:	beq	18378 <argp_error@@Base+0x510>
   180c8:	mov	fp, r3
   180cc:	mov	r4, sl
   180d0:	mov	r6, #0
   180d4:	mov	r2, r5
   180d8:	mov	r1, r8
   180dc:	mov	r0, r4
   180e0:	bl	1154c <strncmp@plt>
   180e4:	mov	r9, fp
   180e8:	cmp	r0, #0
   180ec:	mov	r0, r4
   180f0:	bne	18100 <argp_error@@Base+0x298>
   180f4:	bl	113e4 <strlen@plt>
   180f8:	cmp	r0, r5
   180fc:	beq	1818c <argp_error@@Base+0x324>
   18100:	ldr	r4, [fp, #16]!
   18104:	add	r6, r6, #1
   18108:	cmp	r4, #0
   1810c:	bne	180d4 <argp_error@@Base+0x26c>
   18110:	ldr	r3, [sp, #12]
   18114:	ldr	fp, [sp, #88]	; 0x58
   18118:	mov	r0, sl
   1811c:	mov	r1, r8
   18120:	mov	r9, r4
   18124:	mov	sl, r4
   18128:	mov	r8, r3
   1812c:	mvn	r2, #0
   18130:	str	r4, [sp, #36]	; 0x24
   18134:	str	r4, [sp, #16]
   18138:	str	r2, [sp, #32]
   1813c:	mov	r2, r5
   18140:	bl	1154c <strncmp@plt>
   18144:	cmp	r0, #0
   18148:	bne	18168 <argp_error@@Base+0x300>
   1814c:	cmp	r9, #0
   18150:	beq	183e8 <argp_error@@Base+0x580>
   18154:	ldr	r3, [sp, #84]	; 0x54
   18158:	cmp	r3, #0
   1815c:	beq	18230 <argp_error@@Base+0x3c8>
   18160:	cmp	r4, #0
   18164:	beq	18264 <argp_error@@Base+0x3fc>
   18168:	ldr	r0, [r8, #16]!
   1816c:	add	sl, sl, #1
   18170:	cmp	r0, #0
   18174:	beq	18298 <argp_error@@Base+0x430>
   18178:	ldr	r1, [fp, #20]
   1817c:	b	1813c <argp_error@@Base+0x2d4>
   18180:	cmp	r9, #0
   18184:	beq	18378 <argp_error@@Base+0x510>
   18188:	ldr	r6, [sp, #32]
   1818c:	ldr	r3, [sp, #88]	; 0x58
   18190:	ldr	r0, [sp, #88]	; 0x58
   18194:	mov	r1, #0
   18198:	ldr	r2, [r3]
   1819c:	str	r1, [r0, #20]
   181a0:	add	r3, r2, #1
   181a4:	str	r3, [r0]
   181a8:	ldrb	r1, [r7]
   181ac:	cmp	r1, #0
   181b0:	bne	181f0 <argp_error@@Base+0x388>
   181b4:	ldr	r1, [r9, #4]
   181b8:	cmp	r1, #1
   181bc:	beq	183f4 <argp_error@@Base+0x58c>
   181c0:	ldr	r3, [sp, #80]	; 0x50
   181c4:	ldr	r2, [r9, #8]
   181c8:	cmp	r3, #0
   181cc:	strne	r6, [r3]
   181d0:	cmp	r2, #0
   181d4:	movne	r3, #0
   181d8:	ldreq	r3, [r9, #12]
   181dc:	ldrne	r1, [r9, #12]
   181e0:	strne	r1, [r2]
   181e4:	mov	r0, r3
   181e8:	add	sp, sp, #44	; 0x2c
   181ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   181f0:	ldr	r3, [r9, #4]
   181f4:	cmp	r3, #0
   181f8:	movne	r3, r0
   181fc:	addne	r7, r7, #1
   18200:	strne	r7, [r3, #12]
   18204:	bne	181c0 <argp_error@@Base+0x358>
   18208:	ldr	r3, [sp, #92]	; 0x5c
   1820c:	cmp	r3, #0
   18210:	bne	18340 <argp_error@@Base+0x4d8>
   18214:	ldr	r1, [sp, #88]	; 0x58
   18218:	ldr	r2, [r9, #12]
   1821c:	mov	r3, #63	; 0x3f
   18220:	str	r2, [r1, #8]
   18224:	mov	r0, r3
   18228:	add	sp, sp, #44	; 0x2c
   1822c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18230:	ldr	r2, [r9, #4]
   18234:	ldr	r3, [r8, #4]
   18238:	cmp	r2, r3
   1823c:	bne	18160 <argp_error@@Base+0x2f8>
   18240:	ldr	r2, [r9, #8]
   18244:	ldr	r3, [r8, #8]
   18248:	cmp	r2, r3
   1824c:	bne	18160 <argp_error@@Base+0x2f8>
   18250:	ldr	r2, [r9, #12]
   18254:	ldr	r3, [r8, #12]
   18258:	cmp	r2, r3
   1825c:	bne	18160 <argp_error@@Base+0x2f8>
   18260:	b	18168 <argp_error@@Base+0x300>
   18264:	ldr	r3, [sp, #92]	; 0x5c
   18268:	cmp	r3, #0
   1826c:	ldr	r3, [sp, #16]
   18270:	beq	18330 <argp_error@@Base+0x4c8>
   18274:	cmp	r3, #0
   18278:	beq	1854c <argp_error@@Base+0x6e4>
   1827c:	ldr	r3, [sp, #16]
   18280:	ldr	r0, [r8, #16]!
   18284:	mov	r2, #1
   18288:	cmp	r0, #0
   1828c:	strb	r2, [r3, sl]
   18290:	add	sl, sl, #1
   18294:	bne	18178 <argp_error@@Base+0x310>
   18298:	ldr	r3, [sp, #16]
   1829c:	cmp	r3, #0
   182a0:	cmpeq	r4, #0
   182a4:	beq	18180 <argp_error@@Base+0x318>
   182a8:	ldr	r3, [sp, #92]	; 0x5c
   182ac:	cmp	r3, #0
   182b0:	beq	18430 <argp_error@@Base+0x5c8>
   182b4:	cmp	r4, #0
   182b8:	bne	184b8 <argp_error@@Base+0x650>
   182bc:	ldr	r5, [pc, #716]	; 18590 <argp_error@@Base+0x728>
   182c0:	ldr	r8, [sp, #16]
   182c4:	ldr	r7, [pc, #712]	; 18594 <argp_error@@Base+0x72c>
   182c8:	ldr	r0, [r5]
   182cc:	bl	11510 <flockfile@plt>
   182d0:	ldr	r3, [sp, #20]
   182d4:	ldr	r0, [r5]
   182d8:	ldr	r1, [pc, #696]	; 18598 <argp_error@@Base+0x730>
   182dc:	ldr	r2, [r3]
   182e0:	ldr	r3, [sp, #88]	; 0x58
   182e4:	add	r6, r8, r6
   182e8:	ldr	r3, [r3, #20]
   182ec:	str	r3, [sp]
   182f0:	ldr	r3, [sp, #96]	; 0x60
   182f4:	bl	113fc <fprintf@plt>
   182f8:	ldr	r9, [sp, #12]
   182fc:	b	1830c <argp_error@@Base+0x4a4>
   18300:	cmp	r8, r6
   18304:	add	r4, r4, #1
   18308:	beq	1841c <argp_error@@Base+0x5b4>
   1830c:	ldrb	r3, [r8], #1
   18310:	cmp	r3, #0
   18314:	beq	18300 <argp_error@@Base+0x498>
   18318:	ldr	r3, [r9, r4, lsl #4]
   1831c:	ldr	r2, [sp, #96]	; 0x60
   18320:	mov	r1, r7
   18324:	ldr	r0, [r5]
   18328:	bl	113fc <fprintf@plt>
   1832c:	b	18300 <argp_error@@Base+0x498>
   18330:	cmp	r3, #0
   18334:	mov	r4, #1
   18338:	bne	1827c <argp_error@@Base+0x414>
   1833c:	b	18168 <argp_error@@Base+0x300>
   18340:	ldr	r3, [sp, #20]
   18344:	ldr	r1, [pc, #580]	; 18590 <argp_error@@Base+0x728>
   18348:	ldr	r2, [r3]
   1834c:	ldr	r3, [r9]
   18350:	ldr	r0, [r1]
   18354:	str	r3, [sp]
   18358:	ldr	r1, [pc, #572]	; 1859c <argp_error@@Base+0x734>
   1835c:	ldr	r3, [sp, #96]	; 0x60
   18360:	bl	113fc <fprintf@plt>
   18364:	ldr	r1, [sp, #88]	; 0x58
   18368:	ldr	r2, [r9, #12]
   1836c:	mov	r3, #63	; 0x3f
   18370:	str	r2, [r1, #8]
   18374:	b	18224 <argp_error@@Base+0x3bc>
   18378:	ldr	r3, [sp, #84]	; 0x54
   1837c:	cmp	r3, #0
   18380:	bne	1850c <argp_error@@Base+0x6a4>
   18384:	ldr	r3, [sp, #92]	; 0x5c
   18388:	cmp	r3, #0
   1838c:	beq	183b8 <argp_error@@Base+0x550>
   18390:	ldr	r3, [sp, #20]
   18394:	ldr	r1, [pc, #500]	; 18590 <argp_error@@Base+0x728>
   18398:	ldr	r2, [r3]
   1839c:	ldr	r3, [sp, #88]	; 0x58
   183a0:	ldr	r0, [r1]
   183a4:	ldr	r1, [pc, #500]	; 185a0 <argp_error@@Base+0x738>
   183a8:	ldr	r3, [r3, #20]
   183ac:	str	r3, [sp]
   183b0:	ldr	r3, [sp, #96]	; 0x60
   183b4:	bl	113fc <fprintf@plt>
   183b8:	ldr	r3, [sp, #88]	; 0x58
   183bc:	ldr	r1, [sp, #88]	; 0x58
   183c0:	mov	r2, #0
   183c4:	ldr	r3, [r3]
   183c8:	str	r2, [r1, #20]
   183cc:	add	r3, r3, #1
   183d0:	str	r3, [r1]
   183d4:	mov	r3, #63	; 0x3f
   183d8:	mov	r0, r3
   183dc:	str	r2, [r1, #8]
   183e0:	add	sp, sp, #44	; 0x2c
   183e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183e8:	str	sl, [sp, #32]
   183ec:	mov	r9, r8
   183f0:	b	18168 <argp_error@@Base+0x300>
   183f4:	ldr	r1, [sp, #24]
   183f8:	cmp	r3, r1
   183fc:	bge	18488 <argp_error@@Base+0x620>
   18400:	ldr	r1, [sp, #20]
   18404:	add	r2, r2, #2
   18408:	ldr	r3, [r1, r3, lsl #2]
   1840c:	ldr	r1, [sp, #88]	; 0x58
   18410:	str	r3, [r1, #12]
   18414:	str	r2, [r1]
   18418:	b	181c0 <argp_error@@Base+0x358>
   1841c:	ldr	r1, [r5]
   18420:	mov	r0, #10
   18424:	bl	114c8 <fputc@plt>
   18428:	ldr	r0, [r5]
   1842c:	bl	11324 <funlockfile@plt>
   18430:	ldr	r3, [sp, #36]	; 0x24
   18434:	cmp	r3, #0
   18438:	beq	18444 <argp_error@@Base+0x5dc>
   1843c:	ldr	r0, [sp, #16]
   18440:	bl	14048 <argp_parse@@Base+0xe98>
   18444:	ldr	r3, [sp, #88]	; 0x58
   18448:	ldr	r4, [r3, #20]
   1844c:	mov	r0, r4
   18450:	bl	113e4 <strlen@plt>
   18454:	ldr	r3, [sp, #88]	; 0x58
   18458:	ldr	r1, [sp, #88]	; 0x58
   1845c:	mov	r2, #0
   18460:	ldr	r3, [r3]
   18464:	str	r2, [r1, #8]
   18468:	add	r3, r3, #1
   1846c:	str	r3, [r1]
   18470:	mov	r3, #63	; 0x3f
   18474:	add	r0, r4, r0
   18478:	str	r0, [r1, #20]
   1847c:	mov	r0, r3
   18480:	add	sp, sp, #44	; 0x2c
   18484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18488:	ldr	r3, [sp, #92]	; 0x5c
   1848c:	cmp	r3, #0
   18490:	bne	184e4 <argp_error@@Base+0x67c>
   18494:	ldr	r2, [sp, #88]	; 0x58
   18498:	ldr	r3, [r9, #12]
   1849c:	str	r3, [r2, #8]
   184a0:	ldr	r3, [sp, #28]
   184a4:	ldrb	r3, [r3]
   184a8:	cmp	r3, #58	; 0x3a
   184ac:	movne	r3, #63	; 0x3f
   184b0:	moveq	r3, #58	; 0x3a
   184b4:	b	181e4 <argp_error@@Base+0x37c>
   184b8:	ldr	r3, [sp, #20]
   184bc:	ldr	r1, [pc, #204]	; 18590 <argp_error@@Base+0x728>
   184c0:	ldr	r2, [r3]
   184c4:	ldr	r3, [sp, #88]	; 0x58
   184c8:	ldr	r0, [r1]
   184cc:	ldr	r1, [pc, #208]	; 185a4 <argp_error@@Base+0x73c>
   184d0:	ldr	r3, [r3, #20]
   184d4:	str	r3, [sp]
   184d8:	ldr	r3, [sp, #96]	; 0x60
   184dc:	bl	113fc <fprintf@plt>
   184e0:	b	18430 <argp_error@@Base+0x5c8>
   184e4:	ldr	r3, [sp, #20]
   184e8:	ldr	r1, [pc, #160]	; 18590 <argp_error@@Base+0x728>
   184ec:	ldr	r2, [r3]
   184f0:	ldr	r3, [r9]
   184f4:	ldr	r0, [r1]
   184f8:	str	r3, [sp]
   184fc:	ldr	r1, [pc, #164]	; 185a8 <argp_error@@Base+0x740>
   18500:	ldr	r3, [sp, #96]	; 0x60
   18504:	bl	113fc <fprintf@plt>
   18508:	b	18494 <argp_error@@Base+0x62c>
   1850c:	ldr	r3, [sp, #88]	; 0x58
   18510:	ldr	r2, [sp, #20]
   18514:	ldr	r3, [r3]
   18518:	ldr	r3, [r2, r3, lsl #2]
   1851c:	ldrb	r3, [r3, #1]
   18520:	cmp	r3, #45	; 0x2d
   18524:	beq	18384 <argp_error@@Base+0x51c>
   18528:	ldr	r3, [sp, #88]	; 0x58
   1852c:	ldr	r0, [sp, #28]
   18530:	ldr	r3, [r3, #20]
   18534:	ldrb	r1, [r3]
   18538:	bl	113f0 <strchr@plt>
   1853c:	cmp	r0, #0
   18540:	beq	18384 <argp_error@@Base+0x51c>
   18544:	mvn	r3, #0
   18548:	b	181e4 <argp_error@@Base+0x37c>
   1854c:	mov	r0, r6
   18550:	bl	14be4 <argp_parse@@Base+0x1a34>
   18554:	subs	r3, r0, #0
   18558:	str	r3, [sp, #16]
   1855c:	beq	18588 <argp_error@@Base+0x720>
   18560:	mov	r2, r6
   18564:	mov	r1, #0
   18568:	bl	1142c <memset@plt>
   1856c:	mov	r3, #1
   18570:	str	r3, [sp, #36]	; 0x24
   18574:	ldr	r2, [sp, #32]
   18578:	ldr	r3, [sp, #16]
   1857c:	mov	r1, #1
   18580:	strb	r1, [r3, r2]
   18584:	b	1827c <argp_error@@Base+0x414>
   18588:	mov	r4, #1
   1858c:	b	18168 <argp_error@@Base+0x300>
   18590:	strdeq	fp, [r2], -r0
   18594:	andeq	sl, r1, ip, asr r6
   18598:	andeq	sl, r1, ip, lsr #12
   1859c:	andeq	sl, r1, r4, lsl #13
   185a0:	andeq	sl, r1, r4, ror #12
   185a4:	andeq	sl, r1, ip, lsl #12
   185a8:			; <UNDEFINED> instruction: 0x0001a6b4
   185ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185b0:	sub	sp, sp, #36	; 0x24
   185b4:	subs	r6, r0, #0
   185b8:	ldr	r4, [sp, #80]	; 0x50
   185bc:	ldr	r8, [r4, #4]
   185c0:	ble	1879c <argp_error@@Base+0x934>
   185c4:	mov	sl, r3
   185c8:	ldr	r3, [r4]
   185cc:	mov	r7, r2
   185d0:	mov	r2, #0
   185d4:	cmp	r3, r2
   185d8:	mov	r9, r1
   185dc:	str	r2, [r4, #12]
   185e0:	beq	18824 <argp_error@@Base+0x9bc>
   185e4:	ldr	r2, [r4, #16]
   185e8:	cmp	r2, #0
   185ec:	bne	187a8 <argp_error@@Base+0x940>
   185f0:	mov	r5, #0
   185f4:	str	r3, [r4, #32]
   185f8:	str	r3, [r4, #28]
   185fc:	str	r5, [r4, #20]
   18600:	ldrb	r3, [r7]
   18604:	cmp	r3, #45	; 0x2d
   18608:	moveq	r3, #2
   1860c:	addeq	r7, r7, #1
   18610:	streq	r3, [r4, #24]
   18614:	beq	1863c <argp_error@@Base+0x7d4>
   18618:	cmp	r3, #43	; 0x2b
   1861c:	streq	r5, [r4, #24]
   18620:	addeq	r7, r7, #1
   18624:	beq	1863c <argp_error@@Base+0x7d4>
   18628:	ldr	r3, [sp, #84]	; 0x54
   1862c:	cmp	r3, #0
   18630:	beq	188c4 <argp_error@@Base+0xa5c>
   18634:	mov	r3, #0
   18638:	str	r3, [r4, #24]
   1863c:	mov	r3, #1
   18640:	str	r3, [r4, #16]
   18644:	ldrb	r3, [r7]
   18648:	cmp	r3, #58	; 0x3a
   1864c:	moveq	r8, #0
   18650:	cmp	r5, #0
   18654:	beq	18708 <argp_error@@Base+0x8a0>
   18658:	ldrb	r3, [r5]
   1865c:	cmp	r3, #0
   18660:	beq	18708 <argp_error@@Base+0x8a0>
   18664:	add	r3, r5, #1
   18668:	str	r3, [r4, #20]
   1866c:	ldrb	fp, [r5]
   18670:	mov	r0, r7
   18674:	str	r3, [sp, #28]
   18678:	mov	r1, fp
   1867c:	bl	113f0 <strchr@plt>
   18680:	ldrb	r1, [r5, #1]
   18684:	ldr	r3, [sp, #28]
   18688:	cmp	r1, #0
   1868c:	ldreq	r1, [r4]
   18690:	addeq	r1, r1, #1
   18694:	streq	r1, [r4]
   18698:	sub	r1, fp, #58	; 0x3a
   1869c:	mov	r2, r0
   186a0:	cmp	r2, #0
   186a4:	cmpne	r1, #1
   186a8:	mov	r0, fp
   186ac:	bls	187f4 <argp_error@@Base+0x98c>
   186b0:	ldrb	r1, [r2]
   186b4:	cmp	r1, #87	; 0x57
   186b8:	ldrb	r1, [r2, #1]
   186bc:	beq	18948 <argp_error@@Base+0xae0>
   186c0:	cmp	r1, #58	; 0x3a
   186c4:	bne	187ec <argp_error@@Base+0x984>
   186c8:	ldrb	r2, [r2, #2]
   186cc:	cmp	r2, #58	; 0x3a
   186d0:	ldrb	r2, [r5, #1]
   186d4:	beq	189d0 <argp_error@@Base+0xb68>
   186d8:	cmp	r2, #0
   186dc:	bne	189dc <argp_error@@Base+0xb74>
   186e0:	ldr	r3, [r4]
   186e4:	cmp	r6, r3
   186e8:	beq	18a7c <argp_error@@Base+0xc14>
   186ec:	ldr	r2, [r9, r3, lsl #2]
   186f0:	add	r3, r3, #1
   186f4:	str	r2, [r4, #12]
   186f8:	str	r3, [r4]
   186fc:	mov	r3, #0
   18700:	str	r3, [r4, #20]
   18704:	b	187ec <argp_error@@Base+0x984>
   18708:	ldr	fp, [r4]
   1870c:	ldr	r3, [r4, #32]
   18710:	cmp	r3, fp
   18714:	ldr	r3, [r4, #28]
   18718:	strgt	fp, [r4, #32]
   1871c:	cmp	fp, r3
   18720:	ldr	r3, [r4, #24]
   18724:	strlt	fp, [r4, #28]
   18728:	cmp	r3, #1
   1872c:	beq	18834 <argp_error@@Base+0x9cc>
   18730:	cmp	r6, fp
   18734:	beq	188ac <argp_error@@Base+0xa44>
   18738:	ldr	r3, [pc, #944]	; 18af0 <argp_error@@Base+0xc88>
   1873c:	ldr	r5, [r9, fp, lsl #2]
   18740:	mov	r1, r3
   18744:	mov	r0, r5
   18748:	str	r3, [sp, #28]
   1874c:	bl	11240 <strcmp@plt>
   18750:	ldr	r3, [sp, #28]
   18754:	cmp	r0, #0
   18758:	bne	187c4 <argp_error@@Base+0x95c>
   1875c:	ldr	r3, [r4, #28]
   18760:	ldr	r2, [r4, #32]
   18764:	add	fp, fp, #1
   18768:	cmp	r3, r2
   1876c:	str	fp, [r4]
   18770:	beq	1893c <argp_error@@Base+0xad4>
   18774:	cmp	fp, r2
   18778:	beq	1878c <argp_error@@Base+0x924>
   1877c:	mov	r0, r9
   18780:	mov	r1, r4
   18784:	bl	17fac <argp_error@@Base+0x144>
   18788:	ldr	r3, [r4, #28]
   1878c:	cmp	r3, r6
   18790:	str	r6, [r4]
   18794:	str	r6, [r4, #32]
   18798:	strne	r3, [r4]
   1879c:	mvn	r0, #0
   187a0:	add	sp, sp, #36	; 0x24
   187a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   187a8:	ldrb	r3, [r7]
   187ac:	ldr	r5, [r4, #20]
   187b0:	sub	r2, r3, #43	; 0x2b
   187b4:	tst	r2, #253	; 0xfd
   187b8:	ldrbeq	r3, [r7, #1]
   187bc:	addeq	r7, r7, #1
   187c0:	b	18648 <argp_error@@Base+0x7e0>
   187c4:	ldrb	r2, [r5]
   187c8:	cmp	r2, #45	; 0x2d
   187cc:	beq	188f0 <argp_error@@Base+0xa88>
   187d0:	ldr	r3, [r4, #24]
   187d4:	cmp	r3, #0
   187d8:	beq	1879c <argp_error@@Base+0x934>
   187dc:	mov	r0, #1
   187e0:	add	fp, fp, #1
   187e4:	str	fp, [r4]
   187e8:	str	r5, [r4, #12]
   187ec:	add	sp, sp, #36	; 0x24
   187f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   187f4:	cmp	r8, #0
   187f8:	beq	18814 <argp_error@@Base+0x9ac>
   187fc:	ldr	r1, [pc, #752]	; 18af4 <argp_error@@Base+0xc8c>
   18800:	ldr	r2, [r9]
   18804:	mov	r3, fp
   18808:	ldr	r0, [r1]
   1880c:	ldr	r1, [pc, #740]	; 18af8 <argp_error@@Base+0xc90>
   18810:	bl	113fc <fprintf@plt>
   18814:	mov	r0, #63	; 0x3f
   18818:	str	fp, [r4, #8]
   1881c:	add	sp, sp, #36	; 0x24
   18820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18824:	mov	r2, #1
   18828:	mov	r3, r2
   1882c:	str	r2, [r4]
   18830:	b	185f0 <argp_error@@Base+0x788>
   18834:	ldr	r2, [r4, #28]
   18838:	ldr	r3, [r4, #32]
   1883c:	cmp	r2, r3
   18840:	beq	189c0 <argp_error@@Base+0xb58>
   18844:	cmp	fp, r3
   18848:	beq	1885c <argp_error@@Base+0x9f4>
   1884c:	mov	r1, r4
   18850:	mov	r0, r9
   18854:	bl	17fac <argp_error@@Base+0x144>
   18858:	ldr	r3, [r4]
   1885c:	cmp	r6, r3
   18860:	movle	fp, r3
   18864:	ble	188a0 <argp_error@@Base+0xa38>
   18868:	add	r1, r9, r3, lsl #2
   1886c:	b	18880 <argp_error@@Base+0xa18>
   18870:	add	r3, r3, #1
   18874:	cmp	r6, r3
   18878:	str	r3, [r4]
   1887c:	beq	188e4 <argp_error@@Base+0xa7c>
   18880:	ldr	r2, [r1], #4
   18884:	ldrb	r0, [r2]
   18888:	cmp	r0, #45	; 0x2d
   1888c:	bne	18870 <argp_error@@Base+0xa08>
   18890:	ldrb	r2, [r2, #1]
   18894:	cmp	r2, #0
   18898:	beq	18870 <argp_error@@Base+0xa08>
   1889c:	ldr	fp, [r4]
   188a0:	str	r3, [r4, #32]
   188a4:	cmp	r6, fp
   188a8:	bne	18738 <argp_error@@Base+0x8d0>
   188ac:	ldr	r3, [r4, #28]
   188b0:	ldr	r6, [r4, #32]
   188b4:	mvn	r0, #0
   188b8:	cmp	r3, r6
   188bc:	strne	r3, [r4]
   188c0:	b	187a0 <argp_error@@Base+0x938>
   188c4:	ldr	r0, [pc, #560]	; 18afc <argp_error@@Base+0xc94>
   188c8:	bl	1136c <getenv@plt>
   188cc:	ldr	r5, [r4, #20]
   188d0:	cmp	r0, #0
   188d4:	bne	18634 <argp_error@@Base+0x7cc>
   188d8:	mov	r3, #1
   188dc:	str	r3, [r4, #24]
   188e0:	b	1863c <argp_error@@Base+0x7d4>
   188e4:	mov	fp, r6
   188e8:	str	r3, [r4, #32]
   188ec:	b	188a4 <argp_error@@Base+0xa3c>
   188f0:	ldrb	r1, [r5, #1]
   188f4:	cmp	r1, #0
   188f8:	beq	187d0 <argp_error@@Base+0x968>
   188fc:	cmp	sl, #0
   18900:	beq	18934 <argp_error@@Base+0xacc>
   18904:	cmp	r1, #45	; 0x2d
   18908:	beq	18a40 <argp_error@@Base+0xbd8>
   1890c:	ldr	r3, [sp, #76]	; 0x4c
   18910:	cmp	r3, #0
   18914:	beq	18934 <argp_error@@Base+0xacc>
   18918:	ldrb	r3, [r5, #2]
   1891c:	cmp	r3, #0
   18920:	bne	189f0 <argp_error@@Base+0xb88>
   18924:	mov	r0, r7
   18928:	bl	113f0 <strchr@plt>
   1892c:	cmp	r0, #0
   18930:	beq	189f0 <argp_error@@Base+0xb88>
   18934:	add	r5, r5, #1
   18938:	b	18664 <argp_error@@Base+0x7fc>
   1893c:	mov	r3, fp
   18940:	str	fp, [r4, #28]
   18944:	b	1878c <argp_error@@Base+0x924>
   18948:	cmp	sl, #0
   1894c:	sub	ip, r1, #59	; 0x3b
   18950:	clz	ip, ip
   18954:	lsr	ip, ip, #5
   18958:	moveq	ip, #0
   1895c:	cmp	ip, #0
   18960:	beq	186c0 <argp_error@@Base+0x858>
   18964:	ldrb	r2, [r5, #1]
   18968:	cmp	r2, #0
   1896c:	bne	18980 <argp_error@@Base+0xb18>
   18970:	ldr	r3, [r4]
   18974:	cmp	r6, r3
   18978:	ldrne	r3, [r9, r3, lsl #2]
   1897c:	beq	18a9c <argp_error@@Base+0xc34>
   18980:	str	r3, [r4, #20]
   18984:	ldr	lr, [pc, #372]	; 18b00 <argp_error@@Base+0xc98>
   18988:	ldr	r3, [sp, #72]	; 0x48
   1898c:	mov	ip, #0
   18990:	str	r3, [sp]
   18994:	str	r8, [sp, #12]
   18998:	str	r4, [sp, #8]
   1899c:	str	lr, [sp, #16]
   189a0:	mov	r3, sl
   189a4:	str	ip, [r4, #12]
   189a8:	mov	r2, r7
   189ac:	mov	r1, r9
   189b0:	mov	r0, r6
   189b4:	str	ip, [sp, #4]
   189b8:	bl	18068 <argp_error@@Base+0x200>
   189bc:	b	187ec <argp_error@@Base+0x984>
   189c0:	cmp	fp, r3
   189c4:	movne	r3, fp
   189c8:	strne	fp, [r4, #28]
   189cc:	b	1885c <argp_error@@Base+0x9f4>
   189d0:	cmp	r2, #0
   189d4:	streq	r2, [r4, #12]
   189d8:	beq	186fc <argp_error@@Base+0x894>
   189dc:	ldr	r2, [r4]
   189e0:	str	r3, [r4, #12]
   189e4:	add	r3, r2, #1
   189e8:	str	r3, [r4]
   189ec:	b	186fc <argp_error@@Base+0x894>
   189f0:	ldr	r2, [sp, #76]	; 0x4c
   189f4:	add	r5, r5, #1
   189f8:	str	r5, [r4, #20]
   189fc:	ldr	r3, [pc, #256]	; 18b04 <argp_error@@Base+0xc9c>
   18a00:	str	r2, [sp, #4]
   18a04:	ldr	r2, [sp, #72]	; 0x48
   18a08:	str	r3, [sp, #16]
   18a0c:	str	r2, [sp]
   18a10:	str	r8, [sp, #12]
   18a14:	str	r4, [sp, #8]
   18a18:	mov	r3, sl
   18a1c:	mov	r2, r7
   18a20:	mov	r1, r9
   18a24:	mov	r0, r6
   18a28:	bl	18068 <argp_error@@Base+0x200>
   18a2c:	cmn	r0, #1
   18a30:	bne	187ec <argp_error@@Base+0x984>
   18a34:	ldr	r3, [r4]
   18a38:	ldr	r5, [r9, r3, lsl #2]
   18a3c:	b	18934 <argp_error@@Base+0xacc>
   18a40:	add	r5, r5, #2
   18a44:	str	r5, [r4, #20]
   18a48:	str	r3, [sp, #16]
   18a4c:	ldr	r3, [sp, #76]	; 0x4c
   18a50:	str	r8, [sp, #12]
   18a54:	str	r3, [sp, #4]
   18a58:	ldr	r3, [sp, #72]	; 0x48
   18a5c:	str	r4, [sp, #8]
   18a60:	str	r3, [sp]
   18a64:	mov	r2, r7
   18a68:	mov	r3, sl
   18a6c:	mov	r1, r9
   18a70:	mov	r0, r6
   18a74:	bl	18068 <argp_error@@Base+0x200>
   18a78:	b	187ec <argp_error@@Base+0x984>
   18a7c:	cmp	r8, #0
   18a80:	bne	18ad4 <argp_error@@Base+0xc6c>
   18a84:	str	fp, [r4, #8]
   18a88:	ldrb	r0, [r7]
   18a8c:	cmp	r0, #58	; 0x3a
   18a90:	movne	r0, #63	; 0x3f
   18a94:	moveq	r0, #58	; 0x3a
   18a98:	b	186fc <argp_error@@Base+0x894>
   18a9c:	cmp	r8, #0
   18aa0:	beq	18abc <argp_error@@Base+0xc54>
   18aa4:	ldr	r1, [pc, #72]	; 18af4 <argp_error@@Base+0xc8c>
   18aa8:	ldr	r2, [r9]
   18aac:	mov	r3, fp
   18ab0:	ldr	r0, [r1]
   18ab4:	ldr	r1, [pc, #76]	; 18b08 <argp_error@@Base+0xca0>
   18ab8:	bl	113fc <fprintf@plt>
   18abc:	str	fp, [r4, #8]
   18ac0:	ldrb	r0, [r7]
   18ac4:	cmp	r0, #58	; 0x3a
   18ac8:	movne	r0, #63	; 0x3f
   18acc:	moveq	r0, #58	; 0x3a
   18ad0:	b	187ec <argp_error@@Base+0x984>
   18ad4:	ldr	r1, [pc, #24]	; 18af4 <argp_error@@Base+0xc8c>
   18ad8:	ldr	r2, [r9]
   18adc:	mov	r3, fp
   18ae0:	ldr	r0, [r1]
   18ae4:	ldr	r1, [pc, #28]	; 18b08 <argp_error@@Base+0xca0>
   18ae8:	bl	113fc <fprintf@plt>
   18aec:	b	18a84 <argp_error@@Base+0xc1c>
   18af0:	andeq	r9, r1, ip, lsr #27
   18af4:	strdeq	fp, [r2], -r0
   18af8:	strdeq	sl, [r1], -r0
   18afc:	ldrdeq	sl, [r1], -ip
   18b00:	andeq	sl, r1, r8, lsr r7
   18b04:	andeq	sl, r1, ip, ror #13
   18b08:	andeq	sl, r1, ip, lsl #14
   18b0c:	push	{r4, r5, r6, lr}
   18b10:	sub	sp, sp, #16
   18b14:	ldr	r5, [pc, #84]	; 18b70 <argp_error@@Base+0xd08>
   18b18:	ldr	ip, [sp, #32]
   18b1c:	ldr	r4, [pc, #80]	; 18b74 <argp_error@@Base+0xd0c>
   18b20:	str	ip, [sp]
   18b24:	ldr	ip, [sp, #40]	; 0x28
   18b28:	ldr	r6, [sp, #36]	; 0x24
   18b2c:	ldr	lr, [r5]
   18b30:	str	ip, [sp, #12]
   18b34:	ldr	ip, [r5, #4]
   18b38:	str	r4, [sp, #8]
   18b3c:	str	r6, [sp, #4]
   18b40:	str	ip, [r4, #4]
   18b44:	str	lr, [r4]
   18b48:	bl	185ac <argp_error@@Base+0x744>
   18b4c:	ldr	r3, [pc, #36]	; 18b78 <argp_error@@Base+0xd10>
   18b50:	ldr	ip, [r4]
   18b54:	ldr	r1, [r4, #8]
   18b58:	ldr	r2, [r4, #12]
   18b5c:	str	ip, [r5]
   18b60:	str	r1, [r5, #8]
   18b64:	str	r2, [r3]
   18b68:	add	sp, sp, #16
   18b6c:	pop	{r4, r5, r6, pc}
   18b70:	ldrdeq	fp, [r2], -r4
   18b74:	andeq	fp, r2, r4, lsl #25
   18b78:	andeq	ip, r2, r0, asr r2
   18b7c:	push	{lr}		; (str lr, [sp, #-4]!)
   18b80:	mov	r3, #0
   18b84:	sub	sp, sp, #20
   18b88:	mov	ip, #1
   18b8c:	str	r3, [sp]
   18b90:	stmib	sp, {r3, ip}
   18b94:	bl	18b0c <argp_error@@Base+0xca4>
   18b98:	add	sp, sp, #20
   18b9c:	pop	{pc}		; (ldr pc, [sp], #4)
   18ba0:	push	{r4, r5, r6, lr}
   18ba4:	subs	r4, r2, #0
   18ba8:	mov	r6, r0
   18bac:	mov	r5, r1
   18bb0:	beq	18bdc <argp_error@@Base+0xd74>
   18bb4:	mov	r1, r4
   18bb8:	mvn	r0, #0
   18bbc:	bl	193b4 <argp_error@@Base+0x154c>
   18bc0:	cmp	r0, r5
   18bc4:	bcs	18bdc <argp_error@@Base+0xd74>
   18bc8:	bl	11408 <__errno_location@plt>
   18bcc:	mov	r3, #12
   18bd0:	str	r3, [r0]
   18bd4:	mov	r0, #0
   18bd8:	pop	{r4, r5, r6, pc}
   18bdc:	mul	r1, r5, r4
   18be0:	mov	r0, r6
   18be4:	pop	{r4, r5, r6, lr}
   18be8:	b	14c10 <argp_parse@@Base+0x1a60>
   18bec:	push	{r4, r5, r6, r7, r8, lr}
   18bf0:	mov	r8, r0
   18bf4:	mov	r0, #36	; 0x24
   18bf8:	mov	r7, r1
   18bfc:	mov	r6, r2
   18c00:	mov	r5, r3
   18c04:	bl	14be4 <argp_parse@@Base+0x1a34>
   18c08:	subs	r4, r0, #0
   18c0c:	beq	18c50 <argp_error@@Base+0xde8>
   18c10:	mov	r0, #0
   18c14:	str	r5, [r4, #12]
   18c18:	str	r0, [r4, #20]
   18c1c:	str	r0, [r4, #16]
   18c20:	str	r8, [r4]
   18c24:	str	r7, [r4, #4]
   18c28:	str	r6, [r4, #8]
   18c2c:	mov	r0, #200	; 0xc8
   18c30:	bl	14be4 <argp_parse@@Base+0x1a34>
   18c34:	cmp	r0, #0
   18c38:	addne	r3, r0, #200	; 0xc8
   18c3c:	mov	r5, r0
   18c40:	str	r0, [r4, #24]
   18c44:	strne	r0, [r4, #28]
   18c48:	strne	r3, [r4, #32]
   18c4c:	beq	18c58 <argp_error@@Base+0xdf0>
   18c50:	mov	r0, r4
   18c54:	pop	{r4, r5, r6, r7, r8, pc}
   18c58:	mov	r0, r4
   18c5c:	bl	14048 <argp_parse@@Base+0xe98>
   18c60:	mov	r4, r5
   18c64:	b	18c50 <argp_error@@Base+0xde8>
   18c68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c6c:	mov	r7, r0
   18c70:	ldr	r6, [r0, #24]
   18c74:	ldr	r3, [r0, #16]
   18c78:	ldr	fp, [r0, #28]
   18c7c:	sub	sp, sp, #12
   18c80:	add	r6, r6, r3
   18c84:	mov	r9, #32
   18c88:	cmp	r6, fp
   18c8c:	bcs	18d68 <argp_error@@Base+0xf00>
   18c90:	ldr	r8, [r7, #20]
   18c94:	cmp	r8, #0
   18c98:	bne	18d08 <argp_error@@Base+0xea0>
   18c9c:	ldr	r4, [r7, #4]
   18ca0:	cmp	r4, #0
   18ca4:	beq	18fac <argp_error@@Base+0x1144>
   18ca8:	ldr	r2, [r7, #32]
   18cac:	add	r3, fp, r4
   18cb0:	cmp	r2, r3
   18cb4:	bls	18cc8 <argp_error@@Base+0xe60>
   18cb8:	b	190f4 <argp_error@@Base+0x128c>
   18cbc:	add	r8, r8, #1
   18cc0:	cmp	r4, r8
   18cc4:	beq	18cfc <argp_error@@Base+0xe94>
   18cc8:	ldr	r0, [r7]
   18ccc:	ldr	r3, [r0, #20]
   18cd0:	ldr	r2, [r0, #24]
   18cd4:	add	r1, r3, #1
   18cd8:	cmp	r3, r2
   18cdc:	strcc	r1, [r0, #20]
   18ce0:	strbcc	r9, [r3]
   18ce4:	bcc	18cbc <argp_error@@Base+0xe54>
   18ce8:	mov	r1, r9
   18cec:	add	r8, r8, #1
   18cf0:	bl	11480 <__overflow@plt>
   18cf4:	cmp	r4, r8
   18cf8:	bne	18cc8 <argp_error@@Base+0xe60>
   18cfc:	ldr	fp, [r7, #28]
   18d00:	mov	r8, r4
   18d04:	str	r4, [r7, #20]
   18d08:	sub	sl, fp, r6
   18d0c:	mov	r2, sl
   18d10:	mov	r1, #10
   18d14:	mov	r0, r6
   18d18:	bl	11450 <memchr@plt>
   18d1c:	cmp	r8, #0
   18d20:	movlt	r8, #0
   18d24:	movlt	r3, r8
   18d28:	str	r6, [sp]
   18d2c:	mov	r4, r0
   18d30:	strlt	r3, [r7, #20]
   18d34:	cmp	r4, #0
   18d38:	beq	18fd0 <argp_error@@Base+0x1168>
   18d3c:	sub	r2, r4, r6
   18d40:	ldr	r3, [r7, #8]
   18d44:	add	r2, r2, r8
   18d48:	cmp	r2, r3
   18d4c:	bge	18d7c <argp_error@@Base+0xf14>
   18d50:	ldr	fp, [r7, #28]
   18d54:	add	r6, r4, #1
   18d58:	mov	r3, #0
   18d5c:	cmp	r6, fp
   18d60:	str	r3, [r7, #20]
   18d64:	bcc	18c90 <argp_error@@Base+0xe28>
   18d68:	ldr	r3, [r7, #24]
   18d6c:	sub	r3, fp, r3
   18d70:	str	r3, [r7, #16]
   18d74:	add	sp, sp, #12
   18d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d7c:	ldr	r2, [r7, #12]
   18d80:	sub	r5, r3, #1
   18d84:	cmp	r2, #0
   18d88:	str	r2, [sp, #4]
   18d8c:	blt	19088 <argp_error@@Base+0x1220>
   18d90:	add	r5, r5, #1
   18d94:	sub	r8, r5, r8
   18d98:	adds	r8, r6, r8
   18d9c:	bcs	19008 <argp_error@@Base+0x11a0>
   18da0:	bl	113cc <__ctype_b_loc@plt>
   18da4:	mov	r3, r8
   18da8:	ldr	r0, [r0]
   18dac:	b	18db8 <argp_error@@Base+0xf50>
   18db0:	cmp	r3, r6
   18db4:	bcc	1900c <argp_error@@Base+0x11a4>
   18db8:	mov	r1, r3
   18dbc:	sub	r3, r3, #1
   18dc0:	ldrb	r2, [r1]
   18dc4:	mov	r5, r3
   18dc8:	lsl	r2, r2, #1
   18dcc:	ldrh	r2, [r0, r2]
   18dd0:	tst	r2, #1
   18dd4:	beq	18db0 <argp_error@@Base+0xf48>
   18dd8:	add	r5, r1, #1
   18ddc:	cmp	r5, r6
   18de0:	bls	19020 <argp_error@@Base+0x11b8>
   18de4:	cmp	r1, r6
   18de8:	bcc	19018 <argp_error@@Base+0x11b0>
   18dec:	mov	r1, r3
   18df0:	sub	r8, r6, #1
   18df4:	b	18e10 <argp_error@@Base+0xfa8>
   18df8:	ldrb	r3, [r1]
   18dfc:	sub	r1, r1, #1
   18e00:	lsl	r3, r3, #1
   18e04:	ldrh	r3, [r0, r3]
   18e08:	tst	r3, #1
   18e0c:	beq	19138 <argp_error@@Base+0x12d0>
   18e10:	cmp	r8, r1
   18e14:	mov	r2, r1
   18e18:	bne	18df8 <argp_error@@Base+0xf90>
   18e1c:	add	r8, r8, #1
   18e20:	add	r3, sl, #1
   18e24:	add	r3, r6, r3
   18e28:	cmp	r5, r3
   18e2c:	beq	18f14 <argp_error@@Base+0x10ac>
   18e30:	add	r3, r8, #1
   18e34:	ldr	r1, [sp, #4]
   18e38:	sub	r2, r5, r3
   18e3c:	cmp	r2, r1
   18e40:	bge	18f30 <argp_error@@Base+0x10c8>
   18e44:	cmp	r5, fp
   18e48:	bcs	18f28 <argp_error@@Base+0x10c0>
   18e4c:	ldr	r3, [r7, #32]
   18e50:	ldr	r2, [sp, #4]
   18e54:	sub	r3, r3, fp
   18e58:	add	r0, r2, #1
   18e5c:	cmp	r3, r0
   18e60:	bgt	19168 <argp_error@@Base+0x1300>
   18e64:	ldr	r0, [r7, #24]
   18e68:	cmp	r8, r0
   18e6c:	bls	18e80 <argp_error@@Base+0x1018>
   18e70:	sub	r2, r8, r0
   18e74:	ldr	r3, [r7]
   18e78:	mov	r1, #1
   18e7c:	bl	112d0 <fwrite_unlocked@plt>
   18e80:	ldr	r0, [r7]
   18e84:	ldr	r2, [r0, #24]
   18e88:	ldr	r3, [r0, #20]
   18e8c:	cmp	r3, r2
   18e90:	addcc	r2, r3, #1
   18e94:	strcc	r2, [r0, #20]
   18e98:	movcc	r2, #10
   18e9c:	strbcc	r2, [r3]
   18ea0:	bcs	191a8 <argp_error@@Base+0x1340>
   18ea4:	ldr	r6, [r7, #24]
   18ea8:	ldr	r3, [sp]
   18eac:	sub	r2, r5, r6
   18eb0:	sub	r3, r3, r6
   18eb4:	add	sl, sl, r3
   18eb8:	mov	fp, r2
   18ebc:	mov	r4, r6
   18ec0:	ldr	r3, [r7, #12]
   18ec4:	cmp	r3, r2
   18ec8:	bgt	18f50 <argp_error@@Base+0x10e8>
   18ecc:	cmp	r3, #0
   18ed0:	movgt	r2, r6
   18ed4:	ble	18ef0 <argp_error@@Base+0x1088>
   18ed8:	strb	r9, [r2], #1
   18edc:	ldr	r3, [r7, #12]
   18ee0:	sub	r1, r2, r6
   18ee4:	cmp	r3, r1
   18ee8:	bgt	18ed8 <argp_error@@Base+0x1070>
   18eec:	mov	r6, r2
   18ef0:	cmp	r6, r5
   18ef4:	bcc	190d8 <argp_error@@Base+0x1270>
   18ef8:	sub	fp, sl, fp
   18efc:	cmp	r3, #0
   18f00:	add	fp, r6, fp
   18f04:	mvneq	r3, #0
   18f08:	str	fp, [r7, #28]
   18f0c:	str	r3, [r7, #20]
   18f10:	b	18c88 <argp_error@@Base+0xe20>
   18f14:	ldr	r3, [r7, #32]
   18f18:	ldr	r2, [sp, #4]
   18f1c:	sub	r3, r3, r8
   18f20:	cmp	r3, r2
   18f24:	ble	18e44 <argp_error@@Base+0xfdc>
   18f28:	add	r3, r8, #1
   18f2c:	sub	r2, r5, r3
   18f30:	sub	fp, r5, r6
   18f34:	mov	r4, r6
   18f38:	mov	r6, r3
   18f3c:	mov	r3, #10
   18f40:	strb	r3, [r8]
   18f44:	ldr	r3, [r7, #12]
   18f48:	cmp	r3, r2
   18f4c:	ble	18ecc <argp_error@@Base+0x1064>
   18f50:	add	r2, sl, #1
   18f54:	add	r2, r4, r2
   18f58:	cmp	r5, r2
   18f5c:	beq	19154 <argp_error@@Base+0x12ec>
   18f60:	cmp	r3, #0
   18f64:	movgt	r8, #0
   18f68:	bgt	18f80 <argp_error@@Base+0x1118>
   18f6c:	b	18ef0 <argp_error@@Base+0x1088>
   18f70:	ldr	r3, [r7, #12]
   18f74:	add	r8, r8, #1
   18f78:	cmp	r3, r8
   18f7c:	ble	18ef0 <argp_error@@Base+0x1088>
   18f80:	ldr	r0, [r7]
   18f84:	ldr	r3, [r0, #20]
   18f88:	ldr	r2, [r0, #24]
   18f8c:	add	r1, r3, #1
   18f90:	cmp	r3, r2
   18f94:	strcc	r1, [r0, #20]
   18f98:	strbcc	r9, [r3]
   18f9c:	bcc	18f70 <argp_error@@Base+0x1108>
   18fa0:	mov	r1, r9
   18fa4:	bl	11480 <__overflow@plt>
   18fa8:	b	18f70 <argp_error@@Base+0x1108>
   18fac:	sub	sl, fp, r6
   18fb0:	mov	r2, sl
   18fb4:	mov	r1, #10
   18fb8:	mov	r0, r6
   18fbc:	bl	11450 <memchr@plt>
   18fc0:	str	r6, [sp]
   18fc4:	mov	r4, r0
   18fc8:	cmp	r4, #0
   18fcc:	bne	18d3c <argp_error@@Base+0xed4>
   18fd0:	ldr	r5, [r7, #8]
   18fd4:	add	r3, r8, sl
   18fd8:	cmp	r3, r5
   18fdc:	bcc	191cc <argp_error@@Base+0x1364>
   18fe0:	ldr	r2, [r7, #12]
   18fe4:	sub	r5, r5, #1
   18fe8:	cmp	r2, #0
   18fec:	str	r2, [sp, #4]
   18ff0:	blt	191b8 <argp_error@@Base+0x1350>
   18ff4:	add	r5, r5, #1
   18ff8:	sub	r8, r5, r8
   18ffc:	adds	r8, r6, r8
   19000:	mov	r4, fp
   19004:	bcc	18da0 <argp_error@@Base+0xf38>
   19008:	mov	r5, r8
   1900c:	add	r5, r5, #1
   19010:	cmp	r5, r6
   19014:	bls	19020 <argp_error@@Base+0x11b8>
   19018:	mov	r8, r5
   1901c:	b	18e20 <argp_error@@Base+0xfb8>
   19020:	cmp	r8, r4
   19024:	bcs	1905c <argp_error@@Base+0x11f4>
   19028:	add	r5, r8, #1
   1902c:	b	19050 <argp_error@@Base+0x11e8>
   19030:	bl	113cc <__ctype_b_loc@plt>
   19034:	ldrb	r3, [r5]
   19038:	add	r5, r5, #1
   1903c:	lsl	r3, r3, #1
   19040:	ldr	r2, [r0]
   19044:	ldrh	r3, [r2, r3]
   19048:	tst	r3, #1
   1904c:	bne	1906c <argp_error@@Base+0x1204>
   19050:	cmp	r5, r4
   19054:	mov	r8, r5
   19058:	bne	19030 <argp_error@@Base+0x11c8>
   1905c:	cmp	r8, r4
   19060:	beq	19140 <argp_error@@Base+0x12d8>
   19064:	bl	113cc <__ctype_b_loc@plt>
   19068:	ldr	r2, [r0]
   1906c:	mov	r5, r8
   19070:	ldrb	r3, [r5, #1]!
   19074:	lsl	r3, r3, #1
   19078:	ldrh	r3, [r2, r3]
   1907c:	tst	r3, #1
   19080:	bne	19070 <argp_error@@Base+0x1208>
   19084:	b	18e20 <argp_error@@Base+0xfb8>
   19088:	cmp	r4, fp
   1908c:	str	r3, [sp]
   19090:	bcs	191b4 <argp_error@@Base+0x134c>
   19094:	sub	r0, r5, r8
   19098:	sub	r2, fp, r4
   1909c:	add	r0, r6, r0
   190a0:	mov	r1, r4
   190a4:	bl	1127c <memmove@plt>
   190a8:	ldr	r2, [r7, #20]
   190ac:	ldr	fp, [r7, #28]
   190b0:	sub	r5, r5, r2
   190b4:	add	r5, r6, r5
   190b8:	mov	r3, #0
   190bc:	sub	r4, r5, r4
   190c0:	str	r3, [r7, #20]
   190c4:	ldr	r3, [sp]
   190c8:	sub	fp, fp, r4
   190cc:	add	r6, r6, r3
   190d0:	str	fp, [r7, #28]
   190d4:	b	18c88 <argp_error@@Base+0xe20>
   190d8:	add	r2, r4, sl
   190dc:	sub	r2, r2, r5
   190e0:	mov	r1, r5
   190e4:	mov	r0, r6
   190e8:	bl	1127c <memmove@plt>
   190ec:	ldr	r3, [r7, #12]
   190f0:	b	18ef8 <argp_error@@Base+0x1090>
   190f4:	add	r5, r6, r4
   190f8:	sub	r2, fp, r6
   190fc:	mov	r1, r6
   19100:	mov	r0, r5
   19104:	bl	1127c <memmove@plt>
   19108:	ldr	r3, [r7, #28]
   1910c:	mov	r0, r6
   19110:	add	r3, r3, r4
   19114:	str	r3, [r7, #28]
   19118:	mov	r2, r4
   1911c:	mov	r1, r9
   19120:	bl	1142c <memset@plt>
   19124:	mov	r6, r5
   19128:	ldr	fp, [r7, #28]
   1912c:	mov	r8, r4
   19130:	str	r4, [r7, #20]
   19134:	b	18d08 <argp_error@@Base+0xea0>
   19138:	add	r8, r2, #1
   1913c:	b	18e20 <argp_error@@Base+0xfb8>
   19140:	mov	r3, #0
   19144:	str	r3, [r7, #20]
   19148:	add	r6, r8, #1
   1914c:	ldr	fp, [r7, #28]
   19150:	b	18c88 <argp_error@@Base+0xe20>
   19154:	ldr	r2, [r7, #32]
   19158:	sub	r2, r2, r5
   1915c:	cmp	r3, r2
   19160:	ble	18ecc <argp_error@@Base+0x1064>
   19164:	b	18f60 <argp_error@@Base+0x10f8>
   19168:	sub	fp, fp, r5
   1916c:	mov	r2, fp
   19170:	mov	r1, r5
   19174:	add	r0, r8, r0
   19178:	bl	1127c <memmove@plt>
   1917c:	ldr	r2, [r7, #12]
   19180:	mov	r3, #10
   19184:	add	r5, r2, #1
   19188:	add	r5, r8, r5
   1918c:	add	fp, r5, fp
   19190:	sub	sl, fp, r6
   19194:	mov	r4, r6
   19198:	sub	fp, r5, r6
   1919c:	strb	r3, [r8]
   191a0:	add	r6, r8, #1
   191a4:	b	18ec0 <argp_error@@Base+0x1058>
   191a8:	mov	r1, #10
   191ac:	bl	11480 <__overflow@plt>
   191b0:	b	18ea4 <argp_error@@Base+0x103c>
   191b4:	add	r3, r8, sl
   191b8:	sub	r5, r5, r3
   191bc:	add	fp, fp, r5
   191c0:	str	fp, [r7, #28]
   191c4:	str	r3, [r7, #20]
   191c8:	b	18d68 <argp_error@@Base+0xf00>
   191cc:	str	r3, [r7, #20]
   191d0:	ldr	fp, [r7, #28]
   191d4:	b	18d68 <argp_error@@Base+0xf00>
   191d8:	push	{r4, lr}
   191dc:	mov	r4, r0
   191e0:	bl	18c68 <argp_error@@Base+0xe00>
   191e4:	ldr	r2, [r4, #28]
   191e8:	ldr	r0, [r4, #24]
   191ec:	cmp	r2, r0
   191f0:	bls	19208 <argp_error@@Base+0x13a0>
   191f4:	sub	r2, r2, r0
   191f8:	ldr	r3, [r4]
   191fc:	mov	r1, #1
   19200:	bl	112d0 <fwrite_unlocked@plt>
   19204:	ldr	r0, [r4, #24]
   19208:	bl	14048 <argp_parse@@Base+0xe98>
   1920c:	mov	r0, r4
   19210:	pop	{r4, lr}
   19214:	b	14048 <argp_parse@@Base+0xe98>
   19218:	push	{r4, r5, r6, lr}
   1921c:	mov	r4, r0
   19220:	mov	r5, r1
   19224:	bl	18c68 <argp_error@@Base+0xe00>
   19228:	ldr	r3, [r4, #24]
   1922c:	ldr	r2, [r4, #28]
   19230:	mov	r0, r3
   19234:	sub	r2, r2, r3
   19238:	mov	r1, #1
   1923c:	ldr	r3, [r4]
   19240:	bl	112d0 <fwrite_unlocked@plt>
   19244:	ldr	r2, [r4, #28]
   19248:	ldr	r3, [r4, #24]
   1924c:	sub	r1, r2, r3
   19250:	cmp	r0, r1
   19254:	bne	19298 <argp_error@@Base+0x1430>
   19258:	ldr	r1, [r4, #32]
   1925c:	mov	r2, #0
   19260:	sub	r1, r1, r3
   19264:	cmp	r1, r5
   19268:	str	r3, [r4, #28]
   1926c:	str	r2, [r4, #16]
   19270:	movcs	r3, #1
   19274:	bcs	19290 <argp_error@@Base+0x1428>
   19278:	adds	r5, r1, r5
   1927c:	bcc	192c8 <argp_error@@Base+0x1460>
   19280:	bl	11408 <__errno_location@plt>
   19284:	mov	r3, #0
   19288:	mov	r2, #12
   1928c:	str	r2, [r0]
   19290:	mov	r0, r3
   19294:	pop	{r4, r5, r6, pc}
   19298:	ldr	r1, [r4, #16]
   1929c:	sub	r2, r2, r0
   192a0:	sub	r1, r1, r0
   192a4:	str	r2, [r4, #28]
   192a8:	str	r1, [r4, #16]
   192ac:	sub	r2, r2, r3
   192b0:	add	r1, r3, r0
   192b4:	mov	r0, r3
   192b8:	bl	1127c <memmove@plt>
   192bc:	mov	r3, #0
   192c0:	mov	r0, r3
   192c4:	pop	{r4, r5, r6, pc}
   192c8:	mov	r0, r3
   192cc:	mov	r1, r5
   192d0:	bl	14c10 <argp_parse@@Base+0x1a60>
   192d4:	cmp	r0, #0
   192d8:	beq	19280 <argp_error@@Base+0x1418>
   192dc:	add	r1, r0, r5
   192e0:	mov	r3, #1
   192e4:	str	r0, [r4, #24]
   192e8:	str	r0, [r4, #28]
   192ec:	str	r1, [r4, #32]
   192f0:	mov	r0, r3
   192f4:	pop	{r4, r5, r6, pc}
   192f8:	ldr	r3, [r0, #32]
   192fc:	ldr	r2, [r0, #28]
   19300:	sub	r3, r3, r2
   19304:	cmp	r3, r1
   19308:	bcc	19314 <argp_error@@Base+0x14ac>
   1930c:	mov	r0, #1
   19310:	bx	lr
   19314:	b	19218 <argp_error@@Base+0x13b0>
   19318:	push	{r1, r2, r3}
   1931c:	mov	r1, #150	; 0x96
   19320:	push	{r4, r5, r6, r7, lr}
   19324:	sub	sp, sp, #8
   19328:	mov	r5, r0
   1932c:	ldr	r7, [sp, #28]
   19330:	add	r6, sp, #32
   19334:	ldr	r3, [r5, #32]
   19338:	ldr	r0, [r5, #28]
   1933c:	sub	r2, r3, r0
   19340:	cmp	r1, r2
   19344:	bhi	19388 <argp_error@@Base+0x1520>
   19348:	sub	r4, r3, r0
   1934c:	mov	r1, r4
   19350:	mov	r3, r6
   19354:	mov	r2, r7
   19358:	str	r6, [sp, #4]
   1935c:	bl	1151c <vsnprintf@plt>
   19360:	cmp	r4, r0
   19364:	addls	r1, r0, #1
   19368:	bls	19334 <argp_error@@Base+0x14cc>
   1936c:	ldr	r3, [r5, #28]
   19370:	add	r3, r3, r0
   19374:	str	r3, [r5, #28]
   19378:	add	sp, sp, #8
   1937c:	pop	{r4, r5, r6, r7, lr}
   19380:	add	sp, sp, #12
   19384:	bx	lr
   19388:	mov	r0, r5
   1938c:	bl	19218 <argp_error@@Base+0x13b0>
   19390:	cmp	r0, #0
   19394:	ldrne	r3, [r5, #32]
   19398:	ldrne	r0, [r5, #28]
   1939c:	bne	19348 <argp_error@@Base+0x14e0>
   193a0:	mvn	r0, #0
   193a4:	add	sp, sp, #8
   193a8:	pop	{r4, r5, r6, r7, lr}
   193ac:	add	sp, sp, #12
   193b0:	bx	lr
   193b4:	subs	r2, r1, #1
   193b8:	bxeq	lr
   193bc:	bcc	19594 <argp_error@@Base+0x172c>
   193c0:	cmp	r0, r1
   193c4:	bls	19578 <argp_error@@Base+0x1710>
   193c8:	tst	r1, r2
   193cc:	beq	19584 <argp_error@@Base+0x171c>
   193d0:	clz	r3, r0
   193d4:	clz	r2, r1
   193d8:	sub	r3, r2, r3
   193dc:	rsbs	r3, r3, #31
   193e0:	addne	r3, r3, r3, lsl #1
   193e4:	mov	r2, #0
   193e8:	addne	pc, pc, r3, lsl #2
   193ec:	nop			; (mov r0, r0)
   193f0:	cmp	r0, r1, lsl #31
   193f4:	adc	r2, r2, r2
   193f8:	subcs	r0, r0, r1, lsl #31
   193fc:	cmp	r0, r1, lsl #30
   19400:	adc	r2, r2, r2
   19404:	subcs	r0, r0, r1, lsl #30
   19408:	cmp	r0, r1, lsl #29
   1940c:	adc	r2, r2, r2
   19410:	subcs	r0, r0, r1, lsl #29
   19414:	cmp	r0, r1, lsl #28
   19418:	adc	r2, r2, r2
   1941c:	subcs	r0, r0, r1, lsl #28
   19420:	cmp	r0, r1, lsl #27
   19424:	adc	r2, r2, r2
   19428:	subcs	r0, r0, r1, lsl #27
   1942c:	cmp	r0, r1, lsl #26
   19430:	adc	r2, r2, r2
   19434:	subcs	r0, r0, r1, lsl #26
   19438:	cmp	r0, r1, lsl #25
   1943c:	adc	r2, r2, r2
   19440:	subcs	r0, r0, r1, lsl #25
   19444:	cmp	r0, r1, lsl #24
   19448:	adc	r2, r2, r2
   1944c:	subcs	r0, r0, r1, lsl #24
   19450:	cmp	r0, r1, lsl #23
   19454:	adc	r2, r2, r2
   19458:	subcs	r0, r0, r1, lsl #23
   1945c:	cmp	r0, r1, lsl #22
   19460:	adc	r2, r2, r2
   19464:	subcs	r0, r0, r1, lsl #22
   19468:	cmp	r0, r1, lsl #21
   1946c:	adc	r2, r2, r2
   19470:	subcs	r0, r0, r1, lsl #21
   19474:	cmp	r0, r1, lsl #20
   19478:	adc	r2, r2, r2
   1947c:	subcs	r0, r0, r1, lsl #20
   19480:	cmp	r0, r1, lsl #19
   19484:	adc	r2, r2, r2
   19488:	subcs	r0, r0, r1, lsl #19
   1948c:	cmp	r0, r1, lsl #18
   19490:	adc	r2, r2, r2
   19494:	subcs	r0, r0, r1, lsl #18
   19498:	cmp	r0, r1, lsl #17
   1949c:	adc	r2, r2, r2
   194a0:	subcs	r0, r0, r1, lsl #17
   194a4:	cmp	r0, r1, lsl #16
   194a8:	adc	r2, r2, r2
   194ac:	subcs	r0, r0, r1, lsl #16
   194b0:	cmp	r0, r1, lsl #15
   194b4:	adc	r2, r2, r2
   194b8:	subcs	r0, r0, r1, lsl #15
   194bc:	cmp	r0, r1, lsl #14
   194c0:	adc	r2, r2, r2
   194c4:	subcs	r0, r0, r1, lsl #14
   194c8:	cmp	r0, r1, lsl #13
   194cc:	adc	r2, r2, r2
   194d0:	subcs	r0, r0, r1, lsl #13
   194d4:	cmp	r0, r1, lsl #12
   194d8:	adc	r2, r2, r2
   194dc:	subcs	r0, r0, r1, lsl #12
   194e0:	cmp	r0, r1, lsl #11
   194e4:	adc	r2, r2, r2
   194e8:	subcs	r0, r0, r1, lsl #11
   194ec:	cmp	r0, r1, lsl #10
   194f0:	adc	r2, r2, r2
   194f4:	subcs	r0, r0, r1, lsl #10
   194f8:	cmp	r0, r1, lsl #9
   194fc:	adc	r2, r2, r2
   19500:	subcs	r0, r0, r1, lsl #9
   19504:	cmp	r0, r1, lsl #8
   19508:	adc	r2, r2, r2
   1950c:	subcs	r0, r0, r1, lsl #8
   19510:	cmp	r0, r1, lsl #7
   19514:	adc	r2, r2, r2
   19518:	subcs	r0, r0, r1, lsl #7
   1951c:	cmp	r0, r1, lsl #6
   19520:	adc	r2, r2, r2
   19524:	subcs	r0, r0, r1, lsl #6
   19528:	cmp	r0, r1, lsl #5
   1952c:	adc	r2, r2, r2
   19530:	subcs	r0, r0, r1, lsl #5
   19534:	cmp	r0, r1, lsl #4
   19538:	adc	r2, r2, r2
   1953c:	subcs	r0, r0, r1, lsl #4
   19540:	cmp	r0, r1, lsl #3
   19544:	adc	r2, r2, r2
   19548:	subcs	r0, r0, r1, lsl #3
   1954c:	cmp	r0, r1, lsl #2
   19550:	adc	r2, r2, r2
   19554:	subcs	r0, r0, r1, lsl #2
   19558:	cmp	r0, r1, lsl #1
   1955c:	adc	r2, r2, r2
   19560:	subcs	r0, r0, r1, lsl #1
   19564:	cmp	r0, r1
   19568:	adc	r2, r2, r2
   1956c:	subcs	r0, r0, r1
   19570:	mov	r0, r2
   19574:	bx	lr
   19578:	moveq	r0, #1
   1957c:	movne	r0, #0
   19580:	bx	lr
   19584:	clz	r2, r1
   19588:	rsb	r2, r2, #31
   1958c:	lsr	r0, r0, r2
   19590:	bx	lr
   19594:	cmp	r0, #0
   19598:	mvnne	r0, #0
   1959c:	b	19800 <argp_error@@Base+0x1998>
   195a0:	cmp	r1, #0
   195a4:	beq	19594 <argp_error@@Base+0x172c>
   195a8:	push	{r0, r1, lr}
   195ac:	bl	193b4 <argp_error@@Base+0x154c>
   195b0:	pop	{r1, r2, lr}
   195b4:	mul	r3, r2, r0
   195b8:	sub	r1, r1, r3
   195bc:	bx	lr
   195c0:	cmp	r1, #0
   195c4:	beq	197d0 <argp_error@@Base+0x1968>
   195c8:	eor	ip, r0, r1
   195cc:	rsbmi	r1, r1, #0
   195d0:	subs	r2, r1, #1
   195d4:	beq	1979c <argp_error@@Base+0x1934>
   195d8:	movs	r3, r0
   195dc:	rsbmi	r3, r0, #0
   195e0:	cmp	r3, r1
   195e4:	bls	197a8 <argp_error@@Base+0x1940>
   195e8:	tst	r1, r2
   195ec:	beq	197b8 <argp_error@@Base+0x1950>
   195f0:	clz	r2, r3
   195f4:	clz	r0, r1
   195f8:	sub	r2, r0, r2
   195fc:	rsbs	r2, r2, #31
   19600:	addne	r2, r2, r2, lsl #1
   19604:	mov	r0, #0
   19608:	addne	pc, pc, r2, lsl #2
   1960c:	nop			; (mov r0, r0)
   19610:	cmp	r3, r1, lsl #31
   19614:	adc	r0, r0, r0
   19618:	subcs	r3, r3, r1, lsl #31
   1961c:	cmp	r3, r1, lsl #30
   19620:	adc	r0, r0, r0
   19624:	subcs	r3, r3, r1, lsl #30
   19628:	cmp	r3, r1, lsl #29
   1962c:	adc	r0, r0, r0
   19630:	subcs	r3, r3, r1, lsl #29
   19634:	cmp	r3, r1, lsl #28
   19638:	adc	r0, r0, r0
   1963c:	subcs	r3, r3, r1, lsl #28
   19640:	cmp	r3, r1, lsl #27
   19644:	adc	r0, r0, r0
   19648:	subcs	r3, r3, r1, lsl #27
   1964c:	cmp	r3, r1, lsl #26
   19650:	adc	r0, r0, r0
   19654:	subcs	r3, r3, r1, lsl #26
   19658:	cmp	r3, r1, lsl #25
   1965c:	adc	r0, r0, r0
   19660:	subcs	r3, r3, r1, lsl #25
   19664:	cmp	r3, r1, lsl #24
   19668:	adc	r0, r0, r0
   1966c:	subcs	r3, r3, r1, lsl #24
   19670:	cmp	r3, r1, lsl #23
   19674:	adc	r0, r0, r0
   19678:	subcs	r3, r3, r1, lsl #23
   1967c:	cmp	r3, r1, lsl #22
   19680:	adc	r0, r0, r0
   19684:	subcs	r3, r3, r1, lsl #22
   19688:	cmp	r3, r1, lsl #21
   1968c:	adc	r0, r0, r0
   19690:	subcs	r3, r3, r1, lsl #21
   19694:	cmp	r3, r1, lsl #20
   19698:	adc	r0, r0, r0
   1969c:	subcs	r3, r3, r1, lsl #20
   196a0:	cmp	r3, r1, lsl #19
   196a4:	adc	r0, r0, r0
   196a8:	subcs	r3, r3, r1, lsl #19
   196ac:	cmp	r3, r1, lsl #18
   196b0:	adc	r0, r0, r0
   196b4:	subcs	r3, r3, r1, lsl #18
   196b8:	cmp	r3, r1, lsl #17
   196bc:	adc	r0, r0, r0
   196c0:	subcs	r3, r3, r1, lsl #17
   196c4:	cmp	r3, r1, lsl #16
   196c8:	adc	r0, r0, r0
   196cc:	subcs	r3, r3, r1, lsl #16
   196d0:	cmp	r3, r1, lsl #15
   196d4:	adc	r0, r0, r0
   196d8:	subcs	r3, r3, r1, lsl #15
   196dc:	cmp	r3, r1, lsl #14
   196e0:	adc	r0, r0, r0
   196e4:	subcs	r3, r3, r1, lsl #14
   196e8:	cmp	r3, r1, lsl #13
   196ec:	adc	r0, r0, r0
   196f0:	subcs	r3, r3, r1, lsl #13
   196f4:	cmp	r3, r1, lsl #12
   196f8:	adc	r0, r0, r0
   196fc:	subcs	r3, r3, r1, lsl #12
   19700:	cmp	r3, r1, lsl #11
   19704:	adc	r0, r0, r0
   19708:	subcs	r3, r3, r1, lsl #11
   1970c:	cmp	r3, r1, lsl #10
   19710:	adc	r0, r0, r0
   19714:	subcs	r3, r3, r1, lsl #10
   19718:	cmp	r3, r1, lsl #9
   1971c:	adc	r0, r0, r0
   19720:	subcs	r3, r3, r1, lsl #9
   19724:	cmp	r3, r1, lsl #8
   19728:	adc	r0, r0, r0
   1972c:	subcs	r3, r3, r1, lsl #8
   19730:	cmp	r3, r1, lsl #7
   19734:	adc	r0, r0, r0
   19738:	subcs	r3, r3, r1, lsl #7
   1973c:	cmp	r3, r1, lsl #6
   19740:	adc	r0, r0, r0
   19744:	subcs	r3, r3, r1, lsl #6
   19748:	cmp	r3, r1, lsl #5
   1974c:	adc	r0, r0, r0
   19750:	subcs	r3, r3, r1, lsl #5
   19754:	cmp	r3, r1, lsl #4
   19758:	adc	r0, r0, r0
   1975c:	subcs	r3, r3, r1, lsl #4
   19760:	cmp	r3, r1, lsl #3
   19764:	adc	r0, r0, r0
   19768:	subcs	r3, r3, r1, lsl #3
   1976c:	cmp	r3, r1, lsl #2
   19770:	adc	r0, r0, r0
   19774:	subcs	r3, r3, r1, lsl #2
   19778:	cmp	r3, r1, lsl #1
   1977c:	adc	r0, r0, r0
   19780:	subcs	r3, r3, r1, lsl #1
   19784:	cmp	r3, r1
   19788:	adc	r0, r0, r0
   1978c:	subcs	r3, r3, r1
   19790:	cmp	ip, #0
   19794:	rsbmi	r0, r0, #0
   19798:	bx	lr
   1979c:	teq	ip, r0
   197a0:	rsbmi	r0, r0, #0
   197a4:	bx	lr
   197a8:	movcc	r0, #0
   197ac:	asreq	r0, ip, #31
   197b0:	orreq	r0, r0, #1
   197b4:	bx	lr
   197b8:	clz	r2, r1
   197bc:	rsb	r2, r2, #31
   197c0:	cmp	ip, #0
   197c4:	lsr	r0, r3, r2
   197c8:	rsbmi	r0, r0, #0
   197cc:	bx	lr
   197d0:	cmp	r0, #0
   197d4:	mvngt	r0, #-2147483648	; 0x80000000
   197d8:	movlt	r0, #-2147483648	; 0x80000000
   197dc:	b	19800 <argp_error@@Base+0x1998>
   197e0:	cmp	r1, #0
   197e4:	beq	197d0 <argp_error@@Base+0x1968>
   197e8:	push	{r0, r1, lr}
   197ec:	bl	195c8 <argp_error@@Base+0x1760>
   197f0:	pop	{r1, r2, lr}
   197f4:	mul	r3, r2, r0
   197f8:	sub	r1, r1, r3
   197fc:	bx	lr
   19800:	push	{r1, lr}
   19804:	mov	r0, #8
   19808:	bl	11228 <raise@plt>
   1980c:	pop	{r1, pc}
   19810:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19814:	mov	r7, r0
   19818:	ldr	r6, [pc, #72]	; 19868 <argp_error@@Base+0x1a00>
   1981c:	ldr	r5, [pc, #72]	; 1986c <argp_error@@Base+0x1a04>
   19820:	add	r6, pc, r6
   19824:	add	r5, pc, r5
   19828:	sub	r6, r6, r5
   1982c:	mov	r8, r1
   19830:	mov	r9, r2
   19834:	bl	111d8 <fdopen@plt-0x20>
   19838:	asrs	r6, r6, #2
   1983c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19840:	mov	r4, #0
   19844:	add	r4, r4, #1
   19848:	ldr	r3, [r5], #4
   1984c:	mov	r2, r9
   19850:	mov	r1, r8
   19854:	mov	r0, r7
   19858:	blx	r3
   1985c:	cmp	r6, r4
   19860:	bne	19844 <argp_error@@Base+0x19dc>
   19864:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19868:	andeq	r1, r1, r0, ror #13
   1986c:	ldrdeq	r1, [r1], -r8
   19870:	bx	lr

Disassembly of section .fini:

00019874 <.fini>:
   19874:	push	{r3, lr}
   19878:	pop	{r3, pc}
