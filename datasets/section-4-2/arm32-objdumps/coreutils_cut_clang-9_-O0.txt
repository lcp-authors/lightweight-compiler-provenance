
../repos/coreutils/src/cut:     file format elf32-littlearm


Disassembly of section .init:

00011008 <.init>:
   11008:	push	{r3, lr}
   1100c:	bl	11328 <__assert_fail@plt+0x48>
   11010:	pop	{r3, pc}

Disassembly of section .plt:

00011014 <calloc@plt-0x14>:
   11014:	push	{lr}		; (str lr, [sp, #-4]!)
   11018:	ldr	lr, [pc, #4]	; 11024 <calloc@plt-0x4>
   1101c:	add	lr, pc, lr
   11020:	ldr	pc, [lr, #8]!
   11024:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>

00011028 <calloc@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #28, 20	; 0x1c000
   11030:	ldr	pc, [ip, #4060]!	; 0xfdc

00011034 <fputs_unlocked@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #28, 20	; 0x1c000
   1103c:	ldr	pc, [ip, #4052]!	; 0xfd4

00011040 <raise@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #28, 20	; 0x1c000
   11048:	ldr	pc, [ip, #4044]!	; 0xfcc

0001104c <strcmp@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #28, 20	; 0x1c000
   11054:	ldr	pc, [ip, #4036]!	; 0xfc4

00011058 <posix_fadvise64@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #28, 20	; 0x1c000
   11060:	ldr	pc, [ip, #4028]!	; 0xfbc

00011064 <printf@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #28, 20	; 0x1c000
   1106c:	ldr	pc, [ip, #4020]!	; 0xfb4

00011070 <fflush@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #28, 20	; 0x1c000
   11078:	ldr	pc, [ip, #4012]!	; 0xfac

0001107c <memmove@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #28, 20	; 0x1c000
   11084:	ldr	pc, [ip, #4004]!	; 0xfa4

00011088 <free@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #28, 20	; 0x1c000
   11090:	ldr	pc, [ip, #3996]!	; 0xf9c

00011094 <ferror@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #28, 20	; 0x1c000
   1109c:	ldr	pc, [ip, #3988]!	; 0xf94

000110a0 <_exit@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #28, 20	; 0x1c000
   110a8:	ldr	pc, [ip, #3980]!	; 0xf8c

000110ac <memcpy@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #28, 20	; 0x1c000
   110b4:	ldr	pc, [ip, #3972]!	; 0xf84

000110b8 <mbsinit@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #28, 20	; 0x1c000
   110c0:	ldr	pc, [ip, #3964]!	; 0xf7c

000110c4 <fwrite_unlocked@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #28, 20	; 0x1c000
   110cc:	ldr	pc, [ip, #3956]!	; 0xf74

000110d0 <memcmp@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #28, 20	; 0x1c000
   110d8:	ldr	pc, [ip, #3948]!	; 0xf6c

000110dc <getc_unlocked@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #28, 20	; 0x1c000
   110e4:	ldr	pc, [ip, #3940]!	; 0xf64

000110e8 <realloc@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #28, 20	; 0x1c000
   110f0:	ldr	pc, [ip, #3932]!	; 0xf5c

000110f4 <textdomain@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #28, 20	; 0x1c000
   110fc:	ldr	pc, [ip, #3924]!	; 0xf54

00011100 <iswprint@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #28, 20	; 0x1c000
   11108:	ldr	pc, [ip, #3916]!	; 0xf4c

0001110c <lseek64@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #28, 20	; 0x1c000
   11114:	ldr	pc, [ip, #3908]!	; 0xf44

00011118 <__ctype_get_mb_cur_max@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #28, 20	; 0x1c000
   11120:	ldr	pc, [ip, #3900]!	; 0xf3c

00011124 <fread@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #28, 20	; 0x1c000
   1112c:	ldr	pc, [ip, #3892]!	; 0xf34

00011130 <__fpending@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #28, 20	; 0x1c000
   11138:	ldr	pc, [ip, #3884]!	; 0xf2c

0001113c <ferror_unlocked@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #28, 20	; 0x1c000
   11144:	ldr	pc, [ip, #3876]!	; 0xf24

00011148 <mbrtowc@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #28, 20	; 0x1c000
   11150:	ldr	pc, [ip, #3868]!	; 0xf1c

00011154 <error@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #28, 20	; 0x1c000
   1115c:	ldr	pc, [ip, #3860]!	; 0xf14

00011160 <malloc@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #28, 20	; 0x1c000
   11168:	ldr	pc, [ip, #3852]!	; 0xf0c

0001116c <__libc_start_main@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #28, 20	; 0x1c000
   11174:	ldr	pc, [ip, #3844]!	; 0xf04

00011178 <__freading@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #28, 20	; 0x1c000
   11180:	ldr	pc, [ip, #3836]!	; 0xefc

00011184 <__gmon_start__@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #28, 20	; 0x1c000
   1118c:	ldr	pc, [ip, #3828]!	; 0xef4

00011190 <getopt_long@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #28, 20	; 0x1c000
   11198:	ldr	pc, [ip, #3820]!	; 0xeec

0001119c <__ctype_b_loc@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #28, 20	; 0x1c000
   111a4:	ldr	pc, [ip, #3812]!	; 0xee4

000111a8 <exit@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #28, 20	; 0x1c000
   111b0:	ldr	pc, [ip, #3804]!	; 0xedc

000111b4 <gettext@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #28, 20	; 0x1c000
   111bc:	ldr	pc, [ip, #3796]!	; 0xed4

000111c0 <strlen@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #28, 20	; 0x1c000
   111c8:	ldr	pc, [ip, #3788]!	; 0xecc

000111cc <fprintf@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #28, 20	; 0x1c000
   111d4:	ldr	pc, [ip, #3780]!	; 0xec4

000111d8 <ungetc@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #28, 20	; 0x1c000
   111e0:	ldr	pc, [ip, #3772]!	; 0xebc

000111e4 <__errno_location@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #28, 20	; 0x1c000
   111ec:	ldr	pc, [ip, #3764]!	; 0xeb4

000111f0 <__cxa_atexit@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #28, 20	; 0x1c000
   111f8:	ldr	pc, [ip, #3756]!	; 0xeac

000111fc <memset@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #28, 20	; 0x1c000
   11204:	ldr	pc, [ip, #3748]!	; 0xea4

00011208 <fgetc@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #28, 20	; 0x1c000
   11210:	ldr	pc, [ip, #3740]!	; 0xe9c

00011214 <fileno@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #28, 20	; 0x1c000
   1121c:	ldr	pc, [ip, #3732]!	; 0xe94

00011220 <memchr@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #28, 20	; 0x1c000
   11228:	ldr	pc, [ip, #3724]!	; 0xe8c

0001122c <fclose@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #28, 20	; 0x1c000
   11234:	ldr	pc, [ip, #3716]!	; 0xe84

00011238 <fseeko64@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #28, 20	; 0x1c000
   11240:	ldr	pc, [ip, #3708]!	; 0xe7c

00011244 <setlocale@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #28, 20	; 0x1c000
   1124c:	ldr	pc, [ip, #3700]!	; 0xe74

00011250 <strrchr@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #28, 20	; 0x1c000
   11258:	ldr	pc, [ip, #3692]!	; 0xe6c

0001125c <nl_langinfo@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #28, 20	; 0x1c000
   11264:	ldr	pc, [ip, #3684]!	; 0xe64

00011268 <clearerr_unlocked@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #28, 20	; 0x1c000
   11270:	ldr	pc, [ip, #3676]!	; 0xe5c

00011274 <fopen64@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #28, 20	; 0x1c000
   1127c:	ldr	pc, [ip, #3668]!	; 0xe54

00011280 <qsort@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #28, 20	; 0x1c000
   11288:	ldr	pc, [ip, #3660]!	; 0xe4c

0001128c <bindtextdomain@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #28, 20	; 0x1c000
   11294:	ldr	pc, [ip, #3652]!	; 0xe44

00011298 <fputs@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #28, 20	; 0x1c000
   112a0:	ldr	pc, [ip, #3644]!	; 0xe3c

000112a4 <strncmp@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #28, 20	; 0x1c000
   112ac:	ldr	pc, [ip, #3636]!	; 0xe34

000112b0 <abort@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #28, 20	; 0x1c000
   112b8:	ldr	pc, [ip, #3628]!	; 0xe2c

000112bc <feof_unlocked@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #28, 20	; 0x1c000
   112c4:	ldr	pc, [ip, #3620]!	; 0xe24

000112c8 <putchar_unlocked@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #28, 20	; 0x1c000
   112d0:	ldr	pc, [ip, #3612]!	; 0xe1c

000112d4 <strspn@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #28, 20	; 0x1c000
   112dc:	ldr	pc, [ip, #3604]!	; 0xe14

000112e0 <__assert_fail@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #28, 20	; 0x1c000
   112e8:	ldr	pc, [ip, #3596]!	; 0xe0c

Disassembly of section .text:

000112ec <.text>:
   112ec:	mov	fp, #0
   112f0:	mov	lr, #0
   112f4:	pop	{r1}		; (ldr r1, [sp], #4)
   112f8:	mov	r2, sp
   112fc:	push	{r2}		; (str r2, [sp, #-4]!)
   11300:	push	{r0}		; (str r0, [sp, #-4]!)
   11304:	ldr	ip, [pc, #16]	; 1131c <__assert_fail@plt+0x3c>
   11308:	push	{ip}		; (str ip, [sp, #-4]!)
   1130c:	ldr	r0, [pc, #12]	; 11320 <__assert_fail@plt+0x40>
   11310:	ldr	r3, [pc, #12]	; 11324 <__assert_fail@plt+0x44>
   11314:	bl	1116c <__libc_start_main@plt>
   11318:	bl	112b0 <abort@plt>
   1131c:	andeq	ip, r1, ip, ror #13
   11320:	andeq	r1, r1, r0, ror #15
   11324:	andeq	ip, r1, ip, lsl #13
   11328:	ldr	r3, [pc, #20]	; 11344 <__assert_fail@plt+0x64>
   1132c:	ldr	r2, [pc, #20]	; 11348 <__assert_fail@plt+0x68>
   11330:	add	r3, pc, r3
   11334:	ldr	r2, [r3, r2]
   11338:	cmp	r2, #0
   1133c:	bxeq	lr
   11340:	b	11184 <__gmon_start__@plt>
   11344:	andeq	ip, r1, r8, asr #25
   11348:	strdeq	r0, [r0], -r8
   1134c:	ldr	r0, [pc, #24]	; 1136c <__assert_fail@plt+0x8c>
   11350:	ldr	r3, [pc, #24]	; 11370 <__assert_fail@plt+0x90>
   11354:	cmp	r3, r0
   11358:	bxeq	lr
   1135c:	ldr	r3, [pc, #16]	; 11374 <__assert_fail@plt+0x94>
   11360:	cmp	r3, #0
   11364:	bxeq	lr
   11368:	bx	r3
   1136c:	andeq	lr, r2, r0, asr r1
   11370:	andeq	lr, r2, r0, asr r1
   11374:	andeq	r0, r0, r0
   11378:	ldr	r0, [pc, #36]	; 113a4 <__assert_fail@plt+0xc4>
   1137c:	ldr	r1, [pc, #36]	; 113a8 <__assert_fail@plt+0xc8>
   11380:	sub	r1, r1, r0
   11384:	asr	r1, r1, #2
   11388:	add	r1, r1, r1, lsr #31
   1138c:	asrs	r1, r1, #1
   11390:	bxeq	lr
   11394:	ldr	r3, [pc, #16]	; 113ac <__assert_fail@plt+0xcc>
   11398:	cmp	r3, #0
   1139c:	bxeq	lr
   113a0:	bx	r3
   113a4:	andeq	lr, r2, r0, asr r1
   113a8:	andeq	lr, r2, r0, asr r1
   113ac:	andeq	r0, r0, r0
   113b0:	push	{r4, lr}
   113b4:	ldr	r4, [pc, #24]	; 113d4 <__assert_fail@plt+0xf4>
   113b8:	ldrb	r3, [r4]
   113bc:	cmp	r3, #0
   113c0:	popne	{r4, pc}
   113c4:	bl	1134c <__assert_fail@plt+0x6c>
   113c8:	mov	r3, #1
   113cc:	strb	r3, [r4]
   113d0:	pop	{r4, pc}
   113d4:	andeq	lr, r2, r4, ror r1
   113d8:	b	11378 <__assert_fail@plt+0x98>
   113dc:	push	{fp, lr}
   113e0:	mov	fp, sp
   113e4:	sub	sp, sp, #56	; 0x38
   113e8:	str	r0, [fp, #-4]
   113ec:	ldr	r0, [fp, #-4]
   113f0:	cmp	r0, #0
   113f4:	beq	11440 <__assert_fail@plt+0x160>
   113f8:	b	113fc <__assert_fail@plt+0x11c>
   113fc:	movw	r0, #57696	; 0xe160
   11400:	movt	r0, #2
   11404:	ldr	r0, [r0]
   11408:	movw	r1, #50964	; 0xc714
   1140c:	movt	r1, #1
   11410:	str	r0, [fp, #-8]
   11414:	mov	r0, r1
   11418:	bl	111b4 <gettext@plt>
   1141c:	movw	r1, #57764	; 0xe1a4
   11420:	movt	r1, #2
   11424:	ldr	r2, [r1]
   11428:	ldr	r1, [fp, #-8]
   1142c:	str	r0, [fp, #-12]
   11430:	mov	r0, r1
   11434:	ldr	r1, [fp, #-12]
   11438:	bl	111cc <fprintf@plt>
   1143c:	b	115dc <__assert_fail@plt+0x2fc>
   11440:	movw	r0, #51003	; 0xc73b
   11444:	movt	r0, #1
   11448:	bl	111b4 <gettext@plt>
   1144c:	movw	r1, #57764	; 0xe1a4
   11450:	movt	r1, #2
   11454:	ldr	r1, [r1]
   11458:	bl	11064 <printf@plt>
   1145c:	movw	r1, #51034	; 0xc75a
   11460:	movt	r1, #1
   11464:	str	r0, [fp, #-16]
   11468:	mov	r0, r1
   1146c:	bl	111b4 <gettext@plt>
   11470:	movw	r1, #57708	; 0xe16c
   11474:	movt	r1, #2
   11478:	ldr	r1, [r1]
   1147c:	bl	11034 <fputs_unlocked@plt>
   11480:	str	r0, [fp, #-20]	; 0xffffffec
   11484:	bl	115e4 <__assert_fail@plt+0x304>
   11488:	bl	1160c <__assert_fail@plt+0x32c>
   1148c:	movw	r0, #51100	; 0xc79c
   11490:	movt	r0, #1
   11494:	bl	111b4 <gettext@plt>
   11498:	movw	r1, #57708	; 0xe16c
   1149c:	movt	r1, #2
   114a0:	ldr	r1, [r1]
   114a4:	bl	11034 <fputs_unlocked@plt>
   114a8:	movw	r1, #51277	; 0xc84d
   114ac:	movt	r1, #1
   114b0:	str	r0, [fp, #-24]	; 0xffffffe8
   114b4:	mov	r0, r1
   114b8:	bl	111b4 <gettext@plt>
   114bc:	movw	r1, #57708	; 0xe16c
   114c0:	movt	r1, #2
   114c4:	ldr	r1, [r1]
   114c8:	bl	11034 <fputs_unlocked@plt>
   114cc:	movw	r1, #51515	; 0xc93b
   114d0:	movt	r1, #1
   114d4:	str	r0, [sp, #28]
   114d8:	mov	r0, r1
   114dc:	bl	111b4 <gettext@plt>
   114e0:	movw	r1, #57708	; 0xe16c
   114e4:	movt	r1, #2
   114e8:	ldr	r1, [r1]
   114ec:	bl	11034 <fputs_unlocked@plt>
   114f0:	movw	r1, #51629	; 0xc9ad
   114f4:	movt	r1, #1
   114f8:	str	r0, [sp, #24]
   114fc:	mov	r0, r1
   11500:	bl	111b4 <gettext@plt>
   11504:	movw	r1, #57708	; 0xe16c
   11508:	movt	r1, #2
   1150c:	ldr	r1, [r1]
   11510:	bl	11034 <fputs_unlocked@plt>
   11514:	movw	r1, #51839	; 0xca7f
   11518:	movt	r1, #1
   1151c:	str	r0, [sp, #20]
   11520:	mov	r0, r1
   11524:	bl	111b4 <gettext@plt>
   11528:	movw	r1, #57708	; 0xe16c
   1152c:	movt	r1, #2
   11530:	ldr	r1, [r1]
   11534:	bl	11034 <fputs_unlocked@plt>
   11538:	movw	r1, #51902	; 0xcabe
   1153c:	movt	r1, #1
   11540:	str	r0, [sp, #16]
   11544:	mov	r0, r1
   11548:	bl	111b4 <gettext@plt>
   1154c:	movw	r1, #57708	; 0xe16c
   11550:	movt	r1, #2
   11554:	ldr	r1, [r1]
   11558:	bl	11034 <fputs_unlocked@plt>
   1155c:	movw	r1, #51947	; 0xcaeb
   11560:	movt	r1, #1
   11564:	str	r0, [sp, #12]
   11568:	mov	r0, r1
   1156c:	bl	111b4 <gettext@plt>
   11570:	movw	r1, #57708	; 0xe16c
   11574:	movt	r1, #2
   11578:	ldr	r1, [r1]
   1157c:	bl	11034 <fputs_unlocked@plt>
   11580:	movw	r1, #52001	; 0xcb21
   11584:	movt	r1, #1
   11588:	str	r0, [sp, #8]
   1158c:	mov	r0, r1
   11590:	bl	111b4 <gettext@plt>
   11594:	movw	r1, #57708	; 0xe16c
   11598:	movt	r1, #2
   1159c:	ldr	r1, [r1]
   115a0:	bl	11034 <fputs_unlocked@plt>
   115a4:	movw	r1, #52205	; 0xcbed
   115a8:	movt	r1, #1
   115ac:	str	r0, [sp, #4]
   115b0:	mov	r0, r1
   115b4:	bl	111b4 <gettext@plt>
   115b8:	movw	r1, #57708	; 0xe16c
   115bc:	movt	r1, #2
   115c0:	ldr	r1, [r1]
   115c4:	bl	11034 <fputs_unlocked@plt>
   115c8:	movw	r1, #52467	; 0xccf3
   115cc:	movt	r1, #1
   115d0:	str	r0, [sp]
   115d4:	mov	r0, r1
   115d8:	bl	11634 <__assert_fail@plt+0x354>
   115dc:	ldr	r0, [fp, #-4]
   115e0:	bl	111a8 <exit@plt>
   115e4:	push	{fp, lr}
   115e8:	mov	fp, sp
   115ec:	movw	r0, #52834	; 0xce62
   115f0:	movt	r0, #1
   115f4:	bl	111b4 <gettext@plt>
   115f8:	movw	r1, #57708	; 0xe16c
   115fc:	movt	r1, #2
   11600:	ldr	r1, [r1]
   11604:	bl	11034 <fputs_unlocked@plt>
   11608:	pop	{fp, pc}
   1160c:	push	{fp, lr}
   11610:	mov	fp, sp
   11614:	movw	r0, #52890	; 0xce9a
   11618:	movt	r0, #1
   1161c:	bl	111b4 <gettext@plt>
   11620:	movw	r1, #57708	; 0xe16c
   11624:	movt	r1, #2
   11628:	ldr	r1, [r1]
   1162c:	bl	11034 <fputs_unlocked@plt>
   11630:	pop	{fp, pc}
   11634:	push	{fp, lr}
   11638:	mov	fp, sp
   1163c:	sub	sp, sp, #88	; 0x58
   11640:	add	r1, sp, #28
   11644:	movw	r2, #53588	; 0xd154
   11648:	movt	r2, #1
   1164c:	str	r0, [fp, #-4]
   11650:	mov	r0, r1
   11654:	str	r1, [sp, #12]
   11658:	mov	r1, r2
   1165c:	movw	r2, #56	; 0x38
   11660:	bl	110ac <memcpy@plt>
   11664:	ldr	r0, [fp, #-4]
   11668:	str	r0, [sp, #24]
   1166c:	ldr	r0, [sp, #12]
   11670:	str	r0, [sp, #20]
   11674:	ldr	r0, [sp, #20]
   11678:	ldr	r0, [r0]
   1167c:	movw	r1, #0
   11680:	cmp	r0, r1
   11684:	movw	r0, #0
   11688:	str	r0, [sp, #8]
   1168c:	beq	116b8 <__assert_fail@plt+0x3d8>
   11690:	ldr	r0, [fp, #-4]
   11694:	ldr	r1, [sp, #20]
   11698:	ldr	r1, [r1]
   1169c:	bl	1104c <strcmp@plt>
   116a0:	cmp	r0, #0
   116a4:	movw	r0, #0
   116a8:	moveq	r0, #1
   116ac:	mvn	r1, #0
   116b0:	eor	r0, r0, r1
   116b4:	str	r0, [sp, #8]
   116b8:	ldr	r0, [sp, #8]
   116bc:	tst	r0, #1
   116c0:	beq	116d4 <__assert_fail@plt+0x3f4>
   116c4:	ldr	r0, [sp, #20]
   116c8:	add	r0, r0, #8
   116cc:	str	r0, [sp, #20]
   116d0:	b	11674 <__assert_fail@plt+0x394>
   116d4:	ldr	r0, [sp, #20]
   116d8:	ldr	r0, [r0, #4]
   116dc:	movw	r1, #0
   116e0:	cmp	r0, r1
   116e4:	beq	116f4 <__assert_fail@plt+0x414>
   116e8:	ldr	r0, [sp, #20]
   116ec:	ldr	r0, [r0, #4]
   116f0:	str	r0, [sp, #24]
   116f4:	movw	r0, #53060	; 0xcf44
   116f8:	movt	r0, #1
   116fc:	bl	111b4 <gettext@plt>
   11700:	movw	r1, #52579	; 0xcd63
   11704:	movt	r1, #1
   11708:	movw	r2, #53083	; 0xcf5b
   1170c:	movt	r2, #1
   11710:	bl	11064 <printf@plt>
   11714:	movw	r1, #5
   11718:	str	r0, [sp, #4]
   1171c:	mov	r0, r1
   11720:	movw	r1, #0
   11724:	bl	11244 <setlocale@plt>
   11728:	str	r0, [sp, #16]
   1172c:	ldr	r0, [sp, #16]
   11730:	movw	r1, #0
   11734:	cmp	r0, r1
   11738:	beq	11774 <__assert_fail@plt+0x494>
   1173c:	ldr	r0, [sp, #16]
   11740:	movw	r1, #53123	; 0xcf83
   11744:	movt	r1, #1
   11748:	movw	r2, #3
   1174c:	bl	112a4 <strncmp@plt>
   11750:	cmp	r0, #0
   11754:	beq	11774 <__assert_fail@plt+0x494>
   11758:	movw	r0, #53127	; 0xcf87
   1175c:	movt	r0, #1
   11760:	bl	111b4 <gettext@plt>
   11764:	movw	r1, #57708	; 0xe16c
   11768:	movt	r1, #2
   1176c:	ldr	r1, [r1]
   11770:	bl	11034 <fputs_unlocked@plt>
   11774:	movw	r0, #53198	; 0xcfce
   11778:	movt	r0, #1
   1177c:	bl	111b4 <gettext@plt>
   11780:	ldr	r2, [fp, #-4]
   11784:	movw	r1, #53083	; 0xcf5b
   11788:	movt	r1, #1
   1178c:	bl	11064 <printf@plt>
   11790:	movw	r1, #53225	; 0xcfe9
   11794:	movt	r1, #1
   11798:	str	r0, [sp]
   1179c:	mov	r0, r1
   117a0:	bl	111b4 <gettext@plt>
   117a4:	ldr	r1, [sp, #24]
   117a8:	ldr	r2, [sp, #24]
   117ac:	ldr	r3, [fp, #-4]
   117b0:	cmp	r2, r3
   117b4:	movw	r2, #0
   117b8:	moveq	r2, #1
   117bc:	tst	r2, #1
   117c0:	movw	r2, #53275	; 0xd01b
   117c4:	movt	r2, #1
   117c8:	movw	r3, #52993	; 0xcf01
   117cc:	movt	r3, #1
   117d0:	movne	r2, r3
   117d4:	bl	11064 <printf@plt>
   117d8:	mov	sp, fp
   117dc:	pop	{fp, pc}
   117e0:	push	{fp, lr}
   117e4:	mov	fp, sp
   117e8:	sub	sp, sp, #88	; 0x58
   117ec:	movw	r2, #0
   117f0:	str	r2, [fp, #-4]
   117f4:	str	r0, [fp, #-8]
   117f8:	str	r1, [fp, #-12]
   117fc:	movw	r0, #0
   11800:	strb	r0, [fp, #-18]	; 0xffffffee
   11804:	strb	r0, [fp, #-19]	; 0xffffffed
   11808:	str	r2, [fp, #-24]	; 0xffffffe8
   1180c:	ldr	r0, [fp, #-12]
   11810:	ldr	r0, [r0]
   11814:	bl	14128 <__assert_fail@plt+0x2e48>
   11818:	movw	r0, #6
   1181c:	movw	r1, #53275	; 0xd01b
   11820:	movt	r1, #1
   11824:	bl	11244 <setlocale@plt>
   11828:	movw	r1, #52583	; 0xcd67
   1182c:	movt	r1, #1
   11830:	str	r0, [fp, #-32]	; 0xffffffe0
   11834:	mov	r0, r1
   11838:	movw	r1, #52471	; 0xccf7
   1183c:	movt	r1, #1
   11840:	bl	1128c <bindtextdomain@plt>
   11844:	movw	r1, #52583	; 0xcd67
   11848:	movt	r1, #1
   1184c:	str	r0, [fp, #-36]	; 0xffffffdc
   11850:	mov	r0, r1
   11854:	bl	110f4 <textdomain@plt>
   11858:	movw	r1, #13628	; 0x353c
   1185c:	movt	r1, #1
   11860:	str	r0, [fp, #-40]	; 0xffffffd8
   11864:	mov	r0, r1
   11868:	bl	1c6f0 <__assert_fail@plt+0xb410>
   1186c:	movw	r1, #57720	; 0xe178
   11870:	movt	r1, #2
   11874:	movw	r2, #0
   11878:	strb	r2, [r1]
   1187c:	movw	r1, #57721	; 0xe179
   11880:	movt	r1, #2
   11884:	strb	r2, [r1]
   11888:	movw	r1, #57722	; 0xe17a
   1188c:	movt	r1, #2
   11890:	strb	r2, [r1]
   11894:	ldr	r0, [fp, #-8]
   11898:	ldr	r1, [fp, #-12]
   1189c:	movw	r2, #52495	; 0xcd0f
   118a0:	movt	r2, #1
   118a4:	movw	r3, #53412	; 0xd0a4
   118a8:	movt	r3, #1
   118ac:	movw	ip, #0
   118b0:	str	ip, [sp]
   118b4:	bl	11190 <getopt_long@plt>
   118b8:	str	r0, [fp, #-16]
   118bc:	cmn	r0, #1
   118c0:	beq	11b64 <__assert_fail@plt+0x884>
   118c4:	ldr	r0, [fp, #-16]
   118c8:	cmn	r0, #3
   118cc:	str	r0, [sp, #44]	; 0x2c
   118d0:	beq	11af8 <__assert_fail@plt+0x818>
   118d4:	b	118d8 <__assert_fail@plt+0x5f8>
   118d8:	ldr	r0, [sp, #44]	; 0x2c
   118dc:	cmn	r0, #2
   118e0:	beq	11af0 <__assert_fail@plt+0x810>
   118e4:	b	118e8 <__assert_fail@plt+0x608>
   118e8:	ldr	r0, [sp, #44]	; 0x2c
   118ec:	sub	r1, r0, #98	; 0x62
   118f0:	cmp	r1, #2
   118f4:	bcc	11970 <__assert_fail@plt+0x690>
   118f8:	b	118fc <__assert_fail@plt+0x61c>
   118fc:	ldr	r0, [sp, #44]	; 0x2c
   11900:	cmp	r0, #100	; 0x64
   11904:	beq	119c8 <__assert_fail@plt+0x6e8>
   11908:	b	1190c <__assert_fail@plt+0x62c>
   1190c:	ldr	r0, [sp, #44]	; 0x2c
   11910:	cmp	r0, #102	; 0x66
   11914:	beq	11978 <__assert_fail@plt+0x698>
   11918:	b	1191c <__assert_fail@plt+0x63c>
   1191c:	ldr	r0, [sp, #44]	; 0x2c
   11920:	cmp	r0, #110	; 0x6e
   11924:	beq	11ab0 <__assert_fail@plt+0x7d0>
   11928:	b	1192c <__assert_fail@plt+0x64c>
   1192c:	ldr	r0, [sp, #44]	; 0x2c
   11930:	cmp	r0, #115	; 0x73
   11934:	beq	11ab4 <__assert_fail@plt+0x7d4>
   11938:	b	1193c <__assert_fail@plt+0x65c>
   1193c:	ldr	r0, [sp, #44]	; 0x2c
   11940:	cmp	r0, #122	; 0x7a
   11944:	beq	11ac8 <__assert_fail@plt+0x7e8>
   11948:	b	1194c <__assert_fail@plt+0x66c>
   1194c:	ldr	r0, [sp, #44]	; 0x2c
   11950:	cmp	r0, #256	; 0x100
   11954:	beq	11a4c <__assert_fail@plt+0x76c>
   11958:	b	1195c <__assert_fail@plt+0x67c>
   1195c:	movw	r0, #257	; 0x101
   11960:	ldr	r1, [sp, #44]	; 0x2c
   11964:	cmp	r1, r0
   11968:	beq	11adc <__assert_fail@plt+0x7fc>
   1196c:	b	11b58 <__assert_fail@plt+0x878>
   11970:	movw	r0, #1
   11974:	strb	r0, [fp, #-19]	; 0xffffffed
   11978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1197c:	movw	r1, #0
   11980:	cmp	r0, r1
   11984:	beq	119b4 <__assert_fail@plt+0x6d4>
   11988:	b	1198c <__assert_fail@plt+0x6ac>
   1198c:	movw	r0, #52507	; 0xcd1b
   11990:	movt	r0, #1
   11994:	bl	111b4 <gettext@plt>
   11998:	movw	r1, #0
   1199c:	str	r0, [sp, #40]	; 0x28
   119a0:	mov	r0, r1
   119a4:	ldr	r2, [sp, #40]	; 0x28
   119a8:	bl	11154 <error@plt>
   119ac:	movw	r0, #1
   119b0:	bl	113dc <__assert_fail@plt+0xfc>
   119b4:	movw	r0, #57712	; 0xe170
   119b8:	movt	r0, #2
   119bc:	ldr	r0, [r0]
   119c0:	str	r0, [fp, #-24]	; 0xffffffe8
   119c4:	b	11b60 <__assert_fail@plt+0x880>
   119c8:	movw	r0, #57712	; 0xe170
   119cc:	movt	r0, #2
   119d0:	ldr	r0, [r0]
   119d4:	ldrb	r0, [r0]
   119d8:	cmp	r0, #0
   119dc:	beq	11a24 <__assert_fail@plt+0x744>
   119e0:	movw	r0, #57712	; 0xe170
   119e4:	movt	r0, #2
   119e8:	ldr	r0, [r0]
   119ec:	ldrb	r0, [r0, #1]
   119f0:	cmp	r0, #0
   119f4:	beq	11a24 <__assert_fail@plt+0x744>
   119f8:	b	119fc <__assert_fail@plt+0x71c>
   119fc:	movw	r0, #52538	; 0xcd3a
   11a00:	movt	r0, #1
   11a04:	bl	111b4 <gettext@plt>
   11a08:	movw	r1, #0
   11a0c:	str	r0, [sp, #36]	; 0x24
   11a10:	mov	r0, r1
   11a14:	ldr	r2, [sp, #36]	; 0x24
   11a18:	bl	11154 <error@plt>
   11a1c:	movw	r0, #1
   11a20:	bl	113dc <__assert_fail@plt+0xfc>
   11a24:	movw	r0, #57712	; 0xe170
   11a28:	movt	r0, #2
   11a2c:	ldr	r0, [r0]
   11a30:	ldrb	r0, [r0]
   11a34:	movw	r1, #57721	; 0xe179
   11a38:	movt	r1, #2
   11a3c:	strb	r0, [r1]
   11a40:	movw	r0, #1
   11a44:	strb	r0, [fp, #-18]	; 0xffffffee
   11a48:	b	11b60 <__assert_fail@plt+0x880>
   11a4c:	movw	r0, #57712	; 0xe170
   11a50:	movt	r0, #2
   11a54:	ldr	r0, [r0]
   11a58:	ldrb	r0, [r0]
   11a5c:	cmp	r0, #0
   11a60:	bne	11a70 <__assert_fail@plt+0x790>
   11a64:	movw	r0, #1
   11a68:	str	r0, [sp, #32]
   11a6c:	b	11a84 <__assert_fail@plt+0x7a4>
   11a70:	movw	r0, #57712	; 0xe170
   11a74:	movt	r0, #2
   11a78:	ldr	r0, [r0]
   11a7c:	bl	111c0 <strlen@plt>
   11a80:	str	r0, [sp, #32]
   11a84:	ldr	r0, [sp, #32]
   11a88:	movw	r1, #57724	; 0xe17c
   11a8c:	movt	r1, #2
   11a90:	str	r0, [r1]
   11a94:	movw	r0, #57712	; 0xe170
   11a98:	movt	r0, #2
   11a9c:	ldr	r0, [r0]
   11aa0:	movw	r1, #57728	; 0xe180
   11aa4:	movt	r1, #2
   11aa8:	str	r0, [r1]
   11aac:	b	11b60 <__assert_fail@plt+0x880>
   11ab0:	b	11b60 <__assert_fail@plt+0x880>
   11ab4:	movw	r0, #57720	; 0xe178
   11ab8:	movt	r0, #2
   11abc:	movw	r1, #1
   11ac0:	strb	r1, [r0]
   11ac4:	b	11b60 <__assert_fail@plt+0x880>
   11ac8:	movw	r0, #57604	; 0xe104
   11acc:	movt	r0, #2
   11ad0:	movw	r1, #0
   11ad4:	strb	r1, [r0]
   11ad8:	b	11b60 <__assert_fail@plt+0x880>
   11adc:	movw	r0, #57732	; 0xe184
   11ae0:	movt	r0, #2
   11ae4:	movw	r1, #1
   11ae8:	strb	r1, [r0]
   11aec:	b	11b60 <__assert_fail@plt+0x880>
   11af0:	movw	r0, #0
   11af4:	bl	113dc <__assert_fail@plt+0xfc>
   11af8:	movw	r0, #57708	; 0xe16c
   11afc:	movt	r0, #2
   11b00:	ldr	r0, [r0]
   11b04:	movw	r1, #57608	; 0xe108
   11b08:	movt	r1, #2
   11b0c:	ldr	r3, [r1]
   11b10:	movw	r1, #52467	; 0xccf3
   11b14:	movt	r1, #1
   11b18:	movw	r2, #52579	; 0xcd63
   11b1c:	movt	r2, #1
   11b20:	movw	ip, #52593	; 0xcd71
   11b24:	movt	ip, #1
   11b28:	str	ip, [sp]
   11b2c:	movw	ip, #52608	; 0xcd80
   11b30:	movt	ip, #1
   11b34:	str	ip, [sp, #4]
   11b38:	movw	ip, #52624	; 0xcd90
   11b3c:	movt	ip, #1
   11b40:	str	ip, [sp, #8]
   11b44:	movw	ip, #0
   11b48:	str	ip, [sp, #12]
   11b4c:	bl	17000 <__assert_fail@plt+0x5d20>
   11b50:	movw	r0, #0
   11b54:	bl	111a8 <exit@plt>
   11b58:	movw	r0, #1
   11b5c:	bl	113dc <__assert_fail@plt+0xfc>
   11b60:	b	11894 <__assert_fail@plt+0x5b4>
   11b64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b68:	movw	r1, #0
   11b6c:	cmp	r0, r1
   11b70:	bne	11ba0 <__assert_fail@plt+0x8c0>
   11b74:	b	11b78 <__assert_fail@plt+0x898>
   11b78:	movw	r0, #52637	; 0xcd9d
   11b7c:	movt	r0, #1
   11b80:	bl	111b4 <gettext@plt>
   11b84:	movw	r1, #0
   11b88:	str	r0, [sp, #28]
   11b8c:	mov	r0, r1
   11b90:	ldr	r2, [sp, #28]
   11b94:	bl	11154 <error@plt>
   11b98:	movw	r0, #1
   11b9c:	bl	113dc <__assert_fail@plt+0xfc>
   11ba0:	ldrb	r0, [fp, #-19]	; 0xffffffed
   11ba4:	tst	r0, #1
   11ba8:	beq	11c28 <__assert_fail@plt+0x948>
   11bac:	ldrb	r0, [fp, #-18]	; 0xffffffee
   11bb0:	tst	r0, #1
   11bb4:	beq	11be4 <__assert_fail@plt+0x904>
   11bb8:	b	11bbc <__assert_fail@plt+0x8dc>
   11bbc:	movw	r0, #52693	; 0xcdd5
   11bc0:	movt	r0, #1
   11bc4:	bl	111b4 <gettext@plt>
   11bc8:	movw	r1, #0
   11bcc:	str	r0, [sp, #24]
   11bd0:	mov	r0, r1
   11bd4:	ldr	r2, [sp, #24]
   11bd8:	bl	11154 <error@plt>
   11bdc:	movw	r0, #1
   11be0:	bl	113dc <__assert_fail@plt+0xfc>
   11be4:	movw	r0, #57720	; 0xe178
   11be8:	movt	r0, #2
   11bec:	ldrb	r0, [r0]
   11bf0:	tst	r0, #1
   11bf4:	beq	11c24 <__assert_fail@plt+0x944>
   11bf8:	b	11bfc <__assert_fail@plt+0x91c>
   11bfc:	movw	r0, #52759	; 0xce17
   11c00:	movt	r0, #1
   11c04:	bl	111b4 <gettext@plt>
   11c08:	movw	r1, #0
   11c0c:	str	r0, [sp, #20]
   11c10:	mov	r0, r1
   11c14:	ldr	r2, [sp, #20]
   11c18:	bl	11154 <error@plt>
   11c1c:	movw	r0, #1
   11c20:	bl	113dc <__assert_fail@plt+0xfc>
   11c24:	b	11c28 <__assert_fail@plt+0x948>
   11c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c2c:	ldrb	r1, [fp, #-19]	; 0xffffffed
   11c30:	tst	r1, #1
   11c34:	movw	r1, #4
   11c38:	moveq	r1, #0
   11c3c:	movw	r2, #57732	; 0xe184
   11c40:	movt	r2, #2
   11c44:	ldrb	r2, [r2]
   11c48:	tst	r2, #1
   11c4c:	movw	r2, #2
   11c50:	moveq	r2, #0
   11c54:	orr	r1, r1, r2
   11c58:	bl	128a4 <__assert_fail@plt+0x15c4>
   11c5c:	ldrb	r0, [fp, #-18]	; 0xffffffee
   11c60:	tst	r0, #1
   11c64:	bne	11c78 <__assert_fail@plt+0x998>
   11c68:	movw	r0, #57721	; 0xe179
   11c6c:	movt	r0, #2
   11c70:	movw	r1, #9
   11c74:	strb	r1, [r0]
   11c78:	movw	r0, #57728	; 0xe180
   11c7c:	movt	r0, #2
   11c80:	ldr	r0, [r0]
   11c84:	movw	r1, #0
   11c88:	cmp	r0, r1
   11c8c:	bne	11cc4 <__assert_fail@plt+0x9e4>
   11c90:	movw	r0, #57721	; 0xe179
   11c94:	movt	r0, #2
   11c98:	ldrb	r0, [r0]
   11c9c:	movw	r1, #58072	; 0xe2d8
   11ca0:	movt	r1, #2
   11ca4:	strb	r0, [r1]
   11ca8:	movw	r0, #57728	; 0xe180
   11cac:	movt	r0, #2
   11cb0:	str	r1, [r0]
   11cb4:	movw	r0, #57724	; 0xe17c
   11cb8:	movt	r0, #2
   11cbc:	movw	r1, #1
   11cc0:	str	r1, [r0]
   11cc4:	ldrb	r0, [fp, #-19]	; 0xffffffed
   11cc8:	tst	r0, #1
   11ccc:	movw	r0, #8052	; 0x1f74
   11cd0:	movt	r0, #1
   11cd4:	movw	r1, #7676	; 0x1dfc
   11cd8:	movt	r1, #1
   11cdc:	movne	r0, r1
   11ce0:	str	r0, [fp, #-28]	; 0xffffffe4
   11ce4:	movw	r0, #57688	; 0xe158
   11ce8:	movt	r0, #2
   11cec:	ldr	r0, [r0]
   11cf0:	ldr	r1, [fp, #-8]
   11cf4:	cmp	r0, r1
   11cf8:	bne	11d18 <__assert_fail@plt+0xa38>
   11cfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11d00:	movw	r0, #53800	; 0xd228
   11d04:	movt	r0, #1
   11d08:	bl	125c4 <__assert_fail@plt+0x12e4>
   11d0c:	and	r0, r0, #1
   11d10:	strb	r0, [fp, #-17]	; 0xffffffef
   11d14:	b	11d98 <__assert_fail@plt+0xab8>
   11d18:	movw	r0, #1
   11d1c:	strb	r0, [fp, #-17]	; 0xffffffef
   11d20:	movw	r0, #57688	; 0xe158
   11d24:	movt	r0, #2
   11d28:	ldr	r0, [r0]
   11d2c:	ldr	r1, [fp, #-8]
   11d30:	cmp	r0, r1
   11d34:	bge	11d94 <__assert_fail@plt+0xab4>
   11d38:	ldr	r0, [fp, #-12]
   11d3c:	movw	r1, #57688	; 0xe158
   11d40:	movt	r1, #2
   11d44:	ldr	r1, [r1]
   11d48:	add	r0, r0, r1, lsl #2
   11d4c:	ldr	r0, [r0]
   11d50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11d54:	bl	125c4 <__assert_fail@plt+0x12e4>
   11d58:	and	r0, r0, #1
   11d5c:	ldrb	r1, [fp, #-17]	; 0xffffffef
   11d60:	and	r1, r1, #1
   11d64:	and	r0, r1, r0
   11d68:	cmp	r0, #0
   11d6c:	movw	r0, #0
   11d70:	movne	r0, #1
   11d74:	and	r0, r0, #1
   11d78:	strb	r0, [fp, #-17]	; 0xffffffef
   11d7c:	movw	r0, #57688	; 0xe158
   11d80:	movt	r0, #2
   11d84:	ldr	r1, [r0]
   11d88:	add	r1, r1, #1
   11d8c:	str	r1, [r0]
   11d90:	b	11d20 <__assert_fail@plt+0xa40>
   11d94:	b	11d98 <__assert_fail@plt+0xab8>
   11d98:	movw	r0, #57722	; 0xe17a
   11d9c:	movt	r0, #2
   11da0:	ldrb	r0, [r0]
   11da4:	tst	r0, #1
   11da8:	beq	11de4 <__assert_fail@plt+0xb04>
   11dac:	movw	r0, #57704	; 0xe168
   11db0:	movt	r0, #2
   11db4:	ldr	r0, [r0]
   11db8:	bl	13718 <__assert_fail@plt+0x2438>
   11dbc:	cmn	r0, #1
   11dc0:	bne	11de4 <__assert_fail@plt+0xb04>
   11dc4:	bl	111e4 <__errno_location@plt>
   11dc8:	ldr	r1, [r0]
   11dcc:	movw	r0, #0
   11dd0:	movw	r2, #53800	; 0xd228
   11dd4:	movt	r2, #1
   11dd8:	bl	11154 <error@plt>
   11ddc:	movw	r0, #0
   11de0:	strb	r0, [fp, #-17]	; 0xffffffef
   11de4:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11de8:	tst	r0, #1
   11dec:	movw	r0, #0
   11df0:	moveq	r0, #1
   11df4:	mov	sp, fp
   11df8:	pop	{fp, pc}
   11dfc:	push	{fp, lr}
   11e00:	mov	fp, sp
   11e04:	sub	sp, sp, #24
   11e08:	str	r0, [fp, #-4]
   11e0c:	mov	r0, #0
   11e10:	str	r0, [sp, #12]
   11e14:	str	r0, [sp, #8]
   11e18:	movw	r0, #0
   11e1c:	strb	r0, [sp, #7]
   11e20:	movw	r0, #58076	; 0xe2dc
   11e24:	movt	r0, #2
   11e28:	ldr	r0, [r0]
   11e2c:	movw	r1, #57736	; 0xe188
   11e30:	movt	r1, #2
   11e34:	str	r0, [r1]
   11e38:	ldr	r0, [fp, #-4]
   11e3c:	bl	110dc <getc_unlocked@plt>
   11e40:	str	r0, [sp]
   11e44:	ldr	r0, [sp]
   11e48:	movw	r1, #57604	; 0xe104
   11e4c:	movt	r1, #2
   11e50:	ldrb	r1, [r1]
   11e54:	cmp	r0, r1
   11e58:	bne	11e94 <__assert_fail@plt+0xbb4>
   11e5c:	ldr	r0, [sp]
   11e60:	bl	112c8 <putchar_unlocked@plt>
   11e64:	mov	r1, #0
   11e68:	str	r1, [sp, #12]
   11e6c:	str	r1, [sp, #8]
   11e70:	movw	r1, #0
   11e74:	strb	r1, [sp, #7]
   11e78:	movw	r1, #58076	; 0xe2dc
   11e7c:	movt	r1, #2
   11e80:	ldr	r1, [r1]
   11e84:	movw	r2, #57736	; 0xe188
   11e88:	movt	r2, #2
   11e8c:	str	r1, [r2]
   11e90:	b	11f68 <__assert_fail@plt+0xc88>
   11e94:	ldr	r0, [sp]
   11e98:	cmn	r0, #1
   11e9c:	bne	11ecc <__assert_fail@plt+0xbec>
   11ea0:	ldr	r0, [sp, #8]
   11ea4:	ldr	r1, [sp, #12]
   11ea8:	orr	r0, r0, r1
   11eac:	cmp	r0, #0
   11eb0:	beq	11ec8 <__assert_fail@plt+0xbe8>
   11eb4:	b	11eb8 <__assert_fail@plt+0xbd8>
   11eb8:	movw	r0, #57604	; 0xe104
   11ebc:	movt	r0, #2
   11ec0:	ldrb	r0, [r0]
   11ec4:	bl	112c8 <putchar_unlocked@plt>
   11ec8:	b	11f6c <__assert_fail@plt+0xc8c>
   11ecc:	add	r0, sp, #8
   11ed0:	bl	1278c <__assert_fail@plt+0x14ac>
   11ed4:	ldr	r0, [sp, #8]
   11ed8:	ldr	r1, [sp, #12]
   11edc:	bl	127fc <__assert_fail@plt+0x151c>
   11ee0:	tst	r0, #1
   11ee4:	beq	11f60 <__assert_fail@plt+0xc80>
   11ee8:	movw	r0, #57728	; 0xe180
   11eec:	movt	r0, #2
   11ef0:	ldr	r0, [r0]
   11ef4:	movw	r1, #58072	; 0xe2d8
   11ef8:	movt	r1, #2
   11efc:	cmp	r0, r1
   11f00:	beq	11f58 <__assert_fail@plt+0xc78>
   11f04:	ldrb	r0, [sp, #7]
   11f08:	tst	r0, #1
   11f0c:	beq	11f50 <__assert_fail@plt+0xc70>
   11f10:	ldr	r0, [sp, #8]
   11f14:	ldr	r1, [sp, #12]
   11f18:	bl	12848 <__assert_fail@plt+0x1568>
   11f1c:	tst	r0, #1
   11f20:	beq	11f50 <__assert_fail@plt+0xc70>
   11f24:	movw	r0, #57728	; 0xe180
   11f28:	movt	r0, #2
   11f2c:	ldr	r0, [r0]
   11f30:	movw	r1, #57724	; 0xe17c
   11f34:	movt	r1, #2
   11f38:	ldr	r2, [r1]
   11f3c:	movw	r1, #57708	; 0xe16c
   11f40:	movt	r1, #2
   11f44:	ldr	r3, [r1]
   11f48:	movw	r1, #1
   11f4c:	bl	110c4 <fwrite_unlocked@plt>
   11f50:	movw	r0, #1
   11f54:	strb	r0, [sp, #7]
   11f58:	ldr	r0, [sp]
   11f5c:	bl	112c8 <putchar_unlocked@plt>
   11f60:	b	11f64 <__assert_fail@plt+0xc84>
   11f64:	b	11f68 <__assert_fail@plt+0xc88>
   11f68:	b	11e38 <__assert_fail@plt+0xb58>
   11f6c:	mov	sp, fp
   11f70:	pop	{fp, pc}
   11f74:	push	{r4, sl, fp, lr}
   11f78:	add	fp, sp, #8
   11f7c:	sub	sp, sp, #80	; 0x50
   11f80:	str	r0, [fp, #-12]
   11f84:	mov	r0, #0
   11f88:	str	r0, [fp, #-20]	; 0xffffffec
   11f8c:	mov	r0, #1
   11f90:	str	r0, [fp, #-24]	; 0xffffffe8
   11f94:	movw	r0, #0
   11f98:	strb	r0, [fp, #-25]	; 0xffffffe7
   11f9c:	movw	r0, #58076	; 0xe2dc
   11fa0:	movt	r0, #2
   11fa4:	ldr	r0, [r0]
   11fa8:	movw	r1, #57736	; 0xe188
   11fac:	movt	r1, #2
   11fb0:	str	r0, [r1]
   11fb4:	ldr	r0, [fp, #-12]
   11fb8:	bl	110dc <getc_unlocked@plt>
   11fbc:	str	r0, [fp, #-16]
   11fc0:	ldr	r0, [fp, #-16]
   11fc4:	cmn	r0, #1
   11fc8:	bne	11fd0 <__assert_fail@plt+0xcf0>
   11fcc:	b	125bc <__assert_fail@plt+0x12dc>
   11fd0:	ldr	r0, [fp, #-16]
   11fd4:	ldr	r1, [fp, #-12]
   11fd8:	bl	111d8 <ungetc@plt>
   11fdc:	movw	r1, #0
   11fe0:	str	r1, [fp, #-16]
   11fe4:	movw	r1, #57720	; 0xe178
   11fe8:	movt	r1, #2
   11fec:	ldrb	r1, [r1]
   11ff0:	and	r1, r1, #1
   11ff4:	mov	r2, #1
   11ff8:	mov	r3, #0
   11ffc:	str	r0, [sp, #36]	; 0x24
   12000:	mov	r0, r2
   12004:	str	r1, [sp, #32]
   12008:	mov	r1, r3
   1200c:	bl	127fc <__assert_fail@plt+0x151c>
   12010:	mvn	r1, #0
   12014:	eor	r0, r0, r1
   12018:	and	r0, r0, #1
   1201c:	ldr	r1, [sp, #32]
   12020:	eor	r0, r1, r0
   12024:	cmp	r0, #0
   12028:	movw	r0, #0
   1202c:	movne	r0, #1
   12030:	and	r0, r0, #1
   12034:	strb	r0, [fp, #-26]	; 0xffffffe6
   12038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1203c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12040:	eor	r0, r0, #1
   12044:	orr	r0, r0, r1
   12048:	cmp	r0, #0
   1204c:	bne	122c8 <__assert_fail@plt+0xfe8>
   12050:	b	12054 <__assert_fail@plt+0xd74>
   12054:	ldrb	r0, [fp, #-26]	; 0xffffffe6
   12058:	tst	r0, #1
   1205c:	beq	122c8 <__assert_fail@plt+0xfe8>
   12060:	movw	r0, #57721	; 0xe179
   12064:	movt	r0, #2
   12068:	ldrb	r0, [r0]
   1206c:	movw	r1, #57604	; 0xe104
   12070:	movt	r1, #2
   12074:	ldrb	r1, [r1]
   12078:	ldr	r2, [fp, #-12]
   1207c:	movw	r3, #57740	; 0xe18c
   12080:	movt	r3, #2
   12084:	str	r0, [sp, #28]
   12088:	mov	r0, r3
   1208c:	movw	r3, #57744	; 0xe190
   12090:	movt	r3, #2
   12094:	str	r1, [sp, #24]
   12098:	mov	r1, r3
   1209c:	movw	r3, #0
   120a0:	str	r2, [sp, #20]
   120a4:	mov	r2, r3
   120a8:	mvn	r3, #0
   120ac:	ldr	ip, [sp, #28]
   120b0:	str	ip, [sp]
   120b4:	ldr	lr, [sp, #24]
   120b8:	str	lr, [sp, #4]
   120bc:	ldr	r4, [sp, #20]
   120c0:	str	r4, [sp, #8]
   120c4:	bl	139f8 <__assert_fail@plt+0x2718>
   120c8:	str	r0, [fp, #-32]	; 0xffffffe0
   120cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   120d0:	cmp	r0, #0
   120d4:	bge	12120 <__assert_fail@plt+0xe40>
   120d8:	movw	r0, #57740	; 0xe18c
   120dc:	movt	r0, #2
   120e0:	ldr	r0, [r0]
   120e4:	bl	138b0 <__assert_fail@plt+0x25d0>
   120e8:	movw	r0, #57740	; 0xe18c
   120ec:	movt	r0, #2
   120f0:	movw	r1, #0
   120f4:	str	r1, [r0]
   120f8:	ldr	r0, [fp, #-12]
   120fc:	bl	1113c <ferror_unlocked@plt>
   12100:	cmp	r0, #0
   12104:	bne	12118 <__assert_fail@plt+0xe38>
   12108:	ldr	r0, [fp, #-12]
   1210c:	bl	112bc <feof_unlocked@plt>
   12110:	cmp	r0, #0
   12114:	beq	1211c <__assert_fail@plt+0xe3c>
   12118:	b	125bc <__assert_fail@plt+0x12dc>
   1211c:	bl	19ec0 <__assert_fail@plt+0x8be0>
   12120:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12124:	str	r0, [fp, #-36]	; 0xffffffdc
   12128:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1212c:	cmp	r0, #0
   12130:	beq	12138 <__assert_fail@plt+0xe58>
   12134:	b	12158 <__assert_fail@plt+0xe78>
   12138:	movw	r0, #53365	; 0xd075
   1213c:	movt	r0, #1
   12140:	movw	r1, #53378	; 0xd082
   12144:	movt	r1, #1
   12148:	movw	r2, #315	; 0x13b
   1214c:	movw	r3, #53388	; 0xd08c
   12150:	movt	r3, #1
   12154:	bl	112e0 <__assert_fail@plt>
   12158:	movw	r0, #0
   1215c:	str	r0, [fp, #-16]
   12160:	movw	r0, #57740	; 0xe18c
   12164:	movt	r0, #2
   12168:	ldr	r0, [r0]
   1216c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12170:	sub	r1, r1, #1
   12174:	add	r0, r0, r1
   12178:	ldrb	r0, [r0]
   1217c:	bl	12890 <__assert_fail@plt+0x15b0>
   12180:	and	r0, r0, #255	; 0xff
   12184:	movw	r1, #57721	; 0xe179
   12188:	movt	r1, #2
   1218c:	ldrb	r1, [r1]
   12190:	cmp	r0, r1
   12194:	beq	12228 <__assert_fail@plt+0xf48>
   12198:	movw	r0, #57720	; 0xe178
   1219c:	movt	r0, #2
   121a0:	ldrb	r0, [r0]
   121a4:	tst	r0, #1
   121a8:	beq	121b0 <__assert_fail@plt+0xed0>
   121ac:	b	12224 <__assert_fail@plt+0xf44>
   121b0:	movw	r0, #57740	; 0xe18c
   121b4:	movt	r0, #2
   121b8:	ldr	r0, [r0]
   121bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   121c0:	movw	r1, #57708	; 0xe16c
   121c4:	movt	r1, #2
   121c8:	ldr	r3, [r1]
   121cc:	movw	r1, #1
   121d0:	bl	110c4 <fwrite_unlocked@plt>
   121d4:	movw	r1, #57740	; 0xe18c
   121d8:	movt	r1, #2
   121dc:	ldr	r1, [r1]
   121e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   121e4:	sub	r2, r2, #1
   121e8:	add	r1, r1, r2
   121ec:	ldrb	r1, [r1]
   121f0:	movw	r2, #57604	; 0xe104
   121f4:	movt	r2, #2
   121f8:	ldrb	r2, [r2]
   121fc:	cmp	r1, r2
   12200:	beq	12214 <__assert_fail@plt+0xf34>
   12204:	movw	r0, #57604	; 0xe104
   12208:	movt	r0, #2
   1220c:	ldrb	r0, [r0]
   12210:	bl	112c8 <putchar_unlocked@plt>
   12214:	movw	r0, #57604	; 0xe104
   12218:	movt	r0, #2
   1221c:	ldrb	r0, [r0]
   12220:	str	r0, [fp, #-16]
   12224:	b	12038 <__assert_fail@plt+0xd58>
   12228:	mov	r0, #1
   1222c:	mov	r1, #0
   12230:	bl	127fc <__assert_fail@plt+0x151c>
   12234:	tst	r0, #1
   12238:	beq	122c0 <__assert_fail@plt+0xfe0>
   1223c:	movw	r0, #57740	; 0xe18c
   12240:	movt	r0, #2
   12244:	ldr	r0, [r0]
   12248:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1224c:	sub	r2, r1, #1
   12250:	movw	r1, #57708	; 0xe16c
   12254:	movt	r1, #2
   12258:	ldr	r3, [r1]
   1225c:	movw	r1, #1
   12260:	bl	110c4 <fwrite_unlocked@plt>
   12264:	movw	r1, #57721	; 0xe179
   12268:	movt	r1, #2
   1226c:	ldrb	r1, [r1]
   12270:	movw	r2, #57604	; 0xe104
   12274:	movt	r2, #2
   12278:	ldrb	r2, [r2]
   1227c:	cmp	r1, r2
   12280:	bne	122b4 <__assert_fail@plt+0xfd4>
   12284:	ldr	r0, [fp, #-12]
   12288:	bl	110dc <getc_unlocked@plt>
   1228c:	str	r0, [fp, #-40]	; 0xffffffd8
   12290:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12294:	cmn	r0, #1
   12298:	beq	122b0 <__assert_fail@plt+0xfd0>
   1229c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   122a0:	ldr	r1, [fp, #-12]
   122a4:	bl	111d8 <ungetc@plt>
   122a8:	movw	r1, #1
   122ac:	strb	r1, [fp, #-25]	; 0xffffffe7
   122b0:	b	122bc <__assert_fail@plt+0xfdc>
   122b4:	movw	r0, #1
   122b8:	strb	r0, [fp, #-25]	; 0xffffffe7
   122bc:	b	122c0 <__assert_fail@plt+0xfe0>
   122c0:	sub	r0, fp, #24
   122c4:	bl	1278c <__assert_fail@plt+0x14ac>
   122c8:	ldr	r0, [fp, #-16]
   122cc:	str	r0, [sp, #44]	; 0x2c
   122d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   122d8:	bl	127fc <__assert_fail@plt+0x151c>
   122dc:	tst	r0, #1
   122e0:	beq	123a4 <__assert_fail@plt+0x10c4>
   122e4:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   122e8:	tst	r0, #1
   122ec:	beq	1231c <__assert_fail@plt+0x103c>
   122f0:	movw	r0, #57728	; 0xe180
   122f4:	movt	r0, #2
   122f8:	ldr	r0, [r0]
   122fc:	movw	r1, #57724	; 0xe17c
   12300:	movt	r1, #2
   12304:	ldr	r2, [r1]
   12308:	movw	r1, #57708	; 0xe16c
   1230c:	movt	r1, #2
   12310:	ldr	r3, [r1]
   12314:	movw	r1, #1
   12318:	bl	110c4 <fwrite_unlocked@plt>
   1231c:	movw	r0, #1
   12320:	strb	r0, [fp, #-25]	; 0xffffffe7
   12324:	ldr	r0, [fp, #-12]
   12328:	bl	110dc <getc_unlocked@plt>
   1232c:	str	r0, [fp, #-16]
   12330:	movw	r1, #57721	; 0xe179
   12334:	movt	r1, #2
   12338:	ldrb	r1, [r1]
   1233c:	cmp	r0, r1
   12340:	movw	r0, #0
   12344:	str	r0, [sp, #16]
   12348:	beq	12380 <__assert_fail@plt+0x10a0>
   1234c:	ldr	r0, [fp, #-16]
   12350:	movw	r1, #57604	; 0xe104
   12354:	movt	r1, #2
   12358:	ldrb	r1, [r1]
   1235c:	cmp	r0, r1
   12360:	movw	r0, #0
   12364:	str	r0, [sp, #16]
   12368:	beq	12380 <__assert_fail@plt+0x10a0>
   1236c:	ldr	r0, [fp, #-16]
   12370:	cmn	r0, #1
   12374:	movw	r0, #0
   12378:	movne	r0, #1
   1237c:	str	r0, [sp, #16]
   12380:	ldr	r0, [sp, #16]
   12384:	tst	r0, #1
   12388:	beq	123a0 <__assert_fail@plt+0x10c0>
   1238c:	ldr	r0, [fp, #-16]
   12390:	bl	112c8 <putchar_unlocked@plt>
   12394:	ldr	r1, [fp, #-16]
   12398:	str	r1, [sp, #44]	; 0x2c
   1239c:	b	12324 <__assert_fail@plt+0x1044>
   123a0:	b	12420 <__assert_fail@plt+0x1140>
   123a4:	b	123a8 <__assert_fail@plt+0x10c8>
   123a8:	ldr	r0, [fp, #-12]
   123ac:	bl	110dc <getc_unlocked@plt>
   123b0:	str	r0, [fp, #-16]
   123b4:	movw	r1, #57721	; 0xe179
   123b8:	movt	r1, #2
   123bc:	ldrb	r1, [r1]
   123c0:	cmp	r0, r1
   123c4:	movw	r0, #0
   123c8:	str	r0, [sp, #12]
   123cc:	beq	12404 <__assert_fail@plt+0x1124>
   123d0:	ldr	r0, [fp, #-16]
   123d4:	movw	r1, #57604	; 0xe104
   123d8:	movt	r1, #2
   123dc:	ldrb	r1, [r1]
   123e0:	cmp	r0, r1
   123e4:	movw	r0, #0
   123e8:	str	r0, [sp, #12]
   123ec:	beq	12404 <__assert_fail@plt+0x1124>
   123f0:	ldr	r0, [fp, #-16]
   123f4:	cmn	r0, #1
   123f8:	movw	r0, #0
   123fc:	movne	r0, #1
   12400:	str	r0, [sp, #12]
   12404:	ldr	r0, [sp, #12]
   12408:	tst	r0, #1
   1240c:	beq	1241c <__assert_fail@plt+0x113c>
   12410:	ldr	r0, [fp, #-16]
   12414:	str	r0, [sp, #44]	; 0x2c
   12418:	b	123a8 <__assert_fail@plt+0x10c8>
   1241c:	b	12420 <__assert_fail@plt+0x1140>
   12420:	movw	r0, #57721	; 0xe179
   12424:	movt	r0, #2
   12428:	ldrb	r0, [r0]
   1242c:	movw	r1, #57604	; 0xe104
   12430:	movt	r1, #2
   12434:	ldrb	r1, [r1]
   12438:	cmp	r0, r1
   1243c:	bne	1248c <__assert_fail@plt+0x11ac>
   12440:	ldr	r0, [fp, #-16]
   12444:	movw	r1, #57721	; 0xe179
   12448:	movt	r1, #2
   1244c:	ldrb	r1, [r1]
   12450:	cmp	r0, r1
   12454:	bne	1248c <__assert_fail@plt+0x11ac>
   12458:	ldr	r0, [fp, #-12]
   1245c:	bl	110dc <getc_unlocked@plt>
   12460:	str	r0, [sp, #40]	; 0x28
   12464:	ldr	r0, [sp, #40]	; 0x28
   12468:	cmn	r0, #1
   1246c:	beq	12480 <__assert_fail@plt+0x11a0>
   12470:	ldr	r0, [sp, #40]	; 0x28
   12474:	ldr	r1, [fp, #-12]
   12478:	bl	111d8 <ungetc@plt>
   1247c:	b	12488 <__assert_fail@plt+0x11a8>
   12480:	ldr	r0, [sp, #40]	; 0x28
   12484:	str	r0, [fp, #-16]
   12488:	b	1248c <__assert_fail@plt+0x11ac>
   1248c:	ldr	r0, [fp, #-16]
   12490:	movw	r1, #57721	; 0xe179
   12494:	movt	r1, #2
   12498:	ldrb	r1, [r1]
   1249c:	cmp	r0, r1
   124a0:	bne	124b0 <__assert_fail@plt+0x11d0>
   124a4:	sub	r0, fp, #24
   124a8:	bl	1278c <__assert_fail@plt+0x14ac>
   124ac:	b	125b8 <__assert_fail@plt+0x12d8>
   124b0:	ldr	r0, [fp, #-16]
   124b4:	movw	r1, #57604	; 0xe104
   124b8:	movt	r1, #2
   124bc:	ldrb	r1, [r1]
   124c0:	cmp	r0, r1
   124c4:	beq	124d4 <__assert_fail@plt+0x11f4>
   124c8:	ldr	r0, [fp, #-16]
   124cc:	cmn	r0, #1
   124d0:	bne	125b4 <__assert_fail@plt+0x12d4>
   124d4:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   124d8:	tst	r0, #1
   124dc:	bne	12510 <__assert_fail@plt+0x1230>
   124e0:	movw	r0, #57720	; 0xe178
   124e4:	movt	r0, #2
   124e8:	ldrb	r0, [r0]
   124ec:	tst	r0, #1
   124f0:	beq	12510 <__assert_fail@plt+0x1230>
   124f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   124f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   124fc:	eor	r0, r0, #1
   12500:	orr	r0, r0, r1
   12504:	cmp	r0, #0
   12508:	beq	12574 <__assert_fail@plt+0x1294>
   1250c:	b	12510 <__assert_fail@plt+0x1230>
   12510:	ldr	r0, [fp, #-16]
   12514:	movw	r1, #57604	; 0xe104
   12518:	movt	r1, #2
   1251c:	ldrb	r1, [r1]
   12520:	cmp	r0, r1
   12524:	beq	12560 <__assert_fail@plt+0x1280>
   12528:	ldr	r0, [sp, #44]	; 0x2c
   1252c:	movw	r1, #57604	; 0xe104
   12530:	movt	r1, #2
   12534:	ldrb	r1, [r1]
   12538:	cmp	r0, r1
   1253c:	bne	12560 <__assert_fail@plt+0x1280>
   12540:	movw	r0, #57721	; 0xe179
   12544:	movt	r0, #2
   12548:	ldrb	r0, [r0]
   1254c:	movw	r1, #57604	; 0xe104
   12550:	movt	r1, #2
   12554:	ldrb	r1, [r1]
   12558:	cmp	r0, r1
   1255c:	bne	12570 <__assert_fail@plt+0x1290>
   12560:	movw	r0, #57604	; 0xe104
   12564:	movt	r0, #2
   12568:	ldrb	r0, [r0]
   1256c:	bl	112c8 <putchar_unlocked@plt>
   12570:	b	12574 <__assert_fail@plt+0x1294>
   12574:	ldr	r0, [fp, #-16]
   12578:	cmn	r0, #1
   1257c:	bne	12584 <__assert_fail@plt+0x12a4>
   12580:	b	125bc <__assert_fail@plt+0x12dc>
   12584:	mov	r0, #0
   12588:	str	r0, [fp, #-20]	; 0xffffffec
   1258c:	mov	r0, #1
   12590:	str	r0, [fp, #-24]	; 0xffffffe8
   12594:	movw	r0, #58076	; 0xe2dc
   12598:	movt	r0, #2
   1259c:	ldr	r0, [r0]
   125a0:	movw	r1, #57736	; 0xe188
   125a4:	movt	r1, #2
   125a8:	str	r0, [r1]
   125ac:	movw	r0, #0
   125b0:	strb	r0, [fp, #-25]	; 0xffffffe7
   125b4:	b	125b8 <__assert_fail@plt+0x12d8>
   125b8:	b	12038 <__assert_fail@plt+0xd58>
   125bc:	sub	sp, fp, #8
   125c0:	pop	{r4, sl, fp, pc}
   125c4:	push	{fp, lr}
   125c8:	mov	fp, sp
   125cc:	sub	sp, sp, #40	; 0x28
   125d0:	str	r0, [fp, #-8]
   125d4:	str	r1, [fp, #-12]
   125d8:	ldr	r0, [fp, #-8]
   125dc:	movw	r1, #53800	; 0xd228
   125e0:	movt	r1, #1
   125e4:	bl	1104c <strcmp@plt>
   125e8:	cmp	r0, #0
   125ec:	bne	12614 <__assert_fail@plt+0x1334>
   125f0:	movw	r0, #57722	; 0xe17a
   125f4:	movt	r0, #2
   125f8:	movw	r1, #1
   125fc:	strb	r1, [r0]
   12600:	movw	r0, #57704	; 0xe168
   12604:	movt	r0, #2
   12608:	ldr	r0, [r0]
   1260c:	str	r0, [fp, #-16]
   12610:	b	1268c <__assert_fail@plt+0x13ac>
   12614:	ldr	r0, [fp, #-8]
   12618:	movw	r1, #52577	; 0xcd61
   1261c:	movt	r1, #1
   12620:	bl	11274 <fopen64@plt>
   12624:	str	r0, [fp, #-16]
   12628:	ldr	r0, [fp, #-16]
   1262c:	movw	r1, #0
   12630:	cmp	r0, r1
   12634:	bne	12688 <__assert_fail@plt+0x13a8>
   12638:	bl	111e4 <__errno_location@plt>
   1263c:	ldr	r1, [r0]
   12640:	ldr	r2, [fp, #-8]
   12644:	movw	r0, #0
   12648:	movw	r3, #3
   1264c:	str	r1, [sp, #16]
   12650:	mov	r1, r3
   12654:	bl	16540 <__assert_fail@plt+0x5260>
   12658:	movw	r1, #0
   1265c:	str	r0, [sp, #12]
   12660:	mov	r0, r1
   12664:	ldr	r1, [sp, #16]
   12668:	movw	r2, #54058	; 0xd32a
   1266c:	movt	r2, #1
   12670:	ldr	r3, [sp, #12]
   12674:	bl	11154 <error@plt>
   12678:	movw	r0, #0
   1267c:	and	r0, r0, #1
   12680:	strb	r0, [fp, #-1]
   12684:	b	1277c <__assert_fail@plt+0x149c>
   12688:	b	1268c <__assert_fail@plt+0x13ac>
   1268c:	ldr	r0, [fp, #-16]
   12690:	movw	r1, #2
   12694:	bl	136c0 <__assert_fail@plt+0x23e0>
   12698:	ldr	r0, [fp, #-12]
   1269c:	ldr	r1, [fp, #-16]
   126a0:	str	r0, [sp, #8]
   126a4:	mov	r0, r1
   126a8:	ldr	r1, [sp, #8]
   126ac:	blx	r1
   126b0:	bl	111e4 <__errno_location@plt>
   126b4:	ldr	r0, [r0]
   126b8:	str	r0, [sp, #20]
   126bc:	ldr	r0, [fp, #-16]
   126c0:	bl	1113c <ferror_unlocked@plt>
   126c4:	cmp	r0, #0
   126c8:	bne	126d4 <__assert_fail@plt+0x13f4>
   126cc:	movw	r0, #0
   126d0:	str	r0, [sp, #20]
   126d4:	ldr	r0, [fp, #-8]
   126d8:	movw	r1, #53800	; 0xd228
   126dc:	movt	r1, #1
   126e0:	bl	1104c <strcmp@plt>
   126e4:	cmp	r0, #0
   126e8:	bne	126f8 <__assert_fail@plt+0x1418>
   126ec:	ldr	r0, [fp, #-16]
   126f0:	bl	11268 <clearerr_unlocked@plt>
   126f4:	b	12718 <__assert_fail@plt+0x1438>
   126f8:	ldr	r0, [fp, #-16]
   126fc:	bl	13718 <__assert_fail@plt+0x2438>
   12700:	cmn	r0, #1
   12704:	bne	12714 <__assert_fail@plt+0x1434>
   12708:	bl	111e4 <__errno_location@plt>
   1270c:	ldr	r0, [r0]
   12710:	str	r0, [sp, #20]
   12714:	b	12718 <__assert_fail@plt+0x1438>
   12718:	ldr	r0, [sp, #20]
   1271c:	cmp	r0, #0
   12720:	beq	12770 <__assert_fail@plt+0x1490>
   12724:	ldr	r1, [sp, #20]
   12728:	ldr	r2, [fp, #-8]
   1272c:	movw	r0, #0
   12730:	movw	r3, #3
   12734:	str	r1, [sp, #4]
   12738:	mov	r1, r3
   1273c:	bl	16540 <__assert_fail@plt+0x5260>
   12740:	movw	r1, #0
   12744:	str	r0, [sp]
   12748:	mov	r0, r1
   1274c:	ldr	r1, [sp, #4]
   12750:	movw	r2, #54058	; 0xd32a
   12754:	movt	r2, #1
   12758:	ldr	r3, [sp]
   1275c:	bl	11154 <error@plt>
   12760:	movw	r0, #0
   12764:	and	r0, r0, #1
   12768:	strb	r0, [fp, #-1]
   1276c:	b	1277c <__assert_fail@plt+0x149c>
   12770:	movw	r0, #1
   12774:	and	r0, r0, #1
   12778:	strb	r0, [fp, #-1]
   1277c:	ldrb	r0, [fp, #-1]
   12780:	and	r0, r0, #1
   12784:	mov	sp, fp
   12788:	pop	{fp, pc}
   1278c:	sub	sp, sp, #4
   12790:	str	r0, [sp]
   12794:	ldr	r0, [sp]
   12798:	ldr	r1, [r0]
   1279c:	ldr	r2, [r0, #4]
   127a0:	adds	r1, r1, #1
   127a4:	adc	r2, r2, #0
   127a8:	str	r1, [r0]
   127ac:	str	r2, [r0, #4]
   127b0:	ldr	r0, [sp]
   127b4:	ldr	r1, [r0]
   127b8:	ldr	r0, [r0, #4]
   127bc:	movw	r2, #57736	; 0xe188
   127c0:	movt	r2, #2
   127c4:	ldr	r2, [r2]
   127c8:	ldr	r3, [r2, #8]
   127cc:	ldr	r2, [r2, #12]
   127d0:	subs	r1, r3, r1
   127d4:	sbcs	r0, r2, r0
   127d8:	bcs	127f4 <__assert_fail@plt+0x1514>
   127dc:	b	127e0 <__assert_fail@plt+0x1500>
   127e0:	movw	r0, #57736	; 0xe188
   127e4:	movt	r0, #2
   127e8:	ldr	r1, [r0]
   127ec:	add	r1, r1, #16
   127f0:	str	r1, [r0]
   127f4:	add	sp, sp, #4
   127f8:	bx	lr
   127fc:	sub	sp, sp, #16
   12800:	str	r0, [sp, #8]
   12804:	str	r1, [sp, #12]
   12808:	movw	r0, #57736	; 0xe188
   1280c:	movt	r0, #2
   12810:	ldr	r0, [r0]
   12814:	ldr	r1, [r0]
   12818:	ldr	r0, [r0, #4]
   1281c:	ldr	r2, [sp, #8]
   12820:	ldr	r3, [sp, #12]
   12824:	subs	r1, r2, r1
   12828:	sbcs	r0, r3, r0
   1282c:	mov	r2, #0
   12830:	movwcs	r2, #1
   12834:	and	r2, r2, #1
   12838:	str	r0, [sp, #4]
   1283c:	mov	r0, r2
   12840:	add	sp, sp, #16
   12844:	bx	lr
   12848:	sub	sp, sp, #8
   1284c:	str	r0, [sp]
   12850:	str	r1, [sp, #4]
   12854:	ldr	r0, [sp]
   12858:	ldr	r1, [sp, #4]
   1285c:	movw	r2, #57736	; 0xe188
   12860:	movt	r2, #2
   12864:	ldr	r2, [r2]
   12868:	ldr	r3, [r2]
   1286c:	ldr	r2, [r2, #4]
   12870:	eor	r1, r1, r2
   12874:	eor	r0, r0, r3
   12878:	orr	r0, r0, r1
   1287c:	clz	r0, r0
   12880:	lsr	r0, r0, #5
   12884:	and	r0, r0, #1
   12888:	add	sp, sp, #8
   1288c:	bx	lr
   12890:	sub	sp, sp, #4
   12894:	strb	r0, [sp, #3]
   12898:	ldrb	r0, [sp, #3]
   1289c:	add	sp, sp, #4
   128a0:	bx	lr
   128a4:	push	{fp, lr}
   128a8:	mov	fp, sp
   128ac:	sub	sp, sp, #160	; 0xa0
   128b0:	str	r0, [fp, #-4]
   128b4:	str	r1, [fp, #-8]
   128b8:	mov	r0, #0
   128bc:	str	r0, [fp, #-12]
   128c0:	mov	r1, #1
   128c4:	str	r1, [fp, #-16]
   128c8:	str	r0, [fp, #-20]	; 0xffffffec
   128cc:	str	r0, [fp, #-24]	; 0xffffffe8
   128d0:	movw	r0, #0
   128d4:	strb	r0, [fp, #-25]	; 0xffffffe7
   128d8:	strb	r0, [fp, #-26]	; 0xffffffe6
   128dc:	strb	r0, [fp, #-27]	; 0xffffffe5
   128e0:	strb	r0, [fp, #-28]	; 0xffffffe4
   128e4:	ldr	r0, [fp, #-8]
   128e8:	and	r0, r0, #1
   128ec:	cmp	r0, #0
   128f0:	beq	12934 <__assert_fail@plt+0x1654>
   128f4:	ldr	r0, [fp, #-4]
   128f8:	movw	r1, #53800	; 0xd228
   128fc:	movt	r1, #1
   12900:	bl	1104c <strcmp@plt>
   12904:	cmp	r0, #0
   12908:	bne	12934 <__assert_fail@plt+0x1654>
   1290c:	mov	r0, #0
   12910:	str	r0, [fp, #-20]	; 0xffffffec
   12914:	mov	r0, #1
   12918:	str	r0, [fp, #-24]	; 0xffffffe8
   1291c:	movw	r0, #1
   12920:	strb	r0, [fp, #-25]	; 0xffffffe7
   12924:	strb	r0, [fp, #-27]	; 0xffffffe5
   12928:	ldr	r0, [fp, #-4]
   1292c:	add	r0, r0, #1
   12930:	str	r0, [fp, #-4]
   12934:	b	12938 <__assert_fail@plt+0x1658>
   12938:	ldr	r0, [fp, #-4]
   1293c:	ldrb	r0, [r0]
   12940:	cmp	r0, #45	; 0x2d
   12944:	bne	12a98 <__assert_fail@plt+0x17b8>
   12948:	movw	r0, #0
   1294c:	strb	r0, [fp, #-28]	; 0xffffffe4
   12950:	ldrb	r0, [fp, #-27]	; 0xffffffe5
   12954:	tst	r0, #1
   12958:	beq	129b4 <__assert_fail@plt+0x16d4>
   1295c:	b	12960 <__assert_fail@plt+0x1680>
   12960:	ldr	r0, [fp, #-8]
   12964:	and	r0, r0, #4
   12968:	cmp	r0, #0
   1296c:	beq	12984 <__assert_fail@plt+0x16a4>
   12970:	movw	r0, #53644	; 0xd18c
   12974:	movt	r0, #1
   12978:	bl	111b4 <gettext@plt>
   1297c:	str	r0, [fp, #-48]	; 0xffffffd0
   12980:	b	12994 <__assert_fail@plt+0x16b4>
   12984:	movw	r0, #53676	; 0xd1ac
   12988:	movt	r0, #1
   1298c:	bl	111b4 <gettext@plt>
   12990:	str	r0, [fp, #-48]	; 0xffffffd0
   12994:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12998:	movw	r1, #0
   1299c:	str	r0, [fp, #-52]	; 0xffffffcc
   129a0:	mov	r0, r1
   129a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   129a8:	bl	11154 <error@plt>
   129ac:	movw	r0, #1
   129b0:	bl	113dc <__assert_fail@plt+0xfc>
   129b4:	movw	r0, #1
   129b8:	strb	r0, [fp, #-27]	; 0xffffffe5
   129bc:	ldr	r0, [fp, #-4]
   129c0:	add	r0, r0, #1
   129c4:	str	r0, [fp, #-4]
   129c8:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   129cc:	tst	r0, #1
   129d0:	beq	12a44 <__assert_fail@plt+0x1764>
   129d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   129dc:	orr	r0, r0, r1
   129e0:	cmp	r0, #0
   129e4:	bne	12a44 <__assert_fail@plt+0x1764>
   129e8:	b	129ec <__assert_fail@plt+0x170c>
   129ec:	b	129f0 <__assert_fail@plt+0x1710>
   129f0:	ldr	r0, [fp, #-8]
   129f4:	and	r0, r0, #4
   129f8:	cmp	r0, #0
   129fc:	beq	12a14 <__assert_fail@plt+0x1734>
   12a00:	movw	r0, #53696	; 0xd1c0
   12a04:	movt	r0, #1
   12a08:	bl	111b4 <gettext@plt>
   12a0c:	str	r0, [fp, #-56]	; 0xffffffc8
   12a10:	b	12a24 <__assert_fail@plt+0x1744>
   12a14:	movw	r0, #53741	; 0xd1ed
   12a18:	movt	r0, #1
   12a1c:	bl	111b4 <gettext@plt>
   12a20:	str	r0, [fp, #-56]	; 0xffffffc8
   12a24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12a28:	movw	r1, #0
   12a2c:	str	r0, [fp, #-60]	; 0xffffffc4
   12a30:	mov	r0, r1
   12a34:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12a38:	bl	11154 <error@plt>
   12a3c:	movw	r0, #1
   12a40:	bl	113dc <__assert_fail@plt+0xfc>
   12a44:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12a48:	tst	r0, #1
   12a4c:	beq	12a64 <__assert_fail@plt+0x1784>
   12a50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a54:	ldr	r1, [fp, #-20]	; 0xffffffec
   12a58:	str	r0, [fp, #-64]	; 0xffffffc0
   12a5c:	str	r1, [fp, #-68]	; 0xffffffbc
   12a60:	b	12a78 <__assert_fail@plt+0x1798>
   12a64:	mov	r0, #0
   12a68:	mov	r1, #1
   12a6c:	str	r1, [fp, #-64]	; 0xffffffc0
   12a70:	str	r0, [fp, #-68]	; 0xffffffbc
   12a74:	b	12a78 <__assert_fail@plt+0x1798>
   12a78:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12a7c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12a80:	str	r1, [fp, #-16]
   12a84:	str	r0, [fp, #-12]
   12a88:	mov	r0, #0
   12a8c:	str	r0, [fp, #-20]	; 0xffffffec
   12a90:	str	r0, [fp, #-24]	; 0xffffffe8
   12a94:	b	12f3c <__assert_fail@plt+0x1c5c>
   12a98:	ldr	r0, [fp, #-4]
   12a9c:	ldrb	r0, [r0]
   12aa0:	cmp	r0, #44	; 0x2c
   12aa4:	beq	12af0 <__assert_fail@plt+0x1810>
   12aa8:	bl	1119c <__ctype_b_loc@plt>
   12aac:	ldr	r0, [r0]
   12ab0:	ldr	r1, [fp, #-4]
   12ab4:	ldrb	r1, [r1]
   12ab8:	str	r0, [fp, #-72]	; 0xffffffb8
   12abc:	mov	r0, r1
   12ac0:	bl	13220 <__assert_fail@plt+0x1f40>
   12ac4:	mov	r1, r0
   12ac8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12acc:	add	r0, r2, r0, lsl #1
   12ad0:	ldrh	r0, [r0]
   12ad4:	and	r0, r0, #1
   12ad8:	cmp	r0, #0
   12adc:	bne	12af0 <__assert_fail@plt+0x1810>
   12ae0:	ldr	r0, [fp, #-4]
   12ae4:	ldrb	r0, [r0]
   12ae8:	cmp	r0, #0
   12aec:	bne	12cd8 <__assert_fail@plt+0x19f8>
   12af0:	movw	r0, #0
   12af4:	strb	r0, [fp, #-28]	; 0xffffffe4
   12af8:	ldrb	r0, [fp, #-27]	; 0xffffffe5
   12afc:	tst	r0, #1
   12b00:	beq	12c10 <__assert_fail@plt+0x1930>
   12b04:	movw	r0, #0
   12b08:	strb	r0, [fp, #-27]	; 0xffffffe5
   12b0c:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12b10:	tst	r0, #1
   12b14:	bne	12b78 <__assert_fail@plt+0x1898>
   12b18:	ldrb	r0, [fp, #-26]	; 0xffffffe6
   12b1c:	tst	r0, #1
   12b20:	bne	12b78 <__assert_fail@plt+0x1898>
   12b24:	ldr	r0, [fp, #-8]
   12b28:	and	r0, r0, #1
   12b2c:	cmp	r0, #0
   12b30:	beq	12b48 <__assert_fail@plt+0x1868>
   12b34:	mov	r0, #0
   12b38:	str	r0, [fp, #-12]
   12b3c:	mov	r0, #1
   12b40:	str	r0, [fp, #-16]
   12b44:	b	12b74 <__assert_fail@plt+0x1894>
   12b48:	b	12b4c <__assert_fail@plt+0x186c>
   12b4c:	movw	r0, #53768	; 0xd208
   12b50:	movt	r0, #1
   12b54:	bl	111b4 <gettext@plt>
   12b58:	movw	r1, #0
   12b5c:	str	r0, [fp, #-76]	; 0xffffffb4
   12b60:	mov	r0, r1
   12b64:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12b68:	bl	11154 <error@plt>
   12b6c:	movw	r0, #1
   12b70:	bl	113dc <__assert_fail@plt+0xfc>
   12b74:	b	12b78 <__assert_fail@plt+0x1898>
   12b78:	ldrb	r0, [fp, #-26]	; 0xffffffe6
   12b7c:	tst	r0, #1
   12b80:	bne	12ba0 <__assert_fail@plt+0x18c0>
   12b84:	ldr	r0, [fp, #-16]
   12b88:	ldr	r1, [fp, #-12]
   12b8c:	mvn	r2, #0
   12b90:	str	r2, [sp, #80]	; 0x50
   12b94:	ldr	r3, [sp, #80]	; 0x50
   12b98:	bl	13234 <__assert_fail@plt+0x1f54>
   12b9c:	b	12c00 <__assert_fail@plt+0x1920>
   12ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ba4:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ba8:	ldr	r2, [fp, #-16]
   12bac:	ldr	r3, [fp, #-12]
   12bb0:	subs	r0, r0, r2
   12bb4:	sbcs	r1, r1, r3
   12bb8:	bcs	12bec <__assert_fail@plt+0x190c>
   12bbc:	b	12bc0 <__assert_fail@plt+0x18e0>
   12bc0:	b	12bc4 <__assert_fail@plt+0x18e4>
   12bc4:	movw	r0, #53802	; 0xd22a
   12bc8:	movt	r0, #1
   12bcc:	bl	111b4 <gettext@plt>
   12bd0:	movw	r1, #0
   12bd4:	str	r0, [sp, #76]	; 0x4c
   12bd8:	mov	r0, r1
   12bdc:	ldr	r2, [sp, #76]	; 0x4c
   12be0:	bl	11154 <error@plt>
   12be4:	movw	r0, #1
   12be8:	bl	113dc <__assert_fail@plt+0xfc>
   12bec:	ldr	r0, [fp, #-16]
   12bf0:	ldr	r1, [fp, #-12]
   12bf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12bf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   12bfc:	bl	13234 <__assert_fail@plt+0x1f54>
   12c00:	mov	r0, #0
   12c04:	str	r0, [fp, #-20]	; 0xffffffec
   12c08:	str	r0, [fp, #-24]	; 0xffffffe8
   12c0c:	b	12ca8 <__assert_fail@plt+0x19c8>
   12c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c14:	ldr	r1, [fp, #-20]	; 0xffffffec
   12c18:	orr	r0, r0, r1
   12c1c:	cmp	r0, #0
   12c20:	bne	12c80 <__assert_fail@plt+0x19a0>
   12c24:	b	12c28 <__assert_fail@plt+0x1948>
   12c28:	b	12c2c <__assert_fail@plt+0x194c>
   12c2c:	ldr	r0, [fp, #-8]
   12c30:	and	r0, r0, #4
   12c34:	cmp	r0, #0
   12c38:	beq	12c50 <__assert_fail@plt+0x1970>
   12c3c:	movw	r0, #53696	; 0xd1c0
   12c40:	movt	r0, #1
   12c44:	bl	111b4 <gettext@plt>
   12c48:	str	r0, [sp, #72]	; 0x48
   12c4c:	b	12c60 <__assert_fail@plt+0x1980>
   12c50:	movw	r0, #53741	; 0xd1ed
   12c54:	movt	r0, #1
   12c58:	bl	111b4 <gettext@plt>
   12c5c:	str	r0, [sp, #72]	; 0x48
   12c60:	ldr	r0, [sp, #72]	; 0x48
   12c64:	movw	r1, #0
   12c68:	str	r0, [sp, #68]	; 0x44
   12c6c:	mov	r0, r1
   12c70:	ldr	r2, [sp, #68]	; 0x44
   12c74:	bl	11154 <error@plt>
   12c78:	movw	r0, #1
   12c7c:	bl	113dc <__assert_fail@plt+0xfc>
   12c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c84:	ldr	r1, [fp, #-20]	; 0xffffffec
   12c88:	str	r0, [sp, #64]	; 0x40
   12c8c:	str	r1, [sp, #60]	; 0x3c
   12c90:	ldr	r2, [sp, #64]	; 0x40
   12c94:	ldr	r3, [sp, #60]	; 0x3c
   12c98:	bl	13234 <__assert_fail@plt+0x1f54>
   12c9c:	mov	r0, #0
   12ca0:	str	r0, [fp, #-20]	; 0xffffffec
   12ca4:	str	r0, [fp, #-24]	; 0xffffffe8
   12ca8:	ldr	r0, [fp, #-4]
   12cac:	ldrb	r0, [r0]
   12cb0:	cmp	r0, #0
   12cb4:	bne	12cbc <__assert_fail@plt+0x19dc>
   12cb8:	b	12f40 <__assert_fail@plt+0x1c60>
   12cbc:	ldr	r0, [fp, #-4]
   12cc0:	add	r0, r0, #1
   12cc4:	str	r0, [fp, #-4]
   12cc8:	movw	r0, #0
   12ccc:	strb	r0, [fp, #-25]	; 0xffffffe7
   12cd0:	strb	r0, [fp, #-26]	; 0xffffffe6
   12cd4:	b	12f38 <__assert_fail@plt+0x1c58>
   12cd8:	ldr	r0, [fp, #-4]
   12cdc:	ldrb	r0, [r0]
   12ce0:	sub	r0, r0, #48	; 0x30
   12ce4:	cmp	r0, #9
   12ce8:	bhi	12ecc <__assert_fail@plt+0x1bec>
   12cec:	ldrb	r0, [fp, #-28]	; 0xffffffe4
   12cf0:	tst	r0, #1
   12cf4:	beq	12d10 <__assert_fail@plt+0x1a30>
   12cf8:	movw	r0, #57748	; 0xe194
   12cfc:	movt	r0, #2
   12d00:	ldr	r0, [r0]
   12d04:	movw	r1, #0
   12d08:	cmp	r0, r1
   12d0c:	bne	12d20 <__assert_fail@plt+0x1a40>
   12d10:	ldr	r0, [fp, #-4]
   12d14:	movw	r1, #57748	; 0xe194
   12d18:	movt	r1, #2
   12d1c:	str	r0, [r1]
   12d20:	movw	r0, #1
   12d24:	strb	r0, [fp, #-28]	; 0xffffffe4
   12d28:	ldrb	r0, [fp, #-27]	; 0xffffffe5
   12d2c:	tst	r0, #1
   12d30:	beq	12d40 <__assert_fail@plt+0x1a60>
   12d34:	movw	r0, #1
   12d38:	strb	r0, [fp, #-26]	; 0xffffffe6
   12d3c:	b	12d48 <__assert_fail@plt+0x1a68>
   12d40:	movw	r0, #1
   12d44:	strb	r0, [fp, #-25]	; 0xffffffe7
   12d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d50:	movw	r2, #39321	; 0x9999
   12d54:	movt	r2, #39321	; 0x9999
   12d58:	subs	r0, r2, r0
   12d5c:	movw	r2, #39321	; 0x9999
   12d60:	movt	r2, #6553	; 0x1999
   12d64:	sbcs	r1, r2, r1
   12d68:	bcc	12dac <__assert_fail@plt+0x1acc>
   12d6c:	b	12d70 <__assert_fail@plt+0x1a90>
   12d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d74:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d78:	mov	r2, #10
   12d7c:	umull	r2, r3, r0, r2
   12d80:	add	ip, r1, r1, lsl #2
   12d84:	add	r3, r3, ip, lsl #1
   12d88:	ldr	ip, [fp, #-4]
   12d8c:	ldrb	ip, [ip]
   12d90:	sub	ip, ip, #48	; 0x30
   12d94:	adds	r2, r2, ip
   12d98:	adc	r3, r3, ip, asr #31
   12d9c:	subs	r0, r2, r0
   12da0:	sbcs	r1, r3, r1
   12da4:	bcs	12db8 <__assert_fail@plt+0x1ad8>
   12da8:	b	12dac <__assert_fail@plt+0x1acc>
   12dac:	movw	r0, #0
   12db0:	str	r0, [sp, #56]	; 0x38
   12db4:	b	12df4 <__assert_fail@plt+0x1b14>
   12db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12dbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   12dc0:	mov	r2, #10
   12dc4:	umull	r0, r2, r0, r2
   12dc8:	add	r1, r1, r1, lsl #2
   12dcc:	add	r1, r2, r1, lsl #1
   12dd0:	ldr	r2, [fp, #-4]
   12dd4:	ldrb	r2, [r2]
   12dd8:	sub	r2, r2, #48	; 0x30
   12ddc:	adds	r0, r0, r2
   12de0:	adc	r1, r1, r2, asr #31
   12de4:	str	r0, [fp, #-24]	; 0xffffffe8
   12de8:	str	r1, [fp, #-20]	; 0xffffffec
   12dec:	movw	r0, #1
   12df0:	str	r0, [sp, #56]	; 0x38
   12df4:	ldr	r0, [sp, #56]	; 0x38
   12df8:	cmp	r0, #0
   12dfc:	beq	12e18 <__assert_fail@plt+0x1b38>
   12e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e04:	ldr	r1, [fp, #-20]	; 0xffffffec
   12e08:	and	r0, r0, r1
   12e0c:	cmn	r0, #1
   12e10:	bne	12ebc <__assert_fail@plt+0x1bdc>
   12e14:	b	12e18 <__assert_fail@plt+0x1b38>
   12e18:	movw	r0, #57748	; 0xe194
   12e1c:	movt	r0, #2
   12e20:	ldr	r0, [r0]
   12e24:	movw	r1, #53827	; 0xd243
   12e28:	movt	r1, #1
   12e2c:	bl	112d4 <strspn@plt>
   12e30:	str	r0, [fp, #-32]	; 0xffffffe0
   12e34:	movw	r0, #57748	; 0xe194
   12e38:	movt	r0, #2
   12e3c:	ldr	r0, [r0]
   12e40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12e44:	bl	19e30 <__assert_fail@plt+0x8b50>
   12e48:	str	r0, [fp, #-36]	; 0xffffffdc
   12e4c:	ldr	r0, [fp, #-8]
   12e50:	and	r0, r0, #4
   12e54:	cmp	r0, #0
   12e58:	beq	12e70 <__assert_fail@plt+0x1b90>
   12e5c:	movw	r0, #53838	; 0xd24e
   12e60:	movt	r0, #1
   12e64:	bl	111b4 <gettext@plt>
   12e68:	str	r0, [sp, #52]	; 0x34
   12e6c:	b	12e80 <__assert_fail@plt+0x1ba0>
   12e70:	movw	r0, #53876	; 0xd274
   12e74:	movt	r0, #1
   12e78:	bl	111b4 <gettext@plt>
   12e7c:	str	r0, [sp, #52]	; 0x34
   12e80:	ldr	r0, [sp, #52]	; 0x34
   12e84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12e88:	str	r0, [sp, #48]	; 0x30
   12e8c:	mov	r0, r1
   12e90:	bl	16784 <__assert_fail@plt+0x54a4>
   12e94:	movw	r1, #0
   12e98:	str	r0, [sp, #44]	; 0x2c
   12e9c:	mov	r0, r1
   12ea0:	ldr	r2, [sp, #48]	; 0x30
   12ea4:	ldr	r3, [sp, #44]	; 0x2c
   12ea8:	bl	11154 <error@plt>
   12eac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12eb0:	bl	138b0 <__assert_fail@plt+0x25d0>
   12eb4:	movw	r0, #1
   12eb8:	bl	113dc <__assert_fail@plt+0xfc>
   12ebc:	ldr	r0, [fp, #-4]
   12ec0:	add	r0, r0, #1
   12ec4:	str	r0, [fp, #-4]
   12ec8:	b	12f34 <__assert_fail@plt+0x1c54>
   12ecc:	ldr	r0, [fp, #-8]
   12ed0:	and	r0, r0, #4
   12ed4:	cmp	r0, #0
   12ed8:	beq	12ef0 <__assert_fail@plt+0x1c10>
   12edc:	movw	r0, #53905	; 0xd291
   12ee0:	movt	r0, #1
   12ee4:	bl	111b4 <gettext@plt>
   12ee8:	str	r0, [sp, #40]	; 0x28
   12eec:	b	12f00 <__assert_fail@plt+0x1c20>
   12ef0:	movw	r0, #53940	; 0xd2b4
   12ef4:	movt	r0, #1
   12ef8:	bl	111b4 <gettext@plt>
   12efc:	str	r0, [sp, #40]	; 0x28
   12f00:	ldr	r0, [sp, #40]	; 0x28
   12f04:	ldr	r1, [fp, #-4]
   12f08:	str	r0, [sp, #36]	; 0x24
   12f0c:	mov	r0, r1
   12f10:	bl	16784 <__assert_fail@plt+0x54a4>
   12f14:	movw	r1, #0
   12f18:	str	r0, [sp, #32]
   12f1c:	mov	r0, r1
   12f20:	ldr	r2, [sp, #36]	; 0x24
   12f24:	ldr	r3, [sp, #32]
   12f28:	bl	11154 <error@plt>
   12f2c:	movw	r0, #1
   12f30:	bl	113dc <__assert_fail@plt+0xfc>
   12f34:	b	12f38 <__assert_fail@plt+0x1c58>
   12f38:	b	12f3c <__assert_fail@plt+0x1c5c>
   12f3c:	b	12938 <__assert_fail@plt+0x1658>
   12f40:	movw	r0, #58080	; 0xe2e0
   12f44:	movt	r0, #2
   12f48:	ldr	r0, [r0]
   12f4c:	cmp	r0, #0
   12f50:	bne	12fac <__assert_fail@plt+0x1ccc>
   12f54:	b	12f58 <__assert_fail@plt+0x1c78>
   12f58:	ldr	r0, [fp, #-8]
   12f5c:	and	r0, r0, #4
   12f60:	cmp	r0, #0
   12f64:	beq	12f7c <__assert_fail@plt+0x1c9c>
   12f68:	movw	r0, #53963	; 0xd2cb
   12f6c:	movt	r0, #1
   12f70:	bl	111b4 <gettext@plt>
   12f74:	str	r0, [sp, #28]
   12f78:	b	12f8c <__assert_fail@plt+0x1cac>
   12f7c:	movw	r0, #54004	; 0xd2f4
   12f80:	movt	r0, #1
   12f84:	bl	111b4 <gettext@plt>
   12f88:	str	r0, [sp, #28]
   12f8c:	ldr	r0, [sp, #28]
   12f90:	movw	r1, #0
   12f94:	str	r0, [sp, #24]
   12f98:	mov	r0, r1
   12f9c:	ldr	r2, [sp, #24]
   12fa0:	bl	11154 <error@plt>
   12fa4:	movw	r0, #1
   12fa8:	bl	113dc <__assert_fail@plt+0xfc>
   12fac:	movw	r0, #58076	; 0xe2dc
   12fb0:	movt	r0, #2
   12fb4:	ldr	r0, [r0]
   12fb8:	movw	r1, #58080	; 0xe2e0
   12fbc:	movt	r1, #2
   12fc0:	ldr	r1, [r1]
   12fc4:	movw	r2, #16
   12fc8:	movw	r3, #13048	; 0x32f8
   12fcc:	movt	r3, #1
   12fd0:	bl	11280 <qsort@plt>
   12fd4:	movw	r0, #0
   12fd8:	str	r0, [fp, #-40]	; 0xffffffd8
   12fdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fe0:	movw	r1, #58080	; 0xe2e0
   12fe4:	movt	r1, #2
   12fe8:	ldr	r1, [r1]
   12fec:	cmp	r0, r1
   12ff0:	bcs	13190 <__assert_fail@plt+0x1eb0>
   12ff4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12ff8:	add	r0, r0, #1
   12ffc:	str	r0, [fp, #-44]	; 0xffffffd4
   13000:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13004:	movw	r1, #58080	; 0xe2e0
   13008:	movt	r1, #2
   1300c:	ldr	r1, [r1]
   13010:	cmp	r0, r1
   13014:	bcs	1317c <__assert_fail@plt+0x1e9c>
   13018:	movw	r0, #58076	; 0xe2dc
   1301c:	movt	r0, #2
   13020:	ldr	r0, [r0]
   13024:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13028:	mov	r2, r0
   1302c:	ldr	r1, [r2, r1, lsl #4]!
   13030:	ldr	r2, [r2, #4]
   13034:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13038:	add	r0, r0, r3, lsl #4
   1303c:	ldr	r3, [r0, #8]
   13040:	ldr	r0, [r0, #12]
   13044:	subs	r1, r3, r1
   13048:	sbcs	r0, r0, r2
   1304c:	bcc	13164 <__assert_fail@plt+0x1e84>
   13050:	b	13054 <__assert_fail@plt+0x1d74>
   13054:	movw	r0, #58076	; 0xe2dc
   13058:	movt	r0, #2
   1305c:	ldr	r0, [r0]
   13060:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13064:	add	r1, r0, r1, lsl #4
   13068:	ldr	r2, [r1, #8]
   1306c:	ldr	r1, [r1, #12]
   13070:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13074:	add	r0, r0, r3, lsl #4
   13078:	ldr	r3, [r0, #8]
   1307c:	ldr	r0, [r0, #12]
   13080:	subs	r2, r3, r2
   13084:	sbcs	r0, r0, r1
   13088:	bcs	130b8 <__assert_fail@plt+0x1dd8>
   1308c:	b	13090 <__assert_fail@plt+0x1db0>
   13090:	movw	r0, #58076	; 0xe2dc
   13094:	movt	r0, #2
   13098:	ldr	r0, [r0]
   1309c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   130a0:	add	r0, r0, r1, lsl #4
   130a4:	ldr	r1, [r0, #8]
   130a8:	ldr	r0, [r0, #12]
   130ac:	str	r1, [sp, #20]
   130b0:	str	r0, [sp, #16]
   130b4:	b	130e0 <__assert_fail@plt+0x1e00>
   130b8:	movw	r0, #58076	; 0xe2dc
   130bc:	movt	r0, #2
   130c0:	ldr	r0, [r0]
   130c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   130c8:	add	r0, r0, r1, lsl #4
   130cc:	ldr	r1, [r0, #8]
   130d0:	ldr	r0, [r0, #12]
   130d4:	str	r1, [sp, #20]
   130d8:	str	r0, [sp, #16]
   130dc:	b	130e0 <__assert_fail@plt+0x1e00>
   130e0:	ldr	r0, [sp, #16]
   130e4:	ldr	r1, [sp, #20]
   130e8:	movw	r2, #58076	; 0xe2dc
   130ec:	movt	r2, #2
   130f0:	ldr	r3, [r2]
   130f4:	ldr	ip, [fp, #-40]	; 0xffffffd8
   130f8:	add	r3, r3, ip, lsl #4
   130fc:	str	r0, [r3, #12]
   13100:	str	r1, [r3, #8]
   13104:	ldr	r0, [r2]
   13108:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1310c:	add	r0, r0, r1, lsl #4
   13110:	add	r2, r0, #16
   13114:	movw	r3, #58080	; 0xe2e0
   13118:	movt	r3, #2
   1311c:	ldr	r3, [r3]
   13120:	mvn	r1, r1
   13124:	add	r1, r1, r3
   13128:	lsl	r1, r1, #4
   1312c:	str	r1, [sp, #12]
   13130:	mov	r1, r2
   13134:	ldr	r2, [sp, #12]
   13138:	bl	1107c <memmove@plt>
   1313c:	movw	r0, #58080	; 0xe2e0
   13140:	movt	r0, #2
   13144:	ldr	r1, [r0]
   13148:	mvn	r2, #0
   1314c:	add	r1, r1, r2
   13150:	str	r1, [r0]
   13154:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13158:	add	r0, r0, r2
   1315c:	str	r0, [fp, #-44]	; 0xffffffd4
   13160:	b	13168 <__assert_fail@plt+0x1e88>
   13164:	b	1317c <__assert_fail@plt+0x1e9c>
   13168:	b	1316c <__assert_fail@plt+0x1e8c>
   1316c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13170:	add	r0, r0, #1
   13174:	str	r0, [fp, #-44]	; 0xffffffd4
   13178:	b	13000 <__assert_fail@plt+0x1d20>
   1317c:	b	13180 <__assert_fail@plt+0x1ea0>
   13180:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13184:	add	r0, r0, #1
   13188:	str	r0, [fp, #-40]	; 0xffffffd8
   1318c:	b	12fdc <__assert_fail@plt+0x1cfc>
   13190:	ldr	r0, [fp, #-8]
   13194:	and	r0, r0, #2
   13198:	cmp	r0, #0
   1319c:	beq	131a4 <__assert_fail@plt+0x1ec4>
   131a0:	bl	13360 <__assert_fail@plt+0x2080>
   131a4:	movw	r0, #58080	; 0xe2e0
   131a8:	movt	r0, #2
   131ac:	ldr	r1, [r0]
   131b0:	add	r1, r1, #1
   131b4:	str	r1, [r0]
   131b8:	movw	r1, #58076	; 0xe2dc
   131bc:	movt	r1, #2
   131c0:	ldr	r2, [r1]
   131c4:	ldr	r3, [r0]
   131c8:	lsl	r3, r3, #4
   131cc:	str	r0, [sp, #8]
   131d0:	mov	r0, r2
   131d4:	str	r1, [sp, #4]
   131d8:	mov	r1, r3
   131dc:	bl	17220 <__assert_fail@plt+0x5f40>
   131e0:	ldr	r1, [sp, #4]
   131e4:	str	r0, [r1]
   131e8:	ldr	r0, [r1]
   131ec:	ldr	r2, [sp, #8]
   131f0:	ldr	r3, [r2]
   131f4:	add	r0, r0, r3, lsl #4
   131f8:	mvn	r3, #0
   131fc:	str	r3, [r0, #-4]
   13200:	str	r3, [r0, #-8]
   13204:	ldr	r0, [r1]
   13208:	ldr	ip, [r2]
   1320c:	add	r0, r0, ip, lsl #4
   13210:	str	r3, [r0, #-12]
   13214:	str	r3, [r0, #-16]
   13218:	mov	sp, fp
   1321c:	pop	{fp, pc}
   13220:	sub	sp, sp, #4
   13224:	strb	r0, [sp, #3]
   13228:	ldrb	r0, [sp, #3]
   1322c:	add	sp, sp, #4
   13230:	bx	lr
   13234:	push	{fp, lr}
   13238:	mov	fp, sp
   1323c:	sub	sp, sp, #16
   13240:	str	r0, [sp, #8]
   13244:	str	r1, [sp, #12]
   13248:	str	r3, [sp, #4]
   1324c:	str	r2, [sp]
   13250:	movw	r0, #58080	; 0xe2e0
   13254:	movt	r0, #2
   13258:	ldr	r0, [r0]
   1325c:	movw	r1, #57752	; 0xe198
   13260:	movt	r1, #2
   13264:	ldr	r1, [r1]
   13268:	cmp	r0, r1
   1326c:	bne	13298 <__assert_fail@plt+0x1fb8>
   13270:	movw	r0, #58076	; 0xe2dc
   13274:	movt	r0, #2
   13278:	ldr	r0, [r0]
   1327c:	movw	r1, #57752	; 0xe198
   13280:	movt	r1, #2
   13284:	movw	r2, #16
   13288:	bl	17364 <__assert_fail@plt+0x6084>
   1328c:	movw	r1, #58076	; 0xe2dc
   13290:	movt	r1, #2
   13294:	str	r0, [r1]
   13298:	ldr	r0, [sp, #8]
   1329c:	ldr	r1, [sp, #12]
   132a0:	movw	r2, #58076	; 0xe2dc
   132a4:	movt	r2, #2
   132a8:	ldr	r3, [r2]
   132ac:	movw	ip, #58080	; 0xe2e0
   132b0:	movt	ip, #2
   132b4:	ldr	lr, [ip]
   132b8:	str	r0, [r3, lr, lsl #4]!
   132bc:	str	r1, [r3, #4]
   132c0:	ldr	r0, [sp]
   132c4:	ldr	r1, [sp, #4]
   132c8:	ldr	r2, [r2]
   132cc:	ldr	r3, [ip]
   132d0:	add	r2, r2, r3, lsl #4
   132d4:	str	r1, [r2, #12]
   132d8:	str	r0, [r2, #8]
   132dc:	movw	r0, #58080	; 0xe2e0
   132e0:	movt	r0, #2
   132e4:	ldr	r1, [r0]
   132e8:	add	r1, r1, #1
   132ec:	str	r1, [r0]
   132f0:	mov	sp, fp
   132f4:	pop	{fp, pc}
   132f8:	sub	sp, sp, #20
   132fc:	str	r0, [sp, #16]
   13300:	str	r1, [sp, #12]
   13304:	ldr	r0, [sp, #16]
   13308:	ldr	r0, [r0]
   1330c:	str	r0, [sp, #8]
   13310:	ldr	r0, [sp, #12]
   13314:	ldr	r0, [r0]
   13318:	str	r0, [sp, #4]
   1331c:	ldr	r0, [sp, #8]
   13320:	ldr	r1, [sp, #4]
   13324:	cmp	r0, r1
   13328:	bge	13338 <__assert_fail@plt+0x2058>
   1332c:	mvn	r0, #0
   13330:	str	r0, [sp]
   13334:	b	13354 <__assert_fail@plt+0x2074>
   13338:	ldr	r0, [sp, #8]
   1333c:	ldr	r1, [sp, #4]
   13340:	cmp	r0, r1
   13344:	movw	r0, #0
   13348:	movgt	r0, #1
   1334c:	and	r0, r0, #1
   13350:	str	r0, [sp]
   13354:	ldr	r0, [sp]
   13358:	add	sp, sp, #20
   1335c:	bx	lr
   13360:	push	{fp, lr}
   13364:	mov	fp, sp
   13368:	sub	sp, sp, #32
   1336c:	movw	r0, #58076	; 0xe2dc
   13370:	movt	r0, #2
   13374:	ldr	r1, [r0]
   13378:	str	r1, [fp, #-4]
   1337c:	movw	r1, #58080	; 0xe2e0
   13380:	movt	r1, #2
   13384:	ldr	r2, [r1]
   13388:	str	r2, [fp, #-8]
   1338c:	mov	r2, #0
   13390:	str	r2, [r0]
   13394:	str	r2, [r1]
   13398:	movw	r0, #57752	; 0xe198
   1339c:	movt	r0, #2
   133a0:	str	r2, [r0]
   133a4:	ldr	r0, [fp, #-4]
   133a8:	ldr	r1, [r0]
   133ac:	ldr	r0, [r0, #4]
   133b0:	subs	r1, r1, #2
   133b4:	sbcs	r0, r0, #0
   133b8:	bcc	133e0 <__assert_fail@plt+0x2100>
   133bc:	b	133c0 <__assert_fail@plt+0x20e0>
   133c0:	ldr	r0, [fp, #-4]
   133c4:	ldr	r1, [r0]
   133c8:	ldr	r0, [r0, #4]
   133cc:	subs	r2, r1, #1
   133d0:	sbc	r3, r0, #0
   133d4:	mov	r0, #1
   133d8:	mov	r1, #0
   133dc:	bl	13234 <__assert_fail@plt+0x1f54>
   133e0:	movw	r0, #1
   133e4:	str	r0, [fp, #-12]
   133e8:	ldr	r0, [fp, #-12]
   133ec:	ldr	r1, [fp, #-8]
   133f0:	cmp	r0, r1
   133f4:	bcs	13488 <__assert_fail@plt+0x21a8>
   133f8:	ldr	r0, [fp, #-4]
   133fc:	ldr	r1, [fp, #-12]
   13400:	ldr	r1, [r0, r1, lsl #4]!
   13404:	ldr	r2, [r0, #-8]
   13408:	ldr	r3, [r0, #-4]
   1340c:	ldr	r0, [r0, #4]
   13410:	adds	r2, r2, #1
   13414:	adc	r3, r3, #0
   13418:	eor	r1, r2, r1
   1341c:	eor	r0, r3, r0
   13420:	orr	r0, r1, r0
   13424:	cmp	r0, #0
   13428:	bne	13434 <__assert_fail@plt+0x2154>
   1342c:	b	13430 <__assert_fail@plt+0x2150>
   13430:	b	13478 <__assert_fail@plt+0x2198>
   13434:	ldr	r0, [fp, #-4]
   13438:	ldr	r1, [fp, #-12]
   1343c:	ldr	r1, [r0, r1, lsl #4]!
   13440:	ldr	r2, [r0, #-8]
   13444:	ldr	r3, [r0, #-4]
   13448:	ldr	r0, [r0, #4]
   1344c:	adds	r2, r2, #1
   13450:	adc	r3, r3, #0
   13454:	subs	r1, r1, #1
   13458:	sbc	r0, r0, #0
   1345c:	str	r0, [sp, #16]
   13460:	mov	r0, r2
   13464:	str	r1, [sp, #12]
   13468:	mov	r1, r3
   1346c:	ldr	r2, [sp, #12]
   13470:	ldr	r3, [sp, #16]
   13474:	bl	13234 <__assert_fail@plt+0x1f54>
   13478:	ldr	r0, [fp, #-12]
   1347c:	add	r0, r0, #1
   13480:	str	r0, [fp, #-12]
   13484:	b	133e8 <__assert_fail@plt+0x2108>
   13488:	ldr	r0, [fp, #-4]
   1348c:	ldr	r1, [fp, #-8]
   13490:	add	r0, r0, r1, lsl #4
   13494:	ldr	r1, [r0, #-8]
   13498:	ldr	r0, [r0, #-4]
   1349c:	and	r0, r1, r0
   134a0:	cmn	r0, #1
   134a4:	beq	134e4 <__assert_fail@plt+0x2204>
   134a8:	b	134ac <__assert_fail@plt+0x21cc>
   134ac:	ldr	r0, [fp, #-4]
   134b0:	ldr	r1, [fp, #-8]
   134b4:	add	r0, r0, r1, lsl #4
   134b8:	ldr	r1, [r0, #-8]
   134bc:	ldr	r0, [r0, #-4]
   134c0:	adds	r1, r1, #1
   134c4:	adc	r0, r0, #0
   134c8:	mvn	r2, #0
   134cc:	str	r0, [sp, #8]
   134d0:	mov	r0, r1
   134d4:	ldr	r1, [sp, #8]
   134d8:	str	r2, [sp, #4]
   134dc:	ldr	r3, [sp, #4]
   134e0:	bl	13234 <__assert_fail@plt+0x1f54>
   134e4:	ldr	r0, [fp, #-4]
   134e8:	bl	138b0 <__assert_fail@plt+0x25d0>
   134ec:	mov	sp, fp
   134f0:	pop	{fp, pc}
   134f4:	sub	sp, sp, #4
   134f8:	str	r0, [sp]
   134fc:	ldr	r0, [sp]
   13500:	movw	r1, #57756	; 0xe19c
   13504:	movt	r1, #2
   13508:	str	r0, [r1]
   1350c:	add	sp, sp, #4
   13510:	bx	lr
   13514:	sub	sp, sp, #4
   13518:	and	r0, r0, #1
   1351c:	strb	r0, [sp, #3]
   13520:	ldrb	r0, [sp, #3]
   13524:	and	r0, r0, #1
   13528:	movw	r1, #57760	; 0xe1a0
   1352c:	movt	r1, #2
   13530:	strb	r0, [r1]
   13534:	add	sp, sp, #4
   13538:	bx	lr
   1353c:	push	{fp, lr}
   13540:	mov	fp, sp
   13544:	sub	sp, sp, #24
   13548:	movw	r0, #57708	; 0xe16c
   1354c:	movt	r0, #2
   13550:	ldr	r0, [r0]
   13554:	bl	1a178 <__assert_fail@plt+0x8e98>
   13558:	cmp	r0, #0
   1355c:	beq	1362c <__assert_fail@plt+0x234c>
   13560:	movw	r0, #57760	; 0xe1a0
   13564:	movt	r0, #2
   13568:	ldrb	r0, [r0]
   1356c:	tst	r0, #1
   13570:	beq	13584 <__assert_fail@plt+0x22a4>
   13574:	bl	111e4 <__errno_location@plt>
   13578:	ldr	r0, [r0]
   1357c:	cmp	r0, #32
   13580:	beq	1362c <__assert_fail@plt+0x234c>
   13584:	movw	r0, #54042	; 0xd31a
   13588:	movt	r0, #1
   1358c:	bl	111b4 <gettext@plt>
   13590:	str	r0, [fp, #-4]
   13594:	movw	r0, #57756	; 0xe19c
   13598:	movt	r0, #2
   1359c:	ldr	r0, [r0]
   135a0:	movw	r1, #0
   135a4:	cmp	r0, r1
   135a8:	beq	13600 <__assert_fail@plt+0x2320>
   135ac:	bl	111e4 <__errno_location@plt>
   135b0:	ldr	r1, [r0]
   135b4:	movw	r0, #57756	; 0xe19c
   135b8:	movt	r0, #2
   135bc:	ldr	r0, [r0]
   135c0:	str	r1, [fp, #-8]
   135c4:	bl	164e8 <__assert_fail@plt+0x5208>
   135c8:	ldr	r1, [fp, #-4]
   135cc:	movw	r2, #0
   135d0:	str	r0, [sp, #12]
   135d4:	mov	r0, r2
   135d8:	ldr	r2, [fp, #-8]
   135dc:	str	r1, [sp, #8]
   135e0:	mov	r1, r2
   135e4:	movw	r2, #54054	; 0xd326
   135e8:	movt	r2, #1
   135ec:	ldr	r3, [sp, #12]
   135f0:	ldr	ip, [sp, #8]
   135f4:	str	ip, [sp]
   135f8:	bl	11154 <error@plt>
   135fc:	b	1361c <__assert_fail@plt+0x233c>
   13600:	bl	111e4 <__errno_location@plt>
   13604:	ldr	r1, [r0]
   13608:	ldr	r3, [fp, #-4]
   1360c:	movw	r0, #0
   13610:	movw	r2, #54058	; 0xd32a
   13614:	movt	r2, #1
   13618:	bl	11154 <error@plt>
   1361c:	movw	r0, #57612	; 0xe10c
   13620:	movt	r0, #2
   13624:	ldr	r0, [r0]
   13628:	bl	110a0 <_exit@plt>
   1362c:	movw	r0, #57696	; 0xe160
   13630:	movt	r0, #2
   13634:	ldr	r0, [r0]
   13638:	bl	1a178 <__assert_fail@plt+0x8e98>
   1363c:	cmp	r0, #0
   13640:	beq	13654 <__assert_fail@plt+0x2374>
   13644:	movw	r0, #57612	; 0xe10c
   13648:	movt	r0, #2
   1364c:	ldr	r0, [r0]
   13650:	bl	110a0 <_exit@plt>
   13654:	mov	sp, fp
   13658:	pop	{fp, pc}
   1365c:	push	{r4, r5, fp, lr}
   13660:	add	fp, sp, #8
   13664:	sub	sp, sp, #40	; 0x28
   13668:	ldr	r1, [fp, #12]
   1366c:	ldr	ip, [fp, #8]
   13670:	ldr	lr, [fp, #16]
   13674:	str	r0, [fp, #-12]
   13678:	str	r3, [sp, #28]
   1367c:	str	r2, [sp, #24]
   13680:	str	r1, [sp, #20]
   13684:	str	ip, [sp, #16]
   13688:	ldr	r0, [fp, #-12]
   1368c:	ldr	r2, [sp, #24]
   13690:	ldr	r3, [sp, #28]
   13694:	ldr	r1, [sp, #16]
   13698:	ldr	ip, [sp, #20]
   1369c:	ldr	r4, [fp, #16]
   136a0:	mov	r5, sp
   136a4:	str	r4, [r5, #8]
   136a8:	str	ip, [r5, #4]
   136ac:	str	r1, [r5]
   136b0:	str	lr, [sp, #12]
   136b4:	bl	11058 <posix_fadvise64@plt>
   136b8:	sub	sp, fp, #8
   136bc:	pop	{r4, r5, fp, pc}
   136c0:	push	{fp, lr}
   136c4:	mov	fp, sp
   136c8:	sub	sp, sp, #24
   136cc:	str	r0, [fp, #-4]
   136d0:	str	r1, [fp, #-8]
   136d4:	ldr	r0, [fp, #-4]
   136d8:	movw	r1, #0
   136dc:	cmp	r0, r1
   136e0:	beq	13710 <__assert_fail@plt+0x2430>
   136e4:	ldr	r0, [fp, #-4]
   136e8:	bl	11214 <fileno@plt>
   136ec:	ldr	r1, [fp, #-8]
   136f0:	mov	r2, sp
   136f4:	str	r1, [r2, #8]
   136f8:	mov	r1, #0
   136fc:	str	r1, [r2, #4]
   13700:	str	r1, [r2]
   13704:	mov	r2, r1
   13708:	mov	r3, r1
   1370c:	bl	1365c <__assert_fail@plt+0x237c>
   13710:	mov	sp, fp
   13714:	pop	{fp, pc}
   13718:	push	{fp, lr}
   1371c:	mov	fp, sp
   13720:	sub	sp, sp, #32
   13724:	str	r0, [fp, #-8]
   13728:	movw	r0, #0
   1372c:	str	r0, [fp, #-12]
   13730:	str	r0, [sp, #12]
   13734:	ldr	r0, [fp, #-8]
   13738:	bl	11214 <fileno@plt>
   1373c:	str	r0, [sp, #16]
   13740:	ldr	r0, [sp, #16]
   13744:	cmp	r0, #0
   13748:	bge	1375c <__assert_fail@plt+0x247c>
   1374c:	ldr	r0, [fp, #-8]
   13750:	bl	1122c <fclose@plt>
   13754:	str	r0, [fp, #-4]
   13758:	b	137f8 <__assert_fail@plt+0x2518>
   1375c:	ldr	r0, [fp, #-8]
   13760:	bl	11178 <__freading@plt>
   13764:	cmp	r0, #0
   13768:	beq	137a0 <__assert_fail@plt+0x24c0>
   1376c:	ldr	r0, [fp, #-8]
   13770:	bl	11214 <fileno@plt>
   13774:	mov	r1, sp
   13778:	mov	r2, #1
   1377c:	str	r2, [r1]
   13780:	mov	r1, #0
   13784:	mov	r2, r1
   13788:	mov	r3, r1
   1378c:	bl	1110c <lseek64@plt>
   13790:	and	r0, r0, r1
   13794:	cmn	r0, #1
   13798:	beq	137bc <__assert_fail@plt+0x24dc>
   1379c:	b	137a0 <__assert_fail@plt+0x24c0>
   137a0:	ldr	r0, [fp, #-8]
   137a4:	bl	13804 <__assert_fail@plt+0x2524>
   137a8:	cmp	r0, #0
   137ac:	beq	137bc <__assert_fail@plt+0x24dc>
   137b0:	bl	111e4 <__errno_location@plt>
   137b4:	ldr	r0, [r0]
   137b8:	str	r0, [fp, #-12]
   137bc:	ldr	r0, [fp, #-8]
   137c0:	bl	1122c <fclose@plt>
   137c4:	str	r0, [sp, #12]
   137c8:	ldr	r0, [fp, #-12]
   137cc:	cmp	r0, #0
   137d0:	beq	137f0 <__assert_fail@plt+0x2510>
   137d4:	ldr	r0, [fp, #-12]
   137d8:	str	r0, [sp, #8]
   137dc:	bl	111e4 <__errno_location@plt>
   137e0:	ldr	r1, [sp, #8]
   137e4:	str	r1, [r0]
   137e8:	mvn	r0, #0
   137ec:	str	r0, [sp, #12]
   137f0:	ldr	r0, [sp, #12]
   137f4:	str	r0, [fp, #-4]
   137f8:	ldr	r0, [fp, #-4]
   137fc:	mov	sp, fp
   13800:	pop	{fp, pc}
   13804:	push	{fp, lr}
   13808:	mov	fp, sp
   1380c:	sub	sp, sp, #8
   13810:	str	r0, [sp]
   13814:	ldr	r0, [sp]
   13818:	movw	r1, #0
   1381c:	cmp	r0, r1
   13820:	beq	13834 <__assert_fail@plt+0x2554>
   13824:	ldr	r0, [sp]
   13828:	bl	11178 <__freading@plt>
   1382c:	cmp	r0, #0
   13830:	bne	13844 <__assert_fail@plt+0x2564>
   13834:	ldr	r0, [sp]
   13838:	bl	11070 <fflush@plt>
   1383c:	str	r0, [sp, #4]
   13840:	b	13858 <__assert_fail@plt+0x2578>
   13844:	ldr	r0, [sp]
   13848:	bl	13864 <__assert_fail@plt+0x2584>
   1384c:	ldr	r0, [sp]
   13850:	bl	11070 <fflush@plt>
   13854:	str	r0, [sp, #4]
   13858:	ldr	r0, [sp, #4]
   1385c:	mov	sp, fp
   13860:	pop	{fp, pc}
   13864:	push	{fp, lr}
   13868:	mov	fp, sp
   1386c:	sub	sp, sp, #8
   13870:	str	r0, [sp, #4]
   13874:	ldr	r0, [sp, #4]
   13878:	ldr	r0, [r0]
   1387c:	and	r0, r0, #256	; 0x100
   13880:	cmp	r0, #0
   13884:	beq	138a8 <__assert_fail@plt+0x25c8>
   13888:	ldr	r0, [sp, #4]
   1388c:	mov	r1, sp
   13890:	mov	r2, #1
   13894:	str	r2, [r1]
   13898:	mov	r1, #0
   1389c:	mov	r2, r1
   138a0:	mov	r3, r1
   138a4:	bl	138f0 <__assert_fail@plt+0x2610>
   138a8:	mov	sp, fp
   138ac:	pop	{fp, pc}
   138b0:	push	{fp, lr}
   138b4:	mov	fp, sp
   138b8:	sub	sp, sp, #16
   138bc:	str	r0, [fp, #-4]
   138c0:	bl	111e4 <__errno_location@plt>
   138c4:	ldr	r0, [r0]
   138c8:	str	r0, [sp, #8]
   138cc:	ldr	r0, [fp, #-4]
   138d0:	bl	11088 <free@plt>
   138d4:	ldr	r0, [sp, #8]
   138d8:	str	r0, [sp, #4]
   138dc:	bl	111e4 <__errno_location@plt>
   138e0:	ldr	r1, [sp, #4]
   138e4:	str	r1, [r0]
   138e8:	mov	sp, fp
   138ec:	pop	{fp, pc}
   138f0:	push	{fp, lr}
   138f4:	mov	fp, sp
   138f8:	sub	sp, sp, #32
   138fc:	ldr	r1, [fp, #8]
   13900:	str	r0, [fp, #-8]
   13904:	str	r3, [sp, #20]
   13908:	str	r2, [sp, #16]
   1390c:	ldr	r0, [fp, #-8]
   13910:	ldr	r0, [r0, #8]
   13914:	ldr	r2, [fp, #-8]
   13918:	ldr	r2, [r2, #4]
   1391c:	cmp	r0, r2
   13920:	bne	139cc <__assert_fail@plt+0x26ec>
   13924:	ldr	r0, [fp, #-8]
   13928:	ldr	r0, [r0, #20]
   1392c:	ldr	r1, [fp, #-8]
   13930:	ldr	r1, [r1, #16]
   13934:	cmp	r0, r1
   13938:	bne	139cc <__assert_fail@plt+0x26ec>
   1393c:	ldr	r0, [fp, #-8]
   13940:	ldr	r0, [r0, #36]	; 0x24
   13944:	movw	r1, #0
   13948:	cmp	r0, r1
   1394c:	bne	139cc <__assert_fail@plt+0x26ec>
   13950:	ldr	r0, [fp, #-8]
   13954:	bl	11214 <fileno@plt>
   13958:	ldr	r2, [sp, #16]
   1395c:	ldr	r3, [sp, #20]
   13960:	ldr	r1, [fp, #8]
   13964:	mov	ip, sp
   13968:	str	r1, [ip]
   1396c:	bl	1110c <lseek64@plt>
   13970:	str	r1, [sp, #12]
   13974:	str	r0, [sp, #8]
   13978:	ldr	r0, [sp, #8]
   1397c:	ldr	r1, [sp, #12]
   13980:	and	r0, r0, r1
   13984:	cmn	r0, #1
   13988:	bne	1399c <__assert_fail@plt+0x26bc>
   1398c:	b	13990 <__assert_fail@plt+0x26b0>
   13990:	mvn	r0, #0
   13994:	str	r0, [fp, #-4]
   13998:	b	139ec <__assert_fail@plt+0x270c>
   1399c:	ldr	r0, [fp, #-8]
   139a0:	ldr	r1, [r0]
   139a4:	bic	r1, r1, #16
   139a8:	str	r1, [r0]
   139ac:	ldr	r0, [sp, #8]
   139b0:	ldr	r1, [sp, #12]
   139b4:	ldr	r2, [fp, #-8]
   139b8:	str	r1, [r2, #84]	; 0x54
   139bc:	str	r0, [r2, #80]	; 0x50
   139c0:	movw	r0, #0
   139c4:	str	r0, [fp, #-4]
   139c8:	b	139ec <__assert_fail@plt+0x270c>
   139cc:	ldr	r0, [fp, #-8]
   139d0:	ldr	r2, [sp, #16]
   139d4:	ldr	r3, [sp, #20]
   139d8:	ldr	r1, [fp, #8]
   139dc:	mov	ip, sp
   139e0:	str	r1, [ip]
   139e4:	bl	11238 <fseeko64@plt>
   139e8:	str	r0, [fp, #-4]
   139ec:	ldr	r0, [fp, #-4]
   139f0:	mov	sp, fp
   139f4:	pop	{fp, pc}
   139f8:	push	{r4, sl, fp, lr}
   139fc:	add	fp, sp, #8
   13a00:	sub	sp, sp, #88	; 0x58
   13a04:	ldr	ip, [fp, #16]
   13a08:	ldr	lr, [fp, #12]
   13a0c:	ldr	r4, [fp, #8]
   13a10:	str	r0, [fp, #-16]
   13a14:	str	r1, [fp, #-20]	; 0xffffffec
   13a18:	str	r2, [fp, #-24]	; 0xffffffe8
   13a1c:	str	r3, [fp, #-28]	; 0xffffffe4
   13a20:	mvn	r0, #0
   13a24:	str	r0, [fp, #-40]	; 0xffffffd8
   13a28:	ldr	r0, [fp, #-16]
   13a2c:	ldr	r0, [r0]
   13a30:	str	r0, [fp, #-44]	; 0xffffffd4
   13a34:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a38:	ldr	r0, [r0]
   13a3c:	str	r0, [sp, #48]	; 0x30
   13a40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a44:	movw	r1, #0
   13a48:	cmp	r0, r1
   13a4c:	bne	13aa8 <__assert_fail@plt+0x27c8>
   13a50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13a54:	cmp	r0, #64	; 0x40
   13a58:	bcs	13a68 <__assert_fail@plt+0x2788>
   13a5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13a60:	str	r0, [sp, #8]
   13a64:	b	13a74 <__assert_fail@plt+0x2794>
   13a68:	movw	r0, #64	; 0x40
   13a6c:	str	r0, [sp, #8]
   13a70:	b	13a74 <__assert_fail@plt+0x2794>
   13a74:	ldr	r0, [sp, #8]
   13a78:	str	r0, [sp, #48]	; 0x30
   13a7c:	ldr	r0, [sp, #48]	; 0x30
   13a80:	bl	19fac <__assert_fail@plt+0x8ccc>
   13a84:	str	r0, [fp, #-44]	; 0xffffffd4
   13a88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a8c:	movw	r1, #0
   13a90:	cmp	r0, r1
   13a94:	bne	13aa4 <__assert_fail@plt+0x27c4>
   13a98:	mvn	r0, #0
   13a9c:	str	r0, [fp, #-12]
   13aa0:	b	13ea4 <__assert_fail@plt+0x2bc4>
   13aa4:	b	13aa8 <__assert_fail@plt+0x27c8>
   13aa8:	ldr	r0, [sp, #48]	; 0x30
   13aac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13ab0:	cmp	r0, r1
   13ab4:	bcs	13abc <__assert_fail@plt+0x27dc>
   13ab8:	b	13e60 <__assert_fail@plt+0x2b80>
   13abc:	ldr	r0, [sp, #48]	; 0x30
   13ac0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13ac4:	sub	r0, r0, r1
   13ac8:	str	r0, [fp, #-32]	; 0xffffffe0
   13acc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ad0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13ad4:	add	r0, r0, r1
   13ad8:	str	r0, [fp, #-36]	; 0xffffffdc
   13adc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ae0:	cmp	r0, #0
   13ae4:	bne	13afc <__assert_fail@plt+0x281c>
   13ae8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13aec:	ldr	r1, [sp, #48]	; 0x30
   13af0:	cmp	r0, r1
   13af4:	bhi	13afc <__assert_fail@plt+0x281c>
   13af8:	b	13e60 <__assert_fail@plt+0x2b80>
   13afc:	ldr	r0, [fp, #8]
   13b00:	cmn	r0, #1
   13b04:	bne	13b14 <__assert_fail@plt+0x2834>
   13b08:	ldr	r0, [fp, #12]
   13b0c:	str	r0, [fp, #8]
   13b10:	b	13b2c <__assert_fail@plt+0x284c>
   13b14:	ldr	r0, [fp, #12]
   13b18:	cmn	r0, #1
   13b1c:	bne	13b28 <__assert_fail@plt+0x2848>
   13b20:	ldr	r0, [fp, #8]
   13b24:	str	r0, [fp, #12]
   13b28:	b	13b2c <__assert_fail@plt+0x284c>
   13b2c:	movw	r0, #0
   13b30:	strb	r0, [sp, #47]	; 0x2f
   13b34:	ldr	r0, [fp, #16]
   13b38:	add	r1, sp, #32
   13b3c:	bl	1a248 <__assert_fail@plt+0x8f68>
   13b40:	str	r0, [sp, #36]	; 0x24
   13b44:	ldr	r0, [sp, #36]	; 0x24
   13b48:	movw	r1, #0
   13b4c:	cmp	r0, r1
   13b50:	beq	13bac <__assert_fail@plt+0x28cc>
   13b54:	ldr	r0, [fp, #8]
   13b58:	cmn	r0, #1
   13b5c:	beq	13ba8 <__assert_fail@plt+0x28c8>
   13b60:	ldr	r0, [sp, #36]	; 0x24
   13b64:	ldr	r1, [fp, #8]
   13b68:	ldr	r2, [fp, #12]
   13b6c:	ldr	r3, [sp, #32]
   13b70:	bl	13eb4 <__assert_fail@plt+0x2bd4>
   13b74:	str	r0, [sp, #28]
   13b78:	ldr	r0, [sp, #28]
   13b7c:	movw	r1, #0
   13b80:	cmp	r0, r1
   13b84:	beq	13ba4 <__assert_fail@plt+0x28c4>
   13b88:	ldr	r0, [sp, #28]
   13b8c:	ldr	r1, [sp, #36]	; 0x24
   13b90:	sub	r0, r0, r1
   13b94:	add	r0, r0, #1
   13b98:	str	r0, [sp, #32]
   13b9c:	movw	r0, #1
   13ba0:	strb	r0, [sp, #47]	; 0x2f
   13ba4:	b	13ba8 <__assert_fail@plt+0x28c8>
   13ba8:	b	13c0c <__assert_fail@plt+0x292c>
   13bac:	ldr	r0, [fp, #16]
   13bb0:	bl	110dc <getc_unlocked@plt>
   13bb4:	str	r0, [sp, #40]	; 0x28
   13bb8:	ldr	r0, [sp, #40]	; 0x28
   13bbc:	cmn	r0, #1
   13bc0:	bne	13bdc <__assert_fail@plt+0x28fc>
   13bc4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13bc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13bcc:	cmp	r0, r1
   13bd0:	bne	13bd8 <__assert_fail@plt+0x28f8>
   13bd4:	b	13e5c <__assert_fail@plt+0x2b7c>
   13bd8:	b	13e38 <__assert_fail@plt+0x2b58>
   13bdc:	ldr	r0, [sp, #40]	; 0x28
   13be0:	ldr	r1, [fp, #8]
   13be4:	cmp	r0, r1
   13be8:	beq	13bfc <__assert_fail@plt+0x291c>
   13bec:	ldr	r0, [sp, #40]	; 0x28
   13bf0:	ldr	r1, [fp, #12]
   13bf4:	cmp	r0, r1
   13bf8:	bne	13c04 <__assert_fail@plt+0x2924>
   13bfc:	movw	r0, #1
   13c00:	strb	r0, [sp, #47]	; 0x2f
   13c04:	movw	r0, #1
   13c08:	str	r0, [sp, #32]
   13c0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c10:	ldr	r1, [sp, #32]
   13c14:	add	r1, r1, #1
   13c18:	cmp	r0, r1
   13c1c:	bcs	13d74 <__assert_fail@plt+0x2a94>
   13c20:	ldr	r0, [sp, #48]	; 0x30
   13c24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c28:	cmp	r0, r1
   13c2c:	bcs	13d74 <__assert_fail@plt+0x2a94>
   13c30:	ldr	r0, [sp, #48]	; 0x30
   13c34:	cmp	r0, #64	; 0x40
   13c38:	bcs	13c4c <__assert_fail@plt+0x296c>
   13c3c:	ldr	r0, [sp, #48]	; 0x30
   13c40:	add	r0, r0, #64	; 0x40
   13c44:	str	r0, [sp, #4]
   13c48:	b	13c58 <__assert_fail@plt+0x2978>
   13c4c:	ldr	r0, [sp, #48]	; 0x30
   13c50:	lsl	r0, r0, #1
   13c54:	str	r0, [sp, #4]
   13c58:	ldr	r0, [sp, #4]
   13c5c:	str	r0, [sp, #24]
   13c60:	ldr	r0, [sp, #24]
   13c64:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13c68:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13c6c:	sub	r1, r1, r2
   13c70:	sub	r0, r0, r1
   13c74:	ldr	r1, [sp, #32]
   13c78:	add	r1, r1, #1
   13c7c:	cmp	r0, r1
   13c80:	bcs	13ca0 <__assert_fail@plt+0x29c0>
   13c84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13c88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c8c:	sub	r0, r0, r1
   13c90:	ldr	r1, [sp, #32]
   13c94:	add	r0, r0, r1
   13c98:	add	r0, r0, #1
   13c9c:	str	r0, [sp, #24]
   13ca0:	ldr	r0, [sp, #48]	; 0x30
   13ca4:	ldr	r1, [sp, #24]
   13ca8:	cmp	r0, r1
   13cac:	bcs	13cc0 <__assert_fail@plt+0x29e0>
   13cb0:	ldr	r0, [sp, #24]
   13cb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cb8:	cmp	r0, r1
   13cbc:	bls	13cc8 <__assert_fail@plt+0x29e8>
   13cc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13cc4:	str	r0, [sp, #24]
   13cc8:	ldr	r0, [pc, #480]	; 13eb0 <__assert_fail@plt+0x2bd0>
   13ccc:	ldr	r1, [sp, #24]
   13cd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13cd4:	sub	r1, r1, r2
   13cd8:	cmp	r0, r1
   13cdc:	bcs	13d10 <__assert_fail@plt+0x2a30>
   13ce0:	ldr	r0, [pc, #456]	; 13eb0 <__assert_fail@plt+0x2bd0>
   13ce4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13ce8:	add	r0, r1, r0
   13cec:	add	r0, r0, #1
   13cf0:	str	r0, [sp, #16]
   13cf4:	ldr	r0, [sp, #48]	; 0x30
   13cf8:	ldr	r1, [sp, #16]
   13cfc:	cmp	r0, r1
   13d00:	bne	13d08 <__assert_fail@plt+0x2a28>
   13d04:	b	13e5c <__assert_fail@plt+0x2b7c>
   13d08:	ldr	r0, [sp, #16]
   13d0c:	str	r0, [sp, #24]
   13d10:	ldr	r0, [sp, #24]
   13d14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13d18:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13d1c:	sub	r1, r1, r2
   13d20:	sub	r0, r0, r1
   13d24:	str	r0, [fp, #-32]	; 0xffffffe0
   13d28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d2c:	ldr	r1, [sp, #24]
   13d30:	bl	1a01c <__assert_fail@plt+0x8d3c>
   13d34:	str	r0, [sp, #20]
   13d38:	ldr	r0, [sp, #20]
   13d3c:	movw	r1, #0
   13d40:	cmp	r0, r1
   13d44:	bne	13d4c <__assert_fail@plt+0x2a6c>
   13d48:	b	13e5c <__assert_fail@plt+0x2b7c>
   13d4c:	ldr	r0, [sp, #20]
   13d50:	str	r0, [fp, #-44]	; 0xffffffd4
   13d54:	ldr	r0, [sp, #24]
   13d58:	str	r0, [sp, #48]	; 0x30
   13d5c:	ldr	r0, [sp, #48]	; 0x30
   13d60:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13d64:	sub	r0, r0, r1
   13d68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d6c:	add	r0, r1, r0
   13d70:	str	r0, [fp, #-36]	; 0xffffffdc
   13d74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d78:	movw	r1, #1
   13d7c:	cmp	r1, r0
   13d80:	bcs	13df8 <__assert_fail@plt+0x2b18>
   13d84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d88:	sub	r0, r0, #1
   13d8c:	str	r0, [sp, #12]
   13d90:	ldr	r0, [sp, #32]
   13d94:	ldr	r1, [sp, #12]
   13d98:	cmp	r0, r1
   13d9c:	bcs	13da8 <__assert_fail@plt+0x2ac8>
   13da0:	ldr	r0, [sp, #32]
   13da4:	str	r0, [sp, #12]
   13da8:	ldr	r0, [sp, #36]	; 0x24
   13dac:	movw	r1, #0
   13db0:	cmp	r0, r1
   13db4:	beq	13dcc <__assert_fail@plt+0x2aec>
   13db8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13dbc:	ldr	r1, [sp, #36]	; 0x24
   13dc0:	ldr	r2, [sp, #12]
   13dc4:	bl	110ac <memcpy@plt>
   13dc8:	b	13dd8 <__assert_fail@plt+0x2af8>
   13dcc:	ldr	r0, [sp, #40]	; 0x28
   13dd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13dd4:	strb	r0, [r1]
   13dd8:	ldr	r0, [sp, #12]
   13ddc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13de0:	add	r0, r1, r0
   13de4:	str	r0, [fp, #-36]	; 0xffffffdc
   13de8:	ldr	r0, [sp, #12]
   13dec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13df0:	sub	r0, r1, r0
   13df4:	str	r0, [fp, #-32]	; 0xffffffe0
   13df8:	ldr	r0, [sp, #36]	; 0x24
   13dfc:	movw	r1, #0
   13e00:	cmp	r0, r1
   13e04:	beq	13e20 <__assert_fail@plt+0x2b40>
   13e08:	ldr	r0, [fp, #16]
   13e0c:	ldr	r1, [sp, #32]
   13e10:	bl	1a2cc <__assert_fail@plt+0x8fec>
   13e14:	cmp	r0, #0
   13e18:	beq	13e20 <__assert_fail@plt+0x2b40>
   13e1c:	b	13e5c <__assert_fail@plt+0x2b7c>
   13e20:	b	13e24 <__assert_fail@plt+0x2b44>
   13e24:	ldrb	r0, [sp, #47]	; 0x2f
   13e28:	mvn	r1, #0
   13e2c:	eor	r0, r0, r1
   13e30:	tst	r0, #1
   13e34:	bne	13b34 <__assert_fail@plt+0x2854>
   13e38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13e3c:	movw	r1, #0
   13e40:	strb	r1, [r0]
   13e44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13e48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e50:	add	r1, r1, r2
   13e54:	sub	r0, r0, r1
   13e58:	str	r0, [fp, #-40]	; 0xffffffd8
   13e5c:	b	13e60 <__assert_fail@plt+0x2b80>
   13e60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e64:	ldr	r1, [fp, #-16]
   13e68:	str	r0, [r1]
   13e6c:	ldr	r0, [sp, #48]	; 0x30
   13e70:	ldr	r1, [fp, #-20]	; 0xffffffec
   13e74:	str	r0, [r1]
   13e78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13e7c:	cmp	r0, #0
   13e80:	beq	13e90 <__assert_fail@plt+0x2bb0>
   13e84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13e88:	str	r0, [sp]
   13e8c:	b	13e9c <__assert_fail@plt+0x2bbc>
   13e90:	mvn	r0, #0
   13e94:	str	r0, [sp]
   13e98:	b	13e9c <__assert_fail@plt+0x2bbc>
   13e9c:	ldr	r0, [sp]
   13ea0:	str	r0, [fp, #-12]
   13ea4:	ldr	r0, [fp, #-12]
   13ea8:	sub	sp, fp, #8
   13eac:	pop	{r4, sl, fp, pc}
   13eb0:	svcvc	0x00ffffff
   13eb4:	push	{fp, lr}
   13eb8:	mov	fp, sp
   13ebc:	sub	sp, sp, #64	; 0x40
   13ec0:	str	r0, [fp, #-8]
   13ec4:	str	r1, [fp, #-12]
   13ec8:	str	r2, [fp, #-16]
   13ecc:	str	r3, [fp, #-20]	; 0xffffffec
   13ed0:	ldr	r0, [fp, #-12]
   13ed4:	strb	r0, [sp, #19]
   13ed8:	ldr	r0, [fp, #-16]
   13edc:	strb	r0, [sp, #18]
   13ee0:	ldrb	r0, [sp, #19]
   13ee4:	ldrb	r1, [sp, #18]
   13ee8:	cmp	r0, r1
   13eec:	bne	13f08 <__assert_fail@plt+0x2c28>
   13ef0:	ldr	r0, [fp, #-8]
   13ef4:	ldrb	r1, [sp, #19]
   13ef8:	ldr	r2, [fp, #-20]	; 0xffffffec
   13efc:	bl	11220 <memchr@plt>
   13f00:	str	r0, [fp, #-4]
   13f04:	b	14118 <__assert_fail@plt+0x2e38>
   13f08:	ldr	r0, [fp, #-8]
   13f0c:	str	r0, [fp, #-28]	; 0xffffffe4
   13f10:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f14:	cmp	r0, #0
   13f18:	movw	r0, #0
   13f1c:	str	r0, [sp, #4]
   13f20:	bls	13f3c <__assert_fail@plt+0x2c5c>
   13f24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13f28:	and	r0, r0, #3
   13f2c:	cmp	r0, #0
   13f30:	movw	r0, #0
   13f34:	movne	r0, #1
   13f38:	str	r0, [sp, #4]
   13f3c:	ldr	r0, [sp, #4]
   13f40:	tst	r0, #1
   13f44:	beq	13fa4 <__assert_fail@plt+0x2cc4>
   13f48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13f4c:	str	r0, [fp, #-24]	; 0xffffffe8
   13f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f54:	ldrb	r0, [r0]
   13f58:	ldrb	r1, [sp, #19]
   13f5c:	cmp	r0, r1
   13f60:	beq	13f78 <__assert_fail@plt+0x2c98>
   13f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f68:	ldrb	r0, [r0]
   13f6c:	ldrb	r1, [sp, #18]
   13f70:	cmp	r0, r1
   13f74:	bne	13f84 <__assert_fail@plt+0x2ca4>
   13f78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13f7c:	str	r0, [fp, #-4]
   13f80:	b	14118 <__assert_fail@plt+0x2e38>
   13f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f88:	add	r0, r0, #1
   13f8c:	str	r0, [fp, #-28]	; 0xffffffe4
   13f90:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f94:	mvn	r1, #0
   13f98:	add	r0, r0, r1
   13f9c:	str	r0, [fp, #-20]	; 0xffffffec
   13fa0:	b	13f10 <__assert_fail@plt+0x2c30>
   13fa4:	ldr	r0, [pc, #376]	; 14124 <__assert_fail@plt+0x2e44>
   13fa8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13fac:	str	r1, [sp, #32]
   13fb0:	str	r0, [sp, #28]
   13fb4:	ldrb	r0, [sp, #19]
   13fb8:	ldrb	r1, [sp, #19]
   13fbc:	lsl	r1, r1, #8
   13fc0:	orr	r0, r0, r1
   13fc4:	str	r0, [sp, #24]
   13fc8:	ldrb	r0, [sp, #18]
   13fcc:	ldrb	r1, [sp, #18]
   13fd0:	lsl	r1, r1, #8
   13fd4:	orr	r0, r0, r1
   13fd8:	str	r0, [sp, #20]
   13fdc:	ldr	r0, [sp, #24]
   13fe0:	lsl	r0, r0, #16
   13fe4:	ldr	r1, [sp, #24]
   13fe8:	orr	r0, r1, r0
   13fec:	str	r0, [sp, #24]
   13ff0:	ldr	r0, [sp, #20]
   13ff4:	lsl	r0, r0, #16
   13ff8:	ldr	r1, [sp, #20]
   13ffc:	orr	r0, r1, r0
   14000:	str	r0, [sp, #20]
   14004:	ldr	r0, [fp, #-20]	; 0xffffffec
   14008:	cmp	r0, #4
   1400c:	bcc	140a4 <__assert_fail@plt+0x2dc4>
   14010:	ldr	r0, [sp, #32]
   14014:	ldr	r0, [r0]
   14018:	ldr	r1, [sp, #24]
   1401c:	eor	r0, r0, r1
   14020:	str	r0, [sp, #12]
   14024:	ldr	r0, [sp, #32]
   14028:	ldr	r0, [r0]
   1402c:	ldr	r1, [sp, #20]
   14030:	eor	r0, r0, r1
   14034:	str	r0, [sp, #8]
   14038:	ldr	r0, [sp, #12]
   1403c:	ldr	r1, [sp, #28]
   14040:	sub	r0, r0, r1
   14044:	ldr	r1, [sp, #12]
   14048:	mvn	r2, #0
   1404c:	eor	r1, r1, r2
   14050:	and	r0, r0, r1
   14054:	ldr	r1, [sp, #8]
   14058:	ldr	r3, [sp, #28]
   1405c:	sub	r1, r1, r3
   14060:	ldr	r3, [sp, #8]
   14064:	eor	r2, r3, r2
   14068:	and	r1, r1, r2
   1406c:	orr	r0, r0, r1
   14070:	ldr	r1, [sp, #28]
   14074:	lsl	r1, r1, #7
   14078:	and	r0, r0, r1
   1407c:	cmp	r0, #0
   14080:	beq	14088 <__assert_fail@plt+0x2da8>
   14084:	b	140a4 <__assert_fail@plt+0x2dc4>
   14088:	ldr	r0, [sp, #32]
   1408c:	add	r0, r0, #4
   14090:	str	r0, [sp, #32]
   14094:	ldr	r0, [fp, #-20]	; 0xffffffec
   14098:	sub	r0, r0, #4
   1409c:	str	r0, [fp, #-20]	; 0xffffffec
   140a0:	b	14004 <__assert_fail@plt+0x2d24>
   140a4:	ldr	r0, [sp, #32]
   140a8:	str	r0, [fp, #-24]	; 0xffffffe8
   140ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   140b0:	cmp	r0, #0
   140b4:	bls	14110 <__assert_fail@plt+0x2e30>
   140b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   140bc:	ldrb	r0, [r0]
   140c0:	ldrb	r1, [sp, #19]
   140c4:	cmp	r0, r1
   140c8:	beq	140e0 <__assert_fail@plt+0x2e00>
   140cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   140d0:	ldrb	r0, [r0]
   140d4:	ldrb	r1, [sp, #18]
   140d8:	cmp	r0, r1
   140dc:	bne	140ec <__assert_fail@plt+0x2e0c>
   140e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   140e4:	str	r0, [fp, #-4]
   140e8:	b	14118 <__assert_fail@plt+0x2e38>
   140ec:	b	140f0 <__assert_fail@plt+0x2e10>
   140f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   140f4:	mvn	r1, #0
   140f8:	add	r0, r0, r1
   140fc:	str	r0, [fp, #-20]	; 0xffffffec
   14100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14104:	add	r0, r0, #1
   14108:	str	r0, [fp, #-24]	; 0xffffffe8
   1410c:	b	140ac <__assert_fail@plt+0x2dcc>
   14110:	movw	r0, #0
   14114:	str	r0, [fp, #-4]
   14118:	ldr	r0, [fp, #-4]
   1411c:	mov	sp, fp
   14120:	pop	{fp, pc}
   14124:	tsteq	r1, r1, lsl #2
   14128:	push	{fp, lr}
   1412c:	mov	fp, sp
   14130:	sub	sp, sp, #24
   14134:	str	r0, [fp, #-4]
   14138:	ldr	r0, [fp, #-4]
   1413c:	movw	r1, #0
   14140:	cmp	r0, r1
   14144:	bne	14168 <__assert_fail@plt+0x2e88>
   14148:	movw	r0, #57696	; 0xe160
   1414c:	movt	r0, #2
   14150:	ldr	r1, [r0]
   14154:	movw	r0, #54061	; 0xd32d
   14158:	movt	r0, #1
   1415c:	bl	11298 <fputs@plt>
   14160:	str	r0, [sp, #8]
   14164:	bl	112b0 <abort@plt>
   14168:	ldr	r0, [fp, #-4]
   1416c:	movw	r1, #47	; 0x2f
   14170:	bl	11250 <strrchr@plt>
   14174:	str	r0, [fp, #-8]
   14178:	ldr	r0, [fp, #-8]
   1417c:	movw	r1, #0
   14180:	cmp	r0, r1
   14184:	beq	14198 <__assert_fail@plt+0x2eb8>
   14188:	ldr	r0, [fp, #-8]
   1418c:	add	r0, r0, #1
   14190:	str	r0, [sp, #4]
   14194:	b	141a0 <__assert_fail@plt+0x2ec0>
   14198:	ldr	r0, [fp, #-4]
   1419c:	str	r0, [sp, #4]
   141a0:	ldr	r0, [sp, #4]
   141a4:	str	r0, [sp, #12]
   141a8:	ldr	r0, [sp, #12]
   141ac:	ldr	r1, [fp, #-4]
   141b0:	sub	r0, r0, r1
   141b4:	cmp	r0, #7
   141b8:	blt	14224 <__assert_fail@plt+0x2f44>
   141bc:	ldr	r0, [sp, #12]
   141c0:	mvn	r1, #6
   141c4:	add	r0, r0, r1
   141c8:	movw	r1, #54117	; 0xd365
   141cc:	movt	r1, #1
   141d0:	movw	r2, #7
   141d4:	bl	112a4 <strncmp@plt>
   141d8:	cmp	r0, #0
   141dc:	bne	14224 <__assert_fail@plt+0x2f44>
   141e0:	ldr	r0, [sp, #12]
   141e4:	str	r0, [fp, #-4]
   141e8:	ldr	r0, [sp, #12]
   141ec:	movw	r1, #54125	; 0xd36d
   141f0:	movt	r1, #1
   141f4:	movw	r2, #3
   141f8:	bl	112a4 <strncmp@plt>
   141fc:	cmp	r0, #0
   14200:	bne	14220 <__assert_fail@plt+0x2f40>
   14204:	ldr	r0, [sp, #12]
   14208:	add	r0, r0, #3
   1420c:	str	r0, [fp, #-4]
   14210:	ldr	r0, [fp, #-4]
   14214:	movw	r1, #57680	; 0xe150
   14218:	movt	r1, #2
   1421c:	str	r0, [r1]
   14220:	b	14224 <__assert_fail@plt+0x2f44>
   14224:	ldr	r0, [fp, #-4]
   14228:	movw	r1, #57764	; 0xe1a4
   1422c:	movt	r1, #2
   14230:	str	r0, [r1]
   14234:	ldr	r0, [fp, #-4]
   14238:	movw	r1, #57684	; 0xe154
   1423c:	movt	r1, #2
   14240:	str	r0, [r1]
   14244:	mov	sp, fp
   14248:	pop	{fp, pc}
   1424c:	push	{fp, lr}
   14250:	mov	fp, sp
   14254:	sub	sp, sp, #24
   14258:	str	r0, [fp, #-4]
   1425c:	bl	111e4 <__errno_location@plt>
   14260:	ldr	r0, [r0]
   14264:	str	r0, [fp, #-8]
   14268:	ldr	r0, [fp, #-4]
   1426c:	movw	r1, #0
   14270:	cmp	r0, r1
   14274:	beq	14284 <__assert_fail@plt+0x2fa4>
   14278:	ldr	r0, [fp, #-4]
   1427c:	str	r0, [sp, #8]
   14280:	b	14294 <__assert_fail@plt+0x2fb4>
   14284:	movw	r0, #57768	; 0xe1a8
   14288:	movt	r0, #2
   1428c:	str	r0, [sp, #8]
   14290:	b	14294 <__assert_fail@plt+0x2fb4>
   14294:	ldr	r0, [sp, #8]
   14298:	movw	r1, #48	; 0x30
   1429c:	bl	19dc0 <__assert_fail@plt+0x8ae0>
   142a0:	str	r0, [sp, #12]
   142a4:	ldr	r0, [fp, #-8]
   142a8:	str	r0, [sp, #4]
   142ac:	bl	111e4 <__errno_location@plt>
   142b0:	ldr	r1, [sp, #4]
   142b4:	str	r1, [r0]
   142b8:	ldr	r0, [sp, #12]
   142bc:	mov	sp, fp
   142c0:	pop	{fp, pc}
   142c4:	sub	sp, sp, #8
   142c8:	str	r0, [sp, #4]
   142cc:	ldr	r0, [sp, #4]
   142d0:	movw	r1, #0
   142d4:	cmp	r0, r1
   142d8:	beq	142e8 <__assert_fail@plt+0x3008>
   142dc:	ldr	r0, [sp, #4]
   142e0:	str	r0, [sp]
   142e4:	b	142f8 <__assert_fail@plt+0x3018>
   142e8:	movw	r0, #57768	; 0xe1a8
   142ec:	movt	r0, #2
   142f0:	str	r0, [sp]
   142f4:	b	142f8 <__assert_fail@plt+0x3018>
   142f8:	ldr	r0, [sp]
   142fc:	ldr	r0, [r0]
   14300:	add	sp, sp, #8
   14304:	bx	lr
   14308:	sub	sp, sp, #16
   1430c:	str	r0, [sp, #12]
   14310:	str	r1, [sp, #8]
   14314:	ldr	r0, [sp, #8]
   14318:	ldr	r1, [sp, #12]
   1431c:	movw	r2, #0
   14320:	cmp	r1, r2
   14324:	str	r0, [sp, #4]
   14328:	beq	14338 <__assert_fail@plt+0x3058>
   1432c:	ldr	r0, [sp, #12]
   14330:	str	r0, [sp]
   14334:	b	14348 <__assert_fail@plt+0x3068>
   14338:	movw	r0, #57768	; 0xe1a8
   1433c:	movt	r0, #2
   14340:	str	r0, [sp]
   14344:	b	14348 <__assert_fail@plt+0x3068>
   14348:	ldr	r0, [sp]
   1434c:	ldr	r1, [sp, #4]
   14350:	str	r1, [r0]
   14354:	add	sp, sp, #16
   14358:	bx	lr
   1435c:	sub	sp, sp, #32
   14360:	str	r0, [sp, #28]
   14364:	strb	r1, [sp, #27]
   14368:	str	r2, [sp, #20]
   1436c:	ldrb	r0, [sp, #27]
   14370:	strb	r0, [sp, #19]
   14374:	ldr	r0, [sp, #28]
   14378:	movw	r1, #0
   1437c:	cmp	r0, r1
   14380:	beq	14390 <__assert_fail@plt+0x30b0>
   14384:	ldr	r0, [sp, #28]
   14388:	str	r0, [sp]
   1438c:	b	143a0 <__assert_fail@plt+0x30c0>
   14390:	movw	r0, #57768	; 0xe1a8
   14394:	movt	r0, #2
   14398:	str	r0, [sp]
   1439c:	b	143a0 <__assert_fail@plt+0x30c0>
   143a0:	ldr	r0, [sp]
   143a4:	add	r0, r0, #8
   143a8:	ldrb	r1, [sp, #19]
   143ac:	lsr	r1, r1, #5
   143b0:	add	r0, r0, r1, lsl #2
   143b4:	str	r0, [sp, #12]
   143b8:	ldrb	r0, [sp, #19]
   143bc:	and	r0, r0, #31
   143c0:	str	r0, [sp, #8]
   143c4:	ldr	r0, [sp, #12]
   143c8:	ldr	r0, [r0]
   143cc:	ldr	r1, [sp, #8]
   143d0:	lsr	r0, r0, r1
   143d4:	and	r0, r0, #1
   143d8:	str	r0, [sp, #4]
   143dc:	ldr	r0, [sp, #20]
   143e0:	and	r0, r0, #1
   143e4:	ldr	r1, [sp, #4]
   143e8:	eor	r0, r0, r1
   143ec:	ldr	r1, [sp, #8]
   143f0:	lsl	r0, r0, r1
   143f4:	ldr	r1, [sp, #12]
   143f8:	ldr	r2, [r1]
   143fc:	eor	r0, r2, r0
   14400:	str	r0, [r1]
   14404:	ldr	r0, [sp, #4]
   14408:	add	sp, sp, #32
   1440c:	bx	lr
   14410:	sub	sp, sp, #12
   14414:	str	r0, [sp, #8]
   14418:	str	r1, [sp, #4]
   1441c:	ldr	r0, [sp, #8]
   14420:	movw	r1, #0
   14424:	cmp	r0, r1
   14428:	bne	14438 <__assert_fail@plt+0x3158>
   1442c:	movw	r0, #57768	; 0xe1a8
   14430:	movt	r0, #2
   14434:	str	r0, [sp, #8]
   14438:	ldr	r0, [sp, #8]
   1443c:	ldr	r0, [r0, #4]
   14440:	str	r0, [sp]
   14444:	ldr	r0, [sp, #4]
   14448:	ldr	r1, [sp, #8]
   1444c:	str	r0, [r1, #4]
   14450:	ldr	r0, [sp]
   14454:	add	sp, sp, #12
   14458:	bx	lr
   1445c:	push	{fp, lr}
   14460:	mov	fp, sp
   14464:	sub	sp, sp, #16
   14468:	str	r0, [fp, #-4]
   1446c:	str	r1, [sp, #8]
   14470:	str	r2, [sp, #4]
   14474:	ldr	r0, [fp, #-4]
   14478:	movw	r1, #0
   1447c:	cmp	r0, r1
   14480:	bne	14490 <__assert_fail@plt+0x31b0>
   14484:	movw	r0, #57768	; 0xe1a8
   14488:	movt	r0, #2
   1448c:	str	r0, [fp, #-4]
   14490:	ldr	r0, [fp, #-4]
   14494:	movw	r1, #10
   14498:	str	r1, [r0]
   1449c:	ldr	r0, [sp, #8]
   144a0:	movw	r1, #0
   144a4:	cmp	r0, r1
   144a8:	beq	144bc <__assert_fail@plt+0x31dc>
   144ac:	ldr	r0, [sp, #4]
   144b0:	movw	r1, #0
   144b4:	cmp	r0, r1
   144b8:	bne	144c0 <__assert_fail@plt+0x31e0>
   144bc:	bl	112b0 <abort@plt>
   144c0:	ldr	r0, [sp, #8]
   144c4:	ldr	r1, [fp, #-4]
   144c8:	str	r0, [r1, #40]	; 0x28
   144cc:	ldr	r0, [sp, #4]
   144d0:	ldr	r1, [fp, #-4]
   144d4:	str	r0, [r1, #44]	; 0x2c
   144d8:	mov	sp, fp
   144dc:	pop	{fp, pc}
   144e0:	push	{r4, r5, r6, sl, fp, lr}
   144e4:	add	fp, sp, #16
   144e8:	sub	sp, sp, #56	; 0x38
   144ec:	ldr	ip, [fp, #8]
   144f0:	str	r0, [fp, #-20]	; 0xffffffec
   144f4:	str	r1, [fp, #-24]	; 0xffffffe8
   144f8:	str	r2, [fp, #-28]	; 0xffffffe4
   144fc:	str	r3, [fp, #-32]	; 0xffffffe0
   14500:	ldr	r0, [fp, #8]
   14504:	movw	r1, #0
   14508:	cmp	r0, r1
   1450c:	beq	1451c <__assert_fail@plt+0x323c>
   14510:	ldr	r0, [fp, #8]
   14514:	str	r0, [sp, #24]
   14518:	b	1452c <__assert_fail@plt+0x324c>
   1451c:	movw	r0, #57768	; 0xe1a8
   14520:	movt	r0, #2
   14524:	str	r0, [sp, #24]
   14528:	b	1452c <__assert_fail@plt+0x324c>
   1452c:	ldr	r0, [sp, #24]
   14530:	str	r0, [sp, #36]	; 0x24
   14534:	bl	111e4 <__errno_location@plt>
   14538:	ldr	r0, [r0]
   1453c:	str	r0, [sp, #32]
   14540:	ldr	r0, [fp, #-20]	; 0xffffffec
   14544:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14548:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1454c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14550:	ldr	ip, [sp, #36]	; 0x24
   14554:	ldr	ip, [ip]
   14558:	ldr	lr, [sp, #36]	; 0x24
   1455c:	ldr	lr, [lr, #4]
   14560:	ldr	r4, [sp, #36]	; 0x24
   14564:	add	r4, r4, #8
   14568:	ldr	r5, [sp, #36]	; 0x24
   1456c:	ldr	r5, [r5, #40]	; 0x28
   14570:	ldr	r6, [sp, #36]	; 0x24
   14574:	ldr	r6, [r6, #44]	; 0x2c
   14578:	str	ip, [sp]
   1457c:	str	lr, [sp, #4]
   14580:	str	r4, [sp, #8]
   14584:	str	r5, [sp, #12]
   14588:	str	r6, [sp, #16]
   1458c:	bl	145b4 <__assert_fail@plt+0x32d4>
   14590:	str	r0, [sp, #28]
   14594:	ldr	r0, [sp, #32]
   14598:	str	r0, [sp, #20]
   1459c:	bl	111e4 <__errno_location@plt>
   145a0:	ldr	r1, [sp, #20]
   145a4:	str	r1, [r0]
   145a8:	ldr	r0, [sp, #28]
   145ac:	sub	sp, fp, #16
   145b0:	pop	{r4, r5, r6, sl, fp, pc}
   145b4:	push	{r4, r5, r6, sl, fp, lr}
   145b8:	add	fp, sp, #16
   145bc:	sub	sp, sp, #160	; 0xa0
   145c0:	ldr	ip, [fp, #24]
   145c4:	ldr	lr, [fp, #20]
   145c8:	ldr	r4, [fp, #16]
   145cc:	ldr	r5, [fp, #12]
   145d0:	ldr	r6, [fp, #8]
   145d4:	str	r0, [fp, #-24]	; 0xffffffe8
   145d8:	str	r1, [fp, #-28]	; 0xffffffe4
   145dc:	str	r2, [fp, #-32]	; 0xffffffe0
   145e0:	str	r3, [fp, #-36]	; 0xffffffdc
   145e4:	movw	r0, #0
   145e8:	str	r0, [fp, #-44]	; 0xffffffd4
   145ec:	str	r0, [fp, #-48]	; 0xffffffd0
   145f0:	str	r0, [fp, #-52]	; 0xffffffcc
   145f4:	str	r0, [fp, #-56]	; 0xffffffc8
   145f8:	movw	r0, #0
   145fc:	strb	r0, [fp, #-57]	; 0xffffffc7
   14600:	str	ip, [sp, #72]	; 0x48
   14604:	str	lr, [sp, #68]	; 0x44
   14608:	str	r4, [sp, #64]	; 0x40
   1460c:	str	r5, [sp, #60]	; 0x3c
   14610:	str	r6, [sp, #56]	; 0x38
   14614:	bl	11118 <__ctype_get_mb_cur_max@plt>
   14618:	cmp	r0, #1
   1461c:	movw	r0, #0
   14620:	moveq	r0, #1
   14624:	and	r0, r0, #1
   14628:	strb	r0, [fp, #-58]	; 0xffffffc6
   1462c:	ldr	r0, [fp, #12]
   14630:	and	r0, r0, #2
   14634:	cmp	r0, #0
   14638:	movw	r0, #0
   1463c:	movne	r0, #1
   14640:	and	r0, r0, #1
   14644:	strb	r0, [fp, #-59]	; 0xffffffc5
   14648:	movw	r0, #0
   1464c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14650:	strb	r0, [fp, #-61]	; 0xffffffc3
   14654:	movw	r0, #1
   14658:	strb	r0, [fp, #-62]	; 0xffffffc2
   1465c:	ldr	r0, [fp, #8]
   14660:	cmp	r0, #10
   14664:	str	r0, [sp, #52]	; 0x34
   14668:	bhi	14890 <__assert_fail@plt+0x35b0>
   1466c:	add	r0, pc, #8
   14670:	ldr	r1, [sp, #52]	; 0x34
   14674:	ldr	r0, [r0, r1, lsl #2]
   14678:	mov	pc, r0
   1467c:	andeq	r4, r1, r4, lsl #17
   14680:	andeq	r4, r1, r0, lsl #16
   14684:	andeq	r4, r1, r0, lsr #16
   14688:	strdeq	r4, [r1], -r8
   1468c:	andeq	r4, r1, r8, lsl #16
   14690:			; <UNDEFINED> instruction: 0x000146b8
   14694:	andeq	r4, r1, r8, lsr #13
   14698:	andeq	r4, r1, ip, lsl r7
   1469c:	andeq	r4, r1, r0, lsr r7
   146a0:	andeq	r4, r1, r0, lsr r7
   146a4:	andeq	r4, r1, r0, lsr r7
   146a8:	movw	r0, #5
   146ac:	str	r0, [fp, #8]
   146b0:	movw	r0, #1
   146b4:	strb	r0, [fp, #-59]	; 0xffffffc5
   146b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   146bc:	tst	r0, #1
   146c0:	bne	146fc <__assert_fail@plt+0x341c>
   146c4:	b	146c8 <__assert_fail@plt+0x33e8>
   146c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146d0:	cmp	r0, r1
   146d4:	bcs	146ec <__assert_fail@plt+0x340c>
   146d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146e0:	add	r0, r0, r1
   146e4:	movw	r1, #34	; 0x22
   146e8:	strb	r1, [r0]
   146ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146f0:	add	r0, r0, #1
   146f4:	str	r0, [fp, #-44]	; 0xffffffd4
   146f8:	b	146fc <__assert_fail@plt+0x341c>
   146fc:	movw	r0, #1
   14700:	strb	r0, [fp, #-57]	; 0xffffffc7
   14704:	movw	r0, #54205	; 0xd3bd
   14708:	movt	r0, #1
   1470c:	str	r0, [fp, #-52]	; 0xffffffcc
   14710:	movw	r0, #1
   14714:	str	r0, [fp, #-56]	; 0xffffffc8
   14718:	b	14894 <__assert_fail@plt+0x35b4>
   1471c:	movw	r0, #1
   14720:	strb	r0, [fp, #-57]	; 0xffffffc7
   14724:	movw	r0, #0
   14728:	strb	r0, [fp, #-59]	; 0xffffffc5
   1472c:	b	14894 <__assert_fail@plt+0x35b4>
   14730:	ldr	r0, [fp, #8]
   14734:	cmp	r0, #10
   14738:	beq	14764 <__assert_fail@plt+0x3484>
   1473c:	ldr	r1, [fp, #8]
   14740:	movw	r0, #54207	; 0xd3bf
   14744:	movt	r0, #1
   14748:	bl	167a8 <__assert_fail@plt+0x54c8>
   1474c:	str	r0, [fp, #20]
   14750:	ldr	r1, [fp, #8]
   14754:	movw	r0, #54209	; 0xd3c1
   14758:	movt	r0, #1
   1475c:	bl	167a8 <__assert_fail@plt+0x54c8>
   14760:	str	r0, [fp, #24]
   14764:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14768:	tst	r0, #1
   1476c:	bne	147d8 <__assert_fail@plt+0x34f8>
   14770:	ldr	r0, [fp, #20]
   14774:	str	r0, [fp, #-52]	; 0xffffffcc
   14778:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1477c:	ldrsb	r0, [r0]
   14780:	cmp	r0, #0
   14784:	beq	147d4 <__assert_fail@plt+0x34f4>
   14788:	b	1478c <__assert_fail@plt+0x34ac>
   1478c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14790:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14794:	cmp	r0, r1
   14798:	bcs	147b4 <__assert_fail@plt+0x34d4>
   1479c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   147a0:	ldrb	r0, [r0]
   147a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   147a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   147ac:	add	r1, r1, r2
   147b0:	strb	r0, [r1]
   147b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147b8:	add	r0, r0, #1
   147bc:	str	r0, [fp, #-44]	; 0xffffffd4
   147c0:	b	147c4 <__assert_fail@plt+0x34e4>
   147c4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   147c8:	add	r0, r0, #1
   147cc:	str	r0, [fp, #-52]	; 0xffffffcc
   147d0:	b	14778 <__assert_fail@plt+0x3498>
   147d4:	b	147d8 <__assert_fail@plt+0x34f8>
   147d8:	movw	r0, #1
   147dc:	strb	r0, [fp, #-57]	; 0xffffffc7
   147e0:	ldr	r0, [fp, #24]
   147e4:	str	r0, [fp, #-52]	; 0xffffffcc
   147e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   147ec:	bl	111c0 <strlen@plt>
   147f0:	str	r0, [fp, #-56]	; 0xffffffc8
   147f4:	b	14894 <__assert_fail@plt+0x35b4>
   147f8:	movw	r0, #1
   147fc:	strb	r0, [fp, #-57]	; 0xffffffc7
   14800:	movw	r0, #1
   14804:	strb	r0, [fp, #-59]	; 0xffffffc5
   14808:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1480c:	tst	r0, #1
   14810:	bne	1481c <__assert_fail@plt+0x353c>
   14814:	movw	r0, #1
   14818:	strb	r0, [fp, #-57]	; 0xffffffc7
   1481c:	b	14820 <__assert_fail@plt+0x3540>
   14820:	movw	r0, #2
   14824:	str	r0, [fp, #8]
   14828:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1482c:	tst	r0, #1
   14830:	bne	1486c <__assert_fail@plt+0x358c>
   14834:	b	14838 <__assert_fail@plt+0x3558>
   14838:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1483c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14840:	cmp	r0, r1
   14844:	bcs	1485c <__assert_fail@plt+0x357c>
   14848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1484c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14850:	add	r0, r0, r1
   14854:	movw	r1, #39	; 0x27
   14858:	strb	r1, [r0]
   1485c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14860:	add	r0, r0, #1
   14864:	str	r0, [fp, #-44]	; 0xffffffd4
   14868:	b	1486c <__assert_fail@plt+0x358c>
   1486c:	movw	r0, #54209	; 0xd3c1
   14870:	movt	r0, #1
   14874:	str	r0, [fp, #-52]	; 0xffffffcc
   14878:	movw	r0, #1
   1487c:	str	r0, [fp, #-56]	; 0xffffffc8
   14880:	b	14894 <__assert_fail@plt+0x35b4>
   14884:	movw	r0, #0
   14888:	strb	r0, [fp, #-59]	; 0xffffffc5
   1488c:	b	14894 <__assert_fail@plt+0x35b4>
   14890:	bl	112b0 <abort@plt>
   14894:	movw	r0, #0
   14898:	str	r0, [fp, #-40]	; 0xffffffd8
   1489c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   148a0:	cmn	r0, #1
   148a4:	bne	148d0 <__assert_fail@plt+0x35f0>
   148a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   148b0:	add	r0, r0, r1
   148b4:	ldrb	r0, [r0]
   148b8:	cmp	r0, #0
   148bc:	movw	r0, #0
   148c0:	moveq	r0, #1
   148c4:	and	r0, r0, #1
   148c8:	str	r0, [sp, #48]	; 0x30
   148cc:	b	148ec <__assert_fail@plt+0x360c>
   148d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   148d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   148d8:	cmp	r0, r1
   148dc:	movw	r0, #0
   148e0:	moveq	r0, #1
   148e4:	and	r0, r0, #1
   148e8:	str	r0, [sp, #48]	; 0x30
   148ec:	ldr	r0, [sp, #48]	; 0x30
   148f0:	cmp	r0, #0
   148f4:	movw	r0, #0
   148f8:	movne	r0, #1
   148fc:	mvn	r1, #0
   14900:	eor	r0, r0, r1
   14904:	tst	r0, #1
   14908:	beq	15af4 <__assert_fail@plt+0x4814>
   1490c:	movw	r0, #0
   14910:	strb	r0, [fp, #-65]	; 0xffffffbf
   14914:	strb	r0, [fp, #-66]	; 0xffffffbe
   14918:	strb	r0, [fp, #-67]	; 0xffffffbd
   1491c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14920:	tst	r0, #1
   14924:	beq	149d0 <__assert_fail@plt+0x36f0>
   14928:	ldr	r0, [fp, #8]
   1492c:	cmp	r0, #2
   14930:	beq	149d0 <__assert_fail@plt+0x36f0>
   14934:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14938:	cmp	r0, #0
   1493c:	beq	149d0 <__assert_fail@plt+0x36f0>
   14940:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14944:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14948:	add	r0, r0, r1
   1494c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14950:	cmn	r1, #1
   14954:	str	r0, [sp, #44]	; 0x2c
   14958:	bne	14980 <__assert_fail@plt+0x36a0>
   1495c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14960:	movw	r1, #1
   14964:	cmp	r1, r0
   14968:	bcs	14980 <__assert_fail@plt+0x36a0>
   1496c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14970:	bl	111c0 <strlen@plt>
   14974:	str	r0, [fp, #-36]	; 0xffffffdc
   14978:	str	r0, [sp, #40]	; 0x28
   1497c:	b	14988 <__assert_fail@plt+0x36a8>
   14980:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14984:	str	r0, [sp, #40]	; 0x28
   14988:	ldr	r0, [sp, #40]	; 0x28
   1498c:	ldr	r1, [sp, #44]	; 0x2c
   14990:	cmp	r1, r0
   14994:	bhi	149d0 <__assert_fail@plt+0x36f0>
   14998:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1499c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   149a0:	add	r0, r0, r1
   149a4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   149a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   149ac:	bl	110d0 <memcmp@plt>
   149b0:	cmp	r0, #0
   149b4:	bne	149d0 <__assert_fail@plt+0x36f0>
   149b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   149bc:	tst	r0, #1
   149c0:	beq	149c8 <__assert_fail@plt+0x36e8>
   149c4:	b	15c74 <__assert_fail@plt+0x4994>
   149c8:	movw	r0, #1
   149cc:	strb	r0, [fp, #-65]	; 0xffffffbf
   149d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   149d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   149d8:	ldrb	r0, [r0, r1]
   149dc:	strb	r0, [fp, #-63]	; 0xffffffc1
   149e0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   149e4:	mov	r1, r0
   149e8:	cmp	r0, #126	; 0x7e
   149ec:	str	r1, [sp, #36]	; 0x24
   149f0:	bhi	15260 <__assert_fail@plt+0x3f80>
   149f4:	add	r0, pc, #8
   149f8:	ldr	r1, [sp, #36]	; 0x24
   149fc:	ldr	r0, [r0, r1, lsl #2]
   14a00:	mov	pc, r0
   14a04:	andeq	r4, r1, r0, lsl #24
   14a08:	andeq	r5, r1, r0, ror #4
   14a0c:	andeq	r5, r1, r0, ror #4
   14a10:	andeq	r5, r1, r0, ror #4
   14a14:	andeq	r5, r1, r0, ror #4
   14a18:	andeq	r5, r1, r0, ror #4
   14a1c:	andeq	r5, r1, r0, ror #4
   14a20:	andeq	r5, r1, r8
   14a24:	andeq	r5, r1, r4, lsl r0
   14a28:	andeq	r5, r1, r4, asr #32
   14a2c:	andeq	r5, r1, ip, lsr #32
   14a30:	andeq	r5, r1, r0, asr r0
   14a34:	andeq	r5, r1, r0, lsr #32
   14a38:	andeq	r5, r1, r8, lsr r0
   14a3c:	andeq	r5, r1, r0, ror #4
   14a40:	andeq	r5, r1, r0, ror #4
   14a44:	andeq	r5, r1, r0, ror #4
   14a48:	andeq	r5, r1, r0, ror #4
   14a4c:	andeq	r5, r1, r0, ror #4
   14a50:	andeq	r5, r1, r0, ror #4
   14a54:	andeq	r5, r1, r0, ror #4
   14a58:	andeq	r5, r1, r0, ror #4
   14a5c:	andeq	r5, r1, r0, ror #4
   14a60:	andeq	r5, r1, r0, ror #4
   14a64:	andeq	r5, r1, r0, ror #4
   14a68:	andeq	r5, r1, r0, ror #4
   14a6c:	andeq	r5, r1, r0, ror #4
   14a70:	andeq	r5, r1, r0, ror #4
   14a74:	andeq	r5, r1, r0, ror #4
   14a78:	andeq	r5, r1, r0, ror #4
   14a7c:	andeq	r5, r1, r0, ror #4
   14a80:	andeq	r5, r1, r0, ror #4
   14a84:	andeq	r5, r1, r4, lsr r1
   14a88:	andeq	r5, r1, ip, lsr r1
   14a8c:	andeq	r5, r1, ip, lsr r1
   14a90:	andeq	r5, r1, r0, lsr #2
   14a94:	andeq	r5, r1, ip, lsr r1
   14a98:	andeq	r5, r1, r4, asr r2
   14a9c:	andeq	r5, r1, ip, lsr r1
   14aa0:	andeq	r5, r1, ip, asr r1
   14aa4:	andeq	r5, r1, ip, lsr r1
   14aa8:	andeq	r5, r1, ip, lsr r1
   14aac:	andeq	r5, r1, ip, lsr r1
   14ab0:	andeq	r5, r1, r4, asr r2
   14ab4:	andeq	r5, r1, r4, asr r2
   14ab8:	andeq	r5, r1, r4, asr r2
   14abc:	andeq	r5, r1, r4, asr r2
   14ac0:	andeq	r5, r1, r4, asr r2
   14ac4:	andeq	r5, r1, r4, asr r2
   14ac8:	andeq	r5, r1, r4, asr r2
   14acc:	andeq	r5, r1, r4, asr r2
   14ad0:	andeq	r5, r1, r4, asr r2
   14ad4:	andeq	r5, r1, r4, asr r2
   14ad8:	andeq	r5, r1, r4, asr r2
   14adc:	andeq	r5, r1, r4, asr r2
   14ae0:	andeq	r5, r1, r4, asr r2
   14ae4:	andeq	r5, r1, r4, asr r2
   14ae8:	andeq	r5, r1, r4, asr r2
   14aec:	andeq	r5, r1, r4, asr r2
   14af0:	andeq	r5, r1, ip, lsr r1
   14af4:	andeq	r5, r1, ip, lsr r1
   14af8:	andeq	r5, r1, ip, lsr r1
   14afc:	andeq	r5, r1, ip, lsr r1
   14b00:	andeq	r4, r1, ip, lsl #28
   14b04:	andeq	r5, r1, r0, ror #4
   14b08:	andeq	r5, r1, r4, asr r2
   14b0c:	andeq	r5, r1, r4, asr r2
   14b10:	andeq	r5, r1, r4, asr r2
   14b14:	andeq	r5, r1, r4, asr r2
   14b18:	andeq	r5, r1, r4, asr r2
   14b1c:	andeq	r5, r1, r4, asr r2
   14b20:	andeq	r5, r1, r4, asr r2
   14b24:	andeq	r5, r1, r4, asr r2
   14b28:	andeq	r5, r1, r4, asr r2
   14b2c:	andeq	r5, r1, r4, asr r2
   14b30:	andeq	r5, r1, r4, asr r2
   14b34:	andeq	r5, r1, r4, asr r2
   14b38:	andeq	r5, r1, r4, asr r2
   14b3c:	andeq	r5, r1, r4, asr r2
   14b40:	andeq	r5, r1, r4, asr r2
   14b44:	andeq	r5, r1, r4, asr r2
   14b48:	andeq	r5, r1, r4, asr r2
   14b4c:	andeq	r5, r1, r4, asr r2
   14b50:	andeq	r5, r1, r4, asr r2
   14b54:	andeq	r5, r1, r4, asr r2
   14b58:	andeq	r5, r1, r4, asr r2
   14b5c:	andeq	r5, r1, r4, asr r2
   14b60:	andeq	r5, r1, r4, asr r2
   14b64:	andeq	r5, r1, r4, asr r2
   14b68:	andeq	r5, r1, r4, asr r2
   14b6c:	andeq	r5, r1, r4, asr r2
   14b70:	andeq	r5, r1, ip, lsr r1
   14b74:	andeq	r5, r1, ip, asr r0
   14b78:	andeq	r5, r1, r4, asr r2
   14b7c:	andeq	r5, r1, ip, lsr r1
   14b80:	andeq	r5, r1, r4, asr r2
   14b84:	andeq	r5, r1, ip, lsr r1
   14b88:	andeq	r5, r1, r4, asr r2
   14b8c:	andeq	r5, r1, r4, asr r2
   14b90:	andeq	r5, r1, r4, asr r2
   14b94:	andeq	r5, r1, r4, asr r2
   14b98:	andeq	r5, r1, r4, asr r2
   14b9c:	andeq	r5, r1, r4, asr r2
   14ba0:	andeq	r5, r1, r4, asr r2
   14ba4:	andeq	r5, r1, r4, asr r2
   14ba8:	andeq	r5, r1, r4, asr r2
   14bac:	andeq	r5, r1, r4, asr r2
   14bb0:	andeq	r5, r1, r4, asr r2
   14bb4:	andeq	r5, r1, r4, asr r2
   14bb8:	andeq	r5, r1, r4, asr r2
   14bbc:	andeq	r5, r1, r4, asr r2
   14bc0:	andeq	r5, r1, r4, asr r2
   14bc4:	andeq	r5, r1, r4, asr r2
   14bc8:	andeq	r5, r1, r4, asr r2
   14bcc:	andeq	r5, r1, r4, asr r2
   14bd0:	andeq	r5, r1, r4, asr r2
   14bd4:	andeq	r5, r1, r4, asr r2
   14bd8:	andeq	r5, r1, r4, asr r2
   14bdc:	andeq	r5, r1, r4, asr r2
   14be0:	andeq	r5, r1, r4, asr r2
   14be4:	andeq	r5, r1, r4, asr r2
   14be8:	andeq	r5, r1, r4, asr r2
   14bec:	andeq	r5, r1, r4, asr r2
   14bf0:	andeq	r5, r1, ip, ror #1
   14bf4:	andeq	r5, r1, ip, lsr r1
   14bf8:	andeq	r5, r1, ip, ror #1
   14bfc:	andeq	r5, r1, r0, lsr #2
   14c00:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14c04:	tst	r0, #1
   14c08:	beq	14df0 <__assert_fail@plt+0x3b10>
   14c0c:	b	14c10 <__assert_fail@plt+0x3930>
   14c10:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14c14:	tst	r0, #1
   14c18:	beq	14c20 <__assert_fail@plt+0x3940>
   14c1c:	b	15c74 <__assert_fail@plt+0x4994>
   14c20:	movw	r0, #1
   14c24:	strb	r0, [fp, #-66]	; 0xffffffbe
   14c28:	ldr	r0, [fp, #8]
   14c2c:	cmp	r0, #2
   14c30:	bne	14ce4 <__assert_fail@plt+0x3a04>
   14c34:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14c38:	tst	r0, #1
   14c3c:	bne	14ce4 <__assert_fail@plt+0x3a04>
   14c40:	b	14c44 <__assert_fail@plt+0x3964>
   14c44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c4c:	cmp	r0, r1
   14c50:	bcs	14c68 <__assert_fail@plt+0x3988>
   14c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c5c:	add	r0, r0, r1
   14c60:	movw	r1, #39	; 0x27
   14c64:	strb	r1, [r0]
   14c68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c6c:	add	r0, r0, #1
   14c70:	str	r0, [fp, #-44]	; 0xffffffd4
   14c74:	b	14c78 <__assert_fail@plt+0x3998>
   14c78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c80:	cmp	r0, r1
   14c84:	bcs	14c9c <__assert_fail@plt+0x39bc>
   14c88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c90:	add	r0, r0, r1
   14c94:	movw	r1, #36	; 0x24
   14c98:	strb	r1, [r0]
   14c9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ca0:	add	r0, r0, #1
   14ca4:	str	r0, [fp, #-44]	; 0xffffffd4
   14ca8:	b	14cac <__assert_fail@plt+0x39cc>
   14cac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14cb4:	cmp	r0, r1
   14cb8:	bcs	14cd0 <__assert_fail@plt+0x39f0>
   14cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14cc0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14cc4:	add	r0, r0, r1
   14cc8:	movw	r1, #39	; 0x27
   14ccc:	strb	r1, [r0]
   14cd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cd4:	add	r0, r0, #1
   14cd8:	str	r0, [fp, #-44]	; 0xffffffd4
   14cdc:	movw	r0, #1
   14ce0:	strb	r0, [fp, #-60]	; 0xffffffc4
   14ce4:	b	14ce8 <__assert_fail@plt+0x3a08>
   14ce8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14cf0:	cmp	r0, r1
   14cf4:	bcs	14d0c <__assert_fail@plt+0x3a2c>
   14cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14cfc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14d00:	add	r0, r0, r1
   14d04:	movw	r1, #92	; 0x5c
   14d08:	strb	r1, [r0]
   14d0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d10:	add	r0, r0, #1
   14d14:	str	r0, [fp, #-44]	; 0xffffffd4
   14d18:	b	14d1c <__assert_fail@plt+0x3a3c>
   14d1c:	ldr	r0, [fp, #8]
   14d20:	cmp	r0, #2
   14d24:	beq	14de4 <__assert_fail@plt+0x3b04>
   14d28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d2c:	add	r0, r0, #1
   14d30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14d34:	cmp	r0, r1
   14d38:	bcs	14de4 <__assert_fail@plt+0x3b04>
   14d3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14d44:	add	r1, r1, #1
   14d48:	add	r0, r0, r1
   14d4c:	ldrb	r0, [r0]
   14d50:	movw	r1, #48	; 0x30
   14d54:	cmp	r1, r0
   14d58:	bgt	14de4 <__assert_fail@plt+0x3b04>
   14d5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d60:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14d64:	add	r1, r1, #1
   14d68:	add	r0, r0, r1
   14d6c:	ldrb	r0, [r0]
   14d70:	cmp	r0, #57	; 0x39
   14d74:	bgt	14de4 <__assert_fail@plt+0x3b04>
   14d78:	b	14d7c <__assert_fail@plt+0x3a9c>
   14d7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d84:	cmp	r0, r1
   14d88:	bcs	14da0 <__assert_fail@plt+0x3ac0>
   14d8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14d94:	add	r0, r0, r1
   14d98:	movw	r1, #48	; 0x30
   14d9c:	strb	r1, [r0]
   14da0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14da4:	add	r0, r0, #1
   14da8:	str	r0, [fp, #-44]	; 0xffffffd4
   14dac:	b	14db0 <__assert_fail@plt+0x3ad0>
   14db0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14db4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14db8:	cmp	r0, r1
   14dbc:	bcs	14dd4 <__assert_fail@plt+0x3af4>
   14dc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14dc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14dc8:	add	r0, r0, r1
   14dcc:	movw	r1, #48	; 0x30
   14dd0:	strb	r1, [r0]
   14dd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14dd8:	add	r0, r0, #1
   14ddc:	str	r0, [fp, #-44]	; 0xffffffd4
   14de0:	b	14de4 <__assert_fail@plt+0x3b04>
   14de4:	movw	r0, #48	; 0x30
   14de8:	strb	r0, [fp, #-63]	; 0xffffffc1
   14dec:	b	14e08 <__assert_fail@plt+0x3b28>
   14df0:	ldr	r0, [fp, #12]
   14df4:	and	r0, r0, #1
   14df8:	cmp	r0, #0
   14dfc:	beq	14e04 <__assert_fail@plt+0x3b24>
   14e00:	b	15ae4 <__assert_fail@plt+0x4804>
   14e04:	b	14e08 <__assert_fail@plt+0x3b28>
   14e08:	b	15880 <__assert_fail@plt+0x45a0>
   14e0c:	ldr	r0, [fp, #8]
   14e10:	cmp	r0, #2
   14e14:	str	r0, [sp, #32]
   14e18:	beq	14e30 <__assert_fail@plt+0x3b50>
   14e1c:	b	14e20 <__assert_fail@plt+0x3b40>
   14e20:	ldr	r0, [sp, #32]
   14e24:	cmp	r0, #5
   14e28:	beq	14e44 <__assert_fail@plt+0x3b64>
   14e2c:	b	15000 <__assert_fail@plt+0x3d20>
   14e30:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14e34:	tst	r0, #1
   14e38:	beq	14e40 <__assert_fail@plt+0x3b60>
   14e3c:	b	15c74 <__assert_fail@plt+0x4994>
   14e40:	b	15004 <__assert_fail@plt+0x3d24>
   14e44:	ldr	r0, [fp, #12]
   14e48:	and	r0, r0, #4
   14e4c:	cmp	r0, #0
   14e50:	beq	14ffc <__assert_fail@plt+0x3d1c>
   14e54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e58:	add	r0, r0, #2
   14e5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14e60:	cmp	r0, r1
   14e64:	bcs	14ffc <__assert_fail@plt+0x3d1c>
   14e68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14e70:	add	r1, r1, #1
   14e74:	add	r0, r0, r1
   14e78:	ldrb	r0, [r0]
   14e7c:	cmp	r0, #63	; 0x3f
   14e80:	bne	14ffc <__assert_fail@plt+0x3d1c>
   14e84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14e8c:	add	r0, r1, r0
   14e90:	ldrb	r0, [r0, #2]
   14e94:	mov	r1, r0
   14e98:	cmp	r0, #33	; 0x21
   14e9c:	str	r1, [sp, #28]
   14ea0:	beq	14ef0 <__assert_fail@plt+0x3c10>
   14ea4:	b	14ea8 <__assert_fail@plt+0x3bc8>
   14ea8:	ldr	r0, [sp, #28]
   14eac:	sub	r1, r0, #39	; 0x27
   14eb0:	cmp	r1, #3
   14eb4:	bcc	14ef0 <__assert_fail@plt+0x3c10>
   14eb8:	b	14ebc <__assert_fail@plt+0x3bdc>
   14ebc:	ldr	r0, [sp, #28]
   14ec0:	cmp	r0, #45	; 0x2d
   14ec4:	beq	14ef0 <__assert_fail@plt+0x3c10>
   14ec8:	b	14ecc <__assert_fail@plt+0x3bec>
   14ecc:	ldr	r0, [sp, #28]
   14ed0:	cmp	r0, #47	; 0x2f
   14ed4:	beq	14ef0 <__assert_fail@plt+0x3c10>
   14ed8:	b	14edc <__assert_fail@plt+0x3bfc>
   14edc:	ldr	r0, [sp, #28]
   14ee0:	sub	r1, r0, #60	; 0x3c
   14ee4:	cmp	r1, #2
   14ee8:	bhi	14ff4 <__assert_fail@plt+0x3d14>
   14eec:	b	14ef0 <__assert_fail@plt+0x3c10>
   14ef0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14ef4:	tst	r0, #1
   14ef8:	beq	14f00 <__assert_fail@plt+0x3c20>
   14efc:	b	15c74 <__assert_fail@plt+0x4994>
   14f00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14f08:	add	r1, r1, #2
   14f0c:	add	r0, r0, r1
   14f10:	ldrb	r0, [r0]
   14f14:	strb	r0, [fp, #-63]	; 0xffffffc1
   14f18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14f1c:	add	r0, r0, #2
   14f20:	str	r0, [fp, #-40]	; 0xffffffd8
   14f24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f2c:	cmp	r0, r1
   14f30:	bcs	14f48 <__assert_fail@plt+0x3c68>
   14f34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14f3c:	add	r0, r0, r1
   14f40:	movw	r1, #63	; 0x3f
   14f44:	strb	r1, [r0]
   14f48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f4c:	add	r0, r0, #1
   14f50:	str	r0, [fp, #-44]	; 0xffffffd4
   14f54:	b	14f58 <__assert_fail@plt+0x3c78>
   14f58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f60:	cmp	r0, r1
   14f64:	bcs	14f7c <__assert_fail@plt+0x3c9c>
   14f68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14f70:	add	r0, r0, r1
   14f74:	movw	r1, #34	; 0x22
   14f78:	strb	r1, [r0]
   14f7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f80:	add	r0, r0, #1
   14f84:	str	r0, [fp, #-44]	; 0xffffffd4
   14f88:	b	14f8c <__assert_fail@plt+0x3cac>
   14f8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f94:	cmp	r0, r1
   14f98:	bcs	14fb0 <__assert_fail@plt+0x3cd0>
   14f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fa0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14fa4:	add	r0, r0, r1
   14fa8:	movw	r1, #34	; 0x22
   14fac:	strb	r1, [r0]
   14fb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14fb4:	add	r0, r0, #1
   14fb8:	str	r0, [fp, #-44]	; 0xffffffd4
   14fbc:	b	14fc0 <__assert_fail@plt+0x3ce0>
   14fc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14fc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14fc8:	cmp	r0, r1
   14fcc:	bcs	14fe4 <__assert_fail@plt+0x3d04>
   14fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14fd8:	add	r0, r0, r1
   14fdc:	movw	r1, #63	; 0x3f
   14fe0:	strb	r1, [r0]
   14fe4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14fe8:	add	r0, r0, #1
   14fec:	str	r0, [fp, #-44]	; 0xffffffd4
   14ff0:	b	14ff8 <__assert_fail@plt+0x3d18>
   14ff4:	b	14ff8 <__assert_fail@plt+0x3d18>
   14ff8:	b	14ffc <__assert_fail@plt+0x3d1c>
   14ffc:	b	15004 <__assert_fail@plt+0x3d24>
   15000:	b	15004 <__assert_fail@plt+0x3d24>
   15004:	b	15880 <__assert_fail@plt+0x45a0>
   15008:	movw	r0, #97	; 0x61
   1500c:	strb	r0, [fp, #-64]	; 0xffffffc0
   15010:	b	150d0 <__assert_fail@plt+0x3df0>
   15014:	movw	r0, #98	; 0x62
   15018:	strb	r0, [fp, #-64]	; 0xffffffc0
   1501c:	b	150d0 <__assert_fail@plt+0x3df0>
   15020:	movw	r0, #102	; 0x66
   15024:	strb	r0, [fp, #-64]	; 0xffffffc0
   15028:	b	150d0 <__assert_fail@plt+0x3df0>
   1502c:	movw	r0, #110	; 0x6e
   15030:	strb	r0, [fp, #-64]	; 0xffffffc0
   15034:	b	150b0 <__assert_fail@plt+0x3dd0>
   15038:	movw	r0, #114	; 0x72
   1503c:	strb	r0, [fp, #-64]	; 0xffffffc0
   15040:	b	150b0 <__assert_fail@plt+0x3dd0>
   15044:	movw	r0, #116	; 0x74
   15048:	strb	r0, [fp, #-64]	; 0xffffffc0
   1504c:	b	150b0 <__assert_fail@plt+0x3dd0>
   15050:	movw	r0, #118	; 0x76
   15054:	strb	r0, [fp, #-64]	; 0xffffffc0
   15058:	b	150d0 <__assert_fail@plt+0x3df0>
   1505c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15060:	strb	r0, [fp, #-64]	; 0xffffffc0
   15064:	ldr	r0, [fp, #8]
   15068:	cmp	r0, #2
   1506c:	bne	15084 <__assert_fail@plt+0x3da4>
   15070:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15074:	tst	r0, #1
   15078:	beq	15080 <__assert_fail@plt+0x3da0>
   1507c:	b	15c74 <__assert_fail@plt+0x4994>
   15080:	b	15a08 <__assert_fail@plt+0x4728>
   15084:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15088:	tst	r0, #1
   1508c:	beq	150ac <__assert_fail@plt+0x3dcc>
   15090:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15094:	tst	r0, #1
   15098:	beq	150ac <__assert_fail@plt+0x3dcc>
   1509c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   150a0:	cmp	r0, #0
   150a4:	beq	150ac <__assert_fail@plt+0x3dcc>
   150a8:	b	15a08 <__assert_fail@plt+0x4728>
   150ac:	b	150b0 <__assert_fail@plt+0x3dd0>
   150b0:	ldr	r0, [fp, #8]
   150b4:	cmp	r0, #2
   150b8:	bne	150cc <__assert_fail@plt+0x3dec>
   150bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   150c0:	tst	r0, #1
   150c4:	beq	150cc <__assert_fail@plt+0x3dec>
   150c8:	b	15c74 <__assert_fail@plt+0x4994>
   150cc:	b	150d0 <__assert_fail@plt+0x3df0>
   150d0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   150d4:	tst	r0, #1
   150d8:	beq	150e8 <__assert_fail@plt+0x3e08>
   150dc:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   150e0:	strb	r0, [fp, #-63]	; 0xffffffc1
   150e4:	b	158f4 <__assert_fail@plt+0x4614>
   150e8:	b	15880 <__assert_fail@plt+0x45a0>
   150ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   150f0:	cmn	r0, #1
   150f4:	bne	1510c <__assert_fail@plt+0x3e2c>
   150f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   150fc:	ldrb	r0, [r0, #1]
   15100:	cmp	r0, #0
   15104:	beq	1511c <__assert_fail@plt+0x3e3c>
   15108:	b	15118 <__assert_fail@plt+0x3e38>
   1510c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15110:	cmp	r0, #1
   15114:	beq	1511c <__assert_fail@plt+0x3e3c>
   15118:	b	15880 <__assert_fail@plt+0x45a0>
   1511c:	b	15120 <__assert_fail@plt+0x3e40>
   15120:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15124:	cmp	r0, #0
   15128:	beq	15130 <__assert_fail@plt+0x3e50>
   1512c:	b	15880 <__assert_fail@plt+0x45a0>
   15130:	b	15134 <__assert_fail@plt+0x3e54>
   15134:	movw	r0, #1
   15138:	strb	r0, [fp, #-67]	; 0xffffffbd
   1513c:	ldr	r0, [fp, #8]
   15140:	cmp	r0, #2
   15144:	bne	15158 <__assert_fail@plt+0x3e78>
   15148:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1514c:	tst	r0, #1
   15150:	beq	15158 <__assert_fail@plt+0x3e78>
   15154:	b	15c74 <__assert_fail@plt+0x4994>
   15158:	b	15880 <__assert_fail@plt+0x45a0>
   1515c:	movw	r0, #1
   15160:	strb	r0, [fp, #-61]	; 0xffffffc3
   15164:	strb	r0, [fp, #-67]	; 0xffffffbd
   15168:	ldr	r0, [fp, #8]
   1516c:	cmp	r0, #2
   15170:	bne	15250 <__assert_fail@plt+0x3f70>
   15174:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15178:	tst	r0, #1
   1517c:	beq	15184 <__assert_fail@plt+0x3ea4>
   15180:	b	15c74 <__assert_fail@plt+0x4994>
   15184:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15188:	cmp	r0, #0
   1518c:	beq	151ac <__assert_fail@plt+0x3ecc>
   15190:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15194:	cmp	r0, #0
   15198:	bne	151ac <__assert_fail@plt+0x3ecc>
   1519c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   151a0:	str	r0, [fp, #-48]	; 0xffffffd0
   151a4:	movw	r0, #0
   151a8:	str	r0, [fp, #-28]	; 0xffffffe4
   151ac:	b	151b0 <__assert_fail@plt+0x3ed0>
   151b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   151b8:	cmp	r0, r1
   151bc:	bcs	151d4 <__assert_fail@plt+0x3ef4>
   151c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   151c8:	add	r0, r0, r1
   151cc:	movw	r1, #39	; 0x27
   151d0:	strb	r1, [r0]
   151d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151d8:	add	r0, r0, #1
   151dc:	str	r0, [fp, #-44]	; 0xffffffd4
   151e0:	b	151e4 <__assert_fail@plt+0x3f04>
   151e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   151ec:	cmp	r0, r1
   151f0:	bcs	15208 <__assert_fail@plt+0x3f28>
   151f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   151fc:	add	r0, r0, r1
   15200:	movw	r1, #92	; 0x5c
   15204:	strb	r1, [r0]
   15208:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1520c:	add	r0, r0, #1
   15210:	str	r0, [fp, #-44]	; 0xffffffd4
   15214:	b	15218 <__assert_fail@plt+0x3f38>
   15218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1521c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15220:	cmp	r0, r1
   15224:	bcs	1523c <__assert_fail@plt+0x3f5c>
   15228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1522c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15230:	add	r0, r0, r1
   15234:	movw	r1, #39	; 0x27
   15238:	strb	r1, [r0]
   1523c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15240:	add	r0, r0, #1
   15244:	str	r0, [fp, #-44]	; 0xffffffd4
   15248:	movw	r0, #0
   1524c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15250:	b	15880 <__assert_fail@plt+0x45a0>
   15254:	movw	r0, #1
   15258:	strb	r0, [fp, #-67]	; 0xffffffbd
   1525c:	b	15880 <__assert_fail@plt+0x45a0>
   15260:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   15264:	tst	r0, #1
   15268:	beq	152a8 <__assert_fail@plt+0x3fc8>
   1526c:	mov	r0, #1
   15270:	str	r0, [fp, #-72]	; 0xffffffb8
   15274:	bl	1119c <__ctype_b_loc@plt>
   15278:	ldr	r0, [r0]
   1527c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15280:	mov	r2, r1
   15284:	add	r0, r0, r1, lsl #1
   15288:	ldrh	r0, [r0]
   1528c:	and	r0, r0, #16384	; 0x4000
   15290:	cmp	r0, #0
   15294:	movw	r0, #0
   15298:	movne	r0, #1
   1529c:	and	r0, r0, #1
   152a0:	strb	r0, [fp, #-73]	; 0xffffffb7
   152a4:	b	15534 <__assert_fail@plt+0x4254>
   152a8:	sub	r0, fp, #84	; 0x54
   152ac:	movw	r1, #0
   152b0:	and	r1, r1, #255	; 0xff
   152b4:	movw	r2, #8
   152b8:	bl	111fc <memset@plt>
   152bc:	movw	r0, #0
   152c0:	str	r0, [fp, #-72]	; 0xffffffb8
   152c4:	movw	r0, #1
   152c8:	strb	r0, [fp, #-73]	; 0xffffffb7
   152cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   152d0:	cmn	r0, #1
   152d4:	bne	152e4 <__assert_fail@plt+0x4004>
   152d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   152dc:	bl	111c0 <strlen@plt>
   152e0:	str	r0, [fp, #-36]	; 0xffffffdc
   152e4:	b	152e8 <__assert_fail@plt+0x4008>
   152e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   152ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   152f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   152f4:	add	r1, r1, r2
   152f8:	add	r1, r0, r1
   152fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15300:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15304:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15308:	add	r2, r2, r3
   1530c:	sub	r2, r0, r2
   15310:	add	r0, sp, #88	; 0x58
   15314:	sub	r3, fp, #84	; 0x54
   15318:	bl	1a780 <__assert_fail@plt+0x94a0>
   1531c:	str	r0, [sp, #84]	; 0x54
   15320:	ldr	r0, [sp, #84]	; 0x54
   15324:	cmp	r0, #0
   15328:	bne	15330 <__assert_fail@plt+0x4050>
   1532c:	b	15530 <__assert_fail@plt+0x4250>
   15330:	ldr	r0, [sp, #84]	; 0x54
   15334:	cmn	r0, #1
   15338:	bne	15348 <__assert_fail@plt+0x4068>
   1533c:	movw	r0, #0
   15340:	strb	r0, [fp, #-73]	; 0xffffffb7
   15344:	b	15530 <__assert_fail@plt+0x4250>
   15348:	ldr	r0, [sp, #84]	; 0x54
   1534c:	cmn	r0, #2
   15350:	bne	153c4 <__assert_fail@plt+0x40e4>
   15354:	movw	r0, #0
   15358:	strb	r0, [fp, #-73]	; 0xffffffb7
   1535c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15360:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15364:	add	r0, r0, r1
   15368:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1536c:	cmp	r0, r1
   15370:	movw	r0, #0
   15374:	str	r0, [sp, #24]
   15378:	bcs	153a4 <__assert_fail@plt+0x40c4>
   1537c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15380:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15384:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15388:	add	r1, r1, r2
   1538c:	add	r0, r0, r1
   15390:	ldrb	r0, [r0]
   15394:	cmp	r0, #0
   15398:	movw	r0, #0
   1539c:	movne	r0, #1
   153a0:	str	r0, [sp, #24]
   153a4:	ldr	r0, [sp, #24]
   153a8:	tst	r0, #1
   153ac:	beq	153c0 <__assert_fail@plt+0x40e0>
   153b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   153b4:	add	r0, r0, #1
   153b8:	str	r0, [fp, #-72]	; 0xffffffb8
   153bc:	b	1535c <__assert_fail@plt+0x407c>
   153c0:	b	15530 <__assert_fail@plt+0x4250>
   153c4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   153c8:	tst	r0, #1
   153cc:	beq	154d8 <__assert_fail@plt+0x41f8>
   153d0:	ldr	r0, [fp, #8]
   153d4:	cmp	r0, #2
   153d8:	bne	154d8 <__assert_fail@plt+0x41f8>
   153dc:	movw	r0, #1
   153e0:	str	r0, [sp, #80]	; 0x50
   153e4:	ldr	r0, [sp, #80]	; 0x50
   153e8:	ldr	r1, [sp, #84]	; 0x54
   153ec:	cmp	r0, r1
   153f0:	bcs	154d4 <__assert_fail@plt+0x41f4>
   153f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   153f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   153fc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15400:	add	r1, r1, r2
   15404:	ldr	r2, [sp, #80]	; 0x50
   15408:	add	r1, r1, r2
   1540c:	ldrb	r0, [r0, r1]
   15410:	sub	r0, r0, #91	; 0x5b
   15414:	cmp	r0, #33	; 0x21
   15418:	str	r0, [sp, #20]
   1541c:	bhi	154bc <__assert_fail@plt+0x41dc>
   15420:	add	r0, pc, #8
   15424:	ldr	r1, [sp, #20]
   15428:	ldr	r0, [r0, r1, lsl #2]
   1542c:	mov	pc, r0
   15430:			; <UNDEFINED> instruction: 0x000154b8
   15434:			; <UNDEFINED> instruction: 0x000154b8
   15438:			; <UNDEFINED> instruction: 0x000154bc
   1543c:			; <UNDEFINED> instruction: 0x000154b8
   15440:			; <UNDEFINED> instruction: 0x000154bc
   15444:			; <UNDEFINED> instruction: 0x000154b8
   15448:			; <UNDEFINED> instruction: 0x000154bc
   1544c:			; <UNDEFINED> instruction: 0x000154bc
   15450:			; <UNDEFINED> instruction: 0x000154bc
   15454:			; <UNDEFINED> instruction: 0x000154bc
   15458:			; <UNDEFINED> instruction: 0x000154bc
   1545c:			; <UNDEFINED> instruction: 0x000154bc
   15460:			; <UNDEFINED> instruction: 0x000154bc
   15464:			; <UNDEFINED> instruction: 0x000154bc
   15468:			; <UNDEFINED> instruction: 0x000154bc
   1546c:			; <UNDEFINED> instruction: 0x000154bc
   15470:			; <UNDEFINED> instruction: 0x000154bc
   15474:			; <UNDEFINED> instruction: 0x000154bc
   15478:			; <UNDEFINED> instruction: 0x000154bc
   1547c:			; <UNDEFINED> instruction: 0x000154bc
   15480:			; <UNDEFINED> instruction: 0x000154bc
   15484:			; <UNDEFINED> instruction: 0x000154bc
   15488:			; <UNDEFINED> instruction: 0x000154bc
   1548c:			; <UNDEFINED> instruction: 0x000154bc
   15490:			; <UNDEFINED> instruction: 0x000154bc
   15494:			; <UNDEFINED> instruction: 0x000154bc
   15498:			; <UNDEFINED> instruction: 0x000154bc
   1549c:			; <UNDEFINED> instruction: 0x000154bc
   154a0:			; <UNDEFINED> instruction: 0x000154bc
   154a4:			; <UNDEFINED> instruction: 0x000154bc
   154a8:			; <UNDEFINED> instruction: 0x000154bc
   154ac:			; <UNDEFINED> instruction: 0x000154bc
   154b0:			; <UNDEFINED> instruction: 0x000154bc
   154b4:			; <UNDEFINED> instruction: 0x000154b8
   154b8:	b	15c74 <__assert_fail@plt+0x4994>
   154bc:	b	154c0 <__assert_fail@plt+0x41e0>
   154c0:	b	154c4 <__assert_fail@plt+0x41e4>
   154c4:	ldr	r0, [sp, #80]	; 0x50
   154c8:	add	r0, r0, #1
   154cc:	str	r0, [sp, #80]	; 0x50
   154d0:	b	153e4 <__assert_fail@plt+0x4104>
   154d4:	b	154d8 <__assert_fail@plt+0x41f8>
   154d8:	ldr	r0, [sp, #88]	; 0x58
   154dc:	bl	11100 <iswprint@plt>
   154e0:	cmp	r0, #0
   154e4:	bne	154f0 <__assert_fail@plt+0x4210>
   154e8:	movw	r0, #0
   154ec:	strb	r0, [fp, #-73]	; 0xffffffb7
   154f0:	ldr	r0, [sp, #84]	; 0x54
   154f4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   154f8:	add	r0, r1, r0
   154fc:	str	r0, [fp, #-72]	; 0xffffffb8
   15500:	b	15504 <__assert_fail@plt+0x4224>
   15504:	b	15508 <__assert_fail@plt+0x4228>
   15508:	b	1550c <__assert_fail@plt+0x422c>
   1550c:	sub	r0, fp, #84	; 0x54
   15510:	bl	110b8 <mbsinit@plt>
   15514:	cmp	r0, #0
   15518:	movw	r0, #0
   1551c:	movne	r0, #1
   15520:	mvn	r1, #0
   15524:	eor	r0, r0, r1
   15528:	tst	r0, #1
   1552c:	bne	152e8 <__assert_fail@plt+0x4008>
   15530:	b	15534 <__assert_fail@plt+0x4254>
   15534:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15538:	and	r0, r0, #1
   1553c:	strb	r0, [fp, #-67]	; 0xffffffbd
   15540:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15544:	movw	r1, #1
   15548:	cmp	r1, r0
   1554c:	bcc	15568 <__assert_fail@plt+0x4288>
   15550:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15554:	tst	r0, #1
   15558:	beq	1587c <__assert_fail@plt+0x459c>
   1555c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15560:	tst	r0, #1
   15564:	bne	1587c <__assert_fail@plt+0x459c>
   15568:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1556c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15570:	add	r0, r0, r1
   15574:	str	r0, [sp, #76]	; 0x4c
   15578:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1557c:	tst	r0, #1
   15580:	beq	15730 <__assert_fail@plt+0x4450>
   15584:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15588:	tst	r0, #1
   1558c:	bne	15730 <__assert_fail@plt+0x4450>
   15590:	b	15594 <__assert_fail@plt+0x42b4>
   15594:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15598:	tst	r0, #1
   1559c:	beq	155a4 <__assert_fail@plt+0x42c4>
   155a0:	b	15c74 <__assert_fail@plt+0x4994>
   155a4:	movw	r0, #1
   155a8:	strb	r0, [fp, #-66]	; 0xffffffbe
   155ac:	ldr	r0, [fp, #8]
   155b0:	cmp	r0, #2
   155b4:	bne	15668 <__assert_fail@plt+0x4388>
   155b8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   155bc:	tst	r0, #1
   155c0:	bne	15668 <__assert_fail@plt+0x4388>
   155c4:	b	155c8 <__assert_fail@plt+0x42e8>
   155c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   155cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   155d0:	cmp	r0, r1
   155d4:	bcs	155ec <__assert_fail@plt+0x430c>
   155d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   155e0:	add	r0, r0, r1
   155e4:	movw	r1, #39	; 0x27
   155e8:	strb	r1, [r0]
   155ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   155f0:	add	r0, r0, #1
   155f4:	str	r0, [fp, #-44]	; 0xffffffd4
   155f8:	b	155fc <__assert_fail@plt+0x431c>
   155fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15600:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15604:	cmp	r0, r1
   15608:	bcs	15620 <__assert_fail@plt+0x4340>
   1560c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15610:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15614:	add	r0, r0, r1
   15618:	movw	r1, #36	; 0x24
   1561c:	strb	r1, [r0]
   15620:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15624:	add	r0, r0, #1
   15628:	str	r0, [fp, #-44]	; 0xffffffd4
   1562c:	b	15630 <__assert_fail@plt+0x4350>
   15630:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15634:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15638:	cmp	r0, r1
   1563c:	bcs	15654 <__assert_fail@plt+0x4374>
   15640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15644:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15648:	add	r0, r0, r1
   1564c:	movw	r1, #39	; 0x27
   15650:	strb	r1, [r0]
   15654:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15658:	add	r0, r0, #1
   1565c:	str	r0, [fp, #-44]	; 0xffffffd4
   15660:	movw	r0, #1
   15664:	strb	r0, [fp, #-60]	; 0xffffffc4
   15668:	b	1566c <__assert_fail@plt+0x438c>
   1566c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15670:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15674:	cmp	r0, r1
   15678:	bcs	15690 <__assert_fail@plt+0x43b0>
   1567c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15680:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15684:	add	r0, r0, r1
   15688:	movw	r1, #92	; 0x5c
   1568c:	strb	r1, [r0]
   15690:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15694:	add	r0, r0, #1
   15698:	str	r0, [fp, #-44]	; 0xffffffd4
   1569c:	b	156a0 <__assert_fail@plt+0x43c0>
   156a0:	b	156a4 <__assert_fail@plt+0x43c4>
   156a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156ac:	cmp	r0, r1
   156b0:	bcs	156d0 <__assert_fail@plt+0x43f0>
   156b4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   156b8:	asr	r0, r0, #6
   156bc:	add	r0, r0, #48	; 0x30
   156c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   156c4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   156c8:	add	r1, r1, r2
   156cc:	strb	r0, [r1]
   156d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156d4:	add	r0, r0, #1
   156d8:	str	r0, [fp, #-44]	; 0xffffffd4
   156dc:	b	156e0 <__assert_fail@plt+0x4400>
   156e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156e8:	cmp	r0, r1
   156ec:	bcs	15710 <__assert_fail@plt+0x4430>
   156f0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   156f4:	asr	r0, r0, #3
   156f8:	and	r0, r0, #7
   156fc:	add	r0, r0, #48	; 0x30
   15700:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15704:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15708:	add	r1, r1, r2
   1570c:	strb	r0, [r1]
   15710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15714:	add	r0, r0, #1
   15718:	str	r0, [fp, #-44]	; 0xffffffd4
   1571c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15720:	and	r0, r0, #7
   15724:	add	r0, r0, #48	; 0x30
   15728:	strb	r0, [fp, #-63]	; 0xffffffc1
   1572c:	b	1577c <__assert_fail@plt+0x449c>
   15730:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15734:	tst	r0, #1
   15738:	beq	15778 <__assert_fail@plt+0x4498>
   1573c:	b	15740 <__assert_fail@plt+0x4460>
   15740:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15744:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15748:	cmp	r0, r1
   1574c:	bcs	15764 <__assert_fail@plt+0x4484>
   15750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15754:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15758:	add	r0, r0, r1
   1575c:	movw	r1, #92	; 0x5c
   15760:	strb	r1, [r0]
   15764:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15768:	add	r0, r0, #1
   1576c:	str	r0, [fp, #-44]	; 0xffffffd4
   15770:	movw	r0, #0
   15774:	strb	r0, [fp, #-65]	; 0xffffffbf
   15778:	b	1577c <__assert_fail@plt+0x449c>
   1577c:	ldr	r0, [sp, #76]	; 0x4c
   15780:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15784:	add	r1, r1, #1
   15788:	cmp	r0, r1
   1578c:	bhi	15794 <__assert_fail@plt+0x44b4>
   15790:	b	15878 <__assert_fail@plt+0x4598>
   15794:	b	15798 <__assert_fail@plt+0x44b8>
   15798:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1579c:	tst	r0, #1
   157a0:	beq	15820 <__assert_fail@plt+0x4540>
   157a4:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   157a8:	tst	r0, #1
   157ac:	bne	15820 <__assert_fail@plt+0x4540>
   157b0:	b	157b4 <__assert_fail@plt+0x44d4>
   157b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157bc:	cmp	r0, r1
   157c0:	bcs	157d8 <__assert_fail@plt+0x44f8>
   157c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   157cc:	add	r0, r0, r1
   157d0:	movw	r1, #39	; 0x27
   157d4:	strb	r1, [r0]
   157d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157dc:	add	r0, r0, #1
   157e0:	str	r0, [fp, #-44]	; 0xffffffd4
   157e4:	b	157e8 <__assert_fail@plt+0x4508>
   157e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157f0:	cmp	r0, r1
   157f4:	bcs	1580c <__assert_fail@plt+0x452c>
   157f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15800:	add	r0, r0, r1
   15804:	movw	r1, #39	; 0x27
   15808:	strb	r1, [r0]
   1580c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15810:	add	r0, r0, #1
   15814:	str	r0, [fp, #-44]	; 0xffffffd4
   15818:	movw	r0, #0
   1581c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15820:	b	15824 <__assert_fail@plt+0x4544>
   15824:	b	15828 <__assert_fail@plt+0x4548>
   15828:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1582c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15830:	cmp	r0, r1
   15834:	bcs	1584c <__assert_fail@plt+0x456c>
   15838:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1583c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15840:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15844:	add	r1, r1, r2
   15848:	strb	r0, [r1]
   1584c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15850:	add	r0, r0, #1
   15854:	str	r0, [fp, #-44]	; 0xffffffd4
   15858:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1585c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15860:	add	r1, r1, #1
   15864:	str	r1, [fp, #-40]	; 0xffffffd8
   15868:	add	r0, r0, r1
   1586c:	ldrb	r0, [r0]
   15870:	strb	r0, [fp, #-63]	; 0xffffffc1
   15874:	b	15578 <__assert_fail@plt+0x4298>
   15878:	b	15a08 <__assert_fail@plt+0x4728>
   1587c:	b	15880 <__assert_fail@plt+0x45a0>
   15880:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15884:	tst	r0, #1
   15888:	beq	15898 <__assert_fail@plt+0x45b8>
   1588c:	ldr	r0, [fp, #8]
   15890:	cmp	r0, #2
   15894:	bne	158a4 <__assert_fail@plt+0x45c4>
   15898:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1589c:	tst	r0, #1
   158a0:	beq	158e0 <__assert_fail@plt+0x4600>
   158a4:	ldr	r0, [fp, #16]
   158a8:	movw	r1, #0
   158ac:	cmp	r0, r1
   158b0:	beq	158e0 <__assert_fail@plt+0x4600>
   158b4:	ldr	r0, [fp, #16]
   158b8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   158bc:	lsr	r1, r1, #5
   158c0:	add	r0, r0, r1, lsl #2
   158c4:	ldr	r0, [r0]
   158c8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   158cc:	and	r1, r1, #31
   158d0:	lsr	r0, r0, r1
   158d4:	and	r0, r0, #1
   158d8:	cmp	r0, #0
   158dc:	bne	158f0 <__assert_fail@plt+0x4610>
   158e0:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   158e4:	tst	r0, #1
   158e8:	bne	158f0 <__assert_fail@plt+0x4610>
   158ec:	b	15a08 <__assert_fail@plt+0x4728>
   158f0:	b	158f4 <__assert_fail@plt+0x4614>
   158f4:	b	158f8 <__assert_fail@plt+0x4618>
   158f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   158fc:	tst	r0, #1
   15900:	beq	15908 <__assert_fail@plt+0x4628>
   15904:	b	15c74 <__assert_fail@plt+0x4994>
   15908:	movw	r0, #1
   1590c:	strb	r0, [fp, #-66]	; 0xffffffbe
   15910:	ldr	r0, [fp, #8]
   15914:	cmp	r0, #2
   15918:	bne	159cc <__assert_fail@plt+0x46ec>
   1591c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15920:	tst	r0, #1
   15924:	bne	159cc <__assert_fail@plt+0x46ec>
   15928:	b	1592c <__assert_fail@plt+0x464c>
   1592c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15930:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15934:	cmp	r0, r1
   15938:	bcs	15950 <__assert_fail@plt+0x4670>
   1593c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15940:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15944:	add	r0, r0, r1
   15948:	movw	r1, #39	; 0x27
   1594c:	strb	r1, [r0]
   15950:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15954:	add	r0, r0, #1
   15958:	str	r0, [fp, #-44]	; 0xffffffd4
   1595c:	b	15960 <__assert_fail@plt+0x4680>
   15960:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15964:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15968:	cmp	r0, r1
   1596c:	bcs	15984 <__assert_fail@plt+0x46a4>
   15970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15974:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15978:	add	r0, r0, r1
   1597c:	movw	r1, #36	; 0x24
   15980:	strb	r1, [r0]
   15984:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15988:	add	r0, r0, #1
   1598c:	str	r0, [fp, #-44]	; 0xffffffd4
   15990:	b	15994 <__assert_fail@plt+0x46b4>
   15994:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15998:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1599c:	cmp	r0, r1
   159a0:	bcs	159b8 <__assert_fail@plt+0x46d8>
   159a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   159ac:	add	r0, r0, r1
   159b0:	movw	r1, #39	; 0x27
   159b4:	strb	r1, [r0]
   159b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159bc:	add	r0, r0, #1
   159c0:	str	r0, [fp, #-44]	; 0xffffffd4
   159c4:	movw	r0, #1
   159c8:	strb	r0, [fp, #-60]	; 0xffffffc4
   159cc:	b	159d0 <__assert_fail@plt+0x46f0>
   159d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   159d8:	cmp	r0, r1
   159dc:	bcs	159f4 <__assert_fail@plt+0x4714>
   159e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   159e8:	add	r0, r0, r1
   159ec:	movw	r1, #92	; 0x5c
   159f0:	strb	r1, [r0]
   159f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159f8:	add	r0, r0, #1
   159fc:	str	r0, [fp, #-44]	; 0xffffffd4
   15a00:	b	15a04 <__assert_fail@plt+0x4724>
   15a04:	b	15a08 <__assert_fail@plt+0x4728>
   15a08:	b	15a0c <__assert_fail@plt+0x472c>
   15a0c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15a10:	tst	r0, #1
   15a14:	beq	15a94 <__assert_fail@plt+0x47b4>
   15a18:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15a1c:	tst	r0, #1
   15a20:	bne	15a94 <__assert_fail@plt+0x47b4>
   15a24:	b	15a28 <__assert_fail@plt+0x4748>
   15a28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a30:	cmp	r0, r1
   15a34:	bcs	15a4c <__assert_fail@plt+0x476c>
   15a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a40:	add	r0, r0, r1
   15a44:	movw	r1, #39	; 0x27
   15a48:	strb	r1, [r0]
   15a4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a50:	add	r0, r0, #1
   15a54:	str	r0, [fp, #-44]	; 0xffffffd4
   15a58:	b	15a5c <__assert_fail@plt+0x477c>
   15a5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a64:	cmp	r0, r1
   15a68:	bcs	15a80 <__assert_fail@plt+0x47a0>
   15a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a74:	add	r0, r0, r1
   15a78:	movw	r1, #39	; 0x27
   15a7c:	strb	r1, [r0]
   15a80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a84:	add	r0, r0, #1
   15a88:	str	r0, [fp, #-44]	; 0xffffffd4
   15a8c:	movw	r0, #0
   15a90:	strb	r0, [fp, #-60]	; 0xffffffc4
   15a94:	b	15a98 <__assert_fail@plt+0x47b8>
   15a98:	b	15a9c <__assert_fail@plt+0x47bc>
   15a9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15aa0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15aa4:	cmp	r0, r1
   15aa8:	bcs	15ac0 <__assert_fail@plt+0x47e0>
   15aac:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15ab0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ab4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15ab8:	add	r1, r1, r2
   15abc:	strb	r0, [r1]
   15ac0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ac4:	add	r0, r0, #1
   15ac8:	str	r0, [fp, #-44]	; 0xffffffd4
   15acc:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   15ad0:	tst	r0, #1
   15ad4:	bne	15ae0 <__assert_fail@plt+0x4800>
   15ad8:	movw	r0, #0
   15adc:	strb	r0, [fp, #-62]	; 0xffffffc2
   15ae0:	b	15ae4 <__assert_fail@plt+0x4804>
   15ae4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15ae8:	add	r0, r0, #1
   15aec:	str	r0, [fp, #-40]	; 0xffffffd8
   15af0:	b	1489c <__assert_fail@plt+0x35bc>
   15af4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15af8:	cmp	r0, #0
   15afc:	bne	15b1c <__assert_fail@plt+0x483c>
   15b00:	ldr	r0, [fp, #8]
   15b04:	cmp	r0, #2
   15b08:	bne	15b1c <__assert_fail@plt+0x483c>
   15b0c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15b10:	tst	r0, #1
   15b14:	beq	15b1c <__assert_fail@plt+0x483c>
   15b18:	b	15c74 <__assert_fail@plt+0x4994>
   15b1c:	ldr	r0, [fp, #8]
   15b20:	cmp	r0, #2
   15b24:	bne	15bc4 <__assert_fail@plt+0x48e4>
   15b28:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15b2c:	tst	r0, #1
   15b30:	bne	15bc4 <__assert_fail@plt+0x48e4>
   15b34:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   15b38:	tst	r0, #1
   15b3c:	beq	15bc4 <__assert_fail@plt+0x48e4>
   15b40:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   15b44:	tst	r0, #1
   15b48:	beq	15b90 <__assert_fail@plt+0x48b0>
   15b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b50:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15b54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15b58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15b5c:	ldr	ip, [fp, #12]
   15b60:	ldr	lr, [fp, #16]
   15b64:	ldr	r4, [fp, #20]
   15b68:	ldr	r5, [fp, #24]
   15b6c:	movw	r6, #5
   15b70:	str	r6, [sp]
   15b74:	str	ip, [sp, #4]
   15b78:	str	lr, [sp, #8]
   15b7c:	str	r4, [sp, #12]
   15b80:	str	r5, [sp, #16]
   15b84:	bl	145b4 <__assert_fail@plt+0x32d4>
   15b88:	str	r0, [fp, #-20]	; 0xffffffec
   15b8c:	b	15cdc <__assert_fail@plt+0x49fc>
   15b90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15b94:	cmp	r0, #0
   15b98:	bne	15bbc <__assert_fail@plt+0x48dc>
   15b9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15ba0:	cmp	r0, #0
   15ba4:	beq	15bbc <__assert_fail@plt+0x48dc>
   15ba8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15bac:	str	r0, [fp, #-28]	; 0xffffffe4
   15bb0:	movw	r0, #0
   15bb4:	str	r0, [fp, #-44]	; 0xffffffd4
   15bb8:	b	1465c <__assert_fail@plt+0x337c>
   15bbc:	b	15bc0 <__assert_fail@plt+0x48e0>
   15bc0:	b	15bc4 <__assert_fail@plt+0x48e4>
   15bc4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15bc8:	movw	r1, #0
   15bcc:	cmp	r0, r1
   15bd0:	beq	15c44 <__assert_fail@plt+0x4964>
   15bd4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15bd8:	tst	r0, #1
   15bdc:	bne	15c44 <__assert_fail@plt+0x4964>
   15be0:	b	15be4 <__assert_fail@plt+0x4904>
   15be4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15be8:	ldrsb	r0, [r0]
   15bec:	cmp	r0, #0
   15bf0:	beq	15c40 <__assert_fail@plt+0x4960>
   15bf4:	b	15bf8 <__assert_fail@plt+0x4918>
   15bf8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c00:	cmp	r0, r1
   15c04:	bcs	15c20 <__assert_fail@plt+0x4940>
   15c08:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15c0c:	ldrb	r0, [r0]
   15c10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c14:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15c18:	add	r1, r1, r2
   15c1c:	strb	r0, [r1]
   15c20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c24:	add	r0, r0, #1
   15c28:	str	r0, [fp, #-44]	; 0xffffffd4
   15c2c:	b	15c30 <__assert_fail@plt+0x4950>
   15c30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15c34:	add	r0, r0, #1
   15c38:	str	r0, [fp, #-52]	; 0xffffffcc
   15c3c:	b	15be4 <__assert_fail@plt+0x4904>
   15c40:	b	15c44 <__assert_fail@plt+0x4964>
   15c44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c4c:	cmp	r0, r1
   15c50:	bcs	15c68 <__assert_fail@plt+0x4988>
   15c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c5c:	add	r0, r0, r1
   15c60:	movw	r1, #0
   15c64:	strb	r1, [r0]
   15c68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c6c:	str	r0, [fp, #-20]	; 0xffffffec
   15c70:	b	15cdc <__assert_fail@plt+0x49fc>
   15c74:	ldr	r0, [fp, #8]
   15c78:	cmp	r0, #2
   15c7c:	bne	15c94 <__assert_fail@plt+0x49b4>
   15c80:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15c84:	tst	r0, #1
   15c88:	beq	15c94 <__assert_fail@plt+0x49b4>
   15c8c:	movw	r0, #4
   15c90:	str	r0, [fp, #8]
   15c94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15ca0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ca4:	ldr	ip, [fp, #8]
   15ca8:	ldr	lr, [fp, #12]
   15cac:	mvn	r4, #2
   15cb0:	and	lr, lr, r4
   15cb4:	ldr	r4, [fp, #20]
   15cb8:	ldr	r5, [fp, #24]
   15cbc:	str	ip, [sp]
   15cc0:	str	lr, [sp, #4]
   15cc4:	movw	ip, #0
   15cc8:	str	ip, [sp, #8]
   15ccc:	str	r4, [sp, #12]
   15cd0:	str	r5, [sp, #16]
   15cd4:	bl	145b4 <__assert_fail@plt+0x32d4>
   15cd8:	str	r0, [fp, #-20]	; 0xffffffec
   15cdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   15ce0:	sub	sp, fp, #16
   15ce4:	pop	{r4, r5, r6, sl, fp, pc}
   15ce8:	push	{fp, lr}
   15cec:	mov	fp, sp
   15cf0:	sub	sp, sp, #16
   15cf4:	str	r0, [fp, #-4]
   15cf8:	str	r1, [sp, #8]
   15cfc:	str	r2, [sp, #4]
   15d00:	ldr	r0, [fp, #-4]
   15d04:	ldr	r1, [sp, #8]
   15d08:	ldr	r3, [sp, #4]
   15d0c:	movw	r2, #0
   15d10:	bl	15d1c <__assert_fail@plt+0x4a3c>
   15d14:	mov	sp, fp
   15d18:	pop	{fp, pc}
   15d1c:	push	{r4, r5, r6, sl, fp, lr}
   15d20:	add	fp, sp, #16
   15d24:	sub	sp, sp, #80	; 0x50
   15d28:	str	r0, [fp, #-20]	; 0xffffffec
   15d2c:	str	r1, [fp, #-24]	; 0xffffffe8
   15d30:	str	r2, [fp, #-28]	; 0xffffffe4
   15d34:	str	r3, [fp, #-32]	; 0xffffffe0
   15d38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d3c:	movw	r1, #0
   15d40:	cmp	r0, r1
   15d44:	beq	15d54 <__assert_fail@plt+0x4a74>
   15d48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d4c:	str	r0, [sp, #40]	; 0x28
   15d50:	b	15d64 <__assert_fail@plt+0x4a84>
   15d54:	movw	r0, #57768	; 0xe1a8
   15d58:	movt	r0, #2
   15d5c:	str	r0, [sp, #40]	; 0x28
   15d60:	b	15d64 <__assert_fail@plt+0x4a84>
   15d64:	ldr	r0, [sp, #40]	; 0x28
   15d68:	str	r0, [fp, #-36]	; 0xffffffdc
   15d6c:	bl	111e4 <__errno_location@plt>
   15d70:	ldr	r0, [r0]
   15d74:	str	r0, [fp, #-40]	; 0xffffffd8
   15d78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d7c:	ldr	r0, [r0, #4]
   15d80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d84:	movw	r2, #0
   15d88:	cmp	r1, r2
   15d8c:	movw	r1, #0
   15d90:	movne	r1, #1
   15d94:	tst	r1, #1
   15d98:	mov	r1, r2
   15d9c:	moveq	r1, #1
   15da0:	orr	r0, r0, r1
   15da4:	str	r0, [fp, #-44]	; 0xffffffd4
   15da8:	ldr	r0, [fp, #-20]	; 0xffffffec
   15dac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15db0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15db4:	ldr	r1, [r1]
   15db8:	ldr	ip, [fp, #-44]	; 0xffffffd4
   15dbc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15dc0:	add	lr, lr, #8
   15dc4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15dc8:	ldr	r4, [r4, #40]	; 0x28
   15dcc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15dd0:	ldr	r5, [r5, #44]	; 0x2c
   15dd4:	str	r0, [sp, #36]	; 0x24
   15dd8:	mov	r0, r2
   15ddc:	str	r1, [sp, #32]
   15de0:	mov	r1, r2
   15de4:	ldr	r2, [sp, #36]	; 0x24
   15de8:	ldr	r6, [sp, #32]
   15dec:	str	r6, [sp]
   15df0:	str	ip, [sp, #4]
   15df4:	str	lr, [sp, #8]
   15df8:	str	r4, [sp, #12]
   15dfc:	str	r5, [sp, #16]
   15e00:	bl	145b4 <__assert_fail@plt+0x32d4>
   15e04:	add	r0, r0, #1
   15e08:	str	r0, [sp, #48]	; 0x30
   15e0c:	ldr	r0, [sp, #48]	; 0x30
   15e10:	bl	17200 <__assert_fail@plt+0x5f20>
   15e14:	str	r0, [sp, #44]	; 0x2c
   15e18:	ldr	r0, [sp, #44]	; 0x2c
   15e1c:	ldr	r1, [sp, #48]	; 0x30
   15e20:	ldr	r2, [fp, #-20]	; 0xffffffec
   15e24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e28:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15e2c:	ldr	ip, [ip]
   15e30:	ldr	lr, [fp, #-44]	; 0xffffffd4
   15e34:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15e38:	add	r4, r4, #8
   15e3c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15e40:	ldr	r5, [r5, #40]	; 0x28
   15e44:	ldr	r6, [fp, #-36]	; 0xffffffdc
   15e48:	ldr	r6, [r6, #44]	; 0x2c
   15e4c:	str	ip, [sp]
   15e50:	str	lr, [sp, #4]
   15e54:	str	r4, [sp, #8]
   15e58:	str	r5, [sp, #12]
   15e5c:	str	r6, [sp, #16]
   15e60:	bl	145b4 <__assert_fail@plt+0x32d4>
   15e64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15e68:	str	r0, [sp, #28]
   15e6c:	str	r1, [sp, #24]
   15e70:	bl	111e4 <__errno_location@plt>
   15e74:	ldr	r1, [sp, #24]
   15e78:	str	r1, [r0]
   15e7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15e80:	movw	r2, #0
   15e84:	cmp	r0, r2
   15e88:	beq	15e9c <__assert_fail@plt+0x4bbc>
   15e8c:	ldr	r0, [sp, #48]	; 0x30
   15e90:	sub	r0, r0, #1
   15e94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15e98:	str	r0, [r1]
   15e9c:	ldr	r0, [sp, #44]	; 0x2c
   15ea0:	sub	sp, fp, #16
   15ea4:	pop	{r4, r5, r6, sl, fp, pc}
   15ea8:	push	{fp, lr}
   15eac:	mov	fp, sp
   15eb0:	sub	sp, sp, #8
   15eb4:	movw	r0, #57616	; 0xe110
   15eb8:	movt	r0, #2
   15ebc:	ldr	r0, [r0]
   15ec0:	str	r0, [sp, #4]
   15ec4:	movw	r0, #1
   15ec8:	str	r0, [sp]
   15ecc:	ldr	r0, [sp]
   15ed0:	movw	r1, #57620	; 0xe114
   15ed4:	movt	r1, #2
   15ed8:	ldr	r1, [r1]
   15edc:	cmp	r0, r1
   15ee0:	bge	15f08 <__assert_fail@plt+0x4c28>
   15ee4:	ldr	r0, [sp, #4]
   15ee8:	ldr	r1, [sp]
   15eec:	add	r0, r0, r1, lsl #3
   15ef0:	ldr	r0, [r0, #4]
   15ef4:	bl	138b0 <__assert_fail@plt+0x25d0>
   15ef8:	ldr	r0, [sp]
   15efc:	add	r0, r0, #1
   15f00:	str	r0, [sp]
   15f04:	b	15ecc <__assert_fail@plt+0x4bec>
   15f08:	ldr	r0, [sp, #4]
   15f0c:	ldr	r0, [r0, #4]
   15f10:	movw	r1, #57816	; 0xe1d8
   15f14:	movt	r1, #2
   15f18:	cmp	r0, r1
   15f1c:	beq	15f48 <__assert_fail@plt+0x4c68>
   15f20:	ldr	r0, [sp, #4]
   15f24:	ldr	r0, [r0, #4]
   15f28:	bl	138b0 <__assert_fail@plt+0x25d0>
   15f2c:	movw	r0, #256	; 0x100
   15f30:	movw	r1, #57624	; 0xe118
   15f34:	movt	r1, #2
   15f38:	str	r0, [r1]
   15f3c:	movw	r0, #57816	; 0xe1d8
   15f40:	movt	r0, #2
   15f44:	str	r0, [r1, #4]
   15f48:	ldr	r0, [sp, #4]
   15f4c:	movw	r1, #57624	; 0xe118
   15f50:	movt	r1, #2
   15f54:	cmp	r0, r1
   15f58:	beq	15f78 <__assert_fail@plt+0x4c98>
   15f5c:	ldr	r0, [sp, #4]
   15f60:	bl	138b0 <__assert_fail@plt+0x25d0>
   15f64:	movw	r0, #57616	; 0xe110
   15f68:	movt	r0, #2
   15f6c:	movw	r1, #57624	; 0xe118
   15f70:	movt	r1, #2
   15f74:	str	r1, [r0]
   15f78:	movw	r0, #57620	; 0xe114
   15f7c:	movt	r0, #2
   15f80:	movw	r1, #1
   15f84:	str	r1, [r0]
   15f88:	mov	sp, fp
   15f8c:	pop	{fp, pc}
   15f90:	push	{fp, lr}
   15f94:	mov	fp, sp
   15f98:	sub	sp, sp, #8
   15f9c:	str	r0, [sp, #4]
   15fa0:	str	r1, [sp]
   15fa4:	ldr	r0, [sp, #4]
   15fa8:	ldr	r1, [sp]
   15fac:	mvn	r2, #0
   15fb0:	movw	r3, #57768	; 0xe1a8
   15fb4:	movt	r3, #2
   15fb8:	bl	15fc4 <__assert_fail@plt+0x4ce4>
   15fbc:	mov	sp, fp
   15fc0:	pop	{fp, pc}
   15fc4:	push	{r4, r5, r6, sl, fp, lr}
   15fc8:	add	fp, sp, #16
   15fcc:	sub	sp, sp, #80	; 0x50
   15fd0:	str	r0, [fp, #-20]	; 0xffffffec
   15fd4:	str	r1, [fp, #-24]	; 0xffffffe8
   15fd8:	str	r2, [fp, #-28]	; 0xffffffe4
   15fdc:	str	r3, [fp, #-32]	; 0xffffffe0
   15fe0:	bl	111e4 <__errno_location@plt>
   15fe4:	ldr	r1, [pc, #672]	; 1628c <__assert_fail@plt+0x4fac>
   15fe8:	ldr	r0, [r0]
   15fec:	str	r0, [fp, #-36]	; 0xffffffdc
   15ff0:	movw	r0, #57616	; 0xe110
   15ff4:	movt	r0, #2
   15ff8:	ldr	r0, [r0]
   15ffc:	str	r0, [fp, #-40]	; 0xffffffd8
   16000:	str	r1, [fp, #-44]	; 0xffffffd4
   16004:	ldr	r0, [fp, #-20]	; 0xffffffec
   16008:	movw	r1, #0
   1600c:	cmp	r1, r0
   16010:	bgt	16024 <__assert_fail@plt+0x4d44>
   16014:	ldr	r0, [fp, #-20]	; 0xffffffec
   16018:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1601c:	cmp	r0, r1
   16020:	blt	16028 <__assert_fail@plt+0x4d48>
   16024:	bl	112b0 <abort@plt>
   16028:	movw	r0, #57620	; 0xe114
   1602c:	movt	r0, #2
   16030:	ldr	r0, [r0]
   16034:	ldr	r1, [fp, #-20]	; 0xffffffec
   16038:	cmp	r0, r1
   1603c:	bgt	16134 <__assert_fail@plt+0x4e54>
   16040:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16044:	movw	r1, #57624	; 0xe118
   16048:	movt	r1, #2
   1604c:	cmp	r0, r1
   16050:	movw	r0, #0
   16054:	moveq	r0, #1
   16058:	and	r0, r0, #1
   1605c:	strb	r0, [fp, #-45]	; 0xffffffd3
   16060:	movw	r0, #57620	; 0xe114
   16064:	movt	r0, #2
   16068:	ldr	r0, [r0]
   1606c:	str	r0, [sp, #44]	; 0x2c
   16070:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16074:	tst	r0, #1
   16078:	beq	16088 <__assert_fail@plt+0x4da8>
   1607c:	movw	r0, #0
   16080:	str	r0, [sp, #24]
   16084:	b	16090 <__assert_fail@plt+0x4db0>
   16088:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1608c:	str	r0, [sp, #24]
   16090:	ldr	r0, [sp, #24]
   16094:	ldr	r1, [fp, #-20]	; 0xffffffec
   16098:	movw	r2, #57620	; 0xe114
   1609c:	movt	r2, #2
   160a0:	ldr	r2, [r2]
   160a4:	sub	r1, r1, r2
   160a8:	add	r2, r1, #1
   160ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   160b0:	add	r1, sp, #44	; 0x2c
   160b4:	movw	ip, #8
   160b8:	str	ip, [sp]
   160bc:	bl	1743c <__assert_fail@plt+0x615c>
   160c0:	str	r0, [fp, #-40]	; 0xffffffd8
   160c4:	movw	r1, #57616	; 0xe110
   160c8:	movt	r1, #2
   160cc:	str	r0, [r1]
   160d0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   160d4:	tst	r0, #1
   160d8:	beq	160f8 <__assert_fail@plt+0x4e18>
   160dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   160e0:	movw	r1, #57624	; 0xe118
   160e4:	movt	r1, #2
   160e8:	ldr	r2, [r1]
   160ec:	str	r2, [r0]
   160f0:	ldr	r1, [r1, #4]
   160f4:	str	r1, [r0, #4]
   160f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   160fc:	movw	r1, #57620	; 0xe114
   16100:	movt	r1, #2
   16104:	ldr	r1, [r1]
   16108:	add	r0, r0, r1, lsl #3
   1610c:	ldr	r2, [sp, #44]	; 0x2c
   16110:	sub	r1, r2, r1
   16114:	lsl	r2, r1, #3
   16118:	movw	r1, #0
   1611c:	and	r1, r1, #255	; 0xff
   16120:	bl	111fc <memset@plt>
   16124:	ldr	r0, [sp, #44]	; 0x2c
   16128:	movw	r1, #57620	; 0xe114
   1612c:	movt	r1, #2
   16130:	str	r0, [r1]
   16134:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16138:	ldr	r1, [fp, #-20]	; 0xffffffec
   1613c:	ldr	r0, [r0, r1, lsl #3]
   16140:	str	r0, [sp, #40]	; 0x28
   16144:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16148:	ldr	r1, [fp, #-20]	; 0xffffffec
   1614c:	add	r0, r0, r1, lsl #3
   16150:	ldr	r0, [r0, #4]
   16154:	str	r0, [sp, #36]	; 0x24
   16158:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1615c:	ldr	r0, [r0, #4]
   16160:	orr	r0, r0, #1
   16164:	str	r0, [sp, #32]
   16168:	ldr	r0, [sp, #36]	; 0x24
   1616c:	ldr	r1, [sp, #40]	; 0x28
   16170:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16174:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16178:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1617c:	ldr	ip, [ip]
   16180:	ldr	lr, [sp, #32]
   16184:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16188:	add	r4, r4, #8
   1618c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16190:	ldr	r5, [r5, #40]	; 0x28
   16194:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16198:	ldr	r6, [r6, #44]	; 0x2c
   1619c:	str	ip, [sp]
   161a0:	str	lr, [sp, #4]
   161a4:	str	r4, [sp, #8]
   161a8:	str	r5, [sp, #12]
   161ac:	str	r6, [sp, #16]
   161b0:	bl	145b4 <__assert_fail@plt+0x32d4>
   161b4:	str	r0, [sp, #28]
   161b8:	ldr	r0, [sp, #40]	; 0x28
   161bc:	ldr	r1, [sp, #28]
   161c0:	cmp	r0, r1
   161c4:	bhi	1626c <__assert_fail@plt+0x4f8c>
   161c8:	ldr	r0, [sp, #28]
   161cc:	add	r0, r0, #1
   161d0:	str	r0, [sp, #40]	; 0x28
   161d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   161d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   161dc:	add	r1, r1, r2, lsl #3
   161e0:	str	r0, [r1]
   161e4:	ldr	r0, [sp, #36]	; 0x24
   161e8:	movw	r1, #57816	; 0xe1d8
   161ec:	movt	r1, #2
   161f0:	cmp	r0, r1
   161f4:	beq	16200 <__assert_fail@plt+0x4f20>
   161f8:	ldr	r0, [sp, #36]	; 0x24
   161fc:	bl	138b0 <__assert_fail@plt+0x25d0>
   16200:	ldr	r0, [sp, #40]	; 0x28
   16204:	bl	17200 <__assert_fail@plt+0x5f20>
   16208:	mov	r1, r0
   1620c:	str	r0, [sp, #36]	; 0x24
   16210:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16214:	ldr	r2, [fp, #-20]	; 0xffffffec
   16218:	add	r0, r0, r2, lsl #3
   1621c:	str	r1, [r0, #4]
   16220:	ldr	r0, [sp, #36]	; 0x24
   16224:	ldr	r1, [sp, #40]	; 0x28
   16228:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1622c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16230:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16234:	ldr	ip, [ip]
   16238:	ldr	lr, [sp, #32]
   1623c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16240:	add	r4, r4, #8
   16244:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16248:	ldr	r5, [r5, #40]	; 0x28
   1624c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16250:	ldr	r6, [r6, #44]	; 0x2c
   16254:	str	ip, [sp]
   16258:	str	lr, [sp, #4]
   1625c:	str	r4, [sp, #8]
   16260:	str	r5, [sp, #12]
   16264:	str	r6, [sp, #16]
   16268:	bl	145b4 <__assert_fail@plt+0x32d4>
   1626c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16270:	str	r0, [sp, #20]
   16274:	bl	111e4 <__errno_location@plt>
   16278:	ldr	r1, [sp, #20]
   1627c:	str	r1, [r0]
   16280:	ldr	r0, [sp, #36]	; 0x24
   16284:	sub	sp, fp, #16
   16288:	pop	{r4, r5, r6, sl, fp, pc}
   1628c:	svcvc	0x00ffffff
   16290:	push	{fp, lr}
   16294:	mov	fp, sp
   16298:	sub	sp, sp, #16
   1629c:	str	r0, [fp, #-4]
   162a0:	str	r1, [sp, #8]
   162a4:	str	r2, [sp, #4]
   162a8:	ldr	r0, [fp, #-4]
   162ac:	ldr	r1, [sp, #8]
   162b0:	ldr	r2, [sp, #4]
   162b4:	movw	r3, #57768	; 0xe1a8
   162b8:	movt	r3, #2
   162bc:	bl	15fc4 <__assert_fail@plt+0x4ce4>
   162c0:	mov	sp, fp
   162c4:	pop	{fp, pc}
   162c8:	push	{fp, lr}
   162cc:	mov	fp, sp
   162d0:	sub	sp, sp, #8
   162d4:	str	r0, [sp, #4]
   162d8:	ldr	r1, [sp, #4]
   162dc:	movw	r0, #0
   162e0:	bl	15f90 <__assert_fail@plt+0x4cb0>
   162e4:	mov	sp, fp
   162e8:	pop	{fp, pc}
   162ec:	push	{fp, lr}
   162f0:	mov	fp, sp
   162f4:	sub	sp, sp, #8
   162f8:	str	r0, [sp, #4]
   162fc:	str	r1, [sp]
   16300:	ldr	r1, [sp, #4]
   16304:	ldr	r2, [sp]
   16308:	movw	r0, #0
   1630c:	bl	16290 <__assert_fail@plt+0x4fb0>
   16310:	mov	sp, fp
   16314:	pop	{fp, pc}
   16318:	push	{fp, lr}
   1631c:	mov	fp, sp
   16320:	sub	sp, sp, #64	; 0x40
   16324:	str	r0, [fp, #-4]
   16328:	str	r1, [fp, #-8]
   1632c:	str	r2, [fp, #-12]
   16330:	ldr	r1, [fp, #-8]
   16334:	add	r0, sp, #4
   16338:	bl	16358 <__assert_fail@plt+0x5078>
   1633c:	ldr	r0, [fp, #-4]
   16340:	ldr	r1, [fp, #-12]
   16344:	mvn	r2, #0
   16348:	add	r3, sp, #4
   1634c:	bl	15fc4 <__assert_fail@plt+0x4ce4>
   16350:	mov	sp, fp
   16354:	pop	{fp, pc}
   16358:	push	{fp, lr}
   1635c:	mov	fp, sp
   16360:	sub	sp, sp, #8
   16364:	str	r1, [sp, #4]
   16368:	mov	r1, r0
   1636c:	str	r0, [sp]
   16370:	mov	r0, r1
   16374:	movw	r1, #0
   16378:	and	r1, r1, #255	; 0xff
   1637c:	movw	r2, #48	; 0x30
   16380:	bl	111fc <memset@plt>
   16384:	ldr	r0, [sp, #4]
   16388:	cmp	r0, #10
   1638c:	bne	16394 <__assert_fail@plt+0x50b4>
   16390:	bl	112b0 <abort@plt>
   16394:	ldr	r0, [sp, #4]
   16398:	ldr	r1, [sp]
   1639c:	str	r0, [r1]
   163a0:	mov	sp, fp
   163a4:	pop	{fp, pc}
   163a8:	push	{fp, lr}
   163ac:	mov	fp, sp
   163b0:	sub	sp, sp, #64	; 0x40
   163b4:	str	r0, [fp, #-4]
   163b8:	str	r1, [fp, #-8]
   163bc:	str	r2, [fp, #-12]
   163c0:	str	r3, [fp, #-16]
   163c4:	ldr	r1, [fp, #-8]
   163c8:	mov	r0, sp
   163cc:	bl	16358 <__assert_fail@plt+0x5078>
   163d0:	ldr	r0, [fp, #-4]
   163d4:	ldr	r1, [fp, #-12]
   163d8:	ldr	r2, [fp, #-16]
   163dc:	mov	r3, sp
   163e0:	bl	15fc4 <__assert_fail@plt+0x4ce4>
   163e4:	mov	sp, fp
   163e8:	pop	{fp, pc}
   163ec:	push	{fp, lr}
   163f0:	mov	fp, sp
   163f4:	sub	sp, sp, #8
   163f8:	str	r0, [sp, #4]
   163fc:	str	r1, [sp]
   16400:	ldr	r1, [sp, #4]
   16404:	ldr	r2, [sp]
   16408:	movw	r0, #0
   1640c:	bl	16318 <__assert_fail@plt+0x5038>
   16410:	mov	sp, fp
   16414:	pop	{fp, pc}
   16418:	push	{fp, lr}
   1641c:	mov	fp, sp
   16420:	sub	sp, sp, #16
   16424:	str	r0, [fp, #-4]
   16428:	str	r1, [sp, #8]
   1642c:	str	r2, [sp, #4]
   16430:	ldr	r1, [fp, #-4]
   16434:	ldr	r2, [sp, #8]
   16438:	ldr	r3, [sp, #4]
   1643c:	movw	r0, #0
   16440:	bl	163a8 <__assert_fail@plt+0x50c8>
   16444:	mov	sp, fp
   16448:	pop	{fp, pc}
   1644c:	push	{fp, lr}
   16450:	mov	fp, sp
   16454:	sub	sp, sp, #72	; 0x48
   16458:	movw	r3, #57768	; 0xe1a8
   1645c:	movt	r3, #2
   16460:	str	r0, [fp, #-4]
   16464:	str	r1, [fp, #-8]
   16468:	strb	r2, [fp, #-9]
   1646c:	add	r0, sp, #12
   16470:	mov	r1, r0
   16474:	str	r0, [sp, #8]
   16478:	mov	r0, r1
   1647c:	mov	r1, r3
   16480:	movw	r2, #48	; 0x30
   16484:	bl	110ac <memcpy@plt>
   16488:	ldr	r0, [sp, #8]
   1648c:	ldrb	r1, [fp, #-9]
   16490:	movw	r2, #1
   16494:	bl	1435c <__assert_fail@plt+0x307c>
   16498:	ldr	r1, [fp, #-4]
   1649c:	ldr	r2, [fp, #-8]
   164a0:	movw	r3, #0
   164a4:	str	r0, [sp, #4]
   164a8:	mov	r0, r3
   164ac:	add	r3, sp, #12
   164b0:	bl	15fc4 <__assert_fail@plt+0x4ce4>
   164b4:	mov	sp, fp
   164b8:	pop	{fp, pc}
   164bc:	push	{fp, lr}
   164c0:	mov	fp, sp
   164c4:	sub	sp, sp, #8
   164c8:	str	r0, [sp, #4]
   164cc:	strb	r1, [sp, #3]
   164d0:	ldr	r0, [sp, #4]
   164d4:	mvn	r1, #0
   164d8:	ldrb	r2, [sp, #3]
   164dc:	bl	1644c <__assert_fail@plt+0x516c>
   164e0:	mov	sp, fp
   164e4:	pop	{fp, pc}
   164e8:	push	{fp, lr}
   164ec:	mov	fp, sp
   164f0:	sub	sp, sp, #8
   164f4:	str	r0, [sp, #4]
   164f8:	ldr	r0, [sp, #4]
   164fc:	movw	r1, #58	; 0x3a
   16500:	and	r1, r1, #255	; 0xff
   16504:	bl	164bc <__assert_fail@plt+0x51dc>
   16508:	mov	sp, fp
   1650c:	pop	{fp, pc}
   16510:	push	{fp, lr}
   16514:	mov	fp, sp
   16518:	sub	sp, sp, #8
   1651c:	str	r0, [sp, #4]
   16520:	str	r1, [sp]
   16524:	ldr	r0, [sp, #4]
   16528:	ldr	r1, [sp]
   1652c:	movw	r2, #58	; 0x3a
   16530:	and	r2, r2, #255	; 0xff
   16534:	bl	1644c <__assert_fail@plt+0x516c>
   16538:	mov	sp, fp
   1653c:	pop	{fp, pc}
   16540:	push	{fp, lr}
   16544:	mov	fp, sp
   16548:	sub	sp, sp, #120	; 0x78
   1654c:	str	r0, [fp, #-4]
   16550:	str	r1, [fp, #-8]
   16554:	str	r2, [fp, #-12]
   16558:	ldr	r1, [fp, #-8]
   1655c:	add	r0, sp, #12
   16560:	bl	16358 <__assert_fail@plt+0x5078>
   16564:	add	r0, sp, #60	; 0x3c
   16568:	mov	r1, r0
   1656c:	add	r2, sp, #12
   16570:	str	r0, [sp, #8]
   16574:	mov	r0, r1
   16578:	mov	r1, r2
   1657c:	movw	r2, #48	; 0x30
   16580:	bl	110ac <memcpy@plt>
   16584:	ldr	r0, [sp, #8]
   16588:	movw	r1, #58	; 0x3a
   1658c:	and	r1, r1, #255	; 0xff
   16590:	movw	r2, #1
   16594:	bl	1435c <__assert_fail@plt+0x307c>
   16598:	ldr	r1, [fp, #-4]
   1659c:	ldr	r2, [fp, #-12]
   165a0:	str	r0, [sp, #4]
   165a4:	mov	r0, r1
   165a8:	mov	r1, r2
   165ac:	mvn	r2, #0
   165b0:	add	r3, sp, #60	; 0x3c
   165b4:	bl	15fc4 <__assert_fail@plt+0x4ce4>
   165b8:	mov	sp, fp
   165bc:	pop	{fp, pc}
   165c0:	push	{fp, lr}
   165c4:	mov	fp, sp
   165c8:	sub	sp, sp, #24
   165cc:	str	r0, [fp, #-4]
   165d0:	str	r1, [fp, #-8]
   165d4:	str	r2, [sp, #12]
   165d8:	str	r3, [sp, #8]
   165dc:	ldr	r0, [fp, #-4]
   165e0:	ldr	r1, [fp, #-8]
   165e4:	ldr	r2, [sp, #12]
   165e8:	ldr	r3, [sp, #8]
   165ec:	mvn	ip, #0
   165f0:	str	ip, [sp]
   165f4:	bl	16600 <__assert_fail@plt+0x5320>
   165f8:	mov	sp, fp
   165fc:	pop	{fp, pc}
   16600:	push	{fp, lr}
   16604:	mov	fp, sp
   16608:	sub	sp, sp, #72	; 0x48
   1660c:	ldr	ip, [fp, #8]
   16610:	movw	lr, #57768	; 0xe1a8
   16614:	movt	lr, #2
   16618:	str	r0, [fp, #-4]
   1661c:	str	r1, [fp, #-8]
   16620:	str	r2, [fp, #-12]
   16624:	str	r3, [fp, #-16]
   16628:	add	r0, sp, #8
   1662c:	mov	r1, r0
   16630:	str	r0, [sp, #4]
   16634:	mov	r0, r1
   16638:	mov	r1, lr
   1663c:	movw	r2, #48	; 0x30
   16640:	str	ip, [sp]
   16644:	bl	110ac <memcpy@plt>
   16648:	ldr	r1, [fp, #-8]
   1664c:	ldr	r2, [fp, #-12]
   16650:	ldr	r0, [sp, #4]
   16654:	bl	1445c <__assert_fail@plt+0x317c>
   16658:	ldr	r0, [fp, #-4]
   1665c:	ldr	r1, [fp, #-16]
   16660:	ldr	r2, [fp, #8]
   16664:	add	r3, sp, #8
   16668:	bl	15fc4 <__assert_fail@plt+0x4ce4>
   1666c:	mov	sp, fp
   16670:	pop	{fp, pc}
   16674:	push	{fp, lr}
   16678:	mov	fp, sp
   1667c:	sub	sp, sp, #16
   16680:	str	r0, [fp, #-4]
   16684:	str	r1, [sp, #8]
   16688:	str	r2, [sp, #4]
   1668c:	ldr	r1, [fp, #-4]
   16690:	ldr	r2, [sp, #8]
   16694:	ldr	r3, [sp, #4]
   16698:	movw	r0, #0
   1669c:	bl	165c0 <__assert_fail@plt+0x52e0>
   166a0:	mov	sp, fp
   166a4:	pop	{fp, pc}
   166a8:	push	{fp, lr}
   166ac:	mov	fp, sp
   166b0:	sub	sp, sp, #24
   166b4:	str	r0, [fp, #-4]
   166b8:	str	r1, [fp, #-8]
   166bc:	str	r2, [sp, #12]
   166c0:	str	r3, [sp, #8]
   166c4:	ldr	r1, [fp, #-4]
   166c8:	ldr	r2, [fp, #-8]
   166cc:	ldr	r3, [sp, #12]
   166d0:	ldr	r0, [sp, #8]
   166d4:	movw	ip, #0
   166d8:	str	r0, [sp, #4]
   166dc:	mov	r0, ip
   166e0:	ldr	ip, [sp, #4]
   166e4:	str	ip, [sp]
   166e8:	bl	16600 <__assert_fail@plt+0x5320>
   166ec:	mov	sp, fp
   166f0:	pop	{fp, pc}
   166f4:	push	{fp, lr}
   166f8:	mov	fp, sp
   166fc:	sub	sp, sp, #16
   16700:	str	r0, [fp, #-4]
   16704:	str	r1, [sp, #8]
   16708:	str	r2, [sp, #4]
   1670c:	ldr	r0, [fp, #-4]
   16710:	ldr	r1, [sp, #8]
   16714:	ldr	r2, [sp, #4]
   16718:	movw	r3, #57632	; 0xe120
   1671c:	movt	r3, #2
   16720:	bl	15fc4 <__assert_fail@plt+0x4ce4>
   16724:	mov	sp, fp
   16728:	pop	{fp, pc}
   1672c:	push	{fp, lr}
   16730:	mov	fp, sp
   16734:	sub	sp, sp, #8
   16738:	str	r0, [sp, #4]
   1673c:	str	r1, [sp]
   16740:	ldr	r1, [sp, #4]
   16744:	ldr	r2, [sp]
   16748:	movw	r0, #0
   1674c:	bl	166f4 <__assert_fail@plt+0x5414>
   16750:	mov	sp, fp
   16754:	pop	{fp, pc}
   16758:	push	{fp, lr}
   1675c:	mov	fp, sp
   16760:	sub	sp, sp, #8
   16764:	str	r0, [sp, #4]
   16768:	str	r1, [sp]
   1676c:	ldr	r0, [sp, #4]
   16770:	ldr	r1, [sp]
   16774:	mvn	r2, #0
   16778:	bl	166f4 <__assert_fail@plt+0x5414>
   1677c:	mov	sp, fp
   16780:	pop	{fp, pc}
   16784:	push	{fp, lr}
   16788:	mov	fp, sp
   1678c:	sub	sp, sp, #8
   16790:	str	r0, [sp, #4]
   16794:	ldr	r1, [sp, #4]
   16798:	movw	r0, #0
   1679c:	bl	16758 <__assert_fail@plt+0x5478>
   167a0:	mov	sp, fp
   167a4:	pop	{fp, pc}
   167a8:	push	{fp, lr}
   167ac:	mov	fp, sp
   167b0:	sub	sp, sp, #24
   167b4:	str	r0, [fp, #-8]
   167b8:	str	r1, [sp, #12]
   167bc:	ldr	r0, [fp, #-8]
   167c0:	bl	111b4 <gettext@plt>
   167c4:	str	r0, [sp, #8]
   167c8:	ldr	r0, [sp, #8]
   167cc:	ldr	r1, [fp, #-8]
   167d0:	cmp	r0, r1
   167d4:	beq	167e4 <__assert_fail@plt+0x5504>
   167d8:	ldr	r0, [sp, #8]
   167dc:	str	r0, [fp, #-4]
   167e0:	b	168b0 <__assert_fail@plt+0x55d0>
   167e4:	bl	1a724 <__assert_fail@plt+0x9444>
   167e8:	str	r0, [sp, #4]
   167ec:	ldr	r0, [sp, #4]
   167f0:	movw	r1, #54211	; 0xd3c3
   167f4:	movt	r1, #1
   167f8:	bl	1a0c0 <__assert_fail@plt+0x8de0>
   167fc:	cmp	r0, #0
   16800:	bne	16838 <__assert_fail@plt+0x5558>
   16804:	ldr	r0, [fp, #-8]
   16808:	ldrb	r0, [r0]
   1680c:	cmp	r0, #96	; 0x60
   16810:	movw	r0, #0
   16814:	moveq	r0, #1
   16818:	tst	r0, #1
   1681c:	movw	r0, #54221	; 0xd3cd
   16820:	movt	r0, #1
   16824:	movw	r1, #54217	; 0xd3c9
   16828:	movt	r1, #1
   1682c:	movne	r0, r1
   16830:	str	r0, [fp, #-4]
   16834:	b	168b0 <__assert_fail@plt+0x55d0>
   16838:	ldr	r0, [sp, #4]
   1683c:	movw	r1, #54225	; 0xd3d1
   16840:	movt	r1, #1
   16844:	bl	1a0c0 <__assert_fail@plt+0x8de0>
   16848:	cmp	r0, #0
   1684c:	bne	16884 <__assert_fail@plt+0x55a4>
   16850:	ldr	r0, [fp, #-8]
   16854:	ldrb	r0, [r0]
   16858:	cmp	r0, #96	; 0x60
   1685c:	movw	r0, #0
   16860:	moveq	r0, #1
   16864:	tst	r0, #1
   16868:	movw	r0, #54237	; 0xd3dd
   1686c:	movt	r0, #1
   16870:	movw	r1, #54233	; 0xd3d9
   16874:	movt	r1, #1
   16878:	movne	r0, r1
   1687c:	str	r0, [fp, #-4]
   16880:	b	168b0 <__assert_fail@plt+0x55d0>
   16884:	ldr	r0, [sp, #12]
   16888:	cmp	r0, #9
   1688c:	movw	r0, #0
   16890:	moveq	r0, #1
   16894:	tst	r0, #1
   16898:	movw	r0, #54209	; 0xd3c1
   1689c:	movt	r0, #1
   168a0:	movw	r1, #54205	; 0xd3bd
   168a4:	movt	r1, #1
   168a8:	movne	r0, r1
   168ac:	str	r0, [fp, #-4]
   168b0:	ldr	r0, [fp, #-4]
   168b4:	mov	sp, fp
   168b8:	pop	{fp, pc}
   168bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   168c0:	add	fp, sp, #28
   168c4:	sub	sp, sp, #196	; 0xc4
   168c8:	ldr	ip, [fp, #12]
   168cc:	ldr	lr, [fp, #8]
   168d0:	str	r0, [fp, #-32]	; 0xffffffe0
   168d4:	str	r1, [fp, #-36]	; 0xffffffdc
   168d8:	str	r2, [fp, #-40]	; 0xffffffd8
   168dc:	str	r3, [fp, #-44]	; 0xffffffd4
   168e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   168e4:	movw	r1, #0
   168e8:	cmp	r0, r1
   168ec:	beq	16920 <__assert_fail@plt+0x5640>
   168f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   168f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   168f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   168fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16900:	movw	ip, #54324	; 0xd434
   16904:	movt	ip, #1
   16908:	str	r1, [fp, #-48]	; 0xffffffd0
   1690c:	mov	r1, ip
   16910:	ldr	ip, [fp, #-48]	; 0xffffffd0
   16914:	str	ip, [sp]
   16918:	bl	111cc <fprintf@plt>
   1691c:	b	16938 <__assert_fail@plt+0x5658>
   16920:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16924:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16928:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1692c:	movw	r1, #54336	; 0xd440
   16930:	movt	r1, #1
   16934:	bl	111cc <fprintf@plt>
   16938:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1693c:	movw	r1, #54343	; 0xd447
   16940:	movt	r1, #1
   16944:	str	r0, [fp, #-52]	; 0xffffffcc
   16948:	mov	r0, r1
   1694c:	bl	111b4 <gettext@plt>
   16950:	movw	r1, #55061	; 0xd715
   16954:	movt	r1, #1
   16958:	movw	r3, #2022	; 0x7e6
   1695c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16960:	str	r0, [fp, #-56]	; 0xffffffc8
   16964:	mov	r0, r2
   16968:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1696c:	bl	111cc <fprintf@plt>
   16970:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16974:	movw	r2, #53274	; 0xd01a
   16978:	movt	r2, #1
   1697c:	str	r0, [fp, #-60]	; 0xffffffc4
   16980:	mov	r0, r2
   16984:	str	r2, [fp, #-64]	; 0xffffffc0
   16988:	bl	11034 <fputs_unlocked@plt>
   1698c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16990:	movw	r2, #54347	; 0xd44b
   16994:	movt	r2, #1
   16998:	str	r0, [fp, #-68]	; 0xffffffbc
   1699c:	mov	r0, r2
   169a0:	str	r1, [fp, #-72]	; 0xffffffb8
   169a4:	bl	111b4 <gettext@plt>
   169a8:	movw	r2, #54518	; 0xd4f6
   169ac:	movt	r2, #1
   169b0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   169b4:	str	r0, [fp, #-76]	; 0xffffffb4
   169b8:	mov	r0, r1
   169bc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   169c0:	bl	111cc <fprintf@plt>
   169c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   169c8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   169cc:	str	r0, [fp, #-80]	; 0xffffffb0
   169d0:	mov	r0, r2
   169d4:	bl	11034 <fputs_unlocked@plt>
   169d8:	ldr	r1, [fp, #12]
   169dc:	cmp	r1, #9
   169e0:	str	r1, [fp, #-84]	; 0xffffffac
   169e4:	bhi	16e00 <__assert_fail@plt+0x5b20>
   169e8:	add	r0, pc, #8
   169ec:	ldr	r1, [fp, #-84]	; 0xffffffac
   169f0:	ldr	r0, [r0, r1, lsl #2]
   169f4:	mov	pc, r0
   169f8:	andeq	r6, r1, r0, lsr #20
   169fc:	andeq	r6, r1, r4, lsr #20
   16a00:	andeq	r6, r1, ip, asr sl
   16a04:	muleq	r1, ip, sl
   16a08:	strdeq	r6, [r1], -r4
   16a0c:	andeq	r6, r1, r8, asr fp
   16a10:	andeq	r6, r1, r8, asr #23
   16a14:	andeq	r6, r1, r4, asr #24
   16a18:	andeq	r6, r1, ip, asr #25
   16a1c:	andeq	r6, r1, r0, ror #26
   16a20:	b	16e9c <__assert_fail@plt+0x5bbc>
   16a24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16a28:	movw	r1, #54552	; 0xd518
   16a2c:	movt	r1, #1
   16a30:	str	r0, [fp, #-88]	; 0xffffffa8
   16a34:	mov	r0, r1
   16a38:	bl	111b4 <gettext@plt>
   16a3c:	ldr	r1, [fp, #8]
   16a40:	ldr	r2, [r1]
   16a44:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16a48:	str	r0, [fp, #-92]	; 0xffffffa4
   16a4c:	mov	r0, r1
   16a50:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16a54:	bl	111cc <fprintf@plt>
   16a58:	b	16e9c <__assert_fail@plt+0x5bbc>
   16a5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16a60:	movw	r1, #54568	; 0xd528
   16a64:	movt	r1, #1
   16a68:	str	r0, [fp, #-96]	; 0xffffffa0
   16a6c:	mov	r0, r1
   16a70:	bl	111b4 <gettext@plt>
   16a74:	ldr	r1, [fp, #8]
   16a78:	ldr	r2, [r1]
   16a7c:	ldr	r1, [fp, #8]
   16a80:	ldr	r3, [r1, #4]
   16a84:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16a88:	str	r0, [fp, #-100]	; 0xffffff9c
   16a8c:	mov	r0, r1
   16a90:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16a94:	bl	111cc <fprintf@plt>
   16a98:	b	16e9c <__assert_fail@plt+0x5bbc>
   16a9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16aa0:	movw	r1, #54591	; 0xd53f
   16aa4:	movt	r1, #1
   16aa8:	str	r0, [fp, #-104]	; 0xffffff98
   16aac:	mov	r0, r1
   16ab0:	bl	111b4 <gettext@plt>
   16ab4:	ldr	r1, [fp, #8]
   16ab8:	ldr	r2, [r1]
   16abc:	ldr	r1, [fp, #8]
   16ac0:	ldr	r3, [r1, #4]
   16ac4:	ldr	r1, [fp, #8]
   16ac8:	ldr	r1, [r1, #8]
   16acc:	ldr	ip, [fp, #-104]	; 0xffffff98
   16ad0:	str	r0, [fp, #-108]	; 0xffffff94
   16ad4:	mov	r0, ip
   16ad8:	ldr	lr, [fp, #-108]	; 0xffffff94
   16adc:	str	r1, [sp, #112]	; 0x70
   16ae0:	mov	r1, lr
   16ae4:	ldr	r4, [sp, #112]	; 0x70
   16ae8:	str	r4, [sp]
   16aec:	bl	111cc <fprintf@plt>
   16af0:	b	16e9c <__assert_fail@plt+0x5bbc>
   16af4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16af8:	movw	r1, #54619	; 0xd55b
   16afc:	movt	r1, #1
   16b00:	str	r0, [sp, #108]	; 0x6c
   16b04:	mov	r0, r1
   16b08:	bl	111b4 <gettext@plt>
   16b0c:	ldr	r1, [fp, #8]
   16b10:	ldr	r2, [r1]
   16b14:	ldr	r1, [fp, #8]
   16b18:	ldr	r3, [r1, #4]
   16b1c:	ldr	r1, [fp, #8]
   16b20:	ldr	r1, [r1, #8]
   16b24:	ldr	ip, [fp, #8]
   16b28:	ldr	ip, [ip, #12]
   16b2c:	ldr	lr, [sp, #108]	; 0x6c
   16b30:	str	r0, [sp, #104]	; 0x68
   16b34:	mov	r0, lr
   16b38:	ldr	r4, [sp, #104]	; 0x68
   16b3c:	str	r1, [sp, #100]	; 0x64
   16b40:	mov	r1, r4
   16b44:	ldr	r5, [sp, #100]	; 0x64
   16b48:	str	r5, [sp]
   16b4c:	str	ip, [sp, #4]
   16b50:	bl	111cc <fprintf@plt>
   16b54:	b	16e9c <__assert_fail@plt+0x5bbc>
   16b58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16b5c:	movw	r1, #54651	; 0xd57b
   16b60:	movt	r1, #1
   16b64:	str	r0, [sp, #96]	; 0x60
   16b68:	mov	r0, r1
   16b6c:	bl	111b4 <gettext@plt>
   16b70:	ldr	r1, [fp, #8]
   16b74:	ldr	r2, [r1]
   16b78:	ldr	r1, [fp, #8]
   16b7c:	ldr	r3, [r1, #4]
   16b80:	ldr	r1, [fp, #8]
   16b84:	ldr	r1, [r1, #8]
   16b88:	ldr	ip, [fp, #8]
   16b8c:	ldr	ip, [ip, #12]
   16b90:	ldr	lr, [fp, #8]
   16b94:	ldr	lr, [lr, #16]
   16b98:	ldr	r4, [sp, #96]	; 0x60
   16b9c:	str	r0, [sp, #92]	; 0x5c
   16ba0:	mov	r0, r4
   16ba4:	ldr	r5, [sp, #92]	; 0x5c
   16ba8:	str	r1, [sp, #88]	; 0x58
   16bac:	mov	r1, r5
   16bb0:	ldr	r6, [sp, #88]	; 0x58
   16bb4:	str	r6, [sp]
   16bb8:	str	ip, [sp, #4]
   16bbc:	str	lr, [sp, #8]
   16bc0:	bl	111cc <fprintf@plt>
   16bc4:	b	16e9c <__assert_fail@plt+0x5bbc>
   16bc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16bcc:	movw	r1, #54687	; 0xd59f
   16bd0:	movt	r1, #1
   16bd4:	str	r0, [sp, #84]	; 0x54
   16bd8:	mov	r0, r1
   16bdc:	bl	111b4 <gettext@plt>
   16be0:	ldr	r1, [fp, #8]
   16be4:	ldr	r2, [r1]
   16be8:	ldr	r1, [fp, #8]
   16bec:	ldr	r3, [r1, #4]
   16bf0:	ldr	r1, [fp, #8]
   16bf4:	ldr	r1, [r1, #8]
   16bf8:	ldr	ip, [fp, #8]
   16bfc:	ldr	ip, [ip, #12]
   16c00:	ldr	lr, [fp, #8]
   16c04:	ldr	lr, [lr, #16]
   16c08:	ldr	r4, [fp, #8]
   16c0c:	ldr	r4, [r4, #20]
   16c10:	ldr	r5, [sp, #84]	; 0x54
   16c14:	str	r0, [sp, #80]	; 0x50
   16c18:	mov	r0, r5
   16c1c:	ldr	r6, [sp, #80]	; 0x50
   16c20:	str	r1, [sp, #76]	; 0x4c
   16c24:	mov	r1, r6
   16c28:	ldr	r7, [sp, #76]	; 0x4c
   16c2c:	str	r7, [sp]
   16c30:	str	ip, [sp, #4]
   16c34:	str	lr, [sp, #8]
   16c38:	str	r4, [sp, #12]
   16c3c:	bl	111cc <fprintf@plt>
   16c40:	b	16e9c <__assert_fail@plt+0x5bbc>
   16c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c48:	movw	r1, #54727	; 0xd5c7
   16c4c:	movt	r1, #1
   16c50:	str	r0, [sp, #72]	; 0x48
   16c54:	mov	r0, r1
   16c58:	bl	111b4 <gettext@plt>
   16c5c:	ldr	r1, [fp, #8]
   16c60:	ldr	r2, [r1]
   16c64:	ldr	r1, [fp, #8]
   16c68:	ldr	r3, [r1, #4]
   16c6c:	ldr	r1, [fp, #8]
   16c70:	ldr	r1, [r1, #8]
   16c74:	ldr	ip, [fp, #8]
   16c78:	ldr	ip, [ip, #12]
   16c7c:	ldr	lr, [fp, #8]
   16c80:	ldr	lr, [lr, #16]
   16c84:	ldr	r4, [fp, #8]
   16c88:	ldr	r4, [r4, #20]
   16c8c:	ldr	r5, [fp, #8]
   16c90:	ldr	r5, [r5, #24]
   16c94:	ldr	r6, [sp, #72]	; 0x48
   16c98:	str	r0, [sp, #68]	; 0x44
   16c9c:	mov	r0, r6
   16ca0:	ldr	r7, [sp, #68]	; 0x44
   16ca4:	str	r1, [sp, #64]	; 0x40
   16ca8:	mov	r1, r7
   16cac:	ldr	r8, [sp, #64]	; 0x40
   16cb0:	str	r8, [sp]
   16cb4:	str	ip, [sp, #4]
   16cb8:	str	lr, [sp, #8]
   16cbc:	str	r4, [sp, #12]
   16cc0:	str	r5, [sp, #16]
   16cc4:	bl	111cc <fprintf@plt>
   16cc8:	b	16e9c <__assert_fail@plt+0x5bbc>
   16ccc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16cd0:	movw	r1, #54771	; 0xd5f3
   16cd4:	movt	r1, #1
   16cd8:	str	r0, [sp, #60]	; 0x3c
   16cdc:	mov	r0, r1
   16ce0:	bl	111b4 <gettext@plt>
   16ce4:	ldr	r1, [fp, #8]
   16ce8:	ldr	r2, [r1]
   16cec:	ldr	r1, [fp, #8]
   16cf0:	ldr	r3, [r1, #4]
   16cf4:	ldr	r1, [fp, #8]
   16cf8:	ldr	r1, [r1, #8]
   16cfc:	ldr	ip, [fp, #8]
   16d00:	ldr	ip, [ip, #12]
   16d04:	ldr	lr, [fp, #8]
   16d08:	ldr	lr, [lr, #16]
   16d0c:	ldr	r4, [fp, #8]
   16d10:	ldr	r4, [r4, #20]
   16d14:	ldr	r5, [fp, #8]
   16d18:	ldr	r5, [r5, #24]
   16d1c:	ldr	r6, [fp, #8]
   16d20:	ldr	r6, [r6, #28]
   16d24:	ldr	r7, [sp, #60]	; 0x3c
   16d28:	str	r0, [sp, #56]	; 0x38
   16d2c:	mov	r0, r7
   16d30:	ldr	r8, [sp, #56]	; 0x38
   16d34:	str	r1, [sp, #52]	; 0x34
   16d38:	mov	r1, r8
   16d3c:	ldr	r9, [sp, #52]	; 0x34
   16d40:	str	r9, [sp]
   16d44:	str	ip, [sp, #4]
   16d48:	str	lr, [sp, #8]
   16d4c:	str	r4, [sp, #12]
   16d50:	str	r5, [sp, #16]
   16d54:	str	r6, [sp, #20]
   16d58:	bl	111cc <fprintf@plt>
   16d5c:	b	16e9c <__assert_fail@plt+0x5bbc>
   16d60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d64:	movw	r1, #54819	; 0xd623
   16d68:	movt	r1, #1
   16d6c:	str	r0, [sp, #48]	; 0x30
   16d70:	mov	r0, r1
   16d74:	bl	111b4 <gettext@plt>
   16d78:	ldr	r1, [fp, #8]
   16d7c:	ldr	r2, [r1]
   16d80:	ldr	r1, [fp, #8]
   16d84:	ldr	r3, [r1, #4]
   16d88:	ldr	r1, [fp, #8]
   16d8c:	ldr	r1, [r1, #8]
   16d90:	ldr	ip, [fp, #8]
   16d94:	ldr	ip, [ip, #12]
   16d98:	ldr	lr, [fp, #8]
   16d9c:	ldr	lr, [lr, #16]
   16da0:	ldr	r4, [fp, #8]
   16da4:	ldr	r4, [r4, #20]
   16da8:	ldr	r5, [fp, #8]
   16dac:	ldr	r5, [r5, #24]
   16db0:	ldr	r6, [fp, #8]
   16db4:	ldr	r6, [r6, #28]
   16db8:	ldr	r7, [fp, #8]
   16dbc:	ldr	r7, [r7, #32]
   16dc0:	ldr	r8, [sp, #48]	; 0x30
   16dc4:	str	r0, [sp, #44]	; 0x2c
   16dc8:	mov	r0, r8
   16dcc:	ldr	r9, [sp, #44]	; 0x2c
   16dd0:	str	r1, [sp, #40]	; 0x28
   16dd4:	mov	r1, r9
   16dd8:	ldr	sl, [sp, #40]	; 0x28
   16ddc:	str	sl, [sp]
   16de0:	str	ip, [sp, #4]
   16de4:	str	lr, [sp, #8]
   16de8:	str	r4, [sp, #12]
   16dec:	str	r5, [sp, #16]
   16df0:	str	r6, [sp, #20]
   16df4:	str	r7, [sp, #24]
   16df8:	bl	111cc <fprintf@plt>
   16dfc:	b	16e9c <__assert_fail@plt+0x5bbc>
   16e00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16e04:	movw	r1, #54871	; 0xd657
   16e08:	movt	r1, #1
   16e0c:	str	r0, [sp, #36]	; 0x24
   16e10:	mov	r0, r1
   16e14:	bl	111b4 <gettext@plt>
   16e18:	ldr	r1, [fp, #8]
   16e1c:	ldr	r2, [r1]
   16e20:	ldr	r1, [fp, #8]
   16e24:	ldr	r3, [r1, #4]
   16e28:	ldr	r1, [fp, #8]
   16e2c:	ldr	r1, [r1, #8]
   16e30:	ldr	ip, [fp, #8]
   16e34:	ldr	ip, [ip, #12]
   16e38:	ldr	lr, [fp, #8]
   16e3c:	ldr	lr, [lr, #16]
   16e40:	ldr	r4, [fp, #8]
   16e44:	ldr	r4, [r4, #20]
   16e48:	ldr	r5, [fp, #8]
   16e4c:	ldr	r5, [r5, #24]
   16e50:	ldr	r6, [fp, #8]
   16e54:	ldr	r6, [r6, #28]
   16e58:	ldr	r7, [fp, #8]
   16e5c:	ldr	r7, [r7, #32]
   16e60:	ldr	r8, [sp, #36]	; 0x24
   16e64:	str	r0, [sp, #32]
   16e68:	mov	r0, r8
   16e6c:	ldr	r9, [sp, #32]
   16e70:	str	r1, [sp, #28]
   16e74:	mov	r1, r9
   16e78:	ldr	sl, [sp, #28]
   16e7c:	str	sl, [sp]
   16e80:	str	ip, [sp, #4]
   16e84:	str	lr, [sp, #8]
   16e88:	str	r4, [sp, #12]
   16e8c:	str	r5, [sp, #16]
   16e90:	str	r6, [sp, #20]
   16e94:	str	r7, [sp, #24]
   16e98:	bl	111cc <fprintf@plt>
   16e9c:	sub	sp, fp, #28
   16ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ea4:	push	{fp, lr}
   16ea8:	mov	fp, sp
   16eac:	sub	sp, sp, #32
   16eb0:	ldr	ip, [fp, #8]
   16eb4:	str	r0, [fp, #-4]
   16eb8:	str	r1, [fp, #-8]
   16ebc:	str	r2, [fp, #-12]
   16ec0:	str	r3, [sp, #16]
   16ec4:	movw	r0, #0
   16ec8:	str	r0, [sp, #12]
   16ecc:	ldr	r0, [fp, #8]
   16ed0:	ldr	r1, [sp, #12]
   16ed4:	add	r0, r0, r1, lsl #2
   16ed8:	ldr	r0, [r0]
   16edc:	movw	r1, #0
   16ee0:	cmp	r0, r1
   16ee4:	beq	16efc <__assert_fail@plt+0x5c1c>
   16ee8:	b	16eec <__assert_fail@plt+0x5c0c>
   16eec:	ldr	r0, [sp, #12]
   16ef0:	add	r0, r0, #1
   16ef4:	str	r0, [sp, #12]
   16ef8:	b	16ecc <__assert_fail@plt+0x5bec>
   16efc:	ldr	r0, [fp, #-4]
   16f00:	ldr	r1, [fp, #-8]
   16f04:	ldr	r2, [fp, #-12]
   16f08:	ldr	r3, [sp, #16]
   16f0c:	ldr	ip, [fp, #8]
   16f10:	ldr	lr, [sp, #12]
   16f14:	str	ip, [sp]
   16f18:	str	lr, [sp, #4]
   16f1c:	bl	168bc <__assert_fail@plt+0x55dc>
   16f20:	mov	sp, fp
   16f24:	pop	{fp, pc}
   16f28:	push	{fp, lr}
   16f2c:	mov	fp, sp
   16f30:	sub	sp, sp, #80	; 0x50
   16f34:	ldr	ip, [fp, #8]
   16f38:	str	ip, [fp, #-4]
   16f3c:	str	r0, [fp, #-8]
   16f40:	str	r1, [fp, #-12]
   16f44:	str	r2, [fp, #-16]
   16f48:	str	r3, [fp, #-20]	; 0xffffffec
   16f4c:	movw	r0, #0
   16f50:	str	r0, [fp, #-24]	; 0xffffffe8
   16f54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f58:	cmp	r0, #10
   16f5c:	movw	r0, #0
   16f60:	str	r0, [sp, #12]
   16f64:	bcs	16f9c <__assert_fail@plt+0x5cbc>
   16f68:	ldr	r0, [fp, #-4]
   16f6c:	add	r1, r0, #4
   16f70:	str	r1, [fp, #-4]
   16f74:	ldr	r0, [r0]
   16f78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f7c:	add	r2, sp, #16
   16f80:	add	r1, r2, r1, lsl #2
   16f84:	str	r0, [r1]
   16f88:	movw	r1, #0
   16f8c:	cmp	r0, r1
   16f90:	movw	r0, #0
   16f94:	movne	r0, #1
   16f98:	str	r0, [sp, #12]
   16f9c:	ldr	r0, [sp, #12]
   16fa0:	tst	r0, #1
   16fa4:	beq	16fbc <__assert_fail@plt+0x5cdc>
   16fa8:	b	16fac <__assert_fail@plt+0x5ccc>
   16fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fb0:	add	r0, r0, #1
   16fb4:	str	r0, [fp, #-24]	; 0xffffffe8
   16fb8:	b	16f54 <__assert_fail@plt+0x5c74>
   16fbc:	add	r0, sp, #16
   16fc0:	ldr	r1, [fp, #-8]
   16fc4:	ldr	r2, [fp, #-12]
   16fc8:	ldr	r3, [fp, #-16]
   16fcc:	ldr	ip, [fp, #-20]	; 0xffffffec
   16fd0:	ldr	lr, [fp, #-24]	; 0xffffffe8
   16fd4:	str	r0, [sp, #8]
   16fd8:	mov	r0, r1
   16fdc:	mov	r1, r2
   16fe0:	mov	r2, r3
   16fe4:	mov	r3, ip
   16fe8:	ldr	ip, [sp, #8]
   16fec:	str	ip, [sp]
   16ff0:	str	lr, [sp, #4]
   16ff4:	bl	168bc <__assert_fail@plt+0x55dc>
   16ff8:	mov	sp, fp
   16ffc:	pop	{fp, pc}
   17000:	push	{fp, lr}
   17004:	mov	fp, sp
   17008:	sub	sp, sp, #24
   1700c:	str	r0, [fp, #-4]
   17010:	str	r1, [fp, #-8]
   17014:	str	r2, [sp, #12]
   17018:	str	r3, [sp, #8]
   1701c:	add	r0, fp, #8
   17020:	str	r0, [sp, #4]
   17024:	ldr	r0, [fp, #-4]
   17028:	ldr	r1, [fp, #-8]
   1702c:	ldr	r2, [sp, #12]
   17030:	ldr	r3, [sp, #8]
   17034:	ldr	ip, [sp, #4]
   17038:	mov	lr, sp
   1703c:	str	ip, [lr]
   17040:	bl	16f28 <__assert_fail@plt+0x5c48>
   17044:	add	r0, sp, #4
   17048:	mov	sp, fp
   1704c:	pop	{fp, pc}
   17050:	push	{fp, lr}
   17054:	mov	fp, sp
   17058:	sub	sp, sp, #16
   1705c:	movw	r0, #57708	; 0xe16c
   17060:	movt	r0, #2
   17064:	ldr	r1, [r0]
   17068:	movw	r0, #53274	; 0xd01a
   1706c:	movt	r0, #1
   17070:	bl	11034 <fputs_unlocked@plt>
   17074:	movw	r1, #54931	; 0xd693
   17078:	movt	r1, #1
   1707c:	str	r0, [fp, #-4]
   17080:	mov	r0, r1
   17084:	bl	111b4 <gettext@plt>
   17088:	movw	r1, #54951	; 0xd6a7
   1708c:	movt	r1, #1
   17090:	bl	11064 <printf@plt>
   17094:	movw	r1, #54973	; 0xd6bd
   17098:	movt	r1, #1
   1709c:	str	r0, [sp, #8]
   170a0:	mov	r0, r1
   170a4:	bl	111b4 <gettext@plt>
   170a8:	movw	r1, #52579	; 0xcd63
   170ac:	movt	r1, #1
   170b0:	movw	r2, #53083	; 0xcf5b
   170b4:	movt	r2, #1
   170b8:	bl	11064 <printf@plt>
   170bc:	movw	r1, #54993	; 0xd6d1
   170c0:	movt	r1, #1
   170c4:	str	r0, [sp, #4]
   170c8:	mov	r0, r1
   170cc:	bl	111b4 <gettext@plt>
   170d0:	movw	r1, #55032	; 0xd6f8
   170d4:	movt	r1, #1
   170d8:	bl	11064 <printf@plt>
   170dc:	mov	sp, fp
   170e0:	pop	{fp, pc}
   170e4:	push	{fp, lr}
   170e8:	mov	fp, sp
   170ec:	sub	sp, sp, #16
   170f0:	str	r0, [fp, #-4]
   170f4:	str	r1, [sp, #8]
   170f8:	str	r2, [sp, #4]
   170fc:	ldr	r0, [fp, #-4]
   17100:	ldr	r1, [sp, #8]
   17104:	ldr	r2, [sp, #4]
   17108:	bl	17114 <__assert_fail@plt+0x5e34>
   1710c:	mov	sp, fp
   17110:	pop	{fp, pc}
   17114:	push	{fp, lr}
   17118:	mov	fp, sp
   1711c:	sub	sp, sp, #16
   17120:	str	r0, [fp, #-4]
   17124:	str	r1, [sp, #8]
   17128:	str	r2, [sp, #4]
   1712c:	ldr	r0, [fp, #-4]
   17130:	ldr	r1, [sp, #8]
   17134:	ldr	r2, [sp, #4]
   17138:	bl	1a830 <__assert_fail@plt+0x9550>
   1713c:	str	r0, [sp]
   17140:	ldr	r0, [sp]
   17144:	movw	r1, #0
   17148:	cmp	r0, r1
   1714c:	bne	1717c <__assert_fail@plt+0x5e9c>
   17150:	ldr	r0, [fp, #-4]
   17154:	movw	r1, #0
   17158:	cmp	r0, r1
   1715c:	beq	17178 <__assert_fail@plt+0x5e98>
   17160:	ldr	r0, [sp, #8]
   17164:	cmp	r0, #0
   17168:	beq	1717c <__assert_fail@plt+0x5e9c>
   1716c:	ldr	r0, [sp, #4]
   17170:	cmp	r0, #0
   17174:	beq	1717c <__assert_fail@plt+0x5e9c>
   17178:	bl	19ec0 <__assert_fail@plt+0x8be0>
   1717c:	ldr	r0, [sp]
   17180:	mov	sp, fp
   17184:	pop	{fp, pc}
   17188:	push	{fp, lr}
   1718c:	mov	fp, sp
   17190:	sub	sp, sp, #8
   17194:	str	r0, [sp, #4]
   17198:	ldr	r0, [sp, #4]
   1719c:	bl	19fac <__assert_fail@plt+0x8ccc>
   171a0:	bl	171ac <__assert_fail@plt+0x5ecc>
   171a4:	mov	sp, fp
   171a8:	pop	{fp, pc}
   171ac:	push	{fp, lr}
   171b0:	mov	fp, sp
   171b4:	sub	sp, sp, #8
   171b8:	str	r0, [sp, #4]
   171bc:	ldr	r0, [sp, #4]
   171c0:	movw	r1, #0
   171c4:	cmp	r0, r1
   171c8:	bne	171d0 <__assert_fail@plt+0x5ef0>
   171cc:	bl	19ec0 <__assert_fail@plt+0x8be0>
   171d0:	ldr	r0, [sp, #4]
   171d4:	mov	sp, fp
   171d8:	pop	{fp, pc}
   171dc:	push	{fp, lr}
   171e0:	mov	fp, sp
   171e4:	sub	sp, sp, #8
   171e8:	str	r0, [sp, #4]
   171ec:	ldr	r0, [sp, #4]
   171f0:	bl	1a56c <__assert_fail@plt+0x928c>
   171f4:	bl	171ac <__assert_fail@plt+0x5ecc>
   171f8:	mov	sp, fp
   171fc:	pop	{fp, pc}
   17200:	push	{fp, lr}
   17204:	mov	fp, sp
   17208:	sub	sp, sp, #8
   1720c:	str	r0, [sp, #4]
   17210:	ldr	r0, [sp, #4]
   17214:	bl	17188 <__assert_fail@plt+0x5ea8>
   17218:	mov	sp, fp
   1721c:	pop	{fp, pc}
   17220:	push	{fp, lr}
   17224:	mov	fp, sp
   17228:	sub	sp, sp, #16
   1722c:	str	r0, [fp, #-4]
   17230:	str	r1, [sp, #8]
   17234:	ldr	r0, [fp, #-4]
   17238:	ldr	r1, [sp, #8]
   1723c:	bl	1a01c <__assert_fail@plt+0x8d3c>
   17240:	str	r0, [sp, #4]
   17244:	ldr	r0, [sp, #4]
   17248:	movw	r1, #0
   1724c:	cmp	r0, r1
   17250:	bne	17274 <__assert_fail@plt+0x5f94>
   17254:	ldr	r0, [fp, #-4]
   17258:	movw	r1, #0
   1725c:	cmp	r0, r1
   17260:	beq	17270 <__assert_fail@plt+0x5f90>
   17264:	ldr	r0, [sp, #8]
   17268:	cmp	r0, #0
   1726c:	beq	17274 <__assert_fail@plt+0x5f94>
   17270:	bl	19ec0 <__assert_fail@plt+0x8be0>
   17274:	ldr	r0, [sp, #4]
   17278:	mov	sp, fp
   1727c:	pop	{fp, pc}
   17280:	push	{fp, lr}
   17284:	mov	fp, sp
   17288:	sub	sp, sp, #8
   1728c:	str	r0, [sp, #4]
   17290:	str	r1, [sp]
   17294:	ldr	r0, [sp, #4]
   17298:	ldr	r1, [sp]
   1729c:	bl	1a5ac <__assert_fail@plt+0x92cc>
   172a0:	bl	171ac <__assert_fail@plt+0x5ecc>
   172a4:	mov	sp, fp
   172a8:	pop	{fp, pc}
   172ac:	push	{fp, lr}
   172b0:	mov	fp, sp
   172b4:	sub	sp, sp, #16
   172b8:	str	r0, [fp, #-4]
   172bc:	str	r1, [sp, #8]
   172c0:	str	r2, [sp, #4]
   172c4:	ldr	r0, [fp, #-4]
   172c8:	ldr	r1, [sp, #8]
   172cc:	ldr	r2, [sp, #4]
   172d0:	bl	1a6a4 <__assert_fail@plt+0x93c4>
   172d4:	bl	171ac <__assert_fail@plt+0x5ecc>
   172d8:	mov	sp, fp
   172dc:	pop	{fp, pc}
   172e0:	push	{fp, lr}
   172e4:	mov	fp, sp
   172e8:	sub	sp, sp, #8
   172ec:	str	r0, [sp, #4]
   172f0:	str	r1, [sp]
   172f4:	ldr	r1, [sp, #4]
   172f8:	ldr	r2, [sp]
   172fc:	movw	r0, #0
   17300:	bl	17114 <__assert_fail@plt+0x5e34>
   17304:	mov	sp, fp
   17308:	pop	{fp, pc}
   1730c:	push	{fp, lr}
   17310:	mov	fp, sp
   17314:	sub	sp, sp, #8
   17318:	str	r0, [sp, #4]
   1731c:	str	r1, [sp]
   17320:	ldr	r1, [sp, #4]
   17324:	ldr	r2, [sp]
   17328:	movw	r0, #0
   1732c:	bl	172ac <__assert_fail@plt+0x5fcc>
   17330:	mov	sp, fp
   17334:	pop	{fp, pc}
   17338:	push	{fp, lr}
   1733c:	mov	fp, sp
   17340:	sub	sp, sp, #8
   17344:	str	r0, [sp, #4]
   17348:	str	r1, [sp]
   1734c:	ldr	r0, [sp, #4]
   17350:	ldr	r1, [sp]
   17354:	movw	r2, #1
   17358:	bl	17364 <__assert_fail@plt+0x6084>
   1735c:	mov	sp, fp
   17360:	pop	{fp, pc}
   17364:	push	{fp, lr}
   17368:	mov	fp, sp
   1736c:	sub	sp, sp, #16
   17370:	str	r0, [fp, #-4]
   17374:	str	r1, [sp, #8]
   17378:	str	r2, [sp, #4]
   1737c:	ldr	r0, [sp, #8]
   17380:	ldr	r0, [r0]
   17384:	str	r0, [sp]
   17388:	ldr	r0, [fp, #-4]
   1738c:	movw	r1, #0
   17390:	cmp	r0, r1
   17394:	bne	173e0 <__assert_fail@plt+0x6100>
   17398:	ldr	r0, [sp]
   1739c:	cmp	r0, #0
   173a0:	bne	173dc <__assert_fail@plt+0x60fc>
   173a4:	ldr	r0, [sp, #4]
   173a8:	movw	r1, #64	; 0x40
   173ac:	udiv	r0, r1, r0
   173b0:	str	r0, [sp]
   173b4:	ldr	r0, [sp]
   173b8:	cmp	r0, #0
   173bc:	movw	r0, #0
   173c0:	movne	r0, #1
   173c4:	mvn	r1, #0
   173c8:	eor	r0, r0, r1
   173cc:	and	r0, r0, #1
   173d0:	ldr	r1, [sp]
   173d4:	add	r0, r1, r0
   173d8:	str	r0, [sp]
   173dc:	b	17410 <__assert_fail@plt+0x6130>
   173e0:	ldr	r0, [sp]
   173e4:	ldr	r1, [sp]
   173e8:	lsr	r1, r1, #1
   173ec:	add	r1, r1, #1
   173f0:	adds	r0, r0, r1
   173f4:	mov	r1, #0
   173f8:	adc	r1, r1, #0
   173fc:	str	r0, [sp]
   17400:	tst	r1, #1
   17404:	beq	1740c <__assert_fail@plt+0x612c>
   17408:	bl	19ec0 <__assert_fail@plt+0x8be0>
   1740c:	b	17410 <__assert_fail@plt+0x6130>
   17410:	ldr	r0, [fp, #-4]
   17414:	ldr	r1, [sp]
   17418:	ldr	r2, [sp, #4]
   1741c:	bl	17114 <__assert_fail@plt+0x5e34>
   17420:	str	r0, [fp, #-4]
   17424:	ldr	r0, [sp]
   17428:	ldr	r1, [sp, #8]
   1742c:	str	r0, [r1]
   17430:	ldr	r0, [fp, #-4]
   17434:	mov	sp, fp
   17438:	pop	{fp, pc}
   1743c:	push	{fp, lr}
   17440:	mov	fp, sp
   17444:	sub	sp, sp, #216	; 0xd8
   17448:	ldr	ip, [fp, #8]
   1744c:	str	r0, [fp, #-4]
   17450:	str	r1, [fp, #-8]
   17454:	str	r2, [fp, #-12]
   17458:	str	r3, [fp, #-16]
   1745c:	ldr	r0, [fp, #-8]
   17460:	ldr	r0, [r0]
   17464:	str	r0, [fp, #-20]	; 0xffffffec
   17468:	ldr	r0, [fp, #-20]	; 0xffffffec
   1746c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17470:	asr	r1, r1, #1
   17474:	add	r1, r0, r1
   17478:	mov	r2, #1
   1747c:	cmp	r1, r0
   17480:	movwvc	r2, #0
   17484:	str	r1, [fp, #-24]	; 0xffffffe8
   17488:	tst	r2, #1
   1748c:	beq	17498 <__assert_fail@plt+0x61b8>
   17490:	ldr	r0, [pc, #4036]	; 1845c <__assert_fail@plt+0x717c>
   17494:	str	r0, [fp, #-24]	; 0xffffffe8
   17498:	ldr	r0, [fp, #-16]
   1749c:	movw	r1, #0
   174a0:	cmp	r1, r0
   174a4:	bgt	174c0 <__assert_fail@plt+0x61e0>
   174a8:	ldr	r0, [fp, #-16]
   174ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   174b0:	cmp	r0, r1
   174b4:	bge	174c0 <__assert_fail@plt+0x61e0>
   174b8:	ldr	r0, [fp, #-16]
   174bc:	str	r0, [fp, #-24]	; 0xffffffe8
   174c0:	b	17898 <__assert_fail@plt+0x65b8>
   174c4:	b	174c8 <__assert_fail@plt+0x61e8>
   174c8:	ldr	r0, [fp, #8]
   174cc:	cmp	r0, #0
   174d0:	bge	175e4 <__assert_fail@plt+0x6304>
   174d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174d8:	cmp	r0, #0
   174dc:	bge	17568 <__assert_fail@plt+0x6288>
   174e0:	b	174e4 <__assert_fail@plt+0x6204>
   174e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174e8:	ldr	r1, [fp, #8]
   174ec:	movw	r2, #127	; 0x7f
   174f0:	sdiv	r1, r2, r1
   174f4:	cmp	r0, r1
   174f8:	blt	17684 <__assert_fail@plt+0x63a4>
   174fc:	b	1769c <__assert_fail@plt+0x63bc>
   17500:	b	17504 <__assert_fail@plt+0x6224>
   17504:	ldr	r0, [pc, #4084]	; 18500 <__assert_fail@plt+0x7220>
   17508:	ldr	r1, [fp, #8]
   1750c:	cmp	r1, r0
   17510:	blt	17528 <__assert_fail@plt+0x6248>
   17514:	b	17534 <__assert_fail@plt+0x6254>
   17518:	ldr	r0, [fp, #8]
   1751c:	movw	r1, #0
   17520:	cmp	r1, r0
   17524:	bge	17534 <__assert_fail@plt+0x6254>
   17528:	movw	r0, #0
   1752c:	str	r0, [fp, #-36]	; 0xffffffdc
   17530:	b	1754c <__assert_fail@plt+0x626c>
   17534:	ldr	r0, [fp, #8]
   17538:	movw	r1, #0
   1753c:	sub	r0, r1, r0
   17540:	movw	r1, #127	; 0x7f
   17544:	sdiv	r0, r1, r0
   17548:	str	r0, [fp, #-36]	; 0xffffffdc
   1754c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17554:	mvn	r2, #0
   17558:	sub	r1, r2, r1
   1755c:	cmp	r0, r1
   17560:	ble	17684 <__assert_fail@plt+0x63a4>
   17564:	b	1769c <__assert_fail@plt+0x63bc>
   17568:	b	1756c <__assert_fail@plt+0x628c>
   1756c:	b	175c8 <__assert_fail@plt+0x62e8>
   17570:	b	175c8 <__assert_fail@plt+0x62e8>
   17574:	ldr	r0, [fp, #8]
   17578:	cmn	r0, #1
   1757c:	bne	175c8 <__assert_fail@plt+0x62e8>
   17580:	b	17584 <__assert_fail@plt+0x62a4>
   17584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17588:	mvn	r1, #127	; 0x7f
   1758c:	add	r0, r0, r1
   17590:	movw	r1, #0
   17594:	cmp	r1, r0
   17598:	blt	17684 <__assert_fail@plt+0x63a4>
   1759c:	b	1769c <__assert_fail@plt+0x63bc>
   175a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175a4:	movw	r1, #0
   175a8:	cmp	r1, r0
   175ac:	bge	1769c <__assert_fail@plt+0x63bc>
   175b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175b4:	sub	r0, r0, #1
   175b8:	movw	r1, #127	; 0x7f
   175bc:	cmp	r1, r0
   175c0:	blt	17684 <__assert_fail@plt+0x63a4>
   175c4:	b	1769c <__assert_fail@plt+0x63bc>
   175c8:	ldr	r0, [fp, #8]
   175cc:	mvn	r1, #127	; 0x7f
   175d0:	sdiv	r0, r1, r0
   175d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175d8:	cmp	r0, r1
   175dc:	blt	17684 <__assert_fail@plt+0x63a4>
   175e0:	b	1769c <__assert_fail@plt+0x63bc>
   175e4:	ldr	r0, [fp, #8]
   175e8:	cmp	r0, #0
   175ec:	bne	175f4 <__assert_fail@plt+0x6314>
   175f0:	b	1769c <__assert_fail@plt+0x63bc>
   175f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175f8:	cmp	r0, #0
   175fc:	bge	1766c <__assert_fail@plt+0x638c>
   17600:	b	17604 <__assert_fail@plt+0x6324>
   17604:	b	17650 <__assert_fail@plt+0x6370>
   17608:	b	17650 <__assert_fail@plt+0x6370>
   1760c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17610:	cmn	r0, #1
   17614:	bne	17650 <__assert_fail@plt+0x6370>
   17618:	b	1761c <__assert_fail@plt+0x633c>
   1761c:	ldr	r0, [fp, #8]
   17620:	mvn	r1, #127	; 0x7f
   17624:	add	r0, r0, r1
   17628:	movw	r1, #0
   1762c:	cmp	r1, r0
   17630:	blt	17684 <__assert_fail@plt+0x63a4>
   17634:	b	1769c <__assert_fail@plt+0x63bc>
   17638:	ldr	r0, [fp, #8]
   1763c:	sub	r0, r0, #1
   17640:	movw	r1, #127	; 0x7f
   17644:	cmp	r1, r0
   17648:	blt	17684 <__assert_fail@plt+0x63a4>
   1764c:	b	1769c <__assert_fail@plt+0x63bc>
   17650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17654:	mvn	r1, #127	; 0x7f
   17658:	sdiv	r0, r1, r0
   1765c:	ldr	r1, [fp, #8]
   17660:	cmp	r0, r1
   17664:	blt	17684 <__assert_fail@plt+0x63a4>
   17668:	b	1769c <__assert_fail@plt+0x63bc>
   1766c:	ldr	r0, [fp, #8]
   17670:	movw	r1, #127	; 0x7f
   17674:	sdiv	r0, r1, r0
   17678:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1767c:	cmp	r0, r1
   17680:	bge	1769c <__assert_fail@plt+0x63bc>
   17684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17688:	ldr	r1, [fp, #8]
   1768c:	mul	r0, r0, r1
   17690:	sxtb	r0, r0
   17694:	str	r0, [fp, #-28]	; 0xffffffe4
   17698:	b	18860 <__assert_fail@plt+0x7580>
   1769c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176a0:	ldr	r1, [fp, #8]
   176a4:	mul	r0, r0, r1
   176a8:	sxtb	r0, r0
   176ac:	str	r0, [fp, #-28]	; 0xffffffe4
   176b0:	b	1886c <__assert_fail@plt+0x758c>
   176b4:	ldr	r0, [fp, #8]
   176b8:	cmp	r0, #0
   176bc:	bge	177cc <__assert_fail@plt+0x64ec>
   176c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176c4:	cmp	r0, #0
   176c8:	bge	17754 <__assert_fail@plt+0x6474>
   176cc:	b	176d0 <__assert_fail@plt+0x63f0>
   176d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176d4:	ldr	r1, [fp, #8]
   176d8:	movw	r2, #255	; 0xff
   176dc:	sdiv	r1, r2, r1
   176e0:	cmp	r0, r1
   176e4:	blt	17868 <__assert_fail@plt+0x6588>
   176e8:	b	17880 <__assert_fail@plt+0x65a0>
   176ec:	b	176f0 <__assert_fail@plt+0x6410>
   176f0:	ldr	r0, [pc, #3592]	; 18500 <__assert_fail@plt+0x7220>
   176f4:	ldr	r1, [fp, #8]
   176f8:	cmp	r1, r0
   176fc:	blt	17714 <__assert_fail@plt+0x6434>
   17700:	b	17720 <__assert_fail@plt+0x6440>
   17704:	ldr	r0, [fp, #8]
   17708:	movw	r1, #0
   1770c:	cmp	r1, r0
   17710:	bge	17720 <__assert_fail@plt+0x6440>
   17714:	movw	r0, #0
   17718:	str	r0, [fp, #-40]	; 0xffffffd8
   1771c:	b	17738 <__assert_fail@plt+0x6458>
   17720:	ldr	r0, [fp, #8]
   17724:	movw	r1, #0
   17728:	sub	r0, r1, r0
   1772c:	movw	r1, #255	; 0xff
   17730:	sdiv	r0, r1, r0
   17734:	str	r0, [fp, #-40]	; 0xffffffd8
   17738:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1773c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17740:	mvn	r2, #0
   17744:	sub	r1, r2, r1
   17748:	cmp	r0, r1
   1774c:	ble	17868 <__assert_fail@plt+0x6588>
   17750:	b	17880 <__assert_fail@plt+0x65a0>
   17754:	b	17758 <__assert_fail@plt+0x6478>
   17758:	b	177b0 <__assert_fail@plt+0x64d0>
   1775c:	b	177b0 <__assert_fail@plt+0x64d0>
   17760:	ldr	r0, [fp, #8]
   17764:	cmn	r0, #1
   17768:	bne	177b0 <__assert_fail@plt+0x64d0>
   1776c:	b	17770 <__assert_fail@plt+0x6490>
   17770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17774:	add	r0, r0, #0
   17778:	movw	r1, #0
   1777c:	cmp	r1, r0
   17780:	blt	17868 <__assert_fail@plt+0x6588>
   17784:	b	17880 <__assert_fail@plt+0x65a0>
   17788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1778c:	movw	r1, #0
   17790:	cmp	r1, r0
   17794:	bge	17880 <__assert_fail@plt+0x65a0>
   17798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1779c:	sub	r0, r0, #1
   177a0:	mvn	r1, #0
   177a4:	cmp	r1, r0
   177a8:	blt	17868 <__assert_fail@plt+0x6588>
   177ac:	b	17880 <__assert_fail@plt+0x65a0>
   177b0:	ldr	r0, [fp, #8]
   177b4:	movw	r1, #0
   177b8:	sdiv	r0, r1, r0
   177bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   177c0:	cmp	r0, r1
   177c4:	blt	17868 <__assert_fail@plt+0x6588>
   177c8:	b	17880 <__assert_fail@plt+0x65a0>
   177cc:	ldr	r0, [fp, #8]
   177d0:	cmp	r0, #0
   177d4:	bne	177dc <__assert_fail@plt+0x64fc>
   177d8:	b	17880 <__assert_fail@plt+0x65a0>
   177dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177e0:	cmp	r0, #0
   177e4:	bge	17850 <__assert_fail@plt+0x6570>
   177e8:	b	177ec <__assert_fail@plt+0x650c>
   177ec:	b	17834 <__assert_fail@plt+0x6554>
   177f0:	b	17834 <__assert_fail@plt+0x6554>
   177f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177f8:	cmn	r0, #1
   177fc:	bne	17834 <__assert_fail@plt+0x6554>
   17800:	b	17804 <__assert_fail@plt+0x6524>
   17804:	ldr	r0, [fp, #8]
   17808:	add	r0, r0, #0
   1780c:	movw	r1, #0
   17810:	cmp	r1, r0
   17814:	blt	17868 <__assert_fail@plt+0x6588>
   17818:	b	17880 <__assert_fail@plt+0x65a0>
   1781c:	ldr	r0, [fp, #8]
   17820:	sub	r0, r0, #1
   17824:	mvn	r1, #0
   17828:	cmp	r1, r0
   1782c:	blt	17868 <__assert_fail@plt+0x6588>
   17830:	b	17880 <__assert_fail@plt+0x65a0>
   17834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17838:	movw	r1, #0
   1783c:	sdiv	r0, r1, r0
   17840:	ldr	r1, [fp, #8]
   17844:	cmp	r0, r1
   17848:	blt	17868 <__assert_fail@plt+0x6588>
   1784c:	b	17880 <__assert_fail@plt+0x65a0>
   17850:	ldr	r0, [fp, #8]
   17854:	movw	r1, #255	; 0xff
   17858:	sdiv	r0, r1, r0
   1785c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17860:	cmp	r0, r1
   17864:	bge	17880 <__assert_fail@plt+0x65a0>
   17868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1786c:	ldr	r1, [fp, #8]
   17870:	mul	r0, r0, r1
   17874:	and	r0, r0, #255	; 0xff
   17878:	str	r0, [fp, #-28]	; 0xffffffe4
   1787c:	b	18860 <__assert_fail@plt+0x7580>
   17880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17884:	ldr	r1, [fp, #8]
   17888:	mul	r0, r0, r1
   1788c:	and	r0, r0, #255	; 0xff
   17890:	str	r0, [fp, #-28]	; 0xffffffe4
   17894:	b	1886c <__assert_fail@plt+0x758c>
   17898:	b	17c70 <__assert_fail@plt+0x6990>
   1789c:	b	178a0 <__assert_fail@plt+0x65c0>
   178a0:	ldr	r0, [fp, #8]
   178a4:	cmp	r0, #0
   178a8:	bge	179bc <__assert_fail@plt+0x66dc>
   178ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178b0:	cmp	r0, #0
   178b4:	bge	17940 <__assert_fail@plt+0x6660>
   178b8:	b	178bc <__assert_fail@plt+0x65dc>
   178bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178c0:	ldr	r1, [fp, #8]
   178c4:	movw	r2, #32767	; 0x7fff
   178c8:	sdiv	r1, r2, r1
   178cc:	cmp	r0, r1
   178d0:	blt	17a5c <__assert_fail@plt+0x677c>
   178d4:	b	17a74 <__assert_fail@plt+0x6794>
   178d8:	b	178dc <__assert_fail@plt+0x65fc>
   178dc:	ldr	r0, [pc, #3100]	; 18500 <__assert_fail@plt+0x7220>
   178e0:	ldr	r1, [fp, #8]
   178e4:	cmp	r1, r0
   178e8:	blt	17900 <__assert_fail@plt+0x6620>
   178ec:	b	1790c <__assert_fail@plt+0x662c>
   178f0:	ldr	r0, [fp, #8]
   178f4:	movw	r1, #0
   178f8:	cmp	r1, r0
   178fc:	bge	1790c <__assert_fail@plt+0x662c>
   17900:	movw	r0, #0
   17904:	str	r0, [fp, #-44]	; 0xffffffd4
   17908:	b	17924 <__assert_fail@plt+0x6644>
   1790c:	ldr	r0, [fp, #8]
   17910:	movw	r1, #0
   17914:	sub	r0, r1, r0
   17918:	movw	r1, #32767	; 0x7fff
   1791c:	sdiv	r0, r1, r0
   17920:	str	r0, [fp, #-44]	; 0xffffffd4
   17924:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17928:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1792c:	mvn	r2, #0
   17930:	sub	r1, r2, r1
   17934:	cmp	r0, r1
   17938:	ble	17a5c <__assert_fail@plt+0x677c>
   1793c:	b	17a74 <__assert_fail@plt+0x6794>
   17940:	b	17944 <__assert_fail@plt+0x6664>
   17944:	b	179a0 <__assert_fail@plt+0x66c0>
   17948:	b	179a0 <__assert_fail@plt+0x66c0>
   1794c:	ldr	r0, [fp, #8]
   17950:	cmn	r0, #1
   17954:	bne	179a0 <__assert_fail@plt+0x66c0>
   17958:	b	1795c <__assert_fail@plt+0x667c>
   1795c:	ldr	r0, [pc, #4068]	; 18948 <__assert_fail@plt+0x7668>
   17960:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17964:	add	r0, r1, r0
   17968:	movw	r1, #0
   1796c:	cmp	r1, r0
   17970:	blt	17a5c <__assert_fail@plt+0x677c>
   17974:	b	17a74 <__assert_fail@plt+0x6794>
   17978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1797c:	movw	r1, #0
   17980:	cmp	r1, r0
   17984:	bge	17a74 <__assert_fail@plt+0x6794>
   17988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1798c:	sub	r0, r0, #1
   17990:	movw	r1, #32767	; 0x7fff
   17994:	cmp	r1, r0
   17998:	blt	17a5c <__assert_fail@plt+0x677c>
   1799c:	b	17a74 <__assert_fail@plt+0x6794>
   179a0:	ldr	r0, [pc, #4000]	; 18948 <__assert_fail@plt+0x7668>
   179a4:	ldr	r1, [fp, #8]
   179a8:	sdiv	r0, r0, r1
   179ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179b0:	cmp	r0, r1
   179b4:	blt	17a5c <__assert_fail@plt+0x677c>
   179b8:	b	17a74 <__assert_fail@plt+0x6794>
   179bc:	ldr	r0, [fp, #8]
   179c0:	cmp	r0, #0
   179c4:	bne	179cc <__assert_fail@plt+0x66ec>
   179c8:	b	17a74 <__assert_fail@plt+0x6794>
   179cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179d0:	cmp	r0, #0
   179d4:	bge	17a44 <__assert_fail@plt+0x6764>
   179d8:	b	179dc <__assert_fail@plt+0x66fc>
   179dc:	b	17a28 <__assert_fail@plt+0x6748>
   179e0:	b	17a28 <__assert_fail@plt+0x6748>
   179e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179e8:	cmn	r0, #1
   179ec:	bne	17a28 <__assert_fail@plt+0x6748>
   179f0:	b	179f4 <__assert_fail@plt+0x6714>
   179f4:	ldr	r0, [pc, #3916]	; 18948 <__assert_fail@plt+0x7668>
   179f8:	ldr	r1, [fp, #8]
   179fc:	add	r0, r1, r0
   17a00:	movw	r1, #0
   17a04:	cmp	r1, r0
   17a08:	blt	17a5c <__assert_fail@plt+0x677c>
   17a0c:	b	17a74 <__assert_fail@plt+0x6794>
   17a10:	ldr	r0, [fp, #8]
   17a14:	sub	r0, r0, #1
   17a18:	movw	r1, #32767	; 0x7fff
   17a1c:	cmp	r1, r0
   17a20:	blt	17a5c <__assert_fail@plt+0x677c>
   17a24:	b	17a74 <__assert_fail@plt+0x6794>
   17a28:	ldr	r0, [pc, #3864]	; 18948 <__assert_fail@plt+0x7668>
   17a2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a30:	sdiv	r0, r0, r1
   17a34:	ldr	r1, [fp, #8]
   17a38:	cmp	r0, r1
   17a3c:	blt	17a5c <__assert_fail@plt+0x677c>
   17a40:	b	17a74 <__assert_fail@plt+0x6794>
   17a44:	ldr	r0, [fp, #8]
   17a48:	movw	r1, #32767	; 0x7fff
   17a4c:	sdiv	r0, r1, r0
   17a50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a54:	cmp	r0, r1
   17a58:	bge	17a74 <__assert_fail@plt+0x6794>
   17a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a60:	ldr	r1, [fp, #8]
   17a64:	mul	r0, r0, r1
   17a68:	sxth	r0, r0
   17a6c:	str	r0, [fp, #-28]	; 0xffffffe4
   17a70:	b	18860 <__assert_fail@plt+0x7580>
   17a74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a78:	ldr	r1, [fp, #8]
   17a7c:	mul	r0, r0, r1
   17a80:	sxth	r0, r0
   17a84:	str	r0, [fp, #-28]	; 0xffffffe4
   17a88:	b	1886c <__assert_fail@plt+0x758c>
   17a8c:	ldr	r0, [fp, #8]
   17a90:	cmp	r0, #0
   17a94:	bge	17ba4 <__assert_fail@plt+0x68c4>
   17a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a9c:	cmp	r0, #0
   17aa0:	bge	17b2c <__assert_fail@plt+0x684c>
   17aa4:	b	17aa8 <__assert_fail@plt+0x67c8>
   17aa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17aac:	ldr	r1, [fp, #8]
   17ab0:	movw	r2, #65535	; 0xffff
   17ab4:	sdiv	r1, r2, r1
   17ab8:	cmp	r0, r1
   17abc:	blt	17c40 <__assert_fail@plt+0x6960>
   17ac0:	b	17c58 <__assert_fail@plt+0x6978>
   17ac4:	b	17ac8 <__assert_fail@plt+0x67e8>
   17ac8:	ldr	r0, [pc, #2608]	; 18500 <__assert_fail@plt+0x7220>
   17acc:	ldr	r1, [fp, #8]
   17ad0:	cmp	r1, r0
   17ad4:	blt	17aec <__assert_fail@plt+0x680c>
   17ad8:	b	17af8 <__assert_fail@plt+0x6818>
   17adc:	ldr	r0, [fp, #8]
   17ae0:	movw	r1, #0
   17ae4:	cmp	r1, r0
   17ae8:	bge	17af8 <__assert_fail@plt+0x6818>
   17aec:	movw	r0, #0
   17af0:	str	r0, [fp, #-48]	; 0xffffffd0
   17af4:	b	17b10 <__assert_fail@plt+0x6830>
   17af8:	ldr	r0, [fp, #8]
   17afc:	movw	r1, #0
   17b00:	sub	r0, r1, r0
   17b04:	movw	r1, #65535	; 0xffff
   17b08:	sdiv	r0, r1, r0
   17b0c:	str	r0, [fp, #-48]	; 0xffffffd0
   17b10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17b14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b18:	mvn	r2, #0
   17b1c:	sub	r1, r2, r1
   17b20:	cmp	r0, r1
   17b24:	ble	17c40 <__assert_fail@plt+0x6960>
   17b28:	b	17c58 <__assert_fail@plt+0x6978>
   17b2c:	b	17b30 <__assert_fail@plt+0x6850>
   17b30:	b	17b88 <__assert_fail@plt+0x68a8>
   17b34:	b	17b88 <__assert_fail@plt+0x68a8>
   17b38:	ldr	r0, [fp, #8]
   17b3c:	cmn	r0, #1
   17b40:	bne	17b88 <__assert_fail@plt+0x68a8>
   17b44:	b	17b48 <__assert_fail@plt+0x6868>
   17b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b4c:	add	r0, r0, #0
   17b50:	movw	r1, #0
   17b54:	cmp	r1, r0
   17b58:	blt	17c40 <__assert_fail@plt+0x6960>
   17b5c:	b	17c58 <__assert_fail@plt+0x6978>
   17b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b64:	movw	r1, #0
   17b68:	cmp	r1, r0
   17b6c:	bge	17c58 <__assert_fail@plt+0x6978>
   17b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b74:	sub	r0, r0, #1
   17b78:	mvn	r1, #0
   17b7c:	cmp	r1, r0
   17b80:	blt	17c40 <__assert_fail@plt+0x6960>
   17b84:	b	17c58 <__assert_fail@plt+0x6978>
   17b88:	ldr	r0, [fp, #8]
   17b8c:	movw	r1, #0
   17b90:	sdiv	r0, r1, r0
   17b94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b98:	cmp	r0, r1
   17b9c:	blt	17c40 <__assert_fail@plt+0x6960>
   17ba0:	b	17c58 <__assert_fail@plt+0x6978>
   17ba4:	ldr	r0, [fp, #8]
   17ba8:	cmp	r0, #0
   17bac:	bne	17bb4 <__assert_fail@plt+0x68d4>
   17bb0:	b	17c58 <__assert_fail@plt+0x6978>
   17bb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bb8:	cmp	r0, #0
   17bbc:	bge	17c28 <__assert_fail@plt+0x6948>
   17bc0:	b	17bc4 <__assert_fail@plt+0x68e4>
   17bc4:	b	17c0c <__assert_fail@plt+0x692c>
   17bc8:	b	17c0c <__assert_fail@plt+0x692c>
   17bcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bd0:	cmn	r0, #1
   17bd4:	bne	17c0c <__assert_fail@plt+0x692c>
   17bd8:	b	17bdc <__assert_fail@plt+0x68fc>
   17bdc:	ldr	r0, [fp, #8]
   17be0:	add	r0, r0, #0
   17be4:	movw	r1, #0
   17be8:	cmp	r1, r0
   17bec:	blt	17c40 <__assert_fail@plt+0x6960>
   17bf0:	b	17c58 <__assert_fail@plt+0x6978>
   17bf4:	ldr	r0, [fp, #8]
   17bf8:	sub	r0, r0, #1
   17bfc:	mvn	r1, #0
   17c00:	cmp	r1, r0
   17c04:	blt	17c40 <__assert_fail@plt+0x6960>
   17c08:	b	17c58 <__assert_fail@plt+0x6978>
   17c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c10:	movw	r1, #0
   17c14:	sdiv	r0, r1, r0
   17c18:	ldr	r1, [fp, #8]
   17c1c:	cmp	r0, r1
   17c20:	blt	17c40 <__assert_fail@plt+0x6960>
   17c24:	b	17c58 <__assert_fail@plt+0x6978>
   17c28:	ldr	r0, [fp, #8]
   17c2c:	movw	r1, #65535	; 0xffff
   17c30:	sdiv	r0, r1, r0
   17c34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c38:	cmp	r0, r1
   17c3c:	bge	17c58 <__assert_fail@plt+0x6978>
   17c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c44:	ldr	r1, [fp, #8]
   17c48:	mul	r0, r0, r1
   17c4c:	uxth	r0, r0
   17c50:	str	r0, [fp, #-28]	; 0xffffffe4
   17c54:	b	18860 <__assert_fail@plt+0x7580>
   17c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c5c:	ldr	r1, [fp, #8]
   17c60:	mul	r0, r0, r1
   17c64:	uxth	r0, r0
   17c68:	str	r0, [fp, #-28]	; 0xffffffe4
   17c6c:	b	1886c <__assert_fail@plt+0x758c>
   17c70:	b	17c74 <__assert_fail@plt+0x6994>
   17c74:	b	17c78 <__assert_fail@plt+0x6998>
   17c78:	ldr	r0, [fp, #8]
   17c7c:	cmp	r0, #0
   17c80:	bge	17d84 <__assert_fail@plt+0x6aa4>
   17c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c88:	cmp	r0, #0
   17c8c:	bge	17d18 <__assert_fail@plt+0x6a38>
   17c90:	b	17c94 <__assert_fail@plt+0x69b4>
   17c94:	ldr	r0, [pc, #1984]	; 1845c <__assert_fail@plt+0x717c>
   17c98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c9c:	ldr	r2, [fp, #8]
   17ca0:	sdiv	r0, r0, r2
   17ca4:	cmp	r1, r0
   17ca8:	blt	17e14 <__assert_fail@plt+0x6b34>
   17cac:	b	17e28 <__assert_fail@plt+0x6b48>
   17cb0:	b	17cb4 <__assert_fail@plt+0x69d4>
   17cb4:	ldr	r0, [pc, #2116]	; 18500 <__assert_fail@plt+0x7220>
   17cb8:	ldr	r1, [fp, #8]
   17cbc:	cmp	r1, r0
   17cc0:	blt	17cd8 <__assert_fail@plt+0x69f8>
   17cc4:	b	17ce4 <__assert_fail@plt+0x6a04>
   17cc8:	ldr	r0, [fp, #8]
   17ccc:	movw	r1, #0
   17cd0:	cmp	r1, r0
   17cd4:	bge	17ce4 <__assert_fail@plt+0x6a04>
   17cd8:	movw	r0, #0
   17cdc:	str	r0, [fp, #-52]	; 0xffffffcc
   17ce0:	b	17cfc <__assert_fail@plt+0x6a1c>
   17ce4:	ldr	r0, [pc, #1904]	; 1845c <__assert_fail@plt+0x717c>
   17ce8:	ldr	r1, [fp, #8]
   17cec:	movw	r2, #0
   17cf0:	sub	r1, r2, r1
   17cf4:	sdiv	r0, r0, r1
   17cf8:	str	r0, [fp, #-52]	; 0xffffffcc
   17cfc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17d00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d04:	mvn	r2, #0
   17d08:	sub	r1, r2, r1
   17d0c:	cmp	r0, r1
   17d10:	ble	17e14 <__assert_fail@plt+0x6b34>
   17d14:	b	17e28 <__assert_fail@plt+0x6b48>
   17d18:	ldr	r0, [fp, #8]
   17d1c:	cmn	r0, #1
   17d20:	bne	17d68 <__assert_fail@plt+0x6a88>
   17d24:	b	17d28 <__assert_fail@plt+0x6a48>
   17d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d2c:	add	r0, r0, #-2147483648	; 0x80000000
   17d30:	movw	r1, #0
   17d34:	cmp	r1, r0
   17d38:	blt	17e14 <__assert_fail@plt+0x6b34>
   17d3c:	b	17e28 <__assert_fail@plt+0x6b48>
   17d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d44:	movw	r1, #0
   17d48:	cmp	r1, r0
   17d4c:	bge	17e28 <__assert_fail@plt+0x6b48>
   17d50:	ldr	r0, [pc, #1796]	; 1845c <__assert_fail@plt+0x717c>
   17d54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d58:	sub	r1, r1, #1
   17d5c:	cmp	r0, r1
   17d60:	blt	17e14 <__assert_fail@plt+0x6b34>
   17d64:	b	17e28 <__assert_fail@plt+0x6b48>
   17d68:	ldr	r0, [pc, #4080]	; 18d60 <__assert_fail@plt+0x7a80>
   17d6c:	ldr	r1, [fp, #8]
   17d70:	sdiv	r0, r0, r1
   17d74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d78:	cmp	r0, r1
   17d7c:	blt	17e14 <__assert_fail@plt+0x6b34>
   17d80:	b	17e28 <__assert_fail@plt+0x6b48>
   17d84:	ldr	r0, [fp, #8]
   17d88:	cmp	r0, #0
   17d8c:	bne	17d94 <__assert_fail@plt+0x6ab4>
   17d90:	b	17e28 <__assert_fail@plt+0x6b48>
   17d94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d98:	cmp	r0, #0
   17d9c:	bge	17dfc <__assert_fail@plt+0x6b1c>
   17da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17da4:	cmn	r0, #1
   17da8:	bne	17de0 <__assert_fail@plt+0x6b00>
   17dac:	b	17db0 <__assert_fail@plt+0x6ad0>
   17db0:	ldr	r0, [fp, #8]
   17db4:	add	r0, r0, #-2147483648	; 0x80000000
   17db8:	movw	r1, #0
   17dbc:	cmp	r1, r0
   17dc0:	blt	17e14 <__assert_fail@plt+0x6b34>
   17dc4:	b	17e28 <__assert_fail@plt+0x6b48>
   17dc8:	ldr	r0, [pc, #1676]	; 1845c <__assert_fail@plt+0x717c>
   17dcc:	ldr	r1, [fp, #8]
   17dd0:	sub	r1, r1, #1
   17dd4:	cmp	r0, r1
   17dd8:	blt	17e14 <__assert_fail@plt+0x6b34>
   17ddc:	b	17e28 <__assert_fail@plt+0x6b48>
   17de0:	ldr	r0, [pc, #3960]	; 18d60 <__assert_fail@plt+0x7a80>
   17de4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17de8:	sdiv	r0, r0, r1
   17dec:	ldr	r1, [fp, #8]
   17df0:	cmp	r0, r1
   17df4:	blt	17e14 <__assert_fail@plt+0x6b34>
   17df8:	b	17e28 <__assert_fail@plt+0x6b48>
   17dfc:	ldr	r0, [pc, #1624]	; 1845c <__assert_fail@plt+0x717c>
   17e00:	ldr	r1, [fp, #8]
   17e04:	sdiv	r0, r0, r1
   17e08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e0c:	cmp	r0, r1
   17e10:	bge	17e28 <__assert_fail@plt+0x6b48>
   17e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e18:	ldr	r1, [fp, #8]
   17e1c:	mul	r0, r0, r1
   17e20:	str	r0, [fp, #-28]	; 0xffffffe4
   17e24:	b	18860 <__assert_fail@plt+0x7580>
   17e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e2c:	ldr	r1, [fp, #8]
   17e30:	mul	r0, r0, r1
   17e34:	str	r0, [fp, #-28]	; 0xffffffe4
   17e38:	b	1886c <__assert_fail@plt+0x758c>
   17e3c:	ldr	r0, [fp, #8]
   17e40:	cmp	r0, #0
   17e44:	bge	17f54 <__assert_fail@plt+0x6c74>
   17e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e4c:	cmp	r0, #0
   17e50:	bge	17edc <__assert_fail@plt+0x6bfc>
   17e54:	b	17e74 <__assert_fail@plt+0x6b94>
   17e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e5c:	ldr	r1, [fp, #8]
   17e60:	mvn	r2, #0
   17e64:	udiv	r1, r2, r1
   17e68:	cmp	r0, r1
   17e6c:	bcc	17ff0 <__assert_fail@plt+0x6d10>
   17e70:	b	18004 <__assert_fail@plt+0x6d24>
   17e74:	b	17e78 <__assert_fail@plt+0x6b98>
   17e78:	ldr	r0, [pc, #1664]	; 18500 <__assert_fail@plt+0x7220>
   17e7c:	ldr	r1, [fp, #8]
   17e80:	cmp	r1, r0
   17e84:	blt	17e9c <__assert_fail@plt+0x6bbc>
   17e88:	b	17ea8 <__assert_fail@plt+0x6bc8>
   17e8c:	ldr	r0, [fp, #8]
   17e90:	movw	r1, #0
   17e94:	cmp	r1, r0
   17e98:	bge	17ea8 <__assert_fail@plt+0x6bc8>
   17e9c:	movw	r0, #1
   17ea0:	str	r0, [fp, #-56]	; 0xffffffc8
   17ea4:	b	17ec0 <__assert_fail@plt+0x6be0>
   17ea8:	ldr	r0, [fp, #8]
   17eac:	movw	r1, #0
   17eb0:	sub	r0, r1, r0
   17eb4:	mvn	r1, #0
   17eb8:	udiv	r0, r1, r0
   17ebc:	str	r0, [fp, #-56]	; 0xffffffc8
   17ec0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17ec4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ec8:	mvn	r2, #0
   17ecc:	sub	r1, r2, r1
   17ed0:	cmp	r0, r1
   17ed4:	bls	17ff0 <__assert_fail@plt+0x6d10>
   17ed8:	b	18004 <__assert_fail@plt+0x6d24>
   17edc:	b	17ee0 <__assert_fail@plt+0x6c00>
   17ee0:	b	17f38 <__assert_fail@plt+0x6c58>
   17ee4:	b	17f38 <__assert_fail@plt+0x6c58>
   17ee8:	ldr	r0, [fp, #8]
   17eec:	cmn	r0, #1
   17ef0:	bne	17f38 <__assert_fail@plt+0x6c58>
   17ef4:	b	17ef8 <__assert_fail@plt+0x6c18>
   17ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17efc:	add	r0, r0, #0
   17f00:	movw	r1, #0
   17f04:	cmp	r1, r0
   17f08:	blt	17ff0 <__assert_fail@plt+0x6d10>
   17f0c:	b	18004 <__assert_fail@plt+0x6d24>
   17f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f14:	movw	r1, #0
   17f18:	cmp	r1, r0
   17f1c:	bge	18004 <__assert_fail@plt+0x6d24>
   17f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f24:	sub	r0, r0, #1
   17f28:	mvn	r1, #0
   17f2c:	cmp	r1, r0
   17f30:	blt	17ff0 <__assert_fail@plt+0x6d10>
   17f34:	b	18004 <__assert_fail@plt+0x6d24>
   17f38:	ldr	r0, [fp, #8]
   17f3c:	movw	r1, #0
   17f40:	sdiv	r0, r1, r0
   17f44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f48:	cmp	r0, r1
   17f4c:	blt	17ff0 <__assert_fail@plt+0x6d10>
   17f50:	b	18004 <__assert_fail@plt+0x6d24>
   17f54:	ldr	r0, [fp, #8]
   17f58:	cmp	r0, #0
   17f5c:	bne	17f64 <__assert_fail@plt+0x6c84>
   17f60:	b	18004 <__assert_fail@plt+0x6d24>
   17f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f68:	cmp	r0, #0
   17f6c:	bge	17fd8 <__assert_fail@plt+0x6cf8>
   17f70:	b	17f74 <__assert_fail@plt+0x6c94>
   17f74:	b	17fbc <__assert_fail@plt+0x6cdc>
   17f78:	b	17fbc <__assert_fail@plt+0x6cdc>
   17f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f80:	cmn	r0, #1
   17f84:	bne	17fbc <__assert_fail@plt+0x6cdc>
   17f88:	b	17f8c <__assert_fail@plt+0x6cac>
   17f8c:	ldr	r0, [fp, #8]
   17f90:	add	r0, r0, #0
   17f94:	movw	r1, #0
   17f98:	cmp	r1, r0
   17f9c:	blt	17ff0 <__assert_fail@plt+0x6d10>
   17fa0:	b	18004 <__assert_fail@plt+0x6d24>
   17fa4:	ldr	r0, [fp, #8]
   17fa8:	sub	r0, r0, #1
   17fac:	mvn	r1, #0
   17fb0:	cmp	r1, r0
   17fb4:	blt	17ff0 <__assert_fail@plt+0x6d10>
   17fb8:	b	18004 <__assert_fail@plt+0x6d24>
   17fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fc0:	movw	r1, #0
   17fc4:	sdiv	r0, r1, r0
   17fc8:	ldr	r1, [fp, #8]
   17fcc:	cmp	r0, r1
   17fd0:	blt	17ff0 <__assert_fail@plt+0x6d10>
   17fd4:	b	18004 <__assert_fail@plt+0x6d24>
   17fd8:	ldr	r0, [fp, #8]
   17fdc:	mvn	r1, #0
   17fe0:	udiv	r0, r1, r0
   17fe4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fe8:	cmp	r0, r1
   17fec:	bcs	18004 <__assert_fail@plt+0x6d24>
   17ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ff4:	ldr	r1, [fp, #8]
   17ff8:	mul	r0, r0, r1
   17ffc:	str	r0, [fp, #-28]	; 0xffffffe4
   18000:	b	18860 <__assert_fail@plt+0x7580>
   18004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18008:	ldr	r1, [fp, #8]
   1800c:	mul	r0, r0, r1
   18010:	str	r0, [fp, #-28]	; 0xffffffe4
   18014:	b	1886c <__assert_fail@plt+0x758c>
   18018:	b	1801c <__assert_fail@plt+0x6d3c>
   1801c:	b	18020 <__assert_fail@plt+0x6d40>
   18020:	ldr	r0, [fp, #8]
   18024:	cmp	r0, #0
   18028:	bge	1812c <__assert_fail@plt+0x6e4c>
   1802c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18030:	cmp	r0, #0
   18034:	bge	180c0 <__assert_fail@plt+0x6de0>
   18038:	b	1803c <__assert_fail@plt+0x6d5c>
   1803c:	ldr	r0, [pc, #1048]	; 1845c <__assert_fail@plt+0x717c>
   18040:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18044:	ldr	r2, [fp, #8]
   18048:	sdiv	r0, r0, r2
   1804c:	cmp	r1, r0
   18050:	blt	181bc <__assert_fail@plt+0x6edc>
   18054:	b	181d0 <__assert_fail@plt+0x6ef0>
   18058:	b	1805c <__assert_fail@plt+0x6d7c>
   1805c:	ldr	r0, [pc, #1180]	; 18500 <__assert_fail@plt+0x7220>
   18060:	ldr	r1, [fp, #8]
   18064:	cmp	r1, r0
   18068:	blt	18080 <__assert_fail@plt+0x6da0>
   1806c:	b	1808c <__assert_fail@plt+0x6dac>
   18070:	ldr	r0, [fp, #8]
   18074:	movw	r1, #0
   18078:	cmp	r1, r0
   1807c:	bge	1808c <__assert_fail@plt+0x6dac>
   18080:	movw	r0, #0
   18084:	str	r0, [fp, #-60]	; 0xffffffc4
   18088:	b	180a4 <__assert_fail@plt+0x6dc4>
   1808c:	ldr	r0, [pc, #968]	; 1845c <__assert_fail@plt+0x717c>
   18090:	ldr	r1, [fp, #8]
   18094:	movw	r2, #0
   18098:	sub	r1, r2, r1
   1809c:	sdiv	r0, r0, r1
   180a0:	str	r0, [fp, #-60]	; 0xffffffc4
   180a4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   180a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180ac:	mvn	r2, #0
   180b0:	sub	r1, r2, r1
   180b4:	cmp	r0, r1
   180b8:	ble	181bc <__assert_fail@plt+0x6edc>
   180bc:	b	181d0 <__assert_fail@plt+0x6ef0>
   180c0:	ldr	r0, [fp, #8]
   180c4:	cmn	r0, #1
   180c8:	bne	18110 <__assert_fail@plt+0x6e30>
   180cc:	b	180d0 <__assert_fail@plt+0x6df0>
   180d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180d4:	add	r0, r0, #-2147483648	; 0x80000000
   180d8:	movw	r1, #0
   180dc:	cmp	r1, r0
   180e0:	blt	181bc <__assert_fail@plt+0x6edc>
   180e4:	b	181d0 <__assert_fail@plt+0x6ef0>
   180e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180ec:	movw	r1, #0
   180f0:	cmp	r1, r0
   180f4:	bge	181d0 <__assert_fail@plt+0x6ef0>
   180f8:	ldr	r0, [pc, #860]	; 1845c <__assert_fail@plt+0x717c>
   180fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18100:	sub	r1, r1, #1
   18104:	cmp	r0, r1
   18108:	blt	181bc <__assert_fail@plt+0x6edc>
   1810c:	b	181d0 <__assert_fail@plt+0x6ef0>
   18110:	ldr	r0, [pc, #3144]	; 18d60 <__assert_fail@plt+0x7a80>
   18114:	ldr	r1, [fp, #8]
   18118:	sdiv	r0, r0, r1
   1811c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18120:	cmp	r0, r1
   18124:	blt	181bc <__assert_fail@plt+0x6edc>
   18128:	b	181d0 <__assert_fail@plt+0x6ef0>
   1812c:	ldr	r0, [fp, #8]
   18130:	cmp	r0, #0
   18134:	bne	1813c <__assert_fail@plt+0x6e5c>
   18138:	b	181d0 <__assert_fail@plt+0x6ef0>
   1813c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18140:	cmp	r0, #0
   18144:	bge	181a4 <__assert_fail@plt+0x6ec4>
   18148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1814c:	cmn	r0, #1
   18150:	bne	18188 <__assert_fail@plt+0x6ea8>
   18154:	b	18158 <__assert_fail@plt+0x6e78>
   18158:	ldr	r0, [fp, #8]
   1815c:	add	r0, r0, #-2147483648	; 0x80000000
   18160:	movw	r1, #0
   18164:	cmp	r1, r0
   18168:	blt	181bc <__assert_fail@plt+0x6edc>
   1816c:	b	181d0 <__assert_fail@plt+0x6ef0>
   18170:	ldr	r0, [pc, #740]	; 1845c <__assert_fail@plt+0x717c>
   18174:	ldr	r1, [fp, #8]
   18178:	sub	r1, r1, #1
   1817c:	cmp	r0, r1
   18180:	blt	181bc <__assert_fail@plt+0x6edc>
   18184:	b	181d0 <__assert_fail@plt+0x6ef0>
   18188:	ldr	r0, [pc, #3024]	; 18d60 <__assert_fail@plt+0x7a80>
   1818c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18190:	sdiv	r0, r0, r1
   18194:	ldr	r1, [fp, #8]
   18198:	cmp	r0, r1
   1819c:	blt	181bc <__assert_fail@plt+0x6edc>
   181a0:	b	181d0 <__assert_fail@plt+0x6ef0>
   181a4:	ldr	r0, [pc, #688]	; 1845c <__assert_fail@plt+0x717c>
   181a8:	ldr	r1, [fp, #8]
   181ac:	sdiv	r0, r0, r1
   181b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181b4:	cmp	r0, r1
   181b8:	bge	181d0 <__assert_fail@plt+0x6ef0>
   181bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181c0:	ldr	r1, [fp, #8]
   181c4:	mul	r0, r0, r1
   181c8:	str	r0, [fp, #-28]	; 0xffffffe4
   181cc:	b	18860 <__assert_fail@plt+0x7580>
   181d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181d4:	ldr	r1, [fp, #8]
   181d8:	mul	r0, r0, r1
   181dc:	str	r0, [fp, #-28]	; 0xffffffe4
   181e0:	b	1886c <__assert_fail@plt+0x758c>
   181e4:	ldr	r0, [fp, #8]
   181e8:	cmp	r0, #0
   181ec:	bge	182fc <__assert_fail@plt+0x701c>
   181f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181f4:	cmp	r0, #0
   181f8:	bge	18284 <__assert_fail@plt+0x6fa4>
   181fc:	b	1821c <__assert_fail@plt+0x6f3c>
   18200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18204:	ldr	r1, [fp, #8]
   18208:	mvn	r2, #0
   1820c:	udiv	r1, r2, r1
   18210:	cmp	r0, r1
   18214:	bcc	18398 <__assert_fail@plt+0x70b8>
   18218:	b	183ac <__assert_fail@plt+0x70cc>
   1821c:	b	18220 <__assert_fail@plt+0x6f40>
   18220:	ldr	r0, [pc, #728]	; 18500 <__assert_fail@plt+0x7220>
   18224:	ldr	r1, [fp, #8]
   18228:	cmp	r1, r0
   1822c:	blt	18244 <__assert_fail@plt+0x6f64>
   18230:	b	18250 <__assert_fail@plt+0x6f70>
   18234:	ldr	r0, [fp, #8]
   18238:	movw	r1, #0
   1823c:	cmp	r1, r0
   18240:	bge	18250 <__assert_fail@plt+0x6f70>
   18244:	movw	r0, #1
   18248:	str	r0, [fp, #-64]	; 0xffffffc0
   1824c:	b	18268 <__assert_fail@plt+0x6f88>
   18250:	ldr	r0, [fp, #8]
   18254:	movw	r1, #0
   18258:	sub	r0, r1, r0
   1825c:	mvn	r1, #0
   18260:	udiv	r0, r1, r0
   18264:	str	r0, [fp, #-64]	; 0xffffffc0
   18268:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1826c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18270:	mvn	r2, #0
   18274:	sub	r1, r2, r1
   18278:	cmp	r0, r1
   1827c:	bls	18398 <__assert_fail@plt+0x70b8>
   18280:	b	183ac <__assert_fail@plt+0x70cc>
   18284:	b	18288 <__assert_fail@plt+0x6fa8>
   18288:	b	182e0 <__assert_fail@plt+0x7000>
   1828c:	b	182e0 <__assert_fail@plt+0x7000>
   18290:	ldr	r0, [fp, #8]
   18294:	cmn	r0, #1
   18298:	bne	182e0 <__assert_fail@plt+0x7000>
   1829c:	b	182a0 <__assert_fail@plt+0x6fc0>
   182a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182a4:	add	r0, r0, #0
   182a8:	movw	r1, #0
   182ac:	cmp	r1, r0
   182b0:	blt	18398 <__assert_fail@plt+0x70b8>
   182b4:	b	183ac <__assert_fail@plt+0x70cc>
   182b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182bc:	movw	r1, #0
   182c0:	cmp	r1, r0
   182c4:	bge	183ac <__assert_fail@plt+0x70cc>
   182c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182cc:	sub	r0, r0, #1
   182d0:	mvn	r1, #0
   182d4:	cmp	r1, r0
   182d8:	blt	18398 <__assert_fail@plt+0x70b8>
   182dc:	b	183ac <__assert_fail@plt+0x70cc>
   182e0:	ldr	r0, [fp, #8]
   182e4:	movw	r1, #0
   182e8:	sdiv	r0, r1, r0
   182ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182f0:	cmp	r0, r1
   182f4:	blt	18398 <__assert_fail@plt+0x70b8>
   182f8:	b	183ac <__assert_fail@plt+0x70cc>
   182fc:	ldr	r0, [fp, #8]
   18300:	cmp	r0, #0
   18304:	bne	1830c <__assert_fail@plt+0x702c>
   18308:	b	183ac <__assert_fail@plt+0x70cc>
   1830c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18310:	cmp	r0, #0
   18314:	bge	18380 <__assert_fail@plt+0x70a0>
   18318:	b	1831c <__assert_fail@plt+0x703c>
   1831c:	b	18364 <__assert_fail@plt+0x7084>
   18320:	b	18364 <__assert_fail@plt+0x7084>
   18324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18328:	cmn	r0, #1
   1832c:	bne	18364 <__assert_fail@plt+0x7084>
   18330:	b	18334 <__assert_fail@plt+0x7054>
   18334:	ldr	r0, [fp, #8]
   18338:	add	r0, r0, #0
   1833c:	movw	r1, #0
   18340:	cmp	r1, r0
   18344:	blt	18398 <__assert_fail@plt+0x70b8>
   18348:	b	183ac <__assert_fail@plt+0x70cc>
   1834c:	ldr	r0, [fp, #8]
   18350:	sub	r0, r0, #1
   18354:	mvn	r1, #0
   18358:	cmp	r1, r0
   1835c:	blt	18398 <__assert_fail@plt+0x70b8>
   18360:	b	183ac <__assert_fail@plt+0x70cc>
   18364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18368:	movw	r1, #0
   1836c:	sdiv	r0, r1, r0
   18370:	ldr	r1, [fp, #8]
   18374:	cmp	r0, r1
   18378:	blt	18398 <__assert_fail@plt+0x70b8>
   1837c:	b	183ac <__assert_fail@plt+0x70cc>
   18380:	ldr	r0, [fp, #8]
   18384:	mvn	r1, #0
   18388:	udiv	r0, r1, r0
   1838c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18390:	cmp	r0, r1
   18394:	bcs	183ac <__assert_fail@plt+0x70cc>
   18398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1839c:	ldr	r1, [fp, #8]
   183a0:	mul	r0, r0, r1
   183a4:	str	r0, [fp, #-28]	; 0xffffffe4
   183a8:	b	18860 <__assert_fail@plt+0x7580>
   183ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183b0:	ldr	r1, [fp, #8]
   183b4:	mul	r0, r0, r1
   183b8:	str	r0, [fp, #-28]	; 0xffffffe4
   183bc:	b	1886c <__assert_fail@plt+0x758c>
   183c0:	b	183c4 <__assert_fail@plt+0x70e4>
   183c4:	ldr	r0, [fp, #8]
   183c8:	cmp	r0, #0
   183cc:	bge	1853c <__assert_fail@plt+0x725c>
   183d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183d4:	cmp	r0, #0
   183d8:	bge	184b4 <__assert_fail@plt+0x71d4>
   183dc:	b	183e0 <__assert_fail@plt+0x7100>
   183e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183e4:	ldr	r1, [fp, #8]
   183e8:	asr	r3, r1, #31
   183ec:	mvn	r2, #0
   183f0:	mvn	ip, #-2147483648	; 0x80000000
   183f4:	str	r0, [fp, #-68]	; 0xffffffbc
   183f8:	mov	r0, r2
   183fc:	str	r1, [fp, #-72]	; 0xffffffb8
   18400:	mov	r1, ip
   18404:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18408:	bl	1c444 <__assert_fail@plt+0xb164>
   1840c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   18410:	subs	r0, r2, r0
   18414:	rscs	r1, r1, r2, asr #31
   18418:	blt	18604 <__assert_fail@plt+0x7324>
   1841c:	b	18618 <__assert_fail@plt+0x7338>
   18420:	b	18424 <__assert_fail@plt+0x7144>
   18424:	ldr	r0, [pc, #212]	; 18500 <__assert_fail@plt+0x7220>
   18428:	ldr	r1, [fp, #8]
   1842c:	cmp	r1, r0
   18430:	blt	18448 <__assert_fail@plt+0x7168>
   18434:	b	18460 <__assert_fail@plt+0x7180>
   18438:	ldr	r0, [fp, #8]
   1843c:	movw	r1, #0
   18440:	cmp	r1, r0
   18444:	bge	18460 <__assert_fail@plt+0x7180>
   18448:	mov	r0, #0
   1844c:	mvn	r1, #0
   18450:	str	r1, [fp, #-76]	; 0xffffffb4
   18454:	str	r0, [fp, #-80]	; 0xffffffb0
   18458:	b	18494 <__assert_fail@plt+0x71b4>
   1845c:	svcvc	0x00ffffff
   18460:	ldr	r0, [fp, #8]
   18464:	rsb	r0, r0, #0
   18468:	asr	r3, r0, #31
   1846c:	mvn	r1, #0
   18470:	mvn	r2, #-2147483648	; 0x80000000
   18474:	str	r0, [fp, #-84]	; 0xffffffac
   18478:	mov	r0, r1
   1847c:	mov	r1, r2
   18480:	ldr	r2, [fp, #-84]	; 0xffffffac
   18484:	bl	1c444 <__assert_fail@plt+0xb164>
   18488:	str	r0, [fp, #-76]	; 0xffffffb4
   1848c:	str	r1, [fp, #-80]	; 0xffffffb0
   18490:	b	18494 <__assert_fail@plt+0x71b4>
   18494:	ldr	r0, [fp, #-80]	; 0xffffffb0
   18498:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1849c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   184a0:	mvn	r2, r2
   184a4:	subs	r1, r2, r1
   184a8:	rscs	r0, r0, r2, asr #31
   184ac:	bge	18604 <__assert_fail@plt+0x7324>
   184b0:	b	18618 <__assert_fail@plt+0x7338>
   184b4:	ldr	r0, [fp, #8]
   184b8:	cmn	r0, #1
   184bc:	bne	18504 <__assert_fail@plt+0x7224>
   184c0:	b	184c4 <__assert_fail@plt+0x71e4>
   184c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184c8:	mov	r1, #-2147483648	; 0x80000000
   184cc:	add	r1, r1, r0, asr #31
   184d0:	rsbs	r0, r0, #0
   184d4:	rscs	r1, r1, #0
   184d8:	blt	18604 <__assert_fail@plt+0x7324>
   184dc:	b	18618 <__assert_fail@plt+0x7338>
   184e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184e4:	movw	r1, #0
   184e8:	cmp	r1, r0
   184ec:	bge	18618 <__assert_fail@plt+0x7338>
   184f0:	mov	r0, #0
   184f4:	cmp	r0, #0
   184f8:	bne	18604 <__assert_fail@plt+0x7324>
   184fc:	b	18618 <__assert_fail@plt+0x7338>
   18500:	andhi	r0, r0, r1
   18504:	ldr	r0, [fp, #8]
   18508:	asr	r3, r0, #31
   1850c:	mov	r1, #0
   18510:	mov	r2, #-2147483648	; 0x80000000
   18514:	str	r0, [fp, #-88]	; 0xffffffa8
   18518:	mov	r0, r1
   1851c:	mov	r1, r2
   18520:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18524:	bl	1c444 <__assert_fail@plt+0xb164>
   18528:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1852c:	subs	r0, r0, r2
   18530:	sbcs	r1, r1, r2, asr #31
   18534:	blt	18604 <__assert_fail@plt+0x7324>
   18538:	b	18618 <__assert_fail@plt+0x7338>
   1853c:	ldr	r0, [fp, #8]
   18540:	cmp	r0, #0
   18544:	bne	1854c <__assert_fail@plt+0x726c>
   18548:	b	18618 <__assert_fail@plt+0x7338>
   1854c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18550:	cmp	r0, #0
   18554:	bge	185cc <__assert_fail@plt+0x72ec>
   18558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1855c:	cmn	r0, #1
   18560:	bne	18594 <__assert_fail@plt+0x72b4>
   18564:	b	18568 <__assert_fail@plt+0x7288>
   18568:	ldr	r0, [fp, #8]
   1856c:	mov	r1, #-2147483648	; 0x80000000
   18570:	add	r1, r1, r0, asr #31
   18574:	rsbs	r0, r0, #0
   18578:	rscs	r1, r1, #0
   1857c:	blt	18604 <__assert_fail@plt+0x7324>
   18580:	b	18618 <__assert_fail@plt+0x7338>
   18584:	mov	r0, #0
   18588:	cmp	r0, #0
   1858c:	bne	18604 <__assert_fail@plt+0x7324>
   18590:	b	18618 <__assert_fail@plt+0x7338>
   18594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18598:	asr	r3, r0, #31
   1859c:	mov	r1, #0
   185a0:	mov	r2, #-2147483648	; 0x80000000
   185a4:	str	r0, [fp, #-92]	; 0xffffffa4
   185a8:	mov	r0, r1
   185ac:	mov	r1, r2
   185b0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   185b4:	bl	1c444 <__assert_fail@plt+0xb164>
   185b8:	ldr	r2, [fp, #8]
   185bc:	subs	r0, r0, r2
   185c0:	sbcs	r1, r1, r2, asr #31
   185c4:	blt	18604 <__assert_fail@plt+0x7324>
   185c8:	b	18618 <__assert_fail@plt+0x7338>
   185cc:	ldr	r0, [fp, #8]
   185d0:	asr	r3, r0, #31
   185d4:	mvn	r1, #0
   185d8:	mvn	r2, #-2147483648	; 0x80000000
   185dc:	str	r0, [fp, #-96]	; 0xffffffa0
   185e0:	mov	r0, r1
   185e4:	mov	r1, r2
   185e8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   185ec:	bl	1c444 <__assert_fail@plt+0xb164>
   185f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   185f4:	subs	r0, r0, r2
   185f8:	sbcs	r1, r1, r2, asr #31
   185fc:	bge	18618 <__assert_fail@plt+0x7338>
   18600:	b	18604 <__assert_fail@plt+0x7324>
   18604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18608:	ldr	r1, [fp, #8]
   1860c:	mul	r0, r0, r1
   18610:	str	r0, [fp, #-28]	; 0xffffffe4
   18614:	b	18860 <__assert_fail@plt+0x7580>
   18618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1861c:	ldr	r1, [fp, #8]
   18620:	mul	r0, r0, r1
   18624:	str	r0, [fp, #-28]	; 0xffffffe4
   18628:	b	1886c <__assert_fail@plt+0x758c>
   1862c:	ldr	r0, [fp, #8]
   18630:	cmp	r0, #0
   18634:	bge	18784 <__assert_fail@plt+0x74a4>
   18638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1863c:	cmp	r0, #0
   18640:	bge	1870c <__assert_fail@plt+0x742c>
   18644:	b	18684 <__assert_fail@plt+0x73a4>
   18648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1864c:	ldr	r1, [fp, #8]
   18650:	asr	r3, r1, #31
   18654:	mvn	r2, #0
   18658:	str	r0, [fp, #-100]	; 0xffffff9c
   1865c:	mov	r0, r2
   18660:	str	r1, [fp, #-104]	; 0xffffff98
   18664:	mov	r1, r2
   18668:	ldr	r2, [fp, #-104]	; 0xffffff98
   1866c:	bl	1c518 <__assert_fail@plt+0xb238>
   18670:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18674:	subs	r0, r2, r0
   18678:	rscs	r1, r1, r2, asr #31
   1867c:	bcc	18838 <__assert_fail@plt+0x7558>
   18680:	b	1884c <__assert_fail@plt+0x756c>
   18684:	b	18688 <__assert_fail@plt+0x73a8>
   18688:	ldr	r0, [pc, #-400]	; 18500 <__assert_fail@plt+0x7220>
   1868c:	ldr	r1, [fp, #8]
   18690:	cmp	r1, r0
   18694:	blt	186ac <__assert_fail@plt+0x73cc>
   18698:	b	186c0 <__assert_fail@plt+0x73e0>
   1869c:	ldr	r0, [fp, #8]
   186a0:	movw	r1, #0
   186a4:	cmp	r1, r0
   186a8:	bge	186c0 <__assert_fail@plt+0x73e0>
   186ac:	mov	r0, #1
   186b0:	mvn	r1, #0
   186b4:	str	r1, [sp, #108]	; 0x6c
   186b8:	str	r0, [sp, #104]	; 0x68
   186bc:	b	186ec <__assert_fail@plt+0x740c>
   186c0:	ldr	r0, [fp, #8]
   186c4:	rsb	r0, r0, #0
   186c8:	asr	r3, r0, #31
   186cc:	mvn	r1, #0
   186d0:	str	r0, [sp, #100]	; 0x64
   186d4:	mov	r0, r1
   186d8:	ldr	r2, [sp, #100]	; 0x64
   186dc:	bl	1c518 <__assert_fail@plt+0xb238>
   186e0:	str	r0, [sp, #108]	; 0x6c
   186e4:	str	r1, [sp, #104]	; 0x68
   186e8:	b	186ec <__assert_fail@plt+0x740c>
   186ec:	ldr	r0, [sp, #104]	; 0x68
   186f0:	ldr	r1, [sp, #108]	; 0x6c
   186f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   186f8:	mvn	r2, r2
   186fc:	subs	r1, r2, r1
   18700:	rscs	r0, r0, r2, asr #31
   18704:	bcs	18838 <__assert_fail@plt+0x7558>
   18708:	b	1884c <__assert_fail@plt+0x756c>
   1870c:	b	18710 <__assert_fail@plt+0x7430>
   18710:	b	18768 <__assert_fail@plt+0x7488>
   18714:	b	18768 <__assert_fail@plt+0x7488>
   18718:	ldr	r0, [fp, #8]
   1871c:	cmn	r0, #1
   18720:	bne	18768 <__assert_fail@plt+0x7488>
   18724:	b	18728 <__assert_fail@plt+0x7448>
   18728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1872c:	add	r0, r0, #0
   18730:	movw	r1, #0
   18734:	cmp	r1, r0
   18738:	blt	18838 <__assert_fail@plt+0x7558>
   1873c:	b	1884c <__assert_fail@plt+0x756c>
   18740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18744:	movw	r1, #0
   18748:	cmp	r1, r0
   1874c:	bge	1884c <__assert_fail@plt+0x756c>
   18750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18754:	sub	r0, r0, #1
   18758:	mvn	r1, #0
   1875c:	cmp	r1, r0
   18760:	blt	18838 <__assert_fail@plt+0x7558>
   18764:	b	1884c <__assert_fail@plt+0x756c>
   18768:	ldr	r0, [fp, #8]
   1876c:	movw	r1, #0
   18770:	sdiv	r0, r1, r0
   18774:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18778:	cmp	r0, r1
   1877c:	blt	18838 <__assert_fail@plt+0x7558>
   18780:	b	1884c <__assert_fail@plt+0x756c>
   18784:	ldr	r0, [fp, #8]
   18788:	cmp	r0, #0
   1878c:	bne	18794 <__assert_fail@plt+0x74b4>
   18790:	b	1884c <__assert_fail@plt+0x756c>
   18794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18798:	cmp	r0, #0
   1879c:	bge	18808 <__assert_fail@plt+0x7528>
   187a0:	b	187a4 <__assert_fail@plt+0x74c4>
   187a4:	b	187ec <__assert_fail@plt+0x750c>
   187a8:	b	187ec <__assert_fail@plt+0x750c>
   187ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187b0:	cmn	r0, #1
   187b4:	bne	187ec <__assert_fail@plt+0x750c>
   187b8:	b	187bc <__assert_fail@plt+0x74dc>
   187bc:	ldr	r0, [fp, #8]
   187c0:	add	r0, r0, #0
   187c4:	movw	r1, #0
   187c8:	cmp	r1, r0
   187cc:	blt	18838 <__assert_fail@plt+0x7558>
   187d0:	b	1884c <__assert_fail@plt+0x756c>
   187d4:	ldr	r0, [fp, #8]
   187d8:	sub	r0, r0, #1
   187dc:	mvn	r1, #0
   187e0:	cmp	r1, r0
   187e4:	blt	18838 <__assert_fail@plt+0x7558>
   187e8:	b	1884c <__assert_fail@plt+0x756c>
   187ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187f0:	movw	r1, #0
   187f4:	sdiv	r0, r1, r0
   187f8:	ldr	r1, [fp, #8]
   187fc:	cmp	r0, r1
   18800:	blt	18838 <__assert_fail@plt+0x7558>
   18804:	b	1884c <__assert_fail@plt+0x756c>
   18808:	ldr	r0, [fp, #8]
   1880c:	asr	r3, r0, #31
   18810:	mvn	r1, #0
   18814:	str	r0, [sp, #96]	; 0x60
   18818:	mov	r0, r1
   1881c:	ldr	r2, [sp, #96]	; 0x60
   18820:	bl	1c518 <__assert_fail@plt+0xb238>
   18824:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18828:	subs	r0, r0, r2
   1882c:	sbcs	r1, r1, r2, asr #31
   18830:	bcs	1884c <__assert_fail@plt+0x756c>
   18834:	b	18838 <__assert_fail@plt+0x7558>
   18838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1883c:	ldr	r1, [fp, #8]
   18840:	mul	r0, r0, r1
   18844:	str	r0, [fp, #-28]	; 0xffffffe4
   18848:	b	18860 <__assert_fail@plt+0x7580>
   1884c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18850:	ldr	r1, [fp, #8]
   18854:	mul	r0, r0, r1
   18858:	str	r0, [fp, #-28]	; 0xffffffe4
   1885c:	b	1886c <__assert_fail@plt+0x758c>
   18860:	ldr	r0, [pc, #-1036]	; 1845c <__assert_fail@plt+0x717c>
   18864:	str	r0, [sp, #92]	; 0x5c
   18868:	b	1888c <__assert_fail@plt+0x75ac>
   1886c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18870:	cmp	r0, #64	; 0x40
   18874:	movw	r0, #0
   18878:	movlt	r0, #1
   1887c:	tst	r0, #1
   18880:	movw	r0, #64	; 0x40
   18884:	moveq	r0, #0
   18888:	str	r0, [sp, #92]	; 0x5c
   1888c:	ldr	r0, [sp, #92]	; 0x5c
   18890:	str	r0, [fp, #-32]	; 0xffffffe0
   18894:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18898:	cmp	r0, #0
   1889c:	beq	188cc <__assert_fail@plt+0x75ec>
   188a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   188a4:	ldr	r1, [fp, #8]
   188a8:	sdiv	r0, r0, r1
   188ac:	str	r0, [fp, #-24]	; 0xffffffe8
   188b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   188b4:	mov	r1, r0
   188b8:	ldr	r2, [fp, #8]
   188bc:	sdiv	r3, r0, r2
   188c0:	mls	r0, r3, r2, r0
   188c4:	sub	r0, r1, r0
   188c8:	str	r0, [fp, #-28]	; 0xffffffe4
   188cc:	ldr	r0, [fp, #-4]
   188d0:	movw	r1, #0
   188d4:	cmp	r0, r1
   188d8:	bne	188e8 <__assert_fail@plt+0x7608>
   188dc:	ldr	r0, [fp, #-8]
   188e0:	movw	r1, #0
   188e4:	str	r1, [r0]
   188e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   188f0:	sub	r0, r0, r1
   188f4:	ldr	r1, [fp, #-12]
   188f8:	cmp	r0, r1
   188fc:	bge	19ce8 <__assert_fail@plt+0x8a08>
   18900:	ldr	r0, [fp, #-20]	; 0xffffffec
   18904:	ldr	r1, [fp, #-12]
   18908:	add	r1, r0, r1
   1890c:	mov	r2, #1
   18910:	cmp	r1, r0
   18914:	movwvc	r2, #0
   18918:	str	r1, [fp, #-24]	; 0xffffffe8
   1891c:	tst	r2, #1
   18920:	bne	19ce4 <__assert_fail@plt+0x8a04>
   18924:	ldr	r0, [fp, #-16]
   18928:	movw	r1, #0
   1892c:	cmp	r1, r0
   18930:	bgt	18944 <__assert_fail@plt+0x7664>
   18934:	ldr	r0, [fp, #-16]
   18938:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1893c:	cmp	r0, r1
   18940:	blt	19ce4 <__assert_fail@plt+0x8a04>
   18944:	b	18d20 <__assert_fail@plt+0x7a40>
   18948:			; <UNDEFINED> instruction: 0xffff8000
   1894c:	b	18950 <__assert_fail@plt+0x7670>
   18950:	ldr	r0, [fp, #8]
   18954:	cmp	r0, #0
   18958:	bge	18a6c <__assert_fail@plt+0x778c>
   1895c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18960:	cmp	r0, #0
   18964:	bge	189f0 <__assert_fail@plt+0x7710>
   18968:	b	1896c <__assert_fail@plt+0x768c>
   1896c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18970:	ldr	r1, [fp, #8]
   18974:	movw	r2, #127	; 0x7f
   18978:	sdiv	r1, r2, r1
   1897c:	cmp	r0, r1
   18980:	blt	18b0c <__assert_fail@plt+0x782c>
   18984:	b	18b24 <__assert_fail@plt+0x7844>
   18988:	b	1898c <__assert_fail@plt+0x76ac>
   1898c:	ldr	r0, [pc, #-1172]	; 18500 <__assert_fail@plt+0x7220>
   18990:	ldr	r1, [fp, #8]
   18994:	cmp	r1, r0
   18998:	blt	189b0 <__assert_fail@plt+0x76d0>
   1899c:	b	189bc <__assert_fail@plt+0x76dc>
   189a0:	ldr	r0, [fp, #8]
   189a4:	movw	r1, #0
   189a8:	cmp	r1, r0
   189ac:	bge	189bc <__assert_fail@plt+0x76dc>
   189b0:	movw	r0, #0
   189b4:	str	r0, [sp, #88]	; 0x58
   189b8:	b	189d4 <__assert_fail@plt+0x76f4>
   189bc:	ldr	r0, [fp, #8]
   189c0:	movw	r1, #0
   189c4:	sub	r0, r1, r0
   189c8:	movw	r1, #127	; 0x7f
   189cc:	sdiv	r0, r1, r0
   189d0:	str	r0, [sp, #88]	; 0x58
   189d4:	ldr	r0, [sp, #88]	; 0x58
   189d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   189dc:	mvn	r2, #0
   189e0:	sub	r1, r2, r1
   189e4:	cmp	r0, r1
   189e8:	ble	18b0c <__assert_fail@plt+0x782c>
   189ec:	b	18b24 <__assert_fail@plt+0x7844>
   189f0:	b	189f4 <__assert_fail@plt+0x7714>
   189f4:	b	18a50 <__assert_fail@plt+0x7770>
   189f8:	b	18a50 <__assert_fail@plt+0x7770>
   189fc:	ldr	r0, [fp, #8]
   18a00:	cmn	r0, #1
   18a04:	bne	18a50 <__assert_fail@plt+0x7770>
   18a08:	b	18a0c <__assert_fail@plt+0x772c>
   18a0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a10:	mvn	r1, #127	; 0x7f
   18a14:	add	r0, r0, r1
   18a18:	movw	r1, #0
   18a1c:	cmp	r1, r0
   18a20:	blt	18b0c <__assert_fail@plt+0x782c>
   18a24:	b	18b24 <__assert_fail@plt+0x7844>
   18a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a2c:	movw	r1, #0
   18a30:	cmp	r1, r0
   18a34:	bge	18b24 <__assert_fail@plt+0x7844>
   18a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a3c:	sub	r0, r0, #1
   18a40:	movw	r1, #127	; 0x7f
   18a44:	cmp	r1, r0
   18a48:	blt	18b0c <__assert_fail@plt+0x782c>
   18a4c:	b	18b24 <__assert_fail@plt+0x7844>
   18a50:	ldr	r0, [fp, #8]
   18a54:	mvn	r1, #127	; 0x7f
   18a58:	sdiv	r0, r1, r0
   18a5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a60:	cmp	r0, r1
   18a64:	blt	18b0c <__assert_fail@plt+0x782c>
   18a68:	b	18b24 <__assert_fail@plt+0x7844>
   18a6c:	ldr	r0, [fp, #8]
   18a70:	cmp	r0, #0
   18a74:	bne	18a7c <__assert_fail@plt+0x779c>
   18a78:	b	18b24 <__assert_fail@plt+0x7844>
   18a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a80:	cmp	r0, #0
   18a84:	bge	18af4 <__assert_fail@plt+0x7814>
   18a88:	b	18a8c <__assert_fail@plt+0x77ac>
   18a8c:	b	18ad8 <__assert_fail@plt+0x77f8>
   18a90:	b	18ad8 <__assert_fail@plt+0x77f8>
   18a94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a98:	cmn	r0, #1
   18a9c:	bne	18ad8 <__assert_fail@plt+0x77f8>
   18aa0:	b	18aa4 <__assert_fail@plt+0x77c4>
   18aa4:	ldr	r0, [fp, #8]
   18aa8:	mvn	r1, #127	; 0x7f
   18aac:	add	r0, r0, r1
   18ab0:	movw	r1, #0
   18ab4:	cmp	r1, r0
   18ab8:	blt	18b0c <__assert_fail@plt+0x782c>
   18abc:	b	18b24 <__assert_fail@plt+0x7844>
   18ac0:	ldr	r0, [fp, #8]
   18ac4:	sub	r0, r0, #1
   18ac8:	movw	r1, #127	; 0x7f
   18acc:	cmp	r1, r0
   18ad0:	blt	18b0c <__assert_fail@plt+0x782c>
   18ad4:	b	18b24 <__assert_fail@plt+0x7844>
   18ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18adc:	mvn	r1, #127	; 0x7f
   18ae0:	sdiv	r0, r1, r0
   18ae4:	ldr	r1, [fp, #8]
   18ae8:	cmp	r0, r1
   18aec:	blt	18b0c <__assert_fail@plt+0x782c>
   18af0:	b	18b24 <__assert_fail@plt+0x7844>
   18af4:	ldr	r0, [fp, #8]
   18af8:	movw	r1, #127	; 0x7f
   18afc:	sdiv	r0, r1, r0
   18b00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b04:	cmp	r0, r1
   18b08:	bge	18b24 <__assert_fail@plt+0x7844>
   18b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b10:	ldr	r1, [fp, #8]
   18b14:	mul	r0, r0, r1
   18b18:	sxtb	r0, r0
   18b1c:	str	r0, [fp, #-28]	; 0xffffffe4
   18b20:	b	19ce4 <__assert_fail@plt+0x8a04>
   18b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b28:	ldr	r1, [fp, #8]
   18b2c:	mul	r0, r0, r1
   18b30:	sxtb	r0, r0
   18b34:	str	r0, [fp, #-28]	; 0xffffffe4
   18b38:	b	19ce8 <__assert_fail@plt+0x8a08>
   18b3c:	ldr	r0, [fp, #8]
   18b40:	cmp	r0, #0
   18b44:	bge	18c54 <__assert_fail@plt+0x7974>
   18b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b4c:	cmp	r0, #0
   18b50:	bge	18bdc <__assert_fail@plt+0x78fc>
   18b54:	b	18b58 <__assert_fail@plt+0x7878>
   18b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b5c:	ldr	r1, [fp, #8]
   18b60:	movw	r2, #255	; 0xff
   18b64:	sdiv	r1, r2, r1
   18b68:	cmp	r0, r1
   18b6c:	blt	18cf0 <__assert_fail@plt+0x7a10>
   18b70:	b	18d08 <__assert_fail@plt+0x7a28>
   18b74:	b	18b78 <__assert_fail@plt+0x7898>
   18b78:	ldr	r0, [pc, #-1664]	; 18500 <__assert_fail@plt+0x7220>
   18b7c:	ldr	r1, [fp, #8]
   18b80:	cmp	r1, r0
   18b84:	blt	18b9c <__assert_fail@plt+0x78bc>
   18b88:	b	18ba8 <__assert_fail@plt+0x78c8>
   18b8c:	ldr	r0, [fp, #8]
   18b90:	movw	r1, #0
   18b94:	cmp	r1, r0
   18b98:	bge	18ba8 <__assert_fail@plt+0x78c8>
   18b9c:	movw	r0, #0
   18ba0:	str	r0, [sp, #84]	; 0x54
   18ba4:	b	18bc0 <__assert_fail@plt+0x78e0>
   18ba8:	ldr	r0, [fp, #8]
   18bac:	movw	r1, #0
   18bb0:	sub	r0, r1, r0
   18bb4:	movw	r1, #255	; 0xff
   18bb8:	sdiv	r0, r1, r0
   18bbc:	str	r0, [sp, #84]	; 0x54
   18bc0:	ldr	r0, [sp, #84]	; 0x54
   18bc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18bc8:	mvn	r2, #0
   18bcc:	sub	r1, r2, r1
   18bd0:	cmp	r0, r1
   18bd4:	ble	18cf0 <__assert_fail@plt+0x7a10>
   18bd8:	b	18d08 <__assert_fail@plt+0x7a28>
   18bdc:	b	18be0 <__assert_fail@plt+0x7900>
   18be0:	b	18c38 <__assert_fail@plt+0x7958>
   18be4:	b	18c38 <__assert_fail@plt+0x7958>
   18be8:	ldr	r0, [fp, #8]
   18bec:	cmn	r0, #1
   18bf0:	bne	18c38 <__assert_fail@plt+0x7958>
   18bf4:	b	18bf8 <__assert_fail@plt+0x7918>
   18bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bfc:	add	r0, r0, #0
   18c00:	movw	r1, #0
   18c04:	cmp	r1, r0
   18c08:	blt	18cf0 <__assert_fail@plt+0x7a10>
   18c0c:	b	18d08 <__assert_fail@plt+0x7a28>
   18c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c14:	movw	r1, #0
   18c18:	cmp	r1, r0
   18c1c:	bge	18d08 <__assert_fail@plt+0x7a28>
   18c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c24:	sub	r0, r0, #1
   18c28:	mvn	r1, #0
   18c2c:	cmp	r1, r0
   18c30:	blt	18cf0 <__assert_fail@plt+0x7a10>
   18c34:	b	18d08 <__assert_fail@plt+0x7a28>
   18c38:	ldr	r0, [fp, #8]
   18c3c:	movw	r1, #0
   18c40:	sdiv	r0, r1, r0
   18c44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c48:	cmp	r0, r1
   18c4c:	blt	18cf0 <__assert_fail@plt+0x7a10>
   18c50:	b	18d08 <__assert_fail@plt+0x7a28>
   18c54:	ldr	r0, [fp, #8]
   18c58:	cmp	r0, #0
   18c5c:	bne	18c64 <__assert_fail@plt+0x7984>
   18c60:	b	18d08 <__assert_fail@plt+0x7a28>
   18c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c68:	cmp	r0, #0
   18c6c:	bge	18cd8 <__assert_fail@plt+0x79f8>
   18c70:	b	18c74 <__assert_fail@plt+0x7994>
   18c74:	b	18cbc <__assert_fail@plt+0x79dc>
   18c78:	b	18cbc <__assert_fail@plt+0x79dc>
   18c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c80:	cmn	r0, #1
   18c84:	bne	18cbc <__assert_fail@plt+0x79dc>
   18c88:	b	18c8c <__assert_fail@plt+0x79ac>
   18c8c:	ldr	r0, [fp, #8]
   18c90:	add	r0, r0, #0
   18c94:	movw	r1, #0
   18c98:	cmp	r1, r0
   18c9c:	blt	18cf0 <__assert_fail@plt+0x7a10>
   18ca0:	b	18d08 <__assert_fail@plt+0x7a28>
   18ca4:	ldr	r0, [fp, #8]
   18ca8:	sub	r0, r0, #1
   18cac:	mvn	r1, #0
   18cb0:	cmp	r1, r0
   18cb4:	blt	18cf0 <__assert_fail@plt+0x7a10>
   18cb8:	b	18d08 <__assert_fail@plt+0x7a28>
   18cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cc0:	movw	r1, #0
   18cc4:	sdiv	r0, r1, r0
   18cc8:	ldr	r1, [fp, #8]
   18ccc:	cmp	r0, r1
   18cd0:	blt	18cf0 <__assert_fail@plt+0x7a10>
   18cd4:	b	18d08 <__assert_fail@plt+0x7a28>
   18cd8:	ldr	r0, [fp, #8]
   18cdc:	movw	r1, #255	; 0xff
   18ce0:	sdiv	r0, r1, r0
   18ce4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ce8:	cmp	r0, r1
   18cec:	bge	18d08 <__assert_fail@plt+0x7a28>
   18cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cf4:	ldr	r1, [fp, #8]
   18cf8:	mul	r0, r0, r1
   18cfc:	and	r0, r0, #255	; 0xff
   18d00:	str	r0, [fp, #-28]	; 0xffffffe4
   18d04:	b	19ce4 <__assert_fail@plt+0x8a04>
   18d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d0c:	ldr	r1, [fp, #8]
   18d10:	mul	r0, r0, r1
   18d14:	and	r0, r0, #255	; 0xff
   18d18:	str	r0, [fp, #-28]	; 0xffffffe4
   18d1c:	b	19ce8 <__assert_fail@plt+0x8a08>
   18d20:	b	190fc <__assert_fail@plt+0x7e1c>
   18d24:	b	18d28 <__assert_fail@plt+0x7a48>
   18d28:	ldr	r0, [fp, #8]
   18d2c:	cmp	r0, #0
   18d30:	bge	18e48 <__assert_fail@plt+0x7b68>
   18d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d38:	cmp	r0, #0
   18d3c:	bge	18dcc <__assert_fail@plt+0x7aec>
   18d40:	b	18d44 <__assert_fail@plt+0x7a64>
   18d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d48:	ldr	r1, [fp, #8]
   18d4c:	movw	r2, #32767	; 0x7fff
   18d50:	sdiv	r1, r2, r1
   18d54:	cmp	r0, r1
   18d58:	blt	18ee8 <__assert_fail@plt+0x7c08>
   18d5c:	b	18f00 <__assert_fail@plt+0x7c20>
   18d60:	andhi	r0, r0, r0
   18d64:	b	18d68 <__assert_fail@plt+0x7a88>
   18d68:	ldr	r0, [pc, #4004]	; 19d14 <__assert_fail@plt+0x8a34>
   18d6c:	ldr	r1, [fp, #8]
   18d70:	cmp	r1, r0
   18d74:	blt	18d8c <__assert_fail@plt+0x7aac>
   18d78:	b	18d98 <__assert_fail@plt+0x7ab8>
   18d7c:	ldr	r0, [fp, #8]
   18d80:	movw	r1, #0
   18d84:	cmp	r1, r0
   18d88:	bge	18d98 <__assert_fail@plt+0x7ab8>
   18d8c:	movw	r0, #0
   18d90:	str	r0, [sp, #80]	; 0x50
   18d94:	b	18db0 <__assert_fail@plt+0x7ad0>
   18d98:	ldr	r0, [fp, #8]
   18d9c:	movw	r1, #0
   18da0:	sub	r0, r1, r0
   18da4:	movw	r1, #32767	; 0x7fff
   18da8:	sdiv	r0, r1, r0
   18dac:	str	r0, [sp, #80]	; 0x50
   18db0:	ldr	r0, [sp, #80]	; 0x50
   18db4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18db8:	mvn	r2, #0
   18dbc:	sub	r1, r2, r1
   18dc0:	cmp	r0, r1
   18dc4:	ble	18ee8 <__assert_fail@plt+0x7c08>
   18dc8:	b	18f00 <__assert_fail@plt+0x7c20>
   18dcc:	b	18dd0 <__assert_fail@plt+0x7af0>
   18dd0:	b	18e2c <__assert_fail@plt+0x7b4c>
   18dd4:	b	18e2c <__assert_fail@plt+0x7b4c>
   18dd8:	ldr	r0, [fp, #8]
   18ddc:	cmn	r0, #1
   18de0:	bne	18e2c <__assert_fail@plt+0x7b4c>
   18de4:	b	18de8 <__assert_fail@plt+0x7b08>
   18de8:	ldr	r0, [pc, #3884]	; 19d1c <__assert_fail@plt+0x8a3c>
   18dec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18df0:	add	r0, r1, r0
   18df4:	movw	r1, #0
   18df8:	cmp	r1, r0
   18dfc:	blt	18ee8 <__assert_fail@plt+0x7c08>
   18e00:	b	18f00 <__assert_fail@plt+0x7c20>
   18e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e08:	movw	r1, #0
   18e0c:	cmp	r1, r0
   18e10:	bge	18f00 <__assert_fail@plt+0x7c20>
   18e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e18:	sub	r0, r0, #1
   18e1c:	movw	r1, #32767	; 0x7fff
   18e20:	cmp	r1, r0
   18e24:	blt	18ee8 <__assert_fail@plt+0x7c08>
   18e28:	b	18f00 <__assert_fail@plt+0x7c20>
   18e2c:	ldr	r0, [pc, #3816]	; 19d1c <__assert_fail@plt+0x8a3c>
   18e30:	ldr	r1, [fp, #8]
   18e34:	sdiv	r0, r0, r1
   18e38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e3c:	cmp	r0, r1
   18e40:	blt	18ee8 <__assert_fail@plt+0x7c08>
   18e44:	b	18f00 <__assert_fail@plt+0x7c20>
   18e48:	ldr	r0, [fp, #8]
   18e4c:	cmp	r0, #0
   18e50:	bne	18e58 <__assert_fail@plt+0x7b78>
   18e54:	b	18f00 <__assert_fail@plt+0x7c20>
   18e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e5c:	cmp	r0, #0
   18e60:	bge	18ed0 <__assert_fail@plt+0x7bf0>
   18e64:	b	18e68 <__assert_fail@plt+0x7b88>
   18e68:	b	18eb4 <__assert_fail@plt+0x7bd4>
   18e6c:	b	18eb4 <__assert_fail@plt+0x7bd4>
   18e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e74:	cmn	r0, #1
   18e78:	bne	18eb4 <__assert_fail@plt+0x7bd4>
   18e7c:	b	18e80 <__assert_fail@plt+0x7ba0>
   18e80:	ldr	r0, [pc, #3732]	; 19d1c <__assert_fail@plt+0x8a3c>
   18e84:	ldr	r1, [fp, #8]
   18e88:	add	r0, r1, r0
   18e8c:	movw	r1, #0
   18e90:	cmp	r1, r0
   18e94:	blt	18ee8 <__assert_fail@plt+0x7c08>
   18e98:	b	18f00 <__assert_fail@plt+0x7c20>
   18e9c:	ldr	r0, [fp, #8]
   18ea0:	sub	r0, r0, #1
   18ea4:	movw	r1, #32767	; 0x7fff
   18ea8:	cmp	r1, r0
   18eac:	blt	18ee8 <__assert_fail@plt+0x7c08>
   18eb0:	b	18f00 <__assert_fail@plt+0x7c20>
   18eb4:	ldr	r0, [pc, #3680]	; 19d1c <__assert_fail@plt+0x8a3c>
   18eb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ebc:	sdiv	r0, r0, r1
   18ec0:	ldr	r1, [fp, #8]
   18ec4:	cmp	r0, r1
   18ec8:	blt	18ee8 <__assert_fail@plt+0x7c08>
   18ecc:	b	18f00 <__assert_fail@plt+0x7c20>
   18ed0:	ldr	r0, [fp, #8]
   18ed4:	movw	r1, #32767	; 0x7fff
   18ed8:	sdiv	r0, r1, r0
   18edc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ee0:	cmp	r0, r1
   18ee4:	bge	18f00 <__assert_fail@plt+0x7c20>
   18ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18eec:	ldr	r1, [fp, #8]
   18ef0:	mul	r0, r0, r1
   18ef4:	sxth	r0, r0
   18ef8:	str	r0, [fp, #-28]	; 0xffffffe4
   18efc:	b	19ce4 <__assert_fail@plt+0x8a04>
   18f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f04:	ldr	r1, [fp, #8]
   18f08:	mul	r0, r0, r1
   18f0c:	sxth	r0, r0
   18f10:	str	r0, [fp, #-28]	; 0xffffffe4
   18f14:	b	19ce8 <__assert_fail@plt+0x8a08>
   18f18:	ldr	r0, [fp, #8]
   18f1c:	cmp	r0, #0
   18f20:	bge	19030 <__assert_fail@plt+0x7d50>
   18f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f28:	cmp	r0, #0
   18f2c:	bge	18fb8 <__assert_fail@plt+0x7cd8>
   18f30:	b	18f34 <__assert_fail@plt+0x7c54>
   18f34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f38:	ldr	r1, [fp, #8]
   18f3c:	movw	r2, #65535	; 0xffff
   18f40:	sdiv	r1, r2, r1
   18f44:	cmp	r0, r1
   18f48:	blt	190cc <__assert_fail@plt+0x7dec>
   18f4c:	b	190e4 <__assert_fail@plt+0x7e04>
   18f50:	b	18f54 <__assert_fail@plt+0x7c74>
   18f54:	ldr	r0, [pc, #3512]	; 19d14 <__assert_fail@plt+0x8a34>
   18f58:	ldr	r1, [fp, #8]
   18f5c:	cmp	r1, r0
   18f60:	blt	18f78 <__assert_fail@plt+0x7c98>
   18f64:	b	18f84 <__assert_fail@plt+0x7ca4>
   18f68:	ldr	r0, [fp, #8]
   18f6c:	movw	r1, #0
   18f70:	cmp	r1, r0
   18f74:	bge	18f84 <__assert_fail@plt+0x7ca4>
   18f78:	movw	r0, #0
   18f7c:	str	r0, [sp, #76]	; 0x4c
   18f80:	b	18f9c <__assert_fail@plt+0x7cbc>
   18f84:	ldr	r0, [fp, #8]
   18f88:	movw	r1, #0
   18f8c:	sub	r0, r1, r0
   18f90:	movw	r1, #65535	; 0xffff
   18f94:	sdiv	r0, r1, r0
   18f98:	str	r0, [sp, #76]	; 0x4c
   18f9c:	ldr	r0, [sp, #76]	; 0x4c
   18fa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fa4:	mvn	r2, #0
   18fa8:	sub	r1, r2, r1
   18fac:	cmp	r0, r1
   18fb0:	ble	190cc <__assert_fail@plt+0x7dec>
   18fb4:	b	190e4 <__assert_fail@plt+0x7e04>
   18fb8:	b	18fbc <__assert_fail@plt+0x7cdc>
   18fbc:	b	19014 <__assert_fail@plt+0x7d34>
   18fc0:	b	19014 <__assert_fail@plt+0x7d34>
   18fc4:	ldr	r0, [fp, #8]
   18fc8:	cmn	r0, #1
   18fcc:	bne	19014 <__assert_fail@plt+0x7d34>
   18fd0:	b	18fd4 <__assert_fail@plt+0x7cf4>
   18fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fd8:	add	r0, r0, #0
   18fdc:	movw	r1, #0
   18fe0:	cmp	r1, r0
   18fe4:	blt	190cc <__assert_fail@plt+0x7dec>
   18fe8:	b	190e4 <__assert_fail@plt+0x7e04>
   18fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ff0:	movw	r1, #0
   18ff4:	cmp	r1, r0
   18ff8:	bge	190e4 <__assert_fail@plt+0x7e04>
   18ffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19000:	sub	r0, r0, #1
   19004:	mvn	r1, #0
   19008:	cmp	r1, r0
   1900c:	blt	190cc <__assert_fail@plt+0x7dec>
   19010:	b	190e4 <__assert_fail@plt+0x7e04>
   19014:	ldr	r0, [fp, #8]
   19018:	movw	r1, #0
   1901c:	sdiv	r0, r1, r0
   19020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19024:	cmp	r0, r1
   19028:	blt	190cc <__assert_fail@plt+0x7dec>
   1902c:	b	190e4 <__assert_fail@plt+0x7e04>
   19030:	ldr	r0, [fp, #8]
   19034:	cmp	r0, #0
   19038:	bne	19040 <__assert_fail@plt+0x7d60>
   1903c:	b	190e4 <__assert_fail@plt+0x7e04>
   19040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19044:	cmp	r0, #0
   19048:	bge	190b4 <__assert_fail@plt+0x7dd4>
   1904c:	b	19050 <__assert_fail@plt+0x7d70>
   19050:	b	19098 <__assert_fail@plt+0x7db8>
   19054:	b	19098 <__assert_fail@plt+0x7db8>
   19058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1905c:	cmn	r0, #1
   19060:	bne	19098 <__assert_fail@plt+0x7db8>
   19064:	b	19068 <__assert_fail@plt+0x7d88>
   19068:	ldr	r0, [fp, #8]
   1906c:	add	r0, r0, #0
   19070:	movw	r1, #0
   19074:	cmp	r1, r0
   19078:	blt	190cc <__assert_fail@plt+0x7dec>
   1907c:	b	190e4 <__assert_fail@plt+0x7e04>
   19080:	ldr	r0, [fp, #8]
   19084:	sub	r0, r0, #1
   19088:	mvn	r1, #0
   1908c:	cmp	r1, r0
   19090:	blt	190cc <__assert_fail@plt+0x7dec>
   19094:	b	190e4 <__assert_fail@plt+0x7e04>
   19098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1909c:	movw	r1, #0
   190a0:	sdiv	r0, r1, r0
   190a4:	ldr	r1, [fp, #8]
   190a8:	cmp	r0, r1
   190ac:	blt	190cc <__assert_fail@plt+0x7dec>
   190b0:	b	190e4 <__assert_fail@plt+0x7e04>
   190b4:	ldr	r0, [fp, #8]
   190b8:	movw	r1, #65535	; 0xffff
   190bc:	sdiv	r0, r1, r0
   190c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190c4:	cmp	r0, r1
   190c8:	bge	190e4 <__assert_fail@plt+0x7e04>
   190cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190d0:	ldr	r1, [fp, #8]
   190d4:	mul	r0, r0, r1
   190d8:	uxth	r0, r0
   190dc:	str	r0, [fp, #-28]	; 0xffffffe4
   190e0:	b	19ce4 <__assert_fail@plt+0x8a04>
   190e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190e8:	ldr	r1, [fp, #8]
   190ec:	mul	r0, r0, r1
   190f0:	uxth	r0, r0
   190f4:	str	r0, [fp, #-28]	; 0xffffffe4
   190f8:	b	19ce8 <__assert_fail@plt+0x8a08>
   190fc:	b	19100 <__assert_fail@plt+0x7e20>
   19100:	b	19104 <__assert_fail@plt+0x7e24>
   19104:	ldr	r0, [fp, #8]
   19108:	cmp	r0, #0
   1910c:	bge	19210 <__assert_fail@plt+0x7f30>
   19110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19114:	cmp	r0, #0
   19118:	bge	191a4 <__assert_fail@plt+0x7ec4>
   1911c:	b	19120 <__assert_fail@plt+0x7e40>
   19120:	ldr	r0, [pc, #3048]	; 19d10 <__assert_fail@plt+0x8a30>
   19124:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19128:	ldr	r2, [fp, #8]
   1912c:	sdiv	r0, r0, r2
   19130:	cmp	r1, r0
   19134:	blt	192a0 <__assert_fail@plt+0x7fc0>
   19138:	b	192b4 <__assert_fail@plt+0x7fd4>
   1913c:	b	19140 <__assert_fail@plt+0x7e60>
   19140:	ldr	r0, [pc, #3020]	; 19d14 <__assert_fail@plt+0x8a34>
   19144:	ldr	r1, [fp, #8]
   19148:	cmp	r1, r0
   1914c:	blt	19164 <__assert_fail@plt+0x7e84>
   19150:	b	19170 <__assert_fail@plt+0x7e90>
   19154:	ldr	r0, [fp, #8]
   19158:	movw	r1, #0
   1915c:	cmp	r1, r0
   19160:	bge	19170 <__assert_fail@plt+0x7e90>
   19164:	movw	r0, #0
   19168:	str	r0, [sp, #72]	; 0x48
   1916c:	b	19188 <__assert_fail@plt+0x7ea8>
   19170:	ldr	r0, [pc, #2968]	; 19d10 <__assert_fail@plt+0x8a30>
   19174:	ldr	r1, [fp, #8]
   19178:	movw	r2, #0
   1917c:	sub	r1, r2, r1
   19180:	sdiv	r0, r0, r1
   19184:	str	r0, [sp, #72]	; 0x48
   19188:	ldr	r0, [sp, #72]	; 0x48
   1918c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19190:	mvn	r2, #0
   19194:	sub	r1, r2, r1
   19198:	cmp	r0, r1
   1919c:	ble	192a0 <__assert_fail@plt+0x7fc0>
   191a0:	b	192b4 <__assert_fail@plt+0x7fd4>
   191a4:	ldr	r0, [fp, #8]
   191a8:	cmn	r0, #1
   191ac:	bne	191f4 <__assert_fail@plt+0x7f14>
   191b0:	b	191b4 <__assert_fail@plt+0x7ed4>
   191b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191b8:	add	r0, r0, #-2147483648	; 0x80000000
   191bc:	movw	r1, #0
   191c0:	cmp	r1, r0
   191c4:	blt	192a0 <__assert_fail@plt+0x7fc0>
   191c8:	b	192b4 <__assert_fail@plt+0x7fd4>
   191cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191d0:	movw	r1, #0
   191d4:	cmp	r1, r0
   191d8:	bge	192b4 <__assert_fail@plt+0x7fd4>
   191dc:	ldr	r0, [pc, #2860]	; 19d10 <__assert_fail@plt+0x8a30>
   191e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191e4:	sub	r1, r1, #1
   191e8:	cmp	r0, r1
   191ec:	blt	192a0 <__assert_fail@plt+0x7fc0>
   191f0:	b	192b4 <__assert_fail@plt+0x7fd4>
   191f4:	ldr	r0, [pc, #2844]	; 19d18 <__assert_fail@plt+0x8a38>
   191f8:	ldr	r1, [fp, #8]
   191fc:	sdiv	r0, r0, r1
   19200:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19204:	cmp	r0, r1
   19208:	blt	192a0 <__assert_fail@plt+0x7fc0>
   1920c:	b	192b4 <__assert_fail@plt+0x7fd4>
   19210:	ldr	r0, [fp, #8]
   19214:	cmp	r0, #0
   19218:	bne	19220 <__assert_fail@plt+0x7f40>
   1921c:	b	192b4 <__assert_fail@plt+0x7fd4>
   19220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19224:	cmp	r0, #0
   19228:	bge	19288 <__assert_fail@plt+0x7fa8>
   1922c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19230:	cmn	r0, #1
   19234:	bne	1926c <__assert_fail@plt+0x7f8c>
   19238:	b	1923c <__assert_fail@plt+0x7f5c>
   1923c:	ldr	r0, [fp, #8]
   19240:	add	r0, r0, #-2147483648	; 0x80000000
   19244:	movw	r1, #0
   19248:	cmp	r1, r0
   1924c:	blt	192a0 <__assert_fail@plt+0x7fc0>
   19250:	b	192b4 <__assert_fail@plt+0x7fd4>
   19254:	ldr	r0, [pc, #2740]	; 19d10 <__assert_fail@plt+0x8a30>
   19258:	ldr	r1, [fp, #8]
   1925c:	sub	r1, r1, #1
   19260:	cmp	r0, r1
   19264:	blt	192a0 <__assert_fail@plt+0x7fc0>
   19268:	b	192b4 <__assert_fail@plt+0x7fd4>
   1926c:	ldr	r0, [pc, #2724]	; 19d18 <__assert_fail@plt+0x8a38>
   19270:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19274:	sdiv	r0, r0, r1
   19278:	ldr	r1, [fp, #8]
   1927c:	cmp	r0, r1
   19280:	blt	192a0 <__assert_fail@plt+0x7fc0>
   19284:	b	192b4 <__assert_fail@plt+0x7fd4>
   19288:	ldr	r0, [pc, #2688]	; 19d10 <__assert_fail@plt+0x8a30>
   1928c:	ldr	r1, [fp, #8]
   19290:	sdiv	r0, r0, r1
   19294:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19298:	cmp	r0, r1
   1929c:	bge	192b4 <__assert_fail@plt+0x7fd4>
   192a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192a4:	ldr	r1, [fp, #8]
   192a8:	mul	r0, r0, r1
   192ac:	str	r0, [fp, #-28]	; 0xffffffe4
   192b0:	b	19ce4 <__assert_fail@plt+0x8a04>
   192b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192b8:	ldr	r1, [fp, #8]
   192bc:	mul	r0, r0, r1
   192c0:	str	r0, [fp, #-28]	; 0xffffffe4
   192c4:	b	19ce8 <__assert_fail@plt+0x8a08>
   192c8:	ldr	r0, [fp, #8]
   192cc:	cmp	r0, #0
   192d0:	bge	193e0 <__assert_fail@plt+0x8100>
   192d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192d8:	cmp	r0, #0
   192dc:	bge	19368 <__assert_fail@plt+0x8088>
   192e0:	b	19300 <__assert_fail@plt+0x8020>
   192e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192e8:	ldr	r1, [fp, #8]
   192ec:	mvn	r2, #0
   192f0:	udiv	r1, r2, r1
   192f4:	cmp	r0, r1
   192f8:	bcc	1947c <__assert_fail@plt+0x819c>
   192fc:	b	19490 <__assert_fail@plt+0x81b0>
   19300:	b	19304 <__assert_fail@plt+0x8024>
   19304:	ldr	r0, [pc, #2568]	; 19d14 <__assert_fail@plt+0x8a34>
   19308:	ldr	r1, [fp, #8]
   1930c:	cmp	r1, r0
   19310:	blt	19328 <__assert_fail@plt+0x8048>
   19314:	b	19334 <__assert_fail@plt+0x8054>
   19318:	ldr	r0, [fp, #8]
   1931c:	movw	r1, #0
   19320:	cmp	r1, r0
   19324:	bge	19334 <__assert_fail@plt+0x8054>
   19328:	movw	r0, #1
   1932c:	str	r0, [sp, #68]	; 0x44
   19330:	b	1934c <__assert_fail@plt+0x806c>
   19334:	ldr	r0, [fp, #8]
   19338:	movw	r1, #0
   1933c:	sub	r0, r1, r0
   19340:	mvn	r1, #0
   19344:	udiv	r0, r1, r0
   19348:	str	r0, [sp, #68]	; 0x44
   1934c:	ldr	r0, [sp, #68]	; 0x44
   19350:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19354:	mvn	r2, #0
   19358:	sub	r1, r2, r1
   1935c:	cmp	r0, r1
   19360:	bls	1947c <__assert_fail@plt+0x819c>
   19364:	b	19490 <__assert_fail@plt+0x81b0>
   19368:	b	1936c <__assert_fail@plt+0x808c>
   1936c:	b	193c4 <__assert_fail@plt+0x80e4>
   19370:	b	193c4 <__assert_fail@plt+0x80e4>
   19374:	ldr	r0, [fp, #8]
   19378:	cmn	r0, #1
   1937c:	bne	193c4 <__assert_fail@plt+0x80e4>
   19380:	b	19384 <__assert_fail@plt+0x80a4>
   19384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19388:	add	r0, r0, #0
   1938c:	movw	r1, #0
   19390:	cmp	r1, r0
   19394:	blt	1947c <__assert_fail@plt+0x819c>
   19398:	b	19490 <__assert_fail@plt+0x81b0>
   1939c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193a0:	movw	r1, #0
   193a4:	cmp	r1, r0
   193a8:	bge	19490 <__assert_fail@plt+0x81b0>
   193ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193b0:	sub	r0, r0, #1
   193b4:	mvn	r1, #0
   193b8:	cmp	r1, r0
   193bc:	blt	1947c <__assert_fail@plt+0x819c>
   193c0:	b	19490 <__assert_fail@plt+0x81b0>
   193c4:	ldr	r0, [fp, #8]
   193c8:	movw	r1, #0
   193cc:	sdiv	r0, r1, r0
   193d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   193d4:	cmp	r0, r1
   193d8:	blt	1947c <__assert_fail@plt+0x819c>
   193dc:	b	19490 <__assert_fail@plt+0x81b0>
   193e0:	ldr	r0, [fp, #8]
   193e4:	cmp	r0, #0
   193e8:	bne	193f0 <__assert_fail@plt+0x8110>
   193ec:	b	19490 <__assert_fail@plt+0x81b0>
   193f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193f4:	cmp	r0, #0
   193f8:	bge	19464 <__assert_fail@plt+0x8184>
   193fc:	b	19400 <__assert_fail@plt+0x8120>
   19400:	b	19448 <__assert_fail@plt+0x8168>
   19404:	b	19448 <__assert_fail@plt+0x8168>
   19408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1940c:	cmn	r0, #1
   19410:	bne	19448 <__assert_fail@plt+0x8168>
   19414:	b	19418 <__assert_fail@plt+0x8138>
   19418:	ldr	r0, [fp, #8]
   1941c:	add	r0, r0, #0
   19420:	movw	r1, #0
   19424:	cmp	r1, r0
   19428:	blt	1947c <__assert_fail@plt+0x819c>
   1942c:	b	19490 <__assert_fail@plt+0x81b0>
   19430:	ldr	r0, [fp, #8]
   19434:	sub	r0, r0, #1
   19438:	mvn	r1, #0
   1943c:	cmp	r1, r0
   19440:	blt	1947c <__assert_fail@plt+0x819c>
   19444:	b	19490 <__assert_fail@plt+0x81b0>
   19448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1944c:	movw	r1, #0
   19450:	sdiv	r0, r1, r0
   19454:	ldr	r1, [fp, #8]
   19458:	cmp	r0, r1
   1945c:	blt	1947c <__assert_fail@plt+0x819c>
   19460:	b	19490 <__assert_fail@plt+0x81b0>
   19464:	ldr	r0, [fp, #8]
   19468:	mvn	r1, #0
   1946c:	udiv	r0, r1, r0
   19470:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19474:	cmp	r0, r1
   19478:	bcs	19490 <__assert_fail@plt+0x81b0>
   1947c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19480:	ldr	r1, [fp, #8]
   19484:	mul	r0, r0, r1
   19488:	str	r0, [fp, #-28]	; 0xffffffe4
   1948c:	b	19ce4 <__assert_fail@plt+0x8a04>
   19490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19494:	ldr	r1, [fp, #8]
   19498:	mul	r0, r0, r1
   1949c:	str	r0, [fp, #-28]	; 0xffffffe4
   194a0:	b	19ce8 <__assert_fail@plt+0x8a08>
   194a4:	b	194a8 <__assert_fail@plt+0x81c8>
   194a8:	b	194ac <__assert_fail@plt+0x81cc>
   194ac:	ldr	r0, [fp, #8]
   194b0:	cmp	r0, #0
   194b4:	bge	195b8 <__assert_fail@plt+0x82d8>
   194b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194bc:	cmp	r0, #0
   194c0:	bge	1954c <__assert_fail@plt+0x826c>
   194c4:	b	194c8 <__assert_fail@plt+0x81e8>
   194c8:	ldr	r0, [pc, #2112]	; 19d10 <__assert_fail@plt+0x8a30>
   194cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   194d0:	ldr	r2, [fp, #8]
   194d4:	sdiv	r0, r0, r2
   194d8:	cmp	r1, r0
   194dc:	blt	19648 <__assert_fail@plt+0x8368>
   194e0:	b	1965c <__assert_fail@plt+0x837c>
   194e4:	b	194e8 <__assert_fail@plt+0x8208>
   194e8:	ldr	r0, [pc, #2084]	; 19d14 <__assert_fail@plt+0x8a34>
   194ec:	ldr	r1, [fp, #8]
   194f0:	cmp	r1, r0
   194f4:	blt	1950c <__assert_fail@plt+0x822c>
   194f8:	b	19518 <__assert_fail@plt+0x8238>
   194fc:	ldr	r0, [fp, #8]
   19500:	movw	r1, #0
   19504:	cmp	r1, r0
   19508:	bge	19518 <__assert_fail@plt+0x8238>
   1950c:	movw	r0, #0
   19510:	str	r0, [sp, #64]	; 0x40
   19514:	b	19530 <__assert_fail@plt+0x8250>
   19518:	ldr	r0, [pc, #2032]	; 19d10 <__assert_fail@plt+0x8a30>
   1951c:	ldr	r1, [fp, #8]
   19520:	movw	r2, #0
   19524:	sub	r1, r2, r1
   19528:	sdiv	r0, r0, r1
   1952c:	str	r0, [sp, #64]	; 0x40
   19530:	ldr	r0, [sp, #64]	; 0x40
   19534:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19538:	mvn	r2, #0
   1953c:	sub	r1, r2, r1
   19540:	cmp	r0, r1
   19544:	ble	19648 <__assert_fail@plt+0x8368>
   19548:	b	1965c <__assert_fail@plt+0x837c>
   1954c:	ldr	r0, [fp, #8]
   19550:	cmn	r0, #1
   19554:	bne	1959c <__assert_fail@plt+0x82bc>
   19558:	b	1955c <__assert_fail@plt+0x827c>
   1955c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19560:	add	r0, r0, #-2147483648	; 0x80000000
   19564:	movw	r1, #0
   19568:	cmp	r1, r0
   1956c:	blt	19648 <__assert_fail@plt+0x8368>
   19570:	b	1965c <__assert_fail@plt+0x837c>
   19574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19578:	movw	r1, #0
   1957c:	cmp	r1, r0
   19580:	bge	1965c <__assert_fail@plt+0x837c>
   19584:	ldr	r0, [pc, #1924]	; 19d10 <__assert_fail@plt+0x8a30>
   19588:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1958c:	sub	r1, r1, #1
   19590:	cmp	r0, r1
   19594:	blt	19648 <__assert_fail@plt+0x8368>
   19598:	b	1965c <__assert_fail@plt+0x837c>
   1959c:	ldr	r0, [pc, #1908]	; 19d18 <__assert_fail@plt+0x8a38>
   195a0:	ldr	r1, [fp, #8]
   195a4:	sdiv	r0, r0, r1
   195a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195ac:	cmp	r0, r1
   195b0:	blt	19648 <__assert_fail@plt+0x8368>
   195b4:	b	1965c <__assert_fail@plt+0x837c>
   195b8:	ldr	r0, [fp, #8]
   195bc:	cmp	r0, #0
   195c0:	bne	195c8 <__assert_fail@plt+0x82e8>
   195c4:	b	1965c <__assert_fail@plt+0x837c>
   195c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195cc:	cmp	r0, #0
   195d0:	bge	19630 <__assert_fail@plt+0x8350>
   195d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195d8:	cmn	r0, #1
   195dc:	bne	19614 <__assert_fail@plt+0x8334>
   195e0:	b	195e4 <__assert_fail@plt+0x8304>
   195e4:	ldr	r0, [fp, #8]
   195e8:	add	r0, r0, #-2147483648	; 0x80000000
   195ec:	movw	r1, #0
   195f0:	cmp	r1, r0
   195f4:	blt	19648 <__assert_fail@plt+0x8368>
   195f8:	b	1965c <__assert_fail@plt+0x837c>
   195fc:	ldr	r0, [pc, #1804]	; 19d10 <__assert_fail@plt+0x8a30>
   19600:	ldr	r1, [fp, #8]
   19604:	sub	r1, r1, #1
   19608:	cmp	r0, r1
   1960c:	blt	19648 <__assert_fail@plt+0x8368>
   19610:	b	1965c <__assert_fail@plt+0x837c>
   19614:	ldr	r0, [pc, #1788]	; 19d18 <__assert_fail@plt+0x8a38>
   19618:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1961c:	sdiv	r0, r0, r1
   19620:	ldr	r1, [fp, #8]
   19624:	cmp	r0, r1
   19628:	blt	19648 <__assert_fail@plt+0x8368>
   1962c:	b	1965c <__assert_fail@plt+0x837c>
   19630:	ldr	r0, [pc, #1752]	; 19d10 <__assert_fail@plt+0x8a30>
   19634:	ldr	r1, [fp, #8]
   19638:	sdiv	r0, r0, r1
   1963c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19640:	cmp	r0, r1
   19644:	bge	1965c <__assert_fail@plt+0x837c>
   19648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1964c:	ldr	r1, [fp, #8]
   19650:	mul	r0, r0, r1
   19654:	str	r0, [fp, #-28]	; 0xffffffe4
   19658:	b	19ce4 <__assert_fail@plt+0x8a04>
   1965c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19660:	ldr	r1, [fp, #8]
   19664:	mul	r0, r0, r1
   19668:	str	r0, [fp, #-28]	; 0xffffffe4
   1966c:	b	19ce8 <__assert_fail@plt+0x8a08>
   19670:	ldr	r0, [fp, #8]
   19674:	cmp	r0, #0
   19678:	bge	19788 <__assert_fail@plt+0x84a8>
   1967c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19680:	cmp	r0, #0
   19684:	bge	19710 <__assert_fail@plt+0x8430>
   19688:	b	196a8 <__assert_fail@plt+0x83c8>
   1968c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19690:	ldr	r1, [fp, #8]
   19694:	mvn	r2, #0
   19698:	udiv	r1, r2, r1
   1969c:	cmp	r0, r1
   196a0:	bcc	19824 <__assert_fail@plt+0x8544>
   196a4:	b	19838 <__assert_fail@plt+0x8558>
   196a8:	b	196ac <__assert_fail@plt+0x83cc>
   196ac:	ldr	r0, [pc, #1632]	; 19d14 <__assert_fail@plt+0x8a34>
   196b0:	ldr	r1, [fp, #8]
   196b4:	cmp	r1, r0
   196b8:	blt	196d0 <__assert_fail@plt+0x83f0>
   196bc:	b	196dc <__assert_fail@plt+0x83fc>
   196c0:	ldr	r0, [fp, #8]
   196c4:	movw	r1, #0
   196c8:	cmp	r1, r0
   196cc:	bge	196dc <__assert_fail@plt+0x83fc>
   196d0:	movw	r0, #1
   196d4:	str	r0, [sp, #60]	; 0x3c
   196d8:	b	196f4 <__assert_fail@plt+0x8414>
   196dc:	ldr	r0, [fp, #8]
   196e0:	movw	r1, #0
   196e4:	sub	r0, r1, r0
   196e8:	mvn	r1, #0
   196ec:	udiv	r0, r1, r0
   196f0:	str	r0, [sp, #60]	; 0x3c
   196f4:	ldr	r0, [sp, #60]	; 0x3c
   196f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196fc:	mvn	r2, #0
   19700:	sub	r1, r2, r1
   19704:	cmp	r0, r1
   19708:	bls	19824 <__assert_fail@plt+0x8544>
   1970c:	b	19838 <__assert_fail@plt+0x8558>
   19710:	b	19714 <__assert_fail@plt+0x8434>
   19714:	b	1976c <__assert_fail@plt+0x848c>
   19718:	b	1976c <__assert_fail@plt+0x848c>
   1971c:	ldr	r0, [fp, #8]
   19720:	cmn	r0, #1
   19724:	bne	1976c <__assert_fail@plt+0x848c>
   19728:	b	1972c <__assert_fail@plt+0x844c>
   1972c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19730:	add	r0, r0, #0
   19734:	movw	r1, #0
   19738:	cmp	r1, r0
   1973c:	blt	19824 <__assert_fail@plt+0x8544>
   19740:	b	19838 <__assert_fail@plt+0x8558>
   19744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19748:	movw	r1, #0
   1974c:	cmp	r1, r0
   19750:	bge	19838 <__assert_fail@plt+0x8558>
   19754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19758:	sub	r0, r0, #1
   1975c:	mvn	r1, #0
   19760:	cmp	r1, r0
   19764:	blt	19824 <__assert_fail@plt+0x8544>
   19768:	b	19838 <__assert_fail@plt+0x8558>
   1976c:	ldr	r0, [fp, #8]
   19770:	movw	r1, #0
   19774:	sdiv	r0, r1, r0
   19778:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1977c:	cmp	r0, r1
   19780:	blt	19824 <__assert_fail@plt+0x8544>
   19784:	b	19838 <__assert_fail@plt+0x8558>
   19788:	ldr	r0, [fp, #8]
   1978c:	cmp	r0, #0
   19790:	bne	19798 <__assert_fail@plt+0x84b8>
   19794:	b	19838 <__assert_fail@plt+0x8558>
   19798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1979c:	cmp	r0, #0
   197a0:	bge	1980c <__assert_fail@plt+0x852c>
   197a4:	b	197a8 <__assert_fail@plt+0x84c8>
   197a8:	b	197f0 <__assert_fail@plt+0x8510>
   197ac:	b	197f0 <__assert_fail@plt+0x8510>
   197b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197b4:	cmn	r0, #1
   197b8:	bne	197f0 <__assert_fail@plt+0x8510>
   197bc:	b	197c0 <__assert_fail@plt+0x84e0>
   197c0:	ldr	r0, [fp, #8]
   197c4:	add	r0, r0, #0
   197c8:	movw	r1, #0
   197cc:	cmp	r1, r0
   197d0:	blt	19824 <__assert_fail@plt+0x8544>
   197d4:	b	19838 <__assert_fail@plt+0x8558>
   197d8:	ldr	r0, [fp, #8]
   197dc:	sub	r0, r0, #1
   197e0:	mvn	r1, #0
   197e4:	cmp	r1, r0
   197e8:	blt	19824 <__assert_fail@plt+0x8544>
   197ec:	b	19838 <__assert_fail@plt+0x8558>
   197f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197f4:	movw	r1, #0
   197f8:	sdiv	r0, r1, r0
   197fc:	ldr	r1, [fp, #8]
   19800:	cmp	r0, r1
   19804:	blt	19824 <__assert_fail@plt+0x8544>
   19808:	b	19838 <__assert_fail@plt+0x8558>
   1980c:	ldr	r0, [fp, #8]
   19810:	mvn	r1, #0
   19814:	udiv	r0, r1, r0
   19818:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1981c:	cmp	r0, r1
   19820:	bcs	19838 <__assert_fail@plt+0x8558>
   19824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19828:	ldr	r1, [fp, #8]
   1982c:	mul	r0, r0, r1
   19830:	str	r0, [fp, #-28]	; 0xffffffe4
   19834:	b	19ce4 <__assert_fail@plt+0x8a04>
   19838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1983c:	ldr	r1, [fp, #8]
   19840:	mul	r0, r0, r1
   19844:	str	r0, [fp, #-28]	; 0xffffffe4
   19848:	b	19ce8 <__assert_fail@plt+0x8a08>
   1984c:	b	19850 <__assert_fail@plt+0x8570>
   19850:	ldr	r0, [fp, #8]
   19854:	cmp	r0, #0
   19858:	bge	199c0 <__assert_fail@plt+0x86e0>
   1985c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19860:	cmp	r0, #0
   19864:	bge	1993c <__assert_fail@plt+0x865c>
   19868:	b	1986c <__assert_fail@plt+0x858c>
   1986c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19870:	ldr	r1, [fp, #8]
   19874:	asr	r3, r1, #31
   19878:	mvn	r2, #0
   1987c:	mvn	ip, #-2147483648	; 0x80000000
   19880:	str	r0, [sp, #56]	; 0x38
   19884:	mov	r0, r2
   19888:	str	r1, [sp, #52]	; 0x34
   1988c:	mov	r1, ip
   19890:	ldr	r2, [sp, #52]	; 0x34
   19894:	bl	1c444 <__assert_fail@plt+0xb164>
   19898:	ldr	r2, [sp, #56]	; 0x38
   1989c:	subs	r0, r2, r0
   198a0:	rscs	r1, r1, r2, asr #31
   198a4:	blt	19a88 <__assert_fail@plt+0x87a8>
   198a8:	b	19a9c <__assert_fail@plt+0x87bc>
   198ac:	b	198b0 <__assert_fail@plt+0x85d0>
   198b0:	ldr	r0, [pc, #1116]	; 19d14 <__assert_fail@plt+0x8a34>
   198b4:	ldr	r1, [fp, #8]
   198b8:	cmp	r1, r0
   198bc:	blt	198d4 <__assert_fail@plt+0x85f4>
   198c0:	b	198e8 <__assert_fail@plt+0x8608>
   198c4:	ldr	r0, [fp, #8]
   198c8:	movw	r1, #0
   198cc:	cmp	r1, r0
   198d0:	bge	198e8 <__assert_fail@plt+0x8608>
   198d4:	mov	r0, #0
   198d8:	mvn	r1, #0
   198dc:	str	r1, [sp, #48]	; 0x30
   198e0:	str	r0, [sp, #44]	; 0x2c
   198e4:	b	1991c <__assert_fail@plt+0x863c>
   198e8:	ldr	r0, [fp, #8]
   198ec:	rsb	r0, r0, #0
   198f0:	asr	r3, r0, #31
   198f4:	mvn	r1, #0
   198f8:	mvn	r2, #-2147483648	; 0x80000000
   198fc:	str	r0, [sp, #40]	; 0x28
   19900:	mov	r0, r1
   19904:	mov	r1, r2
   19908:	ldr	r2, [sp, #40]	; 0x28
   1990c:	bl	1c444 <__assert_fail@plt+0xb164>
   19910:	str	r0, [sp, #48]	; 0x30
   19914:	str	r1, [sp, #44]	; 0x2c
   19918:	b	1991c <__assert_fail@plt+0x863c>
   1991c:	ldr	r0, [sp, #44]	; 0x2c
   19920:	ldr	r1, [sp, #48]	; 0x30
   19924:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19928:	mvn	r2, r2
   1992c:	subs	r1, r2, r1
   19930:	rscs	r0, r0, r2, asr #31
   19934:	bge	19a88 <__assert_fail@plt+0x87a8>
   19938:	b	19a9c <__assert_fail@plt+0x87bc>
   1993c:	ldr	r0, [fp, #8]
   19940:	cmn	r0, #1
   19944:	bne	19988 <__assert_fail@plt+0x86a8>
   19948:	b	1994c <__assert_fail@plt+0x866c>
   1994c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19950:	mov	r1, #-2147483648	; 0x80000000
   19954:	add	r1, r1, r0, asr #31
   19958:	rsbs	r0, r0, #0
   1995c:	rscs	r1, r1, #0
   19960:	blt	19a88 <__assert_fail@plt+0x87a8>
   19964:	b	19a9c <__assert_fail@plt+0x87bc>
   19968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1996c:	movw	r1, #0
   19970:	cmp	r1, r0
   19974:	bge	19a9c <__assert_fail@plt+0x87bc>
   19978:	mov	r0, #0
   1997c:	cmp	r0, #0
   19980:	bne	19a88 <__assert_fail@plt+0x87a8>
   19984:	b	19a9c <__assert_fail@plt+0x87bc>
   19988:	ldr	r0, [fp, #8]
   1998c:	asr	r3, r0, #31
   19990:	mov	r1, #0
   19994:	mov	r2, #-2147483648	; 0x80000000
   19998:	str	r0, [sp, #36]	; 0x24
   1999c:	mov	r0, r1
   199a0:	mov	r1, r2
   199a4:	ldr	r2, [sp, #36]	; 0x24
   199a8:	bl	1c444 <__assert_fail@plt+0xb164>
   199ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   199b0:	subs	r0, r0, r2
   199b4:	sbcs	r1, r1, r2, asr #31
   199b8:	blt	19a88 <__assert_fail@plt+0x87a8>
   199bc:	b	19a9c <__assert_fail@plt+0x87bc>
   199c0:	ldr	r0, [fp, #8]
   199c4:	cmp	r0, #0
   199c8:	bne	199d0 <__assert_fail@plt+0x86f0>
   199cc:	b	19a9c <__assert_fail@plt+0x87bc>
   199d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199d4:	cmp	r0, #0
   199d8:	bge	19a50 <__assert_fail@plt+0x8770>
   199dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199e0:	cmn	r0, #1
   199e4:	bne	19a18 <__assert_fail@plt+0x8738>
   199e8:	b	199ec <__assert_fail@plt+0x870c>
   199ec:	ldr	r0, [fp, #8]
   199f0:	mov	r1, #-2147483648	; 0x80000000
   199f4:	add	r1, r1, r0, asr #31
   199f8:	rsbs	r0, r0, #0
   199fc:	rscs	r1, r1, #0
   19a00:	blt	19a88 <__assert_fail@plt+0x87a8>
   19a04:	b	19a9c <__assert_fail@plt+0x87bc>
   19a08:	mov	r0, #0
   19a0c:	cmp	r0, #0
   19a10:	bne	19a88 <__assert_fail@plt+0x87a8>
   19a14:	b	19a9c <__assert_fail@plt+0x87bc>
   19a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a1c:	asr	r3, r0, #31
   19a20:	mov	r1, #0
   19a24:	mov	r2, #-2147483648	; 0x80000000
   19a28:	str	r0, [sp, #32]
   19a2c:	mov	r0, r1
   19a30:	mov	r1, r2
   19a34:	ldr	r2, [sp, #32]
   19a38:	bl	1c444 <__assert_fail@plt+0xb164>
   19a3c:	ldr	r2, [fp, #8]
   19a40:	subs	r0, r0, r2
   19a44:	sbcs	r1, r1, r2, asr #31
   19a48:	blt	19a88 <__assert_fail@plt+0x87a8>
   19a4c:	b	19a9c <__assert_fail@plt+0x87bc>
   19a50:	ldr	r0, [fp, #8]
   19a54:	asr	r3, r0, #31
   19a58:	mvn	r1, #0
   19a5c:	mvn	r2, #-2147483648	; 0x80000000
   19a60:	str	r0, [sp, #28]
   19a64:	mov	r0, r1
   19a68:	mov	r1, r2
   19a6c:	ldr	r2, [sp, #28]
   19a70:	bl	1c444 <__assert_fail@plt+0xb164>
   19a74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a78:	subs	r0, r0, r2
   19a7c:	sbcs	r1, r1, r2, asr #31
   19a80:	bge	19a9c <__assert_fail@plt+0x87bc>
   19a84:	b	19a88 <__assert_fail@plt+0x87a8>
   19a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a8c:	ldr	r1, [fp, #8]
   19a90:	mul	r0, r0, r1
   19a94:	str	r0, [fp, #-28]	; 0xffffffe4
   19a98:	b	19ce4 <__assert_fail@plt+0x8a04>
   19a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19aa0:	ldr	r1, [fp, #8]
   19aa4:	mul	r0, r0, r1
   19aa8:	str	r0, [fp, #-28]	; 0xffffffe4
   19aac:	b	19ce8 <__assert_fail@plt+0x8a08>
   19ab0:	ldr	r0, [fp, #8]
   19ab4:	cmp	r0, #0
   19ab8:	bge	19c08 <__assert_fail@plt+0x8928>
   19abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ac0:	cmp	r0, #0
   19ac4:	bge	19b90 <__assert_fail@plt+0x88b0>
   19ac8:	b	19b08 <__assert_fail@plt+0x8828>
   19acc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ad0:	ldr	r1, [fp, #8]
   19ad4:	asr	r3, r1, #31
   19ad8:	mvn	r2, #0
   19adc:	str	r0, [sp, #24]
   19ae0:	mov	r0, r2
   19ae4:	str	r1, [sp, #20]
   19ae8:	mov	r1, r2
   19aec:	ldr	r2, [sp, #20]
   19af0:	bl	1c518 <__assert_fail@plt+0xb238>
   19af4:	ldr	r2, [sp, #24]
   19af8:	subs	r0, r2, r0
   19afc:	rscs	r1, r1, r2, asr #31
   19b00:	bcc	19cbc <__assert_fail@plt+0x89dc>
   19b04:	b	19cd0 <__assert_fail@plt+0x89f0>
   19b08:	b	19b0c <__assert_fail@plt+0x882c>
   19b0c:	ldr	r0, [pc, #512]	; 19d14 <__assert_fail@plt+0x8a34>
   19b10:	ldr	r1, [fp, #8]
   19b14:	cmp	r1, r0
   19b18:	blt	19b30 <__assert_fail@plt+0x8850>
   19b1c:	b	19b44 <__assert_fail@plt+0x8864>
   19b20:	ldr	r0, [fp, #8]
   19b24:	movw	r1, #0
   19b28:	cmp	r1, r0
   19b2c:	bge	19b44 <__assert_fail@plt+0x8864>
   19b30:	mov	r0, #1
   19b34:	mvn	r1, #0
   19b38:	str	r1, [sp, #16]
   19b3c:	str	r0, [sp, #12]
   19b40:	b	19b70 <__assert_fail@plt+0x8890>
   19b44:	ldr	r0, [fp, #8]
   19b48:	rsb	r0, r0, #0
   19b4c:	asr	r3, r0, #31
   19b50:	mvn	r1, #0
   19b54:	str	r0, [sp, #8]
   19b58:	mov	r0, r1
   19b5c:	ldr	r2, [sp, #8]
   19b60:	bl	1c518 <__assert_fail@plt+0xb238>
   19b64:	str	r0, [sp, #16]
   19b68:	str	r1, [sp, #12]
   19b6c:	b	19b70 <__assert_fail@plt+0x8890>
   19b70:	ldr	r0, [sp, #12]
   19b74:	ldr	r1, [sp, #16]
   19b78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b7c:	mvn	r2, r2
   19b80:	subs	r1, r2, r1
   19b84:	rscs	r0, r0, r2, asr #31
   19b88:	bcs	19cbc <__assert_fail@plt+0x89dc>
   19b8c:	b	19cd0 <__assert_fail@plt+0x89f0>
   19b90:	b	19b94 <__assert_fail@plt+0x88b4>
   19b94:	b	19bec <__assert_fail@plt+0x890c>
   19b98:	b	19bec <__assert_fail@plt+0x890c>
   19b9c:	ldr	r0, [fp, #8]
   19ba0:	cmn	r0, #1
   19ba4:	bne	19bec <__assert_fail@plt+0x890c>
   19ba8:	b	19bac <__assert_fail@plt+0x88cc>
   19bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bb0:	add	r0, r0, #0
   19bb4:	movw	r1, #0
   19bb8:	cmp	r1, r0
   19bbc:	blt	19cbc <__assert_fail@plt+0x89dc>
   19bc0:	b	19cd0 <__assert_fail@plt+0x89f0>
   19bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bc8:	movw	r1, #0
   19bcc:	cmp	r1, r0
   19bd0:	bge	19cd0 <__assert_fail@plt+0x89f0>
   19bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bd8:	sub	r0, r0, #1
   19bdc:	mvn	r1, #0
   19be0:	cmp	r1, r0
   19be4:	blt	19cbc <__assert_fail@plt+0x89dc>
   19be8:	b	19cd0 <__assert_fail@plt+0x89f0>
   19bec:	ldr	r0, [fp, #8]
   19bf0:	movw	r1, #0
   19bf4:	sdiv	r0, r1, r0
   19bf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19bfc:	cmp	r0, r1
   19c00:	blt	19cbc <__assert_fail@plt+0x89dc>
   19c04:	b	19cd0 <__assert_fail@plt+0x89f0>
   19c08:	ldr	r0, [fp, #8]
   19c0c:	cmp	r0, #0
   19c10:	bne	19c18 <__assert_fail@plt+0x8938>
   19c14:	b	19cd0 <__assert_fail@plt+0x89f0>
   19c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c1c:	cmp	r0, #0
   19c20:	bge	19c8c <__assert_fail@plt+0x89ac>
   19c24:	b	19c28 <__assert_fail@plt+0x8948>
   19c28:	b	19c70 <__assert_fail@plt+0x8990>
   19c2c:	b	19c70 <__assert_fail@plt+0x8990>
   19c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c34:	cmn	r0, #1
   19c38:	bne	19c70 <__assert_fail@plt+0x8990>
   19c3c:	b	19c40 <__assert_fail@plt+0x8960>
   19c40:	ldr	r0, [fp, #8]
   19c44:	add	r0, r0, #0
   19c48:	movw	r1, #0
   19c4c:	cmp	r1, r0
   19c50:	blt	19cbc <__assert_fail@plt+0x89dc>
   19c54:	b	19cd0 <__assert_fail@plt+0x89f0>
   19c58:	ldr	r0, [fp, #8]
   19c5c:	sub	r0, r0, #1
   19c60:	mvn	r1, #0
   19c64:	cmp	r1, r0
   19c68:	blt	19cbc <__assert_fail@plt+0x89dc>
   19c6c:	b	19cd0 <__assert_fail@plt+0x89f0>
   19c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c74:	movw	r1, #0
   19c78:	sdiv	r0, r1, r0
   19c7c:	ldr	r1, [fp, #8]
   19c80:	cmp	r0, r1
   19c84:	blt	19cbc <__assert_fail@plt+0x89dc>
   19c88:	b	19cd0 <__assert_fail@plt+0x89f0>
   19c8c:	ldr	r0, [fp, #8]
   19c90:	asr	r3, r0, #31
   19c94:	mvn	r1, #0
   19c98:	str	r0, [sp, #4]
   19c9c:	mov	r0, r1
   19ca0:	ldr	r2, [sp, #4]
   19ca4:	bl	1c518 <__assert_fail@plt+0xb238>
   19ca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19cac:	subs	r0, r0, r2
   19cb0:	sbcs	r1, r1, r2, asr #31
   19cb4:	bcs	19cd0 <__assert_fail@plt+0x89f0>
   19cb8:	b	19cbc <__assert_fail@plt+0x89dc>
   19cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cc0:	ldr	r1, [fp, #8]
   19cc4:	mul	r0, r0, r1
   19cc8:	str	r0, [fp, #-28]	; 0xffffffe4
   19ccc:	b	19ce4 <__assert_fail@plt+0x8a04>
   19cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cd4:	ldr	r1, [fp, #8]
   19cd8:	mul	r0, r0, r1
   19cdc:	str	r0, [fp, #-28]	; 0xffffffe4
   19ce0:	b	19ce8 <__assert_fail@plt+0x8a08>
   19ce4:	bl	19ec0 <__assert_fail@plt+0x8be0>
   19ce8:	ldr	r0, [fp, #-4]
   19cec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19cf0:	bl	17220 <__assert_fail@plt+0x5f40>
   19cf4:	str	r0, [fp, #-4]
   19cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cfc:	ldr	r1, [fp, #-8]
   19d00:	str	r0, [r1]
   19d04:	ldr	r0, [fp, #-4]
   19d08:	mov	sp, fp
   19d0c:	pop	{fp, pc}
   19d10:	svcvc	0x00ffffff
   19d14:	andhi	r0, r0, r1
   19d18:	andhi	r0, r0, r0
   19d1c:			; <UNDEFINED> instruction: 0xffff8000
   19d20:	push	{fp, lr}
   19d24:	mov	fp, sp
   19d28:	sub	sp, sp, #8
   19d2c:	str	r0, [sp, #4]
   19d30:	ldr	r0, [sp, #4]
   19d34:	movw	r1, #1
   19d38:	bl	19d44 <__assert_fail@plt+0x8a64>
   19d3c:	mov	sp, fp
   19d40:	pop	{fp, pc}
   19d44:	push	{fp, lr}
   19d48:	mov	fp, sp
   19d4c:	sub	sp, sp, #8
   19d50:	str	r0, [sp, #4]
   19d54:	str	r1, [sp]
   19d58:	ldr	r0, [sp, #4]
   19d5c:	ldr	r1, [sp]
   19d60:	bl	19f10 <__assert_fail@plt+0x8c30>
   19d64:	bl	171ac <__assert_fail@plt+0x5ecc>
   19d68:	mov	sp, fp
   19d6c:	pop	{fp, pc}
   19d70:	push	{fp, lr}
   19d74:	mov	fp, sp
   19d78:	sub	sp, sp, #8
   19d7c:	str	r0, [sp, #4]
   19d80:	ldr	r0, [sp, #4]
   19d84:	movw	r1, #1
   19d88:	bl	19d94 <__assert_fail@plt+0x8ab4>
   19d8c:	mov	sp, fp
   19d90:	pop	{fp, pc}
   19d94:	push	{fp, lr}
   19d98:	mov	fp, sp
   19d9c:	sub	sp, sp, #8
   19da0:	str	r0, [sp, #4]
   19da4:	str	r1, [sp]
   19da8:	ldr	r0, [sp, #4]
   19dac:	ldr	r1, [sp]
   19db0:	bl	1a614 <__assert_fail@plt+0x9334>
   19db4:	bl	171ac <__assert_fail@plt+0x5ecc>
   19db8:	mov	sp, fp
   19dbc:	pop	{fp, pc}
   19dc0:	push	{fp, lr}
   19dc4:	mov	fp, sp
   19dc8:	sub	sp, sp, #16
   19dcc:	str	r0, [fp, #-4]
   19dd0:	str	r1, [sp, #8]
   19dd4:	ldr	r0, [sp, #8]
   19dd8:	bl	17188 <__assert_fail@plt+0x5ea8>
   19ddc:	ldr	r1, [fp, #-4]
   19de0:	ldr	r2, [sp, #8]
   19de4:	str	r0, [sp, #4]
   19de8:	bl	110ac <memcpy@plt>
   19dec:	ldr	r0, [sp, #4]
   19df0:	mov	sp, fp
   19df4:	pop	{fp, pc}
   19df8:	push	{fp, lr}
   19dfc:	mov	fp, sp
   19e00:	sub	sp, sp, #16
   19e04:	str	r0, [fp, #-4]
   19e08:	str	r1, [sp, #8]
   19e0c:	ldr	r0, [sp, #8]
   19e10:	bl	171dc <__assert_fail@plt+0x5efc>
   19e14:	ldr	r1, [fp, #-4]
   19e18:	ldr	r2, [sp, #8]
   19e1c:	str	r0, [sp, #4]
   19e20:	bl	110ac <memcpy@plt>
   19e24:	ldr	r0, [sp, #4]
   19e28:	mov	sp, fp
   19e2c:	pop	{fp, pc}
   19e30:	push	{fp, lr}
   19e34:	mov	fp, sp
   19e38:	sub	sp, sp, #16
   19e3c:	str	r0, [fp, #-4]
   19e40:	str	r1, [sp, #8]
   19e44:	ldr	r0, [sp, #8]
   19e48:	add	r0, r0, #1
   19e4c:	bl	171dc <__assert_fail@plt+0x5efc>
   19e50:	str	r0, [sp, #4]
   19e54:	ldr	r0, [sp, #4]
   19e58:	ldr	r1, [sp, #8]
   19e5c:	add	r0, r0, r1
   19e60:	movw	r1, #0
   19e64:	strb	r1, [r0]
   19e68:	ldr	r0, [sp, #4]
   19e6c:	ldr	r1, [fp, #-4]
   19e70:	ldr	r2, [sp, #8]
   19e74:	str	r0, [sp]
   19e78:	bl	110ac <memcpy@plt>
   19e7c:	ldr	r0, [sp]
   19e80:	mov	sp, fp
   19e84:	pop	{fp, pc}
   19e88:	push	{fp, lr}
   19e8c:	mov	fp, sp
   19e90:	sub	sp, sp, #8
   19e94:	str	r0, [sp, #4]
   19e98:	ldr	r0, [sp, #4]
   19e9c:	ldr	r1, [sp, #4]
   19ea0:	str	r0, [sp]
   19ea4:	mov	r0, r1
   19ea8:	bl	111c0 <strlen@plt>
   19eac:	add	r1, r0, #1
   19eb0:	ldr	r0, [sp]
   19eb4:	bl	19dc0 <__assert_fail@plt+0x8ae0>
   19eb8:	mov	sp, fp
   19ebc:	pop	{fp, pc}
   19ec0:	push	{fp, lr}
   19ec4:	mov	fp, sp
   19ec8:	sub	sp, sp, #8
   19ecc:	movw	r0, #57612	; 0xe10c
   19ed0:	movt	r0, #2
   19ed4:	ldr	r0, [r0]
   19ed8:	movw	r1, #55108	; 0xd744
   19edc:	movt	r1, #1
   19ee0:	str	r0, [sp, #4]
   19ee4:	mov	r0, r1
   19ee8:	bl	111b4 <gettext@plt>
   19eec:	ldr	r1, [sp, #4]
   19ef0:	str	r0, [sp]
   19ef4:	mov	r0, r1
   19ef8:	movw	r1, #0
   19efc:	movw	r2, #54058	; 0xd32a
   19f00:	movt	r2, #1
   19f04:	ldr	r3, [sp]
   19f08:	bl	11154 <error@plt>
   19f0c:	bl	112b0 <abort@plt>
   19f10:	push	{fp, lr}
   19f14:	mov	fp, sp
   19f18:	sub	sp, sp, #16
   19f1c:	str	r0, [sp, #8]
   19f20:	str	r1, [sp, #4]
   19f24:	ldr	r0, [sp, #8]
   19f28:	cmp	r0, #0
   19f2c:	beq	19f3c <__assert_fail@plt+0x8c5c>
   19f30:	ldr	r0, [sp, #4]
   19f34:	cmp	r0, #0
   19f38:	bne	19f48 <__assert_fail@plt+0x8c68>
   19f3c:	movw	r0, #1
   19f40:	str	r0, [sp, #4]
   19f44:	str	r0, [sp, #8]
   19f48:	ldr	r0, [sp, #4]
   19f4c:	cmp	r0, #0
   19f50:	beq	19f84 <__assert_fail@plt+0x8ca4>
   19f54:	ldr	r0, [pc, #76]	; 19fa8 <__assert_fail@plt+0x8cc8>
   19f58:	ldr	r1, [sp, #4]
   19f5c:	udiv	r0, r0, r1
   19f60:	ldr	r1, [sp, #8]
   19f64:	cmp	r0, r1
   19f68:	bcs	19f84 <__assert_fail@plt+0x8ca4>
   19f6c:	bl	111e4 <__errno_location@plt>
   19f70:	movw	r1, #12
   19f74:	str	r1, [r0]
   19f78:	movw	r0, #0
   19f7c:	str	r0, [fp, #-4]
   19f80:	b	19f9c <__assert_fail@plt+0x8cbc>
   19f84:	ldr	r0, [sp, #8]
   19f88:	ldr	r1, [sp, #4]
   19f8c:	bl	11028 <calloc@plt>
   19f90:	str	r0, [sp]
   19f94:	ldr	r0, [sp]
   19f98:	str	r0, [fp, #-4]
   19f9c:	ldr	r0, [fp, #-4]
   19fa0:	mov	sp, fp
   19fa4:	pop	{fp, pc}
   19fa8:	svcvc	0x00ffffff
   19fac:	push	{fp, lr}
   19fb0:	mov	fp, sp
   19fb4:	sub	sp, sp, #16
   19fb8:	str	r0, [sp, #8]
   19fbc:	ldr	r0, [sp, #8]
   19fc0:	cmp	r0, #0
   19fc4:	bne	19fd0 <__assert_fail@plt+0x8cf0>
   19fc8:	movw	r0, #1
   19fcc:	str	r0, [sp, #8]
   19fd0:	ldr	r0, [pc, #64]	; 1a018 <__assert_fail@plt+0x8d38>
   19fd4:	ldr	r1, [sp, #8]
   19fd8:	cmp	r0, r1
   19fdc:	bcs	19ff8 <__assert_fail@plt+0x8d18>
   19fe0:	bl	111e4 <__errno_location@plt>
   19fe4:	movw	r1, #12
   19fe8:	str	r1, [r0]
   19fec:	movw	r0, #0
   19ff0:	str	r0, [fp, #-4]
   19ff4:	b	1a00c <__assert_fail@plt+0x8d2c>
   19ff8:	ldr	r0, [sp, #8]
   19ffc:	bl	11160 <malloc@plt>
   1a000:	str	r0, [sp, #4]
   1a004:	ldr	r0, [sp, #4]
   1a008:	str	r0, [fp, #-4]
   1a00c:	ldr	r0, [fp, #-4]
   1a010:	mov	sp, fp
   1a014:	pop	{fp, pc}
   1a018:	svcvc	0x00ffffff
   1a01c:	push	{fp, lr}
   1a020:	mov	fp, sp
   1a024:	sub	sp, sp, #16
   1a028:	str	r0, [sp, #8]
   1a02c:	str	r1, [sp, #4]
   1a030:	ldr	r0, [sp, #8]
   1a034:	movw	r1, #0
   1a038:	cmp	r0, r1
   1a03c:	bne	1a050 <__assert_fail@plt+0x8d70>
   1a040:	ldr	r0, [sp, #4]
   1a044:	bl	19fac <__assert_fail@plt+0x8ccc>
   1a048:	str	r0, [fp, #-4]
   1a04c:	b	1a0b0 <__assert_fail@plt+0x8dd0>
   1a050:	ldr	r0, [sp, #4]
   1a054:	cmp	r0, #0
   1a058:	bne	1a070 <__assert_fail@plt+0x8d90>
   1a05c:	ldr	r0, [sp, #8]
   1a060:	bl	138b0 <__assert_fail@plt+0x25d0>
   1a064:	movw	r0, #0
   1a068:	str	r0, [fp, #-4]
   1a06c:	b	1a0b0 <__assert_fail@plt+0x8dd0>
   1a070:	ldr	r0, [pc, #68]	; 1a0bc <__assert_fail@plt+0x8ddc>
   1a074:	ldr	r1, [sp, #4]
   1a078:	cmp	r0, r1
   1a07c:	bcs	1a098 <__assert_fail@plt+0x8db8>
   1a080:	bl	111e4 <__errno_location@plt>
   1a084:	movw	r1, #12
   1a088:	str	r1, [r0]
   1a08c:	movw	r0, #0
   1a090:	str	r0, [fp, #-4]
   1a094:	b	1a0b0 <__assert_fail@plt+0x8dd0>
   1a098:	ldr	r0, [sp, #8]
   1a09c:	ldr	r1, [sp, #4]
   1a0a0:	bl	110e8 <realloc@plt>
   1a0a4:	str	r0, [sp]
   1a0a8:	ldr	r0, [sp]
   1a0ac:	str	r0, [fp, #-4]
   1a0b0:	ldr	r0, [fp, #-4]
   1a0b4:	mov	sp, fp
   1a0b8:	pop	{fp, pc}
   1a0bc:	svcvc	0x00ffffff
   1a0c0:	push	{fp, lr}
   1a0c4:	mov	fp, sp
   1a0c8:	sub	sp, sp, #24
   1a0cc:	str	r0, [fp, #-8]
   1a0d0:	str	r1, [sp, #12]
   1a0d4:	ldr	r0, [fp, #-8]
   1a0d8:	str	r0, [sp, #8]
   1a0dc:	ldr	r0, [sp, #12]
   1a0e0:	str	r0, [sp, #4]
   1a0e4:	ldr	r0, [sp, #8]
   1a0e8:	ldr	r1, [sp, #4]
   1a0ec:	cmp	r0, r1
   1a0f0:	bne	1a100 <__assert_fail@plt+0x8e20>
   1a0f4:	movw	r0, #0
   1a0f8:	str	r0, [fp, #-4]
   1a0fc:	b	1a16c <__assert_fail@plt+0x8e8c>
   1a100:	b	1a104 <__assert_fail@plt+0x8e24>
   1a104:	ldr	r0, [sp, #8]
   1a108:	ldrb	r0, [r0]
   1a10c:	bl	1c128 <__assert_fail@plt+0xae48>
   1a110:	strb	r0, [sp, #3]
   1a114:	ldr	r0, [sp, #4]
   1a118:	ldrb	r0, [r0]
   1a11c:	bl	1c128 <__assert_fail@plt+0xae48>
   1a120:	strb	r0, [sp, #2]
   1a124:	ldrb	r0, [sp, #3]
   1a128:	cmp	r0, #0
   1a12c:	bne	1a134 <__assert_fail@plt+0x8e54>
   1a130:	b	1a15c <__assert_fail@plt+0x8e7c>
   1a134:	ldr	r0, [sp, #8]
   1a138:	add	r0, r0, #1
   1a13c:	str	r0, [sp, #8]
   1a140:	ldr	r0, [sp, #4]
   1a144:	add	r0, r0, #1
   1a148:	str	r0, [sp, #4]
   1a14c:	ldrb	r0, [sp, #3]
   1a150:	ldrb	r1, [sp, #2]
   1a154:	cmp	r0, r1
   1a158:	beq	1a104 <__assert_fail@plt+0x8e24>
   1a15c:	ldrb	r0, [sp, #3]
   1a160:	ldrb	r1, [sp, #2]
   1a164:	sub	r0, r0, r1
   1a168:	str	r0, [fp, #-4]
   1a16c:	ldr	r0, [fp, #-4]
   1a170:	mov	sp, fp
   1a174:	pop	{fp, pc}
   1a178:	push	{fp, lr}
   1a17c:	mov	fp, sp
   1a180:	sub	sp, sp, #16
   1a184:	str	r0, [sp, #8]
   1a188:	ldr	r0, [sp, #8]
   1a18c:	bl	11130 <__fpending@plt>
   1a190:	cmp	r0, #0
   1a194:	movw	r0, #0
   1a198:	movne	r0, #1
   1a19c:	and	r0, r0, #1
   1a1a0:	strb	r0, [sp, #7]
   1a1a4:	ldr	r0, [sp, #8]
   1a1a8:	bl	1113c <ferror_unlocked@plt>
   1a1ac:	cmp	r0, #0
   1a1b0:	movw	r0, #0
   1a1b4:	movne	r0, #1
   1a1b8:	and	r0, r0, #1
   1a1bc:	strb	r0, [sp, #6]
   1a1c0:	ldr	r0, [sp, #8]
   1a1c4:	bl	13718 <__assert_fail@plt+0x2438>
   1a1c8:	cmp	r0, #0
   1a1cc:	movw	r0, #0
   1a1d0:	movne	r0, #1
   1a1d4:	and	r0, r0, #1
   1a1d8:	strb	r0, [sp, #5]
   1a1dc:	ldrb	r0, [sp, #6]
   1a1e0:	tst	r0, #1
   1a1e4:	bne	1a210 <__assert_fail@plt+0x8f30>
   1a1e8:	ldrb	r0, [sp, #5]
   1a1ec:	tst	r0, #1
   1a1f0:	beq	1a234 <__assert_fail@plt+0x8f54>
   1a1f4:	ldrb	r0, [sp, #7]
   1a1f8:	tst	r0, #1
   1a1fc:	bne	1a210 <__assert_fail@plt+0x8f30>
   1a200:	bl	111e4 <__errno_location@plt>
   1a204:	ldr	r0, [r0]
   1a208:	cmp	r0, #9
   1a20c:	beq	1a234 <__assert_fail@plt+0x8f54>
   1a210:	ldrb	r0, [sp, #5]
   1a214:	tst	r0, #1
   1a218:	bne	1a228 <__assert_fail@plt+0x8f48>
   1a21c:	bl	111e4 <__errno_location@plt>
   1a220:	movw	r1, #0
   1a224:	str	r1, [r0]
   1a228:	mvn	r0, #0
   1a22c:	str	r0, [fp, #-4]
   1a230:	b	1a23c <__assert_fail@plt+0x8f5c>
   1a234:	movw	r0, #0
   1a238:	str	r0, [fp, #-4]
   1a23c:	ldr	r0, [fp, #-4]
   1a240:	mov	sp, fp
   1a244:	pop	{fp, pc}
   1a248:	sub	sp, sp, #16
   1a24c:	str	r0, [sp, #8]
   1a250:	str	r1, [sp, #4]
   1a254:	ldr	r0, [sp, #8]
   1a258:	ldr	r0, [r0, #20]
   1a25c:	ldr	r1, [sp, #8]
   1a260:	ldr	r1, [r1, #16]
   1a264:	cmp	r0, r1
   1a268:	bls	1a278 <__assert_fail@plt+0x8f98>
   1a26c:	movw	r0, #0
   1a270:	str	r0, [sp, #12]
   1a274:	b	1a2c0 <__assert_fail@plt+0x8fe0>
   1a278:	ldr	r0, [sp, #8]
   1a27c:	ldr	r0, [r0, #8]
   1a280:	ldr	r1, [sp, #8]
   1a284:	ldr	r1, [r1, #4]
   1a288:	sub	r0, r0, r1
   1a28c:	str	r0, [sp]
   1a290:	ldr	r0, [sp]
   1a294:	cmp	r0, #0
   1a298:	bne	1a2a8 <__assert_fail@plt+0x8fc8>
   1a29c:	movw	r0, #0
   1a2a0:	str	r0, [sp, #12]
   1a2a4:	b	1a2c0 <__assert_fail@plt+0x8fe0>
   1a2a8:	ldr	r0, [sp]
   1a2ac:	ldr	r1, [sp, #4]
   1a2b0:	str	r0, [r1]
   1a2b4:	ldr	r0, [sp, #8]
   1a2b8:	ldr	r0, [r0, #4]
   1a2bc:	str	r0, [sp, #12]
   1a2c0:	ldr	r0, [sp, #12]
   1a2c4:	add	sp, sp, #16
   1a2c8:	bx	lr
   1a2cc:	push	{r4, r5, fp, lr}
   1a2d0:	add	fp, sp, #8
   1a2d4:	sub	sp, sp, #48	; 0x30
   1a2d8:	sub	sp, sp, #4096	; 0x1000
   1a2dc:	str	r0, [fp, #-16]
   1a2e0:	str	r1, [fp, #-20]	; 0xffffffec
   1a2e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a2e8:	cmp	r0, #0
   1a2ec:	bne	1a2fc <__assert_fail@plt+0x901c>
   1a2f0:	movw	r0, #0
   1a2f4:	str	r0, [fp, #-12]
   1a2f8:	b	1a51c <__assert_fail@plt+0x923c>
   1a2fc:	ldr	r0, [fp, #-16]
   1a300:	bl	1c1b0 <__assert_fail@plt+0xaed0>
   1a304:	str	r0, [fp, #-24]	; 0xffffffe8
   1a308:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a30c:	cmp	r0, #0
   1a310:	bls	1a40c <__assert_fail@plt+0x912c>
   1a314:	ldr	r0, [fp, #-16]
   1a318:	sub	r1, fp, #32
   1a31c:	bl	1a248 <__assert_fail@plt+0x8f68>
   1a320:	movw	r1, #0
   1a324:	cmp	r0, r1
   1a328:	beq	1a3bc <__assert_fail@plt+0x90dc>
   1a32c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a330:	cmp	r0, #0
   1a334:	bls	1a3bc <__assert_fail@plt+0x90dc>
   1a338:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a33c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a340:	cmp	r0, r1
   1a344:	bcs	1a354 <__assert_fail@plt+0x9074>
   1a348:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a34c:	str	r0, [sp, #12]
   1a350:	b	1a35c <__assert_fail@plt+0x907c>
   1a354:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a358:	str	r0, [sp, #12]
   1a35c:	ldr	r0, [sp, #12]
   1a360:	str	r0, [fp, #-36]	; 0xffffffdc
   1a364:	ldr	r0, [fp, #-16]
   1a368:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a36c:	bl	1a528 <__assert_fail@plt+0x9248>
   1a370:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a374:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a378:	sub	r0, r1, r0
   1a37c:	str	r0, [fp, #-20]	; 0xffffffec
   1a380:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a384:	cmp	r0, #0
   1a388:	bne	1a398 <__assert_fail@plt+0x90b8>
   1a38c:	movw	r0, #0
   1a390:	str	r0, [fp, #-12]
   1a394:	b	1a51c <__assert_fail@plt+0x923c>
   1a398:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a39c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a3a0:	sub	r0, r1, r0
   1a3a4:	str	r0, [fp, #-24]	; 0xffffffe8
   1a3a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3ac:	cmp	r0, #0
   1a3b0:	bne	1a3b8 <__assert_fail@plt+0x90d8>
   1a3b4:	b	1a40c <__assert_fail@plt+0x912c>
   1a3b8:	b	1a3bc <__assert_fail@plt+0x90dc>
   1a3bc:	ldr	r0, [fp, #-16]
   1a3c0:	bl	11208 <fgetc@plt>
   1a3c4:	cmn	r0, #1
   1a3c8:	bne	1a3d0 <__assert_fail@plt+0x90f0>
   1a3cc:	b	1a4f8 <__assert_fail@plt+0x9218>
   1a3d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a3d4:	mvn	r1, #0
   1a3d8:	add	r0, r0, r1
   1a3dc:	str	r0, [fp, #-20]	; 0xffffffec
   1a3e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a3e4:	cmp	r0, #0
   1a3e8:	bne	1a3f8 <__assert_fail@plt+0x9118>
   1a3ec:	movw	r0, #0
   1a3f0:	str	r0, [fp, #-12]
   1a3f4:	b	1a51c <__assert_fail@plt+0x923c>
   1a3f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3fc:	mvn	r1, #0
   1a400:	add	r0, r0, r1
   1a404:	str	r0, [fp, #-24]	; 0xffffffe8
   1a408:	b	1a308 <__assert_fail@plt+0x9028>
   1a40c:	ldr	r0, [fp, #-16]
   1a410:	bl	11214 <fileno@plt>
   1a414:	str	r0, [fp, #-28]	; 0xffffffe4
   1a418:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a41c:	cmp	r0, #0
   1a420:	blt	1a478 <__assert_fail@plt+0x9198>
   1a424:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a428:	mov	r1, sp
   1a42c:	mov	r2, #1
   1a430:	str	r2, [r1]
   1a434:	mov	r1, #0
   1a438:	mov	r2, r1
   1a43c:	mov	r3, r1
   1a440:	bl	1110c <lseek64@plt>
   1a444:	cmp	r1, #0
   1a448:	bmi	1a478 <__assert_fail@plt+0x9198>
   1a44c:	b	1a450 <__assert_fail@plt+0x9170>
   1a450:	ldr	r0, [fp, #-16]
   1a454:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a458:	mov	r3, #0
   1a45c:	mov	r2, sp
   1a460:	mov	ip, #1
   1a464:	str	ip, [r2]
   1a468:	mov	r2, r1
   1a46c:	bl	138f0 <__assert_fail@plt+0x2610>
   1a470:	str	r0, [fp, #-12]
   1a474:	b	1a51c <__assert_fail@plt+0x923c>
   1a478:	b	1a47c <__assert_fail@plt+0x919c>
   1a47c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a480:	movw	r1, #4096	; 0x1000
   1a484:	cmp	r1, r0
   1a488:	bcs	1a498 <__assert_fail@plt+0x91b8>
   1a48c:	movw	r0, #4096	; 0x1000
   1a490:	str	r0, [sp, #8]
   1a494:	b	1a4a0 <__assert_fail@plt+0x91c0>
   1a498:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a49c:	str	r0, [sp, #8]
   1a4a0:	ldr	r0, [sp, #8]
   1a4a4:	add	r1, sp, #20
   1a4a8:	str	r0, [sp, #16]
   1a4ac:	ldr	r2, [sp, #16]
   1a4b0:	ldr	r3, [fp, #-16]
   1a4b4:	mov	r0, r1
   1a4b8:	movw	r1, #1
   1a4bc:	bl	11124 <fread@plt>
   1a4c0:	ldr	r1, [sp, #16]
   1a4c4:	cmp	r0, r1
   1a4c8:	bcs	1a4d0 <__assert_fail@plt+0x91f0>
   1a4cc:	b	1a4f8 <__assert_fail@plt+0x9218>
   1a4d0:	ldr	r0, [sp, #16]
   1a4d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a4d8:	sub	r0, r1, r0
   1a4dc:	str	r0, [fp, #-20]	; 0xffffffec
   1a4e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a4e4:	cmp	r0, #0
   1a4e8:	bhi	1a47c <__assert_fail@plt+0x919c>
   1a4ec:	movw	r0, #0
   1a4f0:	str	r0, [fp, #-12]
   1a4f4:	b	1a51c <__assert_fail@plt+0x923c>
   1a4f8:	ldr	r0, [fp, #-16]
   1a4fc:	bl	11094 <ferror@plt>
   1a500:	cmp	r0, #0
   1a504:	beq	1a514 <__assert_fail@plt+0x9234>
   1a508:	mvn	r0, #0
   1a50c:	str	r0, [fp, #-12]
   1a510:	b	1a51c <__assert_fail@plt+0x923c>
   1a514:	movw	r0, #0
   1a518:	str	r0, [fp, #-12]
   1a51c:	ldr	r0, [fp, #-12]
   1a520:	sub	sp, fp, #8
   1a524:	pop	{r4, r5, fp, pc}
   1a528:	sub	sp, sp, #8
   1a52c:	str	r0, [sp, #4]
   1a530:	str	r1, [sp]
   1a534:	ldr	r0, [sp]
   1a538:	ldr	r1, [sp, #4]
   1a53c:	ldr	r2, [r1, #4]
   1a540:	add	r0, r2, r0
   1a544:	str	r0, [r1, #4]
   1a548:	add	sp, sp, #8
   1a54c:	bx	lr
   1a550:	push	{fp, lr}
   1a554:	mov	fp, sp
   1a558:	bl	111e4 <__errno_location@plt>
   1a55c:	movw	r1, #12
   1a560:	str	r1, [r0]
   1a564:	movw	r0, #0
   1a568:	pop	{fp, pc}
   1a56c:	push	{fp, lr}
   1a570:	mov	fp, sp
   1a574:	sub	sp, sp, #8
   1a578:	str	r0, [sp, #4]
   1a57c:	ldr	r0, [sp, #4]
   1a580:	cmn	r0, #1
   1a584:	bhi	1a598 <__assert_fail@plt+0x92b8>
   1a588:	ldr	r0, [sp, #4]
   1a58c:	bl	19fac <__assert_fail@plt+0x8ccc>
   1a590:	str	r0, [sp]
   1a594:	b	1a5a0 <__assert_fail@plt+0x92c0>
   1a598:	bl	1a550 <__assert_fail@plt+0x9270>
   1a59c:	str	r0, [sp]
   1a5a0:	ldr	r0, [sp]
   1a5a4:	mov	sp, fp
   1a5a8:	pop	{fp, pc}
   1a5ac:	push	{fp, lr}
   1a5b0:	mov	fp, sp
   1a5b4:	sub	sp, sp, #16
   1a5b8:	str	r0, [fp, #-4]
   1a5bc:	str	r1, [sp, #8]
   1a5c0:	ldr	r0, [sp, #8]
   1a5c4:	cmn	r0, #1
   1a5c8:	bhi	1a600 <__assert_fail@plt+0x9320>
   1a5cc:	ldr	r0, [fp, #-4]
   1a5d0:	ldr	r1, [sp, #8]
   1a5d4:	ldr	r2, [sp, #8]
   1a5d8:	cmp	r2, #0
   1a5dc:	movw	r2, #0
   1a5e0:	movne	r2, #1
   1a5e4:	mvn	r3, #0
   1a5e8:	eor	r2, r2, r3
   1a5ec:	and	r2, r2, #1
   1a5f0:	orr	r1, r1, r2
   1a5f4:	bl	1a01c <__assert_fail@plt+0x8d3c>
   1a5f8:	str	r0, [sp, #4]
   1a5fc:	b	1a608 <__assert_fail@plt+0x9328>
   1a600:	bl	1a550 <__assert_fail@plt+0x9270>
   1a604:	str	r0, [sp, #4]
   1a608:	ldr	r0, [sp, #4]
   1a60c:	mov	sp, fp
   1a610:	pop	{fp, pc}
   1a614:	push	{fp, lr}
   1a618:	mov	fp, sp
   1a61c:	sub	sp, sp, #16
   1a620:	str	r0, [sp, #8]
   1a624:	str	r1, [sp, #4]
   1a628:	ldr	r0, [sp, #8]
   1a62c:	mvn	r1, #0
   1a630:	cmp	r1, r0
   1a634:	bcs	1a658 <__assert_fail@plt+0x9378>
   1a638:	ldr	r0, [sp, #4]
   1a63c:	cmp	r0, #0
   1a640:	beq	1a650 <__assert_fail@plt+0x9370>
   1a644:	bl	1a550 <__assert_fail@plt+0x9270>
   1a648:	str	r0, [fp, #-4]
   1a64c:	b	1a698 <__assert_fail@plt+0x93b8>
   1a650:	movw	r0, #0
   1a654:	str	r0, [sp, #8]
   1a658:	ldr	r0, [sp, #4]
   1a65c:	mvn	r1, #0
   1a660:	cmp	r1, r0
   1a664:	bcs	1a688 <__assert_fail@plt+0x93a8>
   1a668:	ldr	r0, [sp, #8]
   1a66c:	cmp	r0, #0
   1a670:	beq	1a680 <__assert_fail@plt+0x93a0>
   1a674:	bl	1a550 <__assert_fail@plt+0x9270>
   1a678:	str	r0, [fp, #-4]
   1a67c:	b	1a698 <__assert_fail@plt+0x93b8>
   1a680:	movw	r0, #0
   1a684:	str	r0, [sp, #4]
   1a688:	ldr	r0, [sp, #8]
   1a68c:	ldr	r1, [sp, #4]
   1a690:	bl	19f10 <__assert_fail@plt+0x8c30>
   1a694:	str	r0, [fp, #-4]
   1a698:	ldr	r0, [fp, #-4]
   1a69c:	mov	sp, fp
   1a6a0:	pop	{fp, pc}
   1a6a4:	push	{fp, lr}
   1a6a8:	mov	fp, sp
   1a6ac:	sub	sp, sp, #16
   1a6b0:	str	r0, [fp, #-4]
   1a6b4:	str	r1, [sp, #8]
   1a6b8:	str	r2, [sp, #4]
   1a6bc:	ldr	r0, [sp, #8]
   1a6c0:	cmp	r0, #0
   1a6c4:	beq	1a6d4 <__assert_fail@plt+0x93f4>
   1a6c8:	ldr	r0, [sp, #4]
   1a6cc:	cmp	r0, #0
   1a6d0:	bne	1a6e0 <__assert_fail@plt+0x9400>
   1a6d4:	movw	r0, #1
   1a6d8:	str	r0, [sp, #4]
   1a6dc:	str	r0, [sp, #8]
   1a6e0:	ldr	r0, [sp, #8]
   1a6e4:	cmn	r0, #1
   1a6e8:	bhi	1a710 <__assert_fail@plt+0x9430>
   1a6ec:	ldr	r0, [sp, #4]
   1a6f0:	cmn	r0, #1
   1a6f4:	bhi	1a710 <__assert_fail@plt+0x9430>
   1a6f8:	ldr	r0, [fp, #-4]
   1a6fc:	ldr	r1, [sp, #8]
   1a700:	ldr	r2, [sp, #4]
   1a704:	bl	1a830 <__assert_fail@plt+0x9550>
   1a708:	str	r0, [sp]
   1a70c:	b	1a718 <__assert_fail@plt+0x9438>
   1a710:	bl	1a550 <__assert_fail@plt+0x9270>
   1a714:	str	r0, [sp]
   1a718:	ldr	r0, [sp]
   1a71c:	mov	sp, fp
   1a720:	pop	{fp, pc}
   1a724:	push	{fp, lr}
   1a728:	mov	fp, sp
   1a72c:	sub	sp, sp, #8
   1a730:	movw	r0, #14
   1a734:	bl	1125c <nl_langinfo@plt>
   1a738:	str	r0, [sp, #4]
   1a73c:	ldr	r0, [sp, #4]
   1a740:	movw	r1, #0
   1a744:	cmp	r0, r1
   1a748:	bne	1a758 <__assert_fail@plt+0x9478>
   1a74c:	movw	r0, #53275	; 0xd01b
   1a750:	movt	r0, #1
   1a754:	str	r0, [sp, #4]
   1a758:	ldr	r0, [sp, #4]
   1a75c:	ldrb	r0, [r0]
   1a760:	cmp	r0, #0
   1a764:	bne	1a774 <__assert_fail@plt+0x9494>
   1a768:	movw	r0, #55125	; 0xd755
   1a76c:	movt	r0, #1
   1a770:	str	r0, [sp, #4]
   1a774:	ldr	r0, [sp, #4]
   1a778:	mov	sp, fp
   1a77c:	pop	{fp, pc}
   1a780:	push	{fp, lr}
   1a784:	mov	fp, sp
   1a788:	sub	sp, sp, #32
   1a78c:	str	r0, [fp, #-8]
   1a790:	str	r1, [fp, #-12]
   1a794:	str	r2, [sp, #16]
   1a798:	str	r3, [sp, #12]
   1a79c:	ldr	r0, [fp, #-8]
   1a7a0:	movw	r1, #0
   1a7a4:	cmp	r0, r1
   1a7a8:	bne	1a7b4 <__assert_fail@plt+0x94d4>
   1a7ac:	add	r0, sp, #4
   1a7b0:	str	r0, [fp, #-8]
   1a7b4:	ldr	r0, [fp, #-8]
   1a7b8:	ldr	r1, [fp, #-12]
   1a7bc:	ldr	r2, [sp, #16]
   1a7c0:	ldr	r3, [sp, #12]
   1a7c4:	bl	11148 <mbrtowc@plt>
   1a7c8:	str	r0, [sp, #8]
   1a7cc:	ldr	r0, [sp, #8]
   1a7d0:	mvn	r1, #1
   1a7d4:	cmp	r1, r0
   1a7d8:	bhi	1a81c <__assert_fail@plt+0x953c>
   1a7dc:	ldr	r0, [sp, #16]
   1a7e0:	cmp	r0, #0
   1a7e4:	beq	1a81c <__assert_fail@plt+0x953c>
   1a7e8:	movw	r0, #0
   1a7ec:	bl	1c24c <__assert_fail@plt+0xaf6c>
   1a7f0:	tst	r0, #1
   1a7f4:	bne	1a81c <__assert_fail@plt+0x953c>
   1a7f8:	ldr	r0, [fp, #-12]
   1a7fc:	ldrb	r0, [r0]
   1a800:	strb	r0, [sp, #3]
   1a804:	ldrb	r0, [sp, #3]
   1a808:	ldr	r1, [fp, #-8]
   1a80c:	str	r0, [r1]
   1a810:	movw	r0, #1
   1a814:	str	r0, [fp, #-4]
   1a818:	b	1a824 <__assert_fail@plt+0x9544>
   1a81c:	ldr	r0, [sp, #8]
   1a820:	str	r0, [fp, #-4]
   1a824:	ldr	r0, [fp, #-4]
   1a828:	mov	sp, fp
   1a82c:	pop	{fp, pc}
   1a830:	push	{fp, lr}
   1a834:	mov	fp, sp
   1a838:	sub	sp, sp, #96	; 0x60
   1a83c:	str	r0, [fp, #-8]
   1a840:	str	r1, [fp, #-12]
   1a844:	str	r2, [fp, #-16]
   1a848:	b	1ac00 <__assert_fail@plt+0x9920>
   1a84c:	b	1aa20 <__assert_fail@plt+0x9740>
   1a850:	ldr	r0, [fp, #-16]
   1a854:	cmp	r0, #0
   1a858:	bcs	1a95c <__assert_fail@plt+0x967c>
   1a85c:	ldr	r0, [fp, #-12]
   1a860:	cmp	r0, #0
   1a864:	bcs	1a8ec <__assert_fail@plt+0x960c>
   1a868:	b	1a888 <__assert_fail@plt+0x95a8>
   1a86c:	ldr	r0, [fp, #-12]
   1a870:	ldr	r1, [fp, #-16]
   1a874:	movw	r2, #127	; 0x7f
   1a878:	udiv	r1, r2, r1
   1a87c:	cmp	r0, r1
   1a880:	bcc	1a9f0 <__assert_fail@plt+0x9710>
   1a884:	b	1aa08 <__assert_fail@plt+0x9728>
   1a888:	b	1a89c <__assert_fail@plt+0x95bc>
   1a88c:	ldr	r0, [fp, #-16]
   1a890:	cmp	r0, #1
   1a894:	bcc	1a8ac <__assert_fail@plt+0x95cc>
   1a898:	b	1a8b8 <__assert_fail@plt+0x95d8>
   1a89c:	ldr	r0, [fp, #-16]
   1a8a0:	movw	r1, #0
   1a8a4:	cmp	r1, r0
   1a8a8:	bcs	1a8b8 <__assert_fail@plt+0x95d8>
   1a8ac:	movw	r0, #0
   1a8b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1a8b4:	b	1a8d0 <__assert_fail@plt+0x95f0>
   1a8b8:	ldr	r0, [fp, #-16]
   1a8bc:	movw	r1, #0
   1a8c0:	sub	r0, r1, r0
   1a8c4:	movw	r1, #127	; 0x7f
   1a8c8:	udiv	r0, r1, r0
   1a8cc:	str	r0, [fp, #-24]	; 0xffffffe8
   1a8d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8d4:	ldr	r1, [fp, #-12]
   1a8d8:	mvn	r2, #0
   1a8dc:	sub	r1, r2, r1
   1a8e0:	cmp	r0, r1
   1a8e4:	bls	1a9f0 <__assert_fail@plt+0x9710>
   1a8e8:	b	1aa08 <__assert_fail@plt+0x9728>
   1a8ec:	ldr	r0, [fp, #-16]
   1a8f0:	cmn	r0, #1
   1a8f4:	bne	1a940 <__assert_fail@plt+0x9660>
   1a8f8:	b	1a918 <__assert_fail@plt+0x9638>
   1a8fc:	ldr	r0, [fp, #-12]
   1a900:	mvn	r1, #127	; 0x7f
   1a904:	add	r0, r0, r1
   1a908:	movw	r1, #0
   1a90c:	cmp	r1, r0
   1a910:	bcc	1a9f0 <__assert_fail@plt+0x9710>
   1a914:	b	1aa08 <__assert_fail@plt+0x9728>
   1a918:	ldr	r0, [fp, #-12]
   1a91c:	movw	r1, #0
   1a920:	cmp	r1, r0
   1a924:	bcs	1aa08 <__assert_fail@plt+0x9728>
   1a928:	ldr	r0, [fp, #-12]
   1a92c:	sub	r0, r0, #1
   1a930:	movw	r1, #127	; 0x7f
   1a934:	cmp	r1, r0
   1a938:	bcc	1a9f0 <__assert_fail@plt+0x9710>
   1a93c:	b	1aa08 <__assert_fail@plt+0x9728>
   1a940:	ldr	r0, [fp, #-16]
   1a944:	mvn	r1, #127	; 0x7f
   1a948:	udiv	r0, r1, r0
   1a94c:	ldr	r1, [fp, #-12]
   1a950:	cmp	r0, r1
   1a954:	bcc	1a9f0 <__assert_fail@plt+0x9710>
   1a958:	b	1aa08 <__assert_fail@plt+0x9728>
   1a95c:	ldr	r0, [fp, #-16]
   1a960:	cmp	r0, #0
   1a964:	bne	1a96c <__assert_fail@plt+0x968c>
   1a968:	b	1aa08 <__assert_fail@plt+0x9728>
   1a96c:	ldr	r0, [fp, #-12]
   1a970:	cmp	r0, #0
   1a974:	bcs	1a9d8 <__assert_fail@plt+0x96f8>
   1a978:	ldr	r0, [fp, #-12]
   1a97c:	cmn	r0, #1
   1a980:	bne	1a9bc <__assert_fail@plt+0x96dc>
   1a984:	b	1a9a4 <__assert_fail@plt+0x96c4>
   1a988:	ldr	r0, [fp, #-16]
   1a98c:	mvn	r1, #127	; 0x7f
   1a990:	add	r0, r0, r1
   1a994:	movw	r1, #0
   1a998:	cmp	r1, r0
   1a99c:	bcc	1a9f0 <__assert_fail@plt+0x9710>
   1a9a0:	b	1aa08 <__assert_fail@plt+0x9728>
   1a9a4:	ldr	r0, [fp, #-16]
   1a9a8:	sub	r0, r0, #1
   1a9ac:	movw	r1, #127	; 0x7f
   1a9b0:	cmp	r1, r0
   1a9b4:	bcc	1a9f0 <__assert_fail@plt+0x9710>
   1a9b8:	b	1aa08 <__assert_fail@plt+0x9728>
   1a9bc:	ldr	r0, [fp, #-12]
   1a9c0:	mvn	r1, #127	; 0x7f
   1a9c4:	udiv	r0, r1, r0
   1a9c8:	ldr	r1, [fp, #-16]
   1a9cc:	cmp	r0, r1
   1a9d0:	bcc	1a9f0 <__assert_fail@plt+0x9710>
   1a9d4:	b	1aa08 <__assert_fail@plt+0x9728>
   1a9d8:	ldr	r0, [fp, #-16]
   1a9dc:	movw	r1, #127	; 0x7f
   1a9e0:	udiv	r0, r1, r0
   1a9e4:	ldr	r1, [fp, #-12]
   1a9e8:	cmp	r0, r1
   1a9ec:	bcs	1aa08 <__assert_fail@plt+0x9728>
   1a9f0:	ldr	r0, [fp, #-12]
   1a9f4:	ldr	r1, [fp, #-16]
   1a9f8:	mul	r0, r0, r1
   1a9fc:	sxtb	r0, r0
   1aa00:	str	r0, [fp, #-20]	; 0xffffffec
   1aa04:	b	1bb30 <__assert_fail@plt+0xa850>
   1aa08:	ldr	r0, [fp, #-12]
   1aa0c:	ldr	r1, [fp, #-16]
   1aa10:	mul	r0, r0, r1
   1aa14:	sxtb	r0, r0
   1aa18:	str	r0, [fp, #-20]	; 0xffffffec
   1aa1c:	b	1bb48 <__assert_fail@plt+0xa868>
   1aa20:	ldr	r0, [fp, #-16]
   1aa24:	cmp	r0, #0
   1aa28:	bcs	1ab34 <__assert_fail@plt+0x9854>
   1aa2c:	ldr	r0, [fp, #-12]
   1aa30:	cmp	r0, #0
   1aa34:	bcs	1aabc <__assert_fail@plt+0x97dc>
   1aa38:	b	1aa58 <__assert_fail@plt+0x9778>
   1aa3c:	ldr	r0, [fp, #-12]
   1aa40:	ldr	r1, [fp, #-16]
   1aa44:	movw	r2, #255	; 0xff
   1aa48:	udiv	r1, r2, r1
   1aa4c:	cmp	r0, r1
   1aa50:	bcc	1abd0 <__assert_fail@plt+0x98f0>
   1aa54:	b	1abe8 <__assert_fail@plt+0x9908>
   1aa58:	b	1aa6c <__assert_fail@plt+0x978c>
   1aa5c:	ldr	r0, [fp, #-16]
   1aa60:	cmp	r0, #1
   1aa64:	bcc	1aa7c <__assert_fail@plt+0x979c>
   1aa68:	b	1aa88 <__assert_fail@plt+0x97a8>
   1aa6c:	ldr	r0, [fp, #-16]
   1aa70:	movw	r1, #0
   1aa74:	cmp	r1, r0
   1aa78:	bcs	1aa88 <__assert_fail@plt+0x97a8>
   1aa7c:	movw	r0, #0
   1aa80:	str	r0, [fp, #-28]	; 0xffffffe4
   1aa84:	b	1aaa0 <__assert_fail@plt+0x97c0>
   1aa88:	ldr	r0, [fp, #-16]
   1aa8c:	movw	r1, #0
   1aa90:	sub	r0, r1, r0
   1aa94:	movw	r1, #255	; 0xff
   1aa98:	udiv	r0, r1, r0
   1aa9c:	str	r0, [fp, #-28]	; 0xffffffe4
   1aaa0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1aaa4:	ldr	r1, [fp, #-12]
   1aaa8:	mvn	r2, #0
   1aaac:	sub	r1, r2, r1
   1aab0:	cmp	r0, r1
   1aab4:	bls	1abd0 <__assert_fail@plt+0x98f0>
   1aab8:	b	1abe8 <__assert_fail@plt+0x9908>
   1aabc:	b	1aac4 <__assert_fail@plt+0x97e4>
   1aac0:	b	1aac8 <__assert_fail@plt+0x97e8>
   1aac4:	b	1ab18 <__assert_fail@plt+0x9838>
   1aac8:	ldr	r0, [fp, #-16]
   1aacc:	cmn	r0, #1
   1aad0:	bne	1ab18 <__assert_fail@plt+0x9838>
   1aad4:	b	1aaf0 <__assert_fail@plt+0x9810>
   1aad8:	ldr	r0, [fp, #-12]
   1aadc:	add	r0, r0, #0
   1aae0:	movw	r1, #0
   1aae4:	cmp	r1, r0
   1aae8:	bcc	1abd0 <__assert_fail@plt+0x98f0>
   1aaec:	b	1abe8 <__assert_fail@plt+0x9908>
   1aaf0:	ldr	r0, [fp, #-12]
   1aaf4:	movw	r1, #0
   1aaf8:	cmp	r1, r0
   1aafc:	bcs	1abe8 <__assert_fail@plt+0x9908>
   1ab00:	ldr	r0, [fp, #-12]
   1ab04:	sub	r0, r0, #1
   1ab08:	mvn	r1, #0
   1ab0c:	cmp	r1, r0
   1ab10:	bcc	1abd0 <__assert_fail@plt+0x98f0>
   1ab14:	b	1abe8 <__assert_fail@plt+0x9908>
   1ab18:	ldr	r0, [fp, #-16]
   1ab1c:	movw	r1, #0
   1ab20:	udiv	r0, r1, r0
   1ab24:	ldr	r1, [fp, #-12]
   1ab28:	cmp	r0, r1
   1ab2c:	bcc	1abd0 <__assert_fail@plt+0x98f0>
   1ab30:	b	1abe8 <__assert_fail@plt+0x9908>
   1ab34:	ldr	r0, [fp, #-16]
   1ab38:	cmp	r0, #0
   1ab3c:	bne	1ab44 <__assert_fail@plt+0x9864>
   1ab40:	b	1abe8 <__assert_fail@plt+0x9908>
   1ab44:	ldr	r0, [fp, #-12]
   1ab48:	cmp	r0, #0
   1ab4c:	bcs	1abb8 <__assert_fail@plt+0x98d8>
   1ab50:	b	1ab58 <__assert_fail@plt+0x9878>
   1ab54:	b	1ab5c <__assert_fail@plt+0x987c>
   1ab58:	b	1ab9c <__assert_fail@plt+0x98bc>
   1ab5c:	ldr	r0, [fp, #-12]
   1ab60:	cmn	r0, #1
   1ab64:	bne	1ab9c <__assert_fail@plt+0x98bc>
   1ab68:	b	1ab84 <__assert_fail@plt+0x98a4>
   1ab6c:	ldr	r0, [fp, #-16]
   1ab70:	add	r0, r0, #0
   1ab74:	movw	r1, #0
   1ab78:	cmp	r1, r0
   1ab7c:	bcc	1abd0 <__assert_fail@plt+0x98f0>
   1ab80:	b	1abe8 <__assert_fail@plt+0x9908>
   1ab84:	ldr	r0, [fp, #-16]
   1ab88:	sub	r0, r0, #1
   1ab8c:	mvn	r1, #0
   1ab90:	cmp	r1, r0
   1ab94:	bcc	1abd0 <__assert_fail@plt+0x98f0>
   1ab98:	b	1abe8 <__assert_fail@plt+0x9908>
   1ab9c:	ldr	r0, [fp, #-12]
   1aba0:	movw	r1, #0
   1aba4:	udiv	r0, r1, r0
   1aba8:	ldr	r1, [fp, #-16]
   1abac:	cmp	r0, r1
   1abb0:	bcc	1abd0 <__assert_fail@plt+0x98f0>
   1abb4:	b	1abe8 <__assert_fail@plt+0x9908>
   1abb8:	ldr	r0, [fp, #-16]
   1abbc:	movw	r1, #255	; 0xff
   1abc0:	udiv	r0, r1, r0
   1abc4:	ldr	r1, [fp, #-12]
   1abc8:	cmp	r0, r1
   1abcc:	bcs	1abe8 <__assert_fail@plt+0x9908>
   1abd0:	ldr	r0, [fp, #-12]
   1abd4:	ldr	r1, [fp, #-16]
   1abd8:	mul	r0, r0, r1
   1abdc:	and	r0, r0, #255	; 0xff
   1abe0:	str	r0, [fp, #-20]	; 0xffffffec
   1abe4:	b	1bb30 <__assert_fail@plt+0xa850>
   1abe8:	ldr	r0, [fp, #-12]
   1abec:	ldr	r1, [fp, #-16]
   1abf0:	mul	r0, r0, r1
   1abf4:	and	r0, r0, #255	; 0xff
   1abf8:	str	r0, [fp, #-20]	; 0xffffffec
   1abfc:	b	1bb48 <__assert_fail@plt+0xa868>
   1ac00:	b	1afb8 <__assert_fail@plt+0x9cd8>
   1ac04:	b	1add8 <__assert_fail@plt+0x9af8>
   1ac08:	ldr	r0, [fp, #-16]
   1ac0c:	cmp	r0, #0
   1ac10:	bcs	1ad14 <__assert_fail@plt+0x9a34>
   1ac14:	ldr	r0, [fp, #-12]
   1ac18:	cmp	r0, #0
   1ac1c:	bcs	1aca4 <__assert_fail@plt+0x99c4>
   1ac20:	b	1ac40 <__assert_fail@plt+0x9960>
   1ac24:	ldr	r0, [fp, #-12]
   1ac28:	ldr	r1, [fp, #-16]
   1ac2c:	movw	r2, #32767	; 0x7fff
   1ac30:	udiv	r1, r2, r1
   1ac34:	cmp	r0, r1
   1ac38:	bcc	1ada8 <__assert_fail@plt+0x9ac8>
   1ac3c:	b	1adc0 <__assert_fail@plt+0x9ae0>
   1ac40:	b	1ac54 <__assert_fail@plt+0x9974>
   1ac44:	ldr	r0, [fp, #-16]
   1ac48:	cmp	r0, #1
   1ac4c:	bcc	1ac64 <__assert_fail@plt+0x9984>
   1ac50:	b	1ac70 <__assert_fail@plt+0x9990>
   1ac54:	ldr	r0, [fp, #-16]
   1ac58:	movw	r1, #0
   1ac5c:	cmp	r1, r0
   1ac60:	bcs	1ac70 <__assert_fail@plt+0x9990>
   1ac64:	movw	r0, #0
   1ac68:	str	r0, [fp, #-32]	; 0xffffffe0
   1ac6c:	b	1ac88 <__assert_fail@plt+0x99a8>
   1ac70:	ldr	r0, [fp, #-16]
   1ac74:	movw	r1, #0
   1ac78:	sub	r0, r1, r0
   1ac7c:	movw	r1, #32767	; 0x7fff
   1ac80:	udiv	r0, r1, r0
   1ac84:	str	r0, [fp, #-32]	; 0xffffffe0
   1ac88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ac8c:	ldr	r1, [fp, #-12]
   1ac90:	mvn	r2, #0
   1ac94:	sub	r1, r2, r1
   1ac98:	cmp	r0, r1
   1ac9c:	bls	1ada8 <__assert_fail@plt+0x9ac8>
   1aca0:	b	1adc0 <__assert_fail@plt+0x9ae0>
   1aca4:	ldr	r0, [fp, #-16]
   1aca8:	cmn	r0, #1
   1acac:	bne	1acf8 <__assert_fail@plt+0x9a18>
   1acb0:	b	1acd0 <__assert_fail@plt+0x99f0>
   1acb4:	ldr	r0, [pc, #3760]	; 1bb6c <__assert_fail@plt+0xa88c>
   1acb8:	ldr	r1, [fp, #-12]
   1acbc:	add	r0, r1, r0
   1acc0:	movw	r1, #0
   1acc4:	cmp	r1, r0
   1acc8:	bcc	1ada8 <__assert_fail@plt+0x9ac8>
   1accc:	b	1adc0 <__assert_fail@plt+0x9ae0>
   1acd0:	ldr	r0, [fp, #-12]
   1acd4:	movw	r1, #0
   1acd8:	cmp	r1, r0
   1acdc:	bcs	1adc0 <__assert_fail@plt+0x9ae0>
   1ace0:	ldr	r0, [fp, #-12]
   1ace4:	sub	r0, r0, #1
   1ace8:	movw	r1, #32767	; 0x7fff
   1acec:	cmp	r1, r0
   1acf0:	bcc	1ada8 <__assert_fail@plt+0x9ac8>
   1acf4:	b	1adc0 <__assert_fail@plt+0x9ae0>
   1acf8:	ldr	r0, [pc, #3692]	; 1bb6c <__assert_fail@plt+0xa88c>
   1acfc:	ldr	r1, [fp, #-16]
   1ad00:	udiv	r0, r0, r1
   1ad04:	ldr	r1, [fp, #-12]
   1ad08:	cmp	r0, r1
   1ad0c:	bcc	1ada8 <__assert_fail@plt+0x9ac8>
   1ad10:	b	1adc0 <__assert_fail@plt+0x9ae0>
   1ad14:	ldr	r0, [fp, #-16]
   1ad18:	cmp	r0, #0
   1ad1c:	bne	1ad24 <__assert_fail@plt+0x9a44>
   1ad20:	b	1adc0 <__assert_fail@plt+0x9ae0>
   1ad24:	ldr	r0, [fp, #-12]
   1ad28:	cmp	r0, #0
   1ad2c:	bcs	1ad90 <__assert_fail@plt+0x9ab0>
   1ad30:	ldr	r0, [fp, #-12]
   1ad34:	cmn	r0, #1
   1ad38:	bne	1ad74 <__assert_fail@plt+0x9a94>
   1ad3c:	b	1ad5c <__assert_fail@plt+0x9a7c>
   1ad40:	ldr	r0, [pc, #3620]	; 1bb6c <__assert_fail@plt+0xa88c>
   1ad44:	ldr	r1, [fp, #-16]
   1ad48:	add	r0, r1, r0
   1ad4c:	movw	r1, #0
   1ad50:	cmp	r1, r0
   1ad54:	bcc	1ada8 <__assert_fail@plt+0x9ac8>
   1ad58:	b	1adc0 <__assert_fail@plt+0x9ae0>
   1ad5c:	ldr	r0, [fp, #-16]
   1ad60:	sub	r0, r0, #1
   1ad64:	movw	r1, #32767	; 0x7fff
   1ad68:	cmp	r1, r0
   1ad6c:	bcc	1ada8 <__assert_fail@plt+0x9ac8>
   1ad70:	b	1adc0 <__assert_fail@plt+0x9ae0>
   1ad74:	ldr	r0, [pc, #3568]	; 1bb6c <__assert_fail@plt+0xa88c>
   1ad78:	ldr	r1, [fp, #-12]
   1ad7c:	udiv	r0, r0, r1
   1ad80:	ldr	r1, [fp, #-16]
   1ad84:	cmp	r0, r1
   1ad88:	bcc	1ada8 <__assert_fail@plt+0x9ac8>
   1ad8c:	b	1adc0 <__assert_fail@plt+0x9ae0>
   1ad90:	ldr	r0, [fp, #-16]
   1ad94:	movw	r1, #32767	; 0x7fff
   1ad98:	udiv	r0, r1, r0
   1ad9c:	ldr	r1, [fp, #-12]
   1ada0:	cmp	r0, r1
   1ada4:	bcs	1adc0 <__assert_fail@plt+0x9ae0>
   1ada8:	ldr	r0, [fp, #-12]
   1adac:	ldr	r1, [fp, #-16]
   1adb0:	mul	r0, r0, r1
   1adb4:	sxth	r0, r0
   1adb8:	str	r0, [fp, #-20]	; 0xffffffec
   1adbc:	b	1bb30 <__assert_fail@plt+0xa850>
   1adc0:	ldr	r0, [fp, #-12]
   1adc4:	ldr	r1, [fp, #-16]
   1adc8:	mul	r0, r0, r1
   1adcc:	sxth	r0, r0
   1add0:	str	r0, [fp, #-20]	; 0xffffffec
   1add4:	b	1bb48 <__assert_fail@plt+0xa868>
   1add8:	ldr	r0, [fp, #-16]
   1addc:	cmp	r0, #0
   1ade0:	bcs	1aeec <__assert_fail@plt+0x9c0c>
   1ade4:	ldr	r0, [fp, #-12]
   1ade8:	cmp	r0, #0
   1adec:	bcs	1ae74 <__assert_fail@plt+0x9b94>
   1adf0:	b	1ae10 <__assert_fail@plt+0x9b30>
   1adf4:	ldr	r0, [fp, #-12]
   1adf8:	ldr	r1, [fp, #-16]
   1adfc:	movw	r2, #65535	; 0xffff
   1ae00:	udiv	r1, r2, r1
   1ae04:	cmp	r0, r1
   1ae08:	bcc	1af88 <__assert_fail@plt+0x9ca8>
   1ae0c:	b	1afa0 <__assert_fail@plt+0x9cc0>
   1ae10:	b	1ae24 <__assert_fail@plt+0x9b44>
   1ae14:	ldr	r0, [fp, #-16]
   1ae18:	cmp	r0, #1
   1ae1c:	bcc	1ae34 <__assert_fail@plt+0x9b54>
   1ae20:	b	1ae40 <__assert_fail@plt+0x9b60>
   1ae24:	ldr	r0, [fp, #-16]
   1ae28:	movw	r1, #0
   1ae2c:	cmp	r1, r0
   1ae30:	bcs	1ae40 <__assert_fail@plt+0x9b60>
   1ae34:	movw	r0, #0
   1ae38:	str	r0, [fp, #-36]	; 0xffffffdc
   1ae3c:	b	1ae58 <__assert_fail@plt+0x9b78>
   1ae40:	ldr	r0, [fp, #-16]
   1ae44:	movw	r1, #0
   1ae48:	sub	r0, r1, r0
   1ae4c:	movw	r1, #65535	; 0xffff
   1ae50:	udiv	r0, r1, r0
   1ae54:	str	r0, [fp, #-36]	; 0xffffffdc
   1ae58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ae5c:	ldr	r1, [fp, #-12]
   1ae60:	mvn	r2, #0
   1ae64:	sub	r1, r2, r1
   1ae68:	cmp	r0, r1
   1ae6c:	bls	1af88 <__assert_fail@plt+0x9ca8>
   1ae70:	b	1afa0 <__assert_fail@plt+0x9cc0>
   1ae74:	b	1ae7c <__assert_fail@plt+0x9b9c>
   1ae78:	b	1ae80 <__assert_fail@plt+0x9ba0>
   1ae7c:	b	1aed0 <__assert_fail@plt+0x9bf0>
   1ae80:	ldr	r0, [fp, #-16]
   1ae84:	cmn	r0, #1
   1ae88:	bne	1aed0 <__assert_fail@plt+0x9bf0>
   1ae8c:	b	1aea8 <__assert_fail@plt+0x9bc8>
   1ae90:	ldr	r0, [fp, #-12]
   1ae94:	add	r0, r0, #0
   1ae98:	movw	r1, #0
   1ae9c:	cmp	r1, r0
   1aea0:	bcc	1af88 <__assert_fail@plt+0x9ca8>
   1aea4:	b	1afa0 <__assert_fail@plt+0x9cc0>
   1aea8:	ldr	r0, [fp, #-12]
   1aeac:	movw	r1, #0
   1aeb0:	cmp	r1, r0
   1aeb4:	bcs	1afa0 <__assert_fail@plt+0x9cc0>
   1aeb8:	ldr	r0, [fp, #-12]
   1aebc:	sub	r0, r0, #1
   1aec0:	mvn	r1, #0
   1aec4:	cmp	r1, r0
   1aec8:	bcc	1af88 <__assert_fail@plt+0x9ca8>
   1aecc:	b	1afa0 <__assert_fail@plt+0x9cc0>
   1aed0:	ldr	r0, [fp, #-16]
   1aed4:	movw	r1, #0
   1aed8:	udiv	r0, r1, r0
   1aedc:	ldr	r1, [fp, #-12]
   1aee0:	cmp	r0, r1
   1aee4:	bcc	1af88 <__assert_fail@plt+0x9ca8>
   1aee8:	b	1afa0 <__assert_fail@plt+0x9cc0>
   1aeec:	ldr	r0, [fp, #-16]
   1aef0:	cmp	r0, #0
   1aef4:	bne	1aefc <__assert_fail@plt+0x9c1c>
   1aef8:	b	1afa0 <__assert_fail@plt+0x9cc0>
   1aefc:	ldr	r0, [fp, #-12]
   1af00:	cmp	r0, #0
   1af04:	bcs	1af70 <__assert_fail@plt+0x9c90>
   1af08:	b	1af10 <__assert_fail@plt+0x9c30>
   1af0c:	b	1af14 <__assert_fail@plt+0x9c34>
   1af10:	b	1af54 <__assert_fail@plt+0x9c74>
   1af14:	ldr	r0, [fp, #-12]
   1af18:	cmn	r0, #1
   1af1c:	bne	1af54 <__assert_fail@plt+0x9c74>
   1af20:	b	1af3c <__assert_fail@plt+0x9c5c>
   1af24:	ldr	r0, [fp, #-16]
   1af28:	add	r0, r0, #0
   1af2c:	movw	r1, #0
   1af30:	cmp	r1, r0
   1af34:	bcc	1af88 <__assert_fail@plt+0x9ca8>
   1af38:	b	1afa0 <__assert_fail@plt+0x9cc0>
   1af3c:	ldr	r0, [fp, #-16]
   1af40:	sub	r0, r0, #1
   1af44:	mvn	r1, #0
   1af48:	cmp	r1, r0
   1af4c:	bcc	1af88 <__assert_fail@plt+0x9ca8>
   1af50:	b	1afa0 <__assert_fail@plt+0x9cc0>
   1af54:	ldr	r0, [fp, #-12]
   1af58:	movw	r1, #0
   1af5c:	udiv	r0, r1, r0
   1af60:	ldr	r1, [fp, #-16]
   1af64:	cmp	r0, r1
   1af68:	bcc	1af88 <__assert_fail@plt+0x9ca8>
   1af6c:	b	1afa0 <__assert_fail@plt+0x9cc0>
   1af70:	ldr	r0, [fp, #-16]
   1af74:	movw	r1, #65535	; 0xffff
   1af78:	udiv	r0, r1, r0
   1af7c:	ldr	r1, [fp, #-12]
   1af80:	cmp	r0, r1
   1af84:	bcs	1afa0 <__assert_fail@plt+0x9cc0>
   1af88:	ldr	r0, [fp, #-12]
   1af8c:	ldr	r1, [fp, #-16]
   1af90:	mul	r0, r0, r1
   1af94:	uxth	r0, r0
   1af98:	str	r0, [fp, #-20]	; 0xffffffec
   1af9c:	b	1bb30 <__assert_fail@plt+0xa850>
   1afa0:	ldr	r0, [fp, #-12]
   1afa4:	ldr	r1, [fp, #-16]
   1afa8:	mul	r0, r0, r1
   1afac:	uxth	r0, r0
   1afb0:	str	r0, [fp, #-20]	; 0xffffffec
   1afb4:	b	1bb48 <__assert_fail@plt+0xa868>
   1afb8:	b	1afbc <__assert_fail@plt+0x9cdc>
   1afbc:	b	1b180 <__assert_fail@plt+0x9ea0>
   1afc0:	ldr	r0, [fp, #-16]
   1afc4:	cmp	r0, #0
   1afc8:	bcs	1b0c8 <__assert_fail@plt+0x9de8>
   1afcc:	ldr	r0, [fp, #-12]
   1afd0:	cmp	r0, #0
   1afd4:	bcs	1b05c <__assert_fail@plt+0x9d7c>
   1afd8:	b	1aff8 <__assert_fail@plt+0x9d18>
   1afdc:	ldr	r0, [pc, #2944]	; 1bb64 <__assert_fail@plt+0xa884>
   1afe0:	ldr	r1, [fp, #-12]
   1afe4:	ldr	r2, [fp, #-16]
   1afe8:	udiv	r0, r0, r2
   1afec:	cmp	r1, r0
   1aff0:	bcc	1b158 <__assert_fail@plt+0x9e78>
   1aff4:	b	1b16c <__assert_fail@plt+0x9e8c>
   1aff8:	b	1b00c <__assert_fail@plt+0x9d2c>
   1affc:	ldr	r0, [fp, #-16]
   1b000:	cmp	r0, #1
   1b004:	bcc	1b01c <__assert_fail@plt+0x9d3c>
   1b008:	b	1b028 <__assert_fail@plt+0x9d48>
   1b00c:	ldr	r0, [fp, #-16]
   1b010:	movw	r1, #0
   1b014:	cmp	r1, r0
   1b018:	bcs	1b028 <__assert_fail@plt+0x9d48>
   1b01c:	movw	r0, #0
   1b020:	str	r0, [fp, #-40]	; 0xffffffd8
   1b024:	b	1b040 <__assert_fail@plt+0x9d60>
   1b028:	ldr	r0, [pc, #2868]	; 1bb64 <__assert_fail@plt+0xa884>
   1b02c:	ldr	r1, [fp, #-16]
   1b030:	movw	r2, #0
   1b034:	sub	r1, r2, r1
   1b038:	udiv	r0, r0, r1
   1b03c:	str	r0, [fp, #-40]	; 0xffffffd8
   1b040:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b044:	ldr	r1, [fp, #-12]
   1b048:	mvn	r2, #0
   1b04c:	sub	r1, r2, r1
   1b050:	cmp	r0, r1
   1b054:	bls	1b158 <__assert_fail@plt+0x9e78>
   1b058:	b	1b16c <__assert_fail@plt+0x9e8c>
   1b05c:	ldr	r0, [fp, #-16]
   1b060:	cmn	r0, #1
   1b064:	bne	1b0ac <__assert_fail@plt+0x9dcc>
   1b068:	b	1b084 <__assert_fail@plt+0x9da4>
   1b06c:	ldr	r0, [fp, #-12]
   1b070:	add	r0, r0, #-2147483648	; 0x80000000
   1b074:	movw	r1, #0
   1b078:	cmp	r1, r0
   1b07c:	bcc	1b158 <__assert_fail@plt+0x9e78>
   1b080:	b	1b16c <__assert_fail@plt+0x9e8c>
   1b084:	ldr	r0, [fp, #-12]
   1b088:	movw	r1, #0
   1b08c:	cmp	r1, r0
   1b090:	bcs	1b16c <__assert_fail@plt+0x9e8c>
   1b094:	ldr	r0, [pc, #2760]	; 1bb64 <__assert_fail@plt+0xa884>
   1b098:	ldr	r1, [fp, #-12]
   1b09c:	sub	r1, r1, #1
   1b0a0:	cmp	r0, r1
   1b0a4:	bcc	1b158 <__assert_fail@plt+0x9e78>
   1b0a8:	b	1b16c <__assert_fail@plt+0x9e8c>
   1b0ac:	ldr	r0, [pc, #2740]	; 1bb68 <__assert_fail@plt+0xa888>
   1b0b0:	ldr	r1, [fp, #-16]
   1b0b4:	udiv	r0, r0, r1
   1b0b8:	ldr	r1, [fp, #-12]
   1b0bc:	cmp	r0, r1
   1b0c0:	bcc	1b158 <__assert_fail@plt+0x9e78>
   1b0c4:	b	1b16c <__assert_fail@plt+0x9e8c>
   1b0c8:	ldr	r0, [fp, #-16]
   1b0cc:	cmp	r0, #0
   1b0d0:	bne	1b0d8 <__assert_fail@plt+0x9df8>
   1b0d4:	b	1b16c <__assert_fail@plt+0x9e8c>
   1b0d8:	ldr	r0, [fp, #-12]
   1b0dc:	cmp	r0, #0
   1b0e0:	bcs	1b140 <__assert_fail@plt+0x9e60>
   1b0e4:	ldr	r0, [fp, #-12]
   1b0e8:	cmn	r0, #1
   1b0ec:	bne	1b124 <__assert_fail@plt+0x9e44>
   1b0f0:	b	1b10c <__assert_fail@plt+0x9e2c>
   1b0f4:	ldr	r0, [fp, #-16]
   1b0f8:	add	r0, r0, #-2147483648	; 0x80000000
   1b0fc:	movw	r1, #0
   1b100:	cmp	r1, r0
   1b104:	bcc	1b158 <__assert_fail@plt+0x9e78>
   1b108:	b	1b16c <__assert_fail@plt+0x9e8c>
   1b10c:	ldr	r0, [pc, #2640]	; 1bb64 <__assert_fail@plt+0xa884>
   1b110:	ldr	r1, [fp, #-16]
   1b114:	sub	r1, r1, #1
   1b118:	cmp	r0, r1
   1b11c:	bcc	1b158 <__assert_fail@plt+0x9e78>
   1b120:	b	1b16c <__assert_fail@plt+0x9e8c>
   1b124:	ldr	r0, [pc, #2620]	; 1bb68 <__assert_fail@plt+0xa888>
   1b128:	ldr	r1, [fp, #-12]
   1b12c:	udiv	r0, r0, r1
   1b130:	ldr	r1, [fp, #-16]
   1b134:	cmp	r0, r1
   1b138:	bcc	1b158 <__assert_fail@plt+0x9e78>
   1b13c:	b	1b16c <__assert_fail@plt+0x9e8c>
   1b140:	ldr	r0, [pc, #2588]	; 1bb64 <__assert_fail@plt+0xa884>
   1b144:	ldr	r1, [fp, #-16]
   1b148:	udiv	r0, r0, r1
   1b14c:	ldr	r1, [fp, #-12]
   1b150:	cmp	r0, r1
   1b154:	bcs	1b16c <__assert_fail@plt+0x9e8c>
   1b158:	ldr	r0, [fp, #-12]
   1b15c:	ldr	r1, [fp, #-16]
   1b160:	mul	r0, r0, r1
   1b164:	str	r0, [fp, #-20]	; 0xffffffec
   1b168:	b	1bb30 <__assert_fail@plt+0xa850>
   1b16c:	ldr	r0, [fp, #-12]
   1b170:	ldr	r1, [fp, #-16]
   1b174:	mul	r0, r0, r1
   1b178:	str	r0, [fp, #-20]	; 0xffffffec
   1b17c:	b	1bb48 <__assert_fail@plt+0xa868>
   1b180:	ldr	r0, [fp, #-16]
   1b184:	cmp	r0, #0
   1b188:	bcs	1b294 <__assert_fail@plt+0x9fb4>
   1b18c:	ldr	r0, [fp, #-12]
   1b190:	cmp	r0, #0
   1b194:	bcs	1b21c <__assert_fail@plt+0x9f3c>
   1b198:	b	1b1b8 <__assert_fail@plt+0x9ed8>
   1b19c:	ldr	r0, [fp, #-12]
   1b1a0:	ldr	r1, [fp, #-16]
   1b1a4:	mvn	r2, #0
   1b1a8:	udiv	r1, r2, r1
   1b1ac:	cmp	r0, r1
   1b1b0:	bcc	1b330 <__assert_fail@plt+0xa050>
   1b1b4:	b	1b344 <__assert_fail@plt+0xa064>
   1b1b8:	b	1b1cc <__assert_fail@plt+0x9eec>
   1b1bc:	ldr	r0, [fp, #-16]
   1b1c0:	cmp	r0, #1
   1b1c4:	bcc	1b1dc <__assert_fail@plt+0x9efc>
   1b1c8:	b	1b1e8 <__assert_fail@plt+0x9f08>
   1b1cc:	ldr	r0, [fp, #-16]
   1b1d0:	movw	r1, #0
   1b1d4:	cmp	r1, r0
   1b1d8:	bcs	1b1e8 <__assert_fail@plt+0x9f08>
   1b1dc:	movw	r0, #1
   1b1e0:	str	r0, [fp, #-44]	; 0xffffffd4
   1b1e4:	b	1b200 <__assert_fail@plt+0x9f20>
   1b1e8:	ldr	r0, [fp, #-16]
   1b1ec:	movw	r1, #0
   1b1f0:	sub	r0, r1, r0
   1b1f4:	mvn	r1, #0
   1b1f8:	udiv	r0, r1, r0
   1b1fc:	str	r0, [fp, #-44]	; 0xffffffd4
   1b200:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b204:	ldr	r1, [fp, #-12]
   1b208:	mvn	r2, #0
   1b20c:	sub	r1, r2, r1
   1b210:	cmp	r0, r1
   1b214:	bls	1b330 <__assert_fail@plt+0xa050>
   1b218:	b	1b344 <__assert_fail@plt+0xa064>
   1b21c:	b	1b224 <__assert_fail@plt+0x9f44>
   1b220:	b	1b228 <__assert_fail@plt+0x9f48>
   1b224:	b	1b278 <__assert_fail@plt+0x9f98>
   1b228:	ldr	r0, [fp, #-16]
   1b22c:	cmn	r0, #1
   1b230:	bne	1b278 <__assert_fail@plt+0x9f98>
   1b234:	b	1b250 <__assert_fail@plt+0x9f70>
   1b238:	ldr	r0, [fp, #-12]
   1b23c:	add	r0, r0, #0
   1b240:	movw	r1, #0
   1b244:	cmp	r1, r0
   1b248:	bcc	1b330 <__assert_fail@plt+0xa050>
   1b24c:	b	1b344 <__assert_fail@plt+0xa064>
   1b250:	ldr	r0, [fp, #-12]
   1b254:	movw	r1, #0
   1b258:	cmp	r1, r0
   1b25c:	bcs	1b344 <__assert_fail@plt+0xa064>
   1b260:	ldr	r0, [fp, #-12]
   1b264:	sub	r0, r0, #1
   1b268:	mvn	r1, #0
   1b26c:	cmp	r1, r0
   1b270:	bcc	1b330 <__assert_fail@plt+0xa050>
   1b274:	b	1b344 <__assert_fail@plt+0xa064>
   1b278:	ldr	r0, [fp, #-16]
   1b27c:	movw	r1, #0
   1b280:	udiv	r0, r1, r0
   1b284:	ldr	r1, [fp, #-12]
   1b288:	cmp	r0, r1
   1b28c:	bcc	1b330 <__assert_fail@plt+0xa050>
   1b290:	b	1b344 <__assert_fail@plt+0xa064>
   1b294:	ldr	r0, [fp, #-16]
   1b298:	cmp	r0, #0
   1b29c:	bne	1b2a4 <__assert_fail@plt+0x9fc4>
   1b2a0:	b	1b344 <__assert_fail@plt+0xa064>
   1b2a4:	ldr	r0, [fp, #-12]
   1b2a8:	cmp	r0, #0
   1b2ac:	bcs	1b318 <__assert_fail@plt+0xa038>
   1b2b0:	b	1b2b8 <__assert_fail@plt+0x9fd8>
   1b2b4:	b	1b2bc <__assert_fail@plt+0x9fdc>
   1b2b8:	b	1b2fc <__assert_fail@plt+0xa01c>
   1b2bc:	ldr	r0, [fp, #-12]
   1b2c0:	cmn	r0, #1
   1b2c4:	bne	1b2fc <__assert_fail@plt+0xa01c>
   1b2c8:	b	1b2e4 <__assert_fail@plt+0xa004>
   1b2cc:	ldr	r0, [fp, #-16]
   1b2d0:	add	r0, r0, #0
   1b2d4:	movw	r1, #0
   1b2d8:	cmp	r1, r0
   1b2dc:	bcc	1b330 <__assert_fail@plt+0xa050>
   1b2e0:	b	1b344 <__assert_fail@plt+0xa064>
   1b2e4:	ldr	r0, [fp, #-16]
   1b2e8:	sub	r0, r0, #1
   1b2ec:	mvn	r1, #0
   1b2f0:	cmp	r1, r0
   1b2f4:	bcc	1b330 <__assert_fail@plt+0xa050>
   1b2f8:	b	1b344 <__assert_fail@plt+0xa064>
   1b2fc:	ldr	r0, [fp, #-12]
   1b300:	movw	r1, #0
   1b304:	udiv	r0, r1, r0
   1b308:	ldr	r1, [fp, #-16]
   1b30c:	cmp	r0, r1
   1b310:	bcc	1b330 <__assert_fail@plt+0xa050>
   1b314:	b	1b344 <__assert_fail@plt+0xa064>
   1b318:	ldr	r0, [fp, #-16]
   1b31c:	mvn	r1, #0
   1b320:	udiv	r0, r1, r0
   1b324:	ldr	r1, [fp, #-12]
   1b328:	cmp	r0, r1
   1b32c:	bcs	1b344 <__assert_fail@plt+0xa064>
   1b330:	ldr	r0, [fp, #-12]
   1b334:	ldr	r1, [fp, #-16]
   1b338:	mul	r0, r0, r1
   1b33c:	str	r0, [fp, #-20]	; 0xffffffec
   1b340:	b	1bb30 <__assert_fail@plt+0xa850>
   1b344:	ldr	r0, [fp, #-12]
   1b348:	ldr	r1, [fp, #-16]
   1b34c:	mul	r0, r0, r1
   1b350:	str	r0, [fp, #-20]	; 0xffffffec
   1b354:	b	1bb48 <__assert_fail@plt+0xa868>
   1b358:	b	1b35c <__assert_fail@plt+0xa07c>
   1b35c:	b	1b520 <__assert_fail@plt+0xa240>
   1b360:	ldr	r0, [fp, #-16]
   1b364:	cmp	r0, #0
   1b368:	bcs	1b468 <__assert_fail@plt+0xa188>
   1b36c:	ldr	r0, [fp, #-12]
   1b370:	cmp	r0, #0
   1b374:	bcs	1b3fc <__assert_fail@plt+0xa11c>
   1b378:	b	1b398 <__assert_fail@plt+0xa0b8>
   1b37c:	ldr	r0, [pc, #2016]	; 1bb64 <__assert_fail@plt+0xa884>
   1b380:	ldr	r1, [fp, #-12]
   1b384:	ldr	r2, [fp, #-16]
   1b388:	udiv	r0, r0, r2
   1b38c:	cmp	r1, r0
   1b390:	bcc	1b4f8 <__assert_fail@plt+0xa218>
   1b394:	b	1b50c <__assert_fail@plt+0xa22c>
   1b398:	b	1b3ac <__assert_fail@plt+0xa0cc>
   1b39c:	ldr	r0, [fp, #-16]
   1b3a0:	cmp	r0, #1
   1b3a4:	bcc	1b3bc <__assert_fail@plt+0xa0dc>
   1b3a8:	b	1b3c8 <__assert_fail@plt+0xa0e8>
   1b3ac:	ldr	r0, [fp, #-16]
   1b3b0:	movw	r1, #0
   1b3b4:	cmp	r1, r0
   1b3b8:	bcs	1b3c8 <__assert_fail@plt+0xa0e8>
   1b3bc:	movw	r0, #0
   1b3c0:	str	r0, [sp, #48]	; 0x30
   1b3c4:	b	1b3e0 <__assert_fail@plt+0xa100>
   1b3c8:	ldr	r0, [pc, #1940]	; 1bb64 <__assert_fail@plt+0xa884>
   1b3cc:	ldr	r1, [fp, #-16]
   1b3d0:	movw	r2, #0
   1b3d4:	sub	r1, r2, r1
   1b3d8:	udiv	r0, r0, r1
   1b3dc:	str	r0, [sp, #48]	; 0x30
   1b3e0:	ldr	r0, [sp, #48]	; 0x30
   1b3e4:	ldr	r1, [fp, #-12]
   1b3e8:	mvn	r2, #0
   1b3ec:	sub	r1, r2, r1
   1b3f0:	cmp	r0, r1
   1b3f4:	bls	1b4f8 <__assert_fail@plt+0xa218>
   1b3f8:	b	1b50c <__assert_fail@plt+0xa22c>
   1b3fc:	ldr	r0, [fp, #-16]
   1b400:	cmn	r0, #1
   1b404:	bne	1b44c <__assert_fail@plt+0xa16c>
   1b408:	b	1b424 <__assert_fail@plt+0xa144>
   1b40c:	ldr	r0, [fp, #-12]
   1b410:	add	r0, r0, #-2147483648	; 0x80000000
   1b414:	movw	r1, #0
   1b418:	cmp	r1, r0
   1b41c:	bcc	1b4f8 <__assert_fail@plt+0xa218>
   1b420:	b	1b50c <__assert_fail@plt+0xa22c>
   1b424:	ldr	r0, [fp, #-12]
   1b428:	movw	r1, #0
   1b42c:	cmp	r1, r0
   1b430:	bcs	1b50c <__assert_fail@plt+0xa22c>
   1b434:	ldr	r0, [pc, #1832]	; 1bb64 <__assert_fail@plt+0xa884>
   1b438:	ldr	r1, [fp, #-12]
   1b43c:	sub	r1, r1, #1
   1b440:	cmp	r0, r1
   1b444:	bcc	1b4f8 <__assert_fail@plt+0xa218>
   1b448:	b	1b50c <__assert_fail@plt+0xa22c>
   1b44c:	ldr	r0, [pc, #1812]	; 1bb68 <__assert_fail@plt+0xa888>
   1b450:	ldr	r1, [fp, #-16]
   1b454:	udiv	r0, r0, r1
   1b458:	ldr	r1, [fp, #-12]
   1b45c:	cmp	r0, r1
   1b460:	bcc	1b4f8 <__assert_fail@plt+0xa218>
   1b464:	b	1b50c <__assert_fail@plt+0xa22c>
   1b468:	ldr	r0, [fp, #-16]
   1b46c:	cmp	r0, #0
   1b470:	bne	1b478 <__assert_fail@plt+0xa198>
   1b474:	b	1b50c <__assert_fail@plt+0xa22c>
   1b478:	ldr	r0, [fp, #-12]
   1b47c:	cmp	r0, #0
   1b480:	bcs	1b4e0 <__assert_fail@plt+0xa200>
   1b484:	ldr	r0, [fp, #-12]
   1b488:	cmn	r0, #1
   1b48c:	bne	1b4c4 <__assert_fail@plt+0xa1e4>
   1b490:	b	1b4ac <__assert_fail@plt+0xa1cc>
   1b494:	ldr	r0, [fp, #-16]
   1b498:	add	r0, r0, #-2147483648	; 0x80000000
   1b49c:	movw	r1, #0
   1b4a0:	cmp	r1, r0
   1b4a4:	bcc	1b4f8 <__assert_fail@plt+0xa218>
   1b4a8:	b	1b50c <__assert_fail@plt+0xa22c>
   1b4ac:	ldr	r0, [pc, #1712]	; 1bb64 <__assert_fail@plt+0xa884>
   1b4b0:	ldr	r1, [fp, #-16]
   1b4b4:	sub	r1, r1, #1
   1b4b8:	cmp	r0, r1
   1b4bc:	bcc	1b4f8 <__assert_fail@plt+0xa218>
   1b4c0:	b	1b50c <__assert_fail@plt+0xa22c>
   1b4c4:	ldr	r0, [pc, #1692]	; 1bb68 <__assert_fail@plt+0xa888>
   1b4c8:	ldr	r1, [fp, #-12]
   1b4cc:	udiv	r0, r0, r1
   1b4d0:	ldr	r1, [fp, #-16]
   1b4d4:	cmp	r0, r1
   1b4d8:	bcc	1b4f8 <__assert_fail@plt+0xa218>
   1b4dc:	b	1b50c <__assert_fail@plt+0xa22c>
   1b4e0:	ldr	r0, [pc, #1660]	; 1bb64 <__assert_fail@plt+0xa884>
   1b4e4:	ldr	r1, [fp, #-16]
   1b4e8:	udiv	r0, r0, r1
   1b4ec:	ldr	r1, [fp, #-12]
   1b4f0:	cmp	r0, r1
   1b4f4:	bcs	1b50c <__assert_fail@plt+0xa22c>
   1b4f8:	ldr	r0, [fp, #-12]
   1b4fc:	ldr	r1, [fp, #-16]
   1b500:	mul	r0, r0, r1
   1b504:	str	r0, [fp, #-20]	; 0xffffffec
   1b508:	b	1bb30 <__assert_fail@plt+0xa850>
   1b50c:	ldr	r0, [fp, #-12]
   1b510:	ldr	r1, [fp, #-16]
   1b514:	mul	r0, r0, r1
   1b518:	str	r0, [fp, #-20]	; 0xffffffec
   1b51c:	b	1bb48 <__assert_fail@plt+0xa868>
   1b520:	ldr	r0, [fp, #-16]
   1b524:	cmp	r0, #0
   1b528:	bcs	1b634 <__assert_fail@plt+0xa354>
   1b52c:	ldr	r0, [fp, #-12]
   1b530:	cmp	r0, #0
   1b534:	bcs	1b5bc <__assert_fail@plt+0xa2dc>
   1b538:	b	1b558 <__assert_fail@plt+0xa278>
   1b53c:	ldr	r0, [fp, #-12]
   1b540:	ldr	r1, [fp, #-16]
   1b544:	mvn	r2, #0
   1b548:	udiv	r1, r2, r1
   1b54c:	cmp	r0, r1
   1b550:	bcc	1b6d0 <__assert_fail@plt+0xa3f0>
   1b554:	b	1b6e4 <__assert_fail@plt+0xa404>
   1b558:	b	1b56c <__assert_fail@plt+0xa28c>
   1b55c:	ldr	r0, [fp, #-16]
   1b560:	cmp	r0, #1
   1b564:	bcc	1b57c <__assert_fail@plt+0xa29c>
   1b568:	b	1b588 <__assert_fail@plt+0xa2a8>
   1b56c:	ldr	r0, [fp, #-16]
   1b570:	movw	r1, #0
   1b574:	cmp	r1, r0
   1b578:	bcs	1b588 <__assert_fail@plt+0xa2a8>
   1b57c:	movw	r0, #1
   1b580:	str	r0, [sp, #44]	; 0x2c
   1b584:	b	1b5a0 <__assert_fail@plt+0xa2c0>
   1b588:	ldr	r0, [fp, #-16]
   1b58c:	movw	r1, #0
   1b590:	sub	r0, r1, r0
   1b594:	mvn	r1, #0
   1b598:	udiv	r0, r1, r0
   1b59c:	str	r0, [sp, #44]	; 0x2c
   1b5a0:	ldr	r0, [sp, #44]	; 0x2c
   1b5a4:	ldr	r1, [fp, #-12]
   1b5a8:	mvn	r2, #0
   1b5ac:	sub	r1, r2, r1
   1b5b0:	cmp	r0, r1
   1b5b4:	bls	1b6d0 <__assert_fail@plt+0xa3f0>
   1b5b8:	b	1b6e4 <__assert_fail@plt+0xa404>
   1b5bc:	b	1b5c4 <__assert_fail@plt+0xa2e4>
   1b5c0:	b	1b5c8 <__assert_fail@plt+0xa2e8>
   1b5c4:	b	1b618 <__assert_fail@plt+0xa338>
   1b5c8:	ldr	r0, [fp, #-16]
   1b5cc:	cmn	r0, #1
   1b5d0:	bne	1b618 <__assert_fail@plt+0xa338>
   1b5d4:	b	1b5f0 <__assert_fail@plt+0xa310>
   1b5d8:	ldr	r0, [fp, #-12]
   1b5dc:	add	r0, r0, #0
   1b5e0:	movw	r1, #0
   1b5e4:	cmp	r1, r0
   1b5e8:	bcc	1b6d0 <__assert_fail@plt+0xa3f0>
   1b5ec:	b	1b6e4 <__assert_fail@plt+0xa404>
   1b5f0:	ldr	r0, [fp, #-12]
   1b5f4:	movw	r1, #0
   1b5f8:	cmp	r1, r0
   1b5fc:	bcs	1b6e4 <__assert_fail@plt+0xa404>
   1b600:	ldr	r0, [fp, #-12]
   1b604:	sub	r0, r0, #1
   1b608:	mvn	r1, #0
   1b60c:	cmp	r1, r0
   1b610:	bcc	1b6d0 <__assert_fail@plt+0xa3f0>
   1b614:	b	1b6e4 <__assert_fail@plt+0xa404>
   1b618:	ldr	r0, [fp, #-16]
   1b61c:	movw	r1, #0
   1b620:	udiv	r0, r1, r0
   1b624:	ldr	r1, [fp, #-12]
   1b628:	cmp	r0, r1
   1b62c:	bcc	1b6d0 <__assert_fail@plt+0xa3f0>
   1b630:	b	1b6e4 <__assert_fail@plt+0xa404>
   1b634:	ldr	r0, [fp, #-16]
   1b638:	cmp	r0, #0
   1b63c:	bne	1b644 <__assert_fail@plt+0xa364>
   1b640:	b	1b6e4 <__assert_fail@plt+0xa404>
   1b644:	ldr	r0, [fp, #-12]
   1b648:	cmp	r0, #0
   1b64c:	bcs	1b6b8 <__assert_fail@plt+0xa3d8>
   1b650:	b	1b658 <__assert_fail@plt+0xa378>
   1b654:	b	1b65c <__assert_fail@plt+0xa37c>
   1b658:	b	1b69c <__assert_fail@plt+0xa3bc>
   1b65c:	ldr	r0, [fp, #-12]
   1b660:	cmn	r0, #1
   1b664:	bne	1b69c <__assert_fail@plt+0xa3bc>
   1b668:	b	1b684 <__assert_fail@plt+0xa3a4>
   1b66c:	ldr	r0, [fp, #-16]
   1b670:	add	r0, r0, #0
   1b674:	movw	r1, #0
   1b678:	cmp	r1, r0
   1b67c:	bcc	1b6d0 <__assert_fail@plt+0xa3f0>
   1b680:	b	1b6e4 <__assert_fail@plt+0xa404>
   1b684:	ldr	r0, [fp, #-16]
   1b688:	sub	r0, r0, #1
   1b68c:	mvn	r1, #0
   1b690:	cmp	r1, r0
   1b694:	bcc	1b6d0 <__assert_fail@plt+0xa3f0>
   1b698:	b	1b6e4 <__assert_fail@plt+0xa404>
   1b69c:	ldr	r0, [fp, #-12]
   1b6a0:	movw	r1, #0
   1b6a4:	udiv	r0, r1, r0
   1b6a8:	ldr	r1, [fp, #-16]
   1b6ac:	cmp	r0, r1
   1b6b0:	bcc	1b6d0 <__assert_fail@plt+0xa3f0>
   1b6b4:	b	1b6e4 <__assert_fail@plt+0xa404>
   1b6b8:	ldr	r0, [fp, #-16]
   1b6bc:	mvn	r1, #0
   1b6c0:	udiv	r0, r1, r0
   1b6c4:	ldr	r1, [fp, #-12]
   1b6c8:	cmp	r0, r1
   1b6cc:	bcs	1b6e4 <__assert_fail@plt+0xa404>
   1b6d0:	ldr	r0, [fp, #-12]
   1b6d4:	ldr	r1, [fp, #-16]
   1b6d8:	mul	r0, r0, r1
   1b6dc:	str	r0, [fp, #-20]	; 0xffffffec
   1b6e0:	b	1bb30 <__assert_fail@plt+0xa850>
   1b6e4:	ldr	r0, [fp, #-12]
   1b6e8:	ldr	r1, [fp, #-16]
   1b6ec:	mul	r0, r0, r1
   1b6f0:	str	r0, [fp, #-20]	; 0xffffffec
   1b6f4:	b	1bb48 <__assert_fail@plt+0xa868>
   1b6f8:	b	1b914 <__assert_fail@plt+0xa634>
   1b6fc:	ldr	r0, [fp, #-16]
   1b700:	cmp	r0, #0
   1b704:	bcs	1b844 <__assert_fail@plt+0xa564>
   1b708:	ldr	r0, [fp, #-12]
   1b70c:	cmp	r0, #0
   1b710:	bcs	1b7d0 <__assert_fail@plt+0xa4f0>
   1b714:	b	1b718 <__assert_fail@plt+0xa438>
   1b718:	ldr	r0, [fp, #-12]
   1b71c:	ldr	r2, [fp, #-16]
   1b720:	mvn	r1, #0
   1b724:	mvn	r3, #-2147483648	; 0x80000000
   1b728:	mov	ip, #0
   1b72c:	str	r0, [sp, #40]	; 0x28
   1b730:	mov	r0, r1
   1b734:	mov	r1, r3
   1b738:	mov	r3, ip
   1b73c:	bl	1c518 <__assert_fail@plt+0xb238>
   1b740:	ldr	r2, [sp, #40]	; 0x28
   1b744:	subs	r0, r2, r0
   1b748:	rscs	r1, r1, #0
   1b74c:	blt	1b8ec <__assert_fail@plt+0xa60c>
   1b750:	b	1b900 <__assert_fail@plt+0xa620>
   1b754:	b	1b768 <__assert_fail@plt+0xa488>
   1b758:	ldr	r0, [fp, #-16]
   1b75c:	cmp	r0, #1
   1b760:	bcc	1b778 <__assert_fail@plt+0xa498>
   1b764:	b	1b78c <__assert_fail@plt+0xa4ac>
   1b768:	ldr	r0, [fp, #-16]
   1b76c:	movw	r1, #0
   1b770:	cmp	r1, r0
   1b774:	bcs	1b78c <__assert_fail@plt+0xa4ac>
   1b778:	mov	r0, #0
   1b77c:	mvn	r1, #0
   1b780:	str	r1, [sp, #36]	; 0x24
   1b784:	str	r0, [sp, #32]
   1b788:	b	1b7b0 <__assert_fail@plt+0xa4d0>
   1b78c:	ldr	r0, [fp, #-16]
   1b790:	rsb	r2, r0, #0
   1b794:	mvn	r0, #0
   1b798:	mvn	r1, #-2147483648	; 0x80000000
   1b79c:	mov	r3, #0
   1b7a0:	bl	1c518 <__assert_fail@plt+0xb238>
   1b7a4:	str	r0, [sp, #36]	; 0x24
   1b7a8:	str	r1, [sp, #32]
   1b7ac:	b	1b7b0 <__assert_fail@plt+0xa4d0>
   1b7b0:	ldr	r0, [sp, #32]
   1b7b4:	ldr	r1, [sp, #36]	; 0x24
   1b7b8:	ldr	r2, [fp, #-12]
   1b7bc:	mvn	r2, r2
   1b7c0:	subs	r1, r2, r1
   1b7c4:	rscs	r0, r0, #0
   1b7c8:	bge	1b8ec <__assert_fail@plt+0xa60c>
   1b7cc:	b	1b900 <__assert_fail@plt+0xa620>
   1b7d0:	ldr	r0, [fp, #-16]
   1b7d4:	cmn	r0, #1
   1b7d8:	bne	1b818 <__assert_fail@plt+0xa538>
   1b7dc:	b	1b7f8 <__assert_fail@plt+0xa518>
   1b7e0:	ldr	r0, [fp, #-12]
   1b7e4:	rsbs	r0, r0, #0
   1b7e8:	mov	r1, #0
   1b7ec:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1b7f0:	blt	1b8ec <__assert_fail@plt+0xa60c>
   1b7f4:	b	1b900 <__assert_fail@plt+0xa620>
   1b7f8:	ldr	r0, [fp, #-12]
   1b7fc:	movw	r1, #0
   1b800:	cmp	r1, r0
   1b804:	bcs	1b900 <__assert_fail@plt+0xa620>
   1b808:	mov	r0, #0
   1b80c:	cmp	r0, #0
   1b810:	bne	1b8ec <__assert_fail@plt+0xa60c>
   1b814:	b	1b900 <__assert_fail@plt+0xa620>
   1b818:	ldr	r2, [fp, #-16]
   1b81c:	mov	r1, #-2147483648	; 0x80000000
   1b820:	mov	r0, #0
   1b824:	str	r0, [sp, #28]
   1b828:	ldr	r3, [sp, #28]
   1b82c:	bl	1c444 <__assert_fail@plt+0xb164>
   1b830:	ldr	r2, [fp, #-12]
   1b834:	subs	r0, r0, r2
   1b838:	sbcs	r1, r1, #0
   1b83c:	blt	1b8ec <__assert_fail@plt+0xa60c>
   1b840:	b	1b900 <__assert_fail@plt+0xa620>
   1b844:	ldr	r0, [fp, #-16]
   1b848:	cmp	r0, #0
   1b84c:	bne	1b854 <__assert_fail@plt+0xa574>
   1b850:	b	1b900 <__assert_fail@plt+0xa620>
   1b854:	ldr	r0, [fp, #-12]
   1b858:	cmp	r0, #0
   1b85c:	bcs	1b8c4 <__assert_fail@plt+0xa5e4>
   1b860:	ldr	r0, [fp, #-12]
   1b864:	cmn	r0, #1
   1b868:	bne	1b898 <__assert_fail@plt+0xa5b8>
   1b86c:	b	1b888 <__assert_fail@plt+0xa5a8>
   1b870:	ldr	r0, [fp, #-16]
   1b874:	rsbs	r0, r0, #0
   1b878:	mov	r1, #0
   1b87c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1b880:	blt	1b8ec <__assert_fail@plt+0xa60c>
   1b884:	b	1b900 <__assert_fail@plt+0xa620>
   1b888:	mov	r0, #0
   1b88c:	cmp	r0, #0
   1b890:	bne	1b8ec <__assert_fail@plt+0xa60c>
   1b894:	b	1b900 <__assert_fail@plt+0xa620>
   1b898:	ldr	r2, [fp, #-12]
   1b89c:	mov	r1, #-2147483648	; 0x80000000
   1b8a0:	mov	r0, #0
   1b8a4:	str	r0, [sp, #24]
   1b8a8:	ldr	r3, [sp, #24]
   1b8ac:	bl	1c444 <__assert_fail@plt+0xb164>
   1b8b0:	ldr	r2, [fp, #-16]
   1b8b4:	subs	r0, r0, r2
   1b8b8:	sbcs	r1, r1, #0
   1b8bc:	blt	1b8ec <__assert_fail@plt+0xa60c>
   1b8c0:	b	1b900 <__assert_fail@plt+0xa620>
   1b8c4:	ldr	r2, [fp, #-16]
   1b8c8:	mvn	r0, #0
   1b8cc:	mvn	r1, #-2147483648	; 0x80000000
   1b8d0:	mov	r3, #0
   1b8d4:	bl	1c518 <__assert_fail@plt+0xb238>
   1b8d8:	ldr	r2, [fp, #-12]
   1b8dc:	subs	r0, r0, r2
   1b8e0:	sbcs	r1, r1, #0
   1b8e4:	bge	1b900 <__assert_fail@plt+0xa620>
   1b8e8:	b	1b8ec <__assert_fail@plt+0xa60c>
   1b8ec:	ldr	r0, [fp, #-12]
   1b8f0:	ldr	r1, [fp, #-16]
   1b8f4:	mul	r0, r0, r1
   1b8f8:	str	r0, [fp, #-20]	; 0xffffffec
   1b8fc:	b	1bb30 <__assert_fail@plt+0xa850>
   1b900:	ldr	r0, [fp, #-12]
   1b904:	ldr	r1, [fp, #-16]
   1b908:	mul	r0, r0, r1
   1b90c:	str	r0, [fp, #-20]	; 0xffffffec
   1b910:	b	1bb48 <__assert_fail@plt+0xa868>
   1b914:	ldr	r0, [fp, #-16]
   1b918:	cmp	r0, #0
   1b91c:	bcs	1ba58 <__assert_fail@plt+0xa778>
   1b920:	ldr	r0, [fp, #-12]
   1b924:	cmp	r0, #0
   1b928:	bcs	1b9e0 <__assert_fail@plt+0xa700>
   1b92c:	b	1b960 <__assert_fail@plt+0xa680>
   1b930:	ldr	r0, [fp, #-12]
   1b934:	ldr	r2, [fp, #-16]
   1b938:	mvn	r1, #0
   1b93c:	mov	r3, #0
   1b940:	str	r0, [sp, #20]
   1b944:	mov	r0, r1
   1b948:	bl	1c518 <__assert_fail@plt+0xb238>
   1b94c:	ldr	r2, [sp, #20]
   1b950:	subs	r0, r2, r0
   1b954:	rscs	r1, r1, #0
   1b958:	bcc	1bb08 <__assert_fail@plt+0xa828>
   1b95c:	b	1bb1c <__assert_fail@plt+0xa83c>
   1b960:	b	1b974 <__assert_fail@plt+0xa694>
   1b964:	ldr	r0, [fp, #-16]
   1b968:	cmp	r0, #1
   1b96c:	bcc	1b984 <__assert_fail@plt+0xa6a4>
   1b970:	b	1b998 <__assert_fail@plt+0xa6b8>
   1b974:	ldr	r0, [fp, #-16]
   1b978:	movw	r1, #0
   1b97c:	cmp	r1, r0
   1b980:	bcs	1b998 <__assert_fail@plt+0xa6b8>
   1b984:	mov	r0, #1
   1b988:	mvn	r1, #0
   1b98c:	str	r1, [sp, #16]
   1b990:	str	r0, [sp, #12]
   1b994:	b	1b9c0 <__assert_fail@plt+0xa6e0>
   1b998:	ldr	r0, [fp, #-16]
   1b99c:	rsb	r2, r0, #0
   1b9a0:	mvn	r0, #0
   1b9a4:	mov	r3, #0
   1b9a8:	str	r0, [sp, #8]
   1b9ac:	ldr	r1, [sp, #8]
   1b9b0:	bl	1c518 <__assert_fail@plt+0xb238>
   1b9b4:	str	r0, [sp, #16]
   1b9b8:	str	r1, [sp, #12]
   1b9bc:	b	1b9c0 <__assert_fail@plt+0xa6e0>
   1b9c0:	ldr	r0, [sp, #12]
   1b9c4:	ldr	r1, [sp, #16]
   1b9c8:	ldr	r2, [fp, #-12]
   1b9cc:	mvn	r2, r2
   1b9d0:	subs	r1, r2, r1
   1b9d4:	rscs	r0, r0, #0
   1b9d8:	bcs	1bb08 <__assert_fail@plt+0xa828>
   1b9dc:	b	1bb1c <__assert_fail@plt+0xa83c>
   1b9e0:	b	1b9e8 <__assert_fail@plt+0xa708>
   1b9e4:	b	1b9ec <__assert_fail@plt+0xa70c>
   1b9e8:	b	1ba3c <__assert_fail@plt+0xa75c>
   1b9ec:	ldr	r0, [fp, #-16]
   1b9f0:	cmn	r0, #1
   1b9f4:	bne	1ba3c <__assert_fail@plt+0xa75c>
   1b9f8:	b	1ba14 <__assert_fail@plt+0xa734>
   1b9fc:	ldr	r0, [fp, #-12]
   1ba00:	add	r0, r0, #0
   1ba04:	movw	r1, #0
   1ba08:	cmp	r1, r0
   1ba0c:	bcc	1bb08 <__assert_fail@plt+0xa828>
   1ba10:	b	1bb1c <__assert_fail@plt+0xa83c>
   1ba14:	ldr	r0, [fp, #-12]
   1ba18:	movw	r1, #0
   1ba1c:	cmp	r1, r0
   1ba20:	bcs	1bb1c <__assert_fail@plt+0xa83c>
   1ba24:	ldr	r0, [fp, #-12]
   1ba28:	sub	r0, r0, #1
   1ba2c:	mvn	r1, #0
   1ba30:	cmp	r1, r0
   1ba34:	bcc	1bb08 <__assert_fail@plt+0xa828>
   1ba38:	b	1bb1c <__assert_fail@plt+0xa83c>
   1ba3c:	ldr	r0, [fp, #-16]
   1ba40:	movw	r1, #0
   1ba44:	udiv	r0, r1, r0
   1ba48:	ldr	r1, [fp, #-12]
   1ba4c:	cmp	r0, r1
   1ba50:	bcc	1bb08 <__assert_fail@plt+0xa828>
   1ba54:	b	1bb1c <__assert_fail@plt+0xa83c>
   1ba58:	ldr	r0, [fp, #-16]
   1ba5c:	cmp	r0, #0
   1ba60:	bne	1ba68 <__assert_fail@plt+0xa788>
   1ba64:	b	1bb1c <__assert_fail@plt+0xa83c>
   1ba68:	ldr	r0, [fp, #-12]
   1ba6c:	cmp	r0, #0
   1ba70:	bcs	1badc <__assert_fail@plt+0xa7fc>
   1ba74:	b	1ba7c <__assert_fail@plt+0xa79c>
   1ba78:	b	1ba80 <__assert_fail@plt+0xa7a0>
   1ba7c:	b	1bac0 <__assert_fail@plt+0xa7e0>
   1ba80:	ldr	r0, [fp, #-12]
   1ba84:	cmn	r0, #1
   1ba88:	bne	1bac0 <__assert_fail@plt+0xa7e0>
   1ba8c:	b	1baa8 <__assert_fail@plt+0xa7c8>
   1ba90:	ldr	r0, [fp, #-16]
   1ba94:	add	r0, r0, #0
   1ba98:	movw	r1, #0
   1ba9c:	cmp	r1, r0
   1baa0:	bcc	1bb08 <__assert_fail@plt+0xa828>
   1baa4:	b	1bb1c <__assert_fail@plt+0xa83c>
   1baa8:	ldr	r0, [fp, #-16]
   1baac:	sub	r0, r0, #1
   1bab0:	mvn	r1, #0
   1bab4:	cmp	r1, r0
   1bab8:	bcc	1bb08 <__assert_fail@plt+0xa828>
   1babc:	b	1bb1c <__assert_fail@plt+0xa83c>
   1bac0:	ldr	r0, [fp, #-12]
   1bac4:	movw	r1, #0
   1bac8:	udiv	r0, r1, r0
   1bacc:	ldr	r1, [fp, #-16]
   1bad0:	cmp	r0, r1
   1bad4:	bcc	1bb08 <__assert_fail@plt+0xa828>
   1bad8:	b	1bb1c <__assert_fail@plt+0xa83c>
   1badc:	ldr	r2, [fp, #-16]
   1bae0:	mvn	r0, #0
   1bae4:	mov	r3, #0
   1bae8:	str	r0, [sp, #4]
   1baec:	ldr	r1, [sp, #4]
   1baf0:	bl	1c518 <__assert_fail@plt+0xb238>
   1baf4:	ldr	r2, [fp, #-12]
   1baf8:	subs	r0, r0, r2
   1bafc:	sbcs	r1, r1, #0
   1bb00:	bcs	1bb1c <__assert_fail@plt+0xa83c>
   1bb04:	b	1bb08 <__assert_fail@plt+0xa828>
   1bb08:	ldr	r0, [fp, #-12]
   1bb0c:	ldr	r1, [fp, #-16]
   1bb10:	mul	r0, r0, r1
   1bb14:	str	r0, [fp, #-20]	; 0xffffffec
   1bb18:	b	1bb30 <__assert_fail@plt+0xa850>
   1bb1c:	ldr	r0, [fp, #-12]
   1bb20:	ldr	r1, [fp, #-16]
   1bb24:	mul	r0, r0, r1
   1bb28:	str	r0, [fp, #-20]	; 0xffffffec
   1bb2c:	b	1bb48 <__assert_fail@plt+0xa868>
   1bb30:	bl	111e4 <__errno_location@plt>
   1bb34:	movw	r1, #12
   1bb38:	str	r1, [r0]
   1bb3c:	movw	r0, #0
   1bb40:	str	r0, [fp, #-4]
   1bb44:	b	1bb58 <__assert_fail@plt+0xa878>
   1bb48:	ldr	r0, [fp, #-8]
   1bb4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bb50:	bl	1a01c <__assert_fail@plt+0x8d3c>
   1bb54:	str	r0, [fp, #-4]
   1bb58:	ldr	r0, [fp, #-4]
   1bb5c:	mov	sp, fp
   1bb60:	pop	{fp, pc}
   1bb64:	svcvc	0x00ffffff
   1bb68:	andhi	r0, r0, r0
   1bb6c:			; <UNDEFINED> instruction: 0xffff8000
   1bb70:	sub	sp, sp, #12
   1bb74:	str	r0, [sp, #4]
   1bb78:	ldr	r0, [sp, #4]
   1bb7c:	sub	r1, r0, #48	; 0x30
   1bb80:	cmp	r1, #10
   1bb84:	str	r0, [sp]
   1bb88:	bcc	1bbb8 <__assert_fail@plt+0xa8d8>
   1bb8c:	b	1bb90 <__assert_fail@plt+0xa8b0>
   1bb90:	ldr	r0, [sp]
   1bb94:	sub	r1, r0, #65	; 0x41
   1bb98:	cmp	r1, #26
   1bb9c:	bcc	1bbb8 <__assert_fail@plt+0xa8d8>
   1bba0:	b	1bba4 <__assert_fail@plt+0xa8c4>
   1bba4:	ldr	r0, [sp]
   1bba8:	sub	r1, r0, #97	; 0x61
   1bbac:	cmp	r1, #25
   1bbb0:	bhi	1bbc8 <__assert_fail@plt+0xa8e8>
   1bbb4:	b	1bbb8 <__assert_fail@plt+0xa8d8>
   1bbb8:	movw	r0, #1
   1bbbc:	and	r0, r0, #1
   1bbc0:	strb	r0, [sp, #11]
   1bbc4:	b	1bbd4 <__assert_fail@plt+0xa8f4>
   1bbc8:	movw	r0, #0
   1bbcc:	and	r0, r0, #1
   1bbd0:	strb	r0, [sp, #11]
   1bbd4:	ldrb	r0, [sp, #11]
   1bbd8:	and	r0, r0, #1
   1bbdc:	add	sp, sp, #12
   1bbe0:	bx	lr
   1bbe4:	sub	sp, sp, #12
   1bbe8:	str	r0, [sp, #4]
   1bbec:	ldr	r0, [sp, #4]
   1bbf0:	sub	r1, r0, #65	; 0x41
   1bbf4:	cmp	r1, #26
   1bbf8:	str	r0, [sp]
   1bbfc:	bcc	1bc18 <__assert_fail@plt+0xa938>
   1bc00:	b	1bc04 <__assert_fail@plt+0xa924>
   1bc04:	ldr	r0, [sp]
   1bc08:	sub	r1, r0, #97	; 0x61
   1bc0c:	cmp	r1, #25
   1bc10:	bhi	1bc28 <__assert_fail@plt+0xa948>
   1bc14:	b	1bc18 <__assert_fail@plt+0xa938>
   1bc18:	movw	r0, #1
   1bc1c:	and	r0, r0, #1
   1bc20:	strb	r0, [sp, #11]
   1bc24:	b	1bc34 <__assert_fail@plt+0xa954>
   1bc28:	movw	r0, #0
   1bc2c:	and	r0, r0, #1
   1bc30:	strb	r0, [sp, #11]
   1bc34:	ldrb	r0, [sp, #11]
   1bc38:	and	r0, r0, #1
   1bc3c:	add	sp, sp, #12
   1bc40:	bx	lr
   1bc44:	sub	sp, sp, #8
   1bc48:	str	r0, [sp]
   1bc4c:	ldr	r0, [sp]
   1bc50:	cmp	r0, #127	; 0x7f
   1bc54:	bhi	1bc6c <__assert_fail@plt+0xa98c>
   1bc58:	b	1bc5c <__assert_fail@plt+0xa97c>
   1bc5c:	movw	r0, #1
   1bc60:	and	r0, r0, #1
   1bc64:	strb	r0, [sp, #7]
   1bc68:	b	1bc78 <__assert_fail@plt+0xa998>
   1bc6c:	movw	r0, #0
   1bc70:	and	r0, r0, #1
   1bc74:	strb	r0, [sp, #7]
   1bc78:	ldrb	r0, [sp, #7]
   1bc7c:	and	r0, r0, #1
   1bc80:	add	sp, sp, #8
   1bc84:	bx	lr
   1bc88:	sub	sp, sp, #8
   1bc8c:	str	r0, [sp, #4]
   1bc90:	ldr	r0, [sp, #4]
   1bc94:	cmp	r0, #32
   1bc98:	movw	r0, #1
   1bc9c:	str	r0, [sp]
   1bca0:	beq	1bcb8 <__assert_fail@plt+0xa9d8>
   1bca4:	ldr	r0, [sp, #4]
   1bca8:	cmp	r0, #9
   1bcac:	movw	r0, #0
   1bcb0:	moveq	r0, #1
   1bcb4:	str	r0, [sp]
   1bcb8:	ldr	r0, [sp]
   1bcbc:	and	r0, r0, #1
   1bcc0:	add	sp, sp, #8
   1bcc4:	bx	lr
   1bcc8:	sub	sp, sp, #12
   1bccc:	str	r0, [sp, #4]
   1bcd0:	ldr	r0, [sp, #4]
   1bcd4:	cmp	r0, #32
   1bcd8:	str	r0, [sp]
   1bcdc:	bcc	1bcf4 <__assert_fail@plt+0xaa14>
   1bce0:	b	1bce4 <__assert_fail@plt+0xaa04>
   1bce4:	ldr	r0, [sp]
   1bce8:	cmp	r0, #127	; 0x7f
   1bcec:	bne	1bd04 <__assert_fail@plt+0xaa24>
   1bcf0:	b	1bcf4 <__assert_fail@plt+0xaa14>
   1bcf4:	movw	r0, #1
   1bcf8:	and	r0, r0, #1
   1bcfc:	strb	r0, [sp, #11]
   1bd00:	b	1bd10 <__assert_fail@plt+0xaa30>
   1bd04:	movw	r0, #0
   1bd08:	and	r0, r0, #1
   1bd0c:	strb	r0, [sp, #11]
   1bd10:	ldrb	r0, [sp, #11]
   1bd14:	and	r0, r0, #1
   1bd18:	add	sp, sp, #12
   1bd1c:	bx	lr
   1bd20:	sub	sp, sp, #8
   1bd24:	str	r0, [sp]
   1bd28:	ldr	r0, [sp]
   1bd2c:	sub	r0, r0, #48	; 0x30
   1bd30:	cmp	r0, #9
   1bd34:	bhi	1bd4c <__assert_fail@plt+0xaa6c>
   1bd38:	b	1bd3c <__assert_fail@plt+0xaa5c>
   1bd3c:	movw	r0, #1
   1bd40:	and	r0, r0, #1
   1bd44:	strb	r0, [sp, #7]
   1bd48:	b	1bd58 <__assert_fail@plt+0xaa78>
   1bd4c:	movw	r0, #0
   1bd50:	and	r0, r0, #1
   1bd54:	strb	r0, [sp, #7]
   1bd58:	ldrb	r0, [sp, #7]
   1bd5c:	and	r0, r0, #1
   1bd60:	add	sp, sp, #8
   1bd64:	bx	lr
   1bd68:	sub	sp, sp, #8
   1bd6c:	str	r0, [sp]
   1bd70:	ldr	r0, [sp]
   1bd74:	sub	r0, r0, #33	; 0x21
   1bd78:	cmp	r0, #93	; 0x5d
   1bd7c:	bhi	1bd94 <__assert_fail@plt+0xaab4>
   1bd80:	b	1bd84 <__assert_fail@plt+0xaaa4>
   1bd84:	movw	r0, #1
   1bd88:	and	r0, r0, #1
   1bd8c:	strb	r0, [sp, #7]
   1bd90:	b	1bda0 <__assert_fail@plt+0xaac0>
   1bd94:	movw	r0, #0
   1bd98:	and	r0, r0, #1
   1bd9c:	strb	r0, [sp, #7]
   1bda0:	ldrb	r0, [sp, #7]
   1bda4:	and	r0, r0, #1
   1bda8:	add	sp, sp, #8
   1bdac:	bx	lr
   1bdb0:	sub	sp, sp, #8
   1bdb4:	str	r0, [sp]
   1bdb8:	ldr	r0, [sp]
   1bdbc:	sub	r0, r0, #97	; 0x61
   1bdc0:	cmp	r0, #25
   1bdc4:	bhi	1bddc <__assert_fail@plt+0xaafc>
   1bdc8:	b	1bdcc <__assert_fail@plt+0xaaec>
   1bdcc:	movw	r0, #1
   1bdd0:	and	r0, r0, #1
   1bdd4:	strb	r0, [sp, #7]
   1bdd8:	b	1bde8 <__assert_fail@plt+0xab08>
   1bddc:	movw	r0, #0
   1bde0:	and	r0, r0, #1
   1bde4:	strb	r0, [sp, #7]
   1bde8:	ldrb	r0, [sp, #7]
   1bdec:	and	r0, r0, #1
   1bdf0:	add	sp, sp, #8
   1bdf4:	bx	lr
   1bdf8:	sub	sp, sp, #8
   1bdfc:	str	r0, [sp]
   1be00:	ldr	r0, [sp]
   1be04:	sub	r0, r0, #32
   1be08:	cmp	r0, #94	; 0x5e
   1be0c:	bhi	1be24 <__assert_fail@plt+0xab44>
   1be10:	b	1be14 <__assert_fail@plt+0xab34>
   1be14:	movw	r0, #1
   1be18:	and	r0, r0, #1
   1be1c:	strb	r0, [sp, #7]
   1be20:	b	1be30 <__assert_fail@plt+0xab50>
   1be24:	movw	r0, #0
   1be28:	and	r0, r0, #1
   1be2c:	strb	r0, [sp, #7]
   1be30:	ldrb	r0, [sp, #7]
   1be34:	and	r0, r0, #1
   1be38:	add	sp, sp, #8
   1be3c:	bx	lr
   1be40:	sub	sp, sp, #12
   1be44:	str	r0, [sp, #4]
   1be48:	ldr	r0, [sp, #4]
   1be4c:	sub	r0, r0, #33	; 0x21
   1be50:	cmp	r0, #93	; 0x5d
   1be54:	str	r0, [sp]
   1be58:	bhi	1bff4 <__assert_fail@plt+0xad14>
   1be5c:	add	r0, pc, #8
   1be60:	ldr	r1, [sp]
   1be64:	ldr	r0, [r0, r1, lsl #2]
   1be68:	mov	pc, r0
   1be6c:	andeq	fp, r1, r4, ror #31
   1be70:	andeq	fp, r1, r4, ror #31
   1be74:	andeq	fp, r1, r4, ror #31
   1be78:	andeq	fp, r1, r4, ror #31
   1be7c:	andeq	fp, r1, r4, ror #31
   1be80:	andeq	fp, r1, r4, ror #31
   1be84:	andeq	fp, r1, r4, ror #31
   1be88:	andeq	fp, r1, r4, ror #31
   1be8c:	andeq	fp, r1, r4, ror #31
   1be90:	andeq	fp, r1, r4, ror #31
   1be94:	andeq	fp, r1, r4, ror #31
   1be98:	andeq	fp, r1, r4, ror #31
   1be9c:	andeq	fp, r1, r4, ror #31
   1bea0:	andeq	fp, r1, r4, ror #31
   1bea4:	andeq	fp, r1, r4, ror #31
   1bea8:	strdeq	fp, [r1], -r4
   1beac:	strdeq	fp, [r1], -r4
   1beb0:	strdeq	fp, [r1], -r4
   1beb4:	strdeq	fp, [r1], -r4
   1beb8:	strdeq	fp, [r1], -r4
   1bebc:	strdeq	fp, [r1], -r4
   1bec0:	strdeq	fp, [r1], -r4
   1bec4:	strdeq	fp, [r1], -r4
   1bec8:	strdeq	fp, [r1], -r4
   1becc:	strdeq	fp, [r1], -r4
   1bed0:	andeq	fp, r1, r4, ror #31
   1bed4:	andeq	fp, r1, r4, ror #31
   1bed8:	andeq	fp, r1, r4, ror #31
   1bedc:	andeq	fp, r1, r4, ror #31
   1bee0:	andeq	fp, r1, r4, ror #31
   1bee4:	andeq	fp, r1, r4, ror #31
   1bee8:	andeq	fp, r1, r4, ror #31
   1beec:	strdeq	fp, [r1], -r4
   1bef0:	strdeq	fp, [r1], -r4
   1bef4:	strdeq	fp, [r1], -r4
   1bef8:	strdeq	fp, [r1], -r4
   1befc:	strdeq	fp, [r1], -r4
   1bf00:	strdeq	fp, [r1], -r4
   1bf04:	strdeq	fp, [r1], -r4
   1bf08:	strdeq	fp, [r1], -r4
   1bf0c:	strdeq	fp, [r1], -r4
   1bf10:	strdeq	fp, [r1], -r4
   1bf14:	strdeq	fp, [r1], -r4
   1bf18:	strdeq	fp, [r1], -r4
   1bf1c:	strdeq	fp, [r1], -r4
   1bf20:	strdeq	fp, [r1], -r4
   1bf24:	strdeq	fp, [r1], -r4
   1bf28:	strdeq	fp, [r1], -r4
   1bf2c:	strdeq	fp, [r1], -r4
   1bf30:	strdeq	fp, [r1], -r4
   1bf34:	strdeq	fp, [r1], -r4
   1bf38:	strdeq	fp, [r1], -r4
   1bf3c:	strdeq	fp, [r1], -r4
   1bf40:	strdeq	fp, [r1], -r4
   1bf44:	strdeq	fp, [r1], -r4
   1bf48:	strdeq	fp, [r1], -r4
   1bf4c:	strdeq	fp, [r1], -r4
   1bf50:	strdeq	fp, [r1], -r4
   1bf54:	andeq	fp, r1, r4, ror #31
   1bf58:	andeq	fp, r1, r4, ror #31
   1bf5c:	andeq	fp, r1, r4, ror #31
   1bf60:	andeq	fp, r1, r4, ror #31
   1bf64:	andeq	fp, r1, r4, ror #31
   1bf68:	andeq	fp, r1, r4, ror #31
   1bf6c:	strdeq	fp, [r1], -r4
   1bf70:	strdeq	fp, [r1], -r4
   1bf74:	strdeq	fp, [r1], -r4
   1bf78:	strdeq	fp, [r1], -r4
   1bf7c:	strdeq	fp, [r1], -r4
   1bf80:	strdeq	fp, [r1], -r4
   1bf84:	strdeq	fp, [r1], -r4
   1bf88:	strdeq	fp, [r1], -r4
   1bf8c:	strdeq	fp, [r1], -r4
   1bf90:	strdeq	fp, [r1], -r4
   1bf94:	strdeq	fp, [r1], -r4
   1bf98:	strdeq	fp, [r1], -r4
   1bf9c:	strdeq	fp, [r1], -r4
   1bfa0:	strdeq	fp, [r1], -r4
   1bfa4:	strdeq	fp, [r1], -r4
   1bfa8:	strdeq	fp, [r1], -r4
   1bfac:	strdeq	fp, [r1], -r4
   1bfb0:	strdeq	fp, [r1], -r4
   1bfb4:	strdeq	fp, [r1], -r4
   1bfb8:	strdeq	fp, [r1], -r4
   1bfbc:	strdeq	fp, [r1], -r4
   1bfc0:	strdeq	fp, [r1], -r4
   1bfc4:	strdeq	fp, [r1], -r4
   1bfc8:	strdeq	fp, [r1], -r4
   1bfcc:	strdeq	fp, [r1], -r4
   1bfd0:	strdeq	fp, [r1], -r4
   1bfd4:	andeq	fp, r1, r4, ror #31
   1bfd8:	andeq	fp, r1, r4, ror #31
   1bfdc:	andeq	fp, r1, r4, ror #31
   1bfe0:	andeq	fp, r1, r4, ror #31
   1bfe4:	movw	r0, #1
   1bfe8:	and	r0, r0, #1
   1bfec:	strb	r0, [sp, #11]
   1bff0:	b	1c000 <__assert_fail@plt+0xad20>
   1bff4:	movw	r0, #0
   1bff8:	and	r0, r0, #1
   1bffc:	strb	r0, [sp, #11]
   1c000:	ldrb	r0, [sp, #11]
   1c004:	and	r0, r0, #1
   1c008:	add	sp, sp, #12
   1c00c:	bx	lr
   1c010:	sub	sp, sp, #12
   1c014:	str	r0, [sp, #4]
   1c018:	ldr	r0, [sp, #4]
   1c01c:	sub	r1, r0, #9
   1c020:	cmp	r1, #5
   1c024:	str	r0, [sp]
   1c028:	bcc	1c040 <__assert_fail@plt+0xad60>
   1c02c:	b	1c030 <__assert_fail@plt+0xad50>
   1c030:	ldr	r0, [sp]
   1c034:	cmp	r0, #32
   1c038:	bne	1c050 <__assert_fail@plt+0xad70>
   1c03c:	b	1c040 <__assert_fail@plt+0xad60>
   1c040:	movw	r0, #1
   1c044:	and	r0, r0, #1
   1c048:	strb	r0, [sp, #11]
   1c04c:	b	1c05c <__assert_fail@plt+0xad7c>
   1c050:	movw	r0, #0
   1c054:	and	r0, r0, #1
   1c058:	strb	r0, [sp, #11]
   1c05c:	ldrb	r0, [sp, #11]
   1c060:	and	r0, r0, #1
   1c064:	add	sp, sp, #12
   1c068:	bx	lr
   1c06c:	sub	sp, sp, #8
   1c070:	str	r0, [sp]
   1c074:	ldr	r0, [sp]
   1c078:	sub	r0, r0, #65	; 0x41
   1c07c:	cmp	r0, #25
   1c080:	bhi	1c098 <__assert_fail@plt+0xadb8>
   1c084:	b	1c088 <__assert_fail@plt+0xada8>
   1c088:	movw	r0, #1
   1c08c:	and	r0, r0, #1
   1c090:	strb	r0, [sp, #7]
   1c094:	b	1c0a4 <__assert_fail@plt+0xadc4>
   1c098:	movw	r0, #0
   1c09c:	and	r0, r0, #1
   1c0a0:	strb	r0, [sp, #7]
   1c0a4:	ldrb	r0, [sp, #7]
   1c0a8:	and	r0, r0, #1
   1c0ac:	add	sp, sp, #8
   1c0b0:	bx	lr
   1c0b4:	sub	sp, sp, #12
   1c0b8:	str	r0, [sp, #4]
   1c0bc:	ldr	r0, [sp, #4]
   1c0c0:	sub	r1, r0, #48	; 0x30
   1c0c4:	cmp	r1, #10
   1c0c8:	str	r0, [sp]
   1c0cc:	bcc	1c0fc <__assert_fail@plt+0xae1c>
   1c0d0:	b	1c0d4 <__assert_fail@plt+0xadf4>
   1c0d4:	ldr	r0, [sp]
   1c0d8:	sub	r1, r0, #65	; 0x41
   1c0dc:	cmp	r1, #6
   1c0e0:	bcc	1c0fc <__assert_fail@plt+0xae1c>
   1c0e4:	b	1c0e8 <__assert_fail@plt+0xae08>
   1c0e8:	ldr	r0, [sp]
   1c0ec:	sub	r1, r0, #97	; 0x61
   1c0f0:	cmp	r1, #5
   1c0f4:	bhi	1c10c <__assert_fail@plt+0xae2c>
   1c0f8:	b	1c0fc <__assert_fail@plt+0xae1c>
   1c0fc:	movw	r0, #1
   1c100:	and	r0, r0, #1
   1c104:	strb	r0, [sp, #11]
   1c108:	b	1c118 <__assert_fail@plt+0xae38>
   1c10c:	movw	r0, #0
   1c110:	and	r0, r0, #1
   1c114:	strb	r0, [sp, #11]
   1c118:	ldrb	r0, [sp, #11]
   1c11c:	and	r0, r0, #1
   1c120:	add	sp, sp, #12
   1c124:	bx	lr
   1c128:	sub	sp, sp, #8
   1c12c:	str	r0, [sp]
   1c130:	ldr	r0, [sp]
   1c134:	sub	r0, r0, #65	; 0x41
   1c138:	cmp	r0, #25
   1c13c:	bhi	1c158 <__assert_fail@plt+0xae78>
   1c140:	b	1c144 <__assert_fail@plt+0xae64>
   1c144:	ldr	r0, [sp]
   1c148:	sub	r0, r0, #65	; 0x41
   1c14c:	add	r0, r0, #97	; 0x61
   1c150:	str	r0, [sp, #4]
   1c154:	b	1c160 <__assert_fail@plt+0xae80>
   1c158:	ldr	r0, [sp]
   1c15c:	str	r0, [sp, #4]
   1c160:	ldr	r0, [sp, #4]
   1c164:	add	sp, sp, #8
   1c168:	bx	lr
   1c16c:	sub	sp, sp, #8
   1c170:	str	r0, [sp]
   1c174:	ldr	r0, [sp]
   1c178:	sub	r0, r0, #97	; 0x61
   1c17c:	cmp	r0, #25
   1c180:	bhi	1c19c <__assert_fail@plt+0xaebc>
   1c184:	b	1c188 <__assert_fail@plt+0xaea8>
   1c188:	ldr	r0, [sp]
   1c18c:	sub	r0, r0, #97	; 0x61
   1c190:	add	r0, r0, #65	; 0x41
   1c194:	str	r0, [sp, #4]
   1c198:	b	1c1a4 <__assert_fail@plt+0xaec4>
   1c19c:	ldr	r0, [sp]
   1c1a0:	str	r0, [sp, #4]
   1c1a4:	ldr	r0, [sp, #4]
   1c1a8:	add	sp, sp, #8
   1c1ac:	bx	lr
   1c1b0:	sub	sp, sp, #16
   1c1b4:	str	r0, [sp, #8]
   1c1b8:	ldr	r0, [sp, #8]
   1c1bc:	ldr	r0, [r0, #20]
   1c1c0:	ldr	r1, [sp, #8]
   1c1c4:	ldr	r1, [r1, #16]
   1c1c8:	cmp	r0, r1
   1c1cc:	bls	1c1dc <__assert_fail@plt+0xaefc>
   1c1d0:	movw	r0, #0
   1c1d4:	str	r0, [sp, #12]
   1c1d8:	b	1c240 <__assert_fail@plt+0xaf60>
   1c1dc:	ldr	r0, [sp, #8]
   1c1e0:	ldr	r0, [r0, #8]
   1c1e4:	ldr	r1, [sp, #8]
   1c1e8:	ldr	r1, [r1, #4]
   1c1ec:	sub	r0, r0, r1
   1c1f0:	ldr	r1, [sp, #8]
   1c1f4:	ldr	r1, [r1]
   1c1f8:	and	r1, r1, #256	; 0x100
   1c1fc:	cmp	r1, #0
   1c200:	str	r0, [sp, #4]
   1c204:	beq	1c224 <__assert_fail@plt+0xaf44>
   1c208:	ldr	r0, [sp, #8]
   1c20c:	ldr	r0, [r0, #44]	; 0x2c
   1c210:	ldr	r1, [sp, #8]
   1c214:	ldr	r1, [r1, #36]	; 0x24
   1c218:	sub	r0, r0, r1
   1c21c:	str	r0, [sp]
   1c220:	b	1c230 <__assert_fail@plt+0xaf50>
   1c224:	movw	r0, #0
   1c228:	str	r0, [sp]
   1c22c:	b	1c230 <__assert_fail@plt+0xaf50>
   1c230:	ldr	r0, [sp]
   1c234:	ldr	r1, [sp, #4]
   1c238:	add	r0, r1, r0
   1c23c:	str	r0, [sp, #12]
   1c240:	ldr	r0, [sp, #12]
   1c244:	add	sp, sp, #16
   1c248:	bx	lr
   1c24c:	push	{r4, r5, fp, lr}
   1c250:	add	fp, sp, #8
   1c254:	sub	sp, sp, #272	; 0x110
   1c258:	add	r1, sp, #7
   1c25c:	str	r0, [fp, #-16]
   1c260:	ldr	r0, [fp, #-16]
   1c264:	movw	r2, #257	; 0x101
   1c268:	bl	1c2e8 <__assert_fail@plt+0xb008>
   1c26c:	cmp	r0, #0
   1c270:	beq	1c284 <__assert_fail@plt+0xafa4>
   1c274:	movw	r0, #0
   1c278:	and	r0, r0, #1
   1c27c:	strb	r0, [fp, #-9]
   1c280:	b	1c2d8 <__assert_fail@plt+0xaff8>
   1c284:	add	r0, sp, #7
   1c288:	movw	r1, #55131	; 0xd75b
   1c28c:	movt	r1, #1
   1c290:	bl	1104c <strcmp@plt>
   1c294:	cmp	r0, #0
   1c298:	movw	r0, #1
   1c29c:	str	r0, [sp]
   1c2a0:	beq	1c2c4 <__assert_fail@plt+0xafe4>
   1c2a4:	add	r0, sp, #7
   1c2a8:	movw	r1, #55133	; 0xd75d
   1c2ac:	movt	r1, #1
   1c2b0:	bl	1104c <strcmp@plt>
   1c2b4:	cmp	r0, #0
   1c2b8:	movw	r0, #0
   1c2bc:	moveq	r0, #1
   1c2c0:	str	r0, [sp]
   1c2c4:	ldr	r0, [sp]
   1c2c8:	mvn	r1, #0
   1c2cc:	eor	r0, r0, r1
   1c2d0:	and	r0, r0, #1
   1c2d4:	strb	r0, [fp, #-9]
   1c2d8:	ldrb	r0, [fp, #-9]
   1c2dc:	and	r0, r0, #1
   1c2e0:	sub	sp, fp, #8
   1c2e4:	pop	{r4, r5, fp, pc}
   1c2e8:	push	{fp, lr}
   1c2ec:	mov	fp, sp
   1c2f0:	sub	sp, sp, #16
   1c2f4:	str	r0, [fp, #-4]
   1c2f8:	str	r1, [sp, #8]
   1c2fc:	str	r2, [sp, #4]
   1c300:	ldr	r0, [fp, #-4]
   1c304:	ldr	r1, [sp, #8]
   1c308:	ldr	r2, [sp, #4]
   1c30c:	bl	1c318 <__assert_fail@plt+0xb038>
   1c310:	mov	sp, fp
   1c314:	pop	{fp, pc}
   1c318:	push	{fp, lr}
   1c31c:	mov	fp, sp
   1c320:	sub	sp, sp, #24
   1c324:	str	r0, [fp, #-8]
   1c328:	str	r1, [sp, #12]
   1c32c:	str	r2, [sp, #8]
   1c330:	ldr	r0, [fp, #-8]
   1c334:	bl	1c418 <__assert_fail@plt+0xb138>
   1c338:	str	r0, [sp, #4]
   1c33c:	ldr	r0, [sp, #4]
   1c340:	movw	r1, #0
   1c344:	cmp	r0, r1
   1c348:	bne	1c370 <__assert_fail@plt+0xb090>
   1c34c:	ldr	r0, [sp, #8]
   1c350:	cmp	r0, #0
   1c354:	bls	1c364 <__assert_fail@plt+0xb084>
   1c358:	ldr	r0, [sp, #12]
   1c35c:	movw	r1, #0
   1c360:	strb	r1, [r0]
   1c364:	movw	r0, #22
   1c368:	str	r0, [fp, #-4]
   1c36c:	b	1c3ec <__assert_fail@plt+0xb10c>
   1c370:	ldr	r0, [sp, #4]
   1c374:	bl	111c0 <strlen@plt>
   1c378:	str	r0, [sp]
   1c37c:	ldr	r0, [sp]
   1c380:	ldr	r1, [sp, #8]
   1c384:	cmp	r0, r1
   1c388:	bcs	1c3ac <__assert_fail@plt+0xb0cc>
   1c38c:	ldr	r0, [sp, #12]
   1c390:	ldr	r1, [sp, #4]
   1c394:	ldr	r2, [sp]
   1c398:	add	r2, r2, #1
   1c39c:	bl	110ac <memcpy@plt>
   1c3a0:	movw	r0, #0
   1c3a4:	str	r0, [fp, #-4]
   1c3a8:	b	1c3ec <__assert_fail@plt+0xb10c>
   1c3ac:	ldr	r0, [sp, #8]
   1c3b0:	cmp	r0, #0
   1c3b4:	bls	1c3e4 <__assert_fail@plt+0xb104>
   1c3b8:	ldr	r0, [sp, #12]
   1c3bc:	ldr	r1, [sp, #4]
   1c3c0:	ldr	r2, [sp, #8]
   1c3c4:	sub	r2, r2, #1
   1c3c8:	bl	110ac <memcpy@plt>
   1c3cc:	ldr	r0, [sp, #12]
   1c3d0:	ldr	r1, [sp, #8]
   1c3d4:	sub	r1, r1, #1
   1c3d8:	add	r0, r0, r1
   1c3dc:	movw	r1, #0
   1c3e0:	strb	r1, [r0]
   1c3e4:	movw	r0, #34	; 0x22
   1c3e8:	str	r0, [fp, #-4]
   1c3ec:	ldr	r0, [fp, #-4]
   1c3f0:	mov	sp, fp
   1c3f4:	pop	{fp, pc}
   1c3f8:	push	{fp, lr}
   1c3fc:	mov	fp, sp
   1c400:	sub	sp, sp, #8
   1c404:	str	r0, [sp, #4]
   1c408:	ldr	r0, [sp, #4]
   1c40c:	bl	1c418 <__assert_fail@plt+0xb138>
   1c410:	mov	sp, fp
   1c414:	pop	{fp, pc}
   1c418:	push	{fp, lr}
   1c41c:	mov	fp, sp
   1c420:	sub	sp, sp, #8
   1c424:	str	r0, [sp, #4]
   1c428:	ldr	r0, [sp, #4]
   1c42c:	movw	r1, #0
   1c430:	bl	11244 <setlocale@plt>
   1c434:	str	r0, [sp]
   1c438:	ldr	r0, [sp]
   1c43c:	mov	sp, fp
   1c440:	pop	{fp, pc}
   1c444:	cmp	r3, #0
   1c448:	cmpeq	r2, #0
   1c44c:	bne	1c470 <__assert_fail@plt+0xb190>
   1c450:	cmp	r1, #0
   1c454:	movlt	r1, #-2147483648	; 0x80000000
   1c458:	movlt	r0, #0
   1c45c:	blt	1c46c <__assert_fail@plt+0xb18c>
   1c460:	cmpeq	r0, #0
   1c464:	mvnne	r1, #-2147483648	; 0x80000000
   1c468:	mvnne	r0, #0
   1c46c:	b	1c554 <__assert_fail@plt+0xb274>
   1c470:	sub	sp, sp, #8
   1c474:	push	{sp, lr}
   1c478:	cmp	r1, #0
   1c47c:	blt	1c49c <__assert_fail@plt+0xb1bc>
   1c480:	cmp	r3, #0
   1c484:	blt	1c4d0 <__assert_fail@plt+0xb1f0>
   1c488:	bl	1c564 <__assert_fail@plt+0xb284>
   1c48c:	ldr	lr, [sp, #4]
   1c490:	add	sp, sp, #8
   1c494:	pop	{r2, r3}
   1c498:	bx	lr
   1c49c:	rsbs	r0, r0, #0
   1c4a0:	sbc	r1, r1, r1, lsl #1
   1c4a4:	cmp	r3, #0
   1c4a8:	blt	1c4f4 <__assert_fail@plt+0xb214>
   1c4ac:	bl	1c564 <__assert_fail@plt+0xb284>
   1c4b0:	ldr	lr, [sp, #4]
   1c4b4:	add	sp, sp, #8
   1c4b8:	pop	{r2, r3}
   1c4bc:	rsbs	r0, r0, #0
   1c4c0:	sbc	r1, r1, r1, lsl #1
   1c4c4:	rsbs	r2, r2, #0
   1c4c8:	sbc	r3, r3, r3, lsl #1
   1c4cc:	bx	lr
   1c4d0:	rsbs	r2, r2, #0
   1c4d4:	sbc	r3, r3, r3, lsl #1
   1c4d8:	bl	1c564 <__assert_fail@plt+0xb284>
   1c4dc:	ldr	lr, [sp, #4]
   1c4e0:	add	sp, sp, #8
   1c4e4:	pop	{r2, r3}
   1c4e8:	rsbs	r0, r0, #0
   1c4ec:	sbc	r1, r1, r1, lsl #1
   1c4f0:	bx	lr
   1c4f4:	rsbs	r2, r2, #0
   1c4f8:	sbc	r3, r3, r3, lsl #1
   1c4fc:	bl	1c564 <__assert_fail@plt+0xb284>
   1c500:	ldr	lr, [sp, #4]
   1c504:	add	sp, sp, #8
   1c508:	pop	{r2, r3}
   1c50c:	rsbs	r2, r2, #0
   1c510:	sbc	r3, r3, r3, lsl #1
   1c514:	bx	lr
   1c518:	cmp	r3, #0
   1c51c:	cmpeq	r2, #0
   1c520:	bne	1c538 <__assert_fail@plt+0xb258>
   1c524:	cmp	r1, #0
   1c528:	cmpeq	r0, #0
   1c52c:	mvnne	r1, #0
   1c530:	mvnne	r0, #0
   1c534:	b	1c554 <__assert_fail@plt+0xb274>
   1c538:	sub	sp, sp, #8
   1c53c:	push	{sp, lr}
   1c540:	bl	1c564 <__assert_fail@plt+0xb284>
   1c544:	ldr	lr, [sp, #4]
   1c548:	add	sp, sp, #8
   1c54c:	pop	{r2, r3}
   1c550:	bx	lr
   1c554:	push	{r1, lr}
   1c558:	mov	r0, #8
   1c55c:	bl	11040 <raise@plt>
   1c560:	pop	{r1, pc}
   1c564:	cmp	r1, r3
   1c568:	cmpeq	r0, r2
   1c56c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c570:	mov	r4, r0
   1c574:	movcc	r0, #0
   1c578:	mov	r5, r1
   1c57c:	ldr	lr, [sp, #36]	; 0x24
   1c580:	movcc	r1, r0
   1c584:	bcc	1c680 <__assert_fail@plt+0xb3a0>
   1c588:	cmp	r3, #0
   1c58c:	clzeq	ip, r2
   1c590:	clzne	ip, r3
   1c594:	addeq	ip, ip, #32
   1c598:	cmp	r5, #0
   1c59c:	clzeq	r1, r4
   1c5a0:	addeq	r1, r1, #32
   1c5a4:	clzne	r1, r5
   1c5a8:	sub	ip, ip, r1
   1c5ac:	sub	sl, ip, #32
   1c5b0:	lsl	r9, r3, ip
   1c5b4:	rsb	fp, ip, #32
   1c5b8:	orr	r9, r9, r2, lsl sl
   1c5bc:	orr	r9, r9, r2, lsr fp
   1c5c0:	lsl	r8, r2, ip
   1c5c4:	cmp	r5, r9
   1c5c8:	cmpeq	r4, r8
   1c5cc:	movcc	r0, #0
   1c5d0:	movcc	r1, r0
   1c5d4:	bcc	1c5f0 <__assert_fail@plt+0xb310>
   1c5d8:	mov	r0, #1
   1c5dc:	subs	r4, r4, r8
   1c5e0:	lsl	r1, r0, sl
   1c5e4:	orr	r1, r1, r0, lsr fp
   1c5e8:	lsl	r0, r0, ip
   1c5ec:	sbc	r5, r5, r9
   1c5f0:	cmp	ip, #0
   1c5f4:	beq	1c680 <__assert_fail@plt+0xb3a0>
   1c5f8:	lsr	r6, r8, #1
   1c5fc:	orr	r6, r6, r9, lsl #31
   1c600:	lsr	r7, r9, #1
   1c604:	mov	r2, ip
   1c608:	b	1c62c <__assert_fail@plt+0xb34c>
   1c60c:	subs	r3, r4, r6
   1c610:	sbc	r8, r5, r7
   1c614:	adds	r3, r3, r3
   1c618:	adc	r8, r8, r8
   1c61c:	adds	r4, r3, #1
   1c620:	adc	r5, r8, #0
   1c624:	subs	r2, r2, #1
   1c628:	beq	1c648 <__assert_fail@plt+0xb368>
   1c62c:	cmp	r5, r7
   1c630:	cmpeq	r4, r6
   1c634:	bcs	1c60c <__assert_fail@plt+0xb32c>
   1c638:	adds	r4, r4, r4
   1c63c:	adc	r5, r5, r5
   1c640:	subs	r2, r2, #1
   1c644:	bne	1c62c <__assert_fail@plt+0xb34c>
   1c648:	lsr	r3, r4, ip
   1c64c:	orr	r3, r3, r5, lsl fp
   1c650:	lsr	r2, r5, ip
   1c654:	orr	r3, r3, r5, lsr sl
   1c658:	adds	r0, r0, r4
   1c65c:	mov	r4, r3
   1c660:	lsl	r3, r2, ip
   1c664:	orr	r3, r3, r4, lsl sl
   1c668:	lsl	ip, r4, ip
   1c66c:	orr	r3, r3, r4, lsr fp
   1c670:	adc	r1, r1, r5
   1c674:	subs	r0, r0, ip
   1c678:	mov	r5, r2
   1c67c:	sbc	r1, r1, r3
   1c680:	cmp	lr, #0
   1c684:	strdne	r4, [lr]
   1c688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c68c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c690:	mov	r7, r0
   1c694:	ldr	r6, [pc, #72]	; 1c6e4 <__assert_fail@plt+0xb404>
   1c698:	ldr	r5, [pc, #72]	; 1c6e8 <__assert_fail@plt+0xb408>
   1c69c:	add	r6, pc, r6
   1c6a0:	add	r5, pc, r5
   1c6a4:	sub	r6, r6, r5
   1c6a8:	mov	r8, r1
   1c6ac:	mov	r9, r2
   1c6b0:	bl	11008 <calloc@plt-0x20>
   1c6b4:	asrs	r6, r6, #2
   1c6b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c6bc:	mov	r4, #0
   1c6c0:	add	r4, r4, #1
   1c6c4:	ldr	r3, [r5], #4
   1c6c8:	mov	r2, r9
   1c6cc:	mov	r1, r8
   1c6d0:	mov	r0, r7
   1c6d4:	blx	r3
   1c6d8:	cmp	r6, r4
   1c6dc:	bne	1c6c0 <__assert_fail@plt+0xb3e0>
   1c6e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c6e4:	andeq	r1, r1, r8, ror #16
   1c6e8:	andeq	r1, r1, r0, ror #16
   1c6ec:	bx	lr
   1c6f0:	ldr	r3, [pc, #12]	; 1c704 <__assert_fail@plt+0xb424>
   1c6f4:	mov	r1, #0
   1c6f8:	add	r3, pc, r3
   1c6fc:	ldr	r2, [r3]
   1c700:	b	111f0 <__cxa_atexit@plt>
   1c704:	andeq	r1, r1, r0, lsl #20

Disassembly of section .fini:

0001c708 <.fini>:
   1c708:	push	{r3, lr}
   1c70c:	pop	{r3, pc}
