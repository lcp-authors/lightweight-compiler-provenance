
../repos/charybdis/extensions/.libs/override.so:     file format elf32-littlearm


Disassembly of section .init:

00000650 <_init>:
 650:	push	{r3, lr}
 654:	bl	730 <call_weak_fn>
 658:	pop	{r3, pc}

Disassembly of section .plt:

0000065c <.plt>:
 65c:	push	{lr}		; (str lr, [sp, #-4]!)
 660:	ldr	lr, [pc, #4]	; 66c <.plt+0x10>
 664:	add	lr, pc, lr
 668:	ldr	pc, [lr, #8]!
 66c:	.word	0x00011994

00000670 <calloc@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #69632	; 0x11000
 678:	ldr	pc, [ip, #2452]!	; 0x994

0000067c <rb_current_time@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #69632	; 0x11000
 684:	ldr	pc, [ip, #2444]!	; 0x98c

00000688 <rb_event_add@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #69632	; 0x11000
 690:	ldr	pc, [ip, #2436]!	; 0x984

00000694 <__cxa_finalize@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #69632	; 0x11000
 69c:	ldr	pc, [ip, #2428]!	; 0x97c

000006a0 <rb_event_delete@plt>:
 6a0:	add	ip, pc, #0, 12
 6a4:	add	ip, ip, #69632	; 0x11000
 6a8:	ldr	pc, [ip, #2420]!	; 0x974

000006ac <free@plt>:
 6ac:	add	ip, pc, #0, 12
 6b0:	add	ip, ip, #69632	; 0x11000
 6b4:	ldr	pc, [ip, #2412]!	; 0x96c

000006b8 <rb_outofmemory@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #69632	; 0x11000
 6c0:	ldr	pc, [ip, #2404]!	; 0x964

000006c4 <user_mode@plt>:
 6c4:	add	ip, pc, #0, 12
 6c8:	add	ip, ip, #69632	; 0x11000
 6cc:	ldr	pc, [ip, #2396]!	; 0x95c

000006d0 <sendto_realops_snomask@plt>:
 6d0:	add	ip, pc, #0, 12
 6d4:	add	ip, ip, #69632	; 0x11000
 6d8:	ldr	pc, [ip, #2388]!	; 0x954

000006dc <find_umode_slot@plt>:
 6dc:	add	ip, pc, #0, 12
 6e0:	add	ip, ip, #69632	; 0x11000
 6e4:	ldr	pc, [ip, #2380]!	; 0x94c

000006e8 <get_oper_name@plt>:
 6e8:	add	ip, pc, #0, 12
 6ec:	add	ip, ip, #69632	; 0x11000
 6f0:	ldr	pc, [ip, #2372]!	; 0x944

000006f4 <__gmon_start__@plt>:
 6f4:	add	ip, pc, #0, 12
 6f8:	add	ip, ip, #69632	; 0x11000
 6fc:	ldr	pc, [ip, #2364]!	; 0x93c

00000700 <get_channel_access@plt>:
 700:	add	ip, pc, #0, 12
 704:	add	ip, ip, #69632	; 0x11000
 708:	ldr	pc, [ip, #2356]!	; 0x934

0000070c <sendto_one_notice@plt>:
 70c:	add	ip, pc, #0, 12
 710:	add	ip, ip, #69632	; 0x11000
 714:	ldr	pc, [ip, #2348]!	; 0x92c

00000718 <privilegeset_in_set@plt>:
 718:	add	ip, pc, #0, 12
 71c:	add	ip, ip, #69632	; 0x11000
 720:	ldr	pc, [ip, #2340]!	; 0x924

00000724 <construct_umodebuf@plt>:
 724:	add	ip, pc, #0, 12
 728:	add	ip, ip, #69632	; 0x11000
 72c:	ldr	pc, [ip, #2332]!	; 0x91c

Disassembly of section .text:

00000730 <call_weak_fn>:
     730:	ldr	r3, [pc, #20]	; 74c <call_weak_fn+0x1c>
     734:	ldr	r2, [pc, #20]	; 750 <call_weak_fn+0x20>
     738:	add	r3, pc, r3
     73c:	ldr	r2, [r3, r2]
     740:	cmp	r2, #0
     744:	bxeq	lr
     748:	b	6f4 <__gmon_start__@plt>
     74c:	.word	0x000118c0
     750:	.word	0x00000060

00000754 <deregister_tm_clones>:
     754:	ldr	r3, [pc, #52]	; 790 <deregister_tm_clones+0x3c>
     758:	ldr	r0, [pc, #52]	; 794 <deregister_tm_clones+0x40>
     75c:	add	r3, pc, r3
     760:	add	r0, pc, r0
     764:	add	r3, r3, #3
     768:	sub	r3, r3, r0
     76c:	cmp	r3, #6
     770:	ldr	r3, [pc, #32]	; 798 <deregister_tm_clones+0x44>
     774:	add	r3, pc, r3
     778:	bxls	lr
     77c:	ldr	r2, [pc, #24]	; 79c <deregister_tm_clones+0x48>
     780:	ldr	r3, [r3, r2]
     784:	cmp	r3, #0
     788:	bxeq	lr
     78c:	bx	r3
     790:	.word	0x0001198c
     794:	.word	0x00011988
     798:	.word	0x00011884
     79c:	.word	0x00000054

000007a0 <register_tm_clones>:
     7a0:	ldr	r1, [pc, #56]	; 7e0 <register_tm_clones+0x40>
     7a4:	ldr	r0, [pc, #56]	; 7e4 <register_tm_clones+0x44>
     7a8:	add	r1, pc, r1
     7ac:	add	r0, pc, r0
     7b0:	sub	r1, r1, r0
     7b4:	ldr	r3, [pc, #44]	; 7e8 <register_tm_clones+0x48>
     7b8:	asr	r1, r1, #2
     7bc:	add	r3, pc, r3
     7c0:	add	r1, r1, r1, lsr #31
     7c4:	asrs	r1, r1, #1
     7c8:	bxeq	lr
     7cc:	ldr	r2, [pc, #24]	; 7ec <register_tm_clones+0x4c>
     7d0:	ldr	r3, [r3, r2]
     7d4:	cmp	r3, #0
     7d8:	bxeq	lr
     7dc:	bx	r3
     7e0:	.word	0x00011940
     7e4:	.word	0x0001193c
     7e8:	.word	0x0001183c
     7ec:	.word	0x0000006c

000007f0 <__do_global_dtors_aux>:
     7f0:	ldr	r3, [pc, #76]	; 844 <__do_global_dtors_aux+0x54>
     7f4:	ldr	r2, [pc, #76]	; 848 <__do_global_dtors_aux+0x58>
     7f8:	add	r3, pc, r3
     7fc:	add	r2, pc, r2
     800:	ldrb	r3, [r3]
     804:	cmp	r3, #0
     808:	bxne	lr
     80c:	ldr	r3, [pc, #56]	; 84c <__do_global_dtors_aux+0x5c>
     810:	push	{r4, lr}
     814:	ldr	r3, [r2, r3]
     818:	cmp	r3, #0
     81c:	beq	82c <__do_global_dtors_aux+0x3c>
     820:	ldr	r3, [pc, #40]	; 850 <__do_global_dtors_aux+0x60>
     824:	ldr	r0, [pc, r3]
     828:	bl	694 <__cxa_finalize@plt>
     82c:	bl	754 <deregister_tm_clones>
     830:	ldr	r3, [pc, #28]	; 854 <__do_global_dtors_aux+0x64>
     834:	mov	r2, #1
     838:	add	r3, pc, r3
     83c:	strb	r2, [r3]
     840:	pop	{r4, pc}
     844:	.word	0x000118f0
     848:	.word	0x000117fc
     84c:	.word	0x0000004c
     850:	.word	0x00011844
     854:	.word	0x000118b0

00000858 <frame_dummy>:
     858:	ldr	r0, [pc, #56]	; 898 <frame_dummy+0x40>
     85c:	ldr	r3, [pc, #56]	; 89c <frame_dummy+0x44>
     860:	add	r0, pc, r0
     864:	ldr	r2, [r0]
     868:	add	r3, pc, r3
     86c:	cmp	r2, #0
     870:	bne	878 <frame_dummy+0x20>
     874:	b	7a0 <register_tm_clones>
     878:	ldr	r2, [pc, #32]	; 8a0 <frame_dummy+0x48>
     87c:	ldr	r3, [r3, r2]
     880:	cmp	r3, #0
     884:	beq	874 <frame_dummy+0x1c>
     888:	push	{r4, lr}
     88c:	blx	r3
     890:	pop	{r4, lr}
     894:	b	7a0 <register_tm_clones>
     898:	.word	0x00011694
     89c:	.word	0x00011790
     8a0:	.word	0x00000064

000008a4 <expire_override_deadlines>:
     8a4:	ldr	r3, [pc, #164]	; 950 <expire_override_deadlines+0xac>
     8a8:	ldr	r2, [pc, #164]	; 954 <expire_override_deadlines+0xb0>
     8ac:	add	r3, pc, r3
     8b0:	ldr	r3, [r3, r2]
     8b4:	ldr	r3, [r3]
     8b8:	cmp	r3, #0
     8bc:	bxeq	lr
     8c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     8c4:	sub	sp, sp, #16
     8c8:	ldr	sl, [pc, #136]	; 958 <expire_override_deadlines+0xb4>
     8cc:	ldr	r4, [r3, #8]
     8d0:	add	sl, pc, sl
     8d4:	mov	r9, #0
     8d8:	mov	r8, sp
     8dc:	mov	r7, #3
     8e0:	b	8f4 <expire_override_deadlines+0x50>
     8e4:	cmp	r4, #0
     8e8:	beq	948 <expire_override_deadlines+0xa4>
     8ec:	mov	r3, r4
     8f0:	ldr	r4, [r4, #8]
     8f4:	ldr	r5, [r3]
     8f8:	ldr	r6, [r5, #16]
     8fc:	bl	67c <rb_current_time@plt>
     900:	cmp	r6, r0
     904:	bgt	948 <expire_override_deadlines+0xa4>
     908:	ldr	r6, [r5, #16]
     90c:	bl	67c <rb_current_time@plt>
     910:	cmp	r6, r0
     914:	bge	8e4 <expire_override_deadlines+0x40>
     918:	ldr	r1, [r5, #12]
     91c:	mov	r3, r8
     920:	add	ip, r1, #88	; 0x58
     924:	mov	r0, r1
     928:	mov	r2, r7
     92c:	str	sl, [sp, #8]
     930:	str	r9, [sp, #12]
     934:	str	ip, [sp]
     938:	str	ip, [sp, #4]
     93c:	bl	6c4 <user_mode@plt>
     940:	cmp	r4, #0
     944:	bne	8ec <expire_override_deadlines+0x48>
     948:	add	sp, sp, #16
     94c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
     950:	.word	0x0001174c
     954:	.word	0x00000050
     958:	.word	0x000009a4

0000095c <_moddeinit>:
     95c:	push	{r4, r5, r6, r7, r8, lr}
     960:	mov	r8, #0
     964:	ldr	r6, [pc, #156]	; a08 <_moddeinit+0xac>
     968:	ldr	r3, [pc, #156]	; a0c <_moddeinit+0xb0>
     96c:	add	r6, pc, r6
     970:	ldr	r3, [r6, r3]
     974:	str	r8, [r3, #448]	; 0x1c0
     978:	bl	724 <construct_umodebuf@plt>
     97c:	ldr	r3, [pc, #140]	; a10 <_moddeinit+0xb4>
     980:	ldr	r7, [r6, r3]
     984:	ldr	r3, [r7]
     988:	cmp	r3, r8
     98c:	beq	9f4 <_moddeinit+0x98>
     990:	ldr	r4, [r3, #8]
     994:	mov	r5, r4
     998:	b	9a8 <_moddeinit+0x4c>
     99c:	ldr	r4, [r4, #8]
     9a0:	mov	r3, r5
     9a4:	mov	r5, r4
     9a8:	ldr	r2, [r3, #4]
     9ac:	cmp	r4, #0
     9b0:	strne	r2, [r4, #4]
     9b4:	ldrne	r2, [r3, #4]
     9b8:	streq	r2, [r7, #4]
     9bc:	cmp	r2, #0
     9c0:	strne	r4, [r2, #8]
     9c4:	ldr	r1, [r3]
     9c8:	ldr	r2, [r7, #8]
     9cc:	streq	r4, [r7]
     9d0:	sub	r2, r2, #1
     9d4:	subs	r0, r1, #0
     9d8:	str	r8, [r3, #4]
     9dc:	str	r8, [r3, #8]
     9e0:	str	r2, [r7, #8]
     9e4:	beq	9ec <_moddeinit+0x90>
     9e8:	bl	6ac <free@plt>
     9ec:	cmp	r4, #0
     9f0:	bne	99c <_moddeinit+0x40>
     9f4:	ldr	r3, [pc, #24]	; a14 <_moddeinit+0xb8>
     9f8:	ldr	r3, [r6, r3]
     9fc:	pop	{r4, r5, r6, r7, r8, lr}
     a00:	ldr	r0, [r3]
     a04:	b	6a0 <rb_event_delete@plt>
     a08:	.word	0x0001168c
     a0c:	.word	0x0000005c
     a10:	.word	0x00000050
     a14:	.word	0x00000058

00000a18 <update_session_deadline.constprop.5>:
     a18:	ldr	r3, [pc, #220]	; afc <update_session_deadline.constprop.5+0xe4>
     a1c:	ldr	r2, [pc, #220]	; b00 <update_session_deadline.constprop.5+0xe8>
     a20:	add	r3, pc, r3
     a24:	push	{r4, r5, r6, lr}
     a28:	mov	r5, r0
     a2c:	ldr	r6, [r3, r2]
     a30:	ldr	r3, [r6]
     a34:	cmp	r3, #0
     a38:	beq	a6c <update_session_deadline.constprop.5+0x54>
     a3c:	ldr	r4, [r3]
     a40:	ldr	r2, [r4, #12]
     a44:	cmp	r0, r2
     a48:	bne	a60 <update_session_deadline.constprop.5+0x48>
     a4c:	b	a88 <update_session_deadline.constprop.5+0x70>
     a50:	ldr	r4, [r3]
     a54:	ldr	r2, [r4, #12]
     a58:	cmp	r2, r5
     a5c:	beq	a88 <update_session_deadline.constprop.5+0x70>
     a60:	ldr	r3, [r3, #8]
     a64:	cmp	r3, #0
     a68:	bne	a50 <update_session_deadline.constprop.5+0x38>
     a6c:	mov	r1, #20
     a70:	mov	r0, #1
     a74:	bl	670 <calloc@plt>
     a78:	cmp	r0, #0
     a7c:	movne	r4, r0
     a80:	strne	r5, [r0, #12]
     a84:	beq	af8 <update_session_deadline.constprop.5+0xe0>
     a88:	bl	67c <rb_current_time@plt>
     a8c:	ldr	r3, [r4, #8]
     a90:	ldr	r2, [r4, #4]
     a94:	cmp	r3, #0
     a98:	streq	r2, [r6, #4]
     a9c:	mov	r1, #0
     aa0:	add	r0, r0, #1792	; 0x700
     aa4:	add	r0, r0, #8
     aa8:	str	r0, [r4, #16]
     aac:	strne	r2, [r3, #4]
     ab0:	ldrne	r2, [r4, #4]
     ab4:	cmp	r2, #0
     ab8:	strne	r3, [r2, #8]
     abc:	ldrne	r3, [r6]
     ac0:	ldr	r2, [r6, #8]
     ac4:	cmp	r3, #0
     ac8:	str	r1, [r4, #4]
     acc:	str	r4, [r4]
     ad0:	str	r3, [r4, #8]
     ad4:	strne	r4, [r3, #4]
     ad8:	beq	ae8 <update_session_deadline.constprop.5+0xd0>
     adc:	str	r4, [r6]
     ae0:	str	r2, [r6, #8]
     ae4:	pop	{r4, r5, r6, pc}
     ae8:	ldr	r3, [r6, #4]
     aec:	cmp	r3, #0
     af0:	streq	r4, [r6, #4]
     af4:	b	adc <update_session_deadline.constprop.5+0xc4>
     af8:	bl	6b8 <rb_outofmemory@plt>
     afc:	.word	0x000115d8
     b00:	.word	0x00000050

00000b04 <_modinit>:
     b04:	push	{r4, r5, r6, lr}
     b08:	bl	6dc <find_umode_slot@plt>
     b0c:	ldr	r5, [pc, #160]	; bb4 <_modinit+0xb0>
     b10:	ldr	r3, [pc, #160]	; bb8 <_modinit+0xb4>
     b14:	add	r5, pc, r5
     b18:	ldr	r6, [r5, r3]
     b1c:	str	r0, [r6, #448]	; 0x1c0
     b20:	bl	724 <construct_umodebuf@plt>
     b24:	ldr	r3, [pc, #144]	; bbc <_modinit+0xb8>
     b28:	ldr	r3, [r5, r3]
     b2c:	ldr	r4, [r3]
     b30:	cmp	r4, #0
     b34:	bne	b48 <_modinit+0x44>
     b38:	b	b84 <_modinit+0x80>
     b3c:	ldr	r4, [r4, #8]
     b40:	cmp	r4, #0
     b44:	beq	b84 <_modinit+0x80>
     b48:	ldr	r0, [r4]
     b4c:	ldrh	r3, [r0, #80]	; 0x50
     b50:	cmp	r3, #64	; 0x40
     b54:	bne	b3c <_modinit+0x38>
     b58:	ldr	r3, [r0, #24]
     b5c:	cmp	r3, #0
     b60:	beq	b3c <_modinit+0x38>
     b64:	ldr	r2, [r0, #56]	; 0x38
     b68:	ldr	r3, [r6, #448]	; 0x1c0
     b6c:	tst	r2, r3
     b70:	beq	b3c <_modinit+0x38>
     b74:	bl	a18 <update_session_deadline.constprop.5>
     b78:	ldr	r4, [r4, #8]
     b7c:	cmp	r4, #0
     b80:	bne	b48 <_modinit+0x44>
     b84:	ldr	r1, [pc, #52]	; bc0 <_modinit+0xbc>
     b88:	ldr	r0, [pc, #52]	; bc4 <_modinit+0xc0>
     b8c:	mov	r3, #60	; 0x3c
     b90:	mov	r2, #0
     b94:	add	r1, pc, r1
     b98:	add	r0, pc, r0
     b9c:	bl	688 <rb_event_add@plt>
     ba0:	ldr	r3, [pc, #32]	; bc8 <_modinit+0xc4>
     ba4:	ldr	r3, [r5, r3]
     ba8:	str	r0, [r3]
     bac:	mov	r0, #0
     bb0:	pop	{r4, r5, r6, pc}
     bb4:	.word	0x000114e4
     bb8:	.word	0x0000005c
     bbc:	.word	0x00000068
     bc0:	.word	0xfffffd08
     bc4:	.word	0x000006e0
     bc8:	.word	0x00000058

00000bcc <check_umode_change>:
     bcc:	push	{r4, r5, r6, r7, r8, lr}
     bd0:	ldr	r4, [r0]
     bd4:	ldr	r1, [pc, #348]	; d38 <check_umode_change+0x16c>
     bd8:	ldrd	r2, [r4, #64]	; 0x40
     bdc:	mov	r3, #0
     be0:	add	r1, pc, r1
     be4:	and	r2, r2, #8192	; 0x2000
     be8:	orrs	r3, r2, r3
     bec:	popeq	{r4, r5, r6, r7, r8, pc}
     bf0:	ldrh	r3, [r4, #80]	; 0x50
     bf4:	cmp	r3, #64	; 0x40
     bf8:	popne	{r4, r5, r6, r7, r8, pc}
     bfc:	ldr	r3, [r0, #4]
     c00:	tst	r3, #4096	; 0x1000
     c04:	bne	c68 <check_umode_change+0x9c>
     c08:	ldr	r0, [pc, #300]	; d3c <check_umode_change+0x170>
     c0c:	ldr	r2, [r4, #56]	; 0x38
     c10:	ldr	r6, [r1, r0]
     c14:	ldr	r5, [r6, #448]	; 0x1c0
     c18:	eor	r3, r3, r2
     c1c:	ands	r2, r5, r2
     c20:	and	r5, r5, r3
     c24:	beq	c88 <check_umode_change+0xbc>
     c28:	ldr	r3, [r4, #24]
     c2c:	cmp	r3, #0
     c30:	beq	d14 <check_umode_change+0x148>
     c34:	ldr	r0, [r3, #36]	; 0x24
     c38:	cmp	r0, #0
     c3c:	beq	d14 <check_umode_change+0x148>
     c40:	ldr	r1, [pc, #248]	; d40 <check_umode_change+0x174>
     c44:	add	r1, pc, r1
     c48:	bl	718 <privilegeset_in_set@plt>
     c4c:	cmp	r0, #0
     c50:	beq	d14 <check_umode_change+0x148>
     c54:	cmp	r5, #0
     c58:	popeq	{r4, r5, r6, r7, r8, pc}
     c5c:	mov	r0, r4
     c60:	pop	{r4, r5, r6, r7, r8, lr}
     c64:	b	a18 <update_session_deadline.constprop.5>
     c68:	ldr	r0, [pc, #204]	; d3c <check_umode_change+0x170>
     c6c:	ldr	r2, [r4, #56]	; 0x38
     c70:	ldr	r6, [r1, r0]
     c74:	tst	r2, #4096	; 0x1000
     c78:	ldreq	r0, [r6, #448]	; 0x1c0
     c7c:	biceq	r2, r2, r0
     c80:	streq	r2, [r4, #56]	; 0x38
     c84:	b	c14 <check_umode_change+0x48>
     c88:	cmp	r5, #0
     c8c:	popeq	{r4, r5, r6, r7, r8, pc}
     c90:	ldr	r3, [pc, #172]	; d44 <check_umode_change+0x178>
     c94:	ldr	r8, [r1, r3]
     c98:	ldr	r3, [r8]
     c9c:	cmp	r3, #0
     ca0:	popeq	{r4, r5, r6, r7, r8, pc}
     ca4:	ldr	r5, [r3, #8]
     ca8:	mov	r6, r2
     cac:	mov	r7, r5
     cb0:	b	cc8 <check_umode_change+0xfc>
     cb4:	cmp	r5, #0
     cb8:	popeq	{r4, r5, r6, r7, r8, pc}
     cbc:	ldr	r5, [r5, #8]
     cc0:	mov	r3, r7
     cc4:	mov	r7, r5
     cc8:	ldr	r0, [r3]
     ccc:	ldr	r2, [r0, #12]
     cd0:	cmp	r4, r2
     cd4:	bne	cb4 <check_umode_change+0xe8>
     cd8:	ldr	r2, [r3, #4]
     cdc:	cmp	r5, #0
     ce0:	strne	r2, [r5, #4]
     ce4:	ldrne	r2, [r3, #4]
     ce8:	streq	r2, [r8, #4]
     cec:	cmp	r2, #0
     cf0:	strne	r5, [r2, #8]
     cf4:	ldr	r2, [r8, #8]
     cf8:	str	r6, [r3, #4]
     cfc:	str	r6, [r3, #8]
     d00:	sub	r3, r2, #1
     d04:	streq	r5, [r8]
     d08:	str	r3, [r8, #8]
     d0c:	bl	6ac <free@plt>
     d10:	b	cb4 <check_umode_change+0xe8>
     d14:	ldr	r1, [pc, #44]	; d48 <check_umode_change+0x17c>
     d18:	mov	r0, r4
     d1c:	add	r1, pc, r1
     d20:	bl	70c <sendto_one_notice@plt>
     d24:	ldr	r2, [r6, #448]	; 0x1c0
     d28:	ldr	r3, [r4, #56]	; 0x38
     d2c:	bic	r3, r3, r2
     d30:	str	r3, [r4, #56]	; 0x38
     d34:	pop	{r4, r5, r6, r7, r8, pc}
     d38:	.word	0x00011418
     d3c:	.word	0x0000005c
     d40:	.word	0x00000680
     d44:	.word	0x00000050
     d48:	.word	0x00000578

00000d4c <hack_can_kick>:
     d4c:	push	{r4, lr}
     d50:	sub	sp, sp, #8
     d54:	mov	ip, #0
     d58:	ldr	r3, [r0, #20]
     d5c:	mov	r4, r0
     d60:	ldm	r0, {r0, r1, r2}
     d64:	str	ip, [sp]
     d68:	bl	700 <get_channel_access@plt>
     d6c:	ldr	r3, [pc, #112]	; de4 <hack_can_kick+0x98>
     d70:	add	r3, pc, r3
     d74:	cmp	r0, #4
     d78:	beq	d84 <hack_can_kick+0x38>
     d7c:	add	sp, sp, #8
     d80:	pop	{r4, pc}
     d84:	ldr	r2, [pc, #92]	; de8 <hack_can_kick+0x9c>
     d88:	ldr	r0, [r4]
     d8c:	ldr	r3, [r3, r2]
     d90:	ldr	r2, [r0, #56]	; 0x38
     d94:	ldr	r3, [r3, #448]	; 0x1c0
     d98:	tst	r2, r3
     d9c:	beq	d7c <hack_can_kick+0x30>
     da0:	bl	a18 <update_session_deadline.constprop.5>
     da4:	ldr	r0, [r4]
     da8:	bl	6e8 <get_oper_name@plt>
     dac:	ldr	r2, [r4, #4]
     db0:	ldr	r3, [r4, #12]
     db4:	mov	r1, #256	; 0x100
     db8:	add	r3, r3, #88	; 0x58
     dbc:	str	r3, [sp, #4]
     dc0:	ldr	r3, [r2, #236]	; 0xec
     dc4:	ldr	r2, [pc, #32]	; dec <hack_can_kick+0xa0>
     dc8:	str	r3, [sp]
     dcc:	add	r2, pc, r2
     dd0:	mov	r3, r0
     dd4:	mov	r0, r1
     dd8:	bl	6d0 <sendto_realops_snomask@plt>
     ddc:	add	sp, sp, #8
     de0:	pop	{r4, pc}
     de4:	.word	0x00011288
     de8:	.word	0x0000005c
     dec:	.word	0x00000508

00000df0 <hack_can_send>:
     df0:	ldr	r2, [r0, #20]
     df4:	ldr	r3, [pc, #164]	; ea0 <hack_can_send+0xb0>
     df8:	cmp	r2, #0
     dfc:	add	r3, pc, r3
     e00:	bxeq	lr
     e04:	ldr	r2, [r0, #16]
     e08:	sub	r2, r2, #1
     e0c:	cmp	r2, #1
     e10:	bxls	lr
     e14:	ldr	r2, [pc, #136]	; ea4 <hack_can_send+0xb4>
     e18:	ldr	r1, [r0]
     e1c:	ldr	r3, [r3, r2]
     e20:	ldr	r2, [r1, #56]	; 0x38
     e24:	ldr	r3, [r3, #448]	; 0x1c0
     e28:	tst	r2, r3
     e2c:	bxeq	lr
     e30:	ldrd	r2, [r1, #64]	; 0x40
     e34:	mov	r3, #0
     e38:	mov	ip, #1
     e3c:	and	r2, r2, #8192	; 0x2000
     e40:	orrs	r3, r2, r3
     e44:	str	ip, [r0, #16]
     e48:	bxeq	lr
     e4c:	ldrh	r3, [r1, #80]	; 0x50
     e50:	cmp	r3, #64	; 0x40
     e54:	bxne	lr
     e58:	push	{r4, lr}
     e5c:	mov	r4, r0
     e60:	sub	sp, sp, #8
     e64:	mov	r0, r1
     e68:	bl	a18 <update_session_deadline.constprop.5>
     e6c:	ldr	r0, [r4]
     e70:	bl	6e8 <get_oper_name@plt>
     e74:	ldr	r3, [r4, #4]
     e78:	ldr	r2, [pc, #40]	; ea8 <hack_can_send+0xb8>
     e7c:	mov	r1, #256	; 0x100
     e80:	ldr	r3, [r3, #236]	; 0xec
     e84:	add	r2, pc, r2
     e88:	str	r3, [sp]
     e8c:	mov	r3, r0
     e90:	mov	r0, r1
     e94:	bl	6d0 <sendto_realops_snomask@plt>
     e98:	add	sp, sp, #8
     e9c:	pop	{r4, pc}
     ea0:	.word	0x000111fc
     ea4:	.word	0x0000005c
     ea8:	.word	0x0000047c

00000eac <handle_client_exit>:
     eac:	ldr	r3, [pc, #148]	; f48 <handle_client_exit+0x9c>
     eb0:	ldr	r2, [pc, #148]	; f4c <handle_client_exit+0xa0>
     eb4:	add	r3, pc, r3
     eb8:	push	{r4, r5, r6, r7, r8, lr}
     ebc:	ldr	r7, [r3, r2]
     ec0:	ldr	r6, [r0, #4]
     ec4:	ldr	r3, [r7]
     ec8:	cmp	r3, #0
     ecc:	popeq	{r4, r5, r6, r7, r8, pc}
     ed0:	ldr	r4, [r3, #8]
     ed4:	mov	r8, #0
     ed8:	mov	r5, r4
     edc:	b	ef4 <handle_client_exit+0x48>
     ee0:	cmp	r4, #0
     ee4:	popeq	{r4, r5, r6, r7, r8, pc}
     ee8:	ldr	r4, [r4, #8]
     eec:	mov	r3, r5
     ef0:	mov	r5, r4
     ef4:	ldr	r0, [r3]
     ef8:	ldr	r2, [r0, #12]
     efc:	cmp	r6, r2
     f00:	bne	ee0 <handle_client_exit+0x34>
     f04:	ldr	r2, [r3, #4]
     f08:	cmp	r4, #0
     f0c:	strne	r2, [r4, #4]
     f10:	ldrne	r2, [r3, #4]
     f14:	streq	r2, [r7, #4]
     f18:	cmp	r2, #0
     f1c:	strne	r4, [r2, #8]
     f20:	ldr	r2, [r7, #8]
     f24:	str	r8, [r3, #4]
     f28:	str	r8, [r3, #8]
     f2c:	sub	r3, r2, #1
     f30:	streq	r4, [r7]
     f34:	str	r3, [r7, #8]
     f38:	bl	6ac <free@plt>
     f3c:	cmp	r4, #0
     f40:	bne	ee8 <handle_client_exit+0x3c>
     f44:	pop	{r4, r5, r6, r7, r8, pc}
     f48:	.word	0x00011144
     f4c:	.word	0x00000050

00000f50 <hack_can_join>:
     f50:	ldr	r2, [r0, #8]
     f54:	ldr	r3, [pc, #308]	; 1090 <hack_can_join+0x140>
     f58:	cmp	r2, #0
     f5c:	add	r3, pc, r3
     f60:	bxeq	lr
     f64:	ldr	r2, [pc, #296]	; 1094 <hack_can_join+0x144>
     f68:	push	{r4, r5, r6, r7, lr}
     f6c:	sub	sp, sp, #12
     f70:	ldr	r5, [r0]
     f74:	ldr	r2, [r3, r2]
     f78:	ldr	r1, [r5, #56]	; 0x38
     f7c:	ldr	r2, [r2, #448]	; 0x1c0
     f80:	tst	r1, r2
     f84:	bne	f90 <hack_can_join+0x40>
     f88:	add	sp, sp, #12
     f8c:	pop	{r4, r5, r6, r7, pc}
     f90:	ldr	r2, [pc, #256]	; 1098 <hack_can_join+0x148>
     f94:	mov	r6, r0
     f98:	ldr	r7, [r3, r2]
     f9c:	ldr	r3, [r7]
     fa0:	cmp	r3, #0
     fa4:	bne	fb8 <hack_can_join+0x68>
     fa8:	b	1070 <hack_can_join+0x120>
     fac:	ldr	r3, [r3, #8]
     fb0:	cmp	r3, #0
     fb4:	beq	1070 <hack_can_join+0x120>
     fb8:	ldr	r4, [r3]
     fbc:	ldr	r2, [r4, #12]
     fc0:	cmp	r5, r2
     fc4:	bne	fac <hack_can_join+0x5c>
     fc8:	bl	67c <rb_current_time@plt>
     fcc:	ldr	r3, [r4, #8]
     fd0:	ldr	r2, [r4, #4]
     fd4:	cmp	r3, #0
     fd8:	streq	r2, [r7, #4]
     fdc:	mov	r1, #0
     fe0:	add	r0, r0, #1792	; 0x700
     fe4:	add	r0, r0, #8
     fe8:	str	r0, [r4, #16]
     fec:	strne	r2, [r3, #4]
     ff0:	ldrne	r2, [r4, #4]
     ff4:	cmp	r2, #0
     ff8:	strne	r3, [r2, #8]
     ffc:	ldrne	r3, [r7]
    1000:	ldr	r2, [r7, #8]
    1004:	cmp	r3, #0
    1008:	str	r1, [r4, #4]
    100c:	str	r4, [r4]
    1010:	str	r3, [r4, #8]
    1014:	strne	r4, [r3, #4]
    1018:	beq	1060 <hack_can_join+0x110>
    101c:	mov	r3, #0
    1020:	str	r2, [r7, #8]
    1024:	ldr	r0, [r6]
    1028:	str	r3, [r6, #8]
    102c:	str	r4, [r7]
    1030:	bl	6e8 <get_oper_name@plt>
    1034:	ldr	r3, [r6, #4]
    1038:	ldr	r2, [pc, #92]	; 109c <hack_can_join+0x14c>
    103c:	mov	r1, #256	; 0x100
    1040:	ldr	r3, [r3, #236]	; 0xec
    1044:	add	r2, pc, r2
    1048:	str	r3, [sp]
    104c:	mov	r3, r0
    1050:	mov	r0, r1
    1054:	bl	6d0 <sendto_realops_snomask@plt>
    1058:	add	sp, sp, #12
    105c:	pop	{r4, r5, r6, r7, pc}
    1060:	ldr	r3, [r7, #4]
    1064:	cmp	r3, #0
    1068:	streq	r4, [r7, #4]
    106c:	b	101c <hack_can_join+0xcc>
    1070:	mov	r1, #20
    1074:	mov	r0, #1
    1078:	bl	670 <calloc@plt>
    107c:	cmp	r0, #0
    1080:	movne	r4, r0
    1084:	strne	r5, [r0, #12]
    1088:	bne	fc8 <hack_can_join+0x78>
    108c:	bl	6b8 <rb_outofmemory@plt>
    1090:	.word	0x0001109c
    1094:	.word	0x0000005c
    1098:	.word	0x00000050
    109c:	.word	0x000002f0

000010a0 <hack_channel_access>:
    10a0:	ldr	r2, [r0, #20]
    10a4:	ldr	r3, [pc, #340]	; 1200 <hack_channel_access+0x160>
    10a8:	cmp	r2, #0
    10ac:	add	r3, pc, r3
    10b0:	bxeq	lr
    10b4:	ldr	r2, [r0, #16]
    10b8:	cmp	r2, #2
    10bc:	bxeq	lr
    10c0:	ldr	r2, [pc, #316]	; 1204 <hack_channel_access+0x164>
    10c4:	push	{r4, r5, r6, r7, lr}
    10c8:	sub	sp, sp, #12
    10cc:	ldr	r6, [r0]
    10d0:	ldr	r2, [r3, r2]
    10d4:	ldr	r1, [r6, #56]	; 0x38
    10d8:	ldr	r2, [r2, #448]	; 0x1c0
    10dc:	tst	r1, r2
    10e0:	bne	10ec <hack_channel_access+0x4c>
    10e4:	add	sp, sp, #12
    10e8:	pop	{r4, r5, r6, r7, pc}
    10ec:	ldr	r2, [pc, #276]	; 1208 <hack_channel_access+0x168>
    10f0:	mov	r5, r0
    10f4:	ldr	r7, [r3, r2]
    10f8:	ldr	r3, [r7]
    10fc:	cmp	r3, #0
    1100:	bne	1114 <hack_channel_access+0x74>
    1104:	b	11d0 <hack_channel_access+0x130>
    1108:	ldr	r3, [r3, #8]
    110c:	cmp	r3, #0
    1110:	beq	11d0 <hack_channel_access+0x130>
    1114:	ldr	r4, [r3]
    1118:	ldr	r2, [r4, #12]
    111c:	cmp	r6, r2
    1120:	bne	1108 <hack_channel_access+0x68>
    1124:	bl	67c <rb_current_time@plt>
    1128:	ldr	r3, [r4, #8]
    112c:	ldr	r2, [r4, #4]
    1130:	cmp	r3, #0
    1134:	streq	r2, [r7, #4]
    1138:	mov	r1, #0
    113c:	add	r0, r0, #1792	; 0x700
    1140:	add	r0, r0, #8
    1144:	str	r0, [r4, #16]
    1148:	strne	r2, [r3, #4]
    114c:	ldrne	r2, [r4, #4]
    1150:	cmp	r2, #0
    1154:	strne	r3, [r2, #8]
    1158:	ldrne	r3, [r7]
    115c:	ldr	r2, [r7, #8]
    1160:	cmp	r3, #0
    1164:	str	r1, [r4, #4]
    1168:	str	r4, [r4]
    116c:	str	r3, [r4, #8]
    1170:	strne	r4, [r3, #4]
    1174:	beq	11f0 <hack_channel_access+0x150>
    1178:	ldr	r1, [r5, #24]
    117c:	mov	r3, #4
    1180:	cmp	r1, #0
    1184:	str	r4, [r7]
    1188:	str	r2, [r7, #8]
    118c:	str	r3, [r5, #16]
    1190:	beq	10e4 <hack_channel_access+0x44>
    1194:	ldr	r0, [r5]
    1198:	bl	6e8 <get_oper_name@plt>
    119c:	ldr	r3, [r5, #4]
    11a0:	ldr	r2, [r5, #24]
    11a4:	mov	r1, #256	; 0x100
    11a8:	str	r2, [sp, #4]
    11ac:	ldr	r2, [pc, #88]	; 120c <hack_channel_access+0x16c>
    11b0:	ldr	r3, [r3, #236]	; 0xec
    11b4:	add	r2, pc, r2
    11b8:	str	r3, [sp]
    11bc:	mov	r3, r0
    11c0:	mov	r0, r1
    11c4:	bl	6d0 <sendto_realops_snomask@plt>
    11c8:	add	sp, sp, #12
    11cc:	pop	{r4, r5, r6, r7, pc}
    11d0:	mov	r1, #20
    11d4:	mov	r0, #1
    11d8:	bl	670 <calloc@plt>
    11dc:	cmp	r0, #0
    11e0:	movne	r4, r0
    11e4:	strne	r6, [r0, #12]
    11e8:	bne	1124 <hack_channel_access+0x84>
    11ec:	bl	6b8 <rb_outofmemory@plt>
    11f0:	ldr	r3, [r7, #4]
    11f4:	cmp	r3, #0
    11f8:	streq	r4, [r7, #4]
    11fc:	b	1178 <hack_channel_access+0xd8>
    1200:	.word	0x00010f4c
    1204:	.word	0x0000005c
    1208:	.word	0x00000050
    120c:	.word	0x000001b0

Disassembly of section .fini:

00001210 <_fini>:
    1210:	push	{r3, lr}
    1214:	pop	{r3, pc}
