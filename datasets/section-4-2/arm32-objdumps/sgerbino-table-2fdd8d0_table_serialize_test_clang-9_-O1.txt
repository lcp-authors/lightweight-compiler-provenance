
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf32-littlearm


Disassembly of section .init:

00011f60 <.init>:
   11f60:	push	{r3, lr}
   11f64:	bl	1207c <_start@@Base+0x3c>
   11f68:	pop	{r3, pc}

Disassembly of section .plt:

00011f6c <strcmp@plt-0x14>:
   11f6c:	push	{lr}		; (str lr, [sp, #-4]!)
   11f70:	ldr	lr, [pc, #4]	; 11f7c <strcmp@plt-0x4>
   11f74:	add	lr, pc, lr
   11f78:	ldr	pc, [lr, #8]!
   11f7c:	andeq	r4, r1, r4, lsl #1

00011f80 <strcmp@plt>:
   11f80:	add	ip, pc, #0, 12
   11f84:	add	ip, ip, #20, 20	; 0x14000
   11f88:	ldr	pc, [ip, #132]!	; 0x84

00011f8c <printf@plt>:
   11f8c:	add	ip, pc, #0, 12
   11f90:	add	ip, ip, #20, 20	; 0x14000
   11f94:	ldr	pc, [ip, #124]!	; 0x7c

00011f98 <free@plt>:
   11f98:	add	ip, pc, #0, 12
   11f9c:	add	ip, ip, #20, 20	; 0x14000
   11fa0:	ldr	pc, [ip, #116]!	; 0x74

00011fa4 <time@plt>:
   11fa4:	add	ip, pc, #0, 12
   11fa8:	add	ip, ip, #20, 20	; 0x14000
   11fac:	ldr	pc, [ip, #108]!	; 0x6c

00011fb0 <realloc@plt>:
   11fb0:	add	ip, pc, #0, 12
   11fb4:	add	ip, ip, #20, 20	; 0x14000
   11fb8:	ldr	pc, [ip, #100]!	; 0x64

00011fbc <strcpy@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #20, 20	; 0x14000
   11fc4:	ldr	pc, [ip, #92]!	; 0x5c

00011fc8 <malloc@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #20, 20	; 0x14000
   11fd0:	ldr	pc, [ip, #84]!	; 0x54

00011fd4 <__libc_start_main@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #20, 20	; 0x14000
   11fdc:	ldr	pc, [ip, #76]!	; 0x4c

00011fe0 <__gmon_start__@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #20, 20	; 0x14000
   11fe8:	ldr	pc, [ip, #68]!	; 0x44

00011fec <strlen@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #20, 20	; 0x14000
   11ff4:	ldr	pc, [ip, #60]!	; 0x3c

00011ff8 <srand@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #20, 20	; 0x14000
   12000:	ldr	pc, [ip, #52]!	; 0x34

00012004 <snprintf@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #20, 20	; 0x14000
   1200c:	ldr	pc, [ip, #44]!	; 0x2c

00012010 <__isoc99_sscanf@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #20, 20	; 0x14000
   12018:	ldr	pc, [ip, #36]!	; 0x24

0001201c <strncpy@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #20, 20	; 0x14000
   12024:	ldr	pc, [ip, #28]!

00012028 <rand@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #20, 20	; 0x14000
   12030:	ldr	pc, [ip, #20]!

00012034 <abort@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #20, 20	; 0x14000
   1203c:	ldr	pc, [ip, #12]!

Disassembly of section .text:

00012040 <_start@@Base>:
   12040:	mov	fp, #0
   12044:	mov	lr, #0
   12048:	pop	{r1}		; (ldr r1, [sp], #4)
   1204c:	mov	r2, sp
   12050:	push	{r2}		; (str r2, [sp, #-4]!)
   12054:	push	{r0}		; (str r0, [sp, #-4]!)
   12058:	ldr	ip, [pc, #16]	; 12070 <_start@@Base+0x30>
   1205c:	push	{ip}		; (str ip, [sp, #-4]!)
   12060:	ldr	r0, [pc, #12]	; 12074 <_start@@Base+0x34>
   12064:	ldr	r3, [pc, #12]	; 12078 <_start@@Base+0x38>
   12068:	bl	11fd4 <__libc_start_main@plt>
   1206c:	bl	12034 <abort@plt>
   12070:	andeq	r5, r1, r0, ror #17
   12074:	andeq	r2, r1, r0, lsr r1
   12078:	andeq	r5, r1, r0, lsl #17
   1207c:	ldr	r3, [pc, #20]	; 12098 <_start@@Base+0x58>
   12080:	ldr	r2, [pc, #20]	; 1209c <_start@@Base+0x5c>
   12084:	add	r3, pc, r3
   12088:	ldr	r2, [r3, r2]
   1208c:	cmp	r2, #0
   12090:	bxeq	lr
   12094:	b	11fe0 <__gmon_start__@plt>
   12098:	andeq	r3, r1, r4, ror pc
   1209c:	andeq	r0, r0, ip, asr #32
   120a0:	ldr	r0, [pc, #24]	; 120c0 <_start@@Base+0x80>
   120a4:	ldr	r3, [pc, #24]	; 120c4 <_start@@Base+0x84>
   120a8:	cmp	r3, r0
   120ac:	bxeq	lr
   120b0:	ldr	r3, [pc, #16]	; 120c8 <_start@@Base+0x88>
   120b4:	cmp	r3, #0
   120b8:	bxeq	lr
   120bc:	bx	r3
   120c0:	andeq	r6, r2, r8, asr r0
   120c4:	andeq	r6, r2, r8, asr r0
   120c8:	andeq	r0, r0, r0
   120cc:	ldr	r0, [pc, #36]	; 120f8 <_start@@Base+0xb8>
   120d0:	ldr	r1, [pc, #36]	; 120fc <_start@@Base+0xbc>
   120d4:	sub	r1, r1, r0
   120d8:	asr	r1, r1, #2
   120dc:	add	r1, r1, r1, lsr #31
   120e0:	asrs	r1, r1, #1
   120e4:	bxeq	lr
   120e8:	ldr	r3, [pc, #16]	; 12100 <_start@@Base+0xc0>
   120ec:	cmp	r3, #0
   120f0:	bxeq	lr
   120f4:	bx	r3
   120f8:	andeq	r6, r2, r8, asr r0
   120fc:	andeq	r6, r2, r8, asr r0
   12100:	andeq	r0, r0, r0
   12104:	push	{r4, lr}
   12108:	ldr	r4, [pc, #24]	; 12128 <_start@@Base+0xe8>
   1210c:	ldrb	r3, [r4]
   12110:	cmp	r3, #0
   12114:	popne	{r4, pc}
   12118:	bl	120a0 <_start@@Base+0x60>
   1211c:	mov	r3, #1
   12120:	strb	r3, [r4]
   12124:	pop	{r4, pc}
   12128:	andeq	r6, r2, r8, asr r0
   1212c:	b	120cc <_start@@Base+0x8c>

00012130 <main@@Base>:
   12130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12134:	add	fp, sp, #28
   12138:	sub	sp, sp, #4
   1213c:	vpush	{d8}
   12140:	sub	sp, sp, #744	; 0x2e8
   12144:	sub	sp, sp, #99328	; 0x18400
   12148:	sub	r0, fp, #104	; 0x68
   1214c:	bl	11fa4 <time@plt>
   12150:	bl	11ff8 <srand@plt>
   12154:	bl	12028 <rand@plt>
   12158:	mov	r4, r0
   1215c:	sub	r5, fp, #100	; 0x64
   12160:	mov	r0, r5
   12164:	bl	1282c <table_init@@Base>
   12168:	movw	r0, #34079	; 0x851f
   1216c:	movt	r0, #20971	; 0x51eb
   12170:	smmul	r0, r4, r0
   12174:	asr	r1, r0, #5
   12178:	add	r0, r1, r0, lsr #31
   1217c:	mov	r1, #100	; 0x64
   12180:	mls	r0, r0, r1, r4
   12184:	add	r8, r0, #100	; 0x64
   12188:	movw	r1, #22768	; 0x58f0
   1218c:	movt	r1, #1
   12190:	mov	r0, #0
   12194:	str	r0, [sp, #4]
   12198:	mov	r0, r5
   1219c:	mov	r2, #0
   121a0:	bl	132fc <table_add_column@@Base>
   121a4:	mov	sl, r0
   121a8:	movw	r1, #22771	; 0x58f3
   121ac:	movt	r1, #1
   121b0:	mov	r0, r5
   121b4:	mov	r2, #21
   121b8:	bl	132fc <table_add_column@@Base>
   121bc:	cmp	r8, #1
   121c0:	blt	1222c <main@@Base+0xfc>
   121c4:	mov	r5, r0
   121c8:	mov	r6, #0
   121cc:	add	r7, sp, #8
   121d0:	movw	r9, #22895	; 0x596f
   121d4:	movt	r9, #1
   121d8:	sub	r4, fp, #100	; 0x64
   121dc:	mov	r0, r7
   121e0:	mov	r1, #255	; 0xff
   121e4:	mov	r2, r9
   121e8:	mov	r3, r6
   121ec:	bl	12004 <snprintf@plt>
   121f0:	mov	r0, r4
   121f4:	bl	13fa8 <table_add_row@@Base>
   121f8:	mov	r0, r4
   121fc:	mov	r1, r6
   12200:	mov	r2, sl
   12204:	mov	r3, r6
   12208:	bl	14408 <table_set_int@@Base>
   1220c:	mov	r0, r4
   12210:	mov	r1, r6
   12214:	mov	r2, r5
   12218:	mov	r3, r7
   1221c:	bl	14730 <table_set_string@@Base>
   12220:	add	r6, r6, #1
   12224:	cmp	r8, r6
   12228:	bne	121dc <main@@Base+0xac>
   1222c:	sub	r4, fp, #100	; 0x64
   12230:	add	r5, sp, #8
   12234:	movw	r6, #34464	; 0x86a0
   12238:	movt	r6, #1
   1223c:	mov	r0, r4
   12240:	mov	r1, r5
   12244:	mov	r2, r6
   12248:	bl	147c0 <table_serialize@@Base>
   1224c:	mov	r0, r5
   12250:	mov	r1, r6
   12254:	bl	14a48 <table_deserialize@@Base>
   12258:	mov	r8, r0
   1225c:	mov	r0, r4
   12260:	bl	13fa0 <table_get_row_length@@Base>
   12264:	mov	r4, r0
   12268:	mov	r0, r8
   1226c:	bl	13fa0 <table_get_row_length@@Base>
   12270:	mov	r5, r0
   12274:	cmp	r0, r4
   12278:	beq	12298 <main@@Base+0x168>
   1227c:	movw	r0, #22777	; 0x58f9
   12280:	movt	r0, #1
   12284:	mov	r1, r4
   12288:	mov	r2, r5
   1228c:	bl	11f8c <printf@plt>
   12290:	mvn	r0, #0
   12294:	str	r0, [sp, #4]
   12298:	sub	r0, fp, #100	; 0x64
   1229c:	bl	13274 <table_get_column_length@@Base>
   122a0:	mov	r6, r0
   122a4:	mov	r0, r8
   122a8:	bl	13274 <table_get_column_length@@Base>
   122ac:	mov	r7, r0
   122b0:	cmp	r0, r6
   122b4:	bne	127cc <main@@Base+0x69c>
   122b8:	cmp	r5, r4
   122bc:	cmpeq	r7, r6
   122c0:	bne	127e8 <main@@Base+0x6b8>
   122c4:	cmp	r5, #1
   122c8:	blt	127e8 <main@@Base+0x6b8>
   122cc:	mov	r4, #0
   122d0:	sub	r9, fp, #100	; 0x64
   122d4:	str	r5, [sp]
   122d8:	cmp	r7, #1
   122dc:	bge	12318 <main@@Base+0x1e8>
   122e0:	b	12304 <main@@Base+0x1d4>
   122e4:	movw	r0, #22898	; 0x5972
   122e8:	movt	r0, #1
   122ec:	mov	r1, r4
   122f0:	mov	r2, sl
   122f4:	bl	11f8c <printf@plt>
   122f8:	mvn	r0, #0
   122fc:	str	r0, [sp, #4]
   12300:	ldr	r5, [sp]
   12304:	add	r4, r4, #1
   12308:	cmp	r4, r5
   1230c:	beq	127e8 <main@@Base+0x6b8>
   12310:	cmp	r7, #1
   12314:	blt	12304 <main@@Base+0x1d4>
   12318:	mov	sl, #0
   1231c:	b	12358 <main@@Base+0x228>
   12320:	mov	r0, r9
   12324:	mov	r1, r4
   12328:	mov	r2, sl
   1232c:	bl	13d6c <table_get_uint@@Base>
   12330:	mov	r5, r0
   12334:	mov	r0, r8
   12338:	mov	r1, r4
   1233c:	mov	r2, sl
   12340:	bl	13d6c <table_get_uint@@Base>
   12344:	cmp	r5, r0
   12348:	bne	122e4 <main@@Base+0x1b4>
   1234c:	add	sl, sl, #1
   12350:	cmp	r7, sl
   12354:	beq	12300 <main@@Base+0x1d0>
   12358:	mov	r0, r9
   1235c:	mov	r1, sl
   12360:	bl	132e8 <table_get_column_data_type@@Base>
   12364:	cmp	r0, #23
   12368:	bhi	1234c <main@@Base+0x21c>
   1236c:	add	r1, pc, #0
   12370:	ldr	pc, [r1, r0, lsl #2]
   12374:	ldrdeq	r2, [r1], -r4
   12378:	andeq	r2, r1, r0, lsr #6
   1237c:	andeq	r2, r1, ip, lsl #8
   12380:	andeq	r2, r1, r4, lsr r4
   12384:	andeq	r2, r1, ip, asr r4
   12388:	andeq	r2, r1, r4, lsl #9
   1238c:	andeq	r2, r1, ip, lsr #9
   12390:	ldrdeq	r2, [r1], -r4
   12394:	strdeq	r2, [r1], -ip
   12398:	andeq	r2, r1, r8, lsr #10
   1239c:	andeq	r2, r1, r4, asr r5
   123a0:	andeq	r2, r1, ip, ror r5
   123a4:	andeq	r2, r1, r4, lsr #11
   123a8:	andeq	r2, r1, ip, asr #11
   123ac:	strdeq	r2, [r1], -r4
   123b0:	andeq	r2, r1, r0, lsr #12
   123b4:	andeq	r2, r1, ip, asr r6
   123b8:	andeq	r2, r1, r8, lsl #13
   123bc:			; <UNDEFINED> instruction: 0x000126b0
   123c0:	andeq	r2, r1, r4, ror #13
   123c4:	andeq	r2, r1, ip, lsl #14
   123c8:	andeq	r2, r1, r4, lsr r7
   123cc:	andeq	r2, r1, r0, ror r7
   123d0:	andeq	r2, r1, r4, lsr #15
   123d4:	mov	r0, r9
   123d8:	mov	r1, r4
   123dc:	mov	r2, sl
   123e0:	bl	13d58 <table_get_int@@Base>
   123e4:	mov	r5, r8
   123e8:	mov	r8, r0
   123ec:	mov	r0, r5
   123f0:	mov	r1, r4
   123f4:	mov	r2, sl
   123f8:	bl	13d58 <table_get_int@@Base>
   123fc:	cmp	r8, r0
   12400:	mov	r8, r5
   12404:	beq	1234c <main@@Base+0x21c>
   12408:	b	122e4 <main@@Base+0x1b4>
   1240c:	mov	r0, r9
   12410:	mov	r1, r4
   12414:	mov	r2, sl
   12418:	bl	13d80 <table_get_int8@@Base>
   1241c:	mov	r5, r0
   12420:	mov	r0, r8
   12424:	mov	r1, r4
   12428:	mov	r2, sl
   1242c:	bl	13d80 <table_get_int8@@Base>
   12430:	b	12344 <main@@Base+0x214>
   12434:	mov	r0, r9
   12438:	mov	r1, r4
   1243c:	mov	r2, sl
   12440:	bl	13d94 <table_get_uint8@@Base>
   12444:	mov	r5, r0
   12448:	mov	r0, r8
   1244c:	mov	r1, r4
   12450:	mov	r2, sl
   12454:	bl	13d94 <table_get_uint8@@Base>
   12458:	b	12344 <main@@Base+0x214>
   1245c:	mov	r0, r9
   12460:	mov	r1, r4
   12464:	mov	r2, sl
   12468:	bl	13da8 <table_get_int16@@Base>
   1246c:	mov	r5, r0
   12470:	mov	r0, r8
   12474:	mov	r1, r4
   12478:	mov	r2, sl
   1247c:	bl	13da8 <table_get_int16@@Base>
   12480:	b	12344 <main@@Base+0x214>
   12484:	mov	r0, r9
   12488:	mov	r1, r4
   1248c:	mov	r2, sl
   12490:	bl	13dbc <table_get_uint16@@Base>
   12494:	mov	r5, r0
   12498:	mov	r0, r8
   1249c:	mov	r1, r4
   124a0:	mov	r2, sl
   124a4:	bl	13dbc <table_get_uint16@@Base>
   124a8:	b	12344 <main@@Base+0x214>
   124ac:	mov	r0, r9
   124b0:	mov	r1, r4
   124b4:	mov	r2, sl
   124b8:	bl	13dd0 <table_get_int32@@Base>
   124bc:	mov	r5, r0
   124c0:	mov	r0, r8
   124c4:	mov	r1, r4
   124c8:	mov	r2, sl
   124cc:	bl	13dd0 <table_get_int32@@Base>
   124d0:	b	12344 <main@@Base+0x214>
   124d4:	mov	r0, r9
   124d8:	mov	r1, r4
   124dc:	mov	r2, sl
   124e0:	bl	13de4 <table_get_uint32@@Base>
   124e4:	mov	r5, r0
   124e8:	mov	r0, r8
   124ec:	mov	r1, r4
   124f0:	mov	r2, sl
   124f4:	bl	13de4 <table_get_uint32@@Base>
   124f8:	b	12344 <main@@Base+0x214>
   124fc:	mov	r0, r9
   12500:	mov	r1, r4
   12504:	mov	r2, sl
   12508:	bl	13df8 <table_get_int64@@Base>
   1250c:	mov	r5, r0
   12510:	mov	r6, r1
   12514:	mov	r0, r8
   12518:	mov	r1, r4
   1251c:	mov	r2, sl
   12520:	bl	13df8 <table_get_int64@@Base>
   12524:	b	12648 <main@@Base+0x518>
   12528:	mov	r0, r9
   1252c:	mov	r1, r4
   12530:	mov	r2, sl
   12534:	bl	13e0c <table_get_uint64@@Base>
   12538:	mov	r5, r0
   1253c:	mov	r6, r1
   12540:	mov	r0, r8
   12544:	mov	r1, r4
   12548:	mov	r2, sl
   1254c:	bl	13e0c <table_get_uint64@@Base>
   12550:	b	12648 <main@@Base+0x518>
   12554:	mov	r0, r9
   12558:	mov	r1, r4
   1255c:	mov	r2, sl
   12560:	bl	13e20 <table_get_short@@Base>
   12564:	mov	r5, r0
   12568:	mov	r0, r8
   1256c:	mov	r1, r4
   12570:	mov	r2, sl
   12574:	bl	13e20 <table_get_short@@Base>
   12578:	b	12344 <main@@Base+0x214>
   1257c:	mov	r0, r9
   12580:	mov	r1, r4
   12584:	mov	r2, sl
   12588:	bl	13e34 <table_get_ushort@@Base>
   1258c:	mov	r5, r0
   12590:	mov	r0, r8
   12594:	mov	r1, r4
   12598:	mov	r2, sl
   1259c:	bl	13e34 <table_get_ushort@@Base>
   125a0:	b	12344 <main@@Base+0x214>
   125a4:	mov	r0, r9
   125a8:	mov	r1, r4
   125ac:	mov	r2, sl
   125b0:	bl	13e48 <table_get_long@@Base>
   125b4:	mov	r5, r0
   125b8:	mov	r0, r8
   125bc:	mov	r1, r4
   125c0:	mov	r2, sl
   125c4:	bl	13e48 <table_get_long@@Base>
   125c8:	b	12344 <main@@Base+0x214>
   125cc:	mov	r0, r9
   125d0:	mov	r1, r4
   125d4:	mov	r2, sl
   125d8:	bl	13e5c <table_get_ulong@@Base>
   125dc:	mov	r5, r0
   125e0:	mov	r0, r8
   125e4:	mov	r1, r4
   125e8:	mov	r2, sl
   125ec:	bl	13e5c <table_get_ulong@@Base>
   125f0:	b	12344 <main@@Base+0x214>
   125f4:	mov	r0, r9
   125f8:	mov	r1, r4
   125fc:	mov	r2, sl
   12600:	bl	13e70 <table_get_llong@@Base>
   12604:	mov	r5, r0
   12608:	mov	r6, r1
   1260c:	mov	r0, r8
   12610:	mov	r1, r4
   12614:	mov	r2, sl
   12618:	bl	13e70 <table_get_llong@@Base>
   1261c:	b	12648 <main@@Base+0x518>
   12620:	mov	r0, r9
   12624:	mov	r1, r4
   12628:	mov	r2, sl
   1262c:	bl	13e84 <table_get_ullong@@Base>
   12630:	mov	r5, r0
   12634:	mov	r6, r1
   12638:	mov	r0, r8
   1263c:	mov	r1, r4
   12640:	mov	r2, sl
   12644:	bl	13e84 <table_get_ullong@@Base>
   12648:	eor	r1, r6, r1
   1264c:	eor	r0, r5, r0
   12650:	orrs	r0, r0, r1
   12654:	beq	1234c <main@@Base+0x21c>
   12658:	b	122e4 <main@@Base+0x1b4>
   1265c:	mov	r0, r9
   12660:	mov	r1, r4
   12664:	mov	r2, sl
   12668:	bl	13e98 <table_get_float@@Base>
   1266c:	vmov.f32	s16, s0
   12670:	mov	r0, r8
   12674:	mov	r1, r4
   12678:	mov	r2, sl
   1267c:	bl	13e98 <table_get_float@@Base>
   12680:	vcmp.f32	s16, s0
   12684:	b	126d8 <main@@Base+0x5a8>
   12688:	mov	r0, r9
   1268c:	mov	r1, r4
   12690:	mov	r2, sl
   12694:	bl	13eac <table_get_double@@Base>
   12698:	vmov.f64	d8, d0
   1269c:	mov	r0, r8
   126a0:	mov	r1, r4
   126a4:	mov	r2, sl
   126a8:	bl	13eac <table_get_double@@Base>
   126ac:	b	126d4 <main@@Base+0x5a4>
   126b0:	mov	r0, r9
   126b4:	mov	r1, r4
   126b8:	mov	r2, sl
   126bc:	bl	13ec0 <table_get_ldouble@@Base>
   126c0:	vmov.f64	d8, d0
   126c4:	mov	r0, r8
   126c8:	mov	r1, r4
   126cc:	mov	r2, sl
   126d0:	bl	13ec0 <table_get_ldouble@@Base>
   126d4:	vcmp.f64	d8, d0
   126d8:	vmrs	APSR_nzcv, fpscr
   126dc:	beq	1234c <main@@Base+0x21c>
   126e0:	b	122e4 <main@@Base+0x1b4>
   126e4:	mov	r0, r9
   126e8:	mov	r1, r4
   126ec:	mov	r2, sl
   126f0:	bl	13ed4 <table_get_char@@Base>
   126f4:	mov	r5, r0
   126f8:	mov	r0, r8
   126fc:	mov	r1, r4
   12700:	mov	r2, sl
   12704:	bl	13ed4 <table_get_char@@Base>
   12708:	b	12344 <main@@Base+0x214>
   1270c:	mov	r0, r9
   12710:	mov	r1, r4
   12714:	mov	r2, sl
   12718:	bl	13ee8 <table_get_uchar@@Base>
   1271c:	mov	r5, r0
   12720:	mov	r0, r8
   12724:	mov	r1, r4
   12728:	mov	r2, sl
   1272c:	bl	13ee8 <table_get_uchar@@Base>
   12730:	b	12344 <main@@Base+0x214>
   12734:	mov	r0, r9
   12738:	mov	r1, r4
   1273c:	mov	r2, sl
   12740:	bl	13efc <table_get_string@@Base>
   12744:	mov	r5, r0
   12748:	mov	r0, r8
   1274c:	mov	r1, r4
   12750:	mov	r2, sl
   12754:	bl	13efc <table_get_string@@Base>
   12758:	mov	r1, r0
   1275c:	mov	r0, r5
   12760:	bl	11f80 <strcmp@plt>
   12764:	cmp	r0, #0
   12768:	beq	1234c <main@@Base+0x21c>
   1276c:	b	122e4 <main@@Base+0x1b4>
   12770:	mov	r0, r9
   12774:	mov	r1, r4
   12778:	mov	r2, sl
   1277c:	bl	13d44 <table_get_bool@@Base>
   12780:	mov	r5, r0
   12784:	mov	r0, r8
   12788:	mov	r1, r4
   1278c:	mov	r2, sl
   12790:	bl	13d44 <table_get_bool@@Base>
   12794:	eor	r0, r5, r0
   12798:	cmp	r0, #1
   1279c:	bne	1234c <main@@Base+0x21c>
   127a0:	b	122e4 <main@@Base+0x1b4>
   127a4:	mov	r0, r9
   127a8:	mov	r1, r4
   127ac:	mov	r2, sl
   127b0:	bl	13f00 <table_get_ptr@@Base>
   127b4:	mov	r5, r0
   127b8:	mov	r0, r8
   127bc:	mov	r1, r4
   127c0:	mov	r2, sl
   127c4:	bl	13f00 <table_get_ptr@@Base>
   127c8:	b	12344 <main@@Base+0x214>
   127cc:	movw	r0, #22836	; 0x5934
   127d0:	movt	r0, #1
   127d4:	mov	r1, r6
   127d8:	mov	r2, r7
   127dc:	bl	11f8c <printf@plt>
   127e0:	mvn	r0, #0
   127e4:	str	r0, [sp, #4]
   127e8:	sub	r0, fp, #100	; 0x64
   127ec:	bl	1286c <table_destroy@@Base>
   127f0:	mov	r0, r8
   127f4:	bl	12850 <table_delete@@Base>
   127f8:	ldr	r0, [sp, #4]
   127fc:	sub	sp, fp, #40	; 0x28
   12800:	vpop	{d8}
   12804:	add	sp, sp, #4
   12808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001280c <table_new@@Base>:
   1280c:	push	{r4, sl, fp, lr}
   12810:	add	fp, sp, #8
   12814:	mov	r0, #56	; 0x38
   12818:	bl	11fc8 <malloc@plt>
   1281c:	mov	r4, r0
   12820:	bl	1282c <table_init@@Base>
   12824:	mov	r0, r4
   12828:	pop	{r4, sl, fp, pc}

0001282c <table_init@@Base>:
   1282c:	push	{r4, sl, fp, lr}
   12830:	add	fp, sp, #8
   12834:	mov	r4, r0
   12838:	bl	128ac <table_destroy@@Base+0x40>
   1283c:	mov	r0, r4
   12840:	bl	128c4 <table_destroy@@Base+0x58>
   12844:	mov	r0, r4
   12848:	pop	{r4, sl, fp, lr}
   1284c:	b	128e0 <table_destroy@@Base+0x74>

00012850 <table_delete@@Base>:
   12850:	push	{r4, sl, fp, lr}
   12854:	add	fp, sp, #8
   12858:	mov	r4, r0
   1285c:	bl	1286c <table_destroy@@Base>
   12860:	mov	r0, r4
   12864:	pop	{r4, sl, fp, lr}
   12868:	b	11f98 <free@plt>

0001286c <table_destroy@@Base>:
   1286c:	cmp	r0, #0
   12870:	bxeq	lr
   12874:	push	{r4, sl, fp, lr}
   12878:	add	fp, sp, #8
   1287c:	mov	r4, r0
   12880:	mvn	r1, #0
   12884:	mvn	r2, #0
   12888:	mov	r3, #64	; 0x40
   1288c:	bl	13178 <table_notify@@Base>
   12890:	mov	r0, r4
   12894:	bl	12900 <table_destroy@@Base+0x94>
   12898:	mov	r0, r4
   1289c:	bl	12950 <table_destroy@@Base+0xe4>
   128a0:	mov	r0, r4
   128a4:	pop	{r4, sl, fp, lr}
   128a8:	b	129a0 <table_destroy@@Base+0x134>
   128ac:	mov	r1, #0
   128b0:	mov	r2, #10
   128b4:	str	r1, [r0]
   128b8:	stmib	r0, {r1, r2}
   128bc:	str	r1, [r0, #12]
   128c0:	bx	lr
   128c4:	mov	r1, #0
   128c8:	mov	r2, #20
   128cc:	str	r1, [r0, #16]
   128d0:	str	r1, [r0, #20]
   128d4:	str	r2, [r0, #24]
   128d8:	str	r1, [r0, #28]
   128dc:	bx	lr
   128e0:	mov	r1, #10
   128e4:	vmov.i32	q8, #0	; 0x00000000
   128e8:	mov	r2, #0
   128ec:	str	r1, [r0, #48]	; 0x30
   128f0:	str	r2, [r0, #52]	; 0x34
   128f4:	add	r0, r0, #32
   128f8:	vst1.32	{d16-d17}, [r0]
   128fc:	bx	lr
   12900:	push	{r4, r5, r6, sl, fp, lr}
   12904:	add	fp, sp, #16
   12908:	mov	r4, r0
   1290c:	bl	13fa0 <table_get_row_length@@Base>
   12910:	cmp	r0, #1
   12914:	blt	12938 <table_destroy@@Base+0xcc>
   12918:	mov	r5, r0
   1291c:	mov	r6, #0
   12920:	mov	r0, r4
   12924:	mov	r1, r6
   12928:	bl	13f38 <table_row_destroy@@Base>
   1292c:	add	r6, r6, #1
   12930:	cmp	r5, r6
   12934:	bne	12920 <table_destroy@@Base+0xb4>
   12938:	ldr	r0, [r4, #16]
   1293c:	cmp	r0, #0
   12940:	beq	1294c <table_destroy@@Base+0xe0>
   12944:	pop	{r4, r5, r6, sl, fp, lr}
   12948:	b	11f98 <free@plt>
   1294c:	pop	{r4, r5, r6, sl, fp, pc}
   12950:	push	{r4, r5, r6, sl, fp, lr}
   12954:	add	fp, sp, #16
   12958:	mov	r4, r0
   1295c:	bl	13274 <table_get_column_length@@Base>
   12960:	cmp	r0, #1
   12964:	blt	12988 <table_destroy@@Base+0x11c>
   12968:	mov	r5, r0
   1296c:	mov	r6, #0
   12970:	mov	r0, r4
   12974:	mov	r1, r6
   12978:	bl	13254 <table_column_destroy@@Base>
   1297c:	add	r6, r6, #1
   12980:	cmp	r5, r6
   12984:	bne	12970 <table_destroy@@Base+0x104>
   12988:	ldr	r0, [r4]
   1298c:	cmp	r0, #0
   12990:	beq	1299c <table_destroy@@Base+0x130>
   12994:	pop	{r4, r5, r6, sl, fp, lr}
   12998:	b	11f98 <free@plt>
   1299c:	pop	{r4, r5, r6, sl, fp, pc}
   129a0:	push	{r4, sl, fp, lr}
   129a4:	add	fp, sp, #8
   129a8:	mov	r4, r0
   129ac:	ldr	r0, [r0, #36]	; 0x24
   129b0:	cmp	r0, #0
   129b4:	beq	129bc <table_destroy@@Base+0x150>
   129b8:	bl	11f98 <free@plt>
   129bc:	ldr	r0, [r4, #40]	; 0x28
   129c0:	cmp	r0, #0
   129c4:	beq	129cc <table_destroy@@Base+0x160>
   129c8:	bl	11f98 <free@plt>
   129cc:	ldr	r0, [r4, #44]	; 0x2c
   129d0:	cmp	r0, #0
   129d4:	popeq	{r4, sl, fp, pc}
   129d8:	pop	{r4, sl, fp, lr}
   129dc:	b	11f98 <free@plt>

000129e0 <table_dupe@@Base>:
   129e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129e4:	add	fp, sp, #28
   129e8:	sub	sp, sp, #12
   129ec:	mov	r4, r0
   129f0:	bl	13fa0 <table_get_row_length@@Base>
   129f4:	mov	r8, r0
   129f8:	mov	r0, r4
   129fc:	bl	13274 <table_get_column_length@@Base>
   12a00:	mov	r6, r0
   12a04:	bl	1280c <table_new@@Base>
   12a08:	mov	sl, r0
   12a0c:	cmp	r6, #1
   12a10:	blt	12a50 <table_dupe@@Base+0x70>
   12a14:	mov	r5, #0
   12a18:	mov	r0, r4
   12a1c:	mov	r1, r5
   12a20:	bl	132d4 <table_get_column_name@@Base>
   12a24:	mov	r7, r0
   12a28:	mov	r0, r4
   12a2c:	mov	r1, r5
   12a30:	bl	132e8 <table_get_column_data_type@@Base>
   12a34:	mov	r2, r0
   12a38:	mov	r0, sl
   12a3c:	mov	r1, r7
   12a40:	bl	132fc <table_add_column@@Base>
   12a44:	add	r5, r5, #1
   12a48:	cmp	r6, r5
   12a4c:	bne	12a18 <table_dupe@@Base+0x38>
   12a50:	cmp	r8, #1
   12a54:	blt	12ec4 <table_dupe@@Base+0x4e4>
   12a58:	mov	r5, #0
   12a5c:	add	r9, sp, #8
   12a60:	b	12a70 <table_dupe@@Base+0x90>
   12a64:	add	r5, r5, #1
   12a68:	cmp	r5, r8
   12a6c:	beq	12ec4 <table_dupe@@Base+0x4e4>
   12a70:	mov	r0, sl
   12a74:	bl	13fa8 <table_add_row@@Base>
   12a78:	cmp	r6, #1
   12a7c:	blt	12a64 <table_dupe@@Base+0x84>
   12a80:	mov	r7, #0
   12a84:	b	12abc <table_dupe@@Base+0xdc>
   12a88:	mov	r0, r4
   12a8c:	mov	r1, r5
   12a90:	mov	r2, r7
   12a94:	bl	13f00 <table_get_ptr@@Base>
   12a98:	str	r0, [sp, #8]
   12a9c:	mov	r0, sl
   12aa0:	mov	r1, r5
   12aa4:	mov	r2, r7
   12aa8:	mov	r3, r9
   12aac:	bl	147a0 <table_set_ptr@@Base>
   12ab0:	add	r7, r7, #1
   12ab4:	cmp	r6, r7
   12ab8:	beq	12a64 <table_dupe@@Base+0x84>
   12abc:	mov	r0, r4
   12ac0:	mov	r1, r7
   12ac4:	bl	132e8 <table_get_column_data_type@@Base>
   12ac8:	cmp	r0, #23
   12acc:	bhi	12ab0 <table_dupe@@Base+0xd0>
   12ad0:	add	r1, pc, #0
   12ad4:	ldr	pc, [r1, r0, lsl #2]
   12ad8:	andeq	r2, r1, r8, lsr fp
   12adc:	andeq	r2, r1, r0, ror #22
   12ae0:	andeq	r2, r1, r8, lsl #23
   12ae4:			; <UNDEFINED> instruction: 0x00012bb0
   12ae8:	ldrdeq	r2, [r1], -r8
   12aec:	andeq	r2, r1, r0, lsl #24
   12af0:	andeq	r2, r1, r8, lsr #24
   12af4:	andeq	r2, r1, r0, asr ip
   12af8:	andeq	r2, r1, r8, ror ip
   12afc:	andeq	r2, r1, r0, lsr #25
   12b00:	andeq	r2, r1, r8, asr #25
   12b04:	strdeq	r2, [r1], -r0
   12b08:	andeq	r2, r1, r8, lsl sp
   12b0c:	andeq	r2, r1, r0, asr #26
   12b10:	andeq	r2, r1, r8, ror #26
   12b14:	muleq	r1, r0, sp
   12b18:			; <UNDEFINED> instruction: 0x00012db8
   12b1c:	ldrdeq	r2, [r1], -ip
   12b20:	andeq	r2, r1, r0, lsl #28
   12b24:	andeq	r2, r1, r4, lsr #28
   12b28:	andeq	r2, r1, ip, asr #28
   12b2c:	andeq	r2, r1, r4, ror lr
   12b30:	muleq	r1, ip, lr
   12b34:	andeq	r2, r1, r8, lsl #21
   12b38:	mov	r0, r4
   12b3c:	mov	r1, r5
   12b40:	mov	r2, r7
   12b44:	bl	13d58 <table_get_int@@Base>
   12b48:	mov	r3, r0
   12b4c:	mov	r0, sl
   12b50:	mov	r1, r5
   12b54:	mov	r2, r7
   12b58:	bl	14408 <table_set_int@@Base>
   12b5c:	b	12ab0 <table_dupe@@Base+0xd0>
   12b60:	mov	r0, r4
   12b64:	mov	r1, r5
   12b68:	mov	r2, r7
   12b6c:	bl	13d6c <table_get_uint@@Base>
   12b70:	mov	r3, r0
   12b74:	mov	r0, sl
   12b78:	mov	r1, r5
   12b7c:	mov	r2, r7
   12b80:	bl	14430 <table_set_uint@@Base>
   12b84:	b	12ab0 <table_dupe@@Base+0xd0>
   12b88:	mov	r0, r4
   12b8c:	mov	r1, r5
   12b90:	mov	r2, r7
   12b94:	bl	13d80 <table_get_int8@@Base>
   12b98:	mov	r3, r0
   12b9c:	mov	r0, sl
   12ba0:	mov	r1, r5
   12ba4:	mov	r2, r7
   12ba8:	bl	14458 <table_set_int8@@Base>
   12bac:	b	12ab0 <table_dupe@@Base+0xd0>
   12bb0:	mov	r0, r4
   12bb4:	mov	r1, r5
   12bb8:	mov	r2, r7
   12bbc:	bl	13d94 <table_get_uint8@@Base>
   12bc0:	mov	r3, r0
   12bc4:	mov	r0, sl
   12bc8:	mov	r1, r5
   12bcc:	mov	r2, r7
   12bd0:	bl	14480 <table_set_uint8@@Base>
   12bd4:	b	12ab0 <table_dupe@@Base+0xd0>
   12bd8:	mov	r0, r4
   12bdc:	mov	r1, r5
   12be0:	mov	r2, r7
   12be4:	bl	13da8 <table_get_int16@@Base>
   12be8:	mov	r3, r0
   12bec:	mov	r0, sl
   12bf0:	mov	r1, r5
   12bf4:	mov	r2, r7
   12bf8:	bl	144a8 <table_set_int16@@Base>
   12bfc:	b	12ab0 <table_dupe@@Base+0xd0>
   12c00:	mov	r0, r4
   12c04:	mov	r1, r5
   12c08:	mov	r2, r7
   12c0c:	bl	13dbc <table_get_uint16@@Base>
   12c10:	mov	r3, r0
   12c14:	mov	r0, sl
   12c18:	mov	r1, r5
   12c1c:	mov	r2, r7
   12c20:	bl	144d0 <table_set_uint16@@Base>
   12c24:	b	12ab0 <table_dupe@@Base+0xd0>
   12c28:	mov	r0, r4
   12c2c:	mov	r1, r5
   12c30:	mov	r2, r7
   12c34:	bl	13dd0 <table_get_int32@@Base>
   12c38:	mov	r3, r0
   12c3c:	mov	r0, sl
   12c40:	mov	r1, r5
   12c44:	mov	r2, r7
   12c48:	bl	144f8 <table_set_int32@@Base>
   12c4c:	b	12ab0 <table_dupe@@Base+0xd0>
   12c50:	mov	r0, r4
   12c54:	mov	r1, r5
   12c58:	mov	r2, r7
   12c5c:	bl	13de4 <table_get_uint32@@Base>
   12c60:	mov	r3, r0
   12c64:	mov	r0, sl
   12c68:	mov	r1, r5
   12c6c:	mov	r2, r7
   12c70:	bl	14520 <table_set_uint32@@Base>
   12c74:	b	12ab0 <table_dupe@@Base+0xd0>
   12c78:	mov	r0, r4
   12c7c:	mov	r1, r5
   12c80:	mov	r2, r7
   12c84:	bl	13df8 <table_get_int64@@Base>
   12c88:	stm	sp, {r0, r1}
   12c8c:	mov	r0, sl
   12c90:	mov	r1, r5
   12c94:	mov	r2, r7
   12c98:	bl	14548 <table_set_int64@@Base>
   12c9c:	b	12ab0 <table_dupe@@Base+0xd0>
   12ca0:	mov	r0, r4
   12ca4:	mov	r1, r5
   12ca8:	mov	r2, r7
   12cac:	bl	13e0c <table_get_uint64@@Base>
   12cb0:	stm	sp, {r0, r1}
   12cb4:	mov	r0, sl
   12cb8:	mov	r1, r5
   12cbc:	mov	r2, r7
   12cc0:	bl	1457c <table_set_uint64@@Base>
   12cc4:	b	12ab0 <table_dupe@@Base+0xd0>
   12cc8:	mov	r0, r4
   12ccc:	mov	r1, r5
   12cd0:	mov	r2, r7
   12cd4:	bl	13e20 <table_get_short@@Base>
   12cd8:	mov	r3, r0
   12cdc:	mov	r0, sl
   12ce0:	mov	r1, r5
   12ce4:	mov	r2, r7
   12ce8:	bl	145b0 <table_set_short@@Base>
   12cec:	b	12ab0 <table_dupe@@Base+0xd0>
   12cf0:	mov	r0, r4
   12cf4:	mov	r1, r5
   12cf8:	mov	r2, r7
   12cfc:	bl	13e34 <table_get_ushort@@Base>
   12d00:	mov	r3, r0
   12d04:	mov	r0, sl
   12d08:	mov	r1, r5
   12d0c:	mov	r2, r7
   12d10:	bl	145d8 <table_set_ushort@@Base>
   12d14:	b	12ab0 <table_dupe@@Base+0xd0>
   12d18:	mov	r0, r4
   12d1c:	mov	r1, r5
   12d20:	mov	r2, r7
   12d24:	bl	13e48 <table_get_long@@Base>
   12d28:	mov	r3, r0
   12d2c:	mov	r0, sl
   12d30:	mov	r1, r5
   12d34:	mov	r2, r7
   12d38:	bl	14600 <table_set_long@@Base>
   12d3c:	b	12ab0 <table_dupe@@Base+0xd0>
   12d40:	mov	r0, r4
   12d44:	mov	r1, r5
   12d48:	mov	r2, r7
   12d4c:	bl	13e5c <table_get_ulong@@Base>
   12d50:	mov	r3, r0
   12d54:	mov	r0, sl
   12d58:	mov	r1, r5
   12d5c:	mov	r2, r7
   12d60:	bl	14628 <table_set_ulong@@Base>
   12d64:	b	12ab0 <table_dupe@@Base+0xd0>
   12d68:	mov	r0, r4
   12d6c:	mov	r1, r5
   12d70:	mov	r2, r7
   12d74:	bl	13e70 <table_get_llong@@Base>
   12d78:	stm	sp, {r0, r1}
   12d7c:	mov	r0, sl
   12d80:	mov	r1, r5
   12d84:	mov	r2, r7
   12d88:	bl	14650 <table_set_llong@@Base>
   12d8c:	b	12ab0 <table_dupe@@Base+0xd0>
   12d90:	mov	r0, r4
   12d94:	mov	r1, r5
   12d98:	mov	r2, r7
   12d9c:	bl	13e84 <table_get_ullong@@Base>
   12da0:	stm	sp, {r0, r1}
   12da4:	mov	r0, sl
   12da8:	mov	r1, r5
   12dac:	mov	r2, r7
   12db0:	bl	14684 <table_set_ullong@@Base>
   12db4:	b	12ab0 <table_dupe@@Base+0xd0>
   12db8:	mov	r0, r4
   12dbc:	mov	r1, r5
   12dc0:	mov	r2, r7
   12dc4:	bl	13e98 <table_get_float@@Base>
   12dc8:	mov	r0, sl
   12dcc:	mov	r1, r5
   12dd0:	mov	r2, r7
   12dd4:	bl	146b8 <table_set_float@@Base>
   12dd8:	b	12ab0 <table_dupe@@Base+0xd0>
   12ddc:	mov	r0, r4
   12de0:	mov	r1, r5
   12de4:	mov	r2, r7
   12de8:	bl	13eac <table_get_double@@Base>
   12dec:	mov	r0, sl
   12df0:	mov	r1, r5
   12df4:	mov	r2, r7
   12df8:	bl	146e0 <table_set_double@@Base>
   12dfc:	b	12ab0 <table_dupe@@Base+0xd0>
   12e00:	mov	r0, r4
   12e04:	mov	r1, r5
   12e08:	mov	r2, r7
   12e0c:	bl	13ec0 <table_get_ldouble@@Base>
   12e10:	mov	r0, sl
   12e14:	mov	r1, r5
   12e18:	mov	r2, r7
   12e1c:	bl	14708 <table_set_ldouble@@Base>
   12e20:	b	12ab0 <table_dupe@@Base+0xd0>
   12e24:	mov	r0, r4
   12e28:	mov	r1, r5
   12e2c:	mov	r2, r7
   12e30:	bl	13ed4 <table_get_char@@Base>
   12e34:	mov	r3, r0
   12e38:	mov	r0, sl
   12e3c:	mov	r1, r5
   12e40:	mov	r2, r7
   12e44:	bl	14750 <table_set_char@@Base>
   12e48:	b	12ab0 <table_dupe@@Base+0xd0>
   12e4c:	mov	r0, r4
   12e50:	mov	r1, r5
   12e54:	mov	r2, r7
   12e58:	bl	13ee8 <table_get_uchar@@Base>
   12e5c:	mov	r3, r0
   12e60:	mov	r0, sl
   12e64:	mov	r1, r5
   12e68:	mov	r2, r7
   12e6c:	bl	14778 <table_set_uchar@@Base>
   12e70:	b	12ab0 <table_dupe@@Base+0xd0>
   12e74:	mov	r0, r4
   12e78:	mov	r1, r5
   12e7c:	mov	r2, r7
   12e80:	bl	13efc <table_get_string@@Base>
   12e84:	mov	r3, r0
   12e88:	mov	r0, sl
   12e8c:	mov	r1, r5
   12e90:	mov	r2, r7
   12e94:	bl	14730 <table_set_string@@Base>
   12e98:	b	12ab0 <table_dupe@@Base+0xd0>
   12e9c:	mov	r0, r4
   12ea0:	mov	r1, r5
   12ea4:	mov	r2, r7
   12ea8:	bl	13d44 <table_get_bool@@Base>
   12eac:	mov	r3, r0
   12eb0:	mov	r0, sl
   12eb4:	mov	r1, r5
   12eb8:	mov	r2, r7
   12ebc:	bl	143e0 <table_set_bool@@Base>
   12ec0:	b	12ab0 <table_dupe@@Base+0xd0>
   12ec4:	mov	r0, sl
   12ec8:	sub	sp, fp, #28
   12ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012ed0 <table_get_major_version@@Base>:
   12ed0:	mov	r0, #0
   12ed4:	bx	lr

00012ed8 <table_get_minor_version@@Base>:
   12ed8:	mov	r0, #0
   12edc:	bx	lr

00012ee0 <table_get_patch_version@@Base>:
   12ee0:	mov	r0, #0
   12ee4:	bx	lr

00012ee8 <table_get_version@@Base>:
   12ee8:	movw	r0, #22949	; 0x59a5
   12eec:	movt	r0, #1
   12ef0:	bx	lr

00012ef4 <table_get_callback_length@@Base>:
   12ef4:	ldr	r0, [r0, #32]
   12ef8:	bx	lr

00012efc <table_register_callback@@Base>:
   12efc:	push	{r4, r5, r6, r7, fp, lr}
   12f00:	add	fp, sp, #16
   12f04:	sub	sp, sp, #8
   12f08:	mov	r5, r3
   12f0c:	mov	r6, r2
   12f10:	mov	r7, r1
   12f14:	mov	r4, r0
   12f18:	bl	12f8c <table_register_callback@@Base+0x90>
   12f1c:	cmp	r0, #1
   12f20:	blt	12f3c <table_register_callback@@Base+0x40>
   12f24:	ldr	r1, [r4, #44]	; 0x2c
   12f28:	ldr	r2, [r1, r0, lsl #2]
   12f2c:	orr	r2, r2, r5
   12f30:	str	r2, [r1, r0, lsl #2]
   12f34:	sub	sp, fp, #16
   12f38:	pop	{r4, r5, r6, r7, fp, pc}
   12f3c:	ldr	r0, [r4, #32]
   12f40:	ldr	r1, [r4, #48]	; 0x30
   12f44:	udiv	r2, r0, r1
   12f48:	mls	r0, r2, r1, r0
   12f4c:	cmp	r0, #0
   12f50:	moveq	r0, r4
   12f54:	bleq	12fe8 <table_register_callback@@Base+0xec>
   12f58:	mov	r0, r4
   12f5c:	bl	12ef4 <table_get_callback_length@@Base>
   12f60:	mov	r1, r0
   12f64:	str	r5, [sp]
   12f68:	mov	r0, r4
   12f6c:	mov	r2, r7
   12f70:	mov	r3, r6
   12f74:	bl	13040 <table_register_callback@@Base+0x144>
   12f78:	ldr	r0, [r4, #32]
   12f7c:	add	r0, r0, #1
   12f80:	str	r0, [r4, #32]
   12f84:	sub	sp, fp, #16
   12f88:	pop	{r4, r5, r6, r7, fp, pc}
   12f8c:	push	{r4, sl, fp, lr}
   12f90:	add	fp, sp, #8
   12f94:	mov	ip, r0
   12f98:	ldr	r3, [r0, #32]
   12f9c:	mvn	r0, #0
   12fa0:	cmp	r3, #1
   12fa4:	blt	12fe4 <table_register_callback@@Base+0xe8>
   12fa8:	ldr	lr, [ip, #36]	; 0x24
   12fac:	mov	r3, #0
   12fb0:	b	12fc4 <table_register_callback@@Base+0xc8>
   12fb4:	add	r3, r3, #1
   12fb8:	ldr	r4, [ip, #32]
   12fbc:	cmp	r3, r4
   12fc0:	bge	12fe4 <table_register_callback@@Base+0xe8>
   12fc4:	ldr	r4, [lr, r3, lsl #2]
   12fc8:	cmp	r4, r1
   12fcc:	bne	12fb4 <table_register_callback@@Base+0xb8>
   12fd0:	ldr	r4, [ip, #40]	; 0x28
   12fd4:	ldr	r4, [r4, r3, lsl #2]
   12fd8:	cmp	r4, r2
   12fdc:	bne	12fb4 <table_register_callback@@Base+0xb8>
   12fe0:	mov	r0, r3
   12fe4:	pop	{r4, sl, fp, pc}
   12fe8:	push	{r4, sl, fp, lr}
   12fec:	add	fp, sp, #8
   12ff0:	mov	r4, r0
   12ff4:	ldr	r0, [r0, #36]	; 0x24
   12ff8:	ldr	r1, [r4, #48]	; 0x30
   12ffc:	ldr	r2, [r4, #52]	; 0x34
   13000:	add	r1, r2, r1
   13004:	str	r1, [r4, #52]	; 0x34
   13008:	lsl	r1, r1, #2
   1300c:	bl	11fb0 <realloc@plt>
   13010:	str	r0, [r4, #36]	; 0x24
   13014:	ldr	r0, [r4, #40]	; 0x28
   13018:	ldr	r1, [r4, #52]	; 0x34
   1301c:	lsl	r1, r1, #2
   13020:	bl	11fb0 <realloc@plt>
   13024:	str	r0, [r4, #40]	; 0x28
   13028:	ldr	r0, [r4, #44]	; 0x2c
   1302c:	ldr	r1, [r4, #52]	; 0x34
   13030:	lsl	r1, r1, #2
   13034:	bl	11fb0 <realloc@plt>
   13038:	str	r0, [r4, #44]	; 0x2c
   1303c:	pop	{r4, sl, fp, pc}
   13040:	ldr	ip, [r0, #36]	; 0x24
   13044:	str	r2, [ip, r1, lsl #2]
   13048:	ldr	r2, [r0, #40]	; 0x28
   1304c:	str	r3, [r2, r1, lsl #2]
   13050:	ldr	r0, [r0, #44]	; 0x2c
   13054:	ldr	r2, [sp]
   13058:	str	r2, [r0, r1, lsl #2]
   1305c:	bx	lr

00013060 <table_unregister_callback@@Base>:
   13060:	push	{r4, sl, fp, lr}
   13064:	add	fp, sp, #8
   13068:	mov	r4, r0
   1306c:	bl	12f8c <table_register_callback@@Base+0x90>
   13070:	cmn	r0, #1
   13074:	popeq	{r4, sl, fp, pc}
   13078:	ldr	r1, [r4, #32]
   1307c:	sub	r2, r1, #1
   13080:	cmp	r0, r2
   13084:	bge	130cc <table_unregister_callback@@Base+0x6c>
   13088:	mov	r1, #4
   1308c:	add	r1, r1, r0, lsl #2
   13090:	ldr	r2, [r4, #36]	; 0x24
   13094:	ldr	r3, [r2, r1]!
   13098:	str	r3, [r2, #-4]
   1309c:	ldr	r2, [r4, #40]	; 0x28
   130a0:	ldr	r3, [r2, r1]!
   130a4:	str	r3, [r2, #-4]
   130a8:	ldr	r2, [r4, #44]	; 0x2c
   130ac:	ldr	r3, [r2, r1]!
   130b0:	str	r3, [r2, #-4]
   130b4:	add	r1, r1, #4
   130b8:	add	r0, r0, #1
   130bc:	ldr	r2, [r4, #32]
   130c0:	sub	r2, r2, #1
   130c4:	cmp	r0, r2
   130c8:	blt	13090 <table_unregister_callback@@Base+0x30>
   130cc:	str	r2, [r4, #32]
   130d0:	ldr	r0, [r4, #48]	; 0x30
   130d4:	udiv	r1, r2, r0
   130d8:	mls	r0, r1, r0, r2
   130dc:	cmp	r0, #0
   130e0:	beq	130e8 <table_unregister_callback@@Base+0x88>
   130e4:	pop	{r4, sl, fp, pc}
   130e8:	mov	r0, r4
   130ec:	pop	{r4, sl, fp, lr}
   130f0:	b	130f4 <table_unregister_callback@@Base+0x94>
   130f4:	push	{r4, sl, fp, lr}
   130f8:	add	fp, sp, #8
   130fc:	mov	r4, r0
   13100:	ldr	r0, [r0, #36]	; 0x24
   13104:	ldr	r1, [r4, #48]	; 0x30
   13108:	ldr	r2, [r4, #52]	; 0x34
   1310c:	subs	r1, r2, r1
   13110:	str	r1, [r4, #52]	; 0x34
   13114:	beq	13150 <table_unregister_callback@@Base+0xf0>
   13118:	lsl	r1, r1, #2
   1311c:	bl	11fb0 <realloc@plt>
   13120:	str	r0, [r4, #36]	; 0x24
   13124:	ldr	r0, [r4, #40]	; 0x28
   13128:	ldr	r1, [r4, #52]	; 0x34
   1312c:	lsl	r1, r1, #2
   13130:	bl	11fb0 <realloc@plt>
   13134:	str	r0, [r4, #40]	; 0x28
   13138:	ldr	r0, [r4, #44]	; 0x2c
   1313c:	ldr	r1, [r4, #52]	; 0x34
   13140:	lsl	r1, r1, #2
   13144:	bl	11fb0 <realloc@plt>
   13148:	str	r0, [r4, #44]	; 0x2c
   1314c:	pop	{r4, sl, fp, pc}
   13150:	bl	11f98 <free@plt>
   13154:	ldr	r0, [r4, #40]	; 0x28
   13158:	bl	11f98 <free@plt>
   1315c:	ldr	r0, [r4, #44]	; 0x2c
   13160:	bl	11f98 <free@plt>
   13164:	mov	r0, #0
   13168:	str	r0, [r4, #36]	; 0x24
   1316c:	str	r0, [r4, #40]	; 0x28
   13170:	str	r0, [r4, #44]	; 0x2c
   13174:	pop	{r4, sl, fp, pc}

00013178 <table_notify@@Base>:
   13178:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1317c:	add	fp, sp, #24
   13180:	sub	sp, sp, #8
   13184:	mov	r7, r0
   13188:	ldr	r0, [r0, #32]
   1318c:	cmp	r0, #1
   13190:	blt	131f4 <table_notify@@Base+0x7c>
   13194:	mov	r4, r3
   13198:	mov	r8, r2
   1319c:	mov	r9, r1
   131a0:	mov	r5, #0
   131a4:	b	131b8 <table_notify@@Base+0x40>
   131a8:	ldr	r0, [r7, #32]
   131ac:	add	r5, r5, #1
   131b0:	cmp	r5, r0
   131b4:	bge	131f4 <table_notify@@Base+0x7c>
   131b8:	ldr	r0, [r7, #44]	; 0x2c
   131bc:	ldr	r0, [r0, r5, lsl #2]
   131c0:	tst	r0, r4
   131c4:	beq	131a8 <table_notify@@Base+0x30>
   131c8:	ldr	r0, [r7, #36]	; 0x24
   131cc:	ldr	r1, [r7, #40]	; 0x28
   131d0:	ldr	r6, [r0, r5, lsl #2]
   131d4:	ldr	r0, [r1, r5, lsl #2]
   131d8:	str	r0, [sp]
   131dc:	mov	r0, r7
   131e0:	mov	r1, r9
   131e4:	mov	r2, r8
   131e8:	mov	r3, r4
   131ec:	blx	r6
   131f0:	b	131a8 <table_notify@@Base+0x30>
   131f4:	sub	sp, fp, #24
   131f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000131fc <table_column_init@@Base>:
   131fc:	push	{r4, r5, r6, r7, fp, lr}
   13200:	add	fp, sp, #16
   13204:	mov	r4, r3
   13208:	mov	r5, r2
   1320c:	bl	13244 <table_get_col_ptr@@Base>
   13210:	mov	r6, r0
   13214:	mov	r0, r5
   13218:	bl	11fec <strlen@plt>
   1321c:	add	r0, r0, #1
   13220:	bl	11fc8 <malloc@plt>
   13224:	str	r0, [r6]
   13228:	ldr	r7, [fp, #8]
   1322c:	cmp	r0, #0
   13230:	beq	1323c <table_column_init@@Base+0x40>
   13234:	mov	r1, r5
   13238:	bl	11fbc <strcpy@plt>
   1323c:	stmib	r6, {r4, r7}
   13240:	pop	{r4, r5, r6, r7, fp, pc}

00013244 <table_get_col_ptr@@Base>:
   13244:	ldr	r0, [r0]
   13248:	add	r1, r1, r1, lsl #1
   1324c:	add	r0, r0, r1, lsl #2
   13250:	bx	lr

00013254 <table_column_destroy@@Base>:
   13254:	push	{fp, lr}
   13258:	mov	fp, sp
   1325c:	bl	13244 <table_get_col_ptr@@Base>
   13260:	ldr	r0, [r0]
   13264:	cmp	r0, #0
   13268:	popeq	{fp, pc}
   1326c:	pop	{fp, lr}
   13270:	b	11f98 <free@plt>

00013274 <table_get_column_length@@Base>:
   13274:	ldr	r0, [r0, #4]
   13278:	bx	lr

0001327c <table_get_column@@Base>:
   1327c:	push	{r4, r5, r6, r7, fp, lr}
   13280:	add	fp, sp, #16
   13284:	mov	r6, r1
   13288:	mov	r7, r0
   1328c:	bl	13274 <table_get_column_length@@Base>
   13290:	mov	r4, r0
   13294:	mov	r5, #0
   13298:	cmp	r0, #1
   1329c:	blt	132c4 <table_get_column@@Base+0x48>
   132a0:	mov	r0, r7
   132a4:	mov	r1, r5
   132a8:	bl	132d4 <table_get_column_name@@Base>
   132ac:	mov	r1, r6
   132b0:	bl	11f80 <strcmp@plt>
   132b4:	cmp	r0, #0
   132b8:	addne	r5, r5, #1
   132bc:	cmpne	r4, r5
   132c0:	bne	132a0 <table_get_column@@Base+0x24>
   132c4:	cmp	r5, r4
   132c8:	mvneq	r5, #0
   132cc:	mov	r0, r5
   132d0:	pop	{r4, r5, r6, r7, fp, pc}

000132d4 <table_get_column_name@@Base>:
   132d4:	push	{fp, lr}
   132d8:	mov	fp, sp
   132dc:	bl	13244 <table_get_col_ptr@@Base>
   132e0:	ldr	r0, [r0]
   132e4:	pop	{fp, pc}

000132e8 <table_get_column_data_type@@Base>:
   132e8:	push	{fp, lr}
   132ec:	mov	fp, sp
   132f0:	bl	13244 <table_get_col_ptr@@Base>
   132f4:	ldr	r0, [r0, #4]
   132f8:	pop	{fp, pc}

000132fc <table_add_column@@Base>:
   132fc:	push	{r4, r5, r6, sl, fp, lr}
   13300:	add	fp, sp, #16
   13304:	mov	r5, r2
   13308:	mov	r6, r1
   1330c:	mov	r4, r0
   13310:	bl	13274 <table_get_column_length@@Base>
   13314:	ldr	r1, [r4, #8]
   13318:	udiv	r2, r0, r1
   1331c:	mls	r0, r2, r1, r0
   13320:	cmp	r0, #0
   13324:	moveq	r0, r4
   13328:	bleq	13368 <table_add_column@@Base+0x6c>
   1332c:	mov	r0, r4
   13330:	mov	r1, r6
   13334:	mov	r2, r5
   13338:	bl	133e4 <table_add_column@@Base+0xe8>
   1333c:	mov	r0, r4
   13340:	bl	13274 <table_get_column_length@@Base>
   13344:	mov	r2, r0
   13348:	mov	r0, r4
   1334c:	mvn	r1, #0
   13350:	mov	r3, #8
   13354:	bl	13178 <table_notify@@Base>
   13358:	ldr	r0, [r4, #4]
   1335c:	add	r1, r0, #1
   13360:	str	r1, [r4, #4]
   13364:	pop	{r4, r5, r6, sl, fp, pc}
   13368:	push	{r4, r5, r6, r7, fp, lr}
   1336c:	add	fp, sp, #16
   13370:	mov	r4, r0
   13374:	ldr	r0, [r0]
   13378:	ldr	r1, [r4, #8]
   1337c:	ldr	r2, [r4, #12]
   13380:	add	r1, r2, r1
   13384:	str	r1, [r4, #12]
   13388:	add	r1, r1, r1, lsl #1
   1338c:	lsl	r1, r1, #2
   13390:	bl	11fb0 <realloc@plt>
   13394:	str	r0, [r4]
   13398:	mov	r0, r4
   1339c:	bl	13fa0 <table_get_row_length@@Base>
   133a0:	cmp	r0, #1
   133a4:	blt	133e0 <table_add_column@@Base+0xe4>
   133a8:	mov	r5, r0
   133ac:	mov	r6, #0
   133b0:	mov	r0, r4
   133b4:	mov	r1, r6
   133b8:	bl	13f2c <table_get_row_ptr@@Base>
   133bc:	mov	r7, r0
   133c0:	ldr	r0, [r0]
   133c4:	ldr	r1, [r4, #12]
   133c8:	lsl	r1, r1, #2
   133cc:	bl	11fb0 <realloc@plt>
   133d0:	str	r0, [r7]
   133d4:	add	r6, r6, #1
   133d8:	cmp	r5, r6
   133dc:	bne	133b0 <table_add_column@@Base+0xb4>
   133e0:	pop	{r4, r5, r6, r7, fp, pc}
   133e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   133e8:	add	fp, sp, #24
   133ec:	sub	sp, sp, #8
   133f0:	mov	r7, r2
   133f4:	mov	r8, r1
   133f8:	mov	r4, r0
   133fc:	bl	13fa0 <table_get_row_length@@Base>
   13400:	mov	r5, r0
   13404:	mov	r0, r4
   13408:	bl	13274 <table_get_column_length@@Base>
   1340c:	mov	r6, r0
   13410:	mov	r0, r7
   13414:	bl	13d14 <table_get_default_compare_function_for_data_type@@Base>
   13418:	str	r0, [sp]
   1341c:	mov	r0, r4
   13420:	mov	r1, r6
   13424:	mov	r2, r8
   13428:	mov	r3, r7
   1342c:	bl	131fc <table_column_init@@Base>
   13430:	cmp	r5, #1
   13434:	blt	13458 <table_add_column@@Base+0x15c>
   13438:	mov	r7, #0
   1343c:	mov	r0, r4
   13440:	mov	r1, r7
   13444:	mov	r2, r6
   13448:	bl	14e28 <table_cell_init@@Base>
   1344c:	add	r7, r7, #1
   13450:	cmp	r5, r7
   13454:	bne	1343c <table_add_column@@Base+0x140>
   13458:	sub	sp, fp, #24
   1345c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013460 <table_remove_column@@Base>:
   13460:	push	{r4, r5, fp, lr}
   13464:	add	fp, sp, #8
   13468:	mov	r4, r1
   1346c:	mov	r5, r0
   13470:	bl	134bc <table_remove_column@@Base+0x5c>
   13474:	ldr	r0, [r5, #4]
   13478:	sub	r0, r0, #1
   1347c:	str	r0, [r5, #4]
   13480:	mov	r0, r5
   13484:	bl	13274 <table_get_column_length@@Base>
   13488:	ldr	r1, [r5, #8]
   1348c:	udiv	r2, r0, r1
   13490:	mls	r0, r2, r1, r0
   13494:	cmp	r0, #0
   13498:	moveq	r0, r5
   1349c:	bleq	1358c <table_remove_column@@Base+0x12c>
   134a0:	mov	r0, r5
   134a4:	mvn	r1, #0
   134a8:	mov	r2, r4
   134ac:	mov	r3, #16
   134b0:	bl	13178 <table_notify@@Base>
   134b4:	mov	r0, #0
   134b8:	pop	{r4, r5, fp, pc}
   134bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   134c0:	add	fp, sp, #24
   134c4:	mov	r4, r1
   134c8:	mov	r5, r0
   134cc:	bl	13254 <table_column_destroy@@Base>
   134d0:	mov	r0, r5
   134d4:	bl	13274 <table_get_column_length@@Base>
   134d8:	sub	r6, r0, #1
   134dc:	cmp	r6, r4
   134e0:	ble	13518 <table_remove_column@@Base+0xb8>
   134e4:	mvn	r1, r4
   134e8:	add	r0, r1, r0
   134ec:	add	r1, r4, r4, lsl #1
   134f0:	lsl	r1, r1, #2
   134f4:	ldr	r2, [r5]
   134f8:	add	r2, r2, r1
   134fc:	vldr	d16, [r2, #12]
   13500:	ldr	r3, [r2, #20]
   13504:	str	r3, [r2, #8]
   13508:	vstr	d16, [r2]
   1350c:	add	r1, r1, #12
   13510:	subs	r0, r0, #1
   13514:	bne	134f4 <table_remove_column@@Base+0x94>
   13518:	mov	r0, r5
   1351c:	bl	13fa0 <table_get_row_length@@Base>
   13520:	cmp	r0, #1
   13524:	blt	13588 <table_remove_column@@Base+0x128>
   13528:	mov	r8, r0
   1352c:	mov	r7, #0
   13530:	b	13540 <table_remove_column@@Base+0xe0>
   13534:	add	r7, r7, #1
   13538:	cmp	r7, r8
   1353c:	beq	13588 <table_remove_column@@Base+0x128>
   13540:	mov	r0, r5
   13544:	mov	r1, r7
   13548:	mov	r2, r4
   1354c:	bl	14e5c <table_cell_destroy@@Base>
   13550:	mov	r0, r5
   13554:	mov	r1, r7
   13558:	bl	13f2c <table_get_row_ptr@@Base>
   1355c:	cmp	r6, r4
   13560:	ble	13534 <table_remove_column@@Base+0xd4>
   13564:	mov	r1, r4
   13568:	ldr	r2, [r0]
   1356c:	add	r3, r2, r1, lsl #2
   13570:	ldr	r3, [r3, #4]
   13574:	str	r3, [r2, r1, lsl #2]
   13578:	add	r1, r1, #1
   1357c:	cmp	r6, r1
   13580:	bne	13568 <table_remove_column@@Base+0x108>
   13584:	b	13534 <table_remove_column@@Base+0xd4>
   13588:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1358c:	push	{r4, r5, r6, r7, fp, lr}
   13590:	add	fp, sp, #16
   13594:	mov	r4, r0
   13598:	ldr	r0, [r0]
   1359c:	ldr	r1, [r4, #8]
   135a0:	ldr	r2, [r4, #12]
   135a4:	sub	r1, r2, r1
   135a8:	str	r1, [r4, #12]
   135ac:	add	r1, r1, r1, lsl #1
   135b0:	lsl	r1, r1, #2
   135b4:	bl	11fb0 <realloc@plt>
   135b8:	str	r0, [r4]
   135bc:	mov	r0, r4
   135c0:	bl	13fa0 <table_get_row_length@@Base>
   135c4:	cmp	r0, #1
   135c8:	blt	13604 <table_remove_column@@Base+0x1a4>
   135cc:	mov	r5, r0
   135d0:	mov	r6, #0
   135d4:	mov	r0, r4
   135d8:	mov	r1, r6
   135dc:	bl	13f2c <table_get_row_ptr@@Base>
   135e0:	mov	r7, r0
   135e4:	ldr	r0, [r0]
   135e8:	ldr	r1, [r4, #12]
   135ec:	lsl	r1, r1, #2
   135f0:	bl	11fb0 <realloc@plt>
   135f4:	str	r0, [r7]
   135f8:	add	r6, r6, #1
   135fc:	cmp	r5, r6
   13600:	bne	135d4 <table_remove_column@@Base+0x174>
   13604:	pop	{r4, r5, r6, r7, fp, pc}

00013608 <table_get_column_compare_function@@Base>:
   13608:	push	{fp, lr}
   1360c:	mov	fp, sp
   13610:	bl	13244 <table_get_col_ptr@@Base>
   13614:	ldr	r0, [r0, #8]
   13618:	pop	{fp, pc}

0001361c <table_set_column_compare_function@@Base>:
   1361c:	push	{r4, sl, fp, lr}
   13620:	add	fp, sp, #8
   13624:	mov	r4, r2
   13628:	bl	13244 <table_get_col_ptr@@Base>
   1362c:	str	r4, [r0, #8]
   13630:	pop	{r4, sl, fp, pc}

00013634 <table_compare_bool@@Base>:
   13634:	cmp	r0, #0
   13638:	beq	1366c <table_compare_bool@@Base+0x38>
   1363c:	cmp	r1, #0
   13640:	moveq	r1, #1
   13644:	moveq	r0, r1
   13648:	bxeq	lr
   1364c:	ldrb	r2, [r1]
   13650:	ldrb	r0, [r0]
   13654:	mov	r1, #0
   13658:	cmp	r0, r2
   1365c:	mvncc	r1, #0
   13660:	movwhi	r1, #1
   13664:	mov	r0, r1
   13668:	bx	lr
   1366c:	cmp	r1, #0
   13670:	mvnne	r1, #0
   13674:	mov	r0, r1
   13678:	bx	lr

0001367c <table_compare_int@@Base>:
   1367c:	cmp	r0, #0
   13680:	beq	136b4 <table_compare_int@@Base+0x38>
   13684:	cmp	r1, #0
   13688:	moveq	r1, #1
   1368c:	moveq	r0, r1
   13690:	bxeq	lr
   13694:	ldr	r2, [r1]
   13698:	ldr	r0, [r0]
   1369c:	mov	r1, #0
   136a0:	cmp	r0, r2
   136a4:	mvnlt	r1, #0
   136a8:	movwgt	r1, #1
   136ac:	mov	r0, r1
   136b0:	bx	lr
   136b4:	cmp	r1, #0
   136b8:	mvnne	r1, #0
   136bc:	mov	r0, r1
   136c0:	bx	lr

000136c4 <table_compare_uint@@Base>:
   136c4:	cmp	r0, #0
   136c8:	beq	136fc <table_compare_uint@@Base+0x38>
   136cc:	cmp	r1, #0
   136d0:	moveq	r1, #1
   136d4:	moveq	r0, r1
   136d8:	bxeq	lr
   136dc:	ldr	r2, [r1]
   136e0:	ldr	r0, [r0]
   136e4:	mov	r1, #0
   136e8:	cmp	r0, r2
   136ec:	mvncc	r1, #0
   136f0:	movwhi	r1, #1
   136f4:	mov	r0, r1
   136f8:	bx	lr
   136fc:	cmp	r1, #0
   13700:	mvnne	r1, #0
   13704:	mov	r0, r1
   13708:	bx	lr

0001370c <table_compare_int8@@Base>:
   1370c:	cmp	r0, #0
   13710:	beq	13744 <table_compare_int8@@Base+0x38>
   13714:	cmp	r1, #0
   13718:	moveq	r1, #1
   1371c:	moveq	r0, r1
   13720:	bxeq	lr
   13724:	ldrsb	r2, [r1]
   13728:	ldrsb	r0, [r0]
   1372c:	mov	r1, #0
   13730:	cmp	r0, r2
   13734:	mvnlt	r1, #0
   13738:	movwgt	r1, #1
   1373c:	mov	r0, r1
   13740:	bx	lr
   13744:	cmp	r1, #0
   13748:	mvnne	r1, #0
   1374c:	mov	r0, r1
   13750:	bx	lr

00013754 <table_compare_uint8@@Base>:
   13754:	cmp	r0, #0
   13758:	beq	1378c <table_compare_uint8@@Base+0x38>
   1375c:	cmp	r1, #0
   13760:	moveq	r1, #1
   13764:	moveq	r0, r1
   13768:	bxeq	lr
   1376c:	ldrb	r2, [r1]
   13770:	ldrb	r0, [r0]
   13774:	mov	r1, #0
   13778:	cmp	r0, r2
   1377c:	mvncc	r1, #0
   13780:	movwhi	r1, #1
   13784:	mov	r0, r1
   13788:	bx	lr
   1378c:	cmp	r1, #0
   13790:	mvnne	r1, #0
   13794:	mov	r0, r1
   13798:	bx	lr

0001379c <table_compare_int16@@Base>:
   1379c:	cmp	r0, #0
   137a0:	beq	137d4 <table_compare_int16@@Base+0x38>
   137a4:	cmp	r1, #0
   137a8:	moveq	r1, #1
   137ac:	moveq	r0, r1
   137b0:	bxeq	lr
   137b4:	ldrsh	r2, [r1]
   137b8:	ldrsh	r0, [r0]
   137bc:	mov	r1, #0
   137c0:	cmp	r0, r2
   137c4:	mvnlt	r1, #0
   137c8:	movwgt	r1, #1
   137cc:	mov	r0, r1
   137d0:	bx	lr
   137d4:	cmp	r1, #0
   137d8:	mvnne	r1, #0
   137dc:	mov	r0, r1
   137e0:	bx	lr

000137e4 <table_compare_uint16@@Base>:
   137e4:	cmp	r0, #0
   137e8:	beq	1381c <table_compare_uint16@@Base+0x38>
   137ec:	cmp	r1, #0
   137f0:	moveq	r1, #1
   137f4:	moveq	r0, r1
   137f8:	bxeq	lr
   137fc:	ldrh	r2, [r1]
   13800:	ldrh	r0, [r0]
   13804:	mov	r1, #0
   13808:	cmp	r0, r2
   1380c:	mvncc	r1, #0
   13810:	movwhi	r1, #1
   13814:	mov	r0, r1
   13818:	bx	lr
   1381c:	cmp	r1, #0
   13820:	mvnne	r1, #0
   13824:	mov	r0, r1
   13828:	bx	lr

0001382c <table_compare_int32@@Base>:
   1382c:	cmp	r0, #0
   13830:	beq	13864 <table_compare_int32@@Base+0x38>
   13834:	cmp	r1, #0
   13838:	moveq	r1, #1
   1383c:	moveq	r0, r1
   13840:	bxeq	lr
   13844:	ldr	r2, [r1]
   13848:	ldr	r0, [r0]
   1384c:	mov	r1, #0
   13850:	cmp	r0, r2
   13854:	mvnlt	r1, #0
   13858:	movwgt	r1, #1
   1385c:	mov	r0, r1
   13860:	bx	lr
   13864:	cmp	r1, #0
   13868:	mvnne	r1, #0
   1386c:	mov	r0, r1
   13870:	bx	lr

00013874 <table_compare_uint32@@Base>:
   13874:	cmp	r0, #0
   13878:	beq	138ac <table_compare_uint32@@Base+0x38>
   1387c:	cmp	r1, #0
   13880:	moveq	r1, #1
   13884:	moveq	r0, r1
   13888:	bxeq	lr
   1388c:	ldr	r2, [r1]
   13890:	ldr	r0, [r0]
   13894:	mov	r1, #0
   13898:	cmp	r0, r2
   1389c:	mvncc	r1, #0
   138a0:	movwhi	r1, #1
   138a4:	mov	r0, r1
   138a8:	bx	lr
   138ac:	cmp	r1, #0
   138b0:	mvnne	r1, #0
   138b4:	mov	r0, r1
   138b8:	bx	lr

000138bc <table_compare_int64@@Base>:
   138bc:	cmp	r0, #0
   138c0:	beq	13914 <table_compare_int64@@Base+0x58>
   138c4:	cmp	r1, #0
   138c8:	moveq	r1, #1
   138cc:	moveq	r0, r1
   138d0:	bxeq	lr
   138d4:	push	{r5, r7, fp, lr}
   138d8:	add	fp, sp, #8
   138dc:	ldm	r1, {r2, r7}
   138e0:	ldm	r0, {r0, r5}
   138e4:	mov	r1, #0
   138e8:	subs	r3, r0, r2
   138ec:	sbcs	r3, r5, r7
   138f0:	movwlt	r1, #1
   138f4:	cmp	r1, #0
   138f8:	mvnne	r1, #0
   138fc:	subs	r0, r2, r0
   13900:	sbcs	r0, r7, r5
   13904:	movwlt	r1, #1
   13908:	pop	{r5, r7, fp, lr}
   1390c:	mov	r0, r1
   13910:	bx	lr
   13914:	cmp	r1, #0
   13918:	mvnne	r1, #0
   1391c:	mov	r0, r1
   13920:	bx	lr

00013924 <table_compare_uint64@@Base>:
   13924:	cmp	r0, #0
   13928:	beq	1397c <table_compare_uint64@@Base+0x58>
   1392c:	cmp	r1, #0
   13930:	moveq	r1, #1
   13934:	moveq	r0, r1
   13938:	bxeq	lr
   1393c:	push	{r5, r7, fp, lr}
   13940:	add	fp, sp, #8
   13944:	ldm	r1, {r2, r7}
   13948:	ldm	r0, {r0, r5}
   1394c:	mov	r1, #0
   13950:	subs	r3, r0, r2
   13954:	sbcs	r3, r5, r7
   13958:	movwcc	r1, #1
   1395c:	cmp	r1, #0
   13960:	mvnne	r1, #0
   13964:	subs	r0, r2, r0
   13968:	sbcs	r0, r7, r5
   1396c:	movwcc	r1, #1
   13970:	pop	{r5, r7, fp, lr}
   13974:	mov	r0, r1
   13978:	bx	lr
   1397c:	cmp	r1, #0
   13980:	mvnne	r1, #0
   13984:	mov	r0, r1
   13988:	bx	lr

0001398c <table_compare_short@@Base>:
   1398c:	cmp	r0, #0
   13990:	beq	139c4 <table_compare_short@@Base+0x38>
   13994:	cmp	r1, #0
   13998:	moveq	r1, #1
   1399c:	moveq	r0, r1
   139a0:	bxeq	lr
   139a4:	ldrsh	r2, [r1]
   139a8:	ldrsh	r0, [r0]
   139ac:	mov	r1, #0
   139b0:	cmp	r0, r2
   139b4:	mvnlt	r1, #0
   139b8:	movwgt	r1, #1
   139bc:	mov	r0, r1
   139c0:	bx	lr
   139c4:	cmp	r1, #0
   139c8:	mvnne	r1, #0
   139cc:	mov	r0, r1
   139d0:	bx	lr

000139d4 <table_compare_ushort@@Base>:
   139d4:	cmp	r0, #0
   139d8:	beq	13a0c <table_compare_ushort@@Base+0x38>
   139dc:	cmp	r1, #0
   139e0:	moveq	r1, #1
   139e4:	moveq	r0, r1
   139e8:	bxeq	lr
   139ec:	ldrh	r2, [r1]
   139f0:	ldrh	r0, [r0]
   139f4:	mov	r1, #0
   139f8:	cmp	r0, r2
   139fc:	mvncc	r1, #0
   13a00:	movwhi	r1, #1
   13a04:	mov	r0, r1
   13a08:	bx	lr
   13a0c:	cmp	r1, #0
   13a10:	mvnne	r1, #0
   13a14:	mov	r0, r1
   13a18:	bx	lr

00013a1c <table_compare_long@@Base>:
   13a1c:	cmp	r0, #0
   13a20:	beq	13a54 <table_compare_long@@Base+0x38>
   13a24:	cmp	r1, #0
   13a28:	moveq	r1, #1
   13a2c:	moveq	r0, r1
   13a30:	bxeq	lr
   13a34:	ldr	r2, [r1]
   13a38:	ldr	r0, [r0]
   13a3c:	mov	r1, #0
   13a40:	cmp	r0, r2
   13a44:	mvnlt	r1, #0
   13a48:	movwgt	r1, #1
   13a4c:	mov	r0, r1
   13a50:	bx	lr
   13a54:	cmp	r1, #0
   13a58:	mvnne	r1, #0
   13a5c:	mov	r0, r1
   13a60:	bx	lr

00013a64 <table_compare_ulong@@Base>:
   13a64:	cmp	r0, #0
   13a68:	beq	13a9c <table_compare_ulong@@Base+0x38>
   13a6c:	cmp	r1, #0
   13a70:	moveq	r1, #1
   13a74:	moveq	r0, r1
   13a78:	bxeq	lr
   13a7c:	ldr	r2, [r1]
   13a80:	ldr	r0, [r0]
   13a84:	mov	r1, #0
   13a88:	cmp	r0, r2
   13a8c:	mvncc	r1, #0
   13a90:	movwhi	r1, #1
   13a94:	mov	r0, r1
   13a98:	bx	lr
   13a9c:	cmp	r1, #0
   13aa0:	mvnne	r1, #0
   13aa4:	mov	r0, r1
   13aa8:	bx	lr

00013aac <table_compare_llong@@Base>:
   13aac:	cmp	r0, #0
   13ab0:	beq	13b04 <table_compare_llong@@Base+0x58>
   13ab4:	cmp	r1, #0
   13ab8:	moveq	r1, #1
   13abc:	moveq	r0, r1
   13ac0:	bxeq	lr
   13ac4:	push	{r5, r7, fp, lr}
   13ac8:	add	fp, sp, #8
   13acc:	ldm	r1, {r2, r7}
   13ad0:	ldm	r0, {r0, r5}
   13ad4:	mov	r1, #0
   13ad8:	subs	r3, r0, r2
   13adc:	sbcs	r3, r5, r7
   13ae0:	movwlt	r1, #1
   13ae4:	cmp	r1, #0
   13ae8:	mvnne	r1, #0
   13aec:	subs	r0, r2, r0
   13af0:	sbcs	r0, r7, r5
   13af4:	movwlt	r1, #1
   13af8:	pop	{r5, r7, fp, lr}
   13afc:	mov	r0, r1
   13b00:	bx	lr
   13b04:	cmp	r1, #0
   13b08:	mvnne	r1, #0
   13b0c:	mov	r0, r1
   13b10:	bx	lr

00013b14 <table_compare_ullong@@Base>:
   13b14:	cmp	r0, #0
   13b18:	beq	13b4c <table_compare_ullong@@Base+0x38>
   13b1c:	cmp	r1, #0
   13b20:	moveq	r1, #1
   13b24:	moveq	r0, r1
   13b28:	bxeq	lr
   13b2c:	ldr	r2, [r1]
   13b30:	ldr	r0, [r0]
   13b34:	mov	r1, #0
   13b38:	cmp	r0, r2
   13b3c:	mvncc	r1, #0
   13b40:	movwhi	r1, #1
   13b44:	mov	r0, r1
   13b48:	bx	lr
   13b4c:	cmp	r1, #0
   13b50:	mvnne	r1, #0
   13b54:	mov	r0, r1
   13b58:	bx	lr

00013b5c <table_compare_float@@Base>:
   13b5c:	cmp	r0, #0
   13b60:	beq	13b98 <table_compare_float@@Base+0x3c>
   13b64:	cmp	r1, #0
   13b68:	moveq	r1, #1
   13b6c:	moveq	r0, r1
   13b70:	bxeq	lr
   13b74:	vldr	s0, [r1]
   13b78:	vldr	s2, [r0]
   13b7c:	mov	r1, #0
   13b80:	vcmpe.f32	s2, s0
   13b84:	vmrs	APSR_nzcv, fpscr
   13b88:	mvnmi	r1, #0
   13b8c:	movwgt	r1, #1
   13b90:	mov	r0, r1
   13b94:	bx	lr
   13b98:	cmp	r1, #0
   13b9c:	mvnne	r1, #0
   13ba0:	mov	r0, r1
   13ba4:	bx	lr

00013ba8 <table_compare_double@@Base>:
   13ba8:	cmp	r0, #0
   13bac:	beq	13be4 <table_compare_double@@Base+0x3c>
   13bb0:	cmp	r1, #0
   13bb4:	moveq	r1, #1
   13bb8:	moveq	r0, r1
   13bbc:	bxeq	lr
   13bc0:	vldr	d16, [r1]
   13bc4:	vldr	d17, [r0]
   13bc8:	mov	r1, #0
   13bcc:	vcmpe.f64	d17, d16
   13bd0:	vmrs	APSR_nzcv, fpscr
   13bd4:	mvnmi	r1, #0
   13bd8:	movwgt	r1, #1
   13bdc:	mov	r0, r1
   13be0:	bx	lr
   13be4:	cmp	r1, #0
   13be8:	mvnne	r1, #0
   13bec:	mov	r0, r1
   13bf0:	bx	lr

00013bf4 <table_compare_ldouble@@Base>:
   13bf4:	cmp	r0, #0
   13bf8:	beq	13c30 <table_compare_ldouble@@Base+0x3c>
   13bfc:	cmp	r1, #0
   13c00:	moveq	r1, #1
   13c04:	moveq	r0, r1
   13c08:	bxeq	lr
   13c0c:	vldr	d16, [r1]
   13c10:	vldr	d17, [r0]
   13c14:	mov	r1, #0
   13c18:	vcmpe.f64	d17, d16
   13c1c:	vmrs	APSR_nzcv, fpscr
   13c20:	mvnmi	r1, #0
   13c24:	movwgt	r1, #1
   13c28:	mov	r0, r1
   13c2c:	bx	lr
   13c30:	cmp	r1, #0
   13c34:	mvnne	r1, #0
   13c38:	mov	r0, r1
   13c3c:	bx	lr

00013c40 <table_compare_char@@Base>:
   13c40:	cmp	r0, #0
   13c44:	beq	13c78 <table_compare_char@@Base+0x38>
   13c48:	cmp	r1, #0
   13c4c:	moveq	r1, #1
   13c50:	moveq	r0, r1
   13c54:	bxeq	lr
   13c58:	ldrb	r2, [r1]
   13c5c:	ldrb	r0, [r0]
   13c60:	mov	r1, #0
   13c64:	cmp	r0, r2
   13c68:	mvncc	r1, #0
   13c6c:	movwhi	r1, #1
   13c70:	mov	r0, r1
   13c74:	bx	lr
   13c78:	cmp	r1, #0
   13c7c:	mvnne	r1, #0
   13c80:	mov	r0, r1
   13c84:	bx	lr

00013c88 <table_compare_uchar@@Base>:
   13c88:	cmp	r0, #0
   13c8c:	beq	13cc0 <table_compare_uchar@@Base+0x38>
   13c90:	cmp	r1, #0
   13c94:	moveq	r1, #1
   13c98:	moveq	r0, r1
   13c9c:	bxeq	lr
   13ca0:	ldrb	r2, [r1]
   13ca4:	ldrb	r0, [r0]
   13ca8:	mov	r1, #0
   13cac:	cmp	r0, r2
   13cb0:	mvncc	r1, #0
   13cb4:	movwhi	r1, #1
   13cb8:	mov	r0, r1
   13cbc:	bx	lr
   13cc0:	cmp	r1, #0
   13cc4:	mvnne	r1, #0
   13cc8:	mov	r0, r1
   13ccc:	bx	lr

00013cd0 <table_compare_string@@Base>:
   13cd0:	cmp	r0, #0
   13cd4:	beq	13cec <table_compare_string@@Base+0x1c>
   13cd8:	cmp	r1, #0
   13cdc:	moveq	r1, #1
   13ce0:	moveq	r0, r1
   13ce4:	bxeq	lr
   13ce8:	b	11f80 <strcmp@plt>
   13cec:	cmp	r1, #0
   13cf0:	mvnne	r1, #0
   13cf4:	mov	r0, r1
   13cf8:	bx	lr

00013cfc <table_compare_ptr@@Base>:
   13cfc:	mov	r2, #0
   13d00:	cmp	r0, r1
   13d04:	mvncc	r2, #0
   13d08:	movwhi	r2, #1
   13d0c:	mov	r0, r2
   13d10:	bx	lr

00013d14 <table_get_default_compare_function_for_data_type@@Base>:
   13d14:	cmp	r0, #23
   13d18:	movhi	r0, #0
   13d1c:	bxhi	lr
   13d20:	movw	r1, #22952	; 0x59a8
   13d24:	movt	r1, #1
   13d28:	ldr	r0, [r1, r0, lsl #2]
   13d2c:	bx	lr

00013d30 <table_get@@Base>:
   13d30:	push	{fp, lr}
   13d34:	mov	fp, sp
   13d38:	bl	14e40 <table_get_cell_ptr@@Base>
   13d3c:	ldr	r0, [r0]
   13d40:	pop	{fp, pc}

00013d44 <table_get_bool@@Base>:
   13d44:	push	{fp, lr}
   13d48:	mov	fp, sp
   13d4c:	bl	13d30 <table_get@@Base>
   13d50:	ldrb	r0, [r0]
   13d54:	pop	{fp, pc}

00013d58 <table_get_int@@Base>:
   13d58:	push	{fp, lr}
   13d5c:	mov	fp, sp
   13d60:	bl	13d30 <table_get@@Base>
   13d64:	ldr	r0, [r0]
   13d68:	pop	{fp, pc}

00013d6c <table_get_uint@@Base>:
   13d6c:	push	{fp, lr}
   13d70:	mov	fp, sp
   13d74:	bl	13d30 <table_get@@Base>
   13d78:	ldr	r0, [r0]
   13d7c:	pop	{fp, pc}

00013d80 <table_get_int8@@Base>:
   13d80:	push	{fp, lr}
   13d84:	mov	fp, sp
   13d88:	bl	13d30 <table_get@@Base>
   13d8c:	ldrsb	r0, [r0]
   13d90:	pop	{fp, pc}

00013d94 <table_get_uint8@@Base>:
   13d94:	push	{fp, lr}
   13d98:	mov	fp, sp
   13d9c:	bl	13d30 <table_get@@Base>
   13da0:	ldrb	r0, [r0]
   13da4:	pop	{fp, pc}

00013da8 <table_get_int16@@Base>:
   13da8:	push	{fp, lr}
   13dac:	mov	fp, sp
   13db0:	bl	13d30 <table_get@@Base>
   13db4:	ldrsh	r0, [r0]
   13db8:	pop	{fp, pc}

00013dbc <table_get_uint16@@Base>:
   13dbc:	push	{fp, lr}
   13dc0:	mov	fp, sp
   13dc4:	bl	13d30 <table_get@@Base>
   13dc8:	ldrh	r0, [r0]
   13dcc:	pop	{fp, pc}

00013dd0 <table_get_int32@@Base>:
   13dd0:	push	{fp, lr}
   13dd4:	mov	fp, sp
   13dd8:	bl	13d30 <table_get@@Base>
   13ddc:	ldr	r0, [r0]
   13de0:	pop	{fp, pc}

00013de4 <table_get_uint32@@Base>:
   13de4:	push	{fp, lr}
   13de8:	mov	fp, sp
   13dec:	bl	13d30 <table_get@@Base>
   13df0:	ldr	r0, [r0]
   13df4:	pop	{fp, pc}

00013df8 <table_get_int64@@Base>:
   13df8:	push	{fp, lr}
   13dfc:	mov	fp, sp
   13e00:	bl	13d30 <table_get@@Base>
   13e04:	ldrd	r0, [r0]
   13e08:	pop	{fp, pc}

00013e0c <table_get_uint64@@Base>:
   13e0c:	push	{fp, lr}
   13e10:	mov	fp, sp
   13e14:	bl	13d30 <table_get@@Base>
   13e18:	ldrd	r0, [r0]
   13e1c:	pop	{fp, pc}

00013e20 <table_get_short@@Base>:
   13e20:	push	{fp, lr}
   13e24:	mov	fp, sp
   13e28:	bl	13d30 <table_get@@Base>
   13e2c:	ldrsh	r0, [r0]
   13e30:	pop	{fp, pc}

00013e34 <table_get_ushort@@Base>:
   13e34:	push	{fp, lr}
   13e38:	mov	fp, sp
   13e3c:	bl	13d30 <table_get@@Base>
   13e40:	ldrh	r0, [r0]
   13e44:	pop	{fp, pc}

00013e48 <table_get_long@@Base>:
   13e48:	push	{fp, lr}
   13e4c:	mov	fp, sp
   13e50:	bl	13d30 <table_get@@Base>
   13e54:	ldr	r0, [r0]
   13e58:	pop	{fp, pc}

00013e5c <table_get_ulong@@Base>:
   13e5c:	push	{fp, lr}
   13e60:	mov	fp, sp
   13e64:	bl	13d30 <table_get@@Base>
   13e68:	ldr	r0, [r0]
   13e6c:	pop	{fp, pc}

00013e70 <table_get_llong@@Base>:
   13e70:	push	{fp, lr}
   13e74:	mov	fp, sp
   13e78:	bl	13d30 <table_get@@Base>
   13e7c:	ldrd	r0, [r0]
   13e80:	pop	{fp, pc}

00013e84 <table_get_ullong@@Base>:
   13e84:	push	{fp, lr}
   13e88:	mov	fp, sp
   13e8c:	bl	13d30 <table_get@@Base>
   13e90:	ldrd	r0, [r0]
   13e94:	pop	{fp, pc}

00013e98 <table_get_float@@Base>:
   13e98:	push	{fp, lr}
   13e9c:	mov	fp, sp
   13ea0:	bl	13d30 <table_get@@Base>
   13ea4:	vldr	s0, [r0]
   13ea8:	pop	{fp, pc}

00013eac <table_get_double@@Base>:
   13eac:	push	{fp, lr}
   13eb0:	mov	fp, sp
   13eb4:	bl	13d30 <table_get@@Base>
   13eb8:	vldr	d0, [r0]
   13ebc:	pop	{fp, pc}

00013ec0 <table_get_ldouble@@Base>:
   13ec0:	push	{fp, lr}
   13ec4:	mov	fp, sp
   13ec8:	bl	13d30 <table_get@@Base>
   13ecc:	vldr	d0, [r0]
   13ed0:	pop	{fp, pc}

00013ed4 <table_get_char@@Base>:
   13ed4:	push	{fp, lr}
   13ed8:	mov	fp, sp
   13edc:	bl	13d30 <table_get@@Base>
   13ee0:	ldrb	r0, [r0]
   13ee4:	pop	{fp, pc}

00013ee8 <table_get_uchar@@Base>:
   13ee8:	push	{fp, lr}
   13eec:	mov	fp, sp
   13ef0:	bl	13d30 <table_get@@Base>
   13ef4:	ldrb	r0, [r0]
   13ef8:	pop	{fp, pc}

00013efc <table_get_string@@Base>:
   13efc:	b	13d30 <table_get@@Base>

00013f00 <table_get_ptr@@Base>:
   13f00:	b	13d30 <table_get@@Base>

00013f04 <table_row_init@@Base>:
   13f04:	push	{r4, r5, fp, lr}
   13f08:	add	fp, sp, #8
   13f0c:	mov	r4, r0
   13f10:	bl	13f2c <table_get_row_ptr@@Base>
   13f14:	mov	r5, r0
   13f18:	ldr	r0, [r4, #12]
   13f1c:	lsl	r0, r0, #2
   13f20:	bl	11fc8 <malloc@plt>
   13f24:	str	r0, [r5]
   13f28:	pop	{r4, r5, fp, pc}

00013f2c <table_get_row_ptr@@Base>:
   13f2c:	ldr	r0, [r0, #16]
   13f30:	add	r0, r0, r1, lsl #2
   13f34:	bx	lr

00013f38 <table_row_destroy@@Base>:
   13f38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13f3c:	add	fp, sp, #24
   13f40:	mov	r4, r1
   13f44:	mov	r5, r0
   13f48:	bl	13274 <table_get_column_length@@Base>
   13f4c:	mov	r6, r0
   13f50:	mov	r0, r5
   13f54:	mov	r1, r4
   13f58:	bl	13f2c <table_get_row_ptr@@Base>
   13f5c:	mov	r8, r0
   13f60:	cmp	r6, #1
   13f64:	blt	13f88 <table_row_destroy@@Base+0x50>
   13f68:	mov	r7, #0
   13f6c:	mov	r0, r5
   13f70:	mov	r1, r4
   13f74:	mov	r2, r7
   13f78:	bl	14e5c <table_cell_destroy@@Base>
   13f7c:	add	r7, r7, #1
   13f80:	cmp	r6, r7
   13f84:	bne	13f6c <table_row_destroy@@Base+0x34>
   13f88:	ldr	r0, [r8]
   13f8c:	cmp	r0, #0
   13f90:	beq	13f9c <table_row_destroy@@Base+0x64>
   13f94:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13f98:	b	11f98 <free@plt>
   13f9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013fa0 <table_get_row_length@@Base>:
   13fa0:	ldr	r0, [r0, #20]
   13fa4:	bx	lr

00013fa8 <table_add_row@@Base>:
   13fa8:	push	{r4, sl, fp, lr}
   13fac:	add	fp, sp, #8
   13fb0:	mov	r4, r0
   13fb4:	bl	13fa0 <table_get_row_length@@Base>
   13fb8:	ldr	r1, [r4, #24]
   13fbc:	udiv	r2, r0, r1
   13fc0:	mls	r0, r2, r1, r0
   13fc4:	cmp	r0, #0
   13fc8:	moveq	r0, r4
   13fcc:	bleq	14004 <table_add_row@@Base+0x5c>
   13fd0:	mov	r0, r4
   13fd4:	bl	14034 <table_add_row@@Base+0x8c>
   13fd8:	mov	r0, r4
   13fdc:	bl	13fa0 <table_get_row_length@@Base>
   13fe0:	mov	r1, r0
   13fe4:	mov	r0, r4
   13fe8:	mvn	r2, #0
   13fec:	mov	r3, #2
   13ff0:	bl	13178 <table_notify@@Base>
   13ff4:	ldr	r0, [r4, #20]
   13ff8:	add	r1, r0, #1
   13ffc:	str	r1, [r4, #20]
   14000:	pop	{r4, sl, fp, pc}
   14004:	push	{r4, sl, fp, lr}
   14008:	add	fp, sp, #8
   1400c:	mov	r4, r0
   14010:	ldr	r0, [r0, #16]
   14014:	ldr	r1, [r4, #24]
   14018:	ldr	r2, [r4, #28]
   1401c:	add	r1, r2, r1
   14020:	str	r1, [r4, #28]
   14024:	lsl	r1, r1, #2
   14028:	bl	11fb0 <realloc@plt>
   1402c:	str	r0, [r4, #16]
   14030:	pop	{r4, sl, fp, pc}
   14034:	push	{r4, r5, r6, r7, fp, lr}
   14038:	add	fp, sp, #16
   1403c:	mov	r4, r0
   14040:	bl	13fa0 <table_get_row_length@@Base>
   14044:	mov	r5, r0
   14048:	mov	r0, r4
   1404c:	bl	13274 <table_get_column_length@@Base>
   14050:	mov	r6, r0
   14054:	mov	r0, r4
   14058:	mov	r1, r5
   1405c:	bl	13f04 <table_row_init@@Base>
   14060:	cmp	r6, #1
   14064:	blt	14088 <table_add_row@@Base+0xe0>
   14068:	mov	r7, #0
   1406c:	mov	r0, r4
   14070:	mov	r1, r5
   14074:	mov	r2, r7
   14078:	bl	14e28 <table_cell_init@@Base>
   1407c:	add	r7, r7, #1
   14080:	cmp	r6, r7
   14084:	bne	1406c <table_add_row@@Base+0xc4>
   14088:	pop	{r4, r5, r6, r7, fp, pc}

0001408c <table_remove_row@@Base>:
   1408c:	push	{r4, r5, fp, lr}
   14090:	add	fp, sp, #8
   14094:	mov	r4, r1
   14098:	mov	r5, r0
   1409c:	bl	140e8 <table_remove_row@@Base+0x5c>
   140a0:	ldr	r0, [r5, #20]
   140a4:	sub	r0, r0, #1
   140a8:	str	r0, [r5, #20]
   140ac:	mov	r0, r5
   140b0:	bl	13fa0 <table_get_row_length@@Base>
   140b4:	ldr	r1, [r5, #24]
   140b8:	udiv	r2, r0, r1
   140bc:	mls	r0, r2, r1, r0
   140c0:	cmp	r0, #0
   140c4:	moveq	r0, r5
   140c8:	bleq	141a8 <table_remove_row@@Base+0x11c>
   140cc:	mov	r0, r5
   140d0:	mov	r1, r4
   140d4:	mvn	r2, #0
   140d8:	mov	r3, #4
   140dc:	bl	13178 <table_notify@@Base>
   140e0:	mov	r0, #0
   140e4:	pop	{r4, r5, fp, pc}
   140e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   140ec:	add	fp, sp, #24
   140f0:	mov	r4, r1
   140f4:	mov	r5, r0
   140f8:	bl	13fa0 <table_get_row_length@@Base>
   140fc:	mov	r8, r0
   14100:	mov	r0, r5
   14104:	bl	13274 <table_get_column_length@@Base>
   14108:	cmp	r0, #1
   1410c:	blt	14160 <table_remove_row@@Base+0xd4>
   14110:	mov	r7, r0
   14114:	mov	r6, #0
   14118:	b	14128 <table_remove_row@@Base+0x9c>
   1411c:	add	r6, r6, #1
   14120:	cmp	r7, r6
   14124:	beq	14160 <table_remove_row@@Base+0xd4>
   14128:	mov	r0, r5
   1412c:	mov	r1, r6
   14130:	bl	132e8 <table_get_column_data_type@@Base>
   14134:	cmp	r0, #23
   14138:	beq	1411c <table_remove_row@@Base+0x90>
   1413c:	mov	r0, r5
   14140:	mov	r1, r4
   14144:	mov	r2, r6
   14148:	bl	14e40 <table_get_cell_ptr@@Base>
   1414c:	ldr	r0, [r0]
   14150:	cmp	r0, #0
   14154:	beq	1411c <table_remove_row@@Base+0x90>
   14158:	bl	11f98 <free@plt>
   1415c:	b	1411c <table_remove_row@@Base+0x90>
   14160:	mov	r0, r5
   14164:	mov	r1, r4
   14168:	bl	13f2c <table_get_row_ptr@@Base>
   1416c:	ldr	r0, [r0]
   14170:	cmp	r0, #0
   14174:	beq	1417c <table_remove_row@@Base+0xf0>
   14178:	bl	11f98 <free@plt>
   1417c:	sub	r0, r8, #1
   14180:	cmp	r0, r4
   14184:	ble	141a4 <table_remove_row@@Base+0x118>
   14188:	ldr	r1, [r5, #16]
   1418c:	add	r2, r1, r4, lsl #2
   14190:	ldr	r2, [r2, #4]
   14194:	str	r2, [r1, r4, lsl #2]
   14198:	add	r4, r4, #1
   1419c:	cmp	r0, r4
   141a0:	bne	14188 <table_remove_row@@Base+0xfc>
   141a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   141a8:	push	{r4, sl, fp, lr}
   141ac:	add	fp, sp, #8
   141b0:	mov	r4, r0
   141b4:	ldr	r0, [r0, #16]
   141b8:	ldr	r1, [r4, #24]
   141bc:	ldr	r2, [r4, #28]
   141c0:	sub	r1, r2, r1
   141c4:	str	r1, [r4, #28]
   141c8:	lsl	r1, r1, #2
   141cc:	bl	11fb0 <realloc@plt>
   141d0:	str	r0, [r4, #16]
   141d4:	pop	{r4, sl, fp, pc}

000141d8 <table_set_row_ptr@@Base>:
   141d8:	ldr	r2, [r2]
   141dc:	ldr	r0, [r0, #16]
   141e0:	str	r2, [r0, r1, lsl #2]
   141e4:	bx	lr

000141e8 <table_set@@Base>:
   141e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141ec:	add	fp, sp, #24
   141f0:	mov	r8, r3
   141f4:	mov	r4, r2
   141f8:	mov	r9, r1
   141fc:	mov	r6, r0
   14200:	bl	14e40 <table_get_cell_ptr@@Base>
   14204:	mov	r5, r0
   14208:	mov	r0, r6
   1420c:	mov	r1, r4
   14210:	bl	13244 <table_get_col_ptr@@Base>
   14214:	mvn	r7, #0
   14218:	ldr	r1, [fp, #8]
   1421c:	cmp	r1, #23
   14220:	bhi	143d8 <table_set@@Base+0x1f0>
   14224:	add	r2, pc, #0
   14228:	ldr	pc, [r2, r1, lsl #2]
   1422c:	andeq	r4, r1, ip, lsl #5
   14230:	andeq	r4, r1, ip, lsl #5
   14234:	andeq	r4, r1, r4, lsl #6
   14238:	andeq	r4, r1, r4, lsl #6
   1423c:	andeq	r4, r1, ip, lsr r3
   14240:	andeq	r4, r1, ip, lsr r3
   14244:	andeq	r4, r1, ip, lsl #5
   14248:	andeq	r4, r1, ip, lsl #5
   1424c:	andeq	r4, r1, r4, asr #5
   14250:	andeq	r4, r1, r4, asr #5
   14254:	andeq	r4, r1, ip, lsr r3
   14258:	andeq	r4, r1, ip, lsr r3
   1425c:	andeq	r4, r1, ip, lsl #5
   14260:	andeq	r4, r1, ip, lsl #5
   14264:	andeq	r4, r1, r4, asr #5
   14268:	andeq	r4, r1, r4, asr #5
   1426c:	andeq	r4, r1, ip, lsl #5
   14270:	andeq	r4, r1, r4, asr #5
   14274:	andeq	r4, r1, r4, asr #5
   14278:	andeq	r4, r1, r4, lsl #6
   1427c:	andeq	r4, r1, r4, lsl #6
   14280:	andeq	r4, r1, r4, ror r3
   14284:	andeq	r4, r1, r4, lsl #6
   14288:			; <UNDEFINED> instruction: 0x000143b0
   1428c:	ldr	r0, [r0, #4]
   14290:	cmp	r0, r1
   14294:	bne	143d8 <table_set@@Base+0x1f0>
   14298:	ldr	r0, [r5]
   1429c:	cmp	r0, #0
   142a0:	bne	142b8 <table_set@@Base+0xd0>
   142a4:	mov	r0, #4
   142a8:	bl	11fc8 <malloc@plt>
   142ac:	str	r0, [r5]
   142b0:	cmp	r0, #0
   142b4:	beq	143d8 <table_set@@Base+0x1f0>
   142b8:	ldr	r1, [r8]
   142bc:	str	r1, [r0]
   142c0:	b	143c0 <table_set@@Base+0x1d8>
   142c4:	ldr	r0, [r0, #4]
   142c8:	cmp	r0, r1
   142cc:	bne	143d8 <table_set@@Base+0x1f0>
   142d0:	ldr	r0, [r5]
   142d4:	cmp	r0, #0
   142d8:	bne	142f0 <table_set@@Base+0x108>
   142dc:	mov	r0, #8
   142e0:	bl	11fc8 <malloc@plt>
   142e4:	str	r0, [r5]
   142e8:	cmp	r0, #0
   142ec:	beq	143d8 <table_set@@Base+0x1f0>
   142f0:	ldr	r1, [r8]
   142f4:	ldr	r2, [r8, #4]
   142f8:	str	r2, [r0, #4]
   142fc:	str	r1, [r0]
   14300:	b	143c0 <table_set@@Base+0x1d8>
   14304:	ldr	r0, [r0, #4]
   14308:	cmp	r0, r1
   1430c:	bne	143d8 <table_set@@Base+0x1f0>
   14310:	ldr	r0, [r5]
   14314:	cmp	r0, #0
   14318:	bne	14330 <table_set@@Base+0x148>
   1431c:	mov	r0, #1
   14320:	bl	11fc8 <malloc@plt>
   14324:	str	r0, [r5]
   14328:	cmp	r0, #0
   1432c:	beq	143d8 <table_set@@Base+0x1f0>
   14330:	ldrb	r1, [r8]
   14334:	strb	r1, [r0]
   14338:	b	143c0 <table_set@@Base+0x1d8>
   1433c:	ldr	r0, [r0, #4]
   14340:	cmp	r0, r1
   14344:	bne	143d8 <table_set@@Base+0x1f0>
   14348:	ldr	r0, [r5]
   1434c:	cmp	r0, #0
   14350:	bne	14368 <table_set@@Base+0x180>
   14354:	mov	r0, #2
   14358:	bl	11fc8 <malloc@plt>
   1435c:	str	r0, [r5]
   14360:	cmp	r0, #0
   14364:	beq	143d8 <table_set@@Base+0x1f0>
   14368:	ldrh	r1, [r8]
   1436c:	strh	r1, [r0]
   14370:	b	143c0 <table_set@@Base+0x1d8>
   14374:	ldr	r0, [r0, #4]
   14378:	cmp	r0, r1
   1437c:	bne	143d8 <table_set@@Base+0x1f0>
   14380:	mov	r0, r8
   14384:	bl	11fec <strlen@plt>
   14388:	ldr	r2, [r5]
   1438c:	add	r1, r0, #1
   14390:	mov	r0, r2
   14394:	bl	11fb0 <realloc@plt>
   14398:	str	r0, [r5]
   1439c:	cmp	r0, #0
   143a0:	beq	143d8 <table_set@@Base+0x1f0>
   143a4:	mov	r1, r8
   143a8:	bl	11fbc <strcpy@plt>
   143ac:	b	143c0 <table_set@@Base+0x1d8>
   143b0:	ldr	r0, [r0, #4]
   143b4:	cmp	r0, r1
   143b8:	bne	143d8 <table_set@@Base+0x1f0>
   143bc:	str	r8, [r5]
   143c0:	mov	r0, r6
   143c4:	mov	r1, r9
   143c8:	mov	r2, r4
   143cc:	mov	r3, #1
   143d0:	bl	13178 <table_notify@@Base>
   143d4:	mov	r7, #0
   143d8:	mov	r0, r7
   143dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000143e0 <table_set_bool@@Base>:
   143e0:	push	{fp, lr}
   143e4:	mov	fp, sp
   143e8:	sub	sp, sp, #8
   143ec:	strb	r3, [fp, #-1]
   143f0:	mov	r3, #22
   143f4:	str	r3, [sp]
   143f8:	sub	r3, fp, #1
   143fc:	bl	141e8 <table_set@@Base>
   14400:	mov	sp, fp
   14404:	pop	{fp, pc}

00014408 <table_set_int@@Base>:
   14408:	push	{fp, lr}
   1440c:	mov	fp, sp
   14410:	sub	sp, sp, #8
   14414:	str	r3, [sp, #4]
   14418:	mov	r3, #0
   1441c:	str	r3, [sp]
   14420:	add	r3, sp, #4
   14424:	bl	141e8 <table_set@@Base>
   14428:	mov	sp, fp
   1442c:	pop	{fp, pc}

00014430 <table_set_uint@@Base>:
   14430:	push	{fp, lr}
   14434:	mov	fp, sp
   14438:	sub	sp, sp, #8
   1443c:	str	r3, [sp, #4]
   14440:	mov	r3, #1
   14444:	str	r3, [sp]
   14448:	add	r3, sp, #4
   1444c:	bl	141e8 <table_set@@Base>
   14450:	mov	sp, fp
   14454:	pop	{fp, pc}

00014458 <table_set_int8@@Base>:
   14458:	push	{fp, lr}
   1445c:	mov	fp, sp
   14460:	sub	sp, sp, #8
   14464:	strb	r3, [fp, #-1]
   14468:	mov	r3, #2
   1446c:	str	r3, [sp]
   14470:	sub	r3, fp, #1
   14474:	bl	141e8 <table_set@@Base>
   14478:	mov	sp, fp
   1447c:	pop	{fp, pc}

00014480 <table_set_uint8@@Base>:
   14480:	push	{fp, lr}
   14484:	mov	fp, sp
   14488:	sub	sp, sp, #8
   1448c:	strb	r3, [fp, #-1]
   14490:	mov	r3, #3
   14494:	str	r3, [sp]
   14498:	sub	r3, fp, #1
   1449c:	bl	141e8 <table_set@@Base>
   144a0:	mov	sp, fp
   144a4:	pop	{fp, pc}

000144a8 <table_set_int16@@Base>:
   144a8:	push	{fp, lr}
   144ac:	mov	fp, sp
   144b0:	sub	sp, sp, #8
   144b4:	strh	r3, [fp, #-2]
   144b8:	mov	r3, #4
   144bc:	str	r3, [sp]
   144c0:	sub	r3, fp, #2
   144c4:	bl	141e8 <table_set@@Base>
   144c8:	mov	sp, fp
   144cc:	pop	{fp, pc}

000144d0 <table_set_uint16@@Base>:
   144d0:	push	{fp, lr}
   144d4:	mov	fp, sp
   144d8:	sub	sp, sp, #8
   144dc:	strh	r3, [fp, #-2]
   144e0:	mov	r3, #5
   144e4:	str	r3, [sp]
   144e8:	sub	r3, fp, #2
   144ec:	bl	141e8 <table_set@@Base>
   144f0:	mov	sp, fp
   144f4:	pop	{fp, pc}

000144f8 <table_set_int32@@Base>:
   144f8:	push	{fp, lr}
   144fc:	mov	fp, sp
   14500:	sub	sp, sp, #8
   14504:	str	r3, [sp, #4]
   14508:	mov	r3, #6
   1450c:	str	r3, [sp]
   14510:	add	r3, sp, #4
   14514:	bl	141e8 <table_set@@Base>
   14518:	mov	sp, fp
   1451c:	pop	{fp, pc}

00014520 <table_set_uint32@@Base>:
   14520:	push	{fp, lr}
   14524:	mov	fp, sp
   14528:	sub	sp, sp, #8
   1452c:	str	r3, [sp, #4]
   14530:	mov	r3, #7
   14534:	str	r3, [sp]
   14538:	add	r3, sp, #4
   1453c:	bl	141e8 <table_set@@Base>
   14540:	mov	sp, fp
   14544:	pop	{fp, pc}

00014548 <table_set_int64@@Base>:
   14548:	push	{fp, lr}
   1454c:	mov	fp, sp
   14550:	sub	sp, sp, #16
   14554:	ldr	r3, [fp, #12]
   14558:	str	r3, [sp, #12]
   1455c:	ldr	r3, [fp, #8]
   14560:	str	r3, [sp, #8]
   14564:	mov	r3, #8
   14568:	str	r3, [sp]
   1456c:	add	r3, sp, #8
   14570:	bl	141e8 <table_set@@Base>
   14574:	mov	sp, fp
   14578:	pop	{fp, pc}

0001457c <table_set_uint64@@Base>:
   1457c:	push	{fp, lr}
   14580:	mov	fp, sp
   14584:	sub	sp, sp, #16
   14588:	ldr	r3, [fp, #12]
   1458c:	str	r3, [sp, #12]
   14590:	ldr	r3, [fp, #8]
   14594:	str	r3, [sp, #8]
   14598:	mov	r3, #9
   1459c:	str	r3, [sp]
   145a0:	add	r3, sp, #8
   145a4:	bl	141e8 <table_set@@Base>
   145a8:	mov	sp, fp
   145ac:	pop	{fp, pc}

000145b0 <table_set_short@@Base>:
   145b0:	push	{fp, lr}
   145b4:	mov	fp, sp
   145b8:	sub	sp, sp, #8
   145bc:	strh	r3, [fp, #-2]
   145c0:	mov	r3, #10
   145c4:	str	r3, [sp]
   145c8:	sub	r3, fp, #2
   145cc:	bl	141e8 <table_set@@Base>
   145d0:	mov	sp, fp
   145d4:	pop	{fp, pc}

000145d8 <table_set_ushort@@Base>:
   145d8:	push	{fp, lr}
   145dc:	mov	fp, sp
   145e0:	sub	sp, sp, #8
   145e4:	strh	r3, [fp, #-2]
   145e8:	mov	r3, #11
   145ec:	str	r3, [sp]
   145f0:	sub	r3, fp, #2
   145f4:	bl	141e8 <table_set@@Base>
   145f8:	mov	sp, fp
   145fc:	pop	{fp, pc}

00014600 <table_set_long@@Base>:
   14600:	push	{fp, lr}
   14604:	mov	fp, sp
   14608:	sub	sp, sp, #8
   1460c:	str	r3, [sp, #4]
   14610:	mov	r3, #12
   14614:	str	r3, [sp]
   14618:	add	r3, sp, #4
   1461c:	bl	141e8 <table_set@@Base>
   14620:	mov	sp, fp
   14624:	pop	{fp, pc}

00014628 <table_set_ulong@@Base>:
   14628:	push	{fp, lr}
   1462c:	mov	fp, sp
   14630:	sub	sp, sp, #8
   14634:	str	r3, [sp, #4]
   14638:	mov	r3, #13
   1463c:	str	r3, [sp]
   14640:	add	r3, sp, #4
   14644:	bl	141e8 <table_set@@Base>
   14648:	mov	sp, fp
   1464c:	pop	{fp, pc}

00014650 <table_set_llong@@Base>:
   14650:	push	{fp, lr}
   14654:	mov	fp, sp
   14658:	sub	sp, sp, #16
   1465c:	ldr	r3, [fp, #12]
   14660:	str	r3, [sp, #12]
   14664:	ldr	r3, [fp, #8]
   14668:	str	r3, [sp, #8]
   1466c:	mov	r3, #14
   14670:	str	r3, [sp]
   14674:	add	r3, sp, #8
   14678:	bl	141e8 <table_set@@Base>
   1467c:	mov	sp, fp
   14680:	pop	{fp, pc}

00014684 <table_set_ullong@@Base>:
   14684:	push	{fp, lr}
   14688:	mov	fp, sp
   1468c:	sub	sp, sp, #16
   14690:	ldr	r3, [fp, #12]
   14694:	str	r3, [sp, #12]
   14698:	ldr	r3, [fp, #8]
   1469c:	str	r3, [sp, #8]
   146a0:	mov	r3, #15
   146a4:	str	r3, [sp]
   146a8:	add	r3, sp, #8
   146ac:	bl	141e8 <table_set@@Base>
   146b0:	mov	sp, fp
   146b4:	pop	{fp, pc}

000146b8 <table_set_float@@Base>:
   146b8:	push	{fp, lr}
   146bc:	mov	fp, sp
   146c0:	sub	sp, sp, #8
   146c4:	vstr	s0, [sp, #4]
   146c8:	mov	r3, #16
   146cc:	str	r3, [sp]
   146d0:	add	r3, sp, #4
   146d4:	bl	141e8 <table_set@@Base>
   146d8:	mov	sp, fp
   146dc:	pop	{fp, pc}

000146e0 <table_set_double@@Base>:
   146e0:	push	{fp, lr}
   146e4:	mov	fp, sp
   146e8:	sub	sp, sp, #16
   146ec:	vstr	d0, [sp, #8]
   146f0:	mov	r3, #17
   146f4:	str	r3, [sp]
   146f8:	add	r3, sp, #8
   146fc:	bl	141e8 <table_set@@Base>
   14700:	mov	sp, fp
   14704:	pop	{fp, pc}

00014708 <table_set_ldouble@@Base>:
   14708:	push	{fp, lr}
   1470c:	mov	fp, sp
   14710:	sub	sp, sp, #16
   14714:	vstr	d0, [sp, #8]
   14718:	mov	r3, #18
   1471c:	str	r3, [sp]
   14720:	add	r3, sp, #8
   14724:	bl	141e8 <table_set@@Base>
   14728:	mov	sp, fp
   1472c:	pop	{fp, pc}

00014730 <table_set_string@@Base>:
   14730:	push	{fp, lr}
   14734:	mov	fp, sp
   14738:	sub	sp, sp, #8
   1473c:	mov	ip, #21
   14740:	str	ip, [sp]
   14744:	bl	141e8 <table_set@@Base>
   14748:	mov	sp, fp
   1474c:	pop	{fp, pc}

00014750 <table_set_char@@Base>:
   14750:	push	{fp, lr}
   14754:	mov	fp, sp
   14758:	sub	sp, sp, #8
   1475c:	strb	r3, [fp, #-1]
   14760:	mov	r3, #19
   14764:	str	r3, [sp]
   14768:	sub	r3, fp, #1
   1476c:	bl	141e8 <table_set@@Base>
   14770:	mov	sp, fp
   14774:	pop	{fp, pc}

00014778 <table_set_uchar@@Base>:
   14778:	push	{fp, lr}
   1477c:	mov	fp, sp
   14780:	sub	sp, sp, #8
   14784:	strb	r3, [fp, #-1]
   14788:	mov	r3, #20
   1478c:	str	r3, [sp]
   14790:	sub	r3, fp, #1
   14794:	bl	141e8 <table_set@@Base>
   14798:	mov	sp, fp
   1479c:	pop	{fp, pc}

000147a0 <table_set_ptr@@Base>:
   147a0:	push	{fp, lr}
   147a4:	mov	fp, sp
   147a8:	sub	sp, sp, #8
   147ac:	mov	ip, #23
   147b0:	str	ip, [sp]
   147b4:	bl	141e8 <table_set@@Base>
   147b8:	mov	sp, fp
   147bc:	pop	{fp, pc}

000147c0 <table_serialize@@Base>:
   147c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147c4:	add	fp, sp, #28
   147c8:	sub	sp, sp, #4
   147cc:	mov	r5, r1
   147d0:	mov	r4, r0
   147d4:	bl	13fa0 <table_get_row_length@@Base>
   147d8:	str	r0, [sp]
   147dc:	mov	r0, r4
   147e0:	bl	13274 <table_get_column_length@@Base>
   147e4:	mov	r9, r0
   147e8:	str	r0, [r5]
   147ec:	ldr	r0, [r4, #8]
   147f0:	str	r0, [r5, #4]
   147f4:	add	r5, r5, #8
   147f8:	cmp	r9, #1
   147fc:	blt	14850 <table_serialize@@Base+0x90>
   14800:	mov	r6, #0
   14804:	mov	r0, r4
   14808:	mov	r1, r6
   1480c:	bl	132d4 <table_get_column_name@@Base>
   14810:	mov	r8, r0
   14814:	bl	11fec <strlen@plt>
   14818:	mov	sl, r0
   1481c:	mov	r0, r4
   14820:	mov	r1, r6
   14824:	bl	132e8 <table_get_column_data_type@@Base>
   14828:	str	r0, [r5], #4
   1482c:	add	r7, sl, #1
   14830:	mov	r0, r5
   14834:	mov	r1, r8
   14838:	mov	r2, r7
   1483c:	bl	1201c <strncpy@plt>
   14840:	add	r5, r5, r7
   14844:	add	r6, r6, #1
   14848:	cmp	r9, r6
   1484c:	bne	14804 <table_serialize@@Base+0x44>
   14850:	ldr	r1, [sp]
   14854:	str	r1, [r5]
   14858:	ldr	r0, [r4, #24]
   1485c:	str	r0, [r5, #4]
   14860:	add	r7, r5, #8
   14864:	cmp	r1, #1
   14868:	blt	149e4 <table_serialize@@Base+0x224>
   1486c:	mov	r8, #0
   14870:	cmp	r9, #1
   14874:	bge	14890 <table_serialize@@Base+0xd0>
   14878:	add	r8, r8, #1
   1487c:	ldr	r0, [sp]
   14880:	cmp	r8, r0
   14884:	beq	149e4 <table_serialize@@Base+0x224>
   14888:	cmp	r9, #1
   1488c:	blt	14878 <table_serialize@@Base+0xb8>
   14890:	mov	r6, #0
   14894:	b	148bc <table_serialize@@Base+0xfc>
   14898:	mov	r0, r4
   1489c:	mov	r1, r8
   148a0:	mov	r2, r6
   148a4:	bl	13d30 <table_get@@Base>
   148a8:	ldrb	r0, [r0]
   148ac:	strb	r0, [r7], #1
   148b0:	add	r6, r6, #1
   148b4:	cmp	r9, r6
   148b8:	beq	14878 <table_serialize@@Base+0xb8>
   148bc:	mov	r0, r4
   148c0:	mov	r1, r6
   148c4:	bl	132e8 <table_get_column_data_type@@Base>
   148c8:	cmp	r0, #23
   148cc:	bhi	148b0 <table_serialize@@Base+0xf0>
   148d0:	add	r1, pc, #0
   148d4:	ldr	pc, [r1, r0, lsl #2]
   148d8:	andeq	r4, r1, r8, lsr r9
   148dc:	andeq	r4, r1, r8, lsr r9
   148e0:	muleq	r1, r8, r8
   148e4:	muleq	r1, r8, r8
   148e8:	andeq	r4, r1, r4, asr r9
   148ec:	andeq	r4, r1, r4, asr r9
   148f0:	andeq	r4, r1, r8, lsr r9
   148f4:	andeq	r4, r1, r8, lsr r9
   148f8:	andeq	r4, r1, r0, ror r9
   148fc:	andeq	r4, r1, r0, ror r9
   14900:	andeq	r4, r1, r4, asr r9
   14904:	andeq	r4, r1, r4, asr r9
   14908:	andeq	r4, r1, r8, lsr r9
   1490c:	andeq	r4, r1, r8, lsr r9
   14910:	andeq	r4, r1, r0, ror r9
   14914:	andeq	r4, r1, r0, ror r9
   14918:	andeq	r4, r1, r8, lsr r9
   1491c:	muleq	r1, r0, r9
   14920:	muleq	r1, r0, r9
   14924:	muleq	r1, r8, r8
   14928:	muleq	r1, r8, r8
   1492c:			; <UNDEFINED> instruction: 0x000149b0
   14930:	muleq	r1, r8, r8
   14934:	andeq	r4, r1, r8, lsr r9
   14938:	mov	r0, r4
   1493c:	mov	r1, r8
   14940:	mov	r2, r6
   14944:	bl	13d30 <table_get@@Base>
   14948:	ldr	r0, [r0]
   1494c:	str	r0, [r7], #4
   14950:	b	148b0 <table_serialize@@Base+0xf0>
   14954:	mov	r0, r4
   14958:	mov	r1, r8
   1495c:	mov	r2, r6
   14960:	bl	13d30 <table_get@@Base>
   14964:	ldrh	r0, [r0]
   14968:	strh	r0, [r7], #2
   1496c:	b	148b0 <table_serialize@@Base+0xf0>
   14970:	mov	r0, r4
   14974:	mov	r1, r8
   14978:	mov	r2, r6
   1497c:	bl	13d30 <table_get@@Base>
   14980:	ldrd	r0, [r0]
   14984:	strd	r0, [r7]
   14988:	add	r7, r7, #8
   1498c:	b	148b0 <table_serialize@@Base+0xf0>
   14990:	mov	r0, r4
   14994:	mov	r1, r8
   14998:	mov	r2, r6
   1499c:	bl	13d30 <table_get@@Base>
   149a0:	vldr	d16, [r0]
   149a4:	vstr	d16, [r7]
   149a8:	add	r7, r7, #8
   149ac:	b	148b0 <table_serialize@@Base+0xf0>
   149b0:	mov	r0, r4
   149b4:	mov	r1, r8
   149b8:	mov	r2, r6
   149bc:	bl	13efc <table_get_string@@Base>
   149c0:	mov	sl, r0
   149c4:	bl	11fec <strlen@plt>
   149c8:	add	r5, r0, #1
   149cc:	mov	r0, r7
   149d0:	mov	r1, sl
   149d4:	mov	r2, r5
   149d8:	bl	1201c <strncpy@plt>
   149dc:	add	r7, r7, r5
   149e0:	b	148b0 <table_serialize@@Base+0xf0>
   149e4:	ldr	r0, [r4, #32]
   149e8:	str	r0, [r7]
   149ec:	ldr	r0, [r4, #48]	; 0x30
   149f0:	str	r0, [r7, #4]
   149f4:	ldr	r0, [r4, #32]
   149f8:	cmp	r0, #1
   149fc:	blt	14a40 <table_serialize@@Base+0x280>
   14a00:	add	r0, r7, #8
   14a04:	mov	r1, #0
   14a08:	ldr	r2, [r4, #36]	; 0x24
   14a0c:	ldr	r2, [r2, r1, lsl #2]
   14a10:	str	r2, [r0]
   14a14:	ldr	r2, [r4, #40]	; 0x28
   14a18:	ldr	r2, [r2, r1, lsl #2]
   14a1c:	str	r2, [r0, #4]
   14a20:	ldr	r2, [r4, #44]	; 0x2c
   14a24:	ldr	r2, [r2, r1, lsl #2]
   14a28:	str	r2, [r0, #8]
   14a2c:	add	r0, r0, #12
   14a30:	add	r1, r1, #1
   14a34:	ldr	r2, [r4, #32]
   14a38:	cmp	r1, r2
   14a3c:	blt	14a08 <table_serialize@@Base+0x248>
   14a40:	sub	sp, fp, #28
   14a44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014a48 <table_deserialize@@Base>:
   14a48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a4c:	add	fp, sp, #24
   14a50:	sub	sp, sp, #8
   14a54:	mov	r5, r0
   14a58:	bl	1280c <table_new@@Base>
   14a5c:	mov	r4, r0
   14a60:	ldr	r9, [r5]
   14a64:	ldr	r0, [r5, #4]
   14a68:	str	r0, [r4, #8]
   14a6c:	ldr	r8, [r5, #8]!
   14a70:	add	r6, r5, #4
   14a74:	cmp	r9, #1
   14a78:	blt	14aac <table_deserialize@@Base+0x64>
   14a7c:	mov	r7, r9
   14a80:	mov	r0, r4
   14a84:	mov	r1, r6
   14a88:	mov	r2, r8
   14a8c:	bl	132fc <table_add_column@@Base>
   14a90:	mov	r0, r6
   14a94:	bl	11fec <strlen@plt>
   14a98:	add	r5, r5, r0
   14a9c:	ldr	r8, [r5, #5]!
   14aa0:	add	r6, r5, #4
   14aa4:	subs	r7, r7, #1
   14aa8:	bne	14a80 <table_deserialize@@Base+0x38>
   14aac:	ldr	r0, [r6]
   14ab0:	str	r0, [r4, #24]
   14ab4:	add	r6, r5, #8
   14ab8:	cmp	r8, #1
   14abc:	blt	14dec <table_deserialize@@Base+0x3a4>
   14ac0:	mov	r7, #0
   14ac4:	b	14ad4 <table_deserialize@@Base+0x8c>
   14ac8:	add	r7, r7, #1
   14acc:	cmp	r7, r8
   14ad0:	beq	14dec <table_deserialize@@Base+0x3a4>
   14ad4:	mov	r0, r4
   14ad8:	bl	13fa8 <table_add_row@@Base>
   14adc:	cmp	r9, #1
   14ae0:	blt	14ac8 <table_deserialize@@Base+0x80>
   14ae4:	mov	r5, #0
   14ae8:	b	14b0c <table_deserialize@@Base+0xc4>
   14aec:	ldr	r3, [r6], #4
   14af0:	mov	r0, r4
   14af4:	mov	r1, r7
   14af8:	mov	r2, r5
   14afc:	bl	147a0 <table_set_ptr@@Base>
   14b00:	add	r5, r5, #1
   14b04:	cmp	r9, r5
   14b08:	beq	14ac8 <table_deserialize@@Base+0x80>
   14b0c:	mov	r0, r4
   14b10:	mov	r1, r5
   14b14:	bl	132e8 <table_get_column_data_type@@Base>
   14b18:	cmp	r0, #23
   14b1c:	bhi	14b00 <table_deserialize@@Base+0xb8>
   14b20:	add	r1, pc, #0
   14b24:	ldr	pc, [r1, r0, lsl #2]
   14b28:	andeq	r4, r1, r8, lsl #23
   14b2c:	andeq	r4, r1, r0, lsr #23
   14b30:			; <UNDEFINED> instruction: 0x00014bb8
   14b34:	ldrdeq	r4, [r1], -r0
   14b38:	andeq	r4, r1, r8, ror #23
   14b3c:	andeq	r4, r1, r0, lsl #24
   14b40:	andeq	r4, r1, r8, lsl ip
   14b44:	andeq	r4, r1, r0, lsr ip
   14b48:	andeq	r4, r1, r8, asr #24
   14b4c:	andeq	r4, r1, r8, ror #24
   14b50:	andeq	r4, r1, r8, lsl #25
   14b54:	andeq	r4, r1, r0, lsr #25
   14b58:			; <UNDEFINED> instruction: 0x00014cb8
   14b5c:	ldrdeq	r4, [r1], -r0
   14b60:	andeq	r4, r1, r8, ror #25
   14b64:	andeq	r4, r1, r8, lsl #26
   14b68:	andeq	r4, r1, r8, lsr #26
   14b6c:	andeq	r4, r1, r4, asr #26
   14b70:	andeq	r4, r1, r0, ror #26
   14b74:	andeq	r4, r1, ip, ror sp
   14b78:	muleq	r1, r4, sp
   14b7c:	andeq	r4, r1, ip, lsr #27
   14b80:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14b84:	andeq	r4, r1, ip, ror #21
   14b88:	ldr	r3, [r6], #4
   14b8c:	mov	r0, r4
   14b90:	mov	r1, r7
   14b94:	mov	r2, r5
   14b98:	bl	14408 <table_set_int@@Base>
   14b9c:	b	14b00 <table_deserialize@@Base+0xb8>
   14ba0:	ldr	r3, [r6], #4
   14ba4:	mov	r0, r4
   14ba8:	mov	r1, r7
   14bac:	mov	r2, r5
   14bb0:	bl	14430 <table_set_uint@@Base>
   14bb4:	b	14b00 <table_deserialize@@Base+0xb8>
   14bb8:	ldrsb	r3, [r6], #1
   14bbc:	mov	r0, r4
   14bc0:	mov	r1, r7
   14bc4:	mov	r2, r5
   14bc8:	bl	14458 <table_set_int8@@Base>
   14bcc:	b	14b00 <table_deserialize@@Base+0xb8>
   14bd0:	ldrb	r3, [r6], #1
   14bd4:	mov	r0, r4
   14bd8:	mov	r1, r7
   14bdc:	mov	r2, r5
   14be0:	bl	14480 <table_set_uint8@@Base>
   14be4:	b	14b00 <table_deserialize@@Base+0xb8>
   14be8:	ldrsh	r3, [r6], #2
   14bec:	mov	r0, r4
   14bf0:	mov	r1, r7
   14bf4:	mov	r2, r5
   14bf8:	bl	144a8 <table_set_int16@@Base>
   14bfc:	b	14b00 <table_deserialize@@Base+0xb8>
   14c00:	ldrh	r3, [r6], #2
   14c04:	mov	r0, r4
   14c08:	mov	r1, r7
   14c0c:	mov	r2, r5
   14c10:	bl	144d0 <table_set_uint16@@Base>
   14c14:	b	14b00 <table_deserialize@@Base+0xb8>
   14c18:	ldr	r3, [r6], #4
   14c1c:	mov	r0, r4
   14c20:	mov	r1, r7
   14c24:	mov	r2, r5
   14c28:	bl	144f8 <table_set_int32@@Base>
   14c2c:	b	14b00 <table_deserialize@@Base+0xb8>
   14c30:	ldr	r3, [r6], #4
   14c34:	mov	r0, r4
   14c38:	mov	r1, r7
   14c3c:	mov	r2, r5
   14c40:	bl	14520 <table_set_uint32@@Base>
   14c44:	b	14b00 <table_deserialize@@Base+0xb8>
   14c48:	ldrd	r0, [r6]
   14c4c:	stm	sp, {r0, r1}
   14c50:	mov	r0, r4
   14c54:	mov	r1, r7
   14c58:	mov	r2, r5
   14c5c:	bl	14548 <table_set_int64@@Base>
   14c60:	add	r6, r6, #8
   14c64:	b	14b00 <table_deserialize@@Base+0xb8>
   14c68:	ldrd	r0, [r6]
   14c6c:	stm	sp, {r0, r1}
   14c70:	mov	r0, r4
   14c74:	mov	r1, r7
   14c78:	mov	r2, r5
   14c7c:	bl	1457c <table_set_uint64@@Base>
   14c80:	add	r6, r6, #8
   14c84:	b	14b00 <table_deserialize@@Base+0xb8>
   14c88:	ldrsh	r3, [r6], #2
   14c8c:	mov	r0, r4
   14c90:	mov	r1, r7
   14c94:	mov	r2, r5
   14c98:	bl	145b0 <table_set_short@@Base>
   14c9c:	b	14b00 <table_deserialize@@Base+0xb8>
   14ca0:	ldrh	r3, [r6], #2
   14ca4:	mov	r0, r4
   14ca8:	mov	r1, r7
   14cac:	mov	r2, r5
   14cb0:	bl	145d8 <table_set_ushort@@Base>
   14cb4:	b	14b00 <table_deserialize@@Base+0xb8>
   14cb8:	ldr	r3, [r6], #4
   14cbc:	mov	r0, r4
   14cc0:	mov	r1, r7
   14cc4:	mov	r2, r5
   14cc8:	bl	14600 <table_set_long@@Base>
   14ccc:	b	14b00 <table_deserialize@@Base+0xb8>
   14cd0:	ldr	r3, [r6], #4
   14cd4:	mov	r0, r4
   14cd8:	mov	r1, r7
   14cdc:	mov	r2, r5
   14ce0:	bl	14628 <table_set_ulong@@Base>
   14ce4:	b	14b00 <table_deserialize@@Base+0xb8>
   14ce8:	ldrd	r0, [r6]
   14cec:	stm	sp, {r0, r1}
   14cf0:	mov	r0, r4
   14cf4:	mov	r1, r7
   14cf8:	mov	r2, r5
   14cfc:	bl	14650 <table_set_llong@@Base>
   14d00:	add	r6, r6, #8
   14d04:	b	14b00 <table_deserialize@@Base+0xb8>
   14d08:	ldrd	r0, [r6]
   14d0c:	stm	sp, {r0, r1}
   14d10:	mov	r0, r4
   14d14:	mov	r1, r7
   14d18:	mov	r2, r5
   14d1c:	bl	14684 <table_set_ullong@@Base>
   14d20:	add	r6, r6, #8
   14d24:	b	14b00 <table_deserialize@@Base+0xb8>
   14d28:	vldr	s0, [r6]
   14d2c:	mov	r0, r4
   14d30:	mov	r1, r7
   14d34:	mov	r2, r5
   14d38:	bl	146b8 <table_set_float@@Base>
   14d3c:	add	r6, r6, #4
   14d40:	b	14b00 <table_deserialize@@Base+0xb8>
   14d44:	vldr	d0, [r6]
   14d48:	mov	r0, r4
   14d4c:	mov	r1, r7
   14d50:	mov	r2, r5
   14d54:	bl	146e0 <table_set_double@@Base>
   14d58:	add	r6, r6, #8
   14d5c:	b	14b00 <table_deserialize@@Base+0xb8>
   14d60:	vldr	d0, [r6]
   14d64:	mov	r0, r4
   14d68:	mov	r1, r7
   14d6c:	mov	r2, r5
   14d70:	bl	14708 <table_set_ldouble@@Base>
   14d74:	add	r6, r6, #8
   14d78:	b	14b00 <table_deserialize@@Base+0xb8>
   14d7c:	ldrb	r3, [r6], #1
   14d80:	mov	r0, r4
   14d84:	mov	r1, r7
   14d88:	mov	r2, r5
   14d8c:	bl	14750 <table_set_char@@Base>
   14d90:	b	14b00 <table_deserialize@@Base+0xb8>
   14d94:	ldrb	r3, [r6], #1
   14d98:	mov	r0, r4
   14d9c:	mov	r1, r7
   14da0:	mov	r2, r5
   14da4:	bl	14778 <table_set_uchar@@Base>
   14da8:	b	14b00 <table_deserialize@@Base+0xb8>
   14dac:	mov	r0, r4
   14db0:	mov	r1, r7
   14db4:	mov	r2, r5
   14db8:	mov	r3, r6
   14dbc:	bl	14730 <table_set_string@@Base>
   14dc0:	mov	r0, r6
   14dc4:	bl	11fec <strlen@plt>
   14dc8:	add	r0, r6, r0
   14dcc:	add	r6, r0, #1
   14dd0:	b	14b00 <table_deserialize@@Base+0xb8>
   14dd4:	ldrb	r3, [r6], #1
   14dd8:	mov	r0, r4
   14ddc:	mov	r1, r7
   14de0:	mov	r2, r5
   14de4:	bl	143e0 <table_set_bool@@Base>
   14de8:	b	14b00 <table_deserialize@@Base+0xb8>
   14dec:	ldr	r5, [r6]
   14df0:	ldr	r0, [r6, #4]
   14df4:	str	r0, [r4, #48]	; 0x30
   14df8:	cmp	r5, #1
   14dfc:	blt	14e1c <table_deserialize@@Base+0x3d4>
   14e00:	add	r6, r6, #8
   14e04:	ldm	r6, {r1, r2, r3}
   14e08:	mov	r0, r4
   14e0c:	bl	12efc <table_register_callback@@Base>
   14e10:	add	r6, r6, #12
   14e14:	subs	r5, r5, #1
   14e18:	bne	14e04 <table_deserialize@@Base+0x3bc>
   14e1c:	mov	r0, r4
   14e20:	sub	sp, fp, #24
   14e24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014e28 <table_cell_init@@Base>:
   14e28:	push	{fp, lr}
   14e2c:	mov	fp, sp
   14e30:	bl	14e40 <table_get_cell_ptr@@Base>
   14e34:	mov	r1, #0
   14e38:	str	r1, [r0]
   14e3c:	pop	{fp, pc}

00014e40 <table_get_cell_ptr@@Base>:
   14e40:	push	{r4, sl, fp, lr}
   14e44:	add	fp, sp, #8
   14e48:	mov	r4, r2
   14e4c:	bl	13f2c <table_get_row_ptr@@Base>
   14e50:	ldr	r0, [r0]
   14e54:	add	r0, r0, r4, lsl #2
   14e58:	pop	{r4, sl, fp, pc}

00014e5c <table_cell_destroy@@Base>:
   14e5c:	push	{r4, r5, r6, sl, fp, lr}
   14e60:	add	fp, sp, #16
   14e64:	mov	r4, r2
   14e68:	mov	r5, r1
   14e6c:	mov	r6, r0
   14e70:	mov	r1, r2
   14e74:	bl	132e8 <table_get_column_data_type@@Base>
   14e78:	cmp	r0, #23
   14e7c:	popeq	{r4, r5, r6, sl, fp, pc}
   14e80:	mov	r0, r6
   14e84:	mov	r1, r5
   14e88:	mov	r2, r4
   14e8c:	bl	14e40 <table_get_cell_ptr@@Base>
   14e90:	ldr	r0, [r0]
   14e94:	cmp	r0, #0
   14e98:	beq	14ea4 <table_cell_destroy@@Base+0x48>
   14e9c:	pop	{r4, r5, r6, sl, fp, lr}
   14ea0:	b	11f98 <free@plt>
   14ea4:	pop	{r4, r5, r6, sl, fp, pc}

00014ea8 <table_cell_to_buffer@@Base>:
   14ea8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14eac:	add	fp, sp, #24
   14eb0:	sub	sp, sp, #8
   14eb4:	mov	r5, r3
   14eb8:	mov	r6, r2
   14ebc:	mov	r7, r1
   14ec0:	mov	r4, r0
   14ec4:	mov	r1, r2
   14ec8:	bl	132e8 <table_get_column_data_type@@Base>
   14ecc:	cmp	r0, #23
   14ed0:	bhi	151c0 <table_cell_to_buffer@@Base+0x318>
   14ed4:	ldr	r8, [fp, #8]
   14ed8:	add	r1, pc, #0
   14edc:	ldr	pc, [r1, r0, lsl #2]
   14ee0:	andeq	r4, r1, r0, asr #30
   14ee4:	andeq	r4, r1, r4, asr pc
   14ee8:	andeq	r4, r1, r8, ror #30
   14eec:	andeq	r4, r1, ip, ror pc
   14ef0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   14ef4:	andeq	r4, r1, r4, lsr #31
   14ef8:			; <UNDEFINED> instruction: 0x00014fb8
   14efc:	andeq	r4, r1, ip, asr #31
   14f00:	andeq	r4, r1, ip, ror #31
   14f04:	andeq	r5, r1, r0
   14f08:	andeq	r5, r1, r4, lsl r0
   14f0c:	andeq	r5, r1, r4, lsr r0
   14f10:	andeq	r5, r1, r4, asr r0
   14f14:	andeq	r5, r1, r4, ror r0
   14f18:	muleq	r1, r4, r0
   14f1c:	strheq	r5, [r1], -r4
   14f20:	ldrdeq	r5, [r1], -r4
   14f24:	strdeq	r5, [r1], -r8
   14f28:	andeq	r5, r1, r8, lsl r1
   14f2c:	andeq	r5, r1, r4, asr #2
   14f30:	andeq	r5, r1, r8, asr r1
   14f34:	andeq	r5, r1, r8, ror r1
   14f38:	muleq	r1, r8, r1
   14f3c:	andeq	r5, r1, ip, asr #3
   14f40:	mov	r0, r4
   14f44:	mov	r1, r7
   14f48:	mov	r2, r6
   14f4c:	bl	13d58 <table_get_int@@Base>
   14f50:	b	151a8 <table_cell_to_buffer@@Base+0x300>
   14f54:	mov	r0, r4
   14f58:	mov	r1, r7
   14f5c:	mov	r2, r6
   14f60:	bl	13d6c <table_get_uint@@Base>
   14f64:	b	14fdc <table_cell_to_buffer@@Base+0x134>
   14f68:	mov	r0, r4
   14f6c:	mov	r1, r7
   14f70:	mov	r2, r6
   14f74:	bl	13d80 <table_get_int8@@Base>
   14f78:	b	151a8 <table_cell_to_buffer@@Base+0x300>
   14f7c:	mov	r0, r4
   14f80:	mov	r1, r7
   14f84:	mov	r2, r6
   14f88:	bl	13d94 <table_get_uint8@@Base>
   14f8c:	b	14fdc <table_cell_to_buffer@@Base+0x134>
   14f90:	mov	r0, r4
   14f94:	mov	r1, r7
   14f98:	mov	r2, r6
   14f9c:	bl	13da8 <table_get_int16@@Base>
   14fa0:	b	151a8 <table_cell_to_buffer@@Base+0x300>
   14fa4:	mov	r0, r4
   14fa8:	mov	r1, r7
   14fac:	mov	r2, r6
   14fb0:	bl	13dbc <table_get_uint16@@Base>
   14fb4:	b	14fdc <table_cell_to_buffer@@Base+0x134>
   14fb8:	mov	r0, r4
   14fbc:	mov	r1, r7
   14fc0:	mov	r2, r6
   14fc4:	bl	13dd0 <table_get_int32@@Base>
   14fc8:	b	151a8 <table_cell_to_buffer@@Base+0x300>
   14fcc:	mov	r0, r4
   14fd0:	mov	r1, r7
   14fd4:	mov	r2, r6
   14fd8:	bl	13de4 <table_get_uint32@@Base>
   14fdc:	mov	r3, r0
   14fe0:	movw	r2, #23048	; 0x5a08
   14fe4:	movt	r2, #1
   14fe8:	b	151b4 <table_cell_to_buffer@@Base+0x30c>
   14fec:	mov	r0, r4
   14ff0:	mov	r1, r7
   14ff4:	mov	r2, r6
   14ff8:	bl	13df8 <table_get_int64@@Base>
   14ffc:	b	150a4 <table_cell_to_buffer@@Base+0x1fc>
   15000:	mov	r0, r4
   15004:	mov	r1, r7
   15008:	mov	r2, r6
   1500c:	bl	13e0c <table_get_uint64@@Base>
   15010:	b	150c4 <table_cell_to_buffer@@Base+0x21c>
   15014:	mov	r0, r4
   15018:	mov	r1, r7
   1501c:	mov	r2, r6
   15020:	bl	13e20 <table_get_short@@Base>
   15024:	mov	r3, r0
   15028:	movw	r2, #23061	; 0x5a15
   1502c:	movt	r2, #1
   15030:	b	151b4 <table_cell_to_buffer@@Base+0x30c>
   15034:	mov	r0, r4
   15038:	mov	r1, r7
   1503c:	mov	r2, r6
   15040:	bl	13e34 <table_get_ushort@@Base>
   15044:	mov	r3, r0
   15048:	movw	r2, #23065	; 0x5a19
   1504c:	movt	r2, #1
   15050:	b	151b4 <table_cell_to_buffer@@Base+0x30c>
   15054:	mov	r0, r4
   15058:	mov	r1, r7
   1505c:	mov	r2, r6
   15060:	bl	13e48 <table_get_long@@Base>
   15064:	mov	r3, r0
   15068:	movw	r2, #23069	; 0x5a1d
   1506c:	movt	r2, #1
   15070:	b	151b4 <table_cell_to_buffer@@Base+0x30c>
   15074:	mov	r0, r4
   15078:	mov	r1, r7
   1507c:	mov	r2, r6
   15080:	bl	13e5c <table_get_ulong@@Base>
   15084:	mov	r3, r0
   15088:	movw	r2, #23073	; 0x5a21
   1508c:	movt	r2, #1
   15090:	b	151b4 <table_cell_to_buffer@@Base+0x30c>
   15094:	mov	r0, r4
   15098:	mov	r1, r7
   1509c:	mov	r2, r6
   150a0:	bl	13e70 <table_get_llong@@Base>
   150a4:	stm	sp, {r0, r1}
   150a8:	movw	r2, #23051	; 0x5a0b
   150ac:	movt	r2, #1
   150b0:	b	15134 <table_cell_to_buffer@@Base+0x28c>
   150b4:	mov	r0, r4
   150b8:	mov	r1, r7
   150bc:	mov	r2, r6
   150c0:	bl	13e84 <table_get_ullong@@Base>
   150c4:	stm	sp, {r0, r1}
   150c8:	movw	r2, #23056	; 0x5a10
   150cc:	movt	r2, #1
   150d0:	b	15134 <table_cell_to_buffer@@Base+0x28c>
   150d4:	mov	r0, r4
   150d8:	mov	r1, r7
   150dc:	mov	r2, r6
   150e0:	bl	13e98 <table_get_float@@Base>
   150e4:	vcvt.f64.f32	d16, s0
   150e8:	vstr	d16, [sp]
   150ec:	movw	r2, #23080	; 0x5a28
   150f0:	movt	r2, #1
   150f4:	b	15134 <table_cell_to_buffer@@Base+0x28c>
   150f8:	mov	r0, r4
   150fc:	mov	r1, r7
   15100:	mov	r2, r6
   15104:	bl	13eac <table_get_double@@Base>
   15108:	vstr	d0, [sp]
   1510c:	movw	r2, #23083	; 0x5a2b
   15110:	movt	r2, #1
   15114:	b	15134 <table_cell_to_buffer@@Base+0x28c>
   15118:	mov	r0, r4
   1511c:	mov	r1, r7
   15120:	mov	r2, r6
   15124:	bl	13ec0 <table_get_ldouble@@Base>
   15128:	vstr	d0, [sp]
   1512c:	movw	r2, #23087	; 0x5a2f
   15130:	movt	r2, #1
   15134:	mov	r0, r5
   15138:	mov	r1, r8
   1513c:	bl	12004 <snprintf@plt>
   15140:	b	151c0 <table_cell_to_buffer@@Base+0x318>
   15144:	mov	r0, r4
   15148:	mov	r1, r7
   1514c:	mov	r2, r6
   15150:	bl	13ed4 <table_get_char@@Base>
   15154:	b	15168 <table_cell_to_buffer@@Base+0x2c0>
   15158:	mov	r0, r4
   1515c:	mov	r1, r7
   15160:	mov	r2, r6
   15164:	bl	13ee8 <table_get_uchar@@Base>
   15168:	mov	r3, r0
   1516c:	movw	r2, #23091	; 0x5a33
   15170:	movt	r2, #1
   15174:	b	151b4 <table_cell_to_buffer@@Base+0x30c>
   15178:	mov	r0, r4
   1517c:	mov	r1, r7
   15180:	mov	r2, r6
   15184:	bl	13efc <table_get_string@@Base>
   15188:	mov	r3, r0
   1518c:	movw	r2, #23077	; 0x5a25
   15190:	movt	r2, #1
   15194:	b	151b4 <table_cell_to_buffer@@Base+0x30c>
   15198:	mov	r0, r4
   1519c:	mov	r1, r7
   151a0:	mov	r2, r6
   151a4:	bl	13d44 <table_get_bool@@Base>
   151a8:	mov	r3, r0
   151ac:	movw	r2, #22895	; 0x596f
   151b0:	movt	r2, #1
   151b4:	mov	r0, r5
   151b8:	mov	r1, r8
   151bc:	bl	12004 <snprintf@plt>
   151c0:	mov	r0, #0
   151c4:	sub	sp, fp, #24
   151c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   151cc:	mov	r0, r4
   151d0:	mov	r1, r7
   151d4:	mov	r2, r6
   151d8:	bl	13f00 <table_get_ptr@@Base>
   151dc:	mov	r3, r0
   151e0:	movw	r2, #23094	; 0x5a36
   151e4:	movt	r2, #1
   151e8:	b	151b4 <table_cell_to_buffer@@Base+0x30c>

000151ec <table_cell_from_buffer@@Base>:
   151ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   151f0:	add	fp, sp, #24
   151f4:	sub	sp, sp, #264	; 0x108
   151f8:	mov	r7, r3
   151fc:	mov	r4, r2
   15200:	mov	r5, r1
   15204:	mov	r6, r0
   15208:	mov	r1, r2
   1520c:	bl	132e8 <table_get_column_data_type@@Base>
   15210:	cmp	r0, #23
   15214:	bhi	15844 <table_cell_from_buffer@@Base+0x658>
   15218:	add	r1, pc, #0
   1521c:	ldr	pc, [r1, r0, lsl #2]
   15220:	andeq	r5, r1, r0, lsl #5
   15224:			; <UNDEFINED> instruction: 0x000152bc
   15228:	strdeq	r5, [r1], -r8
   1522c:	andeq	r5, r1, r4, lsr r3
   15230:	andeq	r5, r1, r0, ror r3
   15234:	andeq	r5, r1, ip, lsr #7
   15238:	andeq	r5, r1, r8, ror #7
   1523c:	andeq	r5, r1, r4, lsr #8
   15240:	andeq	r5, r1, r0, ror #8
   15244:	andeq	r5, r1, r4, lsr #9
   15248:	andeq	r5, r1, r8, ror #9
   1524c:	andeq	r5, r1, r4, lsr #10
   15250:	andeq	r5, r1, r0, ror #10
   15254:	muleq	r1, ip, r5
   15258:	ldrdeq	r5, [r1], -r8
   1525c:	andeq	r5, r1, ip, lsl r6
   15260:	andeq	r5, r1, r0, ror #12
   15264:	muleq	r1, ip, r6
   15268:	ldrdeq	r5, [r1], -r8
   1526c:	andeq	r5, r1, r4, lsl r7
   15270:	andeq	r5, r1, r0, asr r7
   15274:	andeq	r5, r1, ip, lsl #15
   15278:	andeq	r5, r1, r8, asr #15
   1527c:	andeq	r5, r1, ip, lsl #16
   15280:	movw	r1, #22895	; 0x596f
   15284:	movt	r1, #1
   15288:	add	r2, sp, #8
   1528c:	mov	r0, r7
   15290:	bl	12010 <__isoc99_sscanf@plt>
   15294:	mov	r1, r0
   15298:	mvn	r0, #0
   1529c:	cmp	r1, #1
   152a0:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   152a4:	ldr	r3, [sp, #8]
   152a8:	mov	r0, r6
   152ac:	mov	r1, r5
   152b0:	mov	r2, r4
   152b4:	bl	14408 <table_set_int@@Base>
   152b8:	b	15844 <table_cell_from_buffer@@Base+0x658>
   152bc:	movw	r1, #23048	; 0x5a08
   152c0:	movt	r1, #1
   152c4:	add	r2, sp, #8
   152c8:	mov	r0, r7
   152cc:	bl	12010 <__isoc99_sscanf@plt>
   152d0:	mov	r1, r0
   152d4:	mvn	r0, #0
   152d8:	cmp	r1, #1
   152dc:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   152e0:	ldr	r3, [sp, #8]
   152e4:	mov	r0, r6
   152e8:	mov	r1, r5
   152ec:	mov	r2, r4
   152f0:	bl	14430 <table_set_uint@@Base>
   152f4:	b	15844 <table_cell_from_buffer@@Base+0x658>
   152f8:	movw	r1, #23097	; 0x5a39
   152fc:	movt	r1, #1
   15300:	add	r2, sp, #8
   15304:	mov	r0, r7
   15308:	bl	12010 <__isoc99_sscanf@plt>
   1530c:	mov	r1, r0
   15310:	mvn	r0, #0
   15314:	cmp	r1, #1
   15318:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   1531c:	ldrsb	r3, [sp, #8]
   15320:	mov	r0, r6
   15324:	mov	r1, r5
   15328:	mov	r2, r4
   1532c:	bl	14458 <table_set_int8@@Base>
   15330:	b	15844 <table_cell_from_buffer@@Base+0x658>
   15334:	movw	r1, #23102	; 0x5a3e
   15338:	movt	r1, #1
   1533c:	add	r2, sp, #8
   15340:	mov	r0, r7
   15344:	bl	12010 <__isoc99_sscanf@plt>
   15348:	mov	r1, r0
   1534c:	mvn	r0, #0
   15350:	cmp	r1, #1
   15354:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   15358:	ldrb	r3, [sp, #8]
   1535c:	mov	r0, r6
   15360:	mov	r1, r5
   15364:	mov	r2, r4
   15368:	bl	14480 <table_set_uint8@@Base>
   1536c:	b	15844 <table_cell_from_buffer@@Base+0x658>
   15370:	movw	r1, #23061	; 0x5a15
   15374:	movt	r1, #1
   15378:	add	r2, sp, #8
   1537c:	mov	r0, r7
   15380:	bl	12010 <__isoc99_sscanf@plt>
   15384:	mov	r1, r0
   15388:	mvn	r0, #0
   1538c:	cmp	r1, #1
   15390:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   15394:	ldrsh	r3, [sp, #8]
   15398:	mov	r0, r6
   1539c:	mov	r1, r5
   153a0:	mov	r2, r4
   153a4:	bl	144a8 <table_set_int16@@Base>
   153a8:	b	15844 <table_cell_from_buffer@@Base+0x658>
   153ac:	movw	r1, #23065	; 0x5a19
   153b0:	movt	r1, #1
   153b4:	add	r2, sp, #8
   153b8:	mov	r0, r7
   153bc:	bl	12010 <__isoc99_sscanf@plt>
   153c0:	mov	r1, r0
   153c4:	mvn	r0, #0
   153c8:	cmp	r1, #1
   153cc:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   153d0:	ldrh	r3, [sp, #8]
   153d4:	mov	r0, r6
   153d8:	mov	r1, r5
   153dc:	mov	r2, r4
   153e0:	bl	144d0 <table_set_uint16@@Base>
   153e4:	b	15844 <table_cell_from_buffer@@Base+0x658>
   153e8:	movw	r1, #22895	; 0x596f
   153ec:	movt	r1, #1
   153f0:	add	r2, sp, #8
   153f4:	mov	r0, r7
   153f8:	bl	12010 <__isoc99_sscanf@plt>
   153fc:	mov	r1, r0
   15400:	mvn	r0, #0
   15404:	cmp	r1, #1
   15408:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   1540c:	ldr	r3, [sp, #8]
   15410:	mov	r0, r6
   15414:	mov	r1, r5
   15418:	mov	r2, r4
   1541c:	bl	144f8 <table_set_int32@@Base>
   15420:	b	15844 <table_cell_from_buffer@@Base+0x658>
   15424:	movw	r1, #23048	; 0x5a08
   15428:	movt	r1, #1
   1542c:	add	r2, sp, #8
   15430:	mov	r0, r7
   15434:	bl	12010 <__isoc99_sscanf@plt>
   15438:	mov	r1, r0
   1543c:	mvn	r0, #0
   15440:	cmp	r1, #1
   15444:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   15448:	ldr	r3, [sp, #8]
   1544c:	mov	r0, r6
   15450:	mov	r1, r5
   15454:	mov	r2, r4
   15458:	bl	14520 <table_set_uint32@@Base>
   1545c:	b	15844 <table_cell_from_buffer@@Base+0x658>
   15460:	movw	r1, #23051	; 0x5a0b
   15464:	movt	r1, #1
   15468:	add	r2, sp, #8
   1546c:	mov	r0, r7
   15470:	bl	12010 <__isoc99_sscanf@plt>
   15474:	mov	r1, r0
   15478:	mvn	r0, #0
   1547c:	cmp	r1, #1
   15480:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   15484:	ldr	r0, [sp, #8]
   15488:	ldr	r1, [sp, #12]
   1548c:	stm	sp, {r0, r1}
   15490:	mov	r0, r6
   15494:	mov	r1, r5
   15498:	mov	r2, r4
   1549c:	bl	14548 <table_set_int64@@Base>
   154a0:	b	15844 <table_cell_from_buffer@@Base+0x658>
   154a4:	movw	r1, #23056	; 0x5a10
   154a8:	movt	r1, #1
   154ac:	add	r2, sp, #8
   154b0:	mov	r0, r7
   154b4:	bl	12010 <__isoc99_sscanf@plt>
   154b8:	mov	r1, r0
   154bc:	mvn	r0, #0
   154c0:	cmp	r1, #1
   154c4:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   154c8:	ldr	r0, [sp, #8]
   154cc:	ldr	r1, [sp, #12]
   154d0:	stm	sp, {r0, r1}
   154d4:	mov	r0, r6
   154d8:	mov	r1, r5
   154dc:	mov	r2, r4
   154e0:	bl	1457c <table_set_uint64@@Base>
   154e4:	b	15844 <table_cell_from_buffer@@Base+0x658>
   154e8:	movw	r1, #23061	; 0x5a15
   154ec:	movt	r1, #1
   154f0:	add	r2, sp, #8
   154f4:	mov	r0, r7
   154f8:	bl	12010 <__isoc99_sscanf@plt>
   154fc:	mov	r1, r0
   15500:	mvn	r0, #0
   15504:	cmp	r1, #1
   15508:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   1550c:	ldrsh	r3, [sp, #8]
   15510:	mov	r0, r6
   15514:	mov	r1, r5
   15518:	mov	r2, r4
   1551c:	bl	145b0 <table_set_short@@Base>
   15520:	b	15844 <table_cell_from_buffer@@Base+0x658>
   15524:	movw	r1, #23065	; 0x5a19
   15528:	movt	r1, #1
   1552c:	add	r2, sp, #8
   15530:	mov	r0, r7
   15534:	bl	12010 <__isoc99_sscanf@plt>
   15538:	mov	r1, r0
   1553c:	mvn	r0, #0
   15540:	cmp	r1, #1
   15544:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   15548:	ldrh	r3, [sp, #8]
   1554c:	mov	r0, r6
   15550:	mov	r1, r5
   15554:	mov	r2, r4
   15558:	bl	145d8 <table_set_ushort@@Base>
   1555c:	b	15844 <table_cell_from_buffer@@Base+0x658>
   15560:	movw	r1, #23069	; 0x5a1d
   15564:	movt	r1, #1
   15568:	add	r2, sp, #8
   1556c:	mov	r0, r7
   15570:	bl	12010 <__isoc99_sscanf@plt>
   15574:	mov	r1, r0
   15578:	mvn	r0, #0
   1557c:	cmp	r1, #1
   15580:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   15584:	ldr	r3, [sp, #8]
   15588:	mov	r0, r6
   1558c:	mov	r1, r5
   15590:	mov	r2, r4
   15594:	bl	14600 <table_set_long@@Base>
   15598:	b	15844 <table_cell_from_buffer@@Base+0x658>
   1559c:	movw	r1, #23073	; 0x5a21
   155a0:	movt	r1, #1
   155a4:	add	r2, sp, #8
   155a8:	mov	r0, r7
   155ac:	bl	12010 <__isoc99_sscanf@plt>
   155b0:	mov	r1, r0
   155b4:	mvn	r0, #0
   155b8:	cmp	r1, #1
   155bc:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   155c0:	ldr	r3, [sp, #8]
   155c4:	mov	r0, r6
   155c8:	mov	r1, r5
   155cc:	mov	r2, r4
   155d0:	bl	14628 <table_set_ulong@@Base>
   155d4:	b	15844 <table_cell_from_buffer@@Base+0x658>
   155d8:	movw	r1, #23051	; 0x5a0b
   155dc:	movt	r1, #1
   155e0:	add	r2, sp, #8
   155e4:	mov	r0, r7
   155e8:	bl	12010 <__isoc99_sscanf@plt>
   155ec:	mov	r1, r0
   155f0:	mvn	r0, #0
   155f4:	cmp	r1, #1
   155f8:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   155fc:	ldr	r0, [sp, #8]
   15600:	ldr	r1, [sp, #12]
   15604:	stm	sp, {r0, r1}
   15608:	mov	r0, r6
   1560c:	mov	r1, r5
   15610:	mov	r2, r4
   15614:	bl	14650 <table_set_llong@@Base>
   15618:	b	15844 <table_cell_from_buffer@@Base+0x658>
   1561c:	movw	r1, #23056	; 0x5a10
   15620:	movt	r1, #1
   15624:	add	r2, sp, #8
   15628:	mov	r0, r7
   1562c:	bl	12010 <__isoc99_sscanf@plt>
   15630:	mov	r1, r0
   15634:	mvn	r0, #0
   15638:	cmp	r1, #1
   1563c:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   15640:	ldr	r0, [sp, #8]
   15644:	ldr	r1, [sp, #12]
   15648:	stm	sp, {r0, r1}
   1564c:	mov	r0, r6
   15650:	mov	r1, r5
   15654:	mov	r2, r4
   15658:	bl	14684 <table_set_ullong@@Base>
   1565c:	b	15844 <table_cell_from_buffer@@Base+0x658>
   15660:	movw	r1, #23080	; 0x5a28
   15664:	movt	r1, #1
   15668:	add	r2, sp, #8
   1566c:	mov	r0, r7
   15670:	bl	12010 <__isoc99_sscanf@plt>
   15674:	mov	r1, r0
   15678:	mvn	r0, #0
   1567c:	cmp	r1, #1
   15680:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   15684:	vldr	s0, [sp, #8]
   15688:	mov	r0, r6
   1568c:	mov	r1, r5
   15690:	mov	r2, r4
   15694:	bl	146b8 <table_set_float@@Base>
   15698:	b	15844 <table_cell_from_buffer@@Base+0x658>
   1569c:	movw	r1, #23083	; 0x5a2b
   156a0:	movt	r1, #1
   156a4:	add	r2, sp, #8
   156a8:	mov	r0, r7
   156ac:	bl	12010 <__isoc99_sscanf@plt>
   156b0:	mov	r1, r0
   156b4:	mvn	r0, #0
   156b8:	cmp	r1, #1
   156bc:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   156c0:	vldr	d0, [sp, #8]
   156c4:	mov	r0, r6
   156c8:	mov	r1, r5
   156cc:	mov	r2, r4
   156d0:	bl	146e0 <table_set_double@@Base>
   156d4:	b	15844 <table_cell_from_buffer@@Base+0x658>
   156d8:	movw	r1, #23087	; 0x5a2f
   156dc:	movt	r1, #1
   156e0:	add	r2, sp, #8
   156e4:	mov	r0, r7
   156e8:	bl	12010 <__isoc99_sscanf@plt>
   156ec:	mov	r1, r0
   156f0:	mvn	r0, #0
   156f4:	cmp	r1, #1
   156f8:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   156fc:	vldr	d0, [sp, #8]
   15700:	mov	r0, r6
   15704:	mov	r1, r5
   15708:	mov	r2, r4
   1570c:	bl	14708 <table_set_ldouble@@Base>
   15710:	b	15844 <table_cell_from_buffer@@Base+0x658>
   15714:	movw	r1, #23091	; 0x5a33
   15718:	movt	r1, #1
   1571c:	add	r2, sp, #8
   15720:	mov	r0, r7
   15724:	bl	12010 <__isoc99_sscanf@plt>
   15728:	mov	r1, r0
   1572c:	mvn	r0, #0
   15730:	cmp	r1, #1
   15734:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   15738:	ldrb	r3, [sp, #8]
   1573c:	mov	r0, r6
   15740:	mov	r1, r5
   15744:	mov	r2, r4
   15748:	bl	14750 <table_set_char@@Base>
   1574c:	b	15844 <table_cell_from_buffer@@Base+0x658>
   15750:	movw	r1, #23091	; 0x5a33
   15754:	movt	r1, #1
   15758:	add	r2, sp, #8
   1575c:	mov	r0, r7
   15760:	bl	12010 <__isoc99_sscanf@plt>
   15764:	mov	r1, r0
   15768:	mvn	r0, #0
   1576c:	cmp	r1, #1
   15770:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   15774:	ldrb	r3, [sp, #8]
   15778:	mov	r0, r6
   1577c:	mov	r1, r5
   15780:	mov	r2, r4
   15784:	bl	14778 <table_set_uchar@@Base>
   15788:	b	15844 <table_cell_from_buffer@@Base+0x658>
   1578c:	movw	r1, #23077	; 0x5a25
   15790:	movt	r1, #1
   15794:	add	r2, sp, #8
   15798:	mov	r0, r7
   1579c:	bl	12010 <__isoc99_sscanf@plt>
   157a0:	mov	r1, r0
   157a4:	mvn	r0, #0
   157a8:	cmp	r1, #1
   157ac:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   157b0:	add	r3, sp, #8
   157b4:	mov	r0, r6
   157b8:	mov	r1, r5
   157bc:	mov	r2, r4
   157c0:	bl	14730 <table_set_string@@Base>
   157c4:	b	15844 <table_cell_from_buffer@@Base+0x658>
   157c8:	movw	r1, #22895	; 0x596f
   157cc:	movt	r1, #1
   157d0:	add	r2, sp, #8
   157d4:	mov	r0, r7
   157d8:	bl	12010 <__isoc99_sscanf@plt>
   157dc:	mov	r1, r0
   157e0:	mvn	r0, #0
   157e4:	cmp	r1, #1
   157e8:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   157ec:	ldr	r3, [sp, #8]
   157f0:	cmp	r3, #0
   157f4:	movwne	r3, #1
   157f8:	mov	r0, r6
   157fc:	mov	r1, r5
   15800:	mov	r2, r4
   15804:	bl	143e0 <table_set_bool@@Base>
   15808:	b	15844 <table_cell_from_buffer@@Base+0x658>
   1580c:	movw	r1, #23094	; 0x5a36
   15810:	movt	r1, #1
   15814:	add	r2, sp, #8
   15818:	mov	r0, r7
   1581c:	bl	12010 <__isoc99_sscanf@plt>
   15820:	mov	r1, r0
   15824:	mvn	r0, #0
   15828:	cmp	r1, #1
   1582c:	bne	15848 <table_cell_from_buffer@@Base+0x65c>
   15830:	ldr	r3, [sp, #8]
   15834:	mov	r0, r6
   15838:	mov	r1, r5
   1583c:	mov	r2, r4
   15840:	bl	147a0 <table_set_ptr@@Base>
   15844:	mov	r0, #0
   15848:	sub	sp, fp, #24
   1584c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015850 <table_cell_nullify@@Base>:
   15850:	push	{r4, sl, fp, lr}
   15854:	add	fp, sp, #8
   15858:	bl	14e40 <table_get_cell_ptr@@Base>
   1585c:	mov	r4, r0
   15860:	ldr	r0, [r0]
   15864:	cmp	r0, #0
   15868:	beq	15878 <table_cell_nullify@@Base+0x28>
   1586c:	bl	11f98 <free@plt>
   15870:	mov	r0, #0
   15874:	str	r0, [r4]
   15878:	mov	r0, #0
   1587c:	pop	{r4, sl, fp, pc}

00015880 <__libc_csu_init@@Base>:
   15880:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15884:	mov	r7, r0
   15888:	ldr	r6, [pc, #72]	; 158d8 <__libc_csu_init@@Base+0x58>
   1588c:	ldr	r5, [pc, #72]	; 158dc <__libc_csu_init@@Base+0x5c>
   15890:	add	r6, pc, r6
   15894:	add	r5, pc, r5
   15898:	sub	r6, r6, r5
   1589c:	mov	r8, r1
   158a0:	mov	r9, r2
   158a4:	bl	11f60 <strcmp@plt-0x20>
   158a8:	asrs	r6, r6, #2
   158ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   158b0:	mov	r4, #0
   158b4:	add	r4, r4, #1
   158b8:	ldr	r3, [r5], #4
   158bc:	mov	r2, r9
   158c0:	mov	r1, r8
   158c4:	mov	r0, r7
   158c8:	blx	r3
   158cc:	cmp	r6, r4
   158d0:	bne	158b4 <__libc_csu_init@@Base+0x34>
   158d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   158d8:	andeq	r0, r1, r4, ror r6
   158dc:	andeq	r0, r1, ip, ror #12

000158e0 <__libc_csu_fini@@Base>:
   158e0:	bx	lr

Disassembly of section .fini:

000158e4 <.fini>:
   158e4:	push	{r3, lr}
   158e8:	pop	{r3, pc}
